fsubrp
ja
mov
stos
xorl
xor
arpl
mov
enter
xor
movsb
bound
inc
jle
dec
mov
arpl
cmp
out
adc
sbb
xchg
nop
push
test
xchg
mov
dec
fadd
in
arpl
mov
out
sbb
mov
and
pusha
jne
cmpl
out
mov
cwtl
xor
sub
mov
add
in
scas
mov
dec
sbb
ja
aad
jb
mov
rolb
inc
push
sub
pop
sub
cmp
jo
or
add
gs
jecxz
inc
xor
loope
add
fdivs
dec
mov
push
sahf
sub
outsb
and
imul
cmp
stos
cmp
mov
and
int3
jno
xor
enter
cwtl
aam
xor
push
insb
mov
mov
leave
scas
lea
stc
jmp
mov
out
shll
popa
aas
mov
adc
jmp
push
out
push
shll
into
xchg
jne
lret
inc
xchg
shlb
sub
ret
ret
inc
sbb
lahf
mov
push
adc
in
mov
das
jno
xor
pop
and
pop
cs
insl
je
xchg
dec
push
jb
ds
push
dec
mulb
dec
push
outsb
stos
mov
cmp
call
sub
mov
cmc
aaa
xor
loope
sbb
fs
push
cmp
insb
push
mov
xchg
mov
mov
push
outsb
sarb
jae
ja
popl
mov
addr16
fwait
push
xor
xchg
call
lods
mov
push
jmp
jo
lea
pop
lods
xchg
or
aam
jmp
ss
add
inc
inc
mov
daa
add
pop
adc
out
add
and
popf
jle
ljmp
push
into
xor
and
cmp
leave
add
lret
out
loopne
insb
fdivr
sbb
and
pop
mov
cmpl
stos
aad
mov
lcall
std
jp
sub
les
loopne
sbb
icebp
xchg
out
push
sbb
pushf
or
pop
fwait
mov
rcr
mov
daa
mov
loopne
xor
test
in
std
add
fyl2x
aad
xor
popa
pop
xchg
or
and
leave
cmpsb
pop
mov
icebp
ret
xchg
ret
aad
adc
cmp
xor
push
roll
testl
mov
sub
sbb
adc
test
mov
xchg
sub
dec
jl
ss
loop
aad
mov
nop
outsb
or
dec
lcall
lds
stos
mov
add
arpl
loopne
mov
pop
jg
and
cwtl
arpl
jnp
pop
cs
jge
test
cmp
icebp
jmp
testl
jo
mov
mov
xchg
int
test
call
nop
xor
mov
add
sbb
xor
fs
or
inc
xchg
into
mov
add
or
and
gs
xchg
outsb
fmulp
cmpsb
xchg
cmc
xchg
adc
jle
jle
mov
add
cmc
and
gs
insl
outsb
mov
adc
test
inc
daa
jo
mov
imul
or
push
push
dec
addb
ret
xor
clc
shr
xor
outsb
cwtl
outsb
test
loopne
pushf
xchg
int3
sahf
mov
bound
std
repnz
ljmp
mov
ds
mov
stos
popf
mov
int
pop
or
jle
iret
insl
adc
cmp
add
adc
divl
jle
xor
neg
lea
shr
inc
push
jg
aad
movsb
popa
imul
dec
jge
adc
cs
and
imul
stc
and
movsl
xchg
xchg
gs
xchg
sahf
mov
test
add
dec
gs
popa
addr16
outsl
js
add
inc
lock
pushl
push
lea
jae
ror
stc
movzbw
mov
shld
bsf
mov
bsf
mov
call
icebp
jno
adc
sbb
dec
inc
jae
imul
xchg
lret
in
xorl
mov
xchg
movsl
aaa
xor
lds
xchg
enter
sbbb
test
pop
add
add
adc
sub
dec
mov
popa
pop
insl
xor
xchg
imul
repz
addr16
fcompl
lds
aas
and
and
pusha
lea
jne
test
cmp
xor
push
call
add
bt
push
pushf
cmp
test
jmp
pop
mov
adc
cmpsb
add
sti
cmc
aas
add
add
imul
push
shrl
iret
pop
jg
icebp
lea
mov
mov
in
xor
in
shlb
dec
pop
jle
adc
adc
adc
mov
push
cld
cmp
sub
adc
pushf
nop
test
shl
pushf
cld
mov
fisubrs
cld
cld
add
jmp
fsubl
xchg
adc
cmpsb
jg
dec
mov
das
adc
addr16
lahf
movsl
xchg
mov
fs
aad
mov
popf
fsts
mov
popf
lcall
push
imul
je
mov
jbe
imulb
pop
adc
dec
push
jo
cmp
pop
pop
movsb
adcb
lret
mov
xorb
and
inc
mov
cmp
mov
test
and
nop
dec
inc
aas
cmpsl
lcall
rorb
sub
or
rorl
pushf
jmp
xchg
call
xor
cmpsb
pushf
xchg
mov
insb
dec
mov
mov
scas
daa
adc
insl
clc
mov
out
clc
imul
lcall
add
push
and
push
sub
aaa
insb
fsubr
mov
pop
mov
pop
daa
aad
aad
pop
mov
aad
xor
aad
std
movsl
jnp
jo
pop
mov
xchg
xor
adc
lahf
cmp
mov
lahf
movsl
mov
test
mov
adc
mov
or
cmp
xor
in
xor
insb
inc
cwtl
test
inc
push
inc
jne
je
les
dec
adc
imul
adc
je
xor
xor
cld
popaw
test
lods
imulb
loop
js
cs
and
pushf
repnz
mov
cmpsb
mov
cmpsl
push
in
imul
add
test
clc
cmp
add
pusha
movb
push
lea
jmp
pop
ficoml
mov
adc
dec
ja
dec
inc
cmp
cmp
pop
push
sahf
xor
jl
or
stc
or
and
xor
mov
enter
pop
insl
mov
inc
push
mov
cld
mov
add
ss
sahf
dec
adc
or
push
mov
fidivl
adc
jp
inc
addb
push
jae
mov
mov
push
adcb
lret
push
mov
cmp
jne
push
adc
pop
xchg
mov
pop
ja
mov
inc
sbb
imul
jle
xchg
inc
fimuls
fldt
fmul
es
push
pushf
push
data16
sub
push
fs
cmp
sbb
jp
fs
imulb
or
push
and
stos
ja
jb
int
test
cld
out
mov
out
adc
aam
rclb
mov
das
lods
mov
or
stos
ja
out
cmp
leave
or
add
daa
cmc
add
sarb
mov
pop
js
push
push
mov
fdivs
push
xchg
pushf
mov
bound
fucom
cltd
daa
pop
nop
lods
mov
jg
xchg
ret
neg
ljmp
shlb
cmpsl
lahf
mov
dec
mov
mov
add
and
lock
ss
fcompl
push
into
mov
jecxz
cs
pop
fdivs
fildll
mov
pop
out
aas
aaa
dec
in
jbe
scas
bound
pop
pop
dec
in
filds
ljmp
std
cmpsb
clc
rorl
call
in
in
aad
loope
cmc
in
insl
shlb
sbb
jmp
test
jns
sub
adc
and
xor
xor
jp
add
push
xchg
in
nop
scas
jp
mov
decb
in
enter
add
cmpsl
jae
add
mov
pop
or
cli
xchg
mov
push
or
push
lock
movsl
mov
mov
aad
call
or
outsl
jecxz
pop
xchg
mov
pop
ret
cwtl
xor
popa
xor
pop
repz
hlt
sub
call
lock
iret
lods
or
mov
xchg
pop
cwtl
jns
mov
test
mov
iret
mov
or
mov
dec
mov
xchg
xor
xchg
fnstenv
sbb
dec
sbb
popf
fxch
scas
call
dec
sbb
js
push
mov
or
pushl
daa
add
inc
push
inc
push
dec
xor
cs
insb
add
or
mov
xor
xchg
gs
pop
jae
imul
jnp
fildll
mov
or
mov
jl
inc
push
aad
ret
cmpsl
cmc
sub
sub
inc
sbb
mov
jg
inc
jle
mov
shrb
adc
stc
xchg
mov
adc
and
lahf
inc
mov
adc
scas
dec
sub
dec
sub
addr16
xchg
insl
push
cmp
in
and
add
leave
aas
roll
loopne
push
ds
sahf
bound
ret
xor
ss
mov
mov
imul
in
mov
push
mov
inc
das
cwtl
dec
mov
hlt
adc
jae
aad
clc
mov
mov
hlt
cmp
cmp
pop
sub
outsb
adc
lret
rcrl
hlt
sbb
jne
mov
mov
mov
aas
jae
cmpxchg
shl
stc
push
lock
jg
imul
mov
adc
std
lret
or
add
mov
sarl
pop
push
and
cmc
pusha
call
cmc
jae
or
add
jg
push
jae
dec
cmp
sahf
pop
gs
adc
xchg
loope
cs
sahf
jmp
sahf
inc
cs
mov
cmp
dec
mov
dec
daa
ljmp
push
cmp
shr
xchg
aad
or
fucom
in
vpsubsw
int
sbb
mov
fs
arpl
ret
xchg
mov
fstpt
cmpsb
cwtl
movq
outsl
pop
imul
or
gs
cmp
sub
inc
or
pusha
xchg
adc
fistpl
scas
scas
iret
jno
pop
clc
cmpsl
xchg
and
push
nop
jl
fiadds
fnstcw
sahf
push
bound
pop
ss
dec
mov
add
adc
ljmp
xor
fs
insb
add
jno
or
mov
mov
int3
fcoms
mov
lock
mov
in
fcmovnu
or
test
add
push
and
lret
xor
jmp
iret
mov
xor
pop
inc
daa
aas
dec
pop
pop
jae
jge
int3
cmc
hlt
js
stos
mov
xchg
mov
movl
jmp
mov
cmpsb
dec
sub
jae
xchg
pop
lods
movsl
aam
insl
es
push
or
jl
sbb
push
icebp
in
inc
in
push
pop
in
push
mov
xor
std
push
sbb
xor
mov
adc
lahf
call
into
mov
cs
pop
pop
andb
sub
ret
dec
aaa
imul
in
mov
sbb
int3
add
arpl
call
jo
mov
mov
aad
xor
jmp
in
leave
inc
outsl
shll
jmp
sti
imul
mov
mov
je
pusha
push
xchg
fcomp
stos
cmpsb
mov
outsb
jb
mov
lret
stos
adcl
lods
pushf
sbb
mov
enter
rolb
dec
and
xchg
cli
jne
test
sub
sbb
xchg
or
or
lds
add
lea
jge
mov
and
out
pop
jmp
sub
mov
out
fwait
jnp
push
xor
or
cmp
and
ja
dec
adc
out
pop
les
pop
mov
mov
inc
out
jae
adc
in
mov
mul
test
jae
add
rorl
mov
outsl
dec
out
sub
and
mov
dec
mov
rcl
shr
in
adc
or
vandps
scas
out
jg
testb
cmpsb
jmp
icebp
mov
mov
add
ss
push
sub
insl
test
and
inc
arpl
dec
push
pop
aam
push
adc
stos
sbb
fs
je
bound
mov
push
xchg
test
rorl
fwait
mov
adc
repnz
lods
dec
xor
nop
push
push
in
sbb
mov
xor
mov
faddp
cltd
push
imul
jle
rol
push
stos
mov
sti
mov
loope
mov
cli
cmp
inc
pop
push
sahf
dec
sbbb
adc
and
enter
cmpsb
dec
push
push
push
or
inc
outsb
pop
cmp
or
and
imul
fcompl
cli
clc
xor
add
jnp
or
pop
push
push
imul
dec
movsb
std
imul
pushf
mov
ffree
mov
lret
mov
lock
je
cmp
orb
dec
popf
mov
jno
xchg
mov
repz
inc
cmp
add
push
xor
not
or
stos
or
mov
lret
in
hlt
or
das
shrl
add
and
and
xchg
jno
call
addb
test
jl
mov
push
xchg
insl
adcb
sbb
push
gs
inc
fistpl
cmp
pop
mov
mov
mov
pusha
cmp
dec
in
aaa
not
dec
repnz
mov
ret
xor
push
dec
dec
aaa
mov
cmp
aas
inc
aaa
push
pop
dec
jnp
lock
clc
xchg
cmp
xor
inc
pusha
push
mov
xchg
mov
data16
jo
das
or
xchg
fdivl
add
leave
loope
int3
mov
sbb
sbb
push
divb
cmp
mov
sbb
pop
cmpsl
popf
xorl
popa
jae
in
xor
inc
xchg
or
add
jae
leave
popa
sbb
pop
dec
jb
xor
add
dec
jae
test
mov
cmp
mov
test
push
mov
xchg
adcl
xor
fnstsw
push
or
in
lret
lock
out
push
pop
cmp
outsl
pop
iret
int
rcrl
ss
mov
xlat
jge
popa
xor
xorb
cli
stos
add
pushf
jb
cmp
out
adc
lods
inc
add
cmp
test
test
xor
cmp
xor
push
cli
sbb
add
add
cs
pop
enter
sbb
insb
or
in
pushf
adc
jmp
xor
invd
mov
outsb
cmp
pop
pop
and
sub
sbb
sub
out
or
xchg
jbe
push
mov
sbb
lea
retw
sub
cmp
push
ret
ret
daa
pop
inc
mov
loopne
inc
lods
testl
stos
popa
xchg
sbb
pop
movsb
scas
xor
xchg
sbb
cld
movsl
arpl
mov
inc
xor
push
dec
mov
sahf
and
inc
stos
decl
stc
and
xchg
jns
jne
jns
push
mov
bound
lret
xor
pop
mov
and
inc
bound
xchg
jae
xchg
test
movsl
sti
and
mov
and
ss
in
cmp
sub
jb
mov
or
xchg
jg
mov
cmpb
movsb
les
push
push
ds
addl
scas
loop
push
gs
arpl
xorl
mov
hlt
rep
daa
push
das
cmp
push
mov
and
incl
pop
pop
and
jb
mov
js
imul
movsl
mov
leave
popf
fcoml
adc
jle
xchg
fs
xchg
bound
mov
pop
cmpsb
negl
and
pop
aad
fcompl
pop
xchg
fdivrs
mov
sub
pop
in
xchg
cmp
and
push
call
cwtl
pop
hlt
adc
mov
mov
js
movsb
fsubrs
mov
sub
jo
scas
test
hlt
movsl
call
jge
xchg
mov
jbe
xchg
ret
mov
rorl
mov
adc
xor
lds
dec
insl
jns
vpaddb
in
jns
aas
pusha
pop
xor
xchg
popa
add
xchg
or
mov
push
std
push
call
fwait
jae
sub
movsb
mov
cmp
pop
out
cltd
repnz
push
jmp
xchg
data16
int
sbb
int3
aam
out
in
cltd
repz
cltd
stc
mov
mov
in
in
fcmovnu
xchg
xlat
mov
scas
lret
pop
sub
cltd
or
push
testl
cmpsb
cmc
insl
mov
mov
jge
int
in
jb
mov
dec
rorb
dec
gs
pop
orl
add
aas
dec
repz
inc
mov
test
cmp
je
and
repz
clc
lods
add
shll
pop
push
outsb
fldenv
or
xlat
mov
adc
add
mov
adc
daa
push
mov
cltd
mov
sti
pop
pop
pop
fucomip
fistpl
sbb
xchg
aad
test
adc
add
or
add
cmpsb
fidivl
int3
or
scas
mov
jb
popf
stc
xor
sbb
orl
enter
ljmp
sub
ret
pusha
mov
add
push
xchg
xlat
testl
mov
ret
pop
loop
fldl
inc
sub
add
add
adc
inc
add
pusha
mov
aad
mov
xor
add
outsl
cltd
jg
iret
leave
ret
mov
clc
mov
mov
inc
fs
aas
int
jo
cmp
or
xchg
arpl
mov
lock
xor
mov
data16
mov
and
clc
mov
pusha
aas
xchg
das
pop
mov
push
int
lea
jnp
stos
and
mov
pushf
xchg
sbbl
sbb
clc
cld
sub
stos
dec
sti
pop
mull
adc
mov
cmp
inc
sub
or
inc
je
stos
push
rorl
pusha
std
dec
stc
jl
jae
shrb
sub
mov
pop
jo
cli
xorl
pop
xchg
mov
test
mov
xchg
dec
mov
iret
js
addr16
imul
stos
shll
dec
mov
arpl
repnz
dec
add
cmpsb
ds
idiv
push
cmp
cmp
test
xchg
outsb
xchg
push
cmp
sbb
push
int
stc
aad
adc
cmp
in
pop
pop
mov
xchg
clc
mov
add
and
in
mov
and
jnp
pop
pop
mul
stc
mov
push
or
cmp
ja
orb
fnstsw
xchg
addr16
pop
bound
cld
sbb
insb
fs
nop
pushf
mov
mov
clc
stc
cmpb
pusha
lea
jne
or
xor
adc
aaa
ror
shl
mov
rcr
pushf
add
not
add
mov
pushf
stc
test
mov
jmp
xor
add
aad
loope
loope
fisttpll
cmp
sbb
mov
and
jae
js
add
test
inc
pop
push
ljmp
shlb
ja
and
jb
mov
or
mov
xchg
imul
test
data16
push
shlb
cwtl
loope
push
sahf
or
push
int3
sbb
aam
add
pop
sub
shr
sti
push
int3
xor
repnz
xor
dec
push
es
int3
test
cltd
adc
dec
jmp
mov
sub
xor
inc
je,pt
push
jo
fnsave
pop
jg
ret
inc
jp
int3
cmp
enter
push
inc
mov
sub
xchg
lock
sub
and
out
add
xor
les
sbb
loopne
jnp
sub
repz
shl
scas
adcl
cmp
sbb
jg
ss
jo
shrb
xor
pop
sbbl
dec
jae
aaa
ja
nop
push
dec
lock
or
outsl
add
cmp
verw
jns
push
add
and
fs
jne
lea
bts
sub
stc
not
stc
aad
mov
dec
or
call
xlat
testl
aad
mov
insb
leave
push
sbb
cli
je
aad
mov
popf
add
out
pop
adc
sub
xchg
loopne
mov
lods
hlt
xchg
add
mov
fstpt
mov
sub
and
movsb
ror
test
adc
mov
jle
in
push
js
call
insl
add
xchg
imul
pop
test
test
xor
add
aas
and
pop
sub
ja
call
movl
mov
js
mov
sbb
jge
imul
fdivrp
mov
or
dec
and
insb
inc
out
sub
push
fs
in
lahf
xchg
aad
and
jp
mov
fildl
inc
lds
mov
pop
jmp
insb
cld
dec
fnsetpm(287
adc
aad
dec
jp
ss
xor
ja
iret
mov
jmp
cmpb
out
mov
mov
add
mov
aas
sbb
sti
xor
inc
jns
es
fs
jp
fs
pusha
inc
call
imul
push
sub
mov
scas
jo
scas
sbb
cmp
scas
stc
pop
loopne
add
test
mov
loop
js
jae
adc
inc
mov
bound
mov
jmp
idivl
sub
imul
add
repnz
mov
sub
mov
test
les
fiaddl
hlt
js
lret
scas
mov
mov
andb
xor
out
jo
push
jecxz
mov
jp
pop
fwait
mov
int3
or
mov
xlat
outsl
jge
movsb
pop
xchg
outsl
mov
adc
inc
mov
mov
in
cmpsl
daa
add
sbb
test
cld
and
or
cs
sub
idiv
out
in
int3
or
clc
mov
add
or
adc
insb
rolb
pusha
and
in
jnp
add
mov
arpl
cmpsl
popf
ret
insl
mov
cmc
push
mov
outsl
std
pushf
dec
push
ret
fnstenv
push
sub
shlb
pop
mov
inc
xchg
inc
push
pop
inc
add
das
push
inc
dec
jnp
xchg
out
sti
repz
repz
repz
decl
ret
insb
mov
xchg
test
adc
sub
fstl
pusha
nop
cmp
push
mov
jno
imul
jae
inc
mov
aad
add
lods
out
and
sbb
or
jne
mov
sbbl
outsb
cltd
mov
and
pushf
mov
std
rcrb
adc
cmp
mov
add
and
nop
adcb
scas
xchg
mov
je
pop
pusha
cmp
dec
sahf
bound
data16
mov
xchg
mov
stc
bt
ror
cmc
pusha
stc
bt
sub
clc
ror
cmp
neg
pushl
cmp
pushl
pushw
popfw
push
inc
jmp
push
stos
cmp
mov
dec
test
test
jnp
push
mov
repnz
push
sub
icebp
cmpsb
inc
mov
shrl
lds
or
or
sbb
push
pop
movsb
jle
and
sub
jl
sub
and
fmull
data16
dec
mov
and
iret
xchg
or
mov
fistl
inc
mov
mov
pop
mov
stc
xchg
xchg
test
sti
xlat
or
or
or
fsub
cmp
adc
and
push
rorb
hlt
push
test
add
jmp
inc
mov
sub
sub
mov
bt
push
xor
bt
repnz
jmp
cmp
test
cmc
add
pushf
pushl
call
rep
movsbw
movsbw
push
mov
push
mov
mov
pushf
lea
jmp
rcl
btc
mov
pusha
call
xor
add
loopne
call
cli
sbb
fmul
out
imul
mov
xorl
fistpl
insl
outsl
outsl
mov
pop
xchg
enter
sarb
push
outsb
shrb
lahf
loop
inc
out
xchg
imul
sub
jmp
js
sub
in
fcomi
rcll
aam
or
sbb
mov
push
add
jmp
xor
inc
jg
xchg
push
test
mov
lock
in
enter
jne
lds
sub
sbb
jmp
jmp
mov
jge
mov
dec
sub
popa
jg
push
pop
scas
fwait
fwait
jmp
jl
fcomp
pop
sti
clc
in
mov
mov
add
xor
inc
and
cmc
divb
inc
lcall
and
js
or
cmp
jns
arpl
pop
jnp
cmpb
movsl
push
mov
outsl
mov
xchg
lahf
lahf
mov
xor
testb
call
or
sti
mov
mov
mul
ds
cs
popa
jecxz
xlat
and
or
jb
mov
mov
sahf
adc
sub
lods
xchg
cmp
xor
leave
pop
jmp
fsubs
loop
jo
jecxz
sub
les
lea
enter
fadds
pop
sqrtps
mov
sub
jmp
or
pop
gs
cmp
jns
jae
jno
mov
cmp
add
je
popa
jbe
inc
imul
add
cmpsb
jmp
imul
fcompl
dec
jns
mov
mov
lret
test
jnp
inc
sbb
xchg
push
pop
popf
sbb
je,pn
rcll
push
pop
aaa
mov
out
clc
lcall
mov
mov
dec
sub
jg
cld
xchg
or
xor
cli
mov
lea
jb
push
adc
mov
clc
lcall
xor
repz
sbb
lret
sbb
outsl
sti
mov
rcrb
mulb
popa
mov
lret
lds
cmp
lock
loop
mov
arpl
in
cli
in
lcall
xchg
ret
out
mov
into
and
scas
cmp
adc
mov
cmpsb
mov
inc
jge
mov
dec
push
mov
pop
negl
sahf
mov
fsubrl
push
stos
pushf
sahf
fmull
adc
repnz
idivl
push
out
mov
pop
ss
test
dec
inc
fadds
inc
gs
shlb
test
sbb
scas
sbb
pop
sti
pop
push
pop
jmp
mov
jo
push
mov
or
aas
pushf
jmp
dec
push
or
sahf
and
test
jmp
xor
fs
sub
je
js
mov
ret
es
mov
inc
and
mov
push
pushf
lea
jmp
out
inc
mov
cmp
cmp
mov
lea
jle
in
testb
mov
jno
cltd
hlt
test
fisubl
scas
imul
or
int3
stos
cmp
stos
popf
repnz
xchg
testl
aam
jno
sub
dec
jg
rclb
mov
xor
stc
add
inc
xchg
add
shrl
jl
push
push
cs
les
cmp
clc
pinsrw
in
jg
jnp
cmpsl
repz
cmpsl
mov
mov
jl
mov
cwtl
or
push
inc
inc
pop
jle
push
push
push
int
addl
push
add
aam
inc
cmp
mov
xchg
mov
mov
stos
scas
sbb
mov
sbb
mov
push
or
mov
cmpsb
pop
mov
in
and
stc
sub
sub
frstor
dec
sub
imul
iret
mov
aad
push
lock
sub
ljmp
xchg
ret
mov
jmp
mov
cmpsb
ljmp
mov
mov
mov
and
jno
or
or
shll
dec
movsb
enter
flds
pop
cmpb
int
jl
enter
and
or
jp
and
icebp
or
jo
pop
xchg
scas
fcomi
xor
add
sahf
insb
jg
leave
pop
pop
std
sbb
mov
jo
mov
or
ja
rol
int3
and
add
inc
inc
xor
cmpsb
ljmp
subl
les
pushf
mov
mov
jmp
or
test
lret
shlb
lret
into
inc
mov
jmp
and
aad
mov
mov
cmpsb
mov
xchg
stos
mov
xor
pusha
ror
popw
inc
mov
sbb
fldt
sbb
shl
inc
cmpsb
repnz
fisttpll
push
inc
adc
das
popa
cmpl
popa
push
dec
mov
push
cmc
insl
dec
and
aam
testl
and
push
pop
aaa
popa
inc
test
jg
xlat
addr16
mov
adc
aas
mov
iret
mov
lret
movsb
jl
fstpt
xor
xchg
outsl
or
adc
je
jle
inc
cmp
jp
xchg
in
push
cmpsl
mov
mov
ds
sbb
mov
inc
int
mov
pop
out
mov
jge
rol
cmpsl
and
cld
test
lock
repnz
push
push
sbb
and
push
xor
in
andb
stos
xchg
mov
inc
jne
dec
lahf
imul
mov
mov
sbb
mov
dec
mov
leave
daa
cltd
in
int3
int
pushf
movsb
cmpsb
xor
dec
scas
or
cmpsb
jp
xchg
and
inc
adc
mov
and
cmc
cmp
xor
daa
dec
mov
mov
shlb
mov
inc
in
lock
in
je
and
enter
shll
in
dec
inc
dec
jo
into
or
lret
out
lret
or
xor
mov
testb
out
or
xor
jl
add
sahf
cmpsb
add
inc
les
scas
cmpsb
push
test
mov
push
mov
or
ljmp
daa
xchg
cmp
pop
pop
mov
pop
add
sub
jno
xchg
and
sbb
adc
pop
adc
daa
bsf
decl
push
mov
loop
adc
push
in
cmp
mov
int3
or
aaa
jns
lret
sar
jmp
xlat
sti
add
addr16
repnz
cmp
lock
jb
push
pushl
ret
pusha
lea
jbe
neg
sub
shl
stc
mov
btc
xadd
sbb
mov
bswap
neg
xor
add
not
movzbw
shr
rcl
btr
mov
shl
add
movzbw
pusha
movsbw
mov
lea
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
and
out
and
push
movb
mov
movb
pusha
pushl
ret
xor
cmc
mov
mov
ret
shrb
cld
cmp
test
cmpsb
push
nop
mov
sbb
sahf
mov
bound
test
mov
outsl
lods
jo
rorb
mov
xchg
dec
pop
sete
mov
sbb
push
bswap
jmp
or
ljmp
add
adc
bound
inc
xchg
into
fidivrs
rcrl
daa
add
cmpsb
cmp
adc
jmp
mov
stc
sbb
and
insl
xchg
out
int3
lods
mov
rorb
lret
jb
xchg
mov
pop
jns
sbb
or
js
adc
js
test
xor
ret
mov
std
ja
dec
addb
std
arpl
arpl
je
sbb
cwtl
fadd
mov
in
cld
call
pusha
or
stc
mov
test
cmp
sub
push
jmp
das
dec
ret
cmpsb
stos
xchg
xchg
or
add
or
fadds
jbe
insl
cmpsl
mov
dec
aam
scas
xchg
clc
mov
dec
cld
xor
scas
cmpsl
mov
xchg
xchg
into
pop
pop
fwait
inc
stos
call
push
xor
sar
nop
push
add
pop
mov
inc
cmp
xchg
test
xor
cmpb
xor
sbb
roll
rol
cltd
pop
dec
inc
jle,pn
adc
dec
or
int3
and
dec
inc
push
jbe
xchg
pop
mov
pop
cmc
push
ljmp
lea
jmp
mov
pushf
movb
mov
lods
cmc
stc
neg
jmp
pushl
pusha
pushl
popl
cmp
call
jmp
pop
xchg
sub
mov
push
imul
push
and
xchg
lock
ds
sub
mov
aaa
adc
fwait
enter
mov
dec
mov
push
sbb
stc
or
loopne
std
add
xchg
jae
cld
or
jmp
fs
fisubs
dec
xor
stos
stc
aad
loope
in
cmc
aad
adc
pop
push
sar
add
mov
mov
push
outsb
sub
je
lcall
dec
xlat
pop
inc
cmp
or
mov
into
jne
sbb
and
lcall
jnp
test
loopne
push
mov
cltd
sbb
insl
pop
stos
push
das
cmp
fisubrs
sahf
mov
mov
test
js
lods
jge
mov
call
lea
call
push
mov
pusha
push
push
push
lea
jmp
bsr
bt
rcr
mov
pusha
cmpb
pushf
pusha
movb
jmp
or
icebp
mov
mov
test
add
cmp
mov
cmpsl
xchg
lock
out
nop
out
std
ss
lret
xor
pop
pop
add
cs
jo
ficoml
leave
daa
xchg
lahf
add
repz
sahf
sbb
mov
out
xchg
inc
push
cli
dec
adc
jle
xchg
lahf
sbb
fs
mov
pop
or
cmc
cmc
adc
stc
stc
in
aam
cmpsl
lea
jecxz
divl
push
daa
jns
fucomi
sbb
sub
aas
icebp
mov
cmp
mov
pop
xchg
clc
push
and
ret
mov
push
mov
mov
cmp
push
pop
dec
pop
mov
mov
dec
pusha
clc
xchg
push
into
mov
nop
andl
add
or
xor
cmpsl
gs
pop
pop
xchg
lods
leave
or
mov
ret
mov
psrld
clc
pop
dec
xor
push
ss
push
jb
push
add
pop
cmp
sub
hlt
stc
arpl
mov
cmpsl
lds
mov
xchg
lods
push
xchg
leave
fldenv
stos
mov
mov
es
flds
sti
jmp
ret
jp
xchg
test
stos
das
and
lock
bound
xor
cmp
fwait
hlt
adc
sub
or
cltd
push
mov
mov
mov
in
scas
xor
dec
fcmovnu
pop
lods
jo
add
lret
cmpsl
inc
psllq
fists
pop
daa
aaa
sbbl
push
xorl
cmp
add
scas
and
mov
push
inc
sbb
cs
ss
inc
andb
mov
mov
inc
rorl
inc
push
test
cmp
loop
movsb
sbb
mov
mov
icebp
jno
cmp
fs
mov
or
lock
add
or
mov
sub
popf
jnp
into
add
fiadds
mov
lods
mov
jbe
mov
ret
sbb
cmovg
inc
das
daa
pop
push
mov
xor
leave
outsb
je
pusha
sub
out
out
mov
stos
mov
mov
sub
mov
push
ret
cmp
shlb
or
aam
jmp
orl
dec
in
jno
xor
mov
repnz
je
push
or
pop
push
xor
mov
xor
pop
mov
or
jno
mov
loope
mov
cmc
inc
and
in
fdivrs
and
jmp
call
inc
mov
sbb
add
add
rol
lods
xlat
jmp
mov
xchg
lret
pop
add
loopne
jmp
mov
loop
jle
or
push
in
mov
jns
outsl
insl
xor
cld
or
ja
lcall
fimuls
pop
xor
mov
and
out
aam
ja
inc
shl
mov
arpl
cmc
mov
push
stos
or
or
fdivl
jle
lahf
jae
bound
cwtl
aas
stos
lahf
cmpsb
mov
sbb
jae
push
addr16
mov
stos
sub
lds
dec
clc
pushf
pushf
lea
jmp
add
dec
outsl
arpl
inc
jb
add
std
in
mov
in
cmp
or
add
and
mov
xor
nop
stc
ss
mov
test
mov
mov
mov
lret
or
and
call
cltd
aaa
je
int
ja
shrb
das
xor
in
repnz
lcall
mov
loopne
push
fidivl
in
mov
clc
jmp
leave
aad
leave
stc
in
sub
pop
push
cmp
adc
ret
out
mov
not
ret
test
mov
loope
cmp
sbb
push
xlat
std
adc
in
loope
out
xchg
data16
adc
sbb
cs
jbe
sub
sub
xor
jbe
xchg
mov
idiv
andb
cmp
mov
stos
jbe
push
fsqrt
lcall
xchg
inc
sbbb
jbe
stos
jne
rcrl
mov
in
mov
jecxz
popf
out
mov
jmp
mov
ret
cwtl
mov
fbld
mov
rcr
das
int3
cmp
sti
sbb
orb
stos
pushf
data16
push
xchg
and
icebp
mov
ljmp
push
add
cmp
push
call
adcl
add
sub
arpl
rol
inc
pop
mov
and
add
clc
hlt
push
pop
pusha
js
fisubl
sahf
pop
push
fsubl
or
fcmovu
xchg
mov
inc
cmp
mov
pop
mov
mov
pop
cmp
in
mov
imul
hlt
testb
cmc
xor
jbe
ja
stos
push
divl
cltd
rdpmc
out
jno
add
jge
and
add
divl
stos
push
push
or
inc
mov
mov
mulb
andb
sbb
xor
ds
fmull
cld
test
mov
repnz
pushf
into
jb
shrl
outsl
adc
lods
repnz
sbb
push
sbb
insb
inc
dec
xor
jbe
cwtl
test
sub
jbe
mov
push
pushf
pushl
ret
jmp
in
mov
movsb
mov
test
test
sub
int3
pusha
cwtl
std
mov
mov
fcomi
and
pop
test
xor
jbe
sbb
das
mov
stc
xchg
arpl
jne
mov
cmp
nop
mov
mov
or
cmp
or
repnz
es
inc
and
jp
sub
repnz
je
pop
jmp
cmpsb
dec
leave
lahf
mov
jmp
popf
and
cld
dec
add
cmpsb
fldcw
int3
lret
jne
decb
cmp
sub
push
cmp
ret
adc
fisttpll
imul
ret
inc
or
fbstp
arpl
and
jecxz
mov
jg
push
imul
mov
aad
pusha
dec
dec
mov
xor
neg
dec
mov
scas
mov
cmpsb
mov
mov
xor
negb
push
mov
push
test
fs
jmp
cmpsb
fimuls
jb
outsb
je
nop
enter
rolb
dec
lret
lea
xchg
ljmp
push
shlb
insl
or
out
in
dec
fmuls
fbstp
jl
pop
mov
inc
imul
pop
insl
xor
xchg
push
sbb
inc
mov
cmp
push
andb
mov
les
fisttpll
stos
adcb
ret
mov
pop
cwtl
xchg
je
sbbb
aad
sub
int
arpl
and
xor
movsl
xchg
adc
push
jb
enter
arpl
and
mov
adc
pop
pop
loop
jo
inc
fnstcw
aas
xchg
insb
add
push
push
pop
int
xor
mov
outsb
and
pushf
jb
jns
scas
out
jle
popf
div
xchg
mov
xchg
mov
mov
stc
movsb
sub
sbb
adcl
cmpsb
out
arpl
jnp
stos
xchg
addr16
xchg
inc
mov
push
dec
orl
mov
div
push
test
pop
pusha
jge
int3
pusha
clc
push
cmovo
ja
imulb
ja
push
addl
lea
jno,pn
push
sub
lds
push
mov
arpl
outsl
scas
xchg
ret
mov
pop
cmpl
jmp
clc
or
sub
jle
inc
outsl
cli
xlat
roll
frstor
rorb
and
fstl
inc
or
xlat
inc
dec
jb
jbe
popa
inc
stc
lds
mov
xchg
int3
js
pusha
lret
pop
stos
and
push
lods
pop
inc
xchg
mov
inc
pushf
clc
push
pop
cmp
push
pushf
js
call
or
cmp
sbb
test
xor
scas
test
test
movsb
stos
hlt
hlt
movsb
enter
cmpsb
jp
xchg
scas
jnp
scas
cmp
sahf
mov
xchg
out
out
imul
bound
sbbb
push
jl
inc
mov
leave
cmpsb
xchg
ja
inc
dec
addr16
test
imul
scas
dec
pop
stos
cmpsb
inc
jns
test
or
xor
sub
add
xor
rcpps
pop
icebp
mov
dec
push
sbb
out
cmpsb
out
adc
out
cli
aas
in
lea
test
add
sbb
mov
jle
pop
nop
bound
aas
enter
call
push
sahf
sub
xor
jne
pop
push
js
nop
mov
jno
pop
dec
jb
push
cli
in
aad
fldl2t
lret
pop
lahf
adc
enter
aas
sbb
roll
inc
out
das
aas
xlat
adc
adc
cmc
inc
orb
inc
shlb
push
xchg
jne
cmp
mov
rorl
mov
inc
arpl
mov
inc
pop
out
xlat
cli
ljmp
push
xchg
nop
mov
lock
data16
fdivrp
dec
sub
sahf
movsl
movsl
nop
mov
bound
bound
stos
mov
aas
mov
adc
stc
lea
jb
pusha
clc
call
arpl
insb
out
cmpsb
or
xchg
orl
rorl
push
adcb
adc
mov
cmc
std
xchg
sbb
jo
test
in
xor
imul
or
push
imul
aas
wrmsr
inc
nop
data16
xor
jmp
adc
movswl
lcall
jnp
sbb
je,pn
icebp
in
test
fists
add
mov
mov
cld
shl
adc
push
inc
ret
roll
std
mov
cmp
add
jge
push
repnz
pushf
lea
jne
cwtl
push
movzbw
pop
movb
sets
push
mov
bswap
mov
sete
lea
pushf
mov
movw
movl
jmp
pusha
pushl
pushf
lea
jne
cwtl
cwtl
movb
cwtl
pusha
mov
movzbw
not
not
lea
call
stc
sub
clc
test
call
call
pop
jne
out
cmpsb
mov
dec
inc
inc
and
aaa
inc
daa
sbb
xchg
sbb
dec
mov
sub
sbb
fs
dec
cmp
arpl
mov
adc
dec
push
fwait
test
loopne
adc
mov
add
dec
and
shl
push
push
hlt
pop
cmp
or
sbbl
iret
xchg
jg
adc
repz
cmpsb
out
cs
inc
inc
or
push
jle
xchg
cli
in
dec
mov
add
xchg
in
jno
mov
lea
mov
das
adc
fidivs
popa
lds
inc
mov
push
mov
mov
mov
fwait
cmp
xchg
xchg
mov
fisubrl
mov
fisubrs
divl
jns
pop
mov
les
xchg
notl
pop
int3
and
imul
mov
jae
orb
sbb
loopne
aaa
daa
sbb
loopne
or
cli
adc
xor
cmp
and
test
mov
test
push
dec
xor
cs
insb
add
cmpsb
sbb
lahf
cmc
fld
loope
cmc
dec
loopne
fisubs
scas
pop
adc
push
ss
lret
aaa
mov
cwtl
std
std
jge
push
jno
out
nop
adc
pop
xchg
lea
mov
mov
xor
sti
cmp
shll
add
mov
add
add
pop
pop
push
cmp
cmp
xor
pop
xchg
mov
sbb
out
in
or
jmp
in
cmpsb
mov
and
fsub
and
sbb
dec
xor
data16
xchg
ficomps
cmpsl
call
push
mov
movsl
push
std
stos
cld
out
std
cmp
inc
push
fdivl
lock
lds
jmp
mov
xchg
rcrb
push
aaa
push
notb
jnp
outsb
adc
sarb
and
jne
xchg
sub
sbb
mov
jg
fildll
iret
mov
sti
lods
inc
mov
sbb
xchg
mov
ficompl
es
addb
loopne
ds
pop
repnz
jp
clc
add
ret
sbb
aas
add
repz
stos
in
sub
fs
push
call
test
sbb
lods
pop
lcall
mov
int3
jb
sub
xor
leave
xchg
icebp
jno
xor
cltd
mov
and
stos
mov
popf
sbb
push
es
into
mov
adc
add
sub
or
sub
mov
movb
push
pushl
ret
arpl
mov
dec
imul
movsl
mov
int
xchg
call
push
add
cmp
pop
sbbl
sub
cmp
dec
push
bound
insl
repz
dec
out
sti
pop
es
repz
jb
xor
and
push
sub
xor
mov
ret
gs
ljmp
jo
je
imul
xchg
jecxz
cmpsb
xor
out
rol
or
out
sub
adc
ficomps
fnstsw
arpl
in
mov
cmp
fldt
hlt
mov
in
xor
dec
out
cmp
jge
scas
add
xchg
mov
xchg
out
pop
sub
shrl
scas
push
ljmp
push
dec
add
sub
out
dec
insl
mov
mov
out
das
jmp
inc
xor
or
mov
adc
cmpsl
test
jecxz
cmp
ljmp
pop
jae
pusha
push
pop
out
lcall
clc
into
fistpl
pushf
or
sar
ja
movb
pop
iretw
sbb
or
jg
adcb
repz
js
iret
mov
adc
mov
pushf
fs
adc
mov
xlat
or
pop
fcmovnbe
decl
dec
das
jae
add
popf
iret
pop
sub
dec
cmp
bt
pusha
test
shl
pushf
jmp
nop
or
lret
rorb
sarb
xchg
xor
scas
adc
es
sub
push
enter
fcmovbe
push
sbb
or
out
out
lds
fs
stos
fnstcw
sarb
mov
js
out
comiss
dec
cmc
sub
test
rcll
jo
push
push
ljmp
mulb
and
sbb
sbb
or
pop
jno
sub
ja
push
pop
add
cmpsb
popf
sbb
sub
add
rcr
testl
xchg
xchg
dec
pop
jg
add
pushf
rorw
seto
cli
fimuls
dec
daa
sbb
mov
std
into
cwtl
cs
stc
lret
mov
lds
xchg
mov
adc
xor
mov
cmc
rorl
sub
sti
cmpsl
addr16
fsubs
daa
int3
push
xor
xor
pop
xor
test
imul
pop
xor
push
dec
dec
inc
xor
cs
insb
add
cmpsb
mov
loopne
int3
or
sub
repnz
inc
push
cli
fs
out
in
nop
pop
push
sahf
cwtl
push
fsubp
and
leave
mov
add
imul
addb
push
add
daa
ds
rcll
and
mov
dec
incb
icebp
adc
mov
test
aas
fldenv
push
sbb
cmp
sahf
stos
and
inc
pop
movsl
mov
ja
inc
xchg
lea
int
sbb
ljmp
sti
push
loopne
cmpsb
mov
jg
fcmovne
jg
mov
cmpsl
adc
xchg
les
push
or
or
loope
daa
mov
int3
fnstsw
pop
insl
fcmovnbe
mov
or
jp
or
data16
cld
sbb
bound
adcl
push
adc
fwait
cld
mov
sub
fcompl
loop
mov
pop
js
jmp
adc
or
dec
push
push
mov
push
mov
and
push
pop
ja
add
mov
repnz
and
sbb
sub
inc
inc
lods
out
lcall
mov
int
jno
hlt
mov
stos
add
and
ss
sub
mov
xor
mov
adc
pop
insb
xchg
movsb
mov
clc
dec
int3
inc
mov
mov
dec
adc
mov
jmp
call
push
pop
cmp
sbb
push
pop
je
pusha
jl
lock
sub
dec
out
test
cmpsb
icebp
insl
imul
lret
leave
ret
aad
icebp
jmp
mov
xor
daa
push
xchg
arpl
mov
bnd
or
dec
inc
pop
dec
push
add
inc
out
addr16
clc
dec
out
scas
cmp
cwtl
push
xchg
dec
add
leave
cmpsl
ss
adc
icebp
push
mov
mov
scas
mov
cmp
out
negb
push
repnz
es
jno
add
jo
insb
hlt
dec
mov
fimuls
jmp
pop
sub
inc
enter
pop
pop
mov
ljmp
fdivrs
bound
add
aam
adc
sbb
out
cmp
popa
cltd
insl
pop
jo
leave
aad
lock
arpl
dec
jl
adc
and
lret
rcl
hlt
rcr
inc
sbb
cmp
push
in
and
test
xor
lahf
push
xchg
lahf
popf
jae
dec
jmp
in
insl
dec
jno
ja
sub
ds
and
dec
imul
pop
mov
jno
mov
ficomps
sbb
sbb
call
jns
mov
xor
push
or
insl
xchg
cmpsb
adc
fwait
mov
cwtl
loop
pusha
idivb
push
xchg
jne
adc
push
repnz
outsb
add
mov
je
lret
cmp
pop
sub
test
xchg
fcoml
add
adc
fsubl
hlt
clc
enter
lods
cwtl
mov
add
fwait
mov
sarb
xchg
dec
jae
push
mov
lea
jmp
ss
rorl
addr16
cmp
push
or
push
inc
mov
push
pop
out
enter
mov
daa
adc
enter
xchg
shlb
inc
aam
popf
jnp
push
and
imul
mov
test
test
out
inc
jnp
mov
pusha
es
cmp
punpcklwd
insl
push
push
dec
dec
dec
push
ss
sbb
dec
cmc
mov
push
je
jb
push
push
xor
push
push
or
inc
jp
aaa
das
fdivrl
mov
lret
xor
fisttpl
push
cmp
cs
mov
jle
fidivs
xchg
inc
xor
jp
add
fstpl
add
mov
out
xor
lods
sbb
fcomps
iret
pop
mov
sub
push
gs
adc
outsl
inc
mov
xchg
test
push
iret
pop
inc
and
inc
add
mov
push
xor
cmp
adc
sbb
jl
mov
outsl
cmpb
push
bound
push
and
ss
jmp
gs
scas
leave
in
aam
sbb
mov
shl
pop
mov
and
jg
fadd
into
mov
insl
test
cwtl
xchg
jmp
sbb
testl
or
add
pop
sbb
or
divb
lret
popf
and
cmp
lcall
ja
sbb
fdivr
call
xchg
sub
add
push
dec
xchg
xchg
push
sub
jp
lock
icebp
and
icebp
in
jp
adc
dec
negb
stos
sub
cmpb
shlb
pusha
jo
sbb
jns
jno
mov
xchg
fisttpl
sbb
xchg
cmp
push
lcall
push
mov
adcl
pop
les
xchg
mov
bswap
inc
dec
lods
xchg
xor
sahf
je
jne
stos
pextrw
push
dec
or
test
push
enter
ret
jno
inc
add
cli
cmpsb
ud2
mov
jo
aam
and
mov
or
out
rcl
enter
add
shlb
fcompl
inc
mov
in
fimull
xor
push
xor
pop
mov
push
xchg
divb
cmp
icebp
cs
aad
test
sahf
mov
das
cmpsl
xlat
in
sub
or
push
aas
jp
push
or
xchg
xchg
xchg
jns
test
cmpsb
jb
sbb
les
fcmovnu
push
push
sbb
insb
and
idivb
rorb
icebp
mov
adc
dec
pop
jns
push
outsb
xor
popf
mov
je
arpl
cmp
popa
mov
xchg
imul
push
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
test
inc
push
add
int
add
call
mov
add
pop
xor
add
dec
hlt
ret
jns
jbe
cmp
fs
ljmp
jae
or
and
inc
xchg
cmp
adc
pop
shlb
sahf
mov
test
xchg
test
cmpsl
inc
dec
xchg
add
xchg
lret
loop
into
cltd
dec
sub
jne
insl
jno
inc
xor
xor
cltd
xchg
and
pop
hlt
dec
test
incl
cmp
inc
jns
xchg
jg
into
mov
xor
pop
fistps
mov
ss
adc
pop
push
sub
dec
imul
dec
repz
imull
test
lret
jbe
rclb
xor
mov
and
jae
adc
cmpsb
inc
jb
mov
mov
cmpsb
cmp
adc
push
pop
xor
cmp
shll
roll
pop
sub
dec
inc
push
adc
mov
xchg
cmpb
fnstenv
xchg
popf
loope
vpsubsw
rcll
lea
jne
pusha
lea
call
push
lea
jmp
xchg
push
fmuls
xor
push
xchg
nop
mov
pusha
push
cwtl
cwtl
mov
ja
leave
xchg
cmp
das
jge
dec
ja
xor
adc
sti
shl
add
pop
cli
lcall
or
jg
sbb
jnp
mov
clc
mov
fidivs
mov
imul
mov
imul
andl
out
mov
sahf
mov
mov
ljmp
cmp
jae
aas
es
hlt
loop
pop
lret
mov
jno
xchg
and
std
pop
emms
pop
xchg
and
ror
xorb
mov
aas
mov
xchg
in
sub
xchg
jge
inc
sub
orl
jnp
inc
aaa
sbb
dec
cmp
pop
inc
mov
cmp
dec
andl
flds
dec
cmp
and
pop
push
mov
add
in
data16
in
jmp
ror
jecxz
jnp
imul
mov
fsubs
jae
dec
shlb
sarl
test
test
mov
dec
roll
xor
sub
push
and
push
or
push
mov
jmp
aas
sbb
call
lret
lcall
movsb
mov
aam
rolb
mov
mov
mov
adc
dec
lret
test
sub
pop
adc
out
movsb
das
or
loopne
cmp
mov
sbb
addl
lods
sahf
int3
outsb
hlt
ffree
std
xchg
xor
or
ss
lcall
ja
add
and
or
adc
dec
sub
inc
enter
mov
ds
pusha
adc
jle
pop
andl
cmp
mov
sarb
out
mov
negl
push
fcmove
ja
cmc
push
enter
data16
outsb
xor
insb
mov
repz
test
mov
xor
inc
in
or
jecxz
mov
mov
cmp
cmpsl
mov
push
jge
ja
mov
stos
xlat
iret
pop
dec
and
add
clc
mov
mov
push
bound
nop
call
repnz
bound
sbb
jns
adc
inc
cwtl
pop
fcmove
loope
push
mov
movb
mov
stos
pop
nop
outsl
sbb
mov
loopne
xchg
lock
rdpmc
mov
xchg
fcmovnu
mov
sub
or
jp
mov
dec
aad
cmpsb
jmp
popf
arpl
je
mov
or
sarb
xchg
xchg
pop
push
push
pop
outsb
test
mov
or
add
xchg
les
out
mov
cmp
dec
or
hlt
imul
iret
bound
test
aad
adc
ror
mov
mov
std
aam
cmpsb
lcall
cmp
sub
inc
push
dec
ss
out
push
test
add
or
mov
mov
in
jmp
in
into
mov
mov
jl
sub
lods
fistl
sbb
pop
call
imulb
inc
or
and
pop
nop
adc
sbb
jb
dec
push
aas
pusha
pop
pop
arpl
or
sub
cmp
sub
lds
andl
fidivrl
mov
rorl
fsubl
in
lock
xor
or
and
xchg
mov
sub
or
movsl
push
dec
dec
mov
mov
sbb
fisubl
ja
mov
lahf
mov
test
xor
pop
xor
or
add
cmp
add
sbb
dec
test
stc
pop
aad
inc
xchg
adcl
jle
stos
jle
fcmovbe
xlat
sbb
mov
bound
les
jg
imul
stos
lahf
jle
push
xor
into
adc
fstpt
jle
xor
cmp
and
add
push
scas
inc
pop
repz
adc
dec
sub
ljmp
mov
xchg
mov
push
jne
sbb
rorl
lcall
mov
jg
sub
add
xor
mov
ljmp
bound
scas
fiadds
rcl
and
ss
out
adc
cmpsl
pop
jns
push
pop
dec
mov
mov
insb
pop
jle
mov
in
cmpb
lea
xchg
test
jno
xor
xchg
push
ds
push
movsl
lea
push
ret
push
jbe
mov
push
cmp
sub
insl
dec
adc
loopne
mov
mov
adc
xor
dec
pop
pop
jae
push
daa
mov
dec
jae
inc
pusha
call
adc
cmpsb
sbb
ja
lea
nop
movsl
and
bt
mov
mov
push
add
fwait
in
cmpsb
jno
subl
lods
imul
adc
and
mov
xchg
mov
sarb
int
hlt
mov
xor
or
cwtl
sbb
shlb
repz
add
mov
xchg
adc
xor
jb
add
or
shlb
xlat
and
pop
dec
or
aas
frstor
mov
lret
xchg
cmp
mov
cmp
sub
xchg
lea
jp
xor
add
mov
arpl
rcrl
gs
fs
sub
cli
jecxz
lods
pushf
cwtl
bound
mov
xor
adc
xchg
pop
ret
xchg
pop
pop
or
mov
ljmp
movsb
out
lods
mov
mov
mov
data16
loop
fs
mov
jle
nop
bound
pop
or
es
sbb
push
sub
push
orb
int3
push
mov
cwtl
mov
pushf
add
mov
pushl
lea
jmp
scas
testl
in
loope
lods
jg
mov
cmpsb
add
pop
mov
or
pop
pop
leave
jbe
mov
lret
cmp
insl
je
mov
adc
lock
adc
in
inc
xchg
in
mov
pop
lcall
mov
xor
cmp
mov
dec
not
jp
xchg
cwtl
dec
ret
lds
add
or
in
dec
inc
ss
xor
cmp
or
pop
dec
push
cmp
sbb
or
fdivl
sbb
inc
fcom
mov
divl
daa
sbb
or
inc
std
shrl
lret
scas
rcrl
add
lcall
nop
jle
inc
inc
dec
mov
test
dec
data16
dec
pop
imul
mov
mov
jmp
push
and
popa
ljmp
sbb
cmp
into
fmul
popf
pop
push
fcoms
loop
push
xor
jg
es
push
int3
pop
stos
pop
push
mov
xchg
mov
repz
pop
push
cmp
mov
add
pusha
sar
mov
sbb
shr
mov
pusha
call
movl
lea
call
jp
pusha
adc
call
lea
jne
bsr
ror
mov
btc
mov
call
cs
inc
rorb
inc
pop
imul
outsl
cltd
mov
loop
sarb
idiv
lret
or
js
je
mov
fldcw
into
scas
rcll
fnstsw
insb
mov
mov
push
mov
mov
inc
movl
insb
int
push
pop
dec
sbb
xor
xor
push
mov
mov
idivl
in
lock
pushl
cmpsb
pop
push
sub
js
mov
lods
push
dec
subl
lods
mov
add
enter
mov
ljmp
pop
cmpsb
cwtl
clc
ljmp
inc
in
mov
std
rcr
ds
fdivr
lock
jecxz
push
add
add
movsb
nop
test
lods
call
mov
mov
inc
cmp
into
mov
scas
loope
or
adc
adc
sub
add
rorl
jecxz
jno
push
nop
pushf
rorb
scas
jmp
sbb
loope
xor
es
pop
and
push
lcall
xor
jbe
pop
inc
inc
daa
xchg
std
repz
ret
ror
xlat
adc
das
or
testl
insl
dec
ja
adc
cmpsb
dec
out
mov
ljmp
and
push
cltd
stos
xor
add
cmpsb
aaa
inc
inc
lret
push
arpl
mov
add
and
into
data16
in
push
jno
sbb
ret
lods
pop
rep
sub
inc
aas
loope
ret
jle
sub
test
mov
push
cmp
jnp
mov
or
iret
rcrl
pop
ud0
or
pushf
shll
jns
cmp
cld
repnz
xor
mov
sbb
xchg
inc
scas
pop
gs
mov
test
cs
incb
es
lock
adc
stc
dec
inc
add
and
jg
imul
adc
add
dec
inc
and
inc
and
mov
jns
pushf
pushf
add
push
push
lea
jmp
mov
movzbl
call
mov
nop
int
cmpsb
sub
shll
rcrl
out
mov
sbb
dec
int3
cmpsb
mov
cmp
shr
xchg
inc
mov
inc
enter
lods
push
jmp
or
pop
rcr
inc
adcl
test
xchg
insl
jo
ret
sbb
ljmp
mov
mov
int
or
popa
sbb
pop
pusha
jo
int
cmpsb
sahf
ds
xor
sbb
cmp
add
out
stos
mov
or
sub
gs
inc
leave
cmpsl
hlt
js
jp
test
shl
inc
sub
adc
and
mov
aad
mov
cli
popa
push
enter
sub
stos
sbb
aaa
leave
push
shlb
adc
pop
fmull
xchg
repz
sub
lret
cmc
hlt
es
insl
xor
arpl
push
cmp
icebp
lods
adc
test
shl
or
loopne
in
cmp
inc
adc
lea
movsbw
pushf
mov
call
mov
out
lret
mov
and
pop
inc
jg
pop
push
int
xor
fucomip
mov
movsb
jmp
dec
rol
sub
popf
dec
xchg
inc
dec
pusha
scas
cmp
mov
je
iret
imul
ret
insb
lods
lret
cmp
sub
or
cmpsl
cmpsb
inc
out
and
sarb
and
mov
cmp
jl
nop
js
test
mov
inc
das
fstps
mov
push
dec
push
mov
push
pushf
pusha
pushf
pushl
ret
jmp
pusha
shr
test
push
cmp
push
pushf
jmp
loope
lret
cmpsb
mov
sahf
fcompl
and
pop
add
sti
jmp
pop
fcmovbe
xor
fsubs
pop
adc
iret
adc
cmp
dec
push
es
cmpsb
pop
out
push
adc
loope
sub
dec
and
je
incl
fnstsw
dec
cld
add
test
sbb
aad
jnp
adc
scas
sbb
enter
ret
cwtl
pushf
rcl
mov
cs
push
inc
sbb
imul
test
jge
xchg
inc
imul
addl
cmp
inc
push
cmp
fcmovnu
lds
jecxz
mov
out
xor
in
decl
mov
adc
and
mov
subl
xor
and
xor
mov
inc
sub
mov
push
test
sbb
cmp
loopne
clc
add
adc
js
adc
or
and
rorl
repz
inc
sbb
stos
lds
jmp
jbe
lods
cmp
aaa
adc
imulb
lret
sahf
lahf
adc
sti
push
xchg
adc
xchg
test
cmp
or
pop
and
mov
dec
mov
cs
add
mov
cmp
jnp
andb
pop
xchg
jge
cmp
mov
inc
dec
imul
sbb
adc
cmp
xor
or
cld
fdivr
sbb
pop
dec
and
cwtl
nop
dec
subb
pop
cwtl
mov
dec
xchg
lret
xor
mov
ljmp
push
adc
out
mov
xor
mov
dec
ret
pop
jns
lds
mov
mov
inc
cmpsb
hlt
sub
xor
mov
mov
call
les
ret
scas
call
cs
arpl
cltd
jp
jmp
arpl
aas
dec
push
push
push
jcxz
cltd
sbb
add
pop
mov
insb
das
gs
push
xlat
or
clc
adc
pusha
inc
or
xor
jo
inc
test
fbld
dec
mov
movl
call
lea
jae
clc
stc
sub
pushf
mov
pusha
lea
call
push
pushf
lea
jae
pusha
inc
pusha
mov
mov
not
setns
dec
inc
lea
jp
mov
call
xor
rclb
inc
sub
push
cmc
dec
cwtl
push
daa
add
cmpsb
ficoml
jb
xchg
xchg
pushf
repnz
ja
std
xor
jl
pop
in
rorb
jge
ja
push
push
or
dec
push
xor
and
lods
lds
shll
aam
shlb
les
js
sbb
cli
in
inc
leave
mov
xor
add
out
cmp
jnp
scas
repz
add
in
fucomip
cmp
mov
jecxz
or
les
pop
xchg
xchg
push
dec
dec
xchg
cmp
pop
sbb
popa
inc
out
xchg
sahf
ja
and
loopne
lret
and
or
lret
adc
cli
out
je
jbe
cmp
mov
lahf
jg
fwait
fwait
stos
rcr
xlat
popa
jl
cli
xchg
pop
adcl
out
int3
enter
inc
dec
fwait
jno
pop
push
jge
mov
mov
push
jle
mov
dec
loopne
pop
insl
fbstp
in
loop
scas
ljmp
test
into
mov
xorl
lcall
ljmp
xchg
movsl
icebp
call
mov
xchg
ret
jg
xchg
js
test
notl
dec
popa
jbe
cli
sti
aas
sub
push
adc
mov
xor
jb
mov
leave
sbb
scas
push
xchg
jb
xor
pop
mov
mov
jle
lret
out
arpl
icebp
data16
or
lret
mov
stos
je
cwtl
pop
pusha
xchg
scas
jo
mov
mov
lret
xor
sbb
fmulp
int3
dec
mov
insl
add
sub
jno
movl
jl
dec
push
test
push
sbb
mov
xor
xchg
xchg
xor
pop
pop
xchg
xchg
xchg
nop
mov
push
sub
mov
aam
js
cmpl
xor
mov
and
notl
push
inc
jae
es
push
sbb
xorb
pop
mov
enter
mov
nop
or
in
lods
mov
or
gs
jb
stc
aas
push
mov
pop
mov
dec
vhsubps
cmp
mov
aam
sti
mov
fists
jnp
fstp
push
repz
and
mov
push
repz
out
andb
repz
mov
sub
orl
and
sub
dec
push
push
pop
push
jbe
jp
xor
mov
cmpsb
cmp
adc
add
sbb
scas
mov
xchg
movsl
imul
inc
jecxz
sti
pop
mov
xchg
js
xchg
xor
aad
loopne
xchg
xor
enter
push
les
or
sarl
test
lds
jbe
in
xor
add
add
roll
inc
mov
sbb
sti
loopne
ljmp
jno
or
bound
scas
sbb
sbb
in
mov
sbb
mov
in
shrl
cmp
imul
mov
add
jmp
dec
jmp
xlat
pop
test
mov
mov
mov
std
aad
in
jnp
outsl
pop
jp
cmp
inc
dec
cmp
fidivs
fldenv
pop
mov
or
xor
inc
sbb
out
arpl
mov
mov
mov
sub
sbb
sarl
jbe
pop
sub
insl
out
xor
jno
xchg
es
push
sbb
dec
jo
pop
in
xchg
shlb
out
mov
lock
dec
js
push
movsb
test
push
mov
sub
lahf
adc
mov
nop
bound
scas
insb
add
sub
lret
cmp
fnstcw
xor
mov
sbb
andb
sbb
pop
inc
jmp
loop
in
jecxz
sbbb
mov
jo
sub
cmp
push
pop
mov
push
inc
jno
pop
push
cmp
and
cmp
std
imul
mov
out
sub
add
std
mov
mov
imul
add
repz
mov
in
test
dec
xor
push
in
into
decb
mov
leave
xchg
test
sahf
shl
sub
enterw
push
adc
push
jbe
push
sbb
mov
jecxz
xchg
xchg
push
add
das
dec
inc
pop
rdpmc
or
push
arpl
mov
rclb
sahf
and
hlt
test
les
adc
pop
jle
jb
cs
adc
mov
jmp
mov
dec
cltd
repnz
xorl
test
scas
sub
gs
or
sti
dec
pop
add
jge
es
jmp
fbld
call
and
and
aaa
cmc
push
in
lods
addr16
shlb
movsl
push
adc
lock
pop
test
decb
xchg
hlt
ss
push
push
dec
inc
outsb
sahf
sbbb
mov
loop
bound
sub
test
jg
rcl
clc
pushf
das
daa
mov
not
clc
add
or
ror
rcr
mov
cmc
clc
cmc
push
test
mov
lea
je
pusha
pusha
call
fwait
mov
ret
mov
lret
mov
lock
sub
addr16
mov
mov
sub
aas
cmp
sti
mov
aas
pop
enter
pop
stos
and
dec
jl
lods
in
rolb
mov
or
stos
jmp
mov
das
leave
xchg
jmp
in
inc
cmp
mov
int3
mov
adc
dec
lods
jb
addb
pusha
lods
movsb
mov
push
xorl
xchg
mov
repz
pop
pop
fcomi
das
push
fwait
sbb
sti
aam
cmp
ret
mov
lock
divb
jmp
mov
push
mov
clc
mov
sub
add
cmpsb
dec
ror
mov
imul
loopne
and
pop
sahf
in
cmpsb
scas
clc
daa
dec
sbb
fstps
in
test
adc
jmp
rorl
rcr
in
shrb
arpl
or
dec
xor
pushl
cmpl
and
cltd
out
clc
nop
xor
iret
stos
mov
ja,pn
adc
stos
jle
xchg
ljmp
rcll
jp
ret
xchg
repnz
pop
imul
inc
xchg
dec
or
repz
stos
ret
dec
loopne
mov
into
clc
or
lret
js
hlt
dec
inc
and
iret
test
loopne
lods
xchg
jecxz
dec
inc
inc
push
and
loope
pop
movsb
jb
sti
and
sbbl
hlt
pop
cmc
fimuls
fcomps
sbb
aas
dec
mov
push
add
add
out
mov
dec
mov
loop
dec
mov
sbb
gs
jns
int
adc
daa
cmp
mov
movsl
cs
pusha
push
lea
je
pushf
call
xchg
je
push
sub
addr16
push
aam
rcl
xor
jg
sub
push
shlb
pop
pop
mov
sbb
in
pusha
or
xchg
or
je
decl
sub
nop
mov
fimull
cltd
cvtpi2ps
and
ja
in
ds
add
jge
out
ss
cli
or
les
and
xchg
or
call
xchg
lea
inc
stc
cmc
mov
shll
insb
xor
cmp
push
or
dec
sub
mov
push
sub
test
xchg
xor
sbb
in
repnz
add
lods
mov
scas
insb
lds
mov
lret
cwtl
xor
into
insl
dec
loope
jmp
insl
jbe
adc
xchg
mov
and
mov
fistpl
mov
and
in
icebp
xor
xlat
outsb
push
call
cld
in
add
xor
je
insb
jbe
xchg
push
mov
add
pushl
popl
bt
cmp
jmp
and
clc
cmp
je
cmp
add
test
test
cmc
pusha
add
pushf
jmp
jno
cld
mov
inc
and
pop
jne
and
pop
andl
lea
mov
test
jno
sbb
mov
xchg
pop
shr
cmp
bound
sbb
insl
cmp
int
les
repz
mov
mov
push
pop
dec
outsl
cltd
orl
mov
mov
dec
ret
sub
mov
lods
xchg
mov
sahf
das
jae
stc
add
or
aam
ss
mov
stos
mov
jno
cltd
mov
les
dec
push
jns
stos
and
pop
xor
out
stc
leave
icebp
in
sbb
sub
jbe
repz
mov
cmp
pushf
neg
jmp
jae
inc
mov
jae
xchg
popa
scas
cltd
arpl
xchg
mov
insb
mov
adc
push
fdivl
loopne
mov
aad
sbb
and
xlat
fwait
aam
jno
pmaddwd
sub
lahf
xchg
xchg
inc
pop
movsb
lock
sahf
xchg
pop
repnz
dec
xchg
inc
add
lahf
dec
rol
jp
pusha
jb
and
cmp
jno
in
dec
or
cmpsb
dec
in
imul
arpl
loope
xchg
xchg
lock
vpsllw
inc
inc
dec
xor
cs
insb
add
push
lahf
mov
sbb
pop
and
das
xor
pop
push
icebp
jp
push
imul
jmp
loopne
mov
cmc
pop
addr16
mov
add
mov
cmp
test
xchg
divb
adc
lock
bound
sub
mov
cld
sti
xchg
inc
dec
bound
bnd
aad
or
dec
icebp
mov
stc
imul
push
pop
bound
cmpb
addl
shr
not
mov
jmp
cmp
mov
xchg
mov
mov
arpl
mov
lods
push
ret
je
fsub
or
add
repz
sub
sub
lods
inc
xchg
adc
or
ds
xchg
imul
sbb
mov
xchg
ss
push
lcall
sub
pop
xor
arpl
push
sbb
aaa
sub
aaa
das
daa
or
cli
repnz
mov
cmp
pop
call
adc
sub
je
jmp
stos
pop
or
sbb
cmpsl
iret
ljmp
out
das
js
push
dec
test
lods
mulb
movsl
cld
or
out
movsb
mov
mov
fsubrs
push
mov
lahf
xor
fidivrs
pop
mov
mov
fcom
xor
and
lahf
rcll
movsb
mov
in
or
icebp
enter
pop
cmp
in
lret
in
imul
sbb
je
adc
imul
bnd
call
lret
out
adc
sbbl
xchg
dec
scas
sbbb
stc
out
and
in
cld
iret
jmp
pop
outsb
stos
sub
sbb
mov
ds
out
shrl
or
sbb
or
push
loop
or
pusha
fimuls
out
insb
call
or
jo
lock
sti
pop
dec
call
bnd
jge
dec
sub
out
xchg
incb
push
icebp
enter
or
nop
icebp
sbb
scas
push
xorb
dec
rorb
cld
sbb
out
jae
xchg
out
xor
stos
sub
sbb
inc
and
ja
push
stos
lock
mov
aas
or
and
pop
mov
nop
jl
decb
pop
out
and
daa
out
mov
adc
push
pop
fs
dec
shrb
or
int3
out
stos
pusha
sbb
test
push
or
test
jmp
dec
mov
cmp
and
test
in
cwtl
iret
clc
stos
movsl
jg
ljmp
fcmovnu
or
idivl
xchg
xor
test
jae
push
out
arpl
pushf
loopne
jb
loopne
in
or
cwtl
jl
cmp
leave
stos
sbb
xlat
mov
lahf
dec
or
enter
adc
mov
push
jge
cmpsb
rol
inc
sub
add
mov
stos
repnz
pop
xchg
and
andw
pop
adc
add
pusha
push
pop
stos
js
or
dec
enter
dec
in
nop
imul
cs
cli
movsb
mull
dec
sub
sub
dec
js
insl
fdivrp
mov
adc
std
repnz
stos
sbbl
movsl
sbb
mov
test
push
insl
dec
inc
iret
push
insl
xchg
mov
or
loopne
icebp
scas
icebp
movsb
repnz
test
out
repz
cmp
sbb
xor
sbb
lods
call
push
repnz
or
cld
testb
leave
lods
imull
clc
loop
in
div
xchg
lods
dec
sbb
sub
sub
lock
or
daa
push
dec
mov
xchg
daa
mov
stos
aam
pop
stc
add
cmpsl
insb
pop
in
lock
loop
mov
push
aam
int3
xchg
fdivs
iret
push
cmp
mov
mov
mov
imul
jle
int3
insl
int
and
dec
std
jecxz
js
cmp
imul
enter
fsubr
jns
mov
and
dec
imul
bound
xor
sub
lods
adc
push
loopne
mov
scas
stc
leave
push
and
aam
call
dec
movsl
dec
jnp
aam
pop
andb
mov
imul
mov
repnz
pop
leave
and
xlat
cmp
push
cmp
sub
sbb
jnp
jmp
dec
xor
sub
out
mov
in
insb
or
cs
and
test
pop
fnstsw
aas
mov
movsl
rcll
out
fcoms
lcall
pop
ret
fcomp
in
and
adc
fwait
pusha
and
and
or
add
sti
pusha
cmpsb
mov
mov
inc
imul
xor
daa
dec
ret
andb
outsb
mov
out
mov
mov
test
fwait
mov
sub
xor
sub
adc
fdivrl
dec
add
out
mov
xlat
push
scas
sbb
jmp
jecxz
fsubr
push
pop
push
and
jecxz
fstps
pop
andl
lahf
dec
add
push
call
jbe
mov
in
pushaw
jnp
dec
xchg
sub
jbe
sub
dec
cmp
in
ficoms
cmp
mov
das
mov
divl
stos
inc
xchg
pop
nop
xchg
scas
fstps
fstps
jp
sbb
scas
popa
test
xlat
loop
mov
in
stos
daa
lret
sbb
imul
ja
push
sbb
inc
fisttpl
cli
cmc
jmp
xchg
stc
daa
icebp
sahf
sub
repnz
hlt
dec
dec
jmp
xchg
push
pushf
std
js
push
out
or
loopne
stc
pop
pushf
lret
jnp
mov
and
mov
in
jmp
dec
push
imul
jo
das
push
push
sub
stos
out
cltd
mov
mov
lcall
xlat
out
add
add
adc
sar
jmp
sub
sbb
mov
sub
int
lahf
rcrb
jns
std
and
sar
cwtl
or
les
leave
adc
outsl
cwtl
call
lret
punpcklbw
stos
mov
call
clc
clc
scas
cwtl
call
leave
sbb
and
gs
sub
call
push
pusha
scas
call
and
sub
dec
out
dec
or
lret
insl
out
push
mov
jmp
sbb
sub
pop
mov
xor
mov
sbb
inc
je
fmull
ljmp
push
and
push
rcll
and
adc
pop
lea
repnz
push
mov
mov
lods
das
mov
or
mov
js
pop
cmc
cli
cmc
or
inc
pop
sub
add
enter
sub
insb
clc
test
fdivr
insl
fcoml
adc
hlt
cli
movsb
stc
imul
mov
add
add
add
push
repnz
xchg
repz
add
jno
xor
test
push
pop
jmp
out
outsl
lock
insb
dec
inc
mov
cmovge
sbb
insb
jge
push
sub
in
mov
mov
xchg
nop
cli
fcomip
dec
push
sub
fimuls
repnz
lods
lods
sub
icebp
pop
mov
int3
ds
cmp
sbb
or
in
lods
lcall
call
push
out
loopne
lcall
add
out
mov
in
test
leave
outsl
mov
insl
cmp
add
push
xchg
cs
dec
cmp
loop
sub
mov
pusha
les
sub
or
rcrl
rclb
daa
and
les
in
dec
cmp
and
dec
push
jae
out
and
jne
sub
sub
jle
jns
push
sub
mov
push
add
push
stos
inc
les
sbb
cmp
jmp
mov
stc
sub
in
js
xor
pop
rorl
sub
dec
or
dec
in
jp
fwait
and
movsb
sbb
sub
shrb
xchg
push
push
insb
push
push
in
sub
dec
jo
or
pushf
ret
outsb
mov
test
fwait
pop
sbb
xor
jp
fldt
call
pop
dec
fidivrs
test
jnp
repnz
add
push
xchg
cmp
push
bound
repnz
cltd
dec
in
dec
push
jns
sub
lea
in
jmp
adc
dec
data16
xchg
test
sbb
xor
daa
mov
or
test
pop
jl
jo
stos
pop
sbb
mov
sub
mov
jecxz
aam
or
sahf
mov
pop
sub
iret
stos
push
sbb
scas
xor
and
aaa
fs
in
xlat
mov
or
jno
pop
inc
fsubs
rcr
or
in
cmpsl
mov
push
or
in
mov
mov
mov
test
and
jmp
stos
lret
or
inc
mov
in
divb
loopne
push
mov
lret
imulb
lret
out
cli
imul
repnz
insb
lock
add
mov
mov
push
scas
psrlq
pop
fimuls
mov
pcmpeqb
and
shl
stc
adc
lcall
pop
cmp
dec
mov
sbb
mov
jns
mov
rep
and
icebp
cmp
xchg
sbb
or
mov
fimuls
sub
dec
fs
icebp
and
repnz
ljmp
into
clc
sub
cltd
mul
repnz
xor
sbb
aam
xchg
dec
out
sub
int
clc
fdivr
mov
add
in
or
in
xor
dec
das
mov
std
xor
add
xchg
adc
mov
dec
pop
aam
sub
rolb
sti
or
int
inc
pop
inc
push
xchg
push
sbb
xor
lock
or
pop
jno
xchg
and
ret
mov
nop
scas
jb
pop
movsl
stos
clc
jb
xor
mov
aam
inc
popf
dec
mov
jb
pop
mov
icebp
inc
js
fisttps
inc
cmp
clc
pusha
jecxz
popa
cmp
jb
and
pop
xchg
jecxz
pop
jp
and
pop
in
jl
and
lock
mov
shll
lock
out
insl
clc
inc
jno
adc
pop
rclb
push
clc
cwtl
mov
and
test
adc
and
mov
cli
adc
mov
add
addr16
icebp
fcoml
mov
xchg
popa
sahf
cmp
sub
fwait
icebp
inc
mov
sahf
mov
sub
add
imul
xor
imul
int3
and
lods
ss
mov
popf
loopne
icebp
dec
jp
adc
xchg
or
clc
in
mov
xor
imul
inc
int
cli
xchg
sbb
mov
cs
pushl
pop
xor
and
xor
push
ret
adc
jb
sti
xor
movsb
stc
jae
sbb
xor
jmp
popa
inc
dec
sub
pusha
xor
outsb
cmpsl
pop
mov
sub
mov
mov
mov
and
pop
xchg
aam
gs
int3
mov
dec
aad
mov
cmp
mov
cli
and
cmp
clc
push
adc
js
repz
mov
fistpll
or
xor
loop
adc
cmpsb
je
jae
ja
mov
xor
repz
mov
dec
imul
jne
loopne
fwait
pop
add
pop
shll
fcompl
das
push
mov
mov
out
outsl
jo
popa
xor
cmp
inc
addr16
sti
xorb
pop
mov
pop
xchg
sbb
jo
mov
jecxz
jo
mov
pop
je
jp
cmc
aas
or
jle
lods
lods
sbb
xchg
dec
mov
repnz
adc
cmp
inc
jmp
sub
outsl
xchg
or
cltd
mov
lcall
loope
cmp
mov
negb
aaa
and
mov
mov
xor
test
mov
mov
cmc
jae
test
pop
test
outsl
sti
call
xor
repz
ljmp
jno
icebp
cs
in
mov
mov
and
cwtl
mov
cmp
in
enter
push
xchg
repz
pop
repnz
adc
sub
fcoml
jmp
loope
cmpsl
insl
repnz
hlt
mov
test
pop
hlt
mov
fwait
or
clc
or
dec
or
xchg
add
push
shll
into
hlt
mov
mov
hlt
or
dec
dec
sbb
and
hlt
mov
jbe
pusha
jno
lds
xor
xor
std
lock
pop
out
loopne
xor
icebp
scas
dec
sub
scas
test
in
mov
icebp
std
xor
or
mov
and
testb
mov
push
sahf
dec
xchg
pop
mov
fldt
insb
sub
or
repz
stos
out
loopne
adc
push
jne
jae
mov
pop
sbb
or
cli
fdivp
shll
sti
dec
mov
nop
pusha
and
xlat
sbb
pop
pop
jne
adc
std
push
test
dec
movsb
sub
scas
xor
add
jne
call
fcoml
insl
out
movsl
push
ret
pop
movsl
lods
fwait
mov
xchg
push
and
fistpll
xchg
stos
jp
mov
in
das
adcl
add
jmp
pop
repnz
pop
rorl
rolb
mov
mov
adc
jge
outsb
add
mov
rorl
sub
aam
fiadds
mov
mov
mov
jo
dec
adc
sub
and
fs
mov
adc
clc
shl
xor
add
int3
daa
popa
inc
mov
dec
jle
inc
push
mov
iret
rcr
sub
mov
pmaxsw
pop
in
pop
scas
imul
in
jmp
adc
in
sarl
xchg
or
xchg
cmpsb
and
leave
outsl
rclb
xchg
xchg
out
aam
mov
add
cwtl
call
cli
dec
shrl
out
sub
push
aaa
repz
sub
ljmp
cmpl
daa
mov
gs
insl
sti
cmpsb
in
fs
xchg
inc
xchg
arpl
test
add
hlt
ljmp
xchg
push
or
mov
shrl
stos
aaa
fdivrs
jbe
adc
mov
push
lret
sbb
xchg
fcompl
lret
repnz
es
mov
mov
sub
in
jecxz
or
mov
repnz
mov
int3
inc
sub
and
adc
xchg
cs
mov
lods
push
xchg
mov
mov
or
xchg
in
test
or
iret
or
not
test
sti
dec
cmc
into
mov
divb
pusha
cmpxchg
or
loopne
cmc
loopne
aaa
sbb
int
or
aaa
dec
sub
xor
sbb
movsl
mov
jecxz
nop
adc
les
repnz
adc
sub
pusha
rcrb
inc
cwtl
popa
fcmovne
xchg
jne
paddb
test
sub
lret
sub
fchs
sbb
sub
pop
pop
loop
aad
out
dec
or
roll
push
aad
roll
inc
ret
mov
pusha
int
lock
or
mov
repnz
pop
jecxz
push
or
jmp
lcall
mov
or
fnstsw
jmp
inc
xor
fbld
add
adc
jnp
mov
in
pop
ja
das
fiaddl
xchg
push
push
and
mov
nop
adc
add
add
aas
lahf
mov
out
or
sub
leave
inc
mov
out
nop
mov
jb
repz
cmp
fdivr
mov
jle
cwtl
testb
out
stc
testl
mov
sbb
cmp
inc
mov
loop
bound
idivl
data16
pop
mov
jp
out
lock
int3
add
cmc
aam
jo
xchg
pusha
jne
mov
adc
repz
cmp
rorb
xor
mov
je
inc
xchg
pop
lods
and
adc
iret
out
cmp
nop
repnz
in
arpl
int3
or
cwtl
mov
xor
pusha
fnstenv
mov
out
cwtl
loopne
lcall
or
mov
xor
mov
push
sub
push
add
les
sbbb
orl
pop
fadd
test
je
loope
sbb
ret
cmp
jo
and
loopne
adc
shl
mov
pop
cld
xchg
mov
dec
cmp
daa
push
adc
inc
repnz
adc
loopne
pop
lret
jge
in
dec
mov
sbb
arpl
jle
imul
mov
adc
inc
in
xchg
out
inc
lock
fstps
mov
xchg
fucomi
lahf
adc
and
or
push
sbb
lods
pushf
inc
pop
add
outsb
and
stos
xor
enter
adc
flds
push
pop
iret
insb
nop
xor
repnz
sub
mov
lods
popf
inc
lock
xchg
call
aad
daa
push
push
mov
xor
repnz
dec
imul
scas
jge
out
mov
mov
imul
xor
xchg
sbb
movsb
cmp
pop
push
push
lods
ret
push
fadds
push
jb
out
cmp
push
fs
xchg
icebp
sbb
pop
mov
add
cmp
jne
mov
mov
or
test
sub
in
cli
mov
jp
or
mov
lods
jns
clc
out
scas
nop
pop
jns
sbb
lret
lret
negb
dec
movsb
adc
sti
jo
loop
sahf
push
cltd
jo
jp
loop
es
dec
inc
fcmove
movsl
mov
pop
lea
repz
jle
or
repnz
sarb
and
rcrb
pop
sbb
mov
or
mov
sub
out
xor
sar
mov
insl
fstl
cmp
sbb
dec
in
xchg
add
adc
movl
mov
push
inc
fiadds
outsl
insb
push
sbb
std
sbb
andl
cwtl
or
mov
cmpsl
jmp
arpl
loope
mov
and
pop
mov
cmp
mov
dec
fs
jae
int
dec
sub
cmpsb
mov
in
lock
push
push
and
std
call
dec
repnz
xor
out
movsb
repnz
out
lret
nop
idivb
xchg
call
pop
pause
bnd
out
xchg
inc
bound
and
lret
fs
repnz
hlt
or
mov
mov
stos
jbe
imul
cli
add
pop
cli
test
bnd
add
cwtl
lock
mov
clc
jmp
neg
xchg
call
or
xchg
add
in
jmp
mov
call
mov
cmc
sub
loopne
int3
imul
nop
mov
mov
into
pop
bound
daa
or
insb
stc
fidivrs
sub
cmp
sub
adc
and
push
stos
cmp
in
cmp
fcmovnu
in
incl
hlt
and
push
aas
sub
and
int3
es
sub
stc
or
adc
mov
pop
jp
leave
loop
mov
jge
push
in
sbb
loope
push
mov
in
mov
aam
xor
jb
pop
and
sbb
imul
iret
sub
popa
rorb
sub
xor
xor
js
add
daa
js
adc
aaa
fucomi
fstl
mov
dec
mov
bound
adc
add
jecxz
push
les
daa
sub
cmp
shl
das
jp
test
arpl
sbb
mov
cmp
icebp
neg
bnd
scas
test
hlt
sub
lea
test
int
hlt
xchg
popf
das
out
cmp
testl
pop
iret
mov
loopne
call
pop
daa
mov
push
fmul
push
adc
nop
sub
sub
fstpl
hlt
int
mov
add
popl
and
test
iret
cmp
rcr
push
cmpsb
push
xor
xchg
repz
fcomps
ret
iret
xchg
push
les
adc
int
std
push
sbb
cs
jmp
data16
sub
sbb
sbb
pop
push
push
sbb
push
icebp
mov
sbb
xchg
push
pop
push
inc
loop
mov
push
mov
fwait
add
fs
loopne
sub
mov
xchg
loopne
cld
xlat
sub
in
into
aam
lret
mov
cld
hlt
mov
out
mov
dec
pop
bound
push
je
mov
sub
sbb
ljmp
xchg
and
test
xchg
pushaw
mov
sbb
cmp
pusha
les
imul
lcall
fidivrs
cmp
fdivl
lahf
sbb
repnz
fadd
jnp
push
add
pop
jge
jbe
mov
adc
xchg
inc
sbb
sbb
push
cmp
xchg
dec
cmp
jl
xlat
xchg
jecxz
adc
dec
repz
xchg
out
ja
xor
cmpsl
je
sahf
mov
lcall
inc
insl
int3
lcall
arpl
test
movsl
cwtl
and
outsb
cmp
cmp
sub
sub
mov
in
std
sub
ds
js
jg
mov
push
add
push
cmpsl
xchg
mov
push
imul
aad
jns
mov
daa
popf
ds
xor
sbb
cltd
and
jae
jg
jecxz
jle
jne
mov
jle
lcall
jle
inc
sbb
movsl
fstpt
testl
incb
rorl
jle
pushl
sub
sbb
push
push
test
popf
mov
cmpsl
test
icebp
sbb
jle
mov
and
lcall
cmp
sti
pusha
or
scas
sub
push
or
mov
lock
mov
data16
aam
stos
cli
sub
mulb
cmpsl
sub
mov
mov
or
popa
pop
dec
inc
xchg
insl
xor
jecxz
pushf
fwait
daa
in
jne
or
mov
imul
test
ret
psllq
sbbb
mov
jnp
bnd
cmpsl
incb
ret
pop
repnz
pop
incl
filds
int
daa
incb
les
sbb
add
lock
nop
in
in
adc
mov
pop
in
mov
mov
mov
jg
das
cltd
or
aas
popa
loopne
cli
push
mov
cld
jne
mov
push
xchg
test
leave
arpl
aam
cmpsb
jo
cmpsl
mov
mov
idivl
into
cmp
jg,pt
aam
out
repnz
lock
pop
adc
aam
push
push
aam
out
xchg
decb
pusha
mov
pop
cmp
or
cwtl
pop
in
cmc
bound
mov
inc
stos
aad
sahf
jbe
lcall
mov
in
js
repnz
in
mov
lret
mov
or
mov
lcall
inc
cltd
je
inc
and
imul
fs
and
cwtl
cltd
xlat
es
mov
adc
test
test
dec
mov
push
push
out
nop
pop
dec
mov
insb
push
jl
addr16
jmp
fistpl
lock
inc
mov
stos
mov
cltd
js
sub
out
pop
insb
mov
dec
ret
mulb
xchg
cmp
icebp
mov
push
push
loopne
int3
pop
inc
or
call
lods
sbb
aas
int
add
adc
dec
fnstsw
loopne
fxam
es
hlt
mov
das
sub
je
jl
mov
sbb
lahf
pop
add
aas
flds
dec
int
pop
cmc
pop
icebp
inc
adc
cwtl
sbb
pop
icebp
mov
insl
mov
jle
stos
enter
cwtl
imul
fiaddl
aas
stos
data16
xlat
sbb
arpl
out
movsb
mov
jg
lds
pop
rcrb
cmpb
sti
push
push
sub
test
cwtl
mov
or
push
cmpsb
lcall
sbb
jb
in
jp
or
iret
add
hlt
outsb
pop
lods
cwtl
xor
xchg
lods
cwtl
cmpsb
sub
imulb
jne
ror
test
xor
lcall
div
pusha
imul
test
pop
popl
inc
ret
mov
stos
mov
sbb
jl
dec
ss
mov
xchg
les
dec
incl
sti
addr16
or
mov
cmpsl
xchg
sbb
les
and
fildll
js
jnp
cmp
icebp
and
inc
mov
xor
pop
push
std
jo
push
xor
xchg
push
cltd
adcb
cmpsl
mov
and
iret
shrb
cmp
lret
call
inc
add
cwtl
data16
addr16
stos
leave
cltd
sbb
cmp
cwtl
jnp
out
cmp
cmpps
push
xchg
cwtl
dec
jo
aas
inc
sub
arpl
and
nop
push
sub
cltd
jo
lret
cwtl
mov
out
jnp
lret
sbb
xchg
leave
int3
mov
xchg
call
ficompl
lret
sti
fmull
sub
dec
in
mov
ljmp
mov
pop
lret
xchg
int3
insl
cmpsl
jmp
outsl
xchg
lret
push
js
les
aas
out
add
jns
clc
icebp
test
or
or
imul
dec
dec
adc
push
sti
or
es
dec
push
pop
pusha
sub
jge
popa
repnz
lea
pushf
movsb
sti
sub
pop
dec
test
aad
push
mov
shrl
or
insb
imul
inc
sbbb
cwtl
jp
sbb
push
ds
lock
and
mov
adcb
or
jp
or
mov
loopne
inc
aam
lcall
add
dec
loopne
or
add
lret
sti
jmp
stos
fistpl
mov
cmp
js
lock
mov
or
test
in
lahf
adc
hlt
mov
add
std
cmp
jecxz
cmc
orb
out
sbb
lds
movsl
mov
das
lahf
push
jle
pop
xor
minps
aam
xchg
ret
addb
sbb
add
loope
ret
nop
stos
ret
and
cmp
icebp
push
add
dec
sub
call
test
jp
xchg
mov
imul
adc
jmp
addr16
sub
jl
out
pop
sbb
sub
mov
cwtl
xor
add
xchg
sub
mov
repnz
dec
pop
loope
ss
and
lock
cwtl
inc
out
loopne
out
sbb
lds
jp
inc
jns
lds
fcmovu
inc
cwtl
sub
ficoml
inc
out
es
into
fldcw
mov
int
mov
mov
pop
push
add
lods
das
inc
test
rclb
sbb
leave
xlat
cmp
adc
jmp
mov
xor
mov
arpl
sub
jo
lods
cmpsb
add
mov
or
inc
popa
mov
rolb
pop
scas
rcrl
fiadds
insb
dec
imull
andb
daa
lock
imul
ja
jecxz
jbe
mov
or
pop
cld
ret
leave
js
ret
fisubrs
cwtl
inc
hlt
push
push
scas
sahf
aas
mov
das
gs
add
arpl
jae
cmc
dec
lcall
add
dec
int
jnp
es
fs
cwtl
lods
loop,pt
cmpsb
pop
loope
int3
fs
add
sub
dec
lret
push
sbb
pop
arpl
xlat
mov
adc
gs
sub
sbb
adc
pop
add
mov
sbbl
mov
es
xchg
cli
notl
pop
incl
loop,pn
inc
xchg
adc
ss
insb
mov
sub
enter
dec
scas
repnz
sub
lds
fs
popa
xchg
jbe
in
pop
xchg
std
hlt
rorl
xor
je
scas
jge
or
and
fldenv
xchg
adc
add
jae
pop
adcb
cli
loop
xchg
mov
sti
jns
sub
pusha
sti
in
add
cli
arpl
jl
pop
cmc
rcrl
sub
cmc
movsl
in
sbb
cmp
movsb
cwtl
in
in
push
add
mov
in
push
xchg
dec
xchg
jecxz
dec
aad
add
stc
jle
jecxz
cli
daa
xor
jle
sub
dec
pop
repnz
or
jns
cmp
insl
movsb
sub
std
loop
or
rcll
mov
xchg
cltd
fs
jo
repnz
fiadds
stos
js
in
enter
ja
insb
test
jle
and
add
test
jmp
jns
and
movb
cwtl
incb
push
fptan
rorb
testl
nop
pop
cmp
lret
adc
dec
sti
sub
mov
scas
inc
mov
adc
popf
in
inc
add
push
fwait
or
out
push
pusha
leave
sub
inc
sub
rorb
std
sbb
add
or
lods
adc
mov
adc
mov
mov
sbb
popl
in
imul
jp
dec
lea
test
adc
lcall
pop
jmp
pop
sbb
loopne
lods
or
fdivrl
sbbb
out
jb
or
pop
sbb
xchg
scas
lock
or
jae
xor
imul
popa
mov
shlb
es
inc
mov
jp
in
pop
mov
and
idiv
pop
jecxz
add
fdiv
stos
lcall
sahf
orb
hlt
add
and
stc
and
fs
mov
sub
jne
fsubrp
xchg
dec
or
push
popa
mov
push
or
fbstp
xchg
cs
pop
add
xchg
xchg
dec
pop
ficomps
lret
sbb
sub
pop
and
and
stos
and
sbb
cwtl
out
mov
add
call
leave
in
mov
cmp
loope
leave
and
pusha
movsb
shr
arpl
pop
push
lahf
jae
in
cmpsl
jge
or
pop
mov
and
fists
jmp
or
jns
cmp
lods
ficoml
not
cmp
mov
les
push
pop
hlt
cmp
adc
xchg
pop
scas
sbb
icebp
out
test
xchg
mov
push
fldenv
push
daa
jb
and
push
repz
sub
daa
pushf
push
lret
nop
xlat
jae
movsl
out
popa
icebp
movsb
and
movsl
xlat
jno
arpl
push
arpl
iret
adc
xchg
sbb
in
sub
test
cmpsl
stc
sub
call
mov
in
inc
inc
cmc
in
es
out
imul
adc
fmuls
mov
hlt
pusha
mov
cli
add
adc
lea
jp
popa
cld
lock
xlat
cli
movsl
lods
cmp
push
jo
adc
sbb
movsb
sbb
fwait
imul
and
jo
sbb
or
mov
add
test
push
xchg
push
sbb
enter
sub
push
imul
sbb
pop
xchg
icebp
lret
push
inc
ljmp
adc
add
aam
mov
scas
cltd
sbb
push
xchg
mov
aas
mov
and
sub
add
xchg
repnz
add
sti
mov
ljmp
and
lock
fstpl
fisubl
mov
pop
mull
loopne
call
pusha
subl
inc
sub
in
insb
les
inc
cmp
and
inc
adc
ja
cmpsb
xchg
test
dec
call
and
cs
dec
and
and
push
jmp
or
pop
out
sub
sub
or
lret
cmp
mov
or
lret
sub
stos
leave
js
fldcw
pop
sub
out
adc
loop
in
pop
push
ljmp
jbe
repnz
mov
daa
push
fidivl
push
mov
dec
call
jo,pn
or
movsb
mov
out
xchg
fs
push
aam
gs
or
pop
and
lods
jle
cmp
es
add
add
and
stc
data16
adc
movsl
out
jmp
lea
dec
in
mov
aas
mov
sub
cmp
xorb
mov
pop
sub
dec
adc
sbb
push
cmpsb
sbb
cmp
xor
sub
and
adc
cwtl
mov
mov
sbb
jecxz
sbb
sbb
mov
xlat
sbb
rcll
sub
mov
sub
ret
dec
adc
mov
jp
push
lret
push
pop
fsts
jmp
lcall
push
enter
arpl
into
lcall
push
jp
push
leave
dec
adc
pop
push
scas
xlat
hlt
cmp
outsb
out
sub
pop
jecxz
lods
xchg
loope
mov
pusha
scas
jne
dec
xchg
add
pushf
insl
adc
std
lcall
pop
cmp
mov
pop
cwtl
mov
std
pushf
pop
idiv
aam
movsb
out
push
sub
imull
push
cs
jns
pop
mov
add
sti
lret
push
or
adc
sub
and
sub
movl
sub
inc
or
inc
orl
add
xchg
mov
js
out
cwtl
dec
inc
fdivp
pop
cmc
push
icebp
lret
mov
cmp
sbbb
mov
dec
sub
xlat
or
xchg
or
shlb
sub
insb
and
and
xor
push
adc
lea
js
les
xchg
loopne
xlat
sub
cmp
les
mov
xor
outsl
data16
daa
mov
cli
and
cmp
cmpsl
inc
pop
mov
insl
lret
mov
pop
sub
dec
cmp
outsb
scas
adc
gs
test
sti
sbb
fistl
xor
mov
fnstcw
xchg
arpl
lods
xchg
fwait
jmp
sub
or
sbb
push
adc
and
loop
xchg
cs
popa
out
push
mov
pop
out
push
sti
in
addr16
mov
inc
dec
jmp
test
test
sarb
outsl
lret
jp
loop
jl
sarb
js
daa
insl
add
pop
or
in
pop
and
repz
or
sbb
subb
and
hlt
mov
ret
push
int
out
lods
mov
jecxz
repnz
pop
mov
popf
dec
ss
pop
pusha
cmpsl
pop
outsb
int3
call
adc
std
nop
push
mov
sub
push
sub
cltd
cli
pop
cmp
arpl
and
cmp
mov
mov
out
std
push
andl
jecxz
dec
or
rorb
xlat
hlt
or
dec
xor
inc
or
cmp
into
or
mov
cwtl
leave
loopne
pop
out
mov
aas
lock
leave
dec
inc
mov
lret
push
test
leave
jno
negb
repnz
adc
or
div
clc
inc
mov
inc
icebp
jo
or
sub
sbb
and
sub
mov
rorb
stos
les
rorb
inc
push
mov
cmpsb
dec
int
or
faddl
in
adc
sahf
xchg
pop
mov
popa
arpl
popa
inc
stc
or
rolb
rcrw
dec
fistpl
mov
sub
dec
mov
enter
test
push
mov
pop
ja
mov
sub
dec
rcrl
push
in
iret
jge
fidivrl
out
dec
jl
pop
pop
jno
inc
push
cmp
call
xchg
js
inc
cmpsl
pusha
ds
js
mov
or
loopne
mov
sub
test
jge
dec
loopne
int3
pop
imul
xchg
add
adc
jg
push
inc
testb
push
and
xchg
cmp
cwtl
sbb
sub
insl
inc
and
fs
add
jns
insl
scas
repz
in
loopne
mov
pushf
nop
xor
fwait
xor
loope
or
mov
mov
push
lods
dec
dec
fldl
fnstenv
and
out
test
pop
xchg
popf
fldl
pop
lds
mov
mov
mov
jg
mov
icebp
cmp
adc
xchg
xchg
mov
popa
or
push
mov
xchg
loopne
cmpsl
fmull
inc
adc
add
and
lea
das
gs
xchg
adc
repz
mov
cmc
dec
je
adc
adcl
pop
adc
push
xchg
inc
xor
mov
pop
int
cmp
test
inc
int3
push
ljmp
push
or
aam
aad
mov
lahf
dec
sahf
push
mov
and
cwtl
mov
inc
loop
sub
mov
push
xor
pop
aaa
mov
mov
icebp
mov
mov
mov
test
push
adc
std
xchg
ljmp
xchg
pop
or
cld
sbb
jns
add
mov
cwtl
dec
je
add
pop
in
call
je
daa
mov
jecxz
pushf
inc
xor
cmp
jl
sub
or
mov
or
xchg
flds
push
or
add
pusha
and
lret
movsb
popa
outsb
lret
push
push
into
sbb
sbb
data16
mov
xor
cmp
jecxz
lret
fnstcw
mov
cwtl
jmp
in
shl
cmp
pop
lret
dec
cmpsb
fisttpl
pop
mov
cs
test
test
in
nop
lret
lahf
test
or
dec
movsb
mov
nop
or
push
dec
mov
or
arpl
sub
cld
or
inc
add
mov
or
imul
nop
mov
out
add
jle
outsl
scas
cltd
sub
mov
jo
loop
mov
call
hlt
dec
sub
cli
dec
add
in
std
cli
sbb
dec
cli
push
outsb
das
xchg
xchg
fs
or
xchg
push
loope
into
dec
cmpsl
push
fistl
popf
inc
inc
nop
fdivrp
test
and
cwtl
in
jmp
outsl
cmp
ljmp
xor
mov
out
and
mov
arpl
mov
fisttps
in
rorl
xchg
cmc
pusha
shl
es
mov
mov
in
sub
movsb
out
sub
aam
sti
sub
adc
or
enter
int3
pusha
repnz
push
cmc
je
sub
inc
leave
xchg
and
repz
ret
pop
or
insb
into
jmp
pop
pop
fwait
mov
lcall
in
push
aaa
mov
jbe
iret
mov
hlt
and
and
or
sbb
popa
pop
and
loopne
cs
jbe
mov
mulb
adc
rcrb
ret
cld
les
adc
xor
aaa
fsubrs
stos
mov
and
dec
inc
mov
repnz
mov
shll
xor
cmc
notb
call
fistl
outsb
xchg
inc
pop
pusha
imull
adc
mov
es
hlt
mov
xchg
add
cli
repnz
shrl
xchg
int3
add
stos
decb
and
mov
or
dec
in
subb
lock
lods
or
or
push
or
stos
sti
into
lea
xor
leave
inc
pop
xor
loope
movsb
or
cmc
repz
jbe
call
stc
xlat
stc
icebp
flds
scas
mov
push
add
cmp
cs
cli
aam
sub
xchg
bnd
xchg
int
lcall
int
pop
mov
pop
sub
or
jecxz
add
insb
sub
mov
sub
xchg
adc
fimull
mov
sbb
aaa
mov
enter
out
and
neg
addl
popa
cmc
or
cli
adc
loopne
push
pop
sarl
jb
test
push
dec
icebp
pop
and
ljmp
adc
int
out
sbb
insl
add
jno
mov
in
sub
lret
in
xchg
int
out
cli
les
cmpsb
mov
push
sub
js
dec
inc
sub
ja
daa
xchg
es
ja
push
jo
cltd
and
divb
dec
push
pusha
fs
xchg
loope
mov
and
sub
dec
jmp
ret
outsb
fsubrs
cmp
mov
lcall
outsl
popa
mull
mov
inc
mov
push
mov
and
int
dec
cli
loope
jge
jl
popf
pusha
clc
into
mov
insl
or
mov
fsubrs
pusha
imull
loopne
notl
popa
or
mov
adc
push
out
cmp
adc
inc
inc
out
outsb
rcr
mov
sti
setle
xchg
mov
in
syscall
imul
push
lahf
mov
xchg
paddsw
ljmp
dec
aaa
cmp
stos
pushf
int3
xor
int3
adc
and
jp
arpl
cmpsl
loopne
fwait
push
push
aam
gs
mov
dec
and
call
fucomp
insl
jecxz
and
insl
cmpsb
cmp
sub
jnp
movq
cmp
cmpsl
mov
xchg
in
pxor
jecxz
xchg
shlb
push
rcll
xor
arpl
out
jge
pop
andl
aam
loope
lcall
iret
test
jle
sbb
mov
xchg
stos
and
pop
pop
sub
scas
inc
or
or
lea
out
iret
leave
loope
es
stos
push
sub
nop
ds
icebp
sbb
cmc
dec
and
stc
push
loopne
int3
imul
in
inc
je
stc
lret
test
sub
sbb
getsec
data16
inc
out
xchg
jns
sub
push
jmp
rcll
inc
mov
mov
mov
xchg
and
lock
daa
addb
repnz
add
dec
lahf
sub
xchg
loop
sbb
sub
mov
mov
dec
sub
pop
sahf
sub
mov
dec
mov
mov
int
mov
adc
jg
dec
cmp
lock
pushf
dec
sti
push
and
pop
cli
loopne
mov
loopne
movsb
lcall
jecxz
sub
sahf
stos
push
or
int3
into
push
sub
push
push
sti
popl
cmp
popf
lret
cli
repz
xchg
fimuls
shll
sbb
cld
test
jmp
pusha
fdivr
mov
test
pop
xchg
and
or
js
out
sub
mov
jbe
pushf
and
cmc
add
jne
jp
int3
xchg
out
idivb
int3
sub
icebp
dec
sti
xchg
int3
nop
fwait
movsl
pusha
mov
js
int3
in
and
cmpsl
loopne
test
cmpsl
pushf
not
test
lea
loop
lcall
jae
clc
xor
mov
lret
pushf
lods
push
jl
and
imul
mov
push
mov
sbb
divl
nop
cli
inc
pop
or
cli
sbb
pusha
pop
adc
cli
sti
or
inc
pop
sub
add
enter
push
fdivrp
inc
hlt
jecxz
dec
and
xor
push
lahf
mov
and
mov
ljmp
loope
out
adc
push
add
adc
ljmp
out
push
mov
mov
les
fdiv
xchg
outsb
lret
mov
add
xor
fisubrs
push
mov
push
mov
sub
sub
popa
popa
xor
jp
lret
lods
xchg
push
sbb
sub
mov
in
leave
popa
jnp
sub
pop
mov
mov
stc
cmp
shl
dec
test
mov
mov
and
ja
push
cs
shrl
and
repz
repnz
or
inc
inc
cltd
shrb
xchg
xchg
push
lods
mov
cmp
into
xchg
sbb
lret
ret
cvttps2pi
fstps
xchg
lcall
stos
xchg
or
out
inc
push
out
jecxz
and
out
iret
cwtl
lret
pop
fistl
lods
fdivrl
lock
iret
add
repnz
scas
dec
idiv
sub
mov
jl
sub
fcmovne
out
test
repz
xchg
enter
sbb
iret
imul
xor
push
cmc
clc
es
out
fs
pop
loope
pmuludq
bound
pushf
fsubr
fsub
and
cwtl
pusha
adc
aad
stc
ret
dec
or
scas
push
dec
rcrl
ficoml
in
loope
outsb
bound
in
test
push
mov
movsb
jnp
inc
jbe
sub
push
test
into
add
inc
jns
push
or
jae
dec
les
cli
lea
xchg
pop
movsb
cwtl
test
cwtl
mov
arpl
push
lcall
cs
subb
insl
dec
dec
mov
and
jp
imul
mov
out
cmp
cmc
pop
insb
fisttps
outsb
or
imul
or
xchg
popf
pop
sahf
lds
hlt
mov
movsl
lret
sub
and
cmpsl
test
sub
lea
ja
and
push
cs
or
das
out
rorl
cmp
cmp
xchg
dec
xor
aam
shlb
sar
sbb
ror
test
sbbb
push
nop
dec
sub
aam
sub
xchg
mov
mov
out
cs
jle
adc
pusha
sbb
in
adc
adc
inc
push
mov
adc
push
rcll
out
mov
pusha
dec
adc
xor
lret
cmp
push
pop
mov
cmp
decb
adc
sarb
add
int3
or
dec
ja
dec
or
dec
jo
mov
iret
les
mov
or
jne
push
ret
pop
repnz
insb
insb
push
push
faddp
push
push
inc
int
inc
sbb
xor
push
lahf
es
cmp
xchg
pop
cmp
into
add
addr16
mov
aam
es
sbb
shr
xchg
repnz
fiadds
sbb
fstpt
popa
cwtl
test
xor
adc
xchg
pop
push
mov
or
repz
shl
cmp
push
push
sti
lock
bound
sbb
dec
loope
test
dec
sbb
lods
ret
push
cmp
lods
negl
mov
pop
cwtl
adc
mov
sub
roll
stos
push
rcrl
cmp
cmp
out
lea
lret
cmpl
lock
icebp
mov
dec
sub
pusha
repz
popa
outsl
inc
dec
fldt
dec
pop
jo
sti
fcoms
adc
insb
xlat
mov
inc
shrl
lret
decb
jnp
lret
push
push
push
xchg
add
sbb
xchg
std
ret
push
inc
aas
les
pop
pop
pop
cltd
add
mov
mov
lcall
dec
pop
push
aam
aam
push
xchg
and
adcl
out
insl
lods
lds
stos
sbb
imul
inc
jl
in
sub
leave
sub
loopne,pt
pop
mov
and
ficompl
test
or
shlb
imul
or
rcl
sub
ja
mov
inc
loopne
sti
daa
bound
mov
add
lret
cwtl
sahf
in
cmpsb
push
sahf
sti
hlt
es
mov
ror
push
adc
es
loopne
adc
push
and
arpl
adc
push
in
sbb
xor
fsts
lds
add
mov
mov
adc
sahf
jae
loope
roll
or
add
mov
dec
jo
adc
rcrl
and
adc
jg
in
pop
fistpll
fdivr
hlt
scas
hlt
movsb
cmc
and
mov
adc
imul
sub
dec
enter
clc
imul
push
sti
icebp
fdivr
cmp
decb
notb
mov
jecxz
xchg
cmc
imul
xchg
pop
lods
scas
movsl
sti
dec
jmp
mov
sub
cmpsb
pop
mov
sub
xchg
inc
popa
sahf
fsub
and
sbbb
loop
test
xor
enter
add
arpl
scas
xchg
ror
and
sub
and
iret
xchg
movsb
jp
pop
leave
cmp
out
repz
add
or
loopne
aad
or
sar
mov
jge
ds
stos
cli
movsl
or
push
and
ret
stos
shll
or
stos
lcall
movsb
stos
sbb
aad
sbb
pop
mov
cwtl
hlt
test
mov
xchg
jo
rcrb
loopne
push
adc
cli
push
ja
ret
dec
push
inc
sub
stos
out
push
cs
dec
clc
xor
xchg
lea
outsl
jl
pop
ror
push
mov
xchg
sub
xor
lret
stc
cwtl
xor
adc
fwait
icebp
sarb
mov
iret
push
ficoms
idivb
push
call
jecxz
push
loope
sti
pop
push
pcmpgtd
pop
sub
xchg
leave
js
xchg
xor
pop
cmp
notl
out
shlb
mov
xchg
push
jb
cmp
jbe
mov
pop
ficoml
pop
mov
ja
fisubrl
aaa
xchg
inc
cmp
sub
xchg
jbe
out
js
lahf
push
lcall
push
push
jle
sub
lahf
loopne
pop
xchg
mov
mov
cmp
sub
out
rcrb
scas
loopne
cmc
cwtl
popa
push
add
enter
dec
lret
arpl
adc
xchg
int3
sbb
push
repz
and
pop
adcb
addl
pop
jb
push
mov
rorl
inc
and
mov
xchg
pop
jle
nop
mov
fwait
jmp
fwait
push
mov
pop
lods
mov
mov
pop
or
mov
daa
fcomps
pop
notb
lret
loopne
pavgw
cmp
mov
bound
mov
adc
iret
rcrb
lcall
push
add
cmp
mov
or
cmpl
fisttpll
call
mov
mov
test
pop
testl
aad
cwtl
add
test
dec
inc
popf
mov
call
sti
dec
fidivs
add
xchg
mov
sbb
aas
inc
push
cmpsl
sti
sub
xor
dec
loopne
mov
movsl
sbb
addr16
pop
out
in
sub
jae
lret
in
mov
lds
loopne
adc
loop
inc
xchg
das
mov
mov
inc
sarb
sarb
lret
out
fs
pop
aam
push
int
lret
out
fs
sbb
and
sbb
jmp
fimull
mov
cmc
sarl
pushf
jno
out
popa
mov
insl
mov
cmp
jle
mov
lret
fwait
mulb
push
push
enter
adc
rorb
push
inc
cld
popa
xor
inc
push
loopne
push
rcrb
mov
lods
cmp
push
mov
fistps
jle
ljmp
fcmovb
jmp
nop
jp
xor
push
push
icebp
add
sub
add
cwtl
gs
jmp
jbe
arpl
xor
or
adc
mov
out
pop
pop
mov
ret
xor
adc
test
sub
in
out
clc
out
push
mov
scas
aaa
repz
pop
or
aam
push
cld
lea
mov
jge
std
adc
inc
or
pusha
mov
push
sbb
fs
aam
xor
push
fcmovbe
jo
test
cwtl
fsubp
push
aam
xchg
or
xlat
int3
inc
add
lods
sbb
inc
clc
mov
je
dec
fcmovnbe
push
movsl
inc
mov
inc
xchg
sub
out
aam
out
popa
dec
fstpt
cmpsl
cmp
pushf
imul
lcall
popa
jno
cli
bound
dec
js
pop
das
push
cli
dec
xchg
inc
in
loope
adc
aas
repz
push
mov
xchg
into
lds
das
std
inc
xor
sub
cmp
jp
push
mov
daa
xchg
mov
xor
push
cmp
pushf
adc
rcrb
loope
or
fsubrp
movsl
mov
ds
sbb
adc
push
mov
pop
mov
dec
scas
push
jle
jb
xlat
fcomi
sub
jmp
ds
fcmove
sbb
push
aas
inc
sub
add
call
out
les
loop
dec
orb
loopne
fsts
cmp
ss
flds
push
push
or
sbb
sbb
inc
dec
add
cmp
mov
xor
fsubrs
aad
loop
repz
cmc
ret
iret
cli
bound
inc
inc
dec
sub
jecxz
sbb
pop
mov
cmc
sbb
iret
ficoml
es
sahf
ret
pop
pusha
mov
addr16
inc
dec
or
pushf
out
sub
jmp
xor
dec
insb
pop
push
into
jbe
xchg
add
cmp
das
loopne
ds
xor
xchg
aam
pop
rol
pop
push
int
into
in
loop
pop
push
cmp
or
or
pop
lock
popl
push
repnz
pop
aas
dec
cltd
ficomps
sar
xor
into
mov
cmp
xor
stos
or
fstpl
push
dec
jp
cli
dec
sub
ret
pop
stc
ret
push
popf
and
adc
mov
fimull
pop
cmpsl
ds
gs
xor
pop
mov
pop
mov
daa
mov
jle
add
popa
xchg
sub
movsl
mov
test
mov
dec
lret
or
sub
or
or
push
dec
adc
movsb
stos
jmp
int3
jge
fisubl
fidivrl
lock
push
sbb
and
push
pop
or
insb
sbb
mov
cmp
in
aas
mov
out
popf
add
inc
insb
and
in
movsb
sbb
loopne
rcrl
jge
mov
fldt
fs
inc
pop
or
inc
or
xchg
aaa
jo
sub
jne
aam
out
push
cmc
call
repnz
pop
or
push
cs
aaa
pop
push
add
mov
mov
addr16
pop
lahf
dec
sbb
daa
lret
lret
sbb
into
daa
push
and
call
jo
fwait
lahf
dec
push
dec
pop
pop
or
test
pop
and
daa
or
xchg
cs
movsb
xor
mov
ljmp
daa
fwait
jne
call
sahf
outsl
lea
and
outsl
inc
xorl
or
mov
ret
insl
add
jbe
jae
and
cltd
xchg
jae
pop
push
shrb
xchg
in
cmpsl
loop
jmp
xchg
mov
inc
shlb
jl
sbb
sbb
adc
daa
push
pop
or
or
cmp
repz
mov
in
sbb
les
decb
push
dec
sub
inc
es
fsub
xchg
sbb
cltd
mov
mov
aad
push
pushf
loop
cltd
sbb
in
or
arpl
cwtl
mov
fs
clc
insb
pop
push
mov
lret
inc
incl
test
and
sbb
int
in
pop
mov
and
sbb
sbb
add
out
into
push
bnd
aaa
popf
mov
clc
decl
mov
sbb
popa
int
cmp
sub
leave
aad
xor
popa
sahf
aam
int
dec
in
insl
inc
mov
cltd
in
lods
sbb
leave
iret
mov
out
mov
test
mov
test
inc
bound
jecxz
xor
push
jne
out
out
push
xchg
sahf
faddl
jb
xor
xchg
push
lret
cltd
je
xor
xor
jge
lods
cmc
out
push
xchg
js
lcall
or
mov
push
movsb
repnz
icebp
ret
cmpsb
add
rolb
jns
sub
cwtl
jg
inc
sbb
pushf
mov
loop
cmpsl
cmp
cmp
cwtl
cmc
xchg
je
lea
insb
fsub
ret
mov
mov
fmuls
lock
dec
in
shll
push
add
sti
pop
loopne
fsubs
lret
fisubrl
cmpsl
xchg
arpl
dec
push
in
ret
lret
pop
pusha
pop
add
or
jge
jno
cwtl
fdivrs
scas
xor
pushf
push
push
call
sbb
addr16
mov
stos
or
sbb
cmpsb
xor
sbb
loope
sub
cmpsl
ficompl
or
jecxz
pop
add
pop
add
jae
daa
imul
lahf
and
push
hlt
nop
mov
loop
add
flds
bound
rcr
mov
lock
mov
and
pop
leave
inc
push
ds
pop
nop
das
push
stos
icebp
jge
pushf
cmp
jmp
aam
in
lcall
mov
pusha
sub
push
lcall
imul
fdiv
jns
mov
les
sbb
push
xchg
into
repnz
add
cwtl
arpl
out
ljmp
lock
bound
jne
sub
pop
push
xor
sti
add
adc
sbb
mov
test
into
popf
sahf
jp
loopne
fimull
repz
loop
inc
adc
arpl
lods
and
xchg
adc
dec
aaa
mov
push
lods
jmp
jno
mov
mov
aaa
push
out
mov
ds
push
jns
in
fnsave
and
lret
movsb
lock
adc
dec
push
ljmp
in
fnstsw
in
jle
sub
loope
bound
or
frstor
mov
in
mov
pop
cwtl
addr16
push
imulb
mov
pop
or
xchg
aad
cmc
sub
or
testb
push
dec
cwtl
repnz
push
jno
lods
sbb
pushf
fcomps
sti
cmpsl
push
shrb
pop
jmp
rep
pop
jp
les
xchg
loopne
cwtl
cli
pop
jg
dec
inc
inc
int
aam
sbb
ret
pop
and
mov
ss
stc
int
mov
sub
sysenter
idivl
int
pop
pop
jns,pn
cltd
mov
mov
les
pushf
inc
int
repnz
sahf
or
dec
int
xchg
repnz
icebp
int
repz
sahf
inc
repz
sub
dec
mov
sahf
popf
adc
setns
dec
and
dec
les
jnp
push
xor
xchg
mov
cwtl
jmp
push
add
repz
sbb
ficomps
out
icebp
jb
mov
xchg
cwtl
mov
rcll
js
or
xchg
in
jno
xor
mov
adc
sbb
out
insb
in
out
mov
xor
lret
sbbb
repz
or
es
sbb
pop
sub
cwtl
frstor
add
fwait
pop
out
insl
pop
xor
mov
or
pop
inc
les
jnp
jo
andb
push
sahf
jb
outsl
pop
cmp
push
or
mov
insl
sahf
test
dec
pop
fstpt
mov
iret
sub
jne
cld
add
mov
lahf
add
mov
arpl
pop
pop
lret
int
cld
sub
push
in
fbstp
pushf
pop
or
pop
imul
xchg
mov
xchg
sub
scas
js
imull
clc
and
xchg
sbb
loopne
int3
and
sbb
cmpsl
loopne
push
push
or
movsl
loopne
ficomps
enter
xchg
sbb
cwtl
lcall
cli
and
pop
sub
fistps
or
mov
cld
pop
xor
or
into
nop
bound
sbb
roll
xor
jmp
mov
pop
inc
rcr
test
mov
test
rorl
jge
jo
sub
loopne
pop
ficoml
sub
mov
sub
cmpsl
outsb
and
sub
pushf
xor
push
int
scas
and
jl
clc
jle
mov
sbb
lret
outsb
cli
and
push
jmp
jmp
mov
xor
popa
pop
mov
and
push
scas
sbb
dec
mov
clc
lods
les
mov
inc
cmp
addr16
sub
sub
adc
push
outsl
xchg
xchg
or
loop
pushf
jbe
cmp
daa
sbb
subl
pusha
and
or
mov
xchg
fdivr
jns
mov
test
out
dec
cli
jb
fsubl
enter
in
add
xchg
jnp
push
cmc
dec
shll
sub
xor
aas
mov
sarl
ret
fisttpl
or
or
sbb
es
lods
and
mov
out
adc
sub
and
pusha
lret
lcall
pop
loop
xchg
imul
rol
data16
sbb
mov
outsl
cmp
inc
ljmp
testb
shll
jno
dec
sbb
jge
mov
or
popa
mov
lahf
mull
std
lret
gs
or
dec
lret
mov
pop
adc
cmpsb
sbb
loope
cmpl
cmc
lahf
and
add
jo
popa
cmpsb
int
mov
sbb
imul
test
xchg
mov
cli
cwtl
decb
repnz
cmp
inc
inc
xchg
or
andb
cmpsb
sbb
movsb
sbb
xor
or
daa
and
xchg
sbb
decb
mov
das
jns
sub
dec
sub
xchg
push
adc
fucom
adc
and
inc
mov
and
adc
movsl
mov
push
addb
or
mov
scas
cmpsl
in
mov
jbe
outsl
ds
pop
movsb
popa
loope
in
mov
insl
xchg
loopne
idivl
cltd
sbb
and
loopne
sub
addr16
rcll
fbstp
sbb
pop
jle
loope
mov
adc
movsl
in
cwtl
fdivl
std
fwait
into
cmp
shl
call
nop
jl
lahf
dec
les
xor
ja
xchg
fiadds
push
int
rclb
jl
or
pop
mulb
repnz
pop
pop
and
stc
insb
push
xchg
arpl
clc
jl
mov
clc
cli
stc
sti
iret
jnp
std
clc
adc
or
jmp
xor
leave
cmp
aaa
sub
paddb
inc
inc
xor
jmp
pop
xchg
push
cmp
and
mov
je
mov
xchg
xchg
not
in
push
scas
mov
or
and
jl
aam
ret
out
es
pop
and
inc
scas
sti
call
dec
xor
mov
imul
inc
insl
sbb
insl
sub
pop
imul
xor
je
jnp
and
call
stos
add
ljmp
ficompl
xchg
inc
sbb
mov
adc
lret
fs
sub
sub
inc
test
or
ja
test
lret
and
scas
stos
in
mov
testb
mov
flds
sub
mov
int
jmp
or
push
mov
adc
cwtl
or
jb
and
inc
das
test
fimuls
mov
sarb
sub
adc
arpl
pop
lret
jle
int
push
pop
xchg
pop
sbb
and
mov
inc
and
in
add
repnz
loope
add
data16
add
mov
mov
add
jmp
mov
clc
repnz
xchg
and
and
jno
shlb
xor
pop
arpl
arpl
test
adc
out
mov
fisttps
sti
mov
jo
mov
jo
out
popf
mov
add
pop
jecxz
xor
cmp
cmp
in
push
sub
push
mov
xchg
or
mov
arpl
or
mov
mov
icebp
daa
mov
in
inc
lret
jne
loopne
and
fldl
sub
xor
or
loopne
pusha
ja
add
or
sbb
pusha
lret
mulb
dec
jo
pusha
in
push
mov
arpl
xorb
aaa
or
and
mov
insl
out
fmull
mov
xor
jecxz
cwtl
push
js
popf
andb
mov
stc
and
mulb
xchg
je
clc
or
divl
mov
sub
lret
gs
xor
loop
pop
ret
cmp
test
adc
shl
mov
in
pop
sbb
in
loope
sub
cmp
cmc
ltr
es
into
pop
adc
jp
loope
or
insb
outsl
aam
inc
pop
jae
xor
and
mov
inc
dec
sub
hlt
adc
int3
pop
andw
xor
mov
and
scas
repz
lret
sti
jecxz
push
mov
push
gs
je
lods
cmpsb
cmp
lods
jae
inc
fwait
cmpsb
in
das
repz
iret
inc
jle
push
cmpsb
lods
xor
add
cwtl
gs
lods
xor
or
movsl
inc
call
inc
cmp
pop
xor
add
leave
nop
enter
adc
addr16
rclb
push
js
or
mov
insl
push
loopne
ljmp
or
add
addb
cmpb
pop
repz
sahf
or
cmpsl
inc
sti
ja
adc
push
mov
add
pop
cmpsl
mov
out
or
out
sti
lret
out
sti
sbb
shl
adc
jg
dec
cwtl
mov
lahf
sub
pop
or
cmp
in
cvtdq2ps
cmpsb
das
jno
fs
sub
xor
dec
inc
lret
outsl
loopne
movsb
iret
or
push
loopne
in
repz
lock
in
notb
dec
cs
jg
xlat
cwtl
jae
lahf
dec
mov
dec
push
into
sbb
movsl
out
or
push
sub
and
loopne
imul
imul
pusha
imul
loope
jo
popf
jg
push
sub
fs
loopne
test
pop
add
movhps
ja
fisubs
and
mov
es
jle
in
or
insl
mov
in
pop
jmp
mov
push
nop
in
mov
xor
nop
pushf
testl
fucom
jmp
repnz
pop
xorl
or
pop
sub
mov
cltd
ja
dec
rcll
pop
mov
mov
imul
sbb
or
divps
es
and
lock
ret
mov
dec
test
mov
test
sti
pop
push
mov
setbe
mov
movsb
rolb
sbb
hlt
js
repnz
push
sti
lock
cs
cmp
inc
loope
jne
push
and
test
stos
loope
mov
xchg
lds
xchg
test
dec
inc
addr16
sub
xchg
cwtl
icebp
sti
fs
adc
es
jno
insl
test
dec
mov
ja,pn
dec
sub
subl
test
sub
jge
inc
jg
push
jg
cltd
repnz
push
jno
xor
dec
push
inc
jge
or
arpl
or
push
out
mov
iret
adc
div
clc
cwtl
test
loopne
stc
adc
pusha
clc
add
jge
add
mov
ljmp
arpl
pushf
xchg
push
movsb
or
dec
cmpsb
repnz
ljmp
in
inc
lock
leave
lret
roll
cmp
adc
xchg
xor
adc
sub
xor
jmp
push
sub
or
pop
or
xchg
shl
or
imul
outsb
stos
icebp
mov
pop
pop
sub
hlt
js
sub
hlt
cmpsb
repnz
jmp
sti
jae
bound
and
fiaddl
cmp
addb
xchg
mov
pop
subb
imul
lods
popa
jl
addr16
pop
or
mov
mov
jecxz
mov
pusha
cmpsl
gs
add
jg
stos
adc
int
cli
sti
popf
fdivs
int
xchg
sub
push
jb
mov
push
add
popf
cmp
or
sbb
lret
nop
pop
stos
fildll
and
adc
sub
and
push
jmp
out
jecxz
lret
adc
pop
push
call
pop
mov
ljmp
outsb
fbld
ljmp
lods
call
out
pop
lea
rorb
stos
push
in
jne
push
pop
push
push
mov
ljmp
sub
xchg
pusha
pop
test
adc
push
pusha
imul
push
dec
iret
or
leave
adc
call
fisttps
test
mov
insl
pop
push
out
push
adc
leave
sub
call
clc
cwtl
pop
jge
push
jno
adc
clc
jnp
daa
cwtl
xor
mov
xor
inc
roll
xor
aam
outsb
mov
and
je
sub
xchg
jns
in
orb
sbb
addr16
mov
into
shll
pop
or
repz
and
pop
jmp
loop
sbb
inc
out
mov
sub
lret
fldt
sub
cmp
push
cmp
mov
cmp
sub
add
lock
xlat
pop
jmp
sub
jp
and
int3
fwait
std
pop
jne
xor
xchg
bound
movsb
out
andl
cltd
out
add
mov
jmp
mov
jl
mov
cmp
or
mov
iret
lock
fimull
popa
cmp
ljmp
cltd
push
mov
or
pop
in
insl
jl
sahf
push
into
sti
and
fs
adc
out
lcall
and
cmp
jl
mov
mov
mov
push
imul
push
sbb
leave
cmp
sbb
out
shrl
test
add
dec
mov
mov
push
sbb
and
xor
lods
lret
pushf
and
int
xchg
cmp
or
push
sbb
ss
mov
xor
sub
pop
leave
dec
sub
cmp
mov
icebp
jle
stc
leave
es
imull
icebp
into
pop
in
lcall
lret
sti
jmp
adc
jnp
pop
mov
lods
dec
nop
aaa
mov
lea
mov
jge
mov
loopne
cs
out
cmp
inc
push
mov
push
imul
sti
repz
out
mov
scas
popf
sbb
lock
fwait
daa
mov
mov
lock
inc
xchg
pop
scas
push
add
jmp
pop
adc
inc
int3
xchg
repz
dec
addb
mov
lock
outsb
or
addr16
dec
enter
mov
in
sub
jns
push
fsubs
mov
add
mov
scas
test
popa
stc
inc
sub
scas
lods
xchg
rcr
icebp
lods
lea
in
or
jmp
lds
mov
xchg
cmpl
jne
je
cmp
pusha
sbb
aaa
lcall
aam
push
or
mov
mov
imul
pop
dec
jg
cmp
xor
jno
lcall
out
mov
divl
popa
cltd
fisttpl
and
repz
xor
lods
mov
fidivs
xor
mov
sbb
mov
imul
ljmp
in
mov
shrl
dec
pop
das
push
iret
or
enter
jg
mov
sbb
das
lock
push
inc
xchg
xchg
jmp
mov
ss
cmp
loop
sbb
es
repnz
cli
adc
clc
fcoml
imul
jae
pop
and
stc
xor
pavgb
adc
lret
inc
js
pop
outsl
mov
or
out
repnz
cs
outsl
inc
cmp
outsl
sub
outsl
scas
fs
scas
dec
mov
mov
cltd
mov
lea
mov
mov
pop
scas
or
ret
sahf
inc
jb
shr
scas
mov
lock
enter
imul
shrl
fistps
lret
adc
loopne
mov
push
unpcklps
into
shlb
mov
in
dec
push
cmp
or
inc
cmp
sub
in
test
fwait
stc
dec
pop
repnz
out
mov
mov
mov
xchg
bound
insl
mov
sub
xlat
fisubs
jmp
lods
jmp
popa
xchg
decb
jo
mov
mov
dec
dec
mov
jmp
push
ror
add
add
roll
popl
dec
sti
add
add
xchg
stos
and
repnz
pusha
lcall
sub
in
cmpsb
sahf
in
mov
dec
outsb
das
mov
jne
insb
adc
pop
and
add
sub
clc
test
daa
adc
icebp
out
push
popf
pop
in
in
pop
pop
insb
mov
mov
cmp
cli
out
xchg
sbb
out
adc
pop
mov
and
mov
mov
les
and
sbb
jg
xchg
lods
inc
cwtl
loop
fcomps
lock
jp
or
lods
subb
div
sub
inc
lock
sub
add
pop
lock
lock
xor
lret
adc
inc
xor
pusha
shlb
js
xor
inc
cmp
jp
out
mov
pop
loop
jo
xor
or
mov
test
into
dec
add
pop
jno
incb
add
cwtl
jno
pushf
inc
xchg
xchg
aaa
ss
mov
jno
or
sub
and
nop
icebp
xlat
aaa
inc
push
cs
jae
xchg
aam
fldcw
adcl
xchg
or
push
dec
xchg
call
jns
sbb
lods
mov
mov
icebp
cmpl
mov
lret
into
test
lret
stos
and
xor
sub
mov
repz
popf
jmp
pop
jmp
xor
sti
rorb
in
test
add
fnstenv
jo
in
or
and
icebp
or
pop
inc
shlb
adc
sbb
xor
add
repnz
jo
xor
repz
jg
divb
sub
and
mov
mov
xor
js
xor
cltd
pusha
addr16
repz
aaa
cltd
jl
cmp
jb
cmp
mov
insl
aaa
rol
mov
jp
es
test
jne
xchg
je
cmp
insl
orb
nop
pop
jb
mov
je
stos
lcall
test
cmp
push
orl
mov
jno
or
cmp
leave
pop
cmp
dec
mov
pop
repz
repnz
loop
fwait
mov
xchg
pusha
jno
and
mov
or
bound
cmp
dec
add
pop
jno
imul
mov
incl
in
mov
lock
test
jp
push
cmp
out
xchg
xchg
cltd
xchg
hlt
mov
dec
divl
mov
jo
rcll
mov
mov
push
cmc
pop
cli
pop
adc
mov
mov
cmp
clc
loope
ret
inc
shll
call
mov
repz
sub
or
fdivl
xor
lds
jp
sub
daa
fwait
jmp
fs
or
jl
repz
out
adc
mov
pop
xchg
xchg
lock
xor
sahf
jl
cmc
out
addl
mov
add
or
or
nop
dec
sub
icebp
les
mov
add
lret
jecxz
sbbb
mov
inc
clc
inc
inc
cs
sub
scas
mov
push
push
jl
mov
mov
adc
imulb
jge
js
repz
arpl
movsl
repnz
jge
xchg
std
adc
test
repz
and
mov
repz
icebp
mov
cmp
xchg
xlat
ret
mov
cld
sub
cmp
xor
or
fldt
in
or
mov
lock
ja
fildll
mov
push
iret
enter
cmpl
adc
out
hlt
jo
test
imul
adc
lods
fcomi
popa
pop
cld
xchg
pop
xor
iret
les
sti
sub
jo
ret
andl
sbb
stc
push
jo
jg
jno
add
sbb
or
mul
das
jnp
in
repnz
sarb
sub
jo
clc
test
mov
dec
aas
sub
das
gs
hlt
pop
mov
ret
xchg
call
xchg
mov
cmp
pop
mov
cmpsl
and
call
in
add
gs
outsl
mov
hlt
or
hlt
xor
pop
rclb
push
cmovae
jb
jmp
adc
jecxz
or
pusha
rep
pusha
insb
xchg
outsb
pop
jle
fxtract
mov
sbb
or
mov
inc
js
hlt
ss
shrl
nop
xchg
imul
sti
mov
mov
test
bound
xor
jecxz
jecxz
cs
sub
pop
push
xor
xor
in
cmp
or
ret
inc
jo
pop
scas
shlb
sub
jne
fdivr
jns
lods
bound
jne
loop
jae
inc
or
shlb
adc
sbb
xorl
fldt
inc
mov
repz
or
in
mov
clc
icebp
ret
lock
xorl
lds
sub
mov
inc
shlb
and
ss
lock
fnstenv
sub
dec
add
cmc
dec
adc
cmc
dec
ljmp
cmpsl
pop
xchg
es
inc
test
int3
mov
int
push
cmc
sbb
idiv
repnz
cwtl
mov
hlt
sub
cmpsl
fisubl
jge
push
push
into
pushf
outsb
imul
loopne
mov
lret
addr16
ss
popf
repz
mov
cmpsb
into
dec
loop
xchg
xchg
cld
cmc
cmc
push
int
ss
enter
in
repnz
or
pushl
or
jae
popa
int
mov
mov
jo
in
jecxz
repz
hlt
das
int
mov
lret
cmpsl
testb
mov
aam
mov
push
add
push
jle
fiaddl
pushf
sbb
and
jne
insl
lcall
loopne
fucomi
sub
jbe
loop
dec
cwtl
repz
pop
jns
sub
and
jno
xchg
mov
in
mov
pop
cltd
or
adcl
jg
mov
xchg
insb
push
mov
sbb
dec
test
out
xor
scas
jno
pop
leave
mov
push
pusha
push
pop
lcall
push
jnp
push
addb
hlt
mov
hlt
dec
or
stos
subb
push
shll
push
int3
jno
icebp
pop
rclb
mov
lcall
fldt
add
scas
filds
push
repnz
repz
adc
insl
mov
js
push
aaa
mov
inc
mov
fstpl
xorb
icebp
adc
stos
out
sub
ss
jne
pop
nop
aaa
cmp
mov
cltd
je
xorl
adc
ret
pop
repz
mov
sti
lods
ja
sub
ret
in
mov
inc
je
lahf
cmc
loop
ja
pop
xor
js
ja
pop
cmp
mov
mov
ja
loop
sahf
sbbl
xchg
xor
mov
fbstp
movsl
pop
stos
ja
in
stc
adc
les
adc
inc
ret
dec
cmpb
lock
mov
cmpsb
pop
mov
leave
mov
xor
lcall
lock
mov
mov
lock
dec
push
dec
gs
add
imull
mov
daa
shll
into
sbb
lahf
mov
imul
and
push
lahf
pop
or
icebp
es
or
cmp
inc
sahf
lahf
cltd
ljmp
xor
dec
sbb
cmp
xor
cmpsb
cli
daa
into
and
adc
adc
dec
lds
imull
fsub
imulb
arpl
movsl
into
leave
sbbb
aaa
pop
lock
xor
mov
lret
movsb
push
jp
mov
jo
std
je
inc
inc
push
xorb
insb
and
sub
mov
sbb
scas
insl
dec
mov
in
loopne
int3
mov
sub
les
push
call
pop
xchg
std
push
jo
inc
sub
mov
fs
shlb
punpckldq
push
sbb
push
xor
push
fdivr
mov
or
jmp
inc
rorb
sbb
loopne
clc
imul
testb
adc
imul
js
mov
push
adc
adc
jno
scas
jno
fprem
jg
mov
adc
jg
jle
insb
cmp
loopne
cmp
repz
push
pop
test
pop
std
jmp
mov
jno
call
push
and
jbe
jg
jmp
repnz
imull
jae
cmp
sub
push
cmp
fdivp
adc
inc
loope
and
and
mov
mov
cli
jns
pop
mov
aaa
xor
xor
fdivr
jns
pop
icebp
and
icebp
or
dec
xchg
xlat
mov
call
or
in
jns
xchg
push
mov
pop
mov
inc
notl
adc
daa
jns
insl
xchg
xchg
inc
add
mov
pusha
cli
inc
clc
jno
in
sub
cltd
mov
mov
test
and
or
movsl
pop
fdivr
jns
push
sbb
push
enter
stos
and
dec
hlt
call
push
push
dec
push
sub
ja
aam
sbb
arpl
cwtl
test
in
stc
jp
mov
push
lods
cmpsb
cmp
sbb
dec
stc
push
cmpsb
pop
aad
dec
mov
divl
int
sarl
out
repz
jmp
lret
jle
stc
pop
lods
cmp
add
mov
out
stc
cmp
scas
inc
cli
xchg
jle
xlat
pop
jp
sub
xor
lea
lods
loop
test
add
push
repnz
xchg
pop
cmc
lahf
and
cmp
add
or
push
das
loopne
cmp
add
add
jae
mov
pop
add
jns
mov
lret
lds
jp
mov
and
cli
sub
jo
scas
mov
xchg
jp
lods
hlt
aad
repnz
out
ljmp
std
cmp
sbb
jmp
fidivrl
xor
fldl
divl
idivl
in
fstp
repnz
mov
mov
cmpsb
mov
dec
push
mov
lret
fstpl
aaa
or
punpckhdq
cmp
es
scas
and
pop
mov
dec
cmc
cli
sub
lret
int3
inc
fcmovbe
lcall
daa
push
lcall
testl
xchg
jecxz
pop
ja
xchg
mov
les
lock
inc
cltd
jnp
das
inc
fists
fstpl
test
or
in
cli
popa
lds
scas
cmp
push
pop
sti
cmp
mov
inc
inc
cmp
dec
mov
and
js
cmp
mov
lods
ljmp
aad
fcoms
pop
das
xchg
lea
sbb
dec
inc
and
shll
lods
outsb
sub
es
cmp
pop
lods
cmp
mov
jmp
and
aaa
fwait
xor
sbb
push
mov
push
mov
pop
bound
popa
aaa
out
hlt
ljmp
inc
ret
inc
adc
pusha
es
or
mov
in
push
and
add
mov
ljmp
lcall
cmpsl
adc
lds
mov
jne
jmp
iret
pop
jne
into
push
ljmp
pop
or
pushf
inc
dec
sahf
push
pop
mov
das
mov
loop
sbb
cwtl
xchg
add
addl
es
lret
jg
fcomi
jecxz
std
outsb
xchg
xor
sub
into
lods
mov
lock
xchg
xor
sub
mov
sbb
push
and
insl
cmp
sbb
icebp
cmpb
lret
xor
rorb
sarb
sti
push
mov
adc
out
lret
rorl
std
cmp
adc
pop
std
cmp
data16
or
out
fidivrs
or
cmp
data16
jo
cmp
int3
adc
stos
mov
cmp
out
fidivrs
or
cmp
outsb
mov
xchg
sbb
out
and
sbb
gs
rolb
push
push
pusha
out
sub
js
push
aam
mov
mov
mov
inc
inc
adc
sbb
mov
lods
mov
ss
sbb
icebp
jno
dec
mov
mov
mov
sub
pop
je
ffree
xor
ret
mov
cltd
idiv
mov
sub
xchg
cmpsb
in
mov
das
jns
push
mov
add
jnp
cltd
mov
adc
rclb
sbb
pop
ret
fisubs
jno
roll
adc
xchg
add
mov
insl
inc
mov
cmp
lods
inc
icebp
lea
aam
pop
lods
mov
and
dec
ljmp
cwtl
scas
cmp
cli
jbe
out
mov
pusha
mov
lods
jecxz
cmp
jp
lahf
stc
cltd
push
jecxz
cmp
loop
bound
add
jae
xchg
popa
sub
hlt
mov
or
and
je
jae
lret
mov
jb
xchg
paddsb
jge
dec
push
cmp
push
pop
sub
leave
fldt
int
mov
dec
dec
movsl
mov
xchg
lea
push
lret
lea
int3
sub
xchg
sarl
ljmp
mov
sub
sbb
adc
popa
and
xor
mov
xchg
arpl
rorb
test
and
adc
push
add
icebp
mov
jecxz
std
or
sub
xor
sti
inc
std
bound
std
test
mov
ljmp
push
movsb
sbb
repnz
std
fnstcw
mov
fstpl
push
movsl
cs
js
ds
out
sub
idivl
lahf
pop
sbbl
mov
pop
push
scas
push
movsl
cmp
mov
sbb
or
push
sarb
jl
inc
test
lcall
rcll
std
sub
mov
add
jo
inc
hlt
sub
mov
insl
pop
ficompl
add
pop
mov
push
ret
or
mov
movsl
mov
movsl
in
mov
xchg
std
paddusw
bound
sub
std
or
adc
std
add
cwtl
aas
mov
xchg
lea
adc
fiaddl
lods
pop
into
mov
rolb
inc
into
or
je
js
jg
test
jl
subb
jg
xchg
pop
jg
sahf
fwait
jg
out
xor
xchg
xor
int3
mov
icebp
call
leave
lcall
mov
test
pop
sbb
out
cmp
scas
and
lods
rol
aaa
add
jo
mov
mov
rcll
movsb
incl
add
xchg
test
leave
pushl
sub
push
jbe
and
or
adc
push
xor
inc
inc
sub
incl
outsl
lret
outsl
pusha
jp
je
lea
cmc
jo
xlat
push
mov
mov
mov
xchg
sbb
jnp
inc
insl
movb
cmp
jecxz
dec
aad
jp
pop
lea
mov
cmp
cmp
getsec
repnz
scas
jl
mov
and
bound
mov
sub
add
repz
mov
daa
adc
pusha
cmpb
lock
mov
mov
iret
lods
icebp
mov
jmp
test
push
sub
test
pop
and
ret
jle
lds
mov
and
and
dec
pushf
inc
sbb
ret
xchg
jo
test
lret
xor
mov
jge
mov
in
rclb
popa
dec
jp
mov
dec
xchg
psrlq
push
sbbl
and
test
andb
mov
jecxz
mov
xor
xchg
cmpsb
loopne
out
jno
mov
clc
enter
test
mov
in
cli
xor
lds
dec
adc
or
cli
jns
stc
jle
xchg
dec
xor
jb
push
push
enter
clc
cmp
add
push
sbb
pop
xchg
cmc
arpl
inc
mov
arpl
or
fnstsw
mull
jp
cmc
sbb
or
arpl
mov
cmc
push
stc
pop
loope
inc
mov
cmpsb
int
xlat
cmc
dec
je
and
add
fisubs
iret
pop
add
pop
popa
xor
psllq
loopne
inc
sbb
jno
push
repz
in
loopne
sub
xorl
call
push
test
mov
ljmp
sbb
xor
filds
outsl
jne
jmp
sub
mov
or
rorl
jl
int3
ror
push
ror
cltd
rcrl
out
mov
lea
pop
cmp
leave
cltd
out
lcall
pop
mov
loope
daa
shlb
or
push
mov
push
outsl
xchg
xchg
jb
scas
stos
push
bt
add
push
mov
stos
sbb
cltd
sbb
and
mov
jbe
leave
aaa
int3
push
je
jmp
scas
mov
jae
aas
cmp
add
add
adc
out
inc
mov
or
or
xchg
sub
ljmp
fsubr
aad
xchg
daa
out
call
shrb
cmpsb
or
bnd
les
sub
lods
pushf
mov
mov
mov
cltd
enter
rcrb
sub
rolb
cltd
rcr
sub
lret
movsb
icebp
xorl
mov
or
and
and
adc
sbb
fnstsw
push
sahf
jle
pop
out
test
lret
je
orb
mov
lcall
pop
or
hlt
xor
aaa
sti
out
rcrb
js
out
popf
sub
sub
sub
jle
and
repz
hlt
insb
cwtl
add
ja
into
cmpsl
add
insl
mov
inc
scas
std
adc
push
ret
rep
sub
jne
clc
rol
mov
loopne
enter
subl
cmc
dec
pop
adc
ret
mov
and
and
int
cmpsl
inc
jle
test
cmpsl
out
lds
cld
pop
iret
pop
cmpsl
cmp
stc
imul
repnz
lods
dec
add
dec
cmp
mov
jmp
xchg
inc
loop
push
push
push
or
add
outsl
inc
out
or
and
hlt
jne
mov
jl
cmpsl
mov
test
sti
cmc
sub
sub
dec
dec
dec
cmp
divl
sub
arpl
push
fwait
inc
rcrb
in
mov
idivl
testb
ljmp
jns
cli
cmc
js
sbb
and
rorb
les
sub
addl
fwait
cmp
pop
add
subl
cmp
fwait
addb
cwtl
ret
add
fwait
ret
lods
dec
ret
stos
inc
in
ret
add
cmpsl
cli
insl
sub
mul
add
sub
add
jecxz
add
outsl
enter
cli
sahf
push
fwait
arpl
fisttps
mov
push
sub
inc
mov
push
inc
test
sub
inc
loopne
add
sub
subb
addb
mov
ss
mov
add
cwtl
sarb
rclb
rorb
inc
xchg
or
imull
or
sub
add
incb
rorb
sti
pop
add
subb
add
std
xor
xchg
inc
mov
in
test
sub
sub
lret
cltd
sub
pusha
mov
push
loope
test
ljmp
loopne
inc
push
jb
out
popf
mov
lods
testb
test
sub
sub
pop
mov
and
push
jmp
sub
daa
fwait
sub
daa
xor
fwait
sub
mov
sub
add
mull
mov
lea
sbb
cmp
push
leave
push
icebp
or
xor
lret
push
in
and
xor
test
loopne
lds
sbb
stc
pop
push
and
pop
notb
xchg
fiadds
and
push
or
sub
xchg
fs
lock
push
mov
je
cli
imul
mov
insl
dec
cmc
xchg
stc
adc
sub
out
loope
sub
test
mov
pop
push
and
jne
dec
sub
jmp
or
or
ret
scas
sti
ljmp
les
pop
mov
cli
lds
or
inc
bound
inc
test
add
dec
sti
loop
decb
fdivr
hlt
repnz
jno
daa
cld
or
loop
sbb
cmpsl
not
stc
adc
adc
fdivl
int
jecxz
mov
mov
lar
dec
std
test
add
rcrl
and
lods
jnp
les
add
sub
arpl
push
fwait
inc
rcrb
jno
mov
add
call
int
aam
insl
in
xor
pop
sub
arpl
int3
xlat
test
repnz
add
xchg
in
add
std
mov
repnz
cmpsl
jnp
add
in
mov
aad
rolb
xchg
gs
push
in
dec
pop
ret
shll
mov
push
shrl
pop
pop
xlat
subl
push
pop
ljmp
lret
cwtl
xchg
pop
out
pop
pop
aaa
sub
pop
or
lods
inc
out
je
lret
js
push
fistps
popl
or
inc
xlat
push
mov
js
sub
cs
into
mov
loopne
inc
sbb
xchg
pusha
xchg
js
in
testl
pusha
dec
dec
nop
xchg
or
inc
lret
sti
inc
sahf
mov
add
cmc
sub
sti
inc
inc
bound
xchg
out
push
sub
gs
mov
push
mov
inc
test
or
cld
adc
cli
fdivr
add
popf
mov
mov
mov
movsl
add
mov
pop
mov
imul
cwtl
push
inc
dec
mov
mov
pop
js
shlb
or
imulb
dec
leave
jo
add
sub
dec
xchg
insb
dec
leave
adc
dec
cwtl
push
dec
or
dec
push
pusha
fadds
loopne
dec
adc
lock
xor
lret
xlat
or
es
leave
mov
mov
sub
sbb
movsl
es
loopne
pop
lea
push
push
dec
fwait
leave
inc
mov
sbb
cli
es
gs
push
test
repnz
cmp
cmp
or
jge
add
adc
pop
or
sbbl
mov
and
xchg
lcall
sarl
lret
insl
mov
jecxz
les
inc
sbb
push
push
and
movsb
mov
cmp
fsubrs
sub
jl
push
jns
leave
jbe
ret
add
dec
jne,pn
mov
mov
xor
dec
loop
sub
rolb
cwtl
rcr
adc
lock
jns,pt
xor
idivb
xor
sub
or
popf
or
js
mov
shll
mov
cltd
dec
dec
nop
mov
sbb
push
nop
shl
push
sbb
insl
shlb
mov
into
xor
xor
xlat
out
sub
mov
push
int
jl
sub
lods
push
sub
fwait
lret
lods
orb
cwtl
imul
loopne
or
sub
or
cwtl
in
or
in
lea
insb
dec
dec
sub
dec
in
sbbl
sub
dec
icebp
pop
fwait
dec
std
or
dec
nop
outsl
mov
hlt
mov
xchg
sub
fwait
mov
dec
lock
lret
mov
aam
mov
fmuls
test
enter
adc
sub
or
in
shll
imul
lret
push
ljmp
adc
loopne
or
dec
cmp
sub
aad
jecxz
or
xchg
sbb
sub
pushf
or
or
xchg
or
adc
dec
mov
dec
stos
add
es
sub
popf
xchg
jnp
inc
mov
mov
imul
add
cwtl
mov
sub
movsl
or
orps
stos
or
mov
mov
enter
or
enter
cwtl
adc
lahf
dec
pop
dec
pop
insl
or
addr16
or
aad
push
or
or
sti
sbb
outsl
dec
dec
repz
mov
adc
insl
pop
aam
sub
in
je
popa
cs
dec
inc
or
lea
mov
sti
inc
popa
popf
pop
adc
add
lea
insb
pop
sub
leave
inc
mov
out
push
int
loopne
int
aad
xchg
xlat
fldcw
jo
int
push
mov
push
loopne
push
xchg
lcall
mov
in
jl
int
imulb
test
or
loopne
ljmp
cmp
out
dec
popa
xlat
jle
int
clc
int
stc
dec
sub
push
push
ss
out
sti
push
dec
xorb
fldl
pop
inc
jp
movsb
jecxz
cs
sti
sbb
call
xor
jno
inc
das
orb
adc
mov
or
sarl
aad
cld
pop
loop
cmp
xchg
and
cmpsl
repnz
mov
push
in
or
mov
or
repnz
lea
pop
loop
pop
test
push
out
mov
push
fmull
fistps
and
mov
or
mov
xchg
mov
mov
repnz
xlat
or
adc
int
push
pop
cmc
mov
into
push
jge
int
dec
sbb
into
mov
rep
les
and
cmc
xor
push
mov
loope
cmp
cmovle
fwait
setg
popa
in
cs
jmp
bound
cs
add
outsb
xor
sbbl
or
dec
vrsqrt28pd
jmp
lcall
sti
jns
adc
sub
push
pop
vpmacssdqh
popl
repz
dec
or
sub
jbe
loopne
mov
pop
iret
lret
nop
fwait
out
roll
cmc
pusha
insl
or
mov
pop
mov
and
xchg
loopne
or
add
dec
js
or
shl
xlat
or
lock
dec
xchg
loopne
dec
notb
jo
dec
lahf
dec
fadd
ss
pusha
sub
mov
sub
xchg
pop
and
xchg
xor
mov
pusha
pop
std
aas
pop
int3
lret
inc
int3
inc
xor
mov
test
aas
cmp
or
xchg
pusha
xchg
int3
sbb
xor
xchg
cli
mov
call
icebp
dec
pop
or
add
sti
and
js
loop
dec
hlt
mov
dec
add
pusha
iret
adc
adc
push
iret
mov
rorb
inc
movsb
jecxz
and
out
mov
jo
xchg
mov
ds
nop
movsb
mov
outsl
inc
dec
cli
lods
aaa
xor
aam
sub
repz
jns
sbbb
cwtl
lcall
push
iretw
sub
std
negl
adcb
or
test
inc
inc
mov
xchg
stos
mov
xchg
push
in
sarl
xchg
fdivl
lahf
shll
ror
or
xor
sbb
push
lret
lea
push
dec
add
int
int
cmc
into
push
dec
cwtl
cltd
push
fistps
rcrb
jne
aad
jle
shr
cwtl
in
sarb
in
sahf
cmp
repz
adc
sub
adc
gs
roll
test
fwait
push
lods
inc
push
test
mov
push
movsl
in
jno
xchg
repnz
fwait
add
in
xchg
cmp
fdivl
in
push
and
xchg
icebp
test
sub
add
cwtl
sarl
shrl
push
movsl
sub
stc
push
sub
add
cwtl
adc
adc
sub
adc
cmpsb
fwait
rolb
ljmp
lods
add
inc
sub
cmp
sub
nop
out
pop
nop
sbb
shrb
push
rclb
xlat
xchg
add
cwtl
sarb
adc
pop
sub
adc
add
cwtl
adc
sti
pop
adc
push
insl
sub
adc
adc
push
or
push
push
imul
insl
xchg
xchg
jecxz
xchg
adc
jo
push
push
fistps
enter
pop
mov
shlb
js
xchg
in
imul
sbb
aad
sbb
out
jae
inc
aam
int
rcl
loopne
push
pop
lret
push
leave
lock
dec
pop
xchg
insb
mov
test
rorb
rcll
popf
les
rcrb
sti
es
mov
adc
xchg
lods
inc
xchg
stos
inc
sub
mov
mov
movsl
mov
test
cwtl
out
test
cmp
pop
leave
mov
xor
lea
push
int3
push
jnp
or
xchg
out
repz
xlat
aam
pop
or
lods
jg
or
inc
aam
xor
idivb
out
pusha
xchg
add
add
push
mov
loopne
aam
or
adc
cmp
pop
aad
fdivs
packsswb
lret
pop
movsl
out
xchg
pusha
push
push
loopne
xchg
clc
mov
xchg
addr16
inc
push
adc
mov
in
lret
xlat
or
aam
js
xchg
out
popf
rclb
aam
lods
xor
cmp
lret
cwtl
dec
sbb
std
loopne
aad
pop
push
dec
nop
xchg
pop
out
loopne
cltd
push
insb
cltd
in
push
cltd
lret
nop
xchg
cltd
out
loopne
fsts
mov
push
fsts
xchg
or
das
nop
and
addr16
repz
dec
or
or
sbb
xor
adc
lret
idivb
lcall
pop
lcall
pop
lcall
lcall
out
fcmovbe
sub
fidivl
inc
fcmovbe
nop
mov
sbb
lds
push
pusha
or
jo
sbb
jo
sbb
pop
sbb
cwtl
hlt
pop
fidivs
jae
pusha
cmp
insl
enter
pop
xchg
or
sub
inc
push
add
fistl
cli
mov
mov
in
cli
sub
push
pop
add
mov
aam
imul
inc
pushl
xlat
sub
popf
sub
test
loopne
sub
mov
insl
pop
cwtl
lcall
arpl
lods
push
je
sub
adc
dec
pop
mov
mov
mov
pop
iret
pop
xchg
stos
cwtl
adc
xchg
sub
out
dec
into
mov
jo
push
or
jne
repnz
fsubs
jp
push
sti
icebp
sbb
clc
or
pop
dec
xorb
fisubl
fsubrs
pop
or
lret
mov
sub
ljmp
leave
pop
ja
out
mov
jl
int
imul
lret
jno
xor
repz
and
pop
ja
cmc
xchg
jecxz
lahf
inc
xchg
es
mov
das
push
inc
mov
xor
enter
and
stos
sti
cld
fmuls
mov
fsubrs
fsubrs
jns
sbb
lods
or
mov
negl
clc
pop
stos
sti
scas
pop
mov
sub
pop
sub
sub
pop
repnz
push
in
sahf
or
pop
push
out
cwtl
popf
mov
sub
cld
adc
mov
out
jns
popa
int3
inc
cs
jge
sub
enter
sub
jne
and
inc
pop
insb
xlat
xor
fs
out
scas
fisttpll
pop
add
repnz
sub
outsl
sahf
movsl
or
loopne
pop
push
and
mov
std
sub
fsubrs
pop
mov
push
xor
std
jmp
jmp
fnstcw
aam
bnd
xchg
inc
sbb
adc
aam
bnd
xchg
sub
sub
mov
movntq
add
jb
add
pop
mov
jns
mov
inc
insl
pop
push
scas
testb
ja
clc
adc
int3
add
testl
aas
mov
mov
cmpsb
mov
in
xchg
dec
jmp
icebp
sahf
mov
pop
rcll
mov
inc
sahf
ds
sub
push
testb
dec
sahf
sbb
lret
sti
xlat
adc
or
inc
push
jb
mov
adc
fidivs
sub
mov
ficomps
lock
jle
leave
fidivrs
sahf
and
aam
and
pop
adc
inc
add
shlb
or
inc
outsb
and
mov
fucom
or
lock
out
mov
inc
inc
pop
out
push
pop
xorps
push
pop
fadds
xchg
adc
cmp
aas
sub
shll
pop
mov
or
out
pop
xlat
insb
data16
pop
cld
dec
push
pop
sub
leave
push
stc
jmp
popf
xchg
mov
mov
inc
xlat
sbb
addl
aam
iret
test
xchg
pop
aad
adc
dec
inc
adc
arpl
pop
push
inc
scas
inc
mov
mov
mov
xchg
xchg
fisubl
pop
iret
sahf
and
je
jmp
das
fcmovnb
sub
lahf
into
clc
das
or
sbb
sub
mov
or
inc
lods
or
pushf
js
lahf
push
popa
jecxz
into
inc
xchg
iret
mov
negl
fistps
jl
js
jnp
pop
fs
inc
adc
iret
xor
inc
xchg
enter
loopne
lahf
fbstp
movsb
pop
fbstp
sbb
adc
jne
sub
pop
cmp
sbb
push
pop
clc
sbb
cmp
sbb
xlat
push
mov
sahf
rcrl
xchg
in
ficompl
sahf
insb
enter
repz
popf
enter
mov
iret
mov
xchg
pop
pop
pop
pop
add
dec
pusha
jo
mov
scas
adcb
pushf
sub
ret
pushf
lea
or
pop
pushf
fisttpll
and
loopne
fmull
push
in
fdivrl
in
in
fsubrl
fsubl
sbb
mov
mov
xchg
loopne
and
dec
jnp
shlb
cmpsb
in
and
cmp
or
adc
cwtl
shrb
mov
stos
cmp
xchg
lock
cli
xchg
cwtl
bound
dec
stos
lret
or
adc
mov
pop
jbe
lret
push
ljmp
mov
lods
jno
addr16
mov
loope
inc
loope
jp
in
loope
xchg
in
jle
xor
and
data16
jle
and
or
in
sbb
pop
sbb
stos
and
mov
lods
je
push
aas
bound
jp
dec
in
pop
inc
cli
cltd
xchg
push
push
lock
mov
inc
mov
sahf
mov
fstpl
push
loopne
loop
pop
jnp
cs
xor
xchg
or
adc
pop
and
std
arpl
shlb
sub
or
pushf
and
loopne
push
pusha
xor
lret
jne
enter
mov
fcompl
jb
cmp
bound
icebp
bound
lcall
sub
shrb
shrb
add
data16
inc
and
test
and
sti
je
lea
pusha
test
fyl2xp1
paddusw
pusha
mov
lock
push
in
mov
stos
sti
xchg
mov
lea
cwtl
xor
fnsave
pushf
fisttps
xchg
pop
loopne
adc
loopne
cwtl
and
gs
loopne
pusha
insl
jecxz
loopne
and
wbinvd
and
and
out
mov
gs
xor
or
gs
lods
mov
movsl
data16
fisubs
sub
movsl
add
fwait
movsl
xor
sarb
imul
lds
and
in
popa
cwtl
in
sti
jge
popa
mov
loopne
or
bound
or
sub
and
mov
lahf
pop
and
push
push
fidivl
div
imul
loopne
cmpsb
adc
cmpsb
lret
sbb
cmpsb
leave
jo
cmpsb
out
jecxz
out
es
nop
lret
movsl
out
push
out
mov
sub
out
addr16
xchg
loopne
adc
daa
not
ljmp
in
loopne
daa
pop
iret
daa
leave
adc
dec
cwtl
gs
gs
loopne
adc
addr16
sbb
addr16
jo
addr16
loopne
addr16
es
lret
nop
cmpsl
shl
lock
ljmp
xchg
xchg
test
mov
jae
bound
movsb
cli
and
bound
pop
cwtl
and
mov
cwtl
fs
loop
int3
pop
out
pop
xchg
sti
bound
xor
xchg
shrl
shrl
test
loopne
pop
sbb
sti
push
mov
xor
imul
mov
in
and
sub
imul
sti
or
stos
or
test
jmp
test
push
dec
cwtl
cmp
sti
bound
cwtl
sub
es
mov
push
add
push
cwtl
push
subb
stos
add
pop
stos
jno
pop
stos
add
dec
ljmp
cli
pop
push
sti
aas
push
push
jne
push
sti
mov
jmp
mov
jnp
imul
fwait
imul
in
imul
pop
imul
xchg
or
stos
mov
sub
cmpb
pop
mov
jmp
les
adc
inc
in
jmp
es
jmp
adc
ja
ds
lods
inc
jno
cmp
sub
xchg
loopne
sub
sub
xor
add
fistl
cli
movsb
xchg
push
int3
pop
adc
push
or
xor
in
sbb
jo
lods
add
out
aam
xorl
push
ffree
xchg
mov
adc
test
stos
test
lret
mov
sub
dec
adc
mov
test
lahf
pop
fildll
jbe
cmpsb
imul
push
in
out
add
mov
dec
sub
lahf
rorb
aad
pop
xor
call
jecxz
hlt
rcrl
loope
aad
inc
loope
incl
loopne
scas
out
js
imull
out
popa
or
pusha
pop
sub
std
sbb
pushf
shll
xor
adc
or
loopne
scas
adc
iret
les
loopne
cmpsl
pop
sahf
adc
in
xor
mulb
mov
push
test
pop
imul
lods
and
ljmp
fstl
imul
jecxz
xor
fisubs
in
jecxz
sub
std
sub
mov
jno
test
mov
add
lret
or
or
push
adc
pushf
adc
adc
adc
or
cli
or
stc
call
mov
cwtl
sub
or
jo
pop
ds
aaa
lock
and
negl
dec
sbb
aas
test
lea
sub
insb
xor
push
das
mov
pop
lahf
test
stos
sub
cmp
imul
pushf
push
shlb
sbb
pop
jecxz
and
push
jno
sub
fidivrs
dec
sub
stos
sub
mov
fdivr
test
cmpsb
cltd
int3
inc
cli
push
or
je
push
int3
test
js
cmp
push
addl
sbb
sbb
add
call
sbb
jo
ja
cmpsl
or
cmc
jmp
pop
call
sbb
loope
fisubs
lret
cmpsl
jns
fs
jmp
jno
aam
out
int3
mov
movsl
cwtl
adc
jnp
xchg
insb
data16
xchg
bound
dec
fimuls
call
and
mov
rcll
push
sub
adc
xchg
xchg
into
push
and
daa
pop
xor
test
or
pop
andl
sub
aad
lret
pop
dec
cmp
inc
and
dec
sub
stos
xchg
repnz
sarb
mov
daa
or
arpl
and
mov
cwtl
ficoms
aas
es
dec
xchg
mov
stc
lret
arpl
cmpsb
mov
cwtd
jle
push
sbb
inc
push
test
out
xor
or
and
sub
lcall
popa
or
test
or
or
push
cmp
cmpsb
sbb
mov
pop
mov
out
fwait
sbb
sub
aam
dec
pushf
gs
lret
movsl
lock
es
repz
outsb
test
xchg
fcmove
sub
stos
scas
cltd
movsb
cmp
cltd
xchg
fldt
out
call
lea
cvtps2pi
adc
ret
imul
aam
jno
insb
lahf
adc
mov
gs
leave
fimull
pop
iret
sbb
dec
rcl
mov
aas
cmp
imul
gs
push
mov
stos
lea
mov
dec
mov
jnp
dec
js
repnz
sub
sbb
pop
iret
stos
pop
repz
inc
cmp
test
add
rolb
int
jle
clc
mov
xchg
add
sub
adc
fiaddl
loop
out
and
push
mov
xchg
lret
and
mov
pop
xchg
daa
cmp
imul
jecxz
mov
mov
daa
adc
repnz
sub
or
dec
test
jns
leave
or
jbe
mov
inc
pop
and
cld
mov
iret
stos
cmpsb
push
ljmp
mov
mull
arpl
pop
mov
push
adc
shl
test
imul
mov
sbb
xchg
mov
cwtl
sbb
arpl
push
pop
sbb
sub
inc
mov
ljmp
out
pop
add
sbb
es
lahf
xchg
mov
sti
sbb
adc
or
in
cmp
push
loopne
out
in
sbbl
es
test
pop
hlt
sbb
or
mov
mov
pop
loop
and
pop
sub
lock
sub
dec
iret
and
or
imul
jo
pop
test
sbb
adc
inc
out
mov
ret
xchg
stos
enter
cmp
add
repnz
adc
outsl
jg
sub
jne
jnp
js
incl
loop
adc
fnstenv
fsubrl
adc
sub
jl
ljmp
and
push
js
lcall
in
sbb
es
adc
pusha
pop
pop
lock
jns
int3
mov
mov
and
bound
fstp
or
out
and
outsl
loopne
pop
js
inc
pop
mov
lret
push
cmp
and
je
push
sub
mov
call
js
insl
push
inc
and
push
pop
das
cmp
xchg
sub
fdivr
popa
and
nop
add
push
xchg
sbb
outsl
dec
lods
in
xchg
fstps
lcall
clc
bound
push
mov
pop
jo
mov
pushf
add
daa
cwtl
add
and
and
and
push
test
scas
int3
sub
fadds
lock
xchg
dec
fstpt
mov
test
mov
and
daa
sub
es
sbb
mov
sub
xchg
cs
cmp
hlt
lcall
and
iret
aaa
or
cld
and
inc
enter
sbb
fwait
or
cmp
clc
xchg
and
daa
inc
and
iret
lods
dec
mov
push
stos
lret
xor
lock
cmpsl
and
pop
out
jl
out
dec
mov
out
int
ds
lcall
iret
or
mov
out
push
cmpb
aad
mov
das
push
shrl
divl
push
test
xlat
repnz
pop
adc
sahf
arpl
sar
bound
pop
xchg
imul
add
sub
iret
in
mov
jecxz
fisttpl
ljmp
and
sub
inc
or
or
sbb
daa
pushf
or
and
xchg
dec
imul
inc
push
xor
stos
lods
adc
inc
stos
jecxz
and
xchg
leave
xchg
mov
xchg
cli
out
incl
and
imul
in
in
stos
and
clc
loopne
and
and
mov
cmovne
rorb
imul
shrl
or
mov
in
movsb
iret
jbe
xor
or
adc
or
xor
and
mov
and
or
insb
push
movsl
xor
adc
shlb
movsb
sub
push
adc
xor
and
das
test
fstps
es
test
cmpsb
xchg
pop
mov
cmpsl
lret
imul
es
or
sub
in
xchg
add
test
lcall
xchg
cmpsl
fwait
sub
lods
in
jns
adc
inc
sbb
aas
out
xchg
mov
sub
lcall
icebp
addr16
test
jo
xor
sbb
and
enter
xchg
sbb
ljmp
cmpsb
mov
or
stos
cmc
push
push
or
jmp
sar
ficompl
xor
cmpsb
pop
loopne
iret
mov
stos
xchg
lret
ss
cmpsl
sbb
xor
and
adc
lcall
or
sbb
mov
adc
rcll
enter
loope
sbb
es
addr16
test
sub
mov
adc
or
lea
sti
dec
push
mov
movsb
push
xchg
es
mov
xor
sti
in
pop
and
aam
mov
sub
push
or
test
push
daa
out
and
pushf
and
mov
and
scas
or
gs
or
or
mov
sub
add
ljmp
es
xchg
and
push
and
clc
pushf
xchg
xlat
jecxz
in
repnz
or
rorb
leave
pusha
arpl
sub
out
jmp
dec
in
lret
addr16
inc
lds
in
or
pop
mov
stos
pop
stos
mov
push
inc
pop
jae
das
cli
or
adc
pop
add
jns
rcrb
fsubl
test
and
sbb
lret
repz
cwtl
and
xchg
sbb
repz
es
or
push
sbb
mov
pop
push
repnz
and
adc
jnp
arpl
and
fs
leave
and
mov
in
in
ror
pop
fwait
call
icebp
inc
movsb
jne
or
arpl
xor
and
movsl
into
out
dec
jnp
cmp
sub
nop
out
lea
psubsb
lgdtl
xor
dec
sbb
and
dec
outsb
loop
jmp
popf
mov
mov
iret
inc
pop
outsl
repnz
xor
or
add
out
int3
sbb
push
and
rcr
stos
inc
or
lcall
sub
cwtl
cmp
loopne
xor
into
sub
repnz
jns
mov
jecxz
and
outsl
pusha
lock
repnz
and
sub
mov
and
mov
or
fsubl
sub
movsb
xchg
push
rol
fisttps
mov
repnz
mov
inc
jg
push
std
inc
repnz
loopne
outsb
ljmp
or
mov
sbb
jmp
mov
pop
stos
xor
mulb
mov
test
add
jmp
in
sbb
lret
pop
cs
bound
push
lods
cltd
and
pop
in
mov
cld
daa
repnz
sbb
outsl
leave
xchg
push
testb
add
sti
and
leave
inc
or
out
sub
stos
push
and
dec
and
push
adc
jle
cmp
sub
insl
ljmp
cmpsb
lea
fcmovnbe
xchg
pop
ljmp
sub
or
leave
sbbl
enter
pop
mov
pop
pop
pop
cmpsb
xchg
stos
sbb
adc
mov
enter
lret
ret
mov
mov
and
fmul
push
sub
sbb
and
call
and
inc
xchg
inc
mov
cmp
aam
loopne
cmc
mov
push
scas
lret
jp
pop
mov
jl
aad
sbb
xchg
xchg
mov
test
std
push
mov
ret
mov
push
xor
dec
hlt
call
or
cmp
in
cs
cmp
dec
lahf
push
insl
jnp
sub
out
sub
in
lret
adc
push
repnz
mov
popa
xchg
stos
test
fwait
enter
lock
ja
je
insl
sub
pop
mov
leave
jmp
mov
dec
lock
and
in
and
cmp
movsl
loop
clc
shll
jo
loopne
sub
js
leave
xchg
mov
sub
clc
repnz
and
or
les
mov
pushf
hlt
push
xor
xchg
cmp
jo
dec
sub
call
add
add
push
std
in
lock
mov
je
xchg
aam
sub
lods
jnp
lret
or
pop
sub
fdivrs
movsb
and
iret
and
jns
pop
lods
cmpb
cmp
xor
gs
hlt
xor
mov
inc
xor
add
jg
and
push
jmp
movsb
push
pop
iret
incb
mov
loop
jmp
mov
lahf
cmp
push
cmp
adc
pminub
mov
sbb
sbb
imul
jmp
stos
lea
cmc
add
pop
and
jo
xchg
pop
pushf
xor
daa
test
add
pop
sub
nop
sbb
movsb
sbb
or
stos
sahf
sti
and
cltd
test
and
or
mov
outsb
jo
sub
insl
cltd
jmp
and
sub
add
push
and
lock
lcall
movsb
mov
xchg
imul
mov
hlt
fxch
sub
adcb
mov
stos
push
lock
or
and
int
test
es
jo
lret
and
out
and
test
popa
es
out
pop
movsb
enter
pop
vpunpcklbw
in
and
lds
and
and
movsl
cli
sub
test
lret
push
and
leave
fucomi
jbe
and
ret
xchg
sbb
fwait
jecxz
pop
js
xchg
and
push
xchg
jmp
in
inc
sbb
mov
cli
sub
pop
lret
rcrb
lock
mov
and
repnz
lret
jns
lcall
leave
int3
hlt
stos
pop
in
pop
jnp
jp
jns
pushf
leave
outsl
and
lock
mov
and
pop
clc
xchg
je
xlat
push
lret
mov
adc
or
out
out
xchg
dec
cmp
xchg
nop
and
jb
add
pop
add
and
and
movsb
addr16
inc
jmp
lock
sbb
stos
leave
stos
mov
dec
mov
mov
or
push
or
dec
pop
lock
mov
sbb
and
push
movsb
repnz
pmaxsw
ss
cld
jp
xchg
sbb
sub
mov
sub
xor
sbb
movsb
cs
dec
push
and
adc
dec
sub
ret
or
dec
cmp
ljmp
cmp
repnz
lods
clc
jbe
ja
clc
lea
leave
fs
sub
ljmp
je
or
inc
and
inc
ljmp
bound
mov
mov
sub
jns
adc
cmp
pusha
and
in
dec
js
or
daa
mov
mov
ljmp
cmpsb
test
fiaddl
movsb
clc
pusha
sbb
mov
xchg
adc
repnz
sub
stos
insb
sbb
fs
adc
stos
xchg
js
mov
ret
es
iret
jecxz
jecxz
pusha
jmp
call
mov
and
inc
xchg
out
sbb
loope
pusha
jae
or
ret
insl
into
inc
cmpsl
add
gs
sub
test
dec
pop
push
stos
cmp
mov
or
sub
arpl
int3
pop
push
push
test
and
daa
cmp
mov
test
mov
or
adc
mov
movsb
or
fcmove
leave
adcb
jle
adc
jge
xchg
adc
lret
xor
imul
imul
fs
sbb
pushf
pop
xchg
imul
insl
or
jge
in
movntq
out
daa
jmp
sbb
jbe
xchg
fsubrs
mov
pushf
loop
jmp
movsl
pushf
cmp
insb
sbb
sbb
xor
xchg
mov
and
pop
jmp
iret
jmp
rorb
shr
repnz
mov
push
xor
inc
add
adc
sbb
sub
cli
or
outsl
push
daa
mov
btr
jmp
mov
jbe
in
les
test
jmp
cmpsb
jecxz
fisubrs
insb
cwtl
mov
flds
test
xor
scas
add
inc
movsl
repnz
dec
or
dec
popa
fcoms
es
xchg
push
fisubrl
jb
call
adc
mov
sbb
jae
into
mov
sahf
gs
add
loope
movsb
out
xchg
add
nopl
loopne
push
xchg
test
add
push
rcrb
out
xchg
pushl
orb
mov
daa
xlat
pop
jp
mov
or
sbb
roll
aad
pop
fsts
jmp
jno
out
fsubs
push
sbb
in
out
addr16
icebp
mov
lds
and
add
sbb
jne
rcr
imul
push
or
ljmp
je
push
fadd
mov
mov
out
inc
addr16
adc
fisubs
call
lods
outsb
daa
neg
mov
stos
jp
or
and
lock
das
or
test
call
in
or
loope
push
and
hlt
xor
and
xchg
in
add
in
xor
rcrb
sbb
pushf
and
outsb
add
rcrl
dec
addr16
call
insb
cmpsb
mov
or
or
sub
sub
call
popa
in
or
popf
stos
mov
call
xchg
jmp
or
shrb
pop
lret
add
pop
sti
loope
jb
pop
scas
lcall
fwait
repz
or
xlat
sbb
cmp
sbb
aad
repnz
rolb
push
cwtl
xchg
stos
push
mov
fcmovu
movsl
mov
cmpsb
fmull
jge
outsb
xchg
sbb
and
orb
repnz
imul
sbb
jecxz
cli
sbb
xlat
popa
fmulp
or
sbb
sbb
or
jle
mov
xor
mov
mov
rorl
ds
lret
sahf
out
lock
push
dec
or
xor
xor
scas
pop
pop
mov
out
or
lahf
fdivs
stc
iret
popa
adc
xchg
xchg
jge
ljmp
or
push
lret
push
insl
sub
adc
shll
mov
pop
or
adc
push
inc
sbb
hlt
data16
cmpsb
test
jnp
adc
andb
or
lcall
push
lea
inc
repnz
inc
movsb
or
mov
jo
test
fsubl
push
subb
ret
jae
cmc
gs
cltd
cmpsl
inc
pop
iret
fstpl
add
ljmp
dec
fwait
and
inc
xor
movsl
subb
das
ja
jae
movl
movsb
lret
push
push
test
xchg
js
pusha
mov
xchg
xor
pop
mov
sub
imul
jmp
pop
je
in
popa
pop
js
add
mov
and
mov
jae
mov
daa
push
std
push
in
mov
xchg
ds
or
cmp
inc
jo
loopne
or
nop
jns
lahf
decb
cwtl
pop
jl
lock
jp
call
cld
jecxz
sub
hlt
mov
sub
sub
loop
mov
sbb
ss
cli
jg
mov
sti
pop
pop
cltd
bswap
cvtps2pd
push
clc
cmpsl
cli
les
stc
es
jnp
repnz
fiaddl
in
decl
cld
pop
lea
mov
cli
jbe
add
enter
jmp
jbe
and
test
push
repnz
or
js
out
lret
pop
pop
mov
fdivrs
sti
cwtl
pusha
cmp
test
push
push
sbb
add
mov
decl
dec
inc
movsl
sbbl
sub
cli
adc
lret
hlt
mov
pop
repnz
les
inc
gs
js
add
das
ret
inc
into
lods
sub
aam
sub
add
sub
adc
sub
add
pop
xlat
pushf
dec
in
pusha
shl
cld
and
aam
insb
sar
fiaddl
mov
insb
jbe
jmp
inc
xchg
popf
add
sbb
pusha
add
ss
sub
pop
cld
sub
and
sub
pop
cmp
mov
stos
dec
sbb
addr16
xchg
xchg
in
jle
mov
loopne
pop
mov
call
cwtl
lret
push
js
dec
or
imul
xor
iret
dec
push
mov
xchg
sub
sti
in
or
mov
sub
imul
push
xor
repnz
in
data16
stos
imul
shlb
cmp
or
sub
xchg
lret
mov
mov
jmp
mov
jge
out
mov
repnz
lret
clc
leave
aam
adc
mov
enter
aad
lret
dec
imul
or
sub
dec
insl
sbb
enter
pop
dec
cmp
push
sub
mov
ljmp
iret
pop
xchg
leave
je
mov
test
daa
sub
mov
add
mov
inc
mov
xor
or
jge
cli
adc
adc
shll
sbb
int3
add
dec
orb
mov
js
repnz
ret
fsubs
push
pop
sbb
sub
xlat
xor
aas
sbb
fst
pop
mov
inc
repz
or
ljmp
mov
jle
daa
outsb
dec
pop
mov
jnp
bnd
cmp
lods
push
mov
mov
jle
dec
xor
push
sbb
sub
stos
jecxz
dec
cmp
push
aam
call
sub
int3
dec
lret
fcmovu
pop
fdivrs
test
dec
add
cmpsl
out
or
cmpsb
and
fmul
add
loope
or
cmp
mov
and
or
pop
and
push
fidivrs
out
push
adc
inc
int
pop
lret
xchg
add
loopne
sub
daa
sub
inc
daa
stc
sub
pop
mov
test
les
and
ljmp
popf
lret
in
aad
and
push
subl
add
add
or
push
sysexit
sub
sbb
jmp
dec
add
jb
insb
iret
rcrb
sbb
cmpsb
jmp
fnstsw
fbld
in
lret
ss
arpl
push
push
jp
push
and
xchg
cltd
add
add
gs
mov
fs
xor
cmp
inc
js
aaa
mov
popa
inc
insl
push
mov
add
arpl
xchg
pop
shll
or
out
imul
imul
iret
sahf
aaa
mov
repnz
push
mov
add
and
mov
adcl
sbb
adc
pop
insl
or
sbb
cmpb
pminub
push
sbb
scas
adc
movsb
adcb
push
xor
test
jo
movsl
sbb
nop
loope
pusha
xor
cwtl
ljmp
imul
jp
pusha
popf
in
xchg
ds
in
dec
jg
fwait
xor
push
and
repz
repnz
rclb
xchg
push
das
arpl
call
mov
cwtl
mov
mov
or
movsl
dec
movsb
sub
das
mov
mov
adc
fstpl
and
gs
fs
pop
and
add
daa
sbb
or
fs
sub
sub
and
aas
mov
and
dec
lret
and
sub
or
push
pop
iret
or
push
xlat
ljmp
icebp
xchg
push
jecxz
mov
iret
xchg
dec
add
ljmp
fcompl
in
test
jne
in
scas
sbb
or
jle
cmp
adc
mov
loopne
iret
stos
sbb
push
cld
push
leave
push
daa
int
pop
bound
push
repnz
stos
dec
jbe
daa
xlat
add
cmpsl
repnz
insl
test
sbbl
lret
and
out
push
push
sub
or
leave
sub
pop
jmp
xchg
pop
inc
hlt
mov
jnp
mov
repz
pop
push
adc
and
aad
sbb
les
int3
aam
lcall
into
fcmovne
and
fmull
xor
aaa
mov
xor
mov
push
loopne
push
xchg
repnz
add
mov
icebp
pop
pop
divb
js
pop
push
xor
lods
je
addb
iret
sub
inc
inc
clc
ret
iret
pop
insb
adc
jecxz
mov
fnstcw
pop
mov
add
sbb
gs
sbb
jmp
xchg
sub
out
adc
push
push
addr16
inc
jmp
and
sub
mov
mov
lods
rol
out
pusha
and
sbb
mov
loopne
repnz
mov
mov
pcmpgtw
xor
adc
sub
repnz
stos
int
fs
mov
or
dec
mov
adc
jno
fdivrl
mov
cmpsl
add
jbe
mov
sub
sub
push
push
loope
movsb
cmp
rcrb
sub
das
pop
imull
test
sub
mov
test
mov
mov
sub
popf
or
fiaddl
adc
std
clc
loope
mov
cmpsb
test
stos
jge
mov
mov
jmp
mov
test
pusha
ret
sub
cmp
xlat
push
cmpsb
add
xor
mov
pop
xchg
add
pushf
cmc
cld
aad
popa
jmp
inc
adc
and
ljmp
sub
insb
inc
pop
mov
lret
push
sbb
sbb
add
jp
dec
dec
and
xchg
mov
lahf
mov
add
sub
notl
pop
cmp
jecxz
addr16
jge
fcmovne
jecxz
and
outsb
imul
and
jle
inc
popa
cltd
sbb
fs
repnz
jnp
or
call
js
push
mov
aaa
popf
pusha
pop
sub
sahf
mov
push
dec
mov
into
xchg
test
scas
or
pusha
mov
lret
fucomp
xchg
clc
jo
push
cmp
in
outsl
or
outsb
dec
jnp
xor
pusha
push
or
pop
jnp
jb
popl
fldt
jp
push
int3
mov
pushf
add
mov
sub
stos
sub
lret
pop
and
insl
std
add
sub
mov
js
jo
pop
arpl
repz
add
and
jo
mov
jbe
lea
sbb
and
and
pop
sbb
loope
jnp
and
clc
adc
sbb
push
cmpsl
mov
in
jecxz
mov
add
out
jne
mov
mov
dec
and
addr16
mov
xor
es
out
jmp
stos
or
pop
sbb
mov
xlat
xorl
insl
add
les
insb
mov
cmp
mov
cmc
xor
push
cmp
sbb
jp
mov
test
imul
mov
mov
lret
or
or
push
mov
loop
mov
data16
mov
cwtl
or
lret
int
ljmp
mov
dec
mov
loope
daa
push
and
jl
mov
into
cmpsl
out
pop
clc
cli
imul
fwait
enter
test
dec
mov
sbb
cli
sbb
pop
mov
add
cmpsl
mov
divb
loopne
cmpsl
cmpsb
les
sar
mov
sbb
push
nop
jecxz
xchg
test
push
xchg
pop
or
push
mov
cli
nop
hlt
lret
and
and
cmpsl
pop
xchg
sbb
sub
mov
daa
and
icebp
fildll
and
dec
sub
iret
sbb
pop
push
push
inc
mov
xchg
iret
cmpsl
idivl
es
aam
sub
test
sub
pop
and
out
in
repnz
pop
sbb
sbb
lahf
and
push
sbb
aam
mov
cmp
pop
lods
or
out
pusha
repnz
or
mov
movsb
hlt
adc
jmp
sub
sbb
sub
sub
cmp
fsubl
sahf
icebp
jb
repnz
sbb
shrl
xchg
enter
out
push
and
push
sub
sbb
and
push
adc
popf
jmp
scas
loope
das
sbb
sub
in
stos
mov
xorb
lahf
leave
cltd
push
scas
out
sti
jl
mov
ret
add
sub
jl
xor
sbb
test
fisttpl
jl
fs
repnz
or
sbbl
lret
sbb
mov
das
sub
es
insb
ficoms
sbb
mov
pop
iret
mov
push
stos
xchg
enter
aas
mov
mov
aas
jmp
inc
jo
xchg
cmp
sub
lret
xor
aad
idivl
aad
call
pusha
inc
nop
mov
stos
mov
int3
xchg
scas
iret
cmpsb
clc
sub
xchg
in
aad
fwait
loopne
or
loopne
test
inc
daa
xor
aas
iret
es
sbb
loope
clc
sbb
cltd
ljmp
sub
fwait
sub
cltd
and
xchg
cli
pop
fdivp
repz
push
sub
jnp
stos
sbb
call
sbb
sbb
out
sbb
jecxz
adc
pop
repnz
inc
push
or
sbb
in
popa
jo
cli
setne
sub
aad
jp
and
les
ret
addr16
repnz
cmpsb
pop
into
jbe
outsb
bound
lods
shll
js
pop
xor
or
sti
push
je
fildll
inc
in
je
push
sub
imul
lahf
lcall
mov
or
mov
and
rorb
or
sub
push
sahf
aad
and
fcmovbe
insb
and
push
push
and
jbe
add
pop
sub
cwtl
push
mov
test
out
push
dec
sbb
sbb
out
sub
sbb
and
sbb
in
adc
movsb
out
sub
mov
fisubrl
push
jecxz
ret
movsb
in
repnz
fidivrl
js
and
lret
push
repnz
imul
xchg
dec
sbb
adcb
cs
addr16
add
adc
and
dec
jo
lret
pop
iret
and
add
call
push
sbb
mov
jle
pop
sbb
push
in
sub
rcll
test
loopne
cmp
dec
jo
ficomps
test
leave
cwtl
cmp
sbb
sbb
and
sbb
adc
inc
repz
sbb
sti
adc
outsb
fildll
pop
xor
fwait
sub
pop
pop
inc
push
or
fisubl
imul
pop
jno
lret
insb
sub
lcall
repz
icebp
loopne
sub
jmp
xor
adc
jmp
addr16
leave
add
mov
pop
popa
fildl
cmp
and
push
mov
es
cltd
adc
xor
sahf
icebp
push
or
fwait
in
or
loope
stos
mov
divl
int
lret
ds
mov
and
lock
lds
and
sub
inc
sub
repnz
dec
cmpsl
xchg
adc
mov
pop
in
push
adc
sbb
add
jae
mov
fsubrp
add
enter
sbb
dec
lock
dec
shrb
lea
pusha
xchg
fwait
adc
subb
sbb
ljmp
sbb
imul
cwtl
test
cmp
sub
lods
mov
or
in
test
mov
push
cwtl
and
or
movsb
es
jmp
mov
mov
inc
mov
lret
rcrl
adcl
sbb
mov
lods
mov
leave
jmp
dec
popf
nop
cltd
cmp
jae
test
and
cmpsl
mov
xchg
test
pop
xchg
push
fsubrs
add
pop
fst
aas
mov
movsb
sbb
or
cltd
rorb
fwait
adc
xchg
mov
in
aaa
or
lret
pop
insb
inc
sbb
xrelease
xchg
pushf
ds
push
test
mov
aam
leave
xchg
inc
negl
mov
inc
or
mov
nop
xor
push
dec
jge
adc
or
dec
sub
and
sub
pop
es
sub
test
add
jecxz
movsl
cld
enter
dec
imul
icebp
test
mov
add
jno
sub
nop
and
mov
sub
adc
push
stos
mov
and
test
aas
mov
sbb
pop
arpl
sub
xchg
xchg
fs
or
xchg
aad
mov
mov
push
or
jge
jns
cs
fisubs
sub
fdivrl
mov
ret
add
inc
lret
sahf
and
test
push
iret
loop
cltd
les
sub
aaa
clc
and
shll
xlat
repnz
jle
push
divb
push
in
cwtl
loop,pn
gs
test
dec
aas
je
sbb
xlat
and
iret
xor
jl
push
jmp
xchg
mov
lea
mov
fadd
push
pop
loopne
sub
repnz
cltd
xchg
es
and
and
xchg
and
bound
mov
and
cmpsl
fimull
bound
faddp
push
nop
insb
push
adc
fldcw
adc
shll
in
push
jecxz
mov
xor
or
xchg
add
leave
inc
jae
mov
mov
out
cld
push
jg
or
and
or
es
inc
shl
pop
jmp
inc
popa
and
loop
int
int3
movsl
and
dec
or
jle
popa
or
and
mov
lea
or
insb
dec
jp
sbb
or
or
test
jecxz
es
int
push
add
push
aam
sbb
jmp
dec
jmp
stos
pop
data16
mov
push
lret
xor
xorb
pop
pop
cmp
and
cli
movsb
jl
sbb
mov
out
push
pop
scas
dec
sub
bnd
stos
enter
pop
decb
jbe
mov
aad
jecxz
sub
push
call
lret
sbb
ljmp
fldenv
lret
sbb
repnz
js
adc
sti
adc
rclb
adc
stos
pop
adc
dec
push
or
pushf
sbb
leave
cltd
ja
lods
movsb
mov
sub
add
and
and
mov
and
sub
sub
mov
cmpsb
repz
subb
nop
aas
test
loopne
mov
sbb
fadds
ret
fstl
add
xchg
in
push
enter
outsl
les
ljmp
adc
sbb
adc
xchg
pop
or
sbb
pop
sbb
or
jmp
cli
ja
push
ficoml
xchg
shld
push
xchg
push
fwait
add
sub
rorl
pop
das
aad
sub
push
adc
mov
data16
sub
jmp
mov
test
mul
xchg
imul
push
int3
sbb
xchg
mov
aam
fsubrs
pop
in
shll
out
jae
add
sbb
out
shlb
add
cwtl
call
pop
sbb
lret
outsl
jae
xor
inc
sbb
fprem
ljmp
pop
lock
sarl
jno
lock
push
aam
in
mov
fs
lret
ret
or
daa
mov
xchg
pushf
xlat
and
daa
and
and
mov
fdivr
sbb
xor
loopne
mov
pop
and
push
adc
xchg
aam
mov
stos
leave
mov
stos
arpl
cwtl
les
scas
popf
inc
and
movsb
inc
mov
repnz
pop
jge
out
push
xor
fildl
mov
mov
and
and
pop
push
fidivs
imul
xor
aam
mov
arpl
rcl
out
lahf
sub
aam
mov
or
stos
xchg
in
mov
lret
mov
sbb
lret
cmpsb
adc
out
les
sti
jmp
sub
mov
ljmp
test
lret
outsl
nop
fcoms
mov
xor
sub
jnp
fiaddl
leave
adc
and
sub
lret
adc
lret
mov
sbb
adc
mov
xchg
sbb
imul
pop
push
pop
jnp
mov
lcall
push
pop
mov
je
pop
adc
adc
setno
fstpt
cwtl
in
fcoml
and
inc
mov
in
mov
js
pop
rolb
push
aam
adc
sti
adc
ds
xchg
adc
loope
push
inc
sbbl
aad
sbb
daa
push
cmpsb
lahf
jle
jo
xchg
in
cmp
mov
jmp
add
daa
std
daa
push
jb
ret
mov
sbb
lcall
mov
dec
and
cmp
sub
aas
mov
out
mov
or
das
data16
or
inc
xchg
mov
push
dec
xchg
js
xchg
test
or
sub
or
pop
sub
sbb
call
pop
sbb
xchg
mov
sub
ror
and
push
mov
stos
aam
rclb
hlt
jmp
fmul
nop
and
lock
xor
adc
mov
mov
sub
jecxz
sub
jbe
sbb
cmpsl
in
or
ljmp
xchg
push
add
or
push
sbb
push
cli
in
aas
shlb
cltd
dec
movsb
jmp
or
push
mov
xchg
adc
sbb
mov
push
push
rclb
xchg
add
aam
push
push
sub
sub
push
out
rclb
repnz
fcmovb
icebp
or
jnp
test
dec
lods
xchg
jp
lea
ficompl
mov
adc
sub
fidivrl
cld
adc
push
xchg
and
jns
inc
sub
les
sbb
cltd
push
mov
add
imul
add
into
fs
sub
sbb
jp
xor
adc
ljmp
jge
mov
data16
jmp
push
xchg
fwait
test
or
push
mov
cltd
sub
mov
jecxz
sub
adc
repnz
pushf
xchg
cli
lods
cmp
fwait
push
stos
pop
mov
jnp
enter
es
sub
and
sub
call
sub
mov
loop
pop
lock
and
xor
mov
push
dec
rcrb
mov
lods
push
sub
call
imul
dec
jl
mov
push
sbb
or
lea
adc
jmp
ja
aad
je
pop
xchg
push
pop
push
sub
fnsave
in
and
adc
stos
cmpsl
mov
aam
xor
sahf
sub
stos
sub
out
stos
lea
sub
les
sbb
ja
sbb
xor
sbb
cmc
mov
popa
mov
pop
push
sub
rclb
cli
xchg
xchg
gs
push
or
mov
nop
push
push
xlat
icebp
fidivrs
push
mov
sub
bound
mov
fldenv
jbe
xorb
in
pop
or
jmp
cltd
cmp
sbb
pop
pop
and
and
out
call
lea
loopne
lods
add
test
adc
ds
xchg
scas
and
sbb
jnp
add
sbb
add
sub
stos
xor
mov
or
jp
enter
andl
push
mov
sbb
lock
insl
xchg
lcall
xchg
push
clc
addr16
add
jmp
pop
sub
loopne
les
sub
iret
sub
test
cmpl
daa
push
fcoml
jecxz
sub
ror
mov
je
mov
fs
in
addb
add
decb
pop
imul
jg
ret
xchg
adcb
unpckhps
pop
je
js
movsl
cwtl
rcrl
inc
clc
sub
push
jle
mov
inc
and
mov
fmuls
lods
xchg
stos
sti
or
jl
jl
cltd
mov
mov
or
push
jecxz
cs
cli
arpl
pop
test
mov
inc
dec
repnz
popa
cltd
fs
sbb
stos
repnz
mov
js
repnz
jecxz
lcall
add
pop
pop
scas
push
pop
jmp
and
sub
js
mov
pop
sub
xor
pop
fcomp
push
iret
daa
sub
aam
adc
adc
mov
aas
dec
mov
cwtl
fsubrp
adc
sub
movsl
repnz
sahf
cmp
ret
or
movsb
cmpsl
xor
cmc
xchg
jb
xchg
test
frstor
mov
dec
out
xlat
lods
out
imulb
rol
push
ret
and
sbbb
adc
push
and
pop
mov
xchg
sub
rclb
mov
xor
sub
ret
arpl
lds
test
add
fistpl
iret
add
adc
scas
ficoms
push
mov
add
lahf
movsb
push
pop
jne
fidivl
inc
or
cmpsb
aaa
sbb
lds
xor
popa
sbb
loop
gs
fsubrl
subps
xor
rolb
lock
nop
cmpsl
adc
cli
fcomi
jecxz
push
fs
leave
fiaddl
roll
roll
sbb
sbb
or
mov
xchg
data16
mov
pop
icebp
sub
cmpsl
pop
in
lods
mov
mov
subb
leave
call
mov
into
sbb
sub
movsb
and
lret
and
test
inc
es
sbb
orl
pushf
mov
pop
aas
hlt
xlat
or
jmp
repnz
mov
jae
and
das
cmp
add
xchg
add
outsb
sbb
lahf
out
adc
xchg
sub
out
add
test
cld
sti
fmuls
or
inc
hlt
or
test
iret
jnp
popf
cli
xorb
fdivrl
ja
hlt
inc
aaa
add
cmp
orl
addr16
in
in
repz
xchg
int3
cwtl
stc
enter
aaa
popa
aas
xor
or
xchg
inc
inc
adc
dec
fstp
push
lret
ljmp
repnz
movsb
scas
sub
push
xchg
test
dec
loopne
sub
push
test
dec
mov
xor
add
add
sbb
gs
sbb
arpl
lods
jno
sbb
std
nop
dec
mov
lea
mov
mov
popf
or
add
rcll
inc
jmp
cmp
pop
inc
and
jae
mov
mov
xor
leave
add
mov
push
or
or
pushf
xchg
movsl
sub
pop
js
insb
sbb
and
stos
jbe
pushf
or
leave
jae
sub
sub
outsl
test
enter
add
sarl
pop
jne
addr16
push
xlat
push
repnz
cld
bound
xchg
push
in
xchg
cmpsl
xchg
vmread
outsb
aad
jg
shrl
mov
jmp
call
hlt
push
adc
pop
rclb
loop
mov
or
xchg
xchg
orl
movsb
push
outsl
insl
mov
jp
mov
pop
lahf
ja
push
lret
das
arpl
or
pop
lret
pusha
sbb
add
pop
enter
es
fdivrp
push
mov
inc
pop
pop
push
dec
push
mov
cli
sub
and
xor
mov
add
lret
mov
jns
lret
mov
xchg
sbb
sbb
repnz
adc
xlat
test
jge
pop
or
bound
pop
es
lret
and
xchg
repnz
repz
xchg
mov
and
push
outsl
sub
jg
and
add
inc
gs
mov
incb
sbb
sub
mov
push
push
inc
pop
adc
lock
mov
fcoms
mov
push
push
scas
in
sub
sbb
ljmp
loope
loopne
mov
mov
jl
stos
in
nop
stos
dec
jmp
test
mov
sub
push
js
cltd
xlat
adc
clc
sbb
cmp
std
fistl
insl
sbb
sbb
fstl
movsb
pop
or
cmp
mov
loope
and
lea
stos
imul
repnz
es
out
mov
sub
jmp
and
ret
sub
rcr
cmpb
es
shl
in
bound
sbb
mov
js
ss
loopne
mov
push
mov
mov
mov
test
dec
and
fwait
xchg
sub
or
imul
and
lahf
and
daa
dec
jnp
cltd
mov
outsb
inc
xor
push
arpl
ljmp
and
test
movsl
add
sti
out
push
and
sbb
dec
movsb
arpl
xor
sub
and
sub
xor
pushf
inc
lcall
mov
mov
and
adcb
es
lds
xor
cwtl
fwait
nop
jl
add
adc
or
cmpsb
adc
lds
andb
pop
test
out
lret
daa
lret
or
sbb
out
add
push
test
loopne
inc
lar
ljmp
or
adc
gs
or
add
fs
sbbl
ss
xor
xchg
fidivl
pop
mov
aas
xlat
jl
sub
jne
adc
icebp
lcall
mov
xchg
xchg
cwtl
jecxz
inc
jl
repz
shlb
and
adc
and
out
inc
scas
and
out
sbb
call
pop
sub
ljmp
insb
sbb
cmp
es
xchg
xor
dec
ret
xchg
movsb
xchg
lcall
mov
repnz
ljmp
and
aam
sbb
xchg
js
data16
sti
clc
cltd
and
mov
xchg
out
std
jb
shl
mov
sbb
jns
cmpsl
fcom
lahf
and
xchg
dec
mov
dec
or
sbb
loope
lods
test
push
js
cmp
sub
mov
cmpsl
mov
xorl
sub
pop
or
repnz
jp
out
std
xchg
lahf
mov
pop
cli
mov
xchg
and
in
sbb
lds
pop
cltd
test
repnz
add
mov
and
sub
push
mov
loopne
ud1
repnz
popl
jecxz
fnstenv
sbb
jecxz
push
sbb
pop
ficompl
test
sbb
out
ljmp
adcb
or
or
and
add
andb
ljmp
stos
pop
or
sbb
push
test
sub
dec
mov
add
out
push
inc
sbb
push
repnz
mov
adc
add
psubsb
testb
mov
outsb
xchg
das
adc
jl
shlb
cltd
imul
loope
push
and
iret
stos
dec
into
or
fwait
or
adc
push
add
cmpb
sub
jo
cwtl
push
insb
cmpsl
xor
and
inc
adc
ljmp
xchg
call
and
roll
sbb
inc
inc
scas
cltd
xchg
loop
nop
xor
mov
shl
mov
sbb
repnz
pop
mov
mov
cmp
xor
and
cmpsb
and
or
imul
movsl
or
aam
lods
or
push
jno
add
xor
fs
insb
dec
jo
mov
sub
mov
mov
ss
stc
xor
popa
pop
into
hlt
ljmp
insl
fldt
cmp
fcmove
cmpsl
mov
adc
add
lcall
adc
test
filds
test
mov
es
pop
cli
and
daa
in
test
and
out
xchg
mov
or
arpl
js
mov
jecxz
ljmp
or
or
shlb
test
movsl
ljmp
xchg
cs
mov
and
and
push
sub
es
push
sbb
cmp
cmpb
adc
fwait
sbb
nop
xchg
pop
jp
push
pushf
fwait
adc
adc
adc
test
or
stos
cmpsl
mov
mov
and
dec
iret
sub
push
out
loope
push
loop
mov
push
inc
sub
pop
inc
fwait
out
or
imul
cwtl
and
pop
push
testb
xchg
outsl
dec
int3
icebp
cmp
sbb
icebp
push
or
decl
push
pop
sub
ja
das
pop
inc
shl
lahf
nop
arpl
and
and
fwait
daa
jo
es
xor
int3
sbb
or
sbb
mov
out
sbb
cmp
test
add
jle
ja
ret
lret
les
decb
mov
ret
leave
sub
cli
adc
or
sub
iret
call
push
cmp
add
pop
mov
mov
nop
arpl
daa
mov
nop
mov
test
lret
add
mov
fisttpl
sbb
lcall
fldenv
and
loop
xchg
pop
test
es
loopne
inc
mov
push
jp
cwtl
pop
jo
cmpsl
clc
cmpsb
bound
lret
repz
rcll
lea
aam
pop
add
fwait
mov
xor
pop
sub
mov
cmpsl
into
daa
push
push
xchg
pop
outsl
test
xor
out
push
adc
mov
loopne
sub
and
add
xchg
jmp
push
and
mov
dec
pop
inc
data16
arpl
lods
jo
jl
outsl
mov
icebp
enter
aam
push
jge
arpl
cmp
gs
int
leave
or
fwait
in
repz
mov
test
xchg
cmp
mov
cmp
aad
bound
xchg
adc
in
loop
bound
inc
or
cwtl
sub
fildll
xchg
fildl
inc
loopne
mov
std
popf
jp
xor
xorl
push
cmp
mov
xor
pusha
xchg
jle
ja
lret
pop
lret
fs
sbb
aas
xchg
and
or
xchg
xor
divl
jne
xchg
push
push
push
imul
sbb
xchg
sbb
movsb
js
sub
dec
lcall
inc
repz
outsb
loop
adc
cmpsb
cs
imul
mov
inc
daa
std
out
out
xchg
loopne,pt
movsl
sub
or
int
pop
leave
dec
jne
mov
cmpsl
dec
xchg
sbb
pop
push
mov
lods
addr16
sbb
subb
mov
pusha
pushf
or
repnz
xchg
adc
mov
cltd
addb
inc
pop
sub
movsb
call
fs
daa
mov
repnz
out
inc
aas
push
gs
int3
loop
aas
inc
sbb
in
inc
xor
aad
adc
test
jmp
cmovbe
or
stos
lock
in
ss
and
or
sbb
icebp
cld
icebp
jns
daa
sarl
in
pop
lret
repnz
mov
or
push
push
aas
ljmp
nop
out
icebp
sbb
enter
out
out
jp
enter
xor
adc
bswap
imul
pop
sub
or
sub
sbb
sub
stos
or
std
arpl
cmpsl
stos
xor
pop
fldcw
addr16
mov
pop
xchg
pop
in
in
arpl
sbb
inc
insl
and
mov
jecxz
es
dec
shl
ljmp
mov
int
and
ljmp
pop
jo
sub
or
cs
and
les
adc
add
test
sub
mov
pop
cli
pop
and
mov
loop
push
or
mov
popf
jno
in
xchg
out
or
jbe
insl
cmc
or
je
jp
fwait
push
or
add
cli
add
pop
es
cmpsl
bound
add
cmpsb
shrl
leave
mov
xchg
xor
imul
mov
cmp
xor
and
ror
cld
notl
ljmp
sbb
xchg
aas
movsb
mov
insl
sbb
sub
hlt
sub
mov
lret
insl
mov
xchg
aas
or
mov
mov
jle
int
or
leave
icebp
dec
xchg
out
xchg
sbb
mov
std
shl
lret
je
outsb
sbb
aam
lret
pusha
pop
sahf
jnp
shlb
mov
adc
push
pop
loop
jnp
xor
sub
adc
addr16
xchg
jo
movsl
int3
or
and
or
and
in
and
adc
or
push
outsl
and
pop
push
add
dec
or
add
add
add
loopne
in
out
sub
ljmp
rcrl
dec
lret
stc
and
fadd
lret
ret
sbb
lds
push
adc
and
inc
icebp
shl
and
sbb
pushf
in
addb
adc
mov
inc
fwait
nop
inc
mov
lods
mov
repz
cmp
repnz
add
movsb
daa
out
jl
push
fcompl
loopne
mov
and
loopne
cmp
or
repnz
push
jnp
fsubrs
jns
pusha
cmp
pop
cmpsl
test
adc
aaa
ds
jg
loop
out
call
and
pop
dec
out
ret
lsl
cmp
jecxz
cmc
mov
push
leave
jns
or
push
out
sbb
pusha
test
popa
add
push
mov
pusha
jg
cltd
and
inc
jg
scas
pusha
jcxz
lock
sub
mov
leave
cwtl
lock
jge
loopne
or
mov
or
dec
inc
pop
loop
clc
cli
mov
bound
mov
jo
xchg
cli
add
sub
leave
jge
fs
dec
call
push
imul
mov
fs
adc
mov
in
fidivl
movsb
popf
and
cwtl
and
je
arpl
and
xor
sbb
call
push
cld
push
repnz
jecxz
in
inc
gs
inc
add
loop
dec
outsb
pop
and
test
scas
xlat
fwait
mov
mov
repnz
popf
jge
jge
js
aam
sti
insl
cmp
es
test
xor
or
mov
loopne
cmp
cwtl
out
fistpll
call
aad
adc
sbb
arpl
sti
sub
jbe
add
scas
push
inc
and
fld
xchg
mov
ret
imulb
xorb
mul
daa
test
in
es
shlb
pop
mov
inc
rcll
cltd
and
shr
inc
sub
add
jmp
dec
pop
cld
shll
mov
sbb
ja
call
push
lea
dec
cltd
jge
addr16
insb
cmp
xchg
cmp
lcall
loopne
test
xchg
test
adc
sub
mov
out
fcoml
ljmp
add
add
sti
pop
cmp
push
test
fs
pop
xchg
pop
sbb
pop
test
ficoml
repz
sub
pushf
cmp
mov
sbb
nop
mov
fs
sub
xchg
std
mulb
cs
cwtl
mov
xlat
mov
mov
dec
lock
int3
or
ret
ljmp
dec
lods
imul
popa
pop
int3
int
adc
xchg
mov
xor
addb
stos
inc
fildl
jmp
sub
loopne
dec
jb
lret
sub
or
push
lcall
push
dec
fwait
es
nop
adc
imul
pminsw
push
dec
in
call
sbb
and
dec
out
mov
fsubl
lret
sarb
dec
stos
fimuls
jge
adc
sub
lods
jnp
lgs
xchg
daa
in
es
cmp
pop
xchg
sbb
in
mov
scas
imul
data16
popf
cmpsl
dec
int
jmp
mov
rcrb
push
or
test
ljmp
jecxz
in
cmp
cltd
mov
sbb
ds
cwtl
cmp
in
dec
sub
mov
xor
loopne
fstps
xchg
mov
adc
mov
arpl
movsb
aaa
add
xchg
mov
jl
and
jle
imul
push
mov
xor
lods
imul
out
cmp
pop
outsb
arpl
push
mov
pop
mov
fst
mov
or
xchg
decb
js
out
ja
jecxz
arpl
adc
les
and
pusha
imul
repnz
nop
cmpsl
mov
dec
jb
xchg
pop
pop
xchg
sub
fisttpl
push
xor
test
push
push
aaa
pop
jge
lods
ljmp
jmp
mov
loopne
adc
sbb
movsb
out
xor
xchg
and
loope
push
jp
xchg
cmp
jle
imul
leave
sub
pushf
sub
xlat
jg
sub
xor
xchg
incb
pusha
add
adc
int3
bnd
push
aad
fstpl
jb
xor
push
adc
sub
cltd
push
adc
sbb
ja
loopne
adc
sbb
and
push
dec
inc
dec
loop
mov
imul
cmpsl
repnz
dec
mov
fs
inc
or
fucomi
sahf
cli
popf
and
nop
cmpsl
sbb
mov
test
ficoms
mov
fwait
sbb
frstor
ljmp
fwait
xchg
adc
and
pop
movsl
pop
cmpsb
xchg
out
sbb
ret
mov
add
mov
mov
dec
xchg
mov
mov
iret
adc
push
xchg
xchg
aas
movmskps
loopne
aam
dec
fcomi
adc
repnz
mov
xchg
iret
cmpsl
clc
leave
aas
inc
sub
das
mov
cld
movsb
jle
mov
pop
mov
fmull
call
lret
imul
mov
es
out
sbb
push
adc
and
sbb
test
mov
xchg
les
and
pop
pushf
adc
mov
js
lds
push
and
pusha
add
mov
popa
dec
into
and
pop
mov
lcall
ret
lea
sub
pop
mov
and
lret
jecxz
sahf
fs
jmp
clc
and
sbb
inc
cmpsb
and
in
mov
dec
and
daa
stos
daa
mov
loop
jnp
add
mov
scas
test
dec
bound
js
pop
or
aas
cmp
mov
mov
fildl
push
mov
or
stc
jg
or
sub
movsb
ja
ljmp
ret
stos
sub
push
mov
xchg
and
fiadds
shrb
xchg
add
lcall
xchg
sbb
lods
mov
pusha
js
aas
iret
adc
pop
add
sbb
push
stos
repnz
loope
imul
rclb
push
repnz
pop
cld
ficoms
out
iret
mov
push
stos
fldenv
nop
sub
xchg
sbb
pop
rclb
pushf
stos
aam
adc
arpl
cmpsl
lret
xchg
in
adc
mov
xchg
in
loope
adc
push
add
popa
inc
int3
loopne
cmp
push
mov
or
loopne
imul
testb
add
add
imul
cmp
jns
cmpsl
xchg
addb
and
in
xchg
add
jmp
shrl
leave
add
fwait
sbb
pushw
adc
adc
push
inc
adc
or
in
and
and
aam
fwait
adc
repnz
and
mov
mov
xchg
rcrl
fsubs
adc
ret
mov
popf
pop
pusha
rcrl
adc
sub
xchg
pop
stos
adc
push
and
add
mov
push
nop
movsb
sbb
push
dec
add
leave
repnz
mov
add
fcmovnbe
sbb
cmp
or
push
lds
pop
call
dec
cmpsb
pop
out
pop
out
push
imul
mov
repz
mov
fistpl
mov
sti
sbb
pusha
cmp
adc
fsubs
in
incl
lock
and
loopne
xchg
outsb
clc
loope
mov
sub
push
cmp
dec
gs
das
xor
stc
stc
popf
outsb
cmp
dec
push
in
imul
and
cmp
fs
repz
js
pushf
mov
repz
mov
sub
sub
or
xchg
sbb
sbb
or
call
push
inc
sbb
sbb
sub
call
dec
cmp
xchg
rcrb
and
sub
sub
pop
cmp
sbb
test
sbb
les
prefetcht1
outsb
movsb
pop
mov
pop
inc
lcall
cwtl
xchg
and
dec
fwait
cmp
mov
pop
inc
imul
scas
or
push
dec
mov
push
fisttpll
xchg
cmp
and
movsl
out
int3
add
in
movsb
inc
ret
jno
bnd
sbb
push
cmp
inc
mov
mov
cld
push
ret
out
mov
mov
sub
mov
je
pushf
pusha
mov
sbb
inc
cwtl
dec
push
pop
js
and
sbb
or
sbb
mov
jno
pop
push
ljmp
bound
dec
sbb
push
and
inc
adc
push
out
and
test
push
add
inc
outsb
in
repnz
repnz
insl
test
pop
int
jp
sub
fmull
mov
sti
sbb
mov
stc
mov
push
mov
adc
push
mov
sbb
sub
es
adc
stc
out
jnp
stos
lret
xor
sbb
mov
add
and
pop
lds
jb
inc
and
std
xchg
and
aad
sub
es
jp
dec
inc
adc
into
or
enter
je
xlat
lea
mov
repnz
mov
ficomps
test
out
imul
cmp
adc
vmovntps
dec
out
arpl
lea
js
and
push
dec
jae
leave
mov
push
movsb
sub
lea
xchg
enter
adc
sbb
addr16
or
pop
fsubl
mov
inc
in
loopne
gs
mov
jmp
xchg
push
in
loope
ficoms
iret
pop
stos
arpl
xchg
or
aad
mov
stos
pop
and
and
repnz
sub
clc
pop
test
daa
sub
loopne
adc
fwait
call
mov
insl
lods
push
out
clc
mov
out
and
jb
sbb
push
es
sbb
adc
cmp
dec
xchg
aaa
and
hlt
mov
xchg
cs
adc
bound
and
fistl
stos
or
jge
sbb
and
sub
push
sbb
test
xor
and
cmp
sub
repnz
dec
jl
sahf
pop
sbb
test
loopne
adc
mov
nop
xchg
xchg
outsl
mov
stos
sub
shr
es
mov
insl
bound
gs
sbb
insl
int
jnp
bound
xchg
js
cli
loopne
and
sbb
daa
mov
mov
bound
dec
repnz
sbb
add
sbb
pop
mov
mov
and
fstp
outsb
and
shll
and
inc
loope
adc
add
or
sbb
cs
sub
mov
push
pushf
or
mov
rcl
xor
xor
xchg
jmp
les
imul
jmp
and
adc
adc
outsb
sub
pusha
mov
jmp
mov
imull
xor
imul
popa
cmpb
push
xchg
or
outsb
dec
js
mov
push
sub
jp
xor
sbb
inc
test
jmp
fsubrs
sbb
add
mov
inc
sbb
sbb
leave
or
ucomiss
nop
fsub
data16
push
and
cli
arpl
fsubl
inc
xchg
add
add
movsb
push
out
sub
sbb
jp
adc
imul
add
int3
pop
pop
sbb
jge
std
pop
xchg
cli
or
repnz
xchg
repnz
and
cli
out
imul
push
bnd
sub
repnz
inc
fdiv
cli
js
mov
mov
cld
dec
push
std
mov
and
mov
je
stos
bnd
push
inc
and
cltd
jecxz
adc
sbb
aad
jmp
neg
jb
subl
sub
imul
push
lock
sti
mov
dec
shrb
sarl
outsb
jbe
cltd
xor
sbb
call
gs
scas
jno
aas
dec
lret
mov
pop
aas
leave
clc
mov
sub
data16
jns
mov
mov
cli
sub
rorb
test
mov
cwtl
lret
jnp
inc
mov
repnz
jecxz
lods
cmp
movsl
push
cwtl
inc
popa
jbe
in
imul
xchg
push
aaa
add
add
or
push
sub
cmp
sub
out
sbb
sbb
out
lahf
cltd
adc
pop
xor
jecxz
addr16
mov
outsb
sbb
cmc
popl
mov
sbb
loope
sub
xor
in
xchg
addr16
or
sbb
pop
sbb
push
jmp
rorb
sahf
xor
in
arpl
jge
leave
fwait
mov
xor
jmp
sbb
orb
movsb
sub
xchg
das
mov
jnp
pop
and
push
incl
daa
lods
or
insl
int3
test
pop
loop
pop
ficoml
inc
dec
cmp
in
adc
in
cmp
inc
out
int
mov
jno
adc
aad
jno
out
or
mov
and
movsl
repz
pop
mov
lret
push
and
jne
cli
sub
inc
in
mov
add
call
sub
std
and
cmp
xchg
jle
ret
pushf
and
insb
lds
int3
ljmp
nop
or
out
fwait
push
adc
jle
daa
add
lock
ficoms
dec
pushf
push
stos
cwtl
adc
adc
pop
or
mov
mov
adc
ror
sti
and
sub
and
ljmp
sbb
in
shrb
loop
cmpsb
pop
adc
bound
jl
sbb
add
pop
xchg
mov
bound
sub
pop
daa
xchg
mov
dec
sbb
mov
setbe
lcall
inc
mov
hlt
repz
push
push
cld
fwait
lds
inc
mov
jmp
mov
cmovge
dec
repz
or
or
and
negl
mov
pop
sub
outsl
xchg
fists
jo
sbb
cmp
in
inc
lods
xorl
mov
cmp
rorl
mov
xlat
mov
push
addr16
sub
cwtl
popf
lcall
push
dec
jp
dec
mov
push
jmp
call
mov
rolb
mov
lock
push
jg
jnp
out
cltd
fwait
js
adc
jo
xor
into
and
sub
shll
leave
dec
or
mov
mov
or
xlat
stos
repnz
mov
xchg
int3
aaa
and
xchg
icebp
aaa
int
dec
add
ret
add
jecxz
add
cltd
cmpsl
adc
sahf
fwait
cmpsb
or
mov
fcmovb
and
and
push
iret
xchg
sub
and
nop
cli
fisttps
xlat
icebp
inc
das
push
mov
fwait
and
shlb
insb
daa
es
iret
scas
and
lods
outsb
es
iret
push
add
pop
add
or
and
fs
cmp
clc
loop
and
sub
sbb
sbb
lret
hlt
adc
xchg
repnz
sub
push
movlps
stos
stos
movsb
pop
scas
inc
int3
sahf
or
popf
xor
pop
inc
inc
sub
rcll
cmp
outsb
pop
mov
jecxz
adc
div
cmp
arpl
push
push
jne
dec
jmp
cmp
or
push
test
adc
sub
sub
sbb
mov
cltd
mov
std
mov
cli
inc
jnp
or
sbb
sub
xchg
push
mov
popa
insb
lret
and
push
and
dec
xchg
pop
ljmp
or
dec
add
xor
lods
testl
push
sub
stos
sub
jmp
sub
loopne
stos
lret
and
sub
sub
aam
or
xlat
aam
nop
fwait
pop
je
lods
adc
pushf
stos
cmp
subb
dec
js
adc
xchg
adc
cmp
xchg
popl
sub
sbb
mov
xor
adc
xor
lds
or
sub
pop
stos
iret
sbb
adc
into
js
push
pop
mov
xor
out
xchg
dec
pop
or
sub
xchg
add
pop
loope
ret
sti
cltd
fs
lahf
mov
iret
xchg
jbe
cmp
aad
call
add
or
and
out
sbb
cmp
je
dec
cmp
leave
lea
jl
sub
inc
lods
and
and
mov
cmp
jl
js
ss
or
mov
inc
popf
lock
jmp
adc
test
adc
cmpsb
nop
inc
push
mulb
sub
pop
loopne
sub
loopne
mov
aad
sub
addb
add
les
pop
inc
xchg
hlt
adc
lret
cli
in
sbbb
pop
jg
xor
addr16
aas
cmp
jmp
rorl
cwtl
adc
or
adc
sti
and
add
ljmp
jg
ja
loope
cmp
bnd
popf
adc
gs
cli
outsl
jecxz
sbb
add
push
pop
push
cmp
loopne
sbb
or
nop
leave
in
and
and
test
jecxz
popa
add
pop
or
scas
dec
rcl
xchg
or
xchg
adc
jns
lods
ffreep
ljmp
test
lods
pop
lods
repnz
inc
pop
outsl
insb
mov
outsb
stos
js
sub
add
pop
lea
sbb
scas
cltd
push
jg
mov
call
jecxz
out
ljmp
inc
and
sarl
cld
ret
jo
add
stos
clc
ret
ljmp
stos
inc
addb
sbb
ss
sub
push
lret
and
repnz
aas
pop
pop
add
stos
popf
jo
int
or
mov
xchg
stos
push
out
sub
pop
pop
mov
stos
jo
xor
in
das
add
inc
clc
jmp
pop
ss
sub
jmp
cltd
leave
jle
js
xor
repnz
or
hlt
loope
sbb
sub
scas
stos
cmp
xor
mov
test
repnz
and
sub
mov
sbb
je
out
cmpsb
dec
add
adc
mov
movsl
js
or
jne
mov
movups
push
inc
jns
test
xor
jno
xor
add
lahf
xor
sti
repnz
lock
sub
mov
daa
out
mov
sbb
shlb
mov
sbb
adc
bound
scas
adc
les
lret
stc
mov
jg
push
and
push
mov
sub
pusha
imul
push
movsb
sub
adc
mov
xor
mov
mov
sub
add
fadds
bound
dec
sbb
push
sbb
test
push
adc
push
dec
dec
mov
jnp
jo
xchg
mov
stos
pop
and
ja
jmp
pop
xor
xchg
dec
je
lret
bnd
mov
or
mov
ficoml
popa
loope
xor
and
and
sbb
repnz
mov
inc
test
add
roll
jl
aas
sbb
les
mov
stos
outsl
adc
sbb
cmc
loopne
mov
lds
rorb
daa
sub
mov
cmpsb
in
shrl
sub
imul
sub
jns
scas
test
sub
jmp
mov
lret
xor
add
add
es
pop
sub
out
movsb
jg
pop
adc
lcall
daa
cmp
adc
sub
repnz
cmp
inc
out
and
sub
sbb
ss
add
sbb
lods
dec
into
mov
outsl
clc
xor
aam
pop
nop
aad
ret
fbstp
add
lret
jo
faddl
sub
jecxz
test
and
or
push
test
aam
js
or
and
je
insl
pop
sub
sbb
pop
xchg
jle
loopne
ljmp
mov
in
lods
xchg
sbb
push
or
dec
fwait
push
loopne
or
loopne
lock
outsl
sbb
mov
push
enter
mov
jne
je
jmp
outsl
mov
add
fs
pop
jmp
or
push
lock
jmp
imul
add
or
add
jmp
lock
stos
loopne
xor
sbb
push
aad
add
test
jmp
in
adc
call
stc
ret
out
sub
cmp
lcall
and
daa
xchg
lret
add
jl
push
push
shll
in
sbb
sbb
pop
fstpl
inc
popa
ret
out
arpl
sub
sub
fcmovb
insb
push
mul
mov
cwtl
negb
call
inc
pop
pop
movsb
lret
xchg
or
int
jge
or
int
cmp
lods
pop
xchg
addr16
sbb
jecxz
testl
clc
mov
sbb
adc
push
loopne
hlt
push
cmp
sar
mov
or
mov
sbbb
add
dec
mov
je
adc
pusha
fdivrs
push
sbb
ljmp
adc
mov
pop
ss
fiadds
in
arpl
loope
xlat
xchg
sbb
call
call
sbb
push
sbb
or
jmp
push
xchg
fucomi
push
aam
dec
adc
push
es
push
mov
loop
hlt
xchg
xor
cli
cld
adc
ljmp
pop
loopne
pop
scas
addb
fwait
gs
mov
cli
adc
and
or
test
fistpl
je
stos
pushf
mov
mov
sub
xchg
inc
sbb
out
mov
fldcw
ja
movsb
fbstp
jmp
leave
jp
test
imul
inc
or
mov
popa
sub
inc
xor
test
mov
add
in
and
sbb
outsb
jno
loope
sub
orb
add
daa
repnz
xor
cmovle
push
jecxz
add
pusha
out
sbb
or
add
adc
add
jae
loop
leave
push
aas
les
push
sbb
pop
fucomp
lea
ljmp
in
sbb
push
sbbb
mov
sub
in
int3
lods
sub
sbb
popa
push
dec
cli
mov
xor
js
icebp
adc
sub
sbb
xchg
fldenv
fadds
mov
xchg
test
pop
int
and
inc
dec
out
or
sbb
or
mov
ror
push
mov
jo
neg
xchg
push
mov
xchg
aam
push
inc
mov
stos
adc
in
les
call
xchg
adc
sub
sub
mov
xchg
adc
cmp
push
imul
test
fwait
xor
in
rclb
mov
mov
repnz
pop
mov
daa
mov
enter
repnz
icebp
fcmovu
jno
sub
in
pop
sub
mov
clc
aaa
mov
add
jl
sbb
add
xchg
mov
test
sbbl
and
aas
cmp
mov
and
leave
mov
sbb
cmp
mov
sbb
sub
repnz
cwtl
test
add
adc
sub
add
ljmp
pcmpgtw
sbb
and
lods
cmpsl
call
push
add
xchg
hlt
pushf
rcr
jecxz
cmpsb
jo
jnp
clc
insl
mov
cltd
lret
aam
xchg
and
pushf
pusha
call
add
in
fmul
lret
xchg
pop
mov
xor
out
lock
fs
out
jmp
and
jg
mov
in
xor
pop
leave
cmp
xchg
sbb
addr16
stc
and
nop
mov
iret
sbb
enter
lret
add
xchg
iret
pop
inc
arpl
movsl
lea
push
pop
daa
sbb
and
mov
and
cs
fcmovu
rolb
pop
sub
pop
and
mov
iret
ljmp
mov
mov
cmp
cltd
mov
loop
push
cmpsl
pop
sub
mov
adc
scas
mov
jmp
sbb
push
popf
cltd
ficomps
and
std
inc
xorb
fwait
add
inc
push
adc
xchg
hlt
and
fnstenv
xor
insl
in
call
cmp
mov
sbb
lea
pusha
cmpsl
adc
jge
jb
sbbb
fidivl
shl
dec
call
pop
mov
and
push
inc
pop
sub
mov
nop
and
or
dec
scas
pop
or
and
pop
out
push
aas
dec
pop
mov
xchg
inc
call
icebp
sarl
rorl
sub
ja
add
xchg
and
nop
pop
daa
xchg
xchg
sbb
les
mov
es
popa
xchg
ljmp
sub
aad
ds
enter
push
cld
sub
iret
stos
mov
sbb
lcall
insb
std
adc
lea
jecxz
sahf
jo
jg
movsb
repnz
mov
and
mov
scas
adc
mov
xchg
jmp
fwait
ds
in
push
sti
iret
test
xchg
ljmp
mov
mov
cmpsl
iret
xchg
and
sbb
inc
lods
test
daa
lock
popf
sub
lret
repnz
clc
and
mov
xchg
cmc
mov
pushf
pop
ja
push
pop
jnp
jns
pusha
sbb
xlat
popa
xor
loopne
lret
insl
push
xchg
sbb
mov
addr16
movsb
jb
sub
enter
dec
dec
ljmp
push
lds
repz
aam
mov
sub
cmp
xchg
or
push
sarl
sub
or
stos
repnz
push
mov
sub
and
jmp
enter
loope
lock
sub
pop
ja
add
es
xor
pop
sbb
dec
pop
daa
xchg
iret
les
nop
sahf
jo
cld
mov
dec
aaa
adc
cltd
mull
stos
xor
push
add
data16
and
push
clc
sub
sub
addr16
lock
insl
and
roll
negl
mov
repz
in
pop
xlat
ljmp
adc
pop
sbb
insb
mov
fistpl
fisubs
and
incb
adc
lahf
jmp
add
lcall
mov
pop
dec
mov
ljmp
loope
jle
outsb
xchg
ljmp
pop
jnp
add
xchg
fwait
test
jne
bound
mov
cmp
xor
js
loope
pop
insb
dec
nopl
enter
xchg
xor
and
loop
sub
jp
sub
clc
ror
xchg
push
push
fldenv
mov
repnz
aad
sbb
pop
aaa
loopne
movsb
and
scas
mov
dec
mov
loope
and
push
xlat
sbb
ljmp
stos
lods
cltd
push
mov
inc
sbb
fistpl
idivl
pop
mov
and
shlb
bound
xor
clc
add
adc
cmpsl
inc
pusha
enter
lcall
hlt
push
jp
xchg
cmp
loop
fmull
popf
or
jb
fmull
stos
sbb
push
dec
or
hlt
push
in
xor
addr16
fidivrs
in
sub
pop
xor
cmpsb
or
sbb
aam
adc
sbb
xchg
adc
inc
pop
flds
pop
fldt
shlb
push
inc
ss
push
push
cmc
mov
mov
les
cld
xchg
pop
jo
inc
rorl
int
ficomps
pushf
in
out
rclb
jecxz
cmp
xor
ret
sbb
lret
mov
and
mov
mov
fldenv
loop
in
dec
shlb
sbb
lcall
lods
adc
mull
sar
xchg
or
or
aad
jno
adc
into
sbb
mov
and
and
sub
lds
inc
sub
jo
aam
mov
bnd
pop
sbb
test
aaa
add
pop
fsubrs
xchg
dec
je
or
mov
xor
xlat
cmp
repnz
mov
int3
int3
inc
js
lret
bound
jecxz
lret
push
daa
inc
xor
inc
jae
inc
jnp
lds
lret
lea
adc
pop
icebp
xor
xchg
andb
arpl
inc
sti
movl
pop
jg
jl
test
mov
jo
lret
mov
sbb
lock
adc
or
mov
arpl
lock
and
mov
pop
jbe
sub
dec
jle
outsl
call
addr16
out
mov
sbb
addl
fwait
jb
mov
addb
dec
fsts
std
mov
jmp
adc
mov
inc
dec
jmp
adc
jmp
mov
sbb
pushf
arpl
mov
jnp
in
inc
sub
sahf
inc
into
scas
jb
mov
sub
fisubs
sti
push
insl
sti
inc
sbb
fdivrs
lea
cmc
lock
push
adc
push
jecxz
push
add
test
and
out
cmp
push
in
ret
call
cbtw
xor
and
xchg
andl
sbb
add
mov
and
mov
movsb
lock
sub
sub
divl
outsb
stos
jecxz
push
cmp
aaa
stos
push
or
lret
lret
mov
mov
cltd
pop
icebp
std
xchg
jecxz,pt
push
add
and
sub
sbb
or
stos
cmp
push
or
mov
ljmp
jl
fimull
arpl
iret
lcall
pop
mov
sbb
hlt
xor
nop
add
adc
scas
je
pushf
daa
cmpsl
add
es
movsb
sub
dec
cltd
mov
push
imul
and
jp
ljmp
sub
jae
mov
adc
lock
adc
lahf
daa
lret
stos
es
ja
es
fadd
and
cmpsl
and
and
xor
xorb
sbb
ret
mov
push
sti
inc
outsb
push
sbb
lcall
mov
in
mov
or
sbb
xlat
adc
daa
sub
in
dec
cwtl
inc
mov
push
mov
cmpsl
and
pop
test
lcall
jl
jb
repz
and
pop
call
cmp
repnz
pushf
mov
rclb
rorb
daa
arpl
dec
mov
mov
lcall
lcall
sbb
mov
cmc
xor
sub
and
cli
and
pop
add
sub
lret
sti
sbb
cmpsb
fdivs
scas
jbe
sub
loope
cmpsb
fs
mov
fs
ljmp
and
lcall
sbb
xor
pop
scas
mov
imul
loopne
clc
sub
mov
sbb
sbb
out
fs
or
inc
stc
fcomps
in
ljmp
or
xchg
adc
and
cwtl
in
mov
mov
iret
xchg
mov
jecxz
dec
push
repnz
insl
call
pop
pop
sub
sub
fwait
adc
push
shrb
xchg
outsl
push
into
adc
adc
jle
lods
pop
add
arpl
gs
cs
imul
jle
ret
fwait
push
loopne
les
mov
in
add
push
inc
int
lret
jp
out
es
pushf
adc
wbinvd
xchg
enter
add
dec
lret
push
adc
dec
dec
cmp
push
mov
xchg
mov
push
xchg
sbb
or
aam
aam
fwait
push
xor
shrb
in
insb
pop
sbb
aad
or
mov
outsb
cs
or
xor
repz
fs
xchg
std
lcall
xchg
adc
shll
push
ret
pop
popf
jp
inc
icebp
adc
enter
pop
ja
pop
daa
jae
sti
adc
or
pop
sub
and
icebp
sbb
or
lock
aam
in
stos
repnz
out
shll
jmp
push
sbb
test
pop
mov
or
sbb
into
push
or
imul
sbb
inc
imul
inc
sbb
dec
jecxz
cmp
mov
and
hlt
cwtl
and
repnz
and
outsb
inc
cmp
ja
xchg
push
mov
outsl
mov
cwtl
adc
inc
push
and
js
pop
addr16
inc
push
ja
adc
fsubs
jbe
mov
ficoml
roll
inc
push
leave
jge
ret
xor
or
adc
loopne
popf
push
sbb
call
nop
xlat
popf
test
jne
in
jle
cmp
test
push
xchg
insl
pop
mov
mov
subb
push
pop
mov
lds
aaa
add
scas
inc
sbb
sub
mov
leave
mov
xlat
dec
jae
pop
jae
mov
cmp
jl
stos
mov
and
mov
jg
in
test
and
sbb
out
sub
ja
and
mov
adc
call
xor
outsl
daa
and
mov
push
mov
pop
mov
xchg
jmp
lock
sbb
cltd
cmp
inc
pop
push
scas
mov
xchg
push
xchg
lods
jnp
rcrl
or
add
lret
adc
shlb
loop
iret
cmpsb
and
aam
stc
and
mov
adc
add
movsb
les
fcomps
std
mov
adc
mov
adc
dec
cltd
mov
mov
scas
push
aaa
in
popa
movsb
fsubs
push
sbb
les
jg
repz
mov
int3
imulb
mov
or
sbb
and
mov
popf
sub
mov
sbb
push
cmovg
leave
xor
shlb
or
pop
sub
adc
pop
std
call
xchg
adc
and
loopne
push
jl
adc
repnz
insl
mov
adc
mov
sub
fs
inc
insb
mov
pop
jecxz
movsb
stc
add
adcl
sub
shl
pop
adc
hlt
add
sbb
pop
ret
popf
xor
sti
pop
xchg
ficoms
jbe
and
hlt
int3
mov
in
xor
or
movsl
addr16
shrl
xchg
sub
loope
stos
push
cmc
out
inc
and
jo
enter
or
push
cmc
mov
or
or
pusha
nop
jge
mov
mov
cli
push
cli
test
cld
out
dec
inc
outsb
or
mov
sub
test
into
movsl
cmp
xor
sbb
clc
cmp
mov
popf
pusha
shrl
fdivrl
sub
adc
or
cmc
js
push
mov
loopne
cmp
leave
cli
repz
push
lret
dec
ret
xor
inc
mov
sub
imul
lret
shr
repnz
ljmp
ljmp
sub
cs
int
imul
push
shlb
out
add
or
push
notb
aam
fdivr
and
popf
insb
sbb
leave
test
out
sub
mov
int3
add
cmp
mov
push
inc
mov
push
ljmp
jl
int3
or
push
mov
ret
jne
mov
nop
dec
or
and
push
insb
cld
dec
testb
or
lea
mov
and
add
adc
cmc
inc
sbb
xchg
in
and
cmp
test
mov
or
rdtsc
and
xchg
pushf
movsb
psraw
loopne
imul
mov
sub
enter
jnp
mov
or
push
add
decb
or
in
push
cli
cli
nop
mov
sbb
and
imul
cwtl
sub
subb
stos
jns
and
pop
or
cmpsl
lods
call
call
lahf
repnz
je
cmp
insb
sub
sahf
inc
adc
lods
inc
xrelease
les
jmp
or
cld
mov
shrl
adc
xchg
adc
push
clc
mov
dec
or
lcall
mov
jl
movsl
sbb
xchg
adc
lods
jp
cmp
in
ficoms
call
test
inc
cmc
and
das
push
les
mov
inc
cwtl
fsubrp
rcrl
movsb
push
out
cmp
lods
xchg
in
es
sahf
mov
mov
mov
sub
cwtl
and
push
xor
jne
jb
lcall
in
pop
add
pop
xchg
and
fs
cmp
adc
into
fld1
popa
mov
mov
xchg
lds
or
or
cmp
and
push
repz
stos
sub
mov
sbb
inc
popa
movsl
sti
fisttps
and
add
add
mov
lret
in
std
add
mov
lret
daa
mov
jge
mov
lahf
loopne
and
xor
aad
int3
cmpsb
or
aaa
rep
sub
sub
xchg
aaa
sub
xchg
enter
daa
pop
pop
adc
popl
jo
addr16
cmp
sti
push
aad
fs
push
ss
cwtl
cmpsl
js
adc
nop
popa
test
out
jle
sar
icebp
adc
mov
loope
jge
pop
out
mov
outsb
lock
arpl
add
push
and
add
out
adc
adc
mov
push
xlat
mov
fisubrl
push
or
push
fnstsw
sbb
xlat
ljmp
sbb
movsb
lods
mov
push
andb
pop
stos
test
and
jb
das
push
aad
cmc
mov
or
ljmp
lret
and
jae
and
sub
add
mov
pop
cmp
loopne
mov
shr
mov
xor
fstpl
mov
mov
fs
out
jle
out
and
sbb
cmp
pop
push
or
es
jle
mov
int3
or
jno
jae
arpl
repnz
sbb
jne
dec
jecxz
stos
push
adc
mov
xor
push
pushf
adc
add
sbb
mov
sbb
iret
mov
mov
push
out
inc
stos
std
sub
mov
loopne
cld
nop
in
sub
push
xchg
jg
dec
lret
mov
je
nop
cli
pop
fcmovbe
add
mov
or
or
sbb
sub
jecxz
push
stos
sub
lcall
dec
pop
pop
in
jg
push
mov
pop
fisubrl
shl
popa
sub
in
sbb
push
cli
sub
pop
in
stos
sti
dec
lcall
stos
imul
and
pop
push
sbb
arpl
out
fldenv
lret
loop
push
cmp
es
pop
sbb
roll
stc
hlt
cmp
jg
call
mov
mov
add
aaa
orb
sbb
pushf
inc
lods
jecxz
out
je
repnz
inc
inc
fldcw
adc
adc
adc
stos
mov
add
mov
test
int3
leave
pushaw
add
aad
mov
out
enter
jle
sub
stos
sub
es
sub
jno
dec
fcomps
and
loop
lret
or
xchg
push
fistpll
sub
jmp
mov
ss
mov
fcomps
pop
sbb
mov
gs
mov
cld
mov
cwtl
sub
push
jo,pn
sub
adc
lret
ret
sub
pop
or
or
ret
push
cltd
jo
mov
push
cltd
nop
mov
sbb
imulb
pop
lret
cwtl
int3
loop
push
pop
aam
jp
outsb
xchg
or
xor
adc
mov
mov
ficoms
andb
sub
lret
sti
sbb
bound
sahf
and
repnz
pop
je
cltd
fmull
push
sub
sahf
sbb
imul
pop
cs
pop
cmp
cmpsb
pop
sbb
daa
lret
in
loop
jmp
xchg
lds
or
sbb
add
out
xor
sbb
loopne
cmp
cwtl
cli
xlat
data16
sbb
lret
and
pop
sbb
repz
leave
arpl
sub
sahf
dec
or
out
incb
ja
in
push
fmulp
repnz
data16
mov
sbb
mov
mov
orb
je
cmp
mov
andb
cmp
and
or
popf
dec
cmp
adc
dec
pop
pop
and
mov
scas
out
xchg
xchg
js
push
iret
insb
into
jecxz
dec
mov
repz
in
movsb
movsb
test
or
imul
imul
stos
enter
lcall
adc
stc
in
pop
stos
aam
je
leave
inc
push
sub
xchg
xchg
sbb
arpl
iret
add
aam
push
jne
adc
push
or
mov
das
mov
loopne
xchg
adc
aad
sbb
in
mov
imul
ja
mov
jbe
enter
aad
push
dec
mov
jle
test
adc
mov
or
sbb
sbb
fidivl
push
sub
pop
pop
testb
popa
sub
dec
push
and
xchg
mov
sub
arpl
push
push
pop
andl
mov
pop
mov
xchg
push
call
sub
xchg
xor
mov
loop
cltd
test
rolb
stos
mov
fdivl
sbb
push
out
stos
pushf
fwait
sbb
sbb
mov
and
sub
mov
ss
mov
popa
pop
dec
arpl
lock
adc
icebp
add
xlat
jo
shlb
cltd
scas
cmp
adc
out
test
int
mov
dec
sub
adc
dec
push
int
hlt
lcall
mov
out
fidivs
add
ror
movsb
je
cwtl
loop
data16
cmp
fsubrs
sub
in
mov
pop
and
jmp
ljmp
pop
jecxz
jp
and
mul
sti
xor
fldt
fwait
ja
sub
pop
mov
aaa
fmull
call
mov
sbb
test
sbb
loopne
ret
out
orl
and
sbb
inc
loope
xor
sbb
mov
pop
rolb
daa
jecxz
or
inc
loope
push
mov
sbb
repnz
xor
xor
sqrtps
lcall
and
pop
cwtl
ljmp
clc
rorb
rcrl
jle
xorl
mov
les
mov
rorb
mov
out
aas
sbb
ret
int
test
sub
dec
pusha
mov
ret
or
nop
cltd
sub
add
xor
sbb
xlat
aam
pop
fwait
mov
jae,pt
cli
push
fstl
push
cmp
loopne
pusha
loop
andl
mov
dec
rolb
mov
es
mov
or
pslld
out
xlat
push
xchg
adcl
add
push
push
inc
sub
lcall
and
and
or
sbb
mov
cmp
lock
and
add
xchg
cmp
lea
sbb
adc
pop
vorps
mov
repnz
sbb
and
out
repnz
enter
es
arpl
repnz
cmpsl
fbld
push
xlat
shll
ficoms
popf
bound
push
enter
sub
mov
sub
movsl
cwtl
mov
cltd
pop
out
sbb
add
push
lock
pop
jge
jmp
jmp
jl
push
addr16
movsl
movsb
leave
xchg
inc
and
cmpsb
prefetch
sub
iret
gs
addr16
sub
test
fwait
cmp
pop
lret
aam
mov
xchg
arpl
fidivs
jl
mov
insb
into
fucompp
dec
inc
negl
jge
aad
pop
arpl
mov
cmpsl
adc
dec
jo
or
test
pusha
fwait
sbb
or
adc
les
xchg
pop
xor
mov
cli
adc
stos
push
and
cltd
adc
stc
push
cwtl
cltd
aam
and
daa
addr16
jnp
push
xchg
jbe
xchg
iret
std
sbb
fisubs
icebp
or
lea
out
inc
mov
in
sub
pop
aam
sbb
loope
cli
popf
repnz
sub
dec
jle
out
or
mov
fisubrl
or
mov
or
add
xor
dec
lret
xchg
and
test
fimull
ret
mov
scas
sbb
sbb
mov
push
repnz
xor
sbb
in
mov
push
dec
jmp
push
push
fiadds
jle
sbb
pop
cld
or
add
ljmp
sub
sub
scas
mov
sbb
enter
in
test
and
sbb
lds
jl
popa
call
and
push
out
rcll
xchg
adc
xchg
cld
bound
adc
test
sub
or
mov
pop
mov
sub
xor
jmp
leave
xchg
sbb
mov
and
jecxz
xchg
sbb
pop
jb
in
je
aam
movl
test
ljmp
push
mov
sbb
or
pop
enter
sub
dec
bound
inc
shlb
loope
aad
hlt
lds
sbb
filds
dec
int3
mov
test
cmp
in
mov
addb
mov
sahf
jns
inc
insl
inc
adc
stos
repnz
inc
mov
and
incb
xlat
or
and
mov
adc
and
aam
push
push
push
sti
adc
lcall
push
mov
xchg
add
xchg
fistpl
movsl
and
jmp
jns
leave
xor
fcomi
push
pusha
xlat
sar
pop
pop
adc
or
bound
cmpsl
dec
xchg
cmp
sbb
fwait
push
inc
loope
pop
mov
sub
arpl
les
fstpt
jl
int
je
xchg
hlt
push
loop
xor
out
lret
mov
xchg
gs
adc
xlat
jno
and
jae
nop
jmp
sub
push
sbb
xor
movsb
or
dec
jg
fs
adc
repnz
cmpsl
aad
or
jno
movsb
push
xchg
pop
pusha
add
pop
pusha
fists
xchg
in
js
fdivl
loopne
and
jb
hlt
ret
andl
inc
add
stos
mov
cmpsl
paddq
ljmp
sub
subb
in
push
xor
pushf
test
xchg
movsb
mov
or
icebp
or
jg
lcall
loope
dec
repz
mov
push
adc
call
pusha
movsb
adc
cmp
lea
push
jno
or
mulps
cld
jmp
fildl
xchg
popf
and
pushf
cli
xchg
pushw
mov
or
sbb
dec
push
dec
sbb
loop
sub
fucomip
ds
add
jp
dec
pop
push
jae
bound
lret
les
repnz
dec
jbe
or
shrb
adc
lret
movsb
ds
shr
and
stos
mov
stos
in
flds
lcall
es
adc
ss
or
add
adc
and
cmp
cltd
adc
xchg
push
adc
xlat
dec
imulb
fs
fistpl
fcmovnb
scas
and
pushf
sub
lret
or
add
rcrb
ret
mov
or
out
sbb
hlt
xchg
push
xlat
mov
movsb
jle
out
inc
or
or
xchg
pop
iret
jp
lret
pop
imul
dec
arpl
mov
sub
xor
or
arpl
mov
cmp
mov
js
adc
sbb
ljmp
push
popa
mov
cltd
xor
js
mov
loopne
clc
popa
pop
ja
lret
sti
outsl
pop
repz
arpl
inc
sti
ficoml
sub
out
pop
lock
fnstsw
mov
loopne
sbb
je
rol
mov
aam
xchg
or
out
mov
sub
pop
sub
push
inc
lcall
jmp
bound
arpl
insb
adc
jl
sbb
adc
jmp
adc
movb
ljmp
sahf
in
jnp
into
inc
and
rorl
icebp
mov
lods
lods
and
add
lods
dec
cwtl
aas
jge
repz
mov
fs
fldl
cwtl
rolb
cwtl
dec
push
mov
test
sbb
mov
and
ljmp
pop
mov
adc
and
vcmpsd
and
cld
xor
cmp
loopne
nop
iret
movsb
leave
mov
sarb
daa
repnz
or
test
cmp
iret
ss
sbb
push
sub
push
stos
ret
push
icebp
sub
cmp
rorl
adc
mov
test
adc
insl
sub
jne
loopne
ds
ret
aad
clc
push
add
cwtl
pop
cld
adc
cli
pop
mov
imul
add
or
mov
jo
add
shl
stos
mov
xor
loopne
xchg
cmp
push
fmull
cs
sub
je
loopne
mov
shll
mov
mov
cmp
movsb
frstor
adc
xchg
or
test
pop
xchg
neg
aam
add
popa
lahf
pusha
mov
push
push
and
fcompl
int
mov
and
into
xchg
insl
and
lret
dec
sub
xor
or
inc
loopne
aam
gs
iret
pop
sub
pop
sbb
test
sub
dec
mov
stos
or
add
leave
pop
movsl
push
rol
mov
stos
mov
ficoms
jnp
fs
jbe
inc
out
imul
adc
mov
clc
adc
mov
push
or
stos
push
inc
jge
mov
sub
push
int3
adc
cli
decb
pop
pop
sbb
aas
mov
push
repnz
loopne
sub
test
push
add
es
mov
incl
loopne
iret
frstor
fdivr
push
test
lahf
sub
or
nop
pop
lahf
push
xor
sbb
or
sarb
inc
gs
ss
cwtl
testb
leave
sub
fwait
cwtl
cld
rolb
in
xchg
ret
pop
jp
pushf
xchg
mov
repz
mov
repz
sub
cmp
adc
dec
jecxz
popf
sub
insb
pop
or
sub
mov
cmp
out
push
xchg
rcrl
mov
add
push
push
mov
sbb
scas
mov
xchg
cmp
mov
in
and
mov
xchg
cmp
insl
in
negl
aam
inc
aaa
loop
aaa
lds
inc
sbb
sub
lea
xchg
sbb
add
mov
push
sbb
pusha
pop
mov
cltd
mov
cmp
push
sbb
inc
in
xrstor
inc
cmpsl
jecxz
movups
lea
xchg
jecxz
and
fwait
pop
sub
push
jno
mov
lret
lds
lret
je
adc
lea
call
jge
rcll
adc
pmaxsw
push
rclb
adc
lea
mov
rol
or
xor
pop
popa
fists
outsb
jae
in
leave
pop
sub
popa
push
stos
sub
xchg
call
jmp
test
stos
or
aam
cli
ljmp
and
xor
insb
int
push
adc
or
xchg
pop
sbb
ret
test
push
addr16
cli
mov
out
pusha
cld
mov
cs
mov
xchg
fcoml
movsl
xor
and
or
test
es
rcl
dec
std
pop
test
sbb
scas
and
xor
mov
scas
repnz
lods
mov
repz
xor
jb
inc
out
mov
jg
daa
and
jae
ljmp
xchg
jbe
test
xor
pop
jno
push
jnp
sbb
adc
pop
sbb
fimull
mov
rcrb
lcall
add
push
mov
or
pop
arpl
lods
imul
movsl
sti
outsb
in
in
or
in
and
jge
jae
stos
pop
and
mov
daa
sbb
push
mulb
mov
cs
fsubs
out
ljmp
lock
or
js
movsl
test
jmp
jmp
jle
sbb
and
mov
imul
out
inc
and
popf
sti
xchg
push
add
mov
and
push
test
sub
push
adc
inc
and
jmp
sub
sbb
xchg
daa
cmp
push
imul
rcrl
add
sbb
sbb
outsl
loopne
sub
or
mov
adc
pusha
wbinvd
push
or
or
or
mov
das
add
cwtl
add
add
add
decl
scas
push
or
inc
std
jmp
cld
mov
arpl
cli
fbstp
stc
and
clc
jmp
mull
jecxz
cmc
aam
sub
or
lds
and
jno
stos
repnz
arpl
addr16
out
push
add
push
pop
mov
push
dec
add
mov
push
sbb
mull
or
std
insb
lret
iret
mov
out
inc
mov
in
jno
fwait
mov
std
mov
mov
cltd
sbb
xlat
repnz
leave
or
stos
out
xchg
fmull
fidivs
mov
movsl
inc
inc
cli
cmc
jne
pop
daa
push
fbld
xchg
testb
push
aas
fs
in
js
daa
lret
or
xlat
mov
sbb
jmp
mov
pop
sbb
sub
or
sbb
shll
addr16
sbbb
adc
sub
in
cmp
popf
movsb
xor
repnz
push
mov
subl
xor
fiadds
xchg
sbb
dec
mov
fcompl
sbb
mov
outsl
jmp
sub
and
adcl
add
sub
fsubrs
stos
loopne
push
dec
outsl
mov
test
and
dec
ljmp
adc
pop
sbb
sub
test
cmp
xchg
xor
insl
cld
ds
repnz
lds
add
cwtl
inc
into
push
ret
aaa
inc
gs
cmp
leave
xchg
lods
push
mov
lods
cmc
test
test
pusha
pop
es
sub
mov
sub
leave
jge
push
pop
cs
fsubrp
pop
movsl
stos
xchg
push
pushf
outsb
clc
sub
mov
adc
and
add
adc
inc
adc
add
jge
dec
call
pop
fnsetpm(287
loop
cli
pop
rorl
pop
add
int3
push
push
cwtl
ds
sub
mov
imulb
repnz
stos
dec
push
jbe
dec
jno
or
mov
in
and
or
pushl
xchg
fsubl
and
jno
mov
xchg
and
dec
adc
xchg
inc
cmpl
xor
add
movsb
rcrl
lds
mov
lret
and
repnz
jle
ja
mov
inc
jnp
ljmp
xchg
mov
pop
add
cmc
nop
xchg
adc
movl
sub
negl
repnz
outsb
cmp
jecxz
repz
add
mov
mov
mov
adc
push
sbb
adc
push
inc
push
js
adc
fldt
pop
sub
dec
stc
adc
es
arpl
repnz
cmpsl
dec
mov
std
xchg
daa
fsin
adc
xchg
lock
sub
shl
sub
jecxz
test
sbb
scas
or
aas
mov
add
push
mov
rorl
dec
fiadds
sbb
add
or
outsb
mov
pop
jge
or
mov
sbb
add
in
xchg
sub
jmp
xchg
cmp
inc
pop
xchg
or
sub
sbb
loopne
sbb
outsb
sub
xchg
or
and
jl
pop
sub
jo
xlat
jne
mov
arpl
in
cmp
adc
xlat
xchg
sbb
xchg
sbb
pop
or
fs
lods
iret
pusha
repnz
mov
jns
test
into
xchg
jp
pop
jecxz
dec
inc
dec
sub
push
xchg
push
adc
jl
sbb
bound
jb
push
ljmp
pushf
xchg
cmpsl
jne
sbb
cmpsl
bound
cmp
mov
adc
inc
sbb
cmp
or
les
sbbb
or
push
and
out
push
pop
xlat
push
xchg
pop
jnp
cltd
jp
jp
adc
adc
mov
adc
adc
ds
repnz
pop
jecxz
imul
mov
xchg
dec
and
mov
and
and
jl
fcompl
sbb
xor
aam
fdivr
mov
add
add
dec
pop
push
mov
mov
cmpsl
or
add
inc
mov
cli
and
js
cmpsb
fstpt
or
cmp
cmpl
add
xor
xlat
insb
and
sub
jbe
jnp
icebp
sbb
adc
xchg
jnp
mov
insl
test
and
sti
js
aad
imull
cmpsl
xlat
ret
repnz
xchg
adc
loope
mov
pop
adc
cmp
push
and
fsub
cmp
into
mov
rcll
out
jmp
or
nop
jb
xor
mov
aaa
jmp
jle
mov
xchg
lcall
bound
ret
and
adc
sbb
mov
push
out
loop
fcoms
pop
and
pop
sub
adc
or
pop
rcl
pop
cmc
stc
cmp
std
daa
xchg
adc
jle
sbb
nop
loope
sbb
test
ds
push
mov
fldt
jg
pop
xchg
movsb
jle
mov
sub
fwait
shlb
and
sub
jl
and
iret
mov
dec
lock
movsl
xchg
inc
repnz
mov
lcall
adc
sbb
data16
clc
aas
sbb
addl
sbb
imul
enter
repz
lret
inc
pop
cli
mov
jno
in
popa
push
add
and
dec
mov
sub
ljmp
jge
xchg
icebp
stos
aad
mov
jp,pn
xchg
hlt
lret
xchg
push
hlt
ja
xchg
lea
out
std
and
incb
sahf
in
add
mov
and
mov
add
add
cmp
out
mov
inc
cld
jmp
sti
or
fistpl
sbb
je
jmp
mul
fcomi
mov
xchg
sub
in
sub
or
out
add
fldt
lret
aad
aad
adc
out
jmp
shr
xchg
sub
in
sub
or
and
das
repz
lahf
ret
in
push
cwtl
jmp
ret
sub
mov
sbb
lcall
dec
je
mov
out
out
sub
or
call
mov
or
prefetcht0
xchg
test
pusha
mov
or
cwtl
or
or
add
filds
nop
xchg
imul
pusha
insl
sub
bound
insl
push
rcrb
xlat
add
add
iret
add
jmp
cld
ret
sub
or
idiv
negb
cmc
mov
repnz
jb
pusha
icebp
sub
or
in
adc
or
sub
cmp
fisttps
pop
and
daa
or
sbb
sub
or
pop
cli
push
sbb
daa
sbb
cltd
pusha
loopne
sub
pop
sbb
nop
adc
or
adc
or
pushf
pmulhuw
ljmp
pop
mov
or
or
add
pop
push
daa
test
and
arpl
sub
ss
adc
jecxz
cs
jge
sub
imul
pop
imul
sbb
pop
out
call
xchg
add
inc
sbb
daa
xor
mov
hlt
cli
adc
push
cmp
push
lret
jg
xchg
cmp
cmc
mov
mov
scas
aam
mov
inc
repnz
cmp
jae
fildl
sbb
and
repnz
rcrl
dec
lds
iret
or
inc
test
jge
push
xchg
popa
sbb
int3
les
jecxz
mov
sbb
movsb
aam
mov
aad
aas
hlt
mov
mov
cmpsl
mov
push
mov
test
loop
bound
loopne
sub
mov
inc
fdivrs
lret
je
pop
xchg
in
mov
jp
movsb
int
inc
es
cmp
xchg
sub
repz
xchg
xchg
outsb
and
dec
loope
notl
jb
mov
dec
fsub
sbb
and
es
and
sub
fs
or
jmp
push
leave
jge
in
addr16
aas
xchg
pusha
mov
push
dec
add
cltd
or
ficoml
dec
repnz
cmc
xor
add
jmp
sub
adc
das
xchg
and
je
lahf
xchg
adc
lcall
sub
pop
nop
and
mov
add
pusha
push
xor
and
xor
ja
jmp
pop
cwtl
dec
sbb
addr16
mov
jg
addr16
lea
fmull
mov
insl
imul
pusha
mov
sbb
fs
call
or
push
int
xchg
xor
pusha
notl
xchg
lret
cli
pop
sbb
ret
or
inc
lret
or
pop
cwtl
adc
and
sbb
add
rcll
sub
stos
les
push
push
aad
push
push
in
das
ljmp
ja
sub
ja
mov
cmp
enter
or
and
loopne
leave
mov
test
push
xchg
mov
pop
dec
mov
xsaves
dec
lret
iret
lds
mov
mov
sbb
enter
push
add
in
xor
jecxz
push
adc
arpl
ljmp
or
pop
dec
xchg
jmp
mov
mov
data16
pop
cwtl
adc
mov
fchs
pop
or
jae
js
sub
and
stos
loopne
js
or
bound
pusha
in
sbb
cwtl
adc
push
cmp
hlt
ret
cld
dec
mov
out
xchg
daa
inc
stos
scas
shld
xchg
xor
push
je
push
movsb
inc
rcr
fcompl
cmp
loope
dec
xchg
push
and
arpl
cmpsl
mov
js
insb
in
ljmp
xor
mov
lods
loope
jns
lret
add
sbb
inc
xchg
cld
ret
leave
cltd
push
sub
call
and
sub
jmp
or
dec
sbb
push
arpl
adc
xor
mov
shlb
test
lea
add
mov
mov
inc
jno
movsb
mov
test
jo
ljmp
jl
sub
lock
cmp
mov
lret
lcall
mov
jecxz
stos
mov
dec
push
xlat
mov
fidivrl
in
aad
xchg
sbb
les
inc
addr16
lods
sub
sub
sub
dec
ljmp
in
jbe
stos
cmc
dec
in
lods
inc
cs
pop
mov
sarb
jle
das
into
mov
sub
nop
sbb
push
out
jae
adc
pop
data16
pop
adc
add
cmp
insl
test
xchg
loopne
push
adc
push
adc
pop
mov
xor
incb
or
push
jle
add
mov
test
xor
repnz
lcall
fwait
stos
xor
scas
jne
jne,pn
test
and
loope
dec
jecxz
or
mov
scas
ljmp
mov
inc
mov
shl
mov
repz
pop
repnz
xor
pop
imul
movsb
pusha
and
ror
sub
or
mov
and
mov
fsts
mov
lods
push
test
sub
je
or
scas
or
xchg
stos
cmp
adc
inc
cmp
je
movsb
int3
push
mov
pop
repnz
dec
add
mov
fs
jo
lods
adc
sub
xor
adc
push
repz
xchg
add
push
push
push
hlt
icebp
jge
or
jno
mov
cs
loope
or
jne
stos
lock
jbe
mov
ljmp
xchg
xchg
sbb
inc
loope
stos
push
out
subl
bound
inc
jo
cmp
pop
aad
clc
push
jnp
shl
clc
xchg
ja
sbb
sbb
mov
mov
int3
out
mov
int3
out
push
test
sub
stos
mov
pop
and
mov
scas
pusha
add
cltd
or
sahf
arpl
push
xchg
push
push
fdivrl
rorl
pop
or
les
sti
stos
ljmp
cmpsl
pusha
shrb
in
or
into
repnz
jge
ss
fstl
in
push
stc
mov
pop
sub
push
aam
sub
loopne
jmp
ds
aam
lods
in
dec
mov
or
or
or
sub
call
xchg
hlt
ja
leave
pop
lds
sbb
js
mov
mov
push
pop
mov
xor
push
cmpl
imul
out
dec
adc
fdivrp
insb
mov
xor
sub
mov
add
xor
jo
push
and
dec
sarl
nop
and
add
aaa
xchg
fstpt
scas
or
adc
adc
or
and
cmc
daa
fldt
clc
ret
aam
sub
add
sbb
cmp
push
outsl
mov
push
jge
inc
lods
das
daa
adc
aaa
leave
lcall
adc
lret
test
push
adc
mov
xchg
negb
imul
cmc
insl
mov
vmovlps
mov
lds
sarb
pop
clc
adc
je
test
push
repnz
daa
jnp
cs
mov
sbb
leave
dec
or
mov
loop
xchg
cwtl
adc
mov
pop
dec
jnp
jle
jae
or
roll
or
sbb
cmp
stos
lock
mov
cmpsb
xchg
les
mov
cld
or
mov
push
aam
out
cmpsb
cli
push
imul
test
cmc
and
iret
jns
bound
adc
inc
mov
cld
je
adc
xchg
sub
fs
sub
xchg
adc
test
daa
lret
je
or
sub
jp
mov
sbb
mov
mov
push
adc
cld
ror
int3
in
lds
imul
sbb
pop
cmp
lock
fildl
jo
sub
inc
or
and
out
sub
cs
inc
js
test
lret
jl
add
xchg
test
in
xchg
cmp
sub
pop
mov
loop
sub
jecxz
ljmp
icebp
and
mov
fs
dec
mov
stc
mov
pop
leave
sbb
sub
xor
sbb
iret
stos
dec
int3
push
lea
push
lds
cmpsl
pushf
insl
mov
lret
xor
adcl
test
scas
leave
into
fcoms
imul
outsb
enter
adc
pushf
dec
je
sub
orb
or
or
pusha
dec
cli
cmp
jle
push
mov
lock
jns
call
add
xchg
mov
mov
push
lods
test
pop
fistl
adc
add
sbb
stos
cmp
repnz
aaa
insb
std
xchg
les
push
sbb
fisubl
repnz
popf
cmp
daa
push
dec
mov
pop
mov
icebp
lea
nop
xchg
stos
es
and
mov
lock
repnz
popf
dec
cmp
adc
lret
cmpsl
push
and
ja
mov
pop
xor
xchg
cwtl
lods
popa
sub
adc
adc
orl
push
dec
jp
xchg
int
push
sti
and
pop
sti
sub
lock
in
in
insb
dec
movsl
jp
mov
cltd
mov
lret
mov
sub
pop
cmpsl
iret
push
es
mov
icebp
cmp
xchg
adc
sbb
add
fistpl
gs
arpl
loop
dec
out
js
sub
mov
add
jmp
inc
adc
lret
cli
xor
xchg
faddp
and
lds
and
xlat
dec
cwtl
and
jmp
dec
mov
push
fwait
pop
jae
lret
into
mov
mov
pop
popf
mov
clc
push
mov
frstor
cli
imul
leave
sarl
and
insb
push
loopne
jge
mov
rorb
push
or
push
xchg
push
in
js
popf
mov
mov
sub
leave
lds
lret
inc
mov
pop
push
add
outsl
jl
das
cmc
pop
sbb
push
push
xchg
inc
fisttps
loop
sbb
xchg
cmpsl
sub
int3
sub
bnd
int3
jno
ds
push
bnd
test
mov
mov
add
dec
call
jle
cld
cmc
outsl
xchg
mov
js
jp
test
lret
out
insb
mov
les
inc
jno
mov
dec
mov
out
aas
lret
and
cwtl
push
int3
xor
enter
outsl
mov
jae
push
aad
mov
call
imul
gs
jp
push
push
xchg
sbb
xlat
xchg
cld
xor
or
inc
loope
call
aaa
sbb
imul
int
leave
push
mov
bound
push
clc
adc
adc
shr
loope
lea
cmp
daa
push
sub
mov
push
or
inc
icebp
sub
test
movsb
xchg
scas
insb
mov
pop
in
ja
xchg
mov
loop
test
enter
mov
jge
xchg
jl
cmp
mov
sub
add
xchg
xchg
xorb
xchg
mov
or
add
add
repnz
scas
cmp
pop
out
xchg
repz
arpl
xchg
lahf
sbb
sub
pop
addl
js
in
aam
cld
aad
or
push
inc
cld
push
sub
or
xchg
roll
or
in
or
test
hlt
les
sbb
daa
or
and
ja
cmpsl
xchg
push
ret
loope
mov
push
push
pop
in
sbb
inc
into
sub
fwait
es
push
test
jecxz
es
lcall
xor
jb
stos
scas
sbb
mov
das
dec
lock
xchg
inc
and
ljmp
cmp
add
inc
call
mov
sub
mov
dec
push
mov
dec
fadd
sahf
out
or
lock
negl
jo
sbb
in
fldt
or
enter
mov
pushf
lods
adc
mul
xchg
jmp
and
fs
push
dec
xchg
call
dec
xchg
mov
pop
icebp
add
fstpl
cwtl
pop
ret
xchg
inc
stos
sub
mov
jne
mov
push
adcb
je
ljmp
cmpsb
xchg
call
aad
leave
cmp
mov
mov
out
fstpt
ss
jbe
or
push
pop
sbb
cmp
push
jge
inc
fwait
and
and
or
xor
xlat
in
pop
ljmp
jbe
mov
pushf
sbb
and
call
sbb
sub
test
cli
arpl
push
jle
cmpsl
adc
fsubl
std
sbbl
out
sub
les
dec
sub
adc
arpl
sub
pop
js
mov
and
pop
and
mov
insl
movsb
mov
mov
or
and
pop
outsl
les
nop
sub
and
sub
sub
jecxz
aad
and
adc
arpl
in
fldenv
icebp
into
out
not
out
pop
inc
push
cltd
jecxz
in
xor
and
cmp
repnz
pop
pop
jle
or
into
test
or
mov
dec
cmp
push
cmc
hlt
insl
fsubrs
sub
cs
cltd
stos
aaa
adc
fwait
xor
ss
push
out
sub
bound
dec
jnp
mov
xchg
or
sub
push
sub
bound
add
cmp
pop
mov
test
and
stos
add
sub
dec
inc
cmp
sub
repnz
dec
out
or
pop
xchg
scas
sub
sbb
test
pop
xor
sub
test
xchg
jecxz
xchg
add
outsb
je
xor
mov
and
jmp
bnd
in
fst
es
mov
xchg
cli
ljmp
mov
and
mov
jbe
mov
mov
insl
fstpt
pop
sbb
cmp
xchg
sub
subb
jns
or
out
leave
shlb
mov
daa
cmp
sbb
aam
xor
adc
jae
and
dec
cmp
arpl
insl
hlt
push
cld
sub
or
mov
cmp
in
ljmp
imul
add
jl
dec
loop
sahf
roll
int
lret
mov
dec
int
push
in
dec
test
sbb
daa
sarb
pusha
jge
push
shl
xlat
nop
pusha
and
mov
or
push
fs
push
arpl
cmpsb
lcall
nop
test
hlt
iret
jno
inc
adc
push
jmp
rcpps
fs
mov
and
cli
add
arpl
sub
and
in
stos
xchg
dec
xor
dec
pop
mov
and
je
xchg
cmpsl
addl
lods
call
jno
movsb
popa
ds
sub
daa
ss
mov
outsb
popa
and
inc
pop
fsubr
gs
xlat
cmp
bound
je
mov
xor
inc
std
sbb
fs
jbe
js
je
sahf
jecxz
push
test
push
sub
pop
pop
fisubrl
pusha
fsubl
cmp
aam
and
push
lret
hlt
ja
pop
mov
mov
int
outsl
call
inc
test
bound
decb
cwtl
fs
ljmp
adcb
jle
sub
icebp
xor
sub
add
xor
into
inc
insb
aam
fcmove
mov
aam
push
arpl
sbb
repnz
out
or
scas
add
jb
cld
inc
jo
aam
fwait
negb
je
pop
sub
js
decl
inc
in
sti
fcoms
inc
jbe
cmp
addr16
cmp
outsl
xchg
jmp
push
insb
and
ficomps
push
adc
arpl
mov
push
pop
push
fwait
add
inc
xor
sbb
mov
and
lds
inc
mov
inc
jno
adcl
lods
sbb
fisubrl
or
pop
lea
jo
lret
sub
es
jnp
loope
insl
scas
les
pop
add
mov
and
mov
cmp
pop
and
sbb
loopne
sbb
jl
daa
sub
mov
mov
and
iret
js
sbbl
add
xor
es
add
sti
sub
in
call
iret
insb
es
and
adc
leave
jecxz
les
insb
inc
sub
mov
adcb
fwait
mov
call
lods
dec
and
stos
aas
mov
push
sbb
xorb
es
or
push
das
pop
mov
in
mov
pop
call
or
mov
sbb
arpl
push
mov
sti
or
xchg
xchg
inc
sbb
inc
sub
sub
mov
or
or
and
mov
and
aam
push
es
test
pop
jns
pop
fsubs
sub
xor
jbe
mov
cli
pop
sub
mov
lret
iret
dec
xlat
int
add
cmpsb
leave
mov
mov
cmp
mov
mov
inc
stos
jmp
repnz
mov
rorb
inc
into
roll
or
sbb
or
mov
stos
push
stc
clc
mov
mov
das
pop
push
xchg
mov
or
mov
cmc
divl
stos
loopne
mov
sub
inc
sti
sub
movsl
jp
mov
or
addr16
mov
jmp
bound
cltd
out
outsl
outsb
fisubrl
pop
gs
mov
sbb
imull
push
sub
imul
fmull
imul
cld
and
cmp
stos
ret
ljmp
jl
out
fcompl
stos
test
test
or
insb
and
pop
pop
pop
or
xor
xchg
adc
or
ss
push
in
sub
mov
inc
out
and
push
or
and
adc
bound
or
add
pop
xchg
daa
push
and
hlt
nop
sub
add
movsl
repnz
adc
out
sub
or
test
adc
mov
imul
jg
sub
sbb
adc
jmp
movsb
rep
or
cli
repnz
pushf
lock
sbb
imul
stos
loopne
or
or
add
and
loopne
or
jns
sub
cli
adc
pushf
sbb
push
and
movsl
divl
adc
imul
mov
xchg
or
jmp
loope
scas
subl
sub
daa
jl
xor
pop
adc
or
pop
sub
xor
add
rorl
outsl
mov
or
out
adc
or
jns
leave
add
repz
es
xchg
scas
fidivl
xchg
in
xlat
loop
pusha
outsl
test
aad
orb
sbb
dec
mov
iret
lcall
xchg
rcl
popa
aas
cld
jl
sub
pop
repnz
pop
dec
lock
push
ljmp
dec
xlat
ret
cld
mov
push
add
adc
clc
and
xor
push
cwtl
stos
lahf
push
and
add
rclb
mov
xor
daa
or
pop
push
loop
nop
rolb
insl
fisttps
mov
mov
sub
or
pusha
or
repz
mov
mov
pusha
pop
les
sbb
and
sub
mov
loopne
inc
out
push
in
sti
insb
repz
ss
mov
imul
mov
add
jmp
das
sub
or
push
or
ficoms
ljmp
repz
pushf
sbb
imul
mov
pusha
stos
or
fmull
sub
outsl
out
movl
mov
cmpsb
repnz
nop
in
jmp
pop
pop
outsb
xor
cwtl
movsb
dec
rcll
sub
hlt
test
pop
aam
pop
mull
call
jl
je
icebp
paddq
out
xor
and
ja
sbb
sti
int3
scas
xor
lret
mov
sub
imul
and
imul
movsb
ss
sti
daa
arpl
cli
xlat
and
cltd
pop
cmpsl
hlt
or
dec
pop
aas
les
lcall
xor
mov
clc
dec
push
daa
leave
pop
mov
push
mov
fsub
das
sub
in
sub
xchg
es
cmp
scas
jl
je
fwait
in
repnz
repnz
mov
xchg
enter
xchg
cmp
fsubrs
mov
loopne
lret
daa
into
jecxz
out
test
cmp
nop
mov
pop
outsb
jbe
adc
in
leave
sbb
cmp
pop
and
call
sub
rcl
fnsave
and
rcrl
jo
inc
les
mov
shl
inc
jno
outsb
push
aam
mov
loopne
loope
gs
mov
jnp
mov
cwtl
loopne
sbb
inc
cmp
iret
mov
sbb
lret
scas
mov
hlt
dec
mov
pop
push
and
repnz
pop
out
adc
cmp
adc
mov
cmp
fstpl
js
insl
mov
out
gs
push
bnd
jge
cmp
jnp
loop
and
ljmp
lock
xor
das
jns
and
adc
jnp
mov
stos
or
xor
sub
xchg
jp
loop
mov
daa
ds
scas
dec
shlb
lods
adc
ret
sub
sub
or
outsl
test
loop
lcall
sbb
pop
sbb
outsb
sub
mov
or
mov
xchg
xlat
cli
sbb
inc
fimull
lcall
lret
in
and
shlb
pop
fs
add
shrb
fisttps
fs
rolb
sbb
rcrl
scas
push
or
mov
pop
out
or
dec
scas
lcall
and
leave
emms
pushf
fsubr
sub
jmp
rcr
shll
stc
ror
cmp
mov
jnp
fnstcw
add
cmpsb
ljmp
cmp
lods
xchg
repnz
hlt
add
mov
sub
imul
add
cmp
mov
add
and
popa
out
jnp
arpl
sbb
adc
push
leave
nop
xchg
pop
movsl
ljmp
inc
fs
pop
stos
mov
lea
add
xchg
and
and
rol
fs
sub
push
imul
jecxz
dec
adc
fdiv
cmp
push
repnz
out
sub
jl
dec
push
push
push
imul
mov
sub
lods
aaa
mov
xor
out
adc
mov
arpl
cld
push
sub
and
in
ljmp
lcall
nop
cmc
fdivp
loopne
or
xor
rorb
xchg
xchg
xor
std
jmp
pop
repnz
sub
repz
mov
out
in
daa
ja
in
in
inc
or
sub
das
lods
lret
sbb
sbb
mov
imul
push
in
sub
xchg
sti
daa
sub
les
mov
sbb
jl
dec
bound
lret
push
or
mov
outsl
cwtl
in
sub
mov
mov
jecxz
jle
cmpsb
xchg
repnz
mov
insl
testb
fmul
test
mov
stos
mov
mov
iret
insb
mov
ja
sbb
mov
movsl
das
or
mov
or
jg
ja
shlb
arpl
xchg
mov
pop
jo
test
pop
inc
cli
cmpsl
mov
aas
int3
push
cmp
xor
or
sub
sub
sbbl
pop
aaa
jp
in
and
loop
iret
pushf
inc
fucomi
gs
stos
dec
in
fidivs
js
mov
jno
mov
jo
sub
divl
fnstenv
mov
mov
add
mov
sti
inc
jmp
dec
sbb
dec
je
test
push
xor
out
sub
popa
cli
add
fisubs
mov
test
stc
movsb
enter
dec
cltd
lret
in
sub
xor
rcll
dec
and
loope,pn
inc
sbb
out
fprem
fiaddl
flds
lods
pop
aam
je
mov
leave
je
adc
enter
sahf
aaa
adc
sbb
clc
xor
sub
or
xchg
in
fsubrs
enter
stos
mov
xlat
out
or
testl
mov
pop
ljmp
gs
outsb
add
xchg
ds
imul
lea
pop
sub
out
dec
ljmp
sub
sub
pop
iret
xor
xor
add
movsb
mov
push
iret
movsb
lret
shl
inc
ret
sbb
fdivs
add
adc
inc
adc
repnz
out
xchg
cli
sub
loopne
mov
xchg
pop
mov
mov
dec
and
or
sub
nop
and
test
shll
sbb
movsb
and
and
sbb
popa
in
jecxz
push
mov
out
push
xor
lock
sbb
mov
out
mov
out
daa
cmc
cwtl
test
icebp
xor
out
pushf
dec
lret
sub
mov
xchg
cmovl
push
stos
sub
add
lret
push
pop
mov
jecxz
sub
cmp
xor
or
adc
pop
lods
ljmp
and
push
enter
pop
xchg
jmp
imulb
adc
daa
mov
mov
sub
add
sbb
pop
pushf
unpcklps
xchg
in
push
xchg
sub
pop
test
icebp
sub
jne
inc
xchg
test
jecxz
sub
not
out
cwtl
jecxz
fsub
and
dec
jno
ljmp
fsubl
fistpl
mov
aam
mov
fwait
loopne
mov
mov
pop
mov
in
mov
insl
ss
lret
add
and
mov
pop
xlat
xor
push
fnsetpm(287
lods
push
cwtl
mov
cmpsb
pop
push
ljmp
xor
and
dec
push
stos
das
std
loope
mov
out
aam
cwtl
mov
mov
mov
cltd
lret
push
and
cmp
xor
data16
adc
popf
or
arpl
pop
mov
fsub
xchg
outsb
jb
lds
repnz
inc
int
repz
stos
dec
and
sub
imul
repnz
sbb
out
mov
cmp
les
cwtl
dec
sub
xor
pushl
xor
mov
sbb
mov
icebp
fistl
out
aaa
out
fnsave
cmpsl
or
lret
xchg
lcall
mov
and
pop
lods
cmp
es
xor
xor
push
sbb
or
ror
pushf
pop
in
ljmp
and
inc
mulb
imul
sbb
xchg
loop
xor
sbb
mov
add
xor
sbb
inc
mov
mov
lret
cmpsl
aad
add
push
sbb
mov
loopne
movsb
js
sbb
stos
sbb
sbb
adc
ret
sti
jmp
lock
lret
xchg
shlb
adcl
bound
int3
or
mov
idiv
or
push
sub
mov
outsb
icebp
push
insb
mul
loopne
pop
add
or
pop
es
aad
and
inc
fistpll
ja
loopne
test
shll
out
xchg
and
xchg
jmp
mov
dec
stos
pop
add
or
jl
std
and
hlt
aam
ja
insl
adc
pop
aad
scas
popa
scas
push
or
inc
shlb
out
mov
or
aas
js
loopne
dec
cmp
push
or
and
mov
push
jno
in
fcomi
and
inc
es
lds
lcall
jge
dec
insb
loopne
adc
inc
lods
pop
jae
sub
sbb
and
mov
inc
data16
inc
aad
mov
das
adc
mov
push
loopne
mov
les
iret
popa
cmp
jb
icebp
pop
lret
stos
and
movsb
jne
jb
ret
cmpsb
ret
js
idivl
movsb
xor
not
imul
inc
mov
sbb
xchg
cmp
or
loope
xor
sbb
lock
ret
dec
int
insb
fcomi
push
cld
in
movl
in
sbb
leave
fprem
lret
fnstcw
sarb
sbb
cwtl
stos
xor
cmc
adc
idiv
add
inc
dec
inc
mov
in
push
jno
test
icebp
iret
pop
inc
loop
dec
pop
dec
or
movsb
mov
in
stc
xor
sbb
push
icebp
sbb
pusha
cwtl
js
adc
repnz
je
sbb
scas
mov
das
sbb
mov
int3
and
mov
add
out
xorb
in
pusha
mov
aad
sbb
jge
push
test
sbb
fsubrs
pop
push
outsb
jbe
jecxz
leave
aas
mov
or
inc
mov
adc
mov
sti
enter
sbb
push
xchg
iret
sub
loope
push
aad
mov
loopne
and
cmpsl
push
pop
mov
and
mov
mov
adc
dec
sub
sbb
add
sbb
inc
imul
or
into
inc
inc
pop
push
adc
sbb
adc
insb
js
aad
jl
hlt
push
xor
dec
gs
xchg
stos
jno
inc
into
test
ljmp
das
fistl
mov
sub
lcall
fdivs
cli
inc
mov
inc
sti
mov
sub
leave
adc
lods
sti
adc
aad
inc
and
push
and
pop
cmc
and
or
cld
sbb
icebp
pop
div
inc
notl
lock
inc
pop
adc
filds
jbe
inc
push
jnp
arpl
dec
add
cmp
push
jne
sub
sub
jmp
fdivrp
mov
mov
repz
in
sti
push
pusha
jmp
mov
push
incl
mov
xchg
push
sbb
or
cmp
out
or
rol
idivl
stos
push
aad
xchg
ljmp
ror
sbb
xchg
and
lret
xchg
mov
loop
xchg
push
mov
aas
push
imul
sub
repnz
sbb
aaa
cltd
inc
ret
add
ljmp
test
adcl
cli
mov
add
adc
ret
add
bnd
mov
arpl
add
popa
sub
mov
sar
add
inc
sti
divb
xchg
stc
hlt
cmpsl
jge
jb
pop
push
adc
or
adc
dec
fcompl
adc
loopne
dec
daa
mov
movsb
xlat
or
mov
add
insl
pop
cltd
mov
push
sbb
jle
or
loope
out
and
and
idivl
mov
pop
lds
and
idivb
and
movsl
pop
xchg
jae
sub
jl
int3
enter
leave
iret
mov
lahf
inc
in
fimuls
push
and
push
xchg
shrb
sbb
xor
push
cmpsl
lret
mov
and
and
or
les
stos
out
jns
arpl
sub
mov
mov
add
cwtl
cmp
add
or
adc
or
add
dec
pop
xor
pop
roll
outsl
mov
ret
testb
mov
xorl
movsb
jp
in
es
movsl
adc
std
xlat
out
in
sbb
test
or
mov
sub
jge
mov
push
adc
adcb
push
loope
stos
and
mov
int3
loope
outsl
jecxz
insl
lds
out
xchg
lret
add
in
pop
push
mov
sbb
and
lds
xor
lock
push
mov
lret
adc
daa
or
and
xchg
fnsave
inc
push
jp
xlat
or
xchg
ret
xchg
ret
xor
xchg
mov
inc
out
and
popf
ja
mov
adc
fcoml
pop
adc
inc
and
cmp
int
loop
push
cmpsl
sbb
pop
fmul
les
pop
sbb
xchg
mov
and
rolb
ljmp
cs
punpcklwd
xchg
pop
js
push
pusha
jnp
mov
shrl
add
sbb
popa
pusha
scas
xchg
push
cmp
inc
dec
aam
sub
pusha
jp
scas
pop
bound
dec
fyl2xp1
and
and
data16
mov
pop
pop
out
divl
imul
lahf
mov
ret
cmpsl
test
out
or
mov
push
in
xchg
and
arpl
in
cld
push
or
mov
call
loop
jmp
sub
xor
mov
nop
aaa
mov
jge
cmp
push
repz
adc
insl
push
mov
test
push
sbb
imul
shl
pop
sub
mov
notl
cmpsb
repnz
sbb
and
int3
mov
xchg
jne
leave
in
sub
shll
sbb
cli
xchg
jmp
sub
mov
or
xchg
cmp
adc
stos
push
dec
push
xchg
xchg
fstpt
push
sbbl
sub
xor
arpl
xchg
loopne
movsb
xchg
fs
pop
and
mov
andl
cli
or
dec
pop
lret
aad
xchg
add
add
jp
fadd
mov
add
mov
sbb
add
or
mov
or
cli
jge
push
pop
inc
dec
aas
adc
outsb
js
into
fildl
and
push
fiadds
push
aas
in
subb
cli
pop
aam
fimull
mov
ficoms
dec
sbb
cli
cs
and
xchg
movsb
shll
stos
addr16
sbb
and
push
mov
lret
cld
mov
leave
bsr
cmc
push
xor
xlat
inc
bts
push
mov
sbb
inc
pop
outsl
jo
pop
jnp
or
fwait
repnz
xchg
mov
leave
xchg
movsb
cmp
mov
leave
push
lret
push
sbb
mov
mov
and
bndldx
adc
leave
push
adc
add
adc
sbb
test
loope
add
stc
lret
xor
sbb
repnz
ror
dec
call
dec
pop
cmp
mov
cltd
repnz
adc
fstl
xchg
or
mov
or
repnz
xlat
gs
cmpsb
popa
mov
add
or
dec
push
xlat
mov
dec
adc
adc
mov
and
insb
add
and
popa
in
push
jp
jbe
je
nop
jo
js
or
fs
push
pop
adc
push
and
inc
icebp
call
xor
cmpsl
daa
lods
mov
sbb
and
stos
xlat
frstor
loop
jne
jmp
mov
jne
ljmp
andb
add
repnz
mov
lods
fwait
adc
sbb
push
xlat
scas
lcall
inc
push
les
cwtl
sbb
call
pop
in
add
fwait
mov
sti
mov
mov
mov
flds
xchg
cmpsl
data16
clc
add
jp
pusha
sbb
lds
hlt
aas
lret
lcall
lret
call
lret
fists
pop
xor
nop
cmp
adc
lcall
adc
enter
push
pusha
jg
movsl
andl
push
in
aam
mov
sahf
jo
pushf
leave
mov
dec
mov
popa
sti
push
mov
das
sti
repz
movsl
leave
xlat
loopne
in
push
mov
or
adc
xor
cmp
subl
mov
mov
orl
fs
push
push
xchg
dec
cmpsb
dec
xor
xchg
add
and
dec
ret
cltd
mov
imul
xor
and
inc
pushf
fcoml
mov
dec
inc
and
xor
push
push
sahf
jecxz
sbb
test
add
lods
push
mov
jp
or
out
repnz
mov
iret
push
jge
push
adc
daa
imul
test
iret
cmpsl
cmp
jmp
jmp
inc
mov
mov
pushf
fldl
iretw
out
popa
lods
lahf
lock
aam
in
xorl
lods
test
sub
in
mov
orb
adc
push
cld
out
daa
lea
xor
in
mov
and
fld
inc
jbe
adc
in
and
clc
xor
fs
rcrl
daa
cmp
and
sub
dec
mov
fcoml
and
sbb
sub
push
sbb
fistpl
push
test
aad
push
test
lret
loopne
mov
js
or
or
loope
stc
pop
add
mov
pop
cmc
push
aad
cli
arpl
adc
xchg
sbbl
jg
movsl
push
pop
jge
mov
call
adc
pop
sub
pop
icebp
xor
mov
sub
clc
lods
mov
add
mov
outsb
aaa
test
push
ljmp
clc
dec
sub
or
out
mov
shll
dec
ret
adc
iret
and
jg
and
dec
mov
mov
sub
dec
aam
jg
adc
lods
notl
mov
sub
icebp
mov
out
dec
pusha
ds
fidivl
push
popa
cwtl
stc
jecxz
pushf
dec
test
popa
xchg
leave
sbb
lds
cmp
add
lret
pop
test
xchg
loope
push
into
or
je
popa
mov
mov
jno
shll
std
push
cmpsl
fnstsw
movsb
pop
ss
loopne
mov
mov
jb
jle
in
push
and
rol
int3
sbb
pop
mov
add
adc
adc
add
fldt
add
out
jnp
popf
mov
test
in
xor
and
fwait
insb
pushf
aas
inc
sbb
pop
iret
add
inc
or
addr16
mov
sub
decl
aad
cld
fs
inc
repz
adc
lods
rcrb
mov
lahf
iret
stos
gs
sbb
gs
imulb
sbb
dec
ss
cwtl
and
or
leave
and
and
sub
stos
loopne
mov
sub
inc
xchg
mov
mov
sub
and
arpl
scas
and
pop
pop
sub
cwtl
or
addl
push
repnz
dec
nop
mov
add
and
mov
push
jg
cltd
enter
lret
loope
lcall
jge
insb
add
jnp
add
adc
outsb
mov
xor
shrl
movsb
lea
in
pop
lods
or
add
xchg
mov
test
or
add
sub
daa
xorps
fisubl
mov
je
mov
jno
mul
pop
sbb
out
sub
sub
in
icebp
xchg
fwait
and
sub
and
aad
mov
mov
and
push
mov
icebp
sbb
rcrb
sub
inc
or
repnz
adc
mov
cwtl
push
test
scas
daa
aaa
jnp
fisttpl
jb
cmp
test
mov
lcall
adc
jp
fisttps
xchg
or
xchg
inc
insl
dec
mov
cli
test
loop
into
jb
mov
or
pop
inc
out
mov
sub
adc
movsb
add
mull
out
and
ljmp
or
xchg
xchg
ljmp
jne
sti
or
push
adc
out
mov
or
lret
out
not
mov
push
test
or
add
xor
adc
mov
adc
or
sub
push
or
jb
jmp
inc
mov
outsb
daa
idiv
in
ja
sub
pushf
jl
push
in
adc
sub
aam
in
loopne
xor
lea
sbb
push
int3
dec
jo
sbb
mov
sbb
or
mov
lock
inc
int3
and
ljmp
adcb
mov
pushf
outsb
cltd
cmp
sbb
inc
mov
mov
push
sbb
les
fisubl
repz
pop
in
pop
daa
pop
fstps
cmp
aas
cmp
loop
ljmp
jg
loop
dec
mov
cmp
inc
mov
inc
es
add
sbb
data16
mov
sub
js
or
cwtl
push
pop
jecxz,pn
add
insb
xchg
addr16
ja
lock
std
add
lea
sarl
leave
pop
xor
int3
loope
jmp
xchg
addr16
stos
mov
lahf
sbb
leave
jecxz
sbb
pusha
test
movsl
mov
ffreep
xchg
xchg
jo
mov
pop
lret
xchg
aas
lret
sahf
cltd
loope
mov
adcl
sub
push
leave
pop
inc
repnz
xor
pushf
add
cmpsb
mov
add
cltd
sbb
mov
sbb
or
cmp
movaps
pushf
fsub
add
loopne
enter
into
and
arpl
mov
xchg
cmp
dec
pop
testl
imul
jmp
jo
and
sbb
or
leave
mov
mov
xchg
pusha
mov
test
and
pop
lds
repz
pop
xchg
xchg
xchg
div
adc
mov
sbb
imul
sahf
or
pop
push
ljmp
rcrb
lcall
mov
out
xchg
inc
push
xchg
loopne
test
sub
mov
imul
sbb
sub
addr16
xchg
or
fdivr
add
pop
xchg
sahf
adc
jmp
aad
lret
add
mov
and
dec
stos
out
lcall
jecxz
push
movsl
xlat
loop
popa
scas
mov
or
loop
mov
jae
js
and
dec
dec
xchg
mov
and
popf
pop
iret
and
add
dec
ret
ja
cmp
and
sbb
notb
mov
push
loope
out
lret
push
mov
xchg
sbb
ss
sbb
pop
mov
xchg
xchg
lods
push
lret
jl
lods
out
cmp
incl
cwtl
ss
sbb
or
jbe
xchg
jp
aad
lret
xor
and
dec
dec
push
xlat
xchg
or
cmp
fstpl
lods
frstor
fnstsw
adc
mov
ljmp
sub
dec
push
js
iret
adc
sub
pop
lea
in
cmc
mov
sbb
push
add
aad
cwtl
lock
mov
cmpsl
add
addr16
inc
repnz
cmpsl
fidivrl
inc
mul
and
xchg
adc
inc
jp
sti
les
pop
jb
cmp
cmp
mov
jge
and
mov
cmc
adc
mov
test
pop
xchg
loopne
in
or
xor
sub
dec
or
or
push
cmpsl
inc
cmp
pop
aaa
repnz
push
adc
jp
dec
testl
push
rorl
mov
cmp
dec
sbb
inc
push
sub
xchg
or
fdiv
jnp
imul
aaa
mov
call
jmp
sub
xchg
cltd
in
mov
stos
adc
add
leave
fsincos
repnz
ret
leave
pop
cld
enter
mov
scas
or
popa
pop
arpl
cld
aam
fcompl
out
push
popf
xchg
mov
gs
push
and
sbb
loop
xchg
cmpsl
sub
and
sbb
push
cwtl
fildll
loop
mov
andb
test
jmp
stc
lret
movsb
dec
out
in
mov
sub
stos
js
dec
enter
out
cltd
sarb
add
cmpb
cltd
stos
mov
int
or
dec
leave
lret
jne
aaa
sub
pushf
xor
popf
int
les
push
sub
enter
dec
cltd
repnz
adc
adc
out
sbb
leave
sub
scas
cltd
bound
xor
sub
sbb
ds
inc
insb
cli
lcall
loopne
sub
mov
test
clc
cld
jge
mov
hlt
js
add
pop
iret
inc
mov
cmpsl
jmp
call
andl
or
dec
repnz
dec
out
lock
out
and
mov
imul
in
test
fisubl
inc
mov
sbb
stos
mov
out
or
pusha
mov
insb
or
dec
lods
or
in
das
push
hlt
push
sub
xor
jmp
mov
repz
std
inc
add
push
lret
rorl
repnz
enter
jne
loopne
inc
push
clc
insb
push
insl
add
outsb
test
stc
arpl
leave
push
sar
je
stc
lret
ficomps
mov
lcall
bound
mov
mov
jne
pushl
sub
sahf
inc
sar
xor
adc
in
shlb
mov
push
repnz
std
js
and
fsubs
xchg
inc
imul
push
fsubrs
test
pop
mov
movsb
cltd
jns
arpl
sub
sahf
clc
cmp
cld
aam
fdivrs
fisubs
std
jnp
jge
lret
cmp
adc
sbb
add
pop
iret
or
fs
mov
fs
sub
adc
or
push
pusha
jmp
lea
mov
fpatan
aam
pusha
pop
fs
pop
xor
mov
sbb
es
repz
push
popf
dec
imul
cli
lds
pop
frstor
and
fwait
sbb
xor
shlb
cmc
xor
adc
mov
jecxz
fs
repz
hlt
sahf
cmpsl
int3
shl
jl
frstor
sub
pop
xlat
sbb
sub
call
decb
push
dec
fs
adc
mov
ret
cltd
dec
jmp
pop
andb
push
sub
ret
pushf
jecxz
and
mov
jnp
sbb
add
in
mov
pop
out
pusha
lock
cltd
xor
out
or
fcmovne
adc
sbb
in
loopne
and
out
test
jo
xor
mov
fwait
and
cltd
xchg
push
iret
or
sti
cmc
pop
repnz
in
lock
mov
cmc
out
call
xor
shr
sbb
mov
enter
mov
dec
push
pushf
and
sub
lea
aaa
negb
sbb
loope
sbb
and
jo
adc
icebp
mov
cmpsl
les
int
push
cli
fwait
jp
push
mov
or
in
pop
add
out
fs
sar
inc
xor
jae
call
in
or
push
icebp
aaa
repnz
rorb
sbb
mov
aam
xor
inc
sbb
lea
add
mov
addr16
test
jl
loop
in
lods
xchg
test
jmp
fidivl
push
add
push
mov
mov
push
outsl
loopne
pop
xchg
scas
xor
insl
out
repz
or
test
notb
cmpsl
jl
sbb
mov
pop
mov
sub
out
aam
adc
and
jge
inc
xor
mov
and
out
push
adc
dec
push
add
test
add
les
aas
mov
stos
xchg
bound
dec
adc
dec
in
push
ja
sbb
sbb
ljmp
addr16
pop
popf
lock
scas
adc
int
daa
add
dec
testl
pop
clc
shlb
or
sarb
lret
jns
sbb
mov
dec
xchg
mov
adc
inc
or
movsb
or
aam
push
cmpsb
inc
xchg
pop
addr16
fsub
in
cld
lods
cmp
push
add
mov
cli
push
pop
sub
add
pushf
pusha
jmp
mov
push
mov
inc
test
and
jo
iret
mov
cmovle
jecxz
mov
shll
rcrl
les
or
test
shl
outsb
bndstx
incb
adc
mov
xor
push
shl
out
dec
test
imul
jp
add
sub
jl
cmpsb
or
testl
sbb
push
xchg
sub
jecxz
stos
mov
push
sub
and
outsl
je
adc
mov
ljmp
test
fs
call
popa
inc
enter
pop
push
fmuls
pop
mov
popf
idivl
pop
add
sub
enter
pushf
pop
and
sbb
cld
pusha
sub
sub
mov
movsb
jno
mov
mov
inc
outsl
cwtl
lahf
add
dec
loope
es
test
out
push
adc
leave
je
and
into
jmp
cmc
fmulp
int3
push
div
das
pop
and
cs
xor
cmpsl
es
lock
or
jecxz
negl
loopne
iret
add
inc
stos
dec
jge
add
aad
hlt
ljmp
mov
pop
lcall
cmpsb
out
out
pop
hlt
stc
imulb
fsin
sbb
out
cmp
inc
adc
dec
outsb
stos
sub
lock
inc
cli
pop
cli
mov
nop
outsl
push
movsl
mov
add
int
cmpsl
out
repnz
sbb
into
sbb
mov
push
add
mov
stos
mov
mov
lcall
push
pop
sub
mov
sbb
mov
aaa
daa
jne
xlat
mov
add
pop
pop
sti
push
lods
push
iret
pop
cmp
jge
mov
testb
or
and
mov
iret
fs
xchg
stos
xchg
ds
inc
insb
adc
jno
or
xor
push
cld
sub
shlb
sbb
dec
and
sbb
lcall
xchg
and
orb
mov
loop
jl
out
adc
stc
cwtl
ss
push
jns
push
aaa
fdivrl
pop
adc
mov
dec
je
add
aad
stc
pop
xor
inc
lds
ret
sar
sbbl
add
mov
pop
pop
cmp
sub
add
jecxz
aaa
into
pusha
add
mov
xchg
adc
cld
sbb
ljmp
mov
stos
sbb
test
sub
ret
pop
mov
int3
and
sti
out
sbb
popf
inc
fcoms
and
add
ljmp
xor
and
adc
mov
popa
ret
cmp
scas
push
aad
dec
and
push
mov
pop
xchg
sbb
mov
fs
push
jmp
out
shrl
cmpsb
add
sti
and
std
movsl
test
les
xchg
or
mov
ds
sbb
mov
mov
sti
ja
in
nop
mov
mov
cwtl
clc
or
stos
xlat
push
into
add
mov
outsb
movsl
leave
lea
cltd
xlat
and
sub
das
mov
push
push
repnz
imul
sbb
mov
fldl
cs
fcompl
movsb
imul
test
lds
or
mov
sbb
popa
mov
and
inc
cs
jb
xchg
or
ljmp
fistps
add
mov
dec
arpl
xchg
in
cwtl
cs
push
and
cmpsb
cwtl
enter
test
test
orb
mov
jno
ficomps
cmpsl
jge
sub
pusha
jge
sub
iret
push
mov
repz
orl
sarl
dec
call
fwait
jmp
xchg
ret
cld
test
pop
xchg
pusha
mov
xlat
decb
lret
add
or
lcall
test
pop
fmull
cmpsb
mov
loopne
mov
movsb
push
les
stc
stos
lock
and
jno
insb
jb
jne
jle
aam
repz
or
inc
repnz
jne
outsw
pusha
lock
lret
lret
loop
sbb
xor
sahf
repnz
sub
imul
popa
fwait
incb
ljmp
dec
cmp
mov
xchg
jmp
and
and
xlat
test
pop
adc
jb
push
xchg
mov
loope
add
dec
and
push
jae
jo
sub
test
popa
movsb
inc
pop
and
or
inc
cmp
pusha
test
mov
push
dec
push
cmp
add
jne
and
inc
push
xchg
iret
scas
mov
and
mov
aas
fdivr
movsb
je
in
mov
mov
mov
and
xor
mov
lods
inc
dec
fimull
or
xchg
mov
lock
xor
ss
inc
jno
inc
mov
sub
stc
cwtl
add
aaa
movsb
push
das
js
iret
scas
rorl
jmp
mov
push
sub
sbb
mov
sbb
imul
cli
lret
scas
pop
test
in
loopnew
sub
insl
xchg
pop
or
mov
cmp
or
bound
cwtl
fmull
movl
test
fsubr
pop
cmp
ljmp
in
xchg
enter
push
or
lcall
xchg
andb
lea
adc
dec
loopne
arpl
sub
into
jns
or
dec
ljmp
xlat
test
sbb
mov
pop
ds
loope
cmpsl
sbb
sbb
mov
lock
inc
stos
stos
push
incl
pop
and
into
mov
das
scas
lret
sub
push
sub
pop
mov
call
sbb
ljmp
push
mov
int3
call
xor
xchg
mov
shl
mov
mov
out
js
lea
fdivs
mov
lea
and
mov
lret
sub
mov
test
iret
jmp
movsb
dec
mov
lret
orb
js
stc
dec
jmp
jecxz
icebp
hlt
xor
jo
mov
lret
loope
pop
sbb
or
jbe
and
dec
mov
test
lock
jmp
in
mov
lcall
enterw
imul
insb
mov
scas
and
loope
mov
in
pusha
mov
les
test
lea
repz
sbb
lea
int
sub
xor
sub
xchg
mov
nop
pop
lcall
sub
daa
sbb
adc
mull
clc
pop
xlat
mov
push
mov
faddl
test
add
stos
mull
inc
or
xor
sbb
test
das
sub
int3
imul
sub
cmp
leave
fisubrl
enter
pop
mov
mov
push
add
fsubs
pusha
sbb
push
mov
test
int
jg
or
and
scas
inc
dec
jp
or
loope
rol
iret
fldcw
test
pop
test
cli
les
and
sub
sub
sbb
leave
sbb
lret
and
mov
addr16
mov
std
je
daa
cmp
jo
xchg
xor
imul
int3
test
repnz
ficompl
xchg
sbb
and
pop
add
aaa
outsb
and
mov
aam
loopne
dec
filds
dec
add
xlat
inc
lea
iret
adc
lret
lret
adc
cwtl
xchg
loopne
repnz
lret
push
sub
fadds
push
divps
push
loope
movsb
call
repnz
xor
rep
nop
xlat
adc
or
cmpsl
mov
pusha
push
pop
dec
fdiv
sub
out
pop
fldcw
andb
outsl
imul
push
xchg
and
push
ljmp
pop
cmpsl
jae
mulb
cmpsl
lea
jl
jl
js
repnz
jg
frstor
sbb
sti
in
negl
sub
xchg
stos
add
sbb
sbb
sub
xchg
mov
imul
shll
mov
mov
pavgb
mov
das
leave
lcall
pop
or
xor
subb
outsl
and
push
sub
or
mov
pop
dec
test
and
pop
xchg
sbb
adc
inc
les
mov
mov
fadds
add
adc
dec
add
lret
adc
adc
ds
sub
das
pop
mov
adc
andb
sub
movsb
cmp
cmp
std
jb
int3
pop
cmp
push
mov
or
imul
lds
xor
insl
add
sbb
movsb
ret
sbb
pushf
dec
push
mov
fcmove
in
add
mov
add
ficomps
iret
sub
ret
dec
jae
pushf
xor
and
cli
and
or
sub
and
jnp
in
mov
sub
and
ficoml
mov
ret
decl
xchg
jmp
cld
loopne
mov
and
movsb
mov
mov
out
mov
jo
xlat
sub
inc
arpl
loop
out
dec
and
add
inc
push
out
jns
pop
push
sub
mov
and
mull
int
hlt
xor
jb
push
movsb
popf
scas
sub
inc
dec
insb
adc
mov
sbbl
sub
ds
cmpsb
ret
pop
fs
outsb
call
inc
andl
xchg
aad
lcall
mov
nop
inc
scas
jb
or
pop
mov
scas
ret
mov
lea
mov
cmp
and
jl
mov
and
adc
push
cmp
arpl
ja
xlat
lret
sti
iret
mov
aad
lret
mov
insl
jecxz
ret
cmpsb
jl
jo
aad
adc
addl
data16
stc
and
daa
or
inc
clc
cli
movsb
jecxz
push
sub
mov
sub
pop
cs
fwait
mulb
add
xor
imul
xchg
or
das
add
arpl
leavew
dec
xchg
repnz
push
roll
loopne
push
add
cwtl
sub
dec
std
inc
cmpsb
sbb
xchg
aaa
call
add
jmp
cmp
fisubs
addr16
pop
mov
sub
xchg
mov
add
inc
sbb
cld
in
push
push
push
jno
jns
clc
mov
pop
inc
aas
hlt
and
cli
call
mov
sub
aaa
adc
mov
cli
or
sbb
adc
out
add
mov
jb
cltd
push
push
cltd
and
cwtl
imull
mov
mov
pop
inc
outsb
es
movsl
loopne
sub
ljmp
and
arpl
out
leave
lret
sbb
shrl
and
or
pop
inc
in
jo
es
sbb
and
iret
and
test
or
insl
sub
xchg
xor
popa
sub
jmp
nop
and
mov
sub
arpl
sub
sbb
mov
mov
fdiv
pop
inc
lahf
and
in
fcoml
call
std
mov
loope
mov
ljmp
mov
sbb
mov
lock
outsl
arpl
je
pop
es
jb
cmp
int
mov
inc
and
lods
bound
mov
mov
in
imul
lret
gs
xor
bnd
sub
bound
sahf
xchg
call
hlt
or
sbb
mov
sub
jecxz
enter
call
mov
pop
fwait
sbbb
cwtl
xor
fcmovne
sub
sbb
inc
scas
pop
dec
and
mov
stos
cmpsb
repnz
fcoml
add
test
pop
scas
sbb
and
iret
daa
push
bnd
sarb
sbb
bound
lds
cli
ficomps
jge
or
test
jl
test
or
push
mov
add
outsb
les
jmp
xchg
mov
sub
inc
movsb
mov
sbb
dec
add
xor
dec
jmp
dec
lods
dec
loopne
pop
sbb
adc
pop
jmp
adc
pop
fucomip
pop
pop
loopne
mov
in
add
sub
mov
inc
pop
xchg
repnz
sub
pop
imul
call
inc
cmpsb
sub
and
sub
dec
data16
out
xor
dec
shrb
push
out
mov
pop
ljmp
int3
ds
movsl
pop
fwait
das
out
inc
ja
pop
mov
add
sti
adc
mov
and
dec
or
mov
sbb
lds
shlb
or
push
mov
int
or
pop
jle
fwait
shlb
pop
lods
pushf
imul
pop
mov
xchg
fisttpll
xchg
in
pop
xor
jae
aam
pop
nop
cltd
movsl
iret
lods
push
jl
jmp
sbb
and
sahf
mov
mov
jae
out
out
sub
mov
in
call
out
adc
mov
mov
lods
int3
test
out
in
insl
jmp
xor
ljmp
push
or
fimull
and
sub
or
loop
lea
lea
xchg
sbb
sti
jbe
or
fldcw
dec
ja
xchg
dec
std
pop
nop
mov
push
sbb
lret
lods
sub
js
sub
mov
lods
shlb
dec
cmp
subl
dec
dec
in
mov
ljmp
sbb
outsl
inc
xchg
insl
test
loop
sbb
pusha
mov
sarb
hlt
xchg
lret
repnz
jno
ljmp
adc
jo
sub
in
jnp
outsl
mov
jle
mov
xchg
lret
bound
ret
xor
imul
mov
adc
inc
addr16
pop
jb
sub
std
addr16
xchg
xor
cmp
addb
daa
add
movsl
sub
aam
inc
adc
cmpsl
mov
pop
in
jge
call
insb
insl
push
mov
inc
push
sub
and
xchg
adcl
leave
ljmp
mov
sbb
cwtl
inc
in
sbb
add
mov
pop
pop
sub
loop
in
lcall
xchg
mov
add
int
fmul
xchg
mov
and
mov
and
loop
in
or
inc
mov
xchg
rcrb
ljmp
inc
loopne
mov
sbb
and
sub
jp
iret
pop
ret
lahf
pop
insl
lds
fiadds
xchg
out
sbb
pop
adc
out
pop
cmpsl
rorl
xchg
pop
add
mov
fcoms
inc
push
and
or
ja
push
cli
inc
addr16
mov
and
out
or
sti
repnz
popa
inc
les
mov
lds
mov
cwtl
pop
mov
faddl
stos
mov
mov
faddl
imul
nop
mov
shl
sahf
lcall
jns
ljmp
mov
popf
lds
adc
fwait
stc
cltd
jp
lds
sbb
pop
fwait
in
xchg
movsb
pop
sub
adcb
pop
add
mov
adc
bound
push
cwtl
arpl
test
lock
dec
dec
es
and
pop
xchg
add
aas
or
dec
ficoml
andl
sub
inc
pop
mov
pop
add
jp
mov
loope
or
xor
push
inc
mov
repnz
insl
lods
ret
sti
inc
ds
jle
pusha
inc
mov
mov
sbb
shlb
add
and
and
movsb
add
pop
sbb
or
cmp
xchg
dec
ficoml
shr
sbb
les
aas
cmp
jle
cwtl
sub
call
loop
out
movsb
add
test
sub
mov
stos
sbb
jmp
mov
in
in
and
mov
jecxz
dec
pop
mov
mov
test
enter
add
or
adc
mov
leave
mov
gs
xor
and
rclb
aam
stc
fcomps
xchg
mov
stc
enter
and
and
cmpl
fcoml
jo
and
stos
aas
lock
dec
fsubp
stos
mov
xchg
cld
push
out
lods
adc
fistl
js
test
fstpt
xor
mov
mov
jmp
pop
stos
sub
and
mov
inc
adc
repnz
sti
dec
outsl
enter
push
mov
pop
lcall
push
lret
sbb
cmpsl
jno
data16
je
push
sbb
inc
lret
pop
dec
sub
lahf
mov
add
bnd
sbb
cwtl
dec
pop
enter
ljmp
and
test
jo
test
jno
int
incb
adc
gs
add
push
xchg
adc
xchg
cmp
mov
pop
inc
jmp
and
mov
fisubl
lods
out
cs
pop
jmp
aam
xchg
or
ss
sbb
loop
aam
xchg
ret
dec
das
jmp
inc
sub
cmpsb
les
fwait
sub
and
sub
mov
out
cmp
icebp
xchg
and
stos
sbb
stc
pop
jb
adc
stc
stos
adc
stos
mov
pop
sub
and
push
sub
stos
pop
or
repnz
pushf
sub
addr16
sub
in
jmp
inc
inc
movsl
in
xor
stos
push
pop
stos
insl
div
adc
js
popf
add
sbb
or
lret
mov
lods
movb
pop
aad
sub
fmuls
and
sbb
fwait
push
dec
stos
fstpl
loopne
sub
cli
adc
in
adc
stos
sub
or
cs
sub
leave
lock
jno
cltd
mov
xchg
popf
pop
push
xchg
xor
data16
push
mov
leave
dec
lods
ret
mov
dec
les
sbb
push
jmp
inc
or
loopne
sbbb
jmp
loop
or
push
aam
test
lea
inc
jne
jmp
inc
insl
add
or
test
jle
dec
cmp
cmp
std
push
subb
inc
and
push
loopne
or
sub
shrb
mov
lahf
push
pop
and
aas
mov
and
shll
orb
push
xchg
fs
adc
jb
or
adc
adc
in
adc
push
dec
adc
mov
push
in
sbb
mov
lods
lods
push
test
mov
icebp
or
shl
sahf
mov
inc
or
push
aam
insl
cmpsb
popf
repnz
stc
push
sbb
inc
or
cmp
sub
fs
cmp
mov
add
pop
xchg
popa
cs
lahf
outsl
sbb
mov
jmp
fldcw
push
cmp
mov
push
negl
mov
or
push
loop
stos
xchg
pop
sub
je
call
fs
or
scas
cmp
mov
inc
push
mov
repnz
or
inc
add
stc
sub
or
outsb
xchg
inc
cli
mov
aam
jno
mov
jmp
mov
mov
push
movsb
push
jmp
je
adc
dec
addl
sbb
jmp
test
cmp
cmp
push
cmc
and
leave
xor
sub
cmc
ds
or
add
aam
fbld
xor
cmp
inc
push
pop
fisttpll
ss
or
xchg
call
push
rcrl
jb
rcll
sbb
nop
jl
addr16
sbb
cmp
push
push
sbb
or
xorl
add
movsb
iret
aaa
and
adc
xor
and
jae
out
xlat
adc
sahf
jno
xchg
cmpb
adc
or
cmp
pmaxub
jmp
add
es
and
mov
arpl
cwtl
pop
and
call
cmpsb
test
repnz
leave
jno
ret
adc
xchg
std
sub
iret
jmp
add
sub
lods
dec
sbb
aad
mov
xchg
jmp
add
pop
dec
pop
and
jmp
mov
subb
cmp
lods
fwait
ljmp
jmp
and
xlat
or
out
mov
push
mov
inc
fwait
ror
shlb
cltd
sub
outsb
aas
and
or
repz
nop
fs
xchg
mov
mov
outsl
lcall
insl
sbb
loope
sbb
bound
mov
xchg
clc
out
loope
jo
int3
popa
ljmp
xor
push
movsb
pop
or
push
sbb
mov
stc
fsubrp
in
xchg
adc
in
push
enter
cld
lret
push
adc
mov
enter
xor
iret
xchg
stos
sub
sbb
pop
mov
sbb
push
dec
push
dec
sbb
or
mov
mov
stos
sub
or
scas
stc
mov
adc
lahf
test
xchg
lds
ljmp
adc
xchg
stos
adc
or
stos
out
icebp
mov
ret
mov
and
xor
and
ret
mov
movsb
xor
mov
js
stos
mov
cmpsb
xchg
movsl
pop
test
push
push
push
fdiv
mov
fsub
push
loope
fs
rcl
loopne
sbb
in
in
and
xchg
sub
aam
mov
mov
adc
cltd
jge
and
sbb
or
cmc
arpl
or
cmp
stos
popf
and
fsubrs
sti
mov
insb
hlt
sahf
pop
stc
arpl
jo
mov
bound
test
sub
sbb
sub
xlat
dec
push
test
mov
aam
ljmp
pop
sub
jae
and
out
dec
lret
xchg
mov
fld
mov
push
mov
xor
shll
inc
or
and
jp
je
pop
and
xchg
or
pop
clc
or
in
pop
pop
sbb
enter
js
adc
xchg
xor
inc
lahf
stos
fildll
dec
adc
lods
adc
bound
iret
ret
mov
jae
inc
out
in
ja
fucomi
sbb
xchg
outsb
inc
lcall
lods
in
arpl
or
insb
ret
mov
cltd
jmp
sbb
mov
sub
sub
pusha
push
mov
dec
pop
add
xor
fisubs
pop
xor
hlt
mov
mov
jae
or
jecxz
test
int
mov
cwtl
pop
ficomps
xlat
cmp
cli
xor
out
rcrl
pusha
adc
andb
mov
cmp
pop
cmp
movsb
xchg
pop
inc
and
xor
lea
aad
xchg
push
icebp
negl
lret
and
mov
scas
jns
sub
fildl
sub
popf
icebp
gs
pusha
lods
xor
mov
push
pop
sbb
shrb
push
das
lds
mov
bound
test
or
ret
mov
pop
add
adc
loop
sub
dec
popa
add
add
gs
aam
in
sbb
mov
in
cmpsb
sbb
dec
lar
sbb
dec
push
cltd
sbb
push
in
negl
xchg
incb
mov
xchg
xor
mov
out
shll
push
jb
out
aad
xor
push
aam
les
cwtl
pushf
xlat
mov
out
cmpsb
les
jb
inc
add
jecxz
int
insl
dec
xchg
push
or
and
ljmp
mov
push
mov
sbb
dec
pop
or
or
mov
lret
repnz
fistps
fcmovnb
pusha
jecxz
and
in
aad
adc
fsubrl
in
fs
popa
mov
adc
scas
in
push
es
outsb
push
aas
cmpsl
adc
xchg
sub
inc
mov
adc
loope
rcr
imul
adc
movsl
mov
mov
addr16
imul
int
lret
ljmp
stc
add
pop
lret
xor
sub
ljmp
ret
mov
cmp
sub
insb
pop
cmp
pop
mov
sub
inc
sahf
push
and
dec
xchg
scas
bound
or
fldenv
sahf
ljmp
jge
push
sub
cli
jno
fcomps
mov
test
inc
nop
sbb
jne
sub
sahf
insl
lods
pushf
mov
inc
jmp
lea
outsl
or
es
jge
idivl
into
inc
mov
inc
pop
lcall
sub
mov
inc
daa
sbb
insl
jo
rolb
clc
outsl
xchg
clc
sbb
dec
daa
xchg
lret
shrb
sbb
dec
lods
sbb
lcall
push
mov
movsb
fsubl
sbb
repnz
mov
mov
fs
push
push
sti
fsubrl
sbb
popa
mov
mov
fiadds
in
loop
dec
testl
inc
stc
aam
mov
and
inc
int
push
fistl
jno
arpl
out
jo
icebp
jo
xor
mull
cmp
xchg
inc
dec
dec
sti
jae
adc
and
fmul
dec
mov
loope
add
inc
mov
jo
sbb
cli
in
out
out
pop
test
fnstenv
xchg
test
scas
jle
jecxz
stos
add
sbb
lret
imul
jge
jbe
jmp
mov
lret
dec
and
cmp
and
lret
ret
push
movsb
shll
or
mov
rolb
sbb
das
pop
clc
inc
test
es
and
into
jmp
fwait
shrl
xchg
xor
push
aas
out
stos
xor
mov
xor
cmc
cmpsb
pop
mov
pop
cltd
je
insb
rcrb
add
jge
lods
jp
mov
cwtl
adc
jl
mov
jmp
mov
pop
xchg
cmp
test
ror
jmp
cmp
orl
or
mov
lcall
out
or
sbb
int
rcrb
add
out
sahf
loopne
mov
test
cli
cmp
aas
out
and
mov
ljmp
mov
lret
andb
sbb
aam
xchg
sbb
lret
jle
cmp
repz
pusha
cmp
and
push
repnz
dec
insl
iret
push
push
and
in
repnz
xlat
icebp
jg
test
cmp
dec
lcall
jns
leave
popa
adc
bnd
or
leave
flds
orb
scas
sbb
sub
lret
mov
sbb
pop
or
stos
lds
push
je
ret
xchg
push
pop
loopne
sub
xchg
call
push
lcall
cmp
stos
cmp
and
in
jae
stos
mov
add
pop
loopne
pusha
jnp
lret
decb
loope
nop
shlb
xchg
cld
sbb
lock
enter
cld
test
mov
jge
imul
push
div
add
sub
imul
pop
out
push
cmp
out
test
repnz
and
mov
outsl
mov
sub
mov
and
fidivl
or
repz
fistl
decb
adc
mov
loopne
sub
fisubrl
cwtl
and
rclb
mov
loop
cwtl
sbb
sub
lahf
imul
jl
in
daa
sub
mov
mov
scas
adc
hlt
jne
in
arpl
dec
lods
fcomip
or
pop
dec
add
mov
or
loopne
test
idivb
sbb
push
inc
rorb
xchg
shll
adc
add
repnz
in
dec
inc
aad
inc
jecxz
lret
pop
or
aad
out
in
cmpsb
shll
iret
divl
sbb
in
cmc
in
push
mov
mov
dec
sbb
xor
test
fwait
pop
incb
sbb
mov
sahf
into
insl
sbbb
sub
cmp
ret
add
jmp
xchg
push
icebp
jg
ja
insl
fwait
push
lcall
mov
fs
enter
stos
pop
cli
lret
pop
out
repnz
out
repnz
jb
les
push
pusha
repnz
sub
jp
nop
jle
loop
mov
push
mov
cwtl
ja
mov
sub
jle
imul
mov
cmp
lock
aam
daa
mov
ljmp
cmpsl
mov
lods
ror
and
adc
pop
out
sub
jo
or
push
or
repnz
pop
sub
mov
ret
adc
pop
mov
push
test
sub
xchg
iret
xchg
jmp
adc
aaa
and
pop
or
adc
roll
push
mov
es
mov
repnz
pop
loopne
lret
mov
cmp
xchg
pop
jge
fmuls
sub
cli
hlt
adc
pushf
icebp
out
sub
sub
mov
mov
loopne
or
jp
stos
or
cli
dec
cmp
fs
mov
jmp
push
pusha
adc
and
sbb
pop
imul
sub
ljmp
dec
std
scas
cmp
sub
aaa
jmp
push
add
inc
out
sbb
dec
mov
gs
aam
push
mov
in
dec
negl
xchg
push
inc
mulb
mov
and
mov
jp
in
push
and
repz
js
into
xlat
test
arpl
loop
xor
add
xor
sub
push
and
and
sbb
push
xchg
mov
dec
outsl
hlt
pop
faddl
test
sbb
pusha
sbb
and
pop
cmp
pop
ret
sub
lcall
cwtl
popf
out
shll
sbb
mov
loope
push
inc
add
or
bnd
das
pop
icebp
sbb
fldenv
imul
mov
sub
data16
popa
xlat
popf
xor
js
xor
daa
movsb
repnz
jecxz
cmp
inc
jp
movsl
cmpsl
cmp
shrl
stos
sbb
inc
mov
int3
test
sbb
lea
push
in
jmp
cwtl
icebp
dec
iret
pop
xchg
sti
rol
pushf
dec
out
and
xchg
into
and
movsb
xchg
cmpl
out
ljmp
inc
lcall
push
pop
sahf
or
sub
lds
loope
fcoms
dec
cld
sbb
xchg
popf
add
or
mov
or
mov
dec
ljmp
xor
fisttpll
leave
sbb
inc
adc
js
or
sub
int3
imul
pop
mov
test
fistl
or
cmpb
lret
lret
repnz
mov
out
pop
ret
stc
and
jecxz
lret
add
iret
loop
xor
mov
sti
testl
std
movsb
or
and
xchg
sahf
and
movl
bound
daa
fcmove
and
lahf
aad
mov
test
inc
aas
push
imul
jmp
jge
test
clc
jmp
dec
test
enter
or
cmpsb
pop
cmpsl
and
sbb
push
adc
fiaddl
hlt
pop
jle
dec
in
jmp
je
xchg
test
aas
ja
and
andb
push
imul
mov
popf
jl
std
sub
aaa
pushf
adcb
cmp
insb
imul
insb
testl
repnz
testb
aam
mov
pop
repnz
mov
inc
cltd
gs
sub
mov
sub
mov
sub
dec
dec
imul
adc
out
cwtl
mov
stos
popa
fucom
cmp
pop
out
pop
bound
xchg
sbb
pop
push
out
cwtl
pop
into
cs
jno
je
xchg
and
cmp
pop
inc
jnp
jle
iret
lret
rorl
mov
sbb
sub
lods
in
mov
cmp
int
mov
or
icebp
pop
and
stos
sub
sbb
mov
pop
sbb
movsb
inc
leave
inc
pop
fs
cmpl
mov
pop
jl
arpl
pop
jae
dec
mov
mov
repnz
aad
cld
sti
sbb
mov
or
lods
arpl
test
cmp
xchg
push
sub
push
push
xchg
loop
xchg
or
cmp
mov
or
push
push
jnp
xchg
push
add
lea
jno
inc
adc
cwtl
daa
pop
and
xchg
xlat
fdivr
fstl
add
lods
push
or
and
add
mov
jl
jmp
insl
stc
sbb
and
xchg
aad
fmuls
sarl
sub
sub
out
sbbb
in
fst
movsl
push
inc
push
sbb
push
test
or
xlat
addr16
sti
inc
orl
xchg
pop
scas
pop
mov
lcall
sbb
clc
out
stos
xchg
xchg
mov
dec
cltd
pop
sbb
sbb
ljmp
adc
or
pusha
es
push
into
shrl
hlt
and
pop
pop
sub
adc
cmc
jecxz
rclb
xor
add
bound
xchg
dec
out
sti
jl
xor
icebp
sub
push
dec
mov
cmp
in
inc
sar
pop
jns
mov
or
repnz
dec
es
inc
stos
push
ja
or
ljmp
push
or
out
mov
inc
aam
fiaddl
outsl
loope
pop
adc
pop
cli
or
inc
lret
imul
imul
adc
and
cmp
cwtl
dec
outsb
push
sub
cmp
test
sub
fs
addb
jge
lds
inc
repnz
jo
aas
lods
mov
hlt
int
test
popf
or
pop
pop
mov
jle
push
add
cmp
repnz
jnp
and
fs
repnz
sbb
and
call
inc
pop
mov
cli
lods
cmpsl
arpl
das
loope
jl
jo
lret
mov
mov
insl
in
outsb
cmp
ret
daa
pop
push
xchg
xchg
shr
ret
aam
insl
mov
sbb
xchg
jl
push
inc
sti
pop
lods
fnsetpm(287
call
imul
in
push
mov
es
mov
adc
addb
daa
or
adc
inc
sbb
cld
enter
les
mov
mov
dec
or
dec
jbe
fs
arpl
bound
loope
jp
in
sbb
dec
in
mov
sub
sbb
aad
mov
cmp
dec
stos
sbb
lea
push
ss
add
imulb
lods
inc
push
iret
fisubrl
sub
cmp
sub
mov
not
das
mov
sub
sub
cmp
sub
icebp
adc
and
stos
fs
inc
mov
sub
mov
in
cli
sub
rcrl
movsb
or
or
push
repnz
jmp
sbb
ficompl
add
cltd
cmp
xchg
inc
fcmovu
es
push
jo
stos
out
sub
xchg
mov
and
daa
sbb
insl
and
push
je
addr16
cli
mov
mov
lahf
xchg
outsl
sbb
lcall
or
test
inc
jle
adc
xor
int
out
xacquire
repz
xchg
mov
and
or
pop
notl
pop
mov
icebp
in
aaa
insb
aad
adc
in
test
imul
add
and
repz
ficomps
add
nop
dec
mov
push
sub
fwait
shll
nop
add
xor
fistps
xchg
dec
inc
jno
sub
int3
push
sbb
int
stc
cs
cmp
aas
sbb
testl
jo
gs
lcall
push
roll
push
xchg
popf
test
cmpb
xchg
and
dec
sbb
jo
adc
add
repnz
jae
add
stos
jle
mov
push
inc
lea
das
jo
aad
mov
cmp
mov
cld
mov
sbb
sbb
cmp
push
or
add
dec
cmpsl
sbb
xchg
fiadds
mov
addr16
ret
push
mov
adc
and
iret
sub
and
pop
inc
jp
imul
scas
data16
cmpsl
lret
clc
fs
inc
xchg
xchg
shll
cli
loopne
leave
inc
cmpsl
mov
fwait
mov
sub
dec
loopne
std
mov
mov
sbb
gs
dec
jnp
sbb
clc
xchg
lret
aam
ret
cltd
push
xor
addr16
and
test
ret
adc
in
in
cmp
or
and
pusha
lds
mov
nop
rclb
adc
cwtl
or
vmwrite
mov
shll
rcll
add
pop
repnz
push
loopne
iret
mov
jnp
mov
sub
daa
stos
push
or
mov
aad
sub
pop
imulb
xchg
int
sti
xchg
jno
std
loopne
or
sub
sub
xor
dec
ljmp
xchg
sbb
cmpsl
hlt
repnz
inc
and
add
inc
xor
ret
inc
int
fwait
push
in
xchg
sbb
sbb
cmp
and
lcall
xchg
cmp
aam
addr16
scas
sub
insl
xchg
fs
aas
mov
daa
scas
xchg
mov
inc
push
mov
insb
scas
int
and
and
lods
mov
clc
or
jge
aad
test
insb
inc
sub
fildll
inc
mov
clc
int3
mov
push
iret
in
xchg
pop
repz
shlb
inc
loop
adcb
or
inc
sub
push
movsb
fcmovu
test
inc
xchg
sbb
mov
xlat
mov
cmpsl
dec
lahf
cmpsl
cmpsb
enter
insb
rcr
and
jmp
or
shrl
xchg
add
ds
pop
xor
hlt
pop
inc
stc
dec
push
add
pop
sub
bound
out
push
xchg
test
int3
mov
addr16
dec
loopne
jl
call
fcoml
or
push
jo
add
push
mov
cld
sbb
jo
in
adc
iret
sahf
cwtl
or
mov
pop
xchg
movsl
outsb
rorb
mov
push
pop
insb
adc
push
jb
shll
or
sbb
push
fldt
push
ljmp
sub
add
lret
jae
pop
sub
cmp
cmp
and
pop
xchg
jge
xchg
inc
jb
jbe
rcll
push
sub
jne
cltd
inc
adc
mov
add
pop
negb
and
add
fsubr
mov
stos
ret
xor
dec
mov
jp
cwtl
lds
lcall
jo
sub
iret
test
sahf
aam
int
push
sub
fwait
dec
pop
stos
cli
lock
ss
xor
inc
pop
hlt
push
nop
mov
mov
clc
mov
lods
and
popa
xchg
adc
dec
cmp
pop
sub
loop
js
xorl
or
mov
push
in
enter
pop
mov
lcall
int
adc
lret
pop
arpl
int
pop
jns
adc
mov
call
stos
arpl
lods
jl
push
adc
sub
sti
pop
sbbl
or
fldenv
movsl
cmp
push
adc
inc
add
nop
das
loope
sti
pop
or
mov
sti
push
push
test
daa
mov
add
aaa
xchg
mov
dec
sub
addr16
ss
lcall
aad
lahf
lcall
mov
cmp
jo
rcl
xchg
out
aam
mov
and
xor
adc
push
pop
sub
insl
pop
cmp
cmpsl
or
int
fwait
cltd
les
cmp
xor
test
mov
fsubl
push
sub
and
mov
addr16
mov
mov
test
pop
jecxz
pop
push
repnz
inc
clc
and
call
out
push
loopne
inc
test
int3
daa
cltd
pop
das
loope,pt
imul
and
push
insl
xchg
outsb
mov
jg
icebp
jae
stos
cltd
mov
adc
vpshufd
add
testb
repz
sub
lahf
repnz
inc
je
or
and
cltd
ss
imul
pop
jecxz
xor
lcall
movsb
push
sub
leave
or
xchg
test
push
mull
cmp
or
pop
dec
and
jns
jns
push
add
outsl
cmp
xchg
add
xchg
push
mov
and
or
adc
add
cmpsl
fwait
jns
movsb
shll
sbb
sub
ror
push
pop
cmp
add
not
sub
sbb
add
call
out
sub
dec
mov
jo
int
out
test
sbb
pop
push
lret
pop
outsl
pop
sbb
jae
movsb
jo
popf
sub
in
test
popf
js
aam
sub
std
dec
sahf
aaa
daa
nop
sbb
lret
dec
dec
fdivrs
out
adc
into
cmp
mov
int
movsl
inc
mov
push
xchg
outsl
mov
pop
cmc
cmpb
cmpsb
lods
iret
fsubrs
int3
add
aam
xor
add
leave
rorl
fistpl
push
jb
loope
pop
leave
dec
sub
push
sub
icebp
sub
call
dec
repnz
lcall
push
xor
jmp
push
mov
push
scas
je
sub
cmpsl
clc
ja
repnz
popa
sbb
push
std
xchg
shrb
rcrb
cli
cli
cltd
into
push
rorl
cs
mov
and
es
pop
idivb
mov
mov
pushf
push
ljmp
push
push
enter
pop
mulps
nop
xchg
mov
or
sub
ret
jge
loop
cs
inc
scas
test
ja
popf
push
ret
loopne
sbb
stos
jne
add
cmp
push
fwait
cmp
adc
repnz
and
mov
test
push
jb
pop
in
aad
js
mov
aaa
loop
pop
push
cmc
imul
pop
pop
loope
jmp
inc
push
insl
dec
and
and
dec
push
push
adc
ljmp
rolb
aaa
pushf
sub
mov
sbb
dec
xchg
fsub
pop
and
xchg
test
aam
out
icebp
cmpsl
cwtl
das
dec
roll
js
and
sbb
cmpsl
mov
loopne
aam
sti
sub
xchg
sti
rcll
inc
mov
lods
cmpsb
xchg
ret
insb
popf
icebp
jbe
dec
dec
psadbw
test
sbb
cmp
and
fimull
push
iret
fcmovb
lahf
xor
call
xchg
inc
jae
aad
sub
push
sbb
roll
scas
mov
inc
mov
lods
mov
lea
cmpsb
loopne
iret
mov
imulb
cs
arpl
or
outsb
jbe
jecxz
lods
rorl
pop
mov
loopne
sub
pop
das
pop
and
inc
repz
outsl
js
sub
into
push
xchg
sub
lods
bound
sub
iret
cltd
ds
cli
or
and
pop
sub
adc
mov
loopne
adc
add
aad
and
jmp
xchg
jno
mov
lods
adc
push
inc
mov
mov
xor
xor
popa
adc
mov
shr
sub
add
inc
add
inc
push
and
push
es
mov
push
inc
xchg
lock
mov
cli
sub
popa
inc
push
incl
sub
fidivrs
sub
ret
jge
stos
ret
sub
mov
stc
out
xor
ret
sarl
jle
push
imul
mov
notb
daa
sub
sbb
adc
cmpsl
jp
xchg
ljmp
add
shrb
jge
fmul
add
lcall
dec
mov
adc
daa
mov
insl
nop
subb
mov
jl
andl
std
ret
rclb
js
bound
and
push
jns
mov
and
out
xor
insl
adc
sbb
out
inc
sub
enter
je
cmp
push
scas
xchg
mov
dec
adc
sti
lock
and
or
push
jns
movsb
or
loope
test
sbb
cmp
in
dec
jno
and
sbb
push
stc
lret
adc
cmp
jmp
cmc
or
fisttpl
sub
das
iret
pushf
add
push
vpavgw
adc
loope
xchg
push
notl
push
es
push
pop
js
stos
lret
popf
test
pushf
lock
add
popa
jp
jne
inc
lea
leave
invd
sub
mov
popa
pop
bound
jg
cmpsl
jo
adc
aas
inc
fcoml
and
test
cmp
fsubl
jo
in
or
jl
lcall
addr16
stos
mov
jl
call
arpl
in
jns
sbb
ret
cltd
pushf
lret
idivl
xor
jns
ljmp
movsl
push
add
cmp
mov
sub
or
cmp
cmpsl
or
stc
insl
add
sbb
loopne
mov
jne
pop
push
in
imul
mov
inc
cwtl
daa
ljmp
out
aam
mov
imul
add
mov
mov
fsqrt
cld
and
cmc
mov
or
out
sub
push
push
leave
testl
mov
inc
out
bnd
call
addr16
xchg
push
or
lock
inc
icebp
mov
sub
ja
sub
xchg
aad
cmp
imul
fsts
jo
lds
sub
ds
jae
adcb
lods
pop
test
dec
test
or
leave
dec
and
sbb
jge
and
cmp
pop
pop
pop
loopne
test
or
xchg
add
rcrb
aaa
dec
out
sarb
push
adc
insl
mov
stc
push
or
sub
push
adc
sbb
movsl
enter
add
mov
adc
stc
ljmp
daa
sub
enter
bound
cmp
lods
xor
jecxz
adc
loope
pusha
mov
stc
adc
or
iret
aam
mov
pop
xor
fucomi
dec
lret
std
sbb
cmp
inc
ljmp
cmpsb
test
test
adc
loope
imul
lret
mov
mov
jns
or
xchg
xor
ljmp
xchg
xchg
ljmp
mov
icebp
dec
push
sub
fstps
in
jl
out
pop
ds
mov
out
lret
arpl
stc
in
sbb
test
movsl
jecxz
leave
mov
pusha
ljmp
stos
imul
mov
and
add
adc
lods
mov
sub
cmp
in
sbb
xor
pop
mov
imul
cs
add
cmpsl
pop
mov
pop
insb
dec
icebp
ret
sbb
addr16
xchg
mov
nop
xchg
lods
push
fwait
addr16
addr16
push
aam
mov
jmp
xchg
mov
xor
mov
xchg
pop
mov
mov
dec
dec
sub
lahf
shrb
repnz
xchg
mov
add
daa
pop
jne
mov
cwtl
add
or
jmp
cs
mov
push
mov
lods
xorb
sub
imul
ljmp
adc
push
stos
fsubl
inc
mov
je
in
and
or
cltd
fsubp
mov
and
add
cmpsb
out
cs
pop
mov
icebp
roll
test
loop
stos
mov
out
aam
lret
into
xchg
frstor
or
mov
dec
jmp
cmpsb
pusha
and
movsl
cwtl
push
jns
push
pop
dec
mov
sbb
lods
adc
enter
inc
add
fcomi
pop
clc
jns
sub
loop
hlt
or
aad
sbb
popf
mov
cs
and
jmp
fimuls
imul
xchg
and
cmp
xchg
sbb
jnp
push
mov
stc
dec
inc
xchg
insl
cs
xchg
push
lds
xchg
mov
cmpsl
jg
and
mov
movsl
push
and
movsb
sbb
jp
mov
shr
out
jecxz
es
inc
lret
gs
xchg
xchg
pop
lea
jecxz
cmp
fimull
dec
daa
test
cmc
leave
pop
xchg
dec
mov
cmp
bound
in
test
push
daa
lods
cmpsb
mov
lock
fs
jecxz
xchg
lret
enter
scas
jmp
sbb
insb
call
in
jl
movsb
push
mov
push
xchg
jmp
popf
mov
in
cmp
mov
sub
pushf
xchg
fsubl
xor
inc
gs
cmpsb
ljmp
cmp
cmp
sub
scas
xor
shl
push
lock
fisttpl
outsl
xor
lods
mov
dec
xor
jle
pop
bound
lret
in
lcall
mov
jmp
xchg
scas
dec
sbb
mov
push
test
sbb
aas
les
lcall
pop
inc
or
adc
mov
push
xor
repnz
xchg
push
xor
sub
sbbl
ss
sahf
mov
adc
and
adc
xchg
jl
pop
in
call
sarl
and
scas
xchg
pop
sbb
repz
loopne
into
in
mov
ret
pop
inc
mov
mov
sub
sti
aaa
jmp
lahf
icebp
mov
clc
push
arpl
addr16
test
jo
mov
imul
and
dec
gs
mov
repz
mov
movb
cmp
push
cwtl
adc
push
push
cmpb
movsb
push
pop
jecxz
pusha
rclb
add
or
hlt
iret
adc
mov
test
ljmp
inc
push
xchg
mov
cmpsl
mov
inc
mov
push
shlb
cwtl
mov
outsb
adc
lret
cmpsb
movsb
sub
mov
fiaddl
out
mov
push
fstl
cmpsl
or
sbb
mov
and
outsb
and
xchg
test
mov
sub
jl
lea
sbb
or
and
jecxz
cmp
imul
sti
add
sub
arpl
inc
sti
or
jmp
outsb
imul
pop
out
mov
sbb
jo
mov
jae
es
cli
inc
js
in
ret
jo
jg
mov
gs
sub
mov
stc
sub
xchg
jg
ficoms
ficompl
imul
addb
pop
test
call
xor
mov
xor
scas
sbb
repz
mov
xchg
stc
pop
adc
paddsw
imul
pop
lret
js
or
lods
or
add
daa
fsubrs
repnz
inc
sbb
test
pop
cld
xchg
in
lods
or
mov
mov
sbb
sbb
fidivl
in
sub
dec
mov
loopne
les
loop
xchg
push
mov
sub
xchg
mov
push
mov
lods
fildl
sti
jb,pt
idiv
lret
test
in
das
and
mov
jp
out
out
stc
sbb
cmp
push
adcb
push
sub
clc
ret
inc
sbb
pop
cmp
xchg
or
pop
andb
test
add
and
cmpsb
mov
cmpsb
xor
mov
call
ljmp
sub
and
das
je
mov
dec
and
add
movsb
cmpsl
sbb
or
mov
cmp
int
cmp
and
nop
jo
pop
out
sarb
mov
inc
out
movsb
or
iret
pop
leave
nop
mov
xor
adc
add
sbb
mov
movsl
xor
testl
loop
push
xor
imul
int3
sub
imul
sbb
shl
adc
or
or
push
push
rorl
int3
test
inc
xchg
jmp
loope
addr16
sbb
push
inc
in
cwtl
dec
scas
mov
ja
repnz
outsl
lods
pop
div
fcomps
cmp
adc
add
sub
scas
stc
cwtl
cwtl
test
loope
out
and
pop
stos
jl
repz
fs
sub
faddp
cwtl
add
xchg
push
pusha
mov
aas
pop
into
cmp
lcall
jge
cmp
cmp
dec
js
mov
sbb
andl
lret
sub
ds
call
pop
mov
push
mov
lret
and
mov
bound
cmp
loope
int
sub
cmc
add
or
xor
pop
or
les
jmp
movsb
popf
cmp
adcb
sub
repnz
fstpl
xchg
cmp
mov
les
push
sub
stc
mov
jge
arpl
add
cwtl
daa
fdivrs
mov
outsl
in
es
out
pop
popa
lock
dec
movsb
leave
sub
sbb
and
xchg
mov
xor
ljmp
sub
daa
mov
test
scas
pop
sbb
and
sbb
xchg
aad
mov
or
imulb
jl
aam
lea
arpl
ja
push
sub
and
cmp
sub
bound
push
add
adc
clc
cmpsl
repnz
jl
push
cmp
push
outsl
and
in
xchg
std
adc
sbb
outsb
fldl
cld
push
enter
fwait
push
je
jb
inc
in
leave
and
adc
xchg
or
ret
cmp
sub
mov
pop
pop
sbb
inc
xor
enter
xchg
movsl
rol
jp
adc
inc
dec
movsl
xor
xor
sbb
add
jb
insl
push
sub
arpl
nop
pop
push
push
and
mov
push
jnp
out
xchg
push
pop
jne
mov
inc
nop
and
xlat
jns
or
movsb
mov
andl
sti
xchg
xlat
inc
cwtl
jne
xchg
push
sbb
cmp
shll
scas
ret
sub
ss
iret
and
adc
pop
daa
shl
pusha
xor
sbb
mov
mov
dec
jecxz
add
aad
nop
jmp
leave
enter
aad
movsb
add
xlat
out
jae
cld
jo
stos
lea
pushl
adc
outsb
test
inc
sbb
pop
push
sbb
xchg
dec
xchg
jecxz
xchg
aad
test
xor
cmp
xor
lds
fwait
lcall
mov
mov
mov
push
test
inc
stc
lods
xlat
mov
xchg
in
jecxz
pop
sub
push
aad
mov
mov
test
dec
sub
insl
pop
leave
ljmp
mov
test
push
cmpsb
aam
inc
inc
xlat
icebp
ds
and
add
and
cmp
xor
icebp
sti
push
adc
add
mov
repnz
xchg
and
aam
fldln2
mov
mov
dec
and
jae
and
enter
mov
or
xor
pop
test
push
mov
mov
xchg
mov
es
pushf
sub
jg
cmp
fcom
enter
dec
mov
sti
pop
inc
dec
stc
test
add
mov
adc
push
bound
or
push
cld
js
call
xchg
es
loopne
pop
lea
fcoms
cld
sub
hlt
je
pop
sbb
and
jmp
fstpt
sub
sub
cmpsl
and
cwtl
push
mov
xor
sbbb
pop
and
lret
ljmp
lcall
lea
insb
push
mov
sbb
aam
sbb
dec
sbb
sti
stos
sub
cmp
jb
inc
push
int
or
mov
bound
and
lahf
pop
mov
jmp
push
movsb
sahf
out
sbb
sub
lds
xor
popf
aad
push
out
mov
mov
jge
adc
push
cmp
das
xlat
imul
aam
mov
movsl
push
lret
add
sbb
loopne
xchg
imul
or
mov
ss
cwtl
repnz
stos
pop
sub
idivb
sbb
jb
pop
hlt
xor
jmp
lret
mov
rcr
outsl
rorb
test
sbb
pop
enter
sub
iret
psubusw
push
lahf
es
mov
icebp
bound
push
stos
aam
test
dec
xor
in
loop
ljmp
sbb
sub
pop
push
call
inc
dec
sub
in
stos
gs
pop
inc
testl
push
sub
push
imull
jae
into
sub
iret
jg
cmp
sti
xor
and
dec
icebp
and
out
and
std
xor
stos
xor
mov
stos
sti
and
test
jmp
jo
sub
add
pusha
and
stos
notl
xlat
or
push
addr16
mov
inc
data16
lock
popf
cmc
push
pop
stc
sbbl
pushf
dec
fldcw
enter
mov
fs
fdivr
xchg
nop
dec
js
mov
fldl
std
lds
add
insl
idivl
and
pop
sti
inc
jns
sbb
pop
add
mov
les
sub
sub
xchg
das
push
mov
shlb
mov
xchg
in
add
cmp
nop
gs
shlb
cmpsl
inc
fwait
call
iret
lret
loop
loopne
repnz
jne
hlt
cmp
repnz
jno
dec
cmp
in
jb
adc
dec
sbb
or
mov
mov
jl
jp
lods
rcrb
xchg
rol
mov
mov
nop
jp
cltd
sbb
push
loopne
adc
scas
js
jmp
jns
mov
xor
out
in
fsubp
into
mov
out
and
bound
or
test
int
xor
adc
clc
je
dec
or
push
jae
loop
dec
sarl
clc
in
jno
dec
pop
push
cs
or
fs
add
add
xor
lods
xor
in
sub
les
shll
ljmp
or
leave
and
add
insl
sub
sub
lods
sarb
icebp
sbb
sbb
and
out
arpl
fs
dec
fiaddl
outsb
iret
test
dec
rolb
push
leave
mov
dec
push
sub
xchg
out
mov
je
mov
pop
arpl
mov
shlb
xchg
test
scas
imul
call
loope
xor
repnz
aaa
push
push
mov
bound
sub
out
call
push
mov
pop
ds
pushf
mov
xchg
sub
pushf
pop
cmp
faddl
cli
dec
ret
es
clc
movsl
inc
xor
inc
mov
push
push
adc
out
js
push
xlat
adc
cmp
loop
cmp
push
sbb
push
mov
cmpsb
pop
lret
fnstsw
mov
sbb
or
int3
lods
xchg
stos
lea
xchg
loop
cmp
jl
fimull
jle
or
sub
jmp
mov
sub
pop
cld
dec
lods
xchg
dec
insl
daa
adc
dec
jmp
bound
pop
shlb
mov
es
enter
out
sub
movsb
or
in
lcall
daa
imul
xor
lret
cbtw
mov
inc
cwtl
cmp
or
adc
arpl
imul
dec
arpl
jmp
popa
stc
cs
lret
pop
push
in
stos
sub
in
call
ljmp
gs
mov
jne
lret
addr16
jmp
mov
insb
inc
and
gs
pop
inc
nop
mov
pusha
and
jmp
lret
stc
rorb
int3
lahf
or
cltd
jecxz
mov
cli
sub
sbb
loop
jns,pt
das
cs
xorb
jge
inc
inc
imulb
jmp
xchg
in
stos
imul
ljmp
adc
cli
imulb
sbb
imul
psubsb
mulb
mov
test
fwait
sahf
mov
pusha
pop
sbb
cwtl
fnstsw
movsb
call
lret
fildl
in
ja
mov
mov
sbb
lods
lock
adc
sub
sbb
push
fdivs
push
in
ss
and
jecxz
int
or
jno
std
inc
push
sti
out
ljmp
mov
lret
outsl
ret
arpl
iret
mov
push
out
and
push
and
adc
or
cltd
cli
adc
pop
test
mov
inc
enter
repz
in
inc
xchg
xchg
mov
adc
jmp
mov
sbb
push
sbb
cmpsl
cmp
shrb
sbb
mov
pop
in
and
inc
or
sbb
sbb
and
jge
mov
inc
adc
jmp
andl
xchg
std
call
fdiv
push
std
pop
jo
and
sub
std
xchg
sub
or
dec
push
mov
adc
push
adc
ret
or
jle
movsb
repnz
push
or
jge
cmp
and
call
cmc
xchg
push
sbb
adc
dec
sub
mov
jl
jo
xchg
rcll
mov
and
insb
or
subb
or
stos
rorl
vphaddubd
or
pop
sbb
ret
mov
clc
mov
pushf
sub
sub
fldl
loope
nop
test
add
lret
lcall
adc
push
testb
mov
loope
mov
adc
pop
push
ret
lcall
pop
xor
adc
xor
xor
addr16
xchg
adc
movsb
mov
daa
idivl
stos
pop
sbb
jg
mov
lods
mov
pop
push
flds
jecxz
pop
sbb
pop
testl
sbb
add
cld
xchg
mov
mov
cmp
or
dec
sbb
sub
ljmp
jecxz
sub
ud2
sbb
lret
popf
mov
lds
and
shlb
xor
xor
aam
test
aam
add
push
push
hlt
bound
xchg
std
or
movsb
inc
push
mov
hlt
jo
int
adc
pop
xlat
cli
add
sub
inc
arpl
cmp
pop
outsl
jecxz
insl
outsl
cmpsl
arpl
jecxz
or
adc
jp
iret
test
pop
push
mov
fidivl
push
mov
sub
stos
sub
mov
mov
loopne
fidivrs
cld
pushf
sub
enter
sbb
clc
sti
pop
imul
or
cltd
popa
mov
test
sahf
negb
cs
lods
movsb
sbb
inc
jmp
jb
cld
mov
test
xor
hlt
inc
dec
push
lret
lods
pop
movsb
call
mov
sub
js
iret
sub
mov
lds
data16
pusha
mov
or
cltd
shlb
adc
arpl
sbb
mov
shll
ljmp
xor
cmc
imul
into
lcall
insl
loopne
jp
mov
mov
arpl
mov
push
jg
bound
adc
push
lea
ret
push
adc
lret
inc
xor
je
mov
pop
push
aad
loop
xchg
sbb
pop
jle
mov
sbb
push
add
fistps
jne
mov
and
out
jae
dec
adc
daa
pop
out
iret
push
mov
stos
testb
cmp
lret
pop
rcll
popa
insl
imul
lods
js
jo
push
inc
stc
notl
mov
pop
and
adc
sbb
push
dec
mov
repnz
mov
dec
lcall
pop
hlt
repnz
mov
xor
cwtl
mov
shll
adc
out
ljmp
rorl
jnp
mov
repz
xchg
lcall
jnp
xlat
pop
mov
xchg
in
lcall
imul
sbb
add
aad
xchg
pop
in
jecxz
adc
cmpsl
fisubs
movsl
imul
sub
xor
pop
addr16
push
xchg
std
pop
adcb
rorb
inc
sbb
xor
and
sbb
mov
sub
sub
hlt
dec
cmp
sub
out
dec
pusha
sub
sub
pop
jno
sbb
cli
mov
cmpsb
jmp
arpl
repnz
fcom
aas
out
gs
dec
pop
jp
jmp
stos
lret
pop
insb
cmp
pop
mov
sbb
adc
sti
cmp
cs
adc
lods
aam
cmpsb
xchg
cmpsl
fidivs
adc
inc
cmpsl
lahf
jge
lods
adc
loopne
xchg
mov
lret
lods
sub
mov
fdivl
sub
cmpsl
jbe
mulb
mov
or
push
popa
arpl
xchg
sub
fs
js
mov
test
pop
jge
or
dec
and
scas
sub
push
or
jns
sub
or
xchg
mov
test
imul
imul
popa
rorl
or
mov
jb
and
pop
xor
or
xor
jo
pop
jecxz
sarl
push
imul
out
inc
lods
lds
loopne
xor
cmp
dec
lock
or
mov
inc
fwait
sub
xchg
cmp
stos
fsubrs
bound
stos
xor
or
adc
movsb
mov
pushf
in
jecxz
jecxz
or
jle
mov
btl
or
pop
sbb
inc
jecxz
push
push
jno
pusha
jbe
adc
or
enter
test
push
sub
ja
or
sbb
jb
sti
sti
lds
cmc
ds
leave
ret
mov
or
cs
repnz
sbb
leave
jecxz
mov
or
pop
xchg
fwait
jnp
call
mov
das
sti
sbb
lock
ljmp
pushf
in
shrb
in
orb
pop
fcomps
es
out
lahf
lods
js
jle
je
mov
cld
call
push
jmp
test
sarl
or
stos
ljmp
sub
lahf
rol
popa
jno
lods
mov
add
arpl
stc
popa
xor
add
repz
bound
lret
sub
leave
xor
xchg
xchg
add
out
push
mov
lods
pop
shlb
adc
xor
pusha
xor
loop
xor
pop
outsb
sbb
push
add
pop
notb
das
or
xchg
mov
sbb
stos
jo
sbb
loope
mov
cmpb
adc
out
imul
pusha
clc
sbb
outsb
inc
repnz
bound
mov
jmp
xchg
adc
xlat
add
and
popa
outsl
aad
mov
insb
jmp
sbb
cwtl
cmpb
stos
repnz
in
jbe
mov
stos
cmp
pop
mov
dec
rorb
and
dec
hlt
sti
sbb
adc
mov
mov
outsb
xor
xchg
lods
adc
roll
lcall
jnp
cmp
loope
or
dec
gs
lcall
stos
lods
sbb
xchg
stos
sub
sub
jecxz
cli
aas
lods
inc
dec
es
inc
repnz
jmp
iret
cmpsb
sub
test
jmp
mov
scas
xchg
sbb
leave
popf
ljmp
or
xchg
inc
daa
mov
mov
fdivrl
sbb
js
out
inc
outsl
scas
test
mov
push
add
jle
ss
sub
mov
push
int
sbb
pop
stos
shl
jge
jno
rcl
xchg
xor
mov
mov
sbb
sbb
insl
lret
pop
iret
adc
pop
out
sbb
add
and
sbb
mull
inc
pop
enter
mov
mov
lret
fcoml
or
movsb
popa
aas
or
mov
ljmp
ljmp
nop
sbb
xchg
push
sahf
cmpsl
xchg
shll
sub
imul
addr16
into
loop
jmp
js
mull
out
xchg
shrb
xchg
xchg
or
std
inc
lods
push
in
add
sbb
jne
fcomps
aad
aam
add
pop
aam
lds
sub
call
popa
insb
cmpsl
loope
repnz
inc
js
sub
ljmp
jbe
dec
shr
rclb
adc
mov
adc
inc
inc
loopne
movsw
push
cmp
pop
cmp
ljmp
dec
cmpsl
sub
clc
inc
aam
pop
lock
jecxz
cld
dec
out
fwait
push
sbb
shlb
fwait
xlat
push
scas
dec
sub
sbb
iret
or
fmuls
and
add
xor
jmp
inc
sbb
and
cvtps2pi
addr16
and
jecxz
push
jbe
outsl
test
cmp
and
push
xchg
movb
movsl
dec
sar
dec
pop
je
mov
push
pop
adc
enter
xchg
pop
xor
push
xor
sub
aaa
popa
jnp
sub
aas
push
xor
or
xor
mov
sbb
mov
sti
pop
scas
jmp
sub
fiaddl
fldcw
loope
je
and
leave
cmp
clc
lods
test
fidivs
mov
and
iret
xchg
mov
push
repnz
xlat
in
test
call
xchg
jo
cltd
xor
xchg
and
sub
imul
icebp
mov
mov
jl
sub
jmp
mov
push
pushf
sub
arpl
pop
imul
aam
aad
test
out
cli
push
or
cli
fmull
arpl
gs
cld
stos
xor
lahf
imul
sbb
dec
add
in
repnz
mov
jo,pt
xor
jp
punpcklwd
add
xor
and
ja
push
lea
xlat
pusha
cli
xchg
fs
xchg
fucomip
rcrl
push
iret
call
cli
leave
mov
mov
cmpb
push
ja
add
pop
bound
outsb
inc
pop
or
lahf
lret
orb
pop
mov
push
dec
push
mov
popf
subl
or
ret
add
and
cmpsl
fisubs
cmpsb
xor
js
and
push
out
mov
dec
rcll
mov
xchg
shll
sti
out
jl
or
fisubl
xlat
inc
rcl
push
daa
pop
subb
xchg
je
or
jl
xchg
enter
insb
xor
ror
and
je
sub
cmpsb
push
cwtl
mov
mov
repz
enter
push
sbb
xchg
pop
cmp
xchg
popa
fdivl
xlat
jl
fisubs
addl
jg
add
dec
mov
fildll
popa
outsl
shl
and
mov
daa
lret
mov
or
fs
imul
iret
cmpsb
imul
or
sbb
insb
cmp
es
mov
and
jge
sbb
daa
test
iret
sub
lea
movsl
pop
outsl
xlat
xor
testl
jnp
and
inc
jbe
mov
jmp
jne
sbb
insb
mov
mov
and
xchg
out
pop
movsl
pop
sub
adc
enter
lea
sahf
out
add
sub
or
out
mov
jecxz
dec
or
cltd
xor
or
xlat
or
push
iret
lret
decb
mov
test
mov
js
fcmove
lock
sbb
fstpt
mov
cwtl
fistpll
adc
pusha
nop
jae
or
rorl
jecxz
out
or
adc
arpl
cwtl
int
cli
stos
fldcw
cli
xor
ss
mov
pop
or
xor
pop
roll
ss
jb
aad
rol
xchg
arpl
movl
dec
sub
int3
adc
mov
pushf
inc
lea
les
movsl
jecxz
sub
mov
sbb
out
adc
stos
sub
fldenv
xchg
and
imul
mov
int
cmc
jns
adc
lret
mov
xor
out
mov
and
leave
lret
imul
lds
or
stos
and
mov
dec
push
lret
lret
pop
jns
inc
out
in
daa
dec
sub
inc
out
xorb
xor
xchg
cmpsb
sub
and
mov
imul
hlt
lock
imul
leave
cmpsb
and
aam
sub
jecxz
xchg
mov
sahf
cmpsb
lahf
lods
sbb
sbb
nop
adc
sbb
decb
bound
inc
das
jo
mov
jmp
inc
pop
stos
leave
loop
xchg
sbb
lahf
sti
and
xlat
sti
sub
clc
mov
scas
mov
outsl
int3
jae
add
mov
jnp
pop
xor
adc
sbb
cmp
xchg
and
enter
lea
das
rcrb
sub
mov
enter
jp
stos
pop
ljmp
add
shrb
pop
xlat
sbb
mov
sbb
adc
scas
negl
pop
mov
adc
jle
mov
pop
pop
stos
sbb
and
sbb
cltd
fimuls
stos
daa
in
fisubl
sub
push
xor
and
test
push
test
test
movsb
call
stos
and
or
mov
imul
jmp
push
inc
push
arpl
cld
aam
les
mov
enter
je
lret
or
dec
adc
out
adc
push
pop
loop
sbb
jge
loopne
inc
mov
mov
mov
mov
or
push
xchg
insb
fidivl
inc
pop
out
clc
cmp
addr16
jb
jnp
jmp
fwait
sbb
scas
jecxz
inc
in
mov
es
es
pop
sbb
cld
fs
ljmp
sub
ljmp
loopne
inc
pusha
mov
pop
adc
je
add
sti
fcomps
or
add
push
mov
arpl
sub
sbb
jmp
mov
sub
repnz
sub
jae
sbb
lods
push
mov
xchg
std
mov
lods
or
push
movsb
testb
idivb
out
jb
jecxz
xor
pop
test
mov
adcl
icebp
push
xchg
adc
lods
push
or
insb
out
pop
daa
aad
pushf
and
add
cmc
aaa
cmpsb
rcr
das
stc
mov
bound
sbb
clc
xchg
or
fs
push
or
pop
sbb
fs
lods
or
daa
sbb
popf
addr16
ja
sub
shrb
mov
add
mov
jo
ss
repnz
mov
in
mov
stos
cmp
and
icebp
imul
cmp
roll
or
or
xor
and
inc
or
dec
test
sbb
int3
mov
sub
push
pop
sbb
ljmp
ljmp
sbb
adc
repnz
aam
test
add
ljmp
loopne
lret
xlat
add
push
pop
jle
xchg
jnp
mov
stos
sbb
imul
lret
and
xchg
pop
and
ret
pop
cli
jo
ret
xor
imul
fisubl
out
mov
inc
sbb
adc
aaa
fwait
inc
xchg
flds
sbb
lret
pushl
mov
pop
test
test
jmp
mov
adc
add
cmc
divl
inc
arpl
push
xchg
jecxz
lret
adc
cli
lea
add
sbb
sbb
clc
fadds
sbb
aaa
pushf
and
inc
adc
adc
popf
jnp
mov
pop
and
and
mov
xchg
mov
fabs
mov
mov
mov
ror
sub
cmpsb
mov
ja
sub
ficompl
lret
cmp
pushf
jmp
daa
xchg
and
inc
add
inc
jb
pop
repnz
jae
jmp
mov
test
and
call
mov
sbb
or
sahf
mov
cs
jle
clc
or
and
adc
aad
pop
int
or
jle
mov
xlat
repnz
nop
or
fwait
cs
loopne
mov
mov
in
pop
cld
int
loop
adc
bound
dec
pop
testb
add
adc
jae
mov
xor
mov
dec
fimuls
lret
cwtl
xor
sbb
dec
dec
arpl
in
aas
mov
mov
xchg
and
daa
mov
cwtl
inc
movsb
push
add
jbe
sbb
fwait
xchg
or
add
and
repnz
pop
mov
cmpsb
cmc
aam
mov
sub
sbb
adc
test
mov
mov
ja
push
add
dec
insb
test
mov
cmpsl
test
cli
outsl
dec
adc
push
push
pop
outsl
dec
sbb
jmp
xchg
push
or
iret
out
pop
jns
std
arpl
and
or
iret
jmp
divl
ljmp
xor
lret
test
aas
inc
clc
mov
js
add
and
iret
and
adc
js
hlt
imul
push
or
push
enter
and
ljmp
daa
xchg
push
int
repnz
test
das
pop
and
mov
sahf
sbb
pushf
add
dec
pop
insb
hlt
popa
frstor
dec
out
mov
xchg
and
fs
shll
inc
adc
pop
and
lea
aam
imul
or
pop
pusha
and
in
pushf
dec
mov
stos
cltd
inc
cld
popf
int
incb
xchg
lcall
adc
xchg
mov
and
mov
dec
lahf
popa
push
imul
dec
loope
flds
push
lahf
outsb
and
fistpll
enter
clc
mov
loop
dec
fwait
mov
es
fmull
pop
and
cli
add
jne
pushf
loope
movsb
sub
xchg
and
xor
xlat
fimuls
xor
pushf
loop
mov
push
ret
push
hlt
aas
xchg
mov
aaa
les
sbb
push
push
outsb
cmp
data16
icebp
jmp
js
out
hlt
fimull
test
je
sub
cs
stos
fdivs
xor
jge
popf
cltd
jb
pop
or
push
repnz
pop
outsl
mov
lds
and
push
mov
movsb
push
mov
mov
std
ds
mov
stos
mov
dec
clc
mov
xchg
repz
lock
sbb
ljmp
or
jnp
sbb
hlt
sbb
call
adc
outsb
push
lahf
dec
sbb
pop
dec
sahf
pop
jnp
sbb
sbb
fmuls
add
sub
push
lock
cmpsl
or
in
in
mov
jmp
xchg
loope
insb
mov
cltd
dec
ljmp
cmp
dec
cli
shl
adc
push
scas
and
int
into
js,pt
mov
push
shlb
das
cli
inc
aad
add
add
rcrb
xchg
test
mov
sbb
pop
imul
add
cld
or
push
int
add
ja
xchg
xlat
push
mov
ljmp
pop
or
pushf
push
aam
stc
fdiv
loopne
mov
lods
test
sbb
xlat
repnz
adc
daa
and
clc
imul
out
les
jnp
sub
dec
stos
push
xchg
cmc
or
and
mov
sbb
jo
ja
jecxz
xchg
imul
cmp
sbb
pusha
cltd
mov
and
movl
aam
test
sub
movsl
dec
mov
or
cmpsl
fcomps
lock
mov
xorb
stos
push
movsl
push
add
repnz
mov
scas
push
push
sub
fldt
repz
cmp
jmp
mov
and
pop
xor
pop
cs
mov
leave
dec
mov
das
lcall
inc
adc
and
fdivs
fwait
mov
xor
and
loopne
add
stos
inc
fdiv
rcrb
ret
sbb
and
mov
or
push
add
add
or
xchg
push
andb
ja
sub
jb
std
sbb
sub
cmp
sbb
adc
adc
or
std
dec
and
es
sbb
jge
xor
outsb
fisubrs
repz
ljmp
xchg
push
std
xchg
fsubrs
xchg
je
push
sbb
repnz
andb
int3
sbb
adc
repnz
adc
fsub
or
out
push
pop
adc
repz
cmp
sbb
or
and
mov
cmpsl
imul
xor
out
xchg
xchg
shlb
stos
repnz
aam
mov
or
xchg
cmc
scas
out
sbb
inc
add
mov
out
fucomip
xchg
setne
test
jecxz
icebp
mov
bound
and
fimuls
fcompl
xlat
fld
pop
xchg
inc
test
out
daa
xchg
mov
pop
out
cmpl
pushf
sbb
sarb
dec
push
lcall
add
aas
dec
pop
xor
sub
jmp
xchg
mov
jnp
shlb
lret
adc
fildl
repnz
cmp
add
cmp
ficompl
xlat
add
xor
ljmp
testl
insb
les
sub
adc
into
jecxz
and
adc
sub
sub
test
mov
ret
sub
sub
xchg
ret
mov
icebp
call
and
scas
adc
out
mov
imul
repz
dec
sarb
movsb
pop
dec
pop
int3
sbb
mov
ljmp
lret
mov
imul
adc
sar
icebp
add
ficoms
ret
push
mov
lds
cwtl
decb
clc
inc
add
or
adc
ljmp
and
iret
ljmp
lea
and
cmp
sbb
add
xchg
fwait
cmp
jle
mov
pop
xlat
dec
out
enter
adc
repnz
addr16
mov
push
aad
std
arpl
mov
dec
iret
push
outsl
fnstcw
movsb
xchg
push
lds
dec
in
dec
mov
insl
cmp
sub
mov
movsl
pminsw
sub
sub
repz
mov
jnp
and
mov
pop
popf
xchg
lcall
jmp
repnz
outsb
jmp
and
mov
sub
fwait
and
mov
push
test
mov
mov
mov
jecxz
addb
lea
call
popa
dec
int3
mov
mov
lods
mov
jge
mov
jb
and
or
sbb
test
repnz
movsl
lock
test
push
xor
xchg
cmp
int
aam
dec
jmp
repnz
das
jmp
cmp
fdivrs
sbb
xor
push
sub
repnz
inc
clc
sub
rcll
jle
add
lock
mov
add
mov
pop
mov
imul
pop
fs
sbb
mov
dec
into
add
loope
sarb
das
push
adc
ret
and
stos
adc
lods
add
lcall
jo
shlb
push
out
mov
or
nop
adc
xor
daa
xor
pop
cmpsl
xor
pop
cmc
ja
add
adc
cwtl
daa
or
outsl
or
lahf
les
pop
sbb
pusha
and
push
push
testl
in
pusha
mov
cmp
jle
mov
ljmp
bound
stos
rcrb
push
adc
mov
and
cltd
sbb
cli
lcall
enter
rcrb
rcl
push
cmc
arpl
pop
cmp
sbb
or
repnz
ja
jae
mov
cmc
in
mov
iret
out
mov
sub
xchg
mov
sbb
cli
lea
pop
adc
lods
bound
mov
enter
cmpsb
inc
subb
cltd
es
and
push
sub
bound
sub
ficoml
not
outsl
bound
sbb
cmp
popa
pusha
adc
fadd
adc
push
pop
aas
xchg
call
test
fsub
loop
mov
sbb
leave
fidivrl
lahf
pop
psubd
insl
or
in
mov
push
mov
daa
inc
outsl
add
xor
nop
stos
push
iret
adc
outsl
lret
fcmovb
add
add
insb
inc
pop
mov
test
movsl
adc
xchg
sti
out
push
dec
aam
addr16
or
aaa
in
push
outsl
or
popf
add
xor
dec
addb
lock
aaa
pop
shll
inc
sbb
ds
test
mov
add
fisubs
mov
jl
mov
jae
lods
xor
std
test
cmpsl
outsl
mul
daa
movsb
cld
push
lcall
clc
and
dec
cltd
sbb
adc
shrb
inc
or
pop
fidivrl
xchg
lret
out
sbb
mov
cmp
sbb
sub
idiv
pop
int3
adc
xchg
sbb
js
cmp
movsl
aad
in
pushf
pop
dec
mov
xchg
cmc
insl
lret
push
lea
sbb
lcall
daa
popf
shl
cmp
enter
and
fisubrs
adc
repnz
and
sub
stos
pop
sbb
in
lret
arpl
add
ficomps
push
clc
push
add
jne
pop
cld
inc
in
mov
leave
cs
daa
repnz
lcall
adc
push
orb
das
pop
add
fmul
sub
xlat
aad
notl
lret
iret
outsb
lret
jmp
loope
mov
out
pcmpeqd
sub
fs
mov
fwait
adc
cmpsl
or
jl
pop
sbb
test
xor
loopne
lds
push
pop
ss
call
imul
xlat
jecxz
daa
sbb
jg
or
adc
enter
or
mov
sbb
pop
test
lea
adc
mov
push
pop
cmp
xchg
adc
adc
push
fstpl
scas
cli
pop
pop
jns
stc
fimuls
add
or
aam
dec
push
push
adc
xchg
push
and
push
fsubrs
cmp
and
or
xchg
and
pop
xchg
or
jg
sub
test
push
pop
adc
inc
fsubrs
scas
mov
fs
scas
sbb
cltd
sub
jl,pt
and
out
pop
xchg
test
lea
scas
jl
iret
xchg
xchg
xchg
iret
cs
or
outsb
rcrl
xchg
push
cmpsb
mov
cs
js
cltd
adc
je
sbbb
cmc
adc
loope
ss
push
sbb
push
fbstp
fs
xchg
loop
push
pushf
rolb
inc
push
mov
or
into
inc
sub
dec
repnz
cld
out
nop
lret
movsb
sub
xor
jp
fwait
pop
xchg
or
fdivs
into
sub
sub
jne
mov
popa
cmp
cmp
xchg
lods
fcmovb
push
mov
pop
mov
or
lret
xor
push
pop
cmpsb
lret
jecxz
xor
and
cli
xchg
push
or
stos
add
xchg
xchg
lcall
mov
mov
imul
test
test
popa
or
fists
leave
ret
cli
add
and
out
inc
sub
inc
in
fldenv
or
or
iret
xchg
stos
sbb
mov
notb
pop
insb
dec
push
loope
sbb
shrb
sbb
inc
out
notb
out
add
popf
or
or
pushf
rclb
dec
lret
jbe
scas
nop
jecxz
push
and
ljmp
int3
ljmp
es
sahf
pop
adc
aas
enter
sbb
aam
jmp
or
jno
cmp
mov
loope
jb
aad
xorb
test
shrb
rcll
ficoms
or
fcomps
dec
jecxz
loop
cmpsb
aam
mov
imul
adc
enter
adc
cmpsb
mov
ss
lret
xchg
mov
ljmp
call
addr16
adc
jecxz
cmpsl
clc
jnp
das
inc
inc
arpl
es
arpl
jmp
and
xor
inc
xchg
frstor
pop
cs
arpl
outsb
inc
mov
push
mov
aas
div
and
push
mov
xor
mov
pop
mov
and
adc
cmpsb
xor
add
jmp
out
sbb
scas
lret
push
and
call
push
cmpsb
push
shrb
push
repnz
ret
pop
int3
or
sbb
pop
jns
je
les
addl
and
xchg
jl
movsb
jbe
xor
cmpsl
or
rolb
pushf
mov
imul
or
sbb
aad
mov
xor
jne
mov
ret
movsb
mov
dec
ss
pop
das
loop
adc
cmp
push
addr16
adc
loopne
adc
pop
mov
iret
mov
cmc
in
jo
notb
test
sahf
sbb
xchg
in
pop
pop
pop
outsl
and
test
push
lock
bound
test
or
es
xchg
outsl
aaa
jmp
lcall
enter
adc
sarb
fcomip
bound
stos
mov
xlat
imul
test
sahf
idivb
call
out
add
sub
or
int
push
lea
lahf
sbb
xor
mov
and
js
leave
lea
xlat
in
sub
outsl
lods
mov
xchg
mov
cltd
adc
jecxz
popf
neg
or
dec
pop
daa
jbe
aaa
xchg
sbb
ljmp
push
jmp
inc
xchg
mov
dec
out
push
sub
loopne
in
adc
xchg
adc
jnp
rorl
movsl
xlat
pop
mov
mov
sub
out
mov
adcb
dec
pop
addb
cmp
inc
in
cld
daa
and
test
jne
rcrl
sbb
sub
mov
xchg
jae
jbe
xchg
pop
adc
stos
psubsb
xchg
stc
pop
inc
lret
jecxz
xchg
and
xchg
xor
pop
xor
int3
adc
pop
and
test
aaa
pop
mov
adc
rcll
ljmp
push
in
leave
iret
pusha
or
jg
or
fnstcw
es
inc
cmp
shr
sbb
or
sub
sbb
es
test
mov
cmc
nop
les
mov
orl
addb
mov
subl
mov
ljmp
cmp
inc
sub
mov
popf
loopne
xor
or
push
cwtl
dec
stos
repnz
lcall
loopne
or
ret
jmp
mov
sbb
iret
pop
andb
pop
loopne
je
out
xor
ljmp
lock
mov
pushf
adc
es
mov
xchg
sub
add
inc
inc
hlt
add
out
test
sub
sbb
dec
sbb
cmp
sub
mov
mov
dec
cmpsl
repnz
dec
push
add
addb
jmp
repnz
sbb
ljmp
sbb
cli
adc
std
filds
repz
mov
add
fbstp
pop
inc
cld
daa
imul
and
out
ss
adc
sti
daa
push
pop
imul
or
sbb
sbb
and
inc
outsb
lret
xorb
lods
dec
cld
and
repnz
test
adc
lahf
inc
mov
lea
push
fcoms
ficoms
arpl
insl
pusha
out
ret
leave
pop
lods
or
push
sub
xor
push
leave
sub
sbb
les
testb
xchg
jno
mov
test
jo
xchg
cmp
mov
stc
mov
and
std
mov
lcall
or
xchg
insl
fwait
sbb
dec
pmaxsw
mov
addr16
iret
cli
or
add
sbb
popa
scas
insb
test
adc
jne
inc
int3
jg
cmp
pop
lods
ficompl
push
pusha
fbstp
sbb
imul
sti
outsb
inc
adc
nop
mov
sbb
push
js
mov
jne
outsl
mov
shrl
mov
es
imul
cmp
test
adc
rorb
xchg
mov
movsb
or
stc
adc
mov
mov
sar
push
add
lret
popf
daa
iret
out
cld
sbb
fsubp
adc
pop
inc
gs
mov
movsl
fs
sub
imul
sbb
or
insl
mov
cs
xchg
sbb
pop
ljmp
popa
in
test
shr
in
dec
inc
xchg
pop
pop
ficoms
popf
sub
stos
inc
jo
mov
inc
or
or
pop
add
sbb
push
jmp
das
push
xor
and
subb
in
imul
sub
sbb
repnz
mov
imul
stos
and
or
subl
jl
mov
fistps
cmpsl
dec
sti
outsb
ret
fldt
sbb
dec
imul
insl
jge
and
mov
out
loop
sbb
sbb
push
pop
sbb
call
enter
adc
lods
iret
and
fistl
xor
stos
jmp
mov
xor
lea
mov
inc
outsl
faddl
cwtl
adc
dec
les
outsl
outsl
out
jae
and
pop
js
mov
pusha
scas
lock
adc
lea
cmp
mov
mov
scas
fdivrs
jecxz
outsb
scas
and
push
mov
cld
mov
sbb
xor
and
sbbb
lret
clc
mov
adc
test
ret
int3
call
mov
sub
jge
inc
data16
cli
dec
add
mov
shr
gs
out
sbb
sbb
push
cmpsb
inc
notb
mov
xchg
xor
push
arpl
gs
push
subb
les
sbb
add
gs
cltd
push
std
jb
push
sbb
dec
cmpsb
or
or
sti
loopne
sbb
out
xchg
data16
jge
fcomi
push
fisubrl
mov
and
adc
push
xchg
loopne
dec
stc
fldt
cltd
add
and
mov
lret
out
and
mov
and
push
stc
add
shll
lret
sbb
div
jbe
lahf
mov
movsl
push
sbb
stos
rolb
or
sahf
pushf
mov
sbb
sub
inc
xchg
adc
cmpsl
pop
jne
mov
das
dec
in
test
push
dec
lods
push
jno
xor
sti
jle
xchg
sub
insl
iret
cmpsl
stos
xchg
imul
out
arpl
dec
loopne
xchg
daa
aam
out
and
add
mov
fdivrp
and
mov
sbb
xchg
daa
and
pop
ljmp
adc
cmp
pop
ja
pusha
xlat
push
push
xor
jae
int3
push
sub
shrb
repnz
jp
jecxz
and
sbb
in
adc
iret
in
lea
xlat
mov
xchg
xlat
xchg
out
rorb
dec
lods
xchg
jge
dec
and
jle
sbb
or
sub
dec
mov
xchg
ljmp
lret
xlat
inc
cwtl
loop
out
pop
movsl
sbb
ret
mov
out
inc
clc
pop
test
inc
hlt
push
test
scas
or
mov
or
sbb
dec
insb
mov
and
test
fwait
sbb
and
out
loope
es
dec
xchg
jle
jo
and
push
jne
or
add
adc
add
adc
or
mov
loopne
aaa
and
out
js
xor
or
call
dec
or
aas
test
xlat
test
out
sbb
jo
movsl
popf
mov
adc
addr16
scas
dec
adc
and
mov
mov
lock
and
test
fimull
stos
inc
inc
shll
int
mov
sti
out
inc
and
loope
jae
and
lea
push
negb
fisubs
cld
test
enter
jne
hlt
dec
imul
xor
jo
enter
in
movsb
xchg
cmp
mov
shlb
and
stos
push
inc
insl
push
popl
lret
sub
sbb
dec
mov
sub
push
jmp
and
sbb
push
stc
add
enter
cmpsl
pop
sub
mov
aam
xchg
xor
mov
je
push
insl
or
fistpll
iret
das
mov
and
int
das
ss
cs
cmc
jmp
mov
push
xchg
adc
icebp
notb
adc
xor
testb
push
fistps
push
mov
mov
mov
test
fsubp
sbb
cld
xchg
or
jae
sub
mov
mov
mov
push
int3
mov
movsl
xchg
pop
ljmp
sub
xchg
xchg
lret
pop
push
fcmovnb
jno
and
jo
and
add
fwait
jl
cmp
js
test
mov
enter
iret
mov
es
loope
ljmp
jl
lea
or
mov
daa
sbb
flds
fiaddl
pop
mov
frstor
mov
cmpsl
jg
add
in
imul
pusha
mov
and
lods
cwtl
mov
pop
mov
frstor
out
rcrl
jo
fimuls
loopne
inc
lahf
xor
cwtl
daa
cmpsb
pusha
mov
aaa
aas
adc
out
dec
cwtl
mov
sbb
jnp
pop
and
push
ret
xchg
ret
je
jno
xchg
mov
inc
xor
enter
adc
shl
inc
xlat
clc
push
loope
mov
test
lods
fwait
mov
lock
jg
jmp
mov
mov
addr16
repnz
adc
cmp
pop
sub
and
dec
lods
insl
cmp
pop
sbb
push
mov
shl
pusha
cmp
or
int3
jmp
adc
cmp
push
into
inc
adc
adc
dec
or
mov
sub
cld
jmp
sbb
jl
movsl
lds
inc
ret
mov
aam
pushf
lret
mov
pop
adc
mov
mov
push
jbe
iret
es
sub
mov
cmpsl
sub
lds
pop
das
loop
dec
adc
rolb
jmp
popf
or
add
xor
mov
ds
lock
movsb
xlat
pusha
lods
jecxz
xor
xor
dec
mov
xchg
jb
out
fdivp
sbb
cmc
popa
sbb
xor
out
xchg
inc
fisttpl
mov
es
mov
cmp
adc
test
push
pop
and
jmp
outsl
mov
and
push
xchg
jns
mov
inc
sub
inc
and
xchg
xchg
and
clc
out
cmp
jb
mov
jmp
cmp
arpl
mov
movsb
and
and
outsl
rolb
jmp
or
shlb
jnp
jo
repz
pop
mov
in
push
adc
xchg
jne
movsb
sub
clc
mov
push
jb
xor
push
jle
jnp
or
cltd
and
lock
cli
push
xchg
in
cwtl
sti
jmp
xchg
and
lcall
loopne
pop
adc
movsb
out
ja
push
push
sbb
in
mov
stos
ds
mov
sub
mov
mov
and
lret
sbb
and
addl
pop
add
cmp
fisubs
mov
std
adc
sbb
inc
or
out
cwtl
adc
pop
mov
ja
pop
mov
mov
lds
mov
stos
sub
stc
mulb
add
cli
push
sbb
fcomps
cli
aad
int3
pop
imul
mov
js
and
jmp
and
loopne
or
pop
push
mov
push
addb
mov
test
mov
inc
sbb
sub
enter
aam
or
xchg
add
repnz
inc
sti
lret
cmp
pop
push
inc
push
inc
outsb
iret
sbb
jno
mov
mov
add
lret
add
mov
data16
pop
or
add
mov
cli
repnz
xchg
out
movb
loopne
sub
or
lret
xchg
ds
ljmp
adc
and
add
je
pop
pop
cmp
sti
and
or
mov
xor
mov
test
mov
outsl
push
repnz
pop
sub
leave
in
jmp
adc
aam
jl
lret
sbb
sti
inc
xchg
aam
and
lods
jae
xchg
mov
pusha
jnp
outsb
nop
push
xchg
pop
or
lock
push
xor
mov
sbb
or
mov
mov
mov
cmp
lret
jo
aam
and
fcomps
lea
xor
cmp
pop
mov
push
pop
repz
jge
cmp
test
sub
push
sub
stos
dec
push
cmpsl
mov
in
push
sub
fidivrl
outsl
add
or
rorb
mov
daa
lret
adc
popa
xchg
pop
add
inc
lock
adc
push
les
gs
call
adc
test
ljmp
add
pop
loop
test
sub
repnz
xlat
pop
mov
lret
adc
adc
leave
mov
inc
jne
mov
lods
adc
sbb
mov
lods
js
stos
cmp
xor
sub
ficomps
lahf
jg
es
sub
jecxz
frstor
xor
imul
jge
loope
test
push
bound
mov
arpl
inc
insl
in
push
add
sbb
imull
jb
loop
adc
mov
imul
sbb
fbld
leave
pop
outsl
inc
and
imul
inc
push
or
sub
adc
dec
mov
stos
scas
mov
mov
fcomps
mov
aam
push
mov
add
les
or
xchg
lret
imul
mov
pop
adcl
jbe
sub
ja
mov
sub
cmc
adc
mov
test
inc
xor
rcl
sbb
jmp
pop
pop
repz
lret
negb
enter
pop
shl
mov
push
mov
mov
leave
push
stos
shr
xor
adc
pop
inc
sbb
or
push
mov
mov
mov
clc
pop
xor
cwtl
lock
mov
outsb
ss
cmc
cld
mov
cli
jmp
add
xchg
jp
adc
or
loop
test
lds
js
call
gs
in
loop
inc
fsub
jnp
sbb
xchg
mov
xor
test
loope
add
xlat
cmp
pop
js
push
out
mov
sub
mov
lock
push
clc
outsb
push
fwait
call
push
inc
sbb
and
pop
iret
inc
kortestb
pop
sub
sbb
xchg
lret
nop
inc
loop
mov
adc
lods
movsb
loop
pop
fcoml
xchg
pop
test
pop
out
sbb
call
jmp
sub
mov
push
lret
iret
ss
push
xchg
fcmovnu
popa
aam
out
jmp
adc
pop
loopne
adcl
sub
lret
sbb
dec
mov
sbb
and
lret
dec
outsb
jge
idivb
add
mov
add
sbb
es
jo
decl
fcompl
scas
cwtl
sbb
fcoms
mov
cli
fiadds
mov
adc
lret
cmc
adc
xor
fistpl
lea
and
faddl
pop
rcrb
mov
fisubl
int
or
mov
sub
rcll
sub
xchg
adc
repz
sub
and
mov
xlat
xchg
inc
inc
add
das
cltd
insl
mul
cmp
pop
imul
arpl
int3
xchg
imul
mov
and
mov
in
outsb
pop
jmp
je
or
push
stc
outsb
xchg
psrlw
movsl
aad
test
sub
xchg
outsl
ljmp
xchg
xor
es
daa
jbe
mul
das
popa
cmpsl
cmp
fcomps
imul
les
mov
dec
mov
lcall
jo
sub
or
loopne
daa
cmp
sbb
mov
in
test
add
inc
sub
daa
enter
pop
cmpsl
clc
scas
mov
sbb
mov
test
js
sub
push
mov
xor
sarl
test
jb
and
mov
or
jle
sub
xor
adc
decb
shl
sub
lods
pushf
aad
push
out
stos
popa
pop
mov
pop
xchg
and
xchg
fsubs
stos
sub
andl
jl
mov
mov
xchg
out
std
call
repnz
adc
or
and
mov
jge
pminub
iret
and
scas
mov
mov
cwtl
ret
aad
cmp
pop
or
out
cli
xor
and
out
negl
mov
jp
add
sub
mov
dec
repz
in
cld
rol
mov
mov
jp
repnz
and
jbe
inc
lods
setnp
jecxz
xchg
push
fsubrl
xchg
ds
dec
ljmp
mov
loopne
dec
shrb
div
ljmp
sub
aam
mov
aaa
icebp
xor
movb
fwait
adc
lret
insb
jb
or
aaa
stos
test
aam
and
call
xorb
push
loope
nop
mov
adc
or
sub
fiaddl
jns
bound
and
call
push
sub
add
or
test
sbb
mov
xlat
xchg
lds
fsubr
dec
mov
ljmp
cmp
adc
jmp
pop
int3
adc
lcall
jbe
and
dec
jmp
pushf
jmp
jmp
leave
or
fstl
jl
sbb
lret
mov
out
jmp
cltd
xchg
sti
subl
fisubl
aam
and
pop
sbb
pop
sbb
pop
add
mov
mov
jecxz
loop
aam
loope
mov
xlat
or
push
mov
insl
rcrb
fdivr
cmp
insl
dec
pop
loop
push
xchg
adc
pushf
adc
cmp
stos
scas
mov
xor
enter
push
inc
mov
fsts
das
mov
mov
inc
inc
rorb
xchg
in
sub
popa
cmp
xchg
push
mov
in
fildl
daa
jne
sbb
xchg
incb
adc
or
jae
fs
icebp
sub
dec
cltd
add
test
sbb
and
mov
jo
fdivrp
pop
sbb
sub
cltd
sub
sbbb
out
inc
aas
xchg
loope
xlat
inc
icebp
cmp
push
popa
sarb
cmpsb
inc
fsubrs
sub
fcomps
xchg
sub
sub
mov
jge
jnp
mov
sbb
xor
jne
push
xlat
pusha
xchg
and
adc
adc
xlat
and
jo
sub
push
sub
inc
mov
lea
ror
mov
loope
outsb
in
adcl
pop
fmul
scas
sub
out
sbb
ja
sbb
push
jl
movsb
dec
add
push
js
gs
sub
dec
push
aaa
or
xor
fsts
jecxz
xor
cltd
or
les
lods
cmp
scas
mov
or
xor
ret
dec
insl
inc
or
lret
xor
sbb
sub
jb
lock
xor
inc
pop
mov
inc
or
pop
addr16
jns
insl
adc
jmp
test
aad
dec
fistl
dec
iret
fsubp
mov
nop
and
aad
cli
push
popf
inc
push
es
jecxz
test
cs
test
add
jns
out
leave
movsb
pusha
leave
addr16
jl
fbstp
leave
sub
cwtl
outsb
daa
and
pop
movsb
out
jbe
iret
sub
xor
cmp
icebp
jecxz
xor
aad
jne
loopne
sbbb
fs
enter
int3
push
mov
mov
sbb
fsqrt
std
inc
icebp
fdivrl
xchg
std
jle
int
xchg
pop
icebp
mov
out
xchg
xlat
jl
dec
test
xchg
and
jmp
adc
das
outsb
jno
pushf
sub
and
mov
dec
and
aam
pop
js
xlat
mov
adc
fcoms
repnz
cmp
repnz
arpl
movsb
mov
push
xorl
mov
ljmp
in
iret
aad
imull
jne
pusha
or
adc
sbb
outsl
je
ficompl
test
sbb
xchg
aad
push
pop
adc
xchg
jnp
fwait
call
cmpsl
cmpsl
xchg
xor
adcb
arpl
jo
adc
add
xor
cmp
fsubrs
mov
adc
mov
pop
je
sub
cmp
loopne
movsl
fcmove
pop
push
sub
insl
cmpsb
aam
lret
xor
push
ja
push
sbb
and
dec
insl
call
mov
lcall
fmuls
iret
in
pusha
and
shl
mov
add
ljmp
xchg
cmp
sub
cmp
mov
ret
ret
out
movsb
and
sub
sub
mov
in
sbb
mov
sub
push
mov
add
ficoml
popa
push
fcmove
lret
jmp
dec
add
sarb
in
mov
shrl
mov
mov
mov
xor
xchg
mov
pop
fpatan
cmp
pop
dec
sub
sub
mov
mov
push
call
iret
jo
scas
ss
imul
insl
test
jmp
in
insl
adc
lds
clc
push
jmp
sub
lcall
pop
xor
pop
daa
add
repnz
cli
mov
mov
test
sub
daa
mov
push
out
incb
shrb
add
lret
ljmp
lret
adc
push
repnz
test
pop
mov
sub
aad
or
push
cli
iretw
fs
xchg
in
lahf
jmp
inc
out
mov
sbb
or
mov
adc
std
xchg
push
lods
loope
repz
add
push
sbb
push
imul
dec
sub
mov
lcall
pop
jmp
sbb
cmp
mov
add
scas
daa
or
cmp
pop
mov
dec
iret
mov
call
filds
mov
mov
jl
sub
and
stos
in
cmp
dec
and
daa
and
and
jmp
xor
test
cmp
cmp
mov
pop
rorb
and
leave
sub
and
fildll
jl
bnd
cmp
xor
add
mov
and
and
es
jecxz
jge
mov
xchg
lds
add
push
cmp
pop
addr16
add
sbb
add
shr
mov
xchg
lret
cmpsb
and
sub
test
in
rcll
loop
cmp
jge
nop
leave
ficoml
pushf
inc
xchg
ljmp
dec
int3
clc
mov
popa
outsb
and
out
jns
sub
mov
shlb
xor
nop
cmp
aas
and
sub
cli
loop
jmp
ljmp
movsb
xor
jno
call
push
mov
rorl
mov
loopne
insl
sub
add
out
pop
shl
insb
dec
fistps
push
jb
and
lret
stos
dec
pop
sub
ljmp
das
add
push
movsb
sbb
or
popa
sub
bound
sub
mov
in
push
movl
stos
sub
sub
movsl
dec
imul
sbb
xchg
sub
nop
mov
cli
movsb
sti
shr
outsb
jo
addr16
dec
cld
repz
dec
and
inc
inc
xchg
mov
scas
and
dec
out
testb
and
mov
xlat
inc
cmp
push
sub
push
add
enter
popa
lock
xchg
int
arpl
sbb
push
xchg
pop
lahf
jae
fcompl
movsb
outsb
xchg
sub
jns
jmp
bound
imul
adc
test
push
xor
lock
out
popf
mov
aam
mov
and
add
nop
shlb
cmpsl
sub
sub
add
imul
repz
xorb
leave
icebp
loope
mov
sub
jle
pop
fcoml
pushf
push
inc
push
pushf
in
pop
out
loopne
sub
or
in
rclb
cmp
lods
mov
repz
test
cmp
push
lret
lret
fnstcw
sbb
scas
mov
sbb
jae
pop
lahf
pushf
pop
ljmp
adc
mov
lret
sbb
cmpsl
rolb
sbb
arpl
fcmovne
add
cltd
jno
cld
lret
adc
and
and
pop
ret
loopne
test
xor
push
fmuls
das
cmp
mov
js
xlat
lock
dec
xchg
jo
ljmp
sbb
loope
mov
arpl
movsl
inc
and
sbbl
xchg
xchg
movsb
pop
sub
test
cmp
bound
fcmovnu
and
sub
and
xchg
push
repnz
inc
push
or
mov
fcmovbe
sbb
jecxz
sbb
cwtl
ds
daa
xchg
ror
clc
out
mov
sub
cwtl
jns
and
dec
icebp
pop
push
lods
popf
pop
pop
repz
into
mov
sbb
mov
and
pop
test
push
and
rcll
lret
mov
xor
stos
jl
sub
loop
dec
lods
pop
ljmp
lds
lret
or
es
es
aam
or
mov
pop
adc
adc
xchg
enter
xchg
pop
shlb
imull
push
xlat
sbb
cwtl
shrl
fs
adc
testb
mov
or
push
add
sub
add
ret
in
sahf
xchg
and
add
jp
sahf
adc
inc
sahf
mov
or
mov
jmp
xor
xor
sbb
jb
movsl
sbbb
addr16
pop
cmpsl
cmpsl
xor
fbld
mov
adc
xchg
mov
movaps
cmc
inc
cmc
sub
add
and
and
xlat
pop
pop
out
test
pop
pop
sbb
aam
xchg
push
cmp
adc
adc
mov
cmp
xchg
or
pop
jle
sub
push
aad
xchg
int
pusha
ret
fadds
aam
sahf
jns
cmpsl
adc
scas
adc
dec
out
and
sti
cmpsb
lcall
xchg
adc
or
sbbb
out
add
jae
push
pushf
lcall
xchg
das
ljmp
sub
aaa
push
add
stos
push
sub
sub
jno
or
aam
in
push
arpl
inc
xlat
mov
testb
loope
bnd
jo
sbb
testl
sti
repnz
push
bound
mov
xchg
cltd
sbb
sbb
or
push
int
repnz
jmp
cmp
pop
movsb
sbb
pop
jecxz
out
dec
ret
and
adc
push
mov
jae
sbb
sbb
and
inc
pop
xchg
push
pop
jecxz
sbb
sahf
xchg
loop
ljmp
testb
stos
sub
pop
out
sahf
or
mov
adc
scas
push
jg
rcrb
movsb
repz
jnp
jb
push
ffree
lds
and
mov
les
stc
je
and
lds
cs
fwait
jbe
es
mov
inc
cmp
nop
sub
dec
and
and
add
fadds
jl
adc
xor
adc
lcall
dec
push
mov
lret
arpl
fs
or
xor
xlat
mov
outsb
push
int
or
movsb
test
mov
push
loope
ret
xchg
mov
out
ds
mov
test
sub
out
and
lods
leave
mov
icebp
aaa
mov
xchg
leave
pop
xchg
sbb
ljmp
out
mov
cmp
add
out
lock
pop
sbb
jo
xchg
unpckhps
add
sub
js
sub
xchg
decl
add
mov
mov
mov
sub
sbb
xchg
xacquire
xchg
sub
push
sub
daa
push
or
push
xchg
call
cs
popf
jo
or
sbb
push
popa
or
push
sbb
daa
pushf
movsl
mov
sbb
sbb
xchg
cld
add
push
sbb
pop
sub
xchg
push
mov
sub
movsb
and
inc
cmp
andb
leave
and
mov
ja
xchg
or
mov
adc
xlat
push
lods
sti
mov
call
sub
loop
and
rcrl
push
add
es
pushf
insb
fcoml
mov
push
dec
jmp
and
repnz
and
call
dec
push
jb
cmp
out
pop
in
enter
addr16
out
cwtl
mov
dec
ret
imul
lea
pop
inc
dec
sub
cs
leave
sub
movsb
pop
pusha
scas
and
push
push
lcall
js
and
jbe
into
sub
or
pop
insb
and
pop
sub
sub
ss
imulb
test
or
das
rcr
fdecstp
ljmp
adc
sub
je
mov
sub
ficoms
test
sbb
sbb
adc
fbld
lds
or
mov
sub
push
mov
mov
or
push
push
pop
inc
stos
les
test
rcll
stos
cli
out
push
stos
xor
imul
push
hlt
adc
popa
and
cmc
loopne
popa
in
sub
repz
stos
aam
ficoms
movsl
ficoml
jne
cmpsl
fcompl
fsubl
mov
rcr
aam
jmp
scas
loopne
popa
jbe
sub
xchg
mov
cli
in
in
scas
push
xlat
ret
mov
push
jp
fnstsw
icebp
and
aas
movsb
or
push
pop
cmpsb
ret
mov
mov
and
or
and
mull
push
jecxz
cmc
adc
sub
lret
test
lcall
jne
shlb
stos
inc
jmp
jae
hlt
jp
add
pop
je
lcall
lds
pop
shr
out
mov
dec
int
pop
cmc
sti
mov
mov
loop
aam
ja
and
psubq
xchg
mov
sub
inc
mov
push
sub
iret
stos
mov
push
sti
scas
jbe
and
sbb
enter
pop
xor
cwtl
dec
stc
cld
and
cmp
addr16
out
xchg
aaa
fisttpl
jnp
stc
dec
daa
adc
nop
pop
cmp
or
mov
adc
inc
pop
xchg
repz
dec
push
in
sub
cli
sbb
int
or
inc
popa
outsb
outsb
int3
mov
out
sbb
mov
call
pushf
adc
mov
and
fsubr
call
fildl
test
repnz
movsb
fcmovb
xchg
lock
inc
xchg
outsb
sbb
test
ljmp
and
stos
fisubrl
mov
stos
xor
jne
loopne
adc
fbld
push
aam
sub
aam
in
idiv
ds
dec
jp
loope
scas
adc
jae
inc
pusha
inc
sarl
fucomi
sub
repnz
sub
add
test
cld
cwtl
sub
enter
aam
ret
mov
sbb
aad
sub
sti
push
in
adc
mov
sbb
sub
xor
push
push
sbb
dec
fs
xchg
add
fdivrs
or
and
jp
arpl
sbb
leave
fs
insl
popa
loopne
pop
mov
test
push
imul
icebp
mov
out
and
pop
or
lods
xor
inc
inc
aaa
fimuls
testb
mov
mov
fmulp
and
push
mov
cld
mov
xor
push
xlat
imulb
sub
cmc
add
stos
jmp
dec
xor
cwtl
inc
lret
push
mov
add
repnz
ret
and
pop
sub
and
push
jge
sub
push
fmul
loopne
test
push
leave
sbb
call
testl
push
sub
lods
clc
sbb
jnp
mov
loope
push
daa
and
cwtl
iret
adc
aam
mov
adc
sbb
iret
jmp
fstl
into
mov
iret
iret
aam
and
cwtl
inc
inc
out
scas
dec
mov
popf
and
inc
imul
lods
add
or
lret
adc
bnd
std
mov
sbbb
sbb
out
leave
pop
mov
jbe
or
lds
aad
sbb
jmp
pop
sbb
scas
dec
inc
lahf
xor
mov
mov
repnz
pusha
adc
mov
and
jbe
mov
jmp
mov
stc
cmpb
and
clc
push
cs
test
jns
imul
mov
lds
inc
xlat
test
and
cli
insl
bound
or
and
lods
pop
cmp
out
cmp
pop
xchg
mov
add
sub
rorb
or
pop
int
daa
and
daa
mov
dec
and
mov
dec
sub
out
and
add
mov
ljmp
xor
xchg
outsb
cmp
mov
sub
pop
push
lret
xor
inc
stos
xchg
movsl
push
ds
rcrb
pop
or
out
push
popa
cmpsl
cwtl
push
lods
cmc
enter
inc
add
in
insb
pop
mov
xor
sarl
mov
bound
sub
daa
out
mov
iret
sbb
cmp
adc
pop
mov
fmul
pop
jmp
push
repz
sbb
or
loope
sub
out
loopne
test
and
sub
pop
mov
ds
and
sub
sahf
cmp
mov
sbb
inc
cli
pop
mov
push
mov
or
fsubl
xchg
or
addr16
aam
xor
add
orb
clc
data16
mov
in
cmpsl
cmp
nop
mov
sub
xlat
repnz
add
maskmovq
dec
and
sub
subb
es
dec
sbb
addr16
jle
adc
and
mov
mov
cmpsb
xor
pop
into
sbb
out
pop
inc
push
dec
popa
and
xor
call
jecxz
cli
ja
arpl
leave
aam
jne
outsl
cs
sub
mov
add
fldt
mov
jae
ficompl
leave
mov
mov
sub
rcrb
stos
scas
mov
movsl
sbb
jno
push
icebp
xchg
outsl
and
jge
mov
mov
pop
adc
xchg
mov
test
es
adc
ljmp
insb
lahf
stos
jmp
and
sbb
mov
dec
jmp
sbb
sub
movaps
lahf
scas
add
push
out
repnz
shlb
lcall
out
sub
stos
sub
ret
mov
inc
adc
jmp
or
lds
jecxz
ljmp
cmpl
js
test
mov
fisttps
decb
bound
rcll
lret
xor
and
cmp
rcrl
arpl
das
add
testb
lock
aad
repnz
xchg
xor
ficoml
mov
mov
data16
push
movsb
and
loopne
xchg
arpl
xlat
pop
mov
fs
rcll
dec
mov
insl
mov
icebp
aam
es
dec
mov
and
xor
or
add
outsb
pop
or
mov
xor
addr16
pop
daa
or
lret
les
and
movsl
fsubrp
cli
dec
dec
jecxz,pt
leave
cltd
stos
push
xchg
or
xor
fs
mov
add
and
pop
jne
sti
pop
xchg
mov
or
mov
int3
jg
fs
test
pushf
orl
cmp
pusha
push
jno
xlat
out
test
into
pop
mov
loopne
and
mov
xchg
pop
mov
and
js
mov
mov
adc
das
add
out
xchg
push
mov
and
and
stos
sub
insl
push
dec
leave
mov
ljmp
pop
lds
lock
dec
enter
ss
adc
roll
mov
and
xor
daa
or
pushf
es
and
sub
enter
cmp
cmp
xor
push
xchg
std
xchg
repnz
mov
addb
fadd
popa
dec
or
push
mov
movsb
imul
fisttpll
imul
sbb
lret
and
cmpsb
dec
popf
add
and
mov
cs
cmp
sub
scas
or
inc
dec
jb
or
jge
sbb
pop
mov
and
fcmovnb
movsb
sbb
lret
aaa
int3
in
and
cmp
jg
dec
mov
mov
fwait
pop
loop,pt
sbb
lret
inc
lods
jno
pop
mov
fbld
in
int
push
loop
push
sbb
seta
sub
in
stos
pop
cs
insl
stos
fcmove
repz
sbb
in
inc
lods
jns
push
xchg
je
nop
pop
loop
iret
jbe
add
ja
addr16
adc
bound
fistpl
jge
outsb
pop
mov
push
sbb
in
sbb
sbb
sub
lock
or
pop
subb
aad
and
sub
insl
fdivs
mov
repz
push
sti
mov
mov
sub
test
test
addr16
sbb
lret
fcompl
sub
ja
rcrl
sahf
xor
fists
fcomi
sbb
sbb
in
iret
mov
les
inc
loope
in
dec
xchg
push
xor
or
jns
sbb
test
push
les
jp
jae
fs
jno
cmpsb
xor
fisttpl
push
stos
sub
push
dec
aam
cmp
stos
jp
inc
fstps
icebp
push
and
sahf
jns
xor
mov
add
dec
jmp
test
adc
inc
push
cmp
add
inc
in
jns
insb
xchg
adc
and
stos
sub
test
cvtpi2ps
imul
jo
pop
jp
lea
dec
or
js
sub
sbb
cli
xlat
aaa
repz
xor
cmp
sub
fcompl
mov
out
sub
scas
pop
xchg
das
mov
sbb
inc
and
mov
pop
or
sbb
xlat
and
ljmp
popl
push
filds
cmpb
loope
ljmp
lret
sti
sub
dec
pop
pop
jl
test
lea
mov
push
mov
or
or
stos
jp
push
sbb
popa
push
push
push
ljmp
test
popa
adc
outsb
pop
jne
pop
or
xchg
cmp
pop
fwait
adc
subb
mov
and
push
mov
ret
mov
das
xchg
sbb
sbb
push
sub
fucomip
jmp
jge
call
add
push
repnz
xchg
jmp
std
jnp
repnz
insl
ljmp
pusha
pop
mov
icebp
sbb
jne
pop
ret
movsb
jl
adc
mov
sahf
mov
pop
push
mov
ret
fcomip
jno
jbe
das
dec
pop
rorb
fs
jns
stos
lods
and
mov
fldenv
xlat
icebp
cs
and
sub
in
and
sbb
outsb
pop
cli
stos
push
pop
adc
and
stos
sbb
inc
hlt
adc
push
repnz
shlb
xor
js
mov
push
adc
add
popf
jecxz
push
cmp
cs
iret
xchg
stc
es
adc
or
nop
sbb
add
pop
call
pushf
push
out
cwtl
adc
rolb
stos
loopne
or
or
add
add
push
add
push
add
sub
push
adc
push
cld
sub
enter
sbb
cmpl
or
ss
fsubp
xchg
sub
call
mov
cmp
out
insl
sbb
and
mov
cmp
add
arpl
cmc
call
jb
push
cmpsb
jo,pt
jecxz
imul
cmpsb
lock
stos
push
or
notb
xchg
out
dec
cmp
stos
mov
stos
cmp
pop
sub
lds
shll
notl
jge
inc
sarb
mov
and
cltd
sub
mov
adc
dec
mov
and
sbb
aam
mov
sbb
mov
mov
mov
roll
addr16
cmpsl
pop
mov
mov
push
and
cli
incb
sti
mov
and
and
adc
cli
mov
xchg
js
repnz
add
pop
push
sbb
gs
out
and
pop
testb
and
aam
sub
pop
xor
bound
sub
shlb
mov
mov
and
and
inc
dec
inc
aam
ja
cli
enter
data16
mov
jno
inc
adc
adc
adc
clc
and
out
xchg
cltd
sub
cmp
pop
pop
fs
fisttpll
stos
call
aam
mov
outsb
push
pop
sub
adc
dec
pop
cli
cli
imulb
pop
into
pushf
fstps
xchg
sbb
xchg
lods
and
aam
jmp
stc
js
pop
xchg
daa
mov
es
fcomps
push
dec
adc
icebp
adc
sbb
jmp
cmp
movsb
dec
and
and
sub
sub
clc
loop
sub
lret
xor
adc
adc
ret
rclb
aam
lods
push
in
mov
call
data16
aad
lds
sbb
or
int3
call
push
fwait
or
ljmp
and
jae
mov
stc
icebp
imul
outsb
mov
fsubrs
fcoms
int3
adc
movhps
push
and
cmp
test
lea
xchg
jb
xchg
lods
lahf
and
pop
frstor
push
int
rcr
sub
repnz
push
hlt
pop
flds
or
mov
call
mov
cmpsl
adc
xchg
add
iret
push
jmp
sbb
push
out
jne
lea
ret
mov
jg
mov
loopne
push
mov
js
sub
and
sub
fidivl
mov
lcall
xorl
nop
or
es
sbb
or
fwait
into
sub
popf
hlt
inc
adc
lcall
inc
pop
and
add
mov
cltd
mov
iret
jnp
idivl
push
cmpsl
and
cs
pop
jg
out
es
adc
adc
and
jl
and
fisttpl
pop
icebp
test
mov
lret
scas
and
push
cmp
add
call
add
or
test
or
leave
xchg
pop
popa
test
cwtl
sub
mov
das
mov
mov
in
sub
mov
fwait
add
mov
movsb
add
xchg
jecxz
das
adc
sbb
lock
pop
mov
push
push
adc
jge
out
or
fistpl
xor
pushf
inc
jo
push
add
addr16
stos
push
sub
and
inc
or
in
test
nop
sbb
push
aam
in
inc
xchg
jo
sub
xchg
nop
xchg
pop
sub
pop
mov
add
push
xchg
xor
xor
dec
lahf
clc
mov
sub
cmp
jno
sbbb
pop
mov
xchg
mov
aad
jle
loope
ret
mov
cmc
jecxz
addb
rcl
sub
add
jmp
inc
ljmp
push
mov
xchg
imul
or
lahf
mov
repnz
xchg
addr16
insb
fsubl
stos
movsb
incb
or
xchg
sub
ficoms
jge
cltd
aam
xchg
adc
mov
idivl
ret
adc
sbb
fcoms
sub
stos
shlb
dec
scas
fadd
lret
movsl
outsl
sbb
sub
mov
xor
clc
rolb
call
jbe
iret
push
jle
and
mov
pop
jmp
mov
sub
cld
cmp
sub
test
cli
xor
mov
aam
xchg
mov
jp
jae
mov
or
stos
fistps
test
daa
push
inc
scas
or
movb
sub
mov
popf
daa
lds
clc
mov
mov
ss
push
push
and
ret
ja
inc
out
orl
icebp
rcll
pushf
inc
lea
adc
mov
pop
add
ljmp
cli
pop
or
cmp
xor
fisttpl
push
adc
repnz
sahf
cmovg
mov
inc
pop
push
pop
sub
inc
and
cwtl
lret
out
push
mov
xchg
je
jnp
bound
enter
mov
fstps
xchg
sub
aam
jl
pop
push
ds
mov
cmp
iret
lea
xor
mov
or
ret
pop
and
loopne
sbb
mov
iret
arpl
and
add
inc
xchg
fwait
sbb
fwait
add
inc
insb
lret
je
orl
addr16
mov
lret
dec
xchg
icebp
movsl
setb
pop
mov
pushf
je
push
add
lock
movsl
or
push
sbb
pushf
int3
push
aam
sbbl
das
aad
push
js
iret
xchg
sbb
add
in
cmp
data16
sbb
or
push
lret
pop
dec
cmp
push
adc
ficoms
stos
jnp
sbb
pop
mov
sub
sbb
popf
and
fcmovbe
inc
cwtl
pop
in
enter
lret
stos
dec
or
das
fistps
loopne
dec
sbb
fmull
or
nop
sbb
dec
xchg
aad
push
iret
mov
jnp
push
aas
rcrb
jae
sbb
and
clc
jle
mov
pushl
push
outsb
add
in
jmp
mov
cmp
and
sub
add
lods
mov
scas
and
sub
fiadds
pop
mov
xor
inc
or
fisubrs
pop
loope
sbb
and
dec
sub
mov
arpl
call
js
jl
andb
pop
pusha
fbld
push
std
sbb
sbb
sbb
and
lret
sti
in
xchg
push
pop
jmp
xlat
rclb
icebp
xchg
adc
mov
pop
cmp
mov
movsb
iret
mov
cmpsl
clc
inc
hlt
rcrb
dec
popa
pop
and
lds
sbb
loope
movlps
push
iret
jecxz
aaa
fs
xchg
sbb
adc
loope
in
mov
push
nop
push
test
jmp
stc
outsb
pop
call
add
push
je
cmpsb
subl
and
test
mov
mov
push
ret
mov
push
pop
pop
pop
aam
cli
loopne
or
and
clc
test
and
lds
pop
int3
ret
jmp
sbb
data16
add
fisttpll
jecxz
xchg
fsubrl
js
xor
or
stc
or
fdivrs
mov
mov
lret
dec
jl
lret
xchg
cmp
xchg
jp
jne
and
lret
iret
in
jge
pop
leave
das
imulb
or
mov
ret
cmp
fistl
sub
mov
sbb
enter
icebp
pushf
or
mov
xchg
push
xchg
clc
movsb
lret
and
lret
lods
lret
push
jbe
adc
test
pop
push
xchg
iret
loope
push
xchg
xchg
int
mov
insl
mull
lret
fs
sub
insl
pop
loope
push
bnd
cmp
jecxz
popa
pop
adc
add
add
or
mov
bound
in
xchg
pop
loop
sbb
inc
hlt
push
jle
xchg
loope
adc
cmpsl
rol
lret
mov
fildl
jb
test
push
xchg
and
insb
xor
adc
sub
not
sbb
mov
test
fisubl
ficomps
mov
adc
or
cwtl
lret
sbb
jo
lods
sub
sbb
pusha
mov
and
xor
or
pop
movsb
scas
insb
lcall
jl
and
sub
xchg
ja
out
adc
data16
nop
or
sbb
or
lea
mov
sbb
sub
push
jmp
nop
cmp
movups
sub
test
lret
sbb
enterw
xrelease
sti
pushf
mov
cmp
push
test
in
dec
mov
sub
loopne
lret
sbb
cmpsl
xchg
sahf
fsubs
aad
in
adc
gs
jle
divb
repz
sbb
ja
insl
insl
xchg
xor
xchg
aad
sbb
sti
add
lock
push
add
enter
icebp
scas
hlt
imul
fisttpll
lcall
jae
push
in
js
push
fdivrs
mov
or
incb
lea
jno
addr16
ljmp
nop
enter
cs
pop
jo
sub
cmpsb
mov
je
cmp
sub
or
adc
addr16
test
jmp
aas
hlt
rolb
adc
or
cmpsl
pop
jl
hlt
sub
ficoms
dec
lcall
sbb
cmp
lods
fldt
sahf
dec
jecxz
sub
pop
shl
xchg
movsl
add
adc
outsb
pop
cmp
lahf
psrld
pop
or
ljmp
add
gs
icebp
out
shrb
andb
cmpsl
and
sahf
pop
sub
mov
imul
sti
outsl
xchg
shl
cmp
or
xchg
jb
mov
test
xor
cmp
neg
cwtl
or
int
nop
lock
mov
push
push
fistps
movsb
jg
dec
std
out
in
or
imul
outsb
sub
jne
or
daa
in
mov
jbe
xor
mov
or
xchg
mov
xchg
pop
mov
andl
loope
dec
mov
mov
mov
jnp
xor
shl
or
shll
xor
shrl
pushf
sub
sub
stos
jnp
xor
mov
je
or
pop
pop
daa
loope
and
inc
ja
sbb
push
mov
jb
adc
bound
jne
jns
out
or
test
idivl
and
push
pusha
popa
jb
pop
inc
sub
je
jns
sub
push
lret
push
fmull
lock
mov
lret
and
sbb
inc
fwait
push
andb
mov
mulb
fistpll
mov
mov
jmp
aam
push
add
jmp
std
rolb
pop
js
iret
jno
xor
stos
or
imul
mov
bound
and
xchg
aaa
mov
xor
icebp
lock
gs
repnz
fcomps
dec
add
lods
and
pop
cmpsb
repnz
call
adc
ds
jge
jecxz
pop
and
add
cs
sbb
xor
je
pop
aaa
in
aad
dec
ja
test
push
adcl
mov
dec
test
lcall
cltd
jl
push
push
pop
fiaddl
and
adc
xchg
sub
pop
bound
adc
out
cmp
pusha
sub
sarb
mov
movsl
cmpsl
sbb
lret
inc
push
ds
repnz
punpcklbw
adc
adc
lds
movsb
arpl
setne
inc
mov
mov
cmp
sub
mov
adc
sub
cmp
sub
lret
push
pushf
aam
stc
daa
inc
inc
rcrl
xchg
sub
mov
pop
pushf
push
mov
cmp
sahf
outsb
test
out
sub
fucom
sbb
cs
mov
mov
ficoms
mov
jecxz
add
or
repz
sub
pop
outsb
daa
adc
mov
fwait
and
jbe
mov
inc
in
mov
or
jg
xchg
pop
mov
or
adc
scas
mov
sbb
enter
pushf
mov
rorl
mov
or
jo
jl
sub
adc
xor
sub
cld
enter
aam
gs
sub
mov
ja
sbb
dec
push
jle
add
out
sub
dec
push
adc
adcb
pushf
or
les
ljmp
test
rcrl
ja
jl
xor
and
pop
lcall
es
xor
int
mov
out
pop
cmp
imul
push
xchg
xchg
cmpsl
and
repz
cld
aam
dec
xchg
jb
cmp
fldl
jecxz
cmp
add
pop
cli
int
push
pop
adc
sub
xchg
out
lods
xchg
sub
xchg
inc
cmc
in
inc
cmpsl
push
shlb
enter
mov
test
in
icebp
jnp
mov
stos
fcoms
lret
outsl
push
xchg
imul
add
xlat
es
insl
push
lret
hlt
lock
mov
pavgw
sbb
aad
dec
pop
sbb
xchg
cmp
push
push
stos
push
lea
fsubl
mov
push
mov
mov
bound
cli
mov
push
and
cmpb
cmp
or
inc
int
lret
mov
idivl
xor
sbb
inc
aad
nop
pop
fisubl
repnz
dec
ficoml
sbb
fisubl
push
and
jl
xor
and
loop
dec
jge
pop
lret
js
lea
xlat
jo
mov
mov
xor
in
loopne
and
cmp
outsb
xchg
cmpsl
enter
bound
das
aad
shll
dec
ret
cmp
jmp
sti
leave
and
popa
cmp
adc
dec
sub
push
dec
xchg
out
loop
in
jo
mov
sahf
cltd
cmpsl
insb
in
pop
fdivr
fwait
es
xchg
loopne
adc
or
mov
mov
push
int
pushf
subb
push
mov
dec
repz
stos
push
dec
pop
pop
popf
push
movsl
sbb
cmp
sub
xchg
movsb
cmp
adc
sub
push
adc
jo
inc
inc
sbb
dec
push
lods
mov
data16
ljmp
push
rol
dec
ret
in
cmpsl
ret
xchg
and
sahf
add
daa
int
and
scas
cld
cmp
adc
enter
mov
push
jae
cmpsl
pop
pop
cmp
test
je
int
test
sbb
loop
out
mov
pop
and
pushf
fisttpl
adc
fstpt
xchg
or
add
das
in
mov
pop
adc
mov
sub
sbb
sbb
xchg
stc
in
repnz
jmp
cli
lcall
scas
sbb
cltd
sub
cwtl
mov
gs
leave
mov
ja
push
ss
or
mov
xchg
sub
scas
pop
outsl
push
xor
sbb
and
cmp
lock
pop
fwait
or
int
pop
ficompl
fidivrl
sti
push
or
lcall
push
hlt
push
adc
mov
inc
jb
cmpsl
or
jmp
mov
fdivrl
inc
inc
sub
test
ret
fisubs
xor
jae
cld
adc
into
hlt
adc
jge
sub
into
and
stos
cwtl
lcall
imul
lods
push
dec
test
lock
lds
mov
pop
into
repnz
pop
xchg
insl
push
lods
repnz
sbb
lahf
xchg
ja
or
add
sub
sbb
sbb
shl
xor
jns
cmp
sub
call
cwtl
lea
jmp
int
lret
arpl
hlt
sub
xlat
mov
cli
pushf
js
jl
sub
ljmp
sub
cmp
imull
push
out
cmp
sti
fadd
mov
jmp
pop
enter
out
fsubl
mov
sub
mov
and
jg
out
mov
cmp
or
test
cli
sbbl
pop
push
rdmsr
pop
mov
fwait
movsb
js
xchg
jmp
in
xchg
stos
lock
xchg
stos
dec
or
stc
and
mov
xchg
cmpsb
aam
pusha
pop
jecxz
mov
in
iret
test
jmp
je
lea
add
add
lods
sti
lcall
insl
loope
push
or
sbb
pushf
movsl
ljmp
inc
mov
lret
ret
jecxz
adc
xor
lret
cmpsl
mov
sbb
add
cmpsb
iret
jmp
in
mov
pop
out
mov
mov
pop
into
xchg
mov
jno
rorl
cmp
push
mov
stos
sbb
mov
sbb
push
mov
xchg
push
aam
and
pop
xchg
add
push
adc
daa
pop
mov
addr16
dec
movsl
sub
inc
pusha
add
sti
sub
mov
insb
aam
push
cs
dec
sub
outsb
mov
scas
mov
add
outsl
lret
loopne
sbb
sub
mov
or
pop
daa
xchg
data16
adc
mov
fwait
dec
add
cli
ficompl
inc
mov
loope
lods
fmuls
jno
orb
fs
aam
test
dec
sub
fdivl
inc
insl
add
cli
sub
lret
repnz
call
cmpsl
jb
out
in
jns
fsincos
lret
lock
in
add
std
movsb
mov
arpl
movsb
pop
xchg
push
cwtl
pop
lock
aad
mov
cwtl
and
popa
scas
sbb
rcll
mov
loop
sub
sub
jbe
int
push
push
nop
sub
push
pop
push
mov
imul
iret
sbb
jmp
sbb
jg
leave
sbb
sub
cwtl
cmp
xor
xchg
push
in
and
jmp
jg
mov
repnz
insl
scas
fsubrs
stos
arpl
sub
jp
repnz
jmp
adc
jno
hlt
int3
repnz
insl
adc
imul
repnz
pushf
scas
and
clc
and
cmp
adc
shrl
outsl
icebp
int
movsb
outsb
movsl
or
cli
fisubrl
lock
daa
popa
js
stc
lods
ret
xchg
cmpsb
leave
xchg
test
xchg
pop
pop
call
and
cs
jns
mov
repnz
jnp
adc
inc
sbb
jl
lcall
fimull
inc
mov
loope
xor
inc
mov
mov
mov
lcall
xlat
push
imul
clc
or
or
cmc
cwtl
insl
stos
xchg
or
jecxz
rorl
fs
lret
inc
das
mov
mov
mov
or
add
xor
or
in
cmpsb
or
push
pop
rorb
insb
jb
mov
cmpsb
scas
in
mov
push
ja
and
sub
and
or
fstpt
and
nop
lea
or
dec
in
imul
mov
aam
sbb
and
ljmp
xchg
inc
sub
push
daa
aaa
loopne
mov
call
or
lock
les
rclb
and
adc
sub
std
outsb
shll
rcll
pusha
add
push
stos
sbb
fldt
lds
out
jno
cld
leave
test
repnz
sahf
lea
and
push
jmp
xchg
lods
mov
mov
push
mov
jns
aad
jge
mov
mov
lods
dec
push
xchg
bound
and
pop
mov
pop
add
imul
or
jge
push
and
insl
sbb
ficoml
push
dec
aam
cmp
jnp
jbe
adc
xchg
int
lret
pop
insb
cmp
or
mov
lea
dec
aas
jbe
push
push
pop
pop
aam
mov
loop
imul
push
aas
lock
add
sub
mov
cwtl
and
cmp
lea
push
adc
inc
shl
and
lret
lcall
cmpsl
sub
jl
popf
out
dec
lret
daa
and
xlat
repnz
pop
mov
jg
mov
cmp
fnsetpm(287
in
mov
sub
pop
aas
jecxz
dec
inc
cmp
bnd
add
jb
aad
jmp
xchg
dec
push
pusha
sub
enter
mov
loope
popf
inc
mov
not
push
into
and
sub
xchg
xor
in
add
dec
outsb
and
xchg
sbb
add
or
fwait
leave
fisttpl
stc
insl
les
mov
lret
jmp
pop
sub
btc
pop
sub
icebp
mov
jb
sbb
outsl
imul
pop
mov
daa
xlat
jb
popa
and
daa
icebp
jl
lock
jne
sub
mov
fdecstp
mov
stc
sahf
and
mov
bound
call
sub
sbb
sar
test
aad
les
subb
repnz
repz
jge
add
lock
and
or
cmp
dec
jmp
xlat
scas
add
push
aam
xor
inc
mov
xor
ficoms
or
ja
xor
data16
call
mov
lret
mov
cmpsb
pop
pushf
pop
push
sbb
jecxz
out
neg
sti
cmp
lods
rclb
sub
cmpsb
repnz
dec
into
incb
jne
shll
cmp
in
lcall
clc
jne
mov
mov
cmc
fildl
xchg
pop
push
mov
fldl
pop
movsl
movb
inc
arpl
in
adc
and
push
in
je
cmp
cmp
insl
jle
test
mov
sbb
inc
jmp
mov
lcall
sbb
sub
xor
imul
sub
int3
adcb
mov
popf
mov
hlt
enter
stos
lret
inc
in
sub
jmp
push
xchg
mov
lcall
or
sbb
or
jmp
dec
or
bound
jmp
icebp
push
rcrb
jns
sbb
addr16
jp
jnp
sbb
ret
lcall
repnz
pop
cmpsl
pusha
repnz
sub
out
add
adc
and
and
or
pop
dec
addr16
and
push
adc
and
add
loopne
push
daa
add
and
imul
test
and
out
cwtl
test
stos
inc
add
pop
push
jmp
and
test
or
jmp
ljmp
sbb
fidivl
cli
sbb
and
repz
js
in
sbb
xchg
pushf
and
in
repnz
mov
sub
and
test
and
cwtl
xchg
cmpsb
in
adc
in
fwait
cmp
sbb
mov
push
inc
fisubl
les
pop
push
jle
inc
fwait
adc
pushf
loopne
je
enter
test
sbb
dec
popa
sub
mov
enter
shrb
shrb
shrb
shlb
xchg
mov
xchg
mov
xchg
mov
xchg
add
sar
pushf
sbb
jp
fs
mov
fst
cmp
mov
sbb
pushf
sbb
loopne
out
aam
and
and
repnz
xchg
sbb
gs
out
rolb
movsl
sub
and
add
sub
repz
add
sub
clc
push
add
sbb
push
sbb
cmpsb
repnz
loop
mov
add
sbb
sti
shlb
popa
popa
cmpsb
scas
out
pop
stos
mov
xchg
and
gs
test
daa
loope
jbe
sub
mov
pushf
loope
arpl
or
mov
pop
or
mov
jb
and
sbb
ja
lea
les
ja
mov
ljmp
add
adc
mov
pop
xchg
mov
pop
xchg
mov
push
adc
nop
out
sub
mov
xchg
adc
sub
mov
xchg
adc
sub
fwait
test
xchg
mov
pop
xchg
mov
pop
cltd
loop
or
sub
imul
sbb
push
xor
in
call
and
sub
popf
jbe
les
ja
sahf
cmpsl
and
cmp
lahf
in
shll
mov
loop
and
add
sub
ret
mov
int
outsl
lahf
sub
xor
mov
dec
out
jnp
add
hlt
adc
xchg
push
daa
clc
xorl
int3
jl
iret
ret
adc
cs
pop
jmp
repnz
and
push
push
push
les
addr16
or
or
push
repnz
push
in
js
test
out
inc
mov
sar
repnz
add
add
sub
movsl
sub
aam
xchg
addr16
jb
test
je
and
hlt
int3
jo
sbb
add
jns
sbb
and
jle
push
and
xchg
mov
or
xchg
lret
pop
xchg
mov
adc
pusha
mov
sub
xor
or
pop
rcll
mov
loop
cmp
adcb
ds
js
mov
lcall
adc
jmp
repnz
in
shr
or
adc
inc
dec
xlat
mov
sub
xchg
popa
inc
shrb
push
fdiv
xacquire
aas
cmpsl
pop
push
scas
aas
outsb
dec
lret
push
gs
invd
ja
or
movsb
sbb
shlb
jno
mov
jo
sbb
pop
add
push
test
stos
call
ret
addr16
cs
popf
loopne
negb
cmp
jl
pop
mov
ficoml
mov
sti
fdivr
xchg
jbe
in
in
outsb
pop
ss
out
addr16
sub
aas
aam
add
xchg
mov
outsl
in
xchg
xchg
sub
xor
or
lret
pushf
iret
push
add
jmp
jnp
stos
push
xchg
adc
dec
sti
xor
adc
call
inc
push
cmpsb
imul
cld
ljmp
xchg
hlt
jae
mov
movsl
push
addr16
add
in
mov
stc
lret
cli
inc
stc
inc
out
popf
xchg
mov
mov
aam
imul
mov
js
mov
stc
cli
cmp
inc
mov
flds
and
or
dec
or
jp
xor
test
jnp
ret
and
and
iret
sbb
fwait
mov
jp
bound
jmp
pop
adc
ss
ja
mov
or
pop
mov
outsl
insl
dec
ja
inc
lea
lea
out
dec
hlt
movsb
push
lock
adc
cli
sub
insl
iret
cmpsb
or
pop
adc
test
enter
adc
push
push
aaa
and
data16
das
scas
inc
adc
push
ja
mov
pop
and
shl
enter
shrl
dec
into
and
sbb
adc
insl
lea
das
pop
daa
hlt
sbb
push
sub
ret
jg
xorb
pop
mov
adcl
rclb
insb
ror
ja
or
mov
pop
pop
shr
test
pop
lock
shrb
cwtl
not
pop
mov
daa
sbb
jbe
dec
cmp
xor
in
daa
fdivr
lock
xor
lds
rclb
call
sbb
xchg
dec
daa
push
sbb
xchg
and
push
fldt
pop
fisubrs
mov
xor
lret
sub
std
int
cli
fistps
and
into
stos
dec
or
inc
and
jns
cmp
into
push
test
fisubl
push
popf
sub
sarl
lcall
and
mov
lahf
pop
mov
jmp
sub
lods
push
xor
cmpsb
rcl
dec
iret
daa
test
push
lahf
cwtl
pop
imul
adc
jno
sti
pushf
push
mov
lret
lock
mov
scas
scas
mov
int
and
fsts
or
xor
pinsrw
sbb
aaa
add
or
xchg
and
inc
lret
shlb
push
cmp
shrb
mov
sub
ss
mov
jecxz
mul
sbb
mov
call
sti
sub
sub
in
popa
push
ja
sbb
xor
aaa
add
pop
sbb
in
movsl
dec
lcall
xchg
dec
or
push
in
testb
leave
sbb
or
sti
or
xor
jo
xchg
mov
lret
jmp
call
fimull
in
inc
rorl
cltd
adc
les
adc
mov
mov
out
stos
fsubr
sbb
ljmp
and
mov
lcall
insb
xchg
pop
sub
mov
add
mov
sub
aaa
sbb
lahf
scas
sub
stc
or
adc
js
sub
in
aas
hlt
mov
pusha
push
adc
test
jecxz
lea
int
and
outsl
out
dec
lock
mov
movsb
push
and
in
fimuls
xlat
repnz
cmp
jb
je
hlt
pop
push
xor
or
lcall
les
scas
mov
or
cmpsl
push
or
mov
call
popa
test
jnp
and
aaa
fsubs
data16
negl
scas
push
jg
lods
add
es
mov
push
mov
in
mov
push
loop
mov
mov
ja
dec
add
push
jle
or
sub
iret
inc
add
stc
lcall
push
sub
lahf
iret
in
rol
add
loopne
dec
popf
cmp
sub
and
lods
dec
ljmp
adc
dec
jge
xlat
rcll
jno
sbb
xor
jle
mov
pop
push
mov
xchg
out
add
vrsqrtss
in
xchg
jb
je
cli
stos
push
push
sub
cmp
cmpsl
lret
sub
lods
jle
stos
sahf
sub
pop
les
mov
xchg
push
cmp
inc
inc
jae
inc
cwtl
cmp
adc
mov
mov
cmp
cmc
adc
fwait
and
mov
or
push
addr16
nop
icebp
popa
jns
gs
orb
mov
mov
mov
lds
hlt
or
adc
and
and
je
sbb
jmp
cmpsl
jmp
lret
sub
in
xor
push
dec
mov
pop
xchg
and
bnd
xchg
out
cmpsl
and
daa
sbb
pop
repnz
addr16
xchg
mov
test
push
fisubs
in
insb
add
fcoms
push
in
insl
push
movsb
push
imul
in
mov
dec
inc
sbb
sahf
mov
lea
je,pn
mov
arpl
pop
cld
scas
lret
pop
outsl
mov
sub
aam
xchg
sub
aas
scas
xor
fsubrs
cltd
mov
test
fwait
sti
ficomps
ljmp
xor
and
and
pushf
negl
fdivs
and
notl
adc
dec
push
sub
cld
pop
enter
add
cmp
insb
ficompl
jns
dec
fsubrl
adc
aam
lcall
adc
lods
mov
decb
xor
adc
pop
fwait
pop
test
sub
dec
pop
push
xor
sub
adc
pop
mov
int3
sub
lock
push
hlt
jp
ja
dec
sub
cmpsl
pop
and
push
jmp
mov
pop
cmp
in
jl
xchg
out
mov
sub
in
mov
pop
sub
arpl
xchg
jl
lods
jb
test
sbb
mov
fistpl
mov
subl
sbb
cmp
or
mov
xchg
mov
lret
and
in
leave
aam
pop
push
jb
mov
inc
and
sti
clc
add
adcl
cmp
sub
mov
push
test
ss
dec
test
test
jmp
push
xchg
pop
mov
das
stos
stos
or
sbb
stc
cmpsl
inc
xchg
bound
cmpsl
dec
cmp
mov
pop
cwtl
pushf
mov
stc
fwait
sub
add
fisubs
iret
push
loopne
xchg
mov
dec
in
inc
lock
mov
iret
mov
and
dec
mov
cmpsl
xchg
pusha
in
sub
push
mov
xchg
mov
daa
sbb
cmp
xlat
mov
adc
push
inc
jae
mov
sbb
inc
es
mov
hlt
mov
movl
adc
or
xor
mov
das
sbb
jmp
clc
rcrl
mov
subb
inc
adc
adc
popa
das
mov
sub
shr
stos
out
call
lock
addr16
and
test
repnz
pop
ds
cmp
cwtl
jmp
cmp
and
push
xlat
mov
daa
cwtl
js
pop
sub
adc
inc
mov
cmp
aaa
cli
bound
cmp
push
push
sub
sub
add
stos
cmc
sub
fcom
mov
movsb
aam
xorl
xor
pop
sbb
aam
idivl
fs
mov
nop
jno
mov
ds
xor
xchg
cmp
sbb
pop
sbb
jnp
loopne
sbb
sub
xor
sub
pop
adc
push
scas
xchg
or
and
add
xchg
inc
xorl
inc
jp
adc
pop
cld
xchg
xorb
fidivrl
out
mov
fwait
and
clc
pusha
in
pop
clc
jbe
sbbb
dec
mov
ljmp
dec
adc
sbb
inc
xor
and
pop
divl
or
pop
pop
add
lcall
adc
mov
push
je
mov
add
movsb
mov
add
xchg
pop
sub
xchg
rclb
and
lods
insl
popf
in
outsb
xor
push
arpl
or
out
cmp
fsubl
adc
sti
popa
cmp
mov
pusha
adc
movsl
movsl
mov
pusha
adc
les
mov
daa
rorl
xchg
ss
adc
push
push
stc
sub
mov
test
mov
das
sbb
sub
sbb
adc
test
adc
cs
ljmp
das
pop
mov
lea
lea
xchg
xlat
and
xchg
cmp
sub
cli
pop
ficoms
addr16
nop
push
sbb
push
stos
mov
jecxz
out
in
rcr
aaa
test
pop
mov
or
cmpl
adc
test
push
pop
iret
mov
mov
repnz
push
xchg
es
adc
ljmp
xchg
scas
out
jecxz
cmp
mov
mov
shrb
add
lods
or
sub
jnp
mov
jb
cmc
push
cmpl
mov
into
jne
sbb
js
les
cmp
pop
js
loop
movsb
or
sbb
xor
or
push
pop
xor
inc
push
popa
sbb
push
sbb
or
dec
mov
mov
ljmp
movsb
jnp
stc
pop
mov
inc
jmp
ret
es
leave
and
notl
les
lret
cmpsl
adc
sahf
leave
test
lcall
ljmp
lods
popa
cmp
xlat
je
imul
and
rcll
outsl
fs
jns
sub
aaa
xchg
sbb
xchg
fldcw
ret
jmp
mov
mov
outsb
pop
adc
std
into
movsb
push
cli
mov
xlat
mov
pop
inc
push
xorl
cs
shrl
push
push
ljmp
xchg
subb
inc
sub
and
loope
and
xchg
imul
adc
and
repnz
in
test
testb
out
add
sbb
scas
dec
lods
jmp
loopne
movsb
xchg
bound
jecxz
sbbb
adc
out
add
and
sub
leave
adc
lock
sub
and
daa
or
xchg
std
pushf
jp
in
cltd
push
cltd
fnstsw
sbb
call
sub
sbb
and
xchg
pop
shll
repz
sub
pop
ds
sub
loopne
adc
sub
aam
push
lret
aaa
sub
loopne
cwtl
pop
and
loopne
and
in
div
pusha
xor
sub
and
adc
sub
outsl
fwait
sbb
js
sbb
mov
mov
push
adc
testl
popa
dec
sub
popa
into
and
fwait
popa
cmp
out
stc
cmp
mov
loop
mov
flds
and
mov
ds
sti
sbb
mov
xchg
inc
sbb
mov
sub
aam
mov
repnz
in
pop
cli
or
ret
lock
push
aaa
sahf
sub
out
sbb
sbb
and
stos
inc
add
call
push
pop
lret
xor
pop
dec
mov
cmpsb
icebp
fbld
push
mov
loope
movsl
rclb
xor
pop
mov
cmpsl
popa
jmp
out
mov
test
sub
decb
lret
push
loope
outsl
and
mov
sub
and
mov
adc
and
outsb
pop
mov
and
push
lret
xor
pop
repnz
sub
jg
pusha
jae
cmovp
xchg
adc
and
fwait
adc
xchg
jecxz
xchg
out
mov
xchg
or
iret
addr16
cmp
or
cltd
out
clc
lcall
aam
addl
mov
mov
hlt
stos
leave
mov
imul
shr
into
lret
test
mov
loopne
fistl
out
test
push
cmp
pushl
sub
inc
insl
mov
xchg
std
movl
addr16
mov
cmp
ss
iret
enter
imul
hlt
push
fldt
add
add
add
push
stos
adc
shrb
mov
sub
mov
push
mov
imull
cmc
rcl
sub
fidivl
pop
icebp
cmp
sbb
jae
testl
shll
push
sub
ret
cmp
mov
or
mov
and
pop
js
add
inc
cmpsl
sbb
sub
bound
pusha
ss
mov
call
add
adc
shrb
cli
xor
push
pcmpeqb
xchg
mov
cmpsl
gs
daa
dec
stos
jl
dec
test
or
mov
pop
loope
aam
inc
cwtl
sar
pop
sub
aaa
cs
cltd
add
sub
mov
mov
movsb
adc
or
sar
aam
scas
add
add
lret
test
push
lea
fistl
movsb
iret
loopne
popf
test
popf
or
push
out
dec
ret
in
jnp
fs
inc
sahf
xchg
pusha
jno
test
fs
cmpb
push
ljmp
mov
repnz
out
mov
leave
enter
pop
inc
add
mov
pushf
leave
dec
lahf
daa
or
pop
lods
dec
cmp
or
mov
sbb
mov
sub
push
inc
lock
and
jle
or
test
shl
scas
cmp
fcomp
jmp
andb
sbb
and
and
shlb
stos
imul
mov
fisubrl
pop
add
mulb
inc
adc
inc
adc
enter
imul
or
xlat
or
add
dec
mov
sbb
or
xacquire
jecxz
adc
cmp
mov
sbb
and
jns
pushf
sub
imul
adcl
rcll
mov
testl
jp,pt
aaa
test
test
daa
sub
sub
in
fsubs
int3
scas
cmpsl
lcall
gs
jmp
push
push
dec
cmc
or
jns
sti
sub
cmp
ja
sbb
cld
or
jnp
lock
xchg
scas
dec
lcall
jno
adc
gs
mov
out
cmpsl
push
xchg
sub
std
jge
in
jb
inc
test
stos
sbb
daa
dec
mov
xor
adc
mov
mov
xor
in
std
mov
pop
add
ret
push
ljmp
cmpsb
pop
mov
sub
aam
and
inc
outsl
test
fadds
pop
scas
inc
jbe
faddl
daa
adc
fwait
les
inc
mov
push
and
imul
lods
adc
pop
sbb
jo
add
lods
pushf
jl
sbb
push
aaa
lret
mov
outsb
inc
stos
or
cmp
sbb
push
push
xchg
into
or
mov
sarl
inc
and
add
repnz
sbb
daa
sbb
subb
xchg
add
or
sub
ret
and
push
in
adc
mov
and
sbb
and
mov
and
push
cli
mov
dec
sbb
sbb
in
test
les
popf
push
loop
psrad
jmp
mov
sbb
outsb
sbb
in
lret
pop
cmp
popa
nop
imul
jmp
pop
mov
xor
cmpsl
data16
stos
xchg
fidivs
mov
lret
mov
xchg
or
cmpsb
repnz
sbb
rcrb
sub
adc
sbb
or
fcoms
pop
movsl
sti
aad
sbb
lcall
mov
cmp
adc
stc
push
aaa
data16
mov
sti
mov
jmp
jns
sbb
push
out
int3
in
adc
add
fsub
and
subb
xchg
ret
push
push
xor
add
adc
cltd
sbb
fldcw
or
push
nop
sbb
mov
repnz
cltd
repnz
push
push
cmp
or
and
icebp
mov
pop
lds
repnz
xlat
addr16
dec
sub
jle
decb
mov
call
adc
and
imul
mov
adc
icebp
cmp
jecxz
sub
sbb
sub
add
inc
inc
mov
mov
inc
pop
repnz
in
cwtl
xchg
int3
aam
pop
mov
sbb
pop
lods
push
popa
aam
push
jecxz
ficompl
adc
adc
dec
cmp
dec
lcall
movsb
in
cmp
mov
sub
repnz
std
pop
xor
imul
xchg
rdmsr
and
add
and
les
xchg
lock
pop
mov
jns
lock
jb
or
dec
mov
cmc
insl
jo
dec
jp
int
or
out
push
add
adc
push
loopne
push
ret
xchg
fbstp
mov
daa
inc
mov
inc
and
in
inc
aas
lret
and
lock
popa
mov
xor
cmpsb
cmc
push
bound
out
jns
cmp
xor
into
cmp
pusha
sbb
sti
js
ret
dec
push
sbb
pop
or
add
lcall
lret
xchg
stc
push
push
or
aas
outsl
in
add
movsl
jae
incb
ljmp
cltd
int
ret
fst
pop
push
mov
test
leave
cvtps2pi
outsb
inc
mov
xchg
pop
or
fwait
and
enter
mov
pop
or
call
cmp
pop
bound
sahf
or
repnz
push
addr16
sbb
in
add
orb
sbb
mul
loop
and
cmc
es
push
in
test
sete
sub
fisubrs
addr16
jmp
iret
push
adc
xchg
mov
dec
push
cmp
xchg
or
cmc
sbb
imul
scas
filds
mov
iret
cmp
jecxz
cltd
mov
cmp
imul
adc
test
in
adc
push
daa
mov
or
test
mov
mov
dec
pop
out
cmp
ja
cmpl
cmp
add
mov
push
inc
add
and
sbb
mov
outsb
jp
jecxz
daa
into
repnz
and
mov
xchg
push
movsb
xlat
cmpsl
xor
sbb
mov
loopne
push
adc
push
inc
pushf
or
in
cmc
inc
repz
push
int
bound
cmp
pop
fnstenv
mov
adc
fsubs
xchg
call
and
lock
sbbl
cmp
cltd
ljmp
lea
jmp
dec
aam
and
mov
test
stos
xor
movsw
and
xlat
cmp
shl
test
jl
lret
push
mov
rclb
and
fwait
mov
imul
loop
xchg
ror
xchg
or
in
sahf
or
bound
pop
clc
cmp
jp
push
fsubl
sarl
bound
or
fdivrs
fs
jo
adc
jecxz
sub
push
xor
mov
jno
mov
mov
or
add
push
outsb
or
test
lds
mov
imul
or
mov
xor
dec
fs
pop
test
mov
out
push
je
gs
xlat
call
and
mov
pop
cmpsl
mov
or
pop
gs
lock
adc
pop
jge
xchg
shlb
push
ficomps
xor
out
add
cs
rcrb
ror
jecxz
pop
repnz
pusha
pop
sbb
sbb
pusha
and
inc
adc
and
sar
cmpsb
lret
js
and
mov
lods
xor
mov
daa
imul
fstps
mov
push
inc
das
add
jg
rclb
sar
fwait
xchg
xor
arpl
adc
jnp
and
int
and
mov
mov
js
xchg
icebp
je
cwtl
jle
lods
mov
push
inc
jne
mull
iret
inc
push
in
xchg
fucomi
sub
andb
nop
in
and
mov
popl
sbb
and
cmc
mov
inc
leave
mov
outsb
jp
lret
cwtl
and
push
push
pusha
fcmove
imul
stc
or
sub
sbb
ret
pop
sbb
push
testl
pusha
arpl
jns
inc
or
out
dec
sbb
loopne
rolb
add
or
xor
sbb
or
cltd
push
mov
shlb
sub
jg
sbb
xlat
add
leave
mov
push
sub
aam
sbb
mov
sub
pop
push
and
loop
sub
shll
scas
lds
btl
sti
shrl
push
fwait
xor
fcom
fs
lods
pop
jae
cmp
cli
add
pop
jecxz
jnp
or
shr
into
icebp
pop
fisubrl
and
pop
adc
arpl
popa
cmp
adc
es
adc
int3
mov
aam
hlt
push
adc
fmull
incw
outsl
jne
movsb
mov
push
imul
and
popf
lret
lds
sbb
arpl
dec
inc
andl
pop
ja
mov
je
jb
push
adc
sarl
and
sarl
ljmp
push
imul
bnd
addr16
mov
xchg
or
or
loop
lret
fdivs
inc
leave
jnp
je
loopne
xor
aad
pop
scas
mov
cltd
js
jl
rcl
daa
sub
popf
cwtl
aad
in
jmp
stc
jge
clc
lock
mov
add
xchg
mov
bound
and
adc
sbb
inc
mov
fstp
imul
sar
adc
lds
fcmovnb
enter
iret
sub
call
and
fdivrs
out
scas
or
pop
push
mov
scas
movsb
or
add
xchg
adcl
outsb
in
pop
fcomps
sbb
and
and
lret
add
sbb
add
dec
mov
mov
push
adc
test
push
inc
stc
push
and
insl
insb
imul
xlat
sbb
sbb
gs
mov
mov
loop
js
dec
push
add
into
sbb
sbb
jmp
sbbb
mov
mov
add
cmpsl
xchg
and
push
and
sti
mov
rclb
mov
jge
sub
mov
in
repnz
push
adc
int
jle
add
or
daa
or
icebp
mov
dec
test
ror
xor
rcll
sbb
mov
or
out
and
adc
adc
nop
mov
movups
daa
pop
sbb
mov
aam
and
mov
lret
or
xchg
mov
push
mov
mov
sti
pop
and
loop
icebp
pop
jecxz
fs
pop
dec
dec
fucomp
sarl
into
in
mov
and
in
xchg
adc
rorl
imul
pop
mov
test
inc
mov
add
testb
jmp
xchg
stos
mov
xchg
aam
sub
fcmove
not
mov
enter
add
pop
sbb
call
xor
pop
mov
pop
ljmp
cli
and
add
xchg
rcrb
push
adc
sub
int3
and
ja
data16
std
pop
out
repnz
in
lds
daa
or
loopnew
fwait
movsb
or
add
inc
sbb
fsubl
out
out
es
jp
outsl
adc
cmpsb
sub
or
jns
hlt
data16
out
sbb
mov
repnz
loop
dec
mov
hlt
mov
fwait
sbb
mov
cmpsl
xchg
xchg
sti
cld
sbb
cmp
xchg
xor
lret
dec
fnstenv
xchg
push
push
mov
jbe
fcomip
adc
jae
add
dec
arpl
mov
iret
push
adc
sub
cld
movsb
out
jno
dec
sub
call
push
sub
dec
jl
lea
mov
and
sub
out
mov
ja
movsl
mov
shrb
lcall
movsb
cs
jo
jne
mov
popa
jno
pop
hlt
enter
sbb
mov
jno
fisubl
mov
push
mov
ret
or
in
lret
scas
mov
lds
xor
punpcklwd
xchg
sbb
stos
sbb
sbb
sahf
lea
sub
jns
push
mov
call
inc
lcall
cmp
push
in
bound
and
nop
sbb
insb
sbb
mov
fs
push
sub
sysexit
jae
pop
pop
sbb
dec
ljmp
push
repnz
cmp
cmp
pop
test
push
inc
pop
jecxz
pop
sub
adc
fisubrl
push
insl
test
outsl
or
mov
and
cld
mov
push
pushw
dec
inc
mov
sbb
adc
push
arpl
mov
and
clc
movsb
test
mov
lahf
dec
cmpsb
sbb
cmp
insl
push
jo
sbb
jae
jl
jecxz
sub
xchg
fdivrs
push
popa
cwtl
repnz
stos
push
mov
sbb
ja
sub
fs
inc
sbb
push
fisubs
add
xor
int
sbb
nop
test
lcall
arpl
pushf
add
xlat
subb
fisubrl
repnz
dec
sub
add
imul
mov
aas
outsl
pop
fcomps
push
sbb
mov
dec
es
imul
popa
hlt
mov
xchg
scas
and
cli
fdivrs
cwtl
xchg
jecxz
sbb
sub
xchg
cs
test
xchg
mov
and
jle
dec
ret
and
clc
jo
lret
sti
adc
nop
dec
adc
cmc
sub
pop
add
sti
add
push
push
adc
cmpb
outsb
into
pop
adcb
dec
es
test
xor
jle
and
adc
in
adc
push
pop
divb
cmpsl
outsl
std
mov
dec
sub
jbe
adc
adc
sbb
adc
inc
test
lcall
cmc
lahf
push
push
cwtl
out
jmp
sbb
adc
xor
sbb
daa
and
sub
subb
pop
sbb
test
pop
pop
das
sbb
mov
push
ja
lods
imul
sbb
ret
scas
sbb
sbb
mov
push
push
lods
je
cld
iret
pop
sub
data16
hlt
icebp
jo
in
pop
test
jg
enter
pop
pop
cmp
cltd
mov
retw
cmp
sbb
pop
mov
out
imul
sbbl
aad
or
or
fs
or
sbb
lcall
mov
addr16
enter
sbb
adc
cmp
inc
in
addr16
xchg
ja
push
sbb
stc
lds
out
js
add
data16
sti
fcmovbe
jae
rclb
xlat
sbb
push
cwtl
bound
sbb
shll
loop
dec
sarb
jmp
dec
ljmp
push
pop
js
es
jg
mov
fidivl
pop
fisubrs
insb
int
push
lods
lea
jecxz
mov
orl
sbb
shll
iret
cmc
and
js
bound
pop
jnp
pop
cwtl
in
ret
xchg
mov
inc
cmp
jl
rcrl
sbb
cmp
ficoms
xchg
adc
loope
test
xchg
adc
imulb
movsb
xchg
lcall
sbb
cmp
leave
test
cmc
jns
sub
pop
xlat
adc
rorl
push
cmp
test
inc
add
pop
xchg
jno
outsb
jns
jecxz
dec
aam
mov
adc
aam
insl
jo
pop
repnz
lret
jb
pop
dec
xchg
test
and
jno
lret
dec
pcmpgtb
jp
mov
clc
sbb
mov
inc
call
idivb
nop
int
xor
mov
iret
movsl
iret
imul
sbb
push
repnz
inc
std
add
add
dec
and
sbb
sub
add
add
xorl
mov
add
and
mov
adc
jge
orl
adc
xor
sbb
mov
sbb
dec
mov
daa
mov
mov
cltd
jb
sbb
data16
sahf
andl
push
lahf
adc
daa
push
or
ret
and
ds
mov
call
fld
shrb
mov
mov
inc
xchg
fwait
lret
jecxz
arpl
push
es
or
push
add
shl
cmp
sbb
jne
ss
mov
sub
jae
adc
push
and
pop
or
push
xchg
push
push
rclb
notl
mov
inc
adc
lods
cltd
movsl
adcb
popa
jns
movsb
or
adc
and
push
sahf
ljmp
dec
and
test
cltd
mov
popf
lcall
fcompl
loop
js
fdivl
sub
movsb
repnz
mov
repnz
mov
inc
add
adcl
jns
ja
loopne
divb
sbb
lds
cmp
stos
in
sub
ljmp
mov
pop
jle
popf
pop
outsl
mov
es
sbbl
sbb
shl
cltd
mov
push
lock
repz
fsubrs
jp
loope
mov
fmull
stos
sub
cmp
cmp
cli
ss
sub
ja
sahf
sti
insb
adcb
mov
xchg
aam
sub
enter
arpl
xlat
shr
loop
popa
into
in
xchg
xchg
test
push
pop
and
pop
inc
sub
cmpsl
sti
cli
sbb
mov
je
and
sbb
pop
and
xchg
pop
pop
mov
mov
jmp
dec
or
push
and
xchg
jmp
inc
inc
mov
pop
cli
dec
js
loopne
aaa
mov
inc
int3
sbb
lret
sbb
dec
sub
mov
ror
lret
xchg
or
sub
std
jb
outsb
sbb
and
ss
arpl
add
or
add
push
pusha
push
in
mov
mov
imul
xchg
or
mov
and
add
pop
inc
in
mov
adc
xor
inc
jmp
lds
sub
and
sbb
ja
adc
adc
adc
push
cmc
fists
test
add
je
cli
pop
or
clc
and
mov
fcomps
mov
leave
lahf
call
rclb
mov
jbe
lock
sbb
mov
lret
test
push
xlat
addr16
lret
pop
out
sub
bound
outsl
lret
fstps
arpl
sbb
or
pop
addl
ret
icebp
or
pop
repnz
je
mov
shrb
fisubl
push
push
jmp
lret
scas
jecxz
cltd
pushf
xor
pop
pop
mov
add
sub
adc
mov
add
adc
cwtl
pop
sub
sbb
sbb
and
sbb
lods
lret
pusha
mov
outsb
repz
in
mov
movsl
pop
jnp
push
mov
push
push
mov
xor
mov
pop
or
mov
cmpsl
jae
enter
pop
jbe
aas
out
mov
cmpsl
sbb
push
xchg
arpl
cltd
mov
test
mov
xlat
xor
jecxz
enter
xchg
or
and
sbb
insl
add
faddp
jo
les
pop
inc
psrad
lea
add
cs
sub
shlb
mov
sub
xor
cmpsl
mov
pop
movsl
aam
pop
push
cld
cmp
shrb
cwtl
fwait
clc
lea
push
addl
sbb
jbe
pop
mov
and
clc
and
xor
and
sbb
pop
push
repz
jae
mov
mov
sub
fisttpl
push
pushf
mov
cmp
or
add
ret
shlb
pop
fistpl
outsl
adc
push
mov
inc
ficompl
jl
mov
arpl
fs
jl
sbb
push
add
rcrb
sbb
dec
pop
fmuls
sub
jb
clc
int
es
cmp
pop
adc
cmpsl
enter
je
push
lods
js
add
lret
repz
xor
fldl
or
leave
test
pop
sbb
jnp
and
ds
mov
pop
call
jecxz
imul
loope
mov
shrl
repnz
mov
sub
adc
sbb
cmpsb
in
scas
push
shl
call
fistpl
insl
sub
iret
jmp
loope
push
or
aam
xchg
scas
pop
add
push
and
test
push
repz
cli
push
into
inc
jns
mov
sahf
and
repnz
sub
pop
roll
and
ret
ret
sub
xor
repnz
sti
or
movb
addr16
js
popf
adc
xlat
mov
enter
cmc
mull
push
mov
ret
aas
into
push
sbb
in
sub
jle
or
add
repnz
sbb
add
popf
sti
mov
mov
test
shr
and
stos
xorb
mov
out
pop
outsl
repnz
fdivrs
outsl
xlat
push
push
lret
mov
push
xchg
push
outsl
adc
hlt
nop
les
sahf
iret
out
add
ret
std
push
inc
cmp
stc
fwait
out
xor
ret
lret
pop
pop
ret
push
inc
rolb
add
and
jle
out
inc
test
xor
jmp
mov
or
xchg
mov
jle
fcomi
mov
aad
mov
inc
sub
push
adc
insb
pop
and
mov
push
aas
push
sub
adc
jno
xchg
sub
pop
enter
iret
imul
lret
mov
mov
sbb
or
fmuls
sub
int
pop
jno
mov
lret
add
dec
mov
dec
call
dec
cli
cmc
lret
add
call
lcall
mov
and
lods
test
add
in
pop
push
mov
outsb
fsubp
test
leave
adc
rolb
out
jle
add
repnz
or
test
stos
pop
jge
pop
js
jbe
inc
cmp
dec
pusha
imul
pop
je
sub
aam
das
outsb
daa
inc
sbb
js
mov
add
lds
test
popf
outsl
xchg
push
push
sbb
or
loop
sub
add
and
and
xor
lods
sbb
mov
push
mov
push
push
mov
xchg
outsb
insl
lahf
test
pop
frstor
jns
adc
clc
xchg
xor
sbb
lea
adc
fstps
daa
sbb
les
adc
scas
sub
dec
mov
std
fcmovb
js
repnz
cli
jp
imul
and
arpl
xchg
rcll
fisttps
adc
in
cmpsl
repnz
js
cwtd
push
fdivrs
pop
mov
ss
in
dec
inc
sub
mov
iret
into
pop
add
jmp
repnz
outsb
dec
cmpsl
test
mov
mov
push
and
stos
scas
mov
push
stos
jnp
stos
sbb
cmp
sbb
imul
and
imul
out
xor
push
jne
pushf
enter
pushf
test
lods
inc
lret
fwait
sub
or
inc
mov
bound
or
cwtl
sub
and
outsl
sbb
jecxz
nop
enter
mov
sub
cwtl
jnp
push
and
cmp
fucomi
cmpb
mov
push
aam
xchg
mov
out
sbb
jecxz
add
pusha
mov
xchg
ret
out
leave
mov
rorb
mov
push
jb
loop
mov
mov
mov
jb
cmpsl
sub
dec
push
xchg
pop
cltd
sub
add
cmpsl
inc
jecxz
mov
adc
and
mov
sub
addr16
aam
or
bnd
addr16
lcall
gs
fldenv
clc
mov
mov
push
and
cwtl
test
addr16
push
imul
out
push
imul
in
inc
in
mov
sub
cmp
adc
pop
add
adc
ljmp
ljmp
insb
sub
out
fstl
insl
lret
cmp
push
xchg
cmp
bound
stos
pop
shll
jno
jmp
sbb
pushf
mov
cmc
add
or
sbb
jmp
cmp
test
sub
sbbb
jecxz
push
fs
and
js
push
xor
inc
xchg
xchg
cmpsl
js
mov
or
mov
pushf
loop
adc
ret
push
cmp
push
pop
jecxz
xor
out
mov
mov
push
sbb
das
je
cmp
test
and
imul
adc
ss
push
mov
sbb
insl
repz
adc
and
push
pop
adc
xchg
icebp
jne
mov
adc
divb
mov
in
push
outsl
mov
sbb
addr16
cmpsl
mov
insb
mov
popa
or
rorl
adc
ljmp
mov
arpl
aaa
out
push
fidivrl
addr16
cmp
or
mov
sahf
inc
test
divb
lods
push
testb
inc
or
sub
daa
push
jl
pop
add
setge
jb
rcr
loop
popa
push
lea
pop
mov
xor
inc
xchg
repnz
add
push
sbb
push
jo
loopne
and
push
jecxz
outsl
sbb
cmp
or
push
xor
xchg
inc
sub
mov
sub
sbb
sub
sbb
cmp
mov
xchg
sbb
outsl
test
leave
mov
fldenv
cmp
out
iret
cmc
inc
mov
or
sub
jl
hlt
jle
stos
inc
leave
xchg
sahf
orl
and
sbb
lcall
and
cmp
loope
push
push
mov
in
pop
mov
pop
call
dec
movsb
add
ds
out
pop
aaa
sbb
push
sbb
and
js
sub
dec
push
push
je
xchg
push
insl
ret
sbb
cli
sbb
jmp
xlat
repnz
pop
sbb
push
fistpll
pop
cli
xchg
cld
test
jno
mov
adc
hlt
mov
jg
jle
cwtl
inc
repnz
push
push
test
popa
pop
cmp
in
flds
lods
mov
sub
jnp
jecxz
imul
es
call
pop
cltd
push
jb
pop
repnz
clc
test
and
mov
fwait
or
mov
sbb
in
fs
or
sub
das
js
aam
aad
les
dec
hlt
add
xchg
scas
call
mov
sub
sbb
pop
push
mov
jle
mov
inc
cs
cltd
nop
jecxz
insb
push
shll
jae
xchg
jecxz
das
pop
repz
das
repz
xchg
jecxz
mov
and
push
dec
cs
or
adc
popa
or
sbb
push
push
insb
mov
xlat
dec
int
dec
and
push
nop
sub
pop
sub
mov
sub
mov
xchg
out
xchg
aas
test
in
test
jmp
scas
out
adc
ja
mov
lods
push
mov
pushf
es
inc
mov
ss
mov
add
xor
mov
outsl
sub
and
cmp
push
push
bound
mov
and
pop
xchg
popf
subb
cmp
sbb
cltd
stc
test
push
inc
shlb
ljmp
cmp
pop
mov
or
add
daa
aam
inc
lret
mov
cmp
or
repz
and
fs
loopne
test
shlb
sti
es
ja
inc
ljmp
ja
adc
rcrb
and
repnz
cmp
adc
iret
iretw
jp
outsl
std
cmpsl
cmp
mov
std
jg
or
adc
out
popf
fcomp
jle
and
xchg
iret
fisubl
cmp
cwtl
lret
cs
testl
sub
loop
loop
int3
scas
cmp
loopne
cwtl
int3
sbb
aam
repnz
xor
loopne
stos
out
xor
sub
sub
xchg
movsb
stos
and
shl
rclb
jno
sub
xchg
addr16
mov
pop
nop
jbe
movsb
fcom
pop
push
pop
and
and
and
push
fwait
xchg
and
lds
lcall
xor
sbb
pop
adc
test
xchg
int3
sub
arpl
icebp
cmp
push
aad
push
add
pop
cli
mov
ret
popa
cli
xchg
sbb
mov
aas
sub
shr
dec
dec
lock
loopne
sub
in
fsubrl
ljmp
pop
sbb
test
cld
and
lods
sahf
aaa
ljmp
sbb
xor
clc
jge
dec
loop
fisubrl
mov
ljmp
add
add
or
imul
fsubs
add
add
shll
adc
int
mov
lds
sbb
add
fdivrl
loope
hlt
les
js
push
stos
imul
arpl
adc
inc
aad
ja
data16
mov
lret
into
xchg
push
outsb
arpl
mov
es
fiadds
rcr
loop
mov
es
gs
and
loope
add
sbb
and
sbb
sbb
pop
or
xor
sahf
aam
repnz
dec
and
lret
and
cmc
icebp
in
lret
leave
lahf
clc
int
pop
fisubrl
push
es
dec
push
pushf
test
cmp
ds
sti
jl
pop
mov
mov
mov
push
in
je
rcrl
add
lea
jns
push
sbb
aam
loope
das
lret
mov
pop
sahf
cld
pslld
aas
add
and
jge
int3
es
pop
cmp
insl
push
orl
xor
daa
loopne
movsl
into
mov
or
mov
mov
xchg
cmpsl
test
das
inc
sub
shl
ljmp
mov
orb
ret
jle
and
je
movsb
js
in
lods
jecxz
or
sahf
movsb
arpl
stos
mov
out
pop
imul
clc
fcomps
add
pop
pop
pop
iret
test
jb
and
data16
test
imul
xchg
inc
or
fstpl
pop
loopne
and
cltd
ficompl
test
fwait
sbb
mov
adc
mov
ljmp
mov
pop
pushf
sbb
rcrb
das
and
xor
dec
aaa
cmp
or
arpl
adc
imul
sarb
dec
cmpsl
push
inc
or
data16
mov
icebp
xchg
enter
popa
cltd
scas
lods
imul
stos
pop
movsl
out
iret
movsb
cmp
jb
sub
mov
xchg
xchg
adc
test
hlt
mov
pushf
dec
in
sbb
and
ljmp
jno
push
pushf
in
ficompl
jns
adc
pushf
loopne
adc
pop
push
xchg
iret
jp
and
sbb
pop
and
and
xor
loopne
pop
push
mov
nop
daa
or
inc
or
sub
cltd
enter
sahf
idivb
outsl
lods
cmp
out
outsb
push
jmp
stos
shr
jle
pop
inc
loopne
jo
imul
fs
enter
outsl
adc
pop
fwait
sbb
mov
xor
sbb
sub
or
sbb
push
ret
pusha
stos
test
imul
std
fidivl
sahf
inc
cli
ljmp
mov
lret
loop
fcmovnu
jns
sbb
insl
stos
loop
push
mov
lods
ljmp
sub
hlt
push
in
inc
mov
sarl
clc
mov
push
es
jecxz
pop
movsb
pushf
sub
xchg
sahf
xchg
icebp
dec
mov
test
adc
int3
std
mov
and
add
adc
lcall
dec
and
es
push
or
jge
xchg
xor
repz
gs
jmp
das
xor
adc
mov
stc
mov
and
sahf
cmp
dec
cmp
sbb
add
shll
mov
jmp
repnz
sbb
movsb
and
jae
stos
lods
aas
pop
cmp
cli
scas
ljmp
cli
mov
imul
jb
test
jl
sbb
inc
mov
pusha
push
int
inc
dec
jns
aaa
aaa
dec
movsb
bound
mov
or
mov
xchg
cli
cmpsl
imul
xchg
sbbl
addr16
mov
push
sbb
and
dec
xchg
addr16
aad
cltd
out
pop
hlt
sbb
push
ds
jno
xchg
sbb
mov
sub
mov
push
and
jmp
imul
and
ja
xchg
add
sbb
cmp
jmp
sti
adc
pushf
call
xchg
in
mov
mov
mov
lods
subl
cs
cli
fwait
cmp
aas
add
and
xchg
pop
mov
jmp
mov
dec
arpl
and
sbb
mov
sub
dec
or
stos
xor
mov
mov
stc
cmp
sbb
stos
cmp
sub
out
mov
loopne
and
out
mov
lret
dec
push
cmp
xor
xchg
dec
mov
aad
ss
test
sub
mov
add
add
pop
jnp
lret
push
cmp
std
out
dec
jge
and
cmpsb
pop
fmuls
or
add
cwtl
add
push
out
movsb
leave
xlat
xchg
push
fwait
repnz
pop
aas
outsl
leave
mov
addr16
nop
cmp
in
and
mov
andl
mov
and
fiaddl
mov
adcl
inc
push
and
mov
adc
loop
sahf
cmp
or
adc
outsb
scas
sarl
inc
outsl
mov
push
mov
insb
and
pop
mov
fcomi
cmp
jl
cmpsb
and
imul
pop
sub
repnz
sbb
loope
rep
icebp
fistpl
adc
cli
shl
cmc
sbbb
jmp
jnp
call
sbb
jg
into
adc
xchg
add
push
inc
cmpsl
test
cmp
gs
cmp
lret
mov
mul
xor
and
popa
push
rol
add
and
jae
cmp
addb
adc
xchg
jbe
push
daa
loope
scas
imul
mov
add
fbstp
loopne
push
call
sub
pop
pop
scas
mov
cmpsl
push
jne
and
imulb
popa
jb
rolb
add
mov
sti
sti
adc
ljmp
fsubl
mov
pop
jp
dec
les
je
jl
fildll
push
call
sbb
mov
adc
inc
daa
push
cmpb
ds
mull
inc
and
mov
movsb
and
pushf
xor
sub
decl
cli
in
cmp
cmpsl
mov
or
mov
mov
cmp
or
mov
mov
in
sti
jmp
aaa
jp
jne
stc
es
jp
jle
pop
in
fistps
pop
fs
mov
mov
das
out
cmp
push
mov
insb
add
cmpsl
test
xchg
cmp
adc
inc
mov
pushf
or
call
xor
jo
and
jle
sbb
add
adc
mov
lret
out
dec
aas
jae
mov
adc
es
scas
daa
add
imul
or
ja
mov
adc
enter
incb
mov
sub
fnstcw
fimuls
mov
adc
xchg
pop
mov
or
cmp
cltd
and
and
sbb
jo
testl
push
jp
test
fstpl
mov
daa
in
jno
pop
mov
xor
scas
and
cli
call
dec
push
pop
and
add
inc
jae
inc
inc
int
es
cltd
pop
and
fmuls
push
mov
dec
xor
lcall
mov
cltd
pusha
dec
sti
addr16
cltd
lret
mov
iret
in
insb
fs
test
lds
push
cmc
ds
adc
xor
xchg
xlat
sbb
xchg
nop
lods
movsb
and
test
mov
dec
inc
test
and
and
and
fisttpl
dec
arpl
xchg
mov
mov
and
shll
push
cwtl
fdivrs
and
mov
pop
dec
push
jge
arpl
mov
mov
lahf
stos
loope
push
mov
mov
pop
xor
dec
sbb
cld
int
movl
aaa
sub
xor
xchg
lcall
aaa
clc
dec
jne
cmp
shl
sbb
and
xor
movq
cli
movsl
adc
movsl
lods
mov
sbb
test
adc
jecxz
clc
mov
repnz
pushaw
lahf
pop
arpl
fwait
es
sub
dec
pop
xor
sub
mov
loopne
xchg
sbb
loopne
js
and
hlt
stos
adc
mov
sarb
out
add
subb
mov
imul
mulb
sub
shrl
test
movsb
lahf
mov
outsl
into
stos
adc
aam
dec
stos
aaa
int3
jg
or
mov
jmp
xlat
leave
or
daa
cmp
mov
iret
and
jo
pop
jnp
pop
or
mov
sub
xorb
inc
iret
aad
pop
sbb
cli
stos
xor
sub
lds
fisubrl
adc
sub
cmp
mov
mov
loope
dec
repnz
pop
aad
jecxz
loop
push
push
rolb
push
xchg
enter
xchg
lods
cmp
pop
sub
or
lods
sub
cs
lret
cmp
add
enter
test
mov
and
sub
and
xchg
mov
fstpt
xor
sbb
or
call
mov
lods
and
cld
jle
mov
sti
jnp
ljmp
repnz
das
pop
adc
test
add
lcall
mov
nop
aam
mov
and
inc
push
mov
fisttps
and
repnz
cld
jp
mov
lret
es
cmp
sbb
sub
sub
roll
fidivl
int
sub
lret
call
cwtl
pop
pop
adc
movsb
comiss
pop
jbe
pop
push
xchg
mov
imul
out
mov
and
or
psubw
add
loop
inc
shlb
ficoml
xor
inc
cmp
cmp
cmpl
inc
mov
mov
imul
dec
test
movsb
imul
loopne
inc
xor
divb
cmc
loop
inc
test
or
jle
rorb
es
out
fidivrl
stos
add
stos
adc
xor
mov
popf
dec
or
mov
mov
sti
xchg
pop
repnz
jecxz
sbb
or
sub
jp
out
cmp
dec
pop
ret
test
movsb
jnp
push
jl
jecxz
add
bound
sahf
xchg
sbb
inc
scas
jbe
scas
iret
xchg
test
adc
fst
adc
inc
ret
fiadds
sub
jmp
mov
decb
jle
push
cld
cmp
loope
mov
js
and
aad
sarl
test
lret
sarl
jbe
movl
out
xor
int3
and
xchg
pcmpgtb
sub
cmpb
cmp
rorl
push
sub
addr16
and
cmpsb
pop
push
in
xchg
xorl
xorl
movsl
fdivp
out
add
daa
sbb
and
jo
adc
xor
cwtl
sub
lea
xchg
jbe
sbb
pop
mov
push
mov
daa
addl
daa
int
mov
sub
inc
mov
cs
add
insb
insl
add
xlat
mov
adc
arpl
add
xor
and
in
cli
jecxz
mov
das
xchg
pop
cltd
pop
cs
pop
cmp
repnz
push
or
adc
xchg
das
inc
outsl
je
stos
mov
ljmp
pop
or
jnp
sbb
sbb
pop
add
roll
pop
out
cltd
or
pushf
pop
mov
imul
out
int
fstpl
in
mov
in
or
test
out
and
rcrb
push
xchg
aad
pop
out
cmpb
inc
cwtl
push
xchg
or
imul
scas
or
shlb
mov
lret
stos
xchg
push
xorl
xor
and
jecxz
dec
mov
cmp
out
mov
jae
adc
fldl
lds
in
arpl
jne
cmp
and
mov
sbb
mov
inc
aaa
or
cmp
xor
cld
mov
loopne
pop
mov
das
int
test
cld
aad
fcmovu
push
pop
daa
or
repnz
in
pusha
movsl
fnsave
clc
fstpt
insl
sub
adc
loope
adc
shrb
arpl
mov
mov
sub
into
adc
push
mov
loop
test
ficoms
cltd
jge
cmp
cmp
pusha
push
aaa
jb
mov
in
add
inc
lret
sbb
in
jle
dec
pop
and
mov
orb
ret
add
loopne
or
in
xor
sub
or
mov
mov
lret
push
outsb
jne
adc
mov
push
push
outsw
popa
pusha
insb
dec
out
mov
push
and
push
or
shll
clc
fwait
xor
mov
push
lea
mov
and
ret
push
fcmovbe
cld
orb
or
inc
ss
ftst
insb
xor
add
sbb
push
adc
or
gs
pop
in
add
fcmovnb
insb
movsl
sbb
xchg
es
inc
pusha
and
fistpll
iret
mov
jb
mov
pop
inc
cmp
icebp
int
cmp
xchg
pop
lcall
imul
and
fdivr
mov
mov
pop
ss
scas
xor
inc
test
mov
dec
test
or
add
inc
xchg
sub
xor
fnstenv
enter
dec
jmp
ss
push
sahf
mov
sub
xchg
inc
aad
pop
or
or
pop
mov
stos
aad
mov
stc
inc
loope,pt
xchg
lock
frndint
jne
sbb
inc
mov
jl
ja
js
adcl
or
push
push
addl
in
movsb
lea
adc
inc
cltd
push
xor
lret
push
mov
xchg
adc
xchg
inc
movsb
and
lret
inc
cmp
mov
sbb
xlat
adc
sbb
mov
dec
sahf
push
mov
ret
out
and
mov
and
pop
push
jl
or
shlb
test
imul
pushf
sub
sbb
add
lret
xor
iret
aad
xlat
and
push
lcall
pop
inc
fdivrs
mov
outsb
xchg
cs
iret
jb
push
mov
mov
xchg
cmp
dec
pop
adc
insb
mov
xor
inc
pusha
lahf
jg
int3
out
lea
jns
pushf
push
or
sub
fnstenv
dec
movsb
sbb
shrl
pop
adc
mov
or
pop
xor
int3
push
repnz
dec
mov
mov
xorl
pop
push
jge
mov
xchg
mov
aas
mov
fistpl
push
stc
rol
mov
mov
push
divl
addl
shl
pusha
sbb
adc
ret
or
jae
lret
out
add
insb
nop
or
xchg
into
aad
xlat
pop
out
sbb
push
cmp
les
test
xchg
sbb
inc
js
add
dec
lods
out
and
push
push
mov
jmp
out
dec
and
push
outsl
adc
mov
inc
in
cwtl
and
test
shl
xor
add
aad
cld
mov
push
notb
out
jo
das
sahf
xchg
aaa
cmpsl
jg
sbb
pop
scas
pop
scas
fidivrl
sub
call
pop
insl
pop
fidivl
jo
aaa
mov
sbb
out
and
push
rclb
fsubs
adc
jb
push
adc
push
cmp
cmpsl
sub
sbb
fisubrs
ljmp
push
testl
mov
adc
stos
sub
pop
movsl
test
addr16
jmp
movsb
push
pop
ret
shrb
xor
pop
fiadds
dec
std
jg
in
cmp
ljmp
fucompp
mov
shrb
inc
mov
sub
mov
sti
lods
insl
mov
enter
ret
clc
movsl
rcrl
int
jbe
cmp
push
pop
mov
and
std
stos
imul
mov
ljmp
das
or
mov
sub
jb
pop
mov
xchg
and
fwait
jne
xchg
pop
inc
inc
sbb
pop
lcall
cmpsl
pusha
cli
cs
mov
rcrb
scas
dec
scas
cli
and
mov
iret
mov
xor
xchg
fwait
push
push
push
sub
push
fsts
jge
mov
mov
sbb
pop
mov
mov
or
push
mov
pop
mov
and
in
push
adc
cmp
or
push
xor
sub
pop
xor
mov
jne
es
push
sub
push
fldt
sbb
stos
pushf
xlat
dec
rclb
sbb
bound
jno
or
and
rorb
cmp
loope
pop
lods
out
sbb
cmp
pop
xor
popa
inc
push
das
or
ficomps
dec
jo
jnp
js
mov
daa
jl
xlat
sub
fnstcw
sub
addr16
divb
lahf
mov
icebp
jbe
subb
addr16
xchg
daa
cmpsl
orb
mov
repnz
bound
mov
and
push
xor
loopne
mov
daa
add
test
xchg
xlat
sbb
mov
adc
fsubrs
rolb
mov
inc
mov
out
push
mov
mov
fwait
and
sbb
subb
orl
push
sbb
mov
call
cmp
or
and
dec
mov
mov
daa
aam
loopne
test
cmp
es
clc
into
or
fmul
icebp
repz
mov
test
aam
jmp
ja
lods
inc
sbb
lret
insb
repz
dec
mov
mov
cmp
dec
mov
jge
sbb
nop
cs
dec
push
ljmp
loopne
xchg
cmp
jo
int
sbb
push
pop
sub
sbb
xchg
call
ficomps
iret
sbb
inc
popf
jp
loopne
jecxz
cmpsl
adc
mov
es
pusha
sub
pop
or
adc
cmp
adc
mov
dec
add
mov
sbb
dec
out
das
aam
mov
mov
jno
sub
popf
lods
std
and
jecxz
aaa
and
imul
push
sub
out
cmpsb
xchg
and
mov
cmp
cld
jp
mov
sub
cld
fimull
jmp
or
dec
cld
add
cld
cmpsb
push
lods
adc
sub
aad
adc
mov
xchg
ret
fs
mov
push
in
or
les
or
les
nop
fwait
scas
mov
lret
ljmp
daa
push
out
daa
sub
sub
jmp
cltd
test
jne
sti
lods
jno
adc
sub
ljmp
imul
in
fbld
jo
cltd
inc
or
jge
sub
pusha
cmp
out
sbb
and
and
lea
outsb
add
xorb
scas
jge
mov
xor
out
pop
sub
sub
aas
cmp
je
hlt
out
movsb
add
stos
sub
xor
pop
add
cmpsb
bnd
rcll
loope
or
sub
rclb
xchg
and
es
cmpsl
test
stos
fisubrs
jmp
stos
pop
dec
xor
inc
pop
icebp
in
and
sub
icebp
or
adc
ret
pop
add
rorb
es
les
mov
jp
std
jge
ljmp
clc
outsb
repz
mov
aam
imul
fbld
mov
mov
add
sbb
xchg
stos
mov
movsl
add
inc
add
push
fstps
mov
pop
sub
push
cmc
pop
or
scas
fidivs
repnz
and
movsl
cmpsl
lret
outsl
outsb
or
or
sbb
pop
and
pop
jnp
sub
jmp
jle
imull
imul
cmp
cmp
pusha
jno
mov
xchg
iret
ljmp
push
enter
sbb
daa
cltd
popa
cmp
xchg
add
sti
sub
or
adc
test
push
xor
mov
out
shr
rcrl
add
mov
mov
fcompl
xlat
es
and
data16
jo
pusha
scas
repnz
sbb
imul
cmpsb
in
dec
insl
cmpsl
fistl
cmpsl
mov
das
outsb
lods
mov
ds
test
aad
mov
aad
inc
mov
pusha
icebp
es
addr16
jns
iret
jecxz
addr16
jne
movsb
mov
lea
adc
inc
adc
aad
mov
and
jp
stos
dec
test
push
or
cwtl
pop
aam
jo
sub
repnz
jp
jecxz
sbb
sbb
mov
jl
mov
ss
push
pop
sti
push
xor
das
adc
test
and
or
xor
ja
addr16
dec
add
dec
or
and
lahf
adc
and
int3
es
hlt
leave
je
jnp
push
jmp
jns
pop
fdecstp
xchg
xchg
push
jecxz
sub
inc
sub
sbb
iret
mov
sub
js
popa
call
adc
cmpsl
or
cmpsl
fwait
sub
imulb
push
cwtl
shrb
imul
mov
add
and
fwait
cmc
or
cmpsl
cmpsb
icebp
sbb
repz
cs
ret
data16
mov
fldpi
rolb
and
sub
leave
mov
mov
sbb
scas
and
cmpsb
mov
mov
pushf
fsubrs
movsb
sub
push
call
cltd
test
cmpsb
cld
push
dec
xlat
hlt
add
cmc
cmp
add
pop
cltd
ret
xchg
or
sub
adc
push
xchg
jge
lea
test
out
jb
les
xchg
jmp
jecxz
test
push
clc
push
or
es
insl
sub
or
loopne
mov
iret
cmp
jne
cwtl
adc
adc
cmp
or
cwtl
push
insl
stos
jecxz
inc
push
cmp
nop
jp
lea
leave
cltd
inc
fbstp
add
or
mov
xchg
jno
vmovaps
xor
int3
mov
jmp
cmp
rcl
and
das
mov
sbb
insl
shrl
or
dec
outsl
xlat
and
es
xor
int
sub
das
cmp
lds
mov
lock
inc
imul
or
in
ret
jmp
push
jnp
arpl
and
stos
jmp
lret
movsl
mov
lahf
inc
nop
inc
sbb
lods
popf
lret
add
cltd
cmpsb
inc
xchg
orb
inc
or
and
call
jg
loopne
lret
icebp
lcall
mov
fisubrl
inc
decb
sti
pop
sub
inc
dec
dec
divb
mov
mov
std
outsb
testb
dec
sub
xchg
fiaddl
add
lds
test
and
aas
pop
int
in
test
mov
sti
mov
mov
movsl
addr16
orb
repz
fstpl
jne
shrb
shrl
push
pop
ret
jmp
pop
sub
sbb
loope
pop
aas
mov
xchg
popf
cmpsl
insl
jno
mov
or
mov
pop
iret
inc
and
cli
out
lea
test
mov
idivl
push
notb
sti
cmc
lret
or
or
pop
xor
lahf
mov
jmp
insl
and
mov
hlt
iret
dec
test
scas
push
test
das
sbb
aam
stos
xchg
repnz
outsb
sub
xor
and
or
mov
addr16
mov
lret
sub
dec
outsl
popf
or
pop
xlat
notl
loope
lods
int3
cld
out
cmp
or
adc
and
rorb
push
xchg
movups
outsb
cs
dec
jmp
subb
in
pop
mov
mov
and
dec
inc
mov
add
mov
out
cmpsb
add
lods
shlb
adcb
mov
push
pop
fcmovne
cli
fptan
loop
or
sub
lods
leave
xchg
lods
lods
daa
xlat
sbb
push
mov
push
ljmp
out
sub
pop
cltd
sbbb
sub
scas
xchg
or
out
push
and
cmp
mov
sti
dec
mov
sub
subb
cs
add
or
cwtl
call
mov
loop
push
lock
inc
sbb
xchg
test
fwait
or
sbb
fs
xchg
pop
and
dec
into
idiv
test
mov
pop
cmp
iret
stos
push
inc
pop
ficomps
pop
test
jl
mov
mov
fcoml
mov
inc
mov
add
or
mov
jecxz
lret
outsl
out
int
sub
or
mulb
mov
lods
pop
cs
adc
jbe
js
and
mov
sbb
lahf
inc
movsb
movsb
sub
mov
or
xchg
test
repnz
aam
in
xchg
out
pop
sbb
int3
lcall
notb
mov
adc
lods
mov
pushf
adc
xor
cltd
pop
hlt
push
dec
cli
or
ds
and
iret
sbb
pop
and
jp
and
xor
sub
push
fwait
aaa
movsb
call
in
push
push
in
jmp
xchg
cmc
sbb
dec
add
rolb
fwait
jae
xchg
popa
sbb
pop
stos
int
cmp
pop
leave
and
scas
mov
fisubrl
lds
jmp
test
jmp
pop
pop
mov
or
inc
push
ja
dec
fidivrs
fsts
and
pop
pop
loop
pop
mov
pop
xor
ljmp
icebp
fnsave
xchg
shll
or
loope
push
pushf
pop
dec
cmp
sub
sbb
sub
fcompl
mov
cmpsb
out
andb
pop
lods
hlt
hlt
xor
xor
cs
inc
sub
adc
cmp
and
std
mov
fwait
es
and
mov
xor
push
sbb
addb
in
push
enter
popf
sbb
popa
lret
inc
and
stos
cmpsl
jge
lret
sub
jb
imul
lret
aaa
out
fwait
lcall
jecxz
test
repnz
pop
lds
std
lock
push
std
repz
bound
jecxz
es
hlt
mov
xor
push
adc
loop
je
shl
dec
scas
movsb
loopne
popa
hlt
outsl
cli
ja
ja
fwait
or
sbb
jecxz
lret
add
mov
test
scas
sub
mov
pop
and
push
out
cmp
xchg
mov
pop
jge
inc
ret
test
xchg
sub
clc
and
daa
dec
test
pusha
and
push
sbbb
pop
leave
xor
xor
push
aam
push
and
sti
and
dec
push
mov
out
imul
xor
inc
imul
lret
mov
dec
mov
cmp
xchg
sbb
es
shrl
and
fdivrs
cmc
repnz
jno
jne
cwtl
or
or
cmc
add
or
std
sub
mov
aad
xor
shll
and
sbb
xchg
fistpl
ficompl
cwtl
int
scas
ficoml
lock
pop
add
add
add
repnz
out
cltd
cmp
rorl
push
adc
movsl
xor
fsubrs
pop
enter
mov
fidivl
adc
adc
xchg
andb
adc
leave
xchg
mov
out
stos
and
fucomi
aam
pushf
mov
decb
pop
or
push
repnz
sbb
loopne
xchg
sub
fdiv
insl
sbb
push
repnz
sub
xor
push
mov
sbbb
into
and
push
sti
popa
repz
jnp
and
lret
dec
jecxz
cmp
push
scas
in
out
push
jae
vmovapd
mov
lret
push
lahf
pushf
adc
shll
movsb
mov
add
repnz
mov
jmp
xor
add
sti
clc
popa
loopne
or
fincstp
cwtl
bnd
jp
cwtl
movsl
jle
jecxz
in
and
ja
sub
in
out
icebp
and
mov
pop
outsl
mov
ret
and
into
jne
rcrl
outsb
lret
push
iret
cmpsl
mov
or
and
in
insl
es
and
scas
sub
cwtl
mov
fs
ds
push
push
outsl
cltd
addr16
xor
sub
lcall
jb
je
jno
dec
insb
lock
push
push
dec
pop
insl
outsl
dec
dec
loop
call
pop
sbb
mov
ret
cwtl
jl
mov
push
mov
inc
mov
outsl
imul
xchg
add
xchg
jmp
add
test
pop
xor
insl
aaa
out
pop
loopne
sti
mov
addr16
lret
repnz
lods
cmpsb
mov
or
or
pusha
ret
fildll
add
repnz
pushf
std
push
or
sbb
lcall
sbb
inc
imulb
pop
sbb
imul
or
jg
fadds
push
xchg
mov
sbb
mov
and
pop
lds
sbb
aaa
hlt
sub
cmpsl
add
jecxz
int
or
and
sbb
loope
mov
xchg
repz
ret
cmp
shr
pushf
mov
mov
jns
dec
repnz
je
arpl
mov
dec
pop
push
sbb
loop
test
or
or
and
inc
fldt
test
inc
and
mov
jl
pop
cli
icebp
fldenv
jnp
mov
fisubs
aaa
mov
sub
xor
pop
dec
fs
lret
dec
bound
sub
push
aas
movsb
mov
sub
call
mov
lock
arpl
and
jae
xchg
sbbb
sbb
repnz
and
lret
add
xchg
jmp
leave
dec
daa
adc
jne
fmul
sbb
fldt
aam
fcompl
ret
or
mov
or
fsubr
mov
imul
and
or
adcl
adc
pop
in
std
sub
adc
jo
call
repz
sub
push
out
jmp
rcrl
sub
or
andb
aas
push
mov
mov
das
xchg
movsb
sbb
cmc
jb
push
jae
fsubrl
shlb
cmc
fs
mov
mov
sub
mov
lea
fcmove
xor
clc
repnz
fwait
adc
pop
lds
testl
push
cmp
int
mov
pop
cmp
popf
mov
int3
mov
movsl
mov
sub
std
cmp
push
packuswb
icebp
test
push
xchg
stc
sbb
pop
push
leave
pop
scas
lcall
xor
testl
fprem1
lret
mov
aaa
test
xchg
push
sub
add
jnp
test
xchg
lods
mov
dec
sbbb
adc
ljmp
jecxz
cli
add
insl
les
or
es
stos
movsb
iret
outsl
xor
pop
int
insl
adc
std
lock
cltd
fdivrs
jno
rcrl
mov
dec
adc
ja
aam
aaa
or
xor
jne
cld
sub
mov
xlat
sub
orb
arpl
aaa
jmp
sub
dec
repz
ret
sub
push
xchg
sbb
push
shlb
xchg
and
ljmp
xor
mov
leave
xor
add
stos
scas
sub
xchg
pop
out
and
repnz
shlb
mov
test
lret
dec
mov
push
mov
dec
imul
dec
shrl
or
cmp
xlat
stos
mov
push
cmpsb
imul
in
pushf
xchg
out
imul
mov
pusha
loope
push
sub
xor
stc
pusha
mov
dec
sub
mov
imul
xorb
imul
addr16
xchg
cmc
loop
jns
adc
cmp
pop
xchg
mov
sub
aam
ret
mov
mov
jmp
xor
rclb
int
xchg
fldl
mov
pop
and
hlt
repnz
arpl
mov
xchg
or
daa
aam
and
repnz
or
bound
sub
sbb
das
testb
ret
mov
pop
es
pop
fisttpll
jge
shrl
ret
inc
fdivrs
pop
pop
jl
and
movsb
aad
cltd
sbb
call
lock
inc
shll
ljmp
sbb
mov
adc
pop
sbb
sbb
xchg
hlt
daa
sub
cmp
push
or
or
movsb
fwait
sub
inc
dec
cmpsb
or
enter
notb
cmc
push
cmp
sahf
enter
popf
in
pop
push
mov
outsb
stc
addr16
or
nop
fldcw
ret
ret
imul
notl
or
dec
cmp
push
aaa
test
push
bound
out
ud2
clc
sbb
and
fstpt
fcoml
ret
sub
arpl
or
add
in
fs
loop
enter
sub
mov
in
mov
push
mov
jbe
fmull
rorb
and
or
js
pop
lret
test
mov
xchg
and
ror
mov
dec
ljmp
push
testl
stos
or
hlt
add
dec
sub
sub
aaa
dec
lret
into
sbb
cmc
mov
push
add
idiv
decl
js
xchg
iret
pop
or
sbb
insl
and
jnp
push
and
sub
cmp
mov
mov
and
inc
es
addr16
scas
mov
or
in
dec
outsl
cmp
out
or
push
or
add
inc
fs
mov
repnz
in
mov
aad
popa
mov
mov
bound
jns
pop
xchg
enter
sub
xchg
and
mov
es
adc
and
lahf
ret
xchg
jns
adc
mov
test
and
gs
jecxz
out
jmp
xchg
pushf
or
inc
sbb
push
movsb
or
push
ret
shll
pop
jle
ljmp
xchg
push
repz
mov
dec
cld
shlb
sbb
loopne
repnz
cs
inc
add
sub
dec
scas
clc
repz
and
jne
cltd
insl
wbinvd
sub
sub
xchg
fsubl
je
jb
inc
lret
test
out
dec
lea
sub
inc
aad
fs
push
pop
xor
daa
lods
js
aas
into
hlt
js
mov
clc
insb
xchg
ret
sbbb
sbb
or
pop
dec
mov
std
xchg
xor
xchg
cmp
push
and
xlat
fs
loopne
scas
push
pop
cli
xor
sbb
mov
iret
movsb
lock
xchg
xchg
and
ljmp
mov
movsl
outsl
sti
ja
mov
sbb
inc
lahf
sub
mov
je
xor
xor
cli
jb
or
dec
fwait
inc
fcoms
jl
push
xchg
ss
sarl
mov
fsubs
lahf
bound
inc
dec
out
mov
pusha
push
stc
std
jb
shl
sub
sbb
adcb
push
and
cmp
js
mov
dec
ja
subl
mov
fs
pop
push
inc
mov
stos
cmp
lahf
repz
push
sub
in
inc
jmp
fwait
sub
iret
xor
xchg
and
insb
xor
pop
aaa
sbb
js
imul
or
das
jecxz
sub
shrb
fcoms
cmp
mov
mov
cmp
mov
push
sbb
insb
mov
or
push
or
xchg
arpl
sti
lcall
push
sti
push
shrl
jo
fs
sbb
sbb
adc
fiaddl
cwtl
clc
enter
dec
sub
sbb
idiv
xlat
jl
adc
sub
and
add
dec
jnp
fidivrl
int3
std
in
add
cmpsb
mov
xlat
dec
int3
xlat
sbb
test
xor
adc
notb
dec
cmp
mov
xchg
cvtps2pi
int3
mov
test
push
in
sub
and
in
sbb
enter
adc
out
dec
push
leave
sbb
lea
sahf
xor
lock
push
mov
mov
test
sub
push
and
sbb
sbb
out
stos
add
xor
add
jecxz
jno
adc
mov
add
jg
jnp
inc
mov
sahf
mov
fwait
mov
icebp
pop
jp
cli
out
sti
outsb
lret
lcall
je
inc
fcomps
sub
lea
and
popa
xchg
sub
aam
mov
loopne
jp
push
push
mov
sub
lea
idivl
mov
xor
iret
xlat
popa
orl
scas
loopne
sbb
push
jle
cmp
sahf
sbb
and
fwait
xchg
stos
std
xor
aam
dec
insb
aam
ficomps
mov
pop
xlat
mov
scas
sbb
pop
cmp
sub
leave
aam
movsb
js
mov
sbb
sbb
movsb
or
add
push
lcall
cmp
stos
adc
xchg
adc
lock
mov
addl
jge
mov
gs
mov
dec
rcrl
sbb
xor
cltd
decb
sbb
jnp
dec
and
mov
dec
imul
add
repnz
ds
addb
lods
cwtl
and
stos
lret
pop
test
adc
mov
sbb
mov
sub
dec
js
mov
xor
ror
movntps
cwtl
scas
ret
lds
and
jbe
jnp
mov
call
iret
loopne
mov
mov
aad
aaa
mov
out
adc
cwtl
out
xchg
outsb
push
leave
add
push
lcall
or
inc
outsl
adc
and
push
mov
lods
xlat
call
inc
mov
xchg
cmp
cwtl
cmp
iret
iret
jnp
add
aam
aaa
adc
bound
das
outsl
sbb
decl
out
adc
sbb
inc
mov
int3
out
jno
fstps
sbb
pop
mov
add
outsb
jns
cmp
and
mov
pop
and
dec
ds
fcomps
and
mov
and
or
imul
sub
push
aad
push
pop
sub
adc
and
adc
arpl
jecxz
add
or
and
jecxz
or
rclb
cmpsl
adc
xchg
and
mov
inc
sti
cli
xchg
sbb
mov
and
daa
and
js
push
push
sbbb
mov
push
sbb
loopne
mov
fld
adc
test
add
leave
int
xor
cmp
or
outsl
inc
inc
loopne
stos
mov
ss
out
fcoms
mov
iret
sub
bound
jnp
leave
in
bound
out
add
pop
imul
cmp
adc
and
inc
inc
xchg
xchg
sub
mov
push
gs
sbb
ja
sbb
xchg
push
cmp
cwtl
push
sub
imul
iret
jg
inc
pop
addl
clc
mov
mov
and
cs
sti
ret
stos
cmp
icebp
repnz
jmp
es
cmp
inc
dec
test
jbe
xor
mov
and
pop
mov
jb
sub
aaa
fiaddl
fisubl
pop
loopne
xchg
repz
lods
jae
and
mov
mov
arpl
and
mov
cmp
pop
mov
dec
or
daa
ret
fst
mov
test
dec
ret
icebp
and
loope
sub
sbb
jb
iret
outsl
cmpsl
jl
jecxz
sub
repnz
adc
cmp
ret
aam
mov
cs
sbbb
jg
cmp
aam
or
mov
add
stos
sub
xlat
fimull
int
loop
jecxz
or
xor
lret
xchg
out
pop
sub
es
clc
add
and
adc
les
dec
mov
test
or
data16
and
cmp
jb
or
pop
jecxz
scas
ret
or
inc
jae
loop
fiaddl
scas
pop
ds
push
or
or
mov
call
add
jns
mov
and
pop
insb
in
movsl
scas
and
mov
leave
dec
lds
in
es
fdivrl
rcrb
movsl
sbb
dec
xchg
sbb
pop
sub
sbb
cli
int
add
out
cmp
fwait
inc
aam
sti
sbb
cmpsb
outsb
dec
sub
lret
gs
inc
sub
jge
movsb
shlb
lods
lds
or
xchg
out
mulb
imul
mov
add
sub
dec
aas
dec
cmpsl
lret
jmp
and
push
push
dec
call
push
ret
cmpsb
jge
daa
scas
or
mov
or
pusha
xchg
mov
mov
or
push
add
push
push
cmpsl
add
jecxz
iret
lret
and
int
xlat
or
test
mov
xor
insl
push
outsb
out
or
std
and
loop
push
add
movsb
xchg
push
lret
ss
mov
dec
lock
sub
test
push
mov
fcmovbe
js
outsl
jge
cmp
or
jnp
add
insl
andb
test
notrack
cmp
cld
out
or
push
lret
add
push
cmp
pop
or
js
pop
sub
xlat
jmp
rcl
imul
movsb
adc
leave
xchg
inc
adc
fsubs
lret
push
mov
sub
jg
cmp
mov
dec
fsubrs
mov
pop
xchg
push
rolb
xor
cltd
or
es
mov
xchg
pop
testl
xchg
test
add
cmp
sub
bound
or
insl
stc
jp
sbbb
and
xchg
sub
in
je
lret
cltd
std
jne
adc
pop
sub
sub
push
movsl
ficoml
out
cld
pop
nop
mov
pop
mov
popa
inc
repnz
push
add
sbb
bound
or
jmp
mov
stc
insl
dec
scas
xchg
jmp
mov
xor
std
or
dec
out
loop
pop
mov
add
scas
adc
pop
hlt
xchg
stos
inc
jnp
arpl
cwtl
sarb
outsl
jge
out
hlt
or
bound
popf
pushf
adc
cltd
dec
or
mov
xchg
jno
xchg
pop
jle
or
ret
or
cmp
imul
aas
mov
rol
cli
sbb
xchg
dec
fisubl
fwait
dec
ret
inc
xchg
push
addb
testl
js
andl
or
cltd
sub
test
cmp
xchg
sbb
call
xchg
mov
add
mov
iret
inc
test
jns
fadd
popa
jno
and
lcall
pop
imul
popa
and
jg
lret
sub
mov
addr16
xor
push
scas
mov
pop
daa
movsb
and
imul
add
sbb
xlat
lret
lret
and
pop
ja
inc
inc
mov
daa
or
or
jo
pop
xor
dec
pop
jne
or
sbb
sbb
call
xchg
bnd
aad
xlat
ret
scas
loopne
testl
pop
and
lds
xchg
or
sbb
mov
pushf
and
mov
xchg
ret
mov
rep
cmp
lds
push
neg
mov
mov
icebp
pusha
loop
and
jp
jp
aam
xchg
pushf
sbbb
mov
sbb
cwtl
in
push
stos
adc
inc
mov
adc
mov
fstpt
mov
test
repnz
and
ds
jns
mov
mov
cwtl
cmp
pop
xlat
mov
sahf
loopne
inc
xor
sti
cwtl
outsb
ficompl
and
adc
sahf
iret
mov
mov
mov
add
adc
daa
adc
mov
mov
adc
daa
xchg
xor
inc
cmc
sub
pop
stos
pop
xor
xchg
cmpsl
push
inc
subl
and
xorb
inc
stc
or
mov
es
movsl
cltd
add
repnz
ja
imul
jmp
fwait
repnz
mov
and
mov
cs
sub
shr
adc
pusha
les
cmp
rcll
push
fwait
lcall
popf
mov
rorb
sahf
inc
lret
xchg
cmpsb
xchg
mov
ret
inc
repnz
push
les
or
pop
ljmp
mov
xor
daa
bnd
loopne
sub
leave
les
mov
into
lods
bound
dec
stos
es
and
mov
and
ja
push
mov
and
out
pop
cmpl
xchg
add
out
je
sbbb
jae
dec
sbb
xchg
in
lcall
and
sbb
push
sub
stc
push
es
fldcw
pop
inc
and
inc
sub
cli
xchg
fs
enter
push
sbb
xlat
mov
mov
cmpsb
sub
cmpb
and
push
dec
arpl
nop
mov
mov
lds
sbb
outsl
fnstenv
pop
fcompl
test
xchg
mov
das
imul
in
add
stc
sub
mov
pop
fsubrs
rolb
mov
rclb
call
int3
jo
inc
icebp
xchg
cmp
rorb
xchg
or
pop
inc
jecxz
mov
or
lret
sbb
fcmovnb
fyl2x
mov
lret
ficompl
fmulp
repz
movsb
hlt
movsl
sbb
fimull
push
stos
fimull
std
mov
push
sub
fnstcw
ficomps
sbb
sbb
or
sub
jns
jbe
shlb
mov
bound
leave
test
and
xchg
and
enter
mov
sbb
les
sbb
flds
sbb
movsb
xor
jae
add
loope
cli
shlb
lret
mov
in
jae
inc
and
pop
dec
cmp
mov
xchg
pop
popa
sbb
shll
cs
xchg
jnp
or
pop
jmp
jno
mov
mov
inc
add
rcr
push
xor
lcall
xchg
lret
pop
mov
lods
mov
jno
fsubrs
push
adc
add
ljmp
and
sub
repz
xor
push
xlat
loope
and
lock
cmp
push
adc
pushf
mov
sbb
xchg
adc
and
popa
adc
mov
cwtl
pop
xchg
push
xchg
pop
or
pop
xchg
mov
xchg
mov
sbb
push
dec
jp
sbbb
adc
repz
and
lret
jae
sar
rcll
sub
ljmp
fs
sbb
sub
gs
fcoml
int
xor
or
fidivrl
push
nop
cmpsb
and
or
dec
push
repz
out
arpl
cs
and
mov
jno
loop
into
insb
sti
es
sub
and
jl
mov
add
movsb
push
add
lret
cmp
xchg
add
mov
mov
add
and
jle
or
adcl
and
xor
sbb
dec
fs
hlt
cli
jb
andb
mov
fxtract
push
cmp
pop
ja
aas
push
or
sahf
insl
jecxz
ror
sub
jle
lcall
ja
or
nop
bound
xor
test
inc
jbe
mov
push
rcrl
mov
mov
or
insb
sbb
xchg
test
sahf
xchg
mov
rcr
mov
push
or
sub
dec
movsl
clc
fcomps
push
lods
dec
cltd
in
jo
pminsw
fistps
sbb
sub
leave
repnz
add
sbb
rcrl
sub
mov
pusha
xchg
test
loop
and
outsb
test
icebp
orb
and
orl
sub
or
xchg
movsb
repnz
dec
lock
hlt
rorl
mov
and
pop
sti
push
outsb
mov
and
incl
js
int3
fsubp
lods
cmpsl
sub
dec
jl
push
cmpsb
lds
into
inc
cltd
addr16
jae
sub
int
hlt
shlb
popl
pusha
add
psubsw
cld
leave
fsubrs
adc
out
leave
fisubs
pop
rol
in
inc
les
mov
lods
jae
sbb
cmpsb
mov
test
bnd
fsubs
lret
mov
lret
and
les
xchg
xchg
mov
aad
lods
lea
xor
testb
fimuls
test
lret
out
adc
lcall
mov
mov
or
and
push
lods
fistl
jecxz
les
outsb
mov
and
jbe
push
ljmp
aas
cltd
inc
mov
sbb
lods
or
lret
aaa
test
in
push
movsb
xchg
xchg
jnp
mov
scas
and
movsb
inc
aam
or
or
outsl
insb
or
or
lret
pushf
push
jmp
test
movsb
sub
sub
loopne
arpl
and
jno
push
js
or
std
bnd
cwtl
test
pop
sbb
fs
scas
je
mov
aaa
fcoml
movb
iret
push
call
xor
mov
sub
bound
mov
and
xchg
imul
cwtl
imul
inc
push
lds
mov
add
add
cmp
and
int3
sub
jo
lock
xor
lret
ljmp
mov
pop
shll
dec
mov
sub
mov
xlat
jl
or
aam
movsb
cmp
repz
arpl
sbb
jns
mov
mov
in
test
jns
adc
rol
aaa
fs
hlt
std
push
jl
lcall
fldl
add
pop
push
jg
lcall
fisubrs
lret
mov
shrb
std
cld
cmpsb
repnz
or
dec
shrl
jl
jb
ficompl
ljmp
cltd
adc
jmp
jmp
flds
test
and
data16
shl
ret
xchg
xchg
xchg
movsb
sub
test
adc
leave
jmp
ficomps
lcall
clc
adc
mov
dec
cwtl
cmp
insl
adc
sub
cmp
inc
xor
jle
or
adc
data16
adc
lea
pop
inc
out
push
cli
mov
adc
shll
sbb
ds
aaa
or
cli
repnz
dec
xor
imul
jo
clc
lods
cmp
lods
xchg
inc
test
aas
bound
inc
out
mov
loope
out
in
and
jb
fwait
stos
push
adc
dec
inc
or
cwtl
push
mov
test
daa
mov
fdivrs
pop
les
mov
xchg
aaa
and
lret
dec
or
sub
pop
and
pop
pop
xlat
bound
mov
pusha
or
stos
and
xchg
shll
lods
mov
je
or
dec
fucomp
adc
daa
daa
cmp
aad
ljmp
es
inc
repnz
mov
ret
int3
and
xchg
mov
push
adc
fcoms
pop
daa
adc
out
sbb
pusha
out
ja
lret
mov
jno
repnz
fnstcw
sbb
jo
sbb
xchg
xor
adc
push
out
or
lret
xchg
mov
add
dec
fsubp
fxch
push
mov
hlt
cltd
xor
movsb
jle
lahf
xchg
dec
add
adc
into
pop
bound
ret
pop
daa
iret
mov
cmc
push
jp
sub
pusha
es
fs
sahf
sub
adc
mov
addr16
jmp
xor
jae
lcall
push
mov
and
mov
sahf
out
xchg
hlt
fwait
mov
sub
movsl
repnz
push
loopne
and
stos
ret
mov
ret
mov
pushf
sub
pop
add
pop
sbb
jb
arpl
jnp
xchg
in
xchg
jg
dec
mov
bound
cld
push
mov
push
sbb
push
aad
hlt
xchg
push
stc
push
mov
xchg
dec
jp
scas
sub
or
popf
inc
sub
leave
pop
mov
ds
popa
aam
scas
jae
or
pop
and
repnz
sti
bound
push
and
mov
xor
std
pop
sbb
out
iret
jmp
adc
lret
int3
inc
ret
test
cmp
lcall
mov
arpl
pushf
pop
mov
aam
push
sub
inc
repnz
pop
lods
movsb
sbb
loope
inc
sub
push
enter
adc
fcomps
pop
cli
dec
nop
and
sub
sub
sti
cmp
test
sub
mov
pop
fyl2x
fstpl
inc
je
mov
and
mov
jl
and
enter
mov
add
into
aaa
rcll
xchg
popf
aam
or
insl
enter
inc
xchg
pop
adc
vcvtdq2ps
sbb
ficoms
adc
jo
xchg
movsl
pop
xchg
inc
mov
inc
sbb
cmp
push
sub
inc
out
or
dec
adc
loopne
lods
pop
push
xor
mov
imul
call
dec
popa
into
sbb
and
lock
jmp
test
js
xchg
aaa
xchg
mov
sbb
cmp
jmp
lret
aam
cmc
add
cmpsl
adc
call
or
mov
and
sbb
mov
push
fisttpll
aas
sbb
sub
ja
and
jmp
leave
imul
pop
mov
cmpsl
adc
xor
jae
pop
lock
xor
shrb
pop
cli
fsubs
push
add
filds
xchg
icebp
int3
or
jecxz
push
cmpsl
adc
push
mov
cmp
repnz
pop
test
and
push
scas
int
test
cwtl
or
mov
scas
xchg
cs
jnp
cmp
push
xlat
dec
or
or
pop
into
cmp
hlt
xchg
and
stos
adc
ljmp
dec
bound
or
mov
lret
pop
cld
outsl
dec
xor
xor
repz
cmp
or
and
addr16
pusha
std
sbb
ja
xchg
cli
sbb
loopne
xor
loope
and
inc
test
lret
sbb
mov
adc
sub
jge
jns
test
ljmp
aas
outsl
push
add
lea
or
popa
movsb
repnz
sbb
xchg
jne
aas
addl
stc
rcrb
dec
repz
pop
call
sub
fcoms
push
jb
inc
adc
jnp
or
and
arpl
in
sbb
mov
pop
add
cltd
pop
ret
xchg
ja
dec
push
jb
mov
mov
push
adc
sbb
cmp
sbb
push
aaa
cli
jle
and
xchg
sub
faddl
in
pop
ss
in
outsb
pop
mov
jbe
push
push
pop
xchg
mov
add
mov
insl
lret
sbb
outsb
mov
iret
insl
out
inc
scas
test
cmpsl
repz
adc
mov
cmp
loopne
daa
clc
mov
and
out
daa
repnz
sub
and
cmp
jmp
lock
mov
xchg
push
pop
out
decb
pop
repnz
jmp
mov
in
aas
push
pop
jns
push
cmp
fisttpl
push
sti
or
mov
push
xor
sbb
xchg
je
cmpb
inc
mov
pop
out
dec
call
sub
dec
popf
jo
lret
add
cs
xchg
jnp
je
add
fstpl
push
pop
sbb
pop
lods
jp
loop
out
push
adc
leave
mov
or
ljmp
clc
push
xor
sub
adc
xchg
mov
xor
and
sub
cltd
repnz
js
imul
stc
and
icebp
or
cli
repz
repnz
or
in
jo
cs
repz
int3
sbb
js
cmpsb
xor
add
pushf
jns
mov
or
push
mov
push
fs
mov
arpl
shll
adcb
add
jmp
out
enter
rclb
xchg
mov
stos
mov
cmp
add
pop
stos
sbb
lock
sub
add
or
cli
add
or
movsb
or
or
data16
cmpsl
jg
push
pushf
ret
xchg
stos
sti
out
sub
or
jecxz
es
cld
ljmp
jne
mov
mov
es
call
imul
iret
cld
jle
aas
inc
mov
mov
mov
in
push
out
cmpsl
push
and
push
loopne,pn
inc
jbe
cmpsl
test
mov
dec
cltd
cmp
fwait
idivl
aam
gs
movsb
xchg
js
mov
and
shld
inc
cmp
push
sbb
dec
fwait
mulb
jae
jecxz
es
jae
clc
pop
xchg
fcoms
shlb
sub
dec
sub
imul
imulb
pop
sbb
or
ror
ficompl
xlat
mov
sbb
test
mov
push
arpl
sbb
sbb
add
or
mov
lock
lret
fimuls
cmp
sbb
lret
inc
or
daa
in
sub
nop
cmpsl
cmpsl
not
pop
pop
lret
adc
stos
push
in
mov
jecxz
scas
mov
in
andb
fistpl
icebp
aas
ljmp
sti
loope
add
xor
pop
fst
into
inc
add
jbe
hlt
daa
cli
add
xchg
lods
int3
add
daa
xor
sub
adc
dec
lret
es
sbb
dec
lahf
jbe
or
sub
jecxz
push
or
lds
shl
pop
les
push
cmp
repnz
adc
xchg
push
imull
pop
fiadds
mov
stos
or
fmull
in
ret
mov
into
push
movsb
enter
jne
cmp
or
add
cmp
cmp
add
mov
sbb
or
sub
dec
stos
sub
lods
pusha
and
xchg
cmc
fsubrl
mov
mov
aaa
add
cld
and
popl
out
aam
out
into
popa
repnz
dec
ret
shrl
mov
or
adc
mov
or
adc
jge
add
shll
arpl
popa
daa
push
scas
rorl
jecxz
push
stos
and
and
adc
ret
into
sbb
xorl
xchg
out
pop
sub
and
sbb
jecxz
push
adc
cmpb
jecxz
call
xor
out
mov
aam
dec
mov
xchg
pop
jl
dec
dec
pop
lcall
sbb
into
mov
insb
xchg
or
xlat
enter
add
sarl
mov
adc
sub
cmc
sbb
leave
movsb
adc
fwait
xor
inc
mov
dec
sbb
lds
pusha
cmp
ja
test
sub
mov
jp
fisttps
push
mov
dec
mov
rcrl
outsl
mov
movsl
add
arpl
aaa
sbbb
dec
lcall
dec
or
out
push
mov
imul
in
fidivl
shll
dec
adc
add
inc
iret
mov
ret
pop
mov
call
pushf
fsubl
rcrl
test
xchg
insl
xchg
arpl
mov
jns
inc
pop
push
and
jo
jle
xlat
jl
jl
dec
mov
xor
xchg
out
jae
js
mov
pop
sub
push
mov
jae
je
inc
mov
adc
push
jl
fbld
xorb
xor
les
loop
testb
cld
fdivs
push
mov
jl
fs
jg
sti
loopne
fisttpl
xchg
fnstcw
cltd
mov
sbb
mov
mov
jbe
cld
xor
pop
jg
ficoml
fistpl
adc
repnz
and
mov
inc
fstps
jg
cmp
sub
inc
xchg
das
shrb
push
cmp
leave
ffreep
jno
aas
ljmp
or
sub
xor
mov
xchg
adc
inc
outsl
or
add
repnz
mov
or
and
inc
test
or
xor
inc
sbb
mov
repz
scas
mov
add
iret
push
sti
mov
dec
sbb
adc
daa
sub
cmp
xlat
aad
bound
cmp
and
mov
leave
mov
ds
cmp
jae
add
xchg
push
js
sub
mov
adc
sti
jno
cli
sbb
test
movsb
add
sti
clc
jmp
out
or
push
enter
jne
mov
cmp
mov
push
or
stos
ret
or
cwtl
es
jno
mov
pop
xchg
cld
inc
push
push
mov
cmp
fwait
xlat
nop
add
xchg
mov
push
sub
aam
add
es
xlat
mov
push
test
ret
jecxz
pushf
adcb
insb
mov
outsl
and
repnz
mov
shlb
sbb
mov
cmpsb
xchg
mov
xchg
xchg
mov
scas
pop
test
jle
add
repnz
add
test
cmp
mov
lods
or
adc
jb
mov
iret
adc
mov
dec
inc
jo
lret
inc
pop
sub
sbb
dec
je
stc
adc
or
shll
enter
and
sub
push
or
sbb
movsl
and
movl
in
stos
bnd
inc
shrb
jnp
and
cmp
loopne
dec
iret
mov
mulb
daa
std
sbb
push
push
dec
push
sbb
cmp
stos
add
mov
test
add
cmp
fisubrs
and
lcall
and
outsb
cmp
fists
les
lds
add
or
mov
jle
dec
addr16
fwait
cs
pop
add
movsb
add
or
mov
popf
stc
daa
and
or
adc
and
sbb
test
pop
dec
sub
mov
sub
pop
or
sub
iret
mov
adc
hlt
mov
bts
daa
fstp
sub
mulb
into
push
push
adc
stos
outsl
mov
mov
daa
cmp
xor
hlt
xchg
or
repnz
insl
fwait
jmp
sub
xor
jg
fisubrl
jmp
mov
sub
jg
xlat
mull
leave
iret
jmp
jl
cmp
and
adc
jmp
mov
and
bound
sub
jmp
pop
or
cwtl
imul
sub
mov
testl
mov
mov
setp
lcall
lock
cmp
fldl
cld
or
pop
flds
mov
add
or
movsl
imul
loop
jle
jnp
repnz
sbb
push
fildl
mov
inc
inc
jae
add
in
add
push
jmp
fidivs
pop
ss
sub
push
cmp
loope
or
lods
dec
imul
adc
mov
adc
mov
and
dec
outsb
sbb
dec
or
call
jecxz
inc
push
dec
sbb
sbb
imul
loop
insl
mov
dec
sti
and
add
mov
es
or
call
into
mov
fsubrs
les
out
addr16
xor
loop
or
adc
pop
mov
pop
mov
or
imul
rcrl
fwait
pusha
jecxz
push
leave
sbb
push
lret
jnp
aaa
out
loopne
and
movsb
sub
iret
stos
in
decb
stos
adc
or
aas
leave
sub
push
js
dec
push
sahf
aam
imul
mov
les
arpl
sub
xlat
les
sbb
movsb
imulb
lret
add
xchg
sbb
scas
cwtl
std
out
mov
repnz
call
sub
lcall
popa
bound
jbe
jge
xor
mov
ljmp
call
fs
add
sbb
dec
lods
mov
pop
mov
ljmp
cli
mov
ficomps
mov
cmp
in
xor
dec
adc
jp
out
loopne
lcall
sbb
pop
inc
sbb
ljmp
mov
inc
jmp
sbb
xchg
outsb
add
arpl
lods
mov
aas
pop
mov
pop
and
mov
outsl
mov
add
pop
push
xchg
xor
into
sub
mov
dec
push
jb
jo
das
jo
adc
das
jbe
imull
or
cmp
das
or
enter
and
and
pop
frstor
fidivrl
test
ret
lock
or
loope
loope
or
in
loope
test
xlat
ja
fld1
int
and
add
add
dec
push
lret
imul
or
insl
fisubrl
ljmp
jp
push
lret
mov
mov
push
fnsetpm(287
scas
sub
iret
xor
sbb
pop
jge
fcoms
sbb
add
push
push
or
lea
out
pop
jbe
adc
fldl2e
lods
sub
and
cmc
cmp
pop
adc
sub
mov
stos
or
mov
xchg
sbb
test
sub
fcompl
lods
and
pop
fsubrs
jle
ret
bound
adc
dec
in
pop
mov
sub
cmp
je
or
cltd
cmp
int
fdivl
mov
enter
or
mov
out
lea
and
fdiv
pop
cmp
lret
rcrl
mov
pop
aad
outsb
cmp
sbb
xchg
pop
mov
xchg
push
dec
cmp
in
or
movsb
bound
fimull
fsubs
and
xor
hlt
jmp
lcall
cmpsb
xor
xor
orb
out
cli
mov
and
xor
or
mov
cli
xor
mov
test
push
sub
bound
pop
sub
and
inc
cmpb
xchg
sub
and
dec
pusha
mov
jae
in
into
call
add
or
xacquire
jp
mov
xor
xchg
out
jb
sbb
and
out
xchg
sub
sub
jp
inc
lock
lret
neg
leave
sbb
push
mov
xchg
lret
aaa
mov
xchg
lock
push
mov
aas
mov
sbb
std
add
in
sbb
sbb
sbb
out
outsb
enter
adcl
call
sbb
imul
xchg
push
mov
arpl
repz
jecxz
mov
rorl
jp
mov
into
jns
lahf
arpl
addr16
out
sbb
xor
and
mov
lcall
cltd
and
or
jo
cmp
jo
mov
shr
jbe
fisubs
movsb
dec
sbb
dec
stos
fistpll
xor
cmp
push
add
add
ljmp
les
push
mov
mov
hlt
in
mulb
je
bound
sub
mov
jmp
xlat
jb
pop
pop
icebp
push
outsl
fstpl
movsb
bswap
fstpt
xor
mov
cmp
cs
lds
dec
adc
movsb
test
loopne
jge
jne
test
xchg
jp
dec
ficompl
sub
call
outsb
cwtl
and
sub
cmpsl
xor
pop
imul
js
es
and
js
clc
iret
test
jmp
jbe
sbb
mov
cmc
repz
add
fwait
push
lret
arpl
pop
dec
enter
test
pop
arpl
cwtl
pop
mov
int
or
leave
and
pop
sbb
mov
ss
add
imul
pushf
les
les
fdivl
cli
scas
push
stc
loop
and
stos
sbb
lea
test
aaa
push
test
test
popa
add
xchg
cmp
stos
rclb
xchg
lock
lods
je
pushf
mov
and
addr16
sbb
inc
cwtl
jecxz
xchg
mov
xor
and
adc
fldt
sbb
bound
pop
cmpsb
sbb
sti
cli
adc
mov
out
or
loop
lea
or
inc
cli
xchg
push
jno
daa
mov
and
pop
and
mov
xchg
sbb
and
sub
sub
cmp
mov
adc
mov
push
fidivl
fstpl
mov
shl
xor
int3
sbb
mov
dec
mov
imull
lret
fidivrl
push
add
pop
sub
out
sub
xor
push
rolb
jl
mov
sbb
sbb
les
add
sbb
adc
pop
decl
out
adc
fisubl
jp
daa
out
pop
and
sbb
imul
mov
dec
std
in
lret
sbb
in
jno
add
adc
adc
rcll
xchg
cli
jbe
fnstcw
out
imul
cmp
cmp
mov
xor
int3
sti
sbb
add
jmp
aam
outsl
jno
int
jge
xchg
call
pop
push
cmc
push
sub
sub
dec
cmp
xchg
push
out
and
pusha
jle
sub
dec
fsubs
jg
sbb
cwtl
dec
push
push
out
filds
mov
repnz
int
sbbl
lods
in
popa
sbbl
add
push
mov
iret
fwait
xchg
or
hlt
push
stc
cmp
xor
test
ficomps
dec
lods
in
inc
loop
imul
xchg
mov
push
popa
xor
fucomp
jl
mov
aam
adc
inc
xchg
push
pop
fidivrs
clc
jmp
sub
repnz
mov
pop
mov
lcall
jnp
pop
or
and
scas
cmpsb
sbb
mov
stos
and
pop
push
in
jp
xchg
sbb
stos
inc
lret
mov
xchg
repnz
sbb
mov
pop
sub
sub
cli
xchg
lahf
cmpsl
aam
movsb
shlb
repnz
imul
jne
pop
das
enter
push
sahf
iret
mov
pushf
mov
xchg
ret
pop
xchg
cmp
cwtl
out
cmp
ss
and
je
jmp
decb
clc
movsl
lahf
movsb
cltd
movsl
xchg
rorl
mov
les
lods
push
cmpsl
mov
or
test
in
mov
or
add
rcrl
add
add
jmp
inc
sbb
adc
aas
icebp
jp
add
shl
icebp
add
repnz
push
xor
nop
mov
push
add
and
in
in
movsb
sbbl
mov
dec
clc
fnsave
jecxz
imul
insl
and
push
dec
lock
shll
sbb
cmp
pop
adc
pop
insb
and
xchg
sar
xchg
adc
negl
mul
dec
adc
cmpsl
fwait
icebp
in
sbb
sahf
inc
mov
aas
jne
mov
bound
xor
cmp
es
xchg
jl
pop
push
leave
dec
or
ljmp
pushf
jmp
adc
xchg
rcrl
xchg
imul
mov
pop
dec
and
jno
orb
xor
gs
mov
imul
lret
mov
pop
ss
icebp
jecxz
and
add
cli
xchg
or
or
inc
pop
in
sbb
stc
adc
mov
jb
mov
and
xchg
and
lods
jbe
call
or
cmp
sub
add
movsb
rolb
sbbl
adc
jp
add
popf
add
stos
out
mov
or
pop
cmp
dec
fcmove
mov
es
enter
test
inc
mov
push
push
push
cmp
stc
push
fdivrl
add
or
and
dec
mov
aas
jne
dec
dec
push
test
sub
les
aad
and
or
test
xor
xor
pop
or
push
or
das
jne
scas
ja
clc
jmp
imul
aas
mov
cli
mov
popw
or
or
in
mov
pop
xchg
sbb
repnz
dec
fistl
mov
out
subl
ret
mov
gs
fs
inc
and
jl
mov
mov
ret
xor
inc
adc
cwtl
subb
jo
cmpsb
pop
jnp
shr
sub
outsl
call
mov
icebp
inc
arpl
sbb
lock
test
and
inc
or
dec
pop
cmpsl
sbb
sbb
mov
mov
adc
cmp
cmpl
cmp
xorb
lock
jecxz
mov
movsb
imul
cmc
fdivr
repnz
fiadds
push
cwtl
dec
out
mov
lock
call
sbb
pop
cmp
ljmp
ljmp
inc
shll
mov
mov
repz
insb
and
mov
xor
fstl
add
pop
insl
xorb
pop
adc
mov
icebp
cmp
leave
in
les
adc
das
xchg
xchg
test
in
stos
and
add
fisubs
push
lcall
fistl
adc
stos
and
repnz
lret
js
loope
mov
lock
jns
jae
cltd
leave
mov
mov
rolb
mov
push
mov
fdivs
fiaddl
pop
or
out
push
out
xor
sbb
add
inc
bound
mov
sub
sub
lods
dec
mov
or
movsb
and
test
mov
jno
pop
mov
aas
and
or
mov
sbb
or
mov
jbe
xchg
dec
clc
fldenv
sub
lret
out
ret
cmc
fldl
sbb
push
mov
imul
lahf
push
sbb
stos
test
jno
cmp
pop
jle
dec
push
repz
repz
imul
pop
sub
cld
js
push
add
imul
mov
sti
loop
lea
imul
and
adc
add
sti
cwtl
movsl
ss
pop
xchg
xchg
pop
pop
push
sbb
lret
push
add
cmp
inc
sbb
out
out
lock
add
dec
test
mul
leave
and
and
or
lret
push
mov
sub
sbb
lret
mov
scas
out
lods
pop
jb
cmp
jl
popf
sbb
jb
adc
sub
clc
mov
lret
mov
push
xchg
ljmp
push
mov
lret
xor
xchg
mov
insl
or
xlat
sub
mov
sti
fwait
pop
mov
aam
add
imul
sbb
sub
pop
sbb
ljmp
enter
imull
push
mov
pusha
xchg
sub
push
movsl
xor
je
fwait
sub
xorb
testl
and
mov
or
fisubs
test
or
sbb
loopne
jns
cwtl
sub
pop
outsb
jl
sub
lret
cld
in
arpl
pop
mov
inc
pop
mov
jp
cmp
out
push
je
lret
add
pushf
xlat
sub
enter
xchg
repz
xchg
lcall
cwtl
and
sub
xlat
and
push
pop
ja
fdivs
repz
mov
mov
leave
lea
jbe
xchg
lods
push
aaa
sub
and
and
dec
push
sub
iret
mov
xlat
pushf
dec
shlb
ljmp
lret
jne
je
xchg
rolb
mov
add
mov
movsb
cli
inc
cmp
adc
pushf
pop
xchg
fcmove
shrb
int3
sub
inc
leave
lret
sti
add
jb
mov
aad
lret
jo
xor
jmp
daa
sub
pop
and
sti
sbb
or
mov
jge
mov
imul
movsb
dec
mov
leave
cmp
mov
adc
sbb
push
repnz
leave
leave
gs
push
dec
dec
clc
lods
test
stc
or
cwtl
fadd
movsb
xlat
je
jae
cltd
pop
push
loop
and
and
repnz
push
push
std
and
jne
out
lahf
add
and
mov
ljmp
add
sti
fwait
push
push
dec
cmpsb
or
or
or
sti
loopne
pop
pop
jle
shlb
adc
jno
aas
lods
jmp
lock
outsb
loope
test
mov
adc
sbb
andl
sbb
aad
cmpb
adc
out
sub
call
xlat
fsubs
dec
out
js
and
out
sbb
test
int
leave
sbb
inc
cmp
int
cmpsb
mov
and
in
enter
xlat
mov
loopne
cmp
outsb
enter
loop
add
pusha
sbb
ss
lea
cld
sub
cmpsl
mov
stos
and
sub
and
ret
cwtl
add
pop
and
push
pop
out
pop
icebp
and
in
mov
nop
jno
jnp
xchg
fwait
mov
xor
jb
mov
shrb
and
sbb
pusha
dec
sub
inc
test
punpckhwd
sub
cld
sbb
fwait
pop
lods
push
idivb
and
mov
and
mov
shlb
sub
fst
adc
sbb
imul
fildll
mov
test
leave
fsqrt
repnz
js
and
cmp
push
icebp
jge
repnz
aam
dec
iret
popa
movsl
jae
adc
les
push
aam
fimuls
aad
mov
pop
push
mov
or
clc
in
jge
je
sub
push
sbb
sbb
jecxz
in
cmpsb
loopne
jge
xlat
mov
pop
xchg
adc
mov
push
jbe
out
or
iret
clc
lret
hlt
cwtl
sub
inc
add
ljmp
xchg
ds
push
repz
mov
lods
sub
daa
jb
mov
out
push
cmp
stos
iret
jno
in
rcrb
sahf
pop
inc
jnp
sub
or
mov
stos
sub
sti
lea
cltd
sub
hlt
xchg
gs
shrb
sbbb
dec
fdivl
in
movsb
stos
mov
jmp
ljmp
and
sub
sbb
sub
gs
xor
xchg
movsl
pop
add
or
pop
enter
and
cmc
lret
repz
and
cmpsl
or
sbb
inc
mov
stos
repnz
stos
dec
bound
push
xor
repnz
and
cmpsl
les
and
sbb
sbb
dec
je
add
std
in
push
xor
lcall
movlps
cmpsl
imul
sub
jle
mov
xchg
sbb
add
cmp
push
stos
mov
adc
aam
mov
push
arpl
sbb
and
mov
xor
popl
xchg
add
out
xor
add
mov
mov
xor
fadds
xlat
notl
cmp
fsubrs
test
lods
test
push
leave
jl
push
jecxz
outsb
cmpb
lret
adc
mov
and
inc
fwait
push
cltd
xchg
cmp
sbb
adc
push
sbb
mov
xor
cmpsb
xor
daa
push
cmp
add
cmp
cmpl
and
or
imul
dec
out
out
imul
cmp
pusha
cmp
mov
cmp
inc
cli
xor
movsb
xchg
aas
cmp
jp
arpl
jo
lret
sub
push
aaa
xchg
stc
mov
and
push
fs
imul
push
push
das
or
negb
mov
gs
mov
xor
cld
push
push
adc
jbe
fiadds
scas
sbb
and
fsubrl
leave
or
inc
imul
hlt
mov
cs
imul
mov
sub
sub
adc
and
add
sbb
pusha
pop
cmp
mov
test
out
mov
cmp
adc
addl
test
testb
shlb
or
xor
shrl
outsb
sub
in
and
cmp
mov
and
sub
xchg
sub
sbb
and
sub
in
insb
jp
sbb
jge
push
sbb
sti
adc
divb
mull
xchg
test
and
insb
mov
and
lret
clc
add
mov
mov
lods
or
sub
das
jnp
cs
and
jb
pop
mov
pop
into
and
test
pushf
ficompl
sbb
adc
shl
mov
cmp
add
loopne
dec
fisubrl
mov
mov
pusha
jmp
mov
jno
nop
movsb
jecxz
outsl
sub
arpl
mov
adc
mulb
sbb
mov
cmp
cld
mov
lret
clc
push
fs
xor
or
sub
mov
sub
ret
mov
mov
cmp
jecxz
sub
push
mov
mov
dec
fistpl
popa
ja
cmp
mov
push
lret
jae
mov
xchg
cmp
push
inc
sbb
and
and
test
sbb
cmp
or
les
xchg
dec
cltd
mov
shlb
mov
push
inc
mov
xor
cmpsl
std
gs
idivb
xor
or
jbe
cmp
test
pop
jae
mov
mov
xchg
add
fstl
jp
outsb
filds
pop
cwtl
cmp
mov
or
and
movsb
jmp
xor
movsb
fs
sub
mov
add
cmpsb
mov
xchg
fldt
subl
xsave
and
mov
aam
andl
xor
test
andw
negb
cmp
pop
and
sub
mov
ljmp
sbb
cs
or
push
pop
sbbl
push
sub
or
mov
orl
in
sbb
mov
add
cmp
cli
pop
fwait
or
jmp
cwtl
fisubrs
fnstenv
mov
idivb
repnz
sbb
icebp
enter
loopne
and
fisubrl
sbb
xor
clc
pop
mov
pusha
mov
mov
icebp
stos
or
popf
jae
orb
aaa
repz
sub
pop
sbb
mull
sbb
js
mov
jb
add
adc
mov
pop
jp
inc
stc
bnd
push
pop
xchg
sbb
out
xor
repnz
xchg
cmp
pop
ds
sub
mov
loop,pn
popa
lock
jge
add
ljmp
and
pop
jnp
inc
and
repz
dec
mov
mov
ljmp
rclb
xchg
fs
mov
sub
xor
lret
out
jo
lods
xor
jb
bnd
cld
push
loop
in
sub
movsl
mov
imul
divl
fstl
sbb
jl
imul
ss
mov
out
or
gs
lahf
or
push
andb
pcmpgtb
mov
xor
fiadds
xchg
out
and
sti
lret
dec
mov
inc
std
arpl
fisubrl
pop
and
add
out
mov
fisubl
mov
sbb
repnz
je
dec
inc
sub
cmpsl
mov
fildl
pop
cmpsl
sbb
pusha
add
orl
out
fimull
cmp
jle
dec
and
inc
je
cmpsl
xlat
cmp
sahf
out
je
daa
adc
push
loope
xchg
mov
arpl
insb
insl
mov
pop
and
test
stc
sub
stos
sub
jle
xchg
dec
data16
pop
cli
pushf
and
dec
cltd
loope
adc
out
xor
xchg
inc
insl
ret
js
call
stc
inc
sub
mov
or
or
and
mov
sbb
adc
add
push
sub
and
nop
push
and
sbb
and
insl
add
add
mov
add
iret
lret
fwait
inc
dec
push
add
inc
mov
jns
pop
jmp
iret
adc
in
aad
push
sub
in
cltd
cmpsl
icebp
xchg
pop
cltd
jne
iret
and
sbb
or
push
das
enter
jne
aas
js
in
jno
cmp
sahf
mov
es
and
sub
and
lcall
dec
push
xchg
dec
stc
xor
mov
scas
in
push
les
xor
and
cwtl
xchg
fwait
loop
sbb
daa
loope
jbe
add
dec
cmc
mov
fwait
dec
pop
clc
and
xor
inc
std
add
inc
xchg
int
jbe
push
jnp
lods
repz
mov
mov
stos
dec
xor
mov
mulb
xor
test
jl
sub
lret
inc
xor
int
std
test
sub
test
add
sub
lret
stos
lea
icebp
sbb
call
sbb
and
insl
cmc
jle
imul
xchg
imull
insl
sbb
sub
pop
int
das
clc
fldl2e
bound
cvttps2pi
aam
imul
jl
call
dec
sahf
hlt
xchg
pop
sub
mov
xchg
push
mov
add
ljmp
xor
add
imul
push
out
hlt
mov
mov
cli
aam
xor
mov
adc
inc
cmp
pushf
mov
shrb
push
loope
lods
add
jp
or
mov
jne
test
xchg
mov
push
fcomps
adc
cwtl
in
jmp
lret
popa
mov
repz
adc
scas
dec
xor
cmc
popa
cs
sub
pop
inc
inc
jmp
mov
cmp
sub
add
or
inc
insb
cli
in
xlat
in
add
insb
test
out
add
mov
ja
lret
in
sub
dec
stos
mov
sbb
adc
mov
xchg
cs
mov
sbb
leave
pop
push
mov
scas
lods
je
pop
bnd
pop
movsb
scas
dec
cmpsb
icebp
lock
sti
movsb
pushf
mov
dec
sbb
cmp
lret
jae
sti
fidivrs
and
fsubrl
mov
and
jae
push
sbb
insb
lds
arpl
test
lret
fldenv
ds
loope
jne
test
xchg
loope
or
shl
mov
lret
and
mov
icebp
lock
lock
sub
dec
jmp
adc
or
leave
leave
call
xchg
js
aas
xor
negl
or
xchg
repnz
int3
and
mov
push
push
movsl
and
mov
sbb
xlat
or
out
dec
inc
xchg
add
sub
xlat
and
mov
and
iret
daa
pop
fcoml
or
cwtl
clc
leave
dec
fadd
xlat
sub
fmul
push
jle
test
add
sbb
add
jne
lea
aam
stos
std
fsubl
and
mov
push
lahf
or
xchg
leave
pop
cwtl
xchg
mov
out
mov
push
arpl
sbb
xor
je
addr16
data16
addr16
xchg
mov
add
loop
push
scas
js
pop
or
jecxz
inc
jge
inc
loop
aaa
adc
or
sahf
imul
adc
hlt
cmp
js
loope
lcall
les
sbb
clc
mov
lret
rorb
inc
inc
pop
insl
ds
aam
pop
xor
sahf
push
cltd
iret
xor
sbb
pop
je
xchg
sub
loopne
lcall
test
sahf
cwtl
or
mov
int
xor
sub
andb
cli
cli
xchg
lds
add
in
or
jecxz
fimull
ljmp
inc
push
dec
sbb
lds
pop
mov
ja
push
cmp
mov
pop
je
insl
sbb
inc
and
mov
loopne
pop
aam
lcall
test
cmpsb
xor
and
adc
aas
fmull
mov
lahf
pusha
push
jno
cmp
mov
mov
lret
adc
push
or
or
mov
and
orl
mov
pop
bound
sar
xchg
jno
adc
sbbb
repz
bound
movsb
sub
cmp
hlt
fisttps
mov
daa
leave
pop
jno
gs
fmuls
and
xchg
or
daa
mov
add
popf
adc
cmpsl
cmpsl
repz
loop
and
jnp
out
pop
sbb
mov
shll
jmp
mov
lea
leave
test
xchg
sbb
call
xchg
sub
sbb
test
idivb
fcomps
testl
push
hlt
cmpsb
out
test
inc
leave
mov
push
icebp
clc
xchg
mov
lret
pop
or
testl
scas
mov
ret
out
cs
lcall
popa
pop
mov
push
sahf
mov
cmp
call
aad
sti
and
mov
shl
and
lock
testb
cmpsb
imul
sub
lods
pop
xchg
pop
cmp
dec
scas
daa
fadds
call
push
jb
cmpsb
inc
ds
xor
add
xlat
jo
cmp
lock
out
mov
test
aam
jnp
jns
out
mov
adc
pop
lret
xor
ja
sti
imull
mov
lea
sbb
mov
jmp
and
dec
lret
or
push
cli
jo
stc
dec
jnp
repnz
xchg
frstor
xor
push
stc
pusha
cmp
jmp
addr16
mov
or
fwait
fwait
in
xchg
xchg
clc
cmpsb
movsb
sub
mov
jle
cli
jo
loopne
push
dec
lahf
sub
je
mov
jle
rcll
rcrb
jnp
mov
stos
xchg
pop
sub
outsl
js
or
mov
mov
cmc
cmpsl
outsl
mov
ret
outsl
nop
lea
xchg
inc
or
xlat
hlt
aam
mov
dec
fisubrs
iret
mov
fistps
lret
mov
push
pop
fsubrl
pop
mov
sbb
cmp
xchg
and
push
repnz
pusha
and
insl
fcmove
xchg
pop
dec
pop
push
cmp
mov
rcrb
pop
xchg
pop
mov
sub
add
clc
dec
stos
push
fucomip
cmp
ja
cltd
call
test
lods
fdivs
lods
aaa
pop
pop
push
sbb
or
insl
pop
out
sub
daa
mov
cmp
xchg
icebp
sarb
out
sub
cmp
repnz
mov
insl
aam
repnz
lods
sbb
xlat
pop
mov
outsb
fwait
mov
add
or
aam
cmp
mov
lds
sti
mov
js
cli
fstpt
negb
mov
fsub
dec
add
jl
xchg
sub
stos
cmp
sub
sbbb
notl
ds
test
jns
sub
call
orl
mov
add
loopne
cmp
in
cwtl
dec
adc
enter
dec
adc
insb
sub
je
jbe
mov
push
aaa
ss
loope
ret
cs
mov
movsb
leave
jge
or
and
call
mov
test
mov
std
fiadds
in
loopne
repz
or
mov
sub
in
cli
stos
or
sub
sti
pop
or
movsb
pop
xchg
pop
push
ljmp
sbb
lock
sub
ret
daa
movsl
and
popf
sbb
dec
les
cli
jmp
fisubrs
hlt
mov
lods
test
dec
xchg
and
in
push
inc
cld
and
daa
cli
movsb
add
and
movsb
pop
xchg
bnd
xor
out
push
adc
mov
and
addr16
movsb
popf
jge
adc
pop
cli
aam
jmp
adc
repnz
mov
and
sbb
sbb
pop
mov
js
fwait
push
push
lds
push
or
xchg
fnstcw
dec
jmp
adc
push
xchg
loopne
adc
mov
and
adc
movsb
test
or
sub
sbb
sti
adc
fdivl
ljmp
negb
sub
test
clc
cli
jnp
push
in
sub
mov
and
or
cli
or
jbe
jmp
ret
movsb
adc
add
or
xchg
pushf
hlt
out
xchg
movsb
sbb
es
fcmovnu
lcall
sub
and
cli
sbb
sub
mov
sub
jno
cwtl
sbb
in
sub
js
enter
xchg
adc
jp
imull
enter
rcll
xor
or
es
out
in
pop
iret
outsl
jnp
lret
or
movsb
adc
loop,pn
push
jo
in
call
fwait
std
stos
xchg
or
xchg
repnz
cmp
xor
or
aad
ret
test
repnz
add
xchg
xchg
shl
and
mull
int3
pop
repnz
sbb
xchg
lcall
sti
push
mov
enter
adc
dec
out
add
in
sub
or
call
test
lret
sub
movsl
inc
push
adc
push
in
inc
cs
shll
xor
int
jge
nop
dec
sbb
sub
inc
add
iret
or
and
push
xchg
test
cmpsb
mov
pop
and
es
push
movl
pop
mov
sbb
sahf
inc
movsl
push
movsl
cltd
out
adc
movl
aam
xchg
inc
js
jg
sbb
cmp
xchg
orb
sti
or
lret
out
in
add
xor
and
rorb
adc
mov
xchg
test
repnz
gs
std
push
lret
dec
icebp
imul
xor
and
xlat
repnz
adc
sub
fists
fnstcw
ljmp
cmpb
pop
ljmp
jo
repz
hlt
jg
fs
push
xorb
in
movsb
pop
adc
inc
mov
movsl
in
clc
jbe
xchg
ljmp
jecxz
sbb
clc
pop
mov
add
mov
leave
cld
push
mov
or
jae
adc
fdivrp
call
test
push
packsswb
mov
sub
mov
fsubs
push
int
fadds
add
mov
pop
xlat
fwait
push
xchg
sbb
sbb
sub
pop
ss
cmp
pop
xor
inc
ret
je
movsb
fildll
fcmovnu
subb
das
or
bnd
data16
cmp
cmp
js
mov
rorb
call
inc
fcomps
rorb
ror
and
adc
sub
add
leave
or
inc
in
test
sub
adc
adc
cwtl
lods
add
dec
mov
lods
sti
call
fwait
or
sbb
or
jmp
xor
sbb
cmp
lock
and
xchg
ljmp
cmp
xor
jnp
movntps
xchg
ljmp
in
cmp
ficompl
pusha
adc
arpl
cs
cmp
out
movsb
add
mov
cmp
stc
test
pushf
push
subb
and
xchg
push
and
in
insb
aaa
xchg
add
push
and
inc
sbb
jle
sbb
lods
test
pusha
sbb
or
or
movsl
or
fistl
jmp
leave
inc
lods
xchg
mov
sbb
mov
pop
sbb
rcrl
or
dec
jge
pop
xor
sbbl
jnp
dec
cmp
mov
sub
xor
add
les
jno
adc
and
inc
sbb
or
sbb
test
sub
push
jge
xor
xor
cld
call
mov
jmp
sbb
mov
sbb
dec
aam
dec
mov
cltd
js
sub
mov
test
mov
repnz
sub
call
mov
pop
ljmp
leave
sub
and
sbb
xchg
loope
pop
sbb
inc
loopne
les
in
testl
mov
xor
mov
pop
or
mov
stos
daa
stos
xchg
fcmovnbe
int
pusha
xor
repnz
add
jl
mov
fwait
lods
out
iret
in
pop
pusha
pop
test
or
repnz
bnd
push
fidivrs
mul
push
mov
mov
fstpt
or
psubusb
popf
mov
repnz
inc
cld
xor
pop
jne
sbb
lods
xor
xchg
xor
xchg
add
int3
dec
bound
dec
pop
mov
mov
or
pop
aam
cwtl
adc
jecxz
add
stos
mov
testl
fs
call
imul
cmp
std
insl
sahf
bnd
push
lock
insl
fiaddl
lcall
push
in
add
test
sub
jp
push
sti
mov
aad
or
mov
jnp
loop
lock
xchg
add
pop
xlat
lret
aam
mov
sbb
jb
in
nopl
cli
or
mov
mov
jo
data16
xchg
push
pusha
xchg
loope
add
ficoml
lret
repnz
inc
adcl
push
mov
push
mov
or
mov
repnz
or
xchg
scas
stos
cmp
sti
add
lods
test
xor
movsb
repnz
sbb
add
pusha
add
and
xchg
rcl
in
in
and
or
es
in
pusha
adc
lods
insl
ljmp
les
mov
push
xchg
test
insl
pop
arpl
push
jo
scas
out
mov
out
arpl
int
adc
loope
push
std
inc
push
outsb
jns
fisubrl
sbbb
xchg
and
pop
jno
lods
into
dec
mov
bound
cld
lcall
sbb
jns
out
cmc
lret
dec
data16
jmp
mov
push
fs
mov
enter
dec
add
or
and
jo
add
loopne
call
ss
sbb
arpl
sbb
adc
or
add
leave
les
pushf
cwtl
lret
and
pop
call
aad
jecxz
lahf
and
cmpsb
insb
xchg
sub
clc
lret
xchg
stc
cmp
jecxz
ss
jmp
mov
inc
mov
mov
jmp
out
pop
testl
pop
adc
pushf
pop
pushf
and
daa
stos
nop
push
test
lock
push
imul
mov
xchg
inc
jge
aaa
pop
mov
movsb
leave
cli
in
lret
cmc
fistl
mov
sbb
repz
lret
in
repnz
aam
mov
icebp
or
cwtl
out
aam
push
loope
andb
cmp
fwait
xchg
stos
sub
mov
mov
loop
jae
out
mov
xor
test
or
leave
dec
pop
pop
repnz
mov
lea
push
sub
lret
or
gs
add
fucomi
ljmp
adc
mov
shl
mov
mov
fdivrs
xor
in
je
jle
fwait
aad
cmp
popa
adc
es
int
inc
xor
sub
int3
xchg
data16
movsb
sbb
pushf
inc
mov
pushf
lcall
pop
pushf
pusha
lret
repnz
adc
aas
shll
and
inc
call
or
aam
cmp
insl
inc
jl
lds
int
leave
rol
adc
ror
loopne
sahf
mov
and
jns
and
outsl
sahf
lcall
cmp
lock
jecxz
jl
sub
sub
sbb
cmp
lret
push
mov
sub
or
mov
cmpsb
loopne
jmp
cld
insl
cltd
pop
mov
jp
and
fwait
or
jno
mov
add
stos
out
rcl
adc
adc
jmp
loope
dec
les
sbbb
fldcw
cli
ljmp
out
lret
sbb
mov
adc
mov
ljmp
push
jae
mov
cmpsb
loop
sub
sbb
inc
mov
repnz
cmp
icebp
cmp
stc
xor
sub
lret
rorb
iret
popf
push
and
cmc
or
cmp
jmp
or
shrb
and
sbb
int3
lret
and
loop
mov
sbb
sbb
fwait
sub
leave
push
filds
jp
or
pop
aaa
outsb
push
cmpsb
sub
aad
adc
sbb
sbb
lret
enter
loop
and
sub
fucomi
mov
or
sbb
repnz
and
cli
icebp
fcmovnbe
dec
vminss
cld
and
stc
sbb
xlat
and
popa
lods
or
outsb
repnz
in
inc
mov
xor
ljmp
mov
dec
fldcw
cmp
adc
and
and
xor
sub
push
dec
and
ja
sahf
xchg
lret
xchg
shll
xchg
incl
adc
xchg
mov
test
mov
out
mov
negb
pop
xor
sarb
fsubrs
mov
cmp
xor
sbb
rcl
push
sub
stos
and
xchg
std
test
test
sub
mov
insl
out
mov
aam
sbb
rorb
and
shr
call
pushf
xchg
imul
sub
outsl
cmpsl
nop
xchg
push
call
push
sub
adc
xchg
lock
js
push
int3
add
inc
pop
and
test
xchg
sbb
mov
dec
or
repnz
adcl
or
les
sbb
cmp
add
pop
lods
xchg
movsb
mov
es
out
shlb
daa
mov
xor
and
xchg
nop
les
jmp
cli
pusha
call
adc
test
jno
enter
cmp
xrelease
mov
outsb
or
jp
push
fcmovnu
es
pop
pop
cwtl
fsubs
repnz
cltd
je
es
inc
sub
sub
icebp
cli
or
mov
pop
push
bound
mov
and
and
mov
sbb
push
and
insb
pop
mov
mov
out
insb
lods
xchg
repnz
jp
popa
sbb
into
sbb
incl
and
outsl
pop
mov
dec
mov
fcoml
hlt
loopne
pop
enter
jmp
repnz
loop
pop
cmp
mov
jo,pt
pop
data16
push
and
repnz
mov
add
mov
pop
and
push
sti
clc
lods
movsb
inc
cmp
pop
sbb
sbb
int
int
and
call
jle
jge
loopne
loopne
push
icebp
sub
pop
and
daa
jns
inc
push
sub
rcr
or
mov
xor
leave
jge
xchg
jmp
cmp
in
push
sbb
xor
cmp
push
ljmp
aad
dec
sbb
inc
clc
mov
sti
ds
fwait
or
inc
push
test
out
pop
cltd
xorb
xor
inc
sub
cmc
jo
subb
sub
leave
xchg
movsb
adc
inc
mov
movsl
xor
adcb
push
popf
pop
mov
cli
test
mov
lea
fwait
movsb
sbb
aad
jnp
xchg
adc
jmp
xor
push
pop
jg
gs
mov
xlat
push
inc
sub
dec
jne
in
push
jnp
sbb
sbb
aad
cmp
sbb
fs
hlt
sub
rolb
or
mov
in
xchg
adc
leave
add
xlat
lret
dec
inc
sti
push
push
sbb
mov
repnz
add
sbb
es
out
js
sbb
hlt
mov
aad
push
dec
mov
sub
packuswb
and
sub
inc
push
imul
inc
pop
repnz
adc
mov
and
scas
xchg
rcrl
xchg
sbb
adc
out
mov
ret
adc
xlat
in
pusha
jecxz
repz
push
ret
int
lods
ljmp
stos
dec
js
xor
mov
dec
ljmp
mov
das
jp
fisttpll
pop
mov
repnz
dec
test
mov
pop
jns
fnstsw
out
xchg
arpl
sub
jmp
push
xchg
add
and
sub
mov
pop
cmp
sbb
jl
test
mov
push
out
loop
xlat
mov
lods
jo
sub
int
jmp
mov
repnz
or
xchg
mov
lods
stos
push
outsl
sbb
jb
mov
sub
jbe
icebp
stc
xchg
xchg
dec
pop
jne
mov
add
mov
test
dec
decb
sub
mov
xlat
popf
fdivrs
scas
jecxz
fildl
pop
sub
inc
push
xchg
cmpsl
push
sub
and
xchg
and
inc
outsl
dec
sub
sbb
int
cltd
sbb
and
pop
lock
lods
loopne
add
imul
sub
push
sub
shll
testl
lock
in
loop
jmp
push
pop
cmpsl
push
dec
arpl
xchg
insl
or
add
ds
movsl
cltd
outsl
in
fwait
addr16
mov
movsb
js
arpl
pop
ss
fisubl
mov
mov
in
jne
or
add
je
push
sbb
insl
sbb
dec
add
lds
mov
mov
and
je
int3
push
mov
cld
call
int3
std
je
xor
sbb
fisubs
fs
cld
or
adc
int3
pusha
pop
xchg
mov
repz
sbb
lcall
rcl
in
pop
xor
addl
in
mov
mov
lret
aaa
or
xchg
mov
test
divb
inc
out
pushf
addr16
jecxz
movsb
shrb
clc
pop
popf
mov
mov
enter
xor
cli
dec
sub
iret
mov
push
cmp
data16
xchg
test
mov
mov
jmp
inc
mov
add
gs
xor
je
jmp
cmc
sbb
and
xorb
sbb
scas
sbb
dec
and
xor
in
adc
and
xchg
das
mov
jo
bound
adc
jo
dec
adc
or
popf
rcll
int3
or
inc
sbb
xlat
js
outsb
sti
jl
sbb
jge
mov
dec
xchg
cwtl
je
popa
mov
es
aaa
pushf
lea
jecxz
mov
fwait
and
xlat
sub
cwtl
mov
imul
xchg
add
or
and
lcall
loop
xchg
push
pop
sub
movsb
jl
cmp
sti
popf
sub
dec
cld
movsl
and
pop
xchg
jp
popa
dec
jb
xchg
sbb
testb
and
xor
daa
iret
sbb
mov
push
lahf
mov
test
pop
pop
or
pusha
js
add
push
pop
push
dec
mov
inc
scas
mov
or
pop
mov
pop
rep
sub
aaa
jecxz
adc
pop
dec
pop
sub
mov
fdivl
fsubrs
xchg
adc
xchg
out
fistpl
xchg
sub
iret
adc
aas
or
adc
bound
push
inc
pop
mov
xchg
loop
mov
lahf
fimull
fcompl
popf
adc
mov
cmp
jae
mov
push
stos
sub
mov
out
rolb
lock
add
or
lret
ss
mov
add
loop
mov
insb
jnp
in
add
test
repnz
je
jnp
mov
lahf
xchg
push
xor
mov
inc
out
xor
xchg
mov
push
lret
sbb
dec
mov
push
xor
pushf
jnp
inc
mov
out
loop
add
bound
stc
pop
loopne
fdiv
cmpsl
sub
negb
fldt
xchg
outsb
hlt
loope
and
adc
add
notl
loope
push
loop
xlat
fcompl
adc
aas
dec
push
dec
cmp
nop
inc
out
popf
aaa
xchg
stc
mov
cmpsb
sahf
mov
jo
stos
xorl
lret
sub
or
cltd
add
push
test
xor
test
pop
test
repnz
adc
sbb
mov
shrb
repnz
and
push
add
hlt
lret
fnstsw
push
lcall
mov
jo
cmp
jmp
outsb
push
rolb
fisubl
sub
cmp
fs
mov
je
mov
xchg
or
adc
mov
cli
out
push
cltd
and
jmp
sti
fimull
lods
lock
push
mov
pop
xor
sbb
xor
sub
stos
jg
pop
imul
jle
mov
cmp
pop
je
and
sub
cmp
jle
push
insl
fistpl
test
sub
ret
dec
call
push
es
inc
clc
sarb
pop
cwtl
jns
cltd
rcll
pushf
daa
fs
in
cwtl
ss
mov
pop
or
loop
add
rorb
mov
lret
and
cmc
xchg
stc
and
or
aas
aam
movsb
sbb
stos
movntps
popa
int
repz
pop
loope
push
jl
inc
pusha
pushf
sub
lds
adc
sbb
nop
pop
jnp
int3
adc
repz
insl
aas
add
leave
mov
mov
mov
or
pusha
cmpsl
push
push
inc
int3
fxch
test
mov
lret
xchg
xor
aaa
and
repnz
jmp
or
or
fwait
mov
push
out
iret
jmp
or
xor
and
xchg
mov
xlat
xchg
push
and
or
aas
cmc
jg
dec
aas
cmc
ret
and
or
pop
shrb
sub
or
and
jmp
jle
or
into
push
dec
xor
jns
rep
je
in
mov
mul
inc
inc
mov
test
add
into
xchg
in
sbb
push
jle
mov
mov
leave
adc
cli
add
xchg
fcmovu
xchg
push
mov
pop
mov
xor
mov
fdivrl
dec
jecxz
pop
test
sub
leave
adc
and
nop
adc
aad
pop
adc
das
into
loope
jbe
arpl
jb
push
daa
dec
leave
xchg
ljmp
fistps
inc
sub
je
push
daa
inc
nop
test
dec
add
call
cld
add
xor
sub
and
and
outsb
ret
push
push
sub
pop
fs
pop
mov
sbb
and
daa
je
loop
and
pop
call
xor
test
fdivrs
pop
mov
or
daa
push
add
fistl
mov
and
ficoms
mov
xor
mov
sub
mov
imul
jmp
call
ljmp
lcall
fs
cld
imul
mov
outsb
loope
jge
and
test
lahf
jmp
jbe
mov
pop
clc
leave
inc
lock
push
mov
push
sub
clc
jae
and
push
or
leave
sbb
or
fisttpl
push
jp
outsb
pushf
pop
mov
cmp
cli
sbb
jle
ja
popa
sub
jo
call
sbb
lods
nop
push
popa
pushl
in
clc
in
bound
lret
mov
jecxz
lret
dec
jb
daa
gs
and
mov
test
adc
jecxz
in
mov
cmp
mov
scas
stos
fwait
sub
jns
and
sahf
data16
bsr
sub
fdivr
or
ljmp
loope
sub
popa
mov
in
stos
test
mov
push
adc
stos
mov
movsb
xchg
xor
negb
mov
xchg
cmpsl
pop
les
sub
negl
push
shll
popf
inc
movsb
addb
mov
lret
fimull
fdivs
ja
sbb
inc
stc
sahf
push
aas
add
xlat
je
and
xchg
loope
push
out
iret
stos
push
adcl
cmp
push
mov
lret
test
sub
sbb
fcompl
and
mov
inc
mov
xchg
push
mov
je
mov
test
imul
cmp
and
rcll
push
push
xchg
ljmp
jmp
jle
divl
sub
dec
push
mov
rcr
stos
lret
addl
mov
dec
xchg
popf
push
scas
inc
mov
pop
xchg
ds
push
dec
and
jnp
lahf
movsl
or
xchg
adc
mov
popf
sub
add
addr16
sahf
cmc
mov
movsl
mov
loope
xchg
jg
mov
lods
add
xchg
cltd
jmp
inc
insl
xlat
mov
adc
xlat
dec
call
aaa
stos
mov
cmp
inc
pop
mov
ja
icebp
mov
fildl
sbb
cmp
mov
movsb
jle
es
push
std
inc
adc
pop
repnz
push
popf
fistpll
lret
lea
arpl
add
out
sub
sub
mov
dec
adc
std
push
dec
repnz
inc
ret
fs
jnp
nop
lds
in
push
ficoms
xor
imul
in
push
daa
xor
addr16
xor
subl
enter
cmpsl
repnz
pushf
insl
and
add
xor
jmp
imul
mov
scas
jmp
push
stos
fistps
je,pt
out
fnsave
rorb
iret
adc
pop
icebp
leave
lret
daa
add
fnstsw
or
sbb
add
mov
clc
lea
add
testl
bound
xchg
sti
outsb
pop
cld
in
and
scas
inc
sbb
pop
repz
jmp
or
mov
pusha
push
pop
outsb
and
xlat
cmp
jae
or
and
std
add
inc
mov
xchg
and
sub
out
arpl
aam
lock
pop
lcall
sbb
mov
outsl
repnz
push
shrb
and
out
ss
or
test
sub
movl
aas
das
sahf
arpl
and
sbb
push
mov
test
push
div
and
adc
add
imul
xchg
adc
and
stc
xor
mov
stc
jb
mov
and
movsb
dec
out
ret
mov
repnz
jmp
mov
pop
and
loop
and
cmp
cmp
or
imul
sbb
addb
jnp
xor
fildl
and
pop
or
mov
jae
popf
push
sarl
inc
jp
jns
mov
sub
addl
iret
scas
orb
lret
je
leave
lret
lock
pop
test
add
cmp
jae
sub
cltd
mov
sbb
sbb
fdivrs
enter
add
mov
push
mov
arpl
popa
fs
arpl
insl
pop
inc
lret
adc
mov
mov
mov
cmpsb
adc
jcxz
repnz
and
cmp
cld
test
push
and
test
lods
mov
sub
movsb
mov
cmp
and
cld
push
repnz
loop
out
jecxz
sbb
sub
xor
es
add
add
enter
mov
or
inc
or
push
aaa
jge
jmp
lock
mov
jnp
cmpsl
fstl
push
cmp
jo
sub
inc
mul
push
lds
cmpsb
cmp
mov
iret
movsl
dec
cmp
and
sbb
in
inc
clc
mov
dec
int
out
bound
or
mov
cs
rcrb
popa
mov
xor
jno
and
out
mov
sahf
push
push
scas
rcll
jmp
push
sbb
in
nop
mov
repnz
arpl
es
jle
mov
movsb
lcall
lds
and
jo
jecxz
sbb
popf
arpl
push
movsb
inc
int
mov
adc
test
call
mov
mov
xchg
inc
pusha
or
or
xorl
sti
jo
lods
cwtl
dec
mov
call
mov
add
cmpsl
and
or
xchg
add
xchg
push
or
or
pop
clc
dec
cwtl
push
insb
pop
push
mov
pop
fstps
xor
sub
stos
nop
xor
cwtl
nop
or
jo
out
test
aam
cmp
or
out
clc
push
mov
js
in
popf
jge
xchg
xchg
jns
pop
cltd
inc
adc
and
adc
hlt
lods
rorl
mov
ljmp
xor
imul
incl
arpl
std
mov
adc
lret
inc
sub
mov
cwtl
leave
mov
or
dec
cmp
sti
cmp
lret
pop
mov
gs
xchg
sub
sti
inc
push
test
add
loopne
leave
sbb
pop
pop
test
sbb
mov
test
ret
push
addr16
pop
ss
es
scas
pop
mov
cmp
and
jb
stos
xlat
cmpsl
add
std
or
popa
inc
dec
and
stos
sub
add
pushf
sub
les
and
dec
push
shrl
sbb
sarl
mov
mov
xorb
adc
repnz
or
xchg
subb
and
mov
push
scas
cmpsb
mov
cmp
mov
in
xchg
loope
fwait
push
and
dec
lds
xchg
sbb
sbb
jecxz
dec
cwtl
mov
cmpsl
or
inc
adc
bound
jmp
mov
ljmp
mov
in
sbb
push
out
loop
push
imul
shrb
push
or
test
push
xor
sbb
cwtl
iret
sub
outsl
lea
xchg
push
out
pop
cs
mov
arpl
adc
es
push
in
mov
fldt
shrb
aam
inc
mov
fwait
out
dec
pop
pop
mov
xor
hlt
push
daa
test
ljmp
inc
loope
test
out
pop
stos
ja
rcrl
leave
loope
or
ret
pop
jge
leave
test
mov
aam
pop
cmp
std
les
dec
cmpsl
movsl
imul
xchg
jmp
call
jmp
outsb
or
jns
dec
pop
mov
inc
and
cmpsb
das
mov
jo
or
test
mov
pop
inc
push
or
rcrl
sub
loope
cmp
cld
and
xor
or
dec
mov
mov
rorb
decb
push
call
sub
adc
fmuls
lods
and
sub
mov
iret
cld
iret
arpl
mov
dec
rcr
inc
mov
icebp
sub
add
push
cmpsb
sbb
repnz
shll
repnz
faddl
mov
js
imul
xchg
mov
out
and
cmp
js
xor
xor
jg
pusha
mov
xchg
cs
pop
iret
adc
movsb
push
and
cmpl
push
mov
ljmp
and
push
xor
adc
or
test
sti
clc
xor
popa
fbld
loope
idivb
jg
xchg
out
adc
xor
cld
loopne
xchg
sbb
es
addb
movsb
mov
push
pop
insl
mov
xlat
jmp
dec
and
xchg
sbb
imul
int
add
jecxz
dec
fdivrl
arpl
lods
je
out
mov
out
fistpll
inc
mov
lods
in
leave
aas
sarl
cmp
insl
add
fcmovnb
test
pop
cmpl
or
jne
iret
push
mov
push
lret
daa
enter
lcall
jns
sbb
sbb
lea
jbe
mov
mov
mov
iret
cmovp
mov
icebp
or
xor
seto
dec
mov
xchg
daa
insb
xchg
cs
lret
pushf
lock
and
xchg
mov
rorb
mov
jecxz
lret
add
enter
lahf
pop
push
and
xchg
mov
in
adc
jns
lock
fcmovbe
xor
mov
scas
sbb
cmpsl
cwtl
adcl
popa
xchg
cli
ljmp
icebp
out
fsts
cltd
adc
push
mov
test
xchg
icebp
int3
sub
xchg
lcall
dec
nop
stc
adc
mov
pop
pusha
jmp
and
ror
adc
popa
mov
ret
loop
scas
add
jne
mov
and
bound
hlt
js
repnz
mov
popa
fwait
pop
int
outsb
fsubrl
xchg
lods
mov
daa
pop
ljmp
dec
ret
fsubl
mov
addr16
sub
push
pop
pop
insl
or
fsubl
push
sub
jmp
sbbl
push
pop
add
cli
adc
repnz
dec
cmpsb
arpl
fistpl
adc
lock
push
or
sub
xlat
ljmp
test
negb
xorb
cmp
fs
adc
jne
out
mov
inc
xor
pop
fwait
adc
loopne
sub
cmc
outsb
stos
mov
and
push
push
ret
fisttps
jmp
or
push
movsb
pop
fsubrs
int
lret
or
sbb
stos
mov
mov
addb
cmp
fisubrl
dec
jge
loop
lcall
sarb
or
or
out
sbb
xchg
xor
or
and
fcmovbe
mov
iret
jge
sub
or
insl
push
jle
sti
cmpsl
aam
icebp
cwtl
loop
jmp
ljmp
aam
lods
inc
movsl
add
out
je
sbb
nop
or
daa
pop
aam
int
push
cwtl
sbb
imul
jnp
dec
push
push
out
push
loope
inc
arpl
adc
jp
lcall
mov
sbb
daa
jle
rclb
fsubrs
sbb
mov
fmull
cmpsb
push
test
dec
js
mov
cmp
cltd
enter
iret
xchg
cmpsl
lods
and
dec
test
mov
cmc
cmp
jmp
popf
or
sub
mov
sbb
movsb
mov
and
jl
lret
jl
sub
lret
dec
cs
repnz
add
mov
and
enter
inc
fimull
ja
and
in
test
xlat
dec
mov
and
imul
pop
outsb
mulb
repz
mov
out
or
in
lret
pop
dec
sbb
addr16
jl
add
dec
adc
xchg
pop
sbb
cmp
in
adc
sub
pop
scas
out
lahf
mov
loop
jb
pop
arpl
mov
dec
or
mov
or
pop
nop
push
arpl
adc
cmp
sbb
imul
jecxz
or
sub
nop
or
mov
add
push
inc
repz
es
mov
call
loop
jne
pop
cmp
cmpl
cltd
out
ds
or
insl
xlat
xchg
notl
test
add
test
test
push
xor
mov
dec
cltd
push
incb
cltd
test
push
cmp
fwait
sbb
jns
imul
sub
pop
in
jns
inc
jnp
sub
andb
inc
arpl
or
mov
mov
push
sub
sub
xor
test
test
or
stos
mov
mov
xor
cld
pop
push
and
mov
bound
jg
mov
aam
jo
daa
loopne
push
int
pop
ret
pop
fimull
sub
or
stos
jp
fst
sbb
lret
movsb
std
push
jbe
push
adc
pop
popf
sub
or
xorb
stos
lcall
xchg
mov
add
add
jmp
sub
push
stos
mov
bound
test
stc
add
adc
xor
movsb
loope
cmp
xor
outsl
sub
scas
int
sub
clc
push
sbb
movsb
loopne
xorb
adc
pop
enter
mov
lds
aad
insl
rorb
decl
sbb
xchg
roll
clc
sbb
fstl
lock
test
loopne
repnz
inc
xchg
js
push
call
push
add
cltd
sub
inc
addr16
adc
xchg
sbb
mov
mov
enter
mull
popa
pop
scas
iret
add
jmp
cmp
iret
cmp
test
or
repz
and
lret
mov
sahf
adc
adc
or
jne
ret
xchg
mov
cltd
sbb
add
adc
and
cmp
adc
sub
sub
cmpsb
pop
add
dec
mov
xor
mov
xor
loope
xor
fs
pop
inc
pop
enter
xchg
pop
dec
and
pop
std
cli
insl
enter
orl
sub
dec
mov
cmpsl
call
movsb
rclb
and
add
pop
push
das
push
adc
rclb
dec
adc
pop
adc
sbb
push
ljmp
fmuls
ljmp
mov
jle
inc
xlat
dec
sbb
mov
mov
pop
cs
loopne
nop
enter
out
push
mov
xchg
jnp
add
or
inc
mov
add
sbb
rclb
jnp
fs
popf
xlat
xchg
jge
pop
aaa
pushf
aam
out
sti
je
cli
pop
cmp
repnz
test
and
movsb
sub
push
xchg
sub
int3
adc
nop
cmp
lret
dec
xor
push
je
bound
outsb
and
fcoms
pop
xchg
xchg
xchg
and
adc
inc
pop
cwtl
fimuls
xor
ret
scas
add
and
fwait
sbb
je
sub
out
mov
or
xchg
cmpsl
repnz
sbb
xchg
cltd
andl
mov
repnz
cmp
fs
cmpsb
xlat
iret
xchg
repnz
adc
movsb
and
and
mov
mov
fsubl
lret
cltd
lsl
movsb
outsb
addl
fsubrp
or
lods
out
mov
xchg
loopne
jp
push
loop
mov
js
push
add
sub
repnz
mov
or
mov
std
out
scas
adc
in
mov
sbb
das
lahf
xchg
dec
jp
ja
ljmp
pop
in
jg
and
rolb
les
jbe
daa
ds
arpl
xorl
pop
mov
aaa
shll
cli
test
fwait
not
aaa
inc
xor
inc
lock
sbb
push
mov
loopne
lret
loopne
addr16
jmp
andb
arpl
pop
iret
adc
mov
adc
bound
inc
xchg
pop
mov
sub
aam
lods
pop
mov
lret
fwait
mov
mov
fs
filds
and
cmpsb
out
xchg
out
data16
leave
sbb
lret
fwait
push
cmpsb
xchg
pop
add
addr16
aam
lret
jno
mov
and
sub
into
push
mov
addr16
or
aam
mov
std
outsl
and
sbb
sub
mov
mov
add
movsl
jmp
lret
ljmp
pop
ljmp
jmp
leave
movsb
out
sub
jmp
dec
adc
sbbb
popa
jmp
movsl
jbe
ret
sbb
je
sbb
sub
sbb
mov
imul
test
test
cwtl
push
sub
std
clc
mov
jno
in
ja
sub
and
jo
push
inc
sbb
ljmp
and
in
xchg
scas
cmc
popa
jp
nop
sub
fisubl
xchg
pop
sbb
adc
jae
cmp
add
fisttps
outsb
jo
and
xor
sbb
mov
iret
mov
push
mov
and
ret
dec
jns
cmp
mov
sbb
jnp
iret
inc
repnz
or
push
or
mov
int3
inc
sub
adc
shll
dec
add
sti
out
imul
fwait
pop
sbb
xlat
stos
add
jb
adc
dec
add
adc
repnz
mov
mov
sub
pop
sbb
cmp
int
sub
sub
loopne
repnz
stc
adc
test
inc
jg
fcomip
mul
cmp
shl
mov
pop
xchg
ficoml
or
or
into
lods
pop
mov
scas
ret
xor
iret
dec
xlat
icebp
mov
and
sbb
in
jl
adc
sub
pop
cmp
dec
xchg
dec
cs
or
out
frstor
sub
stos
xchg
sub
js
and
call
in
sub
pop
sub
shrd
sub
mov
fcompl
sub
sub
sti
jl
add
add
push
test
lock
mov
push
sub
push
sub
mov
and
lahf
fdivrl
movsl
je
or
mov
imul
jl
mov
loopne
jne
mov
or
call
jecxz
lods
sub
mov
and
nop
cmp
ficoml
in
cmp
push
jbe
and
stos
dec
rolb
mov
out
imul
xchg
mov
and
test
mov
data16
xchg
sub
jbe
push
sbb
pop
sub
cmp
sub
lahf
movsb
fsubs
cli
lahf
xchg
pop
or
pop
mov
mov
call
sub
int
sbb
xchg
imul
lods
imul
les
stos
and
mov
ljmp
and
pusha
mov
gs
je
mov
lea
mov
daa
rorb
cli
fldt
test
pop
xchg
data16
mov
mov
or
fbstp
pop
xchg
inc
cwtl
and
sbb
adc
or
sbb
iret
test
bound
xchg
and
mov
cmpsb
lds
pop
xchg
out
xchg
dec
add
cmpsl
and
add
adc
cmpsl
gs
xchg
mov
stos
in
pop
sub
and
lock
pop
mov
mov
pushf
pop
inc
fcompl
add
or
lods
and
adc
adc
addr16
mov
push
xor
mov
cmpsb
or
pop
mov
flds
test
sub
fstpl
cmp
ljmp
nop
add
call
inc
and
add
addr16
ja
clc
test
cltd
aam
iret
mov
cs
push
pop
add
sbb
jnp
pop
fsubr
and
fwait
sbb
sub
adc
in
mov
sub
push
nop
push
sub
push
add
pop
mov
sub
daa
push
mov
shrl
iret
or
clc
pop
mov
mov
bound
test
aad
andb
and
pop
mov
mov
jle
movsb
cmpsb
arpl
sbb
mov
js
mov
push
or
push
adc
fcomps
inc
jnp
dec
leave
jge
sbb
add
xor
out
or
dec
cwtl
mov
cld
cli
add
adc
inc
pop
ficompl
xchg
mov
dec
js
in
ret
cmp
ljmp
inc
lcall
mov
gs
stos
adcb
mov
jbe
add
imul
push
fincstp
sbb
loopne
je
or
push
cmpl
les
fyl2xp1
and
cwtl
aad
mull
ja
xor
mov
and
jmp
sbbb
out
gs
aad
dec
xchg
daa
enter
dec
icebp
mov
sbb
inc
pop
test
adc
and
push
sub
rcrb
in
test
and
jae
ja
ret
xchg
lock
hlt
cmp
iret
call
cwtl
adc
jg
push
xchg
mov
out
dec
pushf
dec
and
and
jne
imul
imul
aam
jnp
and
icebp
sbb
mov
wbinvd
dec
dec
sub
push
and
ret
cld
mov
push
ret
dec
test
outsl
lea
sahf
pop
pop
lock
sarl
mov
jno
jbe
imul
jnp
xchg
cmp
loopne
pop
mov
sub
sub
mov
adc
in
outsb
sbb
cli
loopne
sub
push
push
ret
or
lret
insl
mov
push
jg
fstpl
lea
inc
dec
aas
and
adc
jmp
mov
dec
pop
cltd
xor
sti
inc
mov
pop
pushf
imul
lock
in
sti
imul
cwtl
push
xchg
and
clc
mov
push
repnz
pop
mov
scas
push
and
icebp
and
add
and
das
pushf
and
cmp
mov
push
xor
dec
inc
cmpsl
jne
dec
xchg
jge
test
repnz
test
xor
cltd
int
mov
scas
dec
add
or
cmpsb
loope
decb
lahf
in
repnz
outsl
inc
cli
xchg
cmp
dec
sub
imul
inc
xchg
or
push
mov
cld
mov
sub
sbb
sub
fmull
fsubrp
pop
lea
je
sbb
fbld
sub
xchg
jbe
add
sub
daa
add
mov
sub
adc
add
fimull
fistpl
bound
xchg
mov
sbb
test
dec
outsb
aam
add
into
pop
cmp
sbb
je
popf
or
sbb
pop
enter
test
test
aaa
sub
sbb
mov
dec
fsub
sahf
test
sub
mov
and
test
daa
mov
fsub
mov
fs
xor
push
sub
repnz
lcall
sarb
ror
cli
hlt
imul
push
ret
jb
inc
aam
imul
dec
cmpl
sbb
xor
pushf
cmp
stc
cwtl
sbb
mov
cmp
push
add
pop
cwtl
insl
and
leave
pop
and
gs
orb
je
fdivrs
test
cwtl
or
sub
xor
jae
aaa
sti
push
inc
mov
lea
imul
or
push
test
pusha
int
xlat
leave
je
sbb
fcomps
loop
sbb
cwtl
xor
cwtl
xchg
sbb
int
test
mov
push
sub
pop
adc
loop
call
aam
mov
test
cmpsb
sub
lret
mov
aas
addl
push
inc
xchg
push
outsb
fnsave
and
lret
addb
outsb
jl
ret
mov
or
add
std
stc
mov
push
mov
add
stc
iret
mov
lcall
jge
ljmp
push
lcall
repz
or
add
es
push
mov
cmp
add
mov
in
jle
shlb
or
sbb
mov
cld
cwtl
cmc
push
fsubr
ficomps
stos
daa
lea
inc
scas
mov
mov
imul
cmp
pop
ss
les
sub
mov
pop
gs
xchg
leave
cvtpi2ps
sub
mov
out
dec
push
sbb
adcb
and
dec
xchg
or
arpl
out
mov
test
cmp
shrl
pop
fldt
ret
jne
repz
jae
repz
icebp
mov
repnz
lods
cltd
sub
adc
lock
imul
lar
sbb
pop
mov
aam
test
pop
flds
pop
shrl
movb
dec
adc
test
test
add
cvtdq2ps
adc
adc
pushf
xchg
call
cld
sbb
mov
or
pop
clc
push
lods
imul
popl
xchg
out
xor
scas
mov
fsubr
sub
lock
sbb
mov
cmp
bound
xchg
out
dec
add
xchg
in
mov
adc
xchg
push
nop
mov
enter
int
push
cmp
movsl
clc
pushf
push
cltd
sub
and
imul
mov
or
leave
push
out
dec
jo
js
insb
loope
mov
imul
imul
leave
jmp
cmp
push
jl
add
popa
cmp
mov
mov
adc
repnz
mov
lcall
sub
sub
dec
aad
cld
lret
hlt
mov
rolb
pop
mov
dec
mov
pop
jns
sub
or
pop
dec
lret
xchg
dec
sub
js
pop
pop
or
inc
pop
push
mov
add
out
addb
sbb
imulb
mov
and
jb
push
lret
enter
mov
xor
mov
xor
lcall
sub
cmpsl
inc
je
mov
loopne
js
add
sub
fwait
pop
jmp
lret
and
mov
xchg
stos
popa
icebp
add
pop
xchg
out
add
subb
or
loop
sbb
outsl
cmp
add
cmp
mov
jb
fists
popf
cmp
clc
push
imul
xchg
aaa
mov
roll
pop
push
and
or
jbe
xor
cwtl
out
add
cwtl
mov
pop
arpl
pop
dec
xchg
or
push
pusha
or
rcrb
sub
push
sbb
nop
aad
dec
lea
sti
clc
pop
rorb
pop
sub
addr16
or
and
sbb
mov
add
mov
dec
dec
mov
loope
lcall
mov
out
fwait
sahf
cli
sbb
cmpsl
fisubl
adc
cli
pop
shll
or
jo
or
out
sbb
and
sbb
cmp
icebp
addl
ja
in
pop
jecxz
fwait
cwtl
out
imul
in
shrb
data16
mov
mov
dec
movsl
pusha
and
pusha
in
xor
push
daa
mov
and
push
mov
stos
mov
imul
loopne
sbb
hlt
mov
iret
or
or
lock
or
movsb
add
add
aam
cwtl
fimuls
sbb
mov
adc
or
std
adc
pop
outsb
daa
or
shlb
nop
dec
loopne
sti
js
fidivl
iret
push
insb
inc
aam
sbb
push
mov
lods
sub
adc
sti
mov
pop
mov
cmc
ss
xchg
mov
pushf
add
or
and
rorb
jbe
sub
fsubrs
ficompl
or
out
neg
imul
or
shr
sbb
push
les
xlat
iret
lds
xchg
or
push
test
inc
push
sbb
xor
call
rcrb
lret
adc
mov
mov
sub
lea
push
xlat
mov
fdivs
bound
add
or
loope
pop
mov
pusha
pop
mov
mov
cltd
movsl
loopne
add
adc
push
mov
push
xchg
xchg
enter
adc
insl
fmulp
movsl
rcrb
and
inc
mov
je
push
outsl
es
lret
push
lock
push
sub
iret
mov
cmp
sbb
addr16
jl
ret
cs
sub
xchg
push
in
lahf
leave
sbb
mov
adc
sbb
or
test
pop
shl
push
cmp
and
add
push
pop
lret
mov
xchg
loopne
les
nop
xchg
popf
sub
mov
in
js
pop
and
mov
hlt
es
sub
xchg
jmp
insl
mov
mov
or
xchg
xchg
add
xchg
or
iret
ljmp
test
xchg
or
andl
mov
xabort
jp
bound
sub
and
in
mov
cmpsl
or
xchg
ficomps
shrb
pop
sub
in
faddp
adc
lret
push
pop
fcmovu
ljmp
in
ljmp
push
call
cmp
imul
call
push
jmp
fwait
popf
dec
imul
add
sar
cmp
dec
fimuls
xchg
or
push
mov
leave
mov
aas
bound
jl
or
lock
xchg
mov
and
int3
ret
jno
pop
jmp
test
stos
mov
imul
test
movsl
dec
adc
cli
push
and
and
popf
sbb
and
jle
push
popf
xlat
lret
xchg
mov
push
lret
aas
scas
test
cwtl
mov
pop
xchg
enter
adc
push
cwtl
test
add
call
cli
pop
loop
scas
sahf
push
les
pop
imul
stos
push
mov
adc
pop
es
push
mov
enter
pop
pop
daa
rcrl
mov
test
arpl
dec
sti
imul
mov
and
ljmp
push
sti
adc
sub
push
or
lret
and
push
mov
cltd
and
dec
lcall
scas
movsb
add
pop
arpl
add
dec
loope
popa
movsb
sbb
fcmove
movsb
je
dec
and
fcmovu
mov
fmull
xchg
xor
call
negb
inc
pop
xchg
jecxz
mov
hlt
imul
rcl
adc
xchg
push
and
and
ret
aaa
sbb
xlat
es
bound
dec
push
inc
add
sbb
sbb
cltd
fs
or
inc
test
sub
int3
push
pop
test
int
fstpl
adc
and
jecxz
iret
sarl
adcb
and
das
adc
enter
lods
bnd
scas
push
and
xor
adc
pop
or
fsubrl
mov
adc
rcrl
jae
sbb
adc
lret
inc
jno
mov
or
or
and
or
call
leave
or
xchg
and
xchg
dec
inc
or
fisubs
adc
sar
jp
mov
cwtl
push
decl
hlt
mov
lret
push
jmp
pop
daa
popa
addr16
repz
and
or
fistpl
gs
pop
cwtl
or
mov
mov
je
sub
and
shll
leave
ficompl
cli
lret
scas
enter
lret
add
dec
fildl
fidivs
cmp
repz
out
pop
mov
lods
inc
mov
xchg
loope
cmp
pop
and
pop
or
sub
jg
jle
pop
cmpsl
daa
push
cmp
daa
fst
sbb
sbb
mov
iret
cmpsb
ret
and
insb
mov
and
push
push
push
sbb
cli
mov
inc
dec
arpl
into
sbb
mov
jb
mov
fisubs
jae
je
pop
dec
lods
and
mov
ret
in
mov
or
popa
xchg
xor
xor
and
sub
add
repz
pusha
daa
pop
pop
imull
lds
and
imul
pop
out
inc
aam
mov
andb
or
pop
cmp
and
and
push
add
push
or
and
xor
fisubs
push
es
mov
cmpsb
fistpl
cmpsl
pusha
mov
cwtl
mov
movsl
test
ljmp
pop
pop
xor
ss
inc
adc
cltd
sbb
fildl
pop
pop
xchg
fst
and
push
mov
int3
jge
js
sbb
pop
sbb
cwtl
sbb
pop
xchg
sbb
fldt
fwait
shrb
sti
jle
test
dec
inc
aad
daa
nop
xchg
jle
outsl
sbb
out
subl
push
scas
pop
adc
inc
xchg
sub
pushf
ds
loope
imul
cld
out
lea
jge
stos
int3
es
push
and
xlat
sub
stc
movsb
pop
fildl
sbb
push
jns
xor
test
bound
cmp
repnz
std
jle
movsb
out
call
lea
test
pop
repnz
loope
xchg
das
sub
imul
lret
and
fmuls
xchg
jecxz
add
sub
or
hlt
pop
in
nop
sbb
pop
daa
aam
dec
or
pushl
popa
repz
mov
adc
inc
arpl
jmp
ficompl
inc
and
repnz
sbb
inc
cmp
call
jno
pop
mov
mov
dec
sub
sbb
push
sub
ss
lcall
js
int
imul
insl
adc
push
xor
sub
das
adc
dec
push
mov
movsb
cmp
or
push
sub
imul
mov
lret
ss
loopne
nop
enter
sub
xlat
mov
nop
or
dec
sbb
mov
cmpsl
jae
jmp
and
push
mov
or
cmp
pop
loopne
cltd
fwait
jno
ret
ja
mov
clc
and
in
gs
enter
or
fmulp
adc
push
push
out
pop
sbb
and
insl
js
sbb
loopne
pop
iret
jno
dec
mov
mov
ljmp
inc
dec
insl
sub
dec
add
lcall
pop
dec
or
test
adc
out
inc
daa
cltd
fcmovnbe
shll
mov
pop
fbstp
loop
test
cli
sahf
outsl
xchg
lret
into
xchg
pop
movsl
dec
into
lcall
sub
mov
adc
sub
xor
ljmp
sub
enter
mov
loopne
aad
popa
dec
cld
and
out
cmp
test
cmp
sbb
sub
mov
lcall
mov
aas
xchg
xor
push
lret
addr16
and
aad
shr
or
jbe
mov
jnp
loop
or
sub
adc
lcall
lret
sbb
cmp
sbb
ss
mov
mov
fwait
popa
xchg
sbb
fucomip
les
call
imul
cwtl
jns
std
and
adc
sahf
fwait
and
add
and
mov
push
sub
hlt
and
das
or
sub
or
adc
cltd
and
in
push
pop
mov
out
add
repnz
lods
sbb
sbb
adc
gs
testl
pop
mov
scas
and
xchg
aam
jg
pop
sbb
mov
repnz
loopne
pop
lea
fadds
rorl
clc
fxch
add
lret
scas
test
mov
sbb
shlb
cmp
addr16
mov
mov
enter
sub
mov
bnd
hlt
decb
arpl
jmp
scas
lret
or
fadds
sbb
sub
mov
call
dec
stos
xchg
sti
out
sbb
xor
les
dec
cmp
daa
jl
sbb
aad
mov
xor
cli
in
lock
scas
bound
pop
or
outsb
or
sbb
or
dec
pusha
mov
mov
pushf
dec
xchg
test
dec
pop
sbb
cmpsb
jle
pusha
or
loope
xchg
bound
mov
lahf
insb
lret
jae
icebp
stc
sub
adc
iret
stos
xor
loope
and
test
push
enter
lods
cmp
sti
lods
aas
test
or
xchg
lds
stc
in
hlt
movsb
fwait
xchg
cltd
sbb
das
scas
or
loope
push
sub
mov
leave
pop
sub
xor
lahf
sbbb
arpl
stos
loop
mov
pop
sbb
push
dec
cmpb
sub
inc
dec
pop
stos
jnp
sbbb
or
mov
adc
ficoml
stc
fcmove
dec
sub
sub
sub
add
ja
lock
adc
call
test
and
xchg
ret
in
out
inc
les
sub
aam
dec
sbb
xorb
xchg
sub
and
sbb
les
in
mov
jns
imul
and
mov
sub
push
dec
mov
iret
outsl
movsl
pop
lods
mov
movb
add
inc
xlat
les
and
das
repz
stos
and
mov
ja
cli
and
mov
or
rolb
mov
push
je
ljmp
pushf
xchg
sbb
mov
in
cmp
pop
and
and
and
cltd
movsb
repz
and
fwait
inc
jp
out
adc
pop
or
push
stc
and
mov
pop
outsl
mov
or
fiaddl
gs
pop
les
mov
cmp
sub
mov
mov
sbb
or
imul
addr16
and
mov
mov
in
push
xchg
push
repnz
test
push
imul
test
outsb
adcb
iret
mov
popf
imul
fwait
add
sbb
xchg
outsb
cltd
in
lret
arpl
jecxz
dec
xchg
xchg
mov
aaa
aaa
leave
lcall
jmp
repnz
sub
sub
xchg
popa
cltd
out
repnz
push
cld
fs
fsts
and
in
daa
and
dec
and
sbb
or
cli
xchg
fdivrp
and
mov
cmp
and
sbb
fwait
call
dec
fcoms
cmpsl
cwtl
xlat
loopne
xchg
push
pop
pop
mov
out
inc
add
push
pop
pop
in
stos
dec
in
xlat
jmp
shrb
imul
adc
nop
jb
pop
ja
sbb
xor
fldenv
movsb
addr16
leave
dec
sahf
lret
movsb
inc
imul
stos
xorl
xchg
daa
jmp
imull
hlt
into
into
test
ret
xchg
adc
adc
pop
cs
sbb
mov
lock
cltd
push
lahf
pop
adc
arpl
and
add
push
xchg
xchg
sub
xchg
int3
jmp
cmpsl
jmp
sub
xchg
add
orb
addl
xchg
and
arpl
icebp
pop
and
aas
imul
adc
cmp
rclb
pop
cmpsb
xchg
icebp
adc
xchg
subb
add
mov
inc
pop
sti
push
ljmp
es
es
mov
or
add
adc
sub
xchg
inc
fnstenv
jle
repnz
sub
dec
movsb
arpl
mov
jb
push
test
and
test
mov
mov
insb
mov
mov
mov
or
movsl
mov
outsl
sbb
and
clc
xchg
lret
into
imulb
movsl
loopne
sahf
cmp
sti
jl
lods
sahf
dec
push
push
rclb
ss
ss
pop
or
inc
dec
xchg
xor
daa
fsubrs
leave
les
adcb
cwtl
mul
xchg
push
outsl
aad
in
hlt
sti
fwait
mov
mov
inc
xchg
mov
cmp
les
int3
xchg
in
cmp
test
inc
mov
fwait
lret
and
ss
and
arpl
sub
fwait
sti
sbb
sbb
ficoms
xlat
cld
pop
and
popa
cld
sbb
mov
and
dec
or
and
push
sub
sbb
push
sub
ds
addr16
push
in
mov
repz
ficompl
mov
out
mov
cmp
fs
iret
aam
pop
data16
push
add
jecxz
pop
ret
ret
mov
into
jne
adc
insl
or
cmpsl
cltd
into
sub
add
push
inc
mov
outsl
jnp
movsb
pop
mov
icebp
repnz
lcall
movsl
sub
sub
jne
pop
xchg
push
xchg
scas
sbb
cmp
and
lea
pop
xchg
jg
cld
inc
out
pusha
fstpl
stc
sti
inc
push
or
and
and
xchg
fwait
push
xchg
sub
pop
xor
and
mov
dec
arpl
mov
lret
cmpsl
jne
adc
ss
orl
pushf
bound
sbb
sub
lret
ret
lods
or
test
xor
adc
pushf
test
sbb
cmc
pushf
mov
cmpsl
jb
pop
sbb
daa
sub
xchg
xchg
add
push
scas
ljmp
push
jne
and
out
mov
jge
data16
outsb
mov
divb
data16
filds
cld
stos
jbe
mov
xor
dec
imul
push
cmpsl
mov
fmul
rorl
repnz
cltd
std
sub
rorl
push
fbld
dec
cmp
or
adc
cmp
ljmp
iret
popf
push
bound
xor
pop
sub
ds
decb
push
aam
ds
lock
or
rclb
xor
fidivs
dec
cmp
fs
stos
inc
arpl
mov
mov
xchg
mov
movsb
xor
popf
popa
jp
loop
adc
lret
fisubrl
idivb
or
fsubr
leave
lock
adc
inc
std
cld
xrelease
dec
inc
lcall
push
rol
lcall
xchg
ficomps
dec
mov
test
xchg
cmpsl
dec
rsm
testb
scas
mov
vinsertps
dec
jbe
lock
sbb
test
arpl
fcoms
fsubs
fs
and
jmp
sub
stc
jecxz
jmp
push
dec
sub
sub
cmpsl
lret
jns
sub
hlt
shr
pop
lea
mov
sub
sbb
shrb
pop
addr16
sub
dec
dec
sub
dec
jl
and
and
mov
jmp
jmp
iret
ljmp
xchg
adc
scas
push
or
and
mov
inc
mov
push
mov
xor
fldt
cmp
pushf
adc
imul
movsb
in
or
sub
pop
dec
lret
and
adc
and
adc
dec
or
xchg
lret
pop
dec
stos
add
repnz
dec
xor
mov
cltd
pop
cmp
movsb
fwait
adc
jmp
fs
cmc
add
fwait
push
into
mov
xor
fwait
adc
and
jmp
aad
cwtl
push
add
fimuls
scas
mov
ret
fcomps
iret
lods
push
mov
mov
daa
push
mov
inc
sbb
stos
cmp
fcomps
or
inc
fimull
pushf
sbb
push
push
out
cli
mov
xchg
cmp
fwait
xchg
or
push
pusha
aad
aaa
mov
sub
sub
cmp
and
and
lcall
rol
scas
pop
arpl
xchg
leavew
adc
cmc
imul
sub
scas
mov
sub
movsb
adc
cwtl
stos
test
adc
test
imul
xor
shlb
loopne
mov
fnstenv
adc
orb
and
add
or
stos
aad
push
mov
lods
inc
loopne
or
push
ret
iret
sahf
mov
jnp
imul
mov
adc
fwait
lahf
push
xor
cmpsl
mov
ret
out
add
repnz
stos
insl
scas
add
cli
adc
and
and
fldcw
or
xchg
out
ljmp
test
adc
inc
aad
rcr
push
cmp
iret
cmp
adc
mov
js
push
ja
pop
sbb
inc
fsubs
aam
xchg
repz
sub
push
ret
sbb
xchg
dec
fcmovb
add
add
or
or
and
xchg
sub
test
dec
or
inc
mov
cmp
sbb
sub
jb
arpl
scas
add
sub
sbb
aad
pop
loopne
or
jecxz
push
mov
in
add
or
add
add
pop
into
jecxz
mov
and
mov
jae
or
lret
mov
mov
inc
jb
in
int3
out
push
sub
repnz
out
sub
shrl
sub
xchg
or
sbb
cwtl
shl
and
add
add
stos
sub
cld
fdivl
arpl
in
int
mov
pop
mov
stc
cld
test
ja
test
add
insl
and
or
leave
mov
cmp
mov
out
rolb
or
nop
jge
sub
fistl
repnz
cli
inc
add
mov
daa
xor
sbb
jge
sti
jnp
out
sbbl
testb
pop
cmp
stos
sub
es
push
mov
push
dec
mov
leave
sbb
cld
jecxz
idiv
sbb
in
loop
mulb
and
lods
rclb
into
xchg
inc
pop
xchg
adc
or
or
pop
sbb
stc
mov
ljmp
movsl
mov
and
add
in
bound
or
dec
mov
lcall
and
xchg
and
dec
or
aam
test
or
sbb
cmpsl
xchg
sub
and
and
fstps
and
mov
and
and
hlt
test
adc
sbbb
loope
sub
imul
enter
xchg
xor
xor
mov
vrsqrtps
xchg
sub
cmpsb
es
sub
lods
shll
cmpsb
and
cltd
enter
scas
xor
cmc
bound
sbb
les
cmpsb
jge
cmpsl
fs
test
cltd
dec
daa
nop
hlt
sub
add
lea
outsl
lock
insb
sbb
clc
leave
sbb
mov
push
outsl
and
pop
sbb
sahf
mov
pop
iret
xchg
icebp
fcomps
dec
cmpsb
pop
mov
inc
js
pop
cld
mov
lds
daa
loope
lods
aaa
add
mov
sbb
lret
lret
cwtl
imul
push
aad
frstor
fbstp
mov
lcall
aam
sbb
pop
or
ds
mov
inc
loop
pop
xlat
inc
inc
pop
mov
imul
push
push
adc
mov
iret
sub
dec
scas
cld
rcll
leave
enter
or
je
dec
xchg
xchg
lds
orl
sbb
and
imul
adc
clc
or
sbb
cmpsl
sbb
push
ret
test
imul
and
inc
sub
sbb
addr16
dec
loopne
fcmove
jl
add
and
repnz
stc
mov
sbb
and
js
push
rcrl
add
push
xchg
mov
fisttpl
mov
fbld
and
pop
adcl
and
inc
sbb
mov
popa
and
rcr
xchg
loope
cmp
mov
push
pushf
xor
mov
dec
cmp
out
stc
xor
push
daa
leave
mov
ss
jge
push
cld
test
ja
jl
xchg
push
adc
mov
insl
test
daa
xlat
push
in
out
pop
in
push
lahf
and
adc
andl
adc
aas
lahf
pop
stos
mov
pop
mov
adc
enter
add
and
cmp
repnz
sub
adc
int3
cmp
stos
daa
sub
test
dec
push
mov
mov
out
push
push
cmp
or
jb
pop
adc
insb
ds
xor
divb
dec
mov
in
sub
in
xor
imul
lret
pop
push
xchg
sub
lea
sub
mov
arpl
in
mov
lret
lcall
sbb
push
add
rolb
inc
rolb
sub
mov
dec
rcll
and
or
xchg
sub
mov
jmp
and
push
pop
and
add
push
adc
fstl
leave
or
and
fxtract
lea
rorb
sbb
nop
push
imul
cli
or
pop
cmp
aam
mov
in
jp
sbb
into
pusha
ljmp
and
or
and
sbb
pushf
jnp
sbb
add
mov
sub
or
pop
ret
pop
jecxz
adc
arpl
pop
sub
inc
xchg
ret
jmp
mov
std
sub
pop
adc
cmp
cmp
mov
mov
test
pusha
cmp
mov
push
cwtl
sub
out
inc
mov
negl
es
xchg
imul
push
pop
add
xlat
lds
stos
bound
andl
dec
mov
je
out
pusha
or
or
cmp
mov
adc
fiaddl
fisubrl
push
jb
dec
push
jp
shrb
cmp
leave
sbb
arpl
mov
inc
sbb
adc
leave
dec
sti
mov
xchg
outsl
in
dec
loope
push
cmpsb
dec
mov
sbb
gs
jle
push
push
in
daa
movsb
sbb
xor
leave
inc
sbb
push
ja
pop
pop
es
jb
sbb
lcall
sbb
lahf
mov
cmp
std
in
or
int3
fldenv
pop
repnz
sbb
and
xchg
imul
je
mov
scas
sbb
shll
mov
and
fidivs
outsb
ret
push
jnp
pop
xchg
sbb
xchg
fisubl
fwait
pop
fdivrs
pop
jmp
and
push
or
sub
loopne
push
xlat
aam
pop
xchg
sub
arpl
sbb
xchg
pop
lods
and
dec
push
mov
ds
xchg
sbb
adc
test
adc
repz
inc
or
and
dec
or
aam
jle
push
ja
lock
inc
mov
jmp
test
rep
sub
pop
inc
and
or
mov
sbb
cld
push
mov
mov
or
sub
and
add
cli
cmpsl
sbb
dec
push
push
repnz
push
daa
pop
cmp
lret
test
pop
mov
inc
stos
inc
sub
sbb
mov
sub
cltd
xorl
push
pop
pop
orb
call
jl
sbb
sbb
imul
push
and
lods
mov
and
sub
xchg
add
negb
push
pop
push
fs
mov
es
and
sti
and
mov
sub
sbb
lods
push
mov
std
das
push
and
ss
xor
add
shrl
mov
pop
push
sub
js
ror
or
test
js
je
pop
push
gs
ror
stos
lret
into
pop
dec
jnp
mov
mov
push
mov
mov
scas
outsb
push
adc
mov
mov
ds
mov
and
scas
popf
mov
mov
xor
les
xchg
pop
sbb
push
jl
ficompl
out
cmpsl
mov
cs
mov
pushf
or
or
lret
jecxz
ret
enter
pushf
jecxz
and
sbb
add
adcb
mov
xlat
icebp
lret
es
aad
dec
or
addl
iret
adc
daa
dec
cmpsl
mov
in
push
inc
xchg
fs
cli
or
adc
dec
mov
jae
fstpl
sbb
sbb
cmp
pushf
sti
shlb
pushf
imul
xchg
mov
cli
aam
or
insb
and
dec
fsubs
jmp
xchg
movsb
xor
xchg
add
insb
mov
mov
icebp
push
and
mov
xchg
imul
or
lea
test
insl
and
clc
and
pop
bound
mov
jl
mov
int
sbb
sbb
fcomi
jmp
mov
sbb
incl
xchg
pop
sbb
sub
js
and
rorb
xlat
daa
lea
pop
cmc
mov
dec
lods
jmp
mov
sub
pop
xor
adc
or
pop
aad
nop
push
jb
jl
div
inc
pop
cld
xor
test
aaa
dec
jo
arpl
movsb
imul
out
mov
fiadds
jmp
xchg
adc
jmp
sub
inc
adcb
xchg
mov
mov
dec
into
fsubr
cmp
movsb
mov
addl
inc
cmp
dec
pop
mov
push
addr16
sub
or
cli
imul
xchg
dec
dec
fimull
cli
mov
and
mov
repnz
jmp
stos
and
and
push
in
call
nop
xor
mov
daa
pop
pop
dec
mov
mov
fs
fidivs
stc
fiaddl
fstps
jl
mov
icebp
jo
cltd
ds
adc
xor
mov
and
or
mov
cmp
dec
cltd
dec
inc
sahf
mov
iret
fadds
adc
in
pusha
add
dec
jecxz
idivl
push
movsl
in
xor
mov
cli
pop
sbb
sbb
adc
aaa
sub
nop
cmp
lds
or
enter
std
fstpt
leave
xchg
mov
lods
sbb
push
adc
jnp
fs
mov
sbb
adc
sub
lock
inc
fidivrl
sbb
arpl
and
or
xchg
xchg
gs
lret
sbb
pop
arpl
js
call
in
pop
bound
cltd
mov
lods
dec
push
push
adcl
iret
movaps
sbb
or
cmp
fldt
sbb
arpl
xchg
std
mov
sbb
cmp
xchg
lret
add
sub
pushf
sbb
movsb
push
out
movsb
or
movsb
jb
jae
lret
jns
stos
mov
inc
push
xor
sub
pop
rolb
call
push
and
inc
xchg
or
inc
mov
and
pop
rcrl
pop
jp
sbbb
in
adc
jmp
add
shll
lock
mov
fisubrs
stos
enter
lahf
ficoml
add
sub
cmp
vhaddps
xor
sbb
dec
enter
outsb
or
mov
dec
push
cli
stos
mov
loopne
xchg
sbb
imull
lcall
jl
jl
in
xchg
jg
lcall
fdivr
xchg
adc
jl
mov
sbb
xchg
and
aaa
loope
adc
mov
setns
in
js
divb
xchg
lea
arpl
xor
imul
jg
cwtl
sub
dec
sub
mulb
xchg
xchg
or
adc
sub
mov
outsl
add
push
int
and
jb
outsb
ficompl
sub
or
pop
int3
sub
jmp
or
sub
adc
repnz
in
inc
sub
sub
shrb
cmp
lret
push
gs
pop
sub
in
std
movb
dec
inc
or
sub
dec
ljmp
into
in
sub
xchg
ljmp
stos
or
push
inc
push
aas
div
mov
addr16
sbb
xchg
adc
push
int
popa
push
push
popa
inc
push
fcompl
fimuls
adc
adc
inc
fistpl
leave
mov
sub
int3
iret
jo
das
les
adc
sbb
xor
cmp
xor
dec
scas
jnp
pop
and
push
sub
adc
lods
or
dec
pusha
dec
fdivrs
scas
pop
mov
or
pop
push
les
jl
mov
mov
fildl
inc
mov
outsb
dec
xchg
arpl
inc
in
nop
push
sub
xchg
inc
mov
lret
icebp
es
dec
in
sbb
xchg
mov
and
popa
pop
and
divl
push
lods
lcall
mov
and
arpl
imul
shr
stos
sub
lods
dec
insl
repnz
jae
lea
mov
test
cmp
cmpsb
sub
dec
adc
xchg
jnp
imul
xor
iret
pop
add
sub
or
stos
adc
mov
and
add
xchg
pop
stos
cld
pop
fcomps
daa
or
mov
mov
fwait
push
iret
mov
outsl
xchg
mov
sbb
adc
pushf
lret
andl
and
push
inc
out
and
sub
scas
outsb
stc
insl
dec
xchg
xor
push
enter
stc
jg
xorl
hlt
add
bound
pop
or
mov
std
clc
xor
ds
and
push
or
sub
test
sub
sub
imull
rcrl
enter
and
mov
movb
lods
sbb
sub
fwait
daa
movsb
fwait
or
push
xchg
cmpsb
sub
pop
popf
pop
insb
nop
aam
shlb
push
in
xchg
xchg
cmpb
lock
jmp
pop
insb
in
mov
out
clc
xchg
sub
cli
mov
jnp
jo
imul
sub
xchg
mov
sub
xor
nop
push
es
dec
loope
or
xor
mov
push
xor
mov
int
dec
fs
mov
xchg
sub
xchg
mov
iret
mov
shll
inc
outsl
movsb
out
lcall
and
push
flds
fs
sbb
push
cmpsl
xchg
sub
xor
xor
xchg
xchg
iret
cmpsl
pop
aaa
cmp
int
aas
insl
or
push
arpl
xor
jle
sub
cmp
repz
sub
jo
shl
cli
pusha
sub
xor
mov
movsb
mov
in
aaa
mov
insl
popa
or
ljmp
stc
adc
cli
push
lds
or
add
lea
dec
push
enter
scas
fmul
ret
out
cltd
jmp
dec
sti
flds
add
adc
js
push
lcall
mov
xchg
enter
push
lods
into
mov
or
mov
push
push
sbb
call
lock
or
and
fisttpll
cmp
pop
insb
movsb
cmp
sbb
dec
jge
out
pop
push
sub
aas
add
mov
sub
pop
pop
jg
test
adc
sub
adc
mov
and
xchg
fwait
push
test
add
das
cli
pop
daa
lret
pop
sub
sub
dec
popa
dec
and
sub
mov
add
sbb
and
sub
filds
adc
sub
adc
pop
xor
and
pop
jg,pn
lcall
daa
sub
rcrb
and
cmc
push
or
push
adc
pushf
int
stos
sub
push
outsb
fsts
cmp
icebp
sbb
push
adc
hlt
and
jecxz
jae
test
or
test
addr16
mov
jle
lods
mov
je
inc
and
pop
sub
pop
add
movsb
mov
sub
mov
dec
jae
inc
dec
push
fcmovbe
sbb
lds
and
adc
inc
in
addr16
xchg
push
leave
je
inc
sbb
dec
fiadds
fs
daa
and
lea
pop
cwtl
xlat
mov
push
inc
pop
js
popa
int
jmp
leave
push
lret
test
repnz
xchg
stc
add
push
ficomps
inc
int
and
sbb
dec
aaa
arpl
jne
xchg
inc
sub
imul
pushf
mov
xor
shr
out
cmpl
jecxz
adc
sbb
int3
jne
pushf
ret
sbb
push
and
jnp
and
cltd
mov
xchg
lea
xorb
cs
sub
lcall
inc
sbb
sbb
push
mov
and
pusha
or
fucomi
sub
movsl
or
leave
lahf
sub
xchg
rcrb
fwait
shlb
sub
mov
insl
aad
inc
jo
push
cwtl
push
or
cs
je
lods
or
sub
push
push
sahf
dec
js
lods
fldenv
jp
scas
ljmp
in
imul
out
imul
lds
sbb
mov
mov
movsb
mov
scas
push
lods
jge
lcall
mov
mov
and
xorb
cmp
icebp
arpl
in
fdivrs
pop
jbe
mov
popa
and
ljmp
sbb
pop
cmpsl
cltd
jecxz
jno
xchg
ljmp
push
and
jecxz
lock
jns
and
pusha
out
es
iret
movsb
outsl
mov
pop
fbld
xchg
and
jno
ja
xchg
js
ja
icebp
sub
mov
pop
sub
push
mov
aam
mov
jne
cmpsb
cmp
aad
out
ljmp
push
cmp
leave
pop
and
xor
mov
icebp
sti
cli
mov
fmul
pop
and
ss
fsubl
pop
sub
call
cmpsl
sub
xor
ret
lcall
xchg
jno
in
sbb
sub
jnp
clc
popa
inc
push
bound
jge
es
mov
dec
outsb
push
pop
mov
jge
push
fwait
xchg
movsb
dec
icebp
sub
sbb
xchg
inc
nop
bound
movsb
pop
stos
inc
add
jo
mov
lret
sub
stos
jecxz
addl
in
sub
dec
outsb
sbb
mov
loop
test
fcomi
sub
pop
lret
clc
jno
and
jmp
cli
sbb
inc
daa
lods
mov
pop
leave
addl
fsub
cmc
hlt
adc
hlt
adc
cmpsl
xchg
xchg
sub
pop
cmpsb
mov
sahf
leave
popf
push
inc
ret
imul
mov
cli
or
jo
pop
loopne
lret
pop
loop
ljmp
cmp
movl
lret
adc
mov
in
movsb
iret
cmpsl
sub
cs
mov
inc
daa
in
or
lret
cmpsl
cmp
sbb
and
clc
jne
hlt
sbb
ds
and
or
iret
int
or
aas
leave
rcll
xchg
jo
and
cld
sub
adc
cwtl
daa
sbb
add
sbb
sub
mov
pop
imul
dec
lret
push
loope
xchg
jl
call
out
and
pop
push
lret
xchg
push
sub
mov
push
cmp
push
and
sbb
sbb
sub
std
mov
out
lret
cltd
and
jle
jbe
mov
jmp
xlat
repnz
test
jle
or
fldt
mov
mov
sbb
mov
leave
dec
mov
in
movsb
fistl
leave
lcall
pop
scas
jns
aad
mov
int3
leave
aad
push
inc
aas
jecxz
mov
and
push
add
mov
or
and
sub
jb
push
push
xor
xorb
cmp
mov
inc
push
mov
sub
sub
jns
and
cmpsl
mov
mov
aaa
or
rep
mov
pop
sbb
fsubs
jae
xchg
and
pushf
push
loop
sbb
lods
int3
dec
pop
pop
jp
push
sub
pop
shrl
mov
and
in
leave
mov
fsubrl
pop
push
add
addb
les
dec
mov
mov
inc
and
pop
and
es
xor
push
or
jl
fstpt
addl
sbb
or
xchg
adc
mov
loopne
es
repnz
jbe
out
iret
and
out
or
pop
sahf
daa
rcrb
jmp
inc
adc
cmpsl
clc
mov
mov
shl
mov
push
lcall
movsb
and
or
dec
sbb
and
in
imul
and
cwtl
lods
sti
loop
mov
test
dec
in
jo
in
in
insb
imul
mov
iret
add
sub
test
js
shlb
loop
pop
shlb
mov
cmpsl
lods
fs
xchg
call
imul
xlat
sbb
jp
lret
sub
xorb
jge
push
cmp
cmc
shr
jno
pop
pop
cmp
xchg
mov
and
ret
mov
aaa
sbb
ja
mov
ja
jp
inc
sti
in
xchg
and
jno
mov
lcall
cltd
or
enter
fsubrl
out
int3
and
and
pusha
push
jl
adc
xor
sbb
lcall
fwait
and
insb
and
push
das
inc
pusha
sbb
fldenv
push
popf
sti
sub
popf
xor
push
mul
pop
xor
mov
insl
mov
test
mov
mov
inc
cmc
in
inc
clc
test
outsl
js
mov
sub
xlat
push
out
sbb
lret
adc
push
inc
lret
je
cmpsb
test
sub
xchg
or
mov
or
sbb
into
arpl
xor
mov
sbb
loopne
les
test
xchg
out
jmp
dec
inc
addr16
fstl
repnz
dec
dec
frstor
fldt
daa
push
sub
mov
subb
nop
sbb
and
jp
mov
mov
arpl
mov
sbb
iret
and
pop
mov
out
ljmp
aas
iret
fwait
lds
imul
mov
movsb
dec
out
cli
lret
fcoms
dec
insl
jnp
aas
insb
mov
repnz
push
insl
lret
popa
xchg
adc
cltd
imul
fninit
pop
mov
add
pop
pop
mov
ljmp
movsl
adc
dec
jbe
mov
test
mov
das
mov
mov
lods
dec
pop
inc
sbb
dec
or
push
xchg
cltd
sub
dec
cmpsl
int
sti
xchg
mov
insb
xor
je
movsl
addr16
or
lods
lret
inc
leave
sub
lret
fstpt
and
movsb
movsl
and
lods
jae
push
and
test
bound
cmp
push
pop
pop
fwait
and
or
xchg
push
lods
call
call
inc
imul
mov
movsl
icebp
xchg
push
imul
lcall
push
popf
pop
mov
psrad
adc
cwtl
xchg
pop
jecxz
lret
inc
shlb
mov
or
inc
lds
jnp
fidivrs
and
out
pop
pop
scas
je
mov
push
outsb
add
popf
sbb
lcall
mov
push
pop
sti
and
mov
aam
dec
or
inc
xor
es
mov
or
jbe
mov
cmc
popf
pop
sbb
mov
imul
mov
sbb
inc
or
mov
fsubs
or
cmpsl
or
pop
mov
xchg
sub
es
test
xchg
inc
jle
movsb
or
and
sub
jle
pop
sbbb
dec
push
push
push
push
push
insb
cwtl
jle
rcrb
dec
pop
loop
outsb
mov
push
lahf
xlat
or
sarb
and
or
push
mov
add
xchg
or
nop
xchg
push
iret
mov
fsubrp
sbb
add
cmc
sub
mov
iret
push
loope
sbb
or
xor
out
xchg
push
inc
sahf
mov
fistl
outsb
cmp
in
negb
aad
inc
pop
shrl
scas
imul
jb
iret
pop
aaa
push
jae
ljmp
fcmovbe
push
scas
lret
bound
out
imul
cmp
lock
cmpsb
test
mov
and
and
dec
add
pusha
add
mov
in
pop
xor
icebp
cltd
and
imul
xor
pop
cmp
sbb
nop
ret
daa
fs
mov
xor
loope
shlb
xlat
testb
pop
fmulp
adc
ficompl
and
mov
xchg
stos
jmp
mov
push
pop
popf
lret
jbe
or
cmp
and
jge
popf
inc
cld
sub
loop
adc
insb
dec
or
clc
ficomps
out
or
push
ss
pop
jnp
jns
fs
sahf
lret
incb
ljmp
clc
sti
add
es
popf
or
mov
or
rcll
mov
cmpsb
mov
jle
shll
lret
in
lcall
jbe
loopne
sub
insl
and
and
xchg
rclb
nop
ljmp
in
push
fsubrl
xchg
es
jp
mov
add
cwtl
aas
adc
push
sbb
loopne
sbb
pop
inc
or
in
xlat
repnz
sbb
pop
mov
jns
adc
xchg
xchg
pop
jl
xlat
xchg
add
cmp
push
mov
aam
mov
add
mov
add
or
sbbl
orl
inc
or
mov
push
dec
fwait
sub
xchg
fstpt
sbb
sub
fadd
inc
rcr
es
aam
lret
movsb
mov
sub
in
sub
and
es
mov
adc
fistps
mov
sub
sbb
sbb
push
sbb
int
stos
pop
pop
scas
je
push
fs
push
mov
sbb
xor
fidivrl
mov
jecxz
or
addr16
xchg
or
add
daa
fmulp
xchg
cmp
and
pop
pop
xorl
mov
inc
xchg
repz
and
inc
xorl
mov
fs
ret
iret
adc
addb
dec
add
sub
cli
aad
test
jle
pop
fbld
inc
mov
cmp
add
ds
adc
push
es
mov
bound
mov
adcl
test
inc
subb
sub
push
cmp
and
stos
enter
pop
fldt
fsubrl
cmc
or
xchg
shll
movsb
iret
and
lret
mov
jo
dec
pop
and
icebp
mov
in
add
test
mov
jmp
push
cmpsb
sub
imul
in
cmp
add
xor
mov
mov
jo
jle
xor
xchg
xchg
sub
pop
push
loop
sbb
lock
repz
sbb
jge
mov
cmpsl
fucomi
fnsave
mul
sbb
pop
out
cli
mov
pop
dec
and
sub
arpl
sub
aam
add
jp
loopne
in
mov
sub
jecxz
add
call
popl
pop
add
cmpsl
add
mov
jp
mov
jle
inc
ljmp
out
fs
in
mov
call
movsl
push
leave
stos
cltd
int
inc
pop
fldcw
cmpsl
scas
movsb
and
dec
sub
push
aas
adc
fmuls
or
sbb
arpl
imul
add
adc
xchg
mov
push
stc
or
mulb
rolb
loop
mov
inc
sbb
int
and
add
or
outsl
insl
fwait
xchg
cmp
or
fcoms
push
sbb
ljmp
xchg
jno
stos
dec
scas
and
pop
sub
daa
lea
lcall
je
or
and
xchg
jl
insl
and
cs
sub
sbb
andl
mov
aas
ret
sbb
pop
insb
bnd
xchg
jmp
arpl
dec
sti
and
stos
cmpsb
mov
ds
int3
lcall
push
in
pop
gs
bound
jns
and
popf
orb
mov
test
notb
stos
sbb
xchg
sub
or
subl
inc
and
jb
jmp
pop
fsubl
xor
xor
in
pop
je
mov
or
addr16
outsb
movsl
pop
xchg
in
sar
into
inc
jnp
jnp
and
push
call
and
sbb
adc
popf
lahf
or
scas
dec
pop
fs
fcoms
jno
and
cmp
mov
pop
jecxz
dec
xor
or
dec
mov
mov
pop
stc
push
and
je
jno
push
and
movsb
call
adc
leave
dec
sbb
xor
adc
rcll
in
mov
dec
add
push
pop
not
fdiv
pop
mov
nop
xchg
xchg
jg
cltd
ret
inc
lds
push
mov
pop
xlat
xchg
repz
jo
push
lea
stos
add
jmp
popa
or
cmpsl
fwait
or
imul
mov
mov
dec
and
idivb
adc
add
pushf
pop
outsl
aas
adc
push
lret
and
and
insl
sahf
sbb
pop
pop
negb
leave
xchg
xchg
call
lock
mov
or
or
mov
aad
adc
jle
xor
dec
sub
and
jp
enter
in
push
pop
xchg
bound
lret
sub
inc
jmp
in
aad
xchg
and
leave
push
outsb
inc
lods
imul
shll
mov
pop
daa
leave
sbb
in
insl
sti
lcall
in
data16
fxch
testb
sub
sbbl
cli
push
scas
sub
mov
scas
outsl
and
xchg
jg
cld
repz
push
repnz
imul
ljmp
jge
cltd
cwtl
push
cltd
jo
arpl
int3
jne
mov
into
loope
pushf
es
nop
daa
lret
cli
mov
pop
iret
stos
push
in
pusha
mov
sub
pop
popf
cld
ret
arpl
xchg
fld
movl
imul
push
mov
cmpsb
cmpsl
mov
in
bound
adc
sub
cmp
fdivs
xor
or
gs
popf
cmp
es
mov
dec
and
xchg
or
mov
pop
jl
fnstcw
in
or
sub
cwtl
cmp
out
test
imul
jae
cmc
ror
fsubr
inc
adc
aad
test
ljmp
jp
fwait
xchg
jnp
pop
js
and
xchg
push
out
std
cmpsl
and
out
and
into
cld
je
sbb
arpl
fwait
sbb
and
call
in
mov
and
inc
daa
data16
mov
push
int
and
cltd
jmp
mov
cmc
or
mov
pop
cltd
and
mov
ret
or
pop
movnti
push
lock
xorl
sub
int
adc
cmpsb
hlt
iret
sub
fistps
push
lret
cwtl
loopne
ds
movsb
or
xor
stos
mov
push
mov
sbb
dec
mov
cltd
xchg
imul
or
mov
jl
cld
xor
adc
xchg
lahf
sahf
mov
push
xor
aam
lret
fwait
add
lret
movsb
ds
call
adc
mov
daa
jno
aas
lret
ljmp
out
lods
scas
xorl
test
sub
aas
and
mov
rclb
cmp
test
cmpl
fdivrl
add
sbb
xchg
clc
adc
andb
mov
xor
push
cmpsb
pop
xchg
lret
scas
repz
sbb
cmp
add
mov
adc
mov
out
movsb
dec
outsl
or
shrb
into
cs
mov
sbb
incl
or
mov
orb
add
push
dec
loop
mov
inc
and
and
dec
lcall
sub
iret
xchg
add
jmp
sbb
imul
lock
repnz
inc
xor
fbstp
mov
sub
jl
cs
insb
xor
push
fs
lods
inc
xchg
sbb
jle
lret
out
insl
arpl
loope
pop
insb
push
adc
ds
mov
pushf
sub
add
fidivrl
sub
aam
fmull
sbb
dec
movups
dec
sbb
mov
adc
and
xchg
std
pop
fldt
and
sub
sbb
push
fsubs
pop
iret
outsl
xor
jbe
xchg
sub
lret
mov
mov
or
and
iret
ret
mov
inc
sbb
dec
cltd
sub
add
inc
pop
fsubrl
cmp
cmpsl
sub
and
lock
sub
lock
es
ja
sti
pop
lock
lret
outsb
sbb
lock
mov
loopne
sahf
mov
loope
cmpsb
push
lock
fdivl
and
jne
stc
test
sub
or
les
out
push
in
incl
pop
pop
jmp
and
daa
loopne
ss
bound
jae
in
test
in
sbb
jb
stos
bound
and
lds
or
and
push
adc
sbb
popf
movsl
loop
push
stos
jecxz
sbb
cltd
ror
in
jmp
push
push
loope
inc
sbb
sub
push
insb
cmp
sub
pop
sub
aas
adc
mov
clc
ret
and
sahf
imul
leave
fsubl
and
loope
dec
ret
push
je
fldt
popf
fistps
les
lahf
cmc
adc
jecxz
mov
jae
loopne
cmp
inc
adc
and
or
add
cld
mov
gs
and
daa
mov
test
gs
outsb
mov
or
cld
cmp
sbb
neg
ljmp
adc
into
and
jge
or
pushf
xor
add
inc
repnz
leave
push
pop
cltd
and
repnz
leave
and
mov
arpl
and
andb
sbb
fnsetpm(287
scas
or
in
dec
dec
cmp
cmpsb
sbb
arpl
inc
test
sub
sbb
sbb
jp
int
lret
add
aaa
lret
and
inc
bound
std
mov
and
push
jl
inc
mov
pushf
cmpsl
dec
sub
jo
push
pop
repz
pop
mov
addr16
lret
jmp
aam
mov
lret
shlb
lcall
and
and
mov
sbb
mov
mov
sbb
mov
inc
add
xor
fcompl
push
mov
mov
xchg
sub
mov
pusha
xlat
fdivp
mov
jb
or
pop
shlb
pop
je
inc
push
int3
fs
pop
sub
test
sub
jle
inc
sbb
rolb
gs
and
mov
mov
insl
sub
cld
push
outsb
leave
mov
cmpsl
sub
pop
and
enter
add
xchg
lea
push
sbb
rorb
rcrl
outsl
fistl
call
cmpsl
sbb
sbb
adc
pop
mov
and
cs
xchg
or
sti
pop
ret
lods
imul
outsb
sbb
adcl
adc
adc
sub
cs
hlt
fisubrl
dec
out
test
mov
leave
xor
xchg
cltd
daa
pop
jno
scas
xchg
sub
xchg
arpl
adc
sbb
or
in
call
push
loop
jns
inc
xlat
or
fs
and
push
inc
mov
inc
and
or
inc
out
inc
outsl
inc
sbb
dec
frstor
adc
sahf
ret
pop
loope
xor
loop
jecxz
sub
bound
adc
pushf
sub
lret
push
cmp
xchg
adc
and
movsl
stos
imul
inc
xchg
call
adcb
clc
fidivl
jo
scas
insl
loop
inc
imul
push
dec
pusha
cmp
aad
leave
sbb
pcmpgtb
mov
mov
push
pop
outsb
adc
jb
adc
lret
fldt
popf
popa
ret
call
test
jp
jecxz
mov
stos
les
xchg
popa
lds
int3
data16
add
sub
and
imul
push
cwtl
and
cmpsb
xchg
dec
dec
jae
inc
pop
mov
cwtl
sbb
ret
icebp
arpl
pop
mov
cltd
and
enter
ljmp
push
mov
out
pop
cld
xchg
adc
lds
cmc
adc
fnsave
mov
and
push
les
mov
pop
insl
and
inc
int
fisubrs
lds
mov
jecxz
hlt
cmc
lret
push
mov
mov
sbb
stos
inc
into
lock
sbb
in
int
adc
imul
test
mov
cmp
loopne
movsb
mov
sbb
mov
dec
pop
gs
lods
xor
lods
es
adc
mov
mov
mov
mov
xor
pop
push
and
jle
jns
mov
mov
mov
stos
bound
inc
sub
insb
sub
pop
repnz
xchg
jecxz
dec
cmpsl
push
jg
push
sbbb
out
sbb
pushf
push
sub
out
aam
and
test
pusha
jge
pop
inc
orb
push
or
test
ljmp
xchg
jle
and
outsl
sbb
arpl
jp
iret
or
pop
aas
sub
add
inc
clc
pop
cmp
mov
dec
cmpsb
mov
insl
sub
imul
add
mov
and
fists
sub
jge
add
mov
jge
sbb
adc
inc
les
cmp
lea
and
or
sahf
insl
lods
jl
cmpsl
cld
mov
call
jb
stos
jo
mov
arpl
push
xchg
sub
xor
push
dec
into
lcall
iret
cli
inc
and
outsl
popf
paddsw
sbb
and
mov
push
mov
lret
outsl
add
mov
sbb
imul
jno
pop
push
and
cli
xlat
dec
and
dec
jne
push
pop
cs
cmc
hlt
pop
adc
stos
mov
jg
inc
pop
xor
jle
scas
mov
xor
xor
in
subb
dec
jle
dec
pop
inc
pusha
and
add
mov
sbb
insl
es
inc
pushf
jno
or
mov
xor
divb
push
jg
sub
enter
call
dec
pop
push
lret
pop
std
push
dec
add
fwait
mov
insb
dec
loopne
and
lods
stos
sub
add
cmpsb
popa
scas
leave
mov
lret
mov
lds
lods
fdivrs
test
and
push
movsb
push
xchg
sbb
adc
xchg
clc
aam
add
lahf
inc
test
sbb
clc
mov
push
and
mov
hlt
mov
ljmp
dec
pop
xchg
or
mov
sub
leave
and
xchg
dec
movsb
dec
xlat
jmp
add
sub
jb
jne
jge
dec
jl
in
pop
adc
call
sbb
mov
mov
shll
dec
cmp
outsb
pop
mov
or
loop
inc
xor
push
es
sbb
and
es
shlb
mov
push
mov
jmp
leave
or
daa
test
insl
mov
adc
add
jnp
loop
and
test
test
sbb
cmp
xchg
and
je
sub
outsb
clc
pop
bound
imul
mov
call
or
int
dec
lods
bound
mov
and
mov
ds
mov
xor
or
jge
cmp
std
lock
scas
movsl
pop
cmp
loope
push
aas
mov
push
mov
pop
hlt
pop
cmp
popa
mov
or
les
pop
push
call
or
ds
dec
stos
jns
mov
lea
push
sub
sbb
cs
out
mov
sbb
in
daa
lods
sarb
pextrw
aaa
cmp
lcall
mov
lock
and
popa
sbb
adc
mov
sbbb
or
fildll
cmp
jb
and
sub
and
mov
mov
mov
cmp
and
cld
cmpsl
mov
cwtl
sbb
mov
lds
xchg
mov
cmp
or
adc
imul
inc
push
scas
call
les
fdivs
fisubl
sub
shrb
push
test
movsb
sub
pusha
int
fxch
idivb
pop
popa
sub
lret
iret
mov
out
push
or
loop
lds
or
mov
stos
jecxz
clc
or
out
mov
fxch
mov
negb
inc
hlt
sbb
es
jne
fxch
mov
adc
pop
test
xchg
les
sbb
leave
sbb
test
fistps
pop
mov
and
pop
sti
aam
xchg
xor
fwait
and
es
icebp
mov
sti
dec
push
fistpl
adc
in
pop
rolb
push
in
lret
std
mov
js
leave
enter
sub
addl
xor
push
test
test
pop
std
pop
cmp
lret
jbe
dec
adc
xor
xchg
mov
in
xchg
add
fstpl
aam
inc
sub
dec
in
adc
fisubrl
iret
pop
mov
or
dec
movsb
xchg
and
and
lea
negl
sub
pop
jp
mov
sub
rorb
les
ljmp
bound
jns
mov
sub
and
and
mov
test
sahf
psrlw
push
dec
pusha
andl
xor
sub
pop
pop
test
cmp
testl
shll
sub
cmp
cmp
je
ficompl
fs
jne
sbb
mov
lea
adc
loope
getsec
pop
mov
setp
or
adc
xchg
xchg
pop
adc
sbb
imul
lods
shrb
bound
push
adc
sub
test
ja
xchg
pop
lret
lret
out
push
cwtl
pop
xor
sbb
cmp
mov
aaa
sub
lret
sub
test
xchg
and
xchg
cmp
data16
sub
add
and
adc
movsb
and
mov
fistps
mov
sahf
pop
adc
insl
add
jle
mov
xchg
movsb
xchg
insl
cmp
lahf
push
adc
jmp
or
inc
sub
movsb
loope
aad
mov
in
pop
cmp
mov
mov
or
jb
ffree
cmc
sbb
sub
push
insl
fisttpll
jae
iret
cltd
mov
xor
aam
cmp
xchg
gs
push
xchg
push
cmc
cmp
into
sub
pop
aas
and
add
cli
sbb
mov
aaa
mov
pop
xor
out
or
jnp
pop
mov
pop
xor
inc
xchg
js
xchg
xor
adc
sbb
push
and
andb
dec
aam
insb
loopne
adc
adc
and
mov
sub
inc
sti
push
shrl
hlt
cmp
mov
push
fwait
imul
jmp
das
dec
sbb
jne
test
mov
add
stc
mov
push
dec
adc
sbb
sbbb
sti
cmc
xor
pop
mov
jo
dec
dec
movsb
and
lea
lods
fwait
in
mov
and
push
fcmove
nop
jp
mov
shrb
ja
mov
sbb
pop
pop
repz
and
dec
mov
inc
mov
add
cmpsl
lret
aad
pushf
fcomps
js
or
dec
dec
add
mov
fisubrl
and
out
dec
pop
mov
dec
mov
jecxz
push
sub
mov
fcomps
dec
sbb
jge
out
lea
cmp
icebp
dec
stos
ret
lret
xchg
push
jae
or
or
insl
into
jo
in
scas
inc
lret
mov
or
mov
mov
lret
adc
test
push
daa
and
je
stos
lock
push
jecxz
dec
adc
les
popf
scas
mov
les
pop
loopne
cmp
stos
dec
push
push
test
arpl
lret
leave
sbb
dec
sub
jbe
push
ffreep
adc
jmp
ret
les
adc
add
jmp
loopne
mov
insl
jmp
lea
cli
not
sbb
aaa
int
xorb
push
sub
sbb
mov
bound
out
cmp
cmp
mull
jno
subl
ljmp
scas
inc
test
mov
cmp
test
pop
mov
arpl
push
mov
or
mov
sbb
jecxz
fnstsw
xchg
in
fidivrl
std
bound
lods
sbb
call
fldt
out
mov
mov
dec
and
fnstenv
arpl
shlb
jne
adc
push
lods
in
jg
xchg
and
mov
inc
out
or
mov
pop
mov
inc
sub
or
dec
cwtl
add
push
lods
cld
push
pop
clc
aam
dec
imul
push
pop
mov
cli
xchg
cltd
cmp
loop
fcmovne
xchg
out
adc
cmpsl
es
and
add
dec
mov
sbb
sub
jnp
cmpsl
rclb
outsb
xlat
adc
mov
and
fwait
lods
mov
leave
pop
push
dec
jecxz
adc
cmp
aaa
hlt
jmp
inc
arpl
dec
mov
inc
out
iret
popf
add
and
mov
jns
sub
sub
and
sub
in
xor
out
popf
sbb
enter
rorl
add
test
and
pop
cmp
gs
adc
fimull
ret
cwtl
xchg
xlat
ljmp
divl
rorb
pop
ss
pop
ja
jmp
in
mov
repz
mov
push
push
scas
pop
adc
sbb
pop
daa
adc
repnz
or
mov
aam
test
cmp
pop
lret
push
fmull
popf
loopne
sbb
loope
lret
adc
insb
mov
sbb
mov
rcrl
in
fucomi
and
lret
xor
jle
mov
and
arpl
stc
cmpsl
enterw
mov
xchg
pop
lret
push
repnz
je
pop
mov
xlat
scas
fwait
xorb
inc
push
pusha
push
or
repz
sbb
pusha
push
imul
mov
icebp
jnp
cmpb
sbb
mov
stos
cltd
iret
mov
sti
lods
test
aaa
sbb
sti
push
iret
or
jg
nop
imul
loopne
or
jl
lea
sub
inc
jecxz
dec
popf
scas
and
sbb
fs
movsl
arpl
movsb
ss
sbb
and
xchg
sub
sbb
gs
mov
in
data16
push
je
sub
hlt
mov
test
xlat
mov
into
pop
mov
mov
cld
jnp
pop
outsb
sub
xlat
stos
lret
stos
sub
lcall
adc
repnz
mov
push
pop
test
punpcklwd
jge
xlat
sub
mov
insb
aam
mov
sahf
leave
push
and
inc
in
sbb
ja
add
stos
cmpl
repnz
sbb
out
sbb
push
adc
add
push
and
adc
imul
sahf
push
jo
lcall
lods
cmp
jb
nop
pop
ss
leave
fildl
mov
push
pop
mov
xor
add
lret
cltd
outsl
lock
sub
fcomps
or
mov
ljmp
cmc
aaa
dec
lock
mov
pop
je
lret
fs
stos
rclb
test
add
jns
pop
hlt
mov
xchg
into
aam
pop
test
pop
shlb
mov
in
or
popf
push
push
aaa
les
loopne
scas
adc
es
dec
insl
or
fs
cltd
sub
iret
outsb
jae
xor
pop
dec
cs
cmp
push
outsl
cmpsb
lea
dec
stos
add
lock
sub
xchg
xor
add
repnz
lret
pop
clc
bound
into
push
in
sub
xor
addr16
add
push
leave
pop
call
nop
mov
mov
stmxcsr
sbb
daa
sbb
mov
leave
push
adc
sub
sub
test
mov
je
or
push
scas
cmp
and
xor
outsb
test
push
in
xchg
jmp
es
jmp
sub
mov
ljmp
cmc
sub
adc
rcrl
sbb
and
cld
test
inc
mov
lret
leave
test
pop
mov
sbb
push
je
outsl
xchg
mov
roll
xchg
lods
dec
dec
sub
test
sub
pop
add
fnstenv
xlat
mov
ljmp
jno
fmull
dec
pop
sbb
mov
xchg
mov
mov
sbb
nop
outsl
xor
enter
lea
push
jle
push
jp
ljmp
or
cmpsl
add
mov
cltd
fstl
xor
jo
outsb
mov
sti
jecxz
dec
arpl
pop
mov
sbb
cmp
jb
and
aam
and
xchg
jns
jno
sbb
pop
stc
mov
andb
mov
jb
arpl
cmc
mov
cvtdq2ps
pop
ret
iret
jb
jno
loope
mov
inc
scas
sahf
scas
aam
andb
popa
mov
push
iret
int3
sub
or
andl
sbb
fs
sbb
sbb
lret
adc
dec
xchg
out
lcall
or
int3
adc
inc
syscall
sbb
fisttpl
es
inc
rcrl
pusha
and
and
andl
jge
sub
sub
jecxz
pop
rcrb
sub
sbb
out
cli
sahf
dec
ret
lret
cmc
push
leave
int
in
jb
push
xchg
pop
lods
push
out
fldenv
in
stos
outsl
fstpt
fmuls
jbe
lret
sbb
jp
aad
cld
in
mov
lock
rcr
xchg
and
push
adc
sbb
dec
push
mov
cmp
xor
xorb
push
lcall
imul
mov
jp
fdiv
cs
or
daa
mov
js
sub
jl
inc
xor
push
aas
cmpsl
push
int3
shufps
aam
jg
xlat
sbb
xor
xchg
xchg
push
orl
mov
mov
insb
pop
jl
sbb
enter
dec
add
pushf
lcall
lea
jb
out
add
push
iret
xor
daa
js
or
sbb
arpl
adc
jno
xor
xchg
push
sbb
pusha
fs
inc
ljmp
cs
add
cmp
adc
xor
shlb
sahf
pop
outsl
movsb
into
test
sub
push
bound
nop
and
inc
and
mov
pop
arpl
add
mov
and
push
js
xchg
mov
mov
mov
lea
sub
add
xlat
jbe
pop
and
xorl
int
ljmp
jmp
fwait
push
cltd
out
mov
sub
dec
add
sub
mov
into
adc
bound
push
pop
jo
or
xchg
sbb
dec
sbb
xchg
sub
stc
lret
mov
pop
xchg
insb
mov
jl
lret
mov
scas
xchg
lock
push
xor
pop
inc
xor
dec
sti
sub
aas
or
push
pop
out
xor
pop
or
or
mov
jae
lcall
xor
or
in
stos
push
push
dec
iret
test
popa
and
pop
inc
test
es
mov
inc
push
push
sub
std
fimull
loopne
or
ficoml
adc
sub
nop
dec
cwtl
je
push
and
jo
and
outsb
rclb
mov
lret
ja
mov
pushf
cmp
sbb
push
addb
lcall
xchg
rcrb
jmp
mov
mov
lods
jecxz
sbb
jns
sahf
leave
xchg
xchg
popf
push
pop
mov
push
sti
jno
sbb
fs
mov
pushf
sbb
inc
nop
mov
push
aad
es
loope
pop
mov
stos
lret
cwtl
sub
jnp
in
iret
sbb
xlat
mull
in
imul
pushf
fimuls
shl
test
sbb
sbb
pop
fdivrl
adc
das
sbb
push
roll
and
push
movsb
and
call
insl
mov
mov
test
or
imul
rorb
ror
pop
pop
sbb
push
dec
jb
adc
popa
cmc
pop
and
les
pop
pop
sbb
out
push
inc
cmp
dec
arpl
sbb
adc
cmp
aam
adc
fldenv
fsubrs
sub
std
inc
in
imul
cmp
pop
leave
mov
je
sbb
mov
push
stos
ret
fsubrl
dec
cmp
or
cmp
imul
inc
testb
cmpsl
inc
sahf
rclb
sub
and
lcall
or
mov
fwait
lds
fs
das
mov
xor
or
adc
and
add
loopne
mov
cltd
and
jmp
roll
pop
les
adc
icebp
push
pop
or
inc
adc
fistpl
in
aam
dec
xlat
sbb
movsb
xchg
inc
into
rol
and
rcrl
dec
dec
in
out
movsl
dec
sub
in
sbb
negl
and
and
and
lret
sbb
insl
lret
stos
not
adc
adc
out
sub
movsb
push
ret
jge
and
stos
sbb
mov
adc
push
sub
sarl
push
xor
movsb
into
stos
xor
rolb
mov
sub
lret
push
sbb
lock
sub
cmp
and
adc
lret
in
es
bound
jns
sub
push
daa
pop
lahf
cmp
nop
xor
sbb
stos
stos
bound
sbb
stos
out
or
and
xor
imul
inc
add
pop
mov
inc
mov
and
xchg
arpl
jl
jle
sub
movsl
insb
jo
inc
lock
stos
sbb
cmpsb
out
mov
xchg
xchg
lret
and
push
daa
sbb
std
in
cmp
imul
and
xchg
icebp
sub
stc
outsl
pop
sub
int3
and
xor
out
cmp
pusha
xlat
mov
cwtl
push
imulb
sbb
out
stos
repz
test
sub
fsubl
sub
cmp
mov
mov
or
lret
movsb
outsl
imul
xlat
and
push
jmp
bound
pop
xchg
jmp
cs
and
ss
xor
mov
mulb
inc
pushf
cmpsb
mov
roll
jns
push
and
pop
outsb
pusha
movsl
aad
push
test
mov
aam
push
punpckhdq
pop
push
xor
shlb
leave
push
mov
and
add
cwtl
and
sbb
mov
bound
add
jnp
or
mov
into
pushf
dec
test
xchg
jo
inc
sub
in
sbb
pop
inc
nop
pop
int
mov
sub
inc
mov
fwait
dec
adc
add
push
push
xchg
sub
in
push
jnp
jge
stos
xchg
es
and
out
xor
fsubs
fildl
std
or
jmp
int3
sub
int
mov
imul
jmp
stos
movsb
imul
push
test
jmp
jle
sbb
mov
sbb
stos
push
nop
mov
xor
leave
and
mov
xor
movsl
mov
cmp
stc
sub
mov
hlt
and
sbb
jno
add
mov
xor
adc
push
fldenv
in
enter
jle
ret
shl
mov
daa
lcall
movsb
adc
or
andl
stc
neg
sbb
mov
sbb
mov
sbb
rolb
outsl
sbb
aad
push
dec
pop
subb
or
lret
and
enter
xor
jp
xor
movsb
mov
bound
ja
out
and
imulb
iret
and
out
pop
enter
jo
add
jo
ret
test
jbe
insb
lcall
pop
adc
and
cmp
xlat
mov
lahf
pop
mov
push
sub
pop
adc
insl
les
adc
jecxz
pop
testb
and
sub
pop
call
xchg
adc
in
add
xchg
pop
push
insb
ficompl
out
xchg
xchg
shrb
jl
pop
push
ja
or
ret
xchg
lods
aam
or
out
sbb
mov
add
jl
shlb
dec
pushf
xor
mov
stos
loopne
adcl
sub
dec
test
add
fldcw
popl
sbb
mov
jecxz
outsl
jne
pop
inc
call
loop
sarb
dec
int3
sbb
dec
das
pop
mov
daa
lods
stos
in
movsb
adc
movb
adc
aaa
and
cmpsb
jg
xlat
mov
mov
movsb
push
ljmp
sbb
xchg
inc
and
jle
cmp
sbb
aam
sub
lret
test
cmp
push
aad
loopne
hlt
fwait
popf
push
add
shll
jl
jo
pushf
mov
and
imul
test
out
stos
and
cmc
push
fbstp
mov
das
dec
pop
sub
movsb
jbe
stos
mov
out
dec
jno
xor
push
dec
cs
movsl
xor
aas
push
outsl
and
stos
cmp
sbb
push
out
lds
mov
popa
loop
jmp
sub
test
repnz
insl
lret
stos
adc
or
sbb
aad
adc
in
or
cltd
pop
out
bound
pushf
sbb
and
or
ret
aad
sub
push
mov
sbb
shll
and
push
or
cwtl
gs
sub
sub
fstps
dec
and
test
cmpsb
jns
and
mov
xor
xor
pushf
sub
stos
and
iret
mov
js
pushf
or
cli
stos
push
sbb
mov
in
jp
push
hlt
add
jb
adc
imul
lods
iret
add
lcall
scas
push
mov
jp
fbstp
adc
push
es
in
and
outsb
mov
xor
movsb
stos
sub
mov
ret
movsb
mov
sub
mov
scas
stos
out
dec
sbb
test
test
xchg
data16
and
dec
and
xchg
mov
insl
adc
cltd
testl
ds
stos
pop
or
sti
jnp,pn
and
jns
pop
imul
sub
jns
sbb
lret
pop
sbb
mov
sbb
push
mov
mov
sub
adc
cmp
mov
and
lods
das
jge
mov
test
andb
xchg
scas
xchg
pop
lds
inc
inc
clc
pop
push
jbe
add
add
fsubl
daa
and
pop
and
test
sti
jg
push
enter
test
sbb
mov
xchg
and
sbb
stos
sbb
les
fildll
ss
imul
mov
cli
sbb
adc
sub
pop
mov
mov
cmpsl
fcoml
pop
in
and
test
inc
cmp
repz
lahf
and
fwait
mov
cld
idivb
and
std
fs
mov
mov
cmp
sbb
in
add
out
cltd
repnz
inc
xor
sbb
ja
and
mov
sbb
and
mov
fcoms
adc
hlt
lcall
inc
fs
cwtl
in
mov
mov
mov
repz
xlat
mov
jecxz
cmpsl
and
push
sub
shll
sbb
jmp
jmp
lods
pop
adc
lea
in
fsubr
pop
and
cmpsb
sti
sahf
out
js
daa
sub
add
xchg
scas
or
fiadds
fidivrs
push
outsl
lret
pop
cltd
lret
dec
mov
sbb
lahf
push
cmp
sub
aas
out
sub
int
dec
sbb
push
and
stos
test
std
inc
inc
and
xchg
cmp
std
xor
xlat
inc
or
add
cwtl
stos
xchg
loope
lods
in
xchg
sahf
test
mov
fwait
mov
xchg
cmp
lds
xchg
inc
adc
mov
xchg
fisttpl
adc
ret
xchg
ljmp
xchg
ret
loop
daa
or
jmp
pop
test
imul
mov
xchg
es
call
icebp
and
stos
repnz
ret
mov
and
hlt
test
push
add
notb
lret
jmp
sbb
sub
repnz
fwait
out
sti
xchg
sbb
cli
mov
sahf
insl
mov
pop
fwait
ja
adc
or
imul
iret
sub
pop
cmp
adc
daa
mov
add
sbb
pop
sbb
sbb
imul
pop
pop
clc
scas
into
loop
shl
cld
gs
dec
daa
cltd
push
mov
stos
inc
sub
daa
sbb
lea
jne
sub
iret
cmpsb
popf
jle
cmpsl
inc
addr16
xchg
lret
inc
in
stos
and
add
sbb
jl
stos
sbb
movsl
pop
imul
push
pop
sbb
xchg
mov
les
test
mov
and
and
jmp
mov
push
sahf
mov
ss
add
xchg
insl
pop
jp
lock
add
mov
adc
and
jb
and
inc
ret
xor
inc
push
adc
mov
dec
fistl
pop
fimull
jmp
ja
loop
or
push
xor
iretw
daa
dec
int
cmpsb
cwtl
adc
movsl
loopne
mov
xchg
and
cld
stos
adc
add
outsb
outsl
mov
sar
sbb
mov
insb
jb
sub
addr16
xor
into
pop
or
pop
in
pop
out
sub
fdiv
mov
lock
add
and
jnp
jmp
insl
push
cmc
outsb
jb
sbb
iret
jp
dec
or
test
lret
lcall
pop
imul
and
pop
ret
mov
mov
adc
xchg
lods
sbb
mov
jns
sub
shlb
sub
pop
push
push
xor
das
daa
mov
dec
and
sub
popf
sub
in
aam
imul
popa
mov
or
lcall
loop
arpl
jb
pop
or
jmp
out
pop
dec
sbb
jecxz
repnz
and
sub
xor
add
jecxz
sub
sub
les
mov
jno
mov
loopne
push
les
and
test
mov
mov
xchg
shlb
scas
fs
icebp
js
in
stos
outsl
ljmp
sbb
loop
shlb
mov
pop
jnp
test
push
xchg
jecxz
outsl
sub
lea
xor
fildl
inc
inc
aam
inc
and
add
hlt
inc
lea
aam
sbb
mov
xchg
jl
and
dec
sub
leave
sbb
push
gs
insb
mov
push
ljmp
rcrl
sub
ljmp
push
mov
es
lock
add
dec
hlt
into
test
mov
push
add
jns
shr
stos
insb
add
jb
subl
dec
hlt
push
fwait
je
cltd
xchg
out
gs
xchg
mov
cwtl
je
pop
push
jmp
test
push
adc
inc
arpl
jnp
pop
addr16
cmp
dec
mov
xchg
hlt
out
xchg
fwait
dec
scas
test
and
sbbl
loop
sbb
stos
lret
imul
imul
shrb
cmpl
leave
sarl
pop
mov
repz
pop
sub
int3
cmp
mov
repz
push
jmp
xor
xor
xchg
xchg
xchg
call
lds
jl
pushf
test
test
add
imul
arpl
sub
pop
sub
jnp
rolb
out
mov
js
fs
xchg
or
fs
in
mov
popf
jo
pop
cmp
xchg
movsb
xlat
and
jl
testl
sbb
js
push
call
or
stos
cmp
fildl
sub
aaa
sbb
mov
and
xchg
cmp
lea
ret
popl
insb
loop
imul
arpl
cltd
daa
rclb
or
dec
sbb
inc
sub
fs
insb
loopne
test
ds
repnz
xchg
testb
test
stos
call
in
xchg
out
cmp
and
iret
or
mov
fbstp
jecxz
or
bound
lret
lcall
sub
sbb
cmpsl
out
cmpsb
into
stos
imul
ficompl
das
cmp
xor
xor
or
mov
stos
in
push
arpl
bnd
mov
adc
daa
and
fldt
lret
xor
movaps
mov
or
int
push
sbb
mov
test
mov
xor
xchg
pushf
je
xchg
inc
and
dec
xchg
jecxz
int
mov
enter
fsubrl
out
and
in
pop
lret
or
mov
sub
js
xchg
jmp
popa
cmpsl
pop
cmp
dec
mov
arpl
in
sahf
shrl
cmpsl
test
inc
loop
sbb
int3
rolb
jbe
arpl
arpl
mov
push
dec
movsb
and
pop
cmp
or
mov
and
sub
ds
pop
daa
test
sarb
ret
fs
in
imul
call
insl
xor
outsl
rorb
imul
xlat
lods
ret
mov
sbb
out
cmpsl
sub
inc
mov
stos
movsb
sub
mov
adc
lock
mov
lcall
fisttpl
xchg
cli
xlat
in
add
fcomi
je
jle
popa
xchg
lods
into
mov
jns
cmp
in
adc
xchg
bnd
leave
movsl
pop
jecxz
cwtl
pop
or
ret
xlat
repnz
repz
fwait
addb
cli
loope
iret
pushf
adc
sub
sub
lods
je
xor
repnz
popa
fdivs
sub
push
sahf
mov
idivb
leave
mov
in
and
mov
push
insb
ror
push
fidivl
push
ret
aam
pop
xchg
call
scas
sub
fdivrl
jmp
ljmp
outsb
dec
or
cmp
ficoms
insl
xlat
or
aam
out
mov
pop
pop
call
add
inc
sub
push
push
push
fdivrs
daa
cld
push
push
inc
cmc
iret
xchg
mov
sbb
insb
fldenv
mov
test
js
sub
dec
pop
repnz
and
jmp
scas
loopne
add
clc
fwait
lock
add
or
scas
add
dec
mov
movsb
mov
mov
mov
inc
push
sbb
ljmp
sub
add
outsb
loop
sbb
mov
lock
fs
pop
ror
out
and
js
in
lret
mov
in
aaa
das
jbe
mov
push
push
data16
mov
sub
sbb
pusha
clc
dec
jecxz
lret
push
loopne
jmp
xchg
js
cmp
lret
repnz
inc
or
sahf
loop
sub
je
std
inc
sbb
mov
mov
xchg
gs
and
test
call
ret
push
push
bound
sbb
and
jp
lret
repnz
and
push
push
test
cmpsl
lods
sbb
call
pop
loop
jge
add
adc
dec
es
in
mov
imul
mov
or
mov
in
jmp
mov
mov
aam
lret
rcrl
loop
adc
leave
lret
jmp
pop
push
mov
sahf
dec
xor
shlb
and
fcomps
or
or
call
jmp
jbe
xchg
fsub
popa
repnz
add
popf
mov
jns,pt
sbb
dec
addr16
fildll
cmpb
jne
sub
mov
dec
stos
fsubp
pop
ud0
jp
adc
xchg
loopne
mov
mov
sub
cmp
out
lcall
add
mov
mov
add
out
add
lret
sub
repnz
pop
in
sub
mov
and
inc
xchg
cwtl
and
pop
div
and
pop
sbb
sbb
xchg
pusha
sbb
pop
cmpsb
or
negl
sub
inc
pop
mul
pop
sub
negl
adc
mov
mov
clc
mov
addr16
nop
hlt
sub
cli
pop
pop
push
out
ljmp
sub
mov
and
pop
inc
int3
test
jae
push
push
inc
fidivrs
out
sub
xor
lret
cmpsl
icebp
test
and
sbb
les
scas
and
or
movsb
mull
lea
movsb
aam
xchg
sbb
push
mov
dec
mov
sub
sbb
xchg
sti
imul
imul
repnz
test
in
sub
sub
cmpsl
addr16
fbld
stos
out
adc
movsl
gs
and
add
or
sub
adc
jne
into
and
mov
imul
sub
test
push
and
das
and
dec
out
lahf
inc
je
jmp
inc
pop
add
xchg
out
daa
movsl
pop
insl
enter
push
repz
sbb
jae
stos
push
xchg
loopne
jl
adc
dec
imul
popf
repnz
stos
out
in
or
in
daa
sub
xor
les
mov
leave
ds
pop
test
into
pop
sbb
inc
adc
xchg
lret
in
imul
pop
fcoms
mov
jmp
js
cmpsb
rorl
xor
sbb
xchg
add
jp
mov
sbb
or
sbb
lea
test
pop
lods
imul
or
jmp
clc
mov
sub
pop
xorl
pop
or
testl
andl
loop
pop
sub
sub
test
sub
fisubl
fisubl
stc
dec
xchg
mov
js
jbe
adc
sub
call
mov
or
adc
jecxz
sbb
fwait
jae
icebp
push
xor
xchg
sub
or
xor
pop
sub
lret
sub
mov
or
hlt
or
testb
or
leave
dec
ja
and
out
and
out
adc
sub
inc
xchg
sub
repnz
dec
dec
push
and
sbb
test
test
dec
stos
ds
cwtl
pop
jp
adc
sub
clc
lret
jge
sbb
aas
dec
aam
cwtl
cmpsl
shl
adc
xchg
push
sbb
out
or
shl
xor
jl
je
repnz
fsubs
lret
scas
popa
add
mov
lret
jl
stc
sbb
addr16
in
mov
lret
cli
and
jb
sub
test
sub
fbld
jnp
fists
stos
leave
sub
insl
or
and
mov
out
xor
fidivrs
dec
rcrb
out
inc
imul
cmp
or
mov
iret
sbb
lock
movb
xchg
jecxz
arpl
movsl
mov
daa
or
mov
and
sbb
push
imul
and
test
cmp
fcoms
in
ljmp
jmp
adc
jmp
stos
aam
shrl
add
enter
dec
push
xor
repz
shll
cwtl
or
std
and
mull
sub
in
lock
sbb
repnz
xlat
cli
out
ret
push
sbb
cli
jmp
or
adc
std
cmp
loope
mov
lret
repnz
dec
int
push
arpl
inc
sbb
dec
jnp
test
call
pop
loop
sbb
pop
es
cwtl
xor
or
push
loopne
andb
jb
or
mov
xchg
loop
out
mull
pusha
and
ds
mov
pop
sbb
dec
ljmp
shlb
lahf
sub
inc
and
xchg
add
mov
in
popf
out
aas
std
push
push
lret
jbe
movsl
pop
data16
mov
cmpsb
loopne
cmpsb
xchg
push
sbb
cwtl
mov
cmc
jmp
popa
js
scas
add
jnp
std
rorl
dec
adc
cmp
incb
mov
ja
sub
or
fdiv
stc
or
xor
daa
sbb
fwait
ljmp
sbbb
mov
sbb
cwtl
sub
js
push
test
test
and
imul
dec
and
call
sub
adc
les
movsb
leave
jle
mov
pop
mov
iret
pusha
add
mov
cmpb
sbb
sbb
mov
lret
or
push
lret
pushf
mov
mov
lret
and
cmp
mov
adc
lods
jl
xlat
cmp
ss
shll
in
mov
loopne
mov
and
in
add
xchg
stos
pop
ret
js
sub
cmpsl
mov
xchg
clc
jecxz
and
scas
cwtl
pop
add
hlt
xchg
inc
aad
cld
arpl
mov
or
fs
out
out
mov
mov
test
and
call
or
ljmp
pusha
and
sbb
std
sub
aad
mull
sti
fld
jno
mov
dec
dec
sub
cmovs
repnz
enter
and
in
jmp
test
cmp
stos
and
repnz
push
sahf
or
mov
adc
push
xchg
cmpsl
stos
sbb
and
sbb
sub
sbb
enter
push
pop
stos
push
dec
out
xchg
sub
adc
add
cmpsl
fcoms
popa
mov
notb
popf
hlt
push
adc
cmp
or
dec
sub
or
and
fcoms
ljmp
push
adc
or
and
loopne
sub
or
cmp
lds
or
adc
les
mov
cmpsb
xchg
xlat
lock
add
pop
sub
adc
stos
sub
loopne
pop
or
jp
pop
les
loopne
les
mov
stos
or
jmp
imul
add
mov
cmpsl
add
or
data16
pop
mov
imul
sub
jae
shlb
sbb
leave
xchg
mov
adc
lret
xchg
cmp
jl
mov
movsb
daa
addl
stos
sub
stos
cwtl
sub
pop
and
es
cmp
fwait
sahf
scas
out
cmp
adc
or
mov
jo
in
cli
std
aam
movsb
dec
fwait
pop
xchg
cmp
jno
repz
mov
out
inc
push
jl
xchg
js
sub
adc
add
adc
sbb
in
jecxz
cmpsl
sub
daa
aam
xchg
push
sbb
push
fs
fsubl
and
fwait
and
dec
out
and
nop
dec
and
xchg
in
mov
popa
dec
ljmp
cwtl
stos
and
clc
mov
sub
stos
and
jno
cmp
jae
add
or
push
movb
mov
arpl
movsl
mov
cmp
fcmovne
stos
sbb
push
and
movsb
arpl
or
cltd
out
arpl
and
cmp
fiaddl
call
std
xchg
mov
xchg
dec
cmp
dec
js
daa
loopne
aad
ja
mov
add
cmpsb
call
push
ljmp
or
repz
jmp
cmpsl
sub
repz
dec
push
mov
push
das
lahf
mov
push
dec
lock
add
push
xchg
push
sbb
enter
pop
sbb
fs
fisubrl
mov
iret
stos
cld
aaa
es
cmp
cld
test
sbb
add
push
add
mov
pop
xlat
jg
insb
scas
xchg
sbb
or
ljmp
aad
movsb
test
push
notl
shlb
iret
int3
mov
sub
das
lock
add
test
enter
ja
lcall
adc
sub
inc
jle
lcall
xchg
sub
int
cmc
bound
incb
mov
orb
lret
sub
dec
sbb
sub
lret
cmpsb
hlt
or
les
out
lock
sub
mov
xchg
push
lock
pop
loop
sub
sub
subb
push
xchg
aad
cmpsl
sbb
es
addr16
incb
enter
hlt
call
and
sub
cld
jl
add
sahf
icebp
pop
mov
mov
iret
adc
lret
fmul
jmp
jp
ret
test
sub
add
jl
sub
or
inc
cld
rolb
inc
aam
or
imul
push
or
movsb
add
and
mov
sub
add
or
daa
sub
xchg
cli
dec
or
int
jnp
cmp
lret
std
cs
sub
jge
bnd
jo
sub
or
fs
adc
aam
sub
out
cltd
add
xchg
pusha
sub
fs
cwtl
fildll
mov
and
mov
fcoml
clc
std
jb
inc
daa
and
es
fildl
ljmp
inc
outsl
sti
sbb
jno
dec
pop
jp
xchg
sbb
stos
lock
and
iret
sub
mov
mov
shl
dec
jge
cmpsl
call
adcb
in
dec
nop
repnz
sbb
data16
push
jbe
and
ds
cmp
and
push
push
jecxz
mov
xor
and
addr16
or
ljmp
jmp
std
sahf
or
repnz
mov
daa
cmp
insl
loope
sbb
push
cmovg
lea
ljmp
std
int
lahf
into
aam
mov
repnz
loop
inc
cmpsb
dec
sbb
pop
push
clc
outsb
popf
mov
mov
iret
call
bound
cli
or
sbb
pushf
mov
scas
mov
sbb
mov
sahf
xlat
jmp
jmp
mov
test
pushf
fisubrl
xchg
push
dec
je
loopne
and
and
pushf
mov
lret
cltd
sbb
negl
unpcklps
nop
mov
sbb
push
fwait
sbb
push
scas
adc
or
sub
test
cs
rcrl
push
inc
sub
sub
bound
popa
xor
out
sbbb
imul
mov
jne
dec
mov
push
mov
test
jo
ficoms
test
cmp
jo
mov
movsb
sbb
pop
nop
clc
repnz
fists
stc
xchg
push
cmp
sub
pop
rcll
popf
lods
cmpsl
fisubrl
and
enter
test
sub
and
add
adc
pop
lds
sub
ss
xlat
fstpt
or
test
lcall
lock
sub
fsubrl
mov
imulb
addr16
sub
and
rclb
sbb
call
clc
adc
test
out
cld
sti
pop
lret
loopne
and
pop
mov
popa
sbb
xlat
pushf
lea
shlb
jne
lret
mull
test
jmp
fs
pop
sbb
mov
repz
mov
ret
jg
sub
jl
fs
mov
push
popa
adc
pop
aad
test
lods
pop
in
or
les
fisubs
jecxz
xor
push
repnz
jmp
xor
or
pop
not
rorl
test
repnz
sub
es
lret
xchg
or
jnp
and
mov
pop
bound
dec
aam
and
add
fsubr
sub
loope
and
pushf
jle
test
mov
mov
in
daa
stos
fimull
sub
mov
push
mov
mov
pop
pop
xchg
push
add
imul
sbb
push
xor
lds
icebp
push
call
xchg
ljmp
lret
dec
lea
movsb
pop
push
aam
psubw
xchg
inc
and
push
rcll
lds
or
jbe
xchg
jmp
inc
ljmp
push
or
adc
sarb
aaa
or
push
pop
xchg
xor
lcall
sub
cmp
fiaddl
lds
mov
mov
lret
aam
inc
sbb
pop
mov
fisubrl
out
sbb
movd
mov
xlat
dec
and
lcall
outsb
inc
mov
mov
jecxz
out
sub
sbb
sbb
push
push
mov
add
das
and
in
out
stos
sbb
push
mov
sub
or
or
pop
shrb
xor
jne
sub
mov
dec
cmpsl
jnp
and
lcall
sbb
xchg
notb
fisubl
cmp
lcall
mov
inc
push
xchg
xor
insb
inc
push
xor
cld
je
mov
jmp
and
inc
stc
popf
cli
cmpsb
and
movsb
sbb
sbb
sub
lret
lret
push
pushf
cmp
mov
mov
pushf
mov
bound
in
adc
pop
stc
push
aas
cmc
pushaw
lret
push
or
scas
add
push
out
imul
cmpsb
and
mov
mov
inc
leave
pop
push
sub
xchg
push
lcall
jge
call
xchg
inc
arpl
pop
hlt
push
out
xchg
daa
out
loopne
or
and
dec
sahf
repnz
lret
inc
sti
mov
fcomps
clc
in
adc
insl
test
in
mov
sub
pop
inc
std
mov
mull
and
inc
scas
xchg
out
dec
sub
dec
outsl
or
test
mov
nop
adc
jne
stos
cmp
xor
test
leave
xchg
gs
loopne
cmp
mov
cmp
mov
adc
bnd
sti
sahf
lea
jo
cli
push
xchg
cmp
fldt
aad
fcompl
imul
pop
push
mov
int3
mov
ror
ljmp
and
mov
xor
stos
cmpsb
mov
clc
in
bound
cmp
leave
push
call
xor
cmp
sub
loope
xchg
repnz
fisttpll
mov
lret
popa
stos
xor
lret
repnz
or
cli
add
lret
mov
mov
lea
insl
inc
fisttpl
xchg
bound
leave
push
dec
fistl
popl
mov
cli
cmpsl
mov
push
int
fs
xchg
push
repnz
sbb
cwtl
dec
iret
dec
pop
push
push
shlb
cmp
mov
sub
and
cli
xor
push
fnstcw
or
fwait
push
mov
imul
or
xchg
mov
sub
iret
imul
pusha
jbe
out
cld
in
and
inc
mov
sbb
out
outsl
xor
mov
repz
rcr
mov
nop
jg
sbb
lret
das
inc
int3
add
scas
rolb
push
out
insb
outsb
dec
mov
stos
sub
pusha
push
int3
push
pop
jbe
iret
mov
pop
cli
mov
mull
insl
mov
push
mov
call
je
xor
mov
sbb
xlat
bnd
movsb
or
sub
sbb
mov
xchg
sar
add
jb
mov
sub
lahf
loopne
cli
mov
bound
push
test
sbbb
lret
jl
mov
cmp
sub
jmp
pop
test
add
hlt
cli
hlt
mov
bound
xchg
xlat
sbb
or
stos
test
les
data16
out
add
pop
in
or
mov
pop
pop
mov
mov
jl
cmpsl
adc
or
fs
jae
push
sbb
ljmp
push
pop
adc
pop
stos
call
and
jle
pop
push
neg
mov
lret
sub
dec
push
mov
and
xor
push
adc
mov
sbb
push
fimuls
push
movsb
add
and
jnp
insl
pop
mov
dec
mov
lea
mov
jo
gs
sub
mov
xor
and
sub
ret
cmpsb
and
int
dec
int3
push
and
loopne
and
out
cwtl
sbb
dec
and
in
inc
aaa
ljmp
cld
inc
adc
aas
call
jbe
mov
pop
inc
push
or
sbb
adc
or
ja
call
sub
sbb
repnz
outsb
jle
xor
ds
popf
adc
lock
sbb
fucomi
repnz
lret
iret
mov
sbbb
cmp
cltd
insb
loopne
adc
dec
mov
scas
aas
inc
movsb
mov
in
mov
jge
and
clc
adc
jecxz
inc
bnd
ret
xchg
push
mov
mov
cmp
push
mov
inc
mov
daa
mov
and
or
xchg
sub
mov
pop
sbb
mov
ja
dec
sub
or
push
and
sub
sbb
in
lea
push
xchg
sbb
sub
mov
pop
je
jmp
mov
int3
xor
mov
or
jmp
psrlq
lds
push
push
push
in
cmpsl
sub
pop
mov
dec
dec
pop
mov
imul
mov
dec
mov
mov
stc
sub
jecxz
xor
xchg
sahf
push
cmp
mov
xchg
adc
mov
jno
in
and
adc
mov
inc
adc
inc
jl
movsb
fistpl
pusha
mov
xchg
imul
outsl
das
lds
sarl
jno
mov
mov
inc
out
iret
sbb
out
imul
repnz
lret
jecxz
mov
jecxz
push
sbb
test
sbb
repnz
add
jecxz
icebp
ror
call
aam
test
xchg
adc
sahf
repnz
stc
xor
rcrb
or
pop
or
movsb
push
in
dec
cwtl
shll
rcll
mov
pop
fs
sub
jecxz
arpl
out
mov
xor
sbb
rsqrtps
jecxz
sbb
fldenv
dec
sbb
aam
pop
push
push
pop
pop
sbb
adc
or
dec
cmp
mov
mov
inc
pop
or
mulb
and
fcmovnu
test
push
ret
ljmp
fcomps
mov
cld
push
stos
add
out
fdivrl
add
out
outsb
push
and
scas
sti
adc
mov
ljmp
mov
or
in
lcall
aam
cs
or
inc
dec
lcall
sub
or
inc
insb
push
cmpsl
pop
xor
stos
sub
pushf
cltd
sub
jecxz
or
push
in
test
and
in
lock
movsb
lds
lea
stos
stc
push
and
sub
jmp
jnp
sub
lret
or
mul
jne
sbb
rcll
mov
iret
push
inc
jecxz
sti
loopne
xchg
addr16
es
in
daa
dec
movsb
aas
lahf
adc
mov
and
push
nop
xor
and
sbb
dec
xor
dec
jno
mov
in
xchg
xchg
orl
outsl
aaa
xchg
in
dec
inc
add
sub
mov
dec
jo
jmp
movsb
inc
mov
sub
addr16
cld
popa
pop
testb
cmp
xor
fldt
fs
push
ja
mov
push
jmp
sub
imul
mov
or
bound
mov
fstps
loop
ret
mov
dec
xor
aaa
jp
fnstsw
sub
jb
push
out
por
fs
jns
jne
sub
rclb
pop
inc
rcrl
adc
xchg
insl
imul
jmp
push
cmp
shll
lret
adc
ljmp
sub
addr16
and
xchg
push
cwtl
fstpt
std
cmp
vsubps
fimuls
iret
xor
shlb
loopne
or
xchg
add
in
sub
push
and
mov
testl
call
test
sub
lods
push
or
inc
mov
sub
mov
lahf
mov
push
push
ret
xor
cwtl
mov
imul
icebp
dec
stos
jne
push
test
sbb
mov
cmpsl
sub
or
leave
lods
xchg
add
popf
xor
icebp
add
jmp
imul
xchg
sub
imul
mov
xchg
mov
push
xor
cmp
hlt
in
pop
lods
sub
inc
imul
jns
and
leave
adc
arpl
push
rclb
and
cltd
jns
div
sbb
pmullw
callw
lcall
mov
jae
sbb
and
add
xor
mov
xchg
je
cli
jbe
lcall
loopne
add
jae
js
and
push
xchg
add
or
fsub
jae
mov
jg
andl
ret
and
add
sahf
add
pushf
mov
bound
and
aam
fldt
lcall
cli
dec
push
xor
les
xchg
loop
push
push
cmp
and
push
cli
rcrl
insb
sahf
out
pop
lcall
cwtl
add
xchg
ljmp
loop
xchg
sub
loop
out
daa
jmp
or
packuswb
add
loopne
pop
mov
orb
pop
rclb
movsb
jl
jb
lcall
cmpsl
inc
fs
xor
test
movsb
pushf
lret
push
push
inc
mov
cmp
xchg
lcall
mov
add
push
fsub
cmp
adc
pop
push
mov
xchg
cmpsl
cmpsb
pop
repnz
mov
xchg
sbb
shl
pushf
jge
into
lcall
repnz
or
outsl
adc
clc
ss
repnz
pushf
out
mov
out
je
mov
mov
stos
mov
adc
test
lods
pop
push
or
jbe
in
in
repz
inc
push
arpl
dec
ficoml
jg
pop
rcrl
dec
outsb
push
sbb
aad
rol
cmp
or
push
iret
fcmove
sbb
xchg
sbb
mov
and
popa
aam
imul
fcomps
iret
pop
popf
flds
sbb
jge
or
aam
mov
fwait
adc
nopl
test
adc
jno
inc
mov
or
or
mov
xchg
pop
test
jecxz
fwait
adc
shl
shlb
lcall
daa
jo
ja
dec
insl
fcomps
pop
arpl
add
lock
or
or
xor
and
ss
pop
repnz
sbb
xchg
add
out
adcb
push
cltd
fcmovbe
xchg
rcll
sub
clc
add
sbb
mov
pop
mov
add
fsubrs
pop
dec
nop
les
jp
xlat
lods
js
pop
out
and
scas
xor
movl
dec
fcomp
push
xchg
mov
push
sbb
mov
in
push
mov
data16
dec
ret
sbb
lret
or
push
adc
ljmp
pop
xchg
fdivl
sbb
mov
imul
jne
lret
and
adc
cmp
ljmp
cld
xchg
pop
pop
scas
outsl
sub
push
aas
mov
adc
aas
sub
sub
scas
pop
mov
xchg
aas
test
mov
lret
sbb
xchg
sbb
and
xor
dec
xchg
and
xchg
dec
out
jmp
push
fiaddl
pop
jo
push
mov
push
pusha
sbb
test
sbb
mov
jnp
inc
xlat
and
jecxz
jle
push
dec
sbb
adc
repnz
mov
movsb
insl
push
insl
popa
les
popf
lods
cmp
imulb
cwtl
adc
push
fisubl
adc
cmp
and
cmp
inc
xchg
add
shrl
repnz
pop
mov
in
repnz
xorb
adc
jge
cmpsb
enter
mov
xchg
push
mov
fisubl
sbb
jno
aas
xchg
cmpsb
adc
push
mov
fwait
aam
and
into
ljmp
imul
xor
loop
sbb
es
es
mov
or
mov
sub
cmpsb
fcomp
out
testb
daa
vcvtss2si
les
lret
jnp
orl
lcall
and
pop
and
jl
aam
sbb
daa
push
subb
mov
repnz
insb
nop
repz
jno
gs
nop
pop
fdivrl
jp
cltd
add
xchg
pop
cmp
lods
push
sbb
sub
adc
daa
adc
and
repnz
mov
add
pop
or
jecxz
pop
jne
aam
pop
adc
cmpsl
adc
pop
lds
repnz
loop
cltd
add
jp
incl
out
insl
ret
fsubl
pusha
pop
xchg
arpl
xchg
mov
clc
mov
cs
cmp
sti
and
sub
add
test
inc
pushf
cld
sbb
je
cmp
pop
or
dec
mov
xchg
adc
dec
dec
pop
sub
mov
in
cmc
xchg
push
cmpsl
paddq
sub
push
jae
enter
fidivrs
cmp
xlat
dec
mov
sub
test
ja
sti
push
repnz
pushf
sbb
repnz
test
and
loop
in
dec
std
mov
ljmp
jb
cmp
mov
or
out
addr16
test
ljmp
lahf
fwait
stc
sub
xor
adc
int3
fiaddl
pop
lea
jb
dec
and
and
xchg
iret
out
jo
cmpsl
ficompl
nop
popa
rorb
pop
sub
xor
stos
sub
lods
repz
sbb
loop
cwtl
adc
mov
xor
pop
xor
adcb
xchg
ficompl
sbb
mov
mov
jb
or
xchg
cmpsl
jb
movsb
push
movsl
pop
pop
loopne
cmp
mov
and
aam
in
cltd
jno
sbb
mov
xchg
rorb
ljmp
pop
push
out
outsb
mov
mov
jnp
jp
pop
inc
mov
mov
mov
aaa
dec
xor
sub
rclb
cli
sbb
es
sbb
sub
sbb
out
jae
enter
popa
fistpl
or
movsb
repnz
lea
jge
xchg
call
cmpsb
or
adc
in
cmp
or
repnz
in
icebp
cmp
out
inc
xchg
stos
push
imul
push
inc
jp
jecxz
add
lock
add
sbb
push
cmp
xlat
das
cmpsl
pop
sub
mov
fstpl
sub
pop
sahf
clc
pop
fwait
pop
sbb
and
mov
mov
jmp
lods
cmp
pop
test
sub
jns
pushf
and
or
imulb
xchg
ret
js
call
cmp
mov
lods
ja
cmpsl
mov
je
sbb
mov
scas
xchg
loop
insb
mov
sbb
loope
aaa
fwait
aas
cmp
push
test
xor
sub
sbb
stos
sbb
ret
es
idivl
or
repnz
push
xor
dec
cli
dec
and
pop
fstp
pop
rcrb
ss
mov
das
cld
popa
xor
sbb
fdivl
ficoml
js
sub
mov
mov
or
jbe
clc
xchg
jno
imul
or
push
and
xchg
jb
sbb
xchg
bound
or
iret
add
loope
imul
andl
adc
xchg
sti
loop
sub
dec
sbb
adc
push
es
cmp
dec
xor
mov
add
ret
scas
jl
es
int
or
cwtl
iret
pop
int
sbb
mov
jl
aam
stos
icebp
push
outsl
inc
push
fsubrl
mov
mov
pop
sbb
pop
push
sub
and
stos
cmc
negl
sbb
in
jae
mov
fisubl
xchg
xor
or
cmp
add
add
fs
rolb
push
jnp
idivl
push
repnz
fs
sub
repnz
je
lret
xor
enter
push
int
push
movsb
ja
mov
into
jge
xor
and
jbe
adc
push
aam
mov
jo
sub
adc
xchg
repnz
loope
stc
xchg
lret
xchg
inc
mov
nop
and
add
pop
imul
fucom
test
dec
xchg
gs
pop
subl
fadds
ljmp
or
mov
push
je
ja
push
cmp
add
les
cmp
lcall
mov
sub
aad
jne
jnp
inc
sbb
or
and
mov
int3
sub
js
insb
cmp
and
mov
lret
xchg
arpl
ljmp
icebp
cs
sbb
insl
arpl
repz
adc
push
add
mov
sub
mov
inc
add
add
rcrl
insl
xchg
push
and
dec
or
or
adc
test
adc
adc
movsl
xchg
push
iret
pop
gs
push
cmp
pop
mov
or
mov
movsb
call
mov
and
aaa
pop
add
and
mov
push
je
test
mov
std
ret
or
mov
and
or
nop
hlt
push
out
cltd
xchg
subl
push
call
call
sbb
data16
sub
cmc
nop
xchg
cmpl
xchg
xchg
xchg
jge
mov
and
adc
xchg
cltd
cmp
je
mov
lea
sub
movsb
ficomps
mov
les
in
push
cmp
loop
xchg
sub
sub
lret
push
js
lret
cmp
mov
cli
inc
mulb
in
adc
push
movsb
mov
cmp
pop
es
xchg
loopne
xchg
cmc
pusha
pop
ljmp
or
pusha
push
in
cmpsl
xchg
lods
add
pop
sbb
push
add
xlat
cmp
push
and
loopne
sub
mov
or
or
je
and
dec
hlt
cmpsl
sub
out
out
ja
in
or
lret
cmpsl
call
dec
push
add
lret
jno
mov
repnz
lea
lahf
jne
fs
sub
lods
aad
aas
xchg
in
xor
int
fstpl
mov
or
add
push
and
mov
repz
imul
aaa
xchg
leave
sub
aaa
mov
movsb
or
cld
imul
push
push
and
push
lahf
push
loope
adc
sbb
ds
pusha
or
push
sbb
aam
fwait
test
fs
sbb
repnz
es
aam
test
mov
repnz
mov
inc
mov
mov
sbb
lea
add
xchg
loope
int
fisttpl
xor
sub
aas
rcrl
into
xor
daa
aam
adc
leave
emms
and
shrb
and
in
jmp
jge
xor
cs
mov
dec
leave
pop
jae
fstps
std
ss
leave
mov
iret
and
mov
mov
cwtl
xor
push
mov
rorl
stos
mov
jnp
pop
sub
mov
lret
jo
movsl
mov
mov
and
stos
push
movsb
xor
pop
push
pop
jo
xor
mov
sub
lahf
adc
add
sub
jecxz
mov
xchg
cmc
mov
cld
out
add
sub
or
sub
add
cmc
repz
cmp
imull
aam
xor
fsubp
mov
insl
xor
pushf
bound
rol
repnz
and
sahf
loop
or
push
fs
dec
add
fs
movsb
into
lods
add
push
mov
repz
xor
aad
xor
mov
xor
mov
and
add
clc
lea
sub
sbb
push
mov
xchg
xlat
inc
cmpl
ret
cwtl
mov
imul
add
mov
and
or
je
cmp
add
sub
das
cmp
lods
dec
loopne
inc
sbb
pusha
ljmp
test
or
push
jle
ret
enter
xor
lds
ret
pxor
loop
push
lret
es
jge
and
jno
scas
push
mov
xchg
lahf
ret
cmpl
fs
and
push
xor
ret
jmp
movsl
or
inc
lret
push
inc
pusha
inc
push
les
dec
das
daa
push
mov
pop
sub
lret
dec
test
rep
push
insb
fiaddl
jns
mov
bound
fcomps
sbb
stc
sbb
pop
cs
pushf
movsb
sbb
push
mov
bound
dec
pop
lock
lret
mov
mov
and
sbb
add
mov
xor
nop
and
mov
xor
pusha
mov
sbbb
dec
mov
stc
mov
lret
push
insl
jmp
shll
pop
push
or
inc
out
mov
daa
ret
dec
jecxz
fs
sub
and
loope
in
popf
sub
and
std
mov
push
sbb
cmpsl
ljmp
jmp
mov
scas
jg
sbb
sti
fs
fcmovbe
in
es
repnz
xor
arpl
inc
into
out
adc
test
repnz
ret
test
rclb
xchg
inc
adc
pop
repnz
xor
jecxz
fdivrs
mov
int
popl
test
push
js
sahf
xor
subb
inc
push
cmp
sbb
and
pop
mov
push
jge
jmp
std
adc
clc
pop
mov
inc
iret
daa
pop
add
arpl
rcll
or
lds
outsb
ja
repz
pop
mov
cld
lret
repnz
arpl
cmp
cmp
xchg
test
dec
out
or
daa
fiadds
sbb
jp
pop
nop
jge
sub
dec
arpl
insl
or
scas
fcomi
cli
xor
sbb
xorb
outsb
orb
lcall
repnz
ror
and
and
cltd
sbb
mov
imul
jle
fwait
and
mov
arpl
sbb
aam
repz
mov
adc
out
inc
xlat
movsl
mov
xchg
jge
cwtl
test
mov
movsb
jle
imul
jecxz
mov
hlt
inc
sub
sti
lret
loop
sub
sub
mov
repnz
dec
sbb
add
pop
jge
xor
mov
sub
sub
jae
loop
inc
mov
cli
inc
scas
and
arpl
pop
int
sbb
es
imul
sub
insl
popf
fs
lods
cmp
ret
cmpsb
cmc
fdivrs
push
call
dec
lret
sti
add
addl
ds
sub
out
xchg
loope
xchg
add
push
in
jl
xor
push
lock
mov
xchg
or
aam
imul
xor
jae
pop
or
lea
xor
mov
lods
repz
xchg
and
xchg
adc
and
mov
cltd
ret
pop
mov
mov
stos
xor
pop
out
insb
xchg
sbb
and
es
call
andb
jecxz
and
jmp
test
adc
inc
sub
cmp
sub
lret
xlat
scas
add
scas
inc
xchg
arpl
fsub
xchg
xchg
pop
xchg
xchg
or
stos
sub
pop
shlb
enter
dec
icebp
sub
loop
outsl
mov
pop
es
inc
cmp
sub
out
cli
sahf
dec
clc
sub
movb
das
dec
iret
sub
push
mov
or
fldt
mov
in
sub
inc
sbb
dec
mov
xchg
rcrl
push
fildll
rorl
gs
pusha
mov
xlat
mov
adc
fwait
mov
mov
xchg
mov
sub
push
testl
rolb
cld
sub
in
cmp
sub
mov
jecxz
ds
jo
or
scas
lea
pop
insb
js
repnz
in
cmp
ljmp
mov
aam
sub
add
ret
and
sub
push
push
test
push
testl
inc
xchg
es
popa
cmp
sub
and
mov
mov
mulb
and
out
sub
fisubrl
mov
dec
bound
fs
xchg
sbb
pop
lock
outsl
mov
imul
and
push
outsl
ljmp
push
lods
push
sbb
pop
mov
sub
inc
add
lcall
dec
andb
mov
sbb
ret
sbb
ja
mov
sbb
pop
daa
outsb
inc
or
sub
movb
scas
test
adc
mov
or
bound
lock
pop
sub
add
ljmp
mov
xlat
fs
ljmp
xchg
push
add
jmp
fwait
sub
in
call
arpl
mov
lods
cmpsl
add
xor
mov
mov
or
push
dec
cli
pop
jns
je
pop
inc
and
push
cs
jl
xor
or
sbb
adc
pop
sbb
std
loopne
hlt
pop
into
and
push
lret
stc
stos
adc
jne
cmp
lea
fistpl
in
add
push
inc
in
dec
pop
shll
push
mov
adc
lahf
adc
bound
jp
lret
sub
pop
jmp
push
aam
cli
jbe
loopne
inc
dec
xchg
mov
push
je
pop
add
mov
or
sbb
je
cmpsl
sub
iret
stos
pop
mov
xor
loopne
pop
mov
add
and
loopne
adc
xor
push
sbb
insl
adc
jp
push
fnstenv
mov
scas
shr
cmp
mov
dec
es
loope
mov
lds
sub
xor
ljmp
push
in
test
aas
push
add
scas
lret
outsl
push
popf
repnz
out
adc
cmc
mov
or
push
sbb
aaa
mov
jecxz
sbbl
cmc
dec
pop
lret
arpl
icebp
ret
outsb
mov
push
flds
hlt
jl
lods
fwait
adc
out
test
fs
out
fcomps
cmc
inc
jb
push
fs
fcoms
xor
sbb
negb
lods
jp
fs
mov
jne
sbb
outsl
inc
jns
adc
jo
mov
ret
scas
dec
adc
ret
fstl
sbb
mov
out
jmp
movsl
or
xchg
xchg
sub
pop
cmp
cwtl
inc
sub
add
jnp
into
jnp
inc
mov
rcr
mov
mov
xchg
push
iret
and
rcll
int
fcom
jb
add
push
dec
iret
lret
stos
jnp
lcall
sbb
cmp
cmpsl
daa
scas
inc
mov
clc
push
into
xor
pop
xchg
jno
push
clc
repnz
test
mov
fsts
and
mov
cmpsl
cltd
push
inc
cmc
popa
mov
jmp
xchg
cmp
pop
pop
sub
mov
fildl
cmp
push
sub
bound
cmpsb
cltd
lods
sub
rclb
mov
sbb
imul
imul
stos
iret
pop
cmp
or
test
outsb
adc
lret
add
jmp
dec
out
dec
xor
push
push
adc
cli
out
mov
outsb
sbb
lret
adc
push
in
js
add
arpl
subb
lret
inc
sub
rep
sub
sub
leave
aam
and
loopne
push
mov
lret
dec
out
mov
xchg
push
lds
js
sub
fiaddl
test
test
lret
mov
pop
jns
cmp
jb
xor
leave
leave
add
fldcw
mov
repnz
idivl
imul
xchg
repnz
lock
repnz
inc
jecxz
lret
sbb
pop
movsb
lods
int
testl
jae
nop
push
dec
ret
cli
bound
push
imul
pop
cmp
popa
mov
lcall
test
mov
cltd
out
mov
ret
aaa
es
push
add
in
pusha
push
imul
mov
push
sbb
sti
jbe
sti
movsl
clc
imul
xchg
stc
push
pop
mov
adcl
icebp
lcall
in
cmpsl
jmp
xchg
test
test
hlt
xchg
stos
mov
or
xchg
cwtl
out
sub
popa
nop
mov
popa
and
incl
push
clc
sbb
rcrl
clc
mov
jecxz
sub
mov
jecxz
hlt
adc
imul
sahf
mov
imul
and
sbb
loopne
arpl
adc
out
add
repnz
clc
mov
popf
scas
mov
adc
loop
mov
jp
push
mov
jb
nop
jns
outsl
out
adc
and
xchg
jo
cli
sti
pop
into
push
pop
jns
mov
icebp
stos
mov
mov
sub
cmpsl
sti
jp
cmp
lret
test
cmp
mov
xchg
mov
xchg
stos
loop
jmp
pop
inc
fldenv
test
enter
ljmp
xchg
xchg
repnz
xchg
xor
out
jmp
mov
je
push
cmp
aam
addr16
xchg
adc
and
imul
imul
aam
inc
push
add
xchg
dec
scas
mov
scas
testb
xchg
lods
test
push
jecxz
leave
sub
icebp
pop
mov
cmp
sub
data16
ret
push
ja
sub
test
popa
or
xchg
test
ja
push
or
rclb
test
ja
mov
sbb
das
sub
xchg
and
lods
and
push
pusha
testl
sub
or
lret
sub
cmp
inc
test
sbb
fmul
in
and
lret
cmc
daa
lock
pop
mov
mov
das
icebp
jae
xchg
fcoml
paddq
pop
xor
loope
and
pushf
adc
loopne
mov
xchg
loope
rcrl
or
outsl
push
in
imull
fnstcw
push
pop
xchg
sub
mov
and
inc
je
cmp
repnz
lret
sub
mov
fwait
sub
sbb
add
xchg
ljmp
xchg
pop
js
sbb
push
or
repnz
jmp
pop
js
cmp
adc
mov
and
and
sub
xor
daa
repnz
lock
adcl
adc
in
push
loopne
xlat
out
lret
fcmovu
push
and
imul
mov
das
sub
adc
mov
jbe
mov
adc
jp
push
xchg
shll
xor
or
add
nop
outsb
cmp
out
jo
fwait
test
or
jge
xchg
mov
or
repnz
inc
xlat
lea
jge
adc
pop
jnp
test
aad
outsb
dec
dec
xchg
mov
inc
in
push
sar
andl
jp
xchg
dec
or
push
ljmp
fimull
pop
xor
inc
inc
and
xchg
dec
out
push
jbe
arpl
jecxz
in
addb
and
lods
shrl
stc
adc
dec
lock
dec
cwtl
sub
pop
not
adc
and
push
cmpsl
subl
jp
ret
hlt
cmp
test
sti
jge
mov
or
push
jl
aad
push
jecxz
xchg
dec
pusha
nop
sbb
add
bnd
or
dec
cmp
jmp
mov
or
insl
mov
cmpsb
mov
jo
xchg
aas
ret
adc
cmp
js
mov
cltd
scas
sahf
cmp
inc
std
insb
inc
andl
lea
cmp
jne
orl
lods
mov
lea
aad
pop
mov
imul
lret
xchg
push
pop
rcl
insl
nop
add
cmpsl
jno
imul
ss
cld
movsb
push
lock
mov
cmp
cli
mov
aam
xchg
jp
sub
aad
pop
cltd
jge
add
xlat
jae
and
fdivp
dec
mov
and
subb
je
aam
test
lret
test
sub
out
leave
adc
xchg
in
xor
fimull
xchg
test
or
dec
and
mov
sahf
and
rclb
fisubl
and
cmpsl
push
notl
insl
xchg
mov
add
add
loop
movsl
mov
push
out
cmpsb
xchg
out
inc
push
pop
add
mov
or
jbe
adc
in
movsb
xor
adc
and
sbb
and
aaa
loope
data16
scas
loope
in
jae
mov
popa
cli
push
push
xchg
lret
jle
or
push
shlb
sbb
lock
pop
xchg
out
mov
xor
movsb
mov
xchg
sbb
das
mov
rolb
xor
aaa
inc
cli
xor
ret
push
mov
test
sbb
push
clc
mov
xchg
insl
add
sub
ds
pop
ret
call
adc
jg
xchg
and
lahf
jmp
fwait
sbb
mov
xchg
pop
fs
jmp
lcall
cltd
mov
daa
push
mov
js
lret
hlt
les
out
jmp
test
jno
popa
stos
fwait
push
cwtl
loopne
sub
scas
dec
movsb
mulb
popa
jo
daa
xlat
pop
sub
and
repnz
pop
sub
adc
add
out
cwtl
lret
adc
adc
xor
push
in
mov
xchg
cmp
sub
lcall
in
sub
inc
cmp
pop
es
ds
cld
or
into
in
xor
and
loope,pt
pop
xor
and
aam
or
mov
pusha
xchg
mov
pop
xor
mov
adc
adc
ret
jg
lahf
lret
out
sub
sub
sti
or
add
dec
cwtl
mov
cmpb
mov
call
loopne
les
xchg
mov
fildl
adc
add
pop
loope
fistl
js
xchg
out
sub
mov
iret
pop
or
sbb
mov
cmpsl
inc
popa
in
mov
push
push
jno
jl
out
and
jnp
xchg
dec
popa
dec
popa
jo
loopne
adc
shrl
repnz
ret
mov
repnz
outsl
adc
adc
sub
cmp
lea
adc
sbb
mov
mov
imul
and
pop
adc
aaa
in
and
adc
or
mov
or
or
fdivl
ficompl
loop
and
and
sbb
push
std
sub
adc
fdivrl
pop
fimull
inc
mov
in
shll
movsb
adc
xchg
jmp
daa
insl
orl
mov
data16
sbbl
mov
mov
outsl
int
pop
xchg
cmpsw
xchg
popl
inc
test
jg
pushf
dec
push
or
or
shr
xchg
push
sub
sbb
rcll
or
cmpb
lds
rcrl
out
je
scas
push
lods
add
js
popf
pop
inc
ficomps
jp
gs
fdivl
call
pop
and
mov
jne
lea
inc
in
pop
mov
fmull
cmp
sbb
push
clc
test
mov
nop
add
and
out
push
pop
cs
int
int3
inc
pop
mov
dec
leave
cmpsb
xlat
fwait
pop
pop
cmpsb
xchg
shrb
js
test
aad
inc
sbb
mov
popaw
xchg
mov
cli
or
pop
or
fldt
scas
or
mov
in
lods
pusha
and
push
pop
ja
outsl
lock
insb
lock
lahf
dec
inc
xor
add
add
lods
outsb
popf
and
dec
inc
inc
imul
add
lods
out
xlat
hlt
sbb
mov
repz
sub
dec
fwait
aaa
pop
or
popa
iret
push
ljmp
cltd
and
enter
je
pop
sbb
movsb
scas
cmpsb
push
fdivs
subl
cltd
jg
lret
call
xor
scas
aam
out
jecxz
loope
adc
fs
out
sub
jbe
mov
pushf
loope
add
add
lret
jmp
or
inc
push
inc
xchg
cli
scas
push
cwtl
dec
sbb
sbb
sbb
dec
lret
repnz
cmp
nop
inc
test
pop
jno
loop
daa
ret
cmp
pusha
and
sbb
pop
mov
cmp
out
fdivrs
sub
andl
or
imul
rclb
shr
subb
out
lods
aas
xchg
sarl
mov
mov
leave
aas
xchg
sahf
iret
or
dec
loop
sub
cwtl
ret
test
sbb
sbb
fcoml
xor
mov
scas
mov
inc
sti
es
sbb
gs
cmpsb
jecxz
xchg
jo
test
lcall
sub
adc
in
push
loopne
bound
pop
jg
sbb
sub
pusha
arpl
pop
daa
enter
test
bound
iret
pop
inc
mov
in
cltd
mov
out
fcomps
iret
int3
adc
lcall
lcall
nop
movsl
lds
mov
sbb
fs
or
movsb
lods
push
aas
rcll
cld
sbb
fidivrl
les
cmpsb
or
cmp
inc
adcl
shl
fimull
and
movsl
sbb
mov
mov
pop
adc
mov
mov
icebp
fdivrl
jl
mov
sahf
int
ljmp
imul
and
mov
dec
idivb
sub
push
dec
jnp
aaa
dec
xchg
popa
test
xor
lahf
dec
fwait
ret
pop
daa
xchg
nop
das
aam
lret
movsb
sbb
sbbl
adc
xchg
out
fwait
arpl
push
inc
dec
movsl
mov
sbb
jmp
mov
cmp
sbb
mov
sbb
test
enter
bound
adc
dec
jp
sbb
add
popf
dec
lods
sub
lret
sub
fisttpll
repnz
xchg
mov
push
and
out
sub
inc
outsb
cld
xchg
mov
sbb
jne
out
adc
out
lret
mov
add
pop
mov
ret
mov
test
scas
dec
and
add
adc
add
jbe
mov
int3
je
popa
push
jle
jne
xchg
icebp
sbb
test
stc
in
loope
inc
add
or
sbb
bound
sbbl
rorb
sarl
orb
ret
inc
dec
adc
xchg
daa
adc
cmp
scas
add
lods
sub
and
shrb
push
mov
adc
inc
pop
test
and
mov
and
adc
jle
push
mov
push
push
int
fstpt
mov
mov
cltd
hlt
ficoml
push
sbb
mov
aas
jmp
daa
sub
js
xchg
pop
rcr
jecxz
aam
dec
inc
jle
scas
repnz
jmp
sbb
push
ret
in
lods
repnz
mov
adc
mov
xchg
leave
mov
push
push
mov
xor
iret
out
mul
mov
inc
movsb
adc
xor
int3
adc
lret
js
sub
adc
push
inc
ja
pop
cmp
and
inc
pusha
std
add
inc
out
in
add
inc
sub
hlt
and
movsb
push
dec
sub
jo
pusha
test
movsb
sub
sub
push
xor
adc
lret
into
lods
loop
add
cmp
mov
daa
and
shlb
mov
andb
push
test
ds
inc
stc
mov
fs
and
test
pop
sub
jb
pushf
es
in
jge
and
and
or
cmp
movsb
aam
in
jb
add
cmp
dec
test
dec
adc
test
and
loope
negb
cmpsb
fs
jo
jecxz
mov
or
sub
xor
loop
jae
cmpsl
or
adc
xchg
and
stc
cltd
inc
fistpl
into
movsl
mov
repnz
mov
sbb
jg
rol
sahf
aas
jl
mov
lcall
push
test
sub
xchg
dec
dec
inc
fistpl
scas
pop
insb
push
xchg
sbb
jle
int3
jo
push
idivb
adc
mov
test
clc
dec
lds
sbb
and
in
stos
xchg
loopne
bnd
pusha
sbb
sub
cli
sub
cmp
mov
dec
sub
es
andb
sbb
in
mov
and
sub
jecxz
imul
lods
lcall
cmp
sbb
std
in
and
lahf
pop
mov
and
sbb
or
outsl
cli
cwtl
jp
and
and
inc
test
sbb
arpl
insl
sbb
mov
sub
sbb
loopne
sub
loopne
sub
loopne
sub
loopne
out
shr
mov
shrb
movsb
imul
stos
jo
and
jmp
cmp
adc
fs
enter
mov
or
mov
repnz
imul
jg
test
or
cmpl
sub
sbb
add
orb
shll
pop
dec
and
cmc
cltd
imull
xlat
mov
into
out
test
add
xchg
sbb
add
cltd
jo
and
mov
test
test
add
andl
js
das
push
sti
cltd
outsl
mov
cli
repnz
mov
push
fistl
ss
loopne
pop
stc
cld
sbb
jge
lahf
jmp
and
cmpsl
fs
pushf
out
mov
dec
imul
ret
or
xor
js
iret
jne
mov
stc
sbb
enter
fwait
inc
lcall
popa
jae
pushf
push
das
pop
push
jnp
jno
jno
mov
adc
cs
xor
push
xchg
je
mov
sub
enter
cmpsl
mov
loop
std
iret
sub
xchg
lock
add
dec
add
lret
mov
std
sub
rcrl
pop
add
xor
and
loope,pt
popa
loopne
xlat
push
mov
push
or
sti
push
nop
sbb
jnp
std
jecxz
pop
mov
daa
cmp
xor
xchg
dec
sti
aam
add
xor
add
jl
fcompl
pop
outsl
mov
stos
rorl
push
cmp
sub
popa
and
sbb
xlat
add
cmpsl
sbb
pop
mov
fsubrs
in
xchg
sub
inc
and
add
push
lret
sub
ficompl
and
mov
test
test
and
dec
dec
push
sbb
cltd
and
test
lcall
inc
pop
pop
add
xchg
js
cld
daa
cmp
mov
arpl
lods
adc
add
in
add
cmp
popa
test
jecxz
push
adc
out
popa
call
scas
sub
and
daa
pop
outsl
inc
push
arpl
icebp
shrb
popf
push
cwtl
hlt
loopne
and
std
dec
inc
mov
push
push
sarb
jbe
xchg
loop
sub
out
pop
pop
in
enter
xor
add
sub
stos
lea
pop
sbb
sbb
and
das
and
push
repnz
addr16
inc
mov
cmp
dec
out
mov
mov
ljmp
mov
daa
and
mov
orl
arpl
add
fwait
sbb
and
lret
enter
and
inc
imul
push
test
clc
cli
pop
sub
adc
or
push
loope
xchg
insl
xchg
mov
lcall
xlat
pusha
stos
dec
mov
and
xchg
imul
or
jmp
lcall
inc
sbb
mov
jb
adc
sbb
loop
sbb
test
movsb
outsl
inc
pop
ficompl
fldenv
add
or
sbb
add
aam
lret
pop
repnz
ret
enter
sbb
lods
mov
pop
xchg
xor
mov
repnz
pop
fimull
popf
lcall
rcrl
xchg
mov
inc
daa
adc
sub
test
out
push
inc
adc
xor
popf
ljmp
mov
insl
inc
cmpsb
push
call
cmpsb
sub
mov
sbb
addr16
sub
fxch
cmp
and
jmp
sbb
cwtl
arpl
pop
rcll
sbb
pop
clc
jle
cld
or
adc
pop
sbb
adc
adc
mov
add
fs
out
xchg
int
adc
movsb
gs
adc
jbe
movsb
fs
daa
arpl
sub
arpl
mov
adc
arpl
inc
addr16
jle
mov
push
fsubrs
and
sbb
inc
or
jmp
lcall
icebp
sub
ret
xor
cwtl
sbb
rolb
addr16
cmp
add
inc
mull
and
bound
scas
cmpsl
mov
cli
or
push
lret
lcall
xchg
in
daa
push
or
sbb
or
and
cld
iret
sub
sbb
daa
sbb
std
sub
imul
mov
ljmp
into
xor
lods
adc
sbb
fwait
out
pop
iret
cmpsl
orb
jle
ja
fsubl
aad
or
lds
and
lods
xchg
gs
jle
push
fidivrl
scas
mov
sub
push
xlat
add
push
pop
dec
push
inc
add
adc
xchg
jmp
cwtl
lret
jle
out
dec
jae
nopl
sbb
sub
bnd
outsl
fnsave
fistpl
add
mov
add
mov
jecxz
orl
pop
sti
sub
icebp
sub
push
lea
in
scas
iret
lcall
sbb
and
jle
insl
push
sbb
fwait
mov
hlt
cmp
xchg
cwtl
pushf
sub
or
movsl
pop
mov
scas
jns
dec
jae
enter
pop
aas
adc
dec
add
sbbb
mov
std
aaa
jecxz
xor
es
dec
sbb
in
and
and
pop
and
ja
cmp
insl
seto
movsb
cmp
and
lret
int
stos
cwtl
call
or
cmpsl
sub
mov
test
and
push
jbe
popf
out
leave
leave
and
aam
sbb
mov
dec
adc
lcall
stc
cmp
out
aaa
inc
outsl
jnp
push
popa
inc
mov
mov
bound
or
push
mov
bound
fcomp
sbb
or
push
repnz
and
sahf
jl
iret
and
stos
adc
xor
pushf
push
fisubs
push
fisubrl
ss
mov
pavgb
loopne,pn
bound
scas
sbb
inc
jl
roll
mov
inc
bound
inc
mov
cmp
lcall
pop
push
out
or
repnz
dec
mov
adc
ljmp
es
in
xchg
ret
mov
and
test
sbb
fbstp
push
xchg
sahf
inc
movsb
xchg
jmp
sub
je
bound
xchg
jmp
xchg
dec
cs
aam
leave
cltd
sbb
cmpsb
push
pop
push
enter
mov
das
mov
adc
mov
inc
mov
pop
adc
in
cli
data16
mov
pop
pop
mov
push
jno
jmp
repnz
scas
sub
sub
out
jno
jns
hlt
xchg
xchg
aam
sbb
mov
or
stos
jns
fld
popf
and
movsl
repnz
mov
and
or
imul
dec
scas
sbb
int
mov
mov
inc
jne
repnz
sti
push
sbb
std
subb
xchg
push
test
cmp
cmpsl
pop
sbb
pop
daa
xchg
addl
mov
mov
and
xchg
ja
xchg
push
xchg
mov
sbb
sub
jns
push
cs
pop
ljmp
imul
sbb
pop
mov
clc
pop
xor
cmpsl
lret
popf
rolb
lret
and
fs
arpl
sub
or
repnz
xlat
fisubrs
inc
movsb
loopne
jp
mov
mov
fwait
test
in
addr16
jnp
add
mov
sbb
lcall
cmp
sub
adc
or
add
loopne
xchg
mov
loopne
cmpsl
cli
and
dec
pop
sub
popf
jle
xchg
cwtl
in
jne
in
or
sbb
inc
je
fiaddl
movsb
cltd
jae
cltd
ds
daa
bound
cmp
daa
jbe
mov
push
mov
clc
daa
dec
adcl
xchg
push
cmpsl
jae
std
jl
pop
add
mov
inc
idivl
cltd
sbb
inc
dec
mov
inc
sub
jmp
inc
add
adc
jge
or
inc
cli
or
push
push
inc
xchg
lret
xchg
add
mov
aas
out
loope
scas
fisubrl
frstor
xchg
cwtl
je
test
in
xor
int3
push
push
sbb
stc
mov
cmp
and
mov
test
cmc
fidivl
loope
sub
mov
sbb
fwait
jmp
imul
push
sbb
repnz
cmp
xor
sbb
push
into
and
int
inc
popa
mov
mov
cwtl
inc
cmpsl
test
cmc
fidivrs
mov
push
out
adc
fists
jb
xor
adc
pop
xor
ljmp
inc
inc
and
loopne
fs
and
xchg
je
fstps
jmp
lret
into
inc
jl
outsl
cltd
sub
push
aaa
lods
sbb
xor
jp
leave
xchg
testb
sbb
cld
fmul
and
leave
lahf
push
pop
mov
aas
or
or
aas
sbb
test
sbb
or
hlt
fs
cmp
sbb
sbb
movsb
mov
inc
stos
xor
and
insl
jp
mov
rorl
pusha
mov
daa
dec
popf
sahf
cmpsl
ds
sub
sub
adc
arpl
cmp
lock
icebp
lods
or
leave
dec
call
xchg
mov
sbb
loop
loop
and
dec
cs
in
movsb
cwtl
test
and
aam
push
testb
push
filds
pop
pusha
sbb
sbb
push
into
mov
mov
aas
xor
push
and
pop
sti
in
mov
es
pop
outsb
loopne
sub
sahf
sub
mov
mov
cld
jecxz
packuswb
jp
pop
cwtl
ljmp
loope
add
inc
jge
int
lret
stc
scas
out
addr16
fldt
adc
andl
cmp
not
popa
dec
cld
sbb
inc
clc
push
loope
xchg
jo
lods
or
push
mov
insb
rclb
outsl
jle
push
sub
jmp
mov
add
sbb
jbe
push
fdiv
pop
popa
pop
cmc
arpl
mov
aam
cmpsb
sub
repz
xor
push
arpl
mov
outsb
popa
fisubrs
es
or
and
mov
and
repnz
out
ret
mov
daa
mov
shl
or
jae
fcomp
lods
das
mov
adc
and
and
lods
cli
pop
jno
hlt
fbstp
jge
test
cltd
icebp
outsl
dec
shrb
mov
xchg
sub
inc
cmpsl
mov
xlat
fimuls
sub
cwtl
lcall
fstpl
mov
das
jns
loope
out
sub
fs
lret
and
dec
dec
adc
scas
test
out
int
sub
popf
inc
mov
imul
dec
xchg
add
and
adc
fwait
bound
andb
push
out
and
std
rol
ljmp
mov
stc
mov
and
sbb
test
imul
fstps
cwtl
mov
pushf
rorl
and
gs
jp
or
sub
arpl
dec
cmpsb
cmp
sti
loope
mov
cli
ljmp
mov
les
cmovnp
test
or
sub
xchg
jecxz
jecxz
mov
mov
dec
sub
loopne
sbb
pushf
jne
lds
cmpsl
pop
adc
add
call
cmp
push
repnz
cmp
jmp
lahf
and
jge
nop
cmp
fs
mov
xchg
leave
push
and
mov
stc
movsb
or
pusha
insb
lret
fstl
push
adc
mov
arpl
pop
push
aas
fcoml
cmp
inc
dec
xlat
pop
jnp
cli
addr16
sub
rcrb
push
fcoml
add
or
sub
xlat
cmp
xchg
xchg
xor
gs
adc
stc
mov
pop
cwtl
push
xlat
jnp
mov
add
and
ret
lcall
movl
jp
and
loope
jnp
aas
mov
pop
sub
push
movsb
pop
ret
xchg
int
out
adc
adc
bswap
and
xor
out
or
mov
jecxz
mov
in
mov
lods
sub
jmp
add
in
pop
adc
imul
loop
dec
add
dec
mov
cmp
xlat
push
and
add
push
lds
or
mov
mov
pop
fisubrl
mov
aam
nop
jl
insb
cmp
xchg
cmpsb
stc
dec
cli
call
loop
andb
inc
mov
or
in
aam
xchg
add
std
sahf
loopne
inc
int3
daa
and
sbb
inc
inc
sub
clc
sub
fstpl
imul
insl
inc
insl
adc
shrl
fimull
mov
jmp
push
shll
ljmp
jmp
js
jl
jmp
xchg
sub
aam
fwait
rcrb
add
scas
leave
push
repz
xchg
push
mov
push
lea
sub
inc
adc
rorl
mov
mov
inc
pop
mov
addr16
xor
xchg
inc
adc
fs
sbb
imul
and
cmc
or
push
enter
outsl
enter
jae,pn
xchg
sub
and
and
test
lds
mov
pop
jp
xchg
lds
mov
fmuls
in
ficompl
pop
sub
mov
push
and
sbb
sbb
scas
popa
je
outsb
shr
sbb
jmp
cmp
xchg
sbb
adc
xlat
imul
fmuls
and
bound
stc
stos
pop
jl
xchg
or
sub
insl
jmp
std
xor
sub
xchg
test
or
mov
or
dec
jge
jnp
jbe
add
sbb
jb
or
test
rcrl
mov
lcall
xor
mulb
lret
mov
sbb
cltd
jb
push
and
mov
std
jmp
dec
lods
xchg
sbb
xchg
jge
pop
sub
inc
jbe
push
lock
fdivs
js
ret
sub
test
shrb
jae
rclb
xor
or
aam
lcall
sbb
pop
daa
arpl
movsb
and
cwtl
mov
pop
jecxz
and
lea
jo
fimull
cmpsl
in
jg
sti
ljmp
sub
dec
ljmp
insb
pop
iret
jnp
push
in
cmc
fwait
mov
pop
mov
int
pop
test
and
loopne
push
int3
sub
mov
cmpsl
mov
bound
sub
loope
cmpsb
insl
cmp
ficoml
ficomps
aam
pop
fcoms
jb
and
add
inc
test
or
sub
xchg
push
aam
fwait
sbb
mov
pop
mov
add
ljmp
int
lock
cltd
loopne
push
cld
add
push
xor
mov
mov
ljmp
das
sbb
repnz
pusha
aad
clc
sub
sbb
mov
mov
mov
cmpsb
movsl
or
xchg
testl
add
push
test
push
or
fnstcw
dec
test
enter
fs
fisubrl
xor
cwtl
shr
lret
xchg
in
arpl
movsb
stos
imul
sbb
sti
push
repnz
cmpsl
lds
or
mov
xchg
std
scas
sub
fs
xor
sti
clc
je
cmp
pop
subb
xlat
or
sub
xchg
jg
fisubrl
ds
lcall
xchg
lret
sbb
vpmaxub
in
jmp
jno
popf
add
or
bnd
lahf
rol
nop
loopne
mov
jnp
shlb
imul
sti
in
mov
mov
out
fldl
cmp
clc
clc
or
xchg
push
lock
aaa
ret
sub
jecxz
mov
movsl
out
push
aas
rclb
daa
mov
push
xorb
mov
xchg
test
xchg
mov
popa
jge
or
jns
scas
popa
cmp
insb
add
repz
aas
mov
and
arpl
mov
add
ja
pop
cli
jb
or
or
test
cmp
repnz
repnz
sub
adc
and
test
int3
sub
jbe
mov
mov
out
add
scas
imul
push
jecxz
mov
sub
aam
adc
repnz
dec
out
fabs
iret
lock
xchg
mov
or
ljmp
jo
jo
xchg
sbb
jmp
outsl
sub
push
shll
mov
add
lea
cmp
mov
xchg
jl
and
and
mov
push
es
xchg
push
dec
xor
adc
fidivrs
popf
inc
int
je
int3
ds
lret
mov
jnp
sbb
outsb
rcrl
outsb
push
or
cli
push
iret
cltd
filds
shll
fwait
add
in
mov
sbb
ds
clc
inc
xor
pop
shr
aad
xchg
xor
xor
push
pop
cs
imul
jmp
fsubl
sbb
pop
pusha
loopne
gs
shlb
test
add
mov
push
std
test
xor
test
ret
outsb
loop
mov
test
sub
ret
cwtl
pop
ja
mov
xchg
repnz
addl
add
test
mov
add
pop
inc
dec
std
sar
testb
push
and
cmp
frstor
aad
testl
push
outsl
mov
popa
xrelease
movsb
data16
scas
mov
cmpl
pop
mov
stos
inc
lret
mov
sbb
jge
lock
jle
scas
jns
sub
iret
or
negl
fs
into
orb
loopne
dec
or
mov
add
loop
push
lret
jl
andb
or
or
out
jns
jge
cltd
mov
mov
mov
add
pop
movsb
cmp
and
daa
imul
fnstenv
icebp
call
nop
jnp
inc
fimull
or
ljmp
cltd
stos
mov
lcall
push
or
jl
mov
jecxz
fstpt
dec
mov
fdivrp
xor
jb
mov
aaa
ljmp
push
xor
pusha
xchg
aaa
mov
lahf
test
jmp
pop
out
cmp
and
pop
sub
movsl
xor
iret
adc
fdivrp
fldt
bound
cld
pop
fistpl
sbb
adc
and
adc
pop
div
stos
aaa
int3
lret
test
fwait
sti
and
sbb
insb
lods
aas
adc
roll
xor
ficompl
push
aad
movsb
mov
out
repnz
pop
ret
cltd
add
adc
xchg
lds
pop
lret
add
mov
test
outsb
pop
fmull
and
pop
push
mov
and
cmp
and
sbb
cltd
sbb
in
in
mov
adc
or
mov
popf
hlt
test
add
fwait
xor
add
js
cmpsb
sarb
push
pushf
xchg
push
and
push
cmp
and
lds
icebp
js
test
lcall
or
xchg
stos
leave
loop
or
jae
sbb
fcmovnu
mov
lcall
jecxz
aas
mov
lds
mov
pop
mov
loopne
popa
loopne
dec
cmpsl
mov
out
insb
sub
je
cmp
or
fucomi
movsb
and
fisubl
jnp
popl
xchg
rorl
cmpsb
pop
push
cmpsl
out
or
mov
dec
sti
sti
pusha
in
aam
decb
aaa
popa
scas
aam
inc
xor
cs
inc
pop
ds
clc
popa
jl
enter
sub
fisttpl
bound
cmp
ja
jo
mov
and
push
arpl
xlat
mov
shrb
push
mov
imul
add
or
and
pusha
std
dec
imul
mov
jo
sbb
cmp
cld
lcall
out
mov
and
dec
mov
sub
lret
out
or
mov
pop
arpl
mov
stos
aam
sbb
jmp
dec
jmp
clc
inc
sub
stc
shlb
pushf
add
mov
lret
je
ss
bound
es
xlat
lea
inc
cwtl
bound
out
xlat
jo
outsl
cmp
int
mov
push
push
push
push
jbe
aam
pop
shlb
dec
hlt
fldcw
inc
test
cmp
enter
mov
pop
mov
mov
add
push
pop
in
sti
out
in
sub
addr16
lea
mov
pop
sub
or
add
ret
sbb
pushf
subl
lret
mov
lret
outsl
push
xchg
addr16
repnz
sbb
inc
lock
sbb
sbb
sub
sar
bound
jns
popa
inc
and
mov
mov
and
or
jno
lods
test
iret
cmpsb
sub
fmuls
xor
bnd
fldenv
jg
bound
mov
xor
mov
xchg
jnp
in
lods
leave
nop
fwait
rorl
test
fcoml
adc
jmp
add
and
outsl
aaa
mov
mov
clc
and
out
nop
pop
fiaddl
testl
testb
sub
pop
cld
inc
push
or
popf
jmp
cltd
push
mov
ja
sub
or
sti
fldl
jb
adc
fisubrs
pusha
xchg
iret
scas
cmpsl
and
cwtl
mov
cmpsb
cmpl
test
inc
jb
out
pushf
adc
cmp
jmp
bound
sahf
mov
js
jle
out
ljmp
stos
cmp
bound
cmp
or
adc
adc
orb
addr16
aad
add
imul
idivb
clc
ds
or
pop
ss
arpl
out
push
fs
sub
inc
or
ret
popa
xor
shrb
or
cs
cltd
sub
and
adc
mov
xchg
bound
push
xchg
or
das
fcmovnb
insl
fnstcw
xchg
pop
sub
iret
push
adc
dec
popa
inc
js
lods
mov
or
inc
cli
daa
sbb
and
repnz
ljmp
xor
inc
loopne
hlt
test
xchg
enter
mov
cld
inc
cli
arpl
mov
test
lods
cwtl
pop
insl
ljmp
sub
xor
out
push
push
jo
mov
jp
cs
adc
ja
jb
sbb
cli
push
stos
xlat
dec
mov
jnp
ljmp
cmc
das
out
lea
cmp
mov
mov
or
stos
or
pop
sbb
imul
add
call
jno
sbbl
jp
call
push
insl
inc
sbb
mov
stos
jnp
out
in
and
jmp
add
mov
in
push
jns
sub
sbb
or
test
mov
leave
arpl
dec
jb
and
adc
mov
or
mov
loopne
or
les
pop
add
xchg
mov
adc
xchg
shl
mov
pop
adc
sbb
and
mov
les
movsb
mov
jo
sbb
scas
fisubrl
fistpl
push
mov
inc
and
add
adc
lret
fisubl
scas
sub
and
mov
sub
addr16
lret
ja
stos
je
add
pop
jbe
push
mov
lret
add
lds
stc
xchg
pop
add
cmpsl
out
mov
jmp
sub
pop
repnz
repnz
add
fldcw
and
inc
pop
xor
or
adc
cltd
jmp
repnz
sbb
pop
xchg
jmp
sbb
mov
std
xor
pop
mov
xchg
out
push
iret
xlat
stos
xor
pop
jge
mov
pop
lret
repnz
outsl
or
aas
mov
xor
xor
jne
ljmp
test
cwtl
push
push
and
stc
jae
stos
adc
stc
push
jb
lret
add
mov
push
fs
adc
and
and
int
xor
arpl
jne
sbbl
rcrb
inc
jno
in
daa
mov
jbe
loop
jno
mov
loop
pop
and
pushf
mul
push
popf
loopne
and
and
push
push
dec
cli
xchg
adc
movsl
mov
addr16
sbb
sub
fdivrl
mov
pusha
aas
dec
dec
out
cmp
xor
add
push
lret
aad
dec
loope
test
push
lret
sub
sub
das
jne
jle
mov
lods
das
lahf
inc
sahf
and
sbb
cs
and
or
xor
xchg
inc
and
pop
sub
jl
push
cs
cmc
dec
mov
or
cmp
mov
lods
pop
ret
repnz
sub
imul
cmpsb
repnz
sbb
xor
jmp
call
mov
adc
lahf
or
and
xchg
dec
test
mov
push
pop
popa
out
dec
mov
cwtl
sbb
pop
insb
addl
xchg
xchg
pop
sbb
mov
mov
call
cmp
xchg
nop
adc
cmpsl
popf
xor
test
and
mov
cld
stos
add
mov
sbb
stos
push
repz
push
pushf
je
cmpsb
cwtl
jge
cltd
or
add
es
lea
or
or
cmovbe
add
or
std
dec
sub
out
stos
movsb
iret
pop
add
xchg
loope
fdivrl
xor
sbb
jmp
adc
iret
bound
sbbb
fwait
pop
sub
test
test
xor
adc
mov
inc
je
lods
mov
xchg
adc
jecxz
xor
jb
aas
std
fiaddl
push
mov
add
cwtl
adc
mov
pop
lahf
push
loope
or
xchg
or
pushw
sti
and
or
daa
pop
and
or
nop
insb
inc
mov
in
dec
rcl
notl
mov
stos
sub
push
add
xor
cmpsl
or
stos
nop
pop
sbb
or
fisubrl
aad
sub
and
cmpsl
and
leave
push
test
fwait
cwtl
and
mov
adc
and
mov
das
xor
imul
sbbl
xorl
movaps
std
jp
sub
shrb
loopne
sub
or
aam
and
sub
push
jno
jecxz
or
sti
or
fs
mov
or
jmp
lcall
adc
and
test
push
pop
and
or
jl
mov
les
and
xor
jb
mov
mov
push
cmp
clc
outsb
scas
sti
pusha
or
pop
or
cmpsl
enter
xor
inc
mov
mov
mov
mov
cmp
sub
cli
cmpsl
shlb
bnd
lods
in
sub
test
iret
imul
das
imul
sub
xor
test
sahf
or
jecxz
pushf
mov
sub
ljmp
outsl
movsl
and
out
sbb
out
test
xchg
sub
in
cmp
mov
mov
rep
push
in
cmp
cltd
or
imul
loopne
stos
cmp
int3
adc
or
pushf
xchg
cli
aad
pop
js
xor
push
stos
push
mov
andb
mov
mov
loopne
ds
lcall
mov
sbb
popa
sub
xchg
xchg
fnsave
and
movsb
mov
adc
xchg
les
cli
ret
addb
repnz
adc
sub
sbb
es
out
xchg
pop
cmp
add
pop
inc
stos
or
jnp
cmp
cld
sub
insb
xchg
xor
jecxz
int3
lret
test
stos
frstor
mov
sbb
sub
add
test
add
cwtl
and
sahf
or
jge
loop
pop
enter
adc
pop
hlt
sahf
and
pop
and
adc
mov
sub
adc
xor
pop
xchg
insl
out
pop
in
or
push
std
mov
in
jmp
jns
and
xlat
nop
add
arpl
stc
lea
adc
popf
sbb
repnz
sub
loopne
push
jo
dec
in
enter
sbb
or
loopne,pt
insb
push
loopne
mov
push
ret
imul
pop
mov
mov
mov
sub
int3
dec
jp
push
pop
vmovq
push
dec
out
xor
push
ljmp
cwtl
and
and
repnz
mov
push
stos
or
push
sbbl
push
mov
pop
mov
or
pop
loop
mov
or
inc
pusha
fimull
sub
fwait
mov
aas
mov
inc
ljmp
and
leave
ja
and
pushf
sbb
imulb
adc
pop
adc
test
lods
xchg
sub
sbb
adc
call
pop
stos
repz
in
and
dec
or
inc
mov
fwait
xchg
mov
pusha
pop
jns
test
jg
jo
push
lock
bound
sbb
cmc
cli
call
out
adc
add
insb
fsubrl
inc
mov
jno
scas
and
cmpsl
add
data16
paddb
mov
test
sbb
sbb
mov
fbstp
lcall
test
or
lds
gs
imul
sub
aam
push
sbb
sbb
fcoms
test
dec
mov
cli
jno
push
loop
jae
in
mov
sbb
sbb
push
or
jp,pn
sub
nop
cmp
push
xlat
shrl
inc
and
lea
call
jns
mul
pusha
aam
or
fisttpl
and
ficoms
or
loope
adc
push
pop
pop
cmp
and
fwait
mov
cli
loopne
or
lods
fisubrl
pusha
or
test
lret
add
fistpl
sahf
out
push
ret
daa
movsb
or
sub
sub
insl
fwait
pushf
dec
out
sbb
jb
and
push
pusha
scas
in
or
mov
sub
or
and
pushl
lock
push
xor
aad
and
test
fucomp
leave
jge
sub
outsb
aaa
lcall
test
mov
or
jmp
into
xchg
pop
sub
sub
call
xor
js
and
mov
lcall
and
fstpl
dec
mov
sbb
xchg
les
sub
bound
fdivl
mov
incb
cmpsl
lcall
aas
jnp
fmull
int3
push
add
ds
fwait
xchg
mov
xchg
jbe
loop
aad
sarb
push
stos
rorl
loope
cwtl
mov
les
lcall
dec
or
dec
mov
pusha
sahf
push
cmp
mov
daa
inc
lret
ret
lods
mov
mov
test
popf
cmp
mov
loop
fucomip
out
xor
pop
push
add
imul
scas
mov
sbb
fdivrs
sub
sub
mov
fwait
adc
repnz
je
mov
outsl
scas
or
mov
iret
data16
push
daa
mov
pushf
push
leave
dec
add
mov
test
and
xchg
xor
out
push
nop
and
fisttpl
ljmp
sub
loopne
fwait
pop
faddp
ljmp
std
pop
ljmp
icebp
sbb
ljmp
decb
mov
add
sub
pop
scas
out
jle
inc
and
pop
or
xchg
mov
dec
je
test
adc
push
inc
lret
or
cmp
xchg
clc
and
mov
pop
and
test
or
mov
lret
test
add
mov
fisubl
ja
les
adc
test
mov
inc
dec
sub
shrb
pushf
rclb
sbb
aaa
mov
pop
cmc
and
sbb
lods
jecxz
frstor
jne
rorb
pushf
bound
imul
inc
push
into
fsubrs
push
xchg
lret
jns
imul
pusha
jae
roll
sti
es
mov
sbb
add
jbe
lcall
ret
outsl
sub
pop
push
xor
out
jg
insl
ret
mov
divl
push
into
cwtl
jecxz
mov
or
aaa
jge
fs
push
mov
pop
push
or
test
test
out
dec
jbe
cmp
imul
add
cvtps2pd
cmp
sub
repnz
cmpb
dec
xlat
sub
pushf
lods
aam
lret
or
sbb
lea
sbb
or
or
xchg
jecxz
pop
aam
shl
or
mov
popa
mov
jg
pop
nop
adc
insb
or
test
sub
mov
test
iret
dec
iret
pop
cmpsl
mov
popa
or
test
pop
int
aam
in
and
inc
mov
add
mov
mov
test
xor
mov
xor
insb
cmpsb
pop
sbb
nop
push
fsubs
nop
repz
sbb
jnp
cmp
mov
dec
iret
mov
divl
cs
inc
cmp
shl
stos
js
mov
imul
loopne
jecxz
cltd
adc
push
sbb
mov
popf
add
mov
xchg
aad
xchg
pushf
sub
and
or
stos
fildl
sub
add
cltd
pop
das
cli
lret
mov
push
adc
jecxz
repnz
je
inc
iret
movsb
vmovaps
fwait
test
pusha
sub
adc
mull
mov
xchg
out
sbb
pop
push
jno
jns
pop
adc
arpl
cmp
or
lods
add
adc
lods
pop
or
sbb
inc
stos
xor
sbbl
call
pop
repnz
test
cltd
sbb
xchg
push
push
jmp
push
out
lods
push
lret
cli
ds
jecxz
xchg
xlat
test
gs
cmp
rclb
dec
adc
lods
push
stos
cmp
mov
jnp
cmpsl
sub
xchg
jg
test
lret
hlt
dec
rclb
xchg
and
lret
and
enter
mov
insl
pop
adcl
sbb
cmp
sbb
xchg
adc
in
leave
cld
popa
pop
jl
pop
mov
xlat
jno
mov
cmp
imul
mov
pop
jmp
imul
mov
jge
jbe
hlt
lcall
lock
les
leave
xlat
mov
repnz
aam
jo
ljmp
inc
icebp
call
stos
pause
sub
or
mov
and
mov
movsl
and
and
xchg
mov
or
sbb
pop
fwait
adc
push
xchg
inc
push
sub
mov
mov
repnz
xchg
rcrl
jl
dec
hlt
xor
and
fstpt
test
pop
sub
push
and
call
cmpsb
ljmp
dec
sbb
ja
mov
dec
dec
movsb
loopne
inc
mov
and
es
scas
out
add
stos
add
sbb
mov
sbb
mov
int3
arpl
sbb
mov
jle
sbb
or
pop
fimull
outsb
push
sbb
dec
lret
sub
popa
ficoml
or
into
push
xor
pop
xor
lret
decb
xor
fmull
and
push
repz
pop
and
xchg
scas
dec
push
sbb
push
addr16
fs
add
mov
mov
fstpt
mov
adc
ljmp
js
pop
adc
lods
test
pop
loope
cmp
xchg
push
aaa
push
and
jecxz
or
ss
push
es
and
push
nop
sbb
xor
sub
mov
lahf
rclb
cmp
test
sub
ss
adc
into
mov
shll
mov
add
mov
sub
cmp
movsl
in
sbb
mov
pop
cmp
es
lret
ret
push
and
or
jne
xchg
pop
mov
repnz
loop
stc
pusha
jg
or
sub
popf
pop
sub
pop
addr16
sub
and
insb
push
sbb
xor
in
add
in
or
adc
adc
imul
inc
inc
and
es
push
shll
loope
xchg
arpl
loopne
jo
pxor
or
and
shl
hlt
leave
std
out
ret
jge
jecxz
loop
and
test
stos
pop
mov
stc
mov
mov
mov
in
sbb
outsb
hlt
out
js
xchg
lret
pop
je
cmp
popa
cltd
lods
in
adc
bound
pop
mov
in
es
or
cwtl
xor
sbb
test
mov
sahf
xchg
jmp
xor
inc
notl
and
ds
mov
mov
pusha
xchg
movsl
test
push
xchg
cltd
repnz
dec
push
loop
and
cmc
add
mov
xchg
or
fs
pop
stos
lods
out
push
and
xchg
cmp
dec
cmp
inc
adc
sub
pop
leave
arpl
mov
sub
and
pop
stos
leave
inc
loop
cmp
sbb
loopnew
in
sbb
push
xchg
mulb
rcrl
add
pop
add
jmp
rorl
pushf
jno
fucomi
les
scas
xchg
out
outsb
inc
icebp
cltd
outsl
hlt
mov
adc
mov
and
add
test
push
inc
adc
mov
mov
out
lea
fcoms
lret
or
in
sub
jae
sbb
lock
or
repnz
outsb
jnp
leave
sub
or
fs
call
dec
cltd
or
mov
repz
js
push
icebp
das
add
or
repnz
xchg
mov
mov
test
repnz
clc
dec
fistl
jnp
leave
ret
inc
cmp
jnp
inc
fisttps
jecxz
jle
into
cmp
pop
jb
dec
int
fisubs
add
leave
and
les
pop
pop
rcrl
cmp
sbb
mul
sbb
ret
adc
mov
cmpsb
push
sbb
pop
xor
add
sbb
pop
sbb
popa
jp
fs
adc
ljmp
decb
xchg
mov
gs
daa
add
div
stos
sub
cmp
or
stos
imul
sub
jecxz
frstor
and
fsubrl
xchg
sbb
sbb
cli
and
movzbl
test
push
call
das
pop
fucomi
xchg
lret
pop
jo
out
xor
push
mov
idivb
test
filds
xor
rcrb
sti
sub
std
cld
fwait
dec
push
jns
leave
pop
mov
and
out
fimull
popa
ret
xchg
ret
sar
adc
addr16
pop
es
dec
xor
push
lret
cld
cmpsl
jmp
lret
lods
clc
push
and
stos
jle
lret
es
shlb
lret
xor
mov
test
jg
movsl
daa
insb
and
lahf
test
and
fmuls
mov
cmpsb
adc
mov
adc
jbe
shl
leave
test
push
cmpsb
mov
sbb
or
out
cwtl
xchg
and
and
cmpsb
ds
mov
lret
pop
and
or
popa
jmp
pop
lcall
or
std
jecxz
lret
daa
lret
jmp
fxch
incl
inc
loopne,pt
int
out
jmp
stos
ja
adc
cmp
ds
lcall
ja
mov
aas
sarl
add
fwait
movzbl
movsb
iret
fs
push
pushf
jno
xor
mov
cli
loop
cltd
arpl
popa
cmpsl
cmp
add
xor
add
xor
adc
daa
xchg
mov
sbbb
cwtl
stos
xchg
inc
popf
in
js
adc
loope
sbb
mov
nop
and
push
int3
aas
or
mov
rcrl
sub
cmp
pop
sbb
adc
jno
push
adc
ret
aaa
bound
ja
dec
mov
aad
push
xor
cmp
and
mov
aad
mov
jno
cmp
repnz
push
pop
mov
pop
inc
sub
lret
outsb
cmp
enter
int3
and
adc
jge
push
insb
iret
sbb
dec
inc
push
mov
sbb
cmpsb
xor
int3
sub
jb
ljmp
popf
fstpl
arpl
lock
xlat
loopne
push
xchg
mov
push
cmp
fcompl
lea
cltd
inc
out
or
popf
subb
nop
xchg
mov
pop
pop
push
shll
push
movsb
push
xor
std
push
movl
mov
cltd
dec
jge
mov
aad
or
jnp
stos
bound
mov
sbb
cwtl
leave
pop
sbb
fadd
dec
mov
cmp
mov
gs
imul
fstpt
leave
fsubrs
pop
sbb
cli
cmp
jmp
clc
add
inc
imul
cltd
xchg
sub
pop
out
mov
stc
scas
inc
adc
adc
lcall
jg
xchg
fsts
repz
push
or
bound
lea
addr16
pop
out
fnstcw
or
mov
pop
cltd
cmp
js
inc
or
fidivs
neg
sbb
aas
sbb
sarb
or
mov
push
mov
xchg
push
rcrb
out
out
sub
imul
mov
or
add
adc
sub
out
in
sbb
in
fisttps
cld
mov
mov
push
iret
push
inc
sbb
adc
mov
xor
xchg
out
lret
cli
sbb
movsl
mov
add
clc
xchg
mov
outsb
je
cmp
repnz
cmp
add
dec
or
jecxz
popa
dec
sub
loopne
push
cmp
jo
js
mov
push
dec
cmp
or
pop
movsb
jge
leave
adc
lret
cld
cwtl
subl
dec
sbb
push
mov
daa
repz
aad
in
and
adc
jecxz
clc
leave
fnstsw
rcr
fs
mov
xor
outsb
popa
and
cli
sub
sub
jp
aaa
push
push
cld
add
xchg
ret
jbe
fisubl
cli
jo
mov
aam
inc
mov
lret
adc
mov
xchg
and
hlt
or
and
mov
push
sti
ror
inc
and
cmp
push
int
pop
push
loope
data16
mov
xchg
push
cmp
mov
repnz
adc
xchg
jge
shll
jge
cmp
add
js,pt
add
das
mov
mov
add
pop
cmp
sbb
lret
jno
sbb
ja
jmp
push
ja
clc
cmp
aad
leave
sub
pushfw
push
out
sub
mov
xlat
mov
lods
push
popa
push
jecxz
dec
mov
adc
push
mov
adc
add
or
repnz
icebp
push
sub
or
dec
lret
mov
ret
fstpt
mov
xacquire
insb
mov
fisubs
push
cmc
or
cmpsl
insl
scas
cmp
cwtl
and
popf
push
int
das
testb
inc
mov
sbb
jle
arpl
or
mov
ljmp
mov
xchg
addr16
pop
jmp
std
imul
mov
lock
xchg
pop
sti
cmp
mov
sbb
xchg
das
pop
cwtl
jmp
jb
cmpsb
fisubl
sub
jnp
mov
call
repz
fcoms
arpl
adc
je
inc
int3
jbe
mov
lods
inc
pop
add
cmp
cld
sbb
jecxz
inc
or
inc
sub
fcompl
jge
jl
rclb
popf
popa
test
cwtl
shll
cmpsb
cmp
add
sub
dec
cmc
push
aam
leave
sub
repnz
outsl
sbb
popa
xchg
es
cmpl
pop
cmp
or
sbb
mov
ss
jmp
push
sub
xchg
sbb
call
mov
xor
jo
fadds
ljmp
icebp
insb
push
xchg
dec
mov
jnp
sub
out
and
out
scas
jg
out
dec
mov
fmuls
sub
push
movsl
jecxz
mov
push
xchg
dec
pop
inc
in
mov
pop
jno
les
inc
mov
das
lods
shlb
pusha
shll
dec
fcmovb
in
loop
sub
mov
jmp
flds
lods
ret
adc
hlt
add
sub
out
rorl
cld
push
imul
mov
pop
scas
jnp
inc
jne
std
mov
repnz
jbe
push
cld
pop
loop
bndldx
sbb
pop
pop
je
call
ljmp
fdiv
lcall
mov
nop
cwtl
dec
es
out
fstpl
lcall
int3
ret
inc
hlt
fldenv
jno
test
movsl
and
sbb
imul
fwait
arpl
dec
out
and
jb
nop
pop
clc
leave
mov
cs
or
cmpsl
cmp
leave
xor
lret
in
adc
stc
adc
ljmp
mov
data16
addr16
js
es
cmp
insb
pop
jmp
leave
mov
rcrb
shlb
int3
ja
ljmp
sub
pop
js
cli
test
subb
sbb
jmp
repnz
push
sbb
fimuls
xchg
and
xchg
lret
loopne
fiadds
iret
xchg
cwtl
xor
xchg
loopne
rolb
xchg
inc
and
or
mov
mov
mov
pop
sbb
mov
cmpsb
notb
lcall
push
sbb
xchg
insb
in
loope
ljmp
mov
shll
repz
lret
fldcw
sbb
jl
push
push
add
sub
jle
clc
or
lret
push
subb
or
dec
adc
and
xlat
aam
and
mov
jo
addb
and
and
adc
mov
stos
lret
nop
sub
add
dec
xchg
orb
or
es
cmpsl
jns
fmull
pop
out
xlat
jno
fcom
js
iret
cltd
std
pop
pop
cmp
or
ret
cltd
mov
faddp
sub
sub
dec
out
adc
xchg
jns
sbb
pop
jno
cmp
xchg
sub
adc
sti
mov
pop
jo
and
adc
loopne
adc
loope
mov
arpl
in
and
sub
iret
and
mov
xor
daa
cwtl
push
adc
xor
rcll
jp
out
jge
cmpsl
jg
push
xchg
es
movsb
push
pusha
std
jnp
inc
arpl
jmp
sub
xlat
push
daa
xor
jl
outsl
and
shrb
dec
push
lds
cmp
pop
test
cld
inc
and
test
sbb
xchg
or
rcll
sti
add
push
daa
mov
mov
mov
mov
jo
aad
xor
jecxz
test
or
aad
aad
vpshad
sbb
ficoms
and
pop
xor
and
ljmp
mov
ds
repnz
cltd
mov
or
scas
add
jmp
loopne
sahf
icebp
fsts
push
sub
sbb
sbb
push
jmp
dec
dec
sub
movsb
push
pop
push
repnz
mov
data16
sub
mov
ja
outsb
jle
lret
clc
iret
lea
push
sti
add
mov
and
pop
call
js
addr16
out
jbe
xchg
jp
mov
and
xor
std
in
bnd
movsb
pop
test
mov
sub
fdivrs
add
stos
and
addb
stos
pop
and
pop
push
mov
adc
popf
pop
lods
ret
xchg
xorb
dec
cmp
and
adc
adc
shrb
loop
jecxz
inc
popf
add
pop
or
pop
test
sbb
fs
sbb
inc
or
jae
inc
cmp
dec
jae
call
xor
pop
xchg
imul
movsb
sbb
rcr
popa
mov
jl
cmp
add
repnz
pop
pop
jp
xchg
scas
cli
adc
scas
sub
shrb
pop
shrb
jge
scas
sbb
push
int3
test
xchg
arpl
js
shl
ret
push
sbb
push
popa
repz
pop
test
repz
adc
sub
movsb
pusha
mov
scas
shll
xchg
sub
fimuls
mov
lea
inc
das
cmpsb
arpl
lret
and
daa
lods
out
rclb
iret
mov
or
out
pop
sub
dec
jmp
iret
jmp
mov
out
sbb
scas
and
test
mov
decl
cmp
and
pop
iret
sub
insb
mov
and
cmpsb
pop
push
fidivl
push
xchg
call
dec
mov
fcmovbe
jb
or
cwtl
test
inc
ret
outsb
int
stos
out
or
pop
stos
out
sbb
cmp
dec
cmpsl
repnz
fcmovu
mull
cmp
sub
sub
and
jo
aam
popl
repnz
push
movsl
int3
daa
in
and
sub
punpckhwd
sub
iret
call
stc
dec
js
pop
fcmovbe
call
pop
mov
ficompl
mov
pop
jmp
cmp
inc
push
in
sub
gs
outsb
pop
aaa
jg
out
outsl
pop
or
jmp
iret
mov
rcrl
fstpt
scas
aam
movsb
or
out
ds
fsubl
loope
push
das
jne
outsl
sbb
xchg
jns
arpl
push
imul
mov
sbb
adc
inc
add
pop
rolb
push
jecxz
cmp
pushf
mov
jge
add
sbb
fistps
mov
inc
lods
sub
push
sbb
out
jb
aam
sub
cwtl
pop
xor
fmuls
cltd
call
fsubp
sbb
dec
sub
cltd
mov
pop
sbb
hlt
bswap
pop
mov
bound
jo
adc
pop
scas
sahf
ss
mov
movsl
mov
mov
lret
cmp
test
xchg
sub
mov
push
jbe
js,pn
in
movsb
mov
mov
mov
test
jl
loopne
iret
in
fildl
repz
or
push
mov
sbb
das
or
imul
push
cwtl
lret
aaa
xchg
mov
push
cmp
out
es
mov
or
mov
lcall
mov
mov
and
dec
lcall
jecxz
stos
xor
or
daa
pop
adc
lea
sbb
loop
fstps
sub
lret
je
ret
in
cmpsl
leave
dec
cs
jnp
out
lret
sub
fnstsw
bound
lods
xchg
sbb
push
pop
inc
lock
pop
repz
aam
xor
jmp
mov
adc
fstpl
sub
xchg
or
push
imull
push
push
mov
or
and
bound
mov
testl
ljmp
sub
jnp
andl
sti
xchg
adc
mov
adc
std
pop
test
sub
xlat
dec
jnp
adc
in
out
loope
shlb
test
fcomi
sub
cli
pushf
xor
or
mov
lcall
mov
mov
jge
xlat
mov
add
xchg
testb
dec
jle,pn
push
push
daa
into
stos
and
inc
or
cmc
loop
xchg
sbb
iret
lret
or
movsl
lret
xchg
adc
aam
mov
test
or
mov
fs
aam
sti
adc
and
out
cwtl
xchg
call
xchg
into
js
dec
xchg
call
pop
jg
int3
call
stos
dec
int
mov
mov
mov
pop
xor
lcall
mov
push
lea
cmp
pop
cmc
push
push
scas
out
pop
sub
push
cmp
nop
pop
push
jecxz
ljmp
xchg
pop
or
adc
or
sub
test
pop
sub
inc
es
push
ret
sahf
jne
js
mov
mov
lock
push
inc
loopne
sbb
xlat
adc
sti
test
decl
sbb
fcomps
imul
inc
fiaddl
stc
pop
and
repz
xchg
and
insl
xchg
sub
push
or
enter
les
pop
aad
cmpsl
shlb
fdivl
pop
sbb
loope
sub
stos
repnz
loop
out
xchg
inc
test
sub
rcrb
test
mov
lds
pop
jmp
out
jmp
lods
mov
stos
cmpsb
cli
dec
and
mov
fidivl
out
mov
xor
xor
in
sub
adc
pop
jmp
mov
jno
pop
jecxz
push
mov
inc
push
addr16
pop
repnz
test
pop
sbb
repnz
loopne
adc
aam
imul
adc
and
pushf
enter
xor
dec
xor
inc
mov
cmpsl
push
cmpsl
adc
imul
std
add
push
into
inc
xorl
pop
xor
xchg
add
out
sbb
sti
nop
sbbl
imull
add
cmp
fnstcw
xchg
mov
scas
pop
mov
jecxz
jo
sbb
sbb
insb
imul
shrl
mov
or
or
jecxz
test
ja
icebp
and
fisubrl
pusha
aam
sti
inc
or
fcos
test
inc
mov
cli
int3
out
mov
mov
scas
lods
pop
and
mov
and
jge
add
jecxz
sbb
push
and
in
stos
xor
and
mov
or
pop
fucomi
push
jp
je
sbb
mov
xchg
out
shlb
pop
and
lret
adc
movsb
movl
lret
add
and
rorb
or
mov
push
cwtl
pop
das
push
push
jecxz
sub
lods
mov
je
jecxz
fdivrs
xor
fdivs
fwait
or
pop
clc
dec
popa
cmpsb
lret
out
xchg
push
dec
dec
mov
sbb
push
or
int3
and
fimull
jecxz
mov
xchg
add
rclb
inc
mov
sbb
icebp
shl
cmp
das
ljmp
loopne
lods
inc
push
jb
js
insl
loop
or
dec
movsb
call
add
sub
arpl
outsl
push
das
shrb
pop
cwtl
adc
addl
jl
and
imul
cltd
rorl
add
das
insl
push
or
adc
int
ret
add
and
cmp
lds
mov
sbb
test
pop
fwait
sbb
notl
addr16
ljmp
addr16
push
push
into
loop
sbb
and
pop
push
pop
and
push
cmc
loop
xor
sub
mov
dec
add
and
cmp
repz
sub
inc
cmp
push
in
out
adc
mov
push
lret
imul
shlb
lea
sub
fsubrl
fwait
nop
mov
mov
mov
sub
xchg
push
mov
or
mov
sbb
gs
pop
lret
addr16
stos
call
repnz
cmpsl
push
pop
aam
sub
push
aaa
pushf
xor
cmp
sub
call
ljmp
jle
out
push
jp
sub
sbb
dec
dec
in
inc
or
repnz
int3
push
xor
in
push
mov
add
movsb
add
sbb
add
xlat
repnz
jno
or
xchg
movsb
xchg
pop
mov
inc
xchg
add
cmp
neg
fs
mov
outsl
dec
jmp
adc
pop
jnp
pop
je
pop
in
dec
icebp
jl
pop
das
sub
shr
xchg
leave
pop
int
pop
lret
gs
xchg
lods
sbb
adc
repnz
sub
ret
push
in
cld
jnp
adc
leave
push
dec
xchg
and
push
jbe
sub
sbb
push
push
outsl
cmpsb
insl
inc
xchg
dec
jecxz
xchg
push
or
adc
lret
loopne
push
ret
movsb
or
repnz
ret
or
sub
ret
or
sbb
adc
aas
jl
aad
adc
sub
clc
cmpsl
loopne
mov
or
popf
sbb
push
fstl
in
xchg
das
clc
xchg
cld
cmp
cmp
mov
or
push
hlt
fdivr
push
in
movsb
je
cld
sbb
pop
adc
sbb
cmp
movsb
pop
mov
mov
fimull
clc
sbb
fmull
ret
js
lcall
fwait
icebp
jnp
dec
sahf
pop
push
cmp
fs
aas
je
hlt
lahf
mov
mov
jmp
mov
rcr
movsl
pop
clc
pop
pop
xor
mov
sub
int
inc
lea
repnz
hlt
std
lret
or
repnz
test
imul
in
cmp
addr16
repnz
test
nop
lods
ss
xchg
lock
push
jnp
and
es
lods
or
les
pop
es
jae
jg
call
ljmp
imul
aad
aas
sub
inc
bound
test
dec
and
mov
sub
sub
bound
repz
sbb
xor
or
daa
sub
sub
scas
add
testb
push
and
jecxz
dec
adc
icebp
daa
vprotd
add
cli
scas
sbb
jp
enter
call
xor
inc
and
xchg
insl
sub
fsubs
repnz
mov
sbb
popa
lcall
fistps
clc
iret
fs
push
or
sub
popa
adc
mov
in
imul
bound
in
enter
pop
iret
push
sbb
xchg
clc
xchg
loopne
jne
or
jae
ja
xchg
int3
scas
sbb
or
mov
mov
dec
sub
push
les
sub
cwtl
hlt
and
push
push
loopne
sub
mov
mov
xchg
or
es
xchg
lahf
data16
popf
loopne
xor
sbb
sti
sub
in
and
cwtl
cmpsl
inc
xchg
xchg
insl
leave
pop
dec
mov
bound
decl
or
pushf
test
shlb
inc
bound
addr16
inc
sbb
rcrl
cmp
fadds
jmp
add
or
into
cmp
xor
dec
pop
fs
ljmp
test
loop
dec
pop
loop
and
stos
dec
sub
add
sub
mov
push
ret
out
xchg
cmc
popa
std
movsb
icebp
push
xchg
fistl
loop
jno
adc
push
cs
mov
mov
adc
aaa
divps
sbb
das
inc
xor
lods
out
jecxz
imul
push
mov
lock
sbb
stc
test
jnp
mov
mov
icebp
sti
lea
leave
pushf
fcoml
dec
sbb
aam
and
jp
sahf
je
and
add
js
fstp
sub
pop
dec
jnp
xor
adc
dec
aam
aam
mov
repz
push
push
adc
mov
and
adc
insb
fisttps
in
popf
jp
mov
sti
mov
fisubs
or
enter
cmp
mov
jle
lcall
leave
jge
cmp
adc
push
bound
push
xchg
push
mov
cmpsb
sbb
sarl
stc
ss
adcl
pop
pop
xchg
mov
mov
repnz
fisttps
sbb
dec
pusha
out
lret
or
adc
aaa
andb
sub
cmp
clc
loop
andb
fstpt
sbb
or
mov
insl
adc
fldcw
push
sti
sbb
loopne
in
out
inc
cmp
dec
adc
xchg
sbb
repnz
xor
divb
movsb
sbb
pusha
and
outsl
lea
movsb
push
sbb
movsb
push
or
pop
mov
sbb
mov
inc
or
push
sub
add
sub
repnz
test
push
mov
mov
mov
mov
addb
push
jmp
xchg
and
mov
inc
imul
push
push
pushf
adcl
stos
ficomps
dec
mov
xor
cli
shl
or
aaa
jl
inc
jge
out
jb
add
psubusw
sbb
in
jbe
mov
int3
mov
cli
popf
add
sbb
xchg
add
test
bound
test
cmpsl
es
incl
movsb
repnz
ljmp
push
xchg
push
insb
lret
repnz
pop
mov
xor
iret
jmp
push
subb
and
loope
cmpsb
cltd
cmpsl
cmp
push
lret
repz
repnz
sbb
jmp
or
fwait
pop
or
jg
out
stc
xchg
notl
or
test
sub
cli
stos
icebp
out
mov
and
sub
in
pop
clc
stos
cmc
cli
stos
hlt
movsb
idivb
fmull
pop
pop
fcompl
and
popf
shl
dec
sbb
lret
mov
lret
sub
in
push
addr16
clc
in
insb
cmpsb
dec
bswap
sub
cli
enter
mov
jno
xchg
mov
dec
mov
xlat
cmc
in
push
scas
push
outsb
sub
rcrb
setge
aaa
push
loopne,pt
push
adc
icebp
lret
pop
push
stos
push
mov
addr16
cmp
sbb
sbb
jo
es
push
jp
ljmp
jb
cmpsl
dec
xor
movsl
stc
loopne
testb
cli
mov
mov
fs
in
lret
pop
out
mov
lret
cltd
adc
add
xchg
sahf
lret
sub
add
sbb
lods
jecxz
cs
gs
jo
in
ret
les
stos
sbb
pop
fmul
xlat
jb
push
adc
pop
or
push
in
test
sub
sahf
mov
mov
cltd
cmp
stos
loopne
test
les
rorl
xchg
dec
test
jo
addr16
cld
mov
out
mov
je
adc
or
push
xchg
push
mov
xor
cltd
stos
inc
add
fdecstp
xor
sub
stos
cmc
push
stos
mov
and
loop
sbb
xchg
fwait
out
stc
push
mov
negb
cli
ja
mov
xchg
add
cmp
pop
jp
clc
push
fs
js
lods
jl
sbb
pop
jo
cmp
adc
and
fcmovnb
push
jbe
enter
fwait
add
fldt
push
lret
jo
sti
adc
xchg
sub
fistps
sub
in
mov
sbb
mov
aas
cmp
pop
pusha
pop
lea
sti
fisttpl
jecxz
adc
dec
mov
clc
sarb
pop
repnz
fpatan
and
mov
sbbb
pop
jo
rcrb
test
lret
mov
rcll
pop
and
jg
push
sti
std
scas
sahf
jo
pop
cmp
cmp
lret
fldl
fildl
cmpsl
negb
add
jo
dec
jnp
mov
sbb
popa
sbbl
adc
mov
sub
jo
es
cmpsl
jo
mov
pusha
and
sbb
popf
sub
fdivl
pop
jl
leave
and
mov
inc
movsb
cltd
test
push
popa
movsl
push
repz
pop
push
add
pop
fdivl
in
cli
or
jmp
cmovbe
dec
lret
mov
lret
and
push
ljmp
jns
cmp
sub
arpl
mov
ss
pop
sbb
lods
adc
fcmovnbe
mov
pop
xchg
mov
in
push
xchg
push
jbe
pop
xlat
jle
inc
cli
leave
sbb
rcr
push
dec
ljmp
pop
leave
push
cmpsl
and
rcll
or
icebp
push
jnp
xor
mov
fwait
addr16
movsl
nop
scas
popa
ss
jb
negb
nop
mov
jae
testl
adcl
xor
dec
jmp
inc
adc
mov
fistl
cmp
jle
mov
shrb
lds
mov
stc
sti
hlt
sarl
jl
fisubs
xchg
ss
pop
cwtl
sbb
out
xor
orb
repz
sbb
mov
jmp
sbb
fdivs
adc
add
pusha
popa
or
insl
cmpsl
sub
in
jns
lret
inc
jp
or
dec
movsb
adc
call
sbb
xor
or
mov
cmp
pop
sbb
dec
cmp
aaa
mov
shlb
dec
sbb
pop
mov
repnz
arpl
adc
mov
adc
call
imul
add
pop
inc
mov
xor
sbb
es
sub
popf
sbb
ror
popa
outsb
cwtl
in
sub
xor
stc
xchg
cmp
fcomps
lock
rep
ficoms
arpl
adc
ljmp
xor
repnz
daa
push
imul
int3
and
xlat
repz
test
or
dec
or
aaa
sbb
xor
repnz
rol
mov
cltd
je
dec
push
or
push
mov
cmp
sarl
insb
popf
data16
addr16
incb
push
xor
pop
dec
inc
jg
cmp
mov
loop,pt
and
test
aam
int
mov
fwait
jb
inc
sti
push
icebp
sub
mov
cmp
shll
xchg
pop
lock
push
daa
mov
lret
push
call
jecxz
repnz
int
arpl
das
daa
dec
cmp
repnz
cmp
lea
adc
cmp
movsb
mov
cmpsl
loopne
fidivl
loopne
adcl
sahf
loope
sub
lds
mov
fdivl
lahf
clc
inc
or
in
xchg
pop
out
ljmp
mov
lock
mov
sbb
les
jmp
out
cmp
insl
and
inc
mov
iret
sbb
aas
jnp
dec
push
daa
rorb
mov
out
pushf
lcall
aaa
sbb
sbb
scas
into
lock
jmp
lret
push
push
rcrb
das
sub
jne
adc
out
sub
sub
ljmp
ljmp
push
mov
insb
or
adc
aam
popf
in
popa
mov
xchg
cwtl
aas
add
pop
xor
daa
aad
shrb
xchg
rcrl
cmp
sbb
sti
imul
je
or
loop
xchg
inc
in
scas
in
mov
sub
in
ljmp
out
movsl
add
arpl
inc
sti
push
add
daa
imul
outsb
push
add
xchg
mov
insl
pop
or
pop
jl
cwtl
xchg
std
nop
mov
mov
pop
repnz
repnz
iret
push
xchg
icebp
pop
xchg
outsb
loopne
add
pop
sub
push
inc
add
xchg
dec
pop
lods
xor
jmp
pop
imul
repnz
jns
mov
clc
jl
testl
in
in
outsl
sub
hlt
lods
lret
sub
mov
ret
or
inc
and
shl
mov
and
and
movsb
adc
mov
pop
fsts
in
and
rorb
or
and
inc
push
in
push
mov
pop
sbb
jecxz
call
push
adc
pop
dec
pushf
mov
adc
loop
add
hlt
into
dec
bnd
sub
sub
xchg
arpl
mov
lret
popa
mov
cltd
mov
jle
aaa
repz
fucom
mov
cmp
xchg
orb
movsl
mov
je
mov
stc
push
enter
ret
jns
call
or
test
addb
mov
imul
movsb
lret
jle
mov
xchg
shrb
out
adc
adc
ds
xor
addb
pop
dec
call
inc
test
or
mov
loopne
scas
popf
popa
lahf
int
fcmovnbe
mov
sub
imul
adc
orb
ljmp
lea
clc
cwtl
sarl
movsb
or
inc
insl
lcall
adc
cltd
dec
movsb
mov
and
insb
bound
repnz
movsb
test
jecxz
decl
andl
clc
data16
lcall
push
lods
jnp
xor
mov
loopne
mov
in
inc
movsl
xor
es
in
adc
mov
sbbb
fwait
pop
ljmp
cmp
fs
stc
pop
mov
data16
into
or
push
lret
add
sbb
adc
lret
and
mov
adc
idivl
scas
sub
dec
mov
mov
ret
cli
push
sbb
sbbb
mov
jecxz
add
push
in
cltd
add
pop
enter
arpl
in
jmp
sub
adc
outsl
sbb
sub
xchg
jmp
inc
ja
adc
incb
outsl
leave
push
lcall
leave
lea
inc
jl
fdivl
imul
jge
fildll
jge
jno
out
push
insb
icebp
flds
lea
mov
out
fcomps
sub
lret
aaa
xor
and
lock
xlat
cmp
lret
mov
jo
cmpsl
adc
xlat
push
cltd
push
repnz
jecxz
mov
cltd
sub
sub
out
ja
add
in
outsb
iret
sbb
pushf
or
in
push
or
es
or
leave
and
arpl
xlat
ds
jae
out
xchg
fsubl
sbb
mov
mov
mov
test
ss
cmpsl
ljmp
bound
pop
jnp
push
mov
add
or
xor
xchg
fiaddl
mov
push
mov
cmp
movsb
pop
or
lahf
stc
or
xor
xor
mov
sub
and
xlat
in
sbb
js
add
hlt
jecxz
sbb
add
and
xor
jb
xchg
call
push
pop
repnz
lar
lcall
jns
and
test
mov
inc
arpl
xlat
into
sbb
pop
leave
mov
jmp
xchg
andb
pop
jge
and
pusha
adc
push
out
pop
daa
ret
inc
mov
pushf
ljmp
leave
daa
add
adc
pop
jo
push
pop
lret
repnz
jge
out
sbb
std
test
mov
int
xor
jne
mov
imulb
repnz
pop
shl
daa
add
addr16
loope
jg
ds
and
adc
ret
not
test
data16
movsb
mov
pop
cmp
leave
ljmp
and
js
jns
cli
jb
popf
lret
xchg
repnz
retw
scas
or
fcmovne
jbe
mov
pop
mov
adc
dec
lret
mov
movsb
ds
adc
xor
cmp
das
cltd
out
sbb
xchg
idivl
cmp
fnstenv
push
lret
mov
push
mov
cmpsl
aaa
jge
shl
aam
cmpsl
faddl
neg
mov
sti
add
loop
mov
dec
fsubl
js
dec
or
and
iret
repz
ficompl
iret
sbb
bound
and
dec
fwait
aam
loopne
add
test
mov
std
inc
inc
add
das
dec
andl
jecxz
mov
and
aad
es
js
push
add
int
cmc
xlat
xchg
lret
cmp
ret
sub
xchg
mov
mov
pop
pop
jnp
repnz
les
les
mov
push
lret
ret
out
jmp
insl
sbb
sar
mov
cmp
mov
cmc
and
push
mov
loope
in
cmp
push
dec
push
repz
dec
lods
pop
int3
lock
arpl
sub
call
pop
mov
xor
imul
test
and
cmp
cmc
js
bound
cmpsb
lds
lret
dec
push
sbb
jge
ljmp
lods
mov
mov
and
push
dec
inc
mov
sub
out
call
arpl
fstp
dec
push
pop
out
push
jne
or
daa
or
sbb
push
adc
js
repnz
jnp
add
mov
repz
jg
sbb
out
mov
out
and
stos
sub
mov
leave
and
cli
mov
xor
sub
pop
mov
push
sub
lds
xchg
pop
iret
test
aaa
les
and
adc
dec
adc
lret
xor
wrmsr
jg
lods
lods
clc
push
sub
sbb
and
outsb
or
and
lea
je
adc
push
pusha
aaa
pop
dec
adc
rcr
lods
adc
jecxz
and
lock
push
or
test
lods
mov
xor
daa
pop
ss
pop
xor
fwait
jae
int3
sbb
sbb
rol
in
mov
sbb
mov
pop
enter
xchg
mov
or
or
daa
cmp
in
cmp
xchg
mov
xlat
mov
or
test
mov
and
daa
dec
add
test
xlat
sbb
jge
sub
xor
aam
inc
js
xchg
daa
sub
sbb
fildl
les
dec
je
clc
push
push
lcall
mov
stos
stc
mov
cli
push
cmp
adcl
inc
out
or
outsl
pop
pop
aam
dec
js
aaa
sub
adc
cmp
push
or
mov
jne
insb
call
and
cmp
adc
or
or
push
sub
mov
outsl
inc
std
ja
add
pusha
std
sahf
js
imul
movsb
jne
push
ret
xchg
mov
sbb
inc
sbb
mov
ljmp
cwtl
ljmp
mov
je
pop
das
cmpb
pop
loope
sbb
adc
mov
jp
adc
lret
scas
xchg
sub
stos
sub
pushf
push
adc
adc
sbb
and
or
loop
sbb
sbb
out
adc
push
and
pop
xor
mov
lret
xor
data16
mov
shll
push
pop
jge
cwtl
mov
or
push
addr16
jle
cmp
dec
repz
repnz
xor
cmp
pushf
les
push
jne
sbb
repnz
movsb
and
inc
push
fcompl
cli
inc
push
mov
lcall
push
pop
jge
xchg
cld
xchg
movntq
out
hlt
sbb
push
jp
out
jp
outsb
xchg
or
call
in
aaa
and
cmp
call
test
in
inc
mov
jne
addb
repnz
shr
dec
sub
imul
sub
mov
xlat
inc
pop
add
push
fidivrl
test
out
pushf
mov
pop
aam
test
push
jbe
stos
test
sub
pop
insl
inc
jecxz
aaa
insl
bound
imul
in
pop
aam
mov
or
xor
jns
arpl
sti
cmpsb
and
and
sbb
push
in
fwait
jb
test
pop
or
fwait
push
jg
inc
pop
loopne
rep
sbb
sbbb
mull
fcmovnbe
cmp
dec
fisubs
inc
and
push
mov
push
in
sar
into
leave
in
jmp
bound
in
mov
and
mov
call
inc
push
repnz
enter
ljmp
sbb
movsb
outsb
or
push
push
mov
jb
rcrl
stos
mov
ljmp
mov
cwtl
ret
mov
cltd
mov
add
and
mov
and
cmpsb
mull
mov
xorb
shr
mov
cmp
pop
fnstenv
cmpsl
mov
ret
and
jnp
repnz
je
cs
add
scas
and
jecxz
test
rcr
or
push
cltd
xchg
add
push
inc
sbb
xchg
inc
jne
xchg
roll
jno
jmp
sti
loopne
sub
mov
sti
jmp
rcrl
add
or
push
ffree
hlt
pop
loope
daa
leave
imul
ret
pushf
stos
sub
loop
xchg
mov
mov
cmp
xchg
cmp
mov
push
sbb
sbb
push
loop
js
inc
sub
sub
fmull
arpl
pop
sbb
fbld
imul
movsb
or
inc
jecxz
in
mov
adc
or
shr
xor
ljmp
cmp
enter
jp
jle
repnz
add
inc
cltd
lods
mov
sbb
and
dec
ja
and
cmp
test
push
or
js
sarb
outsb
xchg
and
mov
inc
iret
cmpsl
data16
mov
cmc
xor
sbb
sbb
jg
inc
mov
bound
fs
sub
push
ds
add
fdivrp
scas
mov
cmp
sub
dec
cmp
sahf
sbb
xchg
adc
inc
js
js
cmc
xchg
fidivl
push
cmp
xor
imul
fstpl
dec
aaa
mov
inc
leave
pop
insl
or
aaa
mov
dec
xchg
out
xchg
in
test
das
divb
sub
fdivrl
test
das
mov
movsb
sahf
movb
rclb
sub
cmpsb
ljmp
xchg
cli
loopne
js
ljmp
je
jle
arpl
inc
pop
sbbl
test
fs
clc
stos
xchg
and
dec
enter
adc
enter
mov
movsb
xchg
or
test
adc
sbb
mov
outsb
mov
push
mov
push
add
lock
push
repnz
pop
pop
subb
negb
repnz
in
push
data16
xor
dec
mov
mov
push
out
jb
push
movsb
scas
cs
cmp
xor
push
adcb
ror
adc
sub
mov
arpl
jmp
sbb
push
push
sbb
pop
pop
jae,pn
pop
dec
lock
mov
and
in
mov
cmp
shrb
fidivs
stos
out
insb
fdivrl
es
out
or
sub
imul
push
push
pop
sub
in
sub
sub
inc
xchg
cmpsb
and
add
rorl
add
leave
mov
mov
loope
xchg
std
addb
test
mov
jae
push
decl
sub
mov
lahf
insl
inc
arpl
mov
int
jge
inc
lahf
mov
pop
and
and
cli
jo
test
mov
jmp
test
add
add
cmpsl
jbe
ds
jns
sbb
test
mov
pop
push
add
sub
xor
popa
iret
pop
into
cli
push
in
fidivrs
mov
repnz
adc
push
jo
mov
mov
push
push
mull
loop
dec
cwtl
pop
arpl
loop
test
cmpsb
fldenv
bound
int
mov
mov
addr16
mov
loop
pop
jmp
insl
pop
scas
lock
daa
xchg
lea
dec
adc
sub
popa
push
jl
push
sub
clc
push
stc
jns
fists
adc
jmp
push
inc
popa
jp
aaa
pop
jo
sub
mov
inc
add
fnstcw
pop
push
push
repnz
aas
bt
mov
imul
xor
or
icebp
shrl
pusha
xor
mov
inc
or
jl
mov
lock
sub
call
inc
push
fsin
cmp
dec
adc
cmpsb
sbb
xchg
sub
sbb
mov
add
aam
push
imul
sbb
out
test
and
loop
fs
jecxz
pop
loop
mov
adcb
xor
xor
movsb
icebp
shrb
psubusb
inc
ljmp
nop
daa
adc
adc
xlat
jecxz
lock
mov
stos
fstl
xchg
in
xchg
jg
ljmp
xlat
sub
push
dec
fs
xchg
inc
iret
and
or
in
adc
sbb
mov
loope
mov
insb
repz
shl
out
je
loope
xchg
mov
scas
mov
sub
test
int
pop
iret
popf
add
push
std
xchg
inc
jmp
repnz
mov
lea
push
cltd
adc
jae
xlat
or
mov
jl
cmpsl
sbb
mov
cltd
mov
aas
arpl
xor
outsb
sub
cmp
enter
push
sub
arpl
push
mov
xor
repnz
stos
out
shrl
dec
jnp
mov
or
loop
and
mov
lret
iret
loopne
sub
push
ss
push
mov
pop
adc
out
ret
aaa
xchg
adc
adc
sbb
xor
sub
jno
mov
mov
cmp
xchg
dec
pop
call
pusha
adc
flds
fdivl
xchg
jnp
fmuls
faddl
fwait
or
jmp
sbb
jmp
jo
sub
enter
cmc
in
or
hlt
outsl
sti
fcoms
or
out
or
sbb
movsl
stc
mov
cltd
cmp
and
or
decb
jbe
arpl
iret
fwait
pop
and
enter
ss
cwtl
xor
lret
sahf
cld
ret
mov
push
mov
nop
shlb
out
add
mov
repnz
or
jmp
bound
or
sub
movsl
loopne
ljmp
jbe
inc
push
aad
inc
add
imul
rcl
lods
and
je
jb
mov
scas
and
outsl
inc
or
movsb
add
imul
js
js
dec
clc
pusha
cli
daa
sti
sbb
test
stc
out
dec
jmp
imull
push
fisubl
xor
divl
idiv
sbb
pop
mov
cld
vpunpckhdq
js
fwait
je
or
pop
inc
xchg
aaa
xor
aad
fldenv
adc
and
movsl
rcrb
int
sbb
stos
adc
shlb
mov
jecxz
adc
ss
sub
movsb
cli
sub
pop
loop
and
stos
xchg
pop
hlt
aam
lret
iret
push
xchg
sbb
sub
icebp
ficoml
cmp
push
hlt
fisubrl
aam
cmpsl
lods
add
push
inc
and
push
cmpsl
push
incb
adc
inc
push
imul
and
push
ficompl
pop
xchg
stos
leave
sub
imul
xchg
cmpsl
adc
add
dec
mov
movsb
or
pushf
push
sbb
push
imul
xor
pop
push
and
xor
pushf
xlat
js
jmp
cmp
mov
inc
xlat
lcall
cmpsl
call
cmp
sub
xchg
cmp
xor
pop
or
sub
jae
mov
mov
add
jnp
inc
stos
push
repz
pop
aam
call
xchg
pop
sub
out
xchg
ljmp
pop
out
pop
push
sbb
push
jp
sbb
rclb
fisttps
inc
push
mov
and
fstps
ret
and
sub
push
mov
sub
arpl
xchg
push
stos
fcoms
sbb
adc
push
repz
inc
mov
push
sub
lcall
sahf
mov
or
fdivs
xor
push
mov
mov
ljmp
sub
push
inc
mov
mov
ljmp
sti
sbb
cmp
sub
iret
and
lods
lds
inc
jno
sbb
jns
in
inc
test
data16
loopne
xchg
imul
fstps
jecxz
jnp
jns
loopne
and
lock
lret
mov
sub
lods
int3
sti
mov
cli
jecxz
push
add
and
and
xor
lods
sbb
int3
js
aaa
jle
jg
adc
dec
std
mov
jg
pop
inc
mov
pop
out
jnp
mov
inc
lods
ljmp
cmp
mov
in
jl
push
cs
mov
orb
sub
ficoms
sub
fcompl
mov
xlat
xchg
mov
sbb
outsl
cli
loop
fstp
mov
mov
mov
add
mov
lea
cmp
sub
dec
and
enter
push
mov
xorb
leave
pop
fwait
das
xor
hlt
rorl
ret
rol
ljmp
sbb
lret
leave
sub
daa
inc
out
mov
sbb
nop
push
faddl
mov
push
daa
scas
jo
push
dec
push
dec
ljmp
push
fwait
pop
xchg
adc
leave
sbb
inc
pushf
cltd
push
jge
iret
loop
das
lods
push
push
xchg
ret
movsb
push
jnp
mov
push
ss
pop
xor
popf
loop
loop
pop
movsb
sbb
pop
repnz
fbld
aaa
fs
mov
repnz
xchg
movsb
or
cwtl
push
insl
call
test
in
lret
out
scas
out
adc
adc
pop
and
cmp
repnz
ljmp
ja
fwait
loopne
loope
or
push
aad
cli
push
mov
cmp
sbb
test
xchg
pop
cmpsl
loopne
in
cltd
push
adc
ret
cwtl
push
cld
mov
mov
iret
pushf
fisubs
testb
aam
xchg
stos
repnz
adc
fsubp
mov
addr16
xor
or
pop
gs
lcall
insl
test
lea
lods
push
movsb
sub
push
test
sbb
mov
cmpsl
nop
dec
popa
sub
xchg
int
add
jge
test
mov
lret
mov
xchg
or
std
and
lret
lock
ljmp
ficompl
mov
push
add
sbb
cltd
pop
jb
fmull
into
sub
inc
sub
adc
cld
les
push
pop
cmp
mov
lock
enter
push
adc
adc
arpl
xchg
fs
aaa
push
call
and
fcoml
outsl
les
sbb
rclb
or
mov
dec
mov
sub
mov
aas
mov
mov
add
stos
loopne
sub
loopne,pt
adc
pop
add
sti
pop
push
add
pop
or
clc
dec
arpl
sub
mov
sub
pop
pop
inc
jmp
sub
cli
inc
mov
divps
jle
adc
test
pop
cltd
sub
and
pop
shlb
cmp
sub
xor
mov
xchg
sub
aaa
mov
popa
mov
xor
cwtl
sbb
sub
cmc
mov
ss
xchg
scas
jl
pop
rep
aad
or
ljmp
mov
or
fldln2
push
std
mov
sbb
mov
movsl
shl
adc
sbb
cmp
outsl
stos
pop
repnz
pop
test
orb
ljmp
ret
add
sub
mov
std
fistpl
clc
loopne
imul
or
negl
stos
sub
add
xor
das
push
xchg
mov
inc
fucomi
jbe
lods
pop
sub
jnp
hlt
lret
jmp
jb
mov
pop
sub
call
hlt
fs
repnz
cmp
stos
push
out
mov
cmpsl
mov
les
sahf
mov
lcall
sbb
add
sub
repnz
inc
xchg
movsb
sub
into
jb
out
clc
xchg
bound
insb
sbb
or
jns
adc
mov
ja
xor
jecxz
jge
decb
pushf
data16
adc
and
adc
fsubr
popf
mov
push
mov
xchg
lock
fadds
shl
xchg
cmp
sti
or
mov
dec
xor
pop
sbb
addr16
jle
dec
sub
repz
mull
push
or
ljmp
cltd
insl
loope
popa
jge
and
or
sub
mov
sbb
imul
int
xor
cmp
fistps
lock
in
pop
cmpsb
imul
pop
pop
stc
mov
push
cltd
jnp
loop
push
cmp
aaa
aas
ret
lret
xchg
mov
and
enter
aam
test
test
and
out
rcrl
aaa
add
sbb
jbe
pop
outsb
add
popa
inc
xlat
mov
arpl
mov
fmul
imul
adc
int3
push
and
repnz
pop
lret
and
pop
cld
dec
shl
in
inc
cmp
sbb
or
adc
sbb
iret
popa
push
in
pop
pop
xor
scas
push
add
sbb
mov
and
cmp
lods
sti
jp
cli
or
xor
mov
sbb
loopne
pop
adcb
cltd
inc
orb
mov
cwtl
mov
pop
ret
call
add
jae
scas
shrl
out
jmp
js
dec
or
pop
stc
adc
adc
stos
cs
fsub
lods
popf
mov
push
popa
ja
mov
daa
js
mov
inc
push
pop
and
mov
pop
lea
fidivl
push
aam
sub
pop
int3
arpl
xlat
cmp
push
pushf
cmp
scas
adc
xorb
jl
mov
addr16
stc
pop
inc
rcll
aaa
loope
lcall
sub
mov
pusha
dec
pop
jp,pn
mov
mov
lds
adc
aam
pop
std
int3
adc
or
sub
sub
sti
xchg
int
pop
test
sub
aam
mov
int
dec
iret
sub
das
or
push
mov
imul
sub
nop
aaa
sti
sbb
gs
xchg
dec
pushf
lret
sub
sub
in
sti
mov
jne
push
dec
cmpsl
shr
ficompl
ljmp
push
add
pop
pop
cli
arpl
jp
loopne
dec
sbb
insl
insl
mov
mov
sahf
adc
gs
fs
pop
imul
sub
inc
cmp
pop
xchg
add
sub
adc
dec
out
push
cli
adc
sub
loop
or
push
fmuls
jnp
push
movsb
nop
or
stos
fsubr
movsl
cmp
jno
xchg
push
jge
jl
sbbl
add
fptan
mov
cltd
mov
popa
jo
add
pop
lahf
lcall
mov
pop
js
mov
sub
scas
shrl
sbb
adc
jo
addr16
jl
cltd
mov
sub
inc
push
mov
and
jne
mov
jbe
xor
frstor
test
mov
and
pop
out
sub
in
cmp
daa
insb
dec
popa
mov
pop
popa
popf
lret
mov
dec
sub
pop
xor
test
bound
ljmp
add
jecxz
lret
xchg
pop
outsl
enter
cltd
je
fwait
jecxz
lods
xchg
lret
push
dec
xchg
push
rcr
push
mov
mov
dec
xchg
leave
mov
add
lret
lds
jns
cmp
lods
and
lret
clc
jbe
sbb
cli
and
jb
shlb
sahf
xorl
addr16
or
js
mov
push
cmpsl
lret
fcmovbe
scas
add
stos
push
int
pusha
test
adc
mov
sbb
lock
outsl
stos
out
movsl
shlb
bound
sub
add
add
mov
imul
call
jne
dec
mov
add
sub
scas
ljmp
fmuls
sub
push
jne
sbb
out
sub
into
cld
movsb
lock
aaa
or
mov
cmp
cli
pop
cli
in
push
mov
aam
xchg
xlat
call
cmpsb
add
test
mov
jmp
sub
mov
dec
xchg
cmp
mov
dec
pop
and
jns
dec
aad
std
sub
xor
dec
inc
iret
and
or
sub
jge
jb
sub
cmp
iret
repnz
in
loop
and
pop
and
mov
xor
and
pusha
mov
iret
repz
xorl
push
mov
pop
aad
mov
push
inc
xchg
loope
add
sti
mov
and
push
popa
push
test
int
fcmovnu
push
insb
nop
sarl
insl
pushf
dec
adc
fldenv
add
mov
fldt
iret
out
jb
call
xchg
cmpsl
mov
dec
adc
fbld
push
or
ja
xlat
pop
fiaddl
or
lods
jne
cmp
mov
push
or
mov
inc
add
std
sub
test
xor
mov
nop
test
xlat
add
jle
or
push
pop
incb
xchg
loopne
pop
iret
lock
or
xchg
stos
cmp
jp
lock
mov
mov
and
push
test
out
mov
insl
imul
pop
xchg
add
and
pop
push
push
cmp
and
icebp
fildl
xor
stos
jge
jno
dec
xor
ss
xchg
jno
sbb
adc
push
or
popf
adc
fdivrs
lahf
loope
cld
fwait
or
cmp
test
mov
cmpsl
inc
lret
inc
mov
and
dec
mov
cwtl
sti
pop
nop
daa
in
stos
and
insb
cltd
je
xchg
xor
testl
push
sbb
inc
aam
shl
and
mov
shlb
xchg
rorb
jl
shl
mov
and
cmp
pop
jecxz
fcom
lods
test
xor
fdiv
and
cli
mov
test
cmp
aad
sub
test
jb
lret
ljmp
xchg
cmp
test
jne
fldcw
mov
adc
mov
fs
inc
push
pushfw
push
push
sub
loope
pmulhuw
push
sub
add
les
pushf
fiaddl
lods
sub
or
out
js
dec
jp
or
insb
pop
test
sbb
pusha
mov
add
adc
lock
or
adc
xchg
loope
aad
pop
gs
mov
sub
movsl
gs
mov
call
add
test
repnz
add
sub
mov
sub
imul
sub
repnz
or
pop
imul
ds
xchg
sub
add
imul
push
loop
aad
je
mov
hlt
mov
pop
in
sbb
lcall
call
cwtl
gs
mov
int3
pop
jmp
xchg
or
mov
pushf
fwait
cmc
pop
pop
loopne
jge
shl
pushf
cmpsl
add
mov
push
sub
jns
pop
stos
jge
ret
lock
xor
sbb
imul
call
daa
ljmp
and
and
loop
or
sub
pop
push
movsb
jge
orb
dec
sub
mov
cli
out
adc
jge
sarl
icebp
test
shl
sahf
out
stos
sub
call
pushf
and
and
and
cmp
dec
xor
mov
xlat
jnp
mov
adc
push
and
lods
bound
out
push
or
push
jle
lea
out
push
cmp
fadd
in
mov
or
mov
add
and
dec
hlt
call
cmpsb
sub
icebp
sub
outsb
and
sar
data16
push
rorb
mulb
pop
leave
push
bnd
rcl
aad
dec
cmp
stos
adc
cmp
mov
push
sub
xchg
adc
cmpsl
daa
or
jge,pn
es
xor
add
cli
push
sbb
adc
loopne
or
and
sub
rcrb
mov
cltd
inc
cmpsl
mov
cltd
out
sub
mov
testl
inc
lods
xchg
sbb
fsubrs
add
jp
call
dec
icebp
aad
cmp
cmp
lock
out
dec
adc
icebp
pop
cli
out
outsl
xchg
cmp
or
outsl
pop
addb
pop
or
in
and
pop
subb
add
loop
pop
outsl
pop
ljmp
push
xchg
and
sbb
push
lret
repnz
std
pop
jecxz
movsb
dec
sbb
les
inc
xor
fcmovne
push
movsl
loopne
and
xchg
out
repz
and
pushf
ss
mov
lods
pusha
divb
jb
loop
and
ljmp
and
mov
mulb
add
and
stos
jne
pop
pop
mov
imul
cmp
xlat
push
cmpsb
repnz
pop
mov
cmp
xlat
pop
mov
mov
inc
mov
and
adc
and
adcl
mov
push
add
add
push
and
pop
into
lods
cmp
out
add
cwtl
or
inc
cwtl
cwtl
pavgb
or
or
add
out
gs
cmp
cli
int3
fistps
cli
jge
sbb
add
jbe
push
clc
mov
fldcw
idivb
xchg
xchg
clc
movsl
mov
inc
sub
pop
inc
inc
test
and
in
ret
aaa
mov
cmp
adc
pop
nop
lret
js
add
je
ret
push
test
and
dec
adc
orb
mov
out
shrb
movsb
mov
sub
js
jae
fcmovu
inc
mov
les
addr16
inc
jl
dec
and
and
mov
add
cli
push
push
aam
pop
ljmp
add
es
out
arpl
lock
dec
out
mov
cli
and
addr16
lret
out
push
cmp
lods
cmpsb
js
xchg
sbb
imul
dec
icebp
xchg
fnstsw
add
sub
out
loopne
lea
push
and
lcall
dec
mov
lret
push
and
mov
push
test
push
jle
push
mov
mov
adc
xchg
popa
ljmp
xchg
cmp
sbb
jecxz
repnz
add
cwtl
and
pop
and
lods
repz
fsubs
mov
in
lea
loop
jp
sbb
fwait
pop
es
into
or
scas
icebp
mov
out
sbb
mov
or
icebp
pop
mov
fildll
xor
hlt
rorb
subb
push
cwtl
push
pop
jle
stc
ret
leave
cwtl
mov
popf
sti
arpl
das
jno
mov
outsl
jae
lret
adc
mov
mov
xchg
pushf
mov
push
icebp
inc
dec
arpl
pop
push
xor
ljmp
or
outsl
loope
mov
insl
sahf
arpl
rclb
aam
leave
adc
jge
xor
es
std
pop
repnz
inc
jae
clc
out
cmpsb
lret
xchg
push
jo
fcompl
movsb
sbb
aam
popf
lock
mov
aaa
and
or
es
enter
mov
inc
rcll
sbb
lret
and
pop
sub
mov
loopne
sbb
sbb
ds
jmp
ds
jecxz
mov
test
adc
xchg
inc
adc
out
or
test
push
sti
lea
pusha
mov
std
ret
jle
outsl
dec
push
cmpsl
icebp
aas
sti
sub
and
mov
cwtl
pop
push
mov
into
adc
mov
adc
sub
fldcw
xchg
inc
popa
movsl
cmpsb
mov
mov
sbb
add
sub
xchg
sbb
aam
pop
or
sbb
shlb
bound
inc
iret
cmc
mov
int
stc
outsl
lret
mov
leave
xchg
jmp
es
scas
jne
out
push
addr16
test
add
clc
ret
xchg
add
outsl
cli
test
loope
fimuls
sub
sti
mov
add
cld
pusha
jmp
iret
sbb
and
sbb
rcrl
gs
sub
icebp
mov
and
mov
push
test
add
loope
xlat
add
lods
daa
push
cmpsb
repnz
sub
fdivrs
push
out
repnz
and
out
xchg
fimull
and
lcall
sbb
aaa
rcrb
mov
dec
gs
dec
xchg
and
notl
aad
add
adc
sub
sbb
jmp
sbb
out
or
sub
fisubs
mov
test
push
jecxz
xor
lods
aam
mov
jno
jg
sahf
or
dec
mov
mov
sub
add
pop
sbb
mov
pop
xchg
test
call
mov
mov
xchg
xchg
inc
cmp
test
push
dec
jge
in
imul
hlt
sub
add
pop
pop
mov
outsl
enter
mov
cli
ljmp
add
test
rol
movsl
sbb
pop
xor
and
pop
enter
pop
lock
sub
or
sub
daa
mov
nop
outsl
inc
adcl
loop
add
inc
cmpsb
push
ja
loopne
mov
cmpsb
jecxz
and
push
dec
push
mov
dec
mov
aam
daa
rorb
cwtl
cwtl
sbb
xchg
jecxz
neg
sbb
in
mov
fmull
cmc
sti
gs
add
push
mov
or
js
add
xor
or
sub
pop
jl
fdivl
mov
js
nop
cmpsl
xor
or
sbb
call
rorb
sbb
mov
loopne
jge
add
sbb
ljmp
cmp
std
push
ret
in
aam
pushf
sub
mov
mov
mov
iret
and
std
pop
in
and
inc
loopne
jno
adc
and
push
pop
xchg
xchg
jge
xchg
push
inc
idiv
adc
jmp
movzbl
push
mov
ret
push
js
jbe
ja
jmp
js
mov
inc
cwtl
stos
outsl
pop
cmp
iret
and
dec
jmp
push
cwtl
xchg
mov
or
xchg
push
pushf
pusha
xchg
repz
mov
outsl
inc
outsl
mov
sbb
test
xlat
out
sahf
add
frstor
xlat
pop
lcall
test
leave
push
or
add
sbb
sbb
jo
or
mov
inc
daa
pop
mov
fsubrs
subl
in
and
adc
cmc
mov
gs
cmp
cmpsb
add
lock
sbb
or
jbe
testb
sbb
test
sub
sub
sub
adc
mov
xchg
paddb
mov
jge
or
dec
adc
outsl
and
mov
andb
add
loop
mov
pop
push
mov
pop
ljmp
jecxz
cwtl
movsb
push
fnstenv
loop
mov
pop
pop
leave
sub
mov
sub
repnz
push
jp
cwtl
xchg
dec
stos
dec
lea
into
and
js
movsl
insl
pop
lret
enter
lret
out
add
dec
fisubl
adc
cmpsb
stos
xchg
aaa
repnz
lahf
inc
lcall
push
adcl
lret
mov
xlat
repnz
inc
movsb
subb
mov
fwait
dec
pusha
test
jae
sub
and
jecxz
jg
pushf
adc
jecxz
negl
iret
data16
sbb
mov
out
and
sbb
faddl
inc
jbe
sbb
mov
ret
xchg
pushf
xor
push
js
ja
rcrl
cmpsb
adc
clc
call
sub
leave
push
js
mov
add
xchg
packuswb
out
push
fwait
xchg
or
outsl
fs
sub
sbb
sbb
sar
stos
popa
ficomps
push
sub
mov
repz
or
repnz
dec
outsl
mov
loope
cli
data16
inc
sub
add
and
dec
insl
push
mov
arpl
rcl
mov
stos
and
sbb
out
pop
sub
sbb
out
xchg
jnp
or
mov
xor
sti
clc
pushf
adc
stos
or
cmp
enter
sub
xchg
outsb
iret
in
adc
aaa
xchg
push
bound
mov
movsb
scas
icebp
popf
sbb
cltd
mov
inc
push
ret
icebp
call
iret
mov
aam
push
or
adc
test
movsb
inc
ret
imul
stos
pop
and
adc
fistl
pop
cwtl
cmp
adc
cmp
arpl
and
fwait
addl
and
jle
test
xchg
xchg
mov
shrb
adc
icebp
in
fstl
inc
sub
sub
xchg
iret
insl
movsb
aam
mov
mov
xchg
jae
mov
dec
sub
push
popa
int3
movsb
jl
and
and
lret
cwtl
push
sbb
jnp
and
call
xchg
xor
jae
cltd
add
hlt
pop
dec
inc
dec
fs
movsb
push
dec
in
hlt
sbb
fwait
into
out
xor
stos
sbb
cmc
imul
jno
cmp
and
mov
adc
xlat
jge
fnstenv
jo
sub
inc
repz
and
sub
rclb
xchg
cmp
dec
push
fistpl
mov
jnp
int3
call
mov
inc
dec
insb
mov
adc
sub
sahf
adc
mov
mov
sbb
arpl
out
xor
imul
stos
aas
mov
es
clc
repnz
ja
aam
pop
xchg
pusha
jnp
lret
jge
mov
xchg
mov
mov
sub
dec
mov
inc
test
add
pop
xor
shll
jge
fcoml
test
jmp
mov
push
add
cmp
sbb
dec
pop
outsb
mulb
dec
cwtl
unpcklps
push
insl
adc
test
add
ret
mov
sbb
adc
inc
fildll
cs
imul
push
xchg
xchg
sub
and
push
pop
in
cld
push
fwait
out
dec
xor
ljmp
cmp
test
sub
add
xadd
and
xchg
xor
sub
incb
lock
stc
call
pop
mov
mov
mov
jmp
sbb
filds
add
jle
sub
push
mov
pop
mov
mov
mov
add
sub
sbb
int
xchg
lea
jle
jns
xabort
jl
imul
push
call
cwtl
mov
addr16
ficomps
add
fistl
ja
push
push
ljmp
imul
push
loope
out
cli
and
sub
sub
dec
lds
sbb
cmp
aas
sbb
adc
sahf
lods
fdivl
mov
mov
stos
mov
rcl
adc
mov
pop
enter
mov
dec
popa
imul
mov
sahf
sub
push
cld
cli
insl
call
test
dec
fdivrs
push
sub
mov
scas
notl
leave
sarb
aam
cs
dec
jbe
mov
into
add
pop
mov
shll
push
cmp
jno
cli
rcrl
adc
cmpsb
and
sbb
int3
sbbb
pusha
cmp
push
jl
mov
nop
ljmp
push
push
clc
sbb
dec
sub
xor
sbb
lret
cwtl
ret
adc
adc
sbb
adc
int3
or
fwait
out
pop
mov
rolb
test
bound
mov
mov
xchg
xchg
stos
jge
lret
vmovaps
nop
jnp
ficompl
sub
sub
push
mov
mov
ret
sub
rcrb
sbb
add
pop
add
xchg
negl
mov
jo
call
sbb
aam
fdivs
cwtl
call
outsl
sub
mov
clc
lea
push
ud2
es
fimuls
call
adcb
dec
xor
xchg
add
add
sub
pop
mov
mov
sub
jle
popa
mov
jno
cwtl
aaa
popf
mov
push
jne
dec
pop
cli
int3
pop
cmpb
lock
cmpsb
dec
aaa
or
sub
lea
xor
add
mov
lock
cmpsl
jno
pop
add
mov
call
testb
and
arpl
pop
in
mov
sub
jne
sub
sbb
subb
fucomp
dec
dec
sub
xor
pop
fiaddl
or
push
or
aam
lahf
popa
rcl
sub
js
sti
mov
jb
pop
mov
and
or
aas
insl
in
mov
popa
xchg
imul
mov
sbb
jae
inc
sbb
or
lret
rclb
ja
adc
push
fisttpl
les
pushf
lea
sub
sahf
cli
iret
imul
xchg
dec
repz
push
std
pusha
fldcw
pop
daa
int
in
add
iret
and
adc
xor
sub
sub
jge
outsb
insb
xchg
push
fsubr
xchg
pop
or
sub
and
ljmp
aam
or
outsl
jno
push
je
cmp
setg
mov
push
daa
in
sbb
call
sbb
sbb
or
in
shr
out
jmp
imul
sbb
es
jge
add
or
daa
ljmp
repz
lock
or
sub
hlt
jmp
fwait
mov
call
mov
jl
cltd
xor
inc
popa
dec
in
or
adc
inc
lds
xchg
call
mov
clc
std
xchg
cltd
xor
call
outsb
mov
loope
insl
dec
or
call
or
leave
mov
or
cmp
inc
jmp
xchg
add
out
adc
movsb
loopne
sub
movsl
pushf
aad
inc
sbb
adc
or
clc
jmp
push
xor
in
sub
mov
sbb
sbb
ret
sub
pushf
movsb
daa
and
mov
icebp
out
sub
and
das
sub
jnp
or
insb
dec
pop
or
adc
pop
xchg
adc
das
mov
or
cmp
loopne
lret
push
push
xchg
push
mov
pop
pop
scas
sbb
repz
xchg
pop
adc
xchg
jmp
daa
sub
add
neg
movsb
lea
shlb
adc
mov
cmp
inc
cli
adc
mov
xchg
ds
sarl
cmp
cmpsb
push
movl
dec
sbb
movntq
lret
sub
mov
jmp
clc
jnp
into
call
sub
in
cmp
cli
push
repnz
cmpsl
hlt
sub
inc
dec
sbb
pop
pop
adc
aad
roll
xchg
addr16
cld
stos
sbb
movsl
int3
aam
daa
faddl
xchg
pusha
out
or
fcoml
sbb
add
lret
lock
mov
xchg
fsubrp
out
jg
sbb
sbb
fstps
pop
mov
popa
scas
adc
xor
pop
xchg
leave
xchg
dec
lcall
lcall
sub
push
stos
inc
xchg
js
mov
daa
jle
jl
xchg
pop
cwtl
jp
divl
cmpsl
cmp
sbb
lret
repnz
imull
sbb
inc
pusha
dec
add
push
test
outsl
or
cmc
or
aas
daa
leave
dec
into
adc
popa
scas
push
xchg
in
mov
xor
sbb
sbb
movl
in
in
dec
xor
or
daa
pop
lret
mov
rclb
ffree
out
inc
sti
adcl
cmp
push
xchg
fmull
insl
xchg
rcll
adc
dec
sub
pusha
adc
out
mov
stos
iret
out
xchg
rcrb
sbb
lahf
scas
push
imul
or
clc
adc
idivb
aaa
mov
xchg
out
je
sbb
icebp
adc
or
nop
push
push
outsb
scas
insb
lods
jmp
fsubrl
in
dec
pop
call
inc
push
pop
cld
lret
mov
cmpsl
fiadds
pop
add
cmpsl
sub
aam
scas
inc
sbb
xchg
or
add
mov
scas
mov
dec
mov
adc
xor
bound
mov
inc
int3
shll
out
xchg
mov
iret
out
dec
mov
sbb
out
aam
into
mov
out
sbb
mov
lods
aam
outsb
inc
and
xchg
xchg
nop
adc
inc
xchg
push
dec
cmp
pop
icebp
and
fcoms
call
mov
jbe
out
and
movl
pop
bnd
jo
int
and
int
lock
sbb
insl
dec
mov
repnz
mov
jbe
notb
cmp
insl
cmp
pop
mov
sub
cmp
aad
icebp
mov
and
jmp
sub
repnz
mov
inc
in
in
call
and
and
loopne
push
jecxz
repz
or
sub
insb
js
mov
mov
pop
cmpb
jno
cld
pushf
or
xchg
xchg
add
mov
xchg
or
and
popaw
jg
and
fdivr
int3
xchg
xchg
lea
cli
loop
std
jmp
sub
add
dec
popa
push
push
pop
xchg
push
inc
fwait
shlb
les
or
nop
mov
pop
ljmp
repnz
mov
push
pop
inc
pop
push
push
bound
sub
adc
inc
lods
daa
push
xchg
sub
clc
in
mov
scas
push
movsb
sub
pop
jge
push
xor
inc
jne
jb
sahf
pop
in
adc
push
cld
inc
adc
in
sub
and
nop
cmc
stc
stos
cmp
out
arpl
inc
mov
int3
cld
push
xor
and
call
shlb
pop
and
or
lea
jmp
dec
ja
jno
rorl
inc
sahf
repnz
rorl
leave
aad
cmp
and
loope
push
unpcklps
leave
and
sti
fnstsw
sub
jge
jp
push
outsl
xchg
movsl
xor
cmpsb
jmp
mov
test
lods
xor
push
mov
sbb
out
bound
add
pop
test
sub
into
data16
fistl
add
and
pop
movsl
xchg
mov
rol
sub
lret
cmp
pop
and
into
add
push
xor
add
ds
adc
ret
rolb
sbb
or
mov
push
lock
sub
xor
inc
shlb
es
stos
repnz
nop
pop
shrl
mov
pusha
bound
xor
in
xchg
in
sub
push
pop
push
cli
test
loopne
mov
repnz
das
and
sub
fwait
sti
movsb
mov
loopne
sti
and
xchg
es
out
inc
or
mov
mov
mov
add
rclb
fwait
pop
sbb
adc
push
bts
mov
sbb
and
out
push
jle
push
pushf
or
aam
jmp
inc
aaa
cmp
loopne
jo
sbb
out
add
repnz
insl
push
pop
call
std
and
into
cli
dec
push
aaa
pusha
clc
in
aas
push
or
or
cwtl
push
into
push
sbb
adc
adc
sub
aas
out
sbb
mov
stos
repnz
push
push
adc
dec
pop
push
or
outsl
ljmp
and
push
divb
sbb
js
hlt
ret
mov
inc
xlat
pop
ljmp
xor
xchg
dec
dec
mul
and
xchg
idivl
push
and
jecxz
or
push
movsb
ds
and
jle
inc
push
sbb
and
jg
and
lret
jo
daa
push
xor
xchg
jnp
add
fs
jns
and
bound
jbe
out
sub
sbb
imul
sub
fwait
aam
mov
in
fs
sub
fisttps
ss
add
dec
pusha
test
and
fisttps
es
mov
loopne
shr
and
sub
push
jo
pop
aas
push
icebp
cmpsl
inc
inc
out
push
xlat
inc
fisubs
and
fisubl
out
sbb
fidivrs
inc
jnp
and
dec
pop
cmp
xchg
fstpl
lock
lcall
lock
ficomps
sbb
inc
out
adc
imul
and
mov
jecxz
pop
pop
ret
jle
orb
and
pop
pop
lret
xchg
sbb
test
adc
dec
clc
inc
mov
mov
mov
or
imul
sti
outsl
sub
outsl
dec
stos
xor
adc
notl
movsb
aam
or
in
pop
bound
lea
mov
add
jg
push
adc
sub
mov
test
cli
inc
and
out
mov
lea
and
inc
ljmp
xchg
xor
xlat
fadd
sbb
inc
data16
fisubl
sarb
out
jp
fstps
enter
or
dec
sti
test
fwait
cld
sbb
lret
icebp
inc
and
gs
and
sbb
add
ds
daa
xchg
stos
std
out
cmpsl
push
and
out
dec
out
xchg
pop
xchg
push
cs
pop
sub
push
scas
test
mov
jae
popa
xor
sub
lock
pushf
mov
imul
adc
push
dec
inc
adcb
andl
frstor
arpl
and
cltd
call
nop
inc
aam
add
lahf
test
or
push
push
aaa
ret
jb
out
sbb
ret
sub
ljmp
and
xchg
mull
ret
movsb
icebp
xor
push
mov
push
and
sbb
sub
inc
outsl
lds
lret
push
cmp
xchg
mov
jl
fcoms
pop
dec
movsl
iret
fcompl
stos
lea
mov
xor
sti
add
lret
cltd
test
addr16
insl
jl
lahf
ret
adc
sbb
and
sbb
sbb
xchg
iret
pop
out
sbb
xchg
xchg
mov
dec
out
push
dec
clc
jge
cmp
jae
insb
push
pop
bound
stos
iret
popa
push
adc
je
mov
mov
movsl
sbb
push
add
or
ljmp
popf
push
cwtl
clc
add
hlt
inc
pushf
cmp
int3
insb
pop
enter
mov
sub
adc
add
faddl
adc
in
push
sbb
inc
loopne
adc
inc
mov
adc
les
pop
ficompl
mov
jmp
repnz
jmp
adc
and
aam
std
mov
inc
xor
mov
in
inc
xor
mov
mov
cltd
xchg
es
mov
or
xchg
out
lds
sahf
and
out
stos
or
adc
scas
lods
sbb
mov
cmp
loopne
jnp
xor
or
ret
inc
bound
mov
cmp
outsb
mov
or
cmp
adc
pop
cmp
aad
cmp
mov
or
outsl
mov
sub
out
cmpsl
mov
daa
adc
movsb
lret
ret
sub
leave
iret
mov
adc
add
fadds
mov
cli
repz
or
xchg
std
fisubrs
mov
stos
push
lret
ja
add
fstpt
sub
inc
loopne
in
cli
sub
xchg
ds
test
add
in
adc
aam
popf
inc
sbb
inc
js
and
push
push
sub
dec
mov
pop
cltd
jnp
mov
adc
leave
push
icebp
sbb
cmc
cwtl
es
sbb
cmpsb
sub
push
movsb
sbb
pusha
sahf
insb
mov
mov
pop
orl
test
arpl
incl
adc
mov
sbb
repz
xchg
pop
and
and
adc
loopne
mov
ss
movsb
sbb
std
or
es
adc
roll
pop
xchg
enter
loope
or
mov
test
and
cmpsl
movsb
add
cmp
popf
aam
ja
test
jb
in
sub
test
negl
lds
xchg
jmp
imul
ljmp
mov
or
loope
add
xor
lods
fs
cltd
sub
cld
lea
mov
add
test
xor
popa
adc
adc
add
sbb
lods
cmp
lcall
in
loope
sbb
pop
sarl
aad
jb
sbb
or
scas
popa
insb
int3
lcall
lcall
rolb
dec
mov
mov
push
pop
call
inc
sti
xor
dec
mov
sub
scas
aam
insl
in
cmp
arpl
shrb
sbb
xchg
ret
pop
sbb
loop
lods
ffreep
xlat
sub
sbb
repnz
add
adc
xchg
sbb
sahf
ret
xchg
dec
pop
enter
ret
adc
out
jmp
sub
mov
lds
push
insw
stos
xor
push
xchg
add
arpl
push
mov
jecxz
call
jmp
sarb
jle
cmp
push
and
add
loopnew
push
or
pop
ret
icebp
sbb
jnp
insb
lea
cmp
inc
mov
test
in
adc
call
mov
jge
loopne
push
shll
in
andl
jecxz
push
ja
push
dec
movsb
push
ds
and
mov
mov
rclb
pop
aas
adc
adc
pop
push
adc
jno
inc
pop
fsubrl
ret
cmp
ret
mov
aam
push
and
lcall
cmpsl
and
add
notb
outsl
divl
lahf
mov
pminsw
mov
arpl
inc
push
out
iret
fwait
dec
loope
sti
fs
xchg
mov
sub
adcl
dec
pop
into
fdivrs
imul
out
mov
bound
and
mov
nop
je
adc
xchg
movsl
fwait
push
push
inc
xor
pushf
js
sub
xchg
aaa
sbb
vphaddubq
aaa
push
sub
mov
push
rcll
cmp
xor
xor
jae
rclb
and
and
loopne
sub
arpl
xor
ljmp
xchg
cmp
rclb
in
mov
test
xchg
sub
inc
inc
xor
cmpsl
sti
aam
push
adc
arpl
jp
sbb
mov
or
mov
inc
int
lcall
mov
sub
in
cmp
es
xor
ljmp
out
jnp
or
repnz
mov
xchg
add
jns
xchg
imul
test
fldt
dec
ljmp
imul
sbb
enter
sub
sbb
in
and
loop
es
or
and
xor
cli
and
cltd
cmpsb
daa
mov
leave
and
sub
inc
cs
push
xchg
adc
stos
push
sub
and
bnd
xchg
fs
lock
ret
xchg
sub
pop
stos
sarl
aas
cwtl
data16
popf
repnz
lea
outsl
loopne
pop
sbb
clc
in
add
in
js
lods
repz
daa
test
lea
outsb
sbb
es
clc
sub
dec
push
mov
mov
movsb
push
sub
stos
test
adc
pop
dec
add
lret
sub
fwait
sub
ljmp
jmp
add
mov
mov
scas
dec
xchg
notb
or
and
xlat
mov
cmp
lret
test
pop
mov
cmp
lret
mov
clc
pop
call
adc
sub
stc
xor
mov
jnp
arpl
sub
stos
lret
fsubs
xchg
sub
xor
jmp
iret
ljmp
imul
leave
push
inc
and
in
cmc
ja
pop
mov
cld
mov
mov
fdivs
jae
push
or
push
in
adc
adc
insl
and
stos
push
cld
sahf
push
lods
lcall
sbb
std
sbb
push
std
cmp
mov
sub
pop
sbb
ds
insb
lcall
mov
cmpsb
adc
js
adc
jae
cmp
aam
stos
dec
lds
push
insl
jo
out
sbb
loopne
pop
adc
leave
jle
cli
push
mov
pop
xchg
dec
adc
mov
test
xlat
loop
inc
bound
jge
pop
or
in
jmp
mov
jmp
pop
scas
in
fsubrs
jbe
test
repnz
xchg
xchg
rol
or
adc
movsb
or
push
sbb
sbb
mov
aas
aaa
shlb
sbb
cmp
out
pop
pop
and
idiv
fadds
push
push
push
push
or
fistpl
jne
repnz
mov
and
xchg
jecxz
repz
adc
pop
add
jae
scas
dec
aas
pop
adc
sub
mov
pushf
xor
fcoms
pop
jecxz
das
fwait
jle
sbb
jae
or
sbb
movsb
or
xchg
fdivp
jae
jl
ljmp
mov
adc
lret
and
cwtl
stos
push
pop
andl
movsb
daa
push
pop
daa
xor
loope
and
mov
xor
mov
mov
push
daa
xchg
das
inc
xor
adc
push
fs
and
pusha
test
mov
fisubrl
arpl
and
inc
mov
xchg
dec
fstl
adc
inc
mov
and
xchg
mov
push
add
repz
fs
in
sub
push
sbb
imul
xchg
mov
movsb
les
xchg
fildl
mov
and
push
ljmp
jp
movl
test
loop
add
sbb
pop
cltd
andb
inc
mov
push
daa
push
mov
jo
cmpsb
xchg
sbb
pop
jae
ljmp
lds
inc
push
jmp
movl
xchg
mov
jl
test
or
stos
dec
daa
mov
cmp
push
sbb
add
or
in
into
adc
scas
data16
out
or
sbb
add
cmpsb
imul
cli
bnd
sbb
xlat
clc
fs
loopne
jle
push
mov
inc
test
lock
call
int3
pop
enter
fsubr
sub
mov
ret
repnz
sti
xchg
push
arpl
test
sbb
adc
repnz
pop
and
scas
popa
mov
inc
ds
sbb
add
pushl
xchg
sub
xchg
lret
mov
sti
sbb
and
ljmp
sub
mov
leave
pop
cmpsb
pop
lods
xor
cwtl
imul
sbb
pusha
push
adc
inc
xlat
jo
pop
mov
push
xchg
ljmp
push
jnp
or
lds
daa
xchg
mov
xor
setb
add
ret
sbb
add
pop
mov
ja
call
sub
fwait
add
repnz
mov
frstor
pop
xchg
inc
sbb
add
pop
adc
cld
leave
inc
and
lahf
push
push
mov
lods
popf
pop
fstps
and
add
rolb
sahf
cmpsl
lods
iret
mov
sbb
sub
and
cmpsl
mov
sub
cmp
mov
int
lods
test
jg
push
xchg
inc
addr16
add
sti
sub
cltd
fstpt
popf
xchg
test
repnz
dec
xor
les
sbb
xchg
rcl
mov
jl
mov
mov
mov
xor
fiaddl
adc
pop
push
xor
and
mov
adcl
add
push
cltd
movsb
clc
xor
mov
lea
cli
js
mov
cltd
pushf
pushf
and
dec
lock
and
clc
push
addb
repnz
add
testl
inc
pop
ljmp
ffree
adc
dec
cld
jmp
leave
inc
rorw
cmp
pop
call
fstps
cltd
mov
decb
movsb
stos
mov
sbb
and
scas
lret
stc
pop
js
incl
testb
adc
xor
ljmp
imul
hlt
sbb
cmp
in
adc
rcll
loopne
add
mov
pop
lods
push
pushf
cld
scas
xchg
shrb
push
push
xchg
daa
repnz
jne
mov
sbb
out
popa
aas
xchg
movsb
fs
das
fildl
and
out
fidivrl
xor
enter
pop
test
xlat
pop
daa
popf
out
inc
xchg
stos
shlb
and
pop
cld
addr16
jmp
ret
or
repz
enter
icebp
hlt
push
and
pushf
mov
inc
lods
outsb
pop
sahf
fidivs
xchg
sbb
sbb
int3
mov
out
fdivp
cmp
lods
push
fcmovnb
sbb
xchg
and
test
subb
and
jbe
pop
inc
pop
sub
adc
sub
mov
repnz
or
fisubl
xchg
mov
fucomi
popf
push
stos
dec
cmp
ja
in
lcall
sub
lds
shll
popf
adc
inc
iret
mov
lcall
adc
daa
sub
mov
stos
sbb
aas
shll
scas
adc
jecxz
jg
loope
lea
pop
sub
pop
sbb
pop
mov
cmc
sbb
ljmp
nop
and
mov
orb
dec
jmp
mov
or
flds
push
enter
ret
adc
cmp
sbb
dec
rolb
ds
rorb
rcl
es
adc
adc
lods
or
inc
repnz
lret
add
inc
shrl
inc
std
scas
and
mov
xchg
loop
push
mov
push
repnz
mov
sbb
jge
pop
xor
jecxz
inc
push
std
pop
cmp
ds
insb
xor
ror
inc
js
jmp
pop
fidivrl
ds
aam
sbb
fs
and
lret
rolb
insb
dec
sbb
jbe
and
cld
clc
cmp
dec
and
mov
lcall
push
cld
xor
cmp
mulw
cmp
inc
movsb
cmp
mov
xor
or
sahf
sarl
fmul
adc
sub
dec
aam
xor
adc
pop
lret
cwtl
leave
xchg
aam
or
orb
ret
xabort
cli
push
mov
cli
es
or
fidivrl
and
jnp
adc
pop
fists
sub
mov
jb
add
cs
mov
rcrb
leave
jo
or
inc
fs
mov
insl
cmp
aad
push
push
inc
sbb
subl
and
mov
xor
lods
imul
stos
repnz
imul
daa
inc
dec
and
cli
cld
lock
mov
arpl
mov
pop
or
inc
cmp
xchg
loop,pt
inc
out
lret
sub
push
enter
incl
mov
push
mov
pop
imul
fs
jns
dec
dec
lods
in
push
xchg
lret
je
aas
hlt
loopne
adc
sub
sbb
sbb
js
push
out
push
inc
push
jbe
jae
das
dec
dec
add
adc
inc
bound
movsb
mov
insb
dec
jae
mov
mov
pop
and
push
or
mov
sti
adc
rcrb
mov
and
loope
imul
fwait
or
add
and
jecxz
loopne
cmp
xchg
fsubr
sbb
mov
push
sbb
fdivl
inc
jbe
xor
les
mov
cmc
sbb
loopne
xchg
jo
add
or
aad
mov
pusha
lret
fistl
popf
adc
dec
dec
lock
or
out
adcl
mov
stos
test
loop
ficoms
xor
lea
arpl
jmp
add
fistl
fmuls
push
lret
pop
sbb
test
dec
loope
test
adc
test
mov
or
push
popa
test
sbb
xor
cmpsl
cmp
int3
mov
bound
and
sub
aad
mov
and
adc
and
sbb
out
cmp
cmc
fcomps
or
fimull
idivl
mov
mov
adc
bound
hlt
jecxz
out
popf
or
mov
add
pop
call
jecxz
dec
sub
mov
cli
jp
jnp
sbb
xchg
cmp
add
xchg
loop
ret
push
ja
push
inc
and
sbb
xchg
inc
out
add
pop
test
push
shll
pop
ss
repnz
mov
std
and
sbb
or
mov
movsb
xchg
jle
pusha
lret
repnz
sub
sub
sbb
aas
in
hlt
pop
and
push
fisubs
fstps
cmp
sub
mov
xlat
call
adc
xchg
sbb
call
cmp
dec
or
vmwrite
cmp
test
xlat
adc
popf
lret
popa
xchg
test
loop
pop
in
sub
mov
call
lret
andb
push
jl
and
les
push
jnp
and
std
push
ss
or
shlb
add
push
cmp
or
in
imul
pusha
dec
add
dec
or
adc
mov
adc
mov
cld
sub
xlat
dec
or
add
add
stos
orb
test
sbb
out
out
sub
aas
repnz
ljmp
xor
mov
sub
pop
jb
insb
xchg
aaa
sahf
mov
mov
outsb
cmpsl
sbb
sub
lock
fistpll
adc
int
call
jmp
repnz
cmc
popf
dec
adc
aam
mov
mov
mov
ret
and
movsb
xor
arpl
mov
andl
or
xor
mov
lret
mov
out
mov
jecxz
push
xor
inc
dec
popa
movsl
inc
stos
dec
push
mov
xor
out
dec
inc
push
inc
leave
xor
and
and
pushf
sbb
mov
jne
dec
adc
cmp
aad
iret
out
adc
lret
sbb
and
aaa
mov
xchg
enter
imul
aaa
lcall
hlt
pop
insl
imul
imul
sub
push
mov
push
das
xchg
add
test
pop
insl
xchg
scas
in
push
imul
in
and
xor
cmp
lods
mov
xchg
fisubrs
ja
adc
dec
push
leave
push
clc
sbb
xor
add
cld
daa
push
pop
dec
inc
sbb
add
or
daa
pop
sub
cmp
cmp
lea
dec
mov
aam
leave
adc
push
cld
roll
xchg
das
insl
bound
flds
test
imul
fimull
xor
push
cld
sub
cmp
out
mov
cld
stos
lret
mov
push
or
int
mov
movsl
jge
movsb
and
mov
pop
xor
std
cmp
mov
pusha
sub
adc
aad
jecxz
stos
cmpl
sub
sub
mov
mov
add
pop
xor
cmc
fwait
sbb
cmpsl
movsb
jns
aam
in
dec
mov
and
jnp
inc
daa
repnz
popf
lret
xlat
sub
aaa
loop
inc
cmc
sarl
cmpsb
add
mov
loopne
sbb
imul
and
mov
enter
jecxz
test
sub
or
push
pop
mov
sbb
stos
lock
dec
jmp
jmp
gs
inc
leave
movsl
xlat
and
gs
and
loopne
adc
cmp
das
xor
popf
sub
lock
call
mov
sub
out
xchg
out
jbe
es
or
out
cmp
scas
scas
cmp
imull
sub
in
xchg
cmp
jp
jne
fwait
in
movsl
or
cmp
inc
xchg
xchg
fwait
xchg
mov
call
mov
sub
sbb
mov
stc
daa
dec
stos
xor
fistl
dec
mov
mov
movsb
in
push
xor
push
sbb
xor
xchg
cmpsb
jnp
and
test
jl
movb
mov
pop
sbb
movsb
jmp
push
scas
lret
inc
mov
or
sub
pushf
and
xchg
faddp
iret
aas
pop
cmpsl
test
sbb
out
test
jbe
cmp
fnsave
mov
jp
jne
js
les
adc
pushf
sbb
lret
sti
mov
test
jno
dec
ljmp
or
int
fdivl
fcmovu
outsb
push
mov
lahf
or
push
insl
and
lock
icebp
test
out
fisubrl
adc
repnz
mov
hlt
fs
mov
xchg
mov
popa
out
xor
sbb
sub
cli
iret
xchg
out
or
in
pushf
jmp
lock
stos
mov
icebp
insl
cwtl
dec
jne
scas
aad
pusha
repz
pop
push
hlt
scas
ljmp
aad
int
adc
lods
sub
cli
push
out
xchg
outsl
pop
or
stos
dec
and
or
sub
jmp
imul
iret
outsb
scas
cmpsb
mov
call
das
call
mov
xor
aad
out
mov
movsb
lds
fs
cmp
cld
adc
and
cld
jae
pushf
iret
es
daa
sub
sub
cltd
shr
aad
daa
and
cmpsb
pop
or
fimuls
lock
sub
xchg
cwtl
cmp
xor
xchg
movsb
fs
jne
imul
fnstsw
sbb
cmp
fchs
mov
or
push
out
leave
sub
jl
sbb
lock
repz
pop
in
popl
fmulp
lahf
sbb
lcall
xchg
add
shrb
push
in
pop
js
mov
fsubp
clc
movsb
js
add
mov
pop
xchg
es
and
and
inc
xchg
pop
add
ret
sub
icebp
adc
subb
jge
push
popa
xchg
sbb
push
es
in
and
icebp
push
repnz
shufps
inc
in
sub
sub
jp
iret
outsb
ss
in
enter
fsubp
mov
pop
cltd
std
or
sbb
js
xlat
insb
aad
adc
dec
icebp
or
test
lret
cltd
inc
fwait
inc
adc
popa
call
cmp
mov
or
adc
mov
loopne
std
adc
and
or
mov
adc
cwtl
sti
sub
or
cld
sub
xor
lret
adc
lcall
mov
and
stc
push
sbb
in
cltd
push
repnz
mov
out
pop
xor
iret
mov
lods
stos
rorl
cmpsl
repnz
es
mov
int
add
fwait
sub
mov
cwtl
stos
sbb
addb
adc
cmp
mov
and
fistpl
push
fisttpll
repnz
js
push
or
imul
in
ja
out
movsl
lock
and
into
pop
scas
jno
loopne
push
and
push
jb
xchg
sarl
fistl
iret
push
dec
sbb
jnp
aas
clc
mov
xchg
dec
or
mov
dec
xchg
mov
push
xchg
and
repnz
pop
call
sub
stos
sub
mov
and
test
leave
dec
in
jnp
lock
test
xchg
sbb
sub
and
mov
cmp
adc
mov
jmp
dec
ja
and
les
gs
push
and
mov
popa
cmp
pop
cmp
push
shrb
loopne
aas
ds
bound
ss
mov
inc
and
out
dec
push
data16
pop
pop
cmp
push
cwtl
movsb
cmp
add
mov
mov
or
imul
and
sub
mov
negb
xchg
xchg
pusha
sbb
pop
clc
mov
outsl
imul
sub
push
test
mov
mov
dec
sub
pop
lret
bound
dec
ljmp
mov
sub
cltd
and
fldz
sub
push
shl
adc
fwait
sarl
sub
fildll
sbb
mov
popa
repnz
sub
imul
enter
stc
in
aas
mov
inc
ret
fs
test
outsb
push
add
and
sub
push
sbb
xchg
pop
add
les
loope
xchg
repz
cmp
leave
xchg
and
insb
imul
lahf
sbb
out
and
sub
mov
inc
cmpsl
lret
mov
push
xchg
test
stos
push
sub
xchg
or
push
imul
inc
fdivs
mov
mov
fisttpl
cld
cli
or
pusha
jb
lcall
add
push
pop
or
mov
inc
lret
andl
push
pop
cmc
push
push
inc
aad
cmp
mov
loopne
repnz
movsl
test
or
mov
push
shrb
mov
inc
sti
add
mov
adc
jmp
mov
and
or
sub
pop
test
shlb
repz
sahf
sub
test
fisubrl
sbb
sarb
fwait
or
lahf
in
pop
sbb
xchg
or
and
jmp
sub
mov
jb
rcrb
mov
bound
fisubrl
fcmovnb
jecxz
jle
and
xor
pop
cmpsl
aad
data16
imul
les
fstp
test
mov
stos
test
iret
mov
xchg
js
repz
sub
repnz
xor
cltd
mov
aas
lock
cmp
mov
fwait
pop
out
sbb
in
loopne
sbb
push
loopne
mov
mov
sbb
ja
rcrl
test
sbb
pop
sbb
push
jae
pop
popa
imul
stos
scas
fs
stos
ficompl
add
sub
jo
cld
push
xchg
add
sub
pusha
sbb
push
xor
and
movsl
and
cmpb
jb
in
movsb
test
pusha
push
fwait
cmp
test
jle
mov
test
sbb
adc
dec
xchg
call
mov
out
xchg
enter
test
icebp
repnz
loop
mov
sub
mov
sub
repnz
mov
sbb
outsl
fcmovnb
mov
push
mov
xchg
insl
mov
xlat
gs
jb
or
scas
adc
xchg
lret
adc
dec
leave
jmp
xchg
fcomps
inc
loopne
in
push
pushf
repnz
test
jae
mov
xor
adc
insb
mov
lock
sub
je
es
mov
in
xchg
sub
clc
jecxz
or
sbb
lcallw
and
or
ljmp
ret
push
popl
xor
xor
movsb
lcall
sbb
mov
mov
int3
mov
inc
out
mulb
bound
adc
sti
xlat
mov
or
push
das
mov
or
ss
sbb
or
mov
sbb
dec
adc
cld
sbb
insl
sbb
pop
stc
imul
mov
dec
jno
movsl
scas
mov
sub
mov
sub
ret
dec
aam
pusha
in
testb
inc
lock
iret
addr16
jmp
mov
and
test
cmp
mov
icebp
int
xchg
push
push
push
jge
jg
notb
push
repnz
sbb
into
test
repnz
mov
popf
xchg
sub
aad
pop
lret
dec
out
test
mov
pop
push
mov
stc
repnz
inc
pop
and
and
andl
push
inc
scas
nop
xor
push
xor
xor
or
cmc
jmp
jmp
lahf
movsl
sahf
fistps
fucomi
cwtl
imul
sub
pop
je
pop
xchg
add
icebp
jecxz
cmp
ss
addr16
stc
push
xchg
clc
xlat
fiaddl
es
shll
loop
pop
jb
adc
jle
test
mov
sar
fmul
aam
std
pop
push
imul
enter
jmp
push
mov
mov
adc
jb
add
cld
divl
mov
and
push
aas
ljmp
bound
push
push
ficompl
push
xchg
and
inc
xchg
xchg
orb
mov
pop
aaa
jnp
mov
lret
mov
xlat
repnz
mov
sbb
xchg
repnz
push
nop
xor
ret
jae
pop
lcall
adc
push
xor
mov
cmc
notl
or
out
mov
iret
mov
dec
pop
add
outsl
fiaddl
fstpt
int
mov
stc
sub
lods
sar
xor
adc
mov
xlat
out
subl
or
and
pop
mov
sub
mov
and
xchg
pop
ror
and
iret
mov
push
push
fs
sub
cmp
test
into
scas
or
pop
scas
adc
ljmp
adc
sbb
das
jge
push
adc
pop
lds
mov
cmp
or
sbb
in
xor
sbb
lahf
pop
push
jmp
call
std
jl
sub
data16
cmpsb
add
movsb
shrb
push
push
fdivl
or
mov
sub
push
push
and
jecxz
inc
pop
push
push
and
sub
in
arpl
filds
rorl
push
or
add
data16
fildl
lock
repnz
xlat
fcom
sbb
movsl
lret
fwait
aad
dec
or
movsb
popf
sub
loop
ss
popa
sbb
and
pop
stos
imul
push
fucomi
or
dec
daa
xor
pop
leave
sbb
call
aaa
mov
cld
mov
adc
mov
jg
pop
movsl
push
in
adc
cmp
push
and
imul
ret
icebp
pushf
mov
pop
test
movb
cwtl
nop
mov
popf
xchg
fstpt
xor
out
or
data16
fdivs
mov
imull
jg
sub
in
adc
jmp
lret
stos
mov
popf
shlb
loop
mov
es
cmp
sbb
sub
add
sub
clc
sbb
sub
lcall
cwtl
xchg
dec
icebp
leave
lret
push
not
xchg
mov
and
aam
repnz
dec
push
out
adc
mov
sbb
ret
jno
push
adc
sub
push
cmpsb
out
sbb
inc
insb
adc
js
cmc
jecxz
sub
dec
or
repz
inc
xchg
pop
shl
xchg
fwait
out
ljmp
das
flds
mov
test
testb
stc
call
clc
ja
sub
movsb
sbb
inc
sahf
loope
jle
add
pop
stc
xchg
cli
fsubl
jge
sub
mov
sbb
cmp
xor
les
hlt
mov
mov
aam
push
popa
fldcw
and
sub
jmp
rclb
and
inc
repnz
js
fistpll
cmp
jge
daa
scas
roll
out
pop
push
add
dec
sbb
xchg
iret
sbb
dec
insl
js
jmp
data16
fldcw
cltd
leave
sub
sbb
dec
imulb
sbb
lea
gs
sub
mov
imul
jp
or
fwait
lret
or
sub
repnz
pop
dec
jo
orl
lret
lret
aaa
push
inc
sub
pop
cwtl
outsb
adc
test
mov
aad
das
add
mov
das
pop
es
arpl
scas
or
aas
sbb
test
lods
data16
arpl
pop
dec
data16
js
jmp
cmpsb
pop
orb
inc
insl
fisttpll
dec
sub
lret
add
dec
push
and
jecxz
movsb
adc
cmpsb
mov
push
and
adc
dec
jmp
pop
shl
adc
sarb
sub
and
sub
ret
pop
cs
inc
fidivrs
cmp
fldl
stos
fldl2e
mov
pop
hlt
inc
push
sub
push
jno
xchg
daa
mov
pop
xchg
mov
movsl
cwtl
call
stos
xchg
arpl
and
ret
lock
imul
mov
fcom
test
sub
xor
jl
out
sysenter
fs
sbb
nop
iret
daa
mov
lods
test
and
cwtl
sbb
outsl
lret
push
or
jl
sub
lret
pop
js
pop
sub
pop
mov
cmpsl
loope
dec
jno
iret
sub
sub
sbb
shlb
leave
test
cwtl
push
fstl
imul
jmp
push
fwait
clc
or
lods
mov
lret
push
jecxz,pn
jl
and
mov
inc
cli
daa
adc
push
mov
div
rol
mov
das
data16
leave
inc
xchg
aas
dec
sub
push
stos
xlat
int3
lret
mov
repnz
leave
mov
outsl
adc
push
jno
and
sbb
mov
mov
je
jnp
xor
adc
xchg
lret
adc
and
sbb
push
push
mov
sar
jmp
and
mov
jmp
or
sub
adc
mov
xor
inc
data16
notl
outsb
cli
rcll
dec
sbb
mov
in
out
jb
ret
push
dec
xchg
cmpb
lret
outsl
or
sub
mov
cltd
cld
push
shr
iret
call
lods
lods
cli
clc
lret
cli
xlat
movsl
stos
cmp
stos
out
inc
adc
sarb
test
xchg
addl
xor
jns
adc
and
mov
test
and
xchg
pop
outsb
mov
lret
jl
lock
daa
adc
mov
js
sarl
cli
dec
out
icebp
fdivrs
out
or
lahf
clc
daa
cmpsl
loop
mov
add
push
or
and
aas
jmp
in
dec
mov
jg
stos
std
out
nop
push
movsl
adc
imul
dec
mov
rorl
in
jecxz
daa
xlat
jp
iret
clc
in
push
lods
mov
mov
adc
xor
imul
stos
scas
add
xlat
mov
or
outsl
fwait
enter
and
or
xor
addr16
orb
test
popa
mov
inc
dec
sub
lock
sub
xor
dec
adc
push
or
sub
shlb
in
gs
std
pop
and
hlt
lcall
sbb
inc
push
stos
js
fcomi
test
cwtl
adc
mov
and
std
out
dec
push
int
pop
ret
and
dec
mov
lret
lea
daa
pop
es
insl
and
xchg
dec
jg
sbb
mov
xor
daa
xchg
lods
mov
repz
jb
mulb
push
imul
push
test
sub
call
jnp
pop
jecxz
jbe
dec
cltd
addr16
add
rolb
push
push
flds
and
sub
sub
and
fs
lret
data16
sbb
push
sub
pop
or
daa
pop
into
gs
xor
jle
lcall
daa
les
or
sub
data16
popf
in
sbb
push
and
addr16
mov
mov
or
mov
mov
pop
movsb
iret
and
xlat
movsl
dec
jo
add
mov
andl
jle
push
mov
mov
hlt
or
and
and
leave
and
or
add
sbb
ljmp
in
call
test
inc
movsb
jnp
cmp
and
jmp
add
add
and
fistpl
cmpsb
or
in
pushf
mov
ljmp
mull
repz
or
cli
in
jle
icebp
dec
add
lock
out
dec
add
out
jle
in
dec
ror
jp
sbb
les
and
push
lret
mov
int
loop
test
sub
outsb
cli
movsb
adc
inc
test
stos
leave
or
clc
sahf
push
or
lods
shl
or
ficoml
add
fwait
scas
loopne
sub
adcl
push
repnz
pop
hlt
xchg
cltd
cmp
pop
push
jg
inc
shll
stos
xor
lea
pop
mov
pop
cltd
add
jno
xchg
xor
fwait
mov
fwait
adc
adc
or
push
les
mov
mov
cli
in
jle
and
add
sub
sub
sbb
jle
sub
test
xchg
and
mov
pop
or
out
fisttpll
out
into
or
xchg
fbld
iret
imul
push
shr
test
mov
lcall
jmp
and
xchg
dec
jecxz
daa
pop
or
push
or
jmp
sub
loope
das
ss
dec
aaa
iret
fnsave
lret
jl
sbb
repnz
sub
insb
push
lcall
lock
pop
xor
fwait
lret
ljmp
pop
test
cltd
mov
mov
push
sub
pop
jnp
scas
mov
pop
mov
stos
or
stos
iret
and
clc
xor
cmp
loope
leave
daa
and
jl
test
cmp
jmp
clc
lret
outsl
mov
and
push
in
arpl
cmp
jbe
dec
inc
arpl
xchg
mov
aaa
pushf
aas
sbb
mov
loope
jmp
call
pop
ret
pop
dec
sti
cmpsb
pop
mov
mov
sbb
sahf
inc
add
imul
in
inc
and
cmpsl
xlat
dec
outsb
jno
adc
xchg
subl
loope
mov
and
wbinvd
fisubl
cwtl
les
inc
loope
dec
test
sub
add
mov
nop
jecxz
into
pop
fisubrl
std
sbb
ljmp
out
int3
stc
jnp
xchg
pop
push
add
arpl
out
imul
push
xor
inc
outsb
fwait
stos
jecxz
fidivrl
enter
and
movsl
imul
jmp
popa
pop
iret
sub
pop
sbb
or
and
sbb
jno
leave
adc
outsb
xchg
fcoml
xchg
lret
jnp
cli
test
mov
mov
js
cmpsl
inc
imul
or
or
or
pop
sub
jl
fwait
sub
daa
push
movb
hlt
and
cwtl
and
adc
addl
adc
or
xchg
lods
fwait
mov
movsb
or
sub
orb
or
sub
add
rcrb
mov
xchg
ljmp
xor
dec
in
xchg
lcall
push
loopne
fistps
stos
pop
int
repz
xor
rcll
push
in
push
bound
in
aaa
hlt
cmp
addl
lahf
insl
inc
imul
and
cmc
fcomps
xchg
mov
cwtl
outsb
pop
mov
sbb
sarb
jle
int
loope
rcrb
inc
lret
push
call
adc
arpl
ljmp
andb
arpl
clc
aam
out
es
test
daa
pop
fbld
in
dec
adc
lret
cmpsl
bound
adc
cmp
filds
pop
shll
mov
mov
adc
addr16
xor
xchg
imul
push
and
jmp
repnz
add
mov
xchg
or
add
xor
xchg
sarb
fstpt
ficoml
cmc
imul
sbb
repnz
adc
dec
rorb
cmp
cli
iret
xor
stos
aaa
mov
inc
sub
mov
fsubl
loopne
xchg
lret
es
test
clc
enter
aas
jae
je
cld
movsb
adc
cmpsb
lret
in
and
pusha
in
jb
sahf
jle
lret
adc
insl
jmp
movsl
gs
sbb
sbb
cld
aaa
sbb
insl
aaa
lods
xchg
in
js
fmul
outsb
clc
mov
cmp
pop
or
clc
or
mov
in
das
repz
mov
mov
cld
mov
add
movsb
rcl
lahf
adc
bound
and
adc
gs
mov
out
sahf
pop
mov
xchg
jl
cmpsl
add
icebp
rcll
gs
lods
out
mov
push
or
movsb
lahf
in
addr16
xchg
adc
push
insb
subb
repnz
inc
fnstsw
daa
loope
sub
shlb
pusha
fsubl
stos
es
jmp
iret
les
ficompl
ret
xor
mov
inc
mov
jecxz
push
fcmovne
pop
sbb
stos
sbb
cmp
popa
cli
push
add
iret
jmp
repz
dec
adc
sbb
aad
cmp
inc
pop
rorb
sbb
mov
repnz
and
ds
stos
mov
ret
cmpsl
addr16
lcall
cmc
push
jo
mov
or
std
cmp
pop
and
xlat
mov
mov
adc
mov
fcmovne
imul
into
xor
dec
sub
xchg
mov
in
int
sub
divl
int
int3
lods
shrl
jae
or
sub
cmp
push
sub
xchg
and
movsb
sub
lcall
inc
xchg
or
ljmp
xor
pop
push
leave
ljmp
aam
std
sub
movsb
data16
shl
and
xchg
mov
and
jmp
adc
dec
push
mov
fstl
push
mov
rcrb
pop
insl
das
cmp
and
imul
xchg
stos
push
stos
iret
sbb
add
xor
lea
repz
and
subb
iret
sti
inc
fsubrs
shll
add
clc
xor
push
mov
repz
xor
or
jmp
jae
dec
pusha
imul
mov
sbb
xchg
out
xor
movsl
out
push
or
pop
das
dec
shlb
lock
clc
stos
mov
sahf
cmp
gs
cmp
sub
outsl
daa
je
stos
xor
dec
jecxz
mov
xchg
pushf
call
ja
add
stos
fwait
adc
test
mulb
das
js
fwait
mov
xor
fs
mov
push
push
lcall
stos
cmp
mov
testb
mov
adc
loopne
iret
es
sbb
pop
in
jae
or
push
inc
cli
das
cwtl
in
ljmp
aas
movsl
cmc
movsb
arpl
xor
xor
mov
stos
or
xor
xchg
jl
shrl
imul
xor
ljmp
sub
das
mov
mov
lods
sub
pop
imul
push
test
dec
in
cmp
cltd
out
pop
aad
iret
aam
es
test
nop
jns
out
pop
js
stos
out
outsl
dec
inc
sub
fcom
and
cmp
call
int3
sub
jmp
fwait
test
icebp
mov
outsb
aad
pop
shrb
push
das
stos
repnz
ljmp
je
sub
pushf
xlat
mov
and
mov
pusha
xchg
clc
mov
sti
imul
pop
cmpsl
cmp
sub
jp
pusha
sbb
gs
sbb
fmul
daa
fwait
mov
subb
sub
push
test
aam
lock
xchg
xor
mov
sbb
hlt
or
mov
cmp
dec
jbe
sbb
push
and
hlt
mov
test
jmp
cmp
inc
fcompl
into
or
adc
shlb
mov
pop
cli
movsb
inc
pushf
imul
sbb
mov
data16
sub
fildll
push
test
addr16
das
mov
popf
sbb
outsl
cwtl
mov
adc
pop
leave
xchg
pusha
cltd
sbb
fidivrl
jge
in
sahf
pusha
fnsave
inc
out
xchg
cli
cmp
fisubl
adc
hlt
fisubs
sbb
nop
push
outsl
and
fisubs
dec
and
sbb
int
daa
xor
xor
push
dec
sbb
iret
mov
xor
pop
jecxz
fimull
addr16
dec
mov
jmp
mov
enter
inc
in
cwtl
aam
xor
adc
test
aaa
inc
aaa
stc
arpl
es
pop
xchg
push
xchg
lret
pushf
cmpsb
fldl
jecxz
movsb
clc
sub
std
mov
mov
and
and
adc
xor
je
movsl
and
clc
clc
sahf
cmc
push
mov
pop
bound
xchg
movsb
fisubrl
mov
and
pusha
push
repz
insb
sub
pop
sub
lcall
iret
test
sbb
inc
inc
sub
out
cmp
in
iret
aaa
in
push
mov
ss
lcall
movsl
sub
leave
stc
and
int
fnstenv
movsb
xchg
add
push
insl
push
out
leave
xchg
jne
shll
xchg
add
sbb
cwtl
or
ret
rep
xchg
mov
xlat
pop
fpatan
dec
movntps
adc
and
hlt
cltd
repnz
pop
les
cmp
and
loopne
icebp
add
fsubl
adc
lret
sub
sbb
aam
movsb
adc
sbb
cld
or
pop
xor
movsb
mov
fs
or
stos
lret
ljmp
inc
pop
cwtl
xchg
test
jecxz
pop
mov
aam
adc
movsb
mov
movsl
js
xchg
and
sbbl
mov
neg
and
mov
iret
dec
mov
jns
mov
xchg
sahf
mov
sub
and
sub
faddp
lods
lret
and
lods
fmul
pop
pop
cmpsl
and
lods
fsubs
jb
mov
push
pop
fdivrl
push
ljmp
aad
cmc
xor
jmp
rclb
push
mov
movsb
ljmp
mov
adc
sbb
iret
cmc
repnz
dec
or
sub
rorb
iret
pop
add
movsb
je
cmp
cmp
fsubs
mov
sbb
push
push
mov
mov
cmpsl
mov
fistl
mov
fistl
add
dec
ret
adc
inc
dec
xchg
shrb
in
frstor
mov
mov
pop
in
pop
fsubs
fcoml
cltd
xchg
popf
xchg
pop
fistps
dec
movsb
testb
inc
sub
sbb
mov
testl
jg
pushf
out
push
clc
push
fidivl
js
jnp
call
mov
iret
testl
adc
jl
mov
add
cmp
adc
cmpsb
stc
jecxz
sub
jmp
sbb
cli
lcall
jg
test
or
adc
xchg
xchg
and
fdivl
fs
daa
fdiv
jb
or
fucomi
sbb
iret
xchg
inc
push
sub
push
cli
xor
xor
sbb
out
jecxz
pop
lods
out
sbb
es
mov
repnz
ret
sar
out
jmp
jnp
or
add
test
cmp
mov
adc
or
or
pop
dec
mov
push
jge
movsb
xchg
in
add
xlat
movsb
ficoml
pop
repz
xor
sbb
sub
addr16
dec
movsl
pop
dec
fistl
sub
xchg
lret
add
stos
pop
nop
add
dec
adc
ret
push
sbb
lods
into
pusha
into
sub
or
out
dec
inc
data16
clc
xor
incb
das
jno
lds
shlb
or
cmpsb
in
scas
jl
mov
pusha
loop
add
sbb
daa
sub
mov
leave
sbb
xor
cmp
imul
cli
or
and
xor
mov
enter
and
mov
push
imul
in
xor
daa
bnd
mov
cltd
rolb
fldt
push
popa
mov
inc
jl
ljmp
dec
imul
mov
pop
pop
mov
imul
cmpsb
sub
test
inc
loop
hlt
imul
cld
es
iret
jge
xor
lock
mov
dec
fucom
cltd
adc
and
ljmp
cmp
and
cs
pop
pushf
or
ljmp
incl
xor
testl
or
hlt
pop
idivb
loope
clc
pop
push
ljmp
inc
sti
pop
dec
cmp
stc
jnp
pop
lock
aad
sub
js
ret
mov
mov
repnz
mov
in
movsb
jo
xchg
mov
adc
imul
enter
leave
lret
sbb
mov
lcall
pushf
movsb
pop
sub
jns
push
bnd
loope
imul
lock
and
cmp
push
inc
mov
in
cwtl
jmp
in
sub
cwtl
insb
sbb
leave
mov
sbb
js
mov
cmp
pop
push
xchg
rcl
cld
les
xchg
sub
daa
sub
leave
test
out
or
lock
hlt
repnz
xlat
mov
notb
inc
lock
nop
push
callw
sub
in
and
imul
cli
idivl
les
inc
sub
mov
mov
aam
and
xchg
xchg
push
repz
inc
je
test
sub
stos
push
pop
xchg
adc
or
rolb
sbb
int3
or
jecxz
and
outsl
xchg
sub
pop
fstpl
aam
clc
xchg
or
movsb
sbb
arpl
xor
cmc
loopne
cld
lock
and
sub
stc
push
ljmp
idiv
aad
idiv
testl
add
add
inc
loopne
cld
loopne
out
ljmp
inc
sti
adc
and
mov
or
xor
sbb
js
sbb
js
xchg
pushw
jns
adc
ljmp
sbb
adc
mov
cld
push
xchg
and
or
pop
sbb
inc
or
jp
rclb
fdivrp
leave
fsubs
or
sub
sub
test
bound
xlat
push
nop
into
xor
popa
inc
lods
sbb
stc
cmpsl
leave
ljmp
jo
or
jno
push
scas
and
repz
movsl
add
or
inc
sub
inc
pop
mov
movsb
into
negl
mov
push
cli
fcompp
sub
xor
jecxz
cmp
popf
mov
fwait
mov
les
lcall
lcall
or
jno
dec
int
rolb
sbb
pushf
xchg
push
pop
stos
movsb
out
push
ret
das
das
push
fwait
jmp
jg
mov
sub
add
pop
mov
jmp
setp
rcll
pushf
add
test
call
fwait
mull
lods
fsubrl
lret
dec
and
aaa
mov
clc
inc
dec
add
xchg
pop
cmp
lock
sub
push
sbb
push
xchg
lret
out
insl
test
loope
outsb
push
fmuls
fadd
iret
outsb
dec
cli
xchg
lret
imul
jp
mov
sub
inc
dec
mov
lcall
adc
gs
lret
daa
push
lret
xchg
call
adc
mov
mov
rcrb
mov
sbb
jmp
mov
dec
bnd
xchg
mov
fcoms
in
pushf
icebp
lret
addr16
subb
sub
sub
mov
cmp
in
je
fucomp
int3
cwtl
lret
insb
sub
or
sub
sub
cld
ss
pushl
insb
xchg
imul
aaa
int
icebp
cltd
ret
int
mov
fwait
pop
sbb
mov
pop
mov
fstpt
mov
push
cmp
out
bound
xor
cmp
jg
bound
dec
arpl
outsb
es
sub
sub
mov
in
xchg
and
jle
lfs
add
sub
jp
xor
daa
jno
jno
cmp
and
jo
stos
pop
lret
sbb
movsl
push
aam
aam
inc
push
sub
fs
ljmp
test
jb
pop
adc
cmp
nop
sbb
out
loopne
fwait
push
inc
mov
xchg
add
in
arpl
xchg
in
xor
enter
xchg
or
pushf
loopne
pop
and
in
xchg
jo
dec
pop
shl
or
gs
sub
xchg
or
sbb
out
popa
mov
lods
loope
sub
repnz
mov
jl
daa
mov
mov
jne
loope
lret
pusha
pop
test
int
jne
movsb
adc
repnz
fimull
or
pop
int3
dec
push
stc
int
sbb
sbb
out
mov
fcoml
dec
fisttpll
shl
dec
imul
xor
jno
push
loop
mov
cmp
mov
popa
mov
sbb
leave
and
add
add
hlt
adc
outsl
cmpsl
add
sub
fld
std
xchg
and
mov
pop
fs
cmp
or
push
clc
in
or
fwait
scas
jmp
int
lret
pop
test
or
cmp
daa
xchg
leave
js
mov
fwait
sub
jo
sbb
mov
leave
sbb
bound
stos
in
ds
ja
bnd
cmpsb
test
es
loope
test
pop
mov
jno
jns
sbb
pop
cltd
std
push
jecxz
cwtl
push
sbb
test
stc
inc
shlb
push
sbb
xor
bnd
scas
mulb
imul
test
mov
push
arpl
scas
sub
dec
hlt
inc
adc
std
outsl
xchg
push
adc
stos
les
mov
pop
xlat
aad
fistps
push
push
ds
shr
js
dec
pop
or
ljmp
push
mov
jecxz
inc
add
leave
int3
adc
in
stos
add
dec
jno
xor
pop
and
mov
inc
and
pop
fistpl
mov
sub
push
imul
loop
cmp
repnz
or
jmp
sub
into
fistps
jmp
les
sarb
test
es
xlat
hlt
push
pop
xor
pusha
lcall
jecxz
push
push
pop
jecxz
xchg
in
ljmp
pushf
movsl
mov
movsb
or
sahf
jns
inc
push
stos
les
add
lcall
sti
pop
stc
mov
mov
push
outsl
jg
mov
fsubr
popa
and
lret
pop
dec
adc
stc
ret
sbb
filds
lret
sbb
cmpsb
mov
test
enter
push
inc
mov
lea
rolb
je
inc
pop
push
cmp
out
sub
or
cmp
arpl
fwait
movsb
imul
dec
cltd
mov
sbb
adc
fwait
sub
pop
cmpl
jecxz
fxch
js
push
in
pop
loop
ljmp
ja
ret
dec
cmp
adc
dec
or
inc
and
and
inc
and
xchg
arpl
push
jmp
and
loope
in
fwait
fs
lds
sahf
inc
xchg
lock
lcall
dec
or
push
pushf
inc
shlb
pop
sahf
push
inc
stc
xchg
xchg
push
out
enter
mov
call
fidivrs
or
push
stc
xor
in
fiadds
clc
movsl
fwait
xor
clc
or
stos
fadds
inc
bound
mov
lcall
out
out
ljmp
xchg
iret
das
stos
xchg
and
cmp
mov
repnz
ret
sub
cmp
iret
addr16
jb
ret
jmp
call
adc
mov
inc
nop
insb
sahf
mov
and
enter
cmp
mov
clc
jo
shrb
xchg
data16
push
lcall
mov
fsubrl
ljmp
jno
cld
jns
mov
sub
inc
insb
jp
sbb
pop
jnp
ljmp
lret
shrb
mov
mov
das
inc
lahf
inc
and
fldcw
add
popf
xor
in
sub
xor
add
jge
dec
iret
into
data16
sbb
lahf
enter
push
or
and
dec
pop
arpl
mov
call
out
mov
sub
and
out
jnp
out
inc
aas
jmp
aaa
mov
mov
pushf
mov
sbb
cli
lods
test
pop
inc
stc
jp
das
dec
jg
push
std
sbb
sbb
mov
fstl
loopne
cmpsb
mov
add
dec
in
repnz
mov
pop
sub
or
enter
pusha
mov
sub
dec
int3
bnd
loope
push
mov
les
cmp
movsb
into
xorl
inc
pusha
gs
and
jno
sbb
mov
sahf
mov
mov
push
push
or
sbb
xchg
sub
clc
shr
pop
adc
sub
imul
sub
sbb
dec
and
in
sub
out
fiaddl
fsubr
cli
sbb
sarb
gs
js
or
loopne
and
inc
popa
cld
sbb
push
test
mov
pop
pop
xor
in
loope
or
lret
in
mov
mov
sbb
daa
imul
idivl
dec
rcrl
mov
insb
js
out
shrl
stc
lret
push
loop
push
sbb
mov
xchg
sub
sub
xchg
push
sbb
dec
enter
les
stos
push
add
dec
adc
insl
lret
jne
jle
xchg
int3
and
push
arpl
jae
add
frstor
dec
sub
loop
push
movsb
lea
dec
loop
pop
test
and
or
inc
rol
mov
jo
push
push
enter
adc
pop
ss
dec
jmp
outsl
jbe
mov
pop
mov
dec
dec
sbb
and
or
cmp
lret
or
push
sub
jge
cmp
shlb
stos
into
out
push
fwait
int3
in
pop
popa
mov
out
and
imul
call
cmpsb
outsb
mov
data16
mov
data16
xchg
in
push
fsubrs
lea
push
jmp
cli
and
loope
es
push
sub
fisubs
sbb
outsl
stc
arpl
xchg
sub
xchg
imul
aad
xchg
pop
cmp
sub
loope
inc
xchg
push
xlat
or
sbb
aam
daa
cmpsl
pop
adc
sub
jge
mov
sub
and
mov
pop
adc
sub
cli
fdiv
movsb
pop
in
pop
cwtl
call
outsw
mov
add
or
psubd
cld
insb
and
inc
loope
ret
inc
enter
in
jo
movsb
and
jle
movsb
jecxz
test
add
pop
sbb
lret
imul
cli
mov
mov
sbb
dec
add
sub
js
dec
add
mov
sbb
adc
xchg
add
lcall
mov
inc
dec
or
mov
push
outsb
pop
in
cmp
dec
xlat
in
mov
sbb
sbb
fdivrs
fimull
rcll
dec
or
mov
push
outsb
push
jae
loop
inc
ret
stos
bnd
pop
jg
out
cmp
inc
add
nop
xchg
dec
into
sub
adc
pop
sbb
sbb
xbegin
fildll
xor
daa
jecxz
sub
sahf
sbb
orl
or
repnz
repnz
sarb
lret
jns
cmpsl
lret
or
cmp
testl
mov
popf
push
or
push
fwait
lods
or
stos
or
iret
jmp
rolb
loope
in
loope
iret
insb
adc
repnz
mov
inc
stos
jmp
pop
pop
cmp
lods
mov
movsb
stos
push
cwtl
sub
mov
inc
mov
xor
jae
clc
push
aas
daa
xchg
and
or
sbb
lret
int3
pop
mov
cmpsl
push
jge
jmp
or
jmp
push
mov
mov
out
mov
insb
jl
or
pop
push
push
leave
xlat
sub
mov
insl
lahf
imul
cli
scas
std
pop
fdivr
and
fmul
sbb
jno
dec
sbbb
xchg
iret
clc
push
push
xchg
jl
or
dec
sub
push
test
iret
movsb
and
dec
gs
stos
dec
sbb
popa
sti
pop
repnz
push
sbb
add
dec
in
xchg
dec
in
js
or
cmpsl
sub
lret
mov
rcrl
or
test
or
cwtl
and
or
sbb
cmp
lcall
xchg
in
sbb
arpl
and
rorb
test
mov
xor
flds
inc
jge
inc
ret
xor
or
movsb
movsb
xchg
lods
cmp
lods
adc
xchg
repnz
pop
or
sub
sahf
xchg
xor
loopne
lcall
in
loop
in
cmpsb
repnz
mov
jg
adc
dec
nop
popa
pop
adc
cltd
sub
pop
or
repnz
shl
ret
or
int
outsb
add
jo
or
sbb
test
sub
mov
dec
out
xlat
data16
iret
pop
dec
sti
adcb
mov
xor
lret
sbb
movsb
ret
push
test
dec
sbb
pop
scas
nop
mov
sub
fs
mov
add
iret
jmp
movsb
hlt
testb
inc
mov
xor
les
and
or
and
adc
fwait
sbb
or
mov
sub
inc
and
imul
sbb
idivb
adc
or
scas
notb
lea
lahf
std
rorl
sahf
outsb
adc
cmp
or
mov
dec
movsl
and
inc
xchg
popa
jmp
fwait
jmp
shlb
frstor
sbb
popa
adc
or
es
sub
push
ficompl
sbb
mov
push
cmc
jg
sbb
jmp
inc
daa
add
cltd
xor
mov
dec
or
push
leave
or
dec
mov
adc
sbb
cld
and
mov
sti
aam
cltd
push
aas
push
sti
cmp
stos
jge
cwtl
lea
dec
or
sub
pop
arpl
mov
jmp
pushf
add
push
aam
popa
xchg
cltd
insl
cwtl
leave
pusha
dec
jns
or
sub
in
stos
enter
ljmp
sbb
or
fwait
pop
sahf
lock
cmp
and
test
jno
dec
iret
fxch
cmc
mov
lock
xchg
outsl
pop
xor
xor
ljmp
imul
mov
inc
ret
dec
xor
loope
aad
decl
imul
jne
sbb
push
inc
or
mov
jg
jge
mov
into
add
dec
loopne
push
sub
in
mov
in
mov
sub
fidivrl
inc
test
jo
ljmp
mov
sub
insl
mov
dec
pushf
adcb
mov
dec
pop
ffreep
jns
pop
or
or
push
or
and
pop
and
nop
jb
cmpsb
leave
das
stos
cmp
jle
mov
sub
mov
push
pop
jecxz
lret
fisubrl
pop
jmp
call
ficomps
iret
dec
mov
test
sub
or
sbb
shll
mov
and
and
adc
mov
sub
into
clc
fmul
aam
sub
adc
pop
push
data16
ucomiss
push
adc
pop
fiaddl
inc
les
sub
inc
add
pop
insl
rorb
andb
leave
ljmp
jno
mov
sbb
lock
mov
mov
mov
and
fstpl
addr16
lahf
negb
and
cli
jg
add
imul
aam
and
inc
dec
loopne
aas
nop
adc
lret
sub
sahf
ror
push
cmp
pop
mov
call
int3
sub
xor
and
and
das
sub
mov
xor
add
and
scas
fcomps
xlat
jmp
stos
sbb
cmpsb
adc
fwait
cmp
xchg
movsb
repz
stc
in
push
inc
xchg
test
dec
shll
dec
push
neg
hlt
xchg
add
and
lods
ret
and
mov
fwait
mov
jmp
xor
and
call
fmulp
push
mov
leave
fwait
repz
jg
jecxz
icebp
xor
shl
daa
bound
cwtl
sub
lock
jnp
push
fwait
cmpsl
jl
arpl
enter
xor
dec
sbb
xchg
sahf
ds
jle
loop
out
rep
and
fdivs
loope
sub
mov
cwtl
mov
mull
sbb
arpl
xchg
fwait
add
lcall
push
add
cmp
xlat
xchg
lock
xchg
adc
stos
mov
imul
push
icebp
scas
daa
xor
repnz
sub
daa
jb
es
xchg
and
enter
sub
xchg
mov
icebp
mov
iret
scas
or
bound
jnp
out
addl
rcrb
push
add
pop
aaa
lahf
addr16
xor
roll
adc
mov
sahf
xlat
lcall
sbb
ret
sti
repz
mov
rorb
enter
movsb
mov
push
repz
aam
sub
bnd
stos
xchg
push
jl
or
movsl
shl
cmp
mov
jmp
bound
inc
ja
jns
mov
or
hlt
and
cltd
mov
lcall
dec
sahf
inc
sub
es
mov
mov
fldlg2
xchg
iret
and
sbb
lret
mov
mov
test
fwait
call
and
rcrl
xchg
jp
or
adc
xchg
sub
shl
dec
pop
or
aad
imull
loop
jmp
les
sbb
fdiv
mov
adc
jg
jo
lds
jp
int
sub
loop
mov
jnp
loopne
insl
movsb
call
sub
mov
sub
and
out
cwtl
pop
xchg
cmpsl
mov
xchg
mov
xor
cmpsb
xor
xchg
adc
pop
out
std
testb
fs
sub
add
sbb
xlat
call
and
sbb
in
and
nop
aad
dec
imul
rcrb
xchg
stos
or
cltd
push
mov
adc
or
in
push
notl
mov
pop
pop
pop
push
mov
xchg
mov
mov
add
fstpt
or
sar
popf
pop
in
lahf
outsl
inc
shll
iret
jmp
lret
out
sub
stos
cmp
daa
outsb
pop
sbb
aam
imul
out
add
jecxz
je
test
xchg
int
push
iret
xchg
or
and
loopne
loope
outsb
fsubr
lea
hlt
popf
mov
sub
in
sub
movsb
packuswb
xchg
push
shrb
mov
mov
jnp
pop
pop
aam
push
jns
and
lret
es
stos
xor
fsubs
dec
mov
cltd
fwait
std
stc
or
inc
sub
cmp
mov
mov
mov
xchg
adc
lret
sub
adc
mov
shl
leave
cmc
int3
jns
cmpsl
into
lret
and
inc
aaa
lods
ret
sub
xchg
pop
mov
or
pop
movsb
fcomp
sub
xor
pop
mov
andb
dec
out
push
or
int
nop
pusha
xor
inc
int3
call
pushf
daa
lods
loop
push
js
mov
fsubl
ljmp
pop
push
lock
push
xor
push
loop
sbb
insb
out
sbb
xchg
push
ss
cli
jecxz
sub
lahf
adc
and
in
inc
arpl
jmp
cmpsl
addr16
push
or
fists
and
lret
and
and
int3
clc
shlb
push
xor
cmp
sahf
faddl
shrl
out
pop
sbb
fsubl
mov
dec
sub
pushf
sub
add
movsl
mov
jns
hlt
jmp
mov
popf
lock
inc
cmc
iret
scas
cmp
stos
rorl
xchg
repnz
dec
aaa
in
sub
cmp
hlt
shl
in
pop
jb
push
ss
inc
stos
aas
loopne
sbb
mov
cmp
dec
cmp
stos
fs
xor
sub
cld
adc
fwait
mov
lods
dec
cmpsl
fidivs
aad
xor
jmp
and
aaa
cmp
or
iret
sub
repz
insl
out
movsl
sub
or
sahf
jp
dec
dec
mov
out
and
mov
lahf
scas
rcrl
pop
fucomi
shlb
mov
xor
mov
je
dec
call
sbb
cmpsl
outsl
cltd
push
mov
out
push
aam
outsl
sti
xchg
mov
xchg
lret
or
out
adc
jae
xor
jecxz
sub
in
ret
fwait
loope
imul
jl
pop
clc
pop
outsl
adc
and
inc
fidivs
insb
imul
jbe
and
lea
fwait
call
aad
loope
sub
js
inc
xor
fdivr
leave
mov
ret
and
fwait
loope
js
loop
test
and
pop
aad
ficompl
add
out
sbb
xchg
aam
popf
sbb
cmp
addr16
and
pop
jnp
or
pop
call
fs
ficomps
test
fidivrl
inc
lret
std
xchg
clc
test
adc
and
sub
test
test
jnp
fucomi
dec
movsb
fsubs
push
cli
xchg
sub
into
jmp
ss
or
dec
cmp
jmp
test
pop
adc
leave
and
lods
sbb
iret
jns
out
lock
mov
xor
or
cmpsb
bound
and
into
add
sub
daa
or
pop
popf
iret
out
hlt
add
outsl
jnp
and
arpl
cs
push
mov
fcoml
sti
pop
or
or
and
mov
mov
lret
and
out
mulb
int
lock
jne
xor
fmulp
test
push
or
scas
mov
fcoml
mov
jmp
push
dec
cmp
in
sub
mov
stos
js
stos
adc
ja
mov
out
cld
test
sbb
imul
mov
mov
in
jp
iret
scas
and
cmp
mov
xchg
inc
nop
xor
test
xchg
mov
int
enter
pushf
jmp
xchg
xchg
test
cltd
push
cwtl
jle
popf
lods
xchg
daa
cmpsl
inc
mov
fs
test
adc
xchg
inc
insl
lcall
pop
mov
mov
das
mov
idivb
lret
adc
mov
es
mov
lret
lods
xor
fsub
pushf
mov
jb
loope
repnz
cmc
cmp
mov
loope
or
cmpsb
iret
fcomi
sub
or
cmpsb
sub
sbb
and
or
hlt
mov
xchg
cld
call
outsl
mov
ds
inc
mov
mov
sbb
adc
cmp
inc
mov
xchg
adc
sbb
fsubs
iret
je
mov
sbb
stos
adc
push
xchg
icebp
sti
out
pop
orw
loop
and
mov
mov
or
or
mov
mov
xor
test
mov
xchg
pop
dec
adcl
orb
lock
jo
lds
and
ret
cld
or
xchg
lret
jbe
pop
in
lcall
out
mov
ss
mov
testb
shlb
inc
inc
xchg
jle
or
inc
mov
inc
lods
mov
out
sbb
xor
out
cltd
jmp
adc
push
xchg
pop
and
fmul
mov
dec
popa
dec
nop
in
or
in
out
lds
enter
test
xor
pop
xor
xchg
iret
ds
and
lds
stos
ds
or
mov
ror
pop
add
leave
sub
mov
repz
aaa
out
push
enter
in
dec
push
sub
bound
push
mov
mov
lods
push
mov
fisttpll
stos
sti
or
mov
mov
out
outsl
and
ss
subb
or
mov
sub
cmc
jmp
or
mov
iret
or
popa
xlat
loop
pop
test
mov
in
dec
fimull
and
gs
xchg
adc
daa
sub
shr
xor
aad
pop
enter
repz
adcl
in
lcall
jb
adc
lea
imul
imul
dec
xchg
mov
and
mov
inc
hlt
cmpsl
add
loop
imul
cmp
sbb
clc
es
stos
mov
sub
ret
rolb
and
and
dec
cwtl
sub
jmp
stc
mov
movsb
movsb
push
stos
out
pop
jecxz
dec
fdivs
push
mov
mov
clc
and
jbe
sti
stos
inc
fidivrl
cmc
sbb
sub
sbb
inc
in
outsb
mov
stos
xchg
push
xchg
cmpsb
ja
sahf
pop
frstor
clc
dec
hlt
and
or
sub
cmp
sbb
mov
mov
cmpsl
jo
loop
xchg
xor
add
push
push
loopne
sub
loopne
daa
jmp
shrb
dec
push
xchg
iret
shll
shll
mov
sub
cmc
in
icebp
loopne
test
or
dec
dec
cmp
icebp
xchg
out
push
repz
in
pop
cld
sub
mov
inc
loop
out
xor
xchg
pop
je
outsl
mov
mov
pusha
inc
mov
sbb
xlat
sub
test
roll
ljmp
fsubrp
pop
popf
iret
pop
mov
xor
pusha
or
jle
push
lcall
fdivl
xor
stos
test
xchg
sub
faddl
inc
xor
cmpsl
cmpsl
dec
push
stos
int3
xor
std
mov
nop
jb
xor
add
pop
pop
mov
daa
dec
inc
into
xchg
add
add
in
cli
ljmp
adc
cmpsl
mov
add
xchg
jl
punpckhdq
add
jp
fisubl
ljmp
rcr
fs
add
jnp
push
mov
sub
sbb
mov
xchg
mov
fstl
lcall
aas
and
xor
jb
sub
imul
pop
jmp
inc
push
lea
mov
inc
lret
cmp
loopne
ja
and
stc
imul
adc
cltd
push
clc
pop
and
sbb
jecxz
push
arpl
shll
insl
sbb
popa
mov
out
cmp
aad
mov
lods
jmp
inc
sbb
jnp
or
movsl
push
pusha
sub
test
xor
xchg
clc
cmpsl
adc
repnz
test
jb
pop
adc
fs
push
hlt
jns
push
xchg
jnp
out
push
cmp
mov
iret
push
mov
dec
mov
cld
ljmp
test
dec
sbb
test
or
sbb
xchg
pop
mov
pusha
mov
xor
aad
adc
mov
sbb
das
mov
cmp
jo
fsubrs
xor
xchg
mov
cmp
lahf
clc
and
fwait
mov
cli
mov
sub
cmp
lods
jmp
adc
out
mov
mov
bound
sub
push
xor
and
das
pop
cs
movsl
addr16
jmp
movsl
add
add
mov
test
jno
cli
test
sub
and
outsb
push
jle
cmp
cmp
xchg
push
jb
popf
sub
or
test
or
cmpsb
xor
int
push
push
into
dec
cmp
mull
cmp
enter
jge
and
mov
sub
data16
xchg
xor
ficompl
xchg
pop
sub
sbb
push
xchg
int
sbb
popf
sbb
and
and
mov
sbb
dec
mov
mov
das
cwtl
test
xor
pop
cmpsb
add
inc
push
sub
add
mov
es
mov
stos
ljmp
call
test
mov
sub
movsl
sub
and
jmp
les
fs
xor
lret
inc
imul
es
mov
into
inc
gs
push
mov
pop
ljmp
push
or
or
fadds
imul
and
mov
jo
xor
outsl
push
adc
xchg
loop
shlb
adc
fisubrs
je
inc
imul
xchg
js
pop
or
stos
ret
pusha
cli
and
or
sbb
sbb
aaa
jae
ljmp
mov
adc
jno
imul
xor
les
cli
fwait
push
pop
pusha
add
movsl
push
adc
lret
cltd
jp
jbe
insl
mov
fildl
add
jns
mov
test
pop
xchg
lcall
and
inc
jecxz
inc
mov
psraw
icebp
out
sub
leave
lret
sub
sbbb
int
xor
adc
pop
push
dec
fsubp
xor
push
je
fldt
xchg
cltd
xchg
lret
push
int
bound
popf
testb
xchg
out
add
flds
test
daa
fistpl
iret
xor
pop
sbb
loop
sub
adc
lds
scas
pusha
mov
mov
in
and
loop
xor
or
push
lret
insl
cmp
addb
or
mov
mov
lds
into
xchg
test
or
and
ljmp
push
in
in
ds
cltd
ret
add
or
and
mov
leave
insl
jp
pop
shlb
outsb
in
and
cmpsb
repnz
insl
cmp
cmp
cli
cmpsl
pop
dec
leave
or
out
cmp
sbb
sub
mov
int
xchg
jmp
cmpsl
iret
xchg
pop
stos
lods
sub
in
pop
ljmp
fisubrs
fldcw
or
xchg
loope
imul
test
mov
or
lret
mov
push
movsb
or
out
aad
andb
cmc
movb
push
fs
jo
and
clc
mov
sub
aad
fstps
xchg
sbb
cltd
xchg
ficoml
or
xchg
repz
mov
dec
shr
stc
icebp
mov
enter
jge
pop
loope
into
outsl
pop
xchg
sub
rcll
lret
lods
dec
dec
stos
call
xor
in
mov
mov
jo
sbb
inc
xchg
shlb
cmpsl
sbb
dec
je
fcomip
gs
in
jge
cmp
mov
lret
lahf
aam
out
int
negl
and
jo
imul
out
cli
pop
pusha
aad
push
fsts
es
das
pop
cli
jns
mov
mov
ss
clc
mov
aad
inc
xchg
lods
add
and
push
add
cmc
movsb
je
sbb
rolb
ret
lods
insl
divb
or
xor
cmp
sti
and
pop
push
mov
out
or
repnz
insb
mov
push
push
aaa
mov
arpl
dec
xlat
mov
popf
mov
enter
lods
stos
pop
call
repnz
xchg
sbb
jae
arpl
sbbl
sbb
and
ror
callw
mov
or
insl
mov
mov
sbb
enter
jecxz
xor
cmpsb
push
jne
sbb
out
xchg
test
pop
fdivl
insb
dec
push
adc
out
sub
sbb
sub
xor
cmp
xlat
lahf
lods
xchg
mov
sub
add
xor
mov
xacquire
cmp
jmp
and
popf
pop
clc
sub
shlb
mov
or
sbb
or
cmpsb
in
leave
add
arpl
movsb
or
or
sbb
cmc
mov
push
shlb
sbb
fmuls
repnz
outsl
push
mov
and
pop
or
mov
inc
jbe
lods
push
mov
sti
out
push
push
xchg
mov
aas
out
iret
movsl
stos
fnstsw
sub
xchg
add
in
add
add
and
pop
roll
sbb
mov
stos
push
mov
fucomip
test
push
pop
test
or
and
jl
out
push
adc
daa
add
and
es
daa
xlat
and
pushf
addr16
jbe
or
shrl
stc
mov
movsl
sub
addr16
ja
in
xchg
xchg
inc
out
in
or
mov
cmpsb
mov
push
adc
ss
mov
sub
out
add
jge
jmp
push
pop
lods
stos
sbb
mov
lods
cmp
mov
xchg
jecxz
jne
in
inc
mov
sti
mov
ss
ret
lods
or
and
or
adc
and
pushf
pop
lcall
sahf
pop
pop
and
mov
sbb
test
jp
or
and
xor
cmpsl
movsl
fwait
sub
lods
add
pushf
pop
add
push
push
push
fwait
daa
mov
and
sub
cmp
jl
out
gs
mov
fwait
xor
xchg
and
or
jmp
out
in
push
les
xor
fisubs
lcall
add
adc
pushf
inc
cmp
cmc
fldl
fwait
sti
or
pop
loopne
rorb
or
adc
push
shlb
jns
and
stc
arpl
mov
xchg
push
cmpsl
setnp
cwtl
or
add
imull
and
movntps
add
and
and
sub
aas
adc
push
push
decb
cmpsl
fwait
or
xchg
and
or
jmp
dec
adcl
into
jns
xchg
and
push
jns
pusha
cmp
jns
ds
cmc
fldl
fwait
sti
add
stos
add
pavgb
out
push
mov
sbbb
and
mov
mov
and
scas
or
xor
cmpsl
sbb
mov
repnz
aas
sbb
pop
push
ljmp
bound
fildl
sti
sub
in
dec
sub
inc
es
sbb
mov
push
push
sub
xchg
rcrw
mov
sub
popa
inc
or
xor
sbb
ss
insl
xor
cwtl
jae
popf
inc
in
js
insl
or
push
push
lea
sti
shrb
push
dec
nop
cwtl
insl
addr16
insl
outsl
pop
test
sbb
and
sub
pop
out
loop
sub
aam
hlt
cmpsl
fbstp
jmp
imul
repnz
insb
ljmp
mov
xchg
imul
nop
mov
loopne
les
lret
lahf
add
cwtl
and
mov
pop
push
test
enter
testb
cmpsb
les
add
mov
pop
cmpsb
lea
pop
dec
inc
imul
je
mov
sbb
sub
ret
jmp
out
pop
lods
and
js
sbb
iret
sub
and
lock
add
sub
xor
cli
pop
pop
std
sbb
call
add
mov
add
sub
mov
mov
test
xchg
sub
cmc
or
repz
test
es
sbb
out
test
add
or
mov
and
sahf
jae
out
mov
push
or
call
or
or
and
repnz
fldcw
test
pop
das
fs
xor
lods
enter
mov
cwtl
xor
es
push
jmp
pop
daa
xchg
pop
je
stos
ret
jmp
stos
repnz
xor
and
insl
sub
sti
iret
or
xor
test
mov
and
and
push
daa
add
call
lea
xor
ds
mov
and
in
out
subb
iret
or
jge
scas
pop
les
pushf
mov
or
adc
loope
mov
enter
in
sub
stos
insb
stos
xchg
xchg
subl
icebp
ja
sub
repz
adc
xchg
inc
xchg
out
nop
pop
imul
pusha
sub
insl
inc
fistpll
pusha
loopne
or
pushw
or
push
outsl
pop
lock
cli
xchg
sub
push
loop
push
std
push
dec
jae
xchg
lods
dec
enter
lret
pop
shrl
iret
popf
push
popf
lock
sbb
lret
add
in
push
adc
ds
sub
jl
iret
sbb
xchg
mov
xor
stos
mov
inc
fisubl
push
movsb
or
add
aad
add
pop
lds
pop
and
aaa
jb
or
loope
mov
adc
xor
loope
ss
ljmp
mov
ss
pop
stos
jle
sarl
xchg
stos
lds
lret
pop
lea
pop
outsb
push
dec
cltd
xor
or
icebp
rolb
sbb
fsubl
xlat
sbb
inc
movsl
inc
mov
cli
xchg
fwait
xchg
sub
insl
lret
outsl
adc
cmc
cli
addr16
nop
insl
pop
cltd
sub
xchg
insl
or
pop
jle
inc
pop
das
jl
out
or
fidivs
xchg
or
call
cmp
jmp
in
pop
mov
inc
es
dec
adc
or
jns
xchg
fnstsw
pushf
repnz
ret
pop
push
xor
test
mov
xchg
and
pop
add
iret
fs
jns
mov
in
dec
and
lret
jecxz
pusha
test
lret
ds
push
pop
dec
adc
cld
repnz
jae
mov
bound
mov
fwait
xchg
jl
popa
xor
loope
xor
movsb
repnz
inc
adc
cmp
lock
jnp
iret
mov
adc
pop
jne
inc
mov
repnz
rcrl
imul
fsubrs
mov
das
in
fwait
sbb
test
int3
sbb
xorb
jmp
insb
add
jae
cli
repnz
mov
sbb
push
test
sub
test
cmc
add
sub
in
loope
xchg
or
mov
pop
jmp
pop
push
fisttpll
aaa
adc
fwait
cmpsb
mov
popa
aaa
jns
jmp
push
mov
and
sub
jmp
or
or
mov
cmp
xchg
fs
inc
mov
das
and
and
lret
adc
in
jno
cli
popf
dec
fcmovne
lods
imul
dec
sbb
push
sub
and
pop
xor
mov
aas
cld
sbb
mov
inc
shll
sbb
test
or
adc
test
jmp
enter
push
adc
test
addr16
sbb
loope
jmp
or
adc
jne
xchg
in
adc
outsl
loope
xchg
mov
movsb
xchg
aaa
sarb
mov
push
xchg
sbb
jnp
pop
test
jmp
sub
sub
sub
and
popf
lods
adc
out
push
pop
sub
mov
adcb
or
notl
inc
stc
js
xor
enter
shl
mov
and
jge
push
ficoml
repz
imul
push
movsb
xchg
cmpb
and
xchg
dec
mov
adc
jo
xchg
pop
lret
sub
sbb
mov
push
call
sub
sub
push
jge
ret
pusha
cmp
add
iret
nop
mov
and
aad
loop
mov
movsl
jp
push
movlps
mov
dec
dec
adc
imul
sbb
cli
sub
icebp
jo
aam
inc
cld
fmul
sti
inc
imul
xchg
scas
in
mov
push
push
leave
es
and
fildl
int
testb
cmpsl
push
push
xor
jl
pop
ret
in
pop
pop
imul
push
inc
dec
sub
negl
add
xorb
adc
leave
leave
movaps
call
lahf
pop
jg
fucomp
mov
cmp
mov
mov
out
xor
mov
xor
and
fbld
fildll
inc
mov
ljmp
xchg
mov
jnp
popf
and
mov
or
lock
mov
mov
movsl
xlat
sub
xlat
ret
dec
and
jl
pusha
adc
bound
loopne
jecxz
sbb
sbb
leave
sbb
enter
push
adc
lock
out
dec
pop
aam
push
pop
jae
mov
aaa
je
add
hlt
or
pop
adc
out
shll
mov
lock
push
xchg
xor
sbb
push
and
mov
jnp
xor
ds
aaa
sub
or
lcall
insb
fdivrs
lods
jg
fcmovnu
sub
xchg
and
dec
mov
jmp
adc
inc
imul
or
mov
ds
jns
hlt
inc
mov
shl
xchg
repz
dec
xor
mulb
or
jge
scas
jmp
dec
cli
ss
lods
ret
push
xchg
pop
pop
sbb
lock
out
adc
xchg
hlt
test
fldln2
or
cmpsb
hlt
inc
mov
add
xlat
adc
pop
sub
aas
xor
xorl
ljmp
cmp
mov
sub
and
es
or
sub
pop
rcr
pop
and
repnz
repnz
or
mov
xchg
lret
dec
pop
add
and
sbb
adc
movsl
sub
fisubl
push
ret
aad
inc
stos
mov
mov
popa
sub
ss
imull
push
fwait
cmp
repnz
repz
adc
lcall
int
xchg
push
mov
loop
push
movsb
push
adc
inc
push
mov
cld
ljmp
mul
add
pop
repnz
pop
dec
push
and
xchg
push
inc
testl
mov
xchg
in
cmp
lret
mov
mov
or
adc
enter
loop
aad
pop
pop
pusha
push
and
inc
fs
arpl
mov
test
jmp
lods
call
add
int3
fs
fldenv
sub
pushf
mov
iret
cmp
out
pushf
and
loope
jb
adc
push
sub
in
outsl
insl
adc
lock
fiaddl
and
in
leave
movl
shrb
and
sahf
stos
daa
inc
mov
sbb
xor
xchg
stos
aad
sub
push
repz
pop
and
hlt
and
pop
and
test
sub
imul
shlb
cld
cmp
xchg
xor
sbb
stos
xchg
js
sahf
mov
pop
pop
fwait
or
cmpsb
or
ret
dec
outsb
loopne
push
mov
xor
xchg
lahf
loopne
fistpl
pusha
outsb
cmp
fstpt
stos
leave
fwait
sub
pop
in
inc
pop
daa
adc
or
add
dec
push
jmp
push
call
idivl
xor
pop
xor
or
cmp
push
sub
mov
andb
jne
or
bound
fldt
aaa
sub
push
test
cmp
movsl
inc
call
cmp
jmp
mov
inc
mov
aaa
jno
adc
lods
and
cmp
fcmovbe
and
test
mov
fwait
clc
je
mov
aad
xchg
xor
sub
or
aad
jmp
js
mov
iret
loope
jae
js
ficoms
adc
cmp
mov
daa
jg
and
push
mov
mov
sbb
and
arpl
adc
xor
xchg
sbb
mov
lds
push
lea
inc
in
adc
xchg
ficompl
notb
popw
jmp
add
jmp
sbb
pop
enter
test
xchg
sub
or
addr16
and
jge
int
bound
lret
in
xlat
loope
clc
jne
into
add
sbb
cmp
sbb
bt
movsb
jecxz
repz
in
dec
fadds
adc
in
lret
inc
mov
lahf
addr16
sub
fdivs
pop
test
cwtl
dec
mov
mov
std
add
je
jp
mov
test
or
push
or
dec
push
pop
push
and
call
loop
jge
and
ljmp
in
sub
mov
fisubrs
icebp
mov
cmp
andb
and
lcall
aad
jb
mov
jl
mov
cmp
push
push
xor
pop
rolb
cli
or
sub
adcb
insl
nop
sub
aad
add
cmpsb
or
push
out
addr16
sub
nop
mov
les
idivb
fldenv
lods
adc
clc
repnz
mov
clc
sbb
test
mov
cbtw
andl
dec
hlt
shl
pop
das
or
outsl
fucomi
sub
dec
inc
int
mov
ja
xchg
movsl
ss
pop
test
mov
dec
dec
dec
into
mov
sub
aaa
add
mov
cmc
div
cmp
movsb
cmc
add
cmp
lods
xor
cmp
jle
dec
push
mov
push
add
lcall
stos
leave
or
jno
movsb
mov
mov
call
imul
sbb
mov
xor
popa
testb
mov
and
mov
pushf
fistpl
imul
pop
imul
test
mov
fcmovnbe
dec
jae
pusha
sub
sub
arpl
and
push
adcl
sub
sub
lods
cltd
fnstcw
cs
jo
push
mov
sub
in
call
dec
jecxz
data16
inc
and
and
dec
mov
shr
mov
push
js
add
or
cmp
out
enter
pop
jmp
test
and
repnz
xor
aas
aam
popf
ret
fcom
fiaddl
out
mov
cmp
mov
or
sbb
xchg
cld
in
test
mov
jae
out
and
leave
dec
es
xlat
into
out
pop
xchg
in
sub
insl
movsb
fildll
push
xor
in
lcall
add
pop
jae
and
sbb
orb
leave
sbb
push
test
sbb
iret
and
push
out
mov
lcall
sti
mov
fldt
cmc
into
mov
sub
push
sub
inc
mov
xchg
mov
sub
push
mov
or
ret
pop
mov
iret
lock
sub
out
hlt
in
pop
xchg
pop
jne
test
mov
or
mov
lret
xchg
ja
lds
shlb
jge
sub
jge
cmp
stos
das
ja
or
enter
iret
mov
ljmp
in
adc
jle
int3
push
inc
stc
hlt
adc
xchg
cltd
sub
dec
in
out
iret
fidivrl
xchg
out
addr16
dec
outsl
jb
sub
lret
mov
cwtl
mov
ss
push
push
adc
movsl
iret
adc
aam
fldcw
mov
jecxz
int
mov
test
ljmp
das
daa
iret
loop
jecxz
es
mov
mov
mov
mov
ret
push
sbb
lea
jmp
dec
ja
in
mov
sub
add
test
ljmp
push
sub
sti
js
pop
stos
loopne
sbb
pop
cmp
ljmp
loop
pop
dec
pop
sar
das
adc
sub
aas
and
aaa
jg
les
dec
jae
nop
sub
mov
sbb
in
aam
sbb
jle
out
xchg
out
into
jmp
shlb
pop
shll
sub
rolb
and
lret
inc
add
and
adc
fadd
mov
loope
imul
sbb
mov
adc
movsl
scas
sub
jle
and
mov
push
loop
sarb
hlt
xchg
jns
outsl
xor
gs
lret
lret
rclb
mov
out
pusha
xor
pop
xor
leave
daa
cmp
aad
pop
mov
dec
jbe
test
out
mov
sbb
pop
pop
dec
in
dec
sub
loop
xlat
xor
jmp
jno
test
inc
lret
imul
gs
ja
ljmp
pop
xchg
jecxz
and
imul
mov
cli
xlat
in
int
and
or
cltd
jno
jb
lret
outsl
les
and
fdivs
cs
scas
push
push
xchg
or
sbb
pop
mov
rclb
fisubrs
aaa
or
sbb
enter
dec
shlb
ficompl
mov
push
or
pop
mov
pop
xor
dec
or
scas
or
lods
xchg
cmp
mov
dec
clc
pop
lea
xchg
sbb
lcall
sub
mov
inc
push
pop
iret
push
in
out
icebp
pusha
push
pop
or
hlt
ljmp
mov
icebp
loopne
push
xor
pop
out
and
xchg
inc
push
mov
push
pop
loope
mov
je
mov
sahf
and
out
mov
cmpsb
sub
mov
fildl
sbbw
mov
pop
adc
and
and
loop
mov
jl
jnp
pop
mov
ljmp
push
inc
xor
cltd
hlt
xchg
loopne
lcall
andl
call
jp
call
jae
dec
lock
in
inc
add
leave
into
and
in
mov
pop
movsb
cmpsb
sbbb
lret
and
push
and
pop
fs
and
cmpsl
lret
pop
lcall
jnp
pop
inc
inc
adc
or
inc
ret
movsb
mov
adc
fcoms
arpl
test
enter
pop
cmc
adc
lret
or
mov
mov
out
pop
ja
sti
sbb
cmpsb
jp
outsb
jecxz
lahf
ror
cltd
int3
mov
sub
push
or
mov
or
jb
out
loope
fsubrs
and
and
or
pop
inc
cmp
sarb
mov
dec
das
cmpsb
sbb
cld
adc
mov
mov
jl
xbegin
in
mov
xchg
mov
iret
pop
inc
and
dec
push
sbb
sbb
sub
or
dec
push
in
imul
pop
jl
xor
fsubrs
repnz
enter
push
cmp
mov
dec
sbb
or
sub
out
int3
cmpsl
push
pop
inc
fsubs
lcall
adc
mov
pop
sar
mov
or
repnz
or
ljmp
jb
je
sbb
xchg
cmp
sub
sub
leave
adc
cltd
aam
jb
jae
add
ror
pushf
dec
add
fcmovbe
pop
aad
and
xchg
fdivrp
std
test
jnp,pn
mov
lock
pop
fs
dec
xchg
lods
pop
cli
mov
in
push
push
repz
sub
and
pop
out
leave
arpl
call
bound
lcall
or
scas
xor
inc
aam
ljmp
jmp
out
fmul
cmp
test
cmc
das
push
sub
mov
and
sti
cs
fsubrs
test
push
rcrl
fwait
daa
jne
nop
nop
pop
movsl
iret
push
mov
and
insb
sub
movsl
mov
cmp
jae
mov
jecxz
loopne
cmp
xor
mov
jle
mov
sbb
sub
push
pop
push
call
mov
mov
std
dec
add
imul
xor
fcompl
push
pop
rol
outsl
clc
xchg
mov
mov
cwtl
jo
dec
sbb
dec
iret
xchg
jmp
out
mov
pop
pop
and
or
les
cli
cltd
int3
stos
pusha
dec
jg
add
sub
pop
and
sahf
sub
dec
sub
dec
shlb
lahf
pop
cs
mov
mull
nop
cltd
filds
faddp
nop
sti
jns
imul
movsl
or
and
push
aad
test
xchg
loopne
sbb
xlat
pop
insb
add
and
out
in
int3
and
sarb
mov
imul
pop
lahf
movsb
push
adc
sbb
out
in
cmpsl
ds
sbb
out
cmp
mov
push
push
fdiv
stos
and
inc
sub
es
es
call
rcrb
inc
add
and
ljmp
adc
mov
pop
les
sub
stos
xor
mov
lods
loope
mov
lds
xchg
fcmovne
pushf
push
sbb
enter
xor
xor
inc
test
push
push
or
pop
push
sub
test
loop
ljmp
inc
mov
popa
hlt
gs
nop
or
or
cmp
fs
ja
adc
push
mov
imul
cmp
xchg
das
sbb
pop
and
lret
jg
add
xchg
sub
jmp
rolb
xor
fdivrl
lcall
xchg
lret
iret
fidivrs
push
or
cmpsl
or
gs
imul
loop
sbb
loopne
adc
nop
dec
dec
push
dec
cmp
pop
xchg
inc
jmp
enter
dec
xor
lret
ss
mov
push
repz
sub
into
daa
sub
fsubs
sub
xchg
xor
pop
ds
sbb
jle
sbb
ret
or
inc
cld
cmc
dec
sbb
subb
imul
push
jmp
stos
and
das
popf
ljmp
add
faddl
push
pop
jle
mov
sub
and
aas
les
or
movsl
bnd
xchg
sbb
jns
sbb
push
xchg
adc
bound
cld
pop
scas
sub
lock
loopne
pop
pop
in
cmp
iret
addr16
xchg
imul
xchg
mov
push
push
xor
xor
lea
stos
xchg
daa
and
movsl
out
cmp
push
js
pop
scas
call
imul
push
cmpsb
ficoms
out
push
push
mov
ja
mov
add
sbb
dec
mov
fwait
stos
sbb
pushf
lea
mov
cwtl
imul
out
fldenv
xlat
rcll
enter
enter
out
mov
lahf
scas
sbb
or
out
pop
lcall
in
mov
mov
call
loope
lods
sub
sub
rolb
pop
ret
cmc
ja
push
xor
jo
ja
cltd
mov
dec
pop
bound
je
or
insl
sub
dec
sub
test
dec
add
sub
xlat
xor
aaa
aam
mov
repnz
in
cmp
out
idiv
mov
jmp
inc
hlt
and
in
or
je
cmp
lea
shlb
rcrl
cmpsb
pop
ret
adc
in
fcmovu
lds
xchg
or
ja
lret
mov
pop
cli
dec
sub
out
jmp
pop
xor
out
fisttpl
stos
arpl
mov
icebp
loop
push
outsb
mov
fisubrl
dec
int3
jbe
out
or
pushf
adc
out
pushl
bound
adc
mov
daa
leave
enter
adc
and
lcall
mov
ljmp
leave
sub
add
in
lret
mov
ljmp
mov
fstp
mov
push
push
mov
xor
sub
pop
mov
or
iret
and
ficoms
dec
xchg
or
pop
fwait
xor
add
or
add
add
pop
pop
es
mov
mov
dec
dec
jmp
xor
jmp
sub
sbb
int3
xor
das
dec
xchg
lea
adc
mov
xchg
sub
pop
imul
std
jl
ljmp
sub
fmull
sub
js
fs
mov
mov
sti
cld
push
adc
mov
or
mov
into
push
and
loopne
sub
xchg
mov
cwtl
add
in
sub
and
push
cmp
movsb
add
call
mov
xor
xor
mov
lock
std
pop
mov
stos
or
jmp
cwtl
mov
idiv
dec
bound
and
insl
lret
stos
enter
push
jbe
push
rcrb
sbb
dec
stc
stos
push
add
shrl
fisubrl
jecxz
je
aas
push
inc
mov
jecxz
test
mov
push
xchg
loope
and
icebp
stos
clc
lods
andl
sub
movsb
pop
jle
push
xor
shlb
sti
shl
and
icebp
stos
cmc
or
stos
or
stos
loope
dec
div
pop
cmp
and
mov
push
pop
and
sti
imul
and
sahf
ljmp
pop
ja
cli
stos
sbb
cmp
fiaddl
inc
adc
iret
push
gs
sbb
movsb
xor
jmp
or
stos
push
vcvttps2dq
add
push
call
es
ret
movsl
test
into
enter
pusha
mov
imul
push
sbb
mov
in
mov
adc
sbb
cmpsl
clc
xor
ficomps
and
enter
mov
pop
dec
out
mov
pop
and
std
jp
adc
pop
stos
adc
dec
sub
mov
xor
ret
movsl
and
test
call
jnp
mov
mov
dec
mov
mov
outsb
xchg
jmp
out
xchg
xlat
xchg
push
mov
test
and
fildl
movsb
rclb
out
push
mov
mov
pop
cmp
and
ret
or
repnz
insl
aam
adc
adc
test
and
add
ds
js
js
pop
movsl
repz
mov
cli
jge
fmull
mov
push
fcomps
arpl
sub
jns
fdivs
lret
je
cwtl
lock
dec
xchg
pop
sub
out
sbb
cld
sub
sbb
mov
lods
ja
dec
add
cwtl
out
stos
loop
rorl
ljmp
ds
loope
and
pop
or
xor
sub
out
pushf
cli
fcoms
xchg
or
sahf
stos
ljmp
ret
clc
xlat
fdiv
gs
or
or
out
mov
pop
jb
outsb
sub
jl
popf
aam
lock
repz
xor
jb
add
rcrb
stos
movb
repnz
cmp
test
enter
pusha
sti
and
lret
lods
push
movsb
lret
and
clc
or
cmp
xor
xchg
mov
mov
ljmp
call
sbb
in
dec
jl
jb
stos
out
inc
push
nop
lods
xlat
call
inc
rorl
aad
stos
pusha
push
lahf
sbb
add
out
lret
outsl
in
and
pop
loope
and
call
repnz
cmp
cwtl
iret
jae
cmp
cwtl
jo
imul
sub
test
scas
loop
and
cmp
jo
sbb
xor
mov
call
fisubl
repz
popa
repz
pop
out
sub
ljmp
or
mov
and
aam
mov
int3
xor
loopne
imul
jl
sbb
frstor
stc
stos
sub
jmp
je
adc
mov
test
or
sbb
mov
pop
cmpsb
loopne
xor
fcomps
sbb
scas
mov
cld
xor
out
mov
sub
sub
insb
loopne
repnz
mull
sub
je
and
in
ljmp
dec
adc
scas
popa
imul
enter
stos
jmp
in
push
iret
sub
add
sbbb
movsl
push
je
das
xlat
insb
cmp
pop
in
jns
hlt
push
repz
cmp
mov
lret
jle
cld
dec
sub
mov
pop
outsb
iret
popa
push
xchg
idivl
aad
cmp
cmp
add
mov
jl
aad
pop
out
mov
or
xor
inc
bound
stos
xchg
test
pop
or
call
iret
push
sti
fwait
jmp
jnp
and
ror
adc
mov
mov
stos
loopne
loope
and
and
ljmp
mov
bound
stos
lock
xchg
xlat
shrb
mov
sub
std
out
or
icebp
or
stos
sub
out
loopne
int3
cli
out
sub
adc
mov
dec
sub
std
mov
repnz
push
fsubrl
cmp
aam
into
daa
repnz
xor
cmc
inc
clc
add
je
int3
mov
repnz
xchg
leave
and
or
clc
jmpw
repnz
imulb
shll
mov
and
sub
sahf
out
rcrl
loope
ljmp
adc
xchg
ficoms
cmp
sub
mov
mov
repnz
test
call
or
repnz
out
inc
sub
mulb
pop
and
movsb
daa
repz
ljmp
stc
popf
es
dec
mov
push
bound
pop
mov
xchg
mov
sub
push
fwait
shrl
sub
sbb
or
push
xlat
xchg
sub
add
jmp
fadds
dec
loop
in
in
xchg
mov
mov
jne
out
and
loopne
lret
repz
pop
enter
pop
sub
outsl
jp
mov
ss
pop
add
imul
fmuls
int
pop
frstor
in
dec
push
dec
lret
and
xchg
in
incb
fisttpl
ret
imul
scas
xor
xchg
int3
ret
loope
test
fmuls
in
fimuls
loope
test
inc
and
insb
sbb
movsb
dec
aad
sub
pusha
jecxz
popf
pop
jmp
lds
ss
lods
in
gs
xchg
imul
cwtl
lret
je
mov
lods
cwtl
hlt
push
push
xchg
add
repnz
gs
xor
ljmp
or
das
in
jae
push
sub
sbb
icebp
or
repz
pop
lods
stos
and
loop
fstps
bound
inc
gs
repnz
add
out
imul
sbb
out
pop
push
sub
ret
xchg
repz
adc
sbb
pop
fs
out
inc
outsl
cmpsl
fwait
jmp
jo
gs
pop
and
cld
add
mov
sub
ss
cmc
mov
or
xchg
and
sub
popf
cltd
bound
out
adc
pop
push
out
fs
pop
hlt
jno
cmp
or
xchg
cmpsl
add
jns
mov
sub
sub
arpl
jmp
jp
out
test
xchg
mov
inc
loopne
pusha
cmpsl
bound
test
sbb
push
nop
sbb
jae
mov
outsl
mov
arpl
sbb
es
xor
jecxz
in
sbb
movb
lock
xchg
push
or
fmuls
lcall
sbbl
or
jg
and
sar
stos
in
jae
mov
in
call
in
ljmp
jmp
outsl
insb
jecxz
mov
cwtl
mov
dec
push
inc
dec
add
js
mov
jmp
scas
mov
shrb
mov
mov
lods
sub
cmp
mov
mov
pop
or
nop
stos
lahf
jns
shld
daa
aaa
sbb
sub
or
stos
mov
fwait
or
sub
dec
test
call
cmp
dec
push
fimuls
add
or
insl
sahf
add
mov
loop
cmp
gs
aas
fdivrs
xchg
jg
jb
adc
stos
repz
sbb
test
dec
cmc
dec
test
jae
out
mov
test
push
aaa
pop
mov
fwait
mov
nop
or
mov
xchg
in
cmp
es
push
mov
cmp
sub
cmp
pop
rcll
push
test
sahf
xor
addb
in
inc
sbb
and
dec
adc
mov
movsb
or
inc
mov
subb
cltd
incb
repnz
test
out
mov
ds
xchg
insl
sti
shll
cmp
cmpsb
icebp
data16
hlt
fisttpll
aaa
cmp
lcall
fcoml
out
enter
testl
aaa
pusha
jne
cld
and
ljmp
lahf
aas
lods
and
mov
pop
lahf
cld
rclb
fcomi
sub
pusha
lock
jbe
fwait
lods
pop
push
cmpsl
cmpsl
sub
mov
jnp
xchg
sub
jno
popf
jecxz
cmp
cli
ljmp
lods
jb
imulb
jl
rep
sbb
fldt
test
loope
mov
mov
push
mov
dec
repnz
dec
push
or
popa
test
fwait
sbb
fisubrl
enter
insl
jns
xor
mov
fwait
xor
pusha
arpl
clc
xlat
ljmp
arpl
fwait
insb
xchg
mov
stos
sbb
pop
dec
out
sub
lods
loopne
aas
into
stos
xor
inc
fldcw
packuswb
pop
dec
test
xchg
mov
std
aaa
jmp
cltd
and
jb
int
pop
stos
or
push
xchg
pop
inc
cmp
sub
imul
mov
iret
push
adc
dec
shlb
mov
mov
fwait
test
and
insb
or
cmc
imul
xchg
test
dec
stos
fucomi
cmp
movsb
and
mov
out
mov
pop
stos
rcr
or
xor
inc
push
test
std
pop
jnp
sbb
push
and
xchg
pop
sbb
outsl
loope
cwtl
lea
lahf
mov
leave
mov
loope
and
or
push
mov
mov
xlat
pop
in
inc
jmp
fcompl
xor
mov
out
jge
inc
sti
lret
push
ljmp
xchg
jecxz
incl
lahf
xchg
out
addr16
inc
or
sbb
fsub
lock
iret
xchg
push
loop
inc
pusha
cmc
pushf
add
lret
mov
pop
dec
test
inc
push
imul
shl
je
fneni(8087
jecxz
cmpsb
pop
fsubrp
jnp
shll
cmp
fists
loope
iret
jmp
mov
and
xchg
loope
pop
fwait
xlat
inc
cli
aam
cwtl
movsb
cli
sub
pop
mov
clc
leave
addb
sbb
enter
out
stc
jb
xchg
inc
sub
insl
sub
imul
sbb
shl
loop
or
ret
sub
pop
test
lea
bndstx
mov
push
dec
add
adc
inc
test
sbb
sub
bound
cmp
fs
dec
aaa
mov
pop
mov
and
pop
mov
shrb
dec
lret
in
mov
nop
and
pop
lret
pop
push
xchg
lcall
js
fwait
push
rcrb
sbb
imul
push
test
mov
fldt
inc
rclb
or
sub
jb
pop
sub
cwtl
rep
or
mov
cmpsl
popa
aam
pop
sahf
pop
sbb
lahf
xchg
jmp
push
mov
call
scas
or
lret
xchg
movsb
rdmsr
cmp
sub
mov
xchg
loope
int
lret
out
int
dec
mov
push
ljmp
and
cmp
imul
or
iret
pop
add
in
imul
dec
sub
mov
aaa
mov
pop
je
stos
lock
mov
js
lods
movsb
cmp
cmp
cwtl
cltd
int
int
and
lcall
cli
mov
bound
cmp
inc
in
sub
ret
mov
cmp
pushf
cmpsb
sbb
jmp
mov
sbb
loop
or
cmpsb
push
out
xchg
aas
or
xchg
adc
cmp
xor
jo
mov
sbb
push
pop
cmp
movsb
mov
adc
sub
fsubs
les
pop
fadd
out
jmp
sub
adc
fcompl
ffreep
jb
popa
jle
js
fdivr
push
imull
sbb
cmp
fnstenv
cmpb
and
test
jae
xor
mov
mov
push
and
cmp
pop
pop
jle
call
stos
test
or
push
pop
jle
call
xor
xchg
xchg
aad
popa
or
mov
and
andb
xchg
adc
pushf
xlat
cmc
cld
cmp
repnz
mov
movsl
lret
int
cmp
rorl
fwait
aad
and
iret
out
stos
pop
int
sbb
push
movsl
fdivrp
push
cltd
stos
insb
scas
stos
div
mov
jl
stos
leave
pop
clc
call
mov
inc
lock
repz
push
lea
sub
test
mov
or
mov
xchg
in
dec
lock
mov
imul
sbbb
mov
sub
xor
pop
leave
push
push
cmp
cltd
rclb
ja
data16
adc
repnz
ret
mov
leave
push
gs
jne
pop
call
push
call
das
xor
mov
mov
xchg
xchg
lret
les
jle
fwait
divb
xor
inc
popf
sub
nop
cmp
xchg
stos
push
insl
xor
mov
push
mov
dec
sub
mov
fisubrs
xlat
add
inc
and
daa
jns
in
and
popf
inc
inc
fdivs
xor
jecxz
mov
sub
jp
jne
add
lcall
cmp
sti
mov
and
jp
fwait
pop
insl
addr16
in
daa
dec
inc
ds
pushf
ret
in
stc
or
add
add
pop
fdivrs
cmp
das
repnz
xor
mov
imul
in
je
sub
jno
cs
sub
outsb
stos
std
xor
fwait
sub
in
push
lret
imul
jno
push
push
jecxz
cwtl
stos
repnz
lret
jecxz
push
outsb
fdivl
mov
test
adcl
hlt
sub
adc
add
and
je
jb
stos
scas
or
into
xor
jne
jbe
addr16
lods
cmovo
fcoml
std
pusha
testb
cmpsl
adc
cmpsb
ret
popa
cmp
loop
push
add
pop
cmp
rorl
xor
aam
push
jbe
xlat
fs
or
ljmp
lcall
adc
sbb
movsl
jb
adc
aas
xchg
sahf
into
out
out
test
repnz
lock
jb
sbb
cs
mov
sub
push
pop
cmc
sbb
loope
ret
xchg
add
pop
fs
cwtl
pusha
pusha
and
rorb
iret
mov
lret
add
iret
push
pop
xor
loope
dec
jp
cli
mov
lods
leave
sbb
jne
movntq
imul
push
ret
xchg
sbb
pop
push
stos
andl
xchg
imul
call
sbb
pop
pop
cmpsb
cmpsb
mov
sbb
pop
add
sbb
adc
xchg
dec
imul
addr16
and
ds
roll
lret
mov
rcrb
movsl
xlat
out
fidivrs
hlt
jg
pop
sub
int
cmp
mov
mov
adc
cs
fstl
sub
pop
mov
dec
cmp
push
cmpsb
adc
push
mov
inc
fcmovu
stos
sti
dec
daa
pop
outsl
in
movsb
test
xchg
jnp
jmp
dec
cmp
iret
movsb
insb
call
sub
cwtl
movsb
push
stos
mov
sub
pop
inc
jp
pop
sub
gs
dec
dec
imul
xor
pop
pop
js
push
pop
sub
xorl
push
mov
andl
dec
cmpsb
sub
inc
imul
out
out
add
cmpsb
bound
imul
xor
movsl
loopne
or
ds
push
and
scas
dec
shlb
and
push
inc
push
ljmp
mov
jne
and
incl
and
and
mov
nop
fldcw
lods
jbe
ret
aaa
jl
mov
mov
sub
mov
jno
ljmp
cli
and
dec
cltd
sub
insl
lret
dec
loopne
dec
or
and
movsb
pop
das
pop
test
enter
push
stos
outsl
sub
fildl
dec
popaw
out
lods
mov
sub
in
pop
xchg
das
sbb
call
jg
out
sbb
dec
jl
mov
lcall
aas
push
gs
mov
out
xor
andl
cld
add
or
jmp
mov
jae
arpl
fidivl
and
fisubl
push
cwtl
xchg
and
push
or
mov
scas
mov
fisttpll
test
or
push
aad
lock
loopne
movsl
clc
sbb
or
fdivl
mov
sub
sub
fcomi
inc
sti
inc
aad
pushf
inc
sub
leave
subb
enterw
push
test
test
cmp
fistl
je
mov
pop
and
mov
lahf
sub
loope,pn
pop
inc
outsl
test
insl
sbb
scas
push
imul
enter
sbb
lock
leave
movl
stc
mov
push
movsl
bound
add
test
xor
repnz
push
pop
ja
movsb
sbb
push
push
jge
mov
mov
lret
xchg
iret
push
jo
jg
sbb
lretw
mov
pushf
cld
das
pop
sub
out
jle
cmp
cmp
push
aas
jnp
and
xchg
push
sbbl
out
je
sbb
test
repnz
jg
scas
les
mov
and
loopne
sbb
pop
or
addb
push
or
or
xor
je
lock
xchg
repnz
pop
xchg
push
out
or
jbe
lds
ret
popf
enter
xchg
push
xchg
lea
push
imul
jnp
xor
es
xchg
sub
sbb
jo
sbb
ljmp
mov
lea
sbb
jmp
sarb
out
shr
js
xor
and
mov
aas
jno
cwtl
add
aad
jmp
mov
loope
or
daa
repnz
in
loop
sub
test
leave
push
jb
sbb
cmp
dec
stos
cmc
push
mov
std
mov
rcr
adcb
mov
hlt
xchg
mov
decl
inc
ret
fwait
sbb
add
clc
fwait
or
leave
rcrl
jle
and
and
test
xor
or
enter
or
dec
inc
push
repnz
sbb
lock
outsl
cmp
ljmp
cmp
lea
div
fimull
xchg
jle
jmp
push
jge
test
es
sub
rep
cli
sub
daa
shrb
cmp
ret
repnz
in
leave
or
or
outsl
jge
and
inc
mov
lds
dec
mov
jl
stos
ud2
popa
inc
mov
xor
cmp
loopne
cltd
mov
movsb
add
add
push
in
lret
out
out
fisubl
adc
negb
fdivrl
sbb
inc
sti
popa
call
sbb
cltd
outsl
aad
add
jnp
sub
movsb
sub
hlt
repz
push
aaa
ret
das
sub
insl
or
movsb
pop
cmp
inc
sub
mov
pop
arpl
js
test
and
insb
scas
loop
das
mov
mov
iret
cs
stos
sub
cmp
insl
jo
lret
sub
add
out
and
cltd
sbb
jmp
daa
sub
in
add
cli
dec
repnz
sub
lods
xor
lea
pop
add
cmpsb
fs
fldt
jecxz
test
enter
sub
in
mov
lods
loopne
add
lret
xchg
pop
outsl
lods
push
lret
jnp
and
lcall
fisubrl
jmp
mov
or
xor
sub
and
out
xchg
repnz
idivl
insl
xchg
sarb
cmp
incl
es
inc
xchg
lock
ja
in
jmp
shrb
cwtl
or
and
xchg
fimuls
sub
shr
jp
call
fdivrs
fdivs
inc
cli
sbb
add
in
jb
jg
adc
add
stos
xacquire
ja
cmpsb
ficompl
push
push
mov
adc
insb
js
xchg
mov
cwtl
popa
cmp
xchg
push
jge
mov
xchg
daa
ds
shlb
push
pop
loope
xchg
fwait
or
pop
pop
xor
cli
sarb
xchg
pop
cld
adc
sahf
cmp
imul
xor
iret
cltd
aad
out
sbb
sbb
push
subb
in
cltd
sub
mov
das
mov
pop
lock
enter
inc
push
lods
xchg
jmp
adc
testl
sbb
xor
pop
fsubs
jmp
cmp
sbb
mov
outsb
mov
fsubrs
add
rclb
dec
cwtl
sbb
xchg
arpl
pop
jmp
ret
sub
and
add
mov
or
jmp
xchg
test
adc
in
mov
out
movsb
push
lret
fs
pushf
lcallw
and
and
push
out
sbb
add
and
call
sbb
out
xor
cmc
jecxz
enter
sub
add
out
add
fs
data16
add
push
icebp
pop
jecxz
or
nop
xor
and
xor
push
insb
adc
mov
in
add
movsb
xchg
mov
jp
sbb
dec
and
dec
out
es
ss
negb
int
movsl
ljmp
xor
mov
jp
jge
cmpsl
int
std
cmp
fsubl
outsl
or
dec
insb
stos
lea
mov
push
adc
xor
sub
mov
nop
pop
iret
imul
cmp
lds
imul
xor
pop
sub
xor
dec
rorl
popa
repnz
mov
mov
push
loope,pt
mov
shlb
insb
pop
add
scas
xchg
imul
or
jecxz
dec
ljmp
cmc
pop
xlat
and
dec
test
js
xor
xor
jb
movsb
jmp
pop
cs
sbb
shrb
pop
jns
and
xlat
lretw
push
ljmp
lock
cld
sbb
bound
pop
and
adc
daa
sub
lods
fsubl
adc
bound
lret
add
shlb
fs
jmp
pop
xlat
jmp
jmp
and
xlat
fsubs
les
xchg
push
clc
loopne,pt
adc
jmp
test
cwtl
adc
sbb
mov
popa
neg
push
cld
lods
add
hlt
adc
inc
popa
push
mov
or
adc
add
lock
sub
xchg
bound
inc
sub
aaa
insb
jge
test
jmp
cmpsl
movsb
mov
stos
sub
in
inc
or
out
jmp
xchg
mov
sbb
push
xchg
lock
sahf
imul
mov
mov
in
mov
jl
add
or
pop
loop
nop
das
sub
or
pop
cmp
cmp
sub
std
cld
and
lds
inc
sub
cmp
adc
ja
push
insb
test
std
pushf
and
sub
sub
ja
pop
and
dec
clc
push
mov
call
or
pop
mov
int3
adc
aad
cmp
push
rcll
dec
outsb
out
lret
mov
jge
sub
call
test
sub
or
jp
mov
js
push
nop
jo
mov
sub
sub
cmpsl
lods
add
or
rcrb
iret
stos
push
mov
clc
js
sbbb
dec
dec
pushf
pop
sub
sbb
insb
arpl
repz
scas
cmp
fidivrs
imul
popf
es
enter
in
sub
cmp
pop
xchg
mov
xchg
aas
mov
and
mov
push
cmp
mov
add
or
lcall
fiadds
pushf
sbb
shlb
popa
lock
xor
push
pop
jns
xchg
das
mov
bound
call
cmp
cli
repnz
je
and
mov
or
enter
dec
jns
std
lret
sbb
push
cltd
lret
jg
jecxz
sbb
aam
imul
add
loopne
push
jmp
sbb
mov
mov
sub
scas
les
or
pop
mov
lret
push
neg
add
lods
pop
out
push
xor
cwtl
arpl
jo
or
scas
xlat
jecxz
insb
cmpsb
push
repz
lret
out
push
cs
inc
aaa
lret
cmp
sub
popa
lods
enter
jbe
ja
test
cli
pusha
jns
ss
repnz
push
lcall
jmp
push
in
iret
cmc
dec
pop
out
xchg
test
cmp
ret
or
pop
out
push
imul
cltd
sub
mov
push
lods
dec
sahf
push
pop
dec
lret
hlt
jo
mov
enter
lods
mov
and
mov
test
and
ljmp
jno
adc
movsl
orl
lret
push
lock
mov
jecxz
outsl
js
loop
and
cmp
lret
scas
cli
dec
sub
mov
shlb
cmpsl
bound
pop
stos
lods
sub
xor
pop
testb
bound
mov
fmull
and
pop
mov
loop
sbb
and
pop
pop
gs
xchg
addr16
ret
fsubrl
inc
divl
dec
dec
and
dec
push
lea
shrl
dec
call
fcmovu
dec
jnp
std
lcall
sub
push
mov
lods
jp
dec
out
sub
mov
cwtl
sbb
in
iret
jmp
sbb
adc
mov
lret
mov
sbb
adc
jecxz
mov
push
add
imul
repz
push
dec
rcll
scas
dec
lcall
stos
and
lods
cmp
pop
mov
daa
stos
imul
and
or
sbb
mov
push
lahf
push
sbb
movsb
mov
lea
jmp
xor
cmp
sub
dec
shlb
rcll
enter
pusha
ss
in
arpl
or
out
lds
and
fildll
iret
es
push
and
out
in
ret
dec
xchg
repnz
or
xchg
and
mov
leave
cmp
cmpsb
sub
movsb
js
add
jbe
lea
pshufw
xchg
enter
sub
jb
cmpsb
mov
jl
jne
fiadds
jge
or
cmp
jmp
or
jecxz
sbb
mov
mov
ret
loopne
mov
test
stos
jp
xchg
sub
pop
cltd
call
mov
push
cli
pop
jbe
imul
cmp
iret
in
mov
mov
mov
sub
mov
xor
lret
sub
popa
ficoms
in
push
pop
addb
sti
push
movsb
addl
pop
jg
bound
adc
xchg
imul
xchg
sub
jo
stos
int
fsts
pop
pop
dec
jne
cwtl
rcl
out
push
push
mov
aam
test
loop
fmuls
lock
cmc
or
cmpsl
subb
icebp
mov
add
push
mov
in
mov
mov
clc
jnp
push
cltd
pop
in
sbb
dec
mov
shll
sub
inc
xchg
loopne
mov
jecxz
and
push
pop
movsb
sbbl
mov
and
loopne
pop
scas
and
mov
iret
sbb
sbb
push
and
jb
neg
adc
lret
sahf
bsf
test
test
cmp
leave
loopne
and
and
pop
sub
and
orl
test
es
xchg
imul
xlat
les
sti
hlt
adc
int
mov
xor
add
lds
fdivrl
ljmp
push
ja
mov
int
lds
xchg
dec
pop
sub
cli
leave
and
jle
scas
or
aam
jmp
outsb
or
shlb
stc
or
cmp
xor
jecxz
dec
out
ljmp
jp
rcrl
adc
xchg
ret
jge
das
lds
sbb
in
imul
mov
loopne
jmp
jp
or
mull
cld
lret
mov
lret
iret
std
dec
cwtl
cmpsl
leave
ss
movsb
xlat
adc
fmul
das
mov
ja
push
adc
and
push
les
inc
repz
lret
sarb
popf
out
fwait
lcall
popf
lds
adc
loope
data16
call
sub
mov
test
fs
pusha
pushl
lret
je
push
repnz
jmp
subl
xchg
incb
js
imul
lock
clc
push
pop
and
rcrb
sbb
es
in
shlb
push
xchg
stos
jecxz
enter
repz
ljmp
icebp
jge
in
push
mov
negb
cli
add
mov
xor
xchg
add
repnz
pop
fcomi
jge
push
hlt
and
out
imul
xchg
les
ljmp
jmp
xor
call
jo
mov
dec
test
test
clc
push
in
or
cmp
outsl
mov
fcompl
movsl
jmp
fwait
push
jl
push
or
ret
cltd
test
test
icebp
sbb
cmp
sbb
pop
xor
data16
loopne
movsb
test
xor
jmp
ret
lea
cmp
mov
sahf
stos
loope
and
stos
imul
push
es
mov
shll
dec
mov
mov
mov
mov
jo
daa
and
push
sbb
aad
jnp
out
lds
mov
adc
lods
out
pop
in
or
add
jns
push
xchg
mov
test
jnp
ret
mov
sub
or
and
xchg
xor
push
cmp
push
enter
ficoms
xchg
cmp
cmc
iret
jmp
and
int3
sbb
push
lea
sbb
pusha
enter
loope
movsb
call
ljmp
xchg
ja
ja
pop
sbb
ljmp
js
mov
int3
lret
clc
movsl
xchg
sub
rcl
jl
mov
outsl
ret
push
aaa
inc
sub
ror
mov
xor
loopne
ljmp
lods
daa
iret
iret
sbb
mov
mov
lea
adc
jg
mov
inc
imul
lret
sub
sub
ja
outsl
test
jecxz
psrld
pushw
cmp
lret
lahf
jbe,pn
fistps
or
jg
or
stos
sub
push
jge
aam
mov
pusha
jnp
xchg
pusha
pop
clc
pop
push
cmp
lock
cs
sbb
add
out
int
jmp
outsl
ljmp
mov
ret
xlat
pop
cmc
adc
jnp
cmp
sub
hlt
cmpsl
add
or
xchg
inc
mulb
lret
cmc
andb
pop
xor
inc
push
out
sub
test
imul
fisttpll
js
and
sub
mov
notb
push
ror
dec
lods
je
cltd
icebp
test
xor
xchg
and
push
add
push
push
leave
xlat
repz
jnp
jp
xor
push
xchg
stos
loopne
sub
addr16
daa
dec
fldcw
pop
push
imul
stos
test
cmc
fsubrs
sub
push
add
sub
sbb
or
in
mov
fcoms
jle
lcall
cli
lcall
sub
mov
lock
inc
jae
lds
shl
pop
shll
lods
imul
insl
sarb
push
inc
cmp
sbb
inc
xor
ljmp
push
lds
inc
sub
sbb
fcomps
push
push
shll
cs
pop
or
pop
add
leave
out
pop
dec
mov
sub
pop
sarl
jl
test
aad
sub
ss
in
test
and
mov
inc
daa
ret
pop
in
icebp
imul
push
push
cmp
pop
add
push
sub
into
sti
or
clc
imul
lock
lret
cli
or
insl
fnstcw
xor
and
dec
ss
pop
sub
xchg
lahf
push
and
out
in
sbb
test
push
cmp
xchg
push
pusha
inc
js
cld
cwtl
je
cwtl
lods
das
mov
cmp
in
data16
shll
fs
jecxz
and
cmpsb
lret
push
es
lret
mov
mov
rcr
mov
ljmp
andb
sub
inc
or
xor
insb
sbb
inc
scas
cmp
pop
lahf
mov
int
movl
mov
pop
call
mov
loop
mov
sarb
mov
ror
mov
xor
cmp
mov
mov
iret
lds
mov
xlat
imul
adc
jns
xchg
pop
cli
sbb
jne
sbb
cmp
sub
fldenv
mov
js
hlt
stos
clc
mov
test
sub
xchg
das
pushf
in
aad
nop
repnz
test
mov
xlat
add
fcmovnb
fwait
xchg
add
pop
fwait
insl
adc
and
push
add
and
daa
sarb
aam
and
in
or
inc
xor
sub
xor
mov
into
mov
or
jmp
gs
or
mov
sub
pushf
push
push
jge
add
cli
lods
mov
sbb
scas
or
cld
stos
outsl
xchg
repnz
and
test
push
add
or
andb
dec
pop
gs
outsl
lret
movsl
xor
lcall
cwtl
bound
lret
out
aad
adc
imul
cld
mov
fwait
lahf
xchg
pusha
std
adc
jmp
or
aaa
cmc
movsb
movsb
sub
pop
mov
sbb
sti
fsubrl
push
lea
stos
lcall
popa
ja
xchg
or
inc
sbb
inc
mov
adc
push
sub
insb
and
push
stos
mov
mov
fwait
mov
in
push
pop
and
cmpsb
hlt
add
pop
pop
and
outsl
add
pop
andb
xor
adc
cmc
fsubr
loopne
pop
xor
aad
push
push
pop
lcall
mov
insb
popa
pop
insl
pop
pop
sbb
fldln2
or
add
leave
andb
aad
pop
adc
dec
outsb
stos
sahf
stos
push
jmp
sub
dec
xchg
adc
jecxz
or
test
rorl
lret
out
fmul
pop
add
add
fadd
ljmp
mov
imul
lds
xchg
icebp
fldl
outsb
pop
cmp
jo
inc
lret
inc
sub
insb
xchg
xor
jb
fbstp
or
push
or
sub
mov
stos
push
lret
or
add
jmp
sbb
imul
lods
fisubrl
stos
cmp
adc
dec
out
das
cmp
mov
cmp
in
xorb
mov
cmpsl
jns
ja
pop
pop
stos
jae
xchg
mov
dec
push
cmp
movsb
repz
adc
and
aas
and
push
mov
pushf
faddl
xor
les
or
inc
jg
cmp
cmp
lret
mov
mov
mov
imul
int
popa
mov
in
and
lahf
lods
inc
xchg
insb
xchg
push
jns
in
push
mov
out
jb
cmp
mov
mov
pop
js
andb
push
sub
push
aaa
add
lock
ret
sub
mov
mov
test
xchg
mov
jmp
push
loopne
mov
rcrb
and
iret
jg
push
rcr
add
out
sub
pop
add
dec
mov
mov
je
add
pop
subb
xor
jge
inc
lret
pop
adc
mov
nop
inc
lods
dec
xchg
dec
jo
cltd
ljmp
cltd
inc
push
pminsw
jge
pop
arpl
push
mov
stc
cli
sub
sbb
mov
jb
xor
icebp
sbb
xor
jns
clc
sub
loope
sub
lock
sub
pop
je
movsl
add
cmpsb
aad
loop
out
dec
pusha
stos
out
sub
in
sub
mov
insl
push
xchg
incb
out
decb
mov
mov
push
das
insl
bound
out
lock
xor
inc
or
out
jecxz
cld
sti
shl
mov
sub
icebp
in
adc
pusha
leave
pop
call
and
sbb
xchg
mov
in
lds
stos
or
mov
aas
js
cmp
aam
daa
jmp
sbb
shl
aad
clc
ljmp
push
mov
outsl
inc
call
xor
insl
inc
or
jnp
das
testb
repnz
xlat
or
xchg
enter
pop
xchg
mov
pop
and
out
loop
imul
pop
or
in
popa
rcll
sub
dec
jo
iret
cmp
adcb
iret
outsb
lods
mov
scas
syscall
fs
stc
in
loope
lods
xchg
hlt
push
iret
lods
adc
addr16
jne
insb
inc
out
jmp
cltd
lahf
test
pop
call
lret
lea
jl
ljmp
ret
adc
or
mov
mov
inc
mov
sti
stc
pop
mov
jp
test
and
adc
popf
fdivs
inc
insb
mov
sbb
pop
or
push
and
mov
sbb
scas
or
push
cmp
and
adc
stc
arpl
inc
jecxz
sub
loopne
and
iret
push
shrl
mov
jmp
mov
xor
jp
pop
lret
rcrl
fstp
pop
jecxz
jns
nop
repz
jle
subb
pusha
js
jp
xor
leave
and
sbb
push
sub
pop
pop
fcoms
or
cmp
mov
int3
pop
lret
sahf
mov
mov
dec
iret
daa
popa
adc
and
insl
push
hlt
out
mov
push
push
and
shlb
cmpsl
ficomps
sahf
in
push
xchg
mov
pop
mov
movsb
pop
in
sbb
dec
call
mov
mov
jno
push
out
out
pop
inc
daa
xchg
movsb
jnp
stos
mov
xor
push
bnd
add
decb
in
jge
lea
mov
fptan
pop
iret
cli
cmpsb
in
adc
dec
push
add
mov
jecxz
xor
in
stos
cs
movsl
and
jo
mov
cmpsl
adc
sub
aas
call
push
cmc
lret
or
fadd
das
or
cltd
icebp
js
push
push
pop
cmp
mov
dec
imul
enter
cmpsb
stos
iret
filds
jne
mov
xorb
mov
push
jae
sbb
fnsave
xor
int
dec
jo
cmp
pop
add
data16
popf
xchg
jmp
pop
cltd
test
sub
fildll
lahf
das
or
cltd
sub
lret
cmp
or
jns
ljmp
mov
xor
int
or
cld
pop
ret
and
adc
cmp
fsubs
cmp
popa
push
dec
ljmp
push
jno
insb
sbb
fadd
and
out
dec
add
adc
repnz
test
fldenv
dec
insb
cmp
les
insb
xor
cmp
test
cld
cmp
cmpsb
insl
mov
mov
ja
jno
aam
pusha
xchg
arpl
in
std
aas
into
roll
push
push
sahf
popf
cli
dec
movsb
cmp
adc
xchg
pop
mov
push
pop
cmp
sbb
xor
fwait
rcrl
sbb
pusha
repnz
iret
cmpsb
and
movsb
xchg
xchg
imul
fsubs
stos
sub
daa
stos
push
repnz
hlt
stc
out
mov
fs
cld
loopne
push
push
pop
xchg
lock
aad
aam
test
lcall
xchg
repnz
add
cmp
test
inc
mov
mov
mov
mov
adc
loopne
repz
addr16
adc
outsl
jmp
sub
in
imul
sub
mov
mov
bound
mov
sub
pop
mov
pop
pop
jo
movsl
pop
xlat
pop
cwtl
out
gs
les
aas
sub
insb
pop
ret
push
cli
loopne
mov
cwtl
cmp
sub
ljmp
mov
adc
mull
sub
hlt
lods
mov
or
into
fwait
mov
popa
daa
lods
cmc
lods
sub
ss
cmp
test
xchg
pusha
or
pop
ret
cmpsb
in
testl
jb
daa
sbb
jmp
mov
cmp
inc
push
jge
jmp
adc
mov
sbb
lds
insl
push
enter
adc
pop
movsb
jo
cmp
mov
pusha
movsl
stos
xchg
in
test
inc
popa
add
lods
dec
sbb
sub
sub
xchg
sbb
mov
mov
leave
inc
push
or
and
sub
mov
movsl
arpl
or
pop
sub
in
icebp
loop
pushf
pop
out
sbb
xor
repnz
mov
or
push
cli
repz
fstps
push
sbb
repnz
pop
arpl
out
add
pop
or
pmaxsw
mov
ja
cwtl
fdiv
repnz
leave
cltd
add
add
adc
cmp
fwait
adc
imul
push
mov
ja
sub
sarb
vandps
mov
je
pop
lods
adc
outsl
pop
inc
out
test
sub
jae
or
xlat
jecxz
or
add
rorl
push
mov
bound
xor
and
sbbl
fimuls
in
js
stos
dec
dec
ljmp
xchg
xchg
mov
mov
adc
fsubr
pop
out
pop
fimull
cmpsb
gs
iret
mov
dec
int3
xlat
or
ja
mov
push
fsts
sub
sbb
and
out
pop
in
pop
sahf
imul
push
popa
mov
mov
call
sub
xchg
or
call
add
jbe
xor
or
jo
push
test
bound
out
imul
push
lods
add
repnz
pushf
cmp
lret
je
int
pop
arpl
loope
fs
xor
insl
cmp
pop
insl
lea
aaa
bound
ja
mov
xor
mov
pop
pop
and
sbb
pop
lret
xchg
xor
fbld
sub
jbe
sbb
imul
lahf
mov
out
cmc
sub
das
sti
xchg
mov
and
pop
xchg
push
push
or
push
test
dec
adc
xor
xchg
pcmpeqb
pmaxsw
stos
subb
xchg
xchg
int
movsl
pusha
push
bound
daa
mov
loope
sbb
in
add
xor
nop
push
push
dec
out
mov
cwtl
insb
scas
sti
mov
pop
and
movntps
ds
add
stos
pop
sbb
dec
movsb
cmpsb
sbb
aad
bnd
or
bound
and
add
js
or
sub
fstps
push
cs
inc
push
stos
and
mov
out
fsubl
outsl
mov
sbb
or
push
push
pusha
inc
out
dec
cmp
mov
sub
inc
or
and
arpl
sub
and
stos
push
lea
fimuls
andl
or
sub
ret
std
dec
or
and
pop
dec
xchg
xor
mov
cmpsl
sbb
es
or
push
mov
or
mov
xor
enter
sub
fisubl
sbb
es
fistpl
push
and
or
mov
in
lcall
jecxz
pusha
jo
out
jecxz
cmpsb
xor
mov
sbb
call
sbb
push
mov
pop
mov
test
leave
dec
popa
jo
mov
bound
dec
and
sub
clc
sub
fs
or
out
rolb
or
cmp
adc
sub
mov
sbb
or
cmp
mov
or
push
rorb
jns
jmp
in
push
pusha
incb
in
mov
sti
pusha
add
xchg
push
and
stos
mov
js
lock
or
int
div
outsb
test
ss
push
push
test
and
inc
mov
leave
dec
popf
mov
xor
sub
lock
cmp
cmp
gs
cmp
and
and
pop
mov
sahf
sub
push
add
fsubs
xor
inc
add
pushf
sub
stos
sub
cmpsl
jmp
data16
and
xor
jnp
xchg
mov
push
and
xchg
mov
jae
push
and
and
movsb
stos
sub
cs
and
xlat
cmp
rorb
pop
jns
fwait
xor
icebp
icebp
andl
gs
pop
leave
rorl
or
pop
shlb
xor
mov
add
xchg
insl
pop
js
fwait
adc
in
fiaddl
add
add
outsb
cwtl
mov
daa
daa
mov
or
adc
sub
lcall
ficompl
test
out
mov
jmp
mov
shr
jne
pop
adc
outsb
stos
pop
aam
pop
pop
mov
add
ljmp
fwait
and
xor
and
movsb
jg
inc
bnd
xor
negl
mov
jmp
xchg
or
and
int
xchg
jns
xchg
cmpsb
lea
arpl
clc
dec
and
stos
fs
push
xor
out
aam
or
shr
sbb
ds
adc
fmuls
mov
jecxz
inc
test
mov
loop
cmp
nop
test
jbe
outsb
repnz
add
lcall
mov
xchg
sbb
lea
cmp
adc
inc
in
nop
dec
leave
jge
lret
adc
outsb
std
das
mov
and
stos
or
gs
mov
dec
out
jmp
and
ljmp
out
call
stos
jmp
push
sub
and
in
sbb
sub
mov
jge
cs
ljmp
popf
sub
pop
xor
mov
mov
fwait
adc
sub
mov
lret
fmuls
sbb
daa
add
pop
add
pop
mov
push
bound
sbb
mov
imul
and
sub
jl
mov
into
rcrb
imul
orb
mov
xlat
pop
push
sub
cltd
dec
push
cli
push
mov
push
fcmovnu
mov
push
adc
jns
dec
repz
xchg
adc
push
sub
loope
ljmp
hlt
std
aaa
cmp
mov
adc
mov
pusha
test
dec
testb
stc
daa
xor
or
inc
ds
pop
sahf
repnz
in
cmp
push
aas
cmp
pushf
mov
ficompl
sub
test
jl
or
rorl
dec
adc
test
inc
adc
fstps
jns
or
xchg
aad
adc
icebp
xlat
mov
mov
jmp
push
push
adc
je
mov
adc
test
div
stos
mov
adc
or
stc
push
outsb
xor
int
pop
jecxz
dec
xchg
sub
lods
sbb
hlt
inc
dec
xchg
pmuludq
fdivr
clc
sub
mov
mov
jne
loop
sbb
sub
ret
sub
lret
in
sub
gs
int3
pslld
xchg
push
xor
or
outsl
fisttps
xor
stos
xor
pop
cld
push
xchg
push
call
xchg
push
xchg
cli
sbb
cmp
stos
dec
and
xchg
lods
sub
adc
je
cmp
or
pop
sub
shlb
mov
sbb
or
iret
add
dec
loopne
mov
repnz
fidivl
punpckhwd
jns
or
push
out
rolb
sub
repz
and
sub
mov
insb
add
in
stos
push
adc
mov
lcall
push
cmpsl
pop
sub
mov
sbb
push
sub
je
mov
sub
adc
cmp
mov
cmp
inc
sbb
jmp
repnz
stos
jmp
cmp
cli
sbb
mov
call
das
dec
mov
sahf
repnz
sbb
add
mov
sbb
push
call
imul
rcl
ja
sbb
adc
repz
adc
lahf
fbstp
sub
mov
and
jns
out
jns
pushl
sub
pop
in
xor
scas
and
mov
xchg
inc
ljmp
adc
lret
popa
or
cmp
lret
add
ss
cmp
jns
sub
adc
in
mov
add
outsb
jecxz
movsl
jno
call
shl
sbb
negb
push
lea
cmpsb
or
fldl
jp
test
dec
test
roll
lret
pop
fmuls
adc
pusha
adc
sbb
jl
sub
out
clc
sub
or
and
sub
and
data16
and
stos
mov
jmp
mov
in
mov
out
iret
xchg
mov
xor
loop
mov
or
sahf
push
push
loopne
adc
and
movsb
or
mov
and
imul
mov
mov
cmp
mov
dec
orl
xchg
fxch
and
in
mov
mov
sarl
les
fldenv
rorb
xchg
dec
or
leave
outsl
out
adc
stc
add
aad
stc
mov
xor
cmp
sbb
fcomps
jge
fistpll
push
inc
push
xchg
or
insl
js
cmc
das
dec
cmpsb
sub
sub
lods
mov
out
insl
mov
mov
mov
mov
sub
mov
xor
imul
and
loope
arpl
push
stos
imul
sbb
mov
xchg
or
into
jl
aad
or
mov
out
popa
adc
or
xchg
mov
cli
movsb
sub
cmp
in
sbb
adc
filds
inc
sbb
mov
mov
andl
pushf
dec
jne
sbb
pop
stc
and
outsl
int
cli
sub
push
in
loopne
push
pop
sub
xchg
and
add
cli
sbb
sub
in
mov
rclb
repz
lret
mov
sub
repnz
and
inc
aas
xchg
in
jecxz
lock
popa
inc
pop
icebp
pop
and
pop
mulb
mul
lea
mov
lret
in
sub
mov
mulb
hlt
and
sub
inc
sub
dec
lods
sbb
and
lret
mov
daa
push
int
es
sbb
shl
aam
jmp
mov
xchg
je
call
ret
fmuls
pop
mov
jecxz
ljmp
adc
repnz
int3
stc
daa
imul
repz
int3
cmp
sbb
stc
insl
xor
scas
sbb
mov
sub
je
mov
cli
adc
gs
sarb
cld
jp
adc
cwtl
in
loop
adc
mulb
adc
sub
and
test
xor
mov
clc
lcall
add
inc
lock
lea
and
fsubl
pop
mov
lret
sbb
out
mov
xchg
sbbb
jl
repz
push
pop
mov
or
jb
push
stos
lret
repnz
push
sbb
daa
xchg
push
inc
sub
adc
inc
push
lods
sarl
shll
jmp
or
repnz
outsl
dec
add
xchg
movsb
cmpsl
pop
jge
int3
adc
pop
call
sub
pop
xchg
xor
inc
jno
into
pop
movsb
inc
mov
repnz
ret
fsts
dec
sub
movsl
imul
xor
pop
sub
addr16
cmpsl
loop
inc
cmp
mov
sbb
xchg
jecxz
test
sub
in
daa
call
push
lret
out
lea
int3
out
and
pop
push
inc
ds
leave
push
push
call
and
lret
insl
add
jno
inc
imul
fwait
pushf
inc
sub
les
fcmovb
xchg
pushf
xor
push
pushf
fdivr
das
scas
clc
pushf
movsb
idivl
pop
notb
or
es
sub
add
or
sbb
xchg
and
jg
mov
repnz
lock
sub
push
ret
xor
xor
or
mov
idivb
pop
pushf
add
les
push
lret
cmpsb
sbb
sub
ja
cmp
repnz
out
sub
fimull
lcall
pop
insl
addl
fsubl
fs
pop
dec
or
jl
adc
adc
pop
sahf
or
stos
adc
das
dec
and
or
jl
cld
pop
mov
lods
mov
test
mov
or
adc
or
pop
mov
test
lcall
in
push
push
leave
int
sub
ret
cwtl
jg
iret
sahf
mov
xor
sbb
cmpsl
jle
popa
test
sbb
dec
iret
out
cmpsb
ja
sbb
pop
sub
repz
call
add
sbb
pop
and
test
mov
or
mov
mov
call
jl
out
mov
and
cwtl
sbb
repnz
ljmp
xchg
cmpsb
xchg
dec
xor
test
repnz
js
and
addb
stos
xchg
lret
dec
daa
adc
mov
loope
push
adc
stos
adc
je
mov
xchg
and
sbb
jge
mov
movsb
in
mov
and
pushf
xchg
mov
in
out
adc
cmp
inc
pop
jmp
lret
sbb
es
xchg
or
popf
jge
push
loop
and
xchg
push
cmp
sbb
pop
mov
xor
sub
mov
loope
jae
pusha
xchg
fldl
outsb
imul
or
fiadds
clc
lret
sub
mov
pop
adc
es
cld
js
and
test
pop
jae
mov
cmp
sbb
pop
movsl
imul
mov
neg
jg
cmpsb
adc
iret
movsb
repnz
jg
fimull
mov
cmp
lcall
pop
call
and
stos
int
fldcw
pop
ljmp
sub
push
fmuls
je
ja
pop
and
enter
test
es
cmpsb
daa
test
out
dec
dec
push
lea
ja
imul
aam
in
mov
imul
or
lea
rolb
xchg
sbb
in
push
or
adc
fldenv
dec
sbb
int
add
rcll
push
sub
jmp
sub
pop
into
fcomip
mov
jle
sbb
loope
or
jmp
fs
jbe
or
fdivr
push
and
xchg
das
sbb
fwait
adc
mov
mov
and
add
dec
add
or
sub
in
push
dec
jne
ljmp
cmc
xor
jecxz
and
mov
pop
out
int
push
pop
add
pop
dec
fistpl
nop
xchg
pop
repnz
fs
fistpll
aas
shlb
popa
cli
add
push
outsb
lret
iret
in
iret
icebp
xchg
sub
and
mov
xchg
out
or
mov
mov
hlt
cli
dec
jb
and
xchg
test
sbb
pop
daa
dec
incb
push
sub
cli
add
sbb
mov
xor
loope
in
and
and
subl
sbb
loop
and
repnz
cmp
ret
push
or
or
mov
or
mov
iret
jnp
enter
es
mov
and
mov
sbb
icebp
xchg
add
pop
jecxz
sub
xchg
pop
dec
sub
scas
fimull
sub
leave
jmp
sbbb
bound
js
push
je
mov
addr16
das
sbb
add
dec
iret
or
mov
fstps
lock
add
into
or
mov
insb
xchg
lock
inc
sub
outsl
fisttpl
push
pop
movsl
shl
cwtl
sbbl
ja
cwtl
push
mov
aad
jp
in
insb
fs
xchg
fwait
call
sbb
sub
sub
cli
adc
dec
jge
es
and
imul
in
mov
push
and
ds
mov
jnp
repz
sbb
and
js
dec
add
add
in
ljmp
les
rorl
xrelease
loop
sti
roll
xchg
pop
test
xor
sbb
call
mov
sbb
jmp
push
cs
cmpb
adc
or
loopne
push
sub
sub
sub
test
in
push
sub
and
sub
sub
sbb
lret
adc
xchg
mov
xchg
sti
or
jmp
or
xchg
sub
sub
mov
nop
movsl
popa
adc
fiadds
push
imul
sbb
adc
call
add
mov
jnp
cmpsb
lea
arpl
clc
lock
cmpsl
and
mov
cmpsb
icebp
int
push
ds
dec
inc
ljmp
mov
sbb
pop
fsubrs
mov
movsl
mov
fldt
cld
or
adcb
cmc
data16
std
cltd
pushf
add
aam
dec
push
push
add
pop
movsb
sub
jnp
vpcomb
call
ss
add
lret
inc
xor
jmp
loop
mov
add
sub
repnz
or
add
fsubs
sbb
sub
and
cltd
cmp
pusha
add
stos
sub
pop
cmc
sbb
fisttpll
sbb
and
inc
jg
inc
in
cmp
pop
sub
es
ljmp
addr16
fsubrl
aaa
rcr
mov
mov
add
jmp
xor
pop
jle
mov
xchg
mov
mov
out
loop
stos
pop
cwtl
cmp
xchg
add
cmp
fwait
lods
cmp
lea
clc
sub
shlb
push
test
int3
mov
sub
stc
xor
xchg
ret
push
adc
movsb
mov
push
dec
shlb
inc
jecxz
xorb
jb
push
sub
mov
ret
pslld
mov
cmp
mov
cmp
outsb
dec
mov
leave
pop
xor
xor
or
mul
push
icebp
xor
movsb
repnz
rolb
mov
xchg
sub
in
jno
out
push
push
pop
or
cmp
xor
jnp
cmp
aam
std
pushf
cmp
in
add
ljmp
test
ret
cmp
push
repnz
loope
out
and
aas
leave
jae
lods
push
add
imul
fisubrl
ficomps
int3
push
or
in
add
fidivrs
sbb
xchg
call
push
jne
popa
ret
push
sbb
rcrb
xchg
leave
adc
mov
and
xor
pop
dec
fsubrl
cltd
fs
xor
cmp
aas
movsb
rclb
push
mov
pusha
pusha
in
jecxz
adc
push
mov
loope
fiaddl
lret
or
mov
int
mov
xchg
adc
push
bound
jae
sarl
jae
cli
fldcw
pusha
mov
cmp
mov
xor
mov
mov
sbb
lds
inc
sbb
xlat
sub
jno
jb
pop
pop
dec
fsts
pop
add
add
fcomp
and
test
mov
add
xor
bound
and
sbb
inc
and
or
test
mov
or
pop
sub
je
cmp
xchg
jno
call
dec
adc
mov
outsb
in
xor
sub
test
incb
add
jnp
pop
pop
mov
bound
and
aas
test
std
fcompl
ret
loope
cmp
divl
stos
shlb
addr16
and
negl
or
int
icebp
mov
cmpsl
adc
jns
movsb
dec
jmp
and
xchg
das
cmp
int
rep
data16
test
lret
test
mov
inc
lods
xchg
cmp
nop
xchg
adc
js
xchg
sub
nop
les
loop
mov
je
notb
push
and
xchg
in
sbb
push
mov
lret
push
mov
xchg
pop
ficoml
lret
movsl
and
ret
pop
or
inc
pop
test
or
cwtl
insl
arpl
imul
dec
scas
data16
adc
adc
jl
sti
mulb
adc
or
insb
fsub
dec
call
or
and
cld
or
imul
hlt
pop
mov
movsb
dec
or
pushf
fwait
and
shrl
lcall
repnz
repnz
int
cmp
dec
xchg
pusha
inc
insl
shlb
push
movsl
jnp
jle
xor
and
add
aam
inc
repnz
stos
lret
inc
mov
cmp
pusha
push
loop
sbbl
sub
and
addb
cmp
sub
scas
call
aam
sbbl
movsb
daa
jmp
cmp
leave
and
or
or
or
push
imul
sbb
push
repnz
clc
stos
mov
or
add
xchg
push
mov
ret
xchg
fildl
mov
inc
mov
inc
jecxz
subb
xor
dec
test
push
and
out
fdiv
filds
mov
mov
push
xchg
adc
dec
mov
and
rorb
xor
cs
stos
xchg
aas
mov
inc
add
sti
pop
insl
cli
push
sarl
test
adc
or
or
sub
nop
and
lods
not
sub
jecxz
cmc
scas
push
imul
and
sbb
in
stos
cltd
call
mov
and
outsb
iret
lods
adc
negb
sub
ret
int3
mov
or
sbb
cmc
sti
or
lock
sub
push
divb
or
ds
loopne
dec
repnz
rcl
inc
jge
push
sti
shl
pushf
push
jp
mov
stos
fisubl
lcall
sub
test
sti
jl
hlt
pusha
and
adc
or
push
pop
aaa
insl
out
lret
insb
lcall
pusha
adc
dec
push
test
pop
cltd
repnz
pop
je
adc
jl
sbb
pop
test
push
out
pop
stos
scas
and
inc
adc
loop
or
adc
sahf
mov
movsl
fmulp
mov
movsb
or
arpl
mov
rorl
mov
mov
push
adc
inc
xchg
dec
adc
pop
jg
cltd
jl
fsubs
shl
xlat
shll
in
sbb
and
dec
nop
xor
cmovg
pop
xlat
jno
les
ljmp
sbb
jno
xchg
sbb
or
mov
clc
adc
jle
and
stos
pushf
bnd
sub
ret
dec
lret
cmpsb
jmp
sub
in
sub
mov
pop
lret
lret
mov
cmp
icebp
sbb
push
and
sub
xor
dec
and
dec
scas
or
and
sub
push
inc
jb
mov
pop
shll
shlb
push
and
ret
mov
fwait
xchg
or
and
or
ficoms
mov
sub
and
pop
pop
lods
mov
or
pop
xor
pop
pop
cld
ds
push
add
ret
push
ja
lret
push
mov
hlt
out
sub
aas
sub
and
mov
add
or
push
movb
fcoml
stos
in
mov
sub
lahf
sub
pushl
mov
fwait
push
adc
or
jl
xchg
std
outsb
call
or
push
out
loopne
pop
push
fwait
mov
sub
in
gs
sbb
jle
fisubl
shl
push
mov
cmp
inc
aaa
ja
mov
loopne
mov
push
shlb
mov
aam
aas
mov
pop
pop
mov
jge
add
fstps
mov
sub
popa
aad
je
and
pop
pop
sbb
pop
xchg
mov
popa
hlt
into
stos
add
sbb
leave
push
out
cli
sbb
mov
mov
clc
imul
push
or
je
mov
scas
and
inc
mov
lods
adc
lods
lods
and
je
movsl
mov
icebp
movsl
test
stos
push
test
or
hlt
push
pop
xor
shrl
lret
or
xor
xchg
sbb
sahf
mov
es
jp
adc
inc
ljmp
addr16
sbb
movsb
push
adc
and
mov
mov
sub
sbb
sti
adc
cs
in
call
cli
sahf
sbb
sbb
mov
and
loopne
stos
sub
inc
inc
or
mov
ljmp
jecxz
push
cmc
adc
imul
aad
or
imul
jae
mov
sub
sub
test
and
xchg
add
lret
cmp
or
jge
sub
fbstp
loope
ljmp
mov
xchg
or
xchg
aam
shr
pminsw
adc
in
arpl
repnz
insl
js
stos
leave
sbb
cmp
icebp
loop
test
repnz
mov
or
and
hlt
sbb
clc
sub
popf
ret
push
mov
adc
mov
mov
out
jmp
mov
adc
sbb
lea
add
adc
fldz
mov
mov
jg
cmp
cmp
adc
pop
icebp
in
pushf
lea
sbb
push
adc
repnz
sbb
outsl
test
push
push
int
out
scas
inc
in
cli
addl
mov
mov
fiadds
addr16
imul
xchg
test
pusha
add
inc
adc
imul
and
cmp
aas
xchg
cmp
imul
push
inc
push
xchg
mov
mov
and
mov
daa
push
inc
je
mov
sti
pop
test
mov
sub
fiaddl
shll
cld
or
cmpb
pop
cli
or
and
xchg
test
insl
repz
lret
mov
stos
rolb
out
imul
lret
mov
cmp
add
leave
dec
repnz
int
arpl
adc
ljmp
outsl
shrb
jns
mov
cmc
pop
xor
inc
push
mov
cwtl
mov
add
aas
adc
push
mov
in
lods
or
or
addr16
push
in
and
lahf
sarl
lret
outsb
out
inc
or
dec
leave
jge
pop
shl
fstpt
in
ja
mov
je
xchg
aaa
and
int3
arpl
cmc
xorb
mov
push
pop
icebp
cmp
nop
lahf
mov
sbb
cwtl
xchg
or
xchg
cmp
jecxz
inc
into
fisubrl
mov
out
shl
outsl
sbb
mov
adc
popf
loopne
sub
sub
sub
clc
shrb
in
xor
mov
dec
ret
xchg
push
in
pop
imul
imul
and
inc
adc
dec
cli
call
jb
mov
test
fisubrl
adc
mov
nop
xlat
movsb
dec
pop
push
adc
ficoms
cmp
into
pop
fisubl
push
xor
push
push
popa
sub
mov
fdivs
repz
dec
test
aam
and
leave
pop
sahf
call
sahf
stos
xchg
out
mov
inc
sbb
mov
call
mov
loope
shlb
dec
test
stos
xchg
jae
inc
mov
cmpsl
mov
or
sub
sti
xchg
xchg
cld
int
push
es
fcom
daa
aas
shrl
dec
pop
movl
and
xchg
add
sbb
cwtl
in
sti
movsb
in
xchg
xchg
aas
imul
pop
pop
in
pop
cmp
sub
fidivrs
test
fimull
sbb
mov
adc
xchg
lret
inc
es
sbb
aas
movsb
xchg
cmc
adc
or
dec
lea
inc
imul
dec
ret
or
inc
adc
je
mov
rcrl
in
leave
mov
or
mov
fcomi
and
iret
fwait
pusha
pop
sub
insb
mov
insl
rol
cwtl
dec
or
xchg
pop
fs
inc
pop
mov
movsb
dec
cwtl
stc
cmpsl
xchg
dec
mov
mov
cmc
sahf
inc
pop
subl
or
fnstsw
js,pt
add
dec
notl
xchg
popa
add
fwait
pop
dec
pop
das
sub
fisubrl
cmpsl
incb
cmpsl
push
cmpsl
inc
mov
in
dec
lea
jl
cmc
setge
adc
ret
sbb
lock
sub
testl
xor
pop
fwait
cli
pop
jg
push
fisttpl
pop
movsb
inc
pop
cmpsl
inc
jge
jmp
cmp
cmpsb
stos
dec
sub
test
push
xchg
iret
pop
data16
ljmp
cmp
repnz
mov
and
jno
jnp
fwait
inc
pop
sub
xor
jae
push
mov
test
int3
inc
orb
scas
mov
enter
scas
ljmp
mov
insl
sub
cmpb
ja
or
lret
sub
push
sbb
pop
iret
fs
sub
sbb
add
adc
loopne
add
fs
inc
mov
push
or
lret
mov
shll
je
push
imul
js
sub
out
subl
and
mov
test
xchg
push
xchg
pushf
adc
popa
sbb
jecxz
out
push
push
jmp
xchg
cmpsl
jno
lds
dec
inc
stos
adc
ljmp
mov
scas
jbe
xchg
xor
or
pop
push
sti
loop
xor
mov
push
pusha
scas
daa
fsubrs
and
je
test
rcll
mov
loop
pop
pop
and
fisubs
cmp
pop
dec
imul
dec
lret
xchg
or
loop
out
mov
repnz
cmp
jb
xor
xlat
adc
push
fisubrl
sbb
pop
lcall
inc
push
sub
add
mov
mov
cmp
out
xchg
xchg
pop
outsb
scas
imul
sarb
subb
cmp
or
or
adc
inc
pushf
jecxz
js
or
shl
adc
popf
push
hlt
jae
mov
push
mov
rclb
adc
jp
xor
js
inc
sub
xor
loop
lds
ljmp
pop
push
lds
subb
shll
addr16
dec
lds
imul
xor
dec
add
fdivrl
notb
adc
jmp
subb
fwait
imul
add
or
pop
in
pop
sbb
lods
stc
jnp
rorb
test
pop
jae
pop
mov
push
xor
pop
fcmovnbe
pushf
pop
outsl
nop
test
popa
pop
xchg
inc
notl
je
sub
jp
jge
in
and
imul
lock
add
add
rclb
or
addr16
push
cmpsb
pop
notl
scas
sbb
test
xchg
add
ljmp
mov
pusha
mov
mov
ss
sub
cmpsl
jo
movsb
mov
and
cmp
cmp
lds
ljmp
ja
or
shr
and
mov
gs
mov
cmpsb
cltd
sbb
or
insl
movsb
in
xor
pop
imul
mov
push
xchg
and
out
frstor
push
cli
hlt
sbb
xchg
inc
ja
cmc
fadds
dec
inc
sub
das
enter
in
jecxz
adc
cld
add
out
push
mov
and
jb
xchg
cmc
aaa
stos
lods
arpl
sbb
sbb
or
mov
iret
bound
jp
lcall
bswap
lods
mov
add
repz
leave
imul
mov
cmp
imul
iret
rcl
and
insb
pcmpeqb
cli
cmp
pop
enter
xchg
push
dec
pop
pop
ljmp
clc
pop
xchg
lock
sbb
jo
jno
and
popf
fsubl
lods
es
mov
add
mov
inc
insl
push
add
mov
mov
dec
sub
add
aad
mov
fisubrl
jae
aad
inc
fmuls
adc
or
ljmp
repnz
rol
sbb
in
popf
jge
xchg
sub
imul
roll
mov
push
jecxz
mov
sub
or
imul
lds
rorb
and
mov
ret
movsb
gs
cmc
popf
sub
test
mov
rcl
lock
jle
je
dec
test
inc
cmp
pop
inc
out
lods
dec
lret
and
repnz
adc
cld
push
out
mov
mov
stc
out
out
nop
mov
test
andb
mov
mov
cmc
stc
or
cmp
or
popa
hlt
xchg
out
xchg
cmp
aaa
ss
cmp
or
push
xchg
mov
sub
jge
imul
fimull
lods
test
repz
icebp
pop
mov
fs
test
adc
dec
fcompl
div
dec
sub
and
cltd
inc
inc
jmp
or
or
sub
xor
inc
outsl
loopne
dec
repz
iret
xor
sub
shrl
adc
enter
or
sbb
jl
nop
sub
mov
hlt
test
imul
test
dec
test
fincstp
dec
mov
int
rcrl
add
or
xchg
scas
cltd
testb
es
sbb
stos
push
fistl
and
sub
cmpsl
inc
std
dec
cli
add
fwait
inc
pop
xchg
dec
insl
and
jl
jle
movsb
sbb
popa
jg
add
dec
inc
cltd
rolb
pop
lcall
mov
shrl
or
call
and
mov
outsb
jmp
lret
out
fdivs
xor
icebp
mov
adc
inc
aaa
pop
cs
shl
xchg
dec
int3
adc
lock
test
addr16
jg
aam
jmp
ljmp
xor
int3
movsl
dec
xchg
adc
and
rorb
sub
rorl
sub
lods
mov
and
xor
sub
sbb
or
imul
fwait
push
and
jmp
jle
mov
imul
in
xchg
lods
dec
push
lcall
fsubr
mov
and
inc
and
insb
push
and
int
outsl
push
push
lcall
mov
inc
in
lcall
xchg
sbb
imul
push
arpl
into
sti
inc
push
in
movsb
in
or
xchg
mov
sub
push
repnz
push
dec
outsl
sti
lret
jmp
gs
pop
push
ficoml
bound
loope
inc
iret
data16
cmp
sbb
sub
xlat
repz
mov
mov
pop
inc
les
rorb
dec
cmp
jl
es
xchg
ljmp
push
or
pop
inc
adc
les
and
add
les
in
sub
imul
sub
dec
push
ljmp
jmp
repnz
test
pushf
jecxz
stos
dec
mov
fwait
inc
jnp
or
pop
popf
repnz
mov
or
pop
sub
loope
sbb
sbb
xchg
sub
in
jecxz
cmp
xor
adc
or
or
outsl
push
and
loope
movsb
mov
sub
dec
xchg
dec
jecxz
fbld
imul
add
or
cmp
iret
xor
shrb
sub
jmp
dec
jge
jp
clc
ret
pop
sub
mov
cmpsl
repnz
mov
sbb
fs
jne
aaa
push
mov
stos
add
inc
mov
push
mov
test
inc
mov
dec
inc
adc
icebp
cltd
mulb
dec
hlt
nop
jmp
cmpsb
fsubrl
test
xchg
loope
sub
leave
xchg
push
jl
pop
jns
xlat
fs
loop
dec
dec
je
dec
adc
xchg
jle
pushf
jno
dec
lret
test
pop
sbb
sub
out
jmp
push
cmpsl
fisttpl
ss
in
outsl
pop
or
xchg
enter
stos
pop
test
outsl
mov
sub
and
sub
stos
dec
call
daa
iret
imul
cmp
push
fsubrs
insb
das
movsb
push
xchg
inc
fstps
sub
push
mov
pop
leave
add
jmp
mov
jp
shl
nop
mov
test
mov
aam
and
fcmovnu
imul
sbb
pop
ret
mov
dec
jo
test
into
pop
mov
inc
add
sti
jmp
fcomi
xchg
je
xchg
scas
jle
lret
out
insl
mov
adc
sbb
mov
arpl
popf
mov
js
adc
int
insb
test
sub
arpl
sub
add
int3
loopne
sub
loopne
pop
fbld
mov
stos
popf
clc
insl
mov
or
or
stos
into
add
jle
stos
and
pop
mov
xor
adc
movsb
stos
daa
push
enter
push
jl
or
push
sub
cmp
dec
sarb
pop
int3
push
repz
ja
jge
ret
and
mov
pop
das
mov
cli
cltd
push
or
aam
sbb
icebp
lcall
mov
addr16
daa
call
and
pop
inc
scas
ret
ja
outsb
xor
xchg
lock
js
xchg
cmpsb
loopne
les
sub
dec
pop
and
sub
mov
call
add
inc
out
mov
and
rcll
push
inc
adc
lock
pop
xchg
lods
scas
out
hlt
pop
xchg
xor
in
sti
shl
sub
fnstsw
loope
mov
add
sbb
jle
mov
jecxz
ret
cmp
test
inc
sbb
daa
mov
xchg
dec
jl
push
out
jbe
cwtl
inc
jecxz
lret
or
push
xor
xlat
mov
popa
loopne
adc
lcall
ror
xchg
pusha
xchg
movsb
loopne
imul
mov
je
loop
daa
add
sbb
pop
jo
xchg
cmp
call
or
xor
test
lock
addb
add
and
sbb
out
les
sub
pop
lret
xchg
jecxz
xchg
mov
ljmp
xchg
imul
cld
jae
push
sbb
inc
jns
pop
inc
mov
sub
push
and
dec
jecxz
pop
push
cmp
movsb
shl
icebp
pop
sbb
pop
pop
or
push
adc
enter
xchg
test
xchg
arpl
sti
ret
dec
sbb
xor
es
arpl
dec
iret
pop
add
arpl
cli
mov
sbb
jb
pop
cli
cmpsl
mov
dec
mov
faddp
xchg
adc
xor
mov
lcall
in
js
jmp
mov
mov
test
dec
sbb
iret
aam
lcall
push
lock
push
push
hlt
push
movsl
lret
pop
aad
imul
imul
mov
leave
adc
mov
dec
push
cmpsl
xor
push
mov
add
int
jge
push
or
aam
and
cmpsb
or
popf
scas
aam
inc
fs
aam
adc
sbb
push
mov
push
add
repnz
in
pop
fsubrs
sbb
leave
lea
fcmove
add
or
xchg
jnp
ss
scas
jp
sub
or
outsl
xchg
out
leave
pop
xchg
add
push
mov
mov
mov
or
mov
int
or
stc
rclb
sbb
pop
add
sub
adc
rclb
cmp
pop
addr16
ss
pop
movsb
and
xor
pop
sahf
and
or
sar
mov
and
push
int3
nop
call
jae
ljmp
push
bnd
jmp
jl
popf
pop
insb
cmp
int3
push
jb
mov
shll
sub
xchg
sbb
mov
cmpb
inc
add
lock
jl
clc
or
cmpsl
mov
out
dec
mov
and
insl
mov
xchg
icebp
jecxz
push
aas
in
icebp
xchg
inc
ret
rclb
in
push
adc
dec
in
mov
jno
movsl
sbb
out
xor
xchg
cmp
sbb
dec
fldenv
aam
in
sbb
pop
add
cmpsb
lods
pushf
repnz
push
rolb
add
decl
mov
mov
lret
icebp
mov
sub
jb
push
push
int3
mov
loope
ljmp
mov
shl
jp,pn
mov
xor
subb
lods
pusha
mov
f2xm1
push
daa
pop
pop
enter
call
lahf
loopne
push
pop
pop
maxps
cmp
ljmp
jmp
in
or
jnp
xor
inc
fiadds
bound
cmp
adc
or
xor
cwtl
aam
bound
adc
adc
or
stos
mov
aaa
shrl
rcll
and
sub
insb
or
inc
mov
cs
dec
add
jo
push
aam
sarb
dec
frstor
sti
pop
movsb
sbb
jge
mov
sbb
sub
and
or
iret
addr16
xchg
jmp
outsl
popa
jb
loope
xor
pop
pusha
adc
mov
push
push
stos
fldenv
nop
je
xor
adc
push
inc
or
cmp
mov
loope
movsl
test
xor
and
aaa
fldl
sub
and
fwait
aam
dec
and
sub
push
push
jb
push
in
test
sbb
ds
dec
sbb
stc
inc
sub
dec
pop
bound
inc
fwait
stos
in
xor
fstpl
out
je
dec
pop
imul
imul
imul
pop
pop
or
sub
mov
rolb
push
fisubl
iret
les
add
cmpsl
repnz
aas
sub
fs
pop
cltd
iret
and
xchg
mov
sub
aam
fs
ja
flds
sbb
dec
push
sub
jmp
xchg
push
sub
push
sub
pusha
repnz
fwait
mov
in
or
movsl
mov
ret
repz
sbb
or
fimuls
dec
adc
lock
add
lahf
sbb
and
arpl
lods
lds
insl
mov
jmp
test
shrl
inc
xchg
sbb
sub
and
movsb
xchg
and
mov
sub
sbb
dec
mov
lret
into
xor
xlat
out
hlt
dec
or
xlat
cli
jne
repnz
xor
or
xchg
push
clc
jo
and
pushf
and
ficoml
mov
loopne
repnz
pop
mov
aad
testb
sbb
ljmp
out
test
repnz
or
decb
dec
test
and
or
and
adc
lret
dec
mov
popf
cmp
repz
push
sbbb
sub
sbb
sub
xchg
bound
jnp
cmp
call
sbb
out
idivl
sub
fs
insl
jl
sti
daa
push
push
jecxz
enter
sub
sub
or
out
xor
js
out
fistpl
or
cltd
add
xor
dec
dec
test
fisubrs
mov
stc
dec
jbe
pushf
loope
out
dec
inc
sub
fimuls
iret
addr16
hlt
cmp
fstl
and
out
ds
xchg
push
fs
stos
jp
adc
and
push
adc
xchg
and
or
and
cmp
mov
xor
adc
push
pop
dec
or
repnz
mov
sbb
sbb
lea
insl
out
lret
idivb
mov
xorb
das
jmp
adcl
sbb
es
jmp
push
pusha
and
into
orb
jl
push
add
icebp
sub
push
push
test
mov
cltd
pop
mov
push
xchg
dec
mov
jmp
stos
xchg
mov
push
sti
shl
push
dec
cwtl
xor
and
out
es
inc
lods
push
in
mov
xor
push
fs
cld
sbb
popa
imul
jmp
mov
outsl
loope
dec
clc
sub
jbe
fsub
mov
psubq
into
mov
sub
in
jp
xor
xchg
inc
in
pop
out
imul
aas
or
sub
iret
cwtl
andl
adc
inc
sti
flds
das
sbb
mov
add
jp
lock
loope
pop
es
lods
daa
call
lea
inc
ljmp
or
cld
sbb
cltd
std
testb
xchg
xchg
lods
repz
pop
ljmp
enter
call
lret
hlt
cmp
fsubs
mov
push
imul
cmpsb
pop
bound
sbb
push
pop
test
popf
mov
push
and
dec
in
mov
popa
fdivl
xor
sbb
jecxz
cmp
in
sti
inc
dec
push
jb
xlat
adc
imul
les
sub
cmpsl
xchg
mov
mov
sub
and
pop
cli
cwtl
je
sub
mov
sbb
movsb
ret
jne
adc
or
popf
addb
repnz
jp
fwait
adc
xchg
sbb
or
and
xchg
subps
sbbb
in
and
addr16
sub
dec
cmc
loop
ja
lahf
shlb
add
pop
and
push
imul
sti
jp
sbb
loope
test
fiadds
aad
dec
stos
imul
rclb
inc
pop
stos
out
sub
or
stos
mov
mov
and
lds
loop
cmp
es
loopne
xor
inc
rcrb
sbb
lea
or
jmp
in
adc
sub
mov
mov
xor
outsb
xchg
mov
test
or
cmp
gs
inc
dec
loope
dec
lret
mov
pop
cli
aaa
or
add
sub
sbb
shrl
sbb
adc
fldcw
push
jl
stos
xchg
shll
mov
mov
fwait
out
mov
adc
add
enter
mov
push
in
lahf
cmp
dec
into
xchg
lock
leave
nop
in
ja
sbbb
xor
mov
lods
mov
jo
push
sete
cmp
repnz
lret
outsl
sub
mov
sbb
lock
jnp
out
push
xor
cmp
out
rcll
cmp
and
out
push
adc
and
push
push
out
in
sti
repnz
sbb
divl
add
adc
and
aas
in
neg
rclb
mov
shrl
cmc
cmpsl
xor
out
sub
pop
pushf
mov
std
insb
pushf
lock
mov
fs
ret
mov
std
adc
dec
and
sub
pop
leave
or
aad
fsubs
add
add
lcall
sbb
push
lahf
add
sub
pop
popl
ret
cwtl
adc
dec
fimull
in
mov
jns
dec
inc
popl
adc
jg
mov
and
jecxz
movsb
jne
and
push
jmp
scas
push
sub
pop
mov
mov
rcl
push
test
fistps
cwtl
mov
pushf
cmpsb
add
mov
mov
mov
lods
and
xchg
xchg
mov
add
pusha
push
push
rorb
aam
adc
test
mov
jnp
mov
dec
xchg
dec
test
in
push
daa
push
or
outsl
in
pop
pop
sub
int3
frstor
out
push
std
jne
mov
sti
xchg
int
jns
xor
or
pop
and
cmpsl
stos
out
addr16
out
out
or
cwtl
adc
adc
xor
sbb
pop
enter
mov
fsubrl
sbb
mov
in
mov
cs
mov
int3
arpl
aad
and
lret
aam
clc
inc
xchg
push
push
fisubrs
movsb
pusha
leave
mov
faddl
data16
sbb
and
loop
sbb
sahf
nop
mov
jnp
ds
outsl
push
xchg
mov
idiv
sub
inc
pusha
insb
sub
xchg
imul
lret
and
imul
or
ds
xchg
imul
pop
sub
fwait
push
sub
fildll
mov
adc
sub
sahf
cli
ror
dec
mov
adc
mov
inc
jle
loopne
jp
pop
cmpsl
adc
push
and
js
adc
jae
pop
xchg
shll
fcomps
lret
js
fldl
addr16
mov
sbb
in
mov
dec
cld
daa
adc
cltd
pop
in
pop
ja
xchg
sub
push
out
imul
lock
cld
xlat
pop
inc
cmpsb
sub
sub
in
insb
xchg
or
push
cli
fldenv
pusha
into
sub
movsb
cmpl
cld
bound
sub
and
push
call
dec
inc
fsubrl
lds
ljmp
mov
push
inc
in
adcl
inc
add
mov
das
popa
xchg
sub
lret
leave
mov
popa
dec
fwait
in
movsl
add
pop
jb
sub
adc
std
mov
pop
pop
sbb
pop
or
push
and
pop
push
add
jp
jne
xchg
hlt
jns
std
stos
or
in
pop
bound
into
cmc
and
mov
xor
sbb
inc
stos
sbb
bound
shlb
or
or
adc
dec
xor
out
aas
sub
inc
pop
xor
subb
repnz
jno
inc
loope
insb
add
mov
ljmp
mov
stos
cld
and
gs
sub
mov
mov
sub
imul
les
mov
push
lock
ljmp
or
cmpb
xor
stos
sub
jno
dec
jns
xchg
loope
or
das
fs
push
sub
adc
or
xor
sub
fsubl
mov
push
into
sti
in
xlat
cmp
iret
insb
sbb
push
xor
xchg
adc
psubusb
and
dec
cmpsl
mov
int3
ret
xchg
and
mov
test
lcall
aaa
jae
dec
inc
fcoms
jecxz
stos
mov
cwtl
lret
inc
lret
xor
hlt
lret
leave
sbb
xor
lcall
js
push
dec
ljmp
sbb
jmp
mov
lret
js
and
je
lea
cmc
sbb
call
ljmp
lret
xlat
and
dec
les
or
sub
loop
out
loopne
movsb
in
sbb
bound
sbb
loopne
out
fisubrs
xchg
add
and
movsb
loop
ja
sbb
adc
imul
sub
shrb
and
insl
js
xor
or
faddp
bound
hlt
sahf
add
and
and
jnp
out
push
aam
insb
xchg
jecxz
lea
or
popf
out
sbb
jnp
lods
insb
push
je
jb
dec
sub
or
or
or
das
dec
jmp
and
cmc
idivl
mov
inc
into
push
inc
scas
push
cld
push
xchg
cmp
push
nop
jle
fldenv
sub
push
aam
and
dec
repnz
xchg
push
mov
jmp
adc
enter
cltd
inc
add
cmp
out
sbb
jmp
es
scas
jbe
lea
sbb
cmp
nop
push
add
outsl
or
outsl
addr16
jb
inc
sub
jmp
push
arpl
sub
mov
leave
jg
loopne
or
popa
cmpl
mov
jno
jmp
enter
lahf
adcl
jmp
daa
loop
insb
movsl
ds
push
jbe
push
int3
test
adc
mov
mov
mov
lret
cmp
and
push
mov
lahf
pop
xor
push
into
push
lret
xchg
sub
push
test
shll
ljmp
shll
fcoml
xchg
and
push
add
cmpsl
push
dec
xor
sbb
ja
cltd
xor
lcall
mov
xchg
cltd
dec
add
repnz
scas
addl
repz
cs
lcall
xchg
daa
repnz
insl
xchg
stc
in
shrl
xchg
sbb
shlb
lods
mov
xor
and
dec
cmpsl
js
test
fwait
call
das
dec
sbb
or
repnz
pop
insl
push
sbb
stc
or
lret
ja
in
push
out
sbb
lahf
ficoml
mov
mov
sub
loope
mov
lods
cmc
imul
mov
int3
jae
addr16
mov
fisubs
pushf
in
mov
xchg
test
cmp
imul
add
aam
mov
clc
hlt
fidivs
pop
mov
in
adc
inc
mov
addl
cmc
sbb
out
daa
adc
pop
add
mov
add
mov
int
daa
stos
add
add
jne
rcll
push
loopne
mov
mov
mov
xchg
adc
sbbb
mov
icebp
adc
clc
fnstenv
test
cli
and
sub
sub
inc
loope
xchg
daa
lret
dec
mov
jecxz
dec
in
add
outsb
adc
jl
sbb
jmp
rep
sbb
xor
lahf
loop
add
or
mov
lcall
popa
ljmp
dec
shrb
mov
rcl
in
jl
cmc
sub
add
mov
mov
ficoms
and
sub
arpl
xchg
mov
push
or
pusha
push
pop
out
mov
dec
adc
mov
mov
repz
les
sbb
arpl
mov
mov
fnstsw
fs
movsl
fsin
cli
cs
out
in
push
sub
mov
imull
add
pop
pop
neg
icebp
push
mov
test
xchg
pop
jno
cwtl
mov
into
pop
fdiv
or
into
fsts
mov
push
sbb
insl
pusha
sub
dec
sub
pop
shll
ss
popa
test
xchg
jle
add
xlat
dec
adc
dec
push
bound
xor
movsb
popa
int3
stos
fimuls
jmp
int
add
or
fidivrl
outsl
arpl
cmp
push
cs
movsb
mov
pop
adc
lcall
mov
fistl
in
dec
pop
jns
out
adc
fldl
jg
and
imul
lret
jb
mov
mov
loop
fnsave
xchg
jge
imul
jns
mov
int
inc
in
testb
int3
mov
rcl
ficomps
push
iret
xchg
adc
inc
xchg
pop
mov
iret
xorb
iret
imul
jns
add
lds
or
repnz
push
outsl
or
xchg
adc
cmpb
cltd
push
push
imul
fldcw
sub
iret
loope
push
xchg
jo
iret
outsl
add
xchg
pushf
into
mov
pop
call
xchg
test
add
pop
es
stos
pop
clc
enter
xchg
ss
cmc
inc
jae
lock
mov
cs
and
les
push
loope
sbb
imul
movaps
xor
in
and
jge
popa
movsb
aad
mov
pop
pop
ret
pop
push
and
sub
pop
push
je
les
or
and
scas
je
dec
add
jo
lods
xchg
sub
mov
mov
aad
inc
fwait
jmp
mov
push
push
cmpsb
in
outsl
or
aaa
scas
mov
and
in
movsl
pusha
aam
inc
mov
pop
jg
xor
pop
ret
test
cmp
insl
jp
in
lods
push
fdiv
add
pop
jnp
dec
lret
lcall
sub
sbb
cmp
icebp
sarb
shl
movsl
lods
mov
fcmovnbe
sub
mov
cs
loopne
mov
sub
loope
call
movsb
lahf
inc
mov
cld
repz
jecxz
sbb
jb
add
mov
lahf
jne
jmp
int3
sbb
ja
mov
nop
mov
add
mov
hlt
dec
add
pushf
jle
mov
cmp
bound
pushf
adc
push
enter
pop
sub
dec
movsb
scas
in
inc
sub
jo
sbb
push
ret
cmpsb
push
mov
inc
stos
clc
aad
push
std
andl
pop
aad
mov
cmp
movsb
jmp
sbb
cli
push
mov
sahf
mov
xchg
mov
push
arpl
mov
ficompl
daa
dec
subb
in
sbb
arpl
jns
aaa
jp
fstpl
subl
and
out
call
inc
nop
and
mov
sbb
int
scas
dec
rcrl
dec
stos
dec
arpl
repnz
inc
adc
or
arpl
arpl
xor
sub
xchg
cmp
enter
ret
fisttpl
lds
mov
jg
aas
sti
mov
sarl
cmp
out
bound
in
movsl
repnz
ljmp
enter
outsl
in
sub
mov
movsl
xor
cmc
jecxz
pop
jecxz
push
mov
push
pop
jl
leave
test
cli
in
xor
mov
enter
dec
push
and
push
loope
testl
adc
adc
sub
sahf
repnz
lea
xchg
pushf
movsb
flds
data16
inc
xchg
out
dec
aam
roll
sub
cli
loop
ja
in
and
xchg
movsb
xchg
cld
xor
dec
add
jg
data16
mov
loop
loope
xchg
add
sbb
in
clc
xchg
or
or
sahf
leave
dec
fistl
push
mov
mov
out
aad
dec
into
js
cmc
sub
and
out
xlat
divl
es
push
sbb
imul
mov
cld
in
popf
fisubrl
iret
dec
imul
cli
test
icebp
pop
gs
xor
xor
ljmp
dec
dec
ficoms
xchg
aam
adc
sbb
sub
or
or
repz
ljmp
mov
leave
hlt
adcb
ljmp
push
pop
out
mov
add
stos
sbb
shlb
sbb
stos
mov
pop
aam
filds
lret
sub
sbb
shl
ret
sub
mov
or
shrb
out
fucom
sbb
cld
or
cmp
or
cmpsb
push
sbb
ljmpw
sub
mov
int3
xchg
hlt
or
xor
fs
adc
stos
sub
rcll
mov
aaa
or
into
pop
and
lret
or
xlat
mov
movsl
push
xchg
fs
and
cltd
adc
cmpsl
repnz
add
lret
mov
cwtl
aam
test
pop
vfrczps
lea
dec
sub
sbb
shlb
add
es
inc
clc
andl
push
jl
inc
push
sub
push
push
fadds
jmp
dec
mov
popf
push
dec
cltd
adc
or
dec
in
arpl
dec
icebp
and
push
push
sub
inc
jle
adc
or
jecxz
imul
xor
cltd
mov
pop
sub
mov
fs
push
adc
call
cmp
pop
fsincos
pop
add
or
xchg
push
mov
inc
daa
xor
repnz
orl
jl
adc
dec
pusha
or
shrb
add
add
loopne
stos
mov
push
xchg
adc
out
repnz
sbb
sub
cmp
jl
inc
mov
add
loop
ljmp
and
or
aam
in
sbb
pushf
mov
push
cmc
add
and
pushf
jo
jl
in
dec
or
daa
sub
mov
add
repnz
add
in
imul
sub
xorl
jecxz
aam
add
adc
push
dec
push
xchg
out
mov
xor
xor
cwtl
lds
int
js
adc
pusha
mov
pop
out
mov
or
mov
or
ds
dec
xor
xchg
cmp
cmp
out
pop
test
das
xor
dec
enter
sbb
and
sub
pop
mov
jns
or
sbb
neg
sbb
repnz
jp
fistpl
loopne
mov
test
lods
lock
and
movsl
stc
daa
sbb
aas
movsb
or
jnp
int3
ss
push
inc
outsl
pop
xchg
or
test
cmpsl
push
scas
push
shlb
aad
sarl
stos
push
add
sub
jp
dec
popa
jnp
xchg
push
and
stc
dec
aam
loopne
sub
mov
dec
jns
push
test
loopne
lret
and
lods
loopne
bound
arpl
test
sub
and
sub
fstps
mov
push
repnz
xchg
insl
add
stc
and
adc
push
mov
push
adc
popa
cwtl
loope
test
sub
mov
out
adc
pop
std
add
enter
push
and
pop
cld
pop
sbb
xor
rcrb
adc
cwtl
in
out
nop
jbe
lret
sbb
sbb
push
pop
fs
and
ds
sub
sbb
or
pop
cmp
loopne
sub
sub
sub
push
or
sbb
out
or
out
mov
pop
loopne
stos
repnz
in
mov
fucomip
ja
jle
fsubr
int3
daa
rcl
dec
stos
out
pusha
outsb
pop
add
dec
inc
push
jns
loopne,pt
inc
pusha
je
jmp
cs
scas
mov
push
call
dec
inc
add
call
mov
xchg
stos
testb
popa
scas
lds
push
pop
popa
sub
xor
add
test
test
stos
aad
and
fsubl
or
and
andb
sub
ficompl
xchg
call
jbe
and
sbb
add
loope
test
add
jg
push
mov
adc
sbb
arpl
imul
in
push
adc
popl
mov
or
dec
pop
shl
cmpb
xchg
test
in
dec
and
mov
push
js
cmp
xchg
pop
out
ret
scas
jecxz
sub
call
insb
xor
cmc
mov
or
add
movsb
sub
xor
cmp
inc
nop
xchg
adc
adc
and
sbb
je
pop
rcrb
psubw
lret
fdivr
jg
loopne
loopne
movsb
imul
adc
adc
stos
pusha
and
ror
add
aam
pop
sub
mov
stos
loopne
out
or
jne
out
lods
lret
fsubs
das
mov
dec
mov
sbb
jae
test
aad
xor
sbb
shrl
daa
je
xlat
repnz
aam
dec
cmpsb
je
add
push
decl
mov
popa
es
fwait
add
sub
mov
sbb
xor
push
adc
inc
jnp
sbb
dec
cmp
push
scas
and
or
movsb
push
or
test
fwait
sbb
push
and
pop
add
xchg
jecxz
mov
lods
stc
pop
shll
call
sbb
dec
xchg
out
inc
xchg
sbb
ret
or
inc
lods
mov
jae
dec
mov
dec
pushf
jge
jo
jecxz
aas
lods
clc
repz
push
or
pop
pop
or
push
sti
or
mov
mov
jl
in
mov
out
dec
mov
cmpsl
mov
leave
arpl
mov
imul
scas
pop
adc
cwtl
test
sbb
movsb
add
cmp
cmp
stc
push
in
jle
adc
add
out
lods
dec
cwtl
cmp
ljmp
push
repnz
dec
sarl
mov
dec
adc
cmp
outsb
push
sbb
pop
nop
sbb
push
mov
adc
push
push
dec
or
inc
inc
dec
dec
cli
mov
es
test
cs
movsb
or
mov
outsb
dec
loope
jno
dec
inc
divb
ljmp
ffree
cltd
scas
lock
imul
and
add
adc
andl
rolb
mov
shrb
in
pop
adc
icebp
sub
call
cltd
or
dec
jno
jb
lock
repnz
sub
rorl
iret
ljmp
orb
push
loopne,pn
das
bound
sub
xor
xor
mov
iret
in
ret
loopne
jnp
enter
xchg
dec
mov
repnz
or
sub
movsl
sub
jecxz
fdivs
fldt
lea
outsl
xchg
andb
shl
in
iret
mov
psubsw
aas
fwait
dec
and
sbb
push
push
aad
out
add
xchg
movsb
pop
cmp
scas
leave
cmp
mov
sbb
stos
aam
mov
jge
inc
rorl
repnz
add
push
mov
fsubs
in
pop
stos
cmp
sbb
fucomp
push
xor
lret
add
insb
mov
ret
jp
push
dec
mov
pop
xchg
mov
mov
cltd
je
test
sbb
stos
sub
and
cmp
test
insl
jmp
sbb
rorl
push
xor
and
push
or
ret
test
xorb
or
and
imul
movsl
dec
push
push
repnz
xchg
or
mov
iret
rcrb
and
movsb
xlat
and
add
adc
mov
stos
sub
fldt
pop
stos
dec
jmp
and
std
loop
pop
sub
hlt
and
sbb
test
iret
daa
sahf
pop
lcall
xchg
xchg
ror
cmp
sahf
xor
daa
push
push
jae
xor
insb
push
xor
jb
adc
insl
clc
cs
loopne
arpl
aas
sbb
insl
pop
sbb
lods
in
dec
and
xchg
ret
lret
ljmp
arpl
and
stos
lcall
cmpsl
movsb
add
sbb
cwtl
andb
pushf
inc
pop
cltd
imul
mov
sub
fwait
imull
lds
mov
xor
jnp
mov
add
jg
sbb
mov
iret
jmp
ljmp
fisubl
int3
lret
lods
outsl
arpl
mov
mov
mulb
xlat
push
daa
push
lcall
jo
xchg
jecxz
cs
ja
sub
stos
cmp
mov
jo
aas
int3
mov
stos
loopne
mov
sbb
jmp
notb
sbb
and
jnp
lret
push
mov
adc
xchg
popf
adc
or
rcr
and
sahf
lods
fidivrl
xchg
cli
sub
mov
mov
pop
lods
in
test
or
jp
cwtl
in
push
fsubrs
fdiv
xor
popf
or
lea
out
mov
dec
sahf
inc
mov
aas
mov
fisubl
out
cmpsl
inc
or
push
jae
mov
cltd
das
mov
cld
out
cmp
sbb
sbb
sub
sbb
stc
xchg
popa
adc
aas
sub
inc
dec
in
pop
mov
aaa
outsb
stos
out
or
fidivrs
sub
out
daa
test
push
lods
jo
mov
fimuls
add
aam
cmp
fucomp
bound
push
cwtl
adc
push
mov
fisttps
sub
test
dec
int3
repnz
call
mov
or
stos
jecxz
mov
lret
test
sub
push
adcl
fstps
push
and
inc
pop
loop
and
aam
rolb
ret
xchg
xchg
jne
outsb
lcall
inc
mov
inc
xchg
lcall
xor
ds
neg
ja
aad
cmp
cmpsl
ret
fidivl
lea
fwait
enter
pop
outsl
push
dec
loop
sub
andl
outsl
push
sbb
add
xchg
test
stos
cld
out
ljmp
mov
jne
pop
lret
and
push
xlat
testl
sbb
pushf
ja
pop
add
mov
out
sbb
insl
sbb
add
sub
out
popl
fidivs
dec
or
or
stc
shlb
ret
imul
jge
popf
cli
mov
aas
adc
xor
repnz
mov
scas
loopne
into
and
jl
xchg
push
ljmp
ficompl
in
pop
and
xchg
and
gs
or
addr16
add
jno
inc
jmp
aad
rclb
pop
xchg
nop
cmp
mov
xlat
imul
shl
push
lcall
shll
xor
sbb
lds
mov
notb
je
in
loope
push
decb
daa
call
arpl
cmp
lods
push
lods
stos
test
pop
int3
adc
test
adc
lret
inc
adc
adc
cmp
pop
stos
mov
ficoms
mov
sti
test
dec
into
es
pcmpeqb
lods
lret
clc
jb
jmp
sub
out
xchg
fcompl
fistpll
push
add
subb
stc
sbb
test
sbb
xchg
sbb
out
pop
push
scas
in
dec
cld
ficoms
mov
or
inc
sub
cli
jae
jp
insb
push
sbb
loopne
push
in
aaa
push
pop
sbb
cmpsb
mov
in
push
mov
jecxz
arpl
lret
mov
dec
repnz
dec
mov
xchg
lock
data16
test
out
and
cwtl
imul
sbb
mov
lret
add
lcall
mov
mov
in
iret
cmp
xor
mov
or
lcall
sbb
jmp
push
pop
daa
or
mov
pop
sub
mov
repz
shlb
pop
push
xlat
mov
insb
jbe
dec
pop
or
inc
js
or
pop
sub
cwtl
std
push
sbb
mov
aas
push
jecxz
gs
jl
cmp
pop
les
ja
add
test
scas
jg
pop
sub
mov
call
xchg
clc
hlt
in
repnz
adc
push
mov
cmp
arpl
popa
iret
pusha
mov
call
jo
pushf
nop
test
enter
loopne
mov
add
cmp
mov
jl
xchg
jge
push
enter
dec
dec
pop
dec
arpl
adc
fdivr
mov
iret
outsl
sti
dec
or
imul
xchg
mov
inc
ljmp
jp
fsubr
mov
iret
imul
xchg
aad
pop
add
pop
and
or
iret
sub
xorl
push
and
test
inc
pop
lea
jno
sbb
push
iret
sbb
xchg
aas
xchg
js
pushf
iret
cwtl
clc
scas
scas
push
inc
jecxz
jmp
daa
inc
out
push
dec
adc
xor
les
enter
xor
pop
jbe
out
dec
movsl
mov
sub
sahf
pop
mov
aad
xchg
push
punpckhwd
and
dec
xchg
sub
sti
dec
aad
adc
add
dec
testb
lcall
int
and
cmp
xchg
push
sub
inc
lock
cltd
stos
and
inc
ljmpw
sbb
pop
gs
inc
sbb
fucomi
fildll
movsb
pop
addb
fcomps
divl
faddl
sub
sbb
ljmp
test
add
sti
adc
sbb
repnz
add
push
clc
push
popf
lahf
hlt
xor
pushf
jl
arpl
je
jo
andl
add
sub
sbb
outsl
lret
clc
daa
repnz
inc
pop
les
mov
dec
sub
fwait
leave
inc
rorl
jo
add
sbb
int3
sbb
xchg
das
fpatan
les
xor
xchg
push
mov
add
dec
or
insl
outsl
enter
and
jmp
or
mov
jp
jl
push
jnp
imul
mov
cli
cmp
push
popf
imul
fimull
ret
adc
notb
inc
mov
mov
iret
jmp
and
repz
incl
ljmp
fdivrl
pop
idiv
pop
sub
cmp
repnz
jae
sti
xchg
lcall
jmp
out
adc
inc
outsl
push
or
jl
in
mov
xchg
and
pop
sbbl
inc
mov
push
nop
and
dec
loop
inc
dec
inc
arpl
lret
call
cmpsl
fwait
roll
subb
sahf
loopne
outsb
subb
or
push
adc
mov
loop
sarl
mov
out
imul
ret
mov
test
sub
out
arpl
stc
test
pop
out
std
sahf
pop
fcomp
push
mov
add
pop
pop
add
lea
jmp
sbb
mov
push
nop
jecxz
gs
dec
pushf
mov
jecxz
cmpl
adc
ljmp
fwait
loopne
stos
call
rorl
test
stc
stc
test
insb
sbb
in
or
or
adc
fwait
or
mov
fimuls
mov
stos
push
push
push
insb
stos
push
sbb
dec
cmpsb
mov
js
test
popa
stos
sbbl
jmp
out
or
test
xchg
aas
repz
sub
out
push
cwtl
mov
mov
or
push
dec
cli
and
jb
imul
mov
mov
sbb
jg
xchg
pop
or
pop
loope
addr16
and
loop
stos
popa
pushf
pop
or
stos
mov
xchg
mov
test
add
pop
imul
xchg
and
mov
lods
insl
xor
iret
mov
loope
push
loop
imul
in
and
xchg
mov
lret
lods
sub
pop
inc
sbb
leave
cltd
insl
loopne
daa
test
les
or
and
insl
sub
adc
cli
adcl
in
pop
cwtl
pop
and
pop
ljmp
sub
mov
pop
sub
pop
jnp
pop
or
movsb
lret
dec
mov
sub
and
cltd
out
and
push
adc
sub
pop
and
lock
mov
mov
dec
mov
pop
lret
sub
ljmp
sub
daa
imul
js
inc
or
cmp
pop
pop
mov
mov
lods
mov
insl
aam
arpl
movl
push
in
sub
xor
or
addr16
mov
xchg
push
imul
cwtl
push
mov
pop
inc
push
xor
sub
test
lds
fmull
and
adc
filds
dec
dec
pop
vaddss
sbb
sbb
sbb
addr16
mov
popa
lret
and
hlt
iret
nop
mov
dec
repnz
test
addr16
jo
sbb
jge
popf
or
push
sbb
sbb
sti
add
out
push
mov
ja
pop
insb
aas
cld
mov
dec
add
aas
mov
aaa
movsb
lretw
pop
dec
jmp
push
ret
inc
jno
insl
js
repnz
rolb
test
sub
inc
daa
popa
fwait
and
in
pop
idivl
cltd
lret
mov
cmpsl
adcb
adcl
pop
dec
and
sbb
fdivl
loopne
sub
loope
fstpt
repnz
nop
dec
aam
or
popa
cmpsl
lea
aam
pop
cmc
cltd
sbb
and
ret
mov
pop
mov
lret
ljmp
aam
fs
lret
add
nop
cmp
enter
inc
test
or
fadds
std
pop
and
jg
aam
out
xchg
sub
mov
test
aaa
lds
xor
in
push
jecxz
push
jl
repnz
cmp
sbb
loopne
arpl
inc
popa
scas
fucom
inc
fdivs
pop
push
dec
insl
lds
dec
lea
pop
xchg
and
cli
cmp
int
sbbl
xchg
sbb
jmp
adc
call
and
sub
push
mov
test
popf
lock
sub
fldz
into
push
lret
xchg
push
mov
sbb
insl
or
inc
pop
cltd
lods
push
sbb
jnp
jbe
mov
sbb
mov
sub
rorl
into
lds
leave
xchg
enter
cwtl
add
pop
or
das
mov
shrb
aaa
imul
sub
flds
or
and
out
outsl
stos
sub
subb
cmpsb
cmpsb
xor
push
sbb
test
scas
and
sub
test
xor
cld
js
inc
lds
loope
out
sub
jmp
push
imul
xchg
xchg
dec
mov
xchg
mov
sbb
in
orl
mov
jns
inc
dec
test
fmul
push
sbb
inc
sbb
push
mov
test
pop
pop
in
dec
or
movsb
mov
test
jnp
imul
mov
adcl
stos
test
in
pop
sbb
imul
dec
or
mov
mov
cltd
xchg
aam
fwait
jmp
add
sub
insl
loope
push
and
je
in
cwtl
lret
mov
and
ficompl
sti
sbb
sbb
add
sbb
sarl
out
mov
adc
or
sbb
arpl
or
pop
lods
sub
pushf
xor
iret
mov
dec
mov
push
imul
addb
pop
jecxz
or
lret
movsb
fs
paddsb
jae
fwait
mov
fsubp
int
adc
cmp
adc
lret
insb
fidivrl
movsb
fs
jbe
fwait
push
repz
test
fxam
out
cld
lea
mov
or
xchg
fstpl
fcompl
fwait
jle
sub
outsb
push
rclb
lods
xchg
or
push
ds
sub
pop
mov
call
das
clc
out
imul
push
stc
mov
les
or
sbb
push
add
int
pop
or
arpl
lea
ljmp
bound
rcll
sbb
add
outsl
or
add
cli
lret
jmp
jge
ja
or
test
js,pn
pop
fsubrp
mov
inc
imul
sub
das
test
xchg
xchg
xchg
mov
add
dec
or
fisttpl
dec
inc
jae
ljmp
push
lds
and
outsb
imul
insl
inc
dec
mov
cmp
movsl
xchg
fildll
ja
push
imul
and
and
lret
and
stos
sub
push
bnd
cmp
sbb
sub
stos
pop
mov
mov
or
ja
add
repnz
jmp
mov
test
lds
out
pop
ljmp
arpl
sub
cs
push
enter
addb
dec
sbb
sub
movsb
out
sub
inc
sti
je
mov
mov
sbb
jns
nop
es
cmp
sbb
decb
mov
leave
lcall
push
out
aam
into
mov
cmpsb
inc
inc
out
ficoms
stos
insb
test
movsb
and
call
and
add
and
pop
sti
mov
fcoms
jmp
lret
ds
add
fwait
dec
sbb
aam
bound
xchg
les
xchg
jae
push
and
push
mov
xchg
jp
iret
mov
jmp
fwait
popf
lret
lret
sub
mov
sub
movsl
inc
stos
lods
inc
inc
push
dec
adc
stc
aam
mov
aas
imul
sub
cwtl
add
or
adc
sti
jecxz
nop
aaa
outsb
jbe
push
sub
lock
adc
mov
xorb
or
lds
fstp
loopne
sbb
mov
xchg
cmpsl
inc
rcrb
loop
int
loope
adc
pop
repnz
push
ss
mov
pop
test
adc
aam
fwait
loopne
xchg
or
pusha
pop
sbb
mov
mov
pop
sarb
sbb
sub
and
divl
lahf
nop
mov
mov
popf
das
mov
sahf
fcmovnu
pusha
aaa
jmp
adc
stos
inc
fsubs
jo
sub
xor
insl
or
test
stos
fimuls
push
pusha
xor
jle
add
inc
dec
paddw
cwtl
imul
stos
jne
insl
jg
inc
ret
mov
jno
mov
jmp
sarl
out
mov
cmp
adc
push
fs
sbb
out
lock
cwtl
sub
fs
xchg
fs
cmpsb
cwtl
pop
insb
and
out
jne
sahf
mov
jp
dec
stos
scas
and
and
inc
xchg
adc
pop
and
mov
lret
cmp
rep
loop
pusha
sar
popf
push
rorb
dec
cmpsl
mov
push
and
push
repnz
jbe
daa
or
xchg
cmpsb
push
sub
jae
pop
lahf
mov
fmuls
test
fcoms
or
xchg
add
insl
sub
xchg
scas
pop
cmpsl
fimuls
roll
pop
mov
ret
add
cmpsl
add
push
xlat
int
fs
ljmp
sbb
sub
lock
pop
ret
test
push
lret
es
aad
sbb
dec
pusha
icebp
imul
jmp
push
outsl
addr16
roll
mov
dec
and
mov
pop
cmp
scas
and
or
jns
stos
fs
icebp
and
sub
lcall
mov
sub
out
mov
arpl
sbb
out
mov
fisubrl
xchg
or
sbb
xchg
repnz
cwtl
in
out
in
adc
rcl
push
and
imul
test
add
enter
add
cld
in
cld
cmp
add
leave
sbb
dec
xchg
adc
xchg
out
arpl
and
push
add
xchg
push
jnp
stc
ret
addb
sub
lods
add
or
dec
shl
jmp
lock
dec
and
and
cwtl
ds
xor
or
push
add
sbb
cvtdq2ps
jg
jle
mov
jo
in
cmpsb
in
or
outsl
adc
mov
mov
incl
or
pop
test
leave
cltd
and
cmp
jecxz
test
into
std
test
mov
or
or
inc
push
cld
mov
and
cmp
adc
mov
adc
and
dec
test
shll
or
outsb
cmpsl
ret
dec
and
insb
pop
push
mov
xchg
scas
nop
imul
dec
fistpll
sarl
mov
sbb
xchg
sbb
insb
sub
lea
sub
lods
dec
lret
dec
pusha
inc
aad
dec
push
or
js
pop
mov
adc
sub
fistpl
cwtl
in
fdiv
ja
lcall
push
dec
in
or
cmpsl
js
ja
fcmovb
insl
ljmp
popf
test
clc
int
lret
lea
mov
popa
dec
jnp
xor
pushw
enter
sbb
cmpsl
repnz
leave
arpl
and
and
mov
cmpsl
inc
and
add
xchg
xor
mov
lcall
pop
sub
outsb
mov
pop
xchg
xchg
pop
shlb
or
fsubrl
and
in
call
imul
jmp
movsb
enter
repz
sbb
aas
adc
add
push
popa
pop
push
in
lret
xchg
outsb
add
mov
dec
pop
imul
call
pusha
add
xor
movsl
das
mov
cmp
sbb
pop
push
ljmp
aaa
sub
push
jp
push
push
mov
adc
out
repnz
dec
fadd
push
mov
cltd
inc
pop
jmp
mov
cmp
mov
or
aad
add
xlat
fidivs
popa
sbb
iret
insl
scas
outsb
cwtl
loop
call
or
ljmp
popf
pop
test
sub
xchg
pop
push
pop
add
jne
xor
add
jecxz
jnp
xor
xchg
mov
mov
in
lds
xchg
xor
mov
repnz
imul
out
cmp
sbb
xchg
pop
pop
jmp
fildl
jo
xchg
mov
sbb
lcall
mov
pop
push
das
mov
add
adc
sbb
popf
nop
popf
dec
fstpt
xchg
push
sub
sbb
out
xchg
and
pusha
cmp
sbb
lea
int3
loope
pop
es
push
ret
sets
and
cmpsl
inc
xchg
lret
scas
test
xor
fs
cmp
out
fistpl
dec
push
daa
cltd
sbb
sub
xchg
mov
xchg
and
mov
and
mov
add
inc
mov
into
test
loopne
in
cmc
out
das
cmpsb
imulb
test
popa
leave
cmp
add
das
and
loop
mov
pop
fcmovne
jae
pop
push
es
sbb
sub
mov
sub
xchg
cltd
outsl
jno
adc
repnz
jno
xchg
ja
or
and
bound
and
dec
je
cs
or
andl
push
or
or
dec
push
cmp
mov
bound
mov
and
jmp
sbb
stos
out
loop
or
fmull
dec
xor
xor
imul
pop
sub
fistpl
dec
aad
in
pop
testb
mov
add
das
jmp
leave
cwtl
stos
jmp
pop
cs
sub
pop
pusha
mov
cmpsb
dec
shrl
js
in
dec
test
rcr
pop
mov
inc
pop
and
sbb
or
mov
pop
sbb
enter
mov
jne
sbb
out
cmpsb
lret
adc
jg
movsb
push
pop
in
pop
rcl
lcall
call
mov
shr
mov
mov
dec
adc
mov
clc
push
jmp
fisubrs
enter
cwtl
xchg
and
cld
mov
or
fbld
out
push
pop
xor
jecxz
push
xlat
mov
mov
push
clc
mov
sub
jp
xchg
dec
ficompl
sbb
add
push
sbb
stos
scas
push
lret
loop
mov
int
insb
lea
inc
lret
mov
push
xchg
andb
and
call
mulb
jp
lret
xchg
insl
adc
out
nop
js
xor
dec
push
loope
jmp
or
add
inc
enter
inc
js
xlat
push
test
cmp
or
dec
leave
sbb
mov
mov
cmp
xchg
rcll
pop
into
repz
sbb
ja
inc
lcall
mov
sbb
jl
adc
mov
lahf
mov
jb
add
loope
adc
mov
sub
inc
add
lcall
inc
movsl
pop
inc
movsb
xadd
int3
scas
imul
adcl
mov
mov
sub
hlt
or
push
cmp
or
shlb
popa
mov
cmp
xchg
lock
das
add
sbbb
inc
popa
pusha
xchg
jle
stos
lret
repnz
sbb
dec
jne
inc
imul
mov
xchg
hlt
xchg
shll
lret
out
xor
bound
xchg
sub
pop
test
dec
fstl
mov
pop
fistl
fs
push
lret
sbb
xor
adc
iret
mov
mov
arpl
cmp
jmp
pushf
xchg
xor
dec
jnp
lods
jbe
mov
pop
cwtl
xchg
in
and
mov
jg
roll
arpl
shlb
sbb
cmp
stos
push
pop
fs
pop
bound
fisubrs
mov
dec
mov
dec
mov
mov
mov
jno
rclb
mov
pop
sahf
iret
out
les
push
push
mov
xchg
jecxz
xchg
sbb
sbb
push
enter
jb
pusha
dec
icebp
cmp
xchg
mov
pop
movl
adc
fcoml
bound
mov
stos
cld
out
cltd
movsl
iret
outsl
xchg
xor
lds
lret
mov
lahf
sub
add
ja
lret
leave
aam
js
dec
scas
repnz
outsl
push
xchg
adc
movsl
bound
out
pop
inc
push
leave
repnz
inc
push
aad
daa
jno
into
adc
cmp
mov
lods
lds
int
int
push
mov
adc
out
lods
test
push
or
lcall
testb
fsubl
sbb
movsb
dec
dec
out
loope
mov
sarl
pop
out
lret
ljmp
pop
adc
sbb
lret
loopne
lods
jno
gs
lret
fwait
cwtl
outsl
sbb
dec
inc
sbb
and
cmp
ljmp
sbb
sub
push
mov
addr16
push
sbb
mov
xor
adc
out
jo
out
xchg
or
and
insl
lcall
lods
mov
ret
iret
andb
xchg
es
xchg
ret
es
lret
adc
test
lret
xor
lea
and
das
sub
or
or
repz
sbb
iret
sbb
mov
cmp
cmp
push
repnz
and
mov
pusha
sub
and
add
rcrb
mov
fistps
popf
xor
adc
enter
aad
imul
sub
adc
pushf
lahf
or
in
mov
leave
push
je
nop
shr
pop
jecxz
popf
aaa
inc
or
dec
ficoms
jecxz
sbb
push
movsb
jno
add
fnstcw
test
fcmovb
faddl
fsubr
dec
es
cmp
jmp
jp
lahf
jmp
or
out
sub
xlat
sbb
pusha
lods
out
cmovne
and
sti
aaa
int
in
pop
imulb
sbb
lret
add
sbb
jge
and
test
sub
add
mov
xchg
insb
loope
movsb
push
jl
pop
insb
dec
inc
iret
jmp
pop
pop
sub
out
repz
push
mov
pop
insl
sar
pop
jle
je
lret
int
iret
or
xor
mov
push
lret
sub
in
xchg
insb
imul
icebp
popf
stos
mov
jo
in
stos
add
sub
incb
mov
pop
test
icebp
or
lret
cmp
stos
movsl
mov
pop
jle
arpl
insl
lret
jecxz
sub
out
aam
stos
js
dec
push
popf
mov
jae
jb
adc
xor
fldln2
cmp
push
jbe
xor
mov
inc
adc
inc
push
cwtl
out
and
decb
ret
js
xchg
cmp
sub
cmp
sub
adc
jmp
out
leave
iret
es
mov
xchg
lcall
sub
adc
int
popa
cmp
xor
and
stos
cli
xor
pop
pop
cmc
lods
and
jmp
repnz
in
daa
dec
lret
add
sub
xchg
and
lret
push
jo
movsl
mov
add
js
aam
fsubs
outsl
insb
xchg
and
pop
je
xor
stos
es
and
cmp
std
repz
fwait
test
dec
mov
cmp
and
call
jno
movsb
and
or
test
enter
xchg
push
or
pop
dec
fsubrs
pop
repz
mov
pusha
xor
sub
test
sub
push
js
ret
icebp
mov
js
mov
pop
sbb
cmpsl
fwait
mov
inc
sub
addb
mov
pop
xchg
lret
cmp
in
or
dec
ljmp
movsb
mov
and
fistl
xor
sub
stc
xor
out
lcall
mov
xchg
adc
jo
cmpb
sub
and
mov
insb
enter
bound
and
push
xchg
mov
push
call
pop
fmuls
fmull
and
push
and
push
out
adc
add
outsb
stos
int
sbb
sbb
popl
jge,pn
mov
pop
mov
jecxz
cmpsb
ljmp
push
cltd
push
dec
call
ja
repnz
or
lds
add
lcall
fstpt
iret
and
rclb
dec
mov
sbb
int
mov
in
lock
xchg
outsb
dec
sbb
push
mov
out
gs
pop
and
cs
shrl
ds
out
push
xlat
loopne
stos
dec
fcom
lret
test
cli
mov
bound
dec
out
and
stos
scas
test
out
cwtl
es
fimuls
push
jecxz
scas
in
jbe
sub
adc
cmpsl
repnz
mov
test
adc
movb
or
std
push
add
dec
inc
sbb
sub
ljmp
inc
in
daa
sub
insl
sbb
jo
shlb
sub
cs
push
mov
pop
xchg
fs
fwait
or
sub
push
insb
lock
je
mov
sbb
dec
add
and
shld
cmpsb
leave
inc
icebp
cmpl
dec
test
jb
out
jmp
jne
iret
push
mov
popa
push
sqrtps
test
jle
es
xor
dec
cmp
out
push
inc
push
in
lods
fcmovbe
sub
pop
mov
dec
push
aad
incb
test
inc
inc
adc
std
pop
or
ret
jne
cmp
push
psubw
mov
jecxz
lret
cwtl
aam
adc
and
pop
mov
scas
ljmp
cmp
cmp
jo
xchg
push
sbb
dec
fcomi
xor
or
loopne
jp
arpl
jle
popa
jmp
leavew
inc
jnp
cld
mov
fcmovu
pop
and
stos
jmp
pop
xor
insl
outsb
bound
pop
and
fs
adc
mov
sub
mov
xor
cli
aad
pushf
lods
xchg
andb
jecxz
jb
xor
mov
add
sbb
fcomip
push
cmc
pushf
orb
clc
mov
sub
lretw
fs
lock
jg
sub
inc
addr16
mov
sahf
or
lret
lcall
mov
mov
sbb
jl
test
push
loope
es
jecxz
jecxz
xlat
add
sbb
in
sbb
sub
int3
push
cmpsl
and
stc
mov
mov
lock
pop
shl
and
je
push
push
repz
test
mov
sub
repnz
mov
cmp
popa
inc
adc
jmp
and
ret
in
or
imul
mov
repnz
jecxz
and
aaa
mov
std
in
movsb
mov
jnp
imul
pusha
xchg
sbb
and
push
mov
insb
outsl
jae
pop
sub
shll
das
xchg
inc
out
fimuls
popf
pop
cmpsl
push
cmp
ret
xchg
repnz
lcall
pop
aaa
push
jmp
outsb
test
repz
or
fcoml
lods
and
xchg
and
and
iret
pop
inc
jnp
cmp
mov
sahf
inc
xor
mov
out
aas
xchg
mov
dec
or
or
push
sbb
and
sub
pop
cmpsl
push
push
lahf
sub
and
mov
mov
sub
stos
xchg
inc
or
std
push
stc
pop
hlt
cmp
cli
add
xor
xchg
mov
push
jl
pop
xchg
aas
push
sbb
jecxz
push
sbbb
outsl
xchg
mov
fsub
js
shlb
sbb
adc
mov
sub
fisubl
mov
rcll
sub
aad
sbb
jecxz
fdivr
pop
call
mov
mov
xor
dec
pushf
mov
out
imul
xor
fcomps
and
and
andl
mov
imul
loopne
test
mov
mov
jmp
stc
push
scas
inc
mov
mov
fwait
adc
fwait
sti
push
outsb
jnp
imul
js
iret
lret
cmp
dec
sbb
and
out
xor
dec
mov
fwait
mov
xor
bound
xchg
push
sub
jo
dec
addb
and
into
std
fwait
lea
nop
xchg
adc
sub
repz
nop
cmovge
mov
xor
dec
mov
ret
push
test
or
jge
mov
in
inc
fistpll
push
xlat
scas
adc
sbb
fwait
repz
and
lret
mov
orb
aas
in
inc
bound
cwtl
pop
or
or
aas
dec
add
es
cmpsl
sub
flds
sahf
fdivrp
xchg
adc
movsb
sti
addr16
pushf
jmp
jb
ficompl
loopne
mov
sbb
pop
mov
arpl
fisubrs
dec
and
adc
push
adc
mov
and
je
pop
push
popl
and
nopl
out
test
lock
cmp
sbb
sub
cmp
imul
fsubl
call
into
push
scas
jmp
and
imul
adc
xchg
aad
div
gs
mov
push
fdivrs
imulb
mov
stc
sub
cmp
pop
aas
test
scas
xor
or
outsb
cmpb
cmp
addb
xlat
repnz
imul
sub
rolb
gs
dec
out
push
aad
and
cltd
call
mov
movsl
xchg
add
fstp
sub
mov
movsb
ljmp
sbb
daa
pop
cmpsl
dec
xchg
test
mov
addr16
xchg
inc
nop
fists
int3
or
sti
pop
jecxz
ljmp
push
adc
push
cwtl
les
outsb
lods
dec
sub
lock
add
insl
mov
cmp
in
dec
hlt
sbb
xchg
cmc
loop
bnd
inc
sbb
fwait
xchg
push
sbb
and
fdiv
sahf
repz
inc
sbb
daa
mov
hlt
add
lret
add
and
imul
leave
call
xor
aas
js
pop
sbb
and
push
repnz
sub
cwtl
adc
mov
xor
sub
test
fildl
and
adc
test
push
xchg
push
xchg
ss
xchg
cli
loop
insb
cmp
out
mov
jg
inc
jecxz
mov
xor
xor
adc
int3
cmp
shlb
or
inc
cmp
dec
jmp
and
dec
cli
cmp
in
push
lock
mov
jbe
cmpsb
push
and
sub
pop
mov
jae
aaa
testl
popa
mov
dec
jnp
xor
repz
fucomip
cmp
pop
jmp
imul
aam
xor
and
aad
dec
loope
test
pop
mov
pop
ljmp
xor
adc
bound
jp
pop
adc
and
repnz
mov
out
push
dec
ljmp
shl
sub
scas
lret
repnz
outsl
shll
rclb
neg
and
lds
lock
mov
jmp
in
popl
lret
std
lock
out
or
ljmp
and
jae
pushl
in
mov
shr
sbb
enter
xlat
and
repnz
or
or
aam
cwtl
dec
dec
and
cmpsb
fisttpl
sbbb
add
out
mov
sbb
nop
cmp
push
lret
push
iret
test
fisttpll
sub
lods
or
cli
mov
cltd
mov
cmp
push
xlat
into
shr
imul
pop
pop
mov
inc
adc
out
stos
fadd
test
add
in
mov
xchg
lcall
mov
sub
ficoml
mov
or
xlat
movsl
test
pop
mov
inc
push
mov
mov
push
negl
bnd
mov
xchg
mov
jo
sub
mov
or
inc
sbb
add
adc
xchg
sbb
fstl
cli
test
inc
repnz
outsb
mov
jp
mov
mov
lods
cmp
leave
dec
ret
hlt
or
arpl
adc
or
cli
cmp
or
mov
outsb
pop
insl
mov
or
lea
push
or
add
xrelease
sub
fwait
cmp
rclb
xchg
loopne
shrb
sub
or
xchg
mov
xor
cmc
cltd
sbb
mov
imul
imul
lds
repnz
mov
mov
or
sub
dec
pop
lret
jb
push
orl
mov
gs
lahf
mov
mov
xchg
lods
jle
or
xchg
sbb
dec
xchg
stos
push
aad
mov
sub
test
mov
inc
lret
mov
xchg
adc
lret
ljmp
pop
add
addb
mov
xchg
cli
enter
xchg
nopl
lret
adc
pop
rorb
fildll
and
fildl
jne
and
mov
loope
fnstcw
test
test
and
pop
loope
sub
stos
das
mov
fwait
lret
iret
imul
pop
dec
jecxz
aaa
jl
nop
pop
push
mov
loop
addr16
ljmp
test
xchg
shl
add
fstl
clc
fstpl
mov
loop
push
sahf
sbb
enter
inc
pop
or
mov
imul
shr
lahf
test
and
repnz
lods
lods
ret
inc
fcmovnb
inc
lock
pop
lock
push
mov
mov
js
ljmp
cli
or
lcall
adc
lcall
sbb
mov
das
jns
push
xchg
icebp
push
loop
push
and
in
into
lahf
ret
leave
fwait
jns
cli
cld
sub
push
mov
bound
pushf
daa
pop
dec
loop
es
pop
and
sbbl
insl
and
sahf
out
jecxz
mov
push
outsl
push
cmp
dec
loop
fwait
pop
jecxz
and
xchg
cmp
and
and
push
mov
es
or
dec
dec
lds
test
repnz
jb
jecxz
ret
imulb
sbb
and
orb
adc
mov
and
in
add
inc
pop
stos
or
or
xchg
mov
dec
or
cmp
aam
mov
fs
pop
les
cmp
daa
cmp
lds
sbb
repnz
xchg
loopne
movsl
and
push
xchg
mov
add
arpl
pusha
cwtl
pop
shrb
popa
aam
xchg
and
push
add
enter
insb
andb
mov
fwait
loopne
cli
mul
xchg
or
ffree
fiaddl
loopne
cmpsl
iret
scas
dec
lods
lret
and
lret
pop
sub
mov
pop
test
das
push
sub
mov
add
xchg
punpcklbw
pop
cli
or
adc
pop
mov
out
in
sub
or
dec
xchg
ret
xchg
sub
mov
push
or
adc
hlt
mov
lds
pop
or
adc
push
xchg
popa
push
push
or
xchg
mull
js
hlt
int3
mov
pushf
movaps
cmpsl
ljmp
fdivrs
rclb
daa
pushf
cmpl
or
mov
sbb
in
or
shrb
insb
jno
hlt
iret
adc
pop
adc
and
push
pop
pop
add
insb
daa
xchg
or
repnz
mov
ret
decb
data16
dec
sbb
cmc
xchg
xchg
cwtl
cmpsl
pop
mov
jmp
out
mov
xchg
and
arpl
mov
sbb
push
ret
sub
pop
push
or
mov
jecxz
adc
mov
xchg
push
movsl
mov
push
lods
loope
push
jge
sbb
sbb
bound
pop
xchg
sbb
sbb
jne
imul
leave
sbb
or
repnz
std
fxch
sbb
ljmp
sbb
loop
push
add
loop
aam
sub
les
and
sbb
jmp
or
sub
mov
sti
xor
push
icebp
fistpll
int
hlt
out
push
es
sub
out
int
pop
loopne
subb
mov
dec
xchg
lock
adcb
fsub
mov
dec
hlt
enter
addr16
dec
add
or
adc
inc
adc
or
add
inc
jo
or
icebp
lods
ja
jl
jge
or
mov
cmpsl
imul
repnz
das
xchg
fwait
and
outsl
shrb
icebp
add
test
xor
fmuls
push
rorl
and
aaa
pop
fs
or
es
and
xor
lods
aam
fdivs
cwtl
sbb
and
sets
in
es
test
daa
jne
or
cmpb
prefetch
mov
pusha
sub
test
jo
adc
or
cltd
movsb
addl
stos
mov
popa
adc
lahf
mov
out
imul
push
push
fstpl
adc
and
jp
push
rorl
and
and
ljmp
out
or
dec
adc
cltd
and
cmp
jbe
jmp
arpl
daa
cmpsb
sub
es
and
pop
loopne
dec
into
pop
xchg
lds
cmp
fcompl
nop
stos
push
dec
cmpsb
sub
jmp
fisttpll
pop
sub
cli
negb
stc
jo
jmp
jns
movsb
imul
jecxz
repnz
stos
into
jbe
pop
mov
outsl
test
leave
push
fisubl
fwait
and
sub
mov
xchg
lock
aam
stc
popf
xor
cltd
cmp
mov
cs
mov
xchg
adc
push
nop
dec
fs
push
mov
or
push
xchg
xchg
mov
aad
imul
or
test
push
out
pop
dec
fdivl
fmul
sbb
sti
int
xchg
in
je
cmp
movsb
ja
pop
cmp
and
gs
push
in
push
in
stos
cmp
aad
inc
sub
addr16
mov
sub
aam
sbb
push
xchg
idiv
xchg
or
add
mov
out
test
pop
shrl
loopne
jno
push
cmp
pop
ret
sub
pop
stos
sub
jmp
mov
push
stos
cli
lds
push
imull
jnp
int
jo
inc
stos
add
jo
rolb
sub
jl
movsb
xor
iret
mov
fwait
sbb
addr16
push
xchg
push
and
or
sbb
stos
popf
movl
push
add
xchg
jb
xor
and
in
lea
pop
lods
int
cmp
outsl
inc
xor
lods
mov
pop
daa
xor
pop
sub
add
cltd
push
shrb
imul
lahf
fdivrl
pop
inc
mov
test
mov
and
xor
push
aam
notb
sbb
imul
stos
mov
test
xor
push
xor
inc
push
mov
pop
cwtl
lahf
sub
mov
and
gs
dec
mov
in
test
and
insl
test
xchg
sbb
pop
jmp
stos
leave
pop
jb
shlb
mov
sbb
pop
sub
xchg
push
loopne,pt
aad
mov
xchg
repnz
inc
aad
push
dec
pusha
pop
xchg
dec
int
insl
repz
mov
arpl
pop
int
hlt
iret
mov
pop
lds
imulb
sbb
hlt
jb
call
icebp
inc
daa
imul
or
jl
jb
or
cld
mov
out
adc
add
dec
push
xorl
xchg
test
mov
sub
pop
push
adc
gs
adc
out
mov
and
pop
cmpsl
or
mov
sub
mov
pop
jle
and
lcall
call
shlb
imul
jbe
enter
dec
xchg
cwtl
jno
aad
add
sarb
jae
test
lret
xchg
inc
add
xchg
es
sub
leave
lea
xor
mov
sbb
sbb
dec
push
cli
sub
cmp
push
movsb
imul
push
stc
push
popf
push
mov
sub
push
pop
arpl
sub
js
subl
push
in
insl
ficomps
scas
sub
add
decb
add
xor
mov
andl
sbb
test
dec
xchg
arpl
sti
cld
sti
lods
es
test
mov
int
mov
or
daa
pop
popf
mov
ror
pusha
cmc
leave
jbe
xchg
cmpsb
jmp
push
stos
iret
cmpsb
pusha
mov
popf
push
push
and
xor
fwait
and
loopne
stc
jnp
mov
pop
or
lret
and
loope
mov
es
mov
inc
and
mov
mov
and
jl
ror
dec
cmp
and
xchg
js
jmp
pop
dec
sbb
scas
scas
mov
nop
faddl
push
push
cltd
mov
insb
mov
push
lods
push
jle
jo
jecxz
mov
add
lds
lcall
jo
loop
add
lods
ret
fadd
push
lret
push
and
adcb
andnps
xchg
or
popf
std
jbe
mov
or
sub
xorb
ret
adc
rcrb
push
test
aam
ficoms
lahf
in
cmp
ljmp
and
ljmp
inc
inc
cmpsl
std
cltd
jl
mov
insl
ffreep
push
fistpll
dec
xchg
sbb
ljmp
push
repnz
dec
jecxz
imul
popa
loopne
jmp
or
add
in
dec
popf
mov
xchg
les
sub
mov
fmulp
adc
jecxz
test
js
js
cmovg
lea
sbb
lret
pusha
test
sti
insb
scas
mov
add
cwtl
push
mov
and
loope
popa
lods
clc
gs
dec
sub
sbb
and
stos
insl
push
jp
or
add
mov
jl
add
pusha
adc
add
add
mov
or
pop
cli
call
std
pushf
or
cmp
test
rcrl
into
cmp
jo
push
add
and
and
mov
enter
imul
and
pop
sbbb
ljmp
sbb
and
add
lcall
adc
aam
sahf
pop
add
cmp
ret
mov
rorl
in
mov
rep
lea
and
fsubp
inc
in
mov
xchg
inc
stos
loopne
jmp
mov
xorb
xchg
mov
lahf
push
xchg
fnstenv
jns
jl
pushf
imul
dec
mov
mov
sbb
cltd
cmova
fstps
pop
sub
imulb
push
mov
ljmp
add
sbb
test
sub
push
arpl
sti
and
shll
in
stos
xorb
ffreep
movsb
push
in
jl
ret
mov
jle
lock
lcall
mov
mov
loopne
inc
stos
movaps
cltd
cmpsb
repnz
into
int3
in
adc
std
shll
sahf
fwait
pop
shll
ret
sbb
and
or
cmp
std
jle
pop
adc
aaa
sti
jae
mov
enter
pop
or
repnz
pop
std
inc
mov
fisubrs
add
clc
pop
fwait
pop
sarb
sub
add
and
popf
pop
lret
outsl
movsb
jmp
lods
jg
fucomi
in
mov
sub
adc
lods
sub
or
das
add
repnz
inc
imul
and
push
pop
lods
jmp
imul
inc
outsb
xchg
or
push
imul
rclb
pop
pop
cli
xchg
outsb
nop
jmp
mov
adc
sti
pushf
pop
mov
lcall
in
mov
imul
and
dec
leave
add
and
add
xchg
pop
imul
pop
mov
stc
or
ja
sub
xchg
ljmp
push
repnz
push
xor
sti
sub
xor
xor
xor
repnz
sbb
xchg
and
xchg
dec
pop
sub
aam
pop
decl
lcall
jmp
leave
insl
mov
sub
leave
sbb
andl
and
sahf
pushf
and
cmpsb
sbb
stos
adc
cmpsb
scas
xchg
movsb
pop
stos
adc
mov
pop
out
cli
or
bound
int
jmp
jnp
loopne
dec
js
sub
pop
add
fstl
movsl
sbb
popf
mov
out
cmp
sti
add
sbb
push
mov
cltd
int3
cmc
add
lret
subb
fstpl
sbb
or
sbb
nop
adc
or
frstor
lods
sub
clc
cwtl
addr16
sti
jns
add
push
fldt
push
das
movsb
shl
mov
sbb
jge
mov
push
or
or
iret
pop
enter
sbb
jb
lret
outsw
sub
mov
mov
push
or
ss
fidivl
or
push
mov
or
xchg
jmp
sti
repnz
lods
add
add
scas
and
sbb
out
vmovss
adc
sbb
out
mov
or
mov
lods
test
jg
sub
not
rorb
inc
jbe
lock
leave
jmp
adc
sub
lret
push
sub
out
lods
cmpsl
push
lods
push
out
repnz
std
loop,pn
in
xchg
mov
insl
inc
andl
arpl
movsl
test
std
cli
pmaxub
mov
push
jnp
mov
imul
aad
lds
cli
sub
sub
repz
or
sbb
stos
pop
mov
add
push
sub
add
lret
je
iret
loopne
aad
int3
adc
mov
cmp
mov
stos
pop
je
or
or
fs
bound
or
adc
push
lret
push
scas
and
xlat
insl
test
ja
enter
push
push
sub
sub
sahf
jle
pop
loope
lcall
cmpsl
lock
push
ds
pop
in
insb
fistpll
xor
sub
pop
cmp
insl
stos
inc
fucomip
and
mov
sub
ret
jns
mov
aam
sub
mov
imul
stos
shlb
scas
loopne
mov
sub
in
iret
fisttps
add
pop
jge
imul
mov
pop
test
add
push
repnz
cmpb
add
sbb
es
sub
adc
pushfw
lods
es
jg
cld
imul
sbb
imul
fildll
sub
aam
adc
pop
or
cli
sub
pop
add
retw
mull
inc
aam
popa
or
bndldx
sbb
sti
cld
jno
pusha
pushf
rorl
jmp
imul
lret
leave
cmp
sub
shl
jmp
lods
adc
mov
das
fwait
sbb
daa
movb
adc
negb
mov
add
dec
mov
pop
pushf
add
jno
add
sbb
adc
pusha
mov
mov
out
or
jecxz
xchg
idivb
sub
xor
daa
loopne
cmp
xor
add
push
call
adc
or
or
jecxz
inc
shl
lret
xor
mov
repz
jne
or
jp
jecxz
adc
sub
mov
sbb
jge
ss
fbld
xchg
adc
and
push
inc
sbb
lods
add
push
mov
push
adc
mov
inc
sub
cmp
mov
push
imul
and
and
push
sub
cmp
mov
pop
jnp
test
or
pop
mulb
ja
negb
xor
inc
inc
inc
lea
pop
inc
push
jl
jge
hlt
xchg
pop
add
mov
or
xor
mov
in
in
out
xchg
repnz
inc
cmp
icebp
pop
in
push
xchg
ljmp
xor
xor
pop
cmp
fwait
dec
lock
popf
out
push
mov
enter
and
jecxz
out
scas
cltd
add
andl
dec
and
push
out
or
aas
adc
adc
xor
and
jno
ja
push
movsl
lods
dec
lret
add
xor
push
jg
movsb
wbinvd
je
or
xchg
aas
sbb
mov
cltd
mov
inc
add
pop
sub
jg
imul
push
adc
jl
jb
dec
or
mov
and
or
pop
xchg
adc
lcall
xchg
std
jb
frstor
dec
mov
scas
dec
enter
stos
xchg
jo
fsubrp
test
gs
pop
aaa
cmp
and
in
or
dec
call
or
fdivrs
jle
sub
add
imul
cmp
lock
and
jnp
std
and
test
xchg
or
jg
mov
and
fistpl
ljmp
and
and
inc
lea
adc
stc
xor
sub
movsb
incb
cmpl
sbb
add
loopne
sub
adc
and
in
out
sub
shrb
lock
psubw
or
rcrb
lock
xor
and
out
sbb
or
insl
sbb
mov
pop
push
daa
shlb
or
clc
xchg
mov
sub
sub
jg
pop
and
mov
cwtl
popf
in
inc
loopne
jns
push
loopne
mov
hlt
sbb
lock
xchg
std
pop
lock
or
xchg
mov
hlt
mov
sub
jp
popf
cld
push
xchg
push
das
or
fcoms
cwtl
mov
pushf
jecxz
mov
pop
fildl
cld
sub
pop
loop
in
cld
and
ja
and
sbb
fstpt
sbb
out
enter
fimull
std
das
pop
icebp
icebp
mov
pushf
daa
mov
adc
push
testb
test
sub
or
xchg
les
sub
movsb
xor
adc
cwtl
out
cmp
xchg
jo
sub
test
aaa
das
sub
mov
sti
cli
mov
or
popf
shr
adc
sub
jl
cwtl
popf
repz
test
or
adcb
aaa
or
and
ja
clc
or
or
cmp
adc
sub
or
loopne
sbb
int
mov
add
lock
sbb
add
add
out
clc
or
mov
sub
and
vmovaps
xchg
push
std
in
pushf
pop
fcomps
in
push
add
and
notb
adc
xchg
lret
rolb
add
imul
adc
scas
mov
and
push
and
sbb
das
push
fnsave
inc
mov
fdivs
sbb
lock
movsl
pop
pop
frstor
jne
push
mov
xchg
fwait
dec
lock
push
push
xchg
xlat
rorl
fdiv
imul
sub
pop
push
lret
cmp
inc
fwait
orl
mov
cwtl
hlt
loopne
jp
fcmovne
sub
and
adc
sub
jnp
jp
outsb
sub
hlt
loopne
push
sub
jae
inc
sbb
daa
sub
or
push
adc
cmp
jo
mov
negl
push
lar
in
add
inc
mov
movsl
or
xor
sti
out
sub
add
incl
pop
sbb
ret
sub
call
and
loopne
out
test
adc
enter
sbb
ret
testb
or
loop
jl
in
nop
in
faddp
dec
adc
or
das
mov
sub
dec
jmp
repnz
push
loopne
fwait
cmpsl
pop
sbb
cmpsl
push
jnp
adc
mov
or
or
aas
sbb
or
sbb
repnz
out
adc
mov
mov
or
sub
fsubrp
scas
imul
rolb
sbb
jmp
xorb
inc
subb
and
vaddsubps
movsb
pop
or
mov
pop
mov
xor
cld
loop
and
ljmp
push
hlt
or
fsubp
clc
and
pop
repz
sub
or
loopne
cmp
mov
cmpsb
pop
or
sbb
loopne
pop
and
inc
cmc
mov
pop
ljmp
jo
insl
pusha
jne
int3
pop
or
or
or
mov
push
sub
js
out
test
hlt
in
lcall
sbb
lret
mov
xchg
pusha
sub
mov
adc
lock
inc
sub
mov
clc
das
and
loopne
cwtl
cwtl
cmpsl
adc
inc
lods
or
push
mov
outsb
and
mov
adc
pop
cmp
cli
je
out
fisubs
loopne
movsb
push
jg
mov
and
movsl
and
pop
lock
syscall
and
imulb
dec
or
mulb
or
or
pop
add
test
stos
sbb
sub
sub
std
in
lahf
pop
sbb
push
pop
mov
cmp
sbb
ficoml
sbb
lahf
or
jecxz
cli
add
arpl
or
popl
popa
pop
in
nop
test
in
loope
and
pop
pop
push
test
add
dec
mov
in
xor
fstl
push
ljmp
nop
fwait
cmp
cmp
and
mov
ss
and
in
in
mov
in
sbb
and
nop
push
mov
cld
cwtl
mov
lret
in
add
add
pushf
rcrb
in
stos
mov
sti
iret
jl
dec
inc
mov
xchg
and
cltd
cmp
and
jo
xor
aam
mov
sbb
sub
dec
shrl
adcl
mov
repz
jge
nop
sarl
push
add
push
or
movsl
and
mov
js
inc
or
push
inc
jo
and
gs
add
cmc
and
fdivr
xor
pop
sub
pop
clc
mov
faddl
js
das
sbb
incb
out
mov
lea
mov
ds
jne
mov
sbb
jg
and
add
sbb
cmpsl
dec
adc
add
xchg
sbbb
cld
add
inc
rcrl
jnp
mov
vprotb
outsl
or
repz
mov
mov
cmp
add
movaps
inc
mov
inc
push
xchg
fwait
push
sti
mov
adc
inc
lret
jns
xor
pop
rcrl
cmp
push
sti
inc
inc
dec
sub
loope
lret
in
push
loopne
out
shl
mov
cmpsl
sub
paddb
shlb
sbb
add
jne
adc
xor
jge
fsubl
repnz
subl
ret
and
in
test
mov
mov
and
add
stos
sub
sub
pminsw
daa
add
movsl
repz
push
add
and
call
or
inc
pop
add
adc
shlb
clc
gs
sub
sbb
sub
sbb
repnz
das
movl
loopne
lock
fildl
add
adc
sub
scas
and
daa
cwtl
xchg
mov
rol
cmpsb
and
cld
roll
mov
mov
jp
and
loope
popa
test
and
jmp
sbb
cmp
in
add
pminsw
aam
sub
fcmovu
inc
cmp
push
adc
add
test
or
ret
clc
loopne
ficomps
test
or
sbb
cmc
or
mov
cwtl
sub
mov
and
das
loopne
sub
sbbb
mov
adcb
test
cwtl
or
cwtl
insb
inc
fiadds
sub
lret
sub
lret
and
jg
test
or
add
pop
sub
and
pop
or
lret
sub
sub
lret
sub
or
pusha
loopne
sub
repz
arpl
ljmp
pop
mov
mov
out
and
lds
sbb
or
and
daa
loopne
push
loope
or
and
or
or
aam
sub
sub
or
movsb
stos
sbb
mov
mov
sbb
and
or
in
ret
sub
sub
or
aam
sub
add
sti
aam
sub
test
cmc
sbb
out
or
jp
test
and
pop
loopne
sbb
mov
loopne
sbb
pop
and
push
loopne
sbb
and
les
adc
mov
and
add
mov
and
sti
or
aam
sub
test
lret
or
or
or
bound
sbb
sbb
pushf
in
pop
cmp
sbb
ret
daa
pop
pusha
adc
cmp
pop
in
clc
movsl
cmpsl
cltd
bound
sbb
insl
cltd
mov
rorl
inc
sub
and
out
decb
pop
loopne
shrb
sbb
daa
cli
or
mov
sbb
mov
mov
psadbw
mov
xchg
mov
sbb
mov
add
sub
or
sub
or
insl
loop
test
idivb
clc
mov
or
and
cmpb
loop
clc
or
adc
jbe
cltd
das
mov
mov
xlat
scas
mov
sti
adc
and
push
mov
inc
pop
or
inc
pop
pop
add
bound
pop
mov
es
pop
xchg
or
es
mov
mov
in
and
shlb
pop
and
add
dec
push
xchg
xor
sbb
pusha
push
or
jo
cltd
in
loopne
xchg
les
adc
jge
pushf
and
addl
push
scas
mov
loop
pop
enter
faddl
lock
ret
mov
cwtl
adc
or
aaa
pop
or
dec
jp
push
jle
bound
mov
repnz
pushf
adc
pop
incl
adc
jns
push
je
and
pop
add
popa
jmp
jmp
mov
or
pop
mov
add
fadd
leave
or
add
mov
iret
test
nop
rcr
mov
shll
cwtl
adc
cmpsl
out
loop
repnz
or
push
jns
xlat
sub
hlt
imull
sbb
out
push
jne
mov
test
mov
push
test
push
add
pop
enter
daa
cwtl
push
add
int3
ljmp
mov
sub
pop
mul
mov
pusha
cltd
ret
or
adc
lock
subl
test
sbb
pop
cmpsl
lret
sub
cwtl
sbb
outsl
jecxz
or
pop
and
daa
loopne
rorb
and
mov
loopne
mov
cli
and
cld
and
and
add
bound
xlat
sub
lret
shl
or
pop
pop
test
addl
lds
mov
mov
loopne
inc
mov
outsb
loopne
cmc
popl
outsb
loopne
jnp
mov
add
sub
xchg
in
add
in
in
and
and
repnz
mov
popf
cmp
add
lods
cwtl
popa
push
out
cld
rol
mov
lret
out
clc
or
test
adc
movsb
lret
sbb
xchg
and
sbb
add
mov
mov
aam
sub
insb
xor
stos
repnz
dec
push
popf
sahf
sbb
fistpl
scas
push
push
aas
pop
jo
add
add
sti
imul
out
decb
or
sub
pusha
add
and
repz
aaa
cmp
jmp
add
sbb
mov
lret
and
stos
scas
enter
enter
flds
mov
xchg
cwtl
add
test
sahf
lret
or
jge
pop
add
or
inc
mov
scas
rclb
pushf
xor
aas
mov
mov
pop
or
sub
sbb
pop
push
ret
or
out
push
sbb
sbb
sbb
dec
add
add
fcomps
cwtl
cwtl
mov
rorb
or
mov
and
sub
xor
jns
adc
sbb
and
sub
mov
push
cli
mov
pop
enter
mov
and
or
rcll
lcall
and
imulb
pop
lahf
xchg
push
movsb
in
test
movsl
adc
mulb
out
sbb
or
hlt
push
sub
pop
fs
jg
or
das
or
shrb
in
sbb
jecxz
loopne
and
loop
add
movsl
and
sar
or
imul
fwait
push
pop
sti
push
cltd
sub
adc
sbb
and
lcall
sub
or
or
ja
jno
inc
add
insl
cwtl
shll
bound
jp
sbb
cli
in
clc
cwtl
ja
sbb
add
fsubr
or
add
and
mov
sub
subb
push
mov
out
dec
fsubp
fistps
and
iret
pop
xchg
dec
sub
shrb
jmp
stc
in
push
or
aaa
or
movsl
in
repnz
lcall
add
or
cli
and
hlt
and
inc
and
in
sbb
repnz
sub
push
sbb
sub
out
cwtl
pop
pop
add
jl
daa
in
sub
mov
mov
sub
insl
in
or
sbb
mov
jecxz
add
and
and
sbb
cwtl
hlt
loopne
jns
cld
scas
mov
fistps
sbb
push
xor
or
outsb
or
inc
sbb
mov
push
mov
sub
or
cli
sbb
sub
cwtl
cld
sub
add
in
adc
xor
subb
ljmp
hlt
or
or
jp
adc
cmp
jmp
cmc
sub
jecxz
lcall
loopne
out
push
stc
sub
mov
or
fldt
or
pop
movl
push
jno
dec
ror
or
loopne
adcl
lret
mov
mov
lret
mov
loopne
mov
cmpsl
loopne
adcl
mov
nop
inc
cmpsl
dec
push
or
xchg
add
jbe
push
data16
or
add
mulb
or
xchg
gs
in
sbb
in
cmp
mov
mov
mov
lret
sub
or
push
mov
push
adc
int3
addb
push
stos
loopne
sub
shlb
in
add
pop
or
test
clc
out
test
push
aam
sub
add
or
cld
test
or
or
shll
loopne
and
push
xor
out
push
sub
mov
xchg
add
pop
mov
mov
adc
mov
and
or
pusha
xlat
and
xchg
inc
push
or
sub
or
sub
xchg
dec
in
and
cld
jecxz
mov
sbb
dec
sbb
daa
jne
ret
and
in
test
mov
pop
ret
lcall
lret
or
sub
prefetcht2
sub
or
sarl
dec
or
in
insl
in
stos
fldl
push
testl
and
sub
sbb
pop
mov
sbb
add
pop
insb
or
sub
sub
test
les
scas
jecxz
sub
ror
call
lcall
and
push
jecxz
cmpsl
cwtl
clc
loopne
sbb
imul
or
jno
stos
ret
sbb
cmpsl
and
idiv
cmpsl
mov
mov
js
stos
lods
fnstsw
cli
fs
cwtl
cmpsl
or
shlb
pop
push
or
loope
adc
or
out
or
stc
cli
adc
xchg
test
mov
add
ret
movb
lret
ret
ret
clc
fists
adc
movsb
adc
in
sub
sbb
sub
repz
fsubl
dec
add
sbb
sub
outsb
adcb
shll
loopne
cmp
pop
dec
repnz
and
out
ss
push
into
cmp
lea
mov
faddl
in
adc
and
lock
cld
sub
and
hlt
mov
sti
fsubl
shr
test
adc
sbb
and
sahf
push
and
mov
sub
or
arpl
jg
adc
and
movsb
mul
xchg
adc
and
sub
js
outsb
sub
add
push
sub
xor
and
in
sbb
loop
dec
lret
add
and
in
sub
or
in
push
les
test
insl
fs
xor
imul
adc
sbb
inc
adc
jg
mov
std
mov
adc
adc
mov
xchg
cwtl
sbb
lea
add
push
pop
testl
gs
sbb
adc
cwtl
fldl
repz
retw
adc
pop
add
jmp
loope
mov
cmpsb
xor
mov
add
sub
sbb
out
dec
and
and
mov
sbb
or
decb
lret
adc
xchg
push
cmp
and
sbb
adc
cmpsb
loop
adc
sub
and
sbb
or
addb
xor
jae
inc
add
jns
or
pushf
pop
add
mov
jmp
mov
sbb
and
adc
mov
cli
setns
or
add
daa
pushf
xchg
lahf
fistps
cwtl
and
mov
hlt
daa
cwtl
movsb
out
in
and
in
mov
fwait
out
int
or
fldlg2
add
mov
or
pop
pushf
and
fwait
dec
add
mov
pop
adc
cmpsl
mov
fisubs
jmp
mov
fisubl
addr16
jge
xor
adc
and
cmpsl
fldt
cmp
int3
adc
or
fistpl
add
push
int
imulb
rcrb
mov
shl
add
fwait
lret
rorb
fisubs
mov
or
ret
into
in
out
fcoms
and
outsb
cli
sub
adc
mov
in
or
and
mov
sub
or
test
and
and
pop
in
lds
in
sbb
das
or
pop
fildl
sbb
sub
mov
out
dec
das
sub
rcrl
push
lret
push
pop
adc
add
and
or
repnz
clc
sub
std
in
sub
and
sbb
lret
ret
ret
jecxz
adc
xor
mov
adc
into
dec
outsb
sbb
outsb
sbb
inc
leave
sub
shlb
cwtl
arpl
sbb
test
sbb
lods
add
mov
sbb
xor
gs
sbb
test
xor
pop
mov
mov
outsb
sbb
int3
add
xor
cli
jno
shlb
adc
enter
in
incb
xor
pop
fwait
pop
sahf
cld
lea
out
dec
cmpsl
lret
or
add
fsub
out
clc
fwait
aam
pop
jbe
lock
cltd
push
in
add
and
xchg
js
dec
outsl
adc
or
mov
orl
and
dec
pusha
scas
js
rolb
xor
sub
add
sbb
cwtl
pusha
cli
pop
add
mov
in
enter
in
test
and
cld
mov
mov
sub
cwtl
inc
loopne
stos
insb
scas
push
aaa
out
xor
stc
jno
pop
sub
je
and
add
outsl
mov
sub
add
lods
in
shlb
sub
xchg
or
sub
and
sub
and
xchg
loope
adc
mov
push
pop
or
ret
fcoms
and
cwtl
lock
cmpsl
das
xchg
sub
scas
add
cmpsl
sub
pop
rorb
dec
add
inc
sbb
pop
shll
cmc
cmc
aas
or
mov
scas
jb
shrb
mov
fsts
pop
adc
fs
cld
inc
test
adc
lahf
jmp
and
or
daa
cmp
and
mov
xchg
insb
out
adc
mov
insl
sub
fadds
in
push
dec
in
loopne
imulb
jge
mov
test
add
xchg
or
into
pushf
add
daa
sbb
or
cld
daa
shrl
pop
pop
daa
and
sbb
loopne
push
adc
cwtl
and
add
xchg
in
sbb
dec
lds
sub
adc
out
sub
outsb
in
sarl
push
sub
gs
jo
adc
movsl
andb
mov
stos
sbb
mov
insl
shlb
sub
mov
and
mov
fstps
cli
mov
and
pushf
in
ficoms
sarb
push
cli
mov
mov
sbb
cmc
shrb
cs
dec
loop
or
scas
mov
add
out
out
js
cmp
and
in
sub
and
cwtl
inc
or
cltd
sub
insb
lret
mov
lods
cmp
icebp
fbstp
fisubrs
or
outsl
or
push
cmpsb
pop
or
loopne
cmp
loopne
or
mov
pop
repnz
jecxz
xchg
jns
pop
xchg
jnp
in
outsl
in
jmp
add
cld
mov
fmuls
mov
adc
popa
in
in
movsl
dec
xchg
movsb
sbb
xor
push
push
notl
sub
and
fstl
jecxz
mov
fsubl
sbb
push
es
and
and
enter
jl
inc
daa
repnz
sub
and
sub
loop
sbb
das
lods
sub
lods
insl
movsl
sbb
push
add
loopne
js
test
or
and
sbb
add
and
icebp
pop
or
outsb
or
fisttpl
sti
lods
loopne
sub
out
or
outsb
mov
and
pop
ret
push
cld
loopne
mov
push
push
lcall
lret
loopne
ret
xchg
gs
in
cmpsl
mov
push
aad
loopne
xchg
push
cwtl
add
or
shlb
xlat
stos
and
pop
cwtl
mov
loope
into
into
repnz
sub
jecxz
add
pop
in
incb
pop
loopne
test
jp
sub
sub
xor
dec
sbb
xchg
pop
sub
mov
sub
inc
adc
and
enter
mov
adc
nop
sub
and
xchg
adc
fistpl
sub
repnz
cltd
test
in
or
sub
and
loopne
and
and
mov
out
fwait
push
loop
inc
or
and
fsubrl
pushf
sub
fs
inc
scas
add
and
add
or
add
pop
push
loopne
in
out
mov
movsb
pop
mov
sub
add
mov
jo
dec
xor
xchg
mov
pop
movsb
dec
xchg
xchg
arpl
pop
and
or
shrb
mov
jo
push
adc
ss
data16
or
or
sti
xchg
sub
and
test
loopne
mov
stos
and
sub
shlb
sahf
sbb
sbb
sbb
mov
sub
mov
rcrb
push
jbe
fsubrs
and
js
jae
dec
add
outsb
jecxz
sub
cmp
in
sub
sbb
ret
sbb
stos
and
pop
movl
and
jns
sbb
or
xor
sub
jbe
or
push
sbb
pop
adc
push
ljmp
and
pop
test
std
jge
push
hlt
dec
fsubr
daa
mov
add
adc
in
mov
enter
dec
in
mov
and
and
lock
ret
mov
cli
aad
sbb
cmp
scas
in
and
sbb
xchg
ret
and
xchg
out
es
sbb
enter
and
and
and
in
pop
and
add
adc
cli
inc
mov
and
loopne
mov
sub
sbb
mov
adc
cwtl
mov
and
inc
or
or
or
sbb
or
lock
sbb
and
test
jae
pop
repz
pop
arpl
lods
push
dec
push
aaa
es
add
mov
pop
dec
loopne
sub
jecxz
repnz
add
lret
sbb
neg
mov
lock
arpl
cld
leave
xor
dec
add
test
and
push
mov
ljmp
jo
cs
ret
sub
mov
xlat
out
mov
sbb
aas
ret
sub
ud0
sub
pushf
and
sbbl
or
adc
sbb
sub
or
ret
and
mov
popa
mov
rcrb
sub
add
daa
sub
mov
and
lods
xchg
sub
sbb
sub
sub
mov
sub
daa
adc
dec
outsb
sub
add
sub
adc
in
or
jl
in
sub
or
fwait
loope
adc
sub
out
sbb
pop
mov
clc
add
pop
aam
and
sbb
and
sbb
sbb
cwtl
jns
or
sub
lcall
pop
push
jbe
and
adc
subl
or
mov
pop
aad
aam
cli
in
inc
or
stos
fucomi
stos
adc
and
pusha
hlt
pop
xchg
dec
or
imul
mov
jo
and
jecxz
xor
cmp
sub
ss
lcall
mov
sbb
pop
and
adc
adc
cwtl
xchg
aaa
aas
je
int
xor
cmpsl
and
push
push
sbb
and
push
popf
movsl
mov
jp
fs
cld
or
xchg
cltd
and
lock
fdiv
mov
pop
sub
jno
hlt
push
stos
cli
mov
and
pushf
sub
or
adc
ljmp
mov
sbb
sub
or
add
sbb
and
daa
cwtl
hlt
bound
ljmp
test
movsb
adc
dec
or
repnz
inc
dec
mov
or
loopne
fisubrl
sub
sub
sahf
int3
sub
xchg
es
pop
test
addb
pop
stos
loopne
sub
insl
inc
jns
imull
bound
inc
jmp
outsl
lods
sub
imul
cmp
cmp
adcb
cwtl
sub
add
cli
sub
aaa
lea
add
sub
push
jae
and
in
loopne
sub
or
adc
dec
cmc
adc
outsl
jle
jo
or
push
in
cwtl
and
arpl
mov
in
mov
xor
xchg
scas
xor
dec
testb
sti
dec
sbb
fwait
ret
and
nop
fwait
sub
add
add
daa
and
sbb
or
out
sbb
sub
out
shlb
fwait
jmp
inc
cmp
pcmpgtd
leave
sub
clc
jno
andl
jmp
hlt
and
and
sub
ror
shll
popa
nop
inc
xor
cmp
sbb
nop
bound
in
jmp
iret
add
push
or
adcb
loopnew
call
sbb
in
sbb
sub
sub
repnz
fstpl
lret
lods
cltd
cs
jo
fstpl
or
and
clc
fsub
int
test
scas
adc
or
jno
sub
mov
dec
sub
sbb
insb
xchg
or
mov
jge
or
dec
or
add
sub
decb
rclb
stos
sbb
mov
addr16
or
adc
xchg
icebp
sbb
cwtl
pop
loopne
mov
sub
test
hlt
add
and
in
sub
insl
test
sub
sbb
mov
ja
mov
dec
divl
test
in
aas
test
inc
cmpsl
leave
or
mov
or
and
push
test
inc
outsb
test
sub
lret
jnp
push
sbb
lcall
les
insl
lcall
enter
sub
sub
in
pop
fcoms
lods
aam
pop
lock
push
cli
add
adc
test
out
cwtl
and
in
sbb
outsb
mov
mov
stos
pop
pop
daa
push
js
xchg
sbb
lea
add
xchg
mov
sti
sub
outsb
loope
and
adc
jnp
loope
or
bound
pop
mov
loopne
mov
jmp
es
fstpt
and
ss
xor
sub
sbb
mov
or
and
pusha
xor
cwtl
or
aam
stos
loopne
sub
or
push
adc
and
fcmovnu
xor
addr16
mov
sub
add
repz
add
add
enter
test
adcb
cwtl
jno
sub
inc
outsl
je
lock
shlb
push
outsb
sub
mov
push
stc
sub
sbb
fisttpl
mov
cli
fcompl
sbb
loopne
sub
sub
or
mov
jo
cmpsl
sbb
add
outsb
cmpsl
and
sub
mov
cmp
add
clc
and
outsl
mov
adc
clc
fucomip
insl
jge
cwtl
adc
jbe
packuswb
jns
sub
sbb
loopne
push
scas
sub
sbb
add
out
imul
fsub
or
sub
or
out
fwait
adc
mov
and
cmc
in
cmpsl
xchg
out
out
sti
gs
xor
lahf
mov
add
and
cld
adc
sbb
out
pop
je
and
fsubrp
sbb
and
cmp
jo
and
out
and
and
xchg
adc
add
adc
testl
inc
addr16
add
dec
or
sbb
or
sub
daa
sbb
insl
and
ret
cwtl
or
or
xchg
fisttps
add
sbb
jmp
add
add
lret
mov
es
repnz
movsb
cwtl
out
loop
or
loop
sub
xorb
or
mov
mov
mov
into
repnz
out
sub
addb
or
cmp
dec
xor
insb
inc
out
sub
sbb
add
sbb
xchg
lods
adc
and
push
sbb
clc
mov
mov
adc
cwtl
xor
faddl
enter
jns
pop
adc
shlb
jle
sub
push
insb
rorl
sub
or
outsb
loopne
out
push
xchg
add
rcrb
daa
jg
jb
push
out
and
pop
out
stc
sub
add
fwait
sbb
repnz
repz
enter
and
in
pop
add
sub
and
and
stos
shll
and
cli
sbb
inc
sti
aam
and
cld
loopne
sbb
jo
lret
sub
sbb
fldl
cld
and
adcl
xchg
sbb
sub
fimuls
fwait
and
adc
pop
movsb
mov
adc
sbb
or
lret
cmp
or
es
mov
fbld
push
inc
rcrl
sub
and
icebp
xchg
adc
and
repz
mov
jl
adcb
cmp
cwtl
or
hlt
cmpsl
loopne
and
cs
sub
xchg
fucomi
inc
sub
xor
sub
xchg
mov
mov
test
xchg
push
and
or
cltd
and
sbb
push
shlb
out
or
cld
or
nop
adc
outsb
xor
repz
cli
or
and
mov
add
add
sub
ret
sub
mov
sbb
outsb
test
or
loop
sub
push
bt
sub
stc
test
cmp
pushl
jmp
jno
mov
mov
repz
gs
add
push
mov
push
cs
push
ja
pop
mulb
in
push
push
push
imul
out
jl
insl
pop
mov
or
ja
sbb
cwtl
shr
jne
or
cmp
in
sbb
sbb
jmp
push
std
das
stos
adc
in
inc
add
fcomi
es
jmp
daa
ljmp
xchg
stos
pop
inc
in
and
add
push
mov
loope
xchg
jne
out
and
clc
jp
cmc
loopne
dec
mov
adc
sbb
test
lods
xchg
out
mov
xchg
in
popa
ret
push
add
sahf
fisttpll
cmpsl
js
push
cmp
in
adc
ja
mov
jge
imul
into
shll
or
fucomi
lcall
pop
in
cmp
cmp
mov
popf
cmp
ret
dec
stos
xchg
cld
in
mov
pop
mov
cmpsl
popl
cwtl
jmp
push
test
cmp
in
in
fwait
cmc
cmp
mov
imul
out
fsubrp
push
cmp
mov
xor
mov
in
cmpsl
cs
or
in
mov
int3
loopne
push
inc
aad
add
sub
pop
cmp
hlt
xchg
push
inc
fimuls
outsb
cli
fwait
sbb
jmp
and
xor
pop
das
sub
mov
cmpsb
xchg
pop
in
imul
pop
gs
pop
loope
pop
enter
jne
repnz
fnstcw
cld
xchg
jae
in
cmp
out
jno
pop
push
imul
jo
iret
xchg
fidivrl
push
ljmp
xor
jns
sahf
in
roll
jbe
mov
and
js
shlb
sbb
inc
and
in
cmp
adc
mov
mov
test
shrb
mov
xchg
repz
cmp
test
push
mov
call
addl
cmpsb
not
sarb
mov
or
jne
xlat
pushf
aad
stos
dec
int3
dec
in
dec
cld
xchg
inc
fsubr
push
add
mov
inc
xchg
data16
pop
int
push
loopne
dec
adc
push
loope
leave
sbb
dec
add
aas
xchg
adc
xchg
adc
in
dec
out
inc
push
jno
lret
mov
repz
out
fisubl
xor
inc
pop
sbb
xor
jae
push
and
mov
push
int3
jmp
subl
ficoms
test
sti
dec
sbb
jmp
push
mov
hlt
push
mov
dec
cwtl
les
loop
sub
push
xlat
sahf
dec
imul
or
jp
fprem1
sub
in
or
stc
inc
iret
sub
hlt
inc
inc
fmulp
and
pop
in
xlat
das
jge
cli
out
push
in
or
mov
dec
add
cmpsb
scas
push
faddl
xchg
call
dec
jg
or
lea
in
nop
cmp
mov
in
jle
gs
sub
cmpsl
daa
out
idivl
or
mov
xchg
add
fs
shr
test
pop
sub
nop
ja
and
ljmp
addl
sub
test
test
or
and
cli
mov
in
int
mov
push
in
cmpsb
inc
repz
pusha
lods
sahf
es
mov
and
fwait
jle
inc
pop
adc
push
mov
push
cmc
sbb
repnz
rcrb
pusha
mov
daa
jbe
mov
pop
jns
in
cmc
les
mov
jno
sub
in
cmp
jno
pop
or
sbb
orb
adc
stos
pushf
ja
sub
enter
icebp
inc
test
ds
pusha
ss
pop
stos
in
stos
mov
dec
ds
call
xchg
repnz
mov
pop
inc
popa
aad
scas
in
inc
arpl
mov
in
orl
cmpsl
mov
in
sbb
fdivl
or
out
push
inc
adc
in
ss
je
clc
or
in
inc
inc
rorl
in
fsts
push
inc
daa
clc
jecxz
xchg
test
dec
mov
pop
pop
dec
cli
in
out
jno
repnz
mov
das
or
in
add
ds
sub
fstpl
mov
lods
cmp
dec
push
cmpsl
adc
mov
imul
shl
sbb
add
out
and
and
cld
int
addr16
in
hlt
dec
jl
mov
or
pop
mov
stos
xchg
orb
sbb
in
gs
rcll
in
and
lock
sub
imul
in
xchg
dec
push
mov
bound
xchg
fimuls
test
pop
comiss
iret
lds
sbb
cwtl
fs
adc
mov
or
in
xchg
les
pop
fildll
sbb
add
mov
outsb
push
aam
push
pop
push
stos
imul
fimuls
pop
mov
int3
sahf
ljmp
lea
es
jl
cmpsl
pushf
mov
icebp
pop
mov
mov
in
in
aam
mov
lret
sarl
in
in
mov
push
jo
out
xchg
fcompp
shrl
cmp
jecxz
or
stos
faddl
and
sub
cmpsb
mov
ret
cld
daa
cs
jmp
mov
lahf
cld
sbb
ss
cld
in
fdivr
mov
movsb
jno
ljmp
loop
push
pop
call
sti
outsb
fisttps
scas
jl
add
adc
popf
pop
in
pusha
mov
shrb
in
das
xchg
push
mov
je
dec
js
movsl
test
mov
dec
aam
inc
out
cwtl
aad
fs
mov
push
sahf
cmc
push
sub
pop
add
movsb
xor
in
push
cmc
mov
mov
in
inc
int
scas
and
dec
in
pop
cmp
adc
rcl
add
imul
popf
pusha
xor
int
sbb
push
iret
adc
in
mov
testl
and
sbb
shl
fstl
subb
sbb
or
jnp
in
int
mov
jl
and
in
cmp
add
nop
jecxz
dec
js
outsl
gs
push
adc
in
not
cmp
add
cmpsb
arpl
inc
dec
dec
inc
mov
push
pop
movsb
loope
sbb
dec
push
fsubs
call
mull
sub
or
push
icebp
in
sbb
loopne
adc
outsl
in
nop
std
out
scas
ljmp
sbb
and
mov
inc
sub
lcall
jmp
incl
call
adc
push
js
call
fwait
jecxz
and
sub
outsb
stos
mov
sbb
push
adc
adc
and
mov
cmp
repz
mov
jae
xor
repnz
jb
xor
icebp
sbb
sbb
lods
lret
sub
out
sbb
sbb
scas
lret
cs
sbb
hlt
cmp
call
sbb
jmp
stos
sbb
lret
repnz
sub
jmp
test
mov
lret
cmpsl
and
daa
out
cmpsb
sbb
lret
movsl
and
and
sbb
lret
mov
sbb
lret
mov
les
adc
and
iret
mov
lret
inc
and
add
mov
sti
lret
je
xor
test
repnz
lret
jmp
test
and
and
jecxz
mov
fsubl
les
dec
lret
add
mov
mov
or
bound
ficomps
lcall
enter
inc
and
sbb
sbb
sbb
movsb
and
ficomps
sbb
mov
lret
add
lcall
cli
les
xor
scas
imul
pop
and
sbb
sbb
or
xor
out
or
mov
xchg
movsb
xchg
and
sbb
les
insl
and
sbb
sub
lret
aad
adc
int
les
lret
hlt
and
sub
les
sbb
lret
lea
les
inc
les
xor
xor
in
in
and
fstl
ret
call
adc
loope
ljmp
lock
pushf
ret
ljmp
sbb
in
arpl
lret
sub
divl
cwtl
addl
dec
adc
movsl
inc
jl
fstpl
outsb
fstpl
mov
repnz
fdivs
mov
xchg
cmpsl
pop
in
or
fsts
push
out
shl
mov
into
int
out
dec
out
sbb
rclb
cmp
outsl
and
sbb
push
push
insb
adc
cs
dec
imul
sub
xchg
ljmp
lret
cld
adc
aam
dec
jb
xchg
daa
push
adc
pop
iret
scas
sub
rorb
adc
adc
adc
xchg
stc
xchg
mov
adc
and
adcb
es
iret
inc
andb
js
sbb
push
test
jl
sub
stos
nop
fimull
imul
dec
in
add
cltd
pop
roll
in
adc
and
cmp
sbb
push
pushf
adc
loopne
mov
push
pop
lds
cmp
imul
cmp
icebp
pop
mov
jb
popf
xchg
xor
push
pop
fwait
sub
push
sbb
push
fucomip
loop
test
inc
add
or
ret
js
dec
xchg
pushf
fwait
jge
mov
push
xchg
sbb
add
pop
rclb
cwtl
cmp
adc
stos
push
int3
iret
rclb
fdivl
add
sub
adc
and
movsl
sbb
jbe
test
push
rcrb
mov
loopne
arpl
fisttpl
sub
iret
and
fcomps
hlt
mov
fistps
push
into
test
imul
test
xchg
pop
arpl
rcrb
or
xlat
or
out
rorl
mov
add
pop
add
fcmove
jns
xchg
xchg
push
and
sub
into
pushf
pop
fcoms
fimull
add
push
in
dec
fldl
adc
pop
nop
aam
xor
cld
jl
mov
iret
test
aam
jmp
in
imul
fdivrs
push
addl
mov
pop
xlat
xchg
rcll
dec
and
sub
xchg
scas
loopne
mov
push
mov
adc
mov
aaa
sbb
mov
pushf
fcompl
cmp
rclb
sbbb
mov
mov
sahf
dec
pop
jno
stos
imul
sbbb
sbb
out
stos
cmp
push
stos
xchg
cld
ds
adc
or
out
ljmp
add
pushf
pop
ja
jmp
fisubl
notb
imul
fsubr
in
in
xor
out
pop
aaa
and
loope
loop
ja
fsubs
mov
or
cmp
push
in
and
aaa
inc
or
cwtl
mov
push
push
test
loop
add
rep
push
or
adc
xchg
ljmp
or
or
sbb
push
or
mov
insb
mov
sti
lock
xchg
and
xchg
mov
sbb
pop
call
pop
or
prefetchw
or
adc
fisubrs
cmp
fsubl
popf
inc
mov
shlb
xor
sbb
push
pop
adc
pop
fucomip
cmp
clc
in
ja
scas
pop
cmp
int
nop
out
add
sbb
sub
loop
jnp
or
and
out
sub
and
loopne
sbb
gs
pushf
jecxz
ljmp
daa
fsubrl
hlt
adc
sbb
in
es
loopne
fsub
sbb
sbb
add
hlt
mov
fcmovb
fcomps
jbe
mov
lahf
push
fisubrs
mov
das
test
and
ds
aaa
in
stc
idivb
stos
mov
repz
pop
sub
fistpl
loope
sahf
sbb
sub
lahf
mov
sub
in
fwait
xor
add
jno
push
dec
sti
fwait
pop
sahf
clc
pushf
xor
pop
xchg
rorl
scas
loopne
aas
jne
lods
xchg
pop
sub
adc
ret
mov
dec
cli
lods
jmp
push
fdivs
sub
fisttpll
pop
or
stos
cmpsl
sub
fistps
hlt
xor
sbbl
adc
sub
mov
sub
std
or
clc
sti
insb
and
sbb
mov
mov
dec
inc
sbb
in
inc
fisubl
aad
pop
hlt
inc
sub
jb
jne
enter
or
add
mov
adc
out
and
outsl
and
and
jno
pop
add
sub
test
add
xchg
xor
rol
pop
aas
repnz
out
xchg
lret
and
pop
movsb
sbb
pusha
sub
sbb
pop
or
insb
test
sbb
cmp
testb
mov
inc
ret
inc
lock
or
ficoml
aad
and
shrb
add
pop
sbb
js
add
lods
pop
incl
pop
cmp
dec
dec
call
hlt
in
dec
and
mov
cwtl
xor
sub
sbb
or
scas
push
lods
push
xchg
cwtl
call
adc
popa
loopne
mov
pop
jmp
lret
and
out
pop
or
call
or
hlt
std
sarl
rorb
push
dec
mov
scas
popa
pop
mov
and
and
lods
jecxz
push
aas
sub
add
outsb
addr16
in
mov
sbb
pop
cmp
adc
enter
ret
shlb
mov
dec
add
inc
and
scas
arpl
and
pop
out
jne
enter
ret
cld
cwtl
iret
int3
or
push
xchg
sbb
lods
dec
sub
and
push
shl
add
push
pop
push
jb
lods
mov
push
mov
pop
insl
inc
idiv
mov
call
addb
cmpsl
mov
cmp
xor
pop
popa
push
jp
and
jl
ljmp
sbb
loop
and
inc
push
je
cli
pop
sub
mov
mov
mov
movsb
xor
adc
ds
sbb
jbe
inc
mov
popa
sub
lret
adc
jo
xor
into
fwait
xchg
sub
test
add
mov
insb
psubd
das
mov
adc
push
repz
incl
out
call
or
or
jmp
and
jmp
add
ljmp
ljmp
push
loop
add
or
cld
push
iret
out
shr
mov
fistpl
inc
fimull
xor
inc
pop
add
fs
sub
cmovb
xor
push
ficoml
mov
dec
icebp
xchg
cld
iret
sub
cltd
sub
out
fldt
pop
sub
fdivr
sub
xlat
jae
cmp
dec
repnz
ficoml
inc
dec
sub
and
and
cld
or
and
sub
test
xchg
aad
inc
mov
enter
stos
sub
push
dec
fcompl
lock
int3
fstpt
pop
sub
cld
gs
jb
cs
ljmp
pop
cmpsb
cmpsl
call
loopne
lock
sahf
pop
push
fcmovnu
loopne
ficomps
pushf
sbb
jp
sbb
pop
clc
jmp
sub
dec
xor
mov
cmp
rcrb
inc
std
xchg
push
popf
add
inc
stos
pop
test
fistpl
lahf
imul
mull
cwtl
pop
xor
ljmp
ficoms
fistpl
ret
sbb
rorl
jp
out
clc
fsubr
sbb
push
sbb
pop
mov
fldcw
cs
adc
in
xor
cmp
mov
ja
call
and
xor
repz
pop
xor
mov
jns
loopne
mov
push
add
fadd
sub
mov
pop
and
movsl
mov
fldl
mov
jle
in
clc
jne
sti
cmp
mov
out
mov
cmp
jle,pn
sti
jnp
fdivl
cmp
fcomps
js
xchg
fwait
inc
das
sbb
adc
sbb
mov
addr16
cmp
jno
sbb
or
and
cs
mov
or
test
xchg
mov
xor
test
ds
or
dec
sub
mov
fisubrs
es
fistps
mov
add
pushf
fistpll
sti
inc
jp
mov
jnp,pt
in
adc
mov
clc
sarb
icebp
jp
and
aas
add
hlt
adc
or
adc
mov
loopne
cmc
push
push
dec
rcrl
adc
mov
pop
push
ficompl
sub
outsl
lcall
add
cmp
cmp
sub
sbb
adc
fistpll
mov
and
cmp
cmp
jl
or
mov
and
or
ss
jne
cmp
cld
mov
sub
loopne
push
and
push
and
inc
sbb
pop
sub
test
js
stos
cmp
xor
jbe
jae
jl
aaa
das
cld
hlt
mov
inc
aas
jmp
mov
mov
ljmp
cmp
clc
imull
loopne
movsb
mov
jo
sahf
push
xchg
or
lock
adc
pop
pushf
pop
cld
inc
cmp
pop
mov
pop
inc
push
cmp
xor
rcl
fcos
and
fs
dec
into
insl
iret
dec
and
and
nop
pop
dec
inc
mov
test
fcompl
stos
inc
bound
sub
pushf
inc
jp
movsb
push
cmpl
rorb
js
and
jp
dec
iret
rolb
lcall
or
inc
cld
aaa
add
jae
mov
adc
dec
icebp
push
xchg
adc
stos
daa
adc
ja
in
mov
mov
mov
push
jo
imul
cmp
std
jg
movsl
jmp
mov
jle
fscale
aaa
sub
add
sti
gs
cmc
je
movsl
aas
cmp
and
std
insl
stos
call
cmp
movb
mov
xorb
repnz
push
aaa
cmpb
jns
in
ss
jne
add
mov
clc
jo
push
outsb
adc
mov
add
in
jle
sub
rclb
sub
rolb
jg
mov
jbe
fimuls
cmp
ja
test
outsl
cli
fidivrs
adc
mov
mov
pushf
cli
lods
or
sbbb
in
cli
mov
pop
mov
dec
sub
cmp
int3
out
jg
lcall
cmp
mov
sti
or
or
sub
adc
andl
scas
sbb
clc
and
xchg
lcall
and
cwtl
and
test
cs
stc
sbb
sub
je
fstps
sub
dec
mov
js
mov
cli
fs
sub
xor
mov
divl
jmp
mov
jmp
js
insb
lock
xchg
cwtl
mov
aam
mov
push
lret
out
sub
add
loope
cmp
adc
daa
sbb
aaa
push
inc
das
sbb
mov
jge
inc
clc
mov
mov
cld
cmp
test
mov
cmpb
loopne
filds
je
cmp
rolb
jb
ja
test
mov
dec
adc
mov
jmp
out
mov
and
test
mov
mov
fnstsw
mov
stos
cmp
movsb
out
fisubs
add
jl
or
gs
clc
cmpl
or
out
andb
mov
adc
aas
jecxz
and
mov
dec
and
push
pushf
xchg
cmp
jne
jne
push
and
repz
adc
mov
aam
cmpsb
ds
dec
out
xchg
fldt
jge
and
jle
push
scas
mov
nop
movsw
xchg
popf
and
jnp
and
lods
pushf
add
adc
dec
aas
cmp
jge
mov
sahf
popa
adc
iret
mov
insl
mov
out
adc
and
mov
sbb
and
in
mov
and
and
fstp
mov
mov
push
jp
outsl
sahf
dec
mov
push
pop
rcl
movsl
sbb
pop
loop
fs
hlt
int
loop
fisubrl
cmp
xchg
or
or
jns
out
popf
pusha
adc
rclb
rcrl
nop
or
sbb
fucomp
mov
and
mov
mov
xchg
adc
repnz
push
cwtl
lret
xchg
cwtl
faddl
lahf
and
xchg
cmp
pop
cmp
cmpsb
cwtl
das
das
jge
fwait
pushf
fsubrl
fstpt
cltd
adc
sbb
nop
cmc
movups
jo
leave
xchg
push
out
cmp
js
lahf
push
dec
loope
cwtl
cmpsl
cmp
or
jns
jnp
aas
cld
mov
ljmp
mov
shrb
xchg
cwtl
mov
sbb
out
jp
jg
push
aam
adc
or
shl
and
add
sub
sbb
sarl
loop
jbe
push
test
sbb
cmp
ljmp
push
test
xor
cmp
mov
dec
stos
imul
and
mov
sbb
xor
and
outsb
xchg
or
idiv
sbb
hlt
lcall
push
ljmp
stos
fimuls
lods
push
aas
fisttpll
sub
ljmp
add
sbb
sbb
xchg
sub
and
or
or
jnp
ret
sbb
push
lret
cmp
enter
lret
mov
and
leave
sbb
adc
ljmp
inc
enter
call
test
fildl
mov
sbb
add
pop
add
in
jo
mov
ljmp
mov
test
imull
mov
jne
and
hlt
sub
cmp
and
vmovaps
jae
adc
xor
xor
sbb
iret
scas
jb
xor
inc
or
or
sti
jp
pop
call
jmp
les
js
pop
sub
xchg
sbb
sbbb
pop
ret
out
jb
and
push
lock
push
hlt
dec
push
and
das
mov
dec
cmp
test
cmc
push
mov
ficompl
cltd
pop
sbb
xchg
push
call
pop
xchg
sbb
inc
sbb
push
cmp
ja
popa
scas
sbb
cmp
in
xor
cmp
call
in
xorl
lods
enter
out
je
movsb
shrl
xchg
push
sub
test
add
cmpsb
or
mov
out
ss
ljmp
stos
inc
jne
cmpsl
pushf
mov
sub
and
mov
in
and
and
negb
or
aaa
test
mov
subl
inc
in
mov
sbb
insb
add
sbb
lcall
sub
mov
lret
xor
negl
mov
ja
aaa
sbb
mov
jbe
ss
sbb
sbb
mov
jo
xor
repz
sbb
mov
jb
xor
icebp
sbb
sbb
lods
lret
sub
out
sbb
sbb
scas
lret
cs
sbb
hlt
enter
les
sub
jmp
lret
sub
ljmp
sbb
test
and
sbb
out
and
daa
out
cmpsb
sbb
lret
movsl
and
and
adc
or
cli
ljmp
sub
sbb
movsb
xchg
and
xlat
mov
lret
xchg
and
push
aad
xchg
sbb
sbb
loop
sub
sub
inc
or
enter
mov
loope
into
pop
call
or
mov
pop
je
sbb
nop
aam
mov
test
adc
inc
sbb
sub
and
mov
mov
sub
lea
lcall
sbb
sti
or
adc
fcoms
mov
arpl
divb
jb
or
push
or
dec
or
or
in
aam
into
or
sub
sbb
sub
lea
or
cli
dec
sub
sub
iret
lret
sub
mov
inc
sub
out
dec
enter
dec
call
inc
call
sub
dec
sub
mov
and
fildl
push
test
mov
test
sbb
sub
sub
sub
lcall
mov
dec
or
ss
sub
sub
in
out
jl
jmp
or
jnp
sub
mov
ds
mov
cmp
mov
or
sub
js
idivl
sub
sub
jnp
inc
sub
mov
sbb
mov
loopne
sub
stc
daa
ljmp
shl
cmp
test
mov
jb
dec
je
sbb
sub
imul
and
fsubr
and
sbb
jbe
test
sub
sub
dec
pop
les
sub
jo
jg
loop
aam
stos
pop
and
or
scas
cmpsb
mov
sub
jnp
sub
jnp
jecxz
cwtl
out
ljmp
cmpsb
call
add
lods
add
in
jg
jae
xor
jge
out
sti
sbb
xchg
cmp
cli
mov
les
das
mov
in
incb
lock
dec
dec
jo
or
cmp
jae
push
xchg
jge
roll
xchg
addl
mov
mov
stc
addb
mov
cmp
in
xor
jne
icebp
sbb
in
rclb
sarb
xor
imul
das
jo
lods
cmc
aaa
out
in
push
xchg
rorl
mov
hlt
jne
dec
mov
sahf
dec
je
mov
lret
leave
or
cmp
xor
mov
mov
es
daa
cs
sub
int
dec
adc
jl
sub
das
jns
cs
in
out
sub
rclb
mov
insl
stc
mov
mov
insb
mov
lock
insl
movsl
aaa
insl
idivb
cli
call
clc
mov
imul
or
pop
cmp
je
cmp
in
hlt
repz
jae
cmp
lds
les
dec
insl
xchg
add
xor
in
into
lret
in
scas
cmp
mov
sti
jae
into
ss
push
mov
hlt
dec
jbe
xchg
xchg
adc
test
repnz
icebp
mov
jae
das
xor
cmp
adc
inc
ret
repnz
xor
inc
hlt
dec
testb
repz
clc
adc
mov
jns
dec
jnp
leave
cmp
cmpsb
lock
mul
dec
pop
stos
push
fmull
mov
inc
or
dec
pop
lret
into
dec
adc
adc
stos
std
aas
xor
and
mov
scas
fsubrp
or
fimull
stos
sbb
clc
cmp
mov
push
xor
repz
in
loope
and
mov
sti
das
or
dec
cmp
cmp
imul
addb
int
stc
mov
insl
mov
lock
and
imul
xchg
dec
pop
inc
lret
dec
adc
in
or
scas
xchg
mov
shl
add
ljmp
cld
mov
in
mov
adc
jo
jno
xor
stc
xor
adc
call
add
mov
pushf
push
cmpb
dec
cli
dec
testb
cmp
cmp
mov
stos
je
mov
inc
js
pop
aaa
push
popf
add
stos
lds
mov
test
enter
stos
dec
mov
cmc
ds
outsl
lods
outsb
sbb
ja
jmp
les
insl
jo
in
jae
pop
xor
lods
cmp
movsl
int3
cmc
out
jne
test
cli
das
dec
sub
or
test
sbb
scas
sub
pop
cmp
mov
or
cs
outsb
dec
in
lret
scas
lret
mov
cld
in
bswap
ds
inc
nop
xchg
pop
dec
aad
or
mov
sub
std
add
pop
push
sbb
xlat
mov
mov
in
mov
insb
divl
int
cld
add
in
add
jo
or
iret
mov
mov
sarb
in
lds
push
aaa
pop
lret
inc
xor
test
cmpsl
rorb
xchg
in
xor
scas
in
sahf
lods
out
fld1
lds
sbb
stc
fwait
xchg
cmc
jne
test
lock
push
stos
dec
adc
es
cmc
mov
insb
jo
imul
or
jno
jns
cli
std
in
jne
int3
repnz
insl
cld
mov
call
outsl
mov
ret
xchg
scas
test
sub
nop
xor
iret
jnp
adc
fldt
push
xchg
dec
push
push
cld
push
push
dec
xchg
push
leave
in
or
rolb
inc
sub
incl
fldlg2
pop
test
mov
ret
in
aaa
div
ja
xor
xchg
adcl
mov
mov
paddsb
int
dec
stos
push
jnp
dec
js
gs
dec
xor
or
mov
stos
clc
and
xchg
cltd
xor
xor
mov
mov
mov
cld
jnp
stos
sbb
test
and
lock
in
mov
and
sub
repnz
insl
clc
fdivs
mov
imul
outsb
les
mov
js
or
push
hlt
call
jl
sti
xor
es
jns
cmp
inc
in
inc
jne
dec
mov
pop
push
or
xchg
aas
push
sub
ficoml
lret
sub
mov
push
pop
push
cmp
clc
mov
or
in
leave
dec
add
mov
imul
nop
in
ret
mov
jo
cmc
dec
imul
add
js
sbb
inc
leave
pop
push
dec
fimuls
inc
or
or
enter
jnp
dec
cmp
or
add
ljmp
repz
hlt
idivb
icebp
dec
mov
fmull
mulb
sub
sbb
pop
in
push
push
add
lcall
lock
enter
jns
outsl
mov
lock
divb
in
mov
outsl
or
repz
pop
push
add
xorl
mov
push
adc
dec
pop
sti
stos
xchg
lea
decb
nop
rorb
push
pop
rol
or
inc
dec
mov
or
roll
xchg
aas
add
addb
adc
in
xchg
sbb
push
imul
mov
scas
das
jle
jb
jo
in
pop
sbb
dec
mov
add
repnz
mov
les
mov
enter
clc
outsl
jp
mov
or
clc
or
push
add
mov
and
cld
push
lret
cltd
push
cmp
test
jno
scas
insl
sbb
bnd
repz
shll
mov
mov
xor
je
mov
pop
xor
sbb
in
ret
xchg
add
add
or
repz
hlt
in
adcb
push
test
lea
push
or
adc
xchg
mov
into
and
or
add
jl
test
jns
and
ret
cmp
cmp
mov
out
mov
add
sub
cwtl
jl
push
leave
sbb
xor
ret
mov
dec
in
out
xor
repnz
flds
dec
and
add
addb
mov
testl
into
mov
scas
sub
lret
cmp
or
cmp
sub
jo
jbe
ret
leave
cmp
xor
mov
cmc
mov
out
jge
scas
addb
add
sbb
cmp
pop
aam
repz
movsb
jo
jbe
jbe
scas
addr16
das
imul
cmp
jnp
int3
push
add
push
test
dec
and
mov
lock
xchg
mov
dec
push
xchg
or
push
cmp
int
adc
inc
dec
lret
mov
movl
lds
xchg
add
cmp
fidivs
or
js
das
aad
in
clc
cli
hlt
xchg
pop
add
xchg
push
inc
sbb
in
testl
inc
sub
outsb
sahf
mov
enter
rclb
stos
add
movsb
or
dec
movsb
jb
adc
ret
inc
stos
sub
cmc
daa
call
add
idivb
cli
test
sub
scas
out
mov
shrb
movups
adc
lea
es
xor
jb
cs
xor
mov
jnp
sti
inc
dec
jo
in
push
adc
aad
sub
dec
mov
xor
mov
aam
cmpsl
push
shrl
dec
enter
dec
hlt
mov
xchg
rolb
roll
jle
cmp
lock
push
subb
js
cmp
out
sbb
mov
mov
inc
decb
xchg
adc
push
or
jg
pop
in
test
or
in
push
mov
sbb
fimuls
int3
or
push
mov
ret
add
enter
mov
lock
push
add
xchg
mov
xor
or
jb
andb
inc
test
out
sbb
mov
xchg
add
sti
or
push
ss
sub
aaa
lods
cli
in
jp
cmp
mov
paddsb
or
nop
dec
stos
lret
adc
les
inc
in
leave
dec
mov
adc
lcall
sbb
inc
cmpb
jns
pushl
jns
mov
mov
xor
sub
in
lock
inc
mov
in
push
shrb
cmp
lret
mov
dec
inc
repz
lods
adc
cmp
adc
nop
in
push
vcvtps2dq
fstps
sbb
cld
pop
pushf
int
pop
lahf
adc
notb
lret
dec
mov
js
add
push
mov
xor
mov
test
lcall
ss
ja
jnp
inc
inc
mov
lret
sbb
lods
jmp
mov
out
ret
cltd
or
jmp
xchg
shrb
popa
nop
sub
xchg
dec
cli
push
popf
dec
push
call
mov
mov
inc
in
xchg
mov
mov
in
add
jl
push
jle
rcll
add
ja
lcall
mov
sbb
xor
and
imul
jno
scas
jns
repz
shl
in
sub
int
fs
iret
add
sub
or
aas
add
sub
cltd
je
mov
mov
js
popf
dec
lea
fildl
xchg
adc
cmp
sbb
and
lcall
aad
add
fs
je
nop
cld
lcall
mov
aad
movsl
push
mov
popf
jne
mov
mov
cmp
leave
ja
mov
insb
cmp
sarb
push
add
add
imul
nop
notl
sbb
mov
es
dec
or
dec
dec
decb
or
leave
or
inc
inc
jle
xchg
cld
mov
int
mov
add
push
push
imul
mov
outsl
and
lods
lods
xor
xor
std
in
jg
inc
xorl
mov
push
shr
fmul
js
push
leave
and
mov
mov
in
dec
mov
aaa
into
xchg
pop
cmc
popf
divl
jp
test
sbb
push
xchg
pop
add
or
mov
andl
push
loopne
fstp
psubw
cmpsl
pop
pop
leave
test
jp
xchg
or
stos
dec
jg
out
xor
sbb
in
repz
movb
jns
cmp
cmp
xorb
xchg
outsl
xchg
or
pop
leave
call
xchg
adc
sub
mov
lds
add
clc
cmp
mov
inc
icebp
cmp
cmp
shl
lock
ljmp
hlt
push
aam
or
push
cli
pop
or
int3
std
sbb
repz
add
ret
inc
call
insb
test
xor
mov
sbb
into
call
dec
test
sub
cmp
mov
add
out
lods
gs
in
scas
xor
das
xchg
sub
popf
sti
or
cwtl
lcall
pop
add
shll
push
add
sbb
fisttpll
mov
stos
and
push
pop
and
leave
push
mov
mov
aam
scas
jbe
mov
test
cmp
repnz
or
imul
or
mov
mov
sbb
sbb
call
shlb
idivb
mov
out
in
jne
inc
std
inc
sar
xor
push
idiv
cli
xor
jo
insb
lret
stc
out
cmp
mov
sar
push
cmp
push
in
jge
sbb
pop
in
cmp
rolb
mov
divps
dec
imul
dec
xor
dec
xor
or
cmp
out
shll
push
add
outsb
clc
fidivs
aaa
sub
data16
insl
stos
push
movsb
sub
mov
cld
ds
or
push
fstps
hlt
and
mov
sbb
and
loop
aam
sbb
dec
pop
in
mov
cwtl
and
int3
xchg
popf
lret
aas
dec
add
stc
mov
enter
mov
xor
scas
gs
mov
ret
ds
cmp
mov
mov
push
push
sub
mov
fnstcw
sarb
lock
in
hlt
cld
jle
stc
in
cmp
divb
jo
xor
out
dec
scas
xor
xor
lods
xor
test
test
push
in
push
mov
push
test
bound
test
call
or
and
sbb
jl
in
mov
outsb
sbb
ret
repz
jo
mov
mov
jmp
xor
cmp
mov
lcall
xchg
std
dec
push
aaa
nop
push
cld
push
fxtract
add
push
cltd
call
aam
dec
in
fmull
sbb
dec
adc
cli
cmc
lds
jp
clc
idivl
in
icebp
in
xor
addb
ret
add
lock
and
sub
xchg
jge
mov
adc
pop
inc
pop
sbb
into
in
mov
int
fildll
stos
in
or
mov
jo
imul
jp
mov
push
in
mov
mov
aaa
ret
in
mov
cli
push
adc
sbb
dec
xchg
call
outsl
lret
iret
push
mov
push
inc
dec
lea
or
out
insb
in
add
mov
aaa
lock
mov
xor
xchg
add
sbb
inc
mov
jbe
insb
and
scas
push
insl
test
test
nop
adc
inc
hlt
rolb
cltd
mov
push
std
pop
sti
test
shrb
adcb
push
cld
test
js
pop
or
fisttps
in
bound
mov
dec
push
pop
leave
mov
js
mov
jno
repnz
in
jno
mov
add
mov
daa
inc
insl
ret
stos
inc
push
ljmp
cld
je
inc
or
cmpsb
adc
stos
sbb
pop
push
orb
lea
je
xor
pop
cmc
idivl
dec
out
mov
out
or
es
mov
fnsave
leave
call
adc
sbb
or
fs
cld
jo
dec
gs
pop
cmp
jl
sbb
aad
adc
cmp
out
js
outsb
divl
mov
lock
ss
bnd
jbe
nop
aas
adc
push
pop
xor
cld
cltd
push
dec
sbb
mov
nop
mov
icebp
sub
jle
mov
aas
clc
jge
lret
lret
test
push
pop
rcrl
sub
mov
and
pop
pusha
setnp
dec
adc
and
xchg
in
incb
sti
mov
lcall
mov
cmp
mov
adc
cmp
pop
mov
dec
xor
jne
imul
cmp
cmc
or
out
adc
in
outsb
rolb
enter
xchg
cli
mov
rcll
in
aam
add
in
enter
adc
sbbl
mov
or
out
rcll
lds
inc
xor
xor
add
jge
mov
cmp
lock
jge
stos
andb
inc
insl
out
jns
cs
lret
or
inc
and
push
xchg
aas
rcl
imul
ret
adc
cli
scas
imul
lret
pop
jno
dec
nop
rclb
pop
cmp
add
cltd
arpl
sub
adc
xchg
mov
or
test
jb
xchg
push
mov
js
xor
xchg
adc
cltd
push
adc
xor
in
or
lods
fsubrl
ss
repz
cwtl
movl
testb
lock
mov
in
outsl
test
lds
stc
mov
cmp
fwait
inc
in
repz
pop
fisttpll
faddp
lock
mov
push
push
in
rorl
or
push
in
xchg
ret
jno
ss
fbstp
je
inc
scas
xchg
lock
jb
add
jbe
jb
daa
aaa
push
out
fidivl
pop
xorl
adc
fdiv
shll
ret
xchg
push
js
sbb
cmpl
aas
pop
or
jno
adc
push
lcall
fadd
pop
es
or
lret
adc
add
cmp
icebp
add
ret
sub
shr
popf
cli
cld
addr16
sti
ljmp
inc
cltd
adc
jno
cmp
shlb
xor
imul
repnz
mov
xor
cld
inc
xorl
in
or
lcall
fildl
hlt
neg
add
in
dec
pop
fists
sahf
mov
into
xor
cld
cmp
xor
cmp
jg
out
xlat
outsb
jne
repz
aaa
add
sbb
gs
outsb
ss
cmc
sub
xor
mov
or
jb
ds
adc
sti
in
xor
cltd
pop
adcb
add
nop
js
sbb
je
or
in
mov
dec
jae
dec
lods
mov
aas
cld
mov
xchg
mov
xlat
in
mov
pop
xchg
fisttps
push
test
jecxz
cld
cmp
inc
jo
add
mov
add
sub
ja
repz
add
cmp
test
xchg
jg
fdivs
and
negb
mov
mov
imul
cmp
pop
in
test
in
sbb
fstps
mov
pop
or
pop
dec
dec
dec
jb
adc
in
push
xchg
repz
inc
jns
ljmp
jb
ret
scas
or
js
inc
inc
jg
ss
aas
out
jno
es
jnp
mov
jle
push
loopne
add
jp
cltd
jl
xor
and
or
mov
imul
or
or
dec
negl
or
push
loope
push
fdivl
sbb
call
xchg
jg
mov
adc
sub
push
jg
repz
std
in
mov
fwait
mov
xor
push
jne
mov
call
jnp
inc
and
cmp
aaa
and
dec
add
inc
or
pop
jle
ficomps
add
pop
or
loopne
pop
sbb
or
dec
pop
sbb
push
pop
or
ret
mov
and
loopne
cwtl
xor
sub
pop
lock
jl
add
scas
push
mov
outsb
insb
push
mov
in
js
aas
push
push
cmp
rclb
mov
jmp
push
xchg
decb
popf
jns
or
int
jbe
adc
mov
lret
jo
int3
dec
in
scas
xchg
dec
adc
xlat
bound
pushf
sbb
sarb
js
cs
lock
lds
divb
xor
js
repz
sbb
mov
cmp
in
jns
js
add
out
ljmp
mov
stc
jp
mov
xor
scas
push
and
aam
test
or
mov
repnz
insb
sahf
sub
mov
in
sbb
mov
push
adc
inc
movb
xor
inc
xchg
xchg
int
mov
lock
mov
push
lea
stos
mov
jbe
rcll
imul
pop
mov
aaa
clc
fsubrl
div
and
sbb
jnp
scas
push
and
xor
inc
push
add
rorl
fwait
pop
add
repnz
push
cmpsl
aad
leave
stos
mov
mov
add
rolb
outsb
mov
stc
sbb
lret
pop
inc
push
clc
mov
dec
adc
xchg
mov
mov
clc
in
mov
inc
or
sbb
jmp
jge
aam
lret
sbb
jbe
cmp
jne
xorb
cli
add
in
jg
test
arpl
dec
mov
ljmp
mov
pop
push
mov
mov
pop
leave
dec
sbb
inc
cli
ja
cmp
cld
jle
push
roll
add
xor
mov
ret
loopne
in
in
jge
xor
rclb
xchg
inc
js
imul
imull
nop
sbbl
cwtl
xchg
adc
mov
sbb
push
jmp
push
add
add
sbb
cli
lods
xchg
add
dec
jae
mov
out
mov
out
dec
int
fisubl
mov
jecxz
popf
loopne
cltd
icebp
int
adc
stos
adc
lock
push
clc
sub
sub
cmp
dec
imul
int
sub
xor
pop
add
test
or
jo
insl
lcall
ljmp
or
dec
mov
inc
jae
test
scas
xchg
push
jg
sbb
int3
fiadds
jp
pop
mov
mov
xchg
add
cmp
jne
iret
xchg
outsb
adc
push
cli
enter
je,pn
push
movsl
fdivrs
sbb
out
incb
js
push
adc
stos
gs
mov
cs
and
jne
adc
in
das
push
sarl
scas
push
in
sbb
fiaddl
adc
adc
aad
cld
sbb
dec
shr
xchg
mov
lock
dec
lret
in
sub
xchg
mov
negb
adc
rorl
adc
loop
push
in
sbb
add
in
inc
mov
stos
insl
lock
mov
cwtl
js
test
jns
int
cs
insb
sbb
ret
sub
pushf
xchg
cli
out
in
aad
add
inc
aaa
jg
in
xor
inc
fildl
mov
dec
imul
add
sbb
sahf
outsb
iret
out
xchg
push
cmpb
cli
int
pop
pop
dec
jecxz
cmc
in
loopne
test
scas
push
inc
xor
in
mov
sarb
pop
cwtl
inc
cmc
jg
out
cmp
outsb
arpl
ja
in
dec
mov
outsl
push
xchg
ljmp
mov
nop
pop
and
xchg
lock
push
adc
lcall
leave
or
fcoml
xchg
inc
xchg
adc
mov
psubsb
mov
int
subl
mov
xor
dec
incb
mov
int3
cmp
in
mov
aas
sahf
pop
les
divb
cmp
lock
repz
jae
xchg
enter
cmpsl
jg
mov
and
in
sbb
pop
pop
mov
pop
into
imul
cmp
dec
in
mov
pop
loope
jmp
pop
cmp
std
sub
outsl
popa
out
mov
cld
test
clc
rcll
cmp
jg
iret
dec
cmp
mov
sub
xor
ja
cs
xor
outsb
testl
cmp
jmp
xchg
cmp
cmp
aad
aas
and
movb
imul
push
adc
add
rcl
imul
cwtl
dec
or
inc
adc
inc
push
cmp
jp
sbb
out
insl
or
cmc
leave
or
inc
cmpsl
test
sbb
and
jle,pn
in
je
in
jl
icebp
cmp
jns
jnp
push
add
sti
pop
add
and
je
xor
mov
gs
sbb
xchg
add
sbb
or
xor
add
adc
push
cltd
push
inc
shll
fiaddl
mov
or
dec
std
sbb
call
je
in
ljmp
out
divl
push
test
jmp
push
or
in
mov
outsb
inc
inc
imul
push
in
mov
js
jmp
divl
jnp
xchg
inc
cmp
imul
stc
mov
mov
in
xchg
push
jle
push
shrb
or
in
rcr
mov
dec
xor
cmp
lods
mov
je
lea
subb
lds
xor
lea
jge
stos
addl
cld
inc
sub
in
scas
mov
mov
xchg
ret
xor
or
sbbl
xchg
clc
jne
enter
jp
mov
lods
jns
sub
sarl
in
dec
clc
push
cmp
adc
jg
xchg
imul
or
and
pop
pop
push
fcomp
lret
lock
rolb
and
ds
bnd
movsb
cmpl
rcll
cld
or
fwait
xchg
add
mov
icebp
adc
pop
dec
adc
and
daa
mov
in
outsl
lds
adc
cmp
sbb
push
sar
cmp
mov
test
cld
mov
les
mov
adc
sarb
inc
out
mov
dec
stc
and
sti
push
aad
inc
lock
imul
jno
add
jo
jmp
push
add
in
mov
xchg
and
js
ja
idivl
jae
xor
cld
lods
mov
adc
in
inc
lcall
mov
aam
push
pop
lcall
sbb
inc
fldt
or
add
dec
in
or
mov
mov
dec
imul
and
cmp
in
fcmove
push
push
add
test
inc
aaa
js
hlt
stc
imul
jge
or
in
add
xchg
sbb
in
add
add
jb
push
test
cld
pop
std
sbb
mov
aas
mov
dec
lods
fwait
adc
stc
movl
add
lcall
lret
mov
lret
dec
push
leave
dec
cmp
mov
sub
orb
test
iret
in
add
fmuls
negl
add
and
cmp
jl
mov
jmp
mov
inc
loop
in
dec
and
xchg
in
inc
lcall
in
mov
adc
pop
sbb
add
or
xorl
mov
lea
or
ljmp
nop
es
clc
pop
scas
add
ret
or
sub
cltd
xlat
xchg
stc
mov
addr16
in
rcrl
in
int
pusha
aas
xchg
sub
xor
test
aad
pop
lret
in
adc
lock
pop
add
xchg
cmp
cld
aad
cmp
popf
or
xor
and
push
dec
in
adc
dec
push
shlb
div
in
mov
lfs
mov
rolb
xchg
sub
lods
add
in
in
add
push
inc
mov
shrl
dec
mov
paddw
cwtl
pop
enter
rcl
mov
push
xlat
mov
movsb
in
cmp
jp
cmp
mov
cs
in
les
lds
enter
mov
popf
fstl
std
in
cltd
fcmovnb
pop
fistps
dec
adc
in
xchg
divb
scas
mov
push
cs
ljmp
xchg
stos
adcb
mov
push
dec
test
cltd
add
mov
aad
sub
in
in
push
pop
inc
leave
ret
dec
in
or
into
xchg
je
lret
sbb
in
pop
fiaddl
adc
js
push
push
popf
push
dec
and
ret
in
shll
mov
fsubr
xchg
sbb
into
push
std
in
lret
test
dec
or
fdivrl
mov
push
and
in
add
pop
or
loop
or
shrd
push
in
test
stc
je
mov
xor
cmp
lods
cwtl
mov
mov
mov
pop
into
xchg
xor
stc
fcoms
pop
sub
fdivrp
rorl
adc
mov
sti
push
shrb
insb
cli
ss
shr
lcall
add
xchg
jge
aam
fcomps
and
sbb
enter
inc
xor
ficoml
sahf
call
rcrb
lock
push
xchg
adc
jecxz
or
in
int3
jne
mov
pop
add
pop
imul
xor
clc
sbb
test
jg
lcall
pop
push
lea
ss
not
push
in
jl
mov
mov
jecxz
out
or
inc
cld
cli
inc
lock
in
inc
negl
aaa
sahf
dec
cmp
fists
inc
pop
pop
pop
fimuls
jecxz
or
clc
adc
jp
jmp
jle
mov
dec
cmc
pop
mov
in
jle
scas
adc
jae
sbb
add
sahf
mov
pop
scas
in
adc
fildl
push
sarb
adc
mov
je
pop
mov
or
mov
mov
dec
add
mov
lods
clc
sbb
test
sahf
fimuls
nop
inc
in
jp
inc
jmp
mov
in
pop
push
sbb
test
popf
ljmp
lea
inc
push
xchg
jp
adc
js
outsl
hlt
in
sbb
fisttps
aad
or
jno
push
cltd
add
orb
mov
leave
mov
lds
fucomi
dec
push
mov
into
notb
in
sti
les
jb
rcrb
jmp
jbe
sbb
mov
sahf
sti
sbb
leave
in
rcll
fstpl
pop
or
sarb
push
xchg
lock
xor
ja
in
fidivrs
jno
xchg
pop
add
add
out
or
pop
lds
in
aaa
int3
mov
push
jp
int
icebp
push
test
ret
je
or
fiadds
inc
xor
rcrb
lcall
lcall
dec
sarl
in
inc
jl
push
bswap
pop
fucomip
and
fwait
cmpsl
adc
xchg
pusha
sbb
movsl
dec
mov
lret
dec
or
cmc
popf
sahf
push
fmull
mov
push
lcall
pop
ret
or
test
inc
test
and
leave
lds
call
scas
adc
mov
inc
push
and
test
les
mov
fwait
mov
mov
lds
xchg
xchg
add
mov
hlt
call
push
sbb
in
cmp
divb
cltd
xchg
mov
xor
dec
pop
imul
das
push
adc
std
inc
xor
subb
lea
dec
xor
iret
test
cld
data16
test
and
testl
adc
adc
nop
push
aas
pop
push
lret
out
jg
sti
scas
cmpb
jbe
xor
hlt
push
adc
pop
pushf
fsts
outsl
imul
mov
pop
jmp
xchg
ja
jmp
inc
xchg
stc
or
in
inc
pop
pop
mov
lss
sbb
fiaddl
or
jne
add
mov
mov
lret
or
inc
lock
roll
and
movsb
mov
jp
mov
in
das
xchg
dec
cli
pop
movd
aas
dec
les
or
or
or
enter
movsb
and
push
jle
sub
sub
jo
or
and
adc
sub
das
or
lods
cld
ret
int
dec
mov
xor
jo
clc
xor
cmp
fistps
and
cli
in
mov
add
insb
or
xchg
inc
enter
push
xchg
lcall
lock
in
in
aaa
lods
scas
into
dec
inc
sti
in
divl
xor
mov
ret
in
and
popa
loop
cwtl
pop
imul
sub
push
in
xchg
xchg
lds
aam
in
rcr
lret
sbb
or
jno
jo
in
mov
mov
lcall
jns
pop
in
push
orb
call
xor
add
cmp
inc
test
push
sub
in
fs
xchg
in
inc
pop
dec
ror
cmp
inc
add
pop
mov
into
pop
and
rolb
in
adc
ja
std
inc
mov
aaa
mov
repz
mov
orb
ret
mov
jg
ret
lock
lret
dec
cmp
or
int
inc
repnz
xchg
imul
bswap
or
imul
push
push
in
inc
inc
mov
or
sarb
cld
add
in
cmc
outsl
scas
jns
mov
in
rorb
pop
aam
pop
sbb
call
push
or
cmp
bound
push
push
add
sahf
or
fcmovu
inc
orb
mov
mov
push
pop
daa
das
adc
cmp
imull
mov
cld
pusha
stc
bnd
divl
test
mov
clc
in
inc
stc
outsb
rorb
add
in
dec
cmc
inc
add
or
jle
push
andb
test
lret
les
insl
cld
lret
pop
push
in
adc
push
push
notb
inc
hlt
dec
xchg
aas
mov
mov
jo
add
std
in
sub
xchg
add
dec
push
mov
mov
mov
icebp
rcl
js
fdivrp
or
out
pop
outsl
les
int3
push
sti
test
adc
notb
ret
pop
sbb
test
xor
cmc
out
cs
enter
pop
sbb
lret
mov
mov
mov
add
pop
mov
add
add
add
fmulp
mov
or
add
sbb
push
test
and
or
ret
out
inc
jge
sti
cmc
in
jae
jne
xchg
adc
or
sub
leave
ljmp
test
enter
in
rcrl
sbb
test
ret
dec
aas
shl
and
data16
sbb
in
shlb
pop
jge
jg
into
dec
call
mov
outsb
or
ss
xchg
imul
add
xor
in
mov
mulb
dec
fdivs
dec
ljmp
loopne
xor
lock
sub
outsb
enter
and
call
aas
inc
rclb
xor
mov
add
xchg
cmp
pop
fmulp
fsubl
push
xchg
in
nop
cmpl
lock
lds
or
dec
negl
shr
rcrl
pop
gs
xchg
xchg
add
mov
into
jae
sahf
imul
push
sbb
xchg
mov
mov
mov
xorl
fs
idiv
sbb
dec
ja
push
in
repnz
dec
jb
enter
dec
jno
lret
xor
or
adc
and
aas
in
pop
or
mov
in
push
inc
mov
mov
pop
and
es
sbb
add
mov
cmp
imul
nop
xor
insb
push
repz
inc
shl
push
mov
mov
jl
push
sub
jmp
mov
add
decl
enter
fdivr
stc
psrlw
aaa
sbb
clc
push
imul
js
mov
push
mov
mov
inc
fistpl
test
outsl
dec
in
add
mov
mov
fcomp
mov
pop
xchg
sbb
dec
into
or
mov
xchg
imul
or
xlat
sbb
add
jg
sahf
or
incl
out
add
js
push
sarb
dec
outsb
mov
fcomp
repnz
cwtl
pop
inc
js
dec
push
in
add
jns
in
aaa
xor
je
lret
mov
mov
sub
lret
push
in
mov
into
jns
adc
imul
pop
cld
pop
dec
cmp
in
add
ds
lock
fmuls
jae
xchg
cld
lcall
xor
add
adc
rolb
rorl
leave
xor
addl
dec
hlt
imul
xchg
lcall
lcall
mov
inc
in
rorb
into
cld
mov
shr
les
dec
jnp
dec
imul
push
std
cwtl
sub
sbb
xchg
lds
mov
add
xor
scas
in
pop
rclb
sbb
popf
les
pop
dec
xchg
in
into
jne
push
jle
xchg
mov
add
mov
sahf
dec
adc
inc
leave
ffree
mov
jg
ret
cmp
out
inc
xorl
movsb
cmp
pslld
jae
sub
mov
xlat
xchg
aas
sbb
jns
add
icebp
adc
dec
ss
sbb
sub
flds
ret
stc
xor
out
mov
mov
xchg
dec
shrb
cmp
add
inc
or
decb
add
add
in
inc
or
or
xchg
orb
iret
repz
test
jne
lea
shr
mov
push
in
pop
sbb
into
cli
push
int3
call
int
mov
mov
fsubl
sub
out
xor
cmp
ss
push
or
inc
call
inc
push
mov
es
sarl
lea
cmc
rclb
mov
data16
jo
or
adc
dec
in
cld
inc
sbb
push
or
push
addr16
mov
mov
adc
ret
sar
enter
dec
add
cmp
out
xchg
inc
out
in
push
negb
push
add
mov
sbb
hlt
cmpsl
push
sbb
dec
mov
adc
adc
sbb
or
dec
int3
call
ret
xor
xchg
mov
inc
leave
and
dec
lods
inc
stos
int
inc
or
xchg
inc
daa
jae
in
dec
mov
pop
mov
aad
xor
outsb
dec
repnz
xchg
ljmp
jp
or
fs
enter
mov
jo
in
push
push
addb
mov
inc
cmp
add
xchg
adcl
push
pop
into
add
xor
push
push
pop
cmp
xchg
push
aam
mov
fld
fistps
push
push
add
add
cli
or
inc
mov
mov
xchg
sbb
pusha
mov
xor
in
lea
lcall
lret
xorb
mov
int
cs
clc
std
jbe
fcomp
or
xchg
cltd
shrl
lock
cltd
movsb
sti
inc
outsb
test
add
jae
inc
adc
add
ss
lods
rcll
mov
pop
mov
mov
and
cli
mov
int
rclb
mov
fs
add
mov
or
xchg
imul
mov
adc
jle
in
pop
or
dec
fwait
pop
mov
test
adc
jl
sub
jnp
adc
lahf
ret
iret
adc
lds
out
adc
or
mov
in
jnp
or
inc
in
inc
or
push
sahf
in
fisttpll
int
std
cmp
sti
aaa
pop
sti
into
xchg
and
sbb
icebp
int3
imul
ljmp
inc
jb
add
push
mov
rolb
cmc
enter
jl
scas
or
aaa
lock
fistpl
dec
xchg
adc
lcall
jbe
xor
in
ret
mov
lret
lock
lods
test
jne
dec
stos
or
mov
push
sbb
xchg
push
ret
inc
sarb
adc
subb
xchg
js
cltd
xlat
inc
and
mov
nop/reserved
or
int3
jns
gs
lahf
mov
cwtl
mov
outsl
inc
stc
in
iret
push
hlt
push
dec
mov
push
sbb
mov
outsb
add
sub
cwtl
fstp
fisttpl
lcall
mov
mov
int3
sub
nop
push
dec
xchg
fwait
dec
sbb
orb
sbb
mov
cmp
jno
or
lock
or
push
dec
hlt
xchg
js
lea
out
mov
sbb
and
cld
and
lret
pop
sbb
jns
cs
daa
lods
mov
outsb
mov
imul
loopne
int
test
pop
rorb
inc
dec
fwait
stos
jb
outsl
in
cs
lea
subb
leave
sbb
dec
in
dec
mov
aad
add
test
or
out
pop
in
popf
mov
adc
sbbb
push
in
sbb
in
ret
mov
or
lret
incb
call
lcall
pop
in
inc
xchg
les
psubsb
push
int3
rcr
or
fwait
lds
cltd
out
sub
pop
push
inc
or
or
orb
xchg
pop
adc
adc
push
dec
mov
dec
rorl
push
xlat
push
or
xchg
cli
cld
and
je
ret
cmp
jns
scas
push
inc
stc
sbb
rolb
or
jge
out
lock
dec
cmp
repnz
cmp
cmpsl
ret
in
xorb
dec
lods
inc
pop
or
adc
add
inc
mov
push
sub
daa
lds
or
pop
ss
and
divl
xor
mov
in
dec
or
cltd
sbb
fucomip
pop
pop
or
sbb
idivb
sub
or
insb
ljmp
sbbb
xchg
cmp
inc
jnp
push
leave
or
out
dec
in
adc
shll
int3
mov
pop
lock
dec
xor
ficomps
test
lret
stos
enter
cmp
test
xlat
add
jne
mov
mov
adc
xchg
xchg
mov
xchg
js
rdpmc
stc
dec
mov
sbb
mov
nop
inc
in
cmp
popf
test
or
or
scas
or
jl
lock
xor
mov
sub
cmp
mov
adc
icebp
das
sbb
sarb
jae
lock
stos
in
les
pop
or
push
scas
push
fs
dec
hlt
dec
adc
pop
sahf
lret
pop
sbb
int
mov
push
lcall
in
out
jg
xor
mov
imul
sar
and
sbb
jl
or
out
cmpsl
enter
imul
xor
shlb
add
clc
or
hlt
dec
fstpl
dec
popa
enter
push
lahf
push
push
mov
hlt
cli
sbbl
push
inc
mov
xor
call
jle
les
daa
dec
mov
or
aam
xchg
xor
lea
icebp
hlt
ljmp
xor
sbb
adc
mov
out
in
sti
and
push
mov
aaa
js
mov
jne
subb
outsb
loopne
insl
push
clc
inc
shrl
sub
lds
mov
int
pop
jmp
repz
in
scas
mov
pop
pop
jmp
push
pop
or
xchg
lds
mov
cli
push
mov
dec
or
mov
aaa
adc
flds
xchg
cltd
inc
xorl
add
or
outsl
mov
aaa
dec
sub
popa
lret
xchg
ljmp
pop
lahf
sbb
ficomps
cmp
cmpsl
xchg
sbb
daa
pop
fwait
push
mov
jl
pop
adcb
cmc
imul
add
in
aam
cmp
xor
int3
jae
call
or
or
pop
mov
negb
add
outsl
xchg
and
inc
sub
push
int3
stc
insl
js
std
outsl
leave
mov
mov
andb
inc
mov
lock
and
fisubs
movsb
js
cmp
fs
in
paddd
popf
or
lret
flds
test
jge
ret
push
sub
or
mov
addb
mov
mov
lcall
inc
cs
dec
stos
mov
mov
jb
inc
mov
les
mov
fstps
in
add
rcll
pop
fldl
push
stc
and
inc
in
push
sbb
xchg
push
mov
pop
push
test
dec
js
dec
jbe
aas
cld
movsb
mov
sarl
sub
fistl
mov
cld
in
lret
sbb
fsubs
pop
pop
int3
test
dec
mov
push
aam
or
sub
push
outsl
inc
inc
call
test
scas
adc
cs
mov
xchg
int
lock
hlt
inc
insl
lods
jmp
enter
nop
xchg
adc
popf
inc
movsb
adc
in
test
cmp
test
inc
inc
scas
inc
dec
sub
cmpsl
pop
mov
scas
xor
dec
dec
mov
fstps
pop
fwait
add
in
pop
insb
cmp
in
inc
test
and
mov
lock
dec
icebp
inc
add
test
out
aam
inc
cwtl
cwtl
hlt
hlt
xchg
fcmovu
jmp
add
lock
dec
inc
lcall
sbb
adc
push
mov
adc
cwtl
or
movsl
int3
in
cmp
insb
or
push
mov
fiaddl
or
enter
xor
adc
mov
fwait
inc
push
xchg
inc
mov
jae
xchg
cmp
or
sub
jp
hlt
mov
or
sbb
mov
push
popa
mov
inc
imul
cltd
imul
jae
mov
cld
sti
or
addl
in
xor
inc
arpl
cld
dec
push
cld
dec
mov
adc
inc
mov
xchg
nop
mov
aas
shrb
mov
aas
xlat
lods
test
and
add
or
outsl
push
ds
xchg
testl
push
cmp
ret
rorb
mov
or
icebp
add
push
rcl
out
ficompl
or
xchg
xor
addr16
xchg
inc
pop
lcall
aad
test
outsb
loopne
not
ss
dec
icebp
lock
insl
mov
and
or
sbb
sti
cmp
dec
sub
cli
insl
lock
and
nop
cmc
sbb
mov
mov
lahf
stos
and
jnp
out
inc
inc
lods
cmp
mov
in
inc
out
into
push
jns
sarl
fs
pop
cmp
or
lock
sub
add
mov
les
cld
iret
or
add
add
and
pop
and
sub
or
pop
or
sahf
cld
dec
mov
xlat
sbb
sbb
inc
pop
adc
sbb
sarb
mov
cld
push
jae
push
jg
push
xchg
sbb
ljmp
or
mov
fcmovnbe
inc
flds
adc
xchg
outsb
or
call
mov
lock
dec
pop
mov
cli
inc
push
mov
js
jae
sbb
mov
insl
mov
lock
pop
aad
cmp
or
outsl
cltd
test
fsubrl
cld
adc
mov
hlt
mov
or
add
inc
scas
mov
add
inc
das
mov
das
subl
sub
inc
cltd
xchg
lods
or
stc
dec
jge
fcompl
xchg
cmc
add
sahf
pop
push
mov
cmpsl
push
push
jge
mov
shll
mov
enter
dec
das
int
sbb
scas
dec
out
push
jge
push
mov
dec
adc
cmp
fstps
inc
aam
inc
aam
test
adc
push
mov
cs
imul
sbb
mov
xor
in
dec
dec
mov
dec
sub
dec
outsl
push
cmpsb
stos
fs
mov
lret
jle
sub
xchg
movsb
in
add
or
push
mov
orl
test
mov
jo
nop
daa
pop
sub
adc
inc
leave
push
ss
push
insl
inc
pop
out
cld
imulb
jg
lret
and
xchg
sbb
jge
movsb
add
cmp
movsb
lret
icebp
lds
fldlg2
dec
xchg
jp
sbb
pop
xor
or
in
mov
push
xchg
sbb
add
dec
sbb
dec
iret
xor
clc
xchg
in
fldcw
xor
xchg
cltd
ret
add
sub
push
insb
mov
icebp
stc
add
loopne
mov
in
add
jmp
ret
mov
jge
dec
dec
call
sub
je
out
inc
jns
stos
lock
sti
mov
dec
ss
and
or
push
push
jno
dec
jb
mov
xchg
sub
cld
jge
add
or
mov
orl
or
aam
sbb
pop
mov
fimuls
xlat
mov
cwtl
pop
hlt
lea
mov
pop
lea
pop
inc
dec
push
clc
adc
jge
or
test
push
adc
xchg
xlat
cmp
pop
sbb
in
fildl
cwtl
dec
mov
gs
sbb
lock
sub
mov
call
xor
sbb
clc
lcall
cmp
in
inc
push
call
js
outsl
dec
in
pop
aas
jg
mov
xor
repz
sub
loop
mov
insl
fwait
test
xchg
jbe
inc
jae
mov
pop
sub
ror
jae
push
and
or
iret
jb
xchg
mov
inc
in
inc
mov
add
ljmp
aad
lret
dec
into
mov
cld
lds
lret
mov
xchg
arpl
pop
sbb
or
pop
fimuls
xchg
cli
xchg
or
in
add
dec
dec
push
push
f2xm1
fistpl
mov
sbb
cwtl
insb
push
jmp
dec
or
sub
cs
lret
ds
push
ret
jl
cld
leave
dec
or
mov
sbb
push
outsb
xchg
ljmp
mov
out
dec
call
jp
outsb
ljmp
xor
jne
xor
inc
inc
lret
mov
lock
stc
fistps
xor
or
rorb
je
gs
and
in
iret
xchg
cmc
adc
mov
in
cmp
mov
and
or
in
push
sarb
pop
pop
pop
pop
pop
gs
sbb
push
xchg
shr
push
std
fstpl
adc
iret
imul
xorb
mov
mov
sti
les
test
mov
push
jl
fadds
hlt
mov
xlat
popl
adc
inc
stos
sarb
pop
dec
or
jo
out
int
cmp
and
mov
push
lods
test
sarl
addl
xor
int3
sti
or
in
mov
lret
jno
add
mov
mov
arpl
jno
lret
sub
imul
in
inc
dec
or
int
cmp
movsb
or
push
sub
inc
insb
cld
leave
mov
pop
fstps
ret
inc
mov
cmp
mov
adc
jne
loope
fcoms
fiaddl
sbb
sbb
sub
dec
pop
sbb
lahf
pushf
dec
incb
mov
or
clc
aad
dec
lock
hlt
outsb
addr16
rolb
pop
ret
xor
mov
jno
push
sbb
loope
repz
push
shrl
std
mov
and
xor
mov
mov
jbe
sub
in
add
scas
lock
stos
sub
sbb
mov
testb
or
imul
push
insl
pop
inc
lods
incl
or
jo
sti
addb
pop
out
ljmp
xchg
adc
lcall
jge
in
lcall
dec
clc
jne
outsl
fucomp
lret
int3
mull
mov
mov
xor
test
dec
xchg
xchg
enter
add
negb
sub
mov
sbb
push
or
int
xor
push
std
sahf
mov
or
stc
jp
test
jbe
mov
imul
xlat
or
insb
test
inc
mov
lret
xor
mov
in
xchg
pop
ljmp
in
cmp
test
ss
outsb
outsl
mov
add
es
enter
das
rcll
jle
sbb
ficompl
in
movsb
push
lock
movsl
fildl
push
jp
fmull
lock
push
enter
pop
cmp
lret
pop
fimuls
int
and
nop
jmp
jl
xchg
js
aaa
insl
and
enter
cs
jno
push
in
aas
adc
inc
and
scas
xlat
in
cs
xor
adc
lock
pop
sub
jp
js
enter
mov
cmp
lock
adc
cli
lcall
mov
or
gs
call
mov
xor
mov
pop
call
push
xor
nop
push
push
dec
xorb
sub
mov
dec
xrelease
adc
jp
stc
lds
and
jae
add
mov
dec
pop
fwait
ljmp
dec
lret
sahf
repz
xor
repnz
sbb
mov
outsb
or
mov
aam
ret
in
push
or
and
push
xchg
sbb
jae
imul
orb
jae
jmp
xor
lock
cs
dec
mov
inc
xor
push
sub
insl
and
xor
add
and
cld
pop
cmp
pop
cmp
jb
push
pop
inc
dec
aas
sbb
xchg
mov
scas
or
in
mov
dec
in
shr
aaa
fstps
push
adc
push
repnz
int3
in
jns
nop
jp
sbb
mov
mov
xchg
mov
dec
ljmp
pop
pop
fsubr
hlt
pop
pop
dec
lahf
dec
and
xchg
aas
rcl
jns
lahf
test
call
mov
aas
pop
rcll
push
in
push
je
adc
dec
aaa
pop
ret
add
stos
lret
in
outsb
std
sbb
cmp
test
getsec
add
mov
xchg
arpl
pop
add
jle
xor
xor
ret
hlt
mov
mov
aaa
jmp
pop
into
sbb
in
mov
scas
push
fildll
hlt
mov
xchg
inc
lahf
xchg
stos
scas
fbstp
lock
push
jecxz
std
cld
mov
aad
mov
mov
or
xor
xlat
pop
std
in
mov
fcomps
or
cwtl
xor
es
fildll
test
iret
sbb
xchg
bnd
adc
notl
aam
cwtl
push
or
lret
mov
push
mov
adc
int3
ss
push
add
xor
test
icebp
or
adc
sti
insl
dec
imul
addb
scas
test
mov
inc
lock
stc
incl
fidivrs
or
mov
or
jp
outsl
arpl
stos
scas
add
imul
gs
or
dec
lock
xchg
dec
outsl
in
sub
dec
sahf
cli
or
call
pop
inc
dec
loopne
in
mov
or
in
or
int
xchg
hlt
lret
adc
push
push
sub
fisttpll
ret
pop
push
outsb
pop
mov
rcrl
pop
push
nop
mov
mov
sbb
hlt
out
and
outsb
in
push
clc
insb
nop
int3
mov
push
sarl
jae
add
lods
cmc
xchg
inc
jmp
das
ljmp
mov
cmpsb
sub
inc
jae
insb
lods
je
insl
xor
xor
scas
ret
gs
test
jle
aas
mov
add
sub
das
aas
and
cmp
jbe
sub
gs
add
push
ret
add
push
push
sti
je
in
inc
jo
sbb
sti
fs
or
push
mov
cli
insb
imul
iret
xchg
sub
sub
push
jo
pop
sub
mov
mov
sbb
movsl
fcoml
pop
shl
sbb
xchg
jns
flds
hlt
push
pop
ficomps
dec
mov
out
hlt
lock
iret
sarb
testb
mov
add
add
sbb
outsb
test
add
add
jp
or
inc
pop
xor
xor
outsb
lock
mov
into
test
mov
aas
and
push
or
pop
pop
dec
out
cmpb
xor
scas
and
stos
jg
js
mov
sub
xchg
ljmp
lret
and
iret
fcoml
pushf
jo
inc
lock
enter
int
dec
nop
mov
aam
js
cld
rcr
push
push
sub
sub
fcoml
aaa
pop
test
mov
or
jmp
xchg
movq
rcl
sub
ss
pop
dec
adc
xchg
lock
sub
inc
xchg
faddp
out
movsb
mov
jl
xchg
fs
ljmp
xor
arpl
sub
xchg
fldt
dec
jg
lods
decb
jno
dec
add
jne
mov
mov
or
subb
mov
ss
insb
adc
inc
push
cs
jbe
lea
cmp
dec
gs
or
js
add
arpl
js
into
adc
xchg
in
mov
pop
push
pop
pop
dec
lahf
or
pop
sbb
outsb
push
int3
mov
mov
dec
cmp
add
gs
lods
dec
pop
adc
in
adc
scas
out
or
int3
push
jmp
inc
lock
xor
and
dec
ret
addb
cmp
push
orl
in
aas
inc
lods
rolb
f2xm1
lds
ret
push
add
sti
mov
aas
sbb
sub
icebp
mov
xor
xor
dec
jne
dec
out
inc
adc
pop
test
dec
cmpsl
enter
fidivl
fnstenv
insb
cli
mov
sbb
dec
xor
xor
and
dec
popf
add
in
leave
mov
dec
dec
das
enter
dec
shlb
push
ds
pop
les
shlb
push
sahf
cmp
stos
lcall
lock
int3
push
imul
inc
or
push
jmp
cs
in
inc
mov
outsl
push
dec
in
mov
adc
mov
lds
test
ds
jae
inc
outsl
inc
test
xor
clc
inc
add
out
inc
dec
idivl
jp
mov
jb
adc
dec
push
pop
in
std
lret
outsb
mov
mov
mov
dec
sbb
add
hlt
les
dec
push
aaa
cwtl
push
fdiv
out
adc
mov
xchg
js
out
pop
test
outsl
repz
fildl
out
inc
gs
or
not
in
push
sbb
add
pop
inc
cwtl
and
xchg
in
or
test
in
xchg
pop
add
inc
cmp
pop
popf
dec
gs
xchg
inc
test
add
jns
mov
cs
mov
push
lock
mov
xor
bound
ss
inc
lcall
stos
push
cs
mov
fadd
adc
into
lock
cmp
cmp
out
imull
mov
mov
call
push
lock
scas
cs
xor
inc
in
jno
pop
mov
or
xor
insb
add
mov
or
sub
dec
or
pop
xor
les
dec
xchg
imul
pop
inc
cwtl
and
xchg
aam
dec
xlat
push
inc
and
inc
sub
push
sbb
cwtl
adc
imul
cld
jb
pop
fs
addl
cltd
fs
sti
shlb
test
xchg
add
mov
pop
jns
iret
cmp
mov
sti
or
adc
rorb
incb
jae
fiadds
pop
add
and
cmc
div
mov
xchg
clc
jnp
and
outsb
mov
jl
dec
lock
aaa
stos
repnz
icebp
mov
stc
test
lret
mov
xor
lods
popa
xor
xchg
cld
jl
sub
test
repnz
xor
push
jno
xor
lret
subl
stc
mov
xor
imul
xchg
cld
push
push
jl
cld
aas
or
jnp
adc
inc
inc
test
xor
int3
cmp
add
in
popf
xlat
inc
pushf
sahf
dec
push
cmpsl
fmulp
cwtl
cmpsl
jle
sti
sbb
cmp
sti
lods
idivb
sahf
xchg
xchg
in
mov
into
adc
enter
rcl
fdivr
sbb
mov
jo
lods
sahf
or
pop
cmp
mov
push
hlt
mov
ret
movsb
cld
ljmp
imul
divb
mov
enter
sbb
insb
jp
sub
in
popf
mov
outsb
aas
jmp
in
jl
inc
inc
xor
pop
or
dec
cld
mov
xor
mov
outsl
mov
imul
sbb
jns
in
adc
xchg
paddd
mov
sbb
ja
lea
dec
int3
xor
xchg
pop
aad
jmp
mov
rcrb
cmp
inc
insb
cmp
mov
adc
fadds
imul
mov
cmp
in
xchg
inc
xor
push
enter
shl
cwtl
lock
xchg
mov
ss
dec
add
jae
jp
mov
sub
clc
ficomps
notl
movsb
stc
out
test
pushf
and
jbe
mov
pop
imul
cmp
lock
lock
cmp
mov
push
out
int
push
cs
or
addb
xchg
or
mov
iret
dec
jp
or
pop
lret
call
stc
mov
adc
jbe
adc
sbb
or
test
iret
xor
loope
icebp
in
push
pop
aam
sbb
pop
add
addr16
lcall
inc
insb
int3
inc
das
push
nop
mov
pop
aas
in
pop
pop
les
mov
mov
adc
dec
jae
push
mov
and
lock
pop
rcrl
inc
adc
aas
adc
lods
imul
lock
adc
xor
outsl
js
je
sub
mov
sbb
aaa
ret
lock
sub
lahf
shlb
jp
mov
clc
into
inc
mov
dec
push
arpl
sub
andl
jae
out
dec
movsb
xor
push
lea
xchg
dec
push
or
mov
in
mov
xorl
push
cmp
push
xchg
mulb
push
add
or
adc
mov
cwtl
xchg
add
roll
mov
ss
or
jg
jae
in
rorb
dec
cmpsl
or
imul
test
add
mov
jne
mov
and
cs
movsb
mov
mov
int3
add
mov
loop
jmp
in
cmpsl
jb
xor
mov
ss
enter
lock
jle
sub
mov
lcall
idivb
sub
in
andb
movsb
add
jg
mov
mov
shlb
or
testb
xor
fs
push
cltd
jae
inc
shl
sarb
gs
push
lock
out
in
or
jb
popf
xchg
pop
or
sbb
adc
and
mov
call
cmp
jbe
and
inc
or
or
call
jge
jae
jp
stos
lock
cli
and
push
rcrb
sub
dec
int
data16
jle
mov
pop
jbe
data16
cmp
shlb
xor
xchg
lock
daa
imul
mov
and
out
or
in
xor
cmpl
add
pop
inc
mov
aaa
or
ljmp
data16
lahf
inc
pop
xor
cld
dec
or
jbe
sar
sbb
lret
add
out
xchg
imul
lcall
or
cwtl
inc
lods
popl
dec
sub
xchg
adc
or
movd
mov
add
test
mov
jbe
add
jbe
lret
xor
fs
out
imul
cmp
popf
push
lock
ljmp
cmp
mov
push
fidivrl
das
cltd
aaa
clc
sub
mov
addr16
sub
stos
lock
test
mov
ret
jg
pop
cmp
mov
mov
aas
shrd
jb
mov
mov
shlb
sarb
in
js
push
ds
in
lods
xchg
mov
repnz
in
popf
les
fmuls
fwait
inc
movsl
pop
flds
sbb
adc
jnp
adc
mov
out
push
jno
lods
or
insl
cmp
icebp
add
xor
or
stos
push
in
sub
mov
call
ljmp
fwait
xchg
pop
push
lahf
ljmp
jbe
pop
call
sub
nop
or
sub
cld
adc
lcall
aaa
subb
sahf
cmp
repz
and
xor
mov
mov
mov
mov
pop
mov
add
out
loopne
stos
jmp
lods
in
int3
fmull
xchg
ljmp
cld
lret
shl
cmpsb
insl
cli
sbb
aas
mov
das
add
dec
jg
mov
push
pop
fwait
pop
dec
jecxz
and
add
sub
jle
imul
rcrb
jae
stos
or
pushf
xchg
sub
lret
pop
ljmp
mov
in
aaa
fisubl
xchg
cmp
add
xchg
jb
out
lds
or
dec
xor
scas
clc
push
mov
pop
sti
sbb
jecxz
ficoms
test
sub
out
push
and
pop
push
xchg
sbb
inc
pop
push
das
jecxz
pop
mov
sbb
xchg
fcmovne
lds
ss
xor
and
mov
pushf
ss
pop
sbb
xchg
or
ret
mov
repnz
repz
sub
push
outsl
fistpl
sbb
stc
jl
mov
mov
aaa
mov
cmpsl
push
outsb
xchg
inc
in
sbb
jmp
ja
xor
pop
adc
repz
and
or
daa
inc
ljmp
add
mov
out
mov
push
mov
ficoms
in
ret
mov
lret
dec
and
pop
inc
cli
mov
bound
pop
pop
pop
or
sti
mov
mov
mov
xchg
sar
or
or
fcoml
sbb
jo
jle
cmp
adc
in
sbb
sahf
inc
pusha
pushf
movsb
sbb
test
sti
push
imul
jae
ljmp
cmp
imulb
sub
mov
cmc
in
sub
out
fidivl
jmp
daa
dec
ffree
sub
mov
inc
mov
sahf
fs
mov
lahf
pop
pop
arpl
aam
rorb
ljmp
push
cltd
sub
in
inc
add
loop
cmp
popf
adc
inc
and
or
xchg
cmp
pushf
or
or
push
cmp
rol
test
adc
nop
daa
add
lret
pop
test
cmp
cmp
mov
dec
push
aam
es
movsb
test
dec
mov
mov
lods
dec
mov
xchg
or
aas
sub
inc
out
sti
xchg
mov
or
faddl
movsb
ja
dec
bound
jo
aaa
mov
iret
sbbl
mov
push
js
fidivs
or
sub
lods
arpl
mov
add
jno
push
pushf
call
fsubl
push
insb
xchg
stos
bound
jae
xor
imul
aam
jbe
dec
mov
push
aad
sbb
xor
fwait
adc
add
imul
aas
ret
cld
cs
cmp
jl
pusha
pop
fs
rcr
mov
out
stos
sub
jle
inc
add
nop
or
inc
nop
cmpb
jg
js
or
jnp
ljmp
sub
lret
push
sbb
test
aas
cld
cmp
pushf
daa
pop
mov
mov
lret
pop
and
xchg
test
stc
lcall
lret
ret
fwait
ljmp
jge
mov
cmpsl
pop
outsb
pop
mov
sbb
repnz
fcomps
inc
mov
nopl
sbb
repnz
sub
scas
lods
ret
and
push
repnz
test
fucomip
mov
test
jle
stos
nop
arpl
mov
cmp
pop
xor
pop
jp
xchg
test
lods
cmp
stos
push
and
cmp
test
std
je
xchg
lock
inc
sub
add
mov
jp
ja
loopne
xor
add
adc
and
call
sub
fldt
subl
jae
test
sub
out
shl
subl
outsl
add
xchg
adc
int3
andl
and
test
push
push
sub
mov
cmpl
fcoml
sub
push
or
add
jge
clc
mov
mov
mov
jg
in
mov
add
aas
sub
cli
sbb
sbb
stos
cmp
sbb
or
cmp
sbb
aam
ja
mov
jl
jg
xor
in
stc
cwtl
stos
and
mov
cmpsb
clc
jne
jp
pushf
cmp
test
outsl
sti
mov
cmc
je
sbbb
xor
jl
pusha
or
in
add
jle
or
cli
ja
mov
and
inc
cli
dec
lea
or
inc
loopne
fwait
sbb
mov
es
push
aam
pusha
cli
or
adc
stc
in
jle
jmp
xchg
adc
bound
or
sub
inc
cmp
and
fsubr
test
int3
dec
dec
pusha
fwait
xchg
jl
ffree
sbb
mov
cli
pop
int3
ljmp
pushf
xchg
dec
pusha
fwait
xlat
les
cmp
push
andl
xchg
rcrl
inc
xor
xor
mov
imul
cmp
mov
and
test
mov
cmp
ret
ds
lods
sbb
xor
mov
sbb
and
testl
add
xor
in
lods
and
jae
push
jge
ds
sub
ljmp
mov
shlb
testl
mov
xchg
int
testl
mov
cmpsb
mov
les
insb
cmpsb
add
mov
cmpsb
orb
mov
cmpsb
add
add
jo
fists
fsub
xor
mov
orl
xlat
daa
mov
xchg
stos
sub
or
popf
push
inc
mov
and
dec
sub
lods
stos
loope
testl
add
aas
decl
fistpll
push
jecxz
cmpsb
sub
and
push
clc
test
jp
cld
aaa
movsb
sub
sub
sub
pop
fdivrl
jecxz
and
xchg
cmp
loop
inc
cmp
imul
pushf
mov
xor
fucomi
in
pop
and
mov
shl
idivl
cld
mov
xchg
sub
fstps
ljmp
jle
sub
lods
push
cli
in
dec
mov
ja
scas
mov
in
ret
cmp
in
xchg
lea
scas
mov
in
rcr
push
add
push
xchg
lcall
outsl
pop
outsb
jecxz
rcl
xchg
ljmp
jo
ret
rorl
leave
into
lds
les
inc
xor
ffreep
aam
cmpsb
add
dec
adc
dec
lahf
xchg
push
test
mov
mov
mov
cmc
std
in
cld
cmp
inc
mov
sub
daa
clc
jno
jge
cwtl
mov
sub
add
mov
and
mov
jle
sub
stc
xor
scas
ret
jle
adc
pop
dec
xchg
mov
movsb
inc
jbe
fldenv
cli
je
xchg
cmp
jp
lcall
jl
push
mov
cltd
dec
pop
push
adc
mov
subb
adc
jbe
xchg
mov
sbb
and
mov
xchg
dec
xchg
bound
ret
cmpsb
mov
add
lea
pop
sub
insb
xor
clc
leave
xchg
xor
jmp
mov
pop
inc
mov
push
cmp
cli
add
aas
insl
cltd
and
cmp
cmp
xchg
jmp
jbe
incl
cli
jo
xchg
inc
sahf
imul
lods
add
pushf
dec
in
cmp
push
loope
adc
mov
mov
mov
shlb
out
xor
or
xchg
inc
xchg
sbb
jg
or
jg
jge
ss
rcrl
mov
ss
fbld
fistpll
xchg
mov
aas
mov
loop
int
lahf
jo
lahf
push
jg
inc
jbe
lds
inc
adc
mov
xchg
ss
cld
sbb
inc
cmpl
lods
and
jne
inc
lods
pop
or
clc
lods
es
xor
into
orb
fcomps
repnz
and
aas
cmpsl
imul
cmp
lahf
inc
sbb
scas
or
cmpsb
add
popa
cli
rorl
and
mov
mov
cwtl
cmpsb
movsb
xor
pshufw
jbe
xorl
sbb
in
mov
je
mov
daa
test
add
adc
cmc
sbb
mov
js
popa
push
jle
mov
mov
mov
jae
jnp
mov
outsl
dec
dec
in
cmpb
or
loop
push
aas
mov
push
add
xchg
jp
sbbb
xchg
bound
xorl
mov
subl
fbstp
loopew
adc
dec
sti
xchg
xchg
jl
shll
scas
mov
int
and
xor
movsb
jnp
dec
in
repz
and
sti
push
xlat
sub
jge
in
mov
add
cmp
cwtl
stos
imul
xor
sti
sbbb
jns
stos
or
in
cmp
and
js
fbld
sub
rcr
push
xchg
xor
outsb
sbb
out
lret
addr16
and
dec
ret
test
pop
dec
popa
out
adc
dec
std
lahf
xor
mov
cmpsl
push
cmpb
lea
sbb
xor
dec
push
push
test
jg
sub
aad
mov
pop
xchg
xor
out
pop
outsl
out
xchg
test
into
pusha
and
adc
into
jno
addl
fildl
loopne
dec
call
pusha
lahf
in
pushf
pop
ljmp
aas
cvtps2pd
es
cmpsb
sarb
add
adc
fistps
repnz
ret
pop
add
inc
dec
mov
push
jle
les
or
jae
cmpsl
outsl
std
xor
push
fistps
push
bound
and
and
je
lods
mov
or
ljmp
xor
push
xchg
icebp
test
icebp
mov
sub
jno
push
xor
and
cmpsb
js
mov
outsl
xchg
sti
repz
mov
sbb
imul
outsb
bound
mov
std
movsl
xchg
cmc
out
int3
nop
ljmp
rcl
dec
in
fwait
dec
xchg
int3
xchg
out
movsl
sub
ficomps
mov
push
pusha
jp
sub
bnd
movsl
aas
aam
aam
pop
enter
outsl
fwait
pushf
pusha
cltd
scas
or
outsb
cli
pop
aad
sbb
add
adc
cli
mov
adc
lahf
stos
pusha
ror
cltd
andl
and
or
pop
insb
int3
xchg
ret
repnz
lret
mov
push
popf
lcall
fimuls
lret
mov
and
dec
ret
jl
addr16
jo
mov
jno
fcomps
or
lods
ficoms
bound
sub
add
jp,pn
shrl
insl
xchg
fisubrs
popa
outsl
pop
lods
inc
adc
daa
andb
sub
fdivr
or
xchg
adc
bound
sbb
adc
inc
cli
out
adc
cmp
je
xor
and
pop
lahf
lret
cmpsb
push
stos
sub
xchg
roll
pop
add
insl
lea
push
ja
xor
jnp
hlt
push
fsubrs
mov
in
test
sarb
add
dec
aas
xor
inc
jae
std
xor
cmp
jne
lret
xlat
sbb
test
inc
mov
bnd
jne
clc
lret
cltd
gs
movsbl
insl
cmpsl
dec
xor
jl
inc
bound
push
pop
mov
inc
into
adc
pop
xor
lock
mov
test
adc
stc
ljmp
push
dec
mov
push
icebp
mov
mov
mov
fsts
push
arpl
orb
adc
ljmp
cmc
pop
sub
pop
push
test
call
movsb
xor
sbb
and
sub
xchg
pop
loopne
sbb
loop
jns
cli
stos
fcomi
popf
or
sahf
xchg
sub
xchg
push
imul
ljmp
test
mov
shrl
add
sub
out
or
ljmp
mov
fadds
pusha
fwait
cvtpi2ps
xor
cltd
std
test
lods
sbb
out
aam
pop
and
xchg
mov
shrb
call
sbb
inc
add
and
scas
in
or
lret
pop
popf
sbb
adc
lods
in
sbb
jl
jecxz
push
daa
hlt
adc
shrl
fs
mov
dec
shll
jecxz
sbb
mov
lret
outsb
push
and
xchg
nop
adc
push
or
loop
daa
pop
sbb
add
sub
mov
or
insl
sub
test
sbb
imul
xabort
fidivrs
sbb
sbb
les
insb
sub
out
idiv
add
or
movb
out
daa
je
hlt
sub
insb
pop
hlt
inc
sub
sub
clc
or
or
or
iret
daa
pop
lock
pop
js
addr16
sbb
xor
test
or
hlt
pop
sub
and
movsb
add
mov
mov
lret
and
or
add
sbb
les
add
imul
inc
adc
movsl
adc
add
add
sbb
out
int3
add
push
fcomi
and
das
popf
and
inc
daa
adc
pop
jl
jl
add
sbb
mov
ljmp
out
sub
pop
scas
sti
sbb
or
cmp
pushf
add
and
cli
or
jg
in
scas
out
dec
and
add
clc
out
sub
add
pop
sub
and
push
or
sbb
sub
pop
sbb
shrb
jge
add
lock
aas
in
jo
pop
daa
js
cmp
hlt
daa
jmp
add
lock
daa
decl
sbb
repnz
call
pop
or
fdiv
dec
adc
mov
mov
test
fsubl
js
int3
daa
jl
loop
or
popa
sbb
lds
mov
cmp
out
sbb
pop
sub
stc
lcall
cmp
pop
bound
xor
mov
pop
les
clc
lock
fs
movsb
push
pop
clc
sub
sub
cmc
out
and
mov
in
lods
inc
cli
js
xor
hlt
mov
pop
sub
jno
mov
dec
or
push
divb
sub
shll
pusha
jmp
sbb
pusha
or
sub
cmp
lock
push
sub
loopne
push
in
sbb
add
xchg
pop
sti
imulb
push
sub
out
lret
and
in
out
hlt
pop
in
xor
lods
clc
test
imul
notb
jecxz
push
cmpsl
and
sub
daa
pusha
sub
ss
sahf
sub
je,pn
adc
in
inc
sub
sub
scas
in
xor
or
bound
adc
or
push
xchg
cwtl
or
mul
sbb
daa
sub
adc
pop
pusha
hlt
mov
popa
pop
sbb
popa
xor
js
and
int3
popa
sub
fsub
mov
int3
fcoml
cli
sub
or
loop
pushf
or
cli
into
daa
test
lds
mov
pop
repnz
and
pop
sbb
lods
cld
pop
pop
sti
sub
lds
sub
test
sub
sbb
pop
cmp
sbb
bound
cmpsb
enter
add
jmp
repnz
sbb
mov
sbb
or
add
incb
addr16
pop
idiv
negb
or
add
out
mov
jnp
pop
repnz
and
jmp
lock
sub
inc
popf
cltd
stos
cmpsl
clc
aad
and
popa
cli
sub
mov
push
out
out
stos
testl
sbb
les
mov
cwtl
sub
sub
sub
out
jmp
mov
call
out
dec
neg
mov
or
sub
loop
or
daa
loopne
repnz
enter
cli
sbb
xchg
jbe
in
scas
lret
xor
sub
lock
push
lods
cmp
xchg
test
out
dec
and
xchg
jmp
in
sub
adc
add
and
sbb
adc
lock
hlt
les
hlt
mov
xor
adc
sub
xchg
pop
add
lret
adc
or
and
cmp
pop
mov
cmc
loopne
adc
jle
sti
int
sar
flds
sbbl
stc
std
das
push
stc
sub
cli
fsubl
ljmp
or
cmc
gs
cld
pop
xor
sbb
sub
icebp
bound
clc
mov
mov
jno
mov
mov
out
imul
or
lock
sti
mov
sub
and
jl
push
out
popf
aas
sti
fwait
mov
clc
push
loop
daa
sbb
adc
repnz
insb
imul
cli
mov
leave
mov
push
sbb
sub
jno
push
scas
pop
sub
fdivrl
out
cwtl
mov
pop
sbb
out
xchg
jle
enter
jb
xchg
out
sub
cld
add
or
ljmp
add
sbb
pop
out
ljmp
test
clc
mov
sub
cmp
jo
gs
jbe
addr16
mov
or
stos
jg
sbb
adc
push
addr16
daa
sbb
fdivs
sub
lcall
movsb
std
cld
std
or
daa
jl
and
dec
jecxz
adc
adc
jns
ror
repnz
mov
sub
and
or
mov
shrl
sub
shlb
repnz
loopne
push
push
sbb
or
cmc
lret
inc
int
cmp
or
cmp
jecxz
lock
sub
add
adc
and
repnz
sub
push
sbb
and
sub
cld
mov
and
pop
in
out
mov
push
addr16
hlt
fildll
mov
sti
and
mov
test
jecxz
xor
nop
fisubrs
in
adc
cmc
and
add
adc
push
popa
and
in
nop
int3
in
xor
sahf
cltd
push
cld
sbb
daa
mov
imul
pop
or
sub
rcr
and
imul
fildl
jo
pop
cmc
sub
cmp
sub
pop
sub
rolb
dec
jl
ss
mov
cmp
adc
enter
mov
mov
clc
sbb
shr
addr16
add
sub
into
pop
or
nop
adc
add
pop
sub
sti
daa
daa
and
je
mov
and
cmc
xchg
or
punpcklwd
out
sub
std
hlt
dec
jo
rcrl
adc
subl
inc
incb
daa
mov
mov
jl
in
scas
daa
push
popf
adc
and
adc
add
decb
sbb
pop
jmp
adc
lock
mov
arpl
cwtl
test
sub
loopne
hlt
and
add
adc
mov
jp
sub
xchg
cmpsl
or
stos
in
daa
jl
mov
cltd
xchg
xchg
sub
mov
pop
jmp
push
sbb
sbb
ljmp
negb
hlt
lret
les
lock
mov
or
dec
and
popf
dec
pop
mov
push
adc
cmp
daa
cld
mov
jge
cmpsb
mov
pop
sub
or
adc
and
xadd
std
clc
lret
sti
sbb
movsb
out
add
lret
repz
loopne
jmp
int3
or
pop
sbb
ret
or
xchg
incb
dec
adc
gs
ljmp
and
xchg
xchg
in
inc
jmp
xor
push
lock
jnp
sub
adc
test
test
adc
loop
daa
rorb
repz
loopne
sbb
aad
and
sbb
mov
and
cltd
dec
ret
bound
mov
cli
sbb
insb
xlat
mov
mov
fisubrl
nop
and
mov
sbb
repz
mov
movsl
fistpl
je
hlt
imul
jle
loopne
repz
pusha
or
insb
xchg
mov
adc
push
ss
out
lock
pusha
jne
hlt
jae
jmp
or
loopne
xchg
dec
call
int3
test
push
dec
inc
cmpsl
dec
lret
arpl
imul
cmp
rorb
fisubs
mov
pop
sub
push
hlt
les
xchg
push
in
lds
inc
jnp
popf
pop
mov
call
mov
icebp
in
test
and
pop
mov
clc
arpl
sub
pusha
adc
dec
and
pop
mov
or
rorl
jo
outsl
sbb
sub
pop
jp
xchg
test
adc
je
add
dec
mov
dec
mov
dec
add
push
sbb
out
dec
clc
mov
daa
nop
addr16
or
fldt
js
neg
push
je
add
add
mov
outsb
pusha
sbb
and
adc
sub
or
fldl
ljmp
sub
push
outsb
pop
sbb
hlt
test
lock
sub
adc
call
adc
cli
inc
cld
hlt
int3
stos
lret
pop
adc
stos
sub
push
xchg
sub
in
shl
movsb
daa
and
add
lock
repnz
or
jno
adc
add
push
hlt
cmpsl
scas
xlat
and
in
jecxz
hlt
mulb
gs
stos
add
gs
dec
rolb
in
test
incb
out
les
mov
and
push
and
and
test
vmread
cmpsl
stos
out
adc
adc
sahf
daa
loope
and
sahf
mulb
cwtl
add
jno
or
filds
lahf
arpl
dec
sbb
or
push
jecxz
mov
ljmp
jle
adc
ljmp
ret
sub
and
loopne
mov
stc
loop
mov
adc
mov
adc
out
mov
jae
ljmp
and
out
ljmp
jecxz
and
pop
les
loope
mov
arpl
pushf
fucomip
push
and
sbb
sbb
sbb
and
and
cmp
stc
push
lods
movsb
mov
mov
or
in
mov
lret
or
sbb
push
cwtl
pop
sub
pushf
inc
mov
loopne
in
dec
nop
adc
and
fcom
pop
adc
sub
jg
pop
and
jle
and
and
jae
adc
pop
data16
hlt
jmp
adc
sub
cmp
sbb
rorl
adc
jl
es
pop
xor
imul
sbb
outsl
or
movsl
xorl
adc
nop
clc
add
cld
shlb
mov
ds
aam
or
sub
add
stc
push
in
push
imul
in
add
or
std
push
dec
pop
in
cmp
dec
pop
cmp
sub
pusha
xor
popa
xor
add
add
push
push
inc
push
inc
push
in
inc
push
inc
push
sub
pop
out
in
sub
sbb
push
pop
cs
imul
das
or
decb
in
or
decl
pop
ds
in
dec
pop
aas
dec
and
daa
imul
and
and
bound
data16
arpl
addr16
add
pop
pop
in
add
add
inc
push
inc
push
in
inc
push
inc
push
test
pushf
insb
in
test
mov
mov
jl
in
mov
mov
mov
je
mov
mov
mov
loope
in
adcb
test
in
rcl
aad
jp
outsb
in
stos
jnp
outsl
ljmp
fildll
in
mov
mov
mov
jbe
mov
mov
mov
jecxz
out
adcb
xchg
imul
xlat
call
testl
arpl
sub
mov
sbb
test
in
and
sub
daa
sub
daa
mov
sub
inc
sub
dec
in
icebp
nop
out
fsubrp
sbb
and
add
sub
repz
das
aam
xor
push
test
xor
adc
out
lcall
icebp
insb
jmp
sub
stos
sbb
pop
adc
sbb
loop
push
test
leave
data16
or
je
sub
pop
and
pop
xchg
por
push
push
push
iret
imul
push
loop
mov
mov
xchg
out
insl
movsb
or
jp
jnp
sbb
add
and
and
sahf
repz
sti
and
or
out
daa
mov
push
mov
and
sbb
add
sbb
loope
jo
les
adc
ret
mov
mov
push
outsl
loopne
in
cli
adcb
mov
test
addps
add
cmpb
or
xor
sub
sub
or
and
inc
cli
or
sub
lret
pushf
loope
outsl
dec
and
stos
pand
push
add
sahf
adc
sbb
or
hlt
and
push
test
adc
add
pop
mov
es
pop
jl
cmc
fs
cld
and
mov
pop
push
sbb
add
dec
mov
nop
sbb
cmpsb
cli
mov
fsubl
outsl
daa
cltd
or
std
sbb
andl
or
movsb
add
or
cmp
add
and
out
cmp
xchg
or
orl
and
loopne
push
pop
jns
add
pop
and
movsb
cli
sbb
and
mov
sub
pusha
out
or
xchg
mov
fsubl
pop
or
add
and
es
roll
daa
and
cld
and
and
repz
mov
sub
cli
and
sub
out
mov
and
sub
repz
and
jle
dec
out
and
sub
out
sbb
add
and
outsl
and
outsl
pop
and
and
pop
inc
push
push
mov
lahf
and
and
sti
rorb
pop
or
and
test
pop
push
clc
or
xchg
and
adc
push
clc
sub
loope
adc
cltd
clc
jo
and
daa
or
aam
test
pop
test
pop
or
je
shrl
or
imul
sti
imul
or
imul
or
imul
or
mov
mov
adc
mov
and
adc
mov
cmp
loop
and
int3
insb
sbb
mov
sbb
dec
insb
push
fimuls
dec
insb
and
punpckhwd
or
insb
and
mov
and
dec
push
and
pop
xor
repz
and
es
sbb
mov
sbb
and
dec
es
and
or
and
and
and
dec
or
or
leave
and
lret
sub
dec
int3
cli
js
out
push
or
and
scas
fnstsw
scas
and
in
sub
and
out
pushf
and
movsl
pop
out
loop
push
adc
mov
xchg
icebp
loopne
sub
pavgb
adc
notl
sbb
arpl
fdiv
sub
adc
loopne
or
sbb
mov
mov
cli
sti
mov
or
dec
mov
add
adc
and
andb
sub
add
loopne
fildl
pop
insb
cli
push
rep
push
adc
jb
movsl
add
and
daa
jmp
jo
jp
and
and
fmulp
adc
lss
fsubl
enter
bound
adc
sub
sbb
add
pop
aam
daa
imul
shll
and
or
push
add
rcrl
int3
lock
sbb
or
addr16
sub
dec
les
cli
hlt
into
and
cli
add
cltd
popa
jecxz
mov
repz
sub
popa
adc
pusha
stos
sbb
popa
sub
mov
pusha
stos
adc
fsubl
fstpl
loop
and
xchg
sti
stos
arpl
adc
test
xchg
and
jmp
pop
sub
out
sbb
notl
jecxz
test
xchg
out
imull
popa
ret
and
bound
loopne
repnz
arpl
adc
andl
cli
repz
mov
hlt
and
test
daa
add
jl
and
movsl
std
stos
lret
sbb
jmp
test
and
dec
inc
sbb
lret
adc
jl
and
addr16
rcrb
int3
aaa
xchg
push
pusha
ret
arpl
imul
sbb
clc
and
mov
test
mov
inc
aam
mov
daa
dec
or
sbb
test
or
decb
enter
add
mov
add
repz
add
cwtl
cmp
add
cli
orb
push
loop
or
int3
push
stos
loopne
sti
adc
inc
dec
sub
addb
pop
or
int3
sbb
and
sub
pop
es
and
int3
and
loopne
sbb
sub
and
push
inc
sub
lds
cli
test
repnz
loopne
sti
cmc
pushf
pop
test
and
sbb
push
and
clc
loope
cmpsl
xchg
stc
adc
inc
cmpsb
sbb
cli
loop
int3
imull
and
dec
mov
lods
stc
push
addr16
and
sti
xor
push
or
sbb
cld
and
jl
push
sbb
push
xor
nop
data16
std
jge
stc
loop
lret
sub
stos
or
and
sbb
or
sbb
pop
jo
and
sbb
adc
sbb
fwait
pop
sbb
and
sbb
and
fisubrl
fidivs
pop
pop
push
loopne
sbb
lock
in
loopne
sti
hlt
and
pop
es
cld
mov
or
cmp
mov
add
andb
out
and
sub
or
dec
pop
pop
and
dec
out
adc
push
into
or
or
ljmp
sti
out
push
push
and
sbb
and
lret
daa
and
adc
and
lret
pop
dec
lret
push
lret
pop
adc
bound
and
sbb
not
sbb
adc
andl
and
clc
and
sbb
cwtl
and
and
cld
test
insb
lods
sub
and
and
and
pusha
gs
arpl
pop
fidivrs
fsubrl
and
pop
pushf
mov
and
and
and
sub
and
sbbb
nop
and
add
cwtl
sub
mov
imulb
ja
or
dec
mov
lea
pop
int3
imulb
int3
ss
wbinvd
loop
xorb
pop
cld
sub
pop
das
or
aam
lcall
and
add
pop
loop
es
or
insb
dec
sub
sub
lret
sub
or
pop
scas
or
aam
lcall
and
lret
and
jo
sub
and
mov
push
mov
jb
pop
lret
sub
jo
and
icebp
or
aam
test
pop
daa
lret
and
pushl
and
clc
and
sub
hlt
mov
in
mov
pop
cmc
out
pop
outsb
loop
and
lock
jne
lcall
mov
hlt
sub
or
ljmp
sub
in
stos
loopne
cmp
cmp
cwtl
cld
or
int3
es
sbb
add
ss
add
ss
les
cli
ss
add
loopne
sti
or
sub
bnd
fidivs
testb
daa
loop
and
jne
adc
sbb
and
dec
sub
add
and
mov
cli
sbb
hlt
add
or
jne
sbb
testb
push
mov
cli
and
sbb
idiv
adc
mov
pusha
and
mov
int3
es
loopne
sti
and
negb
les
jns
add
add
sub
test
sub
scas
repz
in
pop
scas
cwtl
and
out
repz
std
loop
and
mov
insb
icebp
jl
movsl
cmc
xchg
repz
loop
and
cmc
mov
jmp
out
loopne
cmc
loopne
jbe
in
testl
and
inc
mov
push
and
and
and
sbb
and
dec
sub
andb
cwtl
sti
or
int3
push
stos
loopne
sti
push
and
dec
sub
subb
cwtl
std
and
jbe
or
mulb
and
and
daa
dec
sub
andb
cwtl
sub
and
add
jo
and
test
loopne
and
jbe
mov
test
and
out
bound
and
and
lret
sbb
dec
jne
and
add
jbe
adc
add
daa
es
or
daa
and
nop
and
adc
mov
or
and
xor
loopne
repz
mov
movsl
or
xor
ss
or
sahf
cwtl
loop
and
mov
sbb
lock
ss
mov
sbb
sbb
into
repz
and
dec
pusha
and
ss
mov
jae
xchg
adc
dec
sub
andb
sub
jo
fidivs
sbb
mov
or
sbb
adc
jmp
jae
in
sub
scas
cltd
sub
and
hlt
insb
and
mov
and
or
xchg
in
mov
and
lea
lahf
adc
and
or
in
mov
and
cli
sbb
out
out
mov
and
repnz
in
and
lods
and
imulb
clc
loop
add
cwtl
cli
or
outsb
sti
and
dec
sub
xorb
and
add
pop
and
dec
sub
xorb
int3
or
mov
les
mov
es
adc
stos
loopne
sti
pop
and
and
dec
sub
adc
cwtl
sbb
pop
stos
loop
and
and
mov
and
and
mov
cli
int3
es
loop
and
and
pop
test
and
jp
insb
or
sub
and
sub
aam
pop
and
and
aam
nop
das
lret
sub
jo
sub
das
aam
push
out
and
sbb
loopne
sbb
lret
js,pt
repz
cltd
cli
sub
das
inc
cmc
pop
and
stc
mov
push
or
sub
push
loopne
sbb
pop
add
add
push
xor
test
lcall
cli
loop
sub
adc
push
adc
movsb
and
or
cwtl
movsl
stos
in
pop
and
inc
ljmp
sbb
or
loop
sbb
test
jno
clc
fwait
and
jne
sbb
and
sub
cwtl
daa
or
cwtl
push
and
ret
push
movsb
sub
sub
mov
out
outsl
and
sub
icebp
push
lret
or
aas
daa
imul
std
mov
and
adc
mov
sbb
add
jo
mov
and
mov
movl
add
adcb
and
or
stos
pushf
or
add
push
roll
sbb
push
add
adc
or
sbb
and
sbbl
adc
loopne
adc
and
andl
pop
push
inc
adc
and
or
sbb
es
mov
sub
mov
lret
add
lock
and
and
inc
sbb
cmc
repnz
xchg
inc
mov
add
and
inc
into
negb
and
dec
xbegin
cli
rorl
cli
add
stos
loopne
sti
add
xor
and
pop
and
inc
into
or
and
dec
or
mov
aam
es
dec
add
and
add
adc
adcb
adc
adc
and
test
sarl
rorl
aam
test
and
lret
sub
sub
addl
adc
out
xor
inc
dec
out
and
or
inc
cmpsl
cwtl
clc
or
sti
es
pop
orl
aam
lcall
add
add
insb
pop
or
ficoml
or
mov
jl
and
imul
insb
push
mov
adc
push
insb
sbb
sub
adc
or
jl
and
rorl
and
xchg
es
or
and
mov
sub
js
out
push
push
es
stc
and
lcall
lock
xchg
jecxz
aam
mov
repnz
sub
clc
mov
sbbb
not
lock
push
and
negl
lock
mov
inc
and
jno
jp
stc
and
mov
jnp
and
rcrl
fisubrl
loopne
mov
es
stos
das
cmc
loop
ret
loop
mull
adc
mov
pop
out
out
cmp
add
sub
push
or
repz
push
sbb
push
add
adc
sub
add
push
push
inc
daa
cmp
xchg
outsb
add
mov
mov
push
push
or
or
out
jmp
imul
pop
ljmp
jmp
pop
imul
cmpl
lret
daa
adc
push
mov
jne
cmp
or
lret
cld
push
pusha
daa
sub
and
sbb
loop
adc
and
daa
cli
and
and
sbb
sbb
and
ficoms
imul
js
adc
ret
daa
xchg
daa
adc
and
imul
or
insl
int3
daa
push
fwait
sub
imul
into
push
out
pop
sti
pusha
cwtl
and
sub
pop
sub
add
insb
in
lss
adc
pusha
adc
hlt
sbb
stos
or
push
jecxz
incb
repnz
ljmp
std
in
lods
and
lret
lret
mov
out
push
cmp
popa
mov
fcomi
pop
inc
repnz
js
or
addr16
imul
lret
dec
cltd
repnz
inc
add
inc
dec
pmaxsw
jbe
fsubs
je
add
sbb
ret
mov
lcall
insb
or
sub
sub
daa
and
add
sub
jl
sub
daa
sub
sub
and
sub
push
daa
push
insb
sub
mov
mov
push
cld
lock
add
or
ret
xor
xchg
hlt
and
sbb
and
and
and
add
mov
dec
les
mov
out
sub
out
sub
cwtl
lds
pop
in
push
nop
fidivrl
and
ljmp
cld
ljmp
imul
xor
mov
icebp
adc
popa
adc
cld
cld
call
cmc
and
and
add
in
or
mov
andb
cmpl
sbb
lcall
scas
rolb
add
mov
fbld
sbb
hlt
in
out
lock
sub
pusha
bound
int
adc
push
sbb
shll
loope
hlt
xchg
div
jg
sbb
xchg
mov
push
sub
icebp
sub
push
sbb
or
push
or
in
icebp
lods
rol
adc
xlat
pop
repnz
or
xor
mov
cltd
and
adc
lret
and
aas
pop
sub
jp
daa
push
notl
loopne
sti
imul
push
and
and
adc
sbb
pop
pop
and
sub
je
jns
mov
adc
loopne
mov
cli
fs
insb
and
or
out
add
ljmp
sbb
in
ret
bound
mov
xchg
mov
add
pusha
sub
add
cltd
sub
push
repz
mov
add
push
adc
cwtl
xor
and
push
testl
add
dec
enter
push
mov
sbb
lock
jmp
test
adc
ljmp
or
xchg
cmp
mov
mov
adc
adc
or
add
lock
cltd
sub
sub
cld
fwait
lock
sbb
adc
hlt
pusha
xchg
sub
or
decb
xchg
rorl
mov
aam
or
xor
dec
mov
cld
fildll
jbe
xor
pop
pop
fwait
xchg
hlt
adc
call
daa
fwait
xchg
jno
jbe
movsl
sub
or
jle
cwtl
add
jne
call
call
ljmp
sub
sub
or
outsl
jge
sbb
jle
pop
test
and
or
rcll
jecxz
mov
ficompl
loopne
repnz
sbb
mulb
pop
push
sub
and
pop
cltd
cli
or
iret
push
adc
fisttpl
iret
push
das
lods
shrb
inc
xor
mov
fsubrs
and
sbb
jnp
xchg
and
or
js
push
ljmp
jbe
dec
outsb
call
sub
mov
pop
test
add
adc
sub
ljmp
out
or
inc
add
in
cld
mov
in
add
decb
loopne
xor
adc
daa
mov
xor
add
xchg
and
int3
bswap
mov
pop
bound
pop
adc
outsb
in
fdiv
popf
and
sbb
ffreep
aam
inc
sbb
test
int3
pop
cld
inc
and
repz
lret
sbb
test
sub
negb
or
rclb
adc
jo
nop
mov
mov
dec
adc
pop
pop
and
add
xchg
and
aam
pop
sbb
hlt
nop
rcl
dec
lret
clc
aam
add
and
push
js
adc
mov
push
fistl
rcl
and
out
sbb
mov
lea
dec
rorl
hlt
xchg
rorl
fmuls
inc
mull
sub
popa
mov
mov
ror
in
mov
sbb
sub
iret
movsb
dec
in
mov
dec
in
pop
push
and
loope
sub
rorb
clc
loopne
fs
ret
push
add
jecxz
pop
movaps
xchg
fucom
negb
out
adc
fmull
sub
pusha
sbb
dec
sbb
mov
push
push
sub
jge
and
push
jle
in
lds
and
lret
in
daa
rcr
shrl
sub
bound
mov
js
imul
push
sbb
xor
cmp
popa
loopne
les
stos
mov
xorl
mov
or
sbb
adc
sbb
push
and
stos
adc
sub
pop
movsl
jns
lret
sub
sbb
repz
add
or
inc
clc
mov
adc
pusha
or
shlb
loopne
test
pop
popa
mov
daa
jl
or
pop
loopne
outsb
mov
daa
xor
loopne
and
adc
mov
cwtl
cwtl
jne
iret
inc
or
les
out
mov
int
or
out
loope
or
xchg
mov
stos
sbb
icebp
hlt
in
cmp
test
mov
or
and
cli
or
mov
cmpsb
repz
sbb
insb
sub
cli
sub
and
mov
lock
out
adc
xchg
ljmp
sbb
pop
and
pusha
loop
dec
sub
in
cwtl
rorb
and
fwait
out
rcl
movsb
adc
jmp
rolb
outsl
xchg
pop
pop
shrl
ja
in
test
fmuls
dec
iret
rcrl
out
dec
adc
loop
into
daa
lcall
rorl
scas
insb
jae
lret
and
xchg
or
fisubrs
push
mov
into
dec
ret
dec
ret
fstps
movsb
jne
push
adc
push
fistl
sbb
xchg
mov
push
sbb
adcl
jo
fdivp
lock
dec
icebp
sbb
icebp
ds
push
or
sahf
jecxz
push
and
cmpsb
xchg
in
sub
fisubl
pop
pop
inc
sub
adc
dec
fisttpl
or
pop
push
fnstenv
and
mov
inc
in
add
test
jl
cmp
lea
sti
and
repnz
sbb
lods
fdivrs
sub
or
sub
and
js
ret
inc
int3
push
cmp
je
loop
inc
and
mov
dec
mov
jp
and
es
iret
or
jmp
add
rclb
out
push
mov
sub
cmp
or
or
je
sub
adc
loop
aas
cld
mov
mov
adc
stc
cltd
cmp
jb
cmc
or
pop
enter
hlt
arpl
adc
stos
inc
add
lds
fdivs
repnz
cmp
or
fcompl
test
addr16
repz
psrlq
enter
lret
std
jl
or
cmpsb
fisubrs
xchg
xor
add
push
and
mov
ss
call
inc
sbb
jnp
shlb
adc
cmp
dec
adc
jmp
les
vcmpsd
ljmp
mov
push
cwtl
sub
sbb
sub
sbb
cmc
sub
adc
adc
xchg
pop
call
loopne
sbb
in
pop
and
and
adc
insb
adc
or
fdivs
or
stos
xor
adc
sar
stos
adc
stos
and
and
gs
ss
sbb
xor
push
push
inc
sub
sti
subb
addl
sub
setns
sbb
add
or
sub
sbb
faddl
jno
daa
cwtl
cltd
fwait
stos
shll
mov
and
fiaddl
and
and
pop
or
mov
cld
push
jg
movsb
push
test
or
loopne
inc
and
adc
mov
mov
testb
dec
in
pop
pop
jl
pop
or
and
hlt
push
ret
sti
scas
roll
std
ret
jge
cmpsl
stos
outsb
jl
and
mov
loopne
sbb
mov
cli
or
lea
xchg
add
aam
mov
sti
add
rcl
into
or
sub
lds
outsb
lret
imul
adc
rolb
push
arpl
enter
pop
aas
inc
pop
imulb
enter
shrb
xchg
or
lods
or
rcll
adc
test
imul
call
or
test
cmp
pop
test
or
daa
sbb
adc
es
dec
and
push
cmp
sbb
sub
or
and
adc
mov
movsb
pop
ficoml
push
out
pushf
add
adc
inc
fistpl
adc
xchg
icebp
fwait
pop
clc
int3
sbb
dec
sbb
add
push
test
sbb
outsl
or
ljmp
pop
ret
sbb
cmpsl
sub
dec
es
or
bound
and
hlt
xchg
out
adc
xor
pop
fmull
cwtl
inc
sbb
inc
imul
jo
adc
pop
dec
sub
push
and
adc
sub
and
cmp
out
adc
sub
lcall
push
test
fstps
rclb
adc
push
pushf
add
stc
cld
adc
int3
pop
xor
adc
repnz
shrl
add
xor
js
dec
test
in
xchg
sub
mov
popa
cld
movsb
stos
or
stos
pop
dec
ret
out
xchg
loopne
mov
rcr
lock
pop
or
outsb
outsl
loop
pushf
negb
push
or
adc
pushf
push
mov
cli
and
mov
cmc
sbb
aas
enter
ffree
sbb
inc
cmpsl
xor
jo
jge
lret
mov
jl
out
add
test
adc
nop
les
repnz
pop
jecxz
fisubl
dec
mov
imul
stos
sbb
sbb
daa
lock
adc
or
inc
enter
mov
sbb
mov
mov
sar
out
scas
sbb
or
inc
add
push
push
testb
xchg
pop
cwtl
sbb
iret
and
out
loop
and
movsl
mov
sub
in
cltd
pop
lcall
pop
xchg
rclb
jl
and
sbb
sahf
xchg
xor
pop
xchg
into
push
dec
insb
dec
ja
mov
cmp
cmp
sub
pop
adc
es
ret
or
or
loop
mov
test
shll
sarl
push
dec
shl
movl
imul
clc
dec
add
hlt
adc
and
pop
into
push
ljmp
and
sub
lret
lods
pop
inc
nop
orb
inc
pop
sub
push
push
into
adc
out
fmul
push
inc
arpl
lcall
xchg
shrl
fcoms
sub
in
imul
cli
sub
iret
daa
and
mov
fcoms
sub
sbb
fcomps
add
into
sbb
sbb
sbb
iret
xor
xchg
xchg
adc
mov
cmpsb
inc
outsb
daa
jmp
mov
push
iret
sub
or
push
sub
and
and
and
cmp
adc
dec
stc
int3
outsb
fs
or
pop
sahf
cwtl
fmuls
sahf
sbb
sbbl
sahf
lods
jno
mov
sbb
and
outsb
xchg
outsl
xchg
scas
cmpsb
sbb
or
cmc
mov
mov
jnp
test
add
xchg
pop
imul
fsubs
lahf
and
or
nop
fcoms
pop
test
rolb
sub
in
dec
rorb
pop
sbb
sub
xchg
leave
mov
dec
adc
dec
adc
push
sbb
dec
shl
fisubs
cwtl
pop
push
xor
pop
loopne
movsb
adc
or
shlb
loopne
lcall
adc
outsl
xor
and
cmp
sbb
popa
jl
imul
out
xor
int
adcl
pop
loopne
jae
scas
pop
and
lahf
mov
cmpsb
xchg
pop
je
and
shrl
lds
and
loopne
mov
push
stos
inc
fcompl
mov
and
adc
inc
mov
sub
int3
push
ficomps
outsl
mov
shrl
or
xchg
and
leave
push
rcl
iret
cwtl
loop
fistl
xchg
fwait
js
add
dec
jne
sbbb
arpl
push
js
mov
sbb
pop
bound
fsts
rorl
aad
and
imul
push
push
lcall
push
fnsave
popf
daa
aaa
call
testb
shl
jl
mov
dec
ss
enter
cltd
mov
shll
cld
jl
cld
lock
dec
test
in
js
loopne
jbe
mov
xorb
pop
loope
adc
sbb
popf
push
pushf
into
xchg
ljmp
rsqrtps
cld
rcll
add
adc
sub
xchg
mov
adc
fisubl
sbb
sub
data16
push
cmp
or
lahf
sub
mov
and
shlb
sbb
xchg
sub
out
adc
or
sub
popa
pop
sub
fcoml
dec
sbb
mov
icebp
mov
mov
sub
jae
lret
push
in
sub
pop
sub
std
les
sub
lcall
bound
cwtl
mulb
sti
xchg
cli
sub
daa
fwait
cmpsb
in
movsl
daa
mov
sub
and
sub
lcall
push
push
sub
test
jmp
fildll
fcmovu
and
imul
sbb
push
push
out
cmc
loopne
push
loopne
adc
movsb
adc
fistl
mov
and
sub
mov
pop
and
cs
ret
dec
sbb
std
and
fildll
lret
out
pop
lcall
mov
sub
shl
and
mov
dec
or
into
jnp
stos
pop
adc
and
pop
mov
or
sbb
enter
popl
xor
inc
mov
andb
in
jns
flds
repnz
iret
iret
push
testb
cmpsl
aaa
aad
negb
stos
lcall
fsub
sbb
fwait
pusha
sub
mov
repz
in
or
cltd
data16
sub
mov
std
out
mov
sub
arpl
cli
in
sub
hlt
in
in
daa
fsubr
push
pop
or
push
cli
out
pop
adc
pop
sbb
hlt
daa
adc
and
and
movhps
pusha
pop
xchg
sbb
and
add
xchg
mov
movsb
or
and
pop
daa
jo
xchg
in
hlt
sbb
sbb
and
negb
and
xchg
and
and
loop
lock
adc
mov
sbb
pop
and
movsb
inc
add
or
clc
dec
add
loop
sbb
sub
leave
js
push
push
enter
and
inc
sbb
pop
push
pusha
adc
sbb
popf
sbb
cld
add
popf
pusha
div
sbb
and
or
pusha
sub
adc
lds
sbb
xchg
adc
cmc
xchg
adc
adc
or
mov
sbb
sbb
pushf
and
lds
repnz
sbb
and
fs
lret
int3
sbb
sbb
push
sbb
jl
out
add
test
cld
and
insb
push
sbb
and
or
daa
adc
ljmp
inc
movsl
sbb
dec
push
adc
adc
mov
movsb
or
and
cld
int3
add
jg
enter
and
inc
out
jo
add
push
enter
and
push
and
mov
and
or
cld
mov
daa
jbe
sbb
pushf
and
lds
clc
add
rcrl
sbb
popf
adc
shrb
sub
shrb
pushf
and
lds
or
inc
pusha
or
sbb
and
or
cwtl
clc
std
repnz
add
cli
rclb
and
dec
and
mov
sub
sbb
repnz
cmp
js
xorb
test
out
mov
or
inc
rep
sbb
and
daa
out
sub
adc
jmp
pop
or
adc
ljmp
psubb
cld
and
pop
and
push
pusha
repnz
dec
mov
push
dec
sbb
pushf
and
lds
or
add
pop
sbb
sbb
adc
icebp
or
repz
and
pusha
sub
pop
fadds
subb
rcrl
imul
ret
pushf
and
inc
add
pop
sub
sbb
setnp
orb
sbb
sbb
sbb
cli
push
pusha
hlt
repnz
and
adc
or
and
sbb
andl
pop
jl
out
fildl
incb
mov
xchg
pop
out
clc
sbb
push
inc
shll
inc
xchg
sub
sbb
stos
sbb
adc
adc
xchg
add
add
pop
addr16
test
sub
sbb
mov
jno
scas
and
scas
inc
fadds
ret
and
pop
add
pop
fiaddl
xor
and
in
push
or
adc
sbb
in
cld
sbb
pusha
add
ret
or
add
inc
in
mov
sbb
les
scas
or
fadds
dec
in
mov
ljmp
repnz
add
fcomps
mov
daa
lock
orb
daa
sbb
sbb
insb
or
and
scas
sahf
popf
in
and
pop
ljmp
or
inc
xchg
pop
in
inc
outsl
lret
and
add
adc
bound
adc
and
cld
inc
cmp
les
mov
enter
and
inc
out
jo
add
add
enter
and
out
in
out
out
js
out
sub
out
bnd
mov
pop
push
push
ljmp
add
loop
hlt
and
or
shl
and
and
lock
rol
int3
adc
sbb
cmp
cld
out
push
push
xchg
and
repnz
repz
mov
sbb
popa
std
adc
mov
ror
fisttpl
push
sbb
add
add
notb
clc
jno
inc
xor
in
sti
lock
or
ja
cli
sub
sbb
add
js
ficompl
mov
lret
jo
push
push
pusha
daa
push
int3
add
dec
push
and
out
int3
and
pop
pop
lods
pusha
repnz
fwait
and
push
arpl
mov
push
pop
adc
sub
in
or
or
hlt
mov
add
repz
push
mov
pop
pop
into
fwait
mov
movsb
pop
mov
pop
fwait
daa
sub
f2xm1
dec
and
adc
sbb
mov
pop
add
and
stos
idiv
or
inc
add
pushf
cmp
and
and
push
sbb
cvtdq2ps
or
pusha
or
fmull
cmp
mov
and
pop
push
lret
and
sbb
rolb
and
lock
loopne
jo
cmp
sub
insb
sbb
sti
adc
and
into
sbb
push
sbb
cmp
or
jo
sub
cmp
push
dec
es
dec
mov
sbb
add
sbb
cmp
hlt
dec
movsb
push
out
cmp
sbb
hlt
push
clc
xor
sbb
jo
mov
cmp
dec
es
mov
and
sub
adc
fs
add
mov
bound
sbb
or
repnz
and
cld
mov
sub
mov
fdivrp
pop
adc
leave
repz
mov
popa
les
push
sub
mov
mov
pusha
push
add
and
xchg
les
aad
add
daa
cli
dec
ret
adc
push
or
pusha
pop
call
sbb
ljmp
adc
sbb
xor
decb
fsubrl
sub
sbb
imul
or
fwait
aas
mov
rclb
or
aas
push
adc
push
pusha
cmp
repnz
push
mov
pop
xchg
fucomp
cmpsb
and
add
hlt
neg
fimull
std
sarb
hlt
hlt
test
mov
sub
pop
pop
insl
in
nop
dec
test
and
or
push
loopne
nop
push
loopne
adc
dec
out
add
sbb
arpl
push
and
mov
mov
in
mov
lods
and
cld
jp
adc
xor
sub
and
jae
jns
fwait
sbb
jmp
xor
les
add
jle
mov
xchg
pop
loop
sub
pop
mov
jp
sbb
or
pop
add
insb
cld
mov
lret
jne
sub
pusha
repnz
jle
adc
adc
daa
mov
sbb
data16
adc
fwait
and
push
lcall
cli
dec
roll
out
ds
adc
in
incb
pop
adc
lret
cld
jo
cli
jo
and
adc
mov
fcompl
stos
shll
in
lcall
or
pop
or
pusha
aam
sbb
leave
repz
subl
inc
daa
loop
and
inc
mov
lret
sub
lret
pusha
pop
mov
sub
push
loopne
xchg
push
loopne
mov
out
or
and
or
jge
pop
mov
jo
adc
sbb
cld
add
and
imul
std
add
mov
sbb
mov
jmp
cmc
pop
cld
mov
mov
bound
out
jge
sub
mov
cmp
insb
pop
jp
and
sbb
xchg
and
or
adc
and
and
dec
les
dec
push
lock
adc
add
pop
les
pusha
lock
hlt
arpl
loop
sbb
out
add
cmp
or
jge
sub
daa
dec
push
and
cld
adc
adc
or
mov
adc
xchg
pop
sbb
or
inc
subl
test
add
aas
cli
mov
and
push
pusha
lock
out
sti
push
push
gs
daa
pop
movsb
call
sbb
lret
ljmp
push
dec
and
pop
in
mov
les
std
add
clc
std
clc
dec
out
std
lock
std
pusha
js
sub
and
adc
sbb
les
push
add
pushf
sub
fimuls
jo
in
mov
sbb
add
movsb
cmp
into
fwait
cmp
and
out
adc
in
pslld
and
sub
sub
dec
idiv
sbb
mov
and
and
es
sbb
mulb
adc
push
or
loop
mov
push
pop
pusha
cld
add
and
hlt
sbb
movl
popa
fsubrp
cmpsb
and
and
inc
add
pop
cli
loopne
out
std
sbb
or
inc
repnz
mov
mov
add
add
cli
or
ja
cmp
or
in
sub
test
imul
pop
mov
lret
and
mov
lret
and
les
mov
lret
data16
hlt
mov
lret
gs
mov
jnp
js
xchg
fcompl
jo
xchg
sbb
jl
and
movsb
maxps
adc
hlt
jne
or
add
cmp
cmp
cmp
or
jbe
cmp
or
outsl
or
push
fsubl
mov
fcompl
fcoml
fmull
faddl
fdivrl
fdivr
jo
ja
fdiv
jo
insb
jo
mov
cmp
or
mov
and
sbb
sar
mov
fmull
pushf
sbbb
repnz
pop
daa
cli
adc
repz
pop
les
loope
pop
out
shrb
jb
and
sub
adc
sbb
loopne
shrl
sub
lret
jl
or
cmc
popa
add
push
in
leave
and
clc
mov
test
hlt
repnz
pop
pop
inc
bound
adc
js
int3
fsubl
jo
pop
push
and
push
pop
pop
in
insb
mov
sqrtps
adc
add
cli
push
pusha
add
push
sub
sub
clc
int3
std
and
dec
and
enter
sti
sbb
lock
addr16
jp
and
mov
data16
push
adc
mov
sbb
jg
xchg
daa
push
mov
in
mov
push
fsubp
in
pop
add
fistpl
pushf
sbb
xchg
jmp
ror
imul
or
les
sbb
lret
add
in
and
sbb
insb
call
push
hlt
rorb
data16
mov
stos
dec
cmp
sti
push
es
cmp
dec
cmp
mov
in
mov
sti
adc
dec
or
dec
mov
mov
dec
dec
adc
clc
or
xor
jp
daa
shrl
icebp
sbb
sbb
and
cmp
fmul
fsubl
pop
sbb
aad
and
shrl
and
sub
mov
or
mov
sub
decb
cli
jp
sbb
lock
out
cld
mov
sub
test
es
dec
or
sahf
inc
add
leave
adc
pop
sbb
out
pop
add
mov
or
in
sti
jns
loop
jne
pusha
and
clc
pop
and
into
lock
in
std
and
cmp
and
and
pop
jl
mov
test
leave
and
add
adc
cmp
jp
daa
adc
cli
xor
cld
leave
jno
dec
cmp
pusha
and
and
jo
fisubrs
adc
cld
dec
push
add
clc
icebp
clc
lods
push
or
adc
xchg
lret
in
jns
cmpsl
add
lock
jo,pt
cmp
push
jno
cld
stos
and
adc
adc
or
pushf
sub
or
or
xchg
and
mov
cmpsl
hlt
dec
nop
sub
mov
jg
add
jo
mov
push
negb
pop
mov
jo
sbb
in
repz
sbb
or
loop
pop
repz
pusha
cld
cli
cli
xor
jne
icebp
sahf
test
pop
je
or
data16
daa
mov
cmpsb
pop
mov
bound
and
adc
adc
enter
imulb
and
and
and
hlt
repz
push
mov
cwtl
mov
mov
pop
cs
push
sub
jl
aas
or
xor
inc
repnz
pop
pusha
and
daa
jp
and
adc
sti
inc
in
or
cmc
and
mov
int3
adc
pop
adc
adc
clc
sub
cli
addr16
adc
mov
test
fwait
clc
das
sub
in
repz
and
mov
or
les
xor
lret
pusha
adc
or
mov
movl
hlt
push
add
cmpsl
pop
int
and
sbb
xchg
pusha
pop
ja
repz
push
adc
or
add
lret
cmc
and
movl
xor
push
cmp
js
push
pop
imulb
sbb
push
loopne
push
push
loopne
aaa
adc
or
add
adc
cli
pop
into
notb
inc
mov
leave
sti
cld
mov
loop
adc
adc
out
cmp
mov
cmp
in
mov
pop
les
sbb
in
mov
add
ret
and
out
std
adc
pusha
mov
or
sbb
add
adc
clc
es
pop
movsb
call
pop
push
pop
int
int
loopne
mov
cmpb
dec
and
les
or
and
cld
adc
pop
lret
pop
cli
inc
lea
pop
sti
push
fwait
mov
std
xchg
pop
adc
push
mov
cli
or
lods
mov
out
lock
in
cmp
dec
mov
dec
hlt
in
xor
dec
outsl
in
call
push
addr16
push
mov
push
pop
sti
push
pop
mov
jnp
seta
or
adc
cmovg
js
adc
in
sbb
mov
mov
and
sbb
les
mov
and
les
bound
in
lret
loope
arpl
mov
sbb
and
sbb
push
nop
lock
leave
js
or
jae
jns
inc
fwait
push
rcrl
fwait
push
aaa
fwait
push
mov
push
sub
in
enter
dec
in
dec
in
fsubp
dec
pop
in
xlat
in
push
in
int3
in
dec
in
leave
in
inc
in
ret
aas
sub
in
jl
pop
stos
clc
enter
or
jae
cmp
imul
shll
repz
and
adc
std
push
mov
fwait
pop
jl
fiadds
or
fwait
jne
add
clc
movsl
fwait
adc
or
into
and
test
imul
movsl
fwait
and
fwait
sbb
in
maxps
clc
sbb
dec
mov
lods
jo
in
jo
pop
pusha
imul
movsb
pusha
movsl
in
movsl
and
pop
pusha
movsl
popf
pusha
movsl
fisubl
adc
movsl
push
pusha
movsl
xchg
pusha
movsl
iret
pusha
and
sub
pop
roll
pop
add
adc
orl
js
mov
lret
xor
push
mov
or
lret
cmp
dec
dec
adc
pop
pop
daa
mov
leave
sbb
out
and
or
mov
mov
mov
mov
adc
adc
xor
lret
or
out
lds
mov
mov
cmpsl
sub
loopne
and
mov
loop
in
movsb
jo
pop
pop
and
adc
les
sbb
mov
fwait
sbb
jns
fwait
and
adc
pop
into
clc
testb
std
lock
xor
or
daa
movb
and
pop
and
and
pop
shll
sbb
adc
adc
shrd
cmpsb
and
and
cli
data16
cli
into
lock
clc
repz
shrl
pop
fwait
repz
or
in
jo
in
mov
and
or
add
pop
cli
push
add
add
clc
xchg
sbb
push
pop
sbb
sub
jl
pop
or
insb
pop
pop
loop
add
mov
cmp
sti
mov
call
adc
repnz
sbb
adc
cltd
pop
jmp
out
mov
es
push
jae
in
or
push
sbb
call
stos
or
sub
or
push
or
xchg
and
pcmpeqw
movl
test
clc
jge
sbb
nop
fcmovbe
sub
adc
push
and
mov
sbb
jnp
je
cmp
sti
jne
mov
add
cli
or
pop
dec
xchg
dec
jecxz
lock
xchg
push
repnz
out
sbb
pop
cmp
or
inc
sub
repnz
das
pop
push
or
adc
repnz
or
movsb
mov
or
repz
cld
repnz
rorl
mov
adc
and
inc
shr
mov
pop
add
pop
mov
fwait
and
fwait
adc
fwait
pop
insb
or
add
pop
test
mov
daa
jb
hlt
imul
les
sub
fwait
adc
into
sbb
cli
std
adc
sub
or
incl
test
in
int3
xor
cld
and
cli
pushf
sbb
adc
jl
fsubrp
pusha
and
and
sub
push
in
leave
and
and
sbb
sub
sbb
adc
sti
and
xchg
loop
and
pop
push
loopne
repz
push
and
sub
mov
and
leave
into
in
sti
mov
addr16
dec
add
cli
jo
sub
leave
jnp
in
add
leave
icebp
cli
xchg
adc
clc
and
es
mov
dec
test
testl
popf
cli
and
cli
sar
add
int3
sub
or
xor
jge
and
jns
pushf
dec
repnz
jno
or
scas
pushf
dec
iret
adc
jno
sti
sub
imul
lret
cld
ljmp
bnd
pop
pusha
mov
pusha
movsl
loopne
movsl
popa
pusha
movsl
frstor
pop
pusha
movsl
pusha
movsl
push
pusha
movsl
iret
pusha
movsl
dec
pusha
movsl
les
inc
pusha
movsl
shll
pusha
movsl
mov
movsl
mov
movsl
sub
sub
dec
cmp
cmp
or
bound
cmp
or
pop
dec
jne
int3
xor
adc
dec
push
in
fwait
lock
and
imul
les
add
ret
and
adc
les
std
lock
adc
bound
arpl
in
push
lcall
loop
cli
sti
icebp
in
jo
pop
sub
or
cmc
jo
add
cmp
loop
cli
mov
push
sbb
add
and
or
les
daa
or
pop
in
cli
pop
repz
sbb
cli
pcmpeqw
pusha
pinsrw
and
out
clc
sbb
adc
sub
pop
hlt
pusha
repnz
test
insl
in
test
movsb
out
repnz
sbb
push
push
mov
nop
adc
mov
sub
andl
in
std
test
sub
test
sub
test
out
std
inc
dec
out
std
inc
les
mov
sbb
sub
es
sub
adc
mov
jl
and
and
add
add
and
jno
pusha
sbb
mov
cli
in
fsubl
jo
out
packsswb
cmp
or
sbb
cmp
sbb
adc
shrd
mov
les
or
xor
cmc
arpl
add
cld
shll
push
and
lock
stos
push
and
push
mov
push
repnz
sti
push
sbb
push
xchg
mov
adc
adc
dec
pmulhuw
mov
add
sbb
es
push
stc
daa
loop
and
das
pushw
movsb
xchg
mov
and
and
mov
popf
sbb
fiaddl
mov
adc
bndldx
or
pushf
sub
fiadds
es
sbb
subl
daa
loop
sub
cli
cli
clc
xor
lret
int3
out
data16
or
leave
jo
inc
fsubl
in
int3
out
data16
and
or
insb
pop
les
cli
and
hlt
std
or
adc
sti
pop
add
daa
loop
sub
cmp
mov
add
sub
jo,pn
pop
mov
add
sub
es
mov
mov
loop
sub
xchg
lcall
pop
cmpsl
notb
bound
es
lods
pop
in
cmp
daa
lret
mov
ret
aas
add
add
in
fwait
outsb
jo
test
xchg
or
aas
sub
pop
add
repz
push
mov
pop
pop
in
cs
adc
std
or
add
pop
cld
sbb
daa
loop
sub
daa
jp
adc
cli
data16
xchg
and
int3
sbb
push
mov
out
mov
lea
in
mov
sbb
and
add
divb
leave
jno
inc
movsl
in
fisubrl
pop
punpckldq
pop
and
sbb
std
adc
or
add
std
cld
mov
sub
sbb
pusha
hlt
add
and
pusha
push
movsl
sub
in
cli
and
and
std
lcall
adc
adc
jl
sbb
push
cmp
sar
pushf
adc
sub
andl
hlt
adc
adc
lds
adc
and
mov
movsb
dec
cld
jl
adc
rorb
pop
mov
jmp
les
cli
sub
sbb
add
mov
punpckhbw
or
cli
jp
sbb
add
in
fwait
and
and
mov
fbld
pop
loopne
sti
pop
push
pusha
and
xor
shlb
or
out
mov
bound
lock
cld
or
adc
into
or
jl
or
cmpsl
and
cli
es
sub
jo
in
in
dec
imul
hlt
bound
cmp
cmp
notb
pop
adc
or
dec
or
pusha
dec
repz
mov
pop
repnz
push
adc
lock
mov
mov
push
in
leave
pop
shll
repz
adc
push
mov
jo
add
sbb
inc
ret
adc
pop
sub
pop
add
jl
sti
and
adc
pushf
sub
mov
js
and
lock
out
inc
or
cli
std
and
and
sbb
test
daa
cmpsl
push
and
mov
xchg
jmp
add
psrlq
pushf
pop
or
or
or
inc
mov
adc
std
jae
neg
out
push
add
pop
outsl
mov
or
sbb
rcrb
shll
hlt
push
or
jno
or
push
adc
xchg
pusha
cmp
jns
ficompl
in
imul
repnz
and
or
sysret
mov
pusha
add
shll
notb
fsubrp
in
js
and
sub
bound
mov
push
sbb
and
les
sbb
push
cltd
sub
subl
adc
mov
subl
mov
sti
subb
pop
sub
sub
cld
fs
fwait
pop
jl
fdivp
jo
cli
out
and
mov
sub
and
ljmp
cmpsl
and
push
sbb
mov
adc
jl
mov
std
adc
std
or
shll
add
imul
mov
add
mov
out
push
xor
mov
das
data16
push
pop
sti
push
fdivr
push
pop
sti
push
aad
push
push
sti
push
into
sti
cmp
dec
inc
adc
incb
lock
sub
out
insl
loopne
push
mov
push
in
jp
mov
push
hlt
adc
and
hlt
mov
movsl
fwait
add
sub
pop
clc
leave
repz
sub
sti
sbb
and
sub
leave
and
or
sub
jo
es
leave
pop
nop
add
cld
and
clc
adcl
imulb
xor
cmp
adc
pcmpgtd
pop
daa
jmp
fcompl
jo
push
jo
shlb
pop
push
jo
int
int3
in
cli
sbb
add
xchg
and
movups
mov
adc
fisubrs
addr16
jne
sub
movsl
daa
pusha
movsl
pusha
mulb
and
pop
repz
mov
or
pop
es
mov
mov
clc
fdivp
xor
scas
daa
jle
ret
ljmp
and
insb
sbb
adc
or
add
pop
cld
out
cli
cli
repz
hlt
and
and
or
pop
pop
pop
and
or
pop
ds
movsl
popf
jecxz
add
sbb
adc
cli
adc
or
sub
or
les
and
sub
pop
fs
in
repz
adc
add
and
psrlq
and
sbb
repz
fsubrp
movsb
maxps
sub
in
cli
and
and
cli
jne
sbb
adc
sub
and
or
insb
sbb
sti
cli
std
into
or
or
or
cmp
int3
hlt
data16
sbb
or
push
xor
sbb
das
sub
and
shl
push
and
fs
sbb
lock
arpl
fs
dec
or
sbb
insb
mul
push
in
aam
lahf
and
and
or
push
in
mov
add
insb
jmp
movsl
fwait
lock
cmc
movsl
pusha
daa
out
lock
in
std
daa
dec
les
std
and
std
sbb
adc
or
cmpsl
cmc
pop
adc
and
push
cli
pop
jne
or
or
and
movsb
push
daa
mov
cmpsl
or
cmpsl
jns
lock
inc
xchg
pop
daa
addr16
pop
lock
popf
sbb
adc
in
mov
sbb
aam
jecxz
ljmp
scas
xor
insb
add
sbb
cli
pop
aas
or
repz
cmc
in
repz
idivl
push
in
in
mov
lret
pop
daa
push
or
or
out
or
and
dec
cs
push
sbb
into
pop
stc
mov
mov
sbb
shll
adc
sub
push
fstps
dec
adc
in
cmpsb
pop
jp
hlt
into
jbe
cli
outsb
in
test
hlt
dec
lret
jno
sbb
xor
repz
cmpsb
leave
mov
shll
add
adc
repz
push
pop
leave
repz
cld
leave
repz
in
das
add
xchg
sub
inc
jo
pop
les
cli
push
mov
sub
adc
xchg
fwait
cld
insb
adc
test
repnz
or
es
sti
add
sbb
push
or
stc
mov
insb
icebp
movsl
fwait
cld
scas
lret
loope
in
lds
sti
pop
mov
lock
xor
or
cmc
bound
add
and
or
and
adc
sbb
call
mov
cli
jne
or
lock
add
xchg
pusha
std
or
insb
sbb
jl
pop
or
insb
pop
pop
or
mov
es
repnz
and
gs
in
cli
test
pop
std
adc
lret
arpl
addr16
sbb
std
sbbb
sbb
movups
mov
fmulp
mov
add
fdivr
inc
and
pop
std
stc
dec
les
xor
inc
faddl
add
sar
hlt
or
in
jo
pop
sub
mov
and
and
or
insb
or
add
adc
test
clc
std
jp
jl
das
lret
pop
or
loopne
hlt
mov
int3
add
pextrw
mov
ret
in
add
and
in
je
and
jp
or
pusha
lretw
sub
and
leave
repz
mov
and
sub
and
lods
push
in
insl
mov
mov
es
leave
or
pop
mov
hlt
pusha
sub
int3
punpckhwd
and
add
sub
pop
and
mov
or
loopne
insl
cwtl
add
js
sub
hlt
cli
lock
lret
addr16
and
cltd
jecxz
adc
pop
sbb
or
dec
sbb
cltd
add
sub
repnz
sub
cmp
add
xchg
mov
xchg
and
lock
cli
adc
sub
pop
in
pusha
and
and
in
add
push
in
rolb
xor
call
add
push
stc
fildl
loop
lods
sbb
and
mov
aas
sbb
sbbb
in
and
imul
pop
cs
adc
test
and
or
and
jne
add
mov
jno
in
xor
mov
daa
in
xchg
xchg
sahf
and
in
xchg
xor
sub
mov
and
mov
xchg
shll
lods
or
mov
in
ds
fstl
adc
out
xchg
in
pop
adc
int3
xchg
out
imul
lret
in
in
mov
in
test
test
push
in
inc
adc
push
cmp
sub
push
sbb
sbbb
packsswb
jge
enter
mov
int3
pop
in
sti
test
push
ds
imul
mov
mov
add
add
cmp
pop
pusha
and
hlt
nop
cli
ljmp
sbb
push
pushf
pop
sub
sbb
xchg
sbb
jg
jle
xchg
jns
jo
sbb
sbb
sahf
jmp
sarb
mov
sbb
popf
sub
les
negl
sti
jg
andb
xchg
mov
lret
and
cmpsl
sbb
fnsave
hlt
movsb
stc
and
sbb
or
in
mov
and
mov
lret
mulb
icebp
sbb
test
pushf
dec
lret
push
and
mov
lret
stc
mov
sbb
les
sbb
sub
movsb
sbb
xchg
sbb
les
mov
lret
incb
mov
jo
pop
xchg
idiv
and
call
sbb
sbb
mov
ljmp
outsb
enter
and
inc
andl
and
sbb
les
mov
or
fcmovne
jb
jbe
stc
sbb
jl
sbbl
or
movsb
adc
xchg
sbb
sbb
or
sbb
jo
ja
std
sbb
les
mov
lret
cli
cli
mov
test
or
sbb
mov
sbb
les
mov
lret
xchg
and
sbb
les
mov
sbb
movsb
sti
and
test
mov
lret
sbb
les
sub
ja
jp
jle
push
sbb
les
mov
lret
and
cmpsb
sbb
ljmp
lret
and
pop
in
mov
lret
sub
test
and
fwait
les
fiadds
jnp
mov
movsb
out
xchg
dec
rolb
ljmp
jnp
cli
jg
ljmp
jecxz
ljmp
lret
adc
les
mov
sbb
movsb
mov
ljmp
les
mov
lret
icebp
and
fwait
sub
cli
ljmp
sbb
nop
push
mov
ljmp
div
dec
mov
sub
sbb
xchg
xchg
lret
or
push
adc
xchg
movsb
sbb
fwait
sbb
fldt
js
jae
sub
jnp
jmp
ret
ljmp
loop
ljmp
push
mov
or
enter
and
mov
lret
xchg
and
fwait
les
and
cmpsl
stos
lret
outsl
lahf
test
and
sbb
mov
lret
adc
adc
mov
lret
outsb
fildll
jns
jge
add
add
xchg
and
mov
and
mov
adc
popf
and
sbb
ljmp
lret
outsl
mov
sbb
sbb
mov
xchg
hlt
mov
add
mov
push
insl
ljmp
sbb
adc
or
jno
ljmp
or
mov
in
fsubr
push
dec
lea
stos
sub
ror
stos
movsb
push
in
pop
sub
stc
sbb
adc
ljmp
ljmp
stos
and
pop
out
jae
ljmp
adc
shlb
popa
add
fadds
lret
xchg
sbb
mov
in
rol
aad
je
sub
insb
and
repnz
mov
ret
xor
in
jmp
roll
and
test
adc
or
and
call
xchg
fwait
imul
lahf
adc
add
ret
out
xchg
arpl
add
cmpsb
lods
push
movsb
mov
sub
sbb
das
mov
add
shlb
mov
cmp
cltd
mov
sub
jecxz
jb
xchg
mov
dec
shr
ret
out
cld
sti
mov
call
in
push
lea
mov
cmp
call
mov
mov
adc
mov
sub
icebp
or
push
clc
scas
stc
mov
jge
xchg
adc
in
push
add
xor
sarb
test
out
in
mov
std
xor
ljmp
mov
ret
lret
pop
std
test
jl
xchg
sbb
and
in
cwtl
shl
push
into
inc
fsubl
inc
in
jp
adcb
scas
in
push
xchg
das
or
in
mov
mov
adc
aam
mov
sahf
sub
in
inc
or
test
scas
mov
lea
jecxz
daa
sbb
mov
cmpsl
xorl
addr16
in
outsl
mov
in
sbb
sbb
aam
cmp
pop
sub
xchg
hlt
xor
pop
in
push
mov
movsl
mov
dec
mov
cmp
stos
mov
adc
mov
cmp
xor
leave
and
mov
cld
adc
aam
or
push
adc
clc
jae
fwait
pop
addr16
inc
mov
cli
jo
insl
in
lods
aad
jb
into
out
sbb
leave
pop
clc
in
and
imul
jle
mov
in
and
ret
in
rorb
xor
lods
mov
xchg
lahf
repnz
or
cmp
push
outsl
dec
movsb
scas
inc
xchg
in
mulb
adc
in
push
aad
xor
sbb
out
data16
and
mov
mov
adc
shlb
test
insl
insb
aaa
cmc
push
arpl
sahf
or
sbb
in
lds
cli
shrl
lods
jnp
in
gs
loop
in
xchg
mov
pop
cmp
in
and
jge
in
outsl
sti
daa
mov
xor
cltd
test
out
gs
xchg
pop
in
and
jecxz
pop
xor
in
add
cmp
cmp
xchg
jp
or
fdiv
adc
cmp
or
inc
xchg
std
ljmp
pop
in
rclb
push
mov
clc
jo
push
je
pop
mov
add
in
xor
imul
pop
mov
enter
mov
xchg
mov
leave
mov
outsl
aaa
adc
xchg
pop
push
adc
push
mov
js
jns
jo
fstpl
adc
adc
in
scas
cs
ret
mov
movsl
cld
fwait
push
sarl
xchg
iret
gs
jecxz
sub
inc
push
jge
imul
cltd
inc
xorl
pop
in
add
mov
out
or
sbb
mov
cs
cld
xor
pop
repz
in
mov
adc
ljmp
rol
loop
jmp
sub
in
adc
sub
jnp
cmp
cmc
lret
loopne
fwait
mov
cmpsl
mov
lret
test
pushf
in
sti
jbe
fwait
mov
push
lods
mov
cmp
call
push
mov
hlt
xchg
push
fildl
repz
or
cmp
int3
ret
imul
dec
jl
imul
cmp
pusha
xchg
clc
sbb
inc
in
ljmp
mov
push
test
cmp
sub
notb
sbb
jl
stc
int
in
clc
cmp
imull
add
mov
stos
push
dec
dec
bound
je
imul
out
xchg
rclb
adc
cmpsb
test
mov
shll
psubq
mov
loope
decl
mov
lock
test
in
and
xor
es
inc
cld
jne
rcrb
dec
cmp
test
in
aaa
lds
outsl
outsl
push
movsl
ds
loope
adc
xchg
mov
mov
xor
stc
sahf
in
cltd
sti
mov
inc
movsb
outsl
addr16
sbb
cmpsb
jae
lcall
out
fmuls
xor
mov
pop
mov
in
sub
aas
in
xor
push
sub
xor
mull
add
sbb
add
pop
test
cmp
in
mov
fwait
cmp
sahf
xchg
ljmp
jne
push
cld
mov
stos
int
ljmp
and
pushf
out
imul
ss
clc
popa
mov
mov
sub
jnp
push
imul
sbbl
insl
mov
xchg
sete
imul
push
pusha
imul
outsl
dec
or
iret
hlt
in
in
push
mov
mov
add
into
inc
xlat
fsts
push
test
mov
in
imul
popf
loopne
xor
dec
outsb
fisttpl
pop
call
sbb
xchg
cld
add
push
je
ja
iret
inc
imul
mov
jnp
pushf
in
pop
or
addr16
bound
ret
ss
int3
add
popf
pushf
push
sti
xor
js
dec
adc
mov
jo
int
outsb
test
and
cmpsl
jnp
dec
incl
pusha
in
add
mov
adcb
stos
xchg
in
popf
sbb
in
mov
add
sbb
mov
adc
jno
jb
in
sub
insb
cmp
push
gs
rcrl
cmp
adc
sub
mov
cmpsb
dec
in
mov
push
rorb
push
or
es
xor
in
imull
in
jnp
push
jge
das
fs
mov
addl
adc
shr
and
lea
in
ljmp
es
paddsb
or
pop
shlb
repnz
jle
adc
test
iret
movsb
imul
push
orl
mov
in
out
imul
xchg
in
int
xor
sbb
aas
loopne
out
call
mov
mov
sub
xor
pop
dec
or
xlat
push
and
in
mov
cwtl
in
add
mov
push
mov
cmp
aam
shr
pop
out
adc
out
test
call
repnz
mov
mov
jmp
add
mov
jb
enter
cmp
mov
je
mov
sub
inc
fsubs
jo
movsb
std
and
dec
add
sahf
pop
adc
out
in
dec
push
xchg
in
and
shrl
hlt
ljmp
lock
jno
in
xorb
imul
leave
push
movsl
and
sbb
push
or
dec
cmp
into
aas
add
xor
addl
hlt
push
in
and
xlat
jl
es
and
movsl
mov
in
ds
mov
cmp
and
cwtl
push
add
jb
mov
and
xor
in
push
ds
es
xchg
sbb
jns
rcrb
jp
pop
fdiv
mov
les
or
inc
dec
shlb
out
lret
in
jo
divl
in
adc
mov
sbb
fimull
adc
addr16
jo
xor
out
adc
daa
in
imul
ficoms
or
or
out
jp
fs
fldt
cmpsl
fwait
mov
sbb
adc
mov
and
mov
push
popf
lds
adc
sbb
sbb
in
mov
and
sahf
xlat
in
sbb
mov
adc
push
icebp
sub
or
in
sbb
pop
pop
cs
fsubrp
lods
out
or
in
js
ret
das
in
nop
ljmp
sub
jno
int
popf
push
jb
leave
shlb
adc
xchg
xor
adc
stos
mov
push
in
int
cmc
ret
and
jae
test
in
lret
sbb
push
test
pop
lea
ss
loop
iret
in
push
jecxz
leave
inc
insl
xchg
pop
xchg
daa
in
sarb
pop
insl
ret
pop
jge
in
jle
dec
sub
loop
daa
jb
mov
mov
inc
xor
xchg
mov
in
cmp
fwait
cmc
shr
add
test
popa
add
lock
icebp
stc
hlt
sub
and
inc
in
jbe
lret
push
je
cwtl
dec
in
lcall
inc
push
mov
or
xchg
cmp
pop
out
in
lcall
imul
cmpb
hlt
xchg
in
icebp
call
pop
add
or
movsl
rcrb
hlt
inc
push
sbb
test
xchg
test
mov
lret
mov
mov
add
lret
imul
and
cmp
je
sub
xchg
dec
les
fnstcw
xchg
sbb
call
out
mov
push
mov
cmc
jae
pop
jo
push
or
push
in
nop
sbb
mov
jmp
add
pop
stos
lds
inc
test
loopne
loop
paddsb
movsb
jle
xor
mov
mov
mov
in
mov
cmp
call
and
loopne
cld
mov
dec
in
das
pop
mov
or
dec
xor
jge
xor
insb
mov
inc
dec
cld
jns
in
leave
ja
popf
cmp
fnstsw
or
in
push
dec
cmpsl
or
in
cmpsb
test
add
faddp
clc
sti
adc
imul
cmp
adc
sahf
pushf
jle
outsl
dec
push
cwtl
sbb
add
in
push
fucom
sub
push
popa
ja
or
mov
and
bound
test
rcrl
ret
dec
aaa
in
enter
adc
and
sub
jp
or
data16
fiadds
jmp
call
hlt
xlat
sub
in
pcmpgtw
stos
xor
sbb
mov
pop
in
loope
mov
mov
in
mov
mov
mov
aam
xlat
aaa
cwtl
jle
in
scas
mov
stos
stos
inc
ror
ja
in
mov
sti
cs
sbb
call
push
push
mov
in
dec
xchg
jle
mov
orb
add
divl
dec
sub
dec
repnz
pop
xchg
dec
mov
mov
pop
mov
dec
or
xor
movsb
inc
xor
xchg
mov
in
jnp
insl
push
negl
pop
fs
iret
aad
sub
in
ljmp
pop
pop
xor
fists
jecxz
mov
add
iret
pop
cmpsl
lods
imul
bound
mov
repz
jecxz
jle
sbb
xchg
mov
push
or
in
adc
xor
gs
mov
lods
pop
push
push
mov
rol
hlt
imull
bound
or
insb
in
leave
arpl
inc
in
mov
dec
cmp
repnz
popa
and
in
pusha
test
sub
or
in
xchg
pop
shll
icebp
imul
push
cmovle
decl
jp
in
pop
insl
adc
clc
call
mov
add
or
mov
jl
jae
jbe
lret
xchg
mov
jle
test
in
or
aas
cld
add
xchg
popa
push
test
in
test
pop
sub
sub
int3
push
jp
cltd
or
sbb
sahf
std
or
push
adc
in
mov
in
inc
cmpsb
inc
push
pop
lock
and
sbb
ja
ss
fldenv
push
jp
lods
xor
fidivl
cmp
in
mov
push
test
add
push
out
hlt
add
lret
icebp
xchg
lods
call
out
push
scas
shrl
sub
in
stc
cmp
push
in
pop
pop
std
fmul
rcll
pop
rcrb
add
pop
into
push
test
fldln2
cmpsl
jb
test
test
sbb
push
imul
push
loope
inc
call
mov
pop
mov
dec
mov
fs
clc
cmp
xchg
fwait
push
mov
mov
or
push
pop
movsb
jbe
pop
dec
lods
scas
or
inc
gs
push
sub
cmp
dec
lret
in
inc
pop
or
pushf
outsl
ret
in
rol
out
and
pop
xor
test
pop
and
cmpsb
in
add
push
jecxz
or
push
and
push
jp
xchg
or
nop
imul
movsb
add
and
hlt
sub
or
add
in
jo
adc
pop
in
in
gs
sub
fcompl
call
pop
cmpsl
popa
cmp
movsl
push
xor
pop
in
xchg
inc
sahf
adc
imul
je
jo
aad
scas
mov
rcr
pop
in
inc
xchg
in
imul
loope
outsl
xor
mov
inc
les
sbb
inc
sbb
add
lods
push
loope
adcl
inc
sub
mov
shr
pop
int3
sub
pop
hlt
cmp
dec
sub
fwait
mov
in
jb
movsl
xor
ss
push
std
scas
and
repnz
dec
xchg
mov
cmpsb
pop
xchg
adc
bound
pop
and
in
or
sub
in
adc
add
jmp
fdivs
mov
jo
cld
xchg
mov
jne
enter
push
imul
pop
inc
add
lret
ret
jmp
lods
jb
imul
mov
lds
fisubrl
pop
push
idivb
in
inc
mov
sarl
or
fists
lock
mov
sbb
in
bound
add
ret
pop
js
dec
lock
sbb
adc
adc
lret
outsl
cli
in
test
lret
test
ljmp
or
pop
loop
lea
xchg
in
mov
jo
sbb
pusha
xchg
outsb
pop
or
aam
adc
sub
imul
in
add
xor
jbe
or
or
cmpl
hlt
lock
fs
cmc
sub
mov
inc
in
cmp
or
jecxz
cmp
add
mov
sti
add
push
inc
bound
in
sbb
movsb
mov
xchg
fdivrs
movl
xchg
aaa
in
pop
lods
loopne
in
fisubrs
dec
mov
bound
pop
gs
gs
sbb
or
movsb
xchg
push
in
aad
sub
rclb
clc
popf
movsb
out
lock
in
in
add
xchg
pop
push
inc
in
je
push
cmpl
outsb
loop
jne
in
test
sti
and
and
push
out
aas
sub
inc
inc
test
daa
push
sbb
cld
out
js
jmp
pop
mov
lock
mov
push
in
es
stos
lods
jmp
mov
in
sahf
les
push
out
fldt
adc
and
sbb
int
or
js
push
outsb
in
cld
jg
sub
cmp
aad
mov
popf
in
mov
popa
or
lods
cmp
in
dec
pop
mov
das
mov
mov
dec
imul
jns
sarb
dec
inc
cmp
push
hlt
das
mov
cmp
cli
roll
loop
pusha
jno
add
sbb
push
popa
push
jb
ljmp
in
rcll
xchg
pop
push
inc
push
lock
outsl
mov
imul
stos
loopne
nop
ss
jmp
xchg
cmc
es
cmp
sbb
in
jle
test
sub
repnz
cld
in
lds
adc
mov
pop
jl
pop
es
sar
lcall
in
js
lock
add
mov
push
push
sub
ret
fidivs
call
mov
inc
in
js
and
push
cvtdq2ps
in
std
pop
mov
fsubrs
inc
mov
call
and
inc
dec
cmp
fists
shrl
daa
mov
test
aas
je
adc
cltd
sbb
mov
testl
in
or
push
or
sbb
call
lcall
sbb
inc
in
pop
mov
insl
dec
in
jecxz
imul
ret
pop
cmp
sbb
cli
lret
lods
cmp
adc
xchg
roll
dec
call
inc
fisttpll
lret
inc
adc
mov
in
into
gs
pop
xor
pop
in
mov
aas
in
dec
iret
mov
pop
stc
xor
jmp
stos
dec
ss
add
push
in
fidivs
mov
adc
jae
pop
pushf
cmp
adc
add
dec
in
mov
inc
testb
cmp
add
in
icebp
scas
push
cli
addr16
clc
in
adc
sbb
and
rcrl
imul
mov
jae
mov
in
out
mov
and
sahf
imul
adc
mov
inc
lea
mov
pop
cltd
inc
mov
in
dec
jecxz
call
and
push
cmp
in
pop
sbb
cmpb
adc
not
in
repnz
adc
add
jns
mov
xchg
int3
arpl
test
out
in
adc
pop
inc
pop
and
sbb
xchg
and
shlb
sarb
movsl
addr16
pop
jp
sub
inc
in
push
push
shlb
rcrb
in
adc
cmp
stos
or
in
mov
jns
mov
jbe
add
addr16
aad
inc
cld
mov
add
cmc
dec
in
add
lahf
out
sub
cmp
mov
pop
hlt
outsb
shlb
test
jmp
addr16
push
adc
xor
adc
insb
add
or
inc
jg
test
stos
icebp
inc
iret
outsl
call
push
push
lahf
inc
in
xchg
repz
nop
dec
fadd
call
loope
mov
and
jno
inc
imul
add
mov
xchg
pop
in
sbb
in
lods
shlb
das
mov
adc
es
xchg
inc
xchg
fwait
nop
adc
ret
out
out
test
in
nop
in
lahf
cmp
sarl
in
mov
lea
movd
or
out
in
fs
imul
rclb
adc
popf
inc
pop
sbbb
loopne
lea
or
in
mov
pop
push
imul
sub
push
jle
and
test
push
out
popa
les
leave
in
xchg
and
decb
imul
in
jg
mov
xchg
jecxz
dec
adc
sub
pop
and
mov
dec
lods
pop
or
ret
loope
int
adc
callw
ss
stos
paddsb
out
jae
mov
push
shr
push
or
cli
daa
jno
xchg
test
pop
loop
pop
fidivrs
imul
cmp
es
pop
push
out
sti
les
into
xchg
cmp
clc
dec
in
or
inc
cmp
dec
in
push
ljmp
jb
rep
pop
icebp
adc
in
or
in
fwait
js
in
rcrb
subb
cmp
mov
notl
in
inc
push
mov
dec
push
cli
int3
or
cmpsb
pop
push
and
cmp
mov
adc
inc
lods
enter
push
paddb
or
xchg
sub
xlat
repnz
int3
sbb
clc
xor
ficoms
test
pop
cwtl
mov
dec
push
push
cli
lcall
and
push
pop
or
mov
mov
ljmp
lea
stos
shr
push
aam
dec
ss
push
cmp
in
sahf
inc
push
mov
push
jne
cmpsb
sbb
sub
inc
jg
cmc
mov
in
jmp
cmp
in
insb
dec
pop
imul
fs
push
in
push
pop
pop
pusha
ret
sbbb
je
in
int3
pop
inc
xchg
and
dec
rcrb
daa
xor
js
in
dec
add
mov
out
leave
movsl
mov
add
push
imul
xor
pop
imul
mov
cli
push
dec
lds
sub
ret
sub
and
cmpsl
or
clc
jmp
into
push
imul
ss
and
push
jmp
push
test
pop
adc
movsl
xlat
dec
aas
lret
aad
in
mov
loopne
int
xor
insb
cmpsl
mov
mov
ficompl
scas
in
in
add
mov
mov
mov
mov
sbb
hlt
inc
xor
movsl
sbb
mov
jecxz
jo
cmc
fmul
es
mov
aas
ret
ffreep
sbb
ds
lahf
jae
mov
jmp
jb
imul
aad
add
mov
and
jns
or
xor
sub
popf
push
dec
es
imul
or
in
sarb
shl
lret
jns
fsubrp
jno
int
hlt
enter
xor
xlat
test
cmp
add
xchg
xor
js
test
aam
in
ret
int3
mov
jno
ljmp
sbb
out
xor
jmp
call
pop
xchg
in
int
push
in
rcl
and
cmp
adc
in
jb
insl
aad
dec
imul
mov
hlt
xchg
add
and
jmp
gs
cld
sarl
in
push
xchg
ret
mov
jae
in
and
mov
aaa
jae
sub
mov
int
mov
mov
insb
cld
jge
call
jbe
sbb
movsl
shrl
mov
adcb
daa
in
sti
jns
out
sbb
mov
call
dec
sbb
xchg
mov
adc
inc
xchg
or
jo
adc
in
je
mov
in
cwtl
ja
dec
popf
and
jmp
mov
cmpsl
cmp
cmp
in
mov
cltd
sbb
in
adc
scas
push
jno
test
enter
aas
loop
cld
fs
icebp
pop
mov
movsl
jns
cmp
xor
addr16
mov
cmp
leave
daa
shl
add
in
sahf
mov
mov
pop
mov
mov
dec
adc
mov
rol
fisttps
in
lea
xor
jo
jg
and
ljmp
sbb
or
in
loopw
jns
sbb
call
pop
hlt
xchg
lock
adc
mov
movsl
lods
in
cld
or
in
enter
fwait
push
sub
pop
aaa
pushl
inc
fsubr
int3
movsb
lock
adc
in
mov
push
jbe
flds
sub
repnz
in
pusha
es
pop
in
stc
in
daa
and
dec
mov
hlt
fwait
adc
in
inc
sbb
cmp
push
push
in
mov
cmp
in
xor
stos
xchg
les
hlt
loopne
cltd
mov
sub
sub
aam
pop
jmp
int
je
imul
inc
push
or
in
loopne
push
add
pop
adc
jp
fwait
cvttpd2pi
cmp
clc
hlt
test
adc
imul
std
push
ficoml
in
sub
test
nop
in
cmovb
sub
dec
je
imul
sub
sbb
out
dec
outsb
in
shr
lds
sbb
xchg
in
or
fs
es
bnd
and
adc
jg
repz
in
fucomip
xchg
fisttpl
hlt
pop
test
repnz
jns
sub
imul
clc
addl
in
inc
in
arpl
pop
mov
jg
sbb
mov
sub
out
shll
cli
sub
pop
test
enter
xchg
cld
pop
sub
lea
push
in
daa
mov
pushf
call
stos
mov
call
xor
testl
imul
and
cmp
mov
mov
pop
daa
imul
cs
in
sub
cs
xchg
test
lahf
push
in
sti
mov
in
cmp
xchg
dec
pop
je
jne
sub
insl
in
push
repz
out
insb
inc
in
push
aad
imul
scas
mov
mov
pop
push
pop
mov
push
mov
ret
cmp
enter
jne
mov
mov
add
in
das
aaa
jno
xchg
cmp
stc
add
mov
in
adc
and
fidivrl
xchg
add
mov
mov
pop
lea
mov
cli
in
or
lock
rolb
or
call
xor
lret
in
fisubrl
or
mov
xchg
in
popf
xchg
mov
xlat
cmc
out
ja
test
in
out
or
or
int
in
xchg
xchg
and
setge
mov
outsb
aas
lcall
or
icebp
iret
add
test
mov
jl
pop
in
fimull
pop
es
mov
push
and
mov
pusha
sub
shlb
push
mov
mov
in
sahf
into
adcb
xchg
in
repz
mov
stos
sub
push
test
cmp
push
mov
xor
and
cmc
jp
pop
stc
addr16
loop
sar
mov
mov
enter
fucomi
jno
or
imul
fstl
xor
dec
xorb
mov
sbb
dec
mov
jnp
out
pop
mov
popf
call
jmp
or
and
lock
jne
add
add
xor
dec
adc
sub
ss
sub
cmp
scas
sbb
data16
and
cld
add
adc
fwait
lcall
adc
in
mov
les
fs
push
shll
imul
or
dec
or
cli
push
sub
outsl
into
pop
xor
and
pop
xchg
and
cmp
cld
jbe
xorl
aad
pop
les
andl
push
loope
in
sub
pusha
repnz
xchg
mov
push
in
push
sub
sarl
sbb
adc
mov
mov
xor
xor
shl
adc
insb
xchg
inc
fcom
or
jmp
and
xchg
xor
xchg
in
push
lcall
ss
cmp
pop
out
push
gs
in
jns
jge
mov
mov
aad
inc
pop
insb
incb
call
dec
add
mov
stos
and
mov
add
inc
iret
jmp
jmp
mov
or
in
out
inc
out
mov
mov
jge
xchg
call
int
in
imul
jbe
outsb
stos
stc
imul
repnz
inc
sub
orb
cmp
add
jb
in
xor
inc
xor
sbb
call
bound
adc
xchg
mov
pop
in
imul
das
mov
mov
inc
scas
sub
and
repz
es
jl
mov
test
int
test
pop
sbb
pushf
mov
sub
cmpsb
gs
push
call
cmp
hlt
push
in
into
mov
dec
insb
mov
sarl
cmp
xchg
sub
sbb
call
pop
jns
fcomps
aaa
in
test
dec
repnz
leave
aas
addr16
in
mov
adc
and
cli
xchg
push
decb
gs
pop
sub
add
jge
popf
mov
enter
mov
lahf
cld
mov
es
sub
sub
in
pop
imul
aam
or
inc
inc
enter
push
clc
aad
pop
or
mov
test
daa
sbb
xor
aas
into
sbb
and
push
inc
jmp
fsubs
iret
or
test
aaa
push
xchg
push
or
enter
lods
int
sarl
push
xchg
push
xor
sahf
push
or
sbb
inc
sub
cmpsl
clc
dec
cmc
sbb
xor
call
mov
call
jae
mov
sti
hlt
mov
sbb
add
add
repnz
ljmp
mov
test
in
into
inc
or
cltd
xchg
sti
cmpsl
jl
in
and
cs
movsb
icebp
fiadds
test
shr
sbb
movsl
in
scas
gs
pop
pop
out
or
xor
rol
mov
jo
or
add
call
loope
xchg
test
cltd
sbb
loop
jmp
adcl
lods
ds
sub
stc
sub
jge
jmp
add
ja
adc
fs
imul
sbb
xchg
enter
dec
push
lahf
subl
sahf
mov
in
push
jne
sbb
add
cmp
mov
fstpl
in
popw
dec
inc
js
shlb
es
cld
imul
mov
xchg
pop
xor
sarb
or
sub
nop
out
scas
es
in
pop
push
sub
into
lds
in
clc
lods
pop
push
loop
and
sbb
and
sbb
mov
movsl
in
mov
sbb
les
in
sahf
mov
pop
add
dec
ljmp
in
push
add
lcall
xor
sub
and
push
sti
sbb
in
mov
mov
test
lods
in
push
ffreep
stos
imul
xchg
xor
lea
not
btc
daa
daa
sub
bswap
cwtl
sar
push
rol
bsf
bt
push
push
shl
mov
stc
bts
cmc
push
cwtl
rcl
aas
lahf
mov
stc
cmp
test
call
jmp
imul
mov
loopne
shlb
idiv
and
fsubs
js
daa
test
dec
add
clc
pop
lcall
and
push
xor
cmp
sbb
mov
push
movsb
mov
fdivl
xchg
adc
and
mov
movsb
mov
loopne
int3
mov
mov
adcb
pop
inc
xor
lea
ja
pushf
clc
pusha
imul
pusha
jmp
pushf
xchg
cmp
ror
mov
pusha
call
stc
stc
sub
bt
repnz
jmp
fwait
dec
sub
push
sbb
cld
sub
add
sub
lock
ret
mov
pop
int3
add
aad
pop
das
lahf
sbb
and
xor
pop
aad
xchg
cmp
lock
outsl
aaa
mov
mul
mov
test
xchg
mov
pop
fwait
movsb
sahf
push
ficomps
or
call
mov
add
mov
sub
outsb
sbb
cs
push
sub
inc
xchg
cld
jnp
imul
ret
ret
xlat
iret
lret
jmp
mov
pop
xor
test
js
test
cmpsb
loop
test
pushf
sahf
int3
mov
in
mov
out
mov
push
test
mov
push
add
repnz
mov
mov
cltd
push
aaa
xlat
push
int3
std
cmp
movsl
stos
lea
cmpb
cmpsb
mov
clc
jo
divb
mov
add
push
mov
clc
mov
or
sahf
fisubrl
pop
cmp
andb
fwait
dec
jae
push
jo
fiaddl
jecxz
inc
and
shr
lcall
test
cmpsb
push
or
inc
cmovge
sbb
dec
dec
das
lahf
das
iret
shrb
inc
push
mov
lock
into
movsl
pop
mov
pushf
test
fdivs
fnstcw
std
mov
pop
push
push
fcoms
pop
jno
inc
push
aam
xchg
push
xor
xchg
add
jb
cmpsl
mov
inc
mov
shlb
mov
mov
push
push
adc
data16
aad
xchg
and
mov
xor
lods
mov
push
cmpl
mov
cmp
shrb
mov
cmp
pop
adc
jno
stos
pop
or
push
push
dec
push
pop
shl
xor
xor
or
loope
test
mov
stc
icebp
mov
repz
mov
add
data16
popa
je
push
arpl
cld
jno
andb
add
or
push
inc
insl
jg
jmp
mov
lock
pusha
and
inc
adc
std
iret
xor
add
dec
pop
jmp
movsl
xchg
cmc
test
lea
jle
cs
jp
insb
rcrl
sbb
adc
mov
dec
mov
test
and
lcall
xchg
mov
repnz
jge
stc
popa
test
cmpsb
andb
inc
sub
push
jle
sbb
push
popf
inc
rcll
adc
cmp
test
push
and
sbb
iret
and
jbe
ss
pusha
jp
movsb
mov
sbb
lock
icebp
mov
lods
scas
push
out
cwtl
aam
push
push
cs
mov
sbb
mov
jmp
sub
pop
cmp
xchg
into
ret
push
xchg
jb
dec
sahf
sahf
xchg
pop
mov
cmpsb
sahf
test
dec
sub
or
inc
arpl
outsl
xor
gs
pop
mov
loop
int3
xor
out
pop
mov
daa
jecxz
pop
dec
sub
adc
imul
sti
jl
lret
imulb
filds
adc
movsb
cmp
jbe
les
jnp
xor
pop
faddl
popf
pop
xor
xor
fmuls
into
ja
icebp
in
in
lods
xor
test
mov
jle
fdivrp
and
loop
and
adc
mov
ljmp
jl
loop
jecxz
andb
xor
inc
jbe
dec
je
js
js
jge
adc
insb
pop
xchg
shlb
incb
mov
or
mov
in
jae
inc
fwait
gs
cmp
adc
imul
mov
or
sub
in
sti
call
pop
xlat
jg
aam
xchg
repnz
mov
dec
sub
sbb
jle
andb
push
cli
repnz
lret
push
into
adc
stc
jmp
inc
and
sub
das
mov
test
mov
es
call
ds
adc
in
jo
xor
fsts
stos
push
int
inc
rclb
sub
ljmp
or
divl
or
js
adc
mov
xchg
pushf
in
stos
lods
adc
repz
lret
xor
cmp
fdivs
outsl
cmpl
and
xchg
lcall
push
mov
mov
sbb
pop
dec
imul
ja
fnstenv
cmp
sbb
push
fwait
or
mov
jmp
hlt
test
hlt
sub
dec
adc
sub
cmp
insb
pop
enter
cmc
lea
cmp
inc
shlb
mov
adc
mov
mov
sub
jmp
pop
cmp
mov
push
or
je
shll
int
xor
imul
jae
jns
jl
sbb
add
sbb
and
pop
andl
mov
and
xor
popa
repnz
lock
cli
lock
mov
aad
or
fstpt
mov
insb
out
add
inc
faddl
test
fwait
out
inc
cmp
cmpsb
sbb
ficomps
sub
cmp
and
scas
sti
pop
xor
pop
test
pop
out
xchg
xor
lea
nop
mov
push
pop
das
cmc
dec
ljmp
pop
sub
jbe
mov
cmp
dec
xor
xchg
outsl
pop
dec
and
lock
cmpsb
pusha
sub
sub
push
mov
je
insl
aad
int
jb
in
adc
mov
mov
jo
jecxz
mov
sub
pop
mov
inc
and
mov
pop
movsb
push
or
jmp
adc
mov
fwait
es
lret
popa
test
in
cmp
stc
div
cmp
icebp
imul
sarb
pop
push
pop
xchg
hlt
jae
stos
iret
inc
and
insl
xchg
jne
jns
insl
leave
rcr
jg
int
ja
add
insl
mov
and
jae
pusha
mov
jmp
fisttps
mov
movups
sbb
xor
sub
add
dec
push
and
pop
add
add
xor
subl
divb
push
jno
ret
repnz
push
pop
shll
cmp
inc
jge
jns
sahf
lock
sub
pop
sub
and
and
push
xchg
movsl
into
push
mov
int
in
adc
push
mov
xchg
pop
faddp
adc
fisubrs
andb
dec
push
inc
mov
arpl
add
jmp
test
dec
daa
mov
test
mov
and
inc
adc
jle
lock
shrb
sbb
or
dec
cwtl
sub
xchg
dec
mov
push
icebp
aaa
nop
mov
cmp
sbbl
out
jmp
loop
sahf
ret
mov
ss
out
mov
inc
mov
mov
outsb
inc
push
lret
dec
sub
rolb
je
decl
mov
shll
or
jecxz
jmp
sub
aam
mov
mov
lahf
cmp
and
mov
mov
sahf
js
mov
inc
mov
in
stc
jg
pop
mov
jnp
jne
das
or
xchg
jne
sbb
xchg
xchg
sub
icebp
scas
cmp
push
or
pop
jge
push
jnp
jae
in
sbb
dec
or
repnz
data16
cs
je
pop
add
std
cmp
adc
sbb
cmpsl
mov
cmpsl
pop
mov
mov
sub
push
out
sti
test
popf
adc
popf
add
inc
subb
daa
sbb
mov
add
repnz
push
ljmp
dec
cltd
push
adc
sub
mov
test
movsl
leave
aad
jns
imul
outsl
arpl
std
add
xor
shrl
or
in
jmp
inc
xor
and
icebp
fistpll
cwtl
mov
pop
test
mov
aaa
aaa
push
arpl
cmp
popa
fisubrs
lahf
pop
and
or
test
jno
clc
or
sub
sub
rcrl
loopne
or
dec
cli
out
mov
mov
sarb
push
cmc
mov
or
dec
cli
pop
mov
mov
dec
adc
ficoml
cmpsl
test
mov
icebp
icebp
cmc
leave
mov
lret
push
mov
push
test
pusha
lea
je
bt
clc
bt
cmc
sub
pusha
cmp
jmp
lods
lock
jo
mov
sbb
cmp
inc
fadd
push
int
xor
xchg
imul
cmp
xor
into
lods
sbb
sbb
push
cmp
ja
pop
insb
add
jl
xchg
mov
dec
sbb
roll
mov
loop
rol
shrl
imul
mov
sbb
or
mov
jnp
adc
decb
loope
in
leave
xor
roll
push
sub
mov
and
stc
loopne
clc
test
xor
lds
xor
adc
nop
cmp
out
outsl
cmpb
fmuls
loopne
push
cmp
xor
cmp
dec
fists
and
and
mov
iret
ja
out
sub
adc
jae
mov
dec
jnp
mov
inc
and
movaps
push
arpl
into
ficoms
dec
jecxz
xor
arpl
shr
mov
shr
decl
xor
int3
sub
fstpt
fwait
pop
outsl
sbb
mov
push
pop
shlb
xchg
lods
cwtl
scas
repz
sub
in
sbb
or
mov
xchg
inc
jg
dec
ja
ret
loopne
jno
jg
lret
popa
cwtl
adcb
dec
imul
div
repnz
mov
mov
jle
mov
stc
jmp
test
mov
inc
cmp
mov
adc
xchg
jns
inc
sahf
andb
inc
imul
imul
and
loope
dec
sbbl
cmp
or
jp
add
cs
lret
rcrl
xchg
pop
inc
inc
movsl
jo
fcoms
inc
cmp
dec
or
dec
fimuls
push
sbb
aas
push
sbb
stos
jmp
mov
sbb
fstpt
je
mov
enter
enter
mov
mov
or
mov
cs
imul
fnstsw
iret
push
jbe
pusha
inc
sub
hlt
test
imul
dec
adc
loopne
inc
les
sbb
add
sub
xorb
fisubrs
mov
xchg
sahf
adc
aaa
fdivrl
mov
popf
lock
mov
bound
mov
fwait
xchg
cmp
jb
fs
pop
fldl
xchg
std
cmc
loope
fwait
icebp
fstps
adc
mov
or
mov
mov
sub
sub
xor
and
sub
jo
loope
mov
mov
jmp
ss
popf
andb
popf
mov
or
inc
outsb
pop
fisttpll
sub
insb
je
ljmp
pop
fwait
aad
jl
or
ret
sbb
mov
daa
repz
enter
mov
test
add
or
hlt
enter
xor
int
addr16
sbb
subb
out
les
xchg
rcll
dec
push
mov
mov
loope
jae
xchg
xchg
cwtl
arpl
sbb
fadd
jo
jg
mov
fsubrl
test
aaa
sbb
sub
mov
lds
aaa
iret
cmpsl
cmpsl
jo
bt
mov
add
btr
mov
push
cmp
pushl
movb
lea
jbe
stc
rol
bswap
mov
dec
movzbw
xadd
add
stc
and
mov
dec
add
mov
movl
adc
cmc
mov
call
adc
mov
std
and
out
aaa
sub
dec
adc
sbb
lahf
mov
lods
jno
bound
jb
mov
ficomps
or
jno
outsl
mov
iret
xchg
cmp
pop
push
lds
js
push
adc
jbe
in
xchg
insb
mov
jo
ljmp
dec
pop
and
sub
push
not
hlt
call
fwait
andb
repz
mov
mov
and
sub
mov
inc
jns
lret
fisttps
shll
addl
out
adc
repnz
test
cli
add
add
cmp
jle
mov
movsl
loop
dec
in
loopne
dec
icebp
das
xor
adc
lea
inc
imul
adc
push
scas
inc
inc
sub
mov
dec
je
jo
adc
pusha
xor
inc
cmp
mov
and
nop
les
cmpsb
pop
fiadds
into
shr
adc
call
add
mov
lds
loop
sti
lods
xor
out
cmp
xchg
dec
cmp
call
cmp
sahf
push
fdivs
ret
dec
and
aad
pop
shlb
xor
cmp
push
les
inc
scas
mov
fsub
sub
dec
sub
leave
adc
jne
cltd
stc
fdivrl
inc
jbe
xor
sbb
or
hlt
xor
dec
insb
pushf
mov
jl
enter
or
pusha
mov
int
andb
inc
jl
inc
push
sub
pusha
ss
js
pop
iret
xchg
out
push
sub
xor
mov
dec
pop
ficomps
adc
cwtl
jo
les
pop
cmpsb
jo
jg
jnp
or
rcrl
add
and
icebp
xchg
cmp
jl
mov
fcomi
loop
lcall
dec
rclb
int3
fistl
jne
push
dec
dec
adc
out
fimuls
cmp
cmp
bound
movsb
orb
xor
pushf
cmp
pusha
pushf
jmp
push
pushf
lea
call
push
pusha
lea
jb
pusha
pushl
ret
scas
call
cmp
lahf
outsl
lods
pop
popf
xchg
cli
inc
scas
pop
jae
add
push
push
mov
loop
rolb
lock
xor
and
xchg
sub
cli
xchg
or
fdivp
push
jmp
les
sub
ret
add
repnz
xor
gs
pop
add
mov
inc
add
or
pop
pop
scas
hlt
aad
add
pop
int3
push
or
in
call
outsl
cld
push
xchg
sub
push
or
jb
cmpsl
hlt
push
daa
adc
fimull
mov
fcomps
icebp
sub
xor
outsb
in
negb
mov
or
mov
cmp
aad
pusha
call
mov
mov
inc
cmp
mov
cs
divb
cli
dec
sub
push
fsubl
or
cmp
xchg
stos
or
pushf
out
and
fsubs
or
loopne
loopne
pushf
repnz
or
sub
push
xor
dec
in
in
mov
imul
cmp
mov
rcrb
notb
popa
lahf
sub
or
dec
clc
dec
adc
enter
add
jg
leave
pop
dec
in
cmc
xchg
xchg
out
xor
push
push
push
leave
fldt
adc
and
pop
sbb
aas
pop
arpl
jg
mov
clc
out
loopne
xor
xor
xchg
andb
in
cli
hlt
and
inc
cld
push
push
dec
mov
jnp
push
ss
xlat
arpl
fsts
or
jbe
xor
mov
sub
pop
adc
loope
sub
mov
or
adc
orl
mov
pop
inc
push
jns
out
mov
int3
sbb
in
xor
call
test
rorl
cmp
in
sub
lock
or
in
xor
lock
jp
dec
dec
and
add
out
fildll
mov
repz
lock
mov
fs
mov
xchg
adc
sub
aas
inc
movl
push
sahf
push
jmp
dec
inc
divb
lret
icebp
jns
fistps
inc
sbb
jo
pushf
bound
lret
add
lret
mov
mov
lods
mov
jecxz
fwait
push
cli
mov
bt
jmp
jmp
fcoml
outsl
leave
xchg
mov
scas
mov
sub
xor
xchg
ss
pop
dec
movsb
mov
ror
movsb
inc
mov
adc
push
mov
adc
stos
xchg
cmp
xchg
cmpsl
pop
inc
pcmpeqw
mov
and
inc
rcrb
adc
mov
outsl
jne
scas
dec
sub
in
add
fcompl
add
adc
fstp
or
cmp
dec
jne
sbbl
add
push
gs
gs
popa
insb
jne
inc
js
add
add
add
out
dec
add
add
sti
mov
add
add
add
add
add
add
add
mov
add
mov
add
add
pop
mov
add
mov
add
mov
add
sarl
add
pop
mov
add
repnz
add
xor
add
or
or
push
add
add
add
add
add
add
or
add
mov
add
and
bound
add
and
cmpsl
mov
add
mov
add
mov
add
mov
add
jns
je
popa
insb
insb
add
aas
aas
test
test
aas
aas
mov
aas
mov
movsb
mov
shrb
add
aas
aas
test
aas
mov
inc
dec
dec
xor
xor
add
aas
mov
test
aas
aas
test
jns
test
add
aas
mov
test
aas
test
aas
aas
inc
test
aas
test
mov
aas
mov
mov
test
aas
test
mov
popa
aas
test
add
test
aas
test
add
aas
mov
sarb
push
je
xor
push
dec
push
mov
mov
mov
test
aas
add
push
mov
mov
mov
mov
sarl
mov
aas
aas
mov
jo
popa
outsb
jns
cs
insb
add
add
les
xchg
andb
into
int3
fsubp
scas
enter
sub
lods
lods
pop
mov
jmp
lcall
cmp
xor
call
rcl
bsr
js
frstor
adc
jp
cmp
aaa
pop
pop
ret
lret
lahf
push
test
sub
fs
fld
call
add
out
inc
ss
call
repz
scas
fcomi
stc
push
cltd
push
decb
mov
mov
fsubs
sti
adc
push
xchg
rcl
mov
and
mov
inc
rcll
stos
icebp
stos
rcl
out
icebp
ret
lods
mov
out
xchg
xchg
movsb
scas
in
movsl
xor
aaa
roll
imul
jnp
popf
shrb
mov
push
pop
mov
loopne
pop
pop
jo
sub
leave
out
mov
stc
sbb
jno
mov
pop
jle
mov
jle
xchg
les
push
rclb
call
pop
mov
xchg
aad
mov
test
and
cli
mov
mov
aad
push
push
stc
mov
pcmpgtd
and
xorl
mov
or
fldenv
xchg
aad
add
das
nop
fisubs
aad
mov
adc
and
add
inc
and
fbstp
and
loopne
cli
cld
data16
das
pop
inc
movsb
js
nop
push
push
scas
and
loopne
js
and
jb
movsl
mov
and
scas
nop
fcom
mov
xchg
aad
bound
scas
nop
repnz
fsubs
xchg
xlat
int
inc
sahf
nop
or
addr16
and
push
nop
fisubs
mov
xchg
aad
data16
fsubrs
xchg
and
push
nop
fadds
aad
outsl
cli
fsts
and
addr16
fsubrp
andb
add
nop
push
pop
addr16
and
xor
and
data16
ficomps
add
xchg
sar
iret
and
testb
and
scas
mov
and
mov
mov
xchg
aad
jl
pop
nop
fmuls
mov
xchg
aad
pusha
jge
nop
fdivr
mov
xchg
aad
insb
and
nop
add
addr16
xchg
rorl
cmp
sbb
xchg
mov
mov
mov
out
cld
test
mov
and
nop
or
mov
xchg
aad
mov
nop
ds
in
and
rclb
and
adcl
xchg
shrb
fidivs
aad
jp
mov
shll
xchg
jecxz
or
nop
sbb
push
and
pop
nop
fimuls
mov
xchg
aad
jae
fsts
and
pushf
nop
cli
andl
xchg
ret
sub
fsubrp
mov
xchg
aad
js
lds
and
xor
and
hlt
lods
and
movsl
out
fiadds
shrb
lds
or
fmulp
sbb
xchg
add
or
aaa
js
jno
cmp
xchg
stc
mov
push
pop
dec
mov
push
sub
and
mov
and
cmp
sbb
rorb
pusha
pushl
ret
adc
std
jne
xchg
xchg
lods
jmp
pop
shl
leave
lret
lds
cs
pop
and
insb
loop
pop
inc
cmp
rcrb
popa
shll
imul
inc
jo
sub
outsl
lret
aad
fistpl
inc
mov
rorl
lret
cmp
dec
mov
fnsave
sub
sub
arpl
adc
push
push
bswap
psllq
cmpsb
add
cmpsb
jo
mov
je
mov
adc
jmp
mov
in
xor
add
aas
aam
out
out
pop
arpl
sti
nop
adc
fmull
mov
pop
cmp
and
clc
sub
outsl
sbb
pop
or
jo
add
jg
out
add
aam
enter
aam
and
cmp
hlt
mov
push
xchg
xor
sub
sbb
les
jae
push
jge
aad
sarl
jp
call
mov
in
insl
lahf
test
pop
es
sbb
fs
xchg
mov
arpl
mov
push
mov
pop
lahf
insl
pop
data16
scas
mov
push
addb
fadds
notb
pop
bound
sahf
jle
push
jb
lea
xor
mov
lds
lock
mov
incl
xor
clc
sub
fsubl
adc
cmp
push
inc
push
cli
loop
jae
adc
imul
nop
ljmp
xor
data16
out
out
push
mov
sub
jp
xor
loope
sub
ss
xchg
mov
bound
sbb
inc
add
in
fdivr
sbb
ja
adc
and
imul
aas
sti
dec
inc
xor
pop
lods
call
xchg
mov
test
fldt
jecxz
cwtl
into
mov
andb
outsb
pushf
xchg
inc
pop
nop
mov
mov
jmp
xchg
popa
sbb
xlat
add
pop
movsl
adc
xchg
imul
dec
roll
imul
insb
loopne
mov
sub
lds
cs
mov
and
fnop
jo
cmp
mov
mov
out
or
bound
xor
je
or
lea
and
dec
cmpsb
out
jp
cmp
bound
insb
aam
int3
xchg
int3
loop
push
sbb
cld
ss
jae
and
pop
and
mov
subb
cmpb
lret
adc
push
sub
bound
scas
pop
movlps
sbb
mov
andb
inc
jmp
and
sbb
adc
mov
jge
mov
jge
mov
mov
inc
sub
push
fmull
sub
cmp
cltd
loopne
add
xchg
test
lahf
dec
stos
lahf
add
cmp
sbb
fcomip
mov
jl
adc
mov
sti
or
dec
fstpl
leave
cltd
add
movsl
leave
mov
dec
call
repz
iret
adc
lahf
pop
inc
pop
inc
imul
inc
addr16
mov
mov
stc
les
fdiv
shlb
push
aad
andb
push
inc
push
adc
pop
subb
in
ret
nop
jl
cmp
test
cmc
mov
jno
pop
xor
xchg
subl
dec
lock
out
lods
cmc
jne
ret
xchg
shr
int3
xchg
dec
rcrb
lods
dec
out
call
cmp
push
stc
aad
in
lret
sub
jno
inc
out
cmp
pop
gs
add
aad
xchg
pop
mov
int
pop
lods
decb
aaa
pop
pop
ja
dec
xorl
ret
shll
sbb
out
lcall
andb
add
mov
cltd
icebp
outsl
out
push
jmp
sti
imul
jge
and
push
je
inc
movsb
in
lods
loop
rolb
jg
jo
cmp
add
movsb
or
outsb
fidivs
add
sbb
mov
pop
mov
mov
sub
data16
jmp
test
dec
sbb
test
lods
aad
pop
pop
stos
mov
or
inc
subb
push
pop
cmp
pop
int3
les
cmp
cmpsb
sub
push
rclb
xchg
call
jg
in
je
push
mov
pop
aas
mov
ret
icebp
in
push
jle
or
aad
jg
das
cltd
and
xchg
jl
dec
and
mov
daa
sbb
and
sub
push
xchg
es
sub
ljmp
addr16
push
jge
adc
ja
popf
aad
in
adc
inc
ljmp
mov
mov
roll
cmp
push
in
hlt
loop
mov
orl
fs
jns
pusha
mov
push
pop
pop
pusha
pusha
pushl
pushl
ret
mov
fimuls
jp
xchg
test
test
mov
in
mov
repnz
mov
data16
adc
mov
sbb
cwtl
xor
movsb
jp
inc
lds
in
xchg
pop
xchg
pop
repnz
mov
in
pop
add
jne
dec
adc
pop
xchg
js
mov
cld
add
pop
movsb
push
movsb
jl
test
hlt
in
loopne
in
insb
or
rcrb
test
out
add
enter
shr
mov
test
add
shl
sar
bt
pushf
mov
cmc
jmp
lret
mov
shr
ret
mov
aam
les
loop
enter
cmp
push
cli
outsb
inc
lea
mov
ljmp
js
sub
adc
fwait
mov
sub
inc
jo
sub
inc
mov
cmp
push
mov
add
jmp
dec
aaa
pusha
hlt
mov
xchg
es
sub
xor
jo
push
jl
mov
cmp
pop
inc
cld
push
xchg
sub
fcomi
inc
dec
das
xor
cmp
adc
pop
sub
testl
imul
mov
out
push
pop
decl
pop
jae
shlb
and
insl
jp
outsb
xchg
dec
test
cmpsb
dec
movsb
inc
or
pop
shrb
mov
insl
test
mov
aad
cmc
adc
or
ret
cmpsb
pop
call
fistl
out
int
stc
rol
testl
mov
and
add
inc
gs
scas
sub
xchg
stos
push
add
in
or
fwait
pop
daa
fstps
add
mov
pop
jecxz
xchg
push
adc
subl
push
sbb
xchg
mov
sbb
repnz
add
inc
cs
sbb
pusha
fimuls
mov
mov
dec
aaa
cmp
and
adc
push
inc
fists
dec
loopne
sbb
pop
mov
shll
rclb
push
xchg
inc
pop
loop
jns
jl
outsb
lcall
jbe
xchg
push
imul
cmp
xor
out
jae
push
mov
mov
lods
ja
scas
add
test
inc
lret
sti
stc
add
or
pop
movsb
pop
pop
pop
pop
ret
mov
cmp
mov
xchg
cmpsl
cltd
dec
test
xlat
mov
inc
fcomip
test
mov
jmp
hlt
pop
outsb
cmp
ret
cmp
dec
cwtl
inc
lret
or
je
xchg
add
movsb
pop
inc
xor
imul
cmp
dec
dec
daa
and
jmp
pop
aaa
pop
leave
movsl
enter
cltd
cmpl
push
dec
dec
dec
cs
push
push
add
sbb
add
clc
movzwl
lea
cmc
cmp
cmp
rol
mov
call
lea
je
btr
mov
cmp
add
cmc
btr
movzbw
mov
call
mov
test
sub
shl
mov
pusha
jmp
add
xchg
lods
fwait
loope
aad
inc
adc
icebp
cmc
lods
cltd
repnz
daa
adc
mov
in
cmpsb
mov
testl
or
pop
pusha
imul
push
mov
sub
cmc
mov
mov
jge
pop
mov
daa
in
int
dec
or
inc
in
fimull
jo
push
inc
dec
inc
inc
sbb
xchg
inc
gs
in
mov
cmc
sbb
push
push
sti
rol
cmpsb
push
lea
ror
mov
call
sbb
xchg
je
xor
cmp
andb
test
sub
mov
test
cmp
pusha
pop
out
adc
sti
jecxz
enter
popl
stos
add
sbb
jne
pop
pop
repz
add
divb
mov
rcrl
adc
push
lea
jae
inc
testl
das
jmp
sbb
mov
push
sub
inc
push
xor
out
ljmp
mov
das
adc
mov
add
sbb
sbbl
movsl
scas
cmc
mov
xor
enter
arpl
inc
cld
xchg
fwait
pushf
in
inc
mov
xchg
fcmovnbe
jo
mov
xor
push
jo
mov
pushf
dec
call
pop
jae
xor
and
mov
mov
xchg
imul
and
aad
or
dec
xor
adc
sbb
dec
jnp
dec
dec
jnp
out
push
xchg
mov
jnp
cmp
pushl
lea
ja
movzbl
movzbw
xchg
xchg
pop
pushf
mov
pushf
xchg
xchg
push
mov
movsbw
call
daa
ja
xchg
cmc
aaa
adc
pop
push
aaa
cmp
push
mul
xchg
xchg
add
sti
aaa
sub
sub
mov
and
in
cmc
mov
ljmp
lock
pop
jmp
inc
test
test
testl
xor
dec
aad
xchg
add
out
xor
dec
cmp
pusha
pop
lea
je
add
lcall
dec
stos
addl
je
sbb
dec
push
sub
fcompl
cmp
je
sub
dec
add
fistpl
jl
and
test
cmp
pop
push
addr16
dec
popa
xchg
mov
leave
call
lahf
pop
mov
frstor
test
mov
fsubrl
test
mov
cmp
add
fidivrs
mov
sbb
rep
push
imul
cmpsl
aaa
stos
je
out
test
jp
dec
aas
xchg
jmp
sub
popa
test
jns
cmp
inc
xchg
mov
test
fnstsw
test
sub
or
cmp
aaa
inc
pop
fwait
xchg
cmc
insb
lock
rep
mov
mov
test
int3
xor
mov
mov
rorb
push
mov
aad
push
or
lea
or
into
push
pop
xchg
stos
push
xchg
add
add
xchg
xor
lahf
jg
pop
das
in
les
lahf
push
arpl
popf
andl
shr
iret
xlat
test
xchg
sar
int
in
cmp
stc
leave
dec
jnp
adc
filds
ljmp
bound
nop
mov
clc
repz
and
pop
clc
dec
ret
aaa
cmp
pop
mov
inc
push
mov
popa
sahf
ss
fistpll
roll
push
cmpsl
mov
shll
in
jne
xor
jb
fs
ss
cmc
mov
pop
cli
pop
and
adc
aad
push
insb
daa
insb
push
mov
sbb
sbb
lods
or
pusha
or
adc
cli
into
xor
cmp
push
mov
push
xor
cld
hlt
pushf
lods
pushf
call
mov
cmpsb
pop
fucomi
add
out
or
cmp
sarl
inc
out
sub
ficompl
pop
sub
dec
adc
lret
cmp
inc
in
fistps
cmp
imull
insl
mov
inc
dec
out
addl
aam
push
aas
in
enter
test
fcoms
rclb
clc
and
je
xchg
addl
jl
pop
dec
push
jb
cmp
sahf
incb
add
xlat
das
fyl2x
pop
mov
jae
cld
cmp
push
bound
aaa
mov
popa
and
sahf
add
lock
cmpsl
xor
mov
call
test
add
mov
sbb
int3
mov
int
add
xchg
int
test
and
mov
mov
cmp
clc
int
or
daa
cmp
mov
mov
mov
lock
push
push
dec
xor
add
xor
mov
ffree
popf
cmpsl
mov
jmp
xchg
repz
clc
jb
add
add
int3
xor
cmpsb
arpl
push
call
cmp
xorl
or
mov
cmp
in
xor
xor
mov
inc
and
sub
cmovle
movsb
xchg
fwait
xchg
je
cmpl
and
rorb
xor
stc
dec
pop
jnp
dec
test
or
xchg
arpl
int
sub
add
jmp
cmp
int3
addb
mov
into
test
pusha
mov
shl
daa
fwait
mov
and
arpl
pushf
sbb
imulb
sub
xchg
add
xor
or
inc
mov
gs
out
int3
and
mov
mov
xchg
aam
mov
mov
inc
stc
pop
ljmp
mov
pushf
movsl
mov
leave
fcmovne
or
cmpsl
icebp
cwtl
xor
and
jmp
sbb
cmp
imul
add
andb
dec
jg
ja
fwait
jne
andl
lods
aam
aaa
dec
arpl
mov
mov
fstl
adc
icebp
add
scas
ljmp
nop
fistpll
xchg
outsb
js
jnp
push
lcall
nop
inc
and
push
out
pushf
inc
fists
xor
and
scas
stos
sti
imul
or
hlt
xor
and
into
rol
jl
mov
enter
push
mov
sti
sbb
cmpsb
fwait
add
cmp
fisttpll
stc
sti
loope
add
push
xchg
and
fldl
dec
push
pop
add
sbb
jmp
shll
loop
mov
out
inc
push
dec
mov
addr16
mov
pop
mov
leave
adc
loopne
stc
sbb
pop
fstps
sahf
mov
repz
jecxz
jo
daa
sub
dec
inc
outsb
xor
fisttpll
push
es
test
or
adc
cmc
shl
sti
pop
inc
add
cmp
xor
das
arpl
jecxz
ja
push
mov
addb
xor
xor
and
ja
adc
stc
sub
xchg
loopne
push
adc
sub
pop
sahf
pusha
fwait
popf
add
lret
std
mov
xor
or
add
in
push
addr16
cmc
imul
add
pop
pop
mov
inc
mov
or
push
int
inc
sub
xchg
mov
fcompl
sub
hlt
sbb
or
jp
pop
and
jo
add
cmc
push
out
andb
aas
sbb
cmpsl
jnp
inc
lods
xchg
push
pop
fstpl
sbb
sbb
imul
cmp
pusha
outsb
js
xchg
aam
xor
xchg
outsl
out
es
mov
gs
sbb
push
test
cmp
push
es
push
jbe
inc
outsb
push
dec
ror
sbb
mov
pop
mov
lea
jne
shrd
mov
pusha
stc
call
test
mov
sahf
lock
sbb
cltd
stc
data16
xor
stos
fs
test
arpl
push
xchg
sbb
push
mov
sbb
fs
mov
add
pop
sub
test
sbb
push
sbb
dec
cli
pop
pop
inc
stos
sbb
cli
sbb
push
adc
out
push
out
push
adc
mov
mov
jmp
cmp
jg
cmpsb
mov
rorl
jmp
daa
cmp
fs
inc
mov
js
sarb
push
js
jns
stc
popf
inc
fildll
push
pop
pop
cmp
push
and
enter
jno
pop
and
lgs
mov
sbb
sbb
sarb
inc
lock
mov
into
dec
pusha
es
cmp
mov
xor
sub
inc
xlat
sub
inc
sub
push
pop
pusha
mov
mov
les
subl
andb
cmpsb
movsb
out
sahf
rol
lcall
push
hlt
imul
sub
scas
mov
mov
jg
jmp
bound
push
and
mov
icebp
inc
sbb
jo
lret
push
fisttps
movsb
inc
or
outsb
imul
loopne
jle
mov
out
jno
out
sbb
jle
mov
fildll
repz
cmp
xchg
mov
aaa
jg
ja
ret
lret
xchg
mov
mov
data16
cmp
icebp
ret
andb
or
xor
pop
adc
dec
pop
sbb
and
fnstsw
pop
xchg
addb
idiv
popf
xor
sbb
cmpsb
xor
nop
fs
dec
in
mov
push
cmpsl
sar
std
out
and
xchg
test
int
lret
in
mov
int3
jecxz
je
add
mov
mov
insl
outsb
add
lcall
mov
jl
xchg
pushf
mov
fisubrs
jge
lea
jge
cmpsb
mov
lahf
test
subl
sbbl
or
cmp
out
in
jno
inc
mov
icebp
sub
out
idivl
in
insl
inc
mov
mov
mov
gs
ss
enter
outsb
jecxz
cs
imul
bound
or
mov
fwait
dec
inc
pushl
or
orb
xchg
jne
subl
and
movsl
xchg
insl
mov
dec
insl
cltd
movsl
mov
je
add
fdivrs
push
in
sub
jge
cmpsb
mov
fwait
imul
imul
call
jno
rclb
cwtl
les
cmp
mov
lcall
lods
lcall
sarb
repz
inc
lret
push
jno
out
mov
sub
sub
addl
and
scas
sub
addb
rolb
pusha
jae
imul
xchg
test
test
push
repz
pop
add
mov
adc
and
push
fs
pop
inc
dec
dec
orb
cmp
jge
pop
jne
mov
stos
movsb
bound
test
jne
adc
mov
mov
stos
mov
out
inc
test
mov
jb
cs
inc
aaa
pop
and
dec
imul
and
mov
push
cmp
and
pusha
movw
pushf
movl
jmp
lcall
add
and
cli
or
mov
mov
xor
sub
mov
or
arpl
loopne
jl
notl
cwtl
and
in
mov
fistps
out
mov
out
daa
pop
arpl
pop
xor
pop
jae
xchg
mov
pop
pop
jmp
lea
je
pusha
pusha
pushl
lea
jmp
xor
jnp
cmpsb
lahf
aaa
add
mov
loope
sbb
mov
int3
call
pop
cmp
paddsw
pop
xor
inc
lret
sti
mov
imul
adc
mov
mov
mov
shr
mov
rol
rcr
mov
add
jns
rcrb
cltd
cmpsl
xchg
mov
xchg
pop
inc
mov
stc
add
mov
mov
pop
stos
mov
ror
xlat
mov
xchg
jnp
cmpl
mov
add
cmpsb
jmp
inc
mov
xlat
or
sub
std
fdivrl
xchg
xchg
jg
mov
mov
jns
and
inc
lcall
xchg
jecxz
inc
daa
pop
inc
test
mov
dec
sub
xlat
fcomi
sub
jne
lods
dec
lods
out
pop
cmp
push
sub
mov
xchg
lods
mov
test
push
push
push
push
sarb
pop
mov
fwait
jmp
gs
outsb
cld
sbb
and
int
andb
stos
push
jnp
call
xchg
add
cld
sarb
mov
xor
push
jle
jp
dec
test
or
lods
xor
cmp
inc
mov
mov
lcall
das
jo
adc
mov
out
mov
mov
mov
sbb
xlat
lret
inc
or
ds
lret
mov
shrb
mov
stos
mov
loop
in
cld
outsb
cld
sub
pop
jns
cmpsb
cli
jle
data16
lret
add
mov
xchg
push
fisubs
adc
sbb
and
and
hlt
jnp
push
rcr
jae
pop
mov
jmp
push
pop
add
jne
imull
sbb
scas
daa
xor
sbb
sub
out
pop
in
stc
sub
sbb
imul
out
ljmp
pop
or
insb
mov
dec
dec
xor
es
push
push
rolb
and
inc
push
jle
loope,pt
cmp
sahf
mov
jns
cmpsb
pushf
pusha
xchg
push
mov
in
les
mov
or
pushf
fsubl
dec
cmp
xchg
sbb
cs
gs
leave
jae
pop
cmpsl
movsl
pop
repz
adc
cmpsb
movsb
pop
dec
movsl
pop
lret
dec
les
rcrb
xor
es
xchg
sub
movsb
sub
push
aam
int
dec
arpl
repz
pop
outsl
xor
fmul
mov
bound
inc
xchg
popf
sbb
add
rcrb
ja
cmpsb
jp
adc
or
cld
repnz
dec
bound
ss
out
div
int3
gs
out
push
add
mov
sub
dec
scas
mov
fiaddl
adc
fdivl
movaps
repz
nop
mov
ja
mov
addr16
enter
mov
jecxz
int3
int3
in
mov
lods
fdivl
outsb
pop
test
pop
mov
jae
stc
incl
add
je
outsl
fs
gs
imul
add
cmpsb
int
cmpl
mov
cmpsl
mov
cmp
add
test
nop
jp
imull
roll
in
sub
outsl
lcall
jo
arpl
ds
shrl
mov
mov
pop
rorb
aam
enter
inc
mov
mov
ljmp
mov
lret
mov
mov
adc
mov
das
xor
jl
jbe
cmpsb
mov
in
inc
in
inc
adc
or
cmp
clc
adc
add
aam
es
jg
mov
jno
or
lods
adc
arpl
mov
cmp
adc
pop
pop
sti
iret
testl
dec
fbstp
repz
int
cmp
add
cmpb
add
test
call
lds
mov
cmpsb
and
mov
dec
mov
cltd
and
nop
mov
testb
lea
mov
outsb
dec
mov
fnstcw
and
inc
leave
inc
mov
or
lds
test
sbb
push
dec
xchg
xchg
rolb
and
pop
inc
fistps
add
leave
or
xchg
jmp
sbb
scas
je
arpl
dec
orl
inc
je
mov
js
rclb
std
rcll
fimull
push
dec
adc
stos
jbe
cmpsb
dec
lods
or
sarb
rolb
cld
in
pop
mov
cwtl
mov
xchg
dec
xchg
add
mov
testl
mov
popf
and
mov
sti
mov
in
pop
testl
and
ror
mov
xor
int
cwtl
sub
xchg
ud2
iret
xchg
jecxz
push
push
movsb
or
adc
pop
push
xor
js
ja
lret
lods
enter
lock
xor
cltd
jne
nop
sbb
xor
lahf
xlat
push
xchg
lahf
jge
sub
jne
movsl
cmpl
mov
in
pop
mov
ret
add
stos
pop
adc
sahf
push
in
es
xchg
push
mov
or
ja
inc
sarb
mov
jecxz
cmp
push
and
test
stc
loope
stos
loopne,pt
pushl
mov
stc
addr16
aam
aas
std
and
mov
sub
cmpsl
add
push
orb
pmaxub
jp
mov
scas
stos
rcrl
stos
ret
mov
mov
imul
cmpsb
movsb
sub
clc
xor
cs
and
dec
and
fs
stos
add
sub
lock
adc
xchg
test
or
cmp
ret
fdivs
inc
xlat
dec
sbb
xlat
outsl
pusha
jb
adc
daa
jns
ljmp
ficoms
sub
inc
leave
sub
cmp
add
cmp
loopne
mov
hlt
pop
sahf
mov
cmc
add
rcll
cmpsb
cmp
xor
cmp
mov
js
cmpl
cli
inc
or
test
daa
or
adc
pushf
add
cmp
ficompl
popf
cmpsl
cltd
repz
ljmp
nop
lock
mov
stos
int
jbe
inc
icebp
aam
jp
and
and
xlat
das
cmc
addr16
inc
adc
lcall
fidivs
push
pop
in
jnp
jg
stos
jg
fldt
scas
out
add
shll
xor
add
test
fdivr
stc
cmp
sub
pusha
clc
cmc
cmp
pushl
push
lea
jns
ja
pusha
movl
bt
imul
movb
add
pusha
push
lea
jmp
adcl
add
in
fld
fstps
add
loope
add
addl
repnz
gs
push
jge
ficomps
add
scas
sub
pop
arpl
out
sub
and
dec
push
mov
mov
adc
push
mov
fimull
sbb
dec
out
jp
mov
scas
pop
mull
mov
fstps
mov
aam
rol
cld
fadds
in
call
pop
jl
adcb
into
enter
push
ljmp
add
fdivrs
es
scas
push
fucom
rcrb
jo
mov
lret
scas
add
jnp
dec
mov
movsb
cmc
aas
inc
mov
cmpsl
fwait
ss
cli
es
add
sbb
int3
stos
mov
pop
popf
movsl
out
aam
nop
push
sub
xor
pop
in
int
lret
jns
or
push
rcr
int3
mov
adc
inc
cmp
add
sbb
pop
subps
or
jge
sub
cltd
popa
lods
movsl
pushf
jae
test
shll
jb
cmpsb
aam
dec
push
push
sub
push
push
xor
js
inc
inc
jl
sub
inc
stos
ljmp
mov
xchg
xor
xor
das
js
xchg
adc
subl
mov
nop
dec
mov
jb
negb
cs
std
sub
sub
enter
and
sbb
vpaddsw
jmp
push
sbb
std
or
lret
jb
cmpsb
add
or
pusha
ds
sub
sub
mov
add
cmp
fsubrl
sbb
js
cwtl
movsb
adc
sbb
stos
adc
or
shrl
dec
dec
pop
jmp
lds
mov
mov
leave
adc
pop
mov
daa
loopne
dec
inc
idiv
int
xor
xchg
cmp
popf
mov
mov
pop
imul
jns
test
movsl
jne
cltd
jge
mov
push
pop
xchg
iret
pusha
xorl
popa
ja
jg
xorl
movsl
aad
or
or
cmp
mov
fnstcw
jge
filds
fstl
jge
mov
popl
adcb
pop
test
in
cmp
ja
push
pop
cmp
xchg
pop
pop
xchg
add
testb
fimuls
sbb
sub
lret
fsubl
add
imul
jae
sbb
jp
xchg
sahf
enter
aam
in
and
or
sahf
in
dec
adc
sub
mov
stc
add
jmp
push
int3
sbb
test
in
sbb
add
fs
int3
or
push
movsl
jg
jmp
cmp
mov
std
jns
xchg
std
idiv
xor
scas
cld
ret
mov
inc
and
dec
xor
je
add
bound
mov
mov
ds
xor
addr16
jnp
inc
fwait
jae
stos
mov
jnp
ja
pop
insb
lcall
lret
test
vpshaw
test
fisttps
push
inc
adc
sbb
or
int3
jae
imul
pop
adc
flds
in
jo
lcall
into
in
inc
mov
jmp
xchg
mov
add
jbe
data16
mov
outsl
out
xchg
and
inc
pop
loop
cmp
out
cwtl
stos
mov
pop
push
arpl
pop
shlb
jmp
lret
aad
add
dec
or
push
int3
sbb
test
mov
sti
add
pop
push
xchg
sarl
psubusb
cmpsb
jbe
inc
insb
mov
dec
xchg
js
imul
pusha
lods
sub
dec
shlb
inc
push
push
inc
or
xchg
adc
addr16
sub
push
and
pop
mov
roll
les
sbb
push
and
test
out
cmp
xor
cld
lcall
pusha
push
aaa
lea
sbb
daa
jnp
jne
cltd
imul
out
call
cmpsl
xlat
nop
sub
outsl
andb
xchg
mov
mov
dec
int3
frstor
and
xor
cmp
cld
adc
dec
jp
outsb
outsb
adc
jl
jmp
adc
sub
cmp
jmp
push
inc
js
fiadds
pop
xor
jg
push
adc
xrelease
mov
pop
scas
mov
sub
out
mov
mov
cmpsb
es
jo
lods
sub
xchg
dec
mov
outsl
insl
popl
sarl
aad
lret
jp
inc
mov
jnp
mov
fadds
cmp
and
cmpsl
cmc
push
into
aam
pop
adc
lods
mov
push
fistps
mov
xor
rorb
rolb
arpl
cmp
adc
lds
les
add
inc
aam
or
andl
addl
or
sbb
adc
sub
out
or
sbb
add
xlat
not
sub
jo
push
es
ud2
or
push
or
push
adcb
pop
dec
push
insl
andb
shll
icebp
out
lds
or
dec
scas
dec
ja
adc
lods
adc
or
cmc
in
cs
sub
not
and
out
push
leave
out
cwtl
mov
test
and
imul
outsb
ja
mov
fsts
in
das
stc
cmpsl
add
cmp
mov
test
je
xor
loop
inc
loop
fwait
sub
xor
mov
add
jge
add
inc
sbb
sub
test
push
adcl
jbe
cmp
mov
sub
fsubrs
andb
sub
and
and
sub
test
jp
cmp
ljmp
lret
fisttps
xchg
orb
dec
pop
dec
adc
push
loopne
xchg
addr16
inc
jo
mov
repz
test
mov
pop
popf
jecxz
jno
cmp
mov
sbb
mov
xor
or
cmp
loopne
pop
mov
les
js
stos
enter
shrb
pop
cmp
test
ds
mov
push
fstps
es
pop
push
dec
test
mov
scas
mov
lcall
insb
andb
imul
movsl
icebp
adc
push
pop
adc
xchg
xchg
sub
popa
aad
push
sub
mov
ja
icebp
mov
xchg
jp
mov
cmp
mov
push
mov
mov
pop
ss
pop
add
js
and
sub
jns
or
push
loop
jl
add
lods
movsl
jmp
cmp
adcl
sub
adc
and
aaa
mov
mov
shll
jecxz
push
push
or
mov
fdivrl
dec
and
mov
inc
push
inc
pop
test
mov
pop
shl
gs
push
ss
mov
imul
lahf
cltd
lcall
jmp
fs
cmp
das
repz
push
mov
jmp
pmullw
xchg
repz
das
repnz
out
mov
inc
and
inc
and
mov
mov
inc
cmpsl
popl
aam
add
and
cmpsb
push
adc
sbb
enter
sub
in
and
aas
sbb
or
pop
pop
cli
adc
cmc
jno
inc
movsl
dec
mov
fdivrl
cld
cmp
leave
xor
and
data16
sub
dec
dec
cmpsb
repnz
jge
add
inc
popa
test
aas
roll
mov
loope
mov
mov
dec
jo
lret
add
xor
lcall
arpl
jae
jae
adcl
dec
fwait
sahf
enter
call
clc
and
outsb
dec
cli
fldenv
jno
movsb
insb
test
movsb
in
jge
andb
xchg
mov
mov
rorb
fiaddl
sbb
mov
dec
sbb
faddl
mov
mov
push
cmp
sub
sub
mov
pusha
clc
mov
fcomip
test
jae
ljmp
shrl
js
imul
jl
pop
mov
jecxz
mov
sbb
imul
jno
pop
xchg
stos
sahf
dec
jb
sarb
ret
adc
push
cli
mov
call
and
cmpsb
add
or
jae
push
dec
in
sub
sub
ja
pop
scas
sbb
xchg
xchg
or
mov
push
repz
lcall
int
sbb
stos
ja
leave
xchg
addr16
mov
dec
adc
push
sub
inc
mov
leave
fistl
xlat
das
sbb
hlt
inc
mov
shrb
and
jmp
add
scas
enter
mov
ror
mov
or
add
popf
sahf
cmpsb
aaa
imul
xor
paddsw
syscall
sub
unpckhps
pop
fstl
pop
jbe
pop
or
adc
or
loopne
dec
lret
stos
xor
shlb
sbb
push
xchg
cmc
mov
mov
push
orps
aas
inc
insl
xchg
popa
fcmovne
adc
inc
sbb
sub
daa
cli
add
and
push
lcall
pop
mov
cmpsl
cmp
dec
mov
loopne
int3
call
sub
mov
add
lcall
or
xor
pop
xchg
jge
lds
test
cmovnp
out
adc
and
mov
push
aam
cmpsb
scas
into
cli
mov
hlt
xor
ss
cmpsb
mov
push
fisttpl
fsubl
clc
inc
push
pop
in
jp
pusha
mov
lahf
enter
cmp
xor
mov
cmp
aas
mov
ficompl
test
jb
jo
dec
aaa
mov
cltd
xor
fstpl
lock
bound
push
pop
xchg
push
push
test
mov
cmp
add
cmpsb
clc
mov
hlt
scas
cli
and
fdiv
add
loopne
arpl
int
repz
mov
and
fwait
xchg
shll
leave
outsb
lahf
lock
jo
fadds
pop
test
aas
mov
mov
mov
lock
icebp
mov
outsl
daa
inc
fidivs
imul
mov
xchg
dec
imul
xchg
cmp
je
out
popa
pop
nop
lods
xor
inc
jae
loope
lods
sbb
or
jecxz
cltd
lar
popf
test
lea
imul
xchg
mov
daa
pop
or
pop
cmp
imul
fmuls
mov
sbb
loope
or
leave
iret
in
in
aaa
jmp
adc
test
notl
in
nop
loopne
cmp
pushf
xor
jns
sbb
inc
mov
repnz
mov
test
inc
in
je
mov
insl
cmp
mov
xchg
dec
push
negb
mov
push
pushf
hlt
mov
or
imul
jmp
dec
mov
or
fstpt
imul
or
jnp
pop
pop
fisttpll
data16
fstl
mov
adc
adcl
mov
adc
ds
mov
and
mov
pop
sbb
in
in
inc
cmc
jbe
out
push
dec
shrl
xchg
jmp
lret
lds
in
call
pushf
in
icebp
push
mov
pusha
imul
fcmovb
scas
push
pusha
mov
rclb
sbb
mov
and
add
sbb
pop
jle
movsb
pop
lods
sub
stos
cmp
andb
insl
ja
das
push
pop
cmpl
pop
mov
cmp
adc
push
add
add
shll
push
scas
sbb
dec
sbb
inc
fwait
insl
clc
xchg
jg
test
dec
test
push
enter
outsl
cmp
mov
xor
or
in
push
out
push
dec
aad
clc
mov
xchg
aas
xor
addl
ss
dec
push
sub
add
push
inc
stc
mov
mov
dec
sub
cli
dec
cli
lock
out
rorb
jge
andb
xchg
mov
push
or
or
push
dec
call
ja
imul
jecxz
cmp
fidivrl
dec
adc
ds
mov
test
mov
mov
rorb
fidivrs
jl
outsl
mov
int
jnp
mov
ss
push
repnz
cmp
jne
jp
out
ret
loopne
or
or
imul
out
ljmp
push
pop
push
mov
dec
enter
adc
cmpsl
shrb
add
add
add
add
addb
add
aad
sbb
add
add
sbb
add
test
and
add
add
push
xor
add
add
add
add
add
and
add
add
pop
insb
sub
add
add
mov
add
add
add
add
add
and
add
add
add
add
add
sbb
xlat
les
add
push
sbb
repz
add
add
add
add
cmpsb
pop
mov
shrl
xchg
sarl
loop
mov
sbb
insl
mov
dec
test
jmp
add
xor
jno
and
popf
adc
sub
dec
xor
dec
dec
les
or
negb
lods
mov
std
xchg
stos
data16
sbb
cwtl
daa
mov
or
out
dec
mov
xor
xchg
hlt
adc
out
mov
xchg
shr
xor
push
int
popa
cs
adc
call
gs
outsb
imul
imul
andb
add
hlt
push
sub
lock
sub
adc
cmp
rcrb
incb
loopne
cmpsl
repz
stc
pop
jno
mov
lds
insb
repz
sbbb
jge
push
dec
push
int3
mov
lahf
call
xchg
fstpt
outsb
sub
sbb
adc
ljmp
xchg
je
mov
enter
repnz
mov
lock
aam
xor
std
ja
and
sarb
clc
cmp
pusha
lea
jb
stc
cmp
jmp
lea
je
test
test
cmp
pushf
jmp
cmp
xchg
arpl
ret
insl
mov
jmp
imul
dec
in
xor
cltd
xchg
dec
jecxz
out
lods
xor
inc
rorb
pop
inc
sahf
popf
enter
cmp
lahf
sub
cmp
xchg
dec
jae
push
iret
or
aad
sahf
cmp
sti
hlt
cmp
aas
xchg
add
mov
shll
mov
dec
add
pop
adc
dec
jl
pop
sbb
std
cmp
or
dec
and
add
and
jo
jno
andb
hlt
sbb
sbb
and
sub
push
cltd
data16
lcall
out
xchg
rorl
inc
add
mov
dec
push
pushf
ret
mov
mov
pop
lahf
in
add
ret
stos
shll
jno
mov
mov
ljmp
icebp
inc
sbb
inc
push
add
xchg
sub
stos
push
inc
sub
adc
bound
cld
dec
sub
sbb
fs
dec
inc
sbb
cmp
in
cli
popa
or
sbb
sub
cwtl
cltd
sub
xchg
add
and
movsl
dec
cmpsl
rcll
dec
mov
pop
cmpsl
add
sbb
inc
mov
cmc
test
inc
test
mov
fs
mov
rcrb
loopne
in
hlt
add
bound
sub
jmp
inc
and
add
cmp
pusha
movl
movb
mov
lea
jmp
push
shll
cmpsb
add
subl
mov
mov
sahf
mov
pop
sar
cwtl
jle
ret
pushf
cmpl
stos
inc
xchg
daa
add
fcmovnb
pop
mov
dec
iret
cmc
out
lods
push
fcompl
out
cmp
mov
cld
arpl
das
jbe
mov
sub
dec
cmpsl
mov
jb
add
fildl
and
jmp
or
cmp
mov
fs
je
pusha
movw
lea
jne
lea
lea
mov
movb
movzbl
push
call
ret
jecxz
pusha
andb
add
add
and
sub
sbb
inc
mov
xlat
sub
mov
in
jmp
inc
sub
mov
jo
sub
jne,pn
cltd
push
daa
sub
or
iret
cmp
pop
shrl
adc
cli
add
pop
in
insl
movl
gs
jmp
clc
and
stc
xor
adc
and
loopne
jbe
std
cltd
jns
sub
andb
into
lods
in
enter
scas
sbb
loope
xchg
add
sbb
mov
xchg
mov
rolb
movsb
mov
bnd
sub
pop
sub
repnz
dec
dec
lret
sub
add
in
mov
jecxz
adc
js
out
scas
popf
fidivl
movsb
xchg
gs
mov
mov
icebp
in
add
fs
sub
enter
dec
movsb
addr16
loope
lret
lahf
loop
call
adc
and
pop
xor
stos
xchg
insb
ljmp
je
andb
sbb
adc
mov
int3
out
and
inc
scas
cli
stc
in
faddl
xchg
call
lahf
push
std
mov
cmpsb
inc
pop
shr
mov
leave
test
into
jo
dec
xlat
loopne
mov
add
mov
lahf
cmpsl
out
outsl
inc
mov
jmp
push
addr16
bts
xorb
jl
dec
pushf
je
enter
test
je
adc
xlat
pop
andb
pusha
jb
mov
xor
pop
mov
mov
pop
shr
dec
mov
les
inc
aam
or
sub
add
jp
das
and
lret
das
fnop
or
cmp
fstp
lock
or
pop
pop
jle
in
shrb
pop
and
xor
push
negl
outsl
imul
dec
inc
xor
sbb
xor
test
cmp
mov
test
movsl
ret
cmp
cmpsb
aad
dec
imul
das
inc
daa
imul
mov
and
and
jb
insb
jmp
imul
xor
pop
popa
cmp
jb
jns
cwtl
and
pushf
mov
push
cli
test
divl
and
mov
xchg
imul
jge
add
mov
add
pop
loope
dec
mov
jg
aaa
xor
push
arpl
sar
int
das
adc
pop
das
adc
sub
or
push
dec
lret
cmpsl
loopne
sbb
daa
jmp
fimull
pop
andb
test
mulps
pop
test
mov
push
fidivs
int3
mov
mov
sub
rclb
pusha
jl
cld
dec
outsl
xor
hlt
xor
addr16
les
mov
jmp
sbb
and
jno
or
cmp
cmp
enter
jg
dec
inc
repnz
ret
cmpsl
insl
test
and
fwait
dec
leave
loop
faddl
fnstsw
cli
mov
mov
sbb
scas
sahf
outsb
rcl
push
xor
fdivl
pusha
popf
scas
sub
jb
sub
add
dec
mov
ds
imul
and
outsb
add
ret
xor
mov
lret
mov
mov
sti
iret
shr
inc
aas
xchg
push
cli
mov
clc
js
pop
andb
jl
movsb
xchg
aam
mov
sbb
adc
shr
jmp
test
insb
scas
jmp
cltd
test
push
xchg
imul
cmp
jno
fildll
cs
jne
or
jecxz
push
xchg
xor
pop
pop
adc
fnstsw
arpl
add
jb
sti
incl
dec
data16
sbb
dec
jb,pt
dec
inc
ss
adc
subb
mov
lret
cmp
xor
xchg
sbb
pop
andb
rolb
dec
and
clc
sub
jae
sbb
mov
pusha
adc
ret
mov
cmpsl
scas
loop
out
cs
fdivl
in
sub
stos
into
dec
sub
and
shl
stos
push
pop
mov
jl
pop
add
mov
das
das
int
dec
cs
xor
jg
outsl
das
pop
push
pop
push
in
stos
adc
cmp
xlat
adc
pop
andb
add
in
or
mov
adc
fistpll
js
sbb
adc
sar
add
inc
pop
iret
cmp
push
jle
out
jno
mov
mov
adc
mov
push
xor
lahf
inc
add
push
imul
shr
clc
mov
dec
fcmovb
jge
lock
and
or
imul
add
ljmp
inc
mov
rcrl
sbb
mov
outsb
and
lea
decl
xchg
test
mov
mov
mov
and
sbb
paddusw
mov
cmc
cmp
and
insb
xchg
pop
dec
arpl
push
cmp
sti
nop
sub
pushf
cwtl
pushf
mulb
cmp
scas
ds
ljmp
mov
jbe
call
jp
inc
test
pop
int
lds
pusha
rclb
jge
sbb
inc
cmp
sarl
fisttpll
scas
ds
inc
jg
inc
push
pop
lahf
lea
in
fstpl
nop
in
adc
or
loop
pusha
or
lods
dec
arpl
or
pop
or
push
invd
orb
jge
xchg
xchg
lods
sbb
mov
and
cmp
les
mov
xorb
scas
or
loop
test
push
popl
test
add
or
js
pusha
adc
out
push
xor
pop
sub
xchg
ret
ret
sahf
mov
ficomps
add
mov
xor
das
pop
andb
xchg
bound
lcall
mov
imul
push
mov
imul
xchg
sub
iret
mov
ss
xchg
repz
incb
and
enter
mov
or
cmc
mov
pop
pop
pop
stos
pop
mov
add
leave
imul
dec
pusha
orb
rolb
rcrb
addr16
inc
insb
clc
int3
add
pusha
mov
pushf
push
call
fldl2t
jp
andb
dec
mov
shll
push
cmp
jns
inc
and
adc
cmp
pop
jmp
stc
xchg
cmpb
mov
push
jle
cmp
mov
pushf
push
and
arpl
mov
daa
xchg
lcall
jo
cmp
and
cmp
xor
pop
ds
cli
fimuls
fisubs
adc
dec
cmp
sbb
inc
dec
adc
and
pushf
push
jmp
xor
pop
andb
in
dec
and
or
cmp
cld
data16
int
clc
xlat
push
push
mov
inc
mov
mov
push
rcl
jns
enter
mov
repnz
inc
pop
bound
lea
mov
fistpl
aam
mov
ret
xor
loope
mov
xchg
jecxz
xlat
mov
arpl
dec
into
or
call
add
fs
pushl
pushf
adc
call
lea
je
xchg
sar
add
shl
movsbl
cmp
lea
sub
cmp
shr
sbb
sub
and
shr
mov
movsbw
add
pushf
neg
add
inc
shl
mov
jmp
add
bt
pushl
clc
mov
push
pusha
mov
bt
test
call
call
cmc
or
call
inc
dec
loopne
andb
std
imull
pop
sub
mov
fsubrl
sub
ret
mov
icebp
imul
arpl
and
and
dec
shll
cmc
fwait
cmp
fcmovnu
pop
pop
lea
mov
or
cmp
addl
in
leave
or
flds
inc
or
jns
cli
ret
out
pop
lea
ja
push
cmc
imul
cmc
clc
add
pusha
pusha
mov
push
lea
jmp
xchg
mov
jnp
out
rol
fildll
out
fldl
sub
add
pushf
and
mov
outsl
jae
add
decl
cmp
jno
mov
xchg
insb
jb
test
insb
pop
scas
gs
psllw
xchg
sbb
push
xchg
addb
repnz
fs
inc
pop
sub
in
cld
nop
sarb
jge
inc
xorl
cmc
ror
aas
orl
inc
xor
adc
sar
aam
andb
xchg
mov
jbe
ss
and
xchg
lret
daa
sti
xor
pusha
insb
loope
dec
mov
push
adc
mov
pminub
cmpsl
fcomip
mov
cmp
and
popf
pop
and
adc
ss
pop
ljmp
jp
clc
mov
dec
push
jno
jnp
aas
int
jne
pop
shl
jae
jae
clc
push
cmp
sbb
add
repz
aaa
std
cmp
fs
sbb
aaa
push
popf
xlat
fwait
out
sti
mov
and
pop
div
out
sahf
or
aaa
xor
inc
mov
pusha
cmpsb
clc
out
out
mov
fsubr
enter
sahf
or
mov
and
lock
into
dec
jge
ret
mov
xor
enter
sub
push
insl
inc
sbb
out
shl
in
pop
js,pn
sbb
daa
subb
rcll
mov
push
xchg
dec
in
cli
mov
add
cmp
std
ss
push
outsl
scas
mov
sbbl
lahf
scas
xlat
adc
xor
xchg
rclb
adc
pop
xor
pop
pop
cltd
mov
mov
test
call
push
insl
lods
jmp
mov
ror
jg
push
push
je
cli
jl
or
inc
dec
xor
fstl
and
pusha
jmp
ret
add
dec
pop
or
in
cmp
push
clc
addr16
and
cmc
je
mov
inc
or
xchg
fs
pop
cli
loop
adc
mov
sbb
enter
pop
push
out
ret
and
pop
lods
and
cmpsb
pop
jmp
pop
in
lds
leave
jecxz
pop
xchg
and
mov
test
ljmp
cmp
push
out
idivb
sahf
pop
xchg
dec
mov
loopne
fs
push
mov
insl
adc
aaa
pushf
inc
test
movsl
jae
mov
stos
adc
push
push
xchg
dec
cwtl
test
sbb
gs
stos
pop
xchg
insb
inc
int3
push
sub
dec
jl
push
and
insb
jl
xchg
enter
out
jae
cmp
jb
andb
mov
cltd
mov
and
pop
call
sbb
mov
outsb
out
icebp
outsl
or
push
jnp
jge
add
adc
insb
pop
xor
fildl
mov
and
adc
inc
negb
incl
sub
push
and
or
xor
pop
jae
fwait
mov
lret
data16
ljmp
mov
lea
jae
pushf
push
lea
jne
pushf
stos
pushl
pushl
lea
jmp
std
jne
push
andb
mov
xchg
test
loopne
insb
xchg
mov
adc
fwait
xchg
dec
adc
inc
cmp
xor
lea
pop
pop
jmp
xchg
outsl
test
cmpsb
adc
cmp
nop
xchg
xor
sbb
pop
adc
adc
out
push
lea
daa
xorb
and
scas
push
sbb
push
nop
rol
ljmp
mov
scas
repnz
and
outsl
insl
fs
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
cmpsb
fsubs
dec
xchg
pushw
lcall
es
andb
inc
arpl
dec
insl
xor
or
cli
mov
push
and
pop
dec
pop
push
lods
push
dec
and
sti
hlt
push
cmp
enter
adc
add
mov
into
dec
int3
test
out
repnz
call
jle
cld
sbb
jmp
dec
or
mov
lahf
inc
cmp
aam
ljmp
cmp
nop
mov
js
xor
or
lea
ja
stc
call
int3
adc
push
andb
scas
sar
add
ljmp
mull
or
cmp
mul
ds
iret
test
fisttpll
sbb
jo
jbe
push
leave
pop
mov
arpl
std
repz
push
int3
aaa
and
call
inc
mov
and
iret
ret
shl
stos
adc
test
push
int3
mov
loop
mov
idivb
xor
lahf
scas
pop
cmp
repz
andb
in
and
add
sbb
std
int
test
xchg
stos
xor
sub
mov
mov
cmpsb
movsb
mov
push
xchg
enter
xchg
test
cmp
adc
jno
leave
lods
int3
sub
shrb
inc
sahf
pusha
pop
ja
lret
shl
loopne
cmp
jmp
ljmp
ret
xor
subb
lret
jbe
lcall
stc
and
gs
cmpl
push
out
lods
xchg
jle
stos
and
and
call
cmp
mov
sahf
mov
push
cld
scas
add
xorl
cmpsb
ds
jne
dec
data16
movsl
test
movsl
fldcw
cmp
nop
push
cld
fldcw
or
mov
lahf
push
gs
mov
ds
mov
int
sub
pop
or
and
sti
jae
fisttps
mov
sub
pop
insl
cmp
mov
mov
mov
pop
xchg
pop
xchg
sub
xor
push
lret
aad
jnp
shlb
or
sbb
adc
or
adc
lret
jnp
mov
mov
jmp
dec
adc
adc
xor
xor
mov
out
imul
popa
lret
jle
imul
pusha
sub
mov
push
aam
and
imul
xchg
xor
jb
sub
inc
lahf
lret
and
and
mov
sbb
dec
iret
test
dec
mov
cmpsb
sub
inc
into
hlt
sub
push
imulb
pop
loop
lret
adc
in
xchg
sbb
sub
stos
and
pop
out
stc
or
sbb
and
dec
xlat
and
push
xchg
inc
mov
data16
fwait
call
call
pop
xchg
sbb
repnz
frstor
les
or
cwtl
daa
clc
sarl
fbld
or
aam
loopne
sbb
add
fcoml
or
loopne
adc
sbb
out
stc
jmp
xchg
and
push
adc
cli
inc
and
cli
roll
mov
fcomps
and
jb
xchg
fs
cwtl
repnz
mov
rclb
and
and
out
jl
mov
xchg
pop
sbb
sbb
sub
add
cwtl
add
cmc
std
cli
push
test
out
jp
or
ficoml
jp
adc
pop
ljmp
push
pop
int
sbb
add
clc
sub
and
and
sbb
loop
mov
and
add
sti
lret
and
mov
add
clc
sub
and
sbb
and
pop
daa
lcall
sbb
es
sub
add
std
bound
sbb
xchg
add
or
dec
push
jb
test
stos
or
mov
or
and
adc
sbb
sub
adc
notl
or
les
add
sub
and
push
pushf
inc
mov
or
mov
movsb
adc
push
adc
andl
out
lock
psubusw
or
mov
and
or
cld
call
sbb
and
and
or
or
cmpsl
hlt
cmpsl
gs
or
jo
mov
inc
sub
push
lret
daa
adc
mov
test
loop
daa
push
dec
adc
xor
stos
adcb
sub
loopne
lock
xor
int3
push
add
stos
daa
js
push
mov
push
push
dec
adc
and
dec
jnp
sub
mov
sub
je
mov
cld
outsl
sub
or
clc
gs
mov
ljmp
jne
stos
out
imul
repnz
pushf
jb
or
jge
jnp
lcall
dec
stc
pop
cmp
into
scas
shr
repz
stos
mov
cmc
f2xm1
adc
mov
push
sbb
mov
adc
call
xchg
pop
adc
sbb
fs
push
add
adc
or
fcomps
and
stos
add
jnp
dec
push
or
repnz
ljmp
sub
adc
icebp
push
outsl
cmp
mov
jmp
sub
mov
dec
repnz
xchg
adc
adc
jns
mov
cltd
std
mov
test
mov
cmpb
gs
dec
mov
hlt
or
sub
lret
push
lahf
sbb
or
mov
subb
and
add
icebp
daa
sub
push
fs
repz
stos
imul
gs
js
outsb
call
mov
and
mov
stos
mov
dec
loop
xchg
jmp
adcb
imul
pop
xchg
add
jle
ret
sub
mov
sbb
mov
js
bound
fwait
mov
repnz
movsb
pop
cld
cmp
mov
inc
xlat
in
je
and
jbe
push
mov
js
or
adc
cld
add
sbb
imul
fcoml
pop
in
add
sbb
clc
and
mov
and
mov
out
lods
mov
sbb
shrb
jo
or
sbb
mov
mov
lds
fdivrs
inc
cmp
sub
mov
imul
test
outsb
sarl
push
inc
sbb
in
scas
xchg
lret
clc
adc
fistps
or
call
repnz
or
adc
sbb
int3
in
mov
in
jmp
cmp
addl
dec
sti
and
or
and
xchg
fs
cmc
lfs
and
adc
call
call
mov
pop
sub
stos
jle
jne
les
push
mov
fs
imul
xchg
mov
jne
push
sub
out
lds
pop
pushf
sub
mov
fidivrs
stos
lds
cld
ja
pop
loop
ret
push
je
sbb
mov
sbb
xchg
fimuls
ret
arpl
test
xchg
dec
repnz
mov
std
mov
inc
div
sub
add
icebp
adc
movsb
push
out
mov
popa
shrb
xor
dec
enter
dec
imull
adc
cld
pop
push
loopne
xchg
insl
dec
sbb
ja
and
pop
jno
push
fsubl
ret
jbe
ja
movsl
imul
bound
stos
mov
sbb
lahf
call
fs
int
insl
ja
lret
ret
sbb
test
mov
xchg
push
enter
popf
fbld
cmc
decl
lods
mov
test
inc
pop
aas
mov
push
adc
testl
mov
ja
jbe
inc
mov
or
das
cmpsl
cmp
sub
inc
outsb
sub
je
cld
mov
jnp
push
adc
add
outsl
clc
and
jae
xchg
imul
insl
rorb
ljmp
movaps
or
sub
pop
and
adc
cwtl
out
clc
hlt
adc
ret
in
je
xchg
dec
loopne
sub
je
xchg
mov
sub
out
xchg
lret
xor
dec
scas
push
fsubrp
dec
jnp
mov
scas
jle
test
jo
sar
lcall
cmpb
scas
out
cmpsb
lahf
fcomps
ljmp
sbb
das
mov
cs
dec
mov
or
push
sbb
sub
sbb
or
push
adc
mov
push
sub
push
sti
dec
sub
stc
roll
push
inc
add
int3
sbb
adc
fisubs
push
push
scas
enter
and
out
es
call
or
mov
or
push
add
clc
xchg
stc
push
scas
mov
pushf
or
imul
pop
je
xchg
mov
es
movsb
out
push
add
loopne
mov
mov
adc
adc
dec
adc
nop
jge
mov
test
lock
sub
repnz
lahf
mov
fs
lret
movsb
lret
sub
mov
fdivl
add
or
xor
lods
mov
std
rclb
and
jg
xor
push
movsb
scas
adc
adc
or
in
stos
repnz
sub
mov
arpl
mov
ljmp
ret
and
nop
in
test
push
sbb
divb
or
sub
jne
mov
sub
lcall
or
sub
pusha
hlt
mov
lcall
xchg
jecxz
inc
or
dec
mov
sub
xchg
jmp
jne
jnp
ljmp
arpl
sub
fisubrl
xchg
call
je
sbb
and
jnp
leave
sbb
cmc
push
sbb
mov
imul
enter
push
insb
scas
push
mov
add
pop
cmp
jnp
adc
xchg
leave
adc
sbb
dec
cmp
or
jmp
hlt
loop
repnz
shrl
hlt
call
sbb
lods
jo
push
pushf
dec
das
aaa
fbstp
mov
mov
test
or
mov
std
xchg
dec
sub
or
sub
mov
jno
ljmp
pop
loop
mov
mov
mov
adc
pop
and
ret
lret
mov
add
pusha
pop
mov
or
out
scas
or
inc
sub
xor
adc
add
jmp
pop
scas
ljmp
shl
test
adc
lahf
pop
sbb
mov
xchg
mov
scas
popf
popf
mov
sub
mov
js
insl
jns
or
jbe
cld
adc
scas
jl
ljmp
stos
adc
xor
stos
leave
dec
aaa
clc
sti
sub
jb
cmp
mov
insb
pop
flds
dec
fnstenv
and
in
jmp
imul
sub
scas
test
mov
je
lds
and
cld
jae
test
test
repnz
sbb
push
push
xchg
aam
adc
leave
pop
call
and
cli
jnp
sbb
test
jmp
hlt
cld
clc
push
adc
and
testb
pop
add
out
mov
add
cltd
cmp
cwtl
in
sub
add
push
inc
inc
aas
jmp
push
test
mov
call
loop
fcompl
out
subl
leave
int3
sbb
jne
rorb
pop
jp
or
xor
sub
add
add
pop
aas
xor
push
insb
adc
ja
sbb
test
mov
mov
test
fistpl
fdivl
mov
loop
lret
movsb
push
ret
xchg
test
scas
dec
cmpl
stos
add
sbb
pop
jg
and
mov
loop
scas
pop
add
cmp
scas
mov
lret
sub
scas
movsb
cld
mov
imul
adc
push
sbb
sti
sub
sub
nopl
xchg
mov
sbb
fwait
xchg
out
cmpl
jnp
das
and
cmp
jne
jae
adc
add
stc
push
pop
pop
jg
jae
test
lcall
jmp
mov
add
jae
pop
push
insb
call
pop
sbb
nop
aaa
outsl
mov
ret
jbe
dec
add
or
sbb
mov
jl
add
bnd
mov
jl
push
out
or
sbb
dec
in
or
mov
pop
lea
in
fs
inc
mov
outsb
js
dec
add
xchg
mov
sub
ljmp
inc
and
hlt
or
stos
aam
or
bound
shrb
jae
insl
mov
pop
dec
rorl
sub
jae
adc
sub
adc
or
nop
xchg
fcomp
jno
cwtl
hlt
sti
sbb
adc
les
movsb
lret
adc
out
xor
add
or
movsb
stc
sbb
lock
outsl
push
mov
cld
cli
repnz
or
jle
repz
imul
inc
pop
push
mov
imul
adc
push
mov
push
mov
sti
mov
aad
xchg
xchg
fstpt
aaa
or
or
pop
push
mov
xor
loop
shrb
pop
cmp
cmp
mov
and
xchg
ljmp
sti
cmp
xlat
sbb
popf
sbb
fsubr
pop
test
pop
sbb
inc
arpl
or
hlt
add
pop
pop
sub
je
pop
mov
xlat
sub
iret
sub
fs
mov
push
xlat
cmp
cs
fsubrs
bnd
or
xor
subl
scas
sti
lods
hlt
call
mov
shr
mov
jmp
fidivrl
daa
push
fsts
int
fs
out
and
push
mov
je
pop
addr16
jmp
ljmp
pop
xor
movsb
je
stos
and
out
cmp
pop
jne
add
push
loop
fwait
inc
and
mov
fld
inc
jnp
movb
inc
movsb
add
popf
daa
loope
push
lret
pop
sub
insl
cld
adc
push
xor
push
sbb
stos
loopne
in
add
das
cld
jecxz
clc
pop
outsl
testl
mov
faddl
add
mov
add
adc
mov
popa
cmp
xchg
add
cmp
xor
add
inc
jmp
daa
imulb
sbb
sub
fstl
outsl
clc
pop
insl
loop
or
sub
aad
pop
ds
jmp
mov
mov
hlt
inc
jl
clc
mov
fs
test
es
cld
outsl
mov
jmp
pop
dec
and
add
lret
mov
in
cli
and
mov
loop
dec
or
aam
mov
int3
scas
xchg
test
mov
out
les
or
sub
or
pop
or
cwtl
xlat
lods
xchg
es
and
lret
adc
pause
into
xorb
imul
test
jmp
jle
ljmp
sbb
cmpsb
loopne
shrl
ljmp
cwtl
jno
adc
add
or
push
adc
lods
lds
sbb
fidivrl
bound
xchg
clc
pop
and
mov
mov
pop
and
sbb
inc
bound
imul
arpl
sarb
jbe
xchg
pop
or
rcrb
adc
xchg
insl
dec
add
scas
pop
mov
sub
les
lret
aas
lods
ret
dec
pop
mov
call
xchg
pop
push
pop
or
pop
sub
pop
sub
scas
jecxz
scas
sbb
mov
shll
cmp
push
pop
mov
daa
adc
lret
les
or
mov
jno
xchg
adc
mov
mov
test
das
out
inc
pop
lcall
loope
push
mov
sbbb
clc
test
movsl
pop
leave
pop
sbb
dec
cmp
data16
xchg
xchg
test
inc
pop
in
mov
lret
xor
jnp
movsb
enter
mov
jg
stc
adc
or
in
lret
fidivl
xor
ss
lods
je
lret
jne
lods
hlt
mov
cs
cli
sbb
adc
add
adc
dec
je
pop
call
js
sub
sbb
repnz
push
xchg
dec
pop
iret
insl
fsubrs
hlt
jecxz
jb
add
inc
mov
xor
movsl
insl
cli
lret
loopne
repnz
and
mov
pop
jne
and
rclb
in
add
adc
sbb
push
cli
sbb
push
test
ljmp
sub
mov
jo
lods
adc
mov
scas
xor
repnz
leave
add
movsl
cmpsl
mov
xchg
cwtl
outsb
jae
in
push
imull
adc
fs
out
dec
lret
adc
pop
je
sub
add
add
daa
push
xor
or
stos
push
mov
sbb
shl
dec
mov
sub
push
out
aaa
int3
mov
rorl
push
lods
push
hlt
daa
lds
xor
cmp
jns
mov
mov
nop
out
push
xor
cld
pop
cmp
adc
outsl
vmwrite
sub
mov
out
popa
ja
push
cwtl
dec
stos
mov
and
jl
aam
jl
sub
icebp
insl
js
inc
hlt
sub
xchg
test
lods
pop
popa
push
fdivr
dec
leave
jb
out
mov
jbe
stc
hlt
and
xchg
cld
out
jmp
adc
arpl
dec
cmc
scas
in
lods
into
xchg
xor
jge
pop
fcomps
repnz
jecxz
mov
xchg
cmpsl
leave
iret
jb
sbb
cs
jae
ja
pop
lds
int
dec
jg
punpckhdq
mov
sbb
dec
dec
jns
sbbb
movsb
dec
lret
or
stos
movsl
push
mulb
js
loop
push
jecxz
sub
dec
aas
inc
xchg
sub
stc
aam
dec
xchg
sub
pop
fsub
dec
repnz
fidivs
ss
mov
add
out
scas
rol
rol
mov
and
daa
stc
loopne
jns
or
sbb
loop
dec
mov
movsb
aas
adc
dec
sarl
push
jno
mov
xor
mov
popa
test
pop
insl
mov
outsb
sbb
sub
shl
jne
or
popa
pop
xor
iret
push
sbb
iret
outsl
mov
pop
jno
xchg
ficoml
adc
stos
stc
xchg
scas
je
mov
mov
hlt
mov
out
pop
sbb
adc
adc
cmp
stos
jo
xchg
mov
and
and
xchg
jecxz
mov
adc
repnz
inc
push
push
lret
pop
stc
xchg
stos
sub
in
fstps
ss
mov
ucomiss
daa
je
jae
sub
call
or
and
push
sti
push
mov
hlt
div
roll
cwtl
dec
sarl
ljmp
jge
adc
fstl
sti
lret
lret
push
data16
mov
mov
outsl
js
pop
dec
pop
adc
mov
add
movsb
jg
mov
loope
arpl
mov
mov
mov
xchg
xorl
hlt
repnz
ja
jmp
js
scas
test
or
test
jbe
imul
dec
ljmp
sub
rol
mov
pop
and
cmpb
and
sbb
ljmp
loope
sub
add
and
or
sbb
test
sub
cmp
faddp
bnd
mov
push
mov
call
or
sbb
mov
mov
lcall
cli
clc
jnp
inc
movl
ja
test
fisttpll
mov
sub
lahf
ljmp
jno
mov
jne
aas
sbb
test
cltd
ds
lret
fcomps
mov
push
add
lret
stc
inc
sbb
out
stos
cmp
cltd
movsb
test
cld
sti
xorb
adc
sbb
jnp
das
pop
mov
cmp
fdivl
adc
push
ret
pop
cmp
subb
xchg
xchg
in
xor
loop
repnz
and
or
dec
testb
jl
pop
negl
mov
ret
cs
push
fsub
adc
dec
xchg
mov
icebp
jno
push
test
imul
clc
pop
xor
mov
and
sbb
lock
jecxz
lods
repz
adc
cld
adc
xchg
xchg
mov
sub
data16
jo
pop
mov
lret
adc
shll
mov
mov
pusha
mov
xlat
mov
bound
mov
movsl
arpl
or
js
js
and
xchg
mov
and
je
push
sbb
fdiv
mov
aad
call
cmpsb
insb
mov
lock
push
push
sub
jg
jne
xor
clc
cmpsl
dec
push
sti
pop
cmp
push
push
jno
sbb
sub
in
je
les
adc
mov
scas
out
push
stos
or
xorb
sub
or
ja
sub
sbb
mov
in
mov
jl
sbb
sbb
inc
sahf
sbb
aam
cwtl
in
mov
push
adc
lcall
sub
mov
cmp
mov
pmaddwd
lea
add
push
or
xchg
arpl
mov
cmp
sbb
call
test
loop
or
adc
out
ret
adc
inc
adc
hlt
call
mov
lds
sbb
pusha
xacquire
mov
sbb
rcl
mov
je
mov
in
nop
int3
sub
push
cmpb
jle
add
aas
fdivrp
fnstcw
arpl
int3
or
mov
cmpl
shll
imul
mulb
lret
adc
call
pop
xor
and
roll
ret
test
mov
fimull
jle
cmp
sub
sbb
pop
movsl
in
adc
sub
jnp
jae
mov
mov
adc
dec
out
push
leave
test
gs
stc
cmpb
repnz
pusha
mov
ljmp
xor
in
and
and
bound
jns
shlb
jmp
mov
push
jecxz
mov
movsb
ficomps
pushf
sub
lock
pop
or
jnp
repnz
icebp
push
xchg
mov
and
in
adc
pushl
dec
adc
stos
cwtl
sbb
sti
dec
out
movsb
lahf
insb
dec
and
in
sub
pop
cmpsl
cmpsb
fcoms
outsl
fstpt
cmpsl
sub
test
mov
lods
or
sub
sub
aad
add
push
hlt
pusha
dec
mov
leave
inc
mov
ret
je
in
sub
hlt
mov
jno
int3
repnz
lds
test
scas
sbb
mov
dec
shrb
das
push
lahf
iret
ret
call
pop
cmpsl
lahf
into
add
test
aas
ret
outsb
jne
cmc
sarl
pop
adc
fsubrp
lods
and
aas
mov
sub
xchg
shll
push
js
in
xchg
ds
loop
cmp
mov
cmc
mov
sub
je
jns
fcompl
movsl
bound
mov
test
or
or
xorb
xchg
aad
movsl
mov
imul
scas
jbe
pop
jl
cmpsl
and
std
stos
dec
imul
rolb
iret
xchg
lret
aad
mov
jno
out
push
cld
js
mov
sub
sbb
orl
cmpsb
add
fs
push
dec
adc
insb
push
pop
pop
fs
jge
mov
jnp
addr16
lock
jae
movsl
or
in
inc
cld
push
outsl
xor
leave
xchg
adc
ljmp
mov
xchg
mov
lods
sahf
roll
fsub
les
into
add
mov
lret
mov
xlat
cmpsb
sub
hlt
dec
iret
and
rolb
add
inc
lock
out
adc
ss
mul
sahf
adc
jbe
and
jne
cld
inc
xchg
or
loope
fs
or
jne
cmp
mov
dec
notb
outsl
vandnps
pop
call
jnp
jecxz
mov
mov
jae
mov
sub
or
fimuls
cmp
aaa
ds
and
ret
xor
addr16
sub
adc
pushf
cli
sub
imul
adc
nop
leave
jg
lea
mov
mov
enter
push
movsl
and
adc
xor
push
adc
xlat
fstps
imul
cmp
decb
adc
mov
push
lods
jae
adc
cmp
out
clc
pop
and
scas
sbb
push
lods
stos
loop
imulb
xchg
dec
add
mov
xchg
cmpsb
notb
cmp
js
push
pop
jb
adc
add
xor
mov
cmc
unpckhps
mov
and
jle
test
ljmp
push
jnp
sbb
adcl
mov
imul
xchg
repnz
test
cmc
and
lahf
jns
mov
test
sub
sti
iret
clc
and
mov
shlb
push
test
cmp
xchg
mov
mov
movl
xlat
pop
adc
mov
cltd
or
adcl
adc
stos
adc
inc
ljmp
inc
gs
mov
popa
ss
xchg
adc
out
lcall
rorb
js
orb
cmp
add
outsl
divl
push
leave
hlt
inc
push
sbb
adc
in
jg
and
sub
cltd
jb
fldcw
cmpsb
lret
js
adc
jge
adc
lods
out
push
push
mov
pop
cmc
sti
push
xchg
sub
push
gs
xchg
repnz
xchg
mov
lcall
add
pop
mov
lock
sub
repnz
out
cld
xchg
or
adc
dec
lahf
fiaddl
cmpsl
or
clc
push
cltd
das
xchg
mov
xchg
mov
in
adc
insl
xchg
les
or
adc
cmc
imul
test
lea
mov
jp
mov
jmp
sbb
adc
sub
out
shll
sbb
pop
clc
and
and
xchg
sub
aas
mov
mov
mov
mov
lcall
mov
push
in
sbb
sub
mov
push
inc
test
xchg
sbb
inc
dec
push
lock
icebp
mov
fsubl
enter
mov
movsb
inc
dec
or
sub
push
movsb
out
push
cmpsb
repnz
jae
div
shr
mov
insl
lcall
mov
outsl
cmpsb
mov
fmull
cmp
loop
fsubrl
lahf
lods
in
xorb
pop
sbb
dec
sub
sub
js
mov
sbb
jmp
test
push
lret
and
cmp
and
repnz
inc
das
imul
leave
cmp
jl
outsb
call
or
mov
fmuls
imul
lods
push
mov
sub
enter
mov
push
fs
ljmp
cmp
sbb
or
xchg
or
jne
mov
nop
fldl
arpl
leave
push
inc
out
cld
mov
jb
sub
dec
mov
aaa
mov
xchg
jecxz
cld
insb
js
xor
into
push
push
addr16
clc
pop
sub
mov
jmp
and
aam
pop
sub
mov
push
fwait
push
in
stc
and
mov
adc
das
lret
mov
pop
cmpsl
and
push
push
repnz
ret
cmpsb
nop
sub
addr16
add
pop
xchg
sub
arpl
pop
mov
push
scas
or
rcr
and
push
repz
mov
or
les
lret
fildl
cltd
mov
push
popf
push
testl
sub
cwtl
push
add
mov
push
js
sub
jg
add
add
fsubrl
mov
dec
sbb
pop
dec
and
xchg
in
sub
test
sub
clc
call
sti
push
inc
or
addr16
ficompl
or
sti
arpl
jo
jge
mov
test
pop
movsb
repnz
cld
cmp
mov
enter
sti
and
sbbl
insb
mov
sub
fs
mov
adc
rcl
dec
jg
lahf
mov
jns
nop
push
mov
add
dec
xchg
sbb
push
or
pushf
mov
mov
js
sahf
and
mov
es
mov
mov
xchg
mov
inc
clc
jbe
subl
or
dec
cmc
lods
and
lahf
pop
clc
adc
sub
mov
adc
push
push
cmpsl
neg
dec
or
ret
pushl
jg
jge
lods
add
int3
push
push
push
in
and
mov
jbe
cld
push
and
in
ja
repnz
cmp
mov
out
and
push
and
cmp
mov
cmp
or
pop
adc
lcall
jge
mov
je
adc
dec
push
lods
xchg
jge
push
test
sbb
mov
jmp
into
movsb
sbb
adc
sub
pop
sahf
out
in
mov
das
ja
xlat
js
stos
es
push
cmp
sub
mov
add
push
test
mov
or
lods
or
lfs
pop
cld
aam
js
jle
fs
inc
pop
add
dec
fldenv
inc
fs
or
mov
jb
jmp
scas
aas
mov
xor
hlt
adc
out
or
or
push
addr16
data16
pushf
js
enter
loope
gs
mov
adc
sub
mov
adc
lock
jmp
ljmp
ret
sub
daa
push
call
in
ret
add
stos
sbb
in
inc
cmp
jl
sub
sub
sub
cld
sub
xchg
pop
test
and
filds
repnz
lret
nop
fistl
sub
add
lods
and
les
push
dec
adc
pop
test
fwait
test
mov
adc
and
ljmp
cmp
push
lret
outsb
mov
and
popf
mov
mov
in
arpl
push
lds
dec
or
sbb
mov
xor
dec
jle
cwtl
inc
stos
jmp
lahf
jb
das
jo
or
and
notl
cmpsl
and
sub
mov
movsb
xor
negb
adc
gs
das
jb
sti
pop
push
sbb
test
stc
and
mov
xchg
xchg
arpl
cltd
stos
jmp
jge
dec
dec
mov
sbb
add
sub
imul
cmp
adc
adc
mov
and
ret
sbb
adc
add
sub
mov
jnp
test
jle
cmpsl
lcall
fmul
jb
test
sbb
daa
sbb
xchg
sti
ss
mov
sbb
pop
fsts
loope
ljmp
movsb
fidivl
jmp
jae
sub
sbb
xlat
lret
jg
cmp
cmp
enter
ret
movsl
add
adc
or
popa
xor
out
test
mov
hlt
cwtl
jbe
ljmp
sbb
sahf
xchg
mov
push
sbb
addl
add
mov
or
fbld
pop
sbb
xlat
cmpsl
inc
jne
into
sub
int3
aam
addb
mov
jae
jg
popf
daa
add
jne
add
xor
adc
sbb
movsb
push
ficoms
and
mov
sbb
xor
adc
repnz
imul
ss
sbb
mov
out
lds
mov
jnp
dec
call
jge
enter
test
jecxz
xlat
adc
xchg
int3
add
mov
cmp
cmp
and
xchg
int
and
notb
aam
pop
in
inc
cmp
cmpsb
jbe
cmp
push
push
test
lret
xchg
jle
std
mov
sub
test
inc
xlat
xchg
sub
js
pop
imul
jecxz
fadds
shll
sub
sti
inc
push
pushf
ss
imul
mov
or
xor
stos
adc
push
mov
out
arpl
repnz
xor
or
fisubrl
sbb
addr16
mov
or
pop
mov
mov
hlt
in
pusha
and
mov
cld
push
push
xchg
sbb
fcomi
pop
push
or
xor
push
and
fsubr
das
je
cld
xchg
call
sub
dec
mov
sbb
movsb
and
mov
dec
les
je
push
lods
arpl
shrl
lds
mov
scas
sbb
scas
loope
push
xchg
add
cmc
cltd
fnsave
jg
adc
sbbl
xor
jl
and
aas
testl
jmp
or
add
insb
jg
mov
sub
insb
mov
push
inc
dec
repz
jecxz
jecxz
sbb
pop
push
sub
es
popa
or
mov
mov
adc
push
xchg
add
xchg
add
cmpsl
popa
sub
inc
mov
arpl
sub
fwait
mov
or
pop
std
mov
ds
xor
jo
sti
mov
sti
enter
or
cwtl
sub
ljmp
pop
adc
pop
mov
fs
sti
imul
and
add
xor
rep
xchg
js
pushf
pop
push
and
or
nop
mov
xchg
jge
or
or
sub
out
or
fnstsw
push
lret
cli
adc
int3
jns
adc
dec
fcomip
fmulp
lcall
sbb
pop
jbe
inc
sbb
sbb
xor
shlb
push
or
and
outsb
pop
sarl
pushf
cmpsl
repnz
xor
pop
aam
popf
push
js
scas
xchg
lret
movsb
add
mov
xchg
xchg
cmc
and
daa
mov
mov
adc
xchg
sbb
andl
and
add
sub
xor
sti
lods
xchg
lods
inc
sbb
dec
lods
sub
les
mov
pop
lcall
pop
adc
popa
into
and
and
bound
jb
xchg
pop
imul
imul
cmpsb
xor
lea
in
push
test
jno
inc
push
push
les
iret
test
adc
popf
or
jmp
and
cmp
adc
ror
sub
imulb
jecxz
arpl
add
or
sti
dec
clc
cmp
or
std
and
movsb
adc
jo
cmc
sbb
xor
mov
push
imul
pop
jmp
test
dec
xchg
pushf
fwait
out
icebp
sbb
push
ret
arpl
bound
cld
ds
idivb
fbstp
add
sbb
movsb
cmpsb
inc
push
push
mov
adc
adc
mov
ljmp
cwtl
or
scas
jge
addr16
mov
push
mov
sub
out
out
push
add
add
or
sbb
add
lret
sbb
xor
std
lret
jecxz
sti
xchg
lret
or
jns
pop
pushf
jmp
pop
adc
sbb
out
mov
and
bnd
mov
in
loope
in
sbb
repnz
arpl
push
ss
bound
inc
leave
cld
shl
mov
mov
xor
mov
push
movsb
mov
addr16
data16
in
adc
mov
test
and
inc
rcrb
test
repnz
fcomps
mov
sbb
into
arpl
or
out
adc
mov
sbb
push
divl
adc
test
andl
inc
cmp
mov
cld
jno
lret
cmpsl
test
stc
add
out
cltd
getsec
adc
cmp
flds
fwait
call
test
jo
sub
ror
push
rorb
xor
fcmovnb
and
idiv
fwait
cmp
and
fldl
jge
inc
mov
int3
pop
mov
add
pop
cs
andb
add
pop
imul
mov
jg
inc
ljmp
ljmp
pop
push
inc
insl
mov
cmp
adc
sub
icebp
mov
pop
xchg
pushf
rclb
lret
adc
or
or
cmp
popa
adc
jmp
out
arpl
add
popa
mov
pusha
fwait
adc
sbb
ret
mov
ljmp
loopne
fs
lret
pop
je
ret
mov
mov
aaa
inc
jge
test
push
sbb
jp
mov
cmpsl
outsl
mov
pop
test
and
push
push
aas
adc
call
int3
mov
pop
mov
scas
sarb
stc
mov
and
aam
cmpsb
xchg
icebp
add
mov
mov
outsb
jecxz
xor
or
jbe
push
xlat
xchg
xor
ret
mov
gs
push
shlb
in
push
mov
pop
jge
out
in
push
ljmp
mov
mov
xchg
or
test
inc
cmp
repnz
lods
sbb
sti
push
add
shll
cmp
out
pop
mov
jp
push
jae
dec
adc
fmull
cltd
push
sub
inc
inc
inc
or
cmp
sbb
scas
movsb
sub
mov
and
and
sbb
inc
mov
mov
mov
je
out
jp
ret
daa
gs
fdivp
push
and
mov
sub
fadd
adc
out
fiadds
xlat
rcrl
divl
sti
daa
and
sbb
fs
xchg
adc
dec
pop
or
pop
mov
and
or
inc
out
push
jnp
movsb
lock
push
xor
test
repnz
sbb
outsl
push
cld
mov
ror
sub
stc
repnz
sub
jne
stc
in
and
sub
popa
and
and
jle
add
cmp
les
push
stc
xchg
ja
and
pop
jnp
lea
ljmp
sbb
mov
loope
add
push
jae
sbb
add
or
mov
movsl
je
mov
aas
xchg
pop
fs
dec
cli
push
out
insb
stos
adc
mov
jecxz
arpl
sbb
mov
mov
mov
imul
mov
push
push
mov
test
or
mov
mov
ljmp
popa
sbb
adc
or
add
jno
std
pushf
sbb
or
cmp
mov
jo
outsl
fisubrl
dec
sub
inc
add
pop
aaa
cld
push
fisttps
test
jle
movsb
adc
test
sbb
movsl
lahf
sbbl
adc
out
negb
push
shl
mov
dec
adc
jl
js
repnz
enter
adcb
mov
adc
ljmp
xchg
push
out
sbb
cmp
xor
fldl
in
push
leave
es
mov
adc
pop
jo
jecxz
sbb
popa
mov
and
and
push
sbb
xchg
jne
inc
fcompl
jnp
clc
dec
push
add
push
push
push
sti
cld
adc
outsb
xlat
adc
pop
out
sbb
mov
movsb
loope
dec
repz
mov
sbb
pushf
cli
je
push
xorb
cmc
mov
and
xchg
daa
scas
jge
aad
adc
cmp
ficoml
pop
inc
sbb
cmp
dec
sti
out
xor
scas
jno,pt
lcall
pop
cmc
and
sub
pushw
jbe
les
shlb
adc
mov
je
sub
test
mov
and
jmp
and
jl
daa
mov
xorb
in
pop
mov
mov
lods
icebp
leave
sub
push
mov
roll
dec
fwait
mov
clc
add
call
out
or
adc
xchg
mov
sti
daa
ljmp
lret
or
fwait
pushf
sub
mov
jnp
sub
test
add
jno
ret
mov
xor
pushf
lret
sahf
dec
sub
mov
negb
xchg
and
fwait
ror
mov
push
stos
in
pop
push
dec
push
dec
jg
mov
xchg
mov
out
imul
jne
inc
jecxz
or
pminub
gs
xchg
mov
push
xlat
adc
repnz
or
or
pop
sub
and
insb
movsl
xchg
mov
push
push
adc
adc
or
ljmp
lret
scas
add
cmp
and
popf
add
fimuls
int
out
dec
xchg
fistl
pop
push
add
movsb
repnz
or
data16
push
adc
cld
ljmp
or
or
sti
mov
push
inc
addr16
sbb
add
mov
lods
pushf
pop
daa
sti
xchg
push
add
pushf
ret
cmp
adc
arpl
cli
adc
xor
pop
es
and
mov
add
xchg
dec
addr16
stos
aaa
vsqrtpd
or
dec
push
mov
insl
xlat
jns
outsl
push
cmp
mov
movsb
pop
ljmp
dec
xchg
push
adc
mov
loope
js
adc
ljmp
into
repnz
aaa
mov
fcmovnu
stc
jecxz
hlt
ficoml
fistps
and
sbb
loop
into
dec
and
cmp
fs
out
sub
inc
hlt
lods
adc
mov
sbb
pop
decb
mov
mov
pop
inc
out
mov
out
pop
out
adc
push
mov
dec
dec
shll
push
mov
js
jmp
icebp
dec
out
push
pand
xchg
adc
data16
jae
push
mov
jne
movsb
and
hlt
fimull
adc
or
test
jle
scas
repnz
jne
ljmp
and
mov
push
add
movsb
jae
fwait
xor
repz
sbb
cwtl
lods
mov
test
daa
cmp
xchg
lock
sub
js
push
xchg
adc
test
dec
or
jbe
mov
jmp
sub
outsl
loop
pop
pushl
sbb
push
push
cltd
outsb
cmp
loope
pusha
aaa
mov
mov
inc
lcall
dec
mov
add
push
or
adc
lods
dec
xlat
popa
dec
rol
aad
mov
xor
loop
test
fs
push
cmp
adc
xchg
adc
sbb
cltd
xchg
push
or
pop
jg
fcomps
jmp
repnz
add
test
adc
sti
popf
loopne
push
mov
cltd
inc
movsb
mov
lds
push
adc
inc
add
push
leave
dec
iret
push
jl
iret
imul
frstor
push
or
xchg
clc
adc
packssdw
push
mov
add
pop
js
adc
sbb
adc
pusha
fucomp
sub
pop
in
pop
or
adc
pop
or
mov
shlb
js
adc
cmp
stos
lret
pop
lods
cmp
push
rorl
shll
cmp
rcrb
out
data16
or
rcr
je
gs
fdivr
add
xchg
popa
push
cmp
and
sbb
aam
jbe
loope
cmc
imul
dec
repnz
pop
test
movsb
leave
cmp
and
jecxz
imul
mov
push
jnp
ret
loop
push
insb
push
vucomiss
push
stc
mov
jge
adc
rcr
jecxz
out
mov
inc
movsb
or
sub
mov
cs
push
fimull
test
mov
stos
sub
repnz
and
inc
push
xor
push
scas
lret
cmp
sbb
ljmp
lcall
push
adc
lcall
mov
mov
loope
pop
or
or
and
clc
cld
repnz
xchg
into
jmp
mov
pop
into
or
push
out
or
add
xor
sub
jmp
inc
imul
lcall
sbb
lock
push
mov
ret
daa
push
dec
imul
jge
mov
dec
pushl
call
sbb
incb
arpl
outsl
mov
pop
hlt
insb
bound
mov
pop
jae
sub
jge
or
xorl
lds
xchg
leave
int
dec
loop
fisttps
lcall
xor
sbb
imul
sub
imul
pop
nop
std
cltd
pop
jl
in
icebp
pop
push
mov
mov
arpl
lret
test
mov
sbb
mov
fldcw
aam
xchg
cmp
adc
jecxz
add
lds
pop
es
repnz
std
clc
pop
addl
jmp
xchg
or
mov
mov
iret
nop
mov
inc
sti
outsb
test
cmp
lahf
and
cmp
in
fsub
jmp
movsb
fsubp
fmuls
lock
stos
adc
pop
mov
xchg
cwtl
dec
and
mov
jnp
dec
and
push
mov
jne
nop
pop
cwtl
nop
mov
xor
jmp
cmp
xorb
pslld
sbb
mov
stos
push
xchg
imul
or
sub
add
sub
js
cmpsl
pavgw
mov
adc
xchg
icebp
lcall
fdivrs
lock
mov
jno
repz
aaa
or
add
sub
pop
shl
pusha
inc
mov
adcl
test
xor
mov
and
movsl
xchg
imul
xor
mov
pushf
scas
push
cmpsl
fmul
jb
and
sub
rolb
repz
jb
rolb
and
xchg
lds
xchg
int3
inc
mov
jns
je
push
in
adc
insl
xchg
pop
sub
sub
js
in
outsb
lods
jne
aas
jns
cmp
cmpsl
mov
inc
mov
xlat
dec
add
sbb
insl
shl
out
lock
imul
inc
fs
mov
in
cmp
or
bnd
adc
lcall
cmpsb
addr16
popa
ret
faddl
and
inc
cmpsl
sbb
fdivl
jns
adc
inc
sti
stos
repnz
sbb
lds
xchg
std
clc
and
test
add
addr16
pop
test
in
test
or
push
mov
mov
or
cmp
cmp
daa
enter
aas
jecxz
xchg
add
lea
mov
push
or
adc
cmp
std
mov
popf
sbb
enter
test
shr
xchg
popa
ret
pop
lods
arpl
mov
push
andb
sbb
sbb
add
adc
push
cmp
push
call
mov
int3
xor
aam
mov
add
movsb
sub
int
stos
mov
lds
inc
jl
out
call
mov
jl
stos
and
jb
jecxz
ljmp
lret
push
jbe
sbb
clc
jle
dec
sub
cmp
dec
lcall
mov
or
movsb
std
fcoms
mov
ljmp
inc
jnp
pop
xchg
lcall
jg
push
and
or
cmp
sub
mov
test
and
sub
repnz
adc
push
imul
mov
ficoms
cltd
call
lcall
mov
push
or
lahf
loope
jno
lahf
imul
test
rcrl
push
sbb
inc
mov
nop
cmpsl
lret
enter
adc
sbb
inc
js
and
fxch
mov
in
inc
push
dec
call
pop
stos
sub
mov
test
or
icebp
pop
adc
ja
popf
mov
into
pop
mov
sbb
pop
sbb
xchg
jle
cld
icebp
sub
sbb
xchg
mov
cltd
and
xchg
or
mov
xchg
add
outsb
sbb
mov
mov
lock
mov
sti
js
call
int
adc
xor
bound
add
repnz
cmpsl
xchg
xchg
and
sub
mov
mov
in
sbb
xchg
and
jecxz
dec
xchg
add
and
xor
mov
sub
lcall
xchg
scas
xor
daa
loope
jmp
jo
xchg
stos
mov
lods
out
push
rorl
fists
fsubr
mov
mov
or
push
in
clc
adc
leave
sub
mov
jp
aaa
add
xchg
mov
mov
out
lock
or
into
sub
push
mov
dec
adc
dec
popa
or
sbb
pusha
dec
sbb
jle
shrb
mov
int
sbb
pushf
jge
sub
jl
fdivrs
sbb
dec
faddl
loopne
sbb
sub
xchg
cmp
adc
push
arpl
out
mov
push
lods
lcall
lcall
orb
cmp
rcrb
nop
mov
mov
sub
mov
pop
lret
jns
sahf
sbb
into
dec
aam
mov
push
andl
and
xor
in
out
fsts
cmpsl
mov
jmp
lret
and
iret
stc
js
add
test
or
mov
pop
test
aad
add
mov
mov
sbb
xchg
ljmp
inc
mov
jmp
sbb
jns,pt
pop
and
test
outsb
jnp
dec
test
mov
mov
leave
daa
and
std
std
mov
testl
add
fmuls
shll
pop
sub
dec
mov
cvtps2pi
mov
mov
cmc
push
arpl
fbld
insb
cmpsl
mov
ljmp
popf
test
inc
sub
rcll
xchg
fs
popf
clc
lret
lock
dec
fcomi
xor
dec
mov
cmp
jmp
scas
push
mov
leave
icebp
ja
test
hlt
sbb
mov
push
push
sahf
into
inc
popa
push
dec
jmp
add
cmp
cltd
pop
cmp
arpl
xchg
rcrl
jg
or
xor
call
sub
iret
aam
out
cmp
cld
and
inc
xchg
push
mov
test
addl
xchg
mov
inc
stos
nop
adc
push
jmp
and
push
imull
test
outsl
push
fimull
popf
out
cmpsb
icebp
mov
mov
xor
ds
sbb
push
push
es
dec
gs
lea
fcompl
ds
ljmp
adc
test
test
push
push
adc
repz
push
xchg
lret
push
ds
dec
or
jbe
daa
addr16
aad
call
fwait
adc
mov
sub
lods
test
repnz
mov
and
addb
stos
push
popa
out
es
ss
imul
jp
mov
in
shr
sub
cmp
imul
orl
in
cmpb
adc
std
jle
icebp
sub
dec
out
int
imul
pusha
movsb
popf
cli
lret
daa
lods
xor
jle
cmpsl
adc
jbe
pop
dec
pushl
or
cmp
pop
sub
rclb
adc
insl
sub
inc
clc
call
lret
lahf
lods
mov
jno
push
mov
dec
push
mov
cmc
sbb
dec
sbb
jecxz
popf
fs
mov
in
jmp
and
adc
test
rep
and
inc
ljmp
and
inc
sbb
sub
sbb
repnz
adc
and
add
ret
adc
push
or
clc
decb
or
out
jge
cmpsb
push
arpl
test
sbb
in
sub
dec
sbb
adc
dec
or
xor
sbb
sub
pop
scas
pop
out
jnp
push
pop
cld
sbb
scas
shrb
dec
loopne
aaa
stos
pop
repnz
in
jmp
call
jmp
jae
jae
pop
add
fs
add
fcmovne
push
mov
rcr
xacquire
into
loope
sbb
add
es
sub
and
mov
inc
push
nop
negl
xchg
push
dec
dec
xchg
add
xchg
shll
repz
dec
and
test
push
in
adc
fsts
imul
sub
out
mov
test
pop
in
dec
adc
repnz
adc
adc
sbb
mov
jg
mov
or
jno
in
test
mov
mov
stos
lret
xor
into
sub
repz
lret
sbbb
js
insl
or
push
iret
in
and
sub
lods
std
push
xchg
imul
inc
inc
pop
xlat
lock
arpl
out
adc
jg
ljmp
arpl
testb
adcb
lods
pushf
call
xchg
pop
fldenv
xchg
adc
movsb
or
add
call
mov
push
mov
sub
jb
in
loopne
cmc
xchg
loopne
test
jnp
adc
add
mov
pop
ds
and
pop
push
xchg
jp
dec
cmp
ljmp
mov
mov
das
lcall
lods
int
and
or
adc
pop
mov
sbb
shlb
outsb
push
mov
mov
out
ret
lahf
bound
shlb
cmp
mov
xchg
int3
shlb
ss
or
scas
cmc
iret
inc
cli
sbb
icebp
movsb
xchg
or
das
mov
cmp
mov
daa
js
sti
adc
test
add
mov
adc
fiaddl
stc
shll
jle
aad
adc
fnsetpm(287
in
pusha
rcrb
in
repnz
mov
stos
out
sarl
xor
mov
pop
stos
pop
out
mov
inc
call
and
enter
jo
pushf
jmp
mul
popa
xor
movsb
jns
mov
mov
jecxz
in
lds
adc
movsl
int
add
sbb
adc
cltd
sti
movl
inc
outsl
idiv
and
jo
fwait
sahf
mov
movb
adc
loope
sar
imul
loope
mov
mov
mov
mov
loopne
jae
popf
sub
stos
std
decl
pop
push
fs
ret
sahf
cli
adc
and
push
sub
xchg
out
lret
pop
sbb
sbb
jmp
rclb
cmp
ret
mov
iret
mov
in
xchg
aaa
inc
repz
test
sbb
adc
cmc
enter
ret
repnz
movsb
inc
test
jno
and
cmp
movsb
mov
imul
out
inc
push
mov
mov
add
shr
xor
push
cmc
sbb
sub
push
adc
js
inc
dec
inc
orl
sub
arpl
sub
xor
loop
out
jb
les
js
sub
and
mov
mov
push
rcll
mov
lret
cmp
test
xchg
sbb
mull
clc
decb
pop
aas
mov
xor
leave
dec
xchg
jb
mov
movsb
cmp
adc
sub
sub
scas
sub
in
adc
aas
loope
jb
push
sbb
bnd
sbb
push
cmp
out
push
or
mov
pop
rcll
push
daa
addr16
adc
movsl
repnz
xor
outsl
cmp
imul
icebp
mov
lret
xor
scas
ss
sub
sub
lds
insb
mov
mov
adc
add
mov
dec
sbb
call
jle
inc
insl
lods
imulb
enter
inc
xchg
sbb
cmpsl
sub
js
or
adc
pop
arpl
sub
sahf
aam
or
aas
inc
mov
pop
lds
imul
pop
cld
movsb
sub
add
or
rcrb
push
js
jae
xor
pop
mov
shl
sbb
data16
jp
jne
movsb
or
jg
nop
notb
cmp
ljmp
shl
adc
fistl
popa
ret
mov
call
adc
lahf
js
pushf
mov
aaa
cli
jo
stos
jg
adc
lret
addb
or
lods
dec
dec
jp
ss
mov
cmp
and
mov
shrb
or
jl
jecxz
jno
in
out
adc
pop
sahf
adc
aam
pop
cmp
lods
idiv
xchg
jg
cmp
fmulp
mov
sbb
hlt
cmp
mov
and
jl
inc
mov
xchg
in
lock
sub
mov
shll
outsl
ja
jle
cmp
sti
mov
xchg
nop
into
sub
sahf
pop
sbb
adcb
stc
out
into
inc
popa
sbb
mov
andl
aad
fnstcw
inc
repz
sub
fucomip
out
test
inc
push
or
arpl
repnz
jge
daa
jecxz
ljmp
sub
je
sub
jbe
adc
jns
pop
test
addl
js,pn
fnclex
or
ljmp
call
jne
mov
popf
arpl
icebp
xchg
pop
aam
lret
bound
xchg
insl
jle
inc
fisttpl
sbb
dec
mov
fs
push
imul
inc
ljmp
out
jns
jl
arpl
cmp
pop
into
jo
lcall
adc
bound
loopne
imul
mov
lret
loop
xor
stos
mov
fs
das
jl
adc
mov
or
xchg
daa
and
ljmp
mov
sub
mov
and
mov
testl
js
pop
enter
dec
loop
adc
mov
addb
test
rorl
jle
jne
sbb
bound
fs
jp
pop
mov
xchg
aad
mov
dec
adc
jno
mov
mov
push
into
mov
sub
adc
push
std
and
bound
pop
leave
mov
in
xor
xlat
fdivl
pop
movl
and
pushf
mov
inc
pop
iret
push
out
cmp
jmp
lods
fwait
mov
out
push
jb
fisubs
icebp
sbb
scas
or
repnz
out
lahf
mov
jne
pop
in
fistps
scas
cmp
jge
pop
daa
int3
out
and
and
mov
push
jnp
test
xor
sbb
rcll
imul
adc
bswap
push
inc
mov
push
in
add
daa
or
push
jecxz
adc
repnz
add
rol
popf
leave
xor
mov
fdiv
push
adc
adc
popa
xor
mov
fldenv
loopne
dec
xchg
jge
lds
sbb
call
repnz
push
loopne
es
inc
jno
inc
fisubs
adc
jge
pop
insl
mov
js
adc
popa
mov
lret
lret
pop
cmp
lsl
rorb
ja
sbb
push
stos
ljmp
jg
sti
jb
fcomps
sbb
pop
cmp
mov
adc
pusha
sub
mov
mov
sbb
add
inc
sbb
mov
mov
pop
test
stos
mov
sbb
popa
into
out
movsl
jle
mov
sub
das
cld
and
or
xor
sub
push
mov
lar
mov
in
inc
imul
pop
sub
lds
test
push
rorl
sub
shrl
mov
mov
mov
adc
sub
mov
ja
sbb
enter
int3
repz
incb
subl
or
xchg
enter
mov
sub
add
mov
dec
std
xorb
aam
cli
push
adc
std
sub
ficoml
int3
iret
jecxz
imul
outsl
mov
sbb
add
mov
mov
and
sub
mov
mov
icebp
enter
lcall
push
and
call
jno
bnd
add
jmp
push
or
xchg
and
sbb
and
std
outsl
jmp
adc
xlat
or
repnz
adc
mov
mov
xchg
add
xor
arpl
mov
jl
mov
jbe
sub
jl
mov
rcll
sub
mov
pop
and
or
sti
rcll
cmp
or
or
sbb
pop
lods
cltd
jns
sahf
lret
cmp
mov
jg
sbb
sbb
sbbb
mov
mov
sbb
jo
push
ds
mov
sbb
les
leave
negb
in
ret
insb
xchg
cli
lret
loope
push
lods
popa
movb
jo
push
mov
jle
movsl
sub
decl
push
cmp
fs
insl
pop
test
jle
mov
mov
movsb
sub
orb
sub
movsl
movsb
mov
aaa
ds
sbb
sub
xchg
popa
clc
pop
inc
xchg
mov
repnz
stos
push
push
and
adc
xchg
out
sbb
addl
xor
test
inc
repz
jmp
mov
jl
stos
pop
push
icebp
ljmp
adc
test
add
xchg
cmp
scas
mov
cltd
or
xchg
xlat
cld
popf
or
and
rcll
inc
jbe
sub
and
je
or
push
repnz
out
push
shlb
in
lea
and
daa
out
aas
imul
sahf
pusha
cmp
add
scas
daa
mov
inc
bound
dec
mov
adc
dec
mov
inc
cli
outsl
lods
mov
sbb
xchg
dec
jecxz
pop
je
ljmp
sbb
lcall
cmp
repnz
call
sbb
in
add
push
in
and
repz
aaa
mov
dec
jecxz
sbb
aam
add
dec
xchg
push
mov
push
imul
or
repnz
jp
icebp
and
sub
push
push
loope
fistpll
lock
nop
jge
jno
addb
sbb
stos
inc
mov
push
sub
sbb
adc
add
bound
fldt
loop
test
call
lods
jp
mov
repnz
arpl
std
and
fistpl
add
gs
sub
arpl
pop
cmc
stos
cmp
and
movsl
push
pop
cmpb
mov
rcrl
mov
push
andb
cltd
jp
dec
out
insb
mov
adc
call
push
mov
xor
lds
mov
je
mov
mov
stos
das
movsb
rep
mov
mov
pop
xchg
push
adc
sub
sbb
dec
scas
xchg
mov
cmpsb
lret
loope
imul
mov
fcoms
loop
addr16
ljmp
mov
jecxz
xlat
icebp
sbb
jl
sbb
cmp
and
outsb
or
daa
cmpsb
repnz
shlb
shll
push
jb
lcall
cli
mov
and
jg
shlb
mov
call
sbb
xchg
lods
loop
and
sub
xchg
xchg
mov
aam
jecxz
jne
push
lret
shll
incl
cs
and
cmp
pushf
mov
pop
mov
mov
cs
dec
sar
js
loopne
es
in
cmpsl
movsb
aam
jbe
stos
jmp
mov
mov
jp
xchg
outsl
jg
movsb
out
and
stos
stc
popf
imul
cmp
cmc
dec
mov
sahf
mov
shll
mov
xchg
test
sbb
movsb
mov
push
lret
aaa
daa
and
dec
ret
push
jge
mov
mov
adc
push
and
sub
shr
sbb
in
repnz
dec
pop
es
adc
mov
mov
push
jnp
lea
call
ds
mov
cwtl
pop
incl
xchg
fs
sub
popf
push
out
adc
idiv
pop
mov
cmpb
lret
insl
int3
inc
or
fsubr
push
push
aaa
ds
and
adc
lds
adcl
cmp
test
pop
and
fsubl
sub
pop
sub
loopne
pop
jno
push
aad
cltd
sub
fildll
xchg
in
insb
cmp
push
lods
jo
or
xor
add
or
inc
test
jl
sub
jp
repnz
enter
dec
xlat
les
jmp
stc
cltd
movl
lds
outsl
lret
cmp
nop
jl
pop
sbb
in
cmpsl
out
inc
mov
jecxz
lock
repz
adc
jl
adc
and
xor
dec
fs
subb
inc
adc
ret
stc
push
loopne
adc
out
jle
adc
sub
pop
sub
and
cmc
jmp
jns
subl
jmp
sub
jp
sub
imul
jne
jo
inc
mov
dec
cmpsb
mov
inc
adc
jne
add
inc
pop
push
fs
pop
adc
pop
jne
push
sahf
push
into
fisubrs
xchg
mov
push
adc
dec
inc
lea
stc
mov
decb
and
xchg
mov
leave
adc
je
xor
xchg
daa
or
int3
jo
sub
sti
adcb
mov
or
lcall
jno
ljmp
sbb
aas
adc
repz
outsl
and
xchg
add
adc
movsb
add
in
dec
outsl
cmc
jmp
jge
xlat
xchg
adc
imull
bnd
scas
inc
inc
jne
cmp
push
adc
lret
imul
subb
push
fdivrl
mov
int
pop
std
fisubrs
lcall
lds
popa
sbb
bnd
shr
enter
es
fmul
mov
std
fmulp
jge
subb
scas
push
add
lods
divb
popa
stos
mov
scas
fimuls
in
cmc
mov
push
cmp
fnstsw
push
sbb
xabort
adc
and
dec
data16
aad
mov
notl
or
lock
push
sti
cwtl
movsb
mov
jb
movsb
pushf
xor
pusha
and
ljmp
xchg
arpl
inc
mov
and
sub
loope
shrl
fs
lods
loop
sbb
or
aad
adc
ret
sahf
lret
ljmp
or
add
shlb
dec
sbb
adc
xchg
aam
jmp
inc
push
movsb
cmp
mov
cltd
enter
loopne
xor
call
in
fidivrl
gs
adc
mov
shrl
pop
lret
cmp
xor
leave
mov
cmp
movsl
push
pop
push
cli
sbb
repz
cld
leave
imul
orb
repnz
mov
movsb
rcrl
xchg
jb
jno
lret
andb
and
jae
jmp
into
fwait
dec
push
jecxz
rcl
sbb
inc
mov
stos
mov
xor
mov
in
mov
inc
cwtl
subb
addr16
or
movsb
sbb
sbb
test
jae
daa
out
das
mov
mov
sbb
xchg
add
jnp
dec
cmp
xchg
pop
dec
add
sbb
insl
loope
sub
or
js
push
loopne
jbe
sahf
ret
jp
enter
in
adcb
sbb
push
je
jne
test
xchg
cltd
mov
push
aad
push
lret
xchg
jecxz
sbb
inc
push
lock
inc
mov
int
inc
jnp
imul
adc
pop
leave
mov
mov
in
adc
xchg
jmp
in
imul
and
stc
xor
ja
sub
lcall
and
xchg
or
or
repnz
aas
mov
les
jl
shrl
push
dec
shrl
and
adc
shll
nop
mov
jae
cld
pusha
and
or
push
or
cmpsl
pop
lret
test
scas
sahf
dec
out
mov
push
jns
iret
and
xchg
dec
shrb
mov
movsb
orb
imul
pop
outsl
imull
out
mov
movsl
lock
and
push
mov
dec
fcmovne
jmp
loope
and
mov
into
dec
jecxz
jb
xchg
movsl
push
and
mov
xchg
enter
mov
test
jge
out
xor
xchg
test
pop
jmp
adc
push
idivb
cmp
fs
pop
mov
xor
out
cmp
repz
rcrl
shrb
loop
fs
loopne
ror
ret
fldcw
scas
lcall
mov
cmc
scas
loopne
repnz
pop
and
sbb
xchg
push
scas
mov
push
les
sub
and
int
or
movsb
test
movsl
push
inc
cli
xchg
cmpsl
mov
or
mov
push
popf
cmpsl
incb
int
ret
adc
xchg
push
in
sbb
lds
fadds
push
lret
imul
popf
jbe
mov
sar
leave
repnz
jge
mov
adc
fwait
jmp
loopne
pop
lds
sbb
mov
ja
push
not
ficoml
mov
rcr
mov
rorl
push
test
dec
lret
mov
call
andl
loopne
aas
push
addb
dec
dec
fsts
int3
cmp
test
push
leave
push
xchg
mov
inc
and
jmp
sbb
ret
pop
aaa
fiaddl
or
inc
mov
ret
mov
sbb
bnd
cli
cmc
lds
jo
adc
mov
push
mov
inc
mov
and
sti
sti
sub
filds
or
inc
setno
and
mov
adc
imul
sbb
xor
repnz
les
imul
fwait
and
repnz
dec
jecxz
jno
sarb
push
test
pop
push
cs
jge
mov
push
jp
test
outsb
adc
add
xchg
push
dec
daa
ljmp
pop
outsb
cltd
cld
enter
mov
sti
xchg
inc
mov
push
cmpsl
or
sarl
stos
ja
mov
mov
jno
lea
xchg
iret
test
mov
call
mov
mov
sub
and
mov
ljmp
push
push
in
leave
enter
movsb
decb
cmp
xorb
int
loop
stc
aam
movsb
repnz
jge
cmp
popf
je
rorl
insb
mov
cmp
cwtl
pop
lods
call
xorb
sbb
negl
std
cmp
pop
sbb
cmp
sbb
xchg
imul
scas
add
daa
repnz
scas
push
mov
push
or
or
push
cwtl
sti
test
dec
not
jo
lret
xlat
fs
or
rcrl
jp
jne
stos
or
stos
pop
movsb
sti
insl
sub
mov
aam
rcl
lahf
stos
jno
xchg
lods
stos
call
leave
into
add
inc
outsl
pusha
inc
sahf
pop
mov
scas
ja
cld
popf
xchg
out
adcb
jg
xchg
mov
leave
push
or
jo
sub
jbe
mov
popa
sub
adc
sub
sbb
and
push
pop
mov
into
jno
xchg
imul
scas
sbbb
pop
mov
repnz
cmp
sub
jecxz
fidivrs
imul
xchg
push
fs
sbb
cmp
dec
jg
dec
mov
pop
sbb
adc
push
inc
sbb
pop
popa
sub
lds
pop
jb
dec
dec
sbb
stos
clc
mov
jno
add
add
scas
outsl
add
xchg
and
mov
test
or
decl
mov
shr
cmp
cmpsl
xchg
les
iret
imul
sti
jl
lock
inc
inc
test
stc
dec
repnz
or
rcrb
das
adc
sbb
mov
in
outsl
xor
ljmpw
lea
imul
mov
out
jmp
insl
jno
jno
aas
adc
jecxz
popf
lea
mov
loope
je
outsl
push
mov
push
mov
xor
sub
lcall
or
sbb
jbe
repnz
in
mov
loope
loopne
mov
sub
jle
mov
jge
cmpsb
lret
lock
ds
jno
loopne
clc
xchg
test
stc
mov
mov
mov
mov
adc
lea
aaa
inc
sub
push
cmc
or
test
aam
add
pop
push
outsb
popa
fiaddl
iret
jecxz
mov
adc
sub
add
jle
mov
jp
adc
roll
cmp
dec
aad
pop
fimull
sbb
pushf
int3
sbb
pop
or
test
sbb
movl
aam
repz
jmp
dec
bnd
inc
fsub
push
or
int3
and
int3
inc
mov
or
movsb
repnz
cli
das
sbb
adc
sbb
cld
es
roll
lahf
sub
jg
push
clc
sbb
push
scas
dec
and
xchg
or
push
fisttpll
shrb
repnz
popf
or
add
jecxz
pusha
push
push
dec
inc
jo
or
popf
fs
shrb
ds
dec
xor
add
sahf
lcall
mov
xchg
or
stos
push
mov
mov
lcall
pop
rcr
mov
xor
shrb
xor
ljmp
popl
call
cld
adc
or
and
movsl
mov
addb
jle
jns
jmp
nop
jge
call
fsubl
popf
mov
mov
aad
mov
filds
sbb
and
mov
mov
aam
stc
mov
lcall
adc
cmc
sbb
ljmp
and
shll
xchg
mov
stos
sbb
mov
dec
dec
lds
sub
push
mov
sub
cmpsb
ret
inc
sub
sub
add
leave
xorb
scas
or
outsl
adc
daa
lret
call
adc
out
mov
xor
lret
js
jl
int3
sub
inc
in
test
int3
adc
daa
cmpsl
jle
nop
sub
push
popa
clc
dec
test
loop
rorb
push
sbb
cmp
rolb
test
mov
loope
test
pop
push
sar
jmp
lods
lret
lea
repnz
fidivs
xchg
dec
and
clc
or
push
gs
sbb
divl
aaa
les
ret
repnz
push
loop
enter
add
pop
aas
jge
cld
iret
fs
push
call
fcmovne
addr16
out
cmp
or
xor
pop
push
pusha
jno
in
add
jne
jo
icebp
mov
xchg
or
xorl
mov
or
jb
adc
mov
bound
insb
dec
ljmp
cmp
in
lahf
stc
jbe
push
sbb
push
mov
and
cmp
sbb
shlb
xor
push
and
out
popa
cmpsb
xchg
arpl
push
inc
loope
cli
jge
scas
shlb
dec
push
xrelease
repnz
jge
stc
cmpsb
cmp
sub
dec
jecxz
loope
adc
sub
push
fidivrs
popa
push
test
testl
mov
test
bound
xchg
popf
push
nop
jecxz
sub
ja
xor
sub
das
pop
int3
cli
lret
lds
or
mov
cmp
cmp
cld
and
mov
pop
cmp
out
jbe
push
dec
negb
mov
ret
pop
mov
add
mov
push
imul
test
adc
in
inc
jno
inc
test
or
scas
lret
mov
pop
out
test
loopne
pop
jecxz
lretw
in
xlat
dec
or
cs
je
shlb
lcall
ret
mov
jmp
aam
mov
test
pop
aas
enter
and
cmp
fs
mov
adc
push
mov
daa
jno
pop
sbb
ds
in
stos
dec
and
hlt
call
loopne
imulb
fstpl
sbb
sub
out
jge
mov
mov
loop
jecxz
out
mov
arpl
xchg
je
repnz
imul
lcall
iret
xor
adc
fimuls
sbb
fstpl
in
jmp
lock
stc
xchg
nop
rcrl
add
sub
pop
and
idiv
push
adc
cli
ret
and
xor
in
mov
stos
repnz
jb
sbb
inc
push
out
dec
loope
pop
fisubs
into
loop
sub
lea
push
loope
jbe
movsb
mov
mov
mov
sbb
xor
lret
repnz
lock
mov
sub
mov
cmp
push
jmp
xchg
in
repnz
sbb
lahf
and
xchg
xchg
pushf
add
xchg
jg
cmpsl
adc
cltd
or
out
inc
aam
dec
lea
ror
adc
sub
push
adc
outsb
ljmp
imul
pop
push
incb
clc
movsl
mov
inc
mov
pop
push
adc
or
xchg
stos
jl
je
in
cmp
ret
adc
bound
sub
dec
jb
popl
jecxz
sub
mov
inc
fldt
push
fdivl
sub
and
and
push
add
fmul
imul
loope
ljmp
adc
fsubr
xchg
push
push
fwait
aam
jb
dec
mov
leave
mov
js
mov
imul
hlt
cmp
xorl
and
sub
adc
jecxz
xchg
movsb
fcmovnbe
sbb
fimull
movsb
pop
pop
sub
xor
out
lret
test
rcll
stos
and
popa
loope
call
jae
aam
int3
andb
sub
push
sbb
xchg
ret
add
cmpsb
xchg
sbb
push
adc
sbb
fs
add
jo
test
cli
add
xlat
xchg
aad
daa
push
xchg
sbb
adc
mov
inc
iret
sbb
mov
dec
pop
inc
mov
ret
cmc
aas
lcall
int
pop
in
or
aas
mov
dec
aam
mov
and
add
sbb
cmc
sti
mov
jns
sub
and
insl
mov
sub
icebp
test
push
jo
enter
hlt
pop
mov
in
sahf
jecxz
ss
inc
ss
adc
outsl
add
jp
add
xor
gs
aas
and
sbb
or
dec
dec
dec
fwait
xor
sub
ss
andl
shlb
mov
aad
outsl
out
mov
dec
jle
pop
mov
fdivs
jge
imul
fisubrl
cmpsl
and
hlt
hlt
inc
and
jae
test
je
repnz
notl
pusha
jle
fucomp
stc
sbb
jo
xor
fdiv
fildll
imull
jmp
ljmp
mov
add
repnz
mov
jge
adc
mov
xchg
repnz
ja
test
movsb
push
add
imul
cmc
mov
fs
cmp
xor
adc
dec
lret
add
ret
nop
cmpb
mov
scas
inc
sub
ss
fxch
pushf
and
mov
jno
imul
adc
pop
mov
xor
out
and
fs
and
mov
popa
mov
js
scas
movsb
push
adc
lret
jl
sbb
fsubl
sbb
dec
fldenv
mov
loop
ds
cld
test
hlt
dec
and
data16
inc
dec
ss
lret
mov
loopne
push
jb
icebp
or
adc
fs
mov
mov
cmpsb
mov
inc
mov
sub
fwait
call
and
test
jnp
xor
mov
dec
pusha
dec
inc
popf
mov
addr16
loop
and
mov
pop
xchg
in
xchg
pop
mov
loopne
sub
mov
adc
and
inc
xchg
cmpb
mov
mov
insb
push
call
mov
lods
lret
fistpll
bound
mov
push
sbb
sbb
test
lock
sub
xchg
cmpb
imul
push
stos
adc
fs
adc
pop
rolb
pop
daa
repnz
xor
imul
sbb
aaa
mov
pop
imulb
xor
push
js
cs
repz
in
adc
test
cmp
and
test
mov
popf
sti
mov
pop
psrld
fadds
bound
adc
ret
lret
dec
rcr
add
pushf
add
mov
out
fdivs
sahf
push
jns
fisttpl
sbb
add
leave
in
add
mov
shlb
sub
xchg
xor
movsb
sub
pop
sub
adc
sub
insb
cmp
fmulp
movsb
push
pusha
fistpl
test
add
xchg
negl
jns
cmp
jo
push
xor
insb
aaa
les
or
nop
cmpsl
lret
icebp
inc
push
mov
jg
lock
xchg
adc
cli
and
push
dec
daa
xor
xchg
lcall
xchg
cs
in
push
test
in
js
cld
push
xor
cmp
cmp
adc
add
dec
cmpsl
stos
in
shll
and
aas
jmp
push
lahf
stos
enter
arpl
shll
pop
hlt
dec
fadds
insl
mov
or
xchg
ja
adc
mov
mov
addl
frstor
pop
add
and
test
in
nop
add
icebp
mov
push
sbb
xor
icebp
mov
push
push
repz
iret
call
jge
outsl
ljmp
arpl
or
add
and
cs
repnz
jecxz
stos
sti
push
das
stos
je
xorl
and
dec
test
scas
mov
aas
adc
mov
xchg
inc
imul
sbb
cmpl
fwait
dec
jbe
mov
cmc
inc
ja
adc
dec
mov
sbb
js
dec
movsl
push
inc
push
popa
std
adc
ljmp
test
xor
ds
cmpsb
cmc
sbb
repz
sbb
mov
popa
push
adc
fs
inc
mov
mov
push
out
lods
fcmovbe
push
cmpsl
or
std
lock
insb
popf
in
in
out
xor
cwtl
dec
xacquire
mov
into
mov
jp,pn
mov
xchg
xchg
scas
loop
sbb
fidivrl
push
addr16
push
loop
adc
cmpsl
inc
pop
in
jg
mov
leave
test
mov
cmp
dec
push
lcall
int
lds
xor
mov
repz
or
xchg
sbb
mov
sti
xchg
mov
mov
cmp
xchg
mov
mov
dec
sbb
aas
or
add
and
jb
daa
in
sub
mov
push
mov
into
cli
push
pop
sub
mov
cmc
ljmp
or
jo
enter
or
movsb
scas
repz
xlat
push
add
jmp
xor
test
adc
dec
ret
pop
pop
push
sahf
outsb
cs
pop
xchg
xchg
xor
xchg
sub
inc
xor
xchg
jo
push
bound
add
dec
sub
xchg
adcb
jmp
mov
jo
lret
xchg
addb
or
sub
insl
imul
daa
jmp
std
incb
arpl
mov
and
jno
data16
sbb
xchg
mov
cmpsl
mov
pop
repnz
loopne
or
popf
pop
jo
sbb
cld
lret
mov
xchg
mov
mov
divb
mov
mov
mov
jecxz
xchg
lea
movsb
mov
js
lea
sbb
mov
iret
fs
stc
stos
or
push
adc
mov
aas
xchg
jnp
lret
dec
jge
in
cmc
flds
add
sbbb
xchg
pop
mov
pop
xor
adcl
lret
cmp
stc
sub
lock
sbb
cmpl
test
sbb
push
mov
js
pop
mov
mov
xchg
mov
movsb
and
movsb
mov
outsb
push
dec
in
push
cwtl
xor
negl
mov
add
nop
adc
je
sbbb
jno
mov
lds
pop
test
fsubr
popf
cmp
jecxz
cli
cli
or
inc
pop
in
rcll
sti
subl
push
test
lds
icebp
xlat
enter
jmp
sbb
mov
sbbl
sbbb
std
adc
push
ret
xlat
cmp
cmp
ss
fwait
and
or
into
and
jl
mov
int3
inc
test
pop
pop
adc
push
rolb
push
popa
xor
mov
repnz
xchg
push
add
dec
test
push
repnz
repz
xchg
nop
pop
inc
mov
push
imul
stc
test
jmp
outsl
call
dec
adc
nop
xchg
sbb
cltd
or
cmpsb
xlat
loop
add
dec
mov
aam
sbb
jge
insb
enter
arpl
add
enter
sti
mov
cld
movsl
inc
sub
push
sub
orl
jmp
or
sbb
outsl
aaa
or
add
bndldx
mulb
push
push
or
or
lcall
sbb
jnp
adc
ljmp
mov
push
pop
ljmp
enter
xchg
mov
and
decb
pop
sbb
sbb
stc
out
sub
pop
xchg
jbe
adc
hlt
lea
nop
xchg
mov
dec
in
sub
push
out
adc
insl
sbb
lret
xor
mov
sub
xor
xchg
movsb
sbb
test
push
jnp
mov
push
roll
lds
imul
hlt
adc
sahf
push
mov
addr16
mov
rcrb
sub
sti
sub
lods
push
sub
lods
leave
stos
mov
pop
xchg
shr
pop
sub
pop
rcrb
shrb
imul
in
inc
pop
or
adc
aaa
into
std
mov
leave
inc
call
push
pop
and
inc
adc
xorb
pop
icebp
jle
dec
add
fcomps
sub
lret
pop
sarb
jae
and
stos
testb
int3
add
jmp
push
into
sbb
ja
arpl
or
adc
test
xchg
pop
popf
insb
dec
xor
cmpsl
mov
sbb
push
xchg
in
adc
clc
jnp
mov
push
dec
cmpsl
jae
icebp
call
add
stos
adc
or
rol
jle
hlt
inc
punpckldq
sar
sub
insb
sbb
jle
and
adc
loopne
imul
arpl
incb
call
fmuls
sub
out
loope
push
xlat
popf
mov
pop
mov
cltd
push
std
sub
inc
push
or
rol
cmpsb
mov
callw
and
push
dec
sub
mov
mov
or
pop
mov
fiaddl
outsb
dec
and
lods
pop
insb
sbb
jb
mov
movsb
add
cwtl
repz
push
fdivr
push
xchg
mov
in
push
clc
inc
call
push
adc
add
lret
dec
adc
pop
sti
and
movsb
jnp
les
movsl
cmp
adc
lahf
clc
sar
cmp
mov
or
add
icebp
cmp
jge
leave
xor
in
lret
mov
es
subl
pop
mov
adc
repnz
mov
adc
aaa
jmp
repnz
xor
inc
sbb
lahf
rcrb
push
rorl
mov
in
ljmp
movsb
mov
lret
sub
out
int
cmp
repnz
sarl
and
sbb
in
push
and
pop
and
or
adc
push
dec
adc
rcll
stos
fdivs
and
or
xchg
in
fiaddl
cwtl
mov
push
test
xchg
repnz
test
sbb
xchg
iret
aam
add
jecxz
push
ja
push
rcll
ja
shlb
sub
rorl
mov
sbb
dec
cmp
and
add
mov
ss
add
mov
sahf
rcrb
in
test
les
aas
call
adc
pushf
lea
adc
mov
push
add
adc
daa
lcall
mov
pop
or
or
mov
jne
sahf
cmp
jmp
mov
icebp
dec
mov
dec
movsl
in
jae
sahf
mov
lret
sbb
sbb
stos
jmp
test
outsl
clc
pop
pop
xlat
adcb
sub
out
jnp
sbb
jl
cmpsb
mov
repz
testl
fildl
cmpsl
push
jno
jmp
scas
or
sti
jge
insb
mov
sbb
adc
xchg
repnz
lock
in
xchg
in
adc
xchg
stos
sti
push
add
nop
pop
and
mov
stos
sub
mov
dec
inc
xchg
in
out
test
ljmp
sbb
test
cmp
addr16
mov
jno
jecxz
jmp
dec
shll
sub
dec
out
icebp
push
pop
or
adc
mov
adc
ds
mov
mov
fs
daa
mov
insb
and
sbb
mov
ja
and
mov
xchg
and
idivb
xchg
add
pop
xchg
arpl
test
sbb
dec
xchg
jge
shrb
enter
fs
inc
and
arpl
add
jp
sbb
mov
mov
add
nop
repnz
jge
dec
cld
push
adc
lds
iret
fstp
out
outsb
fdivr
lea
xchg
push
aas
out
mov
hlt
mov
lock
jnp
inc
mov
fists
mov
mov
mov
fdivp
xchg
out
pop
mov
adc
jo
loop
mov
cmp
leave
dec
push
xor
adc
repnz
cmp
pop
dec
push
xchg
jl
xchg
cmp
les
push
push
xor
cmpsb
sub
lret
push
sub
test
daa
adc
or
popa
loope
call
jnp
mov
ja
xor
sub
sub
xchg
pop
add
mov
cs
mov
push
lods
in
xchg
xchg
cwtl
dec
or
imul
sub
push
lds
sbb
movsb
hlt
call
and
subb
sub
and
xlat
ror
push
push
add
aas
arpl
ret
jge
inc
add
jg
pop
int
pop
or
es
sbb
fs
inc
sub
mov
jb
xor
adc
pop
push
cmovl
daa
or
mov
and
ljmp
sahf
push
out
popf
sbb
push
repnz
mov
mov
add
mov
xor
arpl
sub
adc
ret
xor
je
cmpsb
jecxz
ljmp
cmc
flds
add
mov
sbb
xor
imul
add
mov
sub
xor
icebp
cmp
in
arpl
sti
jl
movsb
repnz
pop
jecxz
scas
sub
scas
mov
test
or
mov
cmp
dec
mov
sahf
sbbl
xor
inc
and
and
outsb
call
ds
inc
lock
sbb
mov
fdivrs
and
popa
je
adc
jecxz
jecxz
fsubrs
icebp
lods
push
lret
enter
pop
imul
ja
xchg
cmc
lds
int3
or
jo
jne
pop
filds
or
inc
and
lods
call
movsl
fs
movsb
cmp
imul
mov
xchg
fs
ret
add
arpl
or
jo
add
add
push
add
dec
nop
xchg
lea
cmp
les
xchg
cmp
in
das
inc
iret
sti
mov
xor
inc
or
or
and
aaa
mov
ljmp
in
xchg
fiaddl
popf
fbstp
mov
and
repnz
sbbb
jle
les
jo
loop
loop
int
xor
cmp
pop
mov
jno
sub
push
lret
and
mull
in
push
push
adc
cwtl
xor
push
adc
add
scas
inc
or
mov
int3
test
pop
cld
dec
and
imul
sub
aam
ficoms
pop
arpl
ja
sub
imul
repnz
mov
push
mov
add
jg
std
je
pop
das
ljmp
or
fwait
and
iret
and
push
mov
les
daa
and
and
ficoml
mov
cs
add
jmp
fcmove
fnsave
jmp
push
jge
dec
les
jp
aas
sbb
xchg
dec
jle
pop
mov
xor
add
pushf
mov
scas
mov
dec
call
jnp
jg
or
dec
mov
adc
sub
hlt
in
adc
or
rorl
sti
das
mov
divb
in
lods
jmp
sub
dec
movl
ret
cmp
jmp
or
sub
lods
dec
adc
dec
cmp
jns
sub
in
insb
imul
loope
hlt
pop
shrl
lods
insl
fidivl
shlb
daa
jno
ss
mov
lret
push
popa
jo
adc
outsl
xchg
push
cmc
nop
sub
sub
ljmp
enter
call
ror
ss
lret
mov
xor
lret
icebp
cmpsb
sub
lods
inc
movsb
inc
idivl
iret
imul
push
sub
jecxz
adcb
and
jecxz
add
lea
mov
inc
mov
dec
fdivrs
lea
mov
push
mov
adc
mov
jbe
pop
sbb
cmp
in
pop
inc
int
mov
cltd
cld
mov
enter
pusha
mov
push
insb
cmp
inc
cmpsb
dec
cli
mov
xchg
repnz
push
mov
jmp
lock
adc
and
ret
inc
jl
std
lret
into
mov
sbb
jle
int
xor
push
add
test
out
and
adc
stos
dec
daa
jae
jle
jge,pt
sahf
xchg
push
leave
mov
add
xchg
mov
cmc
out
pop
xor
dec
jae
sub
cwtl
dec
andb
and
mov
clc
jecxz
push
sbb
and
icebp
inc
xchg
sbb
stos
xchg
repnz
imul
aad
out
and
inc
xchg
sbb
and
xchg
test
push
pushl
ret
rorl
iret
jp
mov
leave
fisttps
shrl
fs
add
ss
cltd
daa
jbe
test
or
stos
cli
in
ret
aas
aad
leave
add
out
sub
pop
inc
ret
xor
rol
pop
outsb
out
dec
pop
xchg
or
adc
pushf
in
rcrb
sub
mov
popf
arpl
pop
jne
cwtl
rclb
mov
sub
cld
xchg
paddusw
xor
leave
sub
aam
mov
dec
add
loop
in
xor
outsb
ljmp
mov
xchg
xchg
jmp
sahf
cmp
sbb
sbb
mov
je
cmpsl
adc
test
test
mov
ljmp
mov
shrb
mov
or
in
iret
jmp
in
push
adc
cwtl
fcmove
jp
cli
ss
or
lock
ljmp
push
ljmp
add
add
xlat
hlt
jge
adc
dec
sbb
test
mov
sub
jno
cli
mov
jb
mov
jecxz
repnz
adc
mov
jl
mov
das
xchg
int
imul
hlt
and
dec
mov
add
add
jns
imul
outsl
notb
lahf
cltd
mov
cltd
adc
or
push
jbe
add
and
pop
data16
xchg
xor
out
testb
popa
mov
in
ljmp
xor
in
cmp
xor
outsl
pushf
clc
enter
aas
pop
movsb
jge
add
frstor
idiv
and
mov
adc
aam
jns
ret
or
or
or
roll
ret
xacquire
or
sub
mov
dec
push
aam
subb
fs
xchg
in
xchg
ljmp
sub
cmc
sbb
icebp
shlb
aam
mov
xor
adc
mov
ds
fdivrl
jmp
js
mov
cwtl
scas
repz
stc
arpl
repnz
test
hlt
or
faddl
xor
inc
sbb
or
xchg
fdivs
cld
jae
pop
mov
test
mov
cli
dec
push
inc
ja
test
push
mov
orb
jl
sarb
push
out
mov
sub
pop
inc
dec
mulb
add
sbb
or
dec
cmp
sahf
mov
mov
std
lret
rcrl
ljmp
adc
movsb
mov
add
clc
lret
sbb
push
cmp
adc
aaa
jg
ljmp
bnd
mull
inc
dec
and
mov
daa
mov
pop
mov
sbb
jmp
cmpsl
nop
fidivrl
sub
cmp
pop
gs
rcll
nop
lods
bound
pop
fidivl
jg
add
lret
inc
adc
imul
into
inc
mov
dec
mov
mov
adc
cmc
bound
js
push
push
push
leave
add
mull
lods
push
xchg
cmp
std
movsl
sub
das
jno
mov
pusha
xor
or
ret
fidivrl
pop
cmpsb
xchg
icebp
mov
scas
mov
push
mov
and
sbb
enter
xlat
xchg
add
int
into
ret
arpl
cwtl
das
aad
add
sbb
pushw
aam
and
enter
xchg
lods
divl
ljmp
shl
sbb
add
mov
stos
cmp
es
mov
sub
and
and
mov
and
sti
outsb
movsl
scas
adc
jns
or
popa
dec
push
lods
jge
xchg
jle
lret
in
pop
inc
aam
sahf
fimull
sub
test
dec
mov
out
adc
sub
sbb
and
sub
mov
add
inc
mov
mov
movsb
call
insl
sbb
insb
cmpsb
sub
push
or
fidivrl
stc
and
push
cmp
push
imul
mov
cmp
outsb
in
adc
xor
rcr
add
fs
inc
js
push
push
push
xor
aad
js
mov
mov
insl
mov
push
sbbb
cld
jecxz
sub
mov
sbb
sub
int3
xor
imul
in
sbbl
cmp
xchg
adc
mov
cmpsl
scas
insl
call
xchg
mov
ret
jle
js
rorb
adc
movsb
into
ds
out
pop
out
mov
pop
in
xchg
adc
xor
add
xchg
add
push
sbb
adc
rcl
pop
lock
jl
dec
sub
sahf
mov
push
inc
inc
push
popa
adc
stos
jns
int3
pop
icebp
punpckldq
xor
lock
inc
stos
fs
jecxz
loopne
repnz
mov
fldt
adc
ret
dec
mull
mov
and
roll
adc
cld
mov
das
push
inc
xchg
and
add
lods
adc
mov
mov
sub
jecxz
push
mov
mov
aad
xchg
xchg
movsb
pop
outsb
xchg
sub
jmp
sbb
or
mov
mov
mov
inc
sbb
mov
cmp
test
movsb
dec
dec
stos
scas
loopne
cmp
dec
negb
adc
out
push
inc
loopne
pop
xlat
push
lock
jge
lea
pop
mov
fiadds
and
add
leave
xchg
xchg
movsb
dec
pop
sbb
in
mov
sub
mov
jecxz,pt
sbb
imul
xchg
mov
fcoms
and
popf
call
imul
xor
mov
sahf
jb
repnz
mov
mov
lcall
sub
notb
push
push
mov
dec
adc
and
push
orb
leave
test
iret
iret
inc
into
pop
shlb
mov
out
xchg
std
cmp
xor
inc
fdivrl
fstp
dec
push
cltd
ljmp
jecxz
sar
push
leave
inc
stos
out
push
jecxz
jp
mov
in
sub
jnp
xchg
pushf
imul
jle
pop
repnz
lds
scas
mov
inc
lods
pop
xlat
loop
cmp
sub
testb
jno
std
push
imul
popf
pop
mov
push
repnz
xor
sti
cld
mov
daa
mov
aad
repnz
mov
pop
mov
ja
adc
mov
cmp
test
aam
lahf
sbb
out
xor
push
sarb
lahf
rorl
fistps
mov
mov
pop
and
out
movsl
mov
jmp
pop
fmuls
add
mov
mov
inc
idiv
test
iretw
mov
inc
jecxz
addr16
shlb
outsl
xchg
sbb
xchg
in
pop
xor
mov
dec
dec
mov
repnz
ret
fs
lcall
enter
lods
and
clc
mov
enter
push
je
fs
dec
mov
loope
sub
in
orb
stos
xchg
mov
dec
addr16
test
mov
imul
push
xchg
sarb
js
pop
out
cltd
test
in
cmp
imul
ret
lcall
mov
cld
aam
inc
scas
shrl
xchg
jbe
sbb
pop
inc
add
jne
ja
int3
stos
pop
dec
push
pop
decb
push
pop
push
cld
cmp
mov
push
mov
sbb
adc
test
jecxz
ret
notl
push
shlb
xlat
jg
xchg
pop
or
lret
cwtl
andl
arpl
sub
dec
mov
movsb
push
popf
lret
adc
sub
mov
aas
ret
enter
rep
pushf
push
jecxz
int3
xchg
js
mov
jns
sti
arpl
and
clc
jecxz
je
push
xlat
mov
mov
pop
xchg
imul
adc
mov
mov
inc
clc
ret
lret
sbb
cmp
xchg
stos
repnz
or
out
cmp
outsb
pushf
mull
cmp
adc
fs
mov
imull
xor
loope
or
sub
aam
xor
lods
and
inc
add
daa
mov
xor
mov
popf
jbe
sbb
jno
repnz
test
arpl
pop
sbb
loope
insl
insl
aad
lods
insb
call
jg
je
into
push
loopne
lcall
sub
sbb
xchg
add
fsubr
xchg
testl
adc
jns
dec
fiaddl
jae
ja
stos
xchg
xchg
jno
lds
lahf
sahf
cli
sbb
and
mov
mov
testl
ja
mov
movsl
jnp
arpl
test
ljmp
xor
or
pusha
push
sbb
jmp
rol
into
push
cli
into
shlb
jge
xor
add
cld
push
hlt
sti
ljmp
popf
stos
js
pop
test
sbb
xor
out
test
aam
cld
lret
sub
sub
sub
daa
xlat
ljmp
out
sub
jecxz
adc
sub
sbb
imul
test
popa
add
in
out
push
pmuludq
ljmp
jle
pop
je
idivl
sub
sahf
and
data16
pop
ljmp
mov
sbb
mov
fistl
pop
call
rolb
and
fldenv
cwtl
out
test
or
sub
es
sub
hlt
jmp
hlt
xchg
hlt
call
hlt
stos
hlt
push
hlt
test
jmp
sbb
xchg
push
or
sbb
mov
add
mov
inc
mov
jbe
sub
xchg
mov
jg
cli
lods
cmp
jns
mov
scas
jnp
add
jge
imul
cmp
adc
or
std
aas
sar
into
cmp
jns
js
jnp
add
ds
sti
cmc
cmp
hlt
jp
bnd
mov
rolb
cs
sbb
in
jge
mov
clc
mov
es
mov
lods
inc
or
or
sti
sbb
cli
aam
sbb
sub
sub
sbb
sub
js
decl
sub
fcoms
call
push
xchg
sbb
and
push
pop
iret
adc
mov
adc
adc
setnp
bound
shll
clc
dec
rorb
sub
addb
push
add
dec
and
adc
sarb
in
jns
std
insl
and
loop
push
subl
addr16
out
sahf
lock
pop
lret
push
add
inc
sbb
and
jae
xchg
jbe
call
std
daa
and
icebp
or
stc
movsb
jmp
pop
sbb
les
out
dec
loop
ljmp
add
mov
lods
hlt
sub
and
or
sub
sbb
or
sub
and
outsl
and
and
scas
dec
add
jl
inc
and
or
and
sub
cmc
sub
inc
cwtl
adc
nop
add
call
rep
or
and
outsb
lcall
sbb
fstps
or
add
xor
sub
mov
lret
and
je
pop
call
and
and
add
test
ret
adc
das
xchg
and
xchg
sti
pop
in
jb
sub
lcall
or
stos
pushl
addr16
mov
je
or
and
mov
xchg
bsr
sbb
and
das
popf
and
and
lods
inc
push
repz
adc
sbb
scas
push
pop
xor
cmp
push
adc
mov
call
out
and
pusha
or
sbb
push
movsb
xor
in
scas
pusha
pop
jb
aam
adc
and
and
push
jo
inc
adc
or
sbb
negl
and
in
sbb
sbb
jecxz
adc
popf
and
or
sub
and
or
rcrb
sub
mov
xor
and
inc
or
mov
push
scas
push
scas
push
adc
mov
std
cli
mov
adc
push
rcl
mov
popa
mov
pop
jns
insb
scas
cs
xlat
mov
in
dec
mov
or
pop
and
push
sbb
inc
loope
addr16
xor
loopne
xchg
inc
mov
sbb
sbb
cmp
add
roll
jecxz
in
xchg
lcall
or
clc
mov
push
scas
sbb
mov
sub
mov
push
adc
xor
inc
lods
pop
pop
icebp
mov
sbb
sub
dec
repnz
movsb
jno
jne
inc
push
subb
lcall
ficoms
stos
push
sub
lret
sub
add
mov
rcrl
js
or
repnz
dec
sub
lods
and
sub
dec
dec
pop
mov
push
mov
xor
gs
in
loope
push
in
mov
test
pushf
sbb
mov
fsubrl
mov
shrl
jmp
pushf
sub
enter
and
jp
dec
test
das
iret
stos
jle
test
test
mov
test
cmp
dec
jmp
cli
sub
cmp
mov
cli
fnstsw
inc
xor
shrl
mov
push
cltd
int
mov
xchg
je
jl,pn
pop
cmp
test
sub
sub
push
pop
mov
jne
mov
sub
and
xchg
sub
lds
jmp
sub
loope
jbe
sub
sub
mov
sub
dec
test
jge
mov
mov
xchg
in
xor
push
sub
js
popf
push
push
sub
aad
lock
call
ds
jno
mov
in
inc
notl
jno
bound
scas
inc
pop
sbb
mov
or
cli
and
loop
aaa
fldt
add
inc
dec
mov
or
dec
sbb
insl
inc
clc
aad
outsb
insb
sub
outsl
mov
sub
out
mov
cmc
push
xor
les
arpl
lods
popa
adc
test
sub
lock
test
and
xchg
sbb
or
or
dec
pushf
int3
or
mov
pminsw
adc
lret
sbb
jo
pushfw
mov
adc
shrb
and
push
pop
test
pop
pop
mov
or
mov
mov
dec
aaa
jle
ds
jle,pn
cmp
sub
push
jg
jo
push
cmp
and
jns
cmpsl
std
jo
mov
push
sub
sub
int
nop
ret
sbb
mov
outsl
movsl
adc
call
mov
imull
je
test
clc
rorb
cmp
rep
lock
push
ds
jle
cmp
push
stos
mov
adc
cltd
stos
and
xor
jge
sahf
jae
stos
aas
mov
sbb
icebp
cmp
cmp
mov
jge
fldenv
ljmp
fdivrl
jnp
fnstcw
aas
sub
ja
mov
pushl
test
stos
and
repz
daa
and
cli
fmull
cmp
jb
sub
xchg
sub
push
and
unpckhps
mov
and
cmp
sub
jge
xor
or
int3
imul
clc
repnz
ficoml
movsl
or
sbb
mov
dec
push
or
adc
push
iret
adc
push
dec
xchg
loopne
cld
fistpl
mov
jo
jecxz
adc
mul
adc
ret
cwtl
xlat
int3
adc
pop
cltd
stos
add
mov
pop
js
mov
inc
ljmp
sub
push
dec
inc
into
mov
mov
mov
mov
mov
fsub
sub
shlb
adc
sahf
in
push
adc
insb
cwtl
cmp
add
pop
fstps
and
inc
push
sbb
fcom
add
mov
jo
testl
sbb
or
nop
je
mov
push
shlb
push
xchg
dec
jle
movsl
push
pop
mov
mov
adc
sbb
dec
xor
je
and
ja
cmp
cmp
xor
mov
jns
jne
add
jle
xchg
sbb
pop
lods
add
jmp
std
insl
insl
lahf
andb
lahf
sbb
out
jg
mov
cmc
lahf
sbb
and
test
aaa
js
outsb
sbb
aaa
ja
js
pusha
add
sbb
nop
aas
ja
adc
loopne
mov
mov
orb
dec
insl
int3
pop
jmp
and
mov
xor
idivl
int3
clc
pop
push
or
loopne
sbb
lds
xlat
xchg
mov
push
inc
ljmp
jmp
xchg
shlb
sub
sbb
or
pop
insl
xchg
and
cmp
lcall
pop
es
mov
repnz
jp
adc
and
or
xchg
in
and
cmpb
jns
mov
cmp
xchg
test
rcll
jle
adc
into
cmpl
gs
inc
cmp
into
out
dec
test
mov
sub
and
cltd
popa
add
insb
sar
in
aam
cli
dec
cmp
xor
cmp
scas
or
sub
sub
repz
adc
or
ret
andb
and
sbb
cmpsl
insb
mov
nop
jmp
decl
fstl
xchg
and
sub
pop
out
and
xchg
sub
pop
jg
sub
sbb
cltd
sub
mov
pop
mov
sbb
fsubrs
and
and
out
lock
mov
jge
sub
xchg
inc
or
insl
push
and
pop
push
mov
dec
daa
test
imul
or
mov
loopne
push
and
rcll
xchg
push
ret
and
aas
popf
or
into
or
and
sub
daa
adc
out
adc
fstl
inc
and
and
mov
sbb
xchg
test
mov
mov
push
xchg
mov
sbb
mov
mov
jg
push
out
push
push
xchg
shl
or
fs
sbb
jae
and
sahf
test
rcrl
jmp
aas
xchg
pop
daa
test
mov
lock
sarb
sbb
jmp
push
fwait
pushf
and
or
dec
mov
and
std
pop
nop
ss
sbb
out
dec
and
sub
addl
xor
jecxz
aad
and
xlat
lahf
jo
and
cmp
mov
ljmp
or
lcall
and
ficompl
add
popf
sub
stos
fldcw
add
inc
sub
xchg
test
fsubrs
and
sub
add
mov
ljmp
jmp
cmpsb
pop
and
rcll
fadds
cmp
sub
loopne
lahf
and
ss
sub
sbb
sub
inc
cli
xchg
sub
xchg
cmc
sarl
cld
pop
push
rclb
rcl
push
stos
or
pop
call
lods
sbb
sub
adc
or
test
lock
in
lret
sub
es
movsl
push
sub
adc
sbb
mov
lret
mov
or
sub
lret
dec
jecxz
lahf
adc
sub
pop
sub
bound
sub
ja
daa
mov
sub
mov
xor
mov
stc
jbe
test
cli
movsb
push
cld
mov
lret
imul
sbb
les
mov
lret
push
add
sub
add
test
les
lret
in
or
movsb
les
mov
lret
out
push
sbb
sbb
lret
out
adc
cmpsb
les
mov
lret
in
push
sbb
sbb
and
sbb
sbb
and
push
movsb
jecxz
sbb
mov
je
and
loop
and
lret
and
and
loope
sti
mov
and
sbb
les
mov
mov
sbb
les
out
sbb
lock
icebp
and
repnz
push
in
adc
xchg
push
adc
xchg
adc
int3
mov
dec
mov
mov
and
imul
test
stos
stos
sbb
xchg
in
out
push
enter
inc
rcrl
push
adc
adc
dec
or
cld
add
in
and
in
pusha
gs
lahf
cmpsb
es
and
mov
movsl
imul
and
and
loop
and
push
xchg
adc
mov
shll
out
data16
es
gs
decb
int
test
cmpsb
loopne
add
adc
shrl
or
lcall
and
mov
stos
mov
shll
and
mov
sub
mov
stos
and
repz
lahf
lret
mov
cmp
sub
add
and
fisubs
fmull
arpl
mov
add
cwtl
sub
in
ret
push
and
loopne
add
test
daa
jnp
and
test
daa
pusha
out
ljmp
cmpsl
or
daa
sub
cmpsb
stos
or
and
add
add
aam
test
or
test
movsl
and
push
test
lret
xor
lods
sbb
and
sub
jmp
data16
pusha
ret
sub
and
or
pop
inc
test
loop
mov
sub
daa
mov
pushf
data16
fbld
stos
push
lahf
test
pop
and
in
pop
repz
pushf
stos
or
test
loopne
test
or
cmpsb
or
push
jmp
and
push
daa
test
es
pusha
push
test
lahf
paddusb
or
lods
pop
daa
bound
test
sbb
test
xchg
bound
inc
test
lahf
and
mov
or
in
test
jp
pop
test
sahf
out
test
pop
test
push
and
test
pushf
push
fisttpll
sbb
fistpll
or
pusha
stos
test
pop
pop
sub
bound
popf
sbb
mov
or
out
out
or
in
test
sbb
out
fcmovu
lret
test
sub
lret
lcall
loopne
cmpsb
out
or
stos
sbb
cltd
adc
gs
adc
dec
adc
loopne
lock
test
loop
mov
adc
xchg
xor
and
test
cmpsb
addr16
adc
insb
daa
and
mov
mov
ljmp
xchg
and
test
out
and
push
jp
in
into
pop
cmpsb
lret
push
or
imul
loop
jle
xchg
sub
sar
in
add
leave
repz
and
or
pushf
push
test
bound
fildll
popf
rorl
loope
test
push
push
mov
mov
stos
jp
xchg
sub
sub
stos
push
and
sub
inc
test
jecxz
xchg
pop
jbe
test
push
or
adc
mov
dec
mov
inc
mov
or
lds
add
cmpsl
das
mov
mov
arpl
test
or
daa
xchg
adc
pop
lods
dec
cmp
push
mov
loopne
js
or
pushf
mov
imull
jmp
xor
dec
stos
mov
or
test
cmpsb
test
movsb
insb
gs
test
dec
jp
and
lahf
cwtl
sbb
loop
mov
cmpsb
and
or
pushf
test
mov
mov
scas
or
stos
data16
test
daa
adc
lret
mov
xor
ljmp
test
test
lahf
lret
xchg
lea
insb
jecxz
les
add
mov
test
fdivrl
or
and
pop
adc
mov
inc
sub
or
and
adc
push
icebp
stos
push
loopne
cli
data16
add
cmpsb
test
test
sub
ljmp
sub
inc
in
test
gs
out
add
or
and
mov
jmp
pop
ret
sub
test
popa
loopne
repz
mov
orb
out
mov
lea
loopne
fimuls
adc
jl
cmpsb
cmp
daa
cli
es
and
scas
lahf
push
lcall
and
pop
jecxz
mov
popa
push
test
in
arpl
mov
pop
lahf
pop
ljmp
repz
test
mov
loopne
data16
mov
daa
push
jle
sbb
sub
cmp
sbb
test
lret
adc
out
pop
lahf
mov
or
test
bound
arpl
pop
mov
daa
mov
mov
pop
test
js
cmp
sub
lods
mov
lahf
adc
ljmp
and
jp
movsl
test
cmp
xchg
test
in
std
pop
xchg
test
jns
adc
cmp
test
lcall
xchg
test
je
test
idivl
and
mov
jbe
test
arpl
mov
or
std
mov
sub
and
or
test
mov
pushf
sub
cmpsb
or
jl
out
movsb
gs
out
lahf
loopne
into
in
pop
lret
repz
imul
loopne
enterw
jmp
cli
xor
or
in
gs
out
mov
push
jmp
cmpsb
xor
scas
daa
cmpsb
sub
or
test
jo
test
pusha
pop
loopne
sbb
or
test
repz
lahf
inc
test
jae
stos
in
repnz
jmp
and
xor
into
in
test
pop
mull
or
jno
movsb
loop
sub
sbb
loop
mov
pushf
jmp
and
pushf
loope
pushf
daa
lods
jp
fildll
insb
xor
out
sbb
shrl
mov
mov
pushf
pushf
outsl
std
push
xchg
test
ljmp
mov
push
test
lret
int3
out
add
daa
test
scas
add
xchg
es
outsb
or
out
adc
ret
test
and
lret
or
arpl
ficomps
cli
mov
or
mov
fists
test
lods
sbb
sub
test
pushaw
cmpsb
xor
enter
sub
or
movsb
jo
fsubl
test
out
sub
and
pop
scas
popa
test
in
mov
enter
subl
stos
ljmp
fwait
sub
shr
sub
push
test
cwtl
out
icebp
jecxz
cwtl
imul
test
enter
pop
test
ret
sub
test
lea
adc
test
cwtl
fsubrl
stos
out
test
loopne
pop
pop
cmpsl
mov
pop
sub
jmp
int3
mov
aam
adc
test
cmpsb
out
test
cmpsl
loopne
cmpsb
pushf
enterw
test
or
inc
pusha
es
push
in
movsl
pushf
sub
pop
scas
bound
test
fsub
loopne
adc
arpl
xor
mov
test
or
pusha
xor
xchg
and
jp
pop
lods
mov
enter
and
mov
test
dec
js
loopne
data16
test
les
pop
bound
pusha
and
jmp
in
gs
out
loope
es
mov
loopne
inc
and
data16
cmpsb
pusha
pushf
nopl
repz
dec
loopne
aam
leave
pop
pusha
sbb
data16
gs
out
cli
lahf
filds
lods
lcall
loop
and
sbb
ficomps
leave
sahf
and
pop
rcrb
daa
mov
sub
popf
stos
and
test
pop
bound
loope
les
sub
fcomps
test
pop
sub
and
test
enter
test
push
test
mov
fisttps
push
fwait
sbb
push
call
lahf
addr16
sub
stos
and
loopne
inc
addr16
pop
push
enter
and
or
ljmp
nop
in
negb
pop
stc
adc
sbb
fidivrl
push
lcall
push
pop
imul
rcrb
jmp
sub
sbb
sbb
add
imul
push
mov
lock
bound
sub
test
addr16
sub
push
mov
fxch
stos
pop
movsb
gs
mov
cmp
jmp
lea
jl
dec
add
lock
mov
push
mov
pop
cmpsb
push
cld
and
bound
popa
and
push
andb
and
imul
and
pop
hlt
push
addr16
imul
in
sbb
fs
in
ljmp
test
pop
hlt
sub
mov
test
sub
pop
or
and
and
and
sub
out
lock
mov
stc
adc
stos
es
in
xor
xchg
and
popa
in
cmpsb
and
sub
adc
adc
sub
and
fwait
sub
jmp
aam
enter
gs
pushf
in
loopne
fwait
or
fdivr
sub
data16
in
out
pop
sbb
pusha
je
mov
mov
lret
daa
ljmp
sbb
rcrb
shl
test
in
cmc
arpl
cmpsb
xchg
xchg
cltd
push
movsb
mov
repnz
stos
popa
ljmp
test
icebp
cmpsb
fsubrl
mov
pop
imul
arpl
xor
repnz
nop
pop
xchg
and
jmp
popa
xlat
js
pushf
pop
nop
fmuls
jb
imul
ljmp
loopne
sbb
or
arpl
wbinvd
adc
imulb
sub
popa
out
inc
sub
jno
add
jne
xlat
add
cmpsb
mov
loopne
filds
fwait
jl
xchg
xchg
cmpsb
lea
mov
enter
cmp
and
and
pop
test
and
les
and
popa
repz
and
mov
add
push
fisubl
jmp
jmp
sbb
test
sub
mov
adc
std
add
stos
sbbl
aam
xchg
adc
enter
mov
cmpsl
mov
jbe
push
repnz
adc
or
aad
xchg
repnz
and
and
fcompl
js
test
or
push
and
sbb
add
repnz
jecxz
xchg
aas
enter
mov
rorb
nop
inc
add
xchg
repnz
call
sbb
mov
cmpsb
push
pop
cwtl
clc
fadds
scas
cmp
pop
nop
or
mov
repz
stos
and
jbe
and
or
loope
sub
gs
lcall
je
cld
xor
fmuls
test
sbb
add
adc
jbe
adc
ja
add
cmpl
roll
jl
jg
loope
sbb
jbe
loopne
insb
add
loopne
adcb
gs
movsb
pop
jb
jo
and
mov
push
and
out
out
in
adc
fsubr
outsb
jmp
add
out
movsb
iret
pop
cmp
sbb
cmpsl
and
xchg
test
stc
stc
mov
je
xchg
add
sbb
loopne
add
daa
pop
or
aam
pop
stos
scas
cmp
or
adc
adc
inc
inc
bound
gs
enter
movsb
bound
fisttps
pushf
ljmp
jb
fsubrs
sub
mov
loop
mov
mov
jle
add
inc
jbe
sub
js
call
daa
or
loope
lret
xchg
fs
cmp
bnd
out
and
gs
repnz
mov
sub
sub
clc
sti
jo
mov
xchg
pusha
add
and
mov
andl
xchg
in
mov
fs
daa
in
iret
and
sbb
stos
sub
std
enter
xchg
testl
mulb
add
sbb
sub
mov
adc
adc
xlat
and
cwtl
test
popf
push
adc
push
repz
and
out
xchg
mov
fstpt
add
adc
daa
ljmp
repz
sub
or
cli
sbb
enter
js
jo
stos
lock
or
and
lock
add
cmp
insl
outsl
push
addb
leave
daa
sti
and
and
lcall
sbbl
sub
iret
adc
sti
lret
cmc
in
lret
inc
jg
jmp
sub
test
out
jmp
pushf
jns
mov
out
je
mov
popf
pushf
cmpsl
pop
cltd
sti
sub
jecxz
stos
call
or
sub
fdivs
push
xchg
adc
xchg
or
mov
push
negb
or
andb
cmpsl
daa
fdivr
mov
xchg
dec
jmp
call
mov
clc
and
es
data16
and
and
pop
jl
push
cli
sbbb
pop
or
and
push
push
daa
es
or
test
and
adc
je
insb
jecxz
ja
pop
pushf
addb
mov
pop
adc
add
and
pop
sbb
pop
out
lcall
ja
xor
lret
stos
stos
fwait
stos
movsb
loopne
or
repz
xor
and
and
mov
jle
fisttps
adc
test
lahf
je
test
mov
xchg
repz
imul
jmp
jl
ss
and
ljmp
test
test
mov
mov
ss
out
mov
lahf
in
cmp
sbb
jnp
test
and
mov
mov
out
fwait
daa
fs
inc
es
ljmp
add
mov
jbe
jl
daa
adc
enter
push
mov
test
arpl
jb
addr16
sbb
push
sbb
push
call
jmp
leave
mov
rcll
mov
jbe
jecxz
stos
fcomps
and
or
mov
shrb
iret
adc
divb
hlt
lahf
and
adc
pop
sub
and
push
or
pop
jns
xchg
enter
stos
jg
test
xchg
pop
mov
sbbl
pop
daa
or
shr
and
sub
adc
push
fldenv
test
xchg
iret
xchg
fcomi
mov
jecxz
mov
movsb
adc
sub
xchg
fcomps
sub
mov
adc
pop
and
and
add
sbb
pop
push
sbb
cmc
and
pop
and
mov
insl
adc
add
mov
xchg
mov
or
mov
jb
out
jmp
add
add
aam
int3
push
xchg
sub
arpl
popf
fcmove
mov
or
enter
cltd
push
addl
or
lahf
cmp
popa
sbb
loope
xchg
enter
aaa
pop
xchg
stos
xlat
adc
pop
and
sbb
lock
mov
add
sbb
jp
sub
jb
jp
mov
mov
movsl
movsl
movsb
pop
fs
or
test
stos
or
cli
xlat
jg
test
fsubl
loop
test
in
push
and
and
and
push
arpl
jmp
jmp
js
xchg
add
push
cmpsl
jl
shl
movsb
or
ljmp
stos
call
and
sub
push
and
jbe
addr16
adc
lahf
add
lcall
stos
mov
mov
jnp
lret
lea
test
sbb
mov
movsl
mov
jg
repnz
lcall
and
pop
inc
cld
subl
rolb
and
push
stos
jbe
add
adc
rorl
repz
sub
sub
scas
and
fcoml
addl
repnz
test
fisttps
loope
inc
and
or
add
add
sbb
sub
std
fs
cmp
add
rolb
and
sub
and
out
enter
add
jbe
jmp
mov
sub
std
outsl
jmp
rcrb
and
mov
popf
push
addr16
stc
lret
sub
lret
or
and
nop
push
mov
add
xchg
and
test
gs
outsb
pushf
dec
sub
add
or
test
mov
movsb
loope
movsb
test
add
sbb
loope
sub
jg
add
cmpsb
or
push
xchg
sbb
test
sahf
sbbl
adc
jae
and
and
add
add
adc
mov
ret
gs
loope
or
add
jge
and
out
jl
cwtl
stc
mov
sbb
je
adc
add
pop
inc
jmp
add
sub
mov
sbb
andl
movsb
mov
add
pushf
lret
sbb
xchg
repz
in
or
enter
call
and
ja
fisubrl
aam
add
push
lcall
pop
mov
jb
mov
and
adc
cmc
pop
daa
jmp
add
lcall
stos
jl
sbbl
and
sub
loop
stos
and
stos
fistps
xchg
fmull
adc
cld
out
xchg
xchg
mov
sub
or
sbb
adc
hlt
aam
cs
andb
orl
xchg
mov
push
lcall
les
jne
stos
pop
subb
pusha
rorb
sbb
adc
mov
push
sub
daa
inc
enter
add
xchg
data16
repnz
jl
testl
test
jmp
xchg
lods
iret
jb
sub
movsb
aam
and
lock
add
pusha
in
xchg
pop
xchg
mov
loope
cmpsb
ret
sub
adc
repnz
shrb
imull
mov
jecxz
ret
and
push
and
push
stos
out
xchg
and
andl
add
inc
jg
jmp
push
fbld
sub
arpl
cmpsl
lds
jae
out
mov
pop
and
and
mov
bound
add
movsb
sbb
in
stos
sub
loopne
call
mov
ljmp
cltd
pop
fwait
pop
js
movsl
test
and
pop
sbb
clc
pushl
movsl
pop
frstor
and
std
xchg
sbb
cmpsb
aam
insb
jo
jae
mov
lcall
subb
test
mov
leave
mov
sbb
enter
rcr
mov
pop
ljmp
mov
xchg
out
icebp
imul
pop
xchg
xchg
pop
push
adc
pop
and
rcrb
and
mov
or
clc
cmpsb
sar
pop
and
jle
push
daa
or
es
xchg
gs
jae
mov
mov
daa
les
test
cmp
aam
add
sbb
jnp
icebp
inc
xchg
das
or
mov
cmc
in
arpl
jo
add
es
cld
sti
jnp
cltd
sub
xchg
mov
sbb
test
daa
out
clc
pop
pop
push
or
outsb
ror
test
mov
in
xchg
out
in
sbb
cwtl
lcall
stos
test
fs
sti
insl
mov
mov
sahf
push
mov
cmpsb
or
incb
and
sbb
fldenv
sbb
and
gs
sub
add
jp
sbb
jmp
or
sub
stos
push
cmpsl
outsl
xchg
test
and
call
ljmp
data16
sub
and
in
fistpll
lock
call
xchg
sti
es
cmpsl
sbb
and
push
jp
idivl
pop
sub
mov
sbb
xchg
lock
std
pop
jge
pop
jnp
adcl
sbb
std
popf
cmp
and
pop
or
inc
cmp
and
push
movsb
sub
jno
jmp
jl
adc
pop
mov
sbbl
pushf
xchg
jo
out
push
sbb
sub
test
test
mov
pusha
sbb
sub
adc
or
daa
stos
outsb
sahf
ljmp
cli
enter
movsl
orb
adc
jecxz
icebp
rcll
add
jo
xchg
dec
or
mov
scas
test
imul
movsb
lock
daa
out
mov
and
test
nop
or
ja
sbb
sub
fs
out
or
out
mov
jne
enter
ljmp
daa
xchg
test
adc
push
stc
xchg
and
mov
adc
bound
jo
test
inc
mov
std
nop
xchg
ret
sbb
cltd
mov
cmc
movsl
cmpsl
orl
push
or
sub
js
test
pop
stc
movsb
out
adc
std
xchg
and
repz
sbb
dec
jge
adc
cmp
xchg
ljmp
push
mov
and
sub
mov
pop
mov
or
fldt
jmp
movsb
jns
std
jmp
out
sub
adc
clc
shlb
sbb
cmpsb
popf
lock
ja
arpl
sbb
or
stos
cli
je
fs
add
sbb
andl
imul
xlat
arpl
xor
push
hlt
and
es
movsb
test
xor
divl
xor
or
popa
jns
cwtl
aam
rol
add
ret
dec
stc
mov
imul
stos
fistps
push
sub
repz
je
scas
jp
sbb
loopne
cld
sar
sub
mov
sbbl
clc
fisttpl
or
pusha
mov
cmpsb
repnz
mov
inc
in
cmpsl
mov
mull
repnz
out
js
movsb
jb
insb
fadds
stos
push
sub
stc
addr16
testb
jle
add
mov
add
cmpl
and
jecxz
out
push
and
stos
sbb
fisttpll
xlat
and
repz
push
adc
add
adc
adc
jecxz
and
out
aaa
stos
icebp
push
add
mov
jno
cmpsl
cmpsb
mov
aam
inc
or
icebp
popa
sbb
adc
mov
or
sbb
loope
add
or
or
addb
mov
loope
mov
adc
test
pop
js
les
fbld
mov
cs
js
mov
jg
cld
pop
aaa
idivl
adc
jl
leave
repz
sub
adc
jecxz
std
sbb
outsb
cmpsb
jo
adc
lcall
cmpsl
aad
mov
out
in
repz
movsb
sti
clc
jecxz
rcll
sbb
imul
outsl
jmp
je
and
lret
test
js
es
push
add
fwait
jno
popa
or
or
cltd
sti
xchg
repnz
sbb
jae
fbstp
shrb
pop
movsb
xchg
cmpsl
cmpsl
sbb
ret
mov
sub
pop
bound
mov
popl
dec
pop
andl
push
ljmp
pop
pushf
lea
lret
aam
popa
xchg
stc
ret
lcall
xchg
ss
sbb
pop
pop
loop
and
flds
sub
and
pushf
sbb
sbb
cltd
pop
mov
repnz
popa
sub
adc
cltd
call
test
mov
scas
fstl
sbb
out
addr16
push
sub
jb
divb
rcll
and
cmpb
addb
mov
imul
jne
inc
jae
leave
addr16
or
or
xchg
jno
pop
mov
adc
call
stc
cmc
and
push
push
jecxz
or
je
lock
arpl
fisubrl
push
lods
inc
repnz
mov
mov
add
mov
ljmp
push
and
adc
jg
loopne
sub
push
sub
push
and
cmp
and
mov
pushf
xchg
notb
pushf
sub
lock
std
add
add
and
jmp
popf
xchg
in
jg
out
enter
mov
rclb
test
clc
jae
sbb
daa
ljmp
or
test
stos
sahf
push
adc
mov
aam
pushf
call
or
push
mov
jno
add
jns
setbe
in
push
scas
or
mov
pop
je
xchg
xchg
movsl
jmp
sbb
shr
add
stos
push
insb
out
repz
lahf
sub
xchg
add
stos
sbbb
je
and
stos
or
xchg
daa
fs
adc
call
lods
sub
xchg
and
stos
mov
pop
stos
sbb
push
lods
and
pushf
sub
loope
ret
sbb
stos
in
push
cmpsb
movsb
ret
jg
fildll
bound
lods
sub
push
lods
pop
jg
ljmp
pusha
adc
add
sahf
stos
push
jmp
jp
pushf
inc
lods
testl
cli
pop
jle
sub
mov
and
fsubrs
sub
movsb
andl
faddl
lahf
mov
ret
fs
arpl
sti
lahf
sbb
push
xchg
xchg
fidivl
sub
test
jmp
imul
mov
leave
and
sub
mov
jecxz
sub
clc
pushf
xlat
pusha
xchg
jmp
data16
je
sub
lahf
add
pop
add
shr
fwait
aaa
jecxz
or
sub
pusha
inc
insw
jmp
mov
cmp
loope
repnz
jmp
sbb
lahf
shrb
sub
or
test
sub
and
movsl
aas
out
in
stos
add
fsubrs
and
sub
stos
sub
fistps
aad
out
stos
pop
outsl
mov
or
adc
push
setg
and
jmp
pop
loopne
loopne
cmpsl
jmp
mov
sbb
mov
sbb
sti
sub
adc
xchg
clc
fsubrs
mov
mov
fcoml
pmaddwd
stos
cmp
jmp
cmpsl
and
xchg
lret
or
lea
sub
xchg
adc
add
and
push
jmp
mov
out
es
add
xor
pop
out
arpl
sub
and
or
mov
mov
pusha
mov
sbb
sbb
cmpsb
mov
jmp
jmp
jle
sub
push
add
pop
addb
jmp
sbb
daa
mov
mov
jmp
sub
and
adc
adc
fsubrs
jno
scas
sbb
inc
jl
sub
stos
clc
in
dec
ret
push
movsl
mov
sub
jmp
mov
bound
xchg
popf
arpl
and
daa
sub
sub
movsb
fisttps
pusha
cltd
mov
push
lock
jmp
stos
sub
ja
and
out
arpl
scas
jo
cmp
push
jmp
out
pop
call
pop
pop
mov
stos
pop
mull
mov
mov
sub
sub
sub
inc
shr
cmpsb
shr
ja
sbb
sbb
rcrb
std
popa
ja
jmp
jo
imul
mov
stos
sbb
sub
and
push
jnp
stos
lcall
jg
dec
test
sbb
ret
or
stos
es
imul
arpl
out
or
sub
mov
je
mov
sub
lahf
sub
fsubl
jp
push
stos
cli
mov
call
imul
cmpsb
xchg
mov
jmp
inc
sub
arpl
sti
and
test
push
icebp
and
stos
in
mov
push
pusha
test
and
add
out
je
xlat
test
loop
shll
fadds
lock
fwait
pop
pop
pusha
shrb
loope
insb
add
stos
mov
arpl
jns
add
incl
mov
push
std
push
shr
sbb
ss
add
push
sub
data16
mov
mull
mov
sbb
stos
sbb
aaa
sub
in
pushf
and
incl
movsb
int
clc
inc
sub
mov
pop
sub
adc
test
and
notl
mov
notl
sbb
subl
adc
xlat
addb
and
adc
test
jge
pop
adc
xchg
stos
adc
add
adc
cli
push
daa
and
das
and
lods
test
arpl
ret
push
pop
jmp
stos
mov
pop
or
pushf
mov
or
or
pminub
loop
popa
lret
sub
imul
inc
call
fstps
mov
adc
sub
test
in
mov
lock
divl
mov
imul
fdiv
popf
pop
out
push
fnsave
xchg
sbb
pop
test
outsl
dec
and
jmp
pusha
jo
stos
and
mov
andb
lret
and
stos
loopne
adc
lcall
and
stos
lcall
dec
imul
lds
mov
loop
and
mov
loope
push
pushf
xchg
out
and
or
leave
mov
fsubl
and
cwtl
out
rep
test
lahf
push
adc
adc
inc
movsb
pusha
je
addr16
movsb
test
adc
pushf
sub
sbbl
stos
cmpsl
jp
subb
cmp
xchg
sbb
mov
idivl
bound
or
mov
sub
xor
cmpsl
out
adc
ret
lret
mov
xchg
mov
in
cli
push
add
ljmp
or
lcall
jbe
inc
mov
mov
or
cmpsb
icebp
ja
pushf
shrb
inc
sbb
in
push
frstor
jl
pushf
rclb
out
inc
xchg
in
sbb
add
stc
pop
xchg
ljmp
scas
lods
push
cmp
andb
mov
inc
fstpt
daa
enter
mov
loop
rcrl
sub
push
pop
pop
dec
aam
mov
mov
mov
les
mov
ljmp
lret
adc
nop
sbb
cli
ljmp
imul
mov
lret
call
mov
ja
jo
fidivrs
js
lods
or
and
fldl
push
cmpsb
in
and
call
jge
lods
insl
and
sub
jl
cmp
aaa
adcb
dec
sub
sub
test
mov
aam
outsb
pushf
call
testl
jecxz
dec
movsb
sub
sub
mov
push
mov
dec
sbb
xchg
out
es
push
fcoms
ficompl
sbb
mov
ffreep
adc
pop
push
dec
pop
out
mov
mov
imul
rorb
xchg
sbb
mov
sub
add
add
add
sbb
or
and
sbb
sbb
sbb
and
sbb
sub
or
hlt
in
mov
and
sbb
mull
lret
cld
and
sbb
les
mov
lret
or
or
mov
lret
sbb
and
es
sub
out
xor
mull
lret
or
push
sbb
les
mov
lret
sub
jne
ljmp
fdivr
ljmp
fistpl
and
sbb
sbb
cltd
lret
sbb
aam
xchg
les
sbb
xchg
lret
pop
and
pop
xchg
ficoms
dec
mov
cmp
xchg
dec
jns
pushf
rclb
ljmp
or
iret
sbb
into
and
sbb
fldt
push
dec
repz
mov
fldt
aad
lods
addr16
jge
insb
popa
les
dec
repz
mov
test
and
mov
hlt
xchg
ficoml
mov
bound
rclb
pushf
bound
cltd
fsubrl
adc
dec
in
insb
pop
popf
pop
lahf
cli
fildll
repz
push
fmull
aas
adc
push
inc
cmc
loop
jno
inc
das
stos
inc
dec
lret
fldl
test
pop
inc
adc
push
dec
mov
les
sub
fiadds
pop
les
mov
in
adcl
sbb
jns
jnp
jge
jg
sbbl
stc
xchg
subl
pusha
pop
les
xchg
repz
mov
push
es
mov
pusha
sbb
pop
cli
cltd
repz
mov
pusha
sbb
pop
cli
repz
in
inc
add
jne
ret
add
mov
movsb
lcall
xor
fwait
mov
cwtl
xlat
xchg
loop
aas
xchg
fisubrs
lcall
pop
cmpsl
adc
imul
into
cmpsl
mov
mov
mov
andb
mov
clc
mov
es
es
sahf
xor
xchg
push
inc
rorl
push
pop
imul
insl
mov
and
push
inc
enter
add
clc
ljmp
or
popa
xlat
iret
sbb
fcmovnbe
adc
lods
data16
xchg
push
adc
adc
insl
in
sbb
sbb
cs
outsb
and
sbb
and
hlt
lret
stc
and
mov
lret
push
and
pop
sbb
sbb
jno
clc
xor
icebp
les
dec
lret
jb
or
mov
sbb
test
movsb
cld
and
mov
lret
push
and
mov
lret
in
mov
mov
repz
std
mov
lret
mov
adc
test
mov
dec
icebp
sbb
mull
lret
cld
and
push
sbb
or
jns
adc
mov
mov
lret
icebp
xor
cli
stc
mov
lret
mov
les
cmp
adc
loopne
push
in
movsb
sbb
cmp
mov
and
sbb
jae
ds
icebp
mov
lret
and
sbb
les
mov
lret
jmp
and
mov
jl
sti
sbb
loop
add
cmc
loope
xor
xchg
hlt
cmc
jne
lods
popf
ret
lock
add
sti
jns
insl
add
and
shlb
ds
fsubs
cmp
dec
sbb
cmp
je
add
into
mov
and
clc
insb
mov
gs
lods
fsubl
dec
push
cwtl
sahf
pop
adc
mov
xor
mov
cmpsb
jge
lods
cmp
add
arpl
xchg
mov
sbb
mov
rolb
out
cs
clc
pushl
dec
shl
in
xor
jl
mov
or
cmp
cmp
inc
jbe
inc
mov
or
ja
pop
or
cli
sbb
xor
and
movsb
in
jno
je
ret
xchg
out
out
cmpsb
test
bnd
mov
popf
xor
call
fsubs
stos
and
cli
shrb
lret
sbb
sbb
pop
xchg
loope
sbb
loop
into
sbb
lcall
xor
clc
add
cmp
icebp
mov
and
ljmp
and
cwtl
push
sbb
mov
outsl
pop
mov
xor
and
add
mov
lahf
sbb
add
and
xchg
gs
cld
pusha
or
je
test
xor
xor
and
std
bound
sbb
jl
movsb
daa
sbb
sbb
lock
pop
mov
cmp
add
ret
loop
mov
pop
repz
push
or
into
and
and
ret
adc
pop
into
clc
stos
std
cwtl
mov
clc
xchg
les
stc
inc
mov
lcall
sarl
cltd
pop
std
xchg
mov
add
adc
sbb
lock
es
nop
jbe
pushf
add
sti
and
mov
add
sahf
nop
mov
sbb
loopne
fisubrl
sahf
add
pusha
test
and
xchg
testl
insb
rcll
mov
sbb
sub
push
or
push
stos
idivl
mov
sbb
daa
pop
sub
cmp
adc
rolb
and
aas
xchg
mov
add
cmp
jle
call
repz
pop
and
sub
clc
es
clc
repz
jecxz
stos
jb
xor
add
or
and
imul
out
mov
or
add
idiv
into
jl
test
cmp
add
mov
adc
dec
sub
stos
repz
cltd
cltd
cwtl
add
dec
and
mov
or
jl
sub
xchg
or
and
fsubl
scas
xor
jo
fs
mov
enter
fcomi
and
je
pop
or
mov
pop
fcoms
cltd
daa
cmpsb
xor
sub
push
mov
test
adc
mov
notl
add
das
inc
es
and
or
pop
add
add
and
aas
jge
add
inc
in
and
je
and
ja
xchg
or
pop
ficoms
call
push
push
xchg
sbb
mov
ljmp
xchg
adc
push
sbb
lds
sub
xchg
push
sti
inc
xlat
mov
adc
loopne
cmc
xlat
movsb
jecxz
cmp
cwtl
orl
xor
jno
xchg
repnz
insl
sub
lret
jle
les
sub
jb
jmp
cli
or
lock
inc
sub
xor
aad
imul
jb
inc
out
mov
lea
enter
js
and
jae
pop
jmp
push
mull
loop
sub
jg
sub
je
mov
daa
jecxz
push
mov
les
push
mov
lret
adc
pop
test
rdtsc
lds
or
adc
push
movsb
sbb
sbb
sbb
sbb
mov
or
cli
sub
cmp
add
les
inc
mov
out
std
or
sub
push
sub
fidivrl
pushf
sub
and
cmpsl
mov
and
adc
inc
add
fstpt
mov
sbb
cmpsl
dec
mov
adc
push
push
test
or
add
or
xor
shlb
sahf
and
add
insb
xchg
lcall
or
sub
adc
ret
xchg
sub
imul
shl
in
mov
aam
sub
pusha
mul
cld
test
clc
sub
cli
and
pop
sub
out
sub
gs
sub
sub
xchg
sub
or
pop
and
sti
sub
je
cmovns
cld
adc
sub
neg
and
test
sbb
or
sbb
adc
clc
xchg
add
add
dec
cmp
mov
and
xchg
je,pt
cmc
and
jle
sub
fwait
sub
jnp,pt
cmp
cld
cwtl
jg
sbb
ret
and
cmp
cli
and
dec
out
add
stos
sti
and
mov
ficompl
sub
sub
xadd
sbb
mov
sbb
jne
cmpsb
sub
sub
and
stos
cmp
fprem1
ljmp
or
sti
inc
loop
sub
jle
jbe
sub
adc
shll
sarb
push
imul
pop
sub
sub
out
aaa
andb
pushf
and
stos
loop
int
adc
cmp
pop
clc
jmp
inc
test
mov
jmp
test
adc
sub
mov
inc
and
icebp
jl
andb
cmp
das
icebp
testl
push
sub
idivb
ljmp
sbb
cwtl
sbb
mov
sbb
pop
ficomps
mov
sbb
cwtl
jmp
ror
test
adc
cmc
je
lods
push
jge,pn
mov
inc
cmp
mov
cmp
call
mov
mov
movsl
xor
gs
daa
jne
pop
insl
xchg
mov
pop
xchg
push
add
fnclex
push
sbb
and
adcb
or
aaa
stos
cld
push
fistl
and
orb
sbb
fcoml
loop
push
jo
adc
aam
scas
in
insl
mov
sub
cmpsl
xchg
fildl
push
sti
push
mov
push
movsl
pop
cwtl
cmpsb
ficompl
push
cli
cwtl
sbb
cli
sbb
cli
sbb
and
mov
fadd
popf
sub
push
push
cwtl
mov
cwtl
sbb
cli
push
mov
and
sub
push
imul
or
mov
pop
pop
and
push
dec
les
sbb
sub
inc
and
jl
movsl
mov
pushf
adc
lret
dec
cmp
les
les
or
add
or
xorl
fucom
fcoms
js
pushf
fwait
dec
daa
lds
sbb
and
and
pushf
adc
daa
fldcw
sbb
xchg
aam
push
pop
pop
adc
or
push
aam
daa
fadd
pop
loopne
push
out
mov
les
sbb
std
mov
stos
pop
sub
sub
addb
pop
adc
fistpl
dec
mul
push
xlat
pusha
cwtl
xchg
subb
fcomps
sbb
mov
fistpl
sbb
sbb
sbbl
sbb
sub
fmul
and
icebp
fidivrs
pop
xchg
push
scas
xchg
inc
jb
sub
push
push
and
sub
shll
imul
add
aaa
push
push
add
fadds
fistl
sub
movsb
fprem
jno
stos
pop
pop
xchg
and
cltd
dec
test
sbb
aam
sub
push
dec
gs
rcl
sbb
and
out
sbbb
sbb
sbb
sub
or
jns
lahf
cmpsb
inc
sub
and
jne
and
sub
push
mov
pushf
sub
ljmp
pop
in
xlat
xor
adcb
jmp
sub
cwtl
daa
adc
daa
and
daa
mov
adc
cli
push
repnz
lcall
das
lods
sbb
or
ret
add
filds
iret
inc
gs
add
cltd
fildll
sbb
xchg
aas
or
sub
sub
loopne
adc
in
cltd
mov
push
pop
cwtl
sub
sub
fcompl
sbb
push
add
movsb
cwtl
inc
and
xchg
xchg
sbb
push
sub
push
xor
adc
movsb
add
sub
or
clc
jbe
clc
sub
push
out
repnz
xlat
or
jmp
or
or
sbb
adc
sbb
out
sahf
and
mov
sti
ficompl
push
or
sub
pushf
popf
loop
sub
jne
sbb
fstps
out
cmp
aam
leave
lods
loope
jnp
sti
ljmp
in
fstps
sub
pop
fcomps
pop
xchg
inc
jp
pushf
sub
pop
adc
cs
daa
out
fistl
adc
faddl
and
rcl
mov
sub
daa
xor
fldcw
fmul
mov
lods
adc
xchg
out
adc
or
cltd
add
rolb
fisubrl
mov
or
mov
cwtl
sbb
sbb
es
mov
cmp
ja
mov
sub
inc
jno
adc
xlat
sbb
pushl
iret
shl
das
xor
sbb
xchg
sub
daa
dec
adc
pop
call
sub
ljmp
adc
loopne
std
pop
pusha
pop
shrb
lea
jmp
fmull
cmpsl
test
int3
mov
push
stc
arpl
in
cltd
mov
aas
daa
jg
movsb
or
push
pop
sub
mov
jae
repnz
lods
sub
and
fisubrl
xor
pop
movb
and
sub
les
cwtl
out
sahf
imul
ficompl
cld
cwtl
icebp
xchg
cli
ljmp
shlb
or
and
pop
ljmp
cwtl
xor
ljmp
retw
lahf
imul
daa
mov
sbb
or
pop
xchg
lock
loopne
mov
adc
xchg
sub
fwait
mov
sbb
in
pushf
fsubs
sti
xchg
and
xchg
lcall
sbb
pop
add
xor
mov
mov
in
pop
push
pop
sarb
xchg
mov
sub
mov
sub
xor
pop
mov
pushf
sub
sbb
test
stos
add
fldenv
inc
sub
sub
loop
rcrl
inc
mov
or
jbe
jns
xchg
cwtl
sbb
sub
sbb
sbb
adc
jg
cmc
loope
sti
mov
adc
dec
or
js
adc
out
in
and
daa
pusha
and
pop
jl
ficoml
and
sbb
add
xchg
iret
sahf
push
fucomi
jo
pop
stos
in
ja
sub
push
stos
lret
out
fdivs
std
fsubrl
pop
loopne
vmptrst
xor
pop
sub
sub
mov
arpl
out
mov
pop
cmp
movsb
imul
js
imul
mov
in
fcoms
mov
sub
negb
jno
dec
loope
sub
push
xor
lock
or
push
lcall
pop
loope
add
cwtl
cltd
adc
push
push
daa
xchg
push
push
lret
ret
inc
das
in
inc
or
rcll
sub
dec
repz
pop
int
mov
sbb
sub
sbb
sbb
and
and
and
and
lret
test
mov
or
push
sbb
icebp
lret
repz
sbb
mulb
lret
cld
fdivrp
movsb
add
add
pop
les
mov
lret
push
and
and
and
lret
daa
and
lret
sub
in
test
out
mov
lret
repz
sbb
mulb
lret
sti
and
sbb
mov
lret
add
mov
sbb
pop
and
push
fiaddl
xchg
mov
fldt
push
lret
sub
pop
lret
fbld
sbb
pop
les
lret
and
ljmp
pop
and
sbb
inc
icebp
pop
sub
push
pop
or
or
sub
add
stos
loop
addr16
push
pop
pop
in
pop
ret
and
fwait
sbb
cwtl
sbb
pop
mov
lret
lahf
push
pop
pop
and
jmp
pop
in
std
icebp
shr
dec
cmc
sbb
ja
shl
add
mov
pop
lret
sub
cwtl
mov
in
dec
or
mov
pop
loop
aad
lods
cmpsl
ljmp
fcmovne
ljmp
mov
lods
jno
mov
imul
inc
sub
ja
mov
test
sub
sub
sub
loopne
jno
jno
and
sub
ja
xor
xor
fldcw
sub
or
icebp
xor
sub
movsl
dec
adc
and
sbb
mov
insl
lret
hlt
sbb
adc
pop
adc
sbb
sub
cmp
dec
cs
pop
or
call
cwtl
rorb
fidivrl
sbb
ret
sti
xchg
mov
cmc
insb
sub
daa
clc
cmpsl
add
and
add
jecxz
dec
dec
sbb
inc
adc
push
inc
or
aas
cmp
es
cmp
cmpsl
mov
popa
cltd
loop
xchg
stc
addr16
jge
xchg
out
repz
stos
jl
mov
fs
lret
fbld
lods
jno
daa
cwtl
stos
shrb
and
sub
test
mov
and
and
add
add
stos
punpckldq
or
cli
cwtl
jl
dec
aas
sub
adc
sbb
std
in
cmp
cli
xor
nop
push
xchg
adc
shrb
shlb
push
test
rcll
in
dec
sub
or
in
mov
jmp
adc
popa
mov
clc
icebp
jle
push
adc
nop
mov
mov
movsb
cli
xor
cmp
push
or
fdivr
ja
mov
cmp
data16
mov
xlat
add
pop
shll
aam
adcl
rcrb
stos
popf
mov
xor
rorb
lret
cwtl
mov
leave
adc
and
add
cwtl
mov
int3
dec
sbb
scas
loopne,pt
movsb
inc
iret
dec
dec
js
sbbl
xchg
pusha
xchg
sbb
shrl
cwtl
bound
dec
popf
cmp
pop
ret
xchg
push
dec
mov
push
clc
and
push
cld
sbb
popf
cmp
fprem
shlb
push
mov
out
adc
fwait
and
jp
clc
divl
and
pop
jle
lahf
subl
mov
adc
cwtl
sub
mov
out
clc
insb
in
add
sti
pop
sbb
xchg
subl
xchg
ljmp
lea
sahf
and
jp
jmp
loopne
add
or
mov
jl
dec
mulb
xchg
jecxz
adc
lahf
cmp
mov
xchg
int3
ds
clc
xlat
inc
in
outsl
mov
scas
daa
jg
and
sub
ljmp
ds
mov
nop
repnz
jge
inc
call
fwait
mov
lock
in
mov
cli
loop
test
cmc
leave
jge
sar
add
iret
push
inc
inc
fcomp
adc
test
pop
xchg
mov
movsb
jg
aaa
mov
push
xchg
movsb
pop
ror
cmp
jg
aam
popa
lds
xchg
ret
fs
sub
cwtl
xchg
jno
adc
outsl
cmp
mov
mov
shrb
daa
xchg
sbb
cwtl
loope
cmp
cwtl
aam
pusha
push
mov
jmp
sbb
pusha
stc
test
rclb
jg
mov
repnz
mov
cmp
jge
inc
les
push
mov
jecxz
or
add
cmpsb
hlt
cmp
lds
or
or
pop
push
pop
adc
adc
adc
push
loopne
addb
in
push
mov
jmp
or
or
pop
loopne
fsts
mov
adc
shrb
cmp
fwait
and
pop
mov
mov
aas
call
mov
and
out
jnp
ljmp
ror
and
adc
sbb
in
sub
push
xchg
sbb
and
xchg
add
sub
mov
inc
and
adc
and
and
pminub
mov
inc
cli
aas
jo
pop
pop
jbe
adc
pop
test
mov
jns
stos
sbb
rolb
clc
pop
xchg
mov
or
and
adc
mov
xor
movsl
sbb
and
and
mov
adc
daa
sub
jecxz
xor
xchg
in
xor
jmp
icebp
jbe
sub
mulb
add
sub
pop
pop
sbb
dec
repnz
in
cmc
std
clc
and
leave
movsb
popf
int3
mul
dec
adc
cmp
rclb
testl
psubq
mov
ljmp
testl
and
lahf
js
dec
sub
loope
std
fcoms
ror
cwtl
add
sub
and
mov
dec
xchg
lcall
cld
pop
jg
in
das
push
call
or
inc
ljmp
ljmp
ljmp
sbb
lret
ljmp
ljmp
and
pop
shrl
xchg
pop
pop
nop
xchg
shll
push
or
push
daa
cld
push
rcl
adc
and
stos
iret
into
and
jl
mov
lock
xchg
psubd
rcl
and
pop
popa
lret
daa
repnz
cmc
mov
mov
clc
mov
dec
mov
frstor
dec
cmp
cwtl
daa
add
rolb
pop
adc
fstl
leave
sbb
rcrb
cwtl
mov
dec
adc
std
adc
adc
push
mov
out
add
push
jbe
dec
insb
push
pop
rolb
sbb
pop
inc
int3
jmp
adc
mov
and
daa
icebp
sbb
push
lahf
lret
sbb
nop
dec
or
es
sbb
mov
or
sbb
dec
push
arpl
pop
sbb
mov
push
sbb
mov
sub
mov
iret
or
sub
notb
mov
xlat
bndstx
cwtl
icebp
movsb
inc
gs
ljmp
xchg
es
les
rclb
adc
xchg
push
or
dec
or
xchg
dec
lea
or
pop
lock
xchg
dec
fcmovnb
fdivr
and
pop
sbb
and
fistpl
push
lret
and
xchg
sets
fistpl
or
and
push
negl
stos
out
sbb
cli
jecxz
cmpb
xlat
in
sub
mov
rclb
cmc
outsb
sbb
subl
or
inc
mov
adc
pop
inc
out
push
sbb
push
rclb
pushf
pushf
and
scas
shlb
test
mov
mov
lcall
and
daa
sbb
das
fstpl
adc
clc
or
adcl
add
dec
sbb
rcll
repz
sti
dec
pusha
repnz
mov
hlt
pop
pop
pusha
insl
xchg
out
pusha
add
cs
sbb
mov
sbb
adc
cld
xor
test
inc
sar
and
mov
add
es
sub
inc
divb
stos
mov
ret
out
test
push
mov
icebp
and
int3
iret
or
push
lret
pop
sbb
cwtl
shll
and
gs
sbb
adc
mov
pop
sub
roll
sti
sub
nop
hlt
and
add
xchg
sahf
sti
rcl
addr16
cld
adc
jnp
jnp
sub
push
jo
and
mov
sbb
dec
subl
jnp
jnp
mov
inc
out
call
or
adc
push
mov
push
pop
dec
pop
test
sub
or
test
adc
and
subl
movsb
sub
jnp
insb
and
mov
fisttpll
or
test
call
mov
daa
push
and
sti
push
aad
adc
aam
add
sub
sub
and
out
jns
sub
inc
jp
pop
and
loop
test
repnz
cli
ljmp
and
lret
daa
popa
mov
les
lock
cmc
and
sbb
clc
mov
lret
std
and
sbb
les
mov
andl
or
and
sbb
les
mov
lret
and
and
jo
sub
movsb
daa
and
sbb
les
sub
sub
ljmp
mov
sbb
stos
sub
shrl
pushf
and
jecxz
sbb
sub
loopne
fistps
sbb
loop
sub
adc
adc
push
or
ljmp
bound
jp
and
sbb
movsb
loop
test
sbb
inc
mov
add
aaa
sti
daa
imul
call
mov
adc
int3
pop
xorl
sub
inc
hlt
in
and
rolb
sarb
cli
cwtl
enter
sbb
mov
es
cmp
mov
repnz
push
ljmp
aam
ljmp
cmp
xor
jne
scas
stos
fmull
fisubrs
stos
push
add
cltd
push
movsl
sub
sub
cmc
adc
ljmp
in
mov
lret
repnz
inc
mov
lret
cmpsb
and
sbb
sti
es
test
shld
into
sbb
les
icebp
push
xchg
jg
shl
sbb
pop
sub
xor
in
cmc
inc
aaa
mov
arpl
sbb
das
lahf
pop
sub
jmp
outsl
lods
pop
inc
jl
push
inc
mov
sub
loope
mov
xor
jnp
or
fistpll
loopne
jbe
mov
lock
pop
xor
imul
sti
and
xchg
and
fildll
cli
in
les
mov
lret
test
les
mov
and
sbb
les
movsl
sbb
movsb
lret
and
sbb
out
sbb
les
mov
lret
daa
and
sbb
sbb
pusha
and
sbb
les
out
push
xchg
jecxz
sbb
fstps
wbinvd
lds
xchg
mov
dec
inc
and
sbb
or
sub
jno
adc
iret
loope
lcall
dec
jle
ljmp
movsb
ja
cmc
sbb
insl
sub
mov
lret
xchg
and
mov
lret
insl
mov
sbb
aam
xchg
sbb
jg
ja
les
lods
sbb
mov
dec
sbb
les
jb
insl
movsl
add
pusha
frstor
lret
andb
sbb
les
sub
push
test
cwtl
and
and
inc
bnd
movsl
push
bound
and
sbb
shrb
in
dec
cli
lock
fisubrs
bound
pop
sub
pop
loop
mov
and
loope
xchg
aad
add
mov
call
ljmp
bound
sbb
std
in
arpl
sub
sub
in
sub
xchg
leave
lret
mov
dec
insb
or
into
inc
imul
movsl
push
std
adc
sahf
sbb
dec
add
hlt
dec
xor
insb
pop
ljmp
push
adc
adc
cli
adc
les
sbb
pushf
in
shlb
sub
and
mov
test
sub
cli
jmp
outsb
sub
std
or
sub
sbb
imul
and
add
out
sub
sub
movsl
mov
jns
js
cltd
cld
and
adc
sarl
in
lods
jecxz
cmpsb
mov
xor
dec
in
int3
xchg
pop
test
inc
test
scas
cmp
fisubs
or
sub
mov
mov
or
add
std
in
lret
push
xlat
arpl
leave
das
adc
push
cwtl
in
mov
jne
lds
in
xor
jae
in
xor
insb
loop
or
mov
addr16
divl
mov
xor
sub
add
cmp
sar
cmp
test
out
inc
fwait
jmp
iret
enter
mov
cwtl
repz
inc
ficomps
gs
push
int
mov
fnstsw
test
lock
imul
lods
dec
xchg
and
in
scas
ss
add
sub
gs
or
in
inc
and
sti
jecxz
iret
cmpsb
mov
cs
test
jmp
cld
xchg
adc
call
movsb
dec
scas
lock
and
out
pop
addr16
mov
lods
push
pop
or
mov
sbb
inc
jmp
gs
mov
in
pop
cwtl
mov
ja
cmp
or
or
dec
stc
inc
repz
popa
sbb
call
jae
lods
test
push
pop
imul
xchg
jne
jle
push
mov
pusha
jnp
dec
std
imul
dec
mov
xlat
mov
push
movsb
ds
cld
aaa
jno
leave
call
out
sbb
ficoms
mov
shl
adc
fwait
clc
in
mov
popf
push
dec
stos
stc
pusha
call
enter
sahf
in
out
push
jecxz
fdivr
add
push
loopne
mov
mov
adc
in
lods
aaa
pop
cmc
or
sub
mov
push
in
cwtl
imul
pop
mov
es
cld
pushf
jno
in
or
cld
push
movsl
jbe
mov
cmpb
in
xchg
inc
sbb
aas
sub
and
loope
sbb
imul
sub
cld
in
jne
int
bnd
test
xor
xchg
push
les
cmp
daa
cltd
pop
rcll
inc
stos
add
in
in
jne
jns
cli
sub
das
pop
es
jmp
subl
and
add
hlt
mov
dec
pop
inc
sbb
jmp
mov
fisubl
push
jmp
jmp
pop
jmp
inc
fldenv
lds
fucomp
fdivrs
mov
xor
jmp
mov
xchg
and
sub
jmp
sbb
lods
pop
inc
push
call
dec
adc
sbb
imul
imul
pop
jmp
imul
sbb
and
jecxz
es
lahf
es
sub
enter
mov
and
sub
std
xor
sub
sub
cmp
or
test
mov
aam
cli
sub
mov
mov
hlt
fstpt
push
adc
add
mov
adc
adc
jle
shl
sub
jmp
sub
lret
hlt
pop
cmc
inc
test
out
test
cli
stos
cmpsb
aad
mov
jp
repnz
mov
movsl
pop
push
jle
sub
addr16
dec
and
les
loopne
mov
mov
test
sbb
pop
or
jecxz
hlt
sbb
mov
lock
jae
xchg
loop
and
pusha
mov
mov
setbe
push
loope
push
lcall
xchg
sbbb
nop
sub
xchg
imul
shll
adc
cwtl
push
es
mov
sbb
adc
xchg
mov
fsubrp
pop
jecxz
pop
inc
adc
dec
xlat
dec
add
fnsave
ret
out
inc
push
and
push
clc
inc
les
outsb
adc
xor
shll
adc
jmp
pop
lret
lret
push
sbb
sbb
adc
int3
and
fdivl
dec
pop
ficoms
sub
inc
cmp
fstps
loop
sub
pop
fsub
iret
movsb
sbb
stc
sub
jecxz
sub
adc
hlt
lret
lds
lret
movsl
stos
inc
or
inc
or
jmp
imul
call
in
add
dec
outsl
popa
fs
imul
add
mov
andl
lcall
lahf
and
jnp
dec
or
fyl2xp1
ret
add
push
push
sahf
fs
mov
scas
addr16
and
cmp
icebp
dec
pop
xor
pop
andb
push
paddsw
js
mov
out
scas
daa
in
es
or
aaa
cli
xor
mov
dec
push
es
cmp
dec
sub
dec
repnz
or
stc
int
movsb
sub
lcall
sub
cs
cs
push
pop
jbe
push
mov
mov
mov
ja
xchg
mov
cli
icebp
addl
jo
sub
gs
push
and
mov
add
andb
inc
adc
pop
cwtl
aas
push
mov
add
jns
xor
inc
arpl
cmp
mov
or
shld
mov
push
cmc
pusha
cmpb
call
mov
cmpsb
out
jge
xchg
xchg
sbb
shll
dec
pop
inc
data16
and
mov
call
pop
push
lcall
mov
jg
popa
ljmp
aam
out
mov
jmp
xor
sub
popf
sub
repz
pop
jns
pop
adc
addb
in
shl
ret
or
inc
dec
hlt
mov
inc
clc
xchg
test
js
push
inc
cmpb
pop
stos
xchg
mov
mov
add
rcrl
pushf
lcall
jg
out
scas
mov
outsl
adc
and
into
das
or
sbb
sti
popf
daa
subb
loopne
les
push
scas
jnp
add
jno
insl
clc
push
lahf
mov
push
mov
aam
cmc
ss
mov
and
cli
mov
add
sub
test
push
jl
add
rcl
es
lret
mov
jg
rorl
lods
cmp
sahf
in
gs
mov
addb
popa
adc
outsl
pop
dec
fiadds
mov
jle
sub
xchg
fwait
daa
adcl
push
mov
adcl
out
or
fimuls
cli
loop
stos
testl
inc
xchg
pop
xchg
pop
addr16
mov
fnstenv
sbb
ret
int
ljmp
lea
jmp
lods
stc
ror
clc
bt
sub
pushf
clc
ror
test
neg
push
jmp
sbb
fldl
shrb
rclb
and
mov
out
or
push
and
inc
mov
sarl
add
icebp
mov
std
mov
enter
fldenv
xor
dec
lods
arpl
mov
popa
movsl
js
bound
sbb
adc
ds
xor
sahf
addb
pushf
cld
mov
call
addl
ja
inc
sbb
call
jns
bound
sub
xor
movsl
mov
jg
imul
add
ficoms
mov
in
out
jg
jns
inc
es
cmp
lods
sbb
daa
insl
jp
push
scas
dec
or
or
fs
xchg
xchg
rcl
out
lret
push
lcall
aam
cmpsl
pop
sub
jb
dec
sub
inc
clc
cmp
sub
push
push
or
xor
arpl
std
iret
lds
rorl
add
mov
pop
not
sub
pop
loop
cld
cld
fidivs
adc
jo
mov
cltd
pop
push
push
fidivs
inc
loopne
xor
out
out
leave
mov
test
or
fwait
ja
mov
push
lods
lret
push
fs
idivb
cmc
ja
mov
or
rclb
rorb
xor
shll
insl
jecxz
stos
jae
hlt
ds
or
jl
imul
cmp
jne
dec
jge
lret
xor
cmc
add
push
inc
loopne
loopne
sti
pushf
add
cmc
jmp
push
lock
std
std
adcl
ret
ret
jae
leave
mov
and
pushf
mov
pop
cltd
ss
mov
jno
in
cmp
sbb
aam
pop
lret
ljmp
mov
aaa
and
xor
sbb
and
xchg
push
data16
ret
ret
pop
cmp
js
enter
rolb
mov
lea
je
clc
test
add
jbe
pusha
cmp
pusha
jmp
mov
cmpsb
dec
ret
into
lock
or
dec
inc
sbb
push
push
ja
daa
idiv
or
xor
xor
mov
lahf
add
adc
jg
stos
push
push
nop
dec
push
cld
stos
or
repnz
outsl
sti
rcrl
in
hlt
pop
fs
jbe
jmp
aad
fistl
sub
mov
lret
movl
sub
sbb
adc
push
cli
cmp
inc
sub
popf
pop
arpl
dec
mov
insl
jle
cmpsb
xor
fld
aad
cltd
xchg
mov
stc
mov
jo
pop
mov
xor
add
or
sarl
dec
stc
scas
dec
inc
sbb
movsb
pop
test
xor
pop
les
mov
pop
push
xchg
sub
inc
push
aas
jecxz
loopne
ja
or
mov
pop
jle
jno
int
lods
mov
cltd
pop
mov
jecxz
mov
push
nop
lret
dec
pop
mov
shlb
int
outsb
cmpsb
imul
jae
jb
cwtl
push
lods
rol
xchg
in
call
jo
add
xchg
xchg
jmp
jle
cmpsb
sbb
jae
cmpsl
mov
lea
stc
sub
cwtl
adc
into
mov
dec
loop
pop
inc
daa
cwtl
into
xor
out
adc
inc
popa
jecxz
jo
es
sbbb
push
mov
dec
fdivs
cs
addr16
dec
sbb
pop
push
jle
insl
es
jle
mov
sbb
push
loop
ljmp
or
push
cmp
es
std
jge
cmpsb
lcall
cs
adc
fs
mov
stc
mov
dec
pop
std
mov
sbb
mov
in
mov
dec
mov
xor
das
adc
fidivrs
jmp
jmp
addr16
pop
ljmp
decb
or
inc
popa
mov
adc
aaa
mov
popa
out
in
pop
mov
cltd
push
mov
lods
enter
call
sbb
vpaddusw
movsl
mov
jmp
popf
push
insl
popa
mov
jmp
sub
or
daa
imul
dec
push
outsl
sub
ja
popf
xor
repz
aaa
jae
pop
mov
and
out
push
cs
add
and
aas
das
outsl
xor
out
mov
mov
ss
push
sbb
cmp
push
xor
adc
adc
mov
mov
jl
add
bswap
pop
mov
not
jmp
ficompl
jl
cmpsb
pop
insl
fwait
in
rcrl
adc
sti
imulb
dec
mov
mov
xchg
lahf
mov
xchg
negb
mov
ja
std
or
out
sub
xor
adc
jl
push
pop
mov
repnz
sbb
mov
loop
fwait
mov
andl
jle
outsb
ja
das
cmc
test
and
mov
ja
aas
and
cmp
je
nop
js
mov
xor
xor
gs
lea
jne
test
movzbl
movzbw
mov
cmc
pushf
cmp
pusha
pushf
jmp
cmp
jl
cmpsb
jmp
ret
adc
sbb
or
xchg
sti
les
sbb
push
sbb
out
lcall
lret
add
imulb
or
sub
push
or
push
xchg
add
adc
lods
add
cmp
stos
movsb
bound
inc
cmp
adcb
out
xchg
cs
bound
aad
xchg
in
cld
push
pop
pop
sub
xor
shll
dec
xchg
fdivrp
push
sbb
je
jns
nop
jb
push
cmpsb
shl
notb
fisubrl
xor
repnz
lcall
push
repnz
lea
call
lea
ja
dec
pushf
sub
rol
add
add
push
shl
pop
mov
call
cmc
pusha
add
bt
pushf
pusha
add
pushf
pushf
dec
jmp
addr16
cmpsb
jnp
cmpsb
mov
mov
enter
pushf
or
add
repnz
imul
adc
lods
dec
push
mov
jp
aam
sar
dec
mov
mov
mov
pusha
sar
mov
add
push
loopne
hlt
add
fcoms
sbb
push
xchg
data16
hlt
mov
jnp
cmpsb
dec
lock
hlt
testb
insl
pop
incl
cmpsb
mov
pop
nop
jmp
jno
mov
mov
iret
push
rcrb
js
mov
sbb
dec
xchg
jle
xchg
outsb
addr16
mov
sub
lea
call
bswap
mov
bswap
mov
lea
jae
bswap
pushf
bswap
mov
pushf
pushf
pop
mov
call
bt
call
lea
ja
bswap
movsbl
movzbl
call
add
dec
outsl
jbe
push
outsl
inc
js
dec
pop
ljmp
pop
inc
jae
outsl
test
arpl
fdivrp
hlt
imul
outsl
jb
jnp
inc
ljmp
cmc
pop
fidivrl
ds
or
enter
out
out
bound
icebp
adc
daa
shrb
sbb
and
inc
xchg
orb
mov
cltd
lahf
cmpsl
mov
add
jecxz
xor
in
lods
in
mov
jns
cmpsb
sub
mov
or
stos
cwtl
rcrb
mov
pop
pop
in
or
jo
shrl
mov
fcmovbe
adc
rcrb
mov
sbb
int3
fs
stos
out
inc
dec
scas
mov
push
sub
push
pop
popa
or
mov
push
stc
fldpi
sti
bndstx
inc
mov
add
push
or
andl
xor
and
sub
push
dec
sahf
pusha
ljmp
into
cwtl
es
clc
xchg
mov
pop
not
jmp
dec
pop
lock
cmp
xchg
incb
dec
hlt
push
fildl
jmp
movsl
sbb
and
stos
sbb
ret
ficompl
jno
fcomi
cmp
cmp
jne
js
add
mov
adc
fs
ja
pusha
pushf
call
movw
movb
jmp
mov
jnp
andl
cmpsb
sahf
popf
jne
rclb
fisubl
pop
mov
stos
xor
insb
xchg
mov
in
mov
sub
mov
cmp
iret
ret
cld
test
addb
inc
test
sbb
lods
mov
pop
vpunpcklqdq
sub
push
lcall
dec
rep
hlt
adc
in
into
call
dec
test
mov
add
dec
outsl
rcrl
popf
cltd
jno
xchg
push
insl
cltd
jge
inc
aas
cs
pop
cmp
cmp
pusha
pushl
push
lea
je
pusha
pusha
lea
jmp
fistl
movsb
js
cmpsb
inc
loope
test
stc
sbb
mov
dec
incl
add
pop
test
insl
push
pop
testb
xchg
fisubrl
arpl
pop
add
and
jne
je
lock
push
enter
lods
jbe
sub
enter
pop
jno
dec
enter
xchg
in
or
iret
lea
ror
jl
pop
push
push
js
dec
popa
cs
dec
clc
pop
insl
pop
int3
push
rclb
mov
and
call
mov
add
cmpsb
popf
cmp
inc
xor
aaa
cmp
ss
inc
inc
xor
mov
push
push
push
jns
xchg
insl
aaa
jne
out
pop
fmuls
inc
fs
rorl
test
je
push
add
pusha
inc
adc
cmp
fsubp
scas
pop
or
pop
jo
and
adc
in
xor
clc
cwtl
loop
icebp
xchg
imul
jae
movsl
or
std
movsb
add
rcrl
in
les
xchg
pop
jbe
inc
data16
mov
rcrb
je
sahf
out
jg
andl
or
dec
pop
sbb
dec
add
mov
jl
into
lods
int3
cmp
pop
jg
clc
nop
loop
ficomps
lods
or
sbb
mov
imul
mov
pop
lods
push
js
imul
movsb
dec
in
gs
cmp
lret
aad
xchg
ret
test
clc
lahf
mov
outsb
pop
or
in
fmul
in
enter
adc
xor
pop
sbb
cmp
fadd
call
jbe
cmpsb
and
bnd
roll
clc
ss
adc
repnz
cs
mov
pop
sub
cmp
inc
cmp
pop
adc
mov
ret
or
cmc
and
insb
lds
cmp
push
rcll
cmc
repz
and
mov
push
and
repnz
jg
jb,pn
xchg
ds
sbb
lods
pushf
out
jae
lock
add
or
push
lods
fwait
cmp
pop
les
mov
fwait
lcall
les
jle
xchg
dec
sahf
jbe
ficoml
mov
push
dec
cli
mov
xchg
mov
aad
dec
orl
je
cmpsb
jbe
cld
sub
sub
cmp
push
ljmp
scas
mov
shll
in
xlat
shl
loope
pop
sub
into
ficomps
jecxz
aas
js
repnz
and
inc
ss
popa
lods
loope
js
mov
shrl
outsl
popa
push
pop
fdivp
pop
or
mov
js
add
sub
or
ret
es
iret
lds
sub
jl
pop
jmp
test
or
push
inc
insb
inc
jecxz
sbb
stos
inc
add
xchg
popa
xchg
je
and
rol
lret
mov
lock
and
stos
enter
imul
fisubrs
addr16
and
in
pop
jbe
cwtl
jae
lret
mov
xchg
mov
cmpl
push
mov
data16
cmp
loopne
scas
add
repnz
negb
dec
dec
pop
es
xor
sbb
adc
pmaxub
cmpsb
jnp
sbb
std
dec
enter
dec
cli
lret
sbb
popf
int
imul
mov
sub
jmp
lret
loope
aad
test
jle
inc
adcl
add
shlb
leave
pop
mov
xacquire
sub
lods
icebp
cltd
mov
js
sub
xor
push
inc
pop
push
jo
cmp
cmc
sub
push
pushf
jmp
enter
andl
dec
jl
lods
mov
sub
movsl
push
cmc
test
jecxz
and
test
inc
mov
lea
jecxz
jno
cmp
cli
fldenv
xchg
cltd
out
jmp
push
leave
mov
out
loope
xor
in
stc
and
sub
or
call
arpl
mov
mov
add
fldcw
jbe
pop
cmp
loop
aas
movswl
sbb
repz
ret
cmpsl
fmull
stc
mov
cmp
mov
daa
cli
cmp
inc
or
jl
lock
jae
fnsave
jecxz
xor
mov
inc
dec
pop
and
stc
fucomip
jnp
xor
inc
loopne
cmpsl
mov
mov
xor
int
nop
mov
lds
std
sbb
mov
dec
adc
jb
cmpsb
xor
scas
xchg
cmpsb
movsb
ljmp
mov
push
pop
mov
sub
cmpsb
and
pop
lds
push
adc
imul
stc
adcb
push
pop
in
jns
mov
add
jmp
cmp
fcmovnbe
scas
push
adc
inc
inc
pop
sbbb
and
out
xchg
or
adc
xchg
loopne
push
fimuls
or
push
sbb
jp
xchg
mov
sbbl
sbb
test
mov
repnz
aam
jp
mov
jmp
lods
jge
sbb
scas
push
je
pop
fwait
test
fisttpll
test
mov
in
in
fsubs
out
int
and
inc
and
fucomi
out
imul
cld
les
test
andl
in
push
pop
inc
lcall
push
fldl
cmp
nop
jb
mov
jo
test
fs
icebp
cmp
jae
jp
dec
in
cs
or
mov
jg
lcall
das
arpl
fcmovne
fwait
out
mov
push
mov
xorb
add
cld
or
push
or
fs
dec
ds
fnstcw
inc
outsb
bound
dec
cli
dec
ds
cmp
mov
cmp
jg
add
je
pop
mov
call
call
jmp
sbb
sbb
cmpsb
inc
lods
ret
mov
lods
mov
mov
lods
hlt
push
or
xchg
bound
popf
or
arpl
sti
or
icebp
fcmovne
in
mov
dec
shlb
xlat
lcall
hlt
outsl
bound
testl
cmpsb
mov
flds
cwtl
test
lock
fsubr
lods
mov
stc
pop
es
stos
out
iret
lahf
xchg
repz
jno
lea
and
add
cmp
adc
in
xlat
lret
testl
adcb
mov
add
insb
mov
push
sbb
xorb
pop
in
mov
movsb
dec
xor
cmc
pop
mov
out
ret
popa
out
popa
fstps
cmpsb
sub
and
stos
stos
add
ljmp
ffreep
mov
dec
movsb
loop
lea
addl
aas
jg
inc
jnp
cmp
dec
pop
push
push
clc
dec
fldcw
cmpsb
jbe
add
lock
shrb
pop
xchg
add
sbb
inc
or
push
stos
insb
das
adc
adc
push
call
in
push
push
das
inc
or
shrl
scas
cmc
addr16
mov
or
xchg
rcr
sbb
dec
push
mov
andnps
push
jmp
pop
int3
ret
in
cmc
sub
das
insl
adc
data16
inc
mov
push
push
int3
fstpt
or
xchg
fdivr
sub
cld
sub
xchg
dec
cwtl
bound
dec
out
mov
test
fucomip
stos
cmc
jecxz
ffreep
jmp
ror
fucom
inc
fs
call
scas
pop
fisubs
cmp
movsl
xchg
lods
mov
sub
adc
shrl
sub
ja
and
dec
iret
mov
add
push
loope
xor
dec
mov
add
cmp
negb
stos
and
fwait
and
incl
xor
imul
cs
in
ja
outsl
andl
push
jns
lods
mov
cmp
or
and
call
jle
jae
mov
data16
in
ljmp
jg
arpl
mov
fists
scas
aaa
dec
ja
data16
cmpsl
jl
mov
fdivr
insb
inc
fistps
jne
stos
mov
push
push
inc
inc
aaa
and
sbb
push
and
arpl
in
aad
jmp
inc
fwait
fwait
fwait
cmp
cmp
cmpsb
and
pop
dec
dec
or
cmp
pop
xor
into
dec
mov
inc
mov
inc
fcompl
mov
jnp
pop
test
mov
xlat
popf
pop
inc
fistps
sbb
cs
call
lret
loopne
pop
sbb
or
lret
fsubrl
jnp
fs
add
mov
sahf
cmp
faddl
test
xorl
cld
lock
mov
das
daa
testl
jecxz
inc
scas
or
ljmp
jne
call
mov
cmpsb
and
mov
mov
fisubrl
cmp
sub
cmp
ja
popf
xchg
and
rcrb
repnz
adc
pop
or
fisubl
xchg
lret
mov
cmp
add
mov
subb
or
enter
push
inc
xchg
cmp
loop
jle
jge
add
inc
xchg
gs
andl
add
mull
sahf
xchg
ret
call
out
hlt
fucomi
jecxz
call
jmp
test
decb
push
dec
push
sub
lock
ds
cmp
out
or
lahf
lock
arpl
inc
xor
in
mov
xor
xchg
shl
lea
sbbb
out
push
sub
jl
inc
add
xchg
xchg
pop
dec
pop
xor
jmp
fnstenv
add
in
inc
xor
xor
xor
adc
adc
stc
push
mov
mov
ret
adc
cmpsb
sub
jmp
fbld
imul
ljmp
in
out
inc
aaa
data16
leave
add
inc
lret
aad
cmp
xlat
cmp
in
mov
mov
mov
dec
jbe
sbbl
and
sbb
add
dec
lcall
inc
sbb
pop
idivb
jnp
rcrb
cmp
xor
aas
dec
loopne
andl
jle
sbb
mov
jmp
test
rolb
shr
fmulp
sbb
sbb
sub
mov
mov
jle
stos
int3
int3
rcr
mov
sbb
add
dec
jp
xor
aas
lcall
daa
sub
push
lock
cld
dec
push
divb
fidivrs
xor
add
sbb
sub
mov
dec
sbb
jl
loope
jp
inc
nop
pushf
mov
ljmp
cmp
jnp
mov
push
push
cltd
leave
push
pusha
mov
mov
push
test
fs
push
dec
enter
or
pop
lcall
push
enter
sbb
out
test
iret
adc
leave
stc
lret
mov
sub
fsub
jns
push
push
ljmp
xchg
test
or
or
arpl
cmp
lds
and
sysret
dec
push
in
andl
das
inc
daa
inc
pop
and
push
cmp
push
pop
pop
jg
es
cli
daa
sbb
in
jmp
stos
addl
iret
and
cmp
test
push
cltd
mov
cmp
mov
inc
push
clc
sbb
xlat
mov
mov
divl
or
mov
adc
and
fisubs
orl
and
jmp
mov
andl
mov
cmp
xor
iret
psllq
mov
push
loop
adc
cld
insb
inc
popa
add
pop
adc
mov
out
xchg
loop
popa
dec
mov
pop
incl
add
or
out
cmp
scas
sub
scas
mov
or
mov
push
stos
mov
lahf
jl
je
jo
jge
repz
daa
adc
out
add
dec
xorps
xchg
jno
cmpsl
call
scas
cmp
daa
ret
mov
aad
std
jmp
jmp
aas
pop
or
rolb
adc
pushf
cld
add
xchg
faddl
xchg
lea
inc
fisttpl
jmp
fiadds
adc
pop
mov
sbb
jnp
jb
ja
sbb
call
fimuls
call
in
cmp
dec
out
xchg
mov
xor
mov
jge
outsb
cmpb
cmp
inc
rcrb
call
out
add
js
jb
jle
bnd
loop
and
push
and
or
lea
je
push
cmp
jmp
popa
sbb
push
jno
imul
cmpsl
add
mov
jecxz
cmc
inc
mov
fs
dec
shrb
and
xchg
insl
imul
repz
add
sbb
sarl
aaa
test
jmp
mov
popa
int
jne
sub
mov
outsb
pop
sub
inc
lods
jae
inc
inc
cmp
fisubrl
aaa
fs
into
mov
or
push
ljmp
negb
ffree
lds
andl
xchg
xchg
pushl
outsl
fistps
test
movl
imul
push
pop
xchg
movsl
lods
mov
in
adc
icebp
sbb
pop
xor
cs
insb
add
leave
lea
pusha
push
mov
mov
inc
lea
call
sub
pushf
push
cmp
jmp
xchg
sub
cmpsb
lds
pop
ja
push
pop
cmpsl
lea
orl
sbb
xor
push
les
sbb
filds
push
dec
xorl
mov
xor
adc
aam
mov
sub
xchg
sub
cmp
outsl
fucomi
test
mov
cmp
es
rcrl
add
add
in
mov
mov
sbb
out
cmpsb
or
pop
cmp
jns
gs
inc
test
xor
jb
and
frstor
sahf
nop
jb
mov
test
cld
les
mov
xor
incl
and
mov
pop
pop
ss
add
pop
bound
mov
in
cmc
mov
sarl
mov
jmp
push
cmp
dec
lret
sub
movsl
lods
jmp
loope
icebp
rcr
cmp
or
ficompl
andl
bound
int3
in
test
add
mov
xor
push
push
pop
pushf
lret
fmul
rolb
sbb
mov
sbb
mov
and
aad
and
dec
andl
gs
pop
scas
mov
sbb
sub
push
sahf
test
xchg
fisttpll
inc
add
fcmovnbe
pop
and
ja
lods
push
inc
aad
pop
cmp
mov
sbb
aas
int
mov
mov
outsl
dec
fisubrl
lret
enter
and
enter
flds
loopne
bound
pop
shll
mov
popa
lea
lds
mov
sbb
nop
nop
jno
dec
dec
dec
dec
cs
insb
add
cmpsb
int
lods
scas
jno
mov
pop
cmc
out
pop
dec
adc
hlt
cmp
cmc
pop
inc
gs
jge
sahf
nop
es
xchg
sbb
out
mov
std
cmp
movsb
sbb
jmp
call
clc
xchg
bound
add
push
sub
rcrl
out
sub
adc
inc
cmp
inc
adc
adc
xor
push
jle
push
int
es
cld
les
call
ljmp
add
clc
push
sbb
in
and
inc
outsb
xor
fwait
add
cwtl
clc
add
pushf
xor
sbb
data16
add
icebp
lret
mov
outsb
je
mov
inc
shl
pusha
fcomps
jae
dec
pop
je
stc
into
jl
mov
dec
or
daa
mov
loop
jecxz
push
out
cmc
add
mov
mov
lahf
dec
es
addr16
test
mov
jns
inc
push
xchg
test
push
jo
test
mov
lret
pop
xor
outsl
popa
jnp
ja
cmpsl
sbbl
adc
into
mov
mov
fiadds
push
push
sahf
repnz
repz
xchg
in
xor
les
xor
xchg
fisttpll
icebp
cmp
stc
pop
xchg
sub
sub
push
dec
adc
add
aaa
or
aas
inc
pop
lcall
loope
fldl
add
add
andl
sbb
jo
pushf
jo
sahf
adc
mov
sbb
mov
jb
popf
sahf
clc
push
cmp
xor
push
ret
daa
mov
cs
sbb
xorl
mov
mov
xchg
repnz
push
rclb
shll
shll
scas
iret
insb
outsb
pushf
adc
scas
nop
outsb
arpl
mul
pop
jnp
pop
rcr
cmp
call
pusha
xor
jp
jb,pt
push
inc
jle
mov
push
push
pop
dec
jmp
mov
xor
ss
push
jle
xchg
mov
in
adc
or
int3
in
xchg
pop
mov
iret
mov
mov
mov
jno
mov
xchg
data16
and
pop
mov
lods
test
push
arpl
pop
aas
jno
xchg
xorb
and
xor
insb
inc
add
call
sbb
repz
mov
inc
inc
jnp
mov
jmp
cmp
pop
addr16
push
fs
jp
into
fdivr
clc
push
inc
lea
btc
neg
mov
bswap
lea
lea
push
rol
cmc
stc
push
btc
shl
rcl
push
xchg
or
stc
push
btr
rcr
push
dec
mov
seto
bt
xor
mov
call
jge
arpl
sbb
sbb
cmp
push
dec
fsubr
mov
imul
loop
push
adc
cs
pop
repnz
in
int
add
clc
add
adc
pop
stc
lret
lods
inc
adc
ficoml
mov
push
mov
inc
stos
push
add
call
and
mov
mov
js
aaa
out
mov
lret
mov
fsubr
clc
fmul
or
inc
cmp
sub
mov
lea
ja
stc
imul
bt
add
pusha
lea
jmp
lods
add
jle
cmpb
inc
nop
pop
mov
xchg
mov
jmp
mov
add
lcall
mov
mov
jmp
cmpsb
es
inc
andl
pusha
imul
scas
je
repnz
push
push
pop
mov
negb
enter
xchg
fsubrs
call
jae
sti
fsubs
cmpsb
jne
pop
and
or
add
sarl
sub
dec
mov
sub
or
mul
add
std
or
inc
lcall
jmp
nop
inc
sbb
or
data16
scas
ret
mov
xor
push
adc
mov
and
xlat
cmpsl
leave
cmc
or
adc
inc
inc
add
jns
shll
enter
sbb
jle
bound
jbe
sahf
enter
sub
mov
pop
push
ljmp
pushf
lds
fidivrl
pop
test
adc
dec
in
pop
xchg
inc
sub
je
les
in
es
add
aas
loope
notl
aam
and
cmp
cmp
addr16
rolb
in
les
and
and
pop
mov
fs
push
ljmp
outsb
inc
arpl
popa
andl
cli
cmp
jns
lcall
cmp
pop
and
out
push
int3
push
hlt
sub
sbb
xchg
or
test
cli
incb
xor
add
stos
jmp
pop
fdiv
movsl
cmp
insb
jp
cmpsb
in
cmc
adc
jae
jae
mov
xor
and
add
aad
mov
out
or
into
cmp
pop
fstps
lock
or
sub
ljmp
in
out
rclb
xchg
pushf
addr16
aaa
sbb
adcb
dec
dec
call
and
push
sbb
mov
cmpsl
cmp
pop
sbb
sub
pusha
andl
arpl
jns
sbb
std
and
jecxz
mov
cmc
push
jg
std
cmc
jmp
clc
out
aad
or
fiadds
imul
mov
or
lahf
mov
lahf
popa
ret
adc
fcomp
call
xor
out
notl
fucom
shr
xchg
mov
cltd
adc
arpl
daa
inc
sub
subl
cmp
scas
and
rcrl
pusha
andl
push
popa
xchg
inc
sbb
repnz
and
pop
mov
mov
test
aam
inc
sub
sbbb
popa
jno
in
stc
xor
cltd
repz
iret
sbb
ret
outsb
mov
test
mov
push
pusha
mulb
sahf
rcll
mov
sbbl
int3
movsb
xchg
test
test
test
enter
add
jle
mov
pop
andl
pop
lods
xchg
mov
sbb
jns
or
xchg
xor
ret
call
xchg
and
test
out
inc
js
jo
pushf
inc
in
pop
pop
sbb
in
lcall
lods
in
std
rorb
adc
or
fcomp
adc
push
adc
cmp
inc
mov
dec
aas
sub
fstps
pop
andl
stos
test
mov
std
sbb
xor
pusha
fiadds
movl
jmp
aaa
sbb
test
cmp
repz
sbb
push
nop
and
pop
sbb
jo
jp
inc
ficomps
xor
mov
jl
js
inc
movsb
mov
and
pop
dec
lds
lds
jg
adcl
ja
jecxz
popf
xchg
xchg
push
dec
es
push
cmpsb
fnstsw
jg
lahf
lods
cmpsl
lea
sbb
mov
or
lret
cmp
dec
out
ret
sbb
mov
push
test
mov
inc
inc
inc
jle
insb
mov
div
add
mov
fisubrs
xor
movsb
dec
rorb
dec
jl
or
ja
andb
ja
xchg
xchg
inc
xchg
jg
jmp
mov
nop
xchg
insb
jmp
call
test
andl
pop
jle
jbe
sub
packuswb
xor
aaa
pop
push
fldcw
lahf
push
jmp
push
fs
xor
adc
clc
pusha
popl
push
and
subb
pop
push
mov
inc
add
mov
jae
sub
mov
push
pusha
jnp
lods
dec
jmp
inc
aas
pop
xor
xchg
fucom
jns
add
jnp
pop
or
lret
iret
cmpsl
scas
mull
dec
cs
or
pop
push
and
mov
push
bswap
setp
lea
jmp
dec
insl
pop
andl
sbb
inc
jno
jg
push
sbb
in
in
xchg
and
mov
pop
fcomps
push
bound
out
in
dec
incl
iret
inc
dec
xchg
fwait
icebp
pop
jb
mov
lods
mov
push
shll
xchg
ja
clc
pop
push
pop
mov
loop
in
test
add
test
scas
outsb
cmp
ljmp
push
repnz
sbb
pop
cmp
addr16
jae
stos
iret
mov
xlat
lret
pop
pop
jns
lds
repz
xchg
push
data16
sub
xorb
jle
mov
cmc
sbb
es
and
popa
cmc
jbe,pn
fiadds
sbb
jge
pop
repz
xor
dec
cli
mov
inc
xchg
pop
je
sub
lock
pop
sbb
inc
or
push
into
lds
adc
mov
cmp
stc
cmc
mov
mov
inc
inc
dec
mov
cld
pop
dec
loop
ljmp
das
decb
in
and
cmp
sbb
inc
test
clc
orl
andl
jp
bound
sbb
adc
inc
or
fildll
cmp
pushf
xor
ss
outsl
push
xchg
pushf
test
or
clc
test
mov
sub
loope
push
xchg
outsl
sub
jne
or
shrl
imul
cmpsl
int3
adc
data16
mov
jnp
ret
adc
setae
pop
xchg
call
sub
add
dec
mov
and
mov
call
jmp
sbbb
test
and
inc
dec
and
sub
push
add
test
add
sbb
aas
xor
sbb
ja
add
adc
dec
fcomps
lcall
cmpsb
mov
ret
pop
std
xchg
mov
and
adc
pop
imul
sbb
in
es
lods
xchg
mov
mov
mov
into
mov
push
push
mov
and
shr
inc
pop
andl
addr16
push
cmp
mov
pop
ret
jle
rclb
es
mov
pop
adc
mov
fsubrl
adc
inc
test
addr16
aad
xchg
xchg
or
lea
scas
sub
int
push
sub
lahf
aaa
add
fdivr
xlat
jb
movsl
adc
jecxz
mov
jns
or
cs
nop
mov
jp
notl
shlb
push
mov
lods
adc
fimuls
pop
stos
in
or
mull
imul
arpl
imul
pop
xchg
mov
cmc
in
xchg
and
cmpsb
rcrb
jl
pusha
inc
cwtl
jbe
inc
std
fcomp
ljmp
shrl
scas
push
jns
cmpsl
jge
repz
test
mov
inc
and
adc
or
ja
clc
jmp
xor
sub
fwait
js
rcll
adc
lret
mov
adc
sbb
scas
cli
lcall
cmpsl
jmp
scas
iret
mov
rcl
mov
test
jecxz
fists
cmpsb
inc
in
rcrl
stos
mov
cltd
lea
ljmp
add
sbb
jmp
lock
push
lods
jp
pop
lods
mov
test
xchg
movsb
mov
loopne
adc
lds
fisttpll
add
push
push
xlat
sub
mov
negb
out
cmp
das
aaa
inc
bound
or
jl
pop
add
jmp
mov
icebp
aad
int
add
pop
add
shufps
pop
andl
test
push
js
cmp
loopne
pop
mov
movsb
popf
cwtl
cmp
sub
pushf
ret
mov
dec
sub
cmp
pop
jl
pop
fmull
movaps
push
inc
das
leave
xchg
dec
inc
jae
scas
sbb
cmp
add
dec
adc
xor
sub
or
cmpb
enter
lcall
cmpsb
lods
adc
cmpb
outsb
lods
andb
jp
jo
out
inc
and
fsubrl
fiaddl
cli
sbb
push
and
dec
xchg
out
idivb
mov
mov
rcrb
enter
lret
shll
test
push
pop
fcompl
adc
lods
insl
clc
cwtl
ss
das
out
mov
or
lcall
inc
push
pop
sbb
push
mov
inc
es
xchg
jle
cmpsb
jbe
scas
mov
sub
mov
push
andl
inc
pop
and
jae
movsb
push
into
or
inc
cmp
pusha
xchg
cmp
out
movsb
mov
jno
call
ljmp
adc
sarl
sbb
outsb
cwtl
pop
dec
sbb
fcomps
bound
and
pop
cmp
mov
mov
scas
adc
aaa
jbe
hlt
jno
fld
mov
andl
in
inc
and
ds
push
into
arpl
lret
sbb
jg
dec
out
cmp
rcrb
rcll
lret
hlt
adc
dec
pop
outsl
sub
push
ja
repnz
nop
fs
out
sbb
clc
push
pop
and
sub
pop
dec
pop
das
adc
pop
pop
inc
jg
stc
cmp
aam
fisubrs
push
andl
ds
bound
pop
nop
fsubrl
sub
std
aaa
aaa
and
mov
xchg
push
mov
xchg
mov
in
sbb
cwtl
jle
cld
shlb
add
push
ja
mov
in
jnp
mov
je
out
lock
push
div
mov
sarb
ret
je
adc
inc
or
push
xchg
mov
push
cli
or
jbe,pn
push
push
sahf
add
fwait
fwait
push
leave
mov
push
and
aam
lcall
cmpsb
xor
add
sbb
lret
xchg
call
mov
ret
sbb
stos
gs
lea
or
pushf
lock
ss
sbb
mov
sub
outsb
jo
mov
daa
leave
in
inc
jns
jmp
jle
xlat
mov
jmp
lahf
mov
jmp
and
and
test
test
dec
movsb
mov
repz
movsb
add
dec
insl
popa
addr16
imul
ja
outsb
imul
and
xor
cld
decb
push
and
or
or
jle
pop
and
les
push
stos
ret
jl
out
adc
dec
pushf
mov
roll
fst
fcompl
decb
fwait
gs
pop
lret
repnz
addr16
hlt
push
bsr
ror
es
lahf
xor
orl
mov
lods
jg
xorb
pop
sbb
mov
punpckhwd
out
pop
xor
iret
adc
xchg
jno
push
adc
and
or
push
in
lock
imul
push
push
sub
ljmp
or
and
out
js
dec
lock
lret
rcll
sub
sahf
cmp
cmp
sub
dec
aas
jno
xchg
xchg
lret
sub
rcrb
lds
sub
sub
fisubl
outsl
push
sbb
push
or
repnz
mov
push
movsl
das
ja
jge
imul
sbb
jbe
cmp
mov
leave
pop
jg
push
aad
cmp
mov
test
and
out
scas
adc
aam
leave
cld
cmpsb
fistpll
mov
daa
sbb
and
imul
cmp
mov
adc
lret
adc
dec
stos
repnz
aaa
insl
sub
daa
lcall
pop
mov
leave
or
push
into
addb
mov
sbb
in
mov
push
push
adc
and
iret
add
es
push
jp
inc
jge
or
repnz
adc
xchg
pop
js
push
stos
dec
jg
je
mov
movsb
xlat
and
fidivrs
es
push
xor
sbb
or
je
test
call
lds
daa
and
push
cmpsb
mov
rol
sub
push
or
jb
movsb
out
push
adc
mov
data16
subb
push
sub
js
stos
dec
cmp
cmpsl
lds
aaa
adc
aaa
xchg
out
mov
loope
movsl
shrl
and
dec
and
enter
sub
sub
es
and
push
jbe
and
jbe
push
cmpsb
rolb
fildll
add
inc
lret
sub
test
adc
mov
xchg
enter
sbb
fwait
int3
repnz
jb
dec
and
and
push
cmp
inc
insl
sbb
ret
mov
pushf
push
push
jmp
jl
mov
pop
or
or
dec
lret
in
pop
cmp
stos
mov
leave
out
js
imul
nop
clc
js
sub
pop
add
ret
xchg
sbb
or
mov
xchg
mov
adc
aam
repnz
mov
insb
imul
or
sub
cmp
xchg
adc
push
repnz
push
andb
icebp
das
aaa
js
mov
popa
xorb
ss
adcl
mov
shll
outsb
push
sub
orps
mov
sbb
leave
adc
sbb
dec
and
lahf
or
adc
cmpsb
sub
add
adc
pop
mov
adc
daa
rol
aaa
movsl
xchg
leave
jle
stos
cmpsl
xor
out
repnz
call
sbb
and
and
cmp
adcb
fldenv
pop
mov
mov
aam
jg
sbb
sub
movsl
lret
enter
cmp
clc
or
in
jp
stos
leave
or
into
movsb
insl
or
add
cmp
sbb
pop
outsb
mov
adc
mov
shll
xchg
mov
mov
les
xchg
sbb
out
mov
lret
fmuls
hlt
outsl
out
movsb
lret
mov
mov
xor
mov
adc
pop
mov
sbbb
fwait
lds
mov
subb
sub
or
xorl
push
mov
push
or
adc
sbb
cmp
repnz
pop
lret
adc
repz
movsb
call
sub
mov
inc
sbb
add
and
xchg
aad
movsl
lret
dec
adc
jle
jmp
mov
sbb
lret
sbb
dec
sub
rorb
stos
adc
fwait
mov
jbe
imul
leave
test
inc
outsb
fprem
sbb
sub
mov
adc
push
dec
jne
add
jmp
and
call
ret
add
and
inc
das
repnz
and
jecxz
lret
dec
push
sub
sub
mov
lret
mov
jg
lret
cmpsb
das
je
jle
jle
cmp
mov
push
xchg
hlt
dec
sub
loope
or
sbb
repnz
fistps
pop
mov
lahf
dec
outsb
pop
jns
lret
test
repnz
fs
lahf
ljmp
jno
add
and
adc
or
stos
push
and
popa
jae
fdivrs
std
mov
sub
lods
dec
lock
je
fiaddl
dec
outsl
testb
mov
dec
fisubrl
sbb
push
sub
mov
jg
pusha
cmpsl
and
ja
and
mov
shlb
pop
inc
js
xchg
push
iret
movsb
rol
mov
aad
xchg
xchg
mov
mov
lret
mov
pop
addr16
sub
cmp
xor
sbb
loop
or
repnz
sub
int
sbb
and
into
mov
repz
jmp
nop
mov
ja
aad
insl
adc
ret
call
xor
mov
cmpsb
mov
pop
addb
pop
pop
jp
dec
add
xchg
cmp
repnz
jae
aaa
mov
mov
out
sbb
dec
sub
and
cmpl
jmp
call
ja
jmp
dec
or
lods
mov
imul
sbb
sub
jecxz
cmp
sub
cmp
jmp
popa
int
dec
jae
jns
or
aas
and
push
xchg
loop
sbb
sbb
mov
decl
lret
stos
sbb
test
sub
les
inc
mov
nop
jl,pt
cwtl
out
mov
mov
test
in
repnz
out
mov
out
lret
jge
fmuls
cli
and
and
jnp
lds
lods
xor
and
call
mov
push
xchg
dec
hlt
repnz
mov
popa
jecxz
sbb
sub
sbbl
sub
pop
addr16
sub
fists
lock
addr16
mov
leave
and
cmpsl
enter
lret
imul
sbb
lcall
inc
jne
jae
pop
inc
scas
pop
jne
imul
sbb
and
imul
testl
mov
ret
out
sti
sbb
call
andl
fs
and
push
cmp
lret
add
imul
xor
adc
test
sbb
adc
xor
stos
xchg
push
adcb
adc
loop
in
xor
mov
mov
pop
mov
dec
adc
ljmp
leave
andl
stos
sub
repnz
fsubrl
xchg
arpl
mov
pop
and
and
lahf
mov
aas
sbb
dec
mov
lret
and
popf
nop
repnz
icebp
jmp
loop
xchg
repnz
mov
cmp
stos
movsb
mov
xchg
lods
int3
addl
inc
inc
sub
insb
fsqrt
sub
cwtl
jmp
or
dec
aad
inc
sub
popf
sub
test
xchg
sbb
jg
out
push
push
pop
js
aam
push
adc
push
aad
add
pop
shl
push
and
repnz
out
sbb
xor
pop
sbb
shlb
add
jecxz
mov
mov
imul
xlat
jg
pop
fnstsw
aas
into
and
stc
mov
push
mov
fisubrs
popa
push
orl
ss
or
cmpsb
mov
push
xchg
sarl
mov
and
jle
imul
mov
js
sbb
dec
ds
aad
lock
std
push
popa
mulb
inc
cltd
xchg
jecxz
sub
inc
or
add
push
sbb
out
and
jne
mov
sbb
jg
cmp
inc
push
sbb
or
loope
mov
add
loope
clc
in
adc
push
lea
inc
enter
stos
nop
lock
jge
push
xchg
rorb
lcall
jl
out
add
fcmovnu
sbb
lcall
adc
dec
mov
jb
push
lds
daa
dec
xchg
test
sub
mov
xchg
xor
mov
clc
pop
mov
movsb
repnz
sbb
and
mov
or
repz
cld
adc
or
outsl
adc
mov
repnz
mov
sub
jle
jb
sub
pop
out
repnz
adcl
xchg
sub
adc
dec
mov
inc
mov
cli
pop
dec
in
incb
adc
add
ljmp
repz
xchg
hlt
das
ja
das
movsb
jno
pop
and
enter
andb
jg
pop
sub
pusha
lret
repnz
xor
fndisi(8087
lret
cmp
repnz
shrl
pop
mov
ljmp
jmp
inc
push
or
jg
cmpsb
xlat
sub
xor
jge
and
pushf
or
lret
les
and
and
push
and
adc
neg
cwtl
dec
decb
sbb
adc
sbbl
fst
cmp
sbb
leave
sti
push
mov
mov
stos
repnz
popf
decb
or
fnsave
xchg
xchg
arpl
test
lea
fcmovbe
fstpl
sub
leave
cmp
icebp
xor
repz
xor
cmp
test
xor
xchg
imul
fsubrp
in
adc
movsb
cmp
mov
fmull
adc
add
mov
or
arpl
and
icebp
incl
ljmp
stos
ljmp
and
test
and
and
push
test
repnz
popa
pop
mov
fwait
jl
and
fnstsw
negl
dec
fidivl
mov
fistpl
ret
sbb
std
pushf
je
adc
push
fdivrs
pop
add
bnd
pushf
cmpsb
push
dec
insb
add
repnz
push
in
rcrb
aad
push
fs
push
in
mov
jg
mov
sti
add
xor
mov
je
jle
in
ljmp
xchg
fists
aam
xor
push
mov
daa
repnz
sub
mov
push
dec
out
mov
sbb
push
repnz
sbb
lret
les
or
arpl
and
outsl
test
imul
sub
add
repnz
fmuls
jecxz,pt
sahf
loope
cs
mov
insb
add
xor
loop
pushf
repnz
add
add
sbb
mov
and
pop
or
adc
xchg
loopne
fptan
aad
rorl
idiv
lahf
mov
push
ficoml
ficoml
or
adc
xlat
jle
es
dec
mov
inc
adc
inc
imul
mov
in
enter
daa
lret
stos
xchg
subb
cmp
lods
sbb
sbb
sbb
lret
aad
and
cld
decb
adc
nop
enter
adc
xchg
data16
xchg
push
adc
mov
enter
imul
sub
mov
mov
adc
pop
je
in
inc
jg
test
jne
testb
stc
fnsave
ljmp
in
insb
jmp
mov
mov
adc
push
pop
adc
lea
sbb
xor
fidivrl
cmpsb
fmuls
mulb
test
inc
lret
js
xchg
movsb
call
addr16
ljmp
nop
xchg
push
xchg
ret
rcr
jbe
stos
idivb
ficomps
lock
pop
lods
or
sar
fs
cmp
out
xchg
jg
int3
sub
fsubp
sub
and
cltd
mov
popf
imul
test
adc
mov
nop
xor
repnz
fadd
add
roll
and
xlat
jmp
das
xor
ja
leave
in
mov
lcall
inc
sub
out
sbb
pop
sub
mov
jle
sbb
ljmp
push
lcall
test
or
jnp
aad
and
pop
mov
and
push
lea
movsb
mov
das
test
cs
push
sbb
jns
scas
jb
cmp
cmp
add
xchg
repnz
mov
leave
enter
mov
or
mov
pop
ljmp
lock
fs
test
fnstcw
repnz
mov
add
daa
cmp
pop
xor
loop
lods
push
and
mov
add
enter
arpl
cmpsl
ljmpw
cwtl
test
adc
movsb
repnz
ficoml
sti
adc
mov
pushf
xchg
pop
lahf
iret
movsb
inc
or
sub
cmpb
and
fucomp
repnz
hlt
loopne
cmp
dec
cmpsb
dec
jp
sbb
sub
cli
adc
jno
pop
jge
jo
das
sbb
repnz
push
jo
jmp
loop
test
repnz
ss
lcall
testb
negb
xchg
movsl
rcr
cs
in
fbstp
xchg
pop
mov
inc
pop
sbb
test
adc
movsl
orl
cli
call
add
test
sti
repnz
cld
imul
adc
push
je
adc
repnz
or
out
cmpsl
inc
add
mov
mov
adc
jmp
push
cmp
inc
xchg
jns
out
repnz
pop
daa
mov
mov
out
adc
jne
repz
es
inc
adc
lods
dec
loopne
repnz
push
mov
mov
mulb
cli
sub
sub
es
popa
in
jp
mov
add
fdivs
dec
fsubl
jns
clc
loopne
adc
add
add
inc
fs
aad
mov
push
add
cltd
in
imul
rolb
push
ret
inc
movsb
lods
add
lret
sub
mov
pop
les
inc
loope
es
insb
and
int
repnz
insl
sub
pop
adc
cmp
ljmp
mov
je
xchg
daa
push
add
jbe
popa
xchg
adcb
push
in
leave
inc
pop
xchg
dec
movsl
jle
lds
sbb
dec
ds
pop
clc
gs
xchg
fisubrl
jb
mov
scas
shr
inc
jmp
bound
sbb
imul
and
std
mov
mov
lods
cli
or
and
mov
in
xchg
ss
inc
or
and
test
loope
xchg
xchg
or
or
mov
dec
mov
xchg
jl
add
push
sbb
sbb
mov
test
or
stos
mov
fisttpll
sub
sub
xchg
or
lock
loope
data16
jbe
mov
cld
adc
lcall
sbb
sbb
push
fidivl
inc
mov
imul
push
or
adc
sti
stos
cltd
xchg
mov
and
dec
sub
shr
rcll
fistpll
sbb
icebp
push
leave
xor
imul
test
lret
cmp
jmp
sub
leave
jmp
and
daa
popf
adc
mov
dec
bound
xchg
repnz
insl
sbb
movsl
add
aas
mov
in
push
call
pop
jecxz
jle
cmpsl
mov
ret
arpl
jo
push
or
pushf
inc
cmp
pushf
test
adc
rorl
add
out
mov
stos
inc
in
sub
jns
imul
inc
push
inc
or
and
sbb
icebp
mov
and
xchg
mov
daa
pop
or
or
aad
adc
dec
push
pushf
bound
pop
test
add
cli
or
cmpsb
or
pop
jb
adc
mov
mov
adc
jnp
mov
sub
jno
push
inc
icebp
adc
adc
inc
mov
inc
push
mov
pop
mov
or
stos
imul
mov
in
add
pop
lret
jecxz
ficoml
rclb
test
sti
xchg
or
mov
cmp
jge
inc
fildl
inc
mov
cli
bound
aam
aad
or
out
pop
imul
jae
sbb
xchg
mov
add
sub
mov
sbb
cmp
pushf
rclb
fs
jl
out
in
cli
daa
jle
push
cmp
bnd
adc
mov
cmpsl
repz
lret
pop
pop
push
movsb
rcll
jo
movsb
sub
ret
hlt
adc
fcmovbe
cmp
clc
jle
pop
call
jmp
sbb
imul
iret
xlat
call
fimuls
shrb
dec
pop
pop
shr
pushf
or
xor
fsts
jbe
mov
sbb
or
jle
sbb
or
lret
cmp
pop
lahf
clc
sub
inc
adc
lods
ljmp
or
data16
mov
negb
sub
dec
cmpsl
jmp
pop
mov
int
mov
lds
sub
or
mov
rcrl
mov
jns
xor
add
hlt
outsb
gs
ja
mov
adc
movsb
push
movsb
mov
and
shl
or
push
xchg
mov
pop
clc
xlat
or
or
outsl
shr
repnz
xchg
fcompl
mov
mov
lods
ret
cmpsl
xchg
push
cmp
mov
mov
orl
or
or
loopne
and
ja
je
test
cmp
repnz
cmc
scas
ljmp
loop
test
mov
add
stos
js
ret
mov
jb
or
jmp
lahf
or
fs
sbb
mov
push
xlat
ds
movsb
cmpsb
lds
mov
sub
mov
xchg
xor
pop
add
daa
lretw
pushf
outsb
stos
repz
xchg
mov
inc
test
or
test
jecxz
fcoms
repnz
inc
adc
and
jmp
xor
jbe
inc
je
and
ret
inc
je
or
rcll
out
inc
stc
cmp
popf
fwait
push
or
into
mov
repnz
jge
test
inc
adc
divl
pop
add
testl
mov
xchg
ljmp
dec
push
gs
inc
popf
roll
mov
mov
sbb
test
imul
inc
adc
mov
rcll
daa
sbb
mov
push
popf
loope
push
pop
addr16
insl
and
xor
sub
data16
jl
jmp
inc
outsl
cmp
dec
add
or
sub
repnz
xchg
sub
push
jle
or
mov
imul
mov
adc
xor
test
mov
pop
lahf
xor
sub
mov
and
dec
xchg
mov
and
jns
mov
dec
cmpsl
or
mov
mov
xchg
outsl
mov
sbb
or
mov
inc
jl
jecxz
jo
stos
dec
xchg
cwtl
push
lahf
shr
call
mov
or
fucom
or
mov
pop
in
mov
mov
ja
out
inc
add
cmp
scas
ds
jmp
inc
sub
cmp
pop
lods
pop
adc
cmpsb
mov
leave
push
mov
ja
nop
aam
ret
out
out
adc
shr
repnz
mov
nop
mov
or
daa
add
test
add
fs
lret
dec
popf
adc
fadd
sub
xchg
and
leave
jge
jl
sbb
xlat
mov
pop
orl
push
jl
dec
or
xchg
mov
sub
or
xor
std
sbb
sub
jmp
mov
shlb
sub
xor
test
es
repnz
inc
lock
call
sahf
adc
and
xor
pop
push
cld
sbb
repnz
push
pop
cs
leave
js
pop
es
sub
cmp
mov
and
pushf
mov
es
cmpsl
push
xor
fs
adcl
testb
push
jecxz
and
add
js
ret
or
jmp
cmc
sub
or
loopne
ja
ret
rolb
lret
shlb
movsb
pop
adc
mov
mov
and
adc
insb
call
test
repnz
lock
xchg
lea
mov
push
push
jmp
imul
clc
push
lock
add
xor
sub
dec
repnz
sbb
pop
adc
add
stos
and
loopne
sub
test
orb
ret
mov
aas
pop
adc
jo
cmc
ror
adc
sti
inc
or
jnp
daa
and
add
test
adc
int3
and
and
adc
mov
xor
or
sarb
adc
addr16
movsb
test
lret
int
cltd
repz
ror
ret
repnz
popf
loopne
mov
iret
sub
dec
pushf
aam
jns
fs
jecxz
pop
subb
or
std
xchg
ljmp
mov
xor
or
pop
mov
xor
sbb
sub
test
test
rolb
fcompl
stos
xchg
cwtl
repnz
push
pop
icebp
gs
sbb
sub
sbb
and
mov
mov
adc
adc
mov
and
imul
inc
inc
sub
sbb
jb
fbstp
test
out
pop
arpl
and
sub
xor
or
cli
jge
ds
shll
sub
sub
mov
les
js
jle
test
or
mov
arpl
dec
jb
outsl
sbb
and
xchg
aam
lods
and
adc
inc
push
mov
leave
and
pop
sub
mov
dec
pusha
or
sbb
push
int3
xchg
sub
mov
call
mov
lcall
pop
movsb
jne
pop
or
mov
jecxz
push
stc
and
dec
push
mov
cld
xchg
out
xchg
pop
xor
push
sub
movsl
sub
adc
adc
sti
inc
xchg
pop
sub
or
mov
ja
dec
pop
aad
popf
call
mov
mov
ret
ljmp
jl
cld
dec
cmp
jns
pop
ficompl
scas
lea
popf
ret
shl
mov
daa
sub
adc
sbb
or
shl
mov
out
add
fnsave
and
stos
cmpl
xchg
push
xchg
call
cmpsl
pop
sti
nop
xchg
jae
pop
and
outsb
lret
adc
xchg
je
ds
xor
lods
mov
sub
loop
inc
int
jo
xchg
int
xchg
enter
mov
pushf
sbb
arpl
in
sub
cmp
xchg
test
cld
fsubrs
add
push
pop
sbbl
or
addr16
fcomps
sbb
push
mov
and
and
mov
and
repnz
stc
pop
sbb
push
mov
fdivl
int3
xor
in
cmpsl
jle
cmp
andb
xchg
adc
fldl
mov
pop
sahf
jno
add
dec
xchg
call
sub
adc
inc
movsb
out
int3
testl
xchg
movsb
dec
add
adc
stos
mov
int3
add
sarb
scas
adc
test
ja
mov
adc
mov
adc
aas
lods
xchg
scas
fistpl
lcall
xchg
test
push
cs
dec
pop
sub
lock
outsb
lods
and
jb
scas
xchg
sub
pop
or
addr16
inc
outsl
push
lcall
and
cmpsb
lds
movsb
repnz
stos
jl
loope
adc
std
outsl
lods
loope
ret
mov
and
stos
cmpsb
adc
je
movsb
inc
and
jecxz
test
jp
or
mov
adc
dec
push
pop
ljmp
sbb
aas
or
fstl
movsb
mov
xor
fadds
mov
mov
adc
dec
pop
hlt
sbb
inc
adc
pop
aaa
jecxz
dec
roll
lds
sub
xor
mov
xor
jmp
xlat
rorl
push
repnz
lock
pop
and
dec
fildl
or
jle
mov
loope
inc
aad
adc
mov
cwtl
mov
adc
cltd
mov
inc
and
xor
adc
outsb
ljmp
push
popf
add
mov
incb
repnz
cld
add
in
mov
dec
sahf
mov
sbb
enter
mov
lock
stos
arpl
scas
es
adc
push
std
js
ret
mov
cmp
test
mov
mov
push
push
js
jmp
adc
sub
and
sub
mov
mov
and
adc
shr
or
and
pop
adc
adc
and
and
movsb
fdiv
push
scas
or
test
sti
fs
adc
test
shrl
pop
mov
and
and
out
mov
pandn
inc
pusha
push
imul
in
mov
ss
cmp
adc
fs
cmpsb
repnz
and
mov
adc
test
in
aad
je
out
jecxz
sbb
cmp
repnz
push
push
add
sbb
mov
idiv
xchg
mov
pushf
inc
shll
sbb
insb
mov
scas
aas
mov
jmp
sbb
sbbb
inc
lret
dec
sub
fdiv
imul
out
sbb
mov
dec
and
ljmp
arpl
xor
nop
lea
sub
or
rolb
jnp
hlt
ljmp
lods
test
sub
mov
fwait
and
call
cwtl
repnz
ds
xor
mov
mov
sub
sbb
push
sub
push
iret
hlt
arpl
pushf
jecxz
addr16
sbb
or
fadds
movsl
call
mov
fcmovbe
jns
stc
sub
hlt
insb
sbb
mov
gs
mov
int3
fmul
repnz
pop
xor
inc
pop
aam
andb
out
insb
xchg
repnz
fnstsw
loopne
and
push
push
or
lret
pop
mov
mov
or
pop
jb
sub
repnz
inc
pop
xchg
daa
push
adcl
add
mov
outsb
inc
xor
and
ljmp
add
jnp
jecxz
push
test
xchg
mulb
out
jmp
jmp
enter
shrb
ret
es
fs
cmp
jmp
mov
pushf
push
stos
push
pop
out
jns
sub
test
mov
mov
or
pop
stos
add
cmpsl
test
and
pop
push
mov
pop
repnz
pop
sub
and
outsb
push
jne
adc
dec
lock
sub
push
imul
repnz
xchg
aad
js
repz
cmp
mov
xor
mov
sbb
mov
lock
ljmp
inc
sahf
jo
pushf
mov
xor
or
push
push
aam
jecxz
pop
lret
imulb
int
xlat
mov
dec
xchg
sbb
out
leave
mov
out
mov
pop
xchg
push
xchg
dec
out
jno
jmp
stos
or
jb
pop
inc
les
aam
call
outsb
inc
inc
xchg
fstpl
jne
repnz
mov
adc
or
outsl
xchg
aas
cmp
sub
fdivrs
mov
shll
cwtl
cmpsb
nop
bnd
pushf
shlb
sbb
out
scas
xchg
inc
hlt
aaa
repz
add
lret
movsb
xchg
aad
ret
aam
jg
arpl
sbb
mov
mov
add
sub
and
cmp
test
outsl
mov
xor
add
repnz
inc
stc
scas
push
fdiv
lcall
sub
icebp
jmp
sub
xacquire
inc
pop
mov
mov
pushf
add
jecxz
cwtl
jecxz
adc
lea
loope
data16
orb
push
or
push
movsb
cwtl
pop
movsb
lds
push
mov
fsubrs
add
xchg
cmpsb
mov
mov
bound
lcall
aas
add
push
faddl
into
and
nop
cmp
insb
aad
insb
push
test
push
pop
adc
jae
aas
push
push
incb
mov
jno
js
inc
adc
movsb
add
sbb
mov
adc
sbb
and
add
icebp
cmp
stc
sbb
inc
mov
cltd
lret
add
lods
push
in
and
fsubrp
fbld
into
mov
sbb
rorb
fsubrl
push
imul
test
stos
lret
testl
inc
mov
push
cli
scas
jb
push
ljmp
dec
sbb
lock
mov
or
mov
push
pop
push
arpl
ljmp
test
pop
add
or
push
push
rcr
mov
bound
adc
out
inc
mov
or
mov
sbb
fidivl
xchg
data16
lock
in
xlat
fs
movsb
mov
shrb
in
insl
push
xlat
mov
cmpsl
flds
push
dec
xchg
repnz
jle
xor
cmpb
lcall
fs
push
clc
add
mov
mov
adc
fwait
es
lods
pop
mov
jno
inc
mov
add
int
add
mov
mov
jns
xor
incb
sub
inc
jecxz
call
or
mov
mov
ret
jnp
and
sub
push
call
jmp
idiv
cmp
mov
or
jl
aam
xchg
and
pop
adc
shlb
mov
out
xchg
mov
out
jmp
push
enter
insl
lock
and
std
test
cli
lret
sti
call
enter
outsl
fs
out
or
xor
sbb
es
lds
or
in
clc
leave
sub
cli
les
push
stos
js
adc
mov
mov
sbb
xchg
movsb
sub
test
pop
ja
lcall
jbe
add
cmpsl
xlat
movsb
in
push
add
pop
add
mov
xchg
jmp
xchg
inc
insl
cmp
mov
nop
sub
inc
cli
jae
aam
in
push
loope
sarl
inc
pop
xchg
jge
and
adc
jmp
inc
add
sbb
xlat
push
lret
pmullw
jmp
andl
mov
movsb
push
inc
add
cltd
add
inc
in
pop
cmp
dec
push
popf
sbb
xor
adc
push
and
add
pop
mov
movsl
or
add
ficoml
mov
sub
push
mov
push
repnz
mov
xchg
lods
hlt
sub
das
xor
sbbl
cltd
xchg
ret
sub
jnp
outsb
and
xor
push
rolb
jl
pop
jbe
mov
cmpsl
icebp
add
pop
jl
cmovnp
fldcw
push
mov
sbbl
push
scas
repnz
push
jbe
xlat
xchg
cli
xor
in
jno
add
sub
jp
xchg
loope
jo
xchg
fldenv
jge
cmp
ljmp
sbb
mov
leave
inc
jg
mov
daa
or
mov
mov
mov
xor
and
push
addr16
and
scas
and
ds
mov
pop
shrl
cld
adc
push
movsb
mov
bnd
jne
lock
aad
pop
out
movsl
or
jno
fdivrs
xchg
xlat
mov
or
aaa
js
jnp
lds
adc
aam
or
jmp
dec
test
cwtl
imulb
xlat
jge
pop
cmp
sbb
xchg
mull
popa
repz
push
adc
push
cli
inc
inc
sti
add
lret
xor
movsb
fstpt
and
xchg
push
dec
inc
dec
mov
xchg
movsl
movsb
push
test
mov
pusha
jnp
movsb
push
sbb
add
arpl
adc
push
mov
sbb
inc
sti
push
mov
xchg
dec
pop
and
sahf
aaa
icebp
add
inc
insb
jecxz
ret
fadds
or
mov
cmpsl
aam
fildl
aam
mov
adc
sbb
dec
jg
jecxz
movsb
sbb
test
neg
hlt
pop
push
jecxz
add
ljmp
std
push
mov
sub
mov
sbb
test
popa
fdivs
and
insb
inc
sub
aaa
jmp
sub
pushf
jne
sub
fistpl
pop
ret
fnsave
inc
cmp
scas
dec
outsb
ret
xchg
in
subl
ja
inc
add
imul
ret
iret
or
sbb
push
jnp
rclb
jp
push
xchg
movsb
adc
mov
call
addr16
add
inc
adc
sbb
adc
push
push
sub
arpl
repnz
and
sbb
ja
adc
xacquire
jo
push
enter
daa
or
push
dec
loop
out
or
inc
and
sbb
shll
xchg
loope
add
mov
pop
push
and
popa
mov
int3
mov
movsb
call
adc
daa
cmp
scas
cmpsb
inc
add
aad
jp
or
jecxz
out
lock
cmp
push
mov
pop
outsl
test
sbb
dec
loope
xor
je
scas
test
loope
and
mov
pop
dec
test
add
je
mov
sub
imul
test
pop
sub
fwait
repnz
movsl
xchg
mov
push
mov
fwait
jp
sti
mov
fwait
stc
mov
test
repnz
sti
fisubrl
pop
popf
cwtl
loop
cmp
jmp
inc
movsb
jmp
mov
mov
ret
cwtl
lret
lea
mov
je
rcl
push
scas
cltd
push
sub
dec
lret
pop
sbb
add
das
or
jo
sbb
mov
or
jg
mov
mov
lcall
imul
mov
mov
and
lock
jnp
add
xchg
xchg
stos
lret
fnsave
aam
int
mov
or
sbb
arpl
movsb
js
icebp
aaa
inc
add
cmpsb
jecxz
jno
outsl
cmp
clc
xor
sub
negl
pop
pusha
bnd
loope
sub
daa
and
dec
cmp
mov
sti
lahf
jbe
mov
mov
inc
jle
leave
aam
inc
out
jg
cmp
xchg
test
arpl
cld
and
ja
adc
mov
inc
add
xor
sbb
loopne
mov
pop
fdivr
fcompl
xchg
adc
fsubrl
sbbl
aad
cmpsl
loop
xor
cmpl
jbe
in
mov
in
xchg
jo
add
shrl
cmp
sub
jp
jle
lcall
pop
lret
std
push
adc
add
cmpsl
pop
scas
andb
loope
mov
enter
mov
cld
sub
popa
adc
ds
or
mov
popf
and
mov
lahf
sbb
jne
mov
cmpsl
mov
adc
xor
add
sbb
ret
pop
test
adc
mov
push
movsb
push
loopne
and
test
stos
or
sti
sbb
sahf
enter
push
repnz
fcoms
push
call
and
push
xchg
fmuls
mov
xlat
arpl
cmpl
or
scas
xor
insl
cmp
call
pop
sbb
xchg
pop
or
or
mov
inc
jl
add
mov
lock
push
push
or
mov
mov
shlb
dec
sbb
cld
add
dec
arpl
push
cwtl
das
clc
hlt
in
cld
jno
inc
mov
ret
leave
jle
shlb
psubq
jecxz
sub
decl
jbe
dec
jle
inc
mov
adc
js
xor
add
cmpsl
xor
xchg
mov
sbb
push
xor
cmp
into
test
cld
test
xor
xor
scas
inc
test
nop
outsl
aad
insl
outsl
test
xchg
jns
stos
es
add
arpl
enter
fistps
or
or
inc
aad
mov
pusha
sub
test
test
mov
sub
jae
adcb
add
or
adc
pop
cmp
push
mov
adc
ficoml
pop
cltd
jo
fistpl
cvtps2pd
mov
or
lret
jae
sbb
hlt
adc
pop
add
repnz
mov
dec
mov
leave
adc
xor
clc
push
bound
mov
and
loopne
mov
push
push
add
adc
mov
cmp
jns
lret
repnz
aaa
iret
xchg
mov
ljmp
sbb
aam
mov
adc
sub
add
mov
pop
es
jle
push
and
or
jg
or
push
adc
mov
cltd
pop
imul
mov
adc
pop
inc
sbb
cmp
inc
ja
fmuls
outsl
icebp
add
mov
shl
mov
loope
jge
out
adc
sbb
pop
dec
adc
xor
fsubp
mov
add
pause
push
lds
mov
fwait
ret
cwtl
jmp
movsb
push
out
and
jmp
push
adc
or
ljmp
push
xchg
movb
mov
and
fs
push
iret
jp
mov
mov
cwtl
sarl
les
pop
shrl
sub
sbb
dec
popf
push
cli
dec
sbb
sub
leave
clc
nop
sub
mov
cltd
sub
xor
in
or
loop
stos
rcl
arpl
mov
mov
push
test
push
push
out
test
pop
pop
add
test
inc
sbb
out
jne
cmp
jne
test
or
arpl
jns
outsl
cmp
nop
xor
jns
xor
stos
dec
and
cmp
arpl
xor
call
and
cld
sub
stos
test
lret
imul
in
dec
das
aas
repz
xchg
lret
mov
out
pop
mov
inc
adc
fs
sti
mov
stos
imul
rolb
pop
mov
cli
imull
imul
ja
sub
adc
fstl
xchg
pop
cmp
insb
cmp
adc
add
sub
mov
adc
pop
cwtl
repnz
dec
aam
arpl
scas
out
scas
sub
ja
and
rcll
jno
sbb
and
and
jae
jne
in
sbb
xchg
pop
mov
jecxz
clc
push
and
addr16
daa
jbe
adc
mov
lods
and
or
cltd
out
clc
aaa
sbb
popf
out
stos
push
sarl
fsubrp
and
scas
pushl
in
cmpsl
sbb
out
or
cmp
cmp
cmc
roll
inc
leave
es
sbb
push
xlat
hlt
leave
repnz
jnp
push
xchg
cmp
dec
dec
inc
mov
jl
hlt
es
cmp
popf
dec
adc
pop
sub
mov
ljmp
cld
jnp
inc
stos
shlb
lret
push
or
jl
dec
xchg
mov
data16
fstpl
mov
xor
adc
add
ret
jecxz
push
push
ret
pushf
in
ja
mov
jo
leave
test
imull
pop
and
mov
pop
mov
arpl
jbe
xor
loope
subl
mov
xorb
push
or
dec
xor
push
add
mov
add
xchg
and
dec
repnz
mov
movsb
add
pushf
sti
lret
jb
stos
sub
push
inc
lds
les
and
arpl
mov
inc
subb
addr16
les
psubusb
dec
push
mov
mov
or
iret
lahf
or
sbbl
adc
clc
daa
mov
push
pop
jge
push
test
sbb
sbb
jmp
jle
adc
mov
sbb
adc
inc
out
ljmp
loope
xchg
mov
sbb
dec
iret
jecxz
aam
imul
inc
shlb
icebp
pop
cmpsl
repnz
push
lretw
fs
sbb
xor
testl
stos
lea
push
push
sub
or
add
add
adc
sarb
jns
jmp
jg
repnz
mov
enter
or
shr
cmp
pop
dec
inc
inc
sbb
std
mov
cwtl
sub
jl
sub
repz
cli
js
inc
cmp
sub
pop
stos
sbb
ljmp
jo
push
sbb
pop
cmp
out
ja
dec
adc
lock
or
insb
jge
enter
dec
xor
inc
lcall
push
roll
xchg
mov
jle
fdivrs
ds
roll
or
cmp
je
lret
mov
inc
scas
cli
and
add
pop
push
jecxz
and
call
xor
jo
xlat
inc
mov
decl
xchg
pusha
mov
sub
cmp
insl
adc
jge
cmp
mov
ficoms
das
jp
outsl
mov
push
or
sbb
and
or
dec
and
cmp
test
iret
test
fcomps
jmp
cmpsb
rcrl
adc
sbbb
mov
roll
dec
hlt
xchg
add
adcl
js
push
out
lea
pop
sbb
js
mov
mov
mov
sub
mov
mov
dec
hlt
loope
into
jno
leave
inc
dec
stos
mov
dec
push
jecxz
cli
shlb
psllq
sbb
sti
mov
dec
daa
push
sarb
pushf
subb
jge
fisttpl
jg
dec
pushf
jo
stos
adc
insl
sbb
cmp
icebp
aam
repz
popa
or
mov
out
adc
fisubrl
cli
flds
inc
mov
mov
inc
or
push
xlat
daa
daa
sbb
fidivrs
js
insb
xorl
mov
sahf
xchg
sbb
outsb
and
repnz
mov
xor
mov
stos
and
scas
popa
push
jbe
popa
jae
jbe
pop
sub
gs
cli
jge
or
ret
test
dec
cs
in
pop
xchg
inc
jae
mov
push
out
lret
inc
popf
jmp
ret
cmpsb
push
xchg
jae
movsb
mov
xchg
add
dec
xor
and
fdivl
xor
pushf
stos
ljmp
mov
mov
movsl
ja
test
mov
popa
mov
repnz
sub
xchg
adc
and
imul
sbb
loopne
ja
lock
pushf
add
popa
adc
sbb
cltd
xchg
adc
pop
pop
inc
mov
adc
sub
outsl
addb
add
ljmp
jecxz
iret
adc
out
stos
sub
sbb
gs
shr
leave
jns
push
lret
cmp
push
rclb
shll
repnz
add
fcomps
sub
sbb
popf
xchg
fs
leave
or
loope
or
and
insl
jle
cltd
repz
xor
outsl
and
test
repnz
sbb
push
sbb
xor
popl
cwtl
test
adc
lds
mov
mov
mov
sbb
cmp
inc
lds
sub
stos
les
mov
ficompl
mov
mov
inc
cwtl
popa
xchg
pop
push
enter
ret
sbb
xchg
out
cmp
mov
push
push
push
push
or
shl
enter
sbb
xor
outsl
mov
push
jmp
mov
aad
cld
sub
imul
ret
mov
clc
outsl
repz
stc
fidivl
adc
repnz
insl
and
std
sub
lret
repnz
mov
pusha
fwait
enter
adc
cmp
mov
jg
and
mov
ret
mov
insb
popa
lcall
jg
nop
in
lock
and
mov
push
repz
add
lcall
push
push
fstpl
lods
ret
iret
jmp
jne
pop
mov
sti
mov
imul
add
lcall
std
or
or
pop
push
mov
in
repnz
movsb
add
incb
out
mov
cmpsl
sub
xchg
or
clc
and
push
std
mov
lea
mov
sub
or
xlat
ret
mov
imul
pop
repz
sbb
idivb
lret
lods
call
popa
stc
dec
or
cwtl
into
lods
loop
ficoml
inc
xchg
or
cmc
stos
xchg
mov
push
insb
mov
lahf
subb
push
out
inc
and
shll
lods
sub
sbb
repnz
jo
dec
lods
stos
adc
xchg
xor
dec
adcl
sbb
and
outsl
test
jecxz
out
sti
add
inc
js
inc
outsb
add
adc
out
inc
sbb
test
dec
mov
push
and
inc
push
and
imul
mov
push
test
hlt
cmp
dec
push
clc
push
fldt
pop
inc
adc
cli
into
sbbl
jb
sarl
sbb
mov
add
and
or
mov
inc
add
dec
std
test
jecxz
jnp
sub
xchg
or
and
pop
sbb
dec
popa
dec
loope
ficomps
sbb
sti
add
repnz
or
cmp
repnz
int3
gs
dec
lret
mulb
pop
pop
rclb
es
xchg
mov
cmpsl
fisubrs
int
bound
add
call
por
push
gs
into
andl
repz
in
lods
jmp
mov
mov
fimull
mov
enter
dec
mov
sbb
int
mov
popf
cmp
cwtl
jl
jecxz
add
mov
addr16
cwtl
out
adc
jmp
sbb
fadds
mov
dec
mov
mov
add
shlb
jle
pop
pop
dec
dec
sub
mov
adc
mov
jmp
inc
out
les
push
lea
adc
mov
cmp
fsubr
push
pusha
stc
jge
mov
shll
dec
and
add
xchg
push
pop
ret
fsubl
lea
push
mov
sub
ret
test
or
int3
fadds
mov
scas
cmp
xchg
and
pop
push
mov
pop
xchg
cs
xchg
and
lods
arpl
cmpsb
and
mov
dec
xor
out
decb
xchg
daa
imul
cmc
jg
fsubl
popf
fadds
sub
inc
dec
adc
sub
jmp
iret
das
inc
jle
mov
mov
andl
les
inc
inc
sbb
xchg
adc
mov
test
or
push
cld
fwait
aaa
jmp
cmp
mov
and
repnz
cmp
mov
jg
adc
pop
cmp
cwtl
cmp
or
icebp
push
rcrb
adc
fs
and
jnp
xchg
shl
test
test
stos
and
xacquire
jg
dec
aam
pop
mov
into
dec
lea
push
stos
and
lret
or
movsb
shlb
enter
daa
cmp
cmp
xchg
in
cli
dec
pop
stos
mov
aas
ljmp
out
movups
cmp
movsb
mov
movsb
mov
rcrb
xchg
or
test
dec
adc
iret
dec
call
mov
nop
sbb
jecxz
push
popl
pop
inc
mov
stc
aas
dec
cmc
scas
nop
sub
test
movsb
test
enter
roll
fldt
imul
push
push
out
insl
mov
jae
or
je
push
mov
jb
fildl
arpl
nop
ds
popf
ljmp
mov
push
jle
inc
cmc
sub
jns
xchg
push
je
or
ljmp
adc
mov
add
out
out
xchg
adc
add
xor
andl
xor
ss
pop
mov
sbb
mov
sti
inc
xchg
mov
mov
sbb
test
pop
sbb
xor
inc
mov
xchg
dec
jle
fwait
jae
push
sbb
xor
push
outsb
loope
sub
rorl
and
bound
xor
add
stos
hlt
test
and
arpl
or
movsl
icebp
js
cmp
mov
loop
stc
jp
ds
cmp
hlt
jno
fisubrl
pop
mov
daa
mov
jle
dec
mov
int3
cld
arpl
cmpsl
loope
es
cld
fsubrl
repnz
mov
cld
sub
xchg
cmpsl
jp
sbb
mov
call
scas
inc
in
cmp
sti
adc
adc
rcrb
aaa
mov
data16
push
mov
jl
out
repz
popa
pop
sti
loopne
in
mov
test
shlb
sbb
loopne
jmp
cmp
jge
dec
mov
add
dec
add
pop
jp
das
call
xchg
icebp
jle
jmp
test
rcl
push
mov
or
dec
push
mull
dec
ss
push
mov
jp
dec
push
and
sbb
push
jecxz
jbe
dec
sbb
mov
xchg
enter
jmp
pop
pop
adc
bswap
lcall
mov
sbb
add
cmpsb
inc
and
xchg
cmp
shr
repnz
inc
icebp
rorb
int
test
jb
or
sub
mov
mov
xchg
sub
jns
jge
xor
dec
push
jb
xor
decl
and
int
aaa
sti
loope
or
outsl
out
add
sbb
mov
mov
sub
or
xor
sub
sbb
adc
push
xchg
push
mov
movsb
inc
clc
sbb
or
mov
mov
push
stos
adc
push
mov
adc
push
xchg
pop
and
adc
nop
cld
or
mov
inc
sbb
stos
jb
repnz
or
push
data16
dec
jl
mov
das
mov
call
arpl
test
sbb
fistl
iret
mov
mov
mov
cmp
jle
mov
cmpsl
inc
push
or
and
pop
jmp
dec
or
or
or
das
mov
or
leave
in
sbb
inc
jge
std
xchg
mov
mov
adc
inc
xchg
or
sti
into
es
dec
push
aam
jle
test
inc
pop
aad
xor
xchg
fisubrl
loope
and
call
lret
mov
mov
pop
das
push
sub
push
and
fdivrs
mov
nop
sub
pop
cmp
jecxz
ja
pop
outsb
aad
aad
int
into
stos
and
jecxz
push
imul
inc
aam
jne
cmp
push
into
cmp
test
add
jae
push
js
dec
xlat
jnp
test
adc
or
mov
rcll
notl
push
das
insb
mov
sbb
jb
add
dec
or
loop
add
push
mov
cmp
cmp
or
or
or
mov
add
jge
lret
mov
out
sub
mov
cmpsl
repz
sbb
test
repnz
jl
cld
push
inc
sarb
push
or
dec
ret
fwait
leave
lret
adc
ret
btc
stc
push
or
sub
aaa
sub
pop
inc
test
sbb
mov
ss
sub
outsb
arpl
sbbb
cwtl
ficomps
rcrb
or
adc
fs
adc
mov
int3
inc
dec
mov
ret
push
iret
push
inc
aaa
sub
mov
mov
jmp
sti
adc
ljmp
clc
movsb
repnz
xor
push
or
mov
sub
jecxz
ja
shl
iret
jne
or
and
ftst
in
sub
mov
repz
movsl
mov
lahf
xchg
xchg
lods
cmp
outsb
jecxz
imul
inc
sbb
mov
adc
mov
adc
dec
inc
arpl
xlat
mov
or
xchg
stos
js
push
loope
xchg
adc
mov
loopne
icebp
in
fs
mov
cmp
stos
xor
cmp
aaa
inc
adc
jecxz
aam
inc
out
sub
xor
movsl
mov
add
lods
stc
pop
rclb
add
mov
or
sub
sahf
sub
lock
call
out
mov
xchg
sti
test
aad
mull
mov
cmc
or
cwtl
push
jmp
xor
loop
lea
dec
cmpsb
fcompl
adc
shl
adc
mov
and
repz
cmpsl
xor
and
pop
imulb
xor
arpl
and
add
pop
outsl
in
dec
mov
adc
loope
lret
repz
jmp
repz
rolb
outsb
aad
in
and
pushf
mov
push
jle
ret
dec
cwtl
or
mov
ljmp
pop
push
pop
aam
mov
push
adc
orb
sbb
cmp
popf
push
imul
mov
out
call
in
jb
je
fsts
push
pop
push
sti
pushf
and
popf
pop
lret
loop
mov
shrl
or
es
ljmp
daa
jle
cwtl
lock
enter
fs
pop
jns
adc
or
sbb
cli
scas
xor
sbb
jecxz
pop
sub
sbb
sub
aaa
inc
push
pop
sub
repnz
push
fimull
dec
add
aaa
les
jns
dec
repnz
xchg
and
push
out
popa
sub
mov
xchg
mov
add
adc
mov
fs
xor
and
fsubrs
pusha
or
ds
xchg
out
inc
loope
test
add
sub
mov
fs
pop
test
stos
push
aam
sub
inc
and
aad
das
mov
mov
movsb
and
aaa
mov
je
xlat
lret
mov
cmp
imul
xor
adc
leave
push
add
loopne
int3
fninit
and
out
es
jecxz
insb
js
cmovg
popa
pop
mov
mov
and
mov
in
popa
hlt
jmp
adcb
pop
ja
cld
jl
adc
sub
adc
mov
and
mov
lahf
xor
pop
repnz
xchg
adc
mov
pop
xchg
clc
xchg
fistpl
fs
xchg
adc
xchg
sub
sbb
lods
adc
lea
dec
jg
or
aas
jae
mov
push
ror
jbe
inc
or
fstps
movsl
movsb
and
or
loop
mov
mov
adc
jo
aad
enter
call
aad
fsubrp
jns
flds
je
lods
sub
loop
jecxz
decl
fucom
in
outsb
aam
ljmp
adc
mov
fldl
sbb
mov
outsl
push
mov
cltd
cmp
hlt
sub
icebp
popl
ds
sbb
jb
ljmp
mov
mov
dec
jge
ret
repz
or
mov
jae
mov
insl
xorl
cli
shlb
cmp
and
popf
cmp
xchg
xchg
mov
dec
daa
dec
jp
jmp
and
loop
push
mov
mov
pop
repz
sub
push
sub
pop
add
jg
fsubs
xchg
jns
aad
mov
or
push
bswap
push
adc
push
pop
push
dec
and
pop
inc
test
inc
inc
xchg
adc
pop
ja
ds
mov
outsb
test
or
jge
or
pushf
repnz
test
adc
push
and
mov
mov
imull
push
into
dec
frstor
clc
cwtl
ret
mov
lret
jbe
jmp
test
mov
pusha
shll
jmp
ret
cmp
subb
popf
push
lock
mov
loopne
mov
popa
in
xor
xchg
rorl
sahf
rcll
aad
jmp
aas
test
pushf
clc
popa
fsubrl
mov
jl
sub
movsl
jecxz
stc
daa
mov
mov
enter
aam
fcomip
cmc
mov
xchg
js
sbb
mov
adc
dec
push
and
mov
inc
aam
mov
jp
xchg
cld
add
in
cmpsb
addl
ljmp
scas
scas
jp
push
dec
ja
inc
repnz
das
xchg
cli
les
andl
cmpsl
pop
imul
mov
xor
sti
rorb
and
lea
inc
adc
clc
dec
push
ljmp
and
cmp
jmp
sbb
and
mov
fsts
pop
gs
movsb
mov
push
aad
push
ljmp
mov
add
push
clc
pop
lds
arpl
mov
push
imul
stos
and
fcmovbe
dec
popf
fisttps
pop
rcr
adc
loope
cld
divb
int
popa
or
decb
ja
or
push
xchg
pop
xchg
sbb
inc
test
sub
pop
dec
and
ljmp
cmp
outsb
call
fmulp
das
pop
insb
cld
xchg
pop
sub
loopne
repnz
bound
adc
fs
sub
dec
add
jmp
cmp
icebp
or
xchg
dec
adcl
cmpb
and
xchg
push
mov
aam
push
cmpsl
popl
and
dec
jge
dec
sub
es
nop
push
repnz
mov
pop
sub
adc
fsubrs
idivb
xlat
push
adc
jecxz
out
push
icebp
mov
es
add
movsb
imul
mov
jns
and
bound
xchg
xor
mov
icebp
mov
push
shll
loope
sbb
ja
add
xchg
push
mov
xchg
sbb
lret
inc
leave
orb
fisubrl
mov
push
fdivl
inc
outsb
dec
cltd
xchg
xchg
and
pop
add
adc
test
out
and
pop
sbb
jg
mov
xchg
xchg
mov
sbb
call
adc
xchg
dec
arpl
adc
add
enter
sbb
mov
xor
leave
mov
stos
or
sub
scas
addb
mov
xchg
mov
jno
ja
in
xchg
mov
cld
repnz
cmp
mov
sbb
mov
sub
pop
xlat
ss
sub
jne
shrb
xchg
jns
fnsave
pop
arpl
lret
lcall
cwtl
dec
xchg
shl
inc
jecxz
or
mov
xchg
cld
adc
inc
push
mov
fisubl
adc
xor
insb
lret
push
add
mov
in
enter
insl
pop
data16
push
sti
dec
into
pushf
aas
imul
mov
js
lret
pop
dec
clc
cmc
adc
pmaxsw
cmp
popl
inc
stos
lret
loop
mov
movsb
test
fsubrl
sub
lcall
mov
or
out
jp
push
idiv
clc
add
mov
sti
fldcw
aad
inc
dec
mov
add
mov
lds
adc
dec
pop
cltd
mov
add
stos
clc
push
enter
mov
cmpsl
push
and
jmp
bound
inc
icebp
cmpsl
sub
ds
outsb
fwait
mov
pop
cltd
sub
imul
addr16
filds
clc
push
adc
mov
mov
clc
adc
mov
addl
fsubrs
sbb
add
lret
dec
xchg
mov
movsb
adc
movsb
and
test
xchg
loopne,pn
push
pop
lea
push
sbb
push
imul
push
or
push
pop
xlat
repnz
cli
decb
cmpsb
pop
pop
push
or
test
adc
mov
mul
loop
xchg
fists
cmpsl
push
movsb
dec
mov
jmp
inc
mov
adc
lahf
cwtl
adc
repz
fs
inc
sarb
xchg
push
and
insb
inc
push
pop
lcall
xchg
std
lock
les
mov
sbb
sub
xchg
pop
aam
jb
add
aas
or
jecxz
decb
popf
lret
add
repz
inc
adc
or
lcall
repnz
outsb
mov
lds
orb
ss
sub
xor
insb
inc
rclb
or
repnz
test
addr16
lret
xorl
pop
rorl
in
rorb
push
dec
adc
sbb
shll
negl
pop
push
mov
or
sub
rcrl
adc
and
dec
cli
repnz
out
add
add
inc
xchg
cmp
lret
and
imul
jle
add
pop
incb
lock
and
adc
mov
mov
push
enter
cmpsb
cwtl
xor
cltd
andl
outsb
or
fsubrl
test
int3
pop
add
mov
mov
ds
imul
and
xchg
jmp
jne
stos
xor
xlat
repnz
lcall
cmc
adc
repz
jb
daa
adcb
aam
test
jmp
clc
and
in
outsb
iret
xchg
subb
cmpsb
insb
jmp
repz
or
add
mov
inc
in
loope
loope
mov
repz
aam
dec
sbb
sub
or
stos
lret
fdivrs
lods
not
cld
cmp
mov
in
popf
subl
sbb
rorl
test
adc
jnp
inc
adc
sbb
cmp
sub
cs
aad
mov
cmpsb
inc
push
dec
adc
loope
cmp
dec
xchg
repz
xorb
xchg
mov
mov
mov
daa
fsubrs
fistps
lock
lret
pop
push
dec
inc
sub
jl
ds
test
cmp
les
dec
ss
sbb
repnz
mov
cs
clc
and
leave
dec
call
mov
insb
sbb
loop
in
test
adc
int3
imul
jmp
adc
mov
into
sub
ljmp
dec
adc
xor
push
pop
movsb
sti
scas
aad
sub
or
sbb
adc
leave
cltd
mov
dec
adc
lahf
inc
loop
and
mov
stc
aam
and
pop
sahf
cmp
cmc
xor
fisubrl
xchg
decl
aas
jne
jmp
and
aam
in
test
push
pusha
lods
test
xor
nop
mov
fmull
adc
stos
lods
cmp
insl
mov
cmc
push
cltd
pop
sub
and
ja
std
sbb
cs
aam
xchg
dec
cmp
popf
and
fs
push
aas
das
and
pop
sub
jbe
bound
add
push
mov
les
add
lcall
in
imul
addr16
outsl
mov
xor
dec
int3
jle
xchg
fwait
sbb
test
and
imul
jg
sbb
decb
iret
adc
popf
mov
xor
xchg
inc
mov
call
jge
out
xchg
adc
test
scas
fwait
adc
pop
adc
jl
xchg
aaa
push
test
dec
dec
add
adc
adc
cmp
mov
lret
add
std
push
incl
pusha
fstpl
call
aas
pop
sbb
xchg
pop
rcl
or
iret
out
sahf
aas
sub
add
sub
loope
mov
das
fdivr
pop
sub
cwtl
mov
jo
adc
icebp
icebp
add
fsubs
jg
push
add
daa
and
int
push
test
jbe
out
je
or
dec
sub
mov
mov
insl
imul
mov
lea
aam
hlt
xchg
sbb
std
pop
mov
lret
jnp
les
rcrb
mov
add
pop
push
xchg
jle
mov
pop
mov
or
sarl
cmp
ret
fstpt
loope
mov
into
mov
xchg
and
mov
dec
jge
jle
xor
repnz
jb
mov
or
jmp
loopne
fildl
or
mov
add
jo
ljmp
xchg
jl
test
daa
mov
mov
daa
xor
mov
pop
sub
std
iret
cmpsb
and
xchg
xchg
adc
std
and
push
push
fs
cmp
push
push
add
ljmp
mov
bound
stos
scas
rolb
push
jo
or
jp
dec
pop
iret
arpl
sbb
insl
sbb
sbb
imul
xor
outsb
imul
sbb
push
stos
cmp
push
into
pop
stos
lret
inc
jbe
sbb
or
jns
aaa
sub
pop
fistpl
sub
ret
adc
clc
out
add
mov
cs
fiadds
adc
int
aaa
or
mov
jecxz
aam
in
rorl
or
movsb
mov
icebp
stos
dec
repnz
idivb
loope
push
hlt
adc
loop
push
orb
in
sti
repnz
jl
xchg
arpl
fcmove
fmul
scas
jle
pop
loopne
push
xchg
mov
test
push
or
outsb
sbb
sbb
aaa
loope
mov
ret
pop
out
ljmp
lret
cmp
movsb
xor
sbbl
pop
cmpsl
repnz
xchg
rcll
jno
pop
and
leave
test
push
adcl
adc
bsf
dec
repnz
test
das
ja
sti
cmp
jbe
test
push
cmp
enter
adc
cmpl
adc
sahf
jne
cmp
add
scas
push
cltd
sub
js
popf
or
in
loop
divb
sti
push
test
adc
push
sbb
leave
sub
das
sub
jp
repnz
subl
aaa
andb
shr
lret
lods
mov
repz
mov
cmp
adc
dec
mov
adc
movsl
lods
test
jne
js
or
or
inc
and
adc
aam
jge,pn
popa
push
arpl
addb
stos
jg
jnp
xchg
sub
pop
addr16
inc
sbb
dec
cmp
fildll
outsl
aaa
ds
xchg
std
insb
arpl
jg
lods
std
andb
push
xor
cmp
adc
xor
rcr
pop
test
enter
insb
lret
sub
adc
cmp
or
sbb
add
jb
sbb
or
mov
or
int
lods
sub
pusha
dec
push
sbb
addb
inc
and
or
dec
push
fs
fs
and
ret
xlat
repz
push
mov
jmp
test
mov
lea
inc
push
sahf
mov
in
mov
push
fwait
jl
push
stc
in
cmp
sbb
in
jle
pop
adc
xlat
fdivl
adc
jle
movsb
mov
sub
push
push
insl
test
xchg
out
mov
or
stc
sub
out
xor
and
hlt
rclb
ljmp
cmpsl
adc
pop
jl
sub
inc
imul
push
or
jmp
sub
leave
roll
into
out
sub
xchg
outsl
add
lcall
scas
sbb
push
lret
mov
notl
pop
jecxz
adc
push
and
add
ret
xchg
repz
jae
inc
fwait
jmp
stos
mov
dec
lret
daa
scas
mov
aas
jo
dec
icebp
mov
mov
fldenv
inc
rcr
daa
adc
inc
stc
pop
jb
in
sarl
lds
jne
sbb
lret
aaa
repz
sbb
sbb
cwtl
cmp
popf
mov
push
cs
cmpsl
add
rcll
outsb
inc
pop
mov
push
mov
out
fwait
movsb
push
fs
adc
mov
pop
ret
xorb
ja
ds
lret
mov
loope
ret
lret
aad
test
loope
inc
pop
jmp
mov
mov
sub
popa
jge
faddl
rorl
mov
adc
ljmp
xchg
inc
popf
xchg
in
pop
sub
jns
cmp
sbb
cmpsl
aam
sbb
outsb
pop
ss
pop
push
pushf
cli
mov
cmp
mov
test
sbb
jbe
jg
test
and
mov
add
insb
and
sbb
mov
ljmp
jp
or
inc
lcall
mov
mov
cmp
loope
sbb
or
or
jle
push
out
ret
mov
lea
sti
jg
addr16
add
and
mov
mov
mov
xchg
cld
ljmp
sbb
mov
inc
jne
mov
inc
arpl
sub
outsb
js
call
das
sub
dec
mov
popa
mov
lock
mov
or
push
mov
mov
adc
sbbl
fsubrs
jnp
and
andl
dec
adc
cli
jno
lcall
mov
xchg
jl
ljmp
sbb
mov
data16
in
cltd
or
xchg
and
cmpsb
repnz
pop
hlt
xor
inc
decb
cli
xchg
int3
arpl
js
xor
push
or
sub
outsl
imull
and
jae
cmpsb
mov
das
fcmove
cwtl
and
out
jbe
push
fsub
and
sub
imul
inc
or
xchg
xor
and
cld
jg
mov
jne
inc
rolb
mov
mov
imul
mov
call
push
in
leave
mov
rorb
sub
bnd
mov
pop
sbb
pop
mov
pop
inc
lods
jmp
imul
adc
outsb
sbb
cmp
insb
pop
mov
sbb
sbb
mov
cs
pop
or
xchg
xor
push
loope,pt
jle
sub
hlt
jmp
arpl
je
shll
push
repnz
cltd
repnz
xor
jecxz
ds
adc
push
cld
adc
cltd
jl
stos
stos
hlt
jne
cmc
ljmp
dec
push
dec
out
sbb
sbb
in
sbb
lcall
adc
loope
into
xor
mov
dec
lret
sbb
xor
adc
lds
dec
mov
arpl
mov
cmp
arpl
lods
adc
repz
inc
aad
pop
stc
and
or
faddl
sbb
repnz
mov
jmp
inc
test
fwait
scas
or
das
shlb
sub
mov
out
dec
popa
inc
std
and
fadds
sbb
lock
int
mov
shlb
mov
jnp
jge
inc
adc
stos
ss
scas
and
and
es
ljmp
push
inc
addr16
inc
das
sub
lret
mov
cmp
pop
adc
jo
or
filds
jno
adc
and
shrl
aad
cmp
fldenv
add
adc
sahf
rclb
xchg
mov
js
outsl
dec
mov
sbb
daa
or
dec
call
lods
pop
ret
mov
mov
cmp
imul
ja
fwait
and
call
shrl
xchg
cmpb
and
inc
cli
shrl
sbb
jle
sub
mov
sub
dec
dec
insb
repz
int
int3
lret
call
shr
xor
sti
sub
push
mov
mov
mov
scas
cmpl
push
imul
adc
icebp
ja
int3
push
cmc
push
pop
adc
and
mov
in
insl
in
aaa
loope
pop
aas
clc
add
hlt
adc
mov
adc
ret
xlat
scas
loope
test
shl
add
sbb
adc
push
mov
repnz
test
xchg
repnz
jnp
cld
insb
movl
inc
cmp
mov
sarb
pop
jl
hlt
ljmp
insl
jnp
xor
pop
shll
aaa
jb
jl
xchg
inc
loope
repnz
aad
dec
add
mov
les
dec
and
xor
mov
lret
sub
rorl
or
icebp
test
mov
js
out
ljmp
fstps
in
jmp
sub
aam
sub
repnz
add
adc
inc
dec
hlt
jnp
push
cwtl
inc
cmpsb
jge
out
lret
push
mov
xchg
and
inc
mov
cwtl
stc
add
fs
clc
cwtl
aam
jo
fmul
das
repnz
inc
and
and
movsb
sub
fwait
imul
out
sbb
sbb
aam
sti
repnz
inc
xlat
outsl
xlat
mov
sub
or
xor
pop
mov
jae
dec
cmpsl
repnz
ljmp
loope
fst
mov
mov
jg
imul
outsl
test
aam
test
adc
fisttpl
pop
jmp
repz
out
pushf
das
fwait
notb
adc
clc
or
xorl
ljmp
es
xchg
lcall
sbb
inc
test
lods
ljmp
test
mov
mov
data16
cmp
test
cmp
test
pop
mov
repnz
xor
adc
pop
pop
add
lods
lret
dec
sub
pop
or
jecxz
push
lea
xchg
repz
adc
rorb
stos
pop
std
ljmp
or
out
and
add
les
and
sbb
movsl
xchg
lods
lcall
jl
ljmp
cwtl
xchg
sbb
push
push
add
sub
sbb
add
icebp
lret
into
push
adc
mov
stos
mov
fdivrs
or
and
lret
repz
fs
jp
mov
aam
mov
repnz
enter
jns
insb
call
jmp
cmp
dec
mov
imul
sub
jp
and
dec
add
cmp
push
and
or
ljmp
fistpl
mov
rorl
cwtl
mov
mov
push
repz
add
popa
adc
aad
jmp
leave
xchg
cmp
inc
xchg
test
dec
test
fstpl
fsubl
leave
outsl
mov
cmp
pop
pop
cmc
out
mov
mov
int3
inc
xor
push
loop
repz
jl
aas
dec
and
mov
mov
scas
or
int
sub
arpl
incb
pop
xchg
or
xor
aas
cli
cmp
cmp
in
pop
adc
pop
jecxz
or
inc
rclb
jl
sub
cli
out
imul
mov
lret
ljmp
sbb
mov
pusha
loope
fnsave
aas
add
jl
lds
orl
rcrb
inc
push
inc
fs
call
movsb
dec
dec
fimuls
ljmp
test
shlb
mov
mov
add
ds
imul
or
or
les
or
mov
sub
xchg
xor
mov
sub
out
ljmp
and
aad
nop
add
xor
mov
mov
xchg
subb
xchg
cltd
and
pusha
ret
stos
in
insl
outsw
pop
push
adc
xor
jb
mov
mov
sub
out
dec
cmp
sub
frstor
push
and
movsb
out
mov
sub
add
sbb
sbb
out
adc
push
lcall
aas
in
repnz
sahf
jne
add
add
add
lahf
stos
bound
aad
imul
mov
jmp
push
mov
jle
jns
rcrl
inc
inc
sub
push
push
lret
add
stos
lret
adc
push
or
or
adc
jno
mov
lret
jl
add
shlb
sbbl
gs
mov
cmp
mov
inc
xchg
jbe
mov
push
adc
add
dec
call
or
fucomp
data16
dec
mov
outsb
mov
adc
mov
pop
stos
outsl
cltd
mov
mov
adc
mov
mov
ds
mov
js
in
sub
pop
idiv
xor
ds
addr16
das
xchg
add
mov
lret
test
paddusb
jmp
loopne
repz
and
popf
mov
add
in
sub
test
mov
nop
dec
sbb
mov
xchg
xchg
mov
repnz
push
xor
mov
jmp
mov
push
scas
imul
sahf
shrl
inc
aaa
adc
lcall
sti
fsubl
aad
xchg
mov
data16
iret
mov
sub
int
mov
repnz
aad
iret
mov
adc
mov
sub
ret
jns
and
imul
outsl
jl
popa
lock
push
addr16
cmp
and
and
clc
xor
xor
inc
pop
test
mul
cmp
push
ljmp
dec
fdivrl
cld
fstl
arpl
xchg
mov
nop
call
cmp
lcall
repnz
outsb
ljmp
bnd
imul
lret
adc
sbb
dec
ljmp
pop
jmp
repz
sub
xchg
pop
cmc
or
fmuls
popa
repnz
movsl
mov
xchg
aam
xor
adc
sub
pop
lret
push
xchg
add
ds
rcrb
adc
jmp
and
jge
jae
out
insl
or
and
mov
inc
sarl
jbe
jno
xchg
es
mov
in
jmp
add
sbb
sbb
jge
iret
sub
aam
imul
push
cmpl
mov
fsubp
movsb
loope
cld
xchg
dec
imul
rcrb
inc
test
popf
pop
cli
add
push
stos
gs
das
js
jns
jecxz
ret
ljmp
loopne
inc
jecxz
movsb
cmc
push
loope
adc
mulb
les
cmpsl
ljmp
dec
and
push
iret
jl
fdivrl
jbe
mov
adc
adc
mov
mov
out
sbb
insl
das
xchg
in
mov
es
inc
test
add
ljmp
jp
dec
push
mov
jle
mov
cmp
mov
inc
or
test
loopne
xchg
gs
jl
sbb
jnp
cmp
decl
cmp
cmp
inc
jmp
loopne
test
movsb
xlat
fsubrp
sbb
or
into
stos
sub
pop
cwtl
cmpsl
sub
repnz
adc
dec
jle
test
adc
pop
nop
into
mov
xor
lods
stos
scas
mov
jg
push
sub
in
ss
ja
pop
xor
in
xchg
je
push
rcl
mov
fcomp
loope
fs
mov
sub
jmp
scas
leave
inc
cmp
sbb
or
add
and
or
movsb
mov
jmp
mov
xor
dec
lds
test
pushf
int
leave
dec
shlb
popf
divl
mov
dec
insl
mov
adc
sbb
or
mov
add
inc
cmp
mov
addr16
xor
dec
movsb
ficoml
hlt
loopne
jle
push
push
leave
sub
add
and
mov
nop
adc
fadd
lea
pop
movl
or
sbb
push
sti
loopne
sub
movsb
mov
mov
sarb
lret
sbb
hlt
loop
xchg
testl
adc
cs
sbb
dec
xchg
repnz
push
outsb
sub
sub
icebp
push
cmc
and
cwtl
mov
pusha
inc
lcall
inc
shrb
xchg
lea
jbe
mov
inc
aas
scas
push
xor
xlat
movsb
dec
inc
mov
and
subl
iret
lods
and
push
aas
dec
sub
cmpsl
mov
incl
push
pop
xor
lcall
shrb
cmp
test
sub
mov
jae
movsb
repnz
pushf
dec
xchg
mov
jecxz
dec
and
call
mov
dec
into
test
jo
sbb
mov
adc
mov
cli
stos
add
fistps
in
pop
xchg
sub
mov
movsb
fsubr
out
adc
add
stos
scas
xchg
loope
inc
jb
fmuls
movsb
push
inc
and
sub
and
sbb
test
mov
sub
add
out
xchg
addr16
fsubrl
xchg
push
enter
sbb
adc
mov
dec
lds
das
sarb
mov
sbb
es
gs
xchg
mov
pop
in
adc
and
xor
xlat
adc
test
out
imul
jae
shlb
jg
enter
les
jecxz
dec
mov
movsl
mov
add
or
adc
push
popa
and
jns
daa
lds
xchg
aam
fnsetpm(287
clc
push
jne
xchg
stos
test
mov
inc
pop
pop
stos
mov
out
lea
jecxz
jge
shll
stc
and
arpl
xchg
addr16
or
les
out
xchg
in
sbb
push
aas
inc
or
stos
cmp
cmpsl
mulb
inc
xor
adc
push
daa
imul
call
test
aaa
adc
sbb
mov
mov
dec
in
adc
das
std
movsl
bnd
jns
fiaddl
xchg
dec
cmpsl
and
arpl
push
rol
sub
xor
inc
and
adc
mov
or
insb
ret
rcrb
sbb
js
xchg
mov
ja
xchg
es
jbe
and
aas
push
jl
xlat
js
out
jnp
sti
sub
test
pop
mov
test
sbb
dec
out
repnz
out
lds
aam
bound
sub
mov
test
jo
andb
repnz
daa
mov
push
dec
sbb
mov
jns
adc
mov
lahf
repz
addr16
js
sub
leave
adc
imul
addr16
in
sub
mov
cltd
ljmp
iret
or
stos
jle
xchg
mov
jae
loope
popf
js
lods
push
notb
pop
mov
and
shrb
in
sbb
sub
out
adc
jge
mov
mov
jg
scas
adc
jnp
es
shrl
movsl
scas
and
xorb
nop
fnstenv
mov
ljmp
mov
cmpsl
push
jns
ja
xchg
repnz
xchg
stos
pop
icebp
dec
outsb
popf
cltd
adc
sbb
xchg
cmpl
loop
jb
sbb
pop
adc
insb
int
cld
imul
push
inc
mov
mov
pop
sti
imul
sarb
adc
bnd
and
cltd
fidivl
sub
jnp
cmp
push
jns
or
repnz
adc
push
xchg
push
mov
or
rcrl
sbb
divb
adc
fbld
add
and
js
test
jne
bnd
mov
cmp
mov
sbb
shll
mov
leave
cmp
repnz
xchg
mov
mov
pop
pop
add
push
push
mov
stos
cmpsl
loop
xchg
mov
mov
insb
std
aam
mov
lea
lock
sub
ret
sbb
cmp
cmp
jg
or
dec
and
add
push
push
xchg
ret
loop
mov
dec
es
pop
fldt
sti
inc
cli
push
rcrl
cwtl
addr16
inc
jge
nop
dec
movsb
stos
cmc
push
add
into
fldl
or
and
lret
adc
test
mov
int
out
xlat
stos
mov
fimuls
cli
mov
add
jae
test
or
popa
dec
or
addr16
mov
adc
or
aam
push
sub
sub
js
outsb
ja
dec
lock
mov
xlat
sub
mov
outsl
push
fdivs
xor
push
jl
pop
dec
and
add
adc
test
push
iret
hlt
imul
adc
hlt
mov
enter
and
outsl
pushf
mov
sbb
imul
int3
jno
inc
or
xorl
rcrl
outsl
lret
mov
in
xchg
int
add
cs
jmp
scas
xchg
cltd
sti
mov
std
out
ds
scas
jo
or
popa
xor
loop
mov
xchg
sbb
sub
sub
push
sub
fwait
bnd
push
fmuls
cmp
test
loopne
fwait
sti
aad
lds
das
imul
xchg
cmp
outsb
push
repnz
fs
cmp
insl
sbb
dec
in
push
cmp
mov
incl
sbb
sub
pop
loope
int3
pop
xchg
sarl
sbb
dec
sub
sahf
in
insb
mov
and
test
sar
cmpl
dec
jmp
cmc
and
push
mov
icebp
or
and
mov
jge
rolb
aaa
sbb
les
lret
mov
dec
push
xlat
xchg
push
or
xor
sbb
cwtl
jmp
test
imul
dec
roll
mov
test
ret
movsb
add
pop
cltd
pop
je
sbb
cli
loope
jecxz
int3
xchg
rcrl
mov
repz
mov
push
cmc
pop
hlt
lods
adc
xchg
ficompl
mov
xor
cmpsb
mov
imul
divl
push
xchg
stos
ljmp
in
jnp
arpl
push
in
add
mov
sub
pop
or
sbb
out
icebp
cmpl
int
sub
push
jns
xchg
imul
and
cmpsl
ret
mov
sbb
adc
js
mov
inc
push
aad
ljmp
inc
add
enter
aaa
leave
mov
and
cltd
out
inc
jecxz
push
data16
push
mov
cmp
push
negb
adcb
xchg
push
ret
dec
mov
int
and
xchg
das
sbb
inc
xchg
int3
sti
sub
xchg
sub
push
in
mov
clc
dec
adc
popa
adc
push
jecxz
leave
es
repnz
cltd
int3
push
jmp
xor
addr16
xor
lea
and
sub
adc
popf
ds
cmp
jl
cmpsl
repnz
jl
sbb
dec
push
mov
aam
inc
cmpsl
outsb
push
frstor
sbb
add
push
pop
fldt
push
or
jg
sbb
add
push
jge
addr16
fildll
inc
sub
cmp
test
gs
adc
out
ds
adc
mov
mov
mull
stos
adc
jb
in
js
in
and
jmp
push
iret
mov
mov
mov
jecxz
sbbb
fistps
push
nop
inc
dec
push
add
les
and
push
sahf
std
ficoms
or
lods
inc
inc
jae
fidivl
sbb
mov
std
inc
mov
fs
ljmp
fimull
incl
ljmpw
in
mov
shr
addr16
loope
fsubr
push
addr16
scas
addr16
push
repz
in
dec
xchg
iret
pusha
aam
popa
inc
decb
or
mov
shrb
clc
inc
push
xchg
xchg
test
mov
fmuls
ljmp
dec
fbld
adc
push
push
adc
xor
push
or
int3
jecxz
or
mov
dec
je
add
push
imul
pop
cmpsl
push
test
rorl
xor
jg
stos
out
mov
decl
sbb
jns
xor
popa
sub
movsb
add
pop
cmp
repnz
les
dec
mov
jg
mov
bound
push
pop
daa
xchg
insb
xchg
sbb
ret
mov
sbb
cmpsl
mov
dec
sub
push
sub
xor
out
cmpxchg8b
sub
lret
mov
mov
and
repnz
sbb
movsb
push
sbb
xchg
inc
outsb
fstps
cmp
inc
mov
xor
repnz
add
xor
sahf
test
test
cmpsl
and
lret
in
sub
push
sub
fcoms
mov
mov
js
lret
dec
mov
test
and
frstor
aad
lea
sbb
or
int
sbb
lock
pushf
cmpsl
pop
dec
inc
repz
xor
and
bound
jge
adc
fs
loopne
lret
test
repz
or
xchg
xor
push
fwait
test
arpl
arpl
daa
fs
sbb
mov
shlb
movsb
pop
lret
lret
cli
mov
and
mov
sub
jge
arpl
jg
or
jle
pop
stc
jg
and
cltd
test
mov
insb
cmp
adc
push
dec
add
mov
xchg
fists
adc
cmpsl
pop
movsb
movsl
sub
pop
stos
ljmp
cwtl
and
mov
rorb
xlat
mov
jle
inc
mov
stc
in
shrl
iret
mov
jge
xchg
movsb
cmp
lea
mov
cli
fadds
mov
push
sbb
imul
mov
or
or
push
sti
inc
adc
fisttpl
and
lds
fisttpl
fs
stos
mov
mov
xchg
or
or
rol
lea
xor
pushf
jle
mov
cwtl
call
dec
test
adc
insb
mov
movsl
pop
xchg
mov
sub
mov
adc
pop
cmp
pop
cmpb
std
add
punpcklwd
stos
outsl
jp,pt
fcmovnb
inc
push
sub
fwait
std
and
sbb
or
adc
push
dec
jno
mov
lret
lret
icebp
pop
int3
fmuls
mov
push
mov
xchg
cmp
fidivl
movsl
mov
add
sbb
aaa
and
imul
mov
push
jbe
jecxz
out
or
inc
mov
push
add
mov
jg
in
cld
leave
and
mov
cmp
in
test
sub
sbb
test
adc
clc
or
fimuls
daa
jecxz
add
inc
test
inc
sarl
popa
adc
sub
stos
jno
subl
test
inc
xor
rcl
int
sub
xchg
pop
mov
enter
push
cltd
mov
adc
xor
mov
adc
mov
xchg
cmpsb
add
inc
fcmovne
and
gs
jle
pop
mov
xor
adc
rdpmc
je
fs
pop
pop
adc
fidivs
lds
push
jecxz
cld
jno
inc
dec
daa
dec
mov
pop
sti
jne
insb
jp
aam
aas
mov
loopne
and
leave
and
xchg
adc
out
push
ljmp
adc
jmp
or
sub
pop
xchg
call
sbb
in
shl
push
in
xlat
dec
and
std
sub
or
ret
xchg
adc
mov
sbb
popa
adc
lret
cmpsb
and
xchg
push
xchg
sbb
mov
iret
ret
xor
shlb
mov
sbb
out
and
sahf
in
dec
loope
add
push
cld
xchg
mov
pop
aas
adc
bound
mov
les
sub
inc
sti
loope
je
ljmp
add
sbb
call
ja
sbb
insl
cld
in
leave
sub
sub
testl
roll
inc
xor
ret
out
movb
or
scas
push
fstpl
pop
sub
push
mov
repnz
and
in
insb
xchg
sbb
imul
and
xchg
pop
xchg
mov
and
scas
aad
shlb
pop
arpl
mov
sbb
dec
xchg
pop
insb
fcoml
xchg
repnz
ficompl
jns
es
test
sbb
mov
repnz
mov
movsb
cli
add
xchg
push
mov
ja
pop
sub
jo
test
in
xchg
cltd
jp
fisttpl
mov
bnd
push
test
std
in
adc
lds
ljmp
fwait
insl
xchg
pop
mov
pop
ljmp
cli
push
mov
jle
mov
or
testb
in
adc
std
xchg
sbb
lock
shr
sbb
negl
popa
cmpsl
push
rolb
mov
aas
rol
sub
in
adc
xchg
rorb
call
insl
or
jl
pop
fistpll
dec
mov
scas
cltd
dec
jl
movsb
jge
aad
mov
loop
push
fdivrs
pop
adc
push
int3
mov
pop
xor
outsl
xor
xor
call
inc
push
sub
popf
jnp
and
lds
adcb
xor
push
fstpt
enter
push
and
cmp
push
mov
into
lret
push
xlat
in
jbe
ds
in
sub
jns
stos
pop
sbb
enter
pop
mov
mov
jno
lock
inc
lcall
test
loope
lret
pop
add
addr16
mov
stos
mov
cs
sub
lods
test
sarb
ja
adc
popf
ss
test
inc
js
mov
sti
sub
push
cmp
cltd
or
sbb
sbb
pop
aad
inc
dec
mov
inc
cld
add
push
jmp
jl
cmpl
fstps
mov
mov
bnd
movsl
jecxz
stos
sub
xorb
and
cmpsb
call
or
mov
pop
and
mov
popf
gs
and
push
lds
fmull
push
mov
dec
test
jecxz
test
cmp
or
bound
movsb
or
sub
or
sbb
cmp
add
sub
lcall
out
sbb
std
adc
lret
push
xchg
addr16
out
jmp
pusha
lret
mov
jecxz
jp
adc
shl
shrl
lods
sti
mov
push
jle
int
lret
in
sbb
mov
sbb
push
aas
sub
fs
inc
sarb
js
add
movl
adc
inc
dec
mov
mov
aas
jecxz
jp
sbb
push
repz
fmull
loopne
shll
jnp
insb
stc
pop
add
and
push
in
dec
pop
lock
mov
pop
lds
mov
sub
xchg
je
repnz
cmc
fidivrs
ljmp
adc
test
idivb
pop
out
cmpsb
test
sub
mov
sbb
rcrl
inc
out
decl
test
dec
xchg
movsb
xor
imul
inc
mov
repnz
mov
xchg
fisubrs
out
sbb
mov
loope
mov
bound
sub
lea
cltd
in
ret
cli
pop
push
or
and
pop
adc
sub
xchg
imul
inc
decb
sbb
inc
or
mov
popf
sub
jmp
in
stc
cmc
daa
stos
push
ds
pusha
stos
push
shr
jae
fs
push
mov
xchg
and
mov
push
lret
cmpb
mov
pop
ss
inc
push
mov
xchg
out
xchg
or
fstps
inc
xchg
push
aaa
mov
fildl
mov
mov
jl
lahf
sbbb
imul
push
jl
insb
xchg
inc
push
cli
push
mov
mov
xchg
xchg
scas
xorb
xchg
sbbb
insb
xchg
cmp
add
rcl
jle
aas
and
test
mov
mov
xor
adcl
daa
mov
xchg
inc
shlb
out
mov
loope
cwtl
frstor
lret
arpl
add
or
hlt
push
cmp
cmc
mov
xchg
inc
mov
inc
addr16
pop
leave
mov
and
cwtl
ss
add
or
or
cmp
pop
cld
jbe
dec
repnz
inc
add
jnp
clc
dec
popa
les
out
in
fisttpl
cltd
sbb
subb
push
xchg
sahf
xchg
test
xchg
or
nop
jecxz
imul
je
jp
je
popa
cmc
cmp
sbb
xchg
mov
jg
mov
inc
jle
faddl
jg
or
mov
jecxz
mov
mov
sbb
adcl
xor
dec
dec
sub
cltd
mov
inc
push
pushf
daa
sub
lock
sub
lea
mov
lcall
pop
push
cmpsl
repnz
jne
aaa
cmp
mov
mov
rcrb
push
cld
sbb
ljmp
adc
mov
shlb
xchg
cmpsl
adc
std
add
test
or
pop
test
adc
jl
fiaddl
mov
call
xchg
decl
cmp
ss
int3
and
mov
es
pop
sahf
rorb
add
enter
iret
mov
gs
shl
fs
xchg
out
jbe
arpl
push
popa
loope
sbb
pop
pop
xchg
and
jmp
or
ror
ljmp
movntps
or
pushf
enter
cmp
and
jg
test
rcrl
faddl
mov
mov
clc
les
jle
loope
pop
cmc
arpl
dec
out
push
adc
xchg
or
push
push
rol
test
jo
movsb
sbb
mov
mov
dec
jno
push
cmp
fdivr
movsl
loop
jecxz
clc
das
inc
dec
pop
and
mov
sub
movsb
jle
inc
sbb
sub
adc
stc
or
xchg
or
jl
iret
pop
xlat
aam
in
das
sbb
xor
aam
xor
jb
sub
mov
icebp
data16
pop
mulb
sub
pop
insb
dec
jecxz
jmp
mov
and
push
jbe
jnp
add
test
xchg
or
repnz
subl
fimuls
subl
imul
dec
push
pop
leave
or
xchg
out
rclb
addl
jbe
push
jge
sbb
fcompl
gs
inc
fistl
sbb
sub
sub
pop
rcr
mov
mov
aam
xlat
jecxz
sub
mov
adc
sbb
and
jmp
adc
add
add
movsl
lods
push
jl
call
test
aam
andl
xchg
loope
cmpsl
in
adc
movsb
in
in
cmp
add
test
out
mov
rcrb
sub
int3
add
aam
push
add
outsl
add
clc
sub
jnp
inc
xlat
repz
jno
or
push
jle
ret
pop
stos
ljmp
push
mov
in
sbb
jo
in
sub
adc
mov
int
mov
in
jle
loope
stos
scas
pop
movsb
sbb
scas
pop
enter
mov
jle
lcall
lock
test
out
fsub
fs
inc
test
cmpsb
xor
das
adc
sti
and
das
inc
in
mov
out
cmp
test
pop
mov
pop
xchg
cli
gs
inc
cltd
cmpsl
add
sub
aam
add
or
inc
mov
adc
test
mov
aas
fmuls
scas
int3
adc
stos
xchg
pop
sub
lret
iret
mov
mov
aam
jne
xor
sbb
scas
sbb
jp
test
mov
loope
mov
cmp
push
push
and
mov
loop
repz
loope
jmp
push
push
call
inc
adc
xchg
sub
or
adc
mov
bound
add
cmpsl
pop
mov
jb
sarl
cli
clc
inc
adc
push
adc
cmpsl
iret
or
xchg
lret
push
repnz
scas
gs
aad
mov
out
add
mov
push
push
pop
fisubrl
xchg
inc
out
jmp
ljmp
aaa
lods
mov
out
adc
out
push
and
mov
pop
sbb
add
cs
fiaddl
adc
pop
js
cld
ljmp
push
dec
out
sub
sub
std
and
leave
in
lahf
test
push
jo
cmpsl
fiaddl
mov
and
mov
and
aad
push
adc
outsb
xchg
xorl
inc
lret
mov
enter
cwtl
jnp
aaa
fs
jne
insl
imul
jge
adc
sub
flds
jmp
ds
mov
or
test
lahf
cmp
xchg
mov
xor
icebp
push
jnp
mov
sub
adc
cmp
les
jo
shr
or
jecxz
sbb
cltd
loope
jge,pn
jle
leave
mov
cmp
jmp
gs
in
xchg
enter
lret
mov
imul
or
int
pop
aas
dec
push
mov
ljmp
jae
pop
and
pop
mov
shr
arpl
sub
stos
arpl
adc
mov
lret
ret
push
adc
jns
or
jo
shlb
cmpsl
hlt
push
sub
jno
push
fwait
xchg
ljmp
sbb
ja
outsb
sbb
je
pop
push
sub
clc
stos
in
pop
sbb
loope
mov
insl
mov
sbb
inc
sub
push
mov
push
negl
test
adc
orl
mov
arpl
cmpsl
cmp
dec
xor
lods
cmpb
xchg
aaa
xchg
daa
add
adc
adc
and
dec
dec
mov
sbb
or
sub
imul
and
xor
push
adc
dec
ret
lds
mov
stos
fadds
mov
pop
out
mov
rcrb
mov
mov
xor
adc
add
jae
pavgb
sbbb
jecxz
es
loope
testl
psllw
cli
add
xchg
adc
out
pop
ljmp
xchg
sub
push
inc
pusha
inc
cli
push
jecxz
mov
mov
aam
mov
pop
fs
outsb
icebp
cmp
or
sbb
aad
dec
js
das
and
cltd
popa
ja
daa
out
test
ljmp
imul
or
xlat
jmp
loope
lcall
xchg
push
xchg
adc
shll
ds
push
jmp
scas
mov
jp
ljmp
js
leave
gs
xor
push
xchg
inc
or
mov
cli
mov
or
ret
and
xor
pop
js
xlat
aad
inc
push
push
xor
fmuls
xchg
not
xlat
cmpsl
mov
xchg
into
mov
mov
out
stc
inc
sbb
sub
cmpsl
jg
js
test
fbld
call
arpl
mov
jno
and
cmp
sub
stos
call
xor
jge
push
sahf
pusha
mov
mov
aam
pushf
out
mov
jl
sub
addr16
jl
int3
fmuls
out
imul
popa
cmc
into
arpl
dec
sbb
scas
and
fs
outsl
inc
in
pop
xchg
dec
sahf
sub
push
sub
mov
inc
popf
fs
sbb
stos
add
pop
repnz
jno
xchg
jp
mov
or
shrb
ret
aas
and
cmp
cmp
aas
rorb
hlt
and
mov
int3
adc
aad
jae
push
fdivrs
sub
test
mov
scas
out
dec
leave
jae
sub
and
shll
push
in
loop
mov
pop
add
sbb
clc
pop
inc
fisubl
mov
pushf
adc
outsl
push
sub
cmpsb
push
cld
imul
out
mov
clc
lret
xchg
stos
lret
rcrl
sbb
stos
mov
sub
ds
add
pop
movsb
mov
mov
mov
insb
or
int3
xchg
or
int3
sub
lock
sbb
insb
rclb
mov
into
push
in
into
jle
or
mov
inc
movsl
into
aam
in
push
xchg
adc
sbbl
mov
and
jb
negl
push
repnz
addr16
and
lahf
popa
or
push
roll
stc
std
mov
adc
mov
push
rol
enter
or
inc
outsl
adc
mov
cmp
insb
mov
gs
outsl
xchg
ret
or
add
insl
sbb
shrl
mov
push
push
sti
jecxz
xor
sub
mov
mov
fcmovnu
movsb
sub
pop
stos
repnz
and
andb
repnz
in
std
adc
ss
int3
push
lds
fisubrl
push
roll
cs
stc
aam
arpl
cld
jge
arpl
jo
xor
mov
xchg
nop
adc
out
sub
push
inc
or
push
sub
xrelease
cld
ljmp
or
jmp
out
push
adcl
test
flds
nop
fimull
xchg
test
add
jb
rorb
cmp
and
or
aas
jbe
inc
cltd
ret
or
sbb
cs
sbb
or
mov
xchg
mov
lea
mov
push
lods
mov
aad
cmp
sub
ss
and
out
lret
pop
xor
inc
sti
mov
iret
cmp
insb
mov
xchg
sub
and
mov
adc
popf
mov
js
sub
adc
mov
in
lock
pusha
adc
dec
rclb
cmp
out
dec
add
sub
and
cmp
test
roll
rclb
imul
imul
inc
sub
dec
pop
popa
sti
ljmp
lds
and
adc
lea
test
push
dec
repnz
enter
jae
cwtl
loopne
mov
add
jmp
ret
sub
test
xlat
cmpb
aaa
ficompl
lock
out
insl
sbb
jge
dec
xor
lock
cmp
and
cmc
int
je
sbb
sahf
jl
ljmp
or
mov
lret
jne
rcrl
addr16
orl
push
outsl
sub
fs
stc
push
rolb
mov
and
add
mov
push
pop
js
push
std
mov
loope
rolb
inc
xchg
mov
xchg
pop
fadds
push
test
inc
repz
scas
and
imul
lods
sub
mov
aas
loope
and
xor
pop
loop
out
lds
pop
xchg
jp
lea
repnz
out
adc
mov
pop
push
test
inc
outsb
int
fimull
adc
enter
mov
inc
in
sbb
and
push
mov
arpl
lcall
nop
lret
and
jmp
cmp
notb
mov
ret
imul
add
xchg
out
sub
mov
sub
and
cmp
mov
ror
decl
jb
incl
insb
add
adc
popa
push
or
bound
scas
mov
shr
movsb
pop
in
xchg
mov
test
leave
std
loope
sti
adc
sbbl
mov
shr
and
cltd
sbb
sti
xchg
pop
fsubrp
lahf
ja
and
mov
cltd
rolb
and
test
xchg
jecxz
jmp
push
ds
jns
test
mov
out
sbb
popa
in
push
imul
jmp
sub
mulb
es
mov
repnz
das
xor
inc
xchg
loope
sub
cltd
stc
movsb
mov
jo
bound
sbb
adc
cld
loopne
mov
loopne
push
add
out
cmp
jb
lods
sbb
rcl
jg
lods
dec
dec
or
arpl
hlt
jecxz
cmc
or
pop
movsb
inc
sbb
test
and
adc
scas
pop
cli
call
pop
dec
ljmp
mov
aaa
iret
lret
loope
loopne
test
add
adc
icebp
mov
cmp
sub
lock
inc
ror
sub
or
push
mov
and
xlat
int
pop
ret
icebp
and
lcall
push
test
pop
inc
inc
mov
dec
jo
push
xchg
sbb
dec
sarb
adc
add
mov
add
sub
lds
fildl
js
xchg
arpl
dec
sti
push
and
lcall
ss
nop
mov
adc
inc
test
or
xchg
push
sbb
call
dec
inc
sbb
mov
mov
movsl
faddl
and
mov
adc
lea
cmp
mov
pop
sbb
mov
in
mov
int3
fs
sarb
dec
nop
or
mov
popf
sbb
mov
pop
into
push
mov
out
mov
test
in
mov
mov
sbb
inc
pop
mov
ret
testl
out
mov
scas
popa
inc
dec
push
mov
xor
daa
pop
fs
mov
sub
daa
pop
mov
fidivrs
or
leave
subb
decb
enter
push
iret
sub
add
adc
xor
pop
test
fnsave
out
jg
cwtl
mov
ret
jne
call
test
lret
test
fildll
adcb
lcall
arpl
mov
mov
test
dec
repnz
mov
ret
stc
and
ljmp
or
es
dec
jecxz
out
ret
push
pop
sub
ds
adc
sub
and
push
lds
xchg
mov
loop
int
mov
mov
jb
push
push
mov
push
cmp
jns
cmp
ljmp
pcmpgtb
jnp
stos
mov
jo
and
sub
rorl
and
sub
xchg
inc
inc
mov
mov
andb
lret
bound
fadds
xchg
arpl
scas
je
movsb
jle
push
jl
stos
mov
mov
ljmp
pop
scas
jecxz
xchg
lcall
js
shlb
push
pop
fldcw
lea
roll
cltd
xchg
push
cmpsl
dec
imull
cmp
adc
or
mov
divw
adc
or
in
and
sbb
mov
xor
adc
lret
out
sub
mov
jmp
add
jge
cmpsl
pop
in
xor
adc
sarb
jecxz
rclb
mov
mov
push
mov
mov
ds
push
call
les
shl
iret
sub
test
and
leave
test
adc
imul
dec
scas
int
add
test
and
jmp
nop
cld
mov
les
cmc
inc
mov
aam
outsb
sar
pop
out
js
in
jg
in
pop
cmc
repnz
cmp
mov
jecxz
rolb
dec
push
test
loope
ds
pop
mov
lds
ja
or
into
xchg
mov
and
jmp
adc
adc
xor
stos
mov
or
jmp
dec
mov
mov
and
mov
cmpsb
leave
dec
or
leave
adc
mov
cwtl
imul
lret
ljmp
pop
lcall
into
ja
push
adc
pop
orb
popa
xor
push
push
sbb
or
imull
ret
cli
shll
repz
outsl
into
dec
adc
insl
mov
ljmp
repnz
or
or
rcll
sbb
pop
in
insb
dec
sbb
adc
ja
add
inc
lcall
dec
sub
xchg
jnp
enter
jge
inc
xchg
adc
sub
imul
outsl
xor
loopne
or
pop
clc
lcall
sub
or
inc
ss
and
pop
or
cmp
ljmp
or
pop
xchg
test
cmp
mov
mov
cmp
dec
imul
mov
xchg
adc
and
ljmp
xchg
hlt
addl
inc
mulb
xchg
bnd
adc
clc
sbb
push
movb
out
jmp
mov
xor
and
in
pop
lret
addr16
addb
sbb
outsb
outsb
aas
inc
out
pop
or
pop
rcll
xor
cmpsl
ljmp
hlt
shl
imul
fiaddl
fidivrl
das
push
cmp
sub
inc
or
ljmp
cmpsl
mov
xchg
xchg
sub
fimull
dec
jg
jbe
fisttps
and
sbb
inc
inc
add
jo
sbb
addr16
mov
sbb
push
mov
mov
fs
mov
bound
jmp
xchg
movsb
lret
sub
adc
sub
outsb
ljmp
dec
inc
push
call
stos
fcoml
pop
xchg
pop
popl
int
xchg
int3
push
cld
cli
in
cmp
push
sub
getsec
fadds
bnd
clc
mov
ja
cmp
sub
das
push
inc
in
cmc
xchg
xchg
mov
adc
cmp
jo
inc
push
pop
mov
rcl
aam
in
sbb
pop
push
orl
out
add
addr16
cmpsl
dec
mov
xchg
in
xchg
test
jg
and
adc
sbb
test
dec
sbb
sbb
iret
cmp
mov
loop
cltd
into
dec
popa
add
mov
sub
add
inc
adc
fsubs
add
lds
out
push
daa
orl
dec
cmpsl
cmc
pusha
mov
mov
fs
dec
call
push
lcall
add
mov
jecxz
sbb
aas
imul
call
pop
push
or
out
aaa
pop
sub
or
incb
and
fnsave
jl
mov
hlt
sbb
and
xchg
mov
inc
xlat
mov
stos
mov
imul
je
in
mov
push
inc
repnz
pop
ljmp
movsb
subl
xchg
xor
ret
ja
pop
sub
or
pop
call
adc
push
pushf
jno
or
pop
and
xlat
mov
popf
adc
lahf
mov
andl
mov
xor
mov
pop
hlt
or
cltd
mov
add
insb
inc
ljmp
mov
ja
push
je
or
mov
aam
outsl
dec
push
inc
or
stc
cmpsb
pop
fistpl
dec
lcall
adc
mov
cmp
leave
call
mov
notl
sbb
pushf
mov
sahf
mov
xor
adc
mov
xor
pop
and
bnd
lods
test
je
icebp
out
fnsave
push
imul
shl
push
xlat
sti
into
bound
nop
arpl
stc
loop
iret
mov
cmc
inc
mov
in
pushf
test
fiaddl
bnd
cmp
dec
and
fadd
popf
xor
adc
adc
mov
jl
push
add
decl
adc
jnp
mov
cmpl
call
int3
cmp
pushf
inc
add
xchg
and
pop
mov
rorb
out
jecxz
adc
aas
xchg
roll
ljmp
sbbb
sti
lcall
call
dec
mov
jp
sub
pushf
stos
fiadds
mov
inc
dec
daa
stos
mov
and
inc
jecxz
add
push
xchg
rorb
or
iret
and
jecxz
rol
xor
insl
push
adc
test
adc
mov
push
lods
outsb
xor
inc
or
out
scas
sbb
imul
fs
cld
stc
cmpsb
mov
int3
rcl
aas
xor
sbb
push
sub
sbb
mov
repnz
shll
jle
int
inc
out
or
and
fwait
leave
dec
adc
and
ljmp
mov
imul
repnz
adcb
adc
add
movsb
mov
sub
xor
mov
ljmp
enter
pop
xor
lcall
add
shlb
jmp
fistl
push
movsb
mov
pop
loopne
push
sbb
xchg
pusha
je
xor
mov
into
fistpl
jo
test
push
pop
sub
jne
pusha
test
adc
movsl
dec
xchg
sbb
andl
add
loope
jnp
jecxz
push
pushf
push
insb
sub
clc
arpl
jne
mov
outsl
push
mov
cs
jb
mov
cwtl
sub
or
xor
mov
sbbb
mov
jl
loop
mov
inc
mov
mov
xlat
loope
repnz
pop
xchg
cli
mov
or
inc
or
add
mov
xlat
and
push
test
fisttps
ds
nop
addr16
movsb
fists
or
enter
imul
inc
roll
movsb
mov
bound
fs
fisubs
xchg
aad
out
add
push
push
lret
mov
sahf
adc
inc
and
sbb
sub
outsb
insb
jmp
or
mov
sbb
sti
cmp
dec
lcall
pop
in
popf
mov
scas
jmp
movb
lcall
jl
sub
notb
dec
cmpsb
inc
push
pop
stc
out
jnp
xchg
sbb
in
lret
mov
dec
scas
insb
inc
add
inc
pop
idivb
inc
adc
inc
pop
push
mov
test
pop
arpl
insb
mov
scas
mov
adc
mov
call
xchg
loop
xor
shrl
xchg
jmp
sbb
cltd
ljmp
push
jnp
mov
adc
pop
xchg
add
imul
inc
pop
stos
push
incl
sbb
repnz
push
mov
add
mov
in
sbb
pop
shll
dec
mov
fiaddl
dec
das
shlb
stos
cmp
push
lods
adc
mov
jp
add
sbb
xchg
leave
clc
push
inc
or
movsl
je
or
js
fst
xchg
mov
dec
or
mov
je
dec
mov
inc
mov
ljmp
cmpsl
mov
push
fistpl
lock
daa
sub
popf
mov
fmulp
std
rcrb
adc
mov
bound
sub
cmp
xor
and
test
dec
and
adc
int3
and
into
int
cltd
rcl
scas
push
push
dec
clc
gs
cli
push
and
push
scas
push
xchg
icebp
push
scas
dec
jg
imul
adc
mov
or
fneni(8087
fs
fnsave
pop
sub
mov
test
jnp
jno
pushf
or
sarl
andl
loopne
repnz
sti
ja
inc
jg
fadds
call
mov
push
imul
add
or
pop
sbb
sti
imul
mov
push
push
in
and
cmpsb
hlt
xor
mov
fildl
ljmpw
repnz
xchg
repz
enter
sarl
subb
cmp
push
or
pop
push
movsb
mov
cmp
lds
xchg
pop
jecxz
daa
repnz
xchg
outsl
popa
dec
out
int
loopne
push
sub
sti
sbbb
push
aas
or
gs
xor
jo
addr16
addr16
cmp
movsl
sbb
mov
xchg
mov
pop
pop
or
sahf
mov
daa
inc
mov
dec
es
pop
pop
pop
xor
imul
outsb
inc
fmul
movsl
xchg
add
jne
daa
outsb
ret
les
enter
jecxz
mulb
cmp
xchg
shr
add
sbb
cmpsl
insb
xor
clc
loop
or
inc
cltd
popf
add
mov
call
jmp
push
int3
fadd
sub
jmp
loope
mov
fs
push
stc
js
cs
js
in
xchg
out
cmp
cli
cwtl
push
in
mov
inc
lock
mov
iret
arpl
jecxz
pop
adc
aam
or
imull
mov
sub
rcrl
adc
xchg
in
lea
mov
jnp
pop
xchg
jg
sub
cld
stos
out
cmp
pop
cli
mov
push
xlat
dec
inc
or
repnz
stos
cli
cmp
jmp
mov
or
test
mov
lret
aas
sahf
adcl
mov
movl
lock
inc
xor
pop
or
hlt
cltd
inc
jge
ja
adcl
je
cld
ret
jnp
aas
sbb
xchg
push
pop
out
push
rol
sarl
lods
mov
push
jge
and
push
rolb
xor
inc
in
aad
mov
in
cmp
mov
and
pop
repnz
dec
mov
ja
iret
and
push
push
movsb
pusha
in
outsl
popa
adc
shl
ud0
pop
sti
push
or
mov
and
and
xlat
cmp
fs
movsb
fistpl
decb
movsl
xchg
cmp
jle
and
mov
shr
push
std
ds
jb
jle
out
push
jo
test
test
in
inc
stos
xchg
adc
and
ret
xchg
jo
mov
adc
lds
popa
sbb
ljmp
ljmpw
dec
arpl
xchg
das
jl
scas
dec
int
out
mov
mov
push
shl
xchg
mov
mov
insl
aaa
xchg
xchg
and
cmpsl
popa
inc
shrl
inc
mov
sbb
out
ret
jae
mov
icebp
cli
sbb
lds
je
xlat
aad
insl
jbe
dec
add
movsl
mov
jne
pop
cltd
sub
jbe
cli
movsb
jle
inc
or
xchg
push
cmpb
pop
mov
xchg
or
dec
loope
call
jnp
test
ja
xchg
push
repz
and
push
jns
aas
clc
pop
sbb
inc
fsts
outsl
push
sub
mov
scas
test
and
mov
push
adc
cmpsl
adc
lahf
jae
ljmp
jb
dec
cld
adc
jp
xchg
aad
add
push
repnz
mov
xlat
mov
outsl
jne
fs
jmp
jnp
fcmovnb
clc
or
popf
repnz
and
pop
jge
inc
mov
add
sbb
inc
out
xor
xor
jno
jl
or
js
adc
std
movsb
fisubrl
jnp
inc
imul
sti
jb
xchg
sbb
jb
outsb
lods
cli
push
hlt
mov
xchg
test
push
mov
mov
mov
push
push
aam
pop
mov
jae
aam
es
subl
js
rcl
sbb
and
orl
stos
dec
adc
insl
fldt
jl
arpl
aaa
adc
lret
js
mov
pop
push
add
arpl
lret
dec
jg
stos
lock
in
jmp
stos
sub
out
je
outsl
push
dec
or
outsb
push
lret
mov
dec
jg
mov
shlb
xchg
mov
xchg
and
jnp
mov
fs
ret
jmp
push
lret
rcll
pop
adc
outsl
aad
mov
xor
jmp
jbe,pn
jns
aas
das
jle
sbb
enter
imul
lret
imul
rclb
mov
flds
ljmp
popa
loop
in
ds
repnz
adc
fwait
adc
push
iret
js
test
or
xor
jmp
fwait
push
dec
cli
je
inc
lods
xchg
movsb
jg
iret
in
shrb
push
iret
mov
xlat
jle
int3
mov
add
push
cmp
adc
or
scas
jmp
adc
lret
jp
int3
pusha
push
push
sbb
pop
sbb
adc
mov
jecxz
xchg
imul
ljmp
xchg
and
out
mov
xchg
jbe
mov
mov
push
pop
sbb
push
loop
cs
mov
jmp
mov
gs
mov
xchg
ja
imul
addr16
xlat
test
es
dec
sub
icebp
jo
in
dec
mov
fildl
subb
call
adc
adc
repnz
fs
sub
xchg
mov
or
dec
pop
arpl
cmp
or
loop
pop
repnz
gs
pop
ret
mov
mov
out
xchg
repnz
mov
fwait
rcrl
or
mov
mov
cmp
mov
cmpb
repnz
sti
jl
clc
pop
imul
popa
xchg
andb
call
pusha
xor
jge
dec
lea
lret
addb
push
dec
pop
mov
add
mov
addr16
leave
enter
push
xchg
push
xchg
imul
xlat
ljmp
adc
mov
jmp
test
push
mov
ds
idiv
ret
ret
cwtl
jno
movsb
imul
push
sub
call
mov
test
mov
lea
push
pushf
sbb
xor
xchg
std
xor
sbb
xor
shl
xchg
push
ljmp
insb
lahf
pandn
adc
add
lods
test
pop
js
jg
cli
inc
sbb
aaa
pop
ds
pop
inc
jbe
jo
popa
jne
out
and
push
mov
mov
cwtl
mov
jnp
cmpsb
fdivrs
cmpsl
mov
sub
xchg
push
jbe
push
iret
jl
sbb
mov
or
push
push
or
cmp
jmp
and
nop
loope
cmpsl
and
subb
repnz
lods
inc
orl
lret
jle
out
mov
mov
sahf
inc
movsl
div
pop
daa
ljmp
fs
lcall
mov
xchg
xor
loop
movsl
mov
hlt
adc
adc
mov
and
cmp
faddl
cmpl
loope
subl
sub
data16
ss
movsb
iret
mov
dec
ljmp
or
sub
mov
cmp
push
jmp
xor
xor
outsb
mov
sub
push
incb
mov
xchg
sub
lock
loope
adcl
adc
sbb
imul
jp
xchg
jnp
ror
or
test
jg
lahf
arpl
out
mov
sub
jne
and
jecxz
ficoml
adc
sub
pop
and
arpl
loop
ljmp
sub
push
imul
jae
and
fiaddl
sub
push
mov
dec
or
ljmp
and
es
dec
repnz
jge
pop
test
adc
int3
xchg
sub
scas
movsb
repz
sub
dec
fldpi
xor
loope
sbb
pop
imul
iret
into
pop
arpl
test
mov
test
jb
hlt
repnz
pop
adc
fcomp
mov
push
or
push
xchg
mov
mov
ret
jl
ss
mov
inc
and
inc
or
push
mov
push
adc
insb
popf
cli
js
mov
jmp
add
les
repnz
jbe
leave
jmp
cmp
jmp
outsb
les
and
push
jle
sbb
aam
test
dec
sbb
add
outsl
scas
xchg
mov
aad
sub
xlat
imul
pop
inc
xchg
cs
in
push
push
repz
sbb
popa
cmp
and
xchg
movsl
mov
mov
dec
pop
lret
push
or
aam
stc
in
adc
mov
ret
pusha
cmpl
lret
sti
pop
inc
mov
pop
ret
fcoms
pop
xchg
jmp
ljmp
push
test
pop
xor
setp
clc
js
mov
mov
out
xchg
dec
xor
xchg
jle
mov
and
into
adcb
lock
dec
lret
ljmp
fists
jle
inc
outsb
or
cltd
xchg
cmpsl
ret
arpl
xlat
jno
xchg
sub
dec
loopne
and
inc
int3
lcall
jbe
jle
mov
shll
lea
cmpsl
aaa
xor
in
mov
jecxz
or
lods
sub
add
mov
popf
xor
add
mov
mov
mov
mov
aaa
call
inc
push
adc
jg
lret
mov
js
cli
pop
jo
sbb
xchg
push
pop
inc
es
cs
mov
adc
pop
lret
jae
push
je
scas
adc
adc
sub
cmp
dec
enter
stos
loopne
movsb
push
mov
adc
arpl
in
push
leave
jge
lea
jae
mov
ret
push
xchg
pop
inc
mov
xchg
movsb
jo
adc
jg
cmc
pop
mov
mov
push
ds
repnz
pop
lret
icebp
outsb
cmp
xchg
test
aad
test
repnz
jmp
jns
or
arpl
dec
add
es
jno
jns
mov
jmp
mov
and
sbb
jmp
sbb
movsb
insl
sbb
push
jge
xor
movsb
push
or
sub
int3
xor
mov
pop
or
movsb
sub
les
test
repnz
test
mov
sub
sbb
sbb
imul
sbb
xor
stos
mov
out
fs
push
mov
stc
sbb
lret
xchg
dec
je
xchg
adc
repnz
inc
pop
cmp
ljmp
push
adc
imul
mov
out
xor
jp
xlat
mov
sbb
test
addr16
or
xchg
lret
push
cwtl
sbb
js
xchg
mov
lds
mov
sub
dec
inc
push
sbb
xchg
cltd
shl
cmp
out
jo
pop
mov
sub
ljmp
mov
cmp
cwtl
xchg
add
pop
aaa
lock
cmpsl
pop
mov
cmp
xlat
in
or
divl
enter
xchg
and
or
xchg
aad
adc
roll
scas
jno
adc
xchg
incl
pop
enter
mov
xor
adc
jecxz
dec
mov
jg
mov
sbb
pop
gs
adc
stos
mov
stc
pushf
pushf
pop
insb
loop
mov
insl
in
hlt
pop
cmp
repnz
or
mov
jmp
push
mov
stos
int3
mov
lods
mov
mov
mov
loopne
into
mov
mov
and
lods
daa
aaa
sub
push
popf
rcrl
andb
arpl
jl
scas
imul
xchg
lock
cmpsl
inc
xchg
sub
leave
ljmp
shlb
mov
or
sub
mov
dec
enter
int3
mov
jmp
fwait
mov
je
sub
or
icebp
test
cld
sub
cmp
mov
push
xchg
push
sbb
sub
xor
leave
sub
mulb
cmpsb
or
adc
stos
aad
jb
repnz
sub
mov
outsl
mov
mov
xlat
outsb
push
pop
pop
mov
and
xchg
testl
inc
pop
loop
cltd
call
xlat
add
push
jno
mov
call
cwtl
rorl
or
std
cmpsb
mov
fwait
or
mov
mov
mov
out
add
pminub
cli
ja
pop
aas
push
daa
outsl
lods
push
xchg
and
add
pop
mov
cwtl
jmp
add
mov
jg
adc
outsl
mov
inc
lret
ret
xchg
or
aaa
out
adc
mov
shld
fistps
jle
and
cmpsb
inc
std
lds
jp
and
hlt
sub
mov
jl
jmp
push
mov
pop
popf
sub
iret
mov
test
enter
mov
xor
dec
mov
inc
loope
fistps
lahf
sbb
mov
je
stos
push
sbb
push
pop
cli
leave
lahf
and
adc
push
mov
push
pop
jb
iret
xchg
in
xchg
push
cmp
add
push
stc
stos
add
in
xorl
call
je
push
inc
frstor
pop
jp
pop
std
cmp
iret
mov
aaa
jp
and
and
in
dec
jg
daa
pop
in
and
or
aad
decl
jl
push
das
xchg
test
movl
int3
jbe
pop
das
lds
addl
es
or
es
cmp
test
call
jmp
out
test
lds
pop
movsb
xor
insl
cli
sbb
repnz
scas
in
jl
dec
cmp
nop
mov
popa
xchg
and
aam
mov
or
pop
add
push
jae
aam
aam
sub
mov
adc
fdivl
insl
jns
imul
addr16
sbb
and
push
lret
outsl
push
sbb
cmp
add
rolb
psadbw
sbb
imulb
adc
jecxz
sub
dec
je
xlat
or
dec
pop
xchg
fisubrs
jnp
mov
js
push
lahf
mov
adc
mov
add
scas
sbb
mov
push
cli
imul
mov
insb
jb
lods
popa
cld
js
cmp
repnz
ljmp
mov
shr
loope
xchg
xchg
adc
int
or
sbb
xchg
or
xchg
aas
or
pop
and
rcll
cmpsb
mov
loop
imul
and
push
fimuls
fnstenv
jae
add
test
pop
jge
test
repnz
xor
test
add
mov
cmp
adcb
pop
popf
add
popf
movsb
test
mov
lahf
mov
cmp
test
adc
nop
cmp
pop
fs
sub
cli
fsubs
test
leave
test
and
ret
cmp
push
sub
test
mov
xchg
lcall
in
into
push
cmpb
xchg
lds
sbb
lds
xor
mov
insb
add
imul
sbb
jb
dec
insb
push
add
and
test
and
or
jns
mov
or
sub
or
in
jecxz
inc
lret
or
test
bnd
imul
and
scas
mov
shlb
sbb
push
loope
out
int
jl
rcl
push
daa
dec
inc
sbbb
cli
into
push
lds
mov
mov
shl
test
pop
xor
jno
fiaddl
fs
xchg
in
xchg
adc
in
inc
and
add
ja
add
ret
xchg
pop
test
cmc
ss
xor
dec
dec
lret
icebp
mov
aaa
pop
repz
repz
sub
push
jl
jp
sub
push
sbb
and
mov
stos
sub
imul
xchg
add
out
out
ljmp
icebp
mov
and
fldcw
sti
iret
imul
jb
sub
and
icebp
out
cld
mov
es
push
inc
pushf
out
aam
jmp
cmp
call
mov
clc
pop
xchg
push
sbb
dec
lret
pop
ljmp
sbb
or
in
les
insl
mov
mov
decl
cwtl
daa
adc
mov
sub
pushf
stos
push
repz
jl
add
push
adc
fwait
add
data16
mov
cmpsl
mov
popa
xchg
inc
or
fdivs
xchg
sti
xor
adc
movsl
test
mov
xchg
or
aad
jle
pusha
andl
dec
dec
sub
out
iret
sub
cmp
xlat
adc
decb
fsubrp
xchg
lcall
sub
repnz
out
stos
int3
dec
mov
sbb
and
and
pop
ret
and
and
push
test
mov
add
sbb
das
and
push
adc
loope
sahf
mov
pop
mov
push
int
loop
int3
movsb
push
dec
bnd
bound
pop
cmp
pop
loope
fists
mov
enter
outsb
lods
add
mov
mov
push
loopne
jb
xor
and
mov
lock
sbb
mov
push
add
lret
lds
add
mov
stc
aas
and
cmc
push
jecxz
xchg
ret
sub
jmp
pushf
mov
out
jge
xchg
clc
add
inc
xchg
xchg
push
bnd
adc
cwtl
sub
scas
pushf
push
mov
mov
js
fisubl
pop
add
test
bound
lahf
mov
sub
fldl
or
mov
pop
mov
push
jns
divl
test
cwtl
fwait
repnz
ret
mov
push
aam
inc
add
in
jmp
dec
cs
in
mov
out
inc
stos
mov
mov
and
xor
mov
mov
aas
repz
sub
adc
xlat
dec
test
sub
pop
mov
mov
js
inc
int
insl
lret
mov
sbbb
sahf
jno
mov
outsl
negl
outsb
adc
adc
mov
mov
push
jno
cli
adc
stc
pop
imul
sub
mov
cli
xchg
repnz
mov
mov
addl
xor
mov
not
xchg
mov
xchg
push
nop
adc
lock
fistl
dec
movsb
inc
mov
out
push
repnz
and
imul
adc
fldl
mov
or
cwtl
shrl
mov
sbb
adc
aad
outsl
xor
or
mov
or
push
cmp
ss
mov
pop
push
call
mov
pop
push
adc
out
leave
jle
xchg
bound
mov
sahf
mov
and
rcrl
or
add
dec
or
ficomps
sbb
inc
insb
shlb
adc
addr16
push
xlat
jl
stos
cwtl
sub
or
adc
sub
mov
adc
jecxz
push
pop
or
pop
mov
pop
ret
lods
dec
repnz
dec
ret
scas
mov
xchg
and
mov
test
dec
test
mov
jb
xchg
jle
cmpsl
mov
xchg
or
mov
jb
dec
test
mov
add
adc
dec
call
adc
sbb
xchg
mov
shrl
push
add
rclb
push
repnz
dec
stos
cmp
lret
add
sbbb
ret
push
insb
add
outsb
jmp
push
mov
loop
and
sub
repnz
and
or
mov
add
mov
xchg
xor
sbb
jne
mov
ret
adc
xchg
and
jmp
cmp
loop
xor
dec
cmp
mov
add
ss
mov
je
and
adc
cmp
dec
or
and
arpl
stos
add
enter
jg
push
in
or
xor
clc
sbb
pop
add
movsl
dec
cmp
xlat
repz
or
or
mov
std
sub
adc
cli
or
ds
mov
leave
sub
mov
jne
loope
pop
cwtl
lods
aaa
daa
jo
std
inc
add
add
repz
scas
mov
jecxz
aam
jle
cld
inc
inc
xchg
aad
jo
sbb
daa
leave
divb
lcall
sub
int
pop
es
or
loop
xchg
fadds
ret
fs
add
lcall
lods
inc
adc
in
dec
cltd
and
movsl
push
ds
test
fwait
push
jnp
lds
cmp
repnz
cmpsl
push
cmp
or
adc
rorl
jbe
add
jecxz
xor
push
fmull
into
adc
mov
and
jmp
repnz
pop
ljmp
lret
and
xchg
jb
mov
xchg
push
or
pop
cmp
xchg
jmp
pop
mov
leave
and
test
add
ret
xchg
or
rclb
sub
sub
sub
inc
mov
or
fistpll
sbb
dec
cmpsl
rcrl
pop
mov
pop
ljmp
movsb
out
jb
ret
cmp
arpl
in
and
jnp
ret
dec
cwtl
pop
iret
adc
mov
es
hlt
pop
insb
cs
ss
shll
repnz
inc
or
or
ds
push
inc
movsb
cmp
lods
in
movsb
sub
aam
xchg
and
mov
fmuls
push
or
or
shl
in
cmp
notl
xorl
movsb
sub
xlat
add
dec
jae
sbb
pop
mov
and
das
sbb
mov
popa
lock
aad
sbb
rcl
dec
sub
shrl
int
xor
xorb
sti
out
add
jecxz
jbe
mov
sbb
push
or
and
neg
loop
sbb
rclb
cmpsl
rol
test
les
ret
dec
or
imul
repnz
add
inc
fs
xor
adc
in
adc
cwtd
push
sub
clc
xchg
fadd
pop
inc
outsb
push
ss
loope
mov
mov
imul
fwait
mov
or
sub
or
sbb
dec
or
sub
mov
outsb
hlt
sub
push
fcoms
add
lret
in
push
cwtl
jo
push
fildll
outsb
cld
incl
sbb
add
inc
xchg
inc
dec
sbb
movsb
stos
lods
out
dec
lods
adc
mov
mov
push
std
cli
pop
adc
mov
arpl
cli
pop
loopne
and
out
push
mov
xchg
jmp
xchg
dec
mov
outsl
dec
lcall
mov
in
pop
incb
xchg
imul
mov
rclb
fwait
sti
mov
adc
cwtl
cmp
or
imul
xchg
test
xor
xchg
jmp
adc
mov
in
lahf
test
push
cmp
fwait
or
cmp
and
sub
sub
jge
cmpsb
add
xor
aad
inc
int
repnz
jg
push
mov
sbb
lret
out
addr16
jle
add
and
rorl
out
mov
scas
sbb
sbb
or
mov
push
imul
mov
push
adc
mov
sub
adc
bound
add
insb
dec
mov
sarb
fsubrs
enter
out
js
fimull
push
les
testb
mov
dec
jp
mov
jmp
mov
ds
stc
mov
and
repnz
lea
mov
out
inc
or
movsl
sub
fsqrt
mov
jnp
ljmp
xor
jmp
or
inc
lods
popa
lock
xchg
aam
js
leave
or
adc
int3
ljmp
jp
sbb
sub
xchg
jecxz
faddl
cltd
daa
js
mov
add
and
mov
pushf
daa
sub
cmc
shrl
fmulp
or
jno
incb
xor
sub
sbb
sub
cmp
out
or
outsb
adc
add
in
push
aaa
push
mov
sbb
mov
jle
xor
repz
in
fadds
pop
outsb
add
xor
inc
push
and
scas
jle
fwait
std
push
or
loope
lret
lret
sarb
inc
sub
sbb
loopne,pt
mov
adc
xchg
xor
std
add
jmp
xchg
sbb
mov
test
fdivl
or
or
fisubl
test
std
xor
cmc
ljmp
popf
in
add
cmp
mov
clc
fs
data16
or
pop
rcr
or
adc
int3
adc
or
gs
lret
lahf
pop
sub
movsb
cld
std
mov
clc
outsb
push
add
mov
dec
dec
and
push
pushf
int3
fs
sub
mov
popa
push
xor
adc
xor
push
push
sbb
cld
cmpl
lods
dec
inc
or
ret
dec
jge
loope
inc
xor
cmp
mov
mov
fstpl
decl
push
out
ss
cmp
sub
int3
xchg
adc
sub
jle
pushf
insw
fnstsw
popf
sub
mov
xchg
loope
cmpsb
sahf
inc
cmp
jmp
incb
mov
inc
push
cmp
shl
mov
cmp
adc
lcall
add
popa
ljmp
out
stc
subl
pop
sub
pop
dec
in
add
dec
out
movb
icebp
push
enter
pusha
popf
lret
loopne
test
adc
jp
cwtl
sub
push
or
mov
test
xor
imul
dec
dec
xorl
loop
or
mov
mov
sbb
stos
nop
jp
adc
data16
xor
scas
add
ret
jne
repnz
adcb
fcompl
fadd
adc
push
adc
xor
jnp
jmp
push
sub
xchg
mov
je
stc
push
push
sbb
insb
not
mov
in
add
sbb
dec
shll
imul
xchg
dec
mov
adc
adc
pop
sarb
test
fs
push
add
jmp
shr
sub
cmp
clc
out
outsl
lret
sbb
push
jnp
arpl
sti
in
adc
je
popf
testb
fbld
inc
sub
imul
xchg
notb
sbb
mov
movsb
sbb
dec
lock
fdivrs
xchg
bnd
and
loope
adc
sbb
fisubrl
out
cmc
std
sbb
jmp
rcl
pop
rcrb
push
cs
andl
cmp
push
mov
test
and
loopne
fs
outsl
aas
lcall
and
xchg
cmp
mov
jg
and
xchg
aaa
loop
imul
movsl
jo
sub
mov
daa
dec
or
xor
sub
cs
test
and
dec
cwtl
imul
pop
rorl
nop
lahf
stc
lcall
dec
dec
jl
push
test
xlat
sub
cmpsb
mov
sbb
and
sbb
mov
xchg
mov
and
hlt
arpl
fidivs
cmp
icebp
mov
mov
out
in
push
adc
and
fwait
mov
mov
popa
jne
mov
imul
add
scas
or
mov
ljmp
xchg
pushf
sti
add
jecxz
sub
cmpsl
mov
pop
cmp
test
cld
mov
ljmp
pop
push
push
and
dec
cmp
je
ss
push
insb
negb
ljmp
lcall
sub
jg
or
add
xchg
mov
pop
incl
mov
mov
push
sbb
push
pop
add
aaa
cld
push
ss
mov
leave
aad
mov
or
jnp
out
pop
cmpsl
outsl
testl
test
xchg
and
repnz
mov
mov
je
or
adc
je
insb
dec
movsb
or
adc
or
call
bound
out
scas
cmp
push
stc
mov
mov
and
repnz
cmp
xchg
movsb
jl
inc
icebp
jns
daa
lock
adc
or
add
testl
and
sbb
lock
ljmp
mov
scas
push
and
sbb
loopne
shrb
xlat
add
mov
lcall
and
rorb
pop
pop
adc
stos
xor
push
loope
adc
in
in
cmp
lcall
pop
jns
fists
je
rolb
leave
outsl
movsb
mov
addb
shll
movsb
in
mov
sub
jl
movsb
jl
mov
mov
mov
movsb
shll
push
jecxz
repnz
punpckhwd
pop
and
cmc
and
sub
jecxz
sub
fsin
lahf
call
or
and
sti
popa
sub
cltd
pushf
cld
lret
shrl
movsb
call
mov
mov
push
sbb
push
jle
shlb
xchg
sub
cld
rol
and
outsb
leave
push
shll
xchg
or
call
mov
push
xchg
lcall
and
sub
mov
sahf
addr16
int3
rorb
or
lods
jl
and
mov
shrb
nop
popl
or
adc
test
push
rolb
and
mov
in
mov
mov
ja
mov
sub
inc
outsb
out
and
sub
clc
lret
call
xor
sti
es
xchg
hlt
inc
rcll
imul
mov
adc
shrb
cwtl
xchg
adc
or
push
int
push
ficomps
insl
mov
fs
mov
lahf
notl
cs
push
into
adc
or
mov
adc
out
mov
mov
lahf
test
push
add
jbe
icebp
insb
arpl
cmp
mov
repz
and
les
xor
addr16
icebp
sub
xchg
fisubs
loop
xchg
dec
pop
loop
mov
shl
mov
or
pop
stos
sarb
mov
or
and
add
cs
push
sub
sbb
iret
sbb
jbe
pushf
add
mov
cmpsb
sar
outsl
sahf
dec
sub
std
ljmp
or
arpl
lret
inc
sti
jg
xor
or
and
dec
popa
jg
mov
and
mov
popf
push
lret
out
dec
jecxz
mov
add
dec
mov
enter
and
mov
icebp
outsl
or
mov
mov
sbb
push
inc
jo
enter
jecxz
xor
aaa
stos
cmpsb
xor
loopne
je
mov
outsb
add
enter
ficoms
movsb
or
mov
stos
sbb
adc
jbe
mov
loop
stos
mov
cmp
lret
repnz
jp,pt
push
jl
test
dec
cwtl
inc
cmp
push
sbb
jne
xchg
sbb
lods
outsb
cmpsl
or
std
add
mov
imul
mov
mov
mov
dec
xchg
jnp
movsb
sub
sub
adc
loope
jge
fdivl
xchg
pop
outsl
je
in
mov
jle
lods
movsb
sub
in
xchg
push
movsl
lahf
mov
cmp
add
pusha
mov
das
popf
dec
mov
das
mov
repnz
mov
stos
flds
out
cmc
inc
aam
jne
daa
mov
push
and
arpl
and
nop
and
cwtl
pop
or
inc
movsb
adc
sub
cli
push
push
in
inc
cmp
cmp
jp
or
sbbl
or
sahf
or
pop
pop
inc
stos
insb
dec
aaa
xchg
mov
clc
cmp
xchg
ja
jle
rcrb
pop
mov
and
jmp
pop
cmp
sbb
jl
sub
lret
punpckhwd
jnp
inc
sahf
insb
adc
leave
jb
lods
cwtl
test
adc
adc
xchg
out
cmp
mov
das
ds
xor
sti
sub
aaa
test
sti
jne
pop
mov
push
push
repnz
popa
pop
push
dec
ficoms
and
inc
adc
xchg
mov
push
push
mov
adc
mov
cld
in
ja
bnd
test
in
pushf
and
and
repnz
test
rcrb
test
jg
cld
or
loope
cmp
subl
movsl
in
ss
mov
push
test
addr16
inc
cmpsl
add
jecxz
sti
xor
sbb
sub
andb
cmp
jno
jmp
inc
test
shrl
jp
and
arpl
add
jle
or
clc
lret
repnz
pop
xor
lods
adc
xchg
cmpsl
stos
add
enter
mov
jne
andb
enter
testl
xor
out
popf
leave
idivl
dec
mov
nop
repnz
imulb
sbb
dec
pusha
jp
cli
ljmp
pop
push
xor
dec
clc
mov
and
sar
repnz
hlt
mov
pop
pop
test
cmp
imulb
adc
ds
clc
outsb
or
std
and
not
repnz
sbb
or
lods
mov
add
or
jmp
mov
push
fdivrl
fsubs
push
lcall
mov
dec
and
jecxz
and
bound
loope
inc
xor
cmpsl
clc
fildl
pop
jecxz
rorl
fwait
or
pop
lods
fsubr
cmpsl
and
push
into
mov
or
push
and
cmp
jmp
loop
iret
add
and
jle
nop
sbb
loopne
dec
lret
jl
mov
push
ljmp
xor
ljmp
sbb
arpl
jp
outsl
arpl
pop
and
adc
ljmp
in
rcl
xchg
cmp
mov
pop
xchg
pop
mov
xor
or
sub
xor
test
lret
bound
in
push
movsb
lret
sub
pop
inc
insb
lea
adc
insl
push
ss
movaps
aad
jg
dec
jg
pop
dec
lods
leave
sub
dec
mov
fsts
sub
daa
jecxz
cmc
jo,pt
mov
mov
push
test
lods
mov
pop
shlb
pop
je
and
mov
sbb
adc
es
fnstsw
in
mov
and
jge
dec
out
mov
repnz
inc
xchg
add
ljmp
and
adc
mov
xor
sub
mov
shlb
mov
jp
movsb
cld
cmpsb
cld
sbbl
jecxz
sbb
daa
and
dec
fnstcw
pusha
insb
mov
dec
add
shrl
rep
mov
and
and
add
arpl
fwait
cmpsb
dec
xchg
jg
adc
add
adc
inc
and
popf
lret
jb
repz
aas
mov
scas
xor
or
fisubrl
pop
insb
sarb
and
jg
xchg
lock
dec
popf
fs
cs
lds
mov
stc
lret
test
mov
test
fldcw
in
and
or
or
in
notl
cmpsb
ljmp
push
pop
cwtl
mov
outsl
lea
test
je
ret
sbb
in
xlat
les
bound
cmp
ss
jcxz
scas
lods
jecxz
add
jl
mov
inc
pop
repnz
std
movsb
sbb
sbb
dec
cmpsb
sbb
dec
fwait
arpl
insl
xchg
sub
dec
jo
mov
jge
push
pop
sub
fsubl
imul
ljmp
lds
daa
les
psrlq
xchg
push
cmp
add
fwait
or
loopne
pop
arpl
insl
cmp
and
mov
mov
mov
add
clc
adc
jmp
sbb
loope
clc
pushf
cmc
sub
daa
mov
pop
push
mov
mov
xchg
aad
fadd
push
lahf
loopne
clc
jno
shll
jb
cmpsb
fsubrl
mov
stos
js
int3
xchg
inc
insl
mov
lods
xor
ss
mov
int
iret
repnz
inc
test
sub
imull
iret
xor
repz
in
sbb
sahf
push
lret
lods
add
mov
jge
or
and
push
xor
fimuls
adc
mov
cltd
adc
ret
bnd
jle
pop
addr16
or
ds
mov
pop
loop
fcoml
addb
or
lods
xchg
ret
mov
mov
push
out
push
mov
das
enter
mov
push
dec
test
hlt
cli
xchg
mov
pop
push
pop
mov
ljmp
and
outsb
sub
push
nop
addr16
repz
repnz
mov
movsb
mov
xchg
xor
mov
outsb
or
pop
insl
pop
insb
or
xchg
push
inc
sub
outsb
loop
xor
pushf
inc
repnz
popa
mov
xchg
cmp
ret
bound
and
shlb
mov
xorb
je
and
mov
mov
addr16
add
and
lods
fbld
and
xchg
push
adc
add
in
inc
cltd
jb
adc
cmp
pusha
mov
mov
and
mov
adc
in
hlt
jmp
inc
push
jge
test
mov
dec
jge
sub
lcall
hlt
adc
insl
xchg
jg
xchg
push
nop
and
add
or
repz
ret
sub
cmpsl
dec
xchg
data16
fwait
or
ffreep
lcall
mov
push
jl
lods
inc
sti
in
imul
push
mov
or
mov
sub
aam
std
push
movsb
push
add
je
push
sbbb
shrl
test
sub
sub
sub
pop
loop
xor
stos
pop
xchg
xor
repnz
pop
inc
pop
gs
lods
test
push
shll
jmp
mov
mov
sbb
es
cwtl
mov
mov
imul
xchg
stc
sub
and
jecxz
out
xor
add
dec
aaa
jg
push
push
aad
inc
sbb
arpl
call
xchg
out
adc
repnz
sbb
scas
fisubrl
pop
or
pop
adc
rcrl
movsb
cmp
cmpsb
or
orl
jl
arpl
dec
mov
push
pop
mov
xchg
mov
push
call
xor
mov
repnz
dec
fisubrl
mov
adc
lods
out
in
js
int
int3
push
out
test
and
jo
loope
scas
aaa
or
test
ret
mov
jp
mov
xchg
push
sub
cs
jno
push
arpl
push
sub
imul
js
fwait
mov
push
fsubrs
mov
cli
lret
arpl
test
and
jmp
lea
iret
cwtl
leave
fsubs
xlat
mov
cmp
sub
fnstcw
cmp
and
jg
repnz
jecxz
mov
and
popa
adc
lock
adc
xor
lret
nop
xchg
iret
dec
pusha
pop
adc
jge
cli
das
pop
sub
jmp
dec
js
in
pop
iret
mov
cmp
sub
enter
mov
ja
in
pop
push
cmpsl
jp
loopne
sbb
adc
sti
daa
out
pop
sbb
loopne
dec
addl
push
aad
aaa
movsb
hlt
sti
jo
sbb
xlat
repnz
nop
adc
xor
int
add
xchg
cld
push
mov
mov
sub
push
aam
faddp
pop
jge
and
mov
inc
fucomi
mov
bound
popa
jne
mov
or
adc
popf
pop
ds
xor
mov
add
movsb
cmp
push
rorb
jmp
out
leave
call
nop
movsb
shrl
enter
iret
xchg
iret
int3
push
ficompl
pop
and
ljmp
movsl
mov
lret
fstl
jg
call
sbb
les
sarb
or
insl
pop
xchg
jo
xchg
lods
mov
outsl
fistpl
aas
xchg
insl
push
sbb
or
jecxz
outsl
jge
adc
jmp
cmpb
sub
arpl
repnz
jno
dec
lods
lds
adc
push
jecxz
mov
aaa
repnz
dec
or
das
push
lcall
aas
sbb
jp
mov
xchg
inc
sar
or
pop
lcall
fstps
pop
sahf
subb
adc
repnz
or
ss
fldl
sub
mov
scas
sbb
mov
stos
mov
xchg
stos
repnz
cmp
adc
movsb
js
loope
dec
stc
cmpb
pop
stos
daa
mov
pop
mov
push
adc
jnp
mov
insb
in
pushf
add
stos
jae
pop
add
dec
jns
out
pop
mov
pop
rorl
decb
cltd
imull
jecxz
push
cmp
ds
nop
push
cwtl
out
into
mov
add
add
inc
test
test
xlat
out
cwtl
sbb
je
stos
cmpsl
cmpsb
or
jb
lret
out
xchg
xor
or
xchg
lods
lods
dec
dec
mov
sub
mov
add
repz
cmp
mov
insb
ret
fs
cmc
or
and
add
adc
scas
arpl
cli
bound
outsb
aam
dec
cmp
mov
sub
cmpsl
sbb
mov
pop
push
call
xchg
into
imul
pop
arpl
sub
pop
lcall
sbb
shr
or
sub
inc
jb
sub
cmp
xchg
lret
pop
sub
out
fsubr
ja
sub
stos
sub
out
bound
cmp
dec
jmp
insb
adc
or
arpl
icebp
sbb
add
ljmp
into
fbstp
icebp
std
and
stos
jmp
call
cmpsl
popa
shrb
sbb
and
loope
xchg
jne
fmuls
insb
sbb
cmpsl
and
xor
in
pop
test
sbb
mov
rolb
push
xchg
adc
fcmove
xchg
mov
xacquire
pop
stos
ds
cmovo
movsb
icebp
jmp
aas
cmc
outsl
mov
sub
sub
jbe
mov
cwtl
push
or
push
cmp
sub
push
jecxz
js
jg
dec
add
xor
cli
movsb
mov
pop
mov
sub
mov
mov
out
and
paddw
int3
push
lret
jg
test
mov
pop
cmp
and
push
sbb
ss
cmpsb
adc
jbe
push
imul
adc
pop
data16
sbb
test
xchg
das
dec
pop
jae
inc
adc
xor
sbbb
sub
sbb
stc
lds
mov
int
adc
lds
sbb
xchg
fmull
adc
adcb
arpl
push
dec
dec
sbb
jo
adc
jmp
pop
and
pushf
inc
icebp
pop
lret
sbb
in
inc
pop
sti
repnz
adc
xor
xchg
sbb
std
push
pop
fs
fs
jge
xor
dec
or
sbb
inc
xchg
loope
dec
push
xchg
scas
cli
cmp
xor
int
into
sub
push
or
gs
cld
loop
andb
pop
movsb
repnz
movsb
in
loop
es
xchg
pop
lods
xlat
insl
mov
xchg
test
in
fcomip
or
test
fwait
jbe
add
in
inc
repnz
add
xorl
add
cmp
push
fmull
int3
pop
and
pop
cli
out
mov
mov
in
aas
lea
add
and
aaa
pop
push
and
xor
inc
jp
addl
xchg
aaa
pop
iret
movsl
pusha
movsb
and
loop
jns
pop
or
movsb
sbb
sub
imul
sub
jmp
cli
mov
mov
adc
lret
push
jae
push
ja
outsb
lds
dec
pushf
inc
aam
lret
sbb
lret
lcall
test
cmpsl
adc
sbb
adc
sbb
sbb
mov
outsb
jns
xchg
ja
cmp
adc
aaa
cmc
lcall
ljmp
stos
iret
and
lahf
outsl
insb
fcomi
cmp
sub
popf
jmp
cli
cmp
fmul
push
cmp
lcall
jmp
sbb
or
mov
push
insb
mov
pusha
cmp
jg
call
imul
lods
insl
jg
movsb
xchg
sub
cmp
adc
or
ja
scas
fs
nop
divl
mov
popa
xchg
and
in
inc
leave
enter
cltd
push
repnz
loopne
mov
mov
enter
mov
sbb
jne
cltd
xchg
imulb
pop
mov
mov
adc
jns
cld
pop
jmp
push
mov
dec
or
xlat
sub
lods
and
push
jl
cltd
sub
outsl
jno
cmc
mov
test
popa
xor
out
ret
sbb
push
jmp
shl
testl
fiadds
xor
xchg
adc
sub
repz
int3
dec
sbb
lock
outsb
cmp
gs
in
xchg
adc
pop
push
sub
xor
icebp
xchg
cmpsl
shll
imul
cmp
xchg
xchg
mov
sub
mov
pop
cmc
insl
sub
pop
mov
xchg
aam
enter
call
sub
jp
sbb
xor
mov
push
jl
dec
mov
xchg
push
repnz
adc
pop
int
lods
in
jb
push
lret
adc
aad
fstpl
movsl
mov
xchg
imul
fmulp
nop
mov
mov
shl
pop
insl
call
repnz
mov
xchg
mov
flds
call
notl
mov
les
sub
outsl
insb
lcall
or
xchg
adc
jecxz
sub
repnz
test
add
or
movsl
in
sub
or
push
xchg
pop
jge
cmp
jmp
insb
and
push
adc
xor
push
add
dec
mov
lcall
outsl
sbb
add
add
pop
cmpsl
cltd
inc
loopne
lret
mov
adc
or
push
xchg
mov
cmp
fsubp
sbb
aas
mov
mov
data16
pop
loope
stos
cmp
ret
fmull
and
cmpsl
rcrb
popa
inc
movsb
inc
mov
dec
fs
mov
mov
push
mov
outsb
pop
jmp
cmc
xchg
xorl
mov
mov
push
ds
repz
xchg
sub
js
ljmp
mulb
sbb
add
push
in
or
push
jmp
insb
dec
fildl
adc
add
inc
add
mov
fcoml
push
jge
mov
jge
jb
stos
daa
xchg
jl
pop
push
fs
and
inc
add
ds
je
fisubl
dec
mov
mov
jae
hlt
iret
jle
loope
ljmp
pop
fwait
bound
nop
rcr
cs
pop
aad
cltd
xor
jmp
aaa
adc
leave
addr16
imul
pop
aaa
jo
sub
fisubrl
inc
add
dec
xor
mov
xor
fstpl
cmp
adc
xchg
sbb
lcall
mov
mov
adc
arpl
push
inc
test
popa
sti
adc
lods
sbb
loop
outsb
cmp
xlat
outsl
mov
mov
sub
xor
or
push
stc
pusha
sub
call
in
xchg
xchg
push
dec
sarb
out
sbb
lret
jmp
jmp
inc
cs
and
dec
popf
sbb
gs
and
out
and
push
test
imul
xchg
sti
sbb
or
and
ljmp
mov
dec
sti
push
imul
jle
or
dec
cmp
int
in
pop
je
sbb
ficoml
push
and
mov
repnz
ret
sub
xchg
fwait
xchg
and
cltd
adc
pop
iret
scas
mov
lea
and
dec
test
addr16
aaa
and
aad
into
xchg
add
je
pop
push
mov
push
push
pusha
push
cmp
cmp
mov
inc
insb
mov
lcall
and
jle
daa
jge
xchg
repnz
sub
mov
out
or
or
sbb
jp
sti
sub
les
test
or
and
dec
das
sbb
repnz
lock
fidivrl
jo
and
shll
dec
and
sub
test
scas
fisubl
cmpsl
pop
clc
pop
sub
std
cmpsl
cmp
cmp
inc
jmp
pop
pop
xor
or
lret
xor
push
jge
dec
subl
lret
pop
mov
idiv
adc
push
insl
cmpsl
out
cmpsb
popa
mov
call
notb
xchg
dec
or
inc
sub
fsubr
lods
in
cmpsl
insl
call
adc
jns
mov
sbb
repnz
test
imul
stc
xlat
jge
lods
push
cltd
xor
movsl
int
mov
mov
adc
xchg
decl
out
ret
pop
mov
inc
and
inc
push
pushf
and
outsl
sub
adc
les
xchg
mov
or
popa
fadds
cmp
and
xchg
ret
pusha
and
mov
sti
sub
dec
sbb
repnz
sarl
loopne
rolb
jl
sub
mov
push
ror
mov
std
push
in
pop
repz
sbb
mov
mov
jne
inc
outsb
in
in
adc
push
lret
mov
xchg
pop
ret
imul
jge
iret
es
cmc
cmpsb
repnz
popf
das
data16
aad
jne
int
xlat
sub
inc
adc
or
popf
pop
iret
loope
mov
rcl
ja
inc
xchg
pop
jecxz
add
sub
test
and
jl
fs
add
cltd
jl
push
into
outsb
sti
pop
repnz
xlat
dec
shlb
sub
and
inc
fldl
sbb
int
push
lcall
adc
cmpsl
add
lcall
adc
int
mov
pop
mov
adc
inc
adc
xchg
sti
imul
cmp
test
or
or
pop
mov
mov
xchg
movsb
scas
and
sbb
fisttpll
repnz
xlat
repz
pop
movsl
xchg
stc
and
jg
ds
add
pusha
mov
imul
xlat
shrb
divl
ds
dec
mov
repnz
out
push
or
or
mov
sbb
inc
scas
in
mov
mov
dec
inc
aam
insb
sub
lea
xchg
cwtl
sub
adc
inc
je
daa
ja
das
repz
push
mov
adc
xchg
cltd
leave
pop
cmp
fisubl
inc
push
nop
test
xor
add
enter
jns
in
sbb
add
imul
dec
mov
push
jl
pusha
ljmp
adc
sbb
sub
ljmp
les
pop
aaa
push
push
xchg
sub
xlat
mov
cmp
dec
test
xchg
or
pop
pop
push
aam
mov
ret
push
jecxz
and
adc
ror
shlb
loope
or
js
xlat
in
stos
mov
je
pop
addr16
aas
sbb
or
lret
test
adc
sbb
pushl
shlb
pop
xchg
jle
imul
stos
adc
cmp
and
sahf
xchg
sub
add
popa
xor
and
xor
pop
ljmp
shll
adc
jae
mov
lock
ds
lret
repnz
addb
inc
in
stos
leave
push
mov
mov
sub
sub
inc
sbb
out
mov
cmp
repnz
test
cli
js
stos
mov
xchg
sub
lods
cmp
push
pop
push
arpl
cli
push
rcrb
pop
shll
adc
jecxz
pop
scas
jbe
shlb
mov
adc
lock
mov
add
decb
es
push
pushl
lret
pop
insb
imul
sub
jnp
jno
or
out
leave
testl
mov
jmp
xchg
push
xchg
push
adc
mov
push
xor
pop
adc
add
hlt
or
ret
arpl
and
cmp
mov
clc
dec
adc
aas
fcompl
push
pusha
adc
jecxz
jb
bound
mov
lock
sub
and
sbb
mov
sbb
stos
pop
and
inc
aam
out
jmp
data16
pushf
outsl
shr
pop
push
or
sub
inc
lods
scas
mov
and
jecxz
xchg
sub
push
les
movsb
testb
or
lds
pop
data16
arpl
notb
jle
dec
jecxz
enter
add
dec
pop
jg
jmp
mov
mov
jl
mov
mov
sub
sbb
aam
cld
adcl
or
cmp
imul
mov
add
inc
movsb
in
mov
fistpll
je
ds
jae
jp
jge
adc
mov
pop
sti
repnz
arpl
xchg
lock
shrl
inc
aas
sbb
sub
stos
cmp
cmpsl
sbb
imul
xchg
popf
xorb
mov
test
outsb
lret
mov
push
aam
dec
add
mov
xor
mov
xchg
add
and
mov
or
push
adc
cmpsl
adc
cli
popa
mov
pushf
push
data16
add
shl
xor
cs
pop
loope
inc
jns
or
popf
sbb
je
add
xchg
subl
pop
fsubl
sbb
int3
xchg
cmpsb
aas
sub
pop
movsl
jle
sahf
fistpll
xor
jne
xchg
xlat
jo
ja
or
adc
cmp
in
xchg
adc
loope
jae
insl
mov
movsl
jecxz
sbb
cli
pop
and
mov
push
std
in
jmp
and
push
pop
jnp
lea
bnd
repz
cld
sub
scas
inc
pop
call
in
lds
push
sbbl
or
mov
sub
sub
movsb
mov
xchg
cmp
in
jnp
mov
hlt
movsl
xchg
inc
out
hlt
aas
in
js
mov
out
jnp
and
inc
out
hlt
jle
movsb
mov
in
sar
ljmp
mov
or
add
pop
jl
cmpsl
popa
imul
adc
xor
cs
popf
adcl
inc
jle
popa
cmpb
dec
movsb
jle
fucomp
mov
lahf
popf
movsb
mov
std
mov
sub
enter
jle
ljmp
fimull
inc
push
sbb
repnz
jno
hlt
pop
mov
dec
sub
shlb
lret
mov
add
xchg
sbb
jo
cmpb
mov
and
test
negl
cwtl
mov
cli
mov
xor
cmp
loopne
and
sar
ss
outsb
mov
jnp
jo
jle
aam
addr16
inc
std
enter
add
outsb
push
dec
ljmp
adc
pop
dec
sbb
cmp
add
nop
or
shld
mov
loop
rorb
out
sub
into
ljmp
je
ja
js
scas
cs
xlat
inc
and
mov
push
js
lret
and
xor
push
out
push
xor
cmpsl
cmp
lret
adc
lahf
lea
test
add
shrl
mov
push
jecxz
in
scas
adc
int
push
in
aad
xor
and
icebp
xchg
aaa
cmc
outsb
xor
out
sahf
call
mov
add
adc
ret
imul
mov
out
xchg
imul
psubsw
push
jb
sub
sub
add
push
mov
arpl
xchg
dec
or
stos
pop
mov
stos
jb
shr
mov
push
je
or
sub
ret
xor
int
sahf
fisttpl
mov
mov
repz
addr16
cmp
pop
or
push
daa
push
jb
and
ljmp
lea
enter
sbb
pusha
and
pop
mov
cmp
fidivrs
push
jns
dec
jae
popf
loopne
xor
and
add
jbe
lret
sbb
pop
pop
and
daa
leave
sub
cmc
jge
sbb
nop
cld
cld
cwtl
inc
push
cmpsb
lret
and
and
mov
insl
std
pop
arpl
pop
fs
sbb
add
popa
rolb
test
add
out
push
mov
or
cld
add
test
sub
jg
loop
push
adc
or
fmuls
jnp
cwtl
test
jo
jle
insb
aam
out
bnd
sbbl
pop
or
push
cmp
cltd
fcmovb
repnz
push
das
test
iret
in
lods
inc
out
js
mov
int
popa
cld
fs
stos
popa
add
mov
ljmp
inc
aas
loope
mov
shl
cmc
sub
cmp
pop
pushf
mov
leave
add
push
lea
add
xor
add
cld
inc
mov
cmp
lcall
sub
repnz
je
fdivrl
dec
pop
mov
mov
lock
repnz
adc
or
sbb
movsb
cwtl
xchg
hlt
test
lods
daa
clc
addb
jo
push
das
xacquire
iret
test
lods
bnd
mov
sub
jp
dec
xchg
ljmp
or
sbb
and
cltd
push
jmp
outsb
repnz
cmp
inc
inc
andb
inc
and
inc
xchg
dec
mov
cmp
adc
cld
lock
call
aam
jp
xchg
dec
lcall
call
popa
inc
pop
push
out
adc
fdiv
inc
xchg
push
mov
push
ds
test
dec
int
test
hlt
xchg
mov
mov
jns
pop
jecxz
mov
dec
and
lret
mov
and
sarb
xor
outsb
jmp
xchg
gs
xchg
xor
add
test
xor
lret
test
jnp
mov
push
aam
adc
bound
ret
push
jle
mov
test
dec
test
imull
xlat
lret
jmp
sub
fwait
mov
repnz
lds
sub
jnp
add
push
sub
or
bnd
fsubrs
movsl
jmp
es
in
push
adc
repz
pop
dec
adc
repnz
adc
dec
sbb
adc
dec
cmpsl
pop
sub
nop
dec
pop
and
adc
and
pop
insl
pop
cld
ljmp
mov
bnd
mov
lods
cmpsb
mov
sbb
repnz
jns
mov
aam
mov
and
insl
push
repz
add
fisttps
dec
fcompl
cmp
pop
js
jo
imul
in
and
jle
adc
sub
push
in
test
fdivl
ljmp
pop
aas
in
jle
cmc
lahf
outsb
push
adc
mov
aas
sub
call
fsub
js
mov
or
push
popa
cmc
mov
es
js
and
addr16
fsubrl
out
aam
or
and
lods
leave
dec
jnp
mov
das
xor
outsl
pop
repnz
lds
xchg
adc
pop
mov
stos
outsl
mov
test
or
icebp
cs
iret
xchg
mov
popa
sub
sub
lods
pop
sahf
push
add
popa
add
xchg
lcall
xchg
mov
sbb
iret
adc
call
mov
xchg
xchg
or
inc
push
fs
je
add
shlb
push
repnz
mov
int
jns
mov
jecxz
push
in
or
loopne
mov
std
inc
ljmp
sub
mov
leave
daa
add
mov
ficompl
sbb
out
mull
imul
sub
fldt
clc
dec
shll
cltd
mov
or
adcb
jecxz
cli
push
loop
or
inc
mov
out
jle
lods
dec
mov
pop
mov
sub
cltd
xchg
jl
lock
es
insb
cmc
inc
fwait
daa
dec
sbb
das
test
fldt
cs
stc
mov
rclb
and
and
push
xchg
lcall
or
inc
cmpsl
cmp
insl
filds
dec
inc
out
jp
ljmp
stc
mov
adc
jnp
fwait
in
movsb
mov
or
aam
outsb
outsl
mov
pop
or
jno
fcomps
sub
ljmp
leave
add
ljmp
add
jecxz
lahf
aaa
pop
fiaddl
loope
mov
or
inc
daa
mov
jo
sub
stos
mov
inc
cmp
adc
arpl
in
or
sti
xchg
or
mov
fldcw
imul
mov
bound
mov
out
nop
sub
pop
enter
sub
dec
bound
cmp
bnd
cli
mov
leave
inc
outsl
stos
sbb
push
rcrb
call
js
xor
push
fcomps
mov
movsb
jge
icebp
sbb
cmp
es
out
push
add
mov
sub
mov
arpl
pop
dec
cmp
das
cmp
stos
pop
movsl
mov
xchg
sbb
sub
loope
fs
pop
call
xchg
adc
jge
popa
imul
pop
inc
das
inc
sbb
jl
daa
cli
push
ljmp
sub
lret
pushf
sub
xchg
xor
and
jb
or
repz
ror
inc
insl
out
sbb
bnd
addb
in
mov
test
adc
mov
shrb
aam
or
jo
xchg
sbb
and
or
pop
xlat
inc
call
push
sbb
push
add
fcomps
dec
clc
movsl
push
enter
xchg
jecxz
sbb
fnsave
add
jo
pushf
sahf
jge
jbe
sub
sub
inc
xor
jb
icebp
or
inc
jnp
dec
sbb
pop
leave
dec
int
lock
or
in
mov
and
add
test
or
out
add
jmp
inc
int3
ja
fucomi
stc
jp
imul
xchg
stos
sub
xchg
xchg
mov
push
mov
daa
push
lods
dec
jge
adc
pop
lcall
loopne
arpl
dec
cli
mov
fmuls
inc
nop
dec
loope
push
inc
cmp
fcompl
lods
orl
jge
test
sbb
mov
ss
mov
fsubrs
and
shl
lds
xchg
pop
mov
pop
mov
cmp
xchg
test
repz
xchg
add
ljmp
lahf
adc
dec
test
dec
pop
mulb
sahf
stos
leave
sbbl
loopne
jecxz
pop
mov
mov
sbb
sub
pop
fldt
addr16
fstl
out
adc
enter
mov
repnz
nop
incl
add
xchg
push
add
mov
pop
pop
xor
jmp
inc
pop
testl
dec
jecxz
and
xchg
mov
adc
sbb
and
or
mov
pop
or
inc
adc
insl
xchg
hlt
popa
sub
inc
sub
test
adc
pop
aad
test
mov
pop
push
cs
sti
sbb
call
sarl
jecxz
cwtl
xchg
mov
push
bound
nop
jbe
xor
jbe
push
sbb
adc
add
mov
popa
add
mov
sti
mov
mov
push
add
push
mov
out
mov
jge
movsb
or
mov
aaa
arpl
sbb
outsb
sahf
dec
mov
nop
mov
rclb
lods
adc
jne
xchg
xor
mov
adc
and
jnp
fs
out
dec
fldt
or
add
sbb
xchg
add
xor
add
push
jecxz
dec
push
negb
aam
cmpsl
repz
fadds
aam
and
iret
loope
cmpsl
aad
enter
xchg
iret
add
or
repnz
adc
cmp
inc
daa
cwtl
stc
push
pusha
jmp
push
and
je
push
lods
loope
xor
mov
shr
sub
or
adc
mov
call
cmp
mov
lcall
out
lahf
lret
xor
and
mov
xlat
out
out
push
iret
addr16
mov
movsl
dec
xor
movsb
das
mov
dec
mov
adc
dec
mov
cmp
sub
jmp
out
movsb
dec
or
adc
and
mov
xor
fisubl
cld
incl
int
pop
mov
test
xchg
cmp
mov
push
or
and
jecxz
testb
adc
loope
movsl
fwait
clc
mov
cld
dec
push
ret
pop
fs
push
repnz
sub
stos
cmp
cltd
imul
xlat
inc
out
test
mov
push
ja
and
repnz
aaa
mov
inc
sti
shr
pop
cmp
push
and
jle
ret
and
stc
sub
mov
adc
xor
fcmovbe
inc
mov
xor
xchg
int3
sbb
or
in
fimuls
hlt
mov
outsb
xor
dec
jno
fbstp
mov
mov
lds
fwait
push
xor
gs
jne
jmp
stc
repz
dec
sbb
mov
fdivl
jo
dec
scas
xchg
scas
arpl
adc
lret
repnz
lds
rol
mov
pop
mov
repz
pop
repnz
pop
js
push
push
movsb
dec
test
movsb
outsb
leave
pop
fstpt
inc
jg
data16
sarb
sbb
mov
mov
clc
std
imulb
sti
imul
sub
sbb
cmp
xchg
out
cli
loop
sbb
xchg
add
xchg
rolb
cmp
shlb
cmp
mov
inc
adc
sbb
jnp
addl
mov
aaa
jl
movsl
sub
inc
add
in
mov
xchg
in
jge
push
mov
and
jmp
repz
inc
xorb
and
push
inc
mov
lds
mov
cli
mov
adc
enter
scas
or
mov
aaa
sub
mov
subb
mov
jmp
inc
xchg
and
cltd
or
insl
jecxz
mov
sbb
adc
aam
lods
fxch
and
adc
cmp
xchg
add
out
jbe
jno
fimull
out
repz
jge
sbb
xchg
cmp
cmp
aam
sahf
das
loopne
bound
or
add
lret
mov
dec
sbb
cmc
insl
inc
repnz
or
daa
push
and
cltd
jae
mov
cmc
stos
aas
loop
xor
pop
stos
sbb
sbb
pop
nop
dec
test
dec
repnz
mov
sub
cmpsl
sti
sub
jle
pushf
push
mul
pop
leave
outsb
and
or
lahf
fnstsw
inc
ffreep
xor
fwait
adc
adc
jb
xor
es
push
xlat
fs
aam
push
and
sbb
ds
xchg
mov
lret
xchg
adc
mov
insl
jmp
adc
mov
add
ljmp
sbb
dec
in
jmp
mov
cmc
lret
push
es
adc
adc
call
adc
das
jle
inc
jnp
mov
shlb
or
bound
leave
sub
add
ja
adc
jmp
cmp
out
adcl
push
mov
cmp
mov
xchg
add
xchg
dec
cmpl
adc
pushf
cmp
pop
adc
fsubrl
mov
data16
push
sub
jno
cmpsl
stos
mov
scas
pop
fnstenv
lods
push
sub
mov
mov
adc
mov
ret
insl
cmp
lret
cmpsl
mov
test
popa
outsl
jle
push
std
daa
adc
sub
inc
ret
adc
and
int3
xor
jmp
test
or
push
insl
in
insl
xor
in
add
xchg
mov
imul
push
jp
sbb
and
adc
leave
inc
push
mov
loop
mov
daa
jge
and
aad
pop
sbb
mov
testb
mov
jge
fsubl
popa
lcall
hlt
and
sub
test
dec
push
in
sbb
mov
scas
or
addr16
repnz
xlat
mov
cmc
jecxz
pop
mov
jmp
out
ja
jbe
mov
or
cld
push
adc
int
add
sti
or
jnp
popa
inc
sbb
repnz
pop
mov
lods
mov
arpl
iret
inc
arpl
pop
dec
andb
call
stos
mov
add
cmpsb
arpl
outsb
inc
call
or
xor
pop
push
xchg
movsb
mov
mov
test
iret
adcb
out
imul
cwtl
cltd
in
scas
adc
push
xor
mov
outsb
xlat
add
sub
ljmp
mov
adc
clc
adc
movsb
imul
mov
cli
lods
adc
ss
cmp
pop
mov
mov
push
sbb
cmpsb
sbb
icebp
test
addb
pop
in
leave
xchg
stos
pop
adc
sub
and
jg
inc
fistl
popl
outsb
aam
jp
cli
loopne
dec
test
ljmp
pop
cmp
adc
push
adc
or
lcall
stos
shlb
test
fcmovb
fsubrs
test
cmp
jl
xchg
or
loope
push
dec
pop
mov
dec
sbb
sub
lods
outsb
pop
int3
sub
clc
inc
out
nop
sbb
pushf
adc
sbb
pop
fs
cltd
pop
mov
inc
lret
adc
cmpsl
addr16
lods
xchg
movsb
jg
shlb
adc
mov
lea
lcall
test
add
cld
add
in
xor
notb
adc
xchg
sub
filds
rcrb
and
stos
sub
idiv
in
aad
std
dec
incb
xchg
sub
stos
jno
pop
jge
je
les
xor
jne
rcl
pushl
das
bnd
lahf
ficoml
ljmp
into
jmp
aam
cmp
lret
aaa
sti
sti
or
pop
in
jmp
pop
movsl
icebp
fidivl
lods
icebp
mov
rcrl
adc
xchg
xor
inc
jle
lret
stos
test
sbb
sbb
addr16
shlb
xchg
xchg
ds
sahf
insb
js
mov
test
or
popf
adc
jns
out
sti
sub
mov
dec
jmp
insb
and
xor
dec
sbb
pop
jge
pop
sbb
dec
lcall
cmp
mov
add
lock
outsl
jecxz
adc
gs
cli
fmuls
aam
push
imul
push
jle
dec
add
movsb
push
pop
add
shlb
sub
div
cltd
cli
add
lret
imul
pop
cmpl
aas
or
adc
sub
jo
call
jo
lret
push
push
cli
stc
repnz
cltd
ret
or
xchg
adc
and
gs
mov
out
add
fs
cs
push
rolb
adc
adc
mov
pop
ret
xchg
push
dec
sub
pop
pop
pop
mov
mov
xchg
xchg
repnz
roll
inc
repz
aad
bound
sub
dec
mov
pop
mov
sub
sbb
ret
jnp
ret
xlat
mov
cmp
sbb
lods
pop
pop
aam
stc
xchg
xor
sahf
mov
or
bound
pop
fs
mov
repnz
adc
fstps
mov
and
add
popf
xor
cli
imul
dec
aad
pop
int3
movsb
sub
das
in
cmpsl
inc
pop
add
adc
and
adc
and
push
gs
jmp
adc
push
or
popl
repnz
mov
sbb
movsl
sbb
lods
lods
dec
jmp
jg
xor
lods
pop
and
cmp
pop
mov
inc
and
cmpl
js
lods
popa
mov
negb
xlat
xchg
and
inc
xchg
fimull
mov
scas
outsl
cli
ljmp
incl
push
test
inc
mov
cmp
stc
push
scas
cmp
adc
push
aad
je
mov
push
in
mov
push
je
sub
repz
cs
sub
xor
call
sbb
push
push
sbb
inc
in
scas
ss
lcall
pop
addr16
sbbl
sub
scas
outsl
movsb
and
and
push
stos
jg
sbb
or
mov
push
addl
mov
cltd
sub
push
test
add
insl
mov
fisubrl
add
notb
das
sub
decl
sarb
in
loopne
jg
xor
and
cmp
in
orl
stos
js
cmc
leave
xchg
mov
repnz
shr
sbb
jle
push
add
test
push
jge
fsts
xorb
cltd
dec
push
outsb
in
ficompl
xor
out
push
mov
mov
nop
sub
cmpsl
fs
xchg
std
hlt
rcl
popa
icebp
mulb
subb
jno
adc
in
and
xchg
and
pop
cli
jg
aas
push
aas
mov
lret
popa
push
jno
cmpsb
xchg
cmp
fnsave
aas
pop
repnz
cld
mov
lret
pop
test
nop
dec
push
inc
in
push
lock
std
movsl
rcl
xchg
inc
add
cwtl
mov
lods
jp
cmp
mov
popa
jnp
insl
sbb
cmpsb
cmp
sbb
stos
div
popf
fcomps
mov
fs
pop
mov
jg
outsb
jmp
leave
or
add
pop
jo
push
je
dec
ljmp
pop
test
dec
and
or
add
stos
lret
adc
or
mov
inc
cmc
mov
or
push
es
adcl
int3
pop
adc
cwtl
add
sbb
test
jnp
out
xor
sub
mov
aaa
adc
mov
test
adc
test
decb
inc
mov
cmp
pop
rcrl
mov
xlat
dec
fsubl
push
cmpsb
inc
inc
pop
into
fs
imul
push
mov
mov
push
mov
dec
or
mov
outsl
xchg
or
inc
cmpsl
xchg
insl
pop
sbb
inc
cmp
xchg
jg
imul
cmp
std
push
int3
popf
adc
xchg
mov
test
lcall
les
and
repnz
sub
cmp
sbb
jo
push
mov
bound
addr16
mov
sub
jne
addr16
je
lds
add
cs
ret
popa
fdivrs
dec
jno
movsb
es
fsubl
or
push
xor
and
jge
push
mov
fstpt
xchg
adc
repnz
mov
ret
add
pop
clc
repnz
adc
fldenv
dec
or
fs
arpl
adc
sub
mov
or
jmp
fidivs
imul
and
jmp
inc
lea
js
or
dec
test
adc
xor
or
rcrl
aad
sahf
lcall
or
es
inc
popf
dec
pop
push
or
repnz
add
cltd
cmp
lcall
arpl
adc
loope
js
les
xor
adc
xchg
add
or
xor
inc
or
push
jmp
xchg
outsl
ja
fsubrs
lea
mov
and
or
sbb
mov
sti
xchg
movsb
dec
int3
cmp
scas
fcoml
popf
out
inc
je
mov
inc
out
in
aaa
popf
mov
mov
les
ds
xor
in
loop
shll
mov
mov
cmpsl
fs
clc
nop
adc
lock
dec
mov
mov
mov
pop
std
cltd
jo
mov
mov
in
xchg
mov
in
mov
sbb
loope
cld
jecxz
inc
inc
lret
in
int3
mov
pop
scas
outsl
sahf
add
int
xchg
in
add
scas
int3
inc
push
or
mov
imul
and
and
test
mul
xchg
jne
nop
icebp
ret
call
arpl
adc
hlt
mov
xchg
fwait
inc
pushf
mov
repnz
nop
adc
xchg
sub
arpl
popf
sub
addr16
outsb
arpl
inc
xchg
movb
or
outsb
and
cltd
xor
xchg
push
loopne
repnz
mov
jne
push
and
lods
cmp
adc
inc
or
mov
test
push
fsubrl
aaa
xchg
mulps
push
xchg
rcrl
std
inc
pop
xchg
mov
or
outsl
sbb
push
test
xor
jo
cmp
fisubl
sub
iret
cmpl
inc
cld
cmpsl
inc
adc
xchg
add
std
cltd
test
gs
inc
lea
js
push
sbb
movsb
sub
jecxz
cmc
adc
jge
sbb
sub
test
pop
or
xchg
dec
mov
xchg
cmp
lcall
insl
and
jl
or
and
les
outsb
stos
ds
jecxz
inc
xor
cmp
insl
push
shlb
repnz
xor
mov
mov
and
cmp
push
push
cmc
aam
adc
clc
jo
scas
ljmp
addr16
adc
rcr
orb
mov
xchg
or
xchg
adc
rcr
fs
jle
call
movsb
and
lods
pop
mov
loop
outsb
inc
jp
pop
jecxz
mov
roll
in
popf
std
xchg
mov
loopne
imul
mov
testb
mov
test
es
mov
repnz
xchg
push
sahf
xchg
push
jp
inc
pop
or
out
inc
js
inc
xchg
loop
mov
adc
add
mov
ret
dec
and
and
xorl
jecxz
sahf
idivl
insl
mov
dec
out
fbld
xor
jnp
adc
loope
nop
jmp
xor
stos
clc
rcll
mov
into
loope
mov
xchg
xor
mov
push
cli
out
jecxz
jmp
xchg
inc
pop
rorl
adc
mov
xchg
sbb
sbb
sub
adc
sbb
adcb
in
mov
loop
adc
jb
test
das
mov
cli
xorb
xchg
fucomi
xchg
sbb
xor
pop
lods
mov
ljmp
jns
push
movsb
mov
cli
cmpsl
push
cmc
ret
repnz
pop
or
inc
lret
cltd
mov
push
xchg
lcall
adc
sub
sahf
jo
test
xacquire
cs
in
and
shll
dec
xor
xchg
test
ljmp
mov
mull
xchg
movsl
bound
push
inc
nop
push
mov
sti
into
fsts
inc
shlb
cld
sub
jl
jo
loop
push
adc
add
arpl
xor
xchg
mov
xlat
inc
add
out
push
es
push
neg
ficompl
jno
jmp
lahf
movsb
sub
inc
inc
cmpsb
addb
iret
lods
and
cmp
repnz
stos
ret
adc
loope
aam
xchg
push
push
ficompl
loope
data16
jge
xor
mov
pop
stos
inc
addl
adc
xchg
xchg
pop
pop
adc
loop
sbb
sbb
bnd
jo
or
jnp
adc
mov
mov
push
cwtl
or
repnz
mov
dec
push
push
xlat
ja
push
adc
lret
adc
icebp
lock
jmp
cmp
mov
lea
pop
jbe
push
pop
repnz
aam
imul
nop
and
sti
out
into
lcall
cltd
adc
orl
js
push
negb
push
mov
push
jae
sub
js
and
lds
or
fiadds
jnp
adc
inc
jae
pop
push
adc
les
repz
in
cmp
ror
fwait
js
stc
sbb
into
pop
out
add
call
mov
jg
mov
adc
xchg
aaa
jecxz
xchg
js
xor
xlat
pop
fdiv
jmp
mov
add
adc
aas
cmc
rcrb
sahf
push
pusha
or
cs
jl
fdivrl
insb
adc
push
gs
sti
mov
xchg
cwtl
inc
repnz
or
sbb
mov
sub
pop
idiv
mov
mov
ret
or
xchg
and
loopne
mov
cmpsl
inc
jle
pop
cld
sbb
xchg
sbb
xchg
mov
aas
imul
pop
dec
xor
push
push
pop
repnz
inc
sbb
mov
inc
nop
jmp
or
push
aam
movsb
enter
push
bound
icebp
cmp
das
xor
push
pop
enter
pop
sbb
addr16
adc
lret
mov
jae
xor
and
call
clc
in
and
push
mov
pusha
movsl
js
inc
arpl
mov
lcall
dec
je
cmpsb
sub
sarl
or
adc
out
fsubs
sbb
out
lret
lcall
mov
lock
cmpsl
out
sub
mov
or
xchg
mov
xchg
mov
mov
pop
test
cmp
ljmp
inc
ljmp
js
addr16
outsb
inc
fs
sub
dec
adc
addr16
hlt
inc
daa
adc
jecxz
push
sti
je
jge
jge
lahf
sarl
ljmp
mov
fsubrl
and
pushf
lret
adc
jl
push
push
xchg
mov
ja
mov
inc
mov
adc
in
insb
jb
fisubl
push
daa
fmull
and
nop
jle
jae
gs
push
cmp
mov
pop
aad
sbb
sub
pop
out
in
sbb
mov
inc
lods
mov
loope
pop
in
sub
pusha
imul
inc
add
mov
into
mov
sub
inc
sub
enter
mov
and
cmp
dec
mov
xchg
sbb
adc
scas
pop
adc
push
imul
xchg
mov
xchg
decb
out
int3
xchg
add
je
sbb
pop
pop
cld
popa
pusha
add
and
cli
push
mov
push
jmp
adc
jno
daa
repnz
sarl
cmp
adc
movsb
sbb
jmp
or
mov
enter
mov
test
inc
subb
sub
ja
les
loop
dec
in
mov
mov
push
pop
adcb
mov
leave
mov
pusha
js
decb
dec
lret
scas
or
wbinvd
mov
push
push
mov
lret
js
jp
stc
arpl
aam
ret
mov
push
lret
pop
bnd
or
xor
aas
sahf
repnz
push
sti
outsb
mov
dec
dec
popa
sbb
lds
pop
xchg
hlt
push
push
push
out
lret
push
sbb
mov
insb
jg
xor
pop
sub
popa
shlb
scas
sbb
pop
mov
clc
hlt
xchg
int
cmp
jecxz
or
scas
repnz
ret
dec
sbb
ljmp
add
or
fdivr
lcall
pop
movsb
or
lret
or
jecxz
ljmp
repnz
mov
popa
adc
mov
repnz
mov
and
sbb
xchg
imul
test
ljmp
filds
fcmovne
mov
insb
outsb
cwtl
outsl
in
sub
lret
xchg
in
adc
xchg
add
ret
mov
push
pop
test
test
aad
jno
enter
popa
add
adc
jns
enter
fdivr
mov
mov
lea
hlt
es
cmp
mov
repnz
xor
lds
mov
insl
add
cltd
and
push
iret
fstpt
and
mov
lods
insl
push
lds
mov
scas
and
cmp
lret
cwtl
sbb
sbbl
in
movsl
cmpsl
es
imul
and
push
shrl
pop
lret
js
das
cld
sub
adcl
sbb
or
subl
int
cmpsl
add
outsb
lret
dec
repz
dec
jecxz
push
inc
mov
movsb
jae
icebp
jmp
ds
and
or
mov
arpl
push
fstps
aaa
stos
repnz
inc
ljmp
out
ds
popa
inc
xlat
clc
xorl
xchg
cmc
cs
adc
mov
cmpsl
aam
pop
icebp
leave
or
add
xor
pop
std
stos
loope
lods
cmpsb
xchg
push
dec
xor
and
inc
and
push
sbb
repnz
cmp
pusha
push
mov
dec
inc
or
repz
xchg
insl
jo
sbb
insl
sbb
stos
jb
xchg
sahf
insb
cmpsb
test
xor
mov
sub
subb
dec
in
mov
sbb
sti
hlt
sub
sub
insl
test
insl
pop
push
or
loope
jmp
mov
ret
sbb
pop
jb
jp
test
or
pop
xchg
js
dec
fwait
out
btc
cmp
out
stos
push
push
hlt
xchg
ljmp
lds
mov
mov
jo
popa
js
xchg
inc
repz
xchg
jg
into
xchg
les
xchg
or
dec
and
fists
cmpl
jge
or
dec
push
xchg
pop
int
adc
hlt
push
cmc
cli
ja
add
insl
and
movsb
adc
sub
cmpsl
xor
sbb
les
movsb
dec
btr
dec
repnz
out
lcall
pusha
test
aam
or
push
stos
jle
adc
popa
cmpsb
rcrl
or
cmc
sub
mov
jecxz
filds
mov
addl
mov
dec
imull
lods
push
adc
mov
sub
add
sub
outsb
or
jnp
scas
cmpsl
inc
and
inc
pop
cmpsb
aaa
insl
mov
push
nop
lock
pusha
jge
mov
sbb
das
pop
mov
push
cmp
pushf
mov
pop
and
ss
mov
sbb
repz
aaa
int
sub
mov
cli
sub
mov
subl
mov
sbb
cmp
and
push
push
cmp
popf
into
cmp
ss
mov
ljmp
adc
xlat
mov
inc
xor
mov
push
pop
inc
sub
je
inc
in
in
adc
dec
mov
imul
pop
aam
arpl
popa
lods
lods
mov
sub
icebp
push
jo
arpl
inc
stos
adc
mov
sti
jb
iret
lret
push
jecxz
xchg
mov
sub
repnz
lahf
pop
or
mov
sbb
push
mov
jecxz
sbb
xchg
pop
or
inc
je
fwait
push
call
mulb
xchg
xchg
js
or
fidivl
loop
push
or
incl
pop
mov
ljmp
push
and
xbegin
inc
xchg
clc
jg
out
test
jns
mov
test
mov
mov
pushf
and
mov
or
cmp
repnz
pop
sbb
pop
bound
int3
enter
mov
xchg
sahf
stc
sahf
pop
push
stos
daa
clc
cmpsb
aam
adc
movsb
mov
mov
insb
stos
jl
push
add
jge
mov
sub
cld
test
mov
push
cmpsb
lock
orb
mov
xor
hlt
lret
insb
add
xchg
xor
jb
jge
pop
pop
in
outsl
inc
pop
cwtl
mov
or
pop
adc
xor
aaa
cltd
pop
ds
out
aaa
pop
stc
xchg
scas
movsb
lcall
inc
mov
sbb
pop
jecxz
jecxz
shll
mov
sbb
xchg
inc
fdivp
sbb
jge
mov
out
mov
sbb
inc
shrb
xchg
push
jecxz
or
adc
xchg
stc
jb
out
or
dec
hlt
dec
dec
mov
ss
loopne
andb
mov
or
xor
sbb
xor
insl
fsubrl
dec
pop
adc
popa
or
icebp
scas
xchg
and
mov
jbe
sub
adc
jnp
aas
pop
sahf
std
lock
sub
sbb
pop
clc
bnd
mov
fwait
mov
adc
outsb
push
jmp
jae
imul
xor
in
in
shlb
mov
mov
scas
shll
into
test
ret
add
xlat
arpl
jge
imul
ds
arpl
shl
insl
mov
bound
lods
sbb
aam
aad
push
repnz
cltd
dec
ret
adcb
js
or
sti
add
mov
jno
pusha
jecxz
sbb
bound
jne
jg
clc
jecxz
scas
cmpsb
lret
and
mov
adc
push
sbb
add
adc
xor
movb
lock
lahf
or
cmp
and
jae
pop
dec
in
pop
xchg
jae
call
movsl
pop
gs
jne
dec
adc
or
test
jp
adc
jns
sbb
out
or
in
xchg
hlt
cld
dec
cmc
movsl
inc
push
repnz
cmp
mov
pusha
mov
jge
adc
xlat
pushf
or
or
adc
imul
aaa
loope
or
pushf
js
xchg
push
xchg
mov
aam
arpl
mov
pop
mov
mov
rcrl
cmp
enter
lahf
and
mov
push
je
and
aad
pop
repz
jbe
lea
imul
repnz
ret
sahf
adc
pop
push
add
mov
inc
inc
jecxz
adc
push
test
rclb
movsb
or
dec
cs
mov
into
cmpsb
mov
adc
test
pop
xchg
mov
or
pop
aam
test
fwait
pushf
std
adc
jle
enter
dec
test
in
push
ds
loope
and
loopne
aad
and
loope
xor
inc
bound
mov
fs
push
das
mov
lods
sub
sub
and
imul
test
or
cli
dec
sarb
dec
xor
jbe
inc
outsl
sub
or
dec
inc
aam
sub
and
out
test
arpl
push
push
dec
stc
inc
leave
sbb
mov
add
lret
sbb
mov
cld
clc
fs
adc
sti
sub
stos
mov
cld
pop
mov
and
or
sbb
pop
adc
push
mov
sarb
sbb
ja
mov
scas
mov
and
lcall
mov
repnz
adc
xchg
sbb
mov
nop
jp
cmpsl
or
test
mov
push
scas
ret
js
lods
or
adc
sbb
icebp
pop
loope
es
bound
mov
push
dec
lret
mov
bound
cmpb
rcl
sti
iret
sti
pusha
xchg
push
inc
cmpsl
enter
cmc
sbb
test
jle
ljmp
push
xchg
outsb
sti
mov
push
cmpsb
ror
adc
push
scas
sbb
sub
pop
out
and
mov
subb
mov
xor
outsb
cld
aad
aas
test
mov
pop
jno
push
push
lods
pop
popa
inc
adc
mov
add
mov
jg
call
jo
mov
pop
out
mov
data16
and
sbb
jb
fildl
pop
aad
xchg
inc
xchg
adc
sub
push
rol
movsb
insl
cmp
xlat
push
lock
or
xlat
push
repnz
xchg
repnz
mov
ret
out
or
xor
loope
mov
inc
dec
sahf
mov
mov
movsl
jne
ss
add
jp
sbb
insb
inc
and
fs
lret
stc
mov
jg
sub
jb
cmpsl
popf
cli
jmp
pop
inc
leave
in
push
push
scas
cmp
dec
pop
cltd
imul
or
insl
call
mov
cmpsb
jmp
push
andw
out
xchg
dec
ljmp
jmp
mov
and
jne
push
mov
add
call
xor
cltd
jecxz
dec
mov
cmp
lea
pop
repnz
xchg
xor
mov
aad
push
xchg
cmc
loopne
bnd
add
sarb
pop
cmp
pop
inc
repz
lret
std
sub
pop
adc
loopne
jge
repz
add
int3
xchg
mov
push
push
jnp
movsb
mov
adc
mov
out
jge
xchg
repnz
cmpsl
fildll
scas
cli
arpl
clc
inc
push
aaa
mov
mov
xor
pop
sbb
push
or
fiaddl
jbe
scas
mov
and
in
mov
fs
popa
or
loope
ljmp
arpl
out
pop
imul
sub
subl
push
dec
pop
jbe
cwtl
nop
sbb
into
scas
aas
sbb
adc
mov
mov
push
inc
sbb
pop
jg
jecxz
or
mov
xchg
mov
mov
xchg
fldenv
push
loope
aad
mov
add
repnz
bound
xlat
and
ror
aam
push
mov
push
xor
mov
push
and
or
lods
lock
and
lock
jecxz
pop
dec
sub
test
cmc
xchg
push
cmp
mov
add
or
hlt
scas
and
and
xchg
andl
insl
popf
mov
fists
or
xor
push
pop
pop
mov
sbb
mov
mov
movsb
push
or
and
lret
sub
push
push
xchg
insb
pop
shl
je
insl
loope
loope
mov
outsb
mov
aam
repz
fcompl
lret
jl
or
jle
inc
frstpm(287
insl
pushf
addr16
sbb
test
mov
cli
test
psrlw
out
imul
mov
xchg
mov
push
int3
jno
push
jb
aam
vpsrad
daa
sti
insl
rcll
push
es
adc
and
es
add
push
in
dec
sub
loopne
mov
cs
or
adc
xchg
add
test
imul
dec
mov
test
iret
out
push
or
and
mov
dec
jge
mov
enter
xchg
sub
dec
cs
sub
push
fwait
push
test
adc
push
icebp
adc
mov
jle
cltd
jg
xor
cmc
add
push
lret
add
push
xchg
dec
inc
mov
sub
mov
xchg
testl
ret
iret
and
loopne
mov
int
mov
or
jge
adc
out
sbb
sub
mov
enter
test
sahf
push
out
fsubrl
in
andl
pop
ljmp
dec
sbb
mov
and
add
and
out
jmp
mov
gs
cmp
pminsw
in
adc
ljmp
inc
pop
repnz
sub
cmp
imul
rolb
push
fs
rolb
adcl
jno
xchg
dec
xchg
add
inc
xchg
xlat
cmp
push
loopne
ret
sub
xor
pop
pop
std
repnz
cld
jmp
inc
addl
cld
sub
popa
popf
repnz
xor
sarb
int
cmc
imul
jmp
lods
jno
jb
push
popa
fcomip
repnz
dec
push
call
int3
pop
fldcw
scas
jp
adc
int
ret
mov
pop
or
cmpb
lcall
mov
std
add
or
mov
out
stos
jle
repz
sbb
push
xchg
mov
loopne
xchg
add
dec
pop
test
daa
aad
sub
sbb
shr
lea
mov
fiaddl
arpl
push
mov
and
aam
adc
pop
sbb
dec
xchg
sub
fstpl
js
das
out
mov
decb
xchg
push
inc
sti
test
or
test
jbe
sbb
jmp
lds
addr16
adc
loopne
cmpsl
pop
or
dec
push
inc
fstpl
push
pop
fidivrl
sub
sub
sbbl
orb
pop
insb
in
loop
out
stos
shrb
push
insl
cli
scas
mov
mov
add
xchg
push
cmp
rorl
sub
je
push
movsl
push
cmc
cli
push
mov
sti
fs
and
mov
sub
jmp
test
jb
adc
outsl
punpcklwd
mov
call
adc
mov
out
test
sub
xor
add
cltd
cmp
int3
frstor
jl
inc
inc
xchg
push
cmp
mov
cmp
and
lret
sub
cmp
fprem1
xor
cld
jg
sti
and
shrl
lods
push
mov
mov
or
mov
xor
add
inc
push
adc
sbb
jl
je
movsb
mov
cmp
movsb
sub
xor
inc
dec
mov
fists
mov
pop
mov
ds
adc
xor
push
arpl
inc
je
inc
aaa
andl
ret
les
add
repz
and
es
stos
jbe
mov
mov
rorb
fimuls
sbb
leave
pop
push
or
add
outsb
adc
out
push
sub
jo,pt
sbb
pop
mov
or
mov
pushf
push
insl
icebp
addr16
sti
test
mov
leave
push
and
and
xchg
mov
push
ret
adc
add
push
xor
mov
clc
inc
jb
fidivl
out
arpl
xchg
dec
xchg
jge
rcll
ljmp
in
cmp
ret
rorl
imul
stc
lock
or
in
adc
adc
int3
push
lock
movsb
sar
dec
movsl
loop
roll
aam
pop
leave
ret
je
mov
jecxz
in
push
push
xchg
ja
xchg
fcompl
andl
es
int
sub
insl
dec
sbb
cmpb
mov
sar
in
or
dec
mov
inc
movsb
enter
cltd
and
repnz
xchg
repz
xor
int
push
mov
lahf
ds
arpl
mov
jmp
xor
fs
pop
adc
mov
dec
sbb
inc
loope
ja
in
xchg
aas
cld
adc
sbb
repnz
jmp
scas
cmpsl
inc
xor
out
jecxz
call
sbb
push
mov
pop
inc
idivb
adc
loop
pop
or
arpl
icebp
jecxz
out
adc
ficoms
rorb
iret
aaa
add
or
mov
mov
mov
fistpl
ret
out
jo
jbe
mov
dec
push
hlt
sub
pop
stc
mov
jnp
inc
cmc
outsb
cmp
inc
adc
inc
xchg
dec
fcom
push
test
repnz
leave
sbb
leave
mov
adc
xchg
repnz
xchg
sar
scas
sbb
testb
pop
xchg
xchg
cmp
mov
scas
sti
adc
roll
inc
mov
stc
mov
xchg
add
mov
repz
pop
add
adc
xor
mov
add
mov
mov
je
test
push
std
dec
add
aad
push
leave
insb
and
outsb
or
std
addr16
or
and
dec
lcall
pop
cmpsl
outsl
add
mov
sub
xor
inc
nop
adc
xor
and
ljmp
fmull
aas
xchg
adc
cwtl
mov
scas
mov
and
and
out
add
sbb
cmpb
and
sbb
fs
stos
outsb
and
or
jno
arpl
repnz
roll
sbb
pop
or
mov
movsb
fs
cli
cli
sbb
xchg
pushf
aad
testb
or
aam
pusha
sbb
adc
ret
aaa
dec
leave
add
mov
icebp
or
dec
scas
mov
jl
mov
xor
in
div
insl
cmp
sahf
ljmp
stos
dec
xorl
cwtl
and
xlat
ja
adc
add
pop
dec
adc
popf
xor
xor
ret
fidivl
repnz
push
pop
stc
sbb
mov
jno
sbb
xchg
pop
cmpsl
inc
jns
jo
imul
fiaddl
dec
or
adcl
add
sub
ror
enter
loop
and
repnz
push
mov
loope
hlt
xchg
dec
adc
xchg
rorb
lods
or
outsl
pushf
mov
pop
xlat
out
data16
sub
movsb
or
or
mov
push
or
repnz
mov
enter
mov
int
and
xchg
in
pop
xchg
or
inc
int3
cmp
addr16
ret
pop
shll
mov
loopne
sub
add
cmpsl
ret
mov
or
and
fimull
daa
js
sbb
inc
jo
les
cmp
jle
mov
push
pop
inc
aam
adc
jl
test
sub
jne
xor
mov
movsb
movsb
repnz
jecxz
jo
pop
lods
std
iretw
icebp
mov
repnz
imul
leave
imul
add
enter
xor
mov
lcall
mov
stos
fdivp
in
inc
leave
or
pop
mov
cmp
in
imul
push
mov
ljmp
xchg
and
repnz
aam
test
rorl
xor
ret
adc
insl
fisubrs
outsl
xchg
fwait
lock
sub
jecxz
mov
jnp
add
neg
cmpl
ja
fs
pop
inc
sub
push
jb
ja
cmp
fneni(8087
test
sbb
jge
std
cld
ljmp
xchg
inc
jmp
inc
xor
and
popf
dec
mov
or
testl
notl
xchg
das
aaa
adc
imul
int
cs
pop
clc
xchg
push
repnz
cli
js
mov
mov
clc
loopne
repnz
sti
pop
jmp
std
sbb
pop
pop
dec
sti
sbb
adc
jne
push
or
test
mov
jle
xlat
sub
aad
sbb
dec
mov
cmp
mov
icebp
xchg
test
rcrl
es
adc
mov
mov
mov
loope
repz
jecxz
jno
dec
xchg
cltd
addr16
sbb
jmp
push
dec
jbe
lret
fdivrl
cld
xchg
or
mov
arpl
dec
arpl
orb
dec
dec
int3
inc
arpl
inc
loope
push
je
adc
fnstcw
dec
adc
jnp
push
lret
dec
fs
push
test
ret
dec
aas
ficoml
sub
sti
je
jmp
xor
stc
or
movsb
andb
mov
movsb
mov
jns
xor
sub
mov
imul
sbb
jmp
mov
pusha
mov
jo
push
andb
xor
mov
push
add
sbb
out
adc
push
adc
push
xchg
outsl
pop
sbb
cli
aam
mov
adc
int3
jbe
and
push
jmp
into
and
test
ret
mov
push
lret
xchg
inc
mov
and
insl
add
jb
sbb
mov
pop
jg
insb
aas
out
in
js
lea
ljmp
or
fwait
sbb
cmc
fs
add
xor
mov
jns
lds
out
cmp
sub
cmpsb
xchg
sbb
push
in
add
xlat
inc
or
pop
cli
in
js
ja
push
adc
pop
and
push
sbb
repnz
mov
jge
test
mov
inc
mov
jge
xor
fdivl
sub
movsb
arpl
test
movsb
or
inc
push
mov
xchg
cmpl
shl
cmc
adc
das
jg
repnz
or
loop
push
mov
mov
rcl
test
inc
mov
jle
arpl
ja
sub
pop
insb
fs
push
mov
shrl
cmpsb
testl
cmc
lods
dec
ret
push
push
loope
in
mov
int3
sbb
dec
std
popf
cwtl
mov
mov
inc
mov
xchg
rcrl
popa
jge
cmc
loope
mov
add
jge
das
or
mov
call
and
sub
push
inc
inc
fdivrs
sbb
xor
ds
xchg
clc
mov
push
out
xchg
pop
push
adc
movsb
out
jp
imull
mov
mov
shrl
jo
loope
or
pop
aad
xor
pushf
sub
pop
pop
popa
xor
imul
test
dec
test
sub
mov
sub
mov
pop
jl
or
stos
sbb
adc
addr16
pop
push
pop
idivl
sub
pop
sub
mov
lds
pop
or
sahf
mov
mov
dec
cmc
je
daa
and
aad
movsl
fstl
ljmp
shll
jb
or
ja
nop
inc
insb
mov
xor
jmp
test
pop
jmp
xchg
jge
cmpsb
sub
mov
lret
mov
mov
gs
push
adc
cmpsl
sarb
jno
js
loop
push
popf
and
jg
fistpl
outsb
cli
inc
adc
or
sub
in
adc
ret
ja
adc
lcall
dec
xchg
pop
sbb
or
and
or
arpl
and
arpl
jne
pop
add
xchg
sub
leave
xorb
mov
out
xor
gs
cmp
sub
sbb
or
xor
dec
call
sub
pop
out
push
mov
inc
fldt
dec
xchg
and
jle
fisubrl
add
add
mov
lcall
jecxz
sbb
jle
movsb
xor
cmp
push
adc
mov
jecxz
ds
add
pop
cmp
cmpsb
jb
xchg
mov
pop
jl
cltd
xor
xchg
int
leave
andb
jle
lea
dec
push
jnp
pop
adc
ja
stos
mov
push
test
jl
mov
mov
adc
or
into
ja
or
dec
popf
mov
inc
pop
pop
add
sub
cmp
adc
mov
pop
jnp
ds
sub
loope
and
or
std
or
mov
clc
rcll
adc
call
add
ja
push
or
cltd
out
pop
hlt
cmpsb
mov
push
sub
or
popf
pop
sub
jno
mov
clc
repnz
pushf
je
sbb
mov
mov
push
sahf
add
stc
imul
repnz
inc
sbb
mov
dec
push
popa
aad
lret
mov
aam
sub
push
scas
push
cltd
sbb
pop
stos
push
push
cmp
push
or
cld
adc
lea
sbb
adc
mov
ljmp
addr16
stos
mov
or
push
cmpsb
or
mov
dec
xchg
pusha
clc
pop
cmp
add
js
add
push
sbb
adcb
dec
sbb
xchg
adc
fs
or
push
push
cmpsl
ret
outsb
add
movsb
scas
stos
jae
mov
cmp
cmp
cmp
inc
divl
shrb
push
or
push
fcomps
test
or
dec
fimull
imul
pop
imul
adc
in
mov
test
repnz
daa
xchg
cmpsl
pop
test
in
das
mov
call
xchg
mov
xchg
test
fdivrl
shlb
lods
xchg
and
rcll
out
pop
sbb
pop
inc
mov
lret
adc
stc
or
popf
push
push
sub
imul
cmp
int3
repz
sub
pushf
repnz
scas
sahf
lret
xlat
cli
stos
sbb
gs
inc
imul
jno
jle
xlat
sub
pop
add
sub
or
ljmp
vmovshdup
xor
jl
xlat
mov
push
cld
sbb
mov
test
out
push
pop
pop
lahf
mov
sub
shll
fsubr
scas
imul
stos
call
and
sub
sbbb
lods
loop
sti
mov
cmp
push
mov
mov
inc
jle
inc
pop
lea
cmp
iret
sub
adc
inc
dec
les
jl
lock
mov
mov
jo
aad
loop
cmp
ljmp
mov
rcrb
xorl
jbe
es
push
lods
adc
imul
pop
bnd
iret
ds
inc
hlt
ljmp
mov
shrb
xor
xchg
xchg
jl
pop
pop
rclb
cltd
in
test
orb
cmp
or
pop
shr
xor
mov
cld
cmpsl
adc
dec
xchg
enter
mov
mov
xor
aad
mov
dec
out
push
lcall
bound
out
mov
insl
pushf
mov
andb
mov
sub
outsb
rclb
mov
test
adc
cmovle
mov
push
out
shll
mov
repz
xorb
loope
dec
sbb
insb
clc
stos
add
les
arpl
fst
arpl
cmpsl
mov
sbb
mov
sub
jecxz
lcall
inc
sahf
test
outsb
cwtl
jo
sbb
fsts
loop
cmp
loope
push
push
hlt
out
pop
out
pop
mov
xor
pop
std
in
sbb
sti
sub
adc
push
fldenv
mov
js
lods
aaa
inc
push
outsb
ret
dec
popf
inc
push
ljmp
jno
cmp
int3
xorb
test
jecxz
insl
sti
adc
js
xchg
dec
repnz
xor
sub
test
rcr
cltd
jecxz
cmpsb
shlb
adc
xor
rolb
loope
cwtl
dec
into
incl
pop
jnp
xor
dec
push
iret
or
dec
arpl
es
mov
sbb
pop
cmpsl
jg
test
xchg
inc
push
test
mov
ljmp
jmp
xchg
std
ja
ret
sbb
or
rcrl
adc
or
enter
adc
sbb
push
mov
aad
mov
or
or
lret
mov
inc
mov
mov
pop
loope
movsb
ljmp
push
gs
std
sbbb
stc
dec
lock
sub
push
xchg
popf
inc
sbbl
fwait
cmc
dec
mov
add
mov
ret
imul
gs
and
pop
dec
pop
dec
adc
cmpsb
bound
jge
daa
jnp
aad
add
outsl
repnz
adc
aam
outsl
shrb
mov
scas
xchg
sbb
jns
cld
dec
push
adc
adcb
int
lret
cmp
cmc
mov
js
repnz
mov
icebp
sub
popa
sbb
dec
sbb
and
lahf
mov
movsb
sbb
test
je
cld
and
loop
popa
sbb
repz
insb
dec
pop
imulb
xchg
or
push
mov
push
mov
xchg
add
mov
pushf
cs
push
bound
or
insl
inc
mov
cmp
xor
cmp
mov
pop
cmp
mov
int
bsr
mov
mov
xlat
lock
repnz
xor
sub
push
push
inc
add
daa
xlat
scas
setge
xlat
mov
and
data16
xchg
mov
sub
jp
jne
mov
ss
movsl
inc
sub
mov
dec
add
push
sub
and
mov
add
test
jle
out
enter
inc
add
sbb
lock
sub
stos
lcall
dec
sub
or
push
cmp
xchg
aas
punpckhdq
fcmovbe
mov
ljmp
outsb
mov
in
repnz
pop
int3
and
cmp
lds
ret
sbb
sbb
jo
dec
shll
fdivl
mov
cmp
adc
insl
addr16
adc
testb
loope
xor
daa
cwtl
dec
xor
sub
daa
pop
imul
div
pop
in
sbb
fs
mov
inc
sbb
fmul
push
repnz
rorb
xor
shll
icebp
dec
popl
mov
adc
cld
and
ljmp
pop
mov
dec
xor
jo
pop
dec
data16
sub
shlb
in
xchg
inc
stc
pop
push
add
leave
cmp
int3
lahf
cmp
jp
adc
inc
aaa
xlat
sub
xlat
data16
test
dec
sbb
xchg
movsb
iret
test
cli
adc
or
div
lock
pop
cmp
xchg
idivb
roll
stc
ss
xchg
xchg
mov
xchg
sbbb
stos
mov
mulb
imul
sbb
out
aam
mov
sbb
jae
push
jmp
xchg
push
in
xchg
leave
and
mov
scas
pop
add
jecxz
pop
xchg
lret
xchg
outsb
or
and
cmp
insl
and
adc
pop
stc
andb
clc
or
xchg
addr16
push
mov
push
jle
mov
mov
inc
pop
movsb
dec
push
pop
cld
cmpb
jne
and
test
sub
adc
pop
rcrb
or
jmp
lret
lret
dec
sub
ror
push
xlat
push
aas
mov
fs
fdivl
outsl
push
pop
or
xchg
add
inc
mov
jo
xchg
adc
mov
mov
filds
adc
mov
or
cmpsl
pop
inc
in
popf
call
sub
mov
stos
shrb
mov
jecxz
insb
push
call
ret
xchg
call
jge
les
adc
pop
xchg
cmc
stos
in
xor
out
pop
stos
xor
jmp
jae
outsl
add
gs
push
aas
push
fdivr
icebp
jle
testb
pop
adc
es
cld
or
mov
mov
and
inc
adc
scas
xor
xchg
push
dec
adcl
cmc
cltd
setns
sub
sub
test
pop
sbb
xor
pop
sub
push
lds
pushl
add
jne
inc
and
test
add
sti
pop
xchg
mov
test
mov
xlat
cmc
xor
jno
test
das
movsb
nop
into
aad
jne
repnz
js
mov
jno
fstps
pop
and
imul
push
mov
add
jl
inc
insl
dec
fsubrs
mov
aam
lret
dec
cltd
insb
sub
pop
cmp
sub
stos
mov
out
inc
dec
imull
addr16
dec
addr16
ss
mov
or
fucomi
fwait
lds
stos
ljmp
mov
mov
das
xchg
add
pop
movsb
and
loopne
pop
ljmp
pop
fdivrs
inc
jge
insl
xchg
fs
or
outsb
cmpsl
das
add
imul
jmp
jo
cmp
jecxz
push
test
lods
mov
insb
repnz
xchg
test
adc
jge
sbb
arpl
push
adc
in
repnz
sub
mov
adc
or
mov
inc
and
push
pop
popa
iret
inc
xor
inc
and
xor
sub
shlb
call
xchg
scas
es
fsubl
jns
push
and
adc
mov
hlt
mov
mov
call
jl
lods
popa
jmp
pop
decb
je
mov
mov
cld
xor
mov
repnz
mov
cmp
jae
add
and
lret
cmpsb
mov
test
pop
mov
push
mov
xor
adc
cltd
std
std
add
sbb
js
mov
adc
sub
add
cwtl
cmc
in
xchg
pop
cmp
inc
add
imul
mov
mov
sbb
ljmp
ja
push
daa
or
inc
fsubl
dec
js
xchg
fildl
int
pop
std
mov
jmp
pop
or
mov
outsb
movsb
sbb
dec
std
push
jge
mov
and
push
leave
dec
add
sub
int3
les
outsl
notl
loop
mov
lret
test
repnz
jle
rcrl
push
xor
xchg
aas
pop
push
fmulp
sub
testl
jg
inc
fs
mov
xchg
jo
stos
repnz
fisttpl
mov
popa
sub
sti
adc
movsl
sub
mov
pop
fdivs
fsubrp
fldcw
popa
xor
test
cld
fcompl
adcb
lods
test
mov
push
iret
jae
mov
sbb
pusha
popf
sbb
aas
stc
fsubrs
inc
pop
mov
inc
jb
lock
pop
xor
pusha
out
cmp
adc
fnstsw
loope
mov
adc
ret
scas
movsl
das
je
pop
xorl
push
or
push
fnclex
stos
and
sbb
test
je
cltd
push
stc
call
sbb
lret
add
inc
insl
popl
roll
in
sbb
lods
sahf
fisttps
mov
adc
or
aad
out
dec
mov
test
sbb
mov
mov
cmp
out
add
imul
stos
xchg
or
dec
lret
cmpsl
adc
xchg
mov
rcrb
movsb
daa
jbe
mov
movsb
enter
repnz
xor
mov
cld
sbb
xor
in
mov
sub
mov
rcrl
push
rcrb
xchg
add
xchg
inc
adc
fwait
imul
sub
movsb
popf
cli
out
mov
insl
or
insb
popf
fcoms
sub
mov
xchg
inc
or
jmp
push
mov
push
jge
push
dec
push
jecxz
dec
xchg
xor
hlt
cmc
cmp
jle
lcall
test
hlt
xchg
mov
or
push
lods
pop
add
or
mov
mov
repnz
add
push
adc
mov
add
push
mov
fs
scas
pusha
jno
movsl
repnz
fwait
mov
dec
lret
fwait
cld
inc
cli
jecxz
adc
jno
das
aaa
int
cmp
repnz
inc
testb
mov
lods
mov
enter
aaa
stos
fidivs
sbb
rclb
sub
and
or
dec
mov
std
iret
out
les
and
pushl
in
in
out
mov
xchg
adc
lret
mov
mov
xchg
cmp
mov
xlat
jecxz
ret
mov
add
mov
or
inc
jg
sub
fists
in
xor
push
pop
cmp
adc
fwait
mov
repnz
outsb
mov
pop
mov
out
jecxz
xlat
mov
xor
push
mov
jecxz
inc
xor
xor
and
push
mov
mov
sahf
jecxz
cmp
mov
mov
inc
push
push
dec
fldt
call
out
cs
mov
sbbb
lock
stos
adc
mov
jmp
iret
in
sbb
cmp
lcall
or
int3
lods
cmc
push
mov
addps
mov
outsl
jecxz
arpl
jmp
insb
dec
dec
or
xchg
jb
arpl
adc
popf
in
mov
sbb
xchg
mov
adc
jge
sub
call
outsb
or
push
subl
sbb
pop
push
int3
push
adc
inc
sbb
mov
mov
loope
jge
out
inc
hlt
jl
repnz
sbbl
mov
test
popa
out
repz
inc
outsb
add
adc
sub
sbb
testl
push
add
push
mov
and
sbb
ret
cmp
mov
mov
test
jmp
dec
jnp
aam
adc
push
push
jae
or
scas
sub
lock
jg
fdivr
decl
mov
pop
test
cmp
mov
xchg
mov
bound
stos
push
inc
mov
jb
into
jl
pop
pop
mov
shrl
and
int3
push
outsb
loopne
mov
jle
test
repnz
adcb
inc
or
pop
sub
or
sbb
leave
sub
mov
pop
dec
jp
out
sbb
arpl
cmp
scas
jae
inc
push
xor
cmp
adc
push
and
push
outsb
jmp
inc
or
enter
popa
cmpsl
std
xor
pop
int
movsb
test
mov
sub
hlt
fnsetpm(287
std
pop
insl
nop
inc
push
sti
loop
or
loop
fsubrs
clc
into
push
and
fdivrl
inc
into
xchg
push
lret
repnz
outsb
pop
push
leave
and
repnz
addb
jp
test
jge
into
out
push
cmc
and
cld
pushf
out
push
mov
cltd
adc
xor
sub
add
inc
addr16
and
mov
and
dec
lods
std
mov
and
sbb
gs
xchg
jno
inc
arpl
mov
lret
shrb
xchg
mov
imul
clc
add
test
xor
out
rorb
rorb
xor
cmc
cltd
mov
scas
xor
fsubl
ljmp
sub
imul
lea
adc
repz
je
inc
sub
pop
push
cltd
mov
addr16
test
jo
fcomps
jge
push
mov
pop
iret
push
dec
push
ja
pop
sub
sarb
sub
mov
lods
dec
and
fs
inc
notb
ljmp
filds
jp
push
addl
mov
out
cmp
sbb
dec
cs
adc
fimull
xor
lcall
testb
popf
jns
push
mov
stc
int
push
je
ja
repnz
incl
in
cli
sub
mov
sbb
insl
add
or
push
nop
orb
push
mov
fsubrl
jb
inc
cwtl
push
lods
jle
xchg
xor
pop
iret
and
cltd
sbb
lods
les
mov
and
push
mov
jmp
imul
jno
test
mov
loope
and
mov
vmulps
mov
insb
or
jno
inc
mov
and
cmp
add
div
js
and
add
mov
js
jg
jp
scas
movsb
fisttpl
sub
adc
or
stos
or
jo
sub
sahf
push
ja
adc
sub
mov
ret
popf
ljmp
push
xchg
lea
dec
popf
les
fisttpl
shrl
lods
jl
out
test
cmp
push
mov
test
xchg
jnp
or
and
fmul
stos
call
outsl
inc
dec
mov
and
repnz
xor
shrb
adc
xchg
dec
test
aam
jnp
cmp
das
pop
inc
or
out
add
testl
and
xchg
push
int
xchg
imul
add
aad
aaa
outsl
gs
xchg
jg
ds
xchg
xor
cwtl
xlat
pop
push
push
jns
scas
jl
mov
adc
movsb
es
mov
arpl
std
ror
push
cld
in
adc
xor
add
mov
mov
in
movsb
mov
cs
xchg
ret
out
and
movsb
int3
add
sbb
mov
lods
out
icebp
sbb
push
call
sbbl
rcrl
iret
out
stos
je
sbb
mov
push
ret
scas
sti
cltd
cmp
mov
push
xor
mov
decb
and
fisubrl
mov
adc
ljmp
pop
sub
and
inc
loope
cld
ds
jns
mov
test
mov
push
xchg
adc
bound
or
repnz
adc
push
dec
mov
xchg
call
lcall
jb
or
call
push
xorb
cwtl
inc
iret
push
sub
mov
sbb
mov
mov
call
popf
mov
fdivp
arpl
aas
jmp
lret
inc
xchg
pop
sbb
or
outsb
cwtl
idiv
sub
addr16
nop
cltd
or
jle
lret
pop
test
mov
and
push
popa
sbb
bnd
sbb
xlat
xchg
aaa
sbb
inc
xor
stc
sub
add
fwait
mov
cmpsl
fildll
jle
mov
sub
jae
xchg
fs
sahf
push
cmpb
dec
jg
add
stos
loope
movsb
in
iret
jbe
cltd
sbb
cmp
clc
rol
mov
mov
fisttps
ljmp
dec
aaa
cltd
mov
div
push
adc
das
xchg
add
jnp
and
pop
jecxz
in
and
repnz
jns
xchg
adc
xchg
or
mov
add
push
cmp
pop
fimuls
jns
mov
dec
lock
dec
xchg
cmpsb
xchg
push
stos
inc
mov
fsubrl
testb
and
stos
cmp
or
sahf
inc
xor
xor
popf
inc
daa
fcos
jmp
movsl
cmp
pop
xchg
adc
cmc
xchg
popf
das
or
mov
sub
rcrb
pop
inc
ret
cltd
lods
adc
stos
pop
pop
push
or
xchg
dec
sbb
outsb
arpl
scas
mov
xchg
loop
cmp
ret
cmp
or
adcl
je
aam
rorl
pop
cmpsl
fadds
and
adc
xchg
cltd
add
cmp
daa
in
xchg
inc
or
sub
sbb
fs
adc
hlt
pop
sub
xchg
in
mov
mov
sahf
push
pop
fwait
pop
push
in
mov
sbb
push
lods
mov
lret
ficomps
jle
push
cmp
mov
sbb
mov
and
sbb
arpl
test
adc
mov
insl
push
insb
mov
or
popf
call
xor
mov
xchg
loop
pop
dec
imul
rorb
imul
lret
fwait
push
ljmp
push
enter
jmp
subl
outsb
and
adc
aam
inc
notb
adc
add
inc
cli
stc
insl
loopne
add
add
lfs
mov
push
add
enter
or
dec
js
iret
sbb
jle
jo
adc
outsl
adcl
add
cmp
repnz
sub
aad
fidivrs
decb
dec
repnz
xlat
mov
aas
cmp
rolb
sub
sbb
sbb
in
push
pushf
add
cmp
sub
jl
pop
lcall
push
sbbl
lcall
lods
push
lret
data16
sub
inc
mov
pop
jl
sbb
jecxz
or
push
ds
push
jle
sub
sbb
mov
test
jge
rclb
repnz
adc
xor
pushf
sbb
cmpb
dec
daa
in
dec
adc
repnz
lret
sub
dec
mov
sub
xchg
je
cwtl
or
inc
mov
nop
dec
cs
stos
dec
mov
call
ja
sbbl
repnz
and
and
std
imul
mov
add
mov
add
or
andb
or
cmc
push
leave
sbb
push
das
andl
or
pop
add
sti
subb
cmp
lret
aam
jno
sbb
incb
add
sub
in
xor
or
dec
ja
sub
sub
and
call
and
out
pop
test
cmp
dec
push
repz
and
or
scas
sbb
leave
test
in
xchg
scas
or
add
scas
mov
iret
inc
inc
stc
movsb
pop
pop
jnp
cmpsl
in
jb
insl
nopl
and
aam
xchg
adc
xor
mov
arpl
add
clc
or
test
cmc
nop
sbb
test
cmp
jl
aad
scas
add
test
fiaddl
cs
loop
inc
jp
out
mov
jle
jg
and
cmp
ss
cwtl
iret
int3
popf
shl
aaa
sbb
int
push
pop
and
inc
lds
push
mov
or
xchg
cmpsl
adc
pop
ret
mov
push
cmpsb
sub
arpl
aad
dec
inc
into
mov
in
leave
popa
jno
mov
inc
pop
ja
cltd
push
xor
xchg
and
mov
dec
mov
jecxz
mov
mov
fisttpl
and
cltd
xlat
adc
out
iret
inc
push
mov
fmull
push
sbb
iret
dec
adc
mov
clc
push
add
and
inc
enter
bound
in
pop
xor
add
jnp
sbb
adc
add
jns
push
gs
aas
cmpsl
loope
addr16
xchg
das
sub
sub
lret
popf
lock
test
shlb
nop
loopne
in
sub
ret
mov
lds
mov
mov
lcall
cmp
lods
or
mov
call
sub
push
sbb
cmp
adc
subb
and
movsl
pop
das
mov
push
inc
and
mov
xchg
arpl
or
ja
fwait
adc
in
push
jae
jo
xlat
ret
and
xor
adcb
inc
or
jmp
shlb
pop
jnp
add
inc
mov
mov
mov
add
and
xor
and
add
mov
xchg
out
pop
imul
dec
mov
popa
xor
mov
mov
addr16
push
and
mov
pop
bnd
pop
shlb
adc
test
lret
jns
or
pop
sbb
cmpsl
js
pop
sbb
movsb
jle
xchg
mov
outsb
push
mov
adc
dec
cld
sub
add
push
push
mov
roll
insb
mov
mov
popa
ljmp
or
lret
dec
xor
cmp
andb
dec
mov
insb
fdivl
pop
shlb
es
je
sbb
int
test
push
stc
test
in
mov
pop
mov
in
xchg
sub
and
sub
xlat
jno
lock
or
cmp
sbb
push
mov
xlat
shl
pop
adc
popa
cmpsb
or
jbe
out
repz
repnz
stos
pop
mov
mov
and
scas
out
movsb
xchg
or
stos
adc
gs
sbb
inc
daa
lret
sti
inc
sbb
pop
cs
out
ds
dec
jno
adc
negb
mov
bound
cld
shll
ret
dec
and
mov
mov
adc
add
push
out
push
push
jae
sub
and
daa
mov
pop
jp
pop
cld
sub
xlat
or
push
imul
lock
jne
push
and
dec
test
test
xchg
push
aas
je
push
dec
imul
cmp
pop
sub
fdivrl
xchg
popa
sbb
cmp
dec
xchg
cwtl
testl
repnz
lock
xchg
adc
test
push
popa
fdivr
or
ljmp
mov
mov
mov
sub
push
push
gs
cld
xor
xchg
sbb
imull
mov
or
ror
das
mov
ficoml
shrl
push
push
mov
repnz
or
nop
pusha
aaa
xor
ljmp
icebp
sub
sub
int3
sbb
hlt
jbe
aaa
inc
sbb
out
out
xor
gs
in
xchg
dec
sbb
ja
mul
inc
mov
mov
movsb
xor
stos
test
and
dec
jmp
cli
lret
scas
out
xchg
cmp
pushf
sub
repnz
or
sbb
inc
mov
add
xchg
pop
fwait
aam
fs
loope
imul
jb
ja
inc
dec
mov
push
sbb
fs
out
sbb
mov
push
add
inc
jb
test
in
cmp
push
dec
jecxz
push
int
mov
sub
jge
enter
xchg
cmp
insl
pop
fldt
push
and
mov
mov
lods
pop
ss
stos
mov
loop
loope
mov
aad
daa
ljmp
ds
aam
xchg
xchg
push
andl
pop
sub
inc
sub
aas
xor
repnz
mov
or
cmp
in
and
xchg
insl
out
mov
mov
ljmp
mov
sub
jmp
ds
xchg
inc
xchg
pop
call
icebp
cltd
mov
jle
pop
xor
out
repnz
inc
lds
cld
loope
xchg
add
daa
notb
pushl
lret
jecxz
sub
xchg
pop
sub
repnz
stos
or
test
pop
movsb
push
xor
nop
push
sbbb
loopne
mov
sub
cld
jne
insl
dec
cltd
lret
mov
mov
fs
mov
scas
fldcw
inc
xchg
fs
sbbb
out
mov
adc
je
mov
rolb
cld
pop
adc
and
jo
aam
jecxz
popa
insb
leave
push
sub
sbb
sarb
in
xor
ljmp
xchg
inc
mov
cli
add
jnp
mov
dec
sbb
sbb
jb
inc
scas
scas
push
adc
arpl
and
dec
and
test
sbb
inc
sbb
fdivrl
push
in
dec
xchg
scas
sub
orl
test
dec
inc
xchg
dec
push
aam
movsb
xchg
sbb
sub
and
mov
inc
mov
in
addb
es
dec
outsl
inc
lret
addl
stos
iret
dec
inc
xchg
inc
pop
inc
sub
ja
pop
js
icebp
adc
ljmp
xlat
cmp
mov
sarb
loope
lods
push
jecxz
sub
lret
pop
push
sub
jg
pop
aaa
stos
add
ds
lret
or
rcl
dec
cmpsb
jbe
call
ret
jl
cmp
jbe
add
scas
fsubr
mov
fsubl
jo
das
xor
enter
out
fbld
mov
fidivl
add
in
mov
icebp
jmp
inc
jecxz
outsb
and
repnz
xchg
lret
and
cwtl
clc
sub
or
push
xor
or
fcomps
mov
mov
push
or
jle
adc
jno
daa
sbb
int3
mov
stos
dec
add
push
xor
push
outsb
pop
popa
or
sub
pop
sbb
into
jmp
sbb
mov
repnz
notl
inc
xchg
pop
lock
jb
rcrl
jg
mov
pop
mov
dec
sbb
and
adc
int3
push
insb
sbb
push
repnz
iret
lods
insb
sub
mov
call
in
dec
mov
pop
inc
fcoml
jmp
mov
sbb
inc
shrl
sub
fsub
adc
xchg
cmp
mov
jne
adc
pop
dec
sub
popf
cli
pushf
adc
cld
mov
lea
push
jecxz
cmc
enter
int3
pop
cmp
fdivrp
push
adc
outsb
or
inc
jecxz
aas
push
ret
adc
cld
push
sti
xor
cmp
push
and
mov
jno
pushf
and
and
pcmpgtb
add
fdivrs
xor
daa
push
scas
dec
dec
adc
adc
mov
inc
aad
xchg
adc
mov
leave
jb
cld
lds
test
or
ret
and
jne
mov
ds
add
icebp
aam
cmpsl
test
sub
out
scas
fnstsw
mov
jmp
and
xlat
push
mov
push
and
sbb
sahf
adc
mov
int3
mov
dec
stc
pop
and
inc
fsubr
jae
dec
subb
adc
shl
push
sbb
inc
nop
sahf
lret
int
hlt
xchg
sahf
add
inc
pushl
cmpb
cmp
aas
sti
mov
ss
hlt
arpl
fimuls
inc
dec
jge
sub
push
jmp
sub
cltd
sub
je
out
jle
push
or
mov
test
arpl
xchg
daa
ljmp
ret
mov
outsl
mov
fwait
inc
rolb
sbb
sbb
shrb
cmp
pop
lahf
adc
push
and
mov
mov
sarl
jae
and
pushf
jecxz
push
fnstsw
mov
or
xorl
lods
sbb
fnstenv
or
lods
cmpsl
xor
mov
push
sti
dec
les
mov
and
aaa
adc
pusha
ret
sti
cmp
jl
nop
adc
pop
sub
movsb
push
outsl
add
add
cwtl
and
or
sbb
xor
or
mov
aas
outsl
lods
lcall
pop
mov
int
push
aam
sub
inc
test
and
or
mov
js
cmc
add
mov
xchg
mov
or
or
mov
repz
call
loop
sbb
and
push
out
call
mov
aaa
test
adc
jo
lret
cmp
decl
push
orl
pop
and
mov
or
cltd
sbb
pushf
dec
loop
dec
test
push
dec
push
test
dec
dec
mov
mov
popa
sub
shrb
fs
ja
scas
shll
pop
sub
jns
xchg
pushf
leave
or
mov
popa
repnz
sbb
sub
outsl
negb
or
lret
jmp
fdiv
fadds
push
xchg
mov
sub
sub
js
mov
aaa
xchg
shll
mov
push
push
ds
cs
insl
arpl
int3
xchg
mov
add
jle
mov
insl
jae
dec
test
scas
cmc
xchg
or
lds
sub
sar
bound
imul
out
out
or
xchg
jne
js
xorl
pop
inc
clc
jb
jo
aaa
and
jmp
jp
mov
dec
xchg
adc
add
pop
lret
je
or
and
repnz
xor
xchg
test
or
sub
cltd
scas
inc
mov
out
dec
mov
stos
nop
ds
or
inc
outsl
adc
cwtl
jg
insl
cmp
shrb
mov
mov
inc
lcall
arpl
loop
lahf
mov
fdivl
mov
xchg
insl
mov
push
fildl
adc
and
adc
jmp
fnsave
mov
or
cmc
jle
sbb
outsl
mull
pop
ror
cli
pop
pop
repnz
lcall
xchg
mov
mov
subl
aaa
mov
cli
call
cli
rcl
ss
lea
orl
nop
sbb
imull
pop
fiadds
adc
and
std
or
clc
push
leave
cltd
mov
cmp
and
pop
push
orl
sub
insl
pusha
inc
sub
pop
lcall
jae
xchg
lds
lret
ss
test
mov
inc
sbb
loope
loopne
cmp
popf
nop
decl
mov
xor
or
and
jmp
aaa
pop
or
pop
add
fisubl
fidivs
jl
stc
out
or
insl
sub
lea
xor
jg
jnp
adc
test
or
or
cmp
mov
cmp
add
inc
mov
lock
jae
jno
fstps
insb
mov
xchg
and
inc
enter
stos
sahf
inc
pop
sub
dec
mov
jbe
and
test
mov
adc
mov
les
les
aad
ljmp
ja
sbb
and
cmp
pop
lock
mov
insl
sbb
xchg
inc
test
pop
xor
ja
js
mov
xor
adc
repz
or
jl,pn
loope
out
shlb
or
push
pop
sub
mov
popa
insb
and
xchg
movsb
mov
sbb
jo
lds
dec
imul
cmc
push
mov
daa
adc
lret
daa
dec
add
in
and
out
inc
gs
jge
mov
lret
or
adc
repz
stos
sub
lret
mov
xorb
xor
and
icebp
sub
cmc
mov
or
and
aam
out
aaa
inc
cli
sti
ja
sbb
sub
rol
fs
test
lock
fcmove
or
xor
sub
inc
adc
add
and
push
cmpsl
adc
testb
jns
cmp
push
mov
sub
enter
pushf
dec
push
mov
push
ret
cmc
ja
push
pop
push
mov
adc
loopne
les
ljmp
xlat
inc
ss
mov
imul
cmp
push
jmp
push
sub
pop
dec
test
cmpsl
daa
in
scas
ljmp
ljmp
out
js
dec
scas
ret
negl
rcrl
mov
in
or
mov
jge
xchg
test
push
mov
mov
adc
xor
mov
int
cmpsl
repnz
and
jbe
adc
insb
push
jnp
dec
mov
inc
je
xchg
push
or
push
loop
jmp
repnz
test
jle
cld
or
fistpl
orb
hlt
push
popa
mov
jmp
dec
push
aad
mov
xor
or
xor
ret
inc
les
adc
sbb
mov
jg
fmuls
push
sbb
test
std
repnz
or
mov
mov
xchg
test
inc
mov
xor
mov
sti
cwtl
add
sub
fs
pop
enter
ss
test
push
or
es
adc
jmp
mov
or
or
inc
ja
fwait
push
iret
xchg
in
xor
or
jmp
mov
ffree
sbb
pop
jb
jo
inc
sbb
push
inc
iret
jl
les
jecxz
insb
sub
inc
movsb
jb
jmp
repnz
sub
sti
fstps
movsb
pop
fs
add
sbb
dec
dec
sub
mull
daa
fs
sub
int
jns
pop
inc
push
mov
jmp
pop
arpl
jmp
jl
push
call
sahf
fildll
stc
lret
cwtl
adc
add
inc
adc
cmpsb
rorl
fnsave
jns
iret
pop
jl
ljmp
xlat
mov
jnp
int
jg
push
inc
jb
cwtl
sub
push
ret
dec
gs
or
and
mov
push
jbe
push
call
repnz
and
imul
aam
imul
inc
stc
loope
or
mov
sub
xchg
dec
mov
mov
mov
and
pushf
outsb
pop
xor
pop
add
ds
jg
push
xchg
icebp
bnd
stos
sbb
js
sti
stos
adc
mov
or
sbb
xor
xorl
push
and
notl
jge
dec
xor
mov
cmp
test
adc
cltd
repnz
xor
pop
or
mov
jmp
mov
mov
stos
cmpl
or
inc
rsm
push
jecxz
lcall
lds
sub
das
xor
fucomip
inc
ficompl
inc
sbbl
mov
dec
stos
adc
leave
mov
adc
jecxz
add
sub
lret
repnz
add
dec
xchg
in
fnstcw
popf
sub
xchg
dec
cmp
dec
or
or
shl
xorl
or
icebp
fildl
insl
clc
adc
push
jne
sbb
leave
mov
inc
push
daa
lret
xchg
adc
js
popf
jg,pt
out
inc
ljmp
loope
ja
xchg
imul
pushf
cmp
sti
add
ja
push
fs
aam
fadds
mov
sbb
loope
jmp
add
lcall
adc
fdivl
or
sbb
xor
dec
fsubl
xor
ret
mov
adc
add
pop
in
lret
mov
cmpsb
or
ljmp
xchg
imul
nop
push
xlat
out
dec
lret
cwtl
jbe
daa
in
jnp
rcll
push
popa
mov
or
imul
mov
jne
and
or
popf
sbb
jp
jge
inc
repnz
lds
ret
mov
mov
pop
test
sbb
movsl
mov
daa
jns
mov
xor
and
xchg
imul
sbb
cli
xor
cltd
jmp
adc
dec
outsb
cs
out
sbb
in
cmp
lret
inc
bnd
or
jmp
mov
mov
mov
in
xor
test
xchg
sbb
xor
push
mov
leave
out
shll
nop
adc
adc
mov
add
push
ja
adc
add
dec
sbb
hlt
xchg
or
cmc
negb
ss
cmp
push
adcl
aam
push
push
add
adc
dec
out
popf
fistpll
std
mov
pop
scas
leave
popf
sub
cltd
orl
aam
xor
out
jmp
add
mov
lret
aam
and
jns
adc
xor
fsubl
sub
and
outsb
mov
sbb
and
aam
enter
call
shr
fs
mov
sbb
xchg
scas
pop
call
pop
stos
push
xor
ljmp
in
test
loope
mov
loop
aad
or
sahf
mov
lcall
lret
adc
xlat
ss
fs
jge
sbb
gs
aaa
jg
push
jmp
pop
pop
cli
push
push
in
jno
loop
rolb
cmp
adc
jle
jecxz
mov
fs
mov
or
cltd
out
pusha
mov
jo
xor
push
leave
xchg
jg
cmp
test
fs
jae
popa
jl
lret
cmpl
cmp
adc
mov
test
insb
frstor
leave
lret
ljmp
push
push
sti
or
in
xchg
sbb
iret
adc
adc
cwtl
movsb
adc
pop
push
xchg
fs
leave
or
pop
inc
sub
xchg
cld
pusha
push
inc
fs
and
inc
pop
sub
adc
cwtl
adc
xor
icebp
pop
shrb
shrb
neg
icebp
ds
pop
dec
gs
imul
fadds
lret
and
je
ja
das
jecxz
sbb
les
or
xlat
mov
pop
mov
bound
sub
sbb
push
xlat
ret
ja
xchg
dec
mov
and
mov
sub
jge
push
and
jg
and
jno
bound
jge
dec
andl
push
fisubrs
sarl
movsb
lret
mov
and
mov
aam
add
test
repnz
mov
or
or
scas
out
cmp
lahf
pop
jl
dec
push
mov
ja
iret
repz
adc
stc
lea
repnz
insl
sub
out
mov
or
std
cmpsl
pop
or
adc
jo
pop
or
push
movsb
lods
jo,pt
cmp
dec
mov
jbe
jmp
sbb
xor
cltd
jl
jl
lds
push
or
lcall
add
sbb
ljmp
das
fwait
xchg
fmul
call
ljmp
push
xor
or
imul
lods
es
push
lret
inc
orb
add
mov
push
cmp
idivl
or
cli
repnz
pop
lret
cmp
jae
add
xchg
push
or
in
arpl
or
jp
mov
jnp
mov
testl
add
repnz
inc
je
repz
addr16
mov
adcl
mov
lcall
cli
mov
and
lahf
cli
ss
dec
call
mov
or
mov
shrl
mov
add
leave
or
push
push
or
adc
push
popa
add
cli
pop
or
lds
lds
inc
inc
push
movl
repnz
jnp
lahf
mov
lret
jmp
push
cmp
cwtl
push
pop
das
orl
jno
pop
adc
shlb
test
repnz
out
divl
loope
aam
mov
adc
adc
mov
jl
repnz
adc
addr16
push
or
sub
fcoml
add
mov
repnz
mov
pop
inc
std
repz
sbb
mov
bound
daa
test
int
bound
push
fcmovb
scas
mov
sbb
iret
add
test
enter
insl
addl
mov
adc
pop
dec
pop
cmp
lret
xlat
adc
jb
ljmp
and
or
jae
aad
repz
adc
repnz
and
sub
out
sarl
adc
rclb
test
movsl
xor
cld
orl
jle
decl
and
sbb
sbb
popa
popf
fdivl
dec
xchg
pop
sbb
mov
push
icebp
jo
and
sub
adc
jne
lcall
bound
cltd
rolb
pop
mov
add
repnz
data16
mov
push
xchg
mov
dec
repnz
sub
or
mov
arpl
test
mov
mov
hlt
push
xor
sub
inc
jl
fistps
xor
dec
dec
ja
lcall
and
aas
cltd
aam
cmc
cmp
inc
stos
stos
repnz
sbb
std
dec
and
sub
out
sbb
cmp
arpl
iret
repz
lds
jmp
jnp
fcomps
out
jno
jae
out
sub
jmp
pop
adc
fldenv
push
jae
mov
cmp
adc
adc
jecxz
pop
or
inc
arpl
and
inc
test
aaa
ret
sub
test
sub
sub
fsubrs
decl
mov
mov
jle
loope
popa
iret
jle
sbb
add
mov
adc
xorl
xchg
ret
pop
das
cli
xchg
push
sti
sub
sub
inc
in
cmpsb
inc
sbb
sbb
rorl
push
push
mov
jle
jae
sub
loope
sub
sbb
adc
fldenv
js
xchg
jmp
icebp
and
mov
lods
jnp
cs
add
repnz
xor
push
adc
sub
mov
outsb
jl
xor
clc
sbb
mov
test
daa
or
mov
adc
cmp
dec
lahf
in
pop
mov
xor
leave
jge
scas
mov
mov
dec
inc
ret
jecxz
jae
outsl
aaa
or
das
push
js
andb
cmp
sahf
push
push
inc
xchg
adcb
repnz
or
imull
addl
mov
or
cmc
ljmp
cli
adc
test
mov
shr
jg
insb
push
pop
inc
cld
leave
fisubrl
cmc
add
movsb
mov
add
fwait
aad
lea
daa
mov
push
popf
mov
mov
movsl
adc
stos
jbe
pop
xor
xchg
mov
sar
xor
fdivr
sub
in
cmp
roll
xor
mov
ret
push
jbe
clc
jae,pt
scas
loope
stos
out
and
cmpsb
xor
insl
jmp
adc
loopne
sub
sahf
xor
jmp
scas
std
jmp
xor
into
cld
jmp
and
pop
iret
mov
add
adc
dec
aam
iret
sbbb
jp
or
jmp
loop
out
add
or
lods
dec
and
add
and
sub
mov
add
lods
sbb
pop
enter
lea
mov
inc
push
sbb
sbb
in
cmp
arpl
xlat
xchg
adc
dec
int3
mov
mov
mov
or
sub
aas
jno
lcall
sbb
cmp
ljmp
and
fmul
pop
mov
sbb
dec
rep
dec
in
xchg
jae
rorb
xchg
and
scas
decb
fsubrs
sarl
repnz
aaa
stos
cmp
pop
cmp
adc
jge
jb
mov
xor
add
shlb
xor
mov
lret
fucomip
cli
and
cltd
test
add
in
sub
mov
xchg
test
sub
dec
outsl
push
imull
dec
or
mov
test
loope
cwtl
rclb
and
push
xor
or
ljmp
fcmovnb
add
ljmp
xchg
mov
and
push
dec
repnz
add
pop
sbb
sbb
jg
push
pop
or
cld
imull
cmp
mov
inc
xorb
and
mov
pop
fisttps
test
es
xor
enter
and
pop
sbb
mov
movsb
lds
lret
adc
scas
cmp
call
fsts
aaa
out
daa
aas
aam
test
mov
or
pop
and
dec
popf
jbe
adc
pusha
aad
jno
data16
jns
cmp
push
test
mov
dec
psraw
xchg
out
cmp
rcrb
sbb
lcall
mov
jne
mov
jecxz
mov
mov
jge
push
cltd
stc
push
je
xchg
and
stos
hlt
adc
pop
cli
pop
inc
sbb
inc
cmp
jp
fildll
pop
gs
in
sub
pop
and
dec
popf
insl
lcall
adc
add
add
mov
inc
mov
jno
and
xchg
xchg
arpl
leave
add
push
dec
repnz
pop
enter
sub
and
sarb
push
jb
in
les
jmp
lock
adc
adc
out
inc
sub
ljmp
adc
mov
mov
xchg
dec
jne
ljmp
call
lret
pop
movsb
shlb
cld
mov
adc
push
push
lret
call
nop
hlt
sub
sub
inc
pop
push
mov
xor
push
sahf
push
cli
mov
lods
and
sub
mov
pop
mov
mov
jecxz
loope
js
mov
add
xchg
mov
push
push
inc
loope
or
push
and
loopne
sti
mov
pop
add
dec
or
and
sbb
cmp
movsb
mov
cmp
inc
and
aad
or
negb
cs
lcall
sbb
cmpsl
or
mov
push
jno
sbb
or
inc
mov
in
jg
or
cmpl
pop
in
dec
pop
not
mov
fdivrs
jl
lods
rolb
mov
pop
sub
push
out
push
pop
sub
add
repnz
cmp
mov
xchg
xchg
xor
lret
inc
sub
mov
sub
shll
jmp
mov
dec
lcall
je
push
push
push
testb
out
addl
stos
enter
popa
inc
mov
xlat
cmpsl
je
add
cltd
jmp
sbb
or
es
cmp
cmp
les
push
sbb
nop
xor
icebp
mov
xchg
adc
xchg
lret
mov
sub
leave
dec
jbe
or
pop
dec
cwtl
hlt
movsb
push
mov
sub
leave
icebp
out
sbb
popa
sbbl
sbb
sbb
jb
insb
add
dec
and
jb
hlt
xchg
in
cmpsb
xchg
sti
loopne
loopne
sub
sbb
imul
int
lock
pop
sbb
je
mov
or
mov
mov
mov
and
jmp
std
in
and
pushf
and
jb
scas
popa
je
clc
test
sahf
data16
push
push
rcrb
outsb
push
cmc
imull
out
mov
fnsave
outsb
sbb
arpl
dec
mov
stos
mov
mov
push
imul
cli
mov
repz
shll
repnz
outsb
jbe
fisubrl
push
inc
insb
dec
pop
sub
lcall
or
add
test
cmpsb
lret
lods
mov
or
inc
jmp
xor
outsb
mov
lahf
lss
stos
sub
imul
sbb
pop
inc
loope
push
lret
jmp
test
fmuls
daa
inc
in
push
mov
add
es
mov
mov
cmpsl
and
call
ljmp
xchg
lcall
cmp
sbb
daa
addb
mov
inc
enter
adc
out
popa
fsubl
sub
les
testl
into
jmp
inc
or
popf
fucomi
loop
aam
inc
outsb
lea
sub
mov
repnz
and
bound
jo
sub
jp
shlb
pop
mov
sbb
sub
or
push
xor
mov
push
dec
cmp
and
dec
push
xor
add
xchg
xchg
adc
jle
int
call
adc
add
jle
popa
xor
outsb
cmpsb
cmpsl
inc
out
out
stc
dec
push
xchg
test
push
mov
adc
repnz
push
adc
mov
in
out
xchg
jecxz
mov
popa
adc
enter
jnp
popf
xchg
int3
andb
cld
dec
push
repz
test
cmpb
xlat
mov
and
test
js
aas
lods
jle
push
adc
mov
cmpsb
ds
lcall
dec
or
or
in
idivl
dec
pop
mov
mov
insl
push
icebp
rorb
and
and
pop
idiv
jecxz
mov
dec
out
popa
add
test
and
test
dec
mov
jle
mov
out
jp
imull
lea
mov
xor
xor
mov
mov
sub
or
repnz
test
xchg
push
add
mov
aad
iret
mov
test
lods
shr
jb
jne
sub
outsl
jl
cltd
test
cmp
dec
sbb
and
sub
or
imul
jmp
sahf
mov
mov
mov
pop
mov
pusha
xchg
jge
ljmp
ljmp
xchg
and
or
dec
test
repnz
flds
test
call
push
into
mov
xor
inc
test
test
dec
sti
outsl
aaa
jmp
adc
cmpsb
push
mov
mov
jp
dec
add
jb
or
leave
shrb
popf
and
cmpsl
cmpsl
cltd
idivb
add
lds
pop
imul
loop
jmp
push
mov
out
aaa
inc
sbb
cmpsl
out
lret
xor
scas
lret
and
mov
adc
push
sub
testl
lds
fcmove
out
jo
int3
push
arpl
dec
outsl
push
shlb
sub
mov
loope
adc
sbb
jecxz
fwait
xchg
xchg
sub
mov
mov
lcall
xchg
mov
and
mov
call
pop
je
push
push
gs
int
xchg
insl
int3
mov
jl
sbb
mov
cmp
adc
cmp
xor
loope
or
xlat
fs
loope
mov
or
adc
jnp
or
cltd
pop
mov
stos
dec
inc
adc
mov
jle
outsl
and
lock
pop
and
and
sbb
inc
scas
sub
mov
jno
sub
and
out
xor
push
jg
cmpsb
push
insl
mov
test
in
sub
lret
je
addb
mov
ror
push
ljmp
cmpsl
pop
jl
inc
int3
fadds
push
inc
sub
in
out
data16
idiv
ret
pushf
inc
push
faddl
daa
mov
sbb
addb
repnz
push
pop
jl
and
test
popl
aas
leave
jge
mov
jb
inc
or
pushf
jmp
dec
test
mov
push
xor
xchg
jno
add
cmc
and
mov
and
push
scas
push
jg
sub
int3
mov
or
cmp
push
xor
jecxz
xchg
cld
pop
adc
dec
shrl
addr16
jle
scas
cmp
jecxz
adc
je
mov
repnz
pop
in
aas
mov
add
mov
aam
adc
mov
loope
pop
hlt
scas
bound
scas
and
jmp
cmc
repnz
lock
cwtl
sub
int
cmp
push
xor
sbb
mov
mov
inc
subb
cwtl
mov
and
es
pop
std
sbb
dec
or
and
jne
int3
lahf
mov
adc
icebp
xlat
inc
je
pop
out
mov
mov
lcall
je
or
xchg
add
inc
fs
and
mov
shll
or
aam
ja
jle
lds
and
pop
sbb
mov
pop
lret
push
gs
xchg
xchg
js
pusha
jp
js
cmp
push
jg
outsb
jmp
sub
fistpl
cmpb
or
stc
or
outsl
xor
mov
nop
sbb
outsb
mov
sbb
adc
jmp
dec
push
cs
popf
mov
es
rorl
jg
jns
xchg
lea
cmpsb
hlt
push
jns
mulb
mov
adc
fs
outsb
fiaddl
das
nop
cmc
xor
sub
cmp
pop
ljmp
adc
push
les
and
lds
or
and
and
ficomps
rolb
div
and
out
push
aaa
lods
roll
cmc
push
aaa
push
xchg
jne
out
imul
mov
stc
dec
and
adc
inc
loopne
scas
xchg
or
jnp
cld
jg
xchg
subb
repnz
test
cmp
xchg
dec
fs
ds
jecxz
mov
inc
push
hlt
or
lods
dec
negl
mov
jecxz
sub
and
add
jp
and
sarb
sbb
sar
stos
jmp
xchg
in
adc
xlat
jle
sarb
paddb
push
mov
stos
inc
scas
ret
addr16
xchg
std
mov
xchg
fcompl
or
gs
adc
arpl
adcb
xor
inc
mov
mov
cli
stc
iret
lock
cwtl
cwtl
lret
inc
push
sub
stc
ss
mov
movsb
cmp
test
or
cmpsl
repnz
jno
fldt
xor
jmp
stc
mov
inc
jmp
jecxz
and
push
scas
mov
stos
jg
or
pop
arpl
test
mov
outsb
dec
les
cmpsl
out
cli
dec
jle
std
and
mov
pop
mov
popf
cs
lods
mov
sbb
imul
xor
aam
xchg
pop
loope
stos
mull
mov
fadds
jl
jns
sbb
popa
idivb
adc
rcll
sub
jmp
or
jl
stos
je
or
xor
sub
jbe
jmp
push
mov
or
push
scas
jg
sbb
pop
xchg
jno
xchg
push
xor
sbb
sahf
mov
add
ljmp
subl
int3
push
cmp
fldenv
stos
or
popa
sbb
sub
cmpsb
xchg
push
cmc
adc
or
push
jle
dec
push
addr16
shrl
int
mov
aam
iret
leave
push
push
cltd
dec
mov
inc
jnp
and
jno
mov
sbb
push
sub
lret
ljmp
test
push
pop
lcall
bnd
push
inc
movsb
pushf
xchg
mov
jae
xor
sbb
jp
aam
adc
cmp
out
jmp
or
shlb
fs
call
mov
loopne
xchg
xchg
insb
jo
sub
or
jo
or
addb
mov
pop
out
jnp
jo
push
pop
test
in
jmp
sti
cli
test
push
xchg
or
add
je
hlt
xor
dec
inc
xor
add
mov
sbb
clc
pop
pop
adc
pop
sbb
test
xchg
xor
insb
sub
xlat
push
dec
sub
sub
out
out
pop
jb
push
mov
icebp
push
mov
movb
sub
xor
xor
xchg
rcll
xchg
orb
pop
jnp
mov
mov
xor
test
ds
lret
leave
pop
sbb
cmpsb
addr16
sub
jnp
aas
jp
push
or
pop
adc
cmpsl
andl
nop
xlat
cmc
int
mov
mov
push
mov
dec
movsb
mov
xchg
ret
repnz
dec
clc
mov
mov
jge
xor
pop
dec
cmpsl
out
add
insl
pop
inc
test
mov
push
jne
pop
aaa
test
ss
adc
ret
divl
lods
rcl
sti
dec
inc
jns
jo
jp
dec
lods
fistl
sub
std
xor
repnz
repnz
sbb
pop
test
ret
sub
mov
jnp
push
imul
inc
xchg
ljmp
lcall
jno
dec
or
imul
xlat
enter
jmp
adc
lds
stos
sub
in
pop
and
adc
mov
push
inc
hlt
test
cli
movsb
cmpsl
arpl
pop
dec
int3
mulb
stos
add
es
cmpsl
in
sti
jle
sarl
pop
jns
bound
test
push
pop
iret
lods
sbb
pop
rolb
jge
jbe
add
repnz
fwait
mov
adc
repnz
lods
dec
inc
sahf
sbb
outsl
rclb
and
or
arpl
add
xchg
fimull
pop
fadd
cltd
mov
xchg
push
ret
stos
in
cmp
outsb
in
leave
sub
lea
repz
loope
dec
dec
test
dec
pop
ljmp
sub
sub
push
stos
in
cs
xchg
lret
jns
dec
filds
cmpb
lret
sub
cmc
mov
sbb
add
jecxz
rcrl
shrb
movsb
lret
push
cli
sbbb
jge
adc
jns
fstpt
mov
adc
psubq
outsl
enter
imul
sub
scas
mov
cli
loopne
mov
xor
sub
lods
xor
xchg
loopne
mov
aam
xchg
inc
imul
mov
jne
int3
and
push
imul
jle
mov
sbb
addr16
into
lret
fcomps
pop
repnz
xchg
sti
test
add
sub
jne
fdivrs
adc
arpl
sbb
and
inc
arpl
push
cmpb
out
add
adc
add
mov
push
jg
jb
adc
mov
mov
shrl
jecxz
jge
and
cmp
xchg
lea
cltd
in
xchg
jecxz
cld
das
xchg
lret
and
mov
std
popa
pushf
test
pusha
pop
repnz
mov
call
jmp
cmp
lcall
arpl
pop
scas
pushf
cmp
sbb
clc
repz
or
mov
inc
inc
outsb
push
xor
fs
sar
shrb
xchg
xlat
aas
adc
mov
fcos
add
xor
dec
je
into
and
stos
adc
ret
pop
mov
mov
xchg
in
insl
sti
xchg
cli
idivl
imul
stos
sub
ret
loopne
repnz
aad
cld
sbb
and
xor
daa
dec
push
jg
shl
or
and
dec
xlat
test
icebp
jno
inc
fs
lds
mov
mov
pop
sti
sbb
sub
inc
jns
cmpsl
repnz
pop
daa
sbb
dec
insl
push
pop
mov
xor
adc
jge
sbb
xchg
mov
or
add
adc
aas
hlt
xchg
fdivrp
xchg
popf
mov
lret
sub
inc
popa
jo
cltd
or
and
sbb
aaa
mov
lds
jecxz
iret
mov
cwtl
ret
mov
xchg
jecxz
adc
sub
jnp
ficoml
sub
xchg
movsb
add
fidivs
popa
int
or
nop
andl
jecxz
xor
sub
in
loopne
mov
outsl
repz
rcrb
rol
mov
jge
inc
mov
mov
sub
lock
adc
ret
js
inc
call
lock
jmp
adc
aad
mov
cld
fildl
leave
enter
inc
dec
xor
aas
jno
adc
push
push
leave
mov
jge
push
std
add
sub
icebp
repz
mov
adc
cld
pop
gs
cmp
insl
cmc
pop
dec
mov
movsb
fcmovne
hlt
mov
sbb
or
or
sub
jge
push
test
sti
pop
sub
push
fldl
mov
jmp
cltd
aas
mov
or
fs
xor
jne
ljmp
movsb
fdiv
jmp
cwtl
pop
in
repnz
adc
jp
nop
dec
loope
pop
xlat
xchg
out
pop
jne
cmpsl
and
xor
or
or
xchg
add
inc
inc
sub
or
hlt
or
cs
ljmp
mov
lods
inc
repz
push
or
cmp
sub
sbb
mov
push
jl
add
scas
push
lock
add
add
mov
pop
imulb
xchg
test
cmp
sub
and
leave
dec
mov
out
jg
and
pop
add
add
pop
add
inc
sub
popf
iret
mov
add
inc
mov
nop
cltd
sub
inc
ret
jge
mov
push
fmuls
test
jmp
ret
clc
out
sti
mov
jne
jl
mov
mov
jmp
jo
sbb
loope
push
lods
jle
push
mov
shl
adc
cmc
xor
orb
mov
loopne,pn
add
push
jmp
ja
sub
or
cld
dec
daa
mov
push
ds
mov
push
mov
xchg
mov
lods
xchg
xchg
pop
sbb
jns
dec
insb
fs
scas
ret
and
mov
sbb
mov
out
nop
mov
mov
sbb
mov
andb
ljmp
test
fisttpl
enter
mov
jb
in
xorl
cmp
dec
sbb
push
xlat
sbb
stc
xor
mov
sub
nop
push
inc
je
lods
mov
es
mov
lcall
jb
xor
adc
icebp
dec
cwtl
inc
mov
and
mov
sub
mov
insl
stc
hlt
cmp
add
lods
andl
sbb
add
rcrl
push
mov
in
push
shrb
aad
pop
addr16
insb
push
lcall
dec
inc
mov
cltd
adc
insb
jb
imul
repz
scas
cmp
addr16
clc
repnz
ret
cli
inc
call
imul
sti
mov
pusha
les
and
lcall
sub
sbb
das
test
inc
adc
ljmp
cld
dec
lret
dec
add
cmp
xorb
jp
or
xor
shrl
add
cmp
imul
repnz
or
and
add
xchg
mov
aas
push
inc
cwtl
mov
maxps
mov
roll
jmp
pop
mov
decb
popa
push
inc
insb
and
and
and
arpl
popf
ret
add
out
sbb
ljmp
mov
ss
out
sub
shr
jg
ja
mov
or
adc
pop
pop
scas
repnz
cmp
ss
dec
scas
jg
jmp
pop
adc
sub
inc
jmp
fwait
sub
rcll
arpl
in
iret
xor
mov
imul
mov
pop
subl
or
shlb
cmpsb
mov
sbb
inc
or
enter
push
inc
cltd
mov
push
daa
repnz
dec
xor
push
icebp
cmpb
gs
movsb
adc
push
xchg
dec
aaa
dec
je
sub
aad
pop
jecxz
adc
shll
dec
into
fwait
mov
inc
js
cld
pop
inc
mov
and
pop
int
dec
sbb
enter
and
pop
mov
cmp
test
jo
xchg
gs
push
ret
and
mov
mov
mov
or
mov
or
cmp
sub
cld
arpl
jns
cmpsl
sub
js
cli
adc
cmp
sti
fisubrl
push
cmpsb
and
jmp
jb
jp
aam
lods
into
je
in
cmp
aaa
lcall
arpl
mov
out
jmp
jp
dec
shr
xchg
cmpsl
nop
roll
sbb
push
jb
je
orb
in
cmpsl
arpl
push
or
fwait
push
jno
shrl
inc
push
daa
jno
push
inc
sbb
xchg
jle
test
daa
sub
add
xchg
mov
bound
out
jno
dec
or
jmp
mov
imul
repnz
pop
es
repnz
rorb
mov
xchg
cwtl
lds
mov
jne
ffree
subl
mov
bound
or
mov
nop
push
fisubrl
ret
push
xchg
push
sarb
jmp
pop
jecxz
mov
repnz
sub
inc
cmpsl
mov
sbbb
sub
cltd
or
cmp
sub
jg
mov
add
movsb
dec
ljmp
push
repnz
and
in
mov
push
in
mov
and
mov
xor
push
add
jecxz
std
insl
fs
cld
inc
and
jmp
pop
mov
jmp
push
add
xorb
lcall
out
mov
repnz
aad
fcmove
add
sbb
out
stc
sub
imul
arpl
and
in
repnz
test
push
subb
push
jne
cltd
jmp
xlat
ret
xor
mov
inc
ficoml
mov
dec
mov
inc
or
inc
inc
outsl
dec
mov
fs
push
sarb
dec
xchg
adc
enter
pop
push
popa
adcb
bnd
mov
scas
pop
and
jns
push
pop
sub
sbb
pop
leave
popa
jno
aaa
xchg
test
xlat
or
push
clc
adc
lds
lcall
xchg
push
add
mov
mov
jl
jp
arpl
xor
push
mov
lock
lock
aaa
es
ljmp
jecxz
lods
out
rol
xchg
std
mov
cmpsl
jecxz
sbb
sub
std
sbb
pop
inc
cmp
mov
xor
mov
ss
push
stos
lods
xchg
ds
outsb
xlat
pop
rorb
movsb
mov
daa
pop
lret
lods
and
mov
adc
and
fisubs
adc
ds
xor
push
fsubrs
lods
push
repnz
scas
mov
jns
sti
push
ret
jp
adc
pop
fstpl
xchg
lret
es
mov
mov
dec
adc
sub
das
clc
inc
cli
sub
fs
lcall
mov
cmpsl
push
enter
inc
mov
adc
jmp
ret
stos
adc
xchg
push
arpl
sbb
out
notl
pop
bound
mov
arpl
fwait
pushf
or
push
add
or
inc
mov
mov
fs
adc
clc
or
popa
push
xchg
push
sub
imul
mov
inc
popf
fstp
mov
pop
jae
enter
mov
xor
lcall
cwtl
in
subl
mov
pop
mov
mov
rorl
mov
push
and
mov
pop
std
sbb
xor
push
push
dec
inc
imul
lock
dec
xchg
mov
insb
mov
insl
and
and
sub
jnp
add
jne
adc
fs
lret
add
loope
sbb
adc
mov
loope
add
mov
jbe
push
xor
xlat
mov
pop
cltd
sub
sub
dec
rcrl
cmp
int3
jne
nop
lea
scas
cmc
daa
mov
call
into
lret
fwait
imul
jb
xchg
add
test
sub
and
pop
inc
adc
pushl
xchg
in
sbb
mov
push
scas
in
dec
arpl
ja
jecxz
test
mov
cld
pushf
jns
test
xchg
jb
loope
push
data16
fisubl
jns
push
je
sub
lret
out
push
or
cwtl
jno
xchg
pop
xchg
loop
mov
xchg
imul
fs
test
push
fwait
aad
adc
xchg
jge
mov
sub
lods
xchg
push
inc
mov
xchg
sub
dec
mov
dec
scas
stos
fcoms
insb
call
dec
cmp
push
cmpsb
movsl
les
adc
or
mov
cmovs
int
xchg
push
mov
jno
std
xchg
lcall
mov
jne
test
out
mov
sbb
movsb
adc
lds
or
dec
inc
xchg
jmp
jb
jmp
dec
add
xor
fcomi
stos
adc
mov
sbb
mov
adc
insl
xor
add
add
fadds
cmpsl
mov
stos
inc
in
mov
or
js
mov
ljmp
xchg
jb
xacquire
mov
repnz
mov
test
lret
stos
or
int
jmp
iret
movsb
adc
outsb
rorl
test
cwtl
test
jb
mov
popa
dec
sub
mov
loop
in
std
andl
mov
adcl
lret
lds
dec
mov
jno
arpl
inc
ror
inc
stos
js
neg
nop
sub
add
aam
pop
mov
inc
pop
xchg
and
add
loope
aaa
inc
lods
push
and
jecxz
scas
cmpsl
cmp
xor
pop
enter
or
rolb
and
adc
adc
dec
xchg
inc
inc
ret
pop
mov
je
dec
mov
and
push
push
insl
mov
and
sti
xchg
ret
adc
subl
repnz
insl
test
movsb
aaa
ret
inc
fucomi
repnz
out
jp
mov
or
xor
push
loope
call
cmc
mov
sti
aas
xchg
jbe
push
push
push
mov
pop
out
rolb
popa
and
fstpt
aad
mov
incl
adc
push
pop
test
mov
and
sbb
xchg
pop
mov
mov
stc
sub
out
sbb
aaa
sbb
sub
fs
and
jg
cmp
push
arpl
wrmsr
insb
and
mov
mov
repnz
push
dec
sub
std
and
js
pop
outsl
push
outsl
and
outsl
cltd
mov
cmpsl
pop
adc
sub
mov
rcrl
push
repnz
nop
adc
xlat
or
in
mov
jecxz
dec
out
jb
pusha
es
ja
fdivs
pop
sub
xchg
add
insb
mov
je
arpl
dec
ret
sti
dec
jge
popa
mov
cmp
das
ja
cli
idiv
mov
scas
fidivrs
mov
cmpsb
push
dec
jne
mov
cmp
push
pop
out
xchg
cmp
aad
push
and
add
lods
push
add
pop
mov
mov
cld
cmpsb
xchg
pop
outsl
clc
adc
mov
mov
mov
adc
stos
xor
test
xlat
insl
jmp
loopne
push
and
mov
xor
jne
shlb
int3
dec
rorb
jge
ljmp
sbb
jmp
inc
loope
andl
pop
les
rcrb
xlat
xor
sbb
stc
lret
jne
mov
lcall
jecxz
cmp
pop
out
daa
dec
xchg
popa
mov
mov
and
pop
push
dec
sti
mov
repnz
and
inc
inc
loop
aas
sub
add
push
and
sub
jnp
loopne
sub
je
rorl
dec
mov
aad
xor
pop
mov
mov
jno
imul
or
and
push
jmp
icebp
push
sub
stos
mov
loope
inc
jae
ret
mov
out
mov
lret
insb
icebp
dec
dec
arpl
sbb
negl
imull
mov
stos
and
jmp
fimull
notl
pminsw
or
or
pop
push
jmp
sub
mov
jmp
in
mov
ljmp
inc
cmp
sbb
pop
xchg
xchg
dec
dec
faddl
push
movsb
add
sbb
jo
ja
rorb
fdivs
pushf
or
aas
insl
arpl
bound
lret
inc
adc
insl
outsl
test
push
loope
dec
dec
and
enter
adc
fcomi
inc
or
or
and
adc
test
mov
adc
icebp
in
mov
in
call
sub
aad
xchg
mov
mov
mov
idivb
outsb
cli
sub
aam
int3
mov
adc
or
in
icebp
lret
iret
adc
inc
sbb
or
data16
fs
aad
in
xor
xlat
add
sahf
cltd
add
jbe
out
mov
sub
xor
pop
addl
cmpsl
cmc
push
int3
shrb
pushl
add
repnz
xchg
xchg
mov
adc
int3
hlt
in
enter
repnz
leave
sbb
inc
dec
dec
bound
loop
clc
mov
in
sub
stos
aas
and
out
push
out
aaa
insl
lea
in
sbb
inc
push
and
idivl
mov
or
repnz
lods
adc
jbe
cmp
arpl
bound
sbb
bound
insb
imul
dec
jo
sub
lock
aas
adc
mov
subb
ret
mov
push
loope
push
inc
stc
or
repz
pop
cmp
xchg
in
cwtl
int
std
push
out
jge
pop
mov
addr16
repnz
scas
fnsave
inc
lcall
sub
pop
outsb
add
jge
mov
sub
push
dec
outsb
pushf
movsl
mov
in
add
add
lock
leave
test
mov
sti
lock
in
mov
jg
sub
stc
adc
movsb
adc
cmpsl
and
dec
adc
jno
fcompp
repnz
inc
xor
addb
sbb
fnstcw
dec
mov
pop
pusha
pop
add
mov
mov
push
int3
add
cli
and
movsb
sbb
and
scas
or
into
cmpsl
lock
test
mov
mov
jp
xlat
xor
repnz
fistps
push
adc
lea
data16
pop
in
hlt
fdivs
dec
lcall
mov
pushf
pop
movsb
mov
pop
test
cmpl
inc
and
shlb
lock
ds
lahf
cli
outsl
aad
cmp
das
mov
sub
gs
mov
fidivl
pop
dec
jb
cmp
and
aad
loope
insb
jge
clc
dec
and
cmp
pop
mov
testb
mov
dec
push
jnp
mov
test
mov
in
adc
inc
iret
pop
sar
test
mov
iret
inc
daa
mov
dec
aam
es
sub
lods
in
testb
test
sbb
repnz
cli
sub
pop
sub
sbb
cs
std
or
sbb
fs
repnz
outsb
scas
push
cld
mov
out
and
sbb
movsb
js
cwtl
jmp
push
arpl
or
dec
aas
nop
xor
cwtl
and
mov
aas
mov
cld
mov
sub
outsb
sahf
sub
in
xchg
jmp
imul
cmp
cmpb
xchg
insb
les
mov
out
call
repz
insl
mov
mov
bound
lret
cmp
fisubrl
xchg
push
sub
jb
xchg
mov
and
into
mov
faddl
adc
sbb
mov
xor
and
mov
mov
int3
mov
adc
sbb
arpl
jbe
xchg
mov
arpl
rcrb
and
mov
sub
and
jle
jo
mov
lea
movsb
push
lret
mov
dec
push
xchg
and
jecxz
test
push
inc
notl
xor
dec
repnz
movq
pop
aas
cmp
push
fs
in
dec
test
or
sbb
jnp
and
cltd
mov
call
push
test
mov
and
popf
mov
mov
scas
add
add
mov
push
sub
aad
lods
mov
inc
sti
or
insl
clc
sbb
out
aas
or
hlt
xchg
push
cmpsb
adc
sbbb
sbb
repnz
test
mov
mov
hlt
test
xchg
push
cwtl
xchg
xor
lret
cwtl
or
cmp
mov
jl
sub
imul
xchg
pop
cmp
jo
mov
add
xor
pop
add
adc
xor
xor
or
cltd
jg
movsb
and
adc
push
int3
jmp
arpl
add
sbb
xlat
ds
popf
sub
popf
mov
ss
push
test
jmp
hlt
loop
mov
vunpckhps
lods
dec
inc
iret
or
xchg
jb
fbstp
fimull
sub
mov
fmull
shrb
fistl
cmp
or
aas
mov
or
sub
sub
daa
or
push
xchg
dec
fidivrl
xor
iret
lds
rcrb
outsb
xchg
stos
inc
adc
push
push
iret
lds
ret
and
sbb
pop
stos
fldt
xchg
cwtl
fldenv
sub
pop
loope
in
mov
cmc
rolb
negb
ds
push
pop
push
jmp
out
sub
decl
stc
inc
pop
add
pushf
das
add
mov
lret
and
pop
popa
gs
sbb
arpl
lret
cmp
addl
and
jp
push
mov
push
insl
add
arpl
int3
push
or
mov
decb
imull
insl
arpl
cs
aam
mov
pop
inc
je
and
clc
inc
sbb
in
push
inc
repz
scas
mov
mov
add
jmp
scas
push
add
cmpsl
mull
push
jg
mov
sub
or
push
pop
jge
int3
cmc
stos
add
jg
movsl
cmp
scas
cmp
leave
call
jmp
loopne
test
mov
pop
hlt
mov
repz
mov
shlb
jns
push
mov
cmp
scas
mov
mov
push
insl
dec
mov
aas
pop
ljmp
es
loopne
cmpb
int
lods
sbb
add
sub
fcmove
leave
mov
mov
js
loope
push
arpl
in
test
aad
adcb
and
out
out
imul
es
sbb
mov
adc
mov
leave
jne
unpckhps
cmpsb
sbb
mov
mov
mov
xchg
sub
popa
xlat
cli
pop
pop
not
sub
pop
or
sbb
outsl
mov
adc
cmp
pop
mov
cmp
mov
jge
lods
rclb
xor
arpl
push
adc
jb
adc
dec
lcall
jle
adc
mull
jae
or
shrb
dec
mov
rcll
xor
vmovdqa
repnz
mov
out
mov
leave
out
ret
or
mov
inc
adc
clc
sar
popf
pushf
insl
adc
insb
je
inc
jecxz
es
mov
xor
jb
mov
mov
enter
inc
sahf
fcoml
cmp
ret
ret
push
cltd
or
pushf
and
ja
and
mov
mov
sub
loop
outsb
ljmp
push
adc
adc
iret
lods
or
adc
add
inc
out
mov
lea
jno
cld
or
scas
jmp
insl
xchg
ret
adc
cmpsl
push
mov
sbb
xor
negb
push
add
dec
aaa
fwait
repnz
repnz
mov
push
jnp
xchg
pop
add
dec
and
int
test
aaa
test
mov
jne
repnz
lods
sbb
sti
incl
inc
popa
mov
mov
sarb
push
imul
repz
xchg
loope
add
mov
or
outsl
cld
cmp
rorl
fnstsw
xchg
push
mov
jbe
push
add
push
dec
popa
test
push
ss
loope
fs
pop
stos
and
rcl
bnd
jmp
dec
mov
test
adc
adc
adcl
and
stos
cmp
shrb
movsb
xchg
mov
out
insb
mov
repz
arpl
call
bound
push
clc
mov
enter
cli
aas
clc
mov
clc
jg
jmp
mov
sub
push
mov
or
cmp
lret
daa
cs
push
roll
dec
bound
and
in
leave
push
mov
and
mov
push
ljmp
sub
sbb
xor
mov
dec
sbb
out
insb
loope
imul
cmp
adc
or
inc
fcom
mov
int3
bound
pop
outsb
adc
rorb
xor
xor
sub
xor
in
cmp
repnz
mov
jecxz
cmp
sbb
outsb
insl
and
ds
rcll
cmpsl
sbb
mov
push
mov
mov
out
adc
mov
inc
push
insl
and
stos
js
mov
lods
in
xchg
imul
fdivr
or
test
push
lret
rcrb
jbe
ljmp
das
inc
jnp
lds
shrb
ljmp
xchg
jecxz
das
mov
push
jo
cltd
lret
cld
adc
dec
push
mov
sbbl
dec
or
inc
dec
adc
rcl
xchg
or
dec
das
ja
inc
push
push
sbb
xlat
repnz
mov
cmp
jg
push
cmp
sbbl
insb
inc
out
int3
mov
hlt
aas
or
pop
test
mov
arpl
scas
push
jne
add
icebp
movsb
repnz
jb
les
and
add
repnz
fdivl
add
mov
sbb
cmp
jno
repnz
cld
mov
scas
cmp
jne
mov
and
outsb
pop
popa
mov
cli
insl
xlat
push
jns
sbb
inc
xchg
adc
dec
lods
test
fmul
or
movsl
push
inc
imul
and
push
int
mov
ds
and
sahf
popa
dec
xorb
xlat
mov
sbb
and
push
xor
or
mov
sahf
jae
repnz
and
push
loopne
and
xchg
shll
xor
or
enter
call
adc
fcomp
push
pusha
cmp
add
out
mov
cmp
pop
and
aad
je
push
lods
mov
outsl
adc
call
mov
xchg
or
pop
cmpsl
jnp
mov
adc
mov
insl
dec
movsb
push
das
xchg
stos
pop
push
jecxz
xchg
pop
ljmp
xchg
cmp
jb
cwtl
add
pop
push
scas
loope
push
scas
orb
or
pop
sub
stc
mov
mov
inc
shl
cltd
cmpsl
sub
push
jmp
sahf
mov
bound
jge
sbbl
inc
or
jo
add
sbb
xor
ljmp
das
pmuludq
xchg
aaa
stc
insl
stc
or
ljmp
mov
push
pop
lock
xor
inc
cmp
test
inc
imul
add
cmpsl
bswap
call
jo
dec
sahf
or
ja
nop
paddq
adc
or
imul
pop
pop
sub
sahf
or
mov
negl
shll
movsd
mov
sbb
adc
sbb
hlt
fs
dec
ja
in
leave
or
bound
aam
ja
lret
jns
sbb
test
iret
inc
leave
push
rclb
cmp
pop
dec
sub
jo
inc
or
fdivs
in
xchg
add
mov
mov
popa
sbb
dec
imul
stos
xchg
push
sarb
push
and
mov
pusha
mov
notl
repz
repnz
cld
lods
adc
lods
icebp
push
mov
call
sub
insl
out
cli
xchg
call
mov
mov
jecxz
adc
insl
inc
adc
inc
sbb
lds
dec
sti
cmpsb
add
jno
aaa
mov
cmp
imul
ret
loopne
test
xchg
int3
hlt
out
outsl
add
mov
and
xlat
movsl
mov
test
lret
jle
inc
mov
cs
je
loope
sbb
lea
mull
repnz
xor
imul
lds
add
mov
xor
rcrl
test
inc
test
pop
sbb
jecxz
xor
add
lret
xchg
cmpsl
shrl
xchg
fdivrl
xchg
fisubrl
cmp
push
mov
into
or
pslld
dec
rcll
jl,pn
shll
or
dec
pop
xchg
das
bound
aad
nop
inc
cmpsl
pop
xor
inc
les
cmp
jns
ret
cmpsl
xchg
mov
jg
jl
push
out
ds
notl
cmpsl
dec
movsl
das
ja
mov
cmp
adc
enter
and
sbb
es
fldt
andl
mov
lods
add
add
popa
jge
push
cmp
movsl
out
mov
leave
test
mov
mov
inc
mov
sub
repnz
cmc
xchg
inc
popf
clc
pop
mov
jmp
das
arpl
inc
push
out
cld
pop
scas
and
pop
fildll
cs
adc
test
in
or
adc
mov
mov
outsl
inc
inc
lea
cli
sbb
dec
push
ljmp
mov
sbb
aad
fadd
adc
sub
mov
adc
jecxz,pt
sub
insl
cwtl
cmc
hlt
xchg
fstps
lret
insl
mov
sub
mov
test
cmpsl
ljmp
lcall
mov
xorb
std
or
mov
adc
jle
jne
or
nop
adc
adc
push
ret
test
add
adc
daa
inc
mov
dec
pushf
aas
or
push
loopne
cmp
sub
cmp
outsb
sbb
enter
sub
and
daa
xchg
lock
std
outsb
leave
fidivs
pop
je
pop
aas
cmp
out
add
leave
int
ret
je
push
aad
pushf
push
dec
adc
movsb
lods
enter
inc
dec
aas
mov
imul
enter
or
sbb
addr16
adc
mov
push
jo
and
fldl
das
xor
aaa
jb
fs
add
mov
popf
sbb
push
fimull
ret
mov
movl
test
jle
repnz
repnz
or
js
scas
repnz
mov
jnp
inc
inc
xchg
dec
jmp
push
subl
jge
repnz
icebp
inc
or
nop
add
ljmp
adcl
mov
clc
leave
js
cli
in
movsb
push
adcb
lds
js
repnz
dec
pop
mov
aad
pop
test
das
clc
xchg
gs
or
jns
add
and
pop
hlt
cwtl
cs
cmp
sub
sarl
imulb
fisttps
fimull
lahf
adc
out
inc
and
negb
mov
xor
jns
popf
js
int
xchg
rorb
cld
in
pop
fdivrs
pop
test
push
mov
out
fisttps
dec
ficomps
enter
adc
pop
aas
ljmp
bnd
mov
xor
push
repz
dec
jae
sbb
cs
mov
push
adc
fcmovnb
ret
imul
jbe
insb
add
inc
iret
sbb
push
cs
jno
clc
dec
mov
imul
negl
sub
hlt
pop
daa
mov
cmpsb
push
cmpsb
imul
nop
std
dec
fwait
sbb
out
sub
mov
ljmp
pop
js
ds
jecxz
jbe
add
sub
lcall
pop
cmp
out
cmp
xchg
dec
daa
fnsave
push
adc
fimull
cld
cmpsl
lock
add
mov
dec
mov
mov
movsb
inc
sub
sub
jg
nop
repnz
test
jecxz
inc
cmp
dec
add
in
xlat
push
pop
cmpsl
cmpsb
cmp
xor
push
or
dec
out
adc
jl
mov
iret
cmp
out
push
repnz
mov
int
pop
icebp
jae
adc
dec
push
xchg
sti
dec
cmpsb
mov
dec
mov
jnp
iret
or
mov
fcmovbe
jmp
outsl
test
icebp
cmp
aad
call
push
out
arpl
ljmp
adc
or
fidivl
and
mov
push
mov
mov
movsb
mov
lcall
adc
dec
jno
xor
xor
pop
add
js
sbb
push
dec
xlat
addr16
out
mov
repnz
nop
mov
or
push
xchg
rcl
je
pop
mov
arpl
ret
mov
mov
pop
cmpsl
stos
mov
jmp
mov
cmp
loope
push
mov
sahf
mov
test
imul
or
lea
sarl
adc
add
push
lea
popf
inc
xchg
inc
inc
jecxz
and
scas
xchg
push
jbe
xacquire
xchg
int
pushf
or
or
mov
jecxz
stos
mov
aad
ret
push
test
movaps
fiadds
jns
lock
int3
cmpsl
stos
int
addr16
mul
ret
add
mov
ja
call
cmpsb
push
or
mov
cmpsb
adc
fstpt
sub
lods
rclb
and
repnz
fidivrl
daa
fwait
or
cmc
dec
mov
mov
popa
jp
jnp
imul
out
xor
cld
mov
je
adc
pop
sbb
das
mov
pop
cmp
push
addr16
add
push
inc
enter
popa
aam
lret
dec
imul
jle
inc
sub
out
xor
outsb
nop
in
pop
push
in
or
rcl
imul
hlt
or
jecxz
jo
in
std
sti
pop
push
inc
das
inc
addr16
or
push
push
xchg
xchg
cmpsl
mov
xor
mov
flds
cmpsl
and
push
int
xor
push
add
push
push
or
ljmp
rcll
lock
sub
addl
sub
mov
aad
loope
jb
hlt
push
or
xor
jp
push
mov
gs
and
test
scas
push
gs
ds
pop
jge
insb
pop
add
mov
mov
popa
mov
or
fs
xchg
into
iret
dec
repnz
sbb
mov
mov
flds
sti
lock
sbb
push
ds
repnz
pop
push
insl
pop
and
loope
xchg
sbb
out
enter
cld
es
std
adc
repnz
fwait
inc
cmp
xor
jge
lahf
sti
and
mov
enter
sbb
mov
daa
jl
xchg
cmp
push
loop
push
out
sub
dec
xchg
push
mov
dec
pop
punpckhdq
rorb
xor
push
loopne
dec
ja
inc
aaa
cmpsb
jg
test
pop
or
push
in
sbb
addl
jle
dec
shll
adc
cmp
jle
and
jg
cmpsb
aam
out
jne
dec
bnd
mov
ret
push
mov
mov
adc
outsl
fs
add
fiaddl
rclb
fwait
sub
gs
cmpsl
add
insl
add
jb
lock
push
cltd
inc
and
repnz
inc
pop
jmp
sub
pusha
cmp
xlat
mov
mov
jle
fldenv
es
fisttpl
cmp
sub
cmpsl
imul
and
clc
lock
pop
lds
mull
fwait
divl
xlat
adc
ret
shrl
out
jb
icebp
hlt
or
push
jbe
xor
push
subb
aaa
adc
jno
inc
les
or
adc
jbe
jecxz
jg
add
inc
mov
adc
ja
mov
or
adc
adc
aaa
je
cmpsl
adc
add
mov
lods
jnp
mov
roll
bound
ja
jmp
mov
sbb
getsec
test
jge
imul
xchg
sahf
mov
pop
jne
pop
push
movsb
es
lods
cmp
and
adc
stos
mov
push
mov
gs
xchg
sub
mov
rcrl
fimull
pop
sbb
imul
pop
mov
jl
sbb
test
jns
inc
mov
out
dec
pop
imul
in
mov
pusha
in
clc
and
pop
xchg
and
xchg
jecxz
inc
out
fisubl
xor
adc
lahf
push
xchg
add
stos
and
fs
add
rorl
or
push
add
scas
dec
imul
adc
insl
mov
and
jl
sub
and
cmp
gs
dec
cmp
sbb
aas
pop
bndstx
scas
sbb
add
adc
ljmp
dec
inc
imul
out
cltd
sbb
lods
push
cmp
and
pop
mov
sbb
sbb
insl
hlt
movsb
pop
rcl
stos
and
add
ljmp
ja
dec
lahf
mov
add
rcrb
adc
or
cld
shlb
and
mov
and
push
mov
fadd
rcrb
add
dec
sbb
sub
adc
out
int
nop
or
and
and
and
mov
cld
sub
sub
and
imul
push
daa
xchg
stos
addr16
xchg
cld
sub
push
imul
int
dec
cmp
add
mov
andl
adc
mov
cmpsl
nop
push
xchg
call
and
cmp
in
in
and
and
jle
daa
lea
and
faddl
aam
divb
lock
orb
rep
dec
adc
rol
imul
lret
mov
xchg
shlb
lret
xchg
sub
sbb
and
cmp
cmp
pop
lret
push
sub
sbb
sub
andl
sbb
sbb
js
dec
and
lahf
push
adc
and
xor
cld
and
mov
mov
nop
lahf
test
add
sbb
and
xchg
lcall
sub
daa
rorl
std
push
arpl
fcoms
mov
inc
neg
push
pop
adc
rep
mov
shl
rclb
dec
in
push
and
cld
sbb
rcr
outsb
cld
and
pop
test
and
jb
sub
cld
sub
pop
aas
and
movsb
lods
arpl
pop
mov
sbb
or
xchg
inc
cld
cmp
call
xor
imulb
push
jnp
or
push
sysretw
mov
daa
data16
je
add
mov
or
vminps
out
lahf
add
addr16
or
or
ja
outsl
daa
mov
dec
sbb
je
punpckhbw
mov
shlb
mov
test
and
fiaddl
sub
mov
mov
add
sub
and
add
or
imul
and
push
mov
sti
daa
jbe
rcrb
test
stos
dec
cmp
dec
and
nop
pop
outsb
dec
xorps
and
xchg
push
xor
sub
dec
enter
inc
and
cld
dec
sub
mov
or
scas
scas
pop
xchg
and
xor
or
push
mov
rcr
add
imulb
and
and
lahf
outsl
lock
sbb
std
sub
sub
test
icebp
jmp
hlt
cmp
popa
mov
xchg
daa
shrb
sub
push
and
pop
call
adc
sbb
inc
cs
or
sbb
adc
es
and
or
pop
data16
daa
lock
gs
and
add
hlt
cmp
adc
inc
mov
xchg
stos
cld
adc
nop
es
ror
sbb
nop
daa
cld
add
mov
dec
inc
rorb
mov
add
mov
test
inc
daa
stos
inc
xor
and
jb
dec
bound
fsubs
stos
test
inc
jmp
add
mov
mov
nop
xor
icebp
mov
int
sub
scas
or
sub
mov
push
lret
imul
scas
jns
add
pop
mov
loop
and
xor
inc
sbb
sbb
scas
pop
sbb
mov
je
fisttpll
pop
ds
sbb
imul
add
push
and
fsubrp
ljmp
jmp
jo
xor
repz
es
repz
pop
into
repnz
xchg
mov
fsubl
dec
cli
add
out
dec
pop
adc
sbb
push
imul
push
insb
mov
fdiv
and
sbb
or
int3
jo
add
lock
imulb
jecxz
inc
and
roll
and
pop
mov
out
lods
or
sub
ljmp
rcrb
push
test
pop
sub
sbb
adc
sbb
jnp
and
data16
sbb
sbb
adc
mov
or
mov
std
test
mov
and
xor
sti
daa
adc
cli
stos
cmpsb
sbb
mov
inc
mov
lock
loopne
cli
sbb
and
shll
jl
sbb
sbb
sbb
fisttps
fadds
test
cmp
sub
scas
fcompl
mov
jmp
push
jg
add
lock
aam
or
or
nop
sahf
and
sti
stc
sub
scas
out
sub
sbb
fs
push
flds
daa
pusha
imul
cltd
stos
cwtl
push
loop
cmp
les
mov
repnz
sbb
out
jg
cli
sbb
jge
add
cmpsl
inc
lret
push
cltd
xor
or
cmpsl
imul
mov
or
cmp
push
ds
pop
add
or
cmp
sti
and
or
cmpsl
sbb
sbb
cmc
cmpsl
and
xchg
push
xchg
rorl
xchg
xorl
and
daa
xor
nop
das
adc
gs
lret
and
sub
jmp
mov
pop
mov
std
adc
test
cmpsl
lock
ljmp
mov
dec
adc
cmp
jno
dec
or
push
arpl
dec
sbb
faddl
testb
inc
lret
sbb
or
inc
mov
lock
loope
sbb
sbb
or
jnp
notb
pop
sub
ret
popf
and
dec
pushf
clc
adc
mov
adc
and
and
leave
xor
add
xchg
sbb
fisubl
add
and
sub
test
imul
mov
sbb
iret
das
and
lods
dec
rclb
sbb
pop
xchg
enter
mov
imul
xchg
ret
insl
or
sub
aas
fldt
lock
rcrb
push
push
sub
cli
push
jecxz
loopne
and
nop
mov
and
or
and
call
and
xchg
arpl
push
shlb
psubd
inc
add
xchg
add
rorl
xchg
or
mov
neg
add
sbb
fsubr
popa
daa
xor
mov
lock
es
add
pop
and
gs
mov
push
push
push
adc
pop
jmp
lcall
and
sbb
movsb
and
or
out
pop
add
out
fwait
add
add
and
sbb
call
lock
jg
mov
aam
repz
jno
cld
sub
loop
sub
fwait
ror
sbb
out
pusha
out
jp
pause
xchg
aam
mov
outsl
push
stc
js
mov
js
rclb
push
lahf
adc
add
sbb
sbb
sub
aad
aas
int3
out
adc
cmp
sub
cltd
jb
cmp
and
sbbb
scas
dec
push
stos
lea
push
mov
sbb
mov
and
call
int3
or
sbb
jp
jo
enter
mov
ljmp
xor
sub
jl
mov
adc
nop
mov
sbb
lods
sbb
daa
and
dec
lret
push
movsb
nop
xor
and
push
jnp
pushf
lahf
and
in
mov
rclb
xor
sub
lds
mull
sbb
and
repnz
add
push
or
add
sbb
daa
add
push
xchg
add
dec
adc
test
sub
inc
mov
mov
dec
push
and
neg
jg
mov
jns
test
dec
sbb
cmp
dec
pop
inc
push
out
or
jmp
xchg
adc
or
adc
ljmp
es
cmp
dec
or
or
mov
sbb
mov
add
xchg
int
or
andl
repz
rcll
cs
inc
ja
out
cld
sbb
outsb
and
mov
jno
mov
push
cld
xchg
mov
aaa
fimuls
jp
lods
imulb
sbb
daa
bound
mov
shrb
roll
insb
sti
sti
rclb
add
push
or
cli
incb
lret
add
mov
and
mov
or
mov
jns
xchg
sbb
sbb
push
mov
in
lret
xchg
pop
popf
lret
mov
insb
cld
cmp
stc
das
inc
daa
popa
out
pop
lret
lret
push
divb
insl
xchg
add
daa
orl
xchg
in
pop
and
sbb
mov
in
notb
test
mov
xchg
sbb
scas
add
push
negb
and
daa
loope
xor
xchg
pop
xchg
inc
jmp
push
dec
pop
pusha
add
ds
pushw
push
hlt
adc
shr
sti
call
push
pop
and
pop
xchg
jecxz
or
lret
push
stos
cld
adc
out
and
xchg
sub
js
adc
or
and
and
addr16
repz
lea
push
pop
mov
dec
sbb
test
sub
dec
iret
ud1
rcr
push
data16
inc
std
mov
push
xor
mov
dec
out
sbb
pop
jae
fcoml
push
adc
rorb
sbb
push
add
cmp
or
loopne
sub
pop
or
xchg
xchg
lods
inc
sbb
sbb
jb
fdiv
mov
adc
fisubl
clc
rcrl
mov
dec
add
jle
cmp
add
xor
cld
repnz
add
subl
repnz
push
mov
cli
in
inc
fmuls
jns
sbb
loope
shl
nop
mov
adc
addr16
cwtl
and
and
jno
mov
loope
std
push
or
or
cmp
xlat
test
cld
repz
shrb
sbb
jne
sub
int3
pop
adc
sub
add
stos
popw
push
sbb
add
adc
add
ljmp
sub
stos
cltd
cli
std
or
incb
add
stc
and
push
sub
push
xchg
mov
cmp
push
cmp
in
test
mov
inc
jo
mov
ljmp
push
jg
and
enter
dec
and
inc
pop
pusha
cwtl
cld
int
mov
mov
and
punpckhbw
bound
xor
xlat
xchg
pop
mov
and
mov
fadd
pop
and
and
jne
movsb
shlb
cs
sub
bound
and
ljmp
push
test
aam
sbb
insb
fcomps
push
mov
arpl
or
add
adc
out
ds
adc
or
pusha
shll
daa
adc
scas
lea
jl
rcpps
inc
add
in
xchg
sbb
and
mov
sbb
in
scas
xchg
popa
daa
sbb
movsl
inc
pushf
add
push
mov
syscall
add
jmp
add
aas
and
fisubrl
imul
and
cmp
mov
sbb
cwtl
push
js
cld
loopne
sub
jl
incl
pop
bnd
sbb
lock
fs
into
sub
mov
cli
push
xchg
out
out
cld
or
outsl
dec
and
cli
cld
hlt
xchg
fadds
pop
sub
shrl
and
xor
lock
call
mov
test
rep
push
loopne
or
mov
mov
add
sbb
adc
adc
mov
outsl
js
cld
stc
bound
jecxz
lret
inc
xchg
arpl
in
je
and
inc
adc
loope
mov
or
sub
mov
fmuls
xchg
dec
sbb
xor
xchg
sub
clc
sbb
fwait
bt
pusha
les
test
imul
imul
xor
loopne
aaa
test
js
jns
add
xchg
daa
ljmp
orl
push
cs
push
stos
pop
call
leave
and
inc
mov
or
in
jmp
decl
jmp
rolb
or
fs
or
or
cmpsl
aad
inc
xor
sub
arpl
inc
mov
lock
aad
mov
arpl
stos
cmpsb
and
jmp
in
and
sbb
js
int3
push
fcoms
sub
aam
ljmp
add
in
lcall
inc
and
or
lcall
movsb
dec
push
sub
stos
and
fbstp
jb
les
test
sbb
in
enter
lret
jmp
ds
fists
je
sub
or
jb
mov
std
decb
mov
repnz
sub
and
shrb
popf
fnsave
dec
mov
mov
pop
sbb
hlt
sbbb
add
lea
push
pop
sbb
notb
js
xchg
out
add
arpl
fsubrp
sub
mov
xor
rcl
test
pop
cwtl
lock
mov
je
adc
dec
test
push
sbb
out
and
test
and
mov
push
stos
add
lcall
add
cld
clc
sbb
jmp
push
arpl
adc
push
jmp
or
lret
xor
gs
sbb
mov
aam
jecxz
and
and
and
icebp
inc
cmc
popf
xor
lock
sbb
lods
sbb
fcoms
jge
fldt
and
out
sub
out
in
dec
pop
fldl
lea
cmc
test
xorl
push
inc
jmp
xor
stc
push
xor
and
and
cmp
es
ret
pop
inc
or
inc
js
gs
push
push
jo
xchg
and
jne
and
mov
cli
mov
das
add
pop
or
pop
enter
add
loope
push
sub
out
jg
sub
cmp
cmpsl
testl
cmc
lret
out
mov
cli
pop
mov
pop
lock
push
fstp
mov
shl
sahf
add
lock
nop
or
mov
inc
in
mov
out
pop
mov
lret
xchg
mov
fs
xor
sbb
mov
mov
ret
in
and
popa
cmp
pop
testb
jecxz
sbb
jmp
es
push
and
sbb
mov
push
sahf
cmp
sbb
fadds
scas
mov
and
stos
nop
repnz
daa
frstor
test
xchg
movsl
imul
fisubs
sbb
cltd
call
push
mov
dec
es
mov
adc
repz
and
mov
cmp
lods
inc
mov
stc
push
negb
push
fdiv
jno
mov
and
lock
repz
pop
pop
cld
push
mov
lahf
loop
jmp
dec
sbbl
imulb
bound
cld
add
scas
aaa
adc
icebp
xchg
int
or
rorb
or
and
cmp
enter
in
sti
mov
mov
enter
dec
lret
je
add
jmp
pushf
fwait
cld
add
mov
sub
mov
xchg
addr16
jmp
and
sbb
add
aam
cmpsl
cld
cwtl
lock
xchg
scas
rolb
xor
jb
repz
sbb
and
iret
cmpsl
mov
int3
mov
stos
std
push
adc
shll
jmp
loop
loopne
dec
adc
sub
dec
and
test
push
cmc
sub
jl
and
lock
and
cs
cltd
in
mov
call
inc
fadds
into
out
pushf
add
nop
ss
xchg
adc
pop
mov
push
push
sbb
orb
jne
sub
orl
cmpsb
sbb
mov
inc
cltd
jnp
cld
je
adc
mov
call
popf
jmp
push
ljmp
out
loope
add
imull
mov
mov
imul
push
call
add
add
pop
pushf
sti
add
add
add
sahf
mov
dec
nop
in
stos
cmpsl
cli
fcoml
ljmp
lds
or
xor
or
adc
sbb
pop
or
sbb
push
jmp
stos
jo
sub
loop
jmp
mov
ljmp
mov
scas
and
sub
xchg
jmp
mov
movsl
cld
and
push
lret
fisubs
enter
rcll
stos
sbb
mov
adc
leave
shlb
push
js
sub
jge
daa
push
add
in
cmp
stos
and
add
add
mov
add
xlat
daa
outsl
sbb
popf
pop
enter
add
and
sub
sarb
mov
test
nop
and
out
lret
sub
cli
cld
sbb
add
jge
pop
pop
test
or
enter
decb
shl
add
lret
inc
push
and
sbb
add
lea
test
ret
int3
xor
sbb
push
outsb
in
cld
jge
push
sub
and
cli
movsb
inc
pop
add
pop
add
mov
notb
outsb
jbe
stos
jne
in
ljmp
fmull
and
sbb
roll
adc
and
cltd
daa
inc
icebp
cld
jmp
dec
pop
xchg
lret
xchg
cli
cmpsb
or
adc
cmp
movsb
inc
cmp
adc
push
or
mov
cmpsl
movsl
outsl
and
sbb
adc
nop
xor
sbb
adc
cmp
dec
add
cmpsb
loope
jb
sub
loopne
push
push
lea
sub
adc
fadds
push
incb
jo
jnp
inc
seto
push
sub
xor
sarb
xchg
cwtl
lock
mov
ljmp
aam
jmp
ja
or
sub
test
aam
and
push
enter
add
in
movsb
mov
push
imul
push
popa
xchg
lcall
mov
adc
push
mov
in
sub
das
leave
sbb
stos
mov
mov
cwtl
jecxz
repz
adc
mov
ss
mov
rolb
test
sub
divb
pop
dec
fcoms
pop
mov
push
adc
jmp
outsb
push
sub
cmp
insb
bound
clc
addr16
insb
jae
icebp
push
dec
xor
sub
sbb
or
pop
adc
sbb
cmpsl
lcall
push
inc
fs
outsl
insl
or
jno
std
mov
rcrl
shlb
test
sbb
sub
adcl
pop
or
cmp
pop
pop
jg
mov
inc
cld
adc
data16
cmpl
leave
cmp
repz
enter
and
clc
in
aaa
dec
add
das
add
in
loope
inc
out
cmpsl
repz
icebp
out
sub
mov
add
std
adc
or
push
pop
pop
sbb
adc
adc
pop
in
dec
fbld
in
jae
dec
insb
in
movsl
repnz
repz
add
in
js
push
adc
jae
inc
or
push
scas
hlt
shrl
sub
stos
xchg
inc
loope
sbb
pop
adc
adc
dec
fwait
or
daa
in
xchg
lea
test
push
sub
stos
and
popa
cmp
out
das
les
sub
adc
fidivl
or
xor
adc
out
lods
lret
cld
xchg
test
test
cmp
out
or
push
pop
sbb
mov
sbb
or
mov
sbb
or
outsl
clc
cld
filds
lock
pop
das
ds
pause
mov
jo
in
popf
push
repz
xchg
sbb
pop
and
out
push
sti
mov
out
sbb
sarl
sar
push
fs
and
loope
xor
cmp
dec
shlb
stc
fadds
cmp
clc
and
scas
sub
and
nop
and
in
jo
or
js
xchg
inc
mov
or
out
dec
js
test
sbb
jnp
dec
push
enter
add
and
or
xor
pop
lret
jle
or
daa
dec
les
dec
lds
loop
cmovo
dec
add
stos
mov
int3
adc
push
mov
sub
dec
mov
sub
mulb
mov
cld
fs
mov
mov
cmp
sub
ljmp
jbe
jne
notl
and
subb
mov
jnp
adc
outsb
dec
sub
push
lret
or
mov
cld
movsl
or
stos
cltd
arpl
push
sbb
push
push
fs
outsb
iret
pop
sbb
aad
in
sub
sti
insb
push
add
cmp
lock
cld
out
and
or
repz
sbb
sub
xor
cmp
sti
adc
cld
sub
pop
mov
mov
pushf
out
stos
inc
les
add
sbb
xor
cmpsl
sbb
stos
loope
imul
stc
push
ret
lods
adc
adc
and
in
sub
icebp
mov
sub
cmc
push
xchg
in
int3
rcl
jne
and
jo
ret
mov
notb
out
rclb
lret
and
ficoms
dec
or
mov
cmp
sub
mov
mov
movsb
pushf
iret
test
pop
cmpsl
shl
sti
adc
push
popa
add
add
adc
jmp
push
jl
lret
aam
in
adc
dec
decb
icebp
daa
xchg
xlat
ss
frstor
push
xor
lret
jno
orb
xchg
or
jp
xchg
repz
sbb
pop
subl
hlt
enter
push
pushf
ljmp
fdivrs
add
inc
mov
jb
dec
dec
or
arpl
and
call
rcrb
push
test
add
mov
and
hlt
and
lock
hlt
decl
filds
bound
hlt
mov
lock
mov
push
mov
pushf
es
pop
loopne
icebp
mulb
inc
mov
push
sbb
mov
rcl
lods
and
call
rclb
scas
rol
jl
mov
mov
mov
mov
arpl
aaa
imul
out
xchg
add
sbb
popf
dec
popf
fcoml
daa
nop
inc
sub
dec
add
add
outsl
shl
lds
in
test
aad
xchg
mov
push
ret
sub
imul
sbb
xchg
pop
and
movsb
imul
rolb
adc
ret
icebp
jbe
shl
movsb
sub
jns
pushf
ret
incl
push
jne
sbb
sti
sbb
and
adc
xor
in
lahf
lret
sub
ret
and
in
faddl
add
call
pushf
repnz
add
enter
inc
nop
sbb
dec
jne
cli
fsubl
outsb
ja
sub
sbb
cmpsl
mov
out
test
dec
adc
inc
rcrb
xchg
bound
stos
jg
push
sbb
adc
in
pop
pop
test
pop
or
hlt
push
or
lock
into
jecxz
loope
add
outsb
cmp
push
cmp
sti
mov
ret
push
mov
shl
pop
hlt
mov
cmp
icebp
lret
xchg
cmp
sub
loopne
arpl
push
xor
push
repz
push
add
dec
sbb
addr16
aas
out
inc
lock
cwtl
pop
out
out
std
push
ret
pop
mov
aas
mov
and
or
rcl
test
enter
push
sbb
push
ja
jp
lcall
ljmp
aam
stos
mov
imul
mov
fdiv
stos
mov
mov
int3
and
rclb
fmull
fcomps
dec
punpckldq
mov
shr
lcall
pop
xchg
cli
ljmp
loop
add
add
mov
or
push
or
sbb
pusha
xor
ljmp
xor
sbb
adc
gs
test
stos
mov
and
push
stos
sbb
stos
scas
or
push
rclb
clc
and
or
shr
or
sub
inc
sbb
test
xor
stc
int3
sub
inc
mov
sub
lods
or
adc
nop
cmpsl
adc
lret
aad
bound
dec
cltd
xor
or
lcall
sbb
sbb
mov
mov
outsl
push
cmc
add
mov
stc
lea
dec
dec
in
js
adc
lret
mov
cmpsb
sub
add
inc
lods
xchg
sbb
ljmp
loope
and
negl
or
sarb
sbb
sti
sbb
mov
push
popa
jae
or
imul
mov
mov
cmp
test
add
and
ret
dec
xchg
and
aam
test
or
lret
mov
out
daa
sub
jb
cmp
in
or
repz
push
push
mov
add
mov
aam
pop
daa
out
or
jecxz
add
enter
in
sub
fldenv
sub
and
mov
outsb
rclb
xor
test
jg
mov
jp
pop
add
sub
sti
mov
lock
pop
or
adc
mov
pop
cmp
cmp
aad
inc
sbb
shrb
and
or
loope
scas
push
lret
lret
sarl
outsl
outsb
xchg
cmc
dec
ljmp
pop
cli
or
fsub
ret
jbe
add
daa
mov
stos
add
and
int3
push
inc
adc
pop
shlb
mov
sub
aam
in
push
adc
mov
hlt
scas
dec
movsl
or
add
mov
stc
cld
and
inc
out
pop
xchg
adc
mull
arpl
je
mov
lcall
sub
nop
xchg
into
inc
sbb
adc
pop
cmp
cmpsb
daa
lret
lret
addr16
mov
adc
or
cli
sbb
ucomiss
cmc
xor
fs
hlt
hlt
sbb
jnp
push
ljmp
arpl
dec
scas
sbbl
cmp
adc
in
lcall
repz
cltd
insl
aam
jmp
cmp
aas
add
insb
pop
cmc
sbb
sbbb
test
mov
cld
sbb
sbb
push
sbb
mov
fisttpl
cvttps2pi
adc
jl
mov
lock
push
inc
jne
cld
cli
jp
roll
lock
popa
add
cmpl
and
or
loope
lock
inc
test
ja
in
and
add
cmpb
add
sbb
scas
or
fs
aad
loop
push
lock
dec
push
add
std
decb
test
dec
cmc
or
push
jne
cmc
sub
not
gs
insb
shr
xor
out
movsl
or
jmp
sub
sbb
push
movsb
mov
or
pop
aad
push
enter
rcll
push
add
test
and
rcll
lret
pop
movsb
call
dec
xchg
fs
jo
ljmp
pop
lahf
cld
and
xchg
outsb
out
add
pmaxub
fdivr
fs
pop
sbb
or
xlat
test
or
inc
mov
clc
push
in
push
cld
xchg
sbb
mov
repnz
xchg
sbb
sbb
push
mov
pop
or
testb
fimuls
inc
and
mov
sbb
cmp
sbb
dec
add
and
mov
jp
xor
jmp
movsb
and
push
arpl
sub
dec
sbb
cmp
test
enter
repnz
lahf
pop
sub
or
lock
mov
ljmp
dec
fcoml
dec
jno
or
mov
or
negb
sbb
vmovaps
or
addr16
cmp
inc
shll
jmp
outsl
jb
adcb
jns
lods
outsb
adc
imul
aam
repz
adc
sub
pop
xchg
in
mov
cld
and
and
lahf
adc
xchg
jecxz
adc
clc
or
out
dec
mov
and
pop
ud0
lea
adc
sbb
gs
ds
or
mull
push
cltd
iret
mov
pop
cld
daa
dec
xor
outsb
or
ss
enter
mov
push
push
lret
mov
dec
adc
popf
jecxz
scas
adc
lock
sarl
push
cmp
xchg
mov
sub
xchg
lcall
popf
dec
and
popa
mov
jb
repnz
movsl
cmp
in
call
inc
and
loop
in
fsubp
js
xor
test
sub
scas
adc
sub
or
mov
lret
or
repnz
mov
dec
aas
inc
add
sbb
jl
ljmp
rcrb
lock
or
and
std
push
adc
cmpsb
adc
test
loope
sub
pop
enter
fmuls
and
and
and
or
rcll
fs
test
dec
and
popw
adc
jb
setae
ljmp
pop
pusha
hlt
adc
cltd
ds
pop
mov
cmp
bound
sahf
fcompl
sbb
sub
mov
fildll
and
push
popf
inc
jne
outsl
inc
movsl
mov
pop
adc
arpl
mov
sub
leave
mov
and
fmull
add
lods
scas
xor
aam
mov
xchg
mov
cmp
aas
fucomp
lock
sbb
adc
xchg
cld
or
outsb
add
add
pop
mov
jae
hlt
pop
ja
and
push
push
sub
sahf
stos
hlt
jns
int
loopne
adc
call
and
adc
sub
or
adc
imul
adc
sti
sbb
shrb
out
add
sbb
repnz
or
sbb
cmpsl
cltd
mov
mov
jno
add
pop
imul
jno
adc
mov
and
pop
nop
arpl
add
xchg
cltd
inc
push
adc
pop
jmp
scas
mov
add
and
adc
jge
sbb
push
mov
lret
mov
jbe
sbb
js
fidivrl
lahf
in
jnp
or
mov
jne
stc
in
jno
imul
shl
imul
sbb
cmp
sub
mov
and
mov
lcall
dec
out
nop
push
daa
sbb
insb
add
mov
bound
add
std
add
rcl
mov
repz
mov
pop
inc
mov
pop
pop
pop
gs
enter
pop
sbb
dec
sub
mov
addr16
popa
cmp
or
adc
add
aaa
mov
xchg
inc
cmpsl
sbb
cs
setg
adc
in
dec
gs
adc
adc
sub
push
push
stos
or
sub
sti
and
jge
jo
mov
adc
push
hlt
pop
movsl
sbb
es
xor
data16
and
cmp
push
fsubr
push
and
call
jbe
fstps
adc
push
sti
push
pop
adc
push
and
mov
push
test
repnz
add
sbb
or
call
or
or
ljmp
popa
lods
in
add
fistl
cli
clc
in
repz
out
and
adc
daa
adc
mov
cmpsb
nop
or
aad
and
loop
clc
xchg
push
push
add
js
ss
xchg
sub
mov
sbb
xor
les
inc
mov
daa
cld
and
and
sti
and
pop
cld
call
mov
push
jl
clc
lret
push
mov
cltd
mov
jmp
test
or
mov
push
pop
push
xchg
or
mov
movsb
and
adc
stos
out
ret
pop
and
and
mov
xchg
add
mov
cmp
cmp
aas
pushf
sbb
jg
clc
fadd
cmp
and
pop
sbb
loopne
call
rclb
add
stos
sbb
insb
dec
lock
adc
pop
sti
stos
imul
pop
sub
dec
jl
lret
sarl
popf
push
pop
mov
dec
enter
mov
or
insb
pop
loop
push
jmp
sahf
adc
daa
mov
sub
sub
xchg
fcomp
popa
les
rclb
aaa
pop
add
hlt
pop
push
cltd
fsub
and
das
sbb
hlt
inc
push
push
cld
or
sub
mov
enter
mov
cmpsl
mov
hlt
pop
loop
pop
imulb
pop
cli
mov
push
pop
adc
push
push
dec
pop
fsubrl
push
dec
mov
mov
pop
hlt
dec
jg
mov
sbb
pushf
mov
stos
mulps
or
push
mov
push
pop
mov
negl
pop
push
mov
and
or
push
nop
sub
dec
lret
ljmp
cld
adc
or
mov
lods
jne
popa
insb
add
clc
call
ja
sbb
and
xor
adc
lcall
cmpsl
adc
xchg
leave
mov
arpl
mov
or
xchg
jne
push
sub
out
cld
repnz
into
add
and
testb
loopne
pop
pushw
push
sahf
xlat
xchg
xor
pop
mov
fcoml
cltd
test
pop
and
xchg
dec
cli
sbb
push
jno
movsb
pop
rcr
or
adc
cmp
push
std
fcmovnb
cli
add
and
adc
xchg
decl
xorb
jecxz
dec
sti
rep
movsl
hlt
xchg
sbb
std
insb
sub
lods
scas
cwtl
sbb
xchg
mov
bound
adc
pop
or
and
pop
loopne
dec
pop
ja
out
mov
js
sbb
dec
xchg
repnz
loope
scas
lock
in
mov
dec
cwtl
or
lret
push
push
aaa
cwtl
add
rcrb
and
sbb
or
and
cli
add
jae
sbb
out
push
and
shlb
adc
mov
not
push
not
int3
sbb
cwtl
push
dec
sbb
xchg
add
int3
sbbb
mov
sbb
imul
rsm
pop
repz
movsb
or
lahf
mov
in
push
test
push
js
dec
repz
ret
aas
adc
push
sub
adc
nop
xchg
stos
aad
or
add
sub
movsl
push
and
xlat
cmp
out
sbb
inc
mov
jo
int3
and
push
and
mov
rorb
jnp
or
and
cli
in
subl
add
mov
sub
pop
adc
pop
ljmp
jecxz
xor
in
sbb
daa
stos
mov
aam
jge
sbb
pop
xchg
cli
mov
or
loope
xchg
push
or
cld
enter
jns
popa
decb
or
data16
fdivr
mov
enter
mov
pop
sub
scas
nop
and
cli
ljmp
hlt
mov
arpl
xchg
sub
xor
arpl
or
sub
inc
cli
or
outsl
dec
push
adc
iret
mov
sbb
sti
adc
cmpsb
push
xorb
enter
jg
xchg
and
mov
daa
sub
ds
insl
sub
mov
test
jne
adc
pminsw
sub
enter
mov
leave
loope
mov
sbb
fdivs
push
jecxz
fbstp
mov
add
push
ficomps
sbb
sbb
dec
cmp
movsl
mov
loop
addr16
push
sti
adc
sti
inc
js
test
ja
or
pop
pop
pop
sbb
negl
negb
or
inc
cli
add
in
out
dec
sar
cld
adc
or
out
outsb
sbb
lds
cmp
jmp
fimuls
and
push
or
stc
sbb
inc
dec
add
inc
dec
sbb
xchg
out
adc
inc
sub
movsb
add
jae
push
push
push
loope
popa
mov
repz
cmpsl
gs
sbb
es
xchg
mov
inc
repz
sub
sti
cmp
add
fistl
lret
aad
pushf
shll
or
lret
mov
stc
lcall
sbb
or
jle
lds
adc
in
sub
add
pop
sub
sub
mov
fcomps
xchg
in
pop
cs
cld
hlt
aaa
stos
sbb
cld
pusha
mov
xchg
call
sub
stos
add
movsb
mov
cs
and
fs
sub
scas
mov
pushf
mov
xlat
call
sbb
mov
or
out
push
loope
sbb
ljmp
into
adc
push
test
add
pop
mov
out
cmp
and
mov
shrb
imul
cmp
and
inc
xchg
sbb
scas
repnz
cmp
aaa
and
lock
lea
bound
das
test
sbb
cltd
inc
and
or
loope
inc
lods
pause
mov
and
push
mov
cmp
repz
add
cli
or
aam
adc
mov
cmp
dec
jecxz
and
sbb
lret
es
pop
push
fildl
lret
sti
and
cmovnp
push
addl
out
mov
enter
add
iret
mov
inc
dec
xchg
mov
and
fcompl
fwait
idivb
mov
inc
pop
add
rclb
std
push
popa
pop
out
out
les
pop
mov
stc
stos
icebp
call
add
and
or
stos
add
and
scas
adc
fadds
adc
nop
adc
mov
mov
and
jns
stos
and
and
sbb
mov
jo
adc
out
mov
lock
xor
add
inc
add
and
movsb
push
pop
outsl
mov
sbb
es
subb
fidivl
add
ret
clc
daa
push
arpl
repz
inc
sbb
enter
and
pop
loope
adc
fdivr
and
push
cli
add
arpl
loopne
sub
jnp
cmp
mov
imul
push
popf
scas
wbinvd
push
fs
mov
sub
sbb
xor
sbb
mov
sbb
mov
data16
insb
pop
sub
iret
mov
xchg
pop
push
and
or
stc
test
ljmp
mov
movsl
mov
nop
insb
push
or
sbb
cltd
mov
test
outsb
sub
loope
cs
test
push
xor
std
add
call
out
cmp
dec
mov
or
addr16
jnp
dec
add
scas
push
and
mov
ds
std
push
enter
nop
sub
repnz
lds
fs
ja
pop
aam
xor
int
pop
stc
inc
lods
or
xchg
lods
mov
cmc
pop
pop
or
faddl
and
add
dec
add
push
sub
cmpsb
cltd
dec
fcomps
arpl
jo
imul
push
mov
sub
daa
arpl
icebp
adc
jns
jecxz
rcl
clc
fucomp
add
ljmp
and
push
mov
gs
bound
hlt
pop
loope
fs
out
or
jmp
or
call
loopne
daa
ret
push
hlt
pop
push
jb
sbb
adc
movsb
cmp
or
in
or
push
jge
popf
jp
sub
jns
dec
fisttpll
push
pop
imul
sbb
shrb
jg
sub
and
add
repnz
cld
lods
add
lds
loope
cld
push
clc
lods
push
jmp
dec
std
test
cmpsl
movsb
pop
test
bound
and
sub
pushf
xchg
out
scas
add
push
daa
adc
pop
cli
sbb
imul
out
xor
sub
incl
lock
mov
sub
xchg
adc
cltd
or
sbb
adc
or
mov
or
xchg
pop
inc
or
push
lret
enter
bound
inc
out
mov
mov
rcll
inc
pop
fs
clc
sub
test
add
lret
or
sub
mov
lock
in
cld
push
lcall
adc
loopne
ljmp
gs
adc
sbb
jle
fadds
stos
lock
push
dec
and
out
xchg
push
scas
push
dec
shlb
sbb
jbe
imul
mov
out
pop
or
mov
lock
shl
mov
ja
xchg
repz
cs
gs
jo
push
cs
mov
jnp
add
mov
addl
cmc
daa
je
mov
stc
and
push
add
push
in
dec
loope
pop
lds
jno
pop
lcall
or
mov
and
push
addr16
dec
and
cmc
nop
nop
cmpsl
jmp
adc
lock
mov
dec
push
rcl
mov
or
stos
hlt
les
sub
or
enter
shl
ljmp
ds
xchg
dec
outsl
sbb
adc
lcall
xlat
pop
lock
cmp
frstor
call
insb
push
lock
nop
repnz
dec
call
push
jg
jecxz
sub
or
mov
or
sbb
data16
and
int
mov
pop
push
ljmp
aad
int
out
data16
or
push
scas
imul
shlb
adc
dec
xchg
stc
enter
std
repnz
mov
push
lods
in
rclb
pop
sbb
addr16
adc
daa
loop
sbb
or
pop
aad
imulb
push
test
xchg
test
fisubs
and
sub
and
push
psrld
arpl
jmp
push
jecxz
jmp
push
dec
pop
clc
lock
xchg
push
jns
and
daa
into
outsb
daa
mov
gs
xchg
int3
test
sbb
inc
mov
incl
pop
xchg
mov
jp
sti
and
sub
imul
inc
jo
push
out
stos
and
mov
rorb
mov
or
pop
jl
xor
sub
cmpl
mov
out
pop
stos
and
mov
test
and
pop
int
xor
sub
lods
rorb
stc
movsb
dec
xlat
jl
mov
stos
popa
xchg
push
or
shlb
outsl
jle
loope
gs
mov
arpl
mov
imul
mov
or
add
cmp
sub
ds
lock
jl
les
cmp
aam
pop
scas
and
sub
cmp
sub
repnz
cld
and
loopne
data16
or
insb
mov
dec
push
add
cmpsl
aad
mov
sub
mov
repz
mov
sti
lods
lock
fcoml
loop
jmp
ficompl
mov
in
xchg
pop
sbb
adcl
scas
add
pop
pop
ret
test
add
mov
std
pop
push
dec
testl
adc
out
pop
and
push
cmp
fdivs
mov
mov
out
pop
sti
lds
inc
mov
add
fsub
mov
popa
orb
aas
cmpsb
cmc
xchg
add
or
adc
and
fwait
or
mov
stc
stos
xchg
sar
negb
or
pop
movsb
ja
cmpsl
sub
dec
or
and
xor
shl
pop
push
adc
push
mov
loop
sbb
sub
sbb
cli
outsb
and
jle
or
jae
or
push
popf
jnp
std
sub
sub
inc
daa
and
inc
fisttps
pop
sarb
pcmpeqb
pop
adc
cltd
xor
loope
sub
inc
or
adc
pop
sahf
cli
adc
or
sbb
arpl
adc
addr16
add
test
pop
into
nop
stos
sbb
push
and
scas
or
mov
mov
cld
inc
or
adc
fwait
or
sub
pop
cltd
test
inc
in
adc
and
lock
std
cmp
div
mov
mov
idivb
sub
mov
out
add
testb
pop
and
jmp
aas
nop
add
sbb
mov
in
icebp
hlt
arpl
sub
jmp
cld
lods
xor
fcomi
push
jmp
cmp
ret
inc
cmovl
cld
test
dec
or
adc
adc
daa
int
inc
loopne
xor
cmp
enter
repz
dec
push
movsb
xchg
xor
cli
and
cld
aas
test
push
mov
inc
xor
sbb
sbb
mov
lock
mov
arpl
andl
repz
fstps
mov
mulb
xchg
dec
inc
cmp
and
and
test
jbe
es
push
xor
adc
dec
fdiv
lods
push
dec
in
cld
test
adc
xor
vunpcklps
jb
test
and
and
pop
mulb
inc
pop
lcall
test
jbe
mov
mov
inc
mov
fs
negb
int
push
iret
mov
adc
decl
and
outsl
and
rorl
adc
outsb
adc
nop
addr16
and
sub
filds
outsl
sub
cld
cmc
inc
cld
mov
frstor
sub
jmp
sbb
ret
testl
into
cld
repz
incl
fsubrs
out
lock
push
test
lret
and
add
jge
or
dec
push
daa
call
pusha
or
popf
pop
and
jp
repz
dec
sbb
insb
hlt
lret
xchg
ret
sub
add
push
jmp
cmp
test
loop
addr16
ljmp
sbb
or
mov
ljmp
sbb
sbb
add
dec
mov
adc
or
pop
xchg
dec
or
xchg
fs
movsl
sahf
and
nop
aas
daa
and
sub
popf
lahf
decl
clc
sbb
xor
or
push
cmp
cld
arpl
outsb
js
xchg
repnz
into
out
nop
inc
repz
ljmp
add
or
insl
dec
daa
arpl
push
movsb
or
aas
daa
sar
or
les
push
fstl
mov
mov
push
repz
loop
adc
or
and
icebp
repz
sbb
sub
jmp
cmp
adc
nop
loop
dec
cld
test
sub
fstl
daa
sub
cmp
add
outsb
aad
icebp
jmp
mov
dec
jnp
ret
ret
daa
dec
cmp
mov
xor
lods
lock
cld
jne
cmpsb
punpckhbw
int3
in
repz
arpl
mov
and
inc
adc
loop
adc
call
into
cmp
sahf
and
lcall
adc
sbb
mov
add
or
mov
shl
push
and
cld
adc
sub
sbb
popf
or
lock
mov
pop
xchg
and
adc
repz
es
test
in
test
mov
ss
mov
dec
jmp
outsb
rcrb
stos
cmpsb
addb
adc
sbb
xchg
push
inc
and
sbb
sub
push
lock
and
sahf
daa
mov
shll
in
std
inc
xor
inc
mov
int3
dec
js
push
lods
out
cld
call
clc
jmp
xor
sub
or
rep
sub
fs
insl
jmp
cltd
enter
push
scas
and
dec
cld
fs
nop
sbb
movb
jl
and
insb
push
enter
push
dec
cld
cmc
sbb
lock
pshufw
cmpsb
pop
into
in
inc
out
gs
iret
aas
lret
adc
pop
divl
inc
push
es
adc
sub
push
lock
lock
neg
mov
add
pop
ffree
adc
or
cmp
add
je
pop
xchg
stos
movsb
adc
and
xlat
xchg
and
mov
sbb
cmp
xor
adc
push
push
inc
fsubrl
in
stc
sub
mov
pop
sbb
je
mov
andb
nop
jecxz
mov
add
jb
sub
mov
call
mov
cltd
cli
sbb
loope
lea
mov
mov
or
mov
mov
adc
xchg
pop
dec
or
call
ficoms
lret
mov
icebp
or
push
pop
lds
and
mov
nop
pop
sbb
push
ss
sub
imul
xlat
ja
clc
dec
mov
adc
sahf
lock
cwtl
js
sbb
xchg
daa
cmpsl
mov
insl
xchg
daa
pop
sarb
sbb
cli
enter
int
sbb
xchg
pop
stc
push
popa
fisubl
lock
mov
neg
mov
sbb
pop
es
into
aad
push
call
adc
and
push
daa
cmpsl
jecxz
cwtl
daa
aam
mov
dec
xchg
jae
setp
add
xchg
imulb
sbb
lcall
inc
test
dec
fptan
and
js
inc
in
adc
ljmp
jecxz
push
test
lods
sbb
xchg
cs
sub
out
movd
pop
in
js
cld
stos
imull
loopne
or
or
or
jg
xchg
adc
pop
loop,pn
sub
adc
mov
pop
xchg
and
ljmp
rcrl
fisttpl
xor
sbb
shlb
in
rcrl
add
rcrb
lea
push
mov
movsb
dec
inc
loopne
icebp
js
adc
push
out
lcall
mov
subl
sub
out
imul
sub
lret
call
loop
jmp
scas
cmp
jmp
test
push
inc
nop
lret
daa
in
stos
aaa
imul
and
movsb
lock
jmp
push
or
and
mov
sbb
inc
add
sbb
pop
or
push
xchg
push
and
sub
imull
pushf
add
ret
out
arpl
lods
notl
in
popa
lret
sbb
and
sbb
adc
in
mov
sub
xchg
popf
add
sub
xchg
and
xchg
mov
mov
daa
push
or
call
and
pop
lods
lret
adcb
enter
xor
mov
out
jge
mov
aam
xchg
lcall
jp
jne
clc
pop
cwtl
faddl
mov
or
out
mov
fcoms
rcl
pop
or
jge
adc
push
daa
in
mov
dec
stc
daa
sub
dec
add
out
cli
imul
and
jmp
fmull
jge
mov
or
add
push
xchg
sbb
clc
adc
outsl
or
stc
or
jmp
aas
xlat
cltd
pushl
popa
jmp
addb
push
nop
cld
inc
stos
and
iret
jecxz
movsb
and
xor
ljmp
cmp
and
out
pop
in
shlb
mov
sub
sub
mov
loope
cmc
cmpsl
leave
xchg
mov
push
test
cld
sub
dec
movsb
int
jl
adc
insb
add
pop
mov
lret
out
into
sub
aam
mov
out
pop
movsl
add
push
add
cltd
jmp
adcl
nop
in
scas
cmpsb
mov
daa
pop
idivb
and
pop
dec
mov
or
xchg
outsl
mov
or
int3
mov
cmp
cwtl
inc
js
loope
and
dec
out
mov
sub
push
pop
or
adc
add
or
lcall
or
mov
push
jle
and
pop
cltd
add
sub
push
sbb
rcr
dec
and
mov
test
cmp
sub
mulb
mov
and
mov
mov
sub
divl
es
pop
adc
loope
push
sub
out
xchg
js
xchg
lods
fsts
movsb
inc
imul
inc
insl
inc
pusha
sbb
push
fisubs
adc
loop
sbb
cmpsb
mov
push
push
and
push
pop
stos
imul
push
addr16
push
push
jo
mov
decl
daa
pop
adc
mov
add
add
je
jb
and
xchg
pop
movsb
outsb
movsl
pop
fmul
sbb
mov
mov
js
inc
adc
sub
adc
rolb
adc
aad
sbb
stos
xchg
jmp
lock
stos
push
cli
dec
pop
inc
retw
lods
xor
orl
jge
aaa
inc
sub
sub
push
add
mov
icebp
sub
adc
cmp
add
sub
xor
inc
inc
cmp
fs
jo
cld
sbb
xor
arpl
test
lock
mov
and
push
adc
inc
lcall
sbbb
cmp
jl
jne
xchg
lcall
and
je
sbb
cmp
push
and
movsb
daa
mov
jb
or
mov
add
jo
mov
or
shrb
xchg
icebp
add
sbb
negb
movsb
push
pop
hlt
popf
stos
out
into
daa
lcall
inc
jnp
and
ret
mov
inc
pop
sahf
in
adc
and
pop
pop
xchg
fsubrs
test
stc
sahf
popf
lock
push
push
lock
into
adc
scas
dec
mov
pop
cli
stos
mov
add
test
clc
mov
or
add
lcall
and
sub
into
cmp
lret
xchg
xor
add
push
and
dec
add
notb
mov
arpl
jo
out
fcoms
mov
pop
fadds
out
mov
daa
cmp
adc
cmp
push
test
lds
insb
sti
and
ds
std
js
xlat
movsb
imul
push
repz
in
lods
scas
stc
test
fildl
mov
mov
push
pushf
lahf
aas
fildl
jmp
dec
dec
popa
test
decb
rcrb
push
clc
std
fwait
cmp
jge
movsb
jl
dec
or
movsb
gs
loopne
or
xchg
xlat
pop
push
daa
dec
into
xchg
sub
shrb
pusha
inc
fdiv
aad
js
sbb
out
sub
xchg
sub
cmpsb
fiaddl
xor
push
mov
and
sbb
data16
xor
and
pop
out
cld
popa
imul
push
inc
cli
fmull
das
cmp
cmp
aas
push
sbb
scas
test
cwtl
add
or
jb
cmovns
enter
imul
test
nop
xchg
xor
jge
fcomi
xchg
pop
je
dec
mov
fnstsw
std
jp
lret
adc
sub
aaa
mov
in
add
xor
sbb
inc
and
pop
loopne
push
ss
packssdw
push
cwtl
lahf
and
ljmp
je
xor
cltd
pop
daa
mov
lock
or
add
sub
cmp
sub
mulb
js
sbbb
lods
mov
pop
repz
jmp
sbb
imul
pop
mov
dec
out
add
and
mov
pushf
or
xchg
sbb
push
mov
dec
lock
jp
jo
stc
mov
cmpsl
xor
in
and
sub
mov
shlb
cli
and
dec
sbb
or
mov
and
mov
xor
add
adc
data16
or
adc
scas
lods
popf
add
mov
mov
cmp
addr16
inc
cmp
sub
cwtl
frstor
sub
movsl
pushf
xor
xchg
sbb
fwait
les
out
arpl
xor
sbb
pusha
subl
mov
and
mov
push
or
inc
adc
adc
add
movsb
push
sbb
push
jecxz
roll
in
decl
repz
hlt
les
xor
sbb
push
mov
inc
repz
fs
mov
add
stos
imul
fcoms
xor
push
sbb
or
in
and
adc
jmp
jmp
das
mov
rclb
sub
push
stos
add
jnp
adc
adc
into
push
hlt
mov
mov
les
stc
xchg
or
lods
orb
and
push
or
mov
or
movsb
jae
pop
mov
sti
stos
mov
mov
out
or
or
mov
dec
xor
push
rcr
jno
push
clc
adc
enter
and
inc
rcll
mov
cmpsl
arpl
xchg
mov
pusha
cld
sub
pop
lcall
iret
pusha
and
sbb
push
and
sub
inc
sub
stc
jmp
repnz
fxch
hlt
jmp
cli
and
pop
icebp
pop
cld
out
fwait
cmp
ljmp
outsb
cld
and
mov
fsts
cld
icebp
mov
push
fiadds
xchg
clc
and
shrb
test
icebp
std
mov
or
inc
sbb
add
pop
shr
enter
fmuls
mov
sbb
loopne
sub
add
jle
ret
push
jg
in
std
cmc
xchg
sbb
sub
cli
sub
nop
pop
wbinvd
pop
sub
and
or
push
lret
xor
js
pop
adc
dec
sbb
jge
cmovp
sub
js
sbb
cmpsl
dec
mov
mov
push
loope
sbb
push
cmpsl
sbb
cld
aaa
popf
dec
sbb
inc
cmp
lcall
popf
or
adc
xor
and
inc
sbb
out
push
push
and
push
jge
int3
sub
pop
push
cmpsl
cmp
add
mov
ret
sbb
lds
or
out
lcall
addr16
clc
lock
fcomi
pop
pop
or
repz
rcl
push
sub
pop
aad
or
out
mov
xlat
mov
sbb
adc
rcrl
mov
push
es
movsl
hlt
pop
aas
cltd
xor
and
and
decl
pop
out
pop
jge
mov
jmp
adc
ja
lods
aas
sahf
or
push
or
mov
sub
push
fdiv
xor
cmp
call
or
push
xor
push
cmpsl
sbb
pop
test
cmpsl
movsl
xor
test
aam
cmp
push
xor
add
inc
out
or
decb
add
out
lock
jge
ljmp
push
add
cmpsl
xchg
mov
and
jns
or
mov
and
push
fsubrl
stos
mov
dec
sub
rcrl
addb
notl
xor
add
and
inc
pop
sbb
leave
movl
and
jb
sbb
lea
int3
ds
scas
out
lock
push
sbb
cltd
rorw
cmp
and
and
and
add
adc
test
cwtl
mov
pop
jecxz
sub
stc
fadd
sbb
add
gs
push
sbb
add
xchg
inc
and
mov
or
pusha
xchg
int
pop
push
ret
in
push
out
mov
sbb
cld
jmp
mov
pop
in
add
add
add
flds
mov
psraw
dec
bnd
lock
jl
dec
sub
stc
xchg
mov
daa
test
pop
sub
aas
xor
sbb
sbb
jmp
or
and
sbb
or
push
enter
sbb
shr
add
arpl
mov
push
sti
daa
jo
out
adc
jle
adc
frstor
jmp
mov
jbe
push
cmp
jno
or
push
ss
lds
out
int3
sbb
and
repnz
mov
outsb
icebp
stos
dec
adc
and
ljmp
fsubr
imul
push
jecxz
cmpsl
adc
das
icebp
in
add
enter
mov
in
add
popa
nop
addr16
and
loope
sti
adc
adc
xchg
cld
inc
or
pop
jp
mov
xchg
insb
or
xchg
push
mov
in
push
dec
or
push
xor
add
xor
movb
test
loop
leave
adc
and
adc
jp
dec
dec
daa
aas
adc
gs
fisttpll
cltd
in
cmc
mov
or
in
cld
and
mov
and
stc
pop
pop
sub
mov
faddl
adc
cmp
es
cmpsl
and
add
xchg
push
push
xchg
lock
and
cmp
xchg
test
mov
sbb
jns
leave
sbb
testl
fistpl
movsb
call
stos
adc
in
enter
cltd
cmp
sbb
xchg
rolb
sub
mov
aam
pop
and
sub
xchg
cld
stos
jge
sub
pop
test
sub
mov
sbb
stos
repnz
jbe
sbb
and
outsl
mov
inc
daa
mov
or
out
sub
movsl
movsb
cmp
or
fs
cmp
cltd
adc
movsl
out
or
mov
fwait
dec
add
lods
out
or
loopne
sbb
mov
lret
cmp
sub
dec
pop
and
or
cli
inc
fdiv
shlb
or
loope
daa
test
jg
aaa
add
movsb
nop
mov
xchg
xchg
mov
clc
sub
lcall
mov
or
push
test
imul
or
test
jo
cmpsl
hlt
and
test
insl
pop
hlt
int3
add
jp
mov
subb
mov
inc
or
ficoml
or
sub
push
dec
add
cwtl
and
ss
imul
mov
cld
cmp
mov
fcomps
inc
jb
pop
adc
add
fisttps
sub
mov
and
pop
jl
hlt
add
in
mov
cld
pop
ja
push
cli
jmp
add
sbbb
jg
xchg
aas
sti
cld
cmp
and
adc
mov
lret
cmpsl
mov
sub
and
or
cmpsl
add
cld
jno
push
cwtl
push
scas
mov
pushf
cld
mov
dec
xor
js
xchg
cmp
adc
mov
icebp
test
out
jg
pop
inc
dec
and
pop
xchg
daa
clc
outsl
xchg
and
imul
daa
stc
fcmove
daa
into
adc
jmp
push
mov
push
jae
and
idivl
das
stc
imulb
dec
or
xlat
pop
loopne
stos
movsl
fsubl
mov
mov
mov
lret
pop
test
and
adc
or
mov
add
sub
push
push
vmovddup
add
push
outsl
adc
push
fcoms
jl
sub
jne
sub
mov
and
mov
or
repz
lock
add
addr16
cmp
cmp
add
test
xor
cmp
add
fadd
and
push
jmp
test
cld
pop
sub
adc
rcrl
and
pop
fcom
jmp
mov
mov
push
and
nop
mov
push
sub
add
stc
sbb
xchg
sbb
sbb
xor
push
dec
mov
movsl
sar
sub
dec
jmp
mov
push
cld
push
xchg
mov
xor
and
add
sub
push
and
lahf
cltd
adc
adc
add
nop
rol
stc
insb
sub
js
mov
inc
movsb
scas
sbb
sbb
cmpsl
adc
jl
cmpsl
sar
enter
xchg
jp
ljmp
sbb
gs
and
pop
push
ret
in
dec
sbb
and
xchg
out
push
sbb
sarl
aas
mov
shlb
pop
push
std
and
xchg
int
jno
in
scas
sbb
test
aad
mov
sti
mov
loopne
sbb
clc
push
hlt
lcall
mov
inc
cmp
adc
or
sbb
daa
std
ljmp
enter
pop
pop
cwtl
and
and
add
fsubl
xchg
out
jmp
xchg
dec
sbb
and
xchg
jecxz
dec
lods
sbb
mov
movsb
jnp
es
enterw
mov
arpl
sarl
or
test
or
clc
nop
jl
or
mov
shrb
pop
unpcklps
lods
sbb
daa
in
test
or
dec
add
mov
inc
in
nop
rcll
sti
aad
adc
jl
ja
sti
enter
notl
sub
push
cltd
insb
mov
out
and
inc
aam
int3
sti
adc
insl
js
sub
push
dec
lahf
push
cltd
dec
test
popf
je
decb
pop
rclb
add
jne
and
xchg
and
push
test
adc
sbb
adc
cmc
jmp
es
jmp
fsubl
mov
lret
mov
sti
outsl
test
dec
ficompl
add
or
add
jle
xor
xor
divb
addr16
clc
add
adc
or
adc
or
adc
or
and
or
cli
dec
lea
popf
popf
jae
out
cmp
push
mov
imul
mov
add
and
push
sub
mov
aaa
push
sbb
add
icebp
push
xchg
movsb
pop
push
insl
or
fs
push
mov
sbbb
repz
or
cmp
mov
imul
jb
mov
filds
or
and
or
push
pusha
pop
pop
jo
lret
xchg
push
jl
in
ss
shrb
test
push
arpl
outsl
lods
and
aam
js
cs
icebp
testb
mov
and
push
notb
inc
cmpsl
pop
fs
jecxz
xor
hlt
lods
fcoms
out
mov
mov
insb
adc
mov
lcall
mov
stc
dec
sbb
sbb
mov
enter
add
test
jle
mov
jo
or
aam
lods
mov
add
and
pop
aas
lods
or
test
push
xchg
jns
test
push
call
adc
xor
sahf
cmc
cmp
inc
or
idivb
pop
xchg
lcall
push
cmc
adc
xlat
js
pop
and
mov
ljmp
inc
sbb
nop
mov
inc
loopne
adc
mov
push
ja
mov
adc
sub
adcb
mov
shlb
loopne
adc
xor
sbb
add
or
imul
roll
inc
adc
pop
dec
loop
outsb
mov
ljmp
mov
xor
mov
out
stos
lods
js
nop
push
sbb
scas
xchg
es
mov
repnz
in
pusha
add
clc
adc
hlt
adc
add
push
inc
push
les
out
mov
ret
aaa
hlt
sbb
incb
mov
je
inc
add
lahf
add
mov
sub
add
loope
aaa
or
test
cltd
jecxz
jns
add
testb
push
cmp
cmpsl
dec
mov
sub
scas
iret
out
repnz
pop
push
or
nop
out
out
mov
mov
and
cmp
and
xchg
cmp
xor
push
add
pop
js
push
jae
out
dec
nop
cmp
mov
fdivl
popf
aaa
push
lods
daa
and
mov
int3
or
pop
loopne
js
test
rorb
add
arpl
test
out
fstpl
push
sbb
cwtl
jecxz
stc
pusha
nop
out
call
dec
pop
xor
cld
mulb
lret
pop
add
insl
adc
sub
push
fwait
sbb
adc
rcl
insb
or
or
or
push
and
add
fs
jmp
out
clc
push
sbb
xor
aam
popa
sbb
fs
push
cwtl
mov
insl
enter
pop
repz
sub
cmpsl
sar
add
loopne
mov
enter
or
mov
inc
repnz
sbb
std
das
es
aam
rclb
cmp
pop
mov
jns
enter
mov
inc
orl
fs
sbb
pop
mov
pop
outsl
add
data16
ja
pop
xchg
pop
xor
xor
or
xor
jbe
stos
mov
setle
push
cmp
lcall
and
add
cmpsl
push
or
nop
jb
xchg
dec
fwait
hlt
sbb
add
cmpsb
and
mov
ljmp
push
or
shl
mov
sub
clc
fsubl
dec
sbb
cld
loope
rcr
or
packuswb
mov
and
push
xchg
aas
cwtl
add
push
inc
mov
in
fs
lret
shrb
movsl
sub
loop
sub
jge
testb
mov
lcall
and
or
out
or
cli
push
dec
and
shlb
mov
pop
into
out
adc
mov
aam
out
test
inc
rcr
and
add
add
in
add
movsb
out
sbb
push
mov
cld
and
or
push
ret
fsubs
push
lock
cmp
or
loopne
adc
icebp
jle
sbb
lods
and
fsubr
mov
push
push
and
add
adc
add
addr16
adc
sbb
lcall
adc
ljmp
mov
rclb
mov
bound
or
xchg
ret
fsubs
dec
roll
pop
push
shr
and
ficompl
mov
lret
jno
in
cmp
cmp
movsb
mov
inc
and
push
roll
int
mov
mov
sub
jmp
enter
sar
stos
ljmp
movl
and
nop
pop
out
shll
arpl
pop
filds
inc
or
hlt
jle
cwtl
inc
stos
push
out
lret
sub
repnz
pop
or
vmread
mul
out
pop
repnz
cld
sti
or
lods
or
sbb
sbb
or
loopne
inc
inc
popf
add
push
or
inc
mov
into
cmpsl
call
xor
repz
aas
push
add
fcoml
xcrypt-cbc
cmpsl
push
lcall
adc
in
or
clc
adc
add
mov
xor
pop
sub
push
loopne
in
test
imul
out
movsb
mov
adc
jmp
pop
and
in
add
daa
insb
test
sti
fs
punpckhdq
xchg
jle
and
in
cld
pop
movaps
dec
addr16
shlb
add
xor
mov
sbb
repz
jbe
ret
lods
pop
cmp
sub
dec
push
push
fsubs
out
pop
out
sub
jmp
aad
and
xor
cmc
addr16
pop
pop
add
cmp
mov
lock
push
insb
xchg
sub
fcomps
jae
mov
daa
clc
xor
rorb
push
pop
jne
adc
xchg
out
clc
mov
call
adc
mov
or
fldenv
sub
add
add
repnz
pop
push
inc
dec
stc
call
icebp
jecxz
aas
mov
es
xchg
pop
pop
adc
test
cld
xlat
add
sbb
stos
cmp
mov
pop
stos
push
push
repz
addr16
inc
aaa
incb
loop
imulb
call
jge
pop
dec
mov
sub
ljmp
cmp
in
iret
xchg
clc
movsb
inc
and
xchg
add
or
decb
enter
divl
fwait
or
dec
sbb
jge
lock
rorb
jp
inc
lock
mov
sub
mov
fs
cs
xchg
mov
ds
push
sbb
das
add
sub
scas
leave
pop
jae
sbb
adc
sbb
sbb
and
pop
popa
jmp
mov
jne
sbb
or
mov
test
add
leave
dec
decl
or
push
movsb
ret
mov
push
push
fwait
in
adc
push
out
sbb
roll
add
adc
lock
daa
into
xchg
leave
cltd
cmp
sbb
and
aad
pop
mov
cmpsl
adc
sbb
mov
cld
popa
sbb
cli
stc
mov
push
cwtl
lock
sti
mov
mov
mov
daa
push
inc
lcall
pop
nop
pop
and
add
addr16
rcl
or
dec
repnz
loope
fsubl
and
add
add
sub
test
sbb
daa
sub
sub
mov
out
subl
and
hlt
mov
test
dec
andl
inc
mov
enter
pop
js
add
ljmp
mov
clc
and
sbb
jp
push
or
adc
cld
xor
or
out
inc
nop
mov
mull
adc
stos
dec
lret
adc
push
mov
inc
adc
pop
repnz
nop
insl
cltd
sbbl
sti
hlt
sub
das
adc
mov
adc
pop
shl
sub
cld
sbb
pop
add
cmpsb
scas
adc
sbb
daa
adcl
sbb
aas
cld
push
mov
shrb
or
pop
push
lahf
mov
popf
je
in
or
lea
and
sti
pop
loopne
loope
lock
fmull
in
push
jae
les
pop
sub
push
out
pop
out
mov
cld
and
xchg
sub
push
repz
outsb
fs
inc
test
pop
push
imul
mov
cltd
jns
add
mov
js
ss
pop
dec
iret
xchg
push
loop
div
lcall
sahf
mov
fcoms
in
loopne
mov
inc
sbb
adc
mov
hlt
mov
adc
adc
push
jmp
stc
rcrb
ficompl
mov
sbb
cmp
mov
in
or
adc
movsb
sbb
test
sbb
dec
rorb
adc
ja
add
in
std
fisubs
es
mov
push
rcr
or
dec
cwtl
inc
sub
stos
add
daa
sub
cwtl
xor
lods
add
push
gs
lea
or
addr16
jl
hlt
aad
xor
jmp
je
push
mov
or
scas
sub
rclb
sub
repnz
lahf
out
sbb
xor
ror
sub
fdivr
inc
push
add
int
or
push
xor
sbb
or
pop
push
and
hlt
movsb
aad
in
clc
push
stc
movsl
sbb
out
sub
xchg
jo
and
sub
lock
or
or
popf
mov
mov
add
int
movsl
inc
repnz
adc
cmp
aam
lret
add
fs
adc
mov
jns
fsubrs
lahf
in
push
sub
push
add
jp
pop
lock
pop
or
adc
fs
mov
psignw
les
adc
ja
cli
mov
adc
jo
out
add
div
adc
or
sbb
test
daa
out
in
aaa
xchg
jge
pop
add
repnz
adc
sti
or
sbb
imul
push
ljmp
into
rcll
lret
mov
fmul
inc
sbb
or
sub
dec
sti
mov
push
dec
aad
add
adc
test
dec
test
mov
enter
sbb
cli
imull
sub
ret
lret
data16
test
mov
aas
dec
std
sub
lret
and
aas
imul
push
xchg
nop
jne
push
repz
adc
pop
push
sbb
sub
sub
sub
sbb
sbb
cli
mov
sbb
or
sgdtl
mov
fisubrl
call
icebp
dec
js
inc
int
mulb
lea
sub
add
sub
sbb
test
inc
and
jl
js
stc
inc
aaa
mov
push
sbb
xlat
loope
data16
dec
dec
mov
fs
adc
pop
cmp
scas
sbb
nop
jecxz
lods
add
lret
sub
fsubl
cmp
sarb
imul
mov
loope
dec
mov
rorl
dec
sbb
rorb
sub
mov
push
mov
cwtl
and
and
mov
notb
sub
mov
push
popa
mov
repz
cltd
and
icebp
repz
sbb
sub
or
push
pushf
pslld
loopne
and
sub
xchg
andb
loopne
fwait
daa
add
popa
lds
es
cmp
sbb
sbb
std
jo
or
xchg
sbb
aad
icebp
dec
int
jne
popa
adc
cltd
adc
jne
sbb
nop
cs
pushf
push
dec
inc
mov
sub
rolb
push
jns
adc
daa
or
rdpmc
popa
and
push
popa
scas
fldenv
xchg
mov
push
notb
add
insb
popa
fisubrs
cld
sbb
adcl
fs
enter
adc
addr16
pusha
std
out
lret
fdivr
cmc
aam
add
push
push
pop
jne
inc
and
or
popa
out
loopne
sbb
in
lock
dec
insb
daa
mov
mov
stos
inc
aaa
shll
sub
iret
jge
sbb
jmp
aam
inc
adc
out
pop
sbb
jg
mov
jno
cmp
sub
inc
cld
pop
arpl
and
push
mov
fsubs
dec
pop
jae
cld
sub
adc
fcomps
push
aas
xlat
inc
imulb
mov
ljmp
fcoms
fadds
ret
out
pcmpeqw
out
jl
lea
xchg
fdivl
gs
sbb
stos
dec
bound
sahf
mov
nop
repnz
and
cmpsl
xchg
mov
popa
mov
mov
ljmp
imul
add
jge
cld
daa
das
stc
sbb
jae
mov
xor
and
sbb
mov
clc
sub
ljmp
sbb
or
push
jmp
pushf
cmp
not
jg
sbb
les
pop
inc
lret
add
mov
sbb
and
test
inc
xchg
add
lods
iret
aas
loope
add
xchg
sbb
daa
daa
pop
inc
mov
icebp
adc
mulb
mov
ret
fcomip
test
or
fnstenv
imul
scas
sub
cld
das
xchg
in
pop
and
pop
push
out
neg
cli
mov
adc
negb
sti
rdmsr
push
and
mov
xchg
xchg
sahf
fcoms
jb
jo
inc
add
inc
les
mov
xor
and
mov
add
mov
or
pop
test
sbb
push
lret
mov
or
loope
jge
stc
mov
or
fistpl
inc
mov
in
in
sub
xchg
jns
icebp
nop
push
sub
push
and
dec
inc
push
jg
and
or
mov
mov
and
adc
das
cmp
stos
xchg
or
mov
sbb
inc
mov
cmp
lcall
jl
ljmp
dec
mov
sbb
mov
jo
sbb
pop
sbb
repnz
pop
lret
sub
sbb
fmull
pop
push
imul
cltd
push
mov
pop
rclb
sub
push
cmc
sbb
rep
repz
cmpsl
sbb
push
add
jle
and
lret
dec
add
inc
or
fistpl
mov
and
mov
inc
sub
pop
sbb
push
pop
mov
and
ljmp
lcall
nop
xlat
cld
repz
mov
sub
lcall
add
xchg
cmp
cmp
js
push
out
or
push
mov
pop
cmp
pop
pop
cmpsl
icebp
pop
xchg
daa
loopne
add
sub
lret
call
mov
lds
adc
rolb
icebp
add
xchg
add
dec
cmc
into
mov
gs
out
mov
and
cmp
adc
jmp
imul
sub
mov
push
movsl
pop
in
mov
pop
sbb
pop
out
or
add
repnz
out
add
aas
sub
cmp
adc
lret
sub
dec
adc
and
push
cmp
sti
mov
or
stc
movsb
cmp
cmc
dec
bound
or
add
lcall
xchg
daa
mov
mov
hlt
and
lock
and
sbb
mov
out
mov
daa
add
mov
mov
ljmp
rorl
inc
xor
sbb
scas
xor
out
xchg
cmpsl
aam
sub
call
pop
and
dec
pop
scas
xchg
or
out
das
cmp
gs
imul
fidivl
lahf
lods
sbb
divb
and
adc
cmp
and
aad
push
popa
js
cli
add
xchg
and
mov
jae
icebp
xchg
sub
dec
mov
jp
sbb
add
xor
or
fcmovnu
jne
cld
cld
dec
pop
and
fistl
inc
sbb
and
stc
pop
mov
pop
daa
outsl
ja
testb
or
nop
scas
adc
xchg
mov
ds
jle
ret
test
or
jne
loope
fsubrl
in
adc
and
shlb
stos
xchg
and
loopne
dec
mov
lock
inc
dec
cmpl
jo
mov
faddl
and
jecxz
xor
sub
push
std
out
push
mov
hlt
pop
arpl
add
fs
aad
ds
and
adc
cmp
sbb
or
sarl
cmp
fs
std
mov
loope
std
shlb
sbb
jo
jecxz
outsl
or
jo
test
jecxz
adc
or
in
dec
and
movsb
mov
sbb
mov
cli
sbb
movsl
aam
divb
cmpsb
push
aad
adc
stos
xchg
or
add
sub
cmpl
add
sar
outsb
and
sbb
shrb
fdivr
xor
sub
dec
push
arpl
mov
negb
push
xchg
inc
adc
sub
icebp
test
mov
lds
das
fsubs
add
movsl
sub
cwtl
sbb
pop
inc
dec
jp
inc
test
arpl
add
orb
rcrb
jl
xchg
shll
adc
ljmp
sbb
scas
aas
in
push
xor
xchg
xchg
addr16
icebp
stos
fdiv
imul
pop
xor
and
and
dec
push
call
mov
push
add
sbb
sub
lods
push
sub
mov
out
lock
pop
push
jl
inc
sub
loopne
mov
stc
sbb
mov
sub
pop
pop
sub
hlt
nopl
out
stc
negb
inc
roll
push
mov
jecxz
add
adc
xchg
imul
je
sbb
mov
mov
jge
lock
daa
fstpl
sbb
nop
sbb
add
outsl
repnz
inc
sub
ljmp
fsubs
in
dec
int
stos
mov
lock
lock
rol
push
pop
pminsw
mul
or
cmpl
sti
and
icebp
sub
push
out
xchg
push
dec
movsb
aas
jb
into
adc
repz
ja
and
aam
pop
or
push
or
lahf
popl
adc
sub
insl
mov
push
push
push
pop
loope
xor
adc
mov
pusha
push
sbb
add
pop
lcall
mov
push
inc
jae
call
and
pop
cltd
outsl
icebp
std
enter
andb
mov
test
and
jge
fsubrs
or
daa
sbbb
repnz
sti
sahf
fcompl
dec
pop
jp
ljmp
push
stos
das
add
cld
loope
adc
or
adc
fwait
data16
arpl
jns
push
jecxz
xor
and
jg
cmpsl
and
xor
lret
cmp
xchg
sbb
ljmp
lret
fdivr
adc
daa
add
fsubrl
xor
in
and
loope
or
sbb
and
sub
fs
aad
das
add
or
lock
push
lock
mov
cmp
fmul
or
movsb
xchg
test
jp
sbb
inc
push
icebp
or
lahf
or
std
push
addr16
or
decl
lods
daa
inc
add
cld
xchg
sub
mov
jl
jmp
jmp
xchg
repz
and
sbb
push
cmp
sub
std
movsl
and
push
fs
data16
lock
ss
leave
imul
lods
add
fisubl
aas
push
lock
jns
push
jb
adc
leave
aas
lret
in
sti
cwtl
push
sub
xchg
and
cmp
stos
xchg
mov
daa
ss
add
cld
jnp
fmull
imul
add
fcomps
out
mov
fwait
nop
stc
sub
sbb
sub
push
popa
stos
enter
shll
xor
sub
repnz
jecxz
mov
cmpsl
pop
fs
or
pop
xchg
push
mov
imul
push
mov
dec
and
cmp
sbb
rorb
ja
sbb
sarb
movsb
ljmp
int
cld
xchg
push
mov
xchg
push
and
xchg
and
sbb
shll
mov
push
and
or
xchg
and
pop
mov
aaa
jmp
lcall
sbb
adc
or
add
out
add
es
sarb
sub
and
pop
ffree
gs
dec
daa
outsl
or
mov
adc
or
pop
cmp
or
xchg
cmc
fadds
in
sub
imul
out
in
sbb
in
adc
cmpsl
cld
bound
mov
iret
mov
es
add
jle
sbb
xor
daa
add
sbb
xchg
mov
add
cmpsl
adc
movsb
pop
call
or
incl
je
mov
and
cwtl
and
ljmp
or
sbb
movsl
xchg
jnp
cld
push
leave
ljmp
loop
in
sub
dec
adc
or
fs
add
lock
insb
sarl
test
in
nop
mov
sbb
pop
push
js
test
push
enter
xor
test
idiv
xor
and
nop
adc
jo
sbb
push
mov
sbb
adc
je
mov
sub
or
mov
loopne
push
test
out
lret
idivb
cmpsl
ss
add
lock
and
and
mov
mov
lret
nop
imul
sbb
xchg
call
inc
sbb
int
movsl
insl
out
sub
mov
cld
push
mov
ljmp
cld
test
std
mov
imulb
fcoml
sub
add
push
das
lea
mov
sti
std
cmp
cld
mov
in
enter
fdivp
aam
pop
pop
stc
mov
adc
adc
loopne
aaa
push
xchg
pop
pop
dec
sbb
enter
adc
mov
cmpsl
sub
cmpsl
out
sarb
into
cmp
leave
cld
loop
in
repz
arpl
incl
cmpsl
daa
fs
fwait
in
sbb
and
sbb
sti
sbb
jge
sbb
and
adc
fs
add
pop
rcrl
test
push
inc
stos
or
push
imul
stc
nop
sbb
movsb
xor
test
or
push
mov
insb
repnz
push
push
in
adc
sub
push
es
sbb
sub
sub
cld
aam
ror
loope
stos
lcall
gs
and
cmp
mov
ljmp
or
pop
aad
and
test
lahf
test
mov
out
dec
mov
cli
shl
add
add
stos
push
jle
push
add
pop
inc
sub
jns
in
or
pop
pop
mov
imul
xchg
cli
and
jge
cmpsl
inc
and
cltd
jp
cli
addr16
lret
repnz
mov
enter
cld
ja
or
and
add
repnz
shlb
mov
adc
aam
push
sbb
sbb
add
jmp
notl
lret
in
hlt
sbb
push
dec
pminsw
adc
jb
add
push
outsl
repnz
mov
dec
mov
pop
mov
cld
sub
hlt
pushf
enter
mov
out
stos
jno
and
mov
gs
lock
test
icebp
stc
repnz
lock
enter
bound
or
setns
jb
stc
movsl
adc
shrl
daa
jns
std
sbb
sbb
js
adcl
pop
out
daa
xchg
repz
sbb
jnp
mov
xchg
out
repz
and
clc
jge
popa
insl
negl
mov
sbb
cld
outsb
sub
and
ds
sbb
clc
repnz
push
movsb
sbb
fadds
push
mov
ljmp
add
xor
mov
cli
cli
adc
jecxz
mov
movsl
sbb
mov
push
cmp
pop
pop
sbb
sub
adc
pop
int
and
lcall
repnz
in
ds
mov
ljmp
inc
aam
or
ret
and
adc
xchg
or
fldl
sbb
and
lock
xchg
mov
clc
sub
std
pavgw
clc
pop
mov
push
negb
out
dec
mov
inc
xor
push
mov
int
pop
push
mov
push
dec
or
loopne
sbb
aad
std
sbb
repz
sbb
pop
clc
daa
aas
sub
test
mov
and
out
push
mov
inc
or
loop
repz
mov
or
xchg
fs
loopne
movsb
push
inc
push
sub
mov
jmp
sarl
add
and
add
and
shll
push
mov
nop
xor
xor
fidivs
sti
cld
xlat
ja
sbb
and
mov
xchg
popa
jae
mov
les
xor
cmpsl
and
add
add
and
test
adc
lds
aas
jae
add
pop
insb
adc
xor
mov
cltd
jo
std
add
sbb
lds
imulb
lock
sbb
cld
sbb
or
fmuls
aam
in
or
cmp
rcrl
jle
xchg
fadd
push
mov
sbb
cld
xor
lock
daa
cld
sbb
add
clc
adc
popa
ljmp
rorb
xchg
out
cwtl
addr16
cmp
ljmp
and
rolb
int3
and
lret
cwtl
inc
push
ja,pt
or
loopne
sbb
mov
and
or
int3
mull
fadds
or
jg
and
inc
or
fs
in
fcoms
dec
dec
insb
push
dec
adc
xor
stos
mov
gs
arpl
dec
and
shl
sti
out
push
mov
and
cmp
adc
inc
cmpsl
and
or
jno
jo
js
mov
jo
adc
movsb
and
arpl
cltd
jb
add
jg
cs
test
adc
and
sti
add
and
in
imul
ja
decl
insb
sbb
push
inc
xchg
scas
lods
xor
ljmp
mov
stc
add
cmp
stos
xchg
out
add
in
rcrl
push
lret
mov
cmp
jns
mov
lret
pop
icebp
mov
lret
sbb
sbb
stc
adc
sub
cmp
lret
add
daa
lret
sbb
inc
imul
dec
sahf
out
or
or
std
and
mov
stc
lea
clc
sbb
dec
in
std
and
lret
push
ljmp
int3
cmp
push
push
or
aad
lock
movsb
xchg
inc
movsb
sub
jo
test
mov
or
imul
sbb
das
push
xchg
repz
sub
ljmp
push
pop
sub
roll
popf
fs
out
sub
jecxz
testb
repz
out
movsb
inc
loop
js
imul
sub
and
ljmp
cmp
mov
xchg
pop
and
mov
int3
push
mov
sbb
mov
sar
jmp
arpl
add
lods
repnz
or
pop
mov
nop
jge
pop
es
fcoms
mulb
adc
and
xchg
icebp
and
jbe
push
ret
inc
add
sbb
repz
adc
and
xchg
xchg
push
adc
loope
and
or
scas
jl
cltd
mov
jne
cmp
mov
sub
xor
or
inc
rolb
push
xchg
and
lcall
mov
addr16
outsl
icebp
sbb
jge
out
orb
mov
pop
nop
ret
mov
xor
adc
sub
add
in
clc
stos
leave
js
xchg
notb
xor
mov
sbb
loopne
push
or
sub
movsb
sbbb
gs
jp
pop
pusha
cwtl
sbb
or
orps
addr16
sub
or
fs
adc
cmp
sbb
cld
repnz
stos
dec
fmull
fsubs
add
lods
dec
dec
punpckldq
add
lock
sub
pop
and
stc
cmpsl
pop
push
in
add
sbb
daa
mov
push
sbb
pop
adc
cmp
fdivp
xchg
mov
lock
push
popf
mov
arpl
insl
and
jle
and
xchg
mov
adc
popa
xchg
psllq
sub
jg
and
pop
xor
fisubl
cmp
and
sub
jle
sbb
jne
xlat
mov
fistl
jmp
sub
or
aaa
lcall
sbb
mov
inc
enter
jbe
push
adc
adc
rorb
lods
jo
std
aad
pop
stos
add
mov
or
cmp
sbb
aad
xchg
and
mov
mov
mov
pop
add
shll
icebp
push
add
and
mov
loope
fucomi
or
sbb
imul
lret
movsl
sub
test
fsubrl
sbb
pop
and
inc
test
out
out
je
or
and
mov
scas
push
sbb
fs
jecxz
add
test
cmp
shrb
dec
and
movsb
inc
sbb
mov
popa
icebp
xchg
out
hlt
cmpsl
mov
sub
mov
mov
xchg
add
sbb
mov
or
push
mov
shr
popf
adc
mov
sbb
test
add
lahf
sbb
insb
daa
add
sbb
or
fwait
hlt
ss
rorb
loope
sti
adc
aad
lahf
lods
or
sub
ljmp
lods
adc
push
clc
sarl
icebp
cmp
in
xchg
mov
clc
pop
ja
pop
sbb
add
xchg
repnz
xor
dec
or
xchg
jbe
call
dec
or
scas
adc
nop
test
je
push
add
fs
cld
push
push
cld
push
mull
out
dec
pop
or
pop
lds
add
aaa
xor
pop
roll
dec
out
add
movsb
xchg
imul
push
add
test
or
pushf
inc
fdivr
jmp
sbb
sub
inc
xlat
loopne
bound
dec
daa
push
popa
xchg
adc
dec
mov
lret
sub
dec
push
xchg
and
xchg
sub
repz
shr
mov
enter
inc
mov
push
and
or
dec
fisttpll
dec
or
pop
mov
fs
pusha
push
sbb
or
imull
or
iret
and
jne
add
adc
push
jge
xchg
mov
or
into
dec
nop
les
cltd
test
ror
xor
add
and
sbb
pop
movsl
rep
out
clc
and
sbb
sbb
in
leave
call
mov
or
xchg
dec
arpl
cmpsl
arpl
dec
cmpsl
sbb
xchg
mov
sbb
jecxz
sbb
mov
adc
rcr
lods
or
testb
mov
rcl
adc
leave
int3
imul
sbb
adc
mov
push
mov
insb
pusha
cld
mov
mov
mov
jmp
jno
hlt
scas
data16
mov
or
shl
idiv
loopne
mov
pop
scas
insl
stos
lahf
inc
aaa
and
sbb
dec
xor
sbbl
push
and
push
rcrl
push
test
or
scas
shl
mov
and
pusha
adc
scas
gs
and
and
adc
jecxz
gs
fistpll
adc
pause
int
pushf
sub
movsb
jle
jecxz
std
push
dec
sub
xor
call
adc
mov
es
dec
jbe
imul
fldenv
dec
or
cmp
rclb
cld
lret
and
and
mov
lods
enter
loopne
cli
imul
cmpsl
push
inc
inc
and
pop
into
cmp
dec
push
inc
out
cld
cmpsl
push
js
ljmp
rorb
inc
mov
mov
sbb
and
nop
arpl
dec
out
add
xchg
clc
xchg
dec
insb
stc
sti
movsl
out
and
stos
sub
clc
lcall
pop
and
and
cs
loop
sub
into
in
add
mov
push
ficompl
add
adc
or
push
xor
cmp
and
and
fisubl
ss
adc
push
idivl
js
dec
aam
fcom
lahf
xchg
sbb
call
cli
lret
add
out
out
and
sti
add
shr
push
jbe
lea
sbb
cmp
cwtl
jb
or
shr
dec
testb
and
in
test
clc
dec
xchg
sub
jno
hlt
adc
push
pop
cmc
inc
mov
fcoms
mov
lret
add
add
inc
and
xchg
repz
and
xlat
in
idiv
mov
mov
out
icebp
and
hlt
cmp
pop
jmp
sub
lcall
out
hlt
or
xchg
repnz
xor
push
stos
sub
push
jmp
inc
add
testb
outsl
stc
test
addr16
cld
or
lea
punpcklwd
loope
xchg
and
insb
cmp
call
fnsave
push
sbb
jo
stos
inc
pop
pop
mov
add
mov
js
mov
daa
push
ret
add
xorb
cmp
or
sbb
enter
jb
ljmp
lcall
add
mov
pushl
and
jl
outsl
jmp
add
mov
pop
and
jmp
add
lea
or
stos
mov
mov
arpl
stc
arpl
pop
popa
jle
rclb
adc
sbb
ss
cmp
stos
xchg
outsb
and
pop
inc
inc
lock
push
pop
stc
enter
push
adc
cld
sbb
add
add
inc
cmc
add
movsb
jo
and
and
pop
adc
stos
rclb
push
mov
call
adc
push
aas
or
lods
jo
dec
push
and
sahf
mov
rorb
xlat
mov
inc
ret
ret
sti
push
adc
popa
ljmp
and
xchg
sbb
scas
pop
call
ret
outsb
cwtl
out
push
mov
jb
daa
xchg
xchg
jmp
pop
ljmp
cwtl
xchg
mov
adc
dec
push
testb
sub
cmp
mov
sahf
pop
or
rclb
outsb
adc
sub
cli
cmp
jp
ljmp
rolb
xchg
iret
scas
mov
and
jl
sti
jo
inc
fsubs
pop
mov
mov
daa
aas
dec
mov
push
xorb
adc
shrb
xor
cli
pop
adc
adc
loop
sti
fidivl
cli
pop
xchg
mov
or
push
add
adc
xor
jle
in
inc
mov
and
adc
and
ljmp
pop
mov
sub
cltd
sbb
lret
or
decl
mov
pop
icebp
pcmpgtb
aam
clc
jno
jmp
pop
or
cltd
inc
std
incb
add
push
and
test
shrb
inc
movsb
imul
add
out
test
std
idiv
add
sti
cmp
adc
sub
sub
mov
aad
xchg
cmp
push
jmp
movsb
jns
adc
push
fcomps
and
mov
adc
sub
sub
pop
call
jge
cld
push
mov
fs
xchg
push
insb
je
sti
add
gs
adc
adc
sbb
sbb
sbb
cmpsb
scas
sub
addr16
subl
loop
sub
jmp
xlat
sbb
loop
cmc
push
lret
sti
inc
and
sbb
scas
arpl
out
insl
test
adc
adc
jmp
mulb
xor
out
int3
inc
repz
and
cmpsl
lock
bound
adc
pop
pop
scas
or
pop
pushf
test
jecxz
loopne
push
test
rcrb
jmp
imul
cmpsl
in
sub
jno
or
and
jo
and
xchg
sub
adc
imul
xor
inc
sbb
cmp
push
cmpsb
lea
dec
xchg
mov
loope
mov
and
mov
lock
ret
push
or
adc
dec
hlt
ljmp
leave
rorb
sub
cli
daa
or
jb
das
jmp
xchg
jle
and
push
and
ljmp
in
sbb
push
sub
push
adc
pop
add
jno
aad
mov
sub
add
out
rorb
pop
jle
outsb
adc
cwtl
scas
imul
stos
jae
push
lock
pop
pop
decl
lret
push
sbb
xchg
sub
jmp
addr16
shlb
cli
push
and
adc
pop
sub
clc
movsb
add
inc
fadds
mov
adc
daa
leave
stos
mov
mov
nop
or
pop
mov
xor
add
insl
cld
lods
cmp
fs
aaa
test
mov
xor
scas
rorb
add
stos
outsl
movsl
cvtps2pd
insb
pminsw
out
insb
daa
xor
out
jmp
pop
mov
mov
sub
in
and
popf
leave
cwtl
ljmp
ss
mov
bound
popf
or
fstp
mov
out
mov
aam
jo
stc
shlb
fs
mov
adc
popa
mov
xchg
addr16
and
xor
in
inc
icebp
mov
repnz
enter
jbe
add
push
and
or
out
ljmp
arpl
movsb
cmpl
jne
sub
sbb
dec
adc
lock
pop
add
and
shl
nop
add
push
mov
adc
lea
pop
mov
cmp
adc
pop
pop
push
loope
push
pop
mov
adc
xchg
mov
mov
js
stc
roll
jl
mov
xchg
or
inc
movb
push
lods
insb
sub
sbb
add
mov
and
xor
adc
shrl
push
sbb
sub
mov
outsb
mov
add
insl
cli
pop
pop
rcrl
fmuls
pop
sbb
jo
and
push
mov
mov
sbb
add
lret
mov
push
hlt
cli
adc
aad
jns
lock
daa
out
mov
rolb
lret
dec
or
push
arpl
push
mov
je
or
ffree
jb
add
pop
ja
sbb
mov
dec
stc
jmp
aam
cld
mov
pop
mov
cmpsl
cli
jle
pop
push
push
pop
sub
fimuls
adc
jl
or
push
lock
or
dec
xchg
xlat
fstps
add
pop
push
push
cmovs
and
adc
sahf
test
push
rclb
inc
mov
mov
and
dec
aas
aam
rcll
pop
push
or
or
mov
ljmp
add
push
popf
loopne
add
adc
cmp
jmp
sahf
mov
pop
pop
add
jecxz
sahf
insb
idivb
and
sbb
dec
pop
inc
repnz
int3
pop
or
loop
in
sub
mov
and
xchg
xchg
or
xchg
and
loope
repz
dec
pop
sub
aas
and
sub
jge
pop
or
into
adc
out
mov
divl
adc
push
addr16
inc
in
add
cs
push
repz
mov
js
js
xchg
push
lahf
dec
jg
cld
mov
test
jae
inc
lret
add
push
cmp
pop
pop
add
ret
sahf
add
es
les
lcall
dec
mov
repnz
testb
and
jbe
sbb
fcomps
seto
xor
jmp
sub
push
ret
out
ljmp
lock
jmp
test
cwtl
push
loopne
ljmp
aad
or
stc
repnz
push
pop
or
dec
sbb
and
outsb
setbe
jo
push
lds
sbb
xchg
sbb
call
loope
xor
xlat
cmp
mov
pushf
subb
pop
push
push
fidivl
mov
xor
jecxz
pop
cli
stc
ja
fcompl
mov
stos
stos
jae
rcrl
dec
xor
xchg
cwtl
push
stc
insb
testl
sub
jae
movhps
push
mov
sub
lret
adc
fdiv
fstpl
test
sbb
push
cwtl
and
loopne
mov
and
adc
outsb
pminsw
mov
call
sub
imul
and
enter
adc
add
js
jbe
repz
rolb
add
push
or
push
hlt
fisubrl
mov
mov
sub
jae
jecxz
sub
pop
inc
and
sbb
repz
and
test
pop
and
divb
add
nop
js
clc
fwait
or
mov
shrb
push
fdivrl
outsl
mov
or
inc
inc
fs
daa
and
cmp
add
nop
shrb
daa
sbb
add
rcr
cli
cld
jl
add
push
js
mov
clc
fs
aam
out
sub
std
push
rclb
sahf
es
sbb
jmp
in
movsb
push
inc
add
mov
sub
inc
mov
sub
and
fs
jmp
cmp
nop
adcb
jecxz
add
and
push
out
push
cwtl
adc
inc
cld
xchg
push
mov
adc
sub
cld
adc
xlat
mov
or
mov
sbb
in
dec
fldt
inc
fidivs
ljmp
cmpl
or
stos
sahf
hlt
icebp
out
mov
sbb
stos
pop
sub
push
sub
hlt
cld
add
decl
ja
mov
out
int3
dec
pop
out
fs
repz
insb
cmc
cmc
dec
movsl
out
jbe
cmpsl
xor
add
dec
lcall
inc
sbb
push
cmp
popf
sbb
lods
aad
std
push
test
jle
roll
jmp
xor
mov
ljmp
movsb
cmpsl
cmp
icebp
push
pop
adc
and
inc
sbb
cld
adc
fs
aam
pop
clc
adc
unpckhps
inc
cmp
push
loope
dec
xchg
push
dec
stc
and
fs
add
popf
mov
fs
push
aad
and
sub
jbe
clc
bsr
pop
adc
pop
mov
rcl
jae
add
lock
push
ljmp
enter
dec
inc
pushf
das
sbb
adc
mov
or
add
or
inc
adc
jl
fs
cwtl
xchg
mov
sub
push
fcom
enter
daa
sti
fwait
mov
out
sub
pop
hlt
adc
inc
or
mov
cs
incb
adc
fs
sub
mov
pop
negl
sbb
shrb
mov
mov
lret
cmp
add
sbb
xchg
lods
push
and
shl
cmpsl
les
test
push
xchg
xchg
and
pop
mov
loop
push
add
in
std
cli
cmc
cs
jo
sub
sti
pop
mov
lock
lods
test
sbb
jecxz
sbb
sub
mov
add
push
imul
mov
loope
push
mov
cld
sar
call
jp
repz
add
ret
sub
xchg
testl
dec
rorl
test
and
nop
sbb
mov
and
xor
cld
sarb
enter
dec
fadds
mov
jmp
jl
cli
pavgw
lea
mov
movsb
ret
inc
cmp
push
or
mov
cmp
shlb
push
xchg
rcll
cld
icebp
mov
lock
jmp
lods
adcl
enter
push
fs
dec
inc
and
jbe
push
jecxz
cld
sbb
add
jb
fmull
insb
mulb
out
out
add
xchg
push
ljmp
js
dec
and
and
dec
enter
outsl
stos
hlt
notl
sbb
sbb
fidivl
cld
cld
enter
daa
pushl
cwtl
cmp
popa
mov
imul
sbb
int3
or
or
lods
jge
or
sbb
or
out
and
sbb
pushf
mov
stc
nop
xchg
imull
jno
test
stos
mov
add
fsubl
jno
call
lock
push
sub
pop
xchg
daa
or
mov
xor
or
test
xchg
js
and
adc
roll
mov
push
pop
lcall
xchg
xor
fildll
mov
dec
add
and
loope
push
sub
ja
ljmp
loope
jl
sbb
fcoml
xchg
dec
adc
aas
and
adc
dec
mov
add
adc
adc
mov
dec
daa
movsb
pop
int
rcrl
inc
imul
push
dec
cli
lock
push
add
int3
mov
push
and
push
sub
xchg
out
and
or
enter
mov
pop
sbb
or
imul
xor
lea
cmp
push
inc
xlat
xchg
repnz
aam
pop
lcall
pop
cmpb
addr16
sbb
call
popa
fsubrs
mov
imul
fcoms
add
pop
xchg
mov
pushf
lret
test
sbb
nop
adc
repz
daa
sub
xor
and
fcmovnbe
and
sbb
movsb
popa
jnp
cli
jmp
ret
cmc
pusha
dec
inc
inc
jmp
popa
lahf
repz
push
repnz
or
lret
cwtl
sti
adc
rorb
cmpsb
pop
pushw
sub
in
rcr
ss
sub
cld
add
inc
lret
xchg
repnz
sbb
cmp
lds
push
out
add
add
jl
leave
arpl
jmp
add
or
aad
outsb
enter
insb
aam
call
mov
push
int3
daa
push
sub
or
out
in
or
outsb
daa
xor
push
aas
push
ljmp
aam
add
dec
xchg
outsl
mov
mov
sub
xor
cmp
xor
mov
sub
add
xchg
cwtl
push
aaa
ret
sub
pop
insl
lock
sub
dec
pusha
sub
dec
stos
add
test
fidivs
sub
sbb
sub
cld
in
mov
cmpsl
call
movsb
cmp
fisttpl
sbb
add
mov
arpl
test
cli
inc
frstor
push
mov
mov
dec
hlt
xchg
fs
adc
repnz
rcrb
add
or
jnp
pop
roll
and
dec
cltd
daa
or
inc
add
mov
add
ja
sub
cs
adc
mul
test
div
nop
jmp
les
sbb
loope
push
fmuls
add
xlat
push
repz
push
inc
ja
push
xchg
arpl
dec
or
pop
out
filds
and
cltd
sbb
aam
into
sbb
cld
inc
mov
inc
ljmp
jle
sbbb
sub
out
jo
sbb
mov
push
pop
cmp
icebp
stos
sbb
fimuls
dec
cld
xchg
and
test
shll
push
jmp
sbb
gs
cmp
xorb
out
xchg
nop
and
sbb
sbb
or
adc
int
jmp
xor
repz
and
cmp
imul
jno
push
push
pop
sbb
call
push
pushf
inc
sub
and
cmp
pop
sbb
mov
adc
lock
push
out
rcrb
add
imul
mov
xor
jo
mov
or
sub
push
cli
or
dec
xchg
lds
or
jns
mov
pop
mov
in
arpl
testb
mov
add
pop
ret
and
jg
adc
jmp
in
sbb
sbb
pop
and
adc
insl
adc
inc
mov
mov
or
ja
add
out
and
add
adc
gs
cmp
popl
xchg
in
push
push
in
push
jl,pn
cltd
cmp
cmpsl
bnd
jp
stos
push
sub
mov
xchg
mov
psubd
fiadds
push
orl
out
push
imul
mov
cmp
iret
fcoms
dec
mov
psubd
cli
cmpsl
enter
adc
ljmp
gs
mov
add
add
enter
je
lock
adc
es
or
call
icebp
data16
sbb
push
jle
push
pusha
add
mov
call
lea
mov
repz
xchg
negl
inc
cwtl
cmc
and
xchg
fcoms
pop
in
cmpsl
and
stc
ljmp
sub
mov
adc
xor
lock
pop
mov
or
inc
add
and
or
movsb
jno
sbb
out
arpl
sbb
das
shr
jmp
xor
cmp
pop
rclb
add
shl
pop
lds
fdiv
dec
jo
out
decb
test
movl
aas
fistpl
sub
fcoms
sub
dec
or
cmp
and
test
sub
repnz
popa
scas
mov
sbb
fcoms
movsb
stc
and
xchg
and
and
sbb
sti
or
daa
test
cs
cmpsl
cmpsb
mov
sub
pop
scas
inc
inc
mov
loopne
xchg
push
mov
push
addr16
add
mov
lds
sbb
lcall
js
adc
mov
fisttpl
xchg
and
arpl
add
add
sbb
adc
cmp
lea
pushl
lock
mov
add
xchg
jle
pop
mov
insl
test
lret
cmp
adc
add
push
mov
add
stc
inc
mov
in
sub
stos
cmp
push
adc
sbb
sbb
cli
iret
pop
add
or
ret
das
dec
lock
mov
and
sub
mov
sub
aas
mov
pop
or
sub
aas
xor
cs
sbb
lds
xchg
xor
nop
daa
js
xchg
iret
add
inc
add
add
sub
sub
xlat
xor
loopne
ljmp
push
adc
add
in
cld
and
repnz
push
xor
adc
adc
push
jbe
jmp
call
and
dec
js
aaa
mov
mov
fsubs
inc
or
stc
clc
shrb
mov
pop
push
sbb
adcb
inc
bound
into
add
adc
add
push
repz
xchg
ret
mov
push
or
push
ret
cmpsl
add
sbb
pop
aad
in
iret
js
scas
and
xchg
sti
daa
hlt
or
mov
mov
dec
addr16
insb
or
enter
xchg
push
jmp
xchg
or
adc
mov
scas
mov
leave
out
lret
out
or
push
loope
ret
sti
pop
pop
movl
mov
fsubrl
adc
stos
shr
mov
and
pop
or
test
nop
bound
pop
jecxz
sahf
inc
push
push
dec
pop
and
es
cli
pop
sbb
fs
inc
and
xchg
sub
sbb
xchg
adc
inc
mov
frstor
xor
movsl
fdiv
fldt
or
fiaddl
cltd
insb
adc
cmp
lock
jo
lods
roll
jmp
fwait
cmpsl
lret
mov
mov
push
cmp
and
inc
cwtl
repz
add
xchg
mov
add
sub
leave
push
ljmp
jecxz
sub
add
and
test
or
xchg
testl
outsl
xchg
add
add
ljmp
shl
notb
pcmpeqd
inc
loopne
sub
mov
loope
sub
lock
enter
pushf
adc
stos
push
push
lods
add
and
adc
imul
dec
loopne,pt
xor
dec
out
cld
out
fisubrs
push
ljmp
push
cmpsl
add
push
push
icebp
pop
add
out
lret
roll
mov
int
scas
sbb
sbb
ljmp
mov
das
pop
pop
adcb
out
mov
or
sbb
dec
xor
mov
stos
scas
jns
sbb
mov
mov
or
enter
fsts
lcall
sub
cmp
in
xor
jo
imull
stc
and
popa
cwtl
icebp
cltd
ret
enter
jg
cmp
adc
outsb
fadds
inc
sbb
add
inc
mov
into
in
or
sbb
jns
int3
adc
jecxz
cmpsl
clc
sub
out
clc
repnz
dec
into
adc
jmp
adc
dec
dec
jmp
js
into
sub
and
cmc
and
and
adc
inc
enter
or
inc
das
pop
aam
lcall
inc
test
mov
rcrl
addr16
dec
and
xchg
addr16
mov
popa
jns
cmp
or
pop
enter
lcall
scas
sub
testl
and
lds
add
je
sub
cmp
daa
iret
push
cwtl
mov
ljmp
daa
std
sub
dec
jecxz
repz
inc
mov
and
push
lock
inc
aad
lods
xor
or
sbbb
int3
fildl
sbb
mov
push
dec
pop
sbb
lea
repnz
jmp
dec
mov
push
push
loopne
js
aam
imul
loop
and
cmp
cmp
out
shl
add
pop
and
push
bndstx
fsubs
icebp
cmp
dec
imulb
sbb
adcl
lea
cld
sub
cmp
pop
mov
pop
out
mov
sbb
adc
pop
mov
and
loopne
cmp
pop
cmp
repz
call
pop
jnp
sub
cmp
outsb
pop
jb
push
inc
scas
and
jb
and
adc
jp
stos
xchg
sub
cwtl
movsl
and
sub
push
and
roll
dec
dec
push
adcb
inc
ret
sub
inc
in
add
xor
or
push
addr16
mov
push
mov
sbb
cmpsl
jp
push
sub
enter
adc
loopne
and
pop
pop
sub
cmp
sbb
jo
mov
aaa
icebp
ja
dec
fstps
aas
int3
or
sub
sbb
or
or
gs
add
movsl
add
insb
dec
aad
xor
adc
push
pusha
push
mov
pop
movsb
adc
out
and
push
gs
and
shll
pop
rcrl
lret
xlat
repnz
test
out
in
add
lods
adc
jg
jl
xor
inc
sbb
sarb
cld
adc
inc
or
aas
test
push
cli
and
mov
flds
pop
outsb
push
std
cltd
jo
push
add
arpl
pop
jecxz
stos
jbe
sub
testl
adc
in
js
jbe
test
cmp
repz
fcoml
cld
sbb
das
test
stc
pop
icebp
add
adc
cli
fcoms
rcrl
mov
mov
shl
das
dec
add
mov
sub
call
adc
rclb
jl
cmp
push
adc
pop
pop
push
roll
in
pop
sbb
mov
lcall
jnp
rorl
jle
and
loope
push
adc
pop
pop
add
popf
dec
xlat
and
dec
je
add
cs
adc
xchg
jecxz
lods
sbb
sahf
dec
and
into
out
js
sub
dec
mov
imul
lds
rclb
adc
adc
sub
push
inc
aam
nop
testb
sbb
sbb
and
decb
sbb
lret
psrad
sub
cld
push
pop
or
cld
sbb
mov
or
add
test
dec
mov
mov
out
or
hlt
rcl
push
sub
or
xchg
sbb
add
push
cli
in
push
scas
lock
out
adc
fisttpll
sbb
pop
popa
ss
pop
cmpsl
stos
es
adc
lcall
notb
scas
jp
push
jbe
mov
imul
cs
add
add
adc
inc
aam
fcoms
xchg
mov
sbb
adc
shl
cltd
and
lock
daa
fisttpll
daa
add
mov
jae
inc
cmp
inc
lock
xchg
jns
or
and
add
fwait
add
sbb
jmp
stos
add
cli
test
lock
shll
cmpsb
orl
loope
jae
sub
and
adc
dec
std
lock
pop
std
add
inc
mov
mov
adc
cld
adc
mov
subb
sub
scas
outsl
mov
daa
cmp
lods
push
fwait
push
cmpsl
sbb
xchg
int3
push
sub
xlat
cmpsl
sbb
mov
fs
subb
outsb
add
cmp
mov
test
dec
fsubp
pop
dec
or
clc
cli
dec
push
mov
lock
lahf
fists
or
mov
leave
or
mov
sbb
es
add
push
sub
pop
push
mov
fsubl
push
sbb
mov
popf
push
cmpsl
sub
pop
mov
cmp
mov
cwtl
xchg
jbe
sbb
mov
push
in
pop
test
dec
pop
cmp
test
mov
sbb
scas
jmp
sbb
test
ljmp
iret
push
adc
outsb
lds
addr16
daa
or
adc
outsl
pop
sbb
std
sbb
cmc
mov
xchg
pop
hlt
hlt
sbb
sub
sbb
mov
sbb
dec
daa
and
bound
or
movsb
push
pushf
icebp
or
aam
jne
enter
iret
xor
xchg
sbb
out
test
push
test
imul
mov
jp
hlt
ljmp
and
or
sbb
adc
daa
lcall
and
movsb
or
jo
sbb
or
mov
adc
mov
xor
adc
pop
in
sbb
dec
and
jle
pop
lret
inc
mov
dec
daa
lcall
outsl
or
add
movaps
jb
repz
mov
xor
ja
mov
in
xchg
sub
push
pusha
pop
and
mov
jecxz
lret
out
cmp
pop
dec
loop
adc
push
adc
ja
sti
cmp
or
loopne
or
test
sbb
cli
lock
sub
inc
cmp
ljmp
sub
xor
push
test
ret
pop
dec
rcrb
push
mov
ficomps
push
sahf
shrb
inc
int3
int
push
push
rep
cmc
xchg
outsb
packsswb
std
addr16
inc
lock
lods
or
jne
or
pop
sti
testb
test
cmp
in
add
dec
cld
and
fs
jmp
sub
ljmp
enter
loope
and
nop
inc
negb
adc
inc
std
pop
sti
sub
std
add
rorb
movsl
cmp
mov
cld
mov
or
adc
cmpsb
repz
xlat
xchg
push
pop
xchg
sbb
push
in
insb
insl
daa
push
ficoml
sbb
pop
rcl
fwait
in
adc
outsb
enter
lods
add
fdiv
xchg
jne
dec
insb
mov
push
dec
and
sbb
mov
sahf
push
cmp
test
daa
das
push
push
repz
cmc
dec
lock
cli
rclb
push
mov
fistpll
out
movhps
dec
stos
push
sub
repz
pop
daa
mov
cmp
lea
and
popa
xchg
imul
push
cwtl
xchg
les
push
pop
push
ljmp
xchg
insl
sbb
or
and
sbb
out
inc
cmp
dec
ds
arpl
and
cmc
pop
pop
sub
mov
sbb
cmp
jb
mov
mov
imul
inc
or
mov
nop
mov
shl
lock
pushf
je
cld
daa
stc
mov
testb
jle
adc
mov
dec
mov
fmul
inc
cmpsl
pop
stc
js
pop
enter
ja
add
ljmp
cld
loop
dec
repz
lcall
je
dec
jp
xor
and
push
inc
adc
into
icebp
jmp
pop
xchg
hlt
sub
mov
mov
fmuls
sbb
dec
push
js
popa
mov
push
and
fwait
add
cmp
jmp
push
add
aam
jmp
mov
aas
gs
and
xorb
add
out
cmp
mov
push
sbb
clc
aas
roll
and
stos
outsb
jbe
mov
pop
mov
lock
dec
push
xor
xor
sub
daa
sub
leave
cmp
inc
add
push
sub
cmp
or
and
dec
popa
fs
scas
and
push
adc
adc
pop
enter
clc
adc
push
xor
sbb
sbb
gs
sub
pop
mov
push
stos
lahf
xchg
sbb
ljmp
movsl
enter
sbb
adc
lret
sbb
jp
in
add
jns
hlt
test
add
in
push
fadd
test
loope
pushf
out
cmp
mov
int
cmp
and
outsl
fisubs
and
roll
or
xchg
mov
xchg
rclb
or
add
lods
sar
adc
stc
arpl
cli
and
into
sti
and
test
inc
call
push
addr16
sub
or
iret
add
movsb
adc
sbb
add
bound
adc
out
roll
sbb
push
bound
rol
in
cld
mov
pop
sbb
sti
aam
sub
dec
imul
mov
psraw
add
in
ljmp
and
out
or
insb
xchg
push
into
add
cwtl
and
push
loopne
aad
xchg
sub
ret
sub
dec
testb
pop
jmp
add
insb
xlat
sbb
out
add
jo
fildl
clc
movsb
xchg
aas
or
int3
mulb
icebp
adc
jo
adc
paddsw
insl
sbb
push
addr16
mov
cltd
adc
or
out
sti
in
sbb
aas
and
std
stc
jecxz
addr16
or
adc
push
and
call
aam
dec
inc
push
leave
cmc
sbb
shlb
popf
lock
xor
repz
enter
mov
cmpsl
cmp
or
fs
xchg
cmp
rclb
loop
bswap
push
dec
adc
les
or
mov
lock
and
push
mov
imul
sub
stos
sbb
rcrl
jecxz
lret
push
adc
sbb
cli
xor
daa
push
ss
jne
mov
in
jo
or
jno
or
mov
ret
push
mov
fs
fidivrl
stos
xchg
cmp
pop
cvtpi2ps
fldenv
inc
cmpsl
repz
sub
arpl
aad
frstor
adc
lock
lods
mov
aam
lea
sbb
and
sub
xchg
repnz
mov
cmp
inc
mov
and
inc
sub
jge
lods
or
or
jbe
cs
cmp
or
and
xchg
sbb
xchg
pop
sbb
adc
cld
pop
mov
push
out
mov
dec
out
ljmp
faddl
and
std
cmp
pop
ljmp
xchg
and
sti
push
jecxz
cmp
aaa
in
test
lds
lods
or
pop
or
adc
test
out
pop
das
shll
jno
mov
aad
sub
jmp
jmp
enter
popa
push
jp
testb
sub
push
in
add
jbe
cmpsl
stc
fs
mov
cltd
gs
sub
add
and
pop
sub
xchg
stos
cmp
movsb
cli
dec
cmp
addr16
push
cmp
jecxz
sub
dec
mov
pop
or
mov
cltd
mov
call
mov
jmp
cli
test
inc
sbb
mov
shr
mov
in
stos
mov
lods
fadds
pop
sbb
ja
inc
jb
push
mov
xchg
push
mov
lcall
or
xor
fdivs
sti
add
test
push
push
mov
sub
hlt
std
subl
out
sub
das
pop
sbb
cmp
and
or
and
mov
mov
jmp
add
clc
outsl
inc
fisttps
pop
das
jb
and
test
movsb
addr16
test
sti
push
mov
xchg
out
out
in
or
stc
and
imul
push
mov
and
and
jl
nop
jo
inc
ret
or
dec
or
daa
or
jg
dec
jo
sti
mov
fsubrl
in
push
bound
sub
or
mov
repz
cltd
in
movsb
scas
int3
and
adc
sbb
repz
cmp
cld
psubusb
test
sub
pslld
imul
cld
sub
out
mov
js
cmp
push
repz
add
adc
sub
gs
fsubp
add
add
lret
ret
xor
sbb
fs
loope
mov
mov
test
sbb
xchg
mov
pop
sarb
call
push
test
pushl
loope
pop
sbb
sbb
add
daa
cmp
xor
push
cwtl
pop
xlat
pop
mov
pop
cmpb
aam
enter
js
and
jecxz
stos
int3
mov
lcall
or
dec
pop
push
sbb
movsb
adc
xchg
mov
add
movsb
nop
mov
clc
add
je
hlt
xchg
repz
and
xchg
addr16
ljmp
arpl
dec
clc
repnz
cld
pop
insl
in
faddl
and
push
and
sahf
mov
daa
adc
sbb
sub
js
push
sub
xchg
in
sbb
lea
mov
cmc
mov
mov
add
or
lcall
sbb
and
nop
dec
and
sub
adc
or
sub
movsb
dec
push
movsb
add
incl
xor
fs
std
and
testl
push
movsb
and
xchg
ljmp
mov
xchg
and
out
lret
mov
xchg
sahf
mov
cltd
push
js
cmpsl
cmpsl
nop
jb
add
dec
and
test
cmc
rclb
stos
mov
cmp
xchg
mov
mov
or
aas
aad
testb
pop
mov
test
and
inc
repz
fisubl
out
stos
lret
or
mov
sti
cwtl
mov
ja
sub
ljmp
fwait
jmp
xor
bound
ljmp
fs
fcoms
inc
insb
push
dec
pop
stos
sbb
js
adcl
add
arpl
and
cmp
gs
pop
mov
aad
testb
mov
fdivr
or
pop
pop
mov
popf
frstor
mov
jno
imul
roll
cmp
add
nop
lcall
jo
jnp
add
testb
movsb
pop
jbe
test
pop
mov
and
sub
out
clc
sub
iret
js
push
dec
notl
or
jmp
int3
cld
fcom
add
loope
shrl
sub
lods
lds
std
xchg
mov
stc
pop
arpl
mov
pop
vcvtsi2sdl
test
int3
and
mov
mov
cmp
xor
add
sub
outsb
add
xor
hlt
sbb
mov
iret
cmc
ret
ljmp
sub
sahf
test
jp
ljmp
ja
jo
push
ljmp
mov
fsubs
and
jo
testb
lret
insb
cmp
add
rol
push
add
movsl
mov
jno
std
cmpl
cs
push
push
and
in
jne
mov
add
les
inc
imul
xor
pop
in
and
fsubrs
sbb
lock
adcb
and
add
pop
enter
pop
sarb
pushf
gs
jnp
mov
lahf
cmp
enter
mov
hlt
push
je
sub
jg
mov
out
gs
xor
mov
mov
stc
pop
push
lds
mov
aad
lahf
inc
and
and
fwait
insb
lcall
out
pop
outsb
mov
pop
insb
add
and
cmp
hlt
inc
les
test
icebp
jbe
mov
bound
and
inc
mov
insl
pop
sbb
cltd
push
clc
repz
repz
cmpsl
sbb
push
mov
sbb
out
dec
mov
idiv
cmp
sbb
arpl
or
inc
insb
fadds
xchg
mov
shll
ljmp
cld
pushf
sti
testb
out
loope
adc
push
adc
cmc
sarl
hlt
sbb
pop
jns
ljmp
add
cmp
out
xor
cmpsl
adc
sbb
cld
cld
push
lahf
pop
dec
fistpl
add
or
add
sbb
and
cmp
adc
push
or
mov
bnd
mov
add
pop
pop
pushf
aas
into
sub
xchg
repnz
mov
jne
and
add
xchg
pop
lcall
mov
loopne
or
push
sub
push
add
cli
sbb
arpl
xchg
pop
repnz
divl
fs
jge
repnz
push
xlat
and
dec
xor
adc
test
sub
jp
sub
pop
insl
jbe
sbb
add
repz
and
push
jmp
stc
stos
and
aam
or
sbb
xor
movsb
movsl
sbb
negl
fs
jns
jecxz
cmp
cltd
push
call
push
and
pusha
icebp
dec
outsb
push
add
lock
sbb
js
stc
out
or
nop
jle
cmp
mov
mov
fcom
pop
fcompl
or
and
mov
xchg
inc
ffree
es
mov
out
lret
or
fdivs
dec
addr16
inc
scas
hlt
push
lds
push
cld
addr16
push
and
nop
test
adc
pop
test
mov
or
xchg
cmp
push
or
cmp
arpl
mov
outsb
in
mov
inc
jo
sbb
fmuls
jns
je
lret
mov
cli
mov
sbb
sub
jg
dec
js
repz
loopne
push
push
lret
cli
arpl
cmp
lcall
mov
or
and
and
dec
lock
scas
stc
xchg
add
and
add
xor
stc
xchg
fmul
or
inc
pop
mov
xchg
fisttpl
push
outsl
xor
repnz
adc
imul
out
ljmp
dec
jmp
pop
dec
or
js
push
aaa
xchg
and
add
inc
sbb
pop
and
ljmp
and
punpckhdq
negb
and
lcall
sbb
inc
sub
mov
mov
hlt
sub
into
lret
stos
imulb
incl
roll
fs
xor
into
stos
aam
movsb
adc
enter
iret
and
fnsave
je
cwtl
dec
int
adc
popf
and
dec
sub
std
xchg
add
xchg
inc
sbb
movsb
sbb
jmp
mov
and
sbb
sub
and
dec
or
loope
pop
out
out
popa
lcall
xchg
sub
and
out
push
jecxz
push
nop
sbb
jnp
jmp
aas
fldt
sub
stc
mov
lea
addr16
sbb
and
add
adc
fadds
out
and
sbb
add
ss
imul
xchg
fwait
lret
sahf
xchg
adc
cmpsb
jle
sub
xlat
push
and
pop
adc
sub
std
push
les
and
rorb
adc
aaa
and
fmuls
test
nop
scas
sub
adc
sbb
shlb
mov
and
jmp
jecxz
or
adc
imul
popa
dec
and
fs
inc
mov
and
lea
adc
sub
add
ficomps
adc
or
dec
leave
lock
lcall
sbb
and
lret
cld
or
mov
sti
inc
div
negl
sub
sub
jp
test
mov
add
adc
cli
add
mov
pushf
cmpsl
push
fidivl
inc
int
and
push
sbb
repz
sarb
cmc
fs
insb
sbb
jge
out
add
and
jmp
insb
adc
mov
xchg
pop
out
enter
cltd
and
push
jb
sahf
dec
fdivr
or
sub
es
mov
ljmp
nop
xchg
push
and
movb
add
pop
addr16
rcl
and
or
add
mov
std
mov
stos
lahf
sub
mov
repz
sub
sub
aas
test
or
fildl
clc
mov
dec
and
pop
jecxz
push
and
mov
adc
icebp
pop
and
mov
loope
sbb
lock
ljmp
out
inc
ss
push
cwtl
adc
cmc
adc
cwtl
out
test
mov
fnstenv
lcall
adc
inc
ja
xchg
push
add
stos
das
sarb
stos
test
xchg
lret
jno
or
jnp
xchg
les
sub
ret
xor
dec
pop
pop
pop
lods
xor
and
or
icebp
pop
add
pusha
cmp
mov
into
mov
push
movsb
pop
pop
mov
push
mov
mov
pop
je
rcl
add
and
xchg
jecxz
popf
xchg
push
stos
arpl
jp
in
push
mov
and
je
das
xchg
insb
add
sbb
push
loopne
shll
adc
mov
imul
sbb
sbb
dec
in
js
ljmp
xor
idivb
arpl
inc
mov
xor
jbe
sub
test
inc
stc
mov
mov
scas
push
repnz
sub
cld
pop
popf
leave
sub
std
movsb
add
jle
add
xchg
add
fcoms
push
scas
test
lret
xor
aam
lock
cs
std
scas
push
repz
out
pop
xor
push
lods
jbe
and
sbb
rcl
popa
stc
sub
cmp
add
pop
jp
aad
or
bound
mov
push
dec
cmp
and
loop
or
adc
sbb
jecxz
ds
daa
dec
icebp
repnz
cmp
mov
sub
push
mov
sbb
pop
sub
pop
mov
mov
scas
sub
push
pop
hlt
push
inc
das
push
loope
rep
or
cmpsl
inc
sub
mull
pop
cmpsl
icebp
jge
imul
add
in
and
and
andb
popa
mov
outsl
aad
push
movsb
bnd
clc
push
jo
sub
xor
ret
imul
in
insb
xor
cwtl
testb
push
pop
clc
out
incl
aad
divl
cld
sub
or
xchg
movsb
call
inc
inc
add
sbbb
rol
icebp
aad
sub
jge
sbb
pop
arpl
pop
hlt
popf
cli
in
out
or
mov
mov
outsb
mov
pop
es
xchg
sahf
daa
lret
dec
push
add
add
sub
fsubrs
adc
sti
adc
cmc
sub
jge
testb
push
sti
mov
xor
jle
rolb
loopne
bound
xchg
dec
or
out
rolb
and
or
out
stos
shll
inc
test
push
adc
jecxz
shl
and
pop
sti
fisubrs
and
inc
or
jg
sbb
mov
sbb
jl
enter
adc
cld
push
testl
call
or
ljmp
pop
test
js
jae
sub
mov
fsubr
xchg
sbbl
sbb
push
dec
std
and
adc
sub
push
frstpm(287
inc
adc
jns
test
pop
jno
xchg
in
push
xor
mov
out
scas
and
and
fcmovbe
daa
scas
add
out
fmull
pushf
and
mov
cli
jmp
push
dec
or
rclb
push
in
adcl
clc
adc
outsb
inc
xchg
stc
sbb
pop
addr16
inc
imull
test
add
sbb
mov
movsb
and
sub
inc
hlt
ljmp
into
jecxz
data16
sbb
push
xor
loopne
roll
insb
stc
cmp
cmpsl
or
roll
fnstsw
fwait
std
adc
enter
sbb
xor
pop
ret
sbb
or
leave
add
fs
setno
test
dec
hlt
fcomps
mov
sub
or
mov
stos
out
mov
or
jbe
and
shlb
imul
adc
loopne
or
enter
faddp
icebp
or
call
and
das
mov
insb
dec
dec
out
ljmp
push
enter
sub
push
or
rcl
mulb
nop
xchg
or
cld
or
dec
outsl
leave
pushf
repz
jne
and
and
test
inc
pop
sbb
xchg
mov
je
sbb
stos
les
or
pop
rcl
repz
mov
xor
and
adc
and
add
fdivrl
fs
add
fidivrs
cmp
test
cld
add
mov
jmp
cs
sub
sub
add
xor
shlb
js
cmp
aad
shrb
sbb
in
fs
cmp
and
lods
and
lcall
cwtl
add
inc
mov
pop
jbe
push
and
pop
popa
cmp
int3
adc
ljmp
iret
mov
dec
fldl
repz
fdivr
sub
mov
dec
daa
daa
pop
ja
dec
push
stos
mov
addr16
push
jecxz
mov
push
and
dec
aas
sbb
clc
mov
and
es
pop
test
fdiv
jmp
and
psllq
cld
fidivl
add
cmpsl
push
sub
repz
dec
and
aam
fcoms
xlat
sbb
pop
addr16
and
outsl
dec
in
scas
inc
call
ljmp
add
outsb
out
sbb
mov
repz
out
loope
sub
hlt
pop
add
xchg
decb
mov
pop
imulb
nop
mov
and
outsb
notb
repz
daa
jbe
and
sti
cwtl
shrl
adc
es
xchg
mov
jb
and
push
loope
pop
sub
mov
and
ljmp
popa
movsb
in
sbb
xchg
push
insb
or
cmp
and
inc
imul
push
xchg
mov
sub
add
jo
into
pop
sbb
movsb
cs
sbb
mov
adc
dec
jl
sti
xchg
inc
sub
lock
add
addr16
mov
outsb
sub
stos
xchg
test
adc
mov
pop
addb
jne
inc
and
sbb
cmpsl
xchg
xchg
push
lock
fsubrs
lret
out
or
repnz
les
enter
fs
ljmp
cmpsl
push
and
dec
lock
and
clc
pop
enter
adc
jmp
int3
or
or
cltd
sbb
icebp
xchg
pop
icebp
or
arpl
mov
sbb
sub
iret
adc
daa
jo
sub
sub
xchg
jmp
dec
xor
adc
loop
imul
or
or
xor
sbb
shrb
daa
adc
mov
fsubrs
ljmp
sbb
popa
lret
sarb
ljmp
xchg
cltd
push
fdiv
push
divl
push
pop
pop
inc
les
nop
push
ja
lock
movsl
sub
cmc
lea
rcll
xchg
bound
and
mov
lcall
and
adc
addr16
aaa
adc
add
mov
jne
sbb
adc
icebp
sub
mov
stos
xchg
add
out
sub
sub
ljmp
jb
imul
or
repnz
dec
fcoms
hlt
mov
sub
add
cmp
fildll
sbb
and
mov
push
cltd
mulb
fsubrp
scas
dec
push
lock
lods
sbb
gs
lods
mov
sbb
jbe
adc
and
call
sub
loopne
hlt
sbb
fldcw
enter
add
ret
dec
in
xor
into
and
cmpsl
dec
cmc
insl
and
and
test
mov
xchg
in
test
mov
push
cmp
mov
and
jmp
pop
mov
adc
adc
and
jo
loope
lods
cmc
insb
scas
sbb
arpl
sahf
mov
and
jae
sbb
and
arpl
jle
daa
jmp
lods
sbb
add
jl
loope
adc
xor
lock
lcall
and
mov
and
adc
cltd
das
stc
dec
pop
cmpsl
cmp
ror
repz
and
sub
pop
add
fiaddl
mov
leave
ss
test
nop
les
ja
sub
inc
inc
out
sbb
cld
or
mov
in
iret
jne
repz
pop
adc
aas
stos
into
outsl
sbb
inc
xor
stc
xchg
fwait
out
and
mov
sti
dec
mov
pop
mov
jl
daa
and
cmp
and
or
test
dec
xor
sti
lret
cltd
mov
daa
loopne
jbe
lret
cmp
xchg
and
sbb
sub
push
cwtl
jg
sub
or
jo
sub
fistl
jl
dec
sbb
ljmp
cmp
push
and
push
xor
and
and
nop
inc
daa
nop
mov
dec
into
movsl
inc
pop
jmp
xchg
imul
xlat
push
mulb
popf
test
add
mov
ljmp
gs
sbb
ljmp
into
push
mov
lret
jne
mov
and
nop
repnz
and
fsubl
or
clc
ds
or
adc
xchg
ljmp
xchg
and
out
push
pushf
mov
out
sbb
jmp
sub
and
and
xchg
jae
or
fucom
out
mov
adc
xchg
push
repnz
add
and
sbb
fdivr
push
sbb
lods
loop
push
lahf
rorb
out
int3
and
pop
jmp
cld
inc
dec
mov
add
ljmp
pop
pop
cmp
sub
and
ja
cmp
sahf
arpl
cli
sbb
ror
or
pushf
dec
test
enter
loope
stc
and
sbb
jg
shlb
outsb
jne
hlt
add
sbb
dec
daa
cltd
cmp
mov
aaa
in
and
jmp
nop
mov
lods
push
js
cld
push
jg
mov
aam
test
data16
data16
lods
sub
and
es
in
push
icebp
test
mov
sbb
stos
mov
repnz
sub
xchg
enter
xchg
mov
pop
cld
popf
popa
repnz
sbb
ror
cld
xchg
lcall
loope
lea
sbb
lock
adc
ljmp
xlat
rorb
mov
fs
dec
pop
adc
xlat
pop
shl
push
pop
fcoms
dec
xchg
sbb
dec
adc
jno
fcoml
daa
jl
sbb
data16
mov
or
aaa
or
sbb
lahf
and
jbe
add
dec
lds
int
out
popf
mov
jle
or
xchg
and
inc
ret
test
xor
fadds
iret
loop
ror
bound
cld
mov
xchg
cmp
ret
insb
rol
test
pop
jg
or
je
and
arpl
pop
sbb
mov
mov
adc
push
cmc
pop
hlt
or
adc
mov
push
icebp
push
and
pop
xchg
repnz
fdivs
and
adc
cltd
js
popa
mov
sub
xor
ror
les
push
push
arpl
adc
hlt
hlt
push
pop
decb
mov
popf
out
xchg
adc
int3
sbb
xlat
sti
cld
sub
jne
add
push
pop
adc
xchg
push
lock
lret
adc
sub
fabs
and
repnz
mov
les
sbb
sahf
pop
sbb
add
mov
sbb
or
stos
pop
mov
dec
xor
xor
lcall
and
push
mull
and
test
test
mov
add
mov
and
jnp
push
shlb
faddl
mov
mov
or
mov
xchg
inc
lock
aad
clc
xchg
rorb
insb
les
sti
adc
dec
into
push
shlb
icebp
mov
pop
jle
repz
cmpsb
pop
scas
add
pop
and
or
nop
pop
sbb
test
mov
pop
testl
sbb
push
nop
and
imul
nop
test
stos
xor
fimull
push
xchg
in
mov
loope
aam
js
pop
fcomps
dec
cmp
out
jae
loop
or
aad
cli
andl
dec
push
pop
aam
jge
lock
cli
sbb
in
sbb
popa
push
mov
mov
xor
or
in
mov
and
xchg
in
fistl
jno
std
sbb
jmp
loopne
sbb
daa
stc
adc
and
jg
in
push
dec
push
ret
push
or
std
cli
add
daa
add
xchg
or
loopne
aas
testl
xor
in
push
and
mulb
or
xchg
sbb
fisubl
sub
xchg
mov
mov
or
movsl
or
loope
neg
mov
jl
js
clc
mov
sub
xchg
jecxz
aas
into
add
and
aad
fsubr
and
ficoml
push
inc
and
sahf
pop
fcomi
dec
fsts
cmp
and
rolb
icebp
or
aad
push
lds
inc
mov
lret
dec
rcll
push
mov
and
add
jecxz
je
lock
xor
sti
sbb
test
add
cld
dec
lcall
mov
mov
std
movsb
call
dec
lret
jle
pop
in
fmull
push
dec
sbbb
int
or
test
mov
cmp
in
lock
push
xor
int3
cwtl
jecxz,pn
sbb
push
test
dec
dec
stos
mov
sub
lock
ljmp
xchg
jno
hlt
jae
xor
adc
lret
test
scas
push
fcom
mov
test
hlt
or
sbb
pop
lret
rorb
mov
fisubrl
pop
and
popa
negb
xor
inc
xchg
out
mov
les
mov
lock
push
lcall
mov
dec
pop
xchg
cmp
sub
and
mov
mov
push
sub
ja
enter
lods
adc
or
sarl
and
loope
push
cmpsl
call
fs
cli
adc
nop
scas
dec
mov
test
xchg
dec
dec
cld
sbb
pusha
dec
jmp
or
addr16
lock
mov
jge
push
cld
and
fs
scas
add
rcrl
dec
push
push
adc
lock
pushf
xchg
adc
or
add
push
loopne,pn
jns
stc
mov
jae
lock
cmp
bound
ljmp
loope
jmp
xor
add
push
fldl
push
jecxz
adc
or
and
and
xor
mov
fs
add
outsl
or
push
test
nop
cmc
daa
mov
ljmp
or
and
pop
jb
push
mov
insl
xchg
popa
ret
fmulp
cld
nop
imul
lret
push
add
test
insb
lock
pop
enter
inc
sbb
xor
dec
add
push
jecxz
fdivrl
push
push
gs
in
sbb
sub
push
stc
jb
adc
xchg
dec
cmp
fnsave
testb
adc
inc
es
and
cmp
lcall
sub
push
push
sbb
outsb
es
pusha
cwtl
in
addr16
mov
into
out
loopne
icebp
into
sub
add
cli
cld
mov
and
dec
pushf
sub
fs
arpl
std
adc
sbb
add
je
sbb
sti
dec
out
push
fsubs
test
aam
sbb
ljmp
cmp
pop
inc
orb
xchg
add
in
sub
jge
sbb
push
imul
mov
xchg
xchg
adc
js
mov
int3
or
cmp
sbb
loope
fnsave
in
scas
jge
lock
es
int
sub
imul
or
inc
cwtl
clc
sar
imul
fwait
inc
pop
sub
pop
shl
xor
outsl
out
push
pop
out
sbb
shrb
inc
ss
insb
dec
daa
nop
sub
in
push
fwait
add
push
push
jmp
cmp
xor
repz
or
shlb
lret
popa
adc
dec
fsubr
adc
mov
add
mov
mov
pop
stos
push
mov
icebp
sub
pop
xchg
ss
and
idivb
wbinvd
daa
jne
fs
orb
movsb
mov
lock
inc
cmovb
repz
push
loop
pop
sub
cmp
pop
pop
rcrb
sub
jg
push
js
sub
sub
adc
jecxz
pop
mov
gs
and
pushf
xchg
sbb
push
insb
cmpsl
nop
dec
scas
sub
jb
ret
test
pop
cmp
and
and
cmp
movsb
movsl
mov
and
and
in
loope
std
popa
fcoml
add
dec
pop
fwait
fs
mov
out
sbb
xlat
stc
arpl
lea
sbb
jnp
into
adc
jle
jno
and
xor
fcomp
push
loop
mov
cmp
sbb
cmp
addr16
out
pop
call
movsb
fdivr
mov
push
cwtl
in
inc
imul
push
mov
out
nop
xchg
lock
jnp
mov
push
jnp
mov
or
sub
and
movsb
pop
push
pusha
and
inc
clc
std
push
xchg
cli
push
push
pop
ss
std
es
xlat
hlt
std
pop
enter
cs
dec
scas
mov
xor
push
jmp
add
cld
inc
mov
mov
push
pop
inc
rcll
cmc
sub
sbb
sub
addr16
dec
mov
cmp
cwtl
push
js
xor
xlat
add
aad
idiv
inc
div
stos
mov
push
mulb
out
jae
nop
xor
sti
fcmovnbe
xchg
repnz
xor
add
sbb
rclb
inc
mov
inc
lea
or
daa
or
mov
mov
adcl
arpl
in
mov
inc
outsb
inc
sbb
sub
daa
mov
rclb
jns
and
push
bound
xor
mov
lock
add
ja
pushw
adc
in
dec
fnstcw
adc
xchg
scas
sahf
lods
cmc
inc
push
push
into
and
test
out
adc
or
cmpsl
cmpsl
xchg
iret
cmpsl
and
inc
rcrb
movb
and
cwtl
adc
sbb
lret
cmp
clc
fcoms
sbb
jne
sub
dec
inc
cld
and
scas
cmp
adc
fistl
adc
sbb
int
mov
adc
cltd
inc
stos
adc
adc
xor
mov
icebp
inc
jbe
push
out
ljmp
dec
pop
decb
push
mov
cmp
sub
lock
pusha
sub
mov
and
jmp
push
inc
jmp
push
lods
scas
in
sub
ror
es
icebp
add
test
push
mov
sbb
inc
repz
dec
mov
insb
js
decl
jmp
cmp
sbb
pop
sbb
movsb
das
cmp
adc
repz
add
mov
lock
daa
sbb
pop
push
mov
xchg
jb
inc
clc
add
adc
shl
lret
cmc
push
and
xchg
push
test
rorb
fistpll
daa
cs
ror
and
out
and
sbb
push
icebp
sub
or
and
and
int
adc
sub
popa
cmpsb
sub
mov
mov
cmp
das
enter
fsubr
push
mov
cltd
insl
mov
sub
imul
mov
and
mov
push
dec
jecxz
cmp
sub
xchg
out
or
lahf
sbb
pop
xchg
es
xchg
mov
or
lcall
or
mov
add
cli
sbb
adc
sti
fdivl
adc
dec
js
xor
mov
add
mov
cli
dec
sti
cld
fs
xchg
sbb
sbb
ret
sbb
cld
jmp
mov
push
pop
repz
in
cmp
jmp
pop
mov
sub
cmp
cli
mov
stos
ficomps
dec
and
add
pop
push
push
pushf
add
xchg
inc
int
or
sbb
loop
clc
fdivr
dec
xlat
xor
and
lock
xor
js
pop
xchg
mov
or
scas
pop
out
movsb
sbb
fisubl
lods
cmpsl
and
stc
and
pushf
testb
xorl
jg
movsb
push
fs
ja
sub
insl
adc
out
mov
out
int
arpl
inc
pusha
and
cld
mov
xor
push
xchg
jle
adc
arpl
scas
out
shlb
lock
inc
rcrb
ss
and
pop
and
cltd
repz
sar
or
das
sub
adc
pop
jle
cli
dec
popf
fstpl
daa
stos
fs
push
imul
in
xchg
lcall
push
mov
sbb
mov
or
and
dec
mov
repz
sub
adc
mov
lret
adc
ljmp
out
sbb
imul
push
dec
or
out
adc
call
push
and
fmuls
pushf
or
sub
fnstcw
and
shl
mov
push
test
mov
gs
sbb
sub
icebp
cmp
mov
xor
outsl
pop
addr16
pop
in
cmp
jo
xchg
fs
testl
dec
sbb
cld
pusha
add
push
jmp
sbb
jmp
mov
jo
sub
incb
mov
flds
mov
mov
pop
not
mov
loopne
pop
int
sbb
sbb
sub
bound
and
out
out
adc
aaa
in
dec
das
loop
cmp
pop
and
or
pop
and
std
dec
and
fs
jecxz
add
add
xor
daa
push
fistps
pop
loopne
pop
rcl
movsb
dec
inc
insb
sub
add
sbb
sbb
adcl
and
xchg
lods
mov
ljmp
dec
xchg
or
out
inc
in
lock
pop
jo
jns
gs
sub
or
stos
sbb
pop
mov
mov
or
xchg
rclb
or
cmpsb
and
push
fcoms
sub
std
fmuls
sbb
push
repnz
adc
inc
shlb
das
neg
inc
mov
mov
pop
add
xor
pop
push
pop
push
jb
out
push
popf
arpl
xchg
sbb
and
and
pop
add
sub
jle
sub
and
cmp
and
out
cld
cltd
fbld
push
jo
sub
or
and
in
pushf
fcomp
leave
sbb
iret
mov
and
mov
adc
or
outsl
xchg
xor
cmp
mov
jmp
push
test
push
call
pop
adc
clc
xlat
fistpl
inc
lea
addr16
pop
pushf
insl
or
sbb
ja
repnz
iret
sar
sub
push
imul
sub
xchg
data16
adc
cmpl
nop
push
into
insl
or
jl
inc
sub
mov
and
bound
or
notb
ljmp
fisubl
movsb
add
ss
fucomp
pushl
nop
nop
adc
adc
sbb
fs
shl
add
shr
test
sub
mov
adc
daa
mov
clc
aad
pop
jecxz
inc
cwtl
or
inc
xchg
in
imul
cli
fstps
lock
xchg
lock
stos
inc
inc
xchg
cwtl
push
push
xor
in
jecxz
pop
mov
insl
cmpsl
cmp
aaa
or
jnp
cmp
daa
jg
and
dec
inc
push
cltd
add
adc
idivb
ljmp
and
and
inc
test
add
or
inc
and
sbb
mov
push
mov
divb
nop
daa
imulb
sub
iret
nop
cmc
mov
lods
pop
add
add
das
add
pop
mov
adc
add
pop
ljmp
jnp
inc
dec
adc
sub
dec
nop
in
ljmp
push
fcmove
cmp
aam
or
data16
jnp
pop
push
or
or
mov
mov
js
jecxz
ljmp
fs
xchg
pop
repnz
lock
dec
xchg
and
pop
ss
adc
nop
sbb
popa
mov
fs
mov
push
add
push
out
sub
xchg
or
xlat
test
pop
out
cwtl
repnz
mov
out
movsb
test
sahf
fdivr
dec
lock
pop
xor
or
xchg
mulb
icebp
push
into
cmc
pop
shrb
push
mov
stc
adc
sbb
mov
and
adc
push
js
clc
in
xchg
popa
mov
scas
add
lahf
add
testb
cmpsl
adc
or
imul
push
test
add
pop
iret
nop
cltd
sarb
enter
into
xchg
lock
xchg
in
es
and
clc
arpl
push
inc
std
add
inc
dec
sbb
sbb
out
ret
clc
cmc
xor
adc
lock
cmp
mov
pop
inc
or
in
fdivrl
push
adc
scas
inc
add
add
pushf
rclb
push
hlt
hlt
push
add
popa
scas
add
xchg
jbe
push
test
cmp
mov
sub
jbe
push
sahf
popf
dec
clc
adc
inc
lret
out
push
sbb
mov
cli
push
xor
bound
mov
push
push
jmp
or
pop
push
pop
sbb
or
and
mov
mov
pop
cmp
cmpsl
mov
mov
mov
in
fcoms
cltd
inc
adcl
jns
dec
adc
jbe
jmp
and
and
cli
or
ljmp
mull
movsb
and
nop
lds
jl
adc
scas
in
call
adc
and
mov
clc
andnps
lods
sub
inc
xorb
out
and
lods
adc
sbb
push
and
roll
add
fdiv
rorb
scas
enter
hlt
xor
xchg
sbb
test
jp
and
inc
xchg
mov
pop
jmp
add
jae
ljmp
fdivl
adc
sbb
mov
and
jge
dec
mov
adc
push
neg
cmpsl
lea
or
cmpsb
xchg
aam
and
idivb
push
sub
addr16
jecxz
into
call
jns
out
aas
js
fs
in
push
cld
xor
jns
imulb
push
subl
jp
xor
sbb
das
sub
push
xchg
xor
cmp
push
and
xchg
sub
push
pusha
dec
xchg
pextrw
adc
sahf
inc
mov
sbb
in
or
mov
jmp
adc
stos
pushf
jo
jmp
jmp
iret
insl
sbb
incl
ja
push
dec
jnp
mov
sahf
int3
adc
and
add
pop
aad
and
cmc
out
repnz
sub
push
stos
loope
fisttpl
test
subb
and
hlt
ret
push
adc
sbb
aam
subl
enter
and
pop
sbb
sub
repz
mov
xchg
cmp
loope
cwtl
xchg
icebp
adc
daa
test
cli
add
je
inc
aam
adc
in
or
inc
sbb
pause
pop
jbe
daa
xchg
jo
mov
push
push
dec
jae
xor
imul
prefetcht2
jle
push
das
sbb
jge
xchg
lcall
pop
cltd
xor
lret
xlat
add
scas
or
sbb
push
repnz
or
int3
xchg
jmp
adc
xor
xchg
pop
push
pop
into
inc
cwtl
adc
push
out
lock
xor
movsl
pop
in
adc
loopne
and
lock
js
pusha
xchg
sbb
xor
sub
sub
cmpsl
xchg
psubd
cmpsl
leave
sbb
xchg
adcb
push
movsb
adc
pop
lcall
out
cli
les
sahf
gs
lock
fimuls
stos
lea
in
xchg
cli
and
push
fildll
adc
push
sti
or
adc
lock
sar
mov
sbbb
add
push
pop
adc
pop
ljmp
out
aas
mov
sti
mov
jle
add
sbb
mov
dec
daa
cld
and
add
test
mov
mov
sbb
bound
sbb
es
dec
insb
sub
aad
repnz
in
insb
cli
mov
and
and
movsb
rolb
push
insb
add
sbb
sub
call
adc
and
or
lret
add
or
or
xchg
add
xchg
js
xchg
rclb
sub
jb
mov
mov
adc
in
sbb
xchg
and
das
dec
add
xor
pop
and
in
mov
push
js
out
xchg
pop
nop
cmp
pop
enter
jg
or
adc
sbb
ljmp
sarb
lock
icebp
out
jecxz
hlt
loopne
lahf
mov
shrl
loopne
cmp
sbb
push
imul
cld
and
out
jecxz
mov
inc
add
jl
mov
push
push
in
aad
sub
cld
inc
andb
add
adcb
out
push
mov
rclb
push
xchg
jecxz
add
push
test
pop
jo
cmc
ja
insb
sub
stos
into
sub
cmpsl
push
and
aam
pop
imul
sub
ljmp
popa
test
pop
add
push
and
push
arpl
cmc
push
pop
sti
inc
inc
and
cmpsl
push
jb
and
shlb
adc
and
jnp
iret
lret
jl
dec
and
popa
push
es
add
sbb
leave
cs
push
push
sbb
cmc
das
cmpsl
hlt
pop
negb
push
mov
test
add
add
ret
and
push
pop
push
mov
jmp
gs
outsl
pusha
sbb
out
out
imul
and
xor
adc
adc
int3
push
mov
jle
repz
popa
outsl
fldt
test
cmp
sti
and
outsl
call
jl
in
xor
adc
movsb
mov
mov
or
nop
mov
mov
or
sti
adc
fs
call
mov
and
pop
movsb
cwtl
or
push
xor
daa
loop
xchg
repz
mov
adc
enter
xchg
rclb
or
cmp
add
aas
xchg
lret
out
repnz
push
mov
sahf
cltd
roll
and
add
hlt
cli
xchg
addr16
and
mov
sbbb
out
ja
fiaddl
hlt
popa
dec
add
and
push
imul
dec
jle
inc
mov
add
mov
nop
push
pop
lods
mov
stos
lea
lods
cld
push
repz
add
in
or
decb
cmp
cmpsl
rcrl
push
cld
mov
xchg
or
out
add
add
lock
cwtl
dec
out
xchg
sbbb
clc
pop
push
add
bound
push
mov
jmp
add
cmp
jmp
mov
jmp
push
xor
push
mov
movsb
xchg
stos
or
ljmp
jmp
dec
mov
movsb
negb
and
call
mov
in
adcl
test
sub
clc
and
push
lahf
or
or
out
sbb
orb
mov
jmp
mov
das
and
cltd
loop
test
pop
adc
dec
push
loope
mov
stc
lret
shrl
or
jno
sub
jmp
adc
cmpsl
push
add
xchg
and
loope
daa
jmp
loopne
jae
adc
fsubrl
and
or
pop
xchg
fdiv
lock
xor
or
loop
inc
icebp
cld
or
test
cli
test
subl
sbb
cmpb
push
push
or
jne
xrelease
mov
or
daa
pop
push
sbb
push
inc
or
xchg
push
or
mov
adc
mull
cmp
daa
jmp
cltd
mov
sub
add
pop
xchg
mov
xchg
daa
mov
aas
xchg
sbb
add
js
cmp
stos
push
test
jecxz
inc
mov
jb
xchg
ljmp
cltd
cmpsb
clc
and
sahf
inc
test
mov
mov
mov
and
daa
insl
add
dec
repz
int3
mov
call
adc
and
jecxz
add
push
sub
nop
xor
xor
add
mov
ja
lcall
fs
aas
push
gs
and
orl
adc
fs
in
adc
xchg
pushf
insb
decb
stos
sbb
sub
cmpsl
add
stc
rorb
clc
enter
and
push
sub
idiv
jnp
sub
iret
sub
lods
xor
mov
lret
push
movsl
repz
sub
pop
cli
out
fisubrs
shl
pop
fs
or
arpl
cmp
cld
repnz
lret
lret
push
inc
out
in
xor
mov
int
mov
cld
pause
jp
orb
sub
push
adc
push
iret
ret
sti
pop
addl
dec
orl
push
push
stos
sub
test
int3
add
inc
adc
and
adc
add
cmc
sub
movsb
and
test
std
adc
mov
cmp
mov
mov
lret
cmp
and
push
enter
fldenv
and
sbb
dec
jbe
loope
add
add
nop
mov
and
call
xchg
int3
adc
out
push
jmp
lods
inc
loope
and
xor
jmp
and
add
pop
push
and
mov
push
and
sbb
inc
or
cmc
sub
pop
fsubs
ss
rclb
aaa
sub
mulb
or
sub
loope
add
pcmpgtb
jo
mov
es
loope
cld
rcrb
inc
shl
stos
xor
pop
cld
jecxz
cmp
ljmp
cld
ljmp
mov
lock
in
or
jl
lock
repz
add
mov
add
aam
jno
add
hlt
jg
pcmpgtb
int3
and
sbb
and
lcall
dec
adc
les
hlt
cmp
jecxz
inc
or
daa
aam
dec
adc
rcrb
dec
enter
popa
or
lcall
mov
add
mov
push
leave
lret
mov
stos
mov
jl
and
sub
mov
movsb
add
andb
cmpsb
repz
repz
pop
pop
sbb
fiaddl
lock
sbb
adc
cld
or
mov
fistpl
push
jbe
cmp
js
clc
popa
jnp
sbb
imul
add
or
cmp
lock
sub
scas
sub
out
popf
push
imul
add
add
fists
int
or
sub
imul
fs
adc
mov
loopne
cmp
adc
outsl
cld
adc
xor
rclb
xchg
sub
or
daa
lods
jmp
daa
pop
and
int3
iret
push
sub
inc
xlat
add
dec
xchg
aaa
insb
in
sub
repz
jmp
in
dec
push
aad
mov
or
push
pop
cmp
sub
call
call
mov
jmp
hlt
or
cld
xor
pop
jb
fs
push
or
popa
enter
fisttpll
test
leave
cli
push
or
mov
inc
pop
sbb
jne
rol
xor
sbb
fcompl
mov
inc
xchg
or
scas
decb
sub
mov
pop
cli
mov
push
inc
sbb
inc
mov
repz
jno
daa
adc
jmp
ja
in
ljmp
dec
mov
ret
or
hlt
mov
bound
add
pop
pop
xor
or
mov
ljmp
rolb
pop
testl
clc
sbb
pop
adc
mov
and
add
push
call
pusha
push
cli
les
mov
enter
or
aad
cmp
cmp
or
dec
cmp
sbb
rorl
xchg
push
dec
iret
pop
xor
pop
xor
dec
scas
call
sbb
jge
mov
pop
pop
dec
cld
jae
adc
mov
or
jo
or
and
push
xchg
push
add
add
sub
and
add
mov
insl
pop
call
and
push
enter
jl
adc
inc
xchg
and
jb
sub
mov
and
test
sbb
mov
cmc
adc
mov
loope
and
push
test
cmpsl
adc
cmpsl
sarl
mov
push
popf
inc
xor
rclb
fisubrs
jb
repnz
xor
jae
lret
pop
sub
sbb
inc
jo
sub
and
jecxz
lock
ret
aad
add
inc
or
ljmp
jmp
fmull
adc
sub
mov
rclb
enter
icebp
lea
sub
cmp
xchg
mov
sub
sub
cmp
fildll
js
xchg
sub
rcrb
repnz
nop
cmp
jae
xchg
mov
push
and
mov
jl
sbb
lock
outsl
sbb
nop
push
and
adc
dec
test
inc
push
and
mov
inc
cmp
and
push
test
fdiv
xchg
nop
ss
nop
add
mov
mov
decl
sub
stc
movsb
imul
int
out
stos
into
pop
in
cld
add
sbb
loope
and
mov
adc
cmpsl
jb
mov
repz
xchg
cmpsl
or
cs
sbb
xchg
and
jecxz
pop
ljmp
sub
add
mov
icebp
loope
ja
repz
gs
sbbl
add
sbb
jg
mov
fwait
push
cltd
pop
dec
mov
sub
dec
fmul
sbb
lcall
jp
push
cltd
mov
pop
sbb
jb
js
dec
pushf
out
push
in
add
push
les
inc
or
and
sbb
or
push
adc
sub
and
daa
xchg
xor
push
rclb
mov
pop
mov
or
hlt
sbb
stc
in
and
push
push
loop
icebp
mov
cld
sbb
testb
roll
aas
shll
lret
push
addr16
insb
adc
in
xor
and
or
push
mov
adc
pop
push
es
insb
or
xor
and
pop
call
aam
mov
call
shlb
and
xchg
scas
jl
or
nop
mov
mov
dec
add
movsb
mov
lock
pop
and
mov
scas
xchg
sarb
mov
push
hlt
pop
jo
test
lret
popl
dec
neg
fdivrs
mov
jb
push
insl
repz
jae
mov
fisubrl
adc
mov
clc
das
xchg
and
lods
cli
push
mov
sub
add
aaa
mov
sbb
and
out
les
scas
fdiv
xlat
pop
inc
push
call
add
cltd
inc
js
divb
and
cmp
or
and
dec
aaa
mov
add
pushf
push
movsl
adc
icebp
inc
int3
sbb
popa
fdiv
xchg
or
and
and
insl
sbb
pop
xorb
pop
add
out
stos
or
outsb
addr16
inc
sti
js
clc
ljmp
rolb
popa
cmp
ljmp
xorb
in
xchg
test
cmp
ja
jecxz
std
clc
add
repz
setle
adc
add
and
pop
and
je
out
mov
loop
daa
icebp
repnz
cmp
ret
and
rcrb
cli
out
sub
loop
movsb
mov
in
push
jo
imul
add
inc
xor
hlt
jecxz
stos
sbb
pop
mov
push
mov
cwtl
xchg
pop
pop
or
push
hlt
ljmp
jbe
out
out
call
popa
cmpsl
pop
jge
pop
stos
xchg
fmul
gs
cmp
aaa
fdivl
and
push
sub
lods
adc
icebp
daa
adc
and
sbb
push
incb
stos
push
sub
test
jmp
mov
into
adc
cmp
clc
cmc
shll
xchg
lock
orl
cld
push
sti
ja
pop
lcall
mov
popa
push
cmpsl
sbb
shrb
ficompl
adc
cmp
mov
andb
loope
aam
rclb
and
cld
sbb
clc
add
nop
cmp
call
or
xor
scas
and
sbb
adc
push
fs
cwtl
or
int3
lods
ja
push
mov
fisubs
into
jne
sub
sub
lret
jns
cmc
jo
imul
pop
dec
adc
fldenv
sbb
in
and
add
cmpsl
cwtl
ljmp
or
mov
lret
notb
popl
jecxz
pop
sbb
and
std
rcll
loope
sub
xchg
sbb
and
repz
sbb
mov
mov
out
sahf
cmp
cmpsl
and
icebp
and
lcall
test
fs
sbb
sar
mov
dec
mov
enter
loope
push
jo
xchg
and
push
sub
and
cmpsl
or
out
or
sub
es
stc
jnp
maskmovq
negl
push
sub
cld
or
cltd
add
pop
or
test
scas
clc
sbb
daa
ljmp
mulb
pop
and
adc
arpl
div
or
enter
loope
movsb
cmpsl
stos
and
shrl
mov
cmp
inc
aam
fcoms
loopne
nop
push
ficomps
daa
lods
and
rcrb
sub
mov
fdivr
pop
outsb
dec
rclb
sbb
repz
sub
adc
or
arpl
xchg
int
lcall
lret
ficoml
and
xor
adc
mov
loope
repz
sbb
inc
sbb
stc
cs
jl
sub
cmp
cmp
push
out
add
movsl
sub
sub
sbb
mov
xor
inc
cmpsl
mulb
or
sub
repnz
add
jp
sbb
nop
shl
aas
or
push
repz
sbb
push
jl
movsl
or
repz
pop
sbb
orl
xchg
inc
dec
mov
test
cwtl
push
cs
nop
daa
pushf
dec
rcll
sub
sti
cmp
loopne
adc
in
enter
pushf
push
sub
jg
jle
repz
out
jmp
add
add
add
xchg
and
aad
mov
jnp
and
xchg
inc
add
xor
andb
jge
sti
mov
add
or
leave
fistpll
mov
stos
jb
add
fistpll
sbb
sub
mov
lock
insl
push
or
cmpsl
adc
sub
dec
add
or
rolb
inc
mov
jne
pop
ds
mulps
clc
mov
push
cmp
hlt
add
and
gs
push
jecxz
icebp
sub
and
scas
sbb
add
loop
jmp
xor
cmpsl
sbb
sti
cmp
cli
gs
or
xchg
add
sub
out
jl
pop
daa
add
test
in
ss
out
fwait
ja
jno
stc
roll
add
and
push
loop
dec
push
rclb
inc
aad
test
sub
inc
lock
or
aaa
cmp
nop
sbbb
ss
mov
popf
out
xor
xchg
cli
and
adc
jo
sbb
js
or
push
leave
inc
add
sub
sbb
sub
out
and
sbbl
adc
sbb
and
jg
or
jne
pop
aaa
push
fucomi
sub
sbb
cmpsb
fstps
sbb
push
outsb
aas
jne
push
inc
lret
xlat
add
dec
dec
jnp
inc
out
cmc
fs
stos
push
test
aad
adc
arpl
pop
jo
or
pop
push
push
pop
in
cmp
adc
sbb
mov
lea
sbb
inc
push
pop
add
sti
lds
in
ja
movsb
daa
add
call
cld
and
pop
push
fucomi
enter
mov
push
call
mov
outsl
lods
popa
cld
cwtl
shll
fdiv
negl
and
push
roll
push
push
lret
pop
popf
cli
jmp
jne
stc
addr16
orb
mov
sub
jbe
into
in
loopne
outsb
and
adc
movsb
xchg
std
pop
loop
popa
andl
jp
ljmp
divb
cmc
lcall
aam
fsubr
dec
outsl
imul
and
push
dec
inc
add
dec
mov
inc
inc
mov
inc
js
loop
sub
repz
pop
adc
cmp
push
popa
or
call
es
loope
lock
in
movsb
sbb
std
dec
insl
cmp
out
jb
icebp
std
adc
sbb
fadds
rep
push
cwtl
stc
mov
cmpsl
stos
insb
adc
push
push
dec
fildl
sbb
pusha
mov
pop
dec
pusha
pop
lea
sbb
jnp
and
andb
rcrl
jl
xor
mov
mov
jmp
xor
xchg
xor
popa
fldt
decl
ljmp
aad
xchg
add
mov
movsb
outsb
mov
push
mov
loop
mov
in
add
inc
cmp
mov
sbb
repnz
jge
mov
mov
lock
pop
mov
les
repnz
test
incb
lods
adc
sbb
ljmp
xchg
pushf
jle
daa
fsts
cmp
pushl
add
push
stos
sbb
imul
lcall
inc
sbb
mov
in
sti
stos
sbb
sub
jo
sub
pop
mov
or
xchg
and
xlat
cwtl
dec
push
push
hlt
out
imul
popf
push
sub
hlt
or
aaa
and
adc
cmc
scas
sbb
xchg
jmp
add
and
pop
adc
push
mov
ret
push
movsb
idivb
dec
mov
cltd
push
repnz
push
das
adc
stc
stos
adc
and
jnp
or
mov
push
cmpsl
inc
hlt
add
cmc
outsb
shld
test
xchg
fsubrp
xchg
in
addr16
dec
jle
add
and
repz
rolb
sbb
add
sbb
push
mov
div
es
sti
xor
je
mov
cmpsl
rcll
lret
cltd
out
sahf
cmp
out
jge
js
inc
mov
fcoms
and
lcall
mulb
push
out
sbb
insb
lods
adc
repnz
push
push
in
cld
mov
sbb
or
nop
mov
add
stc
sti
mov
movsl
movsb
pop
pushf
and
test
aaa
out
xor
clc
or
sbb
faddl
insb
aaa
mov
mulb
pop
push
ucomiss
or
stc
inc
cmp
and
lret
or
and
sub
mov
mov
test
ja
pop
es
sahf
mov
ljmp
inc
adc
and
arpl
add
in
push
addr16
mov
repz
inc
js
dec
out
outsl
call
imul
daa
loope
mov
sub
and
add
sub
push
xor
cmc
stos
fwait
les
lds
jo
dec
sub
xor
shll
aaa
cmp
sbb
add
push
jmp
push
xor
jmp
xchg
push
cli
std
mov
mov
addl
push
ret
cltd
ror
push
jmp
or
pop
outsl
xor
sub
xchg
popf
std
stc
sub
mov
std
cmpsb
in
mov
repz
mov
jp
mov
imul
push
sbb
pop
ds
pop
inc
jmp
dec
stos
dec
push
push
adc
repz
or
and
sbb
sbb
jge
or
pop
std
dec
and
push
cmpsb
or
pop
or
bound
jecxz
lret
add
mov
shr
mov
sti
rcl
pop
or
pushf
and
daa
push
sub
mov
lret
stos
jmp
push
int
fdiv
sbb
nop
inc
and
pop
add
jp
jne
sbb
jecxz
rclb
lods
scas
jmp
jnp
ret
cmp
xchg
out
dec
mov
repnz
sub
sub
sbb
dec
add
xchg
negb
add
adc
pop
or
cmp
adc
sbb
jb
out
cmp
xchg
or
test
cltd
cmp
push
adc
fdivrs
sbb
es
mov
xchg
or
adc
decb
or
and
or
adc
andl
aam
or
popa
or
inc
test
into
adc
sti
mov
nop
fwait
movsb
adc
mov
lock
sahf
call
dec
shld
sub
jmp
in
lcall
movsb
cld
push
mov
lcall
mov
pop
ljmp
xor
adc
adc
out
cmp
push
push
or
out
or
mov
or
or
cli
adc
sbb
mov
ljmp
add
lock
xlat
and
sub
daa
test
and
and
adc
xor
add
nop
les
sub
lock
and
in
ja
stos
adc
jge
imul
ret
lods
push
xchg
mov
push
fs
push
enter
andb
stos
cld
sbb
cmp
aaa
xchg
lock
jnp
xchg
decl
mov
and
sub
mov
frstor
xchg
fisubrl
or
sbb
mov
lock
jecxz
sbb
enter
pop
add
push
jno
sti
sub
filds
add
cmp
and
aaa
or
and
outsb
ja
adc
add
mov
jle
mov
add
pop
or
adc
icebp
or
and
xor
xorb
push
sbb
sbb
ljmp
xchg
jne
sbb
jge
or
mov
jae
add
sbb
daa
dec
sub
into
lcall
inc
fs
std
stos
shrb
repz
mov
es
push
stos
sbb
and
fcompl
movsb
ret
xchg
ret
xchg
lods
test
cmp
sbb
mov
and
pop
mov
lds
mov
mov
test
xchg
dec
cmp
and
or
lea
push
je
push
insb
sbb
push
sbb
sbb
jmp
lahf
jmp
rorl
cmp
mov
sbb
repnz
ljmp
add
leave
lock
push
xlat
dec
add
jge
sbb
orl
stos
or
mov
pop
jp
mov
lret
repz
sbb
xor
and
outsb
push
clc
and
daa
repz
subl
or
jecxz
dec
mov
daa
and
sti
or
or
nop
pop
or
push
push
push
aas
adc
add
rcrb
pop
scas
mov
fstps
push
sbb
add
idiv
inc
and
cmp
push
mov
subl
sbb
icebp
enter
repnz
adc
rol
jl
js
leave
xchg
or
pop
cmpsl
fsub
lea
dec
push
sub
sub
jo
cmp
push
outsb
adc
outsl
mov
sbb
adc
dec
sti
fcomip
sbb
cltd
pop
jp
ljmp
jp
daa
loopne
sbb
outsl
mov
cld
add
mov
cmp
dec
rdtsc
dec
push
sti
cmc
sub
mov
cmpsl
push
push
aam
push
outsb
sbb
lods
or
in
es
or
ss
adc
xchg
jge
pop
or
or
and
pop
and
pop
pop
data16
rolb
mov
icebp
push
or
out
inc
mov
movsb
gs
decl
sbb
and
mov
sbb
add
ljmp
sbb
mov
lock
adc
fmuls
negl
loope
pop
clc
mov
sub
fwait
js
fmuls
cld
inc
and
xchg
jmp
adc
push
jo
sbb
dec
roll
fs
jle
or
rorl
lea
hlt
xchg
ljmp
stos
das
popf
jbe
mov
jae
lods
dec
jmp
push
dec
out
lock
and
aad
call
jno
js
cld
addb
arpl
clc
and
addr16
std
pop
or
das
imul
jno
imul
int3
mov
shl
pop
enter
jg
mov
mov
test
in
add
test
cmp
adc
and
mov
and
cmc
rclb
and
inc
jno
int
out
in
or
xchg
sbb
cwtl
push
cli
mov
cli
adc
xchg
and
shll
cld
aam
pop
pop
fcoms
out
outsl
push
jp
daa
xor
adc
icebp
sub
push
imul
icebp
or
out
fldcw
mov
mov
lcall
xchg
sti
loope
bswap
and
test
adc
nop
stc
cld
rorb
dec
mov
mov
add
sub
cmp
or
adc
xor
icebp
push
leave
jp
stos
nop
push
fsubrp
and
and
jmp
sub
or
shrb
mov
sbb
clc
cli
add
fs
hlt
cmp
sub
sbb
fnsave
fmuls
mov
add
cmp
out
sbb
pop
cwtl
clc
sub
sub
imul
aas
lret
mov
jmp
roll
and
add
fidivl
loope
sub
and
mov
clc
or
jmp
sbb
jle
lods
repz
xlat
push
or
in
popa
inc
xadd
popa
test
cmp
std
fs
jmp
fcoms
and
adc
je
push
mov
or
int
mov
xchg
jb
fdivr
xchg
mov
and
std
push
test
or
pop
push
sub
shrl
fdiv
cs
sub
adc
negb
sbb
test
and
int
lea
or
fbstp
ja
sub
pop
sbb
arpl
inc
dec
sub
jo
hlt
sbb
push
mov
call
sbb
daa
adc
aad
or
sysenter
add
stc
push
js
enter
cltd
arpl
push
add
inc
or
jecxz
adcb
or
sbb
add
vcvtsi2sd
mov
sbb
enter
icebp
or
arpl
movsb
dec
test
lods
mov
or
sbb
enter
popa
mov
popa
adc
sub
sbb
aad
clc
nop
xor
xchg
push
testb
push
jb
pop
push
pop
xchg
dec
and
movsb
push
orb
sti
dec
imul
fstpt
mov
pop
testl
out
sbb
xor
and
aad
stc
sub
fdivp
or
xchg
imulb
add
push
call
mov
sub
stos
filds
or
jecxz
pop
xchg
pop
sbb
rcll
stc
mov
sahf
shl
adc
andl
xchg
mov
and
pop
test
nop
pop
mov
adc
and
add
xor
repz
scas
mov
push
sub
and
push
adc
adc
lahf
enter
andl
call
filds
cmpsl
inc
fsubl
jge
clc
rclb
and
pop
pusha
jl
mov
popa
and
pop
adc
inc
push
hlt
sbb
push
pusha
fsub
lods
daa
int
push
add
mov
mov
and
push
loopne
push
xchg
fmulp
repnz
or
nop
lret
dec
je
push
add
and
out
jmp
sub
inc
in
and
fdivrl
push
sub
notl
stos
test
cmp
pop
sbb
movsl
daa
js
ret
dec
dec
sub
lret
loopne
push
add
addr16
and
popf
dec
clc
jle
jmp
ficoms
mov
cmpsb
cmc
mov
lret
add
sbb
ss
repz
jno
hlt
and
or
or
and
lea
cmp
sbb
mov
sub
cmpsl
sbb
xchg
adcb
fdivr
jb
xchg
fsubs
inc
insb
lret
shlb
adc
sub
xchg
inc
es
or
pop
lret
fistl
repz
cmpsb
push
faddp
into
adc
roll
pop
add
pop
aad
push
pop
sbb
adc
pop
nop
push
or
add
lret
addr16
stos
popa
stos
imulb
mulb
add
adc
add
mov
mov
pop
aad
repnz
jbe
shr
je
sbb
inc
sti
sbb
mov
fsubl
cmp
sbb
pop
in
loope
mov
rcrb
and
daa
mov
or
cld
add
sbb
test
sbb
stc
lret
sub
or
mov
jp
push
adc
jge
push
aad
outsl
into
sbb
in
and
add
sub
inc
add
dec
pop
pop
movsb
out
adc
adc
std
mov
xor
xchg
imul
lea
daa
push
and
call
xor
inc
fcoms
fcom
jl
leave
sbb
mov
dec
xchg
arpl
shlb
push
sti
lret
jge
push
mov
or
js
pop
nop
notl
mov
mov
lea
pushf
fadds
xchg
push
jbe
enter
test
xchg
hlt
or
and
cmpsl
std
sub
add
out
xor
push
sar
xchg
int3
cmc
dec
push
mov
hlt
fs
js
mov
ret
add
repnz
sub
lret
sbb
inc
repz
iret
out
inc
jmp
sub
cld
ljmp
sub
sbb
xchg
imulb
outsb
mov
fs
xchg
sbbb
sub
ds
sbb
ljmp
pop
ljmp
sbb
sub
xlat
mov
or
hlt
add
and
popf
mov
popf
movsb
add
repnz
or
xchg
je
and
jecxz
fs
push
dec
add
pop
sbb
sbb
add
lds
pop
sub
fcoml
inc
or
xchg
filds
sub
adc
jo
pop
pop
notb
inc
shl
and
sbb
vmread
sti
nop
cmp
pop
jg
in
pop
and
pop
or
and
nop
sub
fidivrl
or
int3
jl
xchg
mov
adc
daa
sarl
dec
add
lds
or
lds
sub
lods
and
add
call
mov
and
pushf
ss
pop
jmp
ja
add
in
push
jo
push
icebp
pop
push
gs
push
adcb
xchg
insb
sub
and
jmp
mov
into
or
nop
fstl
push
addr16
adc
or
arpl
div
pop
sbb
sub
and
ficompl
insl
push
and
sti
imul
imul
xchg
sbb
cmp
lock
ret
lea
push
loope
mov
or
out
int
mov
dec
enter
test
aas
pslld
pop
xor
push
sub
into
notb
sbb
inc
inc
adc
divl
push
nop
outsl
jo
or
jb
and
icebp
push
rcl
add
scas
cmc
adc
mov
mov
dec
stos
sbb
mov
pop
cltd
icebp
add
mov
add
imul
mov
lret
pop
movl
push
mov
dec
mov
aad
cmp
lret
mov
std
imul
add
loope
stos
xor
nop
add
popf
rcl
sbb
divb
insb
repz
cmp
adc
inc
adc
imul
in
push
mov
test
mov
pop
ljmp
and
jmp
imul
xchg
pop
mov
sbb
add
mov
xchg
xor
sbb
push
xchg
sbb
mov
decl
in
mov
pop
sbb
ja
lock
sbb
outsl
push
mov
aam
sbb
addl
cld
std
or
push
add
out
add
enter
adc
test
push
mov
or
cltd
jl
or
add
and
pop
call
enter
jne
in
repnz
and
les
mov
inc
jp
push
lods
movd
ret
repz
jo
push
cld
call
aad
sbb
cmp
sbb
or
sub
and
sbb
enter
out
test
jnp
lock
xchg
repz
daa
ja
jne
lret
jns
into
cld
fcoms
cmp
popa
sub
pop
pop
repz
pop
sbb
shlb
cmc
stos
mov
xor
add
ljmp
and
or
pop
jae
and
sub
pop
int
sbb
push
lcall
arpl
push
arpl
mull
loope
or
sti
sub
ljmp
xchg
mov
fdivrs
sbb
sbb
cld
enter
es
mov
lret
mull
je
pop
pop
into
sarb
test
fwait
jp
sbb
sbb
test
add
and
stc
test
add
mov
pop
adc
lock
or
clc
jmp
xor
cltd
mov
sub
daa
int
push
sub
or
xchg
cltd
lds
adc
fldl
fmull
bound
rol
dec
or
gs
sbb
mov
cltd
sbb
inc
cmc
stos
pop
lods
mov
xor
jb
pop
mov
xchg
sbb
inc
mov
insb
add
int
or
inc
mov
ljmp
in
cmc
xchg
fdivr
sahf
pop
or
pop
inc
mov
repnz
sbb
add
popa
push
xor
or
add
dec
add
xchg
push
jge
sub
jb,pt
pushf
xchg
and
lods
xchg
push
nop
lcall
mov
sub
std
pop
lods
adc
out
stos
shrb
hlt
xchg
jnp
xchg
fsubrs
dec
fdiv
pop
inc
bound
pop
sbb
mov
cli
daa
movsb
out
ds
shl
push
push
and
sub
xlat
sbb
stos
mov
and
add
lds
pop
push
fs
and
xchg
and
push
cwtl
fadds
and
lds
dec
idivb
sbb
lcall
mov
adc
jg
icebp
pop
xchg
cmpsl
sbb
sbb
push
mov
clc
loop
add
inc
out
lcall
jb
mov
jb
cmc
sarl
push
aad
dec
repnz
or
and
mov
push
lock
inc
mov
or
mov
push
pop
movsb
xor
loopne
push
out
add
ljmp
aaa
popf
dec
sti
fs
and
xchg
aam
mov
sub
sbb
mov
push
push
mov
testb
inc
in
incl
cmpsl
sbb
or
inc
cli
mov
lods
mov
std
pop
insb
out
and
xor
adc
push
jecxz
cmc
stc
mov
clc
sti
push
or
mov
nop
faddl
in
stos
and
and
fs
dec
sar
adc
orl
inc
addb
jmp
imul
test
mov
mov
les
mov
inc
push
add
push
addr16
loopne
or
mov
es
mov
or
push
xor
roll
xchg
out
adc
mov
movsb
add
and
clc
and
sub
and
add
movsb
das
or
cmc
addr16
mov
add
pop
lret
lret
shrl
mov
aad
lock
sub
orl
push
sub
adc
roll
adc
shlb
mov
cmp
icebp
adc
sbb
out
sbb
sti
push
pop
cmpsb
inc
jg
std
mov
repnz
dec
daa
push
fstps
enter
enter
rorl
push
lds
adc
or
mov
hlt
sbb
pop
cmp
push
sub
ljmp
dec
push
dec
adc
repnz
filds
jnp
out
int
sbb
xchg
mov
test
fistpl
adc
loope
push
adc
jecxz
inc
adc
jl
cmp
dec
sub
jge
rorb
mov
push
sub
fsubl
dec
clc
bnd
loope
sub
pop
das
push
mov
jmp
mov
out
cmp
inc
sub
push
xchg
dec
test
xorl
sarb
jecxz
and
cli
sti
sbb
and
push
sbb
std
pop
add
sub
notl
add
push
insl
add
jb
add
cwtl
cmp
fldt
inc
cltd
arpl
ljmp
push
sub
add
jecxz
mov
xlat
jb
adc
xor
or
mov
or
arpl
add
loope
add
aam
cltd
dec
clc
adc
mov
mov
cld
push
and
push
das
or
outsl
and
dec
or
sub
cli
sub
fsubrs
push
mull
mov
aas
mov
adc
sbb
mov
not
cmp
add
or
ljmp
cmc
xchg
ds
jo
lret
xchg
jo
xor
clc
lock
mov
arpl
shlb
mov
shlb
lods
imull
jmp
ljmp
repz
inc
movsl
sar
sbb
and
jmp
test
dec
rol
or
addb
push
gs
in
in
pop
fcom
or
and
call
lock
lahf
xchg
pop
or
xchg
mov
jo
adc
arpl
fisttpl
loope
sbb
testb
loop
push
stc
ljmp
aam
add
sub
cmp
and
xor
hlt
out
inc
push
imul
and
xor
mov
std
xor
cld
movsb
xchg
fdivrs
into
inc
icebp
sti
and
test
and
cld
aas
push
add
cmp
fisubrl
test
push
pop
lock
push
shl
sti
inc
jb
push
dec
sbb
fs
subl
sbb
and
or
sbb
inc
push
lret
ficompl
xor
daa
xchg
cmpsl
add
enter
fsts
jecxz
inc
fiaddl
jp
push
adc
movsb
inc
and
nop
leave
add
adc
sbb
sub
mov
cmp
push
es
repz
outsl
sbb
push
out
add
add
xchg
arpl
mov
stos
xlat
rol
ds
or
cli
sbb
push
add
jg
push
addr16
nop
nop
push
dec
add
pop
push
enter
cld
into
push
int
negb
das
pop
ljmp
fcoms
shlb
pop
and
pop
mov
stc
push
mov
and
pop
decl
icebp
inc
or
mov
out
dec
adc
cmpsb
mov
int
sub
inc
je
ljmp
inc
sub
add
push
and
add
std
push
mov
sub
gs
outsb
pop
mov
push
stos
jmp
dec
mov
and
cmp
jnp
adc
push
and
clc
movsb
jecxz
pop
mov
pause
int3
or
sbb
push
test
inc
pop
pop
lock
shrl
std
adc
sbb
repz
stos
xchg
dec
mov
lods
negb
sbb
cmp
or
cmp
sub
test
das
fdivs
and
cmp
sbb
adc
test
and
jle
lock
mov
int
lcall
adc
ljmp
loope
in
add
and
lods
in
ljmp
loopne
popa
jg
push
and
repz
and
push
xor
push
sbb
dec
or
ret
cmp
push
ds
adc
push
fdivl
gs
inc
pop
jecxz
and
push
sbb
pop
mov
and
pop
movsb
out
scas
pop
and
sbb
das
xchg
mov
jno
mov
int
or
pop
out
nop
jae
mov
xor
and
mov
movsb
cld
or
push
pop
mov
lret
push
pop
and
aad
fimull
lock
aas
pop
and
pop
sub
lock
xchg
mul
dec
mov
add
in
repz
and
stos
sbb
arpl
xchg
cli
sub
cld
jge
xchg
mov
and
adc
subb
insb
jl
and
cmp
dec
xor
idivb
cmc
rclb
lret
and
inc
or
adc
nop
xchg
push
imul
pushf
mov
sti
daa
or
jno
daa
sarl
push
nop
sub
xor
or
mov
or
and
cld
and
pop
insl
imul
jmp
xchg
jg
cmc
sarl
or
push
push
mov
std
adc
and
jo
and
and
std
adc
testb
adc
cmpsl
cmp
mov
xlat
cli
jecxz
dec
cmp
lret
mov
and
adc
sbb
and
jecxz
or
jbe
sbb
stos
std
push
aaa
in
dec
cld
ret
sub
adc
pushf
bound
int3
mov
sbbl
enter
pop
xchg
cwtl
and
mov
fildl
std
push
mov
xor
dec
stc
cmp
ljmp
call
sub
xchg
xchg
pop
fs
sbb
movsb
mov
rolb
test
call
pushf
adc
icebp
enter
les
cmp
sub
lock
imull
xchg
adc
arpl
jecxz
add
mov
imull
mov
ret
inc
and
or
test
or
sti
daa
and
sub
cmpsl
mov
jbe
in
mov
out
add
and
fcom
call
xchg
inc
dec
hlt
cmpsl
mov
jo
sub
subl
push
leave
and
mov
pop
insl
sub
insb
mov
and
xchg
lcall
jecxz
and
jl
daa
out
daa
adc
and
loopne
imul
in
bswap
xchg
cs
adc
push
xor
sti
and
cmc
fcom
xchg
mov
or
fucomi
sub
mov
cmpsl
test
sbb
mov
adc
fldt
addr16
adc
mov
pop
pop
movsb
fwait
dec
jmp
push
ljmp
xor
lock
test
jg
mov
not
pop
jle
clc
sbb
adc
sbb
std
ljmp
lret
xchg
and
xchg
fisubrl
xlat
imul
or
aam
xchg
and
and
jno
lea
lret
xchg
fcoms
loop
lock
sub
dec
cwtl
push
incl
lcall
js
fs
xlat
adc
out
jg
pop
adc
mov
sub
cs
ds
addr16
xor
jmp
sub
and
arpl
sbbb
fcom
and
rcll
repz
jg
jge
dec
lcall
icebp
lods
xor
xchg
push
repz
jge
mov
ljmp
mov
or
ljmp
stos
mov
push
aad
cmp
aas
xor
lret
out
adc
lret
xlat
pop
or
add
jo
sub
lock
jb
or
cld
dec
incl
and
mov
and
xchg
jno
add
push
sub
xor
ljmp
mov
repz
xor
out
repz
push
mov
pop
and
test
mov
mov
loop
mov
or
and
cltd
push
std
sub
insb
sti
pop
loop
jl
sbb
lcall
mov
popf
mov
push
rcr
or
and
xor
push
notb
bound
or
hlt
add
mov
filds
or
insb
xor
repz
mov
and
sbb
cmpsl
mov
or
add
pop
mov
cld
push
dec
mov
sarl
ds
add
test
fsubs
insb
aad
decb
cltd
dec
nop
and
sub
sub
frstor
push
pmaxsw
mov
out
jp
mov
scas
bnd
inc
inc
popf
jmp
sar
add
andl
out
push
or
sti
push
into
xchg
xchg
add
xlat
xor
pop
and
pop
mov
pop
ljmp
cmp
stos
ljmp
daa
and
and
enter
push
pop
lcall
pop
jo
jge
or
addr16
jmp
push
pop
add
mov
and
pop
mov
cs
leave
and
std
or
sub
or
cld
stos
and
loopne
stc
popa
scas
fcompl
outsl
or
addl
add
and
mov
cmp
and
sti
pop
and
iret
sahf
and
gs
ja
sbb
mov
jle
mul
fstl
push
jns
lock
lcall
push
mov
mov
push
cmp
cmp
stc
sub
movsb
and
int3
cmpsl
repz
iret
cwtl
adc
or
inc
mov
jmp
or
and
mov
pop
mov
or
loope
fildl
lret
jns
pop
rclb
xchg
mov
stos
and
cs
mov
dec
loop
lock
sub
stc
xor
inc
add
push
fcompl
cmp
sub
rol
xchg
pop
push
sub
stc
sbb
js
enter
mov
or
cltd
mov
std
dec
call
test
cwtl
cmp
out
cli
cmpsl
sbb
and
adc
dec
mov
imul
nop
popf
jle
xchg
push
dec
inc
jecxz
arpl
test
aad
adc
xor
mov
sub
inc
iret
or
xor
shr
mov
push
test
data16
dec
push
sub
pop
pop
aam
div
imull
lock
dec
sar
xchg
movsl
adc
or
int
mov
add
push
mov
push
mov
pusha
push
sbb
outsb
lock
add
lahf
call
jne
fwait
and
mov
in
ljmp
sub
mov
imul
and
push
repz
gs
ljmp
cld
outsl
xchg
hlt
cli
cltd
popa
out
clc
repnz
mov
cwtl
and
out
push
jecxz
hlt
lock
push
das
mov
lea
sbb
dec
test
je
jge
sbb
xor
xchg
rorl
and
push
fiaddl
add
mov
repz
xor
xor
or
lea
int
add
mov
add
shrb
adc
jae
jg
push
add
and
lret
adc
lret
out
nop
add
and
sub
push
sti
xor
mov
or
mov
sub
xchg
pop
int3
push
fdivr
lret
adc
inc
orb
popf
pop
scas
mov
lret
outsl
dec
and
std
push
sub
add
or
je
popa
jp
mov
cmpsl
xor
and
out
sub
xchg
daa
aam
push
div
testb
or
stos
mov
sub
in
lods
sbb
pop
mulb
lods
adc
out
jmp
add
lcall
cmp
and
or
stos
daa
adc
scas
push
mov
stos
ficomps
adc
in
sbb
sub
add
prefetchw
popf
or
sub
cmp
sti
rep
and
mov
cmp
es
and
aas
or
mov
out
shrb
lds
movsb
jae
and
cwtl
lds
add
jmp
and
out
mulb
shrl
call
popf
and
or
ficoml
movsl
jle
jecxz
je
stos
mov
ljmp
xchg
das
or
pop
jo
sub
lock
sbb
and
fisubl
mov
adc
inc
push
jb
adc
movsb
bound
dec
xor
out
stos
setne
hlt
push
or
push
sbb
mov
inc
add
sti
xchg
mov
testb
sub
lods
sub
adc
in
les
dec
cs
mov
pop
xchg
and
popa
fmuls
das
cmpsl
add
push
xor
std
jb
mov
sbb
and
push
stos
ret
mov
add
mov
stos
out
push
mov
sbb
add
mov
pop
les
and
push
cmpsl
pop
mov
addr16
pop
mov
mov
fsub
pop
lock
daa
das
mov
mov
push
icebp
ljmp
imul
mov
imulb
or
pop
adc
cli
pop
out
popa
movsb
mov
testl
inc
imul
scas
sbb
push
pushf
shll
push
xlat
notl
mov
add
mov
mov
pop
ljmp
dec
sbb
test
leave
add
xor
in
or
shlb
push
fdivl
mov
push
cmpsl
addr16
loope
andb
xchg
out
pop
lds
mov
por
dec
sbb
cmpsb
aam
and
outsl
stc
lret
mov
repz
or
frstor
sbb
das
fdivrs
xchg
decb
movsb
pop
mov
add
std
push
sub
mov
mov
lret
dec
pushf
sub
test
dec
mov
fcomps
es
mov
stc
xor
aad
push
stos
adc
sarb
lret
dec
lock
sub
push
xchg
inc
mov
std
in
inc
ljmp
pop
in
nop
lcall
test
add
lret
sbb
add
cmpsl
pop
add
and
pop
orl
fwait
cli
addr16
push
mov
push
arpl
push
test
fcoms
into
test
bswap
sti
stos
pushf
mov
adc
jecxz
addr16
sbb
pop
and
mov
and
jle
adc
js
xchg
or
ret
sbb
jmp
sub
mull
and
add
jp
add
push
inc
cli
repnz
pop
jne
sti
in
enter
fwait
mov
xchg
test
pop
ret
repnz
ds
fcoml
imul
push
test
push
jle
rep
lods
inc
push
and
divl
icebp
ljmp
lea
lock
imul
sbb
and
xor
out
out
aam
and
rep
sbb
sub
addl
cld
and
jmp
arpl
sub
xlat
cmpsb
dec
add
sbb
xchg
cld
or
sub
xor
sbb
repnz
ljmp
mov
sbb
ja
fsubs
ljmp
inc
int3
adc
push
addr16
dec
mov
and
jl
js
dec
test
fsubl
imul
sub
pusha
mov
xchg
push
sbb
push
lret
aad
jbe
adc
mov
out
maxps
add
aas
or
sbb
mov
nop
divb
adc
aaa
mov
cmpl
sub
popa
arpl
cld
add
int3
rcr
mov
inc
nop
lret
jne
pop
pop
rcll
cld
fs
and
aas
fistpl
jne
testl
cld
add
cmp
xchg
lcall
add
cmpsb
mov
sbb
xchg
sbb
mov
xor
pop
nop
shll
sbb
add
arpl
and
and
jmp
add
ljmp
push
push
adc
add
int3
addr16
pop
xchg
cld
lods
push
or
push
arpl
je
add
scas
inc
cli
sub
repz
and
mov
add
or
frstor
sbb
lock
aas
mov
or
inc
popf
loop
lock
and
push
push
dec
sbb
rcrl
mov
call
mov
xchg
mov
xchg
push
mov
cwtl
in
out
test
lret
or
add
test
mov
jecxz
je
stos
lahf
push
cmpsl
js
stos
and
in
pop
xchg
xchg
pop
movsb
daa
mov
dec
aam
sbb
fidivrl
hlt
sarl
insb
pop
js
jmp
das
pop
ja
adc
pop
mov
adc
mov
dec
push
cmpsb
inc
push
sbb
outsl
mov
or
scas
cmpsl
pcmpgtw
movsb
in
test
clc
push
decb
add
popf
cmp
stos
sbb
sub
ljmp
test
jg
in
ljmp
inc
push
and
movsb
roll
push
loope
lods
ret
and
nop
mov
dec
daa
sbb
rcll
cmpsb
push
jnp
and
inc
nop
xlat
std
cmp
and
cmc
icebp
mov
or
ret
enter
dec
and
sbb
mov
adc
mov
jge
ficoml
push
sbb
xorl
jo
sub
or
lret
faddl
int3
mov
pop
ljmp
jp
jbe
ljmp
pop
xor
mov
or
fs
sarb
loop
nop
js
aad
push
scas
clc
and
repnz
sbb
mov
xchg
test
clc
push
sbb
clc
mov
cmp
pop
adc
push
popa
out
and
in
mov
cld
dec
call
cmp
das
dec
popa
and
fisubl
movsb
mov
push
std
sub
lret
jb
or
mov
sub
mov
ljmp
shlb
mov
xchg
cmp
adc
or
and
xchg
mov
daa
sbb
iret
sub
mov
into
aaa
fdivr
push
cmp
add
addr16
test
pop
cmp
push
sbb
mov
mov
popa
adc
or
cmp
inc
mov
jbe
insb
or
sub
mov
and
or
test
cmpsb
push
insb
inc
jmp
push
sbb
sbb
les
or
sub
cli
subb
rcll
hlt
jle
movb
inc
cli
jmp
xchg
cli
add
sbb
std
push
pop
test
dec
push
cmp
ljmp
not
dec
enter
push
cwtl
add
scas
cld
in
aad
xchg
jns
fisubrs
mov
negb
mov
push
ss
sub
or
pop
jno
and
fs
jmp
sub
pop
xchg
and
add
std
icebp
addr16
inc
and
popf
dec
andb
cwtl
pop
adc
sbb
sub
int3
loopne,pn
in
sbb
xchg
ds
add
imul
xchg
dec
inc
sbb
push
adc
in
lcall
test
cld
aaa
cmpsl
sbb
lea
std
popa
jmp
adc
mov
xchg
jae
cmp
ljmp
negb
jmp
mov
pop
test
or
dec
dec
and
and
sub
push
outsl
cmpsl
and
xchg
call
xchg
jle
cld
inc
dec
pusha
mov
sbb
lret
cmpsl
xor
and
and
ljmp
insb
add
jl
adc
aas
sbb
clc
sti
adc
push
jl
mov
std
or
nop
scas
and
das
popl
pop
push
arpl
cltd
xor
lock
mov
cmp
lock
das
rcrb
adc
dec
and
aad
pop
sbb
aas
call
loop
sub
jge
add
pop
mov
inc
mov
movsb
mov
dec
and
or
leave
cmp
add
in
ret
mov
nop
enter
lea
fmuls
jecxz
cmpsl
es
inc
sub
pop
push
push
push
mov
out
cmc
mov
pop
or
imul
dec
test
andl
dec
cmp
add
movsb
fucomi
dec
mov
and
mov
ror
lea
pop
sub
icebp
jl
or
sti
out
movsl
in
ja
daa
inc
gs
jl
mov
add
lock
sbb
fs
cmpsb
int3
xchg
or
sbb
or
cmpsl
out
adc
dec
sub
xchg
adc
and
lods
or
test
dec
ret
mov
arpl
int3
shufps
add
aad
adc
fidivl
lret
outsl
sbb
jb
sbb
dec
mov
adc
push
fstpl
ljmp
aas
push
lods
mov
inc
push
add
out
ss
push
xor
out
push
add
sbb
mov
jns
shrb
sub
jbe
and
jo
lcall
in
repz
adc
adc
pop
arpl
iret
adc
or
inc
ud0
aas
xchg
imulb
call
fs
pop
xchg
dec
push
jl
outsl
mov
jno
and
subb
push
and
nop
fcompl
and
add
jae
shr
psubsb
imul
pop
cmp
and
mov
fisttpl
add
or
mov
sub
pop
pop
push
mov
cmpsb
and
inc
or
mov
shl
ljmp
fstl
jmp
pop
or
sub
test
out
sbb
push
adc
push
dec
sbb
and
ds
sub
push
sub
clc
lds
icebp
push
test
push
jp
ljmp
or
fs
and
mov
push
xchg
rsm
and
push
lret
sbbb
scas
xchg
add
iret
mov
and
test
insb
das
repz
mov
adc
push
add
bound
xchg
cld
pop
pushl
sbb
mov
call
sub
pop
aas
mov
sbb
mov
mov
adc
inc
out
or
and
adc
sub
clc
sbb
aam
rcl
arpl
rdmsr
cmp
mov
adc
xorb
and
inc
paddsw
cld
add
cltd
cwtl
cmp
addr16
sti
xor
sbb
push
rclb
and
or
adc
or
mov
pop
cmp
mov
pop
xor
add
std
or
into
daa
shrb
daa
xchg
mov
add
arpl
punpcklwd
std
das
mov
dec
gs
pop
adc
cwtl
mov
into
in
push
push
nop
test
mov
adcb
push
test
sbb
stos
cmc
adc
push
lock
in
jmp
fstp
test
xchg
inc
lahf
ja
cwtl
or
or
scas
xchg
call
jne
add
and
jmp
shlb
sub
jge
daa
adc
aam
cltd
add
popf
mov
int
cs
xchg
mov
ret
sub
sbbl
xor
add
ds
ret
sbb
sbb
adc
lahf
enter
andb
mov
outsb
clc
movsb
outsl
xchg
lds
es
cwtl
jb
adc
cmc
sub
fstps
loope
outsl
sbb
and
sbb
fdivr
test
lcall
cmp
cld
sbb
mov
testb
test
out
push
js
sub
jo
mulb
adc
xor
ljmp
roll
pop
push
mov
add
lcall
les
out
movaps
xchg
dec
or
enter
jecxz
or
notl
stc
jecxz
mov
arpl
adc
daa
pop
popa
xchg
rcll
out
in
adc
in
xchg
les
bound
sub
aam
xor
xchg
adc
xchg
and
xchg
xchg
ljmp
lock
cwtl
dec
and
xor
in
jl
mov
dec
add
jne
pop
mov
stos
mov
lret
int3
insb
add
dec
add
push
fs
add
enter
dec
hlt
or
insb
or
out
cld
inc
in
hlt
push
call
mov
jb
dec
add
jp
adc
xor
cltd
addr16
or
inc
adc
cld
xor
pop
adc
adc
push
inc
rorl
jo
xor
adc
movsl
repz
dec
outsl
stos
int
scas
or
pop
xor
adc
cmpsb
xchg
dec
sub
pop
ret
sbb
hlt
and
repz
or
fs
repz
clc
and
repnz
in
dec
repz
xor
out
sbb
mov
or
ss
std
imul
adc
pop
lret
iret
mov
dec
js
les
movsb
jg
cs
nop
fdiv
testb
aad
or
adc
and
or
out
or
xchg
jecxz
lret
aad
repnz
and
popf
push
ljmp
and
ljmp
stos
xor
out
std
pop
adc
aaa
ljmp
or
dec
and
imul
pop
and
mov
unpcklps
add
shll
ljmp
mov
add
movsb
push
imul
into
nop
in
pop
sbb
movsb
out
dec
dec
fistpl
mov
repnz
push
add
push
roll
mov
or
dec
push
loope
dec
sbb
ds
or
xchg
add
int
enter
xor
sbb
pushf
lods
xchg
adc
std
aas
ja
imul
or
and
stos
push
add
mov
cli
std
lret
push
daa
jg
push
or
js
add
mov
into
cwtl
dec
sub
xchg
hlt
or
sbb
or
or
jmp
notl
jno
or
add
pop
sub
xchg
mov
adc
xchg
dec
sbb
inc
push
add
sbb
and
and
daa
add
daa
out
sbb
xor
xor
adc
mov
pop
movsb
shll
jbe
pop
dec
ja
popa
sbb
out
fs
sahf
repnz
jb
and
adc
sbb
popa
sub
mov
stos
dec
add
and
loop
inc
sub
mov
addr16
repz
lock
inc
xchg
sub
fcoml
mov
xchg
and
dec
cmp
sbb
arpl
push
dec
subl
mov
or
push
insb
lock
xor
lds
and
push
pop
mov
imul
xchg
cwtl
push
js
mov
xchg
push
mov
js
sub
sbb
push
cwtl
add
sub
pop
jg
sbbl
rcrb
push
jp
sbb
out
push
jo
outsl
sbb
shrb
and
jmp
stos
and
pop
push
stc
movsb
filds
ret
icebp
repnz
cmp
cld
nop
jb
and
sbb
add
sbb
jns
pop
lock
rorl
jb
xchg
cmpsl
push
add
and
int
nop
andb
aam
sbb
adc
mull
or
scas
sbb
mov
clc
out
call
sahf
clc
sbb
sub
in
xor
loopne
inc
nop
shrb
mov
pop
push
mov
cli
daa
inc
ret
testb
jnp
icebp
cld
scas
jp
sbb
sub
push
add
cmpsl
popa
jns
hlt
icebp
mov
adc
push
or
dec
cmp
call
dec
adc
arpl
repnz
push
xor
fcomps
inc
je
out
nop
lock
test
pop
mov
notb
in
out
add
dec
icebp
arpl
stos
fucomip
stc
out
es
push
push
jecxz
repnz
pop
push
fcmove
add
sahf
insb
add
cld
xchg
push
mov
ljmp
add
xor
sub
inc
pop
adcb
push
sub
cmp
add
sbb
sti
adc
or
adc
and
inc
xchg
jecxz
aas
js
or
lret
enter
es
rorl
lds
adc
call
pop
dec
and
addr16
or
and
stos
xor
out
and
cmp
das
ja
pop
jmp
jnp
test
mul
adc
scas
and
push
sbbb
sbbl
push
rorl
push
repnz
adc
adc
stos
gs
and
push
les
test
jno
inc
mov
sub
or
movsb
sti
cld
dec
mov
jns
add
sub
aaa
and
fdivr
mov
and
decl
es
or
push
push
cltd
fwait
add
mov
shrd
arpl
mov
and
test
dec
xchg
sub
add
hlt
add
sub
mov
shl
nop
outsl
mov
pop
push
mov
xchg
roll
sub
or
add
sbb
sbb
sqrtps
sbb
movsb
add
rorl
sbb
imul
test
outsb
scas
mov
or
insb
or
inc
in
push
jecxz
scas
daa
nop
loope
adc
loopne
and
sub
mov
hlt
dec
stc
mov
jb
or
nop
testb
movsb
adc
stos
outsb
daa
pop
fisttpl
push
adc
fsubl
dec
nop
adc
fmuls
or
dec
ret
sub
push
sbb
and
int3
aas
jb
sbb
lock
add
push
sub
into
addr16
xacquire
fldl
pop
sbb
jp
testb
or
icebp
adc
adc
pop
pushf
fs
jbe
pushf
or
sbb
sbb
add
cmpsb
mov
iret
scas
sbb
stc
loopne
dec
and
push
add
cs
repnz
inc
fdiv
sub
shll
cwtl
pslld
sti
adc
and
push
pop
sbb
dec
int3
sbb
adc
cld
rcr
push
add
and
sbb
insl
add
daa
mov
mov
imul
fisubrl
pop
in
mov
push
les
stos
std
cmp
adc
test
es
leave
faddl
pop
arpl
popa
mov
sbb
ret
pushf
jb
fcompl
aam
sub
sub
xor
mov
cmp
lock
or
add
and
mov
cld
pop
push
out
jg
sbb
ljmp
adc
mov
fistl
cli
movsl
and
cmp
push
sti
sbb
dec
mov
lret
sub
cld
cmp
push
mov
mov
cmc
pop
nop
jl
mov
push
cmpsl
addr16
sbb
scas
mov
inc
test
mov
and
inc
repnz
repz
daa
adc
popa
cmp
jp
fs
div
clc
sub
xchg
std
std
icebp
aas
xorb
icebp
ljmp
jae
sbb
icebp
adc
pop
ljmp
cmpsb
jnp
adc
popa
xchg
add
or
icebp
js
lahf
jbe
add
cmpsl
xchg
idivb
jo
inc
stos
ss
and
clc
dec
es
fcomps
das
or
adc
outsl
and
xor
icebp
nop
roll
das
cmpsl
pop
addr16
jae
gs
dec
sbb
loope
or
add
and
xlat
inc
lock
sbb
push
dec
lock
pop
lret
lret
xchg
ud0
or
mov
in
fstpl
cmp
std
enter
push
mov
mov
xor
xor
sbb
enter
or
lret
adc
cwtl
sub
inc
adcb
cmp
push
mov
push
nop
addr16
pop
cmp
mov
xchg
aaa
lcall
jl
lock
ljmp
jb
add
fs
cli
enter
adc
add
sub
mov
cli
enter
push
add
repz
in
es
movsb
daa
pop
mov
lods
xchg
cwtl
push
push
dec
lods
adc
inc
pop
xchg
add
add
sbb
out
enter
dec
call
add
xlat
mov
xchg
clc
or
fsubl
scas
xor
and
dec
mov
xor
xchg
mov
cltd
and
xchg
ds
and
inc
jne
movsb
or
jl
sub
xchg
dec
lock
pop
push
icebp
pop
leave
pop
mov
jmp
daa
leave
sbb
mov
or
popa
insb
adc
shrb
shr
out
or
and
fistl
pusha
or
movsb
dec
mov
aam
jmp
mov
inc
pop
or
jmp
sub
xchg
inc
rclb
icebp
and
jo
sti
cmp
push
int3
sbb
cmp
sti
or
push
jo
xchg
les
and
cmp
sub
ss
leave
fcoms
inc
xchg
repz
sub
xchg
shl
mov
hlt
decl
loope
adc
mov
fcoms
dec
aaa
popa
or
decl
add
movsb
xor
add
mov
pop
nop
icebp
fcomps
add
cmpsl
mov
cld
inc
mov
sub
push
mov
and
fs
movsb
insl
cmp
xor
adc
inc
call
jb
notb
fs
lcall
xchg
es
imul
and
aam
and
ja
into
add
loope
and
daa
jmp
mov
mov
into
add
aad
or
bound
xor
add
push
shl
or
mov
mov
shrb
cmpsb
loopne
cld
sbb
into
call
rcrb
push
popf
stos
add
stc
mov
dec
mov
sub
in
mov
jg
daa
mov
sbb
movsb
imul
add
add
stc
test
sub
adc
pop
jecxz
in
adc
stc
int3
mov
jo
sub
rcll
cmp
cmp
out
pop
sbb
rcll
mulb
cltd
pop
mov
sub
out
pop
lahf
js
movsb
add
in
sbb
sub
nop
add
mov
and
adc
lahf
mov
add
aam
adc
mov
sbb
or
xchg
push
add
cmp
std
fimuls
cli
jnp
inc
add
aam
lret
add
mov
adc
jne
sbb
stos
rorl
inc
adc
sbb
push
sarb
repz
movsb
fisttpl
fsubr
sub
sbb
cli
or
movsb
fiaddl
sarl
outsb
push
out
cmp
js
cmp
inc
out
pop
es
dec
add
out
cmpsl
in
mov
fcomi
lret
mov
shlb
into
imull
shll
pop
insl
push
or
fucomi
lret
xlat
add
sub
pop
adc
insl
out
and
aas
in
cld
push
mov
rcrb
mov
mov
and
je
subb
adc
inc
decl
and
adc
add
jecxz
sbb
or
inc
mov
jp
dec
in
call
pop
lret
cmc
add
jmp
and
lock
push
sub
or
mull
daa
cmp
fldenv
shl
not
and
ljmp
xlat
repnz
std
or
add
bound
repz
out
addr16
jecxz
mov
pop
pslld
pop
fs
add
decl
lock
loopne
negb
jo
dec
jo
iret
shl
outsb
mov
aam
test
ja
inc
mov
fcoms
sub
fs
cld
sbb
pop
cmp
jne
or
fldl
adc
mov
or
clc
ds
add
add
aam
mov
push
inc
enter
pop
add
cltd
aad
add
push
push
inc
sbb
pop
test
add
push
sub
imul
jmp
iret
loopne
cmpsb
adc
dec
divl
and
lock
insl
jns
push
mov
ljmp
pop
stos
xchg
out
cld
rclb
iret
mov
jmp
and
adc
inc
idivb
scas
add
movsb
aaa
push
icebp
or
leave
cld
sbb
gs
mov
mov
gs
pop
stc
negl
sbb
dec
push
and
insl
sahf
fimull
sub
jmp
mov
testb
add
mov
pop
add
mov
add
addr16
aad
adc
mov
add
fadds
xchg
lret
mov
push
aaa
punpckhdq
inc
insl
adc
pop
lret
add
movsb
mov
inc
cmpsl
jge
jg
sub
out
mov
aaa
and
addr16
pop
mov
mov
sbb
sbb
mov
out
pop
dec
imulb
in
repnz
add
in
sbb
js
push
imul
rorl
movsl
mov
clc
out
inc
cltd
gs
fwait
leave
in
lock
xor
cld
mov
cltd
jne
sar
bswap
push
das
sbb
mov
je
daa
sbb
pop
jmp
xchg
out
mov
repz
pop
and
test
and
arpl
mov
pop
js
pop
in
lods
jecxz
mov
notb
mov
jg
or
inc
andl
sub
lahf
test
sbb
int
stos
mov
popa
push
adc
lock
and
scas
outsl
push
dec
not
jns
and
arpl
jp
pop
rclb
dec
clc
lds
push
call
sub
sub
pop
nop
or
call
adc
popa
outsl
adc
stos
or
sub
in
pop
repz
and
add
jp
adc
movb
fisubl
daa
jne
or
ret
fadds
rcll
sbb
inc
insb
icebp
sti
pop
fs
xchg
popa
or
test
ljmp
fdivs
inc
dec
adc
lock
sub
or
inc
jmp
xchg
enter
pushf
out
jmp
loope
mov
in
pop
sub
push
fs
push
ss
xor
stos
sbb
push
int3
mov
es
invd
test
out
or
rol
dec
and
rolb
popa
imul
or
unpckhps
add
fdivr
ret
fmuls
out
dec
fstpl
pop
pop
and
sub
adc
inc
add
adc
fistpl
push
insb
add
loopne
mov
cltd
iret
cmc
add
sbb
hlt
mov
xchg
push
fcoms
adc
in
adc
push
push
mov
insl
sub
push
inc
sbb
xcrypt-ecb
cmpsl
dec
add
mov
test
lock
mov
movsb
or
sbb
pop
insb
jge
adc
mov
mov
push
arpl
sub
adc
roll
shl
cli
sarb
xor
push
movsl
pop
std
test
lods
and
xlat
sub
mov
xchg
and
pop
daa
popa
xor
push
jns
and
sub
test
sti
shrl
sub
push
xchg
icebp
lock
orb
pop
jmp
dec
in
mov
mul
xchg
adc
cmpsb
and
lcall
ds
in
nop
lods
mov
pushw
outsb
enter
push
pop
or
jmp
xchg
mov
stos
movsb
fcom
inc
ficoml
cmpsl
xlat
mov
or
and
add
cmp
jg
fadds
push
push
incb
add
clc
sub
xor
pop
lds
cmp
add
jmp
jecxz
and
nop
jecxz
push
add
mov
mov
js
push
mov
fiadds
stos
outsb
stc
fcoms
jecxz
ja
and
and
and
jmp
inc
push
inc
dec
or
call
divb
add
cmpsl
push
jnp
jb
add
dec
ror
add
popl
sbb
push
fcoms
sbb
xchg
ljmp
mov
icebp
pop
idivb
scas
sub
inc
lock
fsubrl
sbb
and
pop
fcom
in
cmp
subl
insl
adc
arpl
enter
dec
inc
clc
add
push
je
or
push
scas
daa
stos
aas
jo
andl
sbb
jg
movsb
push
and
pop
test
mov
nop
stos
daa
xor
dec
adc
mov
lock
sbbb
cmpsl
cmp
cmpsl
sbb
movsb
inc
nop
and
sbb
add
es
call
lahf
lods
add
shll
xchg
cmp
and
sub
mov
cld
xor
js
push
sbb
imul
pop
les
aam
movsb
adc
sbb
xor
std
repnz
cmpsb
jnp
add
cmp
mov
xor
jmp
adc
les
icebp
or
jge
xor
and
stc
mov
xchg
sbb
xlat
adc
adc
ret
jno
mov
add
dec
and
call
sub
mov
orl
add
or
mov
sbb
out
add
lret
or
orb
push
fs
push
pop
dec
mov
mov
stos
icebp
push
fs
cmpsb
pop
mov
fisubrl
inc
sub
dec
inc
add
push
pop
rorl
sub
jp
sub
add
andl
mov
bnd
ljmp
and
xchg
cld
mov
mov
pop
fstl
push
adc
push
xchg
mov
pusha
sar
sbb
fdiv
adc
mov
fs
pop
or
mov
aad
and
sbb
push
sbb
push
add
out
sub
sar
test
xor
ficompl
shl
enter
push
inc
fmull
push
adc
div
and
pop
mov
test
aam
cmp
sbb
in
sub
sbb
mov
clc
fs
lock
and
xchg
imulb
push
mov
and
xchg
sahf
xor
adc
adc
sbb
negb
cmp
repnz
stos
mov
push
es
adc
fcomps
scas
hlt
cwtl
aam
das
cwtl
add
repnz
push
mov
out
mov
sbb
popa
add
rep
or
fmuls
sub
test
in
adc
jno
outsl
adc
xchg
sbb
bound
shr
adc
stc
jg
enter
outsb
mov
out
add
or
inc
add
and
cmp
fs
sub
add
pop
arpl
pop
or
jbe
and
rcrl
subl
xchg
mov
jl
js
add
mov
pop
add
dec
sbb
push
sub
jmp
addb
repnz
out
sub
scas
repz
pop
smsw
xchg
insl
xor
aaa
pop
or
cld
lods
sub
dec
and
add
sbb
ret
rcrb
cmc
xor
xlat
inc
loop
jmp
push
sbb
jb
cwtl
lock
push
cmpsl
out
sahf
xchg
dec
mov
notb
or
mov
dec
sbb
sbb
loop
adc
pop
and
adc
or
daa
repnz
loop
stos
xor
out
sub
mov
sub
out
out
sub
inc
and
pop
sbb
hlt
and
fmul
in
les
movsb
aam
call
push
and
push
mov
cmpsb
pop
inc
and
in
sbb
dec
and
daa
test
pusha
and
add
add
sbb
arpl
je
mov
lock
xchg
cs
sub
pop
icebp
in
push
cmc
and
hlt
arpl
mov
movsb
loope
out
test
xchg
and
xor
push
jmp
sub
daa
pop
je
adc
sbb
outsl
lea
sub
out
movsb
jb
adc
xchg
fs
fistpl
xor
or
push
sub
push
jle
std
std
xor
outsb
enter
repz
loop
cli
xchg
jecxz
mov
shlb
adc
add
scas
inc
and
mov
xor
in
pop
scas
lds
and
cltd
jge
in
stos
pop
lret
dec
push
fdiv
pushf
rcrl
mov
shll
mov
aad
mov
stc
daa
fs
sub
push
call
cmp
gs
mov
add
aam
and
pop
sub
cli
jbe
pop
jo
aaa
inc
sub
insl
and
daa
out
or
push
mov
xchg
int
or
add
orl
js
cs
push
dec
adc
xchg
cwtl
mov
push
sub
aam
std
mov
jo
ja
pop
aaa
inc
xor
jb
and
mov
add
push
jmp
ja
xor
sbb
les
icebp
ret
loop
test
and
lods
mov
cmp
enter
xchg
ss
adc
cmpxchg
test
int
pop
loopne
push
jnp
or
adc
out
fadd
push
pop
outsl
sbb
add
lea
cld
mov
cmpsb
fwait
xor
mov
mov
sbb
fs
daa
sbb
jmp
jecxz
pop
xchg
shl
and
out
out
cli
jns
loopne
sbb
pop
xchg
add
ljmp
ja
out
sub
sbb
lds
push
pop
add
and
pop
push
dec
lods
add
dec
or
sub
pushl
lds
xor
nop
movsb
test
aaa
add
test
mov
sbb
gs
pop
cmp
sbb
or
enter
jl
pop
lcall
pop
call
hlt
inc
lock
pop
adc
pushf
shlb
cwtl
in
xor
adc
les
out
nop
ljmp
daa
and
sub
mov
or
push
push
mov
js
movsb
outsb
push
cmc
ss
aad
mul
dec
lods
stc
jmp
jno
je
ret
cmpsl
pop
and
negb
es
dec
imul
mov
push
pop
lods
mov
testb
inc
addl
cmp
add
mov
or
in
daa
fsubrs
dec
adc
inc
sbbl
or
jg
ja
sbb
or
daa
pop
std
enter
int
jmp
shl
jmp
mov
imull
shl
inc
xchg
fisubl
push
jecxz
imul
fistps
insl
push
stos
pop
test
dec
stos
stos
ret
ds
xchg
dec
push
mov
and
mov
xchg
repz
stc
mov
lods
lock
xlat
sub
fsubl
xor
or
push
aad
add
hlt
aas
mov
out
jecxz
mov
push
add
mov
mov
lock
daa
push
dec
fdivr
out
ret
stos
and
inc
push
movsl
or
hlt
sbb
push
inc
add
mov
lods
mull
mov
lret
cli
sbb
jne
or
nop
jbe
in
sub
push
call
xchg
and
and
push
shrb
adc
fcoms
mov
out
cmp
adc
inc
insb
push
stos
xor
inc
aaa
repnz
stos
nop
mov
push
mov
inc
gs
adcb
loopne
lcall
movsb
test
push
in
jns
les
shl
fs
jecxz
and
sbb
dec
pop
movsb
cwtl
push
scas
fisubl
cmp
push
inc
cmc
sbb
shl
pop
insl
fsubr
cwtl
int
leave
fmuls
xchg
mov
sbb
fiaddl
arpl
cmp
outsb
addr16
stc
lcall
cmpl
and
or
dec
jb
shrl
xchg
std
adc
push
les
rcl
int
pop
cwtl
sub
and
out
jl
xchg
sti
and
sub
or
arpl
shrb
cmovs
aam
or
fcomi
or
stos
imul
push
pop
lock
aaa
xor
sbb
ficomps
sbb
mov
scas
lahf
sub
mov
cwtl
imul
lds
adc
hlt
and
jg
push
mov
push
scas
xchg
push
testb
out
pusha
shrb
xor
in
mov
sbb
lcall
aam
sbb
or
outsl
clc
and
xchg
in
jnp
fwait
ret
movsl
jecxz
and
cld
pop
sbb
andb
sbb
lods
fs
idivl
and
rorl
adc
clc
hlt
adc
daa
dec
mov
lods
mov
mov
sbb
into
add
ret
sbb
out
mov
loop
mov
mov
in
lret
sbb
mov
inc
iret
outsb
cwtl
mov
cmp
imul
mov
and
inc
mov
push
cmp
cld
addr16
icebp
pop
adc
test
dec
mov
movsb
movsb
lock
sti
lds
or
cmpl
jp
add
push
push
fs
lea
or
fldl
outsb
add
adc
cld
pop
pop
sub
daa
xor
sub
pop
adc
test
test
cli
mov
ret
pusha
mov
add
outsl
sub
mov
jg
das
sub
aas
out
nop
notb
test
sbb
sub
cltd
ficompl
sbb
and
data16
and
mov
nop
fisubs
pusha
dec
insl
pop
mov
enter
xlat
arpl
inc
out
add
es
popf
xchg
xchg
sub
adc
cld
add
scas
negl
leave
ret
cld
and
pop
xchg
test
dec
fstpt
inc
imulb
sub
subl
test
outsl
add
mov
xor
xor
pop
test
xchg
mov
lret
out
or
sub
loopne
repz
pop
inc
dec
cli
and
add
sub
xchg
rolb
fistl
pop
sub
bound
test
sbb
jmp
arpl
out
fs
shlb
int
sub
cmp
cmpsl
hlt
and
push
cmp
enter
xor
push
in
push
test
mov
and
lret
pop
rorb
inc
into
or
aam
rcl
in
rcll
cmc
gs
out
dec
out
sbb
add
cmpsl
notb
inc
repnz
cmp
das
cmpsl
or
dec
xchg
mov
fadds
sbb
and
enter
stos
subl
and
call
xchg
adc
pop
xor
adc
mov
ja,pn
or
pusha
daa
lahf
push
jmp
sbb
jmp
or
ljmp
push
clc
cmp
daa
add
or
jne
and
not
dec
aam
or
nop
push
or
push
adc
push
stc
mov
loope
or
xchg
mov
cld
lods
mov
lock
std
aad
lahf
mov
icebp
arpl
sbb
sub
mov
faddl
lds
outsl
mov
and
fs
iret
add
cmp
or
fistpl
nop
sub
sub
mov
mov
out
push
sti
popa
adc
sub
xchg
std
mov
mov
aad
jo
inc
and
sbb
hlt
mov
push
mov
clc
adc
pop
jb
repz
fs
insl
cmp
sti
and
outsl
enter
sbb
pop
sarl
fstpl
ds
jl
mov
pop
sub
call
popf
arpl
lock
pop
xor
imul
fs
jb
icebp
rcrb
sbb
pop
fistl
push
daa
or
nop
test
push
or
and
jecxz
in
sbb
adc
sub
push
ds
sahf
jle
fs
mov
aaa
inc
aas
cmp
subb
mov
mov
rolb
add
push
and
mov
sub
pop
jo
sti
aas
lea
add
push
add
dec
inc
mov
add
div
inc
rcrl
or
fsubrl
fists
pcmpgtb
mov
inc
out
push
test
mov
jge
popf
dec
push
arpl
outsl
sbb
aam
push
arpl
scas
ficoml
outsl
and
adc
imulb
clc
or
cmovne
push
xor
fcoms
mov
and
insb
loope
sbb
jmp
and
push
hlt
mov
mov
adc
mov
add
or
xchg
or
and
stos
adc
adc
cmp
cltd
and
aaa
fdivr
je
sub
push
stos
xchg
shr
sub
adc
andl
mov
xchg
cmp
adc
lds
sbb
or
xlat
xchg
repnz
mov
movsb
mov
decl
in
jne
std
fisubs
sbb
aas
or
cltd
pop
jb
clc
xchg
lods
cmp
vmread
lock
fiadds
ljmp
or
inc
loop
imul
lock
scas
test
imul
push
cmc
repnz
sbb
fistpl
adc
adc
rcrb
in
sub
ljmp
std
test
push
or
nop
mov
fwait
out
sbb
xor
into
adc
push
and
cmp
add
gs
adcb
mov
adc
dec
aam
fcom
mov
mov
mov
call
dec
fdiv
rorb
repnz
and
ret
or
jnp
xchg
mov
lods
push
sub
popa
int3
adc
sbb
rcpps
pop
mov
stos
or
push
dec
daa
and
nopl
inc
dec
popf
dec
add
push
xlat
and
jecxz
push
aaa
and
loopne
sbb
mov
cmpsl
inc
and
push
mov
jmp
and
aas
into
sbb
enter
enter
sbb
mov
stos
add
mov
add
jnp
jecxz
push
jo
sub
push
fs
xchg
sub
add
test
in
movsl
push
or
mulb
out
add
and
sbb
inc
sub
mov
mov
aad
cmc
lret
dec
xlat
lcall
mov
stos
out
add
dec
popf
push
lock
add
and
in
fcoms
push
sbb
add
push
sbbl
dec
adc
je
cwtl
and
and
adc
testl
sti
repz
xchg
add
fs
scas
pop
jmp
sub
add
jecxz
into
sbb
sbb
test
mov
mov
push
and
push
lods
mov
push
add
adc
add
or
cmp
and
add
or
sub
subb
in
nopl
cmp
pop
mov
out
in
filds
les
or
cltd
add
dec
and
push
into
inc
cwtl
stc
pop
adc
cltd
pop
icebp
or
mov
pop
sub
xor
fimuls
push
pop
ret
sbb
add
add
sub
jbe
dec
xchg
sub
and
inc
fnstcw
lock
popa
rorb
push
and
adc
sbb
pop
sbb
push
and
enter
pop
lock
out
out
push
sub
and
dec
sub
push
push
sbb
xor
or
and
call
cltd
lret
adc
sbb
dec
pop
mov
jle
lcall
mov
jns
dec
in
mov
jno
repz
sahf
mov
jo
push
aas
mov
clc
dec
xlat
enter
pushf
push
imul
sbb
sbb
xchg
sbb
lcall
mov
sbb
scas
lcall
mov
push
loop
xor
fisttpll
and
or
jp
lds
hlt
sbb
add
or
lret
and
cwtl
mov
rol
jno
cld
push
fs
outsl
add
mov
lret
add
pop
push
aam
testb
pushf
or
or
arpl
pop
pop
div
movsb
sbb
loope
jno
call
pop
sbb
sbb
notl
sbb
dec
test
pop
rcrb
std
neg
scas
sbb
adc
imul
ljmp
mov
stos
fcoml
and
mov
and
jmp
call
cmp
add
cmp
movsb
stos
add
test
repz
adc
push
mov
hlt
andps
xchg
push
ljmp
pop
adc
cmp
repz
inc
dec
cmp
dec
and
andl
xor
popf
test
sub
sbb
es
or
sbb
call
aas
lea
or
dec
add
cmpsl
cmpl
and
rorb
adc
adc
and
push
sub
adc
fwait
xor
and
jg
cmc
jmp
verw
daa
lret
testb
pop
repnz
daa
or
dec
sbb
scas
or
jmp
sbb
inc
inc
jge
or
cmp
adc
jle
sub
and
push
das
jp
dec
divb
mov
arpl
dec
clc
stc
in
jbe
adc
sub
mov
addr16
rcrb
out
adc
push
push
movsb
clts
loop
or
iret
clc
fldenv
pop
jecxz
and
ds
and
cmc
and
sub
icebp
cwtl
popa
js
add
cmpsl
sbb
jg
pop
les
jge
dec
scas
push
lds
and
add
push
lock
cmc
js
orl
mov
jne
enter
dec
sbb
aad
sbb
sar
sub
lcall
imul
dec
and
push
fs
xchg
mov
outsl
add
loop
and
push
lcall
inc
and
jle
in
xchg
scas
xor
hlt
cld
adcb
outsb
and
adc
and
movsb
daa
xor
in
add
ljmp
aaa
jp
stc
ljmp
add
pop
xlat
mov
mov
movsb
sbb
mov
xchg
fdivrs
pop
mov
pop
pop
and
out
add
cmpsl
aam
mov
daa
cld
jmp
or
es
arpl
inc
aam
rcl
sub
jmp
or
int3
ljmp
aad
and
or
pop
add
and
cld
sbb
cmp
cmp
sub
xchg
sbb
stos
dec
or
push
mov
call
imulb
lock
gs
in
or
mov
or
xchg
stos
sub
mov
sbb
push
or
inc
mov
push
adcb
push
adc
shr
daa
scas
jno
daa
sbb
pop
hlt
lock
fadd
and
and
popa
cmp
jb
cmpsl
std
fs
fistl
ljmp
add
dec
ljmp
push
pop
loopne
stos
sahf
icebp
lock
mov
testl
insb
fdivrl
and
popa
xchg
and
inc
cwtl
or
lock
sbb
cmp
out
cmp
ret
sbb
or
std
push
cmpsl
mov
add
fidivl
rol
clc
inc
inc
push
hlt
adc
jecxz
cmpsb
je
push
sbb
mov
imul
pop
aaa
fidivl
fmuls
movsb
jnp
sti
and
aad
fwait
ss
add
and
test
in
pop
daa
outsl
movl
jne
rcll
int3
sbb
sahf
test
or
fs
inc
push
das
adc
adc
sbb
imul
jmp
sub
cli
popf
sbb
paddsw
add
punpckhwd
pop
nop
stc
cmp
movsb
ja
xchg
in
sbb
pop
ret
repz
icebp
cmc
mov
stc
sub
mov
je
mov
hlt
sub
leave
xchg
adc
and
push
lock
push
cmpsl
daa
jmp
add
xlat
stc
push
scas
popf
fsubp
jns
push
sbb
mov
gs
pop
jl
sub
jo
js
stc
cltd
stos
or
in
imul
and
test
aas
jbe
sbb
lock
outsb
jo
dec
sub
xchg
aaa
cmp
int3
adc
loope
push
mov
pop
sbb
out
add
jmp
scas
out
test
jmp
loope
cli
pop
sti
loope
push
out
pop
arpl
shrb
jmp
cmp
jno
sbb
or
sbb
mov
jecxz
or
or
cmp
add
fisubrl
xchg
in
dec
push
inc
rclb
popa
pop
xchg
mov
test
nop
jo
ret
adc
mov
or
sbb
repnz
incl
div
mov
and
sbb
mov
cmp
add
stc
jecxz
repz
push
fcoms
and
mov
and
xchg
ljmp
and
push
push
cltd
mov
jmp
aam
ds
out
fldt
or
shl
xchg
mulb
daa
movhps
xchg
push
loopne
lods
xchg
xchg
fisubl
or
cmp
add
push
pop
sub
in
mov
xor
pushf
and
dec
dec
push
fiaddl
mov
daa
lret
ss
push
rol
mull
fimuls
push
repz
lock
inc
into
sbb
in
cld
pop
imul
mov
cmc
ds
pop
xchg
mov
cs
in
outsl
pusha
popa
das
and
pop
lahf
sbb
adc
stc
lds
jb
adc
xor
ljmp
mov
adc
fs
sub
mov
pop
mov
xchg
aam
sbb
fdivr
popf
imul
mov
iret
sbb
sub
push
gs
sub
fidivl
add
or
fcoms
ds
sbb
rorl
es
roll
cld
iret
jge
add
mov
and
add
rclb
push
ds
pop
clc
mov
rolb
pop
stc
rorb
lea
add
push
mov
int
sbb
or
mov
jl
fsubrs
clc
jbe
sbb
out
push
inc
xlat
and
nopl
push
mov
lea
imul
shlb
enter
pop
and
arpl
ljmp
mov
fildll
repnz
jl
sti
jns
xor
xor
push
nop
push
pop
outsb
push
push
xor
mov
daa
sbb
sub
sar
dec
xor
add
mov
xchg
jp
cld
sbb
add
push
stos
adc
shll
movsb
aad
jne
sub
push
push
test
mov
adc
jge
sub
mov
ss
mov
sub
sub
popa
sbb
jmp
js
xchg
or
mov
cli
lcall
cmp
push
mov
sub
lahf
out
ja
daa
dec
pop
fcoml
dec
mov
xor
sub
daa
pop
adc
cld
xchg
ficoms
imul
jns
sub
mov
sub
mov
or
add
sbb
push
pop
inc
mov
imul
or
cmp
and
xor
add
pop
adc
and
add
lcall
and
es
cmpsl
les
loope
icebp
xchg
ljmp
mov
daa
or
ret
aam
or
jg
gs
addl
xor
lock
and
jns
and
mov
or
lret
xor
mov
daa
adc
jnp
pop
cmp
jae
std
and
ret
in
dec
push
jmp
call
or
nop
pop
add
or
fs
jle
sbb
inc
or
fcomps
arpl
sub
test
adc
push
and
aad
push
mov
out
cld
sbb
pop
mov
jo
loope
adc
pop
sbb
sub
inc
ss
sub
cmpsb
add
or
int
dec
jmp
lods
push
jno
in
xor
mov
cmp
add
fisubl
xchg
je
ljmp
out
and
adc
div
in
cmpsl
add
test
sbb
cmpsb
xchg
fmul
ja
mov
sub
adc
jmp
cs
xor
stc
lock
mov
and
pop
rorl
pop
arpl
sbb
sarb
inc
out
fsubs
cmp
push
fidivrl
sub
jb
push
or
xor
dec
or
mov
mov
jnp,pn
sarl
xchg
or
sbb
inc
push
out
add
scas
sbb
push
out
repz
jge
push
stos
jecxz
aam
cld
das
lock
mov
sarl
cmp
gs
loopne
shlb
out
adc
imul
icebp
cltd
mov
push
adc
hlt
dec
mov
or
xchg
les
ljmp
repnz
or
mov
pop
ja
add
mov
sub
sbb
mov
cmp
xchg
or
or
cltd
cs
daa
jle
sbb
pop
imul
jecxz
sbb
push
mov
pushf
and
push
jnp
stos
cmpsl
scas
cld
jecxz
lcall
dec
and
cmp
outsl
call
rclb
mov
push
or
add
sub
inc
jecxz
sub
nop
std
adc
lds
xorps
fsub
mov
mov
daa
or
shld
js
iret
in
inc
fcomi
out
and
arpl
enter
or
je
push
sub
cltd
pushf
fadds
fwait
aad
js
repz
dec
pushf
js
vunpckhpd
ja
into
repnz
sub
sti
jns
and
and
push
cmp
sbb
push
bnd
jne
push
sub
xchg
movl
inc
hlt
push
negl
adc
and
xchg
sbbl
std
jae
xchg
pop
sbb
pop
aad
mov
fistpll
shl
hlt
sbb
push
cli
cmpsl
nop
mov
push
in
push
adc
jo
stos
mov
xchg
test
enter
mov
dec
nop
dec
inc
imul
jp
push
push
push
push
mov
push
loop
inc
call
push
lahf
shlb
lock
arpl
jmp
jo
jl
mov
mov
scas
mov
sahf
push
cmpsl
jge,pn
out
insb
movsl
mov
test
insl
test
and
push
mov
push
mov
ja
and
sub
das
stc
hlt
add
xchg
call
push
daa
push
out
sub
mov
or
xor
push
add
dec
fs
pop
jmp
adc
test
mov
push
add
div
setl
adc
rol
aaa
push
in
mov
sub
push
stos
pop
lock
jo
sbb
sbb
xabort
sbb
cli
pushf
sbb
lcall
xchg
push
mov
push
cmp
je
and
movsb
adc
and
hlt
test
jp
sbb
insb
xchg
push
inc
hlt
les
and
cmpsl
and
pop
dec
mov
nop
lret
or
in
rcl
inc
xchg
xchg
sbb
test
ljmp
cmp
aad
jb
icebp
test
or
and
ret
sub
fs
mov
and
dec
iret
and
out
xchg
fadds
xchg
ffree
idiv
cmpsl
out
insl
or
cmp
cwtl
mov
adc
dec
movsl
int3
fdivr
jnp
mov
out
mov
mov
roll
mov
ja
movl
adc
jge
adc
pop
sub
into
and
lcall
enter
or
inc
cmp
cmp
add
lret
pop
pop
addb
inc
es
cmp
mov
mov
mov
out
out
enter
lcall
xor
sub
add
xchg
mov
jne
jge
and
sbb
lcall
sbb
jnp
jne
fidivl
mov
add
daa
or
pop
negb
addl
or
pop
fs
or
shl
jae
cld
sub
shl
andb
sti
movsb
adc
sbb
nop
jbe
xchg
mov
in
mov
aas
cmp
fistpl
jo
mov
ret
shrb
and
cli
or
addr16
xchg
sbb
or
lock
popf
push
sti
mov
clc
push
fs
negl
imul
daa
xchg
inc
sbb
sbb
push
push
add
lret
insl
rcr
push
push
sbb
pop
add
repnz
adc
in
sub
and
mov
push
arpl
inc
mov
addr16
dec
cli
daa
lock
aaa
icebp
cmc
aas
sti
add
or
xchg
pop
out
pop
lock
in
jne
xor
and
adc
cltd
pop
cmp
jmp
popa
out
imul
shrb
add
sarb
sti
loopne
push
js
insl
sub
mov
stc
or
fs
mov
mov
scas
sbb
out
aaa
sub
in
and
and
fdivrs
add
sub
lret
or
push
push
rclb
or
sbb
push
mov
mov
ds
and
rcrb
mov
push
pushf
cmp
cltd
push
mov
sti
inc
xchg
and
pop
cmpsl
adc
js
or
rol
push
lcall
lock
adc
notb
pop
push
pop
dec
jmp
in
add
mov
popa
lock
stos
pop
cmpsl
fmuls
test
sbb
dec
icebp
dec
or
popl
adc
movsw
push
and
hlt
push
popf
inc
xor
loope
decb
adc
pop
adc
imul
loopne
add
popf
pusha
jecxz
outsb
dec
sub
es
popf
sub
daa
ja
lock
movb
out
nop
insl
rorb
jp
fsubl
inc
daa
adc
test
out
sub
add
je
sub
add
push
js
push
mov
icebp
lea
adc
xchg
inc
lcall
subb
push
jbe
or
fxch
and
push
mov
fcoms
push
jae
imull
and
cmp
inc
and
out
mov
mov
adc
sti
adc
mov
fcomps
push
push
repz
insl
add
sar
and
clc
adc
jge
fsts
bound
lret
or
dec
adc
xchg
pop
shll
pop
inc
or
inc
cmp
dec
movsb
aas
cmp
jle
repz
popf
in
scas
repnz
comiss
sub
add
and
pop
cs
popa
push
pop
push
daa
daa
stos
daa
push
dec
or
cwtl
icebp
aad
js
adc
inc
mov
push
cmpsl
sbb
jnp
jg
cld
cltd
fdivl
in
add
add
pop
decb
or
and
or
stos
sarl
adc
lds
pop
mov
lock
add
insl
lret
test
pop
fsubr
test
cmpsl
or
xor
push
cld
and
sbb
adc
add
push
daa
gs
test
or
jle
incb
mov
clc
hlt
shr
xor
popa
mov
ss
nop
enter
sbb
jmp
pop
nop
insb
lcall
push
mov
out
sbb
out
test
imul
ljmp
fstps
popa
jmp
jmp
mov
test
pop
push
or
add
push
dec
cmc
ljmp
jp
jo
js
xchg
and
xor
pop
jg
mov
loop
adc
out
mov
in
sbb
icebp
add
push
jl
enter
push
inc
call
adc
dec
mov
arpl
mov
rcrl
lahf
lods
pop
adc
stc
imul
sbb
xrelease
pop
sub
push
xchg
std
dec
aad
pop
fsubl
xchg
cld
or
ja
sbb
push
mov
cltd
and
sbbb
out
fwait
add
rep
dec
pop
mov
and
popa
repnz
sbb
lds
and
inc
cli
sub
movsb
mov
neg
or
dec
push
sub
fildl
inc
mov
or
add
clc
sbb
push
jmp
add
adc
jo
jl
cmp
sbb
iret
cmp
jne
lret
push
push
mov
jle
mulb
stc
push
aas
nop
mov
aaa
jle
and
cld
push
dec
sahf
cmp
and
add
stos
lods
stc
sub
sbb
and
daa
adc
pop
fsubr
inc
pushf
push
js
inc
xchg
sub
dec
out
lods
lock
lret
repnz
mov
ljmp
push
mov
test
dec
int3
je
test
xor
sbb
call
adc
jo
lock
xchg
xor
in
pop
sbb
test
inc
or
sti
sbb
adc
fwait
and
or
sbb
ds
js
aam
mov
or
sti
adc
push
popl
push
jecxz
xchg
add
mov
add
or
fsubr
outsb
arpl
movsb
xchg
cmpsl
sbb
loopne
mov
sub
daa
fisttpl
or
push
cmp
xorb
int3
pop
pop
sbb
incb
enter
fldl
and
cmp
sub
sub
scas
or
xor
add
out
jge
repnz
nop
gs
push
push
and
inc
mov
pushf
arpl
or
sbb
xlat
xchg
xor
mov
mov
outsl
inc
aam
shll
add
sbb
mov
in
sub
into
lock
clc
repnz
and
push
or
cwtl
cltd
call
daa
xchg
rclb
cmc
or
push
xchg
inc
xlat
add
and
or
shlb
mov
pop
or
mov
add
pop
sbb
sbb
inc
push
movsb
push
add
cmp
inc
inc
sbb
loopne
dec
dec
sbb
inc
adc
outsb
adc
sar
pop
pop
icebp
stos
or
fs
clc
push
in
mov
repz
loope
jnp
adc
inc
sbb
sbb
xchg
sbb
ret
push
and
jmp
stc
stos
stos
xchg
dec
push
jb
fldenv
sbb
mov
stos
cltd
lcall
and
jmp
jp
push
inc
inc
xchg
cmpsl
aad
cmpsl
clc
and
jae
nop
test
add
cmpsl
popa
xchg
icebp
cmpsl
and
loope
lret
imul
ss
and
inc
jl
lret
cltd
out
ds
adc
out
icebp
lahf
and
add
shr
test
push
push
imul
mov
mov
push
bound
mov
loopne
sbb
and
pop
and
repnz
mov
push
lods
pop
push
push
shll
out
sub
ret
sbb
mov
push
sub
and
inc
add
imul
mov
dec
pusha
add
and
imul
push
and
mov
lret
testb
ret
jp
test
ljmp
mov
ljmp
mov
test
sub
sbb
lock
sub
out
pop
or
or
mov
and
int3
jp
lock
add
mov
add
pop
mov
mov
inc
decl
and
mov
mov
push
jecxz
nop
shrb
xchg
pushf
and
repnz
and
fs
iret
or
mov
jle
sti
cld
cmpsl
ret
lret
ljmp
or
stc
sub
push
dec
icebp
lcall
and
lods
add
pop
nop
insl
scas
mov
aam
mov
sub
mov
or
imul
stos
ret
push
add
or
pop
pop
ljmp
fwait
xchg
pop
pextrw
rclb
and
daa
testb
outsb
cmp
sbb
or
clc
or
push
clc
adc
je
push
test
dec
ljmp
arpl
cs
popf
ret
pop
aam
push
icebp
jecxz
into
sti
cwtl
aam
orb
test
sub
lods
lret
idivl
adc
cmp
in
xorl
mov
pop
pop
fnsave
fdivr
call
rclb
inc
dec
jns
cmc
jb
add
aam
hlt
and
test
jmp
mov
and
inc
add
int
jmp
lock
and
sarl
stos
clc
pop
adc
sti
sub
sub
mov
add
aad
clc
adc
sbb
nop
scas
and
sub
jb
pop
lcall
outsl
add
aam
push
cmp
mov
adc
and
dec
fisttpl
cli
sbb
movsb
lods
jg
out
aam
and
inc
push
bound
add
jecxz
lea
or
mov
jmp
shll
jl
fwait
icebp
daa
in
pop
notb
sub
ret
aad
mull
cmpsl
add
mov
dec
adcb
cli
xchg
mov
out
adc
push
add
adc
pop
adc
js
mov
xchg
dec
lret
lock
ljmp
jnp
repnz
add
mov
sub
mov
inc
cmpxchg
repnz
mov
and
lcall
sahf
mov
pop
shrb
cltd
imul
cmp
cmp
outsl
push
sub
jmp
inc
jo
sub
repnz
les
fcompl
push
adc
shlb
cltd
xchg
bound
push
sbb
popf
aam
idiv
and
or
lea
pop
clc
xchg
dec
mov
add
lret
loopne
repnz
push
ret
ljmp
sbb
add
sbb
xchg
rcl
shll
adc
xlat
and
clc
or
addr16
pop
dec
subl
mull
mov
data16
pop
loope
jmp
ret
in
or
mov
cld
mov
addr16
inc
scas
sbb
add
jmp
mov
push
add
je
roll
xchg
and
aam
sub
out
mov
adc
loopne
push
gs
push
sbb
pop
adc
cmovae
fistpll
push
inc
icebp
jb
and
xlat
rcrb
jne
push
negb
and
insl
shll
gs
in
or
sub
sbb
int
adc
popf
or
or
nop
sti
adc
sub
in
mov
and
lock
push
cli
movsl
loopne
add
pop
or
fildl
es
daa
jb
lea
inc
dec
push
and
push
push
add
das
std
add
push
jp
repz
push
outsl
push
xchg
jmp
push
loop
test
push
add
mov
pop
js
cltd
repz
and
shrb
add
add
or
and
and
out
enter
xlat
fisubrs
or
nop
add
dec
das
enter
xchg
lret
or
mov
jmp
add
cmp
or
push
and
ljmp
push
sbb
divb
jecxz
and
es
lret
or
and
fnstenv
loope
shlb
dec
mov
cmp
sbb
jb
or
pusha
or
add
sti
xchg
or
push
pop
fimull
ud1
fdiv
adc
lahf
mov
daa
icebp
and
push
lds
jne
ds
add
fs
xchg
les
movsb
vexpandpd
fdivrp
and
jecxz
cmp
adc
xor
jo
inc
movsl
mov
sbb
mov
cmc
cwtl
xchg
scas
cmc
clc
pop
subl
movsb
and
inc
cmp
dec
sbb
pop
mov
pop
pop
jl
mov
jns
add
sub
xchg
cmc
jge
or
adc
add
out
pop
dec
and
xor
in
loop
test
mov
negl
cli
add
cmp
nop
adc
xor
mov
enter
mov
test
push
aas
add
and
or
int
sbb
lret
daa
mull
adc
stos
pop
mov
sub
or
xor
lods
mov
sub
pop
fcompl
imul
add
in
sub
mov
outsl
orb
inc
sub
lods
cld
mov
cmp
push
cltd
cmp
push
mov
sub
inc
in
cltd
adc
sbb
dec
dec
stos
cld
xchg
xor
sbb
jnp
stc
lret
in
mov
and
mov
mov
adc
rclb
push
stc
add
add
outsl
sub
out
bound
loope
ret
pop
push
gs
dec
and
dec
lds
push
lock
push
imul
mov
mov
mov
pop
mov
nop
push
dec
pop
sub
enter
push
outsl
inc
repnz
mov
add
into
or
lret
iret
sti
cld
push
push
mov
ficoms
pop
and
mov
outsb
inc
and
cmpsl
ja
pop
nop
and
cmp
adc
and
and
je
ljmp
inc
sub
or
add
sahf
daa
inc
repnz
fcmovnbe
cltd
add
stc
push
sbb
jno
push
mov
sbb
jmp
xor
in
push
jecxz
push
or
subl
add
sub
shl
adc
and
stos
lock
push
fldl
mov
add
xchg
clc
testl
and
setp
ljmp
sbb
jecxz
pop
add
sar
sub
stc
add
or
push
std
or
jl
dec
js
push
mov
push
add
in
xor
cmp
push
int3
ret
cltd
or
jb
push
clc
or
scas
pop
aas
cmp
sub
inc
popa
aas
icebp
hlt
mov
xlat
xchg
das
jne
pop
stos
loope
fidivrs
push
push
icebp
in
sub
push
andl
aam
in
dec
roll
cli
int
and
pop
sarl
dec
ljmp
jo
fists
sbb
icebp
fdivr
fdivr
adc
jge
add
je
sub
cltd
sub
cli
push
sbb
mov
aaa
cmp
psllq
push
and
add
dec
pop
fs
pop
and
sub
push
cmpsb
fdiv
int3
lock
movsb
sbb
add
inc
aad
sbb
push
add
sbb
adc
push
xchg
cmp
cwtl
repz
dec
dec
enter
mov
sub
js
sbb
sbb
adc
clc
js
call
pop
sub
inc
test
xor
jp
sub
data16
lods
mov
prefetchwt1
pop
jo
shll
add
dec
sbb
push
sbb
leave
insb
pop
push
sahf
jmp
cmp
test
popa
aaa
dec
cmpsl
and
hlt
sbb
iret
pop
mov
and
arpl
and
and
mov
inc
pop
sti
daa
movsl
test
mov
int3
clc
fcom
stos
jg
cwtl
or
lods
cli
cli
cs
fstps
out
push
pop
xchg
loopne
in
nop
frstpm(287
fdivr
divb
sub
adc
mov
adc
fstl
cmp
jmp
push
ret
xchg
mov
mov
movsb
insb
out
icebp
enter
sub
icebp
in
add
push
out
sar
push
divl
mov
adc
or
pop
or
inc
cwtl
xchg
and
push
cld
insb
es
mov
repz
cmpsl
xor
js
xor
mov
lret
iret
mov
clc
xor
and
aad
movsb
in
dec
es
addr16
out
in
adc
xchg
or
xchg
mov
scas
es
sbb
enter
fimuls
lock
mov
sub
movsb
add
adc
scas
fs
cld
mov
in
cld
and
daa
push
xchg
and
add
repz
sbb
pop
adc
adc
add
mov
mov
pop
nop
in
stos
orb
adc
cs
pushf
mov
or
add
leave
call
and
nop
and
inc
daa
movsb
or
ror
push
fs
out
push
dec
movsb
vmovsd
push
int
es
adc
sbb
xor
iret
aaa
pusha
popa
std
sub
cmp
outsb
pop
repz
fadd
or
outsb
or
cmp
mov
addr16
and
cli
or
cltd
xchg
loopne
or
movsb
bswap
sbb
jnp
mov
add
or
ret
push
scas
and
daa
push
daa
push
insl
xchg
cli
clc
xor
inc
jbe
pop
lea
sbb
mov
mov
mov
adc
outsb
setp
icebp
sbb
or
out
pop
jge
or
xor
sbb
or
mov
push
jl
pop
dec
jo
cmp
sbb
icebp
sbb
push
dec
push
add
xor
movb
add
arpl
fs
ds
or
addr16
out
shlb
or
and
xor
cmpsl
das
call
push
fdivr
hlt
fcmovnbe
or
dec
daa
and
addr16
addr16
dec
inc
sub
int3
sub
jmp
xor
stos
add
and
jg
repz
outsl
das
rcll
test
mov
pop
pop
mov
and
add
and
mov
cwtl
int3
add
xchg
mov
sbb
insb
fnsave
js
hlt
sub
sub
cld
sbb
movsl
sbb
dec
and
stos
repz
lret
enter
push
sbb
sbb
inc
xchg
mov
scas
jecxz
aaa
jns,pn
addr16
in
out
and
sub
cli
sbb
movsl
or
lret
out
mul
roll
sbb
out
push
sbb
add
push
lahf
sbb
enter
and
cld
sbb
cli
and
push
inc
add
imul
scas
cld
or
or
in
lret
sbb
ucomiss
and
fdiv
adc
pushf
add
adc
sub
mov
and
scas
dec
clc
or
gs
jae
int3
adc
xchg
jo
sub
lock
pop
mov
sbb
adc
and
mov
or
or
adc
or
cmp
js
pusha
jne
fadds
mov
and
or
sbb
push
inc
push
cld
and
xchg
pushf
push
sahf
clc
add
out
sbb
add
popf
mov
and
and
mov
fldt
stos
sti
imul
nop
addr16
test
enter
repnz
jns
sub
push
add
lock
adc
in
sar
push
cs
add
mov
sti
movsl
repnz
sbb
pop
roll
push
push
pusha
xchg
and
mov
jg
jp
ret
or
and
sub
cmp
and
imul
add
push
std
mov
ljmp
pop
sbb
int
lcall
sbb
mov
and
sti
sub
inc
mov
fmull
vmovhps
and
sub
and
ss
pop
inc
push
add
jo
mov
popl
mov
jle
or
fisubrs
femms
loope
in
sbb
xchg
fstl
sub
xor
mov
jmp
jle
repz
out
and
adc
bound
sub
xchg
lahf
scas
test
scas
sbb
adc
pop
xor
or
dec
push
jno
jl
pop
das
repnz
add
repnz
test
sahf
mov
xor
pop
loopne
bnd
fcomps
mov
or
dec
jmp
add
sub
cmc
add
imull
add
xchg
and
mov
call
mov
jne
sbb
pop
jge
mov
popa
ljmp
and
out
test
push
fnsave
bound
pop
mov
movb
or
hlt
rorl
sbb
sbb
pushl
add
jmp
push
shr
dec
lods
icebp
add
jns
cmpsl
jo
out
and
out
jecxz
adc
sub
adc
or
addl
mov
hlt
ds
sbb
je
outsb
pop
adc
popa
sub
xchg
lret
mov
rcrb
push
sbb
shl
movsb
ds
sub
or
or
push
enter
test
aas
fmuls
cmp
iret
jle
pop
and
and
in
or
push
loope
sbb
xchg
subl
mov
clc
push
jecxz
iret
fs
ljmp
mov
or
int
adc
stc
or
pop
ja
mov
sbb
js
mov
incl
xchg
push
stos
insl
imul
xlat
xchg
mov
or
mov
jo
mov
mov
dec
sbbb
in
hlt
fmulp
sbb
and
mov
punpcklwd
mov
loopne
and
sbb
add
dec
ljmp
repnz
push
push
popa
and
mov
sub
lock
lock
scas
and
gs
jae
cmpsl
scas
in
mov
xchg
add
xchg
adc
and
mov
cmc
decl
dec
jo
dec
loope
mov
push
and
push
xor
prefetcht2
or
in
ljmp
fsubrl
sub
insl
adcl
sub
cmc
test
in
adc
pop
dec
push
adc
iretw
cmp
push
mov
ss
call
and
pop
shl
add
xchg
jmp
sbb
inc
sbb
mov
jmp
jecxz
lods
mov
arpl
jne
fmull
add
dec
mov
in
or
add
subl
daa
sub
lret
and
nop
sti
pop
mov
xor
daa
aad
sub
sbb
pop
pop
xor
dec
pop
adc
jb
add
sbb
or
sbb
mov
hlt
push
decb
js
sub
enter
outsb
fdivr
mov
ljmp
xor
and
ret
pushf
push
insl
add
scas
push
pop
xor
rorl
out
out
sub
shll
cld
and
in
sbb
jl
cld
adc
mov
sbb
cli
test
pop
jl
aad
shll
aas
cmc
xchg
and
or
jns
mov
testl
daa
dec
mov
pop
xchg
xor
repz
enter
dec
inc
out
and
imul
add
out
xor
add
inc
daa
bt
or
sub
push
lret
or
adc
stos
lea
cli
hlt
sbb
lret
dec
insl
imul
add
and
mov
fstps
push
dec
push
shrl
sbb
cs
psrlq
adcb
cltd
icebp
add
xchg
lea
cmpsl
xchg
es
pop
adc
xchg
js
xchg
and
out
imul
mov
jae
xor
icebp
push
jae
out
std
and
sub
push
lods
and
shrb
ds
and
out
bound
xchg
dec
push
xchg
or
cmp
lea
sub
outsb
sub
pavgw
push
xor
aam
adcb
pop
jecxz
cmp
or
subb
adc
neg
sub
dec
jo
mov
pop
cwtl
addr16
enter
xchg
add
jbe
push
inc
sub
mov
adc
inc
out
or
das
test
inc
dec
dec
cli
clc
bound
fcoml
and
nop
mov
pop
or
lcall
call
aad
push
mov
and
fs
mov
jge
dec
popl
cmp
sbb
aam
scas
and
adc
xchg
enter
in
dec
je
cld
rcrb
hlt
mov
mov
arpl
and
into
cwtl
xor
mov
call
xor
loope
fwait
and
inc
sti
pcmpgtb
stos
enter
mov
and
movsb
cmp
add
and
jo
or
push
insl
add
and
ljmp
mov
movsb
xchg
cld
or
icebp
scas
lahf
cltd
int
and
clc
outsl
add
pop
jne
cmpsl
imul
cmpsl
mov
repnz
fiadds
or
jge
mov
in
xor
pop
push
jp
dec
push
mov
mov
test
adc
jne
in
cmp
jle
movsb
pop
mov
mov
sbb
cmpsb
sbb
mov
or
cmp
rclb
inc
sbb
or
cmp
cwtl
test
sub
jae
add
xor
lods
cld
cld
sbb
or
sarl
cld
and
sbb
or
aaa
push
jg
popf
cs
add
pop
add
mov
je
sti
add
mov
addr16
xchg
pop
mov
add
div
pop
ljmp
dec
mov
jo
mov
push
out
or
push
add
xchg
add
adc
push
adc
hlt
or
sbb
xor
sti
lods
xchg
mov
stos
mov
or
sbb
out
gs
cmp
cmp
ss
in
fs
inc
and
xchg
sbb
add
sub
and
leave
lret
and
add
nop
xchg
dec
fcomps
add
ret
cmp
jle
std
xchg
cwtl
gs
popf
and
nop
mov
das
call
sbb
fmuls
stos
movsl
loope
sbb
js
arpl
pop
lea
mov
ljmp
loopne
das
and
enter
ja
setl
inc
test
add
in
add
jae
add
into
push
mov
jg
idivl
or
roll
mov
ljmp
adc
or
cmpsl
cmpsl
mov
movaps
jmp
movsl
xchg
cmpsl
jmp
outsb
cs
les
adc
sub
ss
pop
sub
mov
inc
dec
mov
daa
addr16
cmc
sub
and
sub
jge
and
xchg
bound
stc
adc
pop
or
mov
jg
push
mov
orl
and
pushf
pop
arpl
mov
cmp
movsl
mov
add
scas
cli
mov
adc
loopne
loop
sbb
mov
or
push
sbb
repnz
and
pop
outsb
icebp
add
and
shrl
repz
loope
xor
adc
or
sahf
test
push
ljmp
loopne
mov
adc
in
mov
jl
sti
int3
push
jmp
mov
mov
cmp
sbb
pop
push
mov
aas
nop
lock
sbb
adc
into
daa
nop
nop
test
in
and
add
cltd
dec
add
enter
out
call
push
push
jle
lock
pop
roll
mov
in
sbb
dec
sub
push
andps
mov
dec
daa
and
bnd
inc
pushf
xor
push
lahf
jns
cld
jmp
dec
jae
add
jge
out
xor
mov
hlt
icebp
das
pop
insl
xor
mov
sarb
mov
and
cmp
call
push
pop
pop
sub
mov
jl
gs
or
mov
mov
sub
fsubl
cmp
add
sub
fisttpl
pop
cmp
push
arpl
mov
push
push
loop
and
push
sbb
mov
and
scas
or
scas
mov
inc
mov
cld
adc
les
sub
out
mov
adc
push
jne
lock
sbb
dec
mov
negb
movsb
fists
or
or
mov
iret
or
movl
sbb
cs
jbe
and
mov
sti
sbb
lret
add
sbb
or
push
fs
push
clc
adc
cmpsb
adc
or
jae
sarb
lock
pop
mov
mov
mov
cmp
loopne
aam
mov
insb
testb
adc
lods
mov
add
ljmp
inc
xchg
mov
xor
in
lret
push
or
mov
inc
stc
aad
adc
mov
bound
loopne
lret
fcmovu
nop
leave
or
fwait
je
and
ret
mov
addr16
push
std
or
xchg
cli
add
addr16
jnp
js
add
inc
hlt
out
sbb
dec
and
mov
cmpsl
scas
add
xchg
popf
jo
sti
push
sub
sbb
push
ljmp
and
pop
fbstp
xor
add
inc
adc
out
dec
and
std
stos
movsb
daa
das
xor
cli
adc
mov
orb
arpl
addb
sbb
mul
cmp
and
dec
fldenv
or
jmp
push
push
and
sarl
pop
aad
insl
xchg
repz
sti
test
mov
es
xor
sub
and
cmpsl
lods
push
enter
rorl
dec
daa
and
mov
sub
mov
sub
inc
and
stos
pop
add
add
fs
add
js
imulb
push
adc
lock
cwtl
pop
test
sbb
pop
xor
das
sub
and
and
mov
sub
xchg
push
xchg
push
mov
fs
and
hlt
push
cmp
add
ljmp
adc
pop
lds
jecxz
sbb
lock
mov
pop
and
fsubs
cmc
mov
clc
add
or
sub
out
and
fsubr
xor
adc
add
sbb
or
xor
loope
cmpxchg8b
mov
xor
adc
rclb
dec
sbb
inc
push
mov
popf
push
dec
jbe
sbb
and
call
xchg
dec
daa
dec
imul
dec
out
mov
movsb
daa
scas
pop
and
add
aam
nop
push
call
leave
jle
cli
pop
jo
mov
insb
out
insl
je
shrb
sub
mov
push
add
jo
hlt
popa
dec
inc
xchg
sbb
adc
test
or
pop
mov
int
fmuls
cmpl
and
ret
or
pop
sub
lock
jns
cmp
jno
imul
jp
adc
mov
dec
mov
aam
insl
insl
fcomps
sahf
sub
sbb
sub
jmp
xchg
lret
sahf
jmp
xor
je
int3
testl
cltd
cmpsb
insb
cli
js
ds
in
pop
out
and
mov
call
add
sub
cld
and
xchg
test
and
movsb
nop
sti
xor
xchg
stos
and
fwait
inc
cmc
sbb
xchg
adc
stos
pop
jmp
xor
sbb
enter
add
push
dec
or
out
or
mov
adc
inc
push
ret
lods
enter
mov
ljmp
sbb
mov
and
and
les
mov
adc
aam
or
or
imul
and
cwtl
ss
lret
fldt
in
mov
fiaddl
and
cld
sub
nop
daa
arpl
and
jb
stc
sub
fidivrl
rcll
adc
fisttps
ja
push
push
push
mov
jecxz
xor
daa
pop
aam
out
jo
pop
adc
jmp
dec
mov
adc
add
rcrb
out
div
push
sbb
sub
and
sti
or
pop
fistl
inc
or
nop
lods
out
mov
and
push
fs
insb
andb
sbb
in
push
or
and
popf
and
fsubr
push
lods
test
push
bound
cmc
cltd
and
inc
and
or
ja
outsb
mov
je
or
loopne
mov
pop
mov
or
sti
push
stos
pop
and
das
mov
int
add
div
leave
xchg
sarb
mov
pop
cwtl
pop
js
leave
xorb
and
mov
or
jg
popa
inc
jle
push
push
ds
rcr
sbb
es
mov
mov
add
sbb
pavgw
mov
fistps
push
lahf
jb
enter
lret
stos
mov
push
punpcklwd
cmp
es
xchg
jecxz
lods
cmp
lea
call
ja
or
jae
sbb
cmp
call
sti
sub
into
fstpt
into
or
push
out
sbb
add
out
mov
clc
cwtl
adc
pop
cmc
repz
ljmp
ja
repz
in
mov
jmp
rcr
aaa
sub
cmc
movsb
and
fwait
push
push
movsb
add
and
mov
sub
repnz
cwtl
fs
cmpsl
cld
cmpsl
shrl
daa
pop
mov
xchg
test
imul
jnp
or
and
out
push
xor
sbb
jnp
shlb
push
fidivl
aaa
fisttpl
jmp
lods
or
or
repz
xchg
sti
cld
push
and
add
repz
jl
mov
pop
and
cmp
sub
stc
and
ljmp
sbb
push
out
xor
es
push
mov
xchg
cmp
mov
sub
in
nop
hlt
inc
test
int3
fcomps
mov
lock
sti
dec
daa
cld
sub
inc
out
add
mov
add
pop
add
int3
cmc
nop
out
push
or
sub
adc
daa
daa
cmp
jp
xchg
add
sbb
mov
fimuls
push
xor
add
pop
mov
sub
xchg
jl
ret
and
imul
aam
lea
or
add
inc
mov
and
mul
xchg
mov
stos
addr16
jmp
mov
dec
imul
rcl
lcall
or
or
xor
add
and
jno
or
inc
dec
js
lock
stos
incb
jecxz
aad
push
cmpsl
push
aas
mov
sbb
ret
push
and
xchg
sbb
test
test
mov
notl
pop
push
call
aad
loop
adc
and
dec
notl
add
push
lock
mov
mulb
and
push
mov
stos
outsb
pop
add
or
inc
or
pop
and
arpl
and
jo
arpl
jbe
fst
inc
cli
pop
add
inc
inc
mov
or
pop
cmp
xchg
pop
sub
jb
mov
jbe
mov
adc
and
adcb
cld
push
or
cltd
dec
or
push
out
mov
sbb
jmp
ljmp
cltd
cwtl
stos
movsb
call
lea
sub
sar
std
mov
sub
repnz
hlt
push
sub
push
sbb
cmp
sbb
pop
nop
std
test
dec
cmp
test
ret
dec
and
test
push
or
and
jmp
mov
pushf
and
sbb
sbb
cmp
sbb
cmp
hlt
imulb
int3
jnp
out
or
jge
adc
and
xchg
xchg
clc
and
fmull
push
scas
sbb
popa
rcl
testl
add
pop
cmpsb
sub
adc
mov
insb
cli
mov
jno
repz
cmpsl
xchg
std
mov
and
pop
add
pop
icebp
jg
shl
inc
xchg
ja
mov
aaa
ret
daa
in
lret
data16
xchg
shr
sbb
sar
adc
xor
add
jnp
or
imulb
mov
pop
and
cmpsb
sub
movsb
sbb
jmp
scas
sbb
enter
insb
test
xorl
mov
sub
mov
and
add
cmpsl
cltd
jae
xor
mov
xor
icebp
push
mov
out
out
stc
cli
sbb
xchg
xchg
sbb
add
hlt
or
push
cmp
ljmp
fadd
dec
shufps
sti
push
dec
outsb
jo
dec
xchg
negl
popf
pop
sbb
and
aas
dec
xchg
sbb
rclb
adc
push
add
frstor
icebp
lock
mov
enter
data16
sar
aas
mov
lret
nop
xchg
or
dec
mov
dec
cmpsl
and
sbb
cmp
xchg
jp
adc
dec
pop
dec
and
lret
enter
mov
pop
cli
mov
mov
xor
cld
aad
and
and
adc
sbb
mov
cmp
cli
adc
push
push
mov
adc
inc
xchg
or
sar
cmpb
loop
add
inc
add
lock
addl
les
inc
and
shlb
xchg
sub
lods
faddl
sbb
pop
es
pop
clc
add
sbb
sbb
insb
and
loop
sbb
push
loope
int3
sub
push
out
outsb
cmpsl
or
jl
mov
pop
int3
sub
cltd
lret
push
fwait
scas
cmpsl
daa
mov
dec
xlat
sub
sbb
mov
lcall
mov
adc
push
ret
adc
inc
fs
in
popa
scas
cmc
pop
adc
subl
or
lods
int3
aad
and
sbb
aas
jbe
cltd
int3
and
push
jecxz
xor
add
aad
xchg
repnz
sub
xlat
sbb
nop
lcall
lds
adc
mov
fstl
jmp
loope
test
daa
out
fiaddl
scas
or
sub
pop
call
jp
xorb
lock
jmp
adc
mov
fdiv
xchg
sbb
dec
pop
and
sub
icebp
mov
cwtl
sbb
roll
cltd
sbb
adc
imul
and
lods
cmp
sbb
pop
mov
add
faddl
lock
notb
xor
mul
or
and
or
pusha
sub
mov
push
inc
jbe
sub
nop
pop
gs
cltd
push
cwtl
not
mov
xchg
add
add
inc
out
lock
sbb
js
sbb
xor
repz
xchg
and
lock
adc
xchg
cmpsl
dec
lret
and
sbb
pop
hlt
pop
and
mov
sbb
mov
add
lock
cmp
cmp
dec
aam
adc
sbb
loop
jge
or
mull
inc
shl
sub
jnp
lock
sbb
les
cld
int3
cwtl
inc
jmp
cmp
es
push
movsb
repnz
and
sbb
push
xchg
mov
ljmp
adc
push
jnp
add
in
push
mov
add
cmpsb
enter
pop
mov
in
pop
xchg
mov
dec
in
xor
jp
shr
sub
stc
xor
je
mov
sbb
aam
lcall
es
sbb
and
or
jl
adc
add
mov
adc
ljmp
dec
cmp
xor
adc
mov
mov
or
push
mov
jmp
mov
decl
adc
adc
movsb
roll
repz
add
adc
rclb
shll
inc
adc
stc
mov
and
lods
cmp
nop
xchg
test
adc
sub
add
jmp
shr
jmp
test
popw
push
dec
push
and
mov
push
loopne
inc
jmp
leave
cmpsl
cld
sbb
negb
mov
sub
and
inc
stos
mov
in
adcl
and
push
jnp
xchg
mov
fadds
aam
insl
jge
pop
sti
lret
mov
jmp
loop
and
or
in
arpl
and
add
outsl
push
sbb
sbb
insl
pop
sbb
jnp
mov
mov
daa
mov
push
sub
and
lahf
stos
or
mov
jne
pop
hlt
fs
sub
sub
out
lcall
mov
sahf
int3
cmp
outsl
cld
lock
or
fdivrl
rolb
stos
jmp
popa
mov
xchg
fwait
cld
test
sbb
sbb
out
negl
mulb
mull
es
xlat
cmp
fildll
jecxz
sub
daa
decb
bound
inc
mov
sbb
or
mov
add
paddd
mov
cmpsl
jae
inc
add
lods
aas
and
cltd
sbb
pop
call
sbb
maxps
pop
aas
mov
push
sbb
sub
xchg
out
sbb
insl
sahf
sti
sub
cmpsb
daa
popf
cld
loop
mov
mov
call
sub
cmp
xchg
and
scas
add
or
sbb
add
jne
add
inc
adc
cld
flds
imul
pop
ds
subb
sbb
pop
das
push
je
dec
sub
mov
xchg
mov
clc
cli
push
out
test
mov
pop
sub
mov
and
cmp
lret
jmp
sbb
or
cwtl
mov
outsl
daa
movsb
jge
push
imul
dec
pop
and
test
scas
leave
jl
sub
cli
daa
add
mov
movsl
inc
add
inc
popf
push
jb
push
push
and
sahf
mov
mov
stc
dec
das
pop
or
cld
push
jg
cld
mov
movsl
push
shlb
jl
sub
sbb
daa
xor
dec
and
or
adc
sub
movsb
inc
mov
sbb
lock
hlt
or
std
es
stos
stos
cmp
or
enter
dec
jl
push
lea
cli
outsb
sub
fcoms
jle
push
jecxz
cmp
and
test
push
sbb
testl
push
cmpsl
inc
cmp
arpl
cmp
pop
xchg
movzbl
aas
enter
sahf
fsubr
in
xor
sar
stos
enter
adc
add
push
cld
sbb
mov
add
mov
pop
push
mov
nop
sub
imul
repz
sub
mov
or
testb
mov
std
cld
repnz
and
test
sub
mov
inc
mov
das
adc
adc
cmp
repnz
xchg
popa
ja
fldt
or
inc
and
xor
nop
jmp
out
sti
daa
sarl
out
sbb
loopne
inc
xor
imul
pop
lods
or
fmul
daa
lcall
mov
dec
or
adc
and
cmp
push
dec
adc
mov
andb
arpl
decl
repz
push
dec
and
cmc
fs
dec
mov
xor
adc
sahf
test
dec
push
push
xor
add
mov
and
orb
fld
cmp
in
pop
mov
sub
out
adc
repnz
in
and
mov
and
shl
adc
enter
call
and
pop
std
sti
je
xchg
cli
addr16
xor
rcrl
jmp
cld
and
test
jbe
push
or
mov
xchg
rcl
adc
cli
cmpsb
pop
inc
push
adc
out
or
push
push
mov
inc
rolb
call
lea
xchg
mov
mov
sub
movsb
xchg
or
loopne
push
sbb
in
or
and
or
and
fs
cmpsl
aam
sub
dec
in
pop
lret
mov
or
enter
dec
fdiv
jecxz
push
out
sub
jle
je
je
imul
or
dec
and
ss
mov
hlt
inc
out
loope
cmpsb
clc
sbb
or
and
sbb
sub
je
lret
in
mov
stos
pop
int3
adc
scas
or
lods
pop
clc
add
sbb
adc
out
mov
mov
negb
xchg
mov
mov
mov
and
dec
cli
or
icebp
and
enter
repz
imulb
xor
pop
push
pop
adc
xchg
push
jae
pop
ss
and
cmp
mov
sub
pop
icebp
sbb
or
loopne
xor
and
sbb
jmp
ds
add
stc
std
push
lret
outsb
mov
cmpsb
aaa
sbb
pop
jecxz
jmp
push
paddb
in
or
lea
js
idivb
fnsave
and
push
popa
or
dec
xor
cld
and
stos
mov
ljmp
add
jo
inc
cmp
fs
stc
fcoms
xchg
mov
add
jnp
hlt
sahf
roll
sub
pop
add
inc
rclb
bound
adc
xor
sbb
pop
mov
push
test
mov
or
or
sbb
mov
cld
rcll
mov
loopne
sbb
arpl
or
aas
test
dec
outsl
xlat
mov
inc
mov
popa
sub
testb
cmpsl
and
movsb
ss
sub
xchg
sbb
fiadds
push
add
xor
sbb
xchg
cmp
and
push
or
int
and
loopne
add
testb
push
fcoms
ss
add
sbb
enter
out
lock
jno
bnd
dec
dec
insl
clc
cmc
icebp
push
adc
cwtl
push
xor
fists
lods
icebp
sub
js
sahf
dec
dec
mov
gs
mov
push
mov
jb
and
cmpsb
and
sbb
xor
into
cmc
ljmp
arpl
incb
add
pop
idiv
enter
mov
sub
add
jmp
xchg
je
ljmp
mov
sbb
dec
and
hlt
or
sbb
xor
cli
pop
sbb
lock
and
jae
sub
fld
sbb
xchg
and
add
fisubrl
pop
sub
and
xchg
sub
xchg
mov
mov
adc
or
mov
mov
sbb
xor
adc
sti
mov
icebp
cmpsl
push
cmp
add
lea
enter
mov
cmpsl
pop
lcall
in
and
sub
add
pop
das
jnp
pop
fiaddl
adc
xor
push
sti
addr16
clc
sbb
es
inc
mov
js
adc
cmovnp
xchg
repz
shll
je
pop
mov
cmpsl
xchg
or
jp
xchg
adc
cltd
push
or
cmp
sbb
fcoms
push
setbe
cmp
dec
pop
not
imul
inc
imul
lea
sbb
fdivrp
hlt
fwait
enter
dec
or
test
push
xchg
dec
notb
mov
add
sahf
or
jnp
shrb
leave
cmc
inc
scas
iret
daa
pop
pop
cwtl
repz
sub
sub
fmuls
sbb
pop
jb
cmpsl
mov
cmp
sbb
insb
mov
stos
add
mov
cmpsl
sub
xchg
sbb
dec
lcall
mov
test
mov
shrb
cltd
inc
dec
mov
div
out
inc
sbb
add
xor
ds
add
fsubs
and
arpl
jp
sub
push
mov
pop
les
add
add
push
loope
je
sub
das
mov
fwait
and
sete
insl
and
and
or
sbb
or
cwtl
inc
jecxz
xor
xchg
sbb
aas
pop
add
inc
arpl
or
xchg
push
cltd
jg
adc
pop
push
sar
call
incl
sbb
cmp
xchg
mov
cwtl
or
lods
rorl
dec
sub
sbb
cmp
sub
nop
mov
imul
std
ret
hlt
inc
push
test
sub
pop
icebp
sub
leave
jp
jmp
xchg
or
shll
dec
ffree
adc
out
movsb
aam
inc
inc
add
rcll
lods
in
call
mov
daa
loope
out
and
lret
addr16
movsb
scas
jle
out
adcb
or
jle
adc
or
xor
rclb
in
imul
mov
push
add
lcall
xchg
ds
or
ljmp
lock
sub
and
fdiv
jae
or
mov
inc
inc
sub
jp
dec
and
push
into
and
out
imul
cmpsb
jnp
dec
adc
test
arpl
add
gs
or
jg
and
or
and
fcom
in
sub
cmpsl
iret
je
mov
pop
mov
mov
sub
inc
daa
add
add
pop
rcll
bound
enter
movsb
and
push
enter
jmp
imulb
mov
cld
inc
jge
push
aam
xchg
repnz
add
adc
je
aad
add
pop
insl
pop
les
rcrb
ljmp
popa
xchg
dec
adc
dec
push
arpl
cld
nop
add
clc
ret
sub
mov
sbb
and
loope
movsl
xchg
sbb
add
in
fstl
sti
js
jle
mov
adc
cli
jle
xchg
cmc
popa
fnsave
lahf
or
and
mov
or
sbb
cmp
pop
notl
jb
xor
test
gs
add
add
sar
ret
adc
push
sub
and
xchg
pop
pop
and
sbb
and
outsl
jne
adc
notb
add
mov
cmc
js
mov
push
movsb
or
jmp
xchg
icebp
xor
sub
xchg
mov
gs
push
sahf
sub
fstl
mov
icebp
jnp
pop
and
andb
rclb
sti
mov
xor
push
ret
mov
adc
mov
cli
jmp
cmp
mov
pop
mov
sub
jle
cltd
call
or
jg
ljmp
adc
jp
iret
sti
or
loope
roll
push
mov
pop
add
xor
cmp
jnp
sub
pop
dec
dec
lock
lcall
sbb
push
in
outsl
sti
test
aam
sub
jmp
inc
and
push
mov
push
cmpsl
add
push
loope
ljmp
xchg
bnd
sti
sub
cmpsl
jno
cmp
pop
push
dec
adc
notl
cld
arpl
dec
dec
push
andl
pop
add
aam
lock
push
cmpsl
sbb
mov
push
sub
push
and
sub
or
xor
push
sets
addr16
test
enter
xchg
and
cld
and
xor
or
push
add
ljmp
pop
cmpsl
and
sbb
fcmovnbe
jno
mov
movsl
lods
xchg
adc
orl
add
aas
testl
sbb
xor
mov
call
loopne
and
out
inc
pop
test
das
aam
fcom
or
insb
and
push
pop
pop
pop
adc
psrad
cs
sti
pop
nop
daa
fs
fildl
pop
or
lret
mov
jl
mov
push
pop
inc
test
dec
adc
lcall
repz
out
sbb
lahf
lcall
imul
dec
ret
jns
or
cld
pop
cltd
or
pop
xchg
shl
sbb
add
out
jns
stc
movsb
add
adc
add
ret
sbb
pop
mov
xor
xchg
test
out
add
mov
notl
sbb
inc
aaa
push
xchg
mov
cli
pop
mov
sbb
sbb
data16
dec
cli
repnz
and
rolb
ljmp
outsb
add
add
fsubrp
jns
loope
push
in
sbb
imul
in
and
jl
adc
add
add
imul
cmc
push
loope
xor
add
out
enter
sbb
add
int
addr16
xchg
mov
mov
daa
out
pop
cltd
mov
lea
lds
xchg
add
sbb
add
add
and
add
pop
jge
fsubr
xchg
pop
dec
cld
fdivr
adc
lock
xchg
daa
jae
sbb
fisubrl
cs
and
mov
or
bound
rolb
cltd
adc
sti
clc
scas
sbb
and
mov
jbe
or
mov
and
adc
pop
gs
xor
inc
icebp
and
test
mov
hlt
std
ja
stos
out
pusha
fcomi
cmpsl
push
repnz
or
hlt
cs
pop
std
out
cmc
or
mov
pop
and
inc
cmp
daa
push
insl
or
iret
lret
adc
push
sub
jl
mov
and
cs
mov
pusha
push
shrb
or
pusha
imul
rcrb
lret
sub
stc
jp
addl
lock
cmpsb
lock
mov
and
push
and
adc
out
in
cmp
pop
pop
add
imul
popf
test
xchg
push
jbe
jnp
and
mov
lret
add
add
push
mov
xchg
cltd
jne
stc
aas
mov
sub
sbb
cmpsl
inc
ficoml
daa
push
inc
or
mov
mov
xchg
push
xchg
inc
sbb
pop
xor
mov
movsl
out
mov
push
pop
inc
movsb
scas
icebp
repnz
push
mov
fucomp
movsb
imul
dec
add
push
xchg
add
popa
packuswb
hlt
cmp
adc
mov
test
xchg
repnz
filds
notb
cmp
mov
cmc
sub
movsb
sbb
and
arpl
mull
repnz
xchg
scas
and
or
mov
cmc
ljmp
or
out
push
and
cmp
in
test
in
sub
movsl
mov
out
icebp
lcall
jmp
or
negb
cmpsl
sub
sti
stos
sub
inc
jmp
fs
mov
mov
addr16
les
dec
mov
sub
iret
mov
xor
sbb
push
ljmp
enter
lahf
arpl
adc
outsl
test
sbb
cld
in
repnz
push
rcl
out
sbb
out
adc
adc
mov
hlt
ja
div
dec
test
dec
xchg
movsl
mov
cs
pop
imul
daa
cmp
inc
add
imull
jl
cmc
or
or
lea
nop
mov
testl
cld
add
subl
mov
add
clc
or
and
or
mov
xchg
hlt
or
imul
aas
xor
jmp
negl
dec
or
lock
arpl
adc
popf
mov
pop
repz
push
push
nop
cld
and
dec
cld
push
sbb
dec
mov
addr16
add
push
movsl
xor
sub
cmpsb
orl
pusha
fs
bound
sbb
mov
sub
jmp
mov
cltd
xor
and
mov
xchg
std
sbb
add
nop
mov
adc
cmp
adc
sbb
xchg
cli
arpl
daa
xchg
lcall
div
stos
imul
cli
push
sub
push
or
or
aaa
enter
mov
mov
fcmovu
notl
mov
subl
add
lahf
jl
mov
dec
sar
pop
xchg
nop
scas
punpckhbw
daa
push
rcrb
add
and
sbb
xlat
xchg
in
sti
lods
jle
or
rolb
mov
xor
mov
fwait
pop
sti
daa
push
xor
lret
sub
loope
outsl
iret
add
mov
sub
sbb
pop
fldcw
dec
leave
mov
or
outsb
repz
xchg
inc
fstl
sub
xchg
jo
test
push
or
and
or
mov
pop
shlb
fisubs
jnp
or
jp
and
xchg
push
sbb
movsb
sub
sub
mov
and
daa
sub
je
gs
into
mov
lea
and
nop
or
and
mov
sbb
fwait
sbb
inc
repz
pop
outsb
jl
js
mov
loopne
gs
xchg
mov
mov
loopne
or
and
mov
movsl
sub
sub
xor
jmp
out
inc
cmp
stc
loope
daa
and
lds
jbe
in
sub
and
cmp
movsb
pop
mov
arpl
fmul
pop
ret
jb
icebp
sub
pop
stc
and
imul
dec
inc
or
ja
inc
push
dec
es
div
xchg
jp
stc
adc
dec
ja
sub
sbb
push
add
lock
daa
outsb
and
cld
out
add
adc
outsb
stc
mov
add
sbb
stos
inc
adc
aas
xor
cli
mov
push
das
fsubrs
and
cmp
incl
call
sub
loope
mov
push
or
and
cli
add
dec
jmp
int3
daa
rcl
outsb
xchg
pop
addb
out
xchg
sbb
mov
and
pop
jg
test
xchg
fcoms
data16
fdivr
push
stos
subb
mov
addl
out
int
sub
shlb
nop
dec
sub
push
cmc
sbb
push
imul
add
jne
lods
jmp
and
xor
xchg
adc
lret
out
push
test
adc
mov
fcompl
and
pop
and
stos
add
xchg
and
imul
std
in
enter
out
imul
jge
sbb
rolb
add
push
test
dec
lods
pop
jmp
lret
mov
adc
nop
pushf
test
and
mov
or
daa
shrb
cld
aad
add
mov
xor
std
or
cmp
dec
adc
lods
sub
xlat
imul
arpl
rorb
pop
arpl
or
fwait
insl
loopne
pop
js
out
arpl
adc
sub
adc
or
cmp
sbb
sti
lock
rol
or
or
decl
mov
popa
shll
mov
imul
es
ljmp
mov
push
cmp
sbb
mov
and
pop
and
push
lret
lret
or
jno
and
sti
add
int
sub
loop
and
push
and
nop
ret
sbb
negb
and
and
mov
imul
xchg
cld
mov
out
jl
sbb
pop
or
jbe
outsl
nop
sbb
adc
test
mov
lcall
jmp
push
call
jno
pop
ja
sbb
scas
or
aam
xchg
mov
adc
jle
test
std
test
stos
stc
sbb
xor
movsb
les
sub
mov
pop
push
pop
sbb
sbb
pop
mov
cmp
enter
pop
lods
or
or
enter
or
test
cld
and
push
sbb
rolb
jne
repz
cmc
fsubl
rorl
adcl
dec
mov
xchg
mov
and
test
shlb
adc
pop
sub
push
icebp
mov
rcll
mov
cltd
hlt
add
movsb
sbb
cmpsb
test
lret
or
cltd
jo
movsb
in
push
stos
or
mov
cld
daa
mov
jo
loop
push
bound
add
mov
jmp
xchg
and
push
and
sub
xor
int
and
push
mov
cld
cmc
adc
dec
or
stc
mov
aaa
or
out
push
sbb
pop
rclb
sub
and
and
adc
or
out
outsb
sbb
cld
lods
mov
mov
sbbb
cmc
ljmp
xor
lods
repnz
xchg
fsubr
call
aam
push
or
jp
push
jecxz
jmp
cmp
int3
test
xchg
or
and
pop
popf
lock
jecxz
outsl
es
cltd
nop
ret
lock
pop
sbb
mov
adc
out
ss
scas
stos
orl
xor
sbb
and
adc
mov
and
push
hlt
imul
hlt
jg
dec
dec
jae
div
push
movl
dec
shl
fadds
jnp
sub
int
mov
ljmp
ljmp
insl
sti
sbb
or
loopne
jge
test
adc
jl
js
cmp
jo
aad
out
push
push
cwtl
stc
in
sbb
and
push
fsubrl
cmp
fsubs
inc
frstor
mov
push
mov
fcomip
sub
add
and
scas
pop
into
ret
or
sub
inc
sub
dec
mov
mov
mov
sbb
sbb
push
push
and
and
sub
repz
push
push
push
or
mov
mov
pop
in
cmp
adc
mov
and
push
lahf
cmpsl
or
movsl
imul
lret
sbb
push
inc
and
xlat
cld
shlb
jo
fwait
dec
cmc
das
mov
orl
out
mov
push
dec
popf
inc
cld
cmp
sbb
sbb
adc
inc
lds
and
sbb
leave
repz
mov
ret
xor
add
push
jne
pop
push
dec
push
jg
or
pop
sbb
daa
ljmp
fstps
stos
sbb
cmp
sbb
add
xchg
dec
sub
or
sbb
pop
or
add
push
dec
nop
add
sbb
inc
xchg
push
cwtl
sti
lods
dec
lds
lock
daa
aam
insb
cld
or
sar
popf
push
ret
jbe
or
add
push
mov
rcrb
or
add
mov
cmp
lret
mov
or
pop
dec
fs
dec
call
or
aaa
movsb
imul
cld
sbb
mov
xchg
lds
mov
cld
sub
dec
adc
add
mov
lock
das
xor
lcall
xor
test
add
mov
repnz
pop
and
lea
test
cld
out
push
pop
or
lock
mov
sbb
push
pop
out
prefetch
aam
and
xor
fmuls
inc
pop
jbe
repz
jns
dec
shl
orps
arpl
cmp
aad
daa
push
faddl
cld
out
push
iret
repnz
add
adc
add
and
mov
daa
cmp
imul
xor
out
leave
out
jae
sbb
pop
rorl
or
push
or
pop
inc
mov
lret
pop
xchg
js
and
sub
pop
lret
cwtl
mov
xor
or
movsb
cmp
add
and
push
cmpsl
sub
and
adc
std
inc
or
sbb
cli
repnz
outsb
js
pop
jne
sub
cmp
xor
xor
ljmp
xor
test
bound
add
push
push
or
sub
sub
sbb
daa
imul
outsb
cld
negb
fs
outsl
jge
in
fisubs
and
xchg
mov
cmpsl
jno
add
rolb
lds
and
pop
loope
mov
stos
mov
jecxz
mov
add
push
or
add
mov
test
cld
sub
inc
lock
pop
mov
fwait
cld
sub
or
es
adc
outsl
and
xchg
pop
cld
sbb
out
into
sbb
cli
adc
fidivrs
cmpsl
jg
or
int
in
cmp
inc
or
push
scas
ljmp
push
dec
lock
icebp
pop
add
fimuls
push
adc
sbb
sbb
cwtl
dec
or
test
aad
sbb
enter
repnz
mov
fdivr
fwait
stc
and
push
stos
or
lret
pop
sbb
mov
mov
sub
test
mov
and
xor
dec
fcomp
test
daa
fcompl
stos
sbb
pop
jno
in
ja
add
cmpsl
xchg
jo
cmp
popa
scas
add
fs
into
dec
or
clc
and
jge
mov
push
xchg
and
pusha
mov
cmp
sub
jno
sbb
sub
xchg
push
mov
sbb
sbb
jo
in
xchg
or
or
push
add
sbb
add
jbe
cmp
cmpsb
push
cmp
mov
lcall
and
scas
or
pop
test
lock
mov
and
xchg
push
movsl
iret
inc
xchg
and
mov
sbb
sbb
out
and
or
jne
sub
popw
xchg
jae
pop
and
and
cmp
pop
push
push
hlt
leave
xchg
frndint
pop
imul
xor
add
or
adc
roll
cmp
movsb
cmpsb
outsl
daa
pop
and
mov
sahf
jno
add
mov
aad
or
dec
or
sbb
push
sbb
or
mov
lcall
gs
testb
repnz
aaa
lods
js
mov
ss
mov
cmc
mov
mov
lock
or
loope
movsb
or
lods
daa
inc
sbb
add
pop
mov
imul
mov
push
xor
stc
xchg
dec
repz
inc
negl
jle
and
add
and
std
mov
nop
adc
cltd
jmp
mov
inc
adc
cmova
in
add
xor
sub
out
mov
or
sti
mov
lock
mov
imull
mov
ja
jae
and
xlat
add
mov
shl
dec
iret
add
aas
cmp
lret
es
fxch
mov
push
sbb
icebp
scas
call
popf
sub
out
jl
mov
push
push
iret
cli
adc
outsb
popa
fcmovb
fadds
dec
lea
and
out
aas
movsl
loopne
xchg
out
inc
testb
iret
out
test
daa
push
push
or
sbb
mov
xor
insl
adc
std
test
jb
fistpl
loopne
ficompl
adc
and
jg
or
and
cmp
jb
add
sti
lret
test
cld
lock
push
cwtl
fsqrt
call
sub
sbb
push
mov
into
test
cwtl
cmp
loop
or
sbb
sbb
push
aas
js
dec
mov
nop
popf
push
mov
out
add
lods
xor
add
insl
adc
pop
push
stos
pop
or
cld
enter
or
push
test
fisubrs
push
pop
push
test
or
pop
fs
adc
incl
xor
mov
pop
or
imul
fwait
scas
aad
sbb
in
mov
adc
jne
jl
jnp
xchg
and
xchg
xor
or
adc
aas
push
in
lret
insl
pop
pop
rcrb
sbb
xchg
call
outsb
cmpsl
outsl
sti
cld
jecxz
jecxz
or
cld
or
inc
or
dec
testb
cmp
mov
cmp
pusha
cld
sbb
lahf
add
sbb
aad
or
xor
add
push
test
mov
add
xor
and
sbbl
aas
push
cli
hlt
pushf
cwtl
and
inc
or
push
xchg
add
add
sbb
imul
xchg
push
ljmp
cmp
adc
xchg
cmc
into
sbb
dec
notb
stc
std
and
aad
push
jge
ljmp
sbb
mov
je
movsb
sbb
push
xor
push
and
sub
cmpsl
jmp
pusha
daa
mov
std
fsubrp
adc
stos
dec
dec
adc
or
dec
sub
sbb
loop
decb
push
stos
push
dec
jae
adc
and
shl
push
add
mov
jmp
lock
cmp
sbb
imul
stc
test
nop
adc
repnz
stos
mov
jmp
mov
mov
lds
add
lahf
test
jns
cmc
pop
cltd
adc
in
call
and
pop
enter
enter
cltd
int
adc
arpl
pop
es
adc
mov
xchg
sahf
xchg
test
sbb
add
idivb
test
adc
push
cld
es
fcoml
dec
mov
test
int
adc
cld
add
negb
adc
test
arpl
push
sub
mov
adc
add
leave
inc
push
inc
add
insb
adc
cmp
cmp
add
cmpsl
inc
dec
inc
out
sub
cmp
pop
bound
daa
loope
and
lods
mov
mov
xchg
arpl
add
adc
gs
jg
loope
xor
cld
rcr
outsb
mov
ljmp
icebp
pushf
or
test
in
sub
sbb
loope
test
jns
lods
shrl
xchg
jle
hlt
nop
mov
cld
in
push
push
jle
lcall
pop
mov
and
test
jnp
mov
in
sub
xor
hlt
clc
negl
adc
mov
push
jo
lods
xchg
sbb
sub
and
and
inc
jmp
testl
rorl
sub
sbb
int3
push
xchg
or
fistps
push
sub
nop
stos
psubsw
cld
movsb
mov
adc
sti
rsm
les
sbb
adc
jbe
push
jmp
popa
xor
adc
test
xchg
imul
sbb
mov
cmpsl
clc
repz
xchg
and
xor
or
or
mov
cmp
pavgw
les
andb
mov
jmp
and
out
stc
ljmp
cmpsl
aad
and
fdivr
xor
popf
dec
daa
jmp
fsubr
cmp
or
inc
mov
nop
int3
xchg
xor
in
sub
push
pop
rcrl
lret
push
inc
jmp
and
fs
and
jmp
ret
jp
sub
inc
dec
cltd
mov
shr
ljmp
insl
pop
fisubl
sub
add
repz
int3
ret
rcll
popa
adc
add
mov
mov
data16
or
dec
ja
inc
insl
cmpsl
and
xchg
add
push
sub
or
cli
add
lock
add
lea
aad
lret
push
data16
xlat
jl
js
sti
inc
je
movsl
mov
jecxz
pop
push
add
xchg
aaa
pop
pop
and
and
or
out
ljmp
dec
fmull
nop
in
sub
arpl
cld
add
and
push
or
shlb
and
xchg
jecxz
aaa
sbb
sub
add
add
repz
jmp
cmp
push
inc
sbb
add
daa
push
lods
mov
sarl
and
jne
cld
daa
push
mov
xor
cmc
nop
fwait
or
xchg
aad
cmc
sbb
or
sub
jns
sbb
js
in
pop
fs
pop
jg
imul
xchg
addr16
mov
jmp
repz
out
jns
dec
push
cmpsl
imul
sub
bound
sti
adc
mov
push
dec
adc
push
daa
cmpsb
testb
add
mov
addr16
push
dec
in
add
adc
and
pop
adcl
call
fmuls
aam
and
enter
xchg
and
push
mul
lock
and
xchg
add
punpcklwd
divb
fnstenv
or
and
pop
mov
sub
xor
ljmp
in
rcrb
ljmp
test
fisubrl
push
adc
lock
in
xchg
adc
and
loopne
pmaxsw
cmp
sbb
lods
jmp
in
js
cld
push
pop
pop
nop
mov
cmc
jl
mov
into
sbb
daa
lahf
cwtl
loopne
cld
adc
sub
roll
xor
sbb
dec
scas
cli
hlt
iret
test
cwtl
out
add
jg
xor
lret
aas
mov
xchg
xor
or
mov
and
adc
ret
jmp
pop
pusha
add
pop
or
outsb
adc
pop
dec
sbb
cli
clc
mov
arpl
add
out
push
cmc
cld
sub
add
sbb
shlb
and
sub
test
or
mov
pop
pop
movsb
and
inc
pop
push
cli
sub
cmp
add
out
cli
mov
lea
pop
jge
pop
sub
pop
inc
lret
dec
xchg
lock
gs
lods
popf
ljmp
mov
inc
dec
ja
mov
or
sub
pop
gs
mov
sbb
add
adc
lods
push
rcl
pop
sbb
xchg
pop
outsb
fsubr
or
push
ret
imul
inc
cwtl
rorb
lods
sbb
and
arpl
xor
add
adc
jnp
push
stc
pop
sbb
out
js
inc
mov
pop
cmc
sbb
push
mov
hlt
mov
or
jo
add
jb
sub
jg
lret
or
sbb
xor
sub
push
sub
rcll
test
jb
sti
mov
push
mov
mov
cwtl
xor
iret
pop
mov
das
cld
aaa
mov
or
loop
sbb
imul
sbb
fisttpl
or
adc
aaa
fsubrs
test
cli
icebp
fs
pop
sub
ljmp
push
lret
and
loope
fimuls
cli
ljmp
inc
xor
ljmp
xor
cltd
and
jno
je
ljmp
inc
insb
xlat
in
repz
jp
imul
mov
and
or
mov
sub
sbb
or
icebp
push
jecxz
push
cmpsb
and
push
or
in
pop
mull
mov
repz
stos
aam
jmp
iret
in
jmp
pop
scas
and
jmp
imul
sbb
repnz
hlt
test
mov
test
lds
ficompl
mov
sahf
sub
jp
andb
sbb
rolb
movsl
mov
fimull
push
inc
cmp
inc
lds
add
ss
cmc
ficompl
push
sbb
daa
adc
jne
push
stc
lcall
mov
nop
dec
std
insb
mov
and
push
and
or
xchg
dec
push
cltd
shll
arpl
cli
ljmp
mov
or
movsl
das
rorb
ret
clc
sub
roll
in
or
sti
adc
imul
and
sbb
repz
stc
in
test
mov
jp
popf
repz
movsb
and
mov
sub
stos
es
sub
mov
icebp
lcall
hlt
or
nop
ss
add
repz
setle
fdivs
rcl
data16
test
fsubr
cld
sbb
shr
cmpsb
je
sbb
clc
adc
jae
mov
mov
in
inc
ljmp
dec
dec
xor
cmp
push
sbb
stos
mov
fcomps
jbe
mov
sbb
cmp
and
adc
negb
and
dec
jae
dec
jmp
pop
rclb
mov
aas
sarb
popa
cli
adc
dec
jle
mov
stc
sbb
add
pop
mov
hlt
pop
jae
cwtl
std
and
cld
add
mulps
js
popa
in
push
or
sub
inc
in
mov
pop
sbb
pop
sub
cmp
fs
xchg
shl
sub
outsl
mov
lret
push
dec
and
fs
xorb
jo
adc
sbb
mov
sti
and
add
ret
repnz
inc
into
sbb
push
mov
sbb
sbb
inc
loop
and
dec
stos
stos
ss
imul
sbb
aad
mov
sub
ret
arpl
testl
pop
fcoms
test
lret
lock
repnz
sub
dec
and
test
sbb
add
and
aad
cld
dec
lea
sbb
pop
inc
in
mov
push
outsl
pop
push
cmp
lret
call
inc
push
adc
in
movsb
xchg
mov
and
aas
hlt
or
add
jnp
add
nop
fadds
in
fs
mov
lock
aaa
subl
or
pop
pusha
push
sbb
add
in
mov
cmp
mov
sub
jl
je
sbb
adc
mov
adc
leave
outsl
sub
and
gs
adc
and
xchg
mov
or
sti
mov
stc
subb
jg
repz
jecxz
mov
sti
fdivr
adc
sbbb
inc
sahf
add
rcll
loopne
std
push
adc
xchg
dec
xor
add
enter
push
dec
idiv
aas
aaa
add
pop
leave
loope
test
out
idivb
into
mov
inc
repz
or
pop
gs
jno
and
push
inc
mov
outsb
cli
push
gs
insb
aaa
xchg
and
jb
pop
xor
or
push
out
icebp
jl
fwait
add
shlb
scas
or
sbb
roll
add
lcall
loope
mov
sub
mov
ficoml
ljmp
test
jl
cmp
es
dec
cltd
popa
cli
adc
sbb
xchg
mov
fsubs
mov
lcall
leave
inc
lret
aas
jge
lock
and
push
add
jmp
add
push
mov
addr16
jo
ljmp
mov
lcall
enter
lea
incb
sub
or
sbb
cltd
cs
or
insb
cmc
out
out
push
cmpsl
stc
inc
outsb
and
sbb
add
jl
add
push
pop
arpl
cmc
cmp
adc
and
loop
adc
loopne
insl
ds
xchg
lret
pop
mov
cltd
sbb
lods
cmp
loop
cwtl
push
mov
mov
scas
jns
add
or
mov
jne
sbb
mov
jp
rcll
movsl
jecxz
sbb
movsb
push
ljmp
aas
sub
sbbl
xchg
and
add
popa
arpl
add
pop
xchg
jo
js
insl
popf
stos
add
mov
and
and
cli
out
xchg
pop
mov
es
movsb
call
mov
and
and
rorl
add
add
pop
shrb
or
call
add
or
lret
cld
add
out
in
sub
xchg
jge
in
and
fisttpll
popa
pop
shrl
jle
arpl
popa
addr16
adc
imul
fmul
dec
orl
lock
repnz
add
loopne
mov
and
ss
mov
roll
lret
aam
push
nop
movsl
inc
sti
outsb
sub
es
or
add
lods
lods
in
fcmove
daa
imul
cmp
and
sbb
mov
rorb
idivl
in
fdivrl
pop
shrb
adc
jns
adc
dec
or
repz
cmpsl
hlt
jne,pt
adc
cmc
repnz
mov
out
sub
pop
ret
and
and
pusha
and
and
cmp
enter
nop
imulb
or
mov
sub
loope
repnz
xchg
test
sbb
push
jmp
or
daa
dec
cs
pop
sub
das
mov
pop
js
lock
movsb
pushf
je
sub
subl
sbb
stos
shlb
in
and
push
std
lds
push
ja
ljmp
cmc
mov
enter
sub
pop
add
outsl
sti
lock
stos
mov
sbb
std
jge
pop
insl
or
add
push
cmpsl
mov
adc
test
and
add
pop
and
xadd
dec
or
sbb
jle
cmp
pop
arpl
cmp
or
enter
mov
in
stos
popa
pusha
xor
clc
adc
mov
rep
and
sbb
int3
and
in
add
adc
pop
sub
lock
mov
dec
fildll
out
or
loopne
cmp
push
adc
and
cltd
in
rol
push
xor
and
aaa
pop
ljmp
fcompl
popf
jo
mov
lahf
ja
hlt
pusha
sbb
add
mov
sbb
jnp
arpl
cmpsl
pop
aad
test
or
roll
mov
push
lret
call
mov
aad
rcll
and
sti
sbb
rcl
adcl
outsl
add
push
xor
out
shll
mov
mov
sete
or
inc
andb
ss
stos
inc
xorl
push
adc
pop
mov
mov
jo
sbb
adc
xchg
pop
pushl
fnstsw
jecxz
jg
repnz
cmp
sbb
cmp
push
stos
rcll
insb
fisubl
sub
clc
or
repnz
into
out
adc
sarl
cli
je
sub
xchg
xchg
lcall
rclb
jns
mov
clc
xchg
push
push
and
call
add
sbb
push
lods
fdivrs
and
popf
arpl
cld
adc
fidivl
out
push
popa
iret
fmull
inc
or
xchg
div
jle
or
mov
mov
lock
xor
pop
or
ja
mov
sbb
cwtl
push
test
pop
dec
lret
in
out
or
adc
sbb
mov
and
push
push
pushf
adc
jne
incb
push
jecxz
outsb
shll
mov
sub
outsb
ret
cmpsl
push
sbb
aam
jb
add
das
xor
hlt
sbb
ret
nop
mov
loop
xlat
inc
or
mov
add
add
pop
imul
sbb
pop
dec
aad
sub
add
lahf
mov
sub
sbbb
sbb
add
lods
jecxz
hlt
adc
fsubs
sbb
sbb
dec
cli
ljmp
dec
cmpsl
lds
xchg
mov
test
push
fcomi
mov
push
push
insl
add
mov
inc
push
adc
mov
ds
in
mov
cmp
and
mov
add
cmpl
lea
and
movsl
or
sbb
mov
add
fs
pop
jmp
gs
adc
lock
sar
sbb
fdivr
mov
fcoms
leave
pushf
repnz
rcrb
jnp
arpl
insb
out
push
inc
or
mov
sub
aam
push
cmpsl
int
and
jle
or
shl
or
cmpl
push
es
mov
mov
jmp
add
pusha
mov
pushf
add
mov
popa
mov
vcvtss2si
sbb
ret
cli
fadd
imulb
rolb
and
repz
aam
xor
sbb
fstpl
push
add
pop
or
incb
and
in
jmp
test
pop
mov
adc
nop
adc
iret
sub
out
ret
adc
cmp
jge
mov
cltd
movsb
test
popf
scas
or
lods
imull
xchg
cmp
pushf
call
or
jle
add
mov
mull
and
xchg
loop
jae
ljmp
add
jb
test
das
sahf
push
sbb
mov
jne
and
mov
add
add
mov
shrb
js
ds
mov
mov
xor
or
lret
sub
data16
ror
divl
adc
outsb
daa
mov
mov
jmp
notb
pop
and
mov
xchg
cld
jnp
or
cld
push
push
out
ffree
imul
xor
repz
loopne
sti
lock
cmp
jmp
dec
test
mov
call
push
fadds
xor
sar
sub
push
data16
adc
push
jl
nop
fldt
push
nop
daa
out
gs
mov
notb
jb
fsubs
in
psrlq
pop
or
mov
aad
or
scas
fcoml
adc
xchg
pop
cmp
or
fiaddl
pop
xchg
adc
leave
pminsw
mov
das
and
push
add
loopne
cld
mov
and
lea
pop
pushf
or
sar
mov
repnz
xor
std
dec
call
and
jl
sub
jl
imulb
call
sbb
nop
cmpb
pop
adc
cmc
sub
push
shrl
pop
xor
xor
mov
adc
pop
or
pop
pop
ljmp
out
fs
adc
mov
sbb
hlt
popa
rcr
or
pop
xchg
jmp
stos
daa
scas
insl
inc
cld
xchg
push
notl
int3
sbb
mov
aam
xchg
jecxz
and
cmp
sub
xor
adc
and
enter
cmp
and
cs
imul
mov
dec
movsb
fmuls
adc
loope
jmp
imul
jb
mov
mov
hlt
cld
aam
inc
or
movntq
out
loop
repz
mov
scas
add
sub
cmp
lret
test
daa
loope
dec
xchg
bound
ds
aam
inc
imul
dec
movzbl
lock
arpl
aad
and
ss
icebp
add
xchg
push
sbb
mov
sub
mov
dec
test
hlt
adc
or
int3
cmp
cwtl
or
mov
add
push
pop
shlb
popa
movsb
push
and
out
test
sete
sbb
movsb
jb
lahf
test
cltd
xchg
push
sbb
pop
icebp
ret
sub
bound
pop
cmp
repz
fmull
and
in
inc
pop
arpl
call
adc
jle
es
arpl
sub
and
movsb
lods
dec
out
push
shlb
sbb
pop
push
cmp
add
jp
stos
push
dec
xchg
mov
push
sbb
cmovae
daa
mov
push
fsubl
add
in
cmp
jle
pop
or
adc
pop
sub
bound
add
sub
sbb
fsubs
loopne
sub
sbb
and
inc
mov
les
sub
push
sub
subl
and
addr16
push
lea
xchg
shlb
and
movsb
adc
pop
dec
mov
and
xchg
push
jno
push
inc
lock
test
clc
add
dec
add
cld
sub
arpl
push
push
sbb
and
gs
sbb
jge
cld
and
insl
mov
scas
imulb
lock
sub
stc
sbb
mov
out
sbb
imul
add
xchg
inc
test
add
setbe
daa
shlb
or
cld
add
push
fs
ret
mov
in
push
lahf
daa
dec
scas
repnz
fwait
sbb
or
nop
dec
stos
xchg
or
or
jne
imulb
sbb
cmp
das
mov
es
ret
les
add
repz
cmp
and
push
mov
dec
xchg
and
sub
sbb
sbb
sbb
out
adc
add
cld
lcall
and
lds
in
inc
sbb
fsubl
cmc
or
sub
ret
incb
cmc
loopne
and
lea
mov
sub
hlt
xor
fldcw
push
ljmp
jge
mov
in
repnz
popa
pop
add
out
dec
fdivrl
lock
push
mov
pop
or
mov
push
sbb
ficoms
or
arpl
bound
sub
mov
jmp
cs
and
mov
cli
hlt
lcall
arpl
xchg
add
sbb
pop
push
xchg
add
sub
mov
mov
ljmp
pushf
mov
ljmp
shrl
test
negb
push
fmull
pop
and
int3
and
scas
xchg
leave
sub
xchg
pop
enter
cmpsl
testb
inc
and
dec
mov
mov
inc
nop
add
or
or
lcall
push
fsubl
mov
jg
lds
push
adc
or
out
xchg
push
mov
or
shrb
outsb
xchg
xor
push
arpl
adc
sbb
lahf
scas
sahf
mov
fadds
inc
mov
or
jecxz
xor
cwtl
sub
je
add
stc
jmp
sub
or
mov
jmp
out
jle
jo
lds
sti
dec
mov
cmpsl
nop
sub
or
and
jmp
cmp
in
and
pop
xchg
ds
sbb
pop
and
inc
push
lcall
adc
push
stos
jmp
and
stos
dec
arpl
arpl
imul
dec
sub
in
mov
test
stos
dec
add
mov
iret
add
aad
or
das
sub
adcb
mov
add
and
outsl
outsb
cli
and
repnz
and
mov
adc
inc
sub
arpl
cld
cli
icebp
push
repnz
or
mov
sbb
shlb
cmp
and
les
or
iret
and
lods
faddl
adc
sbb
shl
pop
mulb
fstl
cmpsl
adc
fildll
daa
test
jp
inc
sub
test
mov
xor
adc
imul
mov
add
pop
mov
cmc
adc
js
gs
add
movsb
xchg
rorb
cli
pushf
inc
leave
nop
outsb
daa
and
pop
mov
addr16
push
ficomps
push
cmp
sbb
movsl
xchg
jge
lock
and
and
out
sub
xor
jno
mov
jmp
fwait
test
or
lea
stos
xor
pop
xchg
fcoms
mov
repnz
push
repnz
push
lcall
arpl
sub
cmc
sbb
or
leave
fildl
push
ljmp
xchg
dec
push
fcoms
popa
sub
pop
inc
imul
clc
xchg
sbb
stos
insl
fcomi
fucomip
out
and
cmp
aas
mov
add
nop
inc
pop
adc
shlb
ljmp
ret
push
jnp
jns
and
and
fistps
add
jg
sbb
mov
push
enter
mov
cld
gs
jl
cs
test
mov
add
push
lahf
inc
stos
psllq
pop
xchg
cltd
jnp
adc
scas
xor
dec
adc
fstps
lahf
or
sbb
pop
movsb
insl
and
xchg
fdivp
and
and
sahf
aam
lcall
fistpll
or
dec
cld
popf
pop
mov
frstor
push
or
out
cld
popa
popa
rorl
sbb
mov
push
dec
xchg
fmull
ljmp
add
mulb
arpl
ret
inc
adc
push
test
cli
sti
push
cmp
xchg
icebp
das
sbb
or
jae
mov
add
cmp
ret
in
pop
icebp
jnp
cmp
arpl
jne
rcrb
add
lock
adc
xchg
pop
inc
or
cmp
test
push
add
mov
out
clc
or
and
inc
in
push
xor
add
jne
rcl
shr
push
xor
mov
ja
adc
xor
jmp
and
notb
and
bnd
test
adc
add
leave
std
or
and
loope
fdivl
sub
test
jge
mulb
xchg
add
lret
and
push
mov
push
mov
xor
push
inc
jno
pop
lock
or
arpl
jmp
clc
subl
and
clc
ss
jge
and
mov
jne
andb
and
sti
rclb
adc
add
stc
jmp
jb
pop
pop
xchg
mov
pop
dec
pushf
xlat
mov
push
insb
sub
out
sbb
lret
repnz
cs
jmp
call
add
adc
lret
out
out
les
push
xor
mov
cltd
xchg
add
jmp
xchg
or
mov
les
dec
daa
and
sbb
inc
cmp
stc
xchg
rcll
push
mov
loope
push
sbb
sub
ret
sbb
mov
cmp
push
mov
outsb
and
push
adc
repnz
sbb
repnz
pop
add
add
mov
dec
sar
popa
adc
roll
into
pop
sbb
xchg
and
or
jmp
lret
add
add
xlat
add
and
movsb
shrb
jl
mov
sub
leave
pop
repz
and
pop
add
cmpsl
in
int3
jno
add
out
sub
and
fcoms
or
ja
out
dec
or
mov
adc
loope
sub
std
mull
pop
aam
fdivrs
cmp
ucomiss
sub
add
xchg
sub
pop
scas
mov
push
aas
pop
push
cld
enter
jp
pop
imul
cwtl
movsl
arpl
add
push
inc
mov
repnz
push
and
loope
loopne
cld
in
imul
and
mov
ja
and
int
sti
sub
clc
lret
rolb
add
sub
cmp
or
and
out
or
push
loop
cmc
sub
sbb
loopne
sbb
add
adc
adc
and
std
or
sbb
movsl
adc
and
aam
mov
or
repz
xchg
pop
jb
sub
lcall
lock
or
leave
stc
adc
mov
nop
inc
clc
adc
movsb
sbb
or
xor
pop
push
and
xor
fcomps
int3
and
lods
add
adc
stos
pop
lret
data16
js
outsb
testb
hlt
dec
fcomi
test
insl
cmp
and
dec
adc
xorl
or
inc
and
dec
sbb
addr16
pop
mov
ljmp
add
add
fcoms
popa
in
sbb
outsl
lcall
add
push
inc
lock
fcomps
aad
std
out
ret
dec
push
js
xchg
xchg
jne
dec
mov
sbb
push
adc
fcoml
push
jno
ds
jnp
outsb
arpl
nop
rorl
inc
imul
push
mov
test
sub
mov
jbe
or
cmp
sbb
icebp
inc
js
cmp
and
insl
cwtl
clc
nop
int
stos
sbb
add
sbb
or
jecxz
hlt
adc
push
pop
enter
xchg
out
out
cmc
daa
jae
sbb
jb
dec
pop
cld
testb
adc
and
cmc
movsb
sar
out
repz
cld
sub
popa
adc
mov
dec
mov
movsb
ret
sub
gs
andl
dec
movsl
cmp
lcall
sbb
pop
xor
loope
cmp
lods
pop
decl
dec
sbb
and
popf
cmp
xor
sub
fcom
ret
out
out
mov
xchg
mov
and
adc
adc
push
jecxz
pop
xchg
adc
inc
xor
mov
lds
int3
cmp
jecxz
fsts
adc
jae
xor
rclb
cmp
fwait
add
les
gs
ja
add
adc
dec
or
clc
push
push
pop
or
mov
notb
push
sbb
sbb
jl
cmp
mov
movsb
into
sub
lds
jle
and
mov
fcoms
and
sub
sbb
not
cltd
clc
or
lcall
xor
pop
pop
in
jmp
pop
cli
int3
push
inc
mov
mov
sub
xchg
add
daa
and
adc
push
xchg
xchg
mov
push
jno
cmc
push
and
nop
testl
mov
loop
jb
cmc
es
fsubr
inc
daa
loope
test
test
sub
or
sbbl
xchg
hlt
repnz
stos
sbb
jmp
xchg
mov
aas
inc
pushf
js
mov
adc
mov
or
enter
dec
test
add
xchg
enter
sahf
gs
imul
mov
jge
dec
in
shrb
ljmp
mov
push
sub
sbb
cwtl
sbb
cld
dec
mov
sbb
push
push
arpl
cli
or
xor
add
push
das
cli
adc
adc
mov
sbb
clc
push
shr
adc
adc
shl
mov
sub
stc
loop
jmp
insl
lret
popf
inc
or
mov
jae
movsb
push
popa
std
cmc
pop
imul
jae
sbb
mov
and
sbb
adc
or
fbld
push
fdivr
bound
call
stos
adc
jb
sub
xor
push
jge
loope
adc
insb
push
mov
pushf
xor
push
sbb
andb
cmp
push
popa
bound
xor
pop
xor
jmp
or
jl
lcall
imul
mov
add
adc
cs
inc
subb
nop
in
mov
and
mov
adc
jecxz
inc
jns
cmpsl
addb
idivb
sti
test
out
inc
and
add
xchg
icebp
aaa
xchg
cltd
add
pop
push
lcall
lock
arpl
pop
and
imul
jb
subb
adc
movsb
mov
push
push
xor
jo
add
out
cmpsl
out
clc
cmp
cld
rorb
js
aam
and
frstpm(287
scas
outsl
in
inc
pop
enter
fdivl
pop
shlb
jne
nop
xor
push
dec
lods
jp
test
idivb
lcall
pop
push
pop
cltd
xor
fdiv
fdiv
int3
adc
or
call
test
sarl
push
mov
lcall
or
mul
pusha
aam
imul
mov
pushw
movsb
jno
sub
sub
jge
pop
lcall
cld
dec
push
or
or
sbb
ja
xchg
outsl
popa
mov
add
repnz
mov
addr16
and
jbe
dec
cmp
cmp
mov
popa
lds
bound
scas
pop
lahf
and
inc
pop
cmp
aad
and
out
dec
dec
sub
iret
movsb
sbb
lret
pusha
fs
stc
test
or
add
dec
arpl
adc
push
xchg
fs
repz
popf
jae
fdivr
aad
pushf
push
sub
bound
and
push
jecxz
xor
mov
and
icebp
sbb
sub
and
push
repz
xchg
aaa
cli
sbb
daa
push
testb
add
cmpsl
xchg
outsl
clc
hlt
cmp
add
insb
lock
sub
and
push
sahf
mov
xchg
dec
adc
cld
adc
jecxz
das
mov
insb
sbb
or
shl
lock
inc
loop
lods
mov
mov
adc
push
pop
aaa
lea
lret
insb
dec
push
popa
mov
sbb
or
adc
cld
mov
test
cmovnp
mov
test
mov
jp
adc
fcmovb
and
sbb
popa
and
push
xor
mov
stos
add
xor
out
xchg
and
int3
sbb
adc
adcl
sub
mov
or
icebp
dec
inc
call
adc
fsubrs
push
in
xchg
push
mov
lods
mov
mov
adc
ds
subb
sahf
adc
add
sub
sbb
imul
inc
sbb
mov
les
nop
push
mov
xchg
sbb
adc
sub
xor
inc
mov
sub
lret
xchg
mov
adc
aam
sbb
dec
movsb
or
icebp
ds
and
add
test
pop
lret
or
and
cmp
add
lret
imulb
fs
xor
and
sbb
push
mov
and
fs
cltd
push
xchg
sub
pop
mov
or
sbb
jecxz
clc
hlt
pushf
cld
sbbl
imul
test
xchg
movsb
push
pop
lods
add
mov
push
test
sub
pop
sub
or
sub
and
aas
dec
jne
sbb
or
and
xchg
dec
jb
cmp
cmpsl
sbb
push
cld
out
add
lea
daa
jbe
sti
adc
stos
clc
push
or
xchg
loop
dec
cld
rcrb
insb
loop
sub
movsb
xor
or
adc
pop
xchg
cmp
loop
jmp
xor
sub
movsb
sbb
outsb
jmp
pop
mov
adc
add
sbb
and
fmuls
int3
fstpt
loopne
adc
cmpsl
mov
jl
mov
cmp
cmovle
icebp
push
addr16
data16
sub
push
pop
sbb
push
pop
fsubs
push
ss
or
add
cmc
sbb
inc
adc
out
push
and
cs
and
and
adc
in
adc
xchg
pop
pop
sbb
dec
jge
lahf
cli
std
or
or
inc
sbb
out
sbb
pop
lcall
and
and
push
icebp
cmpsl
roll
pushf
pop
mov
das
sar
lret
adc
and
int3
and
pusha
mov
and
ljmp
pop
insb
aad
idivl
ss
es
cltd
or
aaa
out
mov
ds
pop
add
insl
or
mov
jno
outsb
inc
xor
or
rolb
sbb
sbb
std
movsb
push
pop
outsl
jno
adc
arpl
or
xchg
fadds
mov
nop
sbb
sbb
subl
add
dec
std
add
punpckhwd
notb
mov
inc
xchg
push
and
xor
aam
sbb
in
mov
cmp
int3
cmp
dec
mull
rorl
std
out
adc
test
or
or
into
sub
daa
fmull
ljmp
adc
mov
popa
mov
or
mov
loop
inc
or
sub
add
in
sbb
jle
add
sahf
imul
sbb
int
dec
pop
push
cmc
scas
or
xchg
or
push
adc
jge
and
scas
inc
fdiv
cmp
push
out
addl
adc
push
add
and
jecxz
or
adc
push
mov
data16
aam
or
mov
lret
cli
mov
push
out
cli
or
add
aam
mov
movsl
or
loope
xor
and
repnz
pop
mov
mov
and
and
aad
sbb
mov
sbb
add
shrl
mov
lock
mov
out
fcmovbe
ja
int
adc
mov
xchg
inc
adc
ljmp
sbb
push
mov
or
dec
in
scas
imul
sbb
sbb
pop
daa
add
mov
push
cli
pop
xor
sbb
lock
dec
outsl
sbb
test
add
ljmp
fcoms
and
gs
cmpsb
sub
jecxz
xchg
sub
int3
and
add
lds
rorb
or
fidivl
jno
std
ljmp
inc
or
outsl
pop
cwtl
outsb
aas
imul
pop
test
mov
push
aam
mov
and
test
imul
jnp
adc
or
cld
sbb
movsb
lret
mov
stc
mov
sbb
pop
enter
inc
in
imul
scas
add
nop
and
sub
neg
xor
lcall
outsl
imul
jns
out
outsb
pop
imul
clc
dec
rcrb
dec
dec
xor
lret
dec
adc
dec
push
jmp
stos
inc
add
popf
addr16
pop
sbb
pop
aam
push
arpl
sbb
push
sub
or
sbb
sti
cmp
idiv
sbb
iret
jno
or
add
pop
jle
mov
and
jae
and
rclb
push
cld
sahf
loope
sbb
sti
sbb
add
repz
stos
push
or
sub
cmpsl
movsl
cmpsl
jle
or
add
int
mov
sub
ficomps
push
mov
enter
daa
mov
inc
mov
push
lret
jmp
outsl
add
add
adc
movsb
scas
xchg
sbb
or
add
mov
mov
movsl
dec
mov
xchg
imul
sub
jmp
fidivl
adc
pop
adc
add
push
push
dec
in
adc
or
pop
sbb
sub
and
pop
add
adc
arpl
nop
out
mov
sub
sti
jne
push
scas
pop
jmp
xlat
inc
add
pop
xor
mov
ret
sbb
push
cmpsb
add
and
lock
repnz
out
mov
movsl
add
jecxz
repnz
loope
pushf
jb
testb
or
pop
aaa
xor
push
es
icebp
test
inc
push
nop
lock
mov
push
xor
lret
cmc
dec
or
dec
out
sbb
aaa
xor
hlt
repz
or
mov
aam
aas
cli
or
test
mov
mulb
dec
in
aad
mov
jecxz
hlt
cmc
pop
lret
cmc
mov
test
pop
sbb
out
jno
clc
pop
adc
cltd
scas
lock
in
ljmp
inc
faddl
scas
sbb
adc
clc
and
mov
adc
push
pop
push
rcrb
out
outsl
jmp
and
pop
and
adc
hlt
fidivs
insb
faddl
mov
imul
syscall
mov
and
and
sub
mov
sub
xchg
cmc
and
dec
and
cmpl
imulb
daa
dec
sti
or
mov
adc
sti
add
push
add
add
vminss
daa
jl
and
cmp
cmp
inc
sbb
push
sbb
lock
and
shl
adc
cltd
xchg
test
inc
mov
jmp
mov
xchg
jne
in
dec
mov
xchg
sub
fisubl
shll
push
insl
sub
push
cmpsl
fs
pusha
incl
adc
movsb
cwtl
or
sub
es
out
sbb
cld
mov
pushf
or
dec
push
mov
or
mov
shl
fbld
loope,pt
lock
and
mov
push
es
and
pop
xor
xchg
lock
sbb
xchg
vmovhps
outsl
call
jae
sub
loopne
js
sti
cmpsl
and
rol
insl
pop
int3
dec
dec
std
popa
addr16
sbb
stc
and
pop
sbb
cld
cmpsb
push
inc
fsubs
jbe
jb
cld
xchg
mov
pop
ds
add
xchg
pop
or
cwtl
rorb
enter
push
sbb
sbb
mov
ret
and
clc
add
cmpsl
push
mov
pop
faddl
adc
popa
mov
or
loope
dec
test
out
add
lret
rep
jb
clc
in
or
dec
xchg
push
fsubs
stc
jecxz
test
lods
mov
test
test
cmp
sub
push
call
imul
xchg
sbb
test
xchg
sub
push
pextrw
lds
and
xor
mulb
xchg
push
jle
mov
adcb
int
in
sub
mov
xchg
dec
icebp
lods
xchg
iret
daa
sbb
enter
adc
or
and
sbb
setg
mov
add
in
push
add
sub
adc
stos
mov
in
lock
jle
je
push
ret
add
inc
add
sbb
inc
xor
jo
push
or
adc
mov
sbb
add
mov
adc
jae
lods
add
daa
scas
lock
cmp
pop
clc
and
jp
fcoml
sbb
nop
test
inc
mov
xchg
dec
sbb
xrelease
repnz
popa
jp
sbb
pusha
dec
sub
ljmp
fcomps
cmc
sub
das
insb
sub
add
jmp
loop
out
in
mov
sahf
xor
daa
cmpsl
leave
nop
adc
out
sbb
xor
fstps
dec
or
cmp
sbb
enter
pop
dec
adc
imul
pop
pop
mov
ss
inc
sbb
cs
repz
push
in
cmp
push
xchg
mov
sub
dec
testb
mov
dec
and
fstpl
inc
scas
sahf
cwtl
es
js
cld
pop
jno
popa
pop
sub
and
pop
push
test
sbb
adc
insl
repnz
shlb
neg
adc
les
push
and
push
mov
fisubrs
notb
inc
sbb
or
mov
dec
ror
add
shlb
movsl
or
and
nop
inc
packsswb
push
push
add
sbb
cli
mov
dec
dec
rcr
sub
sbb
cmpsl
or
or
loope
dec
lds
std
sub
or
mov
roll
and
sbb
mov
adc
sbb
popa
shrl
pop
dec
movsl
test
add
and
pop
adc
cld
daa
pushf
ficoml
dec
addr16
xor
sub
xor
sub
pop
pop
cmp
stos
rcl
cmp
dec
xchg
mov
mov
mov
mov
in
or
jecxz
bound
movsb
dec
and
add
push
cmp
or
cmp
out
gs
insb
add
sub
cmp
addr16
xchg
mov
push
add
adc
adc
rclb
sub
xor
insl
test
fisubrl
xchg
adc
mov
pop
mov
sub
and
xchg
outsb
jmp
dec
repnz
mov
fiadds
addl
mov
add
lret
repz
and
or
call
sbb
les
daa
sbb
pop
mov
cld
rcll
jns
loopne
push
nop
or
sbb
pop
sbb
sbb
ds
cmc
stc
enter
sti
lret
loopne
out
mov
arpl
mov
sti
push
es
and
xor
or
and
inc
testb
mov
roll
cmp
out
and
push
icebp
cmpsl
push
sub
daa
sbb
mov
sub
cld
xchg
adc
push
mov
mov
int
add
rclb
fcoml
stc
lods
and
dec
arpl
xor
mov
cmpsl
aas
adc
ljmp
addr16
clc
add
adc
jno
dec
sbb
adc
sbb
add
insl
in
sub
push
xor
adc
cmp
and
adc
cmpsl
ds
sub
sbb
sub
pop
add
jnp
mov
pop
push
arpl
jo
mov
and
in
mov
sbb
fisubl
popf
mov
sbb
inc
mov
mov
add
testb
xor
sbb
adc
xchg
inc
nop
ja
cmpsl
xchg
cld
jge
mov
icebp
dec
sub
jmp
outsl
test
jmp
adc
push
and
sbb
and
sub
lea
mov
and
push
sub
xlat
rcrl
movsb
and
pop
repz
ljmp
dec
push
sbb
ljmp
pusha
cld
xchg
sub
test
movsb
out
scas
push
inc
xor
adc
das
fcoml
mov
popa
out
sbb
mov
pop
imul
cli
lret
or
and
imul
adc
jmp
jns
and
psllw
pop
sbb
mov
push
rcrl
pop
mov
add
out
hlt
cwtl
inc
js
loop
int
sbb
or
sbb
jle
repnz
js
scas
sub
push
xchg
pushf
add
sbb
mov
in
and
sub
addr16
out
cmp
xchg
jp
push
clc
xchg
cli
jmp
jecxz
sub
out
fstpl
mov
or
push
xor
add
jle
mov
push
pcmpgtb
pop
clc
jne
faddl
and
insb
dec
ss
pop
cmp
cld
dec
gs
in
lcall
sub
call
jp
movsb
aad
jle
sub
pop
push
sub
and
push
jnp
adc
es
push
mov
fucomp
and
or
push
dec
or
cld
aas
insb
pop
mov
ljmp
sub
stos
and
adc
mov
ljmp
adc
add
pop
add
pop
fdivrl
sbb
daa
dec
fldt
mov
fbld
out
ds
sti
sbb
bnd
into
mov
jmp
dec
jbe
imul
loop
out
or
js
rol
arpl
push
or
push
add
sahf
or
arpl
adc
out
sbb
movsb
add
aaa
mov
pop
notl
push
cld
xchg
imul
loope
mov
in
mov
cmpsl
stc
cmp
or
repz
mov
in
out
sub
sub
adc
lret
lock
mov
dec
jecxz
cld
push
sarb
fldl
dec
roll
cltd
hlt
and
push
add
lods
sbb
js
rdmsr
dec
cmova
xor
and
mov
adc
and
fisubs
cmpsb
sbb
and
sahf
cmp
jb
and
mov
stos
cmc
or
repz
repnz
das
and
pop
daa
cmp
mov
push
pushl
sbb
stos
daa
icebp
pop
lds
test
add
sbb
std
sbb
pop
addr16
dec
mov
hlt
mov
pcmpgtb
dec
adc
jne
pop
jle
ljmp
arpl
mov
and
pop
imulb
fnstsw
cwtl
adc
js
addr16
cmc
fcomp
clc
xchg
jmp
aaa
jnp
in
push
fistpl
in
scas
pop
fcoms
xchg
pop
push
test
xchg
jmp
and
xor
pop
movsb
in
test
shlb
jmp
push
pushf
dec
ljmp
cld
mov
cmc
sub
cmpsl
jb
and
clc
cmovg
nop
xchg
lret
xor
pop
je
ja
add
sbb
in
notb
movsb
nop
jbe
sub
pop
push
out
cwtl
scas
ja
add
sub
jne
or
rcll
and
add
lcall
aas
bound
cld
call
sarb
sbb
ret
test
pop
adc
and
mov
lds
es
sub
loope
and
add
pop
orl
pop
xor
test
ljmp
jmp
scas
aas
es
or
lcall
mov
fdivr
mov
sub
and
and
je
lock
movsb
daa
call
imul
repz
mov
jl
jnp
les
xchg
dec
adc
loop
in
mov
and
rol
xor
push
gs
sub
test
imul
sti
test
and
adc
or
out
fs
or
stc
xor
jge
imul
dec
lods
sbb
push
daa
aaa
lcall
jo
sbb
bound
aaa
dec
adc
jp
adc
aas
shr
lret
fistpl
or
inc
mov
movsb
xor
repnz
sbb
adc
sub
in
cmc
sbb
and
pop
xchg
dec
push
mov
sub
fstpt
adc
stos
lods
out
or
lock
ja
push
jo
stos
cmp
xchg
and
sbb
add
add
cld
mov
inc
xor
test
mov
lret
or
imul
jg
sub
push
cmp
notb
inc
call
jb
clc
fs
adc
adc
test
mov
repnz
movsb
push
test
and
int3
in
lods
repz
jecxz
inc
and
cmp
outsb
or
js
fiadds
push
into
out
cld
cmp
cli
pop
sub
add
repz
outsl
cmp
push
adc
or
inc
mov
mov
pop
inc
fcomip
rcrl
inc
mov
mov
rcll
cmp
xchg
adc
nop
sbb
jae
push
fisttpl
sub
cmp
in
popa
add
jmp
cs
pop
pop
sbb
mov
add
push
addr16
cwtl
icebp
in
es
mov
sbb
stos
popa
push
sub
out
sbb
jmp
jb
jge
adc
outsl
repnz
and
push
sbb
out
and
xchg
jp
enter
scas
lret
ja
sbb
fdivr
aaa
out
jle
stos
fstps
and
pop
xchg
sar
popf
lods
and
and
cmp
imul
jle
and
in
fdiv
popf
mov
in
ret
add
addr16
mov
cwtl
daa
jmp
dec
int
adc
js
and
sbb
repnz
mov
hlt
push
xlat
out
notb
cmp
movsb
xchg
shl
push
enter
daa
dec
push
pop
inc
cmpsb
jo
mov
jo
rorl
lret
push
xchg
adcb
enter
sbb
sbb
or
pop
and
clc
cmpsl
loop
mov
sub
fisubs
jmp
inc
mov
lahf
or
xchg
and
jmp
push
cmpsl
pop
xor
pop
bnd
fdivrl
out
in
jl
dec
xchg
std
sub
loopne
mov
jne
push
pop
loop
stc
or
jo
sub
adc
add
sub
movsb
push
mov
out
pop
clc
push
scas
hlt
push
sbb
or
mov
push
add
jmp
mov
xchg
loope,pn
lock
jge,pn
xchg
shr
pop
push
daa
nop
popa
je
xchg
sti
sbb
mov
and
rcl
andb
or
repnz
xchg
sub
js
lods
adc
roll
ljmp
mov
movntq
sbb
add
ret
add
xor
cmp
and
and
icebp
leave
decb
sbb
daa
hlt
push
jo
push
or
mov
cmp
jge
pop
mov
imulb
in
add
sbb
testb
call
mov
std
adc
and
cmp
hlt
aad
paddb
push
sti
psubw
and
xor
test
adc
and
mov
hlt
fidivrl
mov
mov
mov
sub
pop
adc
and
adc
test
int3
cmpsl
cli
mov
mov
inc
rclb
and
clc
push
xor
mov
out
inc
cmp
mov
mov
popa
adc
repz
movsb
lock
sbb
dec
nop
cmovbe
mov
jbe
stos
mov
or
mov
dec
cltd
inc
cli
adc
lock
sbb
pop
adc
sbb
and
pop
repz
lret
push
in
mov
gs
add
jo
push
mov
ljmp
jl
enter
out
cmc
aad
lods
pusha
fcompl
sbb
push
mov
stos
out
fsubs
mov
push
mov
nop
sar
sahf
in
add
adc
adc
add
lods
add
cmp
fst
jge
adc
loope
adc
pop
mov
aad
or
xchg
or
shll
fcoml
lock
push
sub
push
fcoms
adc
cmp
and
fwait
cltd
idiv
out
add
in
sub
rolb
xchg
pusha
jmp
movb
daa
imul
icebp
fmuls
pop
mov
sbb
cld
xchg
popf
or
idivb
sbb
pop
jo
jb
or
ss
or
xor
dec
inc
mov
test
xchg
sbb
call
mov
adc
popa
je
loopne
int
push
fmuls
xchg
mov
dec
push
sub
test
and
jmp
sub
jb
es
mov
or
ja
add
sub
std
sbb
adc
xchg
out
add
sbb
xchg
adc
cltd
mov
mov
sub
int
mov
pop
xchg
or
xlat
sbb
enter
and
call
cli
aas
or
repz
fs
lds
inc
shrb
sti
ds
mov
mov
or
push
std
pop
xchg
jle
adc
movsb
push
cmp
and
dec
lock
add
jecxz
mov
rclb
mov
add
dec
movsl
jecxz
mov
stos
push
lret
or
jecxz
or
push
pop
add
and
xor
and
rcrb
out
repz
pop
and
icebp
out
add
cltd
or
mov
mov
stos
mov
xor
popa
es
and
push
pop
sbb
xorl
lcall
push
andb
push
mov
sub
pop
inc
and
ud2
xchg
pop
or
cmp
shll
sub
int
adc
loope
test
lods
sub
sbb
xchg
mov
std
pop
dec
pop
mov
cmc
nop
jne
sbb
cli
and
jecxz
out
rclb
mov
sbb
mov
out
sub
daa
push
mov
pop
jo
jp
das
mov
in
push
pop
pop
add
xlat
add
fcomps
push
ja
vpsubw
xchg
sbb
sbb
adc
push
imul
aam
push
aad
std
add
adc
xchg
and
mov
mov
push
sub
inc
cli
cmp
adc
jge
hlt
ja
and
dec
and
add
imul
xlat
and
jmp
in
movsb
push
add
dec
push
test
xor
sbb
sbb
repnz
xlat
lock
pop
add
mov
data16
push
pop
dec
divb
insl
andl
jle
arpl
xor
adc
outsl
add
lret
fistl
icebp
std
jl
lods
mov
fcoms
sbb
repnz
pop
das
mov
sub
sbb
aas
pop
sbbb
adc
xlat
adc
mov
sub
jle
bound
add
fcoml
or
je
dec
gs
sbb
jmp
mov
dec
hlt
or
daa
sub
mov
or
decb
or
xchg
mov
rcll
notl
sahf
dec
pop
push
adc
cli
faddl
adc
clc
or
xchg
lock
test
icebp
sbb
mov
inc
rorl
lret
xchg
ret
idivb
adc
fadd
loopne
out
cli
and
sbb
adc
andb
lock
and
jo
aad
add
jle
and
and
adc
add
push
mov
jo
add
cmpsb
aam
adc
int
or
mov
daa
pop
and
icebp
loope
dec
add
out
repz
and
jl
sti
repnz
pusha
push
sti
add
push
jecxz
dec
sbb
add
add
mov
mov
jg
test
cmc
add
sbb
daa
mov
and
int3
cld
and
hlt
or
outsl
xchg
daa
xor
popf
repz
ljmp
and
cmpsl
leave
dec
or
lcall
lahf
or
test
push
aaa
stos
mov
leave
and
sti
daa
xchg
ja
cmc
mov
inc
stos
push
push
inc
xlat
shll
push
in
sbb
push
in
sbbb
icebp
cmpsl
test
push
pop
ljmp
add
sbb
and
or
push
inc
sbb
sbb
stc
mov
lods
fmuls
sub
mov
sbb
mov
and
mov
dec
push
ljmp
push
sbb
jl
cwtl
and
lret
andb
stc
dec
in
sub
add
add
mov
push
push
shlb
sbb
fstl
aas
mov
and
mov
cmpsl
or
xor
and
testb
fsubs
pop
cmp
pusha
mov
icebp
stc
cmpsl
jg
mov
into
pusha
testb
sbb
enter
mov
fcomi
mov
and
push
sarl
cmp
das
dec
lret
xchg
and
or
in
movsb
xor
or
sbb
push
loope
lea
pop
inc
insb
jnp
mov
mov
or
mov
insl
adc
xchg
mov
lock
push
add
cmpsl
and
repnz
add
and
rolb
daa
ss
mov
nop
loop
mov
adc
insl
xchg
int3
mov
pop
mov
pop
roll
hlt
cld
test
dec
outsl
or
and
shl
in
lcall
push
xor
sbb
add
sbb
adc
sbb
cmpsl
out
sub
ja
imul
lds
pop
repnz
cld
popf
das
mov
adc
std
in
dec
enter
fwait
je
pop
rcrb
aam
sbb
jge
xchg
es
mov
sahf
lret
clc
and
sbb
inc
clc
add
mov
push
ss
sti
lret
shlb
sub
rol
addb
adc
or
imul
pushf
add
add
stos
arpl
cmp
mov
add
add
jnp
jl
dec
nop
aaa
mov
jns
sti
jg
insb
push
dec
push
ljmp
mov
cwtl
aam
popa
or
add
pushf
adc
push
jl
or
cltd
add
and
mov
sbb
repnz
or
dec
lock
in
sbb
mov
mov
call
daa
sahf
rolb
push
push
or
xchg
and
cmp
repz
rcrl
aam
mov
sti
xchg
fidivrs
mov
movsl
lcall
or
lock
into
xchg
int3
aam
add
call
inc
dec
daa
jmp
sub
rep
sbb
push
shll
aas
pop
push
adc
push
sub
rcr
insb
movsb
add
andb
sbb
daa
mov
loope
cli
sub
sbb
nop
in
gs
mov
test
fdivs
push
jae
mov
repnz
add
and
popa
pop
arpl
sbb
or
adc
or
mov
xor
adc
sub
xor
cmp
sti
and
mov
fcomps
sbb
nop
lcall
test
daa
xor
fcomps
call
pushf
clc
js
arpl
sbb
ljmp
mov
les
or
jmp
rclb
sub
outsb
adc
adc
mov
sbb
int3
je
sbb
mov
and
sbb
push
stos
inc
sub
out
jmp
push
scas
or
inc
or
push
sbb
inc
or
pop
or
je
jmp
cmp
sub
adc
cmc
scas
inc
sub
mov
cmp
inc
sbb
push
xchg
jns
or
mov
lods
in
push
cmpsl
mov
adc
or
pop
outsl
lods
pop
stos
and
adc
add
sub
gs
push
jecxz
aad
std
arpl
ja
in
icebp
push
add
cld
push
mov
in
or
cld
outsb
and
add
sub
sbb
loope
xor
xlat
inc
push
testl
add
inc
and
loope
mov
sub
lret
mov
adc
and
fsubl
jmp
pushf
cld
scas
or
adc
sbb
in
in
mov
movsl
mov
mov
fcomps
pushf
add
or
nop
xor
dec
ljmp
sub
or
jb
hlt
imul
push
stc
lret
ds
hlt
and
pushf
push
add
mov
or
loopne
push
imul
repz
lock
mov
orl
pop
push
pop
push
sbb
mov
lret
fwait
icebp
adc
add
lock
das
inc
and
cmp
test
jl
fsubl
mov
lods
lock
sub
sbb
lret
out
icebp
dec
dec
sub
es
movzwl
incb
mov
jg
movsb
xor
jge
mov
fwait
sbb
cmpsl
mov
std
clc
ret
stos
sbb
bound
rcl
add
sbb
adc
and
clc
out
pop
xor
push
inc
lret
push
jge
adc
into
jge
and
test
das
adc
ljmp
fcom
and
inc
addl
push
and
jle
push
stos
fiadds
bound
sbb
mov
and
int3
or
stos
jne
pushf
and
sbb
jmp
sub
sub
inc
xor
sub
cmp
inc
mov
insb
out
repz
repz
femms
fs
aam
out
cs
fiadds
stos
pop
xchg
testb
adc
sbb
lods
push
arpl
and
add
clc
sbb
fstpl
and
adc
or
jo
mov
mov
sub
jmp
cs
lret
outsb
ljmp
sub
imul
dec
mov
push
sbb
sub
ja
jge
aam
sub
add
sub
scas
mov
or
cmp
ret
sbb
xchg
fucomi
and
push
sahf
lds
push
adc
popa
dec
or
xchg
cmp
stos
lcall
cmpsb
dec
gs
mov
push
jo
dec
in
mov
lret
sbb
xchg
loope
dec
insl
add
out
insl
cmp
adc
repz
clc
inc
dec
jnp
cld
inc
dec
push
das
cmp
pusha
dec
or
fistpl
mov
adc
pop
shl
aam
cwtl
repnz
jmp
push
sbb
shld
adc
and
negb
adc
mov
and
dec
es
dec
mov
push
sub
and
sbb
xlat
adc
jle
and
push
mov
xchg
cmp
pop
cmp
arpl
pop
push
gs
rcrl
push
push
daa
sub
jge
lea
or
and
call
xor
mov
sub
mov
and
adc
inc
add
hlt
lock
sbb
aam
fnstcw
push
and
addr16
mov
adc
popa
cltd
inc
add
and
mov
and
ljmp
mov
fcomps
sub
or
lcallw
stc
dec
sbb
mov
sub
popa
pusha
insl
cmpb
xchg
adc
push
out
mov
push
mov
repz
add
loope
inc
jmp
stc
pop
test
sub
cmp
repnz
subl
sbb
int
inc
add
adc
aad
adc
and
test
rclb
sub
push
nop
lock
inc
in
sub
pop
cltd
not
popa
inc
loopne
and
or
test
jmp
xor
ljmp
sbb
daa
dec
pop
test
dec
push
test
dec
jae
lret
mov
inc
fidivl
jmp
enter
or
aad
in
sub
or
jmp
imul
loope
cmpsl
call
fs
imul
insb
insl
int
lock
sub
sbb
and
xorl
and
test
xchg
and
cmpsl
push
xchg
lea
and
push
aam
mov
aas
jb
sub
cmc
jge
es
xor
mov
xchg
add
daa
sarl
jns
icebp
adc
add
adc
negb
out
in
cwtl
lret
cs
loope
push
add
adc
imul
popa
and
arpl
sti
adc
popa
in
jmp
mov
jmp
inc
adc
jp
sti
fadd
adc
jge
hlt
push
cld
je
sub
leave
push
insl
adc
add
and
fwait
cmp
xchg
ljmp
inc
mov
rcrb
sbb
push
cltd
pop
mov
and
loop
and
push
pop
mov
dec
pop
icebp
sub
dec
sahf
sub
out
push
pop
push
or
push
stos
jnp
add
push
fdivr
les
loopne
nop
rol
aaa
push
nop
inc
inc
das
shll
popf
cmpsl
jns
andb
aad
adc
repz
dec
cmpsl
mov
lcall
daa
cld
cmovae
lret
test
movsb
xchg
andb
xchg
and
cwtl
dec
dec
push
popf
stos
and
lock
xorb
and
and
fdiv
sub
shl
call
jg
cld
mov
sbb
or
add
scas
pop
push
xchg
push
popa
and
fcoms
sub
mov
arpl
inc
out
cli
mov
pop
mov
pop
add
dec
sbb
aaa
arpl
cs
adc
call
popf
mov
add
and
clc
and
sbb
sub
adc
stos
lds
out
mov
cmp
stos
andl
or
adc
cltd
lock
adc
sti
es
cli
or
xchg
out
lock
inc
and
out
jmp
das
ja
movsl
lods
test
test
xchg
pop
jbe
fimuls
and
test
stos
mov
and
push
lcall
add
mov
cmp
mov
mov
loopne
inc
and
adc
imul
jno
add
xchg
adc
add
add
xor
mov
cmpsb
push
arpl
or
xor
xchg
and
adc
call
lock
push
jbe
ja
arpl
and
sti
or
inc
aad
outsb
repnz
inc
push
sbb
or
or
dec
mov
dec
xor
xchg
in
or
and
push
or
adc
addr16
adc
in
add
test
sar
dec
sub
xchg
push
faddl
scas
fs
and
repz
mov
mov
sbb
shll
fmull
sub
arpl
popa
enter
sub
adc
fmull
mov
in
cmpsl
push
popa
or
lcall
aas
shrb
pop
bound
add
out
dec
and
fs
cmc
std
fcomps
rorl
cld
dec
xchg
sbb
add
or
mov
lahf
mov
adc
cltd
mov
jge
stc
push
test
in
push
in
sub
sahf
ja
mov
loop
lock
push
int3
out
cld
cmc
push
imul
cmpsl
call
test
mov
xor
jecxz
data16
add
loope
sbb
jmp
sbb
inc
lret
repz
inc
shll
push
daa
insl
repnz
push
cmpsl
setg
mul
jl
or
movsb
lcall
add
dec
sub
das
loop
or
mov
sbb
add
ljmp
fsubr
and
daa
cli
aad
daa
aas
in
out
sub
mov
bound
sub
loopne
mov
sarl
xchg
stos
out
int
cmpsl
sub
fisubrl
push
int
sbb
jmp
ds
xor
mov
mov
sbb
push
and
mov
adc
cltd
out
pop
mov
insb
repz
rol
pusha
inc
and
mov
push
sbb
push
out
sbb
movsb
ret
lret
sbb
add
in
sub
and
mov
insl
pop
dec
add
or
leave
lods
out
ljmp
adc
sbb
cmpsb
clc
lock
icebp
xchg
sbb
pop
or
pop
mulps
js
inc
aad
repz
scas
dec
sub
test
xchg
jl
xor
ja
imulb
pop
jl
cmp
push
xor
cmp
gs
dec
jl
sbb
sub
icebp
xchg
cmp
inc
je
out
xlat
mov
out
jo
xor
loopne
scas
hlt
sub
mov
into
mov
xor
imul
cmp
mov
push
dec
mov
xchg
out
sti
and
cmp
xchg
mov
add
sbb
sbb
pop
lret
ficompl
dec
mov
nop
sbb
sub
ret
daa
jno
insl
cld
pushf
mov
or
pcmpeqb
xchg
cld
mulb
and
sbb
and
stc
ljmp
sub
and
dec
testb
mov
jae
dec
loope
xor
push
movsl
sub
jecxz
sub
stos
add
jmp
in
ljmp
pushf
pop
in
add
push
daa
mov
js
popf
xor
sbb
out
pop
adc
gs
and
push
xchg
jecxz
addr16
jmp
loop
imul
dec
mov
lods
mov
xor
add
mov
push
test
mov
and
sbb
fcompp
jmp
push
aam
jmp
sub
sbb
sti
jns
jecxz
daa
or
out
fcompl
popf
xor
xchg
cmp
out
mov
sbb
fstps
sub
sub
out
sarb
sti
jl
and
add
jecxz
daa
push
push
pop
xchg
cld
lcall
nop
inc
sbb
lret
aaa
and
arpl
int
sbb
loopne
mov
add
cmp
xchg
mov
outsl
push
rcrb
jae
push
jnp
and
jg
dec
lock
xchg
push
imul
je
or
stc
and
mov
and
push
sub
dec
jp
and
push
mov
and
in
cmpsl
push
jmp
and
loope
mov
sbb
lret
cli
subb
pop
mov
test
xor
enter
cmp
in
mov
insl
inc
daa
adc
cli
jge
sub
sbb
and
push
test
xchg
pop
or
in
adc
aaa
push
arpl
loopne
mov
test
out
push
xchg
insb
lock
adc
js
push
movsb
pop
iret
cmpsl
and
and
mov
arpl
mov
or
scas
sbb
addr16
xchg
and
sbb
negl
or
push
je
rcll
and
shl
test
loop
mov
subb
xchg
std
gs
cwtl
cmp
rol
dec
xchg
sahf
sbb
in
cmp
push
scas
sbb
testb
aam
pop
pop
sub
int3
add
push
mov
icebp
rcrl
daa
jecxz
lock
mov
sub
or
push
push
cmp
sub
sarl
in
or
cmp
movl
inc
cmc
mov
popf
add
mov
xchg
adc
and
popf
js
mov
in
mov
add
sbb
shl
lret
cld
xchg
xor
pop
sti
and
test
stos
ljmp
sbb
cld
scas
imul
dec
mov
and
add
sub
cmc
iret
xchg
mov
pusha
fsubr
out
arpl
inc
and
dec
lcall
dec
test
pop
cmpsl
out
jge
cmp
mov
loopne
imul
mov
add
je
fmull
pop
fsubs
cwtl
negl
test
push
push
rorb
lock
sbb
jns
pop
js
lock
or
mov
push
inc
jo
jmp
insb
call
pop
or
clc
pop
pop
shlb
lods
cs
push
stc
lock
lahf
or
mov
push
iret
add
adc
push
and
aaa
daa
xchg
shll
adc
pop
inc
rcrl
stos
fidivl
push
bound
mov
jge
add
clc
sub
inc
xchg
aam
add
ret
repz
ljmp
adc
call
ret
or
inc
fcomps
aam
in
lret
cmp
adc
decb
cltd
enter
add
inc
testb
dec
addr16
mov
inc
push
push
int
and
test
test
cmp
dec
cld
push
ret
pusha
into
and
add
scas
pusha
jle
push
cmc
xchg
pop
stc
sub
adc
or
inc
jb
pop
imulb
sti
movb
test
push
nop
xlat
pop
pop
cwtl
sub
mov
int
in
push
mov
sbb
scas
test
addr16
icebp
imul
ficoml
adc
enter
mov
or
or
pop
out
pop
sbb
push
and
sub
mov
shrb
call
gs
fmuls
ret
mov
stc
shrb
jo
sti
ljmp
into
ror
lock
cli
or
jl
xchg
dec
and
add
inc
jp
ljmp
mov
outsl
sbb
xor
mov
sub
jp
sbb
push
push
fs
and
test
arpl
jbe
std
pop
dec
and
popa
sbb
pop
enter
mov
mov
push
sub
push
mov
sbb
and
sbb
mov
addb
repz
repnz
stos
cld
iret
fisubl
add
sub
mov
and
stos
push
popa
add
popa
sub
sub
aas
and
add
lret
sbb
and
push
loope
mov
mov
fsubrs
popf
push
test
push
fmuls
fmull
mov
mov
or
jae
and
push
call
int
jbe
pop
daa
fcoms
mov
nop
and
jecxz
push
pop
sbb
scas
cwtl
fsubr
xchg
out
add
cld
movsb
roll
add
js
outsb
pop
sbb
mov
rclb
jge
call
jno
add
subb
fwait
xor
push
out
and
repnz
fmul
and
in
push
pop
mov
punpckhbw
jns
push
and
dec
and
mov
out
loopne
pop
outsl
movsb
sti
mov
adc
adc
mov
cmp
push
mov
lock
movsb
lods
testl
in
sbb
xchg
scas
push
cmp
popa
pop
testl
sti
xchg
xor
or
jecxz
outsl
outsb
and
pop
xor
or
stc
push
inc
sbb
or
or
roll
insb
jl
ds
mov
and
add
add
inc
pop
enter
jne
jmp
pop
lcall
push
sub
add
mov
inc
int3
and
nop
fdivrp
cmp
cmpsl
and
sbb
repz
imul
arpl
in
lcall
fstps
push
fists
mov
push
xchg
cmpsb
mov
cmpsl
inc
adc
ljmp
bnd
hlt
jmp
out
stc
aad
and
test
add
dec
jmp
push
or
cmp
in
shl
daa
andl
and
testb
imul
xchg
push
sub
xor
mov
ret
in
inc
fsubrl
call
or
mov
pop
fimuls
hlt
sbb
aaa
call
push
sub
pop
imul
ret
sbb
in
test
je
repnz
stos
cli
inc
mov
dec
ljmp
jne
pushf
adc
jge
adc
outsl
add
cmp
mov
loop
lock
inc
aam
stos
or
jnp
arpl
and
sub
xchg
or
hlt
lock
lds
sbb
sbb
and
pop
pop
adc
push
or
js
in
nop
movsb
pop
sbb
fcomps
repnz
sub
or
push
dec
push
adc
sbbb
sub
lcall
jo
lods
int3
add
mov
daa
push
ljmp
fsubs
push
sub
aad
movsb
scas
ljmp
mov
mov
testl
mov
adc
pop
xor
mov
js
lock
imulb
je
imul
add
adc
and
test
pusha
or
negb
orl
fdivs
sbb
sbb
and
sbb
loope
push
daa
fcomps
cmp
fcoms
testl
cmp
out
adc
sub
fadds
ss
and
mov
negb
leave
adc
inc
sti
lret
pop
jmp
aam
nop
mov
lahf
or
stos
test
jns
mov
add
jg
xchg
sub
or
out
ret
xchg
sub
push
mov
popa
sbb
jae
xlat
pop
mov
sbb
arpl
mov
jge
insb
hlt
js
inc
sub
push
mov
and
xchg
inc
mov
add
jo
mov
bound
mov
sub
and
sarb
and
sbb
pop
fs
fisttpl
or
push
adc
mov
push
notb
sub
loope
add
mov
fcoml
mov
jne
mov
data16
mov
sub
xchg
clc
adc
sbb
jmp
outsb
xchg
jmp
mov
sbb
in
aam
lcall
push
mov
iret
add
movsb
dec
sarb
jmp
pop
adc
dec
ljmp
aaa
xchg
sbb
aam
lcall
push
mov
ljmp
sub
test
pop
int3
adc
sbb
sub
dec
sahf
aad
push
lock
adc
scas
pop
sar
fidivl
popa
and
jno
mov
sti
aaa
sub
in
sbb
dec
fs
testl
sbb
jecxz
adc
cwtl
push
adc
cld
repnz
and
add
mov
not
outsl
sbb
or
jecxz
pop
notl
loopne
sub
les
sbb
cmp
repz
jmp
lea
sbb
cld
not
xchg
pop
sub
mov
jp
in
add
fwait
or
test
fs
jl
mull
jb
adc
clc
andl
jg
sub
and
sbb
imul
add
rolb
mov
pop
call
dec
call
sbb
es
ds
and
ljmp
dec
or
std
lcall
pop
into
popa
jl
jne
mov
out
iret
and
out
dec
jge
js
icebp
xor
pop
pop
cmp
shr
jmp
repnz
sbb
xchg
mov
and
jecxz
leave
push
cli
and
dec
add
sbb
mov
sbb
adc
pop
inc
push
cmp
fmull
adc
enter
rol
mull
subl
lcall
adc
ret
lret
or
mov
mov
jb
lock
loop
add
cmp
mov
and
sub
aaa
xor
jecxz
jnp
pop
or
dec
cmp
add
xchg
inc
sub
mov
xchg
adc
push
test
and
push
repnz
push
cli
add
jp
ja
lcall
stos
add
inc
sbb
std
cmc
mov
fdivrs
popa
push
sahf
int
add
insb
sbb
movsl
pushf
repnz
sbb
cmp
es
cs
pop
repz
push
lcall
shlb
cld
repnz
pushl
adc
push
repnz
lds
jecxz
dec
and
aad
and
loop
or
outsl
cli
out
loope
out
sti
pop
push
jbe
cmp
push
mov
jmp
dec
or
mov
clc
addr16
nop
ficoms
adc
cld
jecxz
adc
arpl
repnz
mov
in
jno
and
imul
cmp
lds
popa
rol
es
mov
and
clc
or
sbb
or
sbb
andb
pop
or
adc
fmuls
fcos
push
inc
push
sbb
xor
add
mov
cwtl
xchg
int
stc
sbb
xor
fcoml
jecxz
and
sub
ljmp
lods
negb
sbb
mull
inc
cmp
nop
push
lret
push
push
fisubl
push
fbld
mov
sub
in
repnz
imul
lret
in
xor
or
es
cld
cmp
xchg
loope
xlat
aam
push
dec
jo
push
or
mov
jb
pop
shl
fsubrl
rcrb
imul
aad
add
pop
mov
xor
daa
xchg
push
cli
repnz
adc
movsb
sbb
mov
mov
or
imul
pop
les
jecxz
call
rcrl
ljmp
or
pop
data16
je
pop
jl
or
aas
insl
repz
sub
gs
movsb
mov
nop
and
sub
sub
push
fcoms
sub
push
data16
sbb
push
push
icebp
sbb
adc
sub
in
cmp
pusha
popa
sahf
add
mov
sub
mov
test
enter
mov
hlt
js
enter
in
inc
jbe
sahf
cltd
arpl
test
or
and
imul
pop
rorl
or
inc
jnp
iret
mov
inc
call
idivl
or
pop
sti
lods
adc
roll
outsl
push
pop
push
lods
or
jno
mov
inc
add
or
out
inc
and
xor
fcoms
lea
out
jecxz
dec
mov
repnz
mov
lock
jae
push
cmc
pop
or
or
jne
mov
stc
addr16
and
or
sub
subb
jge
xor
pop
and
outsb
add
mov
sbb
push
fsubrl
in
sbb
pop
and
rorb
in
popa
aas
adc
pop
daa
jmp
neg
daa
adc
xchg
xchg
mov
imulb
or
and
ljmp
adc
sub
les
daa
pop
push
gs
cwtl
hlt
inc
xchg
arpl
or
pop
ljmp
aaa
inc
mov
arpl
enter
inc
lret
lods
sub
mov
mov
daa
push
xor
xor
jecxz
sbb
enter
stos
add
xchg
push
dec
cwtl
mov
std
mov
or
ljmp
and
fistpl
test
or
int3
add
fidivrl
jmp
aad
mov
fadds
xor
in
push
out
push
and
xlat
iret
mov
sub
cmp
call
dec
dec
imul
test
lods
out
sbb
push
hlt
inc
fwait
jg
mov
cld
call
mov
in
jae
out
imul
cli
and
in
enter
push
fsubr
adc
shl
stos
xchg
xchg
adc
sbb
fdivs
subl
sbb
or
out
cltd
add
and
xchg
push
sbb
push
loopne
imul
and
popf
adc
lret
add
jecxz
outsl
clc
sbb
push
and
bnd
scas
mov
out
outsb
or
jae
fists
outsl
in
fcompl
movswl
add
js
movsb
adc
in
jl
xchg
or
or
push
lea
inc
imul
pop
imul
jecxz
cmpsb
mov
adc
ljmp
iret
ljmp
sub
mov
dec
xchg
popa
shrb
clc
mov
and
push
ljmp
pop
pop
xor
inc
pop
decb
pop
repnz
pop
std
adc
sub
das
lcall
dec
cmp
lret
ds
aam
cmp
std
dec
int
psadbw
jecxz
and
ficomps
mov
or
sahf
clc
sbb
test
lds
dec
push
call
popa
push
xchg
push
test
sbb
push
mov
movsl
in
mov
sbb
movl
std
push
testb
add
mov
xchg
shll
or
data16
fs
and
xor
add
addr16
xorb
out
lret
out
repz
inc
out
out
loopne
pop
sti
sub
pop
xor
sbb
inc
lods
rolb
andnps
push
popa
and
shl
mov
mov
push
cltd
mov
adc
push
adc
popa
cmp
jge
mov
out
lcall
jo
mov
mov
jl
js
mov
inc
cmp
int
andb
push
arpl
jns
and
mov
fimuls
xchg
inc
push
fidivrl
push
and
jl
jo
and
inc
in
mov
int3
int
lods
sahf
pop
in
mov
arpl
cmp
mov
ret
jge
xor
negb
in
xchg
sbb
aaa
inc
mov
outsb
mov
xchg
xor
cs
icebp
add
arpl
ret
or
xchg
popf
jg
std
mov
and
in
cmp
in
cmpsl
sub
addr16
movsl
insl
addb
ja
pop
clc
pop
fsubrp
xor
sub
repz
in
sarl
sbb
sbb
cmpsl
mov
xchg
insb
mov
cmc
or
aam
sahf
mov
int3
imul
add
and
ficoml
imul
jo
call
in
frstor
lret
sti
jl
in
push
mov
shr
lret
adc
dec
test
mov
in
or
xchg
dec
in
jp
and
das
scas
testl
movsl
lahf
xchg
push
cld
fs
xchg
addr16
in
scas
or
cli
and
clc
ljmp
push
or
push
jnp
mov
push
aad
outsb
push
in
sbb
dec
xor
adc
aas
xchg
and
mov
mov
in
push
sti
movsb
repnz
ss
adc
pop
in
jecxz
add
insl
outsl
shr
repz
cmpsl
cmp
and
and
nop
sahf
push
mov
aaa
sub
shr
mov
jnp
movl
sti
or
data16
cwtl
ret
add
pop
pop
cld
adc
push
mov
push
adc
sbb
jecxz
and
in
jb
cmp
imul
ficomps
xor
add
and
mov
push
out
sbb
fildl
push
adc
test
leave
mov
imul
inc
loop
add
in
in
jge
lods
je
mov
mov
cwtl
xor
pusha
mulb
xchg
out
call
mov
out
push
popa
imul
inc
sbb
mov
stos
ret
cmp
lods
stos
in
in
shl
or
notl
or
shr
popa
das
lods
mov
call
std
fdivs
je
insl
adc
sub
addb
out
jge
mov
out
jno
aad
scas
shr
sub
shll
movsb
out
outsl
mov
out
out
inc
push
clc
cmp
cld
stos
xchg
inc
outsb
in
test
or
mov
test
imul
mov
and
xchg
in
insl
inc
xor
scas
and
pop
sbb
dec
pop
xor
lds
in
test
flds
insb
mov
in
mov
xor
sbb
clc
cmp
stos
or
cld
or
pop
in
movsl
out
xchg
int3
inc
in
cld
test
fcomp
cmp
in
or
aam
jae
in
ss
imul
mov
into
in
adc
dec
nop
jne
pushl
in
push
and
add
or
in
jnp
cmpsb
cltd
push
rorb
xlat
inc
xor
mov
in
enter
sub
subl
rorb
loope
mov
popa
push
dec
out
xor
dec
push
mov
pop
xlat
test
fwait
ljmp
add
and
dec
in
subl
loopne
jno
addb
out
jp
sbb
jnp
ja
pop
jmp
dec
out
mov
rcrb
dec
and
out
pop
mov
sub
pop
into
push
xlat
arpl
adcl
adc
shr
jbe
cmp
in
adc
mov
out
fwait
lea
push
fs
icebp
in
out
lock
mov
insb
push
pop
pop
cmp
cld
add
jno
std
mov
in
push
add
stc
mov
mov
or
jbe
daa
xchg
xor
test
pop
mov
mov
inc
or
push
mov
dec
test
mov
mov
and
stc
or
push
jnp
les
int3
adc
out
sahf
xchg
in
imul
or
dec
in
or
mov
js
adcl
or
mov
in
mov
adc
sbb
lock
imul
test
and
in
mov
movsb
mov
in
addr16
mov
sub
cmpb
mov
scas
push
sahf
in
out
cmp
shr
inc
add
aad
sbb
inc
xchg
xlat
mulb
bound
jge
cmc
pop
fnstcw
aam
arpl
xchg
jne
in
imul
and
test
cmp
in
gs
xchg
pusha
pop
in
out
incl
test
jl
fldenv
dec
pop
imul
or
xor
dec
bound
or
or
in
jae
mov
call
pushl
notb
in
int
lcall
fs
repnz
jo
cld
pop
push
xor
pop
test
mov
ds
ret
jns
in
icebp
inc
push
inc
push
push
lods
int3
pop
call
outsb
xchg
repnz
mov
shr
add
xchg
inc
xorb
in
jg
and
mov
add
popf
ds
mov
cld
test
in
les
or
cs
div
jmp
into
in
mov
aaa
pushl
scas
pop
hlt
push
pop
jge
hlt
and
sub
in
jbe
sti
inc
fnstcw
clc
cwtl
mov
rcrb
fucomi
or
addb
mov
cwtl
push
stc
in
push
insl
mov
in
subl
call
call
leave
mov
in
aam
xor
call
xor
mov
mov
pop
cmp
std
pop
call
mov
test
jb
in
sbb
adc
enter
in
mov
jp
iret
pop
int3
and
lods
into
mov
sbb
in
mov
mov
stc
cwtl
jnp
je
sarb
mov
mov
dec
sbb
in
push
in
dec
out
pop
inc
js
imul
inc
test
fstps
cmc
sahf
pop
in
shll
mov
repz
sti
mull
std
mov
stos
je
ljmp
gs
jecxz
sbb
mov
add
in
les
push
in
shlb
xor
add
inc
repz
out
ja
cmp
ljmp
xor
sbb
in
test
rol
imul
pop
jmp
push
cvtps2pi
jno
fwait
les
push
xor
push
ljmp
call
dec
jle
out
add
movsb
dec
mov
in
mov
inc
popf
in
push
sbb
mov
out
das
pushf
mov
mov
mov
cmp
outsb
push
inc
xor
cmp
or
sbb
lcall
pop
dec
and
popa
in
pop
fwait
fidivrl
jg
aas
sub
repz
in
jns
into
data16
nop
int3
in
mov
adc
test
leave
mov
or
mov
adc
in
xchg
mov
jmp
push
insb
in
mov
sub
push
stos
loope
lock
in
jae
mov
dec
in
cli
daa
mov
fwait
pop
test
in
lret
test
mov
push
mov
push
add
cmpsl
dec
aad
test
cmp
stos
pop
loopne
cltd
dec
add
pop
and
jne
lock
imul
cmpsl
cld
mov
dec
cmp
dec
icebp
sbb
test
pop
or
jo
cmp
test
xlat
xchg
jmp
movsb
orl
push
in
es
into
les
dec
mov
jbe
mov
push
in
adc
ljmp
enter
mov
pop
sbb
mov
insb
or
cmp
das
cli
adc
jne
adc
std
cmpsb
call
es
pop
jns
add
daa
out
in
sub
dec
mov
fistpll
hlt
adc
fidivs
push
push
inc
xchg
sbb
ljmp
sbb
push
in
cld
cmp
push
lods
ljmp
sahf
shr
arpl
test
xor
mov
adc
mov
add
or
adc
in
outsl
stos
nop
xchg
into
orb
and
shl
out
in
adc
pop
shl
in
mov
mov
fsubr
push
xchg
xchg
mov
in
ret
push
push
aad
inc
in
add
jae
pop
aaa
adc
mov
or
iret
orl
insl
push
clc
iret
pop
in
fsub
hlt
jp
xchg
fsubr
mov
cmc
jne
in
mov
or
and
test
xor
mov
or
pushl
in
or
lods
data16
mov
and
lret
in
iret
cmpsb
test
pop
scas
data16
imul
or
mov
jp
or
das
dec
or
in
in
pusha
je
fldl
mov
lcall
loope
aaa
cld
outsl
xor
or
sbb
push
call
inc
sbb
repz
gs
mov
cld
es
fstp
call
mov
pop
in
push
or
mov
xor
lock
sbb
xor
rolb
call
mov
test
mov
in
push
xchg
sarl
addr16
insl
in
add
cs
call
sahf
stos
rorb
or
aaa
sub
ret
pop
pusha
cmp
mov
and
incb
mov
addl
mov
push
fistps
pop
lret
mov
in
in
testb
or
add
mov
dec
xchg
repz
adc
cmp
adc
and
dec
in
jnp
jne
xor
in
sub
mov
mov
ds
test
clc
mov
pop
xchg
adc
xor
imul
sbb
pushw
sbb
aas
dec
int
or
dec
hlt
in
pop
fwait
cmp
in
sub
mov
sbbb
popa
lcall
jmp
mov
hlt
fwait
ljmp
xlat
loopne
lcall
adc
lret
paddsb
adc
lods
out
in
inc
in
scas
cmp
mov
sbb
mov
lds
sahf
andb
cld
pusha
in
jecxz
shr
jge
int3
jg
sbb
pop
add
test
jne
pusha
mov
enter
into
xchg
push
jge
clc
or
sub
test
imul
in
dec
lahf
sti
jno
mov
divb
into
dec
inc
cmpsb
in
ret
dec
ficomps
data16
pusha
push
inc
and
xor
cmp
mov
mov
sub
adc
hlt
sahf
cmp
add
mov
sub
or
lcall
test
in
mov
in
leave
push
rolb
mov
pop
into
je
adc
add
loopne
aad
rclb
in
adc
aaa
cltd
lea
addr16
pop
nop
sub
fdivl
mov
mov
mov
in
fldt
push
xor
loope
mov
in
mov
pop
inc
cmpsl
add
jecxz
push
dec
mov
test
adc
mov
js
xor
lea
in
cmp
aas
sti
adc
es
or
and
in
push
push
inc
nop
scas
sbb
inc
xchg
or
dec
in
test
and
add
in
lods
fidivl
in
jecxz
jnp
lods
push
stos
xlat
imul
cmpsb
push
ret
outsl
es
pop
sub
scas
fimuls
jge
ljmp
in
push
cmpsl
push
faddl
in
sarb
in
jne
cmp
repz
sbbl
fstpt
push
stos
stc
pop
cltd
inc
adc
popf
outsl
dec
in
or
daa
clc
in
je
int
pushf
inc
jge
sub
dec
add
add
movsl
or
inc
sbb
addr16
pop
test
popa
in
jb
push
es
inc
int3
test
pop
dec
sahf
neg
scas
arpl
in
push
out
iret
jle
mov
in
inc
out
adcl
xchg
pop
pop
in
outsb
pop
adc
test
ret
mov
inc
pushf
mov
ret
in
test
popf
gs
jae
daa
in
and
and
cmp
mov
pop
test
cmovno
out
aad
cmpsb
fnsave
in
xchg
or
sub
movl
cmp
dec
out
dec
je
sbb
sbb
bound
lret
aam
test
push
into
mov
sbb
loopne
je
stos
jecxz
lock
in
xlat
pop
xor
ficoms
lret
enter
jno
dec
or
push
ror
lods
pusha
lds
lahf
imul
lea
mov
in
xor
mov
pushf
mov
mulb
jle
or
popa
aas
in
shlb
mov
sub
in
jne
flds
add
and
adc
jns
cmp
loope
push
mov
push
adc
or
data16
test
testl
in
push
test
or
pop
jmp
push
mov
mov
insl
in
cmp
out
icebp
adc
hlt
shr
insb
in
mov
in
pushf
ja
pop
xchg
mov
test
sbb
sti
in
mov
adc
sbb
or
xchg
orb
testb
xor
and
lret
sub
pop
xchg
jge
in
cmp
cmp
dec
or
addl
xor
or
test
loopne
sbb
mov
xchg
pop
lods
sti
shrb
rol
fildl
repnz
mov
add
cmp
add
in
aas
cwtl
pushl
in
lods
cmp
outsl
xor
ds
aad
cs
sbb
mov
je
mov
lock
leave
or
mov
mov
shrb
cmp
outsb
in
in
mov
repnz
jle
mov
popa
imul
repz
fnstsw
test
ljmp
sbb
in
je
ds
in
add
pop
mov
in
jge
mov
mov
add
push
imul
nop
es
and
repz
xchg
lock
aaa
in
and
push
push
add
in
cmp
mov
mov
sbb
imul
jp
shlb
mov
cmp
std
lret
push
mov
pop
cmpsb
and
out
lock
das
fnstcw
adc
xor
movsl
les
and
pop
pushf
daa
das
imul
sti
mov
in
mov
icebp
jmp
mov
outsb
and
fnstenv
sub
pop
and
in
vmwrite
lcall
stos
pop
pop
std
xchg
inc
mov
jg
inc
fiadds
sarb
into
in
lret
nop
inc
or
xor
outsb
in
sub
sti
mov
iret
sbb
out
inc
in
mov
std
push
in
jp
mov
cmpsb
push
mov
cmpsl
ljmp
xlat
lods
dec
jnp
and
add
xor
in
test
adc
in
adc
mov
cmp
lea
sbb
adc
inc
jae
loopne
xchg
cmp
je
xchg
decb
xchg
lds
sub
cmpsl
enter
shr
xor
aas
adc
and
jle
dec
sbb
div
dec
xlat
in
or
sub
pop
or
les
repz
mov
fisubs
rolb
loop
push
in
sbb
push
lret
cmpsb
in
cwtl
insb
sbb
ret
sub
inc
mov
dec
push
fisubrs
cmp
jae
pop
out
or
fcomps
daa
in
dec
cmp
inc
mov
in
call
jae
add
adc
cld
in
lret
aad
adc
push
or
test
in
leave
push
pop
scas
int3
mov
hlt
sahf
in
imul
imul
shlb
xor
lcall
xor
jle
xchg
gs
je
in
out
and
in
ds
jle
cwtl
mov
pop
in
cmp
and
adc
ljmp
enter
jb
iret
in
out
into
jo
aam
in
pop
iret
or
imul
mov
jne
add
jno
mov
sub
cld
loop
call
and
in
imul
in
test
or
pop
push
loop
dec
jo
pusha
adc
push
cmp
add
and
adc
in
or
add
shll
or
subb
jp
cmp
pop
lods
pusha
dec
test
and
lahf
pop
mov
or
adc
sahf
push
scas
mov
cmp
and
movsb
scas
insl
push
jns
inc
in
xchg
push
or
mov
or
outsb
pop
filds
push
repz
insl
adc
mov
in
in
test
push
pop
sar
push
pop
xchg
ja
hlt
les
shrl
int3
dec
insl
jb
movsb
or
inc
dec
sarb
mov
aaa
int3
and
out
in
fcomip
xchg
test
repnz
shlb
cltd
in
dec
mov
imul
lock
lods
pop
sbb
stc
or
push
in
inc
mov
add
mov
xor
sahf
push
sub
insb
faddl
test
in
mov
das
mov
repnz
and
xor
lret
cmp
jecxz
imul
fcmovb
lock
push
mov
sbb
fstpt
push
xchg
das
adc
in
clc
xchg
in
sbb
inc
pop
enter
xlat
mov
mov
fldl
repnz
shrl
mov
adcb
jl
mov
mov
sbb
push
lock
mov
mov
cmp
cmc
in
shrb
push
jp
sbb
cmp
sub
in
les
in
in
adc
jmp
adc
jecxz
pop
sarb
xor
push
ds
test
add
xor
stos
jb
cld
leave
inc
in
shrb
dec
pop
fnsave
xchg
cmp
mov
cli
or
inc
in
pop
dec
test
pop
gs
cmc
jecxz
add
xor
add
fwait
outsl
push
stos
int
call
cmpsb
imul
lret
lcall
dec
adc
mov
push
cmp
aad
ljmp
inc
mov
push
pop
mov
fsubrp
sbb
cmpsb
in
or
bound
push
fsubrs
ss
lcall
call
imul
in
push
add
repz
mov
and
and
xor
call
jle
cltd
in
data16
dec
in
cmp
dec
lret
mov
ret
imul
out
or
in
int3
scas
adc
sahf
add
mov
mov
sbb
in
mov
push
dec
mov
sbb
adc
in
add
xchg
adc
adc
daa
fsubp
lcall
push
push
in
mov
jg
mov
in
cmpsl
sbb
mov
jno
push
pop
sub
xor
imul
sub
lods
xlat
pop
add
addl
dec
jl
es
hlt
inc
daa
jbe
insl
lahf
pop
aas
in
and
sub
enter
xor
in
sahf
movsl
out
es
pop
mov
insb
inc
fbstp
es
cmpsb
mov
movsl
jne
in
add
in
mov
into
in
lds
call
int3
in
xchg
dec
pop
mov
aas
daa
fwait
mov
xor
sbb
and
fisubrs
popa
fdivr
inc
das
in
inc
test
xchg
in
test
jmp
mov
dec
int3
sahf
in
xorb
push
in
sbb
test
sub
inc
mov
pop
dec
ret
mov
xchg
insb
inc
dec
in
in
ljmp
in
test
popf
roll
pop
in
fisttps
pop
jo
mov
in
xchg
sbb
mov
in
lcall
ja
jns
pop
sbb
push
jecxz
fldl
mov
js
dec
cwtd
out
clc
mov
mov
scas
hlt
bound
mov
cmc
xor
in
ret
jae
repnz
jb
dec
in
or
mov
stos
lret
cmp
cmp
in
mov
jl
push
mov
or
push
rcrl
aam
mov
add
movsl
or
sbb
in
das
add
adc
jb
imul
call
scas
data16
and
dec
pop
in
test
fsts
scas
mov
mov
mov
out
jne
mov
in
outsb
xchg
insb
pop
xor
jp
dec
cmp
testl
push
loopne
xchg
and
into
add
movsb
or
lea
hlt
and
call
insl
in
int
in
cs
ljmp
mov
aaa
add
pop
testl
fdivl
sub
loopne
add
shlb
out
out
pop
inc
or
and
mov
cmc
pop
in
mov
push
stos
orb
in
imulb
fs
cmp
pop
stos
repnz
iret
xor
leave
aad
aaa
jnp
sahf
int
ja
adc
movsl
sbb
jl
mov
pop
movsb
sbb
in
fcmovnu
xchg
push
xchg
xchg
movsl
ss
push
jbe
hlt
test
clc
mov
sarl
inc
dec
xor
outsl
shrl
aad
cld
jge
popf
fnstsw
out
or
popa
xor
mov
mov
cli
cmpsl
fldlg2
cmp
push
and
imul
in
lods
inc
jp
jle
mov
in
inc
mov
addr16
movsl
in
sarl
mov
cmp
xor
push
sub
je
in
inc
mov
inc
mov
add
jecxz
mov
aam
fldlg2
jg
rorb
out
jb
loope
inc
hlt
insl
jmp
mov
xor
add
cmp
in
mov
int3
repnz
insl
into
or
pop
imul
pop
outsb
fimuls
jge
inc
xchg
gs
mov
lods
or
dec
dec
in
or
add
ret
sbb
inc
in
inc
inc
mov
lea
sub
ljmp
inc
add
hlt
imul
movsl
pusha
mull
aad
jp
pop
imul
mov
lcall
mov
pop
pushf
or
mov
enter
inc
jmp
add
mov
xor
fadds
mov
out
jmp
ret
cltd
arpl
mov
dec
or
dec
imul
loope
jno
mov
sub
imul
mov
in
mov
xchg
lock
in
xor
outsb
lods
push
imul
in
push
jl
push
adc
popf
loopne
test
je
in
cmp
lods
aam
imul
jmp
cmpsl
add
jae
sub
mov
imul
js
nop
cmp
cwtl
lock
mov
sbb
mov
push
stos
in
popl
or
adc
adc
in
pop
lahf
int
adc
pop
in
jmp
leave
scas
pop
in
push
xchg
lock
out
push
int
imul
mov
cli
sbb
fisttps
or
xor
push
inc
jle
popf
stc
adc
dec
call
hlt
cmp
sbb
and
push
cmpsl
in
int
jnp
dec
in
lds
push
int3
inc
in
add
add
in
mov
ja
mov
fildll
jae
test
pop
push
jecxz
mov
adc
dec
test
hlt
in
mov
mov
mov
adcl
pop
repnz
adc
or
push
xchg
mov
in
xor
mov
in
clc
cld
popf
or
mov
jecxz
adc
and
out
imul
adc
dec
in
aad
repz
sarl
adc
and
in
out
jg
mov
int
out
mov
mov
jp
lock
xchg
sbb
bound
or
sbb
imul
and
js
mov
mov
mov
imul
lret
fnstsw
dec
xchg
in
push
or
test
dec
faddl
cmp
sub
or
sarb
cld
xor
das
push
xor
imul
outsb
lahf
out
in
fcmovnbe
fbld
sbb
stos
inc
inc
push
mov
add
jg
pop
in
pop
punpckhdq
std
test
cli
in
sbb
out
shrl
push
dec
in
xor
popa
pop
or
dec
xchg
mov
push
icebp
in
mov
adc
fsubp
push
test
cmp
jmp
insl
and
in
adc
cwtl
icebp
and
sbb
rcrb
movsb
aaa
xor
add
and
dec
xchg
imul
sti
je
lret
in
mov
fdivs
in
pop
insb
popf
nop
or
inc
mov
mov
mov
jle
push
xlat
jmp
in
test
adc
cmp
sbb
leave
sti
or
test
mov
in
or
mov
fiaddl
in
jge
es
in
scas
sbb
test
fcoms
in
xchg
into
and
dec
xchg
dec
mov
aad
insb
aas
dec
adc
pop
in
xchg
mov
jg
test
or
mov
pop
lock
sub
jnp
push
test
dec
mov
mov
clc
adc
lods
mov
xchg
sub
fwait
sbb
lret
movb
mulb
inc
cwtl
in
mov
loop
xchg
outsl
je
mov
popf
lahf
add
jecxz
fisttpll
out
lds
jmp
sub
add
xchg
cmc
jb
push
pop
add
xchg
push
out
in
lods
es
mov
fstps
sti
cmp
mov
fisubrs
test
imul
sbb
addr16
jno
push
pushf
test
adc
cli
in
fcomip
in
int
bound
fldcw
in
xchg
mov
inc
inc
lret
sub
sbb
gs
in
loopne
shlb
ds
jle
cmpl
inc
in
jbe
shrb
mov
fnstsw
lcall
jecxz
pop
mov
adc
jg
div
inc
in
push
fbstp
into
in
and
ret
iret
mov
push
iret
adc
sbb
dec
insl
gs
mov
mov
mov
cmp
out
push
mov
ret
sub
jo
in
sub
push
jae
or
in
dec
mov
add
push
mov
dec
xor
adc
jno
test
lea
aas
pop
adc
call
jae
hlt
out
mov
pop
dec
inc
call
lds
add
dec
jns
add
call
xchg
sub
repz
mov
and
rcrl
gs
les
ficomps
jbe
call
xorb
in
sbb
or
push
shll
dec
in
jl
jno
je
mov
or
cld
sbb
in
sub
addr16
jne
xor
adc
jnp
leave
stc
pop
push
push
sti
stos
repnz
push
cmp
daa
std
ret
in
or
inc
jp
lret
push
in
sbb
enter
imul
push
xchg
call
inc
iret
mov
ss
js
or
in
inc
scas
xchg
pop
xor
push
imul
repz
xchg
add
add
leave
cmp
lock
pusha
xor
pop
push
adc
sub
sysret
jb
in
mov
daa
mov
or
pop
notl
aam
mov
repnz
jo
in
push
cs
inc
pushf
inc
aad
xor
push
xchg
in
pop
in
jo
lds
pop
filds
mov
jmp
fs
dec
jp
out
pop
adc
xchg
inc
push
mov
dec
enter
inc
imul
cmp
imul
dec
into
and
mov
mov
stos
and
in
call
sbb
scas
call
dec
lods
outsb
in
or
lret
out
cld
in
inc
pop
cmpsb
push
or
in
cmp
mov
sbb
es
in
lahf
pop
sub
in
adc
mov
hlt
in
jo
sbb
in
and
cld
scas
push
cmp
mov
in
push
sub
aam
sbb
add
outsb
stc
or
xor
fistpll
mov
adc
lea
and
in
push
rclb
lods
movsb
sar
out
push
loope
ss
hlt
nop
mov
movsl
insl
push
in
popa
repnz
icebp
dec
in
nop
rol
push
in
cmpl
lcall
loop
inc
sub
popf
sti
mov
inc
addr16
imull
pop
aam
dec
imul
enter
cmp
mov
xor
lcall
in
out
cmp
cmp
jle
leave
in
or
pop
xor
in
adc
cmp
test
push
fwait
sbbl
xchg
jl
fistl
or
ss
jae
outsb
mov
das
cmc
mov
xchg
es
aas
popf
or
and
outsl
xor
mov
and
aad
aaa
or
lret
test
and
dec
pop
mov
sbb
aad
mov
pop
jle
jne
in
inc
or
sbb
aaa
in
rorl
stos
push
in
cmp
enter
fistpl
inc
in
gs
sub
ret
in
jecxz
loopne
jge
sahf
adc
ds
shll
shlb
xchg
and
out
out
pop
mov
mov
or
and
push
in
repnz
test
out
test
ljmp
fnsave
in
jno
mov
inc
imul
mov
mov
in
inc
cmpsb
and
repz
pushl
sbb
fmull
inc
pop
sahf
pop
sbb
dec
scas
ljmpw
movsl
sub
sub
fucomi
rorb
movsl
jne
bound
in
inc
fildll
add
in
push
daa
lcall
leave
xchg
pop
add
popa
in
jg
negl
es
into
in
adc
in
xor
fiaddl
iret
pop
push
aaa
cltd
mov
mov
dec
xchg
mov
push
mov
push
icebp
pop
mov
xor
jbe
inc
insl
outsb
in
dec
sti
dec
test
fs
es
mov
push
faddl
in
and
adc
scas
in
lods
fimuls
dec
in
xor
adc
lds
dec
lea
mov
jns
test
push
add
xchg
leave
std
dec
cmpsl
movsl
add
pop
ja
sbb
dec
adc
sub
outsl
imul
sbb
in
fistpll
sub
in
out
xchg
xlat
daa
xchg
jnp
mov
sahf
das
push
adc
loope
xchg
in
push
jbe
in
dec
lcall
cmpb
jmp
inc
imul
push
push
and
lods
lock
mov
insb
in
or
push
in
cld
push
aam
mov
jne
das
nop
push
scas
mov
stos
stc
sahf
insb
sub
in
dec
stos
lcall
push
int
sbb
jmp
inc
sbb
test
sub
inc
in
add
pop
adc
pop
fildll
insb
sub
xchg
in
push
imul
in
jnp
or
xor
push
xor
push
repz
mov
inc
adc
xchg
mov
xlat
xchg
push
mov
mov
icebp
ret
aaa
pop
add
pop
dec
jecxz
and
or
pop
xchg
sub
dec
lea
ja
imul
mov
ljmp
out
mov
or
clc
in
xchg
popa
inc
out
sbb
xchg
in
cltd
in
mov
push
sbb
hlt
fs
aam
fstpl
cld
popa
fxch
imul
sbb
repz
stos
in
jnp
pusha
add
cmp
lret
fnstcw
rorb
jno
or
imul
data16
in
fimuls
out
push
mov
jp
inc
jo
mov
in
int
lret
insb
jae
enter
lahf
lea
in
mov
push
mov
sbb
and
and
cmpsb
add
int3
push
xchg
pop
push
movsl
adc
fsubrl
add
sarb
push
cmp
in
mov
xchg
in
push
out
push
in
mov
cmp
sbb
hlt
in
lods
loope
shrl
outsl
xor
jns
iret
rep
sbb
daa
shlb
pop
jl
in
int3
cmp
lret
xchg
in
insl
int
xchg
mov
sti
in
repnz
mov
sub
cwtl
push
add
mov
pop
faddl
mov
xor
test
push
inc
inc
gs
cltd
sbb
sub
repz
mov
jo
jbe
test
call
xor
in
mov
inc
xchg
push
fcmove
lods
in
sbb
add
mov
jo
cmp
or
sbb
and
enter
mov
in
aas
lods
add
dec
and
mov
cmpsl
in
movsb
and
mov
cmpb
add
adc
daa
mov
mov
dec
cmp
mov
push
in
or
test
jle
repz
inc
cld
in
sbb
lret
rcll
dec
mov
mov
and
cltd
loop
jns
je
push
in
or
and
sbb
in
lods
jecxz
shl
jge
popf
in
outsb
ds
mov
loop
cld
sbb
jb
add
shr
aam
mov
inc
bound
xchg
cmp
pop
es
call
leave
repnz
test
and
cmp
sbb
sbb
xor
jno
pop
test
inc
push
sahf
ficoml
in
jg
and
ss
push
xor
loopne
gs
fyl2xp1
cld
push
mov
jmp
inc
in
inc
xor
ljmp
pop
movsl
sub
test
xchg
inc
or
sub
pop
pop
out
jp
dec
mov
fcoms
and
lcall
xchg
pop
push
sub
mov
jg
inc
outsb
push
and
sbb
and
out
and
xor
add
and
cltd
clc
stos
dec
add
std
pop
jns
mov
mov
je
push
xor
xchg
sub
fisubrs
loope
in
adc
int
mov
les
mov
fs
test
jmp
lcall
mov
movsb
mov
or
jecxz
adc
int3
shl
sbb
incl
incb
inc
xchg
cmpsl
outsl
pop
in
dec
pop
adc
in
sbb
mov
mov
cmp
push
cmc
xlat
cld
out
subl
call
sbb
loopne
arpl
xchg
pop
push
add
inc
dec
xor
xchg
push
dec
andb
in
sbb
mov
jae
imul
mov
mov
in
imull
push
and
jnp
out
sar
in
fmulp
cmp
pop
mov
in
push
daa
pushf
leave
ret
xchg
int3
in
sbb
push
jno
lret
das
adc
or
movsb
inc
dec
imul
loope
sbb
pusha
pop
mov
dec
nop
in
int3
sub
adc
arpl
inc
cli
push
push
cmc
mov
in
mov
adc
inc
adc
lcall
popf
in
call
aaa
and
ret
jne
and
lods
ss
pushf
in
add
and
imul
xchg
dec
or
shr
pmulhuw
mov
in
and
cld
imulb
aam
int
out
mov
jp
dec
inc
pop
insb
clc
or
push
or
gs
push
mov
push
mov
push
aam
nop
jnp
in
xor
imul
push
in
add
sub
in
loopne
pusha
inc
fstpl
test
or
add
dec
or
ror
push
sub
mov
fsubs
jno
or
ja
in
mov
mov
in
das
add
xor
push
push
pop
frstor
in
adc
mov
outsb
or
das
in
mov
jo
pop
nop
push
cmp
inc
loopne
mov
in
imull
push
in
popa
pop
push
fidivl
jecxz
pushf
in
xor
xor
in
nop
mov
xchg
cmp
mov
jp
fldlg2
pushl
icebp
jecxz
push
in
out
add
push
pop
and
pop
es
shl
ret
mov
aaa
out
icebp
fsubrs
rcr
mulb
add
pop
stos
pop
cld
rcll
jecxz
stos
in
xchg
fwait
mov
iret
sti
jae
in
mov
xor
cwtl
cmpsb
in
in
pop
imul
dec
mov
jle
jg
push
xchg
push
cmpsb
in
cmpsl
fsub
xchg
in
mov
pop
stos
repnz
or
nop
dec
xor
ja
call
int3
dec
pop
div
pusha
sub
or
test
sbb
in
enter
mov
std
clc
jmp
dec
mov
dec
push
int3
ffreep
push
and
imul
sbb
sub
adc
sbb
mov
mov
popf
or
in
jmp
das
fisttpll
in
inc
test
mov
outsb
sbb
cltd
leave
push
mov
push
push
call
xchg
loop
cld
xorb
loope
test
xchg
jecxz
out
jge
mov
fadds
in
and
scas
icebp
jb
std
xor
out
pop
sbb
pushf
xchg
mov
outsl
push
scas
in
stos
or
pop
in
adc
cmp
in
adc
pusha
icebp
cs
or
or
test
mov
pop
sahf
push
int3
shr
lods
mov
test
cmpsb
mov
inc
add
fs
leave
fstps
mov
cmpsb
in
addb
inc
sbb
add
test
pushf
stos
xlat
icebp
sub
in
dec
jmp
call
out
push
stc
in
push
in
dec
fsubrs
mov
add
cld
cmpl
inc
fcmovbe
popa
repz
cmp
insb
ljmp
add
jae
enter
int
in
cmp
stos
dec
push
pop
and
es
mov
xchg
mov
mov
mov
sub
inc
test
add
jno
hlt
xor
stos
in
add
cmpsl
aad
pop
sbb
hlt
xor
in
xchg
out
out
push
inc
mov
jge
data16
in
loopne
test
in
jecxz
sbb
in
mov
sahf
out
lds
xchg
sbb
in
push
sbb
movsb
in
adc
mov
test
cld
xlat
andl
sub
pushf
icebp
leave
es
add
mov
sbb
in
ficomps
xor
adc
in
in
shll
push
in
xchg
inc
out
inc
jno
mov
insb
popf
es
cmp
cld
rorb
test
mov
cli
test
mov
sub
xchg
and
test
push
mov
daa
mov
push
int
in
cli
popl
push
fucomp
pop
pop
add
in
push
or
test
in
mov
aad
icebp
fbld
mov
pop
pop
aaa
sahf
push
fisubrl
fmul
xor
leave
cli
fisubrs
xchg
or
mov
in
jbe
sub
mov
jb
or
lahf
or
xchg
in
push
inc
mov
loope
mov
lods
in
popf
and
lret
jno
test
hlt
jo
into
xchg
outsl
call
sbb
ud1
sti
aad
and
scas
das
in
ljmp
pop
ds
sub
gs
out
pop
xor
mov
mov
call
out
fnsave
in
bound
mov
mov
xchg
out
insb
in
bound
mov
stos
sahf
or
xlat
in
lcall
decb
jl
mov
dec
jns
hlt
in
or
xorl
or
mov
mov
or
push
in
test
fnstsw
in
push
lahf
sub
fs
repnz
lret
in
ja
adc
rcr
subb
and
sbb
scas
add
test
jp
or
out
push
or
xor
outsb
in
shll
lock
push
rorl
mov
xchg
cmp
in
adc
and
mov
mov
mov
mov
hlt
pop
push
insb
rorl
std
adc
in
push
rcrb
in
loop
sub
add
xor
adc
sbb
test
sub
in
mov
insl
and
mov
xchg
in
push
cwtl
loope
in
pop
xchg
pop
in
jne
push
dec
nop
mov
push
imul
in
call
push
lds
cmp
jno
or
and
jnp
in
sti
xor
mov
inc
jp
dec
sbb
pop
xchg
out
sbb
fcomi
pop
pop
xchg
mov
jb
jae
stos
fbstp
call
loop
hlt
adc
pop
lcall
mov
in
or
sahf
push
and
cmp
mov
aaa
jmp
loop
cwtl
rol
lock
inc
in
test
mov
push
repnz
clc
lahf
mov
je
sbb
in
lret
sbb
lods
in
sahf
filds
inc
cld
xor
call
xorl
pushf
pushw
jo
imul
jge
mov
data16
dec
inc
in
cld
shlb
in
jb
mov
jmp
enter
mov
shl
in
mov
cmp
movsb
imul
popa
mov
cs
test
mov
mov
clc
ds
daa
jno
call
sub
push
in
sub
jg
imul
jne
add
loopne
fld1
xchg
cli
mov
adc
mov
int3
mov
fistl
in
xchg
cmpsb
jmp
imull
sbb
sub
in
test
fcoml
pop
dec
cmp
int
mov
sarb
jg
enter
pop
jl
repz
dec
nop
push
mov
push
adc
iret
call
xchg
jo
in
lret
mov
in
dec
adc
push
mov
mov
in
popa
ds
jae
dec
lahf
sarl
inc
pop
movl
mov
test
imul
out
arpl
stos
enter
jns
xchg
and
in
adc
add
in
addb
jns
dec
and
pop
daa
in
inc
lds
decb
mov
ret
in
jg
cmp
in
push
xlat
mov
pusha
subl
adcb
les
addr16
in
push
or
adc
and
cmpsb
fwait
push
in
xor
push
ret
out
jne
cmc
push
mov
in
out
cmp
std
in
sbb
mov
cmpsb
es
push
dec
mov
add
inc
in
repz
stos
pusha
or
pop
push
in
insl
lods
daa
add
jg
and
outsl
in
push
or
repz
ficoms
ret
jp
shr
cli
inc
fdivl
push
lret
fbstp
mov
xor
loope
push
or
dec
cmp
jle
aad
adc
dec
fisubs
cli
or
and
jae
pop
cmp
lret
or
fcoms
adc
cli
lea
pop
call
cmp
mov
push
gs
shrb
addr16
test
cmovnp
aad
sub
ja
imulb
pop
movsl
outsb
push
add
and
mov
xlat
dec
sbb
mov
and
mov
frstor
in
lods
aam
out
xchg
int3
out
and
and
pop
push
cwtl
pusha
or
xlat
adc
lahf
jl
popa
or
popf
pusha
mov
mov
in
movsb
cmp
add
mov
in
dec
mov
sbb
jmp
clc
mov
lahf
pop
in
shlb
adc
mull
stos
jo
mov
push
adc
inc
pop
and
imul
push
scas
push
cld
mov
ljmp
pop
or
in
cld
or
xorb
adc
inc
xchg
mov
ret
popa
in
xor
xchg
rcrb
dec
movsb
in
scas
jecxz
push
ret
hlt
imul
shrl
push
mov
icebp
pop
sub
lock
mov
aaa
or
clc
or
in
dec
jns
xchg
push
loopne
in
int3
sub
mov
lret
cwtl
sbb
notl
insb
shlb
sub
aad
pop
pushf
push
in
in
add
push
outsb
nop
xchg
xor
push
int
hlt
sbb
leave
insb
les
jnp
mov
cmp
jb
lock
and
inc
sbb
in
dec
push
and
sbb
xor
sbb
int3
mov
es
xlat
aas
sahf
outsb
int
call
sub
gs
xor
sbb
cmc
mov
adcb
jns
lock
mov
mov
cwtl
in
inc
in
ljmp
jle
popa
pusha
inc
or
in
out
sbb
xor
es
push
mov
or
gs
iret
add
loop
sbb
je
fldcw
sbb
out
in
add
adc
and
test
js
push
or
outsl
stos
in
mov
jb
mov
xchg
inc
xchg
jae
out
and
jnp
es
mov
cmp
jmp
mov
loopne
inc
pushf
and
mov
imul
gs
sbb
adc
in
inc
sbb
call
in
mov
mov
cmpsb
out
push
jmp
iret
add
lcall
inc
imull
mov
aas
dec
callw
in
stc
rclb
test
ljmp
ljmp
mov
in
cmp
fsubs
inc
push
lcall
adc
cs
mov
flds
inc
xor
repz
dec
jmp
fmul
loopne
mov
testb
push
daa
inc
cld
push
jns
cltd
into
in
cld
inc
dec
cmpsb
cmp
mov
jl
xchg
push
repnz
sub
and
test
dec
popf
mov
imul
mov
test
xchg
xor
push
rol
gs
jns
lea
jl
adc
jae
loopne
xchg
jmp
mov
in
push
lds
xor
sub
xchg
hlt
pop
in
js
sahf
and
push
fwait
inc
in
sub
pop
inc
xlat
sbb
xor
aad
dec
push
clc
and
es
in
les
jbe
nop
adc
xchg
adc
mov
and
fwait
inc
fisubrl
and
loop
cmpsb
jmp
jecxz
dec
insb
cld
mov
data16
aaa
lods
inc
mov
jne
shl
mov
jae
dec
call
stos
cmpsl
loope
pop
cmpsb
inc
xchg
in
daa
push
pop
push
int
outsb
adc
mov
in
add
pusha
push
fisubrs
dec
in
mov
sub
mov
add
ret
or
out
pop
cmpsl
clc
cltd
in
inc
pop
add
les
hlt
arpl
cwtl
cmp
mov
ss
subl
push
pop
cwtl
scas
nop
adc
out
inc
ret
into
xchg
aas
icebp
in
dec
inc
adc
mov
in
sub
sbb
xchg
test
push
pop
and
and
call
mov
idivb
jb
sahf
and
ja
adc
mov
test
push
out
cmp
mov
mov
fsubp
cmpl
bound
inc
in
inc
cmc
or
in
fadds
lock
mov
cld
sbb
add
pusha
cmc
jns
decl
or
jl
cmp
dec
sub
in
loopne
std
jbe
test
cld
or
fmulp
pop
dec
cld
jp
cmp
das
mov
enter
mov
fucom
sbb
in
mov
imul
xor
insb
paddsb
push
adc
mulb
jp
xchg
lods
scas
lahf
cmp
jns
in
insl
push
push
jp
sbb
fcoml
or
rdpmc
in
imul
shll
dec
adc
call
fnsave
shlb
stc
mov
cli
dec
pushf
int
in
out
cwtl
shl
mov
insl
test
inc
push
cs
adc
sbbl
stc
mov
aaa
shrb
push
pop
in
or
fldcw
and
push
mov
in
sbb
cwtl
push
fmuls
in
or
mov
mov
dec
xchg
push
push
in
xchg
sub
andb
cmp
mov
or
xor
pop
in
shr
or
gs
fcmovbe
insb
subb
aas
pop
hlt
add
int3
sbb
fldt
test
imul
or
sbb
stos
sti
enter
mov
leave
aas
scas
in
idivl
lods
sbbl
outsl
or
mov
mov
mov
lods
sub
popa
cld
pop
mov
lock
cmp
outsl
insb
push
mov
shrb
lods
push
jns
jle
cmc
ret
xor
pop
in
shrl
xor
mov
ljmp
popf
loop
in
cmp
jo
adc
fsubrs
add
jecxz
int3
add
ja
in
cmpsl
mov
dec
xor
je
push
out
sbb
mov
cmpsl
out
push
in
addb
jmp
stos
cmp
addr16
jns
cmp
shr
push
cmc
test
aam
imul
push
rol
fcmove
loopne
jno
pop
stc
inc
pusha
outsl
aas
lcall
or
in
aaa
dec
popa
int3
or
jmp
adc
mov
in
and
sbb
pop
mov
into
push
in
jecxz
push
sub
cld
stc
in
push
jmp
fimuls
movsl
pop
xchg
in
push
inc
out
sub
sub
in
data16
sbb
lcall
sbb
mov
jg
mov
inc
in
lahf
ljmp
in
out
mov
nop
js
fidivl
push
das
fsubrp
iret
cmpsb
shrb
and
std
in
xor
xor
pop
mov
or
sub
aas
in
jbe
aad
and
fsubr
movsb
dec
mov
movsl
in
js
fists
test
pop
call
es
and
in
and
fs
adc
push
push
loopne
fisubl
ljmp
sbb
loope
in
dec
cmpsl
push
cltd
and
in
mov
addr16
inc
js
and
cmp
adc
and
dec
dec
lods
xlat
dec
jle
inc
cmp
int3
in
mov
rcr
xlat
inc
icebp
jbe
sub
ljmp
sbb
ss
andb
push
cmp
or
push
in
shrb
cmp
cld
lret
mov
adc
xchg
lock
mov
adc
stos
ljmp
shlb
movsl
daa
sbb
in
push
sbb
loope
in
pusha
aas
sub
jnp
xor
pop
inc
xor
setno
jmp
adc
and
pop
lret
mov
in
inc
int3
adc
sahf
je
in
push
arpl
fs
pop
paddsb
mov
add
orl
imul
ret
cmpsb
jle
out
push
inc
dec
imul
in
popf
int
mov
xchg
pushf
push
and
and
pop
in
add
addr16
in
dec
nop
aad
jae
ja
in
push
sahf
pop
std
pop
lcall
jmp
mov
and
lock
shr
std
out
push
xchg
scas
das
and
or
pop
xlat
pop
aam
in
adc
outsb
imul
cmpsb
and
xchg
stos
pop
out
pusha
xor
fdiv
jmp
push
lret
jbe
jl
fcomps
dec
inc
call
jmp
cltd
in
test
pop
pop
data16
in
or
sar
movsb
mov
push
das
add
test
imul
ljmp
scas
xor
das
jo
in
jns
push
pop
pop
push
and
push
dec
xor
mov
mov
in
fcompl
insl
bound
xor
sbbb
cmp
pusha
call
into
lock
shr
fmull
xor
pop
call
repz
clc
lds
jecxz
bound
ficomps
xchg
shr
arpl
mov
in
add
jno
add
mov
mov
xor
gs
mov
pushf
std
pop
cwtl
xchg
mov
aad
or
and
mov
test
mov
in
jge
push
test
enter
push
loope
fstps
in
cmp
rclb
les
jp
in
xor
hlt
nop
jmp
testb
mov
xor
in
lods
test
lret
jne
fstl
dec
sbb
sbb
cmp
in
pop
in
andl
aas
fstpl
dec
call
jo
int
jbe
in
mov
hlt
and
or
mov
orb
imul
inc
lods
lock
cld
mov
mov
leave
cmp
sub
test
cmpb
scas
in
mov
in
sbb
cmp
jb
and
mov
pop
in
ja
imull
mov
imul
in
gs
in
add
pop
loopne
jecxz
in
shll
mov
fidivrs
in
rcrb
jb
mov
in
inc
testb
in
mov
rorl
xchg
mov
and
fimull
test
dec
adc
bnd
in
movsb
dec
imul
cmp
cwtl
jno
addr16
inc
movsl
movsb
or
mov
in
sbb
dec
sub
mov
shl
call
push
adc
jmp
mov
pop
test
in
xor
jb
imul
jne
pop
stc
inc
pusha
in
pushf
mov
mov
in
stos
or
sub
mov
sti
in
jg
cwtl
test
mov
into
inc
jo
nop
xlat
test
or
mov
iret
mov
jecxz
pop
add
std
stos
mov
mov
call
jae
mov
and
sbb
cmpsl
sub
scas
xchg
dec
push
add
add
in
in
mov
test
test
in
mov
cltd
adc
mov
add
lea
ss
dec
fidivrs
cmp
test
inc
jmp
bound
cli
mov
jp
adc
movsl
cmpsl
gs
fmul
dec
dec
mov
cmp
xor
pop
cmp
aaa
dec
int
sbb
jl
pusha
mov
dec
in
es
ds
sub
lret
mov
in
sub
jmp
ret
in
mov
and
out
cmp
fs
jbe
test
shll
cli
in
data16
push
pop
push
loope
std
das
sbb
adc
and
stos
in
xchg
daa
mov
out
in
int
and
in
push
into
fcmovu
add
int
dec
mov
jns
out
pop
adc
iret
dec
test
out
cli
jno
pop
scas
add
int3
pop
clc
in
jmp
in
cwtl
cmp
mov
jmp
adc
jb
ret
xor
inc
in
test
gs
imul
mov
add
mov
push
popf
mov
imul
paddsb
test
out
in
xor
mov
sub
or
and
dec
in
mov
push
clc
push
and
jp
push
jle
in
stos
mov
rcl
nop
ficomps
rolb
and
jnp
mov
call
outsb
mulb
testb
sbb
sub
lcall
ret
push
js
sub
in
repz
movsb
or
call
add
adc
enter
jo
popf
xor
jnp
push
mov
mov
imul
jo
xor
push
mov
or
sbb
add
push
repnz
push
and
out
cmp
sbb
and
shr
cmp
sarl
mov
loope
add
repnz
shlb
in
scas
lds
in
es
inc
mov
shll
add
sbb
and
repnz
and
push
gs
adc
cmp
loope
xor
nop
cmc
pop
test
sbb
repnz
jo
push
aam
in
cmp
into
aad
pop
jb
in
cmpsb
or
fs
adc
mov
xor
push
rcr
in
mov
addr16
cmp
mov
and
in
adc
xor
out
in
or
out
ficompl
adc
jns
je
cmp
fldt
pushf
or
orl
jl
and
enter
mov
dec
cmpsl
mov
and
out
mov
outsl
cld
call
decl
and
push
mov
andb
popa
jge
and
inc
mov
mov
mov
in
mov
lods
mov
iret
mov
xor
push
mov
xor
mov
cmp
jns
ja
dec
loop
xchg
das
jnp
push
cmp
add
jecxz
fnstenv
ds
add
pop
in
in
rcrb
subb
out
mov
call
arpl
cmp
loope
or
add
aaa
adc
test
imul
cmpb
sbb
aaa
push
leave
jbe
in
inc
call
testb
in
pop
mov
jmp
lea
push
gs
lahf
jnp
cmp
inc
call
mov
ljmp
test
adc
test
inc
jmp
mov
push
lcall
loop
cmp
scas
gs
sbb
cmp
insb
pop
mov
fsubrp
bnd
xchg
filds
in
adc
push
add
xchg
dec
call
mov
cmc
mov
in
sar
iret
add
in
mov
push
pop
std
fstp
leave
in
mov
pop
mov
in
in
pushw
bound
add
dec
es
xor
int3
add
in
push
xchg
lret
xor
push
mov
or
pusha
scas
adc
into
sub
push
dec
mov
call
scas
cmpsl
jo
jle
ljmp
mov
pop
js
ror
cmp
in
jp
imul
stos
xlat
ljmp
jae
mov
aaa
es
push
inc
add
lret
in
sbb
mov
test
add
in
lods
fwait
add
push
mov
in
push
out
stos
jne
mov
insb
mov
sub
cld
and
jne
sub
push
popf
adc
or
jnp,pn
stos
xor
pop
sbb
daa
in
add
sub
cli
xchg
inc
push
in
popa
mov
dec
in
sbb
jge
mov
xor
imul
movsl
mov
es
push
popa
and
push
and
loop
sahf
pop
lock
mov
cli
fimuls
cld
cltd
orl
xor
sub
call
jae
out
xchg
and
and
mov
dec
in
mov
popf
in
cmp
pop
sbb
cmp
mov
sub
or
in
pop
cmp
dec
sbb
aad
ret
pop
or
pop
push
xchg
vmovaps
out
test
testl
push
loopne
xchg
out
movsb
xchg
cmp
scas
dec
and
aam
mov
popa
shrl
inc
in
mov
fdivs
in
gs
fidivrl
int
ljmp
imul
jl
js
dec
mov
in
fmuls
aam
in
mov
xchg
shr
pop
or
or
cmpl
cmp
je
cmpb
frstor
in
push
fs
cmp
adc
movsl
sbb
in
add
bound
lods
scas
dec
in
daa
jns
lahf
shrl
inc
push
in
push
pop
and
push
cli
xor
movsb
in
inc
roll
imul
imul
lods
sbb
hlt
in
sahf
jo
shll
push
daa
cs
loopne
icebp
in
xor
cmpsl
mov
aaa
mov
lret
in
and
imul
cmp
stc
sub
xor
mov
lea
pop
and
mov
adcb
test
pop
or
in
adc
mov
in
inc
pop
out
or
adc
in
inc
repnz
jno
leave
push
xor
fisttpll
mov
or
push
in
outsb
dec
or
fildl
xchg
in
out
inc
icebp
ss
cmpsl
sbb
or
bnd
aas
in
lahf
int
pop
lods
adc
lods
in
inc
push
pop
outsl
push
push
std
and
dec
das
inc
mov
cmpb
popa
imul
fwait
lock
sub
mov
inc
sarl
cmpsb
stc
xor
repnz
lods
in
call
cmp
mov
or
mov
cmp
scas
imull
pop
inc
and
fwait
gs
enter
or
in
add
adc
dec
ds
xor
add
out
cli
jb
xchg
and
push
sub
jmp
cmp
and
sbb
or
pop
xor
test
push
in
fwait
imul
fcmovnb
clc
movsl
adc
imul
rcll
push
fisubrs
hlt
cmpsb
cld
jbe
dec
in
add
add
lds
in
outsl
pop
push
sbb
cmp
mov
xchg
in
pushf
repz
push
pop
mov
push
jmp
pop
test
jns
or
jno
fmuls
scas
lock
push
sbb
rcll
out
stos
mov
pop
repz
in
stos
nop
dec
push
enter
add
iret
push
int3
adc
dec
ja
and
std
cld
adc
push
xor
in
mov
dec
cld
popf
imul
cli
sahf
nop
jae
daa
dec
mov
add
or
outsl
in
lds
pop
test
fcomip
adc
mov
jb
int
cli
dec
xor
insb
adc
adc
loopne
cmp
xorb
in
lock
jnp
jae
pop
mov
cltd
mov
adc
testl
pop
js
xchg
out
inc
test
adc
sub
stc
ss
sub
and
enter
insl
jge
in
lods
push
jmp
es
ficoms
out
add
mov
insb
and
out
cmp
cld
pop
jb
in
ja
int3
jne
fiaddl
mov
rcrl
loop
test
or
negb
pop
in
mov
pop
int
push
mov
jecxz
movsb
push
movsl
addr16
les
xor
in
in
or
movsl
pop
adc
fistpll
test
jae
imul
mov
jmp
sahf
push
push
mov
cld
mov
das
jmp
inc
push
dec
andl
out
jbe
adc
sub
vmread
roll
insb
mov
in
ret
imul
fsubrp
pop
cmpb
mov
add
xchg
or
lock
xchg
stc
push
sbb
cmpsb
pop
loop
push
jns
clc
dec
mov
pop
mov
in
cld
mov
xchg
in
mov
stos
inc
cmc
in
pop
fimuls
sub
iret
xchg
jl
imul
lea
std
add
adc
stos
sbb
sub
ljmp
xchg
in
xor
dec
cmp
dec
cmp
or
or
testb
add
push
add
rcr
call
lock
clc
cmpsb
das
in
mov
in
aad
sahf
fucomp
mov
sbb
push
dec
adc
mov
scas
pop
out
aas
imul
test
and
or
xor
mov
hlt
rcll
in
fdivrl
jbe
outsb
inc
dec
stos
in
xor
mov
inc
hlt
cmp
ror
inc
xchg
adc
mov
sbb
call
movsb
daa
mov
cld
ds
mov
lods
rcr
in
xchg
jo
mov
cs
insb
clc
in
icebp
xchg
adc
shlb
mov
shll
in
pop
aad
dec
in
cmp
jb
push
dec
imul
sti
sbb
mov
in
cwtl
inc
fiaddl
add
mov
dec
bound
dec
xor
shl
or
xchg
in
popa
loop
xor
bnd
mov
int3
mov
sub
dec
mov
or
in
daa
and
fnstsw
icebp
insb
pop
sub
test
xchg
inc
in
mov
ss
sbb
call
lock
and
in
aas
scas
push
addl
lods
cwtl
and
in
xor
sub
and
daa
xlat
sbb
in
fbld
cmpsl
daa
lock
test
mov
in
push
cmp
mulb
hlt
inc
pop
sub
xchg
push
repnz
fwait
in
sbb
lret
mov
cmp
add
notl
cltd
push
je
ds
gs
icebp
aad
add
test
mov
hlt
mov
add
push
mov
jb
inc
inc
fwait
or
pop
pop
test
add
cmp
sub
pusha
cmc
test
in
fstpt
daa
imul
and
orb
inc
xor
xchg
in
push
mov
aas
in
test
cmp
add
sub
inc
into
and
ljmp
imul
pop
js
jmp
push
cmp
movsl
and
aad
in
add
in
xor
jbe
in
pusha
arpl
dec
in
fistl
pop
pop
xchg
mov
pop
addr16
inc
jmp
jae
repz
leave
nop
dec
test
mov
jne
in
lahf
add
cltd
bnd
test
add
push
sahf
ljmp
jmp
sub
inc
in
imul
bound
jae
cmp
mov
add
out
cld
mov
ss
test
mull
xor
in
outsb
and
add
test
loopne
fidivrs
push
jmp
pop
add
mov
les
sub
in
sub
xchg
js
lret
inc
in
cmp
pop
sub
xchg
push
in
xlat
inc
inc
out
sbbl
ds
es
in
clc
les
stos
pop
pop
inc
outsb
add
packssdw
addr16
and
js
push
add
push
and
jns
xor
push
addr16
in
aad
out
jne
pop
or
push
push
xchg
cmp
add
call
loopne
mov
negb
pop
sbb
cmpsl
and
adc
fstl
xchg
cli
movl
fiadds
in
and
push
fisttps
in
movsl
test
pop
fcomps
scas
push
or
in
int3
sti
fwait
aad
test
push
data16
popa
out
cmpsb
in
mov
add
addl
mov
jle
push
pop
cwtl
test
inc
cs
ret
cmpsl
dec
nop
dec
popf
in
in
pop
sbb
and
bound
dec
xor
data16
mov
jmp
add
sub
cld
inc
pop
pop
pop
repz
in
stos
adc
out
call
xor
dec
sti
jge
in
clc
jmp
xor
bound
flds
cmc
jb
imul
lds
xchg
call
lock
stos
jno
or
in
xchg
insl
call
lret
jp
jl
movsb
sti
dec
arpl
or
cmp
stos
test
push
js
pop
mov
xor
jp
cld
pop
das
add
jne
mulb
loop
fstl
mov
clc
fs
xchg
and
xchg
pop
xchg
scas
inc
adc
in
jo
or
cmp
imul
jns
jp
push
lods
push
shr
loop
xchg
sub
add
lahf
or
adc
aaa
jbe
in
push
ret
jl
movsl
shr
sbb
movsb
xor
pop
test
rcrl
in
aam
insl
mov
in
sub
mov
in
push
add
cld
test
aad
jns
xchg
push
int
pop
dec
jmp
jnp
test
in
leave
jecxz
imul
or
in
and
jle
sti
mov
xor
cld
mov
xchg
out
cmp
xchg
lcall
leave
fdiv
inc
jnp
mov
in
xor
loop
mov
in
rcrl
inc
fcompl
sbb
xchg
popf
in
xor
sbb
iret
enter
mov
inc
in
aas
pushl
pop
push
and
testl
xor
and
jge
jo
in
cmp
cmc
dec
xchg
popa
push
imul
dec
into
cld
mov
mov
mov
in
push
jb
inc
repz
in
jle
cld
addb
sub
sbb
lcall
mov
notl
and
cmp
in
xor
je
mov
das
mov
aas
dec
in
jecxz
xchg
mov
enter
test
adc
arpl
jg
divl
in
fs
addb
stc
in
mov
or
push
shlb
test
and
dec
sbb
je
testl
jg
in
inc
jns
test
call
test
in
and
jae
add
in
rcr
cmc
leave
mov
movsb
in
pop
inc
mov
sub
ljmp
imul
hlt
cltd
push
pusha
or
mov
inc
xor
jns
hlt
fdivrs
mov
jo
sub
jp
insl
hlt
in
pop
mov
mov
rolb
repz
push
arpl
in
pushf
add
iret
push
cmp
in
mov
jg
mov
adc
repz
enter
scas
sub
in
loope
dec
mov
daa
pop
add
dec
pop
mov
add
sarl
mov
cmpsl
addl
mov
adc
pop
pop
push
in
lea
pusha
mov
xchg
adc
loopne
cmp
sub
or
test
mov
lock
bound
sahf
dec
cmp
in
aam
sahf
mov
pop
push
aaa
cmp
xlat
test
xorl
inc
in
push
sbbb
sub
les
ret
cld
sbb
mov
sub
push
jmp
fwait
mov
fdivl
out
xor
or
mov
ja
jg
cmp
into
imul
mov
dec
aaa
pop
in
push
cmp
daa
stc
adc
in
call
cli
jae
push
daa
mov
in
popf
sbb
mov
jbe
adc
int
daa
mov
out
cmpsl
es
cltd
cld
pop
push
push
test
pop
add
push
shlb
int3
in
inc
push
sahf
mov
pop
arpl
mov
pop
mov
into
lods
mov
out
lock
in
push
or
in
aaa
ret
sahf
xor
jecxz
and
ret
in
sahf
popf
call
incl
cmp
mov
in
push
addr16
jae
mov
in
call
cmpsb
pushf
dec
ja
mov
pop
cmp
dec
sub
scas
lea
in
hlt
cmpsb
jns
jno
insl
clc
pop
repnz
lret
inc
dec
leave
test
pop
mov
movsb
mov
or
imul
and
mov
stos
xchg
js
lahf
gs
in
push
call
pop
jl
in
mov
or
lret
jae
push
test
imul
or
iret
call
jp
fs
push
add
and
imul
in
fs
fsts
mov
pop
loop
xchg
aas
xor
into
int
push
addb
in
scas
hlt
pop
int3
jns
test
push
push
mov
dec
stc
push
ljmp
xchg
xor
rorb
or
pop
hlt
rcll
sub
cld
push
in
and
in
and
movsb
jge
bound
mov
hlt
push
or
scas
insl
imul
loop
add
cld
in
and
js
shr
movsb
mov
xor
push
dec
pop
xor
push
in
out
push
and
cmpsb
inc
sbb
xchg
in
mov
jl
mov
xchg
xor
lret
mov
test
push
in
loopne
mov
bnd
in
adc
stc
cmpb
in
add
leave
pop
sahf
outsl
in
pushf
popf
sbb
or
in
sbb
bound
lret
cmp
mov
dec
and
adc
xchg
mov
cs
movsl
in
sbb
jecxz
in
mov
mov
xchg
lea
stc
or
call
and
in
ss
push
lcall
lock
int
or
in
jno
cmp
inc
in
lahf
movsl
daa
add
les
int3
repnz
sbb
fadds
cmp
test
loop
in
xchg
je
ss
mov
xchg
lds
shr
fistpll
xor
ds
lods
cmp
xor
rolb
in
incb
pop
out
or
dec
mov
sub
xchg
aad
shr
cmp
or
or
adc
mov
lea
sbb
scas
sbb
test
sahf
lret
jno
in
adc
inc
mov
in
push
mov
cmpsb
mov
or
loop
fiaddl
xor
push
fcompp
je
cmp
inc
fisttpll
add
loop
gs
scas
addr16
test
in
xchg
jns
jmp
in
cli
sub
test
mov
push
jno
or
cmp
cmp
jmp
testl
repz
into
cwtl
sbb
and
in
lock
sbb
iret
sti
jmp
cltd
cmp
mov
std
mov
jge
cmc
call
lea
push
sub
ja
imul
fs
inc
les
imul
add
sub
in
mov
out
dec
test
dec
in
xor
mov
pop
sahf
mov
or
loope
in
addr16
pop
adc
call
inc
push
dec
adc
mov
addr16
in
jno
push
dec
mov
jne
ror
inc
js
cltd
iret
nop
cmp
sub
jle
xlat
jecxz
mov
in
movsb
push
and
in
inc
pop
dec
les
pop
jbe
jecxz
out
pop
ret
adc
xchg
imul
push
xor
sbb
out
lahf
gs
cmp
xchg
xchg
insb
loop
in
scas
cmp
add
imul
push
gs
pushf
push
or
outsb
test
call
imul
sbb
daa
or
test
jno
adc
sub
add
push
xor
mov
popf
loop
call
fbld
pop
sbb
push
stc
testb
cmp
cmp
cli
in
jecxz
push
mov
cmpsl
testl
adc
jge
ret
in
lcall
sbb
fcomps
push
ret
and
popf
pop
fucomip
lcall
xor
in
shll
call
pop
sbb
aad
fdivs
sub
or
mov
mov
sub
lea
ljmp
out
xor
scas
sahf
bound
faddp
stc
aam
add
xchg
jl
dec
imul
lcall
jmp
push
stos
xlat
inc
in
adc
daa
pushl
repz
test
dec
rcll
imul
pop
dec
test
testb
fidivrl
in
push
ja
jp
out
das
in
mov
jae
fucomp
xor
lea
fidivrs
adc
add
in
jo
inc
into
push
enter
and
scas
inc
adc
mov
in
leave
push
das
and
fcompl
sbb
test
gs
adc
or
rcrl
mov
test
sbb
movsb
in
in
inc
push
rclb
fiadds
push
pop
insl
das
adc
push
in
jno
inc
imul
in
testl
aaa
add
in
pop
in
test
dec
and
cmp
sti
in
rolb
jmp
dec
pop
mov
cmpsb
add
fldenv
xor
js
push
in
sub
in
in
mov
outsl
and
lods
push
mov
cli
jno
test
or
jnp
cld
pushf
add
mov
fiaddl
push
int3
pop
mov
rcrl
fildl
cmp
or
ss
fsubl
in
mov
jmp
fdivrs
pushf
sbb
arpl
outsl
in
imul
and
mov
idivb
test
mov
lock
in
iret
mov
pop
inc
in
sub
ja
sbb
shrb
jg
jle
or
cmpsb
sbb
push
mov
test
adc
mov
stos
idivl
popa
pop
je
mov
jne
fcmovu
or
mov
movsl
imul
aad
or
xor
cltd
jl
sarb
insl
in
cmova
push
jno
inc
sbb
orb
add
in
jnp
lods
cmc
mov
jne
and
mov
jno
das
rolb
in
mov
imul
call
mov
stc
xchg
test
xchg
push
iret
mov
sbb
sbb
lods
pop
ljmp
cmc
push
sub
lret
push
jmp
sarb
movsl
jmp
fst
sub
add
or
in
into
add
subb
imul
inc
push
cmpsl
sub
repz
into
scas
mov
in
lock
push
in
add
test
test
hlt
test
in
mov
lcall
outsb
sub
addl
dec
jg
leave
pop
add
in
repnz
dec
dec
in
mov
ljmp
mov
xor
in
ss
inc
popa
fisttpl
adc
imul
aas
pop
dec
push
js
test
inc
lds
mov
in
and
sbb
jle
pop
call
ds
cli
loop
in
sub
mov
xlat
adc
sub
push
in
cmp
es
mov
mov
jbe
xor
sub
adc
dec
cmp
jge
and
call
jp
in
jecxz
cmp
inc
cmpsl
sarl
mov
shr
push
loop
mov
popf
mov
cmp
in
pop
movsb
mov
daa
pop
jnp
push
fdivrl
push
lock
in
stos
icebp
mov
stc
in
loop
inc
sub
adc
in
mov
fbstp
imul
aad
dec
daa
es
call
mov
or
and
es
pop
jle
imul
pop
jbe
sbb
cs
pop
push
cld
in
pop
aas
xlat
in
ret
out
popf
mov
mov
or
imul
xchg
or
in
mov
adc
xchg
inc
dec
aad
or
ja
in
lea
pop
shll
sub
dec
jns
mov
test
add
sbb
test
xchg
in
out
dec
jno
orl
inc
push
aam
xchg
mov
cmpsl
dec
and
cmp
stos
pop
insb
mov
dec
lcall
lret
mov
jl
in
dec
sub
test
or
out
in
lea
data16
imul
xor
pop
test
in
jp
cmp
mov
ljmp
in
sub
lahf
and
in
fs
sub
adc
ss
testl
add
imul
subb
jns
cltd
subl
imul
mov
xchg
sub
outsb
push
adc
push
push
add
or
jo
loopne
or
xchg
adc
mov
and
es
shrb
in
movsb
adc
loopne
cld
pop
out
hlt
fcomp
add
and
add
test
add
in
shlb
cmpsl
call
pop
fcmovb
and
test
vpsubq
xor
lret
cwtl
xor
cmp
pop
and
push
call
mov
sub
in
cmp
das
shr
xchg
pushf
outsl
adc
xor
jmp
repnz
leave
xchg
inc
xchg
jnp
in
pushf
cwtl
xor
into
mov
in
inc
sub
adc
sub
push
sbb
insb
in
imul
push
pop
xchg
arpl
in
sahf
ss
ljmp
enter
mov
push
aas
lods
sahf
pop
cmp
or
mov
shrl
cld
pop
and
mov
push
in
sahf
popa
out
fcompl
sbb
data16
cmp
fstpt
or
cwtl
lods
add
fwait
jle
stos
lret
and
addr16
pop
xchg
cmp
xchg
pushf
adc
imul
clc
sarl
hlt
jp
gs
adc
add
imul
jge
and
mov
push
add
rcr
jb
das
or
out
cmpsl
pop
es
in
out
ja
xor
jns
or
in
aad
loopne
push
test
stos
in
je
cmc
dec
jo
or
jb
enter
xor
inc
loope
push
jle
adc
mov
in
in
pop
pushf
fmull
aad
add
mov
lods
flds
mov
inc
push
lock
sub
dec
cmpsb
pushf
fldl
dec
sub
add
ror
movsl
add
inc
adc
jnp
dec
pop
aaa
fmuls
out
lcall
in
pop
arpl
movsb
mov
jg
hlt
das
inc
subl
mov
in
aas
xor
fcmovnb
jge
and
iret
xchg
imul
cltd
or
adc
and
pop
std
add
mov
int
push
push
in
xor
jnp
loope
movl
dec
push
push
sbb
mov
test
in
test
shlb
sub
mov
mov
enter
push
sub
std
add
loopne
rclb
aam
call
or
shr
int
or
add
outsb
and
mov
push
js
into
fbstp
in
push
lret
sub
test
cmp
sti
inc
xor
in
fmull
jmp
adc
jmp
dec
fisubrs
pop
inc
popf
and
dec
adc
push
jo
pop
imul
out
stc
pop
inc
mov
insb
cmp
inc
adc
jp
sbb
imul
cmp
ja
call
sarb
mov
int
in
jae
or
sbb
js
dec
pusha
scas
fimuls
push
jb
inc
xor
adc
xor
in
test
lods
ret
push
mov
pushf
rcrl
arpl
ds
data16
add
addl
or
adc
mov
ret
notl
dec
mov
in
ret
pushf
cmp
popf
in
in
pop
xchg
or
add
pop
add
mov
mov
or
dec
imul
cmpsb
imul
mov
xor
div
or
dec
push
mov
into
xchg
out
jecxz
adc
xchg
in
mov
inc
jb
in
dec
xchg
aam
cmpsb
sub
daa
stc
lahf
in
imul
and
xchg
in
mov
push
mov
jbe
decl
or
je
jmp
inc
xor
faddl
xor
lret
dec
test
icebp
mov
data16
in
sub
sbb
adc
add
sub
or
in
push
push
fs
dec
adc
dec
pop
out
jo
dec
mov
pop
cltd
inc
and
jnp
jns
shr
subl
bound
fsubrl
and
xor
xchg
roll
sub
xchg
xor
push
mov
in
test
mov
into
movsb
pop
sahf
in
mov
hlt
cmc
mov
cmpsb
rcll
inc
insl
fnstsw
es
mov
or
rcr
jb
in
repz
aaa
add
add
in
scas
fs
xchg
cmp
sub
jge
dec
sti
dec
mov
mov
jecxz
mov
dec
adc
orb
push
jp
ja
in
or
jno
cmpsl
xchg
push
xchg
call
push
cmc
mov
call
aad
loopne
mov
sbb
xchg
int3
xor
and
jl
fimull
and
dec
pop
std
fstps
in
mov
mov
ss
xor
mov
cmp
movsl
sbb
sbb
add
dec
ret
push
in
push
outsl
repz
fimull
push
leave
mov
andb
sbb
lock
sub
mov
mov
insl
sti
cmp
aas
in
or
fsubrl
in
lea
mov
in
mov
ficompl
call
push
push
mov
cmp
sbb
frstor
dec
test
cld
jecxz
lds
fnsave
inc
add
stos
xchg
jb
and
mov
mov
mov
inc
xchg
cmp
aaa
int
daa
es
pop
nop
or
in
imul
sub
cli
leave
jno
jo
call
push
shll
xchg
cmpsb
insb
cld
sub
or
sbb
push
xchg
mov
mov
ljmp
in
push
sub
in
cmp
ja
movsl
test
popa
bound
fsubr
cmpsl
arpl
lcall
jg
movsl
jo
cmp
shlb
pop
and
sbb
into
push
pop
in
and
xorl
jb
iret
out
in
mov
dec
adc
in
das
std
nop
xor
rorb
push
test
in
out
cwtl
and
push
dec
enter
mov
dec
testl
icebp
stos
mov
rclb
mov
xchg
push
or
lea
outsl
or
gs
in
inc
loopne
dec
enter
in
sbb
bound
mov
imul
daa
dec
in
xor
int
aaa
in
stos
loop
js
xor
in
pushf
mov
int
push
lret
push
xor
in
add
test
es
pop
popa
or
xor
enter
mov
cltd
int3
cmp
addr16
or
in
mov
les
cld
mov
inc
mov
in
addw
cmp
imul
sub
or
es
test
aas
xor
mov
add
icebp
nop
in
insb
jne
inc
jnp
adc
rorb
lock
cmp
sbb
push
int3
in
das
mov
arpl
lea
cli
cmpsl
in
imul
sub
pop
imulb
adc
in
in
cwtl
xchg
add
push
xchg
in
test
popf
sub
das
shll
subl
outsl
mov
adc
in
lock
outsb
movaps
rcl
in
jg
pop
ja
lcall
sub
pop
test
in
out
ficoms
and
cwtl
dec
in
xchg
vunpcklps
out
out
adc
xchg
xchg
or
stos
bound
aad
aam
in
and
xchg
mov
jae
iret
dec
and
in
ret
pop
stos
xchg
in
jne
mov
rolb
loopne
lret
ja
jl
xchg
mov
in
mov
or
test
sbb
test
jmp
xor
or
sti
hlt
mov
lock
xchg
imul
gs
cmp
inc
xor
lahf
and
in
fs
ret
adc
js
popf
scas
cwtl
in
int
lahf
sbb
movsl
icebp
push
in
and
push
jb
in
test
sarb
add
push
movlps
outsb
mov
aad
jge
iret
notb
xor
sbb
in
mov
cmc
scas
pop
call
shl
icebp
repnz
stos
push
sub
mov
xchg
adc
dec
adc
inc
clc
clc
mull
jo
push
ret
mov
aaa
xor
cmp
nop
xchg
mov
sub
outsb
pop
in
sti
mov
divl
cwtl
in
push
pop
jo
xor
or
mov
mov
xor
in
cmp
sub
jp
pop
icebp
push
movsl
cmp
iret
daa
leave
sbb
push
cltd
jnp
outsl
inc
xor
mov
xchg
icebp
in
mov
testl
sub
ljmp
sarl
lods
movsl
stos
in
in
sbb
pop
outsl
call
aas
push
std
mov
imul
mov
aad
testb
xor
xchg
add
sbb
test
cmpb
std
popa
jg
pop
push
mov
mov
fcmove
cmp
xor
jo
repnz
imul
outsb
sbb
mov
shlb
jecxz
xor
xchg
in
jmp
je
xchg
mov
andl
add
jecxz
aad
fisubrl
fcoms
in
test
pop
call
inc
imul
jecxz
mov
in
jmp
cmp
pusha
call
or
test
hlt
test
imul
in
es
jno
fistpl
cli
push
sub
push
ret
inc
fwait
or
ss
jbe
fsts
in
push
or
into
lea
sbb
pop
sbb
or
fcom
pop
test
push
jnp
dec
in
movsl
outsl
psubw
push
stos
sub
rorl
add
cld
mov
xchg
in
cmp
test
and
cmpsl
in
inc
sbb
xor
movsl
jmp
or
leave
in
sarl
lret
xor
iret
hlt
sysret
in
cltd
sahf
shlb
dec
xor
leave
in
sbb
mov
in
das
inc
sub
xchg
loope
pop
jae
add
dec
add
hlt
mov
test
inc
xor
adc
xchg
sbb
jge
dec
in
adc
mov
loopne
imul
push
and
cmc
xchg
dec
in
cmp
int3
cmpsl
outsb
leave
jmp
dec
jge
mov
or
into
fisttpll
jg
cld
push
and
out
in
xlat
fadds
addl
push
jbe
test
cld
lods
sub
insl
adc
in
adc
push
aad
inc
sub
add
clc
insb
or
or
jp
mov
jge
jmp
push
jg
mov
cmpsb
shrl
in
call
dec
aaa
fsubr
pop
pop
popa
cs
adc
mov
int
and
aad
sbb
hlt
icebp
mov
call
inc
ret
xor
call
test
ss
insb
push
push
paddusb
jns
sub
stc
arpl
in
pop
in
sbb
pop
addl
cmp
push
in
mov
add
fsubrp
jg
xchg
cli
xchg
in
repnz
in
and
sbb
ss
pop
sti
fdivr
call
mov
sahf
out
xchg
mov
popa
ljmp
aad
mov
enter
inc
out
sub
in
out
adc
pop
insl
push
in
dec
mov
lar
out
or
xchg
aaa
jl
in
int3
push
cmc
mov
mov
xor
imul
xor
mov
stos
rolb
pusha
enter
jmp
and
cmp
jl
repz
dec
mov
mov
or
lret
push
data16
mov
jbe
sbb
sub
xor
and
movsl
lret
testb
aas
or
pop
fs
xor
imull
mov
lods
into
andb
dec
sub
cmp
mov
shrl
push
push
in
sarl
in
outsb
in
dec
inc
xor
mov
jl
shr
insb
xchg
mov
mov
push
out
movsb
shlb
sahf
loope
push
mov
dec
push
in
hlt
dec
hlt
addr16
nop
in
pop
add
call
push
pop
rorb
mov
movsl
inc
add
outsb
test
cld
dec
xchg
ljmp
jg
leave
add
mov
push
and
and
sbb
repz
adc
mov
xor
rcrb
shl
push
loop
pop
imul
cmp
movl
hlt
jnp
stos
cmpsl
sahf
xor
jge
mov
push
repnz
and
ja
sbb
fstpt
mov
leave
in
fldenv
in
ret
and
call
mov
lods
call
inc
xlat
cmc
xor
mov
pop
jbe
orb
jecxz
es
lock
mov
in
sti
js
cmp
in
add
mov
shr
inc
push
dec
je
imul
in
adc
pop
mov
fsts
je
fdivr
lods
gs
jmp
enter
cmc
in
xchg
ds
pop
add
outsb
xor
inc
shl
fsubrl
dec
inc
cltd
iret
cwtl
out
repnz
lods
mov
std
ds
and
leave
cmp
js
adc
in
xchg
jnp
push
test
mov
inc
cmp
in
daa
ss
xchg
xchg
jno
pop
lds
adc
mov
ds
roll
loop
cmpsb
pop
adc
dec
add
in
add
and
push
inc
or
in
ljmp
in
sub
cld
lcall
movsl
imul
sbb
jno
fcomps
xchg
test
dec
imul
sub
and
jg
ficomps
inc
inc
insl
lods
in
repz
jp
into
mov
es
nop
fs
xor
imul
mov
notb
iret
dec
dec
adc
std
in
mov
mov
rcl
outsb
jno
outsl
pop
loope
aaa
xchg
call
cmp
in
mov
xor
test
mov
xor
hlt
idivl
cli
shll
push
dec
push
test
adc
jle
subb
rclb
and
in
inc
jbe
lret
out
in
test
lods
sbb
in
or
inc
js
ss
mov
sub
les
xlat
pop
or
mov
sbb
stos
or
movsb
xor
lea
and
inc
jmp
cmp
xor
out
shll
dec
push
and
cli
mov
dec
fucomip
mov
rcl
lret
in
push
mov
pop
stc
jb
jmp
into
stos
mov
jne
pop
test
mov
in
int
test
frstor
push
sub
es
in
fiadds
stc
mov
inc
or
inc
in
fildll
outsb
fsubr
pop
lcall
in
int3
ret
push
ljmp
in
and
mov
in
mov
lcall
imul
adc
jnp
ret
or
fiadds
data16
and
pop
out
popf
insl
in
out
pop
dec
and
mov
int3
test
xchg
sbb
test
jnp
sub
mov
adc
nop
in
pushf
add
and
mov
clc
stos
in
out
in
add
xchg
sahf
sub
mov
or
inc
xchg
test
and
ds
mov
adc
push
call
in
push
out
fldl
or
mov
jae
sub
mov
jnp
or
in
daa
jns
ja
popf
das
mov
xchg
xchg
neg
seta
cwtl
movsl
fs
sbb
inc
scas
add
jo
push
in
jns
cmc
out
and
mov
aaa
clc
mov
jg
imul
out
cmpsl
outsb
in
xor
mov
cmp
mov
adc
punpckhbw
pushf
xor
jns
out
add
out
push
in
push
lods
popf
hlt
shll
shrl
jae
insl
subl
jge,pn
cmc
icebp
in
addb
adc
mov
aaa
aad
push
pop
pop
mov
and
cld
sub
fucomp
cmp
pop
pusha
pushf
mov
inc
in
pop
cwtl
pop
cmpsb
xor
out
jbe
rol
cs
jecxz
mov
xor
lods
jge
test
cld
sbb
xchg
insl
in
push
cmp
xor
leave
call
sbb
push
fisubrl
add
mov
ss
sub
call
dec
xchg
cmp
sti
ss
push
movsb
jmp
enter
ret
mov
aas
mov
in
daa
pop
or
mov
mov
jmp
outsl
xchg
cwtl
cmp
nop
in
mov
mov
popa
in
xchg
sub
sub
sbb
push
imul
stc
inc
in
in
pop
fiaddl
in
jle
xor
inc
dec
mov
xor
shll
and
mov
mov
in
adc
loop
mov
cmpsb
outsb
xrelease
out
in
test
jecxz
ljmp
ds
lock
outsb
out
into
in
mov
inc
leave
add
pusha
in
mov
xchg
pop
xchg
xor
and
sub
lret
cld
dec
clc
lods
in
ja
test
jnp
imul
out
outsl
lock
push
repnz
inc
test
in
push
xchg
xor
and
mov
dec
pusha
pop
add
and
subl
or
pop
or
pop
dec
jp
sub
jmp
push
dec
in
movsl
push
mov
sahf
sub
in
ss
adc
sbb
xlat
jnp
fs
mov
call
jb
test
push
bswap
mov
nop
subl
pop
ret
in
inc
add
sbb
xchg
jle
or
mov
xor
mov
imul
ss
sub
mov
jmp
test
roll
enter
inc
cmp
in
mov
xchg
xor
adc
adc
fdivrp
inc
dec
lea
push
pop
loopne
jbe
sub
lods
push
lods
pop
in
mov
kmovw
fisubl
push
scas
in
popf
sbb
pop
in
cmpl
ficomps
jae
and
shr
pop
push
pop
int3
pushf
es
or
add
pop
in
inc
xchg
adc
xchg
push
jg
or
push
dec
xor
out
out
je
mov
sbb
xor
lahf
sbb
mov
idiv
jne
les
push
and
cmp
call
stos
sarl
sbb
daa
jo
fs
cltd
mov
or
jp
jl
inc
fiadds
xchg
cmp
mov
in
push
in
adc
fucomip
cld
jb
test
mov
rcll
add
mov
sub
out
cli
imul
sub
jp
in
addl
stos
and
subb
stos
ret
mov
call
hlt
mov
mov
cltd
push
mov
in
loopne
push
pop
mov
inc
fwait
icebp
mov
stc
add
addr16
rorl
mov
bound
in
sbb
test
pop
adc
outsb
in
call
add
mov
shr
dec
dec
dec
clc
imul
adc
bound
pop
sbb
ss
repz
imul
and
push
mov
stos
or
mov
in
inc
das
lock
push
jl
or
mov
gs
imul
test
arpl
call
add
jecxz
mov
mov
cmc
in
dec
div
insl
inc
fldl
insb
movsb
movsl
lahf
lods
in
pop
movsb
scas
aad
in
cmp
sbb
inc
push
in
ds
adc
jns
fisubrs
insb
fucomi
push
push
scas
addr16
xchg
xor
ja
nop
sbb
xchg
or
xchg
mov
aad
xor
bound
mov
jecxz
fstl
mov
hlt
sbb
in
pop
rcll
scas
jl
mov
rcrl
mov
mov
in
push
push
xchg
pop
adc
dec
in
icebp
inc
xchg
mov
sti
inc
stos
sub
cwtl
lcall
dec
or
xor
movsb
mov
imul
mov
out
dec
xchg
in
mov
jns
repnz
jmp
dec
push
jnp
mov
pop
xor
dec
jecxz
lea
call
xchg
pop
inc
dec
xchg
sbb
mov
sti
in
xchg
xchg
sub
ss
jge
imul
add
dec
mov
in
cmc
hlt
pop
pop
movsl
push
lods
loopne
mov
inc
xor
pop
and
mov
orb
in
popa
push
mov
mov
pusha
in
lea
mov
mov
pop
in
inc
pop
in
lods
push
dec
dec
jle
in
mov
inc
mov
dec
sbb
imul
adc
in
cmp
shll
in
inc
pop
imul
imul
scas
jno
jl
pop
in
ds
mov
add
outsb
mov
rcrb
je
icebp
nop
sub
stc
push
out
xchg
rcr
in
mov
xor
jl
test
cmp
xor
mov
nop
es
sbb
lea
aas
mov
mov
fucomp
jno
arpl
inc
fwait
insb
sahf
cmpsl
push
in
in
sub
pop
outsl
cmpsb
jge
in
dec
orb
flds
ljmp
aam
imul
cmp
jle
sub
bound
push
movsl
xor
mov
call
fmuls
in
inc
dec
in
sub
repnz
test
in
jne
fiadds
es
pop
push
popf
nop
in
xor
mov
xchg
iret
ficompl
dec
and
std
in
test
out
mov
push
stc
jae
jbe
subl
loope
cmp
and
jmp
dec
sub
cld
fidivrs
mov
cld
lods
insb
test
mov
fsts
in
sub
mov
cmp
in
mov
shlb
test
adc
cmpsl
in
pop
mov
dec
sbb
ret
jo
jg
in
xor
into
cmp
sub
xlat
cmpsl
int
icebp
cmp
and
in
fldenv
push
dec
ffreep
in
cld
ds
jbe
mov
adc
pop
in
repz
mov
push
mov
jne
inc
jl
insb
xchg
aam
cmp
cld
or
mov
sti
mov
stos
push
in
stc
cld
mov
call
pop
or
repz
lds
in
int
pusha
les
push
loope
jmp
pushf
in
fisubs
inc
mov
inc
cwtl
cld
js
jmp
addb
pop
and
mov
xor
arpl
in
mov
mov
sub
sbb
xchg
dec
pop
and
inc
adc
in
push
add
xchg
fsubr
test
imul
xlat
lods
clc
hlt
mov
nop
in
pop
mov
push
and
xchg
pop
adc
addr16
scas
test
aad
cs
ja
aam
pop
pop
or
out
jle
mov
imul
push
adc
or
loopne
xchg
in
dec
bound
jae
imul
push
into
aad
jo
cmpsb
and
ja
sub
sub
jae
lret
adc
fisttpll
ds
fs
movsl
addb
push
in
mov
mov
jp
je
das
push
in
jns
testb
fstpl
xchg
jle
sbb
fwait
fs
push
enter
mov
movsl
call
xchg
xchg
jne
and
mov
scas
daa
cmpsb
sarl
imul
push
lret
and
insl
es
mov
outsb
xor
call
decb
imul
imul
in
bound
movsb
xchg
nop
arpl
mov
xor
dec
imul
insl
icebp
insb
and
shrb
in
imul
mov
ss
inc
repnz
in
push
dec
call
sub
les
leave
mov
into
mov
mov
test
or
fsubrp
dec
in
stc
mov
es
mov
inc
adc
fwait
xchg
adc
bound
mov
mov
or
inc
sub
clc
lods
and
in
jno
xor
xchg
loope
mov
dec
push
ficompl
loop
push
sbb
adc
scas
in
sbb
jbe
lods
in
sbb
enter
sbb
push
xor
in
lods
cli
ja
outsl
repz
fucomp
xor
inc
xchg
femms
adc
adc
lret
imul
lock
or
mov
shll
push
in
insb
scas
in
xchg
lods
popf
mov
jle
or
inc
into
sub
sbb
ret
jno
mov
push
ss
jo
xchg
loope
je
fwait
in
mov
int3
jbe
jecxz
fneni(8087
jge
or
add
add
fsubr
rclb
add
imul
fisubrs
out
iret
out
mov
mov
les
jns
push
push
push
pop
imul
jno
push
cmp
sub
sub
rcrb
int3
test
dec
loopne
adc
cmp
pop
xor
mov
xor
inc
mov
test
hlt
test
leave
jb
test
in
fwait
gs
jo
std
in
movsl
mov
inc
mov
jns
sub
daa
lret
fsubr
inc
insb
in
lcall
cmp
lret
mov
mov
subb
arpl
call
clc
inc
in
nop
stc
cmpsl
std
xor
mov
outsb
lods
sub
repnz
out
inc
dec
inc
add
std
test
xor
lods
mov
inc
pop
push
in
mov
and
xor
sub
cltd
decb
inc
ja
je
sbb
test
sub
adc
mov
inc
lea
stc
dec
or
cmp
adc
xchg
mov
repz
or
cmp
in
lds
or
dec
outsb
or
push
js
out
lea
jmp
fst
aam
aad
add
push
in
imul
pop
jbe
add
pop
or
push
add
in
push
pop
adc
mov
inc
pop
mov
mov
push
das
in
cld
adc
sbb
je
mov
sbb
stc
inc
mov
or
push
dec
sub
pop
xchg
cld
ss
push
cmp
int
cwtl
add
push
outsl
out
in
add
and
mov
aaa
in
adc
jo
fistps
push
push
pop
inc
call
push
and
int3
popa
pop
lds
into
in
cs
lods
shl
pop
mov
in
jns
pop
inc
push
xchg
adc
in
xlat
je
out
ds
and
insb
in
inc
fdivrl
sbb
ret
push
sub
popf
push
jg
pop
or
int3
mov
mov
imul
sbb
bound
maxps
aad
ja
inc
and
repz
test
cmp
xchg
mov
js
dec
fcomi
push
inc
in
dec
push
out
int3
sub
popa
sub
les
test
ret
stos
mov
and
aaa
stc
in
frstor
fisubrl
in
mov
mov
push
lods
jl
ja
dec
pop
aad
in
or
ret
add
test
add
or
mov
into
mov
in
inc
or
das
cmpsb
sbb
in
xchg
in
and
lahf
in
dec
aad
add
adc
cld
push
xsaveopt
out
ja
into
call
jecxz
scas
xor
pop
mov
push
or
push
test
in
xor
xor
pop
scas
push
or
jo
shrl
lock
adc
insl
in
mov
pop
mov
push
movsb
loop
mov
hlt
test
or
ja
sti
cmp
popa
shr
sbb
xchg
aaa
in
cmpsb
cmpsl
pop
jae
dec
in
xor
sub
xor
in
pop
sti
mov
mov
sbbl
in
insb
test
mov
mov
jmp
xor
aam
in
les
mov
cmp
push
pop
lahf
jnp
fnstcw
xor
sbb
cmp
hlt
mov
mov
or
dec
scas
sbb
imul
sbb
repz
mov
aas
in
mov
ret
roll
push
in
cmp
incl
fsubl
push
or
in
cmc
popa
in
leave
lock
es
mov
mov
in
jne
mov
vcvtdq2ps
insb
add
cmc
sbbb
cs
rorl
jecxz
mov
cmp
rorb
loop
les
je
dec
add
fistpl
hlt
scas
in
sbb
add
ds
dec
imul
aad
or
loope
jb
je
sub
mov
out
test
in
push
xchg
pop
test
cmp
scas
inc
sub
out
subb
test
aad
or
lret
mov
jno
mov
inc
in
and
sahf
push
push
insl
mov
out
insb
pop
cmpsb
or
int
add
cwtl
mov
mov
sti
dec
leave
sbb
bound
in
pop
dec
pushf
hlt
cltd
xchg
sub
in
shlb
adc
ror
xchg
movsl
in
jecxz
lcall
in
mov
sub
dec
mov
adcb
pop
in
mov
fisubrs
in
flds
ja
lret
push
in
jge
mov
xacquire
add
adc
cltd
ret
dec
stos
in
cmp
push
fsubrp
mov
jo
ss
div
or
sahf
loope
popf
repz
xchg
lret
dec
ljmp
imul
add
pop
xor
sbb
mov
in
jge
loopne
lret
dec
pusha
into
shrl
leave
cs
push
hlt
adc
push
jle
sbb
in
lds
enter
cwtl
test
cmp
stc
test
js
pop
mov
adc
mov
sub
pop
popf
imul
pop
lds
jl
add
in
and
adc
or
test
or
outsb
push
in
fwait
cmp
xchg
push
add
xor
int
insb
and
sub
cld
dec
popa
xor
jne
imul
imul
xchg
mov
stos
fwait
in
sbb
pop
mov
fs
dec
int
fldt
push
cmp
jmp
pop
fimuls
lcall
cld
movsb
andl
xchg
mov
cwtl
test
adc
push
in
int3
call
orl
imul
cli
out
outsb
cld
mov
or
pop
in
aas
cmp
lea
adc
vprotd
stos
jmp
in
inc
sbb
inc
and
ret
push
sbb
mov
xchg
pop
popa
int
sub
cmc
xchg
jg
cmp
jl
sub
iret
addr16
imul
xchg
ja
or
sub
popf
xor
mov
add
clc
sqrtps
xchg
jnp
les
push
aam
or
hlt
lds
lods
adcb
or
add
outsb
adc
decl
imul
jl
adc
dec
in
in
popf
xchg
or
and
in
test
fsubl
lcall
mov
jp
in
ljmp
pop
in
in
leave
scas
mov
in
fs
mov
in
or
jb
or
rcl
and
das
ds
jns
cwtl
push
add
push
mov
fdivl
daa
fwait
in
outsb
cs
sub
in
add
hlt
xchg
pop
push
insl
push
xchg
outsb
dec
mov
movsb
in
cld
adc
hlt
test
adcb
pushf
shrl
icebp
hlt
pop
add
jae
sub
in
jnp
pop
loopne
xchg
in
stos
ret
orb
and
inc
shll
in
dec
jo
pop
es
aas
or
mov
test
mov
xor
jle
dec
imul
in
jbe
xchg
jp
push
cmp
and
in
test
sub
in
popa
mov
or
or
loope
xor
sub
sbb
fistl
lods
push
ss
pop
in
and
or
call
jmp
pop
in
adc
lods
cmpsl
cmc
pushf
outsl
in
xchg
addr16
adc
and
jbe
hlt
and
popf
popa
lock
adc
int3
mov
mov
cmp
repz
popf
lods
icebp
and
adc
cmpsl
inc
dec
test
sbb
outsl
insl
add
dec
sbb
lahf
nop
cmp
aas
in
jns
or
sub
push
sbb
jecxz
xor
jp
mov
imul
mov
jb
lret
out
in
imul
inc
out
sti
or
and
in
mov
mov
imul
adc
ret
and
inc
in
fs
push
movsb
lea
in
pop
ja
cmpsb
aaa
xor
dec
in
fidivrl
mov
idivb
sbb
or
ljmp
xor
push
jecxz,pt
jmp
mov
movsl
cli
es
xchg
sub
mov
lds
adc
fcoml
sub
hlt
add
push
pushf
imul
repz
in
into
adc
aas
nop
insb
ljmp
add
xlat
iret
mov
shr
or
inc
dec
into
in
bound
std
dec
mov
mov
mov
sbb
mov
sub
xchg
pop
in
jae
mov
dec
mov
cmp
clc
test
pop
mov
xor
sbb
cltd
hlt
cld
xor
into
in
loopne
mov
cmpb
in
push
scas
stc
sar
popf
xchg
sbb
or
jbe
dec
pop
pop
fistps
jp
xchg
push
dec
jecxz
js
cld
mov
xor
xlat
xor
push
push
xor
mov
in
les
push
sbb
pop
inc
sub
adc
or
shr
stc
fwait
je
push
push
aas
movsb
inc
out
in
xchg
mov
insb
push
ret
or
push
adc
in
cld
sbbb
mov
jne
addr16
push
clc
and
sub
call
fisubrs
inc
mov
int
in
bound
or
adc
add
xor
lahf
fdivrp
daa
sub
scas
inc
xor
movsl
inc
jl
cmc
fsubr
in
test
iret
loope
in
push
mov
int3
idiv
cmp
sahf
test
xchg
arpl
mov
mov
jle
sbb
in
idivb
ret
sahf
pop
xchg
jle
adc
adc
add
in
xchg
pusha
add
shll
xor
inc
and
pop
lcall
xchg
fisttpll
in
addr16
xadd
pop
popf
ja
testb
push
loope
or
rorb
push
in
xor
aam
dec
out
popf
in
stos
xchg
loop
xor
adc
test
mov
xchg
cld
add
in
and
mov
xchg
stos
dec
rol
pusha
mov
pushl
add
in
jl
stos
dec
dec
inc
mov
or
cmp
sub
dec
xlat
adc
push
or
mov
in
testl
div
fstpl
insl
lahf
lods
in
aad
fs
movsl
mov
nop
scas
pop
out
jo
in
pop
mov
pop
aad
and
shr
or
jns
xor
sub
sbb
cmp
in
clc
xor
insb
in
inc
rcrl
in
cmp
jmp
inc
and
sub
rol
arpl
mov
jnp
rorl
loope
in
xlat
pmuludq
loop
inc
icebp
in
mov
or
movsl
push
or
sbb
push
xchg
in
in
jmp
xchg
aad
cmpsl
sub
sub
daa
mov
dec
scas
cwtl
xchg
js
in
dec
dec
push
or
adcl
test
jbe
jnp
push
hlt
push
in
jl
mov
xchg
in
int
pop
cmp
scas
sbb
jmp
lock
push
jb
xor
jp
push
ficompl
add
mov
cmp
pusha
sbb
sbb
fldt
mov
push
sbb
sbb
mov
bound
pop
mov
sbb
leave
outsl
shll
mov
out
pop
mov
in
cld
jo
popa
cmp
mov
mov
and
in
push
lods
cmp
push
xor
repnz
pop
mull
or
insb
loop
dec
push
insb
je
imul
add
jno
in
and
ds
push
cld
push
rolb
xchg
adc
fsubr
in
lcall
xchg
sahf
jge
push
or
and
in
sub
test
cmp
pop
pop
xchg
pop
leave
xchg
hlt
lock
pop
jno
shl
test
in
call
mov
mov
shlb
test
lods
add
cmc
vpaddsb
add
pop
jo
in
sbb
call
in
outsb
pushf
mov
sub
inc
inc
push
jmp
in
mov
jge
fs
jecxz
sub
fdivrs
pop
popa
lcall
fldt
jle
leave
sbb
test
mov
push
inc
in
mov
or
xchg
subl
pop
shll
iret
aam
pop
cltd
push
mov
push
sar
jle
idivl
sbb
xchg
push
call
insb
and
in
lcall
sbb
shlb
push
in
mov
test
sbb
xor
or
dec
sub
in
lea
mov
sbb
or
sbb
je
pop
in
fldl
into
sub
or
dec
push
in
mov
jge
mov
dec
or
cmpsl
imul
adcl
add
sub
jecxz
jbe
sub
mov
aas
mov
jmp
fwait
mov
std
push
jnp
hlt
call
mov
jle
lea
sbb
int
in
mov
pop
callw
icebp
push
mov
not
cld
in
stos
and
push
in
daa
lret
int
outsl
xchg
in
cmp
cmp
add
lret
mov
jge
fsubr
adc
out
filds
mov
test
repz
fmul
inc
fucomp
in
sahf
fistps
arpl
jno
ret
mov
or
es
or
adc
in
aaa
push
ret
rcll
cmpb
in
aas
pop
ret
int3
aam
popf
clc
push
adc
push
inc
add
call
rcrl
clc
mov
in
aad
cmp
pop
call
sub
add
out
insb
outsl
in
mov
das
mov
in
clc
and
sub
xchg
or
cmp
inc
hlt
cmc
test
cwtl
sbb
xchg
add
and
mov
fucomp
pusha
jb
push
jmp
call
mov
in
dec
sahf
je
or
lret
in
sbb
test
nop
movsl
data16
in
jecxz
or
xor
jp
test
das
push
in
mov
adc
movsl
es
or
les
in
scas
outsb
inc
pop
jo
add
frstor
in
sbb
cli
rcrl
insl
hlt
push
cmc
push
in
xchg
push
clc
loopne
push
outsb
rolb
repz
push
push
popf
add
add
sbb
into
out
in
rolb
repz
outsl
lods
pusha
hlt
out
mov
jno
maxps
mov
notb
loopne
and
shlb
mov
aaa
or
fldcw
inc
xchg
jle
sub
jns
push
sti
jbe
pop
mov
jne
inc
cwtl
ret
pop
hlt
aaa
leave
or
dec
sbb
mov
mov
mov
xor
lret
aad
in
ret
outsb
cmp
cmp
ljmp
jnp
mov
jg
lock
je
insl
scas
in
adc
pop
js
in
sbbl
mov
in
lret
out
mov
sbb
adc
xchg
hlt
aas
int
in
lods
pop
jae
mov
outsl
lock
and
add
mov
in
push
in
popa
orl
gs
or
inc
jb
fs
sahf
lcall
in
jns
push
inc
iret
sub
pop
rcr
mov
es
addr16
mov
loop
out
je
dec
sbb
add
jecxz
sar
jge
sarb
rolb
xor
push
jle
adc
nop
stos
inc
in
imul
out
lret
pushf
jno
in
call
pusha
pop
cmp
nop
cmpsb
mov
pop
sub
jns
mov
test
call
and
pop
and
jno
mov
jbe
push
in
adc
mov
sub
gs
pop
sbb
cmp
in
out
flds
dec
in
add
xchg
and
pusha
ljmp
imul
lret
push
insl
cmpsl
sub
movsl
test
xchg
subb
mov
shl
lcall
popa
mov
in
iret
sbb
call
sti
repz
mov
ja
sub
lret
and
add
lds
add
in
push
je
std
mov
pusha
mov
mov
adcl
in
sub
and
inc
mov
sbb
dec
ss
in
or
cltd
jp
inc
adc
dec
cmp
in
dec
or
mov
dec
and
adc
in
or
add
jnp
leave
push
dec
fdivl
lds
sahf
mov
dec
in
lahf
lock
in
scas
cmp
js
mov
push
inc
xlat
in
into
scas
test
jg
and
mov
aas
lcall
lret
pop
lds
lods
push
jmp
in
imulb
push
mov
outsb
out
test
cld
sbb
in
add
lret
jecxz
idivb
and
ja
mov
push
stc
push
rorl
stos
gs
jl
in
pop
mov
daa
sbb
int
pop
ret
cmp
movsb
pop
mov
add
inc
jb
in
in
pop
inc
lds
inc
in
fists
jns
jb
push
jg
push
clc
jo
dec
int3
mov
sahf
adc
arpl
das
in
cli
mov
sub
cmp
mov
xor
adc
ret
ss
adc
shll
wrmsr
xor
push
and
hlt
sbb
xchg
rorl
pop
xor
pusha
pop
out
stc
ja
cmp
lcall
add
mov
jnp
dec
in
ret
imul
out
xor
mov
es
fucomp
adc
xchg
cmpsl
ds
arpl
and
lods
in
in
mov
xor
jmp
inc
add
scas
or
in
mov
jl
imul
or
in
mov
cmpsl
stc
callw
std
or
imul
das
cmpsl
pop
jmp
aam
mov
pop
lahf
dec
mov
sbb
scas
repz
jo
popf
sbb
and
dec
outsb
hlt
cld
fmull
add
xchg
mov
mov
jmp
push
test
outsb
or
iret
and
in
sbb
xchg
in
call
fbld
and
cmp
iret
test
int
pop
lahf
roll
push
in
fsubrl
dec
in
mov
pop
shlb
mov
aaa
cmpsl
mov
pop
je
in
dec
rolb
sub
dec
pop
in
lds
sbb
mov
int
in
sub
std
xchg
pop
in
fisubs
inc
or
push
in
mov
sbb
dec
es
sub
mov
in
imul
xor
call
stos
jnp
adc
jl
or
enter
lahf
xor
pop
jae
pop
test
hlt
or
fldt
call
shlb
cli
movsl
sbb
fldenv
cs
mov
in
push
aas
mov
repz
xchg
lods
push
jns
pop
scas
in
xorl
in
xchg
mov
jae
mov
leave
pop
lea
in
enter
mov
cmc
mov
cmp
shll
add
int3
adc
jle
dec
in
mov
or
mov
xor
mov
mov
cmp
cmp
in
rcll
je
jnp
in
mov
xchg
xlat
jecxz
in
mov
xor
out
add
and
jb
in
fiadds
cmp
jo
mov
jg
xchg
sbb
in
icebp
cmp
cmp
aaa
lea
xor
imul
in
or
hlt
ds
imul
adc
hlt
cmpsb
in
lock
dec
push
cmp
add
mov
sbb
or
in
and
sbb
and
fstpl
xor
mov
mov
push
popa
movsl
in
mov
pop
fisubrl
push
in
jl
lcall
das
jbe
and
push
mov
and
jle
fs
repz
leave
push
nop
inc
in
in
push
xor
xchg
inc
add
dec
in
hlt
iret
xor
xchg
mov
imul
std
sub
out
cmp
in
push
mov
fsubrp
or
jnp
aad
mov
testb
jb
and
inc
lret
je
xor
adc
lds
out
lea
cmp
loopne
aas
cli
push
andb
push
test
sbb
mov
sti
cmpsl
mov
mov
data16
mov
and
in
sti
js
cmc
mov
inc
sub
adc
insl
sbbl
xchg
jmp
mov
repz
pop
dec
in
sbb
shll
test
adc
lock
out
jmp
or
insb
adc
pop
in
cld
sub
xchg
jne
insl
int3
push
aad
pop
in
stc
cwtl
repnz
push
subl
sub
add
sub
xor
sbb
in
push
imul
or
xor
ficoms
and
push
call
fwait
xchg
fists
jns
inc
pop
js
jl
push
cs
mov
lock
pusha
sahf
inc
test
call
lock
push
mov
pop
xchg
or
int
ret
pop
xchg
cli
int3
fs
inc
stc
sbb
jbe
pop
ret
lret
popf
cmpsl
fadds
add
mov
in
faddp
xchg
mul
imul
push
mov
xchg
pushf
loopne
push
in
mov
pop
out
int
sub
fsubr
mov
jnp
and
adc
pushf
xor
mov
in
cmc
repnz
loopne
or
mov
sbb
out
subl
xor
push
xchg
cmp
insl
mov
insl
lret
adc
add
iret
scas
or
lret
sbb
jne
lretw
or
hlt
mov
mov
xchg
mov
sbb
in
fucom
clc
data16
jnp
cmpsb
sahf
fs
in
xor
dec
push
scas
adc
mov
jo
imul
imul
or
scas
js
nop
mov
and
insl
sub
ficomps
mov
add
add
or
adc
dec
xchg
or
push
in
push
mov
lcall
sbb
sbb
mov
xlat
rol
in
xchg
imulb
les
icebp
test
jo
cwtl
int
in
mov
xlat
inc
xchg
in
pop
jmp
int3
push
in
xchg
and
icebp
xchg
in
sti
lock
mov
cwtl
in
jb
pop
pop
or
fiadds
and
mov
gs
mov
xor
push
cmp
andl
cmp
in
push
dec
repnz
lahf
and
sahf
in
pcmpgtb
outsb
inc
xor
insb
rorb
int
fcmovb
call
fcomps
pop
cld
pop
sbb
call
mov
xchg
cmp
cmp
ss
xor
pop
in
hlt
enter
mov
cli
fdivrs
mov
pusha
pop
push
in
lahf
adc
outsl
xor
mov
and
pop
jb
in
into
stos
popf
popa
adc
mov
in
cmc
xchg
cmp
add
jbe
imul
sub
or
lods
in
sbb
jle
ror
inc
movsl
dec
cmpsl
and
jo
rcl
imul
pop
cmp
imull
adc
in
sbb
cmp
add
jecxz
xchg
adc
in
clc
js,pt
push
add
repnz
leave
jb
enter
lret
cmpsb
add
jle
pop
dec
adc
cmp
cld
ja
xor
hlt
in
mov
out
call
arpl
clc
fucomp
enter
adc
inc
jo
in
cmp
dec
mov
cmp
lods
cmpsb
inc
mov
or
imul
outsl
in
mov
sbb
fsubrp
mov
xchg
dec
sbb
sub
in
repnz
popf
movsl
adc
push
inc
rclb
lock
and
sbb
pop
pop
sahf
xor
in
mov
push
ds
pusha
repz
out
mov
ficomps
sbb
adc
pop
and
or
cltd
daa
repnz
std
pop
andb
mov
xor
xor
rorb
push
add
loopne
add
xor
adc
test
rclb
dec
push
adc
push
xor
clc
in
inc
dec
mov
jbe
in
cmp
loopne
mov
orb
jmp
push
scas
ret
jb
test
ficomps
cmpsl
pop
in
dec
in
aas
imul
insb
notb
jnp
in
in
pop
std
icebp
sub
dec
xlat
in
imul
orl
inc
add
es
stos
jbe
fildl
or
adc
and
jmp
in
jne
mov
dec
out
in
sbb
mov
push
cmp
call
xchg
jne
cli
gs
in
or
jmp
loope
mov
push
out
stos
imul
mov
jle
in
int
adcl
xchg
mov
inc
fsubrp
movsb
aas
add
lea
in
mov
or
test
pop
fcompl
push
mov
sbb
jb
jns
jl
test
hlt
push
mov
push
cmpl
pop
lods
jb
push
in
cltd
adc
xor
stos
leave
dec
inc
xor
and
ret
mov
fisubrs
pop
xchg
cld
and
jae
repnz
in
test
pop
stos
addr16
scas
push
shufps
inc
push
rorl
adc
pop
in
repnz
loopne
popf
mov
daa
mov
imul
jb
mov
dec
in
jge
mov
cmc
mov
or
in
push
aam
movsb
or
push
out
in
fldt
jne
and
dec
in
mov
dec
call
int3
ljmp
jle
in
xchg
ds
jl
testb
mov
scas
lret
cmp
out
test
push
mov
rcrl
in
or
add
mov
jp
in
das
or
imul
in
dec
push
ljmp
add
scas
gs
pop
sbb
jmp
push
cmp
sbb
and
aad
scas
lret
repz
add
shll
fsubrl
insl
js
xor
ffree
cmc
in
xchg
imul
test
xchg
inc
mov
cmpsb
sub
call
push
push
sahf
and
roll
sarb
cs
dec
icebp
rcrl
sub
mov
test
mov
and
mov
imul
adc
jno,pn
sub
or
cld
addr16
icebp
ret
and
ds
ror
int3
mov
mov
in
inc
dec
in
mov
jno
cmp
addb
shlb
in
xor
mov
js
mov
inc
ss
push
lret
in
cmp
jne
iret
or
in
jns
enter
mov
test
pop
pop
addr16
outsl
mov
mov
pop
imul
ljmp
lock
aad
mov
cmp
test
lods
gs
ss
in
push
pop
sbb
fucomp
pop
mov
push
sti
in
pushf
divl
xlat
dec
loop
xor
orl
test
jge
jp
and
int3
inc
add
mov
inc
shr
sub
test
imul
iret
out
lahf
clc
cs
es
adc
out
test
in
jne
dec
icebp
stc
adc
imul
add
mov
movsl
jae
adc
jge
repz
rol
in
xor
test
dec
cmpsb
xchg
sub
or
add
xor
scas
fnstenv
jl
cmp
test
inc
movsl
mov
xchg
sbb
inc
jecxz
mov
je
sub
outsl
and
sbb
movsl
das
ror
inc
cmp
fisubrl
jmp
iret
fsubs
adc
fmull
movsb
jb
andl
std
mov
orb
inc
mov
push
in
stc
into
cs
cli
nop
mov
in
iret
xor
test
jne
roll
cltd
rcll
imul
clc
movsb
mov
in
and
scas
push
je
mov
mov
jae
sbb
dec
or
add
jle
add
sub
in
jg
jo
mov
jno
in
in
inc
sbb
or
rcll
pusha
adc
loopne
sbb
lock
add
jl
rorl
or
adc
sub
dec
inc
call
rcl
xchg
dec
daa
js
repz
in
sub
arpl
xorl
hlt
jo
packssdw
jbe
cmp
pop
cmpsb
inc
sub
in
cwtl
jmp
mov
ret
test
fucomip
inc
in
mov
mov
stos
imul
das
cld
loop
sbb
int
imul
daa
xchg
imul
call
out
shrl
or
hlt
iret
jnp
int
in
ljmp
ret
in
cmp
sbb
mov
ja
and
sahf
in
push
clc
adc
in
xchg
test
add
aam
push
int3
push
into
push
sahf
or
test
in
cli
jbe
push
mov
gs
in
sbb
push
pop
or
loope
adc
mov
xchg
mov
inc
inc
stos
das
lds
sbb
popf
push
sbb
es
mov
adc
xchg
popf
jge
or
maskmovq
divl
or
mov
fbstp
gs
inc
pop
aas
jno
sub
cld
call
pop
mov
icebp
testl
pop
mov
out
cld
inc
mov
bound
arpl
mov
popa
gs
imul
and
popf
lock
in
mov
dec
pusha
mov
cltd
fdivl
lret
outsb
jl
dec
mov
dec
jg
fmuls
lret
xchg
stos
js
cli
icebp
test
xor
fs
roll
iret
and
adc
shrb
push
icebp
testb
fucomp
dec
lea
mov
in
jnp
leave
add
ja
in
ret
jo
pop
sahf
push
test
test
and
and
scas
sbb
adc
xchg
push
push
mov
out
outsb
loope
in
mov
aam
mov
ficomps
in
stos
sarl
fcoml
push
and
or
or
push
pop
mov
mov
inc
pop
outsb
insl
in
sub
jne
add
adc
in
idivb
fld
adc
cld
mov
aaa
xor
mov
cmovs
cs
loope
xchg
mov
jp
sti
dec
gs
or
mov
aam
or
inc
ss
int3
stos
andl
in
rolb
ljmp
pop
xchg
in
mov
in
jl
adc
mov
sbb
scas
popf
in
add
mov
fiaddl
xor
and
xchg
sbb
pop
cld
test
push
ss
xor
test
idiv
mov
ljmp
je
hlt
lods
hlt
sbb
outsl
in
jno
xor
clc
pop
and
pop
sahf
lods
mov
inc
hlt
push
popa
mov
test
mov
lret
cmc
cmp
sub
in
jae
insb
lods
outsl
sbb
movb
cld
out
imul
out
add
mov
xchg
cmp
dec
test
sbb
fs
daa
in
cmpsl
cmpsb
mov
test
addr16
jecxz
ja
mov
and
in
cmp
jb
push
in
in
push
imul
xchg
leave
test
cmp
in
iret
ret
cld
mov
pusha
in
xlat
subb
in
inc
cmp
mov
push
and
test
cmp
rorl
mov
lea
mov
jo
call
fstps
imul
loope
sbb
pop
cli
in
ljmp
arpl
push
cmpsb
mov
sub
sub
in
das
mov
mov
in
std
pusha
dec
cmp
aaa
pop
shrb
lret
mov
mov
xor
inc
in
jo
repz
xchg
dec
into
jl
je
adc
add
call
mov
out
sahf
cltd
jne
aaa
cmc
dec
fs
std
les
in
mov
pop
mov
dec
push
in
mov
loope
in
xlat
jae
xchg
mov
addr16
das
add
mov
out
sub
jle
call
lret
mov
add
or
and
adc
in
lcall
push
dec
mov
jmp
xlat
cmpsl
movsl
pop
dec
sbb
dec
in
in
sub
imul
add
cmp
lret
in
sub
daa
xlat
insl
inc
in
sbbl
push
stos
into
les
movsb
dec
call
pop
xor
adc
call
jne
in
adc
out
jae
daa
mov
insb
in
test
cld
sbb
inc
add
nop
imul
push
jb
pop
stc
push
imul
xchg
add
in
daa
and
out
movsl
repnz
out
scas
jae
add
rolb
or
in
jnp
inc
out
mov
icebp
fisttps
call
out
dec
push
sti
xchg
test
jo
stos
sahf
sbb
stos
arpl
pop
es
cli
mov
cmc
mov
or
cmp
adc
or
std
ret
xchg
add
adc
mov
rol
add
repnz
dec
in
pop
pop
out
ret
mov
loopne
scas
xchg
fcompl
mov
pusha
cld
cmpsb
in
add
aad
in
cmp
sbb
mov
push
xchg
in
xchg
push
test
pusha
push
dec
cwtl
clc
dec
in
xchg
mov
xchg
dec
in
push
shll
lahf
jo
mov
inc
loopne
lret
lret
repnz
out
or
in
ret
test
mov
push
mov
stos
lret
push
adc
in
mov
inc
and
lret
sbb
jl
bsr
in
or
inc
cmp
sbb
test
adc
cmpsl
rorl
mov
jp
mul
das
movsb
mov
or
movsl
dec
xor
fs
addr16
adc
aam
sahf
scas
leave
in
fnsave
push
dec
push
int3
in
clc
jns
das
imul
insb
pop
in
or
push
stc
push
inc
in
xor
out
outsb
adc
sbb
fmuls
sbb
test
roll
loopne
push
fucomip
push
movsb
mov
lock
cmp
insl
call
pop
xor
adc
rorb
mov
aaa
movsb
jne
pop
jge
in
into
in
jo
xchg
mov
sar
lods
dec
int
icebp
repz
cwtl
sub
mov
jp
dec
mov
imul
xor
lcall
sub
cmp
ss
bnd
in
inc
leave
push
pop
aad
shll
lcall
fisubl
in
pop
mov
popf
sbb
push
xchg
ljmp
ss
sahf
scas
ds
in
test
mov
xor
and
leave
inc
push
inc
in
in
cmp
lea
push
jns
mov
sbbb
pop
lock
xchg
adc
push
nop
in
in
imulb
or
dec
test
cld
sar
icebp
dec
mov
imul
sub
in
fidivl
add
push
gs
ficoms
add
in
daa
xor
sub
ds
cmp
push
add
fwait
shr
loope
xchg
jb
scas
sub
cwtl
sbb
push
inc
mov
sti
movsb
outsb
xchg
sbb
cmpl
lahf
jae
out
sbb
enter
test
add
sbb
sbbb
xorb
inc
pop
push
xor
push
cmp
lods
mov
imul
xchg
into
sbb
mov
es
push
ljmp
sub
sub
sti
pop
add
or
jmp
rol
movsl
inc
in
loope
stc
sub
or
mov
in
int
mov
popf
dec
sub
es
fwait
mov
and
call
push
into
shr
xor
in
das
js
xor
iret
jbe
in
mov
pop
cltd
mov
mov
out
or
mov
mov
imul
sub
loope
movsl
jns
jae
stos
js
or
out
add
sbb
adc
fiadds
repnz
and
in
pop
mov
lahf
push
fisubs
and
dec
adc
hlt
fsub
in
fs
xorb
ficoml
jl
xchg
ss
and
in
inc
dec
fcom
call
not
sub
test
in
sub
and
in
cmc
fmulp
add
rsm
push
les
sub
xor
daa
add
pushf
adc
jmp
fwait
xor
xor
and
fdivrl
mov
insb
add
cmp
in
push
sbb
jne
jmp
pop
push
out
jle
in
jno
mov
xchg
out
stos
in
jne
sbb
dec
daa
in
xor
xchg
in
sarb
add
add
add
mov
inc
out
sub
adc
in
fcomp
flds
aaa
test
pop
lea
movsb
int3
mov
imul
jnp
adc
lret
test
mov
aas
mov
test
and
ret
into
out
xchg
dec
daa
jmp
sbb
sub
insb
popf
in
or
pop
inc
imulb
and
pop
insl
rclb
in
nop
mov
setp
adc
testb
pop
xlat
adc
mov
out
imul
inc
mov
mov
test
dec
negb
ss
ljmp
aam
mov
xchg
or
dec
imul
cmp
pop
subl
in
or
adc
repz
fmul
in
cmp
lahf
jl
inc
push
dec
in
out
xor
or
in
adc
push
test
or
inc
xor
sahf
in
in
mov
mov
add
mov
jecxz
dec
fs
mov
adc
out
scas
in
sbb
dec
jo
lahf
jge
in
sbb
cmp
xchg
imul
jne
pop
jns
icebp
mov
test
pop
cwtl
push
je
xlat
sbb
outsb
std
gs
or
adc
inc
mov
push
not
rclb
add
in
push
add
in
sarl
jg
and
insb
pushf
cmpsb
icebp
xor
rcrl
or
scas
push
in
popf
in
mov
xchg
pop
mov
push
mov
pop
mov
and
jl
in
ret
aas
pop
mov
push
add
xor
adc
push
push
cltd
in
mov
je
adc
in
aaa
shll
repnz
or
mov
adc
dec
or
jg
fisubrl
xchg
aam
ja
cmp
sbb
sbbl
push
jno
add
pop
sbb
repz
enter
mov
aaa
mov
stos
mov
cmpsw
xor
cltd
call
mov
jb
fnstsw
in
inc
xlat
mov
in
mov
gs
in
sbb
cmpsl
mov
in
pop
adc
ffreep
inc
in
in
push
data16
add
jle
stos
jmp
inc
push
xchg
xchg
in
inc
arpl
in
xor
in
int3
addr16
sbb
jns
repnz
add
pop
jno
jae
or
or
push
shlb
or
sbb
sti
jb
mov
imul
xor
xchg
in
mov
push
pop
fisttpl
insl
and
push
mov
imul
sbb
fsubrs
imul
in
rclb
dec
lds
push
call
pop
add
cmc
xlat
fldlg2
sub
out
lret
inc
in
pop
loopne
sbb
cmp
jge
cmp
mov
in
adc
lahf
jmp
ja
movsl
in
hlt
call
addr16
pop
dec
mov
lcall
xchg
pop
add
mov
movq
inc
ljmp
jmp
and
mov
xor
dec
jp
iret
js
mov
cmp
mov
orl
repz
lret
sub
test
lock
mov
adc
fbld
icebp
add
retw
aad
test
xchg
xor
call
cld
pop
aam
push
jmp
icebp
pop
adc
hlt
jns
mov
xchg
or
push
lods
or
imul
in
into
stos
dec
sub
jns
mov
sub
loop
cmp
sahf
sub
pusha
mov
subl
push
add
es
int
add
or
leave
pop
inc
in
adcb
and
dec
jmp
jb
test
or
mov
insb
sub
pop
fsub
cld
mov
dec
mov
jne
repz
jmp
mov
mov
inc
call
test
and
cmpl
outsb
popl
jno
fstl
movsl
adc
stc
fisubrs
in
or
aaa
cmp
sbb
outsl
lds
fbld
call
adc
hlt
orl
je
fwait
int3
or
sahf
push
push
mov
cli
cmp
stos
mov
outsb
loop
je
in
dec
pop
cmpsl
adc
mov
jb
ds
test
push
and
mov
add
cmp
and
ljmp
and
xchg
xor
sub
or
dec
pop
and
sub
lret
popf
cmp
loope
pop
mov
fidivl
jb
dec
loop
ja
sub
xchg
fdivs
xchg
bound
xor
inc
aam
or
sbb
in
lahf
imul
and
jno
in
pop
jno
stos
dec
jmp
enter
lret
iret
imul
dec
in
inc
push
lds
in
xor
jg
in
or
cli
or
loopne,pn
and
sbb
in
in
incl
fstl
mov
or
sub
in
mov
jbe
jo
xor
mov
and
movsb
icebp
scas
ret
pushf
clc
jns
sbb
das
cmp
mov
xchg
aam
outsb
jnp
in
xchg
xor
xchg
scas
testb
in
test
int
in
scas
and
mov
aaa
movsb
push
pop
lods
push
cmp
hlt
or
xlat
sar
cld
clc
insl
shl
test
popf
rclb
adc
and
cli
aaa
or
pop
imul
xchg
sub
fucomip
dec
push
dec
sti
arpl
mov
xchg
scas
cmp
dec
xor
xchg
fwait
or
cltd
xchg
insl
jle
mov
ss
stos
in
pushf
js
loop
mov
out
lret
sub
xchg
or
repnz
sbb
leave
jnp
in
mov
or
es
aas
and
ljmp
or
movsb
fndisi(8087
dec
in
inc
imul
xor
scas
in
sbb
mov
repnz
in
add
dec
imul
or
inc
jmp
in
int3
mov
mov
xchg
pop
cmp
sbb
mov
mov
add
jb
in
dec
rcll
jle
or
inc
test
adc
fwait
push
sbb
imul
fs
pop
dec
lods
je
ds
mov
dec
fistps
jecxz
lea
xchg
in
xchg
fnstcw
loope
ret
add
in
cs
rclb
movsl
jb
push
es
inc
cld
test
and
in
mov
pusha
xchg
ja
mov
jg
stos
fldl
lock
mov
es
bound
sbb
loop
pop
xchg
lock
jno
cmovp
out
dec
push
in
sub
cmpsb
mov
xchg
movsb
add
in
out
mov
test
aaa
in
in
xlat
push
lahf
ljmp
xchg
fisubrl
push
inc
cs
dec
repnz
pop
inc
dec
in
push
sub
in
adc
scas
dec
lock
into
pop
test
mov
jg
daa
or
repz
fsubl
into
aaa
xor
nop
in
adc
xor
xor
adcb
or
dec
adc
js
mov
mov
sbb
sub
movsb
cmpb
mov
jae
mov
pop
or
mov
fidivrs
test
in
pop
dec
xor
xchg
call
std
decb
dec
scas
int3
xor
cld
sbb
loopne
in
in
cmpb
pop
leave
aam
jbe
in
in
ljmp
xor
xchg
es
mov
cmp
jno
hlt
xlat
xchg
cmc
sub
cld
xchg
cmpsb
jae
adc
idivl
or
pop
in
cmpsl
mov
pop
jmp
call
popf
hlt
xchg
out
call
pop
repz
xchg
call
cmpsb
cld
insl
mov
jne
or
inc
stc
sti
loope
call
stos
in
loopne
pop
or
rcr
mov
mov
add
jg
push
mov
inc
out
xchg
dec
adc
mov
test
pop
push
cmp
push
in
lods
dec
dec
push
out
pop
sahf
push
xchg
stos
or
movsb
sahf
lret
push
adc
clc
pop
repnz
scas
fstps
xchg
es
inc
adc
enter
add
popf
repnz
in
lds
stos
in
mov
pop
in
dec
xchg
mov
push
paddb
mov
jae
call
or
jl
push
and
shll
out
cmc
add
xchg
add
bound
in
mov
mov
in
mov
and
addb
mov
in
punpcklbw
jg
pop
lret
or
pop
js
or
mov
daa
dec
test
cmpsl
data16
inc
mov
sub
push
and
push
jo
in
push
sti
in
fs
cld
out
mov
loope
jl
cmc
jo
jmp
xor
sbb
in
push
jns
dec
repz
pop
xchg
fistps
and
loopne
in
fnsave
xor
scas
mov
inc
add
jecxz
sub
push
ss
adc
sub
out
in
sbb
arpl
sbb
xlat
movsb
mov
pop
pop
hlt
cld
add
sarl
push
and
insl
mov
popf
pusha
icebp
push
stc
faddl
mov
aaa
cmp
mov
push
notb
enter
ret
sub
lock
push
xchg
dec
mov
ja
cwtl
fsubrs
pop
je
stos
fimull
push
arpl
leave
cld
cld
mov
xor
imul
ret
cmp
sbb
lret
test
xchg
xchg
imul
stos
adc
rcrl
fimull
jge
in
push
ret
jle
aas
sbb
lahf
aam
faddp
fucomip
ss
xchg
movsl
lret
enter
mov
push
sub
pop
jge
pop
repnz
xchg
outsl
or
cmp
imul
popa
cmpl
iret
mov
in
in
inc
cmp
in
test
shrd
inc
call
sti
and
pop
mov
dec
add
fdiv
jne
or
xorl
in
push
add
loope
in
loop
into
jno
ds
xchg
in
and
pop
cmp
rorb
push
add
push
mov
jl
xchg
fsubr
das
cmp
sub
out
in
sub
lods
jne
in
mov
sbb
imul
jno
add
push
cld
btc
mov
addr16
out
in
add
dec
xchg
jg
jne
in
sti
mov
mov
jp
add
xor
imul
enter
mov
daa
jmp
lahf
dec
scas
movsl
mov
jle
or
fsub
sub
lcall
imul
xchg
int3
clc
jg
scas
and
in
repz
into
mov
outsl
nop
add
xor
iret
sbb
in
pop
cltd
xchg
arpl
std
ffree
cmp
add
push
mov
push
mov
inc
insb
mov
xor
in
je
aaa
cld
adc
pop
in
xchg
add
std
mov
test
sub
int
imul
jns
lods
in
cmpb
dec
add
sbb
in
sahf
xchg
xchg
loopne
inc
call
insb
push
push
push
or
or
cmc
cmpsl
mov
adcl
mov
js
mov
or
enter
mov
mov
mov
mull
push
out
in
bound
mov
loopne
xchg
imull
enter
mov
push
fsts
sub
movsb
jecxz
mov
push
lret
cld
add
test
and
push
in
cmpl
inc
or
call
stos
aas
jnp
pop
pop
inc
in
mov
shrb
mov
mov
stos
add
xor
aad
mov
push
add
filds
push
into
decl
in
and
int3
popf
shl
hlt
jecxz
sub
cli
mov
adc
or
testb
pop
push
insl
push
mov
or
jb
in
out
dec
push
inc
ret
outsb
sub
cmc
add
mov
in
in
xor
iret
jge
mov
int
das
xchg
lods
mov
in
je
cs
aad
add
pop
ja
mov
push
add
add
push
int
in
mov
jecxz
out
pusha
rcrl
in
shlb
push
aam
mov
add
orl
sub
pusha
imul
sbb
int
in
mov
mov
in
ss
mov
push
or
lret
scas
ja
test
push
and
mov
or
adc
jp
repz
inc
das
test
int
cmp
jle
jg
lock
sbb
cmp
data16
shr
jns
jb
in
fcoml
addr16
and
in
add
jns
cmp
pop
push
addb
and
nop
outsb
push
shll
push
and
mov
clc
dec
push
and
outsl
and
mov
jmp
gs
hlt
in
js
and
je
insl
in
cmp
out
sub
xor
rorb
in
mov
test
subb
testb
inc
mov
sti
fnsave
leave
in
cwtl
adc
rcrl
outsl
sub
lahf
int
mov
outsl
aas
mov
std
in
or
iret
stos
in
imul
cmp
lret
push
mov
adc
mull
xlat
popf
fidivl
cwtl
mov
adc
pop
cmp
sbb
pop
cltd
mov
aaa
ss
icebp
sbb
in
dec
fmul
jno
cmp
aas
movsl
cmp
pop
into
imul
outsl
pop
add
xor
in
pop
mov
mov
orb
test
mov
mov
xor
cmp
in
lods
loop
xor
adc
mov
fs
sbb
and
lahf
xchg
cmpsb
xchg
cmp
cld
sub
jecxz
sbb
filds
gs
ljmp
jge
cld
sub
dec
pop
in
outsl
add
subb
lahf
adc
ljmp
cltd
adc
pop
adc
ret
or
lahf
xchg
into
outsb
je
call
mov
xchg
in
mov
inc
pop
push
in
test
mov
xor
xor
dec
add
imul
mov
test
adc
es
in
xor
ljmp
jbe
sub
ret
and
fwait
jmp
cs
movsl
mov
mov
push
sub
mov
fdivr
imul
ds
xchg
mov
les
jg
push
lds
repz
jp
fcmovne
sahf
nop
pop
in
sbb
in
push
mov
and
in
addr16
cltd
inc
dec
in
popf
arpl
adc
hlt
mov
mov
stc
ljmp
jle
iret
jae
push
pop
push
add
add
pop
jns
outsl
out
in
xor
in
or
mov
je
popf
lea
mov
jb
loopne
ficoml
insl
orl
test
in
cmpsl
mov
xor
int
cmp
pop
in
jo
repz
jmp
mov
cmc
mov
hlt
cld
test
add
and
out
test
fsubs
push
sbb
imul
mov
les
test
imul
adc
inc
in
cmp
sub
push
in
aad
sbb
insb
out
in
arpl
cld
cmp
cmp
in
inc
inc
push
mov
sub
xchg
dec
pop
call
sub
repnz
insl
inc
or
aaa
in
sub
int
mov
shr
xchg
fs
dec
call
cltd
rcr
enter
sbb
pop
pop
adc
in
jle
shlb
test
pop
sahf
sub
call
negb
in
arpl
div
cli
std
popf
lret
push
mov
adcl
in
pop
jae
or
dec
pop
movsl
in
ret
pop
xchg
cmp
sarl
in
aas
in
popf
mov
repz
and
pop
bound
xchg
adc
sub
jg
setg
divl
ja
ljmp
sub
je
sub
daa
in
adc
jecxz
xchg
in
add
bound
lods
or
sbb
pop
add
add
testl
add
mov
out
jae
in
pusha
or
int3
shlb
lret
cmp
aam
adc
mov
test
call
popa
inc
in
mov
stos
sbbb
mov
es
rorb
cmp
repz
imull
jo
add
stc
sub
xchg
and
dec
scas
outsb
out
push
mov
push
lds
push
aam
arpl
xor
in
icebp
xor
mov
and
loope
ret
xchg
push
jmp
in
mov
inc
in
jge
popf
mov
andnps
push
sub
aad
push
shr
mov
imulb
cmpsb
or
ret
jbe
shrb
push
mov
fldcw
mov
in
sub
repz
push
sti
sbb
cmp
mov
pop
or
in
divb
xor
imul
popf
mov
xchg
dec
pop
enter
lods
repz
stos
in
push
leave
mov
mov
fidivs
test
and
rcll
adc
sbb
js
in
add
adc
or
enter
mov
inc
inc
push
aas
mov
cmp
dec
and
lods
in
jb
jecxz
mov
hlt
inc
and
shl
in
lahf
popa
pop
jl
paddsb
les
stc
add
out
cmp
dec
sub
in
jnp
jle
jb
inc
imul
rcrl
xchg
mov
cmp
loopne
imul
or
out
loop
mov
aaa
inc
gs
or
jecxz
in
ss
test
ficomps
test
fnstenv
cmpsl
inc
int
imul
dec
or
in
gs
cmp
outsl
aaa
or
rorl
or
insb
imul
or
shlb
int3
inc
imul
sbb
pop
pop
outsl
dec
fs
sub
flds
je
mov
rorl
lahf
add
ljmp
xor
xor
cld
out
mov
sbb
in
mov
adc
inc
daa
xchg
loope
sub
fucomi
fcomps
add
loope
fsubrl
pop
cmp
mov
jg
leave
pop
inc
jbe
xlat
jnp
add
into
in
push
push
nop
ja
mov
pop
mov
dec
jne
hlt
cltd
and
in
dec
shrl
std
inc
sub
imul
inc
push
cmp
mov
sub
cltd
cmp
shr
dec
jae
bound
int3
in
lea
mov
in
pushf
out
test
in
cltd
push
adc
cmc
dec
dec
in
repnz
pushf
dec
stos
inc
inc
adc
pop
cld
loopne
data16
mov
mov
test
jbe
int3
and
cmpsl
add
or
sbbl
movsl
sahf
sbb
lock
sub
int3
pop
imul
xlat
in
popf
mov
add
in
fstl
lock
rclb
imul
dec
xor
pop
inc
xchg
inc
adc
mov
inc
push
in
push
and
out
add
pop
mov
insb
pop
cmp
cld
jae
icebp
mov
in
sbb
aam
sub
imul
mov
stos
lds
push
pop
mov
test
movsb
int
dec
in
imul
add
neg
jp
test
inc
push
bound
adc
nop
dec
fbld
cmp
test
pop
ret
push
push
icebp
mov
in
push
lret
mov
mov
xchg
scas
xorl
pop
iret
cmp
mull
xchg
add
in
inc
int3
jns
test
ljmp
insb
ja
ret
in
jge
test
pop
movsb
in
loope
pop
int
mov
lds
jno
hlt
dec
rorb
int3
test
loope
inc
xchg
dec
ja
mov
jbe
in
mov
repnz
mov
sbb
jb
lock
mov
xchg
mov
or
arpl
aam
fldenv
mov
xchg
andl
mov
imul
pusha
dec
or
call
out
lret
push
mov
cld
sahf
cmp
imul
arpl
in
and
or
xchg
in
scas
pusha
shrb
outsb
testb
sub
mov
push
fs
out
adc
xchg
out
shrl
cwtl
iret
loopne
inc
xor
and
sub
scas
in
mov
addr16
push
mov
sti
push
ret
fsubr
js
stos
outsb
test
in
mov
cmpsl
jo
shll
fwait
xchg
gs
pop
push
cs
add
in
fistps
movsb
cmp
out
jno
push
cmp
add
fsubrl
scas
xlat
fsubrs
aad
push
and
shl
inc
mov
aaa
or
pop
and
jmp
in
les
jo
sti
push
aaa
in
stos
mov
mov
mov
dec
mov
mov
nop
dec
scas
mov
or
in
jo
jg
jnp
lret
push
in
scas
xchg
mov
cmp
xchg
ja
pop
repnz
mov
add
insb
mov
and
in
out
iret
inc
or
and
push
fcmovnu
ret
test
cld
rorb
shr
mov
es
in
mov
push
repnz
pop
xor
ja
in
divl
aad
xor
iret
clc
jnp
in
add
mov
addb
add
push
in
adc
imul
mov
fidivrs
adc
fs
mov
idivb
lock
xchg
rorl
sbb
sub
mov
push
cltd
in
pop
negl
cmpsl
loop
dec
in
mov
gs
add
popf
pop
xchg
or
jge
mov
mov
mov
je
or
aas
div
jb
jbe
inc
in
std
dec
das
out
test
adc
xor
pop
pop
insb
or
add
test
add
imul
dec
dec
ffreep
in
adc
leave
jno
mov
shrb
pop
jle
in
cmpsb
jno
lock
test
mov
fldenv
xor
xchg
jae
enter
jbe
in
pop
pushf
xchg
gs
mov
jmp
sub
push
push
inc
or
in
jle
jo
in
lcall
and
in
mov
jg
lods
imul
repz
into
in
cmp
nop
shrb
xchg
xor
cmpsb
lret
cmp
fwait
lods
stos
iret
imul
setns
dec
es
std
jge
jnp
loope
in
dec
mov
xor
out
sub
add
mov
rclb
adc
in
pop
out
movsb
sbb
cmp
in
sub
jnp
xor
xor
movhps
mov
sbb
in
push
xorb
and
fstpl
xor
shlb
jecxz
mulb
cmp
scas
inc
js
dec
in
cmp
fsubr
xlat
mov
andb
les
mov
es
call
aam
dec
in
cld
mov
fwait
scas
call
mov
out
sbb
in
jp
insb
test
mov
sbb
jne
test
push
pop
rclb
in
stc
adc
push
call
stos
or
nop
daa
flds
mov
fisttpll
in
jo
add
loop
fmulp
ja
in
mov
pushf
test
mov
fildll
jnp
out
add
stos
pop
pop
daa
ror
push
ret
into
or
mov
jg
cli
jl
jge
mov
pop
pusha
adc
vaddps
test
adc
rorb
ret
ja
int3
inc
in
inc
test
iret
and
ret
mov
je
in
pop
mov
xchg
add
xchg
xchg
in
adc
inc
lar
sti
outsl
aad
leave
xchg
ja
in
mov
pop
popa
xlat
mov
add
sbb
in
and
dec
ja
jle
adc
sub
out
jmp
xchg
and
mov
or
xchg
mov
aam
cmpsl
out
xchg
in
sti
xlat
imul
sahf
in
inc
pop
mov
xchg
sub
pusha
test
incl
imul
fs
pop
or
lret
mov
add
ret
or
in
loope
lock
aam
das
in
stos
lret
notb
sub
fldl
outsb
lahf
adc
test
hlt
mov
and
lods
jo
arpl
mov
xchg
or
push
scas
imul
popa
jns
and
push
hlt
call
sub
out
outsb
in
mov
xor
adc
cld
jb
xchg
cmp
bound
out
ret
imul
shl
in
lret
movsb
mov
fwait
push
push
inc
jge
shll
cld
xor
es
leave
sub
in
pop
shlb
or
aaa
cmp
popf
pop
push
in
call
push
xchg
xchg
sub
xchg
cltd
jmp
test
push
pop
push
pop
imulb
cmp
rep
push
fisubl
pop
lret
push
shrb
cmp
aaa
sbb
xor
mov
pmullw
pop
hlt
mov
sbb
mov
or
in
adc
ficoml
mov
pop
insl
mov
lahf
mov
sbb
icebp
jmp
loop
xor
ss
cld
sbb
cmp
in
out
faddl
push
mov
pop
into
lods
pop
mov
out
xor
sub
mov
sbbb
popa
mov
xchg
xchg
stos
mov
mov
xor
cmp
aaa
xchg
in
popf
std
bound
and
call
push
outsl
shl
fstl
cmp
jge
imul
xor
loop
mov
je
dec
jg
movsb
sub
cli
jecxz
in
xchg
push
ds
pop
int3
add
jns
in
jb
pop
xor
stos
xchg
in
out
fcmovb
clc
mov
insl
sbb
xchg
ret
and
push
fsubr
lods
data16
ss
jl
xchg
ljmp
jno
fcompl
pop
inc
jecxz
mov
adc
in
ljmp
or
test
sbb
ret
ret
dec
fstpl
insb
fcomps
ljmp
mov
lods
int
hlt
outsl
add
pop
movsl
jl
push
addr16
push
in
in
mov
in
and
xchg
sbb
dec
inc
in
add
pop
fsubp
dec
mov
jg
jp
inc
packssdw
aam
xorb
xchg
dec
in
in
push
insb
push
xor
cmp
adc
test
outsl
jg
dec
sub
std
mov
leave
xor
mov
outsb
sti
push
sub
loope
call
xchg
dec
dec
lock
xor
mov
sub
test
loopne
xor
shr
jle
mov
mov
lea
adc
cmp
jmp
sub
stc
rcll
pop
imul
lds
lods
in
push
dec
jb
negb
adc
imul
cmpsl
addr16
pop
lods
pop
or
xlat
mov
xchg
push
add
es
aas
push
mov
jbe
mov
aad
and
pushf
in
xchg
jmp
in
xor
out
push
lret
js
jae
mov
test
push
hlt
fisubs
daa
in
push
mov
mov
dec
stc
add
adc
imul
stos
dec
clc
aaa
pop
pop
ja
daa
in
sub
sbb
sub
pop
xchg
push
repnz
jb
rol
rcr
push
push
mov
in
pop
or
jge
and
sbb
pop
lds
testl
sahf
stc
jmp
pop
cli
rol
cmpxchg
std
mov
pop
inc
add
lock
in
mov
sbb
sub
loopne
in
push
and
stc
pop
in
ds
inc
insb
pop
adc
lds
loopne
push
mov
pop
in
stc
xchg
mov
mov
movsb
rdpmc
cmpsb
xor
mov
insb
ja
stos
pop
insl
or
out
dec
pop
rorl
fists
fsubl
out
xchg
stos
xchg
inc
mov
repnz
in
fadd
inc
aam
sub
imul
jno
mov
stos
dec
add
test
mov
sub
sbb
in
push
dec
ds
lret
dec
mov
xchg
mov
aaa
jge
sti
std
in
jns
xor
cld
in
sub
fstl
inc
loopne
fs
push
lcall
rolb
and
outsb
sbb
cmpl
arpl
mov
sub
and
or
dec
or
in
test
jo
out
jecxz
in
jmp
aaa
push
ljmp
pusha
mov
in
and
imul
mov
jno
mov
add
add
shr
call
sub
stos
in
lea
call
push
inc
mov
addr16
sbb
popf
push
sti
shl
in
push
mov
and
cwtl
add
rorl
or
lock
mov
movups
cs
icebp
or
in
pop
jmp
xchg
pop
sub
inc
in
repnz
lret
movsl
fmulp
jnp
xchg
icebp
xor
pop
mov
mov
mov
xchg
mov
pop
sbb
fistl
push
xchg
push
scas
mov
in
add
mov
or
sub
shll
in
into
outsl
push
sbb
fs
shlb
cmp
stc
mov
cmpb
popa
call
jno
mov
mov
or
shr
test
lods
lret
xchg
push
jle
in
mov
xor
inc
dec
push
stos
shr
cmp
je
cmp
in
divl
cmp
pop
fmull
xlat
insl
jecxz
xchg
mov
scas
ds
call
in
jbe
in
test
xchg
inc
sahf
test
fstpl
fsubr
dec
mov
adc
fdivrl
sbb
fcmovb
movsb
sub
repz
mov
in
fstpl
fidivrs
in
dec
jno
pop
or
sub
sub
mov
sub
sub
adc
xor
out
push
add
fnstenv
test
iret
sbb
addr16
int3
pushf
sub
add
in
in
inc
jmp
ret
pop
movsl
movsl
xlat
adc
dec
or
stc
cld
fmuls
sub
dec
xchg
or
enter
mov
jg
sbb
inc
repz
fistpll
push
in
dec
imul
add
in
push
les
dec
outsb
sbb
mulb
sub
xchg
jle
push
sub
xchg
aad
jae
jl
in
dec
movsl
cmp
in
xor
cwtl
icebp
xorb
in
or
addl
sti
adc
sbb
loopne
shlb
xchg
push
sbb
sar
into
and
lds
mov
dec
mov
push
jge
cld
in
pop
out
loop
cmp
es
sub
and
jg
lock
es
in
cmp
jne
loopne
add
in
or
int3
fdivp
in
jmp
sub
pop
jp
out
lret
out
jmp
out
insb
sbb
inc
repnz
pop
rcrb
pushf
jne
nop
dec
push
in
fisubl
fwait
pop
stos
call
or
outsb
jno
call
int
dec
cmp
into
pop
mov
push
je,pt
add
adc
mov
mov
lock
outsb
xor
lret
insb
xchg
test
pop
outsl
mov
push
sub
pop
roll
lret
ljmp
add
and
adcl
in
pop
mov
jno
in
ret
sbb
sbb
fnstsw
inc
popf
jle
out
pop
gs
and
aam
ljmp
inc
popf
addr16
in
cmp
mov
test
dec
mov
sub
mov
mov
pop
in
dec
add
jp
mov
mov
int
bound
fdivrl
or
in
out
xchg
mov
clc
pop
and
and
mov
stos
add
lock
lcall
ja
lret
push
in
jl
mov
dec
icebp
pop
adc
or
push
push
ja
mov
mov
in
aas
inc
mov
je
mov
and
in
inc
jbe
xor
xor
cs
in
jnp
notb
jns
mov
and
lcall
mov
sbb
pop
xchg
outsb
bound
dec
sub
imul
pusha
xchg
add
push
and
aas
adc
test
rolb
pop
hlt
and
xchg
cs
in
cld
adc
rclb
dec
insl
aaa
mov
pop
mov
jns
mov
pop
jne
jbe
push
mov
or
cli
mov
in
dec
xor
cmp
lds
or
pop
mov
das
jmp
loope
push
adc
in
push
aas
inc
dec
in
inc
shr
xchg
outsb
jne
cmp
fisubrl
repnz
lds
in
jnp
test
xor
inc
in
or
mov
fcmovu
adc
sub
mov
sbb
jne
out
in
xchg
push
xor
and
in
sbb
repnz
call
aas
mov
repnz
and
mov
xor
xor
in
shll
popf
lcall
mov
aad
mov
adc
and
repnz
add
push
mov
imul
sub
lods
push
in
mov
jle
push
inc
push
in
je
sbb
in
test
mov
cmc
testl
or
jmp
insl
sub
idivb
inc
out
outsl
test
jbe
shr
pop
loop
iret
lcall
out
or
in
lods
pushf
xchg
bound
lods
mov
push
lret
mov
es
pop
xor
xor
and
inc
loop
mov
cltd
inc
push
js
les
imul
in
loopne
add
xor
and
cmp
lea
mov
insl
pushf
push
sub
test
in
and
stos
inc
movsl
out
jae
inc
imul
xchg
ljmp
imul
sbb
lock
loop
cmp
pop
inc
call
jne
dec
hlt
mov
in
cmpsl
sub
repz
push
add
nop
mov
aas
mov
ret
fwait
iret
outsb
scas
xor
dec
shlb
cmpsl
jns
jl
mov
fcmovnu
ret
push
call
lret
outsl
or
fnstsw
into
dec
sbb
dec
aaa
sbb
out
cld
jno
adc
adc
mov
in
pop
lea
jnp
js
in
xchg
adc
testb
jo
in
sub
mov
in
movsl
jno
cmc
in
inc
cmpsl
std
xchg
mov
or
dec
sub
testb
push
inc
xchg
cmp
adc
sahf
popa
xlat
push
xor
sub
xor
jmp
mov
jbe
push
test
lock
adc
xor
pop
jmp
test
in
xchg
cmc
shr
jge
mov
inc
lock
pop
outsl
in
cmp
jge
mov
jne
mov
mov
fmull
add
pop
mov
lea
sub
xchg
jg
in
std
and
push
stos
mov
adc
fiadds
arpl
insb
inc
cmp
adc
add
movsl
and
rcrl
femms
mov
outsl
in
ss
pushf
jle
arpl
in
cs
inc
push
inc
mov
int3
in
inc
xorl
pop
mov
mov
ret
in
mov
mov
jno
xchg
mov
ret
jbe
pop
jmp
pop
jns
and
das
jb
mov
mov
outsl
addr16
or
mov
dec
fs
pop
dec
mov
or
pop
int
in
xor
mov
mov
mov
in
mov
dec
sub
jmp
clc
call
jo
xchg
in
mov
bound
xor
cmc
imul
aam
mov
dec
imul
verr
inc
enter
in
jl
in
inc
mov
push
in
dec
call
jecxz
push
sub
or
or
lret
pusha
mov
mov
icebp
and
or
push
in
push
mov
mov
or
negb
add
lahf
loope
and
mov
test
add
or
and
lret
fnstsw
scas
mov
jns
loope
test
shlb
push
xlat
dec
in
fsubl
movsb
in
xchg
fwait
loope
or
add
or
push
mov
in
or
in
add
cmp
adc
gs
shr
push
repnz
mov
jecxz
shll
mov
aaa
enter
sub
insl
in
push
in
jns
sub
ret
sti
dec
inc
lock
push
call
mov
push
and
in
movzwl
add
in
fwait
push
clc
gs
in
mov
or
cmp
ret
leave
iret
sub
stos
mov
mov
mov
add
incb
mov
mov
pop
pop
sbb
fcmovnbe
imul
ss
outsb
in
test
enter
repz
pop
pop
dec
in
in
ss
shrl
in
mov
sub
and
mov
daa
inc
xor
imul
dec
pop
add
sbb
fwait
lcall
in
cmp
pop
or
inc
xchg
aam
sbb
sarb
mov
cmp
add
loop
xor
fbld
push
test
lods
jecxz
xchg
xchg
mov
ds
dec
in
bound
and
cli
shlb
icebp
jb
aaa
ret
add
sbb
outsb
fidivs
or
pop
jno
push
sub
xchg
or
or
xor
imul
xchg
js
adc
in
mov
inc
insb
adc
or
cmpsb
in
jle
mov
mov
and
in
repnz
flds
dec
mov
add
in
je
ficompl
outsl
push
jb
add
jbe
adc
lds
movsl
inc
sar
in
in
push
sbb
fsubr
popf
int
lcall
sahf
in
xchg
mov
adc
jns
sub
div
in
pop
xchg
dec
fisubs
nop
imul
xchg
in
ror
mov
add
scas
dec
divb
mov
mov
or
cwtl
in
or
mov
add
ret
in
dec
push
xchg
gs
push
sbb
sub
test
xchg
out
adc
mov
in
ja
inc
push
cmp
in
int3
popa
inc
adc
cltd
loopne
scas
in
push
push
and
test
fcmovb
or
mov
popa
call
mov
pop
jecxz
cmp
jnp
sbb
subb
mov
jns
pop
incb
in
test
or
in
pop
test
test
jmp
fwait
jmp
into
push
imul
out
gs
mov
in
jb
idivb
popf
shll
mov
push
scas
in
mov
fdivs
add
sbb
stos
push
scas
movsl
pop
pop
paddb
fisubs
int
call
into
and
xor
add
aad
mov
inc
imul
repz
pop
notl
lret
gs
test
shll
xorb
test
movsl
adc
in
xchg
cld
pop
sbb
aam
xlat
ret
out
push
mov
enter
scas
adc
aam
popf
in
pusha
pop
pop
int
imul
mov
js
addr16
in
pusha
sysret
movl
ja
sbb
pop
push
repnz
out
sub
sbb
clc
cmc
push
adc
and
or
jbe
jb
inc
lock
jmp
mov
inc
das
cmp
mov
roll
stos
xor
pusha
jbe
in
mov
je
cmp
int3
mov
bound
mov
out
negl
in
adc
data16
in
fmuls
das
insb
icebp
mov
movsl
in
cmp
cmpsl
testb
dec
insl
lahf
adc
hlt
movsb
leave
jae
or
in
ret
dec
call
outsb
push
stos
cli
mov
in
hlt
in
xchg
scas
add
add
jle
in
xchg
push
or
scas
mov
outsb
les
xor
pop
in
popa
or
sahf
call
cmpsb
push
in
add
shrb
imull
in
je
lahf
push
jae
jns
in
sub
mov
mov
ja
in
cmc
std
rol
or
or
jbe
in
pop
rclb
jmp
mov
cmp
mov
mov
insb
pop
cwtl
add
pop
in
jp
jmp
pop
stos
mov
sbb
fistl
pop
test
push
push
in
ja
xchg
adc
mov
fsubr
adc
cmc
fstpt
jnp
sti
test
in
fstl
or
mov
loope
mov
and
jl
lret
imul
xchg
mov
mov
sbb
movsl
in
mov
ret
cmpb
sub
push
lods
notl
pop
outsl
and
xlat
and
adc
lcall
xchg
andb
fcomip
ja
fs
mov
loop
pop
cmp
aam
in
jb
or
insl
xor
inc
rcll
adc
sarl
and
mov
pop
imul
je
sbb
sbb
roll
dec
ds
adc
in
inc
popf
mov
mov
push
out
cld
das
pop
call
xchg
mov
dec
and
mov
xchg
imul
rcl
in
out
aas
inc
jg
insl
mov
imul
aas
orb
mov
inc
mov
or
mov
shll
cmpsb
or
sti
in
xchg
add
mov
cmpsl
sub
mov
inc
inc
cmp
sbb
out
inc
push
pushf
ret
and
mov
nop
fisubl
dec
movsl
popf
repnz
inc
test
sbb
jo
aam
in
or
dec
inc
dec
pop
pop
in
jecxz
pop
mov
in
in
rolb
inc
repz
push
jne
fwait
xchg
sbb
add
iret
mov
js
or
push
cltd
mov
call
out
mov
inc
push
in
clc
push
mov
cwtl
stos
loope
jmp
in
xor
loopne
cmp
ljmp
adc
fdivl
in
mov
xchg
jnp
in
jle
test
and
test
mov
sub
fsincos
push
push
cmpsl
call
push
int
repz
add
mov
sbb
out
mov
js
xor
cmp
into
lret
shrb
in
mov
sub
in
mov
mov
call
mov
xlat
in
push
adc
cmp
or
fwait
in
sub
scas
push
mov
xchg
xor
mov
cmc
jae
cmp
or
cmp
mov
stos
loope
and
inc
cmpsl
stc
in
js
call
stos
pop
popf
xchg
pop
sub
jmp
out
imul
add
cwtl
pop
pop
andps
test
dec
smsw
pop
in
mov
leave
incb
adc
loop
fbstp
mov
xchg
fstpl
push
int3
outsl
dec
dec
in
sahf
pop
lahf
es
push
fldlg2
cli
rcrl
mov
aas
cmp
xor
popa
pop
cmp
loope
ret
nop
test
or
scas
and
ret
repnz
mov
pop
lods
fisubrs
mov
sbb
pop
xchg
movl
jbe
xor
mov
ja,pn
add
jg
sub
int
out
lret
imul
in
dec
mov
push
mov
out
cmp
mov
repnz
mov
dec
icebp
aam
loopne
xchg
in
inc
sbb
shlb
cli
push
stos
ret
pusha
mov
rorl
jmp
adc
lret
lds
dec
mov
xor
sub
fdivl
push
test
or
or
cltd
ret
cmp
inc
repnz
test
mov
insb
test
cmp
sub
adc
in
push
push
scas
loopne
add
fstpl
in
mov
mov
pop
clc
repz
scas
push
movsl
pop
jns
insb
aaa
in
push
mov
push
inc
lret
mov
ret
outsb
sti
repnz
in
xor
scas
add
out
les
rorl
xchg
push
push
cmp
shrb
pop
lods
in
push
jmp
pmuludq
stos
adc
insl
cmp
jge
cs
aaa
xchg
icebp
pop
sub
in
rolb
mov
stos
in
rcr
pop
mov
enter
cmp
leave
test
inc
pop
mov
cld
out
icebp
sub
xchg
ja
pop
test
test
push
pusha
xor
pop
push
in
addb
dec
fwait
sub
fs
mov
repnz
mov
adc
jo
and
xorl
jae
in
xchg
mov
push
pop
aam
in
adc
xchg
in
and
mov
lods
jne
enter
mov
sbb
or
pop
aam
in
ret
lods
dec
std
fisubrs
leave
in
and
and
push
cmp
andb
scas
mov
fdiv
fstl
enter
sub
cmp
outsb
out
in
out
cmp
in
mov
push
jle
fwait
incl
adc
sbb
out
pop
dec
in
das
mov
xchg
enter
movsl
xor
lea
and
in
jecxz
movsb
xor
lcall
and
push
xchg
in
inc
rcr
ss
jb
test
push
sub
mov
add
xchg
or
gs
or
dec
insb
test
in
fwait
imul
insl
out
iret
jno
jge
fildl
jb
push
cmp
sar
cmpsb
and
or
add
call
sbb
inc
sub
and
sbb
xor
xor
shlb
or
daa
jecxz
hlt
int
scas
dec
mov
mov
mov
add
pop
fcoms
mov
lcall
shrl
in
mov
adc
iret
in
push
sarb
jae
lods
in
lahf
pop
nop
ss
mov
adc
and
add
call
mov
cltd
rcll
imul
cld
jmp
mov
mov
jle
sti
mov
in
sub
sub
in
jae
adc
xchg
enter
notl
imul
xchg
adc
mov
cmp
mov
aam
dec
cmp
adc
in
jp
sbbb
push
addl
push
lds
xor
in
dec
scas
jno
sbb
mov
push
or
testb
mov
sbb
add
dec
es
sahf
push
enter
dec
mov
sub
stc
jmp
fwait
add
in
push
testl
xchg
ss
or
jo
cld
inc
fldcw
mov
or
test
outsl
lcall
call
es
pop
sbb
inc
cmpsl
in
or
mov
lret
paddsb
push
das
xor
and
hlt
jge
sub
mov
adc
in
adc
scas
rcrl
insl
push
in
in
jl
daa
push
inc
mov
in
int3
mov
test
in
arpl
add
cli
add
negl
mov
imul
dec
ljmp
xor
stos
push
mov
inc
std
xchg
push
popa
sbb
ret
in
xor
adc
test
cld
lcall
cmp
ret
xchg
sub
dec
addr16
sub
mov
test
or
pop
ja
dec
xchg
in
enter
inc
out
aas
in
das
mov
cmp
jb
test
pop
out
pop
fs
xchg
mov
stos
cli
add
pop
pop
jns
aam
js
xchg
stc
out
sub
es
sarl
xchg
pop
lret
and
call
dec
shl
push
test
ss
dec
hlt
cmp
or
lret
in
test
jl
data16
into
adcb
sarb
jp
loop
das
in
mov
sub
or
outsl
sbb
inc
adc
jae
sub
es
jo
cld
ret
push
sti
nop
in
movsl
and
dec
jmp
jns
js
cld
popf
sub
lock
outsb
das
mov
xor
sub
jnp
rcrl
call
fldl
or
mov
in
pop
push
and
cltd
hlt
fists
dec
pushf
insl
jno
test
cwtl
icebp
jl
jne
in
test
mov
aaa
in
push
add
mov
in
and
xchg
jbe
push
in
sti
add
repnz
in
cwtl
sub
mov
in
mov
cld
mov
and
mov
xor
test
mov
in
adc
cmp
in
data16
cmpsb
jne
leave
orb
insl
or
inc
xor
inc
or
jo
in
push
mov
mov
lock
add
mov
in
mov
push
ss
mov
sbb
dec
push
enter
dec
mov
nop
aas
mov
sub
xor
outsl
sub
xor
je
in
and
imul
dec
popa
push
insb
xor
or
sti
sub
adc
rolb
mov
pop
jle
adc
inc
push
jae
sbb
nop
mov
cmp
outsl
or
stc
push
je
loop
sbb
out
adc
push
gs
add
icebp
sbb
jge
sbb
cmp
in
rcl
imul
sub
popf
fdivr
and
in
pop
out
inc
stos
leave
mov
cmp
popa
mov
lock
in
jecxz
dec
test
adc
in
sbb
cmp
movl
cmp
fisttpll
xchg
pop
in
push
mov
loopne
cmpsb
xor
in
rorl
dec
mov
lret
in
mov
mov
rorl
imul
add
pushf
inc
iret
dec
mov
aas
sahf
and
jmp
and
jae
in
sub
aas
and
pop
stos
in
dec
fsubrs
outsb
lcall
gs
lods
inc
rcr
test
pop
push
adc
repz
daa
sahf
or
xchg
fisubs
inc
add
insb
mov
adc
dec
jecxz
or
jne
test
in
jnp
cmp
imull
int3
hlt
dec
loope
repnz
jae
das
jno
mov
xchg
imul
jmp
adc
and
lea
cmp
lods
mov
loopne
std
fiadds
push
mov
cld
jbe
jl
mov
in
dec
sti
sbb
sbb
xor
sarb
and
cmp
add
push
movsb
inc
xlat
dec
call
mov
imul
les
inc
int
gs
inc
pop
dec
jp
inc
imul
lea
jmp
test
stc
insl
adc
test
jbe
pop
stos
or
ja
add
cmp
outsb
inc
mov
jne
push
push
out
pusha
pop
stc
mov
mov
ljmp
in
pop
mov
insb
sbb
int
pop
or
push
fwait
je
add
shr
fimuls
mov
das
adc
sahf
test
fists
mov
outsl
mov
push
ja
ficomps
int3
add
inc
sahf
insl
in
mov
cli
dec
imul
mov
add
pop
in
cmp
adc
outsb
into
ret
enter
jb
inc
ss
loope
and
outsl
in
sub
popf
shl
repz
mov
xor
in
pop
fidivs
dec
in
and
pminub
sbb
xor
into
ja
in
xor
sub
in
cmp
pop
mov
add
jb
in
roll
jne
xchg
mov
sub
aas
push
sti
cmc
or
or
stc
imul
and
inc
gs
mov
in
inc
mov
pusha
imul
ljmp
ja
cld
push
pop
dec
imul
jecxz
in
or
sti
leave
test
jnp
loopne
add
push
push
jp
pop
xchg
das
in
or
testb
sbb
imul
in
jl
jp
dec
xor
in
aas
lea
in
lods
jl
scas
scas
push
dec
jns
mov
repnz
sbb
pop
mov
outsb
mov
cwtl
mov
mov
adc
in
jne
jmp
push
shrb
addb
cmc
in
fdiv
clc
stos
das
shll
insb
mov
cs
out
icebp
in
in
mov
mov
aaa
or
lea
ret
enter
sti
and
dec
xlat
cwtl
movsb
sbb
jo
sti
pusha
repz
call
mov
in
sbb
push
test
cmp
mov
xor
lahf
in
mov
jnp
jl
dec
xor
mov
daa
fiaddl
in
jge
xchg
mov
in
dec
lret
in
stc
rdmsr
fucomi
enter
test
movsl
fs
jbe
xor
lock
mov
mov
jno
pop
in
cmp
lods
mov
mov
push
xor
in
outsl
and
mov
ja
push
movsl
push
popa
sahf
pop
sub
lock
dec
mov
mov
adc
outsl
xor
in
push
cs
inc
fwait
rolb
iret
stos
sbb
arpl
rcll
pop
xchg
cmp
in
cwtl
pop
testl
movsl
xor
inc
inc
ret
in
xchg
roll
mov
dec
push
shrb
test
mov
aam
jb
add
fs
jae
divb
outsb
sti
push
ja
idivb
and
imul
push
xchg
clc
pop
or
std
inc
orl
stc
cli
mov
out
in
cmpsb
mov
repz
mull
aam
add
in
test
inc
cli
ljmp
xchg
cltd
sub
push
enter
mov
movsl
arpl
in
add
or
sub
xchg
mov
dec
int
in
leave
pop
xchg
sysenter
mov
jg
push
fcoms
ror
repz
sub
xor
in
dec
mov
outsl
cltd
add
cmpsl
sbb
mov
mov
shr
jecxz
js
insl
sub
mov
test
cld
add
ucomiss
mov
movl
repnz
in
sbb
shll
insl
stc
in
jno
mov
pusha
sub
scas
adc
jae
xlat
je
testb
lcall
lds
inc
bound
dec
inc
jge
sbb
adc
pop
js
shr
mov
sub
dec
subl
mov
in
jns
repnz
jbe
popf
in
mov
adc
mov
fwait
in
in
fs
insb
pushf
imul
pop
cmpsb
imul
cmp
and
lahf
loopne
cmp
cld
mov
and
jne
dec
mov
mov
call
jno
in
cmp
daa
jecxz
in
adc
lds
lcall
jg
or
ds
in
mov
mov
sub
fbld
in
mov
sti
fcoml
or
in
push
call
jae
outsb
sahf
cli
xor
arpl
repz
test
in
cltd
or
in
push
cmp
int
rol
fwait
jecxz
xchg
ljmp
leave
and
imul
jp
and
test
shrl
push
push
pushf
paddsb
aad
xchg
clc
ja
test
or
leave
es
sub
test
cs
sbb
out
movsl
cmovl
cld
rcrl
loopne
test
dec
cmp
out
imul
and
sbb
stos
jl
inc
pusha
cmpsl
in
pop
sub
insl
mov
and
subl
fwait
lret
jnp
hlt
test
xchg
call
or
in
mov
jp
in
das
pop
iret
and
negb
fnsave
shll
push
push
aam
enter
adc
out
mov
jo
lock
in
and
js
scas
cld
push
outsl
dec
jns
popf
push
push
dec
or
and
aam
fdivl
fldlg2
jae
lock
fsubrs
pop
cld
or
jle
sub
push
clc
ret
iret
in
shl
popa
out
movsb
movsl
stos
jb
push
nop
pop
cwtl
hlt
or
in
mov
scas
cs
je
icebp
or
in
mov
cmp
cmp
xor
adc
pop
in
xchg
loopne
sub
push
movsl
es
jg
call
cwtl
clc
sbb
push
sbb
mov
in
cld
out
mov
pop
fcoml
cmp
in
ss
cvtdq2ps
test
insl
jl
into
xor
xchg
in
fisubrl
sub
stos
pop
mov
cmp
call
ss
push
negl
jge
enter
mov
in
mov
push
shl
pop
mov
mov
lods
adc
pop
fidivs
pop
mov
or
add
or
popa
cmpsb
out
fdiv
cwtl
mov
mov
inc
jp
in
cmp
mov
imul
fldl
or
sbb
sbb
rcr
repz
notl
js
aas
cld
mov
inc
gs
in
ja
jecxz
in
outsl
scas
jge
pop
fistpll
sub
rolb
pop
repz
arpl
out
loopne
cmp
mov
pop
jl
mov
mov
loopne
or
lcall
and
lahf
jecxz
in
xor
pop
jno
es
push
push
sti
out
push
mov
in
sub
cmpsb
ficoms
dec
ljmp
and
mov
jmp
addr16
leave
inc
in
call
nop
imul
jns
clc
jmp
movb
inc
jno
lea
in
out
test
fdivl
rorb
jo
in
in
ret
mov
arpl
cmc
pop
cmpsb
mov
push
arpl
mov
add
fdivs
lods
loop
add
in
in
iret
add
loope
dec
push
addr16
mov
imul
loop
sub
push
in
lods
jae
mov
flds
js
mov
fs
jno
frstor
dec
in
lods
pop
mov
in
mov
aam
dec
in
cmc
xor
popf
addr16
jb
in
into
addb
lahf
push
push
mov
push
sbb
in
inc
cmpsl
cltd
dec
or
in
inc
sbb
loopne
fdiv
in
push
cmp
jmp
int3
out
mov
nop
push
into
arpl
imul
add
pop
in
lret
adc
ja
dec
and
sbbl
out
dec
and
ficoml
insb
lret
pop
cmp
out
or
push
test
jbe
in
jmp
call
stos
xchg
xor
daa
hlt
in
sar
int
xchg
mov
popf
push
repz
mov
lock
mov
inc
ljmp
fildll
into
test
pop
sub
and
imul
pop
or
arpl
in
xor
lret
lret
sbb
in
andb
mov
shr
daa
mov
fst
lret
xchg
iret
cmc
imul
and
sub
xor
repnz
inc
into
icebp
add
xchg
rclb
in
fs
push
stos
aad
loopne
cmp
sub
xchg
sub
mov
add
loope
in
push
pusha
sub
out
and
ret
mov
fldt
lcall
lret
in
leave
mov
mov
stos
mov
jmp
cmp
mov
test
pop
mov
insl
in
mov
bound
lret
in
inc
cli
mov
add
or
in
mov
dec
inc
scas
in
das
test
sub
repz
jecxz
lahf
cmp
cmpsl
push
sub
gs
mov
jo
mov
mov
inc
mov
in
scas
dec
fiadds
jns
jb
in
pop
sub
push
push
test
fsubl
in
cmp
cli
xor
repz
mov
fstpl
sub
shlb
adc
in
iret
push
enter
stos
in
add
shll
int
in
cs
add
jb
in
xchg
mov
test
nop
adc
xchg
loopne
in
imul
push
sub
sbb
in
sti
mov
xchg
or
cwtl
pop
or
pop
ret
push
shr
mov
mov
sti
sbb
mov
lock
mov
xchg
xor
call
aas
ss
lock
jge
xor
sti
inc
in
dec
sbb
cmp
pop
in
pop
mov
pusha
pop
in
fisttpl
sahf
xchg
repz
push
sbb
xchg
ja
enter
ret
pushf
aas
movsb
pop
mov
push
lods
addr16
popf
outsl
push
or
test
push
cmp
mov
nop
out
outsb
pop
popa
scas
in
test
mov
mov
sub
cmp
pop
in
in
mov
aam
ljmp
lea
dec
in
cmp
rcrl
mov
cmp
mul
and
movsl
loop
sbb
gs
sbb
lret
jecxz
stos
sub
in
ds
push
jo
rol
push
inc
jb
icebp
sbb
inc
pushf
testb
imul
clc
cmp
push
xchg
in
or
mov
jp
xchg
test
pop
jmp
sbb
mov
cmpsb
push
mov
xchg
cmpsl
hlt
in
push
push
jnp
and
icebp
ss
dec
or
jmp
pushf
in
mov
int3
inc
and
jns
or
add
push
or
jmp
jle
movsl
rol
in
inc
in
xlat
sub
sbb
cli
outsb
iret
lcall
jbe
pop
stc
mov
cmpsl
adc
cli
jae
inc
pop
or
add
into
mov
icebp
nop
arpl
add
add
push
dec
shr
cltd
lods
pop
js
mov
jg
std
adc
mov
push
cld
rcl
nop
test
addr16
xchg
xchg
imul
or
sahf
sbb
ja
cmpsl
xchg
mov
lret
sbb
rcrb
aam
ret
loopne
xchg
in
mov
adcb
mov
movsl
cwtl
ret
cmpb
in
cmp
fs
mov
mov
in
mov
sbb
test
push
adc
loopne
adc
xchg
call
in
in
jmp
addr16
sub
cmp
mov
insb
cmc
dec
push
cld
push
adc
in
cld
imul
dec
sub
dec
mov
call
stos
test
imul
daa
inc
lods
in
int
call
sub
or
in
loopne
fiadds
jmp
addl
in
aad
fistpll
fisttpll
or
push
xchg
mov
int3
loop
inc
sahf
inc
pop
adc
arpl
js
into
mov
push
cmp
xchg
pop
in
adc
jecxz
ret
insl
in
xchg
inc
fcomip
inc
pop
push
imul
cmpsb
cmp
pop
inc
xor
repz
mov
dec
clc
xchg
imull
addr16
outsb
mov
mov
jae
pop
fstpt
fisubrl
xchg
testb
or
adc
mov
jge
xor
xchg
test
pop
out
sbb
add
sbb
adc
mov
cli
mov
and
stos
test
xor
movsb
or
in
into
pop
incl
pop
sarb
in
repz
or
imull
mov
data16
ljmp
mov
mov
out
ret
fstp
cli
jle
test
mov
jns
push
in
mov
jl
adc
push
push
sbb
in
scas
in
sahf
out
jns
mov
push
in
movsl
fcomps
mov
fsubrl
cmp
xor
xor
xor
jb
xchg
cld
insb
sub
jne
jbe
or
or
je
fbld
movsb
sti
adc
test
add
adc
or
icebp
xchg
pop
shrb
cmpsb
in
mov
dec
aaa
fcoms
shr
ret
in
es
call
sub
or
mov
add
pop
mull
inc
or
scas
bound
mov
xor
imul
and
cmp
loope
repnz
in
and
leave
fwait
add
insb
xchg
mov
sub
data16
scas
imul
jne
or
imul
and
add
out
pop
enter
adc
mov
je
pop
out
imul
add
in
xlat
fs
inc
hlt
and
test
incb
popa
imul
es
imul
outsb
mov
in
cmp
or
int3
call
jle
jmp
sahf
mov
shll
outsl
push
mov
rorb
add
lret
in
je
fisttpl
sbb
es
dec
mov
in
ds
and
out
in
sar
sub
jb
xchg
dec
arpl
out
in
or
push
xchg
cmp
and
rorb
inc
scas
stc
in
call
icebp
je
test
hlt
jns
rclb
pop
ss
gs
dec
push
push
call
dec
xchg
repz
inc
sub
xchg
dec
imul
add
push
int3
fldlg2
or
fcmove
inc
in
pop
xchg
jg
jle
sub
in
das
out
pushf
movsl
dec
sub
in
sub
mov
sub
call
and
xor
jns
or
adc
loopne
ljmp
or
insl
jg
and
inc
mov
xor
in
or
nop
jle
adc
in
inc
fcomps
popa
or
add
cmpsl
dec
in
mov
jns
inc
fdivs
mov
mov
cmp
stos
add
loopne
jae
sbb
fucomi
dec
jecxz
mov
xchg
movsb
mov
adc
adc
and
dec
in
lea
cmp
jmp
and
aaa
loopne
in
push
orb
andb
adc
dec
in
out
cmp
je
das
in
inc
jl
js
aas
sbb
sub
loop
xlat
inc
mov
in
sbbl
popa
cld
imul
cld
icebp
gs
inc
jnp
pop
dec
repz
push
jmp
cmpsb
testb
gs
lods
pusha
out
and
push
mov
insb
popa
out
cmp
cld
mov
pop
inc
pop
jne
imul
lret
es
pop
add
xlat
daa
xchg
push
loop
or
notl
pop
jge
ss
les
inc
cmp
mov
adc
or
test
mov
sahf
imul
movsb
popf
int3
push
out
arpl
mov
cli
dec
dec
out
test
test
negb
stos
lcall
bound
shr
inc
push
jl
in
and
movsb
sbb
in
popf
scas
loopne
pop
fwait
cmpsl
mov
and
aas
mov
jbe
xchg
pop
outsb
int3
in
les
cmc
in
aad
call
ja
jo
in
pop
and
push
in
out
sahf
test
into
outsl
in
mov
sub
mov
inc
out
jmp
or
bound
in
jne
inc
jmp
xchg
jo
jb
pop
or
and
cmp
fildll
pop
push
imul
xor
cmc
and
add
mov
or
lret
push
fwait
mov
test
enter
adcb
jp
aad
dec
das
or
adc
fnsave
sti
pop
frstor
mov
jne
pop
scas
push
xchg
enter
int
push
gs
and
in
adc
out
xchg
jns
in
movsl
daa
push
test
or
ja
xchg
outsb
outsl
pop
mov
or
mov
repnz
insb
in
xchg
pop
scas
add
aaa
movsb
cld
sahf
dec
outsb
sarb
inc
add
push
cmp
ret
in
add
sbb
insl
lds
les
shr
inc
int
sbb
aaa
in
or
fs
in
mov
dec
xchg
push
out
jle
aaa
fs
lods
jp
loope
in
xchg
adc
pop
push
std
sub
iret
and
in
jg
or
xor
pusha
push
jle
call
mov
in
fwait
push
inc
repnz
in
shll
xor
orl
je
loope
in
adc
mov
inc
jp
in
push
cmp
pop
in
fucomi
lds
xchg
mov
cmp
sbb
jl
in
and
mov
cmp
mov
cmp
scas
lods
mov
scas
sub
xchg
loopne
mov
orb
test
add
mov
or
add
in
jbe
addr16
out
xor
jle
aas
xor
mov
das
sbb
fchs
shrl
sti
mov
out
or
jns
je
xor
cmp
xchg
pop
fidivrs
in
mov
mov
push
inc
mov
dec
pop
popf
mov
push
xchg
stos
add
xchg
cmp
and
jle
in
pop
pop
loop
test
mov
ret
cmp
cmpsl
or
test
sti
cs
mov
jns
mull
dec
mov
das
add
sbb
nop
cmpsl
imul
xchg
ljmp
cmp
je
cld
jne
sahf
rorb
in
arpl
inc
dec
in
in
sub
or
outsl
in
leave
lcall
jle
cwtl
push
add
jg
in
mov
mov
test
outsb
adc
pop
dec
push
in
nop
xor
mov
cltd
jo
in
push
push
dec
sbb
sar
js
add
mov
sub
mov
push
jge
inc
sub
in
test
loope
incb
mov
xchg
add
jecxz
in
mov
sub
test
cltd
outsb
cwtl
adc
mov
loope
lea
mov
arpl
dec
cld
data16
in
test
subb
dec
stc
call
sub
inc
cmpsl
inc
popa
cld
jmp
leave
pop
in
sbb
imul
fsubrs
test
sarb
inc
in
pop
popf
push
fwait
mov
sub
jno
les
pop
stos
scas
ret
pop
fwait
jmpw
xor
in
mov
pop
dec
mov
insb
mov
adc
cld
fisttpl
insl
mov
jne
std
in
in
push
cmp
or
mov
jecxz
out
clc
mov
adc
hlt
xor
fisubs
adc
push
mov
or
mov
add
out
jb
xchg
mov
bnd
call
pop
push
cmpsb
test
sbb
outsb
push
push
roll
xlat
sahf
lods
dec
shlb
icebp
sub
cli
lock
or
jmp
test
push
mov
mov
aad
and
ret
out
xchg
popf
daa
or
in
and
mov
setb
fptan
addr16
cs
movups
das
sub
xchg
ja
push
jns
repnz
jb
in
or
int3
in
lcall
out
adc
cmpsb
in
bound
insb
ret
outsb
lea
sub
jnp
int
insl
push
push
mov
jge
mov
pusha
xchg
cmp
jmp
loop
sbb
mov
add
lret
jo
pop
fnstenv
cld
mov
inc
fsubrs
or
ss
in
sbb
jno
pop
inc
dec
imul
add
dec
add
lahf
push
or
jmp
in
adc
inc
in
dec
scas
mov
jge
xchg
push
mov
cmp
cmc
push
pop
jns
and
and
in
neg
lcall
loop
pop
xor
xor
lods
cld
cmp
pop
xchg
jnp
push
mov
shr
cld
cmp
in
jne
lret
hlt
aaa
mov
jmp
jg
in
sbb
add
xor
mov
in
cmp
xor
into
and
xchg
sub
lcall
jo
in
xchg
mov
push
cmp
pop
js
sbb
mov
lods
das
or
in
mov
sub
in
lock
mov
out
cld
ret
cmp
in
sti
push
leave
and
in
mov
test
xor
in
jl
xor
sbb
in
add
sbb
jecxz
and
in
and
insl
pop
in
sbb
cmp
js
adc
push
pop
xchg
ljmp
pop
sti
aaa
xor
mov
in
add
jno
in
push
mov
xchg
test
dec
into
cs
mov
jmp
in
cwtl
xchg
adc
in
js
or
inc
aad
jno
or
out
shll
pop
sti
mov
dec
mov
lcall
je
jge
repz
add
jecxz
test
push
ds
in
add
mov
jno
jb
or
fldl
and
mov
adc
call
or
movsl
enter
jo
imul
xor
shll
in
insb
faddl
fcoms
push
adc
xor
mov
fcmovb
cmpsb
jmp
lea
dec
in
lock
cltd
insl
pop
mov
hlt
sub
jle
in
ljmp
cmpsl
pop
sub
sahf
cmpsb
inc
jmp
dec
aaa
js
call
push
sub
leave
gs
lcall
ficoms
mov
jg
fstpt
push
repz
ss
hlt
jno
rcl
mov
mov
popf
push
iret
cld
fsubl
xchg
dec
in
or
std
mov
insb
mov
mov
rclb
mov
sti
push
test
insb
jae
mov
dec
lock
lret
add
cmpsb
mov
das
in
pop
test
xor
adc
into
fwait
lea
dec
pop
scas
adc
clc
ret
or
push
lret
push
jns
in
inc
movsl
xchg
cmpsl
xchg
adcl
lods
call
in
cld
js
in
pop
mov
int3
stc
je
into
in
loope
xlat
loopne
jg
insl
in
daa
jge
fistps
es
pop
xor
inc
lods
shlb
pop
dec
jb
lret
lret
jle
mov
jmp
and
fucom
jae
js
mov
mov
mov
test
cmp
adc
push
adc
in
movsl
sahf
xchg
push
xchg
in
outsb
stc
push
dec
xchg
call
stos
xor
call
insb
int
cmc
fisttpll
push
and
pop
in
mov
stc
notb
mov
in
inc
inc
lret
sub
in
xchg
fbld
es
pop
ds
hlt
int3
adcl
gs
movsb
cli
or
xchg
add
imul
push
pop
pop
in
adc
testb
out
cwtl
xchg
and
mov
jnp
adc
sub
jb
imul
jbe
pop
add
or
jecxz
and
loope
ljmp
hlt
aad
mov
xchg
into
jl
xchg
sub
out
xor
jbe
inc
and
out
clc
jb
in
pop
out
mov
xchg
pop
inc
in
xor
loop
cmc
fucomi
dec
jg
es
ja
hlt
ss
inc
hlt
nop
mov
stos
mov
in
cltd
aam
iret
jge
lret
in
jl
push
pushf
dec
mov
cmp
jmp
and
js
movsl
or
testb
imul
cmp
push
divb
fsubrp
frstor
adc
dec
fs
and
out
cmp
mov
sub
push
mov
mov
subl
adc
push
or
outsb
push
pop
nop
xor
clc
cld
mov
jg
mov
ljmp
mov
sarb
or
imul
aaa
hlt
lock
rcrl
xor
stos
cs
sbb
icebp
inc
pop
rclb
sti
es
aaa
insl
cmpb
xchg
xchg
add
in
lods
jmp
mov
decl
mov
idivb
fstps
loop
or
mov
mov
mov
mov
add
inc
or
sub
dec
in
in
lret
inc
xor
cmp
mov
lods
mov
call
xor
push
cmpsl
ficoml
movsl
lret
mov
sbb
fildl
in
xchg
adc
outsb
ss
lock
sbb
lahf
ror
dec
pcmpgtw
test
in
movsl
outsb
lods
cmp
or
in
aaa
sbb
mulb
pop
in
mov
mov
subl
push
mov
hlt
cmp
gs
in
in
rcrl
lods
movb
in
jle
arpl
inc
push
inc
das
sbb
fcmovbe
clc
or
int3
sahf
cmp
xor
loop
in
lea
les
ret
in
fistl
mov
in
cwtl
fdivrs
and
mov
insb
shrb
xchg
stos
out
in
out
sbb
sbb
xchg
or
jg
test
cmpsb
jle
hlt
sub
imul
in
inc
ja
adc
mov
mov
out
mov
pop
dec
or
sub
jg
test
or
in
push
inc
adc
out
sbb
inc
push
arpl
push
rorl
sub
xlat
test
and
movsl
scas
data16
cli
inc
mov
out
add
pop
jae
or
inc
rorb
shrb
pop
push
movsb
icebp
int
push
jg
call
add
imul
cli
scas
xor
sbb
add
dec
or
cltd
int
or
mov
daa
mov
mov
pop
popf
add
ret
cltd
jg
loope
mov
add
dec
in
mov
out
jl
test
mov
or
adc
fstpt
in
clc
lea
sti
in
in
xlat
fsub
xor
xor
test
in
dec
dec
sbb
jle
jns
in
in
dec
dec
ror
mov
in
sub
pop
adc
test
in
jmp
mov
sub
mov
xor
shlb
into
dec
es
lret
test
or
pop
repnz
adc
inc
pusha
jmp
add
bound
out
adcb
mov
in
and
cmp
in
dec
jae
mov
imul
repnz
in
mov
cltd
ret
pop
in
jno
push
dec
and
int
arpl
in
pop
test
add
push
xor
dec
insb
aam
in
setg
adc
jno
fbstp
cmpsl
inc
imul
testb
arpl
enter
inc
sahf
push
decl
in
adc
outsb
orl
addr16
ja
sbb
sub
js
cs
jno
cmp
in
cmp
arpl
in
jae
push
fwait
loop
or
add
xchg
add
cltd
lds
jae
fwait
aad
out
ja
mov
jge
enter
in
xchg
lods
arpl
cwtl
fisubrs
mov
jl
decb
lahf
and
in
xchg
out
int
jbe
push
xchg
in
xchg
xchg
bound
lock
aam
dec
lock
adc
and
or
popf
ds
in
outsl
fbld
in
in
cld
lret
insl
lret
lds
testb
in
aam
jo
cmp
dec
test
adc
xor
cmp
jecxz
sub
lahf
ret
das
mov
fildll
fnsave
std
fs
inc
dec
mov
dec
sbb
scas
imul
mov
push
add
xchg
js
scas
xchg
jecxz
out
jno
in
pushw
or
push
mov
push
and
outsb
dec
cs
adc
xchg
push
xchg
stc
lods
fildll
cmpsb
test
rolb
sub
sbb
in
mov
mov
imul
test
or
icebp
stos
loopne
rclb
js
insl
pop
xlat
push
in
movsl
sar
xchg
das
pop
sub
out
sbb
mov
or
pushf
inc
push
imulb
in
mov
or
pop
test
outsl
xor
mov
call
xchg
xchg
pop
and
lret
repnz
mov
call
xor
in
cmp
add
fidivl
xchg
mov
in
jns
lret
fistpl
pop
sbb
push
pop
in
popf
sbb
das
in
cmp
aas
mov
repz
mov
xchg
lahf
in
int3
outsl
jge
sub
mov
popf
and
jne
ljmp
adc
repnz
adc
movsl
mov
imul
cmp
mov
pop
jns
lods
adc
or
mov
inc
push
cld
call
leave
sarl
mov
in
mov
lds
mull
xchg
in
mov
je
add
int3
gs
mov
adc
mul
inc
lcall
in
scas
imul
ret
pop
jne
jmp
pop
ds
dec
cld
xchg
mov
js
fcoms
adc
or
ss
mov
sub
push
pop
movsb
pop
int
jno
in
cmp
inc
pop
dec
js
imul
mov
clc
mov
in
push
enter
shrb
mov
dec
lock
sbb
mov
sub
inc
dec
out
adc
pop
add
test
add
xchg
lcall
lret
pop
in
dec
pop
sub
in
inc
fsub
inc
jp
popf
repz
sbb
ficoml
xor
pop
add
inc
fstps
iret
cltd
push
dec
stc
adc
lds
xchg
std
pop
imul
mov
ret
mov
sub
xchg
out
in
in
mov
jmp
pop
in
mov
das
push
sub
test
clc
test
cld
mov
add
add
adc
jecxz
push
loopne
push
je
xchg
jp
push
push
mov
or
lds
hlt
xor
push
sub
sbb
adc
add
cmp
mov
add
inc
xchg
roll
push
in
in
push
fimull
movsl
int3
pop
dec
popf
sub
add
jnp
xchg
in
dec
push
push
shl
out
pop
nop
in
lods
mov
dec
pushf
sub
cmp
pop
enter
pop
jne
adc
xchg
push
out
mov
stc
fucomip
insl
call
in
mov
es
mov
int
insl
push
hlt
xor
clc
out
imul
pop
ficomps
pop
daa
inc
mov
or
movsb
lret
mov
add
scas
int
pop
test
push
mov
jg
sahf
xchg
in
cmp
iret
mov
sbb
test
roll
mov
stos
aam
movsl
ret
push
xchg
jns
call
adc
in
mov
nop
xor
test
shll
cs
mov
push
in
icebp
xchg
fs
aaa
addr16
push
in
inc
pavgb
in
mov
pop
sbb
dec
sub
sub
jg
pop
mov
iret
icebp
clc
fcmovnu
hlt
movsl
loopne
and
in
inc
bound
xchg
cmc
in
inc
jl
aam
js
xchg
sbb
adc
pop
xchg
pop
and
push
push
push
mov
fidivrs
in
pusha
dec
and
lret
xor
dec
icebp
jae
jmp
or
inc
sub
lcall
es
mov
jp
push
and
negb
xchg
in
packsswb
in
aam
cmp
jns
add
loop
jo
ds
in
in
inc
lods
fbld
mov
fsubl
shrb
dec
add
gs
int
cld
pushf
xchg
xchg
outsb
js
in
dec
xor
shr
rorl
movsb
xchg
pop
out
sub
mov
in
ds
add
ret
outsb
in
push
movsb
xor
push
pop
loope
int3
hlt
add
push
rcrl
xchg
repz
fptan
popf
icebp
iret
inc
xchg
shr
push
mov
sub
jns
in
push
push
mov
clc
repnz
push
iret
mov
xor
dec
call
shlb
in
cmp
pop
xor
push
jo
mov
inc
sbb
pop
mov
xchg
xor
xchg
jb
in
push
cmp
stos
in
push
leave
fisubl
jnp
js
xchg
xor
mov
sbb
xor
insl
jbe
out
sbb
mov
stos
in
imul
in
bound
enter
mov
ret
jmp
in
out
mov
mov
call
mov
shrl
icebp
out
push
lods
fildl
in
mov
lock
in
dec
xor
sbb
stos
in
cmp
sub
adc
mov
sbb
int3
in
inc
roll
ds
xor
and
divl
sbb
imul
es
add
jecxz
jg
jge
movsb
lds
add
and
rcl
jp
jb
sbb
mov
out
jge
loope
in
movsl
cli
ja
movsb
cmp
cmp
pop
in
pop
or
or
and
icebp
test
cmp
dec
imul
out
sti
inc
cwtl
jno
adc
in
mov
int3
mov
mov
cmp
cmpsb
movsl
or
dec
mov
jle
add
cli
jb
inc
push
pop
in
lds
jns
pushf
xchg
adc
fisttpll
push
jmp
in
dec
movsl
pop
out
stos
inc
pop
jno
sub
in
pop
fcoms
in
dec
cmc
push
clc
pop
mov
cmp
pop
jg
mov
lods
inc
out
xor
cmp
iret
and
in
xor
outsl
insb
xor
out
sub
dec
cld
mov
std
xchg
loop
fnstcw
nop
popf
push
imul
sub
push
out
loope
negl
or
decb
out
cmp
inc
mov
push
sbb
aad
jp
and
pop
pop
in
mov
mov
lea
or
dec
ret
inc
fwait
adc
jno
loopne
inc
jle
mov
es
or
mov
scas
call
cmpsl
inc
js
dec
push
cld
sbb
out
out
or
out
pop
sub
cmp
push
xlat
outsl
jecxz
andl
loop
es
adc
cmpsl
les
push
in
in
test
leave
adc
movsb
jmp
fwait
loop
and
sub
push
out
inc
std
stos
mov
insb
jns
mov
xchg
mov
xchg
jne
imul
push
pusha
adc
stc
in
and
xorb
imul
rcr
daa
lods
inc
in
add
mov
jns
pusha
shrb
jmp
cwtl
mov
in
lods
in
mov
jb
es
adc
cld
sub
push
xor
test
pop
sub
pushf
repz
push
in
sahf
mov
xchg
jae
cli
nop
push
push
xchg
addl
call
cli
ret
lea
mov
in
or
fdivl
and
ret
sbbb
dec
in
adc
xchg
in
mov
xchg
in
jl
mov
stc
repnz
xor
push
or
insl
lret
in
mov
pop
out
add
push
dec
and
shr
lea
push
xchg
adc
jne
dec
fistpl
in
jnp
xchg
imul
jnp
mov
jp
fs
pusha
mov
call
jmp
ret
xchg
dec
test
or
lret
insl
pushf
xchg
or
in
xchg
pop
adc
cs
mov
mov
es
mov
das
pop
fwait
popf
imulb
test
or
fs
stos
outsb
adc
fsincos
scas
insl
es
jo
stc
xor
out
in
and
jmp
xchg
in
jns
fsts
push
pop
shr
push
or
lods
in
outsb
scas
fidivrl
xor
gs
in
or
ret
xchg
je
dec
push
and
in
rolb
inc
cmp
xchg
ret
pop
repnz
rcll
inc
insl
sbb
in
cs
gs
call
mov
ds
int
pop
push
adc
pop
xchg
cld
or
pop
mov
mov
mov
decb
pop
popf
xchg
fmuls
dec
in
dec
mov
mov
dec
jecxz
into
popa
add
jae
in
testl
repnz
in
xchg
leave
add
or
or
jo
jae
ljmp
pop
mov
cmp
sbb
ds
ss
push
sbb
ljmp
aas
pop
dec
insl
test
xchg
push
mov
add
shll
xor
sarb
cmpb
shr
popa
movsb
inc
xor
add
mov
cmp
std
lods
in
movsl
nop
xchg
add
adc
lret
dec
adc
push
dec
fnclex
mov
xchg
inc
gs
in
xor
mov
hlt
or
cmp
in
inc
xor
jb
test
jae
xor
add
pop
xchg
mov
cwtl
cmp
mov
stc
or
inc
test
jo
cld
imul
add
push
in
in
les
inc
out
inc
push
imul
bound
neg
dec
call
arpl
xchg
divl
in
jns
cmp
and
mov
push
arpl
ljmp
mov
sub
adcl
outsl
movsl
jo
and
and
fdivs
xchg
dec
inc
lock
out
push
in
mov
mov
in
or
je
xchg
xor
out
into
jbe
cmpsl
nop
and
bnd
aam
add
in
mov
mov
std
movb
inc
mov
outsl
push
push
pop
xchg
loope
cmp
jae
dec
orb
js
dec
leave
in
in
inc
data16
and
or
mov
or
mov
dec
adc
and
bound
push
sbb
clc
pop
cmpsl
xchg
ljmp
sbb
enter
int
js
divb
cmp
mov
adc
aad
subl
add
push
movsl
in
mov
das
sbbb
mov
test
mov
sbb
into
in
mov
test
popf
insb
loopne
sbb
stc
test
add
pop
imul
xor
hlt
inc
in
stos
cmp
fwait
pop
bound
push
ror
push
push
js
xchg
ja
fcoms
mov
sbb
in
mov
call
cli
mov
fbld
in
arpl
pop
dec
js
push
or
inc
ror
stos
orl
in
in
and
arpl
ss
aad
enter
mov
stos
in
pop
dec
scas
sub
in
std
xchg
in
lods
xchg
and
push
outsb
adc
popf
cmp
pop
adc
mov
push
mov
xlat
pop
xchg
shr
out
addr16
adc
inc
in
movsl
cmp
dec
xlat
ja
adc
dec
pop
in
and
je
xor
cs
repz
dec
jecxz
jmp
in
out
jle
xchg
cmp
nop
lea
cmc
lods
inc
mov
sub
fsubr
mov
and
stos
xchg
mov
iret
in
inc
pop
pusha
lds
xor
lret
push
add
frstor
or
lret
in
mov
stos
lea
push
or
div
sbb
add
lcall
in
inc
fucomp
insb
lret
mov
in
fs
insl
adc
mov
movsb
lcall
dec
clc
add
jns
mov
mov
hlt
aad
in
outsb
and
mov
pop
rcll
repz
sub
fdivrl
movsb
lret
call
hlt
jne
in
rcll
in
fsts
cs
data16
pop
in
daa
loop
inc
imul
outsl
in
mov
push
pop
fwait
in
cmp
cmp
pop
mov
push
loope
out
xchg
add
cwtl
clc
in
and
pop
lds
sub
mov
xor
dec
pushw
mov
mov
mov
scas
cmp
push
call
inc
jnp
xchg
rolb
adc
cmc
sbb
inc
sbb
aaa
jbe
or
in
xchg
in
cmp
ss
jecxz
sbb
cwtl
add
add
aas
stos
test
popf
pop
out
xchg
lods
pop
std
or
fs
mov
js
hlt
pop
cmp
subb
popa
lods
aaa
mov
pop
mov
mov
mov
cmp
out
jecxz
scas
mov
sti
in
inc
pop
push
lret
lods
sarl
in
mov
lcall
lods
loop
mov
scas
je
sbb
cmpsl
add
js
jle
jge
rorb
ds
pop
fimull
shr
xlat
sub
jb
adc
inc
in
mov
mov
mov
adc
push
cmp
mov
sub
in
mov
test
push
ljmp
xlat
jecxz
sbb
xchg
sbb
inc
sub
cmpsl
in
cmp
or
shr
add
aas
in
cmp
add
call
mov
pop
mul
pushf
sbb
and
in
mov
jns
adc
out
jo
in
push
cmp
fmuls
lret
in
pop
and
mov
jle
xchg
push
repz
and
into
shr
nop
cmp
cli
movsb
js
add
fmul
inc
sub
lods
cltd
ljmp
xor
sti
in
sub
cwtl
aad
push
lods
hlt
in
sahf
test
dec
adc
adc
in
inc
add
cli
ds
popf
in
roll
cmp
ss
rolb
pop
enter
push
call
push
insl
sub
ret
inc
push
xchg
test
push
and
xchg
dec
xchg
in
sbb
js
daa
and
stos
popf
jo
cmp
pop
dec
sub
and
in
xlat
or
imul
movsb
add
in
les
push
cmc
adc
and
adc
fcoms
cmp
cmp
fwait
popa
stos
rcll
insb
fs
out
fimuls
mov
or
mov
cmp
xor
in
jne
std
jns
enter
call
mov
or
jb
xchg
daa
dec
dec
mov
pusha
imul
ret
in
stos
inc
arpl
add
cld
mov
inc
hlt
roll
pusha
in
dec
fildll
jb
jne
jae
or
int3
test
hlt
sarl
pop
adc
xchg
cli
push
mov
mov
xor
addl
icebp
pop
movsb
or
ret
in
and
inc
and
into
cmp
dec
inc
adc
pop
xchg
push
popf
popf
jb
or
and
sbb
fistl
call
je
cmp
ja
sti
es
mov
mov
push
out
jbe
inc
in
insl
inc
inc
dec
or
clc
in
ja
addr16
jno
xchg
in
mov
dec
mov
test
jae
aam
pop
hlt
lret
in
and
nop
xchg
and
fsubr
ss
clc
cmpsb
in
inc
pusha
add
inc
push
jb
add
jl
xchg
in
ds
cmc
insb
lea
lret
sub
add
pushw
shr
or
in
and
mov
in
xor
and
fst
sub
or
jp
inc
adcb
jo
or
push
pop
shr
pop
and
in
mov
in
popf
jns
mov
push
stos
in
sbbb
and
in
inc
outsb
push
adc
pop
pop
popf
or
jecxz
neg
in
ljmp
push
jge
call
xchg
hlt
push
in
rcl
into
es
mov
fadds
insl
test
in
icebp
jg
aaa
sarb
imul
enter
in
mov
adc
sub
inc
push
push
cwtl
xor
int
in
mov
add
mov
xor
mov
push
cmp
push
push
in
lahf
dec
in
adc
iret
cmp
out
ret
in
inc
sarl
jo
xor
stc
jns
xor
in
rcr
mov
sahf
cmc
out
or
cltd
sete
inc
mov
ss
idivb
sbb
in
ja
enter
mov
xchg
loop
mov
push
add
jp
xchg
movsl
ljmp
jle
jae
leave
outsb
scas
popa
pop
add
jecxz
pop
pop
out
or
cmp
sub
mov
sbb
lods
push
fisttpl
jle
test
subb
rcll
mov
cmp
mov
loop
adc
gs
cld
adc
jecxz
xchg
in
pop
jge
int
jae,pt
in
push
add
outsb
mov
mov
inc
rcl
in
dec
out
push
xlat
es
popa
in
xchg
push
insl
in
cmp
xchg
mov
imul
adc
imul
sti
mov
movb
insl
inc
sub
in
or
mov
popa
enter
pop
jge
dec
sub
in
adc
and
cmp
in
popf
sbb
xchg
in
ljmp
sub
cmc
insl
in
in
jmp
mov
popa
inc
sti
in
sub
call
sub
push
divl
in
out
repnz
push
xchg
mov
ja
mov
stos
lock
or
jle
sbb
jge
xchg
std
in
push
xor
add
imul
iret
xchg
fwait
mov
dec
push
out
std
xor
cmpsb
and
push
aas
jmp
repz
jae
stos
ss
lds
sbb
mov
jmp
test
fisttpl
in
xor
pop
ret
in
lods
mov
sub
test
and
jmp
add
push
mov
jae
pop
test
dec
cmpsl
icebp
insb
test
in
sbb
push
or
js
imulb
test
xchg
aam
inc
daa
cld
mov
sbbl
jno
andl
lods
sbb
jbe
dec
mov
and
push
test
pushf
pop
fwait
or
in
xor
or
mov
insb
cmp
cmp
cld
test
and
jne
lock
inc
push
add
sub
stos
in
aaa
jae
ret
daa
in
mov
sbb
push
push
sbb
pop
fsubr
mov
cmpsl
imul
inc
cmp
subl
std
outsb
sbb
pop
sub
pop
jno
insb
int3
pusha
and
arpl
mov
in
mov
adc
cmpsl
in
pop
rclb
in
ret
or
mov
and
lcall
mov
jge
sub
inc
loopne
mov
pop
sub
xchg
xor
or
in
psubsw
aad
mov
call
pop
or
in
leave
in
dec
fsubp
xlat
push
or
in
xchg
in
dec
xor
in
out
dec
dec
xchg
lret
push
xor
cmp
push
in
cld
inc
xchg
adc
imul
popa
and
lods
jmp
xor
or
imul
in
xchg
jmp
jl
in
les
dec
dec
jle
or
lret
inc
stos
test
scas
iret
xchg
push
or
pop
sub
jp
xchg
sbb
paddsb
negb
rorb
add
in
lahf
aad
loope
mov
imul
scas
pusha
and
jo
fiadds
insl
and
inc
and
scas
fnstenv
in
push
out
push
jmp
mov
or
lret
xor
inc
or
shll
out
push
and
ljmp
movsb
popa
inc
out
aas
fistpll
pop
rcll
jns
in
insl
mov
push
sub
icebp
loopne
fwait
shlb
je
aaa
paddsw
in
in
jp
xchg
xor
push
lahf
outsl
pop
sbb
pop
push
cmp
in
mov
cmp
xor
outsb
xor
jns
mov
xchg
call
repnz
and
fistl
cmp
push
xor
cld
jns
fisubl
inc
mov
and
in
jno
sub
arpl
xchg
cwtl
xor
ss
in
mov
sbb
pop
xchg
enter
clc
mov
push
mov
ret
outsl
jmp
rclb
mov
cmp
aam
inc
fildll
lock
cmp
xor
sub
in
in
push
lods
inc
mov
jle
cs
cmpsb
inc
xchg
shlb
push
sahf
push
or
cmp
in
in
cmp
push
jno
je
ljmp
add
xchg
cltd
add
ds
jno
add
mov
jae
jb
pop
outsb
inc
in
add
cmp
adc
mov
jle
in
xchg
movsl
mov
in
fisttpll
movsb
xchg
fwait
lock
mov
mov
imul
hlt
cmovge
jle
lret
inc
jo
fcoml
in
in
cmp
xor
fucomp
cli
add
adc
or
inc
js
in
lds
sbb
inc
sub
das
xchg
movsl
out
push
dec
cld
movsl
cmp
inc
sub
stos
mov
stc
repnz
cmpl
dec
and
pusha
jns
in
in
mov
in
insl
jno
inc
xlat
mov
xchg
fcmovne
sub
push
mov
add
sbb
in
fsubrl
jge
cmpsl
cli
stos
push
and
push
in
mov
add
sub
ror
and
loope
in
out
push
int
dec
movsl
and
jno
mov
adc
or
or
imul
mov
and
in
leave
dec
rolb
or
movsl
shlb
or
daa
lret
in
in
mov
jg
add
in
and
pop
icebp
in
mov
test
in
add
dec
addl
stos
fsubrp
sub
xlat
movsb
sbb
test
push
jge
aam
iret
mov
int3
in
jbe
rcrb
sub
insl
addr16
mov
fucomip
xchg
cmpl
mov
cmpsb
mov
bnd
xor
lret
mov
inc
gs
push
dec
sbb
stc
es
in
out
dec
stos
or
adc
adc
xor
mov
jle
in
int3
dec
stos
popa
mov
call
adc
mov
jb
dec
inc
test
adc
mov
sub
dec
jp
test
pop
sti
lds
dec
int3
dec
daa
fcompl
arpl
cli
jg
ljmp
aas
pop
and
push
inc
ret
loop
ljmp
and
aam
enter
mov
and
movsb
cmp
mov
divb
out
nop
imul
jns
fidivs
clc
lea
mov
mov
or
testl
into
in
sti
out
dec
int3
xchg
icebp
push
in
mulb
fsubrl
mov
jl
fadds
imul
and
mov
in
adc
pusha
jp
in
add
lret
in
in
dec
das
pop
dec
cmpsb
mov
imul
mov
in
shll
pop
mov
jge
scas
and
jp
or
das
pop
testb
mov
ret
add
fs
in
push
adc
fwait
test
jo
sub
adc
test
scas
and
push
jns
es
push
mov
push
and
in
xor
outsb
mov
fisttps
or
aaa
add
in
scas
loopne
jne
cmp
nop
and
sub
rorb
in
cmp
test
inc
push
ja
mov
cmpsb
rorl
shrl
incb
dec
and
out
inc
xchg
in
mov
aas
mov
lahf
iret
in
mov
in
andl
jmp
cwtl
ljmp
or
mov
jl
jno
shll
ret
push
mov
add
test
or
in
adc
leave
sbb
in
hlt
jnp
jae
xor
out
in
cmp
iret
subb
mov
rolb
imulb
mov
push
pop
ds
in
mov
xlat
ss
mov
sbb
js
xchg
dec
imul
lret
out
sub
pop
outsb
mov
repnz
sbb
and
jo
sub
movsl
in
sub
cld
mov
cmpb
popa
mov
mov
mov
in
lds
dec
and
in
xchg
aam
mov
adc
mov
add
in
sbb
xchg
mov
cmp
aam
imul
jae
xchg
and
je
pusha
in
xor
add
jecxz
movsb
test
iret
enter
push
gs
add
dec
rolb
dec
clc
loop
xor
out
and
fst
xchg
add
cwtl
out
mov
in
arpl
mov
mov
inc
sbb
arpl
jno
aad
inc
call
cli
daa
repnz
mov
in
mov
lods
imul
push
ljmp
cld
sbb
aad
rcrl
pop
jmp
mov
jne
push
movsl
xchg
pushf
jb
mov
in
jae
or
and
mov
in
fcoml
mov
xor
fidivrs
aaa
mov
push
repz
enter
cld
push
nop
dec
in
push
xor
add
lret
addr16
cltd
jl
sbb
pop
cld
mov
fucomi
mov
outsl
mov
in
js
push
mov
in
jo
loope
xor
jae
in
sarl
mov
dec
dec
addb
sbb
bound
movsl
push
lea
or
in
adc
adc
ljmp
push
sub
add
cmp
add
sbb
jnp
in
mov
aaa
js
add
in
cmp
imul
sub
mov
inc
push
rcrl
and
push
add
inc
jbe
cmc
xlat
pop
int
push
mov
or
pop
sub
out
in
cmpsb
adc
mov
in
rorl
push
cld
imul
mov
lahf
pop
cmp
test
lock
pop
xor
stos
dec
loope
clc
arpl
and
add
pop
imul
pop
jge
lock
out
fsubrp
or
cmp
repnz
icebp
adc
lcall
stc
pop
sti
fisubs
push
in
add
int3
xchg
faddl
aad
xlat
aaa
pop
mov
cmc
sub
andl
xor
ret
sti
or
out
sub
pop
adc
or
es
fsubs
int
lcall
mov
in
cltd
cmovs
aad
cmp
ja
cld
and
aas
sub
inc
pop
and
jno
in
fmull
fldt
ds
xor
pop
jbe
out
bound
mov
call
ljmp
popf
imul
cwtl
and
insl
push
movsl
pusha
add
and
lret
sub
jo
mov
xchg
or
shlb
je
pop
xor
data16
sub
aas
mov
jp
mov
das
test
sahf
test
in
nop
fsubrp
mov
stc
cmc
fcoms
in
sbb
into
scas
jmp
jo
mov
sub
xor
in
scas
in
ss
xchg
jns
aam
push
push
or
push
push
pop
fdivrl
add
cmp
out
arpl
sbb
mov
mov
xchg
test
and
fsubrl
rclb
movsb
lock
add
in
scas
aam
hlt
lcall
stc
insl
mov
push
jl
cmp
das
scas
shrb
xor
outsl
repz
xchg
pop
pushf
or
and
xchg
sub
cwtl
or
mov
lock
out
push
dec
mov
inc
movsb
mov
xor
aas
movsl
push
in
adc
adcl
push
mov
repnz
jecxz
out
cmp
xchg
jnp
cmpsl
test
in
dec
cld
jp
fidivl
jbe
mov
in
mov
test
sbb
jl
xchg
or
jae
ret
rorb
leave
gs
cmpsl
sbb
jne
in
stos
loopne
pop
call
xor
outsl
inc
cld
test
jno
dec
mov
cmp
fwait
stos
test
lock
imul
rcrl
arpl
jb
addr16
mov
aam
adc
push
pop
sbb
sub
mov
cmp
fsts
jae
in
sbb
xchg
in
add
cmc
mov
in
jge
lods
or
sub
and
adc
sbb
jb
jmp
inc
mov
and
inc
fs
add
lret
in
dec
or
mov
xchg
push
shrl
mov
ficomps
xlat
mov
xchg
test
xchg
inc
cld
out
push
dec
lock
imul
cmpsb
sbb
in
xor
mov
fnstenv
jbe
adc
jmp
push
sbb
in
ljmp
jl
sub
loope
mov
aaa
movsl
in
addb
fdivr
sub
xor
in
cmc
jecxz
lcall
popa
sub
or
mov
pop
ret
inc
imul
repz
gs
rcll
popa
mov
add
dec
in
in
cmp
xchg
in
ja
sbb
std
adc
xor
test
dec
loope
mov
nop
pusha
jp
hlt
cld
jl
lcall
arpl
lods
imul
ret
adc
mov
ds
jmp
cmp
adc
loopne
cmp
das
jecxz
in
xchg
mov
cmpsl
fistps
dec
in
mov
sbb
call
ret
jne
xchg
add
in
sub
push
sbb
add
into
hlt
pop
push
jge
in
es
das
les
sub
jmp
push
mov
fwait
pop
outsb
add
inc
in
and
mov
sub
pop
inc
cmp
dec
jne
mov
jl
mov
mov
in
js
jo
pushf
stos
mov
jecxz
daa
push
icebp
mov
push
mov
cltd
cmpsl
int3
add
test
ficomps
hlt
mov
push
stos
mov
in
dec
mov
xchg
out
test
addb
clc
int3
fstl
sarl
adc
push
out
hlt
xchg
loop
in
inc
fsubl
pop
cltd
test
push
xchg
in
inc
inc
cs
add
add
in
xor
jbe
popf
imul
and
out
jb
push
pop
sbb
addr16
sti
in
scas
mov
in
sahf
ja
add
inc
sub
jle
aam
lcall
clc
call
movsb
add
pop
sub
cmc
sbb
out
aam
adc
and
or
in
stc
inc
pop
mov
in
cmc
lea
in
daa
or
lret
lret
jl
adc
loop
or
and
fs
data16
in
rorl
int
sarl
jns
imulb
mov
rcll
fucomp
lret
inc
mull
data16
adc
push
in
scas
mov
adc
imul
fwait
mov
in
sahf
jns
rol
push
xor
fstpl
fs
in
outsb
arpl
repnz
or
inc
push
add
pmuludq
push
imul
mov
mov
push
bnd
hlt
in
mov
xchg
ror
dec
lock
call
cmpsl
mov
nop
sbb
call
mov
repnz
pop
shr
mov
mov
xchg
cmpsl
add
in
sbb
aam
in
arpl
pusha
cwtl
popa
loope
pop
movsl
movhps
or
cmp
call
mov
fs
mov
in
lahf
in
xchg
adc
in
xor
leave
cmpsb
call
arpl
pop
sbb
mov
fcmove
sub
dec
mov
sbbl
in
xor
shlb
xchg
mov
mov
ss
in
lret
sbb
mov
and
mov
aas
mov
out
lods
int
in
and
divl
dec
and
jb
push
xorb
in
shl
push
mov
in
int3
mov
xchg
cmp
leave
in
movsb
in
lock
shrl
add
mov
sbb
xor
mov
cmp
inc
fdiv
push
or
mov
je
insb
in
xor
cmp
add
jecxz
in
inc
jge
xchg
sbb
addb
xor
in
adc
jb
xor
roll
js
out
sbb
cmc
in
xchg
xchg
push
xor
cmp
pop
fmuls
fstpt
adc
or
xor
gs
out
cld
mov
pop
in
out
inc
inc
popf
nop
push
movsl
mov
mov
jo
cs
mov
add
adc
or
les
xchg
sbb
testb
in
dec
xor
pushf
xor
inc
cmp
sbb
jmp
sti
je
outsl
dec
push
inc
or
sbb
fcomps
dec
fs
lcall
in
sbb
pop
mov
in
jg
cmp
inc
cwtl
mov
jns
into
and
nop
in
test
add
add
mov
add
jp
out
in
std
inc
cmp
cmp
mov
fildll
push
pop
cmp
in
sub
insl
inc
loope
pop
pop
fstpl
or
dec
mov
movsl
add
bound
pop
test
cmp
adc
or
cmp
lea
rorl
adc
aam
subl
shll
or
out
mov
cmpsl
out
fbld
mov
and
pop
or
js
push
xchg
arpl
fisubrl
imul
sub
xor
jg
cld
scas
adc
icebp
repz
rolb
pushf
call
pop
std
push
pop
dec
jl
in
adc
loopne
push
push
xor
leave
out
add
lds
fs
aaa
cmp
cld
xchg
adc
mov
jne
movsb
push
push
icebp
aas
stos
sub
leave
adc
lea
fisubrl
ret
movsb
mov
in
cmpsb
cltd
jecxz
xchg
cmp
in
out
hlt
push
lahf
aaa
cwtl
add
shll
in
pop
cld
aad
jb
aam
pop
testb
in
fcomps
lock
mov
in
push
int3
and
adc
out
shr
hlt
cli
pop
pop
xchg
addl
out
nop
inc
in
aaa
ret
pop
xchg
xchg
pop
movsl
xchg
inc
cmp
imul
popf
movb
mov
cmp
xchg
inc
imul
stmxcsr
xchg
mov
pop
clc
rcll
sub
mov
pusha
xchg
dec
push
or
cli
pop
out
cmp
xchg
sbb
or
aam
lods
mov
sub
jns
and
repnz
xor
in
pop
and
push
pop
xchg
lret
mov
jl
nop
cmp
hlt
mov
test
sbb
mov
or
call
pop
xchg
jp
cld
pop
das
or
je
mulb
and
add
fs
rclb
cmpsl
xchg
rcll
in
mov
cmp
mov
or
shll
clc
in
mov
adc
in
sub
std
fdivl
mov
outsb
xchg
test
xor
enter
mov
aaa
push
mov
aad
clc
movsb
dec
cmpsl
mov
hlt
or
or
or
cs
nop
pop
in
rcr
dec
mov
aaa
or
movsl
pop
push
std
or
mov
hlt
repnz
cltd
call
stc
dec
xchg
pop
or
sub
mov
aaa
pop
pop
movsl
mov
shlb
mov
dec
in
xor
sbb
in
sti
in
xlat
ret
cmp
fisttpl
aas
in
jnp
je
xor
xchg
addr16
fisubrl
mov
fstps
popa
in
sbb
lods
mov
lds
push
in
bound
sbb
loope
aas
in
outsb
jmp
dec
and
outsl
out
inc
xor
in
imul
fldlg2
cmpsb
aad
adc
popa
in
loopne
lock
xchg
xchg
mov
in
in
in
lea
sub
cmp
ja
xchg
call
into
repnz
dec
sahf
mov
add
pop
in
loop
xchg
push
je
add
in
gs
add
jecxz
mov
mov
ds
enter
pop
in
shlb
or
add
sbb
mov
fsubrp
dec
enter
cmp
xchg
sti
or
stc
inc
push
test
in
pushf
sbb
fdivrl
push
push
out
in
lret
fwait
fs
imul
es
mov
leave
sbb
dec
or
xchg
in
xchg
fnstcw
push
ljmp
insl
push
rcrl
or
cmp
pushf
and
test
in
jmp
dec
lret
shll
in
inc
push
mov
jne
fcoms
stos
test
lcall
call
jmp
sti
lea
stos
sbb
pop
inc
les
shlb
nop
imul
and
test
out
jns
push
iret
frndint
push
imul
mov
and
mov
push
jmp
jl
cmp
es
push
jae
mov
adc
int3
ds
pop
dec
mov
in
or
xor
adc
dec
add
mov
imul
mov
pop
clc
push
and
xchg
mov
movsl
push
or
cmpsl
sbb
enter
pop
sbb
mov
mov
xchg
push
js
jae
cmp
jo
aad
mov
pop
ret
jecxz
mov
or
inc
pop
out
jbe
in
jle
pop
outsb
insb
push
adc
sub
jmp
fsubs
cmp
out
cs
lret
in
mov
xchg
xchg
fsubrl
cltd
aad
cld
lret
mov
jne
xchg
pop
push
inc
rcl
in
stc
comiss
lea
adc
daa
mov
in
int
test
pop
cs
push
lret
ficompl
insb
ret
outsl
mov
cmpsb
push
inc
in
filds
ljmp
pop
or
in
add
int3
xor
shr
xchg
arpl
icebp
mov
cmp
add
mov
inc
imul
sbb
add
push
xchg
fisubs
repnz
enter
jge
shr
insb
scas
popf
std
iret
push
pop
loop
xlat
add
or
ds
addr16
mov
nop
stos
int
in
mov
ja
push
and
or
enter
out
dec
xrelease
in
test
dec
clc
out
imul
out
push
cld
xchg
rsm
jae
bound
add
aam
arpl
imul
and
inc
in
mov
jo
adc
pusha
in
clc
test
adcl
pop
xor
add
lahf
in
inc
scas
test
fdivr
cmp
popa
dec
or
mov
jp
or
divb
sbb
jnp
add
add
scas
jg
out
jo
ret
mov
sti
in
and
cltd
scas
aam
pop
jns
aas
enter
jo
push
cmc
cmp
mov
leave
inc
cli
xor
pop
or
movsl
pop
test
xchg
jb
mov
and
jo
jae
in
sub
imul
rorl
ljmp
or
and
pop
xlat
mov
rcrb
dec
mov
aaa
cmp
mov
in
in
mov
xchg
leave
iret
sub
in
fidivs
mov
in
sub
xlat
rorb
pop
lahf
in
or
mov
xor
imul
test
push
sar
pushf
in
in
dec
add
push
in
out
in
cmp
test
iret
leave
mov
xchg
in
rorb
in
fimull
fmull
movsl
sbb
aad
bswap
mov
ss
pushf
mov
xchg
loop
insb
mov
cmp
in
sarl
hlt
and
push
xor
pop
jle
and
jp
mov
sub
stos
xchg
sti
lock
call
dec
icebp
mov
call
push
ljmp
push
xchg
imul
sbb
add
sarl
push
cmpsb
mov
pop
in
enter
jge
loop
and
je
in
test
outsb
rorb
jecxz
cmpsl
or
fstps
pop
ds
movsl
mov
sub
push
jb
jne
sub
sub
xor
mov
adc
ret
or
mov
in
test
aas
xchg
xchg
or
jae
xchg
pop
sbb
in
ret
inc
leave
notl
in
or
fdivl
rcrb
scas
les
sub
mov
cmp
roll
cld
xchg
mov
cmc
into
fldl
fnstcw
es
pusha
in
lea
jmp
enter
in
add
sub
mov
xchg
lcall
movsl
mov
popf
mov
push
mov
mov
gs
repz
gs
test
cmp
iret
lret
in
xor
pop
jno
and
push
mov
dec
sub
frstor
mov
mov
test
lret
sub
das
loope
pop
enter
dec
repnz
imul
loop
inc
pusha
inc
clc
pop
fcomip
imul
repnz
in
dec
and
andb
in
int
loopne
mov
xchg
push
push
insb
mov
cld
iret
lock
or
dec
xchg
in
lret
adc
mov
jne
sub
mov
or
xlat
iret
in
arpl
addl
cmp
imul
jne
adc
cltd
icebp
in
fwait
sbb
push
lods
out
in
shll
mov
mov
pop
cld
add
mov
ds
jne
imul
push
jp
or
push
xchg
pusha
in
inc
jmp
stos
pop
fidivl
daa
or
fcomps
push
addr16
in
clc
mov
imull
cmpsb
jno
adc
in
daa
into
inc
scas
fimull
in
xchg
mov
jno
pop
xor
dec
push
cmc
sbb
cltd
push
in
out
das
add
popa
pop
cli
fisttps
jp
and
inc
lcall
push
sbb
shrl
xchg
and
inc
ljmp
call
lcall
pop
cld
and
cmpsl
test
xchg
les
add
aad
adc
daa
ja
cmp
pop
xchg
sub
mov
jg
loope
dec
in
in
imul
in
xor
ficoms
in
lret
adc
cmc
fidivrl
imul
in
xor
fldl
mov
pusha
out
add
pop
scas
push
jl
mov
pop
or
imul
or
or
popf
rcll
icebp
sbbb
insb
into
xor
testb
or
lahf
xor
or
cli
adc
inc
paddsb
rcll
shlb
dec
arpl
aam
sub
push
ds
push
jns
sbb
test
cld
pop
in
in
and
out
sbb
and
in
or
add
jmp
mov
in
jne
pop
aad
and
adc
lds
int3
jle
hlt
or
imul
mov
dec
xor
aas
icebp
inc
data16
push
psubsb
mov
insb
and
jnp
subl
sub
sarb
sti
pop
int3
test
mov
rcrl
mov
insl
pop
jmp
or
pop
setge
in
hlt
movsl
lea
and
mov
xchg
imul
xor
repnz
gs
in
pop
cli
jl
mov
cvtpi2ps
or
cld
mov
mov
in
jo
mov
in
dec
fldt
loope
or
rclb
loopne
in
mov
sbb
pop
aas
in
test
inc
pop
mov
xchg
lods
mov
inc
xorl
dec
or
push
and
cmp
leave
adc
popa
mov
div
fldenv
loopne
mov
cmc
mov
mov
int3
cmpsl
adc
in
shll
inc
dec
sbb
scas
sbb
roll
ljmp
cmp
inc
sbb
jo
in
mov
mov
and
out
xchg
in
leave
jge
sahf
cmc
ds
popf
in
mov
xchg
jg
shr
mov
xor
inc
mov
sub
or
movsl
add
int
fnstenv
or
lcall
leave
adc
imul
mov
xchg
ja
in
sub
dec
push
in
sub
cmpsb
pop
imul
into
insl
in
mov
xchg
jbe
and
inc
es
in
cs
or
lock
lcall
or
mov
in
jno
jo
movsl
pop
inc
jmp
test
addl
pop
push
mov
in
jg
and
popa
in
repz
in
nop
push
scas
pop
xor
lods
ds
add
pushl
ss
imul
loopne
mov
cmp
mov
in
mov
je
add
cmp
sub
cwtl
jae
jg
dec
mov
test
jno
imul
cld
adc
imul
addr16
lea
jo
sti
and
mov
ds
push
test
pop
add
test
sbb
loopne
ss
sbb
sub
bnd
jge
cmp
dec
outsl
outsb
pop
imul
std
jo
sub
pop
or
xchg
rorb
jbe
mov
pop
out
lds
jecxz
scas
sbb
push
mov
call
push
mov
repz
test
rolb
cwtl
sti
add
shll
lret
stc
in
cltd
mov
jnp
repnz
in
rcrb
ja
pop
out
fmulp
push
sub
repz
test
in
jle
fisubs
imul
inc
testb
mov
push
jle
or
cmp
xchg
test
adc
sahf
in
cmp
stc
cli
pop
and
inc
mov
jo
in
mov
jmp
cmp
mov
add
aad
mov
dec
xchg
sbb
dec
jno
mov
add
cmpl
loopne
xchg
sub
aam
jb
cmp
in
push
pop
push
filds
push
out
ss
repz
push
lahf
or
cmpl
jmp
popf
in
pop
bound
mov
aam
std
mov
xchg
popf
lods
and
aad
mov
in
repnz
push
in
sbb
lret
and
shrb
ret
mov
pop
adc
jecxz
sub
mov
xchg
cli
dec
das
mov
in
jae
ffree
inc
rcrl
push
dec
aaa
adc
pop
in
scas
and
jo
add
sub
pop
mov
pushf
in
inc
scas
jge
in
test
push
push
fcoml
je
outsb
sub
and
popa
inc
mov
or
adc
int3
and
xchg
lock
adc
cmpsl
xchg
ss
ret
out
movsb
and
in
xchg
jle
aam
mov
dec
insl
xorb
je
adc
rorb
cmpl
fsubl
or
or
mov
push
sub
mov
sti
push
in
out
push
in
iret
add
or
in
pop
and
aas
in
addr16
xor
nop
adc
cmp
jl
jge
js
cmp
aas
test
xor
cli
in
je
xor
mov
pop
in
or
out
mov
push
aad
mov
mov
fwait
xchg
aas
in
jo
or
sbb
cltd
or
mov
jle
aas
mov
std
in
lods
mov
loop
in
xor
or
in
mov
jecxz
imul
popa
cli
cs
es
inc
lea
cmp
in
push
dec
in
push
add
lods
enter
outsb
inc
pop
in
stos
pushf
sbb
imul
mov
or
in
push
loop
adc
je
in
test
gs
and
add
jecxz
mov
xchg
push
ds
pop
inc
add
and
jb
movsl
lds
pop
cmp
in
mov
cli
or
cmp
in
je
push
ja
int3
in
pop
pop
test
aad
imul
push
push
or
mov
lock
iret
les
int
in
jp
sbb
out
data16
cmpsb
cmp
das
repz
mov
imul
mov
bound
sbb
and
sub
cld
sbb
push
sub
inc
add
push
das
sub
inc
out
pop
add
fcompl
in
jge
dec
in
shrb
in
push
inc
mov
xor
stc
in
inc
lea
repz
sbb
into
in
xchg
jae
jb
inc
xor
pop
mov
xor
in
icebp
jg
sub
dec
mov
inc
in
std
pop
mull
stos
insl
imul
int
sub
xor
mov
jge
jae
xchg
addr16
out
add
dec
nop
cmp
test
icebp
bound
in
in
std
int3
mov
loope
sti
jl
loopne
in
mov
push
push
mov
mov
decb
add
mov
mov
mov
xchg
pop
js
scas
inc
in
cmp
add
dec
imul
xlat
push
mov
pop
push
pop
and
ljmp
jbe
mov
stc
or
xchg
cld
inc
jmp
in
lcall
out
in
cmc
fildl
add
insb
imul
cmp
jbe
gs
mov
sub
test
negl
leave
call
in
fsubrl
pop
shlb
xor
test
mov
add
mov
addb
dec
sbb
sub
test
or
sbb
adc
std
mov
in
and
xchg
imul
sub
mov
arpl
mov
adc
imul
dec
leave
push
outsl
xor
mov
dec
sbb
mov
int
push
aaa
xor
mov
jo
and
and
sbb
mov
cld
dec
clc
test
and
or
out
or
jle
pop
aas
mov
repnz
sub
sbb
dec
or
push
repnz
adc
mov
xchg
scas
sub
and
pop
leave
and
aaa
movsb
pop
and
dec
push
add
mov
push
imul
cmp
and
leave
or
push
imul
outsl
fisubs
jmp
inc
daa
mov
mov
jnp
jp
leave
les
ljmp
adc
lds
jb
nop
mov
push
or
lds
cmpsb
cs
daa
xchg
dec
es
cwtl
push
adc
out
lret
leave
add
inc
or
mov
ret
stos
jns
pop
outsl
testl
sbb
es
add
mov
dec
push
subb
fildl
hlt
out
mov
jo
push
fcoms
jnp
cmp
dec
and
push
and
popa
insb
mov
call
mov
js
xchg
add
in
mov
mov
and
aaa
sbbl
adc
adc
sbb
add
push
mov
stc
push
lret
gs
das
mov
insb
xor
sbb
sub
lret
adc
dec
inc
cli
xchg
adc
or
mov
pop
jmp
daa
or
lods
mov
push
add
das
test
add
imul
pop
xchg
clc
xchg
lock
sbb
stos
inc
imul
add
add
and
push
stc
and
sbb
mov
dec
sub
test
mov
dec
jmp
movsb
sbb
push
and
xchg
test
shr
testb
rcll
rorb
ret
sub
out
lock
dec
sbb
or
and
sbb
mov
xorb
and
stos
sub
adc
outsb
pop
lahf
fsubs
add
push
movsl
stos
sbb
pop
adc
mov
sub
mov
and
test
cmp
dec
imul
repnz
pushf
mov
sub
repz
lock
xor
cmpsl
xchg
sete
aam
sbb
js
sarb
hlt
aaa
adc
add
negb
or
sbb
sbb
and
adc
clc
adc
adc
sub
jae
add
push
aad
sbb
mov
and
mov
idivb
hlt
repnz
test
repnz
lcall
je
mov
inc
imul
push
sbb
fiadds
icebp
cmp
sarb
sbb
or
es
out
jnp
ljmp
mov
sbb
push
in
movsb
pushf
pushf
fstl
cs
and
and
shlb
fstpt
sub
adc
push
adc
arpl
imul
xor
mov
mov
sti
aas
sub
or
shlb
call
xchg
fs
loopne
push
and
mov
xor
xor
mov
or
jnp
xor
jge
je
sub
int3
cltd
inc
dec
xor
inc
hlt
out
xchg
jmp
sub
out
pop
pushf
ret
mov
mov
mov
adc
sbb
enter
aaa
pop
and
add
dec
or
ss
xchg
ljmp
sbb
xor
hlt
test
test
and
sbbl
rcl
les
add
cmc
adc
ja
pusha
test
sbb
mov
cmpl
cwtl
and
jg
test
jle
std
test
or
lods
pop
daa
sbb
sub
cmpsb
fisubl
add
mov
sbb
mov
jbe
mov
sbb
jbe
in
hlt
pop
in
ds
mov
jns
jle
stos
or
mov
or
outsb
jo
repnz
sub
jg
insl
mov
adc
inc
pushf
pusha
nop
inc
gs
sub
js
inc
pop
or
es
and
jo
or
test
inc
add
xor
adc
arpl
or
cmpsl
out
jmp
push
lock
test
push
or
add
add
fwait
xor
js
lret
xor
mov
sahf
sahf
xchg
xchg
sbb
outsb
stc
pushf
add
mov
and
jns
aam
call
xchg
fwait
sbb
data16
lods
cwtl
imul
lret
rorl
pop
and
ss
lock
adc
inc
add
add
xchg
adc
ds
ja
jmp
cmpsb
cld
push
xorb
push
and
int
enter
adc
sub
ljmp
pop
push
adc
adc
cmpsb
fidivrs
dec
movsb
hlt
out
aam
push
mov
push
leave
and
call
repnz
dec
and
fwait
call
imul
loope
clc
jge
inc
and
and
scas
dec
ja
pushf
lcall
hlt
sub
jge
out
push
mov
ret
pop
push
imul
rcrb
icebp
arpl
enter
lret
and
mov
mov
in
cmpsl
lret
xor
mov
or
outsl
ja
test
mov
cmpsb
js
mov
cld
add
fs
adc
xor
dec
test
push
jle
cmp
nop
inc
push
daa
jo
test
test
jge
pop
ljmp
adc
xor
adc
mov
mov
out
nop
inc
mov
add
or
cmp
mov
mov
test
mov
mov
dec
inc
sbb
mov
je
in
or
sbb
and
adc
stc
adc
pop
sbb
adc
or
and
outsb
repnz
and
mov
adc
push
xlat
pusha
mulb
adc
out
lds
mull
jne
sahf
jmp
ret
and
pop
popa
push
mov
das
ja
repz
dec
mov
sub
push
mov
mov
mov
insl
fsubrl
pop
out
ljmp
cltd
jo
repz
repnz
and
ret
push
mov
add
inc
jle
xchg
dec
out
push
jnp
inc
cmp
sub
repz
dec
fistps
subl
ret
loope
in
mov
test
adc
pop
out
mov
dec
pop
jbe
pop
fists
aam
xlat
cmpb
in
adc
nop
dec
arpl
sub
out
mov
popa
xchg
cs
and
int
aam
test
ret
or
sub
jmp
mov
bnd
adcl
sub
mov
orb
out
test
jge
shr
sub
mov
push
cli
sbb
loop
or
aaa
in
loop
test
test
sti
sahf
ljmp
cmp
mov
push
mov
outsl
mov
lods
sbb
inc
adc
xor
mov
ficompl
mov
mov
push
adc
repz
xchg
push
sbb
maxps
les
or
stos
push
mov
orps
stos
inc
repnz
or
outsb
mov
push
fadd
mov
sub
mov
xchg
cmp
cs
out
add
xchg
cmp
cwtl
icebp
and
jg
xor
sub
add
stos
sub
and
pop
enter
xchg
scas
add
or
add
add
inc
idiv
inc
and
jmp
lret
inc
mov
sub
jge
cmpsb
fistpll
test
pop
adc
fs
sbb
push
and
xor
adc
inc
popa
les
adc
jne
mov
aam
test
lret
cli
push
and
push
cli
lds
outsb
sbb
add
lcall
sbb
mov
mov
addr16
leave
cmp
fistpll
adc
lret
jle
imull
sub
add
stos
and
sub
imul
cmp
or
sbb
xor
pop
les
icebp
rolb
loop
pop
movsl
mov
ds
call
aad
movsl
jp
xchg
enter
inc
fcompl
jo
xor
fld
addr16
in
scas
push
sbb
sbb
or
adc
sbb
test
mov
push
adc
cld
xchg
xlat
adc
xchg
cmpsb
test
mov
and
and
in
leave
and
add
cmp
outsb
push
or
clc
je
and
imulb
outsl
sti
test
mov
cli
ds
xor
int3
out
cmc
and
pop
sbb
pop
shlb
les
nop
ds
ret
ret
in
es
arpl
mov
leave
or
jmp
push
repnz
aad
das
enter
out
xchg
xchg
outsl
mov
pop
jle
pop
test
sti
jne
nop
in
sub
pop
cld
adc
scas
or
sbb
cmp
or
cmpsb
mov
sbb
push
push
adc
mov
mov
mov
mov
adc
adc
jecxz
les
cli
lahf
lds
mov
adc
movb
mov
or
mov
insl
push
fwait
inc
pop
fsubs
gs
mov
pop
mov
sbb
sub
xchg
add
mov
gs
mov
arpl
xchg
pop
fwait
xchg
jnp
push
sbb
sub
test
repnz
jbe
ret
lret
adc
add
push
iret
mov
mov
bound
mov
in
subl
mov
inc
or
xor
sarl
cmp
mov
xchg
xchg
ret
add
pop
xchg
mov
call
or
push
adc
jl
jmp
or
pushf
add
test
jp
or
inc
das
aam
lock
add
mov
inc
es
inc
lock
jae
and
call
push
pop
and
inc
push
js
cmpsl
repnz
mov
cld
add
jns
cmp
xchg
cmp
fwait
push
mov
inc
stos
test
ja
imul
jnp
fdivrl
cmpsl
push
push
fucomi
sub
sti
leave
push
scas
sub
subb
daa
pop
lret
or
aas
pushf
and
cmp
xchg
jle
adc
test
inc
sub
mov
sbb
push
repnz
pusha
add
jb
jecxz
push
adc
aaa
and
gs
js
and
cmp
std
cmp
call
and
ret
xchg
sub
sub
mov
add
sub
xor
pushf
sahf
jecxz
adcb
sbb
sar
imul
cmpsl
push
xchg
sbb
lods
xchg
movsl
mov
jge
dec
popf
jbe
movsb
test
rolb
jle
scas
cmpb
cmp
popa
aaa
in
xchg
sub
das
or
test
cmpsl
inc
adc
jg
inc
sub
mov
loope
sub
loope
adc
repz
dec
add
leave
or
mov
mov
test
xchg
xchg
add
and
or
cwtl
add
cs
push
lret
add
jg
ret
loopne
imul
je
das
lds
enter
imul
outsb
xchg
adc
mov
push
repnz
sbb
sti
loop
in
out
imul
out
sub
and
cmp
lret
or
insb
add
inc
ret
add
and
jecxz
popf
jp
jp
arpl
sbb
inc
mov
jecxz
pushf
ljmp
iret
push
int
sbb
cli
int3
scas
test
add
jp
mov
and
adc
test
imul
mov
fmul
int
aam
mov
push
leave
or
insl
xor
jmp
enter
lock
in
sbb
test
sbb
jge
sub
add
mov
dec
and
or
sbb
aas
mov
decb
add
repz
loope
dec
pusha
inc
push
push
cmpsb
xor
sbb
test
ret
negl
es
leave
lret
push
lock
into
inc
mov
push
adcl
xor
cmc
xchg
std
or
pop
pop
imul
popa
or
add
imul
imul
cmp
pop
mov
sub
mov
sbb
div
push
data16
cmp
lcall
rorl
cmpsl
lea
lea
mov
and
ljmp
xchg
sub
leave
dec
and
outsl
fnstenv
repnz
les
push
outsb
adc
je
xchg
pop
adc
sub
mov
int
sub
out
and
rolb
mov
stos
jmp
test
je
cmp
es
int3
sbb
int
and
cmp
lret
push
sub
sub
aad
mov
sbb
movsl
les
scas
dec
leave
pop
cmp
std
and
mov
adc
mov
or
xor
xor
or
adc
adc
in
fimuls
flds
dec
fimull
push
xchg
xlat
fwait
push
aam
push
dec
cmp
cmc
addr16
ljmp
and
jmp
mov
cwtl
and
roll
mov
cli
xchg
push
dec
mov
jmp
mov
clc
faddl
push
ror
push
adc
xchg
mov
stos
mov
in
dec
pop
jmp
pop
adc
push
mov
fisttps
push
lret
or
sbb
and
repnz
test
into
loope
push
subl
jecxz
jb
rclb
insb
popf
inc
push
aad
mov
push
sbb
mov
push
movsb
jge
push
jmp
adc
pop
js
addr16
mov
dec
mov
or
inc
leave
cmp
repnz
and
push
push
test
daa
aam
mov
pop
pop
lock
xchg
inc
push
push
movl
mov
les
lret
mov
aad
bnd
pop
daa
ret
loop
shlb
stc
scas
arpl
mov
loope
adc
cli
jp
outsb
lds
xor
sub
jmp
dec
insl
adc
pop
pop
in
dec
js
es
sti
xchg
sarl
sub
and
or
repz
pop
sbb
pop
outsl
sti
inc
sub
sbb
cltd
scas
inc
shrl
test
pop
mov
stos
jle
mov
ljmp
mov
cmp
addr16
mov
lods
mov
push
int3
jp
jecxz
shl
repz
dec
mov
icebp
adc
add
test
jle
popa
mov
out
lock
fildl
repnz
add
mov
mov
les
push
test
sub
push
addb
test
test
fsubr
stos
sub
cld
mov
stos
inc
cmp
repnz
cmp
adc
push
cmp
mov
loop
jmp
xchg
jge
pop
add
or
je
pop
cwtl
mov
pushf
cmp
insb
pop
jmp
adc
enter
aaa
mov
adc
popf
or
push
jb
cld
dec
push
mov
jae
stos
bnd
or
jo
outsb
int3
int3
pop
clc
mov
sbb
dec
dec
cmpsl
adc
jo
out
xchg
pop
mov
or
jg
data16
dec
adc
push
mov
mov
scas
push
sub
sbb
sbb
addr16
sub
mov
lods
ljmp
cltd
adc
jl
repz
push
aam
jecxz
ror
repnz
add
inc
shrb
or
imul
cmpsl
repnz
add
int
push
cmpsl
ljmp
and
mov
testl
je
sbb
add
sub
ljmp
and
mov
sub
mov
cli
lock
pop
stc
mov
ljmp
xchg
cmc
out
add
ret
sahf
and
jp
repnz
mov
popa
fldt
pop
loopne
fxch
test
xchg
insb
sub
lods
dec
ljmp
jne
pop
je
adc
cwtl
mov
icebp
cmc
cmp
and
in
add
fucomip
inc
out
add
mov
dec
rclb
mov
mov
mov
sub
mov
repz
pop
in
repnz
negl
push
leave
dec
mov
mov
mov
loopne
and
test
out
mov
or
push
popa
outsb
and
mov
cmpsb
jg
adc
inc
les
adc
sbb
faddl
aas
sub
cmp
and
leave
enter
mov
pop
adc
push
lret
and
sbb
test
mov
rclb
ja
aaa
xlat
inc
imul
inc
test
cmpsl
push
or
imul
push
out
mov
push
mov
pop
sbb
push
add
and
movsl
int
add
inc
lret
cltd
xchg
sbb
mov
int3
push
add
mov
test
and
push
mov
frstor
pop
and
cmpsl
inc
stos
mov
loopne
xchg
push
inc
aam
sbb
lret
mull
pusha
or
repnz
sbbb
adc
mov
mov
push
jle
test
addr16
cmp
leave
and
jns
outsl
pop
and
fidivl
and
hlt
push
cmc
ror
call
arpl
xor
ds
lock
inc
jg
into
pop
sub
jge
repnz
out
inc
xchg
stc
rorb
jecxz
repz
rcrb
in
adc
xor
out
bound
pop
xchg
ret
sub
std
dec
pusha
loopne
testl
lea
or
jmp
add
mov
es
test
add
mov
sar
mov
andb
and
xchg
ret
cmpsl
fistpll
add
jo
jmp
mov
mov
fldt
and
or
and
sub
es
cmp
xchg
add
fcoms
lret
mov
movsb
dec
aam
jge
js
fiaddl
data16
pop
sbb
nop
or
cltd
aaa
notl
sub
and
sbb
cmp
cwtl
je
imul
sbb
repz
loope
mov
aam
in
mov
repnz
fildl
lock
mov
pusha
push
test
stos
jb
jo
adc
ljmp
add
loop
push
inc
sti
sub
and
cmp
daa
fimuls
pop
addr16
inc
xor
cs
and
stos
inc
mov
pop
mov
sbb
lret
xor
rcrb
repz
lock
push
jge
jo
inc
ljmp
scas
gs
and
mov
shl
dec
test
inc
dec
or
jns
dec
mov
cmpsl
or
ss
and
mov
cmpsb
les
xor
xchg
test
ljmp
testl
push
lea
push
ret
and
pushf
jge
and
addr16
jne
movsb
or
pop
pop
int
xchg
and
lock
sub
test
addr16
repnz
mov
cmp
add
int3
ljmp
mov
push
test
inc
loope
insb
dec
jl
movsb
lods
mov
ljmp
out
adc
and
jle
test
sti
sbb
sub
inc
pop
add
sub
repnz
and
test
xchg
jb
inc
xor
cmp
btc
ljmp
fmull
cmpb
inc
andl
mov
imul
nop
sub
call
jmp
jg
rorl
cli
sbb
sbb
xchg
xor
mov
inc
add
mov
adc
test
nop
xchg
fmull
movb
and
sahf
pop
data16
add
pop
mov
pop
mov
mov
adc
or
fcmovnbe
les
lods
pushf
sub
mov
ficompl
dec
sub
sahf
lods
in
mov
popf
mov
in
dec
push
mov
daa
mov
insb
repnz
mov
xor
sbbb
pop
pop
loope
jle
adc
mov
aad
sbb
xchg
xchg
cli
ss
push
addb
xor
insb
inc
cmpsb
mov
mov
out
sbb
rol
movsl
imul
push
repnz
lret
adc
jle
mov
mov
ret
ss
cmp
mov
cmp
adc
xorb
xlat
bound
add
je
sub
jne
scas
dec
js
adc
in
xchg
cmpl
enter
ds
aad
fwait
and
mov
aam
sub
xor
cmp
incl
jno
lock
xchg
pop
push
or
ror
cltd
movsb
loopne
arpl
mov
and
mov
in
push
pop
cmpsb
push
mov
adc
add
int
push
dec
push
jo
sbb
test
iret
pop
lret
ret
and
push
enter
ror
adc
sbb
je
pushf
hlt
mov
fiadds
pop
push
lods
inc
push
adc
jg
mov
mov
fimull
mov
cmp
push
cmc
xor
push
out
sub
fs
add
in
in
push
sti
pop
popa
shll
mov
test
mov
ret
nop
lret
jne
mov
test
jae
xchg
stos
js
adc
jp
cld
fildl
mov
adc
add
sub
fstpl
ret
mov
ja
out
movb
push
in
mov
mov
and
or
cmc
aas
inc
pusha
dec
push
sbb
enter
push
add
inc
leave
sub
repnz
cli
xchg
std
pop
jl
xor
shll
call
popa
sbb
or
inc
xchg
addb
cld
outsl
clc
out
pop
notl
insl
jb
xor
les
addl
or
jp
adc
mov
adc
jno
cli
js
rcr
fsubrl
add
pop
mov
cmp
popf
mov
in
lea
in
add
inc
js
lcall
or
sbb
mov
sbb
mov
pop
in
leave
cmp
mov
cmpsl
mov
pop
mov
push
fwait
aam
push
lock
jge
push
dec
das
jb
call
repnz
test
and
add
repnz
leave
clc
mov
and
outsb
jnp
cmp
fs
cmpsb
div
test
fistl
add
or
or
push
sahf
xor
mov
jae
pop
repnz
adc
scas
sarb
popa
addr16
cld
nop
adc
je
mov
loop
mov
inc
add
movsl
mov
aad
sarl
sub
iret
scas
sub
dec
dec
sbb
pop
inc
inc
icebp
mov
and
sub
lods
add
dec
test
sub
data16
insb
xor
dec
lahf
cmpsl
ret
stos
fwait
outsl
pop
or
loopne
int
sub
pop
leave
stos
pop
sbb
stc
inc
jb
or
pop
test
fs
xchg
dec
sbb
int
mov
call
mov
push
std
outsb
pop
push
push
adc
mov
stos
addr16
and
jecxz
xchg
sbb
sbb
lea
aaa
das
dec
int3
roll
mov
movsb
cmp
xor
mov
xchg
xchg
jns
or
jg
cwtl
out
jbe
cli
rorb
sbb
mov
call
andb
xchg
out
mov
daa
fidivl
xchg
clc
push
aam
pop
jge
imull
std
sarl
repnz
jns
push
mov
shlb
sub
inc
pop
shr
and
xor
push
pop
scas
push
loope
fsubrl
daa
js
mov
bound
rcrl
and
inc
xchg
mov
repnz
and
popf
jne
and
and
stos
mov
popa
mov
fwait
inc
xchg
inc
fwait
push
adc
test
and
fs
imul
mov
loope
push
loop
mov
test
add
fldl
sub
ficoms
fwait
mov
sbb
pop
push
xchg
mov
jb
pushf
lods
or
nop
mov
popf
inc
mov
out
aam
sti
out
xrelease
adc
dec
sub
sbb
cmp
sub
jg
rorl
pushf
sub
push
bound
cwtl
ss
shr
repnz
mov
xchg
stc
adc
xlat
ds
clc
mov
lahf
out
stos
or
popf
fldt
sub
mov
pop
aaa
movsb
xor
imul
call
and
jp
cwtl
leave
jne
pop
mov
push
lret
repz
sbb
jecxz
mov
push
ja
dec
out
rcll
or
jb
or
adc
imul
dec
lret
xchg
sbb
and
daa
mov
les
adc
dec
cmpsl
pop
jne
push
test
movsb
test
aad
je
sbb
ljmp
mov
xchg
mov
sub
sbb
xchg
insl
cld
ljmp
xchg
dec
cmpl
ret
add
mov
add
sbb
cmp
xor
adc
mov
repnz
adc
push
loop
inc
inc
dec
call
rcl
out
mov
push
xchg
mov
fists
add
test
add
push
outsl
les
push
inc
nop
sub
pusha
shll
test
out
inc
push
cli
sbb
mov
inc
xchg
sbb
stos
push
orl
rcrl
rclb
or
jge
mov
dec
pand
in
sub
aaa
je
inc
fdiv
rclb
sub
out
jmp
inc
loope
hlt
adc
imul
outsl
xor
cmp
sub
push
push
cs
sub
repnz
jge
cmc
jle
cmpl
adc
or
jle
mov
in
xor
xor
xchg
xor
filds
fwait
and
mov
sbb
cmp
call
std
xlat
lea
sbb
movsl
mov
test
loopne
inc
fistpll
shll
push
sub
sahf
fstps
sbb
mov
movsb
es
cwtl
rorl
jge
jnp
outsl
xlat
add
fisubl
iret
imul
cmpsl
push
xor
into
adc
lret
add
jmp
mov
btr
cwtl
aaa
enter
dec
pop
push
pop
mov
rorb
pushf
jnp
jge
loop
js
repnz
add
sbbb
xchg
ljmp
pop
xchg
enter
movsl
fwait
roll
add
fbstp
xor
into
int
mov
xor
lds
lret
mov
rcrb
in
push
mov
add
sahf
xor
pop
insb
dec
xchg
out
bound
sub
cmp
jo
jbe
data16
cmp
popf
dec
or
movsb
clc
adc
add
pop
mov
xchg
stos
xchg
jp
enter
imul
es
inc
fsubrl
jg
mov
dec
cmp
push
dec
push
js
movsb
test
stos
call
push
mov
rorb
dec
add
and
repnz
push
push
test
mov
loope
dec
outsl
fisubrl
pop
les
stc
xlat
add
pushf
push
lock
mov
adcb
cwtl
out
movsb
inc
stos
cld
add
das
pop
or
xor
cmp
sub
ret
push
push
mov
jb
pop
mov
shll
jecxz
sub
or
xor
lods
mov
jg
dec
add
jecxz
jo
pop
shrb
jnp
lret
out
xchg
stos
jp
xchg
test
sahf
loope
push
daa
test
or
pop
cli
mov
push
leave
in
and
sbb
out
repnz
adc
cmp
ficoms
mov
sbb
arpl
push
sub
lcall
aas
push
xor
scas
loope
inc
aad
push
addr16
popf
ret
xchg
adc
and
adc
fs
push
adc
adc
mov
add
repnz
or
pop
lcall
iret
test
sbb
or
aas
cli
xchg
cmp
mov
pushf
inc
fwait
adcb
xchg
imul
enter
fisttpl
imul
ja
or
je
or
rcl
mov
addr16
insb
xchg
fsub
mov
pop
cli
sbb
and
sub
enter
movsl
cmp
mov
add
imul
int3
cli
aam
and
xchg
ret
xchg
jecxz
test
push
rcl
sbb
lcall
int
jo
add
jle
and
sub
repz
pop
jno
cmpsl
decb
xor
test
mov
mov
into
pop
sahf
scas
ret
inc
xchg
cmp
les
ljmp
pop
test
or
sub
out
xchg
aas
mov
repnz
wbinvd
and
gs
lea
and
outsb
pop
dec
les
insb
sub
aam
jge
stos
cwtl
and
mov
add
cmpsl
test
add
dec
xchg
movsb
je
sub
adc
xchg
imul
jo
add
add
imul
in
sbb
mov
sub
inc
movsb
mov
mov
into
adc
sub
mov
stc
xor
inc
xchg
icebp
pop
and
movsb
js
cmpsb
movsl
cmc
out
fisttpl
jmp
or
add
sub
mov
stos
rolb
jp
inc
fdivl
call
and
adc
repnz
je
cmp
fwait
enter
mov
mov
add
jecxz
test
or
test
lods
daa
pop
mov
adc
adcl
jbe
or
outsl
pop
fidivrs
les
or
or
sub
cltd
mov
andl
jle
cld
pop
push
or
mov
dec
in
into
fcoms
div
xor
movsl
fs
test
mov
push
mov
mov
xor
sbb
daa
and
xor
inc
add
jmp
or
lret
in
or
xor
inc
pop
test
and
sub
mov
js
leave
insb
mov
fwait
jae
fstps
jp
push
scas
in
push
leave
push
lret
jmp
cmp
out
push
inc
divb
dec
mov
out
xchg
aad
cmp
mov
adc
out
mov
sti
lret
mov
repnz
out
mov
mov
ss
xchg
mov
xchg
pop
dec
mov
inc
lret
cmpsb
inc
cmp
into
rcll
frstpm(287
and
negl
push
sub
xorb
loopne
push
mov
xchg
in
ds
jp,pn
and
mov
inc
mov
ficoml
mov
adc
mov
inc
dec
int
mov
push
add
mov
stos
adc
out
lock
fdivrs
mov
push
sub
lods
inc
add
fmuls
push
push
icebp
mull
xchg
mov
add
inc
mov
mov
push
xadd
cmpsb
inc
sub
xchg
loope
call
lret
repnz
ret
and
ror
fcomp
aaa
repnz
sbb
test
je
pop
mov
sti
test
jne
dec
loop
sbb
dec
or
push
incb
lret
cli
and
and
mov
stc
push
or
mov
scas
mov
push
data16
push
xchg
inc
in
cltd
arpl
push
add
pop
repnz
cmpsb
xor
addr16
leave
and
mov
test
adcb
xchg
dec
pop
push
icebp
arpl
sub
and
sub
divb
jecxz
cmpsb
repnz
xchg
lcall
mov
orb
pop
sti
push
ret
dec
in
mov
sbb
pop
pop
fs
push
std
mov
push
jnp
lods
scas
push
in
push
ret
inc
imulb
mov
or
or
inc
popa
pop
mov
adc
fs
mov
adc
inc
push
pop
call
aas
popa
mov
mov
dec
push
addr16
or
leave
cmp
mov
xchg
fcomps
das
ja
mov
insl
dec
mov
xor
sub
mov
xchg
xor
stos
pop
pop
negl
add
xor
lret
enter
mov
fisttps
rorb
out
push
pop
xchg
mov
and
loop
mov
sar
push
xchg
addl
jle
leave
mov
jge
add
bnd
push
mov
xchg
adc
xor
das
pop
lahf
sti
pop
mov
imul
mov
fmuls
repnz
sarb
mov
mov
decb
arpl
mov
xchg
gs
fisubrl
inc
mov
ljmp
and
repnz
lret
cmp
xchg
dec
int3
popa
or
mov
sbb
mull
lds
jbe
scas
std
sbb
sub
and
mov
xchg
sbb
xor
pop
repnz
dec
mov
jg
mov
repnz
adc
mov
pushf
sbb
or
mov
mov
jne
push
mov
fstps
mov
aad
cwtl
or
stos
mov
jmp
jecxz
andl
push
aam
sbb
cmp
or
pop
subb
sub
loope
leave
loope
sbb
push
in
test
push
imul
outsl
fucom
stc
add
inc
daa
test
jg
sub
sbb
lcall
dec
imul
test
adc
pop
ss
ss
adc
lock
and
insb
sub
mov
cmp
stc
scas
push
cltd
and
jbe
iret
jl
icebp
sbb
sbb
test
repz
ret
jp
int
shll
movsb
push
and
icebp
loope
xchg
or
sbb
or
adc
sub
test
leave
hlt
jns
out
inc
mov
lcall
dec
pop
sub
repnz
aas
add
mov
xchg
inc
sbb
mov
pop
push
or
cs
jecxz
or
xor
push
movsb
and
loop
adc
enter
or
adc
cld
fists
mov
mov
sub
ficomps
fndisi(8087
loopne
adc
inc
adc
enter
imul
mov
ret
stos
sti
sbb
enter
in
and
inc
test
out
cld
out
or
fs
sub
or
mov
xchg
ja
add
call
mov
mov
xor
dec
pop
addb
jmp
xchg
mov
jp
movsb
pop
and
sub
insl
or
inc
cmp
mov
jmp
out
pop
pop
lret
jmp
jo
sub
pop
inc
adc
loope
push
shrl
iret
sbb
test
and
sub
xchg
xorb
icebp
insb
add
cs
ja
jnp
and
cmp
sbb
add
lea
adc
pop
and
sbb
testl
mov
fsubrs
and
fistps
aas
mov
test
ljmp
mov
mov
jecxz
dec
loope
mov
in
incl
adc
sahf
loopne
cmc
ljmp
dec
cmp
xchg
mov
outsb
xchg
lret
push
xor
jecxz
scas
addl
mov
jecxz
icebp
lret
lcall
cmp
push
push
stos
aas
aad
mov
add
sub
or
lock
push
repnz
push
mov
dec
mov
lock
lods
pushf
daa
xlat
inc
stc
mov
and
aaa
and
mov
sub
std
rclb
cmp
mov
xor
jl
mov
shl
notl
mov
loop
loopne
sub
sbb
mov
fadd
push
jb
addr16
orl
mov
cmp
mov
push
jnp
cmpsl
jecxz
fs
hlt
cwtl
addr16
push
shlb
mov
imul
push
sub
mov
sahf
and
add
ret
sbb
mov
add
jo
adc
dec
cltd
test
sti
push
jge
adc
pop
or
push
pusha
ja
stos
sub
xchg
pop
repz
dec
and
jmp
idivb
lock
sti
and
pop
sbb
push
outsl
mov
pop
xchg
imull
pop
fsubs
cld
scas
into
mov
ds
loopne
repnz
and
xchg
mov
stc
lea
repz
cmpsl
addr16
je
or
pop
cmpsl
xlat
shr
or
repnz
das
sbb
adc
and
add
fnsave
adc
xchg
loope
jg
ret
jbe
mov
jbe
addr16
test
mov
sbb
icebp
mov
pop
xchg
mov
inc
aaa
mov
popf
push
fisubrl
test
pop
adc
mov
xchg
lahf
popf
mov
mov
adc
or
sub
sub
add
or
pusha
rcrl
movsl
dec
cwtl
push
and
leave
jg
loop
test
aam
and
and
xor
jecxz
sar
leave
dec
call
fdiv
adc
xchg
lahf
cs
in
sub
out
movsb
mov
fimull
pop
sbb
imul
jecxz
xchg
push
push
mov
fsubr
or
aad
mov
out
add
in
aas
test
cmp
or
xchg
mov
fs
jbe
js
js
arpl
call
and
mov
sub
sbb
subb
mov
lods
hlt
sub
jbe
test
mov
pushf
xchg
inc
or
fdivrl
push
inc
hlt
jo
das
popaw
roll
ret
ds
mov
fwait
ljmp
jecxz
jo
test
mov
insb
pop
jge
cld
cli
sub
inc
xchg
push
pop
sbb
clc
sub
imul
xor
pop
scas
sbb
xchg
and
test
inc
loope
adc
lock
dec
repz
push
clc
jnp
call
cmpsb
adc
and
sub
cltd
sub
out
xlat
mov
in
cli
call
mov
push
mov
sub
pop
sbb
loope
jecxz
mov
icebp
mov
sbb
cmpsl
xchg
mov
xchg
into
shlb
lret
imul
or
jle
push
cmpsl
mov
icebp
rcr
dec
inc
add
add
es
sbb
outsb
lcall
imul
hlt
sbb
pop
shl
sbb
andl
rcrl
mov
sub
lods
xor
sbb
sub
iret
jg
icebp
addr16
xchg
xchg
mov
and
cmp
xor
shl
and
push
lds
icebp
into
je
mov
stos
jg
sarb
xchg
shrb
sub
shlb
pop
adcl
cmpsl
inc
jg
ljmp
lret
adc
mov
lcall
inc
mov
scas
das
repz
mov
lret
pusha
push
das
mov
cld
jp
iret
push
or
movsb
jno
std
jo
cmp
jge
mov
mov
sbb
cmpsb
clc
mov
inc
push
dec
je
mov
or
and
enter
fsubs
arpl
mov
inc
mov
adc
out
push
sbb
pop
push
stos
sub
ja
push
jmp
add
or
xchg
xchg
lret
sahf
hlt
icebp
mov
inc
xorb
mov
rcrb
xchg
outsl
popa
ljmp
mull
mov
insb
mov
out
movsl
mov
jecxz
bound
or
stos
sub
and
je
pop
cwtl
mov
adc
fidivrl
shl
adc
push
popf
sbb
sbb
outsl
or
out
bound
loope
jmp
and
sub
mov
enter
inc
adc
fiaddl
cli
push
dec
pop
in
cs
arpl
push
mov
mov
iret
ret
cli
xchg
jg
sbb
and
xor
sub
xchg
jecxz
aam
push
pop
ljmp
push
adc
lods
add
js
mov
insl
popa
js
outsl
enter
aam
push
push
divb
inc
inc
lret
lret
mov
clc
dec
or
loopne
ds
sbb
stos
es
adc
das
les
jnp
ja
sahf
adc
sahf
jge
lret
movsb
into
sbbl
xchg
pop
or
cmp
in
ficompl
adc
add
and
in
test
pop
test
lea
or
or
adc
mov
mov
inc
nop
jno
adc
arpl
adc
pop
mov
add
loopne
mov
mov
add
and
int3
cmpsb
jmp
pop
add
pop
ficomps
fwait
iret
mov
lret
inc
fidivs
testb
xor
lcall
add
mov
adc
scas
movsb
repnz
in
aaa
mov
push
cwtl
jl
mov
fwait
and
sub
mov
out
jae
test
mov
daa
adc
ljmp
cld
fxch
cmp
and
sub
dec
mov
divb
dec
inc
into
xor
insb
push
sbb
ret
mov
jmp
subl
push
stos
test
adc
add
repnz
mov
and
scas
popa
pop
sahf
adc
cmovno
lret
jecxz
sbb
pop
dec
fs
call
repz
movsb
mov
jne
add
hlt
push
bnd
scas
pop
or
xor
push
and
cmp
mov
mov
cmpsb
inc
xor
test
in
ss
jle
repnz
mov
xlat
mov
and
xor
mov
or
xor
sbbb
loope
sahf
into
jbe
mov
mov
dec
shrl
mov
ret
clc
push
outsl
push
popf
add
mov
push
popf
pusha
dec
sub
gs
sub
pop
das
stc
nop
push
mov
pop
add
cmc
cmpsl
rorb
and
inc
in
addl
aaa
or
mov
inc
shr
test
fwait
test
mov
out
sub
cmp
jle
repnz
push
movl
stos
push
push
or
dec
xchg
and
xchg
ja
test
sbb
xor
jne
loop
pop
mov
pop
add
ja
push
cmp
mov
sbbb
aam
jmp
lahf
inc
mov
rcr
nop
repnz
hlt
loop
rclb
sbb
sub
int
cmpsl
pop
push
ret
mov
mov
sub
shlb
sub
and
mov
push
xrelease
fs
dec
std
pop
ja
lods
pusha
aas
cmp
jp
sub
test
push
cli
dec
aaa
push
daa
jl
stos
sbb
out
rorb
loop
pop
or
lds
mov
ljmp
test
jge
xchg
sub
lods
sbb
xchg
mov
jl
push
xchg
mov
push
repnz
subl
leave
add
faddp
mov
pop
insb
bound
lret
fs
dec
fildl
test
mov
in
data16
lret
rorb
push
sbbl
xor
mov
jmp
test
les
test
jmp
push
ljmp
lods
and
adc
aas
or
pop
gs
add
mov
sub
dec
pop
repnz
lcall
or
sbb
adc
mov
lret
loope
ds
inc
or
and
mov
jmp
inc
repnz
xor
inc
das
pop
fnstsw
adc
lods
sar
pop
negb
mov
and
push
mov
jge
add
and
sub
dec
or
jge
iret
cltd
popa
fidivl
imul
mov
rol
les
adc
pop
pop
or
call
xchg
mov
lds
lea
sbb
inc
xchg
lods
sbb
xor
sub
hlt
daa
mov
imul
ret
sub
inc
xchg
push
sarl
jmp
aas
aad
adc
adc
xor
imul
subl
dec
mov
dec
pop
lret
sbb
stc
jecxz
daa
mov
pop
jne
xchg
ljmp
into
add
and
or
dec
cmp
bound
inc
movsb
jno
mov
xchg
int3
in
stos
leave
push
adc
adc
shr
popf
cmp
sbb
rorl
adc
push
ret
aaa
sbb
imul
jle
andb
sub
jbe
dec
test
fs
mov
out
push
push
adc
movsb
push
lea
lret
stos
mov
lahf
fldl
lret
in
or
jmp
adc
mov
push
mov
adc
mov
cli
xor
dec
aad
test
add
push
imul
ja
fwait
imul
mov
fldt
movsl
cmp
and
fists
movsb
std
push
nop
sub
mov
push
gs
popa
pop
xor
cmp
lcall
sub
or
pop
inc
jbe
sub
jge
aaa
loopne
in
sub
fmuls
dec
mov
ss
push
stc
xor
pop
test
sbb
out
lds
xchg
test
cli
test
rcll
int
rolb
adc
adc
sbb
daa
mov
imul
into
push
jmp
push
xchg
inc
xchg
inc
xchg
jmp
mov
data16
add
fcomp
cli
repnz
loop
scas
mov
mov
add
xchg
lods
sub
push
or
mov
push
nop
test
clc
in
stos
push
in
sbb
loope
jmp
fsub
dec
xchg
leave
sbb
jge
xchg
pushf
jb
or
inc
push
cld
inc
lcall
fisttpl
jb
xchg
pusha
addr16
dec
add
sub
ret
xchg
aaa
lsl
call
minps
addr16
mov
pop
das
mov
or
mov
mov
mov
adc
iret
das
inc
add
sub
mov
cmpsb
mov
pushf
popa
and
es
outsl
mov
icebp
mov
mov
jecxz
orb
repnz
loope
or
decb
inc
ret
dec
scas
dec
ljmp
outsb
mov
and
adc
loop
push
popf
ljmp
je
mov
insb
jl
ljmp
push
out
sbb
or
stc
outsb
sbb
push
mov
xchg
sub
jle
neg
and
cmp
ja
pop
lahf
gs
call
add
sbb
sbb
fcom
cmpsl
cmp
pop
mov
rorl
cmpsb
or
jb
pusha
push
mov
idiv
jl
stos
mov
icebp
iret
aaa
stos
stos
mov
in
stos
push
pop
push
mov
les
dec
xchg
or
pop
ljmp
push
lea
movsb
repnz
negl
sbb
or
lss
lock
cmp
outsb
jns
mov
sub
push
orb
std
xchg
jg
fistpl
andb
mov
or
mov
lock
push
add
sub
sub
rorl
sbb
jns
fildll
xor
insl
xchg
pop
xchg
out
fnsave
add
sbb
sbb
repnz
fs
pop
cs
dec
cs
rcll
dec
js
push
xchg
xor
dec
jp
sbb
cwtl
push
adc
les
mov
mov
mov
loopne
and
add
gs
sub
pop
pop
mov
push
idivb
push
xchg
insb
mov
mov
repnz
xorb
insl
mov
push
jl
ljmp
ljmp
pop
test
out
loop
push
cmovnp
fwait
and
ljmp
adc
xchg
movsb
movsl
mov
jmp
jmp
mov
out
add
adc
movsb
mov
push
inc
je
sub
sub
insb
pop
xchg
cvtpi2ps
adc
popf
fists
mov
movsb
jg
loop
std
push
jp
adc
inc
jo
push
inc
lock
cld
shll
mov
mov
clc
add
imul
or
or
or
xor
push
mov
not
xlat
insb
repnz
push
add
sbb
and
imul
mov
leave
push
imul
push
cmp
jp
add
movb
bnd
jb
or
dec
ljmp
shlb
andb
push
xchg
testb
data16
sbb
jbe
or
and
dec
push
aaa
bound
sbb
lcall
test
mov
xor
lods
lock
or
scas
repz
mov
adc
dec
adc
sbb
adc
test
imul
sbb
les
sti
lret
andb
repz
add
cmpsl
adcl
cmp
push
push
repnz
mov
push
pop
mov
cli
hlt
imul
mov
xor
lret
cld
inc
cld
leave
dec
test
stc
mov
dec
sbb
pop
pushf
xor
sbb
imulb
je
test
int3
sub
jno
and
inc
scas
sub
and
loope
and
out
sbb
mov
and
sbb
loopne
jae
or
fdivl
subb
repnz
inc
add
jmp
shl
aaa
fdivs
clc
daa
xchg
ljmp
dec
mov
lret
or
and
arpl
repz
ret
movsb
and
adc
push
movsb
pop
add
loopne
repnz
and
ja
cmpsb
xor
sbb
or
adc
xor
lret
pop
mov
jle
jb
sub
xlat
repnz
push
adc
mov
jg
add
repnz
test
jb
pop
adc
jge
addr16
rcrb
dec
cmc
fadds
iret
gs
test
shll
and
and
dec
add
in
and
ja
pop
insb
pop
orb
pop
rcll
sbb
and
pop
lret
cmp
mov
aas
ljmp
or
mov
mov
sub
adcb
cmpsl
aas
adc
or
test
push
inc
int
sar
dec
or
pop
sbb
or
stos
aad
lret
ja
push
adc
out
pop
test
push
loopne
pop
pop
cwtl
xchg
call
jae
adc
mov
dec
inc
mov
stos
mov
jnp
sahf
mov
shl
lcall
xchg
daa
pushf
not
push
sbb
mov
popa
push
xchg
jp
fmuls
jecxz
stos
sub
xchg
xor
pop
adc
pop
sarl
in
mov
mov
cs
daa
mov
out
cltd
ffreep
jg
add
push
pop
adc
mov
orb
imul
je
or
push
sbb
pop
push
pop
cmc
adc
and
fidivrl
cmpsl
mov
arpl
int3
xor
in
mov
sbb
or
clc
sub
and
in
or
inc
repz
dec
repnz
pop
test
movsb
xchg
into
cmp
rorb
out
test
fdivl
mov
pop
or
inc
push
fdivrs
push
lret
inc
stos
xchg
imul
jl
loope
mov
and
lea
mov
sub
pop
sub
jno
pop
mov
adc
out
cwtl
aad
mov
insl
movsb
mov
fisubl
xchg
push
push
pop
push
test
jb
sbb
call
imul
addr16
pushf
sub
test
push
adc
adc
push
in
das
lcall
je
js
movsb
in
sub
jecxz
jge
xchg
mov
mov
or
pop
dec
jge
inc
and
vmovsd
adc
jmp
or
mov
dec
ret
and
data16
mov
sbb
inc
push
xor
inc
adc
add
xor
cmp
scas
clc
sbb
push
loop
fldenv
and
jno
fidivrs
inc
push
adc
jne
cmc
popf
cltd
mov
and
mov
pop
mov
inc
mov
fisubl
out
sub
mov
daa
sub
aam
movsb
es
icebp
dec
out
popa
mov
cwtl
popa
aaa
daa
xchg
inc
fidivl
mov
or
mov
nop
dec
sub
and
fcomps
sti
stos
mov
mov
movsl
sbb
and
fldl
or
shrb
call
push
jp
call
mov
dec
lock
negl
lea
scas
cmpsb
mov
cld
leave
push
shll
and
out
scas
push
add
popw
pop
sub
cs
lock
mov
mov
mov
out
adc
xchg
xchg
std
or
fdivrl
aaa
loopne
mov
test
xor
out
jnp
add
inc
dec
scas
ret
inc
sub
movsb
jecxz
addr16
imul
xlat
jmp
mov
lea
adc
and
repz
cmp
shl
loopne
daa
rcll
adc
fstpt
xchg
aaa
cmpsb
xchg
outsl
cmp
lods
dec
mov
hlt
iret
movsb
and
jnp
pop
cmp
sbb
aad
aad
nop
out
pop
test
fstpt
ljmp
pusha
jp
adc
dec
adc
mov
and
sbb
sub
decl
mov
add
sbb
adc
jecxz
pop
and
jle
and
mov
push
sbb
das
aaa
jg
pop
or
cmc
or
iret
push
lret
dec
mov
jo
movsb
popf
repnz
cmp
ds
pop
or
ds
mov
mov
push
push
packsswb
add
cmc
repnz
inc
out
or
sbb
xor
sahf
xchg
push
fadds
pop
outsl
sbb
jnp
jne
jle
sti
sbb
fsubrs
sub
or
ret
and
cli
out
rclb
sti
movsl
or
adc
or
inc
rclb
jns
and
ljmp
enter
bound
mov
and
jmp
push
jge
xor
cli
push
jle
fcompl
stos
ds
sbb
std
add
lret
pop
sbb
mov
int3
sbb
es
adc
mov
xor
sub
xchg
dec
add
xchg
xor
inc
mov
les
mov
mov
aam
les
xor
mov
mov
dec
jno
push
dec
dec
and
and
aad
dec
arpl
ja
sub
out
cs
pop
cvtpi2ps
imul
mov
sbb
mov
jae
imul
jge
sub
pop
repz
mov
jno
insl
cmp
sbb
xchg
shlb
outsl
outsb
add
cmp
or
mov
mov
test
push
icebp
and
stos
jnp
mov
inc
or
jle
lcall
and
or
loop
out
hlt
jb
repnz
adc
cmp
jp
xchg
xchg
mov
mov
cwtl
cmp
lea
orl
fadd
cmpl
sub
rorl
ficoml
or
dec
sarl
popa
add
cmp
repnz
mov
pop
or
int
jecxz
cwtl
push
add
mov
arpl
adc
pop
fs
les
sarb
repnz
les
loopne
push
adc
outsl
fldenv
mov
dec
sti
daa
mov
repnz
inc
lock
push
hlt
jl
mov
aam
popa
mov
cmc
mov
inc
addr16
and
aad
or
gs
ljmp
xchg
in
les
add
loope
and
adc
movsb
xchg
dec
imul
jbe
mov
or
mov
xchg
mov
adc
jns
sbb
clc
push
mov
dec
lds
cmp
mov
js
sbb
outsl
test
in
sbb
hlt
in
leave
and
mov
push
or
call
jle
fisubl
test
lea
arpl
xchg
jmp
nop
dec
jmp
push
mov
dec
xchg
sbb
add
sub
stos
subl
int
and
pop
dec
jecxz
inc
sbb
mulb
mov
arpl
or
jg
repz
sub
push
adc
cmp
addb
and
call
hlt
add
jno
pop
pop
shlb
jge
or
das
xorl
add
fistl
dec
in
cltd
sbb
repnz
jecxz
inc
mov
iret
jmp
popa
cs
add
pop
mov
movsb
lret
push
push
xlat
lds
mov
data16
sbb
test
jle
in
je
cld
imul
pop
test
mov
xchg
inc
aam
popa
dec
xchg
arpl
pop
inc
loopne
das
clc
mov
or
and
idiv
data16
mov
mov
out
sub
adc
dec
adc
cmp
in
jge
repnz
insl
out
sub
push
or
imul
loope
cmp
xor
sub
shl
inc
mov
jecxz
fistpll
jno
inc
fs
or
movl
notl
pop
cmpsl
std
andl
mov
xchg
sub
andl
mov
decb
test
add
outsl
loope
adc
push
jb
aam
mov
enter
and
jo
gs
shrl
dec
or
pop
jo
pop
fs
jno
pop
jae
push
cs
repnz
add
ficomps
cltd
cwtl
daa
adc
push
fs
mov
pusha
repnz
push
into
test
inc
ljmp
cmp
faddl
mov
xchg
mov
sbb
mov
ret
dec
mov
or
movsb
add
jmp
mov
outsb
xchg
in
sbb
adc
aad
adc
pop
test
mov
jbe
fidivrs
push
or
lds
push
jae
inc
and
mov
enter
dec
adc
mov
cltd
pop
push
mov
popa
or
cmc
mov
movsl
vmread
jo
adc
es
icebp
or
dec
mov
shlb
add
pop
jbe
cmp
lods
outsl
mov
iret
pop
cli
jecxz
dec
sti
and
mov
lods
dec
cmp
xor
pop
and
mov
rclb
jle
mov
jo
sbb
movsb
inc
xchg
sub
enter
mov
xor
or
cs
int
and
je
aas
fdivr
lcall
pop
pop
movsb
mov
loope
push
inc
mov
mov
mov
jo
call
cs
xchg
cmc
fnstcw
das
mov
inc
leave
cmp
mov
add
lcall
ficoml
bound
das
or
sbb
sub
or
inc
bound
mov
outsb
mov
sub
cmp
lcall
repnz
sbb
aas
and
dec
ret
mov
sub
mov
mov
sbb
out
push
fimull
sub
pop
push
cs
mov
mov
xchg
cs
sahf
mov
rcrl
or
out
sub
sub
dec
call
dec
sbb
xchg
mov
ret
dec
cs
adc
decl
inc
arpl
out
popf
shlb
adc
out
add
xor
pop
add
inc
push
out
xchg
lret
nop
andl
mov
test
and
cli
sub
adc
mov
mov
jecxz
pop
pusha
xlat
call
mov
pop
js
and
inc
jno
or
mov
rcrl
lret
daa
outsb
pusha
add
jns
pop
popa
push
test
lret
add
negb
adc
iret
movsl
je
mov
add
sti
mov
push
add
rorl
mov
xor
mov
jmp
and
fimull
sbb
mov
push
shrb
repnz
fsubrs
mov
push
movsb
test
cmp
je
sub
lret
dec
adc
out
jg
xchg
xchg
dec
and
inc
push
pop
and
adc
lcall
jnp
or
inc
and
and
jl
sbb
scas
je
xor
inc
inc
jecxz
lret
xchg
pushf
bnd
dec
push
idivb
xchg
mov
cmp
lods
xchg
fs
std
or
adc
popf
dec
pop
mulb
mov
mov
gs
sbb
imul
xlat
adc
bound
mov
jb
enter
mov
test
inc
aad
mov
ljmp
adc
add
adc
and
dec
push
bound
test
adc
das
pop
sti
outsb
mov
xchg
mov
cld
and
cmpsl
test
outsl
hlt
cmp
dec
xor
sahf
andb
jp
and
mov
mov
push
dec
insb
mov
mov
and
repz
repnz
cmp
sahf
inc
lock
push
jecxz
imulb
loope
jne
cld
daa
mov
and
es
ds
xchg
push
push
fdivr
in
aam
in
and
pop
mov
or
jmp
cmp
popf
dec
mov
push
daa
jmp
popf
addr16
shlb
jmp
cs
fsubrl
lcall
lods
xor
loop
ds
cmpsl
jno
cmp
xchg
jmp
popf
pushf
pop
loope
in
cmc
inc
pop
dec
mov
loopne
popa
imul
mov
sti
inc
sub
imul
xor
dec
or
xchg
loopne
sar
jnp
into
mov
dec
test
repz
xchg
add
push
out
xor
repnz
sbb
mov
jmp
xchg
adc
dec
inc
xchg
jo
rcrb
mov
jmp
lcall
ja
js
movsb
mov
cli
lret
and
int3
ficompl
cmpsl
int3
pop
push
fcoml
ret
sub
pop
scas
push
pushf
mov
add
pop
into
cmp
xchg
test
jnp
sub
jmp
add
call
clc
jne
sbb
ljmp
jp
loopne
add
inc
test
int3
jecxz
ret
fimull
lret
cmpsl
pmulhuw
movsl
shlb
mov
xchg
mov
pusha
cmp
push
or
add
mov
add
daa
dec
cmp
add
push
xchg
pop
push
sub
mov
push
mov
push
sub
ficomps
stos
adc
out
xor
js
je
sbb
mov
fdivr
fstps
add
cmp
mov
fs
imul
fisubrl
dec
jecxz
test
inc
cld
daa
stos
addl
xchg
push
mov
leave
inc
sbb
enter
ds
jle
xchg
sahf
cld
sub
add
mov
adc
add
out
sbb
cmp
and
or
and
xor
mov
iret
cli
test
aad
or
sbb
addl
and
ror
fdivrp
pop
jns
bound
push
popa
mov
into
mov
lods
js
das
stc
dec
sbb
outsl
daa
mov
xchg
adc
addb
fisttps
mov
push
and
in
cmp
addr16
or
xlat
negl
adc
and
dec
ljmp
loopne
aas
movsb
jb
adc
sub
repnz
lret
cltd
cld
lock
add
or
pop
push
stos
sbb
sub
jo
and
xchg
lcall
pushf
mov
xor
or
pop
arpl
ret
dec
xchg
push
xor
sti
repnz
pop
jge
adc
adc
xchg
add
stos
sub
pop
arpl
xchg
in
pop
sbb
ljmp
add
jmp
adc
scas
std
gs
jne
push
rcll
lret
push
punpcklwd
cmp
push
or
jge
call
idiv
pop
mov
push
sbb
jl
loope
lcall
fwait
or
sub
adc
lret
in
inc
xchg
lods
xchg
push
fldt
cltd
int3
icebp
sbb
cltd
lds
jp
pop
pop
jecxz
inc
xchg
sbb
inc
jmp
dec
cmp
or
outsl
sub
or
arpl
jmp
sub
jne
lods
add
mov
daa
mov
pop
sti
cmp
cmpsl
nop
or
stos
dec
out
cmp
test
lock
xchg
cld
call
mov
xor
adc
sbb
js
imul
xor
pushf
subl
cmp
and
inc
ficoml
stc
out
mov
sbb
mov
stc
sub
sbb
cmp
nop
and
ljmp
jmp
ret
popa
mov
mov
push
sbb
cld
decl
imul
and
add
mov
pop
insb
and
daa
aaa
imul
mov
inc
stc
arpl
movsb
mov
inc
fdivs
shll
call
jb
mov
and
pop
leave
push
stos
pop
cli
push
lret
test
push
dec
repnz
adc
mov
cmp
dec
jecxz
lret
sub
pop
lret
pop
add
jb
hlt
cmp
stos
negl
mov
jl
mov
jge
jle
adc
cltd
sub
mov
lret
addr16
inc
adc
mov
xchg
call
pop
lods
xlat
lcall
daa
mov
mov
jo
scas
in
xchg
mov
push
dec
stos
mov
inc
in
and
jmp
add
negl
cmp
int
repnz
enter
outsl
jb
xchg
xor
mov
lret
shrl
xchg
ds
std
mov
sbb
adc
mov
inc
jmp
arpl
xor
outsl
cli
push
lahf
xor
fisubrl
popa
rep
fbld
pop
and
mov
repnz
shll
je
fidivrl
cld
lock
movsb
mov
and
mov
out
mov
ret
cmp
mov
or
jge
add
sbb
cmp
test
push
sub
xchg
lods
cmpl
lcall
fidivrl
sub
and
repnz
push
leave
xlat
pusha
andb
add
test
pop
push
push
repnz
in
icebp
mov
jo
sub
shlb
lea
mov
pushf
pop
sub
jnp
lds
cmp
lea
je
mov
lahf
pop
sarb
adc
jae
std
mov
adc
in
xor
jmp
pop
loopne
dec
jo
pop
add
enter
push
orb
or
cwtl
loope
clc
outsb
sub
addr16
faddl
jg
or
adc
imul
cmp
adc
std
inc
fs
in
in
sub
jmp
sbb
rol
inc
mov
mov
cltd
pop
push
push
jecxz
test
cltd
ret
mov
rorb
cld
test
repnz
jg
jge
xor
xchg
mov
lret
out
or
add
and
mov
mov
and
popa
sbb
push
and
sub
test
add
test
sar
icebp
cmpsl
bnd
mov
mov
out
mov
addr16
inc
xchg
sub
xor
imul
jne
cld
ljmp
mov
mov
nop
roll
mov
xchg
andl
and
add
add
inc
loope
ljmp
mov
push
push
in
pop
xchg
sti
push
sub
xchg
mov
in
rcrb
pop
sub
adc
lret
test
jle
into
jo
cmp
leave
xor
and
cmp
push
lods
adc
adc
in
adc
pop
test
lret
andl
dec
pop
xor
push
lret
std
add
enter
ret
sub
sbb
lea
and
sbb
pop
push
mov
xchg
adc
sbb
in
leave
cmp
cmp
mov
das
add
je
aaa
dec
inc
xchg
out
mov
mov
mov
ja
sahf
xchg
popa
push
sbb
dec
push
enter
add
test
jge
shll
or
sub
mov
xor
cmp
sub
cld
js
das
xchg
notb
adc
jns
sub
fwait
sti
xchg
jle
repnz
nop
pop
mov
pop
mov
and
xchg
ja
and
xor
xchg
or
cltd
shr
push
testb
out
sahf
adc
dec
call
pop
clc
es
pop
cmp
sub
mov
mov
out
mov
imul
mov
push
mov
repnz
and
andl
add
aad
shrl
adc
push
hlt
push
adc
jb
enter
mov
mov
sub
sbb
sbb
hlt
nop
addr16
push
jecxz
or
mov
inc
mov
sub
and
pusha
insl
cli
mov
pop
fst
popf
sub
jmp
addr16
xchg
xchg
repz
mov
cli
xchg
cwtl
fst
lods
sub
lcall
cltd
outsb
or
es
icebp
inc
jl
enter
push
sbb
pop
out
cmpsl
cmp
lods
hlt
dec
cmp
or
pop
sub
addl
hlt
popa
push
sbb
dec
xchg
lcall
xchg
xor
push
test
gs
dec
mov
popf
and
fsubrp
fists
add
sub
loop
insb
inc
mov
lea
int3
mov
mov
cmp
mov
add
mov
fidivs
mov
and
lcall
lcall
adc
ss
dec
adc
mov
push
pop
adc
out
jmp
insl
jecxz
mov
inc
pop
or
out
repnz
or
js
mov
rolb
or
inc
xchg
pop
mov
jg
sbbb
stos
insb
test
lods
and
pop
mov
adc
pop
test
repz
mov
mov
jns
loope
inc
fisttpll
sub
or
mov
jns
movsl
je
pop
or
cltd
xchg
lods
adc
mov
clc
push
inc
scas
mov
pop
out
cmp
sbb
sub
lds
xlat
stc
mov
insl
cwtl
lret
xor
inc
and
cmpsl
ficoml
or
movsb
jmp
xchg
adc
cmp
or
insl
inc
mov
int3
sti
inc
xchg
inc
mov
and
sbb
inc
test
lods
sbb
push
push
push
ret
adc
out
pop
jl
sahf
out
iret
lret
pop
out
adc
lds
push
cli
xchg
sbb
fs
lcall
jmp
add
scas
cmpsl
jge
ljmp
jp
add
nop
push
js
push
sbb
repnz
ljmp
sub
xchg
xchg
out
dec
lock
or
loope
adc
in
rorl
jnp
cmc
sbb
cmp
mov
idiv
ret
je
enter
ds
dec
and
jnp
jmp
and
cmp
jae
stos
xorb
enter
fwait
mov
test
fdivrl
cli
loope
sti
lret
xchg
and
int3
js
cmp
cmp
and
ret
mov
jle
je
sbb
push
mov
pop
pop
jae
mov
cltd
xchg
jp
or
lcall
xor
dec
pushf
arpl
lret
mov
inc
sti
test
or
fistps
adc
repnz
dec
push
push
cld
mov
and
mov
scas
int
pop
rclb
pop
fcoms
jne
in
leave
add
js
cli
cmpsb
ds
imul
fucomp
add
mov
pop
in
stos
mov
fwait
mov
push
push
inc
fldenv
clc
lret
xor
repz
movsl
inc
sub
pop
shll
mov
lods
inc
test
mov
outsl
sbb
cmp
ja
jle
jo
or
sbb
inc
dec
inc
jnp
pop
sbb
repnz
push
subb
pop
inc
pop
sub
out
mov
adc
lret
lret
gs
loope
adc
rep
jl
sub
mov
insb
into
pop
loopne
and
jecxz
stc
xchg
xor
sarb
stos
mov
test
mov
adc
call
jle
aaa
mov
mov
jnp
add
push
cmp
push
stos
sub
push
adc
inc
sub
sub
mov
mov
cmp
mov
mov
out
xor
in
sbb
cli
sbb
mov
lods
sbbb
gs
adc
adc
sub
xlat
je
loope
dec
fwait
test
and
shrl
addr16
jne
sbb
test
cmpsl
and
push
cmp
lock
into
mov
js
push
cltd
or
sbb
in
out
cmp
push
ret
outsl
out
das
sbb
cmpsb
in
mov
lock
call
mov
sbb
ljmp
in
push
ds
push
xchg
xchg
mulb
inc
les
das
loope
outsl
xchg
xchg
add
sbb
je
test
push
jle
mov
loopne
inc
test
rol
cmp
and
mov
scas
sbb
push
xchg
and
ss
into
ret
imul
cmc
fadd
jnp
mov
nop
dec
mov
jecxz
cmp
sarl
ljmp
iret
cmpsb
jg
fimuls
push
or
je
aad
mov
mov
fs
sbb
xor
in
dec
inc
ljmp
cmp
add
movsb
das
loop
add
movsb
stc
mov
inc
stc
sbb
daa
xchg
sti
and
andb
sub
jg
imul
jb
ficoml
xchg
mov
test
gs
pushf
cs
xor
and
mov
xchg
adc
push
mov
scas
rorb
dec
out
rol
xchg
das
jns
cmpsb
hlt
sub
dec
call
aaa
inc
stos
pop
les
cli
mov
repz
stos
mov
shll
dec
xlat
add
into
jl
lods
mov
cmp
nop
push
outsl
inc
xchg
push
pop
cld
sti
pop
inc
setg
sub
sbb
xor
jl
aad
popf
lods
je
mov
sarb
bound
or
aam
les
jnp
and
mov
pop
jmp
or
sahf
cwtl
test
jb
repz
mov
in
pop
jb
jge
and
dec
or
and
jle
scas
mov
pushf
or
xchg
cld
pop
in
daa
hlt
test
subb
or
cli
mov
xor
add
cmp
xor
or
pop
pop
pop
cmp
add
inc
sub
stos
push
mov
and
and
lcall
jle
insb
andl
inc
in
xor
add
and
sahf
sub
lds
push
and
sar
add
and
xlat
test
shrl
add
add
repnz
out
mov
mov
sbb
mov
push
and
push
xor
icebp
mov
push
repz
arpl
in
adc
test
shr
pop
rorb
test
push
adc
insb
les
lock
stos
cltd
arpl
mov
imul
mov
lods
out
jns
arpl
add
andb
inc
mov
sub
rol
fisttps
push
and
jmp
mov
or
pop
stc
test
inc
pop
insb
xchg
repnz
mov
pop
test
and
in
scas
xchg
arpl
leave
inc
and
dec
push
outsb
fstl
cld
sbb
mov
or
iret
adc
adc
pushf
jb
or
add
loop
mov
inc
mov
cmp
dec
xchg
jo
push
or
sbb
icebp
pop
add
jno
cltd
sub
xlat
sub
mov
scas
dec
mov
sub
push
les
jns
daa
inc
cmp
and
xchg
sub
out
insb
mull
sbb
cmp
in
sub
hlt
cmp
stos
and
xor
ret
and
mov
or
jnp
push
sub
mov
repz
mov
addr16
int3
cltd
mov
jl
sbb
xlat
popa
dec
ficoml
sub
ret
imul
jp
cmpl
andb
test
adc
add
add
clc
es
sbb
repnz
loope
outsl
inc
add
ljmp
adc
push
repz
and
insb
repz
outsb
jg
fwait
mov
lsl
loopne
inc
test
mov
in
inc
mov
aas
orps
in
aam
jle
movsl
popf
sub
mov
or
sbb
jo
addr16
mov
and
adc
rolb
aam
cwtl
loop
cli
cmp
adc
xchg
inc
sahf
or
and
mov
addb
loopne
sub
in
mov
jmp
or
and
lcall
imul
pop
mov
adc
fldcw
jge
inc
cmp
add
cld
adc
push
lods
idiv
or
pop
jmp
ret
aad
mov
push
or
addr16
lock
loopne
mov
jle
aam
mov
adc
mov
shlb
push
push
dec
mov
ret
mov
testl
loop
jmp
aam
daa
aas
std
mov
jecxz
sub
and
dec
repnz
push
pop
lret
sub
and
xchg
cmpsb
cmc
dec
in
sbb
inc
mov
sbb
inc
insl
cltd
pop
repnz
cmp
xchg
aad
cld
mov
jb
dec
ja
daa
sbb
repnz
dec
movsb
pop
cmp
arpl
sub
inc
cmpsb
push
xchg
xchg
sub
or
mov
sbb
sub
push
xor
xchg
test
int3
jge
imulb
inc
stos
pop
cmp
cmp
daa
bnd
in
xchg
jle
cwtl
out
and
or
ljmp
lret
jle
mov
pop
insl
pop
mov
jb
lcall
sbb
std
movsb
jecxz
icebp
jno
xor
dec
add
out
call
mov
dec
fnsave
popl
arpl
sub
push
bound
das
sub
adcb
je
sbb
mov
adc
fistps
cmc
mov
shrl
pop
xchg
enter
push
xor
sub
and
add
jno
jne
lock
push
or
loope
jecxz
jb
imul
cmp
mov
fstps
lds
mov
lds
lds
pop
or
clc
sbb
mov
mov
pop
lds
pop
cli
xchg
lea
adc
dec
add
mov
and
adc
xor
mov
ljmp
out
mov
push
push
dec
adc
inc
fdivr
xchg
xor
rolb
mov
popf
inc
repz
outsl
sub
aad
in
mov
imul
ds
ja
fbld
xlat
psubq
sub
mov
sbb
xor
inc
test
push
add
daa
adc
mov
sbb
insl
fcoms
icebp
xacquire
mov
inc
add
cmp
pop
sbb
out
pop
and
adc
sbb
push
js
dec
ss
loopne
push
test
cltd
repz
fimull
cltd
sbb
jne
inc
inc
mov
dec
and
jo
mov
jb
loop
ljmp
adc
cmp
or
pop
aas
sbb
mov
jg
or
adcl
out
add
hlt
ficompl
cmp
mov
sub
push
fs
xchg
jge
mov
sub
sub
jb
ljmp
sbb
adc
pop
and
push
sti
hlt
bnd
cs
nop
cltd
xor
xlat
adc
out
sbb
mov
push
mov
xor
loop
loope
sbb
push
sub
loope
mov
mov
push
push
inc
cmc
fstpt
rolb
xchg
fwait
int3
movsb
popf
adc
ds
imul
aad
out
test
pushf
sbb
xchg
nop
fimull
prefetcht2
je
sbb
cs
xchg
sbbb
pop
cs
out
pop
and
fucom
mov
push
sub
int
or
adc
adc
pop
aas
cmpsl
jns
inc
loope
push
adc
test
dec
dec
lods
sbb
cmp
fwait
test
loopne
sbb
cmp
jecxz
sub
sbb
sti
xor
mov
leave
cmp
shlb
sub
rclb
push
inc
xadd
cmp
lret
xlat
push
sub
mov
hlt
scas
jg
mov
cmp
sbb
incl
xlat
out
push
push
loopne
outsl
mov
lret
mov
or
push
jmp
lret
out
fcomip
cld
or
jb
es
pop
stos
mov
xor
xchg
xchg
das
notl
lcall
mov
mov
and
sub
fildl
push
ret
sub
cmp
mov
test
sbb
inc
adc
or
or
ret
out
inc
ljmp
add
pushf
pop
sub
lea
or
scas
pop
loopne
pop
je
cltd
rol
out
add
jmp
inc
outsb
pushf
dec
scas
es
dec
loopne
sub
mov
pop
xchg
push
adc
out
cmc
mov
sub
add
fisttpl
stos
pop
call
shlb
xchg
popa
mov
cmpsl
sbb
icebp
dec
fists
test
std
and
mov
mov
aam
and
or
cmp
push
mov
mov
mov
mov
dec
mov
in
leave
addr16
in
cmpsl
push
fcomi
adc
sahf
je
mov
mov
push
and
push
and
cld
imul
ret
mov
fcoml
jb
xor
dec
js
jp
ljmp
cmpsl
out
xchg
sub
jae
mov
cmc
fiaddl
mov
cmp
test
sbb
repnz
lds
inc
sti
sti
stc
xor
mov
xchg
jge
pop
xlat
clc
aam
insl
out
mov
dec
and
sub
adc
incb
xchg
addr16
cmp
jp
jb
and
jbe
addl
add
sti
sti
push
test
dec
push
adc
fnstsw
test
daa
test
cmp
insl
cld
aam
cmp
test
cwtl
sbb
clc
mov
in
leave
ret
shlb
icebp
add
mov
test
adc
mov
out
sbb
inc
out
lds
test
sahf
sahf
sub
in
fcmove
jg
mov
add
xor
scas
xchg
test
sub
sbb
mov
mov
mov
or
sub
xchg
stos
mov
sub
push
sbb
cmpsb
xor
dec
in
mov
pop
fadd
push
repnz
push
das
daa
inc
push
dec
ljmp
sti
outsb
add
lock
stc
fadds
aaa
sbb
addr16
mov
mov
test
dec
xor
out
cli
lods
es
cmp
cmp
icebp
sub
push
cmp
and
mov
mov
dec
xor
dec
notb
das
cld
adc
pop
mov
sbb
out
addr16
dec
mov
fs
sbb
fidivs
inc
xchg
int
sti
into
roll
test
and
xchg
dec
mov
jae
inc
or
sbb
fwait
test
and
xlat
and
lods
cltd
mov
imul
mov
cmpl
subl
push
mov
lahf
cmp
dec
std
dec
add
cmp
out
std
sbb
xor
js
inc
mov
test
push
sbb
cmp
xchg
and
addr16
sbb
add
mov
mov
adc
adc
shlb
aad
and
pop
add
test
test
or
nop
daa
jns
adc
cmp
jmp
cmpsl
sub
in
jp
jb
imul
add
call
jl
and
sub
popa
jmp
push
push
insb
push
xchg
sbb
bnd
ss
pop
test
mov
loop
enter
or
jo
cs
jno
arpl
xchg
and
shlb
jecxz
or
xchg
inc
imul
inc
mov
adc
push
or
cs
repnz
pop
fidivrl
xchg
sbb
loop
lret
cmpsl
out
xchg
jg
cmc
ljmp
jp
sub
subb
cmp
imul
xlat
andl
adc
mov
int
test
add
fsubr
in
mov
fcoml
out
push
mov
mov
and
clc
sbb
jne
cmp
std
adc
je
jecxz
repnz
mov
push
cmp
push
dec
cmp
and
cmp
or
cli
sbb
mov
loopne
xor
push
pop
fs
mov
jo
sub
add
mov
mov
jecxz
arpl
jecxz
stos
xor
dec
lret
imul
cmp
dec
test
scas
dec
ret
ret
mov
xor
inc
cmp
and
imul
sbb
mov
add
or
inc
outsb
dec
dec
test
scas
int3
push
fistl
lods
add
rep
adc
out
push
shrb
sub
cmpsl
repnz
fs
cli
insl
mov
cld
and
mov
leave
or
push
add
aas
mov
or
mov
out
cmpsl
mov
push
adc
xchg
rorl
push
es
bound
xchg
repnz
pushl
imul
mov
mov
sbb
ds
jp
outsb
mov
sbbl
adc
fsubrp
or
sub
pop
or
xchg
or
pop
sub
ss
sub
xchg
or
ss
xorb
sub
in
push
push
cld
cmp
add
jmp
fs
push
mov
pop
mov
nop
ret
cmovp
cs
loopne
loopne
add
mov
inc
aas
jnp
sbb
call
imul
insb
pop
es
int
fists
mov
mov
or
or
inc
lea
int
xor
sbb
dec
jl
jmp
sahf
addb
mov
xchg
cli
sub
jecxz
and
repnz
rcrl
push
fldt
jb
data16
sbb
push
mov
mov
mov
and
stos
mov
jge
jge
dec
jecxz
call
lret
in
ret
outsl
jne
xor
mov
cmc
leave
shll
inc
or
xor
push
sbb
leave
addb
xor
mov
mov
repnz
ret
xchg
out
cltd
orb
fs
xchg
repz
and
push
cmp
push
push
call
or
push
sti
sbb
cwtl
lock
repnz
addl
push
orb
sbb
sti
jae
dec
iret
or
cs
xchg
adc
outsb
mov
push
les
push
sbb
movb
jno
adc
cmp
mov
push
cltd
jl
das
xor
pop
mov
scas
repnz
fimull
sub
xchg
mov
add
jecxz
rorb
cli
shrl
jle
push
jo
adc
fcomi
test
sub
mov
int3
inc
dec
push
and
cmp
je
gs
pminsw
adc
mov
outsl
mov
es
mov
movsl
and
std
ret
into
call
ljmp
xchg
jb
fs
mov
push
outsl
mov
or
sub
call
dec
xor
jg
lret
sub
ret
fisubrl
lds
push
repnz
shl
in
push
pop
push
pop
jle
jg
and
dec
aas
dec
add
push
fldl
aas
mov
jne
sbb
lcall
cmp
jge
and
sbb
test
dec
cmp
or
addb
popa
js
int3
sub
test
aad
ret
addr16
add
mov
sbb
or
mov
mov
mov
mov
sub
adc
inc
stos
mov
xor
adc
sbb
insl
call
mov
jle
loop
inc
mul
sub
inc
sub
adc
out
testl
out
lods
and
jmp
pop
addl
push
push
stc
loop
jecxz
mov
or
and
cwtl
sub
push
subb
and
fs
pop
popa
sub
push
repz
and
and
push
call
sub
imul
sbb
pop
aam
clc
popa
or
push
pop
sbb
mov
and
mov
lret
sbb
inc
jmp
or
enter
cmp
fdivs
mov
jecxz
loopne
pop
mov
sub
cmp
daa
push
lds
jnp
jmp
push
lods
bound
or
inc
pop
std
sbb
test
xchg
add
outsb
sbb
lcall
or
ljmp
sbb
cmp
add
jnp
fs
addb
bnd
ds
repz
imul
and
jg
mov
sbb
cmp
sbb
outsl
xchg
cs
mov
push
xlat
push
push
or
out
jecxz
jo
adc
sbb
lcall
test
mov
repz
dec
jle
push
aam
stos
ja
and
push
mov
sbb
xor
lock
mov
aad
test
dec
dec
fsubl
mov
and
sbb
inc
jbe
cld
cmp
pusha
test
movsl
add
add
lahf
adc
add
nop
pop
push
push
jb
js
xchg
xor
aad
xchg
sub
scas
loopne
cli
fisubl
test
rolb
sbb
sub
pop
xchg
dec
scas
jmp
lods
push
stos
icebp
jns
mov
loop
mov
sbb
adc
and
outsb
repnz
inc
dec
popf
lret
mov
push
ds
cs
sbb
xchg
jmp
lods
out
or
add
mov
ds
jnp
push
cwtl
xor
cwtl
std
jb
mov
jge
pop
lcall
ret
cmc
fsubl
enter
sbb
lea
mov
sub
mov
xchg
mov
jbe
cmpsl
mov
cmpsl
fistpll
pop
fildl
add
stc
ljmp
cmp
and
cmp
xchg
in
sub
loop
mov
in
mov
pop
sbb
loop
sti
inc
insl
jg
pop
jb
push
sub
ss
mov
scas
movsl
das
mov
aas
testb
lret
repnz
repz
inc
sub
jl
xlat
cmpl
xlat
push
dec
ss
and
mov
mov
leave
std
jecxz
sahf
sub
add
nop
pop
scas
add
imul
lahf
mov
or
inc
sub
dec
ljmp
push
lods
push
inc
xor
or
jecxz
test
mov
or
xchg
loopne
dec
mov
xchg
pusha
scas
sub
pop
outsl
sub
xchg
sub
out
push
push
sarl
push
jl
mov
gs
xchg
lds
sub
and
movsb
mov
inc
xor
subb
lods
clc
dec
das
in
push
out
mov
xchg
push
mov
mov
test
pop
jl
addr16
inc
loopne
je
xor
mov
mov
and
xor
test
inc
or
pop
les
icebp
xchg
repz
jecxz
dec
mov
test
cmc
mov
push
int
adc
jecxz
inc
repnz
lcall
dec
or
in
cs
movb
sbb
ljmp
dec
jl
xchg
sub
daa
dec
and
ljmp
cs
sbb
cmp
stc
add
push
dec
call
and
loop
adc
cmp
cmp
jge
mov
aam
sub
inc
mov
push
sbb
imul
out
repnz
mov
lea
xchg
add
adc
mov
or
sub
cmp
adc
cmp
push
test
test
stc
int
cmp
and
mov
jl,pt
push
and
in
repz
aad
fs
incl
std
and
pop
aas
xor
call
pusha
mov
add
imul
and
mov
mov
add
sub
adc
test
adc
cmpl
jae
jnp
adc
lret
xlat
adc
lds
aam
mov
or
rcrl
addr16
mov
es
decb
jbe
iret
inc
cmp
or
cmpsl
ds
add
notl
mov
movsl
xchg
lcall
xchg
pop
push
idivl
and
sbb
mov
or
cld
adc
sub
cmp
mov
dec
jb
mov
add
icebp
mov
data16
ljmp
roll
popa
pop
mov
fbstp
add
push
adc
cmpsl
or
cmp
and
sub
dec
hlt
popa
fnstenv
addb
cmp
and
mov
dec
xchg
mov
negl
mov
fdivrs
mov
adc
cltd
jl
test
or
cwtl
or
pop
xchg
inc
fwait
ss
sub
clc
test
jb
lcall
out
ljmp
sub
stos
repnz
xchg
xchg
fisttps
popa
adc
push
lds
lcall
xchg
imul
mov
dec
sub
inc
pop
push
shrb
lock
dec
fidivl
fisubrl
sbb
imull
adc
xor
data16
stc
xchg
push
sbb
lods
jecxz
jl
popa
in
sbb
in
pop
mov
gs
imul
cmp
cmp
negl
out
dec
mov
xlat
repnz
xor
inc
mov
pop
in
shll
js
or
cld
adc
lcall
jne
sbb
mov
js
add
lods
push
jb
xor
popa
cli
xchg
pop
ret
nopl
push
imul
add
inc
inc
nop
lock
test
xor
clc
sbb
js
in
popa
and
push
xchg
mov
mov
inc
repnz
fnstcw
sbb
push
xchg
gs
repnz
or
mov
and
ljmp
mov
inc
enter
mov
lds
jecxz
and
leave
inc
adc
lahf
imul
or
adc
aaa
and
jnp
mov
ljmp
cmp
arpl
std
dec
pop
xchg
mov
movsb
dec
jge
ret
dec
adc
xchg
js
iret
loop
or
sbb
jne
inc
ljmp
mov
adc
and
fnstcw
test
and
and
or
stos
ds
ret
fsubrs
repnz
sbb
sahf
push
mov
and
sub
mov
daa
dec
and
loop
and
movsb
mov
pop
cwtl
call
mov
inc
jp
adc
and
add
call
push
ljmp
repnz
xorl
icebp
ljmp
repnz
scas
gs
or
das
cs
insl
pop
outsl
dec
clc
or
sbb
loop
pop
cmp
and
adc
lds
add
or
or
mov
movsb
cmp
push
xchg
pop
in
pop
pop
xorl
or
icebp
ja
xchg
es
adc
mov
scas
push
and
pop
je
ljmp
or
lods
sti
and
mov
pop
add
pop
cmp
adc
fcoml
xor
sti
je
or
fs
sarb
sub
xchg
push
in
mov
inc
cs
push
xchg
imul
mov
loopne
call
mov
pop
sub
mov
dec
or
cli
sub
in
and
lods
call
movsb
sbb
lcall
push
mov
clc
int3
xchg
loope
mov
sub
mov
xor
inc
mov
push
jo
adc
dec
sbb
mov
jge
fs
lock
mov
es
and
js
xchg
mov
es
int3
imul
ljmp
ljmp
xchg
xchg
insl
int3
mov
mov
repz
push
xor
jb
call
sbb
mov
push
leave
cmpsb
mov
outsl
imul
inc
push
out
movsb
mov
sahf
loopne
or
popf
fs
jns
hlt
cmp
mov
sahf
lret
mov
out
and
pop
out
mov
sub
cltd
adc
jle
xchg
lds
repnz
or
pop
mov
inc
aam
mov
mov
aas
jmp
or
mov
inc
sub
and
pop
cltd
xchg
pop
pop
sbb
or
and
int
jb
inc
in
sbb
mov
and
leave
lret
rorb
test
push
lahf
call
ss
xchg
mov
add
cmp
je
push
sarl
dec
sub
mov
adc
add
ds
mov
clc
add
aad
xchg
or
aas
and
aam
mov
cmp
sub
inc
orb
jl
jmp
rol
mov
mov
push
xorb
jge
xchg
jg
mov
dec
loope
xchg
xchg
enter
sbbb
repnz
adc
cmp
inc
push
pop
dec
dec
int
dec
and
mov
sti
cmp
sbb
pusha
stc
push
and
adc
test
or
in
push
mov
sbb
jle
adc
popa
iret
sub
rep
popf
and
pop
mov
in
decb
aam
or
decl
lock
movsb
cltd
inc
out
test
sub
out
fucomip
lret
rolb
and
in
ror
jl
in
testb
jp
push
or
sarb
clc
mov
adc
pop
mov
xchg
repnz
pop
mov
pop
imul
dec
test
sbb
inc
movsb
sub
cmp
ja
loop
movsb
cmp
pop
hlt
mov
and
lea
sub
ljmp
jo
inc
lods
stos
jp
dec
movl
inc
xchg
loope
xor
outsb
mov
fcmovnu
and
sub
xchg
adc
and
pushf
pop
mov
lret
pusha
jle
lods
inc
mov
test
sub
push
fldenv
or
xlat
push
ret
inc
addr16
rclb
gs
xchg
xchg
fdivrs
popf
xchg
lods
movsb
push
out
lods
inc
clc
dec
jnp
dec
lods
dec
jo
test
push
push
stos
pop
call
leave
sub
sbb
cmpsb
jae
jmp
xchg
and
fisttpll
push
in
repnz
push
aad
lret
rolb
cmp
sti
mov
ljmp
sbb
mov
in
xor
out
jmp
add
loope
hlt
cmp
imul
cltd
addr16
pop
fmuls
lea
js
movsl
xor
xchg
and
lods
mov
push
fsub
mov
mov
out
mov
lock
xlat
pop
inc
mov
mov
stos
push
cli
and
mov
sbb
mov
rcll
idivl
sub
push
popf
sti
clc
ljmp
rcl
sbb
pop
mov
jecxz
mov
or
mov
addl
inc
adc
sbb
lock
scas
lods
add
movsl
pop
js
fistl
in
inc
mov
enter
fs
cmpsb
xchg
push
movsb
mov
jl
std
sti
and
cmp
adc
adc
rcrb
fstps
push
jns
sub
or
mov
xchg
mov
push
orb
mov
incb
push
inc
adc
mov
cmp
cld
push
jg
insl
lret
jmp
jecxz
insb
ljmp
stos
xor
subl
mov
mov
ret
jae
xchg
dec
pop
out
insl
mull
ror
iret
ret
cltd
addb
sbb
sbb
rcr
inc
mov
int
jo
test
add
shlb
sub
xor
adc
xchg
xlat
jnp
cmpsb
mov
or
orb
mov
mov
rclb
inc
loopne
sahf
rolb
pop
jge
push
or
add
rcrl
push
sbb
into
or
pop
cli
mov
or
push
dec
xchg
add
jg
and
mov
and
jge
add
mov
and
inc
test
repz
jg
dec
daa
sbb
cmp
rcrb
lret
arpl
enter
cld
jle
inc
mov
fwait
dec
out
xor
imul
lock
dec
sub
add
leave
repnz
adc
loope
sbb
icebp
punpckhdq
or
sbb
cmp
ret
int3
icebp
sub
sahf
cli
ljmp
ja
aas
fwait
sub
ficoms
repnz
cmp
gs
popf
jg
sub
xor
aam
and
int3
push
test
pop
ds
or
scas
xchg
arpl
cmp
imul
push
daa
repnz
cmpsl
dec
or
icebp
and
outsb
push
fidivl
lret
or
jbe
jmp
sbb
pop
push
fs
lcall
sub
mov
pusha
in
or
lret
loope
cmp
enter
pop
pusha
add
bound
mov
jle
xor
mov
lock
arpl
mov
jg
ds
daa
pushf
xor
aaa
pusha
test
cmp
pusha
ljmp
fs
add
xchg
jmp
pusha
dec
insl
pop
jge
mov
call
mov
data16
push
ljmp
dec
cmc
aaa
cmp
loope
out
call
lea
cld
movsb
cmp
xchg
mov
jmp
sub
shll
fs
js
cmp
lock
inc
inc
sub
rcrl
push
dec
loope
fmul
bound
imul
jo
lret
rorl
xor
push
sbb
sbbl
aad
mov
pop
sbb
sbb
insb
into
and
jecxz
test
add
sub
in
lea
out
mov
mov
shll
adc
nop
pop
cld
mov
xlat
cmp
ja
mov
js
repnz
mov
rclb
sti
mov
out
sahf
insb
inc
mov
imul
and
cmp
jle
fsubr
jb
das
jecxz
xchg
rcrb
dec
xor
stc
pusha
and
ficompl
cmc
mov
jne
test
pusha
ror
call
std
scas
sub
and
sub
lods
push
rclb
pop
mov
or
sbb
cmp
jge
and
imul
mov
cmp
fidivl
xchg
pop
cld
loope
shrl
and
mov
lahf
gs
sub
mov
jecxz
scas
lret
mov
xchg
and
adc
mov
mov
in
fistl
aas
cmp
fidivrs
xchg
das
sbb
mov
pop
outsb
sub
shrb
mov
dec
inc
xlat
imul
cld
jne
in
js
sub
in
into
jecxz
hlt
mov
pop
test
jecxz
mov
push
lret
insb
mov
mov
loope
mov
jecxz
adc
in
lods
es
outsb
js
jle
lds
and
rolb
repnz
les
iret
or
daa
xchg
sbb
sahf
pop
adc
xchg
ret
push
adc
sub
jle
pop
inc
sub
xchg
adc
mov
cmpsl
mov
call
fisttps
adc
adc
scas
mov
sub
loopne
jmp
mov
xor
out
ficompl
mov
movsb
mov
cmp
mov
arpl
ja
push
push
cmpsl
jmp
or
and
shlb
rcrb
test
adc
inc
faddl
lock
cmp
cmp
std
pop
xor
cmp
or
aad
and
xorb
sbb
mov
dec
jbe
jae
loope
pop
xchg
int
mov
and
push
jbe
out
add
bnd
loope
adc
mov
movsl
or
sbb
pusha
popa
mul
ds
xchg
imul
mov
pop
les
and
fcmove
sub
dec
pop
xchg
cmpsb
js
jg
sti
testl
or
out
push
sbb
das
popf
jmp
dec
insl
sub
filds
adc
cmpl
adc
xor
and
cwtl
sahf
mov
or
add
sbb
and
jle
addr16
mov
and
out
dec
cli
adc
clc
insl
cmp
or
mov
mov
ret
mov
jecxz
or
iret
jl
or
xor
daa
adc
mov
sub
xor
jge
push
repz
rorb
push
jge
xchg
repnz
fwait
out
into
xchg
jecxz
ficompl
fs
loopne
lods
out
cltd
and
ret
adc
cli
add
ds
dec
jae
cmp
cmp
mov
pop
adc
in
rcr
leave
int3
ja
push
jmp
pop
mov
sub
cmp
mov
inc
fdivrs
cmp
into
sti
mov
cmpsl
inc
addr16
into
cmp
jg
push
and
adc
adc
xor
sub
inc
xchg
pushf
mov
jle
pop
call
add
outsb
data16
nop
or
push
xchg
setp
aas
aad
mov
divb
cmp
je
sub
pop
outsb
aas
xor
call
stos
or
notb
mov
je
adc
cmpsl
cli
insb
sub
stc
push
inc
inc
outsb
cmp
aaa
jg
in
adc
mov
adc
xor
jge
cwtl
jge
mov
cmp
push
dec
and
test
jmp
inc
jbe
or
push
cmpsl
daa
rcrb
inc
loop
push
insl
or
out
loop
aas
outsb
std
or
cli
enter
ljmp
sbb
daa
daa
scas
push
push
std
mov
cmp
enter
sarl
mov
pusha
test
or
add
add
add
shlb
jp
jecxz
cmp
pop
mov
in
js
mov
cmpsb
push
outsb
jmp
leave
add
repnz
add
mov
fnstcw
sub
mov
cld
push
push
fwait
lock
lret
sbb
adc
add
pop
cmp
cltd
repnz
or
scas
pop
dec
out
test
loope
dec
pushf
sub
jl
fcmove
cltd
cltd
out
imul
xchg
test
call
int
mov
dec
fs
or
insb
lods
ret
and
jl
repnz
scas
imull
aam
mov
fsubrs
adc
repz
sti
and
pop
and
stc
out
cmp
stos
push
push
push
mov
pop
and
sbb
repnz
inc
adcb
test
xchg
out
lock
mov
or
fcmovbe
jecxz
or
nop
mov
cwtl
and
sub
ret
inc
sbbb
jge
lods
mov
popf
sub
subb
in
test
ret
call
cld
xchg
clc
push
sbb
iret
jl
sbb
nop
subb
andl
push
lret
cli
add
outsl
ljmp
mov
lods
into
mov
pop
adc
sbb
jge
sbb
aaa
nop
jno
push
adc
gs
adc
pop
and
pop
push
push
aaa
push
les
repz
jae
mov
lret
xlat
xchg
add
pop
jle
test
and
mov
loope
mov
pusha
test
call
lret
xlat
mov
sbb
dec
sbb
decb
sahf
nop
in
lea
enter
test
jae
sub
repnz
stos
mov
cmp
ja
stc
test
add
add
and
inc
lret
mov
sbb
js
dec
stc
cmp
push
andb
aam
cmpsb
sti
rolb
add
add
jbe
sbb
sbb
mov
js
dec
mov
std
daa
bnd
xor
push
sbb
cli
daa
and
into
cwtl
pop
dec
pusha
adc
repnz
std
loope
add
lret
pop
pop
ds
call
fs
sub
push
cwtl
ljmp
outsb
cmpsl
pop
fistps
fs
clc
cmpb
sbb
push
shrl
inc
test
push
pop
movsb
imul
into
fstpt
jae
clc
notl
sub
ret
pop
scas
inc
xlat
or
repnz
sarl
xchg
mov
imul
adc
int
mov
into
into
mov
push
repnz
xchg
sub
and
sbb
popa
add
nop
mov
dec
sbbb
cltd
test
mov
imul
fld
xchg
sub
pop
fwait
lret
sbb
adc
mov
repnz
xor
call
lret
cltd
cld
add
mov
dec
in
test
or
popf
iret
xchg
stos
inc
jecxz
cmp
in
and
incb
fldcw
lods
jecxz
or
mov
mov
out
jg
inc
ss
push
mov
stos
pop
call
push
fistl
jae
aas
jbe
pop
xchg
popa
fcoml
inc
pop
and
xlat
inc
mov
dec
jp
xlat
and
inc
sub
mov
and
hlt
arpl
mov
lods
bound
inc
out
xchg
addr16
lea
pop
mov
push
clc
jg
and
sbb
in
lcall
add
outsb
push
int
pop
lret
packssdw
cld
clc
test
jg
fists
xchg
jle
ja
repnz
add
xchg
mov
mov
add
dec
popa
adc
leave
test
xlat
adc
adc
xchg
aam
add
xor
movsb
repnz
rorb
mov
test
cmp
shr
mov
mov
out
xchg
hlt
test
jl
lods
mov
test
outsb
es
fwait
mov
sti
adc
repz
sti
lds
mov
aad
xchg
pop
jle
or
mov
adc
cmp
in
pop
push
out
pop
mov
adc
push
stc
out
xchg
jae
push
mov
test
mov
mov
mov
xor
pop
xor
adc
movsb
and
test
jge
inc
add
inc
shll
jbe
sbb
mov
cltd
add
sub
testl
int3
jo
imul
test
fiadds
ja
lds
and
push
scas
fisubl
sub
ficoms
sbb
popa
cli
or
push
dec
testb
mov
rclb
cltd
jle
arpl
es
inc
aam
sbb
add
mov
bnd
push
pop
mov
push
in
jecxz
aas
nop
sbb
jecxz
jp
repnz
inc
lret
je
adc
daa
fsubrl
xchg
std
add
aaa
sbb
lea
xchg
negb
stos
sarl
cmp
sbb
into
mov
or
std
idivb
pusha
or
in
mov
adc
mov
pushf
pop
sub
push
repnz
sub
xchg
sbb
cmpsl
add
mov
sbb
dec
jbe
dec
pop
and
out
dec
jge
or
mov
sub
test
add
jle
mov
shrl
and
sub
pushf
outsb
rclb
push
jbe
sbb
es
jns
popa
movsl
leave
xor
or
push
jo
and
push
mov
mov
hlt
mov
daa
test
mov
ret
stos
jae
sub
cmp
jle
adc
sub
push
dec
insb
push
xchg
sub
mov
mov
cmp
aaa
fs
test
sbbl
icebp
cld
lock
add
repnz
sahf
ret
aam
jbe
in
outsb
in
lock
fldenv
jl
sbb
xchg
xor
jecxz
addr16
xor
dec
jnp
mov
ret
int3
mov
jo
into
lahf
pop
sub
dec
sahf
and
inc
shr
inc
xlat
dec
lea
ficoml
das
ja
dec
mov
dec
inc
das
arpl
retw
xchg
jbe
push
repnz
aam
icebp
es
sub
jecxz
lret
pop
xchg
push
or
sub
push
mov
lds
sub
repnz
xlat
sbb
dec
movsb
ret
xor
add
adc
nop
lds
scas
and
pop
jnp
cmp
scas
mov
scas
cmp
pop
call
dec
out
mov
inc
stc
dec
or
adc
mov
xchg
leave
push
sbb
ds
add
mov
xchg
pusha
frstor
outsb
outsl
stc
adc
es
mov
loope
fwait
scas
fisubrl
adc
mov
mov
mov
iret
daa
adc
rorl
iret
fwait
pop
cwtl
in
sbb
xor
pop
lcall
or
jmp
mov
adc
push
in
adc
xchg
mov
mov
xchg
dec
in
push
cltd
out
jo
and
cmp
pop
and
cmp
mov
loop
je
imul
pop
popf
lods
outsl
mov
adc
push
jmp
xor
or
mov
dec
inc
repnz
lahf
daa
push
sub
in
mov
mov
jnp
mov
and
xchg
sub
idivb
out
popa
jecxz
pop
xchg
outsb
xor
repnz
push
fwait
mov
inc
shr
ret
push
mov
out
outsb
or
mov
and
mov
ficoms
loopne
cli
jmp
loope
pop
mov
sub
bound
sbb
je
sub
ds
shrl
mov
clc
mov
popa
push
jnp
add
sub
movsb
xchg
out
mov
jecxz
je
bnd
adc
stos
repz
pop
cli
adc
out
cmp
mov
xor
or
sbb
ja
imul
jo
and
test
lcall
mov
inc
mov
daa
dec
mov
enter
roll
dec
cmp
out
fdivrl
jp
aam
movsb
mov
in
pop
leave
jbe
jge
push
and
mov
sub
jmp
or
loope
popl
push
sbb
call
icebp
jmp
mov
cmpsl
mov
test
mov
cwtl
dec
lods
repz
or
mov
lds
jl
pop
cmpsl
mov
xchg
into
aas
ret
test
aad
sbb
mov
arpl
arpl
outsb
rol
outsb
jp
pop
popf
test
outsb
adc
inc
mov
aas
decb
shll
insl
sub
mov
xchg
ljmp
test
inc
cmp
cmpsl
repnz
add
int
nop
cs
out
in
adc
cmpb
xchg
sbb
xchg
shlb
pop
jp
sbb
test
loope
pusha
sbb
lahf
addr16
inc
jno
inc
lea
fidivs
cltd
cltd
mov
jo
sbb
fiaddl
mov
aaa
dec
data16
js
sub
popa
push
mov
stc
adc
and
sub
cwtl
sub
and
out
sub
xchg
ljmp
fnstsw
das
inc
inc
xor
lret
fistpll
and
insb
cmpsl
movsl
mov
fsubrs
push
lock
sbb
jle,pn
fldl
bnd
daa
cli
dec
and
adc
rclb
imul
and
add
inc
mov
subl
adc
repnz
ljmp
cltd
cwtl
repnz
mov
clc
or
jle
or
or
xchg
mov
mov
gs
mov
pop
dec
int
xor
pop
lcall
push
negb
popf
rcll
add
jl
orl
clc
std
lcall
dec
div
decl
insb
inc
ficomps
jmp
mov
xor
sbb
enter
iret
add
adc
mov
xchg
fcoml
dec
nop
scas
sbb
pop
lcall
adc
js
sbb
mov
imul
jecxz
aam
and
push
push
jmp
ss
mov
sbb
pusha
add
cmp
cwtl
pusha
fwait
jns
insb
pop
fwait
mov
push
jle
sti
testb
add
ficomps
pop
js
jp
outsb
les
mov
and
bound
je
sti
fisttpll
mov
in
lcall
lods
bound
mov
sub
xchg
jmp
mov
xor
mov
mov
lret
inc
mov
add
jmp
mov
aaa
adc
cli
inc
sbb
jno
adc
loope
and
add
lret
das
adc
es
sub
mov
and
jmp
test
fsub
xchg
mov
mov
leave
iret
shl
or
ja
pop
mov
ljmp
sahf
sti
scas
xchg
hlt
into
sub
fbld
cmc
cmp
push
jp
add
rorb
mov
push
fs
cmp
fs
mov
push
mov
frstor
jno
push
sub
lret
in
push
sub
in
sub
dec
repnz
jecxz
cmp
and
jle
dec
repnz
jl
nop
movsb
adc
add
or
out
orl
mov
roll
jg
push
xor
aaa
xchg
ret
insl
lret
sbb
add
call
repnz
sbb
fsubrs
inc
sub
inc
ljmp
rcll
xchg
cmp
inc
movsl
in
xor
cld
orb
mov
imul
je
fimuls
cmp
and
movsb
cmpsl
nop
fdivr
or
sub
xchg
ret
push
and
add
mov
hlt
repnz
gs
mov
dec
sbb
aam
loopne
cmp
popf
clc
adc
xchg
sub
ja
cmp
cli
jp
push
data16
mov
jge
jae
mov
lret
loop
add
in
xchg
sar
mov
jmp
push
enter
ret
std
mov
nop
sub
jb
mov
popa
pop
ficompl
gs
inc
mul
int3
dec
inc
movsl
or
xchg
repnz
jg
pop
into
push
incb
sbb
test
cltd
jno
adc
mov
in
cmp
sbb
push
mov
jmp
rcl
cmp
aad
xchg
sub
push
ret
xchg
sti
dec
outsb
xchg
or
cli
or
fs
push
mov
es
or
lods
daa
stc
jmp
and
adc
or
dec
movsb
sub
in
mov
push
xlat
add
icebp
jns
dec
dec
loope
mov
pop
fiaddl
mov
pushf
lret
mov
jmp
cmp
pop
jmp
or
in
jnp
test
and
mov
and
sbb
enter
xchg
push
inc
sbb
js
hlt
pop
mov
adc
dec
sub
mov
popa
mov
jecxz
dec
inc
js
xor
add
cmc
xchg
aaa
fldl
je
cmpsl
jp
ss
add
scas
or
ds
push
pop
aaa
push
jnp
pop
pop
add
out
jnp
mov
add
sub
aas
inc
add
lods
repnz
mov
sahf
jo
inc
mov
pop
mov
dec
push
mov
mov
mov
and
rcrl
loopne
shll
movsl
jle
xchg
rcrb
cmpsl
mov
dec
adc
inc
adc
jecxz
or
movsl
pop
in
push
inc
cmp
aam
jnp
push
cwtl
mov
repnz
mov
push
xor
stos
adc
arpl
push
lcall
jecxz
ja
es
pop
push
and
scas
and
or
inc
lcall
ljmp
in
mov
sbb
ljmp
scas
in
stos
push
push
mov
sbb
mov
and
pop
dec
rol
icebp
jo
sub
cs
sbb
lds
mov
ljmp
das
cmp
ret
push
dec
and
scas
push
mov
and
and
mov
test
loopne
pop
out
in
adc
or
pusha
cltd
xor
int
adc
jecxz
fidivs
adc
push
mov
and
test
test
lret
insl
inc
aam
mov
xchg
add
mov
sbb
inc
ret
push
jl
push
mov
sub
mov
sub
outsb
jmp
push
push
push
repnz
stos
sbb
pop
inc
leave
xchg
icebp
ss
outsl
data16
adcb
push
jno
xchg
cmpsl
xchg
ljmp
adc
mov
sub
shr
aam
push
sbb
sub
xchg
dec
aas
dec
repz
xor
arpl
nop
cmp
int
fisttpl
adc
out
adc
push
loope
repz
jecxz
aam
sahf
int3
pop
addr16
hlt
cmpb
add
or
loope
int3
mov
sub
adc
aaa
and
adcb
scas
push
pop
stc
mov
outsl
aaa
cmp
mov
xchg
and
out
ja
adc
rcll
sub
add
out
pop
xlat
nop
dec
cmpsb
mov
sub
jg
ja
adc
stos
out
jns
ss
pop
xchg
dec
mov
inc
push
xor
jl
xchg
pop
dec
pop
lret
in
or
and
add
mov
push
lds
outsl
and
cmp
cmpsl
aad
and
xor
loope
rorb
mov
adc
xchg
jae
outsb
test
cld
mov
outsb
pop
adc
insl
scas
imull
pop
xor
stc
and
inc
jno
fs
xchg
adc
add
movsb
lret
mov
add
imul
sub
cltd
imul
fstpl
jp
push
loop
adc
idivb
aad
outsl
push
jecxz
test
pop
ret
dec
loop
in
movsb
pop
and
and
jmp
sbb
dec
callw
jns
loope
push
enter
into
mov
xor
jo
pop
daa
sub
mov
pop
addr16
add
xchg
pushf
or
pop
sbb
pusha
push
cmp
push
je
add
test
jge
int
push
cld
inc
std
and
outsl
push
lret
sbb
xor
jne
or
sbb
call
push
popa
ret
sbb
add
push
data16
sub
cmp
inc
xlat
xor
call
out
jle
sub
inc
cmp
pop
fiaddl
repnz
adc
inc
loop
mov
testl
hlt
cmpsl
pop
push
ds
loope
insb
push
fimull
testb
cmpsl
ds
mov
orl
daa
icebp
mov
pop
or
jno
sub
aas
cltd
cmpsb
lods
lret
jbe,pn
pushf
idivb
dec
pop
cmpsl
xor
inc
inc
mov
repnz
aaa
sbb
aam
test
or
jecxz
ret
insl
or
xor
test
ret
push
pop
call
stos
testl
cwtl
je
int
in
fsubrl
and
pop
mov
mov
lea
call
cmpsl
dec
sbb
insb
movsb
mov
mov
adcb
rcll
ds
push
sub
sub
adc
dec
outsb
mov
xchg
leave
mov
jmp
hlt
pop
mov
inc
repnz
decb
test
add
sbb
mov
mov
insl
scas
push
push
imul
stos
sbbl
andb
je
or
jo
mov
iret
nop
xchg
pusha
xrelease
sti
lock
mov
dec
pushl
xchg
inc
push
push
test
jb
xor
jl
mov
jmp
xor
icebp
inc
cmpsb
repnz
in
aam
je
cltd
pop
stc
cmp
sbb
repz
and
repnz
aad
inc
cltd
jb
mov
in
add
insl
pop
xchg
iret
and
xchg
addb
pop
enter
xchg
and
cmp
xor
push
cltd
cwtl
in
outsl
mov
loopne
dec
insb
ret
imul
and
mov
pop
ljmp
repnz
add
fsubrs
sub
dec
sbb
and
in
jecxz
xchg
into
jne
xchg
cmpsb
dec
mov
cmpsb
dec
jb
insb
lret
mov
jns
test
aam
mov
add
mov
mov
xchg
jle
xchg
lcall
jp
mov
mov
inc
addr16
shll
push
mov
push
mov
sub
out
daa
repnz
fidivl
jns
mov
sub
pop
repnz
cs
ljmp
pop
les
js
hlt
arpl
subl
imul
dec
inc
daa
pop
mov
add
repnz
inc
popf
nop
daa
jbe
push
stos
adc
int3
sbb
andl
inc
dec
call
and
scas
and
and
test
mov
cmp
cmp
dec
cmpsl
subl
scas
and
test
mov
aad
das
xchg
adc
push
add
repz
push
lret
sub
inc
out
hlt
rolb
push
out
add
outsl
rcrl
lret
dec
adc
dec
mov
fidivrl
ja
inc
nop
add
fcoms
data16
ds
mov
fucomp
out
mov
jmp
mov
push
mov
mov
jle
jecxz
adc
lock
and
cmp
cmp
test
ljmp
xchg
lods
add
and
imul
xchg
mov
inc
fld
push
fldt
pop
mov
pop
jg
jecxz
pop
sti
cmp
cmp
adc
mov
fwait
pop
stos
leave
push
mov
jecxz
dec
ljmp
jnp
jle
push
push
repz
cmp
push
jo
movsb
mov
cmp
and
push
out
mov
addb
push
ljmp
sub
dec
enter
jb
and
jecxz
pop
sti
mov
mov
or
cwtl
mov
aas
out
pop
aas
int3
sub
sahf
adc
jmp
xchg
sub
mov
ljmp
cmpsl
fs
xchg
test
mov
xor
adc
sbb
push
sub
cli
pop
test
sub
lds
test
push
sub
dec
mov
adc
sbb
cs
sub
popa
push
mov
or
stos
cmp
jno
icebp
cltd
and
stos
aad
mov
lods
xchg
mov
pop
orl
adc
jo
jle
movsl
sahf
sub
mov
fiaddl
sahf
push
movsb
fsts
fcmovne
and
int
push
push
mov
cmc
jb
mov
xor
ficomps
or
insb
imul
addr16
incl
das
in
repnz
faddl
push
mov
or
andb
inc
in
or
icebp
outsl
or
insl
fnstcw
stos
mov
xchg
pop
mov
test
pop
hlt
test
testb
fwait
mov
call
iret
and
mov
movsl
xchg
sub
repz
es
test
daa
mov
out
pop
or
iret
add
dec
bound
pop
push
sbb
test
sarl
inc
mov
cwtl
or
call
sbb
jge
mov
xor
dec
stos
mov
add
insb
sbb
jle
xor
mov
sub
test
sub
je
fs
pop
sbb
test
mov
push
adc
mov
pop
dec
jns
fs
ja
or
and
sbb
dec
stos
stos
push
sbb
fstpl
out
addb
jp
mov
sti
loop
xchg
mov
push
mov
pop
call
jmp
push
das
push
inc
xor
xchg
pop
decb
ljmp
xchg
mov
adc
cmc
xor
or
mov
xchg
inc
and
add
je
in
jecxz
loop
and
into
test
data16
sub
jmp
mov
hlt
aam
jge
pusha
out
out
jmp
stos
mov
inc
jmp
mov
jl
add
mov
or
clc
sub
loopne
sub
repnz
pusha
inc
pop
dec
pop
mov
lret
or
bound
mov
xchg
repnz
sub
adc
cmp
lods
xlat
sub
sub
and
push
mov
daa
cmp
addr16
fucomip
adc
inc
movsb
jns
cmpsb
jmp
lock
out
ja
ja
sub
sbb
pop
adc
mov
sub
mov
stos
cmp
fldt
icebp
and
sti
ds
int
pop
adc
lods
adc
mov
mov
cli
xchg
sub
adc
mov
fcomps
push
ds
dec
enter
push
and
in
fistl
popa
ret
lret
mov
and
mov
movsb
push
xor
fidivl
cmpsl
repnz
inc
mov
mov
fs
inc
dec
je
or
pop
push
lods
push
jbe
movsb
mov
add
jecxz
jge
xor
jg
pop
out
mov
fstpl
dec
push
cmp
inc
sub
jne
adc
call
pop
xchg
add
bnd
pop
or
mulb
rorl
mov
addr16
and
das
jl
sub
ja
fcmovbe
jecxz
adc
fistpl
cmp
lcall
shrb
dec
push
adc
adc
mov
aad
adc
loope
movsl
jo
push
or
xchg
stos
add
jns
or
lea
mov
dec
add
out
addr16
xlat
xchg
hlt
sub
add
adc
cmc
jl
mov
rcll
clc
fs
scas
and
sbb
pop
adc
mov
bound
popa
aam
adc
jl
xchg
test
dec
dec
test
pop
lcall
xchg
xchg
fimull
mov
movsb
sub
or
leave
in
mov
sbb
adc
js
repnz
sub
mov
pop
pop
pushaw
sub
clc
cmp
sbb
sti
rcr
jle
xlat
outsb
negb
inc
ficoml
xlat
cmpsb
stos
aaa
subb
lods
call
ret
out
or
jecxz
ret
lods
js
repnz
andl
stos
jno
out
enter
iret
loope
lcall
or
decb
mov
jmp
jno
jno
sub
mulb
out
cmp
jns
mov
rclb
rclb
adc
xchg
and
pop
xchg
push
jns
cmpsl
mov
fdivrs
sbb
add
xchg
mov
cmp
mov
sbb
inc
ljmp
and
jg
cmp
jp
cltd
daa
sbb
test
sbb
jecxz
cmp
xchg
dec
jecxz
std
mov
aaa
mov
lods
mov
enter
fcmovnb
xchg
and
or
mov
nop
xchg
in
stos
aam
inc
cli
xorl
arpl
les
nop
push
cld
and
movsb
ret
mov
lret
or
xchg
push
cmp
sbb
scas
out
fnstenv
test
pop
fdivr
xchg
fdivr
jl
pop
add
cmp
sbb
sbb
fcomp
ret
outsl
and
xchg
stos
inc
xchg
and
pop
sbb
pop
movsl
cmp
repnz
in
and
pop
cld
inc
test
iret
int3
mov
push
mov
sub
aam
repnz
aaa
sbb
pop
sub
sbb
adc
add
test
test
pop
in
dec
insb
insb
mov
ror
cli
dec
pop
add
xor
adc
sbb
mov
jge
inc
outsl
adcb
mov
and
imul
jb
arpl
insb
std
scas
dec
int3
cmp
cmc
aam
loope
insb
cmp
shrl
pop
fdivrs
cmp
mov
dec
xchg
inc
mov
jge
inc
push
xor
repnz
dec
sbb
mov
xchg
fwait
sbb
mov
arpl
jnp
add
sub
push
pop
jae
pop
sub
xor
mov
adc
mov
mov
push
push
xchg
scas
dec
loopne
imull
add
push
add
ja
sbb
cmp
mov
xchg
cmc
enter
xchg
cld
shr
or
mov
lcall
sub
dec
loope
jmp
dec
pop
pop
loopne
aas
mov
int3
or
dec
or
push
cmp
push
inc
push
pop
cld
addr16
movb
ljmp
leave
cmc
int
test
mov
leave
or
xor
xchg
mov
dec
into
subl
scas
in
add
push
pop
addr16
call
xchg
mov
xchg
ds
dec
out
js
sbb
mov
outsb
cmp
cld
adc
jmp
jp
sub
jecxz
pop
fldcw
es
adc
jmp
push
test
sub
repnz
add
sub
dec
sbb
mov
adc
sbb
data16
out
mov
cmp
xor
ja
movsl
dec
dec
cld
pop
int
cwtl
rcl
stos
jge
scas
jle
jns,pt
pusha
cmpsl
mov
inc
cltd
adc
push
daa
mov
jmp
das
push
and
test
out
push
out
jns
xchg
add
add
out
stos
cmpsl
mov
sub
mov
das
pop
aaa
mov
mov
inc
sahf
repnz
pop
push
jecxz
test
test
lea
and
push
mov
ljmp
mov
aam
arpl
or
jecxz
jae
xchg
mov
jbe
add
cmp
sbb
lcall
test
fcoms
mov
push
je
push
rolb
pop
into
pop
dec
lret
jo
in
sbb
dec
lahf
repz
adc
test
popf
push
testl
sti
sub
jge
addr16
add
test
and
adc
repnz
mov
mov
mov
push
push
arpl
push
mov
test
pop
addr16
gs
fdivs
fcomps
inc
mov
scas
sub
fldt
cmp
xchg
dec
fwait
jns
xchg
adc
cs
sahf
sub
push
sub
ss
sub
cmp
mov
jl
dec
mov
add
jmp
xlat
lret
int3
daa
movsl
push
loopne
push
icebp
fs
arpl
stc
pop
in
push
jecxz
sub
repnz
adc
sahf
pop
cld
inc
push
mov
clc
call
and
arpl
scas
inc
cmpsb
xchg
cld
pop
out
mov
add
jbe
pop
push
sbb
sahf
cli
cmpsb
adc
into
fdivrs
loope
sub
cmp
nop
mov
cmpsl
adc
sahf
cltd
sbb
lret
sbbb
push
mov
inc
jnp
mov
sub
push
adc
arpl
scas
add
popf
or
addb
aad
jecxz
and
push
idivl
popa
movsb
imulb
lahf
int3
aam
sub
dec
fadd
mov
popa
sub
sub
jle
inc
sar
lret
mov
insb
dec
lea
mov
push
out
add
es
xchg
sub
loope
xchg
aam
pop
addr16
shrb
lcall
stc
adc
lret
mov
jmp
imul
stos
jmp
imul
push
xchg
outsl
lods
mov
out
ds
dec
cmp
push
enter
inc
xchg
and
inc
test
test
rcll
add
repz
sub
push
sub
push
push
mov
test
es
push
cli
jns
dec
test
std
pop
repnz
xchg
dec
sbb
dec
fxch
cmpsl
ljmp
dec
adc
add
mov
pop
in
inc
mov
and
lods
fwait
xchg
push
pop
xchg
sub
in
mov
add
jge
lret
jo
push
test
mov
test
loope
nop
push
movsb
orl
adc
and
call
push
fcoml
mov
xchg
out
pop
loope,pt
test
leave
imul
and
dec
popa
ret
adc
push
insb
cltd
adc
xor
dec
js
sbb
mov
pop
int
je
shl
xchg
and
push
jo
pop
fisubl
inc
sbb
aaa
daa
out
mov
cltd
inc
sbbl
decl
pop
dec
test
ja
lret
cli
mov
dec
ficomps
push
cmp
outsb
int3
sbb
loop
xor
add
xor
sub
sbb
sub
or
test
ret
dec
aad
sub
lods
push
or
push
xchg
out
aas
xor
or
cmc
ja
ja
jns
and
jne
jle
mov
adc
int3
out
push
adc
pop
cmpsl
les
ljmp
cmp
pop
dec
lds
ljmp
inc
test
mov
cld
mov
mov
inc
inc
je
and
xchg
test
les
pop
mov
mov
pop
test
mov
jecxz
xchg
lods
subb
cld
repnz
sub
xchg
and
loopne
inc
sbb
loopne
daa
cmp
sub
push
push
jl
mov
xchg
pop
or
pushf
xchg
pop
icebp
or
and
iret
les
jo
mov
popf
sub
xor
xchg
adc
insl
bound
jge
loopne
fdivr
bnd
stc
push
imul
push
clc
adc
addb
jle
imul
pushf
paddq
lcall
adc
adc
lret
push
xchg
jecxz
mov
sub
jle
cmpsl
into
and
bound
addl
std
ja
pop
push
or
pusha
daa
arpl
and
xor
xchg
xchg
xchg
cld
push
aas
jecxz
out
cmp
mov
add
adc
xchg
mov
and
stos
int3
push
pop
shll
test
jne
mov
cmc
out
daa
jl
out
jle
lea
jne
add
push
xchg
hlt
cs
pusha
int3
mov
pop
pop
repnz
call
daa
outsl
aaa
popa
stos
lock
mov
mov
xchg
push
fstpt
out
adc
mov
xlat
je
divl
fisubrl
pushf
repnz
movsl
mov
adc
mov
or
lret
push
das
dec
leave
push
or
lret
cmc
mov
mov
popa
add
or
ret
and
fsubrl
add
insb
enter
not
or
shlb
insl
mov
push
je
fs
insb
gs
xchg
aam
or
add
ljmp
dec
mov
xchg
add
in
repnz
xor
lcall
xlat
push
cmpsb
loope
adc
mov
sbb
push
push
mov
test
stos
or
adc
pop
adc
fcoms
in
sub
cld
cltd
out
fildll
push
movsb
aam
or
jo
cmp
and
pop
mov
and
in
inc
sarl
mov
sbb
inc
push
cmp
test
and
cmpsl
push
sbb
mov
sbb
in
add
stc
sbb
sub
mov
sub
xor
aaa
cmp
bound
shl
outsl
out
add
xchg
inc
aas
xchg
insl
xchg
add
aas
dec
and
and
in
jecxz
fcompl
rcr
ja
imull
cmp
sub
lahf
push
pushf
and
xor
call
flds
popa
adc
jns
je
sub
cs
mov
in
pop
dec
sub
pop
fs
cltd
add
out
test
jl
push
lret
lcall
pop
addr16
inc
jmp
jge
or
push
call
and
js
adc
push
jp
push
push
xchg
hlt
ds
cmp
mov
xor
adc
pop
int3
xor
jae
mov
aaa
scas
cmp
inc
scas
nop
add
sti
movsb
add
sbb
push
jle
sub
push
into
cmp
in
ret
sbb
inc
lret
fwait
mov
lret
test
xlat
pop
lret
cltd
push
jl
nop
ret
sub
insb
xlat
cmpsb
mov
arpl
xlat
sub
cmpsl
xchg
mov
mov
stc
xchg
and
and
adc
xlat
adc
icebp
xchg
arpl
mov
je
push
adc
and
repnz
push
or
in
xor
adc
cmp
add
pop
scas
adc
imul
movsl
out
fcomps
cmp
push
andb
mov
por
dec
ret
sbb
out
sbb
cmc
test
jbe
movsb
js
or
adc
test
jae
repnz
mov
or
mov
pop
pop
outsb
xchg
jecxz
fstpl
adc
adc
daa
xor
push
in
call
std
repz
rcrb
sub
pop
and
cld
xchg
test
adc
mov
dec
stos
sbb
mov
cmp
push
repz
sub
push
mov
sti
mov
cmp
cmpsb
push
xchg
jno
xchg
test
in
and
cmp
fldcw
data16
clc
out
shll
insb
stc
aad
pop
je
leave
stc
cwtl
cmpsb
jno
clc
pop
lcall
mov
jne
adc
pop
lea
test
in
idiv
sbb
ud2
sub
jle
or
repz
shrb
mov
adc
mov
mov
lods
and
or
mov
jecxz
fisttpll
daa
neg
xchg
and
xchg
inc
in
outsb
inc
or
mov
out
call
subl
rclb
sub
xor
movsb
out
enter
sbb
add
jb
jmp
in
and
mov
iret
mov
loope
mov
xchg
xchg
push
sti
sub
mov
xor
or
adc
faddp
lods
mov
cwtl
push
adc
push
sbb
sub
xor
cwtl
les
aam
add
lock
pusha
push
outsb
mov
dec
inc
pop
xchg
and
ljmp
push
xor
mov
fnstenv
ficompl
bound
push
stos
hlt
stc
xchg
daa
repnz
out
add
pusha
out
mov
push
sub
bound
mov
pop
scas
stc
test
lds
push
addr16
outsb
add
lret
xchg
iret
add
ficoms
pop
pop
rorl
repnz
je
mov
clc
dec
inc
notb
out
and
mov
push
dec
sbb
std
insb
addr16
cmp
mov
sbb
sub
sbb
and
enter
repnz
pop
xchg
jg
orps
call
mov
inc
icebp
inc
ljmp
pop
cs
lret
push
pop
int
dec
push
call
sahf
insb
or
cmpsl
jb
insb
ljmp
iret
test
mov
call
pushw
add
popa
mov
pop
sub
pop
bound
daa
cmc
movsl
inc
pusha
or
fdivrl
jae
lret
sub
shl
fs
sbb
or
and
es
rclb
dec
mov
fwait
test
xchg
jno
cmpsl
fs
hlt
mov
movsl
mov
out
xor
sbb
out
or
cld
cmp
pop
leave
enter
lcall
or
cmp
mov
mov
mov
rorb
sbb
jg
jecxz
cwtl
sbb
and
and
or
call
jmp
xor
lcall
lahf
push
adc
sbb
adc
pop
out
fiaddl
and
push
jle
jl
mov
loop
or
enter
xchg
mov
mov
push
lcall
out
mov
stos
pop
xchg
xor
pop
cmpsl
xchg
inc
fcoml
sub
outsl
jmp
pop
imul
push
mov
movsb
mov
in
jle
inc
mov
lock
rcr
bnd
stos
sub
inc
movsb
aas
jno
ja
cmp
and
test
push
outsb
sbb
sbb
loopne
test
loope
jno
repnz
test
lcall
movsb
or
or
scas
fcoms
inc
and
push
scas
incb
fsubr
push
inc
jge
inc
jno
mov
aam
repz
mov
push
shlb
lahf
adc
xchg
data16
push
or
out
iret
and
or
sub
push
dec
or
repnz
ret
cwtl
sbb
mov
mov
aam
inc
dec
add
cmp
xchg
mov
std
mov
insb
cld
and
jo
repz
jp
mov
inc
cmp
enter
mov
repnz
andb
pop
js
add
xchg
movsb
mov
mov
sahf
aam
adc
loop
pop
sbb
push
ja
jecxz
jmp
mov
inc
jb
je
cmp
fsubrs
sub
xchg
xchg
jmp
out
out
push
out
cmp
outsb
rclb
mov
and
xor
jl
enter
inc
lods
movsb
mov
nop
cmovp
xor
push
mov
insl
sub
pop
dec
cmp
sub
andb
cmp
test
mov
loopne
bnd
inc
jp
push
popa
mov
or
sbb
enter
repnz
sbb
mov
xchg
sub
test
push
shld
sub
xchg
aaa
testl
ljmp
adc
add
in
adcb
push
sbb
mov
leave
lret
testl
sar
add
mov
and
in
jle
jmp
jae
daa
mov
xlat
ret
pop
or
out
xchg
fdivrl
mov
dec
shll
sbb
sbb
stos
nop
icebp
dec
dec
sub
add
sbb
test
ror
sbb
mov
shrb
rclb
js
imul
sahf
popa
add
inc
mov
or
lods
or
insb
in
jecxz
aas
cmp
and
popa
cli
mov
push
dec
mov
adc
sbb
xor
dec
mov
add
cmp
sub
cmpsb
sbb
pop
mov
push
inc
mov
cmpsl
adc
xor
gs
popa
pop
xchg
xchg
ret
sub
and
jg
cmpb
xchg
icebp
adc
xchg
sti
adc
pop
sti
in
leave
mov
mov
add
stos
adcb
push
jno
push
int
ret
ret
xchg
mov
popf
sub
pop
sub
cld
leave
push
aad
mov
bound
sbb
outsb
mov
xor
fadds
push
add
xchg
insb
or
loopne
dec
sti
adc
ljmp
enter
int3
fwait
jecxz
popf
mov
ja
scas
movsb
cmp
repz
sub
sub
out
sbb
pop
jnp
and
dec
movsb
jge
movsl
inc
lret
or
cmp
mov
icebp
xor
and
or
ret
shrl
out
pop
aas
mov
xor
adc
fwait
pop
iret
rcrb
stos
popa
sbb
in
cmp
pop
pop
push
xchg
lret
ret
loop
mov
or
push
sbb
in
xor
into
or
push
std
pop
cwtl
xchg
mov
pusha
jne
lret
mov
xchg
sarl
sub
xchg
popa
fadd
adc
enter
scas
mov
subb
mov
adc
cltd
mov
bound
loope
ret
ja
push
and
jle
daa
mov
lret
std
mov
adc
test
fnstsw
pop
push
rcll
push
jo
sbb
cltd
scas
mov
mov
mull
lds
lret
clc
pusha
cli
inc
sbb
and
lock
adc
pop
xchg
fisubl
nop
in
add
jmp
stos
pop
lret
enter
fidivrs
or
stc
sbb
movsb
shrl
cli
inc
hlt
push
adc
mov
test
dec
popa
mov
lods
iret
mov
call
stos
rcr
and
lret
mov
xchg
cmp
push
inc
insb
std
arpl
test
insl
mov
scas
push
xchg
pop
ss
xchg
sbb
push
inc
lcall
or
and
jb
and
push
or
lret
ja
mov
sub
adc
in
outsb
adc
push
fiaddl
mov
cwtl
les
jle
inc
test
pop
push
movsb
lods
adc
call
or
pop
loope
dec
xor
add
data16
mov
lds
hlt
mov
xchg
mov
ret
repnz
mov
or
push
cmp
orl
test
es
lds
jne
movsb
sub
jge
in
gs
sbb
mov
mov
sar
push
mov
shlb
into
inc
lods
mov
inc
pusha
js
jne
enter
out
xchg
mov
lcall
mov
mov
inc
push
jge
fsubrs
xchg
sbb
lds
int
sbb
inc
movsb
push
or
inc
mov
and
xlat
push
sbb
pusha
sub
pop
fdivs
xor
xchg
xor
push
xchg
xor
lcall
or
int3
xchg
sbb
scas
cwtl
inc
clc
aaa
jae
xchg
and
ret
sbb
jle
cmp
dec
enter
imul
dec
and
int3
xchg
pop
pop
addr16
js
mov
mov
sbb
pop
xchg
stos
adc
call
push
mov
xchg
mov
xchg
mov
data16
in
mov
pop
stc
sti
clc
push
adc
pop
add
daa
repnz
jbe
jne
inc
cmp
mov
jl
mov
inc
pop
dec
jo
stc
mov
inc
dec
xadd
cmpsb
add
dec
mov
pop
sbb
sub
loope
cmpsl
adc
insl
or
lock
fisubrl
lcall
and
lds
cmc
inc
lret
jae
gs
adc
jp
ja
jnp
mov
and
pop
cmpsl
or
popf
repnz
xchg
and
adc
jmp
dec
in
les
mov
add
int
xchg
add
cmp
iret
outsb
fcoml
movups
fisubrl
pushf
mov
aam
sbb
sahf
cmp
repz
pop
int
movsb
cmp
push
or
pop
addr16
pop
lahf
pop
push
repz
mov
push
popa
or
out
iret
jecxz
ss
push
xlat
xor
scas
adc
sahf
cltd
daa
cli
inc
rcr
dec
insb
popa
lods
or
into
mov
cld
jne
inc
xchg
xor
fistpl
aas
popa
adc
lds
popf
xlat
push
mov
hlt
sahf
sbb
cmp
sarb
mov
mov
rclb
pop
and
rep
pusha
sub
add
test
pop
fs
dec
sub
out
pop
sub
insb
sub
idivl
sub
popa
mov
call
or
test
out
push
add
int3
jecxz
adc
arpl
movsb
cli
push
enter
test
movsl
sbb
xor
jg
test
sti
sbb
sub
mov
adc
int3
in
sub
or
xlat
pop
inc
dec
out
in
xchg
mov
jg
mov
mov
subb
imul
sahf
imulb
loop
movsb
and
cmp
pop
sub
jecxz
sbb
enter
push
push
push
arpl
sub
adc
loope,pn
inc
adc
ljmp
dec
sub
movsb
pop
fiaddl
jg
imul
push
sbb
mov
sub
and
imul
movb
pop
jle
loope
or
sub
clc
cmpsb
adc
inc
movsb
pop
xchg
mov
addr16
in
repz
rcl
repnz
or
call
push
dec
lahf
test
and
jns
lds
mov
and
rcl
scas
sbb
sbb
insb
or
and
in
ss
lret
cmp
icebp
jl
lcall
inc
lods
push
test
sub
test
push
cwtl
cmc
insl
jge
or
hlt
add
push
xchg
popl
xchg
cmpsl
loop
decl
inc
cltd
insb
mov
cmp
dec
push
in
or
inc
lea
fs
enter
mov
xor
or
cmp
ds
pushf
mov
lea
lds
inc
aam
data16
addr16
bswap
and
push
out
mov
or
sub
fnstsw
pop
ss
vorpd
mov
push
fwait
push
arpl
inc
mov
inc
scas
xchg
add
sub
xchg
das
or
push
and
enter
in
repnz
mov
mov
sbb
dec
lds
cwtl
push
imull
xchg
cltd
and
sar
in
lret
in
int3
mov
xchg
and
jecxz
cmp
add
decb
movsl
xor
jae
sub
sub
subb
and
xorl
add
jmp
sbb
bnd
repnz
lret
push
and
in
outsl
aaa
or
or
adc
mov
pop
push
aad
jnp
popf
jae
cmpsb
sbb
sub
add
push
outsl
adc
jl
insb
xchg
and
adc
and
test
and
sub
data16
mov
sub
adc
lret
incb
jecxz
repnz
stc
push
sub
nop
xor
push
dec
pop
addr16
test
push
mov
fsubrs
cs
xchg
mov
pop
xor
pusha
test
imul
ss
lret
std
repnz
push
lret
pop
dec
arpl
sbb
xor
cmp
decb
mov
lods
cltd
sbb
mov
mov
xchg
fdivr
mov
outsl
and
or
jb
ss
sti
cli
cmpsb
repnz
ljmp
dec
push
test
cmpl
cmpsl
mov
loop
testb
mov
jnp
xchg
sbbb
mov
dec
lcall
sbb
outsl
fs
arpl
bound
into
push
pop
sbb
cmp
dec
roll
std
popa
xchg
mov
rorl
add
lahf
daa
push
jmp
sbb
stos
bound
or
xchg
inc
rcrl
leave
jnp
sbb
lea
xchg
adc
movsb
inc
jl
fimull
je
cwtl
mov
pop
daa
sarl
or
fxch
and
sbb
lds
push
int
push
mov
in
call
pusha
push
repz
pop
or
imul
mov
jns
adc
mov
cmp
pop
and
inc
into
testl
dec
mov
scas
xchg
test
cmc
add
cmp
imul
cs
ss
jns
jno
jmp
dec
mov
jb
push
bound
xchg
xchg
rcrb
jl
imul
add
jecxz
xchg
pop
lahf
xor
xlat
cltd
out
and
mov
inc
cwtl
addb
dec
iret
loop
lods
inc
xchg
shll
dec
mov
int
sti
les
andl
sbbb
dec
pop
movsl
sti
mov
pop
imul
pop
sahf
pop
add
outsl
adc
sbb
aas
insb
add
mov
shrl
push
imul
adc
ljmp
aas
jl
movsb
or
push
sti
pop
inc
xor
aam
out
jnp
rcrl
popa
mov
fbld
cs
mov
flds
scas
loope
xlat
add
scas
jge
or
adc
imul
cmp
xchg
cmp
adc
pushf
or
dec
add
stos
repnz
gs
dec
mov
cmpsb
dec
addb
pop
inc
jle
cmpsl
pop
dec
xchg
push
fisttps
sti
andl
ret
jecxz
cmp
xchg
inc
xchg
outsb
mov
adc
or
dec
call
aaa
andb
stos
aam
mov
arpl
mov
dec
add
in
ja
adc
pop
faddp
push
aas
lret
das
add
and
add
sub
push
add
mov
das
xor
fs
adc
fsubp
sahf
mov
inc
xchg
sbb
int3
fcmovnu
frstor
push
jno
repz
xor
add
test
pop
inc
or
add
jecxz
inc
ljmp
or
inc
jns
jge
loope
in
push
inc
ret
sub
or
xchg
stos
or
movl
mov
clc
sub
cwtl
test
out
or
or
xor
test
repz
repz
flds
hlt
js
jecxz
cs
in
ja
jg
xchg
or
loopne
xchg
mov
pop
push
insb
fisubl
xchg
clc
mov
cmp
dec
hlt
je
test
xchg
inc
sub
fsubrl
jno
arpl
push
mov
add
sub
add
inc
mov
mov
aas
cltd
frstor
movl
cmpsb
clc
outsl
fcomp
mull
mov
jp
xor
pushf
mov
mov
dec
subl
iret
fs
lods
ret
not
sti
xor
add
dec
xor
and
jbe
hlt
test
push
pusha
int
mov
jnp
add
xchg
das
outsb
and
aas
dec
inc
iret
in
dec
lods
mov
xchg
push
xchg
adc
insb
lods
cmpsb
and
jae
popf
lods
and
pop
mov
repz
repnz
test
mov
scas
jl
mov
popa
and
adc
insb
imul
iret
jae
insb
imul
aam
lret
push
xlat
xchg
jge
int
inc
je
jecxz
and
mov
nop
mull
mov
mov
subb
jno
std
mov
enter
jle
fcomps
add
xlat
lret
outsl
dec
lods
dec
int
or
dec
sub
cmp
std
mov
bound
cmp
aas
pop
xchg
pushl
xor
call
mov
lea
jb
mov
inc
lret
sarb
popa
push
sub
int3
pop
ret
pop
pop
icebp
in
aaa
icebp
xchg
or
sub
xchg
xor
lahf
xlat
test
into
push
add
jg
or
jno
add
ljmp
pop
dec
stc
push
mov
movsl
jns
dec
daa
inc
mov
imul
lcall
aam
ss
stos
mov
je
addr16
and
pop
add
mov
pop
dec
dec
neg
xor
std
xlat
mov
test
xor
or
fistl
inc
pop
push
bound
pop
loope
and
cmp
push
dec
lods
int
divb
mov
shll
rclb
or
jns
dec
in
mov
push
dec
daa
cmp
xchg
cltd
xorb
in
sub
xor
push
fneni(8087
out
mov
jecxz
ljmp
or
add
ss
ljmp
mov
push
cli
xor
push
ficompl
sbb
popa
or
cmp
dec
sub
in
js
and
aad
pop
in
stc
jecxz
negl
enter
subb
jp
mov
xchg
jge
pop
jecxz
and
stos
loop
xchg
adc
daa
aad
adc
inc
jle
repnz
ds
jge
faddl
add
jo
rcll
es
mov
inc
bound
mov
dec
scas
dec
pop
xchg
test
lock
sbb
pop
sbbb
testl
fs
pushf
popa
arpl
push
jb
mov
enter
in
sahf
mov
jp
jp
aam
adc
push
cmpsb
pop
and
pop
mov
stos
repnz
outsl
negl
addr16
mov
fbld
add
jbe
sahf
mov
repnz
sar
ret
mov
rorb
arpl
or
jge
gs
mov
adc
mov
fidivl
jle
jl
movsb
xchg
ret
or
lret
sub
loop
das
insb
cmp
or
or
dec
adc
out
xchg
mov
test
sar
js
lods
sbb
pop
mov
sbb
ljmp
test
clc
push
out
xchg
outsb
in
cmpl
adc
or
orl
mov
int
pop
fcmovnbe
jmp
or
push
cltd
push
pusha
pushf
mov
and
pop
mov
call
jg
pushf
cmp
pop
mov
aad
insb
mov
push
das
sbb
inc
jb
or
xorb
cmp
inc
insb
cwtl
loopne
sbb
nop
jb
cmp
iret
test
mov
dec
out
int
rol
adc
in
lods
sbb
add
jl
or
mov
enter
and
dec
into
xor
push
iret
in
notb
pop
aam
sub
loop
sbb
sub
ficomps
xchg
fadd
add
mov
cmp
cld
mov
outsl
out
sub
pop
je
test
imulb
sbb
pop
and
adc
lods
adc
pop
jns
es
imul
repnz
int3
aad
stc
test
sub
push
adc
scas
faddl
sub
cmp
inc
mov
mov
push
push
int3
push
gs
lret
pop
and
mov
mov
jae
mov
push
mov
jmp
ljmp
sbb
sbb
mov
and
pop
in
mov
jno
and
jmp
rcr
mov
push
and
repnz
stc
sbb
push
mov
ja
xchg
sbb
jecxz
mov
inc
ret
add
sub
das
ja
insl
je
cs
sbb
push
icebp
mov
xlat
xchg
mov
arpl
adcb
jno
aad
pop
jo
test
xchg
arpl
pop
jl
out
mov
shr
xchg
rcl
jle
sbb
ljmp
sti
or
mov
pop
and
or
mov
add
jmp
sbb
cmp
add
dec
lret
ret
dec
push
xlat
roll
and
jns
call
in
nop
lcall
add
push
jmp
lea
testl
sbb
add
xchg
add
pop
jmp
out
loope
push
mov
popf
lock
movsb
rcrl
push
sbb
lret
sbb
add
push
std
std
xchg
xor
cli
lret
leave
add
call
popa
repnz
or
dec
jnp
pop
stos
mov
or
test
and
fwait
das
sub
gs
xor
sub
add
cmp
cmp
cwtl
stc
and
fucomp
mov
xchg
pop
push
sub
in
cltd
mov
push
push
jge
nop
sbb
repz
inc
mov
jbe
add
lahf
lcall
pop
repnz
mov
mov
xor
mov
rcl
sbb
jmp
icebp
fwait
loope
push
push
mov
push
adc
push
clc
js
bnd
jns
pop
outsb
movsb
cmpsl
mov
xor
daa
shrb
leave
xchg
mov
pop
add
test
idivl
les
nop
cmp
mov
push
lcall
iret
pop
adc
ljmp
mov
mov
or
inc
dec
test
sbb
mov
rcll
xor
inc
xchg
jne
movsb
sub
in
aam
daa
add
adc
add
or
push
lock
ljmp
sbb
fdivrs
movsl
mov
out
rolb
mov
ret
mov
or
inc
je
icebp
fs
or
sub
rorl
or
push
pop
jmp
out
orl
xchg
ficoml
arpl
js
das
shll
xchg
cmp
lods
and
mov
xor
pop
fdivp
inc
std
sub
cs
pop
insl
aad
test
adc
loope
idiv
pop
sbb
arpl
lock
mov
lret
inc
fcoms
clc
pop
xor
stos
sub
cmpsb
mov
icebp
and
cmp
mov
insl
pop
jecxz
and
loope
mov
sbb
pushf
es
xor
mov
pop
jg
sub
add
lods
sbb
adc
icebp
aad
push
lea
test
inc
scas
je
dec
dec
cmp
arpl
outsb
push
adc
jb
pop
fdivr
popf
xlat
cmpsl
shll
lret
aas
mov
add
test
mov
aam
xcrypt-ecb
cmpsl
mov
xor
jnp
sub
jecxz
xchg
ret
cmpsb
mov
and
call
cmpsl
cmc
daa
test
add
xlat
daa
mov
mov
xlat
and
push
out
out
mov
mov
add
jmp
movsb
repnz
ds
inc
cld
sbb
cltd
fs
sbb
pop
icebp
cmp
push
jb
jg
jecxz
or
jecxz
adc
ret
aaa
inc
jecxz
pop
int3
loope
out
adc
rol
jns
add
sbb
lcall
jnp
je
jp
arpl
lea
push
mov
pushf
jecxz
loopne
lret
xchg
cmovae
jecxz
sti
or
mov
test
or
push
in
fisubs
dec
fwait
mov
fld1
addr16
insb
dec
loop
sub
pop
sub
push
dec
add
xchg
or
mov
mov
mov
ja
out
xor
mov
or
ficompl
aaa
sbb
lods
mov
mov
push
mov
push
add
loope
fisttps
idivb
insl
sub
sub
push
cli
push
outsb
lcall
repnz
or
inc
add
leave
pop
xchg
push
cmp
add
aas
dec
adc
cmpsb
xor
lahf
mov
add
sbb
insl
jo
push
aaa
scas
fsubr
adc
roll
in
sti
pop
arpl
sub
pop
leave
daa
stos
adc
movsl
jecxz
icebp
mov
cmc
cld
pop
fs
pop
add
sbb
push
rclb
out
addr16
push
push
pop
push
aad
in
push
stos
jge
movsl
imul
sub
popf
mov
cmp
or
or
xchg
sub
call
mov
mov
dec
pusha
pop
lret
add
jg
clc
pop
mov
pusha
xor
adc
mov
popa
push
in
xchg
xchg
sbb
lock
or
lea
dec
inc
xor
daa
jb
mov
pop
cmp
shlb
or
and
jno
lret
and
out
movsb
imul
sbb
test
test
push
repz
sub
pop
pop
pop
pop
imulb
popf
outsl
xchg
xchg
cs
add
adc
adc
inc
dec
lea
jl
jecxz
in
xchg
call
adc
ret
shl
lods
xor
ficoms
cmp
pop
sub
push
out
aad
pushf
mov
add
mov
in
icebp
iret
test
push
cmp
aam
test
dec
xchg
and
in
adc
out
adc
bnd
mov
pop
and
xchg
scas
outsl
ret
enter
pop
cli
in
and
xorb
outsb
lock
push
push
fldt
and
std
pop
inc
jae
cltd
mov
sbb
addr16
xchg
mov
mov
sbb
ret
jmp
push
aas
lods
sbb
shlb
sbb
jo
add
or
sti
in
cmpsl
and
inc
and
mov
cmp
jb
icebp
fwait
dec
and
insb
fsubrl
and
push
aad
push
lock
xor
test
loop
sahf
jo
xchg
in
inc
push
jae
cltd
mov
inc
push
sub
mov
scas
js
inc
pop
push
xchg
mov
iret
repnz
adc
shl
stc
cmpsl
call
adcb
hlt
mov
and
std
or
lods
test
aad
popa
imul
jnp
clc
sbb
adc
jecxz
repz
sbb
int3
dec
sub
jle
add
aas
jne
xchg
adc
lret
mov
pop
jb
sbb
cmp
les
mov
pop
cld
xchg
adc
push
aaa
or
aas
fcmovnb
adc
test
inc
sub
xchg
je
and
jle
iret
scas
xchg
inc
xchg
test
mov
test
movsb
imul
int3
repnz
jo
xchg
into
inc
sbb
mov
push
xchg
fidivl
int
insb
push
fidivs
jnp
or
push
cmp
daa
push
insb
loope
test
repnz
gs
mov
sbb
mov
push
dec
sti
in
daa
sub
jno
push
jecxz
pushl
jl
stc
add
aad
int3
inc
outsl
cltd
clc
mov
dec
scas
out
das
dec
pop
push
xchg
testl
inc
lret
xor
or
mov
or
dec
mov
cmpl
js
in
sbb
les
imul
insl
pop
pop
cmpsl
adc
aam
dec
and
push
scas
mov
mov
fsubrl
test
fiadds
repnz
sahf
push
call
mov
imul
addb
in
fbstp
subl
in
adc
jb
out
adc
leave
movsb
decb
dec
xor
aas
enter
ljmp
loopne
xchg
jnp
cltd
jo
outsl
xchg
fcmovbe
sbb
mov
into
inc
mov
mov
push
lds
mov
inc
repnz
cwtl
gs
fisubrs
int
jo
inc
outsb
adc
mov
and
je
jmp
stos
imul
rcr
adc
pop
imul
push
mov
add
imul
or
or
test
adc
cmp
sub
sbb
inc
mov
mov
inc
jge
in
xchg
cltd
ret
adc
sahf
mov
mov
ja
xor
jp
xlat
les
repnz
test
outsl
adc
jo
arpl
lea
sbb
test
adc
ljmp
push
insl
in
sti
outsl
mov
dec
jge
cwtl
ljmp
push
fsts
call
sub
shl
repnz
mov
push
or
xor
fisttpll
fistl
adc
clc
or
shlb
xchg
icebp
jl
pop
cmp
mov
test
xor
pop
push
ds
add
sbb
jecxz
idiv
mov
jbe
ljmp
xor
je
mov
jle
and
xchg
push
outsb
xor
insl
lock
push
sbb
inc
or
cmpsl
repnz
sbb
adc
sub
in
cmp
cmpsb
icebp
jno
es
xchg
cli
int
xor
jp
push
lret
shlb
pop
mov
push
inc
clc
movsb
jle
aad
pop
das
repnz
or
movsb
mov
mov
jecxz
out
int3
out
repnz
bound
and
adc
out
inc
clc
mov
bound
mov
sub
sbb
loopne
pop
push
jle
ret
out
pop
push
dec
test
xchg
xlat
ds
lods
mov
xchg
push
jo
iret
dec
jp
sub
sub
or
sub
jg
jbe
jmp
div
mov
mov
mov
rol
movsl
cmp
push
icebp
in
mov
mov
mov
sbb
cs
into
push
cmpb
or
sti
daa
jmp
push
inc
dec
fistps
push
bnd
in
mov
or
jg
movsl
mov
cmp
mov
mov
idivb
and
rcl
movsb
fnsave
test
push
test
mov
cmp
aaa
cmp
dec
cld
adc
out
repnz
mov
aam
mov
sbb
pop
stos
test
lcall
out
cmp
in
xlat
pop
lds
cmpsb
lds
sbb
xor
hlt
inc
lret
testl
enter
fsubrl
lea
cli
push
es
push
mov
xchg
fistpl
idivl
fs
and
mov
pop
in
loope
rcll
mov
pop
fcoms
call
sbb
cwtl
mov
mov
xchg
mov
lcall
aad
mov
enter
fxsave
stos
clc
das
mov
sbb
xchg
push
sub
push
xor
pop
mov
popa
adc
cmp
or
dec
jg
arpl
mov
ljmp
idivl
adc
sbb
mov
jecxz
mov
sbb
int
shrb
xchg
or
into
inc
jecxz
test
sub
repnz
int3
xchg
push
aad
popa
cli
out
fcmovbe
xor
pop
push
push
sbb
mov
ret
sbb
into
mov
daa
repnz
stos
and
fwait
pop
and
or
cld
xor
xchg
xchg
cwtl
pop
mov
push
jne
shrb
and
popa
mov
int
jl
inc
scas
add
inc
aas
or
push
aaa
push
xor
lahf
insl
xchg
aas
xchg
fistps
mov
cmp
jmp
adc
ljmp
addr16
or
repnz
mov
popa
cmp
cmp
mov
out
mov
xor
inc
xor
cli
adc
or
lcall
mov
cmp
adc
jo
sahf
shlb
adc
and
jmp
mov
pusha
ljmp
and
loop
ja
or
xchg
or
mov
repz
fcompl
mov
ds
push
scas
jb
adc
ljmp
mov
dec
xor
rorb
cld
pop
sub
and
xchg
adc
imull
fwait
xchg
cmp
sbb
sbb
fcomps
adc
mov
cwtl
insb
push
push
repnz
jge
jecxz
mov
arpl
imul
cmp
ret
push
push
mov
add
adc
movsb
hlt
and
push
arpl
push
adc
pop
push
je
jle
pop
sahf
mov
stos
popf
cmc
mov
add
sub
fs
popa
mov
bound
scas
xor
out
in
enter
mov
inc
out
jo
push
repz
bound
and
or
push
stc
xlat
and
push
and
iret
sub
pushf
mov
pop
mov
addr16
mov
repnz
xor
movsl
imul
pop
xchg
aam
fdivl
push
xchg
adc
or
stc
mov
adc
adc
mov
add
dec
sar
clc
aaa
inc
sbb
jns
mov
pop
mov
ljmp
jns
and
and
leave
iret
cmp
mov
popa
fistpll
loope
sahf
mov
repnz
clc
jle
mov
jne
mov
xchg
hlt
rcrb
std
call
jnp
xchg
or
inc
mov
bound
add
test
lcall
repnz
or
cmp
add
mov
cltd
push
xor
or
xorl
xchg
xchg
inc
int3
mov
fs
outsl
add
mov
lock
or
push
aam
jo
cwtl
lods
inc
test
sbb
sahf
and
xchg
testl
sbb
js
imul
das
jle
or
sbb
push
push
and
cltd
mov
cmpl
cld
movsb
nop
push
out
aam
pop
xchg
call
aaa
cltd
mov
mov
push
xchg
and
adc
test
add
and
mov
mov
sti
rclb
fcoms
mov
fiaddl
fsubrs
pop
xchg
movsb
repz
lea
mov
mov
mov
and
push
iret
add
cmp
pop
ds
iret
add
out
fxch
into
iret
rcrb
fisubrs
adc
insb
inc
cmpsb
push
lea
out
hlt
rolb
push
pop
or
test
xchg
mov
jmp
ss
or
jg
addr16
xor
jae
dec
xor
xchg
ljmp
inc
mov
insb
je
ss
aaa
jmp
mov
mov
or
movsb
xchg
in
cmp
cmp
adc
mov
es
jle
and
jno
mov
mov
lret
inc
inc
jecxz
and
pop
jns
cmpsl
std
cmpb
add
jmp
sub
flds
pop
or
adc
test
aaa
lods
xchg
dec
outsl
xor
ds
mov
dec
and
insb
cmp
scas
in
push
aam
je
lret
sbb
fdivr
js
pop
bound
sbb
cmp
or
repnz
dec
repz
jg
sub
cmp
mov
push
xchg
adc
mov
dec
in
sbb
bound
dec
repnz
lret
stc
fs
data16
push
std
popa
dec
jno
jno
or
es
cmp
rcrl
cmp
movsb
imul
or
lcall
scas
and
lcall
shlb
mov
jnp
nopl
mov
pop
or
add
cld
push
inc
jnp
in
insl
mov
inc
adc
mov
sbb
popa
push
cmp
bound
add
xchg
in
stos
push
icebp
inc
loop
sbb
add
or
mov
insl
or
jecxz
ret
jb
xor
push
test
dec
pop
fsubr
fwait
jns
mov
repnz
movsb
das
rcll
mov
test
sbb
pop
mov
jmp
pushf
mov
push
mov
adc
mov
push
dec
leave
mov
sub
mov
and
adc
lds
outsl
clc
pop
pop
sbb
insl
mov
and
in
adc
sbb
sti
cmpsl
lods
push
mov
lea
out
pop
lcall
jp
adc
cmp
push
mov
mov
dec
add
push
xlat
and
inc
sub
clc
mov
fst
cmp
jmp
test
aad
pop
push
jnp
arpl
mov
inc
mov
push
repnz
pop
ljmp
xchg
push
sub
lea
adc
icebp
cmp
xchg
stos
into
jle
lret
roll
xchg
sbb
sbb
adc
ds
jo
sbb
sbb
jno
push
xchg
imul
imul
aam
imul
andb
sbb
ret
into
cmpsb
cmp
push
xchg
out
subl
sti
xlat
shlb
addr16
mov
pusha
test
or
and
push
push
xchg
jnp
pop
cmp
push
sbb
xorl
push
adc
in
dec
and
pop
jno
lea
mov
jne
lcall
add
test
mulb
lods
in
icebp
dec
sahf
jle
dec
lcall
push
ss
xorb
sub
xchg
adc
outsl
adcl
mov
jg
roll
mov
rcrb
adc
test
sbb
repnz
cli
mov
clc
outsl
sub
fwait
dec
cmp
gs
sub
xchg
movsb
repnz
stos
insl
lret
insb
int
jle
mov
pop
mov
std
jbe
jb
jl
dec
jle
dec
addl
cmpsl
xor
inc
pushf
lret
insl
xlat
stc
in
push
cmp
inc
xor
gs
mov
dec
cli
enter
shll
cmp
mov
inc
stos
popf
or
popf
inc
sub
mov
stc
inc
movsl
jle
jl
ljmp
cwtl
loope
call
lahf
and
rorb
repnz
adc
sbb
iret
add
mov
push
cmp
mov
lea
add
pop
scas
and
and
xor
jo
aaa
adcb
test
mov
fisubrs
push
loop
insl
fucomip
repnz
scas
outsl
icebp
lea
enter
lret
or
add
cmp
pop
shlb
dec
xchg
cld
or
dec
test
dec
rorl
cmc
loope
pop
ljmp
and
cld
cmpsl
lods
add
inc
xchg
cvtpi2ps
jns
movsl
hlt
call
mov
mov
mov
mov
mov
or
sub
sti
jns
mov
cmpsl
and
adc
loop
sbb
add
daa
sbb
inc
mov
lret
and
cs
rorb
adc
js
jecxz
ljmp
mov
pop
and
inc
lods
push
mov
xlat
adc
inc
mov
push
lods
push
jecxz
lock
out
mov
jp
imul
adc
mov
addb
inc
push
fstps
lods
ljmp
xchg
rorb
cmp
push
das
xchg
sub
or
jmp
xchg
add
sbb
mov
adc
lret
mov
roll
adc
jle
xchg
les
sbb
jle
sub
ljmp
cld
es
cmp
sti
and
sbb
adc
lret
push
ds
xchg
xchg
cmpb
fdiv
push
push
repz
xchg
pop
out
xchg
test
xchg
aas
insl
in
leave
inc
push
or
xor
arpl
repnz
mov
cmp
aam
and
imul
repnz
mov
sbb
pop
imul
dec
dec
inc
jno
scas
cmp
adc
or
adc
mov
sbb
jg
incl
ret
popa
mov
mov
dec
push
inc
or
and
fldenv
call
add
repnz
mov
cmp
test
scas
xchg
add
mov
call
mov
fs
sbb
adc
xchg
push
jge
ret
stos
leave
sub
pop
out
push
sbb
repz
or
push
mov
push
jecxz
cltd
mov
lret
imul
cld
test
lahf
stos
jmp
pop
repz
inc
mov
mov
test
xor
jo
sub
hlt
inc
cld
push
stos
sarb
ljmp
jl
mov
repnz
daa
mov
fsubrs
mov
lret
mov
push
mov
mov
jle
push
push
shlb
iret
cmp
out
jno
sub
adc
fs
push
pop
lods
dec
mov
into
arpl
out
scas
mov
stos
in
pop
inc
xchg
out
enter
ja
or
xor
in
repnz
dec
xchg
xchg
push
mov
inc
push
inc
cmc
xchg
mov
sub
stc
in
inc
sti
adc
dec
mov
mov
jne
loop
dec
and
aaa
test
sbb
jnp
bnd
adc
push
lret
std
push
xor
adc
or
clc
pop
sub
nop
aam
and
mov
js
sub
mov
test
mov
mov
push
mov
sbb
stos
inc
mov
add
test
pop
xor
cli
int3
mov
out
inc
xchg
push
dec
shrl
in
sbb
addb
mov
lods
ret
in
sbb
jp
cltd
cmc
inc
cltd
ss
jge
cwtl
jnp
mov
iret
sahf
and
movsb
xor
ljmp
adc
sbb
or
js
or
sbb
jb
push
cli
shrb
into
or
sahf
lcall
push
pushf
mov
and
aas
aam
bound
repz
bound
insb
jl
sbb
cmp
cli
cltd
push
push
inc
lret
inc
out
mov
rorl
das
adc
mov
lcall
bsr
mov
out
in
push
pop
inc
je,pt
out
jnp
call
jmp
in
nop
adc
pop
iret
les
test
mov
cmp
out
dec
cmp
jb
daa
lds
mov
and
pop
decb
in
sbb
out
adc
ret
je
pusha
popa
cmc
push
add
imul
pop
mov
push
aas
sbb
jle
sub
cs
xor
or
icebp
test
imul
popa
sub
cwtl
movsl
mov
dec
push
insb
and
xor
xchg
arpl
repnz
and
dec
test
pop
outsb
iret
xchg
clc
popa
lret
inc
and
xchg
mov
mov
mov
mov
inc
sub
mov
mov
call
adc
sbb
push
std
repnz
inc
push
scas
cltd
xchg
or
xchg
inc
adc
or
push
mov
pop
clc
enter
clc
pop
popa
mov
loopne
por
jecxz
jb
int
adc
in
push
out
jnp
push
mov
xchg
scas
jle
cmp
mov
mov
ret
pmuludq
or
or
imul
pop
mov
pop
lret
sbb
mov
call
xchg
hlt
jmp
mov
jle
sbb
insl
xor
xlat
mov
inc
add
cmc
fisubrl
pop
sbb
es
ret
adc
sbb
arpl
jge
ret
xor
jecxz
push
xlat
jns
pop
inc
add
test
in
inc
jne
shlb
popa
add
ret
fs
mov
lods
enter
rclb
xchg
dec
movsb
push
das
sub
cmp
aaa
loopne
push
sbb
xchg
sub
adc
mov
and
and
arpl
das
sub
mov
xchg
inc
std
or
mov
movsl
add
repz
sahf
ja
lret
sub
jge
pop
test
jmp
and
aas
xchg
mov
fisttps
push
jecxz
cmp
stc
cmpsb
xchg
push
leave
push
repnz
cmp
and
pop
jge
and
cmc
ret
push
sub
xlat
outsb
popf
sgdtl
out
adc
cmp
mov
mov
stos
dec
ljmp
jecxz
xchg
pop
adc
movsb
mov
insl
insb
mov
lret
movsl
ljmp
push
les
test
mov
loopne
fdivrs
bound
jp
push
clc
mov
pop
xor
adc
jbe
cmpsb
fdivrp
or
push
cmpsl
aas
mov
or
and
das
xchg
cmc
ljmp
ljmp
mov
int
mov
add
mov
pop
add
mov
fs
fldt
aam
popf
es
pop
loope
enter
mov
aad
loope
out
sub
movsb
inc
lock
or
out
clc
sub
iret
imul
stc
cmp
push
cmpb
iret
mov
bound
iret
xchg
add
addr16
mov
or
mov
sbb
cmpsb
pop
pop
pop
mov
mov
mov
sub
and
jle
xchg
sbb
cmpsb
arpl
push
jle
mov
xchg
cmp
inc
mov
ds
or
test
push
xor
fstl
hlt
xor
push
mov
or
pop
mov
mov
mov
mov
insb
test
or
das
fadds
adc
sbb
xor
fdivl
xor
test
sub
dec
push
sti
jbe
je,pt
sbb
aas
sub
loopne
or
inc
and
or
mov
out
or
cwtl
mov
mov
aad
cli
xor
push
lret
or
jae
jmp
jl
or
lds
inc
and
push
adc
aad
lret
inc
inc
jns
or
xor
stos
fstps
mov
cmpsl
cmpl
aaa
call
popf
xor
or
in
fsts
sub
mov
push
jmp
add
cltd
xchg
pop
jae
call
lcall
repz
stos
push
inc
call
push
mov
repnz
fdivrs
enter
pop
xchg
push
inc
dec
out
add
ljmp
xchg
xchg
sbb
fisttps
cmp
jle
mov
dec
jl
jnp
adc
iret
add
int3
adc
dec
xor
sti
aaa
and
mov
add
or
dec
push
xchg
or
pop
or
js
jno
adc
cmpsl
pop
out
cli
popf
xchg
mov
mov
mov
aaa
push
sbb
inc
outsl
addr16
lret
mov
test
jl
add
iret
and
add
and
insb
or
add
test
adc
stc
jle
jmp
sahf
call
or
mov
jecxz
outsb
subl
outsl
das
int3
lcall
lock
mov
mov
loope
mov
mov
xchg
inc
sub
sbb
gs
sbb
imul
xchg
test
aam
pop
mov
jns
adc
push
ljmp
movsb
mov
sbb
stc
cmp
push
lea
jne
out
repz
leave
loope
dec
push
or
sbb
mov
or
sti
movsl
out
es
add
repnz
or
jbe
test
pop
inc
mov
rclb
xor
sbb
xchg
out
dec
shrl
stc
fimuls
pop
pop
mov
cmp
pop
xchg
lods
sub
jg
imul
repnz
adc
loope
jmp
mov
fs
mov
or
pop
insl
iret
mov
test
out
adc
push
mov
adc
adc
repz
push
jmp
rclb
mov
mov
or
jg
loope
icebp
aad
xor
xchg
mov
lods
insl
adc
mov
jge
cli
cmp
pushf
mov
daa
repnz
lds
int3
enter
ja
outsl
and
cmp
dec
and
dec
test
daa
add
mov
clc
sbb
xchg
push
test
cwtl
insl
test
cmp
ret
daa
cmp
or
es
test
mov
mov
dec
outsb
sbb
sbbb
nop
je
cmp
sub
cmc
ja
addr16
xchg
out
jl
dec
insb
inc
scas
xlat
stc
add
or
pop
rcrb
xchg
add
xor
push
pusha
lss
sbb
test
cmp
cmp
lods
lret
jns
leave
push
dec
jb
pop
sbb
fistpll
jne
sbb
mov
test
adc
decb
insl
arpl
mov
loope
fcoml
arpl
mov
pop
sub
inc
subb
cs
mov
cmp
sarl
sbb
and
jle
sarl
sub
in
mov
pop
ror
adc
add
lods
xor
inc
lods
dec
and
pop
mov
dec
outsl
mov
push
mov
add
invd
adc
or
sub
aad
rcll
push
push
push
mov
loope
outsl
mov
jecxz
pop
sahf
dec
repnz
fs
xchg
adc
repnz
daa
xor
xchg
sbb
scas
aas
mov
sbb
arpl
adc
pop
in
imul
push
repnz
pop
jns
mov
cmpsb
jo
or
out
jne
repnz
fstl
ljmp
jb
es
push
repnz
fstl
mov
push
adc
cmc
jecxz
or
mov
mov
adc
add
jecxz
inc
mov
add
push
or
je
das
inc
mov
xchg
loope
insl
jl
cwtl
pop
jns
popa
lret
mov
outsb
rol
pop
pop
sbb
and
insl
or
pop
sbb
pop
dec
lea
mov
cmp
cmp
pop
sbb
xchg
cmpb
mov
pushf
imul
in
aam
pop
xchg
icebp
push
mov
mov
notb
sbb
sub
or
inc
xchg
shl
add
repnz
in
pop
add
in
cmp
mov
jecxz
or
pop
mov
cmp
fdivs
adc
outsl
mov
rolb
jle
outsl
jbe
push
dec
enter
mov
sbb
push
sbb
sub
or
sbbl
jb
mov
inc
dec
fs
and
into
jecxz
jecxz
adc
cli
jns
adc
inc
inc
aad
pop
cmp
cmc
xor
push
pop
jecxz
jecxz
lret
mov
icebp
xchg
mov
cltd
pop
std
add
and
jecxz
icebp
xchg
arpl
fnsave
xchg
dec
in
dec
mov
xlat
push
ffree
xor
cmp
rcr
push
push
inc
adc
cld
sbb
sub
mov
or
imul
sbb
push
sub
sahf
sbb
mov
sbb
push
insb
mov
in
cmp
or
aam
psadbw
cmp
insl
pushf
jmp
sub
sbbb
adc
mov
cmpsl
sub
icebp
mov
mov
mov
mov
mov
hlt
ds
hlt
cmp
nop
dec
cmp
lods
push
adc
sub
push
inc
or
adc
inc
lcall
ljmp
pusha
test
mov
bound
rolb
pop
cmpsl
popa
sbb
mov
inc
dec
mov
je
cli
and
cmp
lret
xchg
js
shl
add
inc
dec
sub
xchg
aas
popa
xlat
add
push
mov
scas
adc
mov
sbb
aam
ss
rorb
add
out
push
rolb
sub
in
adc
add
inc
dec
movsb
mov
aas
fwait
rcrb
xchg
mov
xor
push
push
push
cmp
push
lret
lahf
sbb
jnp
cmp
mov
jmp
or
repnz
or
xchg
in
insl
outsb
dec
mov
cmpsb
jns
mov
mov
push
lods
xchg
jmp
addr16
cmp
popf
mov
rclb
mov
popa
mov
aad
adcl
lret
ret
daa
rorl
out
out
xchg
cmp
fstpl
outsb
cmc
into
mov
or
lahf
xor
mov
sub
iret
cmpsb
mov
sub
repnz
xchg
pop
mov
sbb
outsl
outsl
fucomp
outsb
mov
or
xlat
mov
adc
sbb
out
fsubl
pop
lcall
sti
ds
rorb
mov
lret
ljmp
mov
in
xchg
sahf
pushf
adc
mov
dec
adc
aaa
sbb
dec
sub
mov
outsb
inc
push
push
in
lret
leave
sbb
xchg
bound
mov
loope
push
mov
or
stc
movsb
and
jbe
repnz
jmp
cmp
cmpsl
std
test
mov
aam
jno
xchg
fistl
mov
inc
scas
or
sbb
jg
scas
inc
lret
pop
stc
jge
mov
call
push
pop
popf
adc
cs
lock
insl
rcl
test
ljmp
push
or
out
push
jne
movsb
pop
jnp
xor
add
lock
mov
jnp
cmc
xor
inc
adc
test
dec
filds
xor
sbb
jl
cmp
jl
sub
or
mov
loopne
rcr
xchg
or
in
inc
xchg
cltd
icebp
sub
repnz
mov
sub
jecxz
test
fisttpl
xchg
outsb
cmp
and
pop
xor
hlt
bound
orb
pop
iret
fildll
scas
xor
adc
repnz
dec
fiaddl
sbb
popa
out
adc
repnz
enter
pop
xchg
sub
jg
fwait
sub
push
test
mov
stos
bound
cltd
ljmp
jl
mov
jp
int3
outsb
dec
pushf
lea
sbb
enter
adc
movsl
mov
imul
test
aad
nop
sub
mov
mov
ds
movsb
fisttpll
pop
and
push
out
sbb
repnz
je
stc
and
aad
movsl
add
xchg
cli
ds
ljmp
stos
loopne
sub
mov
or
mov
fs
sbb
stos
aam
fcmovnb
cmp
push
push
jp
xor
or
add
mov
fsts
dec
sub
das
scas
cmp
popf
sbb
fwait
adc
imul
cmp
xchg
test
repz
cmp
or
cld
push
xchg
mov
mov
push
popf
jl
test
popa
mov
dec
rorl
enter
jbe
and
inc
sbb
or
dec
mov
ljmp
and
add
push
repz
imul
xchg
add
test
test
lea
mov
jp
add
add
test
jne
insb
sbbb
xchg
cmp
cmp
add
mov
insl
xchg
or
xor
add
das
adc
daa
sbb
mov
cwtl
sbb
mov
mov
inc
sbb
jae
adc
xchg
mov
ja
rol
sbb
mov
adc
bound
push
ljmp
addr16
inc
into
cmp
cmp
xchg
call
repnz
cld
inc
adc
jbe
in
leave
sub
adc
mov
faddp
imul
xor
aam
bnd
xchg
fisttpl
jle
sti
in
jecxz,pt
adc
lds
adc
imul
roll
outsl
insb
in
push
cs
xor
ficomps
dec
shll
sbb
or
adc
out
mov
xor
jns
cld
inc
fdivrl
pop
fsubl
sahf
lock
daa
jl
mov
or
call
mov
cltd
ljmp
outsb
or
imul
dec
jle
mov
xor
sub
ds
cmp
test
adc
out
jb
call
mov
xor
mov
cmp
inc
mov
fmuls
xchg
mov
insb
bnd
call
daa
outsb
cmpsb
push
cmp
mov
inc
nop
and
adc
xchg
adc
cmp
sub
aas
pop
xor
mov
mov
and
or
std
lahf
cwtl
push
jb
xor
fs
dec
inc
or
xor
mov
dec
hlt
mov
aam
loop
adc
jo
test
jmp
jo
jns
test
push
mov
push
adc
scas
mov
shl
inc
xchg
fisubl
rcl
push
sub
mov
jecxz
dec
aam
and
jnp
in
imul
mov
js
bsf
jl
sub
aam
and
fnstcw
movsl
cwtl
sahf
lea
xchg
inc
repz
nop
lods
push
das
or
push
out
iret
jecxz
sbb
lea
mov
arpl
adc
aas
enter
lods
push
jmp
mov
pop
inc
ds
or
adc
mov
inc
into
dec
shl
and
inc
sbb
ret
xchg
repnz
in
call
sahf
sbb
fdivrs
xchg
mov
sti
jne
xchg
xor
cmp
sbb
stos
or
sbb
sti
cs
pop
aaa
sbb
enter
pushl
add
xor
xor
out
push
lret
lret
adc
mov
lret
add
in
test
adc
xchg
and
push
sbb
lea
lea
jb
xor
add
xor
pusha
jp
aam
add
xchg
imul
adc
hlt
jge
dec
ljmp
mov
xchg
jle
sbb
inc
mov
or
sub
test
push
aaa
or
enter
xor
cmpsl
ds
out
or
ds
adc
arpl
xchg
scas
das
cmp
mov
jbe
adc
xchg
inc
ds
stos
pusha
fmul
adc
and
in
lea
or
mov
insl
mov
insl
jle
lret
xor
sbb
mov
lcall
cwtl
sub
jecxz
stos
loop
push
call
fadds
sbb
adc
mov
pop
mov
aad
jle
xchg
mov
ror
lcall
mov
fcoms
push
enter
out
or
mov
sub
fbstp
cmp
push
out
jbe
xchg
xchg
mov
ljmp
ljmp
jb
mov
cmp
mov
jmp
test
sub
loop
insb
icebp
daa
lods
pusha
jmp
test
push
xlat
xlat
mov
mov
xor
fildll
dec
mov
xchg
arpl
gs
cmpsb
jge
fwait
popa
repnz
mov
lret
fsubr
lea
repnz
sbb
test
jmp
xor
mov
ret
aam
cld
mov
or
aam
lret
mov
cltd
sbb
fistpll
adc
xor
mov
add
daa
cli
xchg
adc
add
icebp
dec
and
fucomp
inc
gs
mov
sbb
je
xor
add
scas
ret
cmpb
ds
fidivl
repnz
ss
ds
pop
push
imul
int
rcrb
pusha
xchg
ret
cmp
inc
adc
sbb
mov
ljmp
lret
mov
ds
sub
inc
sti
dec
ljmp
insl
int3
cmp
xchg
mov
pop
movsl
adc
jecxz
push
push
jge
fwait
jmp
loop
lock
call
enter
nop
and
push
push
cmp
push
xchg
cld
sbb
ljmp
pusha
cmp
dec
fbstp
sub
pop
push
push
jo
cmpsl
jecxz
fs
cmp
and
inc
jo
int3
gs
jmp
mov
cmc
push
repnz
decl
push
dec
sub
movsb
das
and
fs
lcall
add
aad
ss
mov
repnz
insb
add
sub
add
aad
sbb
push
out
xor
push
mov
mov
and
cmp
jle
pop
sbb
dec
adcb
pop
adc
adc
add
pushf
sub
out
aad
in
push
dec
mov
add
iret
gs
cmp
pop
movsl
pop
jge
lods
jmp
jno
adc
push
imul
jl
movsl
les
std
dec
aam
xchg
dec
out
mov
mov
jo
cli
mov
xchg
push
cltd
lret
fisubl
lock
fimuls
imul
repnz
or
lds
daa
sbb
sub
mov
jecxz
loop
inc
xor
adc
std
push
sbb
ljmp
lret
add
jecxz
ret
inc
pop
enter
ljmp
add
jle
addr16
fucomp
imul
int
stc
cmpsl
repnz
mov
fs
cs
mov
pop
daa
mov
push
and
test
inc
pop
ljmp
mov
imul
ljmp
lock
rolb
lods
lret
pop
test
out
xchg
andl
add
mov
sub
mov
popf
sbb
xchg
les
test
add
sbb
decb
adc
rorb
subl
mov
rcr
xor
jg
sub
xor
mov
es
stc
out
mov
jae
and
or
dec
mov
fiadds
and
pop
fmull
cmp
mov
icebp
mov
leave
inc
popf
pop
mov
and
cs
cmp
sbbl
daa
dec
in
sub
push
repnz
rcr
popa
sub
fcomi
mov
sub
mov
les
jg
and
adcl
fcomps
pushf
pop
shlb
mov
mov
cmp
jecxz
jo
cltd
test
lea
xor
jp
sbb
arpl
arpl
stc
arpl
fcmove
test
lods
ret
cmpsl
and
enter
fcoms
int
sbb
xchg
dec
int
outsb
fcoml
mov
push
in
bnd
xor
lret
clc
xchg
adc
sub
aam
mov
lcall
xchg
ret
hlt
imul
sub
movsb
ret
jecxz
in
add
xchg
mov
test
cmp
push
stos
adc
pop
add
sti
clc
inc
loopne
mov
ljmp
sti
mov
cs
mov
add
out
dec
adc
dec
icebp
repnz
pusha
cltd
sbb
xchg
lret
cld
adc
lcall
cld
in
outsl
mov
enter
pop
arpl
lock
mov
push
jmp
repz
out
nop
ret
movsb
xchg
stos
pop
insl
jecxz
xor
pop
mov
decl
sub
cmp
mov
loopne
mov
inc
add
add
lcall
xchg
mov
pmuludq
cld
sub
das
dec
jb
xchg
push
and
dec
jp
push
fcmovne
or
into
xlat
shlb
mov
mov
xor
or
or
hlt
cwtl
fstl
fimuls
or
jo
mov
xchg
or
jp
or
or
jle
xor
insl
mov
das
aaa
int3
add
mov
sbb
lods
and
movsb
jecxz
push
push
daa
lock
dec
mov
mov
inc
xor
sub
pusha
cmp
pop
insb
cltd
out
mov
mov
pop
test
sbb
incb
push
ret
jge
mov
imul
mov
push
inc
jo
sbb
or
std
leave
inc
aad
shrb
rorl
mov
jle
mov
mov
ljmp
and
outsb
xchg
cmpsb
lret
xlat
xchg
movsb
mov
jle
cltd
lret
lock
lahf
in
std
ret
lods
jp
xchg
scas
or
cltd
in
pop
xchg
cmp
mov
call
sub
movsb
test
pop
sbb
or
jp
ljmp
inc
and
sub
adc
push
pop
loop
mov
or
add
mov
xor
push
pop
into
test
adc
xchg
rcrb
mov
inc
pop
into
fsubr
or
mov
xor
sbb
cwtl
push
stos
inc
or
mov
sub
fcomip
movsb
lea
pushl
or
sub
jle
pop
fwait
inc
fwait
sub
jo
insl
cli
mov
adc
jmp
cmc
nop
push
and
lret
adc
xchg
out
mov
add
mov
push
adc
push
sbb
pop
sbb
lcall
sbb
cs
pop
les
in
repnz
push
xchg
xchg
jp
or
push
icebp
or
das
ja
je
xchg
jge
icebp
xor
scas
rol
popa
sbb
or
mov
xchg
xorb
loope
or
mov
adc
pop
dec
fsubrl
jecxz
je
jecxz
cli
mov
and
jecxz
push
xchg
jecxz
cld
inc
movsb
lret
cli
test
je
cmpsl
jae
in
fwait
or
leave
and
addl
dec
mov
aad
push
xor
push
jecxz
xchg
gs
cltd
mov
lock
cmp
pop
inc
outsb
out
xchg
xchg
and
ss
andl
je
and
mov
das
lcall
in
pop
ja
cs
xchg
xor
lret
adc
mov
or
pop
dec
cltd
into
in
xchg
pop
adc
xchg
test
xchg
xlat
mov
mov
sub
movsl
fdivl
lret
repz
push
push
ds
jnp
cmp
popa
andb
or
xchg
cmp
jmp
or
adc
imul
cltd
repnz
stos
or
test
cwtl
imul
out
es
daa
cld
pop
dec
lret
lods
outsb
scas
sbb
inc
fwait
ds
cmp
fdivrs
ljmp
lahf
push
push
cmc
movsl
pop
test
repnz
out
jge
nop
cli
push
or
ljmp
aaa
pop
or
xchg
hlt
scas
inc
jnp
fcoms
lods
adc
addr16
movsl
out
sub
cmpsl
cmpsl
test
inc
fs
mov
rcll
adc
and
jne
push
add
xchg
cmp
aam
xor
cmpsb
lcall
sbb
stos
jl
movsb
xchg
imul
cs
sbb
mov
push
repnz
out
adc
jp
das
and
or
addr16
outsb
add
mov
pop
add
ret
sub
jns
pop
and
add
push
les
mov
push
aad
enter
ret
push
ret
xchg
loope
xor
jmp
imul
or
cmc
pop
aas
repnz
jp
push
push
movsb
jge
xchg
cmp
add
xlat
sbb
or
lea
ret
jne
mov
in
jne
mov
popf
repnz
or
pop
sbb
mov
in
shl
add
ficoml
ljmp
push
in
jae
push
adc
push
mov
push
loopne
add
fs
and
hlt
dec
jg
jp
and
and
inc
mov
push
ret
icebp
lds
loope
cs
das
imul
repnz
mov
add
jmp
pop
enter
iret
ds
ret
insb
stc
popa
xchg
adc
out
sub
sub
xor
pop
lods
xor
loopne
and
aam
out
xchg
arpl
and
xchg
jecxz
scas
push
mov
cli
es
push
out
loopne
movsb
cmpb
repnz
dec
ljmp
mov
mov
fs
add
mov
adc
sbb
loope
sbb
adc
mov
hlt
mov
pusha
xchg
jecxz
xchg
ja
leave
or
test
or
je
aad
dec
test
adc
pop
repz
les
push
add
or
sbb
into
cltd
das
sbb
sub
mov
push
sti
mov
shlb
imul
sbb
fwait
enter
push
daa
sub
dec
push
push
push
adc
push
movsb
add
jge
cld
xor
into
xchg
test
mov
push
mov
inc
or
mov
cmp
xlat
add
or
add
arpl
in
addr16
mov
ds
pop
adc
inc
test
mov
clc
jns
pop
cmp
addr16
inc
aas
jp
push
mov
push
mov
jbe
push
test
lahf
fsubrl
add
fsts
push
fs
push
dec
cmpsl
inc
cmp
push
insl
sbb
ds
pop
push
cli
nop
jecxz
or
mov
fdiv
jns
test
mov
out
ret
es
lcall
movsl
and
ljmp
repnz
aas
into
and
cmp
and
lds
cs
mov
push
xchg
xchg
addb
sub
stc
push
daa
icebp
int3
in
inc
jae
pop
imulb
mov
mov
adc
bnd
xchg
cmp
neg
mov
inc
nop
adcl
pop
mov
repnz
push
jg
pop
cli
dec
xchg
pop
or
popa
adc
push
rcll
bnd
or
sbb
sbb
jg
xchg
sub
jbe
mov
adc
cltd
pop
cld
adc
cwtl
inc
add
lret
mov
enter
shl
aam
dec
rsm
dec
fldl
out
push
cltd
ret
cmc
jmp
lcall
cmp
insl
ret
jecxz
cmp
xor
push
sti
lcall
sbb
test
test
sub
and
push
adc
jns
xor
pop
xlat
fstpt
mov
jae
pop
lret
es
mov
xor
sbb
xchg
popa
adc
adc
sub
cwtl
ss
or
arpl
repz
cltd
mov
inc
xor
lret
ret
xor
mov
xchg
jmp
rorl
cltd
scas
les
in
pop
test
adc
fstpt
ljmp
push
push
jl
sti
adc
outsl
mov
or
add
clc
lods
and
sti
movsl
xchg
out
and
sbb
sbb
and
xor
cmpb
movsb
inc
enter
mov
mov
fcmove
adc
and
int3
inc
or
sti
sti
ljmp
inc
shlb
sbb
and
or
add
jge
sub
testl
loope
add
adc
aas
mov
leave
fstp
jecxz
rcll
ljmp
fwait
lret
ja
andb
jno
sub
xchg
add
cmp
loopne
into
xchg
or
pop
popa
mov
add
fwait
mov
push
gs
ret
xor
xchg
add
mov
dec
jae
jns
mov
enter
mov
scas
pop
scas
sti
ss
pop
inc
adc
fcmovnbe
ds
sub
jp
xor
ds
insl
jb
lods
inc
sub
stc
mov
fldenv
repnz
xchg
out
mov
call
ds
and
jge
add
jg
cli
xor
movsb
jge
in
xchg
fwait
xor
orb
aam
add
jne
adc
test
mov
cltd
add
dec
push
clc
mov
stos
outsb
jno
push
adc
jnp
or
repz
in
xor
xor
jnp
repnz
xchg
add
sbb
in
sahf
stos
cmp
dec
mov
lock
ljmp
mov
pop
js
test
xor
xchg
sub
mov
add
aad
inc
arpl
push
aad
lcall
sbb
add
mov
mov
mov
aad
divl
and
push
dec
sarl
sub
mov
pop
sub
in
je
adc
stc
dec
adc
sarl
repnz
es
andl
push
ss
lcall
mov
mov
cmp
scas
add
dec
jg
xchg
cmp
inc
lea
adc
ds
push
sub
jno
out
add
ss
fistpl
fsub
mov
sbb
and
xchg
repz
stos
sub
mov
push
repz
xorl
subl
in
leave
inc
cmpsl
xchg
repnz
mov
lret
repnz
mov
push
fnop
fisubl
jbe
lret
push
les
in
jno
aad
cld
sbb
inc
push
jne
adc
ret
sub
pusha
hlt
xchg
ret
popf
out
mov
jl
insb
mov
or
iret
or
leave
ljmp
dec
and
enter
in
xor
jle
add
subl
adc
aad
sbb
ljmp
outsb
cmpsb
mov
das
sti
sbb
xchg
loopne
xchg
cmc
push
sbb
sbb
outsb
iret
pushf
sbb
outsb
cmpsl
test
add
jge
jbe
into
cmpsb
arpl
movsb
pop
outsl
das
out
cs
inc
xchg
mov
sbb
sbb
cmp
mov
subb
cmc
jg
add
sub
mov
xchg
sbb
ljmp
inc
mov
or
cmp
in
test
cld
jecxz
je
das
or
popa
shll
popa
fisttps
subb
dec
call
push
popa
inc
jae
dec
pop
jo
insl
orl
lods
or
js
cmp
repz
xchg
mov
cmp
outsl
mov
mov
or
addr16
call
or
fs
push
fs
sub
mov
inc
inc
mov
jl
test
fsubrl
mov
scas
xor
mov
push
push
adc
jo
aam
mov
mov
or
cmp
and
inc
push
arpl
sub
xchg
or
daa
ss
movsl
stos
fmul
xor
daa
xor
cmpsl
repnz
ret
sub
push
dec
jecxz
push
add
mov
ficompl
fidivl
or
inc
ss
test
decb
lock
aas
lret
pop
pop
cs
cmp
dec
jl
or
xor
pop
push
add
cs
or
jmp
push
sub
push
out
stos
push
fs
repnz
inc
adc
mov
sbb
cmp
xchg
add
mov
jne
dec
sbb
inc
adc
insb
lods
mov
in
mov
jnp
mov
test
adc
lret
mov
push
repnz
test
push
sbbb
js
dec
notb
and
nop
xchg
test
and
lcall
cmc
hlt
or
cmp
fidivrs
pop
inc
mov
sub
mov
adc
insl
adc
xchg
mov
out
jle
xchg
adc
test
add
sti
push
cmc
mov
cmp
cwtl
fs
sub
cs
jno
or
ret
imul
das
pop
cmpl
scas
mov
cmp
cli
shrl
jecxz
jb
das
dec
or
push
push
dec
ljmp
add
in
adc
pop
xor
cmpsl
push
ss
jnp
aam
sub
jno
jp
push
pop
mov
inc
das
add
sub
adc
movsb
push
dec
xor
jnp
pop
js
pop
add
sub
mov
out
mov
in
rol
movsb
or
sarl
add
mov
jmp
leave
test
int
mov
push
lods
mov
loope
push
inc
sbb
insl
je
pop
xchg
std
mov
add
popa
mov
mov
bound
out
incb
xor
jmp
outsl
xor
outsl
clc
mov
push
mov
aaa
repnz
cmp
mov
sub
pop
jnp
cmp
in
test
add
adc
fistps
repnz
mov
cmpsl
sub
sbb
testb
pop
mov
std
sbb
mov
pop
adc
push
ljmp
pop
mov
cmp
mov
or
pop
push
lret
std
push
or
sbb
fidivl
sbb
mov
or
xchg
testl
sub
jg
xchg
or
cs
mov
popa
jb
leave
insl
pop
inc
and
adc
lock
or
nop
js
sub
jp
ljmp
pop
xchg
sbb
leave
aas
pop
sbb
jge
cltd
addr16
aaa
packssdw
push
loop
mov
mov
je
or
xchg
jp
out
ja
shrl
shl
loope
xor
fdivs
jno
in
xlat
jnp
push
lret
push
cs
dec
and
or
test
sub
inc
mov
or
sub
xchg
lock
shll
jge
jo
inc
aaa
loopne
repnz
jae
popf
into
mov
repnz
push
pop
repnz
or
addr16
in
call
jge
stc
mov
arpl
lock
cs
dec
loop
adc
ljmp
popl
inc
sub
and
cli
orl
or
xchg
push
lods
push
mov
je
lods
out
sbb
inc
test
aaa
jecxz
je
inc
jns
fbstp
es
leave
lret
nop
or
adc
inc
mov
mov
call
xchg
sbb
movsl
iret
adc
shrb
sub
popa
jb,pt
stos
movsb
sub
jmp
mov
cmp
push
lcall
cld
pop
test
imul
xor
xchg
pop
clc
sti
mov
call
ljmp
pop
cmp
inc
insl
lret
sbb
repnz
jns
sub
sub
in
fs
dec
lret
out
outsl
sbb
sub
int3
or
es
dec
mov
jae
mov
adc
sub
mov
adc
mov
movsl
push
mov
arpl
mov
sub
loope
push
lea
das
pop
int3
repnz
xor
pop
mov
push
imul
adc
push
push
movsl
cmpsl
cmp
out
xchg
xor
or
lods
xchg
xor
mov
sub
mov
mov
jne
and
scas
pop
lods
jne
dec
inc
pop
iret
in
mov
or
and
cwtl
add
decb
scas
cmpsb
mov
pop
sbb
add
xor
mov
cli
je
popf
or
subl
jl
iret
outsl
mov
pop
in
loope
inc
dec
pusha
mov
push
icebp
inc
jl
stos
mov
inc
or
mov
add
decl
cld
adc
fmull
inc
xorb
sub
push
xor
pop
cltd
daa
and
std
out
mov
pop
xchg
cmp
nop
lahf
sub
xor
cld
ja
loop
adc
xor
out
lock
testb
cltd
loope
es
loope
outsl
sbb
xchg
sbb
or
dec
inc
pop
in
push
adc
sub
lock
push
aam
or
cmpsb
push
ljmp
mov
and
xor
mov
xor
scas
loop
sbb
aas
mov
mov
mov
ss
push
jmp
popf
bnd
subb
loop
jo
mov
stc
or
or
xchg
push
push
lea
rolb
inc
ret
scas
dec
sbb
sub
push
insl
fisttps
loop
dec
lret
push
jmp
fsub
lret
mov
pop
pop
or
ffree
icebp
loope
ja
movsb
push
add
in
adc
jmp
adc
sbb
mov
fdiv
mov
mov
mov
fcoms
enter
adc
adc
inc
or
cmp
push
xlat
hlt
sbb
jno
data16
rdtsc
xor
aad
outsl
movb
iret
add
ds
daa
mov
jmp
mov
push
and
scas
inc
jecxz
sbb
dec
push
insl
lcall
pusha
mov
in
stos
iret
das
mov
ljmp
or
lret
int
and
push
fwait
repz
imul
and
call
push
cmpl
xlat
jge
adc
out
mov
inc
mov
xchg
iret
fadds
sub
shlb
cmp
loope
xchg
xor
push
jae
mov
jge
stc
arpl
adc
enter
mov
gs
divl
out
imul
imul
cmp
mov
cmp
nop
sub
jo
out
pop
stos
mov
jecxz
out
stos
in
addr16
movb
in
sbb
ja
rcll
pop
loop
leave
imul
shrb
mov
mov
mov
stc
mov
mov
mov
mov
push
lret
fnstsw
push
pop
adc
repnz
gs
test
push
aas
xchg
mov
sub
xchg
daa
mov
jb
mov
or
ljmp
cmp
in
adc
mov
repz
repnz
mov
shrb
fmulp
mov
addr16
lock
aad
adc
mov
cmc
in
arpl
pusha
sbb
add
mov
dec
repz
movsb
pop
fimuls
dec
leave
inc
cmpsl
push
pop
imul
xchg
adc
cld
adc
testl
aas
pop
and
insb
adc
ret
cmp
adc
test
call
pop
jl
sti
jge
popa
in
sbb
popf
shrl
push
xor
mov
cmpsb
xor
sub
js
decb
sub
pop
call
mov
leave
ds
stos
sub
cs
and
add
scas
sub
add
sbb
and
adc
jg
repnz
dec
aas
push
nop
adc
stos
fs
inc
mov
push
cmpsl
pusha
call
add
jbe
adc
cld
add
jmp
daa
push
sub
fs
repz
fs
fsts
add
test
xchg
test
jae
or
push
out
xchg
inc
dec
scas
sub
stos
pop
stos
jge
repnz
mov
daa
mov
movsl
mov
cli
das
adc
mov
pop
xlat
loopne
inc
pop
add
mov
enter
into
jb
enter
decb
shl
jge
push
sbb
sub
and
fdivrl
xchg
mov
add
call
or
sarl
dec
sbb
inc
xlat
and
mov
xor
dec
pop
stc
sub
sti
jmp
sbb
ret
mov
and
and
leave
inc
vandnpd
jo
sbb
stos
adcb
out
inc
pop
stos
xlat
xchg
add
std
cs
dec
inc
pop
push
push
cs
sbb
sub
rcll
lods
inc
lret
push
xchg
sub
daa
repnz
rolb
xor
icebp
cwtl
or
je
mov
les
push
dec
js
repnz
scas
fildll
sahf
sbb
add
inc
je
mov
sbb
repnz
ret
mov
and
mov
push
test
pop
out
sbb
inc
mov
sbb
xchg
or
dec
int
cld
cmp
jno
jns
dec
inc
mov
iret
pop
xchg
lds
in
repnz
outsl
xchg
lds
xor
cwtl
jle
push
inc
fprem
mov
or
fcmovnbe
iret
lods
pop
jecxz
stc
jmp
lods
loope
adc
rclb
fucomip
fistpll
fidivrs
or
repnz
jle
mov
inc
mov
mov
or
sub
pop
lret
ret
sub
xchg
xchg
lret
mov
jecxz
shl
js
add
cmp
sub
lret
rorl
cmp
sub
rorl
rcrb
cmp
inc
decl
imul
push
or
jecxz
add
shlb
mov
cwtl
js
daa
dec
mov
add
pop
test
push
sub
hlt
cld
es
repnz
dec
fimull
fiaddl
sahf
das
inc
sbb
xor
mov
repz
clc
and
and
negl
std
add
add
insl
lret
mov
dec
inc
ja
frstor
ds
sub
sub
xlat
test
fiaddl
aas
icebp
jne
pop
cli
ret
sub
push
mov
stc
popa
les
outsl
mov
ja
push
and
outsl
lahf
jno
cmpsl
mov
mov
mov
loop
mov
adc
xor
adc
pop
push
leave
xchg
mov
pushf
xchg
sub
mov
adc
jp
sbb
mov
shrb
mov
adc
insb
mov
test
test
sub
out
lret
test
or
repnz
push
outsb
adc
mov
adc
js
xchg
stos
insl
pusha
movsb
adc
add
mov
adc
mov
loop
lret
dec
idiv
xchg
ljmp
cmp
stos
repnz
cmpl
fwait
mov
movsl
pop
jg
loope
sub
add
push
cmpsl
orb
jb
fcoms
mov
sub
inc
rcll
inc
sarl
test
xor
or
jle
iret
int3
shr
data16
testl
jne
rcl
in
inc
adc
mov
mov
mov
sub
outsb
sbb
sar
mov
inc
popa
jnp
jnp
nop
fldcw
lret
adc
push
ljmp
lods
divl
ja
cs
ss
xor
or
imul
pop
ficompl
and
or
or
and
pop
mov
adc
icebp
or
add
xor
pop
test
ds
lds
lods
add
add
inc
adc
jecxz
nop
leave
sbb
stos
movsl
pop
out
xor
lret
and
inc
push
xchg
ficompl
das
xor
insb
test
or
fwait
mov
dec
pop
xchg
xchg
push
sub
leave
mov
mov
inc
jo
dec
fwait
mov
xchg
daa
data16
test
adc
cwtl
cmp
adc
push
ja
xchg
cwtl
ficoms
mov
int
jl
jne
stos
popf
fsubrl
pop
fsub
movsb
mov
jne
sbb
stc
pushf
dec
jecxz
rcll
push
xchg
fs
loope
loopne
insl
jae
xchg
add
or
les
subl
lret
and
lahf
ljmp
clc
sbb
ljmp
dec
lcall
not
test
rorl
cmp
dec
sub
ret
aam
adc
shll
sbb
movsl
jecxz
scas
movsb
ja
sbb
outsb
cmp
xlat
lret
mov
dec
outsb
and
mov
mov
loop
or
into
dec
in
sbb
dec
lock
push
loope
adc
add
and
popf
test
lds
test
jne
add
repz
mov
pop
icebp
xor
lds
add
aad
mov
push
adcb
cmpsl
adc
cwtl
xchg
loope
insb
mov
lret
in
and
xor
and
and
cmp
adc
subl
sti
jecxz
fwait
mov
mov
scas
lea
movsl
pop
sahf
movsb
repnz
cmpsb
inc
pop
mov
lret
or
stc
xchg
insb
cld
cmpsl
pop
add
mov
mov
jae
cli
add
ret
nop
sub
xchg
scas
movsb
and
jl
loope
rorb
sahf
xor
insb
mov
sbb
ja
dec
mov
lret
sbb
incb
xor
jb
mov
out
lods
test
dec
scas
mov
mov
mov
sarb
xor
sbb
jo
add
imul
das
icebp
adc
inc
sub
lods
xchg
mov
and
out
and
js
repnz
xor
dec
rcll
pop
sub
scas
and
int3
nop
and
xchg
push
scas
dec
fsubrl
imul
or
inc
sbb
cld
cmc
stc
test
aam
lret
daa
push
lcall
sub
adc
fstpt
sbb
or
shll
mov
stos
push
xchg
test
xor
int3
mov
xchg
xor
inc
lret
test
sbb
cltd
dec
mov
call
das
loope
arpl
or
movsb
push
jle
inc
lcall
std
pop
lret
imul
popa
sbb
inc
push
sarb
xor
mov
in
jo
and
adc
leave
test
mov
repnz
jae
add
inc
mov
jmp
mov
dec
sub
lret
ljmp
mov
roll
inc
mov
imul
mov
mov
pop
test
cmp
jae
scas
rcl
mov
push
push
fs
mov
movsl
movl
push
out
xlat
bound
outsb
or
jb
jecxz
dec
dec
les
add
mov
xor
mov
lret
outsb
cli
cmp
lcall
push
fistpl
arpl
mov
xchg
xchg
adc
test
outsl
inc
pop
jecxz
push
jnp
cltd
inc
mov
addr16
adc
hlt
mov
loope
xchg
cltd
mov
call
sub
and
aad
shl
or
cmp
inc
mov
push
mov
xchg
push
xor
dec
adc
xchg
nop
add
bnd
fsubrl
or
jns
jne
shll
ljmp
and
push
imul
sbb
scas
ljmp
fcomps
mov
pop
sbb
lret
xchg
jle
jbe
faddl
aam
mov
push
mov
repnz
flds
insl
or
lcall
cmp
je
das
fwait
mov
nop
jl
jb
xchg
add
in
sbb
push
adc
sub
movsb
dec
sub
lahf
dec
adc
xchg
or
add
jge
in
xchg
sub
adc
incb
repnz
popa
mov
lods
xchg
push
fwait
or
or
pop
fstpl
arpl
iret
daa
ret
and
mov
mov
dec
mov
or
mov
adc
out
js
xlat
push
inc
arpl
nop
dec
shll
ja
xchg
jl
in
mov
or
sub
cmp
les
push
push
cmp
lret
sub
outsb
mov
int
push
pop
add
loop
outsb
ss
imul
clc
inc
inc
pop
out
ljmp
jp
loopne
repnz
sbb
ljmp
shll
dec
push
mov
mov
sbb
test
lock
adc
and
mov
adc
push
adc
mov
pop
pop
jno
or
mov
std
sbb
repnz
cmp
jmp
repnz
scas
and
arpl
ret
shll
add
inc
push
xor
movsl
cwtl
neg
mov
pop
mov
sbb
lock
inc
sbb
push
jmp
cmp
enter
lgs
repnz
push
add
sbb
add
shrl
repnz
cmp
jb
or
xchg
cmp
push
adc
inc
mov
xor
bound
mov
adc
mov
cwtl
add
pop
lret
sub
xchg
xor
or
jmp
iret
scas
in
adc
jne
adc
jmp
fs
test
repnz
and
inc
test
lods
pushf
sbb
aam
sbb
rcrl
orb
sub
or
in
mov
xchg
int3
lods
ljmp
xlat
iret
xchg
popa
inc
mov
sub
jne
add
lret
test
inc
push
push
decb
sub
pop
add
jge
jl
sti
je
insl
scas
pop
imul
sub
jl
scas
fwait
dec
fdivl
and
pop
fdivrl
xchg
mov
xor
out
pop
pop
adc
cmpl
pushf
cmc
dec
movsb
and
push
aaa
and
sub
nop
shlb
int3
ljmp
jo
ljmp
cwtl
mull
icebp
cmpsl
lret
mov
fcom
jb
stos
add
mov
mov
adc
xchg
pop
mov
jg
mov
jmp
imul
mov
movsb
add
orb
adc
stc
jns
rclb
pop
or
stos
push
sbb
test
push
in
or
repnz
out
orl
das
push
push
sub
mov
sbb
aas
push
mov
leave
sub
xor
jge
jnp
shr
mov
jbe
sbb
imul
sub
xchg
fs
mov
mov
mov
add
mov
sbb
enter
add
jns
popa
mov
xor
nop
and
mov
adc
mov
jmp
mov
sar
mov
adc
out
mov
int3
movl
dec
cmp
hlt
lods
jge
sbb
sbb
add
fs
iret
repz
inc
add
rol
hlt
fidivrl
popf
adc
divl
add
adc
stc
lods
popf
in
and
inc
imul
aaa
xchg
xchg
lret
mov
pop
xchg
mov
shrb
pop
cmp
and
xorb
sahf
sub
lds
push
xchg
fildll
iret
repnz
sub
insl
pop
hlt
xor
fwait
aas
sub
cmpsl
push
xorb
jbe
lea
sub
adc
pop
arpl
xchg
mov
jg
push
test
adc
or
and
ljmp
sbb
aas
and
xchg
and
dec
push
subl
rorb
jmp
loope
pop
pop
jecxz
adc
jnp
jmp
rcrb
jo
cmpsb
mov
sub
int3
insb
pushf
push
aaa
into
lods
ret
mov
jae
mov
ret
outsb
mov
sbb
pop
leave
push
jbe
repnz
mov
insl
jno
pop
pop
fmul
sti
xlat
sahf
xchg
sub
unpcklps
and
movsb
and
lods
test
xor
xchg
cltd
sbb
lret
cmp
or
imul
mov
fsub
addps
adc
adc
mov
arpl
mov
lea
stos
xor
sub
test
and
movsb
dec
fs
pushf
test
inc
push
outsl
mov
les
push
lcall
or
and
shll
or
and
call
pushf
adc
out
insb
insl
cli
sub
or
sbb
jb
imul
lret
in
push
pop
jle
jae
pop
out
jge
lcall
cmp
dec
sahf
rolb
xchg
inc
movsl
mov
int3
repnz
pop
cmp
sub
stos
mov
sub
test
and
stos
arpl
sbb
mov
idivb
std
loope
pushf
or
or
js
jg
mov
test
push
sbb
addr16
jle
out
fisttps
add
rcrl
or
or
inc
add
les
cmp
mov
ljmp
outsl
sbb
loope
lret
mov
mov
jge
mov
xlat
cs
jecxz
dec
xchg
ret
or
xchg
nop
je
jae
mov
inc
cs
pop
mull
jmp
xor
ja
push
and
inc
add
adc
out
ret
or
out
and
and
movsb
imulb
add
pop
inc
rcrb
idivb
add
cltd
in
push
jb
and
push
sub
dec
push
lock
sub
jle
lock
mov
addr16
jae
cmpb
sbb
fwait
xchg
inc
dec
into
xchg
lret
lcall
add
js
push
mov
jle
outsl
imull
repnz
add
sbb
cmp
jecxz
sahf
sub
nop
mov
mov
dec
push
out
sbb
aaa
mov
test
lods
sbb
iret
mov
jge
out
sub
push
inc
faddl
dec
lock
xchg
or
mov
bound
fs
sub
into
xchg
pop
std
rol
and
dec
adc
jp
pop
enter
aaa
xchg
incb
pop
fs
sub
or
in
je
mov
lcall
inc
jmp
js
test
inc
push
inc
scas
repz
push
pop
test
int
daa
push
adc
ret
cli
fstl
inc
out
mov
dec
lock
dec
mov
sub
mov
adc
lret
aas
or
xchg
scas
in
xor
cltd
xchg
ljmp
cmp
mov
inc
and
inc
insb
jnp
popf
pop
adc
shll
aaa
dec
sub
or
jbe
mov
inc
sahf
push
imul
jo
repnz
or
imul
in
sbb
lret
repnz
inc
push
inc
jge
movsb
or
mov
jge
pop
insl
jne
arpl
pop
xor
xchg
sub
jmp
mov
movsb
outsl
push
shr
es
jle
mov
sti
mov
sbb
fcmovnbe
arpl
sbb
jb
ljmp
jge
stc
mov
stos
sub
xchg
jge
sbb
cli
mov
jecxz
mov
xlat
pop
sub
mov
andb
gs
fidivrl
or
mov
cmpsl
shr
xchg
mov
repnz
loop
insl
fsubrs
push
push
or
sub
xor
and
xchg
pop
jge
pushf
sbb
cwtl
sbb
repz
popa
clc
mov
xchg
mov
sahf
js
fcmovu
inc
daa
outsl
ja
jle
sub
sub
dec
pop
mov
loope
xchg
jg
in
lcall
fstpl
inc
fwait
setns
inc
add
inc
mov
pop
xchg
pop
jne
hlt
xchg
test
sbb
add
jb
mov
jmp
or
xor
push
std
jecxz
jle
lret
cmp
sbb
dec
roll
mov
loop
mov
mov
adc
andb
popf
jle
fstps
in
ret
and
mov
mov
and
popf
or
mov
repnz
popa
data16
ljmp
outsb
fsubl
mov
pop
pop
enter
xchg
dec
xchg
aas
xor
push
clc
inc
loope
inc
stc
or
push
mov
sbb
mov
lcall
adc
push
cwtl
mov
ljmp
mov
sbb
mov
cmc
xchg
mov
fs
andb
cmp
mov
and
push
sahf
cmc
imul
adc
cmp
xor
stc
mov
xlat
xor
inc
hlt
xor
dec
ret
outsl
jnp
sbb
mov
mov
pop
xor
mov
jo
and
dec
js
sbb
jg
xchg
sahf
ret
insb
jbe
outsl
xchg
lcall
insl
mov
popa
test
fcom
jno
dec
inc
xor
and
adc
cmp
push
adc
inc
out
test
push
mov
mov
scas
cli
rcll
cmp
repnz
lds
mov
call
inc
xor
push
scas
stc
stos
out
fsubs
call
xor
je
rorb
cld
pop
xor
stos
xlat
inc
pushl
and
sub
dec
adc
aam
lahf
push
out
or
aam
push
mov
sub
xchg
cmp
mov
push
aas
push
xchg
adc
movl
mov
rcrb
inc
jge
inc
or
out
adc
adc
jp
nop
mov
out
aad
into
jnp
aad
ljmp
mov
or
int
lret
cmp
push
mov
pushf
or
mov
xor
jnp
sbb
mov
mov
adc
jle
sbb
and
int3
and
push
movsb
lods
call
adc
mov
pop
mov
inc
mov
xlat
adc
dec
pop
push
push
add
and
insb
sbb
xor
scas
repnz
xor
mov
js
pop
cmp
lds
shlb
lock
lahf
aam
ret
sub
movb
repnz
sbb
mov
sahf
in
jle
sub
daa
add
xchg
addr16
mull
cld
popf
or
mov
ss
xchg
mov
xor
and
push
and
add
ja
test
stc
adc
aas
cltd
cmp
or
test
lods
mov
cmp
or
lret
out
ror
and
jno
mov
or
push
insb
repnz
fucom
loop
scas
lcall
xchg
daa
and
aam
arpl
jmp
sti
cltd
cmp
loop
paddsb
punpckhdq
popa
rorb
fsubrl
std
or
int
mov
cmc
stos
repnz
push
ljmp
sub
cmp
pop
xor
enter
dec
notl
les
xorl
inc
xor
inc
lods
mov
repnz
mov
inc
push
ljmp
jecxz
mov
sub
sbb
fs
mov
sub
cmpsb
xchg
cltd
fldt
movsb
lcall
fsubl
or
dec
jmp
sarl
xor
sub
inc
aas
sub
inc
xor
xor
cmp
push
push
shrl
test
or
pop
dec
clc
adc
nop
pop
jl
cmpsb
xchg
add
adc
push
enter
fistps
movsl
push
push
jp
mov
adc
daa
insl
xor
xchg
xor
aad
ljmp
lret
shl
jb
cmpsb
adc
and
push
sub
daa
xchg
arpl
pop
loope
cmp
cmpsl
adc
sub
fldcw
insl
jl
call
cli
lods
dec
sbb
sub
push
adc
add
sub
and
lds
loopne
push
inc
jle
add
pushf
jo
sbb
mov
notl
lret
adc
jmp
mov
cmp
jle
jmp
outsb
push
push
loop
dec
push
je
call
and
test
in
xchg
sbb
and
repnz
sbb
xchg
jle
pop
shrl
jne
aas
pop
sub
mov
daa
adc
xor
aas
xor
or
inc
adc
sbb
fcmovnbe
mov
push
pushf
enter
push
movsb
xor
sub
cwtl
cmpb
sub
mov
lock
popa
imul
insb
shr
or
leave
inc
lcall
inc
inc
xchg
insl
and
dec
fldenv
lret
out
stos
aaa
mov
or
cmp
push
xor
fstps
and
pop
shlb
adc
jno
or
xor
inc
inc
mov
mov
sbb
cld
adc
xchg
sbb
jbe
cld
mov
sbbl
xor
shld
das
repnz
sti
fs
imul
cld
and
mov
xorb
mov
out
mov
lahf
xlat
sbb
mov
fimull
push
mov
push
xchg
lret
xchg
imul
adc
xchg
jecxz
mov
insl
clc
fisttpl
imul
repnz
inc
sbb
leave
aad
ja
out
out
stc
mov
sbb
insb
repz
xchg
aam
enter
pop
xchg
or
pop
clc
mov
sub
arpl
fcoms
stc
addr16
and
mov
es
pop
aad
mov
jns
sub
and
imul
or
inc
or
sub
push
mov
adc
mov
ror
xchg
testb
mov
pop
imul
lret
or
or
add
pop
stos
sbb
sbb
sbb
dec
sub
fsubrp
loope
sub
cmc
dec
mov
test
clc
loope
cld
mov
inc
push
sub
outsb
repnz
mov
mov
stos
addb
cmpsb
std
sub
dec
cld
adc
loop
rclb
pop
fs
aaa
movsb
xor
dec
jo
push
xor
pop
outsb
or
ljmp
push
ljmp
out
or
shrb
mov
lea
in
cmp
xchg
mov
xor
push
or
ss
repnz
xchg
jb
repz
gs
inc
push
cmp
aaa
adc
sub
sahf
aaa
inc
call
pop
outsl
fs
xor
jecxz
inc
mov
les
inc
enter
pop
push
ret
repnz
or
bnd
les
std
mov
cmp
icebp
loope
cmpsl
add
movsl
xor
cmp
mov
stos
arpl
into
sub
ljmp
sub
mov
ret
mov
or
sub
repnz
jnp
cmp
or
sub
and
adc
jno
xchg
ja
pop
fistpl
or
dec
mov
add
nop
stos
cltd
inc
push
test
ljmp
pop
aam
enter
mov
adc
xlat
fstpl
jg
js
cmp
outsb
popa
jl
inc
lock
div
lods
mov
xor
pop
leave
cmp
in
xchg
jge
sub
or
sub
push
repz
in
cli
das
xor
lds
mov
sbb
fs
pop
sub
dec
jge
fisubrs
pop
outsl
sbb
mov
imul
jne
fldt
jg
pop
addb
or
stos
dec
icebp
xchg
mov
pop
das
adc
stos
js
aam
dec
mov
sete
cmpb
bnd
test
jnp
mov
mov
pop
or
test
stc
aaa
mov
xchg
cmpsl
adc
add
dec
add
inc
sbb
dec
xor
adc
test
lock
jg,pn
jp
push
jae
cmp
lret
js
int3
insl
add
idivb
or
sub
sbb
hlt
or
stos
mov
push
loope
es
fstps
lock
sarb
test
data16
stos
scas
movsb
negb
adc
jl
and
jno
jl
jns
ret
test
jno
sbb
mov
mov
mov
lcall
ds
sbbb
adc
int3
mov
hlt
cmp
add
inc
out
and
pop
inc
fdivrs
or
cmp
add
shlb
dec
xchg
insb
imul
cwtl
std
ja
divb
or
push
xchg
xor
pop
and
cmpsl
adc
or
sbb
sub
vpsubd
adc
sub
sar
add
inc
insb
mov
outsl
xchg
movsb
cmp
sbb
es
ss
xor
loop
cs
mov
or
fstpl
movsb
push
adc
cs
sub
inc
sbb
adc
push
loope
adc
mov
jg
or
outsb
and
ret
or
push
pushf
cmc
jmp
jmp
insb
jle
inc
mov
fsubrl
sub
pop
clc
pusha
cmp
mov
shlb
adc
cmp
nop
arpl
sbb
jmp
inc
jnp
fwait
push
ret
test
jo
xlat
je
test
mov
mov
jg
add
dec
mov
mov
or
repnz
lods
cmp
pop
daa
enter
repnz
cmp
mov
jl
cmpsb
mov
add
or
test
jecxz
and
pop
mov
jmp
dec
fcomp
enter
outsb
add
cltd
lds
sub
jns
cmp
lcall
xchg
sbb
rcrl
cmp
xor
lods
mov
insb
mov
lret
repnz
int3
popf
out
mov
fcmovb
xchg
mov
iret
fwait
mov
or
jg
sarl
cmpsl
push
mov
fmull
das
je
cmc
clc
aaa
pop
js
jle
mov
xchg
shll
insl
scas
add
sub
dec
dec
les
and
cwtl
cs
push
cli
push
push
mov
fs
ret
xor
lret
imul
les
sub
jmp
mov
int3
fstps
mov
mov
addr16
int3
inc
cmpsb
adc
in
out
adc
rcll
mov
cmc
ds
out
int
inc
fdivr
sub
add
sbb
lret
test
repnz
ljmp
mov
sbb
imulb
inc
testl
repnz
aad
sub
sarl
and
xor
movsb
hlt
pop
inc
lret
fwait
dec
xchg
or
cmp
inc
lret
aaa
jae
popa
jb
aam
inc
sub
xchg
sub
enter
test
cmpsl
andb
scas
xor
jg
call
out
addr16
js
faddl
lods
sbb
dec
pushf
dec
adc
sub
jl
mov
xchg
push
jo
scas
cmp
inc
addr16
call
and
mov
cli
rcrl
inc
sub
sub
cmp
jne
and
inc
mov
sbb
aaa
push
pop
shlb
push
arpl
or
sub
adc
mov
popa
ret
adc
sti
loope
pop
into
or
add
mov
cmp
cmc
aaa
xor
call
repnz
movsb
xchg
xor
sbb
ds
mov
sub
aas
jnp
mov
jge
call
push
mov
jge
sahf
jbe
cmp
jl
push
daa
cmp
xchg
inc
mov
pop
fsubs
xor
pop
push
or
push
sarb
push
fs
lds
cmpsl
push
aaa
push
push
je
xchg
mov
pop
sbb
cld
sbb
lods
movsb
and
push
rorb
in
push
lods
sub
and
mov
mov
int3
js
inc
outsl
into
add
call
movsl
push
xor
sbb
jb
inc
insl
or
push
repz
mov
sar
scas
cmp
shll
cltd
outsl
outsl
lcall
sbb
test
fs
jo
cmp
repnz
xor
fwait
inc
test
dec
push
ja
inc
std
int3
icebp
repnz
pcmpeqw
repz
sub
std
gs
pushf
scas
out
push
sub
or
rorb
mov
mov
ds
ret
js
sub
cli
dec
sub
test
push
pop
mov
add
sub
dec
lret
and
xor
cltd
rorl
lcall
jecxz
in
pop
cmp
lret
mov
push
nop
mov
inc
xor
clc
dec
push
push
xor
adc
jecxz
adc
outsb
mov
mov
xchg
cmp
push
loope
adc
xchg
gs
push
push
jb
and
jmp
xor
push
lahf
je
push
scas
fsubrs
scas
adc
pop
popa
ljmp
mov
add
dec
loope
dec
imul
push
and
shlb
and
mov
dec
pushf
pop
push
or
cwtl
pop
adc
in
lret
inc
outsb
mov
and
outsb
cltd
addr16
jle
mov
movsl
cmp
mov
or
and
xchg
scas
in
adc
push
rcll
add
push
mov
add
cmp
stc
movsb
mov
ror
sbb
push
punpcklwd
jbe
sbb
mov
ret
loop
xor
adc
test
fnclex
into
cmp
test
mov
stos
repnz
pop
push
js
inc
jmp
std
or
das
clc
mov
shlb
repnz
shl
sbb
leave
and
pop
cld
sub
aam
mov
mov
sub
aad
scas
jne
pop
rorl
add
les
dec
cld
mov
add
sti
mov
loope
dec
xchg
pop
cwtl
or
adc
xchg
scas
sbb
jmp
mov
or
loopne
int
cmpsl
push
test
sbb
xor
cmp
mov
or
imul
xor
test
shll
push
lahf
cmp
sub
cmp
fidivrl
stc
mov
or
out
mov
push
notb
mov
aad
mov
inc
arpl
stc
jne
ljmp
lock
or
cld
adc
out
and
ftst
jae
insl
insl
or
js
push
imul
dec
test
pop
xchg
or
mov
jg
jl
out
jnp
jg
push
sub
test
adc
pop
aas
psrad
int
fdiv
cmp
lods
les
xchg
lock
cmp
enter
sbb
jns
das
sbb
inc
js
sub
push
arpl
mov
push
sub
rcr
or
add
hlt
adc
mov
sbb
ja
test
adc
push
fwait
mov
push
mov
sub
push
xchg
sub
or
mov
test
cs
push
enter
adc
mov
dec
fs
cli
bound
scas
mov
ja
movsb
or
add
mov
and
popa
xchg
sub
repnz
push
pop
jmp
aam
insl
lret
and
pop
push
jb
outsl
aaa
das
add
sub
dec
test
jle
mov
xchg
lods
movb
adc
push
lods
movsl
mov
je
sbb
test
mov
push
lock
jecxz
or
shrl
sub
out
inc
outsl
sbb
out
cmc
das
lret
repnz
bnd
add
inc
adc
pop
jb
lock
mov
push
xchg
std
add
push
and
cmp
xchg
or
das
das
fcmovne
jl
stos
cmp
arpl
push
aad
mov
mov
dec
inc
add
add
andnps
push
test
arpl
mov
xchg
cli
sbb
push
orb
xor
adc
test
loope
mulb
scas
into
test
mov
jnp
ljmp
xor
cs
sub
add
or
add
xchg
ljmp
loopne
sbb
repz
pop
movsl
lret
push
jae
pop
xchg
fnstcw
cmpsb
add
lock
sbb
pushf
or
mov
push
dec
sub
push
jns
movsb
shl
mov
enter
sti
and
or
and
sbb
add
push
in
hlt
fincstp
pop
push
iret
lds
add
jb
sub
sub
call
sahf
jge
cmp
jmp
mov
int3
out
pop
leave
fstpl
scas
push
cmp
outsl
insb
jne
inc
jbe
std
fs
pop
jne
aaa
and
xchg
mov
push
fs
fwait
sar
inc
stos
subl
xchg
xlat
negb
ljmp
testb
and
pop
popl
cwtl
sub
in
xchg
or
pop
push
xor
sbb
stc
sbb
sahf
push
xor
daa
mov
lcall
xchg
pop
cmpb
or
movsl
sbb
lcall
cmp
enter
mov
cld
mov
test
xchg
rcrb
cld
and
cmp
jl
pop
add
call
jecxz
sub
sbb
jb
movsb
lea
jge
mov
and
mov
pop
aam
aas
js
add
and
sub
sub
arpl
mov
adc
lahf
dec
mov
or
mov
mov
out
sbb
jne
repz
and
inc
or
mov
shlb
test
push
mov
icebp
movsb
movsb
ffree
fsts
stc
daa
orb
out
push
lds
test
mov
repnz
test
xchg
jge
bnd
ja
sbb
lcall
out
leave
jns
out
popa
or
mov
add
push
call
lds
loope
mov
idiv
pop
les
ror
mov
pop
lock
outsb
sub
and
outsb
aad
andl
es
pop
inc
adc
lcall
lea
repz
ficompl
sbb
or
cmp
push
adc
xor
enter
add
adc
test
pop
jecxz
cs
aaa
mov
imulb
xchg
sbb
xor
bound
xchg
loop
mov
jmp
pop
das
fildl
or
out
inc
sarl
jecxz
out
lret
adc
inc
mov
rcrl
or
mov
pop
pop
out
cmpsl
adc
jnp
cmpsl
pop
or
xor
pop
mov
hlt
aas
sbb
sub
mov
dec
clc
mov
arpl
out
sub
dec
loop
out
jl
js
mov
outsb
jge
dec
ret
jae
or
cmpsl
mov
cli
lahf
push
lds
pop
cmp
repnz
ficomps
mov
xlat
mov
adc
adc
shrb
cli
cld
pop
out
je
jb
addb
adc
in
into
fdivrs
push
sbb
jns
or
in
ror
and
cmp
cwtl
pop
xor
jg
xor
sub
push
push
loop
sbb
subl
aaa
jns
pop
aam
fistl
popf
outsl
xor
add
adc
sbb
cltd
and
push
jne
mov
out
xlat
scas
mov
call
insb
pop
cltd
xchg
iret
push
inc
cmpb
sbb
sti
dec
xchg
dec
jle
in
mov
xor
jne
pop
and
cmp
sbb
into
jbe
inc
shll
mov
cmpsl
testb
cmpl
sbb
pop
dec
xchg
push
jo
mov
cli
bound
das
sub
push
lcall
and
lds
sahf
add
test
pop
jecxz
xchg
cmpsb
inc
pop
adc
sahf
xchg
jbe
lds
xchg
cwtl
pop
dec
insl
xor
sbb
jmp
xchg
ss
repnz
and
pop
imul
pop
outsb
aas
sbb
jmp
fdivrs
sbb
lock
iret
in
daa
sbb
sbbb
adc
adc
test
scas
scas
int3
daa
push
mov
sub
repnz
adc
xchg
add
leave
and
jne
ss
jb
jbe
jae
sarb
shlb
jno
inc
addr16
loopne
adc
mov
ror
ljmp
push
mov
xlat
scas
mov
lock
ljmp
mov
clc
scas
pop
pushf
xor
cmc
or
xor
add
mov
inc
outsb
add
or
push
push
ss
iret
frstor
repnz
lret
ret
cmpsb
inc
push
pop
in
arpl
pop
mov
std
push
lret
pop
lcall
stos
sub
cmp
sti
or
mov
pop
ljmp
roll
and
loope
rolb
adc
aas
jb
push
xor
xchg
mov
faddl
xchg
test
sbb
and
inc
sub
test
loope
mov
cld
or
sbb
xchg
push
idivl
push
pop
adc
jb
xchg
loope
ss
sub
push
pop
daa
imul
fsubrs
notl
pop
repnz
adc
in
das
and
lret
and
lods
jp
mov
xor
dec
nop
sarl
insl
pop
jo
ds
and
adcb
push
movsb
jb
les
mov
das
cmpsl
imul
mov
inc
out
mov
jecxz
sahf
je
and
arpl
sub
scas
lods
push
popa
jg
sbb
mov
cmp
push
or
mov
insb
out
jecxz
das
aaa
movsb
into
das
hlt
ss
addr16
clc
cmp
sub
mov
cmpsl
adcb
ja
andl
test
inc
data16
repnz
aas
jno
pop
lods
mov
or
jo
push
movl
aam
loopne
frstor
xchg
pop
lods
stos
lea
lret
xchg
pusha
adc
aas
bswap
movsb
mov
mov
lret
and
cltd
xchg
fwait
inc
sbb
pop
pop
add
xor
out
aam
popl
fwait
cmp
jecxz
icebp
mov
test
xchg
xor
and
mov
fsts
loope
pop
subl
adc
rclb
mov
pushf
scas
ljmp
adc
mov
insl
mov
adc
and
xor
pusha
mov
mov
dec
cli
test
adc
mov
es
xor
in
xchg
jbe
das
pop
out
lcall
jg
adc
aaa
and
jl
mov
sub
cmp
imul
iret
sbb
mov
fwait
jle
and
test
jg
scas
adc
xor
inc
jae
pop
hlt
pop
mov
div
sti
jle
sbb
and
mov
out
cli
cwtl
sbb
mov
mov
mov
popf
cltd
call
insb
das
jae
pop
sarl
std
cmpsl
cmp
test
loopne
mov
push
aam
xchg
jp
xchg
jmp
push
push
cmc
mov
mov
ljmp
xchg
fcomps
push
lcall
iret
push
dec
fisttpll
push
out
stc
pusha
sub
and
xchg
xorl
stc
imul
cmp
jge
stos
dec
mov
lods
cld
in
xchg
test
pop
ds
imul
dec
arpl
lgs
fdivl
addr16
pushl
ja
mov
cli
je
out
sub
mov
xchg
push
fsubr
dec
roll
xor
and
jns
xchg
mov
imull
inc
fimull
clc
adcb
addb
mov
push
rcrl
sbb
out
cmp
dec
mov
adc
arpl
push
cmc
lock
and
adc
inc
cmp
and
outsl
cld
scas
mov
dec
mov
dec
xchg
mov
jp
mov
rcrb
mov
gs
sbb
xor
sbb
lock
mov
je
fs
inc
or
xchg
movsb
bnd
cltd
inc
inc
movsb
sbb
std
sbb
nop
sub
mov
sbb
jecxz
ja
loop
jmp
call
lock
sbb
bound
and
rorl
popf
jno
lds
shll
ss
or
and
icebp
adc
fldt
pushf
cmp
cmp
inc
mov
xlat
push
and
pop
jg
xor
jo
pop
mov
fs
add
add
mov
sbb
das
rclb
sub
sbb
mov
add
inc
cltd
test
scas
loop
lods
daa
dec
mov
mov
adc
movsb
inc
imul
mov
cmp
xor
ljmp
repz
imul
sbb
ja
mov
ltr
gs
cltd
mov
fs
sbb
das
jb
pop
repz
test
mov
push
popa
mov
sbb
jecxz
jb
fidivl
cmp
in
jbe
xor
push
sub
movsb
sbb
cmp
or
nop
add
push
mov
leave
les
xchg
push
push
out
icebp
xchg
inc
mov
xchg
repnz
mov
cmp
add
or
and
addr16
data16
aam
cmc
xchg
dec
pop
aas
inc
fdiv
mov
ds
jg
sbb
push
mov
test
or
ret
das
sbb
mov
add
scas
mov
jae
rclb
mov
push
popf
xor
adc
mov
xchg
sbb
sarl
push
scas
cmp
loope
sub
push
xchg
inc
roll
jb
push
xor
repnz
jne
jecxz
cmp
inc
cmpsl
or
cltd
bnd
pop
xor
xchg
push
ret
into
inc
iret
sub
mov
sahf
stos
sbb
outsl
xor
ljmp
cwtl
mov
ja
cmpsb
mov
faddl
ljmp
adc
insb
mov
mov
mov
fisubrs
cs
lcall
push
cs
xchg
xchg
lret
push
xor
icebp
std
cmp
cmp
stos
cmpsl
jecxz
cmp
cmp
mov
adc
sbb
loope
outsb
xorl
daa
mov
mov
sub
adc
pop
int
adc
pop
bound
fdivrs
imul
dec
ljmp
or
aad
mov
ds
movsb
es
cmc
aas
ds
lods
xchg
test
sbb
push
lahf
rcrb
xchg
inc
inc
js
xlat
cmpsl
je
mov
xchg
sub
stc
movsb
dec
or
pop
inc
mov
aas
test
cmp
mov
push
mov
jl
fcomps
and
mov
add
add
fwait
sub
sub
pop
inc
arpl
lret
dec
je
adc
cmp
cmpsb
cltd
sbb
lret
test
or
retw
in
xchg
pop
sarb
cmpsl
lea
or
sbb
cmp
xchg
lret
outsl
daa
sbb
sub
adc
mov
inc
or
jb
es
push
repnz
int
fadds
pop
scas
fs
mov
bound
lret
subl
sub
xor
sub
or
push
xchg
lret
inc
test
cmpsb
enter
inc
push
sbb
mov
sub
adc
into
lcall
add
jno
shlb
or
outsl
xor
repnz
xorl
jbe
push
jbe
test
pop
sub
repz
push
adc
and
sub
inc
push
insl
and
mov
add
push
adc
bound
movsb
mov
aam
roll
sub
xchg
push
lock
adc
test
popf
insb
gs
gs
in
cmc
movsl
fimull
data16
scas
inc
stos
repnz
aad
cmpsl
fcmovnbe
pop
and
lret
and
sbb
in
addr16
stc
test
imul
pop
cli
pop
loope
in
xchg
sbb
sub
and
movb
jecxz
xchg
insl
iret
leave
dec
pop
enter
ljmp
sbb
loop
inc
inc
test
pop
cmpsl
aad
and
mov
insl
arpl
mov
bound
cmp
fwait
outsb
pop
inc
or
adc
cmp
pop
add
sbb
push
pop
repz
mov
jge
pushf
addr16
or
or
mov
xchg
psllw
adc
add
repnz
inc
je
fs
mov
jge
ljmp
loope
ljmp
lret
pusha
xor
aaa
pop
fldl
push
or
arpl
inc
cltd
sbb
sbb
dec
repnz
lods
adcb
insl
sub
filds
repnz
aam
sbb
mov
inc
jecxz
cmp
int3
sub
xchg
sub
aad
push
arpl
mov
mov
inc
test
gs
ret
dec
popf
loop
jo
mov
iret
sbb
imulb
outsl
adc
movhps
stos
adc
mov
xchg
int3
jge
outsl
sbb
iret
jns
testl
cli
adc
ljmp
repz
add
arpl
imul
nop
push
pusha
mov
jecxz
xchg
repnz
cmp
and
mov
int
pop
out
sbb
mov
or
loope
dec
sbb
mov
mov
outsl
aaa
sarb
adc
push
pop
outsl
clc
cmp
mov
xchg
add
adc
test
push
aam
jecxz
std
pop
cmp
pop
or
sub
jno
or
inc
aaa
cwtl
push
pop
test
mov
cmp
adc
pop
test
cmp
jb
mov
or
xor
mov
lret
repnz
mov
mov
push
pop
scas
adc
and
mov
inc
stos
pop
icebp
ffreep
fisubs
cmp
pushf
dec
mov
mov
lret
or
and
test
cld
bnd
cld
std
leave
sbb
add
sub
ds
add
jo
sub
int3
shll
in
push
or
push
mov
or
push
jbe
iret
lcall
adc
iret
pop
ja
mov
mov
jne
test
or
push
mov
dec
pop
sbb
movsb
ficoml
sbb
push
repnz
aad
aaa
stc
divl
cmp
lret
fcmovnu
test
test
pop
sti
outsl
mov
out
and
mov
xchg
and
subb
js
imul
dec
add
fcompl
cmc
roll
cltd
push
mov
cmp
pop
xchg
dec
scas
mov
pop
lods
outsb
out
test
adc
mov
lods
or
scas
inc
sti
pop
mov
das
arpl
cld
inc
mov
fmull
xchg
dec
pusha
test
stos
mov
jae
pop
sub
add
mov
adc
out
out
xor
sti
jle
mov
xchg
mov
adc
xchg
inc
ret
lods
fwait
outsl
or
lcall
adc
inc
dec
out
mov
cli
add
aaa
aaa
mov
push
aad
popa
and
ret
bound
out
and
jo
popf
mov
push
mov
xchg
mov
repnz
add
sub
imulb
stos
sub
mov
lea
dec
inc
or
jae
mov
repnz
mov
mov
loopne
ret
pop
cli
mov
mov
test
cli
jne
add
cmp
xchg
mov
dec
cwtl
and
mov
lock
divl
jecxz
les
xchg
mov
addb
loop
lds
pop
fidivrs
dec
pop
fdiv
out
pop
and
mov
and
rcr
in
and
aad
pop
mov
mov
and
pusha
mov
jecxz
xor
js
jnp
daa
aad
bound
sub
clc
dec
xchg
out
pop
je
add
movsb
ljmp
push
fcmovu
lock
movsb
add
scas
aas
mov
fildll
lea
repnz
adc
in
xchg
pushf
cwtl
insb
dec
lea
push
movsb
mov
push
repnz
scas
xor
repz
adc
mov
aam
mov
adc
scas
jno
pop
jp
inc
mov
push
mov
scas
push
or
addr16
stos
mov
insb
bound
ljmp
das
jns
push
ret
mov
in
mov
mov
hlt
std
push
popf
aam
or
mov
decl
mov
bound
pop
insl
or
addr16
cmc
xchg
mov
mov
push
mov
sub
in
popa
inc
xchg
mov
inc
repnz
out
mov
pop
pop
sub
sub
lret
out
or
movsb
lods
fwait
pop
mov
mov
push
inc
mov
push
and
testb
cld
mov
xchg
dec
icebp
mov
sbb
cltd
scas
xor
sub
mov
mov
lods
xor
lret
cmp
add
je
adc
add
loop
xor
jge
addr16
adc
inc
and
or
push
mov
ja
cwtl
add
mov
popf
dec
or
fucomp
and
cmp
mov
jnp
repnz
ds
xchg
repz
pop
mov
fsubrs
pop
add
adc
dec
ret
int
insl
xchg
lds
push
scas
add
mov
mov
dec
sbb
sahf
ds
pop
adcb
pop
add
push
enter
test
cmp
inc
js
adc
or
dec
leave
mov
xor
loope
and
lahf
call
add
out
and
mov
mov
inc
aaa
inc
push
mov
test
rcll
enter
jmp
xchg
jp
ret
fwait
sub
adc
popa
pop
int3
mov
mov
fmul
jbe
das
int3
test
pop
icebp
sti
mov
xor
cli
scas
bound
inc
clc
fists
aad
sub
fs
push
and
aaa
sub
xchg
cmc
or
ds
or
xchg
mov
jp
out
arpl
mov
dec
sbb
inc
jmp
jno
pop
pop
cltd
je
pop
fs
and
and
add
dec
or
orb
loope
xchg
xchg
sbb
mov
jo
sub
in
adc
popa
push
scas
fbld
sbbb
xchg
xchg
xor
fcmovne
sbb
leave
xchg
loopne
push
xor
cmp
sbb
shl
mov
xlat
popa
scas
outsb
movsb
jo
movsl
sub
mov
or
sbb
psubusb
jge
outsb
ja
push
cmp
cmp
ljmp
cmp
arpl
imul
and
mov
cld
xor
lock
jecxz,pt
mov
mov
xorb
jmp
rcl
jle
loopne
lea
pusha
ficomps
mov
xchg
adc
call
sbb
stos
fadds
pusha
lods
mov
xor
clc
mov
and
mov
add
mov
jecxz
dec
loopne
sbb
pop
aad
popa
in
mov
fidivrl
ljmp
mov
pop
mov
mov
xchg
dec
hlt
ss
mov
sbb
jl
test
and
or
clc
ja
sbb
insl
stc
out
push
inc
neg
adc
addl
movsb
outsl
cmc
in
repnz
or
jecxz
push
mov
out
dec
das
jne
xchg
xchg
ljmp
addr16
xchg
pop
jle
xchg
fwait
mov
cmpsb
sbb
gs
pop
and
outsl
lcall
mov
cmp
arpl
push
push
dec
push
inc
popa
sbb
movsb
hlt
imul
jno
xor
and
pop
sub
mov
jbe
push
cmc
cli
pushf
faddl
mov
popa
andb
enter
cld
xchg
insb
js
and
sbb
adc
aam
dec
dec
frstor
adc
cli
mov
dec
push
jae
push
cld
les
repnz
mov
inc
dec
jmp
or
and
add
lds
aad
mov
xlat
or
cmpsl
insb
std
loope
xor
mov
push
out
adc
or
mov
test
imul
mov
adc
and
inc
push
pop
enter
jg
sahf
sbbb
adc
pop
repnz
iret
repnz
hlt
hlt
fcomps
hlt
cmp
aam
pop
dec
lret
cmpsl
daa
adc
fs
xlat
stc
pop
in
adc
xchg
ss
pop
xchg
jno
lods
in
fwait
decb
pusha
pop
jge
jp
adc
or
leave
adc
mov
scas
lahf
das
out
pop
dec
and
xor
xor
inc
and
or
sub
push
xor
test
mov
shlb
repz
cwtl
sbb
pop
sub
mov
jg
movsb
dec
push
jle
out
lods
lds
inc
roll
and
and
in
imul
or
sbb
idivl
sbb
push
pop
scas
and
dec
sub
dec
scas
jb
ja
fidivrs
and
adc
lods
movsb
stos
xlat
loopne
repnz
out
cmc
repnz
sub
aad
fbld
daa
shrb
scas
in
add
sbb
cmp
jp
push
jmp
mov
add
int3
into
pop
idivl
mov
xchg
jg
arpl
lcall
cmp
mov
xor
dec
mov
sbb
pop
lret
sbb
fistpll
dec
cwtl
andl
or
out
cmp
mov
jg
sub
into
pop
cmp
adc
sub
jle
pusha
test
push
and
pop
sub
adc
or
fsubs
scas
pop
movsb
or
sbb
or
sbb
stc
insb
and
dec
or
jg
and
mov
dec
pop
sbb
jge
mov
mov
arpl
dec
mov
addb
or
cmp
rcrb
jno
fs
jns
ljmp
xchg
mov
decb
mov
mov
test
sbb
xor
inc
lods
sahf
add
int3
add
aad
xor
xor
and
call
and
xlat
mov
jmp
mov
movsb
lea
jns
or
push
pop
mov
inc
xchg
dec
or
push
and
pop
and
movsb
stc
xor
insb
leave
es
pop
pop
and
push
adc
and
adc
push
jnp
jbe
mov
push
cli
mov
lds
mov
cmp
insl
xlat
xchg
or
xchg
or
sahf
cltd
cmp
push
ss
or
or
aas
les
cld
adc
stos
mov
jg
mov
mov
xchg
sbb
loop
shlb
dec
sbb
lods
cmp
jle
xchg
dec
fmull
sub
adc
sbb
dec
mov
mov
push
leave
jle
sbb
arpl
lret
cmp
pop
jns
ljmp
push
je
xlat
dec
cmp
cs
fsubrs
cmp
cmp
lds
sbb
xlat
xlat
out
push
sbbl
clc
xor
lcall
push
cmp
push
repnz
outsl
test
lea
inc
and
in
lods
imulb
cmp
imul
jno
jnp
adc
push
repz
push
les
cmpsb
cmp
aad
sahf
inc
xchg
cmpsl
loope
mov
fisubrl
rorb
inc
cmp
arpl
fdivr
popa
and
push
and
inc
pop
repnz
pop
call
loope
add
push
xor
icebp
out
dec
mov
imul
stc
adc
and
mov
xchg
or
jno
gs
push
jmp
xchg
jmp
cs
jo
test
xchg
out
or
xchg
ret
sub
lret
mov
test
add
inc
ja
inc
mov
or
mov
popf
or
loop
hlt
cmpsl
sbb
fldl2e
mov
mov
std
push
pop
pop
loop
lods
jge
pop
add
jmp
out
sub
sahf
push
into
je
test
sahf
mov
jle
dec
push
stos
push
ret
sar
mov
inc
out
js
ljmp
loop
std
dec
fcoms
popf
xchg
aam
xchg
icebp
cmp
imul
sbb
and
push
jmp
cmp
jnp
fdivs
jg
xor
dec
sub
adc
repnz
mov
ret
out
xchg
repnz
xlat
inc
xor
xchg
push
and
mov
adc
mov
mov
mov
repnz
inc
pop
jae
add
mov
push
divb
in
rcrl
dec
push
mov
cmc
ja
adc
test
push
out
xor
and
mov
or
popf
push
xorl
loop
roll
popa
inc
add
movsl
stc
fsubs
inc
push
push
mov
xlat
push
lock
sbb
inc
packsswb
sbb
jl
push
dec
repnz
aaa
cltd
jbe
aad
xor
aas
mov
xlat
cltd
mov
daa
jb
in
imul
clc
rorl
push
shl
les
sti
xchg
jle
adcl
icebp
push
jle
cmc
sub
out
test
mov
popf
test
add
adc
ljmp
pusha
loop
mov
push
int
mov
sbb
jo
lret
or
cld
jmp
and
aas
or
push
xchg
adc
xorb
in
inc
mov
sar
sub
mov
adc
push
xor
lret
mov
bound
push
fstpt
lock
or
cs
repnz
adc
cltd
sub
mov
mov
dec
sub
cmp
mov
sub
xor
nop
add
ljmp
push
push
xchg
sub
sub
repnz
inc
adc
std
adc
fstps
pop
cmp
bound
mov
xlat
push
jge
sub
xchg
adc
mov
xor
sbb
arpl
sub
notl
rclb
dec
mov
jbe
mov
pusha
mov
adc
mov
test
push
int3
insl
loopne
sbb
sbb
movsb
ss
lds
in
mov
imul
dec
cmp
arpl
push
scas
xor
add
call
cmp
sahf
lret
mov
dec
adc
mov
xchg
sub
into
push
jle
movsb
setae
or
bound
cmp
lret
and
fsubrs
into
inc
xor
xor
sbb
mov
xlat
pop
pop
or
ljmp
add
xor
sub
mov
sub
mov
es
xcrypt-ecb
cmpsl
or
xorb
mov
jl
outsl
sub
lret
call
mov
mov
push
sbbl
mov
jge
cmpsb
push
cli
stc
fs
repz
inc
insb
fldcw
lods
dec
ret
mov
inc
mov
and
xor
ret
or
mov
ds
cs
xchg
pop
xlat
test
aam
inc
dec
mov
cmc
ficoml
out
pushf
ret
sub
leave
lret
in
mov
jmp
push
mov
cltd
xor
add
ljmp
mov
fnsave
mov
sub
sti
lcall
repnz
push
ja
lods
push
popa
aas
cmpsl
iret
and
xchg
push
adc
pop
outsl
push
repnz
sbb
ljmp
mov
pop
std
insl
or
pop
iret
add
pop
hlt
mov
test
sub
jno
clc
dec
rorb
out
bound
sbb
push
xchg
or
or
cld
add
xchg
subb
jb
cmp
jecxz
out
inc
das
dec
es
leave
repnz
fwait
fwait
mov
dec
or
std
and
lea
fistl
out
cwtl
lret
sub
inc
mov
sahf
mov
cmc
andb
jecxz
shl
jne
mov
aad
fisubl
aad
test
icebp
xlat
loopne
jo
out
add
add
cmp
les
insl
mov
cmp
xchg
imul
inc
jnp
ret
mov
shl
jmp
outsb
push
cmpsl
xor
cli
push
and
into
std
or
mov
dec
mov
leave
call
xor
insb
insl
ljmp
es
pop
xor
test
cmpsb
movsl
popf
mov
ret
in
loop
push
adc
movsl
jecxz
repnz
outsb
cmpsl
jp
insb
push
and
inc
lcall
ret
jle
xor
in
xlat
fcoml
insb
push
adc
mov
arpl
dec
ja
insb
xcrypt-ofb
cmpsl
sub
jns
insl
les
jne
jecxz
sbb
fs
sbb
mov
insb
imul
adc
mov
and
movl
mov
mov
mov
hlt
fs
push
imul
out
add
lods
xchg
leave
in
mov
jmp
xor
sbbb
mov
add
pop
push
inc
mov
loop
inc
mov
push
loopne
out
enter
sub
push
lds
cmp
xchg
nop
xor
sub
movb
mov
popf
jecxz
and
jle
imul
mov
arpl
mov
arpl
xor
aas
negl
jge
mov
sbb
xor
fsubr
mov
lock
scas
call
icebp
cmp
xchg
xor
jge
pop
sahf
arpl
xchg
lods
jbe
int3
dec
and
jp
sub
inc
repz
pop
nop
sub
or
fsubrs
les
iret
xchg
mov
mov
iret
sahf
stos
mov
mov
ljmp
rcrl
xor
xchg
push
push
sub
sub
pop
fistpl
fistps
push
scas
mov
cmpsl
ret
jle
inc
aas
mov
lods
jb
dec
sbb
xchg
xor
push
repnz
push
inc
imull
jge
pushf
popf
setbe
push
pop
add
sub
xchg
outsb
push
loope
bound
imul
sbb
dec
or
nop
jle
lods
jl
mov
jo
stos
adc
stc
jl
inc
pop
sub
imul
lock
pop
add
call
mov
inc
or
mov
sbb
std
mov
or
cmp
cltd
add
mov
jno
dec
sub
cli
xchg
das
rcll
inc
xor
out
and
test
inc
daa
xchg
lods
push
scas
negb
push
imul
mov
mov
push
repz
pop
cmp
add
into
xor
jge
and
lret
dec
pop
dec
xlat
mov
xchg
lcall
mov
fidivrl
jo
pop
lcall
inc
jecxz
sti
out
mov
out
push
int
push
jb
xchg
cli
mov
ds
clc
push
xlat
pop
mov
and
icebp
push
inc
mov
or
mov
add
fcmovnb
cmp
orl
push
pop
push
lea
mov
repz
cmp
and
jg
push
add
mov
or
punpcklbw
aas
cltd
push
push
or
adc
repnz
adc
sti
arpl
lret
and
div
sub
and
fcompl
dec
inc
stos
cmp
sbbb
lret
or
lock
sub
push
inc
jb
adc
aas
mov
daa
addr16
jg
jb
mov
and
test
gs
dec
adc
mov
out
push
je
sub
imul
loope
and
mov
in
loope
add
or
mov
jnp
inc
push
jnp
sub
mov
adc
push
dec
or
not
mov
mov
enter
xor
jle
xor
push
loope
in
xchg
cwtl
lret
jecxz
inc
dec
ret
push
add
xor
cli
mov
cmpsl
push
int
and
clc
inc
popa
pusha
add
or
rorb
cld
mov
and
cld
and
xchg
cmp
dec
movsb
inc
pusha
jle
pop
out
outsl
dec
test
adc
add
rolb
push
jl
mov
lret
jnp
jecxz
imul
pop
leave
inc
push
dec
sbb
je
jnp
or
jb
ljmp
cmp
ss
mov
int3
repnz
jle
lcall
mov
mov
arpl
xlat
sbb
xor
xor
jl
arpl
xchg
and
cmc
jle
mov
push
adc
mov
push
stc
mov
outsb
jl
ljmp
cld
mov
cmp
jb
insl
jle
shlb
popl
mov
mov
pop
push
ljmp
pop
test
and
inc
and
leave
push
mov
mov
and
loope
xor
aaa
adc
fs
jo
xchg
jle
xor
shll
mov
rcll
and
cltd
dec
addr16
aas
insl
ficoms
repnz
mov
push
addr16
pop
lret
gs
rcr
or
cltd
aam
mov
push
cmp
pop
jne
add
ret
inc
dec
es
aaa
adc
or
scas
mov
outsb
xchg
jg
xchg
es
push
bnd
and
cwtl
shrl
lds
loope
jmp
dec
mov
mov
roll
lahf
dec
inc
push
sahf
movb
or
sub
iret
rorl
cmp
lods
push
inc
jecxz
dec
aad
mov
insl
and
repnz
xchg
mov
movsl
imul
sbb
add
push
xor
mov
jno
dec
mov
fisttps
std
lcall
mov
pop
or
test
jl
pop
mov
addr16
loope
xchg
std
sbb
daa
dec
lcall
fdivs
fwait
cmp
mov
in
and
xchg
xchg
outsl
mov
jecxz
test
aad
or
sub
scas
push
std
flds
repnz
int
ljmp
push
mov
mul
lret
jno
or
fldenv
filds
push
inc
or
adc
lret
mov
and
dec
jmp
lret
mov
jb
jae
arpl
fs
negl
imul
lds
stc
jp
push
jp
pop
mov
nop
adc
cmp
adc
or
push
nop
fwait
push
pop
sub
aad
xchg
adc
and
xor
xor
mov
repnz
lret
push
and
xchg
repz
insb
push
adc
loope
xchg
repnz
inc
stc
stc
pop
sub
mov
sbb
mov
xchg
sbbb
ds
sbb
hlt
pop
and
add
jp
sbb
insl
ljmp
fs
mov
jle
daa
xor
push
out
jmp
sub
lds
je
xchg
add
or
addr16
xchg
mov
pop
push
test
mov
int3
popf
dec
cld
cmpsb
adc
dec
je
cmp
fcoml
cwtl
arpl
dec
or
inc
out
sbb
adc
bound
mov
repnz
push
out
sbb
imul
push
pop
sbb
add
jge
in
and
stc
insl
ss
inc
adc
and
test
insb
dec
mov
ss
lock
outsb
and
sub
mul
push
sub
adc
mov
sbb
test
adc
jmp
test
add
inc
jnp
add
jno
jle
aam
into
mov
inc
xor
or
jo
mov
push
sub
popf
sbb
fldenv
test
cmp
das
and
jge
xchg
or
cmp
inc
je
andl
or
push
mov
jb
dec
jg
stc
sub
mov
and
jp
add
sub
pop
pusha
mov
aam
and
stos
inc
sub
iret
and
aad
rcrl
repnz
pop
mov
dec
xchg
fsubrs
adc
cpuid
push
das
insb
and
fidivl
repnz
aaa
xor
fiadds
loope
stos
push
in
adc
movsl
rclb
sbb
rcrl
mov
cmpl
adc
or
push
sar
sbb
mov
movsl
mov
or
notb
cmp
add
mov
into
repz
sarl
mov
adc
sbb
mov
addr16
mov
cmp
cli
addr16
subb
mov
lcall
jno
xchg
dec
mov
loopne
lock
inc
lcall
insl
xchg
rclb
cmp
in
aaa
xchg
mov
adc
or
add
hlt
jge
xchg
inc
add
ret
pop
arpl
push
test
inc
out
pop
enter
pop
adcl
push
push
push
cmc
sbb
push
jl
and
sub
test
and
insb
jecxz
or
movsb
push
jno
mov
outsl
rcrl
dec
cmp
repz
sub
test
and
or
or
pop
pop
imul
es
mov
mov
out
rcrl
inc
mov
dec
fisttps
add
insb
popa
mov
cs
inc
sbb
outsl
cld
daa
and
inc
iret
adcl
push
sub
repnz
pushf
mov
and
mov
adc
pop
sahf
bound
cwtl
lret
loop
mov
fnstenv
lcall
mov
and
mov
addr16
je
sub
flds
push
popa
movsb
add
pop
sahf
inc
ret
push
lods
add
adc
push
xchg
cmp
sbb
xchg
push
movsb
xor
arpl
int3
jp
ss
decb
adc
xor
stos
int3
das
jbe
mov
and
mov
repnz
dec
jge
ja
jmp
icebp
mov
lods
hlt
addb
jmp
push
test
aam
lds
sahf
adc
mov
fs
std
lods
dec
pop
jno
sbb
inc
mov
test
cmp
stos
jbe
lahf
stc
push
scas
sbb
aas
mov
out
dec
or
lods
cmp
adc
mov
adc
push
xlat
jo
lock
insl
popf
jb
mov
ljmp
mov
call
xor
or
xor
scas
mov
int
ja
adc
xchg
adc
jge
mov
ret
dec
movsb
ret
push
das
mov
enter
popa
xor
mov
sbb
ljmp
adc
inc
mov
pop
sbb
shrb
into
or
pop
ds
adc
outsl
and
shlb
lret
pop
ljmp
push
push
inc
cmpl
mov
ret
inc
fcomp
loope
and
es
inc
pushf
rorb
xchg
dec
or
dec
or
outsl
testl
aad
fdivl
test
xor
sbb
arpl
mov
mov
mov
inc
insl
rolb
fs
pop
push
xor
mov
leave
lcall
cmp
push
lret
or
xorb
incb
adc
cmpsl
push
insl
rorl
aam
int
clc
inc
icebp
or
in
aas
test
sub
cmp
pop
incb
or
mov
test
sub
push
inc
sbb
repnz
movsb
roll
cmp
lds
sbb
sbb
fistl
cmp
arpl
sub
in
mov
mov
mov
in
push
popa
lods
pop
repnz
pop
pop
cli
xlat
and
je
sub
and
ljmp
dec
cmp
mov
and
sub
inc
lret
bound
outsb
aas
out
push
inc
add
xchg
js
inc
xor
cli
lods
das
mov
imul
in
aad
divb
sbb
lss
addb
out
loopne
mov
pop
pop
pop
sub
pop
xchg
xchg
push
xchg
jmp
dec
pop
outsb
adc
jle
movsb
inc
add
hlt
adc
lret
push
cmc
mov
outsb
pop
nop
sub
jge
push
mov
adc
adc
iret
jno
ljmp
mov
ds
fimull
xchg
cmpsl
push
xchg
movntps
mov
sub
pop
jae
sbb
sub
pop
adc
add
jb
push
sub
push
sahf
insl
lcall
lock
imul
fisttpll
dec
xchg
xchg
in
les
add
inc
inc
aad
out
push
mov
pop
xchg
push
loopne
push
popa
jb
fwait
insb
cmpsb
mov
ds
push
popf
sbb
sbb
add
adc
mov
push
push
repnz
pusha
mov
mov
lcall
jp
xchg
mov
push
sti
and
mov
test
int
inc
adc
lock
adc
popa
pop
scas
lds
subb
fs
out
addl
push
jg
fimull
jp
push
jle
sti
jge
mov
xchg
sub
int
cs
jge
xchg
test
bound
add
sub
jge
or
mov
subb
xor
cmpsb
lcall
jle
jecxz
test
and
inc
aam
cli
inc
mov
es
sahf
ret
mov
int3
cmp
add
mov
and
sbb
je
bnd
pop
xor
add
dec
mov
test
sub
sti
mov
dec
imul
dec
pop
mov
add
mov
scas
pop
popf
cld
mov
outsl
mov
cmp
imul
aaa
xchg
push
cmp
adc
mov
mov
mov
adc
adc
inc
int3
pop
movsb
lret
xchg
sbb
ljmp
filds
ror
add
mov
mov
loopne
jle
js
call
rcrb
push
pop
cmp
call
dec
faddl
stc
jns
mov
lcall
dec
push
sbb
jecxz
leave
sbb
push
pop
push
adc
jg
cli
dec
aas
mov
out
popa
mov
jns
scas
adc
and
dec
or
stos
daa
cmp
imul
aaa
shll
sbb
aaa
dec
insl
lds
sbb
and
push
pop
jb
fdivrs
mov
rclb
xchg
xchg
jmp
adc
scas
inc
xchg
out
or
mov
inc
xchg
popa
xchg
cli
sti
repnz
push
and
and
jecxz
lds
cmp
and
sbb
adc
adc
pop
inc
jnp
xchg
dec
adc
pop
mov
mov
push
jo
sbb
dec
adc
inc
in
adc
dec
adc
test
pop
repnz
fadds
mov
pop
movsb
xlat
adc
mov
rcl
movsl
or
xor
jp
aad
pop
cltd
fdivrp
jmp
andb
and
and
push
inc
or
add
sbb
xchg
aaa
mov
jb
jnp
and
or
add
cmp
rolb
fnstenv
xchg
xchg
cmp
fs
adc
jmp
mov
aas
imul
cs
ret
int
cmp
cmpsb
mov
cmp
cmc
dec
pop
adc
jle
or
rcrb
xchg
insb
and
sahf
stos
cmc
arpl
aaa
loopne
push
push
or
repnz
sahf
xor
mov
cltd
dec
cmp
nop
adc
xchg
mov
sti
sub
jecxz
mov
push
jmp
add
and
in
mov
pop
push
and
mov
xor
int
dec
orb
es
enter
or
les
mov
sahf
loope
das
xchg
push
and
inc
inc
lods
add
xorl
es
call
dec
cmp
call
iret
xchg
push
sahf
scas
pop
or
mov
bound
and
mov
adc
add
mov
add
dec
rcrb
lock
divb
jmp
add
ja
shll
sbb
push
ljmp
dec
lds
test
sub
pop
icebp
inc
shlb
pop
mov
or
sub
mov
xchg
out
mov
sti
lods
or
sbb
cmp
and
icebp
xor
repnz
daa
out
aad
xor
and
cmpsl
jmp
sbb
mov
icebp
es
scas
stos
lret
or
mov
pushf
cmp
sbbb
mov
movsb
lods
sub
or
cmp
les
call
sub
ds
sti
pop
gs
push
ret
ret
stos
add
push
push
or
xor
cltd
scas
jbe
js
lret
xlat
shrb
mov
js
push
sub
movsb
fs
jle
shll
icebp
sub
fs
adc
es
in
loopne
daa
mov
and
mov
mov
sti
xchg
rcrb
mov
scas
xlat
xchg
insb
lods
sti
push
aam
pop
in
pop
leave
dec
ret
jb
sahf
arpl
mov
pusha
adc
test
pop
out
int
mov
jmp
call
inc
pop
loope
loope
pop
repz
pop
add
sti
mov
arpl
iret
jno
mov
xchg
setp
adc
loope
add
jno
js
into
jbe
and
sbb
aad
pop
lcall
jbe
shll
hlt
test
test
mov
xchg
ja
adc
leave
sub
testl
add
add
sbb
lock
test
out
movsl
push
int3
push
add
dec
dec
dec
lods
jne
test
mov
mov
pop
outsb
pusha
cs
push
cmp
sbb
push
std
mov
sbb
adc
inc
rclb
adc
das
gs
cld
xchg
pop
push
or
mov
lods
jmp
repnz
mov
or
adc
pop
fisubrl
insl
in
sbb
popa
icebp
xchg
cmpsl
mov
ud1
mov
mov
pop
pop
movsb
pop
sti
mov
dec
push
jne
dec
sbb
lret
pushf
jmp
repz
lds
mov
adc
jmp
mov
in
adc
pop
sti
pop
or
jmp
aaa
jo
not
mov
pusha
cmp
pusha
push
sbb
ficoml
arpl
xor
out
and
popa
mov
sbb
pop
dec
fnstsw
mov
es
pop
push
and
add
add
es
add
icebp
repnz
leave
in
adc
and
inc
addb
dec
mov
out
leave
inc
push
push
scas
inc
icebp
call
ds
xchg
add
cld
addl
jl
jecxz
ds
or
adc
sub
ss
dec
or
rcrb
dec
addr16
dec
xor
lcall
mov
xchg
mov
test
inc
push
int3
jb
dec
pop
subl
ss
idivl
xlat
jecxz
imul
cmc
mov
fnstsw
or
add
xchg
cmpsb
mov
jp
fldt
jbe
or
test
inc
clc
lret
xor
jecxz
movsb
cld
inc
add
add
xchg
mov
sbb
sbb
aad
push
ret
nop
inc
insl
sbb
xor
test
and
adc
mov
pop
jbe
or
xor
inc
jmp
pop
lock
xchg
add
fsubs
repnz
mov
mull
mov
pop
mov
arpl
jecxz
jo
cmp
pop
lcall
xor
int3
aaa
repnz
xor
mov
sub
ljmp
std
fs
mov
xchg
pavgb
imul
push
mov
das
xchg
mov
lret
cmpsl
xchg
insl
xchg
adc
cmpl
inc
cmpsl
sbb
sahf
push
daa
inc
push
xchg
jp
daa
mov
arpl
adc
iret
push
jae
jl
dec
cmpsb
add
mov
pushf
stos
jnp
cmp
pop
push
lret
xor
mov
sub
dec
aad
push
mov
loopne
mov
in
push
adc
repnz
jp
jae
adc
es
mov
sbb
loopne
in
movsl
cmpsb
popf
popa
push
aad
or
je
jecxz
jecxz
sti
xchg
popa
jb
loop
inc
jae
add
push
popa
mov
mov
sahf
jmp
cmp
mov
sub
push
inc
das
call
add
enter
mov
pop
mov
popf
stos
popa
inc
loope
insl
mov
dec
inc
sub
or
bound
push
push
xor
stos
loop
imul
or
jecxz
das
dec
sbb
iret
push
movsb
xorl
jl
adc
push
dec
aaa
xor
stc
push
push
repnz
add
adc
and
in
xor
outsb
mov
ja
jno
xor
inc
add
hlt
hlt
mov
loopne
testl
in
sbb
mov
mov
pop
js
rorl
adc
cmp
andb
add
fs
lret
dec
push
stos
addb
push
xchg
adc
adc
cmp
jecxz
repnz
mov
insl
fisubrl
push
popf
pop
mov
cwtl
jmp
loop
repz
daa
dec
jmp
aaa
bound
cltd
arpl
fisubs
push
loop
xchg
mov
loopne
mov
repnz
repnz
bound
leave
or
or
xchg
pushf
clc
rcll
jo
repnz
les
or
fdivs
xchg
movsl
outsl
mov
out
js
adc
ficomps
movsb
gs
cmpsl
mov
inc
and
mov
enter
adc
push
jecxz
cmp
repnz
int3
and
loope
xchg
cs
lods
push
daa
pop
add
aad
or
jbe
stos
or
lahf
aaa
pop
sub
cmp
push
xchg
dec
icebp
jne
ljmp
mov
add
sahf
sbb
out
lods
negb
inc
repz
fidivs
insl
or
andl
insl
inc
inc
loopne
dec
xor
inc
cli
cs
sub
addr16
adc
push
cmpsl
pop
hlt
xchg
mov
and
xchg
mov
or
loope
jnp
adc
loope
adc
sbb
pushf
cmp
sahf
sub
enter
stos
stos
jl
jo
scas
or
ljmp
dec
cmp
inc
xor
sub
in
repz
js
push
inc
inc
imul
adc
mov
push
add
leave
in
xor
push
xchg
adc
repnz
je
cltd
pop
mov
push
pop
xchg
in
xor
mov
jl
fdiv
clc
stc
jnp
stos
cmp
stos
aaa
sbb
lret
adc
ret
and
cltd
in
ret
xor
mov
mov
adc
or
sbb
xor
xchg
push
inc
sbb
push
imul
mov
sbb
mulb
adc
adc
inc
lods
add
ficomps
imul
adc
cmp
pop
inc
mov
in
mov
xchg
enter
sub
test
pop
rcrb
outsl
clc
lock
dec
cld
push
push
adc
rorl
test
out
test
and
daa
cltd
sub
mov
mov
and
xchg
aaa
jnp
mov
sbb
imul
cli
or
nop
push
clc
adc
push
cli
outsl
je
adc
cmp
cmp
repnz
cmp
orl
sbb
sahf
movsb
cmpsb
fimull
sbb
add
mov
out
jmp
add
adc
imul
add
mov
enter
mov
andl
lock
mov
fisubrl
pop
push
clc
nop
add
sbb
movsb
adc
jb
jle
aad
mov
inc
mov
insl
cmpl
daa
dec
xchg
sub
mov
int
xor
icebp
xchg
jmp
adc
xor
inc
insb
daa
mov
int3
movsb
out
and
jle
cmpsl
mov
xchg
mov
std
enter
xchg
dec
out
loop
mov
push
cmp
dec
pop
and
adc
jns
mov
mov
pop
test
adc
pushf
lds
mov
mov
adc
loope
je
cmp
jge
sub
test
gs
testb
push
scas
repz
jle
gs
lahf
jecxz
pop
mov
lahf
pop
jno
fcompl
mov
rolb
sbb
mov
push
jge
or
addr16
ds
or
pop
dec
hlt
and
nop
test
cli
pop
inc
cwtl
jle
call
jb
push
jp
stc
jne
jne
pop
mov
pop
enter
test
repnz
jo
sbb
loopne
clc
sbb
cli
ja
sbb
inc
push
push
cmp
cmp
dec
xor
or
ret
adc
lds
adc
add
xor
or
enter
imul
imul
out
xchg
dec
mov
and
dec
sbb
adc
loope
aas
lret
fwait
jo
rcll
mov
movsb
fwait
nop
cltd
daa
mov
outsl
sbb
repnz
dec
outsb
adc
dec
lea
sub
fsubl
aaa
in
lcall
add
repnz
inc
lods
sti
xchg
sti
pop
or
lcall
and
dec
jecxz
div
in
push
hlt
fcmovbe
push
or
jg
ljmp
inc
test
pusha
negl
test
xor
xor
cltd
jbe
xchg
push
and
xlat
and
fwait
shlb
jb
pop
cs
or
xlat
jmp
mov
dec
in
pop
test
es
jmp
pop
addr16
inc
leave
xchg
mov
in
adc
lret
sub
loope
inc
std
sub
das
popf
xor
add
repz
cmp
add
ret
test
sbb
subl
sbb
mov
adc
xchg
je
push
repnz
push
cmp
mov
push
jl
popf
pop
or
mov
fs
shrb
cmpsl
in
mov
jl
sahf
jl
movsl
es
mov
mov
push
in
push
mov
pop
lods
negb
lcall
sahf
fldcw
add
pop
add
loop
pop
or
xor
pop
xor
mov
mov
sarb
loop
add
sub
jmp
jnp
insl
sub
dec
or
xchg
aaa
cld
movsl
repnz
add
and
js
xlat
xchg
popf
arpl
stos
add
push
mov
stc
out
pop
xor
outsl
aaa
jnp
sub
es
jecxz
mov
das
sub
shll
lret
jns
test
jge
cltd
xor
shrl
or
push
add
push
aad
or
ret
int
mov
loopew
mov
test
inc
push
mulb
outsb
push
andl
out
movsb
pop
jo
mov
std
push
fstpl
ljmp
adc
cmp
inc
ds
sbbb
orb
pushf
cld
push
add
adc
fs
and
sbb
xchg
mov
arpl
mov
xlat
or
sbb
dec
clc
inc
into
mov
pop
ljmp
push
ficoms
scas
dec
sub
dec
daa
in
xor
adc
mov
ret
xor
inc
aas
add
xchg
push
adc
inc
test
mov
int
jns
inc
jle
out
test
loope
repnz
xchg
sub
cmp
push
int
sub
nop
jmp
incl
mov
bound
std
enter
mov
pop
lahf
mov
pop
xchg
or
xchg
mov
outsb
fdivrp
scas
sub
sbb
arpl
xchg
xor
movsb
and
stos
bound
xor
xlat
mov
aas
sahf
xchg
scas
clc
add
mov
push
call
pushf
bswap
inc
lea
dec
daa
enter
mov
stos
fcoms
addr16
repz
mov
jmp
rcll
push
add
std
push
lahf
pop
stc
cmc
dec
mov
xchg
jnp
popf
adc
and
into
out
sti
aam
enter
dec
cmp
pop
jl
mov
ljmp
jl
loope
and
mov
out
ret
pusha
icebp
xlat
push
js
mov
outsl
mov
xchg
arpl
xchg
jno
insl
pop
imul
push
or
inc
addr16
adc
jl
dec
clc
lods
sti
add
sbb
test
xor
push
adc
inc
or
aam
movsl
jmp
add
lret
subb
pop
bnd
mov
bound
test
das
mov
arpl
repnz
outsb
mov
imul
data16
or
mov
cmpsl
ja
das
and
mov
shrb
jnp
mov
xchg
sbb
cmp
cltd
inc
lahf
mov
sub
jmp
sahf
dec
mov
mov
xchg
insl
std
sub
jg
gs
loopne
cmp
shlb
add
fstps
repz
out
inc
or
stos
repnz
call
inc
iret
lea
pop
mov
xchg
adc
aas
add
out
bound
xchg
outsb
inc
call
pop
fisubl
mov
mov
xchg
fadd
jge
xor
daa
or
adc
add
fdivrs
cli
sbb
sub
and
or
dec
adc
sbb
inc
mov
sbb
xchg
push
icebp
lods
inc
mov
popf
jmp
insb
jge
push
inc
es
lcall
pop
xchg
ljmp
jne
sub
xorb
jle
cltd
and
mov
pop
add
sti
xchg
and
shlb
hlt
div
imul
cmpsl
sub
xor
jmp
pop
std
or
das
cltd
lods
cmc
dec
pop
ss
inc
xchg
loopew
stos
mov
push
ljmp
lret
mov
mov
ret
leave
lock
das
scas
ja
lret
xor
xor
add
and
out
loope
mov
loop
adc
or
jb
add
cmp
test
dec
ret
sbb
call
mov
push
xor
and
test
aad
pop
cmp
movsl
js
inc
jbe
push
ret
ljmp
jle
pop
sub
sbb
sub
cmp
xchg
and
test
and
mov
aam
outsb
sbb
scas
fidivl
jmp
jae
hlt
push
cmp
jle
xchg
fstl
rolb
mov
stc
sbb
xor
mov
and
repnz
dec
jp
mov
lcall
and
sti
pop
nop
adc
repnz
adc
jmp
cmp
movsl
adc
loopne
daa
dec
sahf
mov
ret
xchg
pop
xchg
out
mov
add
repnz
cmp
scas
jno
mov
gs
pop
mov
das
dec
arpl
mov
cmpsb
mov
jecxz
out
icebp
scas
daa
bnd
mov
enter
jbe
pusha
fcmovu
sbb
inc
lea
and
in
out
fidivl
and
ja
daa
iret
cmp
clc
imul
dec
test
jle
aaa
xor
arpl
adc
mov
movsb
cmp
pop
mov
adc
jmp
add
dec
out
scas
mov
mov
loop
jle
call
fucomi
ds
sahf
sub
jo
mov
xor
sbb
adc
loope
dec
outsb
mov
mov
dec
xor
lret
push
add
in
jle
xor
mov
in
lds
jns
jp
add
mov
jle
in
adc
jecxz
orl
mov
iret
lock
pop
arpl
and
sub
push
test
gs
mov
fwait
leave
ds
fidivs
mov
scas
lock
jg
and
gs
xlat
call
jb
mov
xchg
out
decl
mov
fidivrs
pop
push
sub
scas
jno
scas
lret
pop
and
cld
push
pop
inc
or
test
adc
pop
outsl
les
test
add
or
jl
int
cmp
sub
lods
push
dec
jp
sub
test
xchg
jb
popf
lret
mov
es
scas
jae
lcall
scas
inc
ljmp
pop
mov
pop
push
clc
pop
aad
mov
pop
aam
repnz
inc
and
sahf
sbb
daa
sarb
push
out
in
mov
scas
mov
xor
out
push
pop
ljmp
mov
popa
sbb
mov
adc
jecxz
fwait
or
pop
add
push
push
xchg
adc
dec
jge
mov
jp
xchg
les
movl
mov
xchg
in
pop
and
sub
loope
and
fdiv
movsb
lahf
cmp
dec
adc
lock
mov
pop
insl
mov
cmpsl
xchg
and
scas
fs
test
orl
mov
dec
repnz
add
test
insl
mov
lea
pushf
cli
mov
jp
leave
dec
sub
sbb
insb
mov
jmp
mov
adc
mov
jno
mov
mov
dec
jae
ljmp
and
mov
xor
pusha
xor
jno
xlat
fs
sbb
xchg
sbb
popa
mov
mov
lret
sahf
jbe
movsb
mov
dec
push
ljmp
sub
stc
mov
add
fisttpll
sahf
aaa
repz
and
inc
pop
insb
adc
js
stos
outsb
lret
or
jle
cli
add
dec
push
outsb
inc
das
and
ljmp
dec
fisttpll
data16
sbb
mov
mov
repz
call
test
sbb
dec
bound
mov
sbb
int3
pop
jg
imul
jb
cmp
cltd
pop
add
repnz
sti
xchg
and
dec
or
jnp
insb
adc
inc
notl
sub
or
fldt
cld
dec
lds
adc
movzwl
push
or
ror
xor
add
mov
cld
int
jo
add
sbb
sbb
inc
stos
xor
xchg
jle
and
hlt
pushf
scas
xchg
sub
repnz
push
mov
sub
into
lcall
adc
inc
out
int3
rclb
aaa
mov
call
roll
out
inc
ret
sti
lods
notrack
inc
cmpb
and
xchg
es
add
or
mov
rol
popf
jns
pop
insb
xchg
sbb
mov
sbb
roll
jne
xchg
sub
xchg
xchg
adc
icebp
popf
xchg
aad
cmpsb
insb
pop
movsl
dec
rep
out
imul
rcrl
ret
das
push
scas
es
shll
xchg
mov
and
hlt
mov
loopne
mov
sub
repnz
inc
cmp
daa
sub
or
cmp
rorb
clc
daa
sub
cmp
adc
out
rdmsr
arpl
push
lods
sbb
arpl
add
lcall
and
imul
push
mov
add
xlat
sbb
arpl
mov
clc
and
xchg
sbb
dec
sub
and
movsb
fldl
mov
adc
daa
out
pop
dec
loope
mov
insl
pushf
add
inc
jb
lret
popf
ret
lock
fs
je
pushf
cmp
lret
pop
jle
scas
xor
or
fdiv
pop
mov
loope
cld
clc
das
je
push
cmpsb
adc
dec
mov
adc
mov
lds
stos
rorl
stc
out
filds
ljmp
xlat
add
outsb
les
fistpll
les
lods
sbb
nop
jno
sub
daa
loop
inc
cltd
mov
push
cmp
mov
lods
adc
es
out
sti
stc
xchg
pop
fidivl
int3
and
mov
jbe
ret
sub
jmp
cmp
and
jb
shr
xacquire
notl
jmp
mov
push
adc
enter
dec
mov
paddq
lock
cltd
das
mov
addr16
add
push
pop
pop
mov
add
daa
xchg
lds
fwait
mov
inc
xchg
cld
shrl
scas
mov
das
insl
movsb
add
pop
dec
inc
int3
fs
outsl
in
adc
pop
lret
arpl
xchg
xchg
ret
lret
fcomip
mov
and
pop
sahf
jno
lret
sarb
cli
jle
mov
sub
mov
xor
mov
xchg
cmpsb
inc
arpl
cmp
cmp
in
ret
mov
mov
repnz
and
or
rolb
push
push
loope
mov
mov
cwtl
adc
pop
push
outsb
adc
clc
lcall
repnz
fstpt
sbb
mov
xchg
inc
mov
mov
pop
stos
or
cmp
cmpsl
mov
sub
and
movsb
adc
xor
and
sbb
and
inc
fisubs
push
mov
mov
and
aam
addb
arpl
fcmovnu
adc
cmp
jns
les
cwtl
push
std
cli
pop
mov
adc
aas
faddl
fcomps
or
jp
enter
inc
lock
mov
cmp
adc
xor
shlb
cmp
les
stc
shlb
adc
shrb
jge
nop
aad
dec
sub
movsl
jp
scas
fstpt
inc
sub
xor
mov
dec
in
outsl
add
xchg
sub
push
push
test
inc
imul
cmp
xchg
ret
shll
aas
mov
cli
popa
iret
aad
sahf
addr16
xchg
or
mov
int3
xor
sbb
in
pop
dec
rcl
push
jno
sub
adc
push
or
sarb
aam
scas
arpl
pushf
cltd
or
ss
push
sbb
cwtl
daa
xchg
add
test
nop
dec
cltd
or
sub
aas
push
out
adc
mov
cmpsl
adc
imul
lods
push
jle
push
sub
and
jecxz
cwtl
aad
dec
push
rclb
mov
inc
loope
push
or
scas
mov
mov
bound
sub
ds
xlat
in
je
mov
es
cmp
pop
or
mov
sbb
cld
fldt
shlb
and
cmpsb
jb
aas
sub
cs
push
insl
out
sbb
cli
shl
lods
or
add
jno
adc
xchg
jo
lcall
scas
jecxz
mov
iret
add
call
and
mov
add
je
jo
dec
mov
xchg
cltd
jg
and
movsb
ja
xorb
jecxz
iret
pop
fists
rcr
or
iret
cmp
mov
inc
mov
outsl
js,pt
add
addl
jmp
test
bound
cmp
lods
mov
clc
sub
je
fiaddl
mov
outsl
inc
rcl
dec
add
mov
outsb
lods
pushf
pop
aad
loop
inc
cmp
push
mov
add
xor
js
or
stos
mov
test
push
orb
jmp
ror
push
jmp
mov
shufps
jns
xchg
les
mov
lock
mov
sub
test
insl
mov
add
call
repnz
idivl
leave
xchg
stos
or
scas
in
shrb
mov
loope
fwait
sbb
mov
lret
cmp
roll
fsub
fidivrl
xchg
mov
test
add
fs
add
jae
outsb
xchg
dec
cmp
dec
sti
enter
sti
or
mov
mov
mov
sub
ds
mov
and
sbb
pop
lret
or
mov
sub
enter
add
rcrb
adc
pop
xchg
outsb
fistl
notl
sub
or
xchg
stc
test
sbb
mov
lret
mov
outsl
mov
xlat
or
adc
mov
mov
lcall
xchg
sub
fcoms
mov
mov
arpl
enter
adc
xor
sub
lret
jnp
stos
out
push
and
js
inc
loope
push
mov
ss
xor
mov
outsb
ljmp
mulb
mov
adc
fisubs
sbb
aam
stc
iret
pop
int
fisubrs
adc
fmuls
adc
out
and
and
dec
or
fsubl
xor
mov
xor
test
and
xlat
inc
mov
sub
lret
ljmp
mov
addr16
imul
addr16
fwait
insl
mov
sbb
push
lea
inc
repnz
add
in
push
push
jge
std
repz
sbb
push
iret
cltd
addl
mov
inc
pop
punpcklwd
sti
sub
cld
adc
xor
cmpsb
jo
call
mov
incl
or
sub
outsl
shlb
outsb
out
ret
mov
mov
mov
js
rcl
adc
mov
pop
fisubl
sub
inc
or
mov
cmp
push
test
or
inc
addr16
movsb
pop
jns
ljmp
ret
fnsave
in
cld
xor
mov
pop
xlat
dec
xor
ret
sub
mov
and
into
mov
pop
movsb
repnz
pushf
insb
pusha
fdivrs
enter
mov
jmp
jecxz
cmp
sbb
mov
out
jp
andb
cld
or
adc
adc
or
cmp
sub
inc
outsb
insb
adcb
rol
pop
fdiv
clc
xchg
jle
inc
push
ret
mov
inc
dec
les
das
xlat
les
xchg
hlt
arpl
ret
lret
sub
jb
mov
xchg
jbe
xor
adc
or
mov
jmp
outsl
push
push
adc
jae
inc
mov
mov
bnd
mov
xlat
jle
repz
pop
and
in
aad
sbb
push
inc
add
addr16
gs
lds
inc
out
xor
hlt
mov
sub
xchg
out
pcmpeqw
mov
sub
jecxz
imul
orl
push
in
xor
mov
cld
xor
fcomps
loope
push
ja
js
lcallw
rcll
push
and
mov
push
mov
jecxz
add
out
pop
shll
ret
push
cmp
or
jbe
dec
mov
sbb
nop
pop
das
xchg
cmc
inc
out
out
enter
mov
adcb
outsl
inc
mov
push
jo
call
cwtl
ljmp
add
ljmp
subl
aas
jnp
arpl
movsb
aaa
cld
popa
lahf
daa
insl
xchg
jb
push
fistps
pop
sti
test
push
je
inc
std
pop
mov
pusha
testb
popa
xchg
push
xchg
xor
xchg
clc
mov
mov
adc
dec
jae
pop
fcoml
and
inc
je
xor
cs
subl
mov
adc
jne
outsb
pop
sub
cmp
mov
rcrb
mov
lods
adc
out
adc
jl
cltd
imul
mov
push
adc
sub
movsb
repnz
int
pop
in
pop
mov
bound
pop
push
mov
fnstenv
inc
push
cmp
loope
cli
in
adc
cmpl
repnz
out
mov
xchg
pop
repnz
mov
mov
push
test
push
aam
xchg
push
insb
pop
test
cmp
adc
ja
fabs
and
fbld
dec
adc
decb
dec
mov
mov
aaa
xchg
sbb
pop
cltd
fidivs
lock
shlb
iret
dec
mov
jmp
je
out
push
jns
pop
pop
and
cltd
pop
fcompl
nop
sub
jae
xor
pop
lcall
jmp
pop
ret
xor
out
inc
addr16
fcompp
iret
or
dec
shrb
pop
lods
and
dec
and
fdiv
sbb
pop
mov
xchg
xchg
jnp
mov
movsb
jge
lds
push
adc
outsl
mov
jp
pushf
sub
dec
xor
dec
sti
aam
xchg
in
nop
mov
repnz
outsb
xchg
dec
dec
xorl
aaa
je
ret
or
pop
adcb
test
scas
or
mov
jno
inc
sti
js
dec
incb
add
lret
add
jmp
les
xchg
in
out
sbb
popf
std
mov
shrb
addl
adc
mov
lcall
xchg
and
cmp
lcall
lret
cmp
mov
ljmp
imul
sub
inc
mov
mov
xor
imul
mov
aam
mov
push
sub
and
jle
test
pop
xor
sar
fldt
push
add
lods
push
fwait
clc
inc
inc
dec
mov
add
es
imul
xor
pop
ss
pop
xchg
add
enter
and
xchg
stc
cld
lahf
cs
das
inc
and
stc
mov
jg
fcoms
call
insl
icebp
pushf
mov
sahf
popf
in
xchg
pop
lock
add
xchg
or
jg
out
or
sub
pop
repnz
mov
inc
loope
sub
mov
add
outsl
sbb
pop
inc
aam
adc
mov
jnp
lods
lret
pop
mov
cltd
xor
push
fstps
sub
sub
arpl
mov
movsl
add
or
sbb
shrb
sbb
fiaddl
mov
adc
xor
xchg
and
mov
mov
sub
push
pop
or
ficompl
notl
cmp
pop
jmp
daa
inc
jge
jmp
mov
bound
pop
push
and
lods
push
mov
sub
xchg
adc
ret
sub
cmpsl
inc
dec
loop
bound
cli
je
mov
adc
les
xchg
push
mov
mov
xchg
cmpsl
int3
outsl
fcompl
sub
loopne
orl
sub
arpl
mov
cld
movsb
mov
and
mov
mov
repnz
inc
clc
insl
sbb
outsb
xchg
fs
pop
outsb
push
add
jbe
leave
fistl
daa
mov
cmp
popa
inc
stos
into
pop
addr16
mov
lock
in
jbe
adc
adc
fistpll
mov
adc
inc
aas
test
xor
jle
cltd
aad
ror
adc
dec
test
add
sti
cmp
loop
scas
repnz
outsb
aas
xchg
push
icebp
imul
mov
js
sub
out
stos
lret
push
out
sbb
dec
jl
inc
jmp
xchg
inc
aam
daa
fisubrs
add
push
fs
clc
and
mov
inc
pop
xchg
stc
jge
repz
xor
daa
divb
jecxz
sbb
mov
adc
arpl
bnd
movsb
or
ljmp
lret
mov
lock
cltd
fldenv
jecxz
outsl
shlb
in
sarb
mov
cwtl
fs
sbb
aaa
and
push
dec
jg
popa
fs
lcall
sub
pushf
fwait
xor
ficompl
cmp
push
inc
pop
rclb
and
pop
rclb
push
xor
jbe
cs
mov
push
or
in
push
add
fnstenv
jmp
xchg
jle
into
cmp
xlat
shl
nop
or
scas
aam
imul
cli
cld
sbb
daa
jb
sti
mov
cmpsb
mov
daa
mov
jg
adc
mov
or
dec
dec
sub
mov
in
jo
cmc
sbb
popf
subb
addl
cli
xorl
mov
sub
sub
mov
js
push
mov
push
test
jle
inc
mov
xchg
push
push
mov
dec
push
or
lods
xchg
outsb
cltd
and
adc
lcall
popa
lods
pmulhuw
or
adc
pop
je
cmp
xchg
jo
and
call
leave
fisttpl
adc
add
or
sub
add
ss
or
mov
lret
repnz
push
mov
arpl
dec
push
dec
cs
mov
pop
push
pop
in
popf
sarl
pop
mov
jo
int
mull
pop
ljmp
jo
pop
lods
ja
mov
or
mov
ds
xchg
outsl
jo
and
xchg
mov
adc
fdivs
xchg
or
sbb
pop
aam
nop
sub
add
pusha
pop
mov
push
aaa
jae
mov
aad
cli
sub
mov
jge
movsb
cmpl
mov
mov
adc
pop
sub
cmp
sbbb
shrb
and
and
stos
idivl
movsb
in
mov
mov
fildll
xchg
jecxz
pushf
cmp
adc
insb
push
lcall
fcoms
xor
data16
add
loope
andb
out
dec
popa
cmp
mov
sub
jge
jbe
fs
mov
cmp
or
clc
std
mov
aaa
mov
pop
mov
vpshufd
lods
aam
cmp
or
push
xchg
scas
insl
sbb
insl
arpl
xlat
or
adc
fcmovbe
cmc
stos
sbb
push
in
movsb
inc
jle
iret
bound
pop
inc
xchg
lock
and
jl
scas
movsl
frstor
shr
insb
fidivrs
scas
mov
push
out
push
jge
iret
xchg
add
adc
call
into
insb
add
xchg
mov
scas
xchg
cmp
arpl
dec
in
xchg
mov
sub
aam
and
or
dec
and
loopne
jg
mov
enter
cld
js
adc
lds
mov
inc
mov
xchg
pop
push
cmp
mov
das
sbb
stos
sbb
shlb
enter
push
dec
aaa
push
leave
int
lock
lods
and
ljmp
cli
xor
ret
xchg
jmp
mov
sub
cld
adc
jecxz
repnz
push
add
push
je
pop
mov
adc
nop
pop
enter
das
popa
out
push
xchg
jle
adc
ret
or
fisubrl
jae
sbb
sub
repz
jmp
jnp
sahf
sub
bound
mov
pop
mov
in
mov
popa
out
pop
imul
lods
outsb
xor
push
pop
dec
pop
std
push
ret
dec
push
sti
mov
adc
rcll
pushf
mov
inc
je
xlat
repnz
or
sbb
jecxz
ja
dec
ljmp
repnz
xlat
sub
push
mov
mov
sbb
popf
sbb
into
cmpl
cld
inc
js
xlat
fwait
adc
and
dec
movsb
pusha
xchg
adc
aam
xor
pop
push
pop
or
fs
jl
fstl
test
imull
mov
jb
inc
jns
dec
out
pop
out
ljmp
pop
jle,pn
pop
cmp
xchg
jle
dec
or
scas
sti
mov
dec
sub
sub
jge
push
or
jbe
xchg
add
stc
inc
jmp
cmpsb
out
mov
ds
inc
loop
in
repnz
mov
cmp
addr16
xchg
or
add
ja
jecxz
inc
or
or
ja
fdiv
outsl
pop
adc
xor
scas
mov
jecxz
adc
inc
or
pop
or
jbe
jecxz
das
sbb
loope
jle
and
je
imul
mov
lret
cmpb
or
cmp
jb
lahf
js
or
inc
mov
call
movl
and
add
sbb
cltd
jecxz
or
inc
jl
cld
adc
pop
or
jecxz
aam
fs
jno
push
push
mov
push
fwait
jnp
and
std
fucomi
loopne
mov
js
sbb
test
fwait
sbb
lock
mov
lret
add
repnz
sub
lods
ljmp
lods
hlt
mov
aad
xchg
mov
jb
mov
mov
mov
jmp
pop
ja
push
mov
sub
and
mov
enter
ret
cs
sbb
mov
loope
xlat
fs
movsb
sub
inc
lock
cltd
adc
sub
adc
subb
push
sub
aad
mov
mov
push
sbb
dec
ror
aam
aam
std
test
cmpsb
stos
mov
fildl
rclb
into
sub
es
push
xor
mov
icebp
imul
pop
dec
pop
das
jns
mov
xchg
nop
daa
sbb
pop
ljmp
lret
push
adc
hlt
inc
inc
dec
cld
dec
jge
push
or
and
adc
and
std
jne
orl
mov
stos
fsubr
into
push
pusha
jmp
in
arpl
sub
or
enter
ljmp
adc
std
cmp
jmp
adc
mov
cwtl
iret
pop
scas
or
js
lcall
cwtl
push
out
sub
cmp
loope
stc
jno
xchg
xchg
dec
imul
jno
xchg
push
mov
xchg
lock
cmp
frstor
imul
clc
std
lods
popf
sub
inc
or
add
xor
adc
jne
adc
ljmp
les
fucomp
repnz
ljmp
ret
mov
sub
fwait
shl
daa
and
xor
adc
jle
shrl
fs
lods
inc
insb
lahf
sub
pop
sbb
jb
sbb
test
orl
lods
hlt
xor
addr16
outsb
mov
inc
pop
lcall
or
mov
push
mov
daa
ljmp
and
mov
xchg
addr16
or
mov
sbb
in
dec
xchg
cmp
insb
fadd
outsl
ret
cli
js
sbb
fwait
jbe
movsb
aaa
cmpl
inc
mov
repz
scas
adc
iret
mov
out
je
in
inc
aaa
and
ds
or
leave
cmp
bound
xchg
mov
arpl
xlat
outsb
insl
pop
lds
and
mov
mov
cmp
dec
xchg
ljmp
add
mov
loopne
push
sub
mov
push
xor
mov
outsl
clc
dec
scas
inc
mull
fmulp
xor
pop
and
pop
dec
std
dec
sbb
shlb
fmull
add
test
in
xor
stos
push
int
dec
ret
int3
jns
mov
shl
test
jp
inc
cli
push
sub
jle
mov
loopne
sub
cld
pop
xchg
iret
lea
leave
push
xchg
or
repnz
pop
dec
mov
inc
mov
jmp
sti
xor
pop
testl
adc
out
adc
mov
push
sbb
cmc
add
fwait
mov
sbb
into
sbb
dec
jecxz
orl
jp
test
adc
lods
pop
lret
mov
ljmp
and
sub
data16
adc
adc
fs
ret
pop
test
pop
aad
inc
movsb
repnz
hlt
xor
add
xor
idivb
jno
pop
jnp
lea
popa
aas
les
ja
jmp
sbb
jecxz
or
cld
les
in
int
cmp
adc
xchg
cwtl
nop
adc
imul
adc
inc
negl
sbb
fs
or
adc
dec
push
mov
js
rclb
sti
fwait
cs
stos
es
mov
daa
sub
out
jg
outsl
mov
mov
cli
cmp
bound
out
iret
jae
loopne
cmp
adc
das
cmpsb
lds
sub
adc
movsb
outsl
movsb
pop
ret
push
loop
enter
lods
mov
cmp
push
or
push
xchg
dec
add
mov
xlat
bound
sbb
ljmp
cmp
adc
fs
sbb
stos
lds
dec
clc
dec
sbb
and
nop
repz
ret
lcall
pop
outsl
mov
adc
push
xchg
add
aad
xchg
or
adc
push
les
rcr
ret
arpl
and
lea
or
sti
xor
xchg
addr16
loope
jle
inc
shlb
fistps
xor
jg
jb
data16
and
and
xlat
sbb
sub
add
xlat
mov
dec
and
jb
in
dec
clc
insb
hlt
adc
and
lahf
mov
js
dec
inc
ljmp
and
out
pusha
stos
push
inc
push
add
lock
mov
inc
jg
movsl
xlat
mov
add
sub
sub
popf
movsl
cmp
xchg
mov
sbb
mull
add
mov
popa
lret
sub
aas
or
stc
mov
and
orl
fsubrs
outsl
aaa
pop
jb
xchg
and
mov
leave
mov
xchg
xor
push
pop
xor
inc
repnz
aad
dec
and
xchg
adc
nop
out
xchg
jecxz
sbb
and
jle
xchg
ret
icebp
fmulp
sbb
mov
add
ds
mov
cltd
test
mov
dec
rorb
jbe
xor
iret
les
push
or
movsl
stos
out
cmp
shll
icebp
fwait
vunpcklps
and
daa
call
xlat
mov
lock
clc
push
xchg
mov
in
adc
push
jno
xchg
popf
outsl
ljmp
orb
xlat
mov
stos
add
sti
pop
or
inc
loop
dec
xchg
adc
and
mov
cmp
sbb
fs
add
mov
jnp
imul
jnp
ret
sbb
mov
xchg
push
mov
jge
mov
cmp
xorb
push
fs
dec
mov
pop
rol
fs
dec
int
nop
cltd
cmpb
mov
shlb
std
imul
loopne
sub
stos
sbb
out
cld
popf
movl
nop
adc
or
add
dec
or
sarl
addr16
xchg
cs
mov
cs
nop
pop
ds
jle
cmp
idivb
push
push
lcall
or
mov
and
sbb
jno
add
repnz
ja
inc
in
or
cmpsl
push
loopne
shlb
jae
push
fidivl
sbb
cli
out
int
pusha
or
xchg
mov
fs
ja
mov
pusha
sbb
pop
test
aam
mov
int3
sbb
jl
int3
ja
sbb
mov
mov
arpl
jb
int
je
into
into
shll
sub
jbe
les
lock
sbb
pop
arpl
arpl
xchg
fldt
sub
add
ljmp
cwtl
ror
mov
jb
rcrl
sbb
repnz
cli
jo
cwtl
dec
xor
mov
cwtl
pop
leave
xchg
sahf
push
mov
sub
jae
cmp
repz
cmpsl
dec
ds
shll
inc
scas
xchg
push
jb
xchg
adc
enter
and
loope
lods
imul
or
stos
ret
sbb
sbb
movsb
xor
dec
int3
inc
lods
add
push
mov
mov
jae
negb
mov
sub
xchg
dec
ficomps
add
dec
inc
insl
sti
fcmove
sbb
insb
loop
add
les
jle
stos
push
pop
call
dec
pop
popa
repnz
dec
out
or
dec
dec
push
loopne
lods
inc
out
inc
xlat
les
decl
out
cmpl
add
idivl
sub
repnz
fstpt
loopne
sub
jle
aaa
orl
rolb
pop
lcall
hlt
in
sub
xchg
loope
mov
lcall
es
mov
popf
cs
lahf
jne
es
out
xor
pop
jno
test
aad
mov
dec
arpl
enter
sarb
cs
pop
sub
in
pushf
lret
mov
sbb
sbbb
stos
test
xor
lock
mov
mov
jmp
decb
push
jmp
dec
add
mov
jge
es
jb
into
outsb
mov
inc
jnp
mov
mov
imul
lret
fimuls
mov
xchg
dec
adc
ljmp
out
es
sbb
jp
popa
or
mov
fwait
inc
xchg
cmp
sti
popf
inc
adc
sbb
std
cmp
in
adc
or
mov
lret
fcmovb
jnp
fisubl
pop
and
jecxz
scas
das
jns
inc
iret
daa
out
mov
xlat
shlb
outsb
mov
jne
and
push
daa
adc
xchg
adc
dec
sahf
push
pop
mov
jp
mov
test
dec
cmpsl
or
mov
push
cmp
idiv
xchg
and
mov
sbb
fs
pushf
push
mov
jbe
popa
inc
sbb
dec
aad
lahf
or
stos
rclb
out
adc
mov
mov
fimull
enter
inc
mov
outsl
testl
dec
adc
std
test
test
or
shlb
lods
rolb
add
dec
sub
sbb
sti
call
aad
stos
push
inc
mov
mov
or
jnp
adc
adc
adc
fadds
or
insl
mov
icebp
dec
arpl
mov
shrl
shll
xor
cli
aad
sbb
pop
and
out
pop
inc
leave
sub
loop
scas
pop
mov
je
and
inc
sbb
inc
sub
or
test
and
pusha
dec
sbb
lods
lahf
inc
dec
cmp
cmpsb
mov
addr16
loopne
xchg
jle
icebp
out
or
bound
mov
mov
ret
and
sub
iret
cmp
mov
jmp
sub
pop
dec
add
aad
in
push
jae
inc
inc
pop
push
push
mov
sub
sbb
add
mov
mov
lret
out
push
fists
test
fs
cmp
cs
pop
mov
dec
xlat
mov
bound
aad
js
mov
dec
lods
rcr
pop
scas
popa
jge
sub
adc
mov
mov
push
cmpsl
scas
sti
cld
es
add
inc
fidivs
or
lea
mov
inc
das
adc
xchg
sub
sbb
test
shlb
rorb
dec
mov
mov
lret
xchg
addr16
jle
dec
je
movsb
aad
arpl
push
inc
pushf
sbb
mov
pop
sub
fbstp
sbb
movsb
shrb
fstpt
cmpsl
mov
or
mov
xchg
popf
lret
adc
fsubs
je
inc
sbb
lcall
push
xchg
jo
fbstp
mov
cmp
aad
or
sub
imul
xlat
jno
add
bnd
shlb
js
jo
das
jle
mov
repnz
xchg
mov
cmc
imul
add
mov
popf
pop
cld
rorl
inc
imul
mov
mov
inc
subb
cmp
push
cs
repz
ja
ret
sub
fisubs
ja
leave
mov
mov
mov
pushf
cld
stos
adc
in
dec
mov
xlat
out
lods
int
push
sub
mov
cs
clc
loope
cbtw
cmp
jmp
test
and
push
add
mov
jmp
cltd
inc
outsb
loopne
in
sbb
xchg
or
pop
pop
outsb
stos
adc
push
dec
mov
aam
loop
test
xor
pop
push
nop
test
mov
sbb
mov
outsb
xor
mov
outsl
testl
test
cld
pop
cmp
xchg
xchg
sub
dec
inc
mov
inc
mov
repnz
cli
jecxz
sbb
sub
xlat
stos
test
jne
push
arpl
popf
ds
jbe
adc
bnd
mov
ljmp
sub
mov
mov
es
push
sub
fisubrs
inc
and
xchg
sub
test
out
cmpsb
inc
mov
ficomps
add
rcrb
test
fisttpll
add
cs
js
mov
sub
push
pusha
imul
into
pop
sub
xchg
cmp
mov
pop
mov
lcall
mov
lahf
xchg
test
fistl
or
in
pop
sub
lods
enter
xor
cmpsb
pop
mov
inc
fisttpl
loopne
mov
sbb
push
gs
fimull
adc
push
sbb
pushl
outsb
loopne
push
or
mov
add
je
cmp
shrb
pushf
ljmp
in
movsl
inc
popa
mov
adc
out
ret
cmpsl
sub
dec
sbb
mov
in
es
repnz
fcompl
popa
cmpsl
xlat
sbb
or
and
ljmp
mov
cld
or
mov
xchg
mov
repnz
sbb
andb
leave
push
xchg
mov
sub
inc
es
adc
out
xchg
jecxz
adc
inc
loope
mov
sbb
cmp
pop
mov
mov
shlb
lods
or
loop
sbb
mov
daa
aad
and
fsubs
pop
ljmp
mov
insl
sub
mov
cmp
out
and
incb
insl
inc
push
das
mov
jo
repz
sub
repnz
jne
add
push
jne
fdivs
inc
pop
iret
nop
push
jns
cli
sub
or
adc
cmp
or
push
jl
daa
cmpsl
loopne
rolb
aad
add
inc
xor
adc
insb
or
loopne
mov
dec
addb
mov
cwtl
mov
movsl
cmp
pop
outsb
test
andl
jmp
daa
dec
clc
outsb
jge
mov
sub
call
loope
dec
loopne
sbb
stos
nop
pop
lcall
push
loopne
test
sub
paddd
cmp
adc
cs
aaa
fcmovnb
sub
in
cmpsl
or
in
arpl
lds
xor
jp
les
cld
and
mov
mov
mov
and
cli
sub
pusha
xchg
mov
cmc
xlat
fdivrs
outsl
stc
inc
shrb
xchg
imul
ret
mov
sahf
add
adcb
xchg
cmp
test
xchg
sub
ljmp
mov
flds
data16
adc
sbb
daa
inc
add
jg
ljmp
push
add
push
fwait
mov
ret
outsb
bound
adc
loop
arpl
mov
push
scas
je
mov
mov
sub
or
cld
push
js
mov
xchg
incb
repnz
sbb
mov
cltd
mov
or
inc
jnp
addr16
jmp
mulb
pop
addr16
scas
and
mov
std
test
or
shlb
push
sbb
mov
iret
adcl
xchg
mov
fimull
push
push
adc
or
movsl
movsb
adc
scas
cmp
sub
dec
fwait
mov
adc
test
fs
mov
or
mov
cmc
adc
imul
enter
jnp
sub
pop
sbb
adc
pop
sbb
dec
sub
pop
mov
sti
mov
loope
mov
xor
jl
into
and
incb
sub
xor
jmp
test
sbb
movsb
das
pushf
scas
loop
enter
out
jmp
add
inc
movsb
int3
xor
mov
fistpll
mov
je
mov
push
jnp
int
icebp
mov
arpl
xchg
push
ja
sarl
push
push
adc
inc
or
lret
int3
sar
pop
push
loopne
mov
fwait
pop
dec
popw
cmp
adc
pop
inc
jb
jnp
sub
mov
push
pop
jmp
cmp
pop
aad
sub
sub
fs
mov
popa
aam
mov
push
cli
lods
sub
icebp
fdivrs
push
xor
mov
xchg
add
insl
add
sub
mov
xchg
sub
fdiv
xor
mov
jp
pop
cltd
roll
mov
jecxz
movl
jae
jmp
cld
sahf
in
sub
incl
jge
or
or
pop
std
xchg
and
add
sub
kmovw
jle
cltd
insb
cmp
jnp
sbb
lret
jb
sub
aad
lock
mov
popf
outsl
lods
jno
iret
adc
xchg
aam
adc
pop
push
sub
jmp
sti
mov
adc
jb
sbb
and
ret
add
xchg
arpl
aam
loop
xchg
out
in
inc
or
pushf
xor
push
sub
lock
shrb
fsub
movsl
sub
push
push
in
out
ret
pop
sub
mov
sbb
xchg
xchg
mov
popa
dec
add
bnd
add
mov
inc
pop
push
rcl
mov
out
out
cltd
pop
outsl
adc
and
push
subb
outsb
cltd
inc
xchg
or
insb
popa
aad
inc
mov
pop
mov
cmp
arpl
mov
mov
movsl
lods
add
inc
or
fisubrl
jo
cmpsl
imul
jg
je
add
add
add
fdivs
mov
icebp
xor
repnz
and
cli
jns
stos
sub
sbb
jo
xor
sub
mov
push
iret
daa
scas
push
lret
inc
pop
int
aam
into
adc
xchg
sub
inc
repnz
fisubl
push
adc
gs
popa
push
data16
jo
pop
pop
fidivrs
adc
mov
call
lcall
or
mov
adc
cmp
sub
mov
ja
adc
imul
ds
mov
push
xor
xor
xchg
int3
addb
lret
das
xchg
repnz
cmp
sbb
popa
cmp
xor
fwait
sti
outsb
es
arpl
and
and
imul
or
addr16
xchg
out
add
sbb
bound
fsub
fs
shl
fwait
add
pop
repnz
pusha
je
in
sbb
adc
call
mov
sub
sub
and
imul
xchg
jo
sahf
and
or
push
pop
pop
push
xchg
pop
in
jmp
push
arpl
jo
xor
and
sahf
pop
outsl
in
fnstcw
inc
dec
add
or
sbb
movhps
sbb
mov
jg
sbb
xchg
arpl
mull
in
or
cs
inc
dec
pushf
and
sbb
sbb
mov
sbb
test
cmp
stos
adc
dec
jg
jb
add
adc
ret
lock
mov
pop
out
stc
mov
outsb
or
leavew
sub
add
sahf
jle
xchg
cmc
and
cmp
mov
push
cmpsb
in
add
cmp
je
dec
ljmp
adc
mov
shll
bnd
push
mov
or
jecxz
ljmp
mov
imul
pushf
sbb
std
sbb
pop
or
jno
iret
cld
mov
std
lret
iret
lods
adc
into
add
shl
popf
mov
or
xchg
adc
add
sbb
test
mov
ret
adc
ror
scas
lods
dec
xchg
mov
sbb
icebp
xlat
cmp
ret
adc
ficoml
cbtw
icebp
pop
pushf
lds
out
mov
sub
pop
sub
pop
push
icebp
jge
mov
out
push
sbb
pop
inc
je
nop
aad
cwtl
pop
insl
or
dec
or
cltd
ljmp
cmc
inc
jno
lret
mov
lods
sub
mov
mov
arpl
push
aas
jo
testl
mov
and
jp
ja
outsl
xor
xor
ja
push
lret
insb
out
cmp
addr16
xchg
roll
movsb
or
lods
sti
js
jl
icebp
sub
out
int3
mov
mov
cs
and
cld
inc
push
pop
fdiv
mov
lods
mov
ret
xchg
mov
add
push
xlat
jl
lret
mov
mov
mov
push
and
dec
pop
mov
repnz
and
pop
call
sbb
dec
jmp
sbb
sbb
pop
jnp
and
loope
mov
adc
push
loopne
ljmp
ja
sbb
or
loope
and
orb
dec
sbb
cmp
lds
dec
nop
aas
push
rorb
popa
cmp
dec
fiaddl
lret
sbb
dec
scas
rorb
jmp
sub
aaa
je
mov
test
dec
xchg
cmpsl
repnz
subb
outsl
jae
mov
xchg
cmp
lret
push
mov
enter
mov
repnz
ds
outsl
xchg
pop
out
sub
scas
std
negl
push
mov
mov
and
jo
and
pushf
sub
mov
inc
fisttps
cli
outsl
test
das
jae
xchg
adc
rcrb
mov
pop
inc
cwtl
or
test
pop
or
sub
outsl
pop
clc
cmpb
sub
outsl
testl
ja
stos
out
call
repnz
dec
scas
aam
push
mov
sub
leave
add
pminsw
or
inc
popa
repnz
sti
and
jle
dec
fnsave
cmc
jle
pop
inc
fiaddl
fdiv
dec
or
jmp
mov
lcall
pop
adc
cmc
cwtl
push
icebp
mov
call
mov
movsb
fs
sub
arpl
sbb
cmp
je
call
clc
mov
stos
adc
aaa
aas
sbb
popa
mov
in
daa
lcall
call
sub
and
pop
sbb
mov
repnz
mov
mov
push
dec
out
ss
cmp
leave
decb
cmp
jle
fldenv
adc
cltd
nop
and
sbb
and
das
insb
mov
mov
negb
jo
int
dec
xor
lea
mov
sbb
nop
cmp
jl
data16
or
adc
shll
adc
cmp
jecxz
mov
add
adc
lahf
popf
sub
fsubrs
inc
je
or
ret
jg
lds
jbe
jg
mov
ljmp
ds
xor
adc
mov
pop
outsl
lret
imul
ljmp
mov
in
scas
outsl
cwtl
sub
xchg
xchg
js
scas
push
insl
lahf
es
add
mov
dec
lret
mov
fimull
int
and
push
or
fidivrl
scas
leave
mov
imul
outsl
lretw
repnz
lods
ljmp
cmp
in
insb
cmp
roll
mov
sbb
call
int
pop
and
gs
mov
lods
pop
rclw
mov
aad
and
mov
or
or
and
sbb
jg
cmp
mov
jb
jecxz
pop
xchg
xchg
insb
mov
adc
out
repnz
xor
not
and
jge
das
call
ljmp
xchg
jmp
sti
test
cmpsb
mov
test
or
inc
cld
icebp
ret
les
mov
pop
in
dec
rcrb
mov
xor
jle
jecxz
pop
and
xor
adc
inc
sbb
jp
sub
test
sbb
push
aam
bound
mov
pop
push
test
andb
imul
cli
jp
pop
jns
lcall
in
or
add
xchg
test
or
push
or
pop
das
ja
nop
push
lcall
jecxz
lret
sub
xchg
jle
mov
ds
sub
repnz
test
cld
inc
iret
out
jno
push
shrl
movb
or
lcall
cmp
icebp
cmp
or
lret
jo
sbb
scas
hlt
aaa
int
addb
sub
sbb
out
outsl
mov
popf
push
outsl
js
repnz
xor
push
xchg
stc
add
mov
jns
jl
repz
clc
push
jmp
cmp
mov
xchg
add
mul
dec
repnz
fstps
das
jecxz
sub
push
les
sbb
pop
dec
cmpsl
cmpb
sub
lods
xor
and
div
outsl
fmul
pop
popa
add
sbb
sti
incl
cmp
out
push
sub
stc
lods
mov
or
insb
inc
sub
jb
mov
mov
jmp
adc
icebp
inc
xor
mov
push
pop
sub
inc
jo
aaa
pmaxsw
mov
cmp
xor
sub
jbe
mov
lret
xor
mov
adc
pop
or
jle
ret
xchg
and
jle
mov
rcll
lret
mov
pushf
cli
pop
dec
cltd
mov
or
adc
repnz
xor
xchg
addr16
rcr
sbb
pop
adc
adc
insb
adc
in
pop
nop
cli
or
in
out
mov
mov
jo
repnz
and
pop
add
push
enter
push
and
sbb
push
insl
mov
int3
movsl
das
hlt
add
andb
xchg
jle
insb
jno
adc
mov
xchg
cmp
mov
sbb
xchg
or
js
xchg
sbb
ss
repnz
mov
loope
out
in
sub
inc
push
xor
inc
mov
mov
sub
mov
dec
push
sbb
dec
movsb
mov
mov
inc
sbb
outsl
loopne
push
popa
adc
daa
mov
or
jg
mov
inc
and
arpl
push
mov
out
and
mov
mov
mov
adc
popa
imul
daa
inc
roll
mov
push
mov
ja
push
test
pop
add
mov
shlb
insb
test
test
leave
aam
mov
and
mov
shl
inc
in
imul
cs
xor
orl
popa
jmp
cmpb
and
push
xchg
mov
lcall
lcall
out
and
test
lahf
inc
mov
lret
push
scas
outsl
jp
out
ficomps
in
push
testb
and
ljmp
andl
clc
fsubl
or
pop
or
pop
movsb
loopne,pt
jno
push
roll
xchg
and
lahf
nop
xor
push
and
sti
mov
sub
test
mov
scas
lcall
and
lock
xchg
push
inc
pop
mov
andb
imul
fbstp
mov
cwtl
ljmp
jmp
in
jae
ret
jecxz
pop
jmp
jmp
sub
cld
push
jnp
cs
mov
repnz
mov
call
pop
mov
push
mov
and
push
lods
xchg
into
or
test
xor
fimull
xchg
sbb
or
les
push
cmpsl
sbb
mov
fsubrl
xchg
lock
xor
int
aaa
and
xor
in
sbb
shrl
filds
insb
push
pop
cli
pop
or
adc
pop
adc
adc
and
xchg
mov
cmp
js
imul
jl
cmpsl
jge
outsb
nop
aam
adc
mov
and
stc
push
or
mov
cmpsl
sub
es
jg
cmp
jp
mov
movsb
call
cmp
jb
mov
push
sub
out
push
jmp
rcr
popa
in
sub
andl
pop
jge
cmp
rcrl
inc
mov
or
pop
mov
jb
mov
mov
sti
mov
dec
push
or
xchg
scas
bound
repnz
mov
movsl
or
mov
insl
test
lea
cmp
jns
push
fists
cmc
aam
icebp
adc
clc
insl
repnz
xor
sbb
ret
nop
and
mov
popa
cmp
adc
stc
sarb
popa
adc
jo
ljmp
sbb
dec
sub
addps
sub
rclb
mov
int3
loope
shrb
shll
dec
ret
adc
xchg
jns
cmp
jnp
jl
test
pop
repnz
adc
pusha
js
or
mov
add
call
pop
dec
popa
jns
lcall
lods
mov
and
bound
inc
cmc
jnp
test
out
dec
xlat
int
mov
jns
fs
mov
mov
repnz
loop
stc
push
jmp
leave
cmp
and
addr16
dec
les
dec
into
stc
inc
pop
dec
leave
out
push
adc
dec
pop
out
dec
cmpsl
mov
mov
mov
sti
add
inc
into
and
sti
sub
fsubl
adc
ret
jmp
shll
or
dec
xor
int
pop
pop
cmpsl
outsb
ljmp
ficoml
notl
inc
imull
stc
pushf
loop
mov
push
out
add
mov
imul
mov
std
ss
loopne
or
loopne
in
sub
adc
adcl
and
popa
mov
mov
sbb
test
aaa
loope
fs
stos
icebp
sbbb
and
mov
aas
fs
std
jge
jb
mov
frstor
aam
adc
mov
aas
xchg
sarb
push
mov
iret
jge
test
mov
adc
sahf
les
xchg
sub
sub
mov
shrl
xchg
push
call
dec
outsb
xchg
or
cmp
sub
nop
or
int3
jge
and
dec
mov
sbb
xor
cmp
arpl
adc
arpl
ficoml
mov
pop
and
setbe
stc
in
mov
je
mov
fsubl
jle
lods
leave
push
ret
add
jge
jbe
cmp
inc
mov
adc
sbb
jmp
dec
cwtl
and
arpl
jg
jecxz
mov
adc
sbb
leave
repz
movsb
mov
js
lock
push
add
jno
mov
shlb
or
mov
add
out
sbb
mov
push
mov
movsb
test
lret
jns
mov
sub
or
adc
inc
out
test
xor
bnd
push
in
sub
rcrl
jmp
mov
pop
cmc
adcb
mov
test
fwait
das
fdivrl
popf
lods
lahf
mov
sub
ljmp
mov
lods
hlt
jle
jg
jg
lret
test
mov
sub
icebp
cmp
push
fmul
mov
adc
scas
out
mov
pop
aaa
or
mov
mov
mov
and
notl
ljmp
pop
aas
mov
dec
pusha
bound
dec
sti
ds
bound
mov
movsb
insl
cmp
movsb
cmp
and
add
xor
loope
jno
lds
leave
cmpl
xorb
jo
adc
add
push
add
pop
sti
movsb
repz
in
adc
mov
lds
sub
add
mov
push
jno
dec
and
and
jnp
scas
adc
and
fistl
das
into
arpl
inc
jno
jb
movsb
mov
subb
mov
sahf
test
jle
test
xlat
sub
add
lods
scas
aam
popa
test
into
or
sbb
out
push
jmp
aad
inc
pop
fcmovu
in
cmp
xlat
ds
push
sbb
int
pop
pop
mov
sbb
mov
test
addr16
daa
adc
pop
add
mov
inc
loopne
jae
sbb
ds
inc
in
cmp
jns
test
fdivrs
leave
in
and
pop
sub
rclb
sbb
xor
xor
jge
jg
sbb
fucomi
mov
es
cli
aad
jbe
out
mov
cwtl
pop
subb
mov
ss
inc
ljmp
seto
or
adc
fldenv
daa
es
jle
fsub
call
adc
xchg
icebp
or
cmp
sbb
aaa
mov
cmp
or
pop
push
aas
add
mov
nop
inc
in
call
or
ficoml
sub
adc
xchg
pop
mov
and
push
cwtl
adc
repnz
sbb
cmc
jbe
mov
fwait
lret
push
pop
xlat
or
ja
inc
inc
cmpsb
ficoms
rcrl
shrb
test
jne
fs
pop
mov
push
jecxz
lea
xlat
pop
cld
cmp
push
ds
push
xorb
hlt
ds
leave
push
shrl
jecxz
lods
test
or
or
inc
dec
repnz
jge
pop
in
mov
aas
je
popa
outsl
or
in
cmp
sti
mov
into
xchg
xchg
subb
pushl
popf
cmp
imul
fiadds
or
lods
jnp
xchg
sbb
push
daa
sub
inc
jle
test
push
pop
cwtl
ljmp
mov
les
sbb
and
ljmp
ja
push
fs
sub
aam
stos
mov
repz
mov
or
xchg
dec
cltd
push
mov
and
loope
mov
popf
enter
bound
and
push
push
inc
mov
movsb
xorb
xor
inc
mov
sub
cmp
test
or
pop
outsl
clc
test
dec
or
sbb
xchg
inc
xchg
dec
cmp
adc
pop
dec
and
adc
sub
pushf
in
adc
jmp
gs
xor
pop
repz
pop
in
hlt
xor
add
sti
sub
mov
jmp
outsb
mov
inc
inc
mov
or
add
pop
call
jns
flds
cwtl
inc
push
push
pusha
cmpl
xor
mov
inc
in
pop
addr16
mov
out
popa
shlb
leave
sti
or
out
sti
sahf
fistpll
outsb
nop
icebp
insb
test
dec
pop
lret
xchg
add
push
cwtl
imull
sub
mov
pop
sub
sub
std
push
in
je
or
clc
jle
lock
push
mov
cmc
jae,pt
out
aaa
and
xorl
fidivl
xchg
mov
adcl
xor
push
lahf
scas
jnp
push
xor
ljmp
mov
sub
pop
ja
adc
push
mov
cmpsl
cmp
movsb
push
mov
repz
in
das
out
dec
inc
jge
cmp
out
jns
add
jle
adc
adc
or
loope
mov
stc
cmp
jmp
and
add
and
repnz
xchg
add
test
ret
xchg
dec
jg
test
cld
in
pop
out
lret
popa
adc
stos
mov
fists
cltd
cmp
movsb
repnz
mov
pop
popa
sbb
push
mov
sbb
aad
and
add
movsb
test
insl
add
mov
cld
push
and
popa
inc
xchg
mov
ret
dec
ss
imul
xor
xor
cli
in
out
sub
mov
mov
mov
jl
je
or
dec
and
into
jnp
xchg
sub
int
mov
push
pushf
sub
cmp
and
out
scas
rcrb
std
loope
xor
mov
and
pop
push
pushf
int
xchg
mov
imul
outsl
push
bound
mov
dec
cli
ret
fisttpl
out
jb
stos
mov
sub
xor
ljmp
sbb
sub
popf
mov
rclb
mov
mov
jno
or
mov
out
inc
or
lcall
scas
inc
mov
adc
dec
add
stc
sbb
mov
add
je
pop
push
lcall
hlt
lods
sarl
mov
loop
idivl
sub
jmp
mov
xlat
call
jle
and
pop
icebp
push
adc
icebp
pop
pop
sub
xchg
push
inc
or
insb
int3
xchg
mov
xor
popa
push
dec
add
or
ja
test
fsubrs
and
xchg
das
push
sub
sbb
lcall
jl
int
mov
push
negb
xor
lret
sbb
and
lcall
xchg
in
daa
int
std
jmp
dec
lods
push
arpl
inc
push
jo,pn
cmp
int3
pop
push
jecxz
je
shlb
ljmp
cs
sbb
lods
or
sbb
outsl
je
je
adc
daa
rclb
mov
xchg
mov
cltd
call
sub
dec
xor
mov
and
inc
sbb
cltd
sub
sbb
out
dec
jns
lcall
lret
inc
inc
pop
sbb
sub
icebp
fimull
jge
out
popa
dec
sub
cmp
adc
xor
sbb
and
pop
dec
push
fmul
sbb
lahf
jb
push
movsb
or
aam
cmp
outsl
push
scas
loope
pop
push
cltd
call
dec
inc
mov
xor
int
repnz
xchg
jg
icebp
fiaddl
jge
mov
adc
insl
and
cltd
adc
mov
repnz
das
xchg
outsl
js
dec
ljmp
lret
outsl
clc
push
cmp
dec
leave
fistpl
pop
and
dec
aas
and
es
sub
jne
fcoms
std
jnp
add
icebp
sbb
popf
xchg
push
xchg
push
movsb
stc
add
movsb
pop
mov
lret
sbb
mov
test
sbb
mov
dec
add
mov
sub
lretw
xchg
repnz
loope
pop
xchg
ljmp
js
loope
jo
das
into
or
lods
sbb
xchg
add
inc
xor
lea
cs
push
mov
push
sub
outsl
lods
jle
mov
enter
popa
aad
in
and
add
arpl
push
loop
mov
sub
mov
sbb
dec
sub
nop
scas
sbb
inc
lods
fisttps
roll
mov
pusha
lcall
pop
test
mov
adc
icebp
imulb
cmc
sbb
mov
sbb
adc
mov
cmp
sbb
jnp
ds
jnp
aas
mov
in
mov
push
push
sub
aaa
sub
repnz
mov
jo
lcall
ret
xchg
jle
test
scas
jle
mov
lds
mov
es
aam
stc
cmc
ljmp
sub
movsb
jo
and
push
arpl
orb
adc
push
scas
dec
mov
jecxz
movsb
mov
pop
imul
lret
sbb
rorl
xchg
call
movsb
sub
mov
scas
pop
sub
sub
repnz
xchg
je
pop
and
enter
sbb
jle
ret
pop
jl
pusha
daa
push
or
xor
mov
rcrl
add
jbe
bound
and
sbb
xchg
loope
aam
test
popl
mov
rcrb
adc
mov
imul
loope
inc
jno
int3
daa
xchg
ja
sub
xchg
fldenv
stos
ss
sarb
xchg
and
pop
int3
pop
adc
jge
inc
or
pop
push
js
push
notl
je
sbb
shl
loope
fwait
les
outsb
jecxz
xchg
or
xchg
out
addb
xchg
enter
sti
faddl
xchg
mov
xchg
into
sub
xor
jmp
jecxz
cmc
fdivrl
stc
push
jmp
xchg
repz
lret
lods
sub
push
and
es
cltd
jb
outsb
clc
xor
stos
dec
inc
outsb
cwtl
mov
lcall
pop
sti
and
mov
repnz
fidivrl
jl
adc
push
cmp
in
int
sti
mov
pop
jno
and
rcll
mov
or
jp
cwtl
jmp
pop
bound
jmp
cmpsb
lds
inc
cmpsb
sbb
icebp
xchg
jge
xor
sub
inc
gs
stc
gs
orl
mov
inc
push
pop
sub
add
ja
cmp
or
flds
loop,pn
and
das
clc
pop
pop
mov
jge
cli
aad
outsl
xor
add
movsl
adc
in
dec
sti
xchg
inc
or
lods
mov
popa
out
adc
sub
dec
xchg
dec
adc
or
inc
and
mov
loopne
adc
fdivrs
sbb
arpl
adc
inc
lds
push
sti
cmp
inc
sbb
lret
pop
fs
jb
pop
mov
dec
dec
jl
inc
iret
scas
lds
insl
ret
sbb
test
in
dec
fisttpll
mov
fiaddl
repz
adc
jne
push
mov
scas
inc
inc
repz
aam
mov
imull
adc
popa
mov
lret
lret
mov
add
jge
lahf
push
aaa
loope
sbb
rep
pop
cli
push
jnp
rcr
ja
xchg
jmp
mov
or
clc
lods
xchg
cltd
out
dec
mov
push
pop
repz
popa
arpl
push
jae
out
or
cs
ror
sbb
push
dec
kandb
call
lret
test
je
pop
cld
push
das
mov
out
push
test
je
mov
pop
lret
maxps
std
xchg
cld
int
mov
or
push
arpl
rcrl
pop
aas
xor
insb
outsb
or
daa
adc
add
add
push
mov
enter
cmpsl
sbb
mov
and
or
enter
jmp
rcrb
fisubl
arpl
pop
pop
sti
xchg
mov
clc
test
lea
daa
mov
mov
repnz
icebp
and
or
idivb
sub
or
out
cs
addr16
xor
push
out
cli
add
insb
mov
push
push
ret
inc
cmp
jne
jne
subl
inc
and
xlat
adc
ljmp
out
das
insl
adcl
fcmovnu
sbb
mov
pop
add
push
cltd
mov
lret
xchg
fstp
jno
jnp
cmpsl
popa
mov
cwtl
lds
sub
cmp
mov
repnz
fisubrl
mov
adc
cmp
imul
rorb
jecxz
test
xchg
mov
inc
add
xchg
outsl
dec
adc
out
cs
fistpll
pop
and
enter
daa
jl
mov
movsb
and
movsl
out
adc
or
pop
sbb
insl
dec
in
adc
dec
inc
and
mov
add
mov
or
or
add
adc
mov
mov
dec
sub
sbb
xlat
les
sbb
arpl
insb
repnz
xchg
and
inc
push
push
xor
pop
cmp
cmp
adc
leave
mov
adcl
and
add
push
cmp
cmc
push
std
and
outsb
rol
sub
jecxz
pop
mov
push
pop
fidivl
jbe
ljmp
test
pushf
push
imul
loope
mov
in
mov
push
movsb
add
int
mov
or
test
cmp
sub
ljmp
mov
inc
lds
imulb
and
fstps
add
test
mov
mov
outsb
push
stos
xchg
sub
fcmovbe
in
push
andb
inc
outsb
dec
and
or
mov
shrb
sbb
add
adcl
cltd
and
adc
test
xchg
sbb
das
ja
add
hlt
push
jns
sbb
or
adc
ret
mov
aaa
sub
pushf
leave
popf
testl
ds
dec
mov
jle
ss
test
sbb
insb
sub
adc
ret
jecxz
repz
mov
push
cmp
mov
ss
pushf
jnp
fisubrs
cmpsl
sub
cld
mov
xchg
les
mov
sbb
js
dec
mov
xchg
test
and
push
inc
dec
add
stos
mov
lss
push
mov
push
enter
movsb
sbb
int3
gs
je
mov
xchg
add
data16
pop
push
out
rcrb
dec
dec
or
or
cmp
aaa
cmp
sub
repnz
hlt
imul
adc
xor
fimuls
into
bound
loope
sub
xor
mov
dec
pop
pusha
mov
lea
inc
and
fs
jp
cmp
xchg
push
aad
repnz
push
sbb
jae
mov
pop
lcall
push
mov
dec
aas
or
lret
sahf
or
mov
dec
fnsave
jmp
or
or
xorl
inc
and
sub
mov
loop
mov
sub
push
int
pop
ljmp
adc
and
xor
xor
mov
std
ljmp
jmp
hlt
xlat
mov
js
xchg
bnd
repnz
scas
sbb
addr16
dec
xchg
shll
adc
mov
adcl
add
mov
jmp
mov
ss
cmp
jge
mov
inc
xchg
jge
sbb
inc
adc
inc
xlat
xor
aad
out
ljmp
or
loope
xor
lea
ds
and
and
scas
mov
add
hlt
inc
std
in
loopne
enter
gs
lahf
loope
dec
push
pusha
nop
repnz
jecxz
aad
inc
or
or
mov
mov
sbb
adc
sbb
repnz
dec
mov
mov
mov
in
outsl
fmul
adc
dec
jno
jl
mov
lret
daa
loope
adc
in
repnz
jl
jecxz
lea
sub
icebp
jecxz
sub
call
xlat
stc
and
lock
ret
and
lcall
in
inc
inc
mov
sbb
dec
das
lret
adc
xchg
jge
dec
mov
jae
or
pushf
and
sbb
loope
push
iret
test
aaa
jo
xlat
dec
lods
arpl
ret
divl
fs
mov
int
out
scas
push
sub
or
imul
out
das
sbb
js
adc
aam
jecxz
cmp
mov
sbb
inc
out
bound
out
popa
xor
or
xchg
adc
jp
sbb
lret
mov
test
pop
push
push
int3
repz
cwtl
inc
xchg
pop
xor
fs
pop
jp
pop
dec
jo
sub
inc
aaa
mov
pushf
aad
mov
in
lea
dec
adc
cmp
mov
inc
xchg
inc
and
adc
xchg
fdivs
and
sbb
push
xlat
in
inc
int
fwait
std
adc
aad
popf
mov
loopne
add
mov
fs
lret
mov
movsb
outsb
insb
in
pop
adc
push
mov
xor
mov
sub
cmp
dec
mov
lock
add
adc
pop
cmpl
arpl
sub
leave
jl
dec
pop
mov
dec
js
jb
mov
mov
adc
std
clc
inc
scas
movsl
das
js
push
push
mov
mov
aam
js
cmp
shr
subb
push
and
and
enter
mov
push
push
sbb
cltd
or
sahf
mov
popa
hlt
mov
xorl
sbb
cmp
dec
bnd
push
int3
jecxz
ljmp
arpl
push
stos
shll
and
test
lret
out
jb
das
pop
out
jns
sbb
mov
and
lcall
adcl
fs
iret
insb
subb
xchg
dec
push
mov
movsb
movsl
mov
cld
scas
shl
mov
push
add
add
cmpsl
orb
enter
insl
roll
test
adc
pop
ss
lret
mov
inc
sub
imul
rorw
repz
and
jmp
test
push
mov
or
hlt
rorb
pop
sbb
divb
sbb
fsubr
push
daa
push
bound
mov
sahf
xor
jb
xor
mov
jne
incb
and
jnp
fisubrl
sub
add
mov
fwait
repz
fimull
cmpsb
sbb
das
inc
int
std
mov
flds
push
xchg
lahf
sbb
repnz
dec
cmp
inc
xlat
and
je,pt
into
add
scas
or
or
cld
mov
mov
xor
sbb
pop
arpl
cmp
jecxz
mov
sub
das
or
adc
movsb
xlat
call
cmp
xchg
push
add
cmpsl
decb
and
or
and
push
sub
push
jl
call
mov
fidivrl
xor
pop
push
lds
inc
push
add
jle
adc
ret
xchg
xor
cmc
scas
aam
add
ret
xor
inc
scas
popa
pop
pop
and
fcoms
inc
xchg
sbb
imul
or
xor
packuswb
int3
jg
clc
push
mov
sbb
test
adc
dec
subl
pop
repnz
hlt
out
js
movl
jb
ret
int3
adc
jmp
loope
arpl
and
scas
xchg
sbbb
mov
loopne
cli
inc
fidivl
lcall
jmp
adc
mov
add
out
les
xor
gs
mov
cmp
adc
jnp
xor
push
sti
ret
in
xchg
repz
jg
push
mov
lods
andb
addb
dec
mov
jl
int
jo
lods
outsl
and
sbb
movsb
inc
add
jns
or
nop
adc
mov
mov
push
paddusb
mov
fistpl
dec
outsb
jo
loope
or
leave
jmp
dec
xor
insb
jp
aaa
sahf
pop
insb
pop
jo
lea
jl
es
es
cmpsb
out
cmc
cld
cwtl
dec
jb,pt
push
stc
in
fdivrl
and
jno
clc
js
pop
imul
and
mov
call
ss
jne
in
push
sti
xchg
in
push
and
repnz
sbb
cmp
hlt
pop
out
into
and
push
sti
es
sub
pop
lea
popf
or
mov
dec
mov
popf
mov
lds
jecxz
out
pop
inc
test
xchg
shrl
dec
mov
call
shr
inc
inc
ja
sbb
rolb
loope
sub
arpl
ss
mov
mov
sbb
mov
push
xchg
movsb
fsubrs
xor
mov
pusha
pop
jbe
cli
pop
es
inc
incb
adc
dec
pop
sbb
jecxz
lods
adc
out
ds
out
insb
xchg
arpl
and
jp
add
test
int
adc
test
adc
adc
nop
imul
sub
repnz
in
cmpsl
pop
cmc
popa
adc
stos
repnz
outsl
sahf
loop
dec
das
add
pop
and
je
push
ret
jns
pop
xor
aam
sbb
repz
jp
mov
movsb
icebp
and
inc
scas
enter
scas
adc
dec
push
lret
aam
sti
jle
ret
or
addb
loope
lea
rcrb
pop
out
fcomip
mov
dec
ljmp
in
sub
bnd
pushf
push
movsl
mov
loop
cmc
cwtl
ljmp
jns
lods
push
push
and
scas
es
or
mov
outsl
je
sub
sbb
out
and
mov
sbb
sbb
push
jmp
and
repnz
movsl
bound
dec
jns
ljmp
jge
inc
add
jle
push
mov
or
or
pop
dec
js
mov
mov
mov
enter
popa
fcomp
jo
adc
adc
add
loop
push
jns
and
push
movsb
outsl
push
das
xchg
aam
pusha
lret
cmc
jge
int3
mov
mov
out
inc
iret
pop
ss
fucom
xor
mov
mov
jmp
or
int3
arpl
pop
adc
bound
repnz
jno
or
sbb
xchg
scas
xchg
je
mov
inc
iret
xchg
outsl
xchg
out
mov
jne
lods
outsb
push
incb
fwait
push
rcrl
xlat
and
int
push
cs
aaa
xchg
into
ljmp
aaa
push
movsb
std
xchg
pushf
dec
daa
adc
aam
jnp
out
adc
push
jmp
xlat
push
jecxz
div
mov
iret
cwtl
hlt
pusha
scas
inc
adc
inc
jno
inc
xchg
call
andl
repnz
xchg
imul
pop
lret
pop
jg
inc
push
jbe
pop
aad
jns
stos
mov
out
add
pop
add
jmp
inc
imul
sbb
ljmp
inc
sti
xchg
repnz
jecxz
sub
popa
lret
idivl
dec
enter
call
out
mov
jae
imul
mov
mov
es
sti
and
out
xchg
mov
lret
and
sub
push
icebp
inc
sti
stc
mov
test
or
repz
aas
adc
mov
pop
iret
bound
xlat
popa
iret
cltd
or
mov
sub
popl
repnz
out
loopne
fldt
xchg
cpuid
add
nop
or
lcall
lcall
pushf
dec
dec
decl
dec
mov
dec
mov
loope
inc
jne
or
push
icebp
outsb
and
cld
push
adc
cmp
jne
jo
xchg
and
insb
sbb
test
mov
push
sub
fldcw
addr16
add
in
or
es
mov
fimull
adc
and
gs
iret
xor
mov
addl
mov
aam
lds
sbb
and
out
xchg
testl
gs
sub
rcl
das
jp
jl
xchg
jo
movsl
adc
xchg
lcall
ljmp
mov
pop
sbb
inc
cmp
mov
inc
jecxz
in
out
xchg
jl
test
add
dec
sbb
sub
mov
mov
xchg
sub
add
adc
jge
xchg
jo
push
lods
insl
aam
es
jmp
aad
mov
fildl
lds
push
mov
sub
jmp
repnz
jo
dec
repnz
sbb
loope
mov
sahf
inc
push
mov
cmp
clc
lcall
not
cmp
and
in
adc
cmpsb
push
sbb
cltd
inc
or
and
sar
jecxz
out
imul
inc
push
adc
sub
jmp
mov
dec
out
cmc
repnz
dec
mov
push
imul
and
aas
pop
sub
in
add
pop
lahf
scas
bound
hlt
out
xor
ds
movsb
movsb
andb
jmp
insl
mov
lock
sahf
or
adc
imul
mov
dec
testl
cmc
hlt
push
or
sbb
add
divl
pushl
arpl
lret
jmp
arpl
push
clc
out
or
pop
add
inc
adc
in
nop
adc
add
cmpb
mov
lcall
aad
mov
fs
sub
rcrb
fistps
mov
push
sub
lret
dec
insb
lods
aam
stos
aad
mov
testl
lock
mov
enter
dec
sbbb
push
mov
mov
notl
out
andl
fdivr
dec
and
or
adc
sub
xchg
pusha
mov
jbe
dec
push
push
ret
adc
push
fwait
rolb
addb
inc
inc
sub
pop
push
movb
aaa
leave
push
lds
outsl
aas
adc
inc
cmp
sti
divb
repnz
pop
mov
lret
aaa
and
mov
mov
adc
pop
imul
aaa
adc
out
pop
hlt
ja
movsb
adc
dec
les
sbb
sub
arpl
mov
cmpsl
pop
test
fs
insl
int
and
aaa
test
mov
daa
shll
test
jo
aad
xchg
fdiv
mov
xchg
ja
inc
jnp
sub
push
mov
loope
inc
lock
sbb
sbb
cmc
rcll
and
pop
lock
sahf
loopne
jbe
mov
sub
pop
icebp
pop
push
push
test
sub
repz
insl
in
sub
push
sbb
mov
cmpl
sarb
scas
mov
repnz
lods
dec
mov
xchg
cmp
dec
in
push
aad
cmpsb
lods
sub
cmp
pop
pop
repnz
test
and
das
cmp
pop
into
mov
sub
movsl
lret
xchg
inc
adc
aaa
sub
push
pop
push
or
fwait
push
jnp
scas
mov
jp
ljmp
pop
dec
jl
and
jne
fsubrs
sahf
cmpsl
lods
add
mov
aas
mov
popf
inc
ret
sbbl
add
test
stos
pop
outsl
mov
push
push
mov
in
scas
or
push
pop
add
sub
lds
mov
movsb
out
xchg
int3
insl
mov
mov
outsl
xor
add
data16
movsb
push
jp
nop
cmp
push
mov
inc
push
cmp
incl
fs
lret
loope
repnz
add
movsb
pop
test
mov
pop
sub
ja
rcrl
les
enter
jecxz
mov
cmp
xor
inc
insl
iret
imul
mov
loop
call
mov
mov
sbb
aad
add
shll
inc
jle
cmp
cmp
mov
lret
rclb
and
xchg
jb
loope
test
jl
mov
add
mov
movsl
in
xor
fwait
outsl
cltd
or
lret
inc
movsl
xor
jge
loopne
jecxz
xchg
jge
in
xor
jmp
inc
mov
jle
sub
iret
jo
imul
mov
stos
dec
std
pop
movsl
sub
pushf
in
adc
imul
mov
arpl
push
mov
cltd
inc
cmp
int3
inc
add
push
pop
sub
dec
mov
add
leave
dec
dec
notl
jb
mov
xor
mov
fistps
stos
jae
jge
pop
lock
mov
adc
jecxz
ds
shlb
pop
lock
mov
sub
add
sbb
lds
cmp
cld
lods
mov
ljmp
fdivr
rclb
pop
mov
mov
loope
add
ljmp
mov
xchg
sbb
push
movsb
sub
aam
lret
addr16
lea
cmp
pop
mov
mov
pop
dec
cmpsl
stos
mov
mov
in
movsb
sbb
mov
sahf
mov
mov
bound
jp
call
adc
jle
icebp
sub
repz
or
adc
stos
jl
mov
cwtl
sub
insl
aas
fmuls
cwtl
xchg
dec
cli
data16
adc
cmp
test
push
jnp
fucomi
imul
pop
mov
scas
jb
jmp
jbe
lds
test
lock
movsb
and
sub
mov
and
mov
push
ljmp
and
xchg
xor
gs
pop
jbe
xchg
test
xchg
mov
mov
or
and
in
fstpl
push
dec
jns,pn
sbb
aam
jecxz
imul
fwait
mov
cltd
rclb
add
xor
ret
loop
iret
add
pop
outsb
jo
imul
or
aaa
dec
fwait
leave
xchg
test
pop
fcomp
pusha
bnd
inc
popf
addr16
lods
push
outsb
ficomps
sub
sbb
and
sub
lods
cli
scas
popa
adc
push
insb
mov
sbb
popa
sub
repz
repnz
inc
and
dec
push
sub
nop
into
fwait
pop
or
xor
sub
hlt
mov
xor
out
enter
cmc
mov
mov
nop
xlat
sbb
xlat
in
and
lods
in
xlat
or
cmp
cltd
push
testl
mov
out
sub
mov
and
push
mov
xor
int
mulb
or
jmp
int3
fildll
cmp
mov
fwait
cltd
and
pusha
jl
test
outsb
cmp
xchg
imul
cmc
push
rorb
jne
dec
arpl
imul
outsl
push
popf
mov
adc
fs
inc
out
push
adc
cli
incb
sub
sub
pushf
out
jbe
int
fsubs
push
xlat
in
jg
jl
dec
jmp
repnz
cmp
mov
push
repz
in
push
cwtl
icebp
cld
mov
jecxz
dec
ja
adc
fstl
bound
out
icebp
or
pushf
adc
sahf
loopne
fs
jmp
imul
xchg
lea
inc
shlb
cwtl
jp
adc
mov
lcall
or
jle
push
jae
cmpsb
mov
mov
cmp
es
ljmp
push
icebp
ljmp
and
adc
rcll
jge
incb
adc
inc
jge
ror
xor
sub
xchg
pop
imul
hlt
loop
sbb
test
push
dec
push
mov
push
and
cwtl
aaa
repnz
ret
sbb
lret
test
loope
ljmp
je
mov
ror
jno
stos
in
xor
add
ret
int
mov
add
mov
stos
icebp
push
cmp
jno
imul
repz
push
push
or
dec
jge
jae
leave
sub
inc
xor
pop
sub
sub
lds
mov
pop
mov
jb
add
test
ds
clc
xchg
add
jo
adc
jo
jge
stos
enter
int3
fs
scas
xor
xchg
push
jmp
out
add
and
pushf
pop
cmp
aaa
es
xor
frstor
xlat
shl
insl
mov
cld
sub
into
mov
lret
icebp
adc
add
inc
test
lret
iret
mov
push
imul
mov
pop
mov
sub
adc
or
adc
jle
cltd
xchg
jo
popa
adc
or
cmp
pop
or
sbb
ljmp
jb
mov
pop
cmpsl
imul
bnd
out
sbb
mov
or
push
dec
outsl
jb
shrl
push
mov
pop
push
test
push
inc
sbb
sub
mov
fisubs
push
jmp
mov
push
sbb
jae
repnz
sbb
aad
lods
int
test
cltd
rorl
sub
mov
ret
arpl
ret
xchg
add
jno
or
fs
jge
pop
leave
push
repnz
xor
push
pop
inc
cmp
data16
jg
mov
xchg
push
or
shlb
call
fsubs
repnz
mov
outsl
mov
inc
mov
inc
jbe
or
int3
xchg
idiv
mov
leave
pop
add
inc
sub
cmp
push
cmp
or
inc
fwait
fs
sub
into
adc
adc
xor
xor
call
mov
pop
shrl
sub
xor
adc
dec
sbb
scas
mov
call
pop
fwait
jno
push
sub
movsl
fnstenv
xchg
gs
xchg
call
data16
iret
xchg
or
xchg
jle
pop
lret
pop
sub
test
or
adc
push
adc
adc
pop
jb
pop
icebp
clc
xchg
xor
repz
in
dec
sbb
mov
adc
idivb
orb
mov
lea
movsl
clc
pop
repnz
sub
mov
mov
pop
in
mov
sbb
and
fwait
sarb
outsb
cli
cs
mov
test
int
rcll
movq
stos
dec
je
icebp
mov
push
popl
repz
dec
dec
fsubr
jg
and
sub
cmp
loop
arpl
pusha
or
adc
push
hlt
incl
ljmp
inc
and
dec
js
push
add
mov
and
mov
lea
jmp
data16
pop
pop
pop
dec
and
setle
cs
iret
nop
into
rcr
sub
mov
movsb
lret
pop
mov
ljmp
inc
cmp
test
cltd
in
dec
push
adc
int
inc
insl
mov
xchg
xor
movsl
outsb
xchg
xlat
mov
les
xchg
movsb
adc
xchg
lahf
iret
andb
sbb
xor
loop
mov
in
inc
sahf
jecxz
or
jmp
repz
ja
mov
fs
dec
ficomps
sbb
inc
and
bound
pop
arpl
cmpsl
lret
iret
adc
arpl
xchg
outsb
mov
push
sarb
int3
fcmovbe
mov
sub
subl
push
lods
inc
xchg
add
push
add
popa
xchg
and
pop
mov
imul
arpl
adc
loopne
lods
push
ja
cmp
lds
adc
lret
aaa
lods
adc
sbb
mov
jno
push
arpl
sub
push
inc
sub
push
sub
dec
add
in
xchg
mov
push
cld
in
insb
mov
cltd
mov
add
ljmp
ret
or
sub
stos
and
sbb
rcr
int3
mov
or
mov
out
mov
shlb
push
movsl
xchg
lret
aad
divl
mov
idivl
mov
lcall
inc
push
test
fldcw
pop
pop
das
pushf
cmpsl
cs
dec
xchg
or
and
aaa
sti
dec
clc
cltd
xchg
test
xlat
push
out
das
mov
adc
pop
sub
push
xchg
push
mov
inc
repz
and
xor
mov
jnp
inc
dec
addb
inc
shrd
mov
scas
sbb
fsubrs
pop
xor
sbb
mov
cld
ret
jnp
inc
leave
jl
js
arpl
scas
loopne
bnd
jecxz
divb
add
jle
jmp
imulb
fsubrl
enter
dec
ret
adc
or
push
call
imul
loope
leave
in
icebp
fsubrs
imul
popa
jge
out
sub
push
negb
mov
inc
push
push
xchg
ljmp
push
sub
inc
or
mov
ljmp
fisttps
in
xchg
mov
popa
xchg
push
mov
jle
jbe
jno
clc
dec
cld
stos
cmp
add
pushw
cld
pop
jp
jo
stos
imul
cmp
imul
movl
lret
pop
ret
adc
add
lods
loop
movsb
jg
sub
outsl
mov
cmp
repnz
mov
mov
cli
insl
lret
push
and
pminub
or
inc
sub
clc
cli
int3
sbbl
mov
xor
cmp
mov
scas
jle
leave
nop
loop
dec
xchg
sub
js
addr16
or
jecxz
jecxz
shlb
outsl
test
mov
aas
fs
dec
mov
lcall
sti
loope
enter
cmp
and
int
xchg
xchg
or
lock
aam
mov
repz
lods
cld
pushf
movsb
scas
test
push
and
cld
mov
fnstcw
out
add
sti
sbb
pop
lret
dec
sub
scas
jnp,pt
jle
cli
or
mov
push
sti
mov
bound
cld
jecxz
jmp
enter
adc
imul
inc
sti
lods
jecxz
outsl
pop
and
cmp
add
push
inc
iret
sbb
push
mov
cltd
jecxz
jae
pop
movsb
jns
clc
sbb
xchg
sbb
out
cmpsb
push
mov
adc
repnz
mov
cltd
xchg
popf
inc
hlt
jg
cwtl
repnz
pop
popa
aad
int
stos
dec
scas
shll
mov
dec
in
cmpsl
dec
outsb
scas
or
and
addl
ret
insl
sahf
cld
mov
in
int3
sub
call
cmp
loop
jmp
xor
leave
add
ret
pushf
pop
div
mov
lods
insb
fs
lret
mov
jle
jo
cmp
shlb
leave
insl
mov
sarb
mov
cmpb
jne
movsl
and
ret
leave
and
push
dec
xchg
std
dec
rcr
icebp
repnz
push
xchg
out
gs
repz
insl
or
outsl
cmp
ret
leave
sbb
call
jge
rorb
out
aaa
out
xchg
pop
arpl
fs
pop
or
sbb
and
dec
leave
and
lock
push
mov
jge
orb
adc
repnz
pop
in
call
pop
rclb
and
jns
push
clc
jae
mov
mov
ljmp
rorb
repz
cltd
test
leave
fdivp
fimull
out
add
xor
cmc
cmp
mov
jmp
imull
sbb
add
insl
lods
test
xlat
ds
int3
push
popa
push
mov
mov
pop
add
in
outsb
mov
iret
notb
aas
xchg
lret
mov
add
push
or
cmc
jle
inc
dec
add
or
push
insb
or
es
jmp
icebp
outsl
andb
sbb
sbb
sar
fwait
and
add
test
ds
and
iret
or
sbb
movsb
jae
xchg
sbb
and
inc
iret
xor
pusha
repnz
aam
repz
xchg
mov
lea
out
popf
imul
je
xchg
cld
xchg
adc
xor
shr
mov
sub
mov
and
outsb
sub
movsl
hlt
sbb
or
mov
out
xchg
jne
fcmovbe
jb
fsubr
hlt
jb
push
jmp
test
repnz
stc
mov
xlat
add
adc
mov
or
out
pop
or
mov
mov
aaa
out
mov
mov
or
les
aad
add
or
aam
mov
sbb
pop
rorl
imul
lea
xor
pop
shrl
int3
inc
and
movb
push
test
jle
fcoms
xlat
push
lock
in
jle
mov
xlat
push
out
in
test
push
xlat
or
adc
daa
add
push
lret
aaa
repnz
cwtl
movsl
xchg
jbe
in
lods
aad
adc
xchg
je
cld
out
jbe
push
daa
in
push
dec
add
pushf
push
jecxz
iret
adc
mov
dec
or
repnz
rcrl
sbb
mov
daa
leave
mov
lds
push
jmp
bound
pop
cmp
sub
popa
cmp
test
sub
mov
fwait
inc
fstpt
mov
add
sbbl
outsl
das
lret
and
ret
outsb
inc
cmc
jecxz
add
and
push
fs
xchg
mov
mov
xchg
mov
repnz
xchg
cld
mov
dec
je
xor
add
or
or
popf
mov
loop
js
pop
test
test
out
push
call
scas
dec
pop
in
inc
sahf
pop
mov
xchg
adc
lret
dec
cltd
icebp
aas
mov
inc
pop
icebp
out
cs
xchg
or
repnz
mov
sbb
std
pop
stos
aad
outsl
sub
adc
pop
xchg
rclb
mov
fwait
sub
cmpsl
jmp
xor
sub
dec
outsb
and
insl
sbb
xlat
mov
or
sub
aaa
or
mov
inc
adc
xchg
test
pop
icebp
or
mov
push
loop
cmp
push
mov
push
push
adc
int
add
jecxz
lea
fwait
loopne
fs
jno
mov
jmp
scas
and
pushf
dec
shll
outsb
mov
pusha
sub
aaa
shl
pop
iret
add
add
and
cltd
out
pusha
fisubrs
jne
bswap
int3
lahf
lret
xor
sbb
in
xor
and
inc
lret
cltd
daa
push
mov
cld
xor
stos
dec
sub
or
mov
cltd
xor
ret
and
pop
and
jecxz
adc
mov
cwtl
cmpsb
loope
fnstenv
xchg
cli
cmp
lods
jle
xchg
xor
sbb
imul
adc
or
iret
adc
movsl
repnz
or
cmp
xchg
push
call
mov
push
mov
cmp
cmp
shll
sbb
xchg
cs
or
push
outsl
lret
xor
mov
jmp
sub
push
mov
mov
arpl
push
and
daa
lahf
clc
push
adc
and
pop
cmp
insl
loop
pusha
pop
push
mov
cmpsl
mov
lock
jge
pop
aad
cmc
push
jne
and
sub
out
repnz
jmp
lods
pushf
jns
shll
and
cmp
jns
push
mov
or
mov
in
cmpsb
adc
test
out
sbb
sub
je
adc
push
and
push
sub
and
xchg
mov
daa
sbb
and
imul
or
or
roll
scas
movsl
push
pop
nop
fdivs
stc
or
rorb
cmp
sub
mov
jne
sbb
mov
data16
xlat
xor
out
bound
pop
rolb
repnz
or
lock
pop
xorl
imul
fwait
sbb
aaa
arpl
outsl
adc
pop
idivb
or
xchg
outsb
sub
xorl
and
aaa
cltd
inc
jp
mov
push
xchg
add
mov
mov
mov
push
lea
cltd
test
cs
repnz
jg
pop
cltd
inc
lret
jo
and
cbtw
repnz
repz
jecxz
or
ja
lcall
das
sahf
jb
bound
jp
test
push
mov
and
push
sbb
cmp
add
pop
dec
mov
leave
mov
out
cmc
push
repnz
dec
in
dec
cmp
jp
popf
rcll
scas
movsl
ljmp
jecxz
xchg
push
mov
stos
test
iret
add
cmc
inc
fcomi
sub
movsb
aaa
jne
cmc
cmp
hlt
nop
sub
push
arpl
mov
mov
lret
push
fsubrl
or
fs
inc
ja
sub
popa
nop
fimull
sub
push
push
pop
mov
lds
outsb
ds
hlt
xor
jae
xchg
cmp
ficomps
mov
call
sbb
out
pop
xchg
xor
movsb
mov
outsl
lds
bound
xlat
cli
or
bound
incb
add
scas
xor
jp
mov
mov
sub
lret
sbb
mov
call
adc
cwtl
cmpsl
or
push
mov
call
ljmp
test
not
leave
inc
gs
popf
inc
cmp
jl
lahf
cmpsl
mov
out
push
out
aad
aam
xor
xchg
xchg
sbb
loopne
xor
rorl
test
push
sbb
aam
mov
pop
and
mov
inc
and
test
ljmp
out
or
mov
dec
fs
mov
mov
xor
shr
repnz
fcomps
adc
ss
aaa
mov
lea
cwtl
mov
jg
dec
out
push
lock
push
xchg
jg
ljmp
cli
push
jp
push
outsl
jle
mov
sbb
push
lock
and
test
lret
xor
push
arpl
lods
cmpsb
sbb
loope
sbb
movsb
cwtl
mov
aaa
mov
popl
shlb
xchg
data16
mov
arpl
lods
dec
or
jge
mov
lods
xchg
test
arpl
insl
or
sub
and
mov
xchg
jg
shll
enter
icebp
adc
repnz
insb
mov
data16
mov
ljmp
dec
icebp
aaa
cmp
sub
out
movsb
lds
cmp
popa
push
push
jno
das
mov
das
int3
push
fs
stos
in
or
pushf
push
mov
shl
mov
popf
add
pop
push
push
or
xchg
test
jmp
fnclex
dec
sub
ret
inc
dec
cli
movsb
sub
adc
dec
test
jecxz
imul
in
leave
es
jne
and
dec
mov
scas
popa
or
sbb
dec
lds
pop
add
sub
and
add
jbe
mov
push
or
mov
push
push
sub
push
icebp
ljmp
and
ljmp
dec
mov
sbb
ret
dec
daa
enter
sub
mov
push
loopne
mov
fisttpll
push
rol
gs
jo
lret
sbb
jo
in
adc
push
dec
inc
xacquire
mov
jecxz,pt
repz
insb
inc
dec
dec
loop
sbb
cmpsl
lret
in
inc
xlat
dec
jb
xor
or
push
push
pop
insl
stc
daa
cmp
fcom
inc
pop
addb
or
jecxz
cmp
outsl
pop
mov
out
mov
dec
push
into
sbb
fwait
sub
lret
xchg
ret
imul
or
pop
insl
xor
or
cltd
loopne
mov
mov
loopne
sbb
int3
inc
pop
mov
ret
lahf
xchg
imul
dec
sub
push
xor
lret
or
push
rclb
in
sub
xor
xchg
xchg
in
push
shl
push
scas
iret
daa
inc
repnz
clc
add
push
dec
jge
adc
push
ljmp
leave
inc
push
gs
popa
push
xor
push
xor
repz
jg
jno
dec
sti
pop
outsl
divl
jo
mov
fisubrl
mov
popf
add
test
inc
ja
jnp
les
lcall
repz
out
test
aam
lret
sbb
aaa
je
push
sarl
fadd
mov
dec
sti
and
push
mov
or
cs
adc
scas
add
imul
addr16
pop
add
je
or
sub
scas
popa
je
popf
adc
ja
jbe
aaa
pusha
leave
inc
lcall
jge
mov
sub
adc
fisubs
int3
pop
adc
and
das
js
xor
daa
xor
mov
push
popa
jge
xchg
cmp
outsl
jo
dec
test
shll
add
fildl
mov
loopne
jno
xchg
loop
sbb
je
ret
imul
ds
pxor
xchg
adc
mov
sub
pop
sub
and
mov
call
fldl
inc
jmp
or
push
jge
push
adc
dec
dec
mov
push
mov
push
ja
ret
pusha
mov
and
sbb
inc
out
repz
push
iret
push
sub
je
jo
hlt
mov
adc
adc
cltd
push
mov
and
nop
lock
and
sub
enter
ficoml
sbb
adc
repnz
adc
aam
jle
pop
push
cs
push
cs
inc
sub
ljmp
and
loop
push
insb
adc
pop
sti
cld
divb
outsl
mov
push
mov
sti
repnz
xchg
jo
int
in
daa
mov
cmp
leave
ljmp
dec
mov
push
jo
lcall
insb
ficoml
int
mov
xchg
push
or
sbb
dec
jl
ds
pop
loopne
push
or
ret
dec
mov
out
push
mov
jb
mov
sub
mov
nop
mov
lret
ss
adc
lods
and
inc
sbb
or
lret
jb
push
mov
das
mov
mov
jbe
mov
addr16
mov
mov
sbb
out
mov
cmpsl
mov
mov
and
hlt
sbbl
lea
cmp
sub
in
jg
jno
loop
inc
and
adc
and
jge
or
popa
xor
push
lcall
jg
ljmp
bswap
dec
dec
jae
push
ret
ljmp
xor
add
cwtl
das
ja
test
dec
mov
repnz
lcall
popa
xor
and
push
out
repz
cld
push
mov
in
fwait
stos
cmp
xchg
int
iret
add
int3
ficomps
mov
sub
lret
xor
mov
ljmp
dec
out
sahf
mov
jl
mov
test
das
and
jg
adc
gs
fs
fcom
stos
hlt
push
jge
ss
into
insl
cli
sub
sub
jge
mov
dec
aas
xchg
adc
and
xchg
add
xchg
and
jle
add
ss
push
rorl
loopne
out
xchg
jmp
rcl
aas
xchg
scas
enter
lea
mov
lret
jp
repz
cltd
and
popf
cmp
sbb
outsb
or
rolb
xchg
int3
test
addb
sbb
out
repz
insl
dec
mov
rcrl
adc
mov
mov
mov
bnd
xor
cmpsb
test
mov
stc
dec
in
sbb
inc
test
in
cmp
pusha
sbb
xor
fbld
adc
cmp
shl
mulb
adc
aas
inc
popa
scas
lcall
add
out
cmpsl
mov
out
and
lds
lret
lret
stc
mov
test
aas
push
xor
sub
scas
hlt
inc
xchg
mov
cmpsl
mov
push
not
out
sbb
sbb
or
dec
sub
jmp
sti
mov
les
loopne
outsl
loopne
push
iret
out
fimull
dec
ljmp
dec
push
mov
decl
push
mov
pop
mov
cmpsl
adc
jle
mov
or
cmp
jae,pn
scas
lods
add
adc
xchg
out
mov
or
mov
xchg
or
lret
pop
jns
sbb
jge
std
push
and
movsb
std
stos
test
dec
outsl
fsubr
or
adc
lods
inc
out
aas
mov
or
jae
lea
jge
sbb
loope
fbstp
xor
mov
push
mov
adc
ds
mov
push
std
leave
dec
adc
arpl
stc
cld
dec
adc
cmpsl
mov
xor
xchg
ficompl
shlb
sahf
aas
mov
aam
icebp
loope
xor
add
jge
lds
fdivr
test
pop
add
std
xchg
jmp
inc
sub
xchg
sbb
and
and
ljmp
fldlg2
out
lret
mov
popf
and
hlt
scas
dec
or
push
ss
les
and
push
push
iret
pop
pushf
sub
sub
aam
jge
xor
xchg
mov
adc
dec
test
je
sbb
mov
jb
xlat
out
or
loope
adc
repnz
sub
imul
sbb
mov
mov
fisubrl
jle
sub
aam
add
popf
sbb
imul
je
icebp
adc
mov
lcall
cli
xchg
add
push
rcll
lret
push
pop
sub
mov
adc
xchg
mov
push
rol
cmp
mov
mov
mov
mov
mov
imul
ss
push
mov
mov
popa
out
das
jnp
test
cwtl
enter
cmpsl
aam
je
pop
adc
enter
xchg
jecxz
push
out
mov
int
and
or
aam
sub
inc
xchg
sbb
sti
jecxz
insb
jp
fsubrl
and
shll
adc
hlt
nopl
fsubs
push
js
push
test
cwtl
sbb
adc
xor
lret
jns
sub
push
insl
in
push
sti
lock
movsb
orb
push
push
fsub
and
stos
cld
adc
mov
mov
test
addb
inc
xchg
jnp
adc
shrl
sbb
adc
pop
lds
mov
push
jnp
pushf
push
in
sbb
inc
in
adc
and
das
pop
int
xor
ljmp
push
orl
hlt
out
enter
sahf
mov
pop
mov
sbb
mov
mov
call
ja
fcompl
push
cmp
sub
scas
pop
jle
sbb
mov
adc
inc
xor
cltd
jno
lea
and
sbb
push
shll
repnz
cmpsl
mov
xchg
ds
bound
adc
sbb
lods
sti
jb
daa
xchg
cmc
inc
sar
push
mov
lcall
mov
dec
mov
cmpsl
lds
mov
jb
test
ret
movsl
mov
loop
test
bnd
cli
cmp
add
stos
mov
adc
mov
mov
push
scas
das
movsl
loop
lds
enter
clc
pop
mov
adc
inc
pop
and
jl
fistps
ljmp
push
fs
call
int3
pop
xchg
setne
mov
pushf
ss
mov
xchg
inc
out
cmpsb
mov
cwtl
int
insb
nop
sub
cmc
inc
mov
icebp
in
aas
sbb
adc
push
add
dec
arpl
insl
leave
adc
enter
and
lret
movsb
mov
pop
inc
push
jg
or
jecxz
movl
pusha
lds
mov
jmp
xor
mov
pop
add
jp
xlat
jb
push
imull
mov
add
pop
aad
cmp
or
cmpsl
in
sub
js
xchg
jge
mov
ds
loope
jg
push
adc
jmp
test
push
adc
es
push
repnz
jge
inc
pop
jbe
dec
shlb
shll
movsl
faddl
add
clc
xchg
bnd
xchg
mov
inc
push
and
jnp
cwtl
add
sub
mov
xchg
ret
add
jno
in
aaa
and
cltd
mov
out
mov
imul
mov
call
jns
xchg
dec
jne
hlt
adc
repz
or
xchg
ret
xor
adcl
js
inc
shl
mov
adc
sbb
movsl
lret
das
test
in
cmp
lds
test
jl
inc
cli
outsl
mov
mov
test
mov
addr16
shl
xchg
ret
sahf
adc
cltd
inc
insl
push
and
cmp
jl
sub
cli
push
or
jp
lret
or
pop
lods
lods
scas
and
push
pusha
xlat
testl
mov
aad
or
or
cmpsl
ljmp
lods
mov
pop
xor
mov
mov
push
xlat
pusha
andl
fcoms
addl
imul
sti
test
mov
xchg
cli
cmp
mov
sbbl
inc
fs
jle
test
pop
fwait
test
mov
add
jbe
xchg
dec
cmpsl
push
lret
fwait
nop
int3
sub
div
fdiv
add
ret
int
push
clc
inc
fwait
arpl
cli
mov
push
faddl
popf
lods
cmp
pop
pop
pop
lret
sub
sahf
mov
mov
or
scas
iret
pop
std
sbb
movsb
rcll
lea
loop
mov
aad
push
fisttps
sbb
push
aad
repz
push
fs
pop
or
sbb
jle
cltd
pop
mov
or
xor
xor
fidivl
or
sarl
push
sti
xlat
mov
std
mov
mov
gs
in
inc
mov
xor
ret
pop
call
out
mov
push
inc
jnp
mov
pop
call
xor
xchg
imul
xor
dec
inc
mov
aas
popf
xchg
test
aaa
mov
sti
adc
in
mov
cwtl
or
xor
adc
mov
pop
out
dec
add
loope
into
mov
das
cmp
mov
fisubl
jno
aam
pop
test
repnz
and
aas
inc
sti
ret
mov
int
sti
dec
jge
scas
loope
mov
in
hlt
jne
adc
enter
call
sub
lahf
and
jbe
and
daa
jmp
jl
in
addl
sbb
testl
pop
pop
rolb
dec
xchg
leave
cmp
add
dec
cmp
fimull
rol
enter
inc
repz
push
mov
lahf
fwait
sbb
sti
and
jns
mov
enter
or
jbe
xchg
dec
push
inc
lcall
lret
xchg
xchg
les
js
xchg
testl
or
pop
cmp
and
int
pop
xchg
js
aaa
xor
loope
sbb
and
insl
adc
rclb
lds
in
mov
cwtl
or
pop
imul
loope
sbbl
fwait
dec
movlps
imul
xchg
adc
aad
sbb
xlat
jmp
idivl
dec
sub
jb
jmp
pop
lcall
fadds
or
xchg
daa
mov
outsb
cltd
imul
lods
sbb
daa
leave
sub
iret
push
ret
repnz
push
out
xchg
scas
sti
aad
xchg
iret
mov
mov
jg
das
je
mov
rcll
fidivl
jb
sub
pop
inc
adc
ja
cltd
sti
movsb
enter
aam
test
dec
push
mov
cwtl
inc
push
ds
xchg
mov
fs
lret
imul
jge
mov
das
scas
or
out
bound
push
arpl
jbe
ljmp
sahf
push
sahf
sub
xchg
xchg
aad
lods
lcall
push
rol
cwtl
mov
mov
test
mov
out
xlat
int3
sub
cmp
sub
mov
or
jge
xor
jecxz
mov
aam
popf
sbb
fs
xchg
mov
fwait
ret
push
pop
xchg
insb
arpl
dec
in
and
pusha
sbb
popa
pop
ret
sbb
lcall
in
hlt
das
stos
mov
hlt
dec
aas
ss
out
jo
aad
mov
dec
int
push
aas
dec
pop
jns
in
xor
loope
repnz
rcll
jecxz
xchg
test
sub
and
ljmp
sub
push
imul
movsb
push
ret
mov
popf
sub
sti
enter
push
adc
mov
ljmp
adc
loop
mov
push
push
lret
mov
mov
out
dec
sahf
sbb
fiaddl
push
ja
in
cltd
sub
mov
icebp
ret
ret
cmp
jle
sub
lret
inc
icebp
pop
push
mov
sbb
dec
sbb
lret
test
adc
pusha
sub
leave
mov
pop
mov
and
xlat
add
mov
inc
cmp
xlat
rcl
sbb
pop
arpl
sub
in
lea
dec
popa
mov
xchg
aaa
lret
insl
repnz
push
mov
xor
pop
and
sahf
inc
loopne
repnz
mov
xchg
ljmp
test
sarl
adc
lcall
outsl
je
xor
dec
into
insl
cmpsl
jge
das
orl
push
lods
sub
sub
xchg
test
or
jecxz
cs
mov
push
sub
sti
ret
stos
test
pushl
adc
stc
mov
dec
aad
pop
orl
cld
pop
inc
ljmp
pusha
arpl
divl
js
or
scas
clc
sbb
and
mov
or
loope
mov
cmc
inc
or
flds
cmp
fsubr
mov
adc
pop
jb
leave
test
rcll
xlat
repnz
jae
repnz
inc
orps
idivl
push
int3
frstor
xchg
xor
lret
mov
jle
aad
or
in
pop
inc
sbb
and
mov
cmc
or
inc
pop
test
mov
test
sbb
popw
movsb
push
sub
and
jle
loop
xor
test
mov
and
insb
xchg
and
sbb
push
mov
lret
or
repnz
adc
mov
jb
aaa
xchg
lret
push
push
jmp
and
movsl
movsb
decb
and
pop
mov
int
inc
inc
inc
hlt
dec
mov
dec
mov
push
mov
out
orl
mov
ljmp
jge
dec
jp
push
int3
imul
orb
call
xor
aaa
cmp
roll
sub
call
xlat
loope
rorb
jg
ficoml
scas
dec
inc
push
bound
stos
fnstsw
push
push
fucomp
sbb
int
iret
outsl
add
ret
enter
outsl
mov
repz
repnz
add
mov
repnz
repz
cmp
stc
cltd
es
push
loopne
notb
mov
mov
sbb
xor
mov
mov
loope
subb
adc
pop
mov
andl
mov
fidivl
cld
imul
popf
roll
cmpsb
scas
ds
imul
mov
insb
or
lods
add
and
int
pop
test
mov
ja
pop
outsl
xor
loope
sub
sbb
pop
aaa
ds
xlat
ljmp
xor
push
pop
insb
ljmp
inc
mov
mov
or
cltd
sahf
jb
mov
add
mov
or
ljmp
insl
insb
pusha
and
inc
sub
adc
dec
lea
push
add
inc
in
sub
or
int
inc
lods
ret
cwtl
call
stc
repnz
lds
movsl
inc
cld
test
test
sub
minps
push
and
fldl
jmp
dec
repnz
stos
dec
mov
xchg
sub
add
mov
pusha
repz
adc
std
test
dec
cmovnp
dec
fwait
and
pop
mov
ljmp
out
sub
mov
aam
call
jo
jecxz
push
in
mov
inc
cmp
ljmp
inc
sbb
fidivl
ljmp
or
repnz
lcall
in
cmp
sahf
or
sti
or
pop
lock
out
push
adc
xchg
dec
adc
adc
xchg
sti
lcall
emms
sub
mov
or
sub
pop
mov
or
in
and
or
lret
leave
push
shl
enter
nop
fwait
sub
ds
shl
aas
addr16
cs
adc
rcrl
fstpt
xchg
sbb
mov
add
pop
mov
or
fnstsw
or
cmp
fs
jnp
cmp
std
sub
xchg
cmp
fs
jmp
cltd
sub
pop
insl
pop
les
sbb
pushf
xor
xchg
pop
push
xchg
daa
nop
stc
mov
adc
add
jns
adc
andb
or
jg
jle
shll
or
das
cltd
push
dec
outsb
inc
sbb
sub
icebp
inc
les
cltd
ljmp
and
pusha
mov
adc
xor
xchg
xchg
aaa
or
mov
subb
inc
movsb
jae
xor
sub
push
mov
inc
and
add
mulb
arpl
mov
enter
dec
pop
pushf
pusha
push
dec
addb
mov
or
out
cmpsl
in
aas
stos
repnz
scas
aas
mov
dec
push
ljmp
leave
or
and
xchg
out
lods
std
lret
or
dec
repnz
jbe
inc
jecxz
ret
popa
cmc
test
shr
pop
repnz
push
sbb
dec
pop
jle
lret
stos
testl
sub
lds
aaa
rcl
pop
fidivs
addb
mov
cmpsb
cmpb
and
sbb
mov
ficoml
popf
adc
rorb
and
mov
xchg
ss
mov
jle
stos
adc
sub
push
sbb
jecxz
xchg
movsl
sub
iret
mov
sub
mov
daa
mov
fsubr
int3
and
addr16
inc
lret
jmp
fdivr
data16
sub
insl
jae
lcall
hlt
loop
int3
aas
mov
std
push
push
fs
ret
fnclex
jge
pop
push
into
sub
push
xchg
in
jae
jecxz
xor
cmp
pushf
jns
add
push
enter
dec
and
int
pop
scas
jl
imul
fstpt
jp
sahf
lahf
ljmp
add
cmpsl
xchg
add
cmc
cld
popf
pusha
jne
pushf
adc
ds
aam
inc
popf
pushf
in
sbb
test
insb
cmp
and
cltd
push
insb
sahf
pop
shll
mov
jmp
andb
fisttps
roll
mov
out
cwtl
js
aas
push
dec
mov
mov
fisttpll
leave
adc
out
xchg
sahf
arpl
pop
sbb
lret
addr16
cmp
testb
mov
test
lods
fistps
icebp
and
fs
push
mov
adc
jo
call
and
clc
test
aas
adc
outsb
ja
sti
xor
sbb
mov
dec
or
xchg
sub
dec
jno
pushf
movsl
divb
scas
inc
sar
add
stos
jmp
repnz
cmp
mov
out
xchg
outsb
das
jbe
adc
and
loope
loop
outsl
rolb
pop
or
mov
lea
outsb
pusha
pop
and
in
aam
xor
jl
jle
or
ljmp
nop
or
bound
or
inc
jl
push
addr16
and
ret
mov
fsubrs
adc
pop
das
inc
mov
mov
fcomps
test
insl
jl
push
and
add
jno
insl
imul
adc
pop
fidivs
push
push
jecxz
jns
sub
imul
mov
mov
in
outsl
iret
cwtl
sub
and
fwait
xchg
shrl
or
and
shrl
jmp
ret
daa
jge
cmpl
stc
or
pushf
icebp
mov
push
addr16
sub
cmpsl
pop
repnz
outsl
psubsb
mov
jns
insb
pop
sbb
add
in
xchg
clc
add
icebp
xchg
gs
mov
nop
sbb
sub
push
outsl
xor
arpl
mov
jle
dec
testl
hlt
das
sbb
mov
lods
mov
repnz
lds
jmp
mov
sbb
scas
lcall
adc
mov
sbb
push
dec
mov
inc
sbb
sbb
and
mov
shl
or
les
repz
call
loopne
and
lcall
leave
mov
inc
lods
test
or
repnz
xchg
mov
pop
lret
cld
jo
cmp
lds
leave
ja
mov
adc
and
in
inc
outsb
xchg
cmp
xchg
xchg
mov
daa
mov
add
jecxz
neg
add
pop
fisttps
cmp
orb
jae,pt
fldcw
idivl
insb
mov
dec
pop
les
mov
pop
cmp
arpl
jne
icebp
iret
and
iret
sub
ljmp
mov
ja
stos
repnz
sub
fs
jo
pop
decb
push
out
xor
sti
adc
jns
sub
xchg
sub
jle
and
mov
sub
or
xchg
sub
out
js
xchg
out
inc
sarb
push
adc
popa
sbb
and
jmp
and
sbb
mov
enter
mov
repnz
sbb
in
aam
cmp
xlat
mov
repz
into
pusha
in
and
es
dec
imul
inc
cmp
mov
xchg
ja
or
lret
enter
stc
cltd
fwait
jp
sahf
dec
lret
movsb
sbb
ret
call
xor
movsl
sbb
cmp
loope
outsl
repnz
mov
inc
jne
rcrb
test
mov
sbb
cmpsl
jne
ret
add
xor
stos
repnz
mov
pop
les
add
nop
mov
int
jle
and
or
inc
cmc
testb
shll
pop
and
lcall
sub
arpl
lds
dec
sub
testl
sbb
sbb
and
movsl
push
xor
and
pop
mov
ret
xor
sbb
sbb
repz
ljmp
jle
in
dec
push
loop,pn
bound
cmpsl
repnz
push
cmp
mov
adc
in
sbb
imul
popf
add
push
mov
hlt
add
in
add
cwtl
jp
adc
lods
mov
pop
or
lods
xor
xchg
push
imul
cmp
mov
add
adc
push
cs
adc
pop
pop
mov
adc
jno
lahf
lock
mov
push
les
bound
pop
add
insb
lods
iret
sbb
add
and
push
adc
adcb
adc
mov
subb
rcl
and
xchg
and
aas
ljmp
stc
xlat
sbb
push
adc
lcall
aad
fwait
iret
iret
mov
jns
scas
test
sbb
lret
and
es
icebp
mov
cwtl
jns
ja
sti
and
and
mov
shrl
adc
int3
jb
add
jbe
sub
xor
jle
mov
mov
insb
rorl
lock
movsb
imul
xor
and
mov
push
inc
addr16
loope,pt
jecxz
and
push
and
sbb
ret
mov
cwtl
sub
and
addr16
clc
adc
mov
pop
daa
pop
mov
xor
insl
imul
scas
test
out
push
push
dec
aas
mov
sub
add
dec
mov
dec
fnstsw
movsl
jns
mulb
xchg
repnz
js
aam
push
push
sub
ret
xchg
std
xchg
xchg
scas
shll
bound
mov
jb
pop
mov
aas
sub
jecxz
in
leave
dec
inc
divl
dec
movsb
popl
lahf
xchg
sub
adc
add
adc
fs
stc
push
or
test
jb
in
sbb
ds
xchg
add
xchg
lret
test
aas
mov
xlat
mov
xchg
outsb
test
test
ret
cltd
movsl
mov
jg
mov
or
mov
push
mov
lock
aam
sbb
mov
mov
je
jmp
fnstsw
xor
push
sub
arpl
repz
push
fsubrs
fptan
dec
xchg
mov
cld
js
enter
inc
cmpsb
in
sub
lock
movsb
add
inc
outsb
jl
lcall
pop
subb
int
and
and
dec
cmpsl
movsb
xor
in
or
loope
movsl
adc
out
mov
xchg
arpl
adc
inc
pusha
xor
outsb
and
fisubrl
mov
aam
pop
repz
lcall
pop
in
lods
pushf
movsl
push
push
mov
push
xchg
mov
aam
out
lcall
or
xor
cmpsl
repnz
or
enter
pop
fmulp
adc
jmp
repnz
inc
jno
push
sub
aas
mov
stc
jecxz
sub
push
mov
add
add
pop
dec
or
nop
aaa
adcb
add
mov
int3
push
sub
or
mov
mov
dec
jg
dec
jmp
outsl
or
loope
hlt
dec
cmpsb
out
cmp
jne
cli
cmpsl
or
xchg
repnz
shlb
lret
and
mov
scas
insl
je
stos
adc
adc
aam
mov
repnz
inc
cli
in
pop
push
dec
lret
fidivrl
adc
out
mov
hlt
sbb
repz
jnp
loop
xor
orb
or
inc
jbe
or
mov
sub
lret
ljmp
xor
and
or
dec
nop
repnz
xor
push
das
lods
inc
lret
dec
not
add
ds
clc
mov
pop
push
mov
push
and
fs
movsb
jb
popa
mov
repnz
pop
ja
gs
pop
int
xor
xlat
sub
incb
stos
in
mov
imul
loopew
nop
lret
shrb
pop
repnz
fsubrp
sub
fisubs
pop
loop
pop
cmp
insb
fld
daa
mov
dec
xchg
std
cmp
pop
aad
aad
mov
js
jecxz
or
lret
sub
dec
stc
inc
stos
sbb
loope
or
lret
ret
cltd
add
adc
jge
call
xchg
pop
out
xor
sub
sarb
cmp
lods
and
mov
mov
sub
iret
cs
mov
add
enter
sub
jmp
cmp
jae
out
outsb
adc
xchg
cmpsl
or
fldl
stos
je
inc
add
mov
mov
jp
and
sub
xorl
jl
or
shlb
mov
add
stos
adc
lea
fsubl
sbb
repnz
mov
sbb
lds
sahf
xchg
aaa
ror
jne
sub
bound
xchg
faddp
into
sub
into
and
and
les
xor
scas
mov
rcrb
jl
pop
sbb
jge
or
push
xor
in
fnstenv
inc
pop
inc
js
jns
outsl
sbb
xchg
sbb
adc
int3
mov
sbb
dec
fstpl
push
mov
shll
and
iret
adc
int3
mov
or
add
sub
imul
adc
mov
loope
je
arpl
into
cmp
sub
add
inc
faddl
xchg
in
inc
or
js
sbb
xchg
test
sub
xor
lret
inc
sbb
cmp
push
bound
sub
popf
add
test
out
xor
lahf
ret
sbb
call
dec
pop
pop
push
je
scas
mov
arpl
iret
mov
push
pop
outsl
mov
jge
sub
lods
sbb
pop
scas
in
leave
outsl
testl
shlb
ja
mov
les
sbb
test
enter
sbb
pop
sbb
dec
mov
adc
mov
les
enter
xor
imul
out
adc
jnp
test
fistpll
lcall
mov
and
add
orl
ljmp
add
aaa
or
iret
and
lock
mov
mov
sub
pop
pusha
pop
sbb
ss
adc
sbb
inc
cmp
sub
gs
sub
mov
jae
push
dec
fcomps
in
sbb
dec
mov
outsl
insl
mov
inc
cmp
push
jecxz
push
pop
jno
ds
outsl
ja
hlt
push
push
inc
insl
imull
loop
jnp
test
ret
shl
dec
mov
inc
xlat
and
add
ret
ret
cmp
or
jmp
cmp
and
xchg
loop
test
cmpsl
mov
pop
pusha
lods
adc
std
aad
in
cmp
pop
syscall
idiv
arpl
repz
jecxz
jb
dec
inc
sub
clc
xchg
mov
inc
insl
popa
mov
inc
pop
aam
xchg
xchg
pop
xchg
jle
sub
mov
mov
or
aam
cmp
je
or
clc
loope
popl
jmp
lock
xchg
aad
jg
out
pop
push
stos
shrl
test
cmpsb
ficoms
stos
add
outsl
sahf
int3
dec
jecxz
xchg
or
je
mov
mov
mov
out
sahf
lods
sbb
sub
and
pop
mov
repnz
test
pusha
xchg
sub
outsl
and
aad
jge
js
or
jmp
mov
sub
scas
outsb
mov
jg
dec
mov
insb
mov
shll
jl
xchg
mov
mov
lret
add
xlat
mov
cli
jmp
shlb
outsl
iret
cwtl
adc
xor
sbb
pop
mov
push
push
lods
insl
sbb
jge
push
add
mov
out
inc
ja
rcll
rcrb
jnp
jbe
stos
xorl
mov
add
rcr
mov
push
popf
out
push
xchg
inc
xchg
fcomp
les
mov
arpl
sub
test
insl
les
iret
nop
push
mov
aaa
cmp
movsb
aad
es
xchg
mov
enter
xor
arpl
int
adc
enter
and
into
das
xor
sub
xchg
arpl
aas
out
les
sub
mov
push
push
sub
dec
jmp
lea
ret
in
inc
daa
decb
or
sahf
push
repnz
xor
mov
imul
js
mov
jns,pt
pop
ret
outsw
cli
xlat
sub
mov
mov
and
mov
xchg
mov
lret
stc
adc
jge
mov
or
in
das
test
or
xchg
cmp
leave
and
push
ret
lock
out
leave
pop
mov
xor
xlat
push
push
scas
sub
sbb
fldl
push
and
adc
ficoml
sbb
inc
push
sub
cltd
sub
pushf
pusha
inc
movsb
adc
clc
cmp
les
jnp
mov
lea
sbb
iret
xchg
xchg
sbb
dec
xchg
repnz
sarb
scas
call
shr
push
sub
cli
xorb
aas
jno
inc
dec
lcall
mov
pop
pop
inc
aam
fdivrs
cmp
loopne
sub
mov
sti
mov
mov
inc
jb
daa
add
pop
lods
add
orb
inc
ja
push
adc
dec
lods
cs
adc
jl
xchg
arpl
nop
data16
out
and
xchg
xchg
stos
jl
push
mov
mov
call
fsubr
les
repnz
aad
ficoml
js
xlat
fcomp
sbb
mov
rcl
mov
ljmp
iret
aaa
adc
fsubr
cmp
cmp
pop
mov
stos
sub
int3
call
mov
push
or
push
and
loop
mov
imul
dec
mov
negb
sbb
add
sbb
ljmp
xchg
dec
xchg
adc
adc
add
lahf
lret
xor
ret
insl
aad
das
ljmp
jne
pop
fiaddl
pop
or
jbe
xor
cltd
dec
fists
bound
pop
xchg
int3
and
sbb
sbb
movsb
insl
movsl
xchg
aas
lock
nop
adcb
outsw
ret
cmp
decb
loop
pop
adc
popa
jne
test
sub
pusha
jae
push
sub
pop
push
int
icebp
mov
mov
out
sbb
dec
lock
repz
dec
div
test
sbb
dec
inc
sub
ret
mov
sarl
daa
adc
pop
inc
inc
push
daa
out
and
or
add
inc
ljmp
mov
fstpt
push
push
and
xchg
out
cmpsb
popf
stos
xchg
mov
xchg
sbb
inc
add
cwtl
mov
cld
inc
push
int
mov
bound
loopne
cmp
push
cmpsb
stos
je
int
inc
sub
frstor
imul
inc
push
faddl
cmp
jmp
mov
nop
icebp
scas
nop
out
popf
push
sub
popa
test
jle
adc
and
mov
dec
les
mov
and
imul
shrl
adc
cmpb
pop
insl
and
pop
or
jns
jbe
dec
adc
cltd
cli
out
jecxz
mov
stos
push
repnz
cld
ret
push
test
cmp
imul
mov
xchg
stos
aad
xchg
or
popa
test
mov
fwait
iret
sbb
dec
mov
or
or
aas
fcoml
jnp
aaa
call
out
mov
inc
push
fidivrl
lret
sub
cmpsl
imulb
sub
lock
mov
adc
mov
inc
mov
shl
fsts
jg
cld
dec
lods
pusha
lret
daa
nop
cmp
stos
test
in
sub
dec
mov
xchg
xchg
jno
pop
adc
adc
popa
enter
dec
ljmp
sti
fs
sar
mov
pop
push
and
inc
sbb
inc
outsb
mov
dec
arpl
push
push
fimull
mov
xchg
xor
sub
out
fcompl
loope
mov
adcl
rcl
cmp
inc
sbb
sbb
inc
in
mov
cmp
adc
test
or
aas
shlb
push
pusha
mov
jecxz
xchg
xchg
js
xor
ss
jmp
lcall
enter
aad
sti
lcall
mov
loopne,pn
mov
in
aad
jno
js
negl
in
xchg
in
insl
lret
in
lods
xchg
or
outsl
repnz
rol
adc
push
hlt
rorb
and
repnz
adc
add
shrb
mov
add
jnp
ficoml
dec
xor
repz
mov
popa
stos
mov
pop
and
stos
fisttps
iret
pop
imul
ret
cmp
add
negl
jmp
push
lret
and
and
aam
and
mov
iret
sbb
sub
and
push
xchg
shl
ror
jmp
jmp
repnz
ja
and
jle
pusha
cmp
or
jmp
jnp
pop
xorb
push
jo
addr16
repz
add
jmp
imul
mov
leave
jo
jle
fdivs
adc
jb
divl
ficompl
arpl
xchg
rep
inc
repz
and
jecxz
lods
mov
xchg
ljmp
orb
and
int3
xchg
jg
fbld
jbe
pop
cmpsb
sub
bound
icebp
sbb
ret
push
sbb
jno
or
mov
scas
or
shl
lahf
cmpsl
mov
dec
fs
hlt
shl
arpl
mov
sub
jge
test
and
mov
jle
test
xchg
stc
scas
lret
cmpsl
repnz
enter
pusha
inc
push
lods
ja
cwtl
stc
sbb
mov
lock
jo
enter
daa
outsl
aaa
or
jmp
mov
cmp
sub
dec
dec
ss
push
lods
ja
out
or
mov
dec
std
jmp
icebp
xchg
movsb
stc
loope
jo
mov
add
xchg
insl
cmpsl
test
repnz
std
pop
mov
les
lods
dec
xlat
adc
adc
cmc
iret
sub
repnz
pop
xchg
fldl
push
mov
jle
gs
cmp
or
insl
test
or
or
add
jns
js
inc
popa
or
fs
sbb
mov
stos
dec
jg
add
sbbb
mov
xchg
sti
paddw
mov
int
stos
ficoml
jg
mov
ljmp
fisttpl
movsb
outsl
or
lret
mov
push
pop
ret
das
jns
and
cmpsb
sahf
inc
mov
fcoms
mov
mov
adc
in
enter
js
rcll
fdivs
and
sbb
mov
setp
cs
fldlg2
cltd
push
jmp
lea
inc
in
nop
or
sbb
cmp
pop
xlat
daa
mov
sbb
test
incb
repnz
rcr
mov
sub
fldcw
xor
jbe
sbb
sbb
jo
xchg
scas
sti
icebp
insl
mov
xor
jecxz
mov
adcl
sbb
or
xchg
mov
push
mov
je,pn
sbb
add
inc
sti
add
mov
cltd
jecxz
mov
cmp
movsb
mov
push
popf
pop
xchg
pop
add
mov
jg
xor
mov
mov
mov
into
xchg
fidivrs
mov
hlt
push
push
movsb
jle
leave
pop
mov
test
jo
push
push
add
aam
into
xlat
aam
pop
shl
sub
loope
in
cld
mov
add
cmp
cmc
rcrb
pop
jge
ss
lret
sub
add
and
push
xchg
sub
inc
push
pusha
sbb
test
lock
les
mov
mov
cmp
repnz
jecxz
jnp
int
pop
test
adc
mov
inc
test
inc
mov
pop
stc
jge
das
sahf
stc
leave
pop
push
test
push
cmc
clc
leave
lret
inc
sub
out
jle
push
cmpsl
ret
push
sub
arpl
cli
or
mov
xchg
xchg
sub
inc
push
push
adc
or
sub
dec
push
add
xor
daa
pop
es
xchg
into
xor
test
jle
cs
jmp
push
adc
mov
mov
dec
cmp
call
push
or
das
sub
lds
mov
and
dec
sbb
xchg
inc
mov
mov
mov
test
push
push
in
jecxz
mov
inc
xor
ds
stos
pop
sbb
xchg
push
arpl
gs
repnz
fucom
es
push
out
insb
xchg
xlat
xor
xlat
pushf
or
rcrl
jle
jl
pop
mov
xchg
jae
lds
js
js
dec
pop
sbb
adc
mov
sub
jg
jns
jecxz
or
cwtl
lock
imul
dec
inc
lret
sub
push
sub
push
mov
adc
jmp
mov
test
movntq
cmp
fwait
mov
test
sub
cmpsl
ret
lods
and
mov
mov
ret
cli
inc
mov
add
fsubrl
incb
in
icebp
mov
add
ljmp
addr16
adc
xchg
addb
sbb
dec
push
ds
mov
or
mov
push
lods
mov
addr16
or
inc
mov
cmp
scas
lds
repz
fs
pop
or
or
mov
xchg
out
out
sbb
outsl
ret
and
xchg
adc
repz
mov
rolb
cltd
out
je
sub
mov
mov
jo
into
shll
cld
xchg
mov
fisubrl
lods
and
adc
and
cmp
push
arpl
outsl
jle
nop
xchg
sub
cmpsl
push
sti
pop
push
or
inc
rcrl
lcall
in
lret
cmpsb
mov
dec
test
cld
cmp
js
int3
outsb
inc
aad
add
and
repnz
pushf
jo,pn
sub
bound
add
stc
lret
adcb
mov
iret
sbb
jl
sub
in
mov
mov
mov
test
push
cld
jecxz
or
mov
cs
xchg
in
enter
cmp
jns
div
and
test
cmpsb
add
pushf
xchg
or
repnz
aaa
test
sub
stc
pop
fcoml
ss
cwtl
add
lret
scas
pop
dec
shlb
cmp
push
mov
divl
mov
mov
jno
xchg
and
shrb
jecxz
mov
loope
mov
outsl
test
and
ds
mov
jl
mov
stc
push
negb
movb
repnz
mov
xchg
dec
stc
sbb
loope
jo
int3
mulb
mov
test
jg
cmpsl
lret
push
add
test
sub
dec
pop
or
and
cmp
dec
cmpsl
jo
xchg
jp
sub
inc
imul
adc
mov
xlat
hlt
pop
ds
sbb
or
outsl
ja
idivb
cld
and
inc
sub
iret
and
or
mov
cmc
or
sub
and
sub
arpl
mov
cmp
sahf
push
add
dec
add
loope
sahf
adc
fmul
push
jbe
shlb
sbb
sub
aas
fcmovb
lcall
sub
jbe
mov
and
lods
xchg
cltd
pop
and
cmp
loop
lret
sub
or
ds
cltd
sub
pop
or
ret
out
rcll
dec
jne
mov
pop
and
pop
jnp
je
sbbb
jns
bound
xchg
mov
mov
outsb
adc
mov
adc
shr
sbb
pop
movsb
inc
test
jno
xlat
or
pop
push
cltd
sahf
addr16
add
enter
inc
xorb
push
in
in
push
inc
cmp
dec
and
adc
add
arpl
push
xchg
mov
push
sbb
mov
repnz
and
fsubrl
mov
cmp
mov
add
or
enter
insl
xor
js
or
pop
cltd
dec
imul
inc
insl
repnz
pop
sbb
hlt
cs
or
and
sub
movsl
gs
xchg
iret
pop
jmp
sub
leave
add
cmc
imul
adc
fisubrl
adc
sub
xchg
jl
out
xlat
cmp
repnz
inc
cld
dec
cli
imul
ljmp
movb
sub
lcall
in
add
mov
xlat
pop
test
xor
ljmp
in
pop
adc
or
add
mov
push
fadds
pop
movb
push
xor
jne
pop
adc
repnz
cmp
fnstenv
add
subl
sbbb
push
and
jle
outsl
into
aas
sarb
mov
inc
adc
fdivrp
add
pushf
cmc
push
shlb
sbb
fldz
mov
dec
mov
xor
in
mov
mov
in
ja
sbb
push
in
negl
dec
test
mov
sub
sub
pop
mov
mov
je
pop
xchg
arpl
les
bound
scas
sbb
adc
mov
push
jmp
std
sbbb
fwait
jae
push
scas
push
in
fcom
adc
or
repnz
jp
outsl
stos
and
jecxz
inc
jge
scas
mov
adc
adc
test
jns
int
jno
sarb
sub
dec
mov
aaa
test
dec
mov
and
push
addl
mov
mov
mov
jecxz
clc
sbb
mov
or
sbb
xor
mov
cmpsb
idivb
mov
cltd
mov
and
jge
call
cmp
xor
or
into
xchg
int
cld
push
and
mov
inc
or
into
in
inc
roll
fnsave
and
xchg
lret
push
scas
sbb
stc
stos
test
fbstp
addr16
arpl
cmp
add
sbb
out
call
in
and
sbb
and
mov
pop
or
jecxz
inc
outsb
cwtl
loopne
sbb
cwtl
shl
xlat
dec
mov
scas
mov
push
push
pop
mov
je
pop
adc
pushf
adc
and
xchg
xchg
clc
sbb
lcall
mov
and
call
aam
testl
xchg
fsubrs
pop
mov
cmp
dec
push
mov
sub
mov
mov
in
leave
lds
cmp
ds
ds
dec
xchg
xor
sub
or
test
movsb
cmp
popf
cmp
lret
idivl
and
sub
cmp
add
inc
cmp
push
ljmp
inc
push
orl
es
mov
daa
jo
lcall
out
arpl
aam
or
lds
out
xor
mov
jmp
jmp
xchg
addr16
add
leave
subl
fs
loopne
popa
in
nop
ljmp
sub
loopne
es
fcoml
popf
adc
jl,pn
mov
mov
mov
jmp
mov
mov
addr16
xor
and
or
cld
push
mov
adc
pop
loop
or
dec
xlat
sti
cli
jne
or
aad
test
pusha
js
jbe
not
lahf
add
sahf
jnp
cmp
jmp
add
mov
mov
test
jmp
fdivs
jne
mov
push
sbb
mov
mov
loope
mov
adc
sahf
sub
mov
inc
lret
push
enter
sub
popa
mov
ljmp
sub
mov
dec
lods
call
bound
jae
sub
bnd
sbb
fcomps
pop
popf
jb
int
or
js
addr16
fwait
push
sarl
cltd
sbb
sbbl
out
inc
and
sbb
adc
mov
lcall
das
pop
mov
jmp
adc
ret
jns
or
in
hlt
out
clc
mov
mov
aam
mov
adc
push
cmpsb
in
sbb
xchg
scas
inc
iret
mov
aam
dec
push
push
inc
push
test
sti
fwait
adc
add
push
addr16
pop
sub
mov
cmp
in
push
test
cmpsl
mov
push
cwtl
mov
sbb
xor
push
sti
mov
arpl
insl
xor
or
sbb
scas
mov
or
popf
cmpsl
mov
sub
push
jo,pn
lcall
xor
call
pop
insl
lea
xor
sbb
nop
out
data16
fimuls
lds
cs
add
lds
mov
mov
mov
das
adc
js
sbb
push
push
leave
mov
mov
insl
pop
mov
cs
fidivl
jns
add
mov
jge
aaa
shrl
inc
jmp
daa
insl
std
or
cmp
pop
fmul
pop
lcall
inc
mov
leave
test
mulps
fidivrl
fsubr
or
dec
repz
ljmp
stos
lods
push
es
fs
dec
addb
out
add
scas
cli
inc
and
xchg
sub
imul
dec
lret
jecxz
sbb
insl
mov
inc
jns
and
xor
cmp
lcall
mov
out
sbb
jo
call
sub
loop
jecxz
lods
adc
mov
fisubl
pop
jmp
loope
xchg
mov
cli
pushf
push
hlt
jg
mov
movl
dec
push
push
ds
aam
mov
out
or
jno
mov
lods
es
mov
and
sbb
cld
push
ret
fwait
or
fadds
fistpl
mov
add
and
pop
cmp
lds
sub
xor
xchg
add
lcall
repnz
shrl
jle
jmp
fstpt
nop
sbbb
jl
push
das
jmp
push
shrl
add
xchg
aaa
nop
stos
imulb
stos
shll
xor
shlb
push
lret
fwait
pop
or
cld
add
int
or
mov
fadds
mov
pop
nop
jo
push
jb
ja
inc
cmpsl
jecxz
xchg
xchg
scas
sub
rcrb
call
mov
sub
jbe
push
andb
call
repnz
jge
ss
xor
xor
pop
aad
pop
daa
test
popl
ja
inc
sbb
scas
int3
sahf
lcall
adc
hlt
or
pop
sbb
sbb
mov
pop
popa
ret
repnz
pop
lcall
rclb
imul
pop
or
rcr
gs
and
and
call
aaa
loop
out
dec
fld
sbb
cltd
xchg
xor
cmp
arpl
repz
push
imul
or
sub
and
into
adc
pop
stos
aas
jnp
fs
xor
ja
sbb
and
fildll
cmp
les
ss
mov
arpl
imull
repnz
xor
or
jb
jecxz
outsl
sbb
outsb
sub
and
or
in
sti
sar
sub
xor
mov
das
mov
xchg
lret
mov
adc
mov
pop
xchg
outsb
mov
xor
sub
jnp
jmp
repnz
lds
sub
inc
out
sbb
xchg
mov
ret
xchg
jnp
push
repnz
pop
int3
add
pop
or
nop
and
ficoml
jmp
or
jae
jle
fadd
repnz
xchg
adc
fiadds
push
lret
mov
push
inc
movsb
ljmp
mov
andb
mov
inc
inc
xchg
mov
ds
sbb
lds
adc
sahf
push
mov
jge
imul
dec
mov
mov
add
and
push
movsb
or
cld
cmp
xorb
xor
mov
fwait
lds
push
xor
mov
rcrl
in
jl
jge
sarb
out
mov
mov
bound
push
mov
xchg
lret
leave
mov
out
popf
pop
inc
sub
js
xchg
jge
dec
clc
adc
mov
mov
test
aam
lret
out
ds
push
ljmp
mov
das
js
rcll
popa
lods
imul
or
repnz
jmp
lock
adc
sub
xlat
hlt
inc
mov
jne
icebp
cmpsb
imul
ja
lods
mov
xchg
imul
xor
out
pop
xchg
loope
outsl
insb
push
bnd
ds
pop
and
jecxz
jb
cld
lds
push
cmp
jge
cmpsl
add
test
stc
sub
das
sub
xor
lret
dec
sahf
jb
xor
sub
adc
jo
mov
jno
fs
xor
iret
rcll
or
fs
sti
push
je
clc
fwait
adc
push
jge
jnp
in
add
adc
enter
lods
push
shll
or
push
decb
cltd
jno
loopne
jns
xchg
cmp
aad
adc
pop
push
je
js
mov
imulb
or
push
in
pusha
xchg
sbb
leave
test
pop
mov
pushf
jb
mov
into
pushf
jo
and
mov
xor
fcoms
repnz
push
or
mov
add
push
adc
mov
test
mov
sub
jmp
popa
fs
or
and
pop
mov
push
leave
loope
pop
sub
stos
and
fwait
les
movsb
es
int3
mov
mov
mov
sub
mov
and
repz
adc
loope
mov
sbb
enter
mov
jmp
mov
add
xchg
push
xchg
lret
aad
mov
test
bnd
insl
or
popf
push
ficoml
pop
fs
or
cld
pop
pusha
pop
sub
add
mov
dec
daa
lcall
or
idivb
js
or
push
int
test
imul
shrb
test
loop
mov
out
negb
mov
fdivr
mov
lret
push
repnz
sub
imul
dec
push
mov
pop
ljmp
cmp
mov
je
lret
cmp
insl
mov
loope
cld
xor
xchg
inc
jb
js
outsl
cld
sub
icebp
push
jecxz
mov
inc
mov
jnp
fistl
and
andb
lret
adc
movsl
or
or
push
in
pushf
add
jmp
ret
das
lea
push
sub
inc
jbe
in
stos
jge
imul
into
or
ret
jb
cmpsl
in
xor
movsb
jge
shlb
sub
jb
popf
cmpsb
pop
jmp
mov
pop
mov
sub
push
aam
jecxz
std
fdivs
sbb
sbb
inc
mov
in
mov
push
or
lret
push
push
jp
xchg
fildl
push
xor
sbb
test
sub
jge
cmp
pavgw
shl
in
xchg
lds
popf
xchg
inc
mov
mov
pop
pop
nop
inc
pop
mov
stos
mov
pop
jl
dec
xor
outsb
adc
mov
xlat
push
or
sub
movsb
addr16
mov
jp
jne
xchg
and
insb
bound
adc
sbb
loope
repz
dec
mov
pop
test
adc
outsb
sub
outsb
mov
push
push
mov
jb
call
addr16
popa
insl
adc
jmp
aam
lret
ds
xor
dec
push
dec
scas
xchg
xchg
push
xlat
sub
mov
testl
or
push
inc
orl
in
sbb
icebp
jo
inc
jge
push
fstl
std
sahf
pop
mov
lock
lods
popa
sarb
dec
add
jmp
je
lret
int3
cmpsb
repnz
in
movsb
add
addr16
fcomps
cmpl
xchg
jmp
test
sub
dec
or
mov
and
dec
ret
aam
or
mov
pusha
test
mov
arpl
push
movsb
ljmp
fs
out
into
lock
and
xor
push
stos
or
repnz
aaa
xor
pop
and
in
cmp
push
test
add
or
iret
imul
jmp
xchg
cmpsl
repnz
mov
or
movsb
mov
mov
pop
stos
clc
jo,pt
pop
xchg
cmpsl
int3
sbb
test
jecxz
lret
jb
in
jno
mov
push
negb
xor
xorl
cmpsl
movsl
inc
or
xchg
push
icebp
mov
nop
xchg
es
aad
int3
sbb
movsl
and
dec
mov
mov
mov
loopne
leave
and
ljmp
int3
cmp
insb
cltd
scas
hlt
xchg
mov
xor
push
pop
sub
xor
lods
pop
das
mov
push
cs
testb
and
jp
stos
in
in
or
mov
das
aaa
cmp
adc
fistps
nop
sbb
imul
test
mov
push
inc
mov
mov
call
in
sbb
or
adc
xchg
arpl
adc
sub
popf
pusha
sub
sbb
repnz
jg
arpl
pcmpeqd
fs
jecxz
adc
insb
and
xchg
or
xor
fldenv
es
cmp
dec
mov
cmp
or
mov
cmp
loop
xchg
cmp
ret
sub
scas
jle
mov
nop
das
mov
mov
adc
sbb
outsb
out
mov
test
loopne
sub
push
lret
mov
decb
dec
call
ja
out
lcall
movsb
out
sbb
and
mov
into
pop
popa
inc
lahf
jg
add
pop
push
xchg
outsl
mov
arpl
or
fidivs
cli
cmp
dec
insl
lcall
xchg
sbb
in
insl
or
out
push
or
sbb
iret
sbb
cmpsb
repnz
adc
cli
les
pop
adc
sahf
add
mov
imul
push
loope
in
iret
out
push
dec
pop
stos
sub
lret
mov
cwtl
insl
loopne
repnz
or
je
stos
push
mov
scas
jmp
fimuls
mov
push
sub
in
pop
pusha
jp
sbb
pop
rolb
xchg
mull
sub
in
and
dec
and
scas
lds
fistpll
sbb
mov
ja
sbb
or
aad
and
xbegin
aaa
ret
adc
mov
in
adc
repz
sub
mov
leave
add
add
mov
sbb
xchg
mov
out
test
aam
jle
scas
lahf
in
inc
lret
pop
ss
add
dec
push
mov
roll
push
cmc
pop
jle
shll
rcrl
repnz
cmc
sub
mov
jle
je
pop
icebp
dec
inc
and
fdivs
push
sbb
and
jge
push
scas
loope
cmp
repz
jns
out
mov
sub
arpl
sub
dec
pop
cli
cld
pop
mov
outsb
add
sbb
cmp
add
mov
rclb
pop
push
dec
or
insb
pusha
aaa
loopne
dec
lea
ljmp
hlt
xchg
pop
inc
test
jle
cmp
fisttps
cmp
movsb
or
mov
loopne
pop
lea
loope
dec
sub
xchg
inc
or
test
mov
lcall
fst
jbe
dec
out
cwtl
jmp
push
or
jg
idivl
aam
or
icebp
jne
repnz
jl
fcoml
mov
fisubl
pop
aaa
xor
icebp
cli
jmp
mov
das
loope
mov
dec
imul
addr16
repz
dec
mov
xlat
push
push
jmp
leave
hlt
aad
outsl
adc
push
int
and
movl
add
push
dec
lds
stc
pusha
dec
sbb
test
cmp
cmp
pop
lods
movsb
xor
movsl
shrl
push
loopne
faddp
xlat
outsl
xchg
cmp
jbe
mov
repz
inc
xchg
mov
pop
xor
lock
cltd
in
mov
pop
add
data16
roll
sar
sub
std
pop
in
in
arpl
rorb
sub
adc
and
lcall
mov
dec
popf
imul
add
xchg
cmp
ljmp
sbb
insb
push
cmp
outsl
lret
and
lock
mov
repnz
cmpsb
incl
xchg
or
xorb
sub
js
repz
insb
mov
cmp
mov
xor
mov
or
and
push
xchg
or
push
or
cmp
push
lret
or
mulb
mov
sub
cld
cmpsl
push
mov
pop
leave
ds
cltd
das
jl
dec
and
and
sbb
inc
dec
sub
mov
add
and
jb
xchg
add
xchg
mov
cld
and
push
adc
jge
or
xchg
test
xor
mov
dec
scas
in
xlat
dec
sbb
fdivrp
add
aad
xchg
and
pop
mov
loop
inc
std
jne
dec
dec
cli
pop
mov
js
push
iret
xchg
je
adc
mov
inc
xchg
testb
fidivl
repnz
inc
int
pushf
jmp
jns
dec
enter
sbb
arpl
popf
xchg
cmc
arpl
repz
adc
ja
pop
das
xchg
inc
add
mov
add
icebp
aam
and
mov
sbb
daa
sub
xchg
inc
or
mov
mov
lret
sub
push
icebp
dec
jae
mov
or
fs
ss
jge
sub
pop
mov
popf
pop
mov
mov
insl
ds
cli
and
push
add
addr16
sbb
lret
fisttpl
mov
xor
call
and
lods
mov
bound
scas
ja
sahf
and
push
and
pusha
pop
push
push
add
mov
loopne
cmp
dec
push
bound
or
and
mov
lods
out
push
sarb
scas
push
ja
mov
pop
roll
push
icebp
inc
decb
ds
scas
xor
dec
mov
outsb
scas
push
xor
xor
and
call
ljmp
fisubs
sub
xor
add
add
into
in
leave
push
iret
adc
out
xchg
out
pop
iret
xchg
jmp
mov
pop
in
loope
push
fwait
popa
stos
sbb
repnz
ret
push
pop
arpl
scas
aam
jne
push
dec
movsb
adc
sbb
sbb
lea
xchg
push
in
adc
sbb
xchg
adc
xchg
nop
repz
mov
int
call
push
add
pop
dec
xchg
mov
xor
mov
aaa
cmp
adc
addr16
out
jae
andl
lret
sahf
ret
shrb
and
sbb
std
mov
adc
push
aaa
das
xchg
adc
and
or
cmp
jno
inc
mov
rorb
stc
enter
scas
lods
sbb
rcl
outsb
inc
in
rclb
pop
dec
insl
mov
into
pushf
mov
cmpsl
sbb
or
hlt
push
adc
sub
inc
test
jle
lahf
jmp
jnp
sub
orb
paddusb
repz
mov
sbb
adc
push
inc
int3
push
ja
cmp
push
push
lcall
shll
or
inc
and
or
daa
repnz
mov
leave
sarl
pop
pop
repnz
mov
cmpsl
adc
cli
adc
pop
mov
and
mov
call
in
leave
inc
mov
int3
push
sub
or
adc
or
cwtl
xchg
mov
neg
movsl
ds
std
test
insl
fcompl
outsb
and
or
or
jge
jp
pop
push
fcomps
xor
add
xchg
sub
sub
xchg
mov
jb
cmpsl
and
jge
or
pop
in
mov
lock
repz
dec
cld
pop
xchg
jge
sbb
lds
hlt
repnz
cmc
insl
cwtl
push
push
ret
mov
popa
aaa
and
jg
jae
movsl
cmp
adc
movsl
and
mov
pop
mov
pop
push
adc
enter
and
addr16
and
popf
add
add
lcall
jo
pop
lret
sbb
mov
addr16
lret
test
push
cwtl
xor
xchg
xchg
lahf
lret
sub
lret
aaa
cmp
sbb
and
in
repnz
test
sbb
adcb
fdivrl
and
mov
jb
adc
and
jno
inc
clc
and
test
arpl
jnp
jge
dec
test
mov
push
inc
and
sbb
sahf
cmp
rclb
lock
dec
pop
adc
pop
ja
aam
flds
cmp
xlat
fistpl
sbb
dec
cmpsl
hlt
jnp
fsubl
pop
ret
sahf
test
xchg
js
mov
repnz
fdivrs
lcall
push
mov
sbb
lods
shll
inc
je
daa
mov
fmuls
repnz
mov
lods
imul
fcmovb
inc
daa
imul
shrb
aaa
push
mov
sahf
insl
dec
mov
cmc
xor
cmp
mov
mov
lods
div
sub
sti
sub
mov
xchg
repnz
decb
insl
sahf
lods
je
inc
fadd
std
les
and
adc
pop
fidivl
js
adc
daa
add
fstpt
cmpsb
cltd
stc
push
mov
inc
pop
sub
movsl
cltd
cmpsl
rorb
repnz
outsb
mov
sub
or
sub
jb
inc
pusha
stc
and
leave
call
sahf
inc
popf
xchg
popf
add
adc
popa
inc
pop
inc
test
lret
loope
cmp
sbb
cmpsl
jnp
rcr
push
xchg
push
andb
imul
repz
ss
or
push
mov
shrb
leave
sbb
ret
push
or
cmc
cli
outsl
and
in
repz
shld
test
gs
enter
out
or
or
out
mov
out
enter
nop
mov
aaa
aaa
mov
popa
adc
lea
cmp
lods
inc
dec
add
add
inc
and
enter
dec
mov
call
jle
cmp
call
xchg
loopne
das
je
cmp
jb
or
cwtl
pop
jmp
inc
push
ja
fistpl
xor
push
add
inc
int
stc
pop
inc
jae
pop
ds
call
idivl
js
cld
jne
pop
subb
xchg
or
sbb
sub
cwtl
stos
sub
lahf
enter
or
in
and
movsb
cmp
fs
pusha
pop
fs
jb
loope
mov
movsl
fwait
xor
mov
cmpsl
ja
mov
bound
lock
pop
test
and
dec
ljmp
sub
fidivs
xchg
xor
sbb
mulb
repnz
pop
popa
pop
aad
lods
scas
or
test
bnd
add
mov
push
enter
sbb
push
mov
push
lret
pop
inc
xchg
repnz
cmc
xchg
sub
addl
sub
adc
jg
cmpsl
stos
and
add
in
cmp
add
out
cmc
arpl
sub
ret
cmpsb
cld
adc
ja
adc
jmp
mov
mov
xchg
pop
je
cmpsb
repnz
mov
in
lock
dec
inc
sub
mov
enter
das
xchg
iret
jl
mov
and
daa
pop
scas
fimull
fisttps
xchg
mov
inc
movsb
daa
cwtl
sahf
nop
inc
rolb
xchg
pop
out
jg
cli
dec
push
cltd
xlat
and
ret
addr16
ret
lods
repnz
mov
push
adc
in
xchg
add
jno
out
test
andl
fisubrs
cmp
dec
into
ljmp
adc
sbb
mov
pop
popa
dec
imul
or
stos
pop
jns
daa
mov
cmp
lods
data16
and
test
je
xlat
enter
inc
cmp
jecxz
hlt
in
cmp
push
cld
lods
adc
mov
inc
jo
loop
das
and
jmp
stos
mov
ja
insl
adc
cmp
or
xchg
pushl
push
or
iret
and
imul
push
in
mov
jecxz
lcall
mov
mov
sub
mov
inc
push
sbbb
outsb
les
out
mov
push
popf
xchg
jle
ss
lret
aad
lods
xlat
mov
sbb
in
jmp
dec
jbe
arpl
dec
ret
movsb
dec
sub
bnd
rcll
xorl
xor
jp
nop
clc
mov
int
imul
fiaddl
iret
nop
imul
and
lods
cmp
loope
decb
dec
xchg
nop
sbbb
fwait
cld
loopne
sub
xchg
adc
scas
shlb
and
or
arpl
sahf
mov
in
scas
ficoml
lds
pop
enter
jg
pop
cmc
dec
jne
jle
pop
stc
xlat
lcall
stc
les
cmp
shlb
sub
popf
pop
popa
es
push
sbb
sti
pop
lea
adc
mov
dec
aaa
pushf
fnstenv
mov
push
int3
mov
push
test
adc
es
mov
inc
jno
aaa
jg
ret
aad
inc
push
and
shrl
pop
mov
ljmp
cwtl
xchg
scas
fimull
dec
cmc
dec
ds
je
mov
fists
lret
mov
cmp
or
subl
add
mov
cmp
lods
mov
bound
mov
push
push
sbb
imul
push
xor
int3
jge
and
jmp
stos
sbb
add
test
mov
sub
ljmp
mov
fmuls
dec
in
mov
clc
push
jb
adc
jge
add
jne
lcall
mov
inc
jmp
xchg
mov
pop
in
adc
ret
cmovp
fisubs
pop
push
or
ret
loop
adc
cwtl
pop
sti
jne
enter
inc
mov
inc
push
push
or
pop
or
cld
fidivl
push
push
cmp
push
icebp
ds
test
adc
push
insl
xor
lods
ljmp
in
stos
aam
inc
push
popa
data16
sbb
inc
out
fisubs
std
sbb
xor
pushf
mov
decl
mov
es
inc
and
push
lret
jmp
mov
ffree
sbb
movsb
ljmp
popf
fiaddl
das
daa
fcoms
and
add
inc
mov
or
stc
pop
or
adc
and
mov
mov
xchg
sub
mov
rcr
daa
repnz
or
imul
xchg
sahf
cs
stc
push
adc
arpl
mov
je
in
je
outsl
mov
inc
xchg
add
xor
movsl
and
jmp
xchg
pop
inc
sbb
push
loopne
lret
or
bound
inc
and
jns
inc
and
pop
enter
jmp
inc
pop
ror
lea
inc
jbe
pushf
sbb
xchg
jmp
lds
cs
mov
ljmp
jb
and
adc
or
sbb
into
xor
push
jnp
mov
inc
mov
sbb
xor
inc
or
mov
sbb
mov
inc
fwait
or
sahf
arpl
lods
mov
push
jns
stos
add
adc
sub
add
inc
sbb
jns
or
mov
cmp
pop
mov
dec
loopne
jg
out
addr16
xchg
ret
out
inc
popa
mov
je
cmp
or
dec
nop
jnp
jge
or
bt
pop
test
push
jecxz
fiaddl
jp
jp
mov
adc
insl
pop
mov
movsb
loop
dec
mov
popf
xorb
adcl
mov
adc
mov
cwtl
outsb
imul
and
out
xchg
sub
lcall
mov
xchg
cltd
pop
ljmp
stos
push
lret
push
cli
cmp
popf
inc
sbb
mov
aam
cld
mov
loopne
daa
push
bound
push
aam
push
pop
das
rorl
iret
push
adc
pop
dec
jo
mov
loope
sbb
roll
xchg
jge
mov
adc
cmpsl
aas
cmp
push
js
sub
lret
mov
push
andb
fisubrs
adc
loope
aam
test
xchg
out
jl
and
ljmp
xor
cwtl
fs
scas
fsubrl
inc
into
imul
cmp
test
test
mov
lods
xchg
inc
outsb
add
and
movsb
sbb
mov
out
sbb
lcall
push
loope
iret
mov
in
jae
jg
sub
lock
pop
push
xor
nop
and
popf
sub
push
and
orb
push
adcb
ljmp
mov
xchg
cmp
jbe
jmp
clc
nop
sub
cmp
addr16
cli
dec
pop
fcomps
setne
inc
inc
inc
repnz
pop
push
cmpsl
mov
xchg
jl
notb
ja
push
into
je
shrb
sbb
jmp
cmpsb
pop
cmp
ds
jne
sub
pop
cltd
inc
ljmp
ja
add
pop
pop
inc
inc
fists
xor
add
sti
sbb
aad
mov
cmpb
jle
outsl
in
es
lahf
out
mov
mov
repnz
out
shrl
ret
dec
ljmp
repnz
push
jmp
push
adc
cmp
ljmp
sar
xchg
push
sbb
ljmp
push
push
add
ljmp
dec
mov
add
adc
pop
outsl
enter
cld
jmp
cmp
and
cmp
rclb
push
xchg
in
cmp
and
in
test
jp
fbstp
in
dec
clc
cmp
fxch
mov
fidivl
mov
xlat
in
sti
sub
sub
jg
or
lods
call
push
lahf
dec
ljmp
sti
scas
shlb
mov
xchg
push
in
cwtl
add
adc
or
dec
sbb
add
int
adc
xor
imul
int
mov
cltd
pop
movsb
and
xlat
and
in
and
pop
add
cmp
adc
sarb
iret
repz
sub
addr16
rolb
jecxz
shl
or
sub
movsb
mov
cmc
fldenv
dec
aaa
in
test
dec
js
add
xlat
stc
jnp
leave
sub
mov
cwtl
cmp
push
hlt
cs
push
aad
in
dec
mov
sbb
push
js
xor
pusha
out
and
cmc
in
and
loopne
imul
js
sbb
inc
repz
sub
clc
js
inc
je
enter
movsb
cmc
cltd
adc
adc
mov
in
lcall
push
sbb
addr16
loope
imul
push
es
ljmp
and
cmc
lret
test
add
in
aam
xchg
and
leave
clc
fwait
mov
or
and
dec
cwtl
add
mov
mov
and
sbb
dec
addr16
scas
test
in
dec
cwtl
mov
xor
sub
movsl
sub
sbb
sbb
lcall
cltd
lcall
aad
push
repnz
cmpsl
cmc
mov
in
xchg
mov
sub
jg
sti
ret
in
repz
dec
mov
or
adc
dec
arpl
js
or
mov
shrb
in
push
adc
dec
sbb
and
decb
sbb
sti
test
ss
fcomps
lods
push
fldl
enter
or
mov
cmpsl
xchg
xor
cld
inc
repz
int
negl
call
jmp
mov
push
cmpsl
repnz
adc
in
iret
js
or
fimuls
jnp
popa
jmp
stos
call
push
sub
mov
shrb
cmc
in
cwtl
jmp
and
sbb
inc
or
arpl
test
cmc
lret
sub
mov
sbb
and
out
fsts
insb
in
inc
js
cld
adc
add
mov
rol
or
inc
loopne
mov
xor
int
cmc
mov
stos
aam
cltd
fwait
shll
xor
xchg
push
or
in
popf
fdiv
push
cmp
xchg
ret
repz
xchg
lcall
pop
sub
gs
fwait
add
jbe
test
outsb
adcl
test
notb
push
pop
stc
cmp
xlat
pop
xchg
in
add
mov
test
jns
in
cmpsb
loope
mov
mov
aas
inc
movsl
nop
test
push
in
movhlps
push
int
add
cmp
add
in
or
cmp
xor
in
mov
mov
sub
inc
pop
pop
in
mov
fcomip
in
sub
pushl
imul
out
std
xchg
int3
insb
fiaddl
lret
jp
pop
mov
dec
xchg
fdivr
xchg
jne
mov
in
and
push
or
cmove
in
inc
fcomps
push
push
xor
xor
rorb
ret
add
jno
aad
dec
mov
test
inc
xchg
sbb
cmp
xor
repnz
mov
dec
mov
stos
or
and
inc
sbb
jmp
in
dec
cmpsl
push
cmpsb
adc
loopne
aam
and
iret
jne
push
pshufw
mov
xchg
inc
xor
inc
sbb
cwtl
imulb
cmp
mov
in
add
imul
test
bound
nop
int3
xor
movsl
add
push
adc
inc
ror
adc
or
and
fsubrl
pop
jb
inc
idiv
mov
into
fld
lds
sub
loop
movsb
cmp
es
in
dec
das
sbb
icebp
rcr
push
inc
cli
cld
mov
xchg
dec
arpl
xchg
fcomps
cmpsb
popa
enter
and
jbe
scas
mov
cld
mov
sti
push
daa
imul
cltd
sbbb
movsb
popf
imul
nop
xor
pop
mov
push
jne
outsl
and
xchg
inc
gs
push
xor
cmp
sbb
dec
fldenv
pusha
aam
xchg
in
dec
jl
cmp
push
mov
call
xchg
mov
inc
sub
imul
push
loop
push
loopne
pusha
mov
push
fwait
sbb
paddsb
test
pop
int
jle
into
cmp
je
notb
jp
in
inc
aam
out
xchg
imul
push
lods
or
mov
shlb
sbb
dec
dec
cld
adc
clc
add
je
movsb
pop
imul
test
or
adc
icebp
in
dec
sarl
sub
push
push
call
and
ss
xor
addr16
or
add
in
cli
fistpl
mov
std
mov
adc
adc
or
je
repz
dec
lea
xlat
sub
mov
and
movsl
test
jecxz
ss
push
int3
clc
adc
push
or
cld
jmp
in
fistpll
movsb
sbb
outsl
add
xchg
dec
fwait
paddsb
in
xor
movsb
in
push
aas
dec
sbb
pop
and
movsb
or
sub
sbb
pop
and
push
jecxz
xchg
imul
in
mov
icebp
or
cwtl
fstpt
mov
call
xor
pop
and
lahf
mov
js
aad
mov
test
jecxz
cmpsl
push
hlt
sbb
jns
cmpsb
fstl
sub
inc
sti
push
sub
out
imul
mov
and
imul
pop
and
fsubrs
lahf
mov
stc
push
add
ret
mov
pop
and
loopne
push
iret
mov
jmp
and
out
dec
test
lahf
push
xchg
ficompl
mov
or
adc
or
mov
push
adc
dec
repz
sbbb
inc
and
in
mov
xor
in
cmpsl
imul
and
pop
rcll
push
insl
dec
std
call
adc
inc
cmp
xor
xor
arpl
pop
cli
jno
sub
sbb
lcall
imul
mov
sub
or
or
data16
test
mov
push
adc
in
jl
adc
cld
inc
inc
adc
stos
mov
ljmp
hlt
push
cmc
mov
movsl
mov
fists
stos
orb
div
inc
in
movsb
int3
adc
shrb
push
xor
jp
clc
xchg
add
flds
xchg
in
aaa
ficompl
aas
sub
dec
and
push
call
ficoml
nop
test
in
sbb
in
fadds
dec
leave
in
mov
imull
in
or
mov
inc
testb
mov
pusha
push
je
insb
xor
out
shl
out
les
adc
pop
or
push
in
lahf
mov
inc
andb
xchg
or
fwait
or
test
aam
leave
cmp
imul
push
jp
in
dec
cs
sub
test
push
aaa
out
mov
mov
movsb
mov
shlb
push
lret
jo
add
or
testb
mov
push
pop
mov
movsb
dec
and
cld
es
mov
cmp
xchg
call
inc
aam
add
adc
push
sub
or
in
jmp
imul
jo
sub
fdivrl
scas
fucomp
ret
xchg
and
lahf
addr16
sbb
dec
movsl
out
in
int3
out
cwtl
sub
bnd
popf
rol
stc
lcall
push
fcoms
fs
jne
dec
lret
call
cltd
in
lock
push
xor
xor
hlt
out
ljmp
and
push
xor
xor
mov
into
scas
mov
pop
mov
or
pop
push
in
in
insb
repnz
movsb
jno
movsb
sbb
lahf
popa
aam
in
dec
pop
mov
mov
add
cmp
dec
lock
sub
repz
add
jmp
sub
cld
sbb
and
sub
sub
jae
pop
fcmovnbe
in
sahf
test
iret
das
xlat
test
lahf
sbb
jno
dec
gs
mov
in
movsb
xchg
rorb
divb
xchg
rolb
int
movsb
dec
inc
dec
movsb
movsl
lahf
pop
and
inc
and
mov
or
addr16
push
movsl
xor
inc
add
mov
addl
or
pop
push
add
jnp
sahf
push
mov
aas
in
lods
fildl
in
pop
roll
push
in
lret
adc
jne
gs
test
sub
in
xlat
cli
dec
mov
inc
jle
mov
push
adc
test
push
mov
cld
lahf
rorl
icebp
jbe
inc
sti
mov
in
mov
adc
or
js
ss
fcoms
sbb
movsb
fs
push
and
cmp
push
jno
imul
inc
jmp
or
es
cmp
mov
movsb
addps
in
aad
add
cmp
neg
sub
addl
scas
cwtl
inc
test
mov
andb
push
imul
sarb
push
jecxz
cmpsl
in
xchg
orl
ljmp
jo
mov
adc
addr16
rolb
mov
jne
jle
and
sub
pop
and
mov
xchg
js
movsb
test
add
lret
dec
in
call
jae
or
or
inc
jb
sub
shrl
pop
cmp
jbe
and
add
icebp
je
lds
out
pop
sub
mov
sub
xchg
lcall
or
in
aaa
pop
daa
inc
and
mov
test
dec
test
loop
sbb
pop
sub
and
inc
fisubs
xchg
push
in
movsb
cmp
nop
cli
pop
test
mov
push
in
cmp
push
adc
js
call
stos
push
imul
outsl
es
popa
lds
mov
scas
popa
dec
pop
fldenv
pop
jg
jbe
insl
inc
sbb
xchg
pop
or
dec
mov
fistps
divb
lahf
mov
stos
pop
pop
lods
dec
daa
pop
sbb
sahf
xlat
mov
ja
or
movsb
jns
pop
cmp
imul
fnstsw
pop
pusha
sahf
xchg
pop
test
jg
icebp
adc
es
and
test
imul
ret
push
xor
in
ljmp
xchg
cmovge
scas
hlt
fisttps
movzwl
or
in
test
movsl
jne
sub
arpl
push
inc
dec
addl
pop
jecxz
push
mov
mov
mov
mov
lods
xor
dec
fimuls
paddsw
test
and
pop
in
test
gs
mov
dec
and
arpl
dec
xchg
cmp
gs
jecxz
pop
mov
pop
add
inc
inc
mov
cmp
frstor
inc
push
inc
cmp
cmp
lock
popf
jecxz
cwtl
repnz
mov
lret
out
out
inc
in
mov
in
repz
insl
in
in
pop
loope
pop
pop
fstps
adc
pop
rcrl
ss
mov
mov
lock
push
mov
pop
xor
repnz
and
adc
cld
mov
lods
repz
in
out
imul
or
imul
gs
fisubl
pop
mov
cmp
pop
aam
aad
lret
mov
mov
lock
pop
mov
add
lea
fisubl
sahf
push
pop
inc
push
jge
jp
outsl
test
nop
mov
jle
mov
xor
cmp
xchg
inc
lds
jl
inc
clc
xor
mov
daa
fucom
mov
inc
mov
mov
push
stc
adc
dec
cmp
cmp
dec
pop
adc
in
test
pop
mov
sbb
repz
cmpsb
jecxz
mov
cltd
cmp
into
pop
test
jmp
add
sahf
mov
bound
pop
pushf
mov
sbb
inc
xorl
mov
fimuls
sub
mov
es
int3
lds
call
fwait
scas
adc
sub
sub
jecxz
cmpsl
mov
sti
ljmp
mov
es
mov
or
es
sbb
lds
or
sub
push
or
stc
bound
dec
dec
arpl
pop
aas
shl
sahf
sbb
or
push
inc
dec
mov
sub
inc
jne
jle
pop
stos
aaa
arpl
push
jp
jno
pop
fldl
inc
mov
call
xor
cmp
xor
hlt
lcall
adc
push
fidivrs
inc
mov
mov
lock
mov
or
mov
or
jg
enter
mov
mov
test
cld
dec
daa
fisttps
mov
lahf
popa
or
push
mov
call
and
dec
or
or
movsl
mov
add
je
out
lock
xchg
adc
add
pop
arpl
mov
dec
jl
je
mov
fmuls
inc
mov
push
popf
mov
pop
mov
sbb
test
fisttpl
test
push
push
into
cmpsl
pop
sub
xchg
sahf
pop
rcrl
fnstsw
popf
sub
fcomps
cltd
rorb
inc
pop
mov
cmp
push
in
sbb
daa
fstl
les
add
mov
pop
ds
out
add
enter
and
or
faddl
shl
icebp
sub
mov
jecxz
dec
pop
movsl
sbb
fildll
cltd
rorl
inc
jg
pop
mov
fcompl
and
jbe
mov
test
sarb
andps
test
popa
ficoms
add
dec
jb
and
cltd
mov
sbb
mov
or
dec
xadd
pop
pop
ss
xor
scas
or
cmp
jb
pop
add
and
loopne
cmpsl
fcompl
xchg
pushf
mov
int3
and
js
repnz
and
arpl
fcomps
mov
mov
in
into
mov
xor
es
and
sbb
int3
test
mov
out
and
out
std
mov
add
or
dec
jae
stc
xor
stos
push
mov
fcomps
push
xchg
inc
idivl
cmc
mov
test
mov
stc
out
test
packssdw
pop
mov
or
and
shl
xchg
mov
jmp
lahf
sbb
xor
orb
fsubrp
fs
cltd
cld
ja
scas
js
push
adc
sbb
sbb
test
insb
push
push
inc
push
cmp
cmp
movl
jge
es
sbb
mov
es
jae
mov
sub
pop
and
fdivrs
and
pop
aaa
or
das
ljmp
shlb
sahf
jno
dec
push
mov
mov
sub
pop
sub
or
dec
adc
pushf
es
sbb
lds
mov
xor
popa
aad
jo
lock
dec
or
repz
repnz
icebp
div
xchg
sahf
sbbb
sahf
test
push
jne
popa
push
sbb
sbb
movsb
inc
sub
dec
sbb
sbb
and
fcompl
sbb
loopne
pop
mov
mov
mov
jl
fdivrl
daa
push
and
mov
fstl
push
add
int
gs
pushf
and
push
hlt
xchg
fmull
mov
and
pmaxub
repnz
icebp
outsb
lock
adc
negb
sub
out
or
push
les
push
sahf
pushf
ficomps
sahf
aaa
ljmp
inc
sub
add
and
dec
and
jns
ficomps
lret
cltd
js
outsl
cmp
inc
sbb
cmp
cld
stos
lahf
repz
jg
ficomps
dec
sbb
rclb
mov
mov
mov
jl
arpl
repz
mov
es
lds
movsl
test
xlat
push
adc
mov
mov
mov
repnz
mov
sbb
add
repz
mov
mov
mov
fcoml
pop
mov
push
cld
fnstsw
popf
ss
sbb
idivl
mov
out
pop
inc
pop
je
arpl
push
repz
cmpxchg8b
and
inc
mov
jmp
repnz
or
pop
jno
fsubp
cmp
test
js
pop
pushf
fs
test
jmp
pop
dec
imul
and
mov
or
lcall
pop
fs
mov
pop
test
js
arpl
xor
cmp
imul
outsl
xchg
repz
add
push
pop
sbb
dec
inc
inc
idivb
xor
cwtl
mov
and
cltd
fistps
arpl
pushf
push
mov
pop
lea
dec
sbb
andb
xchg
inc
sarl
ja
test
mov
jle
ficomps
stc
sahf
aaa
push
push
test
sahf
jno
mov
xchg
mov
pop
sbb
xchg
mov
xor
faddl
loop
jl
push
sub
sbb
popa
pop
jns
test
fcomps
icebp
or
ficomps
sbb
or
add
jb
int
popf
or
mov
imul
fdivrl
pushf
pop
inc
addb
xor
insb
clc
xchg
repz
repnz
mov
lahf
imul
arpl
lret
rorb
and
cmp
ret
cmp
jns
sub
mov
pushf
add
stos
sbb
popa
mov
adc
sahf
imul
jmp
pop
stc
adc
out
out
add
sub
data16
es
fldl
adc
and
inc
pop
pop
mov
inc
adc
mov
and
lods
test
jmp
pop
fsubr
sbb
cmpb
mov
pop
sahf
mov
sahf
sbbl
test
jbe
ss
test
pop
cmp
outsl
les
and
pop
adc
pop
sti
push
jo
mov
les
cmp
loopne
lahf
pop
and
pop
or
xorb
adc
push
jle
negb
cwtl
pop
mov
and
push
movsb
mov
imul
push
cmp
out
testl
pop
test
sbb
nop
sbb
ficompl
in
sub
jno
imul
add
mov
movsb
sbb
xchg
lret
sub
push
inc
sub
pushf
cmp
nop
jl
fisttpll
ljmp
and
sbb
mov
es
aad
adc
or
add
cld
fimuls
xchg
ds
xchg
cltd
test
cmp
cwtl
popf
flds
mov
xchg
pop
sub
clc
cli
dec
and
sbb
jno
incl
cmp
jno
fsubrl
and
add
movsl
mov
jno
insl
test
imul
xor
pop
sbb
test
out
scas
and
repnz
insb
lock
ja
rorb
dec
in
in
test
mov
hlt
std
inc
push
jl
in
test
imul
arpl
pop
jns
xor
cli
or
out
imul
arpl
sbb
push
out
and
jle
es
in
enter
fisttps
adc
cltd
jmp
hlt
fimuls
mov
mov
mulb
fcmovb
negb
pop
xchg
and
or
pushf
mov
test
pop
dec
push
xor
lret
pop
cmp
cmpsl
int3
push
push
lcall
and
movsl
and
das
inc
std
into
arpl
fadds
pop
add
fldl
lods
sbb
loope
test
push
in
mov
pop
adc
jae
mov
add
icebp
pop
xor
insb
cmpsb
push
xchg
cmpsb
add
scas
cld
scas
jnp
stc
push
negb
fiadds
sahf
push
pop
add
popf
add
pop
xor
mov
and
and
pop
and
movsl
ss
jb
add
arpl
fsubrs
pop
dec
push
jbe
mov
mov
sahf
or
prefetchw
xchg
popf
jl
daa
test
push
call
cli
insl
pushf
push
and
mov
cmp
ljmp
jmp
cmpsl
pop
in
dec
je
mov
popf
fsubp
addr16
cmpb
sbb
insb
sbb
push
mov
pop
add
pushf
cmp
stc
inc
sub
sub
pop
pop
adc
lock
ficomps
aad
aas
fnstsw
icebp
fimuls
int3
pop
or
sahf
fstps
mov
dec
sbb
and
repnz
mov
mov
or
jae
pusha
pop
sahf
shrl
push
push
neg
ficomps
bound
sub
test
sbb
jp
mov
or
jbe
ret
sbb
repz
sub
xchg
or
or
or
push
movsl
pop
add
pop
add
add
inc
incb
inc
cld
add
cli
pop
mov
cmp
cld
fs
lret
repz
cmp
mov
and
jns
pop
imul
xor
xor
xor
xor
xor
pop
mov
lock
call
inc
mov
dec
push
cmp
sub
sahf
mov
rcr
xchg
popf
or
arpl
enter
out
xchg
mov
loopne
mov
jb
adc
and
rcrl
ror
dec
or
mov
in
xor
dec
sahf
push
out
pushf
test
adc
and
insb
push
mov
pusha
sbb
fiaddl
jl
add
lahf
ja
jne
pop
mov
push
mov
lea
lea
add
lcall
sahf
fsubp
push
shrl
cld
push
sti
or
add
in
xor
scas
in
mov
xchg
loopne
sub
mov
ljmp
pop
cmp
pop
call
or
add
pop
xchg
incb
lea
lea
adc
sti
std
in
cld
in
sti
ret
scas
clc
pop
push
sbb
sub
icebp
pop
lock
mov
cwtl
adc
sub
test
mov
cmp
imul
xor
xor
xor
icebp
test
in
pop
in
push
lods
pop
out
sub
sub
cs
es
faddl
rep
das
add
in
inc
push
xchg
stos
ljmp
mov
lods
jae
and
pop
dec
test
rorb
lahf
push
sbb
cmp
hlt
push
pop
mov
adc
sahf
push
inc
cmp
jl
lock
gs
mov
test
sbb
and
xchg
mov
push
pop
inc
imul
sub
sti
cltd
mov
and
out
test
mov
repz
pop
icebp
sbb
xchg
nop
ficomps
inc
mov
popf
out
arpl
pop
in
xchg
imul
add
pop
push
push
or
mov
jge
lock
sub
imul
fsubr
lcall
cmp
lea
or
xor
jp
insb
xchg
jecxz
cld
in
dec
fisttps
lds
cmpsl
fnstcw
std
clc
hlt
sti
pop
cli
sub
test
pop
adc
syscall
xchg
add
sub
lods
js
pop
xchg
pop
adc
ss
push
sar
xchg
js
adc
jecxz
mov
sbb
or
add
mov
push
sbb
lea
or
test
or
add
call
ror
pushf
push
push
sahf
adc
mov
mov
scas
dec
push
or
stos
pop
lods
adc
push
fldl
cld
sub
lret
jmp
dec
mov
push
sbb
inc
adc
dec
test
sti
pop
nop
sbb
in
pop
ficompl
lcall
pop
add
adc
in
test
in
clc
test
loopne
and
mov
ficomps
out
pop
cltd
push
mov
dec
movsl
dec
adc
push
lcall
sbb
test
test
add
frstor
and
mov
sbb
inc
test
inc
sbb
dec
cmp
mov
add
stos
sahf
cmp
cmp
mov
fcoms
jle
cli
lea
cmpsb
pop
mov
subl
fnsave
jecxz
popf
and
adc
adc
stos
or
mov
cmp
pop
push
and
xchg
imulb
pop
add
xchg
push
icebp
add
add
test
cmp
or
ret
mov
sbb
pop
imul
int
test
pop
idivb
leave
cmpsl
add
cltd
lea
stos
push
and
movsl
in
test
or
sbb
adc
cmovs
jnp
push
xchg
test
or
test
dec
sbb
repz
fbld
add
and
loop
jecxz
or
pop
cmp
pop
idiv
cmc
add
repz
gs
inc
lock
out
inc
out
inc
in
es
inc
fstps
adc
push
test
and
pushf
sti
mov
adc
negb
pop
hlt
pop
repz
repnz
icebp
popa
lock
pop
fs
add
subb
push
mov
mov
out
and
xchg
lcall
mov
lods
mov
cmp
lahf
in
loopne
fdivrl
cmp
rorb
clc
data16
xchg
icebp
mov
mov
mov
push
sbb
adc
cmp
cmp
daa
xchg
pushf
movsb
cmp
pop
push
loop
adc
stos
out
sub
in
push
adc
jae
pop
jecxz
push
out
std
add
pop
sbb
xor
jbe
hlt
push
arpl
sub
outsb
jae
sbb
fisubl
popf
loope
pushf
and
add
xlat
in
push
lds
adcb
test
sbb
pop
inc
dec
clc
xorb
xor
aas
xor
jae
lods
pop
jns
adc
insb
hlt
js
mov
cld
insl
mov
sub
mov
push
in
pusha
imul
pushf
xor
repz
add
in
fcmove
fstpl
es
fadds
adc
test
adc
pop
push
and
and
aas
push
mov
sti
div
mov
icebp
lods
adc
ljmp
and
mov
cmp
scas
cltd
int3
je
sub
test
pop
push
scas
sbb
enter
or
cmp
rolb
sbbl
cmp
xor
xor
xor
xor
mov
pop
stos
mov
out
je
sbb
loope
pushf
adc
lcall
imul
scas
lret
scas
inc
scas
test
repz
cmp
insb
ss
xchg
gs
xor
fiaddl
imul
fs
mov
scas
popa
scas
lahf
adc
xchg
in
pop
inc
sub
in
or
into
lcall
fs
dec
stc
or
sub
sub
sub
sub
insb
cmp
test
mov
sahf
imul
icebp
cmp
clc
insl
adc
sahf
imul
and
push
test
mov
sub
mov
cmpsl
adc
insb
sbb
arpl
cltd
imul
sarb
jnp
cmp
sub
repz
push
push
dec
lea
sbb
and
loop
cmp
or
or
mov
push
mov
mov
hlt
sbb
and
es
call
or
pop
repnz
dec
jge
cmpsl
pop
push
jmp
daa
cmp
cmp
cmp
je
pop
jbe
lds
sub
insb
aaa
mov
lods
out
sub
mov
sbb
pavgw
stc
sub
pusha
in
in
inc
mov
pushf
cwtl
dec
mov
and
repz
mov
jl
xchg
cltd
gs
and
bnd
lds
sub
std
jecxz
or
pop
add
fbstp
mov
daa
andb
arpl
repnz
mov
fsubrs
cltd
adc
pop
cmp
imul
or
imul
or
pop
imul
adc
jne
sub
pop
sub
mov
inc
inc
inc
outsl
mov
loop
aad
adc
xor
dec
push
xchg
pop
lds
jns
xchg
frstor
mov
js
mov
add
jge
mov
mov
enter
ret
xchg
sbb
hlt
call
lds
push
xor
repz
mull
mov
xchg
psubd
mov
stos
jns
insb
repnz
inc
icebp
jl
mov
arpl
sbb
popf
stos
pop
push
insb
adc
cmc
test
adc
mov
js
add
outsb
shrb
push
cmp
fsubs
popa
lock
pop
lcall
shr
and
mov
dec
pop
sahf
xchg
arpl
pop
adc
lcall
loope
rclb
mov
cmc
mov
cltd
sub
and
xchg
lea
push
js
ja,pt
call
push
mov
imul
mov
jnp
repnz
fisubrl
test
pop
out
push
in
mov
sub
sub
sbb
std
jbe
xchg
fidivs
adc
adc
adc
adc
or
push
cmp
cmp
adc
push
lea
lea
lea
mov
dec
gs
popa
push
or
mov
mov
add
repnz
pushf
in
pop
lock
sbb
sahf
cmc
les
adc
fs
sti
add
and
in
pop
or
inc
jecxz
ret
cwtl
sub
out
fstps
ja
push
in
scas
out
push
cmpb
pushf
cld
adc
and
mov
xchg
sub
daa
imul
cmp
cmp
mov
pop
or
lea
insb
aam
cld
scas
pop
scas
push
scas
adc
xchg
clc
adc
sbb
or
adc
sbb
loope
mov
sbb
push
push
adc
adc
fmuls
scas
or
nopl
or
or
pop
scas
push
int3
popf
push
ljmp
lcall
mov
xchg
rcll
rolb
or
cltd
repnz
icebp
mov
fimuls
add
shl
imul
mov
popf
imul
jecxz
lret
add
jge
mov
fstl
add
mov
shl
sub
test
cltd
outsl
mov
pop
test
mov
in
divps
dec
jg
add
sar
cmpsl
sahf
jecxz
ret
clc
js
push
sub
xor
adc
and
out
daa
jb
imul
enter
mov
mov
aad
jb
cmp
testb
mov
pop
dec
cli
mov
imul
and
mov
lret
lcall
insb
mov
jecxz
cld
mov
cli
xchg
push
out
fsubr
jle
insb
arpl
push
push
fstl
xor
sub
push
add
or
mov
inc
push
jl
push
test
movsb
cli
add
sub
sub
mov
xchg
andb
icebp
sub
fiadds
out
decb
fsubrs
mov
pop
mov
sarb
scas
mov
hlt
xor
dec
pop
test
lock
repz
sbb
cmp
sub
lock
test
mov
cld
arpl
out
leave
pop
xchg
push
mov
xchg
sbb
sbb
sub
jno
rcl
cmc
adcb
or
cmp
je
mov
fs
sub
fsubp
js
sub
push
icebp
test
pop
or
mov
push
or
xor
popf
mov
arpl
adc
in
loopne
xchg
cmp
add
addb
addb
jecxz
fs
push
adc
pop
icebp
lock
arpl
dec
adc
test
pop
fstl
out
push
repnz
pusha
cli
xchg
jne
es
test
add
ljmp
fnsave
xchg
mov
outsl
loop
mov
ror
out
inc
add
sub
sbb
mov
jo
out
pop
lcall
pop
pop
repz
sbb
push
push
jb
lods
clc
test
mov
mov
popf
push
pop
xchg
add
ficompl
push
imul
rolb
pop
add
cs
and
fs
pop
and
pop
pop
ja
in
jl
adc
testb
adc
jns
cmp
xchg
sahf
arpl
cmc
aad
push
push
jns
jno
out
imul
ljmp
sbb
test
sti
push
repnz
jge
movb
jecxz
pop
mov
scas
and
jecxz
jmp
movsb
inc
test
cmp
sub
and
hlt
cltd
adc
and
xor
jo
sbb
aad
es
pushf
push
fdivrs
push
test
xchg
repnz
lods
lahf
sbb
repz
push
inc
lret
or
icebp
mov
or
or
or
addl
repz
pop
mov
sbb
or
push
pop
popf
aam
mov
lock
or
in
jecxz
lods
mov
fbld
push
lahf
lahf
lods
jnp
dec
pop
pop
pusha
cmp
xor
out
adc
je
mov
ficomps
mov
and
test
not
push
fs
cld
push
pop
popf
pop
jo
jae
ja
or
hlt
popa
mov
adc
or
xor
bound
popa
fsubs
pop
and
inc
pop
add
test
add
ja
mov
cld
and
inc
and
lret
lahf
in
cmpsb
sahf
mov
mov
lret
imul
in
and
test
pop
and
clc
adc
shl
mov
dec
fisttps
andl
xchg
mov
sahf
lret
fnstsw
repnz
lock
addr16
lahf
hlt
push
sub
clc
mov
sbb
scas
ljmp
pop
mov
fs
xor
outsb
filds
pop
mov
movsb
lcall
dec
mov
or
es
adc
mov
stos
lahf
and
jae
je
jmp
outsb
and
mov
inc
pushf
roll
test
mov
fsubrp
ja
jmp
out
mov
fsubrl
sub
test
es
mov
pop
sbb
fisubs
or
pop
sbb
and
push
inc
shrb
mov
repz
repnz
out
pop
cs
repz
sbb
sbb
cmpsl
gs
pop
hlt
sbb
mov
popa
pop
cltd
jbe
clc
jmp
inc
pop
and
loop
test
sbbb
cld
adc
cmp
and
jnp
mov
push
dec
jle
add
popf
push
pop
jb
sbb
cmp
or
pop
xchg
rorl
mov
iret
xchg
and
scas
adc
xchg
jmp
mov
in
hlt
rcrb
mov
stos
mov
popf
sub
sbb
and
nop
inc
popl
cmpsl
iret
insb
pop
sbb
or
xchg
mov
pushf
jae
cld
js
popf
xchg
shl
icebp
outsl
lds
adc
es
and
cmp
xor
nop
lahf
test
sbb
out
dec
movsb
push
out
push
xchg
ljmp
cmc
lock
repz
repnz
fsubrs
lock
incb
test
pop
clc
js
push
fidivl
shr
mov
test
ds
stc
lock
add
jmp
adc
sti
push
lahf
dec
adc
xchg
and
xor
pushf
and
adc
jmp
sbb
insl
repz
pushf
jecxz
mov
cli
jecxz
cmp
pop
stos
paddw
push
test
pop
and
jmp
pop
fsubr
and
adc
or
sbb
add
imul
push
jmp
hlt
cmp
lock
pop
test
in
repz
xlat
sbb
repz
dec
mov
jb
inc
jmp
je,pt
mov
filds
sahf
test
sbb
xor
mov
bound
enter
psllq
mov
outsl
mov
sti
and
iret
or
fistps
sbb
pop
add
push
and
mov
mov
push
or
sbb
and
pop
jle
jo
pop
ficoms
or
je
fsubs
push
dec
test
ret
fidivl
idivb
or
setbe
sub
sub
insb
jle
jp
mov
xchg
push
fstp
mulb
push
andnps
adc
xchg
in
push
and
shl
fisubl
push
fsubs
shrd
mov
sub
lock
sub
pushf
ljmp
cmp
adc
test
hlt
cld
pop
dec
test
inc
jo
ljmp
imul
lret
mov
lahf
bound
sbb
sbb
lock
mov
lock
sbb
cmc
loope
dec
sbb
pop
stos
push
and
sbb
mov
push
push
mov
or
call
cld
shl
into
out
out
ret
movsb
mov
ljmp
lcall
mov
loope
popf
adc
adc
cli
or
sbb
cmp
add
push
add
dec
sbbl
loope
fidivrs
movsl
sbb
cmpsl
adc
leave
mov
outsl
mov
es
int
lret
add
xchg
mov
shlb
test
sbb
rcll
dec
adc
outsl
mulb
xchg
fstpl
js
or
mov
jl
insb
xor
or
sub
pop
xchg
jp
sub
lahf
out
xchg
pop
mov
fcoms
adc
sahf
add
mov
jecxz
sbb
out
mov
and
scas
sbb
arpl
dec
adcb
lock
adc
adc
push
mov
sub
repnz
ljmp
cli
xor
addr16
fldl
maskmovq
negl
imul
idivl
notb
add
mov
and
outsl
add
adcl
pop
loopne
jne
jl
or
es
or
mov
in
adc
cmpsl
movsb
and
or
fisubl
daa
movsb
ret
popf
outsl
test
ljmp
in
arpl
test
dec
fsubrl
fcoms
lock
pop
test
cmc
fists
mov
dec
inc
jp
mov
fisubl
or
inc
hlt
lahf
xor
fidivrs
imul
mov
cmp
cmpsb
and
sub
mov
push
es
mov
ljmp
pop
sub
sub
or
and
push
aas
jmp
add
je
sti
test
or
push
ficomps
rcrb
dec
jmp
sbb
std
pop
popa
int
cld
add
xor
mov
sub
pop
sub
insb
push
fisubs
push
dec
lock
repnz
lcall
das
pushf
insl
bound
daa
add
insb
add
incb
sub
dec
clc
push
and
arpl
orb
jo
adc
gs
orl
mov
adc
mov
dec
sub
add
sbb
xchg
jecxz
adc
and
or
idiv
lcall
cmp
or
pop
inc
add
cmp
pop
mov
mulb
aas
imul
arpl
dec
sub
fistps
arpl
aam
cmp
cltd
adc
xchg
cmp
mov
lock
adc
push
mov
dec
paddb
push
mov
lods
je
clc
daa
pushl
pop
xchg
add
push
cltd
cmp
test
setp
test
and
sbb
pop
stos
sub
shlb
sbb
jae
repnz
or
mov
ljmp
sahf
out
jge
pop
cmpsb
xchg
lret
adcb
add
icebp
ficoml
mov
cmpsl
repz
inc
mov
daa
jp
xchg
jbe
xacquire
pusha
fidivrl
testl
cli
push
bound
xchg
pop
push
push
xchg
ljmp
sub
xchg
frstor
and
pop
adc
sbb
and
sbb
push
mov
adc
jb
inc
push
or
push
lea
test
mov
rcrl
add
pop
loop
lcall
pop
popf
xchg
nop
or
jbe
inc
inc
cmpb
and
stos
stc
inc
rcr
pop
adc
jns
cld
out
jge
int
ficoms
imul
lds
lea
xor
jg
fbld
jge
sub
pop
stc
xchg
jecxz
add
and
out
js
jmp
sbb
lock
movsb
mov
push
rorl
lret
dec
pop
loope
out
scas
js
int3
cmc
pushf
pop
sbb
adc
dec
repz
icebp
fisttps
repz
icebp
ficomps
push
aaa
jle
inc
cld
outsb
and
mov
nop
jns
fldl
insl
mov
popf
pop
out
repnz
pop
xchg
lcall
push
lahf
sbb
in
imul
and
adc
add
push
divl
xchg
pop
push
mov
xlat
sub
scas
call
loope
and
push
popf
xor
mov
sti
cli
adc
or
mov
sbb
arpl
xchg
test
pop
into
fisubrs
jo
in
inc
and
repz
aad
xchg
xchg
pop
push
xchg
stos
addr16
or
test
ficompl
push
insb
push
andl
or
sbb
sub
and
repz
rorb
icebp
push
fwait
arpl
mov
and
js
pop
sbb
or
xchg
sarb
and
xchg
loope
in
mov
rcr
mov
add
mov
or
loope
sti
pop
pop
push
fsubs
jmp
xchg
gs
inc
int3
dec
sub
fnstcw
movsb
xchg
mov
adc
sbb
or
or
test
adc
divb
in
sub
sub
and
xor
int3
js
sbb
lea
notl
js
fs
pop
mov
mov
push
out
sbb
and
fsub
les
or
mov
packssdw
lahf
movsl
arpl
sbb
ja
icebp
insl
jecxz
fdivr
push
mov
mov
mov
es
adc
test
in
mov
fmulp
out
fidivs
outsb
adc
xlat
sbb
test
stc
setae
cmpb
and
popf
mov
lret
cmpsl
dec
and
lock
pop
adc
xor
mov
jb
fcomps
call
adc
xchg
inc
jmp
ficomps
cwtl
loope
mov
add
sub
rolb
loop
sbb
or
ds
xchg
push
pop
pop
pop
stc
mov
adc
imul
fwait
cmp
orb
cmp
lock
jge
es
xchg
dec
testl
cmc
repz
outsl
clc
les
sub
push
movsb
pop
iret
fldl
mov
xor
mov
lods
jb
icebp
lcall
push
and
movsl
mov
inc
sub
lock
pop
movsl
adc
negl
insl
xchg
shr
daa
xchg
jbe
mov
inc
test
arpl
nop
scas
int3
fisubs
addr16
icebp
cmpsl
add
inc
adc
pop
push
add
inc
sub
add
fs
arpl
fsubs
push
test
stc
enter
popf
jge
adc
test
adc
movsb
sarl
or
ficompl
add
ljmp
and
dec
mov
sbb
push
pushf
psubd
xchg
cltd
mov
in
xchg
nop
xlat
in
xlat
pop
js
push
jecxz
push
addl
adc
jb
add
fidivrs
pop
mov
and
sbb
mov
pop
fsubs
push
xor
cmpsl
pushf
inc
subb
and
lds
shl
loope
sbb
unpcklps
or
lock
nop
jecxz
shlb
push
mov
or
aas
jmp
cmc
clc
add
pop
andl
adc
int
jecxz
repz
clc
push
dec
pop
and
cwtl
insb
and
popf
cld
pop
xlat
add
js
loope
xchg
dec
or
jmp
sahf
inc
cltd
div
mov
and
push
mov
xchg
out
insl
sbb
imul
xchg
sub
or
and
add
fisubrs
add
icebp
sahf
push
fcoml
add
dec
insl
or
xchg
insl
cltd
xchg
dec
jae
mov
inc
nop
or
js
push
in
jne
add
pop
mov
adc
sbb
lcall
pop
stos
xchg
sahf
sub
repnz
jle
mulb
js
cmpsl
xlat
dec
in
xor
shrb
movsb
push
enter
xor
or
pop
sbb
in
jns
fdivrs
in
pop
lods
cmp
les
sub
ret
loope
mov
call
fdiv
icebp
inc
or
stc
sbb
lret
test
std
test
xchg
sub
repnz
mov
mov
ljmp
and
jns
outsl
imul
loopne
popf
mov
inc
aas
add
cli
pop
je
mov
test
push
cs
cmpsl
es
in
loop
daa
fisttps
mov
or
lret
push
ret
daa
fsubl
js
test
or
pop
xlat
loop
and
cwtl
jg
cmpsl
xchg
mov
rcrb
cmp
sbb
xchg
subl
dec
stc
cmp
cmp
fnstenv
sub
orl
and
lahf
xor
adc
or
fmuls
and
jge
mov
cmc
bnd
adc
jecxz
imul
jle
ret
and
test
mov
cli
add
fwait
in
in
test
xchg
sub
and
mov
loope
ljmp
lock
cmp
sti
sahf
arpl
pushf
cld
sarb
scas
ret
scas
add
mov
scas
cli
push
jne
daa
sahf
es
and
popa
mov
insb
mov
shlb
frstor
cmpsl
loope
sub
mov
pop
arpl
lock
mov
int
insl
cmpsl
and
push
push
test
stos
cmp
cmp
adc
inc
repz
scas
cltd
outsb
and
out
cwtl
fcmove
add
repz
xor
arpl
inc
test
add
rclb
icebp
pop
in
ljmp
push
lock
test
pop
mov
jecxz
je
push
mov
arpl
jne
mov
pop
jecxz
je
dec
negl
in
test
imul
test
mov
cmp
out
sub
loope
pop
or
and
mov
ljmp
addb
cld
out
cli
lret
scas
shll
dec
push
adc
or
je
xor
mov
mov
push
rcr
lods
adc
sub
sub
sub
daa
push
lea
pop
sbb
fimuls
jae
mov
in
ficomps
arpl
sbb
jge
js
es
lock
repnz
icebp
inc
cmp
fiadds
adc
test
in
addr16
stos
in
test
std
lea
lsl
cmp
ljmp
test
mov
inc
pop
repz
dec
sbb
lds
and
negl
mov
rcll
and
jecxz
adc
movsb
lcall
test
jg
lds
sbb
shlb
mov
and
sub
jne
adc
sub
insb
stos
sbb
pop
test
testb
pop
cwtl
jecxz
rorb
xchg
dec
ljmp
test
rcrb
addr16
pop
repz
push
or
std
add
pop
jg
push
cltd
clc
mov
out
sub
mov
add
cmpsl
inc
imul
inc
ljmp
or
mov
test
lret
testl
xlat
jle
inc
mov
and
scas
icebp
adc
loope
sahf
dec
mov
jle
je
adc
fnstcw
inc
lea
mov
xchg
es
add
add
mov
mov
call
mov
jecxz
adc
adc
pop
dec
ljmp
mov
mov
lock
xchg
pusha
lock
icebp
push
ret
lods
or
hlt
sbb
adc
pop
sub
push
add
pushf
jg
cli
ss
popf
cli
xchg
or
out
icebp
loope
lods
cwtl
xchg
rorb
test
imul
fcoms
dec
dec
test
jecxz
cltd
test
in
push
sgdtl
mov
pop
rcrl
fwait
fs
xchg
popa
stc
nop
xchg
dec
xchg
cmp
mov
jge
and
sbb
push
rolb
dec
inc
dec
inc
inc
ficoml
out
push
gs
cmpsb
repnz
sahf
ficoml
cli
lods
inc
test
mov
push
push
push
ret
pop
adc
or
clc
push
jecxz
inc
ljmp
or
les
imul
pop
test
dec
xchg
test
xchg
fimuls
js
leave
jl
test
lret
outsl
pop
sub
push
mov
sbb
add
or
scas
add
xchg
sti
in
jp
xchg
fs
xchg
pop
repnz
fdivr
cwtl
popf
push
mov
emms
shll
ljmp
test
lock
mov
jbe
insb
test
sub
in
inc
mov
std
cmp
mov
arpl
scas
xchg
daa
lods
insb
rorb
shlb
mov
adc
addr16
sbb
movsl
insl
popf
cmpsl
pop
repz
and
hlt
or
test
test
cmpsl
je
mov
jo
sbb
inc
imul
sub
push
mov
pop
test
xchg
mov
or
pop
shr
lcall
sbbl
pop
stc
mov
iret
in
and
sahf
aaa
pop
sbb
std
adc
fcmovnb
insl
icebp
xor
add
inc
mov
mov
add
xchg
test
aaa
adc
jmp
mov
in
mov
adc
mov
lcall
add
mov
test
sahf
add
push
cmp
jo
mov
popa
fstp
jo
push
adc
and
cmp
push
cmp
xchg
orb
insb
js
ja
mov
xchg
lock
out
imul
movsl
fninit
subl
push
js
rcrl
lea
inc
ljmp
sub
add
xchg
xchg
jno
les
rolb
test
cmp
pop
sbb
dec
jb
insb
push
aaa
lret
or
insl
sub
insb
inc
push
adc
and
jns
insb
lock
inc
sarl
mov
cmp
cmp
je
push
mov
clc
in
push
je
test
out
cmp
sbb
inc
cmpsl
andb
mov
loope
jmp
insl
add
sbb
push
dec
add
xor
jo
out
jg
pop
add
out
ljmp
dec
inc
aas
jl
out
add
xchg
test
icebp
pop
idivl
js
repnz
stos
test
mov
stos
mov
popa
mov
popa
imul
fisttpl
jae
bound
sub
ljmp
pop
cmpsl
and
lret
hlt
xchg
and
popf
lret
jmp
stos
adc
or
gs
adc
xchg
lret
or
loopne
and
pushf
xchg
stos
cld
lock
sbb
jle
mov
xchg
pop
mov
adc
cmpsb
push
add
test
lea
imul
arpl
test
fcmovu
lock
fnop
movsl
and
mov
and
in
pop
and
add
pop
pop
mov
or
push
sub
push
cld
lahf
das
sahf
or
jl
lcall
pop
out
cltd
outsb
hlt
lock
std
pop
in
or
mov
jnp
sub
push
enter
andb
jge
in
addr16
add
push
ja
mov
xor
fs
jge
test
fsubs
mov
movq
std
mov
scas
push
ja
ffreep
test
add
or
jo
pop
xorb
in
jo
sarb
sbb
jns
mov
mov
outsb
test
mov
aad
stos
test
cmp
arpl
sahf
es
or
mov
or
popf
mov
jp
and
lret
jns
and
lret
ja
add
fs
out
sbb
sarb
adc
lret
outsb
push
or
xor
roll
sub
push
cmp
in
aad
insb
and
adc
add
xchg
mov
sbb
xchg
movsb
push
lock
cmp
insb
cmp
movsb
pop
xchg
mov
dec
mov
add
cmpsb
out
sub
imul
jecxz
xor
jecxz
in
xchg
mov
out
push
rcrl
lock
andl
xchg
movsl
test
pop
jb
sub
add
add
xchg
xchg
lret
daa
cmp
mov
pop
int3
mov
mov
or
fists
cltd
xchg
shrb
mov
idivb
xchg
push
mov
test
in
test
mov
js
xchg
xchg
or
js
push
lret
out
mov
cmc
in
add
frstor
cltd
jecxz
inc
lock
mov
or
cld
inc
adc
movd
pop
stos
hlt
cwtl
push
mov
and
sbb
add
jecxz
and
mov
xchg
cmp
sti
es
cmpsl
inc
and
test
mov
jge
xchg
mov
insl
lea
mov
or
or
insl
xchg
sbb
or
sbb
cwtl
xchg
lcall
into
or
insb
add
std
lahf
addr16
mov
xchg
mov
ja
mov
sahf
mov
mov
stos
add
lods
adc
cmp
sub
outsb
out
out
jmp
mov
mov
pop
fisubs
fiaddl
pushf
add
pop
push
dec
mov
cmpsl
in
movsb
sub
sub
mov
in
cltd
repz
cmp
je
lock
mov
sub
cltd
dec
xchg
or
cltd
enter
dec
dec
test
test
adc
push
and
icebp
fs
icebp
sub
fmull
xlat
jg
add
dec
sub
mov
lds
fninit
adc
pmaxub
loopne
xchg
gs
ljmp
in
jecxz
lock
adc
adcl
inc
sbb
xchg
lcall
sbb
lahf
js
jmp
pop
scas
inc
xor
pop
sbb
test
lods
mov
mov
sub
mov
dec
repz
add
aas
or
add
loope
imul
mov
hlt
sbb
jno
dec
dec
out
dec
insb
dec
lock
cld
inc
in
inc
test
inc
ljmp
pop
pop
cmp
test
movsb
sahf
mov
or
sub
orb
adc
sbb
adc
loope
enter
sarb
dec
lea
mov
xchg
adc
notb
adc
hlt
add
jecxz
je
enter
mov
mulb
jle
outsl
jae
pusha
push
sub
pop
mov
js
rolb
inc
js
out
and
mov
jnp
cld
sbb
push
ficompl
cmpsl
je
xchg
add
pop
mov
or
ss
mov
sub
push
xor
xor
scas
in
and
cmp
arpl
shlb
sbb
inc
insb
mov
out
repnz
movsb
stos
mull
shll
or
fmul
xor
add
fadds
mov
cld
int3
pop
fstps
jle
js
push
pop
in
push
adc
out
pop
jp
and
mov
xchg
popf
mov
ss
mov
sub
fldcw
iret
clc
ja
dec
mov
shl
sbb
in
icebp
jge
movsb
sub
cmpsb
daa
repnz
icebp
and
mov
inc
pop
out
sbb
enter
scas
cmp
cmp
test
jecxz
push
cmc
jecxz
fsubrs
sbb
stos
daa
stc
mov
test
cmc
sarb
std
sti
and
fs
insl
sbb
mov
lcall
mov
cli
xchg
jns
jl
in
lods
push
add
xchg
jecxz
sbb
xchg
mov
jg
insb
pop
mov
stc
xchg
adc
xorb
rdtsc
cltd
cs
adc
cltd
fisttps
mov
and
xchg
and
xchg
sub
and
jge
or
inc
mov
aam
imul
push
xor
cmpsl
cmp
lock
mov
arpl
or
mov
xchg
add
jp
jo
or
repz
ret
sbb
xchg
jle
pop
mulb
pop
sub
in
xchg
jbe
adc
movsl
mov
xor
xchg
cmpsl
xchg
arpl
adcb
mov
arpl
sbb
out
mov
icebp
mov
or
mov
dec
sub
mov
jl
mov
mov
imull
pop
adc
stc
jmp
inc
sbb
js
or
cmpsl
mov
fs
scas
in
insl
jl
mov
or
pop
pop
js
ror
dec
sbb
inc
ds
mov
sbb
je
ds
inc
pop
rorb
or
and
mov
loopne
cmpsl
rolb
xchg
inc
mov
ljmp
movsl
xchg
std
jecxz
jmp
mov
fsubp
arpl
mov
pop
ljmp
xchg
in
mov
addr16
xchg
jl
push
mov
pushf
fidivs
lret
lahf
popa
ljmp
pop
mov
je
testl
out
mov
es
loopne
shlb
popa
cmp
outsb
cmpsl
scas
rorb
inc
jl
or
inc
jge
addl
out
sbb
enter
xchg
and
mov
js
fdivr
sbb
into
cltd
imul
and
fs
sbb
lods
fwait
pop
outsb
or
mov
mov
outsl
xchg
mov
xchg
and
enter
push
jecxz
lock
or
ficomps
sub
test
loop
push
mov
jle
aas
imul
lret
mov
xchg
movsl
jl
push
mov
in
addr16
lock
loopne
or
push
and
andb
xchg
pop
push
inc
ljmp
mov
lea
test
sub
fiaddl
xchg
fidivl
jecxz
jb
in
fs
xchg
ja
sbb
inc
and
xchg
movsl
stc
movsl
mov
ljmp
lret
mov
in
fisubl
xchg
fs
insb
loop
jno
push
or
lock
data16
adc
lret
subl
jae
lods
push
pop
int3
push
jae
mov
add
adc
addr16
jl
sbb
notl
mov
test
movb
add
test
inc
push
cmp
mov
pop
ljmp
sbb
jle
lcall
and
cmp
push
bound
lock
cmpsl
pop
lock
icebp
lret
inc
in
unpckhps
or
pop
rorb
clc
mov
lret
lea
add
cmp
inc
adc
out
adc
jl
icebp
les
push
pushf
xchg
rolb
cltd
test
jmp
aam
imul
shrb
lods
mov
sahf
scas
testl
or
movsb
sahf
test
fimull
push
rclb
out
jae
test
movsb
add
movsb
adc
jge
mov
adc
repnz
movsb
dec
hlt
xchg
movb
mov
scas
mov
out
clc
filds
je
add
inc
jmp
jp
jbe
inc
sub
out
and
or
add
roll
xor
incb
or
adc
test
lock
add
addr16
ljmp
adc
ffree
mov
mov
or
cltd
fildl
call
jl
xchg
mov
out
mov
popa
fldcw
enter
ret
vmread
imul
loop
dec
cld
sub
cmc
call
lock
pop
sbb
ret
add
cmp
cmp
mov
or
clc
inc
rorl
fidivl
xor
push
sbb
call
xchg
lea
lea
adc
mov
mov
mov
in
out
sbb
pop
clc
pop
mul
not
clc
hlt
scas
repz
popf
mov
and
daa
pop
orb
and
loopne
push
out
daa
lea
dec
jg
sub
insb
pop
xchg
xchg
gs
std
mov
mov
push
sahf
mov
hlt
sti
add
mov
push
adc
mov
add
sbb
push
out
clc
in
imul
imul
cmc
mov
repnz
jp
xchg
icebp
sbb
adc
xchg
pop
push
pop
adc
adc
imul
insb
scas
jge
xchg
add
add
imul
xor
mov
test
stc
inc
clc
inc
testl
outsl
dec
ljmp
dec
cld
jecxz
sarb
ljmp
sbb
add
add
jae
dec
or
or
in
and
and
jl
std
imul
imul
cmc
lds
repz
std
adc
sub
hlt
arpl
mov
pop
xchg
mov
stos
adcl
mov
stos
adc
outsl
xorb
out
shr
daa
cmc
and
hlt
stos
dec
mov
je
lock
mov
mov
popf
fdivrl
and
negl
mov
insl
xlat
insb
lods
lret
icebp
rolb
cld
and
addl
insl
lret
or
les
sub
insb
lds
xchg
xor
repz
push
or
test
out
xchg
pop
mov
scas
push
xchg
push
push
shlb
push
scas
push
scas
push
bound
dec
cmp
add
inc
dec
add
dec
inc
hlt
mov
inc
icebp
hlt
pop
inc
jecxz
mov
popf
push
cmp
xchg
pop
cmp
xor
aaa
push
pop
fs
mov
xor
cs
or
add
aas
fdivrs
mov
lods
gs
pusha
scas
arpl
pop
cmp
push
pop
in
add
popa
pop
fsubs
push
scas
push
mov
push
or
popf
pop
push
sbbb
cli
mov
mov
cmp
cmp
mov
xchg
daa
cmp
sbb
insb
adc
gs
test
icebp
add
repz
test
or
cld
sbb
std
or
or
add
in
sub
movsb
adc
sbb
mov
jl
sahf
sbb
loope
rcrb
popf
je
in
lea
and
test
sti
std
std
icebp
dec
out
mov
push
xchg
adc
push
lcall
icebp
add
es
dec
stos
sbb
adc
icebp
loope
mov
lcall
repnz
sti
mov
movb
filds
mov
adc
mov
dec
jl
add
shl
je
sub
xchg
push
or
adc
sbb
jb
mov
and
icebp
xchg
pop
idiv
cmpsb
js
daa
xchg
fiaddl
adc
std
mov
jp
aaa
in
push
push
or
add
mov
pop
out
pop
in
ljmp
xchg
js
push
pop
es
add
cmc
scas
in
and
test
in
add
mov
cmc
mov
sahf
push
popa
adc
xchg
or
add
arpl
shl
add
inc
repnz
testb
cmp
adc
out
sbb
or
insb
std
or
gs
sarl
sbb
pop
repz
inc
repz
cltd
sub
cmpsl
adc
fimull
out
test
mov
pusha
or
loopne
inc
mov
mov
pusha
or
add
xchg
and
push
stc
and
les
add
and
je
sbb
mov
xor
or
icebp
negb
jecxz
movsb
jg
cwtl
out
scas
lret
cwtl
insl
mov
shll
decl
cltd
cmp
cli
sub
sub
sub
insb
idivb
xchg
cmp
icebp
sub
insb
out
jnp
hlt
push
mov
or
add
in
and
mov
or
pop
lods
inc
test
hlt
repz
sbb
add
push
or
adc
push
packsswb
mov
outsb
imul
hlt
pop
repnz
pop
add
pop
xor
xor
call
push
sub
sub
lock
and
movsl
inc
and
sbb
add
in
pop
jle
push
adc
adc
mov
orl
dec
subb
xchg
lock
mov
cwtl
arpl
mov
sub
sub
es
testb
lea
pop
and
sbb
pop
mov
sbb
cmp
cmp
add
pop
add
popa
adc
dec
imul
insb
mov
movsb
jg
xchg
jo
adc
test
hlt
or
in
and
push
pop
dec
cmc
sbb
mov
sbb
push
adc
pop
adc
cli
btr
inc
into
sub
jge
in
add
sbb
outsb
mov
add
outsb
iret
decl
js
push
sbb
lds
pop
adc
lahf
lret
jne
repz
in
adc
and
lret
sbb
or
adc
hlt
sbbb
pop
ja
iret
mov
add
adc
and
andb
div
mov
and
xor
and
je
sahf
cli
jae
mov
mov
fsubr
and
pop
inc
and
sub
out
insb
jno
arpl
xor
cld
std
addb
and
or
or
push
lcall
fsubs
adc
push
mov
fs
lret
sti
lret
adc
xchg
fisttps
adc
adc
adc
inc
xchg
fwait
dec
stc
arpl
sbb
popf
push
pop
and
incb
mov
adc
add
xchg
jp
cltd
pop
mov
or
movsb
fprem1
insl
mov
add
sbbb
negb
test
cli
and
repnz
rorb
and
and
push
add
xchg
cld
aas
fsubs
popa
lret
nop
imul
cmc
imul
inc
fisttpl
xchg
and
push
add
sarl
and
lea
pop
push
or
push
mov
xchg
add
jl
sub
and
sbb
test
insb
push
jp
dec
jecxz
add
test
shrb
jo
xchg
js
push
or
add
xchg
in
insb
sub
std
pop
and
or
pop
popf
xchg
idivb
push
shrb
xchg
fcos
pop
pop
cmc
loope
sti
sub
or
mov
add
hlt
stos
or
xor
sub
fisttps
insl
sbb
xchg
pop
ljmp
cmp
lea
std
xchg
lcall
fs
fimull
and
mov
mov
sbb
add
adc
bound
je
cli
fisubrl
scas
sub
jae
repnz
pop
jae
cmp
cmp
mov
sub
pop
sti
test
add
repz
and
or
testl
push
and
sbb
or
or
mov
push
icebp
push
and
and
adc
in
aaa
jecxz
incl
sub
and
add
adc
outsb
add
or
out
mov
mov
pop
clc
pop
xchg
or
icebp
clc
xor
out
insb
sub
push
test
or
add
push
divl
mov
pop
or
adc
js
add
adc
adc
pop
out
mov
mov
lock
add
daa
adc
jmp
adc
mov
decb
hlt
jle
jp
mov
lds
sbb
movsl
arpl
jmp
out
lock
push
adc
cld
push
cltd
addr16
mov
pop
sbb
mov
mov
and
movd
insb
inc
lock
daa
mov
adc
or
and
add
jecxz
and
cmpsl
loope
sbb
or
sbb
out
mov
sbb
adc
cld
pop
sbb
test
pop
mov
or
xchg
divb
cwtl
or
test
jge
sbb
pmaxsw
cli
mov
popa
daa
jmp
sbb
add
lock
ljmp
xchg
jecxz
lret
test
mov
out
xchg
sbb
jo
adc
je
rolb
repnz
xchg
xchg
jns
and
loope
or
in
testb
pop
and
cmpsl
mov
stos
adc
stos
or
outsb
cmpsl
decl
xchg
sub
and
jle
adc
add
gs
xchg
mov
pop
ljmp
repz
jmp
out
std
testb
push
popl
push
js
psllw
sbb
repnz
ljmp
ljmp
insb
adc
shlb
and
jg
pxor
ljmp
cli
jecxz
rclb
push
add
jecxz
sub
push
add
movsb
stc
dec
add
insb
sub
cmpb
and
std
add
sub
fbld
push
test
or
notl
jo
in
mov
and
and
or
in
push
or
sti
test
addr16
pop
jne
ret
jns
je
adc
in
cli
test
arpl
dec
cwtl
sbb
sbb
lcall
gs
inc
sub
and
movsb
pop
add
movsb
add
es
jae
and
jb
jge
gs
inc
add
cli
imul
hlt
jge
pop
cli
jmp
pop
and
jno
jge
cmpsl
add
idivl
icebp
add
jb
out
in
sub
stc
sub
xor
ret
movq
enter
sub
push
cltd
pop
sahf
push
mov
and
mov
out
repz
sti
in
cmc
push
outsb
adc
daa
lea
rclb
clc
push
outsb
xlat
jo
dec
sub
loope
pop
outsl
cltd
push
cli
jno
std
std
or
mov
and
cmpsl
es
sub
cltd
mov
stos
fs
pushf
sbb
add
adc
push
fcoms
stc
sahf
sub
and
stc
sub
xchg
jecxz
mov
adc
out
jecxz
xor
lea
insl
xchg
pop
ret
cwtl
or
js
push
add
sbb
mov
cmp
lods
jbe
or
in
add
std
addr16
js
add
movsb
addr16
ficompl
clc
sarb
outsb
xor
lcall
ficoml
jecxz
lret
lock
add
cld
lret
lock
lret
sahf
and
lcall
outsl
or
incb
jmp
and
sbb
pop
fistpll
push
pop
mov
lock
stc
clc
xchg
pop
hlt
loope
sti
jo
lock
out
insb
std
and
inc
push
pop
clc
or
std
std
add
sbbl
sbb
or
insb
cmc
sbb
mov
repz
ret
mov
and
xchg
sub
pop
sbb
or
inc
lds
add
outsl
or
add
out
add
add
add
push
scas
ret
jne
int
or
add
add
jle
incl
pop
jns
cmp
mov
arpl
adc
xchg
adc
sbb
mov
iret
add
scas
cli
dec
add
out
add
mov
xchg
xchg
lret
xor
or
fs
insb
lock
in
xchg
jbe
cs
cld
roll
cmpsb
out
stc
out
push
scas
gs
inc
std
jg
xchg
lret
xchg
repnz
dec
push
push
ss
fildl
sbb
test
xor
or
mov
loope
lea
sbb
inc
push
lret
sbb
cwtl
xchg
into
xchg
sub
lahf
inc
and
jle
cltd
mov
pushf
imull
sub
and
or
jl
mov
testb
jle
lcall
lods
xchg
push
adc
sub
sub
mov
outsb
add
leave
insb
and
add
pop
out
mov
sbb
add
cli
cmp
or
and
push
cli
push
les
add
cli
and
in
mov
cmpsb
daa
pop
test
adc
or
out
es
std
push
sbb
jae
into
push
xchg
sbb
jae
arpl
in
add
out
aaa
test
sbb
pop
stc
repz
jl
popa
repnz
adc
pop
cmpsl
jp
or
mov
stc
test
dec
mov
adc
cld
mov
pop
add
cld
test
sub
xor
std
stos
rcrb
xchg
adc
pop
movsb
cli
sbb
xchg
sbb
jl
jecxz
add
pop
push
mov
sbb
add
movsb
repnz
sbb
add
pop
ja
test
std
cmpsl
test
push
aaa
shll
adc
cli
cmp
mov
or
cli
ja
in
or
dec
repnz
jnp
add
fisttpl
mov
xchg
sub
cwtl
and
sbb
cmpb
addl
xchg
cli
sbb
sub
jecxz
jp
adc
jle
movl
hlt
mov
mov
adc
movsb
std
or
testb
sub
mov
add
stos
jecxz
jnp
stc
or
repnz
sti
add
out
adc
or
std
xchg
lret
xchg
sbb
andl
jp
and
adc
call
sub
sbb
pop
insb
add
jne
sub
lods
stc
pop
pop
aas
movsb
adc
adc
clc
sub
mov
and
adc
push
aad
adc
lcall
cmc
cmp
aam
fs
xchg
fcoms
push
mov
add
xchg
pop
rorb
or
sbb
outsb
arpl
dec
out
btr
daa
std
rorb
repz
out
lods
push
fcoml
or
or
je
cld
fpatan
push
loope
fdiv
sub
jne
adc
popf
adc
js
or
and
cmpsl
add
movsb
and
sbb
inc
add
adc
cmc
or
repnz
in
inc
or
adc
lock
add
cmpsb
add
cmpsl
push
push
cmc
mov
sub
add
std
add
push
push
test
add
icebp
or
adc
out
adc
and
cwtl
and
sbb
adc
sahf
imul
nop
stc
je
cmc
adc
xchg
icebp
or
and
mov
mov
arpl
imul
rclb
popa
mov
lea
cltd
jmp
push
sub
xor
adc
or
mul
pop
mov
jecxz
je
es
and
js
pop
lea
sbb
fwait
ret
negb
and
and
or
stc
mov
hlt
sbb
sub
aad
repz
push
lret
mov
xchg
sti
pop
pop
icebp
cli
out
test
js
and
repz
repnz
dec
jbe
repz
push
add
xchg
std
ljmp
push
es
pop
jle
aad
mul
or
mov
add
lock
in
sbb
sub
add
pop
je
ret
notl
xor
push
insb
or
lock
aad
ja
out
cs
and
in
cmp
push
and
pop
std
sbb
cltd
or
jbe
and
std
pop
jne
mov
pop
jne
sub
inc
es
sub
je
rcll
loope
lret
jbe
ds
jg
and
jns
inc
or
jns
movsb
repz
out
adc
fdivs
adc
push
xchg
inc
sbb
jns
xchg
js
pop
mov
cld
fs
sub
adcb
push
push
push
inc
sti
adc
notb
aad
cld
jecxz
mov
xor
scas
sbb
cli
sbb
ljmp
call
adc
adc
mov
sub
pop
clc
les
add
push
or
add
inc
mov
sub
jbe
mov
adc
xchg
adc
in
or
xchg
mov
mov
cmp
mov
or
rcrb
test
imull
sbb
adc
add
jp
std
add
daa
inc
lea
sbb
outsb
jecxz
mov
loope
sub
add
mov
imull
add
je
out
int3
or
and
push
adc
push
pop
add
out
stos
pop
icebp
push
stc
and
xchg
push
pop
jp
sbb
dec
or
add
stc
or
cmc
in
xrelease
fmuls
adc
or
out
ljmp
popf
add
adc
pop
sbb
sbb
aas
mov
popa
je
aad
jne
and
push
insb
add
mov
roll
jle
lcall
sbb
jns
or
stc
mov
test
ficompl
fstps
xchg
or
jno
adc
fs
outsl
mov
repnz
shll
sub
pushf
jecxz
sbb
or
repz
xchg
pop
mov
push
cmp
xchg
les
sbb
push
popa
add
mov
lock
je
and
cwtl
aad
cmc
mov
mov
aaa
adc
ret
xchg
and
sbb
adc
or
add
cli
cld
inc
repz
out
mov
push
sbb
fwait
or
in
add
incb
jno
add
and
movsb
pop
js
int3
cmpsb
movsb
push
lock
cli
in
idivl
stc
and
cli
popa
adc
inc
adc
sbb
pop
adc
sbb
and
pop
inc
push
dec
mov
xchg
xchg
dec
jo
insb
std
rcll
adc
inc
sahf
mov
stos
mov
push
adc
lock
and
add
pushl
add
hlt
sbb
cltd
sbb
adc
cwtl
incl
repz
hlt
adc
sbb
sub
sbb
mov
adc
or
std
daa
pop
in
mov
pop
adc
movaps
je
add
xchg
xchg
std
cmpsl
jne
pop
lcall
mov
sbb
cmpsl
xchg
inc
div
sub
popl
add
add
xchg
stc
in
testb
lret
xchg
mov
inc
dec
stos
lods
addr16
jmp
adc
repnz
lock
xchg
ficoml
sbb
mov
add
cli
hlt
jl
in
jnp
pop
cmp
xchg
cmpsl
mov
jns
stc
sub
hlt
inc
in
or
jne
fildl
stc
jns
xchg
icebp
insb
out
rorl
roll
add
addr16
push
je
lcall
adc
cmp
mov
stc
adc
xchg
idivb
sub
xchg
cltd
adc
sbb
inc
sahf
push
daa
inc
and
adc
add
pop
add
cli
add
negb
sbb
mov
repnz
sbb
mov
add
jl
jo
pop
or
sbb
fisttpll
cmpsl
push
inc
xchg
mov
lcall
sbb
sub
mov
mov
sti
mov
je
popf
outsl
pop
loope
in
or
popf
lret
sahf
mov
push
sbb
and
xchg
mov
pusha
sbb
add
fldl
or
popl
sbb
xchg
std
xchg
lret
pop
sbb
xor
adc
pop
fwait
push
incl
repnz
and
sbb
cltd
adc
testl
push
lock
sub
jbe
jge
fs
xchg
test
rclb
jg
adc
std
aas
pop
pop
icebp
or
inc
out
inc
and
sbb
add
adc
mov
aad
stc
mov
mov
test
mov
pop
lahf
nop
cli
and
stos
adc
in
mov
xchg
mov
and
in
stc
scas
testl
lcall
repnz
add
jmp
xor
sti
popa
clc
es
sbb
sbb
clc
hlt
imul
lods
mov
test
jae
jns
vpaddusw
fsts
push
out
subb
pop
add
add
sub
ja
xchg
fs
add
in
pop
decl
cli
repnz
mov
add
inc
and
cli
jl
mov
pop
les
es
pusha
lcall
sbb
mov
xchg
icebp
in
mov
mov
test
cmpsl
ja
or
daa
lock
mov
and
or
test
scas
add
xacquire
jns
je
xchg
add
sbb
insb
out
xor
in
sub
cmp
mov
pop
into
pop
inc
daa
pop
pop
sbb
push
or
hlt
lock
sldt
pop
adc
cli
les
arpl
fidivl
push
mov
or
std
sti
out
ficompl
and
push
xor
insb
std
ja
mov
into
adc
jge
aad
xchg
jecxz
push
test
lock
daa
jle
aad
pop
popa
adc
es
jo
jecxz
add
xchg
add
out
xchg
movsl
sbb
daa
mov
add
pop
sbb
cli
pop
out
mov
mov
movq
movsb
add
and
sub
lret
stos
icebp
pop
movsb
outsl
or
or
mov
lahf
stos
mov
sub
sbb
or
add
lcall
fs
icebp
and
icebp
or
add
mov
lcall
call
in
cmp
and
into
test
sti
outsl
jge
adc
filds
loop
loop
pop
popa
negl
sub
push
adc
xchg
in
movsb
mov
jo
mov
jl
cmc
outsb
gs
lcall
ficoml
out
or
cmc
je
icebp
mov
mov
mov
mov
out
dec
jo
shll
out
jecxz
std
js
and
mov
adc
push
jno
jne
test
sbb
outsb
lds
into
xchg
loope
adc
jne
loope
cltd
aas
xchg
jne
push
into
sbb
xchg
out
inc
jo
insl
icebp
xchg
insl
jb
scas
jae
jae
cmp
push
scas
ja
jae
aas
dec
pop
into
xchg
loope
sbb
pop
nopl
test
adc
mov
cmp
pop
adc
pop
inc
mov
xchg
cltd
mov
clc
sbb
inc
cwtl
add
loope
fwait
aas
dec
sbb
lahf
jne
cmp
push
clc
mov
test
test
in
xchg
out
cltd
mov
push
mov
or
lods
push
xchg
mov
xchg
mov
xchg
sbb
mov
push
mov
negl
cli
jo
push
mov
mov
xchg
sbb
stc
push
aas
cwtl
push
cmp
push
cmp
push
mov
pop
push
out
cmp
mov
clc
or
ja
jns
leave
jp
or
jle
or
sbb
jle
xchg
jo
xchg
cld
add
sub
jle
or
rclb
jecxz
mov
in
adc
push
mov
ljmp
inc
movsb
es
and
aas
cmpsb
jp
cli
xor
sti
aas
pushf
cld
cmc
std
adc
jne
pop
out
cmc
cmp
repz
jne
repz
cmp
add
jnp
aas
cmpsb
add
repnz
push
int3
mov
js
cmc
lea
dec
sti
aam
popa
jo
insl
jl
int3
pop
jnp
aas
out
add
adc
push
sub
icebp
lods
hlt
xchg
add
test
mov
xchg
or
cmpsl
cmc
push
or
sbb
fwait
insb
sbb
mov
mov
and
and
pop
std
jecxz
mov
movsb
repz
out
pop
mov
movsb
es
sbb
and
pop
jle
jecxz
or
cmc
std
ja
std
clc
xchg
insb
jp
lods
sti
push
mov
lahf
jns
cli
push
mov
dec
sbb
jle
test
sbb
inc
jo
insl
and
mov
cmpsl
popa
mov
popa
jo
ja
pop
outsb
test
ljmp
sar
mov
pause
sub
cmc
sbb
dec
lods
pop
sbb
pop
stc
adc
dec
in
sub
popa
jnp
cmp
push
lods
jb
out
jae
cltd
inc
sbb
notl
and
xor
mov
cmc
mov
xchg
jb
xchg
or
cwtl
push
in
insl
pop
lock
cmp
popa
sti
jae
cmpsb
hlt
in
cmc
push
lods
jbe
js
in
jns
xchg
mov
popa
cwtl
sub
pop
lock
xchg
jae
xchg
cmp
xchg
lret
mov
scas
mov
insb
or
mov
or
lea
xchg
jg
xchg
mov
mov
outsb
mov
cltd
jb
insb
jb
jno
fbstp
fbstp
fbstp
addr16
jbe
xrelease
inc
sbb
push
mov
jo
adc
or
and
sbb
leave
daa
sahf
lret
and
jle
mov
sahf
or
outsl
jo
sbb
test
cmc
lcall
or
inc
adc
sbb
inc
sbb
jp
and
xchg
xchg
jl
add
cmp
insb
xchg
adcl
pop
lock
cmp
popa
sti
mov
xchg
push
xchg
push
xchg
push
xchg
in
and
and
and
jae
jae
xor
enter
add
andb
pop
cltd
xchg
mov
rclb
ret
mov
sub
js
push
movsb
out
push
ljmp
mov
or
pop
je
cmp
out
notl
movsb
sbb
pusha
and
pop
mov
push
pop
sbb
adc
lea
sbb
add
repz
or
mov
push
sbbl
out
push
fwait
lcall
cli
lea
sbb
and
movsb
cld
jle
lcall
or
lahf
pop
std
je
mov
mov
xchg
push
lret
sbb
lea
nop
movsb
xchg
movsb
mov
jmp
int3
add
adc
jo
push
movsb
test
mov
jae
hlt
arpl
popa
nop
and
arpl
jns
repz
lcall
jle
mov
mov
adc
sahf
decb
repz
nop
jle
popf
rclb
xchg
popa
adc
xchg
jecxz
xchg
ret
adc
out
imul
repz
pop
repnz
rcrl
lds
leave
js
sbb
jno
outsl
jge
jp
sbb
inc
sbb
jge
decb
inc
decb
mov
mov
pushf
pop
insl
mov
add
into
add
xor
test
adc
test
jecxz
adc
adc
nop
cltd
aad
sbb
mov
cmc
mov
pushf
pop
sub
mov
fcoms
sbb
adc
cmpsb
addr16
std
test
add
aaa
add
jl
xchg
mov
and
repz
jno
lcall
pop
cmp
xchg
sbb
ds
ds
ds
ds
ds
lods
in
push
outsb
inc
sti
outsl
leave
or
fimull
fs
hlt
add
icebp
and
testb
jnp
test
in
outsb
xor
test
scas
and
or
add
pop
jecxz
lods
test
clc
in
test
adc
and
jecxz
push
jecxz
stc
inc
sbb
lret
jb
jae
add
cmp
js
fwait
jge
fwait
jle
fwait
jg
fwait
jl
jo
insl
jns
incb
repz
add
sbb
adcb
jle
lcall
adc
fs
or
call
popa
push
sti
adc
cltd
popa
movsb
sbb
cwtl
movsl
iret
pushf
daa
iret
cmpsb
and
sahf
movsb
iret
cmpsb
test
sub
sub
test
scas
insl
ret
scas
outsb
ret
scas
outsl
push
cli
mov
jge
popf
leave
sub
jb
in
and
pushf
test
movsb
xchg
mov
inc
jle
test
je
je
inc
jp
subl
jg
out
std
sbb
aas
jl
xchg
sbb
add
pop
ss
cltd
ss
stc
and
insl
or
dec
sub
push
icebp
out
rcl
lea
pop
cmp
jecxz
out
movsb
add
mov
xchg
inc
daa
and
in
test
mov
sub
mov
jl
push
mov
mov
dec
popa
sti
test
popf
mov
into
and
and
cmc
pop
mov
mov
and
or
cli
add
pop
jp
cli
clc
inc
hlt
repnz
mov
pop
inc
sub
dec
jnp
std
shll
sub
sarl
fs
cs
stc
and
inc
sbb
repnz
pop
nop
push
lahf
jmp
sub
push
call
pop
repz
cld
jbe
mov
xchg
incb
or
mov
mov
test
testb
lcall
sbb
add
movsb
and
pop
or
cld
iret
inc
mov
mov
hlt
jge
push
outsl
gs
fs
mov
popa
jmp
sbb
mov
dec
push
out
insb
daa
sbb
add
cli
and
repz
mov
out
hlt
cmc
sti
mov
adcb
mov
sbb
and
pop
xor
sbbb
and
and
loope
push
loope
sbb
lea
xchg
cld
pop
xchg
push
xchg
dec
nop
inc
xchg
cmp
xor
xor
xor
xor
xor
xor
repz
aaa
outsb
xor
jp
jns
je
ja
jbe
jne
jo
jae
jb
jno
insb
xor
outsb
mov
jge
adc
cmp
cmp
sub
sub
sub
sub
sub
outsl
test
sahf
lea
lea
add
sub
and
sbb
cltd
cmp
lcall
or
jno
ja
idivb
sub
jle
pop
inc
fnsave
ja
cmpsl
in
push
push
dec
mov
lods
mov
nopl
cwtl
es
mov
test
inc
mov
fsts
loope
xchg
or
cwtl
daa
push
sahf
movsl
pop
add
cmp
mov
loop
inc
xchg
out
inc
add
add
lock
fsubr
jb
adc
pop
in
sub
lret
xchg
lock
or
cld
push
adc
addr16
sbb
cld
adc
or
pop
add
stos
sub
popa
fucomip
pop
jg
movsb
sub
test
out
adc
sbb
ficomps
jecxz
out
ja
mov
jl
pop
sahf
mov
push
test
adc
sub
and
push
repnz
dec
fisubrl
or
sbbb
jmp
mov
aaa
subb
dec
cld
aas
inc
jne
gs
cld
cmpsl
in
mov
and
ret
or
testb
mov
sbb
adc
das
pushf
shrb
lahf
lods
mov
inc
mov
jp
mov
or
and
inc
mov
adc
test
lock
ficompl
xlat
repz
cmpsl
sub
jns
mov
jl
loopne
pusha
pop
push
inc
into
mov
fiaddl
jle
adc
test
nop
aaa
sub
sti
and
es
jge
mov
sti
test
outsb
xor
push
and
cwtl
cmp
cmp
fstps
andb
test
push
and
pop
mov
movsb
pusha
or
fsubl
fcomps
xchg
mov
repz
sbb
into
sbb
ficoml
loopne
out
cmpsl
xchg
fisubs
jge
mov
icebp
xchg
and
loope
subl
je
fisubrl
je
test
pop
push
lcall
dec
mov
xrelease
int3
aad
imul
fcoms
mov
and
jle
or
push
push
mull
jno
filds
fwait
mov
lock
or
cltd
insb
xchg
icebp
cli
es
aas
dec
test
pop
jo
js
jnp
push
cld
jecxz
jl
sbb
inc
repnz
sahf
sub
cltd
xor
and
pop
pop
enter
pop
das
test
rcrl
xchg
and
sub
inc
xchg
jno
scas
fcomps
xchg
rep
or
and
xorb
hlt
movsb
imul
clc
arpl
jnp
or
mov
dec
lds
movl
addl
jae
or
or
add
cmp
adc
mov
repnz
jecxz
les
or
fisttpl
sahf
repz
psubb
cmp
or
sbb
sbb
or
fildl
adc
pop
adc
jns
ficomps
enter
fisubs
fsubrl
mov
mov
ficoml
xlat
mov
lret
call
and
jecxz
lret
rorb
fisttps
ljmp
add
adc
arpl
mov
cmpsl
les
pcmpeqb
and
mov
cmp
lods
out
jbe
dec
test
sbb
in
daa
xor
xor
movsl
shrb
push
je
jbe
mov
mov
and
mov
jecxz
mov
jno
cmpsb
loopne
dec
mov
mov
les
lcall
jl
sbb
dec
inc
setg
xchg
cmp
ffreep
lahf
and
lahf
mov
pop
pop
imul
jmp
aas
mov
xchg
popf
mov
sbb
loopne
cli
push
mov
sahf
or
popl
icebp
fbld
lahf
aas
ljmp
push
arpl
jecxz
jb
ds
mov
lds
adc
imulb
sbb
imul
ret
fmull
cmp
inc
roll
ja
test
mov
xchg
lret
icebp
sbb
out
fmulp
sahf
sbbb
push
sahf
or
arpl
xor
dec
lea
outsb
je
add
and
scas
dec
sbb
fwait
outsl
push
scas
fldl
mov
add
ljmp
sbb
es
stos
clc
add
test
das
sub
fwait
add
jge
sbb
cmp
ret
outsl
push
pop
aas
ret
idivl
and
outsb
fcomps
lds
insl
adc
movsb
inc
inc
ljmp
stc
jge
outsl
das
adc
loope
test
jl
or
cld
idiv
fbld
push
enter
cltd
fistps
repz
xchg
push
sub
inc
fnsetpm(287
dec
push
and
sahf
inc
cmc
jge
sarl
lock
sbb
cld
mov
add
mov
or
shlb
xchg
sbb
scas
fs
fnstsw
and
scas
mov
repz
or
fnstsw
push
mov
add
or
and
or
loopne
push
mov
mov
popf
hlt
adc
setp
mov
in
or
pop
movl
std
mov
stc
fs
xchg
mov
aaa
xchg
notl
and
adc
or
inc
dec
cmp
and
in
sahf
insb
popa
xchg
shlb
mov
ljmp
cmp
test
leave
and
clc
cmpsl
test
sub
dec
pushf
jp
dec
rcrb
or
adc
cmp
out
push
mov
test
popf
xor
and
clc
movsb
xchg
data16
lods
hlt
sub
sbb
je
negl
addr16
add
or
inc
call
cmp
ljmp
mov
sub
cltd
adc
insb
and
cmp
xor
or
jnp
inc
lock
pop
dec
out
cwtl
push
fbstp
or
add
jno
insb
fiaddl
adc
vpmulhw
test
cmp
data16
or
pop
pop
popf
mov
push
and
js
hlt
sbb
push
and
jne
sbb
push
js
int3
pop
adc
adc
cmpb
xchg
jmp
pop
je
adc
es
ljmp
popf
push
pop
mov
test
sbb
fdivrl
dec
js
jae
jl
sbb
out
clc
push
push
test
jl
cltd
push
dec
cs
or
jecxz
pushf
fsubs
lock
clc
and
sbb
mov
das
mov
jg
and
int3
jmp
cmp
test
sbb
shlb
loopne
push
or
sahf
jnp
enter
dec
shlb
mov
xchg
scas
xchg
out
xchg
adc
push
or
cmp
pop
lret
idivb
enter
xor
add
adc
jle
xchg
sbb
jbe
cmp
mov
push
frstor
add
mov
negb
mov
int3
mov
mov
jg
pop
pop
scas
test
mov
in
pop
sahf
cld
loope
jmp
fidivl
iret
mov
jbe
and
mov
ljmp
or
pop
or
in
sbb
lahf
popf
incb
xchg
or
lods
fdivrl
testl
clc
xchg
and
addr16
sbb
push
or
sub
bound
add
stos
fisttpll
mov
icebp
ja
or
and
mov
mov
ds
sbb
js
push
cmp
test
dec
fdiv
lcall
jle
or
icebp
sahf
push
clc
add
fisubs
arpl
in
je
push
pushf
or
xchg
inc
cld
sub
ja
clc
pushf
imul
lret
or
mov
test
test
cltd
ja
imul
aas
dec
arpl
sbb
cmp
mov
bound
or
push
mov
and
add
div
es
mov
lds
cmpb
das
adcb
cmpsl
mov
lahf
mov
std
mov
setnp
jecxz
fadds
xchg
repz
icebp
mov
in
inc
sbb
push
rcl
adc
mov
imul
loopne
pop
adc
ficomps
sahf
lea
push
mov
pop
mov
push
inc
xchg
jge
pop
or
add
adc
insl
je
lds
sbb
sahf
scas
loope
xchg
adc
pop
enter
icebp
mov
mov
push
movsb
cmpsl
inc
inc
fcoms
or
and
sti
fsub
and
aam
inc
fsubl
sub
mov
and
mov
pop
pop
dec
ljmp
pop
cli
cmc
les
std
jecxz
fsubs
cwtl
sahf
mov
cmp
xchg
or
mov
adc
gs
push
push
test
push
js
lret
clc
daa
sbbb
and
dec
dec
outsl
leave
pop
jo
imul
cld
imul
or
mov
out
test
jnp
xchg
and
xchg
sti
daa
movb
or
repz
push
js
hlt
or
fwait
repz
cli
xchg
jb
mov
cmpsl
lock
outsb
mov
or
shl
mov
jl
jecxz
les
cmp
subb
iret
mov
and
xchg
inc
repnz
mov
jmp
and
mov
jbe
xchg
es
popf
lods
inc
sub
cld
mov
and
jg
or
call
int3
adc
test
lds
cmpsb
inc
push
hlt
test
loope
xchg
dec
xchg
cmpsl
jecxz
pop
add
bound
pop
pop
pop
cli
push
sub
test
inc
mov
daa
clc
js
and
push
popf
test
lods
call
fsubl
push
inc
jbe
xchg
fimuls
fldcw
bound
cmp
jb
jmp
jnp
xchg
test
clc
add
mov
push
mov
jge
repnz
lock
pushf
xchg
ja
fwait
add
popa
sahf
mov
push
inc
cld
je
dec
repz
mov
lock
mov
adc
lock
and
mov
js
sbb
hlt
jo
pushf
push
pusha
add
movsb
mov
cltd
cmp
add
cltd
sub
loopne
in
or
sub
clc
jp
int3
or
repz
mov
out
aaa
mov
inc
or
hlt
add
lcall
fists
pop
xlat
mov
insl
repnz
js
fimuls
aas
dec
add
mov
jns
hlt
add
sbb
in
stos
pusha
fcoml
pop
push
sbb
loope
dec
cwtl
and
sti
jbe
popf
setne
or
adc
xchg
repz
sub
es
repnz
imull
pop
iret
and
aad
and
mov
push
popf
test
pop
test
sbb
and
push
add
inc
fidivs
pop
jae
ss
call
sbb
fstpt
popf
push
add
loopne
inc
mov
ret
lock
mov
imul
std
roll
test
add
xor
imul
jno
add
mov
mov
cmp
sub
cvtpi2ps
add
jb
inc
and
push
orb
adc
adc
and
inc
test
mov
mov
jge
mov
test
pop
inc
cld
sti
fiadds
mov
test
or
sub
sbb
repz
lods
cli
pushf
sbb
adc
sbb
clc
stc
pop
dec
push
hlt
ret
and
add
lcall
fidivrl
mov
push
add
fldl
cmpsl
out
push
test
adc
add
sbb
test
xchg
js
push
or
movsb
xor
pop
and
lahf
xchg
fimull
xchg
pop
std
subl
push
imull
data16
sbb
sbb
leave
jge,pt
fs
test
push
pop
pusha
cli
lock
fbld
fcomps
test
nop
ficomps
mov
jecxz
cmpb
jmp
mov
sbb
fsubr
sub
sbb
arpl
testb
lret
xchg
fisttps
clc
insl
test
dec
cmp
mov
jmp
mov
fs
mov
mov
push
sbb
jo
mov
ds
repz
and
jnp
dec
sub
in
add
sbb
mov
addr16
std
dec
repnz
test
mov
insl
xchg
mov
rolb
js
rcll
xchg
or
ss
pop
out
andb
cmp
ret
pop
cli
xchg
xor
and
out
lahf
sahf
xor
test
fisubs
fsubs
hlt
xchg
sub
subl
in
es
bnd
and
mov
lods
je
adc
add
frstor
mov
inc
jmp
adc
lret
xchg
pop
sti
pop
dec
jle
mov
mov
adc
mov
popa
test
dec
mov
cmp
movsl
and
inc
test
sub
rclb
cli
ss
inc
sar
in
les
pop
jecxz
adc
imul
sarb
jecxz
mov
pop
xchg
adc
xchg
pop
mov
int
xchg
dec
lcall
sbb
fmull
inc
les
jmp
out
in
xchg
lods
fbstp
push
lcall
decb
or
jns
mov
dec
clc
add
arpl
mov
hlt
adc
push
sub
test
fmul
push
testb
dec
mov
jmp
lock
enter
push
mov
in
fs
fiaddl
adc
cwtl
popf
push
js
outsl
lock
mov
ja
ljmp
out
or
aad
cmpsb
pandn
test
push
pop
outsb
inc
cmc
fisubl
pop
aas
subl
pop
xchg
jmp
or
xchg
hlt
push
cmpsl
cmpsb
pushf
and
lea
and
es
jne
pop
push
es
and
inc
mov
ja
imul
add
xchg
in
arpl
pop
sbb
iret
push
lock
xor
jecxz
sbb
sub
add
or
and
fwait
sti
icebp
popf
popa
fcompl
cmpb
imul
movzbl
push
mov
xor
insb
test
fisttpll
repz
test
push
cmpsb
std
js
and
lock
es
fadd
or
jns
cmp
sbb
test
add
mov
aad
sti
cmpsl
push
dec
jl
inc
mov
jl
or
imul
es
jno
dec
mov
iret
std
daa
lock
and
xor
es
jmp
fistpll
sub
test
pop
sbb
addb
fidivs
add
jecxz
imul
push
leave
cld
mov
ljmp
sbb
jmp
sub
push
sahf
shrl
pushf
dec
pop
push
add
fucomip
hlt
unpckhps
mov
sbb
icebp
lahf
pop
xor
mov
cmp
xorb
mov
sbb
sbb
pop
push
and
sbb
push
cmp
ss
or
cmpsl
dec
hlt
add
mov
outsl
cmp
les
lret
jge
je
inc
add
cld
add
sbb
adc
sub
stos
inc
in
adc
mul
xlat
jmp
push
cltd
cmc
cli
mov
pop
jg
sub
dec
or
cltd
or
jae
pop
cmpsb
fs
sub
stos
sbb
inc
js,pt
sub
lret
mov
stos
dec
cmc
cld
xorb
pop
ljmp
pop
inc
dec
cmc
mov
dec
push
or
mov
repz
sbb
or
das
xchg
fidivrs
popa
add
jg
push
push
dec
xor
mov
mov
rcr
out
mov
add
cld
xlat
mov
push
test
icebp
clc
test
scas
lret
insb
or
cltd
sahf
add
inc
aad
sbb
and
push
clc
push
mov
and
or
add
insb
mov
ja
add
mov
hlt
push
jecxz
push
mov
sahf
pop
test
ja
push
clc
dec
ljmp
push
sahf
test
out
jmp
popf
call
xchg
sub
jp
rep
repnz
adc
fcomps
xchg
or
pop
stos
mov
sahf
bound
add
repz
clc
jbe
test
or
cmpsb
jae
lcall
inc
divb
popf
js
subb
pop
mov
add
inc
add
popa
pop
cmp
and
mov
lock
xchg
inc
insb
das
sbb
cs
scas
in
pop
popa
imul
fstps
jge
stc
or
repz
repnz
pop
into
dec
mov
or
jb
fs
mov
hlt
adc
test
jle
push
rcrb
mov
adc
outsb
pop
mov
lock
clc
cmc
es
das
test
mov
stos
or
inc
jle
add
cmpsl
nop
and
push
mov
je
pop
cld
push
add
or
inc
test
test
icebp
jg
sahf
pop
push
pop
dec
imul
cwtl
push
popf
fcomps
push
pop
data16
icebp
in
arpl
push
jg
js
xchg
jmp
addl
mov
cmp
cmp
mov
daa
cs
call
jae
cmpb
sub
sbb
in
stos
test
out
push
int
insl
xchg
sbb
cmp
or
add
arpl
and
je
xchg
mul
cmp
sbb
loope
test
sub
and
pushf
movl
push
fsubrs
cltd
pushf
jmp
adc
ja
jl
push
mov
sub
adc
jge
ficomps
popa
mov
jge
repnz
sar
lock
repz
sbb
pop
pop
xlat
repz
add
inc
or
xor
sub
repz
lods
ret
mov
jb
adc
dec
dec
dec
xchg
cld
pop
xor
xchg
dec
inc
mov
pop
cmpsl
add
repz
cld
sti
pop
sbb
mov
shrb
cld
dec
sbb
movsb
or
or
jg
loope
clc
sbb
pop
mov
lock
jns
jge
dec
jno
cmp
bound
pop
shl
decb
aaa
es
inc
inc
int
adcb
faddl
mov
sbb
or
movsb
push
pop
inc
lock
push
jecxz
leave
fcoms
or
jle
or
sub
mov
ja
rorb
adc
push
push
std
jbe
repz
call
clc
bt
test
push
sbb
shl
sar
push
shld
shr
adc
push
bsr
push
or
mov
shrd
btr
lea
or
mov
shl
mov
and
xor
pusha
lods
setl
push
rol
ror
sar
or
rol
sub
stc
ror
not
neg
mov
stos
setge
setg
not
push
mov
lea
push
movb
push
mov
lea
call
push
jmp
enter
jp
xor
mov
fimuls
loopne
movsl
cmpsl
pop
pop
int3
and
ret
sub
push
mov
jno
cld
push
push
xor
mov
ret
jo
dec
jne
mov
xor
push
and
cmp
pop
xor
fs
lea
ja
jne
in
sbb
cmpsb
mov
movaps
dec
xchg
sbbl
mov
pop
aaa
cmpsl
pop
add
add
pushf
pop
add
sbbb
fidivrl
pop
cld
cmp
mov
adc
adc
adc
cmp
push
dec
icebp
aad
arpl
add
jle
lahf
pushf
test
stos
push
and
les
dec
lcall
pushf
int3
enter
mov
outsb
dec
aas
pop
psllq
sbb
mov
jp
fwait
jge
movsl
outsl
lea
ffreep
fnstenv
pop
sbb
pop
sub
xchg
sbb
cmp
repnz
adc
fisttpll
sub
push
pop
xor
lock
mov
jge
dec
and
pop
push
fsubrl
dec
dec
subl
and
push
sti
shll
jge
inc
mov
cmpsb
lcall
xchg
fidivl
lds
inc
ljmp
and
test
pushf
pushf
pushl
ret
dec
ret
jp
lock
dec
jo
jo
test
mov
fs
pop
movsb
adc
aas
mov
cld
int
lahf
sti
mov
cs
insl
lods
jnp
cltd
lcall
xchg
lret
call
cmpsb
fsubs
dec
loop
in
sbb
out
mul
movsl
int
jp
in
in
hlt
cld
or
adc
mov
icebp
sbb
push
push
push
ljmp
add
pop
push
cwtl
add
idivl
loopne
jg
sbb
cmpsb
mov
add
clc
cmp
pop
adc
pop
inc
and
ss
insb
push
xor
cltd
add
shll
sti
leave
mov
nop
mov
cmp
pop
lods
fcoml
lret
jg
dec
sub
repnz
sbb
sub
sbb
or
pop
jl
insb
sub
lret
aas
pop
push
sub
cmpsb
stos
das
cmp
and
aas
adc
xor
push
push
xchg
sub
or
pop
sbb
rcrb
cs
xchg
js
xchg
iret
sbb
jl
jle
rcr
add
or
mov
cmp
push
push
out
push
sbb
in
cmpsl
stc
test
int
mov
call
andl
lcall
push
and
in
jl
inc
and
xor
stc
sbb
or
xchg
jmp
out
lock
std
aaa
sbb
inc
out
rdpmc
cs
add
mov
adc
out
sbb
fsubrl
adc
add
mov
aam
or
xchg
loope
push
inc
and
mov
push
push
mov
aad
and
or
shlb
sub
nop
sub
jne
adc
xor
inc
jnp
jb
nop
mov
cltd
dec
dec
dec
cmp
inc
dec
pop
sahf
or
adc
in
pop
mov
pusha
pop
mov
or
pop
add
cmp
jno
shlb
jl
cmpsl
mov
flds
xchg
mov
or
xchg
mov
jmp
cmpsb
in
popa
sub
sbb
fisubrl
push
clc
mov
aam
inc
pop
push
add
in
divb
or
cmp
repnz
push
adc
push
adc
push
data16
inc
loopne
pop
push
cli
sahf
int
mov
jg
xchg
sbb
mov
jo
test
test
loope
sbbl
xchg
add
rolb
cmpsb
dec
push
add
push
inc
mov
in
fldln2
in
les
sbb
lods
xchg
out
je
or
iret
mov
push
shr
fisttpl
sbb
xlat
mov
in
loop
or
lahf
jmp
cli
mov
add
mov
jns
mov
mov
sahf
cmpb
repnz
mov
or
xor
add
mov
jmp
xchg
add
sbb
or
jno
test
scas
mov
rcrl
mov
fs
mov
sbb
xor
xor
pop
sti
movsl
je
popl
stc
push
mov
adc
test
pusha
rclb
sub
lods
in
xchg
jmp
test
mov
mov
jmp
stc
push
jge
ret
stos
fbld
jp
dec
pop
and
pop
aas
ja
imul
addl
idiv
repz
filds
in
shl
dec
dec
mov
fucomip
aaa
lods
fs
sub
ror
mov
xchg
mov
inc
out
sbb
xchg
imul
fisubs
cmp
add
adcl
or
popf
fwait
leave
sbb
fstpt
aaa
pop
inc
icebp
pop
xor
out
fstpl
cwtl
and
cmp
ret
std
rdtsc
dec
gs
imul
jb
bound
mov
into
mov
lock
sti
jno
pop
scas
cmp
rcrl
push
popa
cmp
test
and
pop
sbb
jno
test
daa
inc
imul
movsl
push
scas
cmp
inc
inc
les
sbb
lret
les
rclb
int
xchg
roll
aad
inc
ljmp
sbb
sub
test
dec
inc
and
inc
mov
les
call
scas
adc
lods
sub
aas
pop
outsb
ret
inc
mov
das
ja
rorl
mov
pop
imul
cmpsb
lods
mov
test
push
inc
push
jns
add
imul
push
mov
pop
pop
push
lcall
jg
mov
or
add
movntps
xor
ret
lahf
mov
jb
imul
insb
add
pop
jp
adc
ljmp
sbb
fdiv
es
bound
lock
adc
roll
das
dec
movl
inc
jnp
and
xor
cmc
and
cmp
lea
xor
add
jp
lock
es
adc
xchg
sbb
das
addr16
rolb
sub
push
ds
dec
xor
mov
pop
add
bnd
movl
movl
call
jmp
xchg
and
xorb
push
xchg
lods
xchg
mov
idivl
stc
and
repnz
inc
dec
xchg
jl
jmp
stos
out
push
outsl
jo
pop
loop
jns
dec
les
sarb
mov
lahf
and
push
mov
inc
mov
lock
mov
fs
iret
mov
cmpsl
pop
pop
adc
jmp
stc
xor
add
xor
out
add
and
cmp
inc
jno
andb
add
adcl
mov
add
pop
pop
arpl
bound
dec
xchg
push
dec
movsl
lds
std
fcomip
lret
or
scas
sub
push
jecxz
mov
test
xlat
imull
adc
or
sbb
inc
andl
and
in
sti
cmpl
mov
unpckhps
cmp
fcmovnb
imul
mov
inc
or
outsl
stos
int
sbb
std
xor
dec
adc
popa
xor
iret
sahf
shll
inc
cmp
into
pop
adc
aaa
imul
cmpsl
xchg
jae
lods
stc
arpl
cmp
add
xchg
sarb
inc
es
fdivr
cmp
push
scas
push
jb
cld
xor
push
leave
push
dec
in
test
loopne
xlat
das
xchg
shld
mov
ss
icebp
lahf
popa
or
leave
in
imulb
ret
xchg
rcrb
mov
mov
mov
scas
test
pop
out
push
add
fcomps
sbb
or
cmp
sbb
test
hlt
xorps
push
scas
adc
jp
mov
mov
mov
add
xor
adc
jns
sarl
mov
xchg
or
jl
sbb
xchg
rcl
adc
and
adc
pop
adc
add
lock
push
adc
aad
sub
push
or
testb
push
push
ljmp
data16
shll
jp
pushl
mov
pmulhw
fnstcw
fs
ret
lea
out
adc
aaa
push
imull
cmpsl
and
pop
mov
xchg
xor
pop
add
aaa
sub
push
dec
outsl
adc
pop
cwtl
scas
insl
fistpll
pop
insl
pop
ss
aaa
xlat
pop
lret
adc
mov
out
into
repnz
repnz
repnz
mov
xor
dec
fcoml
jp
les
loopne
int3
cli
shrb
add
mov
xor
addr16
and
inc
shl
inc
sub
push
sbb
test
repnz
das
adc
mov
jno
and
pop
or
leave
ret
dec
sarb
out
pushf
bound
xchg
scas
ror
push
sub
mov
add
cmpsl
push
mov
mov
cmp
jnp
xchg
sti
rcrl
mov
popf
mov
xchg
push
adc
out
pop
xchg
mov
xchg
xchg
leave
cmpsl
int
cli
fs
ss
push
ljmp
or
adc
sub
adc
add
int
lock
test
mov
pop
push
jle
aas
insl
push
jbe
loope
push
pop
pop
add
nop
mov
sahf
inc
stos
push
dec
sub
fs
rol
xchg
ficoms
in
leave
mov
xchg
adc
mov
cmc
stc
adc
cltd
jle
pop
jge
dec
mov
mov
mov
repz
add
adc
mov
sub
mov
test
jmp
xlat
repz
pop
lods
sbb
xor
shll
ja
test
mov
into
out
sahf
or
inc
int3
fwait
xchg
aas
xchg
xchg
cmp
jecxz
out
andb
jnp
xchg
jae
adc
xor
cli
call
push
sti
push
adc
mov
mov
in
mov
enter
pop
divb
pushf
jmp
pushf
movl
pushf
jmp
inc
jae
adc
stc
leave
mov
test
jecxz
sbb
jo
addr16
enter
mov
xchg
aad
mov
mov
cmpsl
loop
mov
xchg
lods
mov
ficompl
pop
in
out
insb
test
jo
in
imul
xchg
push
mov
inc
jno
mov
pop
mov
sub
iret
mov
sbb
or
nop
in
jnp
insl
addl
test
sbb
pop
lahf
pop
test
jp
inc
ror
lods
iret
mov
lret
mov
cltd
add
nop
and
std
aas
imul
stos
cmp
push
pushf
cs
push
pop
dec
lret
imul
xchg
jnp
push
or
or
ljmp
mov
sbb
push
xor
pop
lds
jl
xor
push
dec
loopne
in
cmpsl
xchg
mov
cmpsb
insb
and
test
push
jmp
dec
sub
inc
dec
jnp
lahf
xchg
push
in
test
mov
popa
repnz
sub
nopl
add
xchg
push
xchg
movb
aad
xchg
icebp
lret
les
loop
icebp
das
sub
imul
push
and
cmpsl
xchg
adc
mov
lods
xor
aam
sbb
divl
imulb
dec
xchg
dec
sub
dec
jnp
xor
imul
das
arpl
lods
nop
mov
mov
rol
fnsave
add
dec
xchg
outsl
repnz
jp
sbb
dec
call
jp
push
and
insb
stos
cwtl
xchg
cmc
lret
imul
jno
in
jns
dec
aaa
or
fwait
cmp
sub
push
adc
lock
popa
mov
fs
rorb
inc
testl
lods
sbb
orl
cs
jnp
rorl
mov
mov
loopne
pop
push
dec
dec
mov
jo
pop
fs
lods
mov
adc
int
aam
iret
lds
and
jne
pusha
pushl
push
pushl
mov
pushf
push
jmp
int
adc
add
je
pop
jp
mov
int
pcmpeqb
imul
lahf
xlat
mov
jo
jno
adc
push
ret
pop
push
mov
mov
pusha
dec
fnstsw
or
ficoms
cmpsl
inc
stos
test
sahf
mov
cmp
stos
sub
in
or
xor
push
aaa
mov
jle
movsb
pop
pushf
les
mov
jb
push
cmc
cmp
dec
adc
lea
jae
pusha
push
mov
pusha
lea
jmp
xor
pushl
lea
call
pushf
jmp
push
not
movw
dec
clc
neg
cmc
mov
jmp
xchg
push
pushf
call
pushl
cmp
pushf
cmp
call
lea
ja
cmc
call
lea
call
test
test
cmp
pushf
pusha
pushf
movb
lea
jae
pushf
cmp
mov
lea
jae
test
cmp
je
pushf
pushf
pusha
lea
ja
inc
mov
sets
setns
inc
mov
pusha
pusha
inc
sub
or
sar
rcr
xchg
shr
mov
shl
and
neg
cmp
mov
jmp
gs
push
jp
sbb
int
xor
push
push
or
imul
sbb
imul
sbb
lods
ret
mov
out
je
rcrl
xchg
or
insl
aas
aad
gs
sbb
jmp
nop
mov
in
ror
pushf
bound
jmp
mov
int
cwtl
fistl
aad
lds
data16
idivb
dec
sbb
dec
popf
arpl
adc
jns
cmp
sub
bound
ds
lcall
mov
rol
arpl
pop
or
jp
adc
stos
or
gs
sub
testb
and
adc
sub
dec
jae
adc
scas
in
dec
int
push
lret
test
cmp
jmp
cmp
xor
xchg
jns
jb
lods
push
xchg
sbb
inc
pop
out
adcb
clc
push
sub
push
je
push
mov
xchg
daa
cmp
sarb
add
add
loop
cmp
call
jbe,pt
or
imul
cltd
lahf
pop
xchg
shlb
adc
das
add
rcl
adc
dec
call
adcl
loope
lcall
xor
sbb
in
cmp
push
sub
cli
inc
inc
scas
push
dec
mov
sub
test
es
repnz
sbb
add
ret
mov
jae
xor
into
mov
ret
inc
mov
lods
cmpsb
inc
push
adc
adc
jg
jno
inc
inc
push
sbbl
outsl
mov
insb
mov
inc
mov
mov
push
aam
inc
mov
les
out
xchg
andb
lea
in
mov
jge
enter
out
stos
cmp
in
imull
lock
or
fiadds
sub
sub
inc
xorb
xor
cld
aad
out
vmwrite
pusha
fbld
aas
jle
scas
je
out
or
ret
test
jne
mov
xchg
xchg
mov
add
popa
aad
xor
add
mov
jmp
decl
pop
sbb
inc
xor
sbb
das
mov
add
and
fistpl
adc
push
int
call
lock
pop
js
movsl
xor
and
sti
cmp
add
roll
repz
cmpsl
int3
jp
lods
lods
add
mov
inc
adc
in
xchg
dec
inc
leave
push
lods
rcrb
lret
and
loop
pop
push
movl
and
jp
rolb
pop
cwtl
pop
pop
xchg
fs
push
pop
fsub
out
frstor
or
sbb
push
jl
push
int3
dec
and
mov
jae
in
insb
dec
lock
dec
rclb
cwtl
leave
arpl
adc
fst
pop
ss
add
mov
cmp
pop
outsb
dec
bound
lcall
loop
inc
or
mov
fmull
jp
jns
add
daa
and
popl
and
ja
cmpsb
sbb
inc
std
cmp
sub
clc
ret
js
das
mov
cmp
sbbl
push
mov
or
cmpsl
and
pop
outsb
mov
test
scas
mov
fsubp
enter
int3
mov
mov
out
inc
or
lock
pushf
lea
ja
pushf
inc
dec
inc
sar
xchg
shl
ror
daa
sar
mov
or
shl
and
push
mov
call
call
dec
xchg
and
jp
or
pop
inc
cmp
out
sub
cmc
cmp
mov
shrl
dec
adc
cmpb
push
cmpsl
loop
call
push
int3
ret
and
addb
pop
jmp
and
popf
repz
into
repnz
out
push
mov
pop
stc
ljmp
mov
inc
push
push
cs
mov
ret
sti
pop
adc
fs
movsl
and
das
pop
lahf
pop
fwait
stos
mov
dec
orl
in
popa
fucomp
std
scas
repnz
push
call
mov
cmpsb
stos
dec
sub
pop
push
pop
push
aaa
push
aaa
out
mov
mov
fbld
lds
dec
push
mov
fwait
jecxz
adc
sbb
xchg
fwait
dec
movsb
arpl
std
mov
adc
push
inc
push
rcll
mov
jecxz
decl
jp
sbb
add
add
aam
in
and
fimull
dec
les
jbe
fcomps
loope
clc
mov
mov
jb
pop
lret
test
mov
stos
jle
inc
pop
stos
test
xchg
ret
pop
addr16
mov
add
push
test
mov
mov
fcompl
fimull
jp
ja
std
aaa
and
daa
inc
adc
push
cmpsb
mov
xchg
mov
mov
rol
mov
rorb
dec
jb
mov
outsb
lock
mov
mov
cmp
ret
addr16
xchg
mov
add
fnstcw
pop
push
sbb
cmpb
rclb
psubb
sar
daa
add
mov
scas
iret
xchg
mov
fwait
stos
scas
jnp
andl
pop
rcll
lcall
mov
pop
push
call
pop
scas
or
cmp
pop
leave
and
test
xchg
mov
adc
in
xchg
popf
xor
xor
ja
mov
mov
int3
add
cmp
loopne
into
movsl
dec
cs
sub
sbb
mov
imul
xor
ds
jb
rcll
push
jp
imul
cmp
in
fdiv
add
lfs
scas
lcall
xorl
jns
pop
lea
jecxz
ficoms
jg
outsl
pop
push
xchg
jmp
sahf
stos
xorb
out
or
test
fwait
jno
xorb
lret
or
call
cmpsl
push
daa
rcrl
mov
sarl
out
and
add
pop
and
push
scas
xchg
mov
pop
xchg
add
mov
pop
cs
fs
je
sbbl
add
inc
sub
fldenv
dec
pop
sbb
cmc
mov
cmp
cmp
call
pop
jno
push
jp
xor
dec
adc
pop
pusha
and
jecxz
loop
ficompl
and
cmp
pop
cmp
jge
mov
imul
pop
jae
sub
int
xchg
mov
scas
xchg
int
xchg
shlb
lock
jge
adc
push
int
push
ret
dec
gs
cmp
out
dec
inc
scas
lret
cld
mov
jnp
add
in
ss
pop
mov
insl
inc
sbb
mov
jnp
add
add
daa
shrd
mov
stc
sub
call
jbe
ja
jp
adc
sbbb
mov
sbb
jno
orb
mov
shrb
mov
cmp
negl
jno
in
sub
insl
les
popa
out
jl
add
mov
loopne
xchg
int3
xchg
dec
or
dec
out
cmp
fsubs
lcall
jecxz
mov
aad
cmp
cli
shlb
movsl
push
mov
pop
pushf
sbbb
lods
push
loop
lds
scas
into
push
cmpsb
adc
mov
jp
cltd
jg
fwait
mov
shrl
mov
out
jp
mov
test
jp
xor
cmpsl
cmc
in
ljmp
sub
movsl
fistl
add
jb
frstor
js
imul
inc
repz
dec
push
push
lcall
mov
jle
mov
iret
push
push
or
jecxz
cmpsl
neg
out
xor
cltd
jne
cld
fsubrl
ljmp
jp
pop
shl
loopne
sub
hlt
out
sub
add
std
gs
xlat
mov
pusha
lret
outsb
and
fistpl
add
inc
push
and
sub
jp
push
inc
push
xor
dec
and
inc
jb
jp
mov
mov
mov
xchg
cmpsb
stos
cmovge
xchg
push
pop
popf
xchg
je
inc
and
cmp
mov
out
mov
cmp
lret
push
mov
mov
pop
mov
or
es
ficomps
or
mov
ret
pop
repnz
popf
inc
lahf
cltd
lcall
ret
mov
or
cli
bound
sbb
ret
mov
fcomps
fcoml
call
pop
sub
sub
jo
pop
cmp
frstor
fiaddl
push
jo
fs
mov
xor
insl
inc
sbb
or
loop
and
mov
jo
stos
or
fsts
push
mov
cmp
das
call
rclb
inc
ret
jge
enter
popf
outsl
popa
stos
mov
lcall
lret
jmp
push
jmp
sti
adc
pop
fninit
or
psllq
addr16
adc
movl
aam
xchg
int3
repnz
mov
adc
rorb
jne
or
int
jb
mov
push
cld
pop
pop
mov
jno
adc
add
push
rcrb
mov
jns
jge
loopne
cmpsb
movsb
test
pusha
jl
loopne
int3
movsb
int3
cwtl
lods
xor
and
and
pop
pop
pushf
movb
adc
pushf
pusha
lea
jmp
mov
cmpsb
notl
xorl
loop
jne
push
push
aad
rorb
xorb
xchg
movsl
sbb
pop
dec
pop
jno
mov
sub
mov
out
and
ret
or
std
insb
sbb
sahf
ljmp
repz
loope
les
in
sub
jle
insb
pop
pop
jp
fimuls
mov
imul
out
pop
fsubs
jne
popa
xchg
scas
mov
mov
or
mov
popa
add
pop
in
hlt
dec
mov
addr16
jmp
push
mov
sbb
nop
inc
lods
dec
stc
lahf
mov
xchg
jbe
sti
stc
lahf
sub
adc
fiadds
daa
lret
lret
in
jmp
inc
les
sub
xchg
push
subl
les
and
jp
cmpb
mov
add
rcl
push
repnz
mov
push
or
jl
pop
add
cld
fs
mov
fs
pop
push
mov
cmp
xchg
in
jae
push
js
jge
insb
lcall
inc
adc
pusha
cmp
loopne
push
ja
pushf
xor
sbb
stos
push
lret
aad
shlb
push
cwtl
push
sbb
cltd
enter
jmp
pop
lods
pop
xor
imul
popa
iret
add
outsl
inc
xor
push
lahf
outsl
mov
loope
and
pushf
jmp
pop
aam
add
mov
pop
and
cmp
andb
repnz
mov
mov
in
pop
popf
add
test
or
in
ss
jecxz
mov
lods
nop
dec
in
popa
outsl
rolb
test
jae
pop
hlt
adc
lock
dec
testl
and
inc
ss
test
cmpsl
fwait
push
jnp
subl
push
mov
push
lea
call
stc
stc
cmc
sub
jmp
pop
push
and
mov
lods
xchg
jl
push
push
mov
mov
mov
lods
std
dec
mov
jnp
icebp
xchg
push
inc
xor
int
inc
ret
pop
sbb
sub
push
test
mov
nop
xor
mov
xchg
roll
iret
movsb
pop
fidivrs
mov
popf
jne
mov
bound
out
into
add
push
push
adc
sbb
flds
dec
inc
sub
dec
cs
sub
ss
outsb
push
push
jle
pop
js
sbb
mov
cmp
hlt
dec
pop
mov
std
popa
mov
mov
lret
int3
and
es
push
clc
mov
and
hlt
sbb
nop
add
pop
or
fs
or
pop
xchg
push
mov
jmp
inc
xlat
repz
push
jbe
in
cli
cmpsb
incl
les
lock
fdivl
es
test
push
negb
scas
dec
mov
jns
hlt
mov
push
pop
sub
repz
push
mov
cwtl
in
or
xchg
mov
mov
fadds
pop
and
mov
aam
pop
mov
pop
push
rorl
in
cld
mov
popa
popa
fimuls
cwtl
sbb
mov
jmp
pop
cwtl
cld
cmp
adc
gs
nop
repz
fs
cmp
pop
stc
sub
xorl
js
mov
mov
sar
xor
hlt
int3
xor
mov
stos
andb
sub
nop
hlt
cmp
shll
scas
lret
ret
lods
jmp
add
mov
and
aam
push
mov
mov
pop
ljmp
fsts
sub
dec
cmpsb
ficomps
mov
inc
add
test
ret
mov
in
mov
shll
push
iret
sbb
cmpsb
or
pop
mov
seta
cmc
pop
cs
js
jg
out
leave
adc
and
lret
inc
inc
or
cmc
xchg
divb
or
and
pop
adc
mov
cmp
or
mov
mov
or
adc
add
and
cltd
mov
mov
jb
divl
fnstsw
or
sbb
cwtl
js
push
jl
mov
inc
sub
and
sub
mov
in
lahf
pop
loop
aad
mov
rcrl
pop
pop
push
insb
push
out
in
sub
sub
inc
lods
sbb
xor
cmp
cmp
popa
cmp
orl
mov
cld
jno
jns
inc
adc
xor
xchg
pusha
jbe
cmp
sbb
xlat
pop
jg
push
cmpsl
inc
adcb
sub
xchg
jecxz
fdivl
es
rorl
faddl
xlat
loope
mov
scas
rorb
loopne
or
call
cmc
inc
clc
lahf
adc
mov
push
mov
popf
mov
or
repnz
cmp
push
mov
dec
fcmovne
push
pop
push
jne
mov
sub
loopne
in
push
cmp
adc
sub
jno
jb
mov
or
cmpsb
cmpsb
xchg
jp
js
cwtl
xabort
loopne
hlt
cwtl
scas
jp
dec
in
loop
sahf
test
push
out
call
bound
mov
aas
jno
test
cli
cmpsl
xchg
lcall
bound
add
jne
ror
dec
xchg
in
or
sub
push
loop
aam
out
pop
and
cltd
push
mov
ret
adc
mov
sbb
inc
dec
or
inc
stos
into
pushf
mov
pushf
test
mov
test
pop
addl
jecxz
jnp
and
lcall
cmp
in
enter
repnz
icebp
and
ljmp
aad
int
loope
push
pop
mov
mov
or
jno
stos
andl
scas
cmpsl
sahf
xchg
hlt
js
push
idivb
call
pop
inc
push
insl
mov
xor
stos
sbb
cmp
std
inc
and
inc
lret
fwait
sbb
in
imul
loope
jo
pop
ret
addr16
push
inc
adc
mov
and
data16
and
jne
sub
sbb
fiadds
xorl
xor
or
insb
cmp
addb
ficomps
mov
xchg
mov
mov
push
fsubrl
hlt
fsubp
in
xlat
stos
push
into
aam
xchg
vpmulhuw
addr16
cmp
aam
cs
push
cmpsb
sub
pop
in
hlt
cmp
sbb
imul
in
pop
push
mov
mov
test
inc
cs
ds
mov
mov
nop
cwtl
rolb
ret
dec
shrb
sbb
insl
cmp
jle
xor
and
jns
mov
ja
loope
pop
sarb
test
ds
dec
xor
xor
out
daa
pop
xor
aas
dec
cmp
scas
pop
fcoml
pop
push
inc
int
sub
inc
push
sub
xor
dec
js
cmp
mov
ljmp
nop
jle
imul
push
or
cmp
mov
adc
outsb
push
rclb
les
sbb
je
insb
and
out
outsl
stos
in
or
test
pop
outsb
push
cld
jns
hlt
lods
mov
sub
aam
pop
imul
rcl
sub
lcall
add
push
imul
popf
sbb
xor
and
jns
or
sti
sbb
inc
pop
and
dec
xchg
lods
adc
xchg
pop
mov
jo
push
into
inc
jo
add
stos
scas
rcll
pop
lds
cmpsl
lgs
mov
enter
int3
or
xchg
xor
add
mov
cmp
cmp
pop
fcomip
mov
inc
sub
inc
scas
fldl
dec
pop
mov
fsubrl
ret
ret
scas
scas
mov
int3
test
and
xor
fsubr
inc
mov
push
mov
test
sti
jle
pushl
cmpsb
inc
mov
repz
loope
fstl
xor
jge
xor
mov
test
push
add
mov
pop
or
mov
fisubrl
pushf
xchg
divl
fadd
mov
or
jge
jo
adc
out
imul
cli
setl
insb
add
push
popa
ffree
adc
and
jl
nop
push
movsb
call
std
sub
or
sub
mov
es
out
ret
mov
xor
dec
outsb
fstl
negb
inc
sti
and
adc
add
ret
lods
xlat
std
adc
adc
pop
pop
idivb
add
orl
movsb
sarb
inc
ja
insl
sub
inc
lea
add
sbb
push
ret
lea
out
push
xor
aas
mov
push
fidivl
gs
js
dec
cmp
les
in
aam
clc
sub
ficoms
psubusw
ss
out
sahf
call
lods
or
stc
jns
cmp
adc
aam
clc
and
push
je
sbb
js
add
test
sbb
fmull
mov
jmp
das
mov
sub
pop
dec
fbld
sub
cmp
xchg
and
aaa
sbb
xchg
mov
scas
push
fimuls
xorl
scas
fisttpll
xchg
pusha
push
aaa
andb
and
ja
movsb
push
jb
outsb
jne
mov
shlb
cmp
pop
mov
in
movsl
icebp
int
test
test
jmp
add
and
and
clc
jns
js
or
sar
and
add
and
adc
and
push
pop
sbbl
sub
sub
push
push
adc
stos
sbb
leave
pop
aaa
sub
push
scas
sbb
scas
cmp
fs
jle
mov
rorl
pop
je
jae
fistl
jne
into
jae
lret
iret
dec
jmp
test
je
and
cmp
adc
jmp
popa
xor
xchg
push
mov
and
jae
fs
jns
add
jnp
outsl
and
test
test
scas
fwait
sahf
dec
aam
xchg
xchg
sbb
push
lcall
mov
dec
sub
loop
cmp
dec
mov
mov
cwtl
xchg
mov
sub
add
outsl
repz
fcoml
outsl
imul
insb
mov
dec
mov
jno
cmp
mov
adc
sub
stc
xor
loopne
inc
cld
pop
xor
test
mov
jns
loope
gs
pop
outsl
dec
sub
sub
mov
into
dec
test
lret
xor
mov
aas
inc
pop
fucom
sub
mov
aam
jmp
lods
or
icebp
and
mov
push
mov
mov
pop
jb
pop
sbb
mov
jo
add
mov
daa
cmp
daa
out
dec
fwait
pop
outsb
or
add
js
add
cmp
mov
adc
push
or
out
ljmp
sub
cli
inc
xor
push
mov
idivl
mov
push
xchg
pop
xchg
dec
jle
cmpsb
rolb
and
test
push
out
js
mov
inc
and
andl
push
cwtl
das
fidivl
hlt
stos
insl
add
mov
jb
mov
or
mov
test
xchg
lret
mov
stos
add
mov
out
xchg
sub
mov
std
int
add
or
push
bnd
test
pop
xchg
idiv
xor
pusha
call
xchg
mov
cmc
jns
in
lods
jmp
mov
shr
sti
fnsave
or
inc
out
cmpsb
and
stc
outsl
or
sub
mov
xchg
addr16
subl
std
shrb
mov
loop
int
pop
adc
or
push
out
shr
or
add
scas
sub
inc
mov
cld
cld
sbb
outsl
push
mov
notl
outsl
daa
pop
arpl
cmpsl
mov
inc
mov
pop
xchg
pop
ds
xlat
cmc
jns
je
out
adc
xor
or
cmp
pop
xor
cmp
sbb
out
xor
popa
ja
imul
mov
adcb
loopne
fs
repz
arpl
push
or
repz
mov
jp
inc
sahf
mov
push
cli
dec
push
stos
mov
dec
cmc
fwait
xchg
mov
cld
pusha
mov
add
pop
and
dec
ljmp
mov
pop
cmc
cmc
loopne
shrb
loop
out
inc
cmp
add
push
stc
div
xlat
imul
push
ljmp
xor
clc
push
sub
push
testl
imul
sub
dec
xchg
scas
cmp
cld
pusha
pop
xlat
inc
setge
das
mov
in
aaa
mov
jmp
jns
cmp
mov
sbb
test
pop
inc
add
mov
xchg
imul
cmpsl
mov
rcrl
and
and
das
sub
sbb
add
sbbl
cmp
xor
jmp
cmpsb
ja
icebp
xlat
lds
in
pop
icebp
out
add
jno
or
mov
sub
out
or
jnp
xchg
xor
incb
out
and
movsb
sbb
dec
in
movsl
sub
pushf
push
inc
in
test
inc
daa
xchg
dec
pop
push
aas
test
add
add
adc
inc
mov
test
scas
mov
cmp
xchg
jle
jno
xchg
mov
sub
lock
push
jae
mov
popf
test
in
int
mov
insb
dec
sub
inc
mov
hlt
jns
cmp
in
aaa
add
aaa
std
pusha
cmp
sub
imul
mov
aas
add
xlat
xor
jg
and
leave
pop
inc
lret
add
mov
aad
fildll
test
out
aad
loopne
mov
loope
mov
adc
cltd
aaa
sub
cmc
jl
inc
pusha
rorb
mov
cmp
inc
or
pop
push
push
in
aam
into
push
cs
decb
dec
or
loop
cs
adc
mov
cmpsb
dec
or
fs
xor
outsl
push
or
out
push
sahf
sahf
mov
orb
add
inc
xor
insl
lret
loope
mov
lods
pushl
cmp
test
mov
pusha
insb
push
je
or
adcb
push
add
push
add
cld
fmull
rcll
mov
ficoml
outsl
pusha
dec
mov
push
add
fidivrl
jo
mov
mov
les
and
jmp
das
daa
out
movsl
rcrl
cmpsb
cmpsb
adc
sub
pop
fs
jl
incl
mov
push
imul
int3
scas
std
mov
inc
push
jbe
jg
ljmp
jg
imul
xchg
outsl
adc
shrb
out
lret
daa
out
out
ss
cmp
jnp
mov
in
xor
ret
xchg
sbb
jo,pn
stos
cmp
clc
repz
addb
fsubs
rclb
out
mov
push
push
ljmp
or
pushl
pushl
ret
mov
cmpsb
xchg
push
sub
push
sbb
js
test
enter
mov
cmp
pop
shlb
mov
jl
mov
cmpsb
sub
in
xlat
dec
sub
jmp
mov
daa
mov
push
cltd
js
sbb
jne
pushl
jne
add
push
xor
and
je
test
sbb
jle
mov
push
call
imul
mov
mov
push
bound
inc
repz
mov
movsl
imul
arpl
aas
rorb
cld
pop
inc
in
out
dec
shlb
iret
xchg
popa
nop
dec
icebp
loope
xchg
push
fxch
inc
divb
pop
mov
fisttpll
loopne
mov
shlb
cli
push
ljmp
push
iret
imul
pop
cmp
jns
xor
clc
add
sub
ljmp
adc
push
into
je
pop
bound
jle
imul
adc
inc
cmpsb
sbb
stos
pop
push
inc
pop
jbe
xor
mov
inc
push
jp
lret
fnstsw
faddp
out
pop
ja
xor
mov
or
es
gs
push
cmp
out
push
cmp
jb
lcall
gs
cld
pop
fcoml
mov
icebp
jns
add
es
lock
sbb
adc
and
mov
dec
dec
inc
fcoms
fidivrs
sahf
out
and
ljmp
jb
testl
inc
rolb
mov
js
out
jne
ja
mov
repz
dec
sbb
aam
xchg
sub
push
cli
mov
add
cmp
in
and
xchg
gs
pop
xchg
in
iret
div
pop
movhps
arpl
aas
sbbl
scas
jb
pop
xchg
cmp
mov
inc
aas
std
xor
outsl
arpl
cmp
dec
ss
test
into
repnz
push
mov
or
xchg
add
sub
pop
pushf
and
dec
push
or
aaa
sub
and
push
inc
fucomi
fs
es
int
frstor
mov
mov
xchg
fistps
sub
add
fcmove
mov
jecxz
decl
icebp
decl
test
clc
call
call
clc
mov
test
pusha
and
clc
lea
jo
add
pushf
movb
pushl
lea
jmp
bsr
mov
add
sbb
rol
sub
clc
add
shr
mov
cmp
test
test
pushf
call
mov
ja
jns
mov
adc
imul
xor
mov
inc
cmp
pop
mov
inc
aam
repz
mov
sbb
mov
add
jmp
pop
shlb
loopne
adc
or
int3
mov
insb
mov
sahf
in
mov
pop
xchg
movsb
bound
dec
pop
add
popa
mov
pop
pop
xor
xor
xchg
cmpsb
mov
mov
sbb
add
adc
rclb
notb
dec
push
push
fsubl
mov
and
or
std
out
jns
lcall
adc
es
push
push
mov
xor
lea
jg
insb
rcl
and
cltd
cmc
xchg
aam
fsubrs
std
push
mov
xlat
insb
lods
faddl
or
xchg
cltd
mov
movsb
les
ficompl
mov
jne
and
jle
ror
fnstsw
pop
icebp
shlb
leave
or
gs
inc
sbb
imul
cltd
push
lea
mov
cmpsl
and
jo
dec
call
pusha
push
lea
jne
setno
not
setne
pushfw
not
cmc
ror
mov
pusha
call
ss
out
jns
das
add
sub
adc
out
cmp
add
inc
sbb
inc
arpl
xchg
test
ret
jl
cmp
sbb
pop
loope
ret
jge
sbbl
add
jmp
mov
push
insb
mov
mov
mov
sahf
push
ficompl
ret
adc
jns
sbbb
or
and
and
jo
sub
cmp
inc
mov
mov
dec
movsl
popf
push
imul
lahf
jbe
lret
jae
ret
mov
xlat
aas
test
lock
int3
lods
sbb
inc
xor
adc
sbb
subl
mov
repz
jo
cld
jle
cmp
cmpsb
imul
lret
jmp
negb
xlat
ror
mov
pop
inc
test
sbb
sbb
mov
push
push
daa
dec
subl
add
inc
fs
mov
fs
pushf
adc
fcompl
push
aam
jo
push
outsl
inc
cli
push
push
stc
jmp
adc
add
mov
pop
cld
and
adc
and
mov
movsb
mov
outsb
cmp
push
xor
outsb
and
dec
lcall
push
movsb
mov
lret
jb
xor
pusha
fcomps
ljmp
or
addr16
ljmp
loopne
push
and
pop
dec
and
inc
js
lods
sbb
cmpsb
cmpsb
xchg
inc
ret
fwait
outsl
inc
xchg
out
jg
jns
sbb
jbe
mov
lods
fidivrl
mov
pop
sarb
xor
sahf
sbb
insl
jg
sub
cmp
icebp
push
mov
dec
in
mov
shlb
fstps
push
push
pusha
or
inc
pop
fs
mov
jne
decl
jo
rorb
mov
fcoml
int3
fcomps
imul
inc
popa
or
out
push
mov
gs
jns
xchg
sbb
sub
cmc
sbb
jae
iret
mov
pop
add
shrb
cmp
popf
xor
dec
mov
mov
out
xlat
xor
pop
aas
mov
test
sub
push
pop
jo
jg
inc
push
sbb
xchg
sub
and
mov
sti
psrlq
sbb
aas
inc
cmp
aas
imul
fidivl
adc
add
ret
jmp
cmpsb
sub
enter
and
fcmove
or
or
pop
shl
mov
je
mov
in
xchg
in
pusha
add
sbb
pop
cmc
push
rorl
into
mov
es
pop
rcrb
add
push
scas
shlb
push
cli
mov
jge
xor
add
mov
mov
cwtl
push
mov
cmp
push
add
bsf
aaa
or
xor
sbb
clc
or
dec
push
and
pop
jl
mov
insb
in
pop
mov
add
je
or
movzbl
test
btr
mov
call
stc
mov
jmp
cmpsb
lods
add
pop
pop
cmp
outsl
aaa
push
in
and
es
lret
dec
or
sub
dec
loope
mov
cmpsl
adc
jno
out
adcl
mov
out
mov
rcr
inc
add
dec
loop
sub
test
or
jmp
cmp
and
mov
jl
lods
in
lock
fmul
mov
cld
pop
cmp
jge
insl
fstp
stos
mov
mov
cmc
jmp
aad
mov
in
push
and
jecxz
jmp
adc
mov
and
pop
popa
pop
repz
push
cli
cs
loopne
sahf
jge
cmp
or
fidivs
add
rorb
scas
mov
pop
jp
pop
sub
sub
cmp
imul
push
add
sub
cli
in
sbb
stc
sbb
pusha
lret
movsb
pushf
lock
testb
mov
xchg
imul
mov
xchg
call
inc
and
xor
fs
jae
call
iret
or
pop
int
popf
lahf
in
mov
xchg
lahf
leave
fistl
ret
lock
lea
xchg
mov
ror
mov
sub
lret
inc
mov
cmp
cmp
xchg
fists
xor
xchg
inc
add
cmp
dec
pop
xlat
sub
std
cltd
xor
adc
adc
jmp
pop
pop
sub
jge
sub
mov
pushf
movb
lea
jne
pushf
bsr
mov
not
rcl
sar
sub
adc
push
rol
sub
jns
mov
push
sub
movb
clc
pusha
pushl
popl
mov
cmp
push
push
push
lea
ja
cmc
rcr
sub
jmp
in
mov
into
call
into
movsb
cmpsb
mov
lea
adc
cmp
xchg
dec
mov
mov
out
fucomi
dec
or
stos
mov
push
xlat
push
pop
adc
sahf
cmpsl
lods
mov
lds
imulb
jnp
sbb
jb
addr16
mov
xor
loopne
xor
jno
ror
mov
repnz
lret
test
lock
dec
pop
cmp
inc
and
cmp
xor
loopne
or
push
mov
or
mov
add
out
cmpsb
mov
mov
xlat
cmc
mov
cmp
push
lock
jl
xchg
xor
ljmp
xor
ja
mov
push
pop
inc
mov
dec
inc
push
mov
mov
mov
xorb
scas
gs
and
popf
arpl
stos
in
xchg
jecxz
daa
fimull
mov
push
dec
adc
push
out
out
sarl
movsl
out
into
push
test
dec
je
push
pop
insb
cwtl
nop
icebp
mov
aas
sbb
gs
jns
xor
xchg
movsl
fcomi
lret
rorl
leave
test
mov
outsb
in
xor
gs
stc
dec
mov
popf
add
cld
mov
xor
dec
add
mov
arpl
repz
pop
loopne
int3
pop
xor
leave
cwtl
xor
insl
jae
mov
lds
mov
xlat
and
in
popa
cwtl
daa
test
jns
push
int
cmc
fsubrs
push
ds
pop
outsb
push
mov
repnz
cwtl
pop
lock
and
cld
inc
scas
mov
jns
sub
xchg
mov
test
shrb
jb
push
inc
sbb
mov
mov
and
xor
sbb
arpl
adcl
stos
pop
inc
out
ror
and
jb
push
push
aaa
aas
mov
les
jmp
mov
jbe
icebp
add
adcl
sub
sbb
loopne
mov
xchg
rclb
and
loopne
jle
mov
mov
loopne
enter
fsubr
or
pop
sbb
mov
je
clc
stos
mov
out
cmpsb
cmp
pop
sub
jg
dec
lods
mov
ficompl
pop
lods
inc
jb
pop
cmc
pop
subb
fwait
cmp
push
adc
cmp
jmp
and
adc
call
add
sbbb
adc
loopne
insl
add
sbb
lds
pop
mov
sbb
sub
addr16
test
mov
adc
push
mov
and
xor
dec
cmp
jge
popa
sbbl
mov
lea
jne
cmp
push
lea
ja
pusha
pusha
cmc
imul
cmp
bt
cmc
add
mov
movw
pushl
lea
jmp
stos
dec
sub
jns
adc
frstor
cmp
in
dec
sub
cmpl
sbb
jb
aam
in
sbb
mov
fdivrs
lret
shll
in
cmp
lcall
ss
shlb
add
xchg
mov
iret
dec
dec
push
push
cwtl
aas
pop
sti
jo
xchg
or
das
pop
jae
aas
das
mov
sub
mov
jp
dec
and
jns
sub
adc
icebp
ljmp
add
inc
push
xor
push
xchg
scas
sbb
test
jle
jmp
xlat
shr
push
adc
adc
out
pop
sti
mov
jge
push
mov
aaa
cmp
pusha
fisttps
jmp
xchg
xor
addr16
cmc
and
push
mov
push
or
inc
xchg
xchg
stos
lret
push
and
push
jle
ss
fs
rolb
inc
cs
jmp
mov
scas
in
cmpsb
dec
mov
or
push
dec
jno
imul
aam
sti
pop
sbb
pop
push
jl
out
nop
ss
xchg
cli
rcll
outsl
sti
add
ljmp
insl
in
ss
inc
rclb
das
in
sub
hlt
and
xor
cmp
mov
cld
data16
and
fildll
cs
inc
mov
jo
or
shrb
mov
in
cmpsb
stos
sub
pop
inc
inc
adcl
hlt
pop
mov
adc
add
lock
mov
or
pop
iret
push
and
sbb
data16
je
aaa
icebp
mov
repnz
ficompl
cld
push
loopne
inc
stos
mov
sbb
pop
add
scas
dec
lret
jne
cs
and
test
xor
out
nop
movsb
fcmovne
adc
fst
mov
loopne
leave
mov
call
pop
add
repz
mov
push
lock
inc
cli
xor
mov
cmpsb
fisubrs
ds
mov
add
pop
neg
ds
in
adc
loopne
jmp
adc
mov
iret
lret
adc
cmpsb
roll
fcomps
mov
fnstsw
ja
pop
mov
dec
add
or
adc
mov
xor
mov
sbb
and
idivb
mov
gs
sub
jecxz
cmpsb
mov
mov
pushf
mov
lret
loopne
mov
adc
push
ds
ljmp
adc
bound
jmp
mov
add
pop
pop
pop
outsl
dec
stos
mov
adc
push
add
push
movb
lahf
bswap
mov
jmp
mov
outsl
loop
cmpsb
fwait
std
out
adc
sub
xor
das
pop
out
mov
cmc
push
mov
xchg
push
out
adc
stos
jo
add
loop
stc
pop
repz
fimuls
mov
sub
jb
mov
les
xor
insb
mov
xor
push
or
pusha
push
test
jmp
pop
inc
push
imul
push
into
cs
and
xor
leave
fwait
xchg
ret
pop
push
mov
push
push
sbb
cld
mov
add
aam
call
inc
xchg
or
or
hlt
jge
dec
fucom
jns
shlb
inc
mov
sbb
sub
adc
je
test
loopne
rcr
mov
loop
into
push
out
add
loop
or
adc
repnz
orb
push
repnz
stc
clc
jge
out
incl
pop
xchg
clc
call
incl
pop
loop
push
push
aad
jmp
lahf
fs
test
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lods
lock
movsb
adc
mov
in
add
fadd
push
into
mov
aad
xchg
cmp
sub
jb
add
movsl
sbb
in
inc
mov
imul
ja
imul
mov
jecxz
add
push
scas
mov
flds
les
fs
push
sub
mov
fbld
mov
iret
mov
lahf
sti
ja
adc
decl
js
in
cmp
dec
aad
dec
test
mov
fsubs
lea
sar
out
sbb
xchg
push
call
xor
pop
push
xor
add
repnz
frstor
mov
test
rcll
push
xor
adc
imul
add
sti
fmuls
orb
testl
push
out
mov
outsb
mov
out
and
pop
lret
fwait
adc
xor
xchg
es
jne
push
dec
or
scas
daa
jmp
ficoms
cwtl
loope
into
inc
loopne
cmpsb
loopne
inc
dec
outsb
fs
jle
mov
xlat
mov
and
into
add
push
xchg
test
pusha
mov
inc
add
in
outsb
stos
mov
cltd
in
sbb
fwait
xchg
movsb
mov
mov
ljmp
int
xchg
pop
and
jae
cld
inc
add
negb
and
insl
jns
mov
dec
dec
shlb
int3
loope
pop
cltd
imul
dec
imul
inc
es
pop
add
call
jb
jns
pop
sub
mov
cwtl
test
fs
cmpb
sbb
outsl
test
subl
pop
imul
ret
and
fsubs
inc
cmp
je
adc
loope
cmc
es
out
enter
pop
scas
je
push
aas
fdivl
cmp
dec
mov
add
push
push
and
xchg
xchg
aas
aaa
pop
in
cmp
out
std
or
lea
call
call
push
mov
sbb
or
push
ss
pusha
dec
jo
sub
dec
mov
mov
mov
sbb
push
mov
pop
test
jno
cli
sarb
xchg
mov
sub
pop
pop
xchg
xchg
cs
mov
inc
lods
xor
and
lods
ja
pusha
mov
popf
inc
lods
sbb
cmp
aad
loope
lods
test
pop
inc
insb
push
in
or
imul
pop
pop
dec
mov
nop
dec
push
in
sbb
out
and
test
mov
jns
mov
dec
sub
mov
bound
mov
dec
iret
inc
mov
out
add
adcl
mov
shrl
pusha
in
repnz
push
mov
lret
add
push
rcrl
nop
mov
scas
jbe
xchg
movsl
loope
xor
aaa
test
mov
repz
push
sbb
jae
push
add
and
and
cltd
jb
xchg
sbb
fisubs
lods
xchg
cmpsl
mov
pandn
daa
sub
aaa
and
fwait
cmp
jecxz
sti
mov
jns
mov
leave
stos
andl
insl
pushf
xchg
std
addr16
mov
jg
jmp
mov
jo
sbb
push
lcall
aam
mov
mov
fdivp
aad
cmpsl
sub
xor
fs
mov
mov
add
std
sbb
xor
dec
jns
incb
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
adc
jns
cli
in
out
in
les
call
xchg
fwait
mov
jge
inc
rcrb
sbb
mov
imul
jle
in
push
fs
pop
cmpsl
rcll
or
rcll
ret
pop
mov
mov
mov
cltd
notb
xor
sbb
lret
int
dec
pop
push
jge
mov
xchg
in
mov
addr16
sub
incl
dec
sub
jge
imul
fistpll
ja
cmc
pusha
sub
movb
mov
rep
not
pushl
mov
movb
movb
pushf
pushf
lea
jmp
cmpsl
shrb
add
add
add
add
addb
add
aad
sbb
add
add
sbb
add
test
and
add
add
push
xor
add
add
add
add
add
and
add
add
pop
insb
sub
add
add
mov
add
add
add
add
add
and
add
add
add
add
add
sbb
xlat
les
add
push
sbb
repz
add
add
add
mov
dec
movsb
jb
push
push
push
jbe
mov
pushf
pop
je
sbb
push
ss
push
jp
inc
jl
mov
icebp
aad
or
add
test
mov
or
sahf
lahf
test
cmc
cmp
repnz
sahf
jns
jp
inc
xlat
mov
and
icebp
mov
sbb
insl
mov
dec
fldl
push
addl
gs
pop
mov
popa
imul
cmp
mov
shll
jns
xchg
call
cmp
loop
xor
test
scas
stos
jp
jnp
inc
stos
xor
aas
sub
inc
pop
sarl
or
mov
jb
ror
push
mov
xlat
cmpsl
dec
pop
adc
fs
inc
stos
outsl
jl
push
in
cmpxchg
inc
mov
pop
mov
lret
addr16
outsl
jnp
insb
pop
adc
ljmp
sti
dec
dec
in
add
or
inc
or
push
mov
xchg
mov
xchg
or
aas
sbb
add
add
scas
mov
jns
je
cmp
sbbb
pop
inc
pop
cmp
call
ret
or
mov
call
enter
sbb
sbb
test
dec
mov
iret
lret
mov
gs
mov
push
outsb
jg
pop
cmpsb
cld
push
in
cmp
lret
data16
sbb
xor
cmp
clc
adc
lock
in
cmp
adc
sub
sbb
pop
cmp
sbb
lds
test
push
push
inc
push
xor
cs
insb
add
loop
lcall
out
lahf
out
lcall
call
fistps
out
lcall
lcall
fstpl
lcall
repz
fnstcw
and
data16
and
cmp
jbe
dec
stos
xor
push
insl
outsl
cmpsl
nop
sub
or
xchg
insl
cmp
movsl
cmpsl
addl
and
loope
loop
es
std
addr16
pop
cmc
pop
push
adc
and
lcall
sarb
xchg
sbb
push
jle
out
mov
mov
xchg
xor
cmp
jbe
inc
dec
xorb
pusha
push
stos
inc
xlat
pop
rcrl
lcall
jo,pt
jo
movsb
mov
repnz
push
dec
sbb
inc
or
dec
stos
xor
xchg
into
and
cmpb
push
xchg
movsb
dec
xor
sub
call
mov
insb
shlb
xor
insl
jnp
push
leave
xchg
leave
cli
or
test
push
sub
dec
pop
imul
cli
lahf
clc
stos
test
push
mov
dec
jg
int3
xchg
das
leave
mov
lret
sub
movsb
pcmpgtw
stos
mov
stos
sahf
out
out
jne
xchg
das
and
push
out
mov
and
pusha
movl
pushf
movb
pushf
movl
pushf
lea
jmp
movb
push
mov
lea
bswap
bswap
bswap
pop
pusha
mov
pushl
ret
cwtl
shlb
jns
jle
scas
pushf
mov
xchg
cmpsb
push
mov
ljmp
or
cld
mov
insl
shl
dec
stos
dec
cmp
sbb
mov
aaa
test
mov
xchg
mov
dec
popa
sbb
jne
add
push
mov
repnz
test
mov
addr16
mov
jbe
pushf
cld
add
add
push
daa
jnp
pop
mov
shrl
xor
xor
imul
test
and
push
lret
fdivrs
add
ss
mov
jbe
jle
cmpsb
rorl
cmpsl
push
or
sub
mov
xchg
xchg
mov
add
adcb
xor
das
imul
cmp
dec
sub
std
imul
mov
and
adc
nop
xchg
cmpsl
pop
movsb
pop
jno
daa
int
fcoms
clc
add
and
je
cmp
movsb
ret
cmpsl
rorl
sbb
lret
imul
popf
mov
test
jecxz
call
arpl
jecxz
mov
mov
inc
std
das
sub
dec
xor
sbb
mov
stos
rorl
lods
cmp
sbb
out
sub
and
mov
adc
jae
lock
sbb
loope
adc
shl
rcll
mov
and
fs
pop
mov
shll
cmp
fcmovne
xor
sub
outsb
mov
lret
std
cmc
jmp
flds
cmc
and
fs
shlb
out
adc
cmpsb
mov
icebp
or
sub
pop
xlat
mov
and
dec
push
jl
mov
notl
fisubs
cmp
js
adc
in
push
sub
outsl
push
lahf
adc
pop
jns
or
or
cmp
outsb
ljmp
repnz
sub
adc
adc
or
fwait
xchg
cltd
dec
cmp
jns
stos
push
push
cmp
jo
inc
ds
jb
xchg
in
movsb
and
lea
popa
sbb
inc
fnstenv
repz
pop
cmp
repz
adc
jns
dec
add
add
cli
movsl
ja
mov
test
inc
push
scas
insb
dec
inc
dec
aam
and
mov
lods
jae
xchg
xchg
xchg
jns
push
outsl
repz
ror
out
mov
or
xchg
insl
jmp
es
mov
gs
add
test
add
enter
jns
movsl
imull
cvtps2pi
inc
pop
and
adc
lcall
dec
push
movsl
call
mov
add
dec
pop
arpl
xor
pop
scas
lock
leave
inc
pop
lds
adcl
push
dec
push
inc
in
mov
aam
push
mov
or
js
scas
mov
pop
xor
xor
jmp
fcoms
dec
pusha
lahf
ljmp
cltd
arpl
movsl
scas
fcmovb
and
add
add
xor
xchg
push
sub
push
fs
mov
xchg
mov
shll
mov
cmp
notl
aad
cmpsb
decb
rol
into
lock
or
ret
mov
push
xchg
shll
mov
je
mov
cwtl
lock
hlt
push
data16
pop
pop
fdivr
loopne
mov
mov
cli
lods
mov
add
aam
mov
out
out
outsb
adc
adc
enter
dec
mov
mov
sbb
and
mov
out
mull
cmpsb
aam
adc
add
repnz
test
repz
sbb
das
adc
xor
add
inc
sbb
push
jo
subb
dec
test
inc
push
sub
mov
add
lret
aam
cmpsb
push
or
pusha
sbb
bound
dec
cmpsl
xchg
movsb
mov
cmpsb
stos
adc
sub
imul
leave
adc
pop
lods
sarl
inc
aaa
dec
sti
mov
dec
lcall
inc
cmpsl
push
clc
push
mov
pop
lcall
jp
or
outsb
and
cmp
mov
or
enter
and
outsl
arpl
daa
add
add
inc
cmp
mov
bound
dec
fdivrl
sbb
lret
in
mov
or
data16
mov
mov
adc
lcall
lcall
mov
insl
testl
push
dec
pop
loope
sbb
mov
sarl
aam
dec
imul
hlt
in
stos
icebp
and
dec
rcrb
pop
cmp
bound
sahf
push
mov
into
insb
fdivl
ret
insb
pushf
mov
pusha
pushf
mov
lea
jmp
outsl
insb
xor
cs
insb
add
lods
mov
push
sarl
mov
pop
sub
push
lods
jg
xchg
cmpsl
je
mov
mov
push
or
jge
xchg
xchg
jno
sbb
mov
shrb
ret
or
push
mov
sub
jne
xchg
inc
pop
stos
mov
mov
mov
mov
mov
mov
movsl
mov
inc
pop
sbb
mov
mov
cmpsb
mov
push
je
xor
test
mov
test
insb
insb
in
cmpb
fistps
dec
cmp
add
sub
push
fwait
sub
jecxz
je
hlt
or
pop
andl
fstpl
fisttpll
rcr
clc
add
rcrb
aaa
test
lcall
movsb
mov
sub
dec
es
gs
mov
arpl
push
sarb
dec
sub
adc
cmp
sub
inc
dec
and
cld
sub
pushf
fisubrl
xchg
xchg
pop
test
loopne
inc
imul
inc
mov
lds
push
jmp
lahf
lea
and
aam
pusha
cmp
out
rolb
and
jmp
aam
je
je
and
xchg
data16
sbb
jns
cmpsb
lods
mov
pop
mov
jp
ljmp
inc
xchg
mov
mov
pop
xor
call
jns
std
imul
cmc
pop
and
dec
inc
cmp
xor
mov
mov
cmpsl
push
movsl
jnp
fsubl
add
xor
stos
pop
pusha
jb
or
sbb
or
lret
out
mov
ret
push
cwtl
nop
mov
xor
lahf
stos
jnp
sbb
nop
adc
cmp
add
or
add
pusha
jl
pusha
ret
mov
add
jns
mov
cmp
inc
push
cld
add
pop
adc
and
xchg
test
mov
mov
shll
pop
sbb
sti
pop
sub
jp
push
int3
loope
mov
ror
test
fsubrl
dec
mov
cmp
mov
push
dec
mov
enter
cmc
outsl
ja
cs
mov
rolb
and
adc
fs
enter
add
bound
sarb
daa
sbb
loope
cmp
or
cmp
jmp
stos
xchg
shlb
adc
pushf
xor
adc
pop
add
inc
mov
inc
cs
xor
rorb
or
out
lods
fs
out
out
xchg
in
cmp
mov
jle
xor
sub
lds
lea
xchg
stos
daa
lods
push
iret
cli
pusha
and
test
fisubrl
mov
fistl
sti
aaa
mov
jmp
sbb
adc
dec
insb
nop
pop
or
cmpsb
test
push
cmpsb
pushf
stos
push
lcall
mov
fsubr
dec
sbb
test
xlat
adc
lock
inc
mov
pop
jno
mov
hlt
sbbb
jl
dec
icebp
arpl
sbb
sub
notb
mov
mov
aam
repz
pop
inc
cmp
test
or
jle
je
sar
mov
jns
or
cld
lret
in
mov
enter
stos
xchg
sbb
rorb
repnz
mov
adc
jno
shrl
xor
dec
lea
insl
pop
mov
repz
popf
mov
and
or
sub
fstpl
shlb
jg
pop
push
mov
imul
int3
xchg
and
fdivrs
jne
out
or
dec
push
aas
pop
packsswb
inc
jg
xchg
push
add
rcr
imul
dec
or
iret
jns
out
pop
inc
inc
xorl
jae
jne
inc
pop
pop
xor
test
mov
xchg
xlat
out
add
filds
mov
fsubl
test
sbb
stos
mov
push
dec
cld
aam
mov
sbb
push
add
cmp
call
jo
pop
fildl
iret
fcomi
fwait
cltd
fmuls
xchg
popf
and
movsl
add
pop
cmp
addr16
pop
dec
cmp
push
mov
mov
fadd
movsb
imul
mov
enter
add
adc
or
xor
ss
lcall
cmp
add
int3
fs
cmpsl
loop
leave
popl
or
and
incl
xor
mov
shr
push
out
and
aad
sti
push
outsl
rclb
and
hlt
je
rcrl
jmp
xchg
cmp
xor
pop
inc
sub
faddl
lods
cwtl
mov
cmp
arpl
imul
jge
frndint
inc
ds
pusha
pushf
movl
movb
push
pushf
movw
movl
pusha
movb
lea
jmp
leave
loope
int
cmpsb
movq
mov
xchg
mov
jecxz
mov
cli
inc
jae
in
in
jp
jge
das
cmc
idivl
jge
mov
mov
test
add
std
push
into
add
xor
or
jbe
pop
stos
rorl
imul
add
mov
jcxz
add
xchg
das
xor
stos
es
adc
add
sub
inc
xor
dec
imul
mov
cmpsl
shll
mov
adc
int3
jns
sbb
xchg
jnp
jae
ja
ja
and
stos
jbe
and
aaa
and
ds
push
sub
in
mov
fsubr
out
jae
and
sub
rcl
xlat
gs
lcall
inc
push
in
scas
push
shll
mov
or
add
sub
outsl
lock
jno
insb
push
push
push
les
mov
jno
or
loop
cmc
adc
mov
nop
rcr
hlt
xor
xchg
dec
js
sahf
or
es
stos
mov
lea
jmp
inc
stc
stc
not
call
lea
jae
push
sub
js
pusha
clc
add
jmp
sub
mov
bt
and
test
add
pushf
pushf
lea
jmp
push
outsb
dec
jns
hlt
loopne
lods
lcall
fmuls
or
fcoml
mov
jbe
in
push
test
stos
test
fstps
xchg
dec
lea
add
pop
into
std
mov
out
stos
int
push
jbe
xchg
scas
or
jo
lret
imul
adc
pusha
sahf
cs
jbe
cmp
push
jle
mov
push
ret
push
bound
mov
out
jp
leave
lods
mov
jb
mov
scas
scas
out
sub
fdivs
push
push
push
jmp
cltd
xlat
dec
lret
jns
xor
xor
sbb
adcb
fs
pop
cmp
xchg
jns
mov
pusha
rcrl
push
shl
mov
andl
mov
popa
sbb
sbb
inc
imul
sub
pop
mov
repz
ret
std
fmulp
push
leave
mov
cli
xchg
mov
mov
mov
lret
ret
cmovl
rolb
jl
push
mov
cmp
gs
push
dec
ds
imulb
cmp
jp
xchg
test
adc
dec
inc
cld
xor
scas
call
pusha
lea
je
cmc
test
pushf
cmp
push
mov
lea
je
push
mov
lea
jmp
popf
ja
lret
mov
aad
adc
sbb
pmaddwd
decl
mov
imul
cmp
cmp
clc
lret
out
shlb
add
aaa
inc
frstor
in
xor
rorb
mov
push
rclb
fsubs
hlt
pop
repz
pop
sbbb
pop
jnp
data16
jle
jns
jmp
in
and
inc
and
in
icebp
mov
loopne
or
test
test
add
insb
sub
sub
in
add
insl
sub
sbb
and
xchg
in
add
insl
sub
mov
sbb
pushf
in
add
insl
sub
pop
outsl
sub
movsb
in
add
insl
sub
rorl
and
and
add
imul
sub
add
and
mov
insl
sub
arpl
sbb
in
add
insl
sub
pushf
cmp
add
in
add
sub
xorl
add
sub
sub
and
fsub
and
push
insl
sub
xchg
fs
in
and
pop
insl
sub
pop
mulb
add
in
add
sub
pop
outsl
sub
hlt
in
add
sub
mov
sbb
cld
in
add
call
cmpsb
push
clc
into
cld
div
in
or
lahf
lods
pop
sti
dec
lret
lods
sub
xorb
movsb
aaa
insl
sbb
push
inc
or
sub
inc
cmc
fildll
rcrl
fldpi
test
shlb
xchg
xor
xchg
mov
add
loop
push
imul
jbe
cmpl
cmpsl
fnstenv
cltd
mov
std
ret
sbb
or
push
iret
adcl
pusha
rclb
hlt
and
subps
insb
jmp
mov
push
fcomps
pop
dec
push
sbb
ficoml
fistl
xlat
ss
sub
and
mov
push
adc
pop
pop
cwtl
repnz
xor
dec
jmp
rclb
adc
and
inc
sbb
or
and
in
adc
xchg
pop
lret
pop
sbb
push
pop
pushf
in
sbb
jns
xlat
push
cmp
and
pusha
adc
push
push
push
lcall
and
in
xchg
push
adc
and
cli
adc
mov
and
push
or
mov
inc
rcll
lds
lcall
call
movsb
sbb
and
js
call
adc
xlat
sub
sub
ret
add
mov
loopne
and
mov
addr16
xchg
lret
lea
sbb
stc
push
ljmp
add
lods
ljmp
pop
test
push
push
dec
call
in
sti
sub
loopne
daa
and
sbb
cmpsl
in
fstpl
push
pop
push
push
arpl
pop
xor
mov
mov
daa
call
cli
ljmp
stos
cld
sbb
mov
pop
shr
loop
insl
sub
mov
mov
sbb
pop
lods
sub
sbb
adc
push
sub
icebp
in
mov
sub
out
loopne
or
clc
outsl
loop
sub
cld
pusha
or
xchg
shrb
push
push
in
push
fisubl
sbb
mov
insb
hlt
and
sub
ljmp
in
cld
dec
add
ljmp
or
call
adc
dec
or
sbb
sbb
movsl
sbb
loopne
cmp
sar
lock
mov
xor
sbb
in
adc
ljmp
adc
sub
xor
push
or
sub
mov
je
or
stos
enter
fmulp
cmp
mov
add
jmp
and
dec
scas
ljmp
loopne
loope
test
sti
lret
and
xchg
or
adc
sbb
sub
imul
fldt
pop
ljmp
sbb
jbe
mulb
testl
hlt
sub
cld
mov
or
mov
and
and
pop
ljmp
sub
add
or
sub
sub
pop
add
ljmp
and
sbb
add
sub
cld
add
jge
in
sub
cmp
shrb
sub
daa
dec
lret
pop
jnp
outsl
cwtl
sub
sub
adcb
lock
jb
aam
arpl
sbb
in
pop
push
sub
or
in
outsl
adc
or
out
test
dec
in
dec
out
jns
and
movsb
sub
jecxz
enter
test
fsubr
and
shll
ljmp
call
mov
xlat
fnstcw
mov
js
les
mov
or
pop
out
add
and
xor
mov
and
adc
jmp
imul
daa
call
xor
xchg
mov
jg
sub
les
movsl
or
add
jae
xchg
jge
icebp
out
in
xor
lods
jnp
insb
mov
mov
scas
mov
in
jl
jnp
outsl
xor
sub
cli
notl
xor
je
xor
inc
or
mov
jge
jne
aad
aas
imul
xor
jg
cmp
inc
rolb
jp
mov
in
mov
imul
jns
xor
jnp
insl
sti
insl
repz
cs
pop
jbe
enter
leave
faddl
or
mov
addl
ret
shll
cmp
mov
test
sub
sbb
jns
mov
add
push
mov
xor
fisubrl
jp
aas
push
jge
xor
push
push
imulb
sbb
inc
adc
in
ret
pop
or
rcr
mov
fstps
pop
inc
rcrb
ret
pop
xor
pop
pop
mov
pop
pop
or
inc
lds
lret
repz
lret
mov
js
into
cmp
jns
cwtl
ret
cmpl
leave
sbb
jae
and
mov
xor
push
jb
xor
iret
mov
jmp
in
inc
xorb
ljmp
mov
cli
cmp
mov
inc
push
outsb
sahf
fisttpl
pop
idivl
pop
dec
push
adc
jo
sub
push
dec
arpl
adc
call
leave
dec
bound
push
or
mov
shll
jp
pop
push
and
or
insb
loopne
lret
imul
and
adc
jl
insl
aas
dec
andl
test
sub
dec
stc
sbb
cmpb
test
sub
outsb
addr16
loopne
jbe
pop
leave
push
repnz
je
push
inc
sbb
clc
mov
stos
ja,pn
push
pop
push
pop
and
rolb
enter
mov
ss
xchg
arpl
jg
mov
add
cli
test
mov
stc
call
loop
push
push
fs
or
lcall
imul
pusha
roll
movb
test
inc
ljmp
in
idivb
imul
pop
nop
stos
aas
mov
pop
pop
gs
lock
pushl
sbb
addb
jbe
dec
lods
out
inc
dec
imul
insb
pop
add
imul
inc
xor
out
jle
test
test
cmpsb
cmpsl
xchg
sti
call
aaa
test
push
and
xor
mov
pop
dec
push
shrb
mov
pop
out
int
subb
imul
cwtl
push
jae
pop
js
mov
jl
in
ss
mov
lcall
shr
hlt
inc
inc
or
insl
insb
mov
cmp
cmpsb
cs
imul
jmp
dec
test
out
leave
addl
mov
pop
mov
repnz
filds
fildll
fildll
fucomip
sbb
push
mov
push
in
jae
clc
lods
jae
test
addl
inc
pop
jg
cmp
outsl
mov
stos
repz
pop
xor
jp
mov
push
imul
and
lock
js
out
orl
es
fadds
and
sbb
cmp
mov
mov
fildll
rol
daa
pushw
clc
mov
mov
mov
lods
hlt
mov
ss
aaa
orb
dec
jmp
xor
in
jno
fidivl
xchg
not
pop
inc
cmp
mov
and
lods
test
js
int
inc
sbb
jno
inc
pop
sub
push
sbb
jl
test
adc
mov
aaa
fcmovb
inc
gs
sbb
mov
pop
push
xchg
filds
mov
inc
fadds
push
sbb
call
jge
insl
jae
adc
mulb
lods
jne
je
jecxz
loope
repz
xchg
add
pop
sub
push
scas
repnz
xor
pop
aas
push
jb
xchg
cmp
ret
pop
mov
shlb
add
mov
and
or
mov
cmpsl
jmp
push
and
ret
movsb
pop
inc
cmpsb
mov
sub
pop
jmp
loop
lret
mov
push
push
ficoml
pushw
ss
mov
leave
push
repnz
cli
call
cmp
or
push
jbe
daa
fadds
testb
addb
sbb
out
xor
outsl
pushf
jbe
daa
mov
arpl
pop
cmc
add
inc
and
sbb
stos
mov
inc
lret
shrl
insb
out
mov
das
push
push
pop
xor
out
test
mov
out
mov
push
repnz
fbstp
cmp
mov
add
mov
push
pop
dec
inc
add
ret
cmp
addb
jbe
lock
add
stos
mov
lret
imul
dec
mov
or
jg
push
pushf
mov
out
or
sub
shrl
sub
push
je
icebp
repz
pop
hlt
stc
popf
pop
or
and
test
adc
clc
sub
adc
sub
imul
insb
or
shll
mov
pop
clc
lret
testb
call
push
sub
imulb
aam
call
or
jne
and
sub
aam
sub
sbb
and
adc
lock
out
popa
sbb
sub
dec
in
loopne
imul
sbb
aad
imul
rclb
pop
and
sub
dec
je
enter
sbb
and
fldcw
and
push
outsb
sub
dec
call
lret
sbb
cmc
dec
push
scas
xchg
mov
and
aas
out
xor
dec
dec
dec
mull
cmpsl
imul
lods
outsb
pop
lahf
sbb
lods
mov
xchg
call
adc
bound
dec
and
icebp
pusha
and
sahf
sbb
and
sub
loop
add
repnz
sbb
sub
sbb
test
inc
sbb
sbb
sub
or
lret
mov
dec
sub
fisubrs
sbb
bound
mov
pop
mov
shlb
xchg
not
pop
subl
icebp
ffree
cmpsb
daa
dec
mov
sbb
jmp
xor
loope
addr16
mov
pop
lods
cltd
stos
sub
in
or
sbb
pop
in
je
add
ds
or
pop
jb
sub
sub
lret
dec
xchg
fildll
loopne
push
dec
add
xchg
inc
pop
cli
or
pop
sbb
jmp
sub
xchg
dec
out
ljmp
or
in
ja
inc
jp
sahf
test
sbb
imul
inc
push
scas
adc
cmc
sbb
add
sbb
into
fimull
push
pop
pop
sub
push
test
sub
test
psadbw
or
lahf
sbb
sbb
sbb
sbb
mov
stos
jbe
lahf
sbb
cmp
cmc
bound
lahf
cwtl
and
jp
or
or
push
sbb
les
and
mov
add
test
adc
call
imul
cmc
sbb
mov
imul
mov
aas
dec
lods
imul
movsl
das
test
mov
and
dec
imul
movsl
imul
sub
jmp
cmpsb
xor
int3
mov
sbb
imul
jo
mov
pop
cmpsb
imul
das
fucom
sub
aaa
sbb
cli
adc
jl
mov
or
pop
negl
dec
fiaddl
test
and
sbb
imul
inc
fwait
jle
sub
in
and
jmp
cld
addr16
imul
cmpl
imul
insb
int3
push
pop
loopne
into
hlt
pop
enter
and
sub
out
in
add
in
adc
dec
pop
cmpsb
adc
cmpsb
loope
add
cmp
sub
adc
adc
fidivrl
adc
and
mov
mov
js
pop
sbb
insb
push
sub
or
xchg
inc
cmp
call
arpl
out
add
imul
mov
movsb
stos
movsl
adc
dec
push
mov
fldcw
imul
xor
and
bound
fsubrs
test
pop
jmp
addr16
jle
lock
int
sub
and
in
lock
lcall
dec
and
bound
clc
sbb
mov
cli
cwtl
call
jp
call
repz
mov
lock
inc
xchg
sub
punpcklbw
idivl
push
xor
loop
push
lcall
pmaddwd
out
and
lock
imul
sub
mov
mov
xlat
push
sbb
mov
fwait
sub
xchg
xchg
and
mov
mov
or
hlt
push
hlt
shl
xlat
hlt
adc
fcompl
test
xchg
and
stos
mov
mov
cwtl
loopne
out
fistpl
inc
les
loop
sbb
iret
pop
ljmp
cwtl
adc
or
pop
decb
std
adc
pop
cmpsl
cli
fwait
mov
mov
dec
and
sbb
add
jnp
lods
xchg
adc
mov
pop
rcrb
adc
nop
add
sbb
mov
or
adc
and
sbb
add
enter
pop
stos
and
inc
movsl
mov
cwtl
cli
loopne
enter
xchg
mov
stos
fistpl
sahf
dec
notb
adc
cltd
and
sbb
sub
pop
in
xchg
or
push
inc
or
test
fstl
notl
xchg
or
sub
mov
sub
cmp
push
mov
jp
push
mov
sbb
and
pushf
dec
orl
sbb
mov
mov
mov
sub
das
int3
mov
pop
sub
or
out
jmp
int3
scas
mov
and
ljmp
sbb
ljmp
test
stos
jb
pop
sub
shll
add
in
insb
pop
jl
pop
and
packssdw
rcll
jmp
sbb
mov
sbb
push
imul
and
adc
sbb
adc
stc
adc
stos
fbld
xchg
sub
fistl
mov
push
rcl
in
stos
cli
push
repz
call
lods
sub
sub
and
sbb
test
sub
or
aam
push
push
or
call
inc
dec
sbb
xchg
cli
es
movsb
sub
daa
and
dec
mov
lret
jno
ljmp
sub
cmp
and
pop
and
adc
add
test
adc
sub
push
in
sub
and
mov
xchg
push
in
dec
in
sbb
or
testl
sub
jno
pusha
stos
stc
and
mov
mov
pushw
fldenv
repz
pop
loope
stc
lods
add
repnz
lcall
repnz
xchg
jo
xchg
out
fistpl
shrb
nop
adc
jge
imul
fwait
adc
sub
and
sahf
push
dec
out
mov
int3
add
lret
push
pop
jecxz
test
mov
enter
add
push
push
mov
and
dec
shrl
sahf
pop
sbb
inc
add
cwtl
aam
jg
adc
pop
sbb
into
adc
push
fsubrl
jmp
lahf
stc
sbb
dec
mov
mov
push
fstps
stc
xor
push
loop
idivl
in
stos
lcall
pop
imulb
fstps
pop
sub
pop
dec
jecxz
stos
std
adc
adc
or
and
test
shlb
fmull
adc
push
repz
add
sbb
outsl
sub
fisubrl
mov
les
sub
addr16
cli
pop
xchg
adc
insl
les
pop
loop
jecxz
sarl
faddl
and
aad
jl
sbb
mov
and
mov
and
leave
sbb
push
push
and
adc
sbb
rorb
push
fimull
repnz
or
sub
push
sub
or
lea
mov
aaa
test
daa
jns
sub
adc
xchg
dec
xchg
inc
push
sbb
inc
add
and
pop
cmpsl
sbb
mov
pop
fucomi
test
xchg
adc
rcrl
testb
sbb
sbb
or
sbb
in
mov
sbb
jl
jecxz
mov
add
sub
sub
cmp
fs
out
adc
js
cld
jb
or
dec
mov
adc
xchg
ss
sub
xor
push
pop
push
cmpb
test
pop
aaa
dec
adc
dec
mov
sahf
and
fucomp
mov
add
sbb
sahf
lods
cltd
add
xor
test
jns
sub
fildl
insb
sbb
mov
fstps
dec
sahf
inc
sbb
or
xchg
jg
les
xchg
adc
add
mov
int3
call
adc
fsubrl
into
sub
add
adc
test
sub
mov
push
sbb
xor
sub
sbb
or
cmp
test
cmp
ljmp
inc
sahf
and
xor
stos
lock
sub
scas
mov
test
inc
lock
mov
pop
cli
call
je
sub
cltd
dec
add
sub
ds
sub
sub
adc
cs
test
add
div
or
out
fisubs
sbb
loop
call
mov
clc
incl
sub
mov
mov
das
dec
jmp
or
sub
cmp
mov
loop
adc
push
or
adc
and
push
mov
add
mov
shl
add
add
shll
pop
test
xchg
or
gs
ss
inc
sub
pop
sbb
iret
es
in
icebp
sti
mov
jmp
test
sbb
xchg
flds
sbb
jmp
sbb
push
js
sub
dec
loope
sub
sub
rcrb
int
sbb
xlat
dec
clc
sub
adc
adc
sbb
repz
mov
mov
or
push
sti
sub
repz
stos
mov
insl
out
mov
ss
or
adc
roll
and
pop
cmpsb
cltd
jmp
add
push
es
fs
pop
adc
jno
or
push
sti
insb
aad
xchg
adc
sbb
xchg
lcall
nop
push
add
or
jge
xor
push
pop
adc
lods
insb
es
lcall
orl
mov
xor
fisubl
clc
sub
shrl
adc
jp
adc
adc
nop
mov
sbb
movsb
xchg
lret
into
insb
test
inc
push
jmp
in
aam
mov
push
adc
mov
insl
fs
push
nop
call
lea
push
sbb
idiv
pop
push
mov
jmp
sbb
or
pcmpeqd
mov
lret
aam
jle
cmp
leave
daa
add
mov
mov
cpuid
imul
sbb
sbb
cli
adc
imul
or
jecxz
subb
test
pop
push
fisubs
xchg
cmpsl
xchg
repnz
cmpsl
jecxz
pop
gs
mov
popf
dec
imul
js
or
push
and
stos
sub
popa
adc
mov
sub
cli
cmpsl
repnz
or
sbb
cltd
add
adc
cmp
insb
test
jl
stos
or
sbb
mov
inc
in
cld
adc
iret
out
ss
pop
and
fisubrl
sub
or
sbb
fucomp
pop
push
pop
leave
xchg
push
or
and
adc
cmpsl
nop
xchg
popf
nop
adc
adc
or
mov
nop
and
fidivrl
or
mov
add
loopne
sub
jne
ret
pop
push
leave
test
ret
or
xchg
cmc
pop
and
or
adc
adc
add
xchg
in
in
orb
mov
mov
push
je
jecxz
or
sbb
and
rorb
sub
stos
andb
and
pop
and
or
pushf
xor
lods
out
mov
and
push
push
sub
imul
adc
dec
sbb
mov
nop
push
addl
add
inc
sub
sub
daa
sub
lds
popa
incb
fstl
sbb
sahf
test
leave
call
lock
cmpsl
xchg
jmp
pop
push
sub
imul
ficompl
or
loopne
mov
leave
leave
push
cmc
lahf
mov
sbb
or
mov
sbb
adc
fistpl
scas
push
cmpsb
subl
test
sti
sbb
cld
lahf
aam
ficomps
and
hlt
xchg
leave
mov
lret
repz
cs
sub
add
xchg
lret
xchg
jp
test
push
gs
jo
test
and
mov
aam
jns
call
add
add
mov
cli
movsb
fldenv
ljmp
cmpsl
movsb
mov
or
popf
enter
nop
cmc
fwait
sub
clc
sbb
jo
cmpb
movsl
and
mov
and
fwait
stos
iret
or
idivb
out
xchg
inc
and
je
stc
test
call
jp
and
sub
push
bound
sbb
daa
and
and
or
add
add
pop
daa
add
mov
or
lea
cvtpi2ps
sbb
sub
aam
mov
cmp
push
test
jle
aam
adc
sbb
sbb
mov
xlat
mov
stos
mov
xchg
outsb
xchg
cltd
js
insl
mov
mov
out
sbb
or
prefetcht0
nop
xchg
nop
lcall
sbb
movsb
mov
dec
mov
call
bound
sbb
in
out
call
mov
jp
test
push
adc
sub
adc
sbb
out
and
addr16
xchg
or
aam
cs
or
pop
or
repz
nop
adc
or
and
xchg
adc
outsl
int3
test
cmpsl
push
and
sbb
cld
subl
xchg
sbb
stos
stos
and
cwtl
jmp
imul
aas
jecxz
mov
test
outsb
data16
push
test
add
sbb
int3
sbb
sbb
clc
sub
adc
idiv
into
loop
lcall
out
in
fistps
repz
lahf
fstpl
ficomps
lcall
ficomps
loop
lcall
fstpl
lcall
repz
scas
jns
sub
cmp
cmp
adc
inc
push
or
and
sbbb
leave
mov
pop
jl,pn
stos
fs
inc
int
icebp
dec
aaa
or
cmp
call
test
std
sbb
mov
sub
mov
jnp
icebp
jmp
popf
xor
inc
shrl
jne
aaa
or
cmp
and
pop
push
pop
xor
cmp
int
mov
and
movsl
jne
dec
mov
movw
clc
or
pushf
pushf
pusha
lea
je
test
cmp
or
pushf
pushl
lea
je
lea
sub
not
xor
sar
rcr
mov
and
mov
bts
or
shr
shr
inc
movzbw
test
mov
jbe
or
push
lea
je
btc
mov
inc
add
adc
push
sub
bsr
adc
shrd
call
movl
call
and
cmpsb
adc
dec
or
sub
adc
sub
es
and
inc
aad
or
or
inc
xorb
jg
aam
shll
es
push
pop
xor
aas
sub
sbb
stc
push
dec
hlt
xchg
or
dec
xor
adc
mov
bound
sti
push
mov
into
pop
sbb
mov
out
pop
adc
adcb
insl
pushf
movsb
ret
lock
sbb
lret
lea
and
gs
cltd
mov
je
pusha
fldenv
mov
outsb
lods
jns
or
cmpsl
orl
es
insl
or
inc
into
mov
loope
fistpll
inc
mov
mov
popf
jae
mov
dec
push
mov
dec
test
fnstcw
jb
cmpsb
ss
fiadds
jns
and
imul
psubsb
aad
loope
cmp
jo
add
and
adc
or
xor
movsb
jnp
les
add
inc
es
add
cmp
inc
es
mov
or
mov
jns
jbe
or
or
adc
xor
cs
int
adc
loopne
lods
sar
mov
mov
xchg
xor
test
ljmp
imull
mov
lahf
pop
in
xor
arpl
loopne
dec
or
push
ds
rorb
sub
lods
dec
jbe
into
cli
mov
add
adc
loope
or
pop
push
and
jl
jnp
ficoms
int3
in
adc
mov
mov
mov
nop
adc
stos
jns
mov
ljmp
sbb
sar
and
jo
int3
aam
mulb
dec
and
push
sbb
lods
xor
xor
sbb
xorl
sti
js
out
ds
ret
ds
in
sbb
xchg
push
sub
push
lock
push
jns
jo
push
fptan
pop
push
icebp
xor
test
jbe
pop
or
and
subb
pop
inc
pop
cmp
inc
xchg
inc
jl
lods
xchg
pusha
mov
cld
std
jae
pusha
in
call
lds
in
scas
clc
mov
cld
or
out
push
mov
into
inc
cmp
xor
jg
sbb
mov
ret
lods
lahf
mov
rcll
into
hlt
ljmp
aas
mov
pop
mov
out
ret
test
test
mov
pusha
movsb
sub
fwait
cmp
add
xlat
mov
roll
idiv
dec
inc
adc
daa
pop
sub
insl
mov
jmp
pop
scas
cltd
jg
mov
stc
jmp
jnp
iret
shlb
clc
sbb
xchg
or
push
jnp
movsl
xchg
jnp
das
in
mov
ja
xor
mov
pop
or
sub
pop
push
jecxz
sti
js
adc
xor
aas
sti
inc
or
mov
cmp
sbb
popf
mov
xor
fwait
js
pop
das
and
mov
or
mov
clc
mov
out
shll
repz
sti
cmp
xor
arpl
add
arpl
push
add
xor
xor
ror
cmp
mov
pushf
call
mov
cmpsb
aas
cmpsl
fsincos
fcos
mov
aad
sbb
dec
mov
scas
adc
push
jno
mov
xor
push
pushf
adc
das
pop
sub
cmpsl
mov
xchg
fwait
mov
jge
cmp
adc
rcll
pop
and
movsb
pop
popl
lods
cmp
rcrb
jbe
insl
cmp
clc
call
and
add
mov
mov
sbb
mov
sahf
test
and
push
loop
aam
lahf
or
or
push
add
repnz
sub
add
push
dec
push
fs
push
imul
mov
xchg
in
iret
mov
icebp
xchg
cs
call
xor
mov
jle
jo
hlt
mov
out
out
fnstcw
cmp
in
test
sub
test
movsb
adc
xchg
fsubl
into
and
cmp
sarb
adc
hlt
mov
xor
mov
mov
movsl
movsl
fnstenv
cmp
push
dec
adc
popa
insl
gs
jo,pt
pop
pop
cltd
pop
xchg
aad
test
cmpsb
add
lea
pop
imul
icebp
imul
cmp
mov
bound
inc
sbb
jecxz
mov
pop
sbb
in
dec
stos
add
jle
hlt
out
fsubp
mov
jae
enter
sbb
or
data16
cmp
jno
push
or
dec
mov
lcall
movsb
xor
sub
pushf
rorb
shlb
jmp
cmc
push
out
jns
into
into
movsb
jle
ljmp
std
cmpsb
stc
or
xlat
iret
ljmp
jnp
mov
or
sub
push
sbb
mov
sub
sbb
imul
popa
push
stc
cmp
ffree
ret
out
pop
jno
xchg
adc
daa
pop
pop
fmull
nop
stos
or
sbb
test
test
cmp
sahf
nop
je
pushf
dec
lcall
lret
pop
int3
jno
adc
sbb
xchg
and
mov
imul
sub
ja
ss
add
add
insb
ret
jp
add
enter
lock
push
repnz
out
push
push
fidivs
inc
ds
jae
push
xor
dec
xor
insb
xchg
mov
subb
pop
sub
cmpb
dec
out
sbb
jl
test
sub
inc
cmp
adc
aas
ss
fcomip
ret
je
xor
test
adc
repnz
pop
dec
cld
push
cmp
push
cld
in
sub
jle
inc
adc
pop
add
push
jl
fsub
rorb
adc
add
inc
addb
nop
lock
scas
es
xor
cmpsl
pop
test
jns
fisttps
xor
mov
mov
pop
and
loop
in
push
bound
out
in
add
ret
add
mov
or
jnp
scas
cli
dec
inc
or
cmp
repnz
sbb
xchg
imul
enter
shl
mov
roll
xor
sub
cs
sub
sub
push
jae
xchg
sbb
sub
xchg
inc
ficomps
scas
jmp
cmp
push
jge
daa
int3
repz
pop
lock
nop
push
pop
addr16
ds
push
xchg
mov
pusha
fcoms
aad
std
and
xor
int
push
add
outsb
cltd
xor
sbb
inc
ja
mov
arpl
cmp
push
mov
data16
and
or
xchg
jg
arpl
ret
xchg
mov
and
adc
idiv
mov
pop
std
std
test
sub
inc
lcall
outsb
mov
adc
lret
sbbb
in
dec
dec
dec
sub
aam
pop
iret
add
in
sub
cmpsl
test
fdivrp
pushf
icebp
xor
mov
cmpsb
pop
mov
mov
xchg
addl
in
sbb
dec
pop
ss
movsl
jns
cmp
jg
inc
mov
ja
iret
aad
and
ficoml
fstpt
add
dec
adc
int3
xor
add
sahf
inc
cltd
inc
testb
mov
adc
arpl
and
inc
mov
dec
inc
fsubrp
sub
ds
iret
out
mov
call
mov
outsl
xor
add
mov
add
jmp
cmc
and
loope
dec
mov
test
mov
cmpsb
jbe
dec
xchg
sahf
insb
xchg
mov
push
js
jp
or
in
mov
mov
ret
push
or
dec
sub
les
sbb
xor
ja
jns
and
nop
add
fwait
cmp
js
into
cmp
adc
inc
add
les
adc
and
push
loop
add
push
sbb
cli
lcall
movsb
jns
adc
sbb
fnstsw
cmc
or
pop
push
aam
in
mov
sub
fldenv
fnstcw
jne
nop
mov
ret
orb
mov
jmp
cs
push
pushf
cltd
xor
cmpsl
push
lret
orl
adc
pop
dec
loop
xor
shll
and
mov
out
sarb
loop
loop
dec
mov
sahf
and
cmp
push
leave
movsl
sarl
inc
or
sahf
push
pushf
mov
mov
jle
jns
sbb
push
mov
mov
rorl
repnz
jno
push
int3
fidivl
fidivrs
in
and
pop
add
inc
test
aad
pop
add
jns
inc
dec
subb
ror
sbb
inc
sbb
iret
clc
test
mov
push
js
dec
sbb
mov
mov
mov
xlat
jecxz
jno
xchg
cli
jecxz
xor
rcr
btc
mov
and
shrd
xor
jmp
jg
mov
lock
mov
mov
push
in
cld
les
and
xor
jb
pushf
mov
scas
xor
lea
dec
cltd
pop
imul
lret
mov
add
movsl
in
jb
jae
int3
pop
cs
jbe
pop
lds
push
loopne
push
jno
sti
add
mov
inc
std
loop
out
xchg
push
fildl
pushf
mov
dec
sbb
das
repnz
cmp
xchg
xchg
mov
mov
mov
enter
movsl
in
sahf
xchg
pop
movsl
mov
loopne
lods
loop
mov
call
jge
ds
xor
fidivrs
test
push
mov
push
xlat
scas
stos
mov
popf
and
fwait
mov
pop
mov
aaa
adc
nopl
add
adc
pop
stos
xchg
push
sub
cmpsb
stos
pop
sub
xchg
ret
movsl
mov
mov
pop
popa
fisubs
jo
daa
jg
jae
in
cmpsb
xchg
or
imul
jg
repnz
fdivs
das
out
jge
lahf
cmp
outsb
mov
popf
mov
add
and
adc
shlb
push
enter
cltd
ljmp
pop
cmp
shlb
xchg
dec
imul
xchg
lods
jl
mov
lahf
lods
and
in
jge
jns
sbb
enter
shlb
test
or
push
fstpt
popf
int
xor
lods
fimuls
js
pop
dec
test
pop
cltd
aas
out
gs
pop
inc
cltd
mov
sub
ret
enter
cmpb
mov
add
mov
xchg
divl
movsl
out
cltd
out
pop
in
sub
jle
cld
or
stos
call
pop
dec
mov
ds
pop
mov
push
mov
or
mov
mov
iret
jecxz
pushl
jo
fs
call
in
xor
pop
dec
jl
cwtl
bound
pop
mov
or
testl
add
outsb
jae
bound
out
icebp
stc
lods
pop
fucom
fs
mov
clc
shll
jno
aam
xor
lcall
dec
in
sahf
testl
daa
cmp
arpl
out
mov
imul
mov
mov
xchg
leave
xor
add
sub
insl
mov
jmp
inc
scas
inc
mov
arpl
mov
jnp
mov
popf
xchg
rcrb
jecxz
fisttpl
xchg
cmpsl
mov
test
dec
iret
stos
adc
inc
ret
in
jae
das
in
clc
push
add
jae
cmp
dec
dec
xorb
add
xchg
sti
xchg
inc
cltd
push
cmpsb
je
arpl
mov
xor
jbe
pushf
ss
add
fsubrs
subb
lret
dec
cmp
push
ss
ss
xchg
lcall
jb
leave
jle
cmp
call
cmpsb
es
xchg
jle
sahf
mov
into
lods
push
sub
xchg
and
out
es
data16
cmc
std
push
xor
ljmp
jne
ret
inc
sahf
popf
adc
outsb
sub
jb
sbb
dec
popa
stc
sahf
or
repnz
imul
lret
cmp
mov
cmp
push
cmp
pop
add
mov
mov
fwait
es
into
int3
add
test
sbb
leave
dec
bswap
ret
std
mov
aam
sub
jecxz
cmp
dec
inc
jbe
jb
sbb
addb
xor
lock
sahf
jns
addl
pop
inc
pop
icebp
das
adc
or
lret
jns
adc
mov
outsb
ret
ror
cli
push
xchg
bound
pop
pop
adc
enter
pop
enter
in
out
sub
mov
adc
sbb
push
adc
bound
inc
into
out
push
lods
xchg
shlb
je
xchg
addr16
dec
xor
push
sub
cmp
mov
out
lods
outsl
std
jmp
test
sahf
jns
roll
inc
dec
mov
mov
mov
call
pop
mov
sarl
cmp
mov
cli
add
rcr
sahf
mov
dec
int3
adc
iret
and
xor
mov
aad
iret
jne
lods
cmp
movsb
xor
aad
and
jle
cmp
add
cmp
jo
add
mov
or
into
cs
xchg
mov
nop
les
lods
push
ljmp
xchg
mov
popf
jns
jno
out
and
push
jno
xor
pop
orb
inc
dec
inc
add
add
jbe
mov
push
inc
pop
rdpmc
repnz
mov
in
mov
into
mov
mov
mov
dec
leave
int
cmp
lret
data16
pushf
out
mov
xor
lods
or
shll
inc
push
mov
arpl
push
lret
scas
or
cld
inc
out
or
sti
adc
outsb
jp
dec
cmpsb
adc
push
dec
mov
jle
adc
inc
push
test
jns
xchg
sub
mov
lods
and
push
daa
xor
xor
pop
inc
outsl
imul
faddl
je
sub
or
pop
jl
inc
test
sahf
add
push
sahf
mov
mov
sub
inc
and
out
pop
ljmp
lock
out
dec
enter
adc
pop
xor
pushf
pop
addr16
xlat
xchg
lcall
push
out
lock
cltd
push
js
test
or
hlt
enter
in
adc
pop
cmp
dec
stc
popf
and
cmpl
sbb
nop
lods
mov
push
add
add
test
movsb
dec
cmp
fcomp
sbb
push
push
lds
aam
sbb
push
and
fsubrs
pop
rol
pop
add
fsts
adcl
mov
mov
addl
outsl
jle
scas
imul
pop
lcall
sahf
xchg
insb
mov
repz
xlat
pop
cmp
lock
jns
mov
movsl
cmpsl
test
repz
loope
pop
outsb
fisubs
mov
or
in
loopne
adcl
cwtl
call
dec
rolb
fmuls
addr16
decb
stos
sbbb
jl
pop
cwtl
mov
xor
sbb
push
sub
jecxz
jae
jns
stos
add
in
inc
ss
inc
cmpb
add
mov
repz
xchg
shll
sarb
pop
xchg
sbb
or
dec
icebp
mov
mov
xchg
scas
cmp
xchg
or
mov
in
repnz
stos
cld
adc
adc
sti
mov
sbb
jo
push
arpl
sub
jae
dec
sub
mov
orl
or
mov
xlat
xor
lds
js
pop
insl
or
mov
jns
mov
and
push
sbb
shl
push
and
js
stos
out
dec
mov
mov
daa
mov
jo
jp
jnp
rcrl
xor
mov
add
push
pop
insl
aaa
or
xchg
mov
mov
sbb
lcall
fidivrl
aad
arpl
sub
test
int
dec
inc
fisttpl
mov
pop
xchg
jmp
and
and
adc
gs
cmp
xchg
push
lcall
lcall
inc
or
and
outsb
nop
jb
insb
outsb
mov
fldl
sbb
in
lea
push
adc
lahf
imul
xchg
dec
iret
pop
sub
cmp
js
sub
jo
sbb
jecxz
in
dec
movsb
in
scas
or
xchg
dec
xor
push
repnz
sbb
push
adc
push
cltd
jns
cwtl
add
adc
xor
cs
pop
js
enter
push
stos
cs
push
mov
jecxz
ret
pop
imul
je
inc
cs
mov
adc
aaa
jns
daa
outsl
aas
sbb
push
test
outsl
aam
aas
and
pop
rorb
lock
mov
daa
es
out
lret
mov
and
adc
mov
add
sub
jg
shlb
xcrypt-cfb
cmpsl
out
ficomps
pop
mov
cmpsb
out
mov
add
pop
jecxz
sub
movw
pushl
test
pushf
pushl
lea
je
add
ror
rol
sub
add
neg
neg
bsf
btc
mov
jmp
shr
push
call
aas
lds
cltd
jns
xlat
ja
pop
cmp
push
cmp
jg
lcall
xchg
xchg
in
push
stos
xor
push
call
xor
int3
loop
mov
into
sub
popa
adc
inc
push
pop
fcoms
sbb
xchg
les
cmp
das
cmp
clc
int
jae
lret
cmp
mulb
xchg
cli
je
lock
sub
call
pushf
insl
repnz
xor
sub
and
inc
mov
dec
les
xchg
mov
or
mov
xchg
test
in
in
lock
fldt
cmpsl
cli
sahf
xor
das
and
mov
push
push
test
cmc
lahf
lds
xchg
push
dec
jge
outsl
mov
push
lods
or
or
add
jle
cmp
outsb
mov
add
inc
xor
sti
shrl
xlat
ja
es
movsb
scas
cmpsb
je
xchg
push
fmull
or
jecxz
or
fwait
imul
lcall
addr16
sub
stc
fistpll
and
sar
imul
andl
daa
mov
adcb
xor
pop
add
push
dec
mov
mov
cmp
adc
cmp
adc
mov
push
cmp
pop
sahf
jne
xchg
jbe
fwait
sbb
movsl
jp,pt
push
into
push
inc
push
push
int3
mov
adc
and
dec
mov
pushf
lods
adc
mov
adc
test
stc
stos
test
sbb
stos
add
mov
adc
flds
mov
push
cmpb
into
cmp
adc
add
mov
stos
xchg
pop
inc
sub
push
adc
repnz
dec
pop
ret
mov
mov
sbb
push
mov
cmp
sub
in
loop
sub
lods
ds
lahf
testl
leave
mov
xor
inc
or
fs
lea
mov
mov
jmp
mov
cmp
fwait
cmp
sahf
mov
pop
pop
or
jbe
dec
fs
sbb
hlt
ror
sbb
and
mov
push
repz
jns
lret
and
push
repnz
in
push
ds
lcall
fldl
dec
dec
dec
sub
paddusw
inc
sahf
out
add
test
ficompl
lret
pusha
lret
dec
sub
jge
movsb
sti
lea
jno
and
outsl
testl
push
inc
xor
mov
add
mov
lods
jns
sti
inc
out
fs
add
jp
sbb
add
xchg
xchg
jb
scas
pop
jecxz
add
pop
xor
push
jb
in
sub
loop
sub
pop
add
enter
ja
inc
pop
sbb
out
arpl
add
outsb
ret
mov
jmp
mov
into
mov
jno
or
or
pop
in
cmpsl
sbb
lahf
in
fs
das
dec
sub
fsubs
pop
or
stc
sub
in
mov
imul
scas
dec
cmp
mov
push
jp
mov
dec
pop
insl
inc
adc
push
jne
popa
xchg
or
jmp
aas
pop
in
cltd
xchg
lret
test
stos
mov
pop
fabs
mov
out
rcl
push
rclb
push
loope
xor
xchg
and
push
imul
es
loopne
mov
fcomps
scas
cmp
mov
lret
cmc
int
popa
popl
mov
push
jb
scas
aam
sub
in
shrl
fimull
mov
or
aad
xor
cmp
shll
fidivs
mov
test
inc
pusha
mov
inc
inc
out
push
popf
ljmp
popa
adc
lods
and
mov
pop
es
outsl
out
clc
neg
arpl
aad
movsl
cmp
scas
jnp
jmp
sub
adc
sub
out
push
sbb
jnp
cmp
mov
jmp
jmp
add
call
mov
shll
pop
dec
and
lock
sub
out
xor
lds
and
jbe
and
fs
into
push
adc
mov
mov
push
test
sub
mov
aam
test
scas
jge
inc
lret
dec
jmp
call
xchg
mov
into
pushf
cwtl
aam
fcoms
aad
daa
sbbb
nop
loopne
push
out
push
mov
and
daa
xchg
fnsave
shll
xchg
out
xchg
clc
fistpl
sbb
daa
test
add
mov
nop
pushf
fsubs
or
out
sub
call
xchg
aaa
in
addr16
inc
xor
lret
ja
mov
push
cmp
xor
jne
sub
xor
or
cmp
inc
flds
loope
mov
xchg
cmpsb
leave
out
je
cli
fimuls
dec
cmpsb
cld
repnz
sbb
test
push
push
push
xchg
mov
add
sti
and
pop
mov
xchg
mov
and
fs
push
push
rorb
ficoms
xor
mov
jecxz
xchg
lret
push
lock
jno
ja
dec
mov
pop
xchg
jmp
pop
pcmpgtb
mov
clc
xchg
xor
ljmp
or
push
and
sbb
mov
pop
jp
out
jge
push
clc
xor
jae
pop
push
sub
mov
or
das
and
xchg
in
je
cwtl
pop
dec
dec
add
ud0
leave
or
in
mov
inc
loope
nopl
mov
mov
mov
or
sbb
mov
xlat
push
repz
ss
jbe,pn
mov
adc
xchg
cmp
inc
push
fildll
arpl
cmp
fidivl
fwait
jg
aas
mov
jo
dec
in
mov
repz
mov
cmp
add
repz
mov
inc
arpl
inc
pop
std
out
lods
lret
sbb
lcall
je
ds
fucomip
mov
cmp
push
adc
inc
xor
fs
push
mov
pop
out
dec
push
rcrb
jns
xchg
cmp
or
movsl
push
xlat
in
push
inc
sbb
data16
rol
xor
int
pop
cmpsl
aas
or
mov
shll
lcall
shrl
xor
jecxz
push
scas
mov
or
in
imul
dec
mov
cmpsb
mov
and
sbb
ja
jb
enter
adcb
and
jge
out
out
jno
notl
aas
mov
and
mov
xchg
call
xor
mov
sbb
scas
mov
xor
and
fidivs
add
shll
arpl
mov
icebp
loope
fldt
sub
loop
and
cmp
xchg
imul
jge
sti
jnp
test
stos
mov
leave
mov
sub
mov
xchg
and
in
mov
mov
adc
xchg
orb
jae
arpl
lods
loope
cmp
mov
pop
sti
adc
push
sub
je
lods
dec
or
dec
pop
imul
jmp
xor
sbb
mov
and
mov
lods
jp
mov
dec
add
loopne
mov
push
into
in
jl
std
ss
scas
xlat
push
lds
rcr
and
inc
nop
popf
pop
dec
sub
addl
ss
lea
pop
pusha
sub
rcrb
or
lea
mov
push
push
mov
fs
mov
jne
inc
out
shll
cmc
pop
movntq
mov
jnp
xorb
test
cmp
xchg
popa
stos
call
pusha
jae
out
fwait
sbb
rorb
cmp
or
adcb
mov
xorl
fdiv
inc
jb
xorb
pushl
dec
and
or
dec
sahf
cmc
lahf
cmp
out
push
cmp
mov
mov
clc
mov
test
mov
dec
xlat
lcall
inc
in
jne
outsl
dec
lret
mov
and
out
and
cltd
push
cmp
out
orl
loopne
cli
jle
xchg
sub
je,pn
xlat
push
in
lret
cli
rcl
lock
lds
mov
mov
inc
leave
jmp
xchg
cmp
dec
pop
inc
scas
stos
ror
sbb
fs
cmp
popf
shl
fiadds
mov
mull
cmp
inc
sbb
push
push
ljmp
ja
shl
ja
dec
mov
stos
push
mov
mov
sbb
add
sub
push
and
cmp
inc
mov
cs
daa
mov
inc
jge
cmp
cld
mov
jo
xchg
jecxz
pop
jns
scas
pop
je
rcrl
in
mul
mov
popf
xchg
lock
mov
sub
cld
insb
jp
cltd
xor
mov
test
cmc
add
add
adc
rclb
and
jmp
icebp
outsb
sbb
int3
lret
xor
pop
outsl
aam
fwait
daa
and
dec
or
mov
test
xchg
bound
mov
mov
jmp
jbe
or
xor
push
or
adc
int3
std
lret
and
xchg
int
test
js
in
and
data16
sbb
inc
test
jl
jl
ja
xor
dec
xor
ja
pop
hlt
int3
mov
sub
xlat
adc
imul
in
loopne
pop
inc
loope
js
mov
sub
cmp
mov
addb
fiadds
outsl
xor
pop
push
test
addr16
jl
repz
pop
mov
mov
scas
or
push
lcall
fwait
add
add
xchg
sbb
push
sbb
shl
movsb
xlat
ja
loope
orb
sub
cmpl
hlt
sahf
mov
adc
sbb
bound
das
ror
gs
sti
addr16
mov
cmp
test
adc
clc
inc
and
and
imul
add
sub
aas
dec
xchg
mov
dec
inc
and
int
fcmove
xchg
out
sbb
sbb
jmp
rcl
push
cmc
movsl
add
mov
mov
lds
and
insb
cwtl
and
push
divb
dec
in
lahf
sti
outsl
gs
cmp
mov
nop
mov
pop
test
in
adc
sub
scas
insb
int
lcall
xor
in
testl
mov
mov
out
mov
pop
mov
sbb
xor
push
std
imul
xchg
sti
gs
pop
pop
jmp
decb
dec
jb
and
aaa
and
push
fadd
rcl
test
mov
cmp
mov
test
dec
int3
lods
in
xchg
xor
sti
mov
clc
fstps
inc
sbb
mov
mov
cmp
or
sti
dec
ret
mov
pop
call
sti
mov
sbb
xchg
ss
testb
ljmp
mov
or
popf
sbb
mov
rcl
scas
movsl
jno
xor
imul
rclb
mov
push
inc
cld
adc
daa
jecxz
fsubrs
mov
lahf
sub
out
mov
mov
leave
mov
out
push
cmc
stc
das
in
pop
loope
paddsw
int
outsl
pop
xor
cmp
dec
iret
lods
mov
mov
mov
xchg
popa
mov
fdivl
nop
inc
dec
mov
daa
add
jmp
shll
int
lret
pop
inc
xchg
jnp
lea
pop
cmp
ret
ret
les
mov
jp
mov
lret
cltd
fildll
pop
cmp
pop
negb
les
add
adc
nop
cmpsb
mov
mov
pusha
jecxz
sub
icebp
or
sub
or
mov
lock
cld
jl
cmp
mov
and
outsb
inc
clc
or
push
inc
repnz
mov
outsl
leave
rclb
orl
mov
movsb
add
mov
aaa
loop
mov
lcall
pop
cmp
or
inc
xchg
add
mov
imul
andl
push
cltd
jno
jle
lcall
jmp
fistpl
insl
arpl
jge
add
pushl
jne
lods
push
dec
mov
shll
rcl
sbb
test
mov
test
divl
ds
jmp
leave
aad
es
sub
rcrl
xchg
add
aam
add
pop
aad
sbb
xor
push
push
je
mov
inc
jmp
sbb
jmp
inc
add
mov
stos
mov
cmpsb
fwait
gs
repnz
mov
dec
iret
fdivs
lock
adcb
out
inc
lcall
mov
push
daa
cmp
pop
jae
xor
dec
sti
jae
in
fcoms
mov
cwtl
mov
adc
jb
shlb
mov
ret
enter
push
fbld
nop
or
lahf
lahf
sub
mov
pand
loop
sub
cmp
daa
lret
addr16
test
xor
movb
xor
jbe
int3
loopne
fidivl
cmpb
jnp
je
mov
in
or
out
and
adcl
adc
shll
fiadds
clc
lea
xorl
dec
inc
insb
add
adc
sub
sbb
in
stc
insl
mov
repnz
daa
pushf
jp
pop
js
inc
jl
popf
outsl
addr16
leave
insl
cli
in
pop
fwait
syscall
inc
xchg
enter
pop
aam
inc
into
lds
pop
fs
and
fstps
ficoml
cmp
les
stc
call
dec
movl
jl
cmp
std
sbb
pop
mov
je
out
cs
or
inc
mov
xlat
pushf
cli
mov
pop
push
cmp
shlb
fwait
and
aad
mov
ljmp
cmpsb
xor
xor
aam
or
lret
pop
repz
cld
fs
mov
cmpsl
incb
lret
dec
fildll
pushl
in
hlt
jle
sbb
mov
lahf
aaa
cli
jle,pt
xor
xchg
add
addr16
pushf
mov
dec
cmp
sahf
loopne
clc
data16
insb
push
rcrl
stos
imulb
mov
lods
arpl
pop
pusha
das
not
lret
pop
lahf
sub
sub
mov
sbb
aad
cmp
insl
pop
or
mov
and
jecxz
lock
mov
mov
ljmp
int3
sub
in
bound
push
fiadds
adcb
adc
add
mov
xchg
leave
cmp
into
fcmovu
push
adc
mov
shlb
inc
es
out
jbe
fwait
aad
inc
nop
mov
shll
popf
jg
imul
or
pop
sbb
outsl
movsl
fs
insl
in
pop
push
jnp
cld
fmulp
xor
adc
stos
lret
sbb
push
inc
pop
pushf
aad
pop
rcrb
iret
mov
xor
push
dec
shufps
jecxz
addr16
mov
dec
pop
sub
xorl
std
push
stos
arpl
aam
pop
sub
repnz
push
xor
mov
and
xor
sub
loopne
pop
jmp
and
or
push
aaa
lods
mov
int
fs
inc
sub
dec
jno
xor
filds
cmp
aam
and
mov
mov
mov
pop
inc
lret
or
and
stc
cmp
sub
mov
dec
mov
push
sub
push
cmpsb
mov
stos
dec
pop
mov
insl
rcr
out
mov
mov
icebp
push
testl
stc
gs
dec
mov
decl
nop
dec
dec
mov
test
loop
mov
in
test
sbb
add
mov
mov
ljmp
call
ret
pop
xchg
out
mov
aad
in
add
mov
std
bound
dec
ret
cld
lret
xchg
cmp
popa
or
jae
adc
cmp
sub
adc
int
dec
pop
test
loope
inc
push
push
push
dec
insb
ror
stos
mov
scas
sub
std
inc
aaa
cmpsl
adc
mov
add
inc
jne
out
imul
or
jl
push
ss
sub
enter
cmc
andl
jne
in
jne
push
aam
push
popa
add
ret
cmpsl
or
test
insl
stos
sti
iret
push
add
xchg
fcoms
xchg
sub
adc
pop
xor
dec
inc
xor
and
jl
xchg
mov
addr16
jge
outsl
outsl
dec
inc
xchg
push
push
sbb
push
frstor
pop
add
xchg
leave
stos
pop
xor
lds
lcall
in
xchg
mov
pop
aad
inc
push
leave
insl
lahf
adc
or
movsl
repz
mov
inc
orl
in
cmpb
shlb
mov
aaa
stos
cmpsb
in
ret
js
xor
jb
mov
stc
jg
push
xorb
sarb
js
jb
add
xchg
xchg
loop
js
lahf
push
push
cmp
jns
xchg
mov
mov
sbb
sbb
jg
mov
inc
pop
pop
xchg
mov
insb
ds
fwait
out
xor
ss
xor
test
adc
xchg
mov
ret
inc
hlt
ror
frstor
fsubl
addr16
sbb
in
sub
or
xor
jne
addr16
jl
negb
mov
cmp
inc
scas
fimuls
in
sbb
sub
push
jne
xchg
mov
inc
push
cli
push
mov
or
push
test
rcll
out
cmp
call
sahf
cmp
repz
sub
dec
fidivrs
lds
cmp
mov
sub
inc
das
sbb
add
dec
xchg
repz
push
loopne
ja
sbb
push
pop
dec
cmpsb
jbe
push
dec
and
add
bound
mov
sbb
in
gs
lret
enter
xor
lret
or
xor
lods
xorl
pop
and
xor
mov
xchg
adc
lcall
imul
push
cmc
fnsetpm(287
fildll
stc
icebp
lret
loopne
aas
fildll
sub
adc
xchg
hlt
pop
lods
sbb
mov
in
dec
xor
push
movsl
aas
mov
bound
cltd
and
inc
lcall
lods
jle
dec
lret
sbb
js
inc
fcmove
divl
sar
or
orb
push
daa
xchg
je
cltd
daa
or
pusha
sub
lock
jle
repnz
jle
sub
push
insl
test
je
sub
xchg
stos
mov
inc
in
push
push
mov
fidivs
mov
sub
pop
js
je
jmp
sbb
lods
dec
mov
pusha
mov
sbb
in
mov
mov
mov
js
push
rorb
imul
inc
xchg
sbb
dec
pop
insb
add
in
cmp
xor
inc
movntq
mov
cs
push
sub
mov
sbb
test
jae
fldcw
and
or
scas
inc
adc
fsts
adc
jno
add
sub
dec
cld
pop
sbb
inc
inc
call
bnd
imul
cmp
xor
insl
add
cmc
out
out
cmp
jo
shlb
xchg
or
push
inc
xor
push
mov
mov
push
adc
mov
cwtl
add
mov
jne
xchg
pop
lods
mov
rcr
in
pop
add
dec
jo
rcrb
cmp
cltd
jge
leave
mov
fucomip
inc
add
adc
push
rcrl
cmp
and
shl
push
mov
mov
mov
mov
adcl
test
mov
bnd
aad
mov
fnstenv
pop
into
cmpsl
pop
push
or
pop
push
aaa
inc
stc
add
or
test
cmp
jle
mov
mov
loop
pushf
imul
out
xchg
and
test
adcl
test
rcrl
xchg
insl
pop
mov
dec
inc
cmpb
xchg
cmpsl
mov
push
pop
jae
inc
faddl
cs
push
and
pushw
aaa
lods
out
dec
imul
xor
cmc
scas
shrb
or
mov
dec
xchg
pop
sbb
jbe
mov
std
adc
xchg
rcrl
in
push
jle
sub
mov
movsb
lods
lahf
mov
jae
cmp
nop
push
push
cmp
repz
jl
cmp
hlt
sahf
add
lcall
or
dec
mov
cmp
mov
push
push
filds
xchg
mov
dec
rolb
dec
and
ret
nop
inc
or
leave
mov
xchg
das
fistps
call
mov
xor
mov
cld
sub
lea
mov
xchg
pop
add
pusha
inc
mov
mov
imul
hlt
fs
push
mov
mov
icebp
adc
lds
mov
fisubrs
xchg
pop
mov
inc
or
mov
or
mov
iret
pop
sub
lea
shrb
aam
test
pop
mov
jne
push
stc
pop
ret
sar
rorb
divl
loope
int3
mov
repnz
jp
sbb
notb
cmp
clc
ret
cmp
insl
negl
sub
add
notb
nop
xor
mov
xchg
arpl
sbb
nop
lods
adc
popf
jnp
inc
es
and
test
and
dec
push
sahf
mov
hlt
je
adc
mov
lahf
ljmp
fcoml
add
add
loopne
sbb
ds
mov
xchg
mov
out
push
addr16
iret
xchg
scas
xchg
cmpsl
lea
sbb
clc
push
daa
outsl
das
std
sbb
push
jecxz
aas
jne
mov
loop
loopne
les
inc
or
sbbl
dec
sub
shl
fldenv
sub
insb
adcl
cltd
mov
dec
test
adc
adc
popa
xchg
adc
repnz
jbe
ljmp
mov
call
ljmp
das
adc
ss
and
sub
push
sub
xor
inc
fldcw
ss
out
sarl
cmpb
repz
test
lods
xchg
mov
rorl
and
mov
std
push
aas
sbb
dec
leave
cld
aaa
or
jg
inc
insl
lds
dec
loope
inc
mov
fs
jmp
incl
jns
outsl
cmp
push
dec
pop
jge
jne
jns
inc
mov
push
fldenv
mov
adc
jge
pop
mov
pop
lahf
adc
lods
mov
mov
sub
push
repz
inc
and
inc
xor
lahf
mov
sti
shrl
or
shrb
int
ljmp
dec
bound
cltd
add
lods
cmpsl
dec
sbb
pusha
in
repz
popa
inc
dec
jge
push
popf
mov
popf
jl
push
pop
sub
lret
sbb
adc
lret
push
add
sub
push
shr
pushf
mov
stc
shr
stc
cmp
movb
lea
je
clc
cmp
jp
pusha
movb
lea
je
stc
jmp
push
lea
jne
add
ror
mov
btr
bsf
not
rcr
sub
btc
shld
bsr
mov
pusha
jmp
mov
add
lock
aam
in
out
push
in
or
xor
psubq
pusha
rcrb
fbld
lahf
int
jnp
pop
dec
popa
in
loope
in
or
mov
or
mov
cld
xor
arpl
inc
add
mov
lcall
xchg
jge
lods
popf
jmp
aaa
push
mov
idivl
xchg
adc
push
push
and
and
cmp
es
mov
fiaddl
pop
xchg
add
aad
dec
fstpt
cmpsb
ret
leave
mov
mov
cmpsl
jns
jne
test
cli
into
jecxz
loop
sub
lds
testl
in
mov
outsb
rcrl
sub
cmp
ret
ss
stc
out
xchg
mov
xchg
pop
in
mov
insl
sbb
inc
popf
inc
mov
xor
imul
cmp
xor
das
inc
and
dec
sub
push
dec
out
cld
hlt
mov
pop
cmp
mov
pusha
movw
pushf
pushf
pushl
ret
cmc
ror
bt
cmc
sub
pusha
cmc
pushf
jmp
inc
xchg
or
cmpsb
movsl
cmp
sti
std
sub
sub
adcl
jns
cmp
cld
lret
sbb
cmp
inc
aas
xlat
test
xor
dec
ljmp
sahf
sub
loopne
incl
xor
icebp
divl
push
test
mov
push
cld
cmpsb
push
push
dec
les
dec
pusha
cmp
lea
out
or
inc
sub
bound
fidivrl
icebp
cs
xchg
cmpsb
inc
movsbw
pusha
mov
pusha
push
push
pushf
pushl
ret
lret
jl
cmpsb
inc
inc
add
inc
and
adc
cmpsb
repnz
lods
xor
sbb
icebp
pop
mov
dec
pop
ljmp
in
dec
loop
xor
jno
add
push
pop
jo
scas
cmp
mov
xor
out
xchg
add
outsb
jns
jp
mov
loope
dec
popa
mov
arpl
sbb
movsl
jbe
test
fisubrl
out
or
push
xchg
mov
add
cmp
mov
fstpl
rcl
cmpsl
push
xchg
sti
push
mov
add
add
xchg
sub
and
adc
ljmp
int3
xchg
add
es
shl
insb
mov
adc
xchg
or
clc
outsb
xorl
hlt
cli
jecxz
mov
jmp
xor
incl
shl
or
dec
and
cmp
add
repnz
mov
inc
and
cltd
pushl
ret
adc
pushf
lea
jae
pusha
push
pushf
jmp
pop
add
jns
pop
sub
js
pop
mov
pop
lea
push
jmp
in
test
dec
outsb
cmpsb
js
or
enter
inc
xor
and
and
xchg
loope
sti
pop
movl
jne
scas
cltd
cmp
bound
cmpb
lfs
adc
pop
jp
fsubs
test
bound
repnz
mov
cmp
mov
rorb
rcll
daa
in
mov
mov
test
or
int
and
imull
add
adc
mov
in
in
and
xor
and
repnz
mov
inc
ss
push
fmulp
mov
lock
call
into
outsb
or
push
cli
das
cmp
cmp
test
repnz
sar
dec
rcr
int
dec
and
cld
add
call
rclb
xor
imul
sahf
push
arpl
leave
cmp
jae
pop
addr16
outsb
cld
sbb
xchg
leave
mov
fsubs
push
loopne
clc
out
push
pop
js
inc
je
xor
jl
stos
das
pop
out
movb
movsb
je
mov
clc
int3
mov
or
ja
sub
sbbb
outsb
xchg
insl
add
sti
lods
xchg
mov
sbb
xchg
pop
or
and
stc
and
mov
ljmp
pop
dec
daa
cmp
xchg
es
stc
or
mov
into
movsb
stos
mov
mov
fisttps
adcl
sub
aam
mov
mov
lcall
test
lahf
jnp
inc
or
and
das
sti
mov
adc
sbb
xor
xorb
xchg
lret
pop
lods
push
or
std
sar
stc
gs
jp
loop
stc
fxch
mov
mov
lea
jne
not
cwtl
movb
push
movsbl
not
lahf
mov
mov
lea
pushf
lea
call
add
ja
jbe
dec
jne
push
jb
je
add
mov
inc
insb
outsl
jae
push
jb
outsb
je
jb
pusha
lea
ja
jmp
bswap
pushl
mov
bswap
movzbw
not
mov
setp
movsbw
bswap
mov
pushf
mov
push
not
pusha
bswap
mov
push
pushl
movb
pushf
pushl
ret
mov
push
js
cmpsb
repz
cmp
test
test
xchg
fwait
and
mov
cmp
push
xchg
test
pop
std
pop
pop
fdivl
mov
add
xchg
dec
mov
adc
inc
mov
pop
stos
inc
lock
mov
fadds
xor
ficoms
ret
int3
mov
and
add
pop
push
or
cmc
adc
inc
aaa
adc
dec
jns
test
and
vaddss
and
ret
js
cmpsb
pusha
call
dec
cmp
cmp
cmp
je
fnsave
sbb
fnstcw
sahf
push
push
dec
pusha
push
shlb
loope
dec
loop
ror
inc
shlb
loopne
cwtl
es
das
ljmp
lods
pop
aas
lretw
and
xor
and
pop
lcall
repnz
bound
lcall
mov
call
shl
xor
pusha
bswap
movzbl
sub
movzbw
stc
shld
lea
not
pop
sar
and
or
and
cmp
mov
pushf
sub
lea
jge
push
push
mov
pusha
lea
jmp
setge
cwtl
mov
call
shrd
inc
das
mov
bts
jmp
pusha
pusha
mov
call
pusha
bts
call
mov
push
push
lea
jmp
mov
bswap
mov
jmp
lea
lea
jae
pushf
mov
pushf
pushf
lea
jmp
call
pusha
pushf
mov
jmp
pop
add
sbbl
adc
cwtl
sbbl
xchg
pop
xorl
pop
or
xchg
pop
sbbl
daa
pop
add
push
pop
subl
xchg
pop
orl
adc
and
pop
add
ficomps
test
pop
cmpl
and
subl
pop
xorl
pop
xorl
sti
pop
cmpl
mov
pop
add
daa
pop
xorl
iret
pop
andl
pop
cmpl
xchg
pop
andl
and
cmpl
sbb
cwtl
pop
sub
push
pop
xorl
sbb
and
pop
adc
xor
sbb
ss
subl
cwtl
pop
xorl
out
pop
xorl
sti
pop
add
iret
pop
orl
rcrl
rcrl
cwtl
pop
xorl
pop
pop
sub
loope
xorl
jmp
pop
or
cwtl
pop
sub
outsl
pop
xorl
sti
pop
adc
xor
xorl
fistpl
and
pop
xorl
and
rcr
or
mov
pop
orl
jb
sbbl
push
pop
addl
jmp
sub
xchg
jo
pop
andl
sbbl
jb
xorl
pop
and
fistpl
fsubs
orl
pop
sub
xor
xorl
pop
xorl
pop
andl
jb
sbbl
or
sbbl
push
cmpl
das
pop
xorl
pop
cmpl
pop
cmpl
or
cmpl
ss
orl
ss
cmpl
ficompl
mov
pop
adcl
daa
pop
andl
xchg
pop
andl
or
andl
xchg
pop
addl
loope
xorl
xchg
pop
addl
rcrl
dec
jp
adcl
pop
or
loope
xorl
lret
add
cmp
adc
nop
adc
call
push
pop
sbbl
inc
pop
cmpl
push
sbbl
xor
pop
cmpl
pop
add
xor
sub
pop
pop
subl
pop
subl
pop
xorl
ficomps
cmp
sub
xor
cmp
pop
pop
add
xchg
pop
sbbl
xchg
pop
add
adc
mov
pop
add
ss
subl
xchg
pop
andl
mov
pop
addl
adc
loopne
pop
add
ss
subl
xchg
pop
sbb
adc
mov
pop
add
ss
subl
xchg
pop
orl
mov
pop
sub
adc
cmp
mov
movb
pushf
lea
jmp
add
pushf
mov
pushl
pusha
push
lea
jmp
mov
mov
lea
jmp
xor
lea
jle
push
push
pushl
inc
push
decl
movb
call
jmp
shl
jmp
inc
neg
bt
movzbl
call
pusha
bsr
btc
shl
mov
movl
bt
pushf
lea
bt
sub
cmc
pusha
bt
xchg
stc
cmc
call
pusha
call
sar
rol
bsf
rcr
mov
inc
not
dec
and
mov
bt
bt
push
add
call
call
cmc
inc
mov
call
mov
lea
pushf
call
bt
push
add
bt
sub
jmp
push
mov
pushl
pushl
pusha
pushf
lea
jmp
call
pushf
popl
pushl
pushl
popl
movb
pushf
movl
push
lea
jmp
pushf
popl
mov
pushl
popl
pushf
lea
jmp
mov
pushf
pusha
push
lea
jmp
call
jmp
pusha
mov
mov
movb
lea
jmp
add
jmp
and
pushf
movw
push
mov
movb
push
call
and
mov
stc
sub
pushf
pusha
dec
bt
ror
jmp
neg
test
xor
pushf
call
mov
push
movb
lea
jmp
pushl
popl
pushf
movw
pushf
movl
lea
jmp
call
call
xor
cmp
sub
jmp
pushf
jmp
pop
pushf
pushf
pop
push
push
mov
bswap
pushf
lea
jmp
bts
bts
mov
or
neg
mov
cmp
add
call
pushf
popl
push
pushf
pushf
call
movl
pushf
popl
pushf
jmp
bt
clc
call
pushf
pushf
mov
mov
call
jnp
clc
add
push
pushl
pusha
lea
jmp
call
movl
pushl
popl
movl
mov
lea
jmp
lahf
btc
rcr
sub
mov
pushf
pusha
push
push
sub
lea
jle
pusha
mov
mov
lea
jmp
mov
bt
add
cmc
mov
rcr
ror
pusha
add
mov
clc
cmc
sub
movb
shl
call
jmp
jmp
cmp
pusha
add
pusha
push
push
movw
mov
mov
pushf
mov
lea
jmp
xor
mov
clc
pushf
pushf
pusha
sub
call
pushf
mov
pushl
mov
pushf
mov
pushf
pushf
lea
jmp
pushf
jmp
pushf
pusha
mov
inc
lea
ja
push
decl
movb
lea
jne
push
jmp
clc
test
not
test
and
jmp
sub
bt
bt
sub
pushl
mov
pushf
add
jl
cmp
sub
push
jmp
cmp
shr
jmp
pushf
mov
mov
movb
jmp
pushf
mov
pushf
movw
lea
jmp
not
movsbw
pushf
call
rcr
mov
shr
bt
shr
inc
mov
bt
sub
push
bt
clc
shr
push
pusha
call
and
call
jmp
mov
bswap
push
test
mov
cmp
setae
sar
add
jl
mov
jmp
aam
xadd
add
aaa
mov
or
btr
jmp
mov
pusha
call
mov
call
pusha
pusha
mov
push
lea
jmp
call
pusha
lea
jne
pushf
push
mov
pushf
mov
pushf
pusha
movw
lea
jmp
shld
mov
xor
and
shl
xor
pusha
clc
ror
rol
neg
adc
bt
xor
not
xor
setbe
inc
jmp
pusha
mov
push
mov
movb
movb
lea
jmp
divl
movl
pushf
mov
movb
mov
pushf
pushf
popl
call
neg
cmp
push
cmc
xchg
jmp
jmp
mov
movw
pusha
lea
jmp
mov
call
mov
pushf
pusha
pushf
mov
mov
pushf
lea
jmp
xor
adc
dec
mov
movzbw
or
shld
mov
cmc
bt
call
pusha
sub
call
push
movw
movw
mov
pusha
movw
jmp
shl
cwtl
aad
and
mov
rcl
call
mov
mov
mov
pusha
pusha
movb
push
lea
jmp
pusha
pushf
mov
pusha
mov
call
sar
sub
shr
movzbl
add
sub
movzbw
pushf
movzbw
bswap
dec
pushf
not
ror
call
mov
mov
jmp
mov
movzbl
lea
lea
push
movzbw
pusha
bswap
not
repz
popl
call
mov
bswap
sbb
shl
shrd
mov
call
movsbw
or
bsr
cwtl
mov
adc
dec
push
mov
clc
add
mov
mov
pusha
mov
mov
lea
jmp
pushf
mov
call
add
call
mov
test
not
cmc
pusha
not
cmp
jmp
xor
push
cbtw
pushf
mov
pushl
cwtl
cmp
cmc
cmp
stc
sub
call
mov
pop
mov
call
mov
pushl
push
mov
push
mov
push
mov
lea
jne
and
mov
stc
jae
and
call
mov
pushf
popl
movw
lea
jle
popl
pusha
pushf
lea
jmp
pushf
popl
pushf
movl
push
pushl
popl
movb
pushf
lea
jmp
pushf
mov
jmp
movb
pusha
mov
push
lea
jmp
movb
mov
pushf
pushf
pushf
lea
jmp
cmc
movl
add
cmc
movb
bt
mov
cmp
pushl
sub
pushl
pushf
mov
pushf
mov
lea
jmp
btr
movsbw
rcr
cmp
mov
test
push
bt
sub
pusha
cmc
add
jmp
add
lea
lea
bsf
rol
cmp
bsr
mov
cmp
sbb
add
bswap
shl
mov
cmc
movzbl
add
bsr
not
cmc
sub
shld
add
bswap
mov
neg
rcr
shr
bts
dec
add
bt
bt
movzbl
not
lea
movzbw
mov
pusha
bt
ror
clc
lea
jnp
test
lea
jmp
mov
movb
pusha
push
pushf
popl
pushf
pushl
popl
movb
pushf
lea
jmp
call
btr
pop
adc
pop
std
pop
not
popf
not
cwtl
pusha
bswap
mov
movzbw
call
pushf
mov
pusha
pushf
push
movw
lea
jmp
movw
mov
pushf
call
call
jmp
push
pusha
mov
call
pop
xchg
mov
pusha
movw
mov
push
pushf
pushl
ret
bsr
adc
shl
mov
clc
cmc
bt
sub
push
call
pusha
push
mov
mov
pusha
pushl
pushl
lea
jmp
mov
pushl
popl
mov
lea
jmp
mov
jmp
add
add
push
cmp
cmp
cmp
movb
pusha
pushf
lea
jne
shrd
btc
pusha
xorb
lea
sete
mov
lea
pop
pushf
mov
pushf
lea
jmp
std
std
xchg
not
std
movzbw
pushf
mov
jmp
and
mov
jmp
dec
jmp
jmp
movsbw
call
pusha
mov
mov
mov
mov
mov
pusha
lea
jmp
pushf
pusha
pusha
pushf
decl
jmp
xorb
pusha
mov
push
push
movb
pushl
lea
jmp
clc
neg
bt
clc
movb
xchg
bt
sub
lea
jge
cmp
pusha
stc
sub
call
ror
neg
shl
mov
cmc
jmp
add
movb
jmp
mov
call
call
pushf
push
mov
pushf
movb
pushl
ret
call
shr
movzbw
or
xor
rcr
sbb
sub
movzbw
stc
ror
not
cmp
and
shld
shl
mov
mov
call
inc
mov
jmp
cmp
call
pushl
popl
mov
mov
lea
jmp
pushf
mov
pusha
push
lea
jmp
jmp
push
shrd
mov
call
call
cmp
stc
add
pushf
mov
mov
call
mov
dec
stc
add
jmp
add
ja
rcl
mov
jmp
lea
ja
push
pusha
pushf
pushf
pushl
ret
lea
js
push
pushf
jmp
jmp
mov
call
test
cmp
movzbl
call
rol
mov
shl
notl
rcl
not
aam
shl
mov
cmc
pusha
cmc
pusha
sub
jmp
pushf
mov
pusha
pushf
push
lea
jmp
push
mov
mov
call
bswap
dec
mov
jmp
cmp
mov
cmp
cmp
add
pusha
mov
lea
jmp
pusha
pusha
pushf
call
mov
pushl
pusha
push
pushf
lea
jmp
mov
pushf
push
lea
jmp
cmp
add
jmp
pusha
mov
pushf
pushf
mov
pushf
lea
jmp
mov
pushl
movw
lea
jmp
movb
mov
pushf
pusha
jmp
call
xor
cmp
xchg
stc
stc
stc
cmp
push
test
jne
cmc
stc
sub
pushf
push
mov
movw
lea
jne
stc
xor
pusha
jmp
pusha
movzbl
pushf
test
call
neg
bt
add
js
add
cmc
sub
pusha
push
push
mov
push
lea
jmp
jmp
pushl
popl
movw
push
mov
lea
jmp
call
bsr
push
add
call
pushf
mov
pushf
shld
bt
adc
mov
jmp
mov
mov
pusha
pushf
mov
lea
jmp
mov
pushf
mov
push
lea
jmp
call
mov
pushf
pusha
lea
jmp
mov
call
jmp
stc
sub
pusha
mov
mov
pushf
pusha
pushl
pushf
lea
jmp
call
bt
jmp
mov
pushf
pushl
pushf
mov
push
lea
jmp
sub
test
pusha
stc
add
test
bt
movb
xchg
cmc
cmp
push
jmp
pushl
call
xchg
push
pushf
movl
mov
pushl
jmp
ror
bts
stc
xchg
mov
push
stc
sub
bt
add
call
mov
pushf
pusha
lea
jmp
bt
call
push
pushf
lea
cpuid
clc
stc
test
push
sub
pushf
push
cmpl
call
ror
pusha
neg
cmp
cmp
cmp
test
xor
jmp
rcl
btr
lea
inc
stc
mov
and
shr
sub
not
bswap
call
inc
bt
mov
btc
sar
add
pushf
xor
lea
shl
rol
call
jmp
lea
lahf
push
mov
lahf
call
jmp
mov
jmp
cmc
pushf
jmp
shl
cmc
btc
stc
mov
bt
bt
mov
stc
cmc
add
jmp
call
push
jmp
adc
mov
cmp
pushf
pusha
cmc
add
cmc
cmp
shld
pusha
jmp
cmc
cmc
clc
add
push
lea
jmp
pusha
mov
pusha
jmp
mov
push
push
pusha
push
pushl
ret
pushl
popl
pushl
push
mov
lea
jmp
sete
shl
mov
mov
stc
add
cmp
bt
bt
test
shrd
pushl
mov
mov
pushf
popl
pushf
push
push
pushl
popl
pusha
pushf
pushf
lea
jmp
stc
adc
rol
mov
bswap
cmc
xor
pushl
popl
setle
rcl
movl
lea
pushl
shrd
test
mov
bswap
sub
cmc
pop
movsbw
mov
bswap
btr
cmc
rcr
rol
pusha
xor
lea
rol
sub
dec
sub
call
pushl
popl
pushf
mov
push
lea
jmp
ror
stc
xor
test
mov
call
jmp
call
jmp
mov
bt
test
push
add
stc
lea
push
clc
pushl
jmp
push
xchg
mov
movl
pushf
pushf
mov
pusha
pushf
pushl
ret
call
pop
mov
call
pusha
pushf
popl
movb
pushl
popl
pushf
movb
lea
jmp
daa
shl
aaa
mov
pushf
inc
mov
pushf
movw
sub
cmp
bt
test
shl
call
mov
mov
push
pushf
popl
call
push
mov
mov
pusha
pushl
mov
lea
jmp
cmp
sub
cmc
jmp
lea
jns
mov
pusha
pushf
pushf
lea
jmp
clc
cmc
pushf
pusha
lea
pusha
push
stc
bt
add
jmp
movl
movl
mov
pushl
pushf
popl
pushf
push
pushl
pushl
pushl
popl
pushf
lea
jmp
lea
jae
mov
pushf
lea
jmp
mov
pushf
test
push
shl
cmc
shr
bt
bt
cmp
or
bt
jmp
mov
pushf
bt
cmc
call
sub
bt
shr
call
movzbw
shl
shrd
rdtsc
test
stc
pusha
sub
movl
pushf
movb
pushf
mov
push
pushl
mov
push
lea
jmp
call
pushf
popl
pushf
pushl
popl
push
pushf
pushf
lea
jmp
pushf
pusha
pusha
mov
jmp
mov
pushf
lea
jmp
mov
mov
pushf
pushf
call
pusha
mov
mov
pusha
mov
lea
jmp
rep
shrd
mov
bswap
btr
pop
mov
cmp
pushl
popf
push
lea
jmp
clc
add
jmp
bswap
pushf
mov
lea
push
xchg
mov
bswap
movzbl
pop
mov
pushf
pushf
pushl
ret
pushl
popl
pushf
movw
lea
jmp
pushf
movw
jmp
pushf
call
clc
pusha
jmp
shl
bswap
aad
mov
pusha
cmc
add
call
mov
pusha
call
call
test
bt
pusha
sub
pusha
pushf
pushf
lea
jne
push
bt
cmc
sub
call
pushf
pusha
mov
call
pusha
pusha
mov
movzbw
mov
lea
pusha
mov
not
bswap
mov
movsbw
mov
setge
mov
push
not
seta
xchg
mov
call
pushf
push
lea
pushf
call
mov
pusha
pushf
pushl
popl
pushf
movw
mov
movl
lea
jmp
pushl
mov
pusha
push
movb
lea
jmp
cmc
push
mov
push
movb
stc
or
mov
mov
push
lea
je
cmp
cmp
jmp
jmp
pushf
add
mov
sub
lea
jl
push
pusha
mov
push
mov
lea
jmp
push
mov
pusha
mov
pushf
lea
jmp
call
pushf
jmp
pushf
jmp
stc
pusha
add
movb
pusha
test
cmp
shld
call
push
jmp
jmp
pushf
call
mov
mov
lea
jmp
bt
pushf
pusha
bt
pushl
popl
pushl
pusha
cmp
movb
add
std
jmp
shl
dec
mov
bt
stc
bt
sub
clc
cmp
shr
movb
pushf
mov
mov
movw
call
clc
bt
sub
cmc
cwtl
push
sub
push
pushf
call
cmp
mov
mov
bsf
neg
movsbw
add
shld
test
sar
add
ror
bts
ror
mov
pusha
xor
add
bsf
not
cmp
bt
add
dec
test
sar
mov
pushf
cmc
add
pusha
call
xor
movb
bt
bt
ror
stc
push
clc
jmp
pushl
popf
pushf
lea
jmp
test
cmc
sub
jmp
aaa
rol
lea
inc
sub
call
add
clc
add
pusha
cmc
ror
test
jmp
jmp
mov
pushf
mov
pushl
pusha
push
pushf
lea
jmp
push
mov
pushl
mov
lea
jmp
cld
jmp
jmp
sbb
rcl
mov
pushf
cmp
pusha
xor
jmp
movb
not
call
pushf
popl
movw
jmp
pushf
mov
mov
movw
lea
jmp
push
pusha
mov
pushl
push
pushl
push
lea
jmp
mov
lea
jo
xchg
pusha
mov
jmp
add
stc
not
call
aas
push
cwtl
lea
movb
cmp
bt
cmp
movb
lea
ja
seta
ror
rol
mov
shr
call
jmp
jo
mov
pusha
push
jmp
pushl
pushf
popl
pushf
jmp
lea
jg
rep
rol
pop
mov
pop
clc
popf
pushf
pushl
lea
jmp
sar
mov
rcl
bt
call
mov
jmp
pushf
popl
pushl
pushl
popl
movl
lea
jmp
pusha
mov
pusha
mov
movl
movl
pushf
lea
jmp
jmp
push
pushf
jmp
inc
dec
rcr
btr
sub
shl
mov
pusha
pushf
call
push
jmp
xor
adc
pushf
stc
mov
cmc
cmp
cmc
sub
bt
lea
ja
test
add
pusha
pushl
mov
movb
pushf
popl
call
lea
ja
pusha
pushf
mov
pushl
pushl
pushf
popl
pushf
pushl
popl
push
movb
push
lea
jmp
and
pusha
pushf
cmp
movb
mov
lea
jne
rcr
or
jmp
pushf
rcr
bsf
mov
pushf
bt
add
jmp
mov
call
mov
pusha
push
pushf
push
lea
jmp
mov
lea
jne
pushf
mov
mov
mov
pushl
pusha
lea
jmp
pushf
call
movb
mov
push
push
push
pushl
ret
mov
mov
movb
lea
jmp
bswap
xadd
cbtw
shr
mov
call
