add
add
call
add
cld
xor
add
add
jo
add
jg
add
nop
xor
add
xor
add
xor
add
xor
add
add
add
jb
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
gs
je
push
jb
arpl
jae
add
add
imul
jae
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
lea
push
mov
push
call
jecxz
add
pop
xor
add
add
jg
add
nop
xor
add
xor
add
xor
add
xor
add
add
add
cld
pop
pop
ret
mov
push
mov
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
lea
push
mov
push
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
nop
jmp
inc
cmpb
jne
inc
ret
mov
add
ret
push
mov
add
push
push
push
mov
add
mov
mov
cmpl
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
nop
nop
jmp
and
inc
cli
dec
push
inc
dec
jmp
jmp
inc
decb
add
add
jmp
jb
push
hlt
jmp
dec
mov
jmp
jmp
inc
push
gs
test
inc
fnsave
data16
push
inc
loope
jb
popa
jmp
inc
movl
jmp
mov
inc
jmp
jmp
jbe
movl
jmp
inc
fldpi
add
jmp
test
add
pushl
jmp
add
push
aam
add
add
add
push
jmp
repz
jmp
add
jmp
xor
add
int
jmp
gs
jmp
mov
inc
int3
dec
dec
push
inc
jmp
push
movl
jmp
loopne
shr
jmp
inc
mov
add
mov
jmp
xor
mov
mov
inc
movsb
jmp
rorb
mov
jmp
jmp
add
add
mov
jmp
decl
test
jb
inc
mov
inc
mov
add
add
mov
jmp
add
inc
mov
add
add
add
movw
jmp
call
add
jmp
mov
call
inc
mov
add
push
push
push
push
lea
push
push
call
test
jne
push
call
mov
push
call
mov
push
call
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmpl
jne
push
call
mov
mov
call
mov
mov
add
mov
test
jbe
mov
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
cmpl
jne
jmp
add
decl
je
decl
and
push
push
mov
push
call
jmp
add
decl
je
incl
or
jmp
add
call
inc
push
mov
push
call
jmp
xchg
imul
mov
jmp
je
xchg
insb
decl
add
add
rclb
add
mov
mov
mov
jmp
inc
mov
mov
mov
jmp
inc
add
jmp
test
decl
jmp
jecxz
xchg
insb
decl
add
add
int3
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
mov
push
mov
pop
mov
pop
pop
pop
pop
mov
jmp
and
dec
mov
push
push
jmp
cmp
pop
pop
jmp
and
adc
call
pusha
je
jne
sub
test
shrd
test
sub
mov
mov
xadd
mov
adc
sub
mov
and
btr
imul
jne
je
pop
push
sub
dec
dec
push
nop
mov
sub
dec
sub
dec
dec
pop
dec
je
jne
xlat
push
lcall
push
bound
dec
xor
shrd
mov
rcr
imul
call
ret
nop
add
add
sub
add
mov
add
cmp
adc
add
lock
adc
add
inc
add
add
cmp
add
adc
add
inc
add
inc
push
mov
add
or
add
push
add
add
mov
add
adc
add
rolb
add
and
add
mov
add
add
add
add
add
cmp
jo
push
sbb
add
add
nop
push
mov
push
push
push
aam
adc
pop
jnp
aas
jne
sbb
push
push
add
call
sub
jae
jp
pusha
push
inc
push
push
call
mov
lock
iret
je
mov
xor
xor
gs
and
mov
aaa
lods
xor
push
out
test
add
add
pop
pop
ret
cmp
inc
push
inc
or
mov
sbb
xor
cmp
rorb
movsb
mov
adc
sub
fs
mov
dec
xchg
adc
mov
and
es
fisubs
push
movsl
push
adc
mov
xchg
push
pop
cmp
lods
call
fcompl
push
mov
sub
pushf
clc
dec
aaa
jne
adc
cld
add
jne
pop
and
or
push
in
inc
out
dec
out
pusha
or
je
jmp
sbb
or
cmp
jbe
inc
adc
inc
xchg
adc
cmp
adc
aaa
jb
jbe
cmp
cld
ss
fists
and
mov
lea
push
rcll
add
push
sbb
push
repnz
push
xlat
xchg
ljmp
mov
aam
mov
inc
push
mov
push
shrb
jnp
ljmp
rcrl
iret
xor
cmp
push
mov
add
inc
std
add
call
mov
sub
push
adc
dec
test
mov
sbb
stos
xor
xchg
push
ja
xor
inc
lea
aaa
cwtl
mov
gs
lahf
xchg
mov
push
pop
hlt
adc
mov
push
xchg
sub
mov
dec
in
mov
inc
movb
push
or
mov
push
push
call
cmp
jle
es
adc
xchg
sbb
sbbb
pop
movb
lds
sub
lea
mov
in
test
lret
adc
dec
inc
inc
adcl
adc
inc
popf
add
ret
or
inc
jp
mov
ret
jle
leave
xorb
sub
adc
adc
jno
pop
stos
pop
cmp
adc
add
dec
adc
push
bound
xor
and
xor
inc
jne
movl
push
ss
pop
inc
dec
add
or
jp
push
adc
pop
loop
pop
inc
add
sbb
xorb
cli
push
inc
sarl
push
and
mov
adc
sub
sahf
mov
in
out
pusha
mov
cmp
popa
in
arpl
and
adc
and
cmp
pop
add
repnz
sub
pop
or
inc
cmp
mov
xlat
and
seto
dec
adc
dec
movsb
imul
inc
cmp
lea
or
add
xor
xor
jp
mov
jmp
xchg
xor
and
xchg
lahf
imul
add
test
and
movb
jb
xchg
pop
pusha
or
les
adc
lock
cmp
je
or
std
add
dec
cmp
jb
and
setne
cmp
loop
mov
cmpb
adc
call
lahf
xchg
repnz
jo
adc
test
pop
les
loop
or
xchg
out
aam
push
jp
xchg
add
les
enter
sbb
movsb
idiv
xchg
mov
xchg
xchg
sub
mov
adc
and
inc
or
jns,pn
and
and
xor
dec
cmp
stc
add
shl
fcoms
adc
enter
xchg
pop
sahf
shr
fs
popa
or
enter
sbb
std
cld
xor
and
and
inc
inc
mov
popf
or
jb
mov
popl
ficoml
sbb
lcall
fnsave
push
mov
call
sub
adc
cmp
mov
les
call
hlt
mov
mov
pop
lret
in
fldl
sbbb
dec
push
push
scas
inc
xchg
xor
adc
mov
dec
jae
xor
aaa
jo
scas
and
fmulp
push
add
cmp
mov
test
or
inc
add
xor
cmp
push
inc
add
cs
add
and
cmp
and
push
adc
hlt
sbb
adc
adc
pop
call
add
sub
or
jle
pop
dec
pop
mov
push
adc
les
xor
mov
or
pop
mov
mov
cmp
sti
inc
push
rcll
mov
push
leave
or
jmp
inc
push
sub
loopne
imul
or
or
in
cs
bound
movl
sbb
lds
call
adc
lods
dec
push
adc
das
mov
clc
pop
clc
jno
mov
outsl
and
inc
xchg
fsts
mov
stos
jge
fadds
gs
jp
dec
adc
sub
push
or
out
jmp
adc
sub
mov
jmp
or
ret
pop
adc
fisubrl
and
sbb
push
dec
mov
repnz
or
test
add
fisttps
es
nop
idivl
xor
or
mov
push
jg
add
call
cmp
push
jl
outsb
iret
cmp
popf
mov
call
sbb
sti
mov
jl
mov
popa
ficomps
sbb
setl
inc
push
adc
and
jno
or
inc
daa
mov
cmc
adc
cmp
les
xchg
jnp
enter
add
rcrl
das
ja
call
or
adc
cmp
enter
imul
aas
sbb
pop
adc
data16
and
dec
adc
mov
mov
jmp
jae
pop
daa
mov
sti
xorb
sub
or
xor
or
mov
cmp
mov
mov
clc
pusha
scas
call
bound
xchg
cmc
sete
mulb
dec
in
and
and
xor
ret
jb
pushf
jp
adc
sti
inc
aam
push
sti
out
adc
in
sbb
cld
push
sbb
dec
xor
jle
pushw
or
adc
cmp
xchg
mov
pop
rcrb
push
clc
loope
sub
mov
dec
les
pop
sub
fstl
adc
xchg
push
mov
push
adc
sub
push
dec
jle
cld
and
jmp
mov
push
sbb
sbb
pop
adc
cs
pop
dec
pop
test
cld
js
ds
adc
mov
add
or
stos
inc
sarb
sahf
xchg
ret
and
in
jmp
mov
in
cmpb
add
lea
je
es
or
clc
mov
and
movsl
jecxz
xor
fdivrs
fwait
test
lock
call
mov
adc
lea
in
arpl
lea
push
pop
jmp
push
jno
jle
flds
ljmp
push
lods
mov
and
inc
and
popf
lock
rol
inc
dec
pop
add
jne
add
mov
in
jae
push
mov
inc
cli
jne,pn
shl
add
push
add
push
aaa
call
iret
fs
xor
sbbb
pop
ror
push
clc
adc
jne
sub
or
movsl
orb
leave
mov
dec
insl
sub
push
daa
pusha
sub
xor
push
sar
dec
push
pop
inc
call
push
loope
and
mov
sbb
sub
lods
xchg
add
es
jno
decb
lea
push
inc
xchg
dec
jmp
sbbl
sub
push
dec
loop
ret
or
add
cmp
pushf
mov
sahf
sub
pop
mov
adc
andb
pop
push
mov
push
push
and
sub
inc
sub
arpl
pop
adc
fwait
jmp
dec
dec
xchg
call
push
sti
xor
orb
adc
into
dec
lcall
mov
add
and
decb
lods
or
xor
je
dec
test
pop
push
test
adc
stc
pop
es
dec
jl
nop
inc
xor
push
push
jmp
lret
cmp
dec
inc
lret
xor
adc
mov
lods
pop
adc
fucomp
fwait
sbb
add
inc
dec
jae
adc
and
adc
push
xchg
imul
dec
inc
mov
push
pop
cli
daa
in
inc
adc
test
popa
and
stos
mov
arpl
pop
bound
xlat
cwtl
xor
pop
push
lcall
popa
mov
call
jne
mov
jmp
and
test
inc
das
and
or
add
add
addl
inc
jne
inc
ficoms
and
sub
inc
pop
sbb
gs
arpl
mov
mov
or
push
and
pop
sbb
push
and
mov
adc
dec
cmpsb
inc
mov
pop
test
andb
push
pop
add
add
xor
fwait
insb
xchg
lea
and
adc
push
and
and
dec
mov
ficoms
mov
sbb
mov
pop
mov
call
int
sbb
add
sub
cmp
int3
fisttpll
push
cwtl
mov
or
cmpsl
add
sbb
loopne
ret
sbb
pop
test
test
pop
fnstenv
lea
cmovne
dec
sub
inc
cs
push
or
pop
sub
xlat
enter
pop
xor
std
sub
arpl
adc
out
fs
std
push
popa
add
fisubs
sub
add
push
je
push
xchg
xor
mov
pop
xchg
mov
dec
sub
leave
lea
mov
push
mov
jmp
adc
inc
xchg
pop
mov
pop
adc
movb
mov
sbb
lret
xor
fcmove
lea
loope
test
fldl
jmp
inc
fwait
add
sahf
testb
mov
sbb
add
pop
adc
aas
push
rorl
mov
stos
mov
ror
adc
xor
gs
nop
dec
test
cmp
pop
jg
cmpsb
int
cmp
or
pusha
faddl
test
orb
sbb
fidivrs
fdivl
sub
xor
movsb
ss
or
pushw
adc
inc
js
cmp
shlb
mov
jb
pushf
push
cmpsb
sub
cmp
dec
inc
gs
xor
lahf
xor
test
xor
rclb
fsubrl
xchg
leave
mov
cmp
cmpsl
or
fisubrl
and
loope
js
pop
jno
adc
pop
and
or
sub
pop
and
adc
test
sbb
cmpl
cmc
scas
and
dec
ret
js
pop
gs
cwtl
and
add
jge
lea
test
stc
mov
test
or
into
jmp
clc
xor
pop
mov
lcall
cmp
add
jb
clc
adc
push
clc
jmp
mov
ja
or
or
and
cmp
sbb
or
sar
lock
pop
je
mov
popf
mov
xchg
inc
sbb
clc
aaa
lods
out
test
ffree
call
or
pause
xchg
mov
push
inc
or
es
push
aam
ret
test
enter
or
imul
add
xor
xchg
fcmovb
inc
cmp
pop
and
addl
repnz
or
sbb
jno
cmp
or
mov
in
shlb
lret
fisttpll
inc
stc
and
adc
hlt
pop
push
movb
cmp
mov
or
or
hlt
add
sahf
fwait
add
adc
inc
sbb
xor
je
jo
aam
xchg
push
fdivl
call
mulb
js
sub
and
sbb
cmp
inc
dec
mov
cmp
sar
pop
adc
dec
and
adc
iret
jle
cmp
push
cmp
jne
xor
sbb
xchg
inc
sti
sti
sbb
call
aad
pop
push
dec
aaa
gs
push
push
jl
push
or
pop
fnstenv
mov
xor
adcl
lds
cmp
adc
fcomi
add
dec
jg
dec
mov
stc
cmc
xor
and
add
xchg
mov
pop
and
aas
xchg
les
adc
adc
push
popa
mov
es
adc
jns
adc
or
pop
sbb
inc
push
pop
mov
adcl
lcall
inc
jbe
sbb
aas
in
pusha
inc
jmp
cmp
stos
pop
inc
xor
iret
or
imul
add
xlat
loopne
jbe
sti
mov
cmp
dec
cmpsl
inc
xchg
inc
std
adc
dec
sbb
daa
pop
aaa
inc
or
inc
cmp
push
mov
dec
enter
gs
fcoml
inc
adc
sti
loope
xlat
or
inc
sti
iret
lock
adc
vpmacssdd
mov
test
push
push
inc
cld
push
clc
dec
mov
imul
cmpsl
or
out
call
pop
daa
in
inc
jge
jae
mov
std
add
cmp
lea
fsubs
push
daa
xlat
sub
pop
jle
sbb
adc
or
xor
jl
dec
push
xor
inc
mov
loopne
call
enter
inc
pop
popf
inc
mov
hlt
cmpsl
es
inc
jae
xor
xchg
cmp
out
movsl
or
adc
outsb
pop
and
arpl
clc
push
scas
into
inc
lea
pop
adc
xchg
jbe
lret
pop
sti
jns
int
in
lock
nop
jmp
cli
push
roll
movsl
mov
xchg
pushf
pop
cli
xchg
adc
into
sbb
mov
mov
inc
and
push
xor
pop
and
mov
mov
or
testl
pop
je
inc
andb
lds
out
clc
stc
mov
repz
xchg
inc
push
xchg
or
cmp
daa
dec
xchg
sub
pop
cwtl
inc
andb
inc
nop
sbb
daa
add
inc
push
pop
daa
or
out
or
shl
or
movb
push
push
in
sbb
cmpsb
sbb
pop
xor
jl
jp
daa
pushf
aam
xchg
push
mov
pop
aad
cli
decl
mov
mov
pop
mov
roll
xor
push
in
lods
lock
fistpll
jo
fwait
cmp
and
fadds
sub
pop
sbb
fists
test
fmull
or
mov
cmp
call
adcb
add
insb
popf
adc
int3
orl
push
adc
push
int3
sub
pop
inc
fcomps
in
xor
mov
pop
cmp
jbe
shr
or
cwtl
fnsave
cmp
jbe
jns
xor
imul
cmp
repz
in
pop
clc
fs
sub
or
lahf
pop
mov
mov
hlt
xchg
adc
jne
and
and
inc
lret
xlat
dec
add
js
xchg
and
inc
andb
add
push
mov
mov
inc
add
ret
shll
cmp
inc
jne
int
push
xor
sbb
repnz
je
or
in
add
or
push
inc
dec
int3
popa
outsb
jo
push
shrl
jno
xor
push
push
dec
mov
lret
ja
cmc
cld
leave
sub
arpl
adc
xchg
pop
inc
ret
arpl
call
mov
rcrb
push
dec
or
cld
adc
stc
sbb
js
push
fisubl
mov
add
xor
psubq
sub
pop
aad
or
pop
xor
ret
cmp
push
bound
popa
cmp
jo
subb
test
jns
lret
mov
or
arpl
mov
lea
pop
push
inc
hlt
cmpsb
cwtl
popa
sbb
mov
pop
invd
lods
pop
bnd
ret
mov
push
xlat
fdivrs
ret
mov
mov
mov
adc
nop
mov
leave
adc
dec
and
mov
fsubr
cltd
sub
and
sub
lea
cmp
jo
cmp
or
push
push
pop
add
lods
xchg
push
call
pop
xor
out
ret
xchg
adc
je
push
mov
xor
or
push
add
pop
push
adc
pop
inc
adc
dec
push
dec
add
cld
adc
icebp
push
test
jmp
lcall
adc
xchg
sbb
aas
mov
jmp
js
outsb
test
xor
xor
mov
testb
sub
ret
fs
movsl
xchg
inc
xor
leave
sbb
inc
sbb
pop
inc
les
popf
push
out
and
push
imul
xchg
cmp
fsts
mov
adc
or
cmp
xor
or
pop
pop
data16
stos
add
push
add
jns
adc
enter
in
inc
fnstsw
enter
sbb
andl
ret
cmp
mov
dec
inc
add
les
cmp
mov
mov
cmp
mov
int3
test
incb
inc
outsb
mov
shlb
and
mov
fs
cmp
mov
je
cwtl
or
push
or
pop
sub
adc
xchg
xchg
je
sub
aad
ja
rolb
pop
and
push
xor
inc
mov
cli
sub
popf
xsha1
cmpsb
lea
lea
adc
jle
and
icebp
lea
rclb
and
mov
shrb
and
push
push
mov
fld
push
sub
fwait
adc
ja
and
fnsave
dec
outsb
int3
push
or
stc
enter
sbb
dec
or
les
dec
jmp
mov
dec
jg
pop
cltd
clc
or
into
fadds
enter
adc
sub
clc
push
rorb
sub
mov
call
pop
jns
push
or
dec
dec
push
cmp
xor
lods
ret
inc
push
les
adc
roll
movsl
loopne
aam
call
sub
pop
cmp
xor
sub
xchg
int3
cmp
add
mov
cli
in
pusha
movsl
pop
loop
or
bts
jl
push
mov
jo
mov
cld
mov
xchg
push
insb
subb
xor
xchg
test
sti
inc
dec
xchg
loope
insb
fs
xchg
push
adc
inc
inc
mull
call
xor
testl
mov
idiv
insl
cltd
dec
inc
sbb
push
cmp
inc
push
mov
push
push
inc
push
xchg
sbb
adc
adc
pop
jg
inc
lea
mov
cmpsb
push
or
ret
adc
xor
mov
call
pop
jmp
sbb
push
push
call
pop
xchg
mov
push
and
add
or
mov
lock
call
ss
mov
rcrl
and
cmpsb
out
xchg
shll
mov
push
lea
lds
dec
dec
or
and
push
push
sbb
or
xchg
adc
and
inc
adc
pop
cld
js
sub
mov
jge
mov
and
test
cmc
xor
mov
out
adc
fsubrl
lds
xor
clc
cmpsl
orb
pusha
sbb
sbb
call
push
adc
sbb
jmp
adc
mov
adc
ds
push
cmc
pop
mov
xor
sbb
add
and
add
push
sbb
icebp
pop
adc
lea
arpl
push
pop
adc
mov
dec
dec
pop
dec
pop
sahf
in
les
push
push
dec
pusha
insl
xlat
mov
or
addr16
aas
movsl
jmp
ret
and
push
test
dec
and
loop
cmp
lret
add
scas
xor
or
or
les
es
jg
popf
pop
decl
xchg
lods
insb
into
fldl2t
cli
jo
inc
popa
adc
mov
inc
mov
jno
subb
fsubr
and
lahf
into
nop
imulb
das
popa
sbb
adc
loop
add
adc
sbb
popf
sub
or
jb
daa
mov
mov
std
mov
sbb
push
cmp
shlb
test
inc
or
or
pop
call
push
adc
xchg
rolb
mov
jo
inc
outsb
dec
or
jns
call
lcall
ljmp
push
push
cmp
inc
inc
jmp
repnz
and
notl
or
data16
insb
adc
push
lods
push
scas
repz
or
push
mov
adc
adcb
rol
fisttpll
mov
repnz
cmp
mov
dec
pop
mov
mov
dec
mov
call
daa
or
inc
sbb
or
inc
mov
adc
fwait
xchg
cli
and
xchg
cmp
sub
popf
add
sub
mov
bound
push
int3
leave
xor
push
and
push
cmp
call
and
sub
adc
dec
lock
cmp
nop
mov
mov
xor
lock
movsb
push
pop
push
nop
int
push
mov
xorl
cli
add
testl
clc
push
enter
ret
xor
pop
or
testl
inc
mov
int3
ds
push
mov
mov
sarb
in
shrb
pop
pop
pop
push
xchg
gs
add
mov
nop
mov
test
movsb
push
movsb
inc
mov
or
sub
xchg
and
xor
inc
pop
sbb
shlb
and
jno
adc
fcoms
dec
jmp
sub
push
push
je
adc
mov
add
mov
add
lock
pushf
adc
jge
stos
shrl
icebp
ret
cld
inc
dec
std
or
or
cmp
cli
inc
cmp
push
push
mov
jp
fs
das
xor
xchg
movsl
scas
in
push
out
dec
xor
or
cmp
outsl
push
out
test
pop
and
pop
push
bound
fs
adc
sub
and
mov
adcl
or
sbb
shr
fs
mov
cli
mov
cli
enter
sub
ret
ljmp
dec
leave
jp
loope
das
loopne
or
push
enter
test
mov
inc
push
push
loopne
das
mov
enter
push
stc
or
movsl
adc
or
testb
stos
jae
dec
lcall
push
or
xorb
add
stos
mov
mov
movsb
ret
hlt
sbbb
popa
dec
adc
ret
sbb
int
xchg
and
in
mov
jne
out
mov
sub
xchg
adc
xchg
mov
arpl
js
test
adc
fsubs
or
xor
cmp
dec
sub
stos
xor
push
or
xor
adc
dec
cmp
bound
inc
and
stos
data16
inc
sbb
add
add
shlb
adc
pop
jle
inc
inc
jmp
and
add
sarb
neg
mov
je
mov
cmp
mov
jne
push
sub
jne
cmpsb
inc
cmpb
test
popa
outsb
add
push
cwtl
das
mov
in
and
push
and
and
push
je
sbb
add
sbb
and
adc
xor
pop
and
or
jmp
fbld
pop
push
or
xlat
sub
mov
cmpsb
dec
cmp
mov
into
call
sub
and
dec
inc
sbbb
jo
sbb
or
jmp
pop
test
mov
pop
pop
add
dec
dec
test
test
mov
fwait
leave
sbb
xor
push
push
adc
in
xorb
and
in
jb
loope
cmp
sbb
lret
and
jecxz
jo
add
mov
ret
or
push
mov
add
add
jmp
pusha
push
loope
sbb
sbb
inc
movsb
fiaddl
adc
fs
mov
push
aas
sbb
test
adc
push
adc
xchg
push
adc
dec
sbb
dec
rorb
ds
dec
pop
inc
test
ds
popf
sbb
mov
lods
ret
sbb
mov
xchg
test
add
jmp
cld
daa
mov
xchg
js
jnp
out
or
lods
cmp
and
and
pop
jmp
pop
hlt
mov
ret
inc
or
lock
sbb
or
sub
in
mov
adc
aaa
jmp
push
cmc
mov
or
add
xchg
mov
mov
or
cmpsb
fnstenv
mov
or
dec
sti
and
test
or
fwait
in
and
or
adc
pop
cmp
mov
xchg
xchg
xchg
push
addb
adc
call
imul
or
mov
scas
cmp
sub
movsb
dec
mov
aam
and
inc
dec
sub
xchg
unpcklps
push
pushl
hlt
and
push
and
xchg
pop
push
dec
clc
dec
bound
cld
popa
add
sbb
ret
add
lahf
nop
xrelease
add
mov
adc
add
pop
or
das
sub
sbb
mov
sbb
sarb
stos
and
adc
xchg
push
test
jae
incl
js
add
imul
inc
daa
and
and
call
push
push
lret
inc
xlat
in
mov
and
rcrb
dec
cli
xor
xor
adc
sbb
jl
sub
leave
or
lea
push
nop
sub
sahf
aas
jb
adc
jl
and
and
fs
jb
pop
mov
sbb
pop
addr16
loopne
push
fsub
movsl
push
sbb
sbb
xchg
adc
mov
dec
mov
mov
pop
mov
test
xor
sub
sub
push
rcrl
lea
xorl
push
pop
mov
pop
push
mov
inc
push
ficoms
inc
addr16
loope
dec
ret
push
cmp
pop
pop
sbb
push
stos
sti
xchg
fstl
pop
fisubs
push
push
mov
push
std
jge
sub
shlb
cmp
mov
cld
mov
push
push
enter
dec
outsb
xor
xor
push
in
xchg
or
hlt
lret
insl
and
adc
inc
sbb
loopne
sbb
test
add
pop
test
mov
frstor
add
sub
push
pop
ljmp
adc
or
roll
xchg
xchg
mov
movsl
xchg
inc
repnz
add
dec
adc
xor
pop
in
std
push
xchg
sbb
pop
dec
out
dec
adc
ret
add
faddp
jbe
scas
xchg
or
xor
in
push
and
sub
hlt
dec
push
aaa
ja
mov
out
mov
aas
push
aas
in
ljmp
jge
dec
adc
add
push
sub
push
push
or
daa
stos
pop
inc
push
and
push
inc
or
mov
lea
add
mov
push
push
cltd
leave
ss
sub
adc
and
repnz
fcoms
and
mov
push
lods
enter
ud1
dec
mov
xchg
rorl
shlb
rclb
lea
inc
movl
repnz
adc
inc
jmp
int3
add
inc
aam
adc
mov
pop
jg
stc
mulb
xor
outsl
ljmp
fsts
sub
sbb
call
xor
adc
lcall
push
sub
push
cwtl
xor
jl
push
dec
leave
lret
jmp
sbb
mov
aas
test
jo
ret
mov
jle
push
adc
or
movups
mov
pusha
adc
roll
movzwl
call
call
mov
ror
mov
das
jbe
add
push
sub
push
push
sbb
dec
cltd
clc
pop
jle
mov
mov
add
sub
xchg
jp
pop
movsb
call
mov
xor
xchg
adc
jg
call
mov
and
adc
repnz
adc
xchg
hlt
popa
es
es
inc
sub
pop
cmp
push
mov
lods
xor
call
pop
push
dec
adc
adc
les
bnd
cmp
pusha
and
xlat
sub
cmp
js
inc
push
push
mov
dec
js
mov
sub
fmull
call
std
xchg
les
inc
popa
imul
ret
cmp
dec
sub
daa
incl
fmull
test
adc
arpl
and
inc
int
push
nop
sub
dec
scas
loop
or
cmp
jg
test
sub
push
mov
jg
mov
and
lcall
add
jg
push
adc
lret
rcl
sub
mov
push
or
shll
add
mov
add
leave
lea
add
dec
lock
push
call
in
xor
jae
jns
mov
or
or
xor
cmpl
sbb
adc
into
inc
in
jae
orb
fimuls
mov
ljmp
add
adc
push
xor
ret
mov
or
adc
pop
adc
clc
decb
inc
and
pop
xchg
mov
movsl
stos
lock
adc
jmp
call
mov
imul
nop
xchg
push
push
push
xor
and
dec
or
scas
mov
pop
lock
xor
pop
dec
add
mov
mov
ds
pop
xor
add
add
jmp
push
and
pushf
or
sbb
push
out
movb
or
add
in
pop
dec
loop
push
sar
std
mov
mov
ss
pop
mov
adc
mov
adc
pop
je
mov
adc
mov
sti
cmp
mov
and
dec
out
adc
cmpsl
sti
inc
mov
pop
push
add
mov
sti
and
dec
leave
aam
and
jne
cmp
mov
pushl
test
inc
jmp
pop
xor
and
adc
adc
add
cmp
or
adc
push
jbe
inc
jecxz
cs
daa
lods
jle
cvtps2pd
mov
adc
jge
cmp
mov
xor
dec
add
test
gs
push
movsl
and
test
or
or
int
sarb
and
pop
das
or
mov
sbb
add
and
sbb
sub
enter
mov
pop
leave
cmpsl
or
push
mov
cld
and
adc
das
add
mov
or
xor
jo
mov
ret
xchg
and
in
inc
stos
dec
test
cld
mov
inc
mov
mov
push
and
mov
test
mov
movsl
mov
test
adc
adc
jmp
and
popa
lcall
xor
and
or
inc
iret
lock
sbb
cmp
jne
mov
mov
pusha
inc
enter
dec
push
mov
mov
jne
movsb
cmc
xchg
cmp
xlat
mov
xchg
pushf
aas
xor
repnz
addl
jmp
dec
or
jb
je
and
inc
sub
inc
inc
icebp
cmp
mov
pop
lock
fidivl
enter
or
insb
fs
sub
inc
repnz
pop
mov
subb
or
dec
push
repz
clc
repnz
loop
int3
push
inc
mov
mov
test
or
ret
sub
test
xchg
nop
lret
js
movb
ret
pushf
fs
push
shll
sbb
xchg
mov
nop
jle
fs
aas
repz
add
cmp
push
mov
add
aam
pusha
fs
push
pop
das
adc
mov
outsb
xor
lock
pop
and
mov
daa
nop
enter
inc
lock
cmc
inc
mov
movsb
and
pop
out
sbb
out
pop
mov
lcall
rclb
das
cmp
sub
arpl
jmp
lcall
push
sahf
call
mov
xchg
nop
iret
mov
jne
sahf
and
clc
adc
mov
pop
xor
inc
pop
pop
sbb
test
sub
xor
adc
sbb
mov
test
and
ret
mov
lods
sti
add
mov
adc
ds
lock
mov
rcr
cmpsb
cltd
mov
mov
dec
lock
imul
movl
shr
mov
ret
faddl
or
je
or
push
or
mov
inc
movl
dec
mov
mov
lods
add
adc
adc
ret
dec
pop
decb
int3
push
call
mov
lea
inc
movzbl
add
dec
lcall
sbb
add
pop
cs
sar
jg
je
out
jmp
and
push
cmp
jb
pop
lahf
or
pop
and
sub
ret
adc
sbb
or
loope
or
icebp
repz
mov
inc
jle
inc
sbb
add
mov
add
inc
sbb
cmp
inc
sbb
outsb
pusha
jns
and
inc
fildl
mov
loop
push
hlt
in
mov
dec
mov
adc
lcall
mov
mov
inc
loop
scas
pop
mov
roll
fsub
lock
xchg
mov
cli
aad
mov
mov
addl
add
je
dec
xor
jmp
mov
cmp
mov
rcl
enter
cmp
lods
push
clc
aas
xor
lods
xor
mov
push
adc
pop
dec
and
enter
xor
push
call
dec
sub
dec
jo
ljmp
sbb
testb
and
mov
dec
lods
or
pop
xor
das
fiadds
lods
incl
lret
repnz
pop
add
insl
scas
adc
mov
mov
xor
mov
cmp
pop
movsb
or
mov
sarb
dec
mov
cmp
jne
cld
add
inc
out
mov
call
out
fs
push
pop
or
cmp
or
or
jg
les
rcrb
mov
pushf
loope
testb
insb
mov
lods
neg
lahf
cmpsl
mov
pop
sbb
jmp
js
sub
fsubr
dec
mov
add
in
mov
xchg
int3
inc
jge
shll
pop
std
xor
inc
or
enter
call
les
jne
les
insl
hlt
je
dec
stc
jbe
inc
push
xor
hlt
jae
les
push
sarl
push
sub
jg
push
cmp
sti
jmp
dec
push
clc
out
push
adc
mov
push
std
push
inc
cltd
in
push
stc
dec
int
sub
stos
dec
fiaddl
jge
xor
jmp
mov
xchg
push
sbb
or
iret
rcr
mov
enter
loope
lahf
inc
xchg
xchg
push
lods
xor
in
icebp
xchg
lds
nop
cmp
in
sar
jns
adc
ljmp
and
call
push
and
pop
das
sbb
cmp
arpl
enter
pop
push
mov
faddl
loopne
inc
or
adc
hlt
adc
add
test
pusha
push
cmp
cmp
sub
jp
inc
fs
lock
flds
push
mov
imull
sub
adc
or
call
sub
add
mov
cli
push
cld
xchg
cwtl
or
daa
sahf
xchg
push
mov
jne
scas
idivb
in
inc
enter
add
call
lret
iret
and
push
adc
pop
popf
gs
or
cmp
pop
movl
or
lea
mov
dec
jle
repz
addl
push
scas
push
push
sub
mov
dec
loope
je
jl
out
hlt
out
sbb
stos
lds
ljmp
in
jmp
mov
call
mul
add
sub
sub
call
xchg
mov
mov
jns
inc
sbb
adc
push
mov
jb
cmp
shrl
xor
clc
jne
call
lods
cltd
rcll
mov
cs
out
mov
cmp
sbb
cmp
adc
lahf
xchg
dec
adc
jmp
cwtl
lods
lahf
int3
xor
xor
js
jge
adc
and
test
mov
call
fmuls
outsl
in
bound
dec
rcrb
shrb
sbb
cmp
push
mov
arpl
in
sub
sbb
pop
aad
dec
fsin
add
sub
xchg
adc
testl
enter
cltd
leave
inc
clc
nop
repz
call
cmp
adc
add
lods
stc
push
clc
cltd
lds
mov
loopne
or
sub
or
lcall
inc
xchg
divb
pop
cmp
push
imul
dec
imulb
jbe
xchg
push
loope
and
push
cltd
in
leave
stc
icebp
roll
adc
push
clc
push
jge
test
adc
enter
push
push
in
cmp
mov
jmp
and
jp
adc
std
hlt
mov
and
push
call
jecxz
sub
cli
rol
lret
cmpsl
cmp
xchg
dec
stos
std
fildl
movsb
mov
add
adc
add
sub
cmpl
mov
ljmp
xor
cmpsb
mov
loope
xchg
inc
or
mov
stos
filds
inc
xchg
or
movb
testl
lret
push
lea
fnsave
in
daa
mov
and
out
adc
and
push
sbb
leave
ret
in
dec
pop
and
mov
adc
jmp
popa
inc
cmp
push
enter
movsl
out
sub
adc
xchg
call
movsl
ljmp
jge
inc
dec
test
rcrb
mov
mov
or
push
clc
jge
mov
and
mov
adc
insl
adc
loope
mov
or
pushf
imul
call
movsb
inc
fiaddl
cmp
sbb
push
jne
cmp
notl
js
dec
jmp
sub
iret
js
arpl
addr16
dec
dec
lods
jecxz
adc
testl
popf
or
js
rcrb
stos
cs
xor
add
cmp
adc
mov
sub
jo
dec
push
insb
fstl
and
or
in
push
cmp
je
enter
pop
cmpsb
in
sbb
imul
stos
push
or
fwait
neg
scas
push
mov
shrl
enter
mov
addb
pusha
add
adc
mov
cmpsb
mov
push
popf
or
fisubs
fisttpll
imul
outsb
cwtl
adc
or
fs
pop
lock
cmp
push
mov
icebp
movsb
or
rcrb
shlb
pop
push
adc
lahf
adc
xchg
pop
enter
call
push
dec
and
and
and
cli
dec
or
add
xor
ret
add
xchg
adc
mov
aas
cld
addb
fldenv
jge
rcll
popf
and
test
les
add
lock
xchg
mov
lock
or
dec
enter
test
inc
mov
adc
inc
mov
cmpsb
and
add
es
mov
cmc
push
sahf
lret
pop
mov
cltd
stos
pushf
test
sub
fisubl
dec
ret
push
or
adc
mov
inc
xchg
adcb
test
inc
test
aam
sbb
xchg
mov
adc
jo
inc
inc
xor
js
insb
or
test
dec
fmull
or
mov
fmul
call
push
fucomip
xor
popf
dec
ds
faddl
stos
pushf
mov
mov
mov
add
je
lret
xchg
add
sbb
dec
lea
jbe
inc
inc
sub
adc
arpl
cltd
cmp
jle
inc
inc
add
pop
jns
adc
xchg
lods
and
jl
movzwl
and
or
fidivs
cld
pop
in
popa
cmp
data16
xchg
je
inc
or
call
add
pop
and
int3
fmuls
les
jmp
test
test
in
jecxz
lret
les
test
dec
pop
xor
inc
add
jg
and
movsl
xor
jl
dec
or
and
jle
mov
orl
adc
sub
jge
and
adc
cli
xor
jne
and
lret
mov
add
mov
sub
testl
fisubrs
jmp
xchg
xchg
pop
mov
int
add
sar
je
or
jbe
fcmove
cmp
aam
int3
adc
mov
jbe
xchg
int3
xchg
and
shl
push
negl
ljmp
sub
sbb
xchg
xchg
push
push
lahf
jnp
ret
pop
mov
call
dec
or
jecxz
mov
and
and
xchg
pop
and
icebp
push
test
adc
or
add
inc
add
xchg
cmpsb
loop
xor
sub
xchg
inc
xor
xlat
in
mov
pop
and
enter
cmp
not
mov
movsl
pop
and
dec
cmp
xchg
push
inc
adc
mov
sbb
inc
push
jp
loopne
or
xchg
stc
sub
jge
cltd
mov
orb
jp
lcall
sub
mov
lock
cld
xor
fsubl
push
imul
mov
or
nop
or
push
das
popa
int3
ret
push
cmp
mov
lcall
lea
sbbb
or
aad
xchg
sub
je
inc
repz
pushf
pop
jle
dec
aam
into
lods
sub
cmp
xchg
jb
lcall
ret
cmp
jb
dec
mov
je
xchg
and
jl
test
inc
sbb
add
jb
xchg
shrl
xchg
test
add
push
cmp
add
arpl
inc
mov
lods
cmc
mov
cmp
movsl
and
test
les
push
cmpsb
pop
jbe
add
jmp
dec
sub
jae
pop
movsl
jg
inc
scas
je
stos
cltd
adc
cltd
loopne
or
mov
stos
pushf
mov
sbb
jmp
cmpb
cli
and
call
stc
mov
xchg
adc
dec
adc
add
repz
adc
lea
sbb
stc
pop
inc
mov
std
mov
adc
aas
jne
loopne
xor
pop
sbb
mov
pop
shll
jmp
push
cmpsb
pop
call
sub
lds
dec
sbb
imul
and
jb
adc
mov
movsb
addb
ja
dec
inc
xor
outsb
mov
test
jae
in
xchg
outsb
jle
jle
xchg
aas
dec
mov
lcall
cli
lock
orl
mov
jl
jle
es
ret
rorb
lods
mov
clc
movw
loop
dec
adc
sbb
sub
push
mov
cltd
bound
lret
insl
movsl
js
in
mov
pop
cmpsl
pop
sub
cwtl
sub
imull
pop
add
mov
inc
outsl
adc
jo
cltd
addr16
sub
aas
xor
jl
les
int
and
or
enter
in
xchg
lahf
and
cmp
pop
clc
or
dec
jle
or
cmp
and
movsl
sbb
mov
fs
sub
mov
push
sub
inc
cltd
push
fldenv
pushf
jnp
into
sbb
addb
pop
mov
pop
and
cmpsl
adc
cltd
mov
les
xchg
push
jmp
xchg
mov
push
repnz
scas
addb
inc
sbb
ret
leave
jmp
adc
mov
fsubl
or
jnp
jl
test
jg
mov
inc
jne
add
mov
enter
dec
sbb
push
call
inc
jmp
xor
pop
jne
dec
pop
xchg
ret
imul
jecxz
xor
sub
inc
mov
add
loope
cltd
push
adc
clc
movsb
mov
lea
outsl
notb
cmp
sub
outsl
roll
adc
pusha
xlat
icebp
xchg
test
inc
sub
sub
dec
loope
jecxz
dec
or
sub
or
adc
mov
insl
in
adc
popa
or
mov
cmp
sub
int3
adc
lods
jl
loopne
adc
adc
loopne
stos
pop
pop
xchg
sbb
mov
inc
xor
fcoms
push
dec
out
dec
or
sub
sbb
sub
add
and
or
in
sbb
scas
fs
sub
cli
xor
lock
sub
inc
cmp
jb
pushf
jmp
in
mov
incl
and
inc
push
out
jne
mov
pop
fcompl
xchg
cmpsb
lret
lods
and
jmp
push
jae
mov
scas
push
push
xchg
adc
mov
dec
out
and
aaa
adc
repnz
rorb
cmp
inc
notb
jecxz
sub
sbb
bound
xchg
cmp
jae
mov
mov
mov
jne
push
test
inc
mov
xchg
inc
daa
mov
cmp
out
cmp
dec
add
dec
jle
sub
cld
sbb
and
inc
or
ret
adc
jne
adc
aas
invd
pop
inc
sbb
rorb
mov
int3
push
fildll
subb
cmp
fs
mov
seta
or
in
xchg
push
int3
enter
sbb
xchg
adc
cmpsb
pop
xchg
adc
fmuls
roll
add
mov
jp
adc
and
push
add
popa
adc
sub
or
rclb
xor
and
adc
leave
mov
popa
adc
jmp
push
adc
or
xor
or
adc
sbb
sbb
add
ret
fstl
test
mov
stos
pop
insb
lret
or
std
pop
mov
adc
roll
pop
jne
mov
sti
mov
mov
ret
nop
add
stc
add
lret
stc
dec
inc
call
lahf
je
imul
jmp
xchg
pop
fcom
les
fwait
dec
adc
iret
je
inc
mov
repnz
sub
cmpsb
jle
jle
push
mov
add
in
or
idiv
int
in
xchg
pop
test
shlb
lods
test
call
jp
cmpl
jge,pn
lods
adc
js
enter
rorl
cmp
inc
xlat
add
je
cmp
pop
int
push
xor
sbb
ficoms
cmp
xor
test
push
lods
loope
dec
inc
and
jno
movsl
sbb
and
nop
sbb
movsl
call
pop
in
fxch
mov
sarl
inc
adc
sbb
mov
fildll
sub
call
jmp
in
or
push
add
hlt
addr16
or
sbb
mov
data16
and
iret
out
loope
push
jne
outsl
pop
cmc
jb
bndstx
dec
in
mov
xchg
add
enter
clc
inc
jmp
ljmp
sbb
mov
loopne
cmc
cltd
mov
clc
sbb
pop
int
or
mov
repnz
cwtl
cmp
cmp
mov
adc
adc
jge
loope
bound
pop
push
icebp
dec
imul
mov
fidivl
mov
rcll
cmc
lds
xchg
jecxz
lds
sbb
out
sbb
fiadds
sub
test
das
or
cli
xchg
addr16
adc
or
dec
cld
dec
inc
and
stos
dec
aad
inc
fnstenv
pop
or
sub
aad
call
mulb
in
or
lahf
enter
add
call
add
dec
jg
pop
mov
inc
fcoml
rclb
call
inc
sub
or
mov
into
xchg
or
sbb
call
sbb
insl
sbb
enter
ret
cltd
dec
test
insb
adc
adc
adc
ret
mov
call
fs
adc
xor
add
push
push
cmp
iret
sub
icebp
aam
push
sub
adc
and
xchg
adc
mov
cmp
call
imul
lcall
pop
aam
xchg
mov
pop
xor
outsl
cmp
inc
cltd
inc
movsl
pop
inc
xor
xchg
sbb
push
nop
adc
rorl
adc
cmpsl
rclb
push
inc
add
mov
dec
nop
push
adc
mov
push
push
jns
inc
or
xchg
movsl
mov
cmpb
pop
call
push
sub
and
and
loope
mov
sbb
mov
mov
dec
add
mov
cmp
and
or
pushf
lcall
push
add
adc
inc
pop
xor
sbb
inc
out
call
icebp
mov
jbe
cmovs
ret
dec
call
movb
sbb
sar
inc
mov
stc
das
inc
stos
mov
test
dec
add
testl
pop
mov
aam
dec
push
stos
mov
or
call
and
or
jmp
movzwl
es
pop
bound
and
sub
push
cltd
add
sub
insb
jp
shl
mov
pop
or
push
arpl
pop
mov
pushl
ret
mov
cmp
push
int3
jp
pop
movsb
mov
dec
es
movl
in
outsb
and
pop
inc
xchg
xchg
cltd
pop
and
dec
int
or
ss
gs
jle
sub
add
call
scas
adc
mov
xchg
stc
clc
lret
push
or
add
sub
mov
pop
pop
cmp
push
push
push
bound
add
into
push
cmp
ds
xchg
add
xor
jge
mov
push
dec
lock
cmp
enter
rorb
notl
xchg
and
js
push
and
sub
xor
hlt
pop
adc
or
or
push
add
push
mov
sbb
daa
and
inc
into
jge
push
xchg
sbbl
leave
ret
loope
mov
dec
cwtl
mov
sbb
push
ljmp
dec
or
movw
jecxz
dec
and
cmp
pop
mov
and
movb
sahf
pop
jo
imul
dec
test
adc
mov
lea
dec
mov
cmp
dec
cmp
or
cmp
test
jae
dec
in
adc
push
xchg
int
and
mov
pusha
aam
add
mov
mov
loop
mov
dec
add
dec
inc
xchg
clc
mov
test
stc
sub
add
adc
lea
mov
dec
or
jp
mov
or
xchg
pop
dec
or
adc
inc
dec
add
sbb
mov
and
mov
dec
or
xor
mov
test
nop
adc
mov
inc
inc
sahf
cmp
pop
xor
ret
aam
or
xrelease
sbb
pushf
adc
or
test
loopne
push
enter
repnz
mov
popa
push
std
xchg
dec
xchg
and
xlat
jp
jp
mov
xchg
orl
mov
shrb
push
hlt
pop
movb
sbb
mov
and
adc
mov
inc
mov
jle
movsb
in
es
xchg
sbb
dec
pop
fsubrs
aaa
mov
cmpl
test
gs
addr16
dec
or
and
add
adc
mov
and
mov
or
push
insl
xor
fcoml
loopne
enter
sbb
sbb
push
cwtl
mov
icebp
insl
movsb
pop
cmp
jno
adc
lods
fcoms
pop
adc
mov
dec
or
cmp
js
adc
jle
pop
jl
ret
pop
andb
xchg
fnstsw
push
or
and
pop
mov
push
out
dec
loope
pushf
and
xchg
and
sub
jp
push
shlb
push
pop
inc
movsl
je
loop
cmp
push
jne
push
jp
popa
fldenv
or
jb
and
ds
and
cvtps2pd
mov
sti
and
sub
rcll
fadd
int3
xchg
in
mov
mov
cmp
fcompl
fldcw
jbe
ljmp
add
or
xchg
inc
xor
cmp
sub
and
fdivr
push
add
cmovg
or
aaa
add
scas
sbb
adc
ret
loopne
rcr
cs
or
add
decb
mov
mov
or
test
pusha
add
call
aam
sub
ja
inc
jo
jle
cmp
sbb
ss
lcall
mov
mov
ret
inc
adc
dec
mov
dec
daa
push
add
movzbl
ss
pop
pop
cmp
or
leave
push
sub
sbb
in
inc
mov
or
mov
push
mov
push
es
dec
or
jmp
xchg
mov
sbb
int3
popf
fnstsw
out
inc
je
mov
mov
sti
inc
push
dec
adc
and
inc
sub
xchg
test
bound
or
fcoml
inc
mov
mov
jnp
mov
int3
mov
mov
int
inc
test
iret
mov
adc
rolb
mov
daa
and
push
pop
pushf
mov
push
andb
outsl
ficompl
and
arpl
jbe
dec
add
push
fs
mov
or
add
subb
enter
jmp
sub
scas
mov
adc
xchg
cmpsl
sbb
push
mov
inc
mov
adc
test
mov
test
xor
out
jnp
xchg
call
enter
je
mov
push
bnd
xor
inc
mov
xor
aam
and
xor
adc
push
fldenv
shll
mov
push
lock
xlat
popa
inc
mov
adc
call
adc
add
mov
imul
loopne
les
adc
sbbl
mov
mov
mov
call
pop
cmpb
mov
addr16
je
cmp
sub
mov
xor
sub
ret
scas
cmp
push
pop
lds
jb
mov
xchg
inc
push
ret
call
aaa
pop
les
sbb
mov
mov
xor
stos
int3
lahf
and
or
in
test
jg
add
cmp
mov
xor
xchg
dec
dec
jne
out
je
clc
in
cmpl
jnp
lret
ljmp
mov
sbb
jmp
movsb
pop
dec
jp
sbb
fnstcw
add
fldl
sub
je
inc
pop
out
inc
and
inc
or
mov
lret
push
pop
aam
leave
lret
pop
xorb
loop
dec
pop
xchg
or
mov
movsb
xchg
jp
xor
xchg
test
or
and
jne
adc
jmp
jle
scas
jp
push
sbb
test
sub
addr16
clc
aad
fcoms
xchg
fsub
and
cmpb
pop
aad
inc
adc
imul
push
rcrl
or
in
mov
add
outsb
or
inc
out
mov
mov
xchg
adc
mov
jmp
inc
mov
add
adc
push
mov
pop
test
rolb
ret
mov
jae
hlt
popf
xchg
mov
ret
imull
cld
jg,pn
add
xor
xchg
es
stos
jae
mov
jns
or
dec
loope
je
or
cmp
nop
inc
xor
jecxz
repz
pop
pushf
dec
sbb
sbb
xchg
cwtl
and
fimull
lcall
inc
sysret
sbb
dec
push
test
and
mov
cmpsl
shr
pop
xchg
add
les
je
mov
test
and
movsb
sbb
jae
sbb
jnp
mov
je
push
xchg
sub
stc
movsb
popf
insl
jae
and
adc
adc
mov
cmpsb
inc
mov
jmp
dec
dec
adc
data16
adc
cmp
add
inc
xor
xchg
enter
xor
mov
in
mov
sbb
mov
mov
or
mov
adc
shrb
mov
icebp
test
adc
sbb
jmp
add
sahf
pop
jmp
movsb
ja
ljmp
mov
inc
sub
and
nop
adc
mov
or
push
sbb
add
and
sahf
push
and
adc
test
and
inc
aad
cs
or
xor
les
jmp
js
fcomps
push
sub
pop
lock
cmp
scas
sub
jg
dec
sub
dec
push
pop
hlt
pop
xchg
sub
push
adc
and
cmpsl
repnz
add
jle
decl
jae
jmp
dec
mov
out
mov
nop
iret
call
sub
inc
xor
xchg
out
push
push
jp
lods
flds
and
clc
add
loopne
add
inc
add
or
mov
push
xlat
mov
xor
pop
jl
xchg
and
and
sarl
jns
jge
fs
lods
ss
cmp
push
fisttps
mov
cmp
fildl
ror
pop
add
sbb
and
sbb
rcrb
pop
inc
cmp
mov
mov
pop
adc
dec
outsl
xchg
ret
pushf
mov
inc
or
mov
lcall
popl
sbb
add
push
xor
mov
adcb
pop
and
dec
and
cmp
pop
enter
ds
push
sub
xchg
jb
pop
sub
or
adc
je
or
std
pop
dec
sub
test
push
mov
or
imul
outsb
push
les
leavew
jg,pt
jno
mov
mov
and
bswap
enter
adc
and
add
jne
mov
clc
push
or
dec
push
mov
or
mov
xchg
xchg
test
cwtl
mov
mov
aas
add
sub
mov
push
add
imull
or
jmp
jge
movsl
je
and
in
add
jbe
insl
xchg
pop
out
inc
mov
enter
push
pop
rep
pop
pop
xchg
jl
add
test
and
inc
xchg
subb
jge
out
int
or
daa
nop
sahf
filds
loope
cmp
mov
popl
sub
fcmovnbe
shlb
sahf
pop
test
mov
and
push
ficompl
add
and
test
pop
or
dec
fimuls
call
not
mov
pop
mov
popf
cmp
or
je
call
outsl
jno
push
add
ret
or
or
jmp
push
xchg
cld
bound
adc
movsl
mov
insb
gs
add
fcoms
ljmp
and
and
jp
xchg
repz
pop
jle
sub
rolb
shl
faddl
pop
leave
ret
xlat
push
or
jne
mov
pop
movsl
adc
add
pusha
jnp
mov
push
inc
test
rcr
mov
loope
sub
scas
cld
mov
in
sub
outsb
negb
jmp
pop
add
incb
jl
cltd
clc
clc
mov
xchg
mov
call
or
dec
gs
repnz
roll
adc
jmp
pushf
cli
sarb
inc
ja
add
jno
ret
adc
daa
scas
stc
outsb
pop
gs
inc
sub
clc
test
mov
mov
sub
and
add
sbb
cmpb
or
rcr
sub
mov
ljmp
push
add
jmp
cwtl
inc
mov
loope
jbe
stc
push
jne
or
cmp
adc
or
test
push
nop
fs
cli
cmp
clc
cmpb
sub
xchg
popf
loopne
orl
jb
sub
movl
lea
aas
mov
lods
pop
pop
cs
mov
cmp
inc
addb
dec
xchg
and
xchg
push
or
jo
ret
and
cmp
addr16
sti
jb
or
lds
hlt
decb
test
icebp
cwtl
lock
add
sub
jmp
and
jno
inc
jmp
adc
push
or
jb
or
ret
adc
adc
push
cwtl
mov
adc
lods
fnstenv
adc
dec
in
inc
fldl
cmc
out
sub
aad
jo
mov
andb
pop
or
xchg
inc
lcall
lock
popf
inc
jmp
cmp
cld
push
inc
jnp
inc
sbb
jne
or
scas
insl
lahf
sbb
inc
insb
fnstenv
jmp
sbb
dec
mov
mov
sbb
cvtdq2ps
lods
jb
shlb
call
sbb
xchg
and
lds
inc
movsl
pop
jmp
and
pop
fistl
je
push
movsl
loopne
and
and
mov
into
mov
js
mov
lods
and
adc
enter
add
push
inc
dec
cmp
inc
lock
testl
mov
hlt
inc
movb
inc
jne
mov
push
pop
shr
sub
mov
push
ror
sbbb
notl
clc
imul
add
jno
into
roll
test
push
pop
inc
mov
xor
push
inc
cwtl
jmp
adc
inc
push
enter
jl
inc
push
mov
imul
mov
lock
push
call
mov
or
jg
test
dec
jnp
ret
ret
pop
test
and
mov
sbb
fnstcw
and
mov
push
pop
loopne
aas
aaa
jmp
xchg
pop
lods
dec
pop
scas
test
push
je
push
nop
imul
adc
mov
push
inc
in
mov
test
inc
lock
or
in
mov
mov
mov
xor
sbb
in
inc
xchg
inc
and
sbb
in
and
fsubrs
pushf
fs
xchg
or
adc
call
xlat
in
in
cmpsl
test
mov
pop
dec
sbb
cld
mov
aam
ja
sbb
or
push
nop
arpl
jmp
dec
jmp
jne
mov
push
mov
dec
or
push
push
out
insl
xorb
call
add
dec
dec
ret
xor
popf
add
loope
pop
into
pop
cltd
fistps
sub
roll
inc
hlt
or
and
and
call
fistl
jae
push
sbb
cmpsb
adc
inc
fbstp
push
xor
xlat
adc
mov
xchg
push
mov
aas
mov
and
stos
pop
loope
data16
and
sbb
sub
lcall
jmp
inc
outsb
movsl
or
or
notl
cmp
mov
add
xorb
mov
jl
jmp
pop
sub
dec
fld
push
jne
fs
add
cmovl
mov
test
je
push
add
xor
fldl
jne
inc
in
lock
sbb
xorl
dec
pop
test
icebp
push
mov
or
cmpl
fdivs
xchg
mov
lret
mov
hlt
inc
test
add
add
pop
jne
add
decb
jb
cmc
inc
stos
jg
lods
and
and
jl
pop
pop
add
mull
ds
xorb
lret
jne
jbe
not
cwtl
sarl
repz
jle
or
xor
scas
fldcw
and
ja
jmp
pop
xchg
aaa
in
push
call
cld
or
jmp
cmp
push
jge
mov
inc
imulb
stos
xchg
mov
or
cmpb
sub
pop
xchg
and
pusha
test
imul
movsb
inc
sbb
adc
jns
and
insb
inc
mov
cmpsl
inc
jecxz
push
hlt
call
jne
push
or
cmp
lds
inc
sub
push
push
xchg
adc
mov
aas
mov
inc
and
rorl
add
js
and
leave
nop
pop
movsl
inc
je
adc
adc
jp
add
arpl
xchg
in
decl
test
mov
add
jle
cmp
pop
fmuls
mov
test
sbb
subl
xchg
mov
fnstenv
mov
loop
sbb
sub
inc
or
push
pop
dec
cmpsb
fstpt
test
push
mov
xbegin
leave
inc
repz
and
pop
push
cld
mov
call
and
jns
cmp
xor
inc
inc
dec
pop
inc
push
sub
bound
or
insb
into
sbb
mov
mov
mov
add
pop
push
sbbb
sub
aas
mov
cmp
push
dec
jae
adc
cmp
push
mov
sbb
adc
jmp
rorb
dec
add
add
pop
add
js
lods
daa
adc
or
adc
inc
add
xchg
add
jne
cmpsl
xor
pop
fcomps
insb
subl
or
xor
push
dec
addr16
or
mov
out
ret
inc
fs
cmp
lret
and
mov
adc
and
mov
add
mov
inc
sub
movsb
push
push
mov
mov
pop
popl
adc
negl
imul
jg
xchg
xchg
int
cmp
mov
mov
leave
sub
push
sbb
testb
add
inc
idivl
or
adc
jo,pn
sbb
lock
in
cmp
or
lea
mov
loopne
test
sbb
push
repz
xchg
adc
and
pop
adc
xchg
cmpb
xchg
cld
fmuls
xchg
adc
lahf
cld
cmpsb
pop
imul
fs
inc
jne
in
adc
adc
sub
jns
imul
je
bound
add
inc
jmp
cmp
ljmp
adc
xchg
add
add
or
jp
mov
xchg
sub
fisubrl
and
bound
inc
aad
lea
into
repnz
sub
mov
dec
aad
shrl
inc
enter
mov
jmp
aad
cmpb
xor
add
dec
mov
sarb
das
mov
test
or
out
std
jle
mov
push
je
mov
pop
xchg
push
xchg
jno
nop
mov
mov
mov
ret
mov
jns
sbb
push
in
cmp
test
pop
repnz
pop
inc
lahf
mov
and
jbe
insb
mov
imul
push
cmpsb
daa
shrb
ret
bt
pop
mov
hlt
jl
iret
out
jmp
sub
jp
mov
xchg
je
bound
and
or
out
ret
pop
sbb
lods
or
mov
xchg
xchg
outsb
dec
jp
push
xor
xchg
and
mov
or
inc
loopne
clc
xchg
negb
out
jp
xor
pop
sub
sbb
call
in
or
dec
mov
pop
mov
mov
mov
test
xor
cmpb
aad
xchg
or
push
daa
push
pop
push
fstpl
repnz
in
in
push
je
fsubs
and
clc
shr
lea
call
mov
rorb
loop
inc
sti
pop
sub
dec
push
add
repz
inc
pop
call
ds
sbb
lret
fdiv
enter
cli
sub
fcomps
xchg
test
dec
lea
fdivs
xchg
inc
movsl
cmp
cmp
xadd
add
fbld
bound
and
jg
sbb
imul
xor
outsb
and
shl
imul
mov
and
rol
push
adc
fdivr
dec
lret
xchg
or
pop
inc
or
pop
jae
ftst
ret
push
and
lock
sbb
add
ret
jae
fnstsw
adc
lea
les
inc
mov
or
and
loopne
cmp
sub
int
mov
add
mov
inc
jmp
mov
jns
mov
xor
xchg
jb
cmp
cmp
mov
xchg
sub
shl
dec
pop
xchg
or
dec
cmp
fdivrs
mov
pop
dec
adc
int3
loopne
inc
xor
push
jbe
add
rorl
xchg
or
or
or
and
dec
lds
leave
adcb
xor
lea
or
pop
adc
or
nop
push
mov
pop
movlps
sbb
lea
xor
mov
inc
mov
mov
mov
in
inc
and
jecxz
pop
xchg
xor
pop
sub
or
rcr
stos
lret
cvtps2pd
cmpsb
add
xchg
movsl
or
fisubs
or
push
mov
rolb
in
push
mov
xchg
and
cmp
mov
adc
push
and
sub
rcrb
mov
and
pop
pop
lahf
inc
push
xor
push
fldcw
fstps
shl
mov
test
xor
fidivs
and
sbb
sbb
add
popf
ja
cltd
or
stos
imul
sbb
adc
roll
add
mov
mov
test
pop
sub
mov
fucomip
pusha
gs
inc
inc
popf
jl
pop
mov
push
movsb
in
cmp
xchg
push
mov
cld
and
mov
or
or
adc
mov
push
movl
inc
movsl
adc
shr
mov
cmp
inc
outsl
dec
pop
dec
loop
mov
mov
xchg
inc
test
shrl
or
inc
sbb
or
lahf
enter
bound
adc
sbb
and
add
cmc
inc
aaa
lcall
adc
push
shll
or
lea
xor
sub
and
nop
xor
popa
adc
and
cmp
mov
add
sbb
inc
js
inc
mov
cmp
arpl
or
push
and
inc
pop
and
xor
pop
push
mov
xchg
or
cmpb
in
add
xor
sbb
and
mov
mov
xchg
jnp
hlt
jle
jp
pop
or
pushf
sbb
adc
fwait
cmp
pop
and
or
rol
cmpsb
mov
or
adc
sub
sbb
dec
int
fstpl
xor
adc
push
pop
data16
add
js
cmpsl
pop
adc
inc
jo
or
je
and
enter
dec
add
mov
sbb
mov
pop
js
cmc
adc
sbb
pop
or
or
int3
test
dec
sub
enter
cmp
push
and
fmull
pop
dec
jbe
adc
and
sub
mov
or
movsb
push
fwait
ret
dec
xchg
enter
into
push
ss
cltd
aam
mov
inc
cmp
sbbb
or
adc
add
pop
inc
add
add
repz
test
add
or
test
pop
mov
push
int3
and
add
unpcklps
and
xor
push
test
push
xchg
fs
daa
or
pop
setl
mov
push
mov
mov
push
add
nop
sub
add
push
test
sbb
sbb
nop
pop
lret
push
inc
test
or
xchg
sbb
data16
add
push
add
fs
or
mov
andl
scas
mov
mov
dec
dec
and
mov
adc
fcoml
xor
push
pop
addl
mov
and
in
and
lret
js
jg
jns
pop
shlb
in
jb
lahf
jb
push
mov
push
ret
xor
mov
xchg
addl
rcrb
pusha
daa
mov
inc
dec
mov
pop
mov
and
xor
pop
orl
inc
cld
cmpb
add
mov
push
ficoms
sub
adc
imul
xor
xor
dec
mov
add
pop
sbb
or
sbb
xchg
push
adc
mov
cmp
sti
leave
mov
inc
push
bound
mov
sbb
adc
sbb
xchg
inc
adc
add
sbb
sbb
sub
icebp
and
jge
xlat
add
and
push
repnz
push
or
or
sub
cli
adc
and
mov
sub
js
stc
outsl
push
dec
push
sub
fiaddl
sbb
pop
pop
push
inc
test
or
dec
pop
sbb
mov
sbb
in
or
inc
scas
adc
stos
lds
fstpt
or
sbb
sbb
mov
and
icebp
out
push
and
les
bound
xor
sbb
fbstp
push
jge
inc
sbb
sbb
sbb
mov
mov
cli
push
push
jl
aaa
add
clc
mov
jge
imul
add
inc
lret
push
call
mov
pop
or
loope
add
push
and
add
rcrb
dec
icebp
push
lahf
and
lahf
sti
cmp
ret
sbb
adc
inc
sbb
mov
push
push
les
push
in
push
mov
add
lret
sub
add
push
cmc
mov
fsubr
and
sbbb
subl
ret
adc
in
dec
lea
xor
cmp
cmp
jns
or
idivl
fmuls
enter
fwait
mov
or
sub
jmp
sbb
inc
dec
lahf
in
xchg
mov
lods
not
adc
xchg
out
lock
adc
lods
movsl
jecxz
inc
pop
jnp
fcoml
xchg
ljmp
jo
je
loopne
call
xor
subl
and
xchg
les
bound
les
sbb
inc
adc
sub
shr
push
or
inc
out
call
dec
xchg
add
sbb
adc
or
or
popa
sub
jb
lock
stos
sbb
dec
sbb
add
xor
ss
inc
lds
adc
repz
push
jmp
test
std
fdivrl
ljmp
nop
mov
xor
lea
fwait
inc
cwtl
call
and
sub
or
and
nop
mov
and
sbb
insb
push
mov
jl
push
testb
outsb
lea
push
cld
popa
enter
fisttpl
dec
int3
push
out
pop
adc
sbb
inc
das
hlt
call
adc
dec
inc
cmp
loopne
inc
punpcklwd
loope
cltd
mov
and
push
hlt
ret
cmpsl
jle
inc
aaa
lcall
call
and
xor
aam
push
xor
mov
inc
cmp
mov
mov
adc
pushf
adc
scas
nop
adc
lret
cmc
xchg
inc
movsb
scas
pop
jge
mov
imul
lahf
in
mov
imul
mov
lods
mov
daa
inc
mov
pop
sub
test
movsl
fs
jbe
adc
mov
fistps
mov
test
adc
add
in
mov
or
pop
pop
pushl
add
adc
inc
pusha
and
les
cmp
push
insb
daa
inc
push
pop
add
sub
push
jl
jo
mov
mov
jnp
pop
adc
adc
push
test
pop
cmp
popf
lock
shr
sub
orb
or
xchg
loop
cmpl
or
imul
add
cmp
xchg
nop
bound
jmp
insb
dec
and
push
add
xor
mov
andl
int3
sbb
add
cld
cltd
sbb
pop
inc
insb
adc
dec
add
inc
pusha
inc
push
mov
aas
pusha
xor
or
mov
and
mov
jb
js
lea
or
loope
fsub
testl
or
movsl
enter
and
ret
fimuls
out
insb
mov
add
arpl
cli
lock
or
vpsubsw
or
mov
bound
xchg
dec
fcomi
insl
cli
xor
aad
or
icebp
aam
mov
and
inc
insb
adc
push
inc
out
or
jge
sti
decb
xor
sar
mov
outsb
sub
das
adc
js
or
sete
mov
push
xchg
xchg
or
leave
push
jnp
aad
push
xor
push
inc
and
es
and
xor
and
and
divl
mov
adc
mov
xor
push
sbb
and
push
bound
mov
fdivrl
add
pop
es
ja
hlt
lret
inc
push
pop
or
adc
push
or
test
rolb
int
push
or
adc
mov
push
xor
push
lock
incl
sbb
dec
adc
pop
mov
fsubrl
xlat
xorl
call
aas
add
ds
shll
incl
sbb
ljmp
cmp
jbe
inc
mov
sub
add
add
hlt
lret
adc
mov
cld
repz
mov
imul
adc
inc
add
and
xchg
and
inc
aas
cmp
ja
incl
fistl
fbstp
mov
mov
sbb
push
push
jp
mov
push
fistps
clc
xchg
jnp
dec
push
mov
xchg
lret
sar
or
add
lldt
ljmp
mov
or
roll
fsubrs
jp
mov
add
xor
ss
aas
cmp
call
inc
adc
clc
sub
fiaddl
lret
test
lret
ret
mov
add
mov
nop
dec
add
jno
inc
mov
icebp
adc
pushf
stos
fs
sbb
push
test
inc
mov
imul
push
sbb
add
dec
clc
or
jl
pop
adc
pop
inc
dec
cld
sub
incl
jae
call
pop
push
adc
adc
nop
fucomp
aam
jne
push
sub
dec
add
or
mov
push
ficoml
sbb
addl
cmpl
sbb
adc
or
or
or
rol
xchg
dec
imul
mov
cmp
and
pop
or
jmp
adc
push
or
xlat
popa
sbb
xor
add
xchg
arpl
pop
mov
pop
xchg
test
leave
mov
mov
out
dec
dec
adc
xorb
pop
push
fistl
xchg
sbb
xor
incb
xorl
jb
and
ret
loop
enter
sub
dec
inc
je
push
js
mov
push
jae
mov
mov
mov
sbb
cs
roll
bound
std
pushf
or
mov
add
js
mov
pop
xor
add
out
data16
push
push
adc
add
mov
jmp
repz
and
adc
mov
lahf
inc
push
sub
and
jns
loope
add
cmc
mov
adc
dec
ret
xchg
repnz
and
mov
mov
xor
fs
jge
mov
mov
sbb
adc
mov
mov
inc
cmp
mov
mov
cmp
aas
adc
xchg
or
mov
jmp
inc
push
mov
mov
mov
adc
jmp
ret
mov
sub
cmp
lods
xchg
cmpsb
and
enter
je
inc
sub
dec
adc
je
lods
lods
or
insl
inc
inc
pop
orl
jo
psrlw
sub
xchg
enter
jge
and
pop
mov
mov
inc
call
repz
test
mov
in
cmpsb
seta
push
push
sbb
xor
mov
pop
insb
daa
clc
jb
pop
sbbb
xchg
test
repnz
shl
lea
shlb
jmp
cmp
test
sub
cmp
inc
push
mov
mov
add
cld
mov
xor
sub
jnp
push
mov
jmp
inc
rorl
ss
sub
jne
sbb
loope
sbb
ret
xchg
bound
in
sahf
and
jmp
mov
xor
hlt
test
push
cmp
int
clc
or
dec
cltd
xchg
xchg
cli
xlat
adcl
cmp
dec
pop
ljmp
pop
jge
sti
xor
ret
xor
aam
pop
cmp
dec
cli
and
adc
jae
sbb
inc
add
packsswb
add
filds
jl
inc
add
clc
adc
xchg
repnz
adc
test
push
and
bound
add
insb
xor
mov
push
dec
xchg
insb
dec
dec
orb
call
rorb
imul
filds
shll
and
ret
mov
ret
mov
inc
dec
sub
cmpsl
rolb
cmpsl
sbbb
arpl
sahf
add
es
cmpsb
popa
and
call
ds
lock
jmp
push
nop
cmp
dec
in
dec
pop
dec
push
inc
sub
rorl
insb
dec
cld
adc
es
push
push
imul
and
add
push
inc
sbb
call
ljmp
mov
inc
aam
rorb
jo
aam
clc
adc
inc
sbb
fsubs
mov
push
or
add
loopne
bsf
and
rorb
ljmp
loope
aad
hlt
dec
xchg
das
sti
add
jl
rcrb
and
lods
test
xor
leave
xor
push
nop
fs
push
pop
mov
jo
ret
fucomp
js
xchg
lea
xchg
inc
mov
test
and
mov
cmpsb
cmp
and
cmc
or
dec
jge
adc
or
push
les
xor
mov
mov
mov
mov
int3
xchg
cmp
mov
popf
mov
test
inc
divl
adc
inc
mov
mov
es
pop
cltd
daa
jno
and
mov
gs
xor
das
adc
ret
cwtl
xchg
sbb
into
mov
stos
cmp
jb
loope
lret
repz
mov
or
mov
sub
lret
stos
test
data16
imulb
test
mov
or
pop
subl
pop
mulb
jmp
xor
or
inc
imul
shl
sbb
jb
shlb
cmp
cmc
mov
push
xor
and
add
mov
sbb
mov
dec
push
jg
scas
jne
icebp
stos
lock
add
lea
js
lcall
inc
mov
inc
dec
out
inc
iret
mov
jge
add
sti
inc
sbbb
hlt
mov
and
adc
sbb
fsubrl
or
add
mov
inc
jae
inc
sahf
xor
rol
aam
push
adc
pop
aam
or
mov
or
dec
push
push
sbb
fsts
daa
inc
insb
and
sbb
push
stos
fwait
out
mov
cltd
sbb
adc
mov
add
xor
hlt
popf
js
or
lea
daa
sub
mov
mov
and
fcmovbe
add
mov
dec
mov
inc
clc
adc
scas
je
lea
pop
nop
pop
hlt
jl
dec
jmp
mov
or
call
addl
add
dec
scas
mov
cs
mov
sub
out
adc
testb
je
and
xchg
repz
or
lret
push
outsb
inc
inc
jecxz
inc
inc
sahf
stc
aaa
dec
mov
lods
cmp
cmp
cmp
mov
push
adc
jno
sarb
lea
mov
ss
mov
adc
jne
and
adc
pop
jmp
out
push
add
and
cmp
fdivrs
les
mov
mov
push
push
or
adc
xchg
pop
add
fdivr
lea
adc
movsb
xchg
dec
push
mov
iret
movsl
sbb
and
lcall
mov
sub
mov
lods
insb
shl
inc
shll
add
movsl
cmpl
sub
xchg
in
cmp
mov
mov
sub
jge
lock
inc
mov
cmp
cld
div
decb
or
iret
or
fdivs
frstor
sbb
outsb
stos
xor
push
in
test
movsb
adc
dec
or
shlb
and
mov
pop
adc
push
xor
push
out
les
or
xchg
adc
xor
jmp
jp
and
lcall
push
add
push
pop
adc
xor
xchg
adc
jmp
push
xor
pop
or
xchg
xchg
jmp
jge
ret
lret
jl
or
or
dec
call
std
xor
cs
mov
cld
add
adc
and
popa
inc
andnps
jns
fldenv
and
cltd
scas
dec
xor
dec
jl
mov
push
jmp
sub
xchg
mov
adc
movsl
push
adc
push
push
insb
xor
mov
es
inc
sbb
cwtl
xchg
push
adc
sub
sbb
cmp
or
nop
sbb
icebp
cmp
sub
imul
mov
je
adc
adc
sub
add
cmp
jb
mov
jno
shr
mov
cmp
pushf
jnp
mov
lret
frstor
cs
int
sahf
rclb
adc
cmp
out
and
sbb
and
cltd
test
mov
std
clc
or
pop
jl
jl
sub
mov
int3
dec
hlt
add
xchg
mulb
int3
add
and
lds
jp
add
enter
pop
inc
lret
jno
jp
loope
and
in
inc
pop
sub
cmpl
mov
test
jo
add
jmp
nop
les
imul
jecxz
in
mov
dec
jl
jae
cmp
jne
cmp
add
lods
fcompl
or
sbb
repz
sarb
mov
adcb
ret
mov
mov
or
or
inc
imul
cmpl
hlt
cwtl
xor
cmp
jg
jmp
xchg
dec
aam
push
decb
dec
mov
and
mov
push
sub
push
enter
int3
add
mov
aad
aam
hlt
ljmp
dec
les
test
sbb
pop
mov
lret
adc
enter
push
jp
aaa
mov
sub
add
and
je
imul
sub
add
xchg
pop
sbb
xchg
fnsave
sub
push
adc
cmp
jbe
sbb
ret
push
cmp
stos
mov
mov
rsqrtps
lods
inc
xchg
inc
movsb
add
sub
icebp
xor
adc
enter
int3
push
rolb
jg
jmp
and
adc
test
dec
movsb
or
out
mov
push
mov
es
setle
add
cwtl
add
cmp
and
adc
xor
sub
push
xchg
insb
test
mov
or
adc
push
dec
into
mov
add
mov
ljmp
aas
jnp
into
jmp
cwtl
inc
addb
call
push
adc
nop
add
jns
cwtl
xchg
sub
popa
dec
mov
out
addr16
jecxz
and
subb
flds
enter
sub
inc
xchg
sbb
cmp
movzbl
mov
sub
hlt
shr
sbb
inc
push
cltd
xor
sub
and
js
mov
ss
and
and
sbb
jo
lea
pop
das
push
mov
cmp
dec
inc
jl
fmul
jmp
repnz
xor
jle
into
popa
sbb
push
in
ror
sbb
jae
cmp
add
sahf
ds
push
push
andb
sub
ret
fs
pusha
sbb
add
dec
add
push
mov
adcb
scas
test
test
and
cwtl
push
or
lcall
mov
add
cld
add
pop
dec
sub
enter
push
clc
inc
push
add
pushf
or
xchg
nop
mov
mov
mov
and
mov
xchg
mov
xchg
inc
dec
xchg
inc
dec
stc
mov
sub
adc
xor
adc
inc
std
pop
mov
call
push
add
sub
sub
add
mov
movsl
push
movsb
repnz
sub
fs
mov
fisubrl
scas
jg
stos
outsl
ja
mov
ret
xor
lahf
xlat
aas
sti
jle
test
popf
push
pop
rclb
pop
lock
pop
and
adcb
mov
adc
test
pushf
and
and
fisubl
adc
fcom
adc
or
sbb
in
lea
xor
or
xor
sbb
ficompl
in
inc
sbb
adc
xchg
ds
or
stc
cmp
xchg
push
and
adc
jbe
adc
cmp
and
ds
dec
loopne
mov
push
mov
pop
xor
or
shrl
cmp
test
push
ja
and
fwait
lret
sbb
enter
ljmp
cmpl
and
dec
adc
and
dec
mov
adc
xor
and
pop
cwtl
inc
xor
mov
sub
adc
adc
repz
shll
and
push
repz
in
mov
xor
and
and
mov
mov
dec
into
rorb
pop
push
dec
jle
inc
jmp
dec
xchg
or
loope
adc
pop
pushf
inc
sub
inc
push
jge
push
xor
push
adc
adc
lret
adc
or
jne
and
cmp
mov
loopne
imul
aaa
pop
or
mov
xchg
movsb
and
pop
sbbb
jbe
lods
mov
adc
shll
and
lds
inc
mov
mov
push
imul
leave
or
fldcw
pop
mov
xchg
fadds
and
loopne
sub
dec
or
in
mov
icebp
cmpsb
jle
negb
rolb
cli
mov
dec
xor
lret
ficoms
popf
enter
stc
or
repz
add
and
mov
pop
shlb
arpl
jp
ds
pop
repnz
mov
movsl
in
jne
out
pop
ret
idivb
fdivs
inc
leave
rolb
ficompl
mov
imul
add
sarb
jle
dec
jle
clc
sub
mov
dec
inc
mov
fisttpl
push
sub
pop
jb
je
dec
ss
sub
xorl
in
dec
push
mov
pop
push
inc
jmp
jne
notl
roll
or
add
inc
dec
and
and
je
add
or
aas
sbbl
dec
inc
cmp
push
mov
add
dec
lods
inc
add
jg
pop
jg
pop
mov
imul
mov
cld
dec
dec
jge
mov
test
pop
ja
xchg
bound
inc
fs
push
pop
inc
lock
and
jl
jmp
mov
aaa
push
dec
xor
adc
shlb
subl
push
dec
or
out
inc
incb
sbb
xchg
or
mov
in
das
push
jns
out
aaa
divb
pop
clc
cwtl
mov
fdiv
or
or
or
adc
add
adc
mov
or
jne
mov
dec
pop
jmp
addr16
imul
jbe
sbb
sub
adc
pop
repnz
inc
adc
je
or
sub
cli
cmpb
xchg
jne
mov
ficomps
xchg
xchg
fisttpl
shll
xor
mov
push
inc
jne
cwtl
imul
mov
js
mov
push
in
add
mov
mov
scas
push
sub
in
mov
daa
arpl
bound
pop
dec
mov
mov
add
mov
and
not
inc
and
call
movb
mov
adc
pop
test
enter
mov
cltd
push
mov
leave
xchg
scas
test
mov
je
inc
jl
mov
aaa
pop
xchg
add
push
adc
int3
mov
sbb
call
pop
adc
or
or
cld
or
popf
xchg
in
scas
sub
jmp
in
or
cmp
pop
add
je
loop
dec
orb
push
mov
and
adc
mov
movsl
fimuls
and
cltd
xor
and
dec
add
adc
fwait
jae
adc
jbe
jmp
mov
ficoml
pop
dec
xor
dec
or
xor
test
xchg
fstpt
and
inc
push
lea
or
mov
xor
enter
inc
mov
ficomps
and
mov
mov
cwtl
mov
loopne
mov
aad
jmp
jmp
sub
xchg
mov
pop
sbb
dec
push
mov
dec
xchg
sbb
pop
xor
lea
inc
sub
scas
scas
cwtl
xor
pop
loopnew
and
and
out
daa
test
cld
lock
pop
adc
clc
popa
sub
adc
and
call
push
jmp
into
nop
mov
sbb
jle
sub
jne
leave
adc
lcall
arpl
mov
sbb
std
pop
and
mov
add
clc
mov
push
mov
and
sub
add
or
jbe
mov
xchg
pop
insb
xchg
adc
lcall
int
xor
pop
repnz
add
push
frstor
fistps
add
pop
fsubrl
jno
cli
jg
js
stc
mov
push
imul
push
cmp
mov
xchg
test
call
les
and
push
inc
sbb
gs
adc
fldenv
cltd
adc
xor
adcb
pop
jmp
mov
adc
leave
movsl
xor
push
mov
pop
inc
add
leave
nopl
jp
outsl
ds
pop
les
inc
pop
andl
or
jne
inc
dec
enter
pop
and
mov
adc
repz
dec
add
inc
sub
lret
sub
and
mov
cmp
dec
test
repz
sub
and
cmp
cs
push
add
cmp
and
xchg
arpl
fcoms
orl
lcall
cltd
and
inc
inc
std
xor
mov
push
xchg
pop
push
inc
into
sub
mov
fisubs
into
inc
arpl
adc
mov
test
aaa
es
or
push
mov
jl
mov
daa
xlat
in
dec
pop
and
or
das
cld
popa
mov
mov
enter
and
jmp
jmp
lret
fdivr
bound
adc
enter
cld
lds
scas
cmpsl
mov
in
jg
mov
and
add
je
mov
mov
or
movaps
sti
cmp
or
enter
lods
push
or
pop
and
popf
xchg
jns
jmp
cmp
jns
lret
add
jp
push
mov
out
or
fidivl
sub
xchg
sbb
and
fsubrs
ficoms
xchg
or
adc
dec
jmp
lods
jnp
pop
jne
add
mov
inc
clc
aaa
test
push
insl
push
mov
js
adcb
lds
push
mov
jae,pn
stos
cmp
sahf
or
cmpl
xor
loopne
dec
pop
xorb
mov
xor
inc
pop
les
and
pop
jne
adc
inc
sub
iret
mov
add
data16
sbb
mov
inc
notl
stos
shrl
dec
out
xchg
xchg
push
mov
call
scas
lret
mul
xchg
mov
push
cmp
mov
sub
xor
mov
icebp
sbb
adc
loop
sub
outsb
stos
mov
pop
and
adc
mov
scas
je
pop
sbb
ljmp
and
push
sub
push
mov
or
and
inc
or
cmp
les
jbe
fsts
call
xchg
andl
les
push
sub
jmp
mov
int3
sbb
and
xchg
jle
xor
xor
add
dec
xchg
cld
xchg
cmp
repz
sub
ret
xor
or
adc
jle
adc
pop
dec
in
test
dec
mov
mov
int3
es
push
push
lods
jp
sub
push
lcall
xchg
roll
xor
cmp
test
dec
ret
sbb
movsl
mov
sub
cmp
add
mov
inc
push
mov
push
jns
xor
xor
xor
int3
add
sti
popa
or
or
stos
lods
push
cwtl
mov
push
out
lods
mov
dec
jne
les
dec
jp
pop
call
push
in
jp
lods
dec
je
xorb
jo
jo
dec
ret
inc
xor
inc
add
jne
aam
mov
add
add
mov
and
es
fbld
cmp
mov
xchg
fildll
jne
and
adc
sbb
jl
adc
add
in
leave
inc
cmp
sub
add
adc
adc
mov
push
test
or
and
lds
dec
es
or
loopne
xchg
or
test
dec
in
sub
fsubl
cli
ret
loopne
xchg
test
add
jae
push
xchg
or
shll
inc
cs
and
mov
xchg
sub
divl
pop
adc
ret
sbb
loopne
movsl
insb
xor
test
xchg
mov
pop
and
mov
and
lds
out
dec
xchg
jg
or
mov
sbb
add
and
jbe
sahf
imul
rclb
call
xor
and
cmp
or
sbb
shlb
sbb
sbb
or
add
mov
cmp
mov
push
sbb
je
inc
or
xor
xor
insb
sub
push
hlt
adc
jno
xor
cmp
push
enter
out
rolb
aaa
sbb
repnz
xchg
icebp
outsb
xchg
arpl
push
addr16
xchg
fcoms
rcll
adc
mov
int3
imul
pop
jmp
sub
sub
lcall
or
fiadds
jb
jne
shrl
dec
fcmovu
pushf
pop
pushf
test
and
xor
les
inc
add
sub
ja
pop
mov
push
jbe
dec
dec
push
xor
pushl
mov
push
shrb
ss
pusha
sub
test
dec
test
out
jmp
cmpsb
adcb
mov
andl
test
call
or
fidivrs
cli
xor
or
out
and
xchg
clc
imul
and
fs
sub
push
mov
and
sub
dec
push
push
scas
jbe
mov
or
inc
add
popf
les
int
jp
fisttpl
push
in
and
adc
jne
mov
xchg
cs
outsl
test
cltd
insb
sub
push
outsl
loope
xchg
xor
je
rolb
imul
sarb
push
out
mov
cld
mov
int3
daa
push
lcall
sbb
pop
or
into
mov
inc
das
pop
out
lcall
iret
mov
enter
sahf
push
lds
jle
or
test
push
adc
sub
mov
push
repnz
and
add
xor
inc
or
add
fists
out
add
popf
push
jg
mov
mov
adc
xor
xchg
cli
dec
movsl
call
or
jnp
inc
in
ss
or
pop
lods
stc
adc
loop
mov
or
sbb
and
add
mov
add
cmpsb
mov
xor
cli
xchg
adcl
inc
movsl
lcall
or
xchg
sarl
sub
js
dec
sub
sub
es
test
and
mov
enter
adc
loop
adc
jne
aam
inc
dec
or
add
cs
sbb
mov
and
loop
xor
dec
les
ljmp
dec
std
sub
lock
in
mov
push
add
jb
xor
jl
xchg
das
lods
fs
sbb
pop
dec
imulb
xchg
jo
inc
sub
mov
add
jne
push
add
lea
cmp
rcll
cmc
fadd
in
and
fdivs
jmp
adc
jmp
mov
jne
jo
jmp
push
pop
andl
add
push
push
mov
add
mov
nop
adc
mov
pusha
push
aaa
lahf
cltd
adc
xorb
mov
push
adc
mov
lret
jnp
lcall
pop
dec
adc
lcall
or
pushf
adc
iret
sub
outsl
int3
xchg
jge
sub
movb
mov
add
inc
pop
mov
rolb
jo
push
call
jns
es
mov
pop
jno
and
dec
clc
sub
cmpsl
jb
imul
cmp
mov
je
mov
xchg
xor
dec
popa
out
popa
mov
ds
mov
pop
andl
jge
cmp
cli
icebp
mov
or
repz
or
and
and
xchg
jb
jl
daa
es
push
cmp
push
scas
or
push
push
inc
inc
push
fs
cltd
dec
jae
sar
insb
pop
and
jecxz
das
mov
xchg
shll
jge
sbb
inc
daa
es
inc
or
sub
rorl
pop
mov
cmp
in
add
pop
lahf
adcb
push
ja
xchg
imul
sarb
outsb
inc
mov
dec
xchg
or
xchg
jl
mov
inc
sub
inc
jne
or
jb
mov
sub
push
stos
sarl
shl
cmp
lds
sbb
push
in
insl
sarb
mov
fistps
cwtl
das
fcoms
pushf
sbb
fldenv
sbb
lea
mov
pop
pop
sub
xor
subb
jo
cmp
test
pop
fucomi
sbb
cmpb
pop
push
sub
adc
adc
ljmp
sbb
pop
adc
fs
clc
out
xor
je
dec
fisubrs
and
or
test
lcall
aas
push
in
stos
iret
call
mov
fisubrl
pop
mov
xor
add
push
xchg
movl
add
and
loope
movl
jne
mov
and
lds
xchg
mov
xchg
xchg
loop
adc
push
cmp
adc
test
in
sahf
mov
or
rcrb
inc
push
lret
data16
cmp
les
xchg
mov
sub
sbb
mov
loope
xchg
imul
adcb
mov
das
es
dec
sbb
push
mov
sarl
js
add
push
mov
adc
test
nop
adc
inc
sub
fbld
inc
sub
cmp
jno
inc
sbb
mov
sbb
leave
jp
push
mov
mov
aas
les
add
leave
add
adc
ret
sti
mov
pusha
lods
outsb
xchg
or
inc
mov
xchg
repnz
xchg
jmp
cmp
call
repnz
pop
jnp
inc
push
mov
adc
xchg
lock
out
adc
xorb
pop
mov
pop
enter
jb
ds
testl
pop
addr16
das
push
push
les
addb
ja
shl
arpl
inc
fbstp
push
adcb
dec
enter
and
fistl
ret
in
xchg
aaa
adc
bound
adc
inc
dec
cmp
jl
sbb
and
add
orl
les
ja
push
adc
push
orb
movsl
push
lahf
sbb
sbb
or
in
pop
adc
pop
push
pop
jmp
ljmp
dec
sub
sub
scas
jl
inc
adc
adc
and
xor
mov
fcoms
sbb
test
xor
push
les
and
loope
cmp
jo
idiv
xchg
xchg
jp
ja
mov
sbb
mov
or
or
xor
adc
adc
mov
fldl
sbb
and
or
mov
or
pop
ret
lret
aaa
movl
inc
sub
or
in
mov
fs
das
mov
addr16
sbb
leave
jge
adc
icebp
cld
cmp
lea
mov
xchg
test
outsl
pop
sub
or
pop
add
frstor
sub
stos
add
call
pop
and
and
mov
add
pop
clc
or
mov
pop
cmpsb
ss
adc
xor
ret
in
aad
or
push
nop
mov
test
movb
push
dec
mov
sbb
add
dec
repz
mov
imul
push
sbb
sbb
in
dec
andl
and
js
mov
adc
push
jge
xchg
je
ret
mov
add
xor
mov
push
std
dec
pop
cmc
ret
jne
pusha
mov
data16
add
fdivrl
mov
cwtl
cmp
dec
in
std
dec
cs
cltd
inc
push
je
test
and
sbb
add
push
push
stos
pop
xor
jl
mov
push
add
push
add
lcall
repz
leave
jge
adc
xlat
call
mov
or
adc
lret
ja
adc
cli
mov
xchg
xchg
mov
rol
cmp
xchg
fs
sbb
insb
push
and
call
push
jnp
sub
jl
shr
in
sub
mov
cmpl
roll
inc
shr
movsb
sbb
mov
sarl
mov
sub
mov
cmp
mov
or
xor
stos
cltd
or
jge
jl,pn
sub
inc
pop
insb
push
adc
mov
lock
jge
test
add
test
mov
mov
xor
adc
inc
push
lahf
jae
sub
push
jl
pop
in
dec
mov
xor
out
sarb
cmpl
and
add
push
push
call
inc
or
in
adc
xchg
or
jb
shlb
xor
ja
repz
xchg
mov
mov
inc
inc
jge
jecxz
loop
and
add
push
pushl
or
pop
mov
mov
ret
and
mov
test
inc
push
push
add
int3
dec
sti
mov
jne
mov
dec
adc
jl
arpl
in
xor
cmp
jae
mov
dec
adc
aam
mov
xchg
sbb
pop
pop
push
ret
sahf
cli
jmp
dec
xchg
dec
sbb
jle
add
inc
or
xchg
lock
test
push
inc
hlt
adc
push
stc
test
or
jo
in
push
mov
addb
mov
into
and
xchg
cmp
cmpsb
sbb
push
add
adc
mov
inc
les
pop
lock
jbe
or
add
jne
sub
cmp
mov
cmp
dec
pop
jne
inc
pop
push
mov
xor
pushf
add
jg
jmp
nop
xor
mov
mov
mov
push
adcb
bound
jno
aas
jecxz
xor
outsl
shlb
pop
or
and
jle
add
neg
push
push
xor
add
jae
mov
jne
mov
add
and
cwtl
adc
cwtl
mov
push
jne
cli
or
gs
insl
xchg
aad
in
xchg
xor
push
xor
lret
xor
repnz
pop
mov
and
jnp
push
mov
pop
mov
enter
and
gs
les
pop
outsb
lds
repnz
loope
mov
test
inc
or
mov
push
mov
enter
cli
pop
xchg
push
mov
or
pop
or
or
scas
mov
dec
or
cmc
dec
mov
jns
add
or
sbb
pop
pop
fldcw
daa
fcoml
cmp
dec
leave
jne
jmp
xchg
es
mov
mov
in
pop
stos
cmp
and
sbb
add
mov
sbb
add
or
pop
std
jp
stc
sub
mov
jnp
lods
je
pop
loope
shrb
cmpsb
fcoml
sub
push
or
popf
push
sub
inc
movsl
pop
push
xor
sbb
jno
sti
test
cmp
xchg
cli
lock
push
xchg
pop
inc
and
sbb
subl
fldenv
cli
gs
mov
add
icebp
sub
sti
xor
sbb
xlat
pop
push
jg
sti
and
cmp
and
rclb
mov
push
jge
and
jno
or
cmp
pop
std
mov
inc
or
and
dec
mov
cltd
dec
mov
test
addl
jns
or
or
add
pop
mov
add
xor
enter
lds
mov
mov
aaa
inc
aas
mov
jmp
pusha
fs
lcall
stc
fs
mov
fildl
call
or
mov
or
femms
pop
adc
or
js
sbb
div
or
or
dec
gs
cltd
push
add
loopne
lret
stc
lods
add
loop
mov
mov
cmp
insb
mov
adc
mov
xchg
cmp
adc
cmp
add
sub
add
clc
push
sub
add
ljmp
jle
call
notl
shrb
lret
adc
cld
adc
or
sar
sbb
out
jns
mov
jmp
outsl
mov
push
call
rorb
push
and
outsb
inc
dec
nop
pop
loop
jmp
subb
call
enter
verw
je
lret
or
in
pop
mov
popa
jne
out
cmpb
mov
cwtl
add
cs
cltd
adc
push
pop
sub
and
mov
pop
fisttpll
mov
jle
xor
gs
fbstp
lods
repz
jmp
add
stos
nop
in
hlt
gs
or
inc
add
call
dec
call
sbb
popf
fmulp
jecxz
dec
nop
adc
das
jns
sahf
ret
pop
xor
out
subb
loop
and
rolb
adc
fisubl
or
xlat
arpl
push
pop
inc
jmp
test
leave
nop
aaa
aaa
call
loop
sub
movups
shrl
pop
mov
sbb
xchg
lea
and
dec
xor
and
popa
aaa
fidivs
enter
cmp
je
push
jl
inc
cld
sub
pusha
dec
es
or
pop
lds
mov
roll
test
cmpsl
push
bound
insb
or
testl
inc
push
das
pop
inc
aas
ljmp
mov
cmp
test
push
call
inc
ret
add
jne
dec
and
sbb
add
fisubrl
sub
cmpsb
sub
or
push
and
cmpb
push
nop
ds
nop
jae
call
pop
add
push
pop
mov
jnp
adc
cmp
clc
fmull
add
je
jge
mov
call
inc
or
cmc
dec
mov
cmovnp
mov
in
xchg
jl
mov
sub
ja
mov
inc
insb
fs
mov
push
lods
xor
shlb
sbb
and
or
std
xchg
js
ret
jno
sbb
sbb
adc
aad
cli
jp
mov
int3
or
adc
ret
jne
xchg
pushf
jbe
nop
or
or
lds
cmp
mov
in
and
sub
out
dec
rorb
orb
adc
enter
ror
jns
sahf
cmc
rcll
in
jl
xchg
ds
jnp
jmp
sbb
dec
mov
mov
shlb
pusha
js
add
xchg
inc
adc
cmpsl
pop
out
sub
pop
jle
dec
repz
roll
and
shl
ret
xchg
and
jo
jno
adc
xlat
cld
repz
cmc
lds
cmp
je
imul
ja
jne
fs
pop
loopne
sbb
push
adc
into
or
pop
dec
mov
dec
adc
cwtl
adc
xchg
popf
push
pop
orb
js
mov
sub
flds
inc
and
sbb
mov
inc
push
pop
xor
rcrl
test
out
xor
subl
ljmp
subl
add
inc
aas
push
int
mov
and
out
adc
sbb
add
dec
add
or
lods
icebp
popa
push
dec
cmp
jge
into
or
dec
xchg
mov
fistl
xchg
call
testl
incl
jmp
mov
movsl
lods
inc
jnp
add
and
outsb
inc
cmp
sbb
bound
adc
neg
add
sar
mov
jle
pop
lods
sbb
dec
xchg
dec
test
cmpsl
lcall
xor
jnp
and
mov
add
sub
adc
or
out
notb
sub
push
xor
xor
mov
fiaddl
sbb
shlb
call
adc
push
jl
call
loopne
in
fadds
nop
push
fmul
adc
sub
push
or
mov
mov
mov
adc
cwtl
adc
adc
clc
pop
and
dec
ret
cmp
fcom
jne
mov
xchg
stc
imul
xchg
jbe
sub
lea
and
sub
inc
and
jbe
bound
pop
and
sbb
push
push
cmc
in
xor
gs
lahf
xchg
push
or
cmpl
mov
jmp
mov
xorb
repnz
mov
cmp
jmp
out
xor
ficomps
testb
loopne
into
mov
call
mov
and
or
jmp
dec
xabort
sub
sahf
out
jne
fisttps
adc
mov
mov
or
inc
rcll
add
leave
call
pop
or
inc
movl
out
ja
sub
leave
jno
fldl
xchg
adc
jo
pop
test
or
shlb
les
cld
mov
sub
daa
jo
jp
aad
int3
loopne
in
adc
mov
adc
shrb
out
sub
rol
push
jnp
jo
sbb
xchg
in
cmp
ja
es
xlat
sub
call
sub
stc
or
sbb
adc
pop
adc
into
dec
push
xchg
sbb
sub
adc
call
mov
mov
pop
lods
into
nop
cltd
dec
inc
out
jns
pop
push
jbe
dec
mov
mov
and
mov
fdiv
cmp
add
inc
or
dec
jg
jg
push
adc
push
adc
add
jl
lock
ret
cmp
jmp
ljmp
shlb
push
mov
push
dec
xor
mov
loop
jge
pop
cmp
inc
jmp
pop
mov
inc
mov
sarl
loope
fs
je
jl
repnz
mov
sbb
jg
mov
adc
jae
sub
mov
adc
xor
mov
push
mov
mov
imull
test
or
stos
mov
je
inc
mov
repnz
lret
push
push
call
jnp
imul
shrb
cli
xchg
inc
repz
outsb
cmp
push
xchg
sbbb
jbe
mov
adc
inc
adc
dec
pop
xor
inc
adc
mov
push
sbb
push
mov
jmp
mov
cmp
jae
xchg
add
inc
inc
mov
lret
ror
stos
ja
test
imul
jbe
mov
ret
mov
adc
mov
nop
test
jge
lret
mov
inc
movb
add
or
leave
vpmulhw
cmp
loopne
repnz
enter
iret
fwait
lds
adc
bnd
sub
sbb
push
push
pop
and
aaa
jmp
mov
pop
xor
xor
shll
cmp
cmp
mov
xor
cmp
cmp
mov
adc
push
or
leave
in
lock
cli
in
or
jbe
movsl
movsb
sbb
or
jmp
test
sub
and
ficoml
dec
mov
fwait
inc
and
inc
inc
aam
mov
incb
and
adc
inc
jp
mov
push
and
mov
push
inc
arpl
rcl
clc
xor
or
jle
mov
call
je
sbb
jecxz
and
sub
adc
pop
test
rolb
mov
in
call
loopne
mov
jns
imul
mov
push
jecxz
in
or
push
xchg
push
add
loope
jmp
or
cmp
jne
shufps
sbb
mov
pop
xor
negl
sub
adc
dec
scas
xor
mov
rorb
lods
mov
or
pop
jmp
rclb
pop
sub
sti
sub
insb
je
les
push
dec
pop
mov
lret
inc
das
or
push
jae
das
mov
aam
stc
mov
mov
inc
imul
and
pushf
xchg
and
ffreep
cmpsb
dec
inc
cld
pushf
sar
loope
pop
adc
sub
je
cmp
pop
dec
and
jne
mov
mov
mov
repnz
xchg
jno
pop
hlt
or
arpl
in
xlat
cmp
push
fnsave
iret
xor
fsubl
movsl
mov
mov
pushf
shlb
mov
aas
adc
call
adc
and
fldenv
adc
popa
dec
loope
mov
sub
jg
or
xchg
dec
nop
jecxz
xchg
push
mov
loop
cld
push
inc
pop
ljmp
xchg
xchg
mov
push
xor
int3
xor
and
mov
insl
icebp
pop
or
xor
and
xor
pop
and
icebp
adc
bound
es
and
sbb
lds
hlt
or
lea
or
dec
mov
push
pop
in
sub
loop
pop
mov
sbb
mov
in
leave
js
and
mov
add
and
mov
fs
scas
mov
and
jecxz
leave
inc
inc
pinsrw
sbb
pop
ret
ljmp
push
sub
mov
push
adc
push
or
call
and
and
dec
and
lock
mov
push
sbb
movzwl
sar
lret
pop
lret
fcmovbe
hlt
inc
nop
repz
add
jg
mov
mov
cwtl
push
outsb
cmp
xlat
pop
call
jl
add
xchg
gs
dec
fiaddl
pop
jecxz
or
push
repnz
lock
sti
orb
adc
shr
adc
xor
mov
and
sbb
and
pop
sbb
push
or
inc
jmp
add
and
pop
test
jo
lods
push
adc
int
lea
aas
cmp
adc
sub
je
inc
add
enter
inc
rcrl
bound
pushf
push
sub
push
pop
and
inc
or
jbe
add
add
dec
dec
adc
and
aas
sbb
or
mov
fidivl
fmull
fcoms
jnp
jo
inc
fcompl
mov
push
movsb
or
mov
outsb
push
scas
adc
mov
pop
mov
jne
jp
fstps
lcall
sbb
and
xor
sbb
xor
xor
jg
cs
xor
shlb
mov
and
stos
out
dec
sbb
sub
sti
lock
adc
loopne
or
jb
jmp
adc
push
dec
inc
add
call
add
mov
inc
aam
into
in
repnz
inc
in
add
mov
mov
cmc
xor
jb
or
out
pop
test
jo
cmc
jg
arpl
xchg
seta
fwait
fwait
xchg
inc
cmp
sahf
orb
add
jl
push
gs
cmp
lods
jmp
sbbl
push
xchg
xor
cwtl
inc
or
jne
sbb
inc
sbbb
pop
es
mov
shlb
sub
sbb
mov
movsl
daa
jecxz
cmc
cld
add
inc
js
cmp
movsl
or
sti
add
cmpl
sub
add
ljmp
or
loope
icebp
push
das
mov
ret
cmp
inc
push
fs
in
leave
aad
and
rclb
or
cmp
xor
mov
push
cmp
mov
sbbb
div
imul
call
adc
ss
fs
push
xchg
repz
ret
adc
mov
add
in
ds
mov
cwtl
dec
out
push
lea
cwtl
pop
sbb
jl
mov
in
out
sub
jne
inc
sbb
test
push
dec
test
test
sub
sbb
push
ds
xor
cmp
das
push
hlt
in
add
push
insb
insl
add
xchg
test
or
xor
rcrb
mov
inc
mov
pusha
cli
pop
movsb
jecxz
sbb
iret
xchg
xchg
mov
xchg
in
xchg
arpl
or
movsl
jmp
sbb
jl
daa
or
jne
sbb
and
outsb
fwait
sbb
or
enter
ss
mov
inc
jge
imul
add
mov
inc
adc
inc
and
jl
pop
dec
pop
sub
sub
aas
xor
rorl
cs
mov
je
sbb
jb
xchg
push
mov
or
jmp
inc
push
xchg
cmpsb
cmpl
sub
mov
or
sub
and
in
jge
sub
push
dec
mov
mov
mov
outsb
out
mov
test
cmp
or
stc
xchg
pop
or
inc
fidivs
or
sub
in
int
mov
and
test
cmp
ljmp
pop
mov
mov
or
sub
imul
nop
or
lods
orl
pop
cmp
out
mov
mov
mov
or
fnsave
and
cmp
mov
je
add
jmp
or
xchg
enter
cmp
mov
lea
pop
out
or
mov
out
jle
jnp
aam
cld
adc
jnp
mov
dec
inc
leave
pop
loope
inc
mov
cmp
outsb
adc
pop
insb
cmc
dec
jo
add
leave
fisubs
repz
les
les
rcrb
cmp
mov
add
fdivrp
sti
xchg
call
sbb
xorl
and
dec
repnz
dec
or
mov
test
jmp
adc
push
sub
add
add
jg
fs
sbb
or
or
sub
les
add
dec
pop
mov
es
bound
mov
inc
push
outsb
xor
test
outsl
pop
jmp
data16
inc
in
sbb
inc
sub
adc
sub
sub
cmp
dec
pop
int3
push
dec
icebp
jb
xchg
and
clc
push
xor
std
leave
das
mov
pop
lock
adc
cmpl
or
or
cmc
xor
fimull
cmp
andl
cmp
dec
jmp
pop
in
push
stos
push
pop
mov
test
fsubrs
cmpb
jmp
jno
pop
pushf
mov
ljmp
inc
stos
test
and
es
inc
pop
push
mov
and
add
fs
or
fdivs
add
mov
xchg
test
adc
bound
bound
sub
mov
mov
xor
iret
jmp
sbb
lret
mov
sub
push
call
movsb
mov
cld
xor
xchg
add
push
add
mov
roll
jge
mov
jbe
addl
mov
dec
movb
mov
nop
and
insl
leave
or
andl
dec
push
pusha
mov
cltd
sub
std
idivl
sub
movsb
sub
adc
mov
pop
adcl
sbb
and
inc
add
into
jg
aad
movb
mov
mov
pop
push
or
push
sti
aas
xor
cmpl
loope
push
mov
test
inc
mov
orb
int3
cmc
pop
jecxz
les
pop
into
push
dec
es
out
xor
lret
add
xchg
pusha
int3
cmp
in
sbb
or
pop
aas
xor
imul
adc
sbb
and
test
pop
adc
add
sbb
js
jl
pop
lock
cmp
sbb
mov
jne
add
inc
cs
xor
mov
mov
mov
or
rorb
sub
popl
pop
pop
xorb
lds
push
push
add
dec
rorb
or
mov
xor
add
jo
sub
les
pop
dec
pop
adc
mov
aad
daa
aas
adc
cs
adc
dec
push
xchg
add
addb
add
mov
fildl
mov
cmpsb
dec
mov
push
rolb
or
dec
in
loope
mov
rolb
xor
loop
mov
jae
adc
jbe
mov
sbb
cli
cltd
xchg
sbb
xchg
cli
mov
adc
cmp
in
or
cmp
jb
mov
push
pop
push
inc
ljmp
and
jmp
dec
xchg
sbb
mov
roll
clc
mov
repnz
and
adc
lahf
push
sub
inc
daa
and
jg
mov
dec
das
in
add
or
or
pop
mov
movsb
xor
dec
push
cwtl
ss
cmpsl
hlt
add
ds
js
out
out
adc
inc
mov
movsb
inc
hlt
clc
int
sub
stc
cmp
sub
sub
cwtl
xor
xor
sub
movb
dec
xor
inc
xchg
xor
inc
push
sub
cmp
push
cmc
cmp
pop
sbb
and
les
mov
inc
mov
or
inc
pop
cmpsb
mov
insl
add
xchg
push
in
popf
cmp
xor
sbb
test
pop
out
sbb
aaa
adc
aaa
pop
sub
lds
in
xchg
mov
push
dec
int
push
pop
jecxz
and
popa
push
or
sub
fwait
leave
push
arpl
pop
push
pop
imul
xchg
xor
inc
insb
pop
jo
cmp
and
xchg
inc
pusha
pop
fbstp
dec
dec
mov
xor
pusha
xchg
push
or
mov
mov
and
dec
aaa
or
dec
mov
cltd
sub
or
jle
test
jo
cmpsb
inc
lds
xchg
xchg
adc
nop
push
jp
mov
push
pop
scas
adc
je
insb
js
lea
call
cmp
jg
cmc
cmp
lcall
lret
movsb
lock
jl
and
leave
or
je
add
test
mov
mov
dec
nop
imul
adc
cmpl
mov
and
cmp
insl
sub
nop
and
add
call
test
inc
add
sub
movups
and
lock
std
or
wrmsr
xor
inc
es
fimull
adc
call
shll
lods
cli
orl
pop
pop
mov
scas
add
mov
dec
or
or
in
jmp
pop
add
cmp
inc
add
daa
mov
push
dec
push
pop
insl
shll
nop
dec
cltd
xor
lret
movsb
pusha
lock
xchg
cmpsl
sub
and
inc
test
mov
outsb
dec
or
ret
mov
mov
sub
into
add
popf
adc
and
or
clc
sbb
add
sub
shll
inc
push
mov
sub
push
add
push
dec
aam
pop
hlt
rcl
cmp
jl
ljmp
jo
pop
pop
cmp
jae
adc
xchg
call
fidivrl
adc
adc
xor
sbb
roll
and
pop
cmp
xchg
lds
pushl
test
pop
popl
mov
add
inc
cli
sub
mov
inc
sbb
xor
sahf
fs
xchg
imulb
jbe
lahf
out
sbb
clc
insb
dec
mov
cmpsl
adc
cmpsb
xor
fsubp
xchg
scas
leave
or
pop
testb
aas
sbb
std
arpl
push
jmp
inc
mov
mov
outsb
push
mov
gs
incl
fimull
push
xor
je
test
lret
lea
push
jo
mov
rolb
xchg
xchg
xor
add
or
sbb
sbb
add
fldenv
and
add
jne
bound
jle
in
dec
xchg
cmp
cmp
dec
sub
add
adc
pushl
cmp
in
xchg
jecxz
and
hlt
inc
cmpl
inc
mov
cli
cld
dec
mov
jne
sub
data16
ret
pop
inc
mov
adc
leave
jmp
mov
fidivrs
pop
cmp
xchg
dec
pusha
repnz
in
movsb
pop
mov
dec
mov
call
dec
dec
pop
stos
aam
pop
fcom
leave
cmp
fisubl
cmp
mov
inc
stos
fadds
loopne
dec
dec
adc
mov
push
push
pop
gs
enter
jb
xchg
add
lret
mov
xchg
adcb
sar
dec
seta
sbb
leave
cmp
mov
xchg
mov
inc
lea
cli
je
cli
jl
or
xor
testl
adc
lahf
pop
hlt
int3
add
stos
dec
add
jmp
leave
jne
xor
mov
incl
inc
mov
cmp
mov
sub
dec
cmp
sbb
pop
mov
jne
jmp
dec
orb
xchg
popa
lock
mov
test
push
jmp
jno
xchg
fisubs
mov
loop
pop
jmp
iret
dec
into
cmp
jbe
mov
pop
lea
adc
iret
mov
push
stc
adc
test
push
mov
popa
cmp
jnp
jl
loopne
aad
and
lock
orb
data16
push
sub
inc
pop
ret
mov
insl
dec
ds
test
pushf
push
cltd
or
ds
xchg
adc
pop
adc
and
add
cmp
lahf
imulb
decl
or
std
cmpsb
mov
xor
dec
clc
and
leave
adc
sub
sub
adc
cmp
stc
dec
loopne
ljmp
dec
xchg
sub
insb
sbbl
xchg
stos
dec
adc
jmp
movl
mov
inc
or
add
xchg
movsb
mov
mov
insb
inc
dec
cmp
cmp
leave
xor
add
sub
lea
mov
lods
pop
or
adc
fcoms
pop
das
ret
and
cwtl
mov
shld
jmp
mov
and
sbb
push
inc
or
cmp
stc
inc
jg
dec
shl
shll
pop
jae
push
in
mov
jae
mov
and
mov
add
inc
int3
mov
and
loop
mov
dec
out
movsb
xor
sarl
inc
sbb
inc
hlt
mov
adc
xorb
push
cltd
dec
lock
pop
mov
subl
xchg
dec
add
push
ljmp
arpl
xchg
cmp
cmp
pop
sub
sbb
or
dec
adc
jne
movsb
movsl
imul
idivb
adc
mov
nop
rorl
add
jae
iret
dec
rcrl
insb
imulb
clc
test
add
ljmp
pop
pop
cmp
push
movsb
arpl
jne
das
xor
sti
jb
call
push
leave
xor
adcl
les
daa
sbb
and
sbb
sbb
ficoml
mov
jae
sbb
xchg
lods
add
lret
push
arpl
and
pop
xchg
jle
aaa
xor
iret
add
mov
mov
dec
sub
xchg
movsb
in
and
mov
or
test
xchg
add
inc
add
incl
add
or
cmpb
call
push
jae
push
add
addl
jb
fdivs
inc
sar
push
and
add
push
decl
test
js
jg
in
or
lret
mov
pop
mov
in
cltd
pop
mov
dec
push
mov
or
push
or
dec
mov
dec
test
test
push
add
sti
je
xor
fmuls
and
dec
orps
jle
ljmp
mov
dec
push
imul
jmp
cmp
sub
mov
sub
das
mov
cmp
push
sub
das
mov
mov
lods
push
mov
xchg
xchg
mov
dec
inc
inc
xor
add
xchg
mov
cmp
dec
lret
dec
jmp
xchg
cmp
lea
push
mov
xchg
add
out
adc
or
mov
les
cmpsb
jg
xchg
and
dec
ficomps
sub
mov
jb
add
cmp
test
dec
out
jns
xor
lock
enter
xchg
imul
push
or
iret
inc
add
and
out
pop
xor
in
xor
out
aad
jnp
bound
movsl
push
mov
test
in
repz
in
inc
pop
jge
xchg
dec
mov
pop
decl
nop
lea
loop
xor
ds
insb
pop
jmp
and
push
mov
lret
les
enter
add
icebp
decl
notl
push
arpl
fdivl
pop
cmp
push
pop
add
or
or
xchg
sub
push
adc
or
ud1
xor
shll
repz
sub
ljmp
push
add
sbb
mov
jg
lahf
cmp
jae
mov
fildll
ret
push
add
inc
fmuls
int
jmp
dec
popa
push
repnz
xor
out
mov
and
dec
add
fdivrs
jbe
sub
cmp
aaa
jl
cmc
enter
mulb
mov
inc
mov
mov
push
in
mov
cltd
sub
inc
inc
push
test
xchg
mov
int3
sbb
jmp
enter
dec
testb
sbb
mov
dec
loop,pt
and
jo
outsl
dec
dec
gs
or
xor
inc
insl
enter
cmp
test
fidivrs
rclb
inc
out
xchg
mov
sbb
xorb
js
test
dec
push
pusha
outsl
cmpb
ret
and
movsl
push
sbb
dec
repz
xor
std
push
xchg
adc
stc
lods
inc
scas
sbb
cmp
mov
shl
xor
lock
loop
adc
call
sbb
lret
test
sbb
rorb
sub
sub
add
xor
divb
mov
sub
xchg
and
jl
xlat
sbb
pop
sub
xor
pop
stos
add
mov
push
push
push
push
sub
add
cmp
test
mov
jae
and
incl
pop
add
shrb
or
mov
inc
mov
jmp
mov
fnstsw
or
ljmp
ds
inc
inc
and
mov
ret
mov
jmp
mov
or
mov
and
fldcw
mov
mov
and
cmpl
popf
or
xor
or
or
jmp
mov
mov
adc
jae
mov
fstl
cmp
xchg
sbb
adc
sbb
add
adc
and
test
inc
or
dec
sbb
sub
sub
xor
and
and
mov
cmp
or
sbb
cmp
or
popl
adc
jne
stc
mov
inc
add
mov
mov
into
shr
add
in
add
inc
test
dec
add
mov
call
cmp
jne
xor
pop
push
jo
xchg
loope
sbb
cmp
pusha
int3
xor
lds
inc
ret
inc
or
std
enter
sub
jl
xchg
push
mov
pop
adc
leave
or
dec
test
push
dec
lret
jl
inc
and
out
mov
pop
pop
dec
mov
xchg
adc
mov
inc
std
xchg
gs
loopne
mov
pop
mov
ret
cwtd
mov
test
push
cmpsb
jae
jo
je
inc
arpl
adc
xchg
jo
or
jne
sbb
xor
xor
add
mov
or
lds
pop
push
pop
mov
push
xchg
rol
leave
outsl
rcrb
shrl
pop
lods
test
lret
or
in
rorl
es
filds
mov
push
xchg
ficomps
xor
lods
mov
mov
rolb
sbb
add
mov
and
sbb
orb
inc
add
dec
mov
mov
stos
mov
jbe
in
enter
stos
pop
mov
es
in
mov
jno
adc
adc
shl
xor
add
test
dec
rcrb
sub
add
pop
cmpb
fsub
adc
mov
shl
and
loop
sub
jmp
jne
inc
jle
xor
pop
dec
into
mov
add
dec
push
ret
std
cs
lods
sbb
lret
fbld
mov
mov
add
jmp
xchg
pusha
push
dec
cs
mov
push
add
mov
jmp
pcmpeqb
mov
or
es
or
movl
test
shlb
test
jae
or
ss
pop
dec
and
loopne
sub
std
lods
and
out
push
lahf
loopne
call
sub
imul
inc
rorb
jne
jmp
nop
push
les
sbb
push
imul
add
mov
add
pop
bound
and
dec
icebp
loop
xor
bound
lock
push
inc
mov
adc
xor
mov
js
mov
adc
mov
cli
and
aam
cmp
push
daa
sbb
pop
stos
mov
test
aam
enter
sub
lock
xchg
mov
or
adc
mov
inc
pushf
fld
pusha
inc
mov
ficompl
fs
cmp
pop
cmp
adc
enter
inc
test
adc
pop
stc
or
enter
and
push
dec
and
sbb
test
cli
enter
daa
cwtl
inc
and
push
xor
sub
adc
clc
lds
pop
adc
lea
add
mov
lcall
arpl
adcl
dec
es
mov
int3
adc
sbb
inc
push
xchg
movsb
mov
push
dec
cmp
xor
xorb
sahf
sub
adc
cmp
mov
or
lds
adc
mov
je
or
xor
xchg
or
lea
shr
jmp
add
xchg
fwait
repnz
nop
popf
mov
pop
lods
mov
jmp
shll
dec
addr16
xchg
shl
repnz
ret
jns
or
and
and
xor
pop
sub
and
inc
xor
sub
arpl
insl
movsb
jecxz
sub
jns
adc
bound
add
and
inc
mov
and
dec
push
rclb
push
es
push
mov
aas
cli
sarl
mov
sbb
pop
mov
daa
mov
add
mov
inc
pushf
dec
dec
cmc
mov
mov
dec
popf
lcall
cltd
pop
cmpsl
xchg
test
dec
out
insl
cltd
pusha
sbb
mov
mov
dec
dec
enter
pop
lahf
mov
sbb
ja
fisubrl
adc
out
inc
adc
jne
and
add
ffreep
ret
movb
lret
cmc
dec
bound
mov
add
xlat
push
add
bound
pop
adc
xchg
and
mov
inc
add
pop
sub
and
mov
pop
dec
sbb
movzwl
inc
js
mov
ja
pop
sub
cltd
xchg
inc
cmp
and
xor
push
mov
sub
mov
dec
mov
xlat
mov
scas
mov
lock
and
cld
dec
adc
out
icebp
stc
cld
jne
lods
pop
xchg
repnz
imul
out
mov
xor
clc
jne
mov
imul
push
adc
xchg
fs
in
roll
xlat
call
aam
inc
mov
lock
lods
dec
loop
jg
dec
call
sbbb
push
cmp
xor
repnz
das
imul
mov
jmp
pop
xchg
or
inc
outsl
push
incl
mov
inc
push
mov
push
ljmp
push
push
jge
filds
xchg
out
and
dec
mov
pop
pop
lret
mov
pop
mov
sub
jnp
push
and
xor
inc
cmpsl
das
mov
pop
inc
xchg
inc
lea
jmp
push
cmp
enter
sbb
inc
cmp
xchg
and
sub
stc
dec
lock
rcl
and
lea
adc
sub
test
pop
and
lret
add
sbb
pop
jg
push
fcompl
cmpsl
sbb
and
leave
push
shll
xor
inc
or
call
aaa
push
aam
rolb
jle
mov
stos
cmc
pusha
cmp
jae
and
or
cld
subb
cmp
or
pop
mov
cwtl
inc
fisttpl
fnsave
aam
cmp
sbb
pop
outsl
popa
stos
jle
sbb
jmp
sbb
ja
cwtl
adc
adcl
push
fstps
rorl
pop
mov
dec
lea
repz
call
cmpsl
filds
arpl
lea
lahf
xchg
cmc
xor
stos
mov
adc
iret
mov
pop
mov
cmpsl
icebp
push
mov
add
icebp
sub
mov
add
jb
and
dec
sub
aas
loope
daa
mov
ret
inc
jae
cli
inc
test
xchg
inc
add
inc
mov
prefetch
push
mov
dec
mov
nop
cld
shlb
or
jp
pop
data16
dec
rcrl
imul
jmp
pop
xor
div
popa
xchg
ds
data16
cmp
lret
xchg
adc
pop
dec
pop
enter
mov
popl
andb
test
jle
adc
daa
jns
nop
outsb
inc
inc
jl
ret
fs
jge
popl
cltd
or
ljmp
xchg
sbb
add
cmp
sbb
inc
and
adc
pushf
fidivrl
loop
push
aaa
inc
push
cmp
and
call
jns
push
push
mov
xchg
scas
out
adc
subl
jo
or
dec
mov
out
mov
xchg
jmp
xchg
xchg
nop
sbb
mov
and
cmp
pop
loopne
cmp
push
push
test
mov
mov
adc
nop
mov
addl
sbb
dec
daa
mov
mov
or
sub
sahf
aaa
mov
loopne
cs
adc
inc
sbb
test
loopne
aaa
out
dec
add
mov
jmp
adc
repnz
jg
rcrl
addr16
inc
cmpsl
inc
clc
or
cmp
scas
repz
and
inc
les
imul
mov
add
rcrb
les
loope
test
inc
cmp
adc
lea
inc
aaa
call
cmp
dec
out
dec
adc
and
cmp
and
dec
enter
cmp
sbbl
push
xor
mov
or
sbb
iret
decl
cs
js
jle
inc
jge
lahf
inc
sub
adc
cmp
dec
fmull
xlat
fisubrl
aaa
lahf
or
mov
add
call
xor
jle
sub
add
dec
shr
fidivrl
sub
out
cmp
mov
sarb
or
adc
inc
pop
shlb
cwtl
xchg
inc
dec
leave
js
or
mov
mov
popa
mov
xchg
or
pop
or
sub
or
push
jl
sub
lea
push
ret
movaps
shr
adc
dec
jmp
icebp
clc
xlat
push
inc
jae
cmp
out
inc
mov
pop
mov
sub
inc
cmp
ja
mov
dec
xor
mov
jbe
push
mov
mov
mov
cmp
sub
lock
jge
in
dec
cmp
and
mov
cld
addb
sbb
jg
push
xor
push
dec
cmp
mov
rolb
lock
loopne
ret
insb
lcall
xchg
push
inc
iret
loop
push
and
dec
repnz
orl
xchg
je
addl
add
jnp
push
xor
movsb
enter
cmpb
or
inc
mov
xor
adc
stc
insl
das
dec
jmp
cmpsl
int
je,pn
cld
imul
call
mov
inc
push
gs
loopne
add
jb
jecxz
jmp
pop
xchg
fisubrs
push
stc
in
pop
mov
je
ret
add
xlat
fsts
jmp
mov
sub
push
movsl
and
mov
or
dec
sbb
das
jmp
in
flds
sub
add
xor
sbb
inc
xchg
mov
sub
dec
dec
and
shrl
pusha
or
lahf
call
out
xchg
mov
cmp
js
icebp
cmp
inc
xor
and
or
push
dec
pop
sarb
andl
add
out
xlat
test
pushf
or
call
decl
sbb
int
enter
aas
mov
cmp
shrb
pop
fstps
add
mov
ficomps
je
add
mov
outsb
lods
sarl
adc
adc
add
and
mov
add
add
inc
sub
push
lea
rorb
sarb
call
and
les
push
sbb
sub
cmp
sub
mov
aaa
enter
xchg
sbb
push
adc
test
xchg
inc
es
jb
or
mov
loope
in
outsb
rorl
push
add
lds
pop
adc
enter
sub
sub
or
cmc
and
cmpb
add
inc
inc
sub
mov
or
inc
cmp
sub
cwtl
movsl
lcall
pop
pop
pop
stos
ds
sub
loop
push
adc
sub
push
push
sub
dec
inc
int
jae
or
sub
enter
and
scas
je
sti
cmpsb
iret
imul
cs
mov
sub
xchg
sbb
sbb
cld
icebp
scas
cmp
aad
adc
push
jbe
nop
mov
xor
or
xor
into
out
ficomps
popl
call
cs
cli
lahf
lcall
cld
jne
aas
xor
jb
jmp
push
jge
das
push
adc
push
sbb
js
pop
mov
or
cltd
cmp
jne
pop
in
dec
mov
jp
test
data16
das
pop
pop
repz
push
add
xchg
ss
lahf
adcb
push
jge
ret
dec
cli
ja
popf
or
sub
call
fnsave
pop
adc
mov
dec
inc
push
adc
test
pop
mov
adc
xchg
push
js
jle
lods
mov
xlat
xor
das
mov
rorl
imull
fs
adc
stos
mov
sbb
sbb
pop
in
xorl
inc
xchg
dec
and
dec
in
sti
rolb
jmp
and
cmp
mov
pop
add
leave
xor
push
xor
sti
adc
in
dec
fldcw
mov
push
int
rclb
mov
push
pop
sub
xchg
daa
mov
cmp
xor
dec
adc
test
loopne
sbb
jmp
adc
cmp
jp
sub
mov
adc
mov
mov
outsl
int3
inc
sub
fs
and
sub
mov
mov
sarb
sti
and
jl
jmp
mov
jmp
dec
and
inc
sbb
or
movsb
or
movb
pop
or
cld
lds
decb
and
inc
les
pop
aas
xchg
xchg
sbb
adc
add
adc
sbb
js
push
rclb
int3
mov
imul
rcrb
repnz
mov
jp
sub
lods
jno
test
push
lcall
mov
adc
dec
mov
and
cmp
mov
es
mov
adc
push
and
adc
sbb
xorl
and
inc
xchg
mov
fwait
adc
dec
lods
repz
fs
fimuls
mov
leave
push
and
cmpsl
mov
pop
ret
push
test
loope
lea
fiadds
inc
and
jp
push
adc
xor
lds
gs
das
pop
inc
cmp
shll
xchg
pop
mov
push
inc
js
and
xchg
and
inc
in
and
xor
pop
mov
mov
incl
sarb
popa
idivb
addl
or
jne
xchg
pop
jle
addb
xor
mov
push
cwtl
mov
push
add
popf
xchg
mov
enter
loop
mov
mov
add
mov
je
mov
jbe
xchg
cmp
cli
dec
scas
lds
xor
adc
lock
push
and
outsb
iret
jp
and
ja
push
mov
loop
mov
repz
call
or
test
xchg
in
les
adcb
add
adc
cmc
inc
fstpt
add
xchg
mov
jmp
or
mov
mov
cmpsl
inc
mov
inc
je
cmp
and
mov
out
jmp
add
iret
push
fcmovbe
pop
loope
mov
push
lds
cmp
cmc
mov
mov
das
inc
mov
je
push
push
addr16
sahf
mov
ja
push
std
loope
in
sbb
xlat
in
idiv
dec
pop
cmc
mov
jae
jmp
add
add
lock
shl
loope
xchg
jb
lea
vmovddup
vunpcklps
rolb
push
mov
rolb
add
add
inc
mov
cwtl
and
mov
ljmp
aam
push
mov
xchg
popf
cmp
scas
adc
add
mov
test
xchg
decb
cld
pop
ret
je
rolw
add
inc
pushf
inc
jl
aam
push
adc
in
loope
adc
jp
pop
fistpll
pop
sub
jmp
call
out
mov
shlb
enter
call
or
xchg
and
mov
les
and
sbb
xor
nop
cmp
inc
fs
xor
dec
or
xchg
and
pop
enter
xor
insb
or
xchg
and
jl
andb
sbb
and
movsb
xor
xchg
and
les
enter
rolb
nop
fmul
loopne
in
call
xchg
and
nop
cld
fcoml
rorl
or
adc
xchg
and
and
and
sub
sub
xor
mov
dec
jo
or
pusha
movsl
push
xor
cltd
or
push
test
lods
sbb
mov
aam
pushf
xor
xchg
and
fs
or
xchg
and
mov
fmul
loopne
in
call
xchg
and
nop
cld
fcoml
aad
add
or
or
adc
xchg
and
and
and
sub
sub
xor
xchg
and
inc
enter
xor
or
xchg
and
enter
xor
xchg
jecxz
mov
pop
add
add
and
cmc
inc
sbb
pop
inc
inc
icebp
into
sbb
es
nop
add
pop
xor
or
or
sbb
push
and
xor
mov
mov
dec
mov
mov
fimull
jb
add
insb
ja
jo,pt
cli
out
jecxz
push
dec
inc
push
jne
outsl
inc
inc
insl
jo
mov
inc
dec
push
orl
inc
aas
inc
jbe
and
inc
pop
dec
stc
dec
push
or
xchg
push
inc
push
dec
push
inc
xor
add
dec
dec
inc
pop
push
push
cmc
dec
ret
mov
sub
popa
jb
inc
adc
data16
insl
fs
pop
outsb
popa
mov
push
ljmp
fs
je
sbb
int3
dec
lret
push
pop
pop
loop
mov
jbe
arpl
arpl
jns
imul
jne
sub
jae
and
pshufw
or
jb
rol
xchg
jle
pop
or
addr16
jbe
jmp
into
sbb
push
popa
shrb
cmpb
mov
jbe
jb
das
cltd
inc
push
lea
dec
xchg
dec
outsl
fs
push
dec
xchg
cltd
inc
jae
jb
hlt
sbb
push
push
out
sub
adc
jo
divl
sahf
jne
jo
cmp
jb
outsl
jl
nop
push
insb
pop
dec
test
icebp
jae
sbb
fs
ja
push
inc
jne
cmp
push
mov
aaa
mov
addr16
mov
pop
mov
cs
outsb
insb
imul
data16
mov
xchg
sti
inc
mov
pop
leave
mov
mov
pop
dec
cli
insb
inc
sub
cmp
mov
inc
sarl
pushf
adc
or
popa
push
bound
cmp
sbb
cmp
int3
lea
pcmpgtw
popa
fs
fsts
movsb
jo
add
imul
cli
scas
mov
repnz
fldt
push
or
das
mov
rorl
mov
and
movsb
cmpsb
pop
lock
and
xlat
jns
hlt
adc
or
jns
jnp
mov
sub
cmpb
inc
inc
fwait
xlat
mov
cmp
xor
jp
cmp
xor
jge
aaa
test
bound
nop
jno
loopne
fs
or
xchg
test
mov
ror
fcoms
in
adc
sbb
sub
adc
and
dec
loopne
in
and
aaa
add
popa
dec
mov
or
xchg
and
jl
mov
push
add
dec
pop
xchg
dec
and
xor
adc
mov
dec
adc
and
inc
loopne
mov
adc
and
dec
scas
xchg
movsb
and
jl
jb
push
and
adc
and
dec
and
add
inc
sub
test
insl
sarl
popa
addr16
add
ss
jecxz
xchg
dec
xlat
sbb
sbb
xor
xor
dec
js
dec
incl
sub
adc
xchg
gs
xchg
adc
xor
dec
dec
iret
imul
movsl
xorb
popa
cmp
lahf
lea
aad
into
insb
jae
into
mov
sbb
rorl
cwtl
push
aas
push
pushf
or
sub
int
sub
push
or
sbb
jl
lsl
pop
dec
sbb
and
push
test
add
inc
dec
push
add
adc
shrl
sbb
lods
add
sub
mov
or
push
addr16
into
lret
or
adc
dec
mov
push
inc
sbb
pop
inc
pop
or
or
adc
sbb
inc
add
add
xorl
lods
add
adc
or
xlat
xor
push
aas
mov
aaa
dec
fcomps
push
push
mov
xchg
add
enter
add
adc
or
out
xor
pusha
lds
add
push
push
scas
jp
or
inc
arpl
push
push
mov
pop
dec
xlat
and
inc
xor
sub
jae
xchg
sub
rclb
mov
pop
xchg
cmp
movsl
sahf
and
add
pop
mov
add
add
add
add
push
pop
or
or
adc
sbb
dec
sub
add
pusha
jo
mov
adcb
add
mov
mov
push
cltd
pop
or
add
dec
adc
rolb
fadds
sbb
or
lds
shl
js
mov
out
adc
cmpsl
adc
adc
or
adc
jg
dec
sbb
scas
sub
cs
adc
and
adc
and
in
jl
popl
scas
int
rclb
mov
es
sbb
loop
sub
ljmp
cmp
add
and
mov
add
rcrb
js
adcl
inc
push
test
clc
roll
cltd
or
dec
or
jne
test
push
ret
sub
mov
add
inc
xor
sub
es
sub
fisubrl
inc
mov
orl
and
sbb
xor
or
mov
pop
and
dec
adcl
icebp
mov
fstl
icebp
and
and
xchg
cmp
jg
cltd
adc
xchg
loope
icebp
cld
fadds
sub
xchg
push
and
jnp
mov
dec
fsts
pop
and
dec
aas
xchg
push
and
jae
mov
dec
lds
jmp
mov
fiaddl
inc
dec
dec
xchg
and
mov
and
dec
icebp
xchg
lcall
pand
and
das
inc
inc
pop
mov
jae
sbb
mov
adc
orb
xor
adc
pop
or
iret
fs
testl
and
pop
or
jae
adc
dec
lods
xchg
mov
out
mov
fldl
and
push
popa
mov
andl
and
jmp
std
and
fiadds
dec
sub
push
arpl
xchg
dec
mov
inc
fucomi
mov
adc
filds
adc
and
imul
aam
push
cmpsl
cltd
adc
and
add
cmpsb
add
pop
loopne
mov
push
addb
pusha
mov
dec
rclb
push
mov
pop
dec
xchg
xor
cltd
and
dec
mov
lcall
nop
adc
inc
je
repz
xor
cs
and
dec
lock
pop
adc
add
jb
and
jo
mov
xor
xor
or
mov
or
xor
pushf
mov
xor
lret
sbb
adc
pop
mov
in
mov
sbb
sub
cmp
nop
dec
cld
pop
xchg
push
mov
enter
test
mov
fadds
clc
sti
sahf
sbb
mov
sbb
sbb
add
push
push
call
or
test
loope
adc
jbe
inc
loopne
adc
and
lret
and
sbb
adc
and
test
pushf
inc
sbb
mov
int3
fsubl
movsb
movsl
and
pause
and
ds
inc
aas
add
xor
inc
loopne
loopne
loopne
loopne
cwtl
cmp
push
loopne
loopne
loopne
loopne
loopne
fldenv
sbb
push
push
add
push
sub
xor
cmp
or
dec
xor
or
dec
pop
adc
xchg
sbb
xor
repnz
push
xor
insb
push
adc
inc
stos
xor
or
pushf
bound
add
mov
xchg
dec
dec
enter
add
mov
daa
and
addb
and
loopne
cmpb
mov
adc
mov
loopne
inc
adc
adc
pop
or
lahf
inc
push
or
cmp
jb
cmp
adc
push
adc
jecxz
ret
cmp
sbb
or
lahf
xor
pop
adc
jg
and
or
or
das
jecxz
ret
sub
sub
and
inc
add
xchg
add
add
and
js
insb
sbb
sbb
int3
xor
and
lahf
js
xor
sub
sub
fisubs
inc
or
and
inc
adc
adc
adc
adc
and
inc
push
and
in
or
sbb
mov
or
mov
or
mov
or
mov
iret
sbb
sub
sub
js
mov
jbe
mov
je
mov
jo
mov
outsb
dec
mov
insb
dec
mov
or
sbbb
add
xor
sub
adc
addr16
adc
cmp
jne
inc
test
and
or
mov
pusha
orb
push
inc
push
adcb
jne
sub
sbb
push
push
hlt
aaa
push
sbb
xor
cmp
repnz
xor
add
jbe
push
dec
cmp
orl
push
xchg
adc
add
add
and
sub
sbb
adc
cmp
xchg
sbb
push
cmp
or
test
or
adc
xchg
or
adc
or
adc
addr16
das
sbb
add
sbb
fstps
loop
push
add
push
insb
sbb
cmp
sub
xor
sbb
push
popf
push
hlt
jb
cmp
adc
pushf
cmp
jp
jne
pop
adc
or
adc
unpckhps
mov
out
mov
adc
inc
push
and
inc
add
into
add
xor
and
or
xor
push
inc
or
and
dec
and
or
inc
cmp
xor
push
ds
or
dec
or
jo
test
ret
lret
and
or
or
inc
dec
sahf
and
pop
popf
add
inc
outsl
adc
out
inc
inc
movb
and
lcall
test
bound
adc
xor
cmp
cmp
push
inc
and
mov
xor
pop
xchg
sbb
push
mov
add
push
push
xor
dec
xorl
xor
or
and
xchg
pop
and
mov
xchg
or
push
sbb
inc
xchg
add
dec
or
hlt
pop
mov
fisubrl
or
add
pop
outsb
retw
inc
lock
mov
rol
pop
adc
mov
pop
or
adc
add
les
or
nop
add
mov
or
add
push
xchg
jg
inc
bound
and
imull
stos
dec
jmp
mov
int
pop
inc
fimuls
inc
cmp
cld
arpl
data16
pusha
and
add
rolb
add
inc
pop
fstpl
and
add
xor
mov
inc
adc
jo
decl
pushf
in
subb
adc
add
add
adc
xchg
xorl
orb
loopne
loop
loopne
xor
mov
inc
repz
cmp
jmp
pusha
loop
fstpl
and
or
add
add
push
in
aaa
pusha
push
or
or
push
pop
stc
add
dec
call
loopne
inc
pop
rdtsc
imull
pusha
cli
xchg
or
push
das
imul
xor
sub
mov
arpl
inc
pop
js
arpl
inc
outsl
sbb
push
imul
push
jg
sbb
lock
adc
out
add
sbb
mov
or
mov
and
ljmp
cwtl
loopne
mov
mov
mov
xchg
jle
arpl
push
mov
or
loopne
stc
add
test
xor
stos
sub
mov
or
lds
scas
mov
push
pushf
mov
mov
stos
mov
dec
mov
or
push
mov
mov
cld
call
in
fimuls
cltd
loope
jmp
mov
out
mov
and
in
or
in
mov
hlt
mov
lock
jecxz
sti
stc
jg
jge
rclb
xchg
inc
add
add
jo
pop
or
and
or
pop
add
or
adc
sub
push
jg
mov
shrl
adc
popf
push
pop
or
sub
and
dec
dec
pop
push
and
and
dec
add
das
push
dec
adc
in
push
add
add
cmp
cmp
xor
int3
push
cmp
push
ds
inc
enter
push
pop
pop
dec
aas
sub
inc
inc
cs
cmp
mov
inc
std
es
or
cld
testl
and
add
lar
and
addb
xchg
fldt
sub
and
in
pop
sub
xchg
add
xor
add
lock
add
and
jae
ja
jo
push
xor
adc
bound
inc
inc
imul
imul
ss
out
push
push
ja
cmp
shlb
cmp
inc
add
add
xchg
addb
cmp
pop
add
add
addr16
int3
add
push
andl
and
adc
aad
sub
cmp
mov
aad
push
adc
subl
and
mov
pop
scas
jne
and
xor
jne
cmp
movsb
dec
into
add
mov
pushl
notl
jne
inc
adcl
push
or
push
push
jno
test
and
cmp
je
jne
sub
and
je
jo
push
sbb
lock
or
pop
and
jg
aas
inc
pop
jg
inc
shl
popw
sbb
sub
xchg
fisubrs
adc
clc
sbb
sub
mov
int3
js
fwait
call
hlt
loop
mov
inc
add
es
rcrb
pop
or
subb
loopne
xor
call
cmp
xor
or
fneni(8087
push
inc
sbb
cmp
mov
sbb
adc
mov
xor
or
and
xor
cmp
pop
jmp
xor
xor
sbb
mov
sbb
imul
mov
cs
cmc
xor
adc
pop
xor
or
inc
cmp
daa
or
add
and
call
lock
adc
push
jo
sbb
sahf
push
fiadds
sub
ds
ljmp
or
loope
dec
ret
dec
call
push
dec
adc
dec
mov
or
push
push
xor
popa
push
or
inc
stc
inc
mov
xchg
popa
sti
les
dec
or
inc
mov
repz
pop
mov
push
pushl
fcoml
pop
adc
push
mov
or
inc
add
daa
inc
add
es
adc
xor
dec
mov
and
sub
or
or
aas
adc
pop
add
add
cwtl
nop
bound
push
addr16
rolb
push
arpl
lock
pop
jecxz
xor
pusha
mov
andb
aaa
jno
iret
sbb
loope
xchg
shlb
adc
js
cmp
xor
shlb
or
xor
xlat
sbb
or
nop
xchg
sub
cld
clc
je
adc
sbb
pop
out
inc
pop
js
push
pop
les
pop
push
mov
or
add
imul
mov
dec
js
adc
in
xor
pop
je
push
arpl
imul
and
bound
andb
pushf
imul
jl
push
mov
insb
jns
inc
fs
addl
jo
and
jae
mov
xchg
js
arpl
or
cmpb
or
add
inc
jp
or
mull
mov
pushf
xchg
or
xchg
jo
fwait
jo
sbb
cmpsl
lahf
pop
stos
test
scas
sarb
mov
mov
or
mov
subb
xchg
sarl
xchg
mov
cltd
and
negb
lahf
inc
lods
xchg
cmpsl
mov
xchg
movsb
and
lcall
add
dec
cwtl
cmpsb
or
stos
andb
test
les
stos
mov
push
mov
pusha
mov
mov
scas
add
lods
clc
insb
push
inc
hlt
stos
outsl
mov
in
mov
sti
cmp
xor
rcr
cmp
ret
aam
add
aad
sbb
roll
fnsave
jmp
ljmp
test
dec
les
lret
into
sbb
lret
rorb
loope
fcmove
adc
cmp
in
sbb
ljmp
in
xchg
out
cmp
popf
sbb
push
adc
cmc
or
stc
packssdw
imul
jmp
sti
adc
or
idivl
std
and
dec
loopne
push
test
cld
jae
decl
cmc
sbb
ret
or
std
idivb
sahf
push
faddl
test
xor
and
das
xor
mov
and
and
icebp
lea
add
sub
js
jb
push
xorb
sub
xor
add
movsl
and
cmp
pushf
add
pop
cmp
sub
jle
pop
xchg
inc
push
inc
add
xchg
test
pop
inc
adc
pop
xchg
pop
pop
pop
add
and
lcall
pusha
dec
and
pusha
dec
pop
aad
or
xchg
and
or
jg
loope
dec
inc
lds
dec
pop
push
nop
pop
lock
inc
and
and
xchg
scas
push
subl
xchg
loop
cmp
push
mov
shlb
jecxz
add
in
ret
cmp
addl
fnstenv
pop
int
cli
in
in
jae
je
notl
or
sbb
sbb
jmp
cli
or
movsl
cmp
out
ljmp
add
rcrl
in
sahf
push
add
iret
loope
xlat
stos
repnz
push
push
mov
push
ja
scas
aad
inc
inc
lahf
rolb
loopne
stos
jne
jp
xchg
test
xchg
mov
xchg
movsb
push
pop
imul
mov
pushf
add
pushf
mov
in
stc
cmp
lods
inc
pop
ret
add
cmp
mov
in
cli
cmpsl
mov
out
in
push
sub
shrl
btc
push
dec
loop
dec
iret
cs
popf
push
sub
mov
mov
inc
fdivp
std
into
add
mov
mov
mov
xchg
fcmovb
xlat
sahf
adc
int3
dec
mov
mov
cmp
cmp
mov
lret
mov
mov
test
loope
jmp
rorl
addb
add
cld
mov
arpl
decb
addr16
inc
ffreep
loopne
mov
rolb
leave
adc
incb
aas
cld
bound
adc
pop
loope
and
xor
int
cld
xchg
sbb
shl
cltd
iret
mov
cmp
jbe
add
orl
jg
xor
or
sub
sub
lahf
mov
adc
ror
into
pop
add
or
or
addb
dec
lds
cwtl
xor
addr16
or
in
andb
jb
xor
mov
repz
or
gs
add
add
cmpl
and
data16
enter
es
sbb
adc
mov
sbb
shlb
push
es
pop
fs
imul
fsubr
ss
push
push
push
cmp
sbb
outsb
cld
lcall
scas
xchg
int
aad
mov
push
bound
mov
les
lods
push
gs
add
lea
ja
std
or
data16
and
inc
dec
add
push
inc
rorb
mov
in
dec
inc
xor
popl
js
jb
add
or
sarl
mov
testb
push
mov
sbb
push
icebp
add
mov
mov
lret
data16
push
lret
loopne
loope
cltd
lock
jl
mov
inc
js
or
loopne
movsl
inc
mov
inc
or
dec
fnstcw
push
lret
adc
fchs
pop
lahf
or
or
aam
rol
ffreep
cmp
add
arpl
push
js
out
mov
fnstsw
mov
sarl
sahf
inc
shlb
jge
push
or
inc
pop
pushf
xor
xchg
and
push
rorl
xchg
and
pop
jl
or
sbb
orb
aam
xchg
sub
sbb
xchg
cmp
sub
add
std
cltd
or
shlb
dec
fsubrs
adc
movsb
mov
jmp
arpl
cltd
or
xchg
pop
push
repnz
jle
pop
sub
je
push
subb
xchg
gs
and
pop
xor
das
es
hlt
cs
pop
mov
push
pop
dec
leave
mov
or
or
push
dec
and
push
lret
jbe
inc
sar
xchg
inc
in
js
xchg
mov
sbb
enter
cmp
mov
push
push
add
jae
xor
insb
data16
push
fs
pop
es
mov
and
outsl
xor
call
sub
inc
push
outsb
sbb
sub
push
lock
sbb
push
and
mov
jo
shrb
mov
test
jno
mov
sub
sbb
inc
or
push
or
xchg
push
cld
mov
andl
jl
rcll
and
shr
pop
push
dec
addb
mov
cmp
lods
test
xchg
inc
adc
push
insl
mov
or
movsb
mov
mov
pop
lds
xchg
clc
inc
xorb
leave
cmp
imul
jb
cltd
addr16
xor
test
fldt
rorb
push
or
bound
lds
arpl
mov
and
xor
pusha
rorb
test
sub
adc
jp
push
or
and
or
pop
pop
arpl
push
sub
shr
lret
adc
or
adc
mov
lea
pop
pop
movsb
test
and
stos
inc
pusha
fcompl
addr16
or
maxps
aad
insb
push
bound
add
push
cli
pop
bound
push
mov
test
and
xchg
and
or
xor
lea
pop
jo
sbb
or
push
sbb
xor
add
or
sub
and
push
mov
push
push
push
sti
lret
push
cmp
xor
loope
or
lcall
ds
in
push
push
inc
inc
lds
xchg
es
pop
cmp
xchg
inc
bound
inc
sbb
pop
test
lods
into
mov
dec
push
roll
xorb
push
xchg
pop
sub
or
sbb
pop
arpl
pop
dec
mulb
adc
pop
jne
pusha
mov
or
loope
outsl
pusha
xchg
jp
push
sub
data16
jle
mov
push
gs
adc
xchg
dec
jo
xchg
xchg
xchg
add
rcl
sub
stos
mov
sub
mov
inc
cld
and
add
xchg
pop
call
in
sub
lret
gs
push
test
and
sub
es
ja
shlb
push
and
xor
lock
xor
stos
or
push
dec
inc
push
inc
cli
jge
cld
sub
shll
dec
jb
imul
cmp
xchg
or
popl
inc
bound
cmp
jo
pop
jns
dec
stos
xor
and
fs
adc
xor
fisubrs
lret
xor
daa
push
inc
push
jb
gs
and
cs
cmp
push
jo
data16
fldenv
jne
adc
int
imul
sbb
push
movsl
fdivs
push
lret
pop
pop
fdivs
xchg
subl
dec
mov
or
lret
adc
xor
nop
inc
mov
or
adc
inc
cmp
ret
pop
pop
jmp
bound
and
test
jo
and
xchg
pushf
addr16
dec
out
push
dec
xor
or
rorb
adc
sbb
les
pop
nop
ret
add
lcall
mov
fistps
es
aas
or
sub
push
push
and
jge
loope
sbb
nop
and
xchg
mov
inc
sbb
imul
xor
aas
js
add
gs
imul
xor
lcall
sbb
cmp
jae
jle
jae
data16
inc
gs
std
sarb
prefetchw
cmp
push
jg
insl
bound
subl
jne
mov
mov
xor
outsl
fiadds
je
xchg
icebp
cmp
xor
data16
je
outsb
enter
fs
divb
sbb
and
inc
add
xchg
xorb
push
jg
call
cmp
inc
pop
outsb
popa
insl
sub
inc
jle
push
inc
pop
adc
inc
ja
jbe
push
das
outsb
mov
aaa
jo
mov
sahf
hlt
add
gs
dec
pop
outsl
pop
pop
adc
mov
dec
mov
xchg
lret
sub
push
push
shlb
test
jno
cld
jbe
fs
sub
xchg
shrb
sbb
push
shrb
aas
dec
enter
lret
out
mov
outsl
dec
imul
push
and
sarl
xorl
fwait
xchg
data16
xor
stc
mov
or
push
push
pop
call
lods
mov
inc
movsl
call
aad
jo
gs
cltd
dec
inc
adc
dec
ja
dec
ja
adc
ss
insl
sub
mov
nop
testb
add
and
xchg
rorb
dec
gs
sub
inc
push
xor
xor
jb,pn
es
fs
leave
insb
orl
sub
out
rcll
adc
push
popa
dec
sbb
push
inc
sbb
inc
dec
dec
inc
pop
lea
outsl
adc
ret
fildl
add
cmp
add
or
inc
inc
push
int3
push
dec
push
xor
cs
jo
fs
add
push
outsl
imul
sbb
imul
jae
dec
outsl
and
jo
push
popa
outsl
fstp
inc
or
and
scas
xor
cmp
insb
std
jmp
or
shll
inc
or
adc
xor
push
push
lahf
xchg
dec
xchg
jns
push
je
sbb
push
arpl
idivb
adc
adc
dec
sahf
push
dec
adc
push
dec
popa
outsb
fs
ficomps
iret
insl
jo
sbbb
je
outsb
roll
inc
cltd
push
arpl
outsl
mov
je
inc
or
cmp
sbb
or
outsl
xor
stc
dec
push
cmc
insl
mov
mov
pop
adc
jbe
jbe
lret
cmp
je
lea
nop
das
xor
inc
push
cmc
sbb
push
jns
mov
mov
inc
or
mov
cmovae
dec
sub
insl
sbb
jae
outsl
sub
sbb
dec
imul
inc
test
inc
cmp
outsw
stos
or
cmp
stos
mov
test
xor
outsl
jbe,pt
and
jnp
in
bound
xor
push
inc
push
test
adc
or
lahf
pop
push
jl
dec
call
dec
mov
test
or
and
dec
push
pop
test
call
dec
or
xchg
insl
bound
jae
hlt
and
xchg
push
fisubrs
pop
dec
add
lods
es
in
sbb
outsl
sbb
scas
push
inc
sub
imul
jne
adc
bound
jae
inc
sti
inc
sar
and
bound
lret
arpl
movsl
and
push
or
pop
add
push
dec
cmp
mov
in
jge
scas
lods
rorb
shr
es
call
dec
add
push
push
sbb
mov
loopne
xchg
dec
sub
and
push
mov
lcall
mov
xchg
cmp
out
js
jb
enter
imul
jo
enter
popa
cmc
mov
inc
push
lret
xor
push
mov
push
sub
insb
xchg
loope
dec
mov
push
sahf
std
inc
push
or
pop
outsb
mov
shrl
cmp
dec
dec
mov
fs
xor
es
inc
inc
movsb
xlat
add
insb
addr16
ds
mov
test
push
in
xor
inc
dec
dec
mov
and
adc
jno
or
es
xor
pop
inc
daa
sub
in
xor
jns
pop
popa
test
cld
aam
test
aaa
cmp
xchg
movlps
xor
pop
or
push
test
xchg
push
sub
gs
aad
cwtl
push
rolb
in
dec
add
imul
mov
inc
push
xchg
or
fs
adcb
jne
imul
mov
xor
jns
shl
jbe
cs
push
test
data16
int
stos
pop
nop
cli
jns
dec
mov
pop
inc
sbb
hlt
addr16
hlt
js
xchg
or
jae
xchg
arpl
dec
lea
and
mov
xor
rcll
mov
or
mov
mov
fwait
sbb
pusha
or
aas
push
sub
movsl
enter
imul
dec
push
and
arpl
or
cmovs
push
dec
imul
lds
out
bound
inc
xor
adc
rcll
cs
or
dec
push
dec
push
dec
push
nop
lea
push
ds
cmp
push
or
movsl
out
je
hlt
jb
js
decl
jp
mov
adc
or
nop
jo
pop
push
jae
sahf
dec
outsb
jne
jns
sbb
jns
and
push
push
cld
or
test
imul
push
lods
or
divl
push
xchg
cwtl
cmp
and
dec
jbe
loop
aad
les
cltd
ret
dec
dec
push
mov
adc
mov
dec
scas
dec
cmpsl
rclb
mov
push
insl
dec
outsb
dec
xchg
cmpsb
insl
xorb
imul
push
push
and
adc
add
add
mov
add
add
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
pop
jne
add
fildl
ds
roll
push
insb
xlat
add
rolb
imul
add
xlat
add
cmp
fadds
cs
add
cmp
add
push
fadds
imul
add
aam
sbb
or
aam
jns
filds
push
jno
add
fildl
or
add
push
fiadds
inc
insl
loope
pop
and
add
jecxz
insl
mov
add
loope
cmp
add
push
faddl
push
fildl
adc
add
add
push
loope
add
add
inc
loop
or
loope
and
add
pusha
loop
sub
add
pusha
loop
push
push
loope
or
loope
add
add
inc
loop
sub
add
pusha
loop
add
add
add
dec
ljmp
push
call
add
dec
call
add
dec
out
add
add
dec
ljmp
add
add
out
add
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
xchg
out
or
add
pop
repz
pop
repz
pop
repz
pop
repz
pusha
clc
add
pusha
clc
add
push
add
push
add
push
add
push
add
push
add
jmp
add
add
push
add
push
add
insl
clc
add
js
add
js
add
jno
add
js
add
pop
incl
add
insl
sti
add
lock
add
add
jae
add
in
add
pop
testl
add
add
jno
add
in
add
jmp
sub
push
testl
add
add
dec
sti
add
dec
cld
add
push
stc
add
icebp
add
in
add
sti
add
aaa
testb
cs
add
cs
add
cs
add
cs
add
cs
add
cmp
add
dec
sti
add
inc
cmc
add
call
add
cmp
add
xor
add
daa
icebp
add
daa
icebp
add
dec
out
add
in
add
in
add
in
add
in
add
push
in
add
sub
icebp
add
cs
add
xor
add
out
or
icebp
add
sub
in
add
cmp
add
ljmp
push
add
push
add
cli
in
add
out
in
add
dec
jmp
add
sub
cmc
add
out
and
add
in
add
ds
add
cli
in
add
cli
in
add
leave
ret
aam
add
push
add
lock
hlt
icebp
ljmp
in
add
add
sbb
add
and
in
add
xor
add
and
jmp
add
stc
jecxz
ljmp
add
and
scas
add
stc
icebp
add
in
out
ljmp
add
fsub
add
cmp
in
add
sub
in
pop
je
add
inc
out
add
ss
add
in
out
jmp
fldl
in
flds
bnd
xchg
add
or
add
outsb
add
add
jmp
flds
div
faddl
orb
add
inc
jmp
add
jmp
add
push
out
add
ljmp
in
flds
bnd
mov
add
or
or
add
add
cmp
cmp
sarb
add
ljmp
inc
pop
out
add
icebp
add
in
add
in
add
in
add
in
add
out
jo
jmp
imul
jbe
add
jecxz
in
jmp
jecxz
div
in
add
popa
pop
add
arpl
pop
popa
pop
add
pop
add
mov
ljmp
in
bound
add
icebp
add
repnz
jmp
imul
jl
add
repnz
repnz
testl
mov
testb
mov
add
icebp
ljmp
lock
cld
stc
icebp
add
mov
mov
xchg
xchg
mov
stos
test
fldl
cld
stc
icebp
add
lock
div
in
add
mov
add
hlt
add
testb
lcall
adcl
add
add
mov
hlt
add
cmpsb
hlt
add
jmp
cwtl
cmpsb
hlt
add
hlt
add
fucomi
add
cli
in
add
icebp
ljmp
mov
popl
add
icebp
ljmp
out
in
add
repnz
add
out
in
add
mov
hlt
add
lods
clc
add
jmp
xchg
movsb
ljmp
lods
clc
add
lods
clc
add
lods
clc
add
cmpsb
hlt
add
mov
add
jecxz
add
push
add
div
add
aad
add
aad
add
std
testb
div
add
div
add
push
add
lock
mov
out
add
cmpsb
hlt
add
lods
clc
add
add
add
lods
clc
add
stos
hlt
add
mov
add
mov
add
mov
add
mov
add
fucomi
add
div
add
std
testb
std
testb
std
testb
stc
cmc
add
div
add
fucomi
add
cmpsb
hlt
add
mov
out
add
test
repz
mov
add
mov
add
lret
into
shr
add
shr
add
lret
mov
repz
lods
clc
add
shl
xchg
cmpsl
out
popf
test
testb
mov
repnz
mov
add
mov
add
mov
testb
mov
add
add
add
mov
repz
mov
repz
test
out
test
jmp
stos
mov
jmp
stos
mov
add
push
lcall
push
pop
push
add
clc
add
clc
add
clc
add
cld
add
cld
add
cld
add
decb
lahf
pop
loopne
inc
add
incl
add
incl
add
add
jg
add
aas
cld
add
aas
cld
add
xor
add
add
add
add
add
pop
add
add
add
inc
add
push
pop
cld
aas
incl
