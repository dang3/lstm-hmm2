push
call
ret
ret
push
js
cmp
and
ret
test
sub
mov
popa
push
shrl
pop
lret
cmp
in
mov
push
scas
pop
fcoms
add
adc
cmc
mov
mov
sbb
dec
xor
aaa
scas
push
xchg
xor
mov
dec
aad
test
push
data16
inc
mov
and
sub
add
test
lret
flds
and
inc
pop
jne
sub
or
jle
push
fwait
xlat
mov
pop
xchg
imul
pop
iret
stc
mov
dec
pop
sub
insl
jb
out
jno
rep
mov
outsb
pop
out
mov
sub
sub
or
aam
popf
adcb
outsl
iret
xchg
adc
cld
dec
xor
popa
outsl
dec
int3
movsl
add
enter
inc
or
repz
push
mov
pop
icebp
push
add
dec
adc
mov
push
out
sub
xchg
add
xor
ficoml
mov
mov
push
mov
push
enter
mov
sbb
ss
dec
lods
or
test
mov
movsb
rclb
mov
fmul
mov
shrb
adc
jle
jge
push
mov
lret
or
pop
jl
cmp
fistpll
or
sbb
shll
outsl
insl
inc
push
int
daa
popa
repz
jnp
mov
jmp
shll
add
and
test
lret
lea
and
call
mov
adc
inc
mov
fildl
lock
inc
xchg
daa
pop
out
clc
mov
fadd
jno
mov
push
adc
fsts
add
or
jle
xchg
pushf
imul
loopne
pop
lret
mov
out
or
push
xchg
nop
push
lret
jg
in
call
or
add
in
movsl
pushf
mov
xchg
repz
mov
lcall
and
dec
mov
orl
fwait
mov
ja
in
addb
jge
mov
mov
xor
cmp
jecxz
pop
test
push
inc
stos
push
cmp
popf
repz
dec
loope
mov
push
std
les
dec
lahf
jmp
push
mov
cmp
and
mov
mov
stos
jmp
cmc
or
imul
dec
fstps
add
and
xchg
pusha
repz
mov
sub
push
inc
and
add
or
push
arpl
mov
push
push
jb
les
daa
and
mov
imul
jecxz
adc
enter
mov
iret
mov
adc
cmp
push
aam
sub
jb
sbb
notl
xchg
clc
pusha
push
out
lahf
jg
ret
and
mov
rorl
test
adc
pop
sar
add
mov
mov
ljmp
xor
iret
jmp
sub
inc
aam
dec
jp
or
fsubrl
jge
pop
cmp
ljmp
dec
xchg
stos
popa
jne
rclb
jb
dec
lret
or
adc
push
loopne
mov
mov
mov
inc
lcall
lret
call
popa
sbb
js
enter
jno
jg
adc
arpl
loope
push
insb
cmp
push
ja
fnsetpm(287
jmp
hlt
std
pand
test
or
cmc
add
push
ret
xorps
pushf
insl
stos
jo
sbb
movsl
cmp
icebp
into
sub
ret
iret
loop
fsts
or
dec
das
std
mov
xchg
xchg
and
in
movsb
push
inc
or
dec
shl
cld
enter
sbb
fwait
add
loop
jo
hlt
pop
or
pusha
xchg
lds
daa
dec
cmp
mov
jecxz
loope
xor
cmp
jnp
sbb
xor
int
xchg
pushf
icebp
mov
or
stos
inc
divb
out
aam
andb
scas
pop
ss
push
add
cs
jb
lds
pop
movl
mov
push
xchg
je
sbb
enter
push
repz
add
adc
xchg
push
fistl
mov
mov
pop
mov
test
xchg
or
inc
popf
pusha
lret
dec
movsb
jge
cld
outsl
add
adc
nop
or
jae
popa
dec
inc
jp
inc
ret
xor
jp
fwait
xchg
nop
pop
icebp
lret
popf
mov
xor
repz
in
imul
mov
sbb
xor
mov
mov
imul
inc
inc
mov
pop
inc
add
or
add
push
or
xchg
cmp
aam
xchg
ss
fdivrl
fnsave
out
dec
mov
jle
inc
cmp
scas
lcall
cmp
jbe
movsb
jg
push
add
clc
pop
fstpt
inc
mov
pop
push
xchg
loop
pop
mov
sti
xchg
cmp
or
push
xor
aam
loop
in
mov
pusha
mov
test
icebp
or
enter
in
out
dec
add
bound
inc
dec
ret
xchg
in
test
mov
fisttpll
stc
push
ss
outsl
push
ret
add
daa
sarl
out
mov
adc
cltd
call
jg
movb
adc
add
lock
pop
pop
lds
or
test
cmc
imul
insb
dec
push
add
cli
into
into
addb
mov
mov
sub
and
mov
cmpsb
std
xor
cmp
sti
dec
mov
std
das
inc
lods
in
sbb
shlb
mov
stos
sahf
cmp
dec
repz
dec
or
push
xchg
out
dec
ss
test
hlt
pop
or
xor
xor
ja
popf
sub
dec
mov
scas
push
fisttpll
flds
adc
xchg
movsl
fwait
mov
ja
mov
inc
push
mov
in
xchg
jmp
push
dec
in
imull
dec
test
outsb
push
sahf
mov
xchg
scas
je
stos
fstl
test
mov
mov
cmp
push
test
iret
out
lret
imul
adc
cmp
xchg
cmp
xor
repnz
inc
test
xchg
sub
mov
jno
popa
movsl
or
lods
sbb
jno
cmp
aam
xrelease
stos
ds
xchg
sahf
out
xor
cwtl
pop
lret
mov
dec
push
rolb
std
fwait
mov
aam
sbb
jmp
ss
jb
cmp
cwtl
adc
mov
sub
das
cmp
movsl
sub
insl
insb
adcb
int
jmp
pop
adc
loopne
cmc
jno
imul
sub
sbb
ds
rclb
flds
leave
aas
add
mov
movsl
or
xor
ds
fdivl
scas
outsl
popf
xlat
jmp
jg
or
mov
sti
call
sub
push
pusha
jp
xchg
push
fnstcw
lret
ss
cltd
in
xor
xor
aam
push
adc
jle
test
and
inc
push
cltd
cmpl
cli
mov
push
outsl
ret
lock
mov
sbb
movsl
xchg
sarl
xchg
adc
sbb
adcb
shrb
cmpsl
inc
inc
rclb
fs
imul
movsb
mov
pushf
adc
fistps
jg
adc
ljmp
mov
scas
sbb
popl
mov
xchg
mov
and
outsb
mov
or
orl
sbb
shlb
add
scas
push
and
or
stos
loope
adc
push
loopne
int
roll
movb
test
mov
ljmp
clc
adc
clc
pop
outsl
fidivrl
jno
shll
popf
sti
aaa
sbb
jle
hlt
ret
xchg
daa
stos
imul
or
ret
or
leave
into
data16
push
dec
add
push
mov
cld
in
clc
mov
and
pusha
mov
mov
aad
test
bound
js
cmp
lods
or
test
imul
mov
xchg
adc
pop
sub
mov
pop
pop
mov
jg
call
pop
push
push
jno
sbb
mov
out
pop
mov
add
pop
daa
push
icebp
pusha
shrl
xor
cmp
mov
lods
add
xor
leave
in
sahf
pop
mov
loop
outsl
xchg
xchg
mov
add
lock
or
and
pusha
sub
cmp
sub
inc
xor
inc
sbb
sub
dec
cmpsb
mov
jae
add
popa
pop
inc
lcall
mov
jnp
inc
aaa
xor
push
lods
cmp
xchg
mov
pop
or
adc
jg
push
mov
xchg
xchg
mov
pop
filds
pop
jmp
enter
dec
dec
mov
lock
push
push
inc
cmp
add
aaa
popa
test
inc
movsl
test
stos
repz
movsl
push
repz
sti
pop
pusha
pop
fisttpll
out
inc
outsb
or
mov
mov
bound
stos
inc
rcrl
ret
sbbl
mov
mov
mov
sbb
in
outsb
into
ja
jnp
cmp
or
lret
movl
cmp
jmp
sub
lock
push
cmp
addr16
outsl
sub
or
loope
cmpsb
popa
xor
outsb
ljmp
popa
jg
sbb
pop
or
shrb
repz
scas
push
xor
shrb
push
lahf
shll
mov
dec
mov
sbb
rcrb
mov
and
inc
add
incb
jno
mov
stc
pop
mov
ret
xor
out
lret
aad
push
fisttps
push
dec
pop
mov
sar
jno
int3
cmpsl
adc
hlt
es
lods
jge
push
inc
inc
mov
ret
ja
xchg
pop
out
xorb
lcall
and
sbb
push
push
pop
mov
fcmovb
or
ret
add
test
inc
movsl
dec
sbb
push
sti
int
push
aaa
aad
mov
cli
pop
dec
ret
pop
mov
loopne
pusha
lahf
stos
mov
insl
pop
add
mov
xchg
pop
jb
fistl
lret
sbb
push
insl
jnp
aas
scas
insb
fldcw
addr16
xor
cmpl
jge
movsl
mov
fidivrs
adc
mov
or
mov
push
mov
mov
cs
jp
movsb
cli
aaa
jb
enter
sub
pop
fisubrs
lret
cmp
fwait
mov
push
repz
inc
loope
bound
js
movsb
mov
jg
mov
jae
ficomps
lea
jecxz
pop
fs
aad
gs
les
dec
ret
cld
stc
mov
sbb
dec
aad
dec
sub
pop
sub
jmp
mov
push
test
pop
jbe
fnstenv
mov
imul
xchg
out
cltd
mov
loope
xchg
mov
aas
iret
cs
pop
ss
enter
dec
ret
push
idivl
gs
sbb
fstpl
adc
iret
pop
jecxz
or
pop
adc
mov
pop
pop
ret
push
nop
inc
hlt
fs
aaa
sbb
lcall
jp
out
and
test
cmp
stos
mov
mov
sar
shrb
iret
stos
mov
or
outsl
clc
or
cmp
pushf
push
lcall
pop
or
sti
bound
lock
jns
xor
stos
orb
fldenv
pop
jmp
in
sub
xlat
xor
push
and
push
nop
xchg
es
in
add
iret
into
popa
jecxz
mov
push
cmp
movsb
imul
and
xchg
push
enter
fldl
movsb
xchg
repnz
lods
in
push
stos
es
jge
push
in
or
in
mov
int3
adc
jl
cmp
ss
add
bound
subl
adc
and
or
mov
movsb
sti
mov
popa
sbb
ss
int
mov
or
push
call
pop
repz
cmp
xchg
cltd
mov
mov
iret
jmp
sub
ljmp
adc
push
cmp
scas
mov
dec
pop
movsb
insl
movsb
xchg
aas
xchg
jl
jno
pop
sub
lods
test
lret
ret
fsubl
mov
mov
decl
mov
idivl
sub
cld
frstor
call
cmp
scas
mov
shll
addr16
lret
dec
add
inc
adc
lcall
xchg
and
inc
mov
sbb
sub
cld
sbb
ret
or
mov
insb
out
inc
adc
pop
negb
scas
adc
pop
cmp
or
pushf
or
ds
mov
mull
aam
jns
adc
loopne
andb
pusha
add
add
enter
mov
cmp
dec
adc
movl
mov
and
test
lahf
mov
out
fiaddl
add
jne
or
imul
test
cmp
pushf
fcompl
cmpsb
jp
inc
pop
push
xchg
and
shll
cmpsl
pop
inc
sbb
in
sbb
mov
in
stos
cmp
mul
fisttps
inc
int
aas
mov
fnsave
cmp
mov
and
imul
or
cmp
jae
ficoml
and
mov
mov
jb
or
inc
xchg
jmp
enter
test
adc
mov
aas
inc
jle
cltd
ficoms
out
xor
mov
in
iret
ret
xchg
xor
mov
xchg
inc
or
adc
lea
insl
loop
aas
mov
jns
or
rcr
mov
scas
xor
mov
sub
sub
nop
inc
mov
repz
ja
cmpsb
fimuls
outsl
notl
aaa
rolb
add
adc
add
push
std
jmp
jb
gs
lods
lods
sbb
sub
jbe
pop
cmpsb
mov
push
icebp
mov
push
xchg
jmp
scas
xor
dec
push
int3
jns
sub
in
in
les
movsb
pusha
dec
dec
js
std
nop
mov
dec
aad
sarb
xchg
repnz
ret
xchg
ja
cmp
sbb
sub
je
stos
xlat
shlb
mov
sbb
cmp
jne
pop
jmp
arpl
lret
movsb
mov
in
pop
mov
inc
cmpsl
nop
cmpsb
lock
repz
cld
lea
add
fldt
fiadds
out
test
pusha
ljmp
mov
test
int3
sub
push
jle
xor
sbb
xlat
rclb
pushf
popf
push
xchg
push
icebp
push
mov
mov
sbb
push
xor
add
xlat
pop
push
sub
sahf
iret
std
sbb
test
jns
jmp
mov
imul
out
leave
xchg
sbb
sub
lods
std
bound
mov
mov
xor
addb
mov
jno
dec
rorl
int
sarl
incl
pop
mov
inc
mov
mov
mov
loopne
fiadds
cmp
jl
xchg
adc
stc
lcall
in
cmp
sub
push
test
jp
lock
sbb
sub
add
inc
hlt
lret
xor
mov
dec
fnsave
mov
adc
ret
xor
cli
mov
mov
jle
sarl
mov
jno
push
scas
jmp
push
scas
testb
mov
divl
jecxz
dec
xor
les
ja
cmpsb
pop
pop
pop
outsl
pop
adc
adc
xchg
daa
lahf
cli
xchg
pop
out
xchg
jno
testb
push
inc
mov
xor
in
orb
mov
and
int3
or
addr16
ret
stc
mov
push
pop
cmp
repz
outsb
stos
sub
daa
xchg
pop
ficoml
sbb
jp,pn
fnstcw
ss
mov
inc
pop
aam
dec
data16
xchg
fcmove
movsl
adc
sbb
jl
mov
adc
cli
adc
cli
insl
cmp
mov
popa
jge
add
xchg
mov
or
dec
inc
and
and
xor
int
inc
cs
mov
cmp
popa
push
dec
pop
and
rorl
jb
fcomps
adcl
jno
je
jnp,pt
lret
cmp
mov
in
add
dec
and
scas
mov
cmpsb
mov
sti
fisubl
pusha
or
cmp
xchg
push
adc
enter
into
into
mov
mov
sbb
in
jno
fadd
incl
pop
fsubl
out
rorl
nop
dec
aad
or
je
push
mov
call
xor
or
cmp
testb
dec
jo
pushf
lock
mov
andb
add
div
sahf
inc
push
stc
push
xchg
push
and
ret
cmp
mov
psllw
push
and
pop
fdivrl
pop
imul
fnstenv
mov
or
sub
cmp
icebp
mov
xor
rclb
sarl
into
stos
int
lods
mov
cs
jl
jo
sti
push
je
cmpsl
cmp
push
pop
scas
aam
push
jo
mov
pop
push
insl
mov
adc
mov
out
outsb
loope
sub
ljmp
add
pop
and
js
dec
adc
imul
cmp
cmp
sbb
popf
cmp
xchg
incl
mov
jns
repnz
ljmp
jbe
ret
mov
dec
or
push
mov
mov
mov
pushf
add
stos
in
ds
jl
xchg
shll
pushf
sub
cmpsl
adcl
testl
sahf
xorl
imul
add
cmc
sbb
fdivrp
cmovs
push
adc
xor
rcrl
or
mov
cmpsb
jo
mov
stos
movsb
and
mov
xor
test
xchg
cmp
xchg
inc
xchg
mov
jle
mov
mov
icebp
iret
cmp
stos
add
fwait
sbb
xorl
mov
push
ds
lods
pop
int3
xchg
add
enter
arpl
mov
sti
jne
std
nop
sahf
dec
lret
xchg
nop
andl
insb
popa
scas
xchg
jg
in
mov
mov
cmp
mov
sub
xchg
popa
push
les
orl
scas
or
push
cltd
mov
mov
dec
xor
pushl
in
in
add
ret
stos
jbe
cli
out
dec
jne
xor
adc
das
cmp
inc
mov
inc
pop
add
add
push
sarb
repnz
mov
xlat
or
mov
sub
cmp
imul
add
push
movsb
ret
lret
aad
push
popa
rolb
pop
xchg
aam
inc
sbb
mov
rcr
orb
addr16
in
push
xor
mov
or
mov
clc
fldl
notl
dec
xchg
fs
cltd
int
sbb
xor
call
pushf
mov
jl
fstpl
rorl
out
push
or
fcomi
les
xchg
mov
test
repnz
xor
mov
insl
mov
sbb
cmp
mov
jb
sub
pop
or
dec
mov
pop
mov
and
stc
lock
mov
and
jae
inc
lahf
pop
js
imul
add
popa
fsts
mov
xchg
loop
mov
jge
ret
sbb
fisttpl
int
mov
out
negl
out
in
inc
xchg
dec
add
push
out
mov
stos
inc
adc
sbb
xchg
cmpsl
inc
add
in
jecxz
sti
and
mov
xchg
jp
jbe
pop
mov
cli
mov
jg
cmpsb
jmp
xor
or
sub
fnsave
dec
pop
inc
jg
jnp
adc
sbb
mov
xchg
mov
mov
shll
or
cmp
mov
enter
jne
jo
jno
mov
mov
adc
test
cmpsb
xchg
or
sbb
adc
roll
test
cld
loopne
pop
xchg
inc
mov
cmp
jge
jmp
xor
sbb
arpl
adc
bound
outsl
pop
into
add
imul
loope
sti
pop
cmpsl
orb
rorb
ret
and
mov
dec
push
xchg
xor
loope
xchg
sub
push
jo
adc
mulb
mov
rolb
ss
add
outsl
loop
ljmp
xchg
xor
decb
mov
adcb
add
or
cmp
xchg
movsl
loopne
mov
sahf
cmp
outsb
push
lcall
xorl
addr16
das
push
hlt
mov
xchg
daa
rorl
sbb
cmp
mov
inc
sub
std
lods
sbbl
cmp
inc
push
aas
xlat
mov
pop
shlb
in
sub
jge
lret
xor
loop
repz
rolb
mov
aaa
xchg
das
out
pop
mov
addr16
repz
mov
mov
sub
aad
pop
scas
dec
jno
add
imull
and
aas
scas
test
cmp
ja
insl
fsubrs
mov
pusha
push
xchg
jns
arpl
je
adcl
roll
cld
div
int3
sbb
fwait
jns
pop
xor
adcb
gs
xor
psraw
outsl
mov
or
je
cld
fisttpll
sbb
mov
dec
mov
xchg
pop
cmp
cmp
or
mov
dec
imul
mov
dec
adc
sub
and
jl
push
sub
sbb
test
cmp
movsl
imull
lock
inc
lar
inc
cmc
jecxz
int
and
pop
xchg
sub
and
subl
xor
iret
lods
icebp
pop
int
mov
scas
and
insb
mov
adc
mov
in
leave
xor
pop
xor
adc
add
js
mov
out
movb
add
in
xor
movsb
pop
dec
mov
imul
push
mov
inc
push
xor
lret
aaa
rol
inc
sub
ja
add
add
sub
add
loopne,pt
pusha
sti
and
and
cmp
faddp
sbb
push
jmp
sbb
gs
xchg
rcrl
push
call
fs
mov
rol
ds
pusha
jl
dec
arpl
int
mov
dec
inc
out
into
xchg
arpl
pop
lods
loopne
pop
adc
.byte
sbb
mov
add
add
imul
stos
cwtl
out
mov
subl
je
pop
push
imul
mov
add
and
mov
sti
jns
pop
bound
ja
sub
push
dec
adc
test
lcall
sbb
faddl
jno
enterw
cmp
mov
jb
cs
ret
mov
aam
jge
call
shlb
inc
mov
imul
fists
lret
xor
ficoml
mov
js
jne
xchg
jne
fs
jecxz
inc
pop
mov
cmp
jp
in
jg
leave
shll
dec
sbb
add
xorb
adc
das
faddl
fucomp
test
fs
aas
arpl
push
dec
dec
imul
mov
dec
ds
movsb
mov
shlb
rcrl
mov
xchg
jl
imul
cmp
fadds
pop
sbb
cmp
sbbl
mov
mov
cmp
rcrl
push
loop
cmp
sbb
and
pop
push
jbe
xchg
rcr
push
sarb
pop
pop
pop
adc
and
imul
shll
xor
sbb
add
mov
test
stc
jb
pop
dec
push
xorb
sub
push
popf
hlt
test
sub
pop
sbb
push
jno
push
mov
push
aad
xor
shlb
test
shl
test
mov
jl
mov
jp
xchg
adc
je
push
shl
lretw
and
fldcw
mull
sbb
ret
sub
xor
data16
pop
inc
or
push
scas
cmp
shrb
pop
or
add
.byte
sbb
add
push
cwtl
push
jl
in
jge
mov
mov
lret
stos
or
sub
xor
adc
cli
dec
xchg
popa
in
adc
repnz
fimuls
fmull
insb
jge
or
push
inc
xchg
cmpsl
mov
dec
add
insb
fsubs
push
add
fidivrs
and
fildl
loopne
outsl
data16
in
ret
cwtl
loop
mov
add
mov
leave
mov
in
sbb
lods
xor
test
aad
and
fdivrl
mov
outsb
out
insl
loopne
js
in
mov
sub
push
fcomp
cltd
ss
leave
push
rep
mov
push
aas
jp
fistl
repz
loopne
sub
repz
fdiv
test
sbb
pop
in
loop
lahf
mov
mov
dec
xchg
lcall
inc
fwait
mov
add
popf
and
mov
popf
inc
mov
sti
dec
in
cmpsb
js
cs
adc
mov
xor
stos
arpl
mov
mov
ret
pop
or
jae
stos
xchg
fs
mov
imul
xchg
cwtl
pop
sarl
dec
push
imul
rorb
mov
adcb
ljmp
int3
dec
aad
or
mov
lcall
loop
inc
dec
sti
add
mov
push
iret
in
cwtl
mov
add
push
popa
push
dec
fidivs
jmp
sub
xchg
fisttpll
lds
and
inc
test
in
scas
sub
mov
cli
es
pushf
lret
push
xchg
sbb
pushf
adc
int3
loopne
pusha
fsub
pop
or
insb
jo
faddl
scas
rcr
pop
cmpsb
push
fdivs
mov
inc
roll
or
add
dec
sub
cmp
or
mov
mov
jne
mov
pop
repz
mov
add
ljmp
or
and
jg
xchg
fistl
imul
dec
cmp
xlat
xlat
les
sbb
aas
lock
iret
mov
test
ljmp
outsl
sbb
xchg
repnz
popa
cmpsb
and
test
and
movsl
aad
xchg
dec
dec
daa
cmp
int3
xor
aad
inc
jb
icebp
push
in
sbb
add
mov
ss
shlb
popa
push
inc
push
jo
inc
imul
call
jbe
dec
inc
or
in
mov
rol
mov
fimull
test
mulb
mov
push
je
sbb
sbb
daa
sti
add
sub
add
xchg
fwait
je
in
pop
mov
pop
cmp
je
iret
jnp
dec
xchg
sub
and
dec
jl
sbb
test
xchg
mov
das
rcr
mov
xor
clc
fwait
repnz
jle
pop
xor
pusha
and
mov
aas
mov
pop
insb
test
sbb
xor
or
push
or
pushf
or
roll
icebp
test
flds
push
je
push
pop
shr
popa
ret
repnz
or
or
jp
lods
into
lea
hlt
shl
insb
push
inc
push
and
out
jl
adc
add
mov
addb
std
sub
add
dec
hlt
sub
lahf
adc
sbb
mov
mov
mov
sub
mov
push
sbb
mov
orb
insl
dec
into
stc
cltd
xchg
idiv
jae
dec
cmp
scas
shl
shll
and
aad
lahf
push
in
mov
dec
mov
mov
mov
pusha
mov
jns
xor
and
or
lret
lea
jbe
sub
into
js
jg
shr
jmp
add
arpl
fstp
lea
xchg
into
outsl
jns
popf
lret
test
out
pop
stos
inc
cmp
sub
push
and
les
cmc
jge
add
popf
lods
sbb
or
mov
insl
jecxz
data16
movsb
arpl
push
mov
orl
sahf
fst
sbb
push
lods
ret
cmp
and
rcll
cmpsl
jp
mov
in
adcl
mov
adc
mov
mov
mov
add
add
les
adcb
jae
xchg
pop
aad
fldcw
pop
call
addb
pusha
xchg
ds
cltd
repnz
mov
sub
xchg
pop
arpl
or
jne
push
mov
push
mov
loope
popf
stc
mov
adc
xlat
pop
pop
mov
sub
les
aaa
sub
loopne
xchg
mov
ja
sbb
lock
mov
and
stc
mov
dec
mov
cmc
lds
pusha
sub
cltd
stos
push
in
push
inc
ja
fisttps
dec
dec
xchg
test
mov
hlt
adc
add
sub
sbbl
and
xchg
es
in
mov
jg
lock
push
dec
mov
dec
subl
xchg
sub
clc
pop
and
mov
imul
gs
jmp
mov
xchg
inc
xor
jl
or
clc
adc
dec
insb
imul
mov
xchg
sub
rcll
ret
add
add
jo
add
add
addb
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
xor
add
inc
add
addb
add
add
add
pop
add
add
add
add
add
add
add
add
js
add
jl
add
mov
add
cwtl
add
adcb
add
add
add
add
add
add
add
add
add
mov
add
insb
mov
add
push
add
in
add
add
add
add
add
add
add
fadds
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
sub
add
xchg
add
add
add
add
add
add
add
addb
add
add
add
push
sbb
add
add
xor
push
add
dec
add
inc
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
and
mov
fucomi
popa
cmp
out
ret
add
call
adc
push
dec
lock
fstpl
div
add
dec
iret
push
outsl
sub
es
lods
test
sbb
movsb
jmp
cmp
test
call
mov
rorl
outsl
jb,pn
cmc
in
fs
shl
sbb
sbb
jae
xchg
xchg
lret
and
outsl
addr16
rorl
iret
sbb
xorl
scas
enter
in
mov
rcll
mov
fistps
pop
push
push
cwtl
pop
lret
pop
arpl
push
lret
add
pop
adc
xchg
adc
push
inc
pop
scas
jle
or
mov
pop
or
divl
or
int
mov
add
repnz
lods
repnz
jno
sbb
hlt
cmpsl
inc
lea
adcb
mov
inc
jbe
mov
mov
mov
sbb
and
sarb
inc
xchg
pop
outsl
outsl
out
scas
stos
jmp
inc
jp
xor
sti
or
lods
pop
jl
dec
sbb
arpl
shll
div
rolb
fucomp
mov
sti
push
test
pop
xor
or
or
mov
fnstenv
out
mov
xlat
jp
cltd
xor
movsb
movsb
lea
and
shll
and
pop
mov
imul
push
add
sbb
xor
fisubrl
das
lds
lods
pop
ret
cmp
inc
pop
pop
inc
adc
fadd
mov
loop
jmp
and
xchg
sbb
loope
scas
cld
cltd
mov
movsb
lret
insl
sub
dec
stos
pop
mov
and
xchg
sub
adc
lods
jge
cmp
fbld
pop
inc
lahf
mov
mov
ja
test
std
jmp
dec
bound
push
into
pop
orb
and
push
pop
data16
cmp
popf
lods
cmp
jmp
xchg
mov
jge
push
and
jge
enter
out
fists
pop
and
jp
fists
aad
sahf
cmp
or
xchg
pop
xchg
es
and
movsb
iret
sub
loop
sbb
lods
cmpsl
cmp
pushf
adc
add
mov
xorl
mov
sbb
in
adc
jmp
jle
ret
inc
pop
inc
fiadds
hlt
mov
push
insl
jae
inc
aad
fucomi
sbb
inc
jbe
pushf
int3
sub
outsl
cmpsl
call
or
inc
or
mov
push
xchg
sub
pusha
and
sbb
data16
repz
mov
adc
out
das
pop
xor
mov
sub
sarl
jge
clc
je
xor
or
or
push
cmp
je
das
inc
mov
cmp
in
fwait
imul
rcl
mov
iret
mov
repz
mulb
xchg
fwait
bound
lahf
imul
out
jne
out
mov
ret
mov
xor
fcmovbe
je
mov
aam
jge
rol
imul
inc
pop
xor
scas
mov
pop
pop
adc
push
or
das
rcrb
call
jno
pop
xlat
aas
mov
cmpsb
and
mov
shl
mov
les
cmp
sub
mov
xchg
sahf
dec
push
sub
xlat
sub
add
outsl
test
mov
fnstsw
iret
dec
jmp
mov
data16
insl
mov
stos
mov
mov
jo
cmp
imull
bound
loope
addr16
mov
jg
jno
imul
pusha
aad
loopw
std
sahf
lods
in
push
mov
inc
mov
mov
cmpsb
jno
mov
jnp
icebp
js
xlat
rep
mov
incb
add
sahf
sub
mov
mov
mov
mov
pop
mov
ret
lret
mov
push
xchg
xchg
ret
push
lret
sbb
sub
jbe
or
xchg
divb
push
push
cwtl
popl
icebp
jge
pop
and
popf
sti
push
movsl
inc
jno
arpl
mov
imul
outsl
push
pop
js
sbb
popf
mov
mov
ret
xchg
pop
cwtl
add
insl
out
pop
add
imull
jb
lret
pop
aaa
or
insl
mov
testb
cli
fwait
mov
outsb
cmp
mov
fisubrl
push
jno
sub
inc
xchg
dec
jecxz
loopne
adc
mov
pop
sub
adcl
scas
mov
aam
mov
xor
js
pop
or
lods
lods
daa
repz
inc
ja
test
ret
adc
mov
lock
shll
cmp
mov
mov
shl
fbstp
cmpsb
add
in
stc
imul
pop
and
mov
jl
inc
and
pop
test
in
mov
add
xor
xchg
in
stc
inc
pop
dec
lcall
pushl
les
cli
cld
iret
xor
cld
xchg
cmp
movsb
inc
pop
into
js
adc
test
or
loope
repnz
mov
popf
and
repz
push
sub
push
add
adc
add
lods
sub
pop
into
movsb
lret
or
lea
mov
sub
mov
jb
movsb
push
test
adc
leave
sbb
sub
lods
rorl
jb
or
test
ficomps
leave
jecxz
daa
jg
sti
push
jb
iret
cmp
in
pop
jp
dec
clc
mov
xchg
cmp
pushf
in
ds
inc
mov
into
stos
mov
xor
imul
or
fcomps
pop
das
iret
movsb
aad
adc
fstpl
repz
ror
cmp
xchg
adc
int
dec
lea
xor
add
or
daa
pop
add
push
jecxz
out
push
add
mov
push
xchg
mov
outsl
add
or
pop
push
sbbb
or
jmp
fimuls
daa
inc
cmp
in
jg
mov
inc
sub
pop
adc
jmp
sbb
xor
fisubl
adc
lock
push
out
inc
mov
popf
insb
in
insl
cld
rolb
lret
test
gs
lcall
subb
jle
negb
inc
stos
pop
gs
jae
stos
and
sub
dec
jns
fildl
stos
sbb
mov
and
pop
jmp
out
cmc
mov
int3
aad
push
fwait
rcl
sub
lcall
dec
in
sub
int3
mov
inc
inc
gs
aad
fwait
ret
in
mov
inc
ljmp
jnp
mov
aad
cld
in
lcall
ljmp
lea
or
pop
nop
push
insb
mov
scas
in
xchg
sbb
pop
pop
lds
sub
fidivl
scas
cmpsl
mov
rorb
push
cmc
add
data16
rcl
lret
lret
pop
xor
inc
cli
rclb
xchg
jl
fiadds
inc
adc
mov
test
orb
mov
sar
cltd
jmp
cli
stc
jo
dec
out
sahf
rcrl
push
jl
pop
fbld
icebp
xchg
cmp
aas
mov
outsl
inc
dec
and
jmp
mov
icebp
ret
nop
rcr
adc
sbb
push
pop
or
jno
push
jo
call
mov
lds
in
je
scas
or
arpl
push
bnd
bound
or
adc
imulb
mov
adc
or
xor
cmp
stos
mov
int3
lds
jb
push
loope
mov
shll
sub
adc
cmp
jae
je
add
pop
xlat
int3
mov
mov
sub
add
push
dec
sub
outsb
loopne
pop
rolb
fisttps
cmc
in
jo
xchg
andb
or
outsl
lds
xor
out
lret
xchg
pop
cmpsl
pop
push
add
je
lods
pushf
dec
sbb
add
jae
jno
lahf
mov
mov
xchg
ss
sub
dec
out
fwait
mov
push
push
mov
or
xchg
shr
mov
jecxz
jae
pop
loope
popf
jmp
pop
xor
jle
out
jbe
test
mov
dec
jp
into
jle
xchg
jge
enter
sub
shrl
push
mov
pop
inc
cmp
mov
test
and
fmuls
sbb
mov
and
lret
les
jno
or
pusha
imul
insb
or
cmp
andb
cmpsb
icebp
imul
insb
mov
xchg
or
push
js
push
mov
sahf
cmp
test
mov
stc
lret
dec
lret
and
test
imul
ror
lea
lods
mov
fldl
jp
fwait
repnz
mov
push
sub
adc
icebp
aas
dec
adc
ret
xor
fs
out
sbbl
push
dec
fwait
xor
fwait
cltd
rorl
jns
popa
incb
fdivl
mov
gs
and
call
lods
and
mov
xchg
pushf
repnz
enter
pop
adc
scas
sbb
sub
jae
ficoml
setae
and
jno
or
sbb
and
icebp
push
mov
adc
jecxz
cmp
add
cmpsb
testl
mov
cmp
sbb
cmp
cltd
mov
push
popa
es
adc
and
pop
cs
mov
dec
enter
or
lods
inc
sar
hlt
or
adcl
icebp
test
lds
xchg
jae
mov
mov
enter
xchg
and
arpl
movl
push
ljmp
xchg
xchg
mov
and
jle
bound
addr16
popa
mov
lret
sub
pop
int
push
mov
mov
push
or
inc
in
cwtl
xlat
imul
scas
rcl
cmpsl
icebp
fbld
arpl
ficoml
pop
and
push
or
xchg
add
imul
test
mov
out
outsl
pop
fcomps
jl
sub
pusha
cltd
pop
mov
sbb
mov
xchg
lahf
sub
cld
outsb
push
cmp
sbb
adc
cmp
lods
push
mov
scas
sub
xchg
loop
outsb
push
movsb
xchg
sbb
inc
and
or
daa
push
aas
mov
push
jno
sbb
fisttpl
aas
push
mov
sub
das
add
xor
daa
adcl
sub
aad
xchg
ret
xchg
int3
mov
jbe
popa
dec
mov
xor
cmp
lods
push
xchg
bound
mov
xchg
je
clc
push
sub
push
lock
lods
popa
mov
mov
xchg
sti
sub
scas
xor
push
mov
pop
repnz
enter
aad
repz
in
jbe
mov
hlt
lds
fldt
aad
lea
sub
daa
pop
cmp
sbb
sub
mov
or
lcall
cmpsb
insb
sbbl
shl
negb
scas
mov
dec
ss
xor
lret
enter
out
sub
xchg
pop
adc
clc
and
add
cs
mov
inc
iret
or
in
mov
fs
cmpsb
stc
rcrl
jp
popa
jbe
addr16
mov
xchg
xor
push
aad
push
mov
aad
dec
inc
fwait
dec
call
cmp
push
adcb
mov
add
aas
in
xorl
inc
push
aad
jo
stos
aaa
js
sbbl
inc
lds
dec
push
mov
fs
test
push
xor
jmp
pop
jne
xchg
cld
das
pop
sbb
inc
int
pop
scas
sub
pop
push
stos
cmp
popf
daa
ljmp
mov
inc
test
fwait
lods
repz
repz
pop
jbe
and
inc
cmp
in
mov
mov
test
imul
dec
and
ja
jae
jbe
push
in
add
ret
jne
add
mov
and
xchg
adc
das
fldt
sti
sbb
ret
lods
add
add
cmp
push
and
mov
mov
bound
rcrl
popf
mov
test
pop
repz
mov
fisttps
fcmove
mov
mov
xchg
test
xor
incb
or
mov
sub
ficoms
adc
jg
scas
push
dec
xor
lods
outsb
jne
test
mov
icebp
dec
mov
push
fsubl
ror
icebp
mov
and
ljmp
cmpb
mov
or
movsb
decl
rcrb
pushf
adc
andps
daa
in
and
push
pop
shll
jae
idivb
jecxz
push
and
cld
orl
dec
mov
scas
fwait
insb
adc
ds
iret
cmp
jbe
lret
mov
lret
or
out
test
mov
mov
hlt
push
repnz
pop
cmpl
mov
outsb
call
cmp
xchg
loopne
subl
outsb
call
mov
out
inc
mov
mov
pop
test
in
or
push
out
jne
jae
jmp
sub
mov
jp
add
cmp
arpl
jbe
loop
jb
adc
adc
insl
insb
sti
arpl
insl
push
xor
cmp
push
cmpsl
pop
out
xchg
sti
mov
fbld
mov
pop
dec
sarl
shrl
fprem1
testb
js
ret
xor
cmp
add
xor
jns
daa
std
xor
fwait
xchg
xor
pop
cli
fs
mov
bound
sub
into
pop
stc
hlt
adc
fld1
dec
shr
repnz
and
push
fiaddl
add
cmc
jle
out
ficompl
xchg
enter
jno
lock
sti
mov
add
mov
aaa
xchg
cmp
arpl
dec
fisttpll
fmull
xor
mov
aad
loopne
xor
cmp
and
add
cmpsb
dec
push
pushf
pop
fisttps
push
loop
stos
mov
lods
add
sti
rol
or
inc
loop
shlb
ja
ret
adc
jmp
mov
mov
xor
mov
mov
and
enter
push
mov
addb
mov
repz
mov
outsl
scas
fwait
or
inc
outsl
stos
iret
mov
sbb
jne
or
mov
lret
popf
xor
mov
scas
je
adc
or
out
push
add
leave
test
mov
and
out
ret
xchg
jmp
repz
adc
jbe
cmp
dec
insb
xchg
push
mov
mull
insl
pop
pushf
aad
outsl
inc
sbb
and
outsl
cmp
pop
in
pushf
jno
push
les
dec
add
push
cmp
mov
xchg
dec
xchg
int
adc
aad
dec
scas
sub
inc
adc
movsb
sbb
fimull
inc
jbe
pop
pop
in
jl
cs
sbb
or
mov
mov
xlat
call
ds
loopne
decl
data16
dec
pop
and
add
loop
insl
aaa
into
addb
xlat
mov
pop
nop
and
push
add
push
push
dec
pop
sahf
in
hlt
fwait
icebp
lret
xchg
popf
pop
jae
sub
cmpsl
adc
int
js
cmp
add
or
std
push
sti
jb
mov
or
scas
jae
add
mov
mov
mov
adc
pop
pop
fdivs
jecxz
ljmp
inc
insb
push
inc
sub
in
fcoml
inc
xor
sub
dec
inc
mov
adc
add
imul
sbb
jl
adc
out
xchg
frstor
dec
and
mov
cmp
or
lods
xchg
inc
lahf
mov
imul
sbb
add
dec
or
xchg
jo
into
lcall
pop
inc
add
push
cmc
xchg
inc
insl
imul
and
out
repnz
gs
popf
ss
xchg
adc
hlt
cmp
shl
push
cmp
inc
sub
fs
mov
jb
inc
mov
sbb
pop
or
xchg
jns
in
popf
xchg
push
iret
cwtl
stos
push
xchg
mov
dec
sbb
cwtl
outsl
sub
adc
dec
jno
stos
jp
push
adc
adc
ja
bound
ss
inc
cmpsb
xor
pop
jmp
arpl
push
stos
xor
fcoml
cli
sbb
inc
dec
daa
shr
arpl
push
push
ret
cmp
repnz
adcl
shrb
fwait
push
or
cli
mov
fidivrs
sbbl
push
bnd
mov
call
je
enter
adc
xchg
rcl
and
xchg
mov
adc
addr16
cltd
testl
nop
sbb
mov
orl
lcall
scas
pop
jns
or
pop
daa
mov
ljmp
fwait
jb
push
cmp
or
adc
ja
loop
orl
pop
add
rclb
loop
cwtl
fs
mov
mov
mov
fstl
add
mov
lahf
add
popf
and
bound
and
scas
adc
dec
ds
jne
push
and
adc
mov
sbb
dec
pop
ret
movsl
int3
mov
imul
bound
add
sahf
scas
dec
call
xor
add
adc
and
insb
jns
mov
jbe
or
fbld
pcmpgtw
test
cmp
stos
fstpl
xchg
inc
jmp
jb
sub
push
sub
lock
and
sub
xor
roll
fsubrl
mov
lea
adc
fldcw
mov
and
pop
push
bound
int
dec
nop
hlt
outsb
aam
sub
aad
insl
pushf
test
out
mov
arpl
addr16
pop
inc
dec
xlat
orl
idiv
mov
jno
dec
je
push
sbb
dec
pushf
sub
mov
cwtl
lahf
loopne
add
into
or
or
fcoml
jle
call
and
jmp
xchg
mov
pop
push
filds
or
or
lahf
hlt
outsl
mov
xchg
adc
mov
or
and
lcall
cmp
xor
mov
fnstenv
or
adcl
xor
loope
adc
jle
mov
inc
add
add
dec
repz
cli
push
jge
fbld
inc
ret
cmp
pop
mov
adcl
ret
adc
clc
mov
sahf
lock
cmp
inc
das
scas
xchg
jecxz
call
xchg
jbe
fldcw
popf
cmpsl
push
out
push
fsubrs
sub
popf
pop
jg
sub
movsl
lock
or
sarb
andb
lock
cmp
loope
sbb
mov
fcmove
sbb
mov
cmpb
clc
push
cli
mov
ja
ljmp
pop
xchg
jp
mov
leave
xor
nop
imul
mov
ret
fimuls
mov
or
dec
mov
xor
adc
loopne
xor
daa
jnp
jb
movsl
inc
gs
xor
mov
lods
push
jno
mov
test
test
push
loope
jge
add
add
sub
and
test
int3
jo
aaa
push
mov
aad
dec
xor
into
mov
rcl
arpl
adc
loop
mov
mov
test
les
xor
cmp
popf
ljmp
hlt
popa
dec
addr16
jae
lods
mov
das
shrb
mov
push
and
lock
gs
scas
sbb
scas
repz
fidivs
and
addr16
pop
cmp
aam
adc
imul
stos
in
mov
dec
rorl
rorb
mov
test
mov
inc
inc
cmp
ret
cmp
insb
cmp
xchg
mov
sti
xlat
mov
outsl
stos
push
fldenv
push
jp
lea
add
inc
jae
mov
push
popf
mov
xor
push
cmp
sbb
mov
mov
ljmp
je
jns
aaa
push
testb
les
or
in
test
out
pop
jge
sub
popa
push
add
pop
mov
in
push
cmp
xchg
mov
mov
stc
not
addl
aad
shrb
pop
push
lahf
push
jo
in
fwait
xor
xor
xor
xor
jp
sbb
xlat
std
jecxz
mov
xor
test
scas
and
jmp
fwait
mov
lds
loop
repnz
fcompl
divl
or
scas
push
sub
mov
test
pop
pop
movl
rcll
push
movsb
mov
mov
mov
lret
rcrb
pxor
jge
cmp
xchg
xchg
mov
mov
das
dec
or
shll
mov
jne
cmpsb
jle
xor
mov
mov
or
mov
sub
push
xlat
jbe
mov
fsubs
xor
nop
leave
mov
jo
and
cmp
pusha
mov
cmpsl
sub
inc
lods
mov
out
rcll
in
filds
jle
sbb
nop
lods
sbb
push
ss
enter
ss
adc
mov
fld
dec
ss
repnz
dec
aam
loope
iret
sbb
stos
in
xor
and
pop
ret
sbb
andb
add
jg
push
xchg
sbb
daa
cmp
imul
cmc
pop
cs
fldt
bound
xlat
inc
fucom
push
or
xchg
out
add
cmp
lods
fs
pushf
push
and
inc
fdivrl
mov
xor
aas
mov
cmp
jnp
adc
loopne
sbb
test
loopne
cltd
mov
mov
popa
and
insb
lods
test
xchg
mov
push
loop
adc
push
lret
push
mov
imul
mov
scas
dec
addl
mov
outsl
xor
dec
cmp
push
mov
inc
sahf
stos
adc
cmp
mov
or
jmp
in
or
jecxz
fwait
testb
sbb
mov
rcr
mov
sti
xchg
push
test
mov
mov
insb
arpl
xor
and
mov
push
push
mov
add
cmp
negb
stc
adc
data16
imul
fimuls
and
mov
add
test
aam
cs
outsb
xor
mov
inc
sbb
stos
dec
pop
lret
xor
outsl
pop
jne
sbb
imul
loopne
mov
add
cmp
adc
int
out
add
movsl
inc
mov
cld
cmpsb
or
mov
nop
stc
adc
sbb
mov
or
xor
addr16
gs
jmp
sbb
sbb
pop
pop
jmp
adc
fidivrl
daa
jns
or
das
lret
xor
jnp
xchg
dec
dec
paddq
sbb
je
dec
fstl
xorl
movsb
cli
mov
inc
mov
pop
lahf
jl
or
push
sub
pop
jnp
sub
lds
testb
pop
stos
int
cs
mov
test
aam
inc
add
adc
sti
jno
lea
addr16
fisttpll
dec
test
push
cli
inc
rcrl
mov
xchg
outsl
inc
cmp
stos
push
test
and
mov
mov
call
cmp
pop
add
mov
ret
in
popf
or
rclb
lea
nop
shlb
fcomp
dec
xlat
xor
adc
add
and
ds
jnp
dec
les
outsl
sub
cwtl
lea
mov
pop
lea
xchg
sub
jbe
les
sahf
dec
call
jnp
pop
jmp
nop
sbb
push
data16
mov
cwtl
std
ja
push
mov
pop
in
cmp
outsl
xor
xor
jb
cmpsb
fwait
lods
xorl
pop
sahf
push
xadd
js
repz
gs
add
cmp
mov
cmp
hlt
inc
cmc
mov
mov
addr16
cld
xor
cmp
sbb
aaa
xor
xchg
add
inc
movsb
xchg
pop
mov
mov
xlat
jbe
mov
mov
cmp
mov
and
int3
in
lods
mov
sbb
bnd
adc
cmp
sbb
xchg
cmc
jp
movsl
loopne
imul
aam
xor
outsb
stos
js
and
or
leave
sar
call
cltd
xchg
iret
push
sub
xlat
inc
mov
inc
movsl
js
pop
cmp
mov
sahf
cs
cmp
mov
cmpsl
jb
and
mov
aaa
and
dec
data16
inc
lahf
push
not
shrb
ds
shlb
test
loopne
xchg
in
dec
mov
in
out
loopne
lods
or
dec
push
sub
inc
int
lock
jne
and
enter
insb
insl
in
jb
movsb
mov
clc
test
loopne
jp
push
fstl
idivl
inc
jo
or
cmc
movsb
je
pop
enter
sub
pop
fisttpl
sbbb
mov
dec
jns
lods
test
mov
and
aaa
lahf
lret
stos
aas
xchg
inc
xorl
rdpmc
and
adc
orl
jbe
xchg
and
ret
bound
xchg
jno
pop
in
pop
inc
popa
xchg
and
ficoms
fcompl
je
in
jne
add
sub
lret
dec
mov
mov
inc
mov
sub
fwait
push
xlat
test
stos
push
sbb
stos
out
rol
in
adc
and
cmp
adc
and
mov
pop
sbb
test
mov
xchg
jp
xor
stos
mov
mov
and
cli
sub
pop
insl
arpl
xchg
sub
call
xor
and
push
mov
inc
divl
das
mov
iret
cmp
and
adc
inc
enter
dec
dec
jne
or
sbb
cli
xchg
cmpl
inc
mov
inc
test
push
out
mov
int3
js
or
dec
testl
or
in
jmp
jnp
push
xchg
sbb
jg
jno
lcall
and
jg
shrb
mov
ja
nop
jp
push
cmpsl
arpl
sbb
jne
ja
mov
and
adc
stos
popf
sar
hlt
mov
cs
pop
orl
pop
xor
mov
aad
jb
test
lret
sub
icebp
clc
ret
xchg
dec
pop
popa
repz
push
clc
mov
mov
outsb
imul
leave
sub
cli
mov
add
xchg
pop
or
inc
or
push
int
cs
out
jb
xor
stos
enter
jp
jo
imulb
adc
les
hlt
lahf
ja
push
sbb
lret
jp
inc
pop
loopne
xor
nop
cmp
mov
pop
mov
add
outsl
adc
add
add
and
dec
mov
test
inc
push
xchg
sbb
inc
jmp
cmp
in
aas
xchg
scas
fcmovu
jns
test
cmp
jmp
shll
int3
xor
and
or
fsubl
mov
jbe
ds
push
ret
imul
push
mov
sub
aas
mov
loope
aad
inc
lods
repz
add
cmc
and
insb
push
jnp
sti
push
ds
or
mov
pop
psubw
pop
sub
inc
out
sub
add
cli
mov
neg
inc
push
loope
ffreep
cli
cmpl
adc
jo
decl
inc
fldt
into
insl
sti
lods
sub
cmpsb
jns
lret
shrb
scas
cmc
sub
jns
out
shlb
in
pop
sbb
push
cmp
cwtl
jnp
jecxz
pop
xchg
les
push
dec
jle
pop
mov
xchg
mov
iret
mov
jne
popa
cmp
cmp
push
mov
mov
jmp
mov
test
mov
mov
mov
shrb
lods
or
outsl
mov
add
xor
dec
push
inc
adc
psubb
jl
cmp
push
mov
enter
dec
lds
fdivs
mov
mov
cltd
outsl
jecxz
adc
ret
xchg
push
adc
mov
lret
or
mov
imul
dec
dec
mov
sbb
pushl
xor
sub
repz
test
push
pop
jmp
jmp
rcl
cli
scas
push
stc
js
ljmp
xchg
xchg
push
push
xchg
movsb
lods
hlt
add
adc
test
int
sub
and
cmpsb
nop
js
inc
scas
and
sbb
mov
stc
add
inc
std
je
loopne
aas
xchg
push
in
rcll
jno
jge
pop
cmp
adc
dec
push
push
jle
ffree
inc
sub
movsb
cmpl
pop
leave
aad
sbb
sarl
in
mov
loope
stc
scas
jl
hlt
sti
into
sti
push
sub
es
js
push
xor
cmp
xchg
mov
mov
push
sub
fdivs
insb
shll
sti
cmp
sbb
jg
jo
les
sub
loope
xlat
call
loopne
outsl
aad
push
and
adc
mov
mov
jnp
jge
pop
mov
rcrb
ret
sti
sub
ret
imul
push
jb
pop
or
cmp
pusha
xor
adc
outsl
sbb
aas
dec
aas
mov
test
ret
lds
fildl
stos
test
pop
ja
jge
xchg
lock
push
icebp
loopne
arpl
jl
add
mov
fs
xchg
mull
jnp
mov
popa
std
scas
orb
mov
in
aas
jno
or
cmp
imul
imul
stos
jb
mov
mov
in
ss
std
push
aam
stos
adcb
dec
pop
rcl
push
push
lcall
mov
das
test
xor
jno
add
xor
sbb
iret
pop
sub
mov
mov
repz
sbb
xchg
cmc
outsb
lock
mov
popa
arpl
pop
xor
pop
mov
daa
movsb
lock
cmp
sbbl
idivb
std
mov
dec
xchg
lahf
into
clc
pop
ja
pop
xchg
mov
jnp
in
xchg
ds
mov
daa
shrl
sub
pop
mov
arpl
lods
dec
das
adc
call
bound
fs
xor
inc
nop
imul
repz
fs
inc
ds
iret
or
lcall
mov
mov
aaa
js
push
mov
mov
ja
test
mov
jbe
loop
into
or
outsb
cltd
and
hlt
add
ljmp
cbtw
pushf
sub
jbe
mov
nop
cmc
push
sbb
fcomps
ja
sub
adc
jge
inc
pop
adc
dec
adc
icebp
pop
pop
mov
mov
mov
adc
jmp
jg
mov
adc
imul
loopne
push
cmp
imul
xchg
in
imul
andl
out
imul
lods
lret
mov
lret
or
fimull
je
ljmp
mov
out
cs
ja
lods
push
push
push
xchg
leave
sub
cs
stos
sbb
ret
xchg
adc
jmp
mov
and
dec
je
mov
js
int3
push
cmp
mov
data16
mov
in
fistps
dec
add
xor
fldl
stos
push
stos
sbb
leave
cld
dec
aam
das
shr
rep
push
mov
push
xchg
push
popf
jp
adcb
daa
and
and
fnstsw
push
into
inc
xchg
out
push
popa
sbb
mov
fwait
sbb
iret
ror
add
jnp
or
iret
jne
pop
mov
jl
ret
lods
insb
leavew
and
outsl
mov
int
and
fnstenv
mov
mov
aas
popf
cmp
add
popa
ja
mov
cmp
jns
dec
xchg
lret
sbb
push
lahf
je
jne
jo
adc
stos
aaa
in
cmp
clc
fs
orb
lret
leave
jecxz
jno
sbbb
fistpl
sub
add
mov
mov
xchg
aaa
jl
shl
push
out
loop
inc
xorb
and
xor
adc
cmp
fcompl
cmp
cld
add
ljmp
fcompl
rcl
mov
lds
or
inc
jl
jecxz
pop
aad
mov
jle
add
lcall
cmp
out
sti
popa
testl
xor
inc
subl
push
xchg
jno
sbbl
mov
mov
lcall
cmc
inc
or
shll
sbb
mov
mov
data16
cli
cmp
sahf
push
sbb
jae
mov
mov
movlps
jl
lods
lret
mov
push
xchg
fcomps
or
dec
inc
jbe
xchg
mov
popa
nop
xor
xchg
lahf
xor
push
pusha
push
call
sub
dec
out
ljmp
jecxz
hlt
fadd
fwait
push
push
outsb
fcompl
insb
xor
sbb
dec
notb
lods
loopne
inc
call
enter
test
dec
inc
xchg
fldcw
pop
aaa
push
cli
xchg
push
xor
jo
popf
push
jne
scas
insb
fwait
jl
push
adc
mov
inc
shlb
clc
mov
in
jge
mov
jecxz
or
lcall
testb
mov
out
popa
mov
push
jl
sbb
rclb
sbb
jbe
out
push
mov
push
je
aas
mov
fiadds
fildll
andl
push
test
repnz
ficoms
jge
loopne
cld
add
imull
sub
cli
jg
sub
div
test
lcall
jmp
xor
mov
mov
and
shll
sahf
pop
mov
sarb
dec
outsl
les
aaa
pop
cmp
orl
ret
lret
daa
inc
add
dec
cmp
xchg
sub
movsl
in
out
cmp
dec
pop
nop
outsl
pop
fisubrs
ds
mov
dec
push
jecxz
popf
adc
pushl
shlb
hlt
in
cmp
cmp
jl
xor
movsb
mov
xchg
shlb
js
dec
xchg
movsb
pop
in
sub
icebp
loopne
sahf
gs
jne
inc
or
hlt
clc
jp
mov
lock
push
std
and
sub
xchg
dec
mov
ljmp
mov
data16
sbb
sbb
mov
inc
movsl
sbb
cmc
inc
mov
adc
lds
scas
and
lock
out
rolb
pop
jnp
mov
xor
and
mov
mov
fs
or
cmp
jnp
movsl
loope
mov
cld
and
and
push
in
imul
jle
notb
inc
iret
cmp
or
andb
push
ljmp
lods
addl
negl
push
or
mov
mov
or
mov
jnp
sub
fbld
adc
sbb
xchg
dec
incl
ret
xor
ss
sysenter
xchg
and
sbb
ret
cmp
lahf
xchg
andb
pop
std
xchg
cmp
in
cmp
jge
loopne,pt
repz
mov
dec
adc
fcomp
mov
pop
add
mov
mov
jecxz
jecxz
imull
dec
mov
mov
and
push
dec
inc
adc
pop
lcall
dec
movsl
repnz
retw
enter
and
cmp
les
movsb
mov
push
rol
jno
stos
stos
push
ljmp
hlt
and
add
cmp
loopne
pop
fldcw
add
xor
xchg
inc
mov
sahf
add
shlb
outsb
iret
hlt
xor
jg
inc
xor
mov
jnp
adc
or
pop
cmp
mov
mov
mov
mov
test
mov
jo
fsub
fmull
insl
dec
rclb
lods
add
fists
sub
cmpb
jnp
fcmovu
scas
and
jmp
jmp
daa
daa
loop
pop
ret
mov
ljmp
pop
pop
mov
and
out
mov
mov
nop
ficoml
and
mov
leave
stos
nop
lret
iret
mov
jmp
outsb
mov
mov
shrb
xchg
dec
cmp
add
inc
lods
imul
xchg
add
cmp
rcrb
jb
mov
push
jbe
sbb
das
and
sti
cmp
test
dec
cmp
adc
push
inc
push
in
clc
xor
pop
fnstcw
xchg
imul
jne
ljmp
lret
push
xchg
nop
jp
cwtl
inc
cmpl
jge
bound
loopne
outsl
push
andl
ljmp
mov
jge
stc
rcrl
bound
les
cs
jns
cmp
jmp
sarb
hlt
mov
lock
dec
data16
fstp
fisttps
mov
and
mov
daa
idivl
add
jge
dec
clc
leave
rclb
mov
les
popa
lret
in
mov
aas
mov
jecxz
mov
cmp
add
aam
test
fsubs
andb
loop
cmp
daa
bound
repz
popf
repz
xchg
clc
add
pop
sbb
jae
sbb
lods
and
ljmp
cmpsl
scas
les
add
xchg
or
and
stc
sti
dec
cld
into
sub
xor
mov
ds
dec
out
push
shl
push
lcall
shll
lcall
or
jnp
cmp
xlat
add
jnp
popf
adc
pop
cmp
xchg
mov
xor
rclb
add
xor
ja
aas
push
std
js
or
js
push
dec
push
stos
add
pushf
mov
adc
cmpsl
addr16
sbb
pop
inc
adc
xchg
mov
outsl
jae
movsl
decb
inc
popa
add
inc
xchg
pop
into
sub
jne
sbb
shlb
fsubs
mov
xchg
cmp
jecxz
xchg
mov
into
shrl
js
sub
mov
dec
pushf
lods
ss
in
pop
jg
and
jmp
ret
sub
icebp
lret
pop
shlb
push
adc
in
loope
xor
push
jnp
out
jl
sbb
aas
lods
inc
inc
divb
lds
nop
lret
mov
cmp
aam
loope
inc
andl
inc
xchg
pop
and
adcb
rclb
pop
cmpsl
jp
mov
add
fs
int
jne
xchg
dec
inc
imulb
jnp
dec
push
scas
sub
les
movsb
popa
add
cmp
icebp
aad
popa
push
add
mov
icebp
mov
shrl
out
movsl
add
dec
push
xchg
and
inc
repz
fdivrl
loopne
aaa
inc
cmp
stos
jno
xlat
push
mov
xlat
outsb
xchg
stos
dec
inc
stos
xlat
orb
mov
imul
xor
sbb
mov
pop
test
push
aad
and
adc
inc
stc
js
lds
jecxz
add
outsl
xor
mov
jmp
cli
icebp
jge
cli
inc
add
sahf
repz
nop
repz
sbb
out
dec
jle
lea
lock
lods
mov
out
dec
and
xor
mov
xchg
xchg
outsb
jecxz
mov
pop
sub
mov
leave
movsl
mov
dec
mov
adc
mov
cmp
leave
xor
cmp
popa
out
and
test
dec
xor
fbstp
bound
jp
push
xor
pop
xchg
mov
inc
or
mov
bound
mov
jg
xchg
sti
repnz
stos
and
in
les
sbb
dec
sub
flds
xchg
cmpsl
mov
fs
push
repnz
mov
insb
and
push
outsl
insl
outsl
or
and
insb
sub
sbb
pushf
outsb
add
stc
dec
test
xchg
dec
loop
test
mov
stc
mov
cld
enter
and
adc
inc
into
push
rcl
adc
jmp
decb
push
jns
xchg
push
mov
xchg
test
mov
ret
sahf
das
scas
mov
mov
andl
jbe
pushf
sub
mov
ja
xchg
or
sbb
and
das
out
outsl
out
cmp
je
dec
inc
push
mov
lcall
pop
sub
cwtl
add
xor
xchg
imul
jmp
jge
push
push
daa
das
inc
sub
push
imul
inc
jo
push
mov
dec
and
or
mov
popf
or
outsl
leave
jno
dec
mov
mov
xchg
push
fs
and
dec
nop
xor
ret
loop
xor
or
aas
pop
push
lea
arpl
inc
and
lcall
dec
sub
subb
cmpb
sub
and
icebp
les
jns
sti
cmp
notl
call
cmc
mov
mov
test
mov
loopne
lds
push
add
mov
cmp
mov
add
push
nop
imul
jmp
lret
subb
cmp
mov
push
imulb
mov
lods
pop
fwait
ljmp
icebp
shr
lcall
divb
sub
inc
dec
jle
icebp
sub
and
lds
sub
pop
and
cmp
stos
inc
jg
xchg
cmp
inc
mov
rcr
inc
jae
fsts
jle
or
mov
call
jle
mov
hlt
sarl
sar
test
test
mov
jbe
jno
xor
pop
sbb
in
pop
repnz
push
xchg
sub
xchg
jbe
sahf
mov
xor
cmpb
movsb
push
out
pop
outsl
movsb
mov
dec
in
push
cltd
adc
cs
mov
test
arpl
aam
mov
push
int3
gs
jmp
jecxz
mov
int3
dec
mov
enter
and
mov
jp
repz
xlat
test
stos
rclb
push
incb
daa
inc
xchg
sbb
xchg
testb
or
lods
jmp
xchg
aas
nop
imul
push
xchg
pop
popa
jae
mov
adc
jge
xor
pop
adc
in
cmpsb
arpl
je
fnstcw
sbb
hlt
aaa
popf
inc
fnstsw
outsb
rolb
xor
lea
lea
incl
cmp
in
lret
scas
mov
out
cwtl
cmp
jnp
push
clc
mov
mov
inc
adc
fdivrs
xor
enter
pop
pop
or
mov
dec
lds
pop
ficoml
mov
xor
loope
inc
xchg
out
add
xor
jbe
test
push
dec
xor
outsb
addr16
mov
or
adc
mov
xor
cmpsl
sbb
inc
inc
pop
cmp
dec
pop
ds
test
test
lea
loope
sub
cmpsb
sti
xor
sub
cltd
loop
cmp
jb
cwtl
sbb
push
pusha
test
jb
push
outsl
das
fs
stos
add
fistpll
inc
and
jbe
pusha
xchg
or
push
lret
rcrb
clc
sbb
les
mov
push
push
mov
mov
icebp
sub
iret
repz
push
inc
push
jg
repz
fcom
mov
dec
xchg
dec
push
mov
stos
xchg
push
icebp
mov
or
sahf
dec
sbb
pop
outsl
lret
ljmp
lret
pop
lods
inc
dec
sbb
mov
ja
pop
aam
xchg
cmp
inc
push
mov
mov
lcall
mov
in
shlb
sub
aad
push
mov
mov
mov
hlt
or
ret
fbld
jmp
adc
pop
jbe
jns
xchg
push
xchg
mov
das
cmp
inc
fs
xchg
clc
mov
pop
mov
rcll
testb
pop
rcll
ja
subb
arpl
dec
mov
xchg
sbb
jmp
push
jne
cli
adc
pop
pop
inc
pop
dec
xlat
fwait
imul
leave
inc
mov
xor
or
or
cmp
btrl
cmc
or
mov
add
push
test
out
jl
in
in
out
push
xor
mov
push
loop
and
out
movsb
outsb
ss
hlt
jge
jle
inc
aam
adc
in
adc
scas
mov
xchg
mov
out
mov
daa
adc
jge
inc
lea
inc
jmp
mov
pusha
push
pop
dec
xor
mov
inc
inc
pop
ljmp
dec
hlt
lods
insl
lea
icebp
insb
jnp
addr16
movsl
and
cmp
xor
ficompl
sub
jg
xchg
pop
inc
scas
test
out
jo
mov
sub
and
mov
test
xor
gs
mov
pusha
cmp
sub
jge
ret
xchg
mov
xchg
adc
cli
lret
nop
hlt
cmp
lcall
imul
fsub
cmpsb
mov
aaa
in
cmc
xchg
dec
push
repnz
rcl
lock
repz
js
aas
insl
pop
int3
sbb
bound
mov
add
ss
pop
push
pushf
add
push
fidivrl
sbb
lods
int3
ja
test
mov
fistl
dec
addr16
pop
sub
neg
sub
push
jmp
mov
cmp
jge
stos
js
lds
cmpsb
loop
xor
cltd
xor
inc
lock
cmp
dec
mov
sbb
in
sbb
test
push
lahf
pusha
pop
xor
sahf
pop
sti
sub
xchg
sbb
pop
mov
arpl
in
cmp
or
mov
fidivrl
xchg
scas
sbb
sub
hlt
pop
pop
add
inc
xor
adc
sub
test
movsb
mov
shrl
sbb
xchg
in
iret
int
push
addb
jg
ja
js
hlt
das
mov
xchg
mov
ret
or
fildl
jle
dec
or
or
rcl
or
or
cmpsl
ret
cmp
movsl
test
stos
sahf
daa
lret
push
or
xor
jb
dec
aad
push
cmpsb
or
adc
arpl
adc
mov
push
adc
out
mov
lods
stos
in
xchg
cmp
nop
cmp
inc
test
leave
sbb
test
int
dec
add
and
les
cmp
or
dec
fstl
das
shll
loopne
cld
shll
or
xlat
mov
out
dec
dec
and
in
add
adc
and
out
adc
sub
or
es
dec
add
mov
rcl
inc
jnp
push
fsts
pop
std
add
ja
sub
or
leave
mov
push
mov
out
mov
jbe
cmp
jbe
mov
add
movsl
mov
mov
sbb
sub
movq
cltd
xor
lahf
and
lcall
int
push
pop
jge
sete
mov
mov
ffree
fildl
inc
sbb
mov
iret
subl
out
mov
sbb
and
hlt
add
jb
cmp
dec
mov
movsb
loop
sbb
xchg
std
add
cmp
sbb
mov
cmp
addr16
mov
xchg
mov
js
aam
mov
shl
push
jp
mov
or
insb
rorb
xchg
inc
aad
iret
ret
push
xor
jo
sub
push
sub
pop
aad
pop
loope
xor
clc
andb
mov
out
out
push
enter
lds
lock
add
jne
dec
mov
dec
add
cwtl
fsubr
jae
mov
jb
dec
mov
mov
mov
dec
ret
inc
aam
jmp
dec
jo
mov
ljmp
cli
mov
cwtl
sbb
sub
scas
stc
ret
pop
arpl
lods
mov
sub
cmp
pop
push
cmp
mov
or
xchg
add
out
popf
out
or
scas
shlb
sub
xor
das
stos
or
mov
das
jnp
pop
lret
in
ret
sub
inc
aas
aam
pop
xor
imul
imul
out
sbb
jb
jb
sub
or
or
aam
add
dec
lcall
cmp
dec
xor
mov
jecxz
data16
mov
rolb
sahf
insl
cmp
jnp
add
push
cmc
xor
pop
or
das
clc
ror
orb
loopne
or
test
add
dec
mov
inc
sub
fldt
mov
int3
jae
and
adc
ror
push
out
and
arpl
insb
mov
inc
push
jo
add
jnp
mov
pop
pop
mov
adc
xor
cmp
cmp
push
cs
aas
mov
sub
dec
loop
lods
movsb
aas
sub
in
sub
push
and
xor
add
cltd
jecxz
pop
test
into
je
ja
push
sbb
xor
dec
sbb
jg
sbb
lock
rclb
xor
push
enter
mov
jmp
shl
sbb
insb
lea
call
pop
mov
push
adc
jno
scas
fbld
test
fdivs
cmc
lcall
pop
dec
push
adc
push
adc
or
push
sub
in
mov
dec
jp
je
ja
call
mov
mov
push
mov
loopne
lret
enter
mov
popa
iret
or
or
fisubrs
inc
pop
cmp
mov
mov
iret
push
outsl
sub
cli
mov
into
inc
push
lods
scas
adc
je
bound
xchg
sub
mov
or
cld
daa
jns
ja
mov
in
incb
dec
stc
and
mov
fldcw
js
mov
test
repnz
scas
mov
push
test
cmpsb
lret
cmp
inc
xchg
je
movsb
mov
xchg
adc
dec
aad
xchg
pop
mov
test
dec
aam
or
mov
xchg
adcl
nop
out
rolb
add
in
mov
sbb
dec
xchg
bnd
push
fistps
xor
imul
sbb
bound
xchg
mov
inc
cmp
inc
mov
lea
pop
jnp
addr16
xor
scas
int3
mov
lahf
sub
js
lret
imul
cmp
and
mov
push
xchg
and
loopne
mov
cmp
enter
addl
sub
ret
jnp
adc
jp
loop
stos
jg
jle
cmp
push
icebp
adc
iret
push
pop
jmp
repnz
xchg
pop
jp
adc
out
test
das
mov
jnp
cmpsb
pop
rcll
cmp
data16
jo
pusha
mov
adc
sub
es
xchg
xor
sub
stos
mov
adc
movsb
sub
gs
or
imul
add
jecxz
jo
cmp
mov
and
xor
loope
lds
inc
shrl
leave
add
ss
cmc
pop
ljmp
push
ds
ljmp
mov
push
loop
push
xor
insb
stos
jge
dec
xor
cmp
and
jg
pop
push
or
push
mov
xor
lahf
pop
popa
pop
inc
sbb
pop
jb
mov
pop
cmp
cltd
and
mov
dec
js
repz
add
loop
sti
loope
scas
pop
lret
mov
pop
sbb
push
jo
sub
ss
leave
lea
sbbl
sub
test
fs
lods
push
sub
outsl
mov
sar
das
add
lret
or
mov
ss
push
adc
push
jmp
mov
push
cmpsb
lret
dec
fildll
or
cs
push
xchg
mov
lcall
stos
addr16
into
mov
inc
scas
or
jle
das
out
dec
mov
icebp
es
bound
imul
loop
jnp
or
cmp
xchg
jne
mov
mov
cmpsl
lock
lods
pop
push
push
add
cld
mov
popa
mov
rclb
or
pop
in
lret
mov
jo
out
pop
add
pop
xchg
jle
lock
xlat
or
cmp
jbe
adc
fisttpl
loopne
out
clc
and
pop
or
adc
outsb
clc
and
push
or
push
mov
or
pop
inc
or
imul
sahf
cmpsb
mov
push
imul
outsb
in
xchg
and
sbb
and
push
addl
pushf
es
ljmp
shll
adc
imul
mov
mov
pop
cmpsl
cmpsl
sbb
pop
gs
mov
jmp
and
lock
dec
fsubr
sahf
clc
ffree
mov
sbb
stc
test
sbb
fisttps
or
pop
cmp
xchg
dec
add
aas
sahf
and
mov
jecxz
push
pop
add
adc
aas
xor
insb
stos
popa
insb
aaa
call
adc
cld
gs
push
xor
jne
sub
sub
or
negb
in
pushf
roll
jae
or
jbe
mov
pop
int3
ret
fistpll
push
insb
rorl
call
lods
and
dec
inc
jmp
adc
lods
mov
cs
mov
std
in
push
ds
and
xchg
ljmp
dec
cmpsb
mov
mov
and
cmpsb
push
xchg
add
out
xlat
jne
negb
add
sub
icebp
xchg
inc
jmp
lahf
test
mov
sbb
sbb
adc
lahf
jg
jae
rcr
test
cwtl
sbb
imul
insb
ja
sub
je
loopne
call
mov
push
inc
mov
outsl
lcall
mov
xchg
mov
adc
jg
xchg
inc
pop
mov
adc
aam
mov
xor
add
push
mov
cmpsb
enter
dec
pop
cld
rolb
lds
cwtl
aam
dec
std
and
insl
popa
jecxz
in
mov
into
arpl
decl
dec
add
xchg
loopne
cmp
mov
or
mov
subl
xchg
clc
xor
push
xchg
lret
inc
or
sub
pop
inc
or
sbb
mov
pop
sbb
aam
jno
cmp
mov
inc
dec
aad
jg
mov
pop
add
daa
cmpl
add
in
mov
or
addl
add
rclb
pop
sub
in
pop
lds
jnp
pop
sbb
fisubrl
cwtl
test
or
out
xchg
push
xadd
cmpl
je
fucom
cs
cltd
addl
xchg
cmpsb
fisttps
adc
cltd
mov
andb
out
mov
out
lret
enter
outsb
xlat
adc
adc
fcmovnu
dec
in
mov
jns
jo
cltd
in
dec
cltd
stc
loop
push
sub
sub
sub
insb
fdivr
cltd
xor
and
outsb
stos
jno
fstpt
xor
xor
fildll
lahf
or
int
adc
cs
push
mov
jmp
mov
fs
mov
or
jbe
inc
inc
insl
mov
pop
loope
aaa
mov
mov
add
imul
jl
cmc
test
cli
add
ljmp
mov
ret
push
mov
xor
mov
jae
and
pop
movsb
sbb
push
adc
mov
pop
fbstp
xlat
into
add
in
mov
push
icebp
arpl
mov
xor
cmp
sub
jmp
aas
aaa
mov
into
mov
lea
inc
pop
fisubl
add
fimuls
jno
and
and
into
or
mov
dec
in
jno
mov
lods
fwait
push
push
push
fiaddl
pop
std
sub
inc
pop
sub
imul
nop
insb
adcb
xorl
and
cltd
mov
arpl
mov
sub
xchg
jecxz
add
test
and
mov
repnz
xor
addr16
ljmp
movsl
fwait
mov
and
aam
insl
icebp
xchg
push
jno
movsl
mov
xor
test
sbb
addb
out
xlat
lods
mov
xor
fisttpl
test
mov
inc
jp
enter
sbb
sbb
add
sahf
jnp
and
inc
sub
pop
enter
js
adcl
shlb
mov
sub
jo
xchg
lods
pushl
sbbb
enter
mov
mov
pop
mov
jmp
add
out
xchg
cmp
xchg
push
sub
xor
xor
test
aad
ds
jle
lcall
xor
xchg
out
add
pop
xchg
sub
aas
pop
xor
testl
out
das
lcall
cmpsb
push
popf
fdivrl
scas
hlt
lret
adc
inc
xor
repnz
and
add
push
dec
or
push
ja
pop
aad
popa
xor
es
sub
pop
sbb
jno
scas
mov
cld
mov
stos
add
lods
and
sub
movsb
je
adc
sub
and
pusha
add
xor
leave
out
adc
jmp
test
mov
inc
inc
shrb
ret
jl
mov
jb
or
fdiv
cmpsl
pop
add
test
mov
movsl
inc
inc
jle
jne
sbb
in
cmp
adc
les
aad
in
sub
jne
outsb
add
sub
outsl
lret
sbb
in
or
or
inc
lahf
jmp
xor
pop
lods
scas
cwtl
repz
daa
xchg
jg
xor
in
mov
mov
mov
lods
dec
mov
es
jge
je
jle
push
in
scas
xchg
jp
imul
xor
mov
sahf
mov
push
jl
out
mov
xor
daa
push
daa
inc
cmpsl
adc
fimull
mov
inc
push
fistps
sbbb
ss
fs
hlt
jle
sub
and
aam
mov
mov
sbbb
es
or
pop
aaa
ljmp
enter
sbb
loop
mov
cmp
jnp
inc
dec
lcall
mov
sbb
jns
xchg
repnz
pop
ret
std
leave
push
inc
psubusw
pop
pop
jb
cmp
lcall
outsl
iret
xchg
call
push
push
xor
jmp
leave
cmp
pop
pop
mov
andl
sbb
lahf
cld
dec
lret
sbb
fcompl
jmp
sub
in
clc
jmp
and
xchg
adc
sub
movsl
lcall
push
xchg
mov
push
or
sbb
jmp
je
push
push
inc
aas
mov
sbb
movsl
mov
sub
paddusb
dec
fsubs
mov
faddl
push
icebp
out
xchg
add
repz
insb
jns
and
cmpb
jae
mov
mov
cmovns
testb
aaa
adc
xor
stos
or
mov
iret
imul
aaa
jmp
cli
or
fucomip
mov
mov
mov
xor
dec
mov
scas
pop
push
jns
mulb
add
inc
adc
sub
pop
mov
shll
lods
push
add
test
test
dec
arpl
pop
popa
in
addl
jo
aaa
xor
repnz
lock
inc
pop
cmpsb
or
test
pop
jmp
pop
and
mov
scas
aaa
mov
clc
inc
push
lods
jge
and
inc
push
push
mulb
es
xlat
cld
pop
xchg
push
shlb
push
and
aas
test
sbb
lahf
scas
mov
cmp
push
xchg
test
xchg
inc
xchg
mov
sbbb
ljmp
repnz
lret
push
inc
xchg
dec
loopne
sahf
std
xchg
dec
jge
popf
push
fwait
clc
lret
add
bound
pushf
or
mov
test
fs
aad
in
push
lea
mov
lds
sbb
mov
push
mov
loop
test
add
les
loop
out
fstpl
dec
popf
icebp
testl
push
lods
xchg
daa
cld
cmp
dec
cld
pusha
adc
xlat
popa
insl
inc
fsubs
adcb
fnstenv
pop
scas
movsl
jmp
cmp
cltd
movsl
data16
or
jo
loop
je
mov
mov
add
mov
shl
pop
xchg
sbb
jnp
testl
mov
cwtl
xchg
push
jge
sub
les
push
inc
jae
xchg
sbb
jns
mov
pusha
shrb
fwait
xchg
jle
addr16
out
cmp
in
ljmp
xchg
lods
in
sub
hlt
push
inc
andl
dec
mov
jecxz
push
jg
sub
sub
pop
sbb
mov
mov
xchg
pop
add
pop
inc
shrd
cvtdq2ps
hlt
jno
dec
add
push
mov
adcb
xor
jns
stc
data16
mov
pop
cmp
cmc
dec
inc
into
inc
aad
les
mov
pop
mov
insb
fs
dec
inc
into
xor
dec
fnstenv
pop
adc
xchg
je,pn
jmp
fsubrs
mov
pop
fsubrl
push
cmp
sub
or
mov
mov
xor
cmp
sub
dec
mov
imul
out
sub
xor
jge
jl
testl
xlat
fwait
movsl
adc
add
mov
stc
mov
pop
mov
cmp
dec
cwtl
adc
test
hlt
mov
mov
xor
lahf
sub
gs
inc
outsb
adc
aas
leave
nop
jo
stos
insb
out
inc
shrl
cld
mov
xor
mov
inc
push
and
dec
fcmovu
or
pop
lods
add
mov
and
test
repz
pop
popa
mov
divb
cmp
repnz
lcall
inc
push
pop
rolb
inc
in
test
xchg
in
cmpsb
push
lret
jae
fcomp
add
insb
mov
xor
pop
lods
xor
mul
mov
sbb
pop
cwtl
push
test
sbb
sub
jge
inc
sbb
incl
out
cmp
push
inc
shll
lret
jp
push
jns
push
ds
sub
mov
cmc
lods
imul
add
notl
rol
data16
sbb
arpl
clc
adc
icebp
push
hlt
aad
lea
je
sub
sub
imul
inc
loopne
loopne
mov
adc
lea
cwtl
shl
lods
in
cmp
test
lahf
loop
adc
subb
mov
lds
clc
jmp
insl
push
dec
in
pop
in
and
mov
fsubrl
lods
add
or
or
sbb
fs
out
addr16
adc
jns
pop
loope
stc
dec
cld
push
cmc
mov
pop
shl
mov
push
jb
dec
and
sbb
int3
test
and
adc
push
sbb
mov
movsb
xchg
push
cmc
sbb
or
ret
cmc
add
pop
popa
mov
fisttpl
loop
or
xchg
adc
outsl
adc
xchg
xchg
out
jne
imul
cmp
pushf
push
push
push
push
lods
movsl
nop
cmp
and
popa
nop
stos
stos
xor
testb
cwtl
sub
sub
fsub
jp
sbb
loopne
jp
inc
test
scas
mov
test
bswap
stos
xchg
dec
xlat
ja
inc
xchg
daa
or
add
mov
sub
or
sub
sbb
aas
in
cmp
repz
ljmp
push
and
lret
aas
cmp
popa
mov
lods
stos
jno
dec
mov
popa
and
loopne
iret
daa
or
and
dec
pop
and
popf
mov
xor
mov
jge
sahf
fsubrs
xor
cmc
testl
push
jno
and
in
cmp
adc
push
xchg
sub
sbb
fisubs
rcll
lods
lahf
out
add
shlb
push
jnp
fs
cltd
nop
insb
ss
stc
jae
movsl
fistl
xchg
mov
jge
push
add
ds
pop
hlt
xchg
sub
mov
xchg
jp
or
shlb
loope
mov
or
pop
ljmp
fimuls
rol
loop
cmc
std
fstl
sub
sub
test
outsl
sub
sbb
mov
cmc
popl
xchg
dec
fadd
imul
jbe
jecxz
pop
ss
stos
lret
mov
mov
xor
les
jns
loope
dec
ss
pusha
fldt
or
shrl
leave
inc
fdivr
lret
xchg
leave
sbb
or
or
fmull
and
cmp
mov
das
cmp
and
lret
push
mov
pop
ss
fisttpl
mov
js
add
cmpsl
loope
inc
cmp
or
inc
and
mov
pop
mov
push
inc
or
jbe
iret
fxch
arpl
mov
lea
daa
adc
pop
push
pop
push
pop
push
stos
push
jnp
int
test
test
insl
or
enter
dec
and
xor
or
push
pop
add
iret
mov
gs
pop
stc
mov
shlb
dec
push
dec
push
jns
out
addr16
out
sub
and
cvttps2pi
push
mov
jb
dec
and
sbbb
mov
aaa
xor
add
xchg
out
pop
cmp
mov
loopne
in
sub
or
pop
or
sbb
xchg
add
jnp
loope
shlb
cmovs
andl
or
stos
out
push
or
addl
orl
add
mov
mov
dec
icebp
leave
test
mov
test
or
stos
sahf
lea
loope
mov
lea
lds
lret
mov
jb
xchg
or
cmpsb
xor
ret
or
mov
xchg
test
push
fldl
inc
add
fldl
in
mov
or
ffree
sub
mov
setbe
sub
ret
jae
pop
ret
ljmp
jae
push
pop
aaa
add
mov
cmp
inc
push
cmc
xor
ret
gs
in
sarb
jl
push
gs
repz
fwait
ds
add
push
jmp
pop
sbb
adc
xlat
in
push
test
dec
push
inc
mov
fwait
subb
cmp
js
mov
loopne
iret
movsb
cmp
aad
pop
fld
mov
sub
jns
xor
and
aaa
popa
and
sahf
jecxz
pop
icebp
mov
or
xchg
sub
ja
or
push
dec
insb
mov
mov
jle
mov
push
cmp
add
mov
sub
rorl
mov
sbbl
negl
sbb
icebp
jl
jnp
sub
sbb
mov
or
cmp
in
or
inc
popa
xchg
or
call
jg
xchg
hlt
xor
dec
adcl
cmp
inc
outsl
sub
xchg
sub
mov
scas
mov
in
aad
mov
pop
fildl
inc
dec
mov
leave
xchg
mov
je
and
mov
pop
fwait
and
inc
pop
mov
test
xchg
mov
out
push
data16
inc
or
call
test
xor
aas
pop
movsl
es
sbb
sub
fildl
xor
mov
cmp
testb
addb
jnp
sub
mov
mov
loopne
ds
or
inc
popf
cmp
icebp
out
ja
test
mov
adc
mov
fisubrs
je
adc
adc
sub
dec
inc
gs
mov
xchg
xor
ret
gs
push
cltd
cs
lds
or
fldl
mov
xchg
cli
push
mov
xchg
fsubs
shl
ss
push
pop
fisttpll
in
loop
mov
add
enter
jle
pop
dec
pop
ret
mov
cmpl
xchg
and
inc
sbbl
dec
sbb
sbb
inc
aas
xchg
push
imul
jle
push
rclb
jl
cmp
aad
insl
mov
movsb
mulb
adc
cmc
enter
popa
adc
lcall
es
lret
nop
and
mov
or
insb
ret
inc
sbb
adc
and
icebp
xor
clc
fnstsw
call
mov
xchg
mov
mov
add
dec
vucomiss
ret
mov
adc
movsb
push
addr16
mov
idivb
sbb
and
fs
pusha
pop
popf
dec
jmp
data16
mov
jo
inc
aam
push
test
pop
pushf
int
xchg
rclb
mov
je
sbb
jmp
addr16
pop
sbb
dec
mov
out
mov
adc
daa
mov
xor
into
outsb
push
mov
push
adc
sbb
inc
mov
pushf
push
xchg
sub
and
jno
dec
jecxz
insb
pop
daa
pop
sub
push
movsl
and
push
push
lea
icebp
aam
leave
cmpsb
lods
inc
add
pop
and
pop
mov
dec
fstpt
std
js
pop
sti
shlb
test
rclb
pusha
pushf
mov
ret
scas
xchg
pop
fcomps
xchg
xchg
fisttpll
xor
jp
push
dec
cmpsl
out
loopne
lds
bound
mov
gs
xchg
mull
sub
mov
jae
test
jnp
adc
sbb
js
mull
cmpsl
inc
mov
mov
jecxz
scas
movsb
inc
dec
mov
shl
xor
and
add
sbb
mov
adc
es
pop
jge
movsl
sub
mov
mov
mov
adc
xchg
sbb
sub
push
jmp
cmc
hlt
insl
pop
pop
enter
lock
dec
mov
notl
mov
push
push
cltd
cmc
cmpb
cmp
jb
push
dec
sub
call
mov
inc
adc
in
inc
mov
aad
push
std
es
jp
xchg
test
imul
imul
and
shlb
pop
and
mov
sbb
fwait
mov
sbb
xor
cmp
mov
mov
or
in
repnz
cmp
jmp
jo
sbb
std
jae
sbb
imull
xor
sti
enter
leave
gs
pop
jb
jg
adc
or
dec
jl
or
add
adcb
cmp
rcr
sub
and
jae
in
adcb
lds
and
jp
insb
add
in
push
inc
jp
mov
push
xchg
xchg
pop
and
dec
dec
jae
in
outsl
inc
and
sub
xchg
push
sbb
push
popa
cmc
jl
or
cmp
fsubrl
aad
test
add
cmp
xchg
int3
mov
sbbb
es
lahf
repnz
pop
sub
add
pop
sbbl
sbb
mov
inc
push
cltd
fsubrs
lret
mov
adc
das
mov
inc
cltd
ss
out
std
ret
xor
mov
dec
cmp
in
or
fucomip
leave
scas
jmp
jecxz
cltd
or
divl
shlb
or
fistl
mov
outsb
rcrl
xchg
sbb
push
sbb
pop
in
dec
pop
lods
cmpsl
xlat
xchg
or
and
or
fs
jne
mov
jo
pop
popl
pop
sub
dec
mov
and
sub
out
aam
sub
test
sbb
dec
movsl
pop
mov
adcl
je
daa
cli
mov
imul
sahf
xor
dec
jmp
jecxz
mov
cmp
xchg
fimull
rcrl
mov
vcvtps2dq
iret
cmc
or
pushf
xchg
cmp
rsqrtps
mov
popf
stos
xorl
mov
adc
pop
xchg
cmp
push
orb
and
sti
cmpb
lcall
cmp
and
xlat
mov
and
leave
orl
adc
inc
xchg
push
or
cli
mov
xchg
popa
dec
scas
jno
mov
insb
jnp
in
hlt
cmp
adc
push
sbb
push
cld
cbtw
iret
xchg
add
dec
out
fxch
xchg
sahf
mov
jp
pop
or
push
sub
lret
jne
movsl
pop
in
les
push
push
jl
prefetch
negb
sbb
std
cmc
movl
enter
mov
cli
insl
sub
pop
add
test
mov
sbb
fcomi
adc
daa
push
cmp
sub
lea
cmpsl
outsl
xlat
sbb
dec
jbe
push
and
jno
sub
cmpb
gs
aad
std
cmpsl
cmp
add
sbbl
adc
cltd
jb
add
cs
psllq
orb
jbe
shll
out
adc
dec
jns
insl
lret
dec
inc
xchg
movsb
pusha
loop
pop
stc
mov
test
xchg
stc
xor
mov
push
movsl
ror
subb
xor
lods
test
es
aam
out
xlat
fists
movsb
mov
inc
into
mov
shl
xchg
lds
sub
sub
gs
inc
xorb
ss
xchg
or
pushf
dec
mov
addr16
imul
cs
xor
push
ficoml
push
pop
add
add
inc
ret
push
xchg
dec
out
or
in
test
std
lahf
pop
loopne
pop
fcoml
gs
jmp
xchg
loope
cmpsb
enter
mov
or
adc
arpl
out
jmp
adc
hlt
lcall
lock
xchg
iret
daa
cmp
sbb
cmc
dec
xlat
or
xor
pop
mov
mov
mov
mov
dec
iret
push
cmp
jmp
mov
fcoms
fbstp
pop
mov
cmpsl
pop
imul
mov
xchg
hlt
sti
xor
pop
mov
loopne
mov
sub
jo
push
sbb
sahf
cltd
ret
push
xlat
into
mov
xor
fidivrs
push
cmp
pop
mov
or
stc
mov
repnz
sub
mov
ret
push
mov
test
dec
xchg
imul
mov
xor
mov
cmp
inc
imul
mov
push
or
adc
daa
dec
ljmp
js
testl
loopne
pop
aaa
test
mov
xor
cmpsb
std
jmp
sub
jb
loope
xchg
mov
insb
int
cmp
setb
mov
and
ljmp
mov
or
and
xchg
sub
xor
mov
mov
rorb
inc
stos
bound
aaa
dec
out
jbe
clc
lea
xor
xor
call
push
aad
fadds
pop
xchg
mov
fisubrs
aaa
fstps
mov
andps
pop
rorb
shl
pop
mov
sub
jmp
mov
xchg
mov
mov
ret
cmpsl
notl
mov
lods
fldl2t
xchg
jne
in
in
fisttpl
mov
lods
arpl
cld
inc
sub
pop
pop
in
add
pusha
fucomp
xlat
inc
and
cmpsb
fisubrs
xlat
sbb
outsl
std
pop
addr16
dec
lret
pop
test
ret
sahf
push
and
lock
mov
sbb
rcll
and
int
mov
mov
in
sbb
hlt
jecxz
rclb
jo
repz
push
ljmp
mov
push
fld
gs
push
aam
or
add
out
rclb
arpl
pop
sub
and
test
in
icebp
subb
mov
xor
mov
or
test
lea
mov
sub
bound
notb
out
xchg
scas
add
insl
cwtl
subl
rcrb
xchg
and
shll
add
pop
ja
mov
pop
push
sahf
adc
ficompl
cmp
mov
js
fwait
shrl
xor
js
jmp
clc
xlat
sub
popa
roll
cmp
aas
add
xor
popa
movsb
mov
orl
shrb
push
mov
adc
sbb
mov
mov
mov
push
jns
mov
test
fcomip
jp
xchg
aam
mov
sbb
sbb
xlat
xchg
push
cmpsl
insl
popf
sbbb
inc
sub
dec
push
shlb
xchg
and
mov
adc
adc
mov
dec
subl
mov
cmpsb
mov
mov
insb
sbb
xchg
pop
and
sbb
and
add
test
cmpsb
cmp
dec
jge
adc
jbe
fidivs
negb
inc
sarl
popf
inc
mov
loopne
dec
fstp
in
cli
out
arpl
or
or
lret
adc
mov
or
mov
and
inc
rorl
test
xor
into
hlt
or
jno
out
sub
insb
cld
gs
push
fbld
popl
inc
inc
adc
das
lods
adcl
or
mov
or
popa
sbb
les
and
mov
clc
std
xor
xlat
sbb
jge
or
add
add
push
roll
dec
idiv
mov
adc
push
in
iret
outsl
xor
push
stc
lahf
xor
xchg
data16
sub
pusha
jnp
cs
dec
fimuls
ja
out
push
repz
mov
mulb
lahf
push
jp
jge
and
dec
shrb
cld
xor
es
dec
je
stos
jle
addr16
adc
inc
mov
or
ja
cmpsl
xor
sbb
test
pop
push
dec
imul
xchg
stos
sub
sbb
shll
xor
jg
cmp
scas
jmp
lret
jno
popa
sbb
int3
pushl
jae
lcall
outsl
add
dec
jnp
or
xor
push
add
lea
adc
xor
jae
lret
adc
lcall
ret
loope
xchg
add
xchg
clc
xor
test
or
jp
xchg
push
dec
pop
mov
mov
dec
mov
mov
shlb
das
mov
mov
sub
sub
and
sub
scas
inc
mov
dec
das
dec
ss
mov
out
mov
adc
insl
js
add
dec
int
cwtl
lds
cmpsb
mov
xchg
pop
es
shlb
xor
mov
mov
scas
shl
lods
rolw
pop
pop
insl
fisubl
sbb
pop
sar
dec
bnd
mov
sub
icebp
sbb
inc
pusha
aas
sbb
push
push
dec
sahf
lret
shr
dec
mov
add
mov
popa
daa
fnstenv
pushf
imul
mov
jg
popf
cvtps2pd
test
clc
mov
adc
jne
fdivr
sarl
cmpsl
fwait
mov
addr16
js
xor
xchg
or
push
enter
ss
popa
mov
dec
mov
inc
pop
pop
pop
xchg
push
dec
lods
xor
sub
xchg
popf
inc
stos
mov
mov
shrl
rorl
scas
and
shr
push
xor
sub
dec
xchg
xor
cltd
or
xchg
mov
movsl
jg
push
pusha
push
movsl
push
pop
enter
or
mov
mov
cs
xlat
mov
pop
jecxz
cmp
jb
mov
fidivrl
add
mov
pop
add
popf
add
movsl
cmpsb
pop
imulb
jns
lret
sub
jp
dec
mov
in
repz
cmpsb
dec
test
or
push
jle
sub
test
addr16
mov
xchg
jne
xor
jns
push
pusha
lods
xchg
dec
mov
repz
push
jle
lds
pop
shrb
pop
bound
stos
scas
ret
mov
call
cmp
int
ret
sbb
adc
mov
pusha
sub
push
sahf
mov
sbb
cmpsl
cmp
adc
xchg
jnp
cmp
and
int
fs
push
jb
mov
mov
ljmp
cs
dec
push
push
outsl
sub
rclb
int
adc
mov
rcl
es
clc
dec
push
mov
mov
mov
stos
mov
add
ljmp
mov
bound
jb
mov
dec
add
dec
sub
loopne
push
in
and
sbb
mov
add
push
push
stos
popl
xchg
mov
fs
mov
cmp
into
popa
scas
fptan
mov
aas
mov
or
mov
fwait
mov
adc
inc
sub
mov
in
mov
arpl
fwait
cmpsb
mov
sarl
sti
shr
push
inc
mov
xlat
sti
mov
dec
test
jno
dec
xor
pop
add
and
xor
out
xor
and
test
dec
jecxz
sti
pop
xchg
arpl
sbbl
or
push
mov
icebp
jb
xchg
pusha
pop
adc
int
pop
loop
sub
out
mov
mov
mov
jl
jmp
shrl
insb
add
pop
pop
pop
mov
or
les
adc
test
pop
push
lcall
fcompl
sbb
in
cmp
push
push
int
fsts
shlb
fdivs
icebp
sbb
inc
push
test
sub
loopne
push
fists
dec
xbegin
dec
inc
cltd
push
and
int
or
ret
sub
push
test
dec
sbbb
mov
pop
mov
into
jnp
xchg
jne
dec
mov
push
icebp
mov
sbb
mov
and
xchg
add
rorl
arpl
int3
lods
xor
cwtl
mov
ret
fwait
or
js
xchg
or
mov
mov
adc
push
cmp
std
mov
sub
pop
aaa
dec
lods
lods
xor
push
ja
iret
add
sub
pop
aas
inc
loop
loopne
incl
or
movsl
mov
popf
or
push
or
mov
nop
ficompl
shll
popa
and
mov
icebp
xor
mov
jo
shl
xor
sbb
mov
pop
fidivrl
push
or
aam
outsl
xchg
jmp
dec
jmp
aam
outsl
sarl
sbb
sbbb
cmpsb
cmp
subb
outsl
mov
iret
icebp
mov
or
mov
push
dec
jnp
mov
cwtl
std
dec
loope
arpl
mov
ljmp
fistpl
mov
xchg
push
pop
xor
movsb
jb
push
cmpsl
inc
sbb
jmp
push
rorb
xchg
shrb
outsl
push
mov
ds
insl
pusha
fildll
mov
outsl
rclb
lahf
xor
push
xchg
push
dec
imul
lods
push
cmp
or
mov
jb
inc
cmp
pop
bound
stos
je
pop
lock
imul
jno
cwtl
pusha
lods
ja
jns
push
ret
sub
outsl
fwait
enter
push
or
int3
aaa
adc
lcall
xchg
das
mov
inc
cmp
or
mov
jl
jp
call
add
or
pushfw
and
stos
test
mov
fistpll
dec
out
nop
mov
aas
sbb
popf
push
push
das
cld
xchg
cwtl
out
pop
or
filds
sbb
jge
adc
ret
or
cli
inc
jno
in
push
loop
jmp
outsb
repz
jl
mov
arpl
xchg
rolb
inc
popf
xchg
loope
subb
mul
and
mov
enter
sub
mov
test
lea
push
jnp
fwait
call
stos
scas
adc
dec
jb
in
mov
popf
pop
dec
xchg
lret
sbb
xor
jge
test
in
out
xchg
mov
stos
mov
ljmp
shll
adc
out
out
hlt
mov
iret
add
daa
and
push
scas
stos
mov
push
mov
and
mov
jge
and
mov
cld
xor
lock
loope
in
jl
icebp
addr16
fisubrl
loopne
mov
fwait
cmpsl
xchg
nop
addl
ss
mov
or
aas
rcr
inc
inc
mov
movsl
pop
sarb
daa
and
inc
push
or
mov
pop
or
in
and
sub
pop
dec
js
setno
pop
iret
xchg
and
fldl
jns
into
push
mov
adc
adc
inc
pop
std
test
cltd
and
jb
xchg
hlt
sbb
imul
sub
shll
mov
jne
mov
cmc
pop
adc
xchg
sar
mov
mov
int
sub
ljmp
and
sti
or
scas
push
lret
les
cmpsb
imul
xchg
and
jne
loop
adc
jmp
sbb
std
loope
mov
cmp
sahf
aam
add
inc
shll
xor
rcrl
movsb
pop
push
pop
insl
test
arpl
sbb
movsl
jbe
xchg
fnstcw
jl
xor
adcb
sub
lds
mov
adc
cmp
add
shl
insl
lods
aaa
dec
movb
lret
push
mov
mov
or
mov
cli
out
sbb
mov
insb
loop
in
iret
sbb
sbb
adc
lods
and
sub
fisttpll
sub
jns,pt
ss
jns
out
test
sti
sbb
xor
rcrl
push
xchg
test
hlt
and
ror
sbb
xchg
fs
int
cmp
int
imul
lods
loop
mov
mov
dec
sbbl
xor
pop
aas
xor
mov
adc
xlat
pop
stos
or
push
cwtl
cmp
adc
sahf
arpl
add
fcmove
inc
sahf
jl
add
shl
loop
push
sub
aam
pop
lock
pop
fistl
int3
in
fstps
fwait
pop
cltd
imul
push
xchg
jle
sub
adc
jl
jmp
pop
fiaddl
and
mov
stc
mov
xor
pop
mov
popa
mov
xchg
fdiv
scas
xlat
mov
xor
sahf
arpl
and
lret
xlat
out
cltd
inc
sar
stos
in
adc
dec
addl
lods
loopne
inc
dec
dec
push
adc
jne
lods
loop
stos
out
repnz
or
aas
push
mov
xlat
push
dec
test
bound
cmp
pushf
shlb
xor
std
cmp
xchg
cs
inc
cmpsl
aas
jno
shlb
mov
test
xchg
mov
pop
pop
sub
add
push
sbb
push
cmpsb
push
inc
arpl
xchg
aad
test
rolb
mov
cld
sti
cmc
adc
les
jle
xor
loopne
iret
scas
adc
dec
jno
es
mov
cmp
and
mov
sbb
mov
cmpsl
int
push
xor
inc
adc
in
subb
xor
movb
sti
dec
int
cmpsl
xor
xor
data16
xlat
popf
jle
adc
ret
clc
sub
dec
popf
or
movsl
addr16
ja
push
cmp
sub
sbb
sub
cmp
dec
xor
cmpsb
insl
mov
lret
cmp
repnz
lds
outsb
jle
jo
xor
cmp
mov
cmpl
push
pop
dec
xchg
icebp
add
fidivl
insl
or
nop
jge
and
add
add
jg
adc
xchg
movsl
jle
xchg
enter
mov
mov
mov
xor
and
fsubrl
mov
addb
mov
inc
loop
jecxz
pop
cmpsl
hlt
mov
pop
adc
mov
mov
ljmp
mov
jp
mov
scas
and
lods
es
call
jle
fstpl
out
add
adc
lret
mov
mov
xchg
cltd
jbe
enter
pop
mov
cmp
cs
test
roll
repz
pop
sbb
adc
ljmp
test
mov
dec
repz
ljmp
int3
ljmp
mov
pop
mov
iret
dec
cmc
in
iret
push
jbe
jno
ror
dec
pop
pop
push
sar
das
pop
repz
xchg
ss
aaa
mov
or
mov
ss
test
dec
push
add
leave
idivl
sub
repnz
pop
in
pusha
add
sbb
xchg
jbe
loope
pop
cmp
test
pop
test
and
inc
stc
cs
add
fsubrl
adc
pop
aam
pop
xor
xchg
outsb
leave
dec
push
or
adc
push
mov
xor
jmp
dec
sub
mov
outsb
popf
out
mov
sub
mov
out
dec
xlat
xchg
sbb
stos
test
lds
pop
and
loop
push
jg
xchg
cmp
inc
inc
mov
cwtl
or
dec
movsl
dec
ljmp
and
daa
adc
push
add
loop
pop
jg
jmp
add
sub
fimuls
mov
iret
adc
sbb
xor
insl
jno
imul
sbb
push
xor
xlat
xor
add
xchg
mov
cmp
int3
mov
ret
xchg
push
out
xlat
push
imul
lcall
ds
inc
lret
out
ljmp
stos
cmp
mov
out
jo
xor
movsb
or
xlat
repnz
sbb
adc
mov
je
movl
and
mov
cmc
ret
rclb
inc
fstps
punpckhwd
ret
fstl
fstpl
out
adc
jb
lahf
int3
inc
test
mov
daa
fcompl
xor
or
adc
aad
pop
cld
mov
mov
dec
and
lock
push
xlat
arpl
xchg
xor
mov
outsl
rorl
daa
iret
add
inc
xchg
lea
stos
jge
jl
mov
or
leave
loopne
addr16
pop
fcoms
and
clc
mov
push
popa
mov
outsl
sbb
test
mov
fmuls
movhps
pop
jo
pop
push
sbb
cltd
mov
scas
sub
or
pop
rolb
pop
inc
adc
imul
pop
iret
cltd
sti
call
mov
sbb
add
mov
shl
adc
sbb
adc
js
pop
cmp
adc
iret
ljmp
insl
ret
jns
bound
xchg
or
adc
adc
push
in
push
out
push
stos
fldt
add
adc
into
jg
mov
xchg
pusha
fldcw
bound
push
mov
mov
sbbl
imul
call
call
popf
ret
cmpsb
xor
add
rorl
loope
sahf
jg
cs
add
push
xchg
mov
push
mov
bound
xchg
aas
je
pusha
or
movsb
cs
out
fldt
mov
and
fdivrl
mov
decl
inc
es
push
movsl
adc
xlat
xchg
in
mov
add
inc
mov
and
cmp
lods
adc
mov
sbb
or
stos
pop
pop
pusha
in
out
mov
nop
iret
jmp
pop
int
xchg
jne
xchg
adc
mov
ljmp
dec
or
popf
icebp
xchg
cmp
cmp
in
nop
lret
lods
adc
sti
jle
das
test
pop
into
lock
and
push
mov
inc
push
fdivrl
mov
sub
dec
cmp
ljmp
xor
dec
fwait
pop
ja
cmpsl
adc
ljmp
pop
sub
shlb
jg
loop
adc
iret
not
push
fwait
addb
mov
lret
pop
sub
dec
lods
or
xchg
popf
or
sbb
hlt
and
and
xchg
je
pop
popa
add
sub
movsl
jne
fucom
loope
and
sbb
in
mov
dec
mov
sub
pop
xor
inc
xor
out
jbe
pop
cmp
lods
mov
out
adc
mov
fdivrs
sub
dec
fs
jl
in
and
push
adc
sahf
fwait
fs
lret
and
ljmp
loop
lds
mov
jmp
jne
lock
jp
sbb
pop
shlb
sbb
push
pop
cmp
xchg
in
pop
shll
ss
outsl
mov
gs
movsb
rcrl
dec
in
push
sub
mov
in
push
outsb
and
jnp
fstpl
pop
clc
mov
mov
xor
pop
lds
or
out
rorb
les
jg
add
sbb
xchg
aaa
es
out
or
aas
jmp
lea
jae
sbb
stc
and
out
pop
xor
xchg
push
lea
push
pop
xor
mov
push
cmp
pop
inc
dec
leave
sub
cmpsl
fidivs
repnz
ljmp
testl
ret
xor
out
pop
push
lret
push
loop
arpl
or
popa
xor
movsl
lahf
mov
pop
jo
nop
aam
cmpsb
sub
or
rcll
addb
stos
push
les
aam
xchg
out
or
ret
and
xorb
jecxz
xor
bound
cmp
push
inc
pop
call
orl
shll
lds
jbe
out
aas
inc
vpaddq
cld
out
int3
jb
js
xchg
lahf
leave
out
aaa
pop
push
add
insb
or
es
lahf
movsl
stc
inc
jnp
push
and
mov
insl
cmp
push
mov
xchg
xor
in
test
sbb
mov
hlt
dec
aas
adc
fcomip
push
inc
xor
add
lahf
lahf
sub
stos
clc
cwtl
movsb
mov
sti
jbe
icebp
mov
les
jae
repnz
hlt
cli
inc
fidivrl
mov
mov
inc
mov
jmp
mov
sbb
dec
test
aaa
fists
inc
mov
push
and
je
mov
mov
jae
pop
lods
mov
dec
push
pop
push
sbb
inc
jg
xor
dec
stos
vmovdqa
mov
mov
jge
test
sub
or
push
call
add
es
arpl
int
xor
addb
subl
jmp
or
xor
sbbl
lcall
cltd
mov
es
lcall
and
add
nop
add
and
outsb
lods
adc
mov
aad
les
iret
push
xchg
add
cmp
mov
add
scas
sbb
xchg
fistl
lret
ljmp
cmp
mov
int
pop
mov
out
sbb
es
and
movsb
or
fs
in
addr16
stos
add
scas
inc
stos
lahf
clc
outsb
fdivs
enter
enter
jp
mov
mov
mov
ret
xor
lods
dec
push
ljmp
mov
rclb
mov
pop
loope
stos
hlt
aas
xchg
lcall
mov
aad
sbb
jno
xor
ja
push
in
idivb
dec
mov
add
sti
jp
adc
inc
xorl
rol
cmp
xor
xchg
movsl
arpl
sti
cltd
pop
push
imul
jp
dec
mov
push
dec
subl
sarb
adc
fsubl
mov
pop
pushf
or
sahf
add
mov
movsl
dec
dec
xchg
adc
ret
sbb
jge
cltd
jp
gs
sbb
dec
sbb
fisubrl
shlb
push
mov
std
mov
pop
cmpsb
das
jg
hlt
push
add
les
adc
pop
fisubrs
xor
in
push
xor
and
and
insb
add
nop
jmp
fiadds
push
push
dec
repz
fsts
add
cmpsb
adc
mov
nop
push
loope
jns
insl
fs
movsl
xor
xchg
data16
sbb
mov
clc
xor
bound
jnp
push
inc
sbb
sub
or
push
pop
test
cltd
jle
sub
add
cmpb
mov
cmc
shrb
das
jno
cltd
ss
push
imul
je
insb
cs
mov
or
test
cltd
mov
mov
and
jmp
and
xchg
repnz
mov
in
xor
das
jb
xchg
shl
jl
inc
testb
sub
out
cwtl
fcmovnbe
mov
jbe
aad
stos
fimull
cli
inc
fsts
arpl
out
pushf
cmpsb
mov
mov
push
ljmp
push
mov
xor
sub
jl
push
in
jo
je
sbb
mov
mov
fcoms
into
sub
xor
or
mov
xor
dec
mov
cmp
mov
jmp
xchg
data16
jmp
adc
mov
and
es
mov
cmpsl
loope
dec
pop
xchg
outsl
or
mov
popa
cmp
jmp
aas
adc
scas
in
jmp
inc
sarl
fists
call
sbb
mov
mov
jg
fisttps
or
fildl
fimuls
push
dec
mov
mov
cmp
inc
and
push
rep
lods
pusha
cmp
lods
cld
fsubl
jge
jae
sub
cltd
mov
mov
inc
lock
add
xorb
popa
pushf
jb
aas
out
in
xorl
out
add
xchg
test
or
cmpsl
mov
mov
push
cmpsl
xor
aad
mov
sahf
fldt
mov
dec
icebp
out
mov
push
mov
mov
dec
xchg
std
mov
sbb
cmp
mov
add
in
jo
pusha
inc
cltd
sbb
jae
xchg
rcll
loop
out
pop
and
jge
adc
mov
inc
adc
jns
inc
push
bound
mov
xor
mov
mov
repnz
inc
sbb
icebp
cmp
enter
xor
lods
icebp
mov
dec
inc
out
pop
sbb
mov
iret
cld
stc
xorl
push
imul
pop
in
sbb
mov
xchg
mov
popf
mov
xchg
nop
ljmp
gs
rorb
fdivrs
dec
into
and
mov
push
sbb
push
loope
out
mov
mov
mov
dec
stc
shrb
je
cli
jp
xor
pop
sub
xchg
into
sub
xchg
mov
daa
mov
and
aad
xor
out
mov
aad
subb
xor
stos
lods
push
pop
pop
mov
xchg
adc
pop
loop
adc
pop
fs
mov
ss
in
subl
sbb
xor
and
adc
stc
add
mov
dec
inc
adc
xor
jmp
xchg
dec
add
adc
dec
push
mov
dec
hlt
mov
sub
clc
icebp
call
mov
sub
mov
js
shl
pop
xchg
lahf
push
popf
mov
cwtl
mov
jp
adc
imul
push
push
inc
mov
jno
lea
and
movsb
xor
fwait
sbb
cltd
cs
adc
jns
sbb
das
dec
notb
test
sub
rcll
sub
insb
lret
fmul
jnp
pop
and
sub
aaa
or
shrl
aas
ss
mov
xchg
stos
popf
cltd
push
cmp
sub
mov
sbb
test
mov
ret
ret
pop
mov
data16
sub
jae
arpl
clc
adc
ror
stc
cwtl
pop
rorb
ss
subl
lret
out
fstpl
je
out
and
inc
or
xchg
lcall
insl
ljmp
test
mov
shlb
loop
xchg
orl
fldt
ficompl
sbb
repz
lcall
mov
imul
jo
cmp
in
xor
rolb
jno
mov
loope
push
xor
adc
mov
mov
xchg
mov
dec
mov
ret
pop
dec
or
pop
loope
push
inc
pop
jno
test
push
sbb
in
sbb
outsl
cli
inc
movsb
dec
add
inc
push
jns
lods
xchg
mov
cltd
ds
insl
and
lock
adc
in
lea
adcb
je
mov
scas
popa
and
sbb
call
sahf
arpl
loop
mov
mov
or
jmp
jnp
loope
lret
cli
cli
pop
jae
pusha
imul
xor
adc
fdivrs
sub
mov
mov
mov
sets
das
sub
mov
vpcmpgtb
sub
pop
fimuls
adc
jb
push
sub
int3
add
cwtl
pop
pop
fnstcw
cmpsl
jg
flds
mov
imul
push
bound
sarb
in
repnz
push
sbb
mov
imul
push
xchg
aaa
dec
outsl
out
testb
cltd
aas
inc
stos
mov
lds
sub
insb
or
jns
pusha
lods
sbb
outsb
or
neg
mov
pop
xchg
jns
ret
dec
gs
outsb
repz
data16
xchg
ljmp
data16
push
jb
jge
fdivl
xor
xor
inc
cli
push
insl
jo
test
mov
jmp
mov
mov
loope
adc
pop
and
sub
cvtdq2ps
mov
xchg
ds
jg
test
fs
int
fcom
dec
lds
cwtl
and
adc
xchg
scas
test
add
jbe
sbb
dec
popa
add
lds
lods
push
xchg
iret
adc
fdecstp
push
int
sub
into
and
lret
xor
jb
aas
inc
stos
xor
xchg
xor
icebp
sub
pop
cli
mov
data16
jae
or
dec
pop
dec
add
lahf
add
push
inc
push
add
insl
jecxz
sub
nop
stos
mov
jno
push
add
cmpb
cli
jns
jle
popa
in
lock
add
mov
mov
cld
fnsave
lock
xchg
js
push
andb
das
adc
mov
jo
out
pop
adc
lods
pop
mov
adc
in
mov
and
int3
xchg
das
test
add
frstor
ret
fcomps
xchg
push
lcall
jbe
push
push
cmpsb
push
sbb
pop
sub
pop
stos
cmp
mov
jbe
cltd
jb
inc
xchg
jns
add
clc
cwtl
mov
iret
push
and
mov
stos
mov
jae
cmp
sti
in
bound
jns
in
popa
les
out
xchg
cli
flds
and
shll
loope
aam
sub
flds
jbe
or
in
xchg
xchg
add
sbb
arpl
jle
dec
cwtl
in
rorl
js
leave
inc
or
ja,pt
cmpsl
fistl
mov
call
xchg
add
popa
mov
add
sbbb
lods
jp
inc
sub
mov
mov
fistl
pop
sahf
xor
sub
clc
sbb
jne
fisubs
or
fdivs
pop
push
sub
xchg
outsb
repz
sbb
cmp
cltd
or
inc
cld
cmc
in
or
dec
rolb
inc
and
pop
sub
fisttpll
adc
data16
lods
outsb
add
testb
lock
xor
int3
mov
pop
mov
dec
popa
loopne
int
xchg
mov
imul
dec
stc
mov
lods
jne
push
rcr
xchg
idiv
lods
in
pop
dec
test
sub
cmp
loop
mov
and
dec
push
jns
outsb
insb
les
loopne
dec
lock
pop
out
outsl
outsb
add
sbbb
jae
mov
imul
fcoml
dec
xor
lds
inc
mov
sbb
xchg
jmp
pop
push
xchg
rcrl
fwait
mov
mov
sub
es
pop
fdivs
inc
mov
popa
mov
shll
imul
pushf
inc
loope
sbbl
dec
push
int
lcall
pop
xor
shrb
sbb
mov
hlt
xor
mov
jo
or
push
push
test
fildl
gs
loopne
cs
push
cmp
jo
roll
cmp
enter
js
push
mov
and
cmc
sbb
in
stos
leave
and
mov
pop
aaa
test
adc
mov
and
in
cld
sti
sbb
xor
add
daa
jl
test
xchg
sti
flds
out
push
cmp
out
js
add
decb
subb
xor
arpl
dec
sbb
adc
lock
test
call
jl
xchg
mov
dec
xchg
add
clc
stos
xlat
lret
xchg
cmp
sub
cmp
jp
cltd
sbb
cmpsl
mov
sub
sti
fstl
jbe
addr16
mov
mov
pushf
shll
mov
repnz
adc
lods
jge
adc
and
enter
xlat
add
movsl
fwait
mov
jae
and
movl
lret
push
add
and
testb
inc
ret
in
or
cmc
jns
lea
push
sbb
mov
cmpsl
cmpsl
imul
aam
mov
idiv
mov
data16
int3
ret
pop
in
jecxz
pop
push
pop
loopne
xor
jo
pop
jmp
dec
jbe
xor
pop
imul
dec
cmp
adc
cmc
mov
jnp
jp
mov
test
xorb
mov
lahf
sub
rcrb
lods
jae
cld
sub
push
push
mov
pop
int3
addr16
js
jle
enter
ss
daa
pop
nop
push
push
mov
mov
insl
das
ret
and
push
por
xchg
cmp
pop
push
or
aam
lods
lods
mov
lods
inc
and
inc
dec
xlat
lret
loopne
mov
and
sub
jnp
out
pop
testl
sarl
mov
push
push
addr16
insl
jae
jb
out
dec
mov
mov
dec
sbb
test
or
mov
fldt
sbb
push
sbb
sbb
lea
leave
sarl
inc
sub
sarb
jne
adcb
sbb
inc
shll
mov
push
add
or
cmp
subl
movsl
les
xor
push
shrb
cmpsl
mov
lods
add
pop
pop
stc
cmpsl
test
or
js
xchg
out
jmp
les
loope
or
mov
repnz
xor
xchg
inc
adc
rcr
sbb
or
xchg
lea
jg
sbb
jbe
es
shll
and
test
sub
and
enter
stos
xchg
or
or
xor
bound
inc
faddl
loopne
jl
inc
lret
cmp
mov
sbb
es
xor
rcl
inc
fiadds
mov
sbb
lret
inc
shrb
cmp
fs
int3
mov
into
arpl
sbb
mov
movsb
sbb
inc
dec
hlt
or
or
sbb
inc
dec
sahf
es
push
sub
jmp
stos
mov
lods
mov
mov
insb
pop
mov
icebp
mov
lcall
ja
xchg
ret
fwait
stc
cmc
cmpsl
xor
and
add
imul
add
lds
inc
add
dec
in
adcl
jnp
mov
fstpl
pop
adc
jecxz
shlb
lahf
or
test
add
popa
jg
out
add
jns
push
aad
std
ljmp
jl
pop
leave
xor
les
shlb
hlt
ficomps
add
or
jmp
push
and
out
addr16
ljmp
out
ret
sub
and
jl
mov
lea
and
or
int
shl
mov
hlt
in
adc
incb
jne
ficoml
sub
mov
enter
jle
mov
inc
lods
pushf
mov
pop
jnp
cld
add
push
pop
lea
repz
sbbl
mov
sbb
in
ss
out
icebp
push
mov
jg
and
popa
out
cwtl
ds
lahf
shlb
add
push
push
cltd
xor
push
add
add
adc
pop
pop
cmp
imul
mov
jp
enter
sahf
fistpl
mov
iret
sbb
xchg
push
imul
pop
in
add
arpl
mov
ret
mov
add
push
subb
xor
dec
ret
inc
add
xchg
pop
dec
jae
es
jp
adc
test
repz
int3
movsl
dec
sub
je
inc
inc
mov
iret
mov
rcrl
call
data16
pop
test
fwait
push
cmp
cltd
pop
mov
icebp
push
jns
jp
rcl
sub
cmpsl
xor
sbb
lods
mov
and
jne
cmp
outsb
sbb
xor
lea
pop
inc
test
sarl
add
and
outsb
mov
fwait
jne
popf
or
push
xor
daa
test
dec
mov
loope
add
mov
fs
mov
mov
faddp
adc
sbb
mov
out
push
sbb
pop
mov
gs
ds
adc
mov
add
mov
testb
fistpl
push
in
gs
sbb
dec
seta
jmp
cmpsb
mov
andb
or
iret
pop
fsubrs
xlat
mov
jo
out
jp
mov
cmp
lds
push
and
adc
add
mov
xchg
mov
pop
add
dec
mov
test
hlt
repnz
inc
dec
imul
orb
sub
setno
repnz
cmp
inc
mov
sbb
pop
fisttpl
push
sub
xchg
jnp
push
xchg
push
push
xchg
mov
gs
xor
shr
mov
aaa
xor
pop
push
insb
nop
push
inc
stc
outsb
mov
adc
daa
shll
dec
mov
gs
ds
xchg
dec
xor
xchg
sub
ja
test
mov
xor
sbb
jno
pop
das
bound
pop
jp
fists
les
das
in
dec
sbb
out
mov
xchg
testb
loopne
pop
xlat
or
and
mov
sub
mov
rcrb
cmp
push
repnz
pop
mov
fiaddl
push
es
dec
arpl
bound
jb
daa
movsb
movsb
enter
add
lahf
mov
adc
cmp
push
aas
stos
sub
aad
ds
subb
fcoml
dec
xchg
dec
inc
xchg
or
pop
sbb
pop
cs
shrl
jge
push
xchg
int
cwtl
xchg
and
daa
idivl
loope
inc
sbb
mov
gs
outsl
dec
dec
add
mov
test
call
aas
shll
out
pop
mov
add
movsl
ret
loop
push
or
outsl
out
pop
xchg
aas
mov
jmp
out
and
jp
inc
and
pop
adc
adc
test
sbb
jnp
std
xchg
icebp
nop
in
testb
das
xor
dec
push
mov
mov
xchg
daa
out
mov
jmp
inc
ja
lret
jb
mov
push
jb
loopne
xchg
into
stos
add
sahf
out
out
cmc
rorb
repz
mov
jae
addr16
sbb
loopne
pop
jmp
pop
ret
in
loop
aaa
out
pop
cwtl
mov
in
mov
dec
out
inc
lret
lcall
sahf
mov
movsl
fcmovnb
mov
sbb
dec
and
out
popf
and
cmp
xor
cmp
xorb
rcr
pop
push
cli
cld
xor
mov
inc
popf
xchg
dec
insb
ficompl
cmp
mov
inc
hlt
xor
xchg
mov
inc
repnz
xor
loopne
push
add
or
jbe
addr16
cmc
ja
cmp
jp
cmpsb
push
jno
int3
push
xchg
repz
xor
in
dec
ret
mov
adc
cs
xchg
out
outsl
mov
nop
pushf
lds
sbb
in
inc
cmpsl
popa
cwtl
inc
call
dec
jb
addr16
js
fwait
mov
mov
sub
jae
jno
je
pop
notb
hlt
loop
add
es
jle
sbb
aam
push
pop
pop
jg
cmp
enter
or
push
sub
lahf
cmp
enter
mov
and
push
cmpsb
sub
enter
xchg
daa
xor
xchg
xchg
xor
aas
inc
fcompl
cmp
add
es
sub
cwtl
xor
xor
sub
xchg
jecxz
sbb
adc
sbb
repnz
cli
sbb
test
cltd
lock
std
out
sub
inc
out
mov
lds
mov
jecxz
addr16
mov
mov
sub
das
les
stos
xor
push
jae
and
leave
cmp
popa
lret
lahf
xor
stos
sub
inc
and
sbb
pop
jbe
sti
pop
ds
sbb
pop
in
mov
in
and
and
mov
push
inc
push
ds
roll
mov
mov
jo
pop
movsb
or
pop
cmp
cs
shll
or
mov
mov
in
pop
xchg
mov
outsb
repz
jbe
fdivs
mov
test
imul
ficoms
jge
hlt
add
jle
enter
xchg
cmp
xchg
sub
pusha
mov
cmpl
xchg
rclb
xchg
xchg
and
pusha
cmp
test
ret
fmuls
test
popf
jno
and
cmp
loopne
ds
out
not
daa
jae
stos
sub
lods
dec
xlat
repnz
jo
jmp
es
sbb
sbb
xor
imul
sub
inc
push
lods
xchg
out
aas
cmp
pop
inc
out
mov
push
adc
adc
sbb
test
and
imull
lds
sbbl
in
outsb
or
sub
pop
push
clc
enter
mov
jp
aas
les
cmpsb
icebp
mov
ror
sbbb
sbb
xchg
mov
push
and
sti
js
mov
shll
push
test
push
lcall
inc
lret
int
aad
sub
cmp
sbb
lret
dec
push
cmc
sbb
insl
test
rclb
mov
cld
pop
adc
cmpl
fdivrp
jl
aad
adc
inc
popf
cmp
ret
add
push
mov
dec
js
idivl
fsubrs
int
cmp
pop
jg
mov
arpl
cmpsb
jae
movsl
movsb
repz
in
jmp
mov
mov
dec
mov
add
sbb
xchg
aas
pop
repz
mov
shll
lods
das
sub
inc
xchg
js
push
xor
subb
mov
xchg
xor
mov
jo
jge
pop
mov
mov
sbb
mov
pushf
cmp
push
inc
jno
dec
dec
repz
into
icebp
aaa
sbb
cmp
pop
jne
cli
arpl
imull
inc
xchg
les
lcall
movsl
pop
mov
into
lahf
jmp
scas
rclb
jbe
aam
xchg
ret
subb
push
push
mov
and
icebp
mov
or
imul
or
out
mov
or
popa
push
stos
out
in
pop
pusha
lcall
pop
cmc
aam
lds
or
xchg
mov
sub
aaa
dec
fwait
and
adc
adcb
mov
pop
jmp
jecxz
ljmp
pop
inc
jb
orb
cmpsl
aam
adc
add
andl
popf
adc
fwait
sbb
or
fstl
sbbl
and
insl
mov
bound
fisubrl
push
pop
mov
ficomps
es
pusha
daa
inc
call
test
fldl
enter
pop
push
scas
pop
pop
pop
out
aaa
xchg
imul
loop
jne
int3
lret
pop
sar
cmp
sti
sbb
xorb
mov
mov
push
movsb
jge
gs
jae
int3
xchg
push
fisubrs
jae
rcl
call
cmp
test
cmp
sub
sub
jmp
xchg
mov
mov
cmp
paddb
fisubrl
nop
push
fistpll
xor
sbb
popa
popf
sti
fwait
push
xchg
insb
and
stc
add
pop
mov
add
inc
xchg
stc
lods
mov
stc
jae
push
movsl
icebp
jge
push
les
daa
js
xchg
jecxz
imul
mov
mov
mov
mov
cwtl
sahf
cmpsb
out
or
dec
inc
add
test
outsl
leave
cmp
mov
aaa
movsb
xlat
cmp
inc
aas
pop
push
pop
jmp
xchg
xor
xchg
repnz
lock
test
jecxz
std
stos
clc
xor
xor
push
rcrb
out
mov
in
cmp
cmp
lret
lret
loopne
push
clc
scas
xchg
mov
stos
jns
dec
mov
sub
mov
insb
adc
push
js
je
mov
add
int
or
sub
outsl
push
xchg
aaa
sub
adc
loope
lea
push
sub
mov
adc
jb
add
ror
push
mov
and
dec
fwait
or
cmp
leave
sub
out
pop
add
jb
icebp
cmpsb
lods
inc
adc
pop
cmpsl
cld
sub
cli
mov
lds
add
jbe
jmp
lods
add
pushf
jl
mov
xchg
pop
divb
aas
pop
or
enter
mov
xchg
inc
shrl
sub
jl
push
sub
sbb
sbb
mov
dec
add
imul
mov
shl
daa
xchg
push
push
cmp
les
sub
sbb
push
out
pop
jno
jg
jl
sbb
inc
insb
scas
push
outsl
cmp
xchg
mov
lcall
cmpsb
fwait
jb
xor
bound
movsl
movsb
jl
lahf
xlat
dec
push
outsb
pop
jno
xor
lea
nop
adc
stc
hlt
cltd
movsb
pop
xorb
cli
stos
iret
mov
aad
push
fisttps
pop
pop
shrb
aas
cmp
mov
fsubrs
cld
sbb
or
jne
mov
jne
bound
adcl
xorl
movsl
jmp
out
test
aam
pusha
xchg
lcall
test
add
lock
jbe
mov
sub
loop
cld
fisubrs
jmpw
inc
mov
inc
loope
ja
jl
insb
mov
mov
popf
and
and
out
mov
mov
push
jg
ja
mov
or
jns
shl
push
dec
das
stos
fimuls
xchg
lds
ljmp
jle
mov
iret
rcrb
jg
pop
test
loop
out
dec
mov
loopne
popa
nop
add
into
inc
cli
inc
in
fdivp
pop
outsb
outsb
cmp
dec
xor
xrelease
repz
or
pop
data16
gs
xchg
dec
fidivl
sbb
mov
and
xchg
roll
push
roll
shr
repz
sub
jbe
dec
push
sub
xor
out
jo
sub
loopne
push
pop
in
int
xor
es
pop
test
mov
iret
ja
dec
cmp
fnstcw
mov
stos
push
lret
adc
jo
mov
imul
es
ljmp
sub
mov
stc
ret
mov
imul
loop
pop
pop
xchg
jge
cmpl
dec
cwtl
xchg
and
out
sbb
inc
pushf
inc
mov
mov
mov
inc
lods
add
xor
add
shrl
testl
dec
imul
scas
or
mov
in
test
aaa
mov
inc
mov
inc
jo
cli
jno
loopne
jb
pop
lods
cmpsb
fldcw
xchg
addl
xor
jbe
jl
rorl
stos
roll
bound
push
loopne
pop
je
ljmp
mov
xor
call
gs
push
cmp
cmp
cs
push
xchg
xor
sub
dec
pop
or
mov
add
dec
jmp
cmp
jecxz
mov
dec
in
jl
cwtl
stc
adc
in
mov
rcl
sarl
jle
cmp
push
loop
lds
sbb
sbb
clc
test
and
hlt
sub
fcompl
test
mov
clc
lock
roll
sbbl
sub
jg
cmp
jmp
nop
clc
pop
lahf
or
dec
xchg
ljmp
mull
dec
ffree
adc
mov
or
mov
pop
inc
shlb
iret
dec
push
jge
scas
loopne
mov
rorl
mov
in
sbb
sti
lahf
loop
out
push
out
leave
mov
mov
movsl
sbb
inc
fmull
je
xor
cmp
sub
push
dec
and
mov
call
mov
inc
jb
fadds
mov
ror
xchg
dec
js
jbe
mov
movsl
cmpsb
mov
sbb
xor
mov
mov
xchg
xchg
cmp
imul
adc
lea
pushl
xchg
nop
mov
mov
mov
mov
fistps
xchg
xchg
push
sbb
push
pop
popf
push
jno
inc
mov
push
push
out
mov
lcall
dec
ds
bound
pop
jg
and
lods
xor
popf
adc
int3
cmpsb
xor
jb
js
sub
and
rorl
pop
cmp
push
add
cwtl
mov
out
pop
inc
xchg
dec
aam
push
push
scas
popf
loope
popf
fs
mov
push
add
jnp
pop
pop
and
outsl
ja
cmp
jecxz
inc
mov
in
cs
push
mov
les
std
xor
inc
adc
add
loope
add
test
pavgb
lret
xchg
testl
loopne
mov
sbb
sbb
sahf
call
sub
test
repnz
push
cli
aaa
and
scas
mov
imul
adc
adc
dec
add
mov
scas
test
out
sub
in
stos
xchg
sub
int3
cmp
cwtl
xor
dec
aaa
xchg
adc
jl
mov
movsl
loop
and
loope
sbb
sbb
stc
outsb
mov
out
movsl
ss
xor
mov
subl
jle
mov
adc
imulb
and
mov
add
mov
and
mov
inc
pop
xor
ljmp
cmp
jle
sbb
xor
enter
fisttpll
mov
mov
jp
mov
xor
lret
mov
xchg
adc
mov
jo
int3
pop
add
mov
mov
xor
cmp
pop
test
sti
out
les
jb
fwait
outsl
push
sar
pop
sbb
add
dec
mov
jne,pn
aas
lret
xor
pop
push
jb
mov
fstl
imul
aam
cmpb
push
cmp
test
add
and
mov
and
sbb
test
jecxz
stc
adc
fadds
xor
mov
and
or
addl
imul
add
add
ja
shl
mov
inc
enter
aad
sub
sbbl
pop
jg
jle
loope
xor
movsb
mov
sub
and
dec
pop
or
sahf
adc
data16
out
leave
xchg
mov
sbb
and
aad
xor
scas
push
lcall
cmp
push
andl
mov
inc
fs
or
and
repz
cltd
neg
push
or
lea
jl
xlat
jnp
mov
int3
daa
out
adc
clc
dec
ljmp
and
or
pop
jns
jmp
arpl
mov
xchg
push
mov
lock
fsubs
js
adc
inc
lcall
cmpsl
mov
scas
xor
test
pop
addr16
mov
xor
or
xchg
mov
mov
lret
scas
mov
xchg
mov
xor
fs
cmpsb
xor
inc
sub
xchg
push
and
lcall
ss
insl
cmp
sbb
inc
sti
add
inc
sub
pop
fadds
in
cmpsb
xor
or
lods
sahf
in
fmulp
xorb
aas
arpl
rorb
int3
add
arpl
loope
icebp
repnz
inc
sbb
outsb
jns
divl
cmp
iret
add
adc
push
push
clc
je
push
movsl
xor
movsl
jo
push
cld
adc
jle
add
pop
cld
bound
push
push
les
inc
in
jbe
adc
dec
loope
sbb
out
pop
loope
sti
xchg
insb
or
mov
mov
lret
das
loop
bound
stos
popa
loop
xor
outsl
inc
ret
mov
sti
cli
sbb
scas
push
out
add
imul
push
jp
mov
psrad
mov
sub
sbb
sub
jg
dec
add
pusha
inc
ficomps
adc
mov
xchg
or
sahf
dec
pop
rol
popf
adc
pop
std
gs
dec
pop
repnz
jl
pop
lods
dec
incl
mov
std
and
jae
ret
mov
mov
xchg
lahf
pop
sbb
loopne
mov
push
xlat
mov
jecxz
addl
hlt
pop
inc
les
jl
adc
ljmp
mov
mov
and
aaa
mov
popa
pop
pop
dec
pop
mov
mov
jae
or
sbb
push
xor
int3
jge
and
xchg
jnp
pusha
xor
shl
rcll
sub
aas
stos
add
aam
dec
push
push
ljmp
subl
push
in
mov
xlat
lret
in
loop
or
jmp
jb
jle
ljmp
in
sub
mov
lods
inc
data16
push
mov
mov
mov
cmp
rorl
adc
push
and
hlt
aaa
sbb
push
fiaddl
bound
sub
inc
inc
das
pop
add
cmp
jne
mov
xor
and
xchg
mov
inc
pop
sarl
xchg
aad
pop
stc
punpckhbw
add
bound
mov
lahf
dec
enter
pop
jo
imull
cmp
or
scas
dec
rorl
sbb
call
mov
rclb
inc
popf
es
cwtl
push
loop
adc
dec
imul
inc
sti
js
ret
mov
push
loopne
sub
or
jecxz
pop
mov
shll
sbb
aam
insl
insb
cltd
das
imul
int
lods
mov
stc
nop
adc
paddw
and
mov
push
test
mov
xchg
xlat
dec
lds
add
sti
inc
insb
mov
mov
jle
add
cmpl
lods
mov
js
inc
mov
idivb
gs
jns
xchg
and
dec
mov
jns
mov
xchg
inc
movsb
jmp
mov
jo
leave
jno
stc
mov
int3
xchg
cmp
rclb
enter
push
cmp
jg
mov
ljmp
mov
and
lds
data16
mov
in
incl
xorl
lea
jae
inc
sbb
inc
enter
cmp
xlat
mov
and
imull
rcll
fucomp
data16
imul
in
and
xlat
cmpsb
xchg
fnstcw
imul
inc
rol
fisubrl
cmp
repnz
inc
mov
addr16
clc
pop
out
sub
leave
nop
jno
jle
cs
scas
mov
repnz
pop
lods
and
movsb
dec
faddl
mov
js
sbb
mov
aas
adc
xchg
lcall
iret
sbb
inc
mov
scas
adc
push
mov
fsubr
mov
cmpb
cmc
shll
lret
adc
pop
mov
push
in
and
cltd
dec
mov
test
stos
jecxz
jge
mov
fcomi
push
jmp
jg
push
pop
shrb
and
sub
repnz
int3
ds
fsubrs
add
mov
jmp
sbb
lahf
mov
outsb
jns
shl
mov
xchg
jecxz
mov
dec
and
daa
sub
adc
adc
sub
int3
inc
scas
push
fisttpll
pop
mov
cmp
lods
inc
or
mov
push
loopne
fs
test
nop
and
push
hlt
sbb
mov
add
lods
xor
in
or
add
adc
out
repz
test
mov
push
xchg
sbb
jae
les
xor
jle
rorb
xor
xor
mov
movsb
ret
popa
sub
sahf
xor
clc
movsl
lods
lret
pop
push
aad
ss
pop
cltd
and
add
and
stc
arpl
stos
or
and
jo
pop
or
movl
push
outsl
adc
sub
cld
jp
xchg
sub
cmp
dec
or
mov
pop
jnp
fidivl
js
xor
mov
mov
xchg
jmp
psrld
push
xor
mov
ffree
and
sti
pop
add
mov
mov
mov
outsb
cmp
sbb
arpl
je
aad
inc
fnstenv
ja
cld
push
mov
sbb
dec
leave
pop
mov
sub
arpl
pop
inc
fdivs
jo
loopne
xor
mov
loop
dec
push
cmc
jb
cmp
fstl
cli
jno
out
cmp
test
int3
lock
lods
push
inc
mov
fcmovnbe
insb
in
in
cltd
inc
sub
xor
cltd
xchg
mov
and
les
aaa
add
xchg
fdivrs
mov
mov
test
mov
aad
lock
mov
cmp
jb
push
xor
xorl
mov
xchg
sub
add
or
pop
sbb
xchg
fs
sbb
pop
or
pop
adc
test
les
loop
imul
hlt
mov
push
jle
inc
std
inc
sbb
jmp
test
repnz
cld
out
jecxz
insl
stos
das
push
movsl
jl
adc
cmp
fimull
jne
add
stos
sbb
movsb
in
shll
jg
aas
int
push
rclb
push
xchg
lock
lcall
jecxz
mov
cmpsl
andb
shr
add
cmp
add
cmp
std
sahf
and
call
push
xchg
sahf
and
call
inc
movsb
mov
sbb
scas
xchg
push
into
push
dec
jb
jge
push
outsl
mov
arpl
push
mov
in
push
pop
sub
cmpb
mov
cmpsl
loop
sub
cmpsb
inc
pop
jmp
sbb
movsb
jmp
loopne,pt
clc
xchg
in
push
das
inc
xchg
lret
mov
imull
jecxz
cwtl
lock
sub
add
cltd
inc
inc
sbb
add
popa
cmpxchg
xchg
push
xor
pop
roll
cmp
or
leave
aam
sti
popf
xchg
outsb
shrb
pop
out
movsl
xchg
mov
jle
idivb
outsl
jmp
and
inc
jb
mov
fdiv
test
bound
inc
nop
mov
popf
lea
aam
jmp
test
add
jo
jl
lea
daa
mov
les
test
lods
push
dec
mov
sbb
ljmp
arpl
cli
mov
filds
stos
cmp
cmp
rcll
outsl
xor
xchg
aam
rolb
sarl
push
pushl
cmp
mov
xchg
lods
xchg
and
lret
dec
mov
and
mov
xor
fwait
daa
xchg
lahf
fucomp
fdivs
fiaddl
movsb
xchg
dec
xor
pop
fwait
dec
jbe
dec
fists
pushf
leave
shlb
stos
out
outsl
adc
aad
movsb
push
jge
pushf
push
std
and
aad
xor
push
sbb
jbe
adc
clc
add
mov
mov
rcrl
cltd
adc
movsb
xor
sub
inc
ja
test
mov
scas
out
inc
out
jno
push
mov
push
inc
mov
mov
cmp
xor
jo
mov
dec
inc
ja
add
mov
cmpsl
add
dec
and
sbb
pop
xchg
adc
incb
es
or
sbb
push
test
sub
icebp
outsl
addr16
sub
mov
jl,pt
inc
in
inc
xchg
clc
icebp
outsb
iret
inc
cmpsl
pushl
inc
pop
mov
sbb
test
call
int
ss
mov
mov
scas
ljmp
jle
xchg
mov
xchg
pushl
jmp
popa
pop
jmp
jp
mov
pushf
sbb
add
ss
lret
divl
inc
xchg
xor
fs
push
out
and
int3
mov
les
sbb
mov
push
int
repz
faddl
or
test
cld
cmp
dec
outsl
test
fstpl
adc
sbb
mov
scas
adc
push
or
and
es
mov
lock
xlat
mov
mov
or
faddp
fildll
ja
in
aam
lock
js
mov
sahf
je
pop
scas
test
push
addr16
jg
inc
movsl
inc
in
add
inc
sarl
jo
xchg
jle
pop
rcll
gs
scas
jbe
and
bound
outsb
fwait
dec
pop
xchg
les
mov
or
jb
jge
mov
mov
pop
lock
je
or
outsb
push
inc
insl
mov
jecxz
add
mov
xchg
mov
xor
pop
adc
push
xlat
or
xor
sbb
cmp
in
testl
and
pop
inc
pop
fidivrs
cmc
dec
and
dec
fisubl
shlb
xor
andl
scas
ss
into
test
hlt
or
jp
ja
cwtl
push
ret
inc
mov
movsb
rcrl
push
mov
mov
cs
and
push
fsubrs
add
repnz
mov
and
inc
fcmove
loop
inc
mov
imul
lret
fadd
out
push
or
sbbl
adc
adc
inc
leave
jle
xor
imul
mov
pop
scas
popf
lret
mov
jno
mov
dec
add
out
mov
dec
ret
frstor
add
mov
fidivs
xor
fwait
jl
sbb
fwait
dec
loop
and
jo
sti
arpl
sbb
inc
out
cmp
dec
and
mov
clc
push
test
jns
xchg
mov
pop
in
dec
sbb
or
push
cmc
jecxz
cwtl
stos
ljmp
jb
and
sub
push
jae
lods
lcall
mov
dec
mull
push
shr
outsl
hlt
movups
popf
movsb
pop
mov
pop
loope
out
sub
mov
push
loop
mov
inc
jg
es
stos
cmp
push
shlb
dec
push
cmpsl
lret
adc
ss
jbe
subl
pop
xor
fsts
dec
push
rcl
scas
aad
mov
mov
jge
mov
push
outsb
mov
cmpsl
xchg
push
mov
or
out
cmpl
test
add
icebp
sbb
xchg
jl
bound
and
movsb
iret
jmp
xchg
add
pop
xor
jle
arpl
ss
sbb
daa
dec
lods
or
pop
pop
outsb
mov
clc
fdivrl
mov
xchg
test
mov
sub
dec
xchg
or
pop
sbb
std
add
je
inc
lods
cmp
inc
xchg
cmp
adc
jl
xchg
out
cmp
cli
mov
jg
push
add
movsl
inc
aaa
ret
mov
xchg
adc
dec
jo
iret
nop
lret
mov
pop
xchg
mov
sbb
dec
mov
sub
sbb
popa
lods
mov
shll
test
icebp
cli
lea
pop
cmpsb
ficomps
jno
jl
jl
mov
push
dec
fs
lods
gs
sub
xchg
jbe
adc
adc
adc
xchg
push
fimuls
adc
fldcw
out
sbb
mov
in
pop
cwtl
adc
xchg
add
cmp
jbe
push
inc
mov
mov
aam
outsl
cmp
xchg
pop
xchg
mov
dec
ret
out
ffreep
lea
sbb
js
cmpsb
pusha
xchg
jmp
push
dec
pop
jge
pop
pop
sbb
std
fimull
mov
inc
xor
pop
loope
sub
sub
mov
push
test
dec
xor
and
mov
cmp
sbb
pop
test
xchg
dec
into
adc
and
jne
or
out
out
xor
mov
jbe
ja
lods
pop
mov
enter
mov
mov
sub
out
mov
add
into
shl
rclb
mov
adc
and
fstpl
movsl
mov
and
mov
xchg
mov
pop
dec
sub
inc
pop
fisubrs
fmuls
sub
add
pop
mov
fsubrl
out
fisubrs
mov
sahf
push
or
es
or
inc
out
sub
cmpb
sub
mov
inc
pop
adc
cltd
push
sub
loope
mov
out
jp
and
jbe
daa
sub
add
xor
fildl
adcb
es
test
fs
mov
roll
mull
mov
mov
cltd
push
popf
call
es
and
xchg
andl
jp
push
cmp
pop
pop
or
adc
in
add
jbe
ljmp
lret
rcrl
cld
xchg
xor
dec
sbb
sbb
negb
cmpsb
dec
data16
test
mov
mov
push
sub
mov
or
jbe
in
rcrb
cmc
clc
outsl
xor
push
or
sbb
push
jns
adcl
pop
adcl
sub
imul
fisttps
in
cmp
jno
test
lds
sbb
mov
repnz
sub
dec
mov
cld
jmp
xor
aas
bound
mov
pop
aaa
xor
mov
mov
cmpsl
cs
xchg
mov
daa
jp
and
xor
add
andl
int
in
inc
fwait
cmp
stos
sbb
and
clc
mov
pop
stos
insl
loop
and
ljmp
add
xlat
xchg
test
sub
inc
xor
xchg
jo
and
dec
aam
dec
es
repnz
sarl
adc
dec
cmp
inc
xor
or
rcrl
dec
inc
loopne
mov
pop
outsl
add
ret
mov
lods
adc
jo
out
or
dec
dec
lods
dec
mov
rcrl
mov
leave
jns
insl
push
xchg
push
xchg
or
sbb
rcr
lret
mov
and
test
aad
hlt
and
sub
stos
xor
testb
mov
js
add
adc
and
xor
je
das
xor
and
leave
test
adc
xor
xchg
pop
icebp
punpckhdq
mov
jg
sub
lret
sub
into
and
aad
cmp
leave
pushf
jl
sti
rol
lds
add
add
call
mov
lods
repnz
in
cmpsb
aad
pop
dec
mov
mov
pop
mov
xchg
aaa
xor
dec
add
sahf
inc
jne
pop
add
mov
add
shlb
mov
shlb
imull
out
sbb
cmp
pop
mov
imul
cltd
cmpl
test
mov
and
rclb
scas
lea
add
xlat
inc
aas
mov
sahf
ja
mov
mov
ss
out
ret
gs
jmp
pushf
xor
lds
fildl
jns
jne
test
adc
daa
lcall
mov
jno
sbb
sti
aaa
repz
movsb
push
fnstsw
mov
shr
xchg
xchg
xchg
jns
add
mov
sar
pop
lods
lock
leave
lret
adc
aaa
push
cmc
adc
push
xor
js
inc
je
aam
insb
xchg
and
lods
fwait
sahf
push
and
xor
divb
cs
add
push
iret
mov
push
data16
adc
xchg
mov
clc
pop
out
jge
pop
cwtl
mov
mov
testl
mov
out
pop
aaa
mov
test
mov
stc
cmp
xor
mov
add
and
sbb
loop
mov
sbb
sarl
adc
dec
cmp
pop
mov
xchg
mov
pop
xchg
cmp
cmp
sarb
aam
out
xchg
cmp
pop
xchg
mov
outsl
shlb
aaa
mov
sbb
cmp
fwait
scas
popf
pop
cmp
pop
sbb
inc
outsb
mov
or
rcll
ja
insl
cmp
add
movsb
lods
adc
insb
cmc
sarb
cmp
cmp
cmp
pop
imul
inc
faddp
lock
icebp
inc
jnp
in
pushf
and
lds
add
sub
mov
mov
push
fisttpl
jp
stc
push
out
mov
adc
xchg
int
test
lahf
ja
pop
xor
jl
fldt
leave
ljmp
sarl
in
inc
test
std
inc
movb
mov
xchg
push
dec
adc
mov
pop
lds
xorl
sbb
aaa
add
or
loope
jmp
aas
xchg
xor
jb
push
test
fnstsw
push
out
movsb
sub
pop
ds
in
mov
imul
addr16
pop
js
sub
jp
fldl
dec
lds
sbb
jp
lock
pop
call
push
cs
stos
setp
sub
fstpl
movsb
outsl
aaa
sti
pop
mov
jge
subl
call
mov
in
xor
xor
dec
inc
push
ja
loop
fwait
lret
add
test
movsb
xchg
xchg
xchg
mov
sahf
inc
lea
inc
push
idiv
imul
dec
or
push
sti
sbb
adc
jecxz
pop
push
xchg
insl
stos
mov
aas
mov
sbb
add
sub
or
mov
jmp
cmc
dec
jecxz
and
loop
push
and
in
std
into
data16
iret
sbb
push
data16
add
push
and
out
loop
mov
iret
mov
push
ret
loopne
hlt
shlb
stos
out
xlat
ds
stc
cmp
movsb
pushf
test
ds
cmp
loope
or
xchg
movsl
jnp
aas
cmpsl
sub
xchg
pop
rcll
arpl
pop
dec
popf
cld
sbb
cmpsl
sbb
sbb
call
mov
sbb
cld
outsl
imul
mov
bound
hlt
mov
jmp
fistps
adc
stc
sahf
les
add
out
jp
jne
arpl
fstps
leave
cmc
add
rclb
xor
adc
loope
fdivrl
jmp
cmc
adc
xor
aaa
sbb
jle
rolb
mov
adc
les
xlat
pop
lods
dec
lods
jle
movsb
push
lcall
dec
jge
or
dec
sahf
fwait
cld
pop
xor
xchg
add
push
mov
hlt
repz
add
push
mov
movsl
xchg
adc
fsubrp
test
scas
gs
push
jae
pop
clc
outsl
push
mov
push
bound
xor
outsl
xor
inc
xchg
dec
sub
cmpsb
mov
pop
out
mov
push
push
add
or
or
cmpl
mov
xchg
add
imul
test
aas
or
and
gs
mov
mov
push
dec
and
fidivrs
pop
sub
jmp
sub
shr
repnz
pop
stos
xor
stos
mov
aas
imul
adc
jmp
popf
fwait
loopne
sub
mov
popf
adc
jecxz
js
push
or
mov
nop
out
ss
lcall
jmp
les
cs
fidivs
shrb
mov
add
and
popf
rcll
sti
add
sbb
xchg
ja
adc
stos
cli
mov
jo
inc
shl
jge
adc
out
fcoms
fstpt
push
cmp
add
xchg
in
repz
dec
mov
cmp
xchg
movl
lods
dec
push
jnp
jae
add
sbb
mov
imul
adc
and
adc
sbb
cmpsb
js
mov
test
cmpb
fidivrl
pushf
mov
add
xor
cmp
push
inc
repz
dec
ficoml
ljmp
loop
in
mov
xor
std
sbb
dec
xor
xchg
and
mov
dec
loop
or
lds
insl
insl
jne
out
inc
call
cmp
inc
push
xchg
or
and
out
sbb
or
mov
lahf
jmp
loopne
xchg
mov
repz
cli
test
addr16
andb
push
test
sub
cmp
mov
xchg
xchg
xor
loop
imul
addr16
out
je
xor
xchg
jb
xor
cwtl
movsl
aad
movsb
dec
sub
cwtl
call
add
adc
ret
leave
dec
loopne
lods
icebp
addb
cli
cltd
inc
rorb
scas
dec
pop
cmpb
into
push
pop
call
jmp
scas
add
mov
loope
addr16
add
fmull
cmp
mov
add
push
mov
add
mov
sbb
cmc
js
mov
fistps
pop
stos
inc
movlps
lock
mov
out
in
andb
mov
xchg
mov
popf
fwait
push
fcomps
cld
cmp
pop
pop
mov
in
lock
pop
lcall
xor
dec
adc
js
inc
mov
lcall
dec
in
sub
push
or
lea
xor
xor
lds
push
inc
pand
bound
je
xchg
std
movl
cmp
push
shlb
outsb
add
ds
jle
jbe
cmc
sahf
pop
cwtl
insl
ss
lea
push
div
xor
popa
cmpsb
mov
fs
rcrl
cmp
xchg
mov
cmp
xchg
mov
xchg
and
sbb
in
incl
inc
inc
pop
pop
lea
cmp
inc
cmp
mov
xlat
arpl
mov
pop
xor
or
add
jle
xor
mov
fisubs
dec
mov
into
lahf
push
js
ficoms
mov
movsb
jb
jmp
daa
in
stos
xor
cmpsb
cmpsb
xor
jecxz
jb
jle
mov
adc
add
not
xor
fistpll
scas
in
test
mov
leave
xlat
or
adc
std
or
mov
ss
mov
fisttpll
idivl
dec
cmpl
test
fwait
shl
and
mov
mov
lods
push
mov
cmp
js
dec
mov
das
mov
cmpsl
into
cld
mov
add
mov
sub
jno
inc
fisttps
push
push
adc
ljmp
push
jp
cwtl
ret
leave
test
inc
aaa
add
cwtl
or
and
add
xchg
push
mov
xchg
inc
xchg
lods
bound
and
ljmp
xchg
ficompl
sub
push
lods
int
add
cmpsl
push
mov
pop
das
lods
je
cmp
jo
jo
adc
aam
cmp
xchg
cld
fsts
outsb
mov
outsl
xchg
sahf
repz
dec
data16
icebp
fdivr
sbb
nop
jle
sub
ds
pop
imul
shlb
mov
and
cmp
aaa
jnp
xchg
cmpl
arpl
out
lods
push
in
mov
lcall
jg
xor
nop
mov
xchg
je
push
jnp
mov
push
jl
outsb
test
lret
shll
jge
adc
and
lea
xchg
adc
xor
inc
in
push
je
lcall
inc
mull
cltd
rcr
xor
hlt
and
jne
dec
inc
mov
repz
movsl
sti
dec
push
dec
jae
sti
adc
out
xor
pusha
cmp
inc
xor
pop
idiv
int
adcl
negl
stc
mov
add
and
out
shr
mov
xchg
push
dec
daa
mov
ds
arpl
je
sub
fnstcw
and
mov
lock
jae
pop
pop
repnz
dec
loop
call
adc
cmpsl
sub
ljmp
aas
mov
mov
mov
mov
add
or
dec
repz
mov
mov
xchg
mov
xchg
or
add
subb
mov
pop
into
cs
mov
int
into
loope
sub
out
imul
or
daa
and
xchg
mov
mov
pop
jbe
daa
addl
push
cs
sbb
and
pushf
mov
cmpsb
jl
shld
in
adc
inc
enter
cmp
sub
inc
or
movsl
int
insl
mov
ffreep
mov
les
cmp
cmp
imull
pop
inc
lcall
popa
sub
or
std
std
scas
jns
mov
sub
ss
mov
mov
fwait
add
jns
dec
xchg
cmpsl
ret
notb
ja
ds
mov
push
ret
mov
and
push
movsb
cmp
test
rclb
adc
mov
cmp
xor
dec
pop
into
cmp
or
and
xor
sarl
xchg
and
out
lock
std
adc
test
mov
add
fnstcw
aas
in
ss
daa
sub
shrl
int
jecxz
pop
stos
cmp
test
stos
sub
cmpsb
push
xchg
lcall
in
das
push
lds
insl
jl
iret
std
cwtl
negl
xchg
gs
shr
das
xchg
stos
or
mov
sbb
xor
imul
pop
les
cmpb
fcomi
lahf
adc
and
xchg
adc
sbb
pop
ljmp
decl
mov
out
es
add
pop
pop
das
ret
mov
add
push
lea
aaa
sahf
cmp
dec
popf
out
out
into
int
stos
jne
push
mov
mov
repz
stos
mov
adc
dec
pop
addb
sub
sbb
xchg
sbb
xor
jp
insl
hlt
sbb
out
mov
ja
inc
enter
add
ret
push
sbb
cmp
scas
arpl
adc
lock
mov
add
jb
adc
dec
push
pop
lods
mov
xchg
test
loopne
mov
sub
sbb
pop
cmp
loop
sub
insl
push
mov
and
xor
jno
sub
pop
jo
xor
aas
rolb
insb
stos
dec
xor
mov
or
xchg
in
shrl
mov
mov
leave
ja
shr
fstps
int
fwait
fwait
lods
dec
fwait
pop
pop
push
mov
adc
inc
aas
scas
cmp
xchg
lret
pop
ja
mov
bsr
std
pop
lock
lret
inc
stc
dec
aaa
movb
jmp
loop
jne
sbb
cmpsl
xchg
adc
mov
mov
shrb
iret
xchg
bound
nop
inc
sub
cmp
icebp
mov
popf
fstp
xchg
shll
cli
and
cmp
stc
xchg
jp
add
cmp
int3
ret
mov
mov
cmpsl
jge
sbb
bound
fmuls
xchg
test
js
js
adc
mov
lods
dec
daa
mov
add
xchg
fwait
out
jge
jge
mov
xor
fsubs
jecxz
jg
jno
mov
dec
xchg
adc
or
insb
fwait
mov
adc
dec
movsb
rol
addr16
lcall
adc
add
pop
in
adc
pand
std
xor
xchg
aas
dec
ss
add
ljmp
and
loop
gs
loope
inc
xor
inc
clc
cwtl
lret
shlb
lahf
cmpsl
aas
push
add
jmp
lock
scas
sbb
inc
sbb
jl
aas
cmpsb
jne
xorb
fiaddl
and
mov
adc
xorb
sbb
int3
mov
out
ss
das
push
test
iret
and
lret
dec
inc
xor
in
push
cmp
cmc
pop
in
lret
test
push
fwait
push
cld
add
loope
lret
xor
push
cmpsb
gs
in
pop
aam
cmp
stos
jns
adc
bnd
xchg
outsl
jne
out
jp
cwtl
xchg
adc
loop
lods
js
bound
andb
or
xor
push
addr16
mov
and
or
dec
mov
arpl
mov
testl
mov
dec
out
lcall
orb
std
cmp
stos
dec
or
sbb
rorl
inc
push
xchg
mov
js
push
jle
das
fbstp
inc
fstpt
push
mov
popa
rorl
sbb
inc
push
jnp
movsb
shlb
dec
fdivr
stos
mov
push
mov
cld
ret
icebp
and
in
and
mov
repz
pop
call
ret
rolb
push
daa
imul
inc
call
in
jl
push
mov
out
shl
out
push
and
or
jg
inc
loope
inc
push
and
sti
mov
mov
outsl
aaa
stos
sbb
aad
es
sub
sbb
pop
leave
int3
xor
cli
rolb
inc
mov
pop
sub
aad
ss
pop
fcomip
mov
push
lret
arpl
adc
movsl
pop
pushf
mov
imul
mov
mov
iret
mov
ds
shll
cld
push
jae
scas
xor
xchg
dec
jbe
xchg
sahf
and
cmp
xor
and
and
jmp
rcl
iret
ror
inc
imul
jge
sbb
cwtl
stos
push
test
push
and
test
sbb
cmpsl
mov
lea
xchg
cmpsl
cmp
leave
mov
cmp
pop
inc
dec
push
add
lret
std
fstl
je
xchg
scas
or
loopne
sub
es
lcall
std
dec
fs
inc
and
shl
addb
cmp
sarl
pop
xor
scas
inc
mov
sbb
movsl
jg
sub
jne
inc
sbb
outsl
in
ds
sub
fstpt
gs
fs
push
stc
mov
lock
cmp
jp
int
and
sub
jnp
jo
mov
outsl
push
add
pop
sbb
insb
call
adc
mov
fisubrl
xchg
adc
outsl
push
hlt
sbb
pop
push
or
ret
into
lcall
cmc
and
push
jns
aam
in
or
add
stc
aam
mov
les
movntps
pop
or
mov
fs
dec
xor
in
cmpsl
xor
mov
fwait
popf
xor
dec
fisttpl
fisttpl
shrl
add
int3
push
xchg
inc
inc
push
aaa
mov
cs
mov
outsl
mov
notb
dec
dec
enter
mov
movsl
mov
shl
std
sbb
sub
mov
test
xor
scas
mov
pop
push
mov
mov
inc
movsb
push
mov
lods
push
movsb
cmpsb
jo
cmp
add
xchg
xorb
lret
sbb
out
cmp
es
lret
fisubrs
ds
inc
mov
fs
test
dec
mov
fcoml
xchg
push
lods
outsl
and
enter
in
dec
sbb
pop
sahf
cmp
xchg
pop
rcll
sub
mov
adc
mov
dec
jg
add
dec
push
cld
sub
enter
dec
pusha
fdivs
stc
call
sub
push
xor
out
mov
lret
push
cwtl
gs
scas
call
xor
or
mov
xchg
lcall
push
mov
fmull
mov
push
mov
adc
call
and
repz
adc
fcmove
mov
aad
stc
dec
jmp
pop
add
ds
mov
jmp
add
mov
lret
mov
rorl
add
jg
fisubrs
outsb
or
sbb
sbbl
scas
sbb
orb
and
test
mov
sub
out
adcl
or
std
out
pop
mov
addr16
xchg
jns
xor
movsl
pushf
sbb
pusha
pop
jns
mov
xlat
mov
cld
movsl
add
adc
in
lea
jg
jecxz
inc
mov
dec
jecxz
mov
stos
mov
pop
cld
mov
sub
fistpl
mov
dec
hlt
fs
pop
idivl
cmp
fildll
out
xlat
lods
lahf
cmp
scas
insb
lods
pop
adc
in
dec
inc
or
dec
stos
divl
cmpsb
gs
mov
inc
dec
ret
mov
push
jmp
cld
adc
pop
fwait
xor
in
orb
test
popa
outsl
daa
lea
mov
scas
aaa
inc
pushl
adc
andl
fcmovbe
fwait
push
mov
imul
jl
aas
mov
adc
pushf
lods
shlb
in
add
stos
cmc
inc
or
pop
push
cmp
je
out
repnz
pop
pop
adc
mov
jge
movl
imul
sbb
rcrb
hlt
jp
jb
mov
mov
fistl
adc
or
mov
lods
pop
hlt
incb
add
or
cmc
test
cmp
or
cmp
inc
xchg
pop
pop
sbb
cmp
ja
add
xchg
ret
push
js
cmp
std
gs
or
adc
shr
sahf
out
enter
inc
scas
pop
cmp
xchg
jne
outsb
xchg
mov
xor
pop
loope
push
xor
or
outsl
mov
sub
into
fdivr
add
ret
pop
xchg
add
into
jo
fnstenv
aas
adc
sub
jle
dec
sub
mov
dec
fists
ret
lods
popa
adc
ljmp
sti
jmp
push
xchg
clc
ret
fwait
dec
sub
or
sbb
sbbl
sbb
aam
push
add
loop
pop
push
sub
mov
pop
dec
and
lret
pop
aas
push
xchg
adc
dec
push
outsl
mov
cmp
push
xlat
sbb
mov
out
data16
out
or
push
jecxz
xchg
cmp
les
xchg
cmp
rcrl
sbb
pop
aam
shlb
inc
and
test
sbb
pop
pop
test
push
ret
dec
push
outsl
xchg
dec
adc
jge
xor
ret
dec
js
or
loopne
lcall
mov
pop
xor
mov
pop
or
gs
adc
jnp
jbe
mov
pop
mov
xor
mov
test
ljmp
cltd
xchg
xchg
cmp
xchg
jp
cmp
or
imul
dec
lret
dec
int
mov
xchg
insb
jne
pushf
mov
xor
jecxz
jmp
loop
sbbl
xor
push
mov
inc
std
pop
mov
cwtl
inc
and
pop
push
sbb
addr16
int3
or
cmp
sbb
lods
out
xchg
movl
loop
mov
loop
mov
jae
test
mov
rcr
cmp
dec
push
test
rclb
xor
andb
jecxz
bound
insl
pop
sbb
dec
cld
rcll
dec
stos
fdiv
aam
rcl
mov
fstl
or
stos
out
sub
push
jns
xor
lods
iret
pop
xchg
cmpsl
jns
add
movl
or
movl
cmp
sbb
andb
fldenv
andl
jne
and
xchg
push
add
insw
cltd
push
add
push
push
in
xchg
es
pop
das
mov
ficoml
enter
lods
pop
enter
and
xlat
scas
pop
inc
shll
cs
mov
cmp
xchg
cs
sbb
js
sbb
ret
xchg
and
jae
pop
mov
leave
inc
inc
adc
jo
inc
daa
in
sarl
cmpsb
cld
jg
adc
loopne
fstps
in
cmpsb
jmp
push
dec
add
dec
adc
lock
aam
test
or
cmp
arpl
ret
push
adc
pop
test
mov
adc
and
sahf
jns
mov
add
in
cmp
std
fldl
insb
xchg
push
xchg
and
or
push
or
jb
xchg
dec
icebp
inc
cmpl
imul
clc
xchg
lcall
fmull
int
jecxz
int3
das
and
lods
loop
hlt
push
iret
sub
and
cmp
inc
mov
lcall
daa
lds
mov
insl
inc
lcall
lock
outsl
dec
mov
sub
neg
sbbl
mov
aaa
std
xor
imul
shll
je
add
mov
int
inc
inc
push
pusha
fdivr
pop
in
or
pop
iret
out
out
popf
repz
dec
popf
and
jecxz
add
push
add
or
ret
jmp
sti
shlb
mov
xchg
mov
sbb
pop
addr16
lret
loopne
insb
sub
lds
or
cmp
jle
inc
imul
and
cmp
pop
aaa
mov
sub
or
in
xor
or
pop
push
push
cmpl
xor
sbb
pop
mov
outsl
bswap
lcall
cmp
cwtl
xor
cli
jns
pop
jo
jnp
neg
xlat
popf
push
addr16
xchg
lret
jmp
cltd
cmp
mov
jge
push
scas
sub
or
xchg
xchg
fisttpl
test
dec
rcrb
fcompl
cltd
push
int
mov
shlb
call
xchg
add
cmp
lds
mov
mov
imul
out
sbb
enter
in
or
or
loope
out
sahf
pop
sbb
incb
test
lahf
mov
icebp
out
cld
push
pop
adcl
cmp
into
inc
cmp
push
xchg
jge
jge
sarb
mov
xchg
mov
roll
jno
xor
pop
fstpt
xchg
aam
loope
rorl
add
addl
mov
push
leave
shl
int3
outsb
test
loop
pop
vmovhps
mov
les
xor
cmpsb
xor
and
int
movsb
adc
sbbb
dec
mov
add
lahf
xchg
jne
jp
jo
jg
xchg
add
sbb
pushf
orb
push
int3
pop
lea
sahf
call
push
mov
sbb
jp
imul
jecxz
rolb
xchg
ret
in
dec
or
mov
and
fistl
outsb
adc
push
dec
inc
pop
in
push
xor
cli
xchg
fisubs
movsb
dec
or
cmpsb
lock
mov
cmpsb
cmp
mov
pop
jb
repnz
pop
push
ror
mov
cmp
mov
xlat
dec
inc
test
add
mov
sub
cmpsl
push
sahf
insl
xchg
mov
and
ds
repz
jne
dec
je
and
mov
hlt
fsincos
js
adc
stc
dec
xor
ljmp
mov
lock
mov
les
roll
pop
xor
rolb
xor
loop
xchg
xchg
das
pop
into
fucomp
sub
jo
fidivs
adc
or
and
lock
imul
rorb
add
mov
inc
es
jbe
sbb
mov
sbb
out
pop
cs
std
mov
add
and
in
outsl
mov
xchg
or
add
in
mov
mov
inc
test
jmp
mov
lods
jno
inc
adc
or
mov
int3
test
mov
and
popf
popf
push
sbb
xchg
and
dec
push
data16
xor
xor
pop
outsl
movsb
and
cld
outsb
dec
mov
jp
or
in
call
xor
jge
push
popf
ret
pop
test
pop
lods
fs
xor
test
adc
ja
pushf
sti
push
inc
mov
loope
jb
iret
bound
cmp
aam
in
fsubl
fcoml
mov
mov
inc
mov
xor
pop
inc
mov
test
sbbb
sahf
mov
sbb
sub
inc
jecxz
xor
sbb
ja
lods
add
mov
scas
movsb
sbb
xor
idiv
xorl
ss
push
inc
movsl
inc
push
jne
jmp
inc
sub
fwait
repnz
push
mov
jne
mov
dec
xor
fs
arpl
inc
mov
mov
leave
int3
fwait
push
sbbb
ds
cs
push
sub
mov
cs
movsb
ljmp
and
sbb
xor
pop
jnp
jmp
mov
sbb
aaa
ret
sub
cli
fsubl
mov
push
pop
push
adc
imul
add
out
imul
xor
mov
mov
ret
xor
out
inc
cli
pop
fiadds
stos
adc
insl
jge
adcb
adc
popf
fs
shl
stos
add
enter
fstpl
mov
dec
mov
add
bsr
cmc
repnz
fbstp
adc
cmp
and
lods
loop
popa
inc
sbbb
shll
xchg
shrb
xlat
jae
decb
jbe
inc
push
pop
cmpsb
lds
xchg
jl
fs
jl
xchg
bound
add
jmp
jp
ret
push
jnp
jg
arpl
xchg
sbb
push
in
psubsw
xchg
jge
adc
mov
jns
int
repz
out
ret
sbb
push
mov
cld
cwtl
cs
rolb
repnz
inc
outsb
outsb
pop
repz
outsl
lret
mov
xchg
and
ja
cmp
adc
jmp
adc
fdivl
jl
frstor
pusha
xor
inc
sbb
jne
fwait
xor
movsb
in
test
mov
cmp
add
and
adc
mov
mov
sahf
xchg
in
rcll
dec
sahf
les
adc
fdivr
mov
dec
fs
cmp
dec
push
mov
mov
addb
inc
xorl
sub
adc
jmp
push
lods
push
dec
nop
cltd
cmp
mov
or
xchg
add
arpl
pop
or
or
mov
into
test
in
sbb
xchg
stc
pop
mov
add
pop
push
mov
cmp
cmp
cmp
sbb
jg
inc
aas
icebp
imul
test
fldt
cmpsb
jmp
xor
loopne
pop
pop
pushf
sahf
cmp
mov
aad
dec
sbb
icebp
xchg
inc
fwait
cmpl
mov
push
xor
mov
xor
iret
scas
xchg
jg
lea
outsl
bound
jbe
pop
xor
and
js
push
faddp
test
cmp
dec
sbb
test
xchg
pop
and
popf
test
pop
sub
mov
jnp
or
xchg
sbb
sub
or
dec
sub
push
aaa
sub
sbb
hlt
sub
jecxz
sub
adc
jne
scas
pop
testl
lods
inc
loop
das
movsl
adc
jecxz
fsubr
inc
cli
aas
jecxz
in
push
or
cli
jne
ss
bound
push
lods
jns
loopne
mov
mov
mov
sbb
gs
mov
movsb
and
add
mov
pop
jmp
hlt
lods
and
lds
out
xor
pop
fwait
sbb
stos
push
scas
movsl
call
lret
das
push
mov
dec
cmp
inc
std
jle
cs
mov
ss
stos
addr16
notb
loope
fstl
mov
sbb
stos
lcall
cmp
loopne
or
sub
mov
xchg
cmp
lea
pop
shll
cltd
hlt
mov
dec
push
inc
icebp
fisttpl
fld
sahf
insl
stos
inc
push
popf
nop
insb
sbb
push
mov
xchg
daa
adc
mov
aad
add
jmp
jno
pop
mov
xor
decl
pop
pop
push
jmp
negb
mov
add
pop
nop
xchg
jmp
adc
divl
aas
out
shl
push
and
pushf
dec
mov
repz
sahf
ds
hlt
mov
and
fstl
push
sbb
add
lock
aam
xchg
jnp
fs
imul
lea
and
pop
mov
bound
jg
xchg
jbe
mov
dec
xor
add
adc
push
mull
sub
dec
xchg
test
gs
cmp
push
loop
xchg
dec
ret
pushf
mov
push
leave
and
popf
ficoml
and
cltd
xor
pushf
sbb
test
dec
pop
insl
add
push
call
imul
xchg
jge
loop
pop
loope
inc
jno
jns
iret
orl
scas
rolb
xchg
aad
cmp
sbb
jl
mull
aas
inc
stos
imulb
dec
mov
push
sbb
pop
shll
inc
cs
ficoms
mov
or
jne
fwait
xchg
sub
bound
xchg
xlat
add
cs
ds
mov
mov
lret
js
rclb
dec
inc
mov
out
jns
xchg
cwtl
cld
xchg
rorb
call
jle
popf
leave
and
into
ret
cmp
sbb
ret
aaa
loope
mov
push
in
push
test
pushf
loope
mov
rcll
xor
call
iret
push
pop
fwait
push
or
ret
mov
push
cwtl
je
push
mov
hlt
sub
and
adc
popa
mov
lret
lret
push
and
jae
test
orl
mov
xchg
popf
push
cs
shrb
imulb
out
test
push
add
cmp
insl
and
lret
jp
lahf
lods
jae
sbb
xor
mov
pop
out
scas
in
shl
lret
in
ja
cltd
xchg
aas
aam
fcmovnu
int3
test
sub
lcall
scas
cwtl
pop
loopne
mov
aad
and
shl
sarb
push
jb
dec
cmp
int3
les
cmpsb
sbb
aam
inc
inc
lock
or
sbb
gs
push
stos
and
xchg
sbb
mov
push
and
jecxz
mulb
sbb
push
stos
ret
adc
xchg
and
int
cmpsb
jge
mov
and
repz
rorb
rorl
sub
loopne
ja
flds
cmp
sub
ret
dec
lcall
rcr
jnp
cmp
mov
aad
gs
lock
mov
lret
test
push
lock
lahf
xor
mov
nop
cld
or
adc
arpl
icebp
sbb
sub
addr16
lret
dec
daa
cli
mov
ja
fcmovnbe
push
adc
or
cltd
loope,pt
in
or
inc
sti
pop
mov
and
mov
daa
js
icebp
pop
lret
add
sub
jno
loope
xacquire
cmpsb
xchg
stos
sub
stos
ret
mov
mov
xor
cmp
in
xor
jbe
xchg
nop
in
pop
stos
sub
icebp
adc
cmp
js
repz
inc
fwait
repnz
add
push
mov
mov
aas
scas
add
cmp
and
icebp
aaa
hlt
loopne
push
into
mov
add
xchg
add
mov
push
mov
pop
pop
cs
mov
push
dec
test
fiaddl
dec
and
hlt
out
xchg
sub
xchg
and
dec
push
test
sub
and
imul
pop
bound
mov
jns
fldl
cmp
jns
pop
aaa
cld
and
jbe
stos
pop
mov
pop
push
xchg
cmpsl
aam
mov
aaa
push
aad
pop
lods
or
cltd
int
mov
mov
popa
sahf
add
shl
mov
push
inc
iret
jae
sub
add
jecxz
push
cmc
cmp
jo
mov
dec
mov
dec
pop
mov
or
ret
adc
popa
and
loopne
and
inc
push
pop
inc
and
loopne
test
push
xor
sub
fisubl
arpl
fcmove
fidivrl
gs
loop
push
pop
ficomps
es
push
jno
mov
pop
jne
iret
pop
int
in
inc
jle
sbb
jo,pt
cmpsl
sbb
adc
fs
fmull
or
sbb
call
xchg
jns
xor
mov
mov
jp
es
adc
or
ja
fistps
insb
add
xchg
fcom
scas
and
mov
add
sub
mov
xchg
out
loopne
or
out
mov
shlb
add
mov
ret
loopne
inc
orl
sti
int3
out
jl
nop
and
sbb
pop
aad
sub
je
addl
je
popa
mov
lret
jp
dec
xchg
in
movsl
and
dec
push
xor
sub
inc
and
mov
cmp
arpl
pop
xchg
or
stc
cli
ror
das
stos
test
and
adc
stos
push
pop
jno
jmp
imul
or
int
adc
sbb
xorl
jl
cltd
repnz
jp
repnz
push
outsl
dec
fistps
fisubl
out
and
adc
push
and
ss
mov
cltd
jl
scas
out
aas
mov
adc
sbb
jns
sbb
lahf
mov
sbb
clc
loope
mov
inc
popf
dec
cmp
add
push
dec
xchg
jle
push
mov
cmp
push
push
hlt
jp
xor
cld
jl
jae
xor
sub
in
sbb
inc
push
mov
lock
das
mov
push
jle
pop
loope
or
fs
sti
arpl
popa
push
iret
dec
mov
das
cmc
dec
cli
inc
notl
pop
mov
push
jp
lock
pop
xor
lar
addr16
inc
in
out
xchg
sub
fstpt
lods
and
clc
shlb
dec
movsb
in
lret
lcall
jae
out
jge
inc
push
xor
jne
bound
push
mov
dec
out
jno
xchg
jbe
pop
pushf
sbb
cmpsl
push
movsb
pushf
outsl
mov
mov
cmp
cmp
outsb
hlt
mov
xchg
mov
outsl
or
jg
xchg
cmpb
lcall
rorl
call
rclb
xchg
mov
daa
clc
ss
rcrb
out
cmp
push
jbe
cmp
mov
xchg
mov
xchg
lcall
pop
clc
mov
test
repz
mov
mov
jg
testl
inc
inc
cmp
pop
sahf
ds
xchg
lret
mov
fs
or
loope
outsb
lods
jnp
sbb
xchg
cmp
jmp
fadds
inc
xor
popf
push
icebp
mov
or
jns
mov
jle
fnstenv
xlat
inc
cmp
mov
push
jbe
mov
sub
andl
test
pushf
ror
daa
jg
push
ds
vpandn
xor
push
push
and
sub
test
popa
scas
push
pop
or
jge
push
cmpsb
nop
mov
movsb
xchg
ret
sbb
out
sbb
cmp
lods
fcoms
mov
lret
adcl
stc
cli
daa
aaa
mov
push
arpl
rorl
xor
js
sub
leave
xchg
in
into
andb
fldcw
arpl
testl
inc
mov
jb
dec
pop
inc
xchg
and
jb
out
xchg
push
cmpsb
dec
leave
data16
jne
daa
xchg
icebp
sub
aad
out
fcompl
popf
push
mov
add
std
mov
call
add
xchg
cmpsl
imul
aaa
jmp
mov
or
cli
int
jae
cmp
add
sbb
outsl
fwait
xchg
test
push
ds
xchg
dec
andb
or
scas
inc
enter
gs
cmp
clc
pop
cmpb
add
push
out
jnp
ljmp
push
jmp
mov
imul
mov
xchg
and
gs
stc
dec
mov
adc
cmc
inc
cmpsl
and
daa
dec
xor
lahf
push
iret
inc
dec
and
hlt
bound
int
sbb
lea
add
xor
nop
jmp
mov
es
arpl
stos
cmp
fsqrt
call
pop
pop
jmp
inc
sub
jb
shlb
jnp
push
jl
or
mov
enter
loop
outsl
icebp
in
add
pop
pop
add
fisttpl
xor
push
jg
mov
and
xchg
mov
fwait
adc
bound
pop
xchg
int
adc
xchg
push
sub
subl
testl
mov
xchg
sahf
jmp
xchg
push
mov
push
jne
inc
xchg
repnz
lock
adc
sub
or
ret
jae
ljmp
cmpsb
loopne
sarb
ljmp
mov
cmp
iret
push
and
jge
xlat
lret
pop
stos
and
jns
frstor
or
int3
xlat
or
and
dec
ss
imul
repnz
cmpsl
pop
or
or
popf
mov
lock
sbb
fistpll
mov
xor
iret
sbb
insb
jae
faddl
push
js
je
pusha
mov
vpmaddwd
inc
push
dec
test
cmp
in
adc
pop
lea
jge
out
push
rcll
dec
call
sub
cmp
pop
scas
addb
aas
jecxz
ret
or
arpl
inc
sbb
mov
mov
inc
mov
dec
cmc
rcl
push
push
in
or
pop
arpl
mov
aam
les
test
enter
pushf
addl
xchg
xlat
adc
adc
lods
or
test
dec
mov
push
jns,pt
aaa
enter
jl
loope
push
jmp
jl
add
pop
js
sahf
or
clc
adcb
push
fidivl
jne
mov
pop
sbb
mov
out
popa
ljmp
icebp
pop
rorb
cs
mov
push
xchg
imul
mov
ljmp
xchg
loope
xchg
mov
imulb
sub
xchg
inc
cmp
mov
push
jecxz
aam
sub
and
aaa
jle
jg
test
test
and
inc
ret
pop
imul
pop
cmpsb
fwait
out
jo
mov
adc
sub
filds
movsb
filds
fcoml
popa
mov
jp
mov
xor
mov
out
ret
sarl
imul
mov
jp
cmp
insl
in
cmp
mov
mov
fcomps
daa
ret
adc
add
sub
sbb
mov
add
out
std
dec
in
ret
or
push
mov
inc
repnz
sbb
int3
pop
testl
xor
push
das
mov
xor
sub
dec
add
mov
dec
in
ret
jecxz
pop
clc
adc
mov
xor
shl
xchg
and
mov
or
jmp
fcomp
jmp
xor
outsb
sbb
into
ret
dec
mov
insl
fidivl
rorl
aad
sahf
sbb
jg
ffreep
imul
jno
int3
sahf
xchg
push
inc
faddl
icebp
jbe
push
jp
push
adc
frstor
xchg
push
in
push
loop
xchg
inc
push
pop
push
icebp
inc
orl
mov
fs
add
mov
push
rorb
pop
and
cmp
jo
lods
mov
mov
mov
into
pop
or
in
stos
sbb
mov
in
mov
sub
mov
add
in
pop
or
cld
cmpsl
add
push
pop
inc
dec
fucomi
fisubs
add
mov
in
xor
or
mov
xchg
mov
rcrb
lss
xor
icebp
xor
push
leave
cmpsl
mov
dec
dec
dec
addr16
cmp
dec
movb
dec
adc
inc
push
dec
sub
jecxz
stos
push
leave
mov
pop
test
add
addl
outsb
adc
inc
out
adcl
push
loope
ja
jno
jg
jae
fcomi
cmpsb
pop
in
sub
fimull
aas
mov
pop
add
loopne
movsl
mov
in
xchg
aam
cmp
sub
mov
mov
push
adcb
aas
cwtl
push
inc
push
mov
into
popf
or
xor
enter
or
adc
and
cli
testb
cwtl
iret
and
xchg
ret
subb
jecxz
push
dec
loopne
jl
dec
dec
sbb
pop
shlb
push
mov
pushf
and
add
negl
rcrb
pop
jge
pushf
sbb
mull
int3
mov
inc
push
xchg
das
xchg
int
sub
and
insb
cmp
jnp
ja,pt
adc
add
stos
and
and
mov
sub
xor
mov
xor
lahf
jle
sti
call
in
inc
xor
pop
push
push
pop
xor
cmp
mov
push
push
jmp
leave
lret
data16
in
ret
adc
outsl
jmp
dec
jae
outsb
push
rorb
int
sub
adc
leave
adc
inc
mov
femms
jle
adc
pop
mov
jno
pop
test
sub
mov
test
lea
outsb
dec
or
mov
jo
lods
pop
andb
mov
add
add
aas
loope
fsubrs
in
add
mov
inc
fstpl
cli
mov
mov
sarl
cmp
sti
dec
fmulp
pop
jge
add
jg
mov
mov
pop
or
add
adc
les
xor
mov
jg
push
insb
xchg
jecxz
sub
and
incb
dec
test
adc
imul
je
sub
cli
add
pop
outsb
cmpsl
imul
xor
cs
adc
rolb
mov
rorl
and
adc
into
cmp
cld
push
clc
inc
dec
pop
mov
outsl
and
jae
dec
roll
int3
dec
cmp
in
pop
mov
push
fadds
or
ficompl
or
add
lds
cwtl
inc
sarl
xlat
adc
rcrb
lods
mov
mov
xor
add
call
lahf
mov
scas
xor
clc
jne
popa
sub
arpl
jle
pop
cs
test
sbbb
popl
mov
enter
pop
not
jecxz
mov
mov
out
push
aad
lcall
imul
xchg
xchg
xor
inc
inc
mov
loopne
push
or
pop
push
es
aam
sub
and
jecxz
pop
xor
stc
xchg
por
je
pushf
popa
mov
call
adc
dec
cwtl
movhps
addl
mov
mov
repz
jns
fwait
clc
xchg
push
fsubrl
mov
iret
scas
cld
aad
fidivs
filds
cltd
jns
stos
mov
lret
popf
arpl
mov
lret
mov
jmp
call
mov
js
in
jns,pn
sub
sbb
das
add
adc
push
mov
inc
and
pusha
pop
popa
cmp
pusha
mov
jno
jecxz
add
bound
loope
dec
adc
xorb
add
mov
mov
mov
popf
jns
enter
jb
inc
js
jg
mov
gs
sub
in
int
lods
shll
adc
clc
xlat
loopne
insb
xlat
aam
mov
lret
sbb
push
pop
inc
jo
aad
aad
pop
xor
fidivrl
mov
rcrl
xchg
and
idivl
jmp
jmp
ss
push
add
mov
arpl
loopne
xchg
push
pop
hlt
add
aaa
jns
aaa
sbb
cmp
sub
fcmovb
dec
orl
mov
dec
sbb
push
fsub
pushf
xlat
jge
add
xor
icebp
sbb
out
in
aaa
xchg
aas
dec
sarb
shrb
pusha
mov
push
stos
icebp
enter
outsb
sbb
adc
inc
loopne
nop
adc
out
dec
test
push
jge
and
aam
ret
in
push
jne
aam
sub
or
inc
or
into
mov
stc
mov
sub
xorl
dec
xor
mov
cmc
enter
cld
popf
push
mov
inc
push
adc
push
mov
pop
fnstsw
jg
mov
jnp
and
out
xchg
jmp
mov
cmp
mov
ficomps
inc
inc
arpl
out
sbb
inc
cs
in
push
sarl
cmp
out
cmpsl
xor
and
outsb
es
push
sbb
mov
cmc
jb
sbb
insb
gs
jecxz
cmp
xor
sub
sarb
popa
or
shlb
ret
jg
cli
cmpsb
jp
push
sbb
scas
push
mov
in
mov
and
and
xchg
fsubs
aas
xchg
addr16
jb
mul
adc
mov
sub
xchg
out
stc
hlt
mov
pop
ds
ds
sub
xor
xchg
test
js
mov
dec
mov
and
add
out
fcoms
lahf
lahf
mov
bound
addr16
lock
subb
add
jle
ss
gs
inc
dec
cmc
jp
cmpl
add
shlb
aaa
icebp
mov
ret
jg
rcrb
fiaddl
enter
add
pop
mov
mov
adc
mov
jno
jmp
mov
cmp
fwait
adc
mov
pop
adc
lret
or
mov
int
mov
push
cmpl
movsl
xchg
jmp
icebp
std
jae
sub
push
push
int3
cwtl
sub
mov
rol
push
call
call
stos
in
pop
lods
rclb
cmp
xor
stos
pop
lahf
sbb
popf
jl
sbb
dec
cli
stos
out
and
incl
scas
lock
int
push
inc
cmpsb
ret
xor
mul
jno
out
pop
inc
sarl
cmp
mov
xor
add
or
xchg
mov
cmc
jg
inc
lret
sbb
cs
push
repz
outsl
int3
pop
mov
jp
gs
mov
inc
dec
jo
aam
fwait
or
and
mov
testb
and
mov
jp
das
psadbw
sub
lahf
pop
inc
xor
mov
fwait
les
iret
fwait
adc
sti
setae
or
sub
cs
push
push
dec
pop
das
jecxz
adc
push
mov
out
sub
cmpsb
rcrl
pop
int3
add
xlat
outsl
das
push
mov
sub
ss
push
sbb
jle
pushw
lret
in
push
dec
fimuls
jnp
test
mov
cmpsl
dec
mov
and
scas
mov
pop
divl
jno
sub
test
data16
jo
stos
or
movsl
sub
add
mov
cmpb
ljmp
lods
shll
aam
cmp
cwtl
pop
xchg
mov
stos
nop
add
jnp
cmp
bound
sti
jp
ret
std
icebp
add
lock
pop
insb
in
fwait
push
or
ja
sub
int
jg
nop
jo
and
data16
dec
pop
das
push
mov
cmp
lds
add
pop
mov
fbstp
insb
dec
mov
cli
mov
xchg
cmp
aam
rorl
pop
or
mov
pop
test
sbb
jb
insb
movsb
push
cmp
fidivrl
mov
iret
cmpsb
roll
jmp
dec
xchg
sub
loop
fs
adc
xchg
cmpsb
movsb
inc
inc
jge
mov
xchg
loop
js
fsts
imul
jne
fwait
pop
jl
mov
shr
cwtl
jecxz
fnsave
insl
or
lahf
ret
into
push
sub
inc
mov
jns
shlb
xor
xor
pop
outsl
cmpsl
jl,pn
xchg
loop
xor
mov
into
adc
mov
jge
cmp
lods
lret
in
xchg
pop
jmp
add
imul
subl
aaa
scas
adc
aam
xor
inc
dec
inc
insb
sahf
gs
roll
gs
lock
xchg
or
dec
or
ds
incb
stos
roll
cld
mov
push
xchg
stos
addr16
cwtl
adc
lock
xchg
pop
repnz
push
xchg
pop
xchg
fisubl
into
xor
jb
rorl
pop
mov
pop
add
cltd
clc
movsb
push
jns
xchg
dec
sti
or
pop
mov
sahf
fimull
mov
mov
lea
cld
repz
lcall
pushf
jo
jge
push
xor
push
and
rcrl
sbb
ljmp
pop
imul
movsl
push
stos
sbb
rorb
test
sbb
std
inc
pop
mov
adc
fcmovnu
mov
pop
mov
leavew
xchg
shll
movsl
jnp
lret
mov
inc
fmull
push
sahf
dec
push
sbb
fcmovu
pop
mov
leave
in
adc
pop
mov
rolb
pop
add
pop
jl
adc
push
adc
das
imul
dec
xchg
adc
inc
pusha
pop
into
mov
notl
dec
shr
and
sbb
aam
not
sub
lret
test
orb
mov
push
inc
xor
cli
or
movsl
jle
cmp
mov
mov
push
pop
add
mov
pop
out
sub
mov
push
xchg
fdivrp
insb
stos
push
sbb
xchg
add
enter
add
jns
mov
push
in
xchg
sub
loopne
sbb
jecxz
sub
or
data16
test
rorb
inc
dec
mov
jge
rcrl
jns
xor
mov
inc
jl
sti
cmp
sbb
loopne
aam
aaa
push
mov
mov
xor
push
pop
mov
or
xchg
sbb
sbb
mov
jno
jmp
sub
out
push
scas
lods
pop
dec
mov
push
out
repz
jno
lods
sbbb
xchg
push
pop
dec
push
cmpsl
shll
mov
out
xchg
inc
xlat
insb
or
xchg
adcl
shlb
nop
push
repz
rcrl
test
test
movsl
or
xchg
mov
cmp
mov
and
adc
xor
idiv
test
out
and
imul
scas
in
jmp
pop
das
mov
push
add
shlb
push
repnz
fisttps
sbb
pop
push
jl
ss
repnz
push
cmpsb
into
movsb
adc
negl
popa
add
adc
in
pushf
push
fimull
xor
shrb
xor
sti
outsb
inc
jl
or
gs
inc
into
jl
scas
outsb
inc
movsb
int3
dec
dec
icebp
push
adc
sbb
pop
ds
xchg
sahf
mov
daa
pop
push
pop
cmpb
xchg
repz
lock
mov
test
mov
inc
out
push
popa
dec
ror
orl
mov
aam
adc
jg
or
mov
mov
push
inc
sub
cli
bound
push
fsubp
mov
cltd
mov
adc
data16
out
addr16
dec
xchg
push
dec
out
scas
out
loope
jge
gs
jnp
outsl
cmp
mov
inc
and
pop
adc
cmp
fmull
add
add
sbb
pop
push
sub
or
dec
pop
jnp
lret
pop
jmp
xlat
xor
lahf
icebp
mov
add
mov
addl
aad
sub
cmp
mov
and
sbb
xchg
xchg
mov
mov
jo
adc
mov
je
fisubrl
add
dec
into
rolb
push
inc
mov
mov
mov
insl
out
push
daa
dec
jbe
aam
mov
mov
and
xor
mov
add
int
fisubrl
leave
inc
xchg
cld
aaa
or
xor
imul
scas
je
out
sbb
aas
jle
sub
int3
xchg
xor
jns,pt
cwtl
out
mov
or
and
aas
or
mov
push
dec
adc
adc
mov
sub
test
jne
pop
jecxz
mov
mov
fsubl
lret
lods
cmp
call
dec
rcl
lods
xchg
mov
push
jo
repnz
bound
push
rorb
clc
test
xchg
jmp
or
pop
in
mov
imul
bound
mov
divb
jp
sbb
push
adc
adcb
popa
push
cmp
in
mov
ds
mov
ljmp
mov
stos
cli
das
lcall
lea
outsl
add
das
sbb
lret
in
mov
and
cld
cmpsb
fs
out
pusha
loopne
filds
aad
outsl
or
mov
cmp
mov
cmp
movsl
lret
inc
or
mov
and
mov
loopne
push
stc
enter
or
push
mov
lock
rolb
jae
fwait
popa
aaa
cmp
std
cmp
sbb
mov
aaa
add
inc
scas
int
les
mov
subl
dec
sub
add
jnp
xorps
lods
sbb
cmpsl
mov
mov
push
iret
out
add
pop
jae
jp
loopne
negl
xor
mov
lret
mov
sbb
scas
ljmp
sbb
aas
cld
push
adc
std
xor
stos
jp
daa
mov
ret
add
ja
xor
xor
mov
outsl
loope
dec
mov
xor
ficoml
inc
lock
dec
pop
xor
cmpl
fisubrl
aam
mov
fs
sahf
test
jo
and
mov
jle
inc
mov
xchg
in
dec
dec
sub
out
hlt
fldcw
aas
jl
outsb
and
jle
divl
dec
aam
loopne
push
xor
stos
pop
cmp
adc
fimull
jne
or
add
loope
adc
outsb
dec
movsb
fmuls
and
std
outsb
add
cmp
out
mov
adc
ss
out
fdivrp
iret
mov
inc
cmp
sub
pusha
push
mov
inc
inc
and
inc
cmpsb
lret
dec
subl
cmp
inc
outsb
and
int
dec
ret
lods
std
xor
jne
jb
push
repnz
inc
addr16
fildll
in
jns
call
mov
or
jg
bound
in
push
cltd
movsl
dec
push
into
cmp
lahf
mov
jbe
lcall
cmp
inc
out
scas
das
push
js
insl
ret
mov
mov
dec
popl
mov
dec
xchg
jmp
movsl
xchg
ds
in
and
cmp
mov
testl
push
mov
addl
push
call
adc
lods
sub
mov
adc
push
jp
shlb
sub
out
aas
push
inc
dec
cmc
js
and
aam
mov
rorb
aas
or
xlat
stos
adc
xor
mov
add
mov
sub
mov
incl
lods
bound
and
cmc
sbb
add
xor
test
cld
add
push
add
sbb
mov
dec
mov
xchg
push
incb
popf
sbb
js
mov
adc
js
lahf
pop
int
hlt
jnp
xchg
fcomps
mov
mov
mov
out
mov
sub
or
int
fisttps
fistpll
pop
xorl
mov
je
dec
in
call
push
mov
push
shlb
jb
and
test
xor
mov
mov
and
sarl
mov
testb
gs
mov
decb
in
pop
push
sahf
adc
clc
dec
test
xchg
bound
divl
xchg
jp
mov
shll
cmp
mov
in
xchg
jmp
into
or
mov
and
mov
adc
sub
cmpsl
mov
xchg
in
dec
jge
cld
cmp
sbb
lods
mov
repz
or
ss
mov
movsb
xchg
dec
repz
and
cli
sub
cmp
inc
xlat
shrl
sub
icebp
ficoml
scas
das
xchg
jp
mov
and
pop
out
out
daa
shlb
pop
fidivrs
repnz
fisttpll
repnz
mov
sbb
out
cld
je
scas
push
mov
roll
out
pop
fwait
lcall
sbb
pop
mov
adc
adc
adc
mov
push
mov
jl
mov
inc
pop
push
jp
outsw
mov
add
push
rcrl
lret
int
insl
xor
stos
leave
jle
inc
hlt
jl
in
popf
ja
imul
lcall
sbbl
cli
popa
jmp
roll
mov
or
push
cwtl
rcrb
repz
in
nop
int
pop
cmp
je
les
mov
jbe
mov
scas
xor
push
aaa
sub
out
jno
mov
push
cmpsl
cmovle
push
adcb
lods
push
filds
fcmovbe
pusha
in
push
clc
or
push
xchg
aas
rclb
xchg
fsubrs
inc
cli
imul
frstor
xchg
push
lret
scas
lods
popf
dec
jno
ja
inc
mov
out
jbe
or
xchg
mov
mov
mov
je
mov
inc
adc
mov
sbb
cltd
mov
inc
fmull
fistl
mov
data16
repz
jp
jmp
adc
je
frstor
aas
in
jb
js
sub
movsl
or
lahf
adc
cmc
mov
fidivrs
movsl
inc
out
shr
pop
int3
in
cs
pop
bound
ror
xchg
dec
lcall
xchg
std
pop
leave
movsl
imul
jl
xchg
rcll
aam
dec
sti
xor
xor
std
push
shld
sbb
icebp
xor
push
mov
sbb
addr16
mov
pop
insl
xchg
xchg
mov
jne
mov
dec
mov
xor
fildll
sbb
das
mov
shll
scas
adcl
push
sbb
fimuls
xchg
sbb
or
movsl
pushf
imul
jp
push
callw
imul
mov
sub
jmp
hlt
out
inc
mov
xchg
xor
mov
cli
mov
addr16
sahf
andl
dec
lahf
addr16
mov
ret
addl
cwtl
push
inc
jne
out
adc
and
xlat
pop
inc
call
xchg
sbb
jno
repnz
iret
clc
push
loopne
mov
test
test
jne
jbe
add
and
jmp
jg
shlb
or
sarl
mov
loope
jnp
dec
push
gs
push
insl
icebp
inc
jl
das
fwait
pushf
js
shr
cmp
jae
push
ret
cmp
pop
pop
xorl
xlat
fnstsw
fwait
mov
cmp
stos
ds
mov
pop
adc
jbe
test
std
jp
jmp
mov
ds
mov
cmp
fs
lock
xlat
mov
sub
lods
xor
xor
dec
mov
xor
jp
outsl
out
repz
add
fdivrs
out
pop
imul
movsl
cmp
aaa
cld
aas
fildl
mov
jae
mov
push
push
inc
xchg
rcrl
cmpsb
sti
rclb
icebp
pop
xor
scas
pushf
aad
mov
int3
cmp
jbe
test
and
or
xchg
call
push
sbb
cli
fisubl
into
xchg
inc
cltd
push
dec
jnp
sbbl
and
ficoml
mov
add
movsb
fmull
call
ds
in
idivl
pop
test
in
ss
sub
xchg
inc
stc
mov
mov
mov
and
sbb
popf
mov
mov
add
mov
ljmp
loopne
xchg
sub
cmp
loop
and
cld
jmp
add
or
sub
jne
int3
ljmp
shrl
lret
xor
dec
mov
leave
outsb
inc
pushf
outsb
pop
data16
lods
pop
inc
lods
adc
pop
pop
ret
popf
xchg
outsb
out
int
into
cmc
dec
inc
test
mov
aaa
mov
pop
mov
xorl
lock
int
addr16
test
jo
pop
imul
clc
stc
xor
push
mov
cs
mov
xchg
stos
push
cmpsb
in
cmp
fsubs
lret
fdivrs
xor
ror
dec
iret
int
jecxz
pop
mov
sahf
inc
es
stc
or
push
fisubl
bnd
dec
mov
in
imul
pop
cmpsb
movsl
dec
jmp
jno
dec
cli
cmpsb
data16
loope
mov
jno
adcb
or
add
mov
repz
test
lahf
xchg
test
or
and
ret
inc
hlt
pop
les
pop
pop
mov
ljmp
xor
jbe
loopne
loopne
loopne
pop
xchg
xorb
jne
jmp
fistps
or
push
jae
psubb
cmp
cltd
pop
jle
mov
mov
dec
iret
les
and
cwtl
sub
test
enter
xor
hlt
mov
mov
mov
xchg
jbe
adc
and
adc
pop
je
and
test
icebp
pop
and
lods
cmp
and
mov
sbb
and
imul
adcb
ss
in
cwtl
mov
jmp
icebp
mov
lods
loopne
cmovb
out
scas
cmp
mov
jae
xchg
dec
mov
jg
rcl
popf
int
leave
pop
dec
jg
and
sarl
cmp
or
iret
aas
leave
pop
and
push
sbb
push
ljmp
je
inc
dec
push
xlat
out
sbb
shll
xlat
sbb
mov
mov
pop
jg
pop
sub
fistpll
mov
xchg
mov
adc
dec
inc
push
pop
mul
aaa
and
cmpl
cs
in
push
inc
cmp
mov
popa
cmpsb
out
pop
mov
xchg
cmp
dec
sub
jae
mov
shrb
movsb
adc
inc
shrb
jge
sarb
jge
mov
cmp
add
dec
imul
or
jp
jle
sub
arpl
adc
sub
dec
adc
xchg
xor
push
les
daa
jg
mov
sbb
ficoms
bound
js
filds
xchg
mov
sub
lods
imul
lret
inc
adc
sub
jo
stos
sbbb
cmp
in
mov
mov
pop
into
mov
or
sbb
insl
pop
daa
pop
dec
jns
jl
pop
daa
xchg
and
sub
or
mov
lods
out
dec
fists
mov
add
loope
push
mov
repnz
fbstp
int3
xchg
jno
push
pushf
imul
ds
mov
mov
bound
in
and
call
and
imul
sbb
sbb
mov
in
pop
clc
cld
cli
add
dec
sti
sarb
lcall
es
pop
sub
fildl
xor
push
mov
xor
fucom
jbe
aam
ret
mov
imul
pop
dec
mov
pop
inc
arpl
mov
inc
inc
repnz
mov
pushf
push
pusha
test
or
and
mov
shl
ljmp
mov
and
sahf
push
in
cli
int
mov
notb
mov
add
sbb
push
xchg
jle
fucomp
add
pushf
aam
add
jle
adc
push
xor
adc
scas
sbb
inc
jecxz
jo
movsl
add
sub
cmpsl
lcall
loopne
iret
sbb
or
xchg
ljmp
aas
pop
inc
mov
cmp
in
inc
dec
dec
push
je
cmpl
and
fidivs
sbbl
jbe
decl
pop
inc
lret
pop
outsb
shll
xchg
xchg
roll
dec
add
sbb
out
jbe
in
sarl
lret
dec
and
push
jnp
gs
popa
out
xor
sub
mov
jne
inc
cs
cmp
adc
pop
lods
inc
adc
insl
push
xchg
add
nop
mov
push
fimull
jg
imul
lret
dec
push
in
insl
test
mov
and
and
aas
jbe
mov
mov
mov
lock
mov
xadd
test
outsl
enter
aas
cwtl
mov
rol
cmc
imul
add
movsb
push
imul
mov
and
mov
pusha
cmp
negl
rolb
or
add
adc
cld
je
pushf
sbb
cmpsl
sbb
jns
jo
mov
adc
pop
push
arpl
and
fs
inc
dec
gs
sti
mov
adcl
ret
push
rolb
aas
into
dec
adc
jmp
mov
pop
pop
loop
mov
clc
cmc
ljmp
call
fcmovbe
and
mov
add
dec
fiaddl
cmp
inc
or
or
fcompl
add
dec
sti
sbb
mov
push
add
fs
sbb
jbe
mov
popf
jne
xchg
sbb
mov
jmp
rorl
push
mov
jns
jae
pop
jl
mov
test
jbe
mov
repnz
test
jae
dec
cwtl
cltd
mov
cmp
push
dec
inc
xor
xchg
pop
adc
sbb
dec
cmp
dec
xchg
stos
in
add
cs
xchg
inc
sarl
test
cmp
push
sub
pop
sti
je
outsl
jns
and
dec
lcall
mov
or
dec
xor
xor
inc
xor
mov
jb
js
push
jecxz
lret
adcb
mov
fdivr
push
cwtl
scas
pop
inc
nop
inc
fldenv
dec
sub
or
dec
adc
scas
jns
out
cmpsb
fstl
sbb
add
imul
mov
adc
stos
pop
subb
sub
xlat
cmpsb
hlt
je
jbe
inc
repz
fucomip
scas
push
mov
mov
pop
fistl
push
xchg
pop
stc
cmpsb
ss
sbb
push
dec
sub
jbe
jb
fsubrp
xlat
sub
hlt
jae
jmp
cmp
testb
cmc
add
jmp
pop
mov
out
popf
out
dec
mov
add
mov
mov
cmpsb
adc
and
aaa
mov
push
std
lods
daa
mov
repz
repnz
add
es
es
cmc
aas
aam
in
push
xchg
cmp
cli
std
cmpsb
stos
inc
aas
imulb
mov
ret
sub
xlat
inc
aam
cli
push
int
sbb
pusha
popf
add
push
xor
hlt
push
out
out
stos
idivl
mov
les
or
or
mov
cltd
mov
loopne
push
xchg
xor
pop
stos
jp
xchg
pop
cmc
cli
mov
cmpsb
cwtl
hlt
out
js
out
push
push
mov
stc
aas
add
icebp
aas
movsb
mov
insl
mov
dec
popa
pop
push
jmp
xor
push
mov
cmp
cld
andl
add
fnstsw
leave
mov
js
fwait
cltd
ret
and
pop
jb
xor
jns
dec
dec
jbe
cmp
add
sbb
lahf
call
outsl
test
or
push
fdivl
loopne
test
and
jo
fstpl
adcl
add
mov
push
xchg
aaa
pusha
add
iret
push
pop
adc
push
adc
mov
and
cwtl
push
mov
cltd
mov
xor
cmp
xor
lahf
repz
jle
pusha
fnsave
mov
push
adc
cmp
shll
in
fst
xor
lds
aam
push
push
jmp
xchg
es
and
std
mov
leave
iret
test
xchg
pop
adcb
push
ret
mov
or
lahf
add
pushf
movsb
sub
push
xchg
jns
jecxz
aaa
push
lea
jo
xorb
sub
mov
push
jg
or
lea
out
sbb
push
int3
pop
out
imul
into
rolb
movsb
hlt
dec
add
cmp
dec
test
and
and
iret
stos
push
and
das
std
or
jo
xor
pop
sbb
dec
jle
xchg
push
mov
pop
adc
sbb
inc
dec
lods
jmp
mov
cmp
pop
fbstp
sbb
cmp
mov
jp
inc
outsl
outsb
test
push
mov
xor
mov
decl
sbb
pop
dec
xchg
inc
push
or
or
stc
scas
leave
pusha
addl
je
jge
shr
push
jae
and
jg
lods
mov
inc
mov
mov
outsb
dec
sub
popf
sub
out
dec
or
xor
stos
mov
cwtl
nop/reserved
sti
cmpsl
adc
aas
adc
test
leave
movsl
xchg
cmp
stc
push
or
pop
dec
iret
icebp
jae
mov
ret
dec
bound
and
addr16
icebp
xor
add
hlt
adc
nop
cmp
sbb
inc
out
mov
mov
dec
daa
or
sbb
ds
add
ror
sub
inc
sbb
andl
jne
sub
outsl
gs
mov
enterw
jmp
imul
push
leave
inc
push
xchg
sub
pop
mov
mov
shll
push
sti
cld
mulb
add
pop
xchg
in
insl
xchg
fisttps
xor
into
lret
test
sub
add
jne
sub
xchg
mov
call
sbb
stos
pop
xchg
inc
stc
jnp
mov
push
or
xor
fnsave
dec
dec
cmc
add
into
inc
xorb
push
mov
jmp
push
movsb
ja
stos
mov
push
icebp
call
ds
jae
and
push
stos
fs
data16
cmp
mov
add
sub
sub
mov
mov
fs
cmpsl
cmpsw
cwtl
add
xchg
inc
dec
pop
jle
aas
jb
cltd
add
sbb
popf
inc
aaa
in
enter
dec
nop
loop
mov
sbb
arpl
out
call
imull
int
clc
aad
mov
jae
enter
xchg
push
cmp
mov
sub
or
ljmp
pop
and
or
push
and
icebp
lret
cmp
mov
push
lret
in
mov
popf
sub
mov
push
xchg
sub
mov
dec
test
jg
cmp
jbe
sti
fisubrs
cmp
outsl
stc
lahf
dec
mov
jecxz
jne
fs
cwtl
mov
mov
fwait
inc
sub
push
push
jno
icebp
pusha
ds
mov
pop
scas
mov
add
pop
adc
fs
jne
test
lds
cli
jge
adc
push
and
cmp
lahf
jl
daa
repnz
rcr
mov
ss
sbb
or
pop
fidivl
pop
pop
jae
gs
ds
and
cmp
sbb
fdivrp
or
icebp
inc
sar
dec
hlt
outsb
xchg
lods
lods
mov
mov
dec
cmpsb
dec
mov
push
jnp
or
jno
push
fbld
pop
xor
pop
mov
loopne
mov
enter
cltd
and
jae
popf
lret
sbb
dec
mov
int
pop
stc
pop
xchg
cmpsl
addr16
imul
mov
rcrb
ret
dec
push
movsl
xor
adc
mov
cmp
push
xorb
scas
xchg
and
add
test
dec
sbb
js
inc
dec
push
and
aaa
mov
and
push
push
int
negb
outsl
in
aaa
addr16
mov
adcl
lcall
leave
and
inc
pop
sahf
jg
push
xchg
or
bound
xlat
cli
cmp
cmpsl
out
ss
stos
data16
push
lea
xor
lret
int
ja
test
or
ds
ss
jle
or
cmpsl
orb
sub
inc
sub
add
xchg
rcll
push
sarb
pop
cld
inc
mov
cmc
ret
fildll
stos
xor
lret
xchg
orb
out
repnz
cmpb
dec
mov
or
sbb
test
mov
jb
rol
jl
xchg
ret
adc
xlat
mov
cmpsl
xchg
cmp
dec
es
ret
xchg
cmp
cli
enter
dec
xchg
cmpsb
arpl
and
sbb
jo,pt
jbe
enter
aaa
int3
vmulpd
push
popa
test
outsb
ret
or
in
test
push
lock
cmp
icebp
rorb
call
pop
stc
bound
fdivs
xor
outsb
mov
cli
or
mov
movsb
lds
fadds
cld
aad
sub
ret
inc
int3
and
pop
jp
xchg
shlb
push
sbb
xchg
xchg
fwait
int
test
and
repnz
fidivl
iret
lods
xlat
lahf
nop
mov
jno
ret
fwait
push
push
rcl
loop
and
std
push
add
cld
dec
iret
enter
je
std
aad
pop
icebp
add
adc
and
cwtl
fisubl
call
xor
daa
cmp
jbe
out
cmc
pop
test
jl
mov
int3
rcrb
dec
and
cmp
pop
xor
mov
mov
mov
or
sti
ljmp
test
movsb
jg
outsb
stc
and
mov
dec
push
arpl
mov
pop
test
adc
dec
sub
repnz
push
scas
call
and
movsl
push
dec
adc
leave
repz
aam
push
sbb
xor
popf
cltd
pop
sub
and
add
in
pop
std
inc
mov
and
sti
popf
rolb
pushf
jno
lock
sti
mov
adc
push
cs
ret
dec
call
jns
in
jnp
mov
adc
jb
push
loop
inc
xchg
rcl
mov
test
xor
jbe
mov
xchg
sahf
imul
dec
cmc
idivb
leave
in
dec
inc
movsb
fdivs
stos
test
leave
pop
mov
ss
mov
adc
ret
cmpsb
add
popa
aam
mov
sbb
js
and
lahf
es
and
icebp
int
nop
cmp
mov
lock
mov
hlt
jge
xchg
mov
xchg
push
mov
into
loopne
aas
addr16
lods
push
xchg
jp
xchg
aad
cmp
push
in
xchg
scas
test
in
cvtpi2ps
xchg
xchg
in
data16
fdiv
xchg
ja
jg
dec
loop
mov
adc
shrl
jp
adc
adc
in
sub
jbe
pop
rcrb
mov
cmp
and
fistps
pop
repnz
xchg
jo
inc
or
jns
lret
xor
cmc
mov
stos
ljmp
xchg
mov
aam
imul
jmp
cmp
xlat
xor
mov
mov
xchg
cmc
stos
out
ja
cld
dec
mov
mov
mov
call
rorl
fcompl
js
fwait
dec
subb
ficomps
cmp
rorb
sbb
mov
fdivp
push
mov
push
fldenv
addl
mov
add
imul
arpl
xchg
mov
sbb
or
dec
scas
nop
popf
mov
in
cs
mov
xlat
sar
adc
sbb
inc
gs
ss
fcomps
cmp
or
dec
jge
filds
mov
mov
adc
popa
sbb
dec
in
in
popl
push
nop
lods
mul
pop
adc
movsb
jmp
cmp
in
pop
jbe
xor
add
les
fcmove
xorl
pop
enter
jno
push
pop
mov
push
clc
lods
jne,pn
ffreep
mov
stos
jne
adc
fnstsw
test
mov
cs
imul
mov
dec
shll
lret
nop
stos
jnp
add
lea
pop
mov
out
idivb
cmpb
scas
xor
or
popa
aaa
push
les
int3
mov
xchg
dec
sbb
int3
movsb
dec
and
mov
or
sbb
sub
test
daa
add
movsl
or
or
jmp
lock
or
mov
or
inc
jnp
push
or
cmpsb
xchg
sub
cmp
clc
adc
mov
outsl
push
das
and
ret
mov
pusha
sbb
push
xorl
xchg
xor
xchg
addr16
adc
jnp
scas
data16
or
ja
filds
mov
fcomps
pushf
mov
and
jb
fmull
xor
fistps
fidivs
call
mov
into
fdivrs
repz
inc
xchg
inc
dec
sub
or
ds
xchg
pop
mov
pop
jns
jo
out
aas
jp
ja,pt
sbb
rorb
or
xor
aas
adc
xchg
in
mov
xchg
and
rcll
adc
pop
frstor
jmp
sbb
adc
jns
push
scas
js
sub
push
test
adc
stos
jo
or
sub
adc
mov
mov
cmp
or
add
cld
xor
into
jo
mov
mov
jl
popf
and
push
mov
sbb
cmp
lods
out
pop
insb
outsl
mov
int
lods
mov
cmp
sub
cmp
pop
fdivr
jae
int
jbe
imul
icebp
sbb
xchg
movsb
pop
mov
push
pop
add
xchg
aad
insl
std
dec
cmp
lds
leave
int
das
mov
je
adc
fisttpll
enter
scas
xchg
inc
push
mov
fdiv
mov
sub
dec
add
lods
jo
movsb
mov
inc
shrl
jnp
jl
arpl
icebp
push
inc
xchg
pop
fildll
js
dec
and
rclb
add
pop
inc
cli
loop
repnz
out
in
push
mov
mov
lahf
aad
cmpsb
mov
enter
enter
cld
loope
scas
iret
insl
neg
repz
mov
ss
inc
pop
test
loope
ljmp
push
dec
aad
jne
mov
cwtl
std
push
pop
pop
dec
fldt
mov
push
mov
imul
idivl
mov
stc
stos
jmp
fcmovnb
rolb
mov
dec
mov
jnp
movsl
and
jnp
sub
fstps
adc
sahf
in
mov
in
xchg
ja
dec
jno
lods
xchg
popa
stos
popf
dec
dec
jmp
xchg
mov
xchg
das
sbb
add
xchg
cmpsl
sub
fidivrs
jae
jne
in
loopne
sbb
xchg
cmp
fcmovne
lods
add
sub
fistps
dec
xor
pop
lcall
sbb
fistps
fucomp
stos
into
add
insb
scas
es
cmc
jp
out
dec
mov
cmp
sub
xor
dec
jne
out
mov
and
mov
sub
mov
mov
test
insl
imul
into
fldcw
or
movl
jae
jmp
pop
sub
cwtl
sbb
dec
sub
jbe
sub
lret
inc
sbb
sti
mov
mov
cmp
loopne
shlb
mov
inc
xchg
xlat
and
and
jecxz
push
adc
xor
push
sub
packsswb
mov
sbb
int3
and
push
std
lods
repz
cmpsl
inc
push
jge
xchg
push
lock
loop
das
insl
mov
test
stc
dec
negl
add
repnz
sub
push
es
mov
lods
jb
imul
idivl
jp
cmp
cmp
jp
in
jns
adc
test
fadds
xor
push
dec
addr16
dec
leave
lods
icebp
loopne
adc
pop
sbb
jmp
fmull
subb
push
push
mov
sbb
cmp
insl
out
rcrb
fdivrs
jae
or
div
test
jne
call
mov
mov
and
negb
in
mov
sbb
pop
inc
addr16
jbe
repnz
incl
mulb
dec
jbe
sub
cmp
sub
fldt
and
testb
cwtl
mov
xchg
out
xchg
repnz
push
jne
pusha
aam
sbb
aaa
mov
inc
test
mov
sub
mov
enter
les
nop
push
les
xchg
pusha
add
dec
repz
xor
sbb
inc
sti
dec
and
xchg
jo
inc
lock
jbe
jne
ss
dec
scas
or
xchg
adc
ret
lods
icebp
and
insb
adc
adc
sub
gs
fwait
adc
jo
cmpsb
jns
pop
lea
xor
jbe
cmpsl
out
out
popa
insl
xchg
push
pop
out
inc
repz
pop
mov
or
xchg
cmp
adc
mov
xchg
mov
and
icebp
mov
push
test
iret
movsl
pop
push
in
inc
mov
sbb
mov
loope
inc
rcr
push
mov
jecxz
into
out
add
mov
pop
or
rclb
inc
mov
scas
jg
shll
xor
sub
pop
imul
jo
sbb
or
mov
js
dec
sub
popf
loope
jecxz
std
lock
sahf
shrl
inc
inc
dec
cld
jae
and
cmp
ret
and
xchg
outsb
xchg
fiaddl
adc
mov
sub
pop
mov
jge
into
push
mov
out
jnp
adc
sbb
cmc
lods
dec
inc
mov
and
mov
dec
and
or
xchg
jp
aas
add
arpl
jecxz
sbb
add
sub
in
push
inc
push
stc
insl
xchg
jb
add
sbb
push
jg
js
popa
ja
add
in
pop
xlat
in
into
mov
mov
or
and
adc
sti
jae
adcb
inc
rcr
sub
sahf
xchg
pop
sub
repnz
test
repz
pop
fnstsw
sub
jno,pn
subb
mov
xor
mov
mov
nop
lods
lods
arpl
mov
mov
inc
mov
jnp
jecxz
pop
pushf
aaa
loop
cwtl
dec
sbb
movsl
out
icebp
inc
into
push
loope
mov
adc
outsb
fcompl
cmpl
jmp
decb
xchg
stc
lock
js
pop
adc
lcall
repnz
ja
pop
hlt
popf
int
daa
ljmp
jg
and
dec
cli
jle
mov
or
mov
xchg
xchg
into
inc
arpl
cmp
jb
fsts
aam
loope
sub
push
dec
sub
xchg
adc
or
xchg
das
mov
mov
scas
and
pop
jb
mov
je
lahf
xchg
mov
adc
popf
movsb
imul
sub
in
negb
shll
push
dec
repz
xchg
out
pusha
push
and
shlb
je
sbb
pop
repnz
int
mov
aas
adc
pop
ret
add
cmp
mov
pushf
sub
cmp
adc
mov
add
jge
and
hlt
scas
pop
add
inc
jmp
in
test
push
cmp
orb
ja
out
in
int
sub
pop
xchg
repnz
sti
mov
dec
cmp
in
inc
sub
ds
cmp
push
or
into
scas
mov
lcall
pop
aaa
sbb
mov
dec
testl
mov
cmp
loop
adc
sub
add
sti
and
and
cmpsl
push
push
dec
inc
mov
cmp
mov
sub
add
fnstcw
dec
shl
jecxz
push
pop
rorb
decl
insl
xlat
ja
adc
loopne
pushf
leave
inc
lds
idiv
mov
push
sahf
mov
fimuls
ljmp
inc
pop
mov
and
pop
pop
std
scas
jge
js
loop
imul
mov
or
and
pop
fs
lds
fs
out
cld
adc
cmp
jbe
sub
xchg
sarl
and
mov
inc
add
roll
fldt
js
ficompl
cmp
or
pusha
adc
mov
and
repz
loopne
imul
mov
jo
push
insb
push
shrl
adc
int3
std
in
mov
fimull
jl
mov
or
mov
outsb
and
jle
xchg
xchg
xor
or
and
sub
add
cmp
cmp
add
out
adc
cwtl
or
iret
inc
imul
out
into
ss
pop
xor
jo
fdivl
adc
and
cld
aad
add
mov
inc
mov
repnz
add
movsb
int
push
sbb
add
inc
inc
lock
mov
adc
int3
mov
mov
fs
xor
nop
push
mov
in
scas
test
adc
mov
mov
fcomip
or
cltd
das
add
sub
jmp
dec
bound
cmp
ja
add
in
or
ret
popa
call
pop
jl
cmp
data16
repz
jnp
jb
shrb
sbb
int3
mov
pop
xor
mov
test
and
mov
std
xor
scas
push
fs
push
jmp
rol
scas
add
inc
loope
outsl
sub
hlt
nop
pop
xchg
das
or
mov
push
popf
or
and
pop
push
das
ss
ret
ret
lods
jbe
dec
cltd
sub
xchg
mov
add
aas
dec
imul
push
pusha
loope
call
push
fs
mov
shr
fcompl
xchg
aad
cwtl
and
shrb
mov
out
sbb
xchg
sar
mov
mov
cmpsb
add
nop
xorb
outsb
mov
mov
pushf
mov
mov
divb
mov
and
fldt
pop
int3
jns
sbb
xchg
cmp
add
pop
stc
adc
jmp
cwtl
mov
sub
add
push
xchg
inc
sti
adc
clc
pop
adc
clc
cmp
imull
jo
push
ret
and
leave
std
shlb
cmp
and
in
xor
out
je
inc
jmp
sbb
idivb
kmovw
sti
enter
sbb
adcl
pop
jmp
loop
scas
shlb
daa
icebp
out
inc
push
gs
repnz
lock
pop
inc
data16
adc
pushf
inc
arpl
pop
cmp
cmp
negb
repz
sub
xor
mov
repnz
pusha
adc
cmc
scas
and
add
cmp
mov
mov
mov
fs
jecxz
scas
xchg
xchg
aam
mov
mov
dec
jle
lahf
add
lea
xlat
out
leave
scas
xchg
movsl
insb
pop
stos
and
fcmovbe
and
jle
mov
cmc
jno
pop
cmp
rorl
push
pop
adc
jnp
mov
cwtl
jae
dec
jae
ret
adc
mov
in
push
cld
jmp
decl
xor
clc
rorl
js
add
outsb
pop
into
jne
pop
bound
sti
icebp
xor
or
jo
jp
cmp
mov
push
addr16
cmpsl
scas
movsl
outsl
ljmp
mov
or
jl
fsubl
mov
push
in
push
loopne
out
xchg
jno
xor
sub
push
and
or
push
sub
jge
aas
cmp
fstl
divb
das
adc
repnz
push
into
in
sbb
enter
enter
push
mov
scas
sbb
test
jbe
out
cld
repnz
or
push
and
ljmp
mov
cwtl
stc
push
sbb
inc
push
xchg
loopne
jmp
mov
inc
aam
mov
xorl
pop
cmp
repz
loope
hlt
cs
pop
sbb
xchg
les
push
pop
push
xchg
lods
mov
adc
lds
push
ror
addr16
loopne
mov
xchg
mov
scas
bound
fs
icebp
dec
pop
je
cmp
mov
xor
ljmp
push
int
xchg
jge
jb
int3
and
aas
jns
pop
xchg
lea
sub
lahf
adc
adc
shlb
inc
or
roll
faddp
pop
or
mov
ljmp
xlat
dec
xlat
in
pop
outsl
mov
push
iret
push
aas
push
xchg
xchg
dec
mov
pop
inc
inc
xlat
push
cmc
ds
js
sbb
sub
aaa
repz
test
scas
mov
dec
sub
pop
imul
cmp
sub
clc
pop
mov
les
mov
shr
das
call
dec
subl
mov
scas
rol
rcrl
push
cld
sub
push
xchg
and
jmp
mov
data16
sub
les
xchg
sbb
add
inc
mov
dec
ds
rolb
add
jecxz
xchg
dec
sbb
inc
and
mov
or
mov
mov
jns
or
inc
cmp
mov
jmp
loopne
inc
mov
mov
cmp
xchg
and
lods
dec
lahf
scas
addr16
lret
cmpsb
ss
or
roll
les
pop
jns
lcall
mull
jnp
mov
iret
aaa
cmpl
and
xorb
in
adcl
inc
dec
shll
mov
rcl
pop
and
or
adc
mov
int3
inc
jno
dec
pushf
incb
mov
push
push
xchg
xor
test
mov
and
xor
ljmp
sub
cli
cmc
mov
add
lret
rclb
rcrb
cmp
lods
xchg
add
sahf
icebp
or
orb
in
jns
push
dec
ss
jmp
in
es
pop
out
lds
and
and
stc
outsb
daa
dec
fidivs
les
push
inc
test
test
or
imul
adc
cmp
repz
out
out
daa
xor
mov
sbb
sahf
xchg
pop
sub
jle
cltd
aad
in
arpl
sub
lahf
cli
pop
sbb
mov
hlt
daa
hlt
cld
cwtl
or
dec
jecxz
or
divl
ret
xor
and
stos
dec
adc
mov
xor
dec
out
fsubr
ljmp
sbb
fisubrs
sbb
ja
and
repz
mov
imull
adc
mov
xchg
xchg
dec
xor
mov
pop
frstor
out
push
mov
adc
mov
call
pop
mov
call
jle
sub
pop
add
sbb
test
shl
push
inc
sbbb
lock
inc
inc
and
adc
cmpl
shl
jmp
psrlw
int3
mov
pop
mov
stos
sub
les
sub
jns
xchg
in
mov
in
aam
fucomip
dec
fildll
mull
dec
jbe
repz
mov
lock
inc
or
cmp
pop
in
and
int
cmp
cmp
mov
push
xor
jns
mov
jnp
xchg
push
in
mov
enter
or
dec
adc
mov
movsb
sahf
pop
in
xchg
sbb
roll
jb
dec
cwtl
test
adc
inc
pop
push
sub
adc
adc
dec
mov
mov
ljmp
jnp
adc
outsl
and
sbb
stmxcsr
in
pop
adc
cltd
fldenv
pop
rclb
sub
out
sub
push
lea
sub
lret
and
sbb
dec
scas
pop
mov
mov
sets
pop
lahf
lock
rcrl
dec
and
dec
in
push
shlb
cltd
rorb
dec
inc
xor
push
adc
mov
loope
inc
cmpsl
clc
dec
xor
mov
jbe
iret
inc
dec
push
fldl
bnd
xchg
jge
lcall
sahf
sbb
add
pop
sbb
dec
arpl
dec
lret
aam
out
fwait
inc
or
insb
popa
push
jle
lret
fsub
movb
dec
ljmp
fwait
mov
sbb
jno
aad
mov
fwait
add
xor
aas
or
pop
das
cld
aaa
ljmp
lds
xor
dec
adc
lock
jbe
jne
and
jg
ds
test
mov
xchg
sbb
mov
mov
stos
mov
pop
jb
imul
loope
or
cmc
sub
mov
add
scas
ljmp
loope
and
pop
enter
test
leave
in
xchg
mov
sar
shll
inc
popa
mov
mov
and
push
cmovge
aad
adc
inc
pop
sub
push
rcr
andb
je
push
dec
testb
aaa
cmpsb
jp
dec
mov
movsb
push
cmpsb
outsl
jbe
mov
imul
test
cmpsb
mov
mov
dec
lahf
fisubs
adc
les
sbb
arpl
mov
cli
ret
and
jmp
sbb
lret
fs
mov
and
xchg
mov
xchg
xchg
aam
in
aam
push
sub
ds
jns
xor
push
iret
stc
addl
lahf
mov
mov
add
aad
xor
or
lods
dec
sub
mov
mov
jecxz
xchg
les
inc
dec
and
cmp
stos
cmp
jnp
out
dec
scas
ss
popf
loop
leave
fdivs
or
mov
adc
sbb
imul
fnstcw
inc
adc
cmp
mov
mov
leave
inc
fstl
push
dec
orb
aad
lret
gs
inc
dec
cmp
mov
into
push
dec
lock
mov
jne
into
shl
cld
push
lods
xchg
lret
jmp
mov
inc
out
hlt
inc
lret
cmc
imul
add
dec
sbb
loop
je
dec
add
dec
cmpsl
sbb
cld
test
sbb
pushf
mov
inc
mov
mov
push
bnd
mov
jae
pushf
inc
adc
push
test
test
outsl
rclb
repnz
scas
out
adc
jno
jne
xchg
mov
push
push
sub
adc
movsb
fwait
cmc
sbb
cmpsb
ret
mov
ficompl
rcrb
test
dec
mov
add
rolb
push
iret
dec
out
scas
sahf
daa
push
sub
adc
jnp
repnz
mov
insl
pushf
adc
sahf
vcomiss
jmp
scas
pushf
int3
jmp
inc
mov
xchg
add
pop
ret
push
cmp
test
insl
push
xor
xchg
mov
jge
in
jg
sbb
sub
sti
enter
fsubrl
adc
inc
in
mov
mov
adc
jle
sub
inc
das
xor
ljmp
popl
leave
xchg
pushf
pop
mov
sbb
jecxz
jb
push
ds
aam
sub
mov
jge
cmp
lahf
add
cmp
and
js
mov
mov
xor
popa
lahf
xchg
fbstp
adc
jne
int
pop
sbb
bound
popf
repnz
call
arpl
cmp
in
rcl
bound
xor
ret
outsb
std
cmp
cmp
jmp
and
loopne
and
pop
sub
add
and
out
jmp
jne
push
int3
mov
cmp
fwait
je
push
mov
sbb
out
sub
lret
test
clc
dec
adc
enter
fs
pop
push
sub
mov
rcll
xor
les
mov
jns
stos
dec
mov
push
or
xor
xor
pop
jge
pushf
lods
add
pop
sarb
in
adc
inc
sbb
xorl
cmpsl
clc
inc
scas
outsb
lock
cmp
mov
ds
xor
jbe
jmp
imul
jb
cmp
inc
mov
sarb
scas
loop
mov
shrl
adc
arpl
xor
cmp
cmp
sbb
mov
mov
lods
sbb
lret
dec
push
shlb
jle
insb
dec
mov
xchg
loopne
push
add
or
movsb
movsl
mov
xchg
fistps
sbb
jns
mov
pop
sbb
out
lock
not
adc
aad
mov
shl
mov
push
cwtl
insb
jne
ja
imulb
leave
imul
loope
cmp
imul
fisttpll
cwtl
add
sahf
inc
or
lret
hlt
jg
fnstsw
ss
sti
pop
dec
jge
sbb
pop
mov
int3
push
sub
pop
je
jnp
xor
adc
in
cmp
mov
inc
popf
lret
ret
push
and
inc
mov
push
jge
insl
push
jo
pop
mov
jae
mov
adc
and
inc
jae
mov
outsb
push
add
data16
jmp
cltd
xor
jae
dec
xor
inc
frstor
jb
test
cmpsb
jle
mov
repz
fists
pop
pop
fildll
addr16
cmp
sbb
and
outsb
loopne
mov
mov
ds
sbb
in
repnz
inc
rcrl
outsl
sbb
and
sarb
cltd
pushf
or
adc
in
add
push
cld
cmp
xlat
xor
jge
mov
gs
pop
enter
mov
faddl
repz
mov
cli
out
push
in
fstps
fldt
andl
adc
ret
cmp
and
lahf
and
xchg
mov
cmp
outsl
outsl
cld
jbe
pop
xor
out
icebp
bound
loop
cmp
js
lods
andl
and
lret
sbb
jbe
dec
dec
std
xor
shll
inc
push
mov
adc
imulb
lods
out
pop
sbb
xchg
adc
sar
out
insb
lods
and
mov
ret
sub
mov
imul
and
dec
jp
shlb
lds
dec
stos
push
lods
fsubl
mov
cltd
and
push
out
out
adc
push
xchg
iret
ja
mov
push
std
mov
jbe
in
add
add
out
add
inc
jmp
ljmp
insl
push
inc
test
xlat
inc
test
cmp
mov
ret
xchg
xor
jmp
push
dec
push
mov
insl
xor
and
and
pop
dec
je
int3
push
mov
mov
xchg
lods
je
fdivl
xchg
ret
xlat
sub
push
shl
xchg
in
fcompl
cmpsl
pop
jb
or
das
shrb
mov
xor
mov
outsb
imull
outsl
dec
mov
pop
pop
je
mov
or
xchg
jge
mov
incl
add
outsb
ret
inc
out
mov
push
or
into
dec
dec
stc
aad
and
xchg
adc
xchg
filds
mov
inc
pop
xlat
adc
cmp
dec
cmp
lds
jbe
jecxz
inc
fsubrp
gs
lods
inc
mov
pop
push
enter
mov
cmpsb
leave
popa
or
pop
mov
pop
fsubs
out
movsl
lret
std
cltd
fiaddl
xor
inc
push
xchg
jge
in
sub
popf
mov
push
sbb
mov
and
addb
lcall
adc
dec
push
inc
jne
dec
sbb
and
fidivl
jne
lret
xor
pop
inc
mov
jnp
cmpsl
cs
dec
icebp
enter
mov
sarb
fsts
cmpsl
mov
insb
mov
lahf
adc
push
aad
in
lods
mov
and
push
test
lods
pushf
mov
add
add
mov
cli
sub
mov
mov
add
cmp
lret
lock
frstor
cmp
and
xchg
stos
jns
xchg
fnsave
push
add
lahf
jmp
icebp
dec
pop
imul
lea
adc
pop
cmpsl
inc
jmp
outsb
enter
sbb
or
in
xor
leave
pop
leave
lret
ljmp
lds
add
in
outsl
inc
sub
jg
jp
dec
inc
dec
push
mov
rorl
mov
imul
jge
and
mov
adc
jb
aaa
fcompl
lret
sbb
or
inc
lret
add
lcall
jbe
mov
fsubrs
sbb
push
outsl
inc
cltd
insl
aam
or
jl
mov
cmp
pusha
fsubrl
daa
fwait
pop
mov
cmp
test
cmp
push
popa
insl
jno
dec
bound
add
xor
jns
sbbb
stc
and
push
jmp
dec
add
enter
das
mov
push
mov
js
push
andb
or
cmp
inc
in
mov
repz
adc
cmp
push
mov
out
mov
pop
jnp
xchg
jns
leave
dec
xor
jne
sbb
lret
nop
cmp
out
repz
jle
aas
in
adc
cmpsb
fldl
xchg
neg
rcr
pop
das
pop
mov
std
fistpl
gs
lock
push
jns
mov
pop
aas
lahf
cwtl
sti
and
mov
lds
test
ds
in
adc
xchg
ret
pop
stos
sbb
sub
sub
inc
repnz
push
push
sub
testl
lret
test
xchg
dec
or
test
aam
mov
mov
mov
repz
adc
xchg
fidivl
dec
xchg
addr16
mov
repnz
sub
or
mov
scas
outsl
int
inc
inc
cmp
push
imul
jecxz
xchg
jmp
push
divb
sub
pop
lds
test
cmc
je
negl
pop
inc
cmp
into
std
cli
mov
scas
in
adc
cwtl
dec
jle
push
xchg
je
aas
push
pop
lret
sti
cmp
jle,pt
jb
add
push
mov
scas
repnz
pop
pop
and
xor
mov
loopne
rorl
xor
or
ret
mov
daa
add
or
push
xchg
fidivl
mov
aaa
call
fcmovne
stos
sub
lcall
adc
inc
sbb
xor
jns
loop
addl
and
mov
lret
and
lds
add
xor
mov
add
out
pop
adc
or
sbb
jo
out
sbb
fs
xor
inc
rcll
stc
out
jmp
test
pop
mov
pop
pusha
jl
out
cmpsl
je
call
sbb
push
enter
cmpsl
sbb
lods
or
lods
sarl
ret
xchg
cmp
leave
imulb
hlt
cltd
mov
and
add
jnp
outsb
stc
jb
pop
in
out
arpl
shl
sbb
fiaddl
or
cmp
incl
xchg
dec
pop
out
rcl
sbb
enter
cld
pop
mov
mov
stos
cmp
inc
stos
cs
mov
jmp
mov
sub
mov
in
sub
push
iret
sbb
imul
inc
es
mov
adc
jl
fs
sbb
jl
jle
pop
push
lcall
loopne
imul
sub
aam
mov
xor
lea
add
int3
ljmp
cs
mov
jno
or
ret
mov
pop
int3
aas
push
aas
sub
repnz
bound
sarb
aad
dec
dec
loope
pop
mov
inc
out
xchg
cmp
imul
dec
push
adc
in
xor
adc
lds
cmp
ret
sbb
xchg
ds
mov
lahf
mov
scas
fxch
repnz
pop
test
xchg
out
insb
lret
push
sub
inc
push
bound
pop
bound
test
inc
xchg
push
mov
sti
outsl
adc
xor
das
stos
mov
push
addb
dec
aam
aad
ss
push
sbb
test
int
in
test
test
mov
push
xchg
xor
xchg
out
sub
fs
cmc
cld
jge
ffree
push
stc
cltd
mov
mov
stos
leave
out
or
mov
loop
mov
cwtl
inc
imul
xchg
std
lock
ret
fistl
in
in
in
and
push
mov
mov
daa
in
repz
jnp
imulb
bound
cmpsl
lcall
xlat
sbb
out
push
lods
push
inc
mov
dec
fwait
mov
add
cmp
into
lret
es
imul
jg
out
mov
jb
push
lea
mov
pusha
xor
dec
mov
or
sbb
mov
scas
adc
jmp
xchg
mov
pusha
out
enter
jp
lahf
inc
add
scas
ret
push
fcmovb
push
in
imul
testb
or
loope
cmp
xchg
xor
mov
outsb
mov
cmpsb
xchg
adc
test
jge
jle
fadd
xor
inc
dec
mov
add
shll
cltd
mov
mov
repnz
pop
pop
pusha
pop
add
jns
sub
insb
inc
and
cmpsl
sub
and
movsb
xor
pushf
add
xor
iret
sbb
jp
inc
stos
dec
mov
jp
ja
movsl
inc
rcl
pop
daa
cmpsb
and
add
gs
cmc
scas
call
push
cmp
inc
add
ss
adc
pusha
xor
into
pop
cmp
xor
mov
xchg
mov
clc
dec
scas
mov
add
jo
pop
mov
jns
popf
pop
outsl
fisubs
sarl
dec
mov
inc
ja
mov
in
fdivp
out
lcall
sub
outsl
data16
xor
xchg
lods
out
sti
or
scas
lds
fdivs
xchg
cli
das
mov
jo
nop
mov
sub
outsl
lcall
and
add
xor
add
test
adc
daa
jne
mov
adc
cmp
pop
scas
bound
jge
inc
es
rolb
adc
cmp
xchg
into
testl
xorb
mov
hlt
jns
jge
mov
sbb
sti
mov
xor
clc
stc
js
inc
clc
sbb
mov
lret
dec
outsl
enter
add
push
sbb
push
test
cmpsb
push
mov
sahf
int
sub
aam
add
out
mov
ljmp
push
and
lret
lret
xchg
inc
fsubrs
or
push
inc
mov
jge
dec
lods
or
jno
mov
sbbb
bound
repnz
lret
xchg
test
insb
sub
stos
pop
mov
xchg
xchg
jae
pop
dec
fists
xor
xchg
imul
jle
test
sbb
push
cltd
mov
mov
fmuls
aam
fiaddl
inc
int
movsb
xor
lret
jns
add
adc
mov
inc
bound
jmp
lcall
inc
ljmp
test
adc
test
dec
clc
cwtl
pop
test
movsb
daa
stc
and
push
lcall
insb
aad
and
and
sbb
dec
pushf
les
jl
xchg
ficomps
push
pop
sub
cmp
outsl
cmp
mov
cmp
jno
mov
or
lahf
out
mov
mov
loopne
sub
ljmp
fwait
loop
sub
test
xchg
test
inc
icebp
sbb
dec
ret
lock
sub
lret
lock
dec
ret
dec
mov
sahf
cmp
cmp
xchg
les
std
inc
sahf
aam
in
sub
jp
scas
divl
xor
pushf
push
out
cs
sub
aam
pop
repz
push
push
xchg
xchg
arpl
fwait
stc
in
add
ret
xor
les
aad
pop
stos
sbb
int
mov
fsubrl
into
sub
sahf
xchg
and
sbb
lret
fnsave
and
or
inc
ja
out
stos
xchg
mov
popa
mov
shlb
inc
mov
mov
or
mov
lcall
mov
clc
and
push
adc
movsb
outsb
cwtl
outsl
mov
push
lret
add
iret
mov
xchg
pop
scas
xor
test
shlb
mov
mov
pop
mov
fisubs
addl
push
push
out
std
add
scas
je
mov
sbb
lods
lret
loop
pop
pusha
lcall
out
push
repz
add
bound
hlt
xchg
or
dec
nop
sbb
adc
scas
mov
das
les
fcmovnu
sub
jle
jl
ljmp
add
adc
mov
adc
test
mov
outsl
xchg
push
ljmp
adc
fs
add
test
push
imull
ret
xchg
jle
xchg
add
add
stos
jl
dec
pop
jns
test
insb
push
lcall
and
pop
pushf
stos
pop
add
jbe
pop
mov
pop
movsl
jp
pop
fsubrl
test
out
pop
insl
inc
cmp
rorb
push
outsl
leave
sub
xchg
dec
jp
pop
dec
push
jmp
adc
loop
in
dec
orl
lahf
pusha
js
dec
in
push
sbb
and
push
push
cmp
add
mov
add
mov
clc
push
jb
das
mov
loope
xor
shll
test
sbb
jne
shrb
push
xor
inc
mov
fmuls
adcb
lcall
push
pop
and
imul
xor
out
adc
mulb
fsubrs
fstpl
push
aaa
mov
inc
pop
addl
push
aam
sub
repnz
mov
jb
stc
pop
je
pop
movsl
imul
jne
xchg
lahf
cltd
daa
cs
inc
andl
addr16
xchg
inc
test
movsl
enter
mov
insl
call
and
or
push
dec
dec
inc
pop
push
call
jle
push
not
dec
inc
popl
dec
mov
lods
imul
dec
ret
mov
pop
mov
mov
fs
add
fs
xorl
adc
aaa
sbb
inc
jb
stos
outsl
or
sarb
sbb
fldt
bound
lret
mov
mov
xchg
les
jmp
out
shlb
fsubrp
fidivrs
jle
in
jns
mov
pushf
inc
stos
in
movsl
push
sub
sub
ljmp
pop
sbb
mov
xor
aas
fld
stos
test
sbb
mov
test
sbb
test
lret
push
adc
push
xchg
mov
pusha
lods
mov
fisubl
inc
dec
push
xor
adc
cmp
mov
loope
inc
pusha
ds
out
pop
cwtl
ret
or
test
add
fyl2xp1
mov
sub
loopne
dec
rcl
mov
aaa
loop
je
xchg
jle
mov
mov
sub
pop
mov
adc
pop
push
mov
adc
mov
mov
subb
xchg
enter
in
fsubrs
pop
jp,pt
add
push
popf
into
hlt
sub
rcrb
adc
xchg
and
xchg
dec
sub
jge
jecxz
adc
lahf
cmp
enter
push
mov
pop
popa
inc
les
cmp
out
and
aas
and
mov
dec
push
jb
mov
stos
or
dec
mov
add
popf
sbb
aam
enter
clc
imul
dec
mov
jmp
sub
pop
adc
inc
sbb
pop
ret
xor
lds
js
mov
mov
pop
add
jae
sbb
outsb
fwait
jno
insl
pop
inc
mov
aas
mov
popa
cwtl
adcl
sub
push
sti
jne
setg
rorl
push
sbb
mov
call
push
push
aad
xlat
mov
sbbl
scas
xchg
and
test
push
data16
scas
sahf
enter
jo
fwait
dec
xor
push
popf
dec
mov
dec
dec
inc
or
mov
addr16
rclb
sub
xor
sbbb
fcomps
cmc
mov
mov
mov
repz
adc
push
call
push
test
test
sub
test
dec
jb
cmp
xchg
or
jae
sub
inc
cmc
rcll
pop
test
mov
xchg
or
push
or
jne
je
cmpsb
jg
int3
mov
push
sarb
rcll
cs
mov
adc
push
add
add
incb
adc
xor
mov
dec
xchg
cmp
mov
mov
les
adc
nop
mov
inc
xchg
rorb
addr16
add
clc
dec
loopne
xchg
std
or
fstpt
out
ljmp
push
subl
negl
or
sbb
adc
cmp
leave
cmp
fistpll
addr16
mov
cmp
pushf
rcrl
jae
or
and
imul
sbb
push
xchg
push
dec
sti
dec
inc
inc
hlt
cmp
andb
shrl
rcl
inc
mov
hlt
cmp
add
mov
fdivs
repnz
xlat
inc
loop
mov
addb
test
sbb
shrb
ja
fstps
adc
out
orl
jp
dec
movb
repnz
popa
jg
pop
dec
in
or
mov
clc
push
pushf
imul
cwtl
mov
out
xor
cld
movsb
leave
test
lret
inc
and
jbe
test
dec
cld
add
rcr
enter
and
and
out
mov
mov
sub
cmc
pop
scas
out
or
mov
add
xchg
ds
mov
imul
jne
sbb
cmp
outsb
add
pusha
dec
cmp
inc
xlat
pop
jle
sub
sbb
dec
fbstp
aaa
imul
jp
mov
pop
jno
jno
push
mov
mov
mov
cmp
add
xor
scas
leave
loop
loope
add
out
insl
testb
leave
insb
test
push
mov
loop
push
lret
xbegin
inc
and
cld
lock
mov
ds
add
pop
lds
cmp
sbb
aam
mov
pop
xor
adc
and
clc
cltd
pop
jne
push
fistl
cwtl
dec
cmpsb
pop
pop
pop
jp
mov
xchg
les
roll
jnp
into
dec
pop
enter
xor
aam
sarb
lret
adc
aas
cmp
fildll
call
inc
loop
xlat
bound
or
xchg
push
aam
mov
mov
daa
sub
std
pop
push
cmp
aad
cmp
cwtl
jge
pop
jp
test
mov
lods
mov
add
mov
pop
xor
ds
inc
sbb
sbb
aaa
sarb
jl
imul
insb
ret
aam
orl
rorl
mov
es
movsb
xchg
inc
sbb
pushf
insl
push
jl
lret
mov
and
mov
cld
xchg
call
cmp
xor
mov
aam
stos
pop
mov
dec
xorb
mov
jb
sub
cli
cmp
test
ss
and
xlat
or
cld
shll
jle
out
inc
test
pop
sbb
xor
fstpt
add
adc
cmc
xor
jns
hlt
lret
cmp
inc
faddl
dec
arpl
mov
mov
xchg
push
clc
push
xor
repnz
and
stos
movsl
out
fisubs
cli
leave
leave
inc
or
mov
jle,pn
jb
xchg
and
pop
jg
pushf
push
xor
jl
fdivs
jl
xor
and
add
pop
jle
xor
dec
int3
jg
cltd
xchg
pusha
jp
mov
mov
cmpsl
rcll
test
xor
lods
and
scas
mov
aam
testb
jns
or
pop
cmp
std
push
andl
adc
shlb
dec
insl
jae
das
lret
adc
jl
call
addr16
adc
push
sbb
push
push
ljmp
xchg
and
lds
mov
pusha
push
rcl
ret
inc
and
add
sub
lds
sbb
jp
pop
pop
inc
jbe
add
and
push
out
cmpsl
jae
adc
jae
shl
cwtl
pop
xor
mov
aad
xchg
fsts
mov
add
push
stos
mov
inc
aad
jne
push
into
sbb
bnd
xchg
dec
es
jle
and
dec
or
xchg
cmp
mov
int3
xchg
xchg
jae
ja
jl
orb
lret
cmpsl
xor
lds
shl
ss
adc
push
in
push
jp
push
xchg
cmpsb
fcmovu
or
addr16
cld
add
sub
pop
les
int
mov
stos
xchg
fistl
mov
in
push
mov
mov
fisubl
sbb
add
inc
pop
push
mov
data16
repnz
shll
sub
push
insb
pusha
popf
mov
into
out
inc
and
bound
pop
lock
mov
inc
rcrl
leave
pop
and
pusha
rorl
xor
stos
sti
sub
sbb
fs
push
inc
repnz
inc
inc
mull
mov
sub
test
test
mov
adc
shll
mov
jns
repz
sub
xlat
mov
jnp
sbb
lahf
and
xchg
xchg
push
in
imul
sbb
inc
ja
inc
jecxz
sbb
loop
or
jmp
in
ds
sub
data16
push
cmp
cmp
sub
shr
xchg
dec
cs
fsubs
pop
sub
or
or
mov
xchg
lds
inc
fdivl
push
ret
jbe
shlb
mov
std
lret
js
mov
es
popa
aam
out
adcl
add
pop
jns
push
testb
ret
repnz
pop
movsb
sub
loop
stos
ret
inc
push
int3
push
rcr
ret
or
xor
jnp
outsl
aad
xchg
sbb
lock
jge
pop
enter
jmp
movhps
movsb
xchg
cltd
jb
mov
lret
rorb
sub
jb
ss
int
loopne
rcl
sub
out
sbb
and
mov
sbb
mov
xchg
repnz
popa
jns
sbb
jmp
xchg
insb
adc
pop
jp
xchg
sbb
test
dec
cmp
rclw
xchg
loope
mov
dec
fstl
das
addr16
mov
stos
pop
lahf
add
sbb
cmp
adc
movsb
push
outsl
mov
mov
cltd
lret
mov
mov
inc
adc
sub
jae
inc
cmpsl
lcall
int3
push
rorb
mov
inc
mov
inc
fidivs
mov
xchg
mov
imul
pop
mov
inc
sahf
stc
incl
mov
pop
out
fcomps
mov
leave
cmpsl
iret
ds
adc
aas
aas
imul
pop
push
lds
ljmp
enter
add
xor
push
inc
push
fsubs
lea
in
xchg
add
std
xchg
loopne
idivl
fs
xor
outsb
xlat
sti
imul
xor
ret
xchg
xor
mov
jns
jl
mov
add
add
dec
fwait
and
pop
movsb
clc
mov
add
popa
das
loop
adcl
xchg
dec
lods
dec
jp
scas
orb
rolb
or
fadds
andb
ds
sub
xchg
loopew
popf
in
mov
cmp
lods
ja
push
es
rcrl
enter
sbb
arpl
cmpsl
fwait
cmp
sub
repz
or
add
dec
scas
icebp
jg
pop
cmp
cmc
push
cmp
or
dec
data16
rorl
cmp
movsl
stos
mul
push
jno
jno
cwtl
js
lods
adc
pop
ret
push
mov
addr16
xchg
ja
mov
loop
mov
adcl
add
jno
sub
outsl
jbe
mov
mov
jg
push
bound
out
je
seto
pop
sbb
arpl
mov
push
jne
leave
pop
loope
sub
cmp
sbb
push
push
std
jge
fwait
cmp
movsl
out
inc
push
hlt
test
xlat
cs
pop
and
rol
cmpsl
sbb
push
fisttpl
bound
mov
inc
jns
gs
out
daa
lret
mov
cmpsl
in
xchg
add
pop
cmp
add
pop
cwtl
sub
dec
mov
jbe
in
jg
aaa
cwtl
and
or
lds
dec
xor
inc
and
test
xchg
std
pop
ret
cli
or
mov
dec
push
addr16
psubusw
sti
loop
mov
push
call
mov
mov
fimuls
inc
push
sbb
fstl
mov
mov
loop
bound
nop
mov
push
xchg
mov
loop
push
jnp
cmc
mov
fiaddl
in
mov
sub
dec
mov
mov
xchg
sti
lret
test
pop
clc
out
sub
les
sbb
fisubl
lods
into
cmp
ja
mov
popf
mov
das
test
or
popa
cmp
add
pushf
mov
sub
inc
or
add
dec
inc
cmp
popa
cmpsl
popf
pop
sub
in
sbb
arpl
add
int
les
mov
xchg
psubb
in
xchg
dec
out
adc
imul
dec
inc
lcall
and
shl
jl
sub
in
adc
add
mov
test
push
mov
inc
iret
shl
jb
enter
add
ss
sub
movsl
out
mov
loopne
stos
push
pop
xor
or
xchg
fadds
leave
mov
or
lock
jmp
out
push
shlb
add
and
popf
rol
stos
pop
lea
outsb
loope
into
adc
inc
movsl
nop
jmp
and
pop
mov
dec
or
cmpsl
sahf
pop
aaa
push
jp
sahf
pop
lods
inc
test
jg
sbb
cs
inc
lret
lahf
or
sti
cmpsl
xchg
mov
icebp
aas
lds
adc
sub
int3
out
pop
push
pop
int3
sahf
xchg
out
sbb
sahf
jne
mov
mov
test
xor
cmpsl
cld
and
or
adc
and
xchg
cmp
cmpl
shl
gs
cmp
sub
inc
adcb
fnstenv
mov
inc
ja
adc
dec
ljmp
sub
ret
push
jl
add
pop
repz
sub
test
clc
pop
lahf
jae
add
std
test
fs
push
xor
movsb
insl
inc
mov
rolb
push
xor
sahf
pushf
loopne
test
adc
mov
adc
add
fidivl
dec
jecxz,pn
bswap
mov
pusha
pop
or
pop
es
cmc
xor
in
fldl
cmc
push
mov
mov
arpl
mov
aas
sarb
and
lods
test
add
inc
mull
mov
ss
push
cmp
mov
xchg
xchg
aas
cltd
xor
psrad
ret
iret
rcll
ja
je
call
xchg
xchg
mov
cmp
aas
stc
adc
mov
push
sbbl
leave
pushf
outsl
cli
sub
mov
into
popa
push
stc
inc
or
sar
xchg
push
inc
mov
cmp
push
leave
std
popa
cli
jecxz
test
mov
lret
jg
and
adc
cwtl
push
adc
mov
nop
icebp
mov
cmp
fmul
push
insl
adc
insb
fimull
lret
adc
xor
add
les
pop
shlb
add
test
add
push
and
enter
mov
shrb
fdivrp
push
lds
jo
fdivrs
fistps
enter
push
jl
shll
in
xchg
gs
lret
fwait
pop
cmp
xchg
pop
adc
adc
inc
xor
pop
ljmp
test
cmp
ja
push
push
lahf
dec
imul
sti
xchg
lock
sbb
int
lahf
call
dec
cmp
sbb
iret
je
jno
out
adc
inc
xchg
das
iret
or
gs
mov
adc
sub
jecxz
das
imul
aas
sbb
dec
xorl
push
test
outsb
mov
out
addr16
mov
out
mov
int3
jmp
cmpsb
test
jbe
je
movsb
sub
call
outsb
movsl
mov
xchg
mov
add
sarb
xchg
and
pop
pop
and
nop
mov
sahf
es
lods
inc
inc
imul
mov
faddl
jp
xchg
adc
pop
cmp
popf
dec
mov
cltd
inc
ja
roll
popa
cmp
fdivl
lret
shll
sub
js
jecxz
inc
xchg
xor
sub
push
push
mov
fdivrp
lret
stos
inc
clc
subl
lods
fisttps
jo
in
push
stos
sbb
xchg
cwtl
jbe
or
adc
jl
pop
popa
sbb
push
push
cmc
and
cmp
inc
adc
lret
and
jne
pop
and
sub
push
mov
jle
call
add
mov
lahf
xor
sahf
fdivs
pop
jae
rorb
lcall
jmp
fwait
push
dec
mov
dec
xchg
bound
out
fs
pop
or
out
adc
pop
enter
or
mov
enter
jne
lock
shlb
cmpsb
sbb
mov
inc
pop
mov
adc
pop
or
ja
leave
add
and
cwtl
dec
out
push
daa
push
jnp
and
xor
shr
xchg
sti
in
movsb
sbb
jle
push
pop
inc
loopne
pushf
sub
push
jmp
dec
xchg
dec
mov
insl
adc
je
jnp
sbb
leave
int
mov
inc
imul
pusha
xorl
daa
lods
mov
fadds
adc
lock
lods
sub
int
xchg
xchg
mov
pop
mov
pop
mov
sbb
and
xchg
xlat
fidivrl
scas
jecxz
aad
sti
aaa
subb
ljmp
dec
push
repnz
ss
push
push
jns
xchg
push
leave
mov
insl
faddl
xchg
push
adc
sub
repnz
push
pop
daa
pop
rcrb
mov
fdivl
cltd
ds
sub
pop
xchg
adc
mov
push
ja
dec
jae
mov
mov
jmp
movsb
js
jnp
pop
inc
pusha
cmpsl
std
and
ret
shll
mov
shrb
mov
push
mov
ss
imul
cli
lds
xchg
mov
xor
xchg
push
out
mov
daa
mov
leave
inc
or
xchg
adc
mov
sbbb
cmpsb
mov
mov
push
mov
sbb
bound
cmp
out
sbb
push
inc
mov
testb
das
mov
out
mov
push
test
xlat
xchg
mov
pop
std
mov
stc
shlb
out
sub
jg
jns
inc
cld
in
ret
ror
aad
jns
clc
pushfw
cmpsl
mov
mov
adc
mov
out
sbb
das
in
gs
mov
in
outsb
dec
outsl
push
subb
ljmp
je
sub
leave
test
push
fnsave
scas
lcall
xchg
popa
mov
aad
stos
xor
lret
jae
ret
andl
cs
imul
imul
push
cmc
mov
and
mov
xchg
push
arpl
sub
cltd
mov
jge
call
cmp
xor
sub
dec
aam
sar
mov
out
orb
mov
in
int3
sbb
jnp
adc
pop
test
pop
mov
cmpb
push
xor
lret
inc
inc
xor
xor
jmp
pushl
sahf
fcom
adc
loop
into
imul
aam
inc
aas
pop
iret
test
jmp
rcll
inc
in
pop
pop
inc
repnz
in
mov
sbb
jecxz
in
cmp
push
xchg
arpl
lret
mov
jns
pop
movlps
pop
popf
leave
mov
jmp
jo
out
mov
xor
inc
repnz
adc
ljmp
jns
cltd
inc
sub
js
cwtl
int3
loop
repnz
jne
pop
ret
insb
pop
test
pusha
cli
jne
sub
js
movsl
pushw
fwait
xchg
lcall
xchg
pop
or
mov
jo
inc
mov
arpl
dec
pushf
je
adc
or
aas
push
in
sub
mov
and
insb
movsl
and
sbb
imul
popa
popa
in
pop
push
sub
cmp
rorb
dec
fisubrs
add
in
push
and
lds
push
xchg
out
lret
mov
lds
scas
push
pop
das
aas
xor
out
cmpsb
das
pop
jbe
add
sub
jno
add
ret
cmp
jge
jns
cwtl
sbb
mov
aam
jmp
imul
mov
les
mov
xor
loopne
sub
rclb
sub
jns
dec
jmp
cli
out
lea
rcl
insb
push
mov
pop
jnp
and
mov
cmc
test
div
push
iret
dec
mov
push
shl
jnp
loope
lods
sbb
sub
aad
ja
mov
jecxz
and
shr
cli
fnstcw
pushf
pop
add
aad
and
jg
ror
imul
xchg
int
push
fbstp
xchg
xor
addb
pop
mov
outsl
bound
cmp
or
pushf
push
cmc
push
mov
fsubrs
pop
repnz
xor
stc
mul
pop
xchg
popa
sbb
xlat
and
and
iret
pop
mov
add
inc
jmp
pushf
mov
sbb
out
mov
mov
cmp
add
pop
sbb
fdivl
mov
rcr
ret
mov
pop
jecxz
ret
jle
inc
scas
adc
bound
aad
add
mov
dec
xchg
das
push
dec
fiaddl
stos
xchg
inc
cltd
mov
ds
adc
xor
ss
push
and
lret
inc
in
xchg
daa
pop
je
loop
push
lods
and
xlat
imul
push
jl
es
hlt
mov
mov
and
pop
imul
sbb
arpl
outsb
movl
sub
push
and
xor
sti
adc
pop
pop
push
xor
negl
push
outsl
shlb
fsub
gs
aaa
rcrb
scas
jle
out
pusha
inc
js
cmp
mov
jle
mov
inc
repnz
movsl
fscale
enter
mov
inc
add
pop
jmp
add
inc
sub
dec
outsb
jle
scas
jecxz
mov
mov
insb
push
adc
sub
insw
test
xor
jl
dec
dec
push
mov
psrad
and
push
dec
push
fcoms
mov
nop
addl
and
ja
in
or
xlat
push
jbe
jne
and
xchg
xchg
stc
imul
outsl
pushf
inc
popa
push
cld
mov
jp
ficomps
add
scas
jmp
movsb
xchg
in
adc
mov
xchg
and
push
mov
fwait
pushf
fdivrl
mov
cmc
mov
push
popa
pusha
in
xor
sbb
popf
sbb
sbb
inc
ret
out
imull
ljmp
faddl
ds
sbb
sub
stos
into
hlt
repnz
mov
and
stc
xlat
add
push
inc
sub
jno
cmp
negl
and
sub
out
out
inc
sbb
xchg
scas
cmp
or
fcmovb
push
stc
out
add
cmc
cmp
xor
dec
clc
adc
sbb
dec
idivl
testb
fisttpll
xchg
or
std
push
cmpsb
dec
push
pusha
cmpsl
push
adc
mov
loop
in
outsl
sbb
sbb
sub
push
aas
pop
outsb
mov
addb
sbb
addb
sbb
cwtl
hlt
xchg
movsl
pop
out
push
jl
lock
add
add
call
fdivr
sub
inc
rcll
xchg
push
aam
xchg
mov
js
and
pop
rorl
sub
fdivrs
push
jbe
or
sbb
iret
roll
into
mov
in
in
fldl
pop
mov
jno
cld
out
lret
int3
hlt
mov
ds
clc
mov
add
daa
fst
sbb
in
loopne
push
add
mov
pushf
mov
imulb
push
fwait
mov
sarb
aad
push
pop
pushf
mov
sbb
jmp
out
lret
cmp
sahf
xchg
sbb
xchg
into
add
mov
or
sahf
inc
sbb
rcrb
mov
push
pusha
inc
das
jecxz
jns
jge
int
loop
or
lea
icebp
mov
insl
sbb
sbbl
cld
sub
clc
test
pop
push
aaa
out
or
mov
jle
mov
mov
xchg
cmp
cli
lea
lea
mov
mov
dec
pop
add
inc
push
sub
adc
daa
shr
mov
les
js
dec
mov
das
sub
out
loope
pop
fidivs
fstp
movsl
push
push
xlat
or
mov
cmp
in
push
shlb
sbb
lds
push
push
es
jg
mov
sti
rcrl
push
xchg
mov
add
mov
popf
pop
in
mov
loope
jp
dec
icebp
mov
push
jo
out
je
test
das
sbbb
insb
xor
dec
mov
xlat
shr
fcoml
add
stos
mov
jnp
ja
sbb
jl
mov
int3
adc
pop
lds
nop
in
out
adc
paddusb
test
ja
inc
inc
lret
stc
inc
and
fstpl
sbb
flds
lret
adc
dec
add
mov
hlt
enter
sub
fildl
pop
shrd
mov
aaa
pop
out
xchg
pop
es
sub
std
out
mov
sub
cltd
sbb
inc
clc
add
in
add
inc
adc
aas
shl
pop
test
xchg
les
cmpsl
sub
adc
xchg
test
dec
jnp
xchg
xchg
imul
mov
mov
add
dec
jnp
mov
je
out
mov
adc
inc
dec
push
loop
inc
sti
pop
aad
cmp
imul
test
jae
jle
add
hlt
popf
int
inc
leave
xor
aad
aaa
imull
movsl
cmpsl
cmp
clc
es
test
loope
mov
add
push
pop
orl
mov
and
mov
xor
pop
lcall
sarb
cmp
cmp
xor
inc
dec
inc
movb
repnz
mov
fsubrl
aas
in
lock
dec
jp
and
iret
daa
sbb
dec
aas
mov
jl
push
imul
mov
repz
mov
pop
cmc
stos
cmp
les
sbb
mov
movsb
pop
pop
cmp
iret
or
dec
movsb
movb
sub
pushf
in
lcall
sar
pop
pop
outsl
pushf
sbb
movsb
nop
pop
cld
dec
imul
jnp
loope
push
ljmp
inc
rcll
pusha
jns
dec
jg
pop
clc
rclb
mov
jg
sbb
and
pushf
push
clc
jns
loop
iret
js
shlb
cmp
dec
cmp
stos
push
fisttps
and
cmp
mov
gs
lcall
and
jno
push
iret
fidivrs
outsl
adc
or
jns
add
adc
or
pop
dec
add
fwait
mov
aad
cmp
pop
aas
pop
call
test
sub
add
fisttps
jo
cmp
jbe
jb
jge
push
pop
inc
ljmp
fisubrs
xor
or
jmp
or
sub
add
lea
divl
cmp
lds
xor
aam
jge
lea
jns
je
mov
insb
mov
das
jp
ret
adc
cmc
mov
inc
pop
int
mov
adc
pop
clc
js
aaa
addr16
ljmp
jmp
push
jno
int
scas
leave
pop
and
mov
adc
aad
and
push
inc
xchg
add
sahf
add
out
mov
sbb
add
test
sti
jg
jns
xor
sbbb
mov
daa
inc
mov
dec
int
mov
push
out
dec
mov
pop
mov
stc
mov
sub
dec
hlt
push
lods
shll
inc
mov
add
xchg
sti
subl
jb
cwtl
adc
shlb
pop
pop
xchg
mov
jno
fildl
ss
or
test
sub
iret
mov
popa
ds
dec
cmp
testb
mov
mov
or
movsb
cmpsb
out
and
addl
movsb
addr16
cwtl
neg
cmpsb
lds
sub
push
outsb
flds
push
hlt
std
and
loope
sahf
js
jp
sti
cltd
jl
icebp
imull
fisubrl
shrl
jge
xor
flds
popa
mov
mov
adc
mov
sbb
divl
push
test
xchg
mov
iret
insb
cs
in
outsl
jno
pop
into
cltd
mov
xchg
test
fnsave
repnz
push
popf
les
lret
mov
aas
aas
xchg
mov
clc
xor
push
jmp
mov
inc
mov
mov
jnp
xchg
fwait
adc
fcomps
adc
test
xchg
inc
mov
dec
ret
cmpsb
dec
push
cs
ret
nop
call
jp
mov
mov
inc
mull
lds
popa
jl
adc
pop
hlt
mov
pop
mov
mov
orl
lods
and
add
push
scas
out
fwait
lods
xlat
push
xor
iret
or
cmp
adc
mov
xchg
dec
lods
fbstp
ja
mov
mov
into
or
or
add
push
jge
xor
inc
lahf
in
test
mov
jl
mov
daa
or
jp
in
and
adc
dec
sarb
imul
out
mov
popf
pop
std
filds
jbe
in
dec
mov
push
and
fisubl
into
std
fidivrl
cmc
pushf
or
mov
add
adc
mov
sbb
jp
dec
and
aas
and
dec
and
xorb
sub
jge
js
and
jns
hlt
call
cli
pop
lods
in
addr16
loope
shr
icebp
loop
aas
imul
adc
mulb
and
roll
aad
sbb
and
movsb
mov
push
mov
loopne
or
pop
jl
and
int
loop
pusha
cmpsb
rclb
xchg
dec
sahf
int
repz
test
ja
repz
je
pusha
and
jo
iret
adc
repnz
ficoml
icebp
cmpsb
pop
in
mov
movb
push
inc
pop
int3
adc
ds
shlb
mov
jns
push
mov
mov
xchg
lock
or
and
arpl
lret
in
push
mov
mov
mov
repz
mov
push
push
or
add
and
movsb
sbb
cld
vrcpps
je
jl
div
or
mov
rclb
dec
push
aas
movsl
call
xchg
mov
cmp
inc
lds
mov
mov
xor
inc
shl
adc
xchg
add
cmpsl
dec
lahf
inc
cmp
xchg
cmc
bound
sahf
pop
mov
xchg
fucomp
xchg
mov
jae
xor
push
mov
das
mov
adc
sbb
rcr
incl
pusha
dec
and
cltd
push
inc
pop
hlt
std
push
lret
sub
push
push
out
mov
ds
mov
and
inc
or
mov
fisttps
loope
fcompl
sbb
notl
push
adc
xor
cli
xchg
sbb
and
int3
hlt
and
lret
je
les
pop
mov
dec
adc
dec
enter
cli
out
mov
pop
repnz
dec
or
outsb
sbb
mov
fucomi
sub
add
test
fimuls
loop
adc
and
movsl
cmp
jno
push
loop
cld
out
nop
mov
sysenter
lds
jmp
in
lods
addr16
lods
adc
outsl
data16
dec
pop
pop
mov
popa
cmp
xchg
adc
pop
sub
push
fmull
mov
jge
mov
sti
pop
nop
mov
cmpsb
je
inc
shll
jbe
stos
out
jne
sbb
cmp
sub
mov
enter
inc
ljmp
cmpsl
mov
or
fwait
or
movsl
xor
in
cmp
push
jp
xchg
in
pop
push
mov
jecxz
imul
cmpsb
xchg
js
push
ret
stos
jge
adc
xchg
and
or
das
sbb
or
movsl
push
mov
jbe
movsb
or
sub
pop
pop
xor
mov
mov
call
out
inc
hlt
xchg
or
jp
cwtl
jne
fistl
xor
or
movsl
or
xchg
lahf
cli
rclb
repz
rorl
ja
mov
jg
push
cwtl
push
cmp
mov
addr16
bswap
or
fdivrs
lret
test
scas
lret
sub
sbb
fiadds
je
adc
dec
fstps
cmp
lahf
aaa
or
and
cmp
call
cwtl
repz
outsl
movsb
aad
mov
or
pop
cmpb
or
movsb
xchg
lret
push
es
out
inc
jns
fldenv
pop
or
pop
push
inc
dec
mov
in
clc
jmp
mov
cltd
xor
mov
push
mov
sbb
add
dec
or
jo
sbb
shll
or
cmp
inc
inc
pop
cmc
ret
mov
sub
or
mov
fimull
pop
imul
dec
int3
ljmp
incb
add
mov
dec
cmpsb
and
int3
add
jg
xor
imul
or
and
sbb
dec
mov
cli
test
jecxz
adc
sbb
xor
test
or
cmp
pop
xor
and
out
pop
mov
add
push
addb
lock
roll
in
pop
jp
add
jb
sbb
je
mov
mov
pop
hlt
je
hlt
notl
sahf
push
pop
mov
sub
push
jnp
and
push
push
and
out
inc
sti
dec
ja
das
sbb
aam
aad
out
cmc
xchg
push
xor
nop
ljmp
inc
xchg
or
and
inc
mov
movsl
jno
adc
jno
sub
cmpsb
pop
jge
push
das
sarb
add
sarl
xor
mov
xor
sub
jne
jae
loope
jnp
jae
and
jbe
imul
xchg
jb
jb
sbb
les
data16
xor
sbb
jnp
and
movsb
rcll
stc
in
and
mov
repz
add
loope
push
add
lret
out
es
jmp
push
es
sbb
inc
jns
ss
enter
sbb
scas
shl
incl
mov
add
ljmp
por
push
xchg
xchg
push
das
aaa
test
lods
xchg
outsb
outsb
cld
dec
subl
movsl
shll
cmpsb
mov
jb
pop
inc
loopne
fcmove
and
pop
or
outsl
lahf
add
dec
add
movsb
add
stos
and
cmp
fadds
xchg
xor
jnp
xchg
shll
fs
into
push
daa
mov
scas
test
test
xor
sub
sbb
enter
orl
push
cmp
popa
xchg
adcb
std
xlat
scas
sahf
or
mov
js
jnp
into
mov
adc
ficompl
nop
fdivl
aam
cmpsb
and
cltd
push
dec
xor
add
leave
pop
push
xor
test
sahf
fsubs
push
aas
sbb
mov
dec
mov
subb
inc
sbb
add
cmp
pop
lock
dec
cltd
icebp
bound
push
jmp
adc
and
add
or
cltd
and
pop
sub
sbb
test
sbb
push
cmp
adc
inc
mov
cmp
lcall
out
xchg
push
in
call
inc
sbb
mov
dec
push
mov
fsubrp
sbb
jecxz
les
shll
or
push
pop
enter
cmpsb
rol
and
push
mov
pusha
leave
sub
les
adc
sbb
sarb
scas
rcr
ds
mov
push
jbe
outsl
jp
nop
nop
push
mov
inc
and
les
stc
ljmp
das
in
push
repz
mov
xchg
out
mov
jle
lret
mov
xor
dec
adc
inc
aad
leave
lock
dec
fnstcw
sub
or
adc
addb
sub
mov
loop
and
xor
ret
hlt
cmpsb
int3
sub
lret
shlb
insb
jno
sahf
pop
test
pop
sahf
push
into
inc
sub
sub
pushf
mov
sbb
es
lcall
pop
int3
cmpsb
stc
scas
and
mov
jns
cmp
sub
jno
pop
cltd
cltd
std
and
inc
or
mov
add
jl
fdivrs
rorb
adc
icebp
repz
or
mov
lea
pop
push
stos
rcrl
xchg
cmpsl
stc
rcrl
fldenv
or
movsb
push
dec
in
mov
test
mov
rcrl
orl
adc
xchg
sbb
jne
add
pop
ret
leave
negl
orb
sbb
mov
xchg
out
xchg
mov
jne
xchg
adcl
mov
inc
nop
lock
xor
xchg
pusha
inc
test
ljmp
inc
pushl
sub
fstps
mov
movsl
xor
shr
jge
jecxz
xor
out
shrl
mov
xchg
jle
dec
shlb
stos
mov
sbb
jge
imul
aad
inc
cld
mov
lods
cmpsb
push
lods
mov
pop
insb
cmp
std
orb
lret
lods
movsl
jo
stc
pop
xor
dec
ret
jne
fldln2
push
repnz
iret
lcall
iret
fdiv
xchg
pushf
xchg
pushf
les
mov
jl
jl
cmp
ret
popa
stos
test
mov
leave
push
scas
fiaddl
and
mov
aad
add
jp
shl
call
push
dec
in
je
pusha
aad
movb
pop
into
testb
mull
inc
pop
out
aaa
xorl
scas
rolb
lock
call
cmc
ja
cmp
adc
pusha
cmpl
cmpsb
ja
or
push
ja
cwtl
and
cmpsl
mov
xchg
test
and
cwtl
mov
pop
mov
pop
mov
lea
clc
stos
pop
inc
fcoms
fs
dec
add
rcrl
cmp
js
jp
jge
push
ljmp
mov
int
or
enter
pop
in
mov
insl
pop
std
mov
xchg
imull
nop
subl
dec
xchg
xor
bound
xor
ja
mov
inc
pusha
jno
das
es
pushl
and
loopne
and
push
xlat
movsb
cmp
pop
xor
jb
push
xor
adc
int
cwtl
cvtdq2ps
dec
mov
pop
jns
or
aam
mov
mov
adc
jne
repnz
icebp
mov
cli
loope
dec
pop
iret
xchg
pusha
mov
xor
fwait
loope
mov
jle
cli
xor
loop
cmp
pop
imul
movsb
ficoms
jb
jnp
xchg
mov
dec
inc
or
cwtl
loop
mov
jg
ficompl
decb
push
pop
fildl
adc
scas
imul
and
ficompl
sub
out
lahf
pop
pop
push
pop
aaa
pop
sbb
mov
or
lock
iret
cmp
loopne
xlat
ljmp
mov
pushf
lods
out
imul
daa
xor
inc
sub
pushf
xor
pop
cmp
push
aas
call
mov
pop
mov
iret
popf
fldt
int3
push
inc
cs
adc
stos
imul
add
jne
jmp
dec
ret
faddl
pop
shrb
test
dec
shll
xor
repnz
out
adc
mov
pop
jbe
cli
mov
out
hlt
movsl
loop
mov
xadd
mov
fbld
cli
enter
lock
rcl
mov
adc
andl
bound
test
xlat
adc
iret
jbe
ljmp
pushl
xor
js
daa
sbbl
dec
repz
sarb
inc
or
loope
and
test
iret
cltd
aam
lcall
sbbl
xchg
push
int
sbb
cmpl
rclb
div
push
cmp
dec
jle
pop
arpl
shl
enter
imul
sbb
js
in
push
mov
jecxz
mov
sbb
sti
xchg
mov
inc
pop
fldl
call
mov
jb
cmpsb
jb
mov
in
shr
mov
push
inc
sub
dec
fidivrl
mov
test
imul
stos
ret
ja
test
aam
push
in
pusha
into
decb
mov
adc
sti
sbb
orb
stc
or
in
mov
xchg
sti
shr
iret
fisubrs
xchg
add
mov
out
mov
mov
adc
xchg
popa
pop
mov
in
shll
dec
push
sub
xlat
cld
fistps
in
push
repnz
sbb
pop
cmp
divb
add
fs
cli
stos
mov
jae
ljmp
pop
popf
xchg
mov
movsl
cmp
jg
scas
lea
ljmp
inc
test
and
xchg
sahf
loopne
jbe
and
out
fsub
fnop
push
adc
jl
sbb
jns
mov
mov
sbb
ficompl
cli
push
pop
add
adc
in
in
dec
pop
inc
xchg
push
push
js
push
mov
popa
rorl
int3
outsl
push
cmc
jae
es
push
pop
and
jmp
mov
aas
scas
push
ja
adc
lret
sbb
mov
jl
xorl
xchg
cmp
sbb
sahf
rclb
shl
lock
scas
lods
mov
fistps
out
daa
and
call
xchg
jns
cmpsl
cltd
inc
les
pop
popf
rcll
inc
inc
inc
push
leave
lods
mov
cli
pop
fwait
outsl
rclb
mov
jge
test
js
xor
dec
push
mov
cwtl
imul
cmc
jecxz
or
add
xor
jo
mov
sub
and
dec
das
popf
outsl
mov
sbb
out
stos
dec
push
pop
cmpsb
testl
out
sbb
xor
fldl
movl
xchg
rclb
xchg
je
jmp
into
push
rclb
lahf
stos
inc
pop
mov
jl
mov
aam
add
imul
mov
jns
daa
fbld
data16
sbb
aam
jns
push
xchg
mov
test
cmp
jle
add
cli
lret
sti
cwtl
call
call
in
out
push
and
outsb
cmp
mov
je
dec
push
jbe
lcall
jns
mov
cs
stos
pop
mov
adc
jne
outsl
sbb
test
into
xchg
test
push
fisttps
inc
pop
movsb
or
adc
xor
shrb
sub
add
adc
lods
test
jecxz
mov
lds
dec
lret
pop
fcomip
or
icebp
sub
adc
sub
test
pop
jne
jp
mov
test
lds
pop
cmp
inc
into
imul
rcr
xor
rolb
pop
out
dec
scas
pop
push
cmpsl
jmp
das
mov
push
add
xchg
imul
xor
cmp
lods
mov
adc
mov
scas
jmp
pop
xlat
outsb
add
jno
sub
dec
aas
adc
inc
add
test
push
mov
dec
sbb
orl
imul
add
fistps
pusha
pop
sbb
or
and
bsf
iret
add
sub
es
adc
adc
out
dec
mov
mov
pusha
add
or
jl
das
push
cmpsl
jg
mov
iret
dec
xchg
stos
pop
sub
btc
pop
adc
mov
pop
stc
aad
sti
hlt
cld
popf
ret
in
stos
loopne
xor
inc
and
sub
repz
inc
jno
ds
outsl
mov
sbb
mov
aam
mov
or
push
insb
cmp
jmp
cltd
popa
outsb
loopne
lcall
ja
sbb
test
notb
pop
lods
test
pop
scas
icebp
xor
pusha
andb
test
xchg
mov
aas
mov
popa
dec
lahf
xor
imul
rcrl
xor
pop
sti
fcomps
cltd
sbb
enter
lds
xor
sub
daa
outsb
aad
sahf
sarb
loope
sbb
daa
pop
jle
pop
inc
scas
xchg
inc
insb
mov
jno
cmp
mov
arpl
pop
stos
outsl
xor
test
lods
popa
xor
cmc
jg
filds
in
incl
and
daa
cmpsl
cld
inc
jp
sub
sbb
subl
xchg
test
icebp
sahf
je
sbb
jge
js
jmp
cwtl
jmp
enter
dec
lret
ret
mov
mov
dec
jp
and
bound
mov
ds
ja
inc
push
xchg
lcall
jae
sub
mov
fs
push
xor
push
int3
jmp
aas
stos
jmp
rcr
ret
and
mov
out
repnz
sbb
aaa
gs
dec
xor
sahf
xor
mov
sbbl
push
in
jge
adc
loop
sub
jp
sub
stc
movsl
movsl
rcl
add
loope
into
jb
mov
sar
push
ds
add
cmp
cwtl
or
add
inc
sbb
push
sbb
mov
sbb
lea
or
or
inc
pop
rcrl
repz
fimull
sub
pop
loop
inc
aaa
or
pop
pop
cmc
mov
jg
inc
bound
jns
icebp
jnp
sbb
testl
sub
test
int
jae
jl
repnz
ljmp
cmpl
lock
test
push
mov
push
mov
xchg
popf
pop
adc
and
mov
sub
inc
sub
mov
sub
mov
mov
and
jge
xchg
cmp
dec
pushf
outsb
push
mov
xchg
adc
mov
cld
je
adc
xchg
orl
ret
mov
loope
jnp
pop
shll
push
pushw
aaa
adc
test
push
ds
inc
xchg
sti
fidivrl
je
xchg
ret
add
xor
shll
gs
js
mov
push
mov
jl
push
es
pushf
xchg
pxor
xor
pop
dec
mov
rcrb
jbe
cmp
pushf
enter
push
data16
jle
ss
sbb
movsb
xchg
push
mov
and
sbb
mov
shll
movsb
jno
testb
lret
cmp
data16
in
push
movsl
xchg
mov
lods
and
jmp
adc
fmull
cs
adc
test
pop
dec
jmp
push
add
stos
mov
and
xor
or
sub
adc
sub
test
les
mov
into
outsb
mov
js
mov
loope
and
xchg
add
adcl
cmp
leave
sub
shl
mov
add
in
jmp
in
or
jl
dec
call
stc
xchg
dec
jns
add
fucompp
mov
shll
adc
sbb
and
movb
daa
fs
xchg
mov
outsl
std
pushf
add
cmp
es
push
mov
lock
popa
jge
mov
out
dec
cltd
lcall
push
adc
fiaddl
sbb
inc
jnp
or
xchg
dec
cmp
and
and
dec
out
xlat
push
in
repz
xchg
jne
and
jl
popf
outsb
push
xor
sbb
push
xchg
xor
sub
and
test
cli
rcrb
jg
stos
dec
push
ret
mov
cmpsl
in
pop
push
ss
pop
adc
pop
stos
adc
inc
out
popa
add
leave
cmp
mov
jo
shr
jbe
fiaddl
cmpsb
ret
incl
repz
lock
ss
cli
inc
fldenv
dec
ja
pop
popl
pushf
xorl
pop
test
mov
mov
test
incl
cmp
and
mov
in
jnp
jg
pop
mov
adc
test
rcrb
stos
push
gs
xor
shll
aad
xor
mov
pop
sbb
push
xchg
sarl
call
in
jge
jno
loopne
leave
cs
mov
dec
add
enter
cmp
mov
or
jb
inc
sahf
fistpl
shl
test
xchg
push
or
movsl
loope
sub
mov
adcl
scas
pop
fwait
cmp
cmp
ljmp
xchg
leave
push
pop
mov
aam
stos
cmp
lods
adc
fsubrs
lcall
jg
xlat
aas
xor
sub
movsb
inc
jmp
inc
out
push
addr16
ljmp
xor
rcr
mov
repz
movsl
mov
shlb
jns
xor
cmp
aas
jae
ret
push
cmp
pop
std
sbb
mov
xor
test
daa
push
jo
inc
mov
cs
jns
xor
xor
mov
dec
out
addr16
add
out
lds
or
data16
push
inc
xchg
sub
mov
xor
sbb
arpl
pop
sbb
popf
adcl
mov
aam
std
daa
jbe
mov
test
sbb
lret
push
and
add
iret
popa
mov
add
add
push
mov
mov
xor
push
daa
and
loope
dec
cmp
stc
int3
test
imulb
xlat
mov
push
jb
daa
jg
pop
mov
cmp
pop
adc
mov
into
dec
mov
xchg
ret
mov
es
xor
je
mov
rorl
mov
and
sub
pusha
inc
or
in
cmp
arpl
cmp
and
adc
mov
nopl
mov
cltd
jns
cmp
inc
mov
fisttpl
or
loop
clc
jg
out
sbb
popf
inc
xchg
xchg
fwait
aad
js
cmp
call
loop
and
push
jmp
mov
cmp
test
inc
fistl
and
ds
cmp
cs
repnz
jl
dec
push
sub
cmp
mov
pop
lods
adc
pop
jnp
jp
aaa
sub
sub
lret
sti
inc
sbb
or
cmp
push
mov
dec
ficompl
mov
mov
sbb
ja
cltd
xchg
dec
in
aaa
aaa
std
lret
inc
cmp
enter
std
cmpsb
inc
cmp
mov
push
mov
mov
jno
pop
lcall
std
push
add
out
push
mov
jo
das
add
nop
mov
xlat
or
sbb
adc
xchg
addb
add
or
mov
sbb
imul
xchg
jp
das
and
pop
or
jnp
jmp
lcall
mov
inc
pop
sbb
fsubs
fs
leave
sti
repnz
push
and
dec
cwtl
lods
fdivrl
cs
lcall
mov
lods
pop
je
imul
push
in
in
les
rol
int3
pop
out
sti
adc
test
es
sahf
ja
fcmovu
fidivrl
scas
test
mov
pop
sub
lahf
mov
lods
int
sahf
adc
mov
cs
jecxz
fs
stos
cs
inc
fsubrl
fadds
mov
in
pop
lock
cs
jb
pushf
call
or
and
mov
dec
in
jbe
jne
push
mov
test
mov
cmp
inc
inc
add
mov
rcrb
test
push
cmp
stos
mov
jne
imul
mov
add
movsb
jae
push
rol
mov
out
jb
sub
adc
inc
xor
imul
popf
xchg
xor
iret
push
mov
dec
xchg
mov
fisubrl
in
pushf
adc
sti
mov
sbb
fsubs
mov
mov
push
push
and
cmc
addr16
xchg
jp
push
xchg
addl
adc
lret
sbb
loope
push
push
movsl
xchg
jmp
xor
and
sbb
es
inc
pop
push
mov
aad
xchg
adc
lret
xchg
xchg
adc
add
aad
sbbb
fistpl
sahf
es
ds
inc
push
imul
mov
dec
fwait
xor
scas
cli
jo
sbbl
ret
ds
or
clc
outsb
mov
cs
xlat
inc
dec
xchg
ret
ret
jp
loope
imul
pop
stos
rcl
lcall
cmpsl
frstor
loopne
repz
push
lcall
jl
push
sub
xor
dec
test
aam
dec
lcall
jno
jg
data16
int
in
xlat
sbb
nop
xlat
inc
cld
mov
cld
pusha
iret
xchg
sub
jae,pt
and
ja
fbstp
in
repz
push
add
in
les
and
outsl
xor
xchg
call
mov
mov
and
fiadds
cmpsl
dec
nop
inc
test
pop
rcrl
push
mov
into
add
sbbl
mov
jnp
idivb
les
mov
pop
andb
dec
lcall
aad
mov
adc
ljmp
pop
pop
pop
cmp
sahf
push
les
repnz
faddl
mov
leave
roll
inc
and
cmp
inc
lret
bound
mov
stc
fnstsw
push
pushf
int3
lea
fnstcw
pop
sub
lcall
mov
cmp
or
pop
inc
and
insl
and
ss
idivl
mov
imul
adc
call
test
jg
adc
xor
fsub
xor
inc
pop
xchg
jae
cltd
and
das
cmpsl
sub
push
std
fisttpl
jp
icebp
mov
xchg
xchg
xchg
in
jne
xchg
fisttpl
xchg
ror
mov
into
xlat
ja
es
movl
adc
movsl
shll
jne
mov
and
mov
movb
test
leave
cmpl
inc
lods
movsl
mov
xor
add
dec
fistpl
loopne
test
sub
pop
and
leave
in
xor
scas
push
stos
test
cmp
sub
mov
hlt
call
es
add
insl
hlt
dec
lret
sbb
and
adcl
test
pushf
and
jg
into
rcll
jnp
insb
mov
rcll
cmc
arpl
push
pop
adc
pop
scas
movsl
add
enter
les
add
cmpsb
cmp
push
dec
sub
imul
dec
dec
iret
aad
sbb
ljmp
fs
fsubl
sub
insl
std
xor
and
shrl
mov
ljmp
inc
imul
fwait
pop
rolb
pop
cmc
xchg
lods
sarb
out
idiv
out
jmp
add
pop
fidivs
stos
add
jge
jnp
mov
fcomp
sbb
sbb
mov
mov
cmpsb
clc
rclb
fwait
adc
jno
sti
cmp
and
sbb
cmp
lods
lods
in
cmp
jmp
xchg
xchg
inc
outsb
pop
mov
sub
add
movzbl
xor
popa
jo
lahf
mov
adc
dec
cmp
pop
or
mov
push
mov
and
xchg
frstor
jge
jae
sub
fcomps
jne
frstor
aad
xor
xchg
dec
xchg
jle
jno
dec
push
test
mov
push
pusha
fstpt
lds
out
and
or
insl
lret
stc
mov
sahf
cli
cmp
popf
push
sbb
adc
dec
jno
or
sub
icebp
repnz
dec
inc
mov
adc
sbb
sub
rclb
nop
push
les
xchg
stc
loope
nop
xchg
push
cltd
xchg
inc
movsl
ds
mov
imul
add
addr16
jp
ror
lds
adc
addr16
sub
add
cmp
jb
and
fdivrs
add
imul
xor
ljmp
std
mov
xchg
int
xchg
sti
lahf
int3
lahf
test
mov
pop
sbb
cmp
popf
sbb
push
fidivs
inc
cmp
mov
cmp
xlat
ljmp
outsb
mov
mov
cmpsl
inc
adc
cmpl
imul
or
in
fisubl
scas
cmp
push
fcmovne
lods
xor
add
xlat
or
rolb
cmp
sbb
xchg
dec
cmpsb
xorb
pop
inc
shrl
or
dec
dec
fisttps
fidivs
fcompp
sbb
cmpsb
stos
scas
dec
fidivl
add
mov
cmpsl
push
lods
les
pop
and
xchg
popa
fdivl
cs
xor
sub
shll
movsl
and
into
pop
movsb
sahf
xchg
jno
mov
mov
testl
mov
add
push
push
aaa
aas
es
jae
mov
push
xor
mov
arpl
ret
sbb
fwait
arpl
mov
fs
hlt
mov
jg
aad
pop
dec
enter
es
push
leave
sarb
cmp
cmp
es
and
sti
cmp
js
cmp
push
and
dec
lret
scas
test
push
cld
mov
or
aam
gs
push
inc
sbb
jge
xor
pop
bound
sub
sarl
push
cmp
pop
push
aas
cmp
sbb
shr
outsb
pushf
shlb
leave
cmp
ds
dec
dec
sub
shlb
and
jmp
aas
outsl
pop
sbb
sbb
ret
push
cmpsl
popl
push
mov
pop
mov
lret
jae
push
jo
cmpsl
add
mov
sbb
pop
or
cld
xor
push
or
xlat
pop
jo
nop
or
inc
fimull
jl
push
or
jg
inc
daa
sub
or
dec
lods
xor
rolb
xchg
mov
jmp
lret
xor
dec
add
adc
mov
aad
or
adc
loop
hlt
es
adc
shll
aad
daa
jg
addr16
fdivrs
adc
cmpsb
lret
dec
mov
mov
mov
movsb
inc
test
xchg
lock
inc
xorb
mov
test
out
push
jle
enter
push
dec
fs
cmp
mov
jecxz
hlt
aam
notl
lods
subb
inc
cmp
sysexit
insl
pusha
or
or
jge
outsl
roll
imul
fiaddl
mov
mov
cld
cltd
sbb
mov
pusha
pop
loope
inc
pop
and
cs
inc
inc
aas
inc
scas
rcrl
cmp
repz
enter
inc
xor
in
or
mov
lea
push
test
pushw
jbe
adc
mov
out
mov
int
xor
leave
gs
sbb
dec
flds
addb
cmpb
sbb
mov
pop
sub
int
dec
mov
adc
or
xchg
dec
inc
data16
xchg
xchg
jle
dec
push
inc
mov
or
ficomps
sbb
outsl
int3
cmpsl
movsl
shll
or
mov
sub
jno
jno
mov
decb
push
ffreep
sbb
mov
sub
push
mov
jbe
ret
lods
and
test
mov
jbe
jl
mov
add
adc
fdivr
sub
insl
cmpsb
test
xchg
xor
into
clc
push
popa
inc
test
xor
mov
mov
mov
pop
sti
adc
mov
int3
inc
push
add
cmp
sub
test
arpl
xchg
in
cmp
icebp
aas
loopne
xrelease
cmp
scas
cmc
xchg
mov
pop
fmull
xor
pop
or
nop
sbb
jecxz
pop
pop
insb
ja
add
pop
inc
xchg
inc
lea
jae
cltd
arpl
fwait
int
and
movb
mov
scas
jo
ss
and
cmpl
fiadds
xchg
fucom
icebp
adc
loopne
add
lahf
sbb
outsl
bound
data16
pop
dec
jns
mov
pop
out
jl
mov
aam
pop
pop
jle
xchg
lea
xchg
adc
mov
aaa
rol
mov
outsl
lea
aaa
ds
sbb
ret
and
xor
push
loope
loope
je
mov
jecxz
xor
stc
adc
or
mov
mov
cltd
in
mov
mov
sti
adc
in
rcll
mov
clc
pop
dec
xor
jbe
mov
sub
js
and
jo
mov
aam
or
loopne
lock
sbb
pop
xorl
addr16
xor
mov
sub
add
or
jno
out
mov
jl
repnz
sbb
sub
mov
mov
loop
mov
addr16
or
xor
fldenv
xchg
dec
lods
iret
mov
mov
sbb
lods
repz
leave
inc
fnstenv
insb
dec
lock
dec
jmp
add
jb
sti
pop
pop
and
mov
sub
mov
sarb
addr16
fdivl
cwtl
ja
cld
dec
pop
pop
dec
movsl
cmp
movsb
iret
lods
pop
ss
movsl
stos
pop
repnz
mov
push
mov
dec
cmpsb
cltd
cs
out
dec
mov
push
dec
dec
dec
xor
xchg
insl
xchg
xchg
xchg
aaa
stos
xor
sahf
in
pop
push
imul
jmp
negl
and
mov
not
cmpsl
std
mov
addr16
and
xor
cmp
out
jl
jl
or
inc
leave
pushf
fcomi
xchg
data16
into
dec
adc
out
clc
inc
push
aad
gs
cmpl
jle
bound
push
cmpb
ficoms
jo
dec
fwait
xchg
fiadds
mov
pop
sahf
ljmp
scas
test
inc
in
cmp
xor
mov
xchg
mov
stos
mov
mov
xchg
test
mov
lahf
testb
in
or
testl
rorb
push
icebp
pop
jle
js
jnp
shlb
pop
and
mov
add
lcall
sub
ljmp
ret
out
lods
loopne
stos
fdiv
dec
jns
out
pop
imul
mov
je
inc
lahf
sbb
insb
in
nop
sti
mov
jmp
lahf
jns
jp
or
or
sub
in
fsts
test
rorb
pop
gs
xchg
ljmp
and
jb
add
xchg
mov
outsb
mov
dec
mov
inc
add
pop
inc
adc
sub
test
stc
fists
stos
daa
popa
into
icebp
aas
mov
xchg
sbb
iret
enter
adc
insb
pop
aad
dec
movsl
jae
mov
push
outsb
movsl
xchg
scas
bound
mov
xchg
in
outsb
pop
push
pop
or
dec
mov
pop
push
mov
cmp
imul
fldcw
fisttps
js
push
and
add
int
pop
movsl
add
xlat
aas
pop
aam
inc
imul
jp
fs
pmaxsw
mov
repz
dec
stos
push
sbb
add
xchg
adc
orl
rcrb
lret
outsb
ret
fiadds
ds
adc
cmp
cwtl
xchg
sub
inc
fs
lods
cltd
xor
data16
cltd
dec
repnz
hlt
mov
mov
push
test
fldcw
cld
pop
aam
lock
out
into
std
pop
push
jae
cli
pop
or
dec
out
add
push
js
inc
insb
pop
sub
xor
stc
pusha
mov
xchg
movhps
jle
push
cmp
scas
push
pop
and
mov
aas
lods
xchg
cmp
lds
pop
out
imul
jp
mov
cmp
xor
mov
pop
sub
out
cld
test
mov
pusha
jnp
pop
mov
cmpsb
test
scas
mov
mov
dec
add
orb
lea
xlat
or
sub
imul
mov
out
cmp
cmp
xchg
xlat
xchg
mov
xor
jo
popf
xchg
pop
or
cld
js
cmpb
mov
cmp
xchg
mov
xlat
rolb
mov
push
mov
sahf
mov
test
fndisi(8087
ficoml
bound
rcl
cltd
fistl
call
jbe
mov
cmp
movsl
and
push
les
int3
fs
js
out
outsl
sub
xchg
int3
call
cltd
test
dec
scas
popf
adc
inc
aad
pushf
cmc
out
popf
out
cmp
mov
jbe
fidivl
push
arpl
sar
adc
movsl
in
pop
lea
in
xchg
mov
lods
dec
add
or
sub
loopne
mov
xor
dec
sbb
jnp
adc
test
sub
icebp
loop
out
cmpsl
nop
add
pop
loope
adc
or
xchg
inc
sarl
sbb
xchg
or
mov
add
fmuls
inc
int
pop
xorl
fiaddl
fisttps
cmpsl
mov
rcr
mov
adc
sbb
loopne
jno
or
jbe
and
and
rol
xor
lds
push
fdivrl
add
daa
scas
dec
clc
mov
insl
jg
inc
ret
xor
into
mov
stos
addr16
xchg
in
xor
pop
rorb
test
pop
jne
pop
dec
cmpsl
sbb
arpl
je
cmp
sahf
test
loop
mov
in
fwait
jbe
cwtl
adc
lods
mov
or
xchg
lahf
aad
jmp
movl
loope
clc
mov
lods
pop
aam
aam
testl
inc
jle
lods
lret
mov
popaw
in
xor
push
push
or
out
enter
push
icebp
or
add
in
out
jns
neg
xchg
mov
imul
push
cmpsb
adc
mov
add
push
enter
sbb
in
cmc
lds
mov
es
xchg
mov
popf
nop
cs
or
inc
pop
push
movsl
inc
outsl
mov
dec
inc
mov
mov
push
repz
mov
mov
pop
cli
inc
jmp
ja
jbe
sub
push
or
cmpsl
inc
jns
and
out
jb
cmp
sbb
aaa
jl
clc
sbb
mov
xor
out
stc
cmc
shll
dec
daa
fsubl
push
insb
sub
movsl
out
mov
imul
hlt
repz
pop
jbe
pop
fwait
aas
jb
imulb
cmp
daa
cmp
mov
pushf
jp
lock
push
push
mov
mov
addr16
pushl
pop
or
popa
sbb
sbb
xchg
mov
sahf
jp
into
imul
fiaddl
insb
andl
lods
push
lret
loope
ficomps
int
inc
test
sub
adc
push
ds
push
dec
and
fsubs
add
adc
inc
xor
jmp
mov
rcl
mov
and
test
mov
ret
sbb
leave
dec
lea
test
call
xorb
cld
std
jns
in
popf
sbb
dec
movsb
mov
mov
ret
sarb
xor
ss
jmp
or
xchg
cltd
or
mov
addl
cs
cwtl
and
imul
cmpb
xchg
mov
sbb
push
jne
call
cmc
aaa
lahf
sub
aad
movsl
xor
jg
mov
lcall
lcall
leave
enter
pop
dec
mov
cmp
xchg
sbb
dec
fisttpll
mov
jp
lock
dec
inc
enter
outsb
xchg
cmp
push
shlb
inc
push
jge
insl
xor
cmc
cmpsb
addr16
shll
cmp
fidivrl
jb
or
add
in
loopne
jg
cmc
cli
stc
xchg
or
dec
push
addl
xchg
repnz
fcoms
mov
mov
push
cmp
xchg
das
sbb
hlt
and
test
out
mov
ljmp
sbb
xor
push
pand
add
mov
jl
ret
aas
push
cmp
jge
xchg
in
add
ja
sahf
or
push
ja
aam
ret
adc
xor
sub
outsb
pusha
mov
out
int3
add
into
inc
push
push
je
mov
mov
aaa
mov
sub
lock
cmp
adc
xchg
xchg
sbb
mov
cmp
fiaddl
das
cmp
call
fldcw
xchg
clc
ljmp
jne
push
jge
fucomp
jp
enter
shlb
xor
sbb
pop
aas
jecxz
pop
mov
cmp
ljmp
insb
mov
sti
shlb
cmpsb
mov
iret
fdiv
dec
mov
notb
and
pop
jae
ds
inc
loopne
not
jecxz
ljmp
insl
shlb
andb
xchg
cld
mov
gs
cwtl
push
subl
mov
cli
mov
cmp
mov
add
mov
cs
ret
jb
jb
fwait
pop
sub
sub
sbb
out
and
repnz
imul
mov
outsl
mov
daa
lea
dec
enter
fldlg2
pop
mov
cmpsl
outsl
sub
add
pop
push
push
mov
icebp
in
inc
jae
mov
push
fists
call
fs
sub
jnp
out
mov
call
icebp
lret
push
and
dec
pop
adc
icebp
mov
or
or
xchg
dec
dec
pop
add
jnp
or
sbb
or
xchg
inc
mov
push
sub
iret
movsb
pop
iret
scas
jbe
idivb
jge
mov
shrl
pop
insl
pushf
shlb
lods
xchg
xor
jmp
idivb
sbb
les
push
dec
or
mov
dec
movsb
push
je
fcoms
dec
arpl
mov
mov
adc
sbb
sti
scas
lea
cmpsl
inc
test
lret
push
dec
push
jo
or
fidivrl
sbbb
jno
and
lahf
mov
imul
add
push
pop
hlt
sahf
sbb
pop
popf
fstps
push
mov
sahf
and
mov
jo
xchg
pop
lds
mov
imul
push
das
xchg
es
ret
dec
clc
sub
sbb
loop
test
sub
cmp
and
pop
jg
sub
shll
pop
jmp
pushf
and
mov
imul
aam
xorb
std
push
cmp
in
sub
dec
push
test
dec
movsb
pusha
fildl
out
jl
stos
aas
std
jg
and
test
into
fistpll
push
and
adc
iret
je
fst
int3
pop
and
ds
mov
bound
push
cwtl
outsl
in
inc
out
sbb
gs
adc
icebp
lds
jmp
adc
mov
mov
bsr
mov
movsb
mov
xor
lcall
lock
push
adc
scas
sarl
das
jno
scas
mov
push
push
fldcw
mov
aad
xchg
pop
mov
int3
pop
outsb
incl
lret
popf
push
fnstcw
add
add
mov
fldenv
lret
jno
rcll
add
cmp
sub
mov
test
jmp
ds
fwait
pop
inc
pop
loop
mov
jl
nop
rcll
mov
aaa
mov
dec
popa
lret
bound
aaa
xor
popa
mov
pushf
aam
inc
mov
xor
push
ljmp
inc
rolb
jg
mov
mov
outsb
mov
pop
mov
lret
jmp
insl
notb
add
dec
xor
mov
xor
xchg
xchg
cmp
mov
fsubrs
popa
popa
andb
lret
jno
cwtl
fadd
pop
mov
data16
loop
and
in
sub
mov
ljmp
cld
scas
stos
pop
ljmp
ret
xchg
lret
std
push
sbb
xchg
push
inc
and
pop
out
mov
orb
mov
mov
sbb
fidivrl
mov
push
repz
or
mov
jp
addr16
insb
imul
pop
fstl
mov
repnz
mov
sahf
xchg
fwait
sub
cmp
inc
inc
mov
jmp
outsl
out
push
dec
mov
adc
jecxz
gs
shrb
adc
mov
dec
and
daa
push
int3
sbb
xor
jb
test
cmpsl
push
rol
jne
pop
out
mov
aam
xlat
scas
push
aaa
cmp
inc
daa
lea
setp
mov
or
in
inc
pop
sbb
jbe
or
add
sbb
idivb
xor
mov
cwtl
xchg
add
ret
mov
fwait
push
faddp
popf
sarb
push
shll
rolb
into
adc
lock
js
repz
popa
xor
mov
mov
xor
sub
mov
fwait
stos
pusha
push
test
mov
stos
pop
add
mov
bound
movl
and
pop
or
xor
das
add
xchg
pusha
jns
int3
push
arpl
pop
or
cs
pop
pop
add
adc
lret
je
test
pop
sbb
loopne
mov
popf
dec
ljmp
shll
pop
pusha
dec
inc
pop
imul
and
mov
inc
cmp
lret
mov
push
fcmovb
pushf
lret
stos
popa
arpl
adc
pop
ds
mov
cmp
and
and
pop
out
sbb
fmul
lock
test
add
scas
sbb
jae
cli
aas
xchg
idiv
test
mov
and
mov
push
add
xchg
sbb
dec
das
dec
cmp
sub
xor
mov
and
ficomps
sub
ret
jg
int
lea
push
popf
fisubs
leave
in
in
xchg
repz
mov
inc
dec
scas
jb
push
lahf
mov
mov
outsb
mov
inc
dec
gs
pop
inc
or
insl
into
mov
adc
fs
movsl
jmp
adc
sbb
test
jge
jnp
add
sti
movsl
or
scas
popf
cltd
xor
jno
repz
xor
adc
pushf
cmp
inc
sahf
mov
aas
xchg
adc
int
fistps
pop
arpl
aas
dec
loopne
or
loop
push
enter
mov
xor
mov
xor
inc
jg
add
lods
dec
or
shlb
cld
fsts
sbb
lea
fdivr
jl
xchg
nop
jl
xor
fmull
hlt
jmp
cmp
inc
fs
sub
mov
fmull
dec
test
jge
cmovge
mov
jmp
inc
xor
int3
add
out
inc
sub
mov
cwtl
jp
lahf
clc
add
leave
or
fs
addr16
and
push
ret
or
mov
xor
pop
inc
in
push
cmp
arpl
jl
sub
jne
das
fisubl
jno
adc
aaa
shrb
lock
mov
fistps
cmpsl
icebp
add
repz
jp
xchg
std
test
add
mov
and
jnp
je
xchg
rcrb
js
xor
sti
sbb
mov
jnp
or
or
sbb
jo
add
or
adc
jno
cld
cmpsb
xor
push
mov
xchg
and
test
daa
add
cmpsb
je
and
add
push
clc
lock
popa
loope
dec
and
or
mov
adcl
fdiv
lret
cltd
pop
leave
ja
int
sub
mov
enter
call
mov
fdivs
inc
pop
and
dec
stos
fmulp
repnz
xor
movlps
jne
clc
and
push
mov
add
xorl
and
stc
hlt
xchg
mov
cmpsb
repz
sarb
mov
sub
and
lret
xchg
push
sbb
lret
popf
int
jg
ja
sbb
mov
and
pop
push
mov
out
mov
mov
movsl
addl
pop
pop
mov
sbb
stos
frstor
loope
out
lret
repz
and
loope
or
sarb
adc
divb
push
jns
mov
loope
icebp
xchg
data16
aas
cmc
dec
rcrb
push
into
inc
std
mov
sub
push
add
fwait
les
stos
and
xor
and
push
cmc
repnz
ret
mov
mov
jge
add
popf
cmp
dec
aas
push
int
shll
hlt
cld
cs
cmp
out
test
pusha
outsl
lods
mov
push
jmp
push
dec
xchg
pusha
jo
adc
sahf
sahf
fdivrl
addl
push
lret
cmp
and
xor
xlat
mov
sub
lret
adc
sub
mov
dec
add
xchg
sbb
in
fwait
test
or
sub
aam
xor
pop
outsb
cltd
lcall
loopne
inc
scas
xlat
jnp
fdivl
sarb
movsb
dec
inc
pop
push
out
test
mov
sub
movsb
inc
inc
sub
push
cld
loop
mov
stos
jl
push
cwtl
out
sub
in
sbb
xchg
fdivrl
pop
inc
fisubs
sub
add
fs
in
std
xor
jmp
push
out
pushf
call
add
rorl
stc
pop
mov
mov
mov
xchg
stc
fists
loop
fnstsw
mov
cmp
cmpsl
xor
push
jae
test
arpl
test
clc
adc
dec
push
inc
rolb
lret
jnp
cmpsl
icebp
mov
pop
add
mov
jo
clc
aad
inc
xchg
pop
ret
cmp
dec
cmp
lods
insb
mov
mov
add
roll
je
movsb
outsb
mov
scas
leave
jb
xchg
ss
testb
push
pop
pop
push
aam
mov
mov
test
in
scas
call
testb
dec
dec
icebp
leave
in
sti
enter
cmpl
das
fmuls
in
push
and
or
push
pop
inc
inc
sub
dec
sbb
add
adc
sub
leave
jmp
inc
loopne
push
into
jg
iret
sbb
or
cld
cmpsb
sub
adc
jl
decb
mov
mov
cmp
cli
cwtl
das
jmp
adc
int3
jne
adc
test
or
and
loope
inc
lock
cmpsb
xor
shlb
xchg
faddl
adc
imull
xor
call
xchg
clc
mov
shrl
cmp
ret
test
mov
out
mov
push
bound
insb
arpl
je
mov
addr16
sub
gs
dec
ret
lock
ds
or
jb
cli
pop
push
ret
xor
ljmp
mov
frstor
jp
mov
and
ds
jnp
icebp
cmp
aad
fistl
outsl
call
add
sbb
adc
roll
shl
mov
jmp
lret
pop
mov
dec
pusha
jo
adc
jne
test
and
push
test
test
or
add
jge
inc
mov
leave
xlat
cltd
and
aam
or
data16
inc
xor
xchg
and
inc
int3
addr16
jne
adc
push
or
mov
out
and
inc
dec
les
inc
xor
mov
dec
mov
xchg
imul
sbb
mov
mov
pop
and
or
and
cmp
and
jmp
lea
int
push
sahf
sahf
scas
je
mov
sub
and
inc
cmp
in
filds
sbb
xorb
daa
fcmovbe
lods
pop
inc
shr
movsl
subb
mov
sub
jae
push
or
out
lcall
call
mov
cwtl
sbb
jno
sbb
mov
mov
negl
jle
add
jne
mov
lahf
push
mov
xor
xchg
jae
addr16
xchg
sti
sbb
scas
aaa
outsl
out
mov
push
stos
push
addr16
adc
cmp
mov
stos
and
out
shrl
push
stos
pusha
pop
mov
add
and
call
or
popa
in
mov
std
inc
cmpsb
jle
aas
pusha
sub
xchg
pushf
out
jne
cmp
cmp
movsb
jl
mov
xchg
pusha
inc
mov
jmp
call
stos
sub
sub
jp
sub
test
ja
dec
dec
xor
jno
movd
push
out
or
ljmp
jne
sub
into
and
mov
xchg
div
cmp
pop
xchg
fidivrs
jne
je
push
movsb
mov
aad
jge
cmpb
push
out
xlat
push
pushf
mov
mov
mov
nop
ror
lods
xchg
fisttpll
sbb
push
insl
testl
insl
pop
dec
test
mov
loop
movsl
nop
mov
jl
and
aaa
mov
rep
scas
sarl
out
imul
ret
cmp
or
lahf
out
xor
sbb
divb
rcr
xor
mov
fldl
cld
mov
repz
xor
push
mov
jmp
ss
push
push
mov
inc
in
popf
in
test
adc
xchg
mov
repz
mov
mov
add
mov
popa
dec
fldcw
mov
add
jns
cs
aad
ffreep
inc
cmc
cld
and
scas
xchg
push
sarl
push
sahf
sbb
jp
test
push
mov
lcall
outsl
push
push
add
xchg
mov
in
xchg
dec
dec
sahf
out
iret
or
cmp
mov
mov
pop
jno
ftst
das
rcrl
push
xchg
fcomip
sub
mov
sub
bound
gs
sbb
push
stc
loopne
lcall
scas
xchg
lcall
and
add
xor
push
xchg
and
scas
js
or
pop
lahf
cmp
pop
sarl
addr16
sahf
cld
and
and
dec
fcoml
movsb
test
ja
jle
push
pop
sbb
out
or
mov
or
mov
repz
push
mov
aad
sbb
mov
addr16
shlb
sbb
push
pop
testb
in
push
outsb
mul
adc
jp
dec
decb
jns
popf
sbb
pop
jp
xchg
cmp
mov
lcall
test
inc
aam
ds
test
arpl
push
dec
xor
inc
in
daa
cld
pop
dec
maxps
sahf
jb
or
add
imul
add
out
scas
mov
adc
mov
jnp
xchg
or
sbb
ljmp
jecxz
add
pop
xor
pop
icebp
sub
mov
addr16
pusha
nop
stos
out
adc
jb
jno
cli
ret
add
jo
xchg
inc
sti
clc
sub
fcoml
mov
cmp
jbe
jae
push
and
sbb
add
int3
inc
ret
mov
out
mov
xchg
cwtl
ret
and
fwait
and
js
cmc
mov
sarb
add
pop
bound
inc
es
mov
outsb
ja
mov
add
out
mov
mov
xor
sub
cmp
les
mov
adc
addr16
or
cmpsl
in
push
cmp
rolb
sbb
jl
xchg
add
jae
xlat
sub
push
andb
test
int
xor
dec
scas
ret
sub
addb
cmpl
shr
in
outsl
repz
cwtl
loopne
adc
aaa
push
jg
inc
jp
or
ss
cmpsb
out
dec
jns
stc
jns
sub
adc
dec
addr16
pop
mov
cmp
pop
mov
pop
inc
bound
clc
les
imul
jae,pt
daa
cltd
push
sbb
cmp
rcl
jl
cmc
std
fucomp
pop
orb
scas
jbe
lods
push
mov
nop
fwait
or
adc
pop
fidivrl
sti
or
jo
pop
lods
add
sbb
inc
xchg
push
fwait
inc
sbb
dec
cmp
fcoml
push
sbb
mov
push
int
test
adc
mov
jb
cld
movsl
in
xor
int3
mov
sbb
jne
mov
popa
fimull
and
inc
cli
enter
rclb
stc
push
ds
pop
xchg
adc
scas
xor
lret
add
inc
popf
cmpsb
aaa
xchg
js
or
imul
mov
sub
pop
outsb
flds
adc
leave
icebp
push
xchg
outsb
inc
fwait
push
shll
and
mov
xlat
lahf
icebp
lcall
inc
pop
lea
js
mov
and
test
mov
push
adc
lret
lret
jnp
add
imul
xchg
cs
mov
mov
ljmp
jno
or
das
pushf
cmp
repnz
or
jne
aam
jns
mov
adc
aaa
lret
or
out
pop
push
pusha
roll
cmp
jl
orb
jmp
and
mov
mov
in
bound
pop
push
sub
fisttpll
arpl
mov
push
stc
into
cs
inc
sub
mov
pop
jbe
dec
leave
in
jl
jne
dec
test
xchg
sarb
imul
outsl
lods
loopne
push
and
jo
push
cld
cmpsl
or
pop
daa
pusha
cmpsb
out
inc
shl
aaa
mov
sub
or
pop
call
cmpsl
movsl
adc
sub
xchg
pop
lcall
or
inc
sub
or
out
jno
cmp
pop
sub
and
push
push
aam
hlt
sub
push
dec
outsb
fldt
cmp
mov
cld
xor
jg
jb
scas
add
inc
adc
scas
xchg
cmp
pop
xchg
cmp
fsubrs
mov
aad
xchg
aas
inc
sub
arpl
dec
imul
inc
push
cli
mov
out
or
ss
jns
dec
dec
or
mov
stc
jmp
xchg
sbb
pop
mov
test
rcrl
add
sti
xor
bound
lret
je
movsl
jle
pop
xchg
pusha
pop
mov
jb
push
sub
add
insb
imul
xor
or
pop
inc
out
filds
pusha
insb
cmp
fiaddl
sub
cmp
push
push
adc
mov
lock
pop
ss
pop
sbb
or
inc
jnp
pusha
mov
pop
popa
push
stc
jns
scas
jecxz
lods
les
mov
and
clc
xor
mov
push
fidivrs
scas
and
int
xchg
cltd
mov
mov
or
sbb
testl
lahf
leave
sub
enter
shrb
outsb
lock
mov
pop
add
sti
push
int3
sub
out
or
pop
dec
mov
in
lods
jl
jmp
out
enter
pop
mov
test
jp
js
fucom
adc
mov
aas
xor
inc
sub
fs
xchg
mov
es
mov
inc
dec
jae
xchg
xchg
mov
subb
push
pmullw
push
push
jecxz
cmpsb
fwait
dec
sbb
daa
jl
push
into
ss
testl
fcoml
push
shll
inc
jne
mov
cmp
push
scas
xor
je
xor
out
arpl
movsl
cli
inc
mulb
push
fucom
ret
lock
fisttps
test
push
lock
or
cld
or
inc
loopne
scas
mov
sub
rcr
sub
repz
stos
mov
sbb
pop
pop
scas
ret
cmp
cmp
adc
jl
jbe
ret
push
test
shr
fidivrs
or
cmp
adc
adc
es
jle
das
lds
nop
movsb
add
inc
push
sub
and
lcall
dec
pop
mov
pusha
cmpsb
test
les
inc
icebp
lods
push
xchg
out
adc
jmp
adc
push
cmp
idiv
sub
in
insl
out
cmp
add
repnz
shl
rol
nop
insl
fidivs
jmp
jecxz
in
daa
aam
hlt
jns
or
xchg
mov
jb
inc
or
movsl
jne
repz
cltd
xchg
popf
lahf
adc
fucomp
fsubrp
xchg
push
movsb
or
xchg
jae
push
adc
or
mov
xor
inc
xor
ficoml
sbb
or
mov
jecxz
and
dec
jmp
fstps
mov
loopne
dec
addr16
fcmovu
test
addl
movsl
cmp
fwait
outsl
mov
push
lret
popl
adc
or
mov
mov
lods
ficomps
iret
mov
lahf
mov
fs
cs
loop
mov
insl
xor
dec
mov
inc
dec
inc
push
sbb
jmp
sbb
lods
mov
mov
icebp
push
in
cmp
lret
into
push
and
cmp
mov
xchg
mov
mov
mov
out
mov
sub
loope
call
and
outsl
dec
test
adc
testl
sub
pop
clc
xor
inc
pusha
jbe
lcall
mov
stos
aas
mov
jo
incl
adc
adc
lock
or
push
pop
mov
int
adc
push
jno
dec
or
push
leave
out
xor
pop
xor
mov
gs
arpl
out
out
fdiv
into
xor
arpl
mov
loopne
mov
push
jg
les
adc
and
loop
arpl
dec
int
sub
mov
in
cmp
sub
mov
inc
adc
hlt
push
and
dec
mov
les
mov
lea
fwait
adc
mov
decb
pop
xchg
loope
mov
sbb
decl
scas
xchg
pop
lods
nop
mov
movsb
and
scas
insl
orl
mov
outsl
pushl
add
cmp
push
cmp
aas
lock
cmp
push
dec
inc
xchg
xchg
or
adcb
pop
mov
mov
xchg
pop
pop
repz
std
pop
sbb
push
or
add
sub
pop
cmp
fstpl
jecxz
cld
jle
jb
andl
sub
int3
roll
fstpt
sbb
out
sbb
cmp
add
leave
dec
stos
andl
pushaw
mov
repz
ja
dec
shlb
pop
adc
lea
fsubrp
push
cli
lods
push
ret
jge
add
sbb
ret
test
hlt
mov
fs
adcb
aaa
pop
lcall
ret
mov
cmp
enter
pop
jno
orb
mov
inc
add
fisttps
xchg
repz
lods
ror
cs
push
imul
in
fbld
cmp
repnz
mov
test
pop
sahf
mull
mov
cmc
ja
push
es
pushf
sub
pop
push
stos
je
shl
out
sbb
fisubrl
cmp
cmc
jg
xlat
inc
wrmsr
and
dec
push
push
scas
push
les
push
add
stc
shlb
pop
adc
cmpsl
mov
lret
les
dec
rcrl
stos
sub
filds
int3
dec
nop
data16
lret
jmp
push
shll
imul
std
jnp
push
cmpb
shl
je
mov
xor
scas
pop
lret
inc
lds
push
sbb
cmp
icebp
and
sbb
cmpsb
loopne
dec
mov
jns
pop
mov
mov
dec
pop
mov
pop
cltd
cltd
push
adc
mov
pop
sahf
push
cmp
lods
mov
popl
outsl
pop
loopne
push
sahf
add
push
je
rclb
sbb
in
xor
mov
jne
int
xor
movsb
ss
lea
fsubs
adc
adc
inc
push
out
iret
inc
xchg
xor
lret
addl
scas
push
ja
mov
xchg
xor
and
test
push
mov
sbb
mov
push
fcmovbe
fisttpl
ss
jnp
scas
cmp
test
sbb
adc
lds
rclb
sub
insb
sub
mov
cli
cmp
in
dec
xor
push
sub
out
inc
dec
int3
data16
pop
test
inc
adc
pop
loope
add
sub
xor
sarl
aaa
sub
leave
cmp
dec
or
mov
lds
pop
sub
jmp
mov
jp
cmp
inc
pushf
dec
mov
packsswb
cs
out
pop
adc
push
inc
nop
and
pop
mov
inc
clc
sti
test
xor
hlt
mov
iret
dec
push
lds
mov
pop
clc
repnz
pop
jge
mov
lea
fimuls
test
xchg
arpl
sbb
mov
mov
xor
jnp
xchg
jecxz
dec
and
pop
roll
mov
in
or
cld
mov
xor
stc
pop
inc
imul
sbb
sbbl
sbb
sub
pop
adc
mov
mov
lds
outsl
lea
sub
fildll
out
rorb
lret
imul
lcall
jmp
sub
scas
dec
mov
sbb
pusha
cwtl
jmp
sbb
popf
cmp
sarb
mov
loop
xchg
add
push
mov
adc
xchg
pop
cmpsb
leave
es
add
fs
push
cltd
dec
add
icebp
mov
sbb
mov
arpl
dec
sbb
insb
pop
outsb
das
cltd
push
add
insb
neg
daa
jecxz
inc
adc
mov
cwtl
push
add
out
adc
out
add
loopne
adc
sbb
sub
or
mov
pop
stos
mov
test
xor
repnz
dec
je
loop
pop
jns
popa
jle
sbb
jns
shrb
pop
sbb
xchg
push
out
fsts
sbb
cld
pop
jmp
push
push
jb
rol
in
pop
sbb
loope
dec
out
mov
push
xlat
out
push
sahf
data16
shlb
sub
xchg
testl
inc
mov
xor
maxps
dec
fsubr
aas
inc
mov
adcl
push
out
cmc
cs
rcrb
cmp
pop
or
lea
insb
testl
xchg
out
xor
and
in
leave
push
mov
fwait
xchg
mov
mov
push
fidivrs
iret
dec
xchg
mov
xor
pop
jne
adc
sbb
adc
xor
and
pushf
mov
push
fistpll
pop
cmc
xor
rcr
jp
mov
mov
push
mov
mov
xor
adc
sub
outsl
jmp
outsl
inc
imul
jo
and
pop
fcoml
mov
sub
imul
inc
fdivs
repz
sti
icebp
push
dec
imul
sbb
mov
xor
movsb
cmc
insl
adc
sub
lock
pop
adc
nop
lock
push
rorb
shlb
andl
push
scas
mov
jg
test
jno
stos
jns
call
clc
data16
add
out
fs
das
pop
dec
shll
and
cwtl
cmpsb
filds
rorb
xchg
addr16
dec
loope
mov
jg
xchg
lret
aad
ud0
repz
dec
ja
iret
xor
iret
xchg
in
cli
insb
hlt
lock
inc
xchg
iret
xchg
or
xlat
mov
sbb
movsl
mov
fimull
sbb
imul
jbe
mov
xor
inc
push
divb
sub
mov
jle
adc
in
pop
cmc
adc
inc
stos
test
pop
cmpsl
fmulp
cmp
xchg
mov
push
xchg
loop
pop
mov
jl
or
adc
cwtl
fs
lret
cs
xor
jp
icebp
add
out
mov
rcr
std
xchg
sar
cmpsb
mov
aaa
andl
adc
rclb
adc
testb
fwait
mov
movsb
aas
sarb
ret
adc
testb
mov
adc
shl
aaa
adc
and
mov
fsts
cmpsb
test
mov
push
pop
imul
gs
cmp
popa
dec
insb
pop
mov
ficoms
sbb
mov
push
xchg
inc
mov
pop
mov
adc
add
dec
scas
jb
pop
mov
sub
sti
data16
adc
fistps
jg
inc
xor
cltd
bound
test
cld
sbb
sbb
int3
mov
jae
cmc
xor
jns
jp
xorps
xchg
nop
gs
imul
ds
aaa
dec
pop
out
pop
mov
ret
lods
xchg
leave
ljmp
mov
mov
pop
inc
push
imull
mov
sbbb
mov
bound
dec
aad
mov
cli
push
lea
or
mov
cwtl
pop
adc
loop
sbb
in
sarl
imul
mov
lahf
test
add
lret
add
mov
scas
out
subl
inc
inc
jge
add
xchg
or
push
repnz
scas
push
loopne
xor
cwtl
lods
leave
jecxz
mov
insb
sub
inc
xchg
mov
xchg
fidivl
xchg
divl
dec
je
sub
cli
adc
fimull
pop
adc
push
jmp
inc
outsl
dec
fs
xchg
mov
push
mov
xchg
jecxz
out
fisubrl
mov
hlt
pop
inc
sbb
daa
jns
into
inc
repz
int3
pop
das
mov
push
iret
call
adc
xor
pop
push
test
add
pop
cmpsb
cld
mov
xor
shr
fnclex
xor
mov
cmp
orl
xor
pop
xchg
dec
fisttpll
fwait
sub
sbb
cmp
jp
aad
lea
es
adc
iret
cmp
jne
subb
mov
cli
in
xor
dec
and
js
test
fiadds
push
jo
jmp
fadd
test
in
lods
gs
xor
orl
or
or
jmp
stos
push
pop
hlt
mov
subb
loopne
mov
xchg
inc
push
mov
push
cwtl
or
imul
adc
dec
mov
ret
sbbb
adc
push
mov
test
sub
stos
xchg
mov
mov
repz
xor
out
sbb
mov
cli
out
clc
or
xor
and
leave
mov
mov
or
xor
lods
pop
lods
adc
dec
mov
or
sub
jle
pop
push
orl
icebp
test
lahf
in
pop
cmp
into
int3
mov
out
aam
add
mov
popa
add
fadds
and
jecxz
int3
bswap
scas
dec
test
rcrb
xor
fisubrs
test
fistpll
jmp
pop
js
xchg
jecxz
insb
lods
add
loopne
xchg
push
jbe
pushf
and
sub
movl
pop
ss
xor
punpckhdq
leave
cmc
pop
pop
cs
or
sbb
icebp
fdivrl
or
aaa
test
adc
mov
idivb
jne
cli
int
add
mov
test
popl
stos
mov
mov
cwtl
les
out
cmp
or
pushf
add
out
cmpsb
shll
sbb
adc
and
mov
mov
xor
jle
mov
into
mov
lods
xor
or
mov
shll
movsb
jg
adc
je
pop
lds
arpl
xchg
out
jl
push
mov
lock
mov
mov
xchg
shrb
inc
mov
jle
xor
xchg
push
int
ss
inc
mul
insb
sbb
jl
lret
inc
rol
outsl
loop
es
adc
rorb
arpl
fcoml
or
enter
nop
jo
adc
xor
adc
fwait
loope
aam
ljmp
ficompl
popf
adc
movsb
add
sub
sti
sub
dec
lea
aaa
outsb
mov
aam
lcall
sbbb
mov
lods
push
pop
popf
imull
pop
test
add
and
mov
aas
insb
aaa
cwtl
dec
test
dec
in
inc
out
mov
jno
outsl
sbbb
mov
sahf
lahf
movsb
jbe
dec
pop
bound
cwtl
dec
scas
shrd
aam
stos
test
or
hlt
sub
push
mov
std
insb
mov
popa
fstl
into
xor
fmull
pop
jae
test
into
fstl
adc
into
fs
int3
mov
sub
adc
test
aad
xchg
mulb
and
jne
addr16
aaa
insl
jecxz
inc
sarl
fisubl
mov
sbb
popw
outsb
inc
aad
jne
jnp
cli
push
jbe
loopne
add
mov
dec
addr16
mov
enter
aad
pop
mov
int
imul
and
jle
add
repnz
leave
mov
stos
adc
clc
out
pop
adc
loop
push
inc
and
pop
int3
test
xor
cmpl
dec
lret
and
sarl
push
dec
xor
dec
adc
gs
std
jmp
idivl
cwtl
out
mov
fistl
jb
xchg
cmp
sbb
add
aad
roll
add
sbb
sarb
cltd
cmp
cmp
int3
lcall
aaa
jno
mov
out
jmp
imul
fstpl
pop
out
mov
adc
inc
aas
xor
out
stc
fs
aas
iret
sub
fidivl
aaa
inc
in
pop
stos
pop
push
pop
xchg
cwtl
sbb
push
pop
jl
pop
movsb
xchg
in
mov
pop
inc
jg
cmp
xlat
mov
rorb
pop
jmp
insl
xchg
gs
inc
test
movsl
xchg
lcall
mov
dec
outsl
lahf
jne
and
or
mov
fld
inc
jmp
xchg
mov
aas
cmc
jl
lret
in
subl
cwtl
fsubl
enter
arpl
leave
mov
push
xchg
repnz
pop
cmpl
aaa
test
lds
mov
jp
test
xchg
jecxz
jmp
sub
dec
in
fidivs
stos
sbb
cmp
sub
and
pop
xchg
aam
inc
and
das
adc
dec
rcrb
mov
sbb
jo
push
or
std
sbb
dec
mov
add
lds
adc
jg
cwtl
sti
dec
cltd
inc
jnp
inc
jecxz
sbb
bound
mov
ss
xchg
inc
ret
dec
stos
pop
mov
jne
mov
lcall
and
dec
and
std
mov
int3
lds
or
fwait
pushf
dec
adc
add
mov
sub
mov
cmp
and
int
inc
pop
sahf
in
mov
nopl
jecxz
mov
push
mov
arpl
stos
cmc
les
rcl
sqrtps
insb
inc
xchg
xchg
push
sbb
in
xor
icebp
adc
adc
adc
cs
cmc
pop
xor
out
mov
fldl
adc
cmp
or
cmp
loop
daa
movsl
jno
and
mov
scas
dec
xchg
outsb
daa
inc
inc
and
xlat
loopne
test
jo
insb
xchg
cmp
shlb
pop
movsl
xor
out
fcmove
jo
mov
idiv
mov
xchg
inc
sub
das
jno
ss
int3
inc
inc
je
call
sub
jno
fucomip
pop
inc
sbb
cmpsb
loope
xchg
int
pop
enter
xchg
xor
ret
fs
mov
enter
pop
daa
push
js
jecxz
or
mov
insl
pop
pusha
cld
insl
loop
lret
sbb
les
mov
and
aam
jns
jecxz
xor
fldcw
leave
pop
jno
adcb
mov
out
shrb
lods
test
mov
scas
cvtps2pd
imul
hlt
je
test
ret
or
xor
dec
pop
mov
dec
outsl
xor
mov
pop
aaa
sub
ss
arpl
outsb
lret
dec
and
das
jl
inc
lods
inc
push
xchg
shlb
shll
sbb
sub
sub
dec
xor
movsl
arpl
jb
and
jnp
jnp
sahf
cmp
dec
outsb
aam
xchg
jnp
icebp
fnsave
fidivrl
cmp
ret
dec
sbb
and
shlb
add
mov
inc
imul
cmp
mov
dec
push
jne
lock
push
sbb
fdivrs
cmp
inc
and
mov
adc
pop
xlat
inc
insb
push
cmp
xor
push
dec
lcall
adc
lea
cmpsl
movsb
jnp
sbb
movsl
cltd
movsl
scas
jae
mov
xchg
sub
jmp
push
stos
and
fisttps
nop
test
pop
cs
movsb
jo
sub
mov
mov
aad
dec
inc
xor
aaa
pop
std
cmp
loope
jmp
outsl
insl
xchg
inc
xchg
jecxz
add
daa
scas
mov
push
push
cmc
jno
push
sub
jne
dec
ljmp
sbb
in
mov
divb
xor
lock
xchg
xor
rclb
jae
lods
xlat
or
pop
jecxz
xchg
push
pop
dec
jecxz
inc
call
mov
lret
outsb
dec
jns
cmp
xchg
sbb
xor
lret
mov
sub
push
aad
mov
cmpsl
xchg
daa
cmc
dec
and
gs
mov
add
cmp
push
lret
shrb
aad
mov
adc
lret
pop
mov
push
int3
lock
icebp
jge
cld
push
and
shl
aas
pop
addb
sub
loope
cmpsl
jecxz
imulb
pushf
xchg
add
mov
push
inc
fbld
int
mov
fucomip
pop
inc
xchg
mov
jmp
lods
or
loopne
sub
bound
repnz
mov
test
dec
pop
jbe
inc
repz
sub
jecxz
sbb
int3
dec
mov
jo
imul
xor
sub
sub
mov
sub
mov
sub
fcomi
xchg
sahf
rcrb
add
mov
push
test
mov
addr16
lret
mov
xor
pop
pop
push
push
outsb
mov
cmp
es
clc
mov
in
sub
mov
jmp
pop
loop
ds
xlat
or
in
dec
stos
lds
push
fxch
enter
nop
rcrb
movsl
mov
pop
mov
adc
push
xor
xchg
cmpsb
fldl2e
xchg
repz
add
xchg
mov
shll
adc
test
and
or
cld
popf
cmp
mov
jge
inc
into
ljmp
leave
fidivs
mov
das
or
in
shll
test
in
leave
sarb
in
enter
rcr
insb
aam
sbb
js
out
mov
js
add
cmp
mov
ja
xchg
push
aam
xchg
mov
ds
mov
enter
cmp
in
les
nop
into
mov
xor
sbb
push
repnz
lods
jp,pn
sbb
das
cmpb
out
jbe
or
xor
std
stos
add
popf
ja
fcmovu
mov
dec
sub
test
and
mov
inc
push
das
cmp
movsb
or
test
test
in
shlb
jne
xor
and
iret
mov
mov
xchg
mov
aad
shrb
lret
fdivrs
movsb
out
push
out
jb
sub
and
repnz
xor
xlat
gs
insl
aam
lahf
xchg
and
stos
das
mov
mov
cmpsl
out
stos
insl
mov
aad
xor
lds
xchg
push
push
inc
adc
aaa
sar
pop
xlat
orl
cld
or
adc
add
rorb
mov
lahf
popa
loope
loop
jmp
xor
pushf
loop
iret
int
mov
and
jae
or
pop
dec
daa
and
dec
movsl
inc
jno
mov
aas
mov
icebp
mov
lods
mov
shrl
es
popf
push
testl
nop
xchg
mov
add
rdmsr
dec
dec
mov
and
jge
daa
test
stc
pusha
mov
cmp
dec
aad
jmp
sbb
lea
mov
cmp
fs
inc
jle
sahf
jbe
jecxz
push
jne
rcrl
imul
pop
sbb
fimull
aaa
sti
mov
jb
xchg
cmp
enter
pop
cmp
push
push
test
je
popf
mov
pop
andl
mov
xchg
pop
mov
out
cmp
xor
in
push
sbb
stc
fcom
push
mov
scas
dec
in
xchg
mov
push
std
jmp
test
dec
sbb
jle
loop
xor
sbb
iret
cmp
add
aaa
cmpsl
in
or
mov
lret
mov
sub
iret
scas
cwtl
xor
cmpsl
lods
mov
jns
pop
rcl
movsl
push
fs
mov
popa
xor
mov
add
xchg
xchg
repnz
push
loopne,pn
push
lock
sub
imul
ret
jbe
sarb
stos
mov
loopne
push
daa
shlb
mov
lcall
and
fstps
mov
xlat
cmp
cmp
cli
cmpsb
cmp
xchg
adc
jmp
xchg
aad
push
ret
aas
and
bound
mov
mov
imul
ja
mov
jg
testl
imulb
pop
fldenv
cmp
outsl
push
mov
cmp
pop
dec
cmp
push
shr
jle
scas
aad
mov
sub
xchg
push
repz
push
lds
in
scas
mov
or
pop
dec
jmp
adc
dec
fistps
xchg
or
in
sbb
jbe
movsl
dec
mov
or
jle
outsl
mov
xor
dec
mov
xor
adc
ja
dec
or
mov
ficomps
inc
mov
mov
lcall
add
pop
sub
rolb
adc
xchg
adc
fiadds
jmp
mov
mov
fcomps
xor
mov
scas
mov
sub
loopne
mov
sar
or
pop
ficoms
enter
cmpsl
sub
xor
inc
dec
aad
adc
and
popa
ljmp
add
mov
out
mov
inc
cmp
mov
xor
mov
mov
cmpl
popf
nop
lahf
in
add
es
mov
out
popa
clc
and
iret
add
xor
sahf
iret
scas
and
int
movsb
ror
shll
scas
add
fstpt
push
fstpl
adc
inc
inc
frstor
fwait
cmp
mov
add
cmp
out
andb
imul
and
stos
dec
pop
pop
cmc
push
jne
or
scas
push
out
jle
loope
adc
arpl
stos
push
andb
mov
dec
je
stos
lods
sbb
clc
sub
hlt
addr16
js
repz
jp
popa
adc
inc
push
lcall
mov
inc
imul
push
cmp
xchg
imulb
push
repnz
stc
push
cmp
fistpl
and
and
fistpll
andb
pop
int3
jle
push
enter
inc
inc
outsb
lds
inc
xadd
fimuls
dec
popa
mov
jl
nop
dec
sbb
add
sub
cmp
insl
js
popa
add
leave
or
jp
adc
cltd
pop
jbe
and
cmp
cs
jne
mov
cli
dec
push
cltd
ret
sub
jmp
sbb
movsb
xor
sbb
adcb
jge
adc
sub
mov
xchg
and
adc
mov
movsl
pop
xchg
add
pop
or
clc
push
xor
stc
fwait
xor
inc
enter
lock
inc
daa
xchg
clc
pop
pusha
les
stos
sub
aaa
mov
out
lcall
out
clc
pop
push
std
das
jno
xor
out
adc
cmp
jg,pn
jl
pop
mov
or
in
imul
push
xchg
cmc
aad
ds
pushf
add
popf
cli
cmp
cmp
hlt
scas
fadd
xchg
movsb
adc
jb
shr
dec
mov
mov
imul
xchg
addr16
jle
out
mov
rolb
xchg
repz
sub
mov
add
std
daa
push
dec
ret
inc
iret
mov
scas
or
por
das
dec
jns
mov
iret
jno
leave
xor
mov
js
adc
pop
xor
dec
jmp
xchg
cmp
pop
mov
lds
and
mov
pop
fnstcw
xchg
xor
adcb
mov
add
lock
xor
dec
xchg
lahf
clc
mov
lcall
mov
adc
lock
jbe
and
add
sub
dec
outsb
jb
add
cmp
mov
cmpsb
pop
xchg
jle
addr16
jb
dec
lds
mov
arpl
movsb
sbb
out
in
scas
sbbl
add
inc
xor
xchg
pop
add
push
sub
push
cltd
addr16
lea
pushf
pop
sahf
cmp
or
cld
xchg
mov
in
daa
xchg
pusha
orl
out
out
pop
repnz
test
cmpsl
cltd
stos
insb
mov
sub
mov
pop
xchg
inc
scas
adc
es
sbb
and
sub
mov
shll
inc
aas
jae
pushl
pop
cltd
sbb
fcom
mov
xchg
inc
imull
sub
fidivrs
dec
jo
mov
popf
sub
leave
adc
outsb
push
jl
out
pop
and
ja
mov
daa
add
mov
pop
mov
mov
and
fmull
push
mov
pop
lret
add
and
adc
orl
in
hlt
pop
push
test
iret
or
fidivrl
repz
call
push
lret
jo
lock
or
insl
add
jno
popa
pop
cmp
adc
cmp
rorb
push
and
mov
in
flds
lahf
sub
js
cwtl
and
push
les
push
pop
mov
adc
adc
xchg
in
xrelease
mov
scas
dec
dec
in
or
insl
add
jbe
xchg
jge
mov
pop
stc
mov
cmpsl
scas
adc
dec
push
pop
fwait
js
add
jo
mov
dec
loopne
mov
jb
test
repz
jae
das
sbb
xchg
mov
mov
addr16
incb
fwait
push
jns
iret
out
scas
cmp
mov
xchg
cmc
mov
jecxz
cltd
dec
js
add
push
les
pusha
jne
xor
cld
pop
fnclex
fdivl
jne
popa
ret
jmp
out
xchg
int
jmp
mov
inc
sub
nop
jns
sbbb
in
out
popl
rorb
ret
daa
xor
jl
cli
jmp
add
cmp
dec
or
mov
sahf
jmp
jge
outsl
leave
sbb
lret
mov
loopne
cmp
int
or
sub
movsb
and
xchg
loopne
sub
push
in
mov
lcall
mov
pop
sbb
add
scas
inc
mov
inc
imul
jp
lock
popa
dec
push
mov
mov
push
ljmp
stc
mov
das
nop
lock
sbb
jns
mov
test
mov
shll
pusha
inc
jge
add
mov
loope
aam
mov
xchg
outsb
cs
and
out
push
lea
lods
cmp
ljmp
pop
or
sti
cmp
push
test
fdivp
gs
outsb
stos
adc
adc
add
insb
sub
out
inc
mov
std
inc
cmpl
les
fnstenv
shl
dec
adc
inc
mov
push
sbb
inc
nop
fs
imul
xchg
inc
rcrb
mov
dec
push
jg
mov
testb
les
in
push
icebp
xor
and
xor
pop
gs
sub
add
mov
lods
cmp
lds
xchg
popa
lods
mov
roll
sahf
daa
mov
addl
out
ret
aas
mov
pop
lods
jne
mov
in
inc
cmp
jle
cwtl
and
cmp
sti
clc
out
in
push
sahf
mov
cwtl
cmp
cwtl
jg
sahf
adc
pop
jno
mov
shr
or
inc
and
outsl
pop
and
add
dec
repz
in
jge
dec
loope
cmc
rcl
inc
fildl
inc
push
mov
mov
mov
sub
adc
adc
adc
imul
push
js
cmpsl
test
xor
mov
mov
outsl
out
mov
in
outsl
add
mov
mov
adc
xchg
inc
mov
mov
mov
mov
or
in
inc
and
xor
mov
add
xorl
leave
loopne,pt
inc
dec
and
out
stc
pushf
dec
out
sub
inc
or
sbb
xor
loope
cli
out
sub
std
xor
jmp
imul
adcb
and
dec
pop
xchg
adc
or
pop
ror
pushf
cmp
mov
jmp
aam
repz
inc
or
shll
fimuls
jmp
inc
fs
add
mov
mov
ret
push
adc
push
jle
mov
xchg
in
fadds
in
stos
and
and
cld
lcall
in
rcll
addb
je
decb
jbe
xchg
push
hlt
arpl
mov
mov
push
andl
jle
jmp
clc
xchg
xor
xor
pop
sbb
test
aaa
xor
lcall
repz
adc
push
jmp
jae
or
movsb
sahf
mov
mov
xor
dec
in
nop
gs
lds
clc
dec
cmc
in
adc
xchg
cs
pop
jo
adc
mov
push
jo
insl
xlat
xchg
push
push
pop
repnz
cmovnp
bound
inc
mov
aaa
mov
add
addr16
pop
xchg
loopne
add
push
pop
mov
ljmp
test
out
xchg
inc
lds
add
add
je
mov
or
andb
insb
cvtps2pd
fnstenv
jne
in
push
stos
ret
sub
nop
push
bound
adc
sub
xor
adc
je
push
adc
aad
mov
cmp
and
fists
mov
pop
lock
les
lods
xor
pop
or
add
pop
push
push
push
fsubl
cmc
gs
push
mov
into
jae
pop
inc
cmp
cltd
rcll
sbb
mov
in
inc
out
mov
jl
push
push
pop
jecxz
arpl
insl
jmp
cmp
mov
lret
mov
and
and
cmpsl
mov
mov
out
shlb
popf
test
cs
sbb
popa
mov
lock
dec
test
leave
in
test
mov
lds
popf
pop
mov
cmpl
test
scas
rcrl
ss
push
or
xor
sbb
mov
fbstp
jno
addr16
pop
mov
push
jp
adc
sbb
cltd
enter
aad
test
sub
add
ljmp
sbb
out
adc
es
out
xor
adc
dec
cwtl
sub
pop
push
movsb
sahf
fimuls
pop
cmp
push
jg
mov
dec
repz
mov
ficoml
lock
iret
idiv
fwait
pop
test
sarl
mov
imul
push
pop
subb
sbb
cmp
rol
push
test
and
ss
adc
mov
adc
lods
jno
fnstsw
xchg
xchg
in
insb
fstl
dec
out
jne
sub
aad
pmulhuw
ljmp
fdivl
das
imul
test
push
add
add
jp
rol
push
pop
jl
daa
push
adc
mov
fmul
and
add
mov
mov
sub
nop
jg
std
rol
pop
fmuls
out
repz
add
mov
pop
mov
or
jle
mov
mov
aam
mov
pop
clc
inc
push
test
icebp
mov
lea
cs
jne
lea
cmp
pop
push
mull
mov
xchg
cltd
push
jg
mov
mov
jns
stos
andl
fbld
out
enter
in
flds
cmpsl
push
and
xchg
movsb
aam
es
cmpsl
frstor
cli
mov
xor
in
add
cmp
cmp
in
adc
shlb
push
and
and
fabs
mov
xor
push
mov
xor
fwait
in
inc
movsb
adc
or
adcl
xchg
test
jns
popa
pop
rclb
clc
mov
jge
mov
jbe
jns,pn
mov
out
mov
pop
xchg
dec
loopne
pop
daa
test
lret
aam
test
mov
adc
cmp
mov
test
lds
push
daa
adc
sbb
fcoml
mov
push
or
pop
cmp
repnz
dec
daa
mov
xchg
push
test
mov
int3
add
cli
sbbb
test
mov
xchg
push
or
mov
mov
xor
sub
pop
popa
jb
jo
mov
sub
cltd
out
sbb
sbb
mov
in
jg
and
test
xchg
js
adc
test
pop
sbb
mov
lds
data16
cmp
mov
inc
mov
loope
pop
lahf
shll
repz
mov
js
daa
or
mov
sbb
push
aam
roll
scas
dec
dec
push
inc
stos
inc
in
sub
push
inc
pop
mov
fildl
xor
mov
mov
sarb
test
mov
sbb
and
outsl
dec
dec
mov
pop
fstp
in
and
imul
and
adcl
push
inc
andb
push
shrb
jo
inc
mov
mov
ret
fdivl
mov
push
cmp
out
mov
cmc
xchg
fadds
mov
inc
les
test
jecxz
cs
jb
push
push
cld
fistl
xchg
or
inc
mov
ret
aas
es
aam
sbb
adc
lds
leave
sub
adc
xchg
push
mov
xchg
das
data16
cmc
inc
mov
xchg
xchg
mov
sbb
add
arpl
imul
and
lea
leave
dec
pushl
mov
sbb
xchg
mov
dec
lahf
cld
repz
iret
sbb
je
sbbl
pop
mov
paddusw
jno
out
testb
and
pusha
enter
xor
lret
inc
dec
or
cmp
shl
movsl
imul
fcmovnu
stos
addr16
sub
jno
lcall
ja
cwtl
mov
and
push
rcr
xlat
fdivrl
iret
cld
aam
cmp
and
mov
mov
push
lds
iret
xor
sbb
icebp
fnstsw
pop
xchg
movb
mov
xchg
insb
rcr
aas
inc
push
sbb
ret
adc
jb
mov
repnz
or
sub
pop
andl
xor
sub
inc
jno
pop
add
pushf
pop
jnp
sub
inc
pop
pushf
test
hlt
sbbl
repz
ja
fcomi
jb
jne
js
jne
xchg
int
into
jnp
jb
lret
mov
jp
dec
call
dec
cmpsb
or
jns
or
mov
xor
je
add
or
jo
sbbb
xchg
dec
cmp
xchg
sbb
daa
cltd
clc
out
rcrb
sbb
mov
std
cmp
out
inc
in
cmp
or
loop
testl
xchg
cmpsb
in
push
push
adc
or
sqrtps
call
jnp
lods
jp
int
imul
mov
or
test
push
icebp
sti
adc
mov
push
mov
push
and
mov
cmp
hlt
jnp
xchg
add
xor
xchg
pop
sub
idivl
cwtl
cmp
and
mov
outsl
aam
mov
bound
xchg
test
nop
andb
jge
adc
les
lret
pushf
xchg
enter
mov
aam
mov
pop
add
std
in
in
leave
xor
popf
mov
rcl
jne
aam
mov
cmp
popa
xchg
jo
outsb
popa
jecxz
arpl
mov
pop
or
sub
loop
into
cwtl
mov
sbb
rclb
jae
add
adc
mov
add
pop
push
xchg
jns
cmp
add
lret
pop
jmp
push
pop
dec
mov
xor
adc
mov
or
pop
and
into
push
jnp
lods
xor
and
std
push
push
ret
idivb
cwtl
scas
les
stos
adc
adc
int
lock
push
sbb
inc
addr16
inc
push
clc
pusha
adc
pop
mov
sub
push
adc
or
rorb
and
sti
and
lods
jge
push
call
jo
xorb
test
call
imul
out
xchg
or
pusha
pop
jo
dec
rorl
jg
fldt
push
adc
pop
pop
sti
shll
cmpsl
sbb
movsb
lds
mov
inc
mov
sbb
sub
sarl
or
xor
or
icebp
push
iret
and
test
push
jmp
xchg
push
xor
cmp
aam
lods
pop
fisubs
pop
test
cli
lds
movsl
cltd
ret
stc
jl
popa
in
cli
arpl
jae
mov
enter
xor
jns
ret
and
add
cld
pop
cmp
jp
or
pop
inc
imul
int3
stos
ja
pop
fwait
lds
sub
sbb
dec
mov
mov
inc
jno
divb
add
int3
imul
sbb
mov
lods
imul
fdivr
adc
dec
push
lock
rclb
and
mov
stos
fmull
cmp
pusha
enter
iret
enter
mov
inc
sub
idivb
dec
in
lods
es
mov
stos
fwait
xorb
in
cmp
aaa
testb
mov
repz
bsr
in
pop
ror
mov
sub
lock
xor
inc
pusha
lds
imul
mov
scas
sub
inc
inc
pop
mov
pop
cmp
fwait
and
push
sub
les
fidivrl
lea
stos
add
sarb
push
xorl
inc
in
cmc
mov
enter
lock
mov
push
pop
icebp
mov
jecxz
fcmovnb
xor
ficoml
xor
es
out
mov
xor
repnz
out
mov
cmp
mov
add
leave
sti
push
cmp
outsb
xchg
add
fs
lods
dec
js
out
leave
push
mov
cltd
mov
int3
push
mov
pop
add
bound
popf
movb
call
push
xchg
inc
test
ljmp
add
sbb
push
pusha
mov
arpl
cld
leave
inc
test
ficomps
xor
cltd
pop
addr16
push
sub
iret
mov
jno
stc
jecxz
xlat
ljmp
insl
push
cld
fisubl
lds
leave
stc
pop
jne
enter
movsl
mov
cmp
scas
lods
mov
pop
cli
test
dec
ret
lcall
sub
addr16
dec
dec
aaa
in
stos
movsl
xor
cmp
adc
pop
lds
xchg
cmpsl
movsl
in
jmp
ljmp
stc
sbb
adc
mov
cmc
dec
test
pop
pop
sub
push
ljmp
push
jmp
scas
loope
push
xchg
pop
jecxz
dec
cli
add
lods
ret
add
sub
in
mov
out
sahf
sbb
sbb
in
sbb
jb
push
mov
subb
add
aam
push
sub
jecxz
sbb
xor
stos
imul
int3
sbb
dec
sbb
mov
es
inc
aaa
or
push
push
sahf
sub
push
test
pusha
outsl
mov
xlat
or
cmp
adc
sub
inc
les
cmp
and
out
cmpsl
dec
iret
icebp
mov
add
cmp
clc
test
loop
push
mov
or
fstps
repnz
insb
lea
cld
jle
jmp
inc
push
negb
add
pop
sahf
xor
jmp
add
mov
mov
addr16
js
ret
call
cmp
inc
jbe
inc
iret
lods
fiaddl
push
push
xor
pusha
mov
pushf
mov
adc
icebp
js
inc
out
sub
iret
xor
pop
shll
test
popf
lcall
test
outsl
cwtl
push
dec
outsb
jno
sbb
dec
inc
rclb
jbe
or
cmp
jmp
test
sbb
or
inc
jecxz
inc
push
pushf
ret
cmpb
xchg
stos
fildl
lock
aam
ss
rorb
and
outsb
push
mov
gs
xchg
sub
scas
xchg
cmp
mov
xchg
popf
les
and
fistpll
xchg
jmp
out
add
scas
sbb
ja
pop
push
jo
loope
add
push
loop
lods
out
sahf
fwait
jae
cmp
scas
dec
jle
mov
out
stos
and
push
jecxz
push
jg
dec
mov
data16
cmc
movsb
mov
sub
sub
fdivrl
pop
mov
inc
aam
add
push
outsb
popa
cld
test
aam
xchg
adc
insl
pop
xchg
shrb
and
inc
xchg
or
ljmp
or
lock
lods
xchg
inc
dec
in
inc
insb
cmp
or
enter
xorb
jmp
setnp
loop
pop
mov
push
sbb
sub
jecxz
lret
arpl
out
mov
jg
mov
cmp
out
fwait
sub
jbe
inc
jns
mov
repz
adc
jns
and
sub
fiaddl
mov
rcrl
jge
add
sub
sub
xchg
xor
jnp
mov
cmp
xor
lahf
sub
push
jo
cli
call
jmp
or
pushf
scas
push
or
mov
mov
mov
out
repnz
ret
push
inc
cmp
in
mov
pop
cmp
mov
arpl
lock
test
inc
inc
call
fcoms
xor
testb
and
fwait
cmpsb
call
adc
stc
aad
imul
data16
pusha
mov
movsl
repnz
jns
dec
sub
jmp
ret
push
adc
push
jnp
push
pop
cmc
adcl
mov
mov
inc
add
das
inc
push
jne
aad
jge
adc
cmp
mov
fadds
out
pusha
incl
jno
add
push
lods
pop
jns
sub
jmp
push
push
aad
jo
negb
pop
ljmp
aam
or
call
pop
js
xchg
adc
lcall
sbb
js
pop
jmp
testl
push
xchg
fsubrp
pop
dec
sub
sub
push
pushf
loop
fimull
lcall
jle
xchg
push
xor
pop
cs
fidivs
sbb
cmp
insl
xchg
pop
adc
stos
imul
frstor
aad
dec
int3
insl
add
mov
xor
cmpsb
inc
mov
xchg
into
popf
shll
pop
jae
test
jg
loope
testb
jbe
hlt
lods
out
mov
in
adc
dec
int
lea
shl
cmpl
push
lds
lods
xor
fimuls
ret
adc
xor
imul
repz
inc
xchg
negl
adc
inc
cmp
in
mov
pop
test
pop
sbb
or
rcrl
jne
in
rcrb
lock
repnz
or
cmp
mov
add
es
pop
mov
xchg
or
push
fcmovnbe
push
jl
in
lods
dec
fcomi
test
xor
jbe
loopne
jno
mov
aas
mov
lret
and
lret
xor
lods
gs
repz
mov
add
jns
cltd
rcrb
les
push
out
ljmp
test
push
pop
mov
mov
fs
fmul
xor
dec
or
flds
loope
or
cmp
push
fdivrl
test
into
notl
and
dec
paddb
add
jne
sahf
fcmovb
dec
ds
push
mov
push
sub
push
add
xor
movsl
ss
enter
test
out
dec
fldenv
test
xlat
push
rcr
call
push
sbb
aad
out
popa
xchg
cmp
jmp
push
push
add
subl
inc
or
insb
loop
idiv
and
aad
mov
mov
mov
push
add
cld
or
int3
inc
sbb
jge
pushf
sub
popa
and
std
enter
out
push
push
fstl
jmp
in
std
cmp
lds
push
mov
ret
sbb
xor
arpl
pop
jae
sbb
mov
iret
dec
mov
ret
dec
ret
and
rcrb
sbb
xor
into
pop
mov
xor
jecxz
push
call
mov
or
fs
and
push
pop
ds
stc
xchg
ja
arpl
mov
xchg
or
mov
in
lret
lds
push
jecxz
into
and
repz
loope
or
imul
stc
inc
testl
movsl
pop
cmp
jns
mov
mov
shrl
add
mov
push
rclb
mov
shrl
mov
adc
mov
gs
int
insb
leave
inc
mov
lock
mov
and
push
mov
inc
in
roll
arpl
int
push
cmp
xor
notb
sub
mov
adc
stos
shlb
imul
in
imul
dec
sarl
iret
mov
add
pop
les
xchg
fbld
fs
fstpl
out
or
loope
lea
in
ds
jnp
fsubr
mov
dec
adc
mov
mov
ret
jbe
sti
aad
cs
lret
adc
pusha
mull
adc
cs
jo
push
mov
int
cld
dec
cwtl
push
mov
mov
outsb
jg
test
pop
mov
data16
int
mov
dec
pop
adc
inc
adc
inc
stc
call
sub
ficompl
mov
inc
jbe
push
jg
mov
jecxz
xor
lahf
lret
add
push
cltd
add
and
fcmovnbe
rol
push
test
sbb
sbb
xchg
lret
jge
ljmp
imul
stos
jno
shr
pop
xor
fnstcw
mov
les
adcl
ficompl
insb
xchg
xchg
shlb
in
push
sahf
push
adc
jmp
inc
shrl
aad
test
sbb
cltd
or
mov
mov
mov
rclb
out
cmc
mov
mov
ss
test
movsl
mov
mov
outsb
push
iret
cmpsb
sbb
pop
adc
fidivl
adc
out
enter
mov
movsb
shll
repnz
sarb
add
mov
jns
or
mov
push
mov
mov
xor
test
xchg
pop
scas
mov
sar
pop
int3
xchg
leave
lahf
dec
inc
out
pushf
js
clc
fdivrs
je
fcos
icebp
mov
cmp
xchg
loope
lds
es
or
add
cmp
test
jo
data16
ret
ja
push
jl
xchg
jle
lahf
aam
sarl
push
js
mov
xor
mov
cld
cmp
cmp
cmp
cmp
ficoms
xlat
imull
out
sbb
jmp
clc
pop
adc
push
add
mov
frstor
loopne
andl
adc
mov
cmp
xor
in
inc
aas
adc
sub
add
mov
loopne
jp
das
inc
pop
mov
jne
test
sbb
push
mov
test
lcall
rorb
dec
cs
repz
out
jecxz
jp
jp
test
ds
mov
imul
fcoml
enter
cmp
testl
xchg
push
imull
enter
xchg
fdivs
dec
movl
jno
das
inc
or
imul
xlat
and
add
sbb
xchg
stc
ds
cwtl
movsl
imul
inc
jnp
sbb
sub
or
adc
or
outsl
in
incl
loope
stos
and
pop
push
mov
popf
not
inc
andl
hlt
mov
jae
sbb
jo
inc
loop
rclb
xor
in
pop
push
add
cmp
fldt
fsubl
lods
rcr
sub
mov
cmp
add
fs
sbb
ror
les
aam
lds
mov
inc
outsl
push
test
dec
scas
pop
inc
or
pop
outsl
push
sbb
xchg
arpl
add
xor
sbb
pop
jle
mov
out
outsb
mov
inc
lret
add
daa
mov
jne
jmp
rcrb
fwait
sub
dec
add
xchg
jno
pop
cwtl
shld
or
lods
pop
jbe
or
push
mov
jae
sub
icebp
jo
subb
cmp
cmc
mov
jnp
setae
daa
xchg
rclb
leave
inc
mov
jg
ret
xchg
xchg
ljmp
push
mov
mov
mov
cmpb
les
stc
cmp
roll
data16
ljmp
push
js
jmp
jle
cmp
fwait
inc
cmp
shl
mov
sbb
add
mov
lock
and
ljmp
sub
dec
xchg
cmp
jne
adcl
imul
mov
mov
mov
adcb
pop
or
jp
js
lcall
adc
pusha
xchg
add
pop
inc
jae
pop
iret
dec
dec
sbb
cli
out
and
adc
int3
inc
mov
hlt
sub
jne
aam
mov
pop
lods
arpl
loopne
outsb
sbb
mov
adc
pop
sub
add
cld
shrb
into
xchg
fucomi
lret
push
cmp
and
pushf
fnstenv
cmc
cmpsb
xor
ljmp
outsl
cmp
lcall
shll
cmc
xchg
mov
sbb
popf
fcmovnbe
es
decl
xor
imul
sbb
divl
rcl
mov
movb
sub
push
ss
add
xchg
or
fsubrl
xchg
and
sub
lahf
sub
decl
mul
mov
dec
cli
loop
mov
mov
fcompl
jp
sbb
lods
es
fistpll
jge
jnp
dec
inc
daa
mov
ja
sbb
inc
inc
add
jb
daa
xchg
movl
mov
mov
movsl
pop
jecxz
adc
pop
out
dec
pop
inc
fsub
mov
xchg
out
adc
inc
cli
mov
push
inc
cs
push
push
scas
cmp
jecxz
stos
jle
mov
aaa
jbe
sarl
dec
stos
shlb
xor
xchg
cmp
sub
push
in
fadds
rclb
xchg
inc
and
or
shrl
int3
bound
adc
fistps
mov
daa
push
jg
call
jae
loop
out
clc
jge
lret
ljmp
ret
scas
push
cwtl
pop
loopne
inc
test
arpl
jecxz
mov
mov
shlb
push
sub
rcrl
mov
mov
sti
outsl
sub
ficomps
rorb
xchg
mov
aad
test
insl
out
jmp
mov
mov
xchg
bound
adc
sbb
test
leave
inc
mov
fstps
mov
lea
sbb
das
sbb
outsl
bound
int
rclb
ficoml
cli
dec
add
roll
test
xchg
jmp
jmp
popf
insl
aas
xor
cmp
jo
jl
andl
dec
sbb
shll
adc
dec
mov
cmpsl
inc
jb
mov
out
fimuls
hlt
mov
das
flds
mov
cli
inc
cmp
dec
lock
lret
lea
outsb
cmp
cmp
into
add
shl
shlb
sub
dec
std
jge
inc
and
cltd
mov
cmpsb
stc
or
fldcw
dec
out
cmpl
jae
adc
lcall
adc
add
dec
mov
xor
cwtl
cli
fcoms
sbb
in
div
int3
clc
xchg
inc
jmp
lea
xchg
jns
leave
cmp
mov
pop
pop
mov
lds
in
sub
iret
inc
test
hlt
pop
pop
inc
inc
mov
inc
addr16
arpl
pop
jae
cmp
subl
add
sbb
xor
pushf
fisttpl
sarl
out
ja
shll
in
popa
mov
dec
fsubrl
fdivrs
popa
or
jno
divl
mov
mov
sub
rolb
jae
lods
arpl
jae
or
rcrb
adc
std
bound
dec
mov
loop
les
dec
adc
call
cmpb
and
mov
mov
lcall
inc
ret
jmp
dec
pop
jno
cmp
ja
rcl
dec
mov
pop
das
sub
sub
lods
lcall
mov
cmp
mov
inc
stos
jnp
xor
mov
or
and
pop
bound
mov
and
rorb
xlat
inc
xchg
push
movsl
cmc
inc
and
movsb
stc
add
jb
sub
inc
std
add
outsb
xchg
je
sbb
iret
adc
mov
push
dec
lcall
jnp
cltd
stc
icebp
lods
pop
sub
sbb
stos
mov
out
cmp
das
cmpl
push
adc
loop
leave
popf
adc
fnstcw
sbb
rclb
push
dec
pop
loopne
inc
add
add
jl
insb
test
jo
xchg
xchg
jb
push
sbb
jle
mov
sar
insl
jecxz
inc
fiaddl
dec
mov
je
and
leave
paddd
rolb
mov
jmp
xor
xchg
jle
xchg
mov
cmp
and
inc
push
scas
sub
push
mov
dec
data16
sbb
and
and
xor
jmp
and
in
mov
xlat
add
insl
push
ljmp
sbb
adc
xor
sbb
lret
adcl
adc
inc
divl
inc
xor
dec
fmul
sub
pop
xchg
xor
add
mov
cltd
ret
sbb
lretw
shll
pop
push
insb
cmpsl
push
lret
loope
sarb
aas
mov
push
push
addl
aad
fisttpll
dec
lock
jns
scas
rolb
fidivrs
pop
in
or
push
jb
shlb
popa
cwtl
jbe
jb
out
int3
nop
nop
imul
jo
push
ds
inc
lds
push
ljmp
adc
or
and
add
cmp
jmp
movsl
cmp
cli
aaa
and
ds
pop
cmp
jl
outsb
mov
jg
movsb
dec
mov
xchg
ds
fildll
dec
mov
push
push
pop
or
je
push
shrb
lock
sbb
cltd
xchg
fsts
lds
dec
fldt
jae
mov
push
pop
lea
loopne
pop
cmp
call
mov
orb
cmpb
sub
loope
jl
or
xchg
jae
mov
xchg
insb
mov
xchg
scas
or
sub
mov
outsl
push
dec
stc
mov
dec
repz
jns
enter
outsl
jle
pop
mov
scas
gs
pop
test
in
or
pop
mov
fmull
scas
xor
cmp
fisubrs
test
pop
xor
cltd
cmp
ja
fsubs
pop
in
mov
loope,pt
xchg
push
push
fldt
mov
pop
xor
addr16
push
cli
xchg
dec
or
or
jle
loop
push
add
jno
scas
lods
cmp
mov
fidivs
pushf
xchg
iret
dec
gs
pusha
out
test
scas
hlt
addl
lods
aas
xchg
stos
movsl
adc
inc
sub
imul
jmp
jae
arpl
enter
mov
fbstp
cmpsl
xlat
push
and
adc
cwtl
les
in
push
ret
out
idiv
sub
add
and
test
adc
gs
push
sar
push
adcl
ret
cmp
mov
pop
mov
dec
enter
mov
popa
adc
enter
fdivs
push
add
out
dec
repz
les
add
cs
popa
sbb
sbb
sahf
out
xchg
loop
dec
stc
fdivr
rol
cmp
dec
in
xchg
cmp
xchg
jmp
sti
clc
int3
int3
sub
xchg
mov
inc
scas
sbb
mov
leave
cld
or
jns
sti
or
loopne
cmpsb
in
or
dec
ja
inc
subb
jne
mov
jbe
pop
cwtl
inc
ficoms
push
xor
sbb
mov
ret
cmp
push
mov
scas
ja
sti
mov
inc
pushf
pushf
mov
fnstcw
stos
mov
mov
inc
mov
out
data16
pop
and
test
and
mov
shlb
sbbb
sahf
push
sbb
xchg
adc
std
aam
jl
movsl
and
mov
add
ret
or
add
leave
cmp
jecxz
xchg
inc
mov
cmc
das
push
mov
mov
inc
and
xchg
mov
jmp
mov
push
fstps
and
sub
inc
lea
xlat
cmpsb
iret
push
and
mov
out
inc
mov
mov
sbb
repnz
sbb
shlb
fcomps
arpl
pop
adc
or
popf
xchg
xor
shrl
in
or
mov
cmpsl
jmpw
addb
sbb
or
add
fiadds
cmpsl
sbb
mov
bound
jb
int3
mov
sbb
add
in
pushf
js
adc
pusha
sub
xchg
xchg
shlb
push
or
ds
orl
jne
rcrb
test
xchg
out
inc
iret
jns
xlat
jnp
jnp
pop
cmp
sub
test
sub
icebp
mov
add
lea
jno
mov
fdivrp
cmp
cwtl
xor
cmc
mov
cmpsl
push
sets
call
mov
lret
push
or
dec
movsb
push
mov
insb
rcll
stos
cmp
dec
pop
out
enter
dec
fwait
lds
and
xor
xor
imul
adc
in
das
dec
pop
stos
mulb
pusha
ffree
push
or
fs
push
fs
sbb
cmpsl
sbb
nop
inc
hlt
sub
push
adc
aas
mov
add
in
push
fisubrl
cwtl
adc
fistpll
mov
in
sub
sarl
xor
es
inc
daa
roll
xor
pop
push
adc
in
cmpb
mov
and
mov
cld
pop
cli
hlt
out
pop
dec
inc
pop
cmp
out
cmp
lods
rcrl
int
je
fnstsw
insl
fsub
loop
shrb
push
inc
bound
xchg
dec
add
ret
jb
jle
inc
mov
andb
mov
shlb
adc
xor
mov
es
fmuls
into
sahf
ljmp
pop
mov
cmc
bound
mov
cmp
subb
fcmovne
scas
xchg
dec
test
repnz
adc
aam
lods
mov
sub
loope
mov
int3
mov
fnstenv
dec
push
pop
xchg
pop
sub
roll
nop
fisubrs
ret
fstpl
fldl
push
fxch
rdtsc
jne
int3
mov
pop
mov
pmulhw
jecxz
push
sub
ljmp
lea
xor
outsb
test
mov
xchg
and
sub
mov
sub
or
and
sbb
cld
repnz
or
stos
inc
idivl
jo
dec
aam
outsl
std
push
pop
push
ficompl
and
mov
push
xchg
sahf
cmp
rorl
adc
dec
inc
push
jge
pop
daa
xchg
jo
push
lret
lret
dec
lret
jmp
daa
in
xchg
imul
mov
sbb
dec
mov
int3
rolb
popf
xchg
xchg
pop
jo
inc
jmp
inc
shll
ja
sbb
pop
jmp
dec
jae
xchg
add
add
aas
mov
and
ljmp
mov
cmc
mov
jne
mov
popa
movsl
outsb
cmp
sbb
fisubrl
mov
dec
sub
imul
xor
fsubrl
adc
inc
dec
mov
mov
add
popf
loope
cmp
in
adc
add
jnp
ds
out
inc
mov
lods
jmp
cmp
out
rorb
es
jg,pt
test
aam
popa
cmp
js
aad
hlt
pop
dec
push
mov
lock
push
lahf
addl
hlt
push
jmp
clc
sub
inc
mov
dec
pop
imul
outsb
push
ret
addb
jno
jno
mov
mov
xor
push
sbb
pop
outsb
repz
cwtl
mov
addl
pop
xorl
mov
mov
mov
negb
jno
xchg
mov
mov
lahf
das
cmp
xchg
cwtl
icebp
lcall
sti
lahf
out
ret
cli
movb
xor
sarb
lods
jp
inc
out
inc
inc
inc
jnp
mov
mov
add
js
int3
jg
add
inc
cmp
inc
out
sbb
out
mov
xchg
enter
mov
fisubrs
push
mov
addr16
lds
jge
or
loop
mov
sub
lret
stc
adcb
aas
pop
xor
pop
jecxz
inc
and
pushf
pop
into
mov
lret
or
addl
push
gs
xchg
jmp
xor
and
xor
fstpt
cmpsb
in
out
in
mov
addr16
or
repz
xor
lahf
daa
out
clc
cmpsl
aam
scas
loopne
and
lret
rcll
xchg
incb
mov
jb
loopne
icebp
in
adc
and
mov
cltd
mov
dec
out
mov
movhlps
sbb
inc
sbb
addr16
mov
adc
notb
sbb
mov
xor
cmc
push
rol
mov
mov
in
xor
add
or
push
iret
dec
lods
scas
scas
dec
adc
cmp
clc
mov
jp
mov
iret
fmuls
add
inc
pop
mov
jmp
cmp
sub
in
add
mov
js
std
test
jge
data16
mov
sarl
hlt
pop
test
inc
push
pop
rol
rcrl
sub
adc
pop
inc
fidivrl
popf
push
loop
mov
mov
ja
aam
xchg
dec
jns
shrb
inc
lfs
enter
fadds
jl
mov
or
push
xor
dec
out
adcl
xor
out
inc
aaa
js
lret
aam
out
inc
xlat
jns
add
push
sahf
popa
pop
xor
adc
rorb
loope
adc
mov
add
or
out
out
scas
mov
xchg
inc
push
push
jle
add
in
jnp
aad
bound
movsb
addr16
xlat
sub
push
adc
jnp
adc
repnz
cmp
scas
mov
fcompl
fsts
sub
lods
add
ror
mov
rorl
add
push
stc
loopne
cmp
xchg
sub
es
mov
call
push
cmc
add
pop
and
test
xchg
insl
xor
pushf
cmp
dec
cld
push
push
loopne
sbb
dec
pop
xchg
cmp
iret
outsb
iret
aaa
in
mov
xchg
rolb
sbb
cmp
push
aam
push
or
mov
fmuls
loop
or
fisubrl
or
cmpsb
fcmovbe
cli
lea
adc
xchg
push
dec
lea
test
aaa
test
popa
push
mov
pusha
mov
les
dec
out
and
xchg
bound
rolw
insb
push
repz
or
push
pop
cs
push
xchg
ret
rcrl
inc
in
ret
repnz
leave
push
push
aaa
loop
add
adc
mov
inc
xlat
cltd
sahf
xchg
push
jns
ffreep
pop
out
aad
out
sbb
and
in
sub
fildl
fstpl
mov
sti
inc
fisubl
mov
add
jmp
or
gs
ror
jecxz
jo
lods
mov
call
jmp
xor
adc
rcrl
sub
xor
jo
inc
andb
imul
test
add
mov
pop
pushf
lods
in
inc
jo
das
data16
add
push
mov
add
mov
cltd
loop
ret
push
jmp
mov
lcall
pop
inc
scas
sub
fnstcw
inc
jnp
sbb
dec
aam
adc
adcl
cli
das
jmp
adc
or
flds
xor
mov
scas
test
repnz
xchg
pop
xchg
jmp
ret
xor
ja
xchg
adc
mov
xchg
sub
jge
inc
aaa
adc
sub
sub
mov
and
add
xchg
lods
sbb
stos
outsb
aam
cmc
in
cmp
loop
aam
dec
inc
push
pusha
lods
jle
jne
out
repz
insb
mov
cmpsl
xor
mov
or
sub
dec
pop
fs
mov
and
xchg
cwtl
sub
outsl
jno
lret
lcall
xchg
inc
into
jno
fidivrs
shl
rorb
and
in
adc
mov
push
ret
mov
sub
adc
push
outsl
jmp
mov
popf
repz
sub
pushf
lds
aad
push
pop
cmpsb
xchg
pop
nop
js
xor
test
pop
or
fwait
push
fdivrs
inc
sbb
aaa
subl
and
cmp
mov
sub
pushl
movsb
hlt
dec
sub
add
test
and
jg
add
dec
push
lods
mov
pop
jno
stos
add
xchg
clc
jns
or
loope
and
mov
shrl
jp
mov
push
sbb
std
sub
into
pop
xor
mov
rcrb
push
inc
xorl
and
push
pusha
test
out
mov
and
xchg
dec
jecxz
jl
jecxz
in
fwait
mov
jb
aaa
fdivrl
sbb
xor
loope
and
sbb
test
and
or
and
ret
and
or
ds
mov
push
stc
lahf
test
fwait
mov
pushf
cmp
push
call
into
insb
in
jo
fcoms
fdivl
mov
rcrb
xor
nop
movsl
xchg
fistl
and
add
cld
pop
mov
ret
xor
das
push
mov
add
lock
les
leave
sub
inc
cmp
mov
mov
dec
mov
sub
pusha
rcrb
mov
cmpsl
mov
stos
xor
ss
jl
int
dec
lahf
iret
stos
daa
mov
jl
mov
pop
xchg
aas
jp
lret
or
es
hlt
mov
xor
push
dec
lcall
outsl
inc
icebp
sbbl
cmp
push
mov
icebp
out
mov
test
xor
out
adc
fsts
addr16
loope
lret
mov
jmp
icebp
sbb
cmpb
sub
and
ljmp
movsb
xorl
cmp
cmp
sub
fisubrs
mov
xchg
ja,pn
not
inc
dec
out
call
or
jb
popaw
and
jl
push
xchg
pusha
popf
inc
sbb
xor
jae
test
mov
push
xlat
and
push
xor
je
jle
pop
imul
out
dec
adc
xchg
repnz
mov
fbld
mov
pop
jl
jns
bound
movsb
stc
xchg
and
aaa
imul
mov
jge
jb
lock
sbb
dec
lock
out
mov
adc
mov
int3
pop
loope
jge
pop
stc
xor
std
inc
lret
pop
pop
dec
outsb
or
and
push
sbbb
cmp
push
shlb
cmp
sbb
jle
jmp
xchg
mov
pop
xor
imul
push
lcall
or
leave
mov
lods
scas
leave
daa
dec
sub
jne
out
ja
xor
jo
inc
cmp
gs
push
in
push
movsb
bound
pushf
xchg
dec
mov
push
push
dec
notb
xor
aam
add
cmc
xor
out
imul
imul
add
movb
mov
fiaddl
ss
daa
out
out
aaa
aaa
insb
xchg
ss
das
cmp
lods
jecxz
push
out
or
push
stos
popf
sub
sub
cwtl
and
ret
out
push
add
mov
jecxz
and
stc
add
pop
popa
insb
dec
and
pop
dec
inc
pushl
and
jne
lahf
xor
mov
xchg
push
xor
aam
lock
add
push
xchg
or
fildl
jg
outsl
pushf
xor
les
inc
xchg
sub
pandn
inc
jl
cmp
movsb
popa
cmp
imul
pusha
std
adc
popa
repnz
cld
fs
mov
sbb
add
sbb
jno
jbe
in
mov
sbb
ja
nop
jl
sub
mov
stc
pop
jnp
loop
gs
pop
sbb
pop
imul
mov
jne
sbb
ds
shlb
inc
dec
fidivrs
jne
push
xlat
add
ds
lds
jl
mov
push
mov
or
xchg
jnp
pusha
pop
std
xor
adc
dec
lds
loopne
bound
adc
sub
fists
xorl
mov
push
into
les
xchg
nop
dec
repz
cli
xchg
push
shlb
cmp
or
mov
mov
push
cmp
push
test
xor
pop
lods
lods
and
js
pop
push
lods
out
add
jo
dec
stos
cmp
popa
xor
push
faddl
stos
sbb
pop
jmp
add
push
dec
mov
shr
rclb
sub
ret
incl
outsb
or
ds
push
mov
rclb
pushf
hlt
hlt
sbb
xor
xor
mov
in
and
jecxz
dec
push
pop
jnp
pop
pop
dec
xchg
popf
and
mov
loopne
adc
outsl
imull
xor
mov
sub
and
ret
add
inc
xor
push
and
je
mov
cmp
jne
hlt
cmp
xchg
stos
inc
pop
xlat
mov
stos
xchg
xor
lods
xor
pop
jp
inc
popl
xchg
xchg
rol
dec
cmp
pop
test
and
aad
repnz
xchg
imul
mov
fdivrs
sar
xor
xor
in
sbb
ret
lret
inc
mov
frstor
fwait
jno
xorl
or
ljmp
push
cmc
daa
in
cmp
push
out
bound
mov
mov
add
popa
test
std
sti
jp
fwait
jmp
hlt
rorb
lret
leave
jnp
xchg
add
sub
push
scas
lods
xchg
sbb
out
nop
scas
add
jle
mov
hlt
dec
add
inc
add
imul
jmp
lcall
in
icebp
jmp
add
popfw
aaa
repnz
in
adc
lahf
mov
lea
mov
loop
pop
jns
mov
xchg
sub
fiaddl
xchg
inc
mov
out
jae
leave
jecxz
mov
add
orb
loop
cmp
int3
sti
das
xchg
add
andb
in
and
sub
fadd
pushf
daa
adc
adc
addb
shlb
cmp
inc
mov
cmp
xchg
aas
add
push
and
daa
sbb
ss
push
and
mov
cmp
add
nop
imul
lahf
ds
dec
push
cmp
push
arpl
rcrb
jp
mov
cmp
pushl
hlt
jbe
or
sbb
push
mov
cli
mov
scas
or
lds
dec
test
cmc
inc
mov
cmp
push
fs
popa
pushf
lea
fnstsw
sbb
push
xor
shrb
mov
pop
jae
pop
cmp
lret
bound
sbb
or
pop
push
popf
pop
cmp
insb
jge
jno
dec
mov
jnp
sub
popf
movsl
mov
xor
loop
mov
into
ss
call
inc
xchg
in
shlb
or
pop
sbb
mov
cli
shll
sbb
insb
cmp
sub
xor
popf
aaa
jb
or
xchg
shrb
jecxz
push
rcrl
add
incb
loope
push
xchg
lods
xor
jne
in
xor
inc
sub
push
mov
aas
sbb
add
inc
test
ficomps
test
pop
xlat
xor
inc
test
push
mov
jb
ja
imul
and
xchg
jne
mov
inc
lret
mov
loopne
and
lea
mov
mov
aaa
out
xlat
sti
jns
push
dec
xlat
aam
and
cwtl
jns
xor
imul
mov
sbb
xchg
je
sub
scas
enter
int
pop
in
adcl
outsl
inc
inc
sub
dec
dec
fsubs
lods
rorl
jbe
pop
lcall
xchg
aad
mov
cmc
dec
outsl
mov
movswl
pop
and
outsl
add
pop
js
cli
pop
jne
iret
sub
sti
mov
or
mov
outsb
popf
jl
repz
ljmp
insb
or
mov
adc
insb
cli
jecxz
dec
pop
mov
pop
inc
fildll
mov
lods
jo
daa
xor
dec
adc
std
ljmp
loope
mov
mov
inc
cmp
mov
jge
pop
xchg
test
lds
or
adc
inc
mov
xchg
sbb
push
sub
popa
pop
js
xchg
push
xchg
orl
sbb
xor
jb
inc
inc
add
pushf
iret
xchg
mov
rorl
into
mov
rol
lds
int
fisubrs
cmp
inc
inc
xor
jge
mov
outsl
loop
les
or
inc
int
push
inc
loopne
stos
adc
mov
or
sarl
mov
fs
mov
and
pop
cli
ficoml
data16
or
sub
movsl
mov
inc
lcall
add
and
push
and
push
ds
sbb
call
sub
add
xchg
fldt
gs
sbb
fstps
push
js
jbe
sbb
sti
fistps
jne
insb
cld
push
out
popf
popa
mov
xor
aaa
pop
adc
punpckldq
push
xchg
cwtl
adc
ret
dec
ja
test
jl
sbb
aas
pop
lret
cld
lock
or
inc
and
xchg
xchg
or
je
sar
mov
cmp
jae
add
jp
test
das
testl
loope
sbb
outsl
stos
inc
cmp
mov
int3
mov
in
xorl
cmp
push
enter
repz
dec
cmp
stos
xor
rcr
push
cmp
xor
movsl
jno
adc
xchg
mov
sub
cs
jg
and
push
cmp
movsl
aam
inc
out
lret
lods
cltd
dec
push
icebp
sysexit
cmp
cmpsb
int3
adc
daa
xlat
mov
jns
mov
or
push
lods
clc
gs
int
decl
mov
dec
add
ret
adc
in
sub
ljmp
ss
cs
cmp
pop
mov
lret
sbb
fdivrp
test
lcall
cmp
inc
jno
rcrl
lret
out
adc
push
dec
or
adc
lret
icebp
adc
scas
jns
inc
fistpll
push
inc
and
addr16
ja
scas
aas
push
test
xorl
mov
nop
mov
loopne
insl
xor
mov
push
dec
mov
shll
movsb
ljmp
inc
cmp
dec
sbb
clc
adc
fadds
jne
pusha
cmp
ror
data16
cli
mov
gs
les
and
jl
shr
outsb
js
inc
add
insl
or
shlb
xor
mov
popa
mov
xor
ja
pop
xchg
int3
push
xor
sub
jae
lock
push
stos
mov
push
je
add
rolb
pop
aaa
xor
or
cmp
cltd
xchg
repnz
loop
jns
shll
data16
inc
mov
mov
jge
movl
sahf
push
cmpsb
mov
adc
repz
cmp
repz
sub
jp
sbb
stos
cmpsl
cmp
adc
pushf
mov
fcomip
cmp
jns
cmpb
sbb
in
jns
jle
cmc
test
sahf
cmpsb
xchg
mov
nop
or
addr16
sbbl
jae
jnp
pop
imul
pop
pop
sub
cs
sbb
repnz
push
in
rorl
dec
out
inc
or
test
rcrb
and
lea
inc
adc
fistl
sub
into
push
dec
int3
cmpsb
mov
outsb
or
mov
push
xchg
push
or
jo
mov
ss
dec
pop
lfs
dec
mov
hlt
insl
fdivs
test
xlat
pop
imul
pop
lea
loopne
mov
in
and
mov
add
lock
mov
js
enter
out
subb
ja
push
jp
xor
fidivrs
ja
fsubrl
fisubl
scas
xor
dec
test
mov
add
push
inc
in
jae
adc
push
xor
das
mov
ror
lret
movsl
jo
stc
gs
cmp
mov
jge
in
lock
mul
lahf
push
adc
push
lret
mov
outsl
mov
ret
push
mov
repnz
fcoml
cld
and
or
mov
jae
ret
movsl
mov
imul
jb,pt
int3
gs
fs
cli
pop
jp
sahf
int
push
fnstsw
cmc
fcomip
xor
add
addb
fsubl
pop
loopne
ficoml
sub
push
add
imul
gs
dec
pop
pop
inc
jmp
inc
fs
out
fidivrs
dec
pop
or
cmp
andb
mov
cwtl
ljmp
std
imul
xchg
mov
loop
xchg
test
test
js
loope
mov
sub
jns
out
or
sarb
imul
xchg
and
std
adc
loope
adc
or
xor
sbb
cltd
sbb
aam
inc
mov
loope
out
pop
in
cmp
rorb
push
add
pop
push
lret
jp
lods
mov
and
fmulp
xchg
cmpl
repz
popf
xchg
repnz
lods
in
sbb
or
enter
pop
jl
ja
add
out
adc
int3
std
dec
mov
inc
leave
mov
mov
cmp
jo
adc
loop
sub
or
sbb
dec
je
inc
pop
fwait
add
stc
les
enter
dec
movups
jae
jp
sbb
in
sar
inc
ret
iret
in
fs
dec
fdivrl
movsl
xor
xchg
mov
jl
out
sarl
fwait
outsb
popf
inc
push
aas
add
jae
or
fstpl
add
test
and
jge
push
inc
addr16
dec
hlt
sub
sbb
dec
testb
xor
xor
pop
or
mov
mov
in
and
cltd
xor
inc
inc
pop
stos
lahf
mov
mov
ja
dec
xchg
std
rclb
adc
inc
dec
inc
fcoms
pop
nop
in
and
gs
xchg
in
dec
test
inc
adc
add
fwait
add
outsb
std
sub
cmc
test
push
data16
adc
add
stos
andb
ficoms
dec
jle
or
rclb
lret
shr
cmp
mov
adc
sbb
xchg
out
xor
pop
mov
lahf
mov
cmpsb
or
jno
int3
test
jo
jne
mov
sbb
or
and
stos
icebp
out
and
ret
data16
imul
jmp
fildll
or
call
fld
sub
vpackssdw
enter
std
repnz
and
jae
lock
mov
pop
cmp
ret
pop
lock
cld
mov
shlb
mov
xor
sbb
sbb
push
int3
test
mov
pop
jp
enter
pop
int
cmpsl
js
clc
aam
shr
stos
shlb
jmp
pop
cmc
in
ret
xchg
cmpsl
popa
jle
scas
shlb
aam
xchg
imul
xchg
lock
sbb
push
sti
sbbb
mov
and
or
push
xor
xor
adc
stc
imul
mov
test
pop
dec
pop
adc
out
ljmp
sbb
movsl
push
push
xorl
jl
add
imul
dec
addl
cmp
aad
mov
or
adc
std
sti
call
push
pop
int3
and
xlat
push
ror
push
dec
test
pop
fs
inc
bound
cmp
sub
imul
adc
testb
sub
adc
adc
repnz
ds
aam
nop
pop
dec
rclb
cmc
jg
mov
inc
addb
cs
push
pop
push
movsl
inc
xchg
jae
clc
test
ffreep
add
inc
lea
add
popa
aad
jg
mov
push
in
scas
leave
iret
inc
sti
xor
push
lret
nop
test
js
test
call
sub
jmp
out
jbe
adc
dec
xor
out
sbb
jle
sbb
stos
and
sub
insl
rcr
jp
test
pusha
aam
lds
mov
jmp
cmpsb
imul
jmp
lea
lret
mov
in
sarl
and
sbb
mov
lock
xchg
lods
add
notb
sbb
lahf
insl
lds
xor
push
lcall
mov
or
dec
dec
rcll
out
pop
mov
push
loope
movsl
pusha
mov
xor
sub
jmp
bound
movsl
add
lret
ja
jnp
pop
mov
jb
gs
or
and
fisubrl
shrl
mov
jp
sbbl
xchg
test
jmp
fimull
mov
fucom
scas
mov
pushf
int3
cmp
imul
dec
and
and
mov
mov
inc
xchg
xor
add
adc
int
inc
push
enter
add
adc
fidivs
sub
xor
loope
mov
sbb
inc
int
push
ljmp
cltd
les
aas
mov
mov
out
cli
cmp
js
mov
mov
fsubs
sbb
jbe
inc
in
imul
into
daa
or
ret
sbb
out
pop
imul
sub
or
cmpsb
icebp
xchg
push
push
test
call
sub
stos
es
and
adc
imul
pushf
in
repz
or
lret
sbb
and
lds
push
mull
cmp
cmp
bnd
push
add
rcrb
xchg
lret
mov
mov
inc
jno
daa
mov
js
push
sub
mov
roll
int3
xchg
jmp
sti
sbb
mov
mov
xchg
lret
inc
lahf
add
mov
inc
or
out
lds
sahf
push
imul
cmp
cli
test
leave
xchg
sub
mov
inc
mov
sub
mov
cmpsb
jbe
jae
int3
es
sub
leave
add
xchg
loop
sub
and
rcrb
shl
in
insb
xor
shr
jl
popa
mov
stos
fsub
dec
in
xor
inc
mov
xor
pop
cmp
inc
cmp
mov
cmc
jno
dec
sahf
bound
dec
mov
outsb
pushf
jb
lods
mov
push
repz
cmpsl
lods
jb
pop
mov
ret
stos
mull
cmpsb
pushf
sub
dec
sbb
mov
addl
sbb
lahf
xor
stos
fs
sub
ret
add
lcall
pusha
mov
cmp
inc
xchg
adc
push
sbb
sbb
push
adc
mov
mov
mov
sbb
addl
push
mov
out
xor
or
je
and
mov
xor
andb
in
das
lea
adc
add
or
xchg
mov
xchg
por
mov
mov
repnz
and
push
mov
mov
addr16
lcall
mov
test
dec
imul
loope
out
leave
js
push
mov
enter
add
neg
adc
fisttpll
cltd
int
movd
sbb
inc
loopne
sbb
inc
push
test
add
in
push
fidivl
xchg
in
daa
fnstcw
sub
cltd
movsl
xor
dec
adc
xchg
imul
jge
rcll
out
xor
int3
rorb
aaa
cs
loop
mov
xor
daa
popf
jno
in
or
cli
sub
popa
lret
pop
cmc
fisttpl
jbe
mov
mov
sbb
or
inc
in
inc
adc
xor
xchg
scas
mov
xor
adc
push
add
out
aam
mov
cmpsl
lahf
push
fs
pop
iret
push
jo
push
or
mov
xchg
jmp
fwait
mov
adc
mov
dec
dec
in
scas
fcompl
sar
pop
dec
bound
mov
push
addb
and
ret
ja
jb
pop
fcoms
shl
outsb
fisttpll
imulb
hlt
scas
mov
leave
cmp
dec
andb
and
ret
jge
insb
les
dec
faddl
xchg
adc
jne
cmpsl
inc
sub
inc
test
mov
xchg
push
dec
jge
jnp
add
or
jns
stos
loop
mov
inc
ss
add
std
dec
adc
mov
aas
sbb
fisubl
nop
insb
cli
jne
es
and
mov
mov
adc
adc
cmp
push
pop
cmp
cmp
je
je
sbb
movsb
dec
jbe
int3
jno
adc
pop
inc
outsl
insl
xor
jns
xor
mov
and
dec
stos
fiadds
ljmp
aaa
adc
shlb
mov
int
and
mov
xor
mov
mov
shlb
addr16
rorl
dec
in
cmpsb
jns
mov
mov
fldt
jecxz
jo
fidivrl
stos
xchg
push
mov
loope
add
popf
in
pop
js
xor
pop
jne
clc
sub
or
mov
mov
out
lds
cmp
inc
and
add
pop
cmp
les
jl
sub
call
das
or
lcall
push
mov
adc
ret
movsb
pop
push
jbe
or
les
cli
and
cmc
inc
xchg
sahf
test
fnsave
or
jb
mov
stos
jmp
leave
out
mov
leave
pop
int3
pop
sbb
bound
loopne
pop
jmp
mov
jae
jle
push
out
jns
xor
out
enter
in
out
mov
sub
jle
push
fimuls
mov
loop
mov
out
imull
mov
push
xlat
mov
test
sub
mov
jge
jns
out
lea
leave
and
mov
je
xor
mov
out
test
pop
arpl
and
mov
push
pop
sbb
xchg
cmp
ja
inc
jnp
mov
std
sbb
jl
push
sahf
repnz
mov
lods
add
mov
sbb
rorl
out
mov
je
sbb
fwait
sub
inc
loope
rcl
jp
pusha
xchg
in
jecxz
adc
adc
mov
fadd
cmpsb
ljmp
stos
pop
rclb
mov
add
mov
enter
pop
cs
pop
sbb
or
cs
repz
cmp
sub
fbld
jecxz
aaa
mov
sbb
jnp
xor
das
outsb
inc
mov
mov
adc
or
loopne
rclb
mov
outsb
inc
cld
ret
xchg
inc
jne
or
stos
jbe
and
inc
push
adc
sub
lods
popa
sbb
xlat
push
popf
jg
lock
es
inc
lahf
and
or
aas
es
sbb
xor
es
pusha
mov
and
pop
rorl
ja
out
fisttpl
xchg
mov
dec
pop
outsl
add
sbb
repnz
ret
jl
insl
hlt
aam
in
xchg
cmp
pop
mov
cmpsb
add
mov
in
icebp
jmp
push
cpuid
dec
test
add
pop
shrl
repnz
rclb
cwtl
mov
inc
pop
jns
push
sub
or
cwtl
dec
sbb
sbb
scas
loope
imul
test
cltd
sahf
sbb
xlat
cmp
mov
lcall
cmp
rcrl
out
imul
test
push
or
aam
inc
adc
dec
sahf
pop
out
jecxz
int
inc
sub
jl
not
xchg
gs
vpsubusw
add
and
xchg
test
hlt
test
xlat
fistpll
out
jb
pop
dec
mov
jge
shlb
sti
xchg
sbb
pop
or
sub
add
lods
mov
mov
dec
cmpsb
js
lock
jmp
leave
mov
inc
mov
arpl
mov
das
pop
int3
mov
add
and
mov
push
mov
pop
outsl
pop
jnp
dec
jne
insb
aaa
adc
bound
lret
aam
imul
scas
fsubrs
fs
cmpb
xlat
aaa
les
pop
lds
ds
out
mov
push
xchg
int3
jnp
sbb
js
cmp
sarb
cmp
dec
notl
pop
ficompl
ss
and
push
imul
not
nop
cmp
lods
sbb
loop
pusha
cmpsb
mov
ljmp
lret
dec
aam
jp
test
sub
jne
mov
lds
mov
pop
xor
sti
cli
push
lret
jge
arpl
fwait
int
push
cltd
sti
clc
jnp
inc
adc
cld
jmp
inc
mov
pop
xchg
fimuls
mov
loop
pop
vpcmpgtd
dec
test
in
loop
and
stos
les
subb
mov
cmpl
sbb
imul
inc
mov
mov
je
out
push
lea
std
jmp
ds
or
std
push
push
mov
jae
hlt
add
icebp
xchg
sbbb
or
jns
dec
mov
push
outsb
mov
dec
cmp
push
push
scas
fucom
and
xchg
xchg
sub
jg
inc
fmulp
lods
and
movsl
push
test
pop
mov
push
into
pop
outsl
int
add
xchg
mov
in
adcb
cmpsl
imul
in
addb
mov
aas
sub
xor
jne
inc
test
cmp
mov
and
movsb
sbb
in
sub
aaa
lds
xor
push
pop
xchg
cmp
std
inc
and
inc
sbb
fsubs
xlat
daa
pop
pushf
mov
and
jo
xchg
ret
int3
in
push
stos
clc
xchg
mov
cmp
xorl
push
ret
mov
vpshlw
ja
dec
loop
enter
cmpsl
mov
cmp
ja
test
pusha
jo
and
les
out
sub
adc
loop
in
shr
add
imul
xchg
je
loop
jl
ror
loopne
or
negl
xlat
jle
bound
sub
pop
mov
std
cs
or
push
mov
pop
into
cmpsb
lret
insl
adc
adc
push
xorl
std
fidivrs
int3
sbb
cmp
sub
inc
xor
je
dec
and
xlat
mov
and
in
fiaddl
sti
inc
daa
fcomps
sub
pop
andb
mov
jnp
imul
cmp
xorl
out
pop
aam
in
pop
nop
imul
or
inc
cmpsl
jb
push
fdivs
cwtl
sbb
mov
mov
aam
enter
lahf
inc
and
sbb
inc
es
mov
mov
mov
and
scas
bound
in
xor
movsl
push
pop
sub
sub
inc
sub
fildl
xor
or
scas
push
sub
mov
nop
arpl
sbb
cmp
aam
push
mov
arpl
rcll
mov
mov
sbb
int3
in
inc
into
dec
shr
adc
lcall
sbb
test
mov
rcrl
test
fs
nop
and
call
xchg
jnp
movsl
and
mov
imul
mov
fimuls
and
inc
outsl
dec
dec
mov
imul
sub
mov
fisubrl
iret
pop
xorl
pop
xchg
pop
aam
sbbb
imul
dec
push
imul
mov
push
mov
lret
int
cmc
mov
imul
decb
lods
sub
aad
lods
or
push
jmp
leave
dec
nop
test
xchg
sub
fwait
inc
push
dec
cmc
sti
in
shlb
pop
jns
icebp
cmp
cmpsb
push
xchg
js
pop
decb
cmp
outsl
jle
movsb
inc
loopne
mov
pushf
mov
fistps
lds
leave
pop
push
insb
fstpl
in
and
inc
mov
mov
cli
xlat
push
or
mov
xchg
mov
insb
mov
cltd
clc
add
imul
inc
out
mul
jne
fwait
xchg
dec
sub
in
push
in
dec
enter
cli
ret
push
dec
movsl
sti
cwtl
imull
mov
xchg
insb
push
lcall
loop
push
push
cmp
rcrb
fmull
xor
push
mov
inc
and
or
scas
ficoml
in
fimull
push
mov
test
inc
fbstp
jl
sbb
cmp
mov
xchg
add
cltd
push
cmp
stc
jmp
jge
sub
hlt
push
je
xchg
arpl
scas
in
fimuls
add
bound
adc
clc
pop
xlat
inc
xchg
pop
push
in
adc
push
inc
mov
jg
daa
stos
bound
add
push
mov
loop
inc
cmpsb
daa
mov
or
icebp
test
lods
push
xchg
adc
mov
and
mov
or
push
stos
lds
mov
pop
push
sarb
and
data16
xlat
or
mov
add
out
loopne
cld
into
inc
sub
and
sti
adc
std
loopne
or
push
cltd
add
sbb
fisttpl
jns
out
ja
fs
pop
imul
push
jne
cwtl
es
and
push
push
push
cmp
loope
dec
insb
popf
mov
pop
xchg
lahf
out
jge
push
mov
sbb
mov
mov
push
sub
lahf
ljmp
cmpsb
jns
jno
or
and
cmc
mov
in
lret
mov
rcll
sub
aaa
sub
test
and
mov
decl
lahf
fldcw
mov
cmp
int
sbb
push
rcll
cs
pop
loope
xorl
mov
pop
mov
xchg
jne
aad
jecxz
nop
es
js
jmp
mov
xchg
cld
add
pusha
icebp
xor
jge
stos
adc
jecxz
xchg
adc
outsl
imul
in
adc
aas
push
add
cs
and
iret
pop
or
lods
icebp
and
push
xlat
xor
xor
lea
mov
stc
jb
fcoms
test
ljmp
pop
nop
imul
add
int3
mov
movsb
shr
xchg
pop
test
sbbb
mov
mov
push
mov
mov
add
dec
popa
lods
adc
xor
in
imul
sahf
xchg
aas
movsl
loopne
cli
add
lcall
sbb
lcall
icebp
scas
pop
inc
gs
dec
loop
mov
test
add
fst
lret
daa
sub
ds
stos
pop
int
sub
std
out
call
xchg
shll
inc
sub
xchg
or
rcll
dec
mov
xor
hlt
fs
inc
fisubs
jecxz
sub
subb
sahf
push
inc
fidivl
ss
shrb
xchg
mov
pop
lret
cmp
icebp
dec
cmp
lods
add
sbb
xchg
sti
dec
and
sub
gs
xchg
or
xchg
or
in
push
xchg
ljmp
sub
out
ret
pop
xlat
inc
loop
std
or
bound
test
sub
stc
enter
clc
dec
ds
insb
insb
adc
rcrl
jo
mov
adc
jo
stc
fmuls
or
mov
mov
mov
mov
lahf
mov
lods
idivl
das
lcall
into
aas
into
outsl
dec
mov
adc
mov
mov
dec
mov
cmp
out
sbb
lea
fcmovne
testb
leave
sbb
push
push
cmp
and
cmp
or
and
jecxz
add
rclb
outsb
pusha
into
mov
in
mov
imulb
or
push
mov
pushf
pop
pop
imul
out
sub
xchg
sbb
or
jecxz
cmp
loope
aam
and
jl
frstor
jae
push
clc
test
fs
jno
push
fildl
jg
mov
cli
testl
mov
hlt
icebp
push
daa
nop
inc
xchg
out
or
hlt
pusha
out
outsl
mov
repz
mov
and
jbe
leave
into
repz
jle
out
pusha
sti
ss
imul
daa
pushf
push
push
cwtl
cmp
add
pop
aam
adc
jmp
nop
rorb
jg
bnd
ljmp
aaa
mov
inc
mov
dec
xor
add
add
aad
xor
push
mov
pop
sbb
xchg
cmp
add
pinsrw
out
xor
xchg
push
pop
es
lock
xlat
inc
js
jecxz
sub
or
aaa
cltd
sbb
jne
add
push
mov
out
shl
inc
mov
subl
and
subb
dec
mov
scas
vpmullw
jge
scas
outsb
sbb
mov
adc
insl
mov
iret
ret
repnz
lock
daa
push
dec
in
test
adc
dec
daa
xchg
mov
push
jg
sub
xlat
test
pop
adc
sbb
nop
lret
in
js
test
pop
add
mov
sub
add
fcmovu
das
and
sub
imul
ljmp
out
jo
gs
shlb
idivb
cmp
std
mov
xchg
jmp
pop
sub
mov
adc
cwtl
jnp
xchg
cmp
sarb
movb
loop
mov
xlat
mov
in
int3
mov
push
fcoml
imul
dec
fiadds
and
inc
call
shl
xchg
testb
lods
or
mov
rcr
xor
fisttpll
loope
ret
and
in
and
and
mov
shlb
jmp
ja
sub
ljmp
es
into
mov
icebp
mov
es
cmp
sbb
push
cmp
mov
leave
fwait
repnz
and
mov
jns
jg
cmp
pop
leave
scas
dec
movsb
sti
adc
mov
or
push
xchg
fwait
push
in
jne
adc
gs
notb
negl
cld
fstl
cmp
in
mov
out
loope
add
and
out
imul
xchg
fs
add
lret
inc
fldcw
movsb
aas
int3
sub
sarb
scas
xchg
add
scas
mov
pusha
iret
outsb
jns
pop
insb
mov
mov
add
inc
loopne
xchg
dec
pusha
test
pop
mov
jl
push
mov
jae
fwait
mov
sarl
insl
lods
rcrb
subl
outsb
mov
nop
sbbb
cs
call
into
aas
stc
sti
aam
jecxz
mov
test
js
inc
jne
pop
arpl
in
lods
xor
xchg
adc
dec
insl
jno
test
movsl
sub
xchg
pop
stos
adcb
sbb
jle
inc
in
or
sbb
sarb
imul
or
pop
mov
movl
pusha
xor
fistpl
dec
cs
pop
adc
scas
xchg
test
or
cltd
add
sub
xor
stc
inc
add
test
sub
popa
push
sub
pop
fisttpl
flds
shl
lock
ss
xlat
cmp
arpl
lcall
jae
dec
xchg
cmc
push
jo
mov
mov
dec
fwait
xchg
sub
xlat
pop
movsl
pop
xchg
sub
hlt
data16
ret
sub
inc
out
sarl
gs
fistl
jecxz
xor
mov
out
sbb
loop
repz
test
lods
insl
pop
test
jno
popf
sbb
in
aas
cld
pop
adc
adc
and
push
xchg
std
in
mov
inc
mov
mov
inc
jge
stc
sub
loopne
xor
nop
pop
sub
imul
mov
and
fwait
mov
sbb
or
mov
and
jb
mov
cmp
es
mov
test
icebp
arpl
and
sbb
clc
popl
std
mov
std
out
popf
pushl
pop
xor
mov
adc
xchg
and
icebp
fldt
outsl
and
cltd
daa
cmp
jge
test
roll
mov
cmp
lea
or
jne
enter
and
pop
jp
jne
push
lahf
jbe
mov
mov
je
or
add
jnp
imul
pop
sbb
fsts
cmp
scas
adc
test
and
leave
jnp
in
pusha
je
and
insb
adc
add
cmpsb
and
cmpsl
mov
enter
js
das
xor
mov
xor
fists
insb
adc
xorb
jmp
stc
mov
out
mov
add
addl
inc
jp
jge
adc
int
adc
sub
sarb
scas
fistps
pop
aam
repnz
cmpsb
out
ret
mov
mov
jae
xlat
fcmovne
popf
lcall
movb
rclb
cld
sbb
mov
jne
mov
pop
jg
cmp
push
jecxz
and
ds
cmp
mov
sbb
std
and
fwait
das
jecxz
imul
je
pop
push
or
jae
ret
sbb
ret
jns
sub
mov
or
mov
js
iret
bound
push
cmp
inc
in
adc
notl
fs
cwtl
movsl
out
mov
es
outsl
nop
sbb
adc
mov
and
push
or
inc
pop
fildl
outsb
dec
std
pop
jecxz
insb
inc
cmovne
pmuludq
out
stc
test
fildll
mov
aas
mov
jae
mov
mov
push
cli
lcall
mov
stc
cltd
pop
sahf
pop
dec
or
shl
xchg
pop
mov
pop
push
sub
mov
iret
pop
out
pop
es
add
movsl
dec
cltd
filds
mov
cmc
pop
mov
sbb
or
xor
lret
xchg
jge
je
in
cli
mov
adc
dec
stos
jnp
and
stos
in
das
test
test
push
mov
xchg
dec
xchg
jae
and
jecxz
adc
adc
rcrl
dec
xor
inc
inc
xor
xchg
dec
mov
sub
cmp
mov
lock
mov
or
push
in
loop
leave
mov
scas
sbb
mov
imul
jne
cmp
xor
sbb
add
lea
orb
mov
leave
dec
loopne
sbb
cmpsl
out
and
stos
and
test
sbb
dec
push
xchg
fstps
lods
xchg
cmp
xchg
and
inc
sub
cli
jnp
in
pop
push
je
xor
repz
jmp
inc
adc
int
dec
mov
call
cmp
xor
shlb
inc
testb
lods
lcall
mov
shrb
orb
into
enter
icebp
js
push
mov
aad
loope
xor
clc
cs
bswap
mov
mov
ss
lahf
test
mov
shrl
testb
mov
lock
dec
lods
cmp
pop
push
push
ret
in
sub
mov
jno
sbbl
arpl
jmp
repz
adc
jle
lock
sub
jl
and
arpl
mov
push
sub
or
or
aam
popa
add
aad
push
push
stos
lods
adcb
mov
cmp
or
sbb
cli
xchg
adc
cmp
cld
repz
fiadds
sbb
das
leave
dec
dec
mov
sbb
adc
mov
mov
or
add
and
dec
jbe
jae
lods
mov
dec
sahf
jb
sbb
or
cmpb
mov
xchg
mov
in
cmp
leave
xchg
bswap
xchg
jno
pushf
xchg
mov
xchg
aad
icebp
add
movsl
sbb
jg
inc
das
pop
xchg
jbe
dec
sti
sarb
lcall
shl
adc
push
pop
dec
inc
sub
aam
jg
dec
and
pusha
inc
pusha
fwait
inc
ss
sbb
ja
scas
lods
mull
jge
sub
mov
adc
pop
mov
and
jbe
push
cmp
into
cmp
push
cmp
cltd
sub
adc
add
and
mov
inc
add
andl
cwtl
imul
push
in
dec
adc
out
fists
jo
fbstp
and
sub
sbbb
xchg
call
adc
je
dec
jl
scas
lahf
out
test
xchg
and
fistl
mov
add
pop
icebp
mov
iret
pop
dec
push
cmpsl
mov
rcll
daa
xor
adc
outsb
sti
mov
mulb
nop
mov
sbb
sub
in
mov
add
cwtl
cwtl
sub
push
imul
inc
adc
repnz
testl
jl
xor
test
add
or
add
out
in
fucomi
xchg
rcll
sbb
scas
outsl
fcom
cmpsb
push
add
fcompl
pop
pop
jecxz
mov
add
sbb
sub
popa
push
stos
daa
popf
ss
inc
out
fnstsw
lds
cmp
stc
xchg
cmp
sub
nop
mov
imul
gs
jge
hlt
sub
xorl
test
add
cmp
jae
std
or
xchg
cmpsb
das
test
jnp
xchg
jmp
cli
mov
dec
jns
int
pop
mov
stos
imul
repz
addr16
repz
adc
jl
out
sub
lods
lods
mov
and
cwtl
and
ljmp
loop
and
fwait
test
movsb
push
test
cli
mov
cltd
arpl
add
xor
les
xlat
icebp
jge
mulb
inc
mov
xchg
inc
lcall
andb
jne
dec
mov
jle
sti
rcrl
ret
dec
rolb
int3
jae
int3
inc
xor
mov
ljmp
dec
cltd
cmc
xchg
or
and
lret
xchg
mov
cmpsl
inc
sbb
sbb
out
outsb
mov
mov
sbb
xchg
dec
vcvtps2pd
shr
xchg
and
cmp
or
enter
iret
sti
push
test
fwait
in
fstl
fs
jne
call
or
pop
add
or
pop
jno
lods
sarl
xchg
ss
dec
ss
arpl
pop
xor
roll
in
pop
adc
adc
test
xchg
dec
fsubrs
repnz
int
sub
enter
sbbl
bsr
jge
int
arpl
sbb
fstps
daa
scas
sub
int3
lahf
fisubrl
inc
push
add
fldenv
in
in
call
push
lret
popf
stc
lret
fcompl
icebp
shll
push
add
sarb
pop
outsb
ror
mov
dec
rorl
inc
and
cmpb
xchg
push
in
adc
jno
mov
iret
sub
xchg
push
mov
mov
sarb
xchg
sub
aas
pushl
idivl
cs
inc
inc
into
mov
cld
int
mov
jl
js
mov
out
inc
sub
cmp
sbb
popf
mov
xor
and
sti
pop
daa
cmp
xchg
xchg
test
fiadds
mov
mov
dec
movsl
lds
sbb
mov
jp
pushf
cmp
push
out
jg
roll
sbb
pop
xor
pop
add
dec
adc
or
inc
xor
push
subb
mov
cmp
test
pop
fmul
add
clc
out
mov
daa
xchg
adc
xchg
decl
push
in
hlt
fcomp
dec
out
xor
das
sbb
iret
xchg
movsl
loopne
sub
add
repnz
cld
jns
dec
push
in
shll
aam
sti
jbe
sbb
inc
movsb
sbb
xchg
icebp
cmp
mov
jp
pop
and
xor
ret
ja
adc
adc
testl
rorb
cltd
dec
fiadds
xor
leave
out
lods
mov
in
call
test
cwtl
mov
dec
sub
mov
scas
pop
inc
dec
cmp
es
lcall
xor
repz
fnstenv
mov
mov
leave
jg
sbb
idivl
imul
sub
xor
fildl
out
pushl
jb
mov
fwait
aas
int3
aaa
jb,pn
test
fstps
arpl
pop
ret
test
loopne
sbb
stos
testb
movsl
and
pop
cmp
push
insb
int
xchg
pop
sub
adc
fadds
dec
adc
neg
sub
imul
into
pop
cmpsb
ss
jle
dec
das
sarl
cmp
xor
scas
push
test
repz
inc
push
js
mov
fildl
push
idivl
or
out
addb
fldt
addr16
jl
cmc
lret
mov
mov
mov
decb
jbe
das
fcmovnbe
mov
hlt
pop
cmp
stos
push
daa
icebp
xchg
fisttps
or
jns
movsb
mov
test
fisubrl
and
add
ret
dec
sarl
addl
jp
jbe
jnp
sub
sahf
in
cmpsb
xor
lods
xor
add
mov
das
scas
data16
xor
pushf
push
adc
jno
sbb
faddl
add
out
popf
mov
pop
jb
push
xchg
push
and
lret
adc
xchg
das
add
cmp
and
hlt
inc
and
test
test
and
jmp
in
mov
cld
mov
cmp
stos
ja
jbe
inc
xchg
ret
lret
inc
xchg
cmp
mov
gs
pop
and
mov
test
inc
popa
fdivrl
les
lret
jne
fbld
sub
outsl
inc
int3
cmpl
and
push
lret
scas
ret
push
mov
xchg
in
cli
ss
sbb
adc
ljmp
pop
andb
test
mov
and
or
adc
lea
shrb
test
adc
adc
sub
cs
xor
cld
cld
add
xor
outsb
lods
pop
out
xchg
test
mov
sbb
push
pop
ds
in
push
dec
xchg
gs
add
xor
push
xchg
pop
xchg
push
imul
add
les
mov
in
pop
and
cmpsb
popf
stos
outsb
mov
add
push
lahf
sbb
clc
adc
bound
sub
lods
sub
xor
test
xor
inc
lds
mov
cltd
rorb
sub
xor
idivl
les
cmp
int3
and
mov
inc
addr16
mov
leave
pop
cmp
lock
add
mov
add
pop
inc
cmp
mov
dec
mov
mov
scas
xor
loope
insb
jmp
fsts
push
cmpsl
inc
cmp
mov
inc
cmpsl
stos
pop
mov
leave
outsl
xchg
cmp
push
sahf
push
jl
cmp
push
mov
ret
cmpsb
call
fldcw
je
xchg
xchg
pop
sub
xchg
movsb
jnp
add
jb
leave
pop
subl
fsubrs
rolb
ja
mov
mov
or
push
gs
push
rcl
ja
das
lods
inc
mov
inc
outsl
jg
imull
jmp
popa
add
xor
js
jmp
fstps
adc
inc
jg
ljmp
stos
vmwrite
enter
cwtl
jae
std
test
inc
sarl
and
cmp
mov
jmp
outsb
mov
cmp
mov
jno
push
loope
lret
shl
xchg
push
repz
adc
enter
dec
movb
add
inc
cmp
mov
jb
push
jns
aam
inc
test
xchg
loope
dec
inc
pop
hlt
cwtl
pop
adc
aad
jbe
mov
sar
mov
dec
sub
sbbb
cmp
add
jmp
cmp
arpl
and
push
shl
mov
hlt
sbb
or
addr16
loop
mov
lds
and
adc
mov
mov
outsl
out
cmp
pushf
or
inc
stos
mov
push
xchg
xchg
mov
or
fisubs
mov
into
lret
pop
push
stos
outsw
sub
bound
enter
sti
aad
or
jo
repz
inc
int
loope
xor
mov
lea
cmp
cmpsb
fmul
sbb
add
and
ss
mov
pop
push
scas
jg
call
icebp
xor
mov
arpl
xchg
dec
cmp
test
adc
and
scas
imul
xchg
and
xchg
jle
arpl
cltd
cltd
and
clc
sarl
push
inc
sysexit
loop
outsl
inc
dec
and
mov
mov
mov
fsub
icebp
jb
sbb
imul
pandn
and
add
xorl
push
dec
dec
mov
dec
fwait
in
xorb
movsl
mov
leave
pop
loop
mov
lahf
pop
sbb
test
xor
mov
push
cli
sbb
cmpsl
pushf
mov
sub
loop
gs
cmp
xchg
std
pop
mov
jp
andl
jnp
aaa
inc
pop
push
pusha
xor
pop
cmp
shl
ficoms
fs
inc
sub
sbb
lret
sti
sub
ss
cmp
jmp
mov
inc
scas
jmp
jecxz
scas
hlt
or
shlb
dec
pusha
in
mov
dec
cmc
inc
jl
adc
out
incl
popf
mov
in
int
add
push
jge
jge
sub
jl
xchg
cmpsl
inc
push
ss
dec
fldl
mov
jg
lcall
lock
jns
jl
hlt
cld
int3
stos
cltd
or
or
lods
jecxz
rorl
mov
push
cs
mov
popf
insb
insl
push
mov
add
out
and
xchg
or
inc
mov
sub
rol
add
out
cmp
mov
xchg
rol
sub
aaa
sarb
call
cmpsb
addr16
hlt
jl
xchg
mov
sub
lahf
mov
inc
mov
add
adc
fidivs
enter
fxch
jmp
cmc
nop
inc
jo
push
or
cmpsl
sarl
pop
andl
or
lret
push
popf
adc
repnz
adc
aam
cmp
das
and
aam
jne
ret
xchg
aam
xchg
inc
imul
jecxz
lea
pop
xchg
sysenter
add
pop
pop
xor
xchg
loop
shl
mov
outsb
sbb
aaa
add
or
test
adc
ss
pusha
push
imul
xchg
fsubrs
es
add
pop
sub
mov
int
clc
xor
mov
and
inc
xchg
stos
out
add
mov
and
jmp
std
cmp
inc
mov
ss
outsl
cmp
jae
jns
cmpsb
fs
scas
and
xchg
pop
sub
dec
mov
xor
sub
je
push
dec
jl
test
sarl
daa
xchg
sbb
mov
js
daa
fldenv
sbb
pop
add
sbb
mov
pop
sbb
push
arpl
mov
roll
push
sbb
fisubl
cmc
inc
dec
or
xchg
inc
sbb
dec
clc
pop
sti
jecxz
ja
sub
xor
out
mov
xorl
inc
popf
and
es
mov
hlt
or
outsb
mov
pop
jnp
cmp
out
out
cmp
xor
popa
sbb
in
icebp
nop
insb
jbe
loopne
cmp
lock
xchg
jb
sbb
les
fstp
test
pop
dec
pop
cmp
sub
fcomp
add
mov
cs
data16
pop
dec
out
dec
lock
inc
mov
outsl
pop
adc
dec
cmc
inc
dec
dec
adc
jbe
mov
or
or
push
insb
push
outsb
sbb
pop
sbb
popa
in
rcr
loope
lahf
sub
cmp
mov
outsl
jl
fldt
jb
xor
sbb
addr16
add
call
mov
sub
icebp
loope
shl
and
cmpsl
scas
ja
cmp
cmpsb
es
int3
mov
pop
push
mov
jmp
dec
xchg
push
popa
in
mov
hlt
sahf
ret
mov
dec
jne
scas
aas
mov
add
jmp
xchg
push
xchg
pop
fadds
push
dec
mov
mov
jae
adcl
cmpsl
pop
mov
adc
fadd
pusha
lret
add
enter
test
fistpll
adc
xor
jo
dec
jae
adc
test
and
push
mov
iret
ja
mov
test
jbe
sub
xchg
sbbb
inc
adc
in
pop
xchg
cmp
jg
mov
int
fnsetpm(287
imul
je
or
pop
push
sub
ds
stc
xlat
fs
add
lods
sub
xchg
loopne
arpl
jns
inc
dec
loopne
andl
mov
lret
cld
pusha
in
popl
rclb
sbb
add
test
out
nop
xchg
dec
mov
cs
pop
jne
insl
jnp
sbb
pop
dec
xchg
outsb
iret
lret
out
jg
shlb
push
imul
lahf
cmp
lcall
repnz
mov
fiaddl
inc
and
pop
stos
xlat
ljmp
mov
fisubs
mov
dec
loopne
pop
lahf
dec
cmp
push
add
adc
neg
shll
fstl
pop
lods
dec
ljmp
lds
aad
popa
fcomip
loopne
hlt
cld
pusha
mov
dec
fnsave
cmpsl
adc
sub
scas
xor
stc
dec
sbb
push
sub
pop
push
sbb
sbb
mov
data16
push
iret
or
repz
add
mov
push
mov
test
xchg
loope
jbe
fcompl
inc
jnp
loop
lret
mov
push
jge
fdivl
scas
push
sub
lods
test
pop
shrb
icebp
outsb
fwait
aas
jmp
lods
aad
fwait
sbb
insl
aaa
ja
sub
push
xor
sbb
fbstp
push
stc
les
les
outsb
iret
ret
push
pushf
push
mov
xchg
adc
or
or
jecxz
andb
mov
es
shll
cmp
fiaddl
mov
mov
xlat
xor
test
popf
pusha
sti
outsb
cmp
cmp
mov
shlb
and
outsl
stos
cmc
inc
je
add
xchg
ds
jecxz
sub
fcomps
lret
ror
lods
pop
xchg
cltd
push
cmp
adc
int3
and
lcall
xor
mov
cmp
xor
repnz
ficomps
push
mov
cmpsb
popa
xchg
jecxz
sub
inc
xor
push
shr
mov
ret
jp
cmpsl
mov
or
sbb
stos
test
loop
dec
jno
fcmovnb
daa
sbb
imul
push
mov
cs
cmp
scas
sahf
adcl
mov
in
mov
jl
dec
sub
sub
rorl
or
dec
out
dec
in
sbbb
aaa
in
lock
pop
sub
dec
inc
mov
and
sbb
or
shrb
mov
icebp
push
aaa
push
sbb
test
mov
les
pop
fstl
cmc
add
mov
lcall
arpl
xchg
sub
leave
int3
add
cmp
dec
in
inc
or
mov
cmp
out
rorl
iret
push
mov
mov
in
dec
xchg
sbb
sbb
fldl
xchg
in
lret
jge
movsl
cmp
nop
pop
add
fstps
mov
xor
push
test
stc
jmp
loopne
xor
sub
mov
ss
lcall
xor
pusha
xor
or
mov
movsl
enter
mov
mov
mov
and
adc
pop
mov
cmp
fiadds
xor
int3
lods
loope
xor
bnd
bound
int
test
push
dec
fnstenv
sbb
sub
rcll
test
lea
mov
lcall
mov
and
push
lcall
mov
leave
inc
js,pn
fsubrl
std
leave
sti
pop
pop
stos
addr16
imul
xchg
push
and
mov
sar
sbb
mov
in
xor
lods
psllq
inc
pop
das
or
dec
adc
cmpsl
dec
or
outsl
pop
push
xchg
mov
inc
jb
flds
or
ds
idivl
fsubl
arpl
shr
rol
xchg
les
mov
bound
call
iret
in
idivl
jl
ret
mov
in
cmp
fidivrs
mov
and
rclb
cmc
mov
imul
call
ja
adc
ss
and
cli
push
dec
and
jg
test
int
adc
sbb
loopne
std
repz
lahf
ja
inc
testl
push
adc
push
mov
mov
movsb
cmp
out
mov
aas
addl
mov
push
aaa
lret
lahf
push
test
out
fnsave
push
orb
push
jno
sub
fisubl
push
scas
and
sub
xchg
sti
mov
mov
pop
jmp
outsl
jo
js
adc
sarl
imul
cltd
xchg
adc
inc
fldl
sbb
cmpb
call
ss
pop
sbb
mov
mov
or
hlt
dec
das
pop
push
dec
insl
add
hlt
movsb
sbb
loopw
cmp
mov
mov
movsb
and
shrb
xor
int
push
sbb
das
or
cs
xor
dec
xor
cmp
pop
push
mov
jo
adc
sbb
jl
and
mov
push
mov
lods
jns
dec
inc
call
lods
aad
push
scas
in
gs
bound
and
mov
stos
mov
pop
stos
std
sbb
es
xchg
adc
fildll
pusha
mov
cmp
or
xlat
cs
dec
jne
mov
js
out
pusha
mov
push
mov
dec
pop
inc
fstpl
cmp
fmul
pop
popa
sbbb
repz
outsb
or
mov
or
fwait
inc
sub
sar
mov
bnd
lea
add
repnz
cli
inc
pop
js
lret
lahf
subl
mov
sub
push
mov
test
fsubs
ret
mov
std
mov
xor
out
sahf
shll
shll
scas
sub
test
jle
cmp
test
pop
test
fnstenv
aam
dec
push
add
inc
aam
add
or
out
pop
movsb
add
ss
aaa
pop
ret
pop
rorl
sub
rcl
in
shlb
stos
test
imul
dec
ss
jno
xor
mov
push
ja
lds
jnp
mov
aad
aaa
mov
jno
mov
adc
xor
loope
sbb
mov
mov
inc
dec
cmp
push
push
pop
or
cmp
jo
mov
xor
shl
mov
or
pop
mov
shl
ds
mov
lea
cmpsl
jl
add
pop
mov
out
xchg
or
add
sbb
xchg
jno
subl
ss
push
lea
shrb
mov
ljmp
inc
scas
vlddqu
and
sbb
in
dec
adc
mov
sbb
cmpsb
das
fbld
xchg
dec
ret
stos
mov
sub
add
pop
mov
sarl
and
xlat
inc
adc
roll
sarb
shrb
inc
add
outsb
push
and
add
out
mulb
cmpsl
and
test
stos
call
in
mov
sub
jecxz
push
and
in
cmc
arpl
mov
adc
bound
fsubs
push
in
mov
ja
sbb
mov
leave
dec
out
ret
jle
pop
std
jno
dec
jo
aam
jge
gs
rclb
loope
mov
bound
lods
call
fcompl
adc
stc
ja
fnstcw
pop
sbb
mov
mov
cs
cmpsb
jge
mov
cs
cmp
dec
mov
hlt
xor
fwait
rolb
sbb
mov
insl
dec
mov
xor
mov
xlat
and
inc
and
adc
mov
xor
push
xor
push
pop
pop
fwait
ja
xchg
ret
loopne
xlat
loope
aam
gs
mov
movsb
ds
cmp
int3
adc
sub
bnd
int3
or
and
imul
pop
into
push
std
push
aaa
jae
js
mov
cld
add
or
fldl
gs
mov
inc
ret
xchg
mov
movsb
sarb
rcrl
lret
sub
mov
mov
ljmp
cmp
mov
and
and
mov
test
loop
lcall
cmp
inc
xor
das
mov
insb
das
ficompl
sbb
andb
dec
shlb
sti
fstps
adc
pop
test
das
add
add
clc
push
test
xchg
movups
push
ret
dec
mov
lea
inc
movsb
jp
jmp
add
and
scas
addr16
aad
pop
jbe
lock
sbb
xchg
divb
fdivs
in
sbb
inc
cmp
scas
gs
mov
sub
jae
cmp
push
cmp
dec
ss
inc
push
cmp
sbb
out
lea
repz
jle
dec
sbb
push
sarb
repz
xor
xchg
pop
pop
call
fisubl
cld
lea
das
ret
lods
or
lods
adc
mov
xchg
imul
aas
rolb
rclb
test
ud2
filds
into
nop
pushf
aas
ss
stos
addr16
les
test
lret
xchg
sbb
ljmp
rolb
dec
inc
stos
sti
test
loop
jmp
add
psubsb
cmpsb
jbe
and
inc
push
std
mov
adc
test
std
inc
imul
pop
add
pop
adc
or
outsb
subl
jb
je
jae
push
ret
and
ret
cltd
mov
cmp
or
mov
repz
mov
or
mov
jmp
mov
loopne
mov
dec
test
in
mov
cs
int
idivl
mov
and
nop
pop
mov
push
test
cld
jns
adc
push
call
outsl
mov
bound
scas
cmc
in
fisubrs
cmp
psrad
jmp
leave
in
inc
lods
xchg
cmp
and
mov
mov
xor
add
shrl
mov
in
mov
out
stos
bswap
push
mov
cmp
or
lret
adc
ss
out
inc
adc
jno
inc
push
into
xor
rcrl
adc
sti
xchg
pushf
popa
out
outsb
inc
xor
mov
in
loop
arpl
jp
jge
inc
cwtl
dec
or
pusha
inc
fsubl
or
std
insb
out
push
xchg
gs
repz
xor
insb
jl
sbb
icebp
in
arpl
aaa
loope
mov
push
mov
xor
mov
jp
xchg
sahf
rcl
in
inc
push
cli
mov
shrl
sbb
in
jge
fisttps
adc
adc
int
lea
insb
jnp
test
stos
cmpsb
cld
xchg
and
test
xor
jo
enter
imul
inc
and
enter
hlt
insl
push
cmp
lahf
jno
cmpsl
cli
daa
sub
xchg
ds
adc
cmp
fld
pop
cwtl
cltd
jg,pt
pop
cltd
cmpsb
jmp
jo
inc
and
icebp
aaa
sub
aam
insb
cmpsb
mov
xchg
fldcw
sti
mov
popl
in
mov
and
mov
pop
int
adc
daa
xor
pop
lcall
jge
mov
outsl
icebp
jae
dec
mov
mov
xchg
mov
or
nop
ret
lock
sahf
mov
orb
mov
and
loope
fidivl
cmpsl
rorl
adc
dec
dec
xchg
mov
clc
aad
ja
mov
aam
int
insl
enter
inc
dec
sbb
sub
in
in
outsl
xchg
idivb
xchg
cmp
push
add
xor
jge
mov
std
in
fdivr
pushl
sbb
pop
lods
add
mov
hlt
lods
andl
clc
mul
ljmp
pop
push
das
gs
outsl
cli
xor
xchg
scas
jbe
das
inc
test
std
jae
clc
or
sbb
inc
rcr
mov
fldenv
nop
outsl
mov
iret
xor
xchg
sahf
stos
stc
lret
in
mov
inc
or
movsl
cmpsb
stos
rcrb
cmp
hlt
vpackssdw
int
jmp
sub
sub
iret
mov
mov
sub
add
movsb
or
lahf
in
pop
mov
dec
push
xchg
adc
aam
xchg
sti
paddq
daa
add
pusha
adc
es
ror
push
sti
popa
add
xorb
dec
xchg
cs
mov
mov
arpl
xor
stc
push
jb
inc
cwtl
stos
push
dec
add
inc
and
in
arpl
push
ja
stos
sub
xchg
sub
test
xchg
lods
cmpsl
xchg
cmp
dec
movsb
mov
stos
fimuls
aaa
lea
test
out
jno
outsb
add
roll
adc
int3
mov
cmp
cmp
ret
sbb
aaa
in
sub
or
and
jbe
sub
lret
push
or
ret
ljmp
divl
in
lret
jp
jl
sub
cmc
mov
mov
jecxz
in
stos
push
dec
mov
cmp
mov
ds
or
jno
sbbl
loopne
ficomps
jne
mov
scas
pop
or
bound
adc
dec
inc
shlb
or
outsl
popf
lcall
pusha
lods
adc
jae
pop
mov
mov
repnz
cmp
pushf
pusha
ret
and
or
popl
aaa
push
inc
cmp
into
test
add
andl
mov
repz
push
mov
and
sub
dec
inc
fbld
dec
xchg
sti
inc
mov
sub
scas
add
or
fnstenv
xor
inc
mov
rolb
mov
xchg
mov
jbe
imul
xchg
test
mov
adc
ficoml
cmpb
cmp
mov
test
sub
pop
pushf
xchg
mov
mov
int
popf
int
fwait
pop
sahf
andl
push
ljmp
out
popa
xlat
jno
pop
push
dec
jmp
xor
inc
cmp
add
jecxz
popf
push
fs
sub
repnz
inc
mov
daa
mov
or
out
mov
sub
and
andl
cmp
mov
mov
lock
sub
pushf
cli
mov
into
pushf
out
shl
and
dec
mov
xor
mov
test
sbb
ds
mov
rcl
xlat
notb
push
repz
shl
fsubs
jmp
cmp
mov
inc
push
jp
xchg
mov
and
or
mov
out
jo
data16
cmp
aad
add
inc
iret
icebp
in
pop
push
movl
popl
sarb
jecxz
iret
mov
xor
leave
push
push
inc
sbb
adc
push
fldenv
leave
lret
push
or
push
ljmp
and
xchg
loopne
testb
es
cmpsl
mov
jno
sub
mov
jmp
xchg
subl
aaa
aas
inc
cmp
inc
roll
xchg
jle
fldcw
fnstsw
cltd
sub
pop
mov
adcb
aad
mov
scas
sub
test
jnp
sub
jns
dec
je
add
cli
out
push
mov
dec
incb
sub
in
xor
icebp
sub
and
and
je
and
cli
mov
push
jnp
aas
addr16
ror
pop
stc
shrl
xchg
sub
mov
cmc
repz
mulb
jbe
mov
xor
int
xchg
iret
sbb
leave
call
jp
in
leave
loopne
mov
cmp
lcall
lcall
or
jg
out
push
jnp
std
cmp
cmpsb
ret
push
subb
adc
insb
pop
add
sub
cmp
lret
push
or
add
mov
adc
jmp
push
hlt
pop
andb
ds
lock
lret
jle
cmp
test
pop
pop
dec
loope
aam
lock
jp
adc
shrl
insl
pop
int
inc
and
sub
ljmp
add
daa
fiadds
mov
sti
sbbl
dec
mov
xchg
xchg
mov
adc
cltd
sub
jo
pop
xor
fsts
aas
jl
or
outsb
pop
movsl
cmp
scas
leave
add
or
clc
fstl
pop
vpcmpeqb
mov
and
insl
jmp
jnp
stc
fcomp
in
movb
inc
pop
inc
jnp
cwtl
dec
cmc
mov
fldl
adc
or
adc
xchg
jp
or
aam
mov
sbb
nop
hlt
rcrb
inc
xchg
cmp
cwtl
pop
push
rcrb
shl
test
jno
sub
jp
out
pushf
ljmp
push
out
pop
lcall
lea
adcb
push
mov
cmp
in
pop
int3
or
mov
inc
lret
sub
mov
lock
push
in
add
not
out
jnp
sti
adc
mov
mov
push
sub
ljmp
fs
sbb
and
mov
mov
xchg
movsb
nop
adc
xor
sahf
add
aaa
js
sub
xor
mov
jg
or
xchg
push
mov
jae
shrb
mov
mov
notl
pop
push
out
mov
in
sub
pop
adc
test
mov
stos
fwait
insl
arpl
mov
lods
or
mov
shlb
mov
push
jns
rcrl
sbb
dec
xor
js
and
imul
test
scas
mov
xor
lahf
and
imul
and
mov
cld
ljmp
sbb
cmpsb
mov
shlb
cmpsl
stos
mov
loope
add
add
push
dec
test
jmp
pop
mov
pop
aad
jmp
dec
pop
fisubl
push
icebp
xchg
add
repnz
nop
in
fwait
mov
loop
sub
out
pop
inc
je
add
aam
mov
push
mov
fcomp
nop
fists
jl
push
add
inc
mov
icebp
add
mov
addr16
and
stos
xlat
or
test
arpl
and
stos
cld
push
or
call
into
icebp
jmp
xor
js
mov
lret
rdtsc
inc
cltd
jne
pop
out
incl
jns
pushf
repz
xor
adc
leave
lret
pop
das
test
push
shll
cmpsl
pop
jne
jb
xchg
dec
mov
imul
cmp
scas
pop
cmp
lahf
movl
add
cmc
sar
pop
test
add
inc
das
adc
loopne
jae
iret
aas
fwait
inc
push
jns
dec
js
sbb
xor
pushf
sbb
fbstp
and
cmpsb
js
test
stc
xchg
fildll
scas
repz
leave
sub
rclb
test
je
shrl
or
leave
xchg
std
es
ret
call
adcl
inc
fs
pop
btc
loopne
sub
mov
fisubrl
push
mov
popa
mov
xchg
lret
rcl
rcll
outsl
mov
jecxz
push
sub
scas
xlat
or
icebp
cmpsl
sarl
xor
lahf
pop
mov
pop
add
pop
cmp
mov
xor
fsts
in
jp
daa
pop
and
pop
jge
sbb
mov
adc
jmp
xor
cmp
jle
xchg
fnstcw
mov
lods
daa
fwait
mov
mov
fsub
sbb
fs
lahf
rcrl
loopne
cmp
push
sahf
lock
js
inc
cld
hlt
xchg
lea
inc
int3
jnp
jl
shll
mov
xchg
loop
inc
mov
divb
cld
jne
inc
jp
add
jnp
scas
inc
mov
ds
fdivr
inc
sub
mov
mov
sub
cmc
je,pt
sti
dec
or
jne
push
xor
lcall
dec
lcall
sub
stos
sahf
mov
inc
stos
jle
push
hlt
push
ja
jae
cmc
daa
lods
xchg
pusha
test
inc
aaa
in
or
add
and
mov
inc
test
pop
push
push
jb
aaa
bound
movsl
inc
and
mov
popa
je
gs
inc
insl
loope
inc
pop
lds
insl
jp
sti
or
lods
push
cmp
out
ds
hlt
and
test
sub
xor
push
xchg
rclb
push
fisttpl
inc
mov
inc
push
mov
push
call
in
pop
cmp
cmp
je
into
int
adc
ss
movsb
es
stc
clc
in
hlt
push
xchg
pusha
xchg
aad
mov
orl
call
pop
sbb
jp
cli
inc
push
or
int3
and
repnz
cwtl
adc
ret
ja
add
sub
dec
push
add
add
scas
and
fistpl
popa
push
and
scas
mov
out
jecxz
sbbl
lods
pop
aam
mov
and
mov
push
popa
aam
xor
mov
lds
mov
xchg
push
lods
xor
cmp
lea
leave
sub
ret
adc
inc
nop
add
and
mov
scas
rorb
mov
push
sub
idivl
enter
push
push
and
add
nop
mov
inc
xchg
fcomps
cmp
push
mov
or
scas
xor
mov
sub
dec
xchg
sub
mov
or
sbb
fisubrs
subl
dec
lods
lock
mov
mov
nop
shlb
call
mov
cltd
in
loope
jp
nop
stos
andl
jmp
adc
imul
call
fs
flds
pushf
jbe
aas
jg
in
cld
or
sub
and
jo
or
lret
jne
inc
and
adc
mull
cmp
test
leave
or
idiv
aad
pop
andl
xor
cmp
mov
cwtl
pushf
movsl
cltd
fldcw
mov
loop
mov
ficompl
shll
test
lock
bound
sbb
xlat
xchg
cmc
xor
pop
pop
push
or
push
jg
push
jo
lahf
popa
adc
mov
push
insl
arpl
push
mov
xchg
push
cmp
xchg
out
inc
sbb
mov
add
xlat
cs
out
mov
add
divl
sar
sbb
cli
and
in
or
std
pop
in
push
clc
mov
add
and
fistps
aad
stos
and
int
pushfw
mov
ds
das
leave
std
shr
rep
outsl
fldl
xchg
roll
push
and
mov
xchg
mov
add
pop
push
jle
aaa
xchg
pop
xchg
leave
or
sti
dec
mov
mov
in
push
mov
sqrtps
pushf
xchg
std
sti
mov
sbb
sarb
test
sbb
stos
adc
jb
mov
add
and
cmp
cld
pushf
bound
adc
out
xor
imul
int3
mov
test
mov
neg
cs
dec
popf
pop
mov
add
or
mov
mov
mov
cmp
xor
mov
test
sbb
out
loopne
fildl
inc
xor
sti
insl
clc
test
or
xchg
add
or
jmp
rolb
shl
add
sbbb
sbb
sbb
sbb
pop
xchg
jle
arpl
xor
outsb
fs
imul
sbb
pop
out
cmp
mov
inc
imul
inc
xor
outsb
cmc
mov
cwtl
jno
mov
xlat
add
fidivrs
or
pop
sub
mov
addr16
rolb
dec
loope
mov
mov
xchg
jb
pop
lea
jnp
sahf
mov
popa
test
cli
mov
subb
cld
pop
lret
adc
dec
nop
mov
test
outsl
in
ds
dec
sub
mov
sbb
lds
ljmp
push
ficoms
xor
xchg
sar
orb
out
xor
setb
pop
adc
out
outsb
xchg
movsb
sti
cmp
orl
dec
xor
lret
cmp
mov
sbb
shll
inc
push
dec
pop
stos
inc
popa
scas
sahf
int
scas
or
sub
push
cli
add
or
movsl
rorb
push
dec
mov
sti
or
sbb
mov
cmpsl
rcl
mov
mov
xchg
les
sbb
mov
dec
lock
jo
push
sti
or
pop
push
mov
in
in
idivl
push
jo
repz
clc
into
jge
ret
xor
popa
mov
lods
push
sub
mov
mov
push
imul
lea
repnz
mov
lods
dec
js
imul
jge
pop
bound
inc
mov
sub
push
inc
sub
decl
lret
sub
out
jge
mov
into
mov
xor
imul
dec
add
push
out
jbe
imul
mov
incb
loope
mov
mov
inc
or
push
fwait
notb
jno
js
lret
sbb
idiv
ljmp
negl
sub
aam
pop
cvttps2pi
ret
loope
subl
mov
cmp
test
test
xor
jge
movsl
dec
sbb
adc
shrl
mov
stos
cs
mov
mov
data16
jbe
jl
test
lsl
lods
sbb
jmp
adc
mov
repz
dec
testb
dec
pushf
xchg
clc
scas
sbb
scas
dec
xlat
sarl
jge
inc
mov
inc
xchg
cmpsl
cmc
sub
lcall
jle
cmp
jge
lock
decl
sbbb
mov
and
push
jno
icebp
pushf
je
aam
out
dec
mov
mov
cli
sti
in
scas
and
out
jo
and
nop
and
push
stos
jnp
ss
pop
jae
std
jle
loopne
lods
enter
jp
push
push
rorb
out
out
outsb
nop
fsubrl
lahf
push
iret
pop
xor
jg
fcomps
jb
cs
mov
data16
push
stos
xchg
stos
mov
hlt
push
jg
jns
mov
jge
xor
sub
cmpsl
les
and
push
testl
inc
sub
push
push
mov
imul
ljmp
cli
push
fstp
inc
adc
ret
push
mov
scas
test
aas
insb
inc
std
xchg
pop
push
jne
xor
mov
cltd
lret
mov
insb
xor
frstor
les
sbb
lock
sbb
imul
xlat
sar
shrl
and
je
int3
outsl
mov
add
push
out
into
shrl
jnp
ret
adc
stos
adc
jb
dec
mov
push
pop
jp
pop
xchg
or
jmp
adc
mov
aaa
mov
test
mov
pushf
cmc
je
lret
movhps
cmp
xor
xor
jle
pusha
and
mov
in
dec
aad
call
add
out
shlb
xor
push
jns
xor
cmp
rorl
std
add
cmc
stos
es
call
fld
scas
push
lock
mov
sbb
imull
in
sub
loopne
xor
inc
pusha
loope
mov
push
cmp
xchg
cs
and
cmc
dec
addl
fldl2e
mov
je
out
mov
mov
imul
repnz
mov
cmp
aaa
jno
nop
dec
js
movsb
jg
push
rolb
out
repz
push
aad
mov
sub
into
mov
dec
mov
aaa
xor
mov
jmp
cmp
adc
push
subl
push
loope
clc
cwtl
mov
pop
push
and
bound
push
loope
mov
push
mov
cmpb
pop
cmc
mov
add
fbstp
in
dec
scas
neg
xchg
mov
sub
outsl
aaa
cmp
clc
add
ljmp
xor
mov
lods
xchg
xor
push
repz
cmpl
outsb
jecxz
xor
cwtl
push
mov
sbb
imul
dec
sbb
mov
jbe
incb
jae
jl
sahf
pop
sbb
hlt
lcall
das
xchg
xlat
and
inc
js
jge
or
insb
scas
jg
mov
lret
xor
loop
rcrb
adc
into
cld
orl
sub
stos
test
orl
inc
sbbb
imul
sbb
mov
out
pop
lret
lds
into
aad
test
data16
and
faddl
add
out
cs
das
mov
cmpb
sahf
or
in
cmp
mov
int3
loop
es
adc
pop
mov
ret
cmp
ret
scas
cltd
das
adc
jmp
push
das
sbb
rolb
std
xchg
add
fs
mov
hlt
and
dec
lds
subl
cmpsb
ljmp
in
cmp
xchg
sub
testl
in
xchg
lods
sbb
and
xchg
in
icebp
hlt
inc
std
stc
test
gs
scas
xchg
mov
xor
dec
icebp
arpl
adc
clc
test
insb
mov
aas
inc
mov
mov
push
loope
pop
mov
pop
dec
mov
fadds
pop
ret
push
dec
adc
adc
test
out
push
repz
dec
push
or
inc
add
pusha
in
xchg
adc
push
dec
aaa
cmp
cmpsl
adc
xor
int3
sub
stc
jecxz
add
idivb
add
fsubr
sbb
jg
test
push
enter
dec
mov
push
mov
xchg
inc
mov
repnz
add
dec
dec
stos
ljmp
pop
xchg
add
pushf
imull
sbb
stos
cmp
scas
sarb
andl
adc
sahf
int3
mov
pop
jp
mov
in
fdivs
mov
adc
daa
ss
out
lret
dec
push
bound
out
push
aad
inc
cmc
test
mov
nop
xchg
push
loop
lretw
cmp
inc
jp
push
inc
js
fdivl
lcall
lcall
jns
mov
mov
adc
jecxz
imul
ljmp
push
imulb
fidivrs
jnp
push
mov
pop
dec
mov
lods
movsb
repz
inc
xchg
dec
aas
or
fimuls
push
xlat
inc
fsubrp
xor
sbbl
fnstcw
js
sbb
add
mov
xchg
adc
pop
xchg
sub
fs
xchg
mov
mov
filds
pop
push
dec
out
icebp
add
stc
scas
add
mov
inc
jle
push
sbb
addr16
loope
sbb
movl
imul
daa
and
inc
pop
cli
mov
leave
add
jg
and
pop
xchg
or
arpl
inc
sbb
sbb
sub
sbb
daa
push
xor
cmp
popf
frstor
mov
mov
cmpsl
stos
and
arpl
push
test
addr16
jno
orb
loopne
stos
jmp
rcr
mov
addl
pop
shlb
pop
sub
adc
daa
jg
and
push
cld
mov
test
rorl
mov
dec
lods
int3
inc
nop
dec
sbb
add
jns
movsl
mov
in
sub
fists
add
mov
ds
mov
mov
mov
push
adcb
sbb
sub
cmpsl
rclb
sub
aas
or
sub
dec
xlat
imul
out
pop
cli
dec
xchg
mov
jno
mov
xchg
xchg
lahf
mov
inc
data16
into
std
mov
sbb
or
imul
pop
divl
xor
cmpsl
aad
out
and
cmpsb
rcr
mull
or
lods
xor
lea
lret
cld
and
cmpsb
mov
mov
ss
jg
push
stos
repz
add
push
popa
mov
push
xlat
pop
rorb
movsb
inc
data16
or
idivl
nop
xchg
jnp
cld
nop
dec
sbb
cmp
and
xchg
push
mov
mov
enter
push
and
sbb
inc
scas
mov
cmp
pop
pop
mov
scas
test
test
push
mov
call
xchg
sub
sbb
push
movsl
gs
out
testb
jns
mov
cmc
cld
icebp
test
icebp
mov
sub
ds
aas
bound
push
mov
inc
cmp
cmp
mov
stc
mov
jnp
xchg
hlt
ljmp
push
inc
mov
adc
or
sbb
in
fcoms
jno
jle
cwtl
rorb
push
jge
or
xchg
ljmp
pop
mov
icebp
mov
adc
mov
mov
fwait
push
es
out
out
inc
adc
pushf
test
cmp
outsb
jecxz
lds
data16
fldcw
and
jbe
mov
push
fs
push
movsl
pop
add
sub
cmpsl
cmp
add
test
cmp
dec
push
push
pop
ljmp
xor
les
jg
cmpsl
xchg
pop
inc
jl
mov
int3
aaa
jp
xchg
inc
aaa
cltd
xchg
ret
pop
out
repz
jecxz
push
insb
test
inc
mov
cmc
push
mov
mov
frstor
pop
test
dec
pop
dec
push
int3
pop
sbb
stc
fiaddl
push
pop
xor
clc
mov
jge
rorb
testl
test
sbb
cmpsb
and
aaa
mov
xchg
add
ret
sbbl
dec
jmp
hlt
clc
jbe
ja
mov
mov
aam
mov
addb
cmpsb
push
push
push
imul
xlat
adc
sti
or
int3
fsubp
adc
int3
cltd
jne
adc
enter
cmc
fstpt
lret
pop
mov
lahf
sub
int3
mov
mov
dec
sub
ljmp
in
sub
mov
imull
mov
lds
mov
out
js
or
mov
push
xchg
idivb
popa
loope
dec
or
mov
mov
das
gs
xor
push
mov
in
pop
push
and
sub
jne
jle
test
fmull
lock
pop
cmp
jnp
pop
loope
push
sti
in
cmp
outsl
imull
pop
adc
jge
jge
popf
and
xor
fwait
std
adc
out
fdivrs
int
and
mov
stc
inc
or
xor
rorb
mov
int3
sub
xchg
cmp
js
cld
xor
xor
lcall
hlt
popf
test
inc
and
add
jb
adc
sbb
js
xchg
movsb
fistpl
mov
jp
xor
jp
adc
pop
in
movb
mov
lds
imul
mov
iret
add
mov
fs
push
enter
mov
daa
out
and
cmpsb
sahf
sub
sbb
popf
out
or
sub
icebp
dec
pop
inc
cmp
loop
es
push
jmp
xor
xor
or
aad
stos
sbb
pop
repnz
std
loop
jne
test
cmp
xor
loop
mov
xchg
push
call
sti
add
xor
mov
lea
add
mov
pop
lods
es
out
sbb
pop
loopne
subl
cmp
jb
jns
in
sbb
or
adc
xlat
icebp
cmp
or
out
lahf
mov
mov
inc
mov
add
mov
movsb
cmpsb
data16
jmp
sbb
test
ljmp
or
fdivr
int
cmpsl
mov
mov
loopne
jg
jo
and
sub
fcmovnb
pusha
pop
cmpb
hlt
loop
fnstenv
dec
and
xchg
mov
add
mov
loopne
mov
inc
gs
adc
test
push
sti
xor
repnz
cld
mov
mov
cltd
sti
mov
outsl
add
and
movsl
into
xor
dec
or
in
fistl
out
mov
stos
mov
inc
mov
mov
cmp
dec
sub
mov
mov
mov
cld
push
xchg
in
mov
cmp
mov
dec
jno
movsl
call
mov
std
sbb
mov
lods
xor
xchg
inc
idivl
int
cwtl
jno
push
push
adc
das
stos
rcr
sbb
pop
pop
mov
push
xchg
movsb
stc
cwtl
fstps
pop
push
sub
inc
in
mov
add
stc
jecxz
pop
dec
enter
xchg
cmp
mov
gs
in
sahf
xchg
adc
movsl
lcall
movsl
jmp
cmpsb
add
or
and
jmp
pop
and
rorl
bound
or
sahf
or
mov
or
div
clc
mov
ret
sahf
jbe
sbb
pop
icebp
pop
lret
arpl
add
or
in
sub
pop
fwait
enter
movb
dec
loopne
sub
lcall
addr16
addr16
mov
pop
mov
inc
sbb
cmp
cs
jle
or
incl
or
push
jo
mov
mov
mov
cmp
adc
movsb
outsb
in
or
in
cmp
lods
inc
je
mov
mov
xor
pop
xchg
rcrb
dec
pop
rcl
fdivrs
jg
shll
dec
les
add
pop
rcrb
js
daa
rorb
xchg
mov
cmp
outsl
mov
fbld
xchg
add
mov
adc
xchg
jns
xchg
push
cmp
imul
fwait
and
ffree
push
push
ss
scas
test
jecxz
daa
leave
dec
mov
adc
mov
dec
testb
push
mov
adc
dec
xchg
adc
jecxz
push
ljmp
adc
and
aam
sbb
push
data16
cmpsb
jl
adc
enter
outsl
add
fstl
movsb
and
and
sbb
xlat
scas
dec
test
sti
insl
adc
jecxz
xor
jno
mov
or
dec
mov
repz
jle
jmp
je
mov
loopne
add
aam
push
loop
pop
fcomps
sahf
mov
mov
jmp
ljmp
pop
inc
lea
dec
inc
mov
roll
and
loope
pop
push
jmp
addr16
or
jecxz
jb
lahf
dec
rol
xchg
sbb
js
mov
js
lods
or
call
loop
repnz
xor
es
cmpsb
xchg
mov
mov
add
in
push
fdivs
fbstp
pusha
into
push
repz
les
nop
es
out
xor
mull
sub
adc
sub
pop
mov
sbb
xchg
or
shr
jbe
imul
mov
pusha
adc
mov
cli
mov
icebp
lea
dec
xor
lock
jp
aam
or
pop
jecxz
ja
push
jmp
popf
xchg
push
or
ret
push
sbb
or
pop
jge
jp
mov
lock
es
fs
aad
mov
jl
cmp
sbb
adc
lock
into
jb
cmpsl
inc
out
cmp
cli
sbb
add
mov
lods
fistl
and
jo
inc
ds
inc
mov
pop
mov
jo
mov
inc
cmp
jno
inc
xchg
fisttps
addb
sahf
add
cltd
sbb
nop
jb
in
inc
fsubrl
push
stc
pop
movl
mov
rorl
fwait
sarb
mov
adcl
insl
sub
or
fistpll
and
into
inc
inc
jae
add
mov
popa
xor
jl
sub
push
sbb
add
daa
mov
in
lret
icebp
fcmovb
mov
dec
dec
add
and
je
lds
pop
and
pop
cmp
jg
inc
cmp
cmp
pusha
rcll
inc
inc
sub
dec
or
mov
and
mov
jg
sbb
xchg
out
in
ss
stos
cmp
xchg
jbe
lret
fiadds
xchg
into
insb
ret
sar
mov
mov
mov
dec
test
pop
jecxz
shr
or
sbbb
in
std
std
lea
inc
test
push
scas
adc
pop
nop
xor
imul
test
into
push
sub
cmpsb
xor
jl
rcrb
mov
or
stos
push
lock
sub
test
ret
fidivrl
add
in
inc
cmpsl
dec
enter
clc
jbe
mov
outsb
subb
sbb
test
sahf
push
ret
mov
xchg
push
loopne
dec
jge
xchg
push
lea
jns
mov
pusha
ficoms
add
sub
mov
mov
aad
jcxz
adc
es
gs
outsl
or
ljmp
mov
inc
aad
arpl
push
cwtl
cmp
test
sub
out
clc
roll
pop
repnz
jle
dec
lods
mov
adc
aam
add
and
adc
dec
and
and
cmp
mov
push
mov
in
fwait
xor
cmp
push
stc
and
stc
aaa
pop
gs
add
xchg
fucomp
mov
lret
push
sbb
fstl
xor
xor
mov
jecxz
jg
sbb
jns
es
sbb
stos
lcall
je
mov
test
out
fwait
data16
mov
ret
testb
jl
cmc
dec
sahf
js
test
inc
push
jno
mov
mov
fldcw
inc
jge
imul
cld
addr16
jmp
or
out
js
mov
adc
gs
fstpt
adc
or
hlt
test
push
scas
aaa
pop
and
pop
cmpsb
pop
xor
rcll
pop
adc
jecxz
push
adc
lcall
shlb
push
inc
sbbb
jb
mov
mov
and
in
sbb
es
fwait
xor
push
out
in
daa
movsb
sub
aas
cmp
and
fnstsw
dec
inc
testb
lock
gs
xor
inc
pop
or
or
cmpsl
out
lahf
in
pop
inc
sbb
jp
mov
fdivs
adc
jae
fdivl
icebp
push
mov
in
mov
or
pop
in
inc
push
xlat
adc
and
movsl
xor
mov
aam
cmp
fimuls
adc
ret
dec
outsl
mov
push
ja
pop
xor
test
push
jmp
loop
shlb
sbb
xchg
mov
xor
xchg
repz
or
loop
pushf
les
test
andl
divb
sub
cmp
add
sbb
test
mov
mov
jo
cmp
pop
mov
repz
mov
add
pop
mov
mov
aad
lds
add
outsl
jecxz
lods
ret
int3
les
xchg
mov
lcall
cmp
das
xor
lea
shrb
mov
sbb
rclb
inc
addr16
add
xor
out
stos
mov
push
pop
mov
cmp
pop
jo
jno
inc
push
xchg
out
cmpsl
jbe
loopne
cmp
lods
das
sub
dec
mov
sbb
sub
jl
mov
stc
pop
outsl
into
xor
ss
imul
js
inc
sbb
ljmp
orb
hlt
push
sbb
lods
movsb
mov
inc
popa
dec
rorb
sbbb
lock
and
push
adc
xchg
data16
or
dec
out
in
lret
push
ret
pop
dec
aaa
sbb
push
fisubrs
out
daa
push
lcall
xchg
clc
push
mov
jg
test
mov
repnz
cmp
adc
test
sub
dec
mov
loop
imul
cmc
test
mov
int3
mov
cs
mov
lods
ds
jnp
outsl
mov
jmp
add
sub
shrb
add
sbb
lds
shlb
imul
sub
lret
mov
lcall
imul
lods
shrl
out
fs
sub
mov
das
sbb
cmpsb
xchg
popf
mov
mov
jno
cwtl
add
lds
hlt
mov
cld
add
das
stos
dec
imul
popa
pop
cmp
mov
sbb
inc
dec
cmp
push
xor
popf
or
cmp
addl
rcrl
xchg
lcall
add
mov
repz
addr16
xor
mov
frstor
xchg
push
pop
xor
cmpsb
push
xor
movsb
test
outsl
push
scas
sti
incl
imul
movsb
test
xchg
push
mov
and
xchg
daa
lods
mov
inc
insb
and
aaa
mov
dec
xor
cmp
mov
xchg
sahf
dec
inc
aam
decb
loope
mov
ss
xor
jmp
jbe
out
addb
cli
insl
pop
popf
aam
sti
andb
mov
push
and
ds
pop
or
sub
test
xor
sub
dec
lahf
adc
cmp
pop
dec
dec
jecxz
mov
jg
pop
jno
bound
loope
jle
jo
mov
pop
mov
mov
adc
mov
xorb
sub
pop
jle
xor
adc
mov
cmp
or
negl
sub
and
mov
aaa
mov
push
ds
lods
add
mov
fistps
fcompl
sub
sarb
test
scas
xor
mov
xchg
mov
ja
pop
jno
cmpsb
lahf
add
popf
jno
test
xchg
push
movsb
outsl
mov
mov
std
dec
sbb
outsl
push
xchg
xchg
ss
add
pop
call
jns
inc
fs
sub
xor
cs
cs
nop
xor
xor
popl
dec
sub
je
leave
in
xchg
js
dec
cs
or
out
jnp
jne
fwait
test
push
filds
or
ljmp
jle
sti
loopne
inc
or
cltd
mov
test
or
or
mov
xor
pop
in
call
and
mov
fsts
in
daa
andb
das
lret
adc
mov
sahf
scas
fsub
jo
pushf
jmp
enter
jmp
popf
jp
or
and
mov
sbb
lock
inc
jle
pop
fildl
scas
and
jmp
mov
mov
pusha
push
sbb
outsb
xchg
cmp
fucomip
rcrb
inc
adc
adc
jno
ret
loope
fisttpl
and
aas
test
xor
iret
cmc
loopne
fs
jl
xchg
adc
rcrl
fadds
out
or
and
sbb
notl
shll
cld
popf
xor
sub
jbe
push
enter
rclb
xor
push
nop
stc
mov
and
pop
jno
xlat
dec
aas
push
lcall
repnz
sbb
pushf
push
inc
or
sub
xor
rorb
jnp
add
popf
mov
mov
xor
fstpl
jo
fs
ret
enter
mov
pop
cli
jne
out
int
xchg
inc
push
cmp
es
shl
push
imul
outsl
loopne
mov
xchg
scas
push
inc
inc
pop
mov
lahf
jne
mov
xchg
fdiv
xchg
shll
xchg
aaa
pop
inc
lret
pop
mov
xlat
or
adc
out
sbb
cmp
mov
jle
mov
dec
sbb
sub
aaa
bound
loope
and
pop
mov
sbbb
insb
add
lahf
inc
test
fstl
jno
pushf
cmp
inc
dec
outsl
into
out
orl
cmp
cwtl
in
sti
ljmp
push
lods
push
mov
inc
sub
jp
das
mov
push
outsb
lock
xor
mov
xchg
lret
outsb
aas
outsb
inc
ret
scas
and
mov
add
xchg
pop
imul
loop
mov
xchg
xlat
mov
and
push
add
cld
jbe
mov
test
or
icebp
pop
xor
xlat
clc
bound
push
pusha
push
adc
rcrb
imul
mov
sti
lock
dec
jge
mov
cmp
xchg
rolb
in
mov
jbe
or
lcall
pop
sbb
lret
xor
js
test
ss
ret
xchg
add
ds
and
adc
icebp
jecxz
mov
repz
cs
cmp
push
and
sahf
mov
cmpsl
jbe
mov
repnz
sub
xor
addb
xchg
aas
test
pushf
loop
dec
cmp
mov
test
mov
das
les
pop
xchg
and
shlb
jnp
sub
xchg
sarb
cmp
adc
fistps
ficompl
cmp
testb
dec
xchg
mov
sbb
or
or
lods
xchg
mov
push
ret
xorl
fnstcw
mov
or
mov
xchg
push
insb
push
mov
adc
dec
mov
mov
inc
pop
dec
push
cmp
push
add
pop
push
scas
xor
jg
xor
ret
dec
pusha
cmc
push
dec
add
fmull
jb
iret
inc
sbb
pop
push
fucomip
divb
enter
addr16
jns
xor
test
adc
ljmp
dec
dec
das
mov
cwtl
push
pop
or
dec
push
dec
xor
xor
xor
leave
mov
cmp
sbb
out
xor
dec
sbb
xorb
and
lods
int3
xchg
mov
and
jl
xlat
loope
add
xor
mov
add
movsl
cld
repnz
cld
loopne
push
mov
dec
sbbl
out
imul
cmc
xor
out
dec
ss
xlat
stos
push
add
popf
test
popa
lods
aas
xchg
enter
mov
adc
jle
or
addr16
adc
pusha
sbb
xor
jb
mov
mov
xchg
lods
sub
jge
imul
fisubrs
xor
arpl
jecxz
mov
sbb
popf
cmc
mov
mov
ficoms
adc
nop
aaa
pop
in
sub
mov
stos
sub
pop
rcl
adc
inc
stc
mov
dec
loop
cmp
mov
push
in
or
xchg
jns
scas
sbb
mov
lock
dec
movsl
xchg
clc
push
les
and
mov
adc
pop
cmp
jp
mov
dec
std
jecxz
fisubrs
sti
cld
nop
rcll
or
fchs
test
in
out
push
mov
stos
in
test
imul
jp
pop
repnz
mov
mov
sub
xlat
dec
jmp
icebp
jle
or
and
repz
je
jo
mov
fnsave
cwtl
jbe
sub
daa
negl
hlt
outsl
aam
stos
cmpsb
sbb
lds
mov
sbb
aaa
mov
insb
cmp
cmp
sbb
xor
insl
mov
jmp
inc
adc
cli
cmp
subl
pop
movsb
loopne
push
loope
js
roll
jp
cmp
cmp
and
fs
mov
xlat
out
fs
cmpsl
and
std
cmovbe
push
out
icebp
ja
mov
inc
push
mov
lcall
and
or
rorl
movsb
and
sbb
gs
je
adc
inc
xchg
pop
or
aam
aad
sub
sarb
or
andl
inc
adc
idivl
xchg
mov
cmpsb
insb
out
insb
cli
popf
mov
pushf
icebp
in
adcl
cli
daa
popf
andb
stc
lcall
push
into
or
or
sub
in
daa
dec
ljmp
lret
js
jns
add
fwait
add
or
hlt
lods
mov
mov
mov
cmpb
daa
nop
sbb
je
push
inc
sub
sub
es
gs
stos
jle
insb
mov
add
push
lods
clc
arpl
push
cmpsl
cltd
scas
cld
sbb
push
dec
or
adc
jge
nop
outsb
adc
mov
add
cmp
cs
loop
mov
lcall
ret
cmp
mov
push
data16
clc
xor
mov
es
cmpsb
fs
arpl
jo
pop
mov
mov
test
repnz
in
push
pusha
push
imul
loopne,pt
or
cmc
mov
inc
lods
mov
mov
in
dec
fs
jle
jecxz
cmpsl
add
fisubrl
add
sub
push
int
iret
aas
imul
or
sub
sti
mov
jmp
std
push
pop
ss
dec
std
dec
cmp
or
jbe
faddl
jecxz
jl
sub
and
int3
imul
xor
dec
sti
shrb
xor
bound
push
fld
inc
cld
inc
popf
inc
xchg
jbe
stos
pop
xlat
jb
jmp
inc
jae
sub
push
aad
mov
dec
cmp
jg
jns
mov
aad
dec
sub
push
pop
mov
insl
xchg
and
insb
popf
xlat
push
and
aas
mov
jecxz
inc
ret
push
adc
dec
inc
lea
push
ret
test
push
imul
mov
pop
nop
pop
in
sahf
lret
sub
sbb
sbb
dec
adc
rcll
mov
dec
repnz
jae
lcall
test
pop
stos
sbb
stos
iret
push
pop
data16
xor
or
pusha
mov
xchg
sub
cmp
aaa
add
mov
and
or
push
xlat
aam
das
jne
rcll
rcll
pop
sbb
xchg
cwtl
popf
sub
sbb
mov
out
pop
test
data16
jp
and
lock
xchg
test
repnz
shl
pop
dec
adc
sub
test
cltd
or
lods
loope
fildll
imull
xchg
mov
sub
pop
es
cmp
cmc
push
mov
pop
mov
pushf
cmp
int
sub
mov
outsb
jo
cmp
lret
insl
jo
in
push
in
push
xlat
in
jae
jb
push
mov
sub
cli
addr16
mov
pop
mov
pop
xlat
xchg
mov
mov
mov
lods
mov
cwtl
mov
movsb
call
cmp
stos
enter
push
loopne
movsb
sbb
scas
adc
sahf
scas
cmp
les
ds
decl
inc
pop
fsubrs
in
push
jle
mov
jecxz
mov
stos
mov
insb
pop
mov
push
adc
push
xchg
sub
inc
scas
xchg
jb
jp
inc
push
sbb
sti
pusha
mov
call
dec
add
dec
loopne
lret
data16
gs
aaa
lret
pop
in
std
imul
shll
stc
in
enter
or
lods
sbb
shrl
sbb
loopne
sub
pop
pop
inc
or
jecxz
fstp
sbb
enter
dec
mov
and
lods
rcl
insb
iret
out
xchg
and
push
pop
arpl
push
dec
movsl
aad
or
jne
and
add
xchg
add
adc
push
cmpsb
stos
xchg
sub
dec
jg
cmp
icebp
bound
xchg
scas
fiaddl
mov
ret
int
dec
add
outsb
sub
xor
leave
cwtl
jns
jmp
mov
and
jae
nop
push
mov
cli
inc
fcompl
fnstcw
lods
inc
xlat
push
int3
andb
adc
sahf
fnstsw
sbb
sub
in
in
insb
or
sub
mov
jg
cli
clc
pop
pop
out
mov
sbb
dec
sub
out
sbb
push
jb
mov
test
clc
lods
xor
jle
out
lds
add
push
jge
xor
addr16
dec
and
aas
fs
in
lret
mov
inc
xor
mov
xor
cwtl
mov
enter
xor
roll
ljmp
jecxz
sbb
mov
aas
shll
xchg
popl
cld
jns
adcl
mov
fs
aad
mov
imul
outsl
cmp
cmp
push
cmpsl
cmp
pop
loope
mov
ds
push
inc
cmp
int
data16
add
sahf
or
dec
cld
push
and
jle
xor
scas
push
push
dec
mov
mov
ret
cmpsl
aaa
in
adc
and
ja
pop
add
mov
clc
xor
add
mov
mov
outsb
sbbb
jbe
icebp
fs
mov
and
nop
mov
call
mov
sbb
sub
jnp
gs
cwtl
divl
push
movl
divl
ret
and
pop
loopne
call
lret
fs
in
push
ficoms
pop
push
xor
out
pop
neg
aaa
adc
mov
iret
lds
push
out
fstps
int3
sarb
div
loop
shrl
arpl
daa
ljmp
and
sahf
and
dec
mov
ret
daa
jp
cltd
pop
adc
pop
dec
pop
dec
push
cmp
sub
pop
dec
mov
jo
in
push
repnz
aas
mov
xchg
fcomi
int
xchg
ljmp
add
xlat
xchg
and
pop
pop
mov
or
pop
fldcw
imul
cmp
in
pusha
jne
mov
shll
fidivrl
inc
fs
dec
movsl
mov
lahf
dec
inc
sub
insl
stc
insl
cmpsb
lea
sub
fldl
repnz
dec
pop
fdivrl
inc
iret
cmp
dec
xlat
fs
xor
inc
fstl
enter
ret
dec
call
pop
inc
mov
or
add
cmc
je
push
xchg
ss
loope
push
sarl
or
pop
inc
repnz
lods
ds
push
loop
push
fwait
test
dec
inc
arpl
pop
lods
out
mov
add
test
jb
jb
out
bound
xchg
pop
loop
iret
mov
subl
fistpll
hlt
cli
mov
ret
aam
inc
out
fsts
or
adc
lret
sbb
cwtl
mov
dec
ds
add
push
cmp
inc
inc
negl
jl
rcrb
sahf
lahf
out
into
or
push
repz
les
lret
lods
cmp
cli
or
push
cltd
jns
xlat
mov
in
and
jecxz
jge
leave
jle
mov
mov
pop
push
mov
xchg
inc
fs
arpl
test
push
ljmp
lods
mov
sub
and
nop
and
dec
fdivs
mov
outsl
out
jno
into
jae
cmp
mov
popf
gs
add
lcall
ret
jp
ss
stc
jno
or
int3
lret
or
push
jno
cmpsb
decb
jecxz
mov
sbb
xchg
lahf
pop
test
cltd
inc
mov
xchg
test
push
push
push
pop
xor
loop
cld
xchg
mov
jg
sbb
mov
add
jae
int3
jb
jb
inc
push
xlat
data16
jnp
adc
xchg
mov
lret
iret
dec
xor
js
dec
test
mov
xorb
pop
sbb
cmpsb
xor
sub
pushl
addr16
dec
jge
inc
mov
cmpb
cld
mov
fbld
ss
jo
add
mov
xchg
or
loope
stos
stos
lret
mov
jne
out
sub
shl
xchg
cli
ror
push
and
sbb
push
push
or
imul
pop
xor
adc
mov
sub
ss
or
hlt
stos
cmp
adc
into
pushf
xorb
cltd
inc
es
fcomps
and
fwait
ljmp
inc
fwait
dec
adc
fdivr
xchg
xchg
inc
nop
cmpsb
sahf
mov
mov
je
pop
sahf
test
insb
inc
daa
add
xor
or
jno
push
push
jmp
xchg
xor
lret
xor
in
cmp
fmul
lea
or
mov
fidivrs
imul
iret
adcb
mov
repnz
and
push
fs
xor
ret
ja
xchg
mov
in
and
or
xchg
dec
loopne
inc
out
and
cltd
pop
ss
or
mov
psubb
and
xor
repnz
shr
std
bound
pop
mov
lcall
scas
outsb
ss
inc
add
fstps
aaa
int
or
mov
mov
sbb
jo
push
pusha
mov
mov
sbb
or
in
xchg
mov
jnp
aad
sub
xor
mov
pop
pop
fs
lcall
and
pop
jl
xor
xlat
popl
stc
filds
add
or
jbe
fmuls
insb
jp
movsb
xchg
jo
jo
mov
jle
cmc
dec
cmp
pop
push
sub
dec
push
stos
push
mov
xchg
push
mov
mov
mov
es
pop
fmull
dec
outsl
xchg
js
push
sub
sub
scas
mov
out
leave
mov
aaa
push
cmp
out
xor
stos
jo
xor
sub
call
xchg
pusha
sub
scas
in
jge
pop
xchg
adc
mov
inc
pop
cmpsl
fildl
jae
mov
cmp
ret
cli
mov
cmp
test
in
and
xchg
push
xor
roll
and
dec
adc
stos
int
jb
pop
xor
mov
test
popa
int
dec
test
inc
enter
or
add
inc
div
pop
and
or
xor
lcall
je
jae
out
mov
icebp
or
mov
iret
xor
sti
and
mov
add
push
jne
loopne
loopne
test
mov
cmp
and
movsb
cld
mull
and
sarl
xchg
sub
xor
push
in
out
pusha
adc
fbld
sub
stos
xchg
jb
or
pushf
daa
add
sbb
xor
sub
loop
pop
add
rclb
out
push
out
add
in
cwtl
jmp
jg
adc
sbb
mov
ljmp
mov
push
jnp
sub
mov
or
cld
dec
daa
adc
xor
shll
adc
mov
addr16
jnp
jg
pop
dec
adc
ds
lock
xchg
stc
hlt
js
mov
push
push
rorl
arpl
pop
mov
xchg
mov
xchg
es
shrb
nop
stos
bnd
xor
sbb
ljmp
mov
jg
jo
inc
nop
fsubl
fsubs
xor
cli
js
mov
inc
repz
popa
dec
pop
fisubrs
jno
into
fucomip
adc
int
push
sub
lcall
add
fnstenv
mov
push
cmpsl
push
mov
test
ret
lea
add
or
push
lret
test
push
jle
out
stos
cmpb
xchg
xor
and
aas
pop
jbe
add
je
xchg
sbb
add
mov
pop
cmpsb
xchg
or
mov
scas
repnz
push
mov
xor
jne
xor
stos
sub
sbb
mov
or
push
adc
pop
stos
push
orb
xchg
xchg
pop
movsb
lret
fs
test
add
aad
push
test
popa
mov
dec
push
sti
cmp
xor
xor
mov
push
aaa
push
mov
lock
mov
or
int3
push
xchg
jae
lahf
fstps
andl
jl
add
dec
push
mov
dec
jo
mov
pop
aaa
bound
ljmp
cmpsb
dec
xor
aas
jmp
cmp
loope
or
and
jb
dec
movsl
rclb
mov
sbb
jns
stos
sbbb
dec
cmpb
scas
push
or
aas
jmp
sub
mov
lds
lret
xor
xchg
inc
push
loope
xchg
movsl
xchg
ja
inc
xchg
add
lret
movsb
push
sub
arpl
lea
sub
pushw
xchg
pop
push
mov
dec
and
testl
jns
aam
mov
mov
mov
sub
shrb
mov
arpl
sub
lret
xchg
push
repnz
sbb
not
repnz
orl
inc
js
mov
dec
mov
sbb
sarb
mov
and
test
fcom
mov
mov
mov
jbe
int3
add
lcall
dec
sbb
pop
dec
lods
or
mov
subl
int3
mov
inc
mov
xchg
inc
dec
movsl
mov
mov
das
inc
push
and
xor
jmp
xchg
sub
inc
icebp
rcll
xchg
repz
imul
cmp
or
add
stc
mov
hlt
pop
pop
xor
lret
lods
sbb
popa
xor
mov
sbb
xor
pop
cmpb
dec
imul
and
int3
outsb
add
lret
leave
mov
dec
push
sti
idivb
shlb
gs
or
out
xchg
imul
in
push
xorl
lea
sub
aad
out
sbb
add
and
or
cld
push
into
cmc
ret
push
cmp
and
pop
dec
mov
jb
outsl
jae
xor
add
sub
sbb
pop
scas
or
jle
mov
sarb
mov
lret
lock
pop
mov
xchg
xchg
dec
mov
lods
dec
pop
or
xor
in
dec
fwait
std
imul
dec
int
imul
inc
aad
iret
sbb
and
push
mov
inc
adc
push
int3
push
lods
dec
arpl
testb
sbb
pop
flds
xor
clc
sbb
cltd
and
dec
jne
mov
xor
out
addr16
lcall
jo
mov
mov
repz
out
insl
cmp
jb
inc
sbb
mov
mov
add
clc
fs
mov
sarl
subl
pop
mov
sti
ljmp
lods
insb
inc
or
scas
sbb
mov
sub
roll
outsb
popa
leave
cmp
les
push
data16
inc
loope
pop
lods
popa
out
rclb
and
adc
or
insl
fsubrs
fwait
in
xchg
adc
fisttps
lahf
push
pop
loope
shll
mov
scas
ret
mov
es
xchg
je
icebp
adc
jnp
sbb
fstpt
xchg
repnz
in
cmp
or
mov
mov
push
push
test
loopne
xor
pusha
popf
mov
sub
pop
sub
xchg
or
add
add
bound
and
movsb
stos
insl
xorb
ljmp
outsl
push
stos
repnz
in
in
push
data16
and
adc
sub
jle
aam
cmp
call
filds
xchg
jl
cmp
lret
fucomi
sub
adc
aas
dec
lahf
push
in
pop
mov
dec
andb
mov
xchg
and
mov
push
loopne
loop
int3
and
or
jl
movsb
fdiv
inc
inc
sbb
inc
ret
repnz
adc
add
shrb
cmp
push
mov
lahf
pop
mov
push
stc
lahf
push
rorb
jmp
stc
adc
lea
fidivrl
pop
jo
arpl
repnz
xchg
jne
cmp
jno
push
movl
lcall
aam
fstl
inc
dec
xor
mov
mov
cmp
shlb
stc
inc
adc
inc
mov
int3
icebp
cltd
xchg
sbb
inc
mov
cmp
add
or
xchg
nop
sub
sub
scas
cmpsl
incl
mov
js
jne
jle
sub
cltd
jp
push
dec
test
stc
fwait
ljmp
dec
mov
js
loop
xlat
push
ffree
pop
out
addr16
insb
sbb
mov
push
lods
and
aad
sbbl
insl
inc
shll
and
xchg
xchg
stos
mov
aam
mov
add
xchg
jns
cmc
push
pop
add
dec
ficomps
mov
dec
cmp
lock
inc
jmp
into
movsl
dec
stos
pop
pop
or
loope
fdivrs
adc
clc
adc
lret
mov
jp
movl
cmp
jge
sub
out
jnp
insl
jo
maskmovq
testl
filds
or
pop
sti
mov
lods
adc
mov
xorb
popf
mov
add
inc
sub
lret
leave
cmp
call
lea
hlt
addl
mov
push
enter
cwtl
shlb
fwait
enter
mov
fldt
inc
addr16
sti
in
maxps
lods
push
mov
xor
lcall
mov
dec
call
cmp
xorb
lret
es
in
inc
hlt
sbb
and
stos
nop
shl
cld
xchg
push
sbb
add
dec
dec
psubsw
fidivrl
out
movsb
adc
scas
call
scas
je
fs
xchg
and
lock
push
arpl
lods
movsl
sub
inc
pop
hlt
and
adc
aad
hlt
ja
sub
mov
lds
int3
out
loopne
stc
xchg
ja
mov
inc
push
mov
out
stos
inc
rorl
cs
jbe
aam
push
pop
xchg
test
insl
addr16
or
movsb
and
mov
sub
mov
xchg
out
or
dec
jle
sbb
inc
rcrb
and
mov
mov
sar
xchg
dec
ret
inc
inc
dec
lcall
test
pop
pop
fildll
push
bound
ret
into
cwtl
or
pop
xchg
mov
popl
idiv
and
test
mov
dec
and
enter
mov
mov
inc
mov
jp
clc
sbb
mov
inc
daa
cmova
dec
dec
jns
and
xchg
inc
clc
jno
pop
push
in
dec
pop
inc
push
push
insb
sub
shr
pop
into
ljmp
push
outsb
inc
inc
leave
js
mov
cwtl
jecxz
xor
add
lret
pop
adc
adc
mov
jmp
xchg
imul
incl
andl
cmc
hlt
mov
stc
mov
mov
xchg
das
fstpt
repnz
sub
clc
jg
ret
lock
or
bound
out
mov
jecxz
inc
cmp
pop
popf
cmp
call
aas
sti
add
lods
sbb
icebp
pop
sub
add
lcall
ret
push
push
add
aaa
out
lahf
int3
pop
pop
shr
push
cwtl
addr16
jle
cmp
adc
add
fsubs
adc
xor
add
sbb
fistpll
mov
add
mov
int3
fsubs
rorl
mov
lret
inc
iret
adc
mov
cmpsl
lods
data16
push
xchg
lods
mov
insl
xchg
sub
mov
jmp
fwait
test
movsl
fdivs
xor
jns
xchg
ljmp
add
mov
mov
inc
add
mov
or
mov
pop
inc
jg
arpl
loopne
insb
ret
les
add
dec
sub
or
xchg
pushf
aad
xlat
ss
fisubl
xor
movsb
cmpl
cmp
sub
jge
adc
std
lods
mov
dec
inc
dec
inc
xor
out
mov
jbe
dec
cmp
dec
into
ffreep
iret
jno
orb
xlat
mov
push
pop
ljmp
pop
movsb
xor
adc
xchg
push
shrb
adc
in
and
mov
cld
sbb
mov
mov
push
ja
adc
in
iret
in
insl
pop
dec
add
mov
lret
mov
cmpsb
push
loop
lds
jno
cmp
shr
xor
push
ja
jnp
imul
ljmp
cmc
jb
mov
imul
je
das
jle
popa
mov
cmp
loop
lods
repz
jle
push
xchg
push
orb
out
lds
shrl
sub
push
mov
inc
inc
std
pop
insl
in
pusha
daa
aaa
rol
nop
nop
inc
stc
test
lods
xor
jo
push
adc
ret
or
std
sub
push
xor
add
loopne
xor
sar
inc
inc
mov
xchg
movsl
popf
idiv
or
cmovge
lds
adcl
sahf
cwtl
or
and
sbb
adc
daa
lock
cmp
ret
mov
cmp
xchg
or
or
adc
xor
pop
push
mov
std
repz
dec
in
data16
and
push
push
mov
call
or
sbb
mov
jmp
insl
jl
stos
ss
scas
jg
outsl
in
cmp
cld
cmovg
push
aaa
rorb
xchg
sub
sbb
add
xor
enter
mov
jle
cmp
cmp
repnz
jle
imul
mov
sti
inc
cmp
stos
cmp
cmp
notl
cli
adc
mov
addr16
or
rorb
stos
outsl
sbb
aam
call
and
xor
jg
fld
nop
mov
inc
pop
sub
jmp
push
or
cwtl
stc
mov
sbb
adc
cltd
into
mov
xlat
rcrl
inc
push
out
jb
iret
adc
in
add
or
into
or
lcall
push
add
mov
aas
mov
jecxz
sbb
xchg
cmp
andb
scas
js
sub
mov
dec
cli
mov
shrb
mov
mov
mov
std
dec
loop
pop
mov
cltd
cmp
cmpsl
mull
imul
test
stos
pop
xchg
pushf
xor
mov
mov
mov
lcall
cmp
adc
push
lcall
push
dec
or
jo
mov
xchg
icebp
nop
stos
mov
xor
scas
ss
sbb
out
xchg
lret
pop
cmp
fsubrs
lock
hlt
dec
ret
xor
sahf
inc
arpl
mov
inc
adc
rorb
xor
push
popf
push
bound
test
shl
ret
dec
and
mov
xor
sub
stos
xchg
pop
mov
xor
adc
gs
iret
lea
frstor
ja
mov
xor
dec
inc
ss
push
mov
mov
sub
data16
lods
xchg
rorb
mov
cltd
fst
roll
inc
inc
aas
leave
xchg
mov
fwait
adc
fidivrl
stos
fdivrs
fucomp
daa
fsts
dec
test
sbb
std
movsb
daa
xchg
mov
and
arpl
mov
inc
enter
adc
popa
jae
inc
jne
mov
xchg
sbb
sti
adc
daa
daa
and
adc
lods
arpl
lret
imul
loop
or
imul
andl
cmp
fsub
xchg
fidivs
mov
xlat
adc
aas
scas
not
jmp
inc
in
sub
cli
sahf
dec
js
jbe
movsb
sub
mov
outsl
fsubs
push
test
xchg
push
dec
jmp
push
and
cli
dec
rolb
dec
mov
scas
outsb
cli
arpl
cmp
mov
stos
cmp
xchg
add
xchg
mov
rorl
stc
push
mov
stos
nop
bnd
test
mov
dec
fimull
cmp
add
xchg
and
inc
je
int
sub
imul
jnp
cwtl
xchg
in
push
in
mov
je
shl
cmp
popf
or
jns
and
fcmovu
clc
fcmovnbe
cmp
mov
les
xor
dec
mov
repnz
inc
lock
sarl
push
incb
enter
sub
mov
leave
adc
push
in
hlt
pop
and
repnz
mov
repz
jle
sti
lods
gs
and
push
aam
mov
xor
push
test
imul
cmp
ror
adc
jl
mov
mov
and
xlat
xor
jg
or
call
and
inc
and
addr16
push
sub
in
dec
or
push
aam
pop
fmuls
pop
push
push
push
stc
test
pop
mov
dec
dec
lret
loope
movsb
push
jns
and
mov
cmpsl
shlb
mov
popa
int
loopne
sahf
mov
pushf
pop
cmp
jnp
mov
jne
jo
mov
mov
xor
loopne
pusha
inc
xchg
and
dec
loop
testb
xor
or
sub
xlat
sbb
xchg
pop
xchg
rcl
push
push
rcrb
jp
xchg
pop
out
add
xor
mov
sub
and
xor
cmp
pop
or
push
dec
fs
out
out
ljmp
adcl
sbb
scas
cwtl
mov
rorb
mov
test
es
push
jns
mov
in
mov
mov
jo
fwait
cmp
orl
cmp
inc
ja
aas
inc
inc
imul
mov
mov
pop
cltd
mov
dec
clc
add
sub
fwait
sbb
out
fs
ret
cmpsl
repnz
sbb
mov
add
inc
push
xor
xor
je
aaa
sbb
popa
mov
stos
mov
and
mov
xor
into
popf
adc
xchg
jno
sbb
lock
xchg
push
mov
lods
aam
jae
and
xchg
cmp
jle
fsubr
xor
and
jl
fwait
or
in
shll
add
nop
xor
push
and
add
in
ds
and
repz
fnstcw
pop
ja
sbb
imul
scas
in
movsb
cmpl
mov
aas
sub
daa
add
jb
stc
in
push
loop
dec
in
push
xor
ss
ss
xchg
loope
inc
fldl
rolb
daa
fimull
push
sub
mov
push
lret
mov
mov
pop
jb
sub
rcr
add
mov
pop
je
inc
mov
or
daa
xor
scas
gs
xor
mov
jp
dec
add
es
rolb
aad
push
inc
mov
and
adc
idiv
dec
xchg
inc
add
cmp
pushf
push
ljmp
jp
shll
in
inc
adcl
sbb
ds
xchg
cli
call
jae
lahf
pop
sbb
enter
dec
int3
test
push
mov
jne
jl
testb
inc
dec
mov
iretw
dec
data16
sbb
or
fsub
lods
int
jge
insb
fs
out
insl
and
in
movntq
push
or
jmp
push
fcompl
in
and
push
xchg
jnp
inc
inc
inc
cmp
addb
add
inc
scas
add
daa
pop
aam
push
out
jg
jge
jle
mov
inc
clc
xchg
fmulp
push
fwait
jp
cmpl
mov
insb
shl
fisubrs
or
cmpsb
in
insb
jo
pop
add
or
nop
push
repz
fdivs
dec
push
or
sbb
pop
inc
in
insl
inc
inc
mov
ret
jmp
aad
shlb
jg
add
enter
mov
out
adc
cmpb
fwait
iret
mov
sarb
lds
std
aad
in
inc
xchg
pop
rorb
enter
push
rorb
loop
je
sti
jae
insl
adc
and
xchg
add
cld
in
lods
dec
stos
cwtl
pop
inc
enter
or
dec
mov
mov
sub
pop
dec
xchg
in
add
lods
add
popl
imull
test
subl
lds
pop
mov
pusha
int
fucomip
insl
pop
mov
xchg
mov
push
fcomip
cwtl
rol
mov
ss
push
enter
pusha
jmp
xlat
lret
mov
mov
pop
mov
lcall
iret
dec
sbb
add
inc
jg
ss
or
pushf
ds
pop
orb
mov
js
sub
daa
xor
arpl
inc
fstl
mov
xor
jmp
xchg
stos
std
push
add
imul
in
stc
push
and
cmpb
mov
mov
adc
ljmp
out
xor
jg
dec
loop
cmpsl
sub
fneni(8087
mov
sbb
mov
scas
jnp
into
push
rcll
and
or
lahf
mov
aam
mov
clc
movsl
std
jns
outsb
mov
fldl
leave
push
push
in
bound
add
adc
and
inc
sti
mov
xchg
aaa
and
xchg
sbb
mov
fldcw
xchg
xor
push
mov
fistl
and
ret
ret
dec
xor
leave
iret
cltd
imul
pushf
mov
enter
and
cli
test
insb
into
push
xlat
sbb
fisttpll
movsb
fpatan
ret
fnstcw
jp
pop
xor
ret
andb
xchg
push
sbb
fcoms
dec
and
adc
fbstp
pop
mov
clc
pop
push
insl
ss
popa
sbb
xchg
aas
cwtl
dec
cmp
push
dec
cmpb
imul
lcall
inc
sub
loopne
imul
push
lcall
adc
rcl
out
ds
cmp
cmc
fmuls
jbe,pt
cmpsl
std
ret
aad
rcl
ljmp
jbe
scas
cltd
ficoml
or
and
leave
mov
ds
cmpsl
out
nop
mov
mov
dec
cmpsb
push
mov
or
cmp
out
out
push
sbb
bound
movsl
mov
repnz
loop
data16
dec
imul
mov
push
daa
jmp
clc
mov
imul
mov
push
xchg
xor
mov
test
lods
mov
sub
loope
inc
push
xchg
inc
mov
scas
pop
jbe
mov
mov
adc
xchg
inc
lock
add
bound
add
push
rorl
dec
lcall
hlt
stos
inc
lahf
push
adc
push
push
das
or
jmp
push
aaa
cmp
ljmp
enter
xorl
mov
add
jge
jns
les
out
sqrtps
sbb
pusha
mov
push
mov
and
mov
dec
jecxz
repz
add
addr16
adc
dec
testl
fmuls
call
adc
xchg
xlat
fstl
stos
fdivrs
jb
add
or
sbb
push
pop
gs
or
mov
inc
mov
push
rcrb
in
dec
shll
divl
lock
cmpsl
mov
ds
std
xchg
jne
xor
cmp
or
popa
fcoml
xor
push
mov
out
icebp
loope
sbb
adc
mov
or
inc
cmp
push
cwtl
mov
jp
mov
loope
stos
inc
jp
subl
push
aad
les
jg
cmpsl
call
adc
and
mov
pop
and
out
xchg
inc
out
je
lds
out
mov
ljmp
push
mov
or
cwtl
xor
mov
stos
aas
inc
pop
mov
xchg
jge
xchg
pop
stc
xchg
in
daa
or
pop
push
sub
dec
xchg
movsb
pop
xor
dec
sub
bound
mov
jp
inc
or
mov
xchg
subb
and
stos
cld
sarl
arpl
cmp
adc
mov
setnp
mov
iret
mov
cmc
adc
pop
fs
mov
lcall
adc
testb
dec
inc
btr
mov
imul
hlt
cmp
fdivrs
push
in
movsb
mov
inc
dec
jge
mov
int3
int
subl
out
call
aas
aaa
mov
shlb
jae
pushf
mov
mov
pop
pushf
pop
xor
mov
or
movsl
dec
adc
loope
dec
mov
mov
jmp
je
jecxz
dec
scas
dec
cwtl
xor
sub
bound
sub
add
fcomi
adc
aad
pushw
mov
jmp
jnp
scas
pop
fadds
push
sbb
adc
lods
cmp
add
jmp
cmp
push
adc
and
sbb
gs
das
scas
inc
roll
push
sub
out
pop
into
add
std
hlt
jmp
outsl
jmp
pop
jmp
enter
daa
adc
in
sarl
bnd
inc
jp
pop
imul
inc
ret
cmpsl
fsubl
pop
negl
jo
lods
mov
inc
pop
jle
xchg
adc
xor
and
rcrl
rorb
pop
adc
add
or
pop
lock
push
mov
or
mov
pop
test
data16
arpl
mov
pop
or
cmc
ss
lods
icebp
fdiv
pop
jbe
pop
out
lea
cltd
mov
adc
enter
into
jecxz
xchg
orb
and
push
jecxz
lret
shlb
mov
es
pop
iret
andb
aaa
push
imul
or
ja
ja
or
stc
mov
dec
mov
andnps
aad
pop
mov
scas
loope
enter
adc
stos
adcb
xchg
jae
and
inc
js
imul
fadd
in
xor
and
lds
addr16
xchg
les
lds
fsubr
negl
in
sub
lcall
stc
mov
adc
daa
xor
adcb
sbb
xchg
mov
cs
mov
call
jl
sahf
xor
or
xchg
mov
adc
inc
mov
sub
push
scas
sarb
mov
dec
lcall
nop
jle
lahf
adc
push
mov
sahf
pop
pop
dec
and
mov
frstor
cmc
fiadds
jns
loope
sahf
cmpsb
cmc
leave
mov
inc
cld
xchg
jne
mov
adc
inc
insb
cmp
inc
call
pop
sub
mov
pop
jg
cmovae
cmp
adc
lret
gs
mov
cmp
lods
or
daa
xor
or
push
mov
inc
out
add
pop
pop
xchg
fs
scas
mov
xchg
sub
xor
js
jns
repnz
bound
aaa
in
lcall
push
sbb
sbb
imul
mov
sub
rcrb
fimull
lcall
mov
jae
imul
dec
sarb
add
pop
cld
dec
xchg
das
iretw
sbb
pop
sarl
lcall
fs
push
outsb
mov
or
mov
mov
xor
mov
mov
push
popf
cmp
pop
std
sbb
addr16
pop
xlat
xchg
or
pop
fsubrl
mov
stos
lds
cmc
jb
inc
sub
sub
mov
xlat
lds
mov
rolb
jbe
mov
xor
out
clc
mov
mov
jbe
addb
in
jbe
jnp
ret
fs
jb
out
cmp
lds
jmp
pop
jl
mov
dec
test
cld
inc
imul
sbb
rolb
sti
das
fldpi
fwait
jl
int3
mov
popa
sbb
ljmp
cmc
cmp
insl
push
and
jnp
adc
in
fimull
adc
testl
add
jb
cmpsl
jmp
add
js
cmp
lea
sbb
push
clc
cmp
shll
xchg
arpl
xchg
ja
sub
gs
mov
and
xor
cmp
mov
stos
sub
loop
outsb
xchg
test
fcoms
stos
mov
les
lret
add
push
out
inc
mov
pop
jmp
ljmp
sub
and
jmp
add
and
ja
in
inc
outsb
mov
xchg
fidivl
xor
add
vmovddup
fsubl
out
pop
repnz
aad
xor
sbb
xchg
xor
daa
lods
ret
popa
xchg
lret
sbb
movsb
sbb
lea
ss
andl
sub
call
mov
mov
mov
pop
and
xor
sub
sbb
popf
into
or
push
icebp
mov
fisubl
lock
xchg
stos
xchg
push
lods
mov
sbb
std
repnz
ret
xor
aaa
pop
les
clc
mov
jno
pop
xchg
sub
or
cmp
jle
jmp
jb
inc
mov
scas
xor
pop
jp
sub
loop
push
pop
jecxz
push
mov
jmp
fwait
cld
idiv
daa
in
arpl
mov
cld
mov
jo
int3
adc
inc
aaa
mov
pop
pushl
or
test
xorb
and
insl
jecxz
pop
hlt
or
sub
mov
xchg
sarl
cltd
sub
mov
dec
xchg
jbe
shr
rcll
je
inc
mov
sbb
sbb
arpl
jno
lods
push
out
aas
pop
in
sub
dec
icebp
mov
lcall
pop
sbb
lock
xchg
jecxz
jb
psubusb
or
imul
mov
jmp
sbb
fsubrl
xchg
pushf
icebp
dec
or
push
jp
inc
dec
sbb
mov
roll
xchg
adc
or
aad
lcall
pop
xor
lods
xchg
fisttpl
ret
push
lods
xchg
repz
xlat
ficoml
inc
jmp
inc
sbb
in
cmp
dec
into
adc
mov
push
jnp
jo
push
fwait
sbb
xor
jmp
add
enter
out
daa
jbe
pushf
jecxz
mov
aaa
sub
je
pop
and
enter
nop
jmp
cmp
mov
or
and
mov
cwtl
cwtl
mov
outsb
or
hlt
xchg
cmpsl
cltd
mov
addr16
adc
movsl
jmp
or
faddl
aad
scas
sub
jmp
daa
mov
daa
xchg
push
mov
stos
xchg
pop
andb
gs
jg
imul
jg
jg
push
dec
dec
xchg
mov
lods
or
gs
icebp
lods
mov
cmp
dec
inc
ret
mov
mov
xchg
mov
jecxz
xchg
arpl
and
test
inc
cmp
add
cmpsb
bnd
mov
push
ds
sbb
ret
and
fisttps
push
cmp
aas
sub
in
sahf
je
adc
cltd
add
popf
or
jb
sahf
jb
cli
pop
mov
shll
sub
sub
push
cmpsb
lods
into
aaa
adc
and
cmc
push
insb
or
test
or
lea
test
and
adc
xor
icebp
fistpl
iret
notb
aaa
lahf
xor
jle
arpl
sbb
jmp
adc
fildll
je
mov
adc
mov
mov
fsubrs
cli
push
adc
jmp
sbb
jl
cmp
sarl
push
cmpsb
int
jle
fsub
xchg
inc
dec
mov
sub
out
dec
clc
cmp
imul
adc
pop
insl
cmpsl
inc
xchg
pop
mov
add
ljmp
outsl
sub
pop
jbe
cmpsl
xchg
mov
xor
cmpsb
pop
jg
imul
das
cli
push
or
dec
xor
pusha
sbb
test
mulb
add
lret
sub
pushf
mov
sub
mov
sbb
xor
in
mov
mov
and
mov
pop
movsl
popa
and
dec
jo
std
mov
add
mov
cli
jb
cmp
data16
pop
aaa
adc
shll
outsb
aaa
mov
cli
mov
jl
sub
movsb
cwtl
shlb
dec
push
mov
sub
iret
sub
stc
adc
xchg
cmp
xor
fildll
sti
and
jb
div
xor
mov
dec
xchg
out
lret
dec
mov
or
cmpb
push
dec
clc
mov
rolb
push
push
xor
mov
arpl
and
or
fcompl
lret
pop
sahf
daa
jbe
fs
mov
ja
pop
out
mull
lahf
cwtl
push
je
fcoms
scas
outsl
daa
jecxz
repz
jns
or
iret
aam
lods
adc
jns
std
adc
push
je
pop
pop
jl
das
dec
lods
mov
or
movsb
push
sbb
cmp
lods
imul
xor
cmpl
xchg
xchg
cli
mov
cmp
outsl
aaa
inc
js
cmp
dec
fistpl
lret
stos
mov
popf
pop
out
push
sub
pop
filds
div
mov
lea
adc
xor
inc
mov
and
adc
nop
adc
push
jp
mov
roll
inc
imull
push
notb
dec
shl
imul
xchg
add
hlt
jge
imul
rcrb
adc
cmp
pushf
xor
pop
push
jnp
sub
insb
add
jae
hlt
jo
pop
into
and
pusha
jge
dec
xchg
dec
lret
xor
pushf
and
repz
mov
jbe
mov
addl
lods
lret
pushf
mov
fstps
or
aas
aaa
push
test
sbb
movsl
mov
mov
lock
jo
or
ja
dec
shr
sub
pop
mov
les
push
and
ret
pushf
jmp
cmp
sar
std
xchg
insb
or
sbb
jmp
insb
xchg
and
mov
cld
inc
xor
fmul
push
mov
pop
inc
int3
shlb
rcrl
insb
xchg
lahf
es
and
ret
das
push
jnp
push
mov
out
jb
cmpsl
and
in
mov
inc
aaa
subb
clc
push
sti
push
inc
and
insl
sti
mov
adc
jbe
push
mov
push
ficoml
jne
inc
daa
mov
jns
push
shlb
jne
out
ljmp
pusha
je
das
inc
out
xor
fsts
cmp
cmp
push
ret
adc
adc
sbb
push
jnp
pop
pop
adc
pop
lret
mov
daa
out
xchg
pop
jg
out
sbb
and
inc
mov
sarb
or
inc
jp
bswap
or
sub
jmp
add
push
adcb
push
fsubrl
cmpsb
mov
fbstp
movsb
cltd
scas
inc
sub
mov
inc
cmp
sub
xorl
sbb
mov
lods
push
insb
adc
shld
arpl
iret
add
add
fdivr
xchg
push
test
xchg
cld
or
fwait
repz
movsb
xchg
push
sub
pop
movsl
add
xor
test
push
mov
pop
jnp
pop
in
pop
outsb
aas
inc
movsl
lds
inc
jns
hlt
push
icebp
in
imul
adc
inc
jo
ds
lds
fsubl
loope
mov
push
sbb
inc
cmp
lea
add
mov
and
sub
push
mov
pop
fnsave
or
pop
jb
rorb
in
rorb
lds
mov
popf
add
cli
rcrb
loope
test
fnstcw
les
or
cmpsb
xchg
adc
adc
std
ficompl
sub
dec
insl
aam
xchg
dec
push
cmpl
stos
xor
fcoml
mov
icebp
ja
adc
cmp
cmpsl
fs
push
gs
jne
mov
stc
dec
les
jmp
scas
scas
dec
lahf
aaa
ficoml
call
dec
imul
mov
xchg
push
push
sbb
dec
lock
cmc
xor
sbb
inc
test
or
rorl
call
stc
lds
je
aad
stos
adc
int
mov
add
data16
or
clc
fistps
xchg
jo
cmp
ds
mov
outsb
out
rol
inc
mov
cs
push
push
ret
jns
imul
adc
inc
sahf
arpl
int3
divl
jge
scas
jbe
mov
out
rol
add
mov
push
mov
loopne
mov
mov
ds
inc
fsubl
and
hlt
in
xor
clc
fisubrs
or
loop
testb
cltd
lcall
int
push
repnz
leave
xchg
jne
pop
add
push
mov
in
jecxz
call
adc
xor
mov
dec
adc
push
cmp
test
mov
orl
fcmovne
xchg
inc
movb
jl
xchg
and
jecxz
xchg
jle
imul
movsb
jne
or
add
pusha
push
sbb
adc
hlt
dec
psrlw
xor
addb
negl
out
test
jae
pop
jnp
inc
lock
lcall
rolb
adc
and
push
in
jns
or
inc
pop
fbld
std
xchg
fsts
dec
loopne
push
and
dec
pop
andb
das
mov
mov
pop
cs
dec
xor
arpl
stos
jle
push
inc
jecxz
and
dec
pop
xbegin
fisttpll
mov
fidivs
push
sahf
es
lret
aam
in
test
test
call
sub
cltd
mov
repz
push
test
in
push
pop
or
ljmp
jmp
mov
and
sbb
jno
movsb
cmpsb
adc
xchg
fildll
int
push
jmp
sbb
jmp
out
mov
xchg
mov
add
mov
out
insl
mov
mov
and
mov
push
out
ja
fildl
negb
inc
insb
push
bound
cmpsl
sbb
mov
mov
xor
and
movsb
stos
mov
outsl
add
cmc
push
je
mov
outsb
ds
aam
loope
scas
cmp
jbe
bound
insb
mov
xchg
push
cmpl
mov
mov
les
fcmovnu
insb
cmp
mov
add
add
insl
cmpsb
ljmp
daa
mov
das
pop
inc
rcrb
and
sub
mov
data16
imul
test
sub
xchg
mov
jnp
enter
xlat
push
ja
xchg
jl
or
mov
rcl
aaa
outsb
sub
jp
imul
pop
xchg
mov
test
enter
xchg
adc
fdivl
mov
mov
push
mov
clc
or
sub
pop
pop
jne
or
movsl
mov
push
aas
mov
cs
inc
pop
neg
int3
mov
push
xor
mov
fwait
loop
and
jecxz
dec
mov
cld
add
xchg
xorb
cs
push
int
ljmp
lcall
pop
add
push
add
jb
mov
jo
dec
mov
push
sub
lds
mov
jno
xor
push
lods
fsubl
movsb
out
mov
std
xchg
popa
fimuls
gs
nop
mov
ds
xor
pop
pop
adc
sbb
imul
lcall
xchg
inc
or
pushf
scas
push
sub
dec
loop
jmp
movsb
test
and
push
fstpt
and
jne
stos
inc
jmp
dec
push
mov
sub
mov
into
cmc
mov
popa
pusha
adc
cli
or
jbe
xlat
mov
aad
push
adc
push
cmc
jae
mov
fildll
cs
out
arpl
pop
pop
cmp
test
pop
adc
data16
test
dec
dec
push
adc
fucomip
pushf
and
js
xchg
enter
scas
push
inc
inc
push
push
popf
iret
mov
ljmp
inc
xchg
mov
xchg
xor
repz
jmp
into
inc
pop
iret
ret
fwait
cmp
dec
cmp
sbb
mov
pop
jecxz
lret
fdivrl
ds
xor
sarb
pop
out
mov
mov
xchg
cmp
ror
cltd
sti
xor
jae
cmp
xchg
push
lcall
lret
jne
stos
lcall
pop
lods
xchg
add
enter
lea
mov
jne
inc
out
sbb
lock
scas
inc
int3
pop
mov
jnp
inc
iret
xor
push
test
mov
adc
mov
fcoml
and
fdivrs
sarl
and
add
test
xor
es
sbb
xor
iret
ss
pop
add
xchg
xchg
je
and
mov
or
fistl
pop
stos
sub
or
les
and
scas
icebp
sbb
rclb
outsl
mov
movups
es
fucomp
pop
jg
ret
shr
inc
arpl
jp
out
jb
pop
push
or
push
push
ds
addb
xchg
sbb
push
mov
lret
xchg
dec
xor
aad
mov
mov
in
scas
shl
lea
data16
scas
sub
add
sub
mov
dec
out
jae
dec
sbb
ret
insl
lcall
adc
into
mov
mov
jns
or
or
mov
int
outsl
sbb
and
in
mov
mov
push
add
pop
sbb
jp
lret
into
hlt
adc
dec
xor
pop
lods
ja
mov
lock
mov
inc
pop
sub
sti
xchg
jno
and
mov
mov
int3
test
inc
push
push
out
sbb
mov
mov
pop
das
adc
adc
jmp
outsl
xchg
repz
test
lret
lcall
push
lock
push
cmc
mov
mov
jns
lods
xor
ss
lea
sub
add
sub
mov
cmp
add
push
sbb
add
ja
mov
test
rcrb
push
sub
out
fisubrs
xchg
xchg
loop
cwtl
ret
mov
and
rcll
in
push
fcmovnbe
push
pop
mov
int
jno
shlb
jp
movsl
cltd
sti
jno
jmp
sub
testl
mov
loop
xlat
mov
push
hlt
dec
pop
into
lret
or
or
inc
xorb
push
dec
and
push
sub
repnz
cli
lods
mov
or
pop
scas
sbb
loope
cmp
pop
jo
push
lds
mov
pop
lahf
sub
je
je
icebp
push
mov
xchg
and
inc
add
mov
xor
mov
insl
mov
pop
jmp
add
loope
inc
sub
fwait
push
cmpl
pop
mov
pusha
ret
movsb
cmpsl
mov
fstl
int
shl
ja
data16
mov
test
sbb
or
push
scas
popa
mov
lods
outsl
test
outsl
dec
dec
pop
rcrb
or
mov
nop
mov
push
lock
push
lcall
int
bound
inc
sub
xchg
pushf
enter
cmp
pop
xchg
dec
and
and
rclb
add
fisubs
dec
xchg
mull
hlt
insl
lcall
lods
out
cmp
loop
std
sub
inc
ds
inc
dec
push
enter
es
jp
insl
into
out
xchg
xchg
aaa
gs
pop
xchg
and
nop
enter
dec
frstor
fidivrs
insl
lahf
cld
test
push
lcall
pop
sbb
sub
or
dec
sub
mov
xor
xchg
test
ja
and
pop
inc
cld
mull
fucomp
stos
dec
mov
and
es
movsb
push
out
mov
mov
mov
push
lods
fmuls
ds
jns
pop
aad
stos
jg
lods
push
imul
and
xor
mov
fstpl
cmp
sub
jb
pop
sub
cmp
mov
mov
nop
lock
mov
in
inc
jo
push
or
sub
adc
ljmp
aaa
aas
js
leave
or
jle
loope
inc
and
bound
mov
mov
lahf
push
out
and
xor
xchg
in
outsl
iret
cmp
cmp
mov
or
lret
push
push
insl
mov
push
sub
popa
cmpsb
les
pop
and
and
dec
or
and
popf
add
push
mov
ss
cwtl
lret
loope
xor
das
sub
adc
push
loope
fsubl
jb,pn
lret
js
jp
das
stos
sti
in
fldt
lods
adc
mov
rcrb
rcr
adc
nop
push
sub
adc
dec
aad
imul
or
adc
negb
xor
fs
jo
adc
xor
jg
or
jmp
stos
adc
cmp
lock
loope
lea
jbe
pop
popf
mov
mov
and
js
fcoms
push
sti
add
lahf
or
movsl
sbbb
loop
orl
or
dec
pop
pushf
movsb
xchg
daa
lods
inc
xor
add
ret
cmp
test
mov
pushl
ret
push
push
rcrl
pop
jle
das
ficomps
mov
gs
aaa
movsb
les
lret
rcr
and
outsl
sub
push
ss
shll
jecxz
dec
jne
mov
push
adc
inc
inc
push
inc
fldl2t
shlb
xor
scas
cmp
adc
call
pop
outsb
sub
addl
mov
mov
xchg
cwtl
jmp
in
sbb
aas
adc
and
xchg
aaa
push
sbbl
cmp
pop
xor
les
add
inc
into
push
xchg
pop
sub
out
into
movsb
sub
or
lods
daa
outsl
mov
sub
mov
pop
jge
push
addr16
stc
and
repnz
mov
cmc
mov
xchg
cmpsl
sub
add
daa
shrl
aas
xor
fiaddl
mov
dec
push
mov
cmp
notl
sahf
ljmp
fwait
mov
gs
out
dec
sahf
cmp
aad
dec
mov
lock
popa
cmpl
andb
sbb
mov
insb
lea
push
setbe
xor
cmp
dec
test
sbb
inc
sahf
adc
ss
loopne
test
insb
mov
push
pop
lds
add
leave
outsb
jne
into
lods
push
or
in
mov
sbb
pop
dec
mov
pop
or
hlt
loope
outsb
sbb
leave
int
movlps
stos
ds
movsl
pand
mov
nop
pop
sbb
aaa
push
add
add
mov
adc
in
cwtl
repnz
lahf
dec
hlt
movsl
stos
movsb
mov
xchg
scas
mov
movsb
outsb
lret
int3
insb
dec
shlb
stc
leave
out
ss
daa
jge
std
scas
scas
insl
stos
add
out
addr16
add
sub
mov
dec
gs
cmp
pop
jno
or
adc
cld
ret
out
mov
jae
filds
dec
lods
push
ret
dec
and
out
test
out
int3
inc
cmpsb
add
popa
roll
or
xchg
jmp
xchg
out
rorb
pop
aas
test
aam
lods
mov
int
bound
sbb
stos
cmp
mov
popa
das
out
in
sub
cwtl
fadd
adc
lret
xchg
dec
pop
mov
fcompl
cli
sbb
add
push
loopne
jnp
mov
fcom
xchg
jnp
pop
mov
pusha
repnz
push
test
jp
pop
sbb
adc
add
inc
sub
mov
jns
adc
pushf
mov
arpl
sbb
xlat
test
mov
sahf
in
lret
lret
rclb
xor
xor
arpl
adc
jns
jecxz
and
enter
dec
mov
pop
repz
out
xchg
add
fistpl
push
sub
repz
fwait
popa
inc
into
jle
mov
jge
jb
out
popf
mov
xchg
clc
add
push
aas
scas
and
push
jp
das
insb
sub
bound
popf
addl
aas
std
mov
pop
sbb
mov
inc
sbb
lahf
enter
sbb
in
xchg
je
lret
mov
popf
or
jmp
jle
sub
mov
mov
repz
testl
repz
adc
sub
repnz
jecxz
imul
sub
cmpsb
scas
in
clc
ror
into
sbb
stc
sbb
movsl
push
outsb
test
dec
cmpsl
mov
rep
pop
imul
loope
add
pop
scas
pop
jecxz
adcb
out
cmc
stos
or
sub
or
test
loopne
icebp
leave
decl
pop
inc
sbb
jne
ja
lods
scas
push
jge
in
cmp
add
mov
or
mov
adc
xor
das
addb
hlt
or
xchg
popf
sub
cli
loop
and
sti
ficoml
sbb
inc
mov
and
pop
xchg
mov
pop
cmp
mov
push
gs
pop
xchg
xchg
out
mov
aas
adc
ds
sbb
mov
inc
jmp
mov
out
xchg
sbb
imul
push
je
sub
add
jnp
lcall
ds
subl
dec
jns
je
adc
lahf
and
jae
fmull
gs
xor
fmul
daa
or
jbe
iret
cmp
ljmp
stos
sub
pop
push
testb
jbe
add
imul
add
jge
stos
add
xor
mov
mov
jns
sti
jle
pop
xorl
mov
rorl
or
cmp
inc
push
sarl
fnsave
pop
sbb
xor
xchg
loop
loopne
enter
and
lcall
pop
std
lcall
pop
fimull
clc
lahf
jnp
or
jb
fldl
sub
js
addr16
stc
test
ja
mov
ret
or
loopne
subb
fwait
sub
add
pop
or
fmuls
daa
outsl
jle
mov
mov
pop
sub
xor
mov
adc
out
into
repnz
lcall
ljmp
popf
mov
mov
xlat
jg
or
imul
add
push
xchg
sub
inc
ret
divl
repnz
dec
fwait
leave
cmp
xor
jle
outsl
dec
movsl
mov
pop
or
fnstsw
or
xchg
fisttpl
movsb
jle
test
pushf
fs
mov
lahf
xor
xchg
sub
cmp
pusha
sub
jp
pop
insl
inc
inc
ljmp
push
inc
push
push
xchg
pusha
fcoms
push
inc
and
in
out
insb
fisubs
mov
push
loope
imul
xor
mov
sub
jge
fnstsw
mov
inc
mov
aad
sti
sub
cmp
dec
lahf
call
and
std
int3
loopne
sbb
rcll
lret
ret
cs
movsb
mov
jmp
pushf
xchg
lea
lahf
cmp
fsubrp
loopne
outsb
cmp
lret
loope
icebp
or
loope
sbb
ss
imul
sbbb
hlt
nop
shlb
shrl
outsl
inc
scas
push
xor
pop
mov
std
and
imulb
lahf
inc
sbb
xlat
xchg
mov
inc
out
adcb
pop
mov
idiv
jg
ja
call
or
xchg
aad
jle
test
ds
mov
lahf
rcll
in
lods
stos
cmp
inc
mov
dec
mov
pop
imul
divl
push
in
cwtl
cmp
mov
or
push
sbb
iret
inc
shr
in
adc
loope
inc
or
push
cmp
inc
jno
les
sub
fcompl
pop
fdivrs
inc
dec
push
arpl
jge
xchg
sbb
loop
jmp
bound
pop
mov
dec
repz
sub
or
rorl
stos
sarl
xor
addb
push
in
stos
rcrb
push
repz
dec
pop
test
ja
mov
sbb
inc
scas
ret
icebp
mov
outsb
insl
jl
push
repnz
movsb
xacquire
mov
fdivrl
jge
stos
xchg
repz
sbb
or
xchg
add
mov
pop
add
pop
pop
dec
mov
bound
push
ss
xchg
sti
ret
add
enter
stos
cld
lcall
lahf
pop
es
test
xchg
fwait
je
pop
imul
popa
cmpsb
repnz
inc
rcrb
jo
push
test
mov
pop
mov
mov
es
scas
clc
xchg
push
pushf
jb
loop
je
loop
aam
ret
dec
lret
or
xchg
out
fwait
cld
gs
imul
outsl
cmpl
addr16
gs
lret
and
ret
sarb
aaa
xchg
or
lret
inc
cmp
xor
xor
add
shlb
shl
pop
add
xor
pusha
xor
aam
dec
out
jmp
in
fmuls
push
das
cltd
or
fs
mov
mov
stos
rol
daa
negb
xorl
inc
scas
leave
inc
scas
lcall
and
nop
push
clc
push
or
out
idiv
mov
inc
inc
pop
sbb
cmp
xlat
fldcw
xchg
cmpsb
enter
fsubrl
enter
pop
gs
mov
adc
cmc
ret
outsb
jns
dec
mov
pop
dec
dec
test
and
add
sub
adc
sarb
inc
arpl
test
mov
shrb
push
mov
or
mov
aam
push
sub
in
test
sti
loopne
enter
mov
lahf
jmp
or
cld
insl
push
into
je
mov
mov
nop
aam
icebp
imul
je
push
and
push
cli
popa
cmp
inc
rorl
das
cltd
inc
xchg
cltd
inc
fisubl
les
movsl
fs
push
inc
mov
test
pusha
pop
xchg
aaa
in
ret
stos
imulb
push
or
addr16
fiaddl
cs
sahf
insl
jb
mov
inc
add
movsb
cmp
add
aam
sub
and
sbb
and
pop
iret
jp
cmp
addr16
pop
jno
ficoms
or
mov
incb
xor
jae
sbb
cmp
clc
repz
cmp
push
sar
or
stc
call
icebp
xchg
mov
es
inc
dec
loope
push
jae
out
push
jmp
xchg
push
lahf
imul
mov
mov
dec
das
in
cmp
pop
xor
jnp
add
jecxz
cmpsl
cmp
jnp
imul
in
push
and
push
pop
mov
jg
jmp
mov
inc
inc
or
xchg
push
push
addb
cmp
ljmp
pop
sbb
test
mov
inc
movsl
pusha
inc
out
xchg
xor
mov
jnp
mov
push
enter
cmp
push
xchg
out
and
int3
fxch
mov
push
popf
push
stos
shlb
je
aad
aaa
push
aam
cmp
pop
add
pop
xchg
cmp
dec
dec
fnsave
lea
mov
ror
bound
scas
stos
js
push
in
push
sub
test
incb
xor
push
fcoml
out
and
mov
rclb
outsl
or
sub
psubd
loope
xchg
xor
pop
out
insb
inc
mov
ds
mov
cld
aam
fnstcw
inc
test
call
loope
addl
rclb
lock
sub
push
adc
pushf
pusha
inc
pop
arpl
test
mov
subb
jp
xor
in
xchg
and
add
int
and
das
xor
cmpsb
jle
or
pop
or
mov
aam
jl
xor
sub
xlat
dec
jns
ret
pop
cmp
mov
sete
pop
in
xchg
aad
stc
adc
lret
pop
or
icebp
xor
dec
fcoms
imul
test
and
je
push
arpl
adc
pop
push
call
push
jbe
test
xchg
jmp
and
xchg
insb
stos
lock
cli
xchg
js
fstpl
hlt
xchg
std
int3
mov
pop
test
out
insb
sti
call
iret
mov
adc
xor
rorb
and
clc
or
mov
mov
pop
mov
and
inc
sub
addb
pop
mov
cmp
repnz
jo
add
adc
pusha
dec
aaa
leave
data16
push
sbbb
aaa
and
pushf
int
or
sarl
xchg
sub
sbb
cmpsb
inc
mov
cmp
aaa
mov
xor
test
out
lret
dec
xor
ret
sbb
cmp
dec
xchg
jae
jmp
shlb
stos
ja
jecxz
cmp
jecxz
add
repnz
fwait
mov
or
push
pop
inc
mov
xchg
je
sbb
jno
icebp
or
xchg
scas
inc
add
jmp
mov
inc
inc
sbb
loop
mov
mov
adc
add
in
das
mov
fsub
outsb
in
adc
sti
leave
inc
into
stos
xchg
iret
outsl
aaa
mov
sbb
cmc
stos
ja
int3
and
sub
popf
jbe
int
mov
pop
adc
fists
mov
cs
shlb
adc
loop
or
jmp
cmp
xorl
cltd
push
mov
out
xchg
sub
icebp
addr16
adc
xor
popa
test
ret
cmpb
movb
lods
pop
ja
nop
push
dec
or
cmp
fidivs
mov
roll
cmp
test
pop
xor
sbb
shll
pusha
sarb
dec
sarl
or
adc
dec
push
jo
xchg
sti
pop
xchg
test
out
fwait
repnz
out
sub
jg
push
mov
and
lods
fdivs
out
imul
iret
rcll
xor
std
test
cmpsl
sub
inc
pop
jno
jl
outsb
enter
arpl
jge
xor
lods
hlt
rcrb
jg
ljmp
mov
mov
inc
or
not
xor
repz
call
add
pop
cs
mov
mov
ret
subl
repnz
dec
adc
clc
mov
xchg
add
fists
clc
js
in
sub
cmp
in
pop
add
addb
jle
shrl
push
inc
loope
inc
jg
imul
xchg
or
push
cli
dec
push
push
mov
daa
xorb
or
jo
xchg
or
or
data16
sub
sarl
lret
movsb
pop
jb
lcall
inc
in
sahf
iret
push
mov
inc
jl
lds
xchg
add
insb
sbb
lods
mul
aam
cs
and
iret
test
push
mov
mov
mov
pop
mov
mov
popl
sbb
xchg
cmpsl
mov
inc
pop
jno
roll
rorb
mov
mov
pop
push
test
jne
pusha
in
mov
lahf
sarl
and
sbb
mulb
call
inc
pop
and
xor
sub
out
out
fldl
fadd
int
stos
imul
les
aad
xor
push
sbb
adc
rcll
scas
inc
jbe
outsl
rep
jno
lods
push
testb
std
xor
jns
mov
sbb
inc
sbb
rol
loope
xor
jne
pop
icebp
in
ror
cld
repnz
dec
fidivs
sub
sbb
in
andl
adc
inc
es
fmull
adc
je
outsb
mov
aad
cs
outsb
inc
insl
testb
sub
sbb
aaa
pop
popa
cmp
cmp
gs
out
aas
sub
xchg
subl
popa
mov
out
add
dec
and
dec
icebp
xchg
mov
pop
add
daa
mov
cmp
lods
cmp
inc
fadds
mov
pushf
es
rcrl
fsts
jge
cltd
sub
outsl
mov
cld
cmp
push
sti
lea
lea
add
or
sub
les
int3
mov
aas
ja
ljmp
sub
movsl
xor
fucom
jmp
dec
or
sub
push
add
inc
es
repnz
popa
sbb
test
stos
jae
jnp
xorb
inc
cmpsb
adc
mov
add
lcall
repz
xchg
jne
repz
int
jl
cmp
scas
jbe
out
adc
xor
pushf
inc
lock
inc
xor
inc
pop
cmp
pop
cmpsl
cwtl
add
pop
es
jo
fildl
adc
and
enter
mov
stc
lods
cmc
pop
cmpsl
push
test
rcrl
jae
push
repz
jns
fnsave
pop
xor
sbb
ljmp
pop
shl
data16
mov
cltd
add
inc
mov
cmp
xor
pop
fildll
lret
enter
push
lcall
daa
cmp
sub
stc
pop
insb
mov
adc
stc
data16
xor
push
outsb
pop
sub
cld
mov
push
push
add
adc
mov
out
loopne
loop
mov
mov
xor
insl
in
fnsave
pop
pop
in
mov
and
xor
pop
push
xor
mov
mov
cltd
mov
nop
fbld
dec
je
lret
stc
dec
cmpsb
pushf
lcall
pop
xor
inc
mov
inc
cmp
jne
cld
out
pop
adc
call
cs
jnp
push
mov
mov
adc
inc
stos
mov
jmp
enter
mov
aas
stc
movsl
out
js
stc
xchg
decl
adc
test
and
shlb
fwait
add
fs
sti
push
enter
sbb
std
pusha
movsb
iret
lods
ljmp
or
mov
test
and
or
out
in
outsb
dec
and
or
xchg
adc
ljmp
and
mov
sbb
in
push
adc
and
rcrl
dec
fst
mov
sub
popf
shll
dec
shrl
lcall
mov
adcl
xchg
xor
sbb
or
out
dec
jg
add
popf
outsb
cmp
mov
pop
popf
imul
arpl
mov
mov
fmuls
jb
push
or
dec
lret
xchg
out
xor
sbb
push
dec
lock
and
xchg
mov
scas
pop
xchg
xor
je
inc
lahf
jo
icebp
pop
jl
jne
movsb
push
inc
fprem1
xchg
movsl
xchg
jo
mov
mov
push
jne
enter
adc
in
aas
mov
lcall
ret
aaa
xor
mov
and
mov
sti
xor
inc
pop
cmpsb
in
scas
stos
dec
nop
add
cmp
jg
movl
mov
in
xadd
xor
xor
push
inc
ljmp
in
cmp
dec
inc
jne
jae
xchg
jo
leave
outsb
cs
les
jmp
dec
les
test
shll
fsubr
mov
dec
dec
add
movsl
inc
fdivl
push
lahf
stos
loop
mov
cmp
scas
mov
inc
pop
movl
add
mov
jae
popf
sbb
cmc
sbb
fists
ss
mov
xor
clc
aas
sbb
pop
leave
ret
enter
mov
insl
xchg
dec
test
ljmp
addr16
popf
inc
popa
adc
or
inc
int
push
fistpl
repz
es
in
shrb
xchg
data16
xchg
xor
loope
lea
bound
and
lret
in
push
leave
pop
stos
xchg
clc
inc
dec
imul
and
sub
ret
or
in
cs
sbb
lods
jae
stc
pop
xchg
insl
dec
and
push
repz
cltd
xlat
and
push
jl
jmp
cli
push
mov
inc
sbb
or
jecxz
lods
push
sbb
pop
repz
out
lock
add
lods
cmp
aaa
lret
inc
mov
adc
imul
mov
jg
in
add
sub
js
sahf
adc
cmp
or
pop
mov
nop
sbb
xor
sbb
stos
lea
push
push
in
and
std
fstp
out
sar
xor
std
std
out
in
push
xchg
mov
inc
mov
icebp
pop
xor
loop
sub
mov
loope
fwait
adc
add
imul
mov
sahf
mov
adc
test
fdivrs
inc
xlat
test
xor
fstpt
mov
push
loope
jle
pop
and
lods
cmp
clc
mov
mov
sub
sub
aad
adc
push
mov
and
add
inc
cmp
imul
cwtl
lret
sub
jle
push
cli
ds
lods
pop
mov
jne
xor
mov
iret
or
bound
or
push
leave
jp,pn
pop
insl
mov
mov
into
movsl
fimuls
or
loop
jecxz
movsl
xor
imul
xor
jb
and
mov
xchg
fists
movsl
pop
jne
sbb
in
lds
inc
jb
ret
movsl
xlat
into
push
jns
fs
fsubrs
fxtract
in
cmc
stos
insl
fwait
arpl
jae
das
push
sbb
push
mov
addl
rclb
xchg
loope
sub
and
scas
scas
xchg
lret
popa
dec
mov
movsl
jnp
les
cltd
ss
lea
in
ja
int3
repnz
repnz
imul
inc
pop
sbbl
nop
cmc
test
add
mov
insl
jmp
call
cld
imul
std
dec
and
jecxz
loopne
mov
in
mov
adcb
add
leave
rorb
and
out
push
or
sbbl
aas
stc
cmp
gs
xchg
dec
icebp
jo
mov
xlat
hlt
daa
inc
fcomps
outsl
jmp
mov
fsubrl
push
inc
lds
pop
push
and
subl
dec
sbb
xor
lods
cmpsl
mov
popf
icebp
push
jae
mov
sbb
icebp
adc
push
adc
mov
rcll
mov
push
ret
into
je
clc
xchg
push
out
loop
dec
mov
inc
lds
rorl
cltd
rcll
adc
xchg
in
xchg
ds
es
repz
push
clc
or
sub
faddl
loopne
or
clc
fsubrl
hlt
shlb
jnp
andps
or
adc
aad
pop
xchg
or
mov
cmp
sahf
out
add
xchg
rclb
xchg
cmc
inc
nop
lods
jb
sarl
jb
js
dec
jmp
xchg
movsl
jp
inc
pusha
add
ss
lea
call
mov
imul
adcl
mov
jp
fcomps
repz
mov
push
xchg
add
push
out
dec
test
into
andl
push
data16
leave
xor
out
jl
lods
dec
aas
sbb
fiadds
in
pop
mov
xchg
fs
sub
sub
sahf
ss
inc
ret
push
and
jno
adc
shll
gs
pusha
mov
xchg
sub
or
xor
mov
rcll
dec
inc
or
sub
mov
test
rolb
fimull
or
mov
inc
les
and
add
leave
or
dec
xor
pop
incl
xor
adc
sub
and
mov
xchg
jb
bound
lcall
loopne
fdiv
push
mov
out
xchg
push
xor
es
sbb
sbb
sbb
mov
pop
lahf
or
in
pop
adc
lcall
es
sbb
movl
lcall
leave
mov
push
popf
lcall
inc
jmp
pushf
leave
dec
leave
cmp
rcll
fbld
mov
shlb
push
mov
js
sbb
int3
mov
mov
gs
push
add
popa
in
jnp
mov
dec
xchg
jg
cmp
test
movsl
mov
cmc
mov
repz
int
or
or
movsb
mov
fisttpl
or
lock
movsb
xchg
loop
jnp
cmpsl
adc
int3
ror
ljmp
aam
add
loop
jo
fprem1
dec
inc
push
lret
nop
out
cld
lcall
lret
push
push
cmp
addb
out
xchg
shl
jle
int
shl
mov
popa
jl
hlt
adc
and
pusha
sub
xchg
and
enter
inc
call
push
popf
push
jae
mov
bound
mov
jbe
mov
push
inc
mov
jecxz
sub
mov
testb
stos
pop
dec
cmp
mov
fstps
in
xchg
adc
je
mov
pusha
and
sbb
mov
loope
pop
mov
jns
sub
lods
and
mov
mov
aas
jle
sti
push
pop
pusha
xchg
mov
shll
rolb
int3
jle
dec
arpl
and
inc
orl
pop
imul
jge
into
dec
xchg
push
cltd
loopne
mov
push
mov
inc
int
mov
lahf
dec
and
mov
fcompl
mov
mov
jg
lods
fmull
icebp
nop
icebp
dec
and
ja
outsb
adc
pop
in
mov
xchg
pop
and
clc
dec
pop
test
inc
imul
ret
sarl
sub
scas
fcomi
sbb
shrb
fldl
fisubrs
inc
imul
cmp
repnz
rolb
lds
jns
loope
js
mov
inc
stc
ljmp
sbb
pop
lahf
mov
add
or
clc
or
xor
jge
mov
xchg
rcll
dec
les
fidivrl
jmp
xchg
cmp
mov
insb
into
adcl
add
mov
rorb
loope
scas
sbb
inc
and
jmp
lods
push
adc
add
nop
pop
mov
sbb
cs
scas
mov
sahf
lcall
repnz
stos
loop
sub
aam
pushf
add
jmp
jecxz
popa
stos
cmp
sbb
adc
enter
dec
testb
xor
pop
mov
je
mov
mov
push
pop
sbb
addb
sub
fsubrl
stc
fnsave
and
inc
lds
sbb
push
cmc
pushf
jp
and
push
jecxz
mov
out
cmpsl
dec
je
shrl
test
sub
jbe
std
pusha
mov
stos
or
xor
cmp
das
lret
mov
insb
loop
xchg
sbb
aaa
xorb
insl
out
outsb
cmp
jge
lahf
fldenv
jp
adc
jo
mov
rclb
ffree
jns
stc
jl
das
test
jecxz
ljmp
sbb
shr
scas
xchg
stos
jge
outsl
jo
loop
sbb
pop
and
push
jmpw
xor
jne
outsl
es
stos
fists
divps
mov
add
cmp
add
out
std
hlt
fiaddl
test
and
add
mov
dec
and
push
xor
std
test
or
fs
insb
imul
push
or
adc
jp
repnz
cmp
ret
pop
inc
push
inc
jnp
mov
mov
in
loope
cmc
mov
sahf
xor
ljmp
mov
dec
xor
daa
xchg
dec
ret
fldl
push
mov
xor
pop
loop
sub
mov
movl
jge
push
xorl
pop
sbb
push
xchg
ficomps
adc
pop
mov
xor
aas
sbb
out
xor
cmp
lock
movsl
sbb
adc
outsb
mov
ljmp
mov
add
cmp
fmull
xchg
idiv
or
and
test
mov
lret
sti
and
mov
cmpsl
ss
aas
pop
mov
stos
rorb
clc
push
sbb
lea
adc
shlb
pop
dec
pop
xor
mov
push
bndstx
add
mov
push
mulb
sbb
sbb
pop
sti
dec
jns
mov
push
imulb
jg
push
sub
mov
fidivl
int
mov
sbb
mov
sub
pop
out
rorb
cwtl
test
jnp
fldln2
cmpsb
pop
sbb
in
mov
repnz
ret
idivb
mov
scas
xor
inc
out
xchg
cmp
or
push
xchg
ds
rcrl
andb
loope
mov
adc
cmp
pusha
or
jbe
std
or
xor
adc
xchg
mov
jle
lahf
movsb
cmpsb
aaa
int3
std
rcll
and
jno
mov
divl
mov
dec
jo
cmp
fistps
pop
and
nop
xchg
or
cmp
or
fstps
dec
add
jecxz
add
mov
or
imul
xlat
cmp
or
test
dec
pop
push
hlt
xchg
insb
add
into
push
sbb
pop
jno
push
or
sbb
mov
mov
out
sbb
in
ds
dec
ss
jne
push
sbb
xchg
mov
movsb
test
mov
fs
lods
into
lret
mov
push
in
stos
rolb
ret
shll
xor
jge
imul
add
sub
mov
add
fdivl
test
movsb
jae
orl
sub
lahf
leave
stos
jo
push
mov
push
or
dec
pop
cmp
into
add
pop
mov
test
mov
enter
dec
cmp
hlt
push
lret
push
xor
mov
scas
ss
outsb
rcll
in
fdivl
std
cld
mov
fadd
mov
sub
pushf
push
lret
scas
mov
addr16
aam
adc
mov
xchg
and
add
jmp
xchg
add
xchg
xchg
ret
movsl
sbb
inc
subb
fstpl
sub
in
les
test
mov
jnp
sbbl
lcall
jno
mov
push
xchg
xchg
jne
inc
pushf
xor
scas
call
sub
sub
dec
test
mov
lea
leave
xchg
movsl
xchg
jecxz
in
or
mov
testb
leave
addl
lds
das
and
pop
lds
xor
cmp
pop
cmp
inc
imul
in
shl
loop
mov
shll
lret
jmp
test
mov
add
hlt
out
or
das
out
xchg
pop
cmp
fnstenv
stos
rcll
mov
imul
sub
add
out
sub
and
or
std
popf
xchg
inc
inc
cmp
push
lds
outsb
lcall
cs
lods
mov
leave
mov
scas
sti
mov
mov
cmp
je
sub
sub
push
dec
pop
dec
into
enter
mov
les
mov
adc
jne
ret
jge
or
rcll
aas
loop
push
movb
mov
jns
pop
mov
pop
adc
loope
mov
outsb
sarl
stc
mov
mov
notb
pop
dec
nop
or
pop
imul
push
call
adc
adc
mov
into
sbb
push
push
daa
mov
sbb
fimuls
jl
ror
sub
sti
jne
mov
mov
ljmp
testl
call
out
or
pusha
imul
les
xor
int3
xchg
aas
pusha
push
lods
lret
int
je
fimuls
inc
mov
mov
pop
ds
sub
sbb
push
cmpsl
jp
inc
cmp
ss
inc
adc
daa
ds
push
mov
popa
push
and
cli
insb
movsb
mov
into
push
hlt
adc
cmp
not
mov
xchg
and
mov
sub
cmp
cs
lcall
push
jnp
cmpsl
or
push
jb
sbb
xor
add
int3
cmp
subb
aad
pop
sbb
mov
mov
sub
fmulp
xchg
ret
jnp
cmp
dec
lret
adc
push
or
jg
mov
or
out
cwtl
daa
mov
rcrb
add
xchg
ljmp
in
mov
aam
rcll
inc
popf
lock
sub
adc
jnp
and
imul
ja
or
or
or
mov
jne
negb
jae
push
enter
pop
sub
sub
es
dec
in
add
mov
sub
ret
jecxz
out
call
nop
sbb
mov
cmc
int
sub
and
sbb
insl
divb
nop
dec
mov
dec
jnp
shlb
test
push
mov
sbb
bound
pop
enter
icebp
adc
push
in
in
or
mov
mov
les
ss
je
ss
and
repnz
sub
fisttps
pop
sub
in
xor
pop
fdivrs
push
call
jb
in
mov
test
xchg
xlat
mov
sbb
mov
sub
fcmovne
or
mov
fnstcw
dec
sub
fidivl
xchg
xchg
sub
in
ror
ljmp
xchg
pop
insl
cmp
js
push
popa
push
ljmp
or
ljmp
mov
jecxz
movsb
lret
cmpsl
out
cmp
pop
nop
xchg
push
test
jns
cwtl
adc
dec
add
lcall
decl
add
xchg
adc
sahf
inc
dec
repz
cmp
jo
pop
repz
test
mov
dec
lea
jne
movsb
or
jno
loope
fcmovb
mov
push
aas
stos
jl
pushf
sbb
mov
iret
hlt
hlt
test
leave
fsts
mov
insl
mov
repnz
jno
rorb
scas
loope
mov
jno
mov
or
mov
adc
and
cmp
push
xor
mov
stos
push
mov
mov
or
outsb
push
add
rcrl
jmp
pop
add
xchg
add
pushf
cld
repnz
cmp
add
imul
pop
adc
test
xchg
int
sti
or
imulb
push
xchg
cld
inc
cmpsl
and
push
fsubp
mov
xchg
sub
js
ja
cmp
pop
ja
mov
sti
cmp
jb
xchg
sub
inc
rcrl
in
dec
jp
dec
imul
pop
aaa
lds
insb
into
mov
sahf
sbb
push
sbb
test
mov
nop
lea
rcrl
add
pop
dec
push
outsb
mov
out
sub
pushf
arpl
mov
lods
mov
dec
xchg
sbb
aaa
fistpl
dec
inc
rclb
push
cmp
scas
leave
out
jge
xchg
lret
add
dec
cmc
sarl
adc
cmp
dec
jmp
mov
fmull
mov
imull
pop
clc
add
shlb
cmc
iret
mov
sbbl
loop
rclb
and
jmp
rclb
adc
mov
clc
int
lea
push
mov
adc
pop
cmpsl
jp
push
add
pop
repz
in
daa
testl
mov
in
enter
and
loop
ss
ror
add
mov
sbb
dec
out
xor
adc
loope
popf
mov
pop
ja
and
lret
loop
mov
and
push
inc
xor
repnz
shlb
repnz
and
push
lret
std
std
daa
push
push
pop
xchg
lret
xchg
cli
xor
fisubs
scas
out
outsl
add
loopne
pop
mov
xchg
insl
inc
mov
adc
das
fstps
jns
shrl
push
sub
adc
and
xchg
xchg
cmpsl
or
movsb
mov
arpl
aas
ja
jae
lds
out
mov
dec
loop
cmp
pop
cltd
pop
and
mov
test
adc
mov
push
mul
test
mov
pushf
push
or
xor
pop
insb
shr
rclb
mov
dec
and
das
lret
div
mov
lds
pop
jmp
fs
mov
loope
inc
inc
and
mov
call
in
mov
xor
bound
shll
cmp
cltd
and
and
adc
adc
movsl
fcoml
inc
loopne
push
mov
fwait
mov
pop
pusha
icebp
adc
mov
and
stos
inc
rcrb
test
pusha
push
pop
pop
repz
mov
add
sub
jb
fiadds
clc
inc
fstps
jmp
clc
pop
lds
sbb
xor
xchg
push
mov
andb
rclb
aaa
sahf
jge
add
jmp
std
hlt
and
ljmp
xchg
aas
shrb
lret
jbe
arpl
in
jb
in
dec
or
ficompl
push
lock
clc
stos
xchg
mov
pop
mov
mov
repnz
jecxz
pop
int3
mov
jle
popa
xchg
fcmovnu
or
ret
stc
pop
lock
in
leave
std
xor
leave
mov
push
push
mov
enter
mov
push
add
out
in
scas
adc
push
and
inc
or
cmpsb
pop
out
xchg
cli
ret
or
sub
cld
ljmp
xchg
and
mov
push
push
cmc
push
cmpsl
push
test
mov
dec
jb
in
fisttpll
test
cmc
sbb
lods
mov
jge
cmp
fdivrl
sti
push
push
push
sbb
cmc
movsb
mov
mov
je
clc
sti
inc
dec
loop
pop
or
in
pop
cs
repnz
push
or
in
xor
push
adc
imul
mov
mov
nop
cwtl
or
stc
shrb
and
cmp
in
push
int3
ret
mov
fwait
lods
xchg
and
mov
pop
jge
data16
push
dec
fs
xor
js
cmc
movsb
fwait
add
add
stc
or
lods
out
stos
sub
pop
adc
jg
dec
cmp
and
daa
sub
push
cmc
addl
pop
push
ljmp
das
sar
mov
outsb
outsb
xchg
xlat
adc
xor
outsl
dec
incb
sbb
loop
pop
imul
xlat
cmp
mov
mov
inc
inc
dec
data16
cli
lds
jne
inc
cmpsb
stc
scas
cmp
adc
sbb
imul
pop
cmp
jl
sub
dec
shlb
jle
aas
mov
je
shlb
or
xchg
out
jae
push
fstpt
mov
loope
cmc
mov
mov
sbb
push
sub
mov
fsub
mov
scas
or
shr
mov
bound
stos
sti
mov
pop
mov
sti
divl
dec
mov
mov
push
lods
fs
mov
dec
test
mov
aaa
out
das
outsb
stos
lods
mov
ds
mov
cwtl
frstor
jb
mov
and
ja
jmp
adc
xor
sub
or
scas
ud0
je
in
mov
mov
inc
sbb
dec
xlat
stos
mov
and
xchg
xchg
mov
push
lret
mov
inc
cld
inc
subb
fildl
mov
mov
or
adcl
test
jnp
fldcw
das
fmull
outsl
fiadds
jae
bound
ret
adc
cmpsl
fadd
aad
mov
add
jne
aaa
jecxz
pop
xor
dec
loop
pop
mov
pop
leave
mov
insl
xor
jl
pop
sarl
sub
jns
pop
mov
jmp
dec
inc
insb
mov
cmc
aas
push
cwtl
repz
cmc
cmp
xchg
sub
test
dec
jl
xchg
insl
pusha
mov
fdivrl
mov
mov
pop
lds
mov
fbstp
icebp
dec
jmp
pop
xor
mov
push
or
dec
jle
mov
jmp
dec
sarb
mov
xchg
push
cmpsb
mov
pop
mov
sub
fistpll
sub
bswap
and
leave
ss
mov
mov
mov
xor
jno
jl
test
xchg
ja
jo
notl
xor
lods
shrb
rorb
push
hlt
enter
les
push
mulb
enter
adc
or
cmp
iret
mov
jg
lock
inc
test
xchg
mov
inc
mov
jg
out
add
pmuludq
daa
jge
jb
push
loopne
push
push
clc
sub
inc
mov
clc
inc
jbe
cmp
loopne
sti
fwait
cmc
sarl
clc
dec
sbb
movsb
arpl
fisubrs
int
push
xor
dec
int
mov
adc
movsb
xchg
ljmp
xchg
fdivr
mov
loopne
gs
dec
fbstp
xchg
aaa
out
leave
js
pop
jmp
sahf
in
aas
popf
bound
rorl
movsl
push
mov
int
adc
cwtl
sub
dec
ds
add
pop
dec
addb
lahf
pushf
shll
jne
call
stos
pop
inc
jp
sbb
cmpl
call
add
in
mov
scas
inc
leave
jecxz
xor
adc
ret
lret
mov
jb
and
insb
sbb
nop
mov
push
push
je
push
out
push
fimuls
dec
insb
lahf
insb
jmp
aaa
jecxz
sub
mov
gs
pop
lds
mov
mov
fcoml
scas
mov
jmp
imul
insb
sub
in
push
adc
gs
cmpsb
daa
js
xchg
dec
fwait
insb
mov
fsubrl
fwait
push
aam
add
fldenv
out
jecxz
in
dec
sub
enter
adc
adc
gs
rorl
jg
sub
jle
xor
addr16
cld
sub
jo
dec
movsl
cmp
int
cmp
sbb
cmpsl
sub
xorl
lahf
mov
pop
mov
test
repz
mov
cltd
scas
stos
fidivrs
dec
sbb
nop
js
stos
in
add
mov
cmpsb
outsb
adc
or
ss
mov
mov
imul
lahf
jne
push
imul
mov
fucomp
push
addl
cld
sahf
pop
xor
sbb
dec
pushf
sub
je
fldenv
adc
or
int3
test
clc
leave
and
shll
pushf
jno
bound
decb
out
xor
loop
and
repz
fwait
mov
stc
fcmovnu
adc
xor
sbb
push
or
fbstp
fcompl
aaa
xor
pop
js
xchg
mov
fwait
xor
cmp
mov
ret
push
xor
sub
or
mov
into
jb
cld
xor
xor
mov
cwtl
sti
mov
das
arpl
mov
int3
jns
sbb
sbb
or
push
dec
test
popf
sub
mov
repnz
and
fwait
jmp
cmc
or
xchg
mov
in
cltd
sub
xchg
mov
enter
inc
pop
xchg
movsb
and
stos
sbbb
incl
ljmp
iret
outsl
mov
mov
jg
pop
das
popf
popa
nop
push
mov
inc
adc
hlt
and
fs
jl
push
std
xlat
jb
sahf
jnp
ficomps
out
jp
add
shrb
dec
out
jmp
stc
test
push
decb
xchg
out
sub
stos
dec
stos
shrl
pop
daa
mov
mov
jecxz
imul
adc
arpl
lcall
inc
dec
ljmp
jns
jp
sti
lods
and
inc
and
in
mov
add
add
or
xor
push
popf
insb
mov
cmp
pop
fwait
jecxz
popf
iret
xor
push
inc
cmpsl
xor
pop
adc
fisubrs
jmp
ret
insb
xor
es
adc
and
mov
xor
pop
xor
mov
int
lock
gs
mov
aam
rolb
jg
jae
and
mov
sub
divb
fldt
or
sbb
push
sub
push
cs
shll
mov
mov
fst
mov
xchg
fwait
into
cmc
sbb
cmp
dec
andb
xor
jp
mov
and
lcall
gs
mov
cld
add
in
stc
andl
jnp
pop
or
inc
xchg
push
lock
mov
mov
insl
jo
sub
xlat
sbb
push
and
jnp
xchg
mov
sub
xor
lods
jg
daa
add
xor
arpl
dec
fwait
mov
nop
mov
cmp
dec
jmp
cmp
rcll
ja
aaa
sahf
cmp
jbe
cld
cwtl
les
popa
xor
push
clc
mov
loope
xchg
sbb
aad
loop
mov
sbb
cmp
mov
adc
sub
mov
push
jb
inc
lods
aad
sbbl
rclb
les
mov
adc
push
add
cmp
mulb
jno
les
loop
in
cltd
push
cmp
inc
out
dec
xchg
lock
jne
fdivrp
sbb
adc
dec
das
xor
movsb
pusha
repz
sub
sub
mov
mov
bound
lods
or
test
repnz
jb
dec
les
ret
mov
or
mov
call
mov
fidivrl
mov
mov
cs
std
lock
sbb
lods
leave
mov
mov
in
js
xor
fnstcw
push
xor
in
push
je
clc
popf
cmp
push
xorl
jnp
push
mov
xor
dec
fdivrp
xchg
dec
mov
sbb
mov
jge
in
dec
inc
pop
dec
pusha
test
pop
pushf
loopne
mov
dec
loop
inc
mov
adc
movsl
and
in
push
scas
or
jp
test
mov
lock
loop
and
dec
xor
into
mov
inc
je
mov
jne
out
fwait
mov
mov
add
cmp
iret
cld
lea
mov
push
repnz
scas
ret
stos
hlt
cltd
dec
mov
cmp
rolb
mov
jecxz
xor
mov
pop
movsl
add
sbb
lret
cmpsb
mov
int3
jle
xor
lods
push
push
leave
fldenv
mov
dec
outsl
inc
adc
dec
arpl
jne
add
nop
adc
pusha
daa
scas
nop
jbe
or
fsubl
mov
xchg
sub
lret
sbb
icebp
push
js
mov
cmpsl
mov
ret
dec
into
pop
mov
xchg
mov
fwait
cmp
mov
lods
shlb
addr16
dec
dec
loope
dec
xchg
and
sahf
pop
dec
sti
std
popa
out
insb
jno
mov
inc
pop
fisubl
add
pop
sti
jbe
lods
adc
xchg
enter
push
gs
enter
xchg
mov
push
push
push
jecxz
arpl
cmp
movsl
dec
cltd
cmpsl
movsb
dec
call
cmp
jns
push
out
cld
inc
cmp
and
sub
in
pop
push
arpl
clc
xchg
jmp
aam
in
xchg
sbb
add
ret
push
mov
sti
mov
xchg
mov
sub
fldl
push
dec
popf
js
mov
jo
and
xlat
cmp
iret
push
sbb
lahf
out
flds
pop
fildll
push
sbb
orb
call
dec
daa
adc
dec
scas
insl
lret
cwtl
cmp
pop
fdivr
and
mov
aaa
aam
and
aad
scas
sub
mov
sub
dec
in
loopne
aad
push
mov
mov
test
mov
xchg
ficompl
jp
in
testb
cmp
andl
add
fwait
call
scas
mov
std
in
add
movsl
pop
jnp
lahf
sub
inc
les
dec
ja
in
add
sarb
leave
dec
push
addr16
inc
stos
popf
aad
in
adc
fiaddl
ja
sub
std
cmc
cld
add
movsb
nop
aam
add
fcmovb
shl
fwait
les
enter
loopne
rclb
imul
fcmovne
pop
mov
fstp
sub
shrl
repnz
mov
mov
leave
sub
scas
mov
je
push
call
ret
aaa
sbbb
pop
mov
xchg
outsb
lahf
aam
dec
addl
insl
out
scas
pop
jmp
loop
cli
loopne
andb
imulb
fs
and
lods
lahf
popf
or
cmp
jno
push
test
sbb
inc
cmp
lret
inc
jp
call
jno
je
add
inc
mov
stos
pop
and
jle
aad
not
movsl
sbb
mov
xchg
inc
fadd
jnp
adcl
fsubl
add
jnp
mov
into
or
out
insl
loope
inc
push
arpl
ret
push
cltd
insl
xor
xchg
mov
test
test
push
or
incl
xchg
and
sub
push
xor
mov
cs
mov
adc
mov
mov
inc
cmpsb
dec
add
inc
adc
jg
lsl
daa
push
fs
jnp
shlb
push
das
andb
adc
rorl
push
xor
imul
movsb
sbb
and
and
cltd
pop
mov
sbb
lods
shr
dec
fs
mov
cmc
and
inc
popf
cmp
lds
rolb
mov
std
jno
cmp
aas
lea
ljmp
lock
int3
insb
pop
pop
in
je
sbb
ret
in
outsb
decb
xor
sbb
int
sbb
dec
or
scas
clc
fldt
jnp
push
pushf
mov
mov
stc
push
mov
and
mov
jmp
fstpt
xchg
lea
push
ja
out
jmp
lock
and
pop
dec
dec
push
inc
cmpsb
test
fwait
dec
dec
push
inc
sahf
test
adc
les
or
xor
repz
fst
xor
daa
jp
mov
push
fwait
or
data16
leave
out
add
add
jg
fimull
xchg
push
and
sbb
popf
aad
inc
adc
pxor
mov
cmp
add
mov
mov
stos
outsb
sub
fdivrp
mov
cs
bound
cmp
ja
xchg
nop
adc
insl
add
xchg
loope
push
or
pusha
adc
call
xor
pop
into
pop
sub
add
sub
push
shrb
or
adc
fcom
pop
aad
fstps
cmpsl
fs
mov
or
ret
mov
xchg
mov
call
lods
jge
or
inc
sbb
cmp
test
into
lds
mov
mov
xor
lods
movd
dec
sub
aaa
add
ficompl
out
int
pop
lods
addr16
xchg
mov
std
xchg
mov
push
cmp
mov
pop
jl
xlat
mov
inc
inc
subl
sbb
cmpsl
lds
in
test
mov
or
addr16
mov
sti
popf
sub
outsb
add
daa
test
xor
mov
sbb
lret
mov
ds
pop
fmulp
test
xchg
adc
inc
gs
mov
xor
imul
out
sub
mov
icebp
adc
call
and
push
adc
dec
jmp
shll
mov
or
test
mov
mov
and
or
adc
test
test
clc
shlb
insb
aam
popa
pop
stc
test
xchg
stos
mov
fiadds
mov
push
mov
out
sbb
mov
cmp
push
repz
lea
loopne
and
xor
add
sub
scas
pop
fsubs
mov
ret
btc
and
test
lcall
cmp
loop
cli
in
xchg
shlb
ret
mov
sbb
mov
pushaw
icebp
adc
pop
outsl
or
je
sarb
xchg
xchg
aam
push
dec
jecxz
aaa
pop
push
repz
in
sub
test
test
mov
mov
xor
int
dec
fs
jle
ss
fwait
jmp
sub
outsb
xchg
ja
mov
in
fimuls
adcb
inc
push
das
mov
hlt
jmp
insb
push
or
faddl
popa
jl
push
fldt
push
lahf
jae
pop
sbb
and
jge
inc
jno
leave
popl
xchg
lock
cli
aad
jnp
jns
push
stos
xchg
leave
test
cmpsb
sub
sti
jg
fsubr
fsub
mov
aas
sbb
fisttpl
scas
sbb
pushf
in
cli
mov
and
jns
mov
pop
imul
and
sbb
lcall
cld
xor
mov
loopne
cmp
arpl
or
mov
mov
cltd
dec
add
jo
cld
pop
dec
ja
das
xlat
add
mov
test
loopne
into
cwtl
pop
arpl
sub
xor
cmpsb
xchg
sbb
scas
shrl
mov
sub
out
lea
scas
or
fwait
pushf
mov
xor
push
bound
or
std
or
adc
icebp
cli
jb
test
gs
outsl
xchg
xchg
repnz
pusha
out
rorb
sahf
adc
in
jb
cs
stos
sahf
stc
push
shrl
push
daa
add
xor
mov
std
push
repz
rorl
or
jb
lods
or
in
xchg
xchg
ret
stc
push
xlat
addb
rcrb
mov
sub
clc
loop
push
repnz
xor
add
icebp
push
lea
dec
sub
or
push
mov
cmp
in
pop
test
push
jge
cwtl
and
arpl
mov
sahf
fnsave
mov
and
add
dec
lea
lcall
lock
inc
add
inc
int3
mov
sub
pop
pop
sahf
outsb
jl
jge
push
add
jmp
inc
dec
dec
fdivs
dec
in
add
mov
cmpsl
fldl
dec
in
or
inc
std
mov
adc
xchg
aaa
add
inc
and
insl
clc
cmc
cs
xchg
dec
incl
pop
mov
gs
mov
sbb
rorb
or
ret
outsb
mov
add
sbb
cmpb
add
lret
sbb
cmp
sbb
cmp
stc
jo
mov
iret
xchg
pop
pop
sub
dec
ds
dec
dec
mov
aaa
mov
jecxz
or
cli
out
loope
iret
mov
and
int3
aam
fstp
popf
cmpb
mov
lcall
xchg
jecxz
sti
sub
and
pop
and
dec
mov
and
test
dec
icebp
push
mov
pop
ljmp
jo
mov
out
lcall
push
mov
nop
pusha
push
xchg
mov
ds
das
add
jmp
lds
outsb
loopne
xchg
push
or
and
data16
fcoms
jo
xlat
xor
pop
cltd
andl
stos
je
fs
sti
rcr
cmp
rcl
adc
orb
pusha
cmpsl
fdivs
das
int3
ss
fneni(8087
xchg
imul
inc
xor
sub
and
orb
test
pop
mov
xchg
xchg
imul
dec
fmul
xchg
mov
call
sub
mov
cs
adc
sbb
or
adc
imul
mov
les
dec
jecxz
xor
cmpsl
mov
lods
mov
cmp
scas
sub
xchg
mov
mov
rolb
fadds
lea
jb
into
out
push
insl
or
push
dec
sahf
imul
cmp
jmp
adc
mov
or
cmpsb
push
es
cmpsl
xor
mov
dec
sbb
test
cmp
out
sub
jbe
in
or
jb,pt
pop
and
ficomps
pmullw
into
div
cmp
inc
lock
insb
in
sbb
mov
push
call
imul
out
lods
xchg
daa
add
inc
dec
das
add
jl
mov
cmp
pop
popa
mov
xchg
lret
imul
ljmp
pusha
loope
mov
lock
ljmp
push
in
adc
xor
popa
insl
decl
inc
std
dec
sti
and
jge
adc
aam
lret
rorl
push
mov
cmp
push
ja
testb
into
andl
cmp
addb
imul
xor
lahf
fsub
lea
imul
cmpsb
pop
dec
xor
jecxz
movsl
ljmp
cmpsb
ficoml
push
sbb
jg
jo
out
xor
repz
or
cwtl
inc
rorl
push
dec
popa
aas
adc
hlt
push
insb
sub
xchg
movsb
mov
sti
sub
push
orb
add
push
jnp
sbb
mov
imul
imul
rol
lds
and
sti
test
adc
jge
imul
ret
add
fwait
test
jbe
mov
sub
mov
into
in
int3
mov
in
fiadds
imul
loopne
xchg
mov
inc
xchg
fwait
mov
mov
pusha
sub
xchg
pop
cld
sar
or
mov
or
push
outsb
push
mov
push
mov
and
and
mov
adc
js
cmc
sbb
int
fnstenv
cmp
mov
aaa
push
insb
rcrl
movsb
out
ret
adc
cwtl
inc
dec
sbb
sbb
out
leave
test
add
repnz
mov
enter
jbe
push
adc
repz
xchg
clc
xchg
stos
call
or
rclb
mov
mov
lods
push
insl
movsb
imul
mov
das
clc
adc
std
dec
and
test
fcompl
clc
cli
stc
outsb
mov
cmc
jecxz
pop
push
imul
xlat
dec
cmp
scas
aam
popf
sub
icebp
push
add
sbb
mov
xlat
stc
pop
sahf
pop
pop
or
fwait
aad
in
aad
cmp
mov
mov
mov
inc
dec
xor
data16
cltd
xchg
jg
sti
xor
jb
js
or
in
push
sub
shrl
inc
xchg
add
mov
dec
mov
and
scas
fisttps
mov
notb
cmp
pop
iret
xor
popa
pop
fisubrs
in
push
push
dec
cmpsb
jbe
jp
pop
es
push
mov
mov
hlt
sbb
pop
xchg
add
pop
mov
adc
xor
dec
pop
push
shrl
sub
push
sbb
mov
push
cs
imul
popaw
pushf
test
arpl
fdivl
gs
cmovnp
roll
mov
xor
imul
div
fsubrl
stc
fwait
in
rolb
fidivrs
mov
int3
lods
arpl
mov
scas
sbb
xor
test
fdiv
mov
lahf
sub
je
in
fucom
fcomps
into
push
sub
fisttps
pushf
int3
repz
es
jne
add
inc
and
mov
test
dec
pop
xor
out
jb
das
add
imul
bound
mov
xor
inc
popa
jl
and
mov
sub
cmp
pop
jne
cwtl
jne
shlb
mov
imul
addr16
jne
pop
pop
xor
pop
movsl
or
in
cmc
jns
or
cmp
mov
sbb
xchg
or
jae
jecxz
inc
push
lds
jo
mov
cld
call
scas
scas
push
mov
bt
hlt
aas
mov
sub
mov
addl
add
jae
xlat
or
fcoml
mov
aas
dec
xor
mov
and
push
xchg
out
sahf
dec
mov
sub
gs
push
adc
lds
inc
fisubs
ficoml
shl
dec
cmp
pushf
pop
xor
aas
inc
xchg
adcb
mov
rcl
ror
lods
xchg
xor
retw
not
jbe
lret
adc
dec
inc
and
jmp
fiaddl
mov
pushf
xchg
mov
and
pop
mov
adc
test
out
mov
dec
pop
dec
mov
and
leave
or
pop
bound
js
cmp
movsl
or
push
imul
or
cwtl
push
imul
cld
jmp
aas
bnd
adc
mov
xchg
in
fisubs
pop
pop
cmp
pop
ljmp
xchg
mov
add
lock
sahf
insb
test
lods
sahf
xchg
xchg
mov
hlt
rcll
jge
testb
jle
popf
mov
insl
cmc
rolb
pop
push
inc
adc
int
out
mov
add
hlt
filds
je
cmpsb
sbb
xchg
out
jle
out
stos
jmp
fnsave
insb
inc
mov
fldl
add
sbb
sub
xor
cltd
mov
sub
xchg
inc
dec
outsl
andb
xchg
xchg
inc
aas
xchg
xchg
add
ss
push
mov
fwait
test
push
pop
inc
pop
in
mov
xlat
dec
movsl
push
xchg
hlt
inc
pop
jp
je
fwait
or
and
int3
sub
pop
add
scas
adc
pop
sub
cld
and
fucomp
inc
mov
and
frstor
push
jp
test
outsb
rcrl
cmpsb
and
call
xchg
icebp
pop
push
dec
mov
sub
daa
adc
jp
push
leave
sbb
dec
clc
das
sbb
add
inc
xor
mov
mov
jns
push
sbb
mov
xor
dec
nop
pop
aad
pusha
jns
fdivs
lea
pop
mov
rcll
repnz
in
pushf
cld
sbb
je
fiadds
nop
dec
adc
mov
popl
adc
xchg
jp
mov
mov
nop
jne
cmc
ss
add
fiaddl
stos
call
cmp
push
fldl
cmp
mov
in
cwtl
icebp
sub
outsl
pusha
sahf
pop
xchg
aas
imul
and
test
aam
mov
xchg
out
mov
xor
leave
jno
and
mov
sub
mov
je
int3
dec
jg
dec
push
pop
lret
in
mov
xchg
dec
imul
sbb
js
popa
inc
aad
jo
push
push
repz
mov
hlt
lods
jno
mov
fwait
xchg
test
fs
or
mov
jno
scas
repz
jbe
std
xchg
lods
xor
out
dec
pop
jmp
scas
insl
add
cmp
sbb
lret
clc
repz
jge
pusha
pop
and
lahf
mov
mov
mov
or
outsl
sub
or
ss
adc
xorb
je
adc
test
xchg
cltd
hlt
or
jne
test
adc
lret
ss
pop
mov
cmp
jl
mov
pusha
enter
add
inc
xchg
xchg
sub
sbb
jg
sub
cmpsb
bnd
mov
call
stc
sbb
push
mov
cli
xchg
repz
mov
push
mov
jecxz
add
push
lds
movd
push
mov
cmpsl
and
loopne
push
sub
popf
adc
fisubrs
pop
mov
test
fcmovnbe
iret
test
icebp
rol
and
int
ds
push
outsb
mov
imul
sbb
and
mov
in
mov
cmp
add
clc
bound
pushf
inc
mov
rclb
dec
lret
fwait
xor
jg
mov
jmp
adc
add
test
enter
ret
mov
mov
xchg
leave
or
add
pop
pop
and
mov
fs
or
dec
mov
testl
pop
jno
sbb
gs
into
mov
decb
lea
lret
scas
cli
imul
and
cmp
int3
pop
xor
scas
das
cmp
int
inc
gs
jmp
loop
icebp
and
push
das
jns
pop
cltd
cmp
add
stos
inc
fcoms
fcoml
ret
jbe
mov
loope
mov
call
out
popa
inc
out
je
fldt
out
push
in
push
cmp
xor
je
mov
enter
stos
jnp
fisttpll
jne
repz
and
sub
inc
pushf
arpl
jne
sbb
and
fcmovbe
dec
pushf
mov
pop
notl
pop
push
insb
lock
mov
adc
push
cmp
test
xchg
jnp
aam
sub
in
add
jmp
addb
mov
in
lcall
hlt
mov
daa
call
add
mov
test
scas
stos
push
mov
xor
bound
mov
repz
mov
jae
sbb
adc
shl
pop
fcoms
cld
es
pop
xor
out
fs
mov
cli
pusha
mov
fcoms
js
push
out
push
push
cvtdq2ps
std
mov
rorb
mov
adc
mov
cmpsb
sbb
dec
inc
xchg
sbb
sub
iret
and
mov
ret
jb
js
cvttps2pi
idivl
and
cmc
inc
aad
inc
nop
inc
fstpl
ds
lds
je
push
ffreep
out
or
enter
or
sbb
rorb
sub
out
and
mov
stos
inc
cwtl
cmpsb
jmp
cmp
jmp
aas
shlb
mov
adc
decb
clc
imul
ret
sbb
es
adc
rcl
dec
xlat
mov
aad
sub
pop
jo,pn
mov
adc
ss
mov
negb
cmpsb
push
pop
mov
xchg
mov
lods
lea
out
adc
mov
rcrl
stos
push
insl
cmpb
mov
insl
insl
stos
ret
gs
ss
push
jg
xor
cmp
cmp
cltd
lahf
rol
lret
aaa
jp
lahf
out
jmp
lcall
mov
mov
inc
loope
cmpb
pop
aad
sarl
xor
mov
jecxz
add
scas
subl
cmpb
rcll
sub
push
push
sub
in
loope
loop
inc
lods
mov
inc
cmp
out
push
mov
out
or
fmuls
in
adc
pushf
xor
dec
stc
and
pop
repnz
shrb
inc
jo
aam
fisubs
fcmove
add
lock
ds
rclb
cmpsl
jle
pop
fnstsw
inc
mov
add
enter
idivl
add
in
xchg
rorb
pop
jnp
and
jmp
outsl
call
inc
clc
test
fdivrs
out
pop
mov
dec
bound
out
imul
ds
mov
jmp
adc
xor
sbb
outsl
test
sbb
cmp
add
imul
dec
sub
aam
xorl
repnz
lahf
std
sahf
mov
leave
pop
mov
mov
inc
pusha
adc
xchg
jecxz
fistps
shrb
push
push
insl
sbbl
rcr
jmp
add
roll
pop
mov
sarb
clc
cs
bound
add
xchg
fistps
mov
imul
shlb
jge
insb
mov
push
jge
in
jo
frstor
ljmp
add
das
xor
xchg
cmp
das
mov
in
jae
out
shl
mov
adc
push
ficomps
lods
fwait
scas
insl
cmp
pop
jae
lret
xchg
xor
lret
mov
hlt
or
aad
mov
jmp
inc
mov
xor
outsb
add
and
pop
xchg
mov
dec
nop
pop
jno
sub
mov
in
sahf
and
mov
jmp
push
rorl
into
lret
jo
inc
out
jae
add
mov
pop
iret
adc
cmpsl
pop
sub
cwtl
adc
addr16
cmp
add
push
adc
add
test
fbstp
push
mov
xchg
outsb
in
dec
push
clc
mov
jo
sub
sub
adc
movsl
mov
ds
cmc
xchg
or
int3
out
hlt
dec
inc
dec
out
nop
leave
or
rcl
daa
mov
inc
enter
test
pop
lods
push
scas
jbe
std
ficoml
push
rolb
adc
fs
in
shlb
inc
xor
scas
mov
mov
inc
test
jnp
repz
ss
and
out
movsl
add
clc
jo
fidivrs
loopne
push
ret
std
dec
lock
mov
xchg
movsb
sub
mov
xchg
mull
sbb
test
pop
push
add
into
or
push
push
daa
icebp
dec
cs
add
xorl
mov
js
js
aaa
cld
negb
call
inc
mov
loope
andl
int
cwtl
fdivrp
jmp
js
jmp
xchg
aas
mov
push
stos
popl
inc
aad
sub
sbb
faddl
cmp
inc
push
dec
ja
jne
gs
ljmp
mov
push
divb
xchg
lret
repz
cltd
out
stc
jmp
movsl
repnz
incl
jns
cli
push
xchg
pop
inc
dec
xchg
push
add
imul
pop
and
xchg
insl
xor
stos
jbe
adc
add
incb
cld
push
loope
push
jle
movsb
shlb
ret
fsincos
imul
mov
inc
ret
aaa
into
and
stos
cmp
imul
aaa
call
pushf
dec
adc
mov
push
push
repz
dec
jne
xorb
xchg
popf
dec
mov
xchg
out
leave
fstpl
pop
nop
fadds
ftst
fisubl
pop
mov
xchg
sub
mov
insb
js
sbb
add
add
jbe
jnp
dec
test
daa
fidivl
xor
inc
mov
movsb
cmpsl
sub
push
mov
sbb
call
test
xchg
shl
test
pop
jb
dec
mov
cmpsb
jbe
cmp
fwait
cmp
js
and
and
repnz
loopne
push
mov
outsl
mov
jmp
push
mov
fistl
pop
cli
imul
int
mov
cmp
inc
or
sub
daa
mov
test
loopne
xor
inc
test
mulb
sub
test
mov
mov
cmp
push
std
jne
cmpsl
inc
ds
mov
mov
je
dec
mov
mov
iret
add
or
std
sbb
js
int
gs
cmp
mov
pop
push
aam
or
jg
iret
sahf
jp
in
scas
mov
repz
mov
insb
clc
test
call
nop
movsl
mov
push
or
mov
mov
nop
sti
mov
stos
add
mov
push
mov
mov
xor
mov
imulb
cltd
jp
dec
xchg
pop
and
iret
push
dec
insb
fistpl
imul
and
xor
gs
imul
loopne
icebp
pop
adc
in
jecxz
je
mov
mov
push
outsb
and
sub
cli
xchg
test
xor
and
push
adc
mov
lahf
xor
mov
daa
movaps
or
xchg
sub
lret
rclb
mov
push
call
ds
sub
xchg
inc
imul
jg
in
ds
push
mov
or
out
scas
cmp
fmull
mov
xor
mov
sbb
decb
pop
adc
inc
andl
ret
adc
or
fbld
imul
add
mov
std
ret
jle
aas
sti
aas
or
in
sbb
xor
cltd
enter
lods
sahf
xchg
bound
add
mov
push
inc
aam
mov
pushf
flds
pop
sbb
and
sbb
jle
iret
sub
cs
mov
dec
or
ficoms
pop
dec
mov
gs
pop
pop
inc
mov
mov
rcll
adc
cmp
repz
mov
jmp
and
xchg
scas
rclb
push
cmpsb
fwait
ret
xlat
sub
fcoml
fstl
ss
or
jae
push
xchg
fwait
mov
jae
das
notb
push
divb
mov
std
sbb
mov
mov
das
jecxz
sbb
pop
dec
mov
pop
pop
dec
sarb
test
insb
xchg
dec
das
test
xor
sbb
lcall
and
xor
sub
and
sbb
andb
push
xor
push
jno
clc
and
mov
subl
xchg
inc
mov
sbb
in
pop
mov
and
mov
icebp
hlt
jecxz
je
xor
ja
mov
pop
pusha
pop
mov
in
mov
cwtl
rcrb
imull
movsl
dec
push
push
faddl
pop
fadd
mov
mov
adc
out
enter
mov
pushf
stos
sub
mov
dec
mov
pop
fdivrl
stos
fistpl
push
fwait
mov
jp
lods
pop
outsb
cwtl
adc
jle
and
rcrb
out
fwait
loop
insb
sbb
cmpsb
mov
jae
inc
xlat
scas
into
bound
outsb
mov
or
iret
ret
mov
lret
enter
push
jb
pop
jg
movsl
jle
inc
jbe
jge
cld
bound
std
dec
xor
ljmp
fcompl
test
pop
xor
int
shlb
ficompl
pop
decl
or
xchg
scas
jmp
int
add
dec
fmull
mov
ja
rcrb
mov
sub
xchg
pop
mov
push
dec
push
jns
sbb
mov
outsb
dec
dec
mov
cmp
jb
inc
xor
push
ljmp
xchg
push
icebp
add
and
jmp
int
fistpl
pop
into
jmp
push
push
jno
roll
iret
gs
jae
into
jecxz
jp
adc
sub
xor
mov
jb
fdivl
fldt
out
scas
pop
or
hlt
test
loop
jnp
push
pop
cmp
loop
insl
ret
sbb
jo
cltd
cmc
or
dec
cmp
sbb
sbb
mov
outsl
mov
or
rorl
cmp
xlat
mov
loope
jns
xor
sub
mov
xchg
cwtl
lcall
les
aaa
lcall
mov
shll
bndstx
mov
xchg
sbbl
mov
add
sbb
test
jno
pop
push
push
dec
mov
scas
mov
jmp
cmc
jb
les
push
xchg
lret
sub
mov
xorb
push
pop
mov
scas
test
dec
or
cli
add
adc
test
or
xlat
mov
adc
insb
xchg
mov
cmp
ret
lds
repnz
dec
cmp
xchg
ja
pop
dec
inc
sub
cmp
jmp
int
jo
test
push
es
sbb
adc
inc
repz
cli
jmp
mov
xor
xchg
jp
jne
je
mov
inc
pop
in
pop
clc
mov
lds
mov
stos
inc
push
fadd
pop
xchg
push
fldl
fists
adc
xorb
popf
adc
aaa
push
sub
push
icebp
add
pop
pop
ret
sbb
push
cs
or
in
sub
mov
add
mov
mov
mov
fs
xchg
cmp
mov
sbb
push
inc
push
adc
sbb
mov
add
jae
addl
jmp
ljmp
and
sahf
in
push
lret
fwait
rcr
jle
jl
add
push
push
leave
insb
das
xchg
pop
into
xor
jae
sub
or
mov
aad
mov
scas
xchg
cmp
mov
xor
loope
shlb
lcall
jb
mov
dec
jle
ja
pop
xchg
sub
stos
fbstp
jge
pop
xlat
outsb
xchg
cmp
rorl
pop
xor
adc
js
js
les
add
pop
mov
cmp
rcrb
gs
rorl
and
incl
add
daa
ficoml
cmp
mov
xor
lret
and
pop
leave
dec
stos
test
popa
or
xchg
in
pop
sbb
xor
andl
xchg
pusha
inc
mov
popa
inc
cmp
jl
outsb
inc
push
imul
gs
mov
data16
pop
mov
push
out
imulb
push
push
sbb
jno
adc
dec
adc
movsb
test
lods
pusha
mov
xchg
outsl
lods
rcll
popf
lods
mov
mov
cwtl
pop
pop
scas
test
push
xchg
xchg
mov
out
inc
push
cmp
add
dec
ret
shr
lret
pop
add
int3
push
adc
cld
aam
ljmp
jl
jae
pop
imul
bound
jp
mov
mov
rolb
sbb
in
mov
ret
aad
mov
decb
pop
pushf
jecxz
sub
repz
push
mov
mov
enter
rclb
xor
iret
test
dec
jnp
add
or
pop
add
inc
jecxz
mov
and
xchg
ds
lahf
mov
fisubl
addr16
mov
insl
or
lahf
out
jge
mov
iret
xor
mov
inc
push
fildll
mov
fnstsw
adc
loope
mov
xchg
dec
xchg
es
sbb
sahf
jg
pop
les
push
fidivrs
mov
in
lea
popf
mov
mov
pop
bnd
hlt
pop
repz
mov
cld
cltd
xor
adc
aaa
mov
insl
inc
adc
jbe
shlb
enter
flds
xor
ds
xor
adc
cmp
data16
push
inc
xchg
and
push
leave
out
popa
jle
add
push
jb
loope
cmpsl
push
sub
sahf
adc
sub
test
aam
xor
push
mov
inc
mov
or
add
fwait
mov
pop
jns
ds
in
push
add
add
dec
fwait
sbb
cmpb
lret
sub
jo
push
xchg
nop
mov
insb
pop
push
mov
hlt
fwait
adc
popa
inc
sbb
es
add
std
mov
and
sbb
cmp
pusha
loopne
dec
ds
pop
sbb
mov
rcrl
insl
xchg
and
filds
and
xorl
inc
inc
pop
adc
xor
outsl
ds
push
adc
repnz
mov
loop
dec
repz
aas
addr16
xor
ds
push
sub
fwait
stos
or
mov
mov
fwait
or
push
shlb
sub
sbb
andl
xor
add
ljmp
test
add
fcompl
or
push
mov
dec
jmp
dec
lock
test
cli
call
sub
lods
jg
int3
cmp
mov
pop
pushf
hlt
int
jecxz
cmp
jae
sub
jecxz
scas
movsl
push
mov
stos
aam
mov
mov
cmp
ret
pop
cwtl
and
or
mov
cmp
add
movb
movsb
ret
dec
jb
mov
fisttpll
test
into
jg
mov
push
cmc
fwait
cmpsb
mov
insb
xorb
enter
lock
popa
in
shrl
dec
sub
jge
mov
mov
mov
cwtl
add
ljmp
pusha
xor
ljmp
pushf
cli
and
jecxz
in
adc
add
outsb
pop
js
cmpsl
xchg
test
repnz
cmc
push
jo
sbb
adc
imul
call
inc
add
pushf
dec
cmp
and
in
leave
jge
sbb
cli
sub
mov
lock
ljmp
les
je
sub
lret
xor
push
ret
rcrl
ret
out
lea
rclb
add
out
mov
xor
cmp
fnstcw
pop
ljmp
mov
add
hlt
mov
dec
imul
inc
jns
push
in
rorl
inc
mov
inc
sub
mov
inc
cli
insl
sbb
push
push
in
inc
shlb
xchg
xchg
rcrb
pop
iret
xchg
fidivrs
lret
sti
sub
in
or
mov
xlat
invd
mov
bound
xchg
pop
or
add
inc
dec
test
ss
jae
mov
xchg
mov
call
into
inc
rorl
incb
in
outsl
lock
add
xlat
cmp
aad
or
aad
rorb
hlt
bnd
xchg
push
loopne
popa
sub
or
jae
jg
mov
fistps
fsubl
adc
mov
mov
testl
sbb
mov
test
out
mov
xlat
in
lock
sbb
and
ds
jge
xor
jg
push
out
sub
jle
notl
daa
pop
mov
push
mov
insb
sti
push
mov
dec
add
popf
dec
fadd
mov
bound
xor
mov
test
add
sbb
std
push
lods
imul
sbb
dec
sub
insl
sub
movsb
mov
out
subb
add
arpl
xchg
pop
test
pop
enter
mov
ror
lret
movsl
cmp
sbbb
and
push
mov
xchg
in
nop
sar
xor
add
nop
xor
fisubrs
sti
lods
cmp
mov
cmc
push
cmc
lds
nop
ds
sbb
jge
fists
xor
and
imul
int
xor
fsts
mov
in
or
jecxz
cltd
dec
dec
pushf
pop
mov
js
std
pop
enter
sbb
rcrl
push
repz
mov
ja
or
std
enter
stos
in
repnz
jle
pop
scas
push
mov
sbb
add
inc
ss
adcb
testl
stos
sub
int
filds
add
jns
mov
mov
shll
jne
mov
sub
fcmovnu
nop
dec
sub
mov
dec
test
dec
stc
mov
xchg
dec
scas
lcall
popf
aas
in
insl
insl
iret
addl
add
xchg
std
pop
xor
js
sbb
pop
xchg
enter
out
loop
jmp
jno
jmp
iret
sbb
into
cmpb
cmp
dec
imul
cli
mov
cmp
pop
sub
push
loopne
ret
nop
add
sub
mov
xchg
mov
mov
leave
sub
test
aaa
sbb
and
insb
xchg
idiv
dec
sahf
rclb
js
dec
pop
stos
lods
int3
cmpsl
iret
insb
clc
push
insl
jecxz
insl
push
loope
sbb
push
push
sub
rorl
push
add
jmp
adc
imul
add
insl
loop
jo
mov
xchg
jne
mov
pmovmskb
clc
cmp
inc
hlt
in
jle
xor
or
aam
mov
sub
seta
adc
fwait
inc
cld
sub
ret
cmpsb
lret
xchg
inc
mov
inc
mov
cmp
aam
sbbl
xchg
dec
divl
sbb
arpl
stos
in
in
mov
out
call
xlat
aaa
cwtl
fistps
or
cmc
das
mov
push
or
dec
push
in
into
xlat
mov
xor
dec
incb
test
sbb
test
fcmovnbe
push
and
addr16
fadd
sub
aas
in
dec
cltd
enter
push
push
pop
sbb
scas
xor
pushf
xor
mov
cmpsl
icebp
xchg
pop
jo
ja
mov
jnp
jge
in
adc
jl
cmpb
ficompl
fldcw
xchg
ficomps
mov
sub
bound
test
cmp
imul
xchg
cs
pop
movsl
dec
fldenv
in
sbb
jns
aas
popl
test
pushf
pop
adc
jp
pop
add
sub
mov
popa
or
jge
push
loop
lret
aad
data16
dec
cmp
ja
jp
repz
mov
int3
sub
loopne
push
repz
or
ds
push
jle
adc
fsubr
pop
lcall
lret
popf
push
or
aad
cmp
push
neg
pop
popf
dec
and
dec
jg
xchg
sbb
push
push
xchg
aam
cmpsl
sub
mov
ljmp
flds
or
dec
es
test
mov
or
adc
test
mov
inc
dec
test
adc
mov
icebp
xlat
and
sub
hlt
into
mov
mov
scas
add
xchg
aaa
sti
cmpl
sbb
addr16
and
shll
mov
dec
popf
incl
out
cmp
enter
sub
jno
aad
sbb
jmp
fnsave
outsb
inc
xor
stos
js
stos
fdivrl
enter
ret
push
push
mov
scas
mov
call
shrd
sbb
subb
sbb
decl
jl
je
stc
jg
mov
fidivrl
push
pop
sub
cmp
inc
imul
mov
pop
sub
das
push
push
test
lods
pop
jmp
fcomi
testb
jbe
outsl
fidivs
xor
and
call
push
mov
adc
scas
sub
mov
lret
cmp
scas
cs
inc
repnz
repz
lahf
push
dec
repz
movsb
jge
adc
loop
cmp
xchg
fsubr
xor
lret
das
popf
and
mov
xchg
loope
mov
into
fmulp
inc
inc
jmp
lods
push
sub
sbb
dec
push
mov
mov
jns
pop
and
aas
push
inc
pop
leave
loopne
out
rdpmc
cwtl
inc
jnp
sub
into
sbb
cmp
loopne
mov
rorl
insl
les
test
mov
hlt
dec
aad
mov
dec
pop
call
enter
pop
sbb
in
push
xchg
out
inc
lret
cs
aas
movsl
push
movsb
cmpsb
addb
out
dec
cmpsl
out
mov
shl
stos
sbb
pop
adc
cwtl
icebp
js
adcl
push
and
lahf
inc
and
and
outsl
sti
movsb
scas
sub
push
cmp
lcall
jp
mov
adc
mov
cld
dec
or
jne
int3
mov
cmp
xchg
sub
movsb
in
adc
xchg
pop
or
sub
sub
jae
pushf
in
out
xchg
repnz
adc
test
mov
jae
add
cmp
stos
dec
mov
mov
lock
lcall
daa
lods
test
inc
mov
xchg
cmpsl
xor
cmp
mov
and
mov
cmp
js
mov
mov
xor
icebp
xor
inc
test
stos
and
int
adc
jnp
shrb
lret
and
xchg
mov
rol
repz
or
xor
cld
cld
imul
out
mov
out
cmp
xchg
gs
mov
or
dec
addr16
dec
mov
sbb
iret
and
shrl
ror
in
ret
mov
insb
out
sahf
lock
push
pop
out
mov
cmp
sub
and
xchg
aad
xor
scas
mov
mov
cmp
hlt
sahf
or
loope
outsl
pop
das
pop
inc
pop
jbe
in
jge
xchg
add
pushf
push
repnz
or
cmp
push
std
xor
lea
and
dec
ljmp
jb
dec
mov
fsubrs
xchg
push
pop
jae
orb
dec
xor
sarl
or
stos
lods
pop
add
xor
mov
sbb
andl
push
lods
or
nop
rolb
push
jb
imul
aam
sbb
add
adc
pop
sbb
push
test
jns
int3
and
jae
adc
add
mov
dec
fs
cmp
mov
lahf
xor
iret
xor
pop
push
icebp
jnp
mov
jnp
cmp
cli
cld
and
pop
cmp
mov
pop
lret
inc
jl
fstpt
repz
nop
mov
adc
dec
xchg
stos
clc
jp
loop
les
or
mov
iret
lahf
adc
sbb
or
lods
pushf
and
and
and
dec
andb
dec
mov
pop
cmp
test
mov
xor
pop
adc
into
insl
insl
dec
xchg
lahf
inc
lret
test
ret
rcl
push
xor
add
call
cmp
rcrl
lods
cwtl
fimull
notb
aam
movsl
fsubrp
xchg
dec
jmp
fsts
mov
daa
stos
shl
frstor
out
fcomps
xlat
mov
stos
or
and
jb
stos
ficompl
shl
jne
push
and
sub
jg
push
inc
jno
cmpl
sbb
xchg
ljmp
int
and
addl
lods
push
mov
adc
int
lock
jp
mov
mov
push
out
push
mov
adc
outsl
cmpsb
mov
fs
sahf
adc
jg
xchg
mov
lahf
dec
es
jp
out
shr
popf
rol
sbb
xor
sub
inc
push
cmp
inc
pop
push
mov
orb
aaa
mov
pop
dec
js
test
dec
imul
cmp
data16
mov
adc
mov
rorl
push
sbb
xchg
xchg
dec
push
inc
adc
jl
push
push
cmp
push
popf
out
arpl
sbb
cwtl
xor
mov
and
jnp
adcb
shlb
adc
push
pop
mov
inc
fs
lds
dec
push
adc
mov
pop
aas
rorl
addr16
lock
push
lea
inc
mov
adc
scas
cli
xor
push
ljmp
sub
icebp
xor
push
inc
test
xor
outsb
pushf
push
fucomip
lods
fidivl
frstor
testl
ja,pt
setnp
push
inc
push
inc
js
adc
mov
cltd
xchg
or
arpl
stos
aad
dec
xchg
dec
jnp
sub
cld
xchg
push
in
mov
les
aad
ljmp
adc
lods
stc
stc
mov
in
scas
out
fists
jo
jb
mov
and
adcl
int3
xchg
fistpl
int3
push
cmp
xor
out
pop
mov
cmp
add
aaa
sub
or
xlat
jp
lods
jecxz
cmc
adc
rclb
sbb
mov
sub
push
or
into
fcomps
xchg
out
mov
iret
cmp
int3
popa
dec
adc
ja
sub
mov
xor
mov
out
je
movsl
jmp
sahf
push
fucomp
push
xor
sub
inc
bound
mov
jecxz
inc
adc
jg
adc
add
cmpsb
xchg
pop
dec
icebp
cs
cli
pop
pop
sub
in
repz
test
xor
stc
add
addr16
sub
std
les
mov
repnz
cltd
addr16
cmp
xchg
lock
push
mov
ret
lret
scas
ret
ret
jne
fs
jnp
jp
imul
xor
push
inc
in
pop
adc
test
js
std
push
aaa
mov
sub
popa
seta
nop
push
cltd
adc
into
xchg
xchg
fwait
enter
popa
add
or
inc
sahf
push
repnz
lret
xchg
xchg
subb
aam
mov
addr16
icebp
jne
dec
jbe
cmp
fwait
mov
imul
inc
scas
mull
sti
fsubrs
int3
xor
and
bound
add
lahf
insl
dec
inc
and
sbb
adc
ds
rcrl
jp
cmp
insl
xchg
out
test
mov
decb
stc
push
fucomp
xlat
jae
ret
dec
shlb
scas
push
xor
mov
divl
jmp
xor
cmpsb
ljmp
mov
hlt
mov
mov
mov
inc
pop
pop
mov
fnsave
xor
mov
in
jns
enter
stos
mov
cmpsl
es
cmp
xor
das
scas
adc
fistpl
sbb
ds
hlt
dec
icebp
xor
pop
stos
adc
or
movsb
movsb
ss
clc
call
cmp
cmp
mov
xchg
sarl
xlat
add
xchg
sub
xchg
jb
iret
mov
add
shll
mov
dec
loopne
jne
lock
sbb
mov
pop
dec
add
pop
mov
fyl2xp1
jmp
fisubs
cmp
jns
fxch
jo
add
fwait
icebp
xchg
sub
lahf
fsub
mov
aaa
inc
push
fnstcw
add
pop
sub
sbb
mov
out
nop
pop
dec
dec
jg
xor
cmp
sub
adc
into
cmp
push
or
pop
mov
daa
jl
int
or
out
add
push
lret
xor
cmpl
push
lret
in
arpl
insl
testb
sbb
xor
jns
repnz
aaa
fidivrs
scas
sbb
pop
pop
cwtl
dec
mov
dec
mov
loop
jbe
ljmp
xor
les
sub
test
cmp
lret
dec
pop
addr16
sbbb
sub
and
loop
lods
xchg
gs
push
adc
inc
cmp
dec
mov
dec
fistpl
xchg
ret
lret
sahf
lock
cmp
push
mov
pop
sub
and
inc
and
inc
or
and
and
mov
push
sub
out
jg
outsb
fnclex
fsts
pop
fadds
push
add
aaa
mov
xchg
shlb
push
sub
out
test
aam
add
aaa
das
or
xchg
pop
arpl
jmp
in
insl
and
out
mov
mov
in
xor
mov
imul
adc
sbb
or
sti
dec
je
and
movl
cmp
cli
fiaddl
shrl
mov
jmp
dec
leave
shll
push
mov
cmp
aam
and
sub
and
jl
notl
mov
repnz
dec
mov
sbb
ret
test
cltd
scas
inc
scas
add
daa
into
mov
testl
add
inc
sti
rorb
or
test
cmp
dec
dec
test
adc
in
mov
andnps
fsubr
xor
sub
loopne
ficomps
rorb
cmp
lcall
mov
xchg
mov
mov
jg
out
std
push
jne
cs
mov
out
lock
sbb
fisubl
inc
ljmp
xchg
push
out
iret
xchg
int
push
test
and
ret
sub
pusha
xchg
les
je
dec
mov
subb
ljmp
pushf
addr16
addl
jno
mov
daa
mov
les
dec
adc
popa
imul
scas
jno
sub
pop
and
or
add
dec
lods
xor
leave
arpl
ja
lods
je
pop
std
sub
xor
ds
int3
dec
jge
pop
ljmp
inc
sbb
popf
imul
pop
xchg
push
filds
cmp
ret
mov
add
inc
movsl
mov
stc
fsubrl
push
scas
aad
jmp
and
lods
inc
loop
jo
subl
iret
xchg
xchg
cmp
aad
cmpsb
dec
je
xor
inc
mov
push
and
rorb
arpl
aad
out
jbe
dec
pop
jmp
mov
repnz
push
lds
jo
sub
adc
stos
in
or
movsb
xor
and
sbb
mov
mov
dec
jg
xchg
jmp
es
pop
jae
push
pusha
sbb
inc
imul
dec
dec
imul
adc
xchg
mov
pop
out
xor
inc
jo
xchg
popf
idivb
pop
jg
mov
jne
and
add
push
movsl
test
dec
push
andb
jmp
imul
mov
leave
std
loope
push
arpl
ss
mov
fimuls
scas
add
notb
mov
test
sub
dec
or
dec
mov
es
dec
loop
das
xlat
out
push
mov
mov
and
xor
xor
lea
mov
inc
sbb
lock
in
mov
inc
push
lcall
and
dec
test
push
mov
lods
mov
in
shrb
stos
cwtl
lcall
jno
jp
lea
fwait
mov
int3
rclb
xor
cwtl
adc
rcll
in
and
xor
ja
sbb
pop
sar
dec
pop
inc
iret
in
stos
lock
add
lahf
xchg
sub
xchg
shl
mov
mov
push
adcl
jmp
out
test
push
aas
cwtl
rcrb
mov
xor
clc
or
xor
pop
and
imul
popf
cmp
pop
aas
mov
lods
jle
xor
js
xchg
fs
in
mov
dec
jmp
outsb
bound
add
or
rorl
insb
imul
jne
les
inc
lock
iret
enter
loop
cmp
pop
xor
aaa
out
or
dec
mov
mov
pop
xor
xchg
mov
push
mov
xlat
mov
mull
jae
pop
jle
cwtl
aad
lds
repnz
sub
cwtl
aas
add
lods
xchg
imul
js
inc
call
das
and
adc
cmpsl
leave
xor
add
cmp
adc
scas
dec
fs
scas
cmc
and
cwtl
nopl
test
aam
cltd
jg
lods
test
std
lahf
or
push
jbe
fsubrl
xor
out
pop
push
and
adc
jae
and
int3
xchg
mov
xor
je
paddw
insb
xlat
jge
testl
jl
scas
enter
add
std
shlb
in
push
mov
test
enter
repz
dec
adc
fistl
inc
add
pop
add
xchg
sbbb
inc
je
lret
mov
mov
mov
lcall
popf
pushf
call
loopew
cs
xchg
mov
inc
out
fs
xchg
xchg
rorb
push
out
addr16
fs
push
addr16
and
pop
mov
jb
cmpl
and
mov
cmpsl
icebp
inc
cmp
xchg
adc
xchg
test
stos
sub
iret
scas
imul
or
rcrl
add
adcl
scas
pushf
and
xchg
arpl
addr16
imul
aad
lods
fwait
mov
pushf
aaa
cwtl
pusha
cmp
test
add
mov
call
enter
outsb
sbb
mov
rcl
sbb
pop
jmp
leave
mov
mov
adc
jmp
sbbl
jmp
pop
jns
mov
xchg
push
pop
push
mov
push
cmp
rcl
dec
push
ss
pop
subb
cmpsb
inc
ror
fimull
add
dec
inc
mov
fimuls
jae
jp
pop
mov
lahf
mov
pop
dec
hlt
fs
jl
scas
add
or
cmp
cli
pop
scas
fiadds
sub
cltd
lds
xchg
jge
dec
out
adc
mov
inc
xchg
mov
stos
fchs
push
push
mov
jp
ret
sti
mov
sub
hlt
or
and
push
inc
repnz
test
cltd
jl
leave
movsb
dec
lret
and
add
or
je
es
inc
dec
in
pop
pop
add
and
sbb
popf
int3
sub
lahf
push
lret
test
rolb
add
add
cmc
stos
stos
sbb
mov
dec
inc
popf
or
ljmp
mov
push
cmp
std
xor
inc
xor
push
arpl
inc
push
or
sbb
lret
aas
adc
pop
and
mov
aad
nop
mov
cmp
sub
add
cltd
sbb
loop
aam
mov
repz
test
and
sarl
fisubrs
rep
cmp
repz
mov
test
mov
faddp
push
les
jbe
add
imul
jns
dec
xchg
lcall
movsb
and
dec
jmp
dec
aaa
add
ss
fmuls
pop
popf
aad
jmp
pusha
lret
jle
mov
movsb
mov
sarb
leave
sahf
or
push
dec
or
insl
pop
arpl
mov
jo
push
mul
fistpll
fimuls
orl
add
ljmp
aad
adc
mov
rcll
push
subl
dec
lea
jle
or
das
mov
push
inc
sahf
mov
or
insl
rcr
lret
mov
xor
push
pop
es
stos
pop
cmp
jge
mov
inc
repnz
push
cmp
push
push
pusha
nop
add
cmpl
out
ljmp
mul
push
mov
xchg
inc
lahf
int3
push
xchg
xchg
sbb
or
push
cld
scas
rol
cmp
notl
mov
fimuls
int3
mov
daa
cmp
adc
gs
mov
xor
jle
jno
pop
xor
aas
shl
sub
in
mov
cmpsl
inc
sahf
arpl
push
in
jne
add
jecxz
adc
cmp
lret
jg
xor
pop
mov
push
jno
lods
cmp
and
xchg
dec
push
xchg
aaa
lahf
adc
movb
push
rcrl
xor
cmc
es
dec
ds
iret
pop
out
xor
dec
pushl
out
mov
cmpl
out
out
pop
gs
jno
sbb
in
hlt
inc
inc
xor
sarl
dec
pusha
outsb
shll
outsl
mov
mov
sub
xorl
fwait
pop
lock
xchg
fbld
cmp
jge
aas
xchg
jg
test
mov
mull
js
push
push
test
in
dec
jg
push
icebp
jecxz
cmc
mov
mov
lcall
or
push
outsb
pop
popa
stc
add
arpl
sbb
int
ljmp
stos
inc
inc
ud2
pop
adc
cli
mov
fld
push
mov
inc
adc
aam
insb
adc
jne
subb
mov
aas
ss
inc
push
cmpsb
mov
test
nop
jl
jnp
int3
xor
xchg
test
loop
pop
ret
insb
cmp
push
gs
inc
jbe
mov
fisttpl
test
out
rcr
insl
cmp
stos
pop
lods
pusha
dec
in
std
pop
test
jae
rcrl
lods
mov
ja
mov
enter
xchg
mov
loop
pusha
cs
in
xchg
jg
sbb
imul
movsb
adc
outsl
dec
shlb
xchg
scas
fsubr
call
xlat
and
leave
mov
repnz
in
lahf
imul
loope
sahf
insl
and
aaa
and
out
fildl
sbb
mov
cmp
test
popf
add
ficomps
aam
push
mov
adc
mov
in
jmp
mov
fwait
push
dec
outsl
mov
cld
lods
loop
ficomps
jae
pop
inc
in
les
out
mov
sbb
cwtl
cmp
in
mov
dec
xchg
and
hlt
int
test
xchg
in
xchg
es
jns
xchg
dec
jmp
adc
mov
fsubrs
pop
repz
je
movsl
cld
sbb
js
popf
push
push
std
fcompl
mov
addr16
adc
pop
addr16
jmp
sbb
cld
mov
add
push
pop
out
fcmovu
sbb
jp
int3
movsl
jp
call
jno
jnp
sbb
add
mov
pushf
mov
or
fst
data16
notb
mov
or
dec
fidivrl
mov
mov
in
jle
jnp
aad
mov
jl
das
push
pushf
cmp
repz
ja
icebp
cmpb
subb
mov
push
sti
pushf
inc
adc
jnp
cmpsb
dec
bound
or
lea
mov
sbb
fs
sbb
js
popf
mov
push
je
mov
leave
push
jno
mov
xlat
dec
jnp
cmp
ljmp
lods
stos
les
inc
scas
push
pop
subb
push
sbb
stos
add
aam
in
sbb
lcall
sub
lahf
pop
pop
imul
sbb
push
jp
insb
in
mov
mov
cmp
lods
mov
mov
mov
sub
pop
lahf
cs
mov
inc
nop
fcoml
es
repz
lret
push
jmp
movsb
adc
repz
xor
aas
mov
pop
int3
xor
jmp
mov
push
jae
cmp
cmp
ds
and
and
fnstsw
test
mov
xlat
sbbl
outsb
xor
cmp
dec
mov
add
xchg
and
stos
push
jp
out
into
sti
dec
add
arpl
daa
repnz
adc
mov
test
push
rcrb
and
fadds
cmp
mov
fcmovnu
and
xorb
int3
jecxz
int
pop
mov
or
and
fldcw
test
icebp
sarl
jmp
fwait
mov
adc
cmc
out
test
adc
lret
jp
and
daa
add
dec
mov
movsb
mov
cmpsb
out
jae
add
ss
or
imul
adc
lahf
fs
stos
sarl
xchg
pop
dec
shr
test
mov
push
ja
jmp
mov
adc
enter
icebp
and
daa
jbe
jbe
mov
stos
add
dec
pop
das
and
mov
in
pop
mov
push
or
aaa
push
dec
nop
and
mov
bound
and
sbb
mov
lret
insb
xor
les
fadd
repnz
xchg
outsl
and
add
cs
dec
pop
aam
test
push
rcll
stos
prefetch
or
push
mov
leave
mov
xlat
pop
xor
das
shr
andl
mov
jno
sbb
cmp
and
dec
sar
arpl
dec
xchg
cmpsl
sbb
clc
imul
mov
test
fdivrl
mov
cmp
lea
or
pop
xchg
dec
inc
repz
cli
inc
lds
mov
cmp
xchg
in
stc
pop
fwait
inc
push
inc
neg
cltd
add
cmp
subb
es
adc
aaa
inc
inc
push
shl
jbe
xor
pop
and
out
stc
push
jl
add
aas
es
jecxz
push
out
cmpl
cwtl
xchg
insb
and
fdivs
popf
xlat
adc
cld
sbb
data16
pusha
lret
aad
push
sub
push
and
pop
pop
lea
cwtl
sub
pop
or
push
add
push
fistps
jecxz
icebp
add
scas
xorb
sbb
addl
cmpsb
jb
mov
xchg
addb
fdivrs
aad
inc
in
cltd
es
xor
pop
sahf
cmc
out
ds
push
loopne
mov
outsb
mov
pop
xor
lock
and
push
rclb
and
push
mov
daa
cmp
inc
adc
ret
std
sub
into
inc
mov
mov
jae
mov
pop
xor
add
lsl
mov
test
and
scas
dec
jg
je
lock
mov
in
inc
cmpsl
jne
mov
xlat
sbb
cltd
ret
mov
adc
dec
in
cmpsb
push
sbb
add
mov
movl
adc
in
loopne
sub
jg
cltd
je
jno
adc
subb
sub
fwait
cmpsl
addr16
out
add
xor
or
mov
call
movsl
sbb
sbb
popf
mov
fstpt
xor
push
mov
add
mov
xor
sbb
jo
lahf
mov
jo
imul
scas
cld
pop
dec
les
loope
addl
sbb
push
inc
xchg
dec
movsb
xchg
jmp
lret
ficomps
xor
xor
pop
out
cmp
jo
cmp
lret
pushf
and
scas
or
jne
dec
cmp
test
test
mov
cmpb
fisubrl
aaa
daa
fwait
insb
movsb
aad
daa
cmp
mov
test
stc
push
fs
pop
stos
cmp
mov
adc
les
test
aas
addr16
cltd
pop
and
push
lods
dec
pop
lahf
sbb
jl
xchg
jns
dec
divb
cltd
mov
lahf
sbb
jmp
out
push
cmpsl
xlat
mov
movsl
fwait
jecxz
stc
rorb
add
cwtl
sarl
out
divps
enter
rcll
out
pop
orl
pop
sbb
decl
cmp
or
jecxz
rcrb
pop
and
sbb
mov
dec
xor
mov
push
inc
or
dec
jns
cmp
rcrl
and
add
lds
cs
push
cmp
repz
jge
jl
sarb
mov
mov
mov
xchg
test
out
dec
shll
inc
sub
shll
inc
lds
lahf
ss
mov
add
xchg
sbb
stc
les
in
adc
jle
adc
inc
scas
cmpsl
mov
sbb
push
imul
xacquire
sbb
addr16
data16
fcmove
nop
sbb
adc
cmp
pop
sbb
inc
loopne
popf
cwtl
push
mov
inc
xchg
mov
mov
lcall
pop
dec
add
fildl
inc
cmp
cmp
and
gs
nop
cmp
inc
cld
mov
xor
mov
or
fwait
cmp
adc
js
mov
dec
xchg
negl
mov
repnz
cli
adc
dec
in
sub
add
mov
and
mov
repz
mov
mov
ret
pop
in
pop
cmpsb
mov
add
js
test
inc
jb
mov
sbb
es
xor
dec
mov
xchg
add
js
mov
into
jle
mov
out
orb
int3
dec
lcall
dec
mov
imulb
mov
mov
ja
pop
cwtl
jecxz
inc
jno
fmull
orb
sub
mov
fadds
push
inc
xor
xchg
fists
cmp
inc
mov
fnsave
sub
test
enter
bound
inc
pop
mov
sbb
xchg
subl
and
popa
aas
mov
pop
pcmpeqd
push
mull
and
mov
cmpsb
adc
movsb
lahf
adc
push
fnstenv
mov
aad
sbb
pop
sbb
das
stos
and
addb
push
cs
popf
and
mov
test
push
adc
repnz
push
push
jge
cmp
sub
cld
cmp
loop
ljmp
lret
sub
inc
js
cmpsl
inc
mov
sbb
mov
cmp
dec
mov
push
or
sub
es
fldenv
or
mov
jbe
dec
push
mov
pop
repnz
test
mov
mov
mov
dec
icebp
add
push
shlb
push
adc
sub
xor
in
in
jecxz
test
xchg
mov
shlb
add
lock
and
pop
cwtl
lahf
dec
cmpl
xor
mov
and
jnp
out
and
dec
cmc
aad
dec
sub
outsb
push
push
adcb
jle
aaa
mov
pop
mov
int
sub
sti
enter
sbbb
inc
push
inc
push
push
rorl
cmp
cwtl
loope
adc
shlb
mov
xor
jbe
xlat
sub
test
mov
fsubrs
cmc
lock
mov
pop
inc
inc
fists
push
sub
xor
aas
mov
movsb
jno
shlb
fnsave
inc
and
arpl
and
jmp
jae
jle
xor
inc
inc
subb
xchg
adc
call
jno
add
mov
mov
leave
movb
dec
pop
sbb
lret
inc
push
cmp
dec
loopne
out
push
out
fdivs
cmpl
hlt
pushf
out
mov
fcoml
or
fnstsw
shll
ja
push
into
leave
xchg
inc
push
add
jb
mov
in
adc
mov
aam
popa
cmpsb
adc
mov
push
mov
xchg
icebp
adc
test
mov
clc
mov
cmpsb
cmp
cmp
mov
xchg
in
push
outsb
shll
jle
outsb
gs
lahf
push
loope
mov
cwtl
lea
sub
push
mov
xor
in
mov
and
lahf
out
sti
push
jb
pop
enter
push
lods
ret
leave
dec
repnz
fdivrl
cmp
pushf
rclb
pop
lods
mov
lods
sub
mov
jmp
inc
lods
outsl
lcall
mov
and
pop
out
mov
push
fstpl
jmp
int3
sbb
icebp
mov
orb
adc
xor
fwait
pop
fwait
inc
ljmp
cwtl
push
push
and
pop
fcoml
hlt
cld
fs
adc
in
jle
movsl
cmp
fs
int
add
insl
xchg
insl
scas
in
jmp
test
push
push
aad
jl
in
mov
test
int
pop
incb
out
out
into
xchg
imul
sub
stc
sub
add
adc
hlt
lea
repnz
js
es
lret
and
daa
popf
jb
push
cmpsb
shll
lods
adc
push
test
dec
push
scas
jno
outsb
push
or
lds
add
push
mov
addr16
jle
xor
sbb
rclb
aam
jne,pt
mov
dec
stc
jns
xor
lods
mov
mov
in
adc
arpl
imul
pop
enter
or
shlb
mov
iret
push
xchg
mov
cltd
cmp
and
pop
rol
mov
dec
dec
jne
push
imul
and
mov
push
mov
ret
popf
mov
pushf
cmp
sub
adc
push
faddp
aam
pop
push
sbb
cmp
shlb
pop
adc
mov
in
repnz
popa
lds
add
dec
lock
repnz
stc
les
js,pt
stc
xchg
cltd
pop
pop
inc
xor
and
mov
sub
jp
adc
cmp
mov
inc
jo
imul
inc
out
inc
and
repnz
pop
pop
push
pop
mov
loopne
int3
scas
mov
lea
adc
sbb
sub
ljmp
test
cmp
pop
xchg
cld
clc
push
pop
les
xchg
cli
jmp
dec
push
xchg
pop
int
push
cmpsl
xor
pop
outsl
cmc
dec
xor
jp
jmp
lds
pop
mov
shlb
mov
mov
xchg
es
adc
mov
clc
pop
sahf
mov
push
roll
pop
mov
roll
sub
std
mov
fdivrl
sbb
sahf
ja
jnp
push
ljmp
out
dec
ds
sbb
mov
mov
jno
mull
fbld
jge
imul
xchg
arpl
adc
mov
xor
aas
push
sahf
ljmp
xchg
fwait
insb
mov
xchg
cltd
mov
jmp
add
sbb
scas
in
push
sub
stos
gs
ljmp
sub
fcomip
xor
cs
imulb
pop
enter
clc
xchg
xor
nop
lods
xor
adc
sahf
insl
xchg
jb
cli
mov
lahf
push
jne
pop
pushf
add
clc
xchg
movsl
mov
xchg
jb
daa
jb
sbb
push
loopne
xlat
mov
in
pop
mov
stc
loop
gs
sub
sbb
cltd
add
dec
xchg
js
jge
pushf
scas
xchg
jle
les
push
insl
divl
or
lods
inc
push
leave
sub
cmp
jb
push
sub
push
and
mov
enter
pushf
jno
out
arpl
dec
out
add
push
push
xchg
shll
jmp
lea
icebp
sbb
xchg
mov
insb
dec
jns
sub
mov
leave
mov
outsl
jecxz
mov
pop
mov
add
cwtl
nop
xor
into
shrl
cmp
push
test
fwait
pop
mov
test
mov
mov
lcall
inc
pop
add
cmp
lock
mov
test
popf
cmpsl
stc
xor
cmp
rclb
cmpsb
xor
xchg
aas
xor
std
inc
mov
testb
lret
add
cltd
jl
pop
cmpsl
addr16
dec
es
repz
and
out
xchg
push
aam
lds
cmp
jl
fadds
fistpll
cmpsb
mov
jmp
gs
psubusw
dec
clc
push
ret
pop
test
push
jbe
fnstsw
test
xor
and
and
jecxz
fs
push
mov
in
pop
cmp
movl
jne
icebp
mov
sti
jl
cmp
sarb
loopne
xor
sbb
call
dec
fsubrl
in
or
stc
pusha
xchg
lods
leave
mov
or
cmp
inc
js
push
jno
pop
mov
aas
clc
cld
add
sti
jae
push
sahf
aad
lahf
mul
and
push
notl
cmp
loope
inc
stos
inc
cwtl
xor
cmpsl
mov
push
dec
lea
decl
mov
xchg
cli
pop
pop
add
dec
or
cli
cmp
aas
sub
ss
loop
or
dec
cmp
add
pop
cmp
not
jg
sbb
inc
nop
ficoms
push
popa
movsl
arpl
cmpsb
cld
pushf
ficomps
ret
in
fadds
shlb
pop
into
fucomi
mov
arpl
stos
std
and
fcmovne
adcb
clc
cmp
inc
dec
ret
shl
cmp
scas
cmp
das
and
mov
xor
inc
or
push
push
sahf
xchg
jle
cmpsb
lahf
xchg
add
or
movsb
push
ljmp
mov
movsb
mov
bound
lahf
push
daa
mov
inc
mov
jae
mov
push
push
sarb
out
stos
mov
enter
jge
dec
mov
cwtl
ljmp
outsb
jae
iret
or
cmp
rorb
xor
std
jae
ret
jecxz
cwtl
test
jns
jl
mov
jns
cmc
out
clc
fdivs
cmp
enter
sahf
stos
insb
subl
sub
sub
adc
mov
call
cmp
push
jecxz
xor
add
push
sub
idivb
xchg
cmpl
jp
out
mov
xchg
adc
das
lods
shlb
or
ss
push
clc
bound
or
imul
sub
push
stc
pop
and
push
xchg
notb
mov
push
dec
push
enter
pop
int3
push
stc
stos
mov
int
push
pop
push
pop
xchg
mov
mov
clc
inc
sbb
btr
sbb
or
dec
adc
cs
push
scas
and
lds
loope
test
push
scas
sub
cmc
ret
push
out
cwtl
mov
or
ss
cmpsb
adc
dec
push
add
jne
xchg
xchg
xor
mov
gs
lods
add
lret
and
divb
jmp
sahf
jnp
in
lret
cld
and
es
xchg
push
cwtl
imul
sarb
jl
movsl
int
xor
mov
xchg
fmull
push
add
push
jo
test
adc
or
inc
aam
jle
scas
xchg
aaa
dec
jbe
inc
pop
daa
test
xchg
sub
adc
hlt
jne
leave
and
fidivl
dec
out
or
xor
sub
es
leave
dec
test
loopne
ret
cmp
std
int3
test
sub
xor
mov
mov
fidivrs
lcall
sbb
jcxz
add
xlat
dec
pop
and
and
dec
dec
daa
fdivrs
imul
add
jnp
rcrb
mov
or
and
mov
into
dec
add
pop
xor
xchg
imul
pop
and
data16
int3
or
es
xor
inc
andb
inc
push
sbb
or
sbb
xor
xor
jo
add
outsb
test
out
pop
dec
xchg
popf
xchg
leave
lahf
mov
mov
lds
aam
sub
ds
sti
aaa
fmuls
call
mov
jecxz
jbe
cld
pop
inc
shlb
lock
sbb
xchg
mov
sub
int
ljmp
pusha
dec
sbb
ret
das
mov
out
hlt
flds
adc
xor
and
in
js
popf
xchg
lods
mov
push
jb
mov
mov
xchg
loope
dec
mov
out
push
xchg
xchg
jge
daa
push
pop
pop
mov
jge
add
lahf
fs
std
movsb
sub
enter
not
mov
adc
adc
sbb
push
mov
jl
test
or
lods
insb
pop
testl
pop
aaa
loop
lods
cli
add
mov
in
repnz
dec
xor
dec
xchg
sub
pop
or
inc
push
pop
dec
out
lods
mov
push
repz
sub
mov
adc
or
sahf
pop
fs
inc
xchg
ror
aad
test
pop
pusha
xor
scas
fistpll
jne
pop
sub
icebp
jns
fnstcw
call
scas
dec
dec
aaa
incb
cmpsl
mov
cmp
inc
jne
push
mov
pop
mov
aad
in
mov
or
loopne
and
dec
shr
cmpsl
fucomp
jo
addb
xor
jnp
sar
ret
push
dec
in
cltd
cmpsb
pop
decl
insb
add
sbb
pusha
mov
popa
inc
rcrb
mov
subb
sub
push
push
add
sbb
idivl
ja
push
and
dec
mov
mulb
jecxz
mov
mov
pop
test
sub
push
or
cmp
std
jnp
cmp
popa
fsts
push
pop
cmpl
push
ret
pop
jp
and
inc
lods
cltd
ljmp
sub
std
mov
ljmp
sahf
idiv
imul
lds
cli
outsl
lcall
cli
daa
jge
add
shll
gs
pop
lods
movsl
mov
jns
pop
add
and
and
fsub
in
frstor
push
jge
fwait
xchg
and
sbb
cmp
sar
movsl
or
gs
lods
mov
mov
test
popa
and
mov
in
sbbb
jb
mov
push
cmc
call
out
cld
fisttps
jnp
pop
dec
mov
jecxz
jecxz
xor
gs
aas
test
fwait
mov
std
cmp
mov
loop
and
or
inc
aam
and
lds
daa
popf
mov
roll
push
aaa
jnp
xlat
push
repnz
lahf
sarb
lds
mov
jmp
xlat
mov
add
in
xor
mov
sahf
adc
addr16
add
dec
mov
mov
pop
enter
aas
pop
test
and
xor
pop
lock
adc
frstpm(287
ret
into
ret
mov
jb
xchg
ljmp
inc
in
ss
xor
xchg
dec
test
rolb
jmp
mov
xor
fs
sbb
xor
mov
bound
shrl
clc
jo
notl
xchg
pushf
pop
shll
xchg
inc
rcr
push
adc
and
sbb
add
pop
cmpsl
push
dec
pop
mov
es
aam
add
push
xor
ret
mov
addr16
cmp
xor
pop
sbb
add
inc
mov
xor
insb
into
ljmpw
out
inc
cmpsl
push
test
pop
pop
jae
xchg
in
fmul
mov
es
repz
mov
or
sbb
lahf
xchg
xchg
call
ds
xchg
pop
jne
or
add
clc
dec
aaa
mov
in
pop
xor
push
jge
add
jae
or
and
sbb
clc
and
xchg
xchg
sbb
fisubs
fcoms
pop
js
outsl
jp
jne
test
and
dec
cmp
ljmp
xor
mov
insl
dec
mov
je
push
jne
adc
gs
int
xchg
push
bound
daa
pop
add
adc
xchg
or
out
test
push
lds
lock
movsb
xchg
in
pop
je
test
sarb
dec
addr16
test
jmp
sbb
mov
mov
mov
pop
pop
push
mov
or
push
xor
sub
and
add
testb
adc
gs
cltd
fmulp
inc
cmpsl
adc
arpl
cwtl
sbb
xchg
dec
cmp
fnstcw
mov
fisubl
mov
inc
dec
sti
repnz
inc
add
dec
sub
adc
jg
out
pop
pop
push
ret
repnz
mov
mov
imul
sarb
mov
pop
jg
loope
iret
jl
or
xor
clc
xrelease
add
aad
or
arpl
dec
inc
push
es
lea
xor
jecxz
mov
push
sub
cs
push
sti
cli
and
dec
xor
sti
mov
in
mov
sub
flds
jmp
fwait
cld
sub
add
leave
cs
xchg
leave
cmp
xor
jl
int
mov
hlt
cmc
stc
push
outsl
fstpl
ret
adc
dec
stc
data16
movswl
outsl
mov
mov
imull
rcll
lods
das
inc
cmp
out
clc
test
jl
stos
std
lcall
insb
mov
lahf
adc
xchg
cmc
cli
jno
cmpsl
sbb
jo
add
push
mov
jns
xchg
shl
cmp
adc
movsb
mov
pop
loop
rcrl
or
rol
outsb
add
push
sbb
mov
add
sbb
shll
adc
pop
jmp
mov
push
dec
xor
out
pop
push
cmpsl
aas
or
cmp
push
out
or
cmp
js
mov
jns
out
clc
cmp
test
lods
loop
and
sbb
cmp
leave
mov
loopne
xorb
ret
mov
out
dec
dec
les
cmp
scas
pushf
call
pop
push
int3
addr16
pop
xlat
popa
scas
js
lcall
add
nop
xchg
imul
mov
cld
pop
add
inc
mov
fs
xchg
lea
sbb
enter
sbb
cld
into
gs
add
jae
sbb
jg
mov
sbb
or
mov
xchg
fwait
loopne
push
loopne
inc
enter
xchg
negl
loop
int
loop,pt
xchg
add
xchg
addr16
mov
in
loopne
push
arpl
lcall
lods
enter
add
sarl
outsb
dec
iret
xor
js
enter
or
inc
adc
stos
xchg
mov
or
or
cltd
pop
les
mov
cmc
mov
dec
adc
and
shll
pop
pop
mov
push
sub
in
popf
push
sbb
into
adc
mov
xchg
mov
xchg
mov
xchg
add
xor
scas
lds
sub
icebp
sbb
mov
mov
adc
pop
aam
ret
push
je
and
add
jle
int3
sbb
in
xorb
adc
fmuls
test
lcall
pop
sub
loopne
call
adc
pop
shll
adc
in
imul
jl
pusha
outsb
push
dec
dec
icebp
insb
adc
loope
dec
fldcw
repz
jecxz
into
jecxz
sarl
xchg
pop
mov
lret
push
dec
cwtl
dec
cmc
mov
sub
leave
int
cmpsb
lcall
push
push
loopne
push
sub
sbb
mov
sbb
dec
push
int
les
mov
and
mov
mov
cmp
sub
push
inc
movsb
shll
inc
stos
jne
js
cld
daa
ljmp
lret
sahf
lock
fsub
div
cwtl
mov
fistps
inc
jmp
hlt
aad
sti
xchg
pusha
fistpll
pop
sarl
je
mov
sub
enter
fistps
mov
mov
mov
xchg
mov
push
push
cmpsl
dec
das
pusha
lds
fsubl
and
push
pop
inc
jno
sub
fildl
jo
mulb
sbb
icebp
pop
fiaddl
rcrb
push
js
mov
mov
cwtl
repnz
jp
jmp
push
clc
xor
test
es
repnz
adc
stc
ficomps
add
push
inc
aas
and
mov
or
fsubrs
mov
shlb
flds
aas
jns
icebp
sub
sbb
jl
xchg
inc
pop
mov
pop
popa
cmp
inc
popl
cmpsb
xor
fnstenv
shrl
call
ret
cmp
aam
lea
adc
jmp
or
inc
pop
sbb
fsubr
jp
and
pop
jb
cmpsb
and
pop
dec
push
and
insb
add
adc
mov
or
js
iret
inc
lock
inc
lods
icebp
shlb
iret
sbb
in
fwait
cltd
scas
roll
jns
cmpsb
notl
jo
adc
les
and
pop
mov
mov
dec
xchg
bnd
push
out
orl
into
pop
ja
loope
sbb
pop
in
sub
lea
and
fimull
ja
mov
xchg
leave
pop
enter
addl
sbb
mov
cmp
scas
ljmp
jp
xor
das
pushf
cmpl
or
jge
aas
dec
je
sarb
loopne
cmpsl
jge
xchg
jne
jo
leave
test
dec
jae
repnz
out
add
xchg
sbb
pop
cmp
pop
shrb
lds
jb
popa
or
shll
hlt
add
addr16
sub
clc
lea
fcom
ljmp
push
sbb
dec
iret
push
test
xchg
jmp
ja
pushf
mov
stos
jl
inc
jnp
push
sub
mov
daa
inc
or
sbb
mov
pop
dec
aaa
push
shl
xlat
xor
sbb
adc
mov
es
xchg
push
dec
and
push
cli
xchg
dec
xor
clc
cmc
sbbb
push
dec
dec
sub
pop
xor
inc
in
pusha
xchg
pop
adc
into
outsl
inc
mov
adc
mov
je
mov
cmpb
jo
xchg
icebp
mov
mov
sarb
leave
push
data16
cmpsl
and
jno
pushf
inc
adc
and
out
mov
mov
aad
mov
shlb
cmpb
xor
sub
dec
push
pop
callw
add
mov
sahf
out
pushf
mov
dec
inc
sbb
das
xchg
xor
fcomps
lds
test
shlb
out
daa
sub
in
mov
dec
jae
ret
add
dec
sarb
ljmp
or
adc
repz
sahf
popf
notl
movb
adc
cmp
push
nop
add
scas
fmulp
fcmovne
std
or
jo
ret
cmp
aam
push
jecxz
or
xchg
imull
pop
adc
hlt
xchg
test
sbb
and
push
ss
pop
add
or
jmp
stos
popf
outsb
and
cltd
mov
inc
ficomps
cwtl
inc
rcll
adc
lds
pop
jle
pop
xlat
jmp
xor
ret
loopne
popf
sub
jae
dec
popf
sahf
call
xchg
or
mov
mov
xor
hlt
mov
sub
test
inc
mov
dec
bound
cmp
aaa
enter
mov
pop
mov
xchg
adc
in
sbb
mov
roll
insl
enter
push
fucomp
and
mul
fwait
clc
xor
ret
mov
cld
addr16
jbe,pt
notl
mov
lods
dec
push
rcrb
loop
sub
push
and
clc
sub
call
das
dec
fbld
pushf
jo
aam
fcoml
adc
dec
stc
jge
push
sub
push
jmp
xchg
out
ret
add
fmull
das
sbb
fisubl
adc
pushf
xor
cs
pop
sarb
cltd
into
bound
jae
add
test
mov
jg
in
fcmovnbe
popf
mov
lds
mov
xor
cs
inc
std
sbb
sahf
jb
mov
or
int
in
addr16
dec
rcl
push
mov
cld
lahf
cmp
data16
es
psraw
sub
aam
out
mov
mov
das
mov
sub
lret
call
mov
stos
ret
and
add
shlb
or
xchg
jb
popa
and
imul
or
sub
sarb
and
xor
daa
popf
sub
add
int
pop
mov
rcll
jae
and
mov
lds
sbb
push
mov
repz
lds
jmp
call
jge
js
jmp
cwtl
xchg
test
es
movsb
aaa
lds
mov
loop
push
xchg
push
inc
xor
jle
and
jo
dec
adc
lcall
ds
mov
sarl
pop
jb
jmp
mov
aas
add
aaa
xchg
adc
mov
bound
fldenv
pop
xchg
mov
into
pushf
in
ljmp
nop
lds
push
mov
jnp
je
xchg
inc
shrl
ss
data16
daa
push
push
xlat
mull
out
call
push
pop
and
shll
repz
xor
int3
stc
mov
lock
imul
imulb
push
fstl
dec
scas
bound
lret
adc
push
mov
and
mov
call
jl
push
fneni(8087
movl
flds
int3
divb
shll
jmp
pusha
cmp
xlat
rcrb
and
mov
push
mov
and
ret
fldcw
lods
mov
aas
add
in
inc
iret
fldenv
or
inc
sub
loop
das
ficompl
sbb
pusha
test
loope
ja
pushl
push
sbb
fcmovnb
enter
jns
pop
mov
int3
int3
add
pop
mov
cltd
ficomps
sbb
arpl
shr
cli
cmp
pop
in
or
std
loope
xchg
fiaddl
xor
lock
stos
fs
cmpsb
mov
lcall
bound
test
test
mov
jns
cmpsb
sub
cli
out
das
sbb
imul
cltd
add
jne
scas
mov
fidivrs
rolb
mov
test
scas
mov
xlat
adc
sbb
repz
mov
das
pop
jbe
adc
pop
and
cld
cmpsb
daa
mov
insb
or
shlb
xchg
lahf
adc
sub
ljmp
lea
pop
adc
in
js
mov
movsb
or
mov
mov
aad
pop
in
addr16
add
push
inc
pop
xor
pop
mov
xchg
xlat
fimull
cmp
mov
stc
mov
sub
jo
movsb
jle
mov
jb
push
gs
aad
xchg
cltd
mov
and
mov
loopne
sbb
fcmove
rorb
jp
ret
negb
push
repz
lods
test
pusha
dec
mov
nop
scas
scas
clc
pop
mov
arpl
subb
stos
decl
enter
scas
aad
push
jmp
shll
sbb
insb
jmp
int
out
or
insb
sub
fists
rclb
mov
fsubs
jg
jne
dec
pop
into
dec
push
mov
xor
and
ret
pop
out
push
out
sub
loopne
xchg
xchg
jl
inc
dec
add
in
mov
lcall
in
inc
cmc
roll
jmp
das
data16
mov
push
std
cmp
dec
popf
cwtl
mov
or
mov
or
jp
pop
and
sbb
and
sub
daa
mov
inc
pop
or
and
sbbl
cmpsb
neg
mov
mov
fmul
inc
jns
lock
adc
adc
ja
loopne
inc
sbb
lods
mov
enter
sbb
cltd
or
fwait
test
jmp
push
int3
mov
adc
nop
mov
jecxz
cwtl
fildll
hlt
mov
lret
clc
inc
call
lahf
push
dec
mov
imul
ljmp
jle
decb
lods
mov
aam
stos
xor
jno
xchg
or
jecxz
rorb
mov
xor
or
in
cwtl
adc
pop
hlt
mov
push
xchg
sub
add
add
cmc
mov
push
shlb
icebp
testl
mov
aam
scas
ljmp
pop
lahf
pop
pushf
ljmp
pop
push
pop
in
mulb
enter
push
iret
dec
fbld
push
fwait
js
mov
pop
imul
or
jecxz
icebp
push
cmpsb
cmpsl
mov
js
insl
movsb
mov
jge
lods
data16
xchg
inc
movsl
mov
stos
pop
lret
inc
bnd
test
out
cmp
orl
movsl
movsb
jecxz
xor
mov
in
test
icebp
imul
mov
push
push
mov
jo
clc
shrl
push
rcll
cwtl
in
aaa
add
ret
xlat
loop
pushf
inc
sahf
shll
push
jno
cmp
mov
pop
cmpsb
dec
jecxz
mov
mov
push
stc
jbe
and
jp
fsubl
nop
pop
call
mov
loope
in
push
test
jno
cli
loop
loop
add
jle
test
data16
sarb
lds
dec
push
push
and
insl
and
nopl
or
or
adc
pop
pop
dec
xchg
cmpsb
push
xor
cmp
repnz
fcmovnu
jg
sahf
mov
and
or
mov
sub
cltd
fnstcw
rorl
loopne
aas
adc
imul
leave
mov
dec
mov
pop
push
dec
xor
pop
dec
sbb
cwtl
pop
inc
mov
adc
sub
mov
ret
or
mov
fdivrl
add
jmp
movsl
ret
test
cmpsb
adc
pop
sbb
js
mov
mov
jl
xlat
std
push
movsb
pop
out
mov
addr16
push
dec
out
pop
vmovdqa
or
lahf
dec
sbb
mov
xchg
loope
stc
dec
sarb
sub
jecxz
loope
out
inc
sub
gs
repz
iret
xor
mov
xor
mov
pop
imul
add
inc
xor
mov
arpl
fcoml
and
scas
sub
or
push
and
push
loop
add
cwtl
adc
fmull
mov
add
xlat
lahf
test
sub
xchg
adcb
je
loope
mov
jmp
ds
push
cmp
daa
adc
cmp
dec
sahf
les
and
adc
or
orb
jmp
mov
fwait
int
adc
sti
fidivrl
rcrl
gs
ffreep
inc
mov
mov
add
add
lea
jp
pop
jns
xchg
sbb
jecxz
movsb
arpl
adc
mov
ljmp
cmp
push
jmp
inc
push
ret
or
movsl
or
xor
das
sub
adc
insl
testb
inc
mov
rol
into
cmpsl
movsl
or
lea
icebp
and
ss
sub
push
mov
cld
add
fistpl
insl
leave
xor
addb
int3
hlt
shl
adc
aas
cmp
lds
adc
insl
mov
jne
jnp
jmp
cmp
in
or
adc
dec
pop
ret
and
sub
outsl
cltd
js
push
pop
inc
dec
cli
add
xor
sub
cmp
cwtl
and
sarl
insl
mov
push
loop
data16
add
xchg
jl
adc
in
popf
daa
je
enter
daa
in
add
jb
inc
and
aam
push
sub
inc
push
jmp
pop
not
call
pusha
ja
dec
sarl
in
pslld
mov
out
sahf
icebp
inc
xor
cmp
out
test
aad
fwait
mov
mov
movsl
out
jb
ret
in
sbb
dec
pop
fistpl
stos
roll
clc
or
or
dec
jne
jns
push
mov
cltd
cmp
andl
out
jns
sub
push
xchg
or
sbb
insb
js
xchg
xchg
enter
cs
mov
cs
add
xchg
mov
push
leave
shlb
mov
insl
xchg
leave
adc
cmp
pop
loopne
dec
out
jns
out
mov
arpl
xchg
out
push
arpl
ds
fidivl
clc
loop
xchg
pop
mov
in
daa
inc
jo
dec
jno
int3
mov
adc
lret
adc
mov
rolb
cmpsl
sub
push
cld
jns
sub
int3
xlat
mov
push
into
std
rcll
or
mov
dec
aad
jp
loopne
xlat
mov
xchg
aaa
pop
push
sar
sarb
icebp
pop
inc
mov
mov
mov
negb
and
and
cmpsb
push
arpl
ss
or
sub
int
das
stos
movsb
cld
mov
push
mov
jae
sbb
stc
testb
stc
sbb
fistpll
lods
push
jge
dec
pusha
es
out
jecxz
ss
mov
sbb
xchg
andl
pop
cmp
fistpll
xlat
sub
in
mov
or
mov
pop
mov
push
mov
insl
and
iret
call
rorl
repnz
and
sti
xchg
xor
cmpsb
mov
mov
test
adc
mov
shll
push
ficomps
loop
inc
adc
scas
and
daa
or
jne
jl
lods
or
int
cltd
add
hlt
jmp
xchg
repz
xorl
loopne
mov
dec
test
lahf
dec
cltd
adc
jp
pop
mov
pop
cli
stc
enter
call
sarl
push
mov
xor
mov
bound
test
xchg
dec
ret
std
sbbl
or
andb
fs
mov
sbb
cmp
gs
fisubrs
scas
stos
shll
sbb
dec
shrl
jle
jbe
fcomps
pop
xchg
dec
ret
outsb
mov
loopne
dec
stos
movsb
jae
push
int3
jge
xchg
or
mov
jne
out
sbb
arpl
ss
and
aad
cltd
int3
mov
xchg
inc
inc
loope
scas
add
pop
dec
out
xchg
rcll
push
rcr
push
je
repz
loopne
xlat
pop
daa
div
jp
jbe
jo
sub
push
int3
pushl
cmp
insl
daa
push
fwait
dec
add
ret
push
rclb
sbb
mov
cmpsl
sub
pop
sub
mov
push
jbe
mov
shlb
xchg
cwtl
pusha
cmpsl
add
mov
xor
stc
repnz
xor
mov
pop
lods
mov
ljmp
jnp
mov
dec
insl
xor
insl
pop
push
inc
xlat
dec
nop
inc
loopne
xchg
or
mov
mov
test
cmp
push
fstpl
jb
test
movsb
jae
inc
or
mov
les
and
out
std
outsl
inc
jg
mov
cmp
xchg
rol
in
mov
testl
lret
jns
sti
pop
gs
mov
sarb
out
add
inc
xor
pop
addl
jb
pop
jl
lcall
ds
mov
dec
mov
push
sub
ret
xor
adc
cmp
loopne
ret
and
lock
enter
rorl
call
imulb
mov
xor
mov
sbb
shr
mov
fimuls
loopne
xor
dec
cld
cltd
call
pop
ret
enter
orb
icebp
cmpsb
push
mov
dec
inc
pop
popa
loopne
scas
sahf
add
push
cltd
and
outsl
ja
lock
and
out
cltd
push
mov
mov
lahf
shlb
sti
dec
cli
cmpsl
loope
scas
pop
dec
lret
insl
dec
incb
dec
sub
push
adc
pop
ror
aad
repz
inc
push
push
push
hlt
xchg
add
mov
cli
push
dec
mov
das
xchg
imul
std
sti
stos
pusha
nop
pop
cmp
test
dec
ret
xlat
dec
jmp
movsl
mov
jae
stos
pop
push
mov
xchg
push
xchg
inc
mov
sbb
xor
xchg
mov
bound
xchg
jb
stc
xchg
jne
push
sbb
mov
imul
aas
mul
stc
cmc
ljmp
lock
iret
pop
lcall
xchg
cli
cmpl
mov
sti
sbb
stos
mov
test
or
mov
mov
jo
jb
dec
inc
cmp
sbb
into
mov
push
filds
inc
push
js
ss
pop
dec
fldl
dec
stos
in
out
cmp
xor
dec
bound
xchg
fdivrs
push
sub
sub
ja
cmc
pop
shl
xchg
or
push
pushl
push
mov
dec
lea
add
sahf
aad
pop
sub
hlt
xchg
or
or
js
xchg
jno
in
and
push
lret
divl
mov
mov
sub
ret
mov
adc
xchg
and
inc
pop
mov
fs
sahf
pop
adc
cmp
fwait
inc
pop
xor
sbb
cli
sub
dec
mov
js
int
mov
addr16
fadds
cmp
mov
fnsave
cltd
ljmp
adc
je
stos
dec
jp
out
movsb
lret
inc
sbb
xorl
leave
mov
push
and
sub
fcoms
push
es
aad
insb
pop
fwait
inc
inc
dec
cmp
mov
test
repz
imul
fwait
adc
add
sbb
lods
or
pop
ja
or
loope
adc
inc
jp
ljmp
jp
mov
jnp
loope
div
int
push
add
dec
inc
sar
addl
fildll
and
or
loop
xchg
jl
jno
cmp
push
dec
inc
mull
mov
fdivrs
and
mov
push
ftst
mov
mov
mov
xchg
add
pop
fnstsw
push
es
jae
ss
push
imul
sub
and
add
insl
cmpsb
pop
ja
iret
xlat
iret
xor
int
xchg
movsl
inc
fs
mov
les
in
add
jp
push
mov
cwtl
xchg
ljmp
sub
test
cmpl
enter
and
and
jl
lret
inc
dec
lcall
loopne
add
hlt
and
test
repz
pop
ljmp
shrl
bound
mov
fldt
jge
mov
sub
icebp
dec
pop
pop
stc
push
iret
lahf
test
xor
clc
add
out
fsts
hlt
lds
addr16
adc
adc
loopne
mov
in
out
enter
mov
dec
add
lods
mov
movups
pushf
pop
push
sbb
js
push
jg
loop,pn
ret
push
aam
dec
ja
push
push
jne
mov
jns
lcall
loope
aaa
fbstp
in
mov
pop
in
push
mov
fcoms
mov
fs
aam
pusha
dec
adc
mov
xor
sub
incl
mov
leave
mov
xchg
jnp
push
push
sub
add
mov
scas
xor
push
jb
shl
inc
stos
ds
cli
lcall
scas
sbb
or
fs
bound
imul
sbb
sbb
pop
arpl
and
roll
stos
dec
inc
int3
daa
push
shrb
fsubs
add
incb
push
sbb
fldt
inc
js
outsl
mov
adc
lock
xor
add
into
cltd
lahf
push
inc
push
push
mov
push
jns
jge
sbb
inc
std
in
in
inc
jp
push
push
dec
xor
scas
into
cmc
das
and
lret
sbb
cmp
lahf
outsl
add
add
or
pop
pusha
dec
and
sub
dec
insb
rol
mov
jb
ret
cmp
in
outsl
cmp
jp
mov
pop
idiv
and
mov
shll
push
cmpsb
and
lret
cmpsb
cmp
movsl
xchg
mov
lods
leave
adc
popf
movsb
xor
decb
add
mov
gs
popa
scas
mov
sbb
xor
pop
jl
or
iret
add
mov
add
lock
std
jb
or
loop
dec
xchg
lret
pop
mov
mov
repnz
and
fucomi
stos
and
ret
jp
das
jl
ficompl
outsl
insb
cmpsl
stos
push
sub
pop
xchg
cmp
jge
sub
adc
cmp
mov
adc
stos
or
push
jae
jo
ret
cmp
dec
cmpsl
pop
pop
inc
jmp
pop
rolb
lcall
divb
lcall
cmp
sbb
loopne
jp
popa
aam
mov
cli
fstps
outsl
xlat
sub
ffree
shll
not
inc
cmp
dec
add
add
push
stos
and
movsb
scas
insl
imul
fidivl
daa
pop
adc
add
pop
cmp
and
sub
dec
mov
cltd
sbb
xchg
mov
sbb
sbb
cmpsl
les
or
movsl
dec
out
imul
nop
arpl
out
ret
shll
mov
das
mov
cmp
push
shll
xchg
es
les
in
inc
cs
subb
mov
orl
push
fisttpll
dec
cmp
loope
jge
call
js
dec
pop
or
pop
mov
jg
rep
shl
jnp
dec
and
sub
adc
lods
jle
popf
das
adc
jae
mov
lock
pusha
pop
jp
mov
and
lods
outsb
mov
enter
in
mov
sti
inc
dec
ret
scas
inc
repnz
jnp
rcrb
sub
lret
sbb
pop
jmp
aas
xor
sub
iret
xor
sbb
gs
in
xchg
mov
mov
cmpsb
clc
xchg
repnz
outsl
nop
sbb
mov
push
andl
push
pop
push
lcall
pop
add
mov
adc
std
out
test
mov
or
cmp
mov
stc
les
xchg
int3
nop
sub
sub
mov
mov
and
popl
ficoms
lea
cs
adc
call
inc
outsb
test
es
inc
add
dec
jge
insl
repz
scas
enter
test
aas
xchg
es
mov
int3
inc
add
xchg
jae
pop
pop
xor
push
cmp
mov
int3
shl
pop
jge
repz
inc
mov
out
push
xchg
dec
dec
js
cmp
mov
jecxz
outsl
cltd
sub
xchg
je
je
add
sahf
and
add
mov
test
ficoml
and
add
fcmovbe
dec
inc
mov
lea
jl
mov
push
bound
je
mov
mov
in
or
xor
js
outsb
stos
inc
or
movsl
out
dec
xor
jmp
data16
sub
lods
in
aaa
pop
sub
orb
xor
lock
orl
in
addr16
in
lret
jbe
xchg
lea
push
inc
sbb
repz
lock
xchg
pop
jnp
dec
insl
leave
rorl
loop
lahf
xor
cmp
jle
xorb
xchg
in
fidivs
and
shrl
call
dec
and
test
inc
in
xorb
fs
mov
pop
imul
test
xchg
sub
sub
je
pop
fldl
lock
std
or
scas
outsl
xor
aad
pop
or
dec
lods
outsb
xchg
mov
gs
mov
mov
cwtl
stos
sahf
sub
test
push
push
mov
cwtl
in
into
es
xchg
mov
sub
rep
jge
in
jmp
or
xor
ficoms
arpl
pusha
shl
pushf
jecxz
add
iret
in
int
js
mov
sbb
pop
inc
add
push
imul
jg
mov
hlt
mov
xchg
sub
xchg
add
mov
jecxz
or
xor
dec
and
mov
add
aaa
inc
sub
gs
ds
shr
jno
fcoms
mov
fucomp
xor
sub
popa
xchg
insl
or
aam
xor
in
lret
or
data16
xlat
inc
test
lahf
rclb
mov
loopne
xchg
fcoms
or
int
loope
std
pop
sbb
lods
mov
and
insb
sti
xor
jl
cmp
adc
add
mov
cwtl
cld
lock
inc
jns
filds
sbbl
mov
xor
xor
adc
fcomps
arpl
xor
loop
pop
das
mov
out
add
fs
shll
add
inc
scas
inc
insb
popa
adc
mov
add
rol
dec
into
out
sub
in
and
cmp
sub
insl
out
notl
cld
inc
xchg
mov
adcl
in
std
test
out
jae
pop
testl
push
loope
ret
pop
mov
jae
sbb
fwait
xchg
daa
xor
inc
pop
pop
lods
mov
mov
bound
movsb
les
pop
pop
sbb
loope
or
movsb
sub
pop
and
pop
jae
mov
mov
jecxz
test
out
sub
push
pop
call
mov
test
loop
push
jns
lea
sub
dec
ret
test
cld
scas
je
sub
ret
push
cmp
inc
jbe
dec
test
bound
inc
js
adc
stos
mov
pushf
mov
add
xchg
jne
flds
mov
push
lods
inc
pop
or
mov
ficoml
sub
push
iret
mov
and
sbb
push
cltd
fists
repz
into
imul
fisubrs
inc
stos
cli
fnclex
stos
js
arpl
jg
sbb
adc
and
imul
out
fstpl
mov
pop
inc
pop
sub
in
repz
mov
daa
cwtl
or
test
in
xlat
mov
xor
jns
mov
mov
inc
jl
jecxz
mov
loopne
jmp
ret
js
mov
cmc
cltd
xorl
in
push
mov
xchg
dec
popf
scas
xor
mov
mov
sub
shrl
divl
jno
push
pop
mov
hlt
stos
add
insl
dec
inc
dec
xor
dec
pop
lds
pop
adc
sbb
adc
std
push
mov
jmp
insl
add
sub
jns
push
cmp
cmp
ja
sbb
push
les
inc
xor
cwtl
pusha
adc
mov
xor
cmp
mov
or
stc
mov
jle
xor
pop
leave
subb
cli
lock
pop
dec
sub
push
filds
and
repz
lods
xor
outsb
jl
push
mov
pop
rorl
addr16
es
cltd
inc
lret
sub
inc
ds
sahf
push
sbb
xor
js
imul
scas
cmp
xor
cmpsl
iret
and
into
dec
test
jae
ss
jnp
test
hlt
fisubs
cmp
fists
sahf
and
jp
cmpsb
pushf
push
and
test
pop
xlat
adc
pop
movsb
push
iret
pop
pop
cmpsl
cwtl
insl
mov
out
push
fwait
imul
rclb
scas
sti
sahf
sub
xchg
icebp
iret
xor
mov
dec
dec
or
dec
and
push
int
add
pusha
mov
xor
sub
pop
pop
lahf
loop
insb
cmpsl
stos
pusha
mov
fdivrs
out
repz
mov
mov
sbb
push
popa
int3
mov
sbb
or
jae
repnz
int
inc
lret
add
inc
scas
repz
and
jns
dec
sub
subl
push
testl
sbb
adc
dec
int
adc
rorl
inc
pop
add
cmpsb
mov
mov
pushf
xor
lock
dec
into
shr
lods
lods
sbb
scas
pop
lsl
push
insb
popf
cltd
xchg
cmp
cmc
xor
adc
jns
adc
into
into
mov
andl
jle
xor
lahf
lret
test
mov
cs
or
sbb
xor
sti
pop
loop
leave
pop
aaa
dec
ss
push
fwait
xchg
cmpsb
jo
add
inc
cmp
ficoml
and
into
mov
xor
dec
lahf
jne
and
push
movsl
jecxz
mov
loop
lret
adc
add
ds
push
mov
loope
pop
or
inc
clc
mov
test
xchg
push
cmp
mov
or
cli
shl
lea
jge
inc
je
lds
in
ret
pop
fdivl
mov
sbb
int
mov
inc
pop
pop
arpl
jecxz
dec
sub
xchg
fldlg2
jae
aad
cltd
sub
out
imul
and
inc
jge
inc
out
pop
cmpsb
data16
xor
fstpl
adc
cmpsb
cmpl
cs
lret
mov
mov
int3
ret
ljmp
shl
out
test
repz
in
and
dec
adc
in
sbb
or
xchg
out
mov
or
mov
cmpsb
sub
cmp
pop
dec
popa
lahf
leave
xlat
xor
mov
scas
sub
jae
ret
or
jg
mov
aam
sub
dec
xchg
mov
xchg
push
xor
adc
dec
mov
xchg
dec
dec
cmpsl
mov
call
inc
push
sub
mov
js
out
xchg
jle
out
mov
cmp
cld
mov
mov
inc
adc
sbb
jno
pop
mov
inc
mov
pusha
dec
mov
repnz
shrb
mov
imul
xchg
lds
aaa
push
not
movsl
dec
aaa
sbb
and
fisttpl
sti
mov
imul
push
enter
jb
pop
inc
sbb
pop
mov
pushf
lods
mov
dec
mov
dec
xor
stos
jae
xor
les
movsl
and
and
xchg
inc
cld
aad
pusha
iret
jbe
sti
push
add
xor
mov
push
inc
in
push
sub
add
in
cmpl
cmpsl
lret
outsb
ds
test
dec
cs
cmp
stos
mov
push
or
out
xchg
lods
mov
jno
in
fldcw
mov
pushf
loop
dec
pusha
mov
pop
mov
or
lods
adc
out
sahf
add
cmp
jne
rcr
scas
mov
xchg
ljmp
push
add
rorl
mov
adc
push
neg
cmpsl
push
push
and
mov
mov
test
add
sub
ret
mov
fisttps
shll
rcrb
cmovbe
cmp
push
inc
out
das
cld
mov
fbstp
push
lods
repz
lds
out
mov
pop
adcb
dec
fistps
mov
sbb
sbb
sub
in
in
xor
in
push
cld
push
push
int3
and
ja
scas
jns
out
mov
cmp
lea
cs
dec
mov
dec
scas
lcall
push
lret
icebp
movsb
xor
add
pop
cld
and
push
jae
sarl
stos
jge
and
cmpsb
imul
in
adc
mov
dec
out
jnp
call
push
xor
jg
mov
pusha
push
xchg
sub
jmp
xchg
xor
push
or
mov
sub
inc
gs
inc
fwait
ficoml
adc
test
or
movsb
repnz
fildl
xor
inc
in
out
sbb
inc
int
orb
xchg
inc
cmp
fiadds
xchg
xlat
lods
dec
fs
pusha
jnp
mov
cs
icebp
fdivs
movsl
test
test
ja
ds
fidivrl
les
mov
push
pop
sbb
jp
in
mov
push
mov
bnd
xor
les
xchg
mov
or
ja
or
or
test
sbb
push
das
lock
sub
pextrw
sbb
arpl
dec
aaa
enter
adc
mov
insl
xchg
mov
pushf
test
rolb
inc
fwait
insb
fdivs
mov
std
outsb
add
lds
lock
repnz
out
xor
out
xor
jb
add
test
jge
push
add
nop
xor
jo
enter
and
sbb
aas
sbb
lods
sub
inc
mov
dec
cmc
jb
js
jne
add
or
cli
cmpsl
mov
jge
jns
xor
adc
jns
push
out
xchg
aaa
push
pop
cmpsb
or
mov
pop
inc
pop
outsb
sub
dec
or
sysenter
sub
mov
push
mov
sub
dec
push
jge
add
stos
pop
addr16
lods
jmp
xor
repnz
inc
stc
stc
mov
cld
das
jns
jb
cmp
aad
mov
push
mov
or
shrb
cmc
je
je
stos
inc
xchg
test
add
dec
add
cmpsl
mov
mov
fwait
filds
ja
arpl
hlt
jno
or
addl
nop
cmpsl
pop
repz
pop
xchg
mov
addr16
rorb
jmp
dec
imul
je
lret
mov
or
mov
dec
lret
daa
inc
fcomps
or
mov
dec
sbb
fdivl
add
jg
mov
mov
push
out
mov
jmp
and
shll
cmp
add
mov
push
pop
dec
mov
leave
xchg
jns
jb
daa
inc
pop
enter
sbb
push
sub
fiaddl
cmp
data16
cltd
paddq
cmc
adc
cli
leave
daa
mov
add
mov
or
ret
jae
mov
in
sbb
mov
arpl
aas
mov
clc
dec
ljmp
sbb
inc
in
fcmovnb
cmp
iret
sar
popa
mov
cmp
cmp
jle
jns
sub
es
inc
ror
jg
add
popa
mov
lods
lret
push
mov
data16
sbb
push
js
mov
fs
adc
add
pop
test
and
mov
ret
movsl
pop
test
test
lcall
cmp
inc
mov
cmc
addr16
lds
loopne
dec
ss
or
jbe
stos
gs
cs
mov
stc
xchg
scas
ret
push
sbb
out
sarl
loope
inc
gs
and
cmp
loop
push
jb
jp
pop
nop
mov
fldenv
sbb
and
xchg
cmpsb
insl
mov
in
mov
inc
push
push
pop
push
lcall
mov
ret
ret
enter
jmp
out
enter
loop
push
ljmp
jp
lcall
inc
daa
insl
mov
jmp
or
add
jg
sarb
cmpb
or
popa
push
scas
push
arpl
dec
mov
outsb
ss
push
pusha
repz
rorb
add
gs
test
xchg
add
sarl
and
jne
stc
xor
push
addr16
cmpb
insb
inc
push
std
push
stc
daa
sub
punpckhbw
mov
dec
std
mov
cwtl
mov
or
insl
sbb
lods
insl
push
push
inc
lock
pushf
xchg
and
push
leave
lret
or
sub
adc
mov
jl
jns
mov
in
lcall
push
scas
sti
pop
inc
jmp
sbb
xor
xchg
mov
pushf
sbb
insl
test
lcall
pop
sbb
mov
inc
pop
out
iret
test
inc
sub
or
mov
mov
daa
pop
popa
add
into
mov
sub
pusha
push
clc
jo
inc
mov
insl
add
push
jecxz
in
lret
lret
jns
sbb
adc
shrb
test
les
shr
hlt
test
fcoms
jbe
out
les
fadds
jg
dec
call
mov
jne
jmp
jno
adc
cmp
cmp
iret
dec
mov
add
and
jl
push
test
mov
shl
xor
xchg
lods
mov
out
fsubp
mov
jmp
fldl
xchg
loopne
mov
test
imul
outsl
push
movsb
jno
pop
ljmp
cmp
addr16
fcos
or
inc
jmp
sbb
mov
fdivr
rcr
xlat
popf
pop
and
mov
ds
sub
pop
add
mov
jl
mov
mov
cltd
orb
push
icebp
movsb
and
mov
int
cmc
add
dec
adc
rolb
mov
sub
fsubrs
push
lcall
dec
push
dec
mov
mov
cmc
xchg
outsb
sbb
add
add
test
ficoms
cs
dec
enter
xchg
pop
adc
in
sar
cmp
dec
int
push
mov
mov
out
lcall
xchg
cmpsl
push
xchg
mov
adc
xlat
dec
scas
xchg
sarb
in
fisttps
jmp
pop
je
insb
jno
aam
jno
notb
rolb
mov
sahf
dec
mov
dec
sbb
mov
ret
repz
fwait
cmp
mov
mov
adc
and
leave
mov
sub
fwait
imul
adc
xor
adc
sbb
pop
call
mov
sbb
outsl
mov
pop
aam
nop
imul
loop
out
cmp
stos
mov
inc
pop
lea
push
mov
shll
repz
and
pop
mov
mov
adc
jnp
xchg
sub
sbbl
bound
and
or
out
or
jmp
xchg
insl
mov
pop
cmp
pop
cmovae
loope
xor
inc
adc
not
pusha
sbb
mov
cwtl
mov
sbb
adc
lock
mov
stos
cmp
dec
imul
mov
in
aad
sbb
repnz
jne
scas
mov
xlat
sub
js
ret
fisttps
dec
and
cmpb
rclb
clc
xor
adc
mov
aam
out
pushl
ret
int3
shlb
push
fs
xchg
lea
cmp
adc
dec
imul
pop
cmp
fiadds
test
xlat
mov
jnp
mov
ds
xor
popf
jb
daa
inc
out
pop
aam
jl
xor
mov
push
insb
adc
adc
cmp
out
cmp
fisubl
rcll
out
out
xor
dec
xor
inc
adc
das
jecxz
mov
dec
xor
ret
sub
xchg
stos
outsl
repnz
addr16
ss
dec
mov
inc
push
or
add
inc
sbb
inc
lret
cmp
mov
xchg
push
mov
and
sti
test
lds
cmpsb
push
pop
into
push
in
into
cmp
scas
mov
and
inc
pop
fstpt
jge
cmp
cltd
xchg
lods
scas
and
cld
cmp
inc
push
xor
add
popf
stos
push
cli
cmp
les
shrb
dec
es
push
mov
mov
in
mov
scas
sub
jp
loopne
lock
pop
adc
inc
sub
rclb
and
or
mov
cmp
mov
fmuls
add
scas
mov
and
adc
addl
xchg
pop
cwtl
dec
scas
sbb
and
push
ja
and
add
mov
add
stc
lods
mov
mov
sarb
jb
arpl
fxam
test
jge
push
addr16
cli
or
add
cltd
scas
and
add
roll
mov
cmp
movsl
dec
mov
push
std
mov
out
fcoml
xor
lds
lret
and
dec
mov
cmc
sahf
rcrb
adcb
cli
fsub
jmp
aaa
dec
adc
adc
call
inc
pushl
pop
xor
pop
jns
aam
into
daa
fldenv
insb
icebp
cmpsl
ljmp
cld
call
xchg
clc
imul
stos
fmull
sbb
inc
and
pop
or
dec
inc
rcr
sti
imul
fadd
mov
ljmp
icebp
popf
cmpsb
ficomps
popf
movsb
insl
jmp
xchg
adc
pop
xor
scas
or
fdiv
lret
inc
inc
jecxz
jle
aam
push
fstps
mov
mov
lahf
fdivs
lock
dec
jmp
in
mov
lret
repz
cmp
pop
fsubs
pop
mov
xlat
scas
inc
fsubl
inc
fchs
dec
jo
mov
sbb
mov
cli
sbb
mov
cltd
jge
push
xchg
xchg
dec
cs
daa
out
jo
dec
or
xchg
mov
fsubrl
dec
popl
jno
sub
decb
nop
dec
jle
pusha
fmul
out
sbb
add
ret
cwtl
add
je
adc
pop
fnstsw
lret
push
gs
cmp
mov
repnz
add
loop
loope
push
ror
jo
ja
int
push
jecxz
xor
out
ja
xchg
mov
cmp
add
push
xchg
push
pushf
sahf
stos
sbb
popf
testl
or
mov
jg
sub
cmp
enter
xlat
push
rcl
and
aam
push
fs
cmp
mov
pusha
call
jg
adc
inc
shlb
inc
notl
in
xlat
test
popf
add
inc
sub
mov
xchg
insl
stos
xchg
inc
popf
sub
inc
inc
inc
dec
bnd
in
push
sbb
fbstp
call
sbb
mov
scas
pushf
hlt
pusha
adc
or
xchg
jl
in
xor
lods
into
lcall
aad
data16
ss
cmpsl
adc
addr16
adc
cs
cmc
sahf
or
xor
decb
sbb
cmp
mov
dec
push
push
xor
push
cld
pop
mov
enter
jbe
loope
push
stc
imul
lret
pop
in
jle
or
sub
mov
mov
pop
repz
rcl
cmp
pop
add
cmp
cmp
push
jne
scas
clc
xor
xchg
sbb
mov
xchg
out
jmp
lcall
adc
std
sbb
aam
test
insb
and
jl
rcrl
in
cmpsb
mov
xor
incl
dec
jp
dec
jle
pop
pop
add
ljmp
mov
int3
mov
test
inc
in
sbb
dec
xchg
or
rcl
ret
fwait
out
jmp
fistl
lea
bswap
xlat
mov
pop
mov
jle
aam
sub
and
mov
xchg
mov
das
sbb
adcb
mov
adc
ljmp
lods
lods
subb
lock
pop
mov
lret
pop
cmp
ljmp
lret
lds
imul
pushf
subb
dec
stc
cmp
cs
push
int
test
xchg
cmp
xor
outsb
lea
fists
xor
inc
mov
xor
clc
or
shll
gs
fnstsw
iret
pop
and
mov
icebp
add
sahf
pop
mov
dec
in
int
xlat
dec
push
jmp
outsl
das
mov
jbe
flds
jbe
mov
pop
sbb
mov
adc
repnz
sbb
into
cltd
jg
movsl
mov
and
adc
test
js
jle
cmp
xchg
or
adc
rcrb
ds
movsl
imul
add
dec
out
dec
cmp
out
or
in
jl
pop
out
nop
jp
fstps
insb
pop
std
sbb
inc
pop
out
lock
out
jnp
or
imul
rcrl
adc
cwtl
mov
adc
pop
sub
enter
xchg
jno
cmp
pop
lods
dec
cwtl
rorb
sahf
push
lds
fnsave
call
stos
sbb
add
xchg
stos
jle
ljmp
mov
cld
push
cmpsl
dec
and
cli
mov
aaa
adc
jno
inc
push
out
cmp
shld
or
jmp
bound
jb
js
imul
xor
push
imul
xor
stos
inc
mov
mov
jne
mov
aad
cmpsl
test
mov
adc
ja
nop
and
jle
leave
jg
in
movsb
stos
test
popf
loopne
movb
and
push
ljmp
cmovns
or
orl
add
sbb
imul
xchg
xor
outsl
gs
push
int
fstl
cld
or
cmp
adc
xor
push
fstpt
bound
pop
push
mov
push
cmc
shlb
sysret
xor
cmp
jne
jp
rcl
inc
mov
call
orl
loope
sahf
xor
sub
daa
pop
sbb
add
ja
sub
or
pop
js
push
mov
xor
mov
jle
fisttps
sbb
cs
mov
lcall
pop
xor
mov
popa
pop
ja
or
js
js
aam
adc
inc
sub
outsb
pop
xlat
jno
or
sbb
out
divl
repz
loope
int3
xchg
scas
jno
push
cmpsl
add
mov
xor
mov
xchg
cmp
cwtl
push
out
mov
lret
xorl
imulb
adc
nop
xchg
sub
out
jb
cld
sbb
lock
daa
lods
daa
dec
mov
adc
leave
xlat
and
cmp
jp
xchg
call
mov
hlt
testb
sbb
push
ret
ret
loopne
sub
jle
pop
pop
out
outsb
mov
sti
push
fucomip
pop
negb
xor
je
cmp
loopne
jns
mov
les
test
xlat
pop
inc
mov
shll
mov
sub
adc
xlat
cmp
mov
loope
addb
inc
aad
jge
xchg
sub
push
pop
xor
xchg
arpl
cmpsl
cmc
aas
outsb
out
or
shrb
sub
in
imul
mov
movsl
mov
fstl
mov
je
dec
mov
jbe
cld
jno
rcr
int
out
es
mov
adc
sbb
push
cld
aad
ds
mov
sub
cs
jge
or
jge
hlt
mov
ret
mov
mov
out
imul
sub
fidivl
jne
xor
out
pushf
inc
jge
fistpl
mov
loopne
pop
mov
sbbl
lret
call
cmpl
clc
scas
aaa
aad
shrl
jne
sub
pusha
adc
aaa
mov
push
sbb
repz
jnp
xchg
outsb
xor
inc
call
in
loope
es
aas
pop
js
in
jne
add
je
sbb
pop
jl
sub
int3
fisubrl
mov
adc
mov
xchg
fwait
mov
sbb
sbb
jge
xchg
dec
imul
insl
repz
loopne
cmpsl
xor
inc
scas
dec
daa
nopl
jnp
dec
js
lret
sbbb
ljmp
xlat
jg
aaa
and
jb
sahf
push
mov
push
adc
dec
out
cmp
pop
push
jae
ja
cmp
xor
push
inc
mov
mov
push
jmp
in
mov
mov
dec
cwtl
cs
xchg
lds
lods
add
mov
syscall
mov
test
jmp
in
mov
shlb
shll
dec
jo
fildl
push
jae
and
inc
mov
jge
mov
sub
push
lods
fwait
push
popa
or
xchg
push
cmp
test
cmc
push
fwait
daa
xchg
movsl
inc
mov
jb
jne
insb
jmp
sahf
inc
mov
or
hlt
popa
sbb
mov
adc
inc
into
mulb
and
sbb
mov
add
lock
call
add
jmp
movsl
insl
push
push
fs
sub
ret
jl
scas
mov
lahf
int
mov
pop
cmp
xor
imul
jp
lods
inc
pusha
mov
aam
das
cltd
leave
push
leave
add
jnp
stos
movsb
in
lcall
or
or
push
ret
sahf
pop
repnz
out
test
xchg
inc
mov
into
pusha
mov
repz
imul
arpl
lcall
jl
imul
push
stc
and
dec
mov
out
jl
nop
cwtl
xor
fsubrl
stos
adc
sahf
cmp
or
lahf
fs
lcall
inc
jno
stos
lcall
inc
xchg
sahf
push
mov
pushl
ffree
or
ss
fnstsw
imul
xor
rcll
in
xchg
lgs
fwait
cli
xchg
push
sbb
and
adc
jno
jne
fiaddl
sbb
jge
add
jecxz
loope
cltd
bound
pop
jns
and
dec
subb
jbe
mov
aam
cmpsb
aam
mov
dec
sbb
mov
adc
loope
and
push
outsb
fs
and
cltd
test
scas
outsl
sub
pop
outsb
xlat
nop
mov
adc
push
and
sbbl
cmc
mov
ss
cmp
xchg
push
das
shlb
jle
pop
mov
pop
cmc
push
xor
movl
mov
mov
pushl
ja
inc
mov
inc
data16
sti
pusha
stos
outsl
lret
sarl
or
xchg
xlat
fsubr
in
dec
dec
je
aam
add
and
push
xlat
inc
xor
and
lods
push
or
xlat
lahf
inc
dec
jmp
leave
jmp
fnstsw
fwait
lret
insl
mov
jmp
mov
xchg
bound
push
clc
and
aad
rcrl
jge
lahf
aas
shll
inc
xchg
dec
out
push
sub
xchg
jle
lock
fidivrs
test
sbb
inc
ja
repz
and
add
int3
dec
mov
into
loopne
mov
xchg
push
adc
pusha
out
mov
jle
xor
cwtl
push
pop
and
lahf
std
imul
cltd
push
ljmp
add
cwtl
mov
xor
sub
push
iret
dec
xor
gs
out
leave
or
inc
fsubl
xor
sub
dec
incl
fldt
btc
jbe
mov
rclb
push
int
pop
inc
das
jo
push
pop
xchg
jnp
lods
pusha
xlat
mov
inc
xchg
ljmp
andb
jmp
cmpsl
cmp
cwtl
cs
pop
fstpt
mov
shll
aas
fldl
ljmp
xchg
sarb
imul
push
add
xchg
xor
bound
lods
add
cmp
ja
push
dec
stc
lds
jge
dec
shll
icebp
mov
adc
sahf
cli
pushf
cmp
out
sbb
lea
cli
xlat
xor
stc
aaa
push
jle
lods
pop
or
mov
imul
xor
push
andb
jns
neg
inc
hlt
cwtl
xorl
push
push
mov
adc
add
add
inc
fwait
mov
decl
sub
insl
bound
mov
inc
mov
cltd
sbb
jmp
popa
inc
aas
aaa
js
movsb
xchg
or
scas
adc
adc
add
imull
loope
test
repnz
data16
in
aaa
fwait
sar
and
imul
sbb
in
leave
addl
inc
int3
sbb
dec
cltd
cmp
sarb
jmp
jg
or
ffree
nop
fs
cltd
daa
into
adc
pop
adc
or
mov
roll
rcrb
or
sbb
lds
lds
mov
orl
cmpsl
out
mov
je
mov
push
ljmp
pop
data16
mov
inc
adc
push
pop
jne
dec
incl
mov
shll
sub
pop
mov
pop
popf
lcall
subl
in
je
cmpsl
mov
pop
jecxz
je
add
into
sub
jnp
nop
daa
inc
out
sub
lods
mov
in
out
dec
repnz
xchg
insl
xchg
leave
sbb
fs
mov
add
and
cmp
mov
mov
push
xor
cwtl
lods
inc
xlat
jge
or
push
je
sbb
adc
ljmp
subl
and
je
add
cmc
in
cmp
loopne
jae
push
lret
ftst
popa
xchg
inc
imul
sub
jg
xchg
sti
xchg
jecxz
xor
rcll
nop
or
xchg
or
dec
cltd
fnsave
shlb
rol
js
sti
adc
adc
push
bound
call
inc
insl
or
in
movsl
insl
xor
push
movsl
cld
jecxz
mov
cs
mov
test
or
lcall
sbb
pop
adc
stos
loopne
enter
aas
fs
and
sbb
cs
inc
cmpb
sti
pop
mov
sti
loope
jge
push
mul
inc
sub
jmp
fistl
es
loop
mov
and
fidivrl
loopne
pop
in
mov
sbb
cmc
adc
pushf
sub
leave
lds
mov
ss
cmc
lret
cwtl
mov
push
xchg
lods
repnz
hlt
inc
push
jmp
sbb
sahf
les
in
add
dec
xchg
sub
fwait
fisttps
and
scas
fsubrs
jg
sub
jmp
push
jp
cld
ds
dec
mov
outsl
int3
rol
sub
pop
sbb
lods
movsb
or
pusha
mov
sub
xchg
sbb
scas
iret
xlat
and
pop
push
out
notl
pop
xchg
test
std
loop
jno
add
pop
dec
loope
mov
lret
fisttpl
jp
pop
jbe
adc
fbld
rcrb
xor
fcomip
sbb
sub
mov
in
das
sarl
pop
ss
sub
xchg
xor
arpl
dec
pop
jns
xchg
mov
pushf
and
sub
in
cwtl
xchg
lods
cmp
sti
lret
imul
mov
fistl
out
or
xchg
cmp
and
pop
inc
cld
jmp
pop
mov
pop
sub
shl
push
lds
imul
lea
push
repz
stos
sbb
inc
adc
in
fcompl
or
in
jp
xchg
or
inc
xchg
fwait
insl
cld
mov
mov
bound
cld
sub
stos
jl
xchg
ficoml
pop
pop
shld
inc
xor
test
dec
or
lret
popf
jl
pop
sub
rcrl
add
js
mov
fsts
fsubp
adc
push
movsl
jns
pop
push
mov
shll
fyl2xp1
js
push
mov
out
scas
stos
pop
push
sbb
hlt
pop
xchg
add
inc
adc
aaa
add
rcll
jne
call
inc
mov
out
test
mov
sbb
fucomp
adc
sub
jno
cmp
mov
test
xchg
push
jae
jg
add
paddusb
in
fstl
addr16
fcoms
cli
push
ud0
jns
jae
add
adc
scas
sbb
cs
sbb
xchg
xor
call
sub
dec
sub
cmp
lods
movsb
testb
subl
pop
repz
movsl
xchg
pusha
sbb
and
mov
scas
test
mov
mov
ja
pop
jge
cmp
jp
inc
sbb
imul
arpl
cmc
jmp
mov
fwait
or
jb
dec
adc
lret
out
add
sbb
push
inc
loopne
shrl
sub
sub
push
inc
stos
jns
mov
pop
movsl
and
addr16
pop
cwtl
pop
rcl
arpl
sbb
adc
mov
lock
in
lock
xchg
sub
push
mov
adc
sbb
imul
jp
lret
in
inc
stc
dec
cmpb
add
notb
push
pop
int
xchg
sbb
scas
mov
gs
cwtl
sub
aam
out
fwait
push
outsl
lahf
jb
dec
or
aas
fldcw
repz
clc
cmp
cmc
pushf
adc
test
mov
pop
jge
mov
cld
sarl
adc
add
fldl
jbe
mov
xor
je
jg
pop
pop
call
xor
xchg
cmpsl
xor
sbb
into
jmp
ja
cmp
jg
test
in
cwtl
rcrb
mov
push
jo
jl
xor
adcl
mov
lahf
mov
lret
lahf
scas
call
aaa
sbb
sbb
daa
std
out
sbb
out
into
pop
lods
divb
lods
imul
jle
cwtl
mov
adc
pop
movsb
aad
cmp
xchg
xchg
jmp
ja
loop
ror
into
lcall
lcall
inc
or
xor
aam
or
add
and
dec
adc
xor
lds
daa
aam
mov
nop
jno
sarb
popf
push
mov
in
cli
cmp
adc
movsl
leave
shll
dec
mov
mov
pushf
mov
nop
push
adc
pop
cmpsb
jmp
test
xchg
int
cwtl
mov
aaa
movsb
sahf
pushf
add
leave
jmp
or
pop
mov
mov
rolb
shll
mov
mov
pop
out
pop
sub
subl
lcall
js
dec
sbbb
in
outsb
inc
push
cld
pop
negb
inc
cmp
and
jnp
lods
jb
cmp
sbb
lcall
inc
inc
hlt
ret
ret
and
jb
ss
loopne
xchg
fs
and
arpl
in
lea
fidivrs
sbb
pop
mov
gs
push
adc
sti
shrl
fistpl
jo
mov
loopne
inc
xchg
xlat
icebp
inc
in
push
pop
fsin
data16
lret
xchg
dec
into
pop
pop
push
pop
xor
jno
xorl
push
lock
adc
pop
stos
lods
fwait
pusha
xor
inc
adc
sbb
jne
push
ljmp
xor
out
mov
les
mov
jns
cmc
in
nop
jecxz
sbb
dec
lahf
loopne
cmp
pop
popf
neg
mov
in
sti
sub
dec
pop
cmp
and
outsl
push
out
lea
iret
call
icebp
inc
sti
cmpb
and
sbb
mov
outsl
mov
int
push
das
lea
jecxz
mov
addr16
or
out
ret
mov
aas
and
pop
xchg
cmp
jmpw
cld
inc
int3
inc
movsb
adc
sub
sub
js
rcrl
push
pop
mov
xorb
adc
sub
lods
sahf
hlt
jl
ficoml
fnstenv
mov
dec
mov
xchg
pop
cmovae
fldl
push
mov
push
jge
ficoml
jmp
xchg
lcall
xor
push
jnp
mov
dec
adc
or
pop
dec
xchg
jne
mov
test
xchg
pushf
test
add
jb
cmp
loop
dec
dec
fidivrs
insl
dec
jmp
mov
dec
fcoms
leave
and
inc
mov
fnsave
push
and
jge
adc
int
popf
pop
data16
test
mov
call
movsb
test
test
out
loopne
decb
xchg
pop
out
daa
insl
dec
mov
mov
inc
ja
into
mov
xchg
mov
pop
ficompl
sbb
mov
ja
push
ds
lret
lea
mov
lar
and
lods
push
dec
dec
xlat
orb
mov
in
and
push
imul
or
xor
and
fadd
and
mov
in
push
popa
mov
dec
adc
movl
cmpsb
push
fwait
pop
adc
stc
je
outsb
loop
jno
xchg
cmp
mov
data16
lahf
dec
repz
test
scas
shlb
mov
push
mov
rorl
shl
mov
jecxz
daa
out
jp
ret
and
daa
push
push
dec
mov
jl
ja
lods
lock
movsb
mov
outsl
push
std
pop
sbb
inc
cmp
mov
mov
pop
jne
imul
into
cmp
xchg
pop
dec
fwait
pop
out
mov
ljmp
sahf
dec
mov
add
xchg
and
cmp
sbb
insl
into
js
daa
out
out
lahf
add
push
ljmp
je
and
test
inc
fmull
scas
mov
out
fwait
add
inc
in
dec
lret
jno
jo
mov
sbb
mov
dec
xor
pop
out
loopne
out
jle
mov
jg
pop
or
aad
dec
add
cmpb
imul
pop
into
cmpsb
xchg
andb
add
xchg
outsl
movsl
xchg
mov
addr16
pop
push
out
aaa
mov
lret
in
xchg
jbe
cli
shlb
iret
dec
enter
enter
adcb
scas
adc
out
rcrb
pop
test
push
popa
xchg
and
xchg
enter
sbb
shl
xchg
sahf
xchg
in
ja
or
add
jne
leave
mov
mov
push
mov
jg
test
mov
or
and
sbb
sub
mov
jbe
mov
jle
js
test
dec
push
adc
jo
sbb
or
mov
xor
pop
test
cmp
mov
decb
pop
in
mov
pop
pop
pop
orl
fmull
sti
push
and
cmpb
notl
clc
loop
add
leave
xchg
push
mov
movsb
enter
sub
mov
xchg
int3
imul
insb
fldenv
sub
lret
fisubs
addr16
inc
out
pop
jb
jb
je
mov
jb
or
fcoml
xor
cmp
lret
not
mov
inc
mov
push
xor
lcall
jbe
mov
ret
int3
mov
stc
mov
and
and
and
mov
mov
jnp
js
cmp
ljmp
jecxz
pop
addr16
xor
lods
lahf
pusha
int3
push
jl
sub
testl
lret
lahf
inc
lock
jg
das
push
sbb
popa
cmp
std
or
or
imul
lret
cmpsl
add
pop
cmp
enter
xchg
ja
pop
test
push
mov
movsb
gs
dec
push
add
shll
fwait
mov
xlat
mov
iret
inc
or
pop
adc
mov
sahf
xchg
inc
mov
sahf
loop
sbb
mov
mov
fisttpl
stc
add
mov
dec
cli
ret
lret
xchg
ss
jmp
pop
mov
std
push
add
jno
lahf
sahf
jl
gs
fcmovu
rcrb
out
out
out
sbb
jecxz
cmp
jns
out
fisttpl
inc
movsl
and
pop
inc
push
clc
mov
pop
mov
in
mov
inc
or
jo
pop
jnp
cld
push
out
pop
mov
fnstenv
stos
adc
push
jge
mov
out
sahf
mov
push
out
icebp
mov
repnz
aaa
fsubrl
aaa
and
std
imul
in
je
lea
jnp
mov
add
flds
xor
and
pop
adc
push
bound
mov
pop
sbb
mov
sbb
xchg
inc
into
xor
jg
or
mov
shlb
cld
addr16
sub
into
call
cwtl
shrb
inc
push
adc
jge
xchg
arpl
mov
call
inc
mov
outsl
xchg
aad
jns
in
jp
jle
es
mov
sub
mov
cmpsl
inc
inc
add
pop
sub
sarl
pop
sub
adc
scas
add
xchg
mov
das
inc
sbb
fstpt
imul
bound
or
aam
jl
xlat
ret
out
jo
lea
mov
or
aas
dec
nop
imull
popf
push
adc
ljmp
cmp
inc
and
push
in
imul
pop
mov
and
scas
push
mov
add
push
dec
in
push
cld
cwtl
dec
stc
sbb
in
cmp
or
xchg
cmpsl
inc
adc
cmpsl
pop
fbld
repnz
cmpsl
movsl
fwait
ret
mov
xor
data16
call
sub
cmp
shl
mov
mov
sysret
push
pop
xor
inc
lods
out
fldcw
mov
mov
mov
fidivrs
dec
out
insl
sarb
or
jae
out
jp
jmp
push
jbe
sbb
cmp
and
out
or
cmp
xor
lret
rcrl
call
and
sub
lods
loopne
sub
sar
movsb
cmpsb
nop
rorl
sarl
and
jne
ss
pop
add
adc
mov
imul
pop
push
call
mov
cld
rcrb
or
popf
movsb
dec
dec
rolb
cmpsl
xchg
jecxz
push
pop
and
dec
fs
inc
jecxz
fwait
fs
fstpt
aaa
mov
jge
jne
fsub
xchg
hlt
mov
nop
adc
test
sub
push
push
fcompl
fsub
std
stos
sub
or
pop
std
mov
les
or
imul
cmp
sbb
dec
cmpsl
inc
orb
cmpsl
mov
sub
or
test
fwait
scas
lds
cli
xor
or
adc
pop
inc
mov
sbb
add
push
mov
daa
inc
sbb
push
movsb
filds
mov
add
jp
lcall
test
mov
inc
scas
pop
mov
add
fnstcw
fdivrs
into
movsl
clc
sbb
push
pop
jo
jl
inc
push
add
fcomip
pop
repnz
loopne
cld
xor
push
cwtl
push
xchg
lods
mov
hlt
mov
push
add
dec
push
inc
adc
jp
or
mov
mov
adc
repnz
lahf
mov
sub
xchg
or
out
xor
push
cmp
test
fldt
xlat
sbb
lcall
lods
shr
in
aam
push
sbb
cmp
sub
xorb
jge
jge
ret
mov
fwait
clc
test
mov
pop
repz
push
repnz
or
jecxz
pop
cmp
cmpsl
out
xor
push
mov
adc
add
hlt
mov
push
dec
mov
or
or
pop
mov
adc
sbb
je
shlb
call
jge
jge
nop
push
inc
add
adc
jno
jae
and
outsl
dec
sahf
mov
fldl
push
sbb
es
bound
jmp
inc
pop
xchg
jno
cs
fsubrp
lahf
pop
nop
fnstenv
or
inc
loop
insl
dec
lods
lods
out
jmp
sub
faddp
arpl
pop
dec
out
jo
sbb
add
mov
lods
pop
cmp
mov
repz
pop
cmpsb
int
orl
jnp
test
cmp
addr16
sbb
mov
lods
movsb
add
js
mov
or
mov
test
addr16
dec
mov
aad
and
les
push
add
loope
xor
fcmovnb
jp
mov
push
cli
mull
cltd
mov
mov
lods
lahf
or
aas
loop
adc
cmp
sbb
sbb
and
bound
inc
lods
ds
idiv
jle
add
pop
or
loope
pop
jmp
popf
sub
jno
iret
adc
push
repz
push
mov
dec
nop
push
mov
inc
call
xchg
xchg
adc
inc
imul
lock
push
ss
and
sbb
jbe
jbe
cmp
int
sub
cmp
ret
adc
jmp
int3
pop
mov
xchg
out
jno
push
lcall
imul
test
mul
lods
add
jle
mov
ljmp
ds
popf
add
mov
cld
das
jp
mov
icebp
sbb
in
inc
dec
mov
jp
popa
fidivs
dec
push
rclb
ja
dec
test
mov
int3
mov
jge
or
call
xchg
fsubrp
mov
not
out
popa
mov
add
cs
cmp
sbb
mov
dec
mov
pop
push
and
cmp
ss
int3
xchg
xchg
cmpsl
or
cmp
mov
insb
push
aaa
leave
fistpl
test
lret
in
ret
mov
decb
cmp
fmuls
adc
andl
shlb
lods
xchg
popa
inc
fwait
xchg
jbe
jecxz
and
push
adc
shlb
adc
outsl
in
and
stos
mov
cmpsb
xchg
int
mov
xor
insb
mov
insb
fpatan
mov
add
data16
xor
imul
ss
xchg
subl
sti
inc
movl
mov
mov
cmp
imul
popf
scas
mov
mov
xor
subl
sarb
mov
jnp
mov
mov
push
xchg
cmpsb
mov
mov
das
pop
adc
xchg
mov
jno
out
pop
fcomip
jl
mov
cmpl
xchg
xor
or
call
mov
clc
inc
cmp
jmp
pushf
mov
sti
inc
mov
xor
in
mov
adc
in
jmp
and
test
fwait
mov
lcall
out
pushf
outsl
nop
popa
nop
repnz
jmp
mov
vmovntps
cmpsl
dec
pop
loopne
fdivs
shlb
push
fcoml
mov
out
sbb
push
push
push
cwtl
repz
aaa
mov
mov
ss
stos
inc
xchg
loop
fs
and
daa
std
or
popf
push
in
cs
cld
sbb
iret
bound
and
push
pop
lcall
push
push
lods
jb
add
cltd
sub
xchg
sti
std
jns
in
fdivl
inc
jns
mov
cli
push
sbb
sarb
movsb
jl
sbbb
adc
xlat
int
and
out
jl
push
jl
inc
outsl
jae
jo
fstpl
or
adc
inc
xchg
out
dec
clc
add
adc
mov
add
mov
push
iret
arpl
pop
aas
std
int3
xchg
jbe
jle
testb
or
add
adc
mov
mov
xchg
mov
sub
shll
mov
add
mov
inc
out
movsb
mov
mov
insl
loopne
jle
repnz
rol
daa
mov
movsb
adc
inc
arpl
mov
imull
push
pop
push
jle
out
push
pusha
sbb
jnp
push
out
adc
je
fldenv
out
stos
imul
sahf
add
cmpsl
pop
pop
daa
cmovnp
insl
mov
fnstenv
xlat
jp
mov
push
jl
push
xchg
jne
xchg
cmc
jge
sbb
out
fldl
push
lret
xchg
fsubrl
xor
ds
jno
push
inc
lret
xor
int3
fidivl
mov
sbb
mov
sbb
mov
or
adc
xchg
lock
subl
and
sub
je
mov
adc
jmp
es
xchg
push
pop
adc
pop
sub
mov
push
or
sub
ficomps
add
mov
add
loope
out
lahf
lock
mov
loopne
mov
xlat
daa
push
lcall
xchg
mov
int
aad
mov
mov
mov
or
insl
jae
inc
or
pop
jne
mov
xor
jge
test
gs
imul
je
mov
mov
mov
shrl
dec
sub
aas
icebp
xor
pop
sbb
les
jle
scas
rcll
inc
ss
sbb
sbb
repnz
xchg
xchg
cmc
aam
xor
in
fwait
and
mov
outsb
or
push
scas
test
xchg
mov
ja
jg
adc
cmp
and
sbb
xchg
dec
stos
inc
mov
inc
jge
lahf
ficoml
pop
adc
or
leave
lret
mov
cmp
clc
pusha
push
jbe
cltd
inc
and
insb
mov
sub
lods
dec
fcomps
push
jge
out
cmp
sbbl
dec
mov
cld
and
and
cmpsl
mov
insb
push
adc
add
mov
cmp
jbe
idivl
and
mov
stos
dec
xchg
test
data16
es
in
pop
fnstenv
cmp
xor
cs
bnd
adc
jno
inc
cmp
mov
insl
or
andb
sub
imul
pop
inc
enter
sahf
sbb
jno
xchg
adc
push
dec
push
out
insl
mov
hlt
add
or
out
imulb
mov
outsb
pop
pmulhuw
aam
mov
mov
cmpsb
mov
or
fdivrp
out
xchg
cmp
iret
leave
push
fsubrl
mov
mov
mov
fwait
subl
cld
out
lock
adc
mov
jno
cmp
xchg
xchg
stos
pushl
mov
jmp
or
inc
fs
push
popa
xchg
loopne
insb
jmp
cs
sti
mov
daa
xchg
dec
lods
pusha
call
and
cmp
dec
pusha
mov
mov
adc
in
movsb
mov
fbld
or
jae
loopne
xor
repz
mov
sub
lahf
aaa
xchg
pop
sti
xor
adc
add
out
fwait
jmp
stc
lret
jb
xchg
test
out
mov
cmpsl
enter
and
in
shll
fwait
push
push
out
and
cmpb
adc
mov
rep
shlb
out
mov
loopne
jo
pushf
scas
out
orb
inc
pop
push
mov
inc
lret
mov
push
js
or
xor
xchg
enter
cmp
punpckhdq
fistpll
jns
out
cmp
adc
sbb
arpl
pop
jmp
pop
cld
mov
orb
ret
pusha
push
imull
into
maskmovq
popa
jnp
std
jg
sub
adc
mov
in
push
fdivs
clc
mov
sub
incb
mov
in
repz
jnp
pushf
sbb
sub
decb
sbb
jo
scas
divb
sub
fstpt
mov
adcb
jno
cwtl
test
mov
lods
pushf
daa
insl
pop
xlat
cmpsb
xchg
out
fidivrs
data16
repnz
fs
int
sbb
lcall
faddp
das
mov
add
inc
sbb
outsl
les
icebp
cmp
jecxz
mov
push
add
lods
out
pop
cltd
lods
insb
mov
xchg
mov
xor
divl
cmp
les
repnz
pop
inc
sub
popf
xor
jns
ljmp
insb
xchg
jns
into
jmp
lret
inc
popf
cmp
cli
loopne
xchg
cltd
sub
cmpsb
adc
das
sub
stos
imul
jno
fwait
dec
addr16
xchg
mov
dec
call
aas
mov
push
lods
mov
aam
xor
push
cmpsl
push
cmp
jo
jp
xchg
sbb
loopne
sarl
inc
gs
xor
push
fistps
push
xchg
clc
enter
lea
cwtl
lock
aas
add
xor
mov
xlat
imul
lea
push
pop
cwtl
sub
loop
push
bound
push
lds
mov
mov
lea
inc
andl
xchg
sub
inc
mov
outsl
cmp
inc
call
pop
push
adc
loop
mov
popl
into
or
in
mov
inc
xchg
testb
adc
loop
xchg
lret
stos
in
pusha
dec
sub
iret
jmp
mov
pop
add
cmp
and
cmp
lds
adc
or
mov
add
mov
test
in
sub
add
scas
mov
jne
jae
lcall
orb
lahf
aam
je
std
cwtl
push
xor
cmp
add
adc
fs
jl
data16
sbb
adc
loopne
xchg
xchg
cmpsb
lock
je
pop
and
push
sbbb
xchg
test
sahf
je
insl
push
push
lock
lret
popf
loopne
sbb
pop
mov
aad
push
jp
call
cli
mov
jl
dec
pusha
call
sbb
jb
sar
cwtl
in
fsubp
call
jl
stos
icebp
and
lods
int
sub
negb
ljmp
and
xor
adc
rorb
lahf
push
sbb
or
cli
movsl
sti
mov
jl
xchg
or
scas
jge
mov
jl
jecxz
cmpsl
xchg
inc
lods
lcall
aas
aas
and
aam
jo
cmp
inc
adc
adc
sub
xor
adc
xchg
cmpsb
lcall
mov
adc
sbb
in
fwait
call
push
in
xorl
jns
out
gs
test
ja
sbbb
je
pop
mov
pop
xor
movsb
je
cmpsb
sub
and
sub
cmpsb
pop
sbb
fucomip
push
popf
jne
mov
adc
inc
xor
push
es
cmc
out
pop
movsl
scas
adc
xchg
cmpb
in
loope,pt
cmp
push
in
pushf
fistpl
push
jbe
in
jg
adc
and
je
push
fstpt
mov
push
rolb
mov
fists
sbb
dec
push
xor
fists
dec
repz
xchg
hlt
xlat
into
test
stc
cmp
sbb
stos
push
pmaxub
and
push
dec
fwait
xor
push
cmpsl
stc
push
cmc
call
es
and
inc
jle
pop
dec
idivl
scas
in
test
ds
adcl
cltd
push
mov
aas
mov
ljmp
jne
inc
xchg
lret
in
inc
cmp
sbb
into
mov
mov
dec
out
icebp
xchg
mov
pushf
xchg
ljmp
loopne
rcrl
mov
dec
pop
jb
popf
pushf
jno
lcall
es
loopne
push
mov
adc
sub
mov
jl,pt
jnp
inc
xchg
aam
sar
je
mov
out
int
push
mov
add
xchg
fdivr
add
divb
mov
inc
sbb
dec
inc
cltd
inc
scas
sbb
lret
call
lret
popa
jmp
sahf
mov
mov
in
jne
xchg
fstpl
push
flds
in
add
loope
dec
push
loopne
xchg
rorl
cmc
or
in
mov
xchg
jnp
cmp
push
pushf
lods
test
imul
xor
sbb
orb
xor
jl
mov
lret
test
shlb
mov
aad
orl
pusha
dec
inc
or
sbb
mul
dec
jne
insb
inc
mov
jg
mov
pop
adcb
adc
inc
mov
test
movnti
mov
or
es
cli
bound
or
cli
adc
mov
add
inc
add
jb
mov
in
jg
stos
movsb
mov
sti
sbb
xor
mov
cmc
or
push
jl
adc
sahf
sbb
add
out
inc
fs
aad
fwait
leave
shl
or
dec
cmp
call
mov
mov
and
inc
rcrb
lret
icebp
je
and
mov
push
cmp
lock
int3
mov
lahf
sbb
sub
and
scas
int
pop
popf
sbb
aam
xchg
mov
or
shl
xor
or
push
sub
adc
lret
test
sbb
sarl
adc
and
in
or
and
add
jnp
adc
mov
mov
cld
cld
xchg
jae
xchg
jecxz
aam
movsb
xor
in
mov
mov
dec
mov
xor
xchg
pop
cmp
in
push
dec
es
pop
data16
retw
and
cmp
pop
or
dec
cmpsl
mov
mov
ret
xor
and
std
bound
xor
jb
cmpsl
or
nop
iret
int
je
popa
imul
add
das
inc
lods
test
in
mov
xchg
imul
leave
rclb
aam
push
xor
mov
xor
add
adc
xchg
iret
das
mov
pushf
sub
pop
shr
repnz
push
dec
insb
cli
xor
test
jb
nop
dec
xor
fists
push
sti
push
mov
lret
cmpsl
add
daa
mov
mov
dec
popf
or
nop
lods
cmpsb
pop
in
and
add
mov
pusha
add
loope
mov
leave
test
push
and
mov
rcll
mov
fxch
enter
sti
je
stos
push
xor
lahf
add
imul
inc
xor
lods
cltd
push
or
icebp
out
shlb
pop
das
jo
fidivl
mov
sbb
cld
dec
mov
mov
mov
sub
sub
mov
push
lret
pop
add
out
out
pop
subl
and
dec
jge
adcb
cmp
les
pushf
and
xchg
nop
or
dec
and
fwait
or
xchg
cmp
lods
mov
or
or
fstpl
adc
fsts
mov
mov
aaa
aaa
mov
lahf
adc
es
lods
fistpl
push
icebp
mov
into
inc
pop
pushf
pop
pop
and
repz
or
cmpsl
inc
nop
xor
mov
rcr
mov
pop
adcb
xor
cmp
cmpsb
pop
add
cli
push
imul
je
mov
inc
cltd
and
js
ds
shll
mov
hlt
scas
xor
adc
testb
rolb
mov
lods
sbbb
jmp
mov
fsts
mov
fidivl
sbb
arpl
mov
lds
or
and
jp
and
adc
mov
jb
jae
cwtl
imul
pusha
in
hlt
dec
xor
add
scas
inc
sahf
hlt
cmp
imul
sar
jp
mov
pop
jns
sbb
jns
aaa
mov
mov
cmc
jle
dec
push
or
aam
call
mov
nop
or
xor
adc
add
subl
jle
cld
jp
rclb
rorl
test
xor
jnp
mov
scas
dec
shr
xchg
sub
outsb
mov
mov
aam
stos
movsb
pop
xchg
pop
cmp
loope
repnz
mov
sub
mull
sahf
cwtl
dec
add
fcmovne
addl
or
push
gs
repnz
jae
add
gs
sub
sub
inc
pop
inc
push
in
adc
cmp
xchg
adc
pop
xchg
sub
fwait
jne
cmc
or
inc
adc
enter
cmp
jo
xchg
into
mov
lock
lods
repnz
cwtl
mov
cmp
push
in
aas
jne
cltd
dec
aad
pop
mov
ficoms
or
movsl
push
aad
mov
cli
mov
add
lcall
test
or
sbb
add
loopne
fwait
nop
xor
and
jl
rcrl
clc
xchg
jl
mov
rol
iret
mov
push
pop
jne
mov
push
sbb
sub
cmp
pop
mov
cmp
fiadds
es
int
adc
mov
xchg
ret
addl
cmpsb
xor
outsl
out
lahf
jbe
lcall
fdivrs
loopne
add
sbb
xlat
cmp
icebp
xor
push
jne
xchg
popf
push
lcall
mov
jp
sub
ss
pusha
mov
mov
dec
lods
ds
addb
ret
repnz
mov
aam
dec
sub
pop
rcrl
push
mov
dec
mov
or
jg
sub
pop
mov
adc
xchg
aad
fisubs
addr16
and
into
xor
inc
push
xchg
icebp
cmpsl
icebp
push
jno
imul
loop
or
inc
out
mov
mov
and
loopne
aam
sbbl
movsl
sub
cmp
cmc
sub
fmuls
cmpsb
xchg
sub
mov
aaa
shl
sbb
cmp
xor
adc
mov
enter
repz
dec
test
je
jl
cmc
scas
std
cltd
ret
lock
subb
sub
into
sub
mov
push
cli
and
sbb
jmp
hlt
dec
jae
lods
aad
xor
rcr
loop
mov
xchg
stos
mov
rcrw
test
inc
xor
mov
pop
push
int
sub
jmp
cmp
cmc
shlb
lea
and
push
xchg
jb
aam
inc
dec
add
dec
test
call
lods
lcall
cli
jo
cmc
and
cmpsl
jae
mov
dec
rolb
xchg
aaa
jno
lret
push
dec
inc
xor
sbb
cs
scas
mov
add
cli
sub
scas
pop
dec
xchg
iret
sbb
xlat
add
repz
pop
popa
xchg
js
xor
inc
adc
bnd
dec
dec
and
pop
fwait
dec
cltd
inc
push
aam
push
ficompl
out
jg
mov
mov
data16
and
lods
iret
in
ret
lock
call
mov
std
pop
push
testl
aad
scas
or
aam
out
push
mov
cmpsb
pop
cmp
mov
gs
cmc
popl
stc
push
add
clc
int
push
rcll
push
mov
mov
or
cmpsb
fsubl
mov
xor
lret
negl
cld
push
dec
lret
pop
pop
add
lea
mov
lods
sarl
xchg
sbbl
fildll
pop
cli
inc
stc
pop
sti
cmc
push
dec
sub
xor
stos
test
xor
dec
les
mov
mov
leave
in
lahf
loop
int3
sub
test
sahf
rcr
cmp
cld
push
add
inc
lahf
dec
je
cmpsl
lret
ret
mov
mov
lcall
and
ja
xlat
cmpsl
jno,pn
pop
cmpsl
lahf
je
popa
or
sub
sub
dec
into
lds
or
jo
cmpsb
pop
ds
xor
out
jmp
rolb
push
out
lods
jns
fsts
ror
aad
jbe
aaa
pop
pop
fcomps
imul
adc
testl
shlb
int3
cmc
xor
inc
adc
out
pusha
gs
sub
repz
jle
mov
jno
sbb
outsb
and
mov
sub
enter
add
int
add
mov
jl
out
and
int3
fiaddl
leave
popa
hlt
sub
add
pushf
pop
push
loope
xchg
je
ds
push
pop
jbe
fildl
stos
lea
and
mov
jmp
dec
pop
jae
jns
call
aaa
insl
scas
adc
push
repnz
shll
in
push
jne
dec
jnp
mov
shl
mov
bnd
pop
addb
push
pcmpgtd
test
mov
or
pop
mov
push
pop
jae
leave
insl
push
sub
pop
stos
jp
lret
lock
mov
cmp
xor
aas
xchg
inc
cmc
cmpsb
rcl
sbb
in
push
adc
xchg
and
push
rcrl
xchg
and
adc
and
popa
mov
add
fcoml
and
outsl
cli
xchg
shll
notb
xchg
js
cmp
jne
mov
inc
jle
in
lods
insb
sub
dec
loopne
punpckldq
or
sbb
bnd
jo
out
push
imul
add
fisubl
jmp
and
xor
arpl
and
bound
into
fucomi
arpl
xchg
cmpsl
std
cmpsl
and
fiadds
or
ret
dec
aaa
pop
add
jmp
xor
cmc
loope
stos
adc
das
pop
mov
cld
fisttpll
mov
push
push
xchg
stos
es
repz
addr16
orb
mov
movsb
jge
xchg
leave
movsl
jne
rcll
mov
ljmp
add
aaa
inc
in
sub
fwait
enter
icebp
push
testb
add
hlt
sub
and
outsb
cmp
inc
mov
lock
xor
divl
insb
out
pushf
ss
pop
or
push
leave
mov
inc
mov
adc
cs
lods
ds
mov
pop
jle
inc
mov
xor
jg
push
aad
fcmove
rclb
cmpsl
rolb
vmovupd
iret
sub
sub
push
jle
xchg
je
lret
jb
insb
lock
outsl
lahf
inc
pop
adc
adc
lods
xor
lret
dec
ja
enter
jge
xchg
icebp
in
dec
mov
bound
mov
mov
in
mov
cmc
mov
cmp
sub
pop
push
and
jno
dec
ljmp
xchg
xchg
repnz
popf
push
repnz
loopne
adc
cwtl
mov
adc
mov
out
sbb
add
fstpl
rcr
sub
xlat
sbb
or
cli
jo
jmp
push
fistpl
and
pop
and
aam
xor
inc
sti
clc
in
stos
sbbl
jns
and
and
sahf
scas
add
cmpsb
stos
lret
dec
pop
in
sub
sub
sub
cltd
sub
aam
sub
inc
mov
mov
sahf
lock
pusha
add
pop
cld
mov
cmpsb
orl
lcall
rcll
sub
int
call
stc
pop
in
lret
push
lret
inc
lods
push
in
jo
and
adc
pop
scas
sbbb
xchg
and
dec
cld
js
fwait
stc
popa
fwait
mov
lds
push
mov
sub
sbb
fwait
mov
and
xchg
mov
orl
or
insb
cs
in
enter
and
xor
rol
stc
xadd
fs
inc
scas
clc
scas
mov
out
jl
loopne
mov
pop
cmc
pop
xchg
mov
xchg
adc
mov
xor
jmp
or
and
aad
test
cs
rcrl
scas
in
pop
jmp
and
jae
out
xor
xchg
rcll
jp
push
test
or
notb
dec
inc
adc
push
je
ljmp
inc
rolb
or
xchg
daa
pop
lret
ljmp
inc
imul
in
loope
cmp
imul
push
mov
lods
stc
sti
xchg
mov
scas
sbb
movsl
and
ss
cmpsb
and
sti
int
ret
hlt
jne
inc
aad
push
mov
xchg
sub
sahf
dec
lcall
hlt
into
or
mov
xchg
mov
stos
add
adc
in
loopne
cli
adc
inc
in
aaa
out
push
add
push
sub
ds
lods
push
jnp
sbb
ds
test
dec
xor
and
lds
les
push
data16
idivb
adc
inc
loope
out
and
pop
cmpsb
jne
fs
jp
xchg
push
and
outsl
push
fisttpll
pop
scas
dec
mov
push
stos
inc
mov
jge
outsb
hlt
cld
dec
fldcw
lock
jnp
lods
push
pop
sub
mov
mov
jae
and
dec
jnp
incl
pop
rorl
ds
lds
mov
ret
xchg
pushf
out
mov
jbe
outsl
ljmp
xor
pop
mov
push
js
sub
lret
xchg
mov
push
cmp
jo
fidivs
jo
mov
scas
sbb
loopne,pn
nop
jne
xchg
sarl
mov
lret
jmp
add
aam
lods
lods
mov
neg
push
lcall
dec
insb
jo
mov
pcmpeqb
mov
push
rclb
jae
xchg
ret
fmull
ret
dec
lahf
movsb
mov
clc
cmp
cmc
movb
push
hlt
pop
negb
mov
dec
adc
mov
jp
add
push
jg
fnstsw
cmp
inc
enter
jp
das
hlt
nop
fmuls
jmp
in
pop
decl
lods
cmp
jl
inc
ljmp
out
imul
inc
aaa
je
inc
cld
xchg
popa
jecxz
adc
xor
add
sub
test
adc
scas
out
mov
fnstsw
mov
aad
push
dec
mov
add
cld
fcompl
adc
push
xlat
arpl
cmpb
mov
dec
addb
ret
cmp
mov
sub
repz
jecxz
jne
daa
xchg
movsb
fcompl
clc
nop
addr16
sub
push
outsl
or
jno
lea
mov
mov
out
add
out
stc
xor
lock
pop
sub
lods
iret
add
xchg
push
push
cltd
fisubrl
aam
jnp
adc
mov
cli
sub
push
xchg
imul
js
ficoms
inc
lock
mov
cmp
and
test
mov
xchg
test
mov
push
roll
jo
xlat
aad
pushf
sbb
mov
repnz
lods
lahf
fs
add
dec
xor
imul
lea
lea
into
insb
enter
mov
and
insl
into
mov
mov
cmpsl
add
mov
call
sub
cmpsb
arpl
ds
mov
sub
rcrb
pop
adc
add
sbb
shrb
mov
es
push
adc
push
xor
mov
iret
inc
sbb
push
inc
xor
clc
mov
fsubs
push
inc
mov
sbb
in
cmp
xchg
mov
pusha
mov
lahf
jp
scas
mov
pop
cmp
popa
aas
hlt
insl
test
and
fsubrl
test
ret
lret
mov
push
orl
add
pop
movsb
imul
mov
mov
sub
mov
sarl
sub
out
and
jo
and
mov
xor
inc
or
xor
and
xor
sbb
stos
loope
or
mov
mov
add
jmp
iret
inc
mov
xor
negb
das
push
xchg
movsb
jle
mov
fcoml
lea
lret
stc
inc
xor
mov
andl
push
cmpsl
and
sbb
stos
scas
jne
pop
add
pop
or
outsl
add
aam
pusha
and
cmp
lcall
int
cmpsl
jo
or
sar
addr16
dec
stos
pushf
das
jnp
test
jecxz
sti
test
outsl
xchg
mov
scas
pop
pushf
iret
dec
stos
fisubrl
pop
sbb
jmp
ss
mov
data16
pop
cmp
push
outsb
xchg
seto
mov
leave
dec
loopne
lret
cmp
ret
push
insb
pop
stos
insl
inc
lcall
fsubrl
adc
pop
push
insl
jl
or
leave
pop
cs
iret
xchg
insb
sub
lahf
add
enter
jae
lds
add
jge
cs
idiv
cmp
filds
testb
data16
movsb
adc
je
stc
mov
test
dec
lret
fcoms
push
hlt
xchg
fisubs
movb
inc
push
push
cmpsl
bndldx
movsb
nop
and
jne
cmpl
mov
or
les
pusha
xor
negb
aad
dec
or
jne
push
cmpsb
mov
mov
mov
ror
insb
xchg
ret
dec
jg
mov
pop
mov
push
clc
cmp
pop
test
int3
movsl
loop
sahf
loopne
mov
ffree
push
and
punpcklbw
sahf
int
scas
adc
dec
add
leave
xchg
sbb
nop
daa
sub
int
add
adc
jbe
mov
fdiv
inc
and
jo
adc
std
mov
call
lret
lods
adc
mov
not
adc
aam
xchg
aaa
shll
pop
cmp
std
push
mov
push
lock
mov
lods
or
cmp
notb
rorl
lds
sub
out
or
ficomps
ficoml
test
sbb
pushf
add
jns
mov
jne
nop
dec
xchg
xlat
xlat
enter
js
sub
add
push
hlt
dec
jmp
mov
mov
pop
in
aad
repnz
xor
cwtl
das
packuswb
bnd
cwtl
cmp
test
leave
ss
outsb
sbb
cwtl
and
sub
into
outsl
imul
in
in
inc
cwtl
daa
enter
repz
andb
les
scas
sbbl
pop
mov
int
std
lahf
cld
add
testb
enter
or
mov
outsl
sahf
xor
movsb
jo
add
inc
testb
pop
sub
jae
mov
rcrb
pcmpgtb
mov
rclb
mov
xchg
mov
adc
aaa
pop
lahf
cmc
lods
aas
dec
push
mov
scas
test
insb
pushf
into
test
imul
mov
hlt
mov
xlat
rcll
pushf
cmp
dec
push
dec
or
adc
idiv
and
outsb
push
test
mov
adc
push
int3
imul
rcrl
add
mov
push
in
cld
testl
test
pop
fbld
push
iret
lea
test
xchg
lods
notl
test
and
pusha
lock
in
inc
das
les
movsl
dec
and
repz
fcmovne
aas
xchg
rcll
or
sub
xchg
mov
mov
aas
fnsave
adc
inc
xor
xor
dec
scas
dec
mov
outsb
jne
jns,pt
in
orb
xlat
les
sbb
mov
inc
into
lret
cli
pop
dec
rcll
push
int
out
push
popf
push
mov
push
push
nop
jne
push
or
cmp
mov
push
mov
addr16
lock
into
stos
push
xor
aas
bound
ja
lods
cmpb
xor
cmp
lret
pop
inc
std
outsl
mov
inc
test
dec
push
sbb
popa
inc
and
xchg
sbb
xchg
dec
test
js
xlat
add
js
btcl
adc
cmp
out
ret
or
cmp
loop
cmp
in
mov
add
in
add
add
sti
pop
aad
addl
mov
repz
inc
or
rcrb
sub
dec
cmp
loop
rep
mov
sbb
jbe
mov
imul
jno
cmpsl
aas
add
cmp
push
rcrb
jno
inc
xchg
or
push
fnsave
dec
pop
or
pop
push
int
adc
sub
mov
pushf
mov
outsb
arpl
sbb
clc
pushf
ja
movsb
xor
mov
es
rcll
jmp
dec
popa
and
fiadds
leave
mov
shr
and
push
data16
cwtl
xchg
stos
jo
push
pop
mov
repnz
or
loopne
lods
mov
sbb
pop
sarl
pop
cmpsb
mov
or
lcall
ja
mov
fldz
mov
mov
push
push
mov
lret
pop
pop
stc
jmp
ja
push
mov
imul
mov
pop
int3
lahf
fnstsw
cmp
testb
dec
cld
fnstenv
test
inc
dec
rolb
iret
fwait
std
sahf
call
xor
pusha
push
enter
stc
mov
shrb
push
cwtl
insb
pop
insb
in
pop
xor
aad
pop
push
mov
scas
nop
repz
inc
mov
and
and
xchg
scas
cmp
sub
dec
in
jp
daa
jns
sub
lcall
je
fcmovbe
es
aad
js
add
sbb
xchg
rcl
mov
leave
repnz
xorps
dec
mov
fisubs
call
mov
inc
jg
xchg
mov
add
and
mov
pop
test
mov
insb
test
outsl
mov
xchg
mov
sbbb
stos
inc
mov
cmpsb
mov
or
mov
stos
mov
adc
popa
sbb
cmp
dec
add
xchg
popf
and
ss
adc
add
jle
mov
inc
arpl
mov
and
pop
sarb
jns
inc
gs
scas
inc
das
outsb
das
ret
lods
mov
imul
test
inc
add
cmp
cli
cmpsb
mov
dec
xor
mov
lret
or
xchg
mov
xor
and
jmp
call
push
scas
push
sahf
in
xchg
push
pop
xor
or
sub
icebp
xchg
cmpsb
inc
test
mov
push
das
adc
xchg
jge
mov
shl
lahf
orb
lret
insb
cmpsl
xchg
aaa
xor
cmp
idivl
dec
mov
jle
cmp
ss
xor
popf
imul
lret
ret
add
sbb
sub
hlt
sbb
bound
xchg
push
test
ds
fwait
jae
push
push
mov
mov
mov
sub
ret
hlt
mov
data16
lds
in
nop
dec
or
mov
and
cmpsb
pop
adc
test
subb
test
dec
stos
mov
movsl
fidivrs
and
mov
aam
pop
repz
jne
jmp
fildll
mov
stos
aas
and
sbb
adc
dec
pop
je
dec
xor
pushf
or
jmp
rcrb
out
and
push
cltd
push
xchg
push
fcompl
pop
or
mov
lods
fists
xor
pop
dec
mov
xchg
in
iret
pop
mov
fnstcw
ret
add
cs
add
cs
fimuls
cli
ror
sub
loop
test
outsb
test
pop
daa
in
adc
mov
add
jle
dec
popl
mov
mov
stc
xchg
mov
dec
xor
int3
in
mov
dec
dec
ret
dec
jno
pop
jo
and
add
push
sub
adc
mov
ret
inc
xchg
sbb
xlat
jns
fwait
pushf
fcoml
stc
jp
out
mov
mov
cmp
xchg
mov
mov
gs
add
lret
dec
clc
sbb
jmp
sbb
cwtl
aas
lret
and
cmpsb
pop
test
test
into
hlt
jo
dec
int
sub
fbstp
rorl
push
dec
out
rcrl
jbe
imul
push
aam
in
imul
dec
adc
scas
mov
bound
pop
xor
nop
pop
fdivrs
inc
sarl
daa
push
or
sub
pop
push
inc
fidivl
imul
push
stc
xchg
cmpsl
loop
loopne
push
mov
mov
push
lods
ss
mov
repz
rorl
mov
jno
call
mov
lods
pop
fld
pop
out
mov
scas
sbb
inc
mov
ds
or
cmp
or
loopne
movsb
xchg
inc
jbe
push
xor
andl
or
xchg
icebp
xchg
cmpsb
dec
in
cmp
push
push
jae
out
adc
loop
idiv
mov
unpckhps
inc
clc
pop
jnp
mov
pop
mov
sahf
push
or
xor
adc
mov
test
inc
pusha
mov
test
inc
sub
adc
cmpsb
push
jbe
jmp
fwait
insl
sti
adcb
subb
call
test
arpl
xchg
pop
sbb
repnz
outsl
in
stc
sbb
or
lret
cmc
or
xchg
aam
add
mov
out
mov
pop
pushf
fisttpl
push
pop
pop
es
shrb
pop
or
inc
addb
xchg
sbb
inc
arpl
add
sti
fnstenv
jp
aad
or
mov
cli
inc
sub
mov
inc
jle
outsl
mov
out
mov
jmp
xor
dec
cmp
repz
ret
or
arpl
je
clc
movsb
mov
ljmp
and
inc
rolb
dec
jns
xor
aad
shl
pop
cld
xor
xchg
sti
and
jecxz
mov
addr16
mov
sbb
fwait
nop
lret
xchg
push
cmp
push
jns
xchg
loop
les
mov
jbe
jecxz
mov
sarl
xorb
pop
mov
mov
in
adc
insb
pushf
xchg
or
dec
cmp
gs
dec
data16
insb
pop
orl
push
xor
push
xor
test
push
pop
xor
sub
cli
out
subl
incl
mov
out
and
fildl
mov
inc
jg
sbb
mov
movsl
cld
or
push
inc
mov
xchg
arpl
lock
dec
int3
cmp
lret
mulb
pushf
inc
sahf
add
push
ficompl
jg
xchg
lds
out
stc
mov
sti
cmpsb
fsts
les
jbe
xchg
sub
and
cmp
les
test
dec
jns
push
add
dec
out
lea
int
adc
out
adc
inc
ss
sbb
xor
pop
push
sarl
leave
mov
xchg
pop
mov
bound
insl
push
shlb
outsb
xchg
inc
dec
negb
out
inc
pop
xchg
jno
pop
cli
ljmp
mov
or
stc
sbb
push
push
jge
loope
push
or
jne
fstpl
mov
pop
mov
and
idiv
stos
pop
jns
jnp
cmpsl
fsubl
add
sbb
loopne
aaa
loope
sbb
shlb
lret
pop
jmp
push
shlb
push
cs
mov
jle
pop
sarb
jo
mov
out
in
lss
pop
xorl
lcall
bound
jle
mov
daa
mov
push
cmpsb
ret
repnz
cltd
out
or
add
cld
rcrb
aas
popf
or
or
sub
push
pushf
adc
and
sti
push
fwait
dec
sbb
mov
jle
jae
scas
push
adc
popf
or
mov
stc
pop
rorl
insl
mov
sbb
cwtl
pushf
xor
jp
sub
jb
cmp
xchg
jnp
adc
mov
cmp
out
push
xor
addr16
and
dec
into
sti
push
adc
adc
ret
cmpsb
lods
and
in
cmp
mov
sbb
xchg
push
sub
push
mov
xchg
mov
mov
fs
sbb
mov
fs
mov
fcoml
jmp
and
mov
sub
add
in
loope
pop
or
push
xchg
ljmp
sub
int3
push
add
jbe
rcrl
nop
or
sbb
cmp
mov
pushf
fsubrs
mov
lea
loope
pop
sahf
sbb
add
adc
adc
in
cmpb
add
aaa
push
sti
movsl
fisubs
adc
xor
movsl
adcl
or
pop
cmpsl
popa
mov
adc
sbb
scas
mov
adc
and
jb
lea
and
jno
mov
xor
cmp
mov
mov
push
mov
or
mov
aaa
push
sbb
cmpsb
jp
loope
fsts
in
fcmovnbe
iret
mov
mov
mov
xor
lahf
std
pop
sbb
inc
inc
pop
mov
jl
inc
dec
mov
pop
aad
popa
andps
ljmp
jecxz
push
add
add
mov
cmp
hlt
inc
xor
cli
lods
pop
rolb
mov
imul
and
or
gs
mov
and
cmp
fstps
xor
jp
test
mov
adc
xchg
pop
sbb
fs
jns
fcompl
jg
jo
fwait
repz
cmp
lods
jnp
mov
jns
stos
pop
cmc
aam
stos
ret
inc
andl
cmpsb
push
pop
aad
and
fcompl
or
sbb
orl
inc
cmpsb
ja
push
and
out
imul
ficomps
mov
jle
pop
ja
movsb
in
int
sti
xor
dec
push
push
leave
insb
sbb
in
cmp
hlt
aad
lahf
pop
cwtl
add
cmp
addr16
xchg
push
xor
jbe
ret
push
xchg
imul
lods
lret
xorb
ds
jmp
idivl
xor
scas
out
nop
daa
rclb
les
xlat
ljmp
xchg
sub
cs
push
cmp
inc
mov
mov
xchg
sbb
or
xchg
dec
mov
push
ljmp
adc
leave
iret
and
or
mov
aas
xor
loop
push
push
push
rcrl
icebp
xchg
pop
add
leave
into
xor
dec
cmpsb
sub
fnstcw
or
aas
xlat
xor
xchg
cmp
test
fadd
or
mov
clc
aaa
sbb
movl
adc
jne
fwait
cli
into
rorl
lea
jmp
sarl
pushf
mov
inc
xor
mov
cmp
and
inc
pusha
ja
push
inc
xchg
mov
out
push
pop
sub
ds
mov
pop
push
xor
pop
sbb
jo
add
lods
enter
mov
adc
or
mov
int3
bound
lods
lahf
fcomps
flds
leave
fwait
andb
out
add
pushf
jmp
ret
pop
fcmovu
adc
mov
popf
imul
jecxz
orl
sub
shr
mov
loop
jb
rcrb
add
stos
jge
add
sub
xor
ret
inc
push
xchg
or
and
insb
outsl
jnp
cltd
test
or
mov
jno
call
call
push
sbb
rclb
mul
and
cmpsl
and
notl
push
cmpsl
cli
jns
sti
call
or
mov
outsl
mov
xor
mov
sub
out
stos
jge
shlb
mov
test
cmp
mov
add
bound
pop
xchg
out
inc
fdivl
incb
jmp
out
pop
push
jne
aad
and
mov
aas
sbb
jl
mov
fisubs
gs
mov
dec
jmp
push
insl
mov
xchg
pop
das
mov
push
cld
idivl
xchg
jp
sub
int3
dec
adc
and
jns
insb
orb
call
sti
xor
pop
shl
and
pusha
clc
mov
push
sbb
stos
xor
xlat
mov
and
clc
ds
pop
xor
sahf
ja
jl
xchg
dec
les
ss
jecxz
out
mov
sub
mov
lods
loop
xchg
and
loopne
in
inc
in
fnsave
mov
jmp
push
loopne
jg
push
ret
mov
insb
sbbl
sbb
jp
mov
fidivrs
ficomps
sub
outsb
hlt
lods
and
mov
sbb
int3
int
out
push
and
jmp
popf
insb
sbb
sub
cmpb
xor
xchg
lret
mov
ret
fldenv
jmp
out
jns
shlb
pop
and
mov
add
jecxz
jle
cli
dec
ret
lahf
push
je
js
jne
dec
in
hlt
dec
sbb
icebp
xchg
fwait
iret
jne
xchg
hlt
aas
xor
cmp
enter
fstpl
cmpsb
sti
ds
mov
mov
nop
jmp
push
ret
fs
fisttpl
mov
pop
sti
push
mov
pop
xor
push
call
ret
in
push
adc
insb
cli
lods
clc
push
imul
enter
push
pop
sahf
inc
cwtl
jmp
mov
jns
dec
popf
mov
mov
mov
pop
adc
add
and
mov
push
lcall
mov
dec
xor
sub
xor
clc
add
mov
or
stc
ds
push
sti
lods
xchg
loop
jmp
stos
adc
push
lods
add
sbb
mov
es
mov
cmc
stc
xor
sarb
aad
ret
xchg
outsl
sub
cmp
jno
test
test
push
lret
cli
frstor
insl
sbb
pop
pop
jle
ja
fs
imul
test
adc
shll
mov
mov
sbbb
test
ds
insb
out
enter
cmpsb
ljmp
scas
mov
int
push
inc
lock
jle
or
shlb
shl
fadds
dec
dec
adc
and
xor
mov
bound
jecxz
or
enter
out
push
xor
xor
pop
sbb
mov
mov
jge
pop
push
movsb
jecxz
sub
nop
mov
mov
jae
adc
ret
cmp
xchg
and
das
push
inc
fstl
adc
mov
jp
jg
enter
subb
dec
fcomp
int3
inc
sti
mov
fists
xchg
cli
std
lahf
xchg
leave
ja
xchg
and
adc
mov
mov
add
add
cmpl
dec
dec
dec
out
scas
jge
repz
mov
aad
dec
test
nop
or
adc
xchg
jecxz
jo
mov
outsl
xchg
sbb
pextrw
popa
icebp
cltd
push
mov
cmpsb
cli
pop
movsb
pop
dec
outsl
sti
mov
ss
mov
cmp
mov
stos
push
and
adc
adc
jecxz
cmp
inc
out
dec
push
mov
pop
cmp
cmpsl
hlt
mov
ss
push
push
mov
jl
fsubrl
test
mov
aam
mov
inc
pop
adc
test
jae
xchg
jg
and
lea
dec
imul
mov
xchg
jnp
mov
je
data16
add
scas
jbe
pop
jno
push
es
jno
andb
fs
sub
mov
or
inc
testl
mov
stos
inc
xchg
and
out
in
icebp
sarb
lcall
pop
jo
sub
scas
rcrb
popf
pop
or
mov
xchg
cs
jnp
cmc
mov
ficoms
adc
popa
dec
in
pop
notl
xchg
aam
jnp
out
sbb
mov
out
gs
or
sbb
lea
lods
add
add
stc
data16
punpckhwd
sbb
or
pop
repnz
out
inc
notb
xchg
mov
or
push
jno
cmp
popf
or
ds
iret
or
and
int
add
sbb
add
lods
push
aad
jb
push
out
test
add
test
xchg
adc
test
loop
dec
leave
and
ss
or
adc
out
testb
or
lret
mov
je
insb
xor
inc
and
fdivs
pop
xchg
mov
lds
cmp
add
mov
add
sub
in
repz
std
fcompl
mov
sbb
lods
sub
inc
jp
cli
test
mov
in
cwtl
adc
push
adc
add
loopne
pop
imul
fisttpl
icebp
cmp
or
imul
popf
and
mov
int
fdivrp
ljmp
or
in
iret
lret
movsb
sbb
mov
xchg
fnop
pop
jge
inc
pop
pop
lods
mov
mov
pop
sbb
shrb
push
push
popl
out
push
ss
xlat
pop
xor
cmp
jp
ds
xchg
std
sbb
popa
mov
dec
xorb
push
mov
cmp
fs
push
inc
jnp
push
and
jl
mov
leave
fisttpll
mov
lahf
fmul
mov
cltd
insl
setb
mov
lods
and
and
mov
lods
not
xchg
sub
and
loop
fmull
dec
xchg
insb
sub
bound
inc
popa
shrb
inc
fs
call
addr16
scas
insb
int
jge
push
jnp
inc
shrl
mov
pop
stos
sbb
int
movsb
pop
mov
rclb
sbb
bound
sub
mov
sahf
icebp
xchg
push
flds
fwait
hlt
das
out
pop
pop
cs
hlt
cmc
xor
and
into
cli
repz
loope
ss
mov
cwtl
cmpl
xor
push
mov
pop
mov
cs
inc
fdivrs
mov
jb
je
fsubrp
mov
iret
sti
outsb
fstpl
xchg
rcl
cmp
dec
incl
cmpsb
test
add
pop
cltd
adc
jp
stc
clc
xchg
push
scas
insb
pop
fnstsw
push
push
scas
pop
sub
into
jnp
hlt
pushf
lods
lret
fildl
push
sub
and
stos
mov
aad
push
neg
dec
mov
dec
jo
adc
sahf
inc
jns
mull
imull
push
fwait
cli
jb
jns
adc
cmp
mov
outsb
adc
mov
mov
jg
mov
sbb
leave
fisttpl
adc
aad
pop
xchg
push
add
lret
nop
jecxz
fsts
test
pop
and
add
stos
fstpt
cmc
mov
mov
mov
mov
push
out
jg
notl
inc
test
cmp
popf
cwtl
xchg
ljmp
mov
add
sub
mov
pop
lahf
adc
mov
js
add
cmp
lock
jp
fstps
mov
test
pop
adc
pop
xor
push
dec
int3
movl
and
or
es
mov
movsb
sub
ss
mov
or
testb
inc
pop
jle
loopne
cmc
out
btr
ds
rorb
insb
out
movsl
in
sbb
inc
xor
cwtl
pop
fldcw
jo
lahf
add
mov
leave
std
xchg
rol
mov
pop
xor
rol
push
inc
loop
cltd
das
mov
sub
xchg
push
loope
cli
repnz
sub
movsb
mov
xor
jns
pushf
xor
addl
mov
pop
js
movsl
inc
adc
mov
int
stc
dec
sbb
sbb
dec
cmp
ja
xor
mov
int
out
mov
pop
pop
cld
loope
outsb
pop
call
clc
xor
pop
sbb
xchg
xchg
or
pop
sub
cmp
jp
dec
mov
std
adc
lds
and
test
add
jg
xchg
scas
shl
jg
cld
lcall
sub
mov
repz
int
sar
aas
or
push
inc
or
stc
fidivl
lahf
les
mov
xor
mov
push
jae
out
cmp
adc
mov
test
test
imul
add
or
std
imul
push
jecxz
test
ljmp
nop
ja
jnp
add
sbb
mov
ljmp
inc
jo
call
sub
or
pop
dec
pop
jno
lds
cs
jne
shll
lods
fidivs
jb
add
in
lods
pop
ja
repz
or
jge
adc
in
fdivs
sarl
in
adc
mov
and
and
roll
lahf
test
pop
out
ret
ja
or
and
in
out
jle
in
push
or
and
jne
mov
lea
rcrl
jmp
jnp
fildl
cmp
xchg
mov
and
jbe
les
dec
xchg
mov
ss
movsl
push
lea
jl
aaa
mov
sub
push
pop
or
mov
or
fdivrp
add
and
add
mov
lcall
dec
and
sub
lcall
fcos
aad
aam
inc
lods
lock
sbb
xor
inc
leave
jae
jbe
sub
xchg
pusha
std
lods
cmp
ficoml
ss
ja
cmp
fadds
lock
pop
or
js
jnp
repz
loop
push
es
and
mov
fs
inc
mov
out
add
adc
adc
aas
jne
jp
or
lret
inc
push
ret
adc
push
arpl
dec
repnz
xchg
push
stos
mov
sbbb
mov
pop
push
clc
stos
push
cmp
xchg
xor
sbb
iret
mov
pop
sbb
mov
xchg
inc
cld
rcll
dec
movsb
sub
mov
mov
sub
shrl
xchg
cs
cld
cld
inc
push
pop
cmpsb
pusha
cwtl
movsb
sub
cmc
lods
jmp
mov
cmp
sbb
fldcw
daa
pop
cmp
lock
mov
insb
lcall
jne
cmp
lret
loope
sub
test
shlb
dec
roll
mov
js
paddq
sub
ds
mov
add
sti
adc
jecxz
mov
das
sbb
sub
push
push
aas
mov
pop
fbld
push
lahf
dec
xor
fisubl
xchg
inc
and
int3
adc
xchg
pop
shll
jg
dec
test
xor
push
jmp
and
xchg
jne
xchg
out
xchg
add
jecxz
dec
jbe
xchg
shrb
insl
aaa
jl
scas
mov
lret
mov
jnp
inc
dec
dec
or
int
lret
mov
push
cmpsl
nop
lahf
xor
pop
jp
xchg
mov
mov
sbb
ds
fisttpl
jle
fidivrl
fs
inc
xchg
lods
popa
adc
insl
cmpsl
jne
sbb
jmp
popa
call
xchg
arpl
xchg
mov
test
mov
in
add
mov
mov
jg
adcl
test
pop
loop
in
sbb
xor
ret
in
clc
mov
pop
fchs
inc
popa
pop
ds
subl
test
or
int3
adc
stos
shl
loopne
xorl
icebp
iret
mov
xor
shrl
mov
jge
rcl
fwait
mov
jne
je
cld
push
mov
loop
fsubs
movsb
or
mov
test
cmp
inc
sub
or
inc
xchg
jns
inc
pop
adc
repnz
inc
dec
in
lock
shl
xor
add
cmp
jl
xchg
jmp
lock
sub
imul
testb
test
mov
dec
mov
movb
xchg
popf
cs
arpl
not
test
adc
sub
jp
nop
adc
fsubrl
fldenv
xor
loope
cs
cmp
and
mov
cmp
cltd
sti
push
pusha
inc
mov
fdivrl
add
push
and
add
and
xchg
and
mov
mov
push
pop
push
stos
roll
scas
inc
mov
hlt
add
aaa
sbb
inc
add
inc
fistl
mov
mov
mov
pop
lcall
pop
cmp
fldt
push
mov
mov
mov
fidivrs
jno
sbb
cltd
jne
xchg
mov
test
or
leave
std
fistl
std
inc
dec
stos
fdivrl
test
std
aam
and
and
xor
testl
mov
daa
add
test
int3
xchg
or
loop
int3
xor
mov
mov
in
roll
adc
repz
mov
lods
imul
mov
lret
test
test
mov
adc
mov
pop
jb
int3
or
xor
out
ss
or
enter
lret
adc
sbb
add
inc
sub
pop
fmuls
or
pusha
or
sbb
mov
rcll
scas
arpl
cmpsl
mov
gs
pop
cld
outsl
imul
sub
add
arpl
pop
loopne
cmpsl
loopne
leave
icebp
cmp
jae
cltd
push
sbb
add
or
push
cmp
sub
test
inc
rclb
push
out
adc
pop
nop
rcrl
icebp
enter
cmpb
addb
xchg
stos
jnp
mov
mov
test
mov
xor
out
jnp
jns
mov
pop
lcall
cmc
stos
dec
outsl
xor
int3
shlb
mov
jno
mov
data16
ret
push
rcrb
pop
and
mov
movsl
and
jae
pop
sbb
insl
jle
jle
push
addr16
sub
xchg
int
scas
push
add
aaa
cmc
aam
cmp
mov
sub
int
out
ds
add
addl
jle
xor
aas
ret
mov
push
pop
push
fsubl
mov
cmp
mov
mov
fdivs
hlt
popa
xchg
scas
lea
pop
xchg
mov
push
sbb
push
into
int
cli
sub
cmp
bound
inc
mov
pop
inc
pop
mov
imul
mov
loop
jp
mov
mov
dec
jb
ja
testl
or
addr16
xlat
sbb
adcl
rcrl
pushf
pop
xor
insl
sqrtps
mov
jno
inc
xor
cmpsb
inc
imul
jl
fwait
mov
fildll
mov
push
push
sub
pop
mov
and
add
jp
cmpsb
sbb
push
mov
shll
push
ret
adc
cmp
idivb
clc
push
dec
stos
push
pop
ret
cmp
bound
adc
dec
hlt
dec
fisubrl
push
addr16
and
cmp
jge
mov
mov
or
sub
fldenv
pop
dec
out
dec
push
ja
movsl
xor
cwtl
cmpsl
xchg
int
sbb
int
dec
xlat
mov
cmp
pop
call
es
push
fdivl
outsl
dec
or
aas
nop
subb
pushf
out
dec
outsl
xor
mov
adc
mov
ret
fwait
dec
cmpsl
mov
adcb
mov
aaa
and
dec
cltd
test
or
mov
mov
adc
leave
adc
mov
xor
push
inc
test
jmp
pusha
xchg
sarl
scas
xchg
add
adc
imul
dec
mov
dec
mov
cmp
cmc
call
aad
cmp
jp
lock
xchg
andl
xchg
mov
push
xor
dec
push
iret
lds
fidivl
data16
rcrl
enter
cli
xchg
lods
imulb
sub
incl
mov
jl
std
or
pushf
lea
add
lahf
adc
mov
clc
es
inc
imull
stc
add
imulb
mov
add
daa
push
pop
ds
and
sbb
sub
cmpsb
pop
movsl
test
mov
test
mov
cs
dec
push
loope
cmp
jno
adc
outsl
jl
inc
mov
or
mov
outsb
in
popa
xor
cbtw
mov
imul
add
add
jge
cli
adc
cmp
fcompl
inc
adc
sub
mov
mov
push
out
pop
cmp
repnz
mov
call
or
push
fabs
jnp
test
xor
xchg
sbb
sbb
dec
pusha
les
pop
arpl
dec
pop
inc
cmc
inc
or
popa
sahf
gs
outsl
adc
sbb
dec
jnp
jne
pop
stos
fs
jle
or
xchg
repnz
fs
loope
push
jbe
mov
push
loop
test
stc
in
cmp
cltd
orl
mov
cld
pop
jle
outsb
xchg
sub
jb
ljmp
dec
pop
roll
xor
sarl
inc
or
lods
lahf
sbb
ds
js
sbb
inc
push
push
push
div
int
imulb
add
pop
add
xor
es
jl
pop
xchg
xor
inc
jnp
mov
dec
enter
aad
icebp
icebp
cmpsb
adc
jb
mov
cmp
repnz
jo
call
popa
in
or
push
in
sbb
jmp
in
dec
adc
test
scas
push
xchg
xchg
xchg
xchg
xor
lods
lcall
sub
mov
mov
jae
out
jno
inc
movsb
cli
add
jns
jbe
loope
or
xchg
js
mov
xchg
fs
or
jo
fsubr
gs
pop
int3
dec
pop
cs
dec
sub
js
ljmp
adc
mov
pop
ret
fists
push
inc
cmc
cli
inc
push
and
jecxz
push
xor
mov
push
fisttpl
pop
pop
sahf
cmp
mov
jb
lock
ljmp
or
pushf
out
add
sbb
mov
sub
adc
mov
stc
cmp
imul
sbb
cmc
fld
hlt
bnd
sub
imul
mov
pop
into
shl
ret
mov
js
push
cmp
sbb
jge
cli
clc
and
ds
arpl
mov
dec
stos
add
fcomps
rorb
and
push
dec
sub
iret
sub
jno
mov
inc
movsl
mov
insb
ljmp
fists
inc
test
inc
in
jl
stos
or
pop
dec
mov
sub
or
and
xchg
xor
or
imul
out
out
lods
adc
cli
daa
fcoms
sbb
sub
scas
jmp
andl
shlb
sub
in
aad
cmpsb
add
mov
inc
jp
jecxz
loopne
js
sbbl
cmp
xchg
xchg
cmp
jmp
push
cltd
cs
mov
popf
xchg
imul
das
mov
sbb
leave
mov
adc
movsl
fildl
fildl
and
fstps
xorb
into
jno
push
out
movsl
and
cmp
jmp
pop
pushf
setno
dec
adcb
aam
xor
pop
lods
cltd
mov
inc
dec
aam
pop
mov
sub
xor
xor
sub
movsl
push
mov
stos
shl
sbb
and
jno
push
xor
js
xchg
js
xor
and
ljmp
test
push
gs
andl
xchg
pop
cld
cmp
dec
dec
dec
add
ret
call
push
rcrl
fisubs
les
ret
out
das
ljmp
insl
or
lock
addr16
push
sahf
mov
cltd
mov
cmp
lds
shrl
sub
or
mov
stc
loopne
push
xor
aas
jl
loopne
mov
lret
jbe
or
mov
cli
add
push
pop
pop
mov
lahf
xchg
ret
push
mov
push
mov
bts
push
inc
jmp
fstpt
fdivrp
inc
push
stos
cmp
rorb
xlat
loope
ds
xchg
jns
sbb
or
mov
push
ljmp
dec
adc
enter
sub
fadds
ret
outsl
bound
push
inc
aas
pop
mov
in
mov
inc
dec
mov
adc
mov
xchg
dec
sub
push
mov
inc
push
or
or
ret
mov
icebp
adc
or
push
mov
icebp
inc
pop
cmpsl
outsl
mov
pushf
mov
mov
idiv
flds
fdivrl
mov
mov
and
stos
xlat
fsubs
lock
outsb
ljmp
sarl
xchg
push
xor
mov
ret
pop
sbb
test
jmp
xor
outsb
std
sbb
xchg
mov
mov
data16
jns
jmp
jg
xchg
push
push
pop
adc
aas
mov
xor
cld
enter
nop
cmc
test
int3
and
cmp
push
imul
sbb
cmp
movsl
pusha
insb
in
test
sub
xchg
dec
aas
cli
pop
ret
ficoms
fcmovnb
sahf
loope
pop
in
push
fistl
xor
packuswb
jne
js
aad
pop
dec
sbb
pop
or
cmp
cmp
aad
inc
in
aam
inc
sub
lahf
enter
cld
push
mov
mov
dec
mov
into
cwtl
push
cmp
sbb
icebp
dec
xor
sub
xchg
jecxz
mov
push
mov
cmp
cld
je
jecxz
dec
xchg
adc
push
dec
addr16
jg
jg
add
mov
jmp
dec
mov
call
and
dec
fsubl
mov
cmpsl
iret
addr16
pop
scas
clc
push
int
adc
imul
adc
add
mov
ds
adc
rcrl
sbb
and
inc
push
cmpl
dec
cmp
push
andb
push
ret
add
or
mov
inc
push
xchg
fnstenv
jg
push
push
cmpsl
int3
mov
mov
push
test
push
fiaddl
dec
jne
cmpsl
fcoml
fldt
xor
push
dec
sub
outsb
or
cld
fsubrp
xchg
xchg
mov
mov
mov
xlat
and
cmp
lahf
movsl
sub
cmc
aaa
xchg
and
xlat
daa
xchg
dec
pop
mov
rorb
jns
xor
addr16
icebp
inc
add
daa
bnd
pushf
cmp
xchg
shlb
pop
push
divb
cwtl
sub
dec
inc
rcrb
aas
stos
sbb
rorb
cmc
repnz
mov
aaa
mov
ja
xchg
or
repz
and
pop
xchg
lcall
ret
cmp
adc
faddl
pusha
ffreep
out
inc
arpl
int3
mov
cmc
aam
or
fs
mov
cld
jp
xchg
imul
imul
xchg
pop
fdivrs
fidivs
cmp
pop
dec
mov
in
push
mov
lock
in
jbe
std
inc
adc
sub
cmp
rcll
test
sbbb
in
jnp,pt
xlat
jae
fstpl
fwait
jnp
rolb
popf
int
aad
loope
out
push
ljmp
mov
mov
imul
out
cli
add
lock
xlat
adc
xchg
loop
pmuludq
cltd
mov
rclb
jle
stc
shlw
cmpsl
mov
shll
push
fildll
xlat
or
loope
enter
call
das
sbb
lea
jge
cmpl
lds
cmpsl
inc
jbe
push
xor
imulb
enter
das
dec
sbb
cmp
pop
dec
mov
fsubr
jnp
sub
aam
adc
repz
test
xchg
cmpsl
push
mov
jae
clc
in
mov
xor
leave
push
mov
inc
fstps
test
cld
xor
shlb
xchg
aam
xchg
pop
adc
inc
sub
lea
js
xchg
jle
movsb
scas
pop
mov
or
lods
clc
jbe
test
ret
or
xchg
orb
mov
jge
movsb
popf
sub
xchg
sub
loopne
stos
pop
add
aad
add
decb
stos
lock
out
divb
das
mov
icebp
sub
mov
imul
cmp
mov
push
in
jecxz
fbld
lret
lds
jb
pop
test
mov
fucomp
xchg
mov
sbb
insl
inc
and
cmpsb
push
mov
mov
cmp
xchg
out
jno
add
inc
push
fdivr
dec
cs
bnd
pop
shlb
arpl
dec
inc
fisubl
in
inc
jne
xchg
jl
mov
bound
stc
fptan
negb
or
xchg
cwtl
movsb
xchg
lcall
test
or
push
lahf
jge
push
add
jle
xchg
test
scas
ljmp
je
xchg
cmovnp
insl
pusha
loop
xchg
sbb
xor
insb
jae
jo
jmp
adc
or
add
or
in
sti
aad
xchg
add
imul
js
leave
xchg
mov
inc
cld
in
fucomp
cwtl
insb
xlat
bound
cmc
cmpps
mov
mov
adc
and
sti
cli
imul
stos
mov
cli
mov
js
aaa
mov
orl
mov
gs
lds
dec
xchg
cs
adc
sub
push
lods
pop
jge
data16
in
jl
jne
mov
stc
pop
ud1
enter
xor
cmpb
js
movsl
cmp
je
push
call
addl
hlt
dec
mov
insb
pop
nop
cli
sarl
lock
ja
cmp
lea
in
mov
push
xor
fmul
mov
je
ficoms
jo
jae
dec
pop
pushf
mov
fnsave
sbb
mov
add
inc
loop
ficomps
push
sbb
sub
lcall
adc
cli
ror
lods
sbb
rorb
push
out
arpl
lret
or
jne
in
mov
bound
les
push
push
sub
inc
sbb
mov
push
in
in
xchg
mov
clc
aad
mov
and
pusha
sub
cmpsb
push
fdivs
cli
lea
insl
and
sbb
sub
pusha
push
sbb
int3
xor
sti
ret
xchg
popf
in
int
cwtl
xchg
dec
out
inc
push
or
jb
shl
dec
and
mov
ficoml
aas
push
jmp
jae
xor
add
inc
cs
outsl
or
out
push
test
mov
out
idivb
pop
out
and
bound
push
in
andl
mov
jmp
aam
mov
ret
mov
push
adc
lret
lahf
scas
mov
mov
fs
in
outsl
hlt
shrb
adc
cmpsl
adc
scas
mov
insl
fbstp
xlat
push
or
cwtl
ret
shll
xchg
and
mov
or
out
cmpsb
pop
sbb
add
mov
sub
xchg
cmp
push
cmp
cmpsb
mov
pop
or
add
push
loope
or
and
sub
nop
sub
mov
cmc
test
popf
add
adc
xor
fstpt
cwtl
inc
into
pop
pop
lret
das
adc
fmull
cwtl
dec
ljmp
push
mov
push
cmc
stos
out
enter
data16
out
shr
sub
arpl
not
iret
arpl
xor
dec
frstor
sahf
push
pop
xchg
subb
in
cld
adc
dec
mov
dec
inc
shr
das
fisttpl
inc
mov
jp
insl
sub
test
rclb
scas
in
dec
mov
push
sub
sbbl
push
mov
mov
leave
pop
add
inc
dec
ret
cmpsl
adc
jp
sub
aas
imul
adc
cmc
pop
ret
xchg
jae
and
loope
add
scas
inc
pop
dec
jb,pn
pop
mov
movsl
pop
jo
jle
add
sub
andb
test
xor
add
mov
cmpsb
mov
mov
aas
call
dec
cli
das
les
bsr
xchg
je
jo
ljmp
js
orb
std
sub
or
adc
mov
pop
add
mov
or
mov
add
mov
push
nop
stos
mov
aaa
popf
cmp
add
push
scas
xchg
fnsave
addr16
ficoml
pushf
fimull
xor
add
push
mov
mov
loopne
pop
daa
jp
mov
mov
movsb
lods
fmul
sbb
inc
push
sub
out
dec
add
addr16
imul
adc
xchg
arpl
andb
andl
in
cld
mov
and
sarl
xchg
jnp
mov
gs
or
xchg
mov
cmp
int3
into
jle
jmp
sbb
pop
mov
fildll
daa
sbb
clc
mov
cmpb
mov
inc
pop
push
stc
xchg
ljmp
jno
push
mov
jae
sbbl
cmc
mov
sub
push
mov
push
jns
cltd
add
adc
mov
jae
xor
xchg
aas
enter
pop
inc
mov
cmp
in
les
das
cs
stc
lcall
mov
mov
lock
popa
aam
and
jmp
nop
dec
into
dec
pop
adc
leave
mov
ja
adc
pop
mov
mov
mov
mov
inc
jge
scas
cli
mov
iret
dec
sbb
xor
rorb
cmc
dec
aas
cmp
xor
mov
cmpsl
push
mov
daa
mov
sub
sbb
add
notl
pop
mov
or
push
cmp
nop
or
or
mov
pop
imul
adcl
push
jbe
mov
in
fs
in
inc
fstps
mov
pop
and
into
sahf
cltd
mov
pushf
sbb
arpl
imul
ja
stos
sbbb
cltd
popf
and
push
ror
mov
sub
or
push
add
mov
std
dec
xchg
loope
lea
jnp
divl
movsw
mov
ljmp
cmpsb
in
mov
push
inc
jl,pt
test
push
inc
xor
xlat
ljmp
xchg
and
or
sub
adc
scas
cmp
outsl
pop
in
ucomiss
in
repz
adc
jne
add
jecxz
fidivrs
lret
mov
cmp
in
in
adc
mov
jecxz
cld
add
ss
movsb
cwtl
ret
add
mov
int
sub
mov
mov
cli
scas
dec
repz
fbstp
xor
ljmp
arpl
pop
stos
mov
xchg
pop
pop
dec
push
dec
arpl
xor
int3
enter
jns
das
mov
xchg
sub
xor
cmp
jl
mov
mov
mov
or
ret
bound
cmp
cld
add
cmpsl
mov
push
cwtl
pop
xor
popf
pop
popl
inc
jle
add
imul
shll
data16
dec
inc
cld
icebp
int3
jle
xor
jo
loop
xor
xchg
xor
mov
push
dec
push
js
and
aad
jb
sub
push
pop
mov
pop
in
std
inc
int3
push
mov
push
insl
ds
and
jle
dec
push
and
mov
cmc
mov
push
dec
dec
enter
sub
adc
outsb
xor
shl
fwait
imul
notl
sbb
mov
jmp
cwtl
inc
dec
add
push
cwtl
in
xchg
fcoml
fisttps
xor
stos
sbb
clc
call
fwait
out
sbb
sbb
idivb
inc
push
jns
mov
fists
sbb
or
push
sbb
xchg
sub
xchg
lcall
xor
call
sbb
push
addr16
movsl
nop
stos
add
push
in
push
inc
adc
jbe
test
pushl
or
daa
stos
lock
add
sahf
cmp
pop
loopne
mov
in
clc
fcmovne
mov
push
mov
out
dec
repnz
xor
xor
dec
imul
pushf
and
xchg
lds
cmp
sar
inc
aad
add
fiadds
ljmp
xor
pop
add
dec
ret
cli
test
jmp
outsl
adc
xor
or
daa
daa
shlb
mov
and
push
in
pop
into
dec
sub
pop
or
repz
dec
lcall
xor
dec
sub
push
repz
sub
mov
insl
dec
sub
xlat
rolb
fdivrl
lock
mov
or
jge
and
mov
ds
inc
mov
popf
pop
mov
addr16
mov
and
outsb
mov
push
test
add
mov
xchg
ja
jns
and
xor
fs
push
sub
popa
ljmp
sarl
js
cld
mov
sub
lods
push
das
aam
orl
repz
pop
xchg
add
daa
aaa
ficomps
mov
addr16
shll
or
xlat
scas
cmpsb
add
scas
stc
xor
mov
jp
and
or
mov
mov
xchg
fisttpl
cmpsl
enter
test
jno
movsl
rolb
fistpl
mov
jbe
out
jmp
jnp
dec
push
dec
lods
movsb
push
mov
sbb
push
test
ds
push
or
jle
mov
out
jg
and
dec
pop
lahf
mulb
pop
clc
mov
adc
repz
mov
xor
push
aas
das
stc
test
inc
test
xchg
pop
mov
in
mov
mov
pop
and
jne
lds
stos
or
jge
and
ds
adcb
add
mov
enter
xchg
or
mov
shll
aad
mov
nop
movsl
mov
push
sarb
ss
sbb
insl
sti
xchg
ret
aaa
mov
flds
or
dec
sbb
test
pusha
cs
lahf
jnp
daa
leave
pop
pop
jnp
loopne
jno
filds
imul
aaa
adc
dec
pop
add
shlb
inc
or
mull
fwait
aam
das
shll
xchg
lcall
imul
std
mov
rol
adc
test
shlb
pop
shlb
and
mov
ret
out
roll
stos
xor
jno
mov
and
lret
xor
lea
adc
xor
lret
and
cmpsb
arpl
adc
jle
add
dec
notl
outsl
shl
je
sub
pmulhw
dec
mov
sub
adc
pop
pop
scas
mov
mov
sti
rclb
sbb
aaa
loop
cmp
dec
push
pushf
scas
movsl
dec
fcoms
das
in
aam
jge
outsb
mov
arpl
inc
test
jge
lock
mov
fldl
sarl
jg
mov
adc
push
call
sub
sbb
stc
nop
dec
jmp
sbb
xor
stc
sub
xchg
jae
mov
leave
jle
xchg
scas
je
enter
jo
lcall
cmp
sbb
xchg
or
push
xlat
lock
jmp
sbb
add
sbb
aaa
inc
scas
ljmp
push
test
cmp
shll
add
inc
roll
pop
cmp
shlb
push
andl
outsb
xchg
lods
dec
hlt
sub
mov
cli
cmpsl
es
lret
jno,pt
mov
fwait
mov
add
pop
adc
sbb
push
ret
jae
aam
jle
insb
cwtl
sarb
test
xlat
lret
push
cmp
les
mov
dec
push
ljmp
or
es
xchg
mov
xchg
sbb
mov
lcall
xchg
add
dec
adc
out
ficoml
xor
xor
aam
and
inc
xchg
es
or
fstps
add
lret
fistl
cld
std
fmull
pop
les
dec
fisttps
xor
dec
or
stc
dec
sbb
sub
mov
lds
xchg
cmp
subl
xchg
ret
clc
dec
xor
mov
inc
jl
pop
shrb
cmpsl
pushf
idivl
cmpordps
int3
sbb
test
mov
idiv
add
mov
push
push
movsl
mov
sub
jmp
arpl
out
adc
xchg
push
mov
xchg
or
or
fwait
xor
mov
jo
push
inc
mov
xchg
into
mov
push
lea
add
ljmp
bound
out
jae
jge
cwtl
imul
gs
imul
or
jge
dec
rclb
pushf
mov
clc
sbb
negb
add
xor
test
inc
pop
insl
scas
push
mov
loope
fdivp
psubsw
lods
and
aas
mov
ficompl
inc
rol
std
sub
loopne
mov
pop
push
ret
jecxz
push
loope
and
shll
fsubp
imul
lret
push
push
rol
and
dec
sub
pop
orb
fistps
xchg
mov
popa
fnstenv
mov
dec
adc
ljmp
les
dec
jae
insl
pop
mov
add
in
sahf
sub
add
adc
xchg
and
mov
ret
aad
and
mov
and
lahf
jmp
jnp
pop
jmp
xor
pop
add
xchg
sbb
xor
icebp
sub
jp
mov
ror
sti
and
inc
stos
adc
stos
loopne
cld
jns
mov
insl
sahf
xor
std
cmp
jle
pushf
mov
call
test
pop
js
jmp
sbb
les
pushf
enter
lods
movsb
push
xchg
mov
test
pop
daa
jnp
inc
mov
cmpsb
pop
hlt
movsl
and
inc
rclb
es
js
lahf
lods
lret
push
jl
push
adc
or
cmp
out
jl
dec
fbld
scas
imul
push
sbb
sub
mov
and
xor
sbb
add
xchg
cmc
rol
pop
inc
aam
or
hlt
int3
iret
fs
daa
shlb
jo
push
jge
mov
xlat
inc
mov
andb
mov
push
xor
cmp
mov
addl
or
xor
dec
rorb
xchg
pusha
hlt
sar
or
mov
nop
ret
cs
sbb
push
jns
test
cs
std
push
jb
push
clc
dec
mov
pop
addr16
idiv
xchg
inc
sti
inc
inc
test
cmp
iret
sbb
xor
inc
jge
mov
cmpsl
jecxz
mov
mov
adc
jb
sbb
in
cmpl
jae
ret
jecxz
lea
add
divb
xor
pop
sbb
pop
ljmp
mov
jl
sbb
adc
iret
aaa
aad
mov
mov
inc
pop
adc
repnz
xchg
out
dec
dec
das
sub
repnz
pushf
loopne
movsb
dec
or
enter
mov
shrl
jl
ds
mov
lahf
lahf
adc
addr16
dec
fnstsw
push
movsl
cmp
mov
packssdw
sbb
repnz
xor
mov
loope
mov
jg
insb
loop
cltd
xor
push
add
aaa
dec
cmp
pop
loopne
rcll
add
adc
lods
xor
jg
jne
das
mov
repz
mov
xlat
push
stos
jle
insl
inc
gs
push
hlt
test
repz
mov
adc
inc
fisubs
xlat
imul
cltd
jae
hlt
rcrl
imul
loopne
xor
pop
in
and
out
aas
mov
push
sahf
pop
stos
lods
xor
frstor
imul
jp
jg
gs
dec
stc
repnz
sahf
and
insb
jl
push
cmp
fscale
shrl
add
sahf
push
movsb
mov
popf
cmpl
add
cmpsb
sahf
in
les
sub
aas
xchg
in
leave
sbb
xchg
icebp
mov
sbb
jno
sub
dec
inc
xor
mov
or
ss
sub
inc
sub
mov
scas
add
imul
insl
xchg
mov
hlt
lret
addb
xor
mov
sub
jbe
sbbl
xlat
movsl
xorl
mov
aam
pop
push
cmp
sbb
test
pop
lret
lods
dec
insl
or
pop
fistl
repnz
je
aaa
adcb
xor
or
sbb
je
sbb
femms
cmp
loopne
add
inc
shll
repnz
mov
repz
enter
int3
cld
jle,pn
mov
movsl
mov
aas
lret
jb
push
mov
ret
xlat
insb
movsl
push
and
mov
in
pop
in
inc
into
out
pop
ret
mov
cli
push
or
outsl
fildl
inc
aas
pop
inc
mov
adc
or
and
sbb
mov
cmp
pop
push
popf
and
or
fists
pop
jg
aaa
hlt
cmpsb
mov
add
adc
adc
loop
int
scas
xchg
inc
lods
movsb
movsl
jno
mov
and
dec
push
pop
pop
dec
mov
pop
jnp
into
jmp
xchg
jmp
icebp
or
movsl
call
push
push
jge
dec
mov
js
mov
or
adc
or
xor
mov
or
inc
aam
rorb
lock
mov
ss
mov
test
pop
mov
dec
cltd
aas
ljmp
dec
adc
ficompl
clc
mov
mov
imul
lahf
sahf
test
dec
push
adcb
mov
js
das
sbb
and
enter
dec
and
jl
movsb
stos
xchg
int3
lahf
cmp
mov
sub
pusha
xlat
pop
push
incl
sbb
jp
mov
fiadds
iret
lods
xor
or
pusha
push
sbb
mov
lret
lcall
cli
sbb
xchg
mov
cwtl
sbb
jns
mov
imul
add
mov
cs
inc
flds
sub
lret
clc
pop
cmp
push
jno
jnp
jmp
push
inc
or
fists
clc
lcall
sahf
out
jns
ljmp
out
stc
mov
insl
pand
pop
xor
rcll
in
rorl
mov
sub
or
arpl
in
popa
cmp
cmp
xor
inc
inc
mov
xchg
push
cmp
adc
xchg
cmpsb
push
push
orb
xor
cmpl
inc
sbb
push
fwait
cmc
out
inc
mov
outsb
dec
mov
cld
mov
scas
int
repz
push
add
inc
in
inc
xchg
popf
icebp
movsb
stos
xchg
shll
test
adc
xchg
push
lock
inc
pop
mov
ret
movups
scas
addr16
push
push
lret
test
sbb
jo
cmp
sub
les
pushf
push
inc
sub
and
mov
test
loop
dec
jecxz
inc
mov
push
push
pop
add
mov
cs
out
push
xchg
mov
mov
xchg
cwtl
cld
testb
into
inc
pop
pop
data16
xchg
clc
sub
rcrb
push
push
jp
cwtl
xor
cmpl
mov
stc
ret
push
jp
cmp
lds
stc
ja
sahf
enter
jle
fwait
nop
dec
xchg
leave
stos
scas
cld
lahf
add
dec
jae
mov
xchg
jl
lea
loop
add
xchg
insb
adc
cli
mov
faddp
sub
dec
xor
adc
push
fdivl
xchg
dec
adc
xchg
out
es
testl
test
mov
mov
fstpl
fnsave
and
jg
insl
popa
clc
clc
fisttps
imul
jle
jno
fnstenv
mov
sbb
lcall
dec
mov
adc
loopne
mov
or
push
sbb
mov
es
shl
das
add
push
inc
lods
lea
push
xor
and
add
cwtl
pop
jo
mov
or
mov
cwtl
std
in
sbb
rol
icebp
sbb
dec
adc
cmp
cmp
sarb
mov
cmp
xlat
js
repz
divb
jbe
or
dec
int
or
icebp
adc
lods
add
inc
or
pop
mov
jle
fwait
lea
decb
roll
sub
scas
popf
call
and
mov
xchg
push
fwait
sub
mov
ss
push
fnstsw
stc
stos
push
mov
cmp
xor
mov
pop
sub
je
dec
jg
aaa
cld
cmp
data16
rcrl
inc
xchg
add
out
lahf
mov
jp
mov
cmp
fwait
add
andb
adc
gs
popl
insb
push
and
outsl
loopne
imul
mov
es
call
pop
loopne
mov
mov
cmp
std
arpl
cmp
shlb
js
pop
or
mov
not
loopne
ror
add
das
aas
inc
dec
push
leave
cmc
mov
xor
jmp
xor
jl
mov
outsb
mov
ret
push
lds
inc
cltd
or
leave
cmp
sbb
sbb
inc
fs
daa
pop
push
inc
imul
jg
test
adc
scas
push
xchg
cmp
sub
pop
mov
xchg
push
das
shl
int3
pop
dec
mov
ret
cmp
xor
sahf
rcl
ljmp
jne,pn
push
cmp
dec
gs
ds
js
xor
sub
mov
inc
inc
mov
pop
fiaddl
inc
dec
mov
inc
daa
cmp
push
iret
cwtl
push
cmpsb
jg
dec
push
fiadds
neg
call
add
inc
cmp
add
xchg
or
push
xorl
push
cmp
jmp
cmc
adc
jl
in
stos
cmpl
iret
out
lcall
inc
pop
pop
pop
idivl
lcall
jg
dec
jae
pop
cmpsl
loopne
lret
mov
rclb
inc
paddusw
cmp
subb
pop
mov
ss
testl
mov
push
iret
jo
jle
fdivrl
mov
push
lods
roll
jne
and
mov
leave
outsb
xor
sub
and
mov
add
cmp
sbb
fnsave
add
and
and
adc
bound
js
out
jmp
mov
adc
ljmp
xor
mov
cmp
int3
sbb
push
jge
mov
dec
push
or
jns
xchg
enter
mov
pop
jp
xchg
or
cwtl
add
cmp
push
mov
mov
or
test
inc
cmc
in
sbb
push
push
add
scas
jl
mov
pop
lret
adc
xchg
or
xchg
cmp
sub
fildll
stos
and
loope
sbb
xchg
out
and
cmp
push
sub
pop
int
out
sub
js
adc
push
scas
xor
adc
adc
cmp
mov
pushf
jne
lds
sub
orl
xor
int
shll
adc
cmp
lahf
sub
adc
sbb
dec
pop
inc
xchg
fiaddl
push
xor
popa
pop
scas
jp
adc
js
nop
sub
stos
sub
into
add
sbb
mov
sti
sub
fsubr
jmp
lock
xor
idivl
pop
popa
notb
cmp
imull
shlb
adc
lea
je
nop
nop
iret
adc
pop
xchg
enter
mov
xchg
cwtl
cld
mov
jno
sub
inc
add
fwait
sub
pop
cmp
popf
mov
and
mov
bound
push
sbb
imul
stc
xchg
mov
jb
sbb
push
mov
dec
insb
cmp
and
sbb
mov
jl
mov
mov
lea
scas
sbb
out
sbb
jnp
dec
fdivrp
push
data16
dec
pop
adc
arpl
loopne
push
mov
nop
cmp
sbb
call
jl
pop
mov
shl
loopne,pt
fwait
aaa
les
cs
aad
add
mov
jbe
inc
adc
sbb
aaa
cmp
cmp
push
pop
out
inc
insl
pop
and
jo
das
pop
stos
sub
fdivs
xor
jo
shrb
sbb
xchg
fstpt
sarb
pop
pop
aam
mov
jnp
xor
pushf
cmpsb
ds
les
imul
or
cmc
xchg
daa
and
dec
dec
fldt
jge
add
ret
aaa
jecxz
scas
out
addr16
dec
jmp
pop
xor
pop
mov
fadd
ret
inc
pop
sbb
call
push
adc
call
insb
into
mov
xchg
filds
adc
scas
mov
pop
arpl
adc
lods
nop
cmp
imul
out
aam
ret
ljmp
popa
or
xor
or
aam
adc
decl
sub
insb
sub
nop
repz
stc
movsl
sub
test
inc
cwtl
and
ret
pop
jle
test
cmp
cmc
mov
js
push
dec
xchg
sub
repz
lahf
lods
fwait
sub
fcmovne
adc
or
shrl
sbb
stos
hlt
mov
pop
in
int
or
lret
xor
push
std
mov
popf
mov
lods
jb
out
jo
int3
and
mov
dec
mov
xor
push
and
sti
dec
stc
addr16
arpl
cmpsl
push
cmp
sub
lds
mov
fcomps
jns
mov
dec
clc
outsb
lock
xchg
stos
mov
push
adc
movsw
xor
inc
and
es
cmp
xchg
fstl
scas
out
fcmovnb
dec
dec
xchg
jae
add
cmp
xchg
add
add
imul
data16
push
enter
mov
dec
xor
int
or
sub
or
sbb
push
push
pop
jg
subl
je
insl
push
push
int
in
mov
fidivrl
dec
dec
lock
dec
scas
jns
sub
sub
loopne
into
sub
sub
cwtl
push
inc
and
in
bound
xchg
int3
dec
sub
xor
aas
inc
jae
imul
fnstenv
jp
jg
push
out
fbld
orl
scas
dec
pop
and
dec
jb
das
dec
and
cmpb
and
xor
pop
xchg
loope
mov
sarl
aam
dec
int3
xor
add
dec
sbb
mov
ret
mov
aaa
shrl
push
adc
pushf
adc
jne
aad
lea
dec
or
mov
scas
sub
inc
dec
lock
negl
push
xchg
jae
jae
jmp
xchg
aad
mov
sbb
pop
adc
cmc
sbb
sbb
dec
mov
mov
pop
shr
inc
fstl
mov
idivl
add
fcompl
push
jge
leave
ret
xor
les
inc
stc
nop
mov
dec
mov
stos
add
aas
test
sbb
mov
outsl
push
mov
inc
xor
shrb
mov
pop
mov
loope
jno
dec
xchg
jb
scas
scas
lds
xor
imul
jl
cmpsl
dec
loop
fldenv
jae
mov
sti
pop
movsl
mov
addl
loopne
bound
fs
pop
mov
imul
push
inc
or
pop
rolb
loop
or
and
cli
push
idivb
daa
or
std
cmp
aas
or
and
in
jmp
ret
mov
sub
mov
in
xchg
outsb
xchg
jg
add
lcall
mov
cld
sub
add
fnstsw
fbld
leave
xchg
fisubrs
ljmp
jp
bound
repnz
mov
cld
rorb
mov
mov
jnp
jg
mov
mov
push
loopne
and
dec
repz
push
mov
xchg
scas
push
mov
inc
pop
out
push
addl
dec
jns
dec
mov
lods
mov
pop
ret
mov
mov
cwtl
or
movsb
insl
lea
pop
sti
mov
mov
jb
outsl
sbb
xor
mov
jbe
or
test
test
outsl
jnp
test
pop
rcrl
ret
ljmp
sub
mov
mul
cmpsl
cmp
xchg
xor
ds
fstl
cmp
loopne
repnz
aam
jp
clc
cmpsl
lret
stos
add
jae
fbstp
push
cmp
add
pusha
push
addl
inc
pop
xlat
cltd
repnz
loop
mov
cs
fs
xchg
dec
lods
or
into
jae
push
xchg
sti
ja
outsb
xor
sti
mov
fbstp
data16
test
mov
pop
sar
ds
cmpsb
lcall
push
push
dec
sub
loope
dec
popa
lea
popa
outsl
push
outsl
ja
mov
push
xchg
push
or
sbbb
in
popa
sbb
ljmp
sti
icebp
cmp
stos
jae
rcrb
xchg
pop
lret
je
adc
ret
add
jp
iret
mov
xor
clc
rclb
pop
outsb
jae
adc
je
shr
stos
mov
aaa
push
inc
stos
ret
xchg
lcall
fsubl
lods
xor
movsb
clc
push
pop
xchg
test
cmp
adc
sti
jb
gs
enter
xchg
jnp,pt
cmp
loope
loopne
dec
negl
adc
in
in
mov
xlat
cmp
sbb
mov
or
dec
sbb
push
sub
call
push
cmpsb
and
lret
fwait
cmc
and
sti
mov
mov
and
outsb
cmp
cwtl
lret
sti
mov
lret
call
sbb
ret
fs
jae
imul
mov
sub
testb
ja
psrlw
xor
pop
daa
enter
mov
in
mov
push
cmp
push
fwait
dec
in
movsb
insl
sbb
aas
pushf
rcl
out
xor
jl
nop
clc
xor
rol
adc
mov
lahf
jno
scas
lcall
sbb
push
ljmp
and
fistpl
xchg
into
mov
mov
loope
adc
mov
jge
jecxz
sub
fcoml
mov
fadds
mov
dec
push
mov
jp
cmp
daa
mov
cmp
push
pop
push
or
outsb
arpl
mov
ja
lock
aaa
popf
call
jbe
inc
xchg
enter
dec
repnz
inc
mov
cltd
mov
sahf
sbb
or
xchg
dec
dec
add
mov
jp
call
ss
push
in
rcrb
mov
cld
push
cmpsl
sbb
lods
test
add
mov
addb
jmp
dec
jno
inc
jmp
icebp
mov
xor
out
clc
cmc
push
aad
lea
adc
shrl
js
mov
xor
xor
adc
push
sub
frstor
repz
je
mov
aaa
mov
xor
inc
out
insb
mov
ret
out
xchg
adc
sub
mov
jmp
and
xchg
mov
nop
inc
bound
push
cmpsl
stos
mov
xlat
aad
jne
test
pop
push
mov
sbb
mov
loop
and
mov
push
xchg
dec
lcall
cmpsb
push
ficomps
push
popa
xor
push
mov
pop
sub
stos
or
in
lcall
mov
cmp
add
lea
pushl
mov
movsb
stc
inc
xor
mov
mov
lea
inc
add
push
jae
xor
cmp
movsl
mov
aas
mov
dec
mov
inc
popf
ss
in
test
imul
scas
aad
and
pop
daa
outsb
ja
cmp
mov
mov
test
repz
jo
fimuls
push
jbe
dec
out
and
and
xchg
xchg
dec
cltd
inc
lret
jle
or
stc
and
out
insl
inc
cmc
mov
jge
subl
xchg
rcrb
lds
testb
inc
xor
mov
test
push
and
aas
cmp
inc
das
ret
mov
sbb
dec
cmp
enter
push
loop
pushf
inc
pop
shrb
jmp
xchg
jo
mov
pushf
push
out
push
jecxz
xor
xor
or
and
imul
out
jbe
jae
shl
mov
jmp
xchg
fld
inc
jno
mov
mov
jmp
and
sbbb
cld
xlat
mov
data16
sbb
mov
rol
xlat
push
push
mov
inc
ds
xor
mov
shll
iret
insl
pushf
or
xchg
in
sti
dec
or
clc
xor
pop
jg
fldl2e
fisubrl
mov
cmp
mov
enter
pop
in
stos
into
inc
push
mov
ret
scas
jl
mov
insl
cmp
xchg
cmp
daa
push
lret
xor
shl
jl
inc
inc
inc
add
jno
imul
es
or
pop
or
or
pop
pop
imul
int3
stos
nop
mov
mov
clc
sbb
cmp
jnp
jle
sbb
sub
xor
push
inc
jae
sbb
cmp
push
cwtl
rcrl
cs
sub
ret
push
adc
mov
loop
cmpl
push
or
subl
dec
lods
jg
mov
dec
jecxz
lahf
movsb
fcompl
fcomp
pop
sti
lea
lds
dec
stos
insb
push
dec
pop
lods
ss
std
inc
sbb
sub
mov
xor
in
sub
xor
aam
cmp
cmc
loop
or
ret
sbb
out
or
mov
outsl
xorl
outsb
stc
lret
and
xchg
mov
and
mov
dec
int3
sub
add
arpl
out
push
pop
movsl
xor
jne
fldcw
jbe
imul
sub
xchg
out
and
inc
adcb
push
sub
insl
or
loopne
mov
sub
lahf
inc
xor
inc
into
and
enter
dec
cld
arpl
pop
movsb
xchg
out
lret
insb
jno
lret
push
add
mov
push
xchg
or
xchg
mov
pop
mov
pop
int
jnp
loope
sbb
add
adc
popf
xchg
fsubp
mov
push
cmp
and
fisubl
jno
cs
rclb
mov
add
and
inc
mov
pusha
mov
jo
cmp
and
and
fcmovne
addr16
xchg
dec
insl
imul
push
cli
sub
lret
or
sbbb
adc
or
dec
aad
mov
dec
cltd
rcrb
dec
mov
addr16
sub
xchg
inc
pop
jbe
outsb
mov
movsl
inc
scas
sahf
lods
mov
mov
mov
mov
cmp
sar
jb
inc
xor
mov
lods
xchg
push
mov
bound
inc
ljmp
cmp
add
and
inc
cmp
out
inc
xor
cmpsl
push
cmp
aam
std
push
pushf
mov
sbb
adc
icebp
push
sbb
push
push
mov
pop
js
jbe
jmp
or
add
lret
mov
or
jl
scas
lock
lock
std
or
push
addr16
push
loop
jmp
mov
sbb
leave
fsubrl
std
subl
sbb
addr16
jmp
push
cmp
cld
xchg
xchg
mov
mov
gs
mov
adc
jle
push
sbbl
mov
xor
lods
test
mov
inc
adc
fucomp
es
mov
or
ss
lcall
sarl
fldcw
out
scas
bound
sbb
add
mov
or
outsl
leave
mov
pop
push
lods
push
inc
push
jmp
mov
push
in
cmp
rcrb
fists
rcrl
mov
cltd
cmp
lahf
push
xor
aas
jo
jecxz
sti
or
push
jb
cmp
stos
or
and
pop
push
dec
aam
mov
add
and
and
inc
and
cmp
das
dec
cs
cmpsb
enter
jle
mov
imull
add
test
inc
out
jnp
push
push
dec
cwtl
jecxz
and
xor
adc
mov
inc
xor
mov
outsb
ret
lret
push
mov
decl
xchg
test
sar
xchg
push
repnz
cltd
stos
xchg
adcb
aas
bound
xor
test
mov
add
xchg
mov
inc
add
movsb
loope
pop
cmp
push
cld
mov
rcl
cmp
adc
gs
in
add
xor
dec
push
mov
int
xchg
jns
and
dec
pop
or
or
dec
pushf
aaa
aad
imul
mov
cli
fnstenv
hlt
in
lods
movntps
pop
xor
dec
mov
xchg
lock
ret
pushf
jnp
sub
fdivs
cltd
add
sbb
mov
xchg
adc
data16
cmpsl
xchg
mov
mov
inc
iret
popf
xor
push
mov
xchg
mov
sub
mov
and
inc
sub
loopne
insl
es
pop
push
pushl
das
push
insl
out
mov
cli
stos
and
xchg
fwait
addb
mov
aad
mov
or
icebp
je
push
and
pop
mov
ret
dec
mov
ja
les
addl
add
jmp
outsb
xor
cmp
push
jne
mov
sarl
loope
sbb
aam
dec
jns
mov
push
rcl
insl
cmp
xchg
mov
push
iret
pop
pushf
add
cmp
mov
cmp
out
dec
push
pop
movsb
cmp
insb
mov
iret
cmpsl
push
push
cmp
ret
cmp
push
xchg
push
stc
xchg
jnp
add
int
mov
mov
lock
push
repnz
jl
or
fdivl
fists
mov
pushf
inc
fisubrl
rolb
cmp
fmuls
and
sbb
in
js
into
jno
sbb
popa
fnstenv
add
scas
dec
and
mov
dec
andb
sahf
es
xchg
or
mov
lcall
lcall
push
and
pop
sbb
mov
ret
shlb
jg
pop
xor
cmpsb
and
test
jns
cmp
cmp
inc
cmp
rorl
or
lea
fimull
sbb
sbb
das
xchg
mov
jle
xchg
dec
subl
jnp
sub
test
or
inc
pop
call
lcall
and
out
pop
addr16
aaa
mov
inc
mov
js
daa
into
mov
movsl
repz
dec
xor
sbb
stos
shlb
mov
mov
pop
and
pop
sub
ficoms
push
cmpsl
adc
jp
scas
jecxz
add
sbb
nop
mov
jle
inc
xchg
popa
inc
inc
ret
or
arpl
popa
mov
lds
mov
cmpl
push
int
cmp
jno
jmp
lcall
or
fs
pop
cmpsb
repz
sub
push
mov
xor
xor
sub
rcrl
sub
xor
imul
hlt
int
push
fsubrs
cmp
loope
xor
cmpsb
test
xchg
aaa
in
jge
fs
incb
xor
push
repnz
gs
mov
mov
lret
xor
rcl
add
lods
sub
add
dec
mov
mov
mov
stos
sbb
sbb
or
xchg
pop
loop
sbbb
lcall
push
mov
xorb
adc
push
loopne
adc
in
mov
cs
insb
jmp
fimull
adc
ja
or
call
inc
pop
clc
ret
mov
mov
popf
aas
pop
mov
xchg
cli
fcomps
cmc
cmp
fdivr
dec
ret
lods
xchg
lcall
mov
xchg
insl
push
mov
xchg
movsl
cwtl
loopne
pop
scas
push
xchg
mov
adc
and
aam
inc
inc
lods
xchg
dec
mov
mov
xchg
mov
fldt
push
scas
pop
ljmp
sbb
xchg
movsb
sbb
insl
or
push
inc
cmpsb
sahf
mov
sub
and
pop
pop
mov
pop
xchg
push
fbld
ja
push
mov
mov
push
stc
inc
inc
cmp
push
sbb
xor
icebp
and
jmp
rolb
add
leave
jle
xchg
leave
push
mov
adc
jnp
push
mov
sbb
sbb
fsubr
mov
gs
mov
push
push
ja
ja
dec
and
pop
push
int
mov
cmp
scas
arpl
sub
inc
push
inc
imul
jmp
inc
fldl
add
sahf
mov
popa
add
jns
mov
arpl
xchg
cld
push
out
dec
imul
faddl
mov
fisttps
nop
sub
xlat
loop
xchg
inc
aad
jg
sbb
pop
shrb
imul
pop
mov
push
lcall
mov
pop
push
mov
ljmp
push
ljmp
adc
lcall
sub
or
dec
fiaddl
scas
cli
adcl
in
pop
insl
adc
and
mov
cmp
daa
arpl
inc
jnp
xor
loope
push
movsb
addr16
adc
js
push
ja
xlat
loope
lcall
cmp
fidivrs
shrl
in
push
es
enter
std
xchg
add
pop
mov
repnz
inc
push
das
sarl
inc
mov
je
xchg
imul
cmpsl
std
insl
pushf
rol
iret
push
pusha
jbe
cs
cmpsb
int3
xchg
rcrb
jecxz
jg
popf
lcall
pop
lcall
xchg
pop
jns
xor
addr16
mov
sbbb
in
popa
mov
dec
filds
decb
es
sti
iret
add
xor
repnz
or
pop
cmp
outsl
mov
push
mov
aam
das
movsl
ja
or
push
les
inc
fnstenv
mov
push
arpl
push
xor
jnp
sub
gs
popf
fmuls
adc
inc
mov
sbb
xor
xchg
sbb
popa
xchg
jmp
aas
loop
orl
or
jb
pop
addr16
rcll
push
fdiv
lret
scas
daa
jno
icebp
cmp
cmp
pushf
std
decb
repz
pusha
cmp
stos
mov
add
dec
insl
mov
push
cmp
fnstcw
in
es
clc
add
inc
movsl
je
xchg
lock
xchg
out
add
pop
sbb
mov
sar
pop
push
jmp
repz
xor
lods
xchg
jno
out
popf
sub
pop
pop
xor
xor
or
sar
cmp
jne
cmpsb
sbb
in
outsl
jno
ret
subb
push
xchg
dec
int3
arpl
dec
rorl
jb
out
adc
inc
xchg
cmpsl
sub
ror
pop
fnsave
popa
mov
and
lret
scas
or
lods
cwtl
pop
add
sar
push
or
aad
in
ret
bound
mov
cmp
jle
cld
icebp
inc
adc
add
sbb
cmp
sbb
mov
nop
test
cld
xor
jo
add
xlat
loop
adc
inc
mov
stc
aad
mulb
push
ret
mov
push
in
and
cmc
jecxz
pusha
in
dec
push
das
xor
add
pop
out
imul
inc
cmp
int3
or
xchg
sub
icebp
pop
push
insb
mov
lahf
negb
jl
stos
test
stc
sub
cmp
lods
jmp
cmpsl
cmp
mov
push
add
sbb
jle
std
push
adc
test
cs
push
cmc
lcall
in
lds
popf
sub
dec
sub
roll
sarl
jb
test
and
out
int
leave
rorb
arpl
sarb
mov
sbb
fisubrl
adc
pop
stos
fwait
dec
pop
and
pop
cwtl
repnz
and
mov
pop
sub
push
mov
adc
sub
inc
into
shll
adc
cmp
adc
in
mov
cmp
imul
inc
dec
hlt
adc
mov
cli
add
in
rol
orb
cmp
cmp
cmpsb
stos
push
mov
xor
addl
test
dec
add
data16
xor
shrl
jbe
in
sbb
rol
gs
fstpl
ret
sub
xchg
add
sub
pop
pop
dec
ljmp
gs
jg
adcl
shll
cmpsl
ror
push
mov
shlb
out
inc
stc
xchg
in
mov
ret
mov
fnstsw
test
and
and
dec
outsl
cmp
fcoml
test
faddl
shl
pop
cwtl
jae
or
xlat
aas
dec
stos
test
pop
fs
sbb
aaa
pop
in
mov
pop
in
std
fadds
mov
sub
mov
clc
add
add
xchg
loope
add
add
and
ret
aaa
out
xchg
bound
adc
lahf
jge
cmp
repnz
inc
iret
pop
mov
push
call
cmp
cmc
addb
push
mov
mov
daa
mov
fsub
xchg
in
das
and
lods
into
inc
push
iret
arpl
ja
inc
fs
cmp
push
jmp
pop
lods
jo
cld
pop
mov
push
cmp
lahf
adc
sub
inc
arpl
loop
adc
test
insl
and
add
and
roll
add
inc
imul
in
je
aas
int
jne
dec
loop
je
ljmp
ret
mov
inc
cld
imull
mov
mov
ret
test
lret
add
aam
sahf
push
sub
out
or
jg
cmc
jbe
testb
mov
jne
shll
cwtl
push
xlat
test
mov
lcall
es
scas
mov
adc
pop
pop
imul
fistl
stc
inc
pop
shrl
pusha
dec
test
imulb
setns
xor
div
mov
jmp
testl
loop
jnp
lock
and
pop
jle
pop
outsl
hlt
outsl
rcr
ficoms
or
sahf
insb
dec
or
das
pop
repz
ja
mov
cwtl
ret
je
pop
jnp
sub
mov
xchg
adc
mov
adc
or
xchg
js
out
sahf
mov
sti
or
pusha
out
push
scas
mov
adc
subb
fcmovu
stc
icebp
dec
ljmp
or
mov
out
test
mov
shl
xchg
dec
cmc
insb
mov
or
loope
pusha
ss
es
or
arpl
lds
mov
or
fldl
shlb
cli
dec
pop
xor
subl
ss
loop
inc
or
repnz
dec
loopne
fisubrs
cmpsb
push
pop
ljmp
mov
xlat
push
inc
xor
push
imul
adc
std
push
ss
xchg
insl
inc
loop
sahf
jns
mov
xchg
xchg
gs
std
test
and
pop
in
sarb
aad
jg
cmp
nop
mov
sub
sub
adc
mov
add
push
xor
xchg
xchg
scas
jo
outsb
sub
inc
iret
into
pop
arpl
es
cwtl
fldl
pop
push
pop
cmc
ljmp
xchg
adc
lret
inc
outsl
adc
mov
insb
popa
shr
popa
sub
aaa
mov
push
adc
inc
subl
mov
repnz
loope
pop
imul
and
jno
subl
adc
inc
loope
xor
in
outsl
mov
cs
jge
imul
mov
ror
inc
insl
inc
sahf
mov
push
xor
inc
or
jb
mov
inc
shrb
dec
xchg
jl
imul
lret
ljmp
sub
insl
clc
add
test
jo
inc
and
out
ss
lret
fisttpl
mov
leave
mov
jmp
xchg
scas
push
xchg
loop
sbb
enter
jmp
in
mov
sub
jo
test
or
jg
repz
inc
repnz
push
cmpl
sub
cld
repnz
call
jns
gs
in
cmc
add
pop
sbb
sarb
mov
scas
cld
movsb
push
inc
cmp
fisttpl
rcll
mov
shrl
scas
ljmp
test
pmovmskb
lcall
pop
push
xchg
mov
jnp
leave
stos
pop
repnz
mov
add
mov
or
jl
divb
mov
movsb
push
mov
sub
in
ss
popf
sub
push
cmpsb
ljmp
mov
inc
cmp
xor
mov
aas
sbb
push
adc
faddl
mov
stc
neg
jl
push
bound
inc
and
inc
inc
in
mov
fdivs
mov
add
pop
addr16
sbb
or
and
sarb
cmpsb
test
xor
mov
int
fbld
xor
loope
pusha
jmp
lods
mov
into
roll
repnz
add
fadds
leave
jae
xor
fdivrl
inc
mov
in
in
lock
or
jg
push
lds
ja
ljmp
xor
mov
mov
les
pop
addb
adc
inc
xchg
stc
mov
xchg
sbb
pop
gs
or
mov
xlat
insl
inc
sbb
mov
fdivl
xor
pop
jmp
aas
and
mov
adc
scas
aaa
fs
lea
dec
je
inc
push
data16
mov
mov
dec
dec
xor
fs
fcompl
push
add
rol
icebp
and
jp
scas
pop
and
cmp
shl
dec
mov
xchg
loop
paddsb
dec
dec
push
push
scas
xchg
cmpsl
pushf
iret
out
mov
in
jl
mov
adc
aas
testb
cmp
in
adc
push
sbb
arpl
dec
mov
sbb
cmp
dec
add
cmp
lret
xorl
adc
pop
bound
int3
out
dec
rcll
inc
aaa
addb
jle
mov
nop
dec
hlt
add
jmp
add
mull
lds
mov
lret
pop
mov
add
inc
std
imul
aaa
fisubrl
and
cmpsb
sbb
mov
push
pop
mov
sbb
cmp
dec
gs
dec
mov
mov
mov
xchg
or
imul
mov
jne
popf
jl
xchg
loope
or
call
dec
dec
cs
test
mov
jmp
cs
arpl
aas
js
jecxz
test
fdivs
xchg
mov
fidivrl
xchg
aad
push
mov
mov
imul
sub
dec
stc
add
test
lock
sbb
movsl
enter
std
jl
in
mov
mov
fbstp
arpl
stc
xchg
push
pop
das
repnz
cmp
cmpsl
xchg
ja
enter
imul
fwait
movsb
das
and
je
mov
daa
mov
dec
ret
sub
lock
pop
addr16
ljmp
neg
pop
std
clc
sbb
ljmp
xchg
test
or
jb
mov
push
mov
adc
xchg
stos
sbb
fisttpll
lods
push
mov
lea
repz
xchg
dec
int
mov
jle
outsl
push
gs
addr16
daa
sub
into
mov
shl
cmp
xlat
mov
pop
ret
xor
or
xchg
adc
or
cmp
insb
mov
xchg
imul
mov
sub
mov
push
xchg
push
arpl
js
clc
int
sbbl
xor
rep
push
sbb
pusha
js
stc
inc
jl
mov
scas
mov
std
or
mov
inc
xor
fildll
push
repz
xor
xor
gs
arpl
and
fisubl
scas
fisttps
iret
xor
repz
test
push
lock
pop
out
and
cmp
mov
xchg
not
dec
push
dec
arpl
xchg
mov
sti
aam
je
or
fs
xchg
sbb
jmp
aas
fildll
inc
push
fdivrl
ret
incl
push
sub
sub
repz
push
jmp
outsl
rorb
pop
lea
inc
lcall
push
lret
nop
push
shll
scas
jl
sub
movsl
pop
sub
dec
jnp
mov
in
movsl
add
stc
cltd
ljmp
faddl
lahf
xchg
add
mov
pop
dec
mov
popf
adc
mov
push
mov
mov
scas
add
jne
addr16
shlb
inc
popf
mov
daa
push
jbe
xchg
xchg
in
fbstp
xor
dec
or
test
nop
rclb
dec
lock
pop
pop
xor
std
mov
mov
sbb
sub
sti
xchg
jnp
scas
int3
out
int3
aam
xor
sbb
sbb
xor
cwtl
addr16
adc
pop
js
stc
pop
xchg
sbb
push
dec
sbb
mov
dec
and
sub
out
cmp
mov
and
negb
add
push
shll
jmp
clc
sub
push
and
and
loope
jle
adc
add
xor
inc
lea
xor
jge
dec
mov
xor
push
push
dec
insl
pop
adc
xor
cld
aad
loope
sahf
aaa
dec
popa
mov
insl
adc
mov
pop
mov
out
push
int
mov
pop
sub
popa
clc
stos
mov
and
imul
sbb
jle
xchg
mov
idiv
lcall
cli
roll
enter
jb
in
inc
lds
das
jbe
stos
xchg
aas
test
mov
andb
adc
add
scas
cmp
sub
out
adc
or
decl
aas
adc
test
in
adc
mov
cltd
shl
out
pop
orl
jbe
mov
sbb
mov
push
cmp
mov
dec
into
jecxz
inc
add
adc
pop
lock
sub
add
and
push
mov
stos
mov
test
popa
and
out
cmc
in
pop
loope
push
and
iret
cli
mov
nop
or
dec
cmc
outsl
out
jno
popa
popa
les
cld
jo
pop
jp
gs
jbe
sub
jno
pop
sbb
add
mov
mov
in
sub
sbb
adc
test
mov
xchg
scas
mov
mov
les
inc
addr16
pop
jp
mov
jp
clc
jo
stc
cld
xchg
push
xchg
jge
or
fldcw
mov
rol
aad
in
sti
out
mov
aad
imulb
lret
lret
cmp
lret
fwait
arpl
adc
add
ficompl
mov
jno
or
mov
movsb
movsl
negl
push
cwtl
sub
pop
jle
daa
add
jno
daa
loop
cwtl
call
sahf
sub
cld
fdivs
pop
sbb
lock
nop
test
mov
scas
pushf
mov
and
jl,pt
mov
pushf
cmc
dec
cmp
test
sub
mov
fisubl
leave
add
cmp
decl
das
popf
xchg
xchg
adc
jge
jle
into
and
rorl
loopne
rorl
or
or
xlat
adc
sbb
vunpckhpd
ljmp
cmpsb
fmuls
dec
sub
jg
std
xorl
repz
pushf
or
sub
adc
cwtl
lock
popa
xor
mov
stc
dec
repnz
cld
inc
inc
cmp
repz
dec
xor
and
iret
pop
std
fwait
es
jae
loopne
jno
insl
ljmp
aas
adc
stc
cs
dec
mov
dec
pushf
sbb
add
jg
out
imul
clc
xor
or
dec
add
lret
roll
jns
ljmp
clc
popf
scas
xor
clc
xchg
outsl
mov
jmp
jge
pop
xchg
mov
imul
sbb
add
jp
cmpsl
xchg
and
xlat
inc
push
loop
fiaddl
push
inc
inc
test
dec
stc
mov
test
xor
scas
jmp
loopne
sti
dec
int3
xchg
cmp
mov
stc
lock
push
and
add
adc
jae
or
cmp
jno
icebp
fcmovb
fcomps
dec
mov
jno
mov
aas
dec
negb
shlb
lea
sub
pop
push
mov
pusha
sub
jnp
rorl
mov
and
ss
pcmpgtw
xor
loopne
loop
push
push
pusha
pusha
mov
int
jne
mov
push
jge
cmp
lock
push
imul
jmp
inc
sub
lahf
xor
and
mov
mov
cmp
dec
inc
mov
push
inc
dec
pop
inc
cmp
repnz
fsubrs
leave
movsb
leave
sbb
insb
pusha
test
or
xchg
add
mov
shl
jns
jle
divl
dec
or
dec
ds
adc
xor
and
daa
pusha
mov
pop
sbb
ljmp
loopne
xchg
and
ds
jns
jmp
mov
pop
mov
scas
pop
xor
nop
out
out
pop
pop
fadd
dec
test
aam
sub
push
mov
inc
jo
int
in
xchg
lret
outsl
jne
pop
add
mov
out
lock
dec
sub
lea
inc
add
pop
ds
jp
inc
adc
adc
and
push
jl
movd
xor
mov
mov
cwtl
dec
add
lds
clc
push
aas
cli
sub
sbb
lret
fwait
dec
pop
pushf
in
gs
outsl
mov
mov
or
mov
mov
lods
lret
add
mov
into
imul
cwtl
xchg
insb
dec
insl
lock
lods
daa
icebp
add
lret
cmp
das
jbe
dec
addr16
shlw
jmp
es
outsb
cmp
pop
mov
in
bound
int3
sub
xchg
adc
mov
out
push
leave
sbb
cmp
loopne
movsb
test
loope
scas
in
out
or
in
pop
enter
cmp
pop
enter
into
xchg
sbb
in
jmp
inc
mov
xor
adc
out
imul
mov
iret
add
jp
daa
mov
das
dec
loope
sbb
sahf
inc
shrl
inc
jne
les
movb
subl
aam
or
or
inc
mov
pop
jl
xor
orl
int3
sub
sbb
and
or
xor
adc
fisttpll
sub
sub
inc
icebp
and
inc
inc
push
mov
xor
xor
lods
and
rcl
and
lahf
xchg
or
cmp
and
adc
fistl
dec
jnp
sbb
jae
scas
cmpsl
xchg
cmpsl
xor
hlt
scas
cmp
mov
cld
addr16
daa
js
rcr
lret
lea
sarl
jae
pop
mov
pop
cmp
mov
not
mov
pop
mov
fidivs
mov
lods
lahf
stc
pop
xor
xchg
outsl
repz
sub
out
adc
testl
outsb
cmp
iret
lds
and
rcrl
out
insb
xchg
std
movsl
scas
or
mov
std
mov
out
fcomps
xchg
jg
and
stc
push
mov
lods
ret
clc
es
sahf
push
mov
lds
mov
push
insb
popf
sbb
jp
shr
cmp
or
pop
add
test
mov
dec
pop
xchg
push
imul
xlat
pusha
loope
icebp
jecxz
imul
lret
out
adc
sub
mov
jmp
int
icebp
xor
insb
lock
cli
mov
xchg
movsb
aas
movsb
jecxz
jno
mov
fisttps
cmpsb
stc
add
loopne
sub
out
or
jecxz
aam
push
dec
push
jo
dec
mov
mov
mov
xchg
hlt
add
inc
fbstp
mov
imul
test
adc
shr
mov
xchg
mov
fdivl
cld
je
cld
stos
dec
test
fs
adc
aam
jo
pop
fsts
xchg
mov
cmp
mov
sbb
sub
mov
push
push
mov
movhlps
or
repnz
and
popa
sbb
mov
nop
sub
and
adc
fstl
pusha
and
test
or
inc
jge
sbb
adc
ret
out
js
jge
pop
and
loop
mov
ret
and
adc
jg
into
and
cmpsl
push
lea
insb
and
push
push
jge
fdivs
push
jl
inc
fidivrs
fwait
shll
aaa
test
shlb
xchg
repnz
arpl
mov
ds
inc
fs
stos
inc
or
mov
adc
inc
xchg
stc
mov
aad
lcall
hlt
fldt
push
in
mov
add
test
cmp
enter
sbb
js
rcrb
into
xor
mov
out
adc
fnstcw
aad
push
mov
fisttpl
gs
fsts
in
inc
shll
xchg
insb
push
xchg
pop
out
cmc
ja
scas
pop
sub
es
dec
hlt
lea
add
pop
cltd
lret
mov
aas
adc
adc
sahf
fldenv
jb
xchg
adc
je
sub
push
std
cmpsl
inc
lahf
add
mov
adc
xchg
adcb
jae
lea
lahf
ja
jno
add
cmp
mov
pop
arpl
mov
adc
mov
push
mov
pop
and
dec
inc
push
mov
sub
sub
frndint
adcb
xor
dec
mov
leave
inc
aas
cs
out
push
push
arpl
lret
insl
setle
pop
test
jg
mov
and
divl
es
stos
push
outsb
push
movl
mov
add
enter
cs
repnz
shl
add
mov
xchg
lea
nop
jae
dec
in
aaa
bound
dec
jmp
xchg
ss
sbb
inc
test
ja
dec
in
adc
jns
xchg
jge
sti
int3
xchg
push
or
rorb
cmc
jne
dec
lea
mov
popa
mov
sub
adc
sbb
fists
loop
jo
inc
jp
mov
pop
movsl
cmp
mov
push
out
stos
push
ffreep
outsb
cwtl
fistl
test
push
ds
mov
push
xchg
xchg
pop
jmp
sub
repz
sbb
test
inc
mov
sbb
mov
jmp
jne
add
cmp
inc
das
dec
repz
jecxz
mov
cmp
sbb
add
dec
fs
in
nop
push
add
fildl
mov
sbb
cmp
shll
sub
push
push
cmpb
xor
fisubrl
mov
or
inc
and
push
cmp
int3
sub
aaa
fildll
fwait
or
andb
inc
jecxz
cld
in
shll
cmp
xchg
js
mov
test
and
out
and
dec
pop
inc
mov
rcrl
fs
cmp
addr16
pop
xchg
dec
inc
lea
js
pop
sub
into
jo
das
aaa
sbb
test
mov
cmp
lret
jp
test
adc
cmc
fistpl
lods
push
stos
int3
or
push
xor
sbb
and
test
test
cmpsl
adc
lahf
sbb
mov
filds
orb
xchg
stc
or
inc
xor
mov
popf
shrb
rorb
fisubrs
mov
outsb
mov
dec
leave
insl
lret
cmp
jne
shlb
lea
xchg
xchg
sub
mov
outsl
inc
inc
mov
dec
es
push
arpl
pop
lods
in
out
dec
cmp
scas
push
sub
inc
push
inc
icebp
mov
cli
cli
popf
jae
sbb
and
shll
out
add
fsts
stos
dec
pop
sbb
nop
gs
or
push
in
push
movsb
std
ret
int3
popf
rcr
cmp
push
mov
push
lock
and
ds
int
insl
mov
popl
push
insl
in
xor
pop
jg
xchg
cmc
js
pop
mov
cmp
leave
neg
pop
or
lods
or
push
pop
sbb
out
cmp
jne
lods
jle
jg
adc
test
xchg
cmpb
fstl
or
mov
sbb
jge
pop
iret
pop
mov
ret
repz
adc
ljmp
push
push
gs
mov
cmp
ficomps
mov
outsl
push
sub
inc
lcall
loop
jg
iret
push
data16
lea
mov
cltd
mov
fsub
mov
sti
mov
cmp
mov
jns
enter
jl
add
adc
sar
in
fldenv
cmpsb
lret
lods
shll
sarb
icebp
aaa
int
or
pop
push
stc
fwait
imul
xchg
xor
iret
and
imul
xor
cmp
inc
push
dec
leave
daa
push
loope
movsb
dec
cmpsb
push
sub
stc
mov
ret
lcall
adcl
mov
xlat
cmp
or
push
xchg
in
mov
fsubrl
iret
jecxz
or
adc
xor
sbb
nop
int
lret
lds
pop
jns
pop
jno
repnz
mov
shr
iret
pop
orl
test
movq
adc
js
push
push
dec
xchg
jo
dec
leave
jns
fcom
sub
mov
es
shl
ret
js
sbb
inc
std
dec
ret
fwait
stc
mov
pop
popa
inc
test
or
repnz
aam
loopne
incb
imul
cmp
adc
in
and
aad
arpl
pop
add
dec
test
shl
mov
mov
jae
neg
pop
jo
inc
cmp
add
mov
data16
sbb
xchg
and
mov
mov
dec
xchg
jg
ja,pt
int
repnz
out
repnz
and
idivl
xchg
fisttpl
adc
repz
rorb
mov
stos
arpl
dec
mov
js
sub
xor
jae
xchg
cmpb
adc
fs
hlt
ficoms
mov
sub
shrl
cli
lock
jp
pop
repz
lcall
shl
imul
and
dec
loop
rcll
jae
pop
les
bound
in
jb
out
ja
dec
dec
in
push
or
adc
lods
sub
xchg
jecxz
mov
fwait
stos
dec
jns
adc
jp
pop
ficompl
nop
in
pop
loope
lock
sub
int3
jns
xchg
dec
pop
xor
insl
mov
movsb
inc
lock
push
sub
fcmovbe
out
jnp
pop
xchg
pop
push
mov
xchg
pop
mov
iret
xor
mov
lods
inc
cmc
sub
lcall
push
adc
jp
ds
inc
inc
out
loope
les
push
dec
pop
mov
jmp
adc
fimull
dec
sub
mov
and
jo
loopne
stc
nop
addr16
pop
inc
aad
sub
xor
aas
mov
enter
rorb
add
xor
or
cmp
xor
jmp
cltd
push
dec
adc
jb
popf
test
fiadds
jmp
mov
jb
test
or
push
jnp
jle
cmp
data16
cmp
push
push
push
stc
or
inc
inc
xchg
cmp
mov
dec
xor
pop
jmp
clc
shlb
js
or
adc
or
push
xor
and
js,pt
loop
and
fwait
inc
shrb
idivb
xchg
ja
insb
adc
jg
push
les
lock
test
cwtl
cli
cmp
and
pop
movsl
inc
and
cmp
lods
and
movsl
push
jne
mov
lods
in
mov
mov
jg
mov
adcb
push
jge
mov
push
ljmp
lret
and
leave
movsl
aas
push
test
ljmp
push
int
xor
sbb
pop
or
adc
inc
mov
dec
rsqrtps
and
mulb
adc
faddl
test
cmpsb
or
xor
call
pop
pop
rorl
dec
shlb
cmp
or
pusha
jle
dec
fdivrp
daa
sub
popa
dec
or
pusha
sub
je
enter
or
std
jnp
sbb
fldenv
mov
loopne
cmp
mov
bound
sub
popf
xchg
cmp
jecxz
xor
dec
insb
fucomi
outsb
sub
mov
ror
fwait
test
sub
incb
jmp
mov
ficomps
pop
loopne
sub
xor
roll
scas
push
adc
ds
adc
lock
mov
hlt
adc
push
dec
cli
mov
or
jle
xor
je
ljmp
lods
sbb
ds
das
xor
loop
lret
sub
mov
test
cmp
andb
sub
loop
mov
ffree
jmp
fmuls
push
push
repz
xchg
fcomi
adc
dec
and
insl
aas
aam
dec
or
out
mov
in
dec
jle
icebp
out
ret
data16
add
xor
ret
xorb
cltd
ret
lock
nop
sbb
cmp
add
dec
movsl
sbb
sub
push
std
xor
fcompl
or
imul
ds
xchg
cltd
shrl
mov
cltd
and
loope
outsb
lods
call
jns
mov
push
lret
mov
sbb
in
sbb
shlb
push
xor
mov
push
ds
jne
stc
outsb
mov
and
aad
cmp
sbb
add
mov
loopne
outsb
jne
fistps
xor
jl
push
add
cltd
shlb
movsb
in
test
dec
daa
out
and
ja
movsl
mov
mov
imul
popf
jp
mov
outsb
rorl
xor
shrl
inc
icebp
aaa
test
sub
fisubl
inc
xor
testb
sub
lock
aam
mov
loop
xchg
ljmp
xchg
test
cmp
jp
xor
fdivs
gs
jmp
push
mov
lea
sbb
mov
cwtl
outsb
repz
sbb
scas
push
pop
xor
sbb
jns
or
mov
pop
cmp
icebp
inc
dec
bound
jae
std
pop
cmp
outsl
cmc
adc
aas
xchg
andb
jmp
lcall
dec
outsb
repz
loop
ss
mov
mov
fcomi
outsb
mov
popf
movsl
push
add
mov
mov
mov
push
jecxz
pop
or
inc
repnz
mov
stos
pop
in
mov
ja
jns
and
ss
mov
adc
lods
test
push
bound
cltd
outsb
inc
xchg
cmp
movups
fidivl
mov
dec
popa
mov
pop
xchg
aad
enter
pushf
cmc
popf
mov
je
inc
add
testb
sub
clc
add
xor
aaa
cmc
mov
add
fstl
mov
push
out
mov
out
jbe
pop
fidivs
sti
arpl
jge
jl
lahf
mov
stos
jmp
or
add
js
imul
jne
mov
push
add
mov
fistpll
mov
xchg
push
lret
aaa
aam
in
mov
inc
js
xor
pushf
add
xlat
adcl
sub
xchg
push
push
jb
adc
mov
xchg
addb
out
test
cmp
dec
cmp
imul
sub
mov
xchg
lret
push
imul
ss
out
ror
loopne
xor
ja
pop
and
arpl
lock
xchg
mov
add
jo
sub
sbb
incb
movsb
repnz
sarl
je
lds
xorl
les
arpl
jo
push
fisttpll
addr16
frstor
in
push
xor
xor
mull
fimull
mov
xor
push
and
and
out
jbe
jnp
fistpl
lods
adc
stos
gs
stos
jg
das
sti
push
cwtl
adc
mov
aam
sbbl
inc
ret
js
dec
add
dec
lret
sbb
xor
lods
pushf
notl
aam
aaa
mov
stos
sub
sarl
add
clc
mov
stos
std
push
sbb
loope
mov
out
push
or
sub
lcall
inc
mov
mov
jg
sub
jbe
mov
cmpsb
xor
imul
mov
fsubp
stos
mov
popf
pop
pop
sub
insb
cmp
mov
hlt
xor
dec
fisttpll
sti
in
xchg
ss
jnp
and
mov
mov
sti
sbb
sub
sti
pop
rclb
fwait
adc
imul
jns
mov
cwtl
out
pop
push
inc
iret
inc
test
into
cmp
das
out
pusha
jl
in
xlat
adc
leave
xor
sbb
mov
enter
incb
inc
pop
sbb
ret
push
bound
jmp
gs
into
ret
mov
xchg
xlat
lea
cs
jbe
cmpsb
and
adc
std
arpl
mov
mov
dec
sbb
jmp
pop
jmp
jo
mov
push
inc
addb
jae
fwait
bound
or
outsb
xor
ficomps
aad
and
push
mov
or
cmp
pop
ret
xlat
clc
lock
data16
sbb
pop
or
pop
inc
fnsave
cmp
dec
inc
pop
cmpsl
jp
sbb
or
fildll
outsb
pop
lea
sub
mov
and
into
ljmp
popf
inc
mov
push
xchg
je
pop
or
cmp
ds
repnz
addl
cld
sti
adc
int3
js
ficompl
repz
je
cmc
xchg
inc
xor
dec
cmp
push
pop
push
dec
xor
or
fcmovnu
out
lcall
and
shll
les
lret
and
mov
pushf
mov
fisttpll
jno
xor
mov
xrelease
dec
mov
mov
mov
push
out
pushf
adc
iret
xchg
pop
enter
aam
sub
mov
gs
stos
push
sub
mov
mov
pop
call
jg
ds
aas
push
out
insl
hlt
in
rorl
enter
mov
sbb
ficompl
mov
cmp
xchg
sub
pop
in
adc
arpl
fwait
xchg
cld
cli
sbb
sbb
cmp
cmc
lahf
jo
adc
in
lods
sub
adc
jae
das
sub
pushl
arpl
mov
arpl
jl
xchg
adc
inc
ja
add
inc
cmp
xchg
and
lcall
and
aas
jbe
sub
popf
sub
dec
mov
cmp
mov
rcrb
mov
xchg
xor
mov
jns
pop
pop
xor
aas
aad
push
cmpb
inc
outsl
out
adc
add
push
lds
out
arpl
adc
add
les
lea
pop
xlat
mov
scas
cltd
iret
lcall
pop
pop
sub
lea
pop
mov
xchg
sahf
cli
jge
mov
loope
shrl
mov
mov
cmp
sbbb
mov
jmp
loop
push
jl
fimull
data16
cltd
test
stos
jbe
jb
ret
repz
push
pop
push
push
lret
pusha
lea
jge
sti
pop
sbb
loop
ret
rcl
sub
add
outsb
clc
mov
fucomip
mov
shr
icebp
push
sbb
sbb
enter
in
inc
mov
leave
out
inc
lods
or
daa
jg
add
pop
pop
mov
out
pop
push
pop
fiaddl
fdivrs
fmull
mov
addb
xchg
aam
pop
xor
pusha
jmp
cs
sub
or
test
sub
adc
push
dec
cmpsl
mov
fdivrp
sahf
insl
mov
out
jb
and
push
inc
out
pusha
mov
cmpsl
adc
test
dec
out
mov
xor
movsb
cmp
aam
insb
stc
jno
pop
imul
mov
and
push
ret
mov
fs
and
ljmp
shll
jns
jmp
out
fisttpl
fs
out
cli
daa
jb
lret
stos
xchg
mov
sahf
sbb
js
pop
mov
or
xor
pop
pop
test
shlb
pop
jmp
and
cmp
inc
adcb
icebp
pop
int3
or
xor
les
pop
xor
out
mov
push
mov
cmp
das
xchg
fistpl
jne
jmp
mov
mov
pushf
add
lds
xchg
or
adc
xor
add
mov
sbb
shl
push
add
shr
xchg
shlb
test
loope
lahf
loope
lret
clc
outsw
push
xor
dec
out
sbb
xchg
pushf
sbb
xchg
xor
data16
pop
scas
or
ja
inc
inc
ret
pop
sbb
in
lock
pushf
lea
fimull
pop
xchg
mov
mov
xor
into
jb
push
pop
mov
hlt
or
sub
cwtl
sbb
ja
push
mov
xlat
cltd
gs
call
pop
xlat
inc
pop
mov
fdivr
mov
xchg
test
dec
mov
mov
sub
or
adc
cmp
call
outsb
xor
stc
loop
mov
cmp
test
mov
push
ret
lock
sbb
fdivs
shl
xor
push
jb
jecxz
jp
jns
xor
xor
cmp
mov
push
into
pop
fadds
jnp
or
xor
mov
nop
aas
pop
bound
pop
int
sub
cmp
lcall
movsb
mov
xrelease
mov
mov
popf
shll
data16
adc
jp
add
lea
enter
pop
add
jl
popf
mov
je
sub
mov
imul
inc
cmpb
insl
jae
inc
inc
and
dec
stos
mov
adc
jg
les
fdivl
or
mov
sbb
push
push
js
push
pop
cmp
xchg
ror
pop
fstps
lret
mov
sti
xorb
mov
lcall
call
dec
jge
cmp
dec
lcall
pop
push
addr16
sub
fisttpl
int
rcrl
aad
cld
dec
dec
pusha
test
adcb
or
mov
sub
and
inc
fidivrs
jg
jne
mov
cmp
bound
imul
cmp
adc
mov
mov
cmp
jns
movsl
mov
sub
mov
rcll
jo
arpl
xor
fdivrl
mull
sbb
rolb
ficoml
push
dec
xor
and
dec
jp
adc
fsubr
cltd
push
ljmp
dec
nop
mov
pop
mov
jge
addr16
xchg
pop
cmp
push
imul
mov
or
test
adc
cltd
add
out
repz
dec
mov
inc
outsl
sbb
addr16
aaa
ficompl
imul
pop
sbb
adc
jp
fstl
mov
in
idivl
fwait
inc
xchg
lahf
das
mov
dec
push
cli
cmpsb
jl
bound
xchg
push
sbb
imul
lds
repnz
lds
and
icebp
cmp
pop
shll
cwtl
mov
xchg
mov
pop
push
dec
repnz
and
xor
into
jmp
sbb
pop
orl
arpl
out
int3
fsts
add
mov
cmpsb
clc
int3
mov
sti
sub
jo
popa
pusha
mov
xchg
out
int3
xchg
jmp
add
lret
faddp
and
and
adc
ret
sbb
or
push
in
mov
scas
push
shrb
fsts
pop
mov
sbb
or
cmpsb
mov
lock
push
daa
mov
dec
icebp
inc
xchg
pop
fimull
out
add
cmp
das
cmp
cmc
insl
jae
fwait
mov
js
pop
dec
into
xchg
or
xchg
and
and
xchg
insl
push
decb
sbb
jae
pop
ljmp
mov
or
mov
inc
mov
or
mov
insw
enter
pop
into
sbb
sahf
call
xor
or
in
push
adc
cmp
or
in
dec
pop
pop
xor
push
fsts
ret
les
movb
dec
adc
sahf
in
cmp
push
jl
icebp
push
out
int
fcmovnb
jne
ret
ror
loopne
inc
int
mov
adc
mov
rorb
lahf
repz
sar
sbb
xchg
test
cwtl
dec
outsl
and
mov
aas
mov
mov
je,pn
mov
ljmp
xorb
aam
dec
shr
inc
popf
cmp
sti
test
out
mov
pop
jmp
test
xor
lods
adc
inc
negb
out
mov
inc
daa
jle
mov
add
mov
shll
add
lret
add
repz
push
stc
pop
mov
outsb
and
xrelease
mov
pop
outsl
in
jb
icebp
cmp
test
test
clc
add
dec
cwtl
pusha
sbb
movsl
repz
cs
jmp
andl
arpl
inc
into
adcl
lea
sbbb
das
push
cmp
inc
bswap
cli
inc
sarb
andb
mov
lret
imul
xor
outsb
and
sbb
ja
out
dec
sahf
sub
inc
cwtl
push
scas
fcoml
mov
popa
ret
test
cmp
rcll
or
repnz
mov
jno
mov
aam
movsl
in
decl
loopne
aad
cmp
pushf
xchg
xchg
jle
mov
pop
jns
dec
lods
aaa
scas
arpl
push
add
sbb
movsl
cwtl
and
inc
lahf
adcb
xchg
and
imul
dec
sub
mov
ljmp
cmp
or
rcrl
jbe
add
imul
hlt
and
push
lahf
pop
jl
ljmp
xor
nop
mov
imul
sar
cmp
inc
rcrb
popa
dec
insb
jmp
imul
movsl
lahf
mov
ret
xor
aas
push
xchg
pushf
sbb
arpl
xor
ja
test
lcall
sub
mov
or
pushf
orb
mov
jne
push
cmp
mov
ret
lahf
mov
push
pop
out
cld
rolb
rclb
icebp
call
inc
adc
lcall
decl
and
stc
xchg
les
enter
ret
cmp
jle
loope
nop
js
subb
jle
into
push
test
jmp
push
cmpsb
in
js
ja
aas
mov
movsl
pop
scas
xor
je
mov
int
mov
sbb
cltd
xor
push
xlat
stos
fisttps
into
xor
push
insl
jmp
mov
sbb
mov
jno
stos
push
sbb
lea
push
mov
int
mov
call
pop
in
add
mov
aam
lret
shrb
mov
inc
stos
repz
push
xchg
push
lds
sbb
outsb
imul
inc
repnz
outsl
sub
fdivrs
xor
add
out
jmp
jecxz
mov
xchg
adc
cmp
cmc
shl
movsb
mov
inc
dec
inc
std
lcall
push
pop
xchg
fildl
call
mov
or
cmp
ret
adc
sti
test
inc
in
popf
aad
mov
leave
lds
mov
mov
lcall
ja
sbb
lock
sub
or
pop
fistpll
adc
xchg
in
adc
hlt
xchg
adc
push
mov
cwtl
add
aam
aas
pop
sbb
in
pop
and
shlb
jo
loop
and
data16
stos
mov
fadd
aaa
lock
xor
pop
sbb
lock
inc
inc
lcall
add
les
pop
push
fdivrl
test
mov
out
pop
inc
and
xor
into
scas
loopne
mov
mov
cli
cmp
bound
push
out
int3
lock
sbb
ss
push
loopne
shlb
mov
je
push
sub
in
xchg
scas
dec
inc
or
xadd
outsb
mov
mov
xchg
adc
or
jb
out
pop
mov
xorb
rcll
ret
fidivrl
jg
ljmp
pop
push
adc
cmp
fwait
jl
cmp
mov
jle
and
sub
mov
cmpsb
mov
jo
das
jg
mov
or
testb
mov
out
xor
inc
cmp
insl
mov
xchg
bound
mov
js
adcb
dec
lods
data16
pop
push
rorb
in
xchg
fstps
pushf
in
js
fs
cli
cld
mov
jle
mov
dec
jbe
aas
pusha
push
mov
xchg
and
in
testl
insl
arpl
subb
pop
call
mov
adc
lahf
stos
loopne
adc
mov
and
xchg
int
mov
jbe
mov
adc
sbb
js
mov
arpl
lock
vmovdqa
divl
aam
aad
fidivl
or
pop
mov
loop
xor
xchg
sbb
mov
sub
add
fwait
pop
sub
lods
cmpsb
fmulp
bound
shrl
add
xchg
bound
and
aam
mov
and
js
mov
ficomps
adc
imul
sub
xchg
jns
shrl
mov
shlb
in
xor
aas
fistl
fisubl
cmp
dec
and
dec
push
sti
mov
mov
jbe
pop
sub
jae
shlb
out
jge
iret
ds
inc
ja
push
lock
mov
test
dec
mov
add
push
add
adc
add
xor
adc
out
roll
inc
xchg
dec
mov
dec
dec
push
add
fs
fistpl
xchg
mov
adc
mov
int
xorl
mov
ss
adc
jbe
add
inc
fcoms
pop
push
je
fildll
insb
inc
outsl
mov
inc
mov
mov
jne
fwait
notb
push
js
add
and
and
push
xlat
jmp
imul
xchg
test
out
dec
or
and
dec
sbb
outsb
ret
in
popa
cltd
cmp
push
in
mov
aam
test
mov
xor
push
inc
pop
lea
mov
ljmp
mov
adc
jns
pop
inc
adc
inc
or
xchg
xchg
and
cmp
pop
sub
outsb
push
dec
mov
xor
iret
pop
pop
int
fs
pop
cli
divb
xor
jge
cmpsb
insl
pop
pop
dec
sbb
cmp
mov
movsl
repnz
shlb
fs
cs
int3
jnp
push
bound
jle
pop
inc
xlat
mov
mov
int
into
xchg
add
cwtl
dec
leave
rcr
xor
pushf
inc
in
pop
or
mov
mov
ds
mov
lret
popa
fisubl
adc
cwtl
xlat
icebp
or
mov
sbbb
rol
and
sub
int
pushf
jb
mov
cmpsl
dec
cmp
out
push
repnz
mov
jle
xchg
insl
psrlq
movsb
enter
inc
push
push
mov
out
out
loope
or
imul
xchg
dec
insl
ret
cmpsb
iret
mov
rcrl
sub
xchg
push
mov
in
add
scas
mov
pop
mov
cmp
imul
sbb
push
sub
ss
arpl
sub
movsl
dec
push
cmp
mov
push
inc
into
add
xor
jp
xchg
dec
fwait
shlb
fsts
xchg
push
orl
test
push
movsl
jno
push
das
push
mov
in
jmp
fnstcw
rorb
push
or
arpl
out
cmp
mov
jp
orb
repnz
filds
aad
lcall
dec
lcall
and
sti
and
ret
jg
test
movsb
mov
popa
cs
aas
mov
xlat
cmp
test
int
hlt
inc
adc
jne
test
hlt
aas
mov
in
sub
loope
mov
dec
dec
imul
out
cmp
andl
cmp
cs
lret
add
mov
mov
nop
mov
ret
push
add
mov
fidivrs
push
jnp
into
push
out
cmp
test
cmp
dec
mov
test
mov
adc
daa
and
cmp
or
in
cmpsb
xchg
imul
lock
xor
push
test
add
push
sbb
leave
pushf
xchg
fs
sub
out
sbb
xor
xor
outsb
repnz
std
stos
fidivrs
inc
test
mov
call
mov
jecxz
fnstenv
dec
bound
orl
mov
scas
mov
mov
push
and
push
jnp
or
fwait
jbe
push
cs
popl
mov
test
push
outsl
lds
push
mov
mov
loop
test
sahf
xchg
sbb
fwait
lods
daa
shl
push
movsb
add
popf
jne
imul
clc
mov
in
pop
jno
cmp
ljmp
in
push
push
imul
lods
push
or
jne
sbb
pop
jl
sub
jne
cli
std
add
add
lahf
xor
cmpb
shrl
pop
mov
dec
cmpsl
push
leave
mov
rcrb
ret
aaa
mov
int
cmp
test
fisttpll
adc
je,pt
push
lahf
inc
aad
mov
cmp
data16
push
cmp
fwait
inc
sbb
push
arpl
xchg
fsubr
push
cmc
pop
rorb
jno
cmp
cltd
mov
fwait
mov
fsubrl
mov
xor
inc
pop
inc
lcall
lret
push
jo
pop
jnp
sub
rolb
pop
inc
sub
inc
cli
out
push
out
mov
push
ficoml
cmp
xor
push
xlat
sti
addr16
hlt
leave
mov
sub
pop
orb
adc
push
aaa
sbbl
or
pop
xchg
lcall
cld
scas
pop
xor
xchg
xor
mov
push
out
popf
movsl
mov
sbb
subb
pop
or
inc
and
gs
mov
daa
test
popa
xor
sub
cs
inc
inc
aas
out
mov
inc
aaa
pop
gs
jns
nop
fdivrp
test
jl
cmp
cmpsb
inc
mov
mov
pusha
negl
jle
movsb
jo
ljmp
leave
dec
popa
scas
sub
sahf
sbbb
cmp
xchg
clc
test
mov
lds
lcall
outsb
ja
adc
js
push
inc
cmp
xchg
push
jmp
jl
and
enter
mov
stos
insl
adc
jle
mov
outsb
leave
ja
into
jae
sub
mov
sub
pop
or
mov
mov
cmp
cmpb
aas
jo
cld
or
repz
mov
sbbb
fldcw
leave
dec
push
test
enter
cli
mov
mov
out
push
mov
cmpsb
dec
push
shrb
mov
adc
sub
pop
or
inc
xchg
fcmove
popa
mov
pushf
stos
jge
in
push
xlat
gs
orb
test
outsl
aaa
and
stc
stos
gs
adc
push
cli
ret
jecxz
test
and
add
sub
scas
movsb
clc
shr
dec
lea
jg
mov
call
cwtl
jge
pop
stc
js
add
loope
inc
cmp
xchg
rcl
sub
adc
sub
and
inc
scas
mov
or
mov
dec
pusha
adc
std
push
inc
inc
mov
into
sub
fs
daa
jp
add
xor
dec
inc
mov
push
xchg
cwtl
fsubrp
enter
inc
popl
jne
mov
jnp
ljmp
idivl
or
xchg
dec
xchg
mov
xor
popf
int
xor
jo
and
lea
cld
cmp
cmpsb
sbb
xor
xor
idivl
cmp
xor
jmp
sbb
xchg
push
jb
imul
int
in
xor
lea
pop
test
inc
lds
mov
sbb
mov
fs
xchg
into
xor
ja
fwait
mov
push
xchg
inc
imul
or
mov
jb
pusha
std
sub
cmp
adc
add
das
mov
outsl
shl
pushf
iret
mov
pop
daa
out
xor
dec
iret
jmp
sbb
les
fcomi
test
ret
aad
pop
test
mov
pusha
aam
fildl
or
idivl
in
scas
sbb
jecxz
mov
addr16
lds
xchg
jecxz
lahf
insb
push
dec
pushf
push
xchg
cmp
jl
pop
jl
push
faddl
sub
xor
rcll
lret
ficomps
adc
bound
pop
dec
jbe
and
jmp
fnstsw
sbb
test
jmp
mov
stc
mov
xchg
jg
dec
mov
jno
sbb
mov
xchg
mov
addl
add
imul
adc
mov
dec
and
xchg
pop
stc
stc
daa
popf
fs
push
push
test
ds
jae
ret
adc
mov
sar
je
mov
mov
test
aaa
ds
jmp
mov
cmp
lret
mov
sbb
das
sbb
push
add
fcoms
push
repnz
xor
imul
adc
gs
cmp
push
ja
pop
lret
mov
mov
js
mov
das
push
fisttps
sbbb
fists
mov
dec
jb
xchg
movsl
jp
rcll
or
in
aam
pop
or
gs
cmp
inc
mov
or
xchg
xchg
sbb
mov
xor
lret
pop
pop
xor
ret
inc
cltd
xchg
mov
cwtl
fidivs
xor
outsb
push
test
push
mov
ds
push
mov
ss
jno
xor
fistpll
ss
in
ja
gs
movsl
ret
into
mov
xchg
and
imull
mov
cld
outsl
push
int3
es
mov
cmp
lea
add
enter
filds
mov
stos
std
add
rorb
push
sbb
pop
in
push
repz
lea
pop
lcall
adc
mov
inc
negl
imul
fwait
sub
mov
test
shr
pop
sbb
xchg
add
add
mov
mov
cmpsb
inc
scas
shll
cmp
cmp
aam
dec
add
movsl
push
dec
call
arpl
loopne
out
incl
pusha
adc
cmp
pop
lcall
and
xchg
aad
fcoml
push
mov
ret
push
jg
or
sub
inc
add
call
call
mov
push
mov
sbb
int3
ja
adcl
jae
stos
push
inc
add
mov
add
call
xor
or
xlat
or
cmp
loope
adc
fstl
clc
xor
jg
into
mov
push
ret
and
adc
push
ss
decl
bound
das
insl
cltd
mov
adc
inc
mov
mov
ud1
das
xor
mov
push
add
mov
int
call
insl
mov
mov
inc
push
inc
orl
arpl
inc
dec
mov
lds
fdivp
add
and
pop
jg
das
push
inc
mov
enter
pop
add
rclb
fdivrl
divl
test
subl
nop
or
out
mov
rcrl
fbstp
mov
mov
jbe
pushf
outsl
fcmovb
insl
mov
add
lret
jge
adc
add
mov
fldenv
jmp
sub
jnp
ret
mov
scas
sahf
push
xlat
pop
add
xor
lcall
das
pop
sbb
scas
les
push
inc
ljmp
pop
lods
shll
ret
dec
pop
inc
test
inc
jge
lds
mov
icebp
es
lret
das
iret
sbb
sbb
test
jmp
push
insl
rcll
pop
adc
sbb
sub
and
std
addl
in
push
int
fcmovnbe
jb
out
adc
push
inc
nop
sbb
ss
pop
mov
push
fidivl
hlt
xchg
push
and
mov
xchg
pop
xchg
push
mov
aaa
pop
int
mov
adc
arpl
push
mov
in
add
or
xchg
xchg
ret
xchg
into
ret
and
pop
hlt
cmp
and
sbb
shlb
lea
dec
lods
test
push
mov
adc
bound
xor
je
ss
icebp
xchg
lock
mov
mov
bound
mov
imul
cs
cwtl
out
jmp
push
cltd
inc
bound
andnps
fsubs
je
loope
ja
push
test
add
hlt
jo
ficoml
shlb
shlb
mov
sub
or
push
mov
or
xchg
cmp
xchg
test
ss
std
jge
sub
lahf
fmul
pop
out
outsb
sbb
out
shlb
int3
in
jge
mov
lods
jecxz
mov
mov
and
xor
or
dec
stc
and
repz
sbb
ja
cmp
aad
xchg
enter
push
pushf
aam
dec
mov
mov
imull
sbb
in
andb
pop
mov
jne
mov
aam
xor
pop
stos
pushf
dec
rorb
pop
sbb
mov
pop
lcall
adc
mov
sub
popf
push
sub
mov
jnp
and
mov
sti
inc
arpl
jle
cld
fnstenv
xlat
shlb
daa
add
or
outsb
adc
pop
movsl
ja
pushf
movsb
shrl
xchg
push
push
sbb
cmp
shlb
xchg
pop
or
push
push
test
call
jecxz
inc
mov
mov
sub
orb
sbb
mov
xor
popa
adc
mov
dec
adc
inc
adc
aaa
pmullw
push
pop
or
pop
inc
clc
popf
outsl
out
push
add
sbb
pop
jb
fwait
jnp
adc
imul
in
sti
popfw
jp
iret
mov
add
ret
jbe
mov
and
cmp
xor
mov
mov
out
rcrb
fcmovnb
xor
in
sbb
subl
out
push
push
push
pop
xor
mov
sub
sbb
jg
iret
mov
sbb
bound
bound
sub
inc
loope
mov
les
jmp
xlat
xor
outsl
inc
sbb
ror
out
add
mov
mov
sbb
dec
pop
sub
out
shrb
or
pop
ret
push
adc
cmp
jp
mov
jbe
in
out
mov
adc
adcb
push
insb
loope
cmp
es
clc
mov
test
rcrb
pop
xor
addr16
adc
cld
unpckhps
notb
pop
scas
jg
mov
daa
mov
xchg
push
adc
lods
scas
inc
shll
jp
push
std
xor
jo
jmp
in
mov
cld
inc
pop
sahf
in
ja
jmp
out
xor
mov
cmp
les
mov
mov
push
cmc
fdivr
mov
ftst
mov
jle
pop
out
es
jle
sbb
pop
fbld
and
int
xchg
movsl
jge
mov
ficompl
jno
cmp
sbb
sub
xchg
cmc
loope
icebp
xchg
cmp
cmp
movsl
in
or
sub
pop
ljmp
pop
sbb
stos
inc
jg
adcl
je
jb
jns
mov
cmp
mov
rcrl
mov
xchg
xchg
test
std
adc
mov
hlt
or
dec
mov
aam
dec
gs
les
jb
adc
aam
dec
or
mov
pop
cmpb
mov
aaa
pop
dec
add
pop
das
ret
xchg
stc
mov
cmp
arpl
xor
ret
mov
sbb
xchg
jecxz
cmp
lock
loope
push
cmpsb
out
sub
ss
int
push
push
inc
rorb
mov
xor
jbe
mov
jo
inc
js
stos
testb
xor
cmp
inc
and
cld
mov
scas
loope
jmp
xchg
and
loop
add
idivl
xor
data16
data16
inc
test
or
sub
lret
mov
std
scas
dec
xor
xchg
in
aas
push
xor
xor
pushf
popa
and
mov
inc
xchg
sub
push
pop
dec
aam
jno
push
out
and
mov
rcrb
cmc
clc
xchg
inc
call
add
pop
scas
cltd
mov
imul
sbb
xorl
sbb
xor
clts
fmul
test
pop
test
loope
fldcw
movb
or
clc
popa
or
hlt
fsubs
jmp
sbb
leave
xchg
test
jo
frstor
push
int
xchg
add
and
mov
mov
neg
pop
test
lea
pop
sahf
insl
rorb
cmpsl
sti
pop
movsb
sbb
test
fbld
mov
outsl
ss
popf
and
popf
movd
mov
cltd
popf
fucomip
mov
xlat
shr
sbb
mov
jp
imulb
js
mov
lahf
ljmp
sub
divb
pop
cli
loop
fsub
out
scas
pop
sbb
call
in
mov
leave
out
lea
rcll
push
sbb
fcoms
cmpb
mov
loopne
xchg
cmp
jb
jp
or
lea
add
insl
fldenv
int3
iret
mov
adc
cmpb
jbe
repz
fs
in
xor
xor
mov
and
notl
push
xchg
popa
and
or
outsb
mov
cmpsl
repnz
pop
cmp
test
sub
mov
and
mov
dec
popf
xor
mov
lock
mov
xchg
push
mov
js
or
scas
jle
dec
jmp
icebp
adc
dec
jae
lcall
insl
adc
cmp
pop
mov
les
gs
std
out
pop
sub
push
or
frstor
mov
mov
xor
imul
adc
in
fildll
push
sbb
cltd
sub
cmp
xchg
lods
cli
xchg
aaa
lret
ret
jg
popf
adc
xor
fsubs
mov
xchg
mov
xor
xchg
mov
sub
add
cmp
push
iret
int3
xchg
ja
pop
sahf
push
and
inc
je
xor
pop
dec
sbb
cmp
fnstcw
cwtl
mov
lds
loop
popf
ret
dec
pop
push
pop
std
movsl
in
mov
or
div
into
fcmovnbe
add
cld
and
inc
jge
mov
fwait
pusha
stos
push
aam
push
fisubrl
outsl
xlat
iret
lcall
iret
or
xchg
frstpm(287
bound
ljmp
mov
popf
data16
cmp
adc
and
push
test
sub
mov
adc
xchg
dec
add
fcompl
mov
xchg
mov
jb
sbb
adc
enter
jecxz
and
sub
lock
jle
shlb
mov
test
lods
lods
sbb
jae
dec
mov
pop
and
inc
push
add
lcall
sti
cltd
hlt
cmp
pushf
fs
imull
xor
xchg
jge
rcrb
sub
xchg
ds
mov
cmp
loop
les
imul
sub
inc
mov
pop
xor
push
mov
cwtl
in
jle
mov
dec
aam
je
xor
outsl
jbe
inc
nop
leave
push
mov
data16
mov
lret
adc
xchg
stos
mov
pop
test
jle
sarb
aaa
das
and
sub
stos
push
pop
and
fistl
inc
jb
sub
into
mov
jge
das
xor
cltd
out
mov
pop
sbb
aam
xchg
mul
inc
jl
iret
paddusb
push
lahf
shl
dec
or
adc
sub
loope
ss
lods
sbb
call
movsb
jge
pop
xchg
lcall
imul
pop
inc
pop
movsb
dec
cltd
mov
cmp
mov
mov
daa
adc
mov
fildll
ficoms
sbb
out
inc
pop
mov
pop
testl
fildl
jnp
xor
lret
xchg
sub
adc
inc
not
fadd
bound
mov
leave
or
rcll
add
xchg
stos
cmc
movsl
aas
push
jge
int
xor
mov
fidivrs
pop
xchg
jl
inc
xlat
mov
push
add
mov
js
cmp
and
and
addl
ja
cmp
pop
out
xchg
js
mov
xchg
dec
pop
xorb
dec
pusha
sub
xchg
and
pop
mov
sbb
jle
xchg
adc
add
push
jecxz
bswap
das
inc
fiaddl
stc
add
out
dec
int
ficoml
ret
sti
mov
paddb
jno
lret
push
push
insl
dec
out
das
and
fsubl
mov
sbb
or
pop
xor
les
pusha
inc
lods
mov
pop
pushf
mov
inc
lods
sbb
aas
mov
popa
sub
mov
push
movsb
stos
or
pushf
mov
dec
dec
lcall
jns
lcall
insb
and
ljmp
shll
push
adcb
jmp
repnz
mov
clc
push
cwtl
pop
add
arpl
int
sbb
and
lods
inc
cmp
cmp
loopne
lods
fstps
les
jg
daa
clc
fs
faddp
and
cmpsb
fidivrs
movsl
add
into
ret
cmc
imul
mov
enter
and
insl
rep
in
dec
iret
cltd
scas
paddd
xor
adc
or
into
xor
xor
popa
and
jnp
ja
cmpsl
test
lock
xor
repnz
into
inc
in
xor
popa
jecxz
sub
popf
cmp
sub
jb
dec
pop
ret
sbb
enter
or
shrl
jns
adc
jne
lea
fs
enter
jmp
mov
cs
jae
jle
inc
cmp
rclb
mov
fs
mov
lcall
adc
sbb
repz
shrb
js
mov
xchg
fbstp
push
in
into
punpcklbw
mov
in
mov
inc
cmpsl
iret
aaa
push
nop
mov
add
bound
xchg
add
inc
mov
pusha
sub
andb
imul
sub
leave
rcll
jmp
adc
test
aaa
testb
sbb
mov
add
cmpl
mov
sbb
subl
dec
fadds
mov
jno
int3
rol
in
push
inc
imul
sub
cmc
into
or
and
sarb
aam
stos
iret
push
das
cmp
or
inc
aas
out
dec
in
push
mov
inc
push
push
mov
cmpsb
mov
xor
jae
lock
inc
and
xchg
mov
mov
inc
cltd
pop
call
cmovs
xchg
and
fst
ret
push
jnp
inc
popa
sti
orb
mov
inc
cli
jnp
cmp
inc
jb
sti
dec
mov
cmp
xlat
add
arpl
inc
lock
mov
or
fs
dec
pop
lret
je
lds
ffree
cmp
into
stc
rolb
rcrb
push
ljmp
mov
lods
stos
loop
adc
lret
push
adc
and
xchg
push
pop
jbe
mov
push
mov
fsubrs
fsubrl
pop
hlt
add
repz
dec
pusha
adc
push
fdivrp
mov
mov
mov
scas
cmp
sub
ljmp
incl
pusha
scas
mov
mov
add
xlat
sbb
rcrl
push
and
repnz
xchg
jno
ja
lods
test
or
loope
arpl
mov
push
and
fbstp
fisttpll
mov
mov
stos
push
xor
push
lods
xchg
inc
cmpsl
test
pop
outsl
mov
pop
insb
sub
in
dec
dec
inc
loop
sarb
adc
add
mov
lods
push
lods
das
push
xor
add
mov
movsb
mov
push
je
fimull
jo
fiaddl
test
testb
adc
pop
insb
out
aas
pop
aaa
loop
sub
in
lds
pusha
pushf
dec
int3
cwtl
xor
enter
jp
fwait
call
mov
push
jp
xchg
push
lods
icebp
lret
mov
jns
adc
xor
sti
mov
jne
icebp
stc
pushf
gs
pop
hlt
and
icebp
xor
xor
shrl
mov
lahf
lret
pop
enter
lods
mov
fistl
jae
jmp
xchg
jb
scas
int
jae
bound
xor
frstor
jp
pop
pop
lret
std
push
cmp
stos
insl
fnsave
and
cwtl
ret
sbb
sub
pop
scas
xor
cmp
jg
sbb
jno
sub
mov
pop
mov
sub
push
fcomip
xor
in
pop
mull
push
pop
xor
cmpsl
ret
add
jg
sbb
xor
dec
movsl
popa
dec
roll
ds
xor
xchg
adc
std
pusha
gs
pop
and
fistl
sub
pop
out
lret
mov
cltd
ds
jb
int
arpl
repz
fwait
shlb
loopne
fidivl
cmp
dec
add
into
jne
xchg
jmp
iret
ja
adc
sbb
jmp
sub
jle
jno
sti
dec
or
fistps
mov
ljmp
sbb
notb
clc
mov
sub
or
sub
pop
push
mov
jp
decl
and
ljmp
mov
dec
xor
add
cmp
fldenv
shl
sbb
ret
outsb
shlb
shll
push
rorb
mov
add
ja
mov
sbb
mov
pop
push
movsb
lret
xlat
mov
punpckhwd
insb
dec
icebp
xchg
pop
lea
fimull
jae
scas
pop
jmp
shlb
sahf
arpl
popf
and
bnd
repz
shlb
mov
and
inc
and
push
inc
add
dec
jo
out
mov
adc
dec
aaa
gs
xchg
cmp
mov
or
add
lsl
mov
gs
out
out
insl
and
add
notl
cmp
mov
xchg
out
jb
mov
ds
add
aad
dec
push
pop
cld
xchg
scas
call
mov
and
popf
or
xlat
ret
stos
xor
sub
leave
lcall
sbb
sbb
jb
xchg
sahf
js
jp
or
sahf
sarl
and
dec
rclb
pop
daa
fcom
adc
jne
jbe
and
mov
xor
das
pusha
pop
addr16
mov
mov
aad
cs
mov
xor
lcall
inc
test
repz
mov
scas
mov
jnp
ficomps
adc
int3
xchg
mov
jo
sarl
mov
lock
fs
sti
repz
cmp
ret
mov
mov
cmp
ja
mov
iret
lods
mov
fisubrl
inc
mov
inc
sbb
loopne
add
sahf
dec
fildll
and
mov
xchg
clc
sub
jae
outsb
and
orl
dec
jl
push
xlat
xchg
loopne
pop
mov
gs
lods
mov
test
arpl
pop
imul
adc
adc
sub
stos
adc
addr16
mov
jmp
mov
xchg
mov
mov
mov
inc
jno
shrb
pop
xchg
lock
aas
imul
adc
xchg
daa
cld
mov
mov
leave
push
cmp
fidivs
call
stos
insb
outsb
into
cli
add
outsb
gs
cmc
jae
mov
mov
pop
lcall
or
leave
rcll
push
pop
and
pop
push
inc
cmp
add
lcall
in
jns
push
mov
xor
stc
shll
std
lock
xor
xor
add
adc
and
push
out
lcall
xchg
xchg
das
jae
pop
jecxz
stos
mov
jmp
xor
fcmovnu
enter
out
jbe
and
push
arpl
mov
adc
dec
xor
pop
jo
repz
dec
fiadds
ljmp
sbb
fs
int
dec
fistpll
xchg
dec
mov
cmp
mov
xor
jbe
dec
fdivrs
clc
inc
inc
hlt
inc
adc
in
xor
adc
outsb
fscale
adc
jp
sub
mov
mov
lret
xchg
ja
add
fisubrl
mov
xor
aam
stos
outsl
imul
daa
mov
ljmp
lret
cli
cmp
mov
lcall
gs
add
mov
ljmp
jle
adc
jo
fsubp
jp
jl
cmp
nop
out
cwtl
pusha
inc
pop
stos
dec
test
pushf
push
in
dec
out
mov
or
lods
popf
iret
mov
xchg
pop
fidivrl
inc
out
mov
xchg
jmp
fiaddl
lret
test
xchg
shll
stos
orl
cmp
imul
iret
push
fdivl
push
lods
das
dec
popf
inc
jnp
test
icebp
sub
push
dec
loop
push
mov
mov
fildll
inc
dec
js
cwtl
cmc
stos
sub
mov
pop
leave
fdivl
and
mov
adcb
jae
cmc
out
arpl
sahf
xchg
jo
popf
mov
hlt
pop
sarl
mov
mov
test
dec
aam
fidivrs
push
test
jnp
push
push
inc
jp
sbb
pop
mov
nop
mov
dec
test
dec
lods
add
sbb
xchg
sbb
jno
stc
sbb
mov
mov
push
fidivs
pop
lock
and
fbld
pop
mov
push
shll
popa
std
pop
lret
cld
mov
and
add
sub
in
pushf
lahf
pop
inc
sbb
jne
xchg
pop
xchg
pop
sub
cmpsb
std
jmp
arpl
push
cmpsb
jmp
lret
movsl
cs
stos
insb
push
ljmp
inc
or
aas
icebp
shll
cli
push
ds
dec
fwait
sub
mov
xor
imul
inc
pop
leave
sar
mov
pop
push
mov
pop
sahf
pusha
imul
xchg
xchg
and
lds
xchg
stc
stc
inc
xchg
insl
mov
jno
sbb
fcoml
fidivrs
mov
push
dec
cmpsb
in
adc
dec
or
test
xor
loop
es
jmp
inc
sbb
mov
call
testl
sbb
jb
scas
aad
adc
fmuls
loopne
cmp
icebp
hlt
jb
mov
cmp
enter
and
mov
jo
hlt
imul
sub
or
or
mov
mov
arpl
mov
and
stc
dec
lcall
aam
lods
std
leave
mov
shlb
cs
mov
cwtl
xchg
and
inc
mov
imul
add
mov
sar
leave
or
fmuls
sub
push
adc
push
pop
mov
pop
pop
mov
or
test
adc
sarb
lods
test
xchg
repz
cmp
pop
pop
aam
cmc
mov
push
or
or
dec
push
sarl
test
pop
adc
inc
outsl
decb
mov
fadd
fimuls
arpl
leave
adc
adc
sub
dec
dec
xor
negb
cmpsl
in
mov
mov
sbb
lret
sub
xchg
test
inc
mov
push
std
dec
push
sbb
dec
sub
arpl
dec
shlb
dec
push
xor
mov
inc
imul
shll
push
push
inc
out
fsts
inc
jge
push
ljmp
mov
test
ss
and
pop
jnp
cltd
jb
int
xor
sahf
stos
pop
xorl
xchg
enter
insb
stos
mov
dec
cwtl
scas
cld
rorb
sbb
xor
sbb
cmp
adc
inc
xlat
and
es
push
push
imul
lds
jge
orb
lcall
ja
dec
shll
adc
lock
dec
fs
push
adc
stos
jo
fstpl
lret
bound
push
cmpl
sbb
mov
popa
rolb
inc
enter
fisttps
ljmp
out
js
addb
push
cmpsl
aaa
cmc
test
pop
mov
inc
iret
int3
iret
jae
jbe
xchg
aam
in
loopne
lods
pop
jb
in
xor
adc
lret
lea
adc
inc
in
arpl
cli
lahf
dec
inc
dec
inc
push
lret
pop
cmp
outsb
in
sub
sbb
inc
sub
pop
sub
add
mov
dec
les
mov
xchg
mov
test
push
cmp
or
fs
pop
xchg
mov
pop
lods
dec
sub
jns
call
and
popf
in
add
ljmp
mov
jge
pop
out
mov
mov
cli
leave
addr16
je
and
pop
or
insl
daa
sbb
xlat
inc
sub
pusha
add
sahf
inc
test
add
sub
lret
outsl
mov
imul
jl
cmp
xor
cmp
inc
aaa
jl
jmp
and
mov
sub
call
cmp
push
push
inc
addr16
inc
aam
mov
inc
xchg
ficomps
inc
inc
stos
cmc
call
xor
mov
jbe
jb
je
and
mov
inc
xor
adc
loopne
xchg
imul
aad
inc
mov
push
loop
loopne
fwait
test
outsl
push
lods
mov
std
lea
mov
dec
scas
imul
mov
repnz
add
cltd
ja
jne
lcall
outsb
jecxz
loop
leave
ds
icebp
clc
lret
add
add
flds
stc
mov
sub
xor
fcompl
jae
outsb
sub
dec
cmc
sbb
dec
ret
xchg
mov
mov
sub
xor
outsb
in
enter
jnp
popa
jnp
pop
repnz
push
loopne
packuswb
orl
nop
pushf
xchg
or
lret
sbb
push
and
test
adc
lcall
aas
sbb
xor
xchg
push
dec
test
setp
pop
xor
push
push
addb
ljmp
push
shlb
popf
fcmovbe
les
movsl
imul
lods
cmp
mov
or
adc
imul
push
gs
out
jo
ljmp
scas
dec
jne
das
jl,pn
int
push
add
test
ss
add
adc
cli
mov
cmc
inc
or
out
shlb
push
in
push
out
mov
push
xchg
loopne
ds
mov
mov
mov
fsubrl
push
cs
test
inc
xabort
xchg
lea
out
rorl
cmpsl
add
in
pusha
andl
pop
mov
shll
icebp
mov
shlb
push
mov
pop
sbb
ror
push
cs
jecxz
arpl
dec
loop
out
inc
inc
push
lds
dec
cmp
pop
push
cwtl
faddp
xchg
sbb
cmp
in
daa
jmp
fwait
call
insb
xor
sti
jge
mov
mov
rclb
inc
jnp
addr16
add
aas
add
fistpll
mov
add
mov
jl
rclb
sub
mov
push
cmc
iret
jae
jns
test
adc
inc
loop
pop
pop
pop
mov
aam
mov
je
and
push
jg
lods
imul
pop
inc
push
fidivrl
hlt
push
scas
pop
roll
test
in
xchg
sbb
in
test
xor
push
xchg
lret
sub
cli
cmp
mov
cmpsb
cli
sbb
out
cmpsb
loope,pt
ds
sbbb
or
push
pop
je
.byte
.byte
.byte
cmpsb
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
or
call
out
aam
jb
mov
pop
add
jne
mov
mov
sub
mov
pushl
jmp
pop
shlb
int3
adc
jmp
jmp
int
xchg
ror
into
out
cld
test
pop
call
add
addl
jle
sub
adc
pop
sub
movzwl
push
mov
popl
call
aad
fstpt
mov
and
inc
push
nop
mov
mov
pop
sub
mov
add
mov
dec
jne
sbb
jmp
mov
sbb
cli
stos
or
push
and
call
jbe
in
add
push
dec
dec
outsl
jl
mov
fwait
mov
pop
dec
sub
mov
and
psraw
clc
lds
lods
mov
sbb
int3
mov
xchg
adc
nop
out
inc
shrb
in
stos
pop
and
cmpsl
pop
and
jnp
mov
jmp
mov
fsubr
stc
pop
movsl
sar
ljmp
mov
loope
adc
loope
cs
add
es
pop
lcall
push
sbb
push
and
call
or
or
out
pop
outsl
mov
mov
pusha
and
mov
ja
fwait
mov
jg
fwait
mov
xchg
enter
xor
pusha
mov
and
mov
and
pusha
jg
sarb
iret
xor
fdivrs
add
cmc
mov
cltd
mov
dec
add
push
push
add
inc
push
loopne
mov
iret
mov
fdivl
or
push
sub
test
adc
loop
imulb
mov
inc
sbb
cwtl
mov
pop
lock
fisttpl
push
repnz
call
ret
mov
fdivl
cmp
push
mov
outsb
push
or
testb
or
fidivl
movsb
mov
mov
adc
and
mov
mov
add
cli
or
imul
mov
je
loopne
cmp
fld
mov
les
leave
stos
jmp
int
sbb
int
repz
loop
arpl
fiaddl
repz
jns
xrstor
add
out
ret
pop
arpl
aas
aaa
cli
aad
dec
pop
xchg
js
push
adc
pop
dec
jb
xor
ds
repnz
sti
jl
nop
jmp
xchg
lods
sbb
pop
adc
fildll
adc
and
in
fildll
pop
clc
aaa
xchg
cld
lods
lret
push
adc
popf
inc
pop
cmp
lds
cmp
loope
stos
addb
adc
pop
je
mov
mov
popf
xor
ficompl
iret
inc
rcrb
adc
pop
sbb
into
sub
shrl
pop
push
pop
adc
adc
pop
lret
mov
jle
fnstenv
sub
pop
pop
mov
loope
pusha
adc
jnp
mov
testb
or
repnz
cmpsl
cmc
repnz
ret
sub
sbb
out
mov
or
mov
push
ficompl
inc
or
ljmp
mov
push
jne
inc
fwait
ja
mov
xchg
mov
pop
mov
cmp
fwait
ja
mov
out
cld
mov
or
call
pop
mov
std
ret
cld
mov
or
xchg
push
xchg
and
cld
int
add
out
rcl
nop
add
pusha
sub
push
cmp
mov
or
or
and
sbb
mov
or
cld
mov
or
std
sub
sbb
cld
mov
cmp
cld
mov
or
cld
mov
or
mov
sbb
ds
sbb
mov
xor
cld
mov
lods
mov
cmp
and
or
inc
daa
cwtl
clc
jae
or
cmp
sbb
cld
mov
sbb
cwtl
sbb
xor
adc
loopne
mov
call
and
int
stos
movb
add
push
sbb
mov
or
or
xchg
clc
addr16
cwtl
clc
jae
or
mov
cs
pop
pop
xchg
mov
mov
or
ds
sbb
mov
xor
mov
rcrl
mov
xor
clc
aas
or
add
or
mov
or
cld
push
xchg
add
test
and
mov
adc
mov
push
mov
add
mov
rcrb
jbe
fcomps
mov
add
mov
mov
pushf
jns
adc
sub
dec
sbb
sub
ljmp
mov
push
sub
pop
test
sub
mov
mov
xor
mov
or
lcall
cmp
add
mov
mov
or
lcall
cmp
mov
add
mov
and
into
lea
pop
or
adc
xor
ds
or
jbe
sub
ljmp
mov
push
sub
or
push
mov
sbb
sti
and
into
lea
sbb
sbb
mov
push
xchg
es
push
leave
pop
enter
mov
jno
jae
lahf
sub
shrb
mov
popa
push
leave
pop
enter
mov
mov
adc
fcoml
mov
cwtl
imul
mov
or
inc
mov
push
popf
sbb
and
insl
and
cmp
test
mov
das
sbb
or
pop
xchg
push
mov
or
mov
or
ds
adc
bound
mov
or
mov
cmp
mulb
add
fmuls
push
sub
or
in
jle
xor
jle
dec
mov
outsl
imul
push
push
xor
loopne
lret
cmpsl
pop
rcrl
into
xchg
fdivr
addr16
or
ret
movb
mov
push
xor
loopne
cwtl
jmp
or
cld
mov
or
cld
mov
or
cld
push
cld
ja
add
lret
ja
mov
or
cmp
outsl
or
std
mov
or
cld
mov
mov
push
cltd
sbb
mov
rolb
adc
xchg
and
add
loope
jmp
sbb
adc
cmpsl
push
sbb
dec
loope
add
add
imul
jb
in
mov
dec
add
sahf
jno
je
aad
dec
add
mov
ficompl
add
xor
rcrb
cs
push
out
mov
cmp
mov
add
inc
lock
sbb
loopne
and
mov
jne
push
fsubrl
xchg
dec
adc
aam
ret
addl
je
dec
out
addr16
lahf
adc
pop
pop
inc
inc
cmp
aam
jle
lods
adc
push
xchg
int3
loopne
std
subps
push
imul
jg
in
repz
scas
and
xor
insb
push
cmp
ficoms
popa
rorb
sub
sti
ret
mov
push
test
sub
je
or
int
pop
hlt
outsb
pop
jb
imul
repnz
imul
js
pop
outsl
push
jno
out
shll
adc
sub
dec
rcrl
in
imul
jmp
pop
lods
mov
imul
dec
enter
mov
movsb
mov
inc
mov
and
imul
push
in
sbb
push
rorb
je
dec
pop
pop
xchg
lahf
mov
enter
ret
out
fmull
or
movl
std
aaa
cmp
mov
adc
test
test
dec
xchg
fdivrs
pop
movsl
jmp
xchg
add
and
and
in
xor
jo
inc
inc
mov
dec
adc
push
xchg
imul
sarb
outsl
cmp
mov
or
cld
mov
sbb
cmp
mov
jnp
adc
mov
pushf
jmp
xor
jbe
sbb
mov
les
outsb
xchg
push
jl
popf
inc
popa
mov
hlt
sbb
xor
out
push
push
dec
addl
jno
sti
sbb
dec
sub
scas
xor
addb
syscall
je
jge
inc
jae
mov
das
cs
jecxz
dec
aas
dec
dec
decb
popf
icebp
ljmp
pop
pop
aaa
inc
add
cmpsl
subb
les
int3
sub
pop
mov
sub
addr16
mov
or
lods
sub
insl
xchg
jge,pt
fwait
sub
sbb
jno
es
pusha
sub
ja
outsl
pop
in
in
cwtl
pop
aas
pushf
adc
arpl
mov
test
cmp
imull
push
push
add
and
add
add
add
jo
add
jo
add
add
addb
add
add
add
add
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
in
add
add
gs
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
sbb
add
es
add
ss
add
dec
sbb
add
add
push
outsl
jae
push
push
dec
gs
popa
addr16
add
add
gs
insb
inc
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
and
add
add
test
add
xor
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
add
sbb
add
xor
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
xor
add
sbb
add
add
add
add
or
popa
fwait
or
fisttpl
pop
mov
decl
gs
or
decl
inc
mov
test
add
jo
add
pop
add
add
add
push
test
inc
mov
decl
popa
sar
or
decl
pop
mov
fisttpl
sub
mov
add
add
add
or
push
mov
or
std
incl
mov
incl
scas
incl
xor
or
leave
call
sub
clc
prefetchwt1
push
or
mov
sub
or
incl
lock
repz
movsl
decl
stos
incl
mov
incl
lods
std
decl
xchg
repz
push
mov
or
pop
sbb
add
add
mov
xchg
icebp
cmp
lcall
iret
incl
sar
or
jo
push
push
pop
call
stos
mov
lods
movsl
lcall
arpl
adc
sbb
incl
jmp
sar
incl
call
xchg
repnz
xchg
inc
or
xchg
and
test
jle
pushl
ljmp
jb
dec
inc
inc
pushl
fcmovne
jmp
loopne
jmp
xlat
jmp
xlat
jmp
xlat
in
loop
in
in
call
mov
call
push
test
push
mov
lcall
incl
decl
cwtl
xor
add
add
jae
mov
cmp
cmp
jno
call
loop
out
out
push
jmp
push
out
call
push
out
call
out
out
in
jecxz
out
in
out
in
lcall
inc
incl
int3
decl
jle
fadds
add
add
dec
test
pcmpeqw
mov
daa
das
pushl
jmp
out
push
out
call
sti
stc
idiv
cld
sti
cli
std
cld
sti
cld
sti
cli
sti
stc
idiv
clc
hlt
icebp
push
out
call
in
jecxz
in
jecxz
call
xor
or
mov
push
scas
adc
add
add
ss
leave
out
out
out
jmp
push
lock
cli
cli
stc
cld
cli
clc
push
repnz
push
jmp
fdivr
ljmp
jmp
and
cs
and
cs
and
cs
and
push
and
mov
scas
fdivr
push
sar
inc
push
in
dec
fs
pushl
repz
std
cld
sti
push
repz
push
out
jmp
inc
mov
ljmp
daa
sub
pop
sbb
push
sbb
adc
sbb
xchg
sbb
add
add
pop
and
cs
and
cs
and
sub
and
loope
iret
pushl
aam
xor
inc
std
lcall
jmp
in
cld
sti
cli
push
lock
in
in
call
inc
inc
jmp
sbb
pop
sbb
push
sbb
out
das
and
cs
and
cs
and
sub
dec
dec
push
jmp
ret
aaa
icebp
ljmp
inc
std
ljmp
inc
cmc
cmp
call
aad
cli
div
push
ljmp
js
push
daa
pop
and
and
sbb
jmp
sbb
xor
sub
xor
and
cs
and
sub
and
pop
push
push
push
out
jmp
lcall
xor
lcall
xor
fcos
cmp
mov
out
in
in
in
in
in
in
out
out
out
push
hlt
cmc
cli
cli
cli
std
cld
sti
push
out
jmp
incl
sbb
sbb
jmp
push
and
cmp
sub
ss
sub
sub
push
and
pop
push
push
push
repnz
jmp
pushl
inc
sub
lcall
and
call
pushl
inc
ljmp
dec
decl
pushl
mov
jmp
jecxz
stc
clc
clc
push
repnz
in
in
incl
sbb
jmp
push
ljmp
and
pushl
sub
incl
add
add
sub
sub
push
and
pop
push
push
push
repnz
jp
ret
pop
popf
decl
pop
stos
incl
pop
lret
inc
call
lcall
cmp
cld
incl
sub
jmp
dec
cld
decl
repnz
inc
in
pop
sub
ljmp
mov
int
iret
jmp
jnp
insb
jmp
sbb
jmp
sbb
cmp
das
pushl
sub
lods
cs
and
push
inc
aas
in
es
sub
and
sub
mov
and
jmp
cmp
decl
es
pushl
idiv
add
clc
decl
aas
incl
sub
jmp
dec
decl
xor
jmp
dec
incl
sub
jmp
cmp
lcall
lods
decl
aas
ljmp
sbb
ljmp
sbb
cmp
sbb
dec
cmp
ljmp
sbb
sub
lret
incl
sbb
jecxz
sbb
jmp
add
in
pushl
idiv
add
clc
jmp
push
lcall
inc
cmp
decl
decl
inc
incl
sub
ljmp
inc
repnz
sub
call
iret
jmp
and
sub
sub
cmp
add
sub
es
and
mov
incl
pop
call
das
in
ss
in
pushl
push
lods
cmp
sub
ljmp
xor
sub
sub
ljmp
xor
mov
call
aaa
sti
pushl
idiv
add
loopne
and
loop
pop
sub
call
sbb
xor
sub
sub
add
sub
and
sub
adc
jmp
xor
jmp
loop,pt
ss
int3
pushl
aaa
lcallw
sbb
es
jne
adc
xchg
decl
mov
call
jae
call
pop
cmp
pop
sbb
sbb
dec
jmp
cmp
jmp
cs
aad
or
lcall
pop
aaa
lahf
add
jp
and
mov
jmp
cmp
ljmp
aaa
xchg
lcall
sub
lods
incl
pushf
decl
mov
call
mov
lcall
lcall
enter
ret
adc
incl
pushf
decl
jnp
incl
inc
pusha
decl
sbb
out
add
mov
cs
sahf
jo
add
adc
mov
sub
decl
sbb
and
sbb
incl
pushf
incl
lahf
ljmp
decl
decl
decl
incl
pushl
sar
call
mov
incl
sahf
incl
pushf
incl
pushf
incl
pushf
lcall
sub
decl
sbb
add
popl
add
jns
sbb
sbb
ljmp
pop
and
sbb
xchg
lcall
mov
decl
decl
incl
ljmp
sar
call
mov
incl
sahf
incl
pushf
decl
dec
jmp
and
and
and
sbb
add
add
add
jns
pop
adc
ljmp
pop
and
sub
and
sub
and
sub
and
xor
inc
decl
jmp
push
jmp
sbbl
sbb
call
cmp
and
das
jmp
pop
and
and
and
and
and
xor
incl
add
add
and
ljmp
pop
and
sub
and
sub
and
sub
and
xor
sub
iret
leave
cli
repnz
jmp
and
sub
and
cltd
xchg
xchg
sti
hlt
lock
leave
ljmp
sub
es
and
and
pop
and
and
and
cmp
xor
xor
sub
add
add
and
iret
sub
and
sub
and
sub
and
sub
and
cmpb
cld
clc
cmc
pushl
cmpsb
test
pushl
sub
std
cld
push
out
out
out
jmp
jle
jns
es
and
and
pop
and
and
and
aaa
xor
jmp
pop
sbb
add
and
lahf
sub
and
xor
and
decl
lcall
pushl
lcall
push
decl
dec
call
pop
decl
enter
mov
and
pop
and
and
and
pushl
sub
jmp
pop
sbb
add
and
pusha
xor
sub
sub
cmp
sub
xchg
lea
jmp
push
imul
dec
inc
inc
pushl
imul
out
decl
pop
and
and
pop
and
sub
and
daa
and
mov
sub
fisttps
xor
dec
xor
xor
pop
push
dec
push
lock
sub
es
loope
call
push
jmp
pop
and
and
pop
and
and
and
add
and
pusha
push
cmp
cmp
push
cmp
decl
pushl
imul
dec
inc
dec
ljmp
pop
and
sub
and
dec
inc
inc
lcall
pop
jmp
pop
and
and
pop
and
and
push
scas
cmp
dec
lcall
aas
call
aaa
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
es
and
es
and
and
pop
push
iret
pop
pop
sbb
cmp
dec
dec
lcall
aas
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
and
jmp
and
jmp
pop
sbb
adc
add
add
cmp
out
dec
ds
cmp
and
sub
and
sub
and
sub
and
sub
and
sub
and
and
pop
sbb
push
pop
sbb
and
sbb
jo
sub
mov
xor
sub
sub
and
jmp
pop
fbld
pop
sbb
push
pop
sbb
clc
add
pop
lock
add
add
add
psubb
add
clc
add
pop
cld
add
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
add
add
psubb
add
clc
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
aas
incb
add
incb
add
add
jg
addb
inc
add
jmp
pop
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
lds
add
add
add
cltd
mov
call
int
outsl
cmp
movb
and
in
jbe
sbb
or
lock
pop
mov
cmpsl
sbb
mov
xor
pop
lods
xchg
loope
popl
or
mov
jmp
fwait
and
rorl
arpl
adc
adc
cmp
push
mov
sub
push
dec
int
orl
leave
shl
into
imul
nop
aad
push
cmpsl
fildll
call
ror
push
and
mov
inc
aaa
jbe
mov
pop
mov
and
insl
xchg
fnstenv
lods
sbb
xchg
andl
shlb
popa
je
subl
lods
inc
bound
jge
add
in
and
mov
add
sahf
fisttps
into
mov
stos
inc
jp
shlb
adc
in
or
mov
mov
lea
addr16
cmpsl
sub
cltd
xor
add
std
rcr
sbb
dec
lahf
imull
adc
outsl
mov
fsin
dec
pop
cmp
shl
les
repz
mov
iret
dec
js
mov
and
jp
rcr
dec
ficomps
jmp
inc
sbb
std
rorl
imul
xchg
lods
cmp
in
int3
mov
rol
repnz
test
push
sbb
jnp
push
stos
testl
cmp
jge
mov
shlb
sbb
mov
jl
mov
out
fwait
mov
cmpsb
loop
test
sbb
inc
xchg
mov
clc
addl
loop
andb
in
xor
fdivl
pop
pop
jns
cmp
int
icebp
repnz
scas
dec
fdivs
ret
pop
mov
xlat
pushf
dec
sub
rclb
mov
lea
fwait
mov
dec
fcomip
dec
inc
jecxz
adc
mov
rcr
daa
and
and
mov
dec
lret
mov
enter
pop
icebp
aam
mov
pushf
dec
in
insb
aad
pop
ret
mov
jp
pop
dec
inc
lahf
push
and
pop
push
ret
lds
fwait
xor
mov
ds
or
stos
mov
add
lods
or
les
nop
cld
mov
lods
and
mov
arpl
psubusb
mov
movsl
enter
arpl
js
aas
scas
sbb
sbb
sub
shl
xor
lods
xchg
xchg
add
dec
sub
or
sub
dec
mov
ret
scas
mov
cmc
pusha
je
daa
sub
in
addr16
call
jnp
icebp
icebp
or
or
and
cmp
push
das
add
pop
inc
and
in
inc
dec
leave
or
mov
xchg
sarl
test
idiv
xchg
or
in
scas
sub
fnstcw
push
lock
lret
jb
addl
dec
jle
test
pop
fildll
sub
lcall
in
cmpsl
cmp
arpl
pop
lahf
sbb
add
or
ja
hlt
push
lods
push
add
pop
xorl
das
xor
fnstenv
cs
ds
adc
inc
cmp
mov
loope
cli
ss
into
dec
xor
cmpsb
call
sahf
inc
pop
xchg
enter
inc
jb
movsl
mov
pop
cmpsl
sti
inc
rcrl
jne
fdivp
insl
cmp
test
jge
das
insl
lods
sub
loop
sub
pusha
jmp
lcall
aad
cltd
or
cmpsb
mov
adc
imul
jae
mov
out
pop
and
out
push
inc
mov
arpl
out
mov
push
mov
jle
mov
in
cmp
add
dec
fisttps
dec
pushf
dec
sub
mov
fisttpl
jmp
push
inc
lcall
jecxz
jnp
mov
in
cmp
negb
pop
stos
xorl
xorl
out
mov
in
inc
pop
mov
out
adc
xor
xlat
mov
loop
adc
mov
xchg
push
jp
xchg
push
sbb
mov
xchg
notl
icebp
jb
pop
or
push
mov
stos
mov
verr
push
in
add
bound
adc
or
xlat
sbb
mov
incl
and
pop
call
outsb
pop
repz
adc
mov
popf
faddl
mov
arpl
ds
push
pop
fisubrs
scas
int
arpl
sbb
into
jge
std
dec
pop
pop
outsl
xor
leave
in
mov
and
mov
cli
sbb
je
rcr
lcall
out
out
dec
lods
repnz
movsb
out
adc
mov
rorb
stos
mov
and
inc
jmp
pop
pop
jno
mov
ret
sbb
testl
popa
out
push
test
sbb
enter
cmp
dec
ret
or
sti
hlt
pop
mov
scas
jmp
pop
push
jp
push
mov
adc
mov
push
xchg
popf
sbb
imul
cmpsl
fldl
pop
mov
jl
jge
lods
mov
bound
push
call
fistps
push
jnp
mov
ja
loope
pushf
cli
xchg
mov
mov
push
cmpsl
mov
jne
ret
clc
rolb
ds
enter
test
orb
or
sub
stos
xor
jg
fistl
mov
dec
test
test
push
pusha
cltd
ja
popw
pop
jae
sub
pop
mov
inc
adc
addb
push
add
add
adc
push
push
jg
out
lret
add
int3
mov
push
xor
pop
pop
cmp
lods
pop
aaa
popl
fcoms
orl
jecxz
cli
out
pusha
jg
pop
and
mov
jno
gs
xchg
dec
es
dec
adc
test
mov
push
add
movsl
mov
jge
and
xchg
inc
aam
dec
ljmp
inc
cmp
iret
jge
mov
or
es
xor
mov
or
cmpsb
dec
mov
call
lret
and
daa
xor
xorw
xchg
mov
push
sbb
add
dec
dec
xor
jns
add
or
push
dec
pop
out
pusha
daa
test
sahf
jp
xor
fmull
hlt
and
int
lcall
adc
add
xor
pop
adc
add
xlat
xor
dec
in
mov
sbb
or
out
jge
fsts
jle
push
mov
jecxz
in
shr
daa
test
xchg
push
jl
add
xchg
insb
jg
mov
push
add
decb
out
pop
rcll
cmc
pusha
nopl
movsb
jle
adc
xchg
add
jns
outsl
jle
fiadds
mov
imul
mov
repz
sub
sbb
add
inc
jp
jno
sbb
dec
cmp
lea
ljmp
add
cmp
insl
clc
xchg
fnstenv
xchg
and
pop
add
repz
shrl
cmc
and
mov
inc
test
rorb
test
cmp
add
aad
dec
mov
sbb
inc
cmc
in
clc
sub
adc
sbb
cmp
gs
stc
cmpsl
les
push
out
xchg
loop
inc
push
sbb
jle
lock
in
mov
adc
cmpsl
push
adc
outsl
aaa
int3
insl
pop
inc
jb
or
lret
sub
arpl
xor
les
and
sarl
popf
aaa
mov
fcoml
insl
cld
sub
sub
xlat
into
and
pop
jle
ds
add
push
das
sub
sahf
sbb
movsl
icebp
sub
cltd
jbe
sahf
mov
dec
ljmp
mov
ss
xchg
sbb
mov
pop
xchg
jg
adc
sbb
jae
lahf
sbb
pop
into
lock
cmp
iret
mov
cmp
out
stos
jle
mov
js
inc
hlt
add
jge
shrb
ljmp
nop
push
aaa
into
sbb
xor
out
push
mov
testb
add
cmpl
sub
movsl
cmp
mov
cmp
cli
adc
mov
shrl
subb
adc
mov
ds
sub
out
inc
pop
jecxz
in
test
pop
mov
lea
dec
int
outsl
mov
adc
push
aam
ja
sub
sbb
mov
jno
js
push
fistpl
push
fmul
in
loopne
xchg
int3
jns
ret
push
bound
inc
add
add
and
fcompl
jno
lds
mov
lods
xor
sbb
xor
lds
pop
outsb
test
stos
push
push
mov
scas
adc
sub
or
xchg
or
es
in
shrb
add
hlt
mov
je
sub
orb
jbe
jl
cmpsb
pop
mov
inc
in
dec
andb
cmp
lahf
mov
add
pop
aad
inc
icebp
or
dec
stos
xchg
sub
lret
xor
push
iret
mov
dec
ds
mov
dec
out
cmp
cmc
sahf
stc
loopne
pop
aas
rorl
pop
xor
jbe
mov
aam
ss
inc
add
mov
sub
fs
dec
out
test
push
jae
add
push
sahf
mov
jno
mov
cmpb
jmp
orb
inc
into
jno
insb
jmp
enter
test
push
and
pop
inc
data16
and
mov
mov
inc
in
popa
into
ret
and
pop
rclb
xor
pop
cltd
nop
sub
dec
push
sub
int
scas
ret
adc
cmp
fdivs
rcl
and
mov
sbb
push
cmp
dec
inc
mov
or
aaa
ljmp
ss
or
mov
jb
inc
scas
insb
jmp
cmp
xor
sub
push
jo
mov
lahf
outsl
out
cs
mov
inc
enter
pop
orb
adc
in
call
push
sbb
imul
pop
test
stos
lret
cltd
push
fcmovnb
out
add
jne
and
imul
movsb
xlat
mov
cltd
leave
lahf
movsb
push
pop
scas
xor
mov
loopne
adc
pusha
mov
movsl
adc
rep
xor
imul
cmc
jmp
inc
aad
sbb
test
mov
movsb
mov
cwtl
fadds
jge
imul
stc
lcall
xchg
xor
xchg
cli
shrl
jg
push
pushf
gs
inc
push
xchg
pavgb
gs
movsl
add
dec
sti
mov
nop
frstor
repnz
and
sahf
or
je
mov
cltd
mov
inc
je
jp
ja
bound
mov
mov
loopne
lret
int3
lods
xchg
fcomps
mov
shll
out
loop
xlat
jae
addr16
fadds
in
lret
imul
leave
movsl
push
pushf
sti
int
movsl
std
stc
sub
and
arpl
dec
stos
movsl
sahf
fwait
mov
out
stc
jle
bound
mov
addl
push
iret
sub
shrl
das
cld
testl
into
cli
ljmp
loopne
insb
xchg
dec
mov
xchg
mov
xchg
imul
push
mov
push
jb
xor
sub
dec
add
cli
push
test
add
sbb
test
inc
lock
mov
test
bound
and
js
loopne
xchg
cld
inc
inc
cmp
jmp
inc
repz
or
fnop
scas
xor
push
frstpm(287
sub
push
xor
mov
xchg
sarb
inc
push
push
cmp
int
lret
outsl
int3
jno
std
mov
xor
push
jg
mov
jp
js
fwait
mov
add
jnp
into
adc
aam
out
jnp
xor
aad
push
mov
loope
loope
sahf
or
xchg
jle
dec
cmp
xor
pop
movsl
adc
movsl
ja
sahf
xchg
inc
cmc
mov
pop
hlt
xchg
mov
mull
add
lods
test
push
add
pop
inc
mov
xchg
sbb
cmp
adc
orb
mulb
inc
jecxz
loopne
jae
nop
sahf
sub
fisubrl
mov
sub
mov
add
pop
push
lds
or
cmpl
mov
insb
cmpsl
rcll
decl
in
test
or
push
or
pop
inc
inc
jp
into
cltd
inc
xorb
sahf
mov
and
dec
shll
jb
je
mov
xor
dec
add
gs
xchg
dec
out
jno
aaa
jg
popf
jns
jae
je
outsb
enter
pop
adc
or
lock
cwtl
lods
mov
imul
xor
and
and
dec
jmp
or
mov
cmp
rcr
xchg
cmp
les
xchg
imul
mov
push
mov
jle
push
add
sbb
adc
mov
pop
cmp
and
pop
push
outsl
in
loop
cli
fwait
push
adc
or
mov
aas
inc
push
clc
jmp
mov
jle
sbb
std
adc
cmpb
ja
repz
xlat
mov
adc
and
in
insb
xor
adc
aas
jne
sbb
push
cmp
gs
cmp
ljmp
int3
lcall
sub
aas
cmp
fdivl
addr16
out
pop
inc
repz
xor
shlb
pop
inc
stos
add
loop
js
xchg
mov
jno
movsl
movsb
xchg
add
dec
pop
sbb
adc
sub
mov
cmpsb
in
sarl
jb
in
sbb
iret
inc
lahf
mov
mov
neg
mov
imul
pop
aam
push
test
out
fsubrl
popf
in
testb
int3
pop
stos
subl
push
mov
scas
inc
xor
loopne
gs
xchg
dec
loop
sub
mov
inc
roll
or
repnz
mov
lds
aas
rolb
notb
test
mov
jp
pop
pop
inc
lahf
mov
fdivs
lret
add
jns
jbe
adc
leavew
or
adc
and
jmp
mov
cmp
pop
inc
adc
push
cwtl
arpl
xor
stos
fdivrl
jl
lret
aas
mov
test
adc
ret
shll
jmp
test
or
xlat
cmp
loope
push
sub
jne
cmp
js
add
loope
add
das
push
dec
fidivrs
adc
cld
aam
out
lods
pop
and
jg
divb
dec
enter
push
clc
ret
lcall
adc
incb
sbb
arpl
sbb
mov
fldcw
insb
jbe
add
add
sub
bound
push
gs
test
jmp
pop
andb
mov
inc
roll
sub
cld
addb
jb
je
js
rorl
inc
rorb
push
mov
sub
sbb
xchg
mov
pop
lods
sbb
add
fisubl
xlat
inc
test
xor
enter
dec
push
sub
leave
push
mov
cmp
push
loopne
sbb
enter
hlt
and
gs
inc
stos
push
sub
jno
push
roll
adc
loop
in
es
aam
test
daa
xor
es
and
push
test
mov
sub
inc
cmc
inc
das
in
lret
cmp
outsb
mov
movb
les
adc
daa
or
dec
je
popa
popf
fnsave
aam
and
lock
push
or
mov
push
ljmp
repnz
pop
jb
mov
xlat
js
push
jp
jg
fs
pop
mov
add
mov
icebp
or
out
and
cmpsl
mov
jbe
scas
xor
loop
fstpt
mov
stos
and
dec
aaa
fsubrs
data16
into
push
xor
cld
repz
push
inc
cld
xchg
sbb
insl
lcall
pop
jno
js
pop
sub
scas
stos
xchg
dec
ret
sbb
popf
xchg
dec
fninit
mov
or
add
icebp
lods
sbb
in
loop
push
pop
or
lcall
pop
and
addr16
out
sbb
leave
push
rcr
dec
js
and
pop
addb
sbb
call
pushf
das
push
cmp
leave
lds
adc
je
or
or
iret
and
cli
cmpsb
jb
les
fsubl
jg
jae
sar
arpl
jmp
jae
lods
sbb
shll
mov
and
jae
jmp
test
jge
push
inc
mov
iret
pop
or
xchg
mov
fwait
lcall
and
sub
lods
sbb
jne
lods
push
and
and
in
xchg
cli
lret
and
mov
ja
push
adc
cmc
leave
xor
hlt
sub
pushf
push
adc
cltd
div
mov
xchg
movups
popf
jb
push
fldt
dec
out
or
or
in
jg
jl
xor
mov
adc
scas
clc
leave
bound
or
fwait
xchg
pop
dec
mov
ljmp
out
cmpsl
push
jae
in
jnp
xchg
or
scas
sbb
fildll
shrl
fstp
decb
aam
mov
mov
dec
add
loop
sbb
ds
mov
insl
jle
jg
icebp
inc
push
cmp
mov
push
mov
mov
jp
cwtl
cmp
subb
inc
movsl
jp
cwtl
pop
into
insl
aas
adc
jo
xchg
jecxz
mov
popa
jmp
lods
jmp
ds
test
lcall
out
into
addb
fsts
sbbb
nop
mov
push
inc
jmp
mov
inc
in
push
pop
es
jbe
pushf
pop
test
nop
push
xchg
sub
leave
lods
pop
rorb
enter
iret
xlat
xchg
xor
or
orl
xchg
or
cli
add
lds
je
mulb
idivl
popl
xchg
or
mov
pop
pop
mov
mov
push
xlat
arpl
pushf
adc
jbe
out
ss
add
cmp
fcoml
jno
jae
sub
out
sub
fstpt
inc
inc
addr16
pop
sbb
out
pop
cmpsb
pop
jp
insb
mov
xor
lret
sbb
hlt
jns
dec
cwtl
test
mov
push
mov
jmp
cli
xchg
push
and
adc
ficompl
lret
and
jle
lret
mov
dec
cwtl
shlb
push
scas
lcall
jmp
mov
movsl
cmc
shll
xchg
xchg
jmp
adc
hlt
lock
pop
or
dec
add
xlat
and
push
cs
mov
int
fnsave
into
adc
out
push
mov
mov
cmpsb
and
in
mov
outsb
fisubs
stos
in
call
in
add
jmp
jge
sbb
xor
mov
iret
sbb
ds
sbb
push
dec
jo
dec
sahf
sub
out
push
pop
int
lret
jmp
adc
int3
out
mov
sub
test
fdivr
cmp
push
lds
jle
test
lods
aam
imul
add
cmp
stos
sbb
pop
std
xchg
mov
in
sbb
and
rol
sbb
xchg
dec
push
rol
sub
push
testl
out
dec
xor
pop
lahf
inc
pop
mov
je
les
xor
enter
adc
mov
mov
mov
fs
out
jl
mov
inc
or
inc
sti
push
rclb
jae
and
shrb
out
in
dec
push
rorb
cwtl
dec
sbb
or
push
call
stos
sbb
mov
or
ljmp
ja
xchg
sahf
cmp
inc
stc
push
mov
or
dec
les
adc
push
xchg
jp
insb
cmpl
and
mov
shl
mov
stc
cmp
fs
jns
aas
mov
gs
inc
dec
mov
ret
or
sbb
mov
push
bnd
xchg
movsb
push
shl
add
call
or
adcb
pushf
out
push
enter
dec
fldt
adc
and
std
jbe
scas
mov
push
outsl
popf
lahf
int3
outsl
inc
jmp
ss
xor
dec
pop
std
dec
test
jbe
hlt
popf
cmp
mov
inc
insl
mov
mov
jge
jp
cmpsl
push
out
jl
jne
movsb
out
es
add
es
push
fists
cmp
jp
jg
mov
call
mulb
cmpsb
add
xor
dec
mov
sahf
push
aad
jb
push
js
lcall
mov
mov
scas
dec
fsubrl
mov
loope
jge
push
stos
adc
mov
cmc
mov
pop
sbb
insb
cmc
out
fcomps
push
jnp
call
popf
mov
mov
mov
push
jg
or
dec
sbb
push
shll
add
hlt
scas
xchg
sub
mov
cs
sub
nop
out
inc
mov
in
add
insl
dec
dec
push
add
xchg
call
xchg
ja
subb
lcall
jmp
xchg
fldl
xchg
adc
call
mov
mov
movsl
loopne
dec
sbb
jo
inc
cld
cmp
outsl
cmp
push
xchg
stos
test
or
aaa
leave
mov
leave
inc
out
and
sbb
imul
push
out
aaa
pusha
mov
pop
std
ja
lds
ja
movsl
push
lret
js
hlt
adc
mov
sub
dec
inc
out
aad
sti
bound
testl
dec
insl
mov
dec
int
enter
push
lahf
daa
cli
dec
rorl
lcall
add
div
push
jmp
sbb
mov
loopne
push
mov
push
adc
imul
mov
scas
out
test
xchg
sbbl
xor
popa
mov
in
and
push
stos
sub
loopne
es
lea
mov
mov
mov
iret
fdivp
xchg
shl
into
repz
mov
pop
dec
push
sub
je
xchg
popa
js
mov
pop
lcall
push
cli
mov
pop
xlat
imul
jge
or
cmp
jl
xor
insb
scas
bound
add
cmpsl
xchg
cmp
in
jbe
mov
inc
mov
shll
aam
lods
pop
add
dec
lahf
or
sub
xchg
xchg
xchg
mov
rcrl
scas
adc
loop
hlt
jno
sti
cmpsb
mov
cld
pop
mov
mul
notl
insl
mov
lods
lds
adc
inc
rcl
hlt
mov
cmc
xorl
push
push
sub
pusha
loope
jg
add
mov
loop
out
fnstsw
arpl
pusha
add
mov
mov
leave
inc
icebp
cmp
lret
test
stc
aas
mov
add
pop
cs
out
fisubl
xor
sbb
rcrb
mov
dec
mov
out
inc
add
fs
cld
js
push
stos
jo
sub
push
js
loope
or
inc
add
inc
daa
mov
daa
xor
fnstsw
ret
xor
mov
les
pop
aad
xchg
dec
addr16
pop
in
jbe
std
dec
shl
pop
cmp
xlat
sti
ret
ficomps
cmp
movl
cld
popa
in
xlat
jmp
loope
js
cwtl
insl
pop
imul
out
outsb
repnz
push
lret
jo
jp
lock
and
push
ljmp
and
repz
jl
push
cmpsl
movsb
or
repz
add
cmp
loopne
inc
ret
bound
ret
mov
inc
fstp
addl
rcrb
dec
push
and
incb
mov
repz
loope
mov
push
lds
mov
int
aam
inc
data16
push
push
aaa
repnz
fst
imulb
mov
cmpsb
push
xor
lea
jnp
sbb
sbbb
lock
or
sub
push
dec
sub
lret
xchg
out
push
xchg
aaa
adc
arpl
aad
push
iret
add
test
mull
cmp
loope
jmp
test
outsl
loopne
push
xchg
dec
dec
iret
cld
imul
push
jmp
push
test
add
mov
cmp
or
popa
mov
loopne
fsubs
fwait
movsl
ror
fs
adcl
dec
mov
stos
mov
cld
ds
cmp
inc
lea
in
ds
out
mov
add
out
push
cmp
arpl
jb
loop
pusha
jecxz
fwait
movsl
add
pop
push
pop
mov
ja
pop
mov
sar
inc
cmpsb
xor
xor
jp
fcmovnb
xor
xchg
push
test
push
sti
cmp
cs
clc
push
cmp
xchg
dec
sub
inc
mov
mov
int
bnd
mov
aad
jns
rcrb
bound
push
xlat
or
fcoms
xchg
dec
sub
test
cmp
iret
fstps
add
push
fnsave
in
popf
negl
add
int3
dec
jge
ljmp
ret
out
mov
xchg
dec
adc
adc
loope
loopne
cmp
fwait
int
sti
add
add
xor
gs
push
movsb
add
aam
mov
movsb
clc
mov
jns
shll
jp
std
js
xchg
jmp
shll
fstl
push
int3
loop
mov
pushf
aad
lret
into
nop
negb
jo
aam
sahf
sbb
data16
lret
push
push
cmpsb
enter
lret
movnti
and
sbb
ds
mov
or
stc
repz
out
mov
in
cli
es
aam
sti
sub
inc
mov
pushf
stos
dec
adc
push
jp
mov
add
push
mov
into
mov
idiv
lret
cld
dec
cmc
rorl
outsb
in
repz
or
mov
sbb
lcall
pop
or
cmp
xlat
xor
jp
addl
jbe
ret
imul
in
fisubrl
push
popf
lcall
es
and
mov
aas
js
aad
mov
gs
sub
add
and
out
repz
shrb
mov
pop
add
hlt
outsb
fwait
ljmp
roll
inc
sub
rclb
or
cmp
mov
pusha
ficompl
inc
dec
and
fsubr
ret
and
xlat
sbb
movsb
pop
cmp
pop
push
int
loopne
test
subb
cmp
xchg
adc
divb
dec
xor
or
fdivs
mov
testl
add
xor
jno
xchg
repnz
dec
inc
sub
outsb
mov
scas
xlat
sarb
xchg
fisubrl
push
cmp
push
jb
sbb
setns
js
sbb
cmc
sar
shlb
inc
repz
mov
popa
fistpl
int3
cld
movsl
dec
xor
or
enter
push
mov
gs
sub
jl
push
inc
push
jns
cmpsb
jmp
fmul
orb
xchg
ss
add
gs
sub
mov
ror
lock
jmp
xchg
jae
pop
fdivr
popa
das
lret
fwait
dec
add
lret
xchg
mov
jp
jle
je
pop
popa
insl
mov
sbb
and
fistl
or
jnp
lcall
add
xchg
pushf
add
icebp
sub
pop
rcrl
sbb
or
xchg
push
cmp
sbb
cmp
mov
stos
sub
sbbl
mov
or
loopne
cmp
wbinvd
and
mov
out
xor
dec
fisubrs
xor
jg
in
xchg
adcl
push
pop
cmp
cmp
pop
aaa
jp
pop
aad
cltd
jbe
mov
mov
repnz
clc
pusha
cmp
xor
dec
xor
pop
hlt
jo
pop
sub
rclb
jge
nop
sub
inc
mov
lods
lea
scas
in
or
pop
or
jo
xchg
imul
movsb
cmc
or
addr16
decl
dec
gs
cmpl
lods
iret
pushl
xor
lahf
push
xorb
add
dec
repnz
xlat
sub
rcrl
or
push
jno
mov
aas
shr
xor
jae
fidivrl
jl
das
adc
pop
aam
jnp
push
mov
pop
mov
cmp
clc
mulb
pop
mov
in
rcrl
call
push
jno
sbb
sahf
xchg
jne
hlt
rclb
scas
repnz
int3
cltd
repnz
sarb
cld
mov
inc
jno
iret
cmpsb
imul
lods
fwait
dec
add
sbb
pop
jecxz
mov
mov
lret
xchg
inc
repz
jge
pusha
dec
cmp
mov
int3
das
frstor
in
adc
pop
pop
cmp
pusha
in
fiadds
adc
jp
jle
push
and
repnz
push
lock
aad
xor
inc
pop
popa
in
pushf
dec
sub
bound
push
xchg
fwait
pop
or
mov
test
cmpsl
aam
push
cmc
adc
push
lds
roll
inc
xlat
stos
aaa
cltd
push
add
shll
leave
lcall
in
add
jbe
test
xor
out
dec
iret
stos
jmp
jno
out
xchg
xchg
ds
pop
dec
push
add
mov
pop
std
notb
cmc
mov
nop
jecxz
fistps
das
subl
and
mov
outsb
jno
pop
pop
push
mov
stos
xor
pusha
loope
imul
add
jmp
int
sarb
leave
fadd
addr16
mov
hlt
sub
sub
sbb
add
mov
jns
movsb
push
push
jne
mov
ret
popf
push
and
pop
in
mov
mov
inc
dec
cmp
pushf
push
xor
inc
fucomp
sbb
cmpsb
mov
mov
mov
mov
add
stos
push
into
test
xchg
sbb
in
add
shrl
add
xor
push
ss
data16
or
sbb
sbb
jp
mov
and
xlat
stc
mov
cmpsb
and
push
add
gs
scas
movsb
iret
nopl
call
push
sarb
je
das
orl
adc
ja
in
pop
nop
je
cmpsl
pop
sbb
call
cmpsb
cmp
xchg
daa
and
repz
sub
je
push
std
fs
insb
cmp
push
xlat
fildll
leave
xchg
pusha
fists
jo
and
mov
fcom
pop
push
and
xchg
or
mov
hlt
stos
push
aaa
or
rcrl
sarb
sbb
cmp
cmp
sub
fidivs
mov
push
fwait
pop
int3
ja
push
mov
neg
scas
das
dec
rorl
pop
adc
push
mov
rcr
testb
call
push
shl
xchg
pop
addr16
popa
in
mov
inc
jmp
dec
inc
pop
shlb
dec
ret
repnz
fstp
fwait
adc
or
dec
int
pop
xor
push
push
cmpsl
rclb
rorl
fcompl
dec
mov
jo
fbstp
ret
inc
pop
xchg
ret
sarb
or
mov
shl
dec
inc
xchg
inc
xchg
les
bound
push
insl
xchg
xchg
sbb
or
in
addl
scas
fisubs
sbb
sub
pop
push
testb
sub
or
mov
test
push
sub
push
faddl
pusha
shl
lds
arpl
fisttpl
mov
sahf
add
mov
repnz
notb
push
xchg
dec
sub
in
std
xchg
cwtl
dec
add
mov
test
sub
cmpsb
cli
push
jne
int3
jne
jae
sub
xor
inc
movsl
roll
lret
mov
xlat
dec
add
sub
pop
adc
inc
mov
in
jne
fstps
push
lret
sbb
push
jns
inc
addb
scas
imul
insl
stos
insl
stos
or
lods
mov
mov
dec
inc
lock
jl
mov
xchg
xor
push
push
push
mov
xor
lret
mov
mov
imul
repnz
repnz
mov
inc
jl
movsb
push
shlb
or
lock
ret
xor
add
pusha
sbb
out
js
or
pop
std
int3
mov
lods
sub
cmp
sbb
xchg
cli
cmp
imul
xor
aad
pop
adc
repz
push
cli
jge
xchg
or
add
repnz
cmc
hlt
pop
pop
cmp
sti
lret
cli
scas
fcom
stc
pusha
mov
in
mov
jno
xor
outsb
jnp
xor
mov
imul
adc
insl
mov
adc
loope
rclb
push
shlb
in
adc
xor
mov
je
mov
adc
std
add
mov
inc
std
arpl
or
sbb
sarb
pop
repnz
ds
lahf
test
sub
jle
push
ret
pusha
loop
shrl
std
shl
jecxz
and
imul
mov
rol
nop
sub
mov
xor
out
loop
pop
rcrl
ja
leave
xchg
inc
xor
mov
sbb
push
enter
fstpt
cmpsl
lods
inc
xchg
push
mov
in
push
pop
mov
fwait
xor
inc
loopne
jge
push
std
mov
cmp
mov
xchg
jbe
and
push
fs
push
mov
xchg
mov
pop
dec
dec
aas
sahf
or
std
add
addr16
inc
in
jbe
pop
push
dec
fmulp
adc
add
add
incb
mov
inc
xor
test
ljmp
add
dec
sbb
lock
cmpsl
and
mov
push
sbb
jno
das
std
out
mov
push
mov
mov
xchg
push
sbb
imul
add
mov
sub
pop
push
or
or
mov
sub
sar
fdivl
adc
xor
mov
and
loope
dec
push
dec
int
fdivrs
dec
aad
cmp
and
inc
xchg
jbe
out
mov
into
add
sbb
pop
lahf
mov
mov
cmc
mov
pop
mov
aas
pop
outsb
pop
mov
mov
lret
inc
ja
cltd
lea
inc
lret
pop
rol
fnstsw
push
test
pop
mov
jmp
add
out
les
insl
mov
push
arpl
ss
sub
or
add
cmp
jg
popa
movsl
adc
add
fwait
shl
lea
repnz
mov
test
int3
stc
orl
movsb
mov
pop
push
mov
enter
jp
mov
andb
shl
aas
bound
xchg
sbb
adc
lret
stos
inc
popf
nop
adc
test
pop
cmpb
and
leave
adcl
mov
add
or
sahf
arpl
pop
rcr
inc
loope
push
jmp
and
jl
and
std
pushf
push
cwtl
jg
dec
je
in
mov
ja
ljmp
enter
jno
cmp
xchg
fcomps
xor
and
div
mov
pop
insl
push
inc
call
sbb
jecxz
xor
test
mov
mov
pop
or
mov
pop
jb
sbbl
out
sbbb
je
add
push
cmp
ss
fisubl
pop
inc
cmp
test
mov
or
je
xor
pusha
and
push
das
loope
mov
cmp
sahf
inc
jno
or
dec
dec
in
movsl
jge
inc
cld
movsl
fwait
add
addl
jae
xor
call
mov
pusha
lahf
hlt
xchg
lea
push
xchg
jge
inc
dec
call
lret
mov
addr16
ret
push
inc
push
lret
mov
cmp
mov
lret
or
jns
pop
popa
cmp
jg
shl
testl
add
pop
in
lds
stc
mov
pop
push
mov
je
cmpb
and
hlt
out
loop,pt
jns
sbb
insb
or
xor
inc
ror
or
sbb
pop
sbb
stos
jg
xchg
mov
imulb
xchg
ja
xchg
or
ja
mov
inc
insl
or
or
insb
test
cmp
outsb
push
push
hlt
jle
dec
push
cmp
jp
sub
xor
fstps
push
ret
push
mov
push
outsl
pop
dec
mov
scas
jmp
repz
into
sbb
sbb
scas
xor
stos
neg
je
adc
faddl
push
sbb
in
push
je
out
xchg
mov
xchg
push
mov
lret
adc
pop
dec
fcmovbe
popf
or
enter
xchg
rcl
xlat
jmp
clc
std
lahf
lret
fsubl
addr16
push
lea
stc
pop
mov
scas
bound
jge,pt
popa
rol
in
pop
jmp
or
es
jge
loop
xor
lcall
loopne
push
insb
fwait
and
push
push
mov
ret
mov
dec
addl
push
repnz
lret
mov
aas
ljmp
sub
jg
cmp
push
mov
cmpsb
and
jecxz
xchg
inc
dec
pop
adc
cmp
fadds
stos
enter
fnsave
and
adc
insb
sbbl
push
loop
addr16
lods
and
adc
pop
pop
jo
cwtl
lods
adc
mov
test
sub
xor
sbb
lcall
test
pop
packssdw
loope
mov
jmp
outsl
push
jp
and
dec
test
mov
sub
cld
cmp
and
add
mov
cmpsl
nop
mov
xchg
stos
das
adc
or
ljmp
mov
mov
in
fmuls
add
xor
lds
sub
cmp
repz
mov
gs
pusha
push
rcl
int3
jnp
scas
dec
mov
mulb
dec
imul
push
mov
adc
adc
das
test
aas
push
popf
dec
aad
popf
icebp
femms
or
cltd
into
inc
pop
adc
jae
loope
add
shl
jge
int3
jecxz
jge
xchg
push
add
dec
mov
cli
lea
fwait
in
or
arpl
or
push
push
mov
add
jp
inc
push
adc
adc
into
xor
ss
mov
sub
jmp
cltd
jne
dec
add
pop
mov
lods
data16
mov
sbb
ret
xor
ja
sbb
cli
leave
jae
adc
and
ret
jns
push
into
int3
inc
dec
pop
cmpsl
test
in
cmp
sub
cmp
cltd
hlt
inc
fisttps
adc
clc
mov
rolb
in
jle
shlb
lods
pop
into
jmp
cmpsb
mov
popa
push
rorl
cltd
cmc
jle
cmpsl
insl
push
rcll
mov
inc
enter
adc
loopne
filds
aas
adc
popa
loopne
call
cli
push
dec
mov
repz
ljmp
imul
fs
popa
test
mov
pop
push
sti
and
dec
scas
stos
dec
xorl
jae
arpl
imul
push
jmp
xchg
pop
stc
imul
repnz
popf
xor
inc
mov
jno
mov
dec
cmpsl
aaa
xor
xchg
jno
or
inc
sub
pop
out
js
out
loope
nop
xor
nop
inc
popf
cwtl
pop
pop
jo
int
rcll
jo
xchg
pop
shll
setno
int3
enter
nop
dec
fstps
sub
repnz
push
rcrb
hlt
int
push
and
mov
adc
stos
js
mov
sbb
sbb
je
ljmp
pushf
icebp
addr16
pop
mov
jg
lret
test
sbb
push
js
into
mov
push
cwtl
xchg
add
negb
cltd
fldl2e
fadds
jno
jmp
mov
xchg
aaa
jbe
or
repz
lods
pop
mov
mov
clc
sub
dec
push
xchg
dec
inc
sbb
jmp
xlat
neg
jb
adc
cmpsb
test
mov
or
xchg
xor
xchg
jnp
sbb
cmp
dec
jp
sub
mov
add
mov
int3
cmp
das
iret
in
cltd
jo
mov
push
dec
push
jg
jmp
mov
add
add
les
jo
imul
adc
bound
aas
push
fwait
aam
pop
pop
xor
jbe
inc
push
inc
or
dec
in
cmp
ret
add
xor
dec
xchg
push
cmc
xor
nop
sub
inc
scas
aaa
int3
mov
adc
pop
mov
mov
inc
mov
sahf
mov
and
cmp
pop
add
lret
call
loopne
push
cld
xchg
call
stos
mov
and
lea
or
pop
mov
mov
mov
and
ja
push
cmpsl
cmp
and
stos
test
sbb
mov
and
adc
cmp
lret
es
les
mov
fadds
mov
mov
loope
ss
sbb
xchg
jp
fwait
aaa
decl
ss
out
adc
lods
sbb
fwait
cli
or
add
mov
out
inc
lods
int3
and
and
push
jecxz
xor
sti
out
adc
and
and
inc
lock
xchg
rolb
gs
in
inc
jno
cmp
adc
and
mov
lock
sbb
mov
shll
push
in
into
mov
adc
push
ja
mov
mov
xchg
lret
sbb
mov
jno
mov
movsb
dec
insl
ficomps
dec
and
clc
cld
lds
addr16
je
aas
popf
mov
cmp
xor
cmp
cmpsl
daa
inc
dec
sbb
xlat
in
inc
bound
repnz
mov
dec
pop
xchg
pop
fwait
aas
push
sub
jns
stos
jecxz
stc
mov
sbb
pop
jmp
loop
cmp
push
sub
add
pushf
cmpsl
add
push
sbb
push
inc
and
push
mov
jmp
or
enter
repz
ss
push
ja
pop
test
mov
mov
incl
ret
jge
in
rcrl
adc
mov
push
sbb
mulb
loop
sub
add
sarl
mov
movsl
cmp
adc
adc
shld
adc
into
fbstp
and
cltd
or
outsb
int3
xor
gs
mov
ja
dec
mov
mov
ret
push
jl
adc
mov
bound
push
sub
into
imul
dec
xor
sti
add
in
mov
imul
or
call
dec
add
mov
icebp
or
test
or
jno
cmp
cwtl
dec
cmp
mov
pop
mov
pop
dec
jne
adc
hlt
mov
popa
sub
sbb
jecxz
scas
lea
mov
cmp
repnz
cli
imul
aam
in
inc
and
mov
and
cmp
ret
push
and
add
jl
enter
fcom
mov
mov
or
push
inc
mov
jp
cld
adc
cmpsw
addl
gs
gs
sub
or
jno
xchg
dec
ret
adc
lds
movq
xor
outsb
dec
push
jl
loop
or
stc
cmpb
loopne
inc
pop
dec
pop
aam
mov
jnp
fdivrl
in
pop
lret
mov
fidivs
push
adc
insl
mov
test
mov
stos
lods
xchg
mov
pop
loop
lret
shlb
movl
adc
adc
fbld
test
icebp
cli
sub
fldl
fisubl
in
dec
pop
cmp
mov
cmp
mov
mov
lods
push
fwait
mov
jmp
jl
sub
mov
xchg
add
adc
les
lock
and
into
jmp
mov
call
divb
sbb
mov
pop
mov
push
sahf
mov
shr
add
adc
test
mov
push
xchg
stos
nop
in
daa
xchg
push
or
fsubs
lods
or
xor
dec
jo
sbb
arpl
jge
mov
inc
leave
xchg
es
call
dec
or
addr16
test
xchg
shrl
imul
sbbb
inc
pop
mov
cmp
ds
imul
sub
ud2
jns
add
lds
mov
mov
rcrl
jmp
fs
cs
pop
sub
mov
mov
cmp
test
or
inc
and
add
sahf
cmp
out
sbbl
xchg
mov
dec
jl
mov
std
and
daa
cli
mov
fistpl
fidivrl
jne
fisubrs
clc
mov
fistl
in
cld
xchg
enter
mov
dec
and
mov
lahf
mov
cmp
dec
push
lret
sub
push
fs
int
xor
aas
rclb
adc
adc
push
mov
test
std
jmp
inc
push
jp
fwait
xor
in
cmc
jg
adc
xchg
add
cmp
sbb
out
mov
ret
andl
or
push
sub
xchg
add
mov
adc
ficoml
outsb
insl
dec
dec
mov
cld
out
repnz
gs
ja
mov
or
adc
das
push
std
test
shrl
dec
sub
dec
jle
enter
xchg
cmpsl
cmp
xchg
sbbl
movsl
test
xchg
push
or
fcoml
xchg
mov
lcall
ds
jb
stos
mov
push
and
push
or
inc
xorl
or
inc
xor
xchg
mov
sbb
pushf
jb
xor
or
mov
sub
mov
cmp
faddp
ja
test
fcomps
fsub
mov
sbb
in
gs
imul
sub
cmp
adc
cmp
cli
mov
mov
add
sbb
push
xor
lahf
xchg
repz
cmp
test
insl
jge
dec
ja
and
mov
pop
stc
imul
pop
je
sbb
push
ret
sarl
daa
in
leave
jno
aam
jb
xor
sbb
and
dec
insl
mov
ja
adc
xor
fnsave
mov
mulb
ljmp
ror
dec
fistpl
xor
arpl
out
mov
jp
push
popf
or
push
mov
aam
add
sbb
mov
jmp
and
push
push
filds
pop
out
xor
pop
push
repz
daa
sti
sbb
pop
insl
jns
stc
xor
or
adc
hlt
icebp
test
cs
mull
add
lret
or
popf
pop
mov
inc
loop
inc
sub
testl
xor
test
ljmp
push
divl
adc
mov
fidivs
ret
pop
or
movsb
sub
push
push
in
scas
jne
rolb
stc
jmp
inc
call
loope
out
call
stos
push
in
cmp
xchg
inc
stc
out
out
bound
mov
iret
cmp
xchg
in
or
mov
pop
add
bound
in
outsb
js
pop
or
std
in
inc
shrb
pop
mov
dec
mov
stos
pop
movsb
sti
mov
scas
in
outsb
mov
cld
aaa
dec
std
enter
mov
adc
mov
outsl
inc
insb
jb
das
cwtl
mov
xorl
inc
cmp
jae
inc
stc
jp
imul
mov
in
push
or
adc
stc
and
cwtl
gs
gs
addl
sub
std
cld
jecxz
or
fs
xchg
push
dec
ljmp
inc
mov
pop
add
daa
xchg
icebp
xchg
jmp
xor
pop
shrl
dec
jp
jl
test
adc
sub
es
adc
inc
sub
or
mov
int
pop
shll
mov
outsb
mov
inc
pusha
inc
dec
add
cmp
test
fsubl
subb
test
nop
mov
or
in
test
mov
daa
loope
inc
add
and
sub
mov
sbb
jmp
adc
cltd
int
lcall
jmpw
jns
sub
xor
or
int3
mov
js
or
jmp
xor
mov
pop
into
cmp
inc
adc
xlat
cli
out
je
xchg
les
adc
in
lea
sub
mov
aas
cmp
xlat
xchg
cmp
pop
stos
incb
dec
rclb
or
repnz
add
sarl
repnz
jecxz
addr16
xor
aam
stos
push
orl
mov
and
rcl
lcall
adc
push
pop
pop
lret
aaa
clc
clc
mov
ja
add
bound
or
pop
int
aas
mov
sub
ret
sbb
mov
ljmp
and
lret
cmp
cmpsb
jl
outsb
shr
jl
dec
jo
mov
mov
push
clc
sahf
cmpsl
mov
adc
xchg
sub
xchg
or
mov
push
add
pushf
sarl
pop
mov
jne
xchg
insb
adc
xor
shll
pusha
adcl
arpl
push
lret
lret
inc
inc
imul
subb
jle
mov
mov
loop
add
inc
movsb
dec
rcr
xchg
sahf
js
sahf
pop
je
pop
cmp
shrl
out
call
or
es
addr16
cwtl
ss
mov
iret
jnp
sbb
imul
xor
cmc
jne
loopne
fidivl
lret
gs
aas
sub
add
and
sti
add
inc
js
cmp
dec
push
add
stos
in
push
ja
cmp
mov
and
or
icebp
test
mov
sahf
xchg
pop
lcall
jne
xchg
add
or
loopne
push
shll
xchg
pop
gs
int3
push
loop
shlb
out
cmp
leave
lock
inc
or
cmp
xlat
sub
xchg
mov
jmp
shrl
mov
push
dec
xchg
mov
cmpsl
mov
test
adc
push
inc
mov
ret
aas
push
lods
add
leave
xchg
cmp
push
fistpll
daa
pop
into
pop
cmp
or
pop
dec
push
jo
dec
pop
jno
and
popf
mov
lock
mov
sbb
xor
add
aam
aad
imul
es
shll
mov
fnstcw
add
mov
ss
test
xor
in
jmp
lret
jmp
in
dec
jle
adc
adc
leave
xchg
dec
fwait
xchg
dec
xchg
lds
cmp
popa
sub
sti
add
fdivrl
mov
and
jl
jle
out
inc
cwtl
popf
fidivrs
lds
xor
adc
pop
and
shlb
mov
test
cmpsb
push
outsl
loope
sub
add
inc
std
xchg
pop
xchg
ss
pop
push
push
leavew
ss
test
mov
xchg
ficomps
dec
movsl
pop
data16
mov
mov
jp
int
inc
loope
sub
adc
mov
sub
mov
sahf
mov
ds
iret
ret
pop
push
push
sub
xor
inc
mov
loope
mov
out
cld
mov
lods
pop
sbbl
pop
mov
sub
ss
inc
jnp
push
ss
outsb
and
pop
movsb
adc
iret
fildll
xor
jecxz
test
ret
xor
xor
or
and
ds
leave
mov
xchg
cmpsb
adc
fldt
gs
adc
shrb
dec
arpl
mov
les
adc
adc
dec
sub
mov
pop
mov
inc
xlat
mov
sbb
adc
add
dec
fimull
lods
ret
or
lods
pop
pop
imul
lahf
xchg
dec
scas
dec
ja
sub
mov
xchg
movsb
mov
inc
sbb
inc
lret
pop
cmp
mov
xchg
jno
mov
xor
dec
idiv
cwtl
sub
dec
and
or
pop
jbe
ss
test
test
inc
insl
icebp
or
fst
push
xchg
or
lret
loopne
inc
outsl
mov
ret
fwait
jnp
sub
jbe
movsb
shlb
sub
add
js
mov
adc
pop
sarl
adc
test
addl
dec
mov
sbb
jge
in
mov
or
mov
lock
add
les
arpl
call
sub
xchg
jnp
or
jb
cld
rcrb
inc
ds
out
hlt
test
js
mov
dec
movsl
inc
daa
lcall
fdivl
fdivrp
xchg
je
sub
dec
std
jne
dec
addb
mov
addr16
imul
ljmp
add
inc
mov
in
jbe
xchg
ds
adc
or
sub
icebp
mov
mov
inc
test
cmp
sti
mul
icebp
push
add
flds
pop
cli
mov
jle
int3
rol
hlt
cmpsb
mov
xor
insb
jbe
and
push
cmp
bndstx
mov
inc
cmp
mov
adcb
mov
iret
fimull
test
push
das
imul
pop
ds
in
jne
jbe
sahf
push
xchg
jns
imul
adc
mov
inc
adc
idivw
pop
shl
jno
mov
jae
add
pop
es
adc
mov
mov
cmp
jns
std
push
push
or
push
jmp
test
aas
cli
sub
ficoml
mov
shl
js
mov
jg
je
ljmp
negb
jmp
popa
into
pop
out
add
sub
in
mov
and
pop
and
mulb
cmp
fisttpl
xchg
div
and
cld
popf
ret
mov
jno
mov
stc
insl
repz
dec
in
and
popf
lock
fnstsw
sti
sbb
pusha
mov
add
rorl
lret
and
jp
pop
mov
stos
or
into
fnsave
imul
lea
mov
sbb
dec
cmp
loope
fcomp
push
adc
mov
mov
push
mov
or
ja
sbb
sub
jb
sbb
cmpsb
inc
insl
aas
sahf
mov
ja
xor
adc
add
fidivl
rol
out
ds
add
imul
cli
dec
and
push
pop
aaa
dec
adc
lods
mov
pushf
sbb
pop
mov
mov
mov
or
add
test
xchg
daa
or
jge
fistpll
or
fcoms
cmp
inc
mov
aam
adcb
pop
arpl
iret
fisubrs
pop
cmp
movsl
push
xchg
or
inc
push
hlt
loopne
fbld
jbe
outsb
cmp
cld
xor
add
push
repnz
subb
fbld
xor
sub
enter
mov
xchg
frstor
mov
pushf
cmp
imull
aas
ret
jg
or
negb
push
mov
pop
jns
nop
xor
fildll
leave
addr16
roll
dec
pop
sbb
enter
mov
sub
sub
test
pop
xchg
je
repz
mov
fildll
ljmp
mov
lds
lods
inc
addl
call
int
xor
mov
loopne
inc
addr16
out
aad
push
xorb
mov
sbb
xchg
and
xor
arpl
rolb
cs
mov
sbb
sti
imull
cmp
mov
nop
jb
push
fidivrs
mov
ljmp
ret
mov
lods
jmp
sbbl
jne
mov
adc
scas
lcall
or
or
mov
fmull
push
mov
pop
test
daa
cwtl
or
lcall
outsb
xchg
push
xchg
addb
sub
cmp
pushf
call
jmp
push
cli
inc
jg
push
out
clc
rol
mov
addr16
out
xchg
aad
jmp
pusha
jnp
inc
dec
ret
call
dec
in
fidivs
roll
jmp
add
cmpsl
push
add
dec
push
or
mov
pop
pop
sbb
hlt
jecxz
mulb
cmc
jmp
cltd
xchg
loop
rorl
filds
jo
aam
pop
rcll
pusha
xor
sbb
scas
fsubs
loopne
cwtl
and
sbb
jle
xor
leave
ja
in
jo
cmp
or
js
cltd
mov
fdivrl
test
es
fwait
pushf
push
sbb
jmp
fdivl
lock
jo
or
insb
xor
mov
jbe
add
jo
jl
subl
test
mov
inc
inc
jbe
sub
ja
mov
jg
and
mov
add
decl
mov
push
outsb
aaa
movsl
sub
dec
orl
jmp
cmp
xchg
in
test
fbld
fldcw
mov
movsl
call
pop
adc
xor
or
dec
repz
sbb
rclb
sbb
jns
cmp
mov
jmp
dec
lds
add
fldt
stos
cltd
out
adc
mov
divb
bnd
ret
sub
mov
add
rcll
cltd
movsl
je
push
sarl
pop
out
inc
cli
je
push
mov
or
or
dec
inc
jbe
je
aad
add
test
xor
add
mulb
lret
clc
sub
jae
out
subl
jb
imul
out
lret
inc
and
mov
mov
pop
les
mov
aam
cmc
shll
inc
mov
and
cltd
scas
arpl
mov
int
pusha
sbb
push
sub
dec
mov
pop
xchg
jp
inc
push
xor
pop
jno
push
jp
paddsw
xchg
int
repnz
jg
mov
scas
hlt
nop
orl
or
mov
sarl
repz
shll
aas
adc
xor
cwtl
test
cltd
aaa
rolb
stc
add
cmpsb
mov
loope
mov
rorb
inc
jno
out
push
add
push
jo
xchg
mov
jne
leave
mov
mov
or
outsl
lahf
adc
imul
repnz
sbb
push
push
int
push
mov
mov
mov
sbb
adc
dec
call
add
adc
inc
outsl
mov
scas
pop
jns
cmpsb
or
movsl
in
xchg
mov
lahf
mov
je,pn
sbb
push
push
mov
mov
loope
jg
or
fstp
inc
add
arpl
sahf
add
in
xchg
cltd
aad
mov
and
jae
rcrl
imul
aam
cmpl
pop
outsb
addr16
adc
addr16
or
push
frstor
push
insl
jge
hlt
xchg
jnp
cwtl
rolb
mov
mov
or
pusha
cld
sbb
sbb
sub
rol
mov
adcl
nop
gs
push
sbb
dec
mov
stos
loopne
cmpsb
sub
outsb
mov
movsb
ja
out
inc
shrb
loop
roll
xchg
jnp
pop
fdiv
or
jl
adc
sahf
adc
imul
orl
cltd
adc
pop
or
lret
ja
rcll
shlb
or
jecxz
jns
xor
cmp
fcoms
xor
negl
add
loopne
sbb
jmp
cmc
dec
mov
sub
mov
fucom
ljmp
mov
cli
hlt
sbb
movsb
lds
inc
xchg
push
adc
cmp
mov
repz
jp,pn
out
push
lods
lcall
dec
lret
addr16
push
lea
xchg
add
pushf
and
idivb
dec
jbe
popa
fnstenv
in
fmuls
xchg
fldl2t
inc
xlat
xor
inc
jbe
out
js
or
xlat
push
jle
stos
cwtl
pushf
les
adcl
xchg
movsl
cmp
and
inc
mov
inc
mov
fldcw
cltd
xchg
dec
adc
jnp
out
test
in
cld
cmpsb
fstpl
dec
mov
push
add
lea
inc
dec
outsl
adc
hlt
pop
inc
test
pop
fmul
push
lds
fisttps
xor
js
add
mov
xchg
sbbl
pop
xor
imul
jns
daa
cmp
decl
bound
lahf
dec
xor
sub
roll
sub
mov
push
mov
push
jo
pop
mov
add
pop
pop
pusha
sarb
outsl
sub
lcall
dec
xchg
fstl
mov
loopne
pop
lret
xor
add
fcmovnb
pop
insl
fcoms
or
pcmpeqb
in
std
bound
jb
addr16
iret
les
push
movsl
out
imul
gs
jmp
lret
repz
in
cmp
push
sarb
jmp
push
int3
sbb
mov
out
in
out
mov
das
sub
scas
push
test
fisubl
sub
shrb
leave
mov
imul
lret
cmp
orb
dec
mov
push
mov
mov
in
push
cmp
pop
ret
dec
es
xchg
mov
and
pushf
sbb
add
push
cmp
push
daa
pop
ficoms
ja
xor
jae
dec
sarl
divl
inc
mov
mov
clc
jp
lret
dec
mov
sub
icebp
or
jb
xchg
add
test
mov
sbb
stos
push
and
cmp
shr
jecxz
xchg
mov
repnz
clc
adc
mov
rcl
sbb
push
into
sbb
shlb
stos
mov
cmp
sub
pushf
repnz
mull
jne
push
cltd
dec
repnz
loopne
or
enter
xchg
stos
popf
xorl
fbld
mov
mov
and
cmp
addr16
loop
pop
in
push
es
xor
mov
mov
cmc
mov
sbb
ljmp
inc
mov
andl
or
sbb
in
adc
adcb
pushf
gs
cld
into
or
xchg
ffree
pop
sbb
pop
jl
fldcw
xchg
mov
push
mov
xor
xchg
or
test
push
mov
mov
push
ljmp
fsubrs
inc
je
mov
and
shr
stos
shl
push
and
jl
push
cmp
mov
sub
pop
insl
mov
dec
pop
pusha
mov
out
mov
iret
push
or
jmp
pop
mov
pop
repz
popa
sarl
sub
jns
mov
or
out
dec
out
out
jmp
xchg
xchg
pop
bnd
add
lahf
lods
rolb
aas
dec
iret
jbe
mov
cmp
movsb
hlt
xchg
outsl
xor
adc
xchg
mov
inc
push
movaps
std
xor
rol
ss
outsb
xchg
jl
test
mov
test
lds
push
pushf
out
push
adc
mov
sbb
mov
adc
sub
subl
xchg
mov
sbb
mov
repnz
xor
dec
adc
add
fisubl
add
dec
fs
in
inc
imul
loop
iret
inc
test
add
xchg
shll
nop
xor
lahf
das
cmc
adc
mov
cmp
out
in
je
sub
sbb
mov
fs
add
imul
lods
add
repnz
jae
sbbb
in
fsubs
mov
outsb
sbb
sub
cmp
enter
adc
or
jno
pop
mov
lock
pop
popf
mov
push
pop
jno
fmull
jo
scas
mov
fsubrl
mov
lods
js
and
bound
dec
loop
movsl
jb
shrl
outsb
testl
jl
or
jns
pop
mov
rcrl
push
fistl
iret
mov
ret
push
ds
fnstenv
sahf
xorb
fwait
add
enter
jae
or
test
ret
ret
mov
push
pop
push
xchg
and
shr
js
in
jb
dec
mov
xor
mov
cmp
xchg
rcll
ljmp
jmp
pop
es
xchg
fxch
outsb
sar
mov
xchg
out
push
fsubr
int3
ds
or
mov
fisubl
scas
sub
je
repz
push
jge
sbb
dec
mov
int
imul
mov
xchg
rcl
cld
cli
mov
inc
jl
and
or
lods
out
or
mov
faddp
jo
add
adc
arpl
push
pop
mov
addr16
push
mov
test
pop
add
outsb
jno
outsl
and
leave
and
movl
lahf
add
pop
popa
or
leave
dec
ret
push
pusha
nop
jne
push
shll
dec
xor
rcrl
inc
mov
imul
push
fcmovnu
adc
sbb
sbb
movsb
out
pop
sub
std
nop
mov
fimuls
mov
inc
sahf
mov
xor
rolb
push
or
cvtps2pi
jb
fistps
gs
xor
aad
ds
mov
test
dec
xorl
pop
jne
jae
jae
aaa
xchg
lds
rcr
mov
pusha
sub
dec
mov
xchg
cmpsb
subl
notb
sub
inc
sub
es
lea
and
pop
cmpsb
pushf
sbb
inc
mov
and
ret
dec
nop
mov
jns
push
xchg
cmp
mov
testb
fildl
ret
int
test
mov
cs
fxch
push
mov
in
cmpsl
loop
push
push
addr16
adc
jp
add
xchg
jo
out
or
jno
jb
sub
jle
mov
rorb
sbb
les
push
push
repz
and
sub
mov
call
mov
out
in
cmpsl
lret
imul
pop
ds
inc
rorl
sub
jp
jge
mov
add
lock
push
xchg
xlat
imul
pop
ftst
jno
sti
inc
gs
mov
cltd
fmul
and
push
lock
cltd
scas
aas
dec
pop
ds
popf
or
adc
xchg
jmp
or
add
jle
cli
into
pop
repz
cmp
sub
mov
mov
push
imul
andb
add
adc
orl
push
cmp
fwait
jno
pop
cmc
dec
mov
and
push
add
jo
in
aam
add
sti
mov
push
pop
test
loop
inc
cmp
dec
sub
fdivl
int
cmpsb
sbb
xor
int
int
mov
push
outsb
sbb
inc
mov
out
aas
sti
fbstp
popf
inc
int
push
lcall
mov
mov
jg
xchg
sbb
jle
daa
and
add
scas
ret
shlb
mov
sub
sbb
lods
scas
xchg
out
pop
push
scas
insl
push
call
lahf
xor
test
xor
sbb
mov
std
and
popf
or
push
jae
out
test
imul
aaa
or
aad
push
imul
lock
jmp
sub
je
inc
cli
mov
mov
adc
sarb
xchg
test
cmp
push
jg
out
imul
roll
ss
scas
push
adc
insl
rclb
sbb
lahf
or
in
xor
rclb
lahf
or
push
push
sbb
in
push
mov
inc
pop
push
icebp
leave
inc
or
insb
push
push
dec
fs
and
outsb
mov
insl
mov
pop
cwtl
cmp
mov
imul
or
aad
xorl
in
mov
xchg
jnp
xchg
lcall
cmp
loop
xor
push
cwtl
movsl
or
subl
pop
pop
cmp
fs
mov
adc
push
add
dec
sbb
or
adc
add
xor
jno
jb
fstpt
call
sbb
jg
dec
mov
cwtl
inc
test
push
std
mov
push
push
dec
mov
pop
fldenv
jno
lds
mov
add
movsb
adc
jle
lods
xchg
pop
cmpsb
in
fisttpl
ss
dec
jo
push
xchg
lds
pop
fs
mov
sarl
out
imul
and
pop
in
dec
push
shlb
dec
aas
rolb
jg
popa
outsb
mov
add
pop
mov
xchg
fstps
and
lock
ljmp
out
pop
fldt
ljmp
stos
outsl
sub
push
std
or
ja
lds
fwait
pop
aam
mov
aas
mov
pop
dec
outsb
mov
cmpsb
push
mov
frstor
sarb
mov
mov
cmp
push
add
mov
mov
adc
add
loopne
repz
inc
daa
mov
adc
inc
cld
daa
or
inc
test
loope
int
lods
enter
aaa
fwait
mov
xchg
mov
push
mov
xor
push
inc
dec
jle
adc
jbe
fstpl
arpl
fimuls
cmp
pop
xor
dec
into
inc
jae
pop
xor
cmc
push
lretw
jecxz
dec
add
pop
add
cmp
add
pop
sub
adc
out
cmpl
cs
pop
shrb
and
mov
dec
lret
dec
mov
jecxz
jo
mov
xorb
dec
jge
xor
sub
push
jnp
add
cltd
add
dec
add
jmp
xor
lock
push
add
roll
mov
jmp
orb
pop
loopne
out
jnp
and
in
loopne
add
pusha
ljmp
inc
push
dec
aam
sbb
adc
xor
inc
clc
rcll
stc
cmp
ret
jecxz
ljmp
cli
jbe
adc
roll
movsl
or
fistl
pushw
cs
or
adcb
pop
pusha
lock
ss
pushf
add
shrd
or
dec
sub
ret
sub
outsl
aam
pop
mov
sti
shll
jp
loopnew
dec
push
fidivs
cmp
mov
inc
xchg
imul
mov
inc
and
jmp
iret
xor
les
push
test
shlb
cltd
loopne
sahf
aaa
pop
jle
fisttpll
xor
bound
and
psubsw
sbb
add
sti
cltd
mov
sbb
ds
push
xor
cmp
sub
popf
hlt
cli
jp
mov
ja
pop
lods
push
sbb
dec
movsb
mov
jg
js
fwait
sbb
push
or
fists
push
cltd
xor
cmp
push
adc
mov
push
add
xchg
imul
mov
int3
lidtl
and
je
push
test
js
and
sub
mov
loope
and
roll
or
dec
aaa
add
or
inc
push
pop
lahf
pushf
pop
pushf
subb
dec
adc
sarb
mov
add
ficoml
stos
mov
stos
xor
mov
fsubl
imulb
test
push
out
pop
or
sbb
and
lcall
aaa
jge
insl
rol
repz
mov
ljmp
xor
sbbl
jg
sbb
inc
and
sti
scas
aas
inc
into
fdivl
lods
jmp
pop
push
cmpsb
nop
rol
sub
rcr
adc
int
mov
push
inc
movsl
popf
cmp
lret
adc
dec
stc
xchg
popf
movsl
pop
das
adc
cld
mov
es
aad
ss
mov
mov
out
push
lods
mov
push
shrb
ret
xchg
dec
cli
inc
pop
repz
lods
out
dec
inc
fwait
lds
mov
repz
inc
pop
xchg
push
adc
inc
das
stc
repz
test
pushf
shr
ret
push
sbb
sub
popa
push
sahf
jp
xchg
adc
jno
jmp
sbb
daa
cmp
push
push
insb
xchg
loop
sar
aas
dec
insl
and
hlt
push
in
outsb
pop
in
dec
add
mov
pop
xchg
xchg
scas
inc
shlb
mov
lods
sbb
pop
ja
pop
sbb
sarb
outsb
jae
push
into
mov
insb
es
dec
xor
mov
lret
or
or
jne
fwait
mov
call
jns
cli
cmc
stc
pusha
rcl
cli
jp
outsl
je
add
xchg
and
mov
movsb
jae
nop
js
outsb
lock
shl
flds
mov
sbbb
jbe
xor
xor
je
loope
push
int
cwtl
ret
fs
xor
es
dec
cmp
std
jg
and
and
cwtl
sub
cmp
roll
cmp
and
cmp
and
ja
repnz
xchg
or
je
push
imul
into
push
call
sbbb
lret
subl
pushf
mov
add
xor
arpl
push
pop
xor
jmp
pushf
movsb
jns
gs
loop
inc
xor
loopne
xchg
data16
lret
fmul
pop
pop
loope
add
and
add
mov
xor
sbb
dec
add
lock
ret
adc
ds
and
das
sahf
sbb
nop
dec
leave
mov
ljmp
sub
xor
lods
xchg
mov
fstp
lcall
cmpsl
sub
push
testl
mov
mov
andl
jnp
lahf
add
cmp
add
ja
add
jns
fldt
sub
add
hlt
add
sbb
jbe
ficoml
js
cmpsl
jae
repz
sbb
xchg
add
mov
iret
push
mov
sub
dec
mov
xor
mov
cmpsb
pop
mov
cmp
pop
cmp
test
mov
lea
mov
jne
mov
jle
jae
imul
rclb
mov
push
sub
sub
push
push
xor
gs
aaa
inc
lea
popf
dec
pusha
cltd
insl
jne
add
repz
outsb
aas
dec
push
jne
xor
shrl
pop
aaa
pop
aam
in
icebp
mov
sub
lods
inc
pop
dec
sub
fisubl
cmp
dec
in
mov
clc
inc
insb
pop
inc
add
mov
test
sbb
subb
xchg
mov
cmp
add
jb
pop
xlat
jbe
xor
add
mov
fisubs
push
cmp
xchg
sub
dec
rcll
cmp
test
mov
xor
dec
sbb
adc
lret
sbb
outsl
and
sti
fwait
lods
mov
xchg
scas
cmpsl
dec
push
and
rcl
push
jne
xchg
jmp
pop
in
das
xchg
loopne
lret
je
loope
out
leave
out
loope
test
inc
clc
daa
mov
or
test
push
pop
jb
sub
jno
lods
inc
jp
jmp
mov
inc
hlt
sub
mov
imul
fwait
xchg
add
xlat
adc
enter
xor
sbb
and
outsb
je
xor
out
popf
rcrl
and
mov
jno
call
mov
mov
test
push
dec
dec
and
pop
es
cld
sub
sbb
fcmovnu
pop
add
xchg
push
lcall
push
addr16
push
mov
loopne
in
xor
enter
icebp
inc
cmp
xor
mov
xchg
stc
mov
js
or
jno
xchg
xchg
je
mov
jnp
adc
xor
push
incl
gs
jns
sar
je
popa
lods
inc
pop
adc
iret
jge
dec
iret
sbb
or
push
inc
loopne
dec
lock
and
sbb
adc
std
cmp
push
push
fidivl
cld
xor
mov
lea
inc
and
mov
fisttps
jae,pn
fidivrs
mov
icebp
shr
dec
mov
jp
sub
adc
ljmp
pop
pop
jle
les
enter
test
lahf
xchg
in
dec
rolb
enter
push
xor
mov
test
dec
or
call
jns
popa
mov
push
popf
mov
call
ds
xor
inc
add
comiss
xchg
ds
xchg
dec
data16
sub
sbb
push
jle
mov
xor
sbb
in
cmp
dec
mov
hlt
cld
fdivs
push
push
push
push
fwait
mov
cmp
imul
xchg
mov
jmp
std
roll
cltd
divl
adc
out
movl
arpl
inc
sahf
mov
sbb
shll
dec
adc
mov
mov
sbb
xor
aad
fidivs
iret
clc
jl
and
dec
lock
or
add
mov
enter
or
dec
in
sti
adc
sub
fadds
mov
sbb
adc
fsub
sub
insl
inc
mov
jge
xchg
rorb
mov
pop
scas
mov
mov
dec
push
mov
push
and
and
sbb
mov
xor
lods
into
inc
sahf
enter
jp
out
mov
in
jmp
bound
test
loop
gs
xor
ljmp
cmp
mov
sub
sub
mov
adc
mov
sub
imul
call
stc
clc
mov
fcomp
js
cmpsb
ljmp
xor
and
movnti
mov
mov
push
lock
mov
int
add
inc
pop
les
mov
push
and
xor
fnstcw
fcmove
movsb
ja
xor
push
inc
pop
dec
fsubrl
in
inc
sub
mov
pop
add
mov
mov
inc
insb
aaa
lcall
jo
sub
sub
xor
jo
pop
cwtl
xchg
addb
rclb
ret
mov
mov
sub
jg
adc
xchg
dec
inc
das
out
ficoml
jg
jle
push
sbb
adc
and
adc
out
adc
mov
int3
lcall
sar
mov
insl
loope
cli
jecxz
iret
dec
adc
das
int
cmp
popa
xor
fldcw
adc
stos
cmpsl
out
fs
dec
add
push
sbb
or
outsl
dec
inc
xchg
out
repz
out
add
aaa
div
fwait
test
sbb
scas
push
adcb
or
mov
call
inc
add
dec
push
jp
insb
fiadds
lea
pusha
dec
xchg
mov
mov
jne
inc
out
or
sbb
sub
rclb
movsl
mov
jge
sti
xchg
aad
mov
ret
mov
or
mov
push
and
lret
daa
lods
ja
or
xchg
jp
jl
call
in
mov
enter
enter
mov
nop
movaps
add
movsb
int
scas
nop
leave
and
fcomi
xor
mov
dec
push
or
into
sub
adc
leave
jbe
gs
dec
jno
sahf
push
fidivs
mov
mov
in
jle
push
fsubrs
shll
call
and
mov
lret
cmp
pop
and
ffree
cmp
and
faddl
pop
dec
jg
int
jo
les
and
cmpsl
xchg
pop
push
mov
xchg
pop
xchg
int3
lods
ja
nop
cmp
cmp
shr
in
sbb
hlt
or
cmp
lds
xchg
sub
jle
cs
or
aam
cmp
data16
subps
sbb
fsub
push
push
inc
push
and
shrl
popf
inc
or
fidivrl
adc
cmp
jns
or
daa
mov
scas
incb
mov
mov
scas
jbe
in
xchg
insb
push
mov
in
jae
arpl
pusha
dec
sub
or
push
mov
rcrl
call
xlat
mov
pop
xchg
dec
flds
push
lds
aas
rclb
add
add
inc
and
cmp
dec
movb
mov
testl
mov
mov
mov
inc
push
cli
mov
xorb
lods
jle
xchg
pop
mov
movsb
push
aam
pop
je
and
scas
jle
fwait
mov
jmp
enter
ret
pop
sub
inc
fcomps
pop
cmp
out
push
xchg
aas
aad
out
stc
pop
icebp
add
leave
out
xor
mov
mov
adc
aad
pop
es
dec
mov
aad
add
mov
cmc
shll
fistpll
popa
icebp
inc
jl
cld
std
dec
sbb
mov
push
dec
push
inc
lea
aaa
andl
mov
sbb
and
and
add
repz
dec
addl
xorb
xchg
out
mov
xchg
mov
in
cmpsb
xchg
hlt
push
cmp
movsb
and
sarl
dec
rcrb
jne
lret
or
jbe
sahf
repz
cmp
mov
into
outsb
push
enter
out
jge
sub
mov
xchg
mov
loop
push
pop
and
in
popa
push
popf
int
adc
push
jle
int
mov
sbb
lods
jns
or
call
sbb
pop
enter
lcall
and
mov
fists
xchg
push
cmp
xchg
in
push
dec
adc
mov
das
pop
addr16
jmp
int3
jmp
inc
lock
fidivrl
push
lahf
mov
sbbl
les
cs
lds
xor
movsl
neg
cmc
xor
out
xor
push
subb
mulb
movsb
sub
xor
aaa
js
nop
push
inc
add
cld
jge
in
ja
push
inc
inc
lds
dec
sti
xor
cwtl
icebp
sub
std
call
loopne
push
out
mov
enter
test
bound
mov
adc
ljmp
add
add
lcall
insb
sbb
mov
lret
cmp
mov
std
mov
mov
movl
add
lcall
add
xchg
cmp
push
clc
mov
mov
xchg
adc
jp
decb
dec
dec
out
dec
and
or
adc
loopne
mov
pop
sbb
lea
xor
imul
sbb
add
mov
rcrl
cmp
cmc
cmp
jnp
fcoms
mov
ljmp
lea
mov
jbe
mov
xor
jp
ss
sti
ret
out
mov
repz
test
xchg
xchg
in
lcall
or
fstpl
std
cmc
sub
aam
out
mov
push
mov
pop
pop
cmpps
pop
and
push
loop
or
fsubrl
cld
pop
dec
dec
addr16
adc
mov
jge
stc
loop
push
push
std
sub
and
adcl
stc
mov
cmpsb
or
xchg
xchg
and
enter
pop
lea
push
jns
and
mov
sub
inc
push
cmpsb
cmp
adc
pusha
mov
out
inc
int
lock
push
or
push
sub
mov
stos
dec
push
jo
cmp
das
pop
dec
sahf
sahf
out
cli
shrl
in
push
jge
arpl
inc
xchg
dec
enter
inc
ficompl
sub
mov
inc
sub
xor
popa
test
add
jo
lahf
jnp
es
mov
xchg
or
cmpsl
ret
xor
int
popa
pop
inc
jmp
jns
pop
or
fcomps
je
mov
lret
mov
mov
lock
pop
sti
jl
data16
test
testl
mov
loopne
ljmp
inc
and
call
xor
stos
repnz
pop
push
lods
std
ret
push
sub
pop
pop
test
loope
or
xor
out
push
jge
xchg
pop
aad
shrl
aam
xor
jmp
ljmp
dec
inc
jle
mov
iret
out
lock
mov
int
mov
adc
inc
dec
hlt
inc
lcall
jecxz
xchg
cs
add
push
sahf
pushf
stos
mov
in
fisubs
mov
dec
mov
sti
shll
cmp
sub
aas
or
std
jg
jg,pn
mov
jle
hlt
mov
sbb
insl
push
add
xlat
jecxz
fldcw
and
gs
xchg
adc
mov
aad
adc
pop
jo
jae
fisubl
dec
mov
ficoms
leave
aad
cli
test
xor
and
in
out
fs
xchg
pushf
out
cwtl
in
mov
fs
roll
js
or
lods
cmpb
or
push
inc
push
dec
icebp
pop
cwtl
insl
sahf
add
xchg
push
sahf
ds
shll
adc
addr16
inc
sahf
hlt
pop
test
movsb
jo
pop
pop
aad
cmpsb
dec
jo
lret
in
ja
mov
jecxz
lahf
les
in
jle
mov
out
xchg
sub
pop
jecxz
and
xor
push
push
pop
rcll
xchg
push
and
push
call
jae
xchg
adc
or
inc
shlb
inc
fdivr
or
std
dec
decb
arpl
incb
shlb
or
mov
add
ja
mov
repz
adc
adcb
pop
xchg
push
imul
repz
push
adc
jns
adc
push
fiadds
lcall
loop
mov
jle
and
les
out
in
adc
dec
aad
lds
sub
int
cli
dec
das
lret
add
orl
ljmp
mov
jecxz
test
pop
nop
or
fdivs
repnz
int
mov
nop
fisubrl
and
inc
and
mov
dec
jle
jne
push
xchg
mov
fstl
in
ud2
inc
in
push
sub
push
dec
rclb
jo
out
jg
fadd
int
push
push
dec
push
shr
fcomi
in
aam
js
xor
xor
and
cs
out
call
jge
out
leave
fmull
xchg
mov
mov
jg
push
add
jge
sbb
std
nop
and
lock
lcall
and
arpl
jge
add
sub
mov
mov
sbb
mov
mov
stc
mov
mov
call
cld
mov
pop
fisubs
jmp
sbb
test
out
mov
mov
pop
or
pop
iret
lods
xor
add
rcll
mov
sti
xor
pop
pop
inc
pop
aaa
test
test
or
leave
scas
mov
outsl
ficoms
movsb
sub
test
iret
sub
xor
neg
dec
mov
dec
jl
cwtl
cwtl
sbb
cltd
nop
fildl
stos
xchg
in
mov
push
add
push
sub
addb
inc
out
mov
std
xchg
push
out
xchg
fisubrl
pop
adc
jo
push
jb
out
popa
dec
cmp
sbb
stos
jge
add
xchg
xlat
xor
pop
pop
in
negl
sar
pop
sahf
call
lcall
in
sbb
xlat
cmp
into
loope
mov
and
xchg
sbb
pop
adc
add
cmc
or
mov
dec
push
and
subb
cltd
mov
push
cwtl
fists
add
mull
jle
in
dec
add
jns
jg
mov
and
fsubl
fstl
clc
stos
int3
jmp
xlat
aas
vxorps
lds
xor
xchg
mov
nop
mov
cmp
mov
data16
cltd
out
jg
mov
popa
xor
add
popl
popa
mov
clc
push
mov
mov
movsl
push
lods
push
test
inc
out
sub
dec
ror
inc
mov
cmp
inc
jl
mov
sbb
cmpsl
in
repnz
sbb
popf
jle
or
jp
mov
imul
rclb
mov
mov
cli
xchg
arpl
std
sub
mov
xor
sbb
test
mov
lret
out
mov
mov
mov
std
xor
mov
add
rol
popf
xor
hlt
or
pop
test
xor
ja
enter
pushf
or
xchg
inc
and
push
insb
pop
push
js
cmp
jle
mov
jnp
icebp
fimull
jmp
pop
sub
cmp
ds
or
xchg
jl
aaa
lods
jp
push
adc
and
jecxz
jne
hlt
test
gs
push
cmc
les
xchg
inc
dec
pop
arpl
dec
std
sbb
mov
dec
mov
adc
rcrl
inc
pop
insl
adc
mov
mov
mov
out
flds
sti
sub
loope,pn
mov
mov
and
xchg
mov
lds
cmp
mov
mov
pop
pop
shll
stc
mov
jl
adc
jns
and
pop
pop
sti
in
pop
mov
aas
xchg
outsl
mov
push
sbb
mov
sbb
cmc
fwait
js
popf
lcall
sahf
inc
xorb
enter
leave
add
lds
bnd
and
test
js
mov
mov
test
pop
aaa
xchg
cmp
popa
leave
or
jg
into
push
mov
xor
mov
mov
ret
xchg
jno
mov
push
sub
fwait
imul
push
mov
sub
test
jae
and
pop
jmp
std
sarb
sahf
inc
dec
jns
fisttps
ja
mov
sbb
insb
push
inc
mov
fisubrl
or
pop
mov
pop
fisttps
cmp
ret
mov
inc
pop
mov
or
loopne
inc
inc
sub
mov
inc
mov
leave
insl
xchg
xchg
loop
mov
notb
ret
in
or
sub
in
jne
les
dec
push
rorb
cmp
mov
lds
ficomps
cmp
iret
out
fcompl
jns
sbb
movsb
add
loopne
ret
pop
lea
xlat
rolb
sbb
mov
inc
inc
xor
xchg
loope
cld
insb
notl
dec
icebp
pop
push
pushf
or
test
stc
sahf
popf
xchg
jmp
mov
mov
in
jnp
dec
mov
sub
mov
xor
ds
sub
push
adc
mov
adc
sbb
popf
das
and
push
inc
je
inc
add
std
sub
inc
test
jle
and
fistl
mov
rcrb
divb
pop
fs
fcoml
xor
dec
decb
jae
hlt
pop
dec
hlt
nop
hlt
fistps
les
int
rorl
insb
int3
mov
das
adc
ror
sub
addr16
jg
add
add
and
xchg
lret
mov
pop
lea
or
ret
sti
adc
or
push
xlat
sbb
mov
adc
fistl
ss
push
dec
pop
xlat
std
shrl
movsl
inc
jb
test
xor
mov
cmp
mov
dec
jmp
xchg
shll
sub
stos
clc
adcl
pop
clc
cmpsb
int
cmp
push
cmc
adc
repz
and
inc
int
and
jne
outsl
dec
and
das
push
pop
sub
xchg
xor
insb
fisubl
jmp
pop
inc
insb
mov
jae
mov
xor
or
lret
add
push
dec
xchg
fisubl
jp
out
int3
sbb
xor
lahf
in
fdivs
loope
or
push
ficoms
mov
add
cmc
cmp
cltd
sub
dec
mov
movsb
inc
dec
pushf
aas
jmp
sahf
mulb
mov
enter
add
addb
cmp
in
fnsave
pop
xor
andb
mov
outsb
sub
rcll
add
movl
mov
inc
in
or
mov
cmp
repnz
xor
pop
push
clc
adc
jae
or
pop
mov
movsl
scas
enter
cmpl
mov
ret
cld
and
dec
fistpll
ds
divb
out
sbb
push
or
adc
shll
adc
stos
jge
push
leave
mov
adc
leave
jmp
sbb
inc
mov
fdivp
es
lcall
dec
push
inc
mov
add
das
js
inc
inc
add
enter
mov
xor
nop
mov
imull
adc
sub
cltd
dec
mov
int3
loop
sarl
in
pushf
stos
mov
jnp
xchg
push
jo
cwtl
iret
rcrb
mov
xor
xor
cwtl
in
aad
fisttps
sbb
add
orb
jae
push
jmp
sub
pop
adc
xchg
mov
mov
cwtl
jns
or
into
int
push
ret
xor
test
inc
das
cmp
lcall
fimuls
int3
or
cmp
jge
test
stc
jns
mov
mov
mov
xor
adc
in
mov
pop
divb
fisubrs
and
scas
in
loope
push
fs
pop
pushf
mov
and
in
repnz
cmp
ja
test
cmp
in
rcrl
lret
lock
popa
and
rclb
vandps
stos
imul
lcall
inc
adc
leave
xor
shll
out
cmpsl
inc
sub
icebp
xchg
cwtl
adc
js
add
and
xchg
xchg
bound
and
cmp
xchg
movsb
gs
or
std
jne
mov
mov
push
in
xchg
inc
mov
jns
dec
imul
mov
lret
and
sti
adc
pushw
pusha
and
inc
xchg
ret
adc
nop
shrl
mov
into
push
mov
sub
sahf
repnz
cmp
jno
stos
mov
notl
push
mov
cmp
addl
mov
pop
in
add
inc
mov
sbb
jb
jge
adcb
ja
adcl
ss
int
int
xor
mov
faddl
fisttps
arpl
cmp
cmpsl
in
clc
pop
mov
mov
xor
lret
test
jmp
pop
shrl
pop
call
or
pusha
loop
xor
push
xchg
or
scas
push
cmpsl
je
pusha
sub
inc
dec
aad
or
call
fwait
adc
cmp
jecxz,pn
pop
jmp
inc
aas
dec
xor
add
leave
fildll
push
cmp
lcall
mov
add
or
std
or
push
rorb
test
cwtl
call
cmp
cmp
jmp
fs
dec
xor
js
out
pop
jne
out
insb
fbld
lahf
cmp
dec
xchg
or
les
xchg
mov
stc
call
addr16
data16
xor
mov
cmpsb
mov
inc
out
mov
pop
sti
jecxz
sub
mov
jae
outsb
cmp
insl
insl
je
arpl
cmp
cmp
push
jge
mov
push
and
cmpl
mov
iret
out
pop
xchg
or
jecxz
stos
or
outsl
add
gs
cld
jnp
push
fimuls
push
mov
les
iret
add
xchg
mov
cltd
push
nop
clc
scas
ret
mov
adc
pop
mov
add
sbb
pop
cmp
xor
xchg
cmc
icebp
or
mov
push
cmc
xorb
dec
inc
jno
aaa
in
mov
out
pop
divl
out
addr16
fistpl
cmp
loope
hlt
cld
faddl
jmp
lcall
xor
mov
push
ljmp
insl
and
mov
sbb
cmp
call
cmp
jecxz
repz
or
jae
lahf
movsl
xlat
addr16
jns
in
mov
jbe
push
adc
sbb
and
imul
adc
fadd
sahf
fildl
pop
cmc
mov
or
and
cmp
insb
outsb
je
pop
outsb
push
daa
xor
ljmp
xchg
lea
cmp
push
cmp
inc
xor
add
stc
js
pop
std
sub
stos
push
dec
lcall
inc
mov
push
pop
pop
cmc
cmp
sbb
and
fimuls
cmp
inc
xor
inc
das
xchg
inc
sub
bound
push
lea
pop
and
insb
xchg
cmc
push
jno
xorb
rcll
xchg
es
mov
or
sub
push
jnp,pn
int3
fdiv
out
adc
fisubs
and
inc
movl
cmp
repz
pushl
adc
dec
loopne
inc
mov
or
hlt
mov
cmp
push
pop
ds
mov
addr16
fdiv
filds
push
cmpsb
or
pop
bound
cwtl
insl
adc
or
inc
ja
es
scas
or
lea
fwait
cs
jecxz
pop
add
cmc
scas
repz
dec
lcall
jp
ficoms
shl
or
sub
push
push
inc
lods
es
mov
outsb
sub
inc
cmpsb
icebp
into
fucomip
lock
stc
les
scas
insb
jno
push
cli
pop
shlb
mov
enter
je
aam
das
lcall
mov
pop
inc
dec
cld
and
scas
cmp
out
jns
push
jb
in
cli
push
and
pusha
inc
mov
into
mov
cmp
movsb
idiv
mov
and
filds
arpl
lods
int3
popf
out
mov
ja
sbb
dec
sub
sub
dec
iret
hlt
sbb
add
inc
cmp
pop
push
or
mov
lea
test
push
loopne
xlat
neg
cmc
adc
mov
xchg
adc
cmp
lahf
pop
cltd
movsb
xchg
or
sahf
pop
mov
push
dec
ret
push
fstps
dec
mov
sbb
test
pusha
clc
gs
or
cltd
sbb
negb
add
mulb
cwtl
jmp
sub
mov
into
fldl
bound
add
sbb
in
mov
mov
mov
dec
xor
jbe
ss
inc
loopne
mov
stc
mov
mov
in
mov
js
leave
lock
in
js
xchg
call
or
mov
cld
pop
or
xchg
sarb
mov
aas
orb
cli
scas
jle
lret
aas
cmc
gs
xchg
dec
xor
and
aam
fisttpll
fwait
hlt
add
cwtl
mov
mov
out
testl
adc
xchg
scas
mov
add
inc
jle
out
pop
shrl
fisttpll
aaa
mov
leave
loope
repz
and
scas
lret
stc
mov
xchg
pop
orl
mull
and
pop
sbb
sbbb
mov
call
mov
mov
inc
xchg
push
pop
push
jle
lds
mov
ja
andl
push
mov
xor
xor
mov
movsb
call
shlb
mov
sahf
movsl
loop
push
scas
andb
out
imul
leave
std
lcall
mov
lahf
lret
inc
dec
xor
call
and
hlt
or
mov
aas
add
movsb
sbb
das
push
and
out
andb
jo
or
jmp
lcall
aas
cltd
imul
sbb
sub
mulb
push
test
push
lahf
adc
sarl
mov
fsub
call
add
mov
or
lock
lods
jne
cmp
cli
pop
push
ljmp
adc
mov
inc
or
sub
xchg
add
sub
adc
in
out
pop
sub
adc
and
cvtpi2ps
cltd
add
sbb
shrl
jl
sahf
or
lret
dec
adc
pop
in
sbb
push
adc
inc
adc
inc
andl
stos
mov
cmc
dec
imul
push
and
arpl
push
hlt
mov
push
or
fstl
lds
cmpsb
pop
push
pop
sub
inc
out
mov
xor
mov
mov
push
hlt
mov
pop
pop
scas
sti
push
jge
fcmovnu
icebp
jmp
fnstenv
pushf
cwtl
popa
mov
mov
fcoms
fcoml
xlat
mov
scas
dec
mov
mov
push
lret
xchg
xor
cmp
xor
lds
mov
aam
in
jne
mov
aaa
decl
inc
xchg
xchg
mov
ffreep
sbb
dec
bnd
mov
ds
push
or
cmpsl
fiaddl
mov
add
xchg
xchg
sub
aas
cmp
flds
ljmp
nop
pop
push
push
sarl
adc
push
lcall
clc
and
dec
sub
aas
jmp
inc
mov
cmp
in
or
sub
popl
xchg
xor
xorl
push
stos
or
jnp
fwait
int3
pop
sub
xchg
insl
sub
push
shll
fisttpl
push
pop
dec
xchg
xor
aam
lock
jbe
fistps
in
es
xchg
and
iret
test
dec
stc
or
lods
dec
inc
jae
test
xchg
into
add
pop
fcmovb
dec
mov
or
push
pushf
loopne
out
setae
xor
dec
idivb
sbb
lods
icebp
mov
je
mov
push
inc
jns
insb
mov
pop
adc
or
mov
aaa
mov
movsb
cs
jne
mov
icebp
lea
in
push
cld
sahf
adc
insb
aaa
and
adc
inc
or
xchg
cmp
jo
fnstsw
cmp
jmp
add
movsl
rcrl
mov
fnstenv
xchg
mov
and
repz
cs
cmp
mov
ret
dec
shlb
pop
or
rol
or
mov
repz
mov
sub
mov
pop
push
jno
cmp
js
push
adc
sub
fmull
and
repz
xor
pop
scas
nop
push
roll
inc
adc
repnz
cmp
cmpsb
inc
xchg
xchg
inc
cmp
dec
dec
or
stos
sahf
or
jae
int3
mov
jle
mov
mov
push
aaa
pusha
cli
jle
loopne
pop
imul
fwait
sub
psraw
mov
fldcw
aad
push
jmp
decl
das
adc
lret
or
into
stc
cmp
mov
scas
xorl
xchg
jns
into
jae
mov
shrl
jp
sub
rcrl
pop
push
les
std
stos
pop
push
xchg
in
mov
jne
js
mov
sti
dec
cmp
lret
cli
sub
les
dec
sub
or
sbb
andl
lods
or
cmc
mov
add
lods
in
ds
sarb
jbe
jg
or
int3
adc
jne
push
shlb
mov
sbb
imul
das
and
lock
fists
add
jge
int
pop
data16
jns
and
xchg
adc
push
sbb
mov
sahf
jo
movsb
inc
cli
daa
push
mov
jle
jg
and
push
test
ror
fcmovnb
mov
inc
jl,pn
pop
lret
in
jle
xchg
add
dec
ret
or
push
fildll
les
xchg
sub
popa
mov
outsl
mov
test
and
out
cmpsb
mov
in
inc
mov
add
push
les
gs
push
fdivs
ret
imul
repz
mov
out
jo
dec
xchg
mov
cmp
xlat
bound
je
and
mov
xlat
neg
cmp
jnp
lea
call
push
fimull
inc
fwait
sub
dec
cmp
pop
pop
int
fildl
cmp
into
stos
lds
adc
add
pop
rcrl
repz
cs
loop
mov
inc
mov
push
scas
test
jb
mov
imull
jae
rolb
lahf
cli
movsb
xor
mov
xchg
insb
add
lea
cmp
xchg
mov
or
sarl
add
pushf
cmpsl
imulb
les
test
cmp
push
cmc
pop
inc
jmp
push
push
xlat
cwtl
lret
mov
add
rolb
xor
lods
lea
mov
int
pop
iret
inc
je
loopne
mov
push
je
movsl
pop
dec
ja
push
adc
push
push
push
movsb
das
xchg
adc
scas
stos
push
xor
dec
repz
jns
dec
sbb
pop
faddp
lret
and
pop
shll
xchg
clc
pushl
jge
inc
xor
lcall
sahf
sub
jl
mov
insl
jmp
adc
out
jb
push
in
arpl
pop
dec
insl
mov
loop
push
hlt
mov
aam
inc
stos
or
push
fsubrs
mov
pop
or
lods
cmp
loop
repnz
scas
mov
mov
rclb
mov
and
mov
mov
rcll
mov
xor
cmc
mov
dec
test
iret
imul
fisubrs
jl
test
call
call
pop
outsl
addb
aam
add
in
pop
and
test
out
push
in
aas
sbb
hlt
in
mov
rep
mov
or
pop
iret
jns
repz
cmp
mov
shll
sub
jmp
fiadds
lret
in
movsb
adc
mov
nop
xor
loop
not
fcmovnu
cld
sub
jecxz
std
mov
movzwl
dec
fs
fdivs
mov
sti
imul
movsl
repnz
repz
pop
mov
push
xor
inc
fs
mov
rcrb
clc
ljmp
add
jne
xchg
shll
adc
jb
nop
or
push
mov
push
push
ret
jno
xchg
mov
aas
mov
addr16
cli
xor
aam
inc
out
jmp
or
pop
cmpsb
mov
jl
push
jmp
jp
shlb
test
jmp
inc
add
pop
popa
scas
add
sub
cld
and
or
loopne
push
inc
outsb
imul
imul
xchg
cmp
test
pop
mov
or
jne
into
sarb
clc
imul
lcall
mov
push
pop
jnp
imul
cmp
inc
sbb
pop
sub
in
outsl
inc
pop
aad
dec
adc
xorl
add
test
adc
cmp
sub
mov
lret
bound
jb
add
mov
xor
stos
mov
xchg
pop
popf
pop
outsl
adc
inc
xchg
lahf
lret
aad
leave
fninit
aas
cmp
popa
fldl
mov
fisubrl
clc
dec
add
sub
mov
cli
mov
mov
popa
cmp
cmp
sbb
pushl
rcrl
inc
cmpsl
rolb
mull
jg
ja
stos
loop
cmpsb
shll
mov
mov
out
push
xor
fstl
in
cltd
add
sbb
lods
jg
cvtpi2ps
imul
aas
mov
enter
sbb
adc
jg
jae
dec
js
dec
pop
inc
cmpb
fstl
adc
and
rolb
rcl
sbbl
add
cmp
int
imulb
jmp
mov
xchg
mov
sbb
jmp
dec
fwait
pop
stos
pushf
lods
pop
pop
cmpb
inc
sti
and
adc
ret
cmpsl
xor
movsb
cli
rcrl
out
mov
movsb
lcall
clc
xor
lahf
std
pop
jp
inc
push
sub
jecxz
mov
rorl
mov
xchg
xor
mov
pusha
ret
cmc
mov
ds
jae
enter
outsb
test
pop
lods
dec
pusha
mov
push
cmp
push
shl
notb
imul
mov
and
addr16
pop
pusha
cmp
loopne
pop
adc
push
adc
or
push
int3
popf
ret
insl
push
mov
mov
into
lret
jmp
add
rolb
pop
js
sub
fnsave
mov
mov
movsl
sbb
push
sub
out
dec
arpl
fdivr
xor
fstpt
dec
aas
xchg
out
in
mov
adc
mov
dec
mov
push
sbbl
ret
mov
int
in
out
divl
pushf
sbbl
mov
xor
fwait
repnz
sub
stos
loopne
sti
js
repz
sub
dec
outsl
fistl
pop
sub
ret
lcall
inc
and
out
movsl
xlat
cltd
fdivl
mov
pop
outsb
iret
jmp
pop
test
movsb
sub
arpl
mov
faddl
mov
push
rolb
xchg
mov
mov
mov
xor
incl
pop
jle
inc
rorl
cmpsl
test
pop
mov
push
jmp
sub
rorb
sub
fldcw
je
inc
or
and
dec
in
adc
mov
in
mov
int3
xchg
filds
lret
xor
jge
inc
push
cmpsb
lods
mov
loop
mov
dec
xchg
loop
and
xchg
and
add
fcomps
lcall
jb
popf
ficomps
ret
push
pop
push
fisubs
jnp
mov
scas
xchg
jmp
fs
mov
inc
loopne
and
mov
mov
push
inc
jbe
adc
aam
fildll
stos
pop
cmp
pop
pop
or
jg
pop
push
jne
cmp
adc
imul
pushf
movsb
je
pop
stc
sti
or
inc
mov
adc
cmpsl
daa
out
das
mov
outsl
idivl
dec
add
xchg
sub
sbb
xchg
jne
mov
fdivl
sub
mov
out
mov
push
lret
test
and
fwait
adc
mov
shll
aam
inc
fadd
ja
sub
fucomi
cmpb
dec
testl
ss
test
push
or
jno
dec
jns
or
divb
sub
fldl
aaa
sbb
fimull
aad
xchg
xchg
out
in
cli
in
cmp
xchg
int
xlat
adc
lahf
jnp
in
dec
lcall
aas
enter
out
pop
ljmp
dec
outsl
and
cmc
enter
repz
inc
ret
add
dec
inc
bound
test
std
adc
sub
adc
sbb
jecxz
push
dec
xchg
dec
icebp
in
adc
mov
inc
jo
pop
sti
rcll
sub
mov
or
leave
scas
add
ret
cs
inc
push
push
push
outsl
push
xchg
jb
and
mov
mov
pop
xchg
sbb
mov
pop
xor
std
jo
ja
pop
jle
jo
popa
leave
iret
arpl
jno
cmp
add
test
fstpt
loopne
cli
push
bound
iret
loope
cmp
inc
out
cmp
sub
pusha
mov
test
sub
clc
xchg
jbe
lock
pusha
addb
test
mov
cmp
add
scas
shll
or
xor
mov
and
mov
xchg
into
jno
cwtl
push
imul
bound
mov
xlat
xchg
leave
ret
fsubs
and
shrl
mov
inc
cmp
sub
pop
pop
push
je
jne
leave
hlt
loope
sbb
sub
rorl
jge
in
sbb
push
arpl
push
leave
jg
lea
jb
aam
jae
xor
jo
pop
mov
sbb
or
add
mov
je
pop
pop
ret
ret
push
sub
ret
cmp
imul
inc
pop
int
idivb
lret
fdivrs
pop
lahf
ja
loop
in
pushf
in
mov
cld
je
push
lods
dec
gs
mov
icebp
roll
test
mov
insl
dec
iret
aam
pushf
adc
inc
or
push
xor
xchg
cli
iret
jae
sub
push
xlat
insl
sub
sub
arpl
jb
xchg
out
test
inc
mov
mov
and
pop
cmp
mov
and
sbb
pop
dec
jns
jns
push
cld
add
xchg
inc
imul
lret
mov
leave
test
xor
pop
dec
adc
in
daa
or
in
push
in
mov
in
dec
add
xchg
or
cwtl
ja
imul
jbe
out
mov
fwait
mov
xchg
jb
dec
mov
nop
adc
fdivrl
cmp
ljmp
pop
xchg
push
mov
test
and
sub
jo
popa
adc
pop
shll
loop
arpl
ret
pop
int
mov
fcoml
movsl
imul
cmp
xor
add
jecxz
dec
pushf
mov
push
inc
test
lcall
sahf
dec
mov
movsb
sbb
push
test
or
shll
lods
mov
or
fs
test
test
test
mov
sbb
test
mov
mov
ljmp
arpl
mov
add
jl
sbb
or
xchg
xor
ret
mov
pop
mov
and
dec
adc
out
push
jae
cli
loop
inc
push
mov
lods
push
sti
push
stos
les
ljmp
rclb
adcl
aas
xchg
inc
push
shl
movsb
push
sbbl
cmp
xor
push
negb
sub
mov
pop
les
cld
inc
stos
mov
cmp
push
int3
mov
push
insl
lret
in
push
dec
pop
shll
cbtw
out
mov
pusha
push
int
push
test
sbb
mov
mov
mov
fldl2t
addr16
jne
shll
pop
mov
aaa
adc
cld
es
mov
stc
out
inc
push
lahf
mov
push
mov
or
cmc
addr16
gs
sub
jns
lahf
push
aas
push
mov
cmp
add
xor
in
sbb
ret
xchg
jbe
jnp
jne
xor
dec
lret
icebp
sbb
inc
cmpsl
shrb
mov
jge
xchg
je
fs
test
lcall
jo
loopne
dec
dec
pop
xchg
xchg
pop
mov
and
jecxz
mov
adc
mov
cmp
mov
and
xchg
popa
xor
and
push
ss
xor
out
sub
mov
and
aam
das
pop
jle
cmp
mov
scas
arpl
jne
xchg
pop
faddl
inc
adc
pop
jb
sub
mov
mov
add
popf
inc
shll
aad
daa
ljmp
repz
jp
enter
sti
mov
xchg
sbb
xchg
sub
sti
xchg
aam
adc
lods
icebp
jle
call
cmp
cmc
adc
ss
add
addr16
das
shrl
ret
mov
adc
pop
out
or
hlt
stc
xlat
inc
inc
dec
rol
clc
loop
out
test
lahf
cltd
cmpsb
adc
inc
sbbl
je
sahf
repnz
aas
mov
push
pop
push
loopne
and
into
mov
mov
mov
shll
cs
pop
cltd
mov
push
call
inc
mov
shl
dec
dec
arpl
movsb
xor
std
cmp
fisubrl
scas
loopne
jnp
call
mov
jp
out
push
nop
and
aaa
push
shll
out
data16
inc
mov
xor
fs
lds
test
sarb
shll
fsubrp
aam
xor
enter
push
cwtl
mov
arpl
xchg
imul
mov
push
inc
jns
jo
xlat
insl
insl
jmp
fstpt
pop
cmovg
mov
mov
jae
push
fdivrl
mov
mov
adc
sbb
test
sub
jge
movsb
mov
xchg
mov
xchg
pop
and
or
pusha
lods
lock
fisttps
sbb
xor
movsb
int
icebp
test
inc
pusha
jp
or
add
sbb
hlt
fistpll
xlat
mov
xchg
inc
dec
inc
cmc
and
aad
push
shll
sbb
fwait
movsb
xchg
jl
or
repz
nop
xor
lock
push
dec
jecxz
popl
sub
clc
nop
lock
jb
movb
mov
imul
jo
push
ljmp
and
andl
cwtl
sti
xchg
jnp
stos
lea
lds
push
fwait
mov
gs
data16
adc
popa
mov
push
jle
mov
inc
inc
xchg
cwtl
sub
xor
add
sub
inc
pop
les
sbb
pop
mov
cwtl
pop
push
loopne
dec
sti
jo
add
adc
leave
and
inc
mov
xchg
insl
fld
ljmp
inc
and
push
mov
sahf
inc
cmp
outsl
mov
pop
outsb
inc
fstl
jae
adc
mov
push
push
adc
repz
loop
sub
shl
das
je
scas
gs
xchg
jp
mov
imul
loop
push
pusha
pop
xchg
xchg
mov
lds
push
sbb
shrl
add
sbb
cs
int
ja
imull
mov
mov
xor
aas
jb
mov
jle
or
and
sahf
gs
cmpl
and
sahf
stos
lea
push
das
and
adc
ret
mov
sbb
fmulp
jge
xor
sbb
jmp
ret
mov
arpl
xor
push
mov
xchg
lret
or
out
jp
lahf
inc
sub
movsl
scas
ds
js
push
xor
adc
inc
test
data16
dec
add
clc
adc
sub
cmp
rcr
sbb
push
and
sub
dec
cs
arpl
ja
daa
sub
sub
fs
xchg
loopne
gs
aad
jecxz
adc
sbb
and
jne
shlb
test
imulb
push
imul
dec
xchg
test
arpl
test
sub
aaa
ret
push
sbb
mov
outsl
mov
jmp
mov
pop
andl
sbb
aaa
sub
sub
into
lahf
jb
flds
dec
lods
ljmp
jne
cmp
arpl
pop
fstl
dec
dec
and
jo
clc
add
shrb
clc
ret
and
push
lock
rorl
cmp
pop
inc
aas
insb
cld
das
inc
out
jp
test
cli
cmp
cmp
mov
inc
pop
pop
adc
mov
push
mov
out
and
dec
jne
repnz
pop
dec
dec
insb
xchg
pop
lea
adc
lcall
push
xchg
jg
les
scas
mov
mov
jmp
shll
movsl
add
sbbb
push
rsqrtps
test
add
mov
lea
out
aad
inc
cmp
inc
inc
cld
lods
pop
sub
cld
adc
aas
jb
sub
sub
cmp
insb
jne
pop
push
add
sbb
fdivrl
fstps
sub
xchg
jb
xor
jo
or
aaa
ljmp
faddl
mov
outsb
ret
rorb
xor
fisttpll
fisttpl
push
mov
xor
cmp
scas
and
popa
dec
jnp
sarb
jl
in
add
popf
testb
rolb
jecxz
sbb
fcoms
jnp
and
out
and
pop
xor
icebp
sub
pop
in
mov
push
mov
pop
dec
pop
pop
lahf
mov
movsb
cmp
xchg
fcmovnbe
inc
xor
fdiv
pop
test
sarb
xchg
in
pop
aaa
push
push
arpl
mov
pop
ja
jmp
test
add
sub
gs
cmp
fldcw
fsubrs
lods
mov
add
mov
sub
xchg
rolb
sti
lock
push
shll
xchg
les
aad
xor
cli
inc
outsb
insl
sub
repnz
mov
push
popf
daa
push
sbb
pushf
and
ds
gs
mov
gs
hlt
loopne
lods
ror
and
fsubrl
rclb
scas
daa
pop
adc
push
pop
dec
mov
int
pop
loop
pop
cmp
inc
mov
jo
sub
aaa
push
xor
inc
pop
xchg
arpl
pop
xchg
out
add
cld
ljmp
mov
mov
or
inc
inc
mov
cmpsb
lds
rorb
arpl
xor
pop
cmpsl
inc
imul
rcrb
lcall
into
aaa
cmp
movsb
imul
and
rcll
pushf
insl
mov
dec
or
jne
pop
mov
cmc
sbb
adc
xchg
jle
push
cmp
test
js
jg
push
in
xor
push
or
fbstp
add
testb
cmp
aaa
imul
je
test
scas
xchg
xor
mov
add
cli
movsl
je
jo
mov
push
outsl
fwait
mov
pop
movsl
cltd
rorl
xchg
fadds
adcb
mov
nop
dec
aas
repz
cltd
aaa
push
out
sub
pop
jo
xchg
pushf
ss
test
jecxz
and
test
jno
adc
xchg
ret
or
mov
mov
ret
xor
jg
notw
mov
lods
ds
dec
jne
or
ss
addl
call
push
mov
dec
xchg
jo
rorb
adc
leave
call
pop
test
mov
in
js
pusha
mov
cwtl
call
and
pop
adc
pushf
jbe
jno
stc
sub
jb
and
bound
addr16
push
out
cmp
movsl
cmpsl
popf
arpl
lds
sub
mov
inc
xchg
sub
je
aaa
pop
xchg
enter
ss
sti
iret
lret
jecxz
mov
test
cmp
sub
jl
inc
lahf
cmc
lods
dec
cld
ret
fisubl
cmpsb
mov
pop
call
rclb
sbb
int3
mov
mov
movsl
in
js
cmc
fldcw
shll
mov
mulb
fsubp
push
push
push
into
das
fidivs
sarl
lods
pop
jo
pop
push
loopne
cmpsb
or
dec
lahf
cmc
fdivrp
mov
xor
cmp
loope
pop
sbb
lahf
ret
push
mov
push
loop
pop
enter
ret
and
jmp
ja
inc
rcrl
arpl
add
jecxz
push
dec
clc
add
mov
lahf
inc
dec
fs
push
mov
call
or
imul
sbb
xor
test
rcll
movsb
aad
data16
push
mov
lahf
aad
sbb
rolb
sub
frstor
xchg
lock
push
push
xchg
and
adc
into
sti
jb
popf
inc
mov
in
jecxz
clc
lods
jle
xor
mov
mov
sbb
pushf
xchg
push
jbe
lahf
cmp
fidivs
mov
jb
and
mov
mov
sbb
loope
mov
and
out
ficoml
aas
mov
jp
mov
ljmp
xchg
mov
je
mov
and
add
insb
jnp
jb
cli
aam
in
mov
hlt
scas
in
movups
bnd
out
jmp
jno
mov
aas
adc
add
hlt
insl
push
adc
aaa
pop
jmp
imul
push
scas
stos
mov
mov
ret
lods
test
or
jns
pop
in
mov
or
add
sub
scas
ret
dec
mov
or
or
test
sti
cmp
incl
sbb
cwtl
dec
cmp
xchg
and
cmova
fwait
lcall
cmc
dec
jns
int
jecxz
mov
hlt
push
cmc
jbe
xchg
mov
dec
cs
cmp
lahf
repnz
test
test
in
pop
sub
pop
mov
dec
loop
les
call
test
les
pop
aaa
pop
aam
dec
daa
dec
shll
pop
pop
lds
jecxz
and
outsb
lahf
add
mov
adc
adc
inc
mov
fisubrl
mov
lret
jne
jns
and
out
mov
loop
jle
test
lock
andl
cmpl
mov
jnp
stos
cli
sub
sbb
jb
cmp
lock
in
stc
jge
mov
mov
xor
nop
and
pop
and
jne
mov
movsl
icebp
adc
lds
sbbl
std
sub
cmp
xchg
cmc
shlb
and
fbld
ja
sbb
jmp
aas
xor
pop
pop
and
xchg
push
and
mov
push
gs
jle
jns
push
inc
ljmp
test
subb
scas
outsb
or
jno
add
xchg
push
jae
in
fs
or
push
and
sbb
in
test
outsb
movsb
mov
xchg
add
xchg
repnz
mov
cmp
je
pmuludq
loop
jp
imul
cmp
mov
sbb
aas
je
mov
mov
test
sub
ljmp
mov
sub
add
push
pand
enter
divl
push
xchg
test
mov
jge
rorl
dec
addr16
inc
push
dec
push
adc
push
lods
pop
scas
jno
sbb
insb
xor
dec
pop
lods
je
movb
mov
cmpsl
or
jnp
stos
bound
add
add
jl
or
std
cld
fnstcw
popa
insb
shrb
push
mov
sbb
adc
pop
push
nop
push
sahf
outsb
js
push
sub
movsl
jmp
pop
mov
lahf
push
loopne
mov
fstpt
adc
jge
jbe
inc
or
mov
je
gs
lret
cli
mov
lahf
jns
mov
call
cmpl
out
sarl
rorb
inc
push
daa
lock
push
in
lea
sbb
inc
ds
outsl
push
loop
ljmp
sti
mov
jle
add
inc
mov
fstpt
lods
jns
mov
xor
lcall
add
shlb
mov
mov
je
mov
pushf
std
sar
adc
mov
clc
dec
inc
push
push
movsl
sahf
popf
std
subl
add
dec
xchg
mov
scas
int3
popa
bound
out
notb
mov
adc
lea
movl
fimull
xchg
xchg
push
mov
push
add
jb
or
inc
jo
mov
jb
fdivs
cmp
mov
xchg
lods
cmp
jb
dec
mov
push
dec
pop
jns
mov
inc
xor
int3
stc
cmp
stos
rorb
fmuls
and
lods
sub
mov
push
dec
cld
sub
out
ror
out
lret
fidivrs
or
inc
out
stos
insl
jbe
or
mov
shlb
pop
cmc
adc
insl
icebp
push
gs
imulb
dec
test
mov
jno
sub
addr16
nop
mov
push
sti
popa
pop
ja
xlat
and
mov
jmp
call
andl
test
inc
dec
shrl
mov
out
inc
jae
enter
lahf
div
inc
loopne
jno
adc
jp
cmpsb
idivb
loope
jnp
add
fmuls
mov
pop
pop
add
int
inc
and
loopnew
pop
mov
les
and
aaa
subl
fstpl
mov
mov
les
sti
sahf
shll
push
insl
popa
xor
and
scas
cmp
paddd
leave
sub
jg
jecxz
ret
push
inc
mov
push
into
and
test
cmp
rcrb
imul
push
or
scas
enter
inc
cmp
iret
jb
xor
or
cmpsb
loopne
movsb
insl
sar
fstp
xor
add
and
or
cld
int3
nop
lcall
popa
jns
arpl
and
inc
hlt
mov
imul
clc
cwtl
jp
and
mov
cmp
or
pop
stc
outsl
inc
adc
sub
push
mov
mov
add
mov
jo
push
gs
and
cmp
xchg
inc
addr16
scas
fists
inc
scas
fmul
mov
xchg
fldcw
into
dec
aam
dec
mov
xor
push
sub
inc
pop
scas
inc
xchg
pop
mov
jg
mov
pop
and
daa
aaa
xor
add
mov
in
pop
pop
xorb
xchg
out
dec
imul
push
pop
imul
out
mov
movsb
jns
leave
push
sti
pop
and
pop
mov
or
int3
stc
push
cwtl
jnp
inc
jle
cmc
mov
add
sbb
mov
add
movsl
adc
inc
jns
or
add
add
sahf
mov
movsb
inc
inc
pop
pop
adc
adc
hlt
cmpb
js
loop
inc
aas
push
adcb
pusha
add
negl
ja
and
imul
mov
mov
fwait
lds
cmp
sub
pop
cs
movsl
push
dec
or
fistps
cwtl
in
jae
jnp
jno
test
push
jno
addr16
paddusb
jmp
mov
movsb
sahf
push
xlat
adc
fwait
dec
lcall
jp
adc
cmp
xchg
xchg
inc
inc
sbb
sub
push
fcmovne
xor
imul
xchg
pop
inc
sub
push
gs
cld
push
mov
out
pusha
sar
fstps
push
push
push
pop
pop
loop
rcr
scas
mov
pop
movsb
out
outsl
jns
jne
movsb
or
outsb
outsl
iret
mov
gs
stos
in
xor
mov
and
lret
jecxz
sub
ja
arpl
push
xlat
pop
das
and
lret
cmc
roll
aad
shll
lods
push
clc
push
mov
mov
popa
mov
xchg
pop
mov
inc
fnstcw
stos
dec
call
mov
xchg
xchg
pusha
dec
push
cltd
dec
outsl
jo
out
enter
push
sub
ss
adc
movsb
xchg
xchg
sahf
xchg
mov
shrl
ret
add
outsl
mov
addr16
jmp
mov
jne
arpl
filds
rcrb
push
adc
mov
jp
rcrl
jbe
fsubs
dec
pop
add
jg
mov
pop
push
out
rcll
lock
or
jbe
and
out
push
push
arpl
pop
test
xor
aaa
jmp
call
or
dec
les
add
inc
mov
fwait
mov
xor
fisubs
cmp
in
int3
sbbb
dec
int
fdivrs
mov
pop
cmp
inc
pop
lret
cmp
shll
hlt
mov
iret
xchg
cmp
aaa
aas
repnz
enter
fsubrs
mov
arpl
xchg
xchg
mov
rorl
ror
dec
scas
repnz
loop
jnp
mov
push
lahf
and
push
xchg
mov
lret
inc
aam
inc
push
xchg
mov
lret
mov
ret
mov
es
xchg
outsl
daa
sub
cmp
sub
push
dec
les
decl
out
cmp
and
lods
mov
pop
add
int
jno
mov
cltd
mov
mov
dec
push
outsl
insl
cmc
fstpl
fdivl
jecxz
addr16
mov
data16
stc
xchg
pop
movsb
jle
out
inc
dec
jbe
mov
inc
lods
bswap
push
stos
out
xchg
out
cmp
mov
jmp
adc
or
mov
jmp
lock
push
sti
jmp
aad
out
add
out
jl
jmp
cmp
sbb
sbb
fwait
lock
jnp
sbbl
jl
imul
dec
or
jecxz
outsl
nop
xor
sbb
inc
nop
pop
int
xchg
pushl
aad
fidivrl
stos
pop
into
gs
xchg
rcrl
ss
mov
sbb
sti
xor
sbb
cmpsl
xchg
xor
mov
dec
mov
pop
cmc
adc
mov
cld
mov
fisubrl
jno
xor
push
pop
popa
sbb
push
sarl
lods
mov
push
div
mov
jg
mulb
mov
xchg
dec
dec
mov
stos
jno
mov
imul
addl
popf
inc
sbb
scas
jle
push
outsb
push
fbstp
push
cltd
cwtl
ljmp
pop
ds
scas
in
inc
adc
adc
hlt
add
es
into
iret
mov
mov
fnstenv
dec
inc
push
fstpt
mov
mov
pop
jmp
clc
cmp
sub
dec
shrl
lds
scas
stc
imul
lock
hlt
cmpsl
xchg
cmp
push
cmp
xor
andb
sbb
push
push
scas
mov
leave
add
push
andb
cwtl
fnstenv
xchg
and
and
jle
std
test
shll
inc
add
fucomp
or
pop
mov
lods
in
dec
or
imul
stos
pop
and
jae
inc
jl
cmp
addr16
out
or
scas
arpl
push
stc
repnz
mov
arpl
cmp
and
cmpl
cmp
fstps
testb
sub
cmpsl
and
mov
xchg
mov
hlt
rolb
lds
insl
inc
lea
xchg
fucomi
jp
es
adc
leave
adc
sbbl
mov
pushf
add
cmpsb
sub
scas
rorl
hlt
xchg
in
mov
mov
jbe
mov
push
xchg
mul
mov
test
pushf
aaa
outsl
sub
iret
mov
mov
sub
pop
lahf
fimuls
adc
fstpl
jae
rcrl
push
ficoms
pusha
jg
insl
movsl
mov
pushf
pop
jmp
jg
sbb
xor
sub
cmp
inc
mov
cwtl
or
out
adc
xor
mov
fstp
xchg
dec
pop
xchg
stos
push
jl
outsl
nop
idivb
adcl
rcll
jae
sbb
jnp
loope
xor
outsb
call
mov
scas
mov
loop
fisubl
fidivrl
pop
mov
jns
jl
inc
cmpsb
sbb
add
inc
filds
lret
pop
cmp
xchg
push
popf
jmp
adc
jae
jbe
loopne
xor
addr16
and
fwait
xor
outsl
sbbl
sub
mov
pop
pop
mov
pop
pop
jns
ljmp
loope
cmp
add
xor
notb
mov
add
mov
stc
pop
das
sub
sarb
clc
xor
or
pop
xlat
sti
jo
xor
mov
push
mov
add
sub
adc
add
nop
xchg
sub
popl
call
jno
cltd
mov
out
leave
iret
push
xchg
and
xchg
icebp
mov
jb
inc
pop
and
mov
mov
lea
adc
mov
repz
cwtl
sub
bound
or
push
fcomps
sub
sub
mov
cs
mov
inc
adc
mov
enter
fs
inc
mov
clc
xchg
imul
inc
cmpsb
and
or
gs
movb
sbb
lcall
sub
icebp
repz
rcrb
call
leave
pusha
cmpsl
xchg
scas
push
je
push
aam
insl
in
outsb
ss
pop
mov
sub
adc
shlb
push
jmp
mov
xchg
pop
cwtl
push
lods
fsts
sahf
pop
adc
xchg
mov
into
adc
mov
test
out
sub
rclb
aam
push
sub
push
cmp
mov
pop
jbe
es
pop
sub
xchg
popa
cwtl
test
push
cmpsb
outsb
pushf
std
popa
in
push
inc
mov
fldcw
outsb
leave
popf
jne
out
pushf
aam
popf
fdivl
pop
xor
out
dec
mov
imul
shll
adc
sub
or
mov
je
lret
mov
imul
mov
sub
leave
mov
out
mov
push
daa
bound
and
pop
push
mov
ds
outsb
jle
int
aaa
and
sub
jmp
test
loopne
pushf
in
push
repz
mov
cli
add
addl
cmp
ds
jns
dec
and
dec
push
scas
into
or
cs
ljmp
fcmovnb
sahf
adc
repnz
loope
cmp
into
ficomps
gs
negb
aas
dec
jnp
pop
xchg
jae
xchg
into
in
xor
xor
sbb
and
mov
sub
jl
outsb
and
push
mov
bound
jl
push
outsb
xlat
jb
fwait
clc
cmp
dec
push
mov
fcmovbe
ficoms
mov
sbb
int
mov
mov
js
out
insb
imul
cwtl
sbb
hlt
nop
lds
pop
and
lret
xchg
xchg
out
fisubs
cltd
mov
push
insb
mov
or
mov
fdivs
fists
jp
out
fidivrs
addl
lcall
sahf
movsb
sub
mov
ret
ljmp
ss
scas
stos
outsl
mov
cmp
pop
inc
sbb
addr16
xor
push
cld
rcr
push
push
sub
xor
jno
mov
xchg
das
pushf
lods
das
cmpsl
sbb
sbb
cmc
inc
loope
bnd
cs
adc
jge
and
push
test
repnz
ds
sub
hlt
xor
xchg
push
inc
mov
cli
test
ss
cmc
xchg
xchg
mov
pop
rolb
mov
adc
loope
mov
ret
out
adc
xor
mov
mov
mov
push
dec
int3
xor
fmull
or
push
ja
in
lahf
jp
jmp
or
xlat
imul
cs
pop
mov
cmpl
or
in
cmp
mov
mov
sbb
push
mov
test
jb
jecxz
loop
mov
mov
pusha
clc
aad
dec
dec
inc
mov
loope
aad
scas
jge
enter
mov
shll
pop
xor
pushf
repnz
mov
sbbl
mov
addb
mov
femms
mov
and
xchg
mov
nop
dec
pop
push
popa
and
pop
rorl
lock
push
sub
aas
lods
enter
adc
add
cmp
mov
push
enter
add
jno
xlat
out
cwtl
sbb
add
mov
ja
std
mov
lods
stc
mov
outsl
aad
xorl
cmpsb
std
cs
pusha
ret
pop
pop
fisubrl
xchg
mov
insl
pop
in
add
adc
lods
mov
adc
sub
jb
push
mov
mov
popf
xor
shrd
js
add
sbb
mov
mov
xchg
xchg
sbb
inc
mov
add
dec
or
mov
cmc
jbe
xchg
shrb
mov
mov
sub
mov
push
xchg
mov
imul
dec
jg
mov
sbb
add
inc
adc
ret
out
jp
push
or
pop
pop
mov
sub
test
jbe
and
sub
mov
cmp
jnp
jo
add
into
mov
push
add
in
inc
scas
push
aam
sbb
sar
fcoml
movsl
adc
push
push
add
es
push
aad
mov
repz
or
shll
dec
xchg
xchg
pop
fnsave
repz
inc
jge
in
les
cmp
cmp
inc
test
outsb
std
pop
jno
cmp
test
ret
fcomp
cmp
ja
inc
push
mov
sbb
decb
bound
adc
mov
xor
pop
mov
sbb
jecxz
push
out
int
dec
xor
lods
pop
fst
pop
fmull
xlat
or
mov
push
lods
fcomi
mov
inc
cmpsb
rolb
cli
call
lret
sbb
mov
arpl
push
dec
cmp
movd
and
mov
pop
pop
cmpsb
in
fidivrs
jnp
aaa
loop
lods
les
lret
jb
fcmovnbe
xor
lods
dec
push
xchg
jae
aam
push
fsubp
dec
lret
lds
fdivp
scas
inc
jmp
inc
pop
ja
push
fstpl
mov
movsb
jp
jp
gs
fwait
xchg
mov
sbb
sbb
into
xchg
inc
xor
icebp
rolb
lahf
adc
fidivl
test
sti
subb
icebp
outsl
sahf
pop
lret
xor
adc
mov
adc
sub
ret
mov
adc
in
xchg
adc
int3
xor
fistl
adc
and
add
pop
xlat
lods
or
adc
pop
inc
xchg
cmp
je
push
loopne
inc
in
push
inc
into
sbb
mov
xchg
jns
mov
or
imul
sahf
iret
dec
scas
ja
mov
and
stc
test
std
loopne
aaa
xchg
daa
bound
leave
call
ret
dec
negb
jge
fimull
dec
call
nop
push
sbb
adc
jo
pop
insl
and
push
lods
repnz
inc
testb
movsb
push
push
or
inc
mov
add
mov
out
lea
xchg
lret
dec
push
dec
outsb
lea
and
addr16
adc
dec
movsl
lods
sub
leave
push
lret
sbb
std
xlat
data16
pusha
ljmp
inc
mov
cmpsl
enter
je
cmp
push
xor
or
push
jae
mov
mov
leave
adc
es
ja
ss
sub
sub
not
push
repnz
movsl
jp
mov
jbe
inc
jecxz
xchg
ret
mov
test
and
pop
and
sub
sbb
cmpsb
frstor
fistps
adc
push
mov
cmp
inc
and
mov
ror
lods
sbb
out
inc
or
iret
pop
lcall
aam
cmp
cmpsl
xor
pop
lea
or
inc
int
dec
sub
sub
lcall
and
and
mov
jecxz
jp
jle
fimuls
out
mov
call
add
fstpl
test
roll
or
sahf
mov
push
mov
sub
pop
lret
xchg
or
push
ljmp
mov
loopne
push
add
aas
outsl
loop
repnz
xchg
mov
stos
add
aad
jge
aam
ds
jmp
cmp
pop
dec
cmp
scas
cmp
mov
les
out
mov
lock
and
int
pop
or
test
add
jl
push
push
pusha
in
inc
fists
test
fs
push
cmpsl
xor
shrl
lahf
outsb
cld
sub
jmp
gs
push
adc
jnp
mov
rorl
push
ret
sbb
scas
cmc
jg
hlt
das
mov
pop
or
push
cltd
adcb
out
test
pushf
mov
push
adc
popa
jg
adc
test
pop
push
add
lahf
cmp
lods
pop
or
add
mov
xor
test
fdivs
mov
mov
mov
pop
out
sbb
pop
adc
cmpsb
cmp
mov
cmpb
fisubs
fdiv
push
mov
ja
add
dec
test
int3
out
push
daa
mov
xchg
sti
inc
aaa
sarb
scas
add
jb
loopne
shl
enter
and
jl
shl
cmp
inc
or
arpl
mov
jp
jle
sub
je
push
xchg
arpl
add
pop
sub
cmp
jns
repz
mov
test
dec
add
xorb
jb
popf
lahf
pushf
negb
fsubs
dec
push
icebp
jle
jae
dec
lods
add
gs
pop
pop
mov
ret
mov
mov
and
or
push
cmp
push
xor
cmp
xorb
push
js
xchg
hlt
loopne
or
sarl
xorl
and
push
out
outsl
leave
inc
or
sbb
andb
test
loop
leave
imul
push
inc
mov
add
call
mov
jg
in
fwait
dec
cmp
out
pop
add
rcl
stc
pop
outsl
out
dec
mov
mov
aaa
xchg
lock
cmc
mul
into
mov
push
mov
lock
in
mov
aaa
push
mov
add
ljmp
xchg
or
cmpb
jge
add
jmp
pusha
inc
sub
mov
das
sub
popf
and
dec
or
lea
ds
daa
xor
sarb
cwtl
dec
jle
data16
ljmp
je
cmp
scas
ljmp
cmpl
shlb
jl
sarb
jmp
hlt
push
mov
rcrb
xor
imul
jle
push
xchg
inc
dec
aad
add
out
xor
xor
or
jnp
fwait
add
mov
add
cmc
daa
test
add
aad
mov
lock
jne
int
xchg
inc
lds
stos
lcall
int
in
push
sbb
jmp
filds
in
enter
sbb
xlat
add
push
or
loop
fnstcw
cltd
std
shrb
xchg
xor
mov
mov
pop
or
aad
pop
lret
inc
xchg
sbb
dec
push
mov
shll
or
jp
mov
sbb
mov
mov
shr
jo
push
outsl
jl
test
pop
mov
lahf
sub
push
scas
pop
dec
aaa
jns
jo
or
ficomps
mov
das
jae
mov
lods
dec
sbb
loopne
pop
test
mov
lds
add
sub
les
adc
aas
imul
and
xchg
adcb
cmpsl
sbb
pop
xor
cltd
mov
mov
fsubr
mov
push
fcoml
insb
scas
jb
es
push
outsl
rcl
mov
aas
roll
fwait
loope
push
repz
shll
sarl
arpl
and
xchg
aad
jg
cmpl
mov
mov
inc
int
xor
or
pop
and
nop
es
xchg
and
lods
jl
adc
ss
xor
or
out
mov
sti
sahf
out
dec
popa
repz
rorl
scas
clc
test
mov
cmp
xor
aad
stos
or
jnp
int3
cmp
and
iret
or
push
outsb
pop
call
callw
push
sbb
inc
fidivl
jnp
adc
xor
hlt
xchg
es
sub
jne
hlt
dec
add
lds
movsb
sahf
cltd
loopne
aad
xchg
dec
xorb
sub
add
icebp
adc
push
fcomps
push
mov
adcb
cmp
ret
insb
ss
pusha
fsubrl
lds
cs
sahf
arpl
cmp
mov
cmp
mov
mov
push
jle
cmp
dec
icebp
and
push
lods
insl
addr16
push
inc
outsb
ret
lods
and
movsb
inc
in
test
xchg
test
pop
sbb
ret
dec
pop
stc
pop
mov
adcb
or
lds
add
jae
mov
lret
jnp
popf
xor
lahf
push
xor
cld
xchg
js
inc
sbb
popa
and
out
subl
and
sbb
nop
insb
cwtl
push
add
adcb
sub
sub
repz
dec
jnp
js
pushf
add
test
lahf
jp
dec
roll
mov
inc
daa
push
out
cwtl
dec
mov
cli
dec
test
jmp
fwait
loop
aaa
sbb
and
jl
xor
mov
in
cs
insb
adcl
or
in
cmp
loopne
cwtl
xchg
lods
addr16
xor
mov
cmc
cwtl
adc
push
mov
adc
jle
mov
xchg
sbb
sbb
cmp
xor
and
adc
mov
jae
push
adc
pop
pusha
into
pop
xchg
inc
adc
add
mov
ljmp
lods
aad
sbb
cltd
mulb
or
int
aas
pusha
in
fisttpll
mov
jo
into
lret
sar
inc
out
xor
sbb
mov
dec
cmpb
mov
daa
xor
fldt
mov
cvtps2pd
sti
cs
mov
jae
cs
mov
insb
pop
lahf
xchg
mov
divps
ficomps
jo
movsl
iret
lods
add
or
je
arpl
mov
ret
int
fs
xchg
sar
push
mov
sarb
test
outsl
rcll
dec
cmpsl
leave
popf
mov
int
push
xchg
dec
jle
les
jp
movsb
sub
mov
mov
pop
mov
out
movsb
stos
bound
push
enter
ss
sahf
sub
or
push
mov
jne
mov
int
cmpsb
mov
dec
jnp
scas
jae,pt
je
sarl
test
adc
stos
test
aas
mov
mov
ja
push
insl
iret
adc
push
rcr
aam
add
inc
insl
mov
pop
sbb
pop
mov
sbb
jmp
and
cmp
sub
loop
shlb
cli
xchg
push
inc
aad
rclb
push
inc
test
fnstenv
scas
sahf
icebp
popf
es
jbe
fidivrs
lds
neg
pusha
pop
pop
jno
int
iret
xor
inc
mov
inc
mov
std
inc
addl
fdivp
pop
ss
shrb
popa
push
pop
mov
jmp
jle
xor
sbb
in
mov
and
push
sbb
lods
sahf
and
inc
jg
lahf
jno
sub
js
dec
pop
je
dec
mov
mov
pop
mov
repnz
shl
add
xor
pop
jle
push
ficompl
xor
test
out
adc
ror
cmp
scas
push
mov
mov
mov
push
xor
mov
aaa
testb
cmc
jae
mov
orb
inc
xchg
gs
jl
lcall
jle
dec
mov
inc
mov
outsl
and
push
subb
repz
add
mov
sub
std
mov
bnd
aas
mov
lods
dec
inc
out
cmpsl
lret
or
imul
jecxz
mov
or
pop
add
xchg
andb
mov
popa
jg
ss
add
mov
cmp
cmp
pop
push
lea
idivl
out
mov
test
mov
sub
mov
sahf
pop
adc
test
mov
aas
and
sub
mov
notl
xchg
pop
jl
cs
nop
iret
ret
stos
sbb
roll
sti
testb
popl
push
enter
mov
orl
test
movsl
jbe
sub
out
pushf
mov
dec
mov
xor
adc
jge
xchg
sub
adc
mov
push
gs
inc
or
ret
inc
andb
gs
lret
fidivl
aam
xchg
jae
mov
xchg
fidivl
call
nop
sahf
popa
mov
jae
mov
jb
xor
add
cmpb
out
sahf
jno
pop
xchg
pop
or
mov
sarl
jae
outsl
out
xchg
daa
insl
cmp
inc
sbb
lods
and
or
mov
fdivl
jp
aad
ret
jecxz
ret
or
xchg
push
jge
add
push
or
sarl
imul
push
cmc
cmp
or
cld
inc
or
mov
or
pop
repnz
xor
xor
addr16
adc
mov
loop
jp
iret
add
cmp
js
fsubl
aaa
cmc
adc
mov
push
ljmp
cmc
adc
pop
dec
add
mul
jg
sub
sarb
loope
mov
jp
push
popa
insl
les
inc
imul
pop
mov
cmp
ljmp
int
inc
pop
and
not
sbb
cmp
std
ljmp
imul
cmp
push
das
fs
cs
loop
in
push
lret
and
test
lock
out
aas
xchg
in
ljmp
andl
testb
sbb
adc
fldcw
jl
jecxz
xor
or
pushf
push
mov
xchg
push
dec
jns
psadbw
xor
cmpsl
xor
jb
sti
out
xor
dec
push
sub
xlat
jmp
jmp
xor
into
cld
mov
fwait
lods
jle
mov
subb
rcrb
lahf
out
sub
fcomp
test
xor
repnz
data16
xor
mov
sub
or
xchg
es
repnz
cmp
adc
sti
push
out
lahf
sbb
shll
xchg
icebp
xchg
loop
pop
xor
aas
dec
cmpsb
jnp
out
and
int3
outsb
iret
mov
sub
stos
hlt
add
cmp
sub
popa
loop
pop
js
int
fidivrs
fsub
scas
xchg
mov
inc
xchg
dec
fwait
push
inc
adc
ja,pt
xchg
sarl
push
enter
ja
popf
popa
push
lahf
daa
repz
inc
add
pop
mov
jp
adc
rolb
xchg
js
cmp
push
push
shlb
pop
add
jbe
out
insl
push
sbb
mov
cmp
inc
xor
inc
or
cmp
stc
stos
shrb
ret
fsubs
in
xor
dec
xchg
adc
sbb
dec
sbb
pushf
or
pop
aas
mov
sbb
cmp
fdivrs
ret
xor
xchg
iret
call
sub
mov
jo
add
stos
mov
in
icebp
loope
aas
idiv
or
jp
rcll
roll
push
lret
stos
sub
xchg
adc
decl
jl
dec
scas
xchg
sub
xor
mov
mov
dec
aad
push
or
add
fs
sti
and
inc
into
mov
lret
and
mov
add
pop
aaa
ds
shrb
stc
inc
rorl
sub
aad
loop
pusha
icebp
mov
mov
jbe
inc
xor
xchg
add
pop
pop
mov
cmp
imul
out
mul
jle
mov
lock
orb
push
push
test
xchg
lret
sub
dec
insb
mov
negb
daa
inc
test
mov
cmp
fisubrs
xchg
sub
mov
lods
add
ljmp
pop
push
popa
das
xor
mov
fs
test
clc
outsl
mov
mov
dec
fwait
adc
mov
daa
cmp
jne
mov
loopne
push
dec
push
out
mov
inc
sbb
insl
std
loopne
test
sub
inc
add
adc
cltd
lcall
inc
ror
sarb
cwtl
push
adc
lea
cmc
stc
jb
in
push
gs
js
xor
jl
test
xchg
mov
ss
dec
aaa
ss
mov
mov
divl
js
gs
push
fistps
push
jo
negb
mov
mov
dec
add
movsb
jnp
aam
jnp
loop
ss
xor
push
mov
mov
aam
stos
lret
pop
outsl
and
mov
xchg
inc
jle
fs
xchg
out
idivl
mov
dec
jge
repnz
pop
mov
js
shl
std
pop
and
add
sub
mov
sbb
cld
scas
popa
mov
add
mov
jg
imul
gs
stc
cli
xor
sbb
push
arpl
jno
sbb
lds
jno
sahf
xor
out
adc
mov
jae
dec
mov
or
in
int3
inc
rcrb
lahf
cmp
mov
pop
jnp
pop
xchg
imul
negl
dec
inc
out
shl
sbb
cmp
mov
js
jmp
mov
mov
xchg
fwait
sbb
fstpl
adc
add
sub
aas
and
mov
sbbb
repnz
aaa
mov
xor
std
call
arpl
lret
out
or
add
fsubrs
fcmovnu
jae
negl
lock
xorb
cld
cmpsb
adc
mov
inc
aas
not
dec
orl
mov
push
outsl
mov
pop
idiv
mov
mov
data16
mov
mov
push
mov
idivl
add
das
repnz
mov
sarb
lds
mov
test
je
or
bound
out
int
dec
aad
in
ret
imul
pushf
push
inc
ja
dec
addr16
aaa
sbb
andb
outsl
lcall
xchg
loopne
loope
cld
dec
sbb
push
aas
ret
sbb
push
xor
push
sbb
cwtl
push
xlat
dec
into
rol
div
jg
xchg
jle
stos
jmp
sub
cwtl
xchg
xor
mov
xor
or
les
push
inc
jbe
xorb
push
mov
icebp
jne
mul
add
lds
imul
or
jp
sar
fisubl
lret
cmpsl
dec
cmpl
outsl
jge
pop
mov
xorb
imul
insb
fcoms
jl
xchg
pop
lds
cld
arpl
mov
out
pushf
pop
cmp
roll
lods
and
je
sbb
daa
arpl
gs
ja
mov
adc
test
mov
mov
sahf
jecxz
sub
cmp
loop
sub
push
pushf
sbb
mov
test
gs
pop
loop
rcll
sbb
cld
push
test
into
test
fcomp
shlb
push
push
out
adc
fcoml
push
push
mov
sbb
sub
cmpl
pushf
fsubl
test
in
outsl
push
adc
lock
loopne
imul
jp
pop
daa
or
jg
stc
addr16
xchg
dec
fdivrl
sub
dec
ja
loop
dec
mov
loope
fldl
ret
or
frstor
pusha
push
pop
std
jp
incl
or
insl
xor
repz
je
int3
out
pop
jg
inc
cmpsl
dec
inc
mov
faddl
in
sub
xor
push
mov
in
lret
inc
stc
cmpsl
xor
loop
ja
mov
inc
cmc
push
inc
dec
lahf
cmp
in
pusha
xlat
popa
cmpsl
dec
push
mov
pop
mov
xchg
add
les
or
push
loope
and
aam
psubb
or
out
mov
cwtl
lret
sbb
hlt
push
pop
bound
or
dec
loop
mov
shlb
pop
shrl
cmp
xchg
mov
outsb
xchg
inc
in
nop
add
cmp
sub
lcall
hlt
dec
jno
xor
stos
push
mov
sahf
or
nop
push
jp
loopne
pusha
mov
popf
repz
pop
je
out
lods
js
mov
lods
xchg
inc
mov
push
cld
call
mov
and
jb
fistpl
push
ret
fsubrl
sbb
andl
clc
mov
movsb
frstor
lahf
lds
inc
gs
scas
ficoms
add
in
dec
sbb
fsubrl
adc
aas
nop
out
clc
push
shrb
xchg
ja
push
xor
aaa
dec
xchg
mov
xor
std
ret
daa
push
les
pop
inc
or
push
les
movb
jmp
xchg
push
cltd
imul
ror
or
andl
add
inc
inc
inc
push
xor
xchg
and
cmpsl
stos
leave
mov
fwait
dec
aaa
test
addr16
addb
enter
mov
out
mov
lahf
push
xchg
adc
sub
xor
fimuls
imul
jo
pusha
sub
sbb
outsl
and
sub
clc
imul
mov
popa
dec
and
cmc
or
mov
jne
lds
ss
sub
jae
add
and
pushf
sarl
mov
cmp
in
adc
mov
cmpsb
or
aas
stc
int
imul
lahf
pop
loopne
pop
ljmp
push
dec
enter
sbb
sbb
xor
inc
leave
orb
mov
jne
mov
fst
or
or
xor
fcmovu
adc
out
adc
stc
ror
jmp
pop
outsl
xor
js
sbb
jo
jns
jmp
arpl
inc
adc
aad
xchg
xchg
pusha
daa
dec
xorl
cld
lret
mov
push
test
jo
jb
ret
or
or
push
jge
in
ret
mov
push
jo
xchg
popa
negl
push
xchg
mov
sub
push
add
imul
xor
and
xor
pop
mov
in
stc
inc
push
insl
xchg
mov
sbb
clc
mov
jg
rolb
aad
push
xor
xor
jb
xor
xchg
daa
pushf
sub
aaa
xadd
mov
jg
repz
mov
in
lds
call
adc
lret
imul
cmp
mov
rorl
arpl
incl
dec
adc
mov
cs
pop
imul
lahf
pop
and
out
inc
mov
and
adc
les
dec
lahf
adc
jmp
ds
mov
inc
sbb
pop
aam
mov
cmp
mov
adc
test
in
adc
mov
inc
pop
jb
cmpsl
mov
mov
aad
scas
fmull
inc
jo
mov
xor
stos
mov
mov
das
pop
sub
cmpsl
dec
sbb
movl
test
sahf
sbbl
xor
aas
cmp
int3
bound
repz
lahf
mov
dec
mov
push
inc
cltd
adc
jae
in
xor
or
cmp
mov
mov
jns
in
out
jecxz
or
xchg
sub
mov
roll
ret
inc
or
cmp
mov
push
ds
out
pushf
jl
enter
addr16
xchg
sub
ret
std
lods
sub
mov
mov
in
adcb
push
lret
jbe
push
add
and
outsb
mov
rcll
adc
inc
or
cld
daa
xorl
out
mov
pop
cmc
out
dec
std
adc
or
pushf
mov
lcall
popf
pop
fidivl
and
jmp
imul
mov
mov
enter
xchg
mov
jne
popa
push
loopne
stc
in
jae
test
dec
cwtl
popa
push
stos
adc
in
xchg
lock
inc
mov
xchg
xchg
fwait
inc
push
adc
cmp
add
mov
outsl
das
or
int
xor
fadds
push
getsec
pop
inc
scas
fsubrl
add
mov
xlat
outsl
dec
mov
jp
loope
pushf
dec
loopne
mov
movsl
mov
fucom
cmc
cs
loopne
push
stos
inc
xchg
arpl
jb
xchg
add
test
mov
mov
push
cmp
hlt
jl
jg
jno
imul
mov
or
add
cltd
mov
movsb
mov
lods
lret
mov
pop
mov
jmp
add
fsub
sub
adc
sbb
cmp
fisttps
addr16
popf
adc
aad
arpl
sbb
cltd
movsb
ss
jmp
dec
mov
xor
adc
sub
lcall
cltd
test
ret
pop
and
xorl
mov
xor
fsubrl
or
out
mov
scas
pop
push
dec
and
out
inc
cmc
addl
push
rcll
mov
negl
and
xchg
push
pop
xlat
sbb
push
call
push
sub
xchg
pop
push
push
scas
jne
mov
aad
or
arpl
lahf
out
pop
jge
pushf
cs
jnp,pt
stc
movsb
sbb
push
inc
fwait
xor
dec
mov
movsl
jmp
push
fistl
dec
data16
out
jle
sub
or
into
add
insl
xchg
mov
pop
mov
sahf
test
mov
sbb
sbb
mov
sub
adc
push
cmc
push
lcall
rclb
bound
shr
mov
fldl
es
movsb
mov
mov
and
or
or
sub
xchg
movsl
sub
jo
adc
jg
mov
outsb
scas
insb
fcompl
inc
pop
jns
std
subl
xrelease
mov
repz
sub
adc
shrb
xchg
ss
adc
cwtl
adc
lret
cmpsb
fistpll
aam
xor
jg
inc
sbbl
mov
enter
push
stos
cmpsb
dec
cmp
adc
mov
in
xor
jg
mov
mov
and
icebp
fcoml
cmp
and
mov
ret
adc
fwait
stos
push
inc
sub
push
rol
ss
inc
gs
pop
insl
cmp
dec
dec
cli
ja
std
push
fisttps
out
sub
xchg
icebp
pusha
pushf
call
xchg
push
data16
add
ds
adc
mov
mov
ljmp
nop
cli
popf
sbb
mov
mov
or
js
daa
xorl
imul
xor
fstpl
in
mov
pop
add
fadd
iret
cmp
jbe
mov
cwtl
add
jne
jnp
jns
mov
jo
pop
pop
xor
inc
sahf
pop
arpl
sahf
enter
aaa
pop
int3
div
inc
fbstp
lret
rcll
shlb
sbb
jp
idiv
inc
int
and
int
push
cltd
cmp
xor
aam
inc
mov
or
mov
popf
sub
out
test
imul
lea
loop
inc
sarb
mov
inc
cmp
mov
hlt
dec
fdivl
push
mov
rcll
mov
dec
dec
aad
loopne
aaa
xchg
mov
jno
push
popf
push
hlt
ss
push
out
rcll
xor
sub
add
aam
pop
fisubrs
subb
sbb
int3
adc
movsb
sub
mov
mov
enter
or
stc
push
xchg
jns
ja
mov
jb
add
dec
popf
push
rorl
push
pop
or
sbb
sub
fisubrs
adcb
dec
dec
adc
or
xor
or
insb
push
scas
ljmp
lret
std
lods
dec
sbb
aam
sbb
sub
dec
test
out
dec
jmp
js
mov
pop
xchg
pushf
jno
xorl
jge
mov
mov
lods
add
mov
dec
mov
aaa
jo
sarl
cmp
roll
in
mov
les
jp
imul
jp
sub
and
cmp
sub
xchg
cmp
lcall
cmc
add
loope
jns
stos
out
jg
sbb
ss
out
cld
inc
dec
out
push
dec
pop
test
in
or
dec
cltd
test
decl
loop
pop
movsl
enter
les
xchg
rcr
lret
mov
xor
push
pop
movsl
imul
ret
dec
jbe
push
xor
icebp
pop
dec
les
out
mov
add
inc
stos
mov
scas
loopne
fadds
rol
mov
iret
ljmp
and
dec
add
testl
int3
mov
shll
pop
cmp
dec
inc
lods
pusha
aas
adc
lock
pop
test
in
in
cmp
flds
jmp
ficoms
and
lahf
aas
mov
adc
leavew
out
fnstenv
push
stos
loop
sbb
sbb
shll
data16
jne
add
out
xor
sbb
push
cmpsb
in
mov
and
sahf
ret
mov
mov
aas
orb
xlat
cmc
cmpb
cmp
mov
mov
lcall
inc
outsb
into
outsl
jmp
or
dec
jnp
mov
test
lds
fwait
rcr
and
xor
rclb
inc
sti
shlb
cmp
fisubrs
mov
inc
nop
cmp
mov
fildl
in
jno
xor
fisttps
insl
jo
cld
xchg
inc
jl
aaa
dec
insl
jne
jnp
dec
xchg
bound
outsb
daa
dec
xor
notb
mov
mov
push
mov
push
add
sbb
clc
mov
sub
xor
gs
jns
sbb
out
and
adc
inc
push
cmp
testl
pop
mov
xrelease
push
cmp
test
jo
mov
lea
jmp
sbb
and
rcl
push
xchg
push
loop
add
lcall
insl
pusha
sti
mov
xor
lea
call
or
cli
shl
pop
cmp
pop
jnp
add
aaa
dec
xor
in
sbb
cmp
dec
xor
fs
jecxz
add
mov
pop
inc
stos
sub
xor
fcmovne
pop
ret
repz
fcompl
adcb
push
cmc
lret
lcall
pop
les
sahf
sub
fldenv
and
add
lret
insl
es
mov
rolb
fmuls
xchg
jno
push
lahf
lret
loopne
sbbl
add
pop
add
test
cmpsb
in
jne
cmpl
xchg
mov
mov
mov
ljmp
or
mov
ja
xchg
jle
sbb
jbe
scas
clc
pop
sub
ljmp
mov
inc
mov
dec
mov
mov
lods
push
xlat
inc
jne
cmp
jnp
lods
mov
mov
lcall
iret
ror
mov
xor
xchg
test
inc
push
addr16
insl
pop
hlt
inc
sub
inc
cmp
cmpsl
sub
pop
gs
frstor
test
dec
repz
inc
ja
add
leave
dec
mov
stc
ss
pop
and
cld
xchg
xchg
jbe
jbe
mov
lahf
mov
adc
xlat
xor
popa
xchg
cmp
loope
fsts
data16
pop
dec
gs
jae
out
and
mov
fisubl
mov
dec
out
movsb
jae
inc
loop
adcl
sbb
or
es
adc
sbb
xor
add
sbb
ds
pop
mov
pop
leave
inc
inc
dec
lahf
sub
and
inc
lods
imul
sbb
ss
push
cmp
stc
pop
mov
push
rolb
leave
pop
test
scas
insl
cs
mov
mov
adc
movsl
loopne
fcompl
ljmp
jp
in
push
mov
sti
fcomps
and
push
bound
insb
shlb
mov
cmc
mov
add
fcomip
inc
mov
mov
jb
enter
mov
gs
mov
mov
xor
iret
xchg
arpl
in
andb
push
jns
dec
pop
int
and
fldl
mov
push
das
pop
fadd
popa
push
add
cwtl
jbe
ret
pushf
pushf
movsl
mov
and
inc
out
lret
outsl
pop
mov
push
pusha
push
jge
cmc
mov
in
sbb
orb
mov
cmp
and
mov
mov
mov
and
test
mov
addr16
sahf
outsl
call
push
pop
and
iret
jecxz
pop
int
mov
ljmp
sarl
cld
js
fucomi
mov
or
insb
jb
leave
dec
cmp
repnz
or
rcl
and
inc
dec
pop
movsw
aam
std
adc
and
push
jae
mov
mov
out
adc
pop
orps
mov
fisttpll
pop
push
sub
rcrl
or
es
in
sbb
push
fs
lea
adc
sub
in
push
dec
das
adc
iret
les
sub
nop
jp
bound
sub
in
lret
cmpsl
sti
movsl
popa
fcomip
jnp
mov
push
lods
lods
add
mov
or
or
aaa
jae
sub
push
jb
in
push
cmpsl
cmp
ret
jle
aas
mov
das
data16
inc
stos
xlat
push
clc
sub
mov
cs
mov
out
push
sbb
and
cwtl
jae
sub
sbb
les
ret
in
lock
js
xchg
dec
test
dec
sub
lods
adc
out
lret
or
sub
or
out
stos
sbb
xor
jecxz
inc
sub
mov
xchg
fs
gs
test
lahf
imul
in
paddusw
mov
push
cwtl
push
icebp
or
es
pop
pop
ret
adc
jnp
and
mov
mov
dec
jp
and
mov
push
jmp
cmp
xchg
repz
pop
jae
jmp
fsub
loopne
cmpsl
out
rolb
es
int3
adcb
sti
or
cmp
ss
iret
or
mov
dec
loop
idiv
sti
cmp
mov
sarl
fistpl
sub
hlt
enter
jge
xchg
rcl
add
adcb
loop
adc
pusha
lahf
dec
testl
pop
cmp
out
je
inc
lock
pusha
mov
es
xchg
pop
cmp
mov
push
xor
inc
pop
arpl
cmp
push
clc
fstps
cmpb
jns
dec
stc
add
mov
into
addr16
shrb
mov
mov
xor
push
lock
sbb
mov
and
sar
addr16
cmp
cmp
out
inc
sub
sbb
push
sti
dec
dec
addb
fs
lahf
mov
push
xchg
mov
loopne
cmp
in
inc
sub
push
xchg
mov
insb
ja
scas
lock
les
jne
inc
orl
repnz
hlt
ljmp
or
in
scas
xchg
scas
orb
cmpsl
sbb
lret
or
out
jae
movsb
inc
lods
lret
jmp
and
jns
or
sbb
daa
sub
mov
fcomp
cmp
fs
popa
cmc
fbld
outsl
jle
push
ret
xchg
adc
scas
cmpsb
dec
xlat
das
icebp
aad
push
sbb
mov
inc
push
inc
rorl
jp
and
sub
subl
sub
mov
jmp
mov
bound
mov
jae
jns
sbb
dec
push
add
enter
jg
pop
fadds
add
lahf
xor
fs
mov
addr16
in
stc
dec
mov
fmul
call
cmp
cld
or
xor
mov
lahf
pop
xchg
rcrl
cwtl
mov
ja
repz
xlat
pop
xchg
xchg
inc
add
movsl
mov
lock
pop
xchg
ret
mov
mov
inc
aas
lcall
inc
mov
sub
mov
daa
push
loope
jp
fucomip
xchg
into
push
mov
movsb
mov
in
cmc
or
adc
int3
mov
push
arpl
aam
icebp
sti
mov
aas
sbb
xchg
push
sub
leave
outsl
xlat
shrl
pop
adcl
and
push
or
and
jp
xchg
std
push
mov
js
pop
pop
pop
scas
xor
in
push
loopne
pop
outsl
push
int3
subb
stos
pop
repz
sub
imul
jg
inc
popf
stc
cmp
popa
mov
dec
aaa
add
push
add
push
push
leave
mov
sbb
push
in
lret
jl
lret
fwait
clc
sahf
jl
mov
xlat
in
push
mov
and
adc
arpl
loopne
xor
ljmp
pushl
mov
xchg
cmp
outsb
pushf
ja
cli
mov
push
push
jae
andb
ror
int3
pop
add
xchg
fcmovnu
dec
sub
xlat
fmull
mov
push
ja
es
out
inc
xchg
rol
gs
push
and
shll
cmp
mov
jbe
sub
lret
and
and
mov
call
aam
fcoml
nop
pop
jae
iret
jmp
test
out
in
testl
push
inc
adc
push
push
cmp
sbb
mov
jmp
lcall
sar
dec
loopne
pop
sub
cmp
xor
movsl
mov
cmpl
out
ja
xchg
andl
jno
mov
pop
daa
sub
mov
addl
lcall
jae
mov
and
mov
test
pop
lcall
into
stos
jb
xchg
push
jge
or
movsl
insl
pop
cmp
fisubl
dec
mov
daa
sahf
jae
sub
outsb
ljmp
dec
cmp
lcall
push
sub
rclb
inc
xlat
xchg
stos
cld
int
movsl
pop
je
cmp
pop
shrb
sub
ljmp
add
ss
xor
fwait
test
mov
xor
and
cmp
negl
mov
dec
adc
lds
jae
add
mov
imul
add
adc
sub
cmp
clc
rcrb
jmp
xchg
sub
dec
leave
aad
pusha
mov
pop
dec
fs
mov
icebp
xchg
jbe
mov
cmp
sbb
cmpb
out
pop
ret
callw
sbb
lea
jbe
lcall
sbb
fldenv
je
jo
hlt
into
shll
adc
fst
push
xor
lea
and
mov
sahf
or
pop
push
enter
in
in
in
sti
mov
lods
lds
mov
push
pop
cmpsl
pushf
push
stos
mov
imul
cld
jp
lds
add
xchg
add
inc
push
loopne
sbb
clc
fisttpl
jl
sbb
xchg
imul
add
sti
adc
out
jne
dec
xor
mov
icebp
mov
mov
fstl
popa
mov
pop
xchg
jnp
fisubl
mov
jle
inc
and
xlat
push
lock
mov
cltd
cltd
cld
movsl
lahf
cmp
push
cmp
adc
or
pushf
jo
sbb
xor
lret
cli
sti
es
nop
adc
jnp
aam
mov
push
jge
dec
popa
movsl
dec
gs
cmp
aam
into
cmp
and
jbe
data16
popa
cmp
pop
pop
fpatan
adc
cld
mov
sti
lea
pop
xor
or
jmp
data16
mov
fcmovu
pop
andb
fisttpll
loopne
mov
mov
mov
pop
pop
dec
adc
cwtl
dec
mov
lock
lea
dec
inc
add
call
outsl
cmp
out
sti
test
lds
orl
sbb
push
ret
sbb
std
cmp
pop
leave
in
sbb
lcall
shrl
test
dec
or
int3
ja
outsl
mov
movsl
imul
cmp
mov
mov
push
popa
inc
sahf
push
incl
fld
popf
test
lret
aad
mov
jl
orb
mov
adc
push
imul
mov
add
bound
stos
icebp
mov
sub
outsl
push
sahf
scas
sbb
lock
call
pusha
mov
outsb
aas
int
pop
shll
cltd
imul
cli
in
sub
sbb
test
sub
cmpsl
xchg
push
mov
push
lea
xor
mov
add
jns
aas
out
imul
jl
jnp
pusha
mov
in
scas
leave
mov
adc
jp
jb
lret
jl
xchg
addl
shl
add
test
mov
pusha
into
mov
jl
rcrb
and
push
aam
test
ret
mov
lock
inc
shlb
insl
sbb
cmp
sub
adc
xchg
pushf
dec
push
mov
sbb
adc
cmp
test
jle
nop
repnz
rorl
stos
jp
cmc
lods
lret
jbe
out
das
daa
sbb
cmp
ret
pop
lahf
test
push
shlb
insl
cltd
sbb
das
inc
cmpl
loope
addr16
xchg
icebp
mov
push
pop
mov
xchg
lds
daa
mov
mov
clc
mov
pop
cld
adcl
sbb
inc
pop
into
push
mov
enter
cli
mov
pop
das
and
xor
jns
lret
movsl
ljmp
push
push
sarb
adc
pop
mov
lods
inc
movsb
rep
sub
cmp
fldenv
pushf
insl
xchg
dec
decb
push
popa
sbb
orb
pushl
pop
push
mov
test
shrb
adc
or
or
xchg
jb
mov
les
mov
sub
adc
dec
cmp
jae
or
imulb
mov
in
sub
subb
mov
xlat
lahf
loopne
mov
add
cmp
aaa
cltd
into
mov
jg
add
movsb
test
dec
sub
inc
or
pop
outsb
mov
xchg
push
pop
xor
data16
mov
push
xchg
daa
push
and
xchg
pusha
aam
imul
sbb
mov
push
or
sbb
pop
xor
sub
and
and
sbb
and
stos
movsl
sbb
jge
adc
sbb
testl
or
jmp
test
mov
aad
fwait
adc
sub
pop
mov
xor
pop
test
pushf
cli
filds
cmp
cld
std
mov
les
cmp
add
jno
or
jo
ret
mov
roll
mov
jl
ret
jae
xorl
push
push
sahf
daa
xor
mov
mov
addr16
outsl
adc
decb
lret
inc
sub
cs
rcrb
sbb
xchg
scas
testb
add
dec
or
mov
in
xor
fwait
ljmp
cmp
lcall
gs
test
cmp
rol
pop
xchg
jb
cld
sub
loopne
out
aas
push
pushf
lahf
add
sbb
ret
inc
out
gs
inc
add
mov
sti
adc
out
cmp
lods
xchg
adc
xor
pop
mov
andl
xor
pop
xor
push
mov
std
xchg
enter
inc
jecxz
fldl
jae
pop
pop
jno
pop
push
inc
ss
js
xchg
outsl
cli
test
lds
xchg
ret
push
or
pop
sub
icebp
inc
jae
cmp
cmc
push
fidivrl
mov
inc
es
pop
or
or
fmuls
enter
jno
mov
mov
dec
dec
scas
inc
lcall
repz
push
addb
loope
inc
out
popf
adc
jmp
sbb
mov
dec
orb
dec
dec
in
imul
inc
and
icebp
and
lcall
push
xorl
jbe
ljmp
push
xor
sahf
xchg
pop
cmp
inc
sbb
mov
loop
jno
ficoms
and
xchg
shlb
sbb
fbstp
and
push
adc
in
dec
push
cmp
sbb
and
and
lea
and
dec
cmp
or
push
or
fcmovu
lea
sbb
out
in
ja
test
ret
sbb
test
add
imul
xchg
js
jo
sub
out
lahf
cli
xor
push
in
fisubl
mov
test
jle
loop
add
arpl
pop
stos
mov
hlt
aam
adc
movsb
or
aaa
jns
or
push
cltd
mov
je
pusha
int3
mov
push
add
ret
mov
shl
fcoms
stos
pop
popl
in
mov
xor
sub
jg
ljmp
imul
fsubrs
pop
movsb
ficomps
mov
push
repnz
repnz
mov
iret
push
sub
iret
mov
lods
orb
lret
or
cwtl
dec
push
sbb
sub
aas
adc
in
cmp
daa
dec
in
pop
cmpsl
adc
sbbb
sub
mov
adc
decb
sahf
dec
ss
decl
xchg
hlt
and
loopne
test
aas
arpl
inc
xchg
push
mov
push
xchg
jnp
sub
inc
xor
mov
mov
shl
adc
int3
int
mov
rcrb
jmp
pop
sbb
push
mov
mov
js
jns
in
sahf
mov
iret
push
or
mov
jns
ds
es
decb
mov
and
sub
inc
fwait
ljmp
insl
jl
dec
push
sub
mov
popf
inc
call
insb
pop
pop
icebp
xor
cmpsl
daa
andl
icebp
mov
cs
or
jg
cltd
xchg
push
mov
pop
scas
in
sbb
push
mov
xor
cwtl
pop
sbb
xlat
insb
fiadds
sbb
push
jae
mov
and
lret
sbb
les
sub
jae
push
or
mov
cmp
jmp
mov
push
cmp
pop
jno
jb
lods
scas
jmp
out
push
push
nop
xor
enter
sub
icebp
cmpsb
jle
xor
aaa
cmp
stos
loopne
mov
out
jge
data16
scas
and
in
out
movsl
pop
adc
adc
lcall
sub
ret
je
shll
fldl
jp
mov
cmp
repnz
mov
xor
shlb
test
iret
leave
out
mull
cmp
hlt
xor
les
notl
jae
imulb
insl
xor
xor
aam
inc
sarl
stos
test
dec
mov
mov
mov
jno
loopne
pop
push
push
dec
inc
cpuid
push
nop
aas
scas
pop
jno
add
add
lret
mov
push
or
or
daa
push
lods
mov
dec
jge
ret
sbb
pushf
inc
xor
add
or
popa
aad
fisubl
lods
cmp
sub
mov
testb
insl
pusha
push
mov
shll
fld
inc
push
add
inc
std
test
mov
xor
sub
xlat
clc
ret
in
div
cmpsb
out
addr16
movsb
inc
shl
adc
lcall
mov
mov
enter
or
or
sti
xchg
push
adc
imul
cmp
mov
sub
mov
out
xor
push
and
xchg
idivl
fs
not
xor
fistpll
movsb
fldt
inc
les
push
and
insb
adc
mov
jo
inc
push
jl
and
push
ror
fidivrs
divb
addr16
lods
dec
insl
popf
mov
inc
daa
scas
add
mov
ljmp
sbb
adc
dec
dec
pushf
or
inc
loopne
cmpsl
sbb
xor
call
addl
sub
or
cmp
inc
retw
mov
in
or
dec
inc
in
pop
movsb
or
add
fcoms
sbbl
adc
push
xor
fidivrs
push
sbb
pusha
pop
fwait
pushf
dec
in
cmp
imul
pop
mov
mov
push
cmp
push
pop
mov
lods
push
in
pop
int
mov
je
jecxz
or
push
fcoml
lret
mov
mov
jmp
imul
add
shll
add
push
lea
and
pop
adc
mov
loopne
fcomp
and
jmp
cmpsb
or
repz
imul
xor
sbb
adc
in
gs
pushf
subl
idivb
fdiv
aas
sub
mov
xor
mov
aam
in
loopne
pop
fcom
mov
cmp
pop
sub
lret
jnp
pop
scas
stos
jns
fldenv
cmpsb
sbb
push
add
mov
xchg
cmp
out
xchg
iret
mov
fisubl
xor
int3
fdivs
aam
push
adc
push
pop
gs
mov
cmovp
push
jb
iret
clc
loope
push
mov
stc
movsl
inc
mov
cmp
sub
pop
or
mov
xor
enter
mov
nop
pop
subb
sub
adc
pop
fiaddl
and
mov
in
outsb
cli
dec
cmpsl
add
sbb
pop
mov
cmp
fnstenv
push
sbb
push
mov
mov
pop
fcom
bound
outsb
imul
push
xor
add
cmpsb
xor
jmp
inc
adc
into
rcrb
sbb
ficoms
sub
mov
mov
shlb
test
mov
clc
xor
mov
ja
nop
cmp
push
rclb
out
mov
mov
subb
push
adc
fcoml
lret
jo
je
or
xchg
das
mov
xchg
sahf
and
inc
iret
or
pop
shl
insl
or
dec
jbe
jp
les
add
pushf
sbb
rcl
int
or
mov
mov
int3
cmp
mov
pop
add
adc
loope
add
inc
dec
or
xor
push
xchg
pop
movsb
jp
mov
mov
iret
in
xor
popa
addr16
adc
int3
adc
push
push
push
inc
adc
mov
xchg
pop
push
andl
push
leave
adc
clc
movsb
and
xor
mov
data16
popf
pushf
fwait
jne
inc
jmp
jo
cld
adc
jle
sub
mov
mov
imul
stos
test
rcl
sti
push
outsb
or
xchg
fucomip
sub
jmp
stos
push
cmp
cltd
fcompl
dec
aas
adc
mov
sub
std
sbb
cwtl
loopne
arpl
mov
sub
mov
or
mov
sbb
mov
mov
inc
out
pop
sbb
add
adc
aaa
sub
out
scas
popa
div
dec
pop
nop
sbb
leave
lea
xchg
adc
jne
and
das
bound
shr
and
ror
out
inc
lock
adc
cmp
ret
es
cwtl
mov
push
enter
xor
arpl
jmp
sti
adcb
adc
es
negl
sub
xor
fdiv
stc
jne
test
push
inc
fldcw
in
xlat
mov
inc
aas
xchg
in
mov
adc
jno
dec
lcall
rol
inc
jns
cli
aam
mov
lret
mov
into
xor
cld
pop
and
cld
sub
push
cwtl
int3
add
out
cli
movsb
mov
dec
sub
out
adc
sbb
sbb
xchg
pop
sub
divl
out
inc
dec
cmc
cmp
addl
data16
call
jnp
popf
aam
pop
add
movsl
icebp
inc
or
jecxz
dec
xchg
outsl
xlat
mov
fisubrl
jmp
push
pop
add
xchg
or
js
aad
enter
sub
lea
and
in
add
mov
std
stos
push
xchg
and
out
divb
cld
lods
int3
dec
bnd
inc
xchg
dec
cmpsl
xor
pop
mov
cmpsb
out
push
out
nopl
xor
cltd
mov
add
pop
xor
or
mov
cmc
idivb
xchg
push
mov
push
lea
and
inc
hlt
sub
xchg
mov
mov
ret
data16
sbbl
imul
add
pop
in
mov
mov
pop
xor
adc
jno
sarb
push
leave
dec
test
mov
jg
rorl
pop
sbb
xrelease
sahf
inc
int3
fidivl
pushl
sbb
dec
std
or
dec
dec
jecxz
sbb
mov
scas
ficoms
mov
shrb
mov
jg
div
mov
repz
outsb
xor
int3
mov
cmc
pop
mov
dec
int
add
inc
orl
pop
mov
mov
lds
test
imul
jo
dec
ret
cmp
dec
addb
push
jae
mov
fmul
pushf
sub
mov
add
or
jns
addr16
aam
testb
ss
test
cld
and
dec
adc
xchg
fisttps
fucomp
insb
adc
movsb
and
fsub
scas
and
xchg
rolb
adc
and
sbb
push
pop
dec
fbstp
adc
mov
cmp
inc
add
out
push
fld
cmp
dec
and
jmp
iret
scas
out
movsl
mov
lcall
icebp
dec
inc
sahf
add
dec
dec
dec
inc
sub
icebp
xlat
add
jecxz
adc
sarl
fsubr
pop
adc
cltd
lods
sbb
repz
clc
lds
dec
std
jmp
es
cmp
leave
in
das
or
pusha
jl
mov
imul
and
lods
push
mov
inc
sbb
jae
lcall
push
mov
jl
pop
popf
mov
clc
lea
std
mov
mov
mov
in
adc
sub
ja
pop
test
ficomps
sub
ret
loope
and
sbb
ds
and
mov
inc
inc
jbe
xorb
or
adc
cmpsl
aas
mov
icebp
cltd
pop
orb
dec
insb
push
fcomps
imul
mov
pop
fidivs
sahf
popa
adc
pop
movsl
pop
xorl
cmp
dec
xor
add
rolb
adc
and
xor
lods
cmp
sbbl
or
sub
jecxz
sahf
mov
or
and
mov
repnz
fdiv
or
jne
ret
mov
mov
xor
mov
mov
push
imul
or
in
cmp
cmp
int3
pop
jne
inc
push
sbb
comiss
mov
xor
xlat
pushf
add
adc
mov
test
or
pop
or
ljmp
fdivs
jmp
push
icebp
push
xchg
ds
jno
in
push
call
cld
pop
mov
mov
xchg
bound
dec
and
loopne
cmp
imul
jmp
mov
test
scas
sub
hlt
or
movsb
fists
cmp
xor
mov
push
fdivr
sub
lea
out
mov
movsl
sbbb
icebp
or
cmpb
ds
das
in
mov
scas
ljmp
mov
xor
cs
fbld
movsl
out
movsl
push
jb
je
mov
sbb
sub
test
out
mov
jmp
les
pop
fchs
test
repz
or
adc
cmp
ret
inc
mov
in
xchg
cmc
push
pop
out
loopne
mov
adcb
inc
incb
or
xchg
adc
pop
lahf
adc
mov
pusha
imul
xlat
and
xor
lods
inc
loop
lcall
dec
sahf
and
cmc
jl
or
jg
and
or
imul
scas
popf
pushl
jmp
jl
push
ja
push
popa
ljmp
inc
pop
sti
sbb
rcr
inc
std
cltd
loop
cmp
cmc
jmp
pop
imul
cmp
adcl
cmp
test
or
xlat
loope
adc
stc
enter
aam
jmp
jbe
cmp
sub
ja
mov
mov
in
loope
or
and
ficompl
ljmp
icebp
rcrb
test
jnp
movsb
rol
add
fsub
ret
or
push
incb
mov
add
xor
and
mov
dec
lret
int
sbb
shlb
pop
rcr
sbb
cmp
mov
jo
jmp
arpl
or
in
loope
mov
in
lret
pop
sbb
dec
mov
or
sbbb
fdivrl
mull
push
divl
int3
pop
push
sbb
mov
into
sub
cmpsb
mov
popf
push
pushf
mov
popf
movsb
mov
dec
lahf
pop
sbb
xor
mov
insl
sbb
cmp
jo
in
mov
stos
in
fdivr
or
push
xlat
adc
jb
cmp
jo
jg
mov
std
dec
decb
inc
loop
scas
mov
fcmovne
xor
and
imul
adc
mov
pop
stc
shlb
sbb
mov
push
lods
adc
out
dec
mov
std
xchg
jmp
int3
jmp
dec
mov
je
inc
inc
and
ret
fnstenv
xlat
inc
fnsave
mov
std
cwtl
lcall
sub
enter
cld
subl
es
stc
aad
std
mov
xor
jns
ret
jmp
loopne
mov
inc
pop
sbb
movsl
and
cmp
and
adcb
push
aam
movsb
loopne
or
jnp
repnz
aas
fwait
lret
sbb
and
leave
insl
int3
mov
aad
loop
sbb
and
fsubp
test
inc
int
fdivrl
mov
inc
ljmp
and
fs
jecxz
mov
inc
pop
pop
mov
jmp
push
jne
sub
inc
sub
data16
inc
rolb
pop
aas
dec
shl
mov
cmpsb
jb
movsl
adc
push
cmp
in
or
lret
in
push
inc
mov
ret
fstp
pop
push
and
mov
test
outsb
push
and
push
cmp
pop
sbb
imul
adc
ja
mov
test
fsts
jbe
mov
movsb
or
or
daa
arpl
loop
xor
sbb
addr16
pop
pop
fmuls
ds
fists
sbb
xchg
in
cmp
data16
test
fists
mov
sub
push
or
lcall
lcall
and
or
popa
xlat
push
jge
sbb
outsl
sarl
xchg
sbb
add
adc
dec
call
mov
sbb
fimull
hlt
dec
sub
sbb
je
je
jno
and
mov
es
xor
jge
lcall
lahf
jle,pt
dec
or
int
jnp
lret
cmc
inc
sub
xor
call
pop
cmp
jb
push
push
jl
jb
in
xchg
mov
leave
ret
lds
cli
sub
repz
pushf
cmpsl
aaa
xchg
push
in
dec
scas
fnstenv
mov
adc
arpl
inc
je
or
out
das
aam
aas
mov
mov
jns
adc
ja
inc
jno
lret
xchg
xchg
add
cld
jle
notl
scas
mov
add
mov
pop
jo
aas
lret
lods
sti
dec
sbb
jp
xchg
xchg
outsl
gs
sti
mov
mov
jle
jl
test
mov
and
jg
dec
cld
cwtl
ljmp
fcompl
and
jb
sbb
lock
mov
sbb
lods
aas
mov
test
les
outsb
movsb
jg
lahf
dec
mov
mov
mov
jb
add
lret
imul
rcr
int3
and
push
sub
bound
test
ret
popf
js
xor
jb
int3
sbb
mov
addr16
js
jl
add
push
mov
movsl
pushf
sub
mov
sbb
mov
in
shl
mov
shlb
outsl
shrb
add
lods
cmp
shrb
inc
xchg
inc
movsb
add
out
sbb
jmp
iret
mov
dec
popa
cmpsl
xchg
mov
out
clc
in
sarb
fisubs
fdivs
sbb
mov
sbbb
jo
mov
lahf
aas
sti
sar
jle
mov
mov
xorb
cmp
out
mov
lcall
push
aam
or
in
ja
inc
dec
sarl
adc
addl
sbb
je
sti
jg
int
cmpsl
mov
gs
ret
pushf
and
outsb
pop
jg
pop
hlt
mov
mov
das
adc
jb
and
fwait
or
and
mov
mov
lods
ret
and
addb
mov
jns
sub
or
shl
es
jg
les
pop
push
cmp
insb
mov
mov
adc
fs
sbb
lret
xchg
inc
subb
pop
in
lea
mov
ds
es
push
ret
aam
repz
push
mov
movsl
imul
call
inc
adc
sti
mov
add
outsl
enter
add
inc
ret
add
xor
push
imul
lret
xchg
jmp
mov
outsb
sti
mov
aam
sbb
dec
aaa
inc
inc
fs
repz
inc
dec
pop
xchg
mov
fcomps
enter
xchg
push
jmp
mov
mov
sarb
xorl
add
leave
fdivrp
sub
xchg
pop
lods
je
push
fcoml
fdivrl
push
data16
pushf
lret
daa
les
push
lods
cwtl
in
mov
push
fwait
sbb
or
add
xor
mov
int
mov
or
push
rorl
xlat
addr16
aad
push
xor
enter
insl
dec
stos
xor
mov
adc
aad
jnp
arpl
dec
inc
rorl
sahf
dec
sub
cmp
cs
das
lock
push
ret
clc
mov
loopne
movsb
add
or
cmp
pop
or
lret
lea
or
pushf
shrl
call
das
adc
movl
pop
setns
lods
cmp
jl
in
jmp
pushf
sub
aas
xor
jecxz
ds
add
pop
out
pop
jae,pt
addr16
dec
jge
and
sub
xor
add
mov
add
lock
dec
and
in
push
loope
mov
cmp
ljmp
sub
sub
es
sub
xor
dec
xchg
inc
mov
push
and
push
sub
arpl
mov
pop
xchg
inc
ss
lds
jp
std
cld
push
push
test
imul
sbb
push
cmpsb
adc
jo
jns
push
or
enter
scas
pop
idivl
cmp
lret
shrl
or
push
fsubs
dec
xchg
xor
rcrb
clc
xor
insl
dec
out
ret
sub
leave
inc
xchg
dec
ja
aaa
movsb
loop
sbb
inc
inc
scas
jle
dec
dec
mov
jnp
aas
inc
add
loopne
cli
cmpsl
sub
dec
cmp
fwait
bound
add
push
or
ja
jbe
xchg
fdivs
dec
gs
in
loopne
jns
orb
mov
ja
in
mov
in
scas
xchg
mov
lds
lods
jge
test
pop
xchg
ja
mov
loopne
xchg
add
std
fs
sub
add
repz
loopne
test
gs
sbbb
xor
sub
lods
pop
aas
xor
xchg
clc
arpl
gs
push
dec
mov
adc
pop
loopne
js
loop
stos
xchg
test
jnp
insl
xlat
hlt
and
ret
mov
jg
xor
pop
mov
sub
icebp
sub
jb
ljmp
add
in
and
loope
sbb
mov
sbb
and
pop
mov
hlt
stc
xor
pushf
out
xchg
jo
and
pop
cmp
scas
stos
push
mov
rorb
imul
xor
xchg
jmp
daa
in
andl
shll
mov
cmc
lods
outsb
mov
cmc
orl
xchg
xor
out
pop
je
jp
stos
mov
xchg
adc
fiaddl
movsl
dec
inc
fwait
add
sub
mov
xchg
aad
mov
leave
iret
mov
addb
in
aam
dec
sbb
sub
or
scas
imul
cmpsl
mov
cmpl
cli
jp
pop
repnz
lret
outsl
push
cmp
ret
adc
jne
jne
xchg
lock
ss
mov
inc
mov
adc
lods
daa
vmovq
mov
shll
or
loope
aas
dec
xchg
repnz
movl
fwait
xor
jae
cs
mov
add
je
mov
add
mov
xchg
push
adcb
mov
push
les
js
xchg
sti
int
push
out
adc
xor
dec
push
xchg
jg
sbb
mov
xchg
popf
mov
out
sbb
rcrl
pop
lods
cli
dec
inc
sub
pop
movsb
call
and
lods
mov
mov
fs
mov
xor
dec
push
in
mov
jno
pop
in
int
jp
inc
sbb
add
dec
and
jno
sub
in
push
mov
jae
cmc
rcll
xchg
add
ret
fnstenv
and
xor
pop
cmp
jecxz
jmp
sub
addb
lret
pop
subb
je
inc
cld
bound
mov
mov
adc
xchg
and
mov
in
inc
setno
or
sbb
enter
scas
cmpsb
ret
lock
sbb
test
inc
jl
xor
cmp
push
mov
stc
movsb
or
es
and
aaa
scas
fs
gs
sarl
adc
dec
mov
jnp
test
pushf
stos
pop
cmp
or
inc
or
nop
stc
adc
lcall
dec
shlb
aad
in
push
ret
mov
pusha
inc
insl
push
and
scas
subl
sub
inc
jae
pop
push
in
shll
lds
jmp
or
sub
cmp
mov
push
xchg
cmp
fdivl
mov
dec
mov
fidivrl
outsb
and
dec
adcl
jge
xchg
or
loop,pn
outsl
sub
in
adcb
push
fiadds
popf
aad
mov
lcall
inc
sub
cmpsb
mov
sbb
iret
mov
pop
sub
fs
xchg
jbe
in
fsubs
enter
pop
filds
xor
aaa
cmp
dec
fcomps
lcall
jns
mov
sti
in
jbe
insb
jmp
add
sub
aam
or
mov
and
jp
mov
mov
mov
cmc
scas
pop
pop
std
lret
cs
jmp
idiv
clc
sub
nop
pop
inc
lods
xchg
xchg
pop
xor
loopne
std
pop
in
or
mov
xor
fcompl
filds
pop
mov
mov
sbb
mov
jmp
push
push
enter
imul
xorb
xor
and
dec
test
mov
das
mov
in
pop
mov
iret
addr16
xor
add
in
inc
outsl
repz
cmc
adc
xchg
jmp
lea
or
in
push
stos
and
ss
je
pop
sub
mov
inc
fimuls
inc
mov
jecxz
cmpsl
push
jns
cmpsb
mov
mov
cmpsl
sbbl
std
in
outsl
lock
rol
pop
in
lods
pop
and
mov
aad
xor
jae
ret
js
pop
jae
insl
fisttps
rcrl
pop
inc
sub
sbb
xor
pushf
pop
jmp
data16
in
dec
add
cmpsl
mov
lea
mov
andl
mov
xchg
push
xchg
sub
repz
xchg
push
adc
xchg
and
aad
xor
loopne
sbb
mov
outsb
push
cld
inc
adc
shr
lret
mov
add
add
mov
pop
test
xlat
and
push
adc
ret
rclb
cmp
pop
int
and
or
addl
in
clc
pop
sub
lods
push
dec
dec
test
pushf
add
sub
stc
stc
sub
mov
scas
jno
mov
pop
imul
sbb
jbe
pop
mov
mov
ret
or
mov
cs
mov
adc
pop
push
iret
adc
rcll
add
decb
sub
xorb
sub
aas
dec
inc
jnp
push
lcall
pop
cltd
lea
inc
and
cmp
sub
xchg
sbb
mov
push
cmpsb
and
shlb
adc
sbb
xchg
inc
sbb
or
sbbb
inc
std
push
mov
fxch
outsb
sbb
enter
popl
adc
cwtl
push
in
sub
sahf
push
cmp
adc
push
pusha
bound
sbb
and
icebp
jbe
aas
jl
insl
or
rcrb
scas
neg
and
jge
cmp
arpl
cs
ficompl
jae
cwtl
ja
mov
jbe
pushw
stos
mov
pushf
sub
pop
shll
xchg
pop
dec
fwait
sub
into
mov
jnp
clc
pop
adc
sub
imul
dec
and
jg
dec
daa
inc
sub
push
int3
scas
lods
fistpll
adc
stos
lea
es
std
repz
fs
lcall
sbb
cmp
lahf
and
push
or
mov
cs
xchg
out
or
aaa
xor
pop
mov
or
mov
cmp
push
repnz
sbb
out
and
icebp
cmp
or
data16
and
dec
cli
sub
add
test
pop
cmp
jmp
mov
xchg
fldt
jp
negb
hlt
push
icebp
lret
push
cli
ds
roll
jno
addr16
mov
mov
in
icebp
aam
and
cli
insb
je
jbe
pop
daa
ret
lods
xchg
out
jnp
sahf
rcpps
sbb
pop
sub
xchg
sub
lods
call
dec
cld
mov
lahf
jge
scas
fdivrs
lods
jnp
popf
dec
pop
int3
popf
mov
adcl
inc
lret
jmp
hlt
ljmp
rcrb
ss
push
mov
loope
sub
and
mov
inc
cmp
cwtl
xor
xchg
inc
adc
cmp
pop
in
test
ss
loop
sub
dec
sub
mov
push
or
inc
xchg
ss
xchg
sbbb
cmc
and
lods
inc
shlb
inc
or
leave
aaa
lods
fnsave
and
xchg
push
int3
dec
cmpsb
mov
cli
repnz
cmp
jmp
imul
out
jne
rep
enter
test
cltd
popf
push
ret
in
dec
sub
add
loopne
ja
ret
stos
dec
mov
xchg
nop
mov
mov
mov
mov
test
inc
test
repnz
sbb
mov
in
dec
inc
shr
test
mov
les
pxor
nop
je
jb
sub
add
xor
aaa
push
dec
or
adc
inc
in
mov
test
test
fisubs
iret
pop
aad
shlb
in
mov
mov
pop
fwait
mov
lret
cltd
rcll
mov
jae
cld
add
imul
and
push
sbb
notb
je
cli
or
xor
cmp
pop
cwtl
inc
pushf
fisubrs
lock
mov
pop
flds
mov
orb
xchg
rcl
std
sbb
xor
mov
fs
xchg
mov
and
pop
lret
sahf
iret
jge
mov
leave
cli
xor
mov
sub
add
or
xlat
pusha
out
pop
pop
sbb
push
fldt
pop
ret
movsl
testb
dec
cmp
repnz
pop
xor
sub
inc
mov
in
jp
test
push
cmpsb
push
repz
ss
idivb
mov
and
xor
jb
clc
xor
test
mov
test
sbb
rcll
gs
jle
out
int
enter
int
inc
jge
inc
icebp
lea
add
out
xor
stos
iret
inc
pusha
dec
daa
callw
iret
ja
and
cmpsb
dec
in
dec
les
test
je
jmp
iret
mov
push
addr16
icebp
enter
ds
les
ss
fstpl
ret
pop
testb
popa
dec
daa
sub
ss
gs
in
inc
iret
test
cmp
push
add
pop
mov
mov
dec
jno
mov
std
or
incl
adc
out
sbb
iret
shll
pop
mov
and
cmp
decb
cwtl
notb
ljmp
rorb
iret
inc
pop
mov
leave
repnz
xchg
icebp
hlt
ljmp
fistpl
sub
shl
lds
daa
mov
fbstp
xor
ret
fstl
in
mov
es
or
lods
test
add
lahf
jbe
test
or
push
inc
pusha
or
loopne
insb
jae
push
ret
fiaddl
sub
and
jae
gs
stos
or
enter
dec
ja
das
in
or
mov
outsl
xchg
ss
lods
xchg
push
mov
add
or
add
or
stc
push
ss
and
mov
or
arpl
pop
pushf
out
rcr
inc
mov
sbb
and
jl
cmc
cli
jo
add
dec
sti
mov
in
cli
lahf
popa
test
jge
dec
inc
gs
outsl
adc
test
add
repnz
jle
add
inc
jns
loop
xlat
dec
aad
mov
hlt
jecxz
sub
outsb
inc
out
stc
jne
sti
push
jmp
cltd
add
lret
mov
bound
pop
pop
cltd
leave
lret
or
xchg
lret
loop
xchg
sub
mov
cmp
cmpsb
idivb
sub
pop
idivb
xchg
ljmp
sub
roll
imul
sbb
pusha
adc
enter
dec
cmp
test
cld
in
out
shll
stos
push
jns
ss
pushf
pop
fmul
fistl
add
jmp
mov
mov
cld
cmp
push
and
add
mov
outsl
cltd
inc
fwait
xchg
xchg
push
loopne
faddl
pminsw
mov
push
fdivrs
jbe
rorl
lock
jecxz
cmp
into
sub
push
xor
fldl
mov
dec
out
mov
int3
push
addl
xor
lock
jp
xchg
lea
push
sub
xchg
mov
jo
loopne
aas
gs
jp
lods
leave
call
jge
out
mov
pop
outsl
sub
je
jle
pop
cs
int
aas
js
enter
pop
pop
test
out
jno
mov
jl
mov
repnz
cli
lret
cmpb
mov
cmp
movsb
int3
std
sbb
cmp
addr16
int
negb
xchg
rcr
pop
je
and
fisttpll
jle
xchg
jne
out
incb
out
pop
jo
ret
or
clc
aas
stc
mov
ja
inc
pushf
jb
mov
mov
xor
sbb
cltd
das
imul
jns
jge
les
xor
and
pop
aas
loope
cmp
sbb
cltd
sub
sbb
dec
rclb
add
mov
jge
push
inc
and
daa
repz
push
xor
je
out
xchg
dec
inc
mov
mov
xor
ret
outsl
enter
or
pop
add
push
add
inc
int3
mov
inc
cmp
ljmp
sahf
xchg
iret
add
sbbb
gs
or
test
fdivs
sbb
outsl
lods
and
cmp
or
add
repz
jmp
lahf
xlat
rcrl
les
mov
lcall
imul
ss
stos
sub
cmp
push
dec
cmc
sti
mov
adc
rcr
push
movsl
popa
or
icebp
ja
cmpsl
les
xchg
fldl
push
xchg
cmp
outsb
ss
dec
leave
jl
inc
mov
mov
stc
or
popa
jne
subl
inc
xchg
and
in
sub
inc
test
mov
movsb
or
cmp
inc
pusha
popa
jecxz
xsha1
cmpsb
dec
fmul
mov
adc
rcrl
mov
out
add
mov
fbstp
cmp
les
jge
inc
pushf
dec
lret
mov
movsl
mov
inc
jecxz
insb
movb
dec
sbb
stc
and
adc
xchg
test
xchg
lret
sub
mov
testb
jo
icebp
xchg
and
sub
cmp
leave
xor
roll
hlt
sub
add
sub
outsb
sub
fistps
dec
fimuls
lds
gs
pop
dec
pop
jg
mov
aad
ja
orb
dec
mulb
cmp
sub
out
pop
cmp
lahf
test
faddl
enter
outsb
dec
pop
cld
inc
jns
push
scas
mov
test
js
inc
dec
add
addr16
es
or
pop
jnp
cmpl
xchg
xchg
in
in
fcmovnu
lahf
loope
mov
ja
xlat
add
sti
xor
loope
push
sbb
fcmovnu
mov
cmpsl
add
mov
mov
lods
fsub
movsb
frstor
jns
push
in
ja
mov
mov
mov
sbb
scas
xchg
sar
push
xchg
adc
and
loopne
push
in
stc
ds
mov
push
mov
cmpsl
hlt
ret
cmc
sbb
outsb
add
fisubs
and
les
and
push
mov
fidivrs
pop
cmpsb
mov
cmp
mov
sbb
sahf
push
or
addr16
stos
push
rolb
dec
scas
jo
lds
imul
inc
je
iret
popf
pop
mov
rolb
pop
sarb
jo
xor
pop
push
push
push
cmp
sub
or
push
pop
or
adc
sub
jle
xlat
pop
jo
popf
in
and
cmp
push
data16
and
xor
shrl
jbe
mov
cmp
cli
stos
xor
dec
sbbb
clc
sub
cmpsl
jns
xchg
mov
fmulp
jbe
jb
loopne
pusha
push
addr16
faddl
xchg
out
lock
iret
pop
or
sbb
cmpsb
hlt
push
fisubl
and
insl
das
clc
enter
movsl
jp
mov
imull
jl
hlt
mov
iret
lcall
icebp
add
enter
mov
push
repnz
out
fwait
scas
mov
fsubrs
je
lds
clc
ss
test
xor
push
movsb
divl
cmp
cmp
and
rorb
fwait
leave
dec
pop
lods
mov
mov
mov
cmp
imul
mov
inc
rcr
popa
in
pop
fucomip
mov
out
fsubs
imul
push
xchg
mov
lds
cmc
in
in
lods
fisubs
pop
idiv
mov
loop
insl
fildll
xchg
dec
jo
clc
nop
data16
aas
lods
or
add
or
mulb
mov
pop
cli
mov
sub
loop
add
scas
icebp
inc
cmp
push
mov
jo
sbb
mov
mov
xchg
xchg
add
cltd
out
xlat
inc
inc
adc
inc
lods
xchg
jne
push
mov
inc
jne
hlt
mov
hlt
xorl
dec
sbb
shl
sub
into
mov
inc
dec
lahf
cli
mov
inc
lret
jmp
mov
out
gs
inc
lcall
and
out
sbb
and
and
inc
in
lret
mov
pop
aas
std
inc
xor
mov
in
repz
dec
hlt
out
adc
push
adc
dec
sub
movsl
adc
mov
mov
push
xchg
dec
xlat
lds
aas
bound
loop
dec
xchg
int
and
imul
inc
aam
sub
int3
sti
xchg
xor
dec
outsl
test
and
sbb
cld
dec
ljmp
loopne
imull
sbb
test
fcompl
xor
aaa
pop
outsl
in
call
cld
push
push
add
mov
jl
insl
insb
add
sarb
and
clc
inc
dec
sub
in
inc
cwtl
fdivrs
and
fldcw
lea
push
sarl
fsubrl
and
cmp
and
in
ss
jmp
call
mov
in
lahf
nop
gs
sbb
imul
pop
dec
out
dec
sub
mov
mov
outsl
mov
fnstsw
out
push
or
adc
in
pop
mov
mov
popf
xchg
insb
or
out
mov
pushf
xchg
ss
insl
jge
ss
sti
hlt
repz
dec
in
cli
jns
mov
cmpsb
enter
jmp
imul
gs
loope
cltd
ret
lret
jbe
pop
jnp
pop
iret
cmp
xor
movsl
pop
push
pop
out
cld
push
dec
add
clc
inc
hlt
jno
rcr
cmp
xchg
fsubp
lds
imulb
ja
and
unpcklps
sub
lds
cld
stos
insl
push
dec
jbe
dec
push
dec
cmpsl
inc
fs
pushf
xchg
sbb
xor
lds
push
mov
xchg
data16
add
mov
es
outsl
dec
ljmp
test
out
add
out
cmp
lahf
nop
ret
mov
add
mov
push
inc
std
add
test
ret
mov
jmp
lods
rolb
hlt
mul
or
clc
adc
outsl
lock
pushf
cmp
xor
in
pop
pop
test
cmc
mov
aas
shlb
inc
mov
pop
arpl
mov
push
push
mov
shlb
mov
es
cltd
in
xchg
sbb
push
sbb
ds
mov
ljmp
push
fsts
or
dec
or
gs
aaa
call
pop
cmp
jge
cmp
jbe
sbb
push
mov
push
enter
fwait
cltd
inc
rcrl
cbtw
stos
inc
rolb
bound
mov
faddp
and
sub
xlat
push
int3
push
mov
xchg
fstl
mov
popa
push
mov
mov
rcl
cmp
in
or
sub
xchg
jno
pushf
cli
arpl
or
push
fisubrs
xchg
loope
ret
and
divl
inc
movb
cwtl
movsl
mov
std
insb
jecxz
int
sub
flds
cmp
std
or
lret
ret
andl
push
movsb
fwait
jmp
xlat
ds
sub
ja
and
pop
xchg
imul
imul
test
in
xchg
loope
lret
xor
cwtl
ss
imul
dec
xor
push
push
adc
push
into
jmp
insl
rcrl
movl
gs
xor
icebp
dec
ds
or
jae
inc
clc
jl
dec
or
cmc
and
outsl
sub
sbb
aad
xor
imul
mov
and
pop
dec
sti
into
mov
cmpb
arpl
push
adc
testl
adc
and
mov
test
xor
imul
cmpsl
cwtl
in
and
mov
sets
ret
and
or
outsl
in
dec
adc
lea
outsb
stos
add
adc
cli
pop
insl
clc
mov
mov
pop
cmpsl
int
xor
mov
hlt
rcll
push
stos
dec
inc
clc
aas
xchg
scas
inc
mov
mov
pushf
mov
popf
pusha
sahf
std
iret
xlat
gs
std
push
lods
xchg
cmp
pop
lods
test
dec
sahf
sub
inc
jbe
mov
mov
add
icebp
inc
sahf
jns
lea
push
inc
and
das
sbb
jnp
cmc
movsl
jg
pop
mov
push
in
inc
mov
mov
pop
imul
mov
imul
lret
or
push
es
push
and
lods
out
lcall
and
inc
pop
mov
std
mov
scas
pop
push
nop
add
add
add
mov
cmp
or
cmp
adc
and
xchg
cmp
xlat
jg
cltd
mov
inc
mov
sbb
and
xlat
push
and
mov
subl
in
nop
mov
ret
and
call
lods
arpl
dec
xlat
lods
push
cmpsb
test
popa
xchg
mov
cli
popa
mov
cmp
rcr
pop
push
jae
add
jg
scas
stc
das
sub
xchg
divb
aad
sub
add
pinsrw
std
mov
outsb
sub
inc
mov
add
push
repnz
in
clc
jg
packssdw
cltd
cmp
xchg
and
popf
jbe
jo
jo
sbb
and
mov
dec
incb
fimull
movsl
jmp
jae
loope
sbb
mov
add
or
in
shl
sarl
lea
cli
scas
inc
adc
cli
popf
sub
lahf
dec
jns
std
sub
movsl
mov
push
mov
fldcw
add
xchg
mov
movsl
xor
sub
test
test
pop
scas
sub
test
xchg
mov
xchg
rcrl
imul
inc
jmp
jecxz
pop
scas
pushf
mov
out
clc
xor
add
cwtl
xchg
cmpsb
mov
aas
idivl
mov
daa
scas
pop
roll
popl
div
stos
fwait
add
jge
xor
cli
inc
fisttpl
into
cmp
adc
iret
enter
fs
and
in
or
jno
cltd
inc
rolb
dec
incb
into
ds
jnp
in
and
fbstp
jo
repnz
popf
je
pop
mov
jge
addr16
add
test
xchg
jmp
dec
stos
das
add
xlat
jge
imul
add
mov
ljmp
out
push
daa
jb
mov
popa
movsl
fmuls
les
mov
daa
mov
pop
lods
pop
and
subb
adc
sub
mov
les
mov
jge
xchg
mov
inc
shl
mov
add
mov
dec
jl
in
and
xchg
adc
push
jns
stos
jae
jmp
and
pop
lods
lods
das
pop
jge
add
inc
je
sub
leave
or
add
cmp
jno
hlt
xchg
fistpll
mov
add
mov
push
je
xor
push
lcall
push
gs
lret
loopne
scas
add
imul
and
or
rolb
cmpsl
stc
or
mul
inc
xor
and
fisubl
pop
lock
push
outsl
add
dec
inc
mov
scas
ret
jp
add
push
ds
insl
xor
mov
xchg
std
imulb
and
loope
or
je
mov
adcl
sub
sub
loope
out
jg
push
test
es
mov
stc
lods
icebp
pop
sbb
arpl
hlt
and
jge
push
mov
or
add
movsb
xchg
inc
adc
pusha
add
out
xchg
enter
sbb
int
je
mov
fs
mov
inc
addb
xor
nop
les
push
and
rclb
in
mov
xor
mov
lea
jno
push
sub
fcomp
mov
mov
aad
les
jle
mov
dec
lock
lret
or
movsl
mov
push
test
jns
xor
int3
pushl
or
addr16
add
mov
out
decl
ret
jno
into
jo
cmp
inc
scas
or
push
das
rcrl
jl
mov
roll
or
sbb
ja
pop
cltd
sti
mov
xchg
adc
icebp
sbb
mov
out
js
hlt
push
mov
les
mov
add
inc
je
jne
mov
in
adc
adcl
out
push
push
call
fists
out
cmp
xor
ja
push
pop
sbb
push
pop
mov
push
and
fildl
push
inc
mov
leave
mov
repz
pop
adc
pop
mov
jle
inc
xlat
shll
jae
and
insl
or
fstpt
mov
sahf
sub
aaa
stc
fists
or
inc
jl
cmp
sub
aad
push
inc
test
mov
mov
inc
sar
inc
inc
mov
add
mov
insl
out
dec
cs
test
jbe
leave
mov
js
pop
stc
adc
enter
or
cmp
leave
in
cmc
push
xor
cmp
jg
dec
pop
bound
inc
nop
sub
arpl
jl
jmp
js
fwait
dec
int3
mov
inc
push
jbe
jmp
xor
jnp
nop
iret
adc
dec
jne
inc
aaa
out
pop
xor
dec
adc
mov
lret
leave
mov
or
mov
pop
push
ret
sarb
in
pop
fbstp
sarb
xchg
loopne
xchg
aaa
sub
js
fdivrl
mov
mov
cmc
ljmp
popf
push
loope
nop
mull
movsl
loope
cltd
lret
push
shrb
jo
or
xchg
and
push
mov
jp
mov
cmc
pop
or
add
loopne
mov
lea
jmpw
sbb
dec
mov
cmpsl
push
jle
xor
fnsave
push
push
mov
dec
lock
in
scas
shll
cmpl
fstps
mov
sbb
pop
jge
dec
aas
int
push
pusha
xchg
jae
push
add
jae
and
mov
cld
lods
or
cmp
fldt
pop
dec
jle
lock
pop
xchg
in
scas
xor
sbb
int3
test
push
cmp
pop
gs
into
pop
into
or
mov
outsb
repz
gs
mov
adc
pop
sub
mov
mov
dec
add
imul
and
xchg
sbb
adc
pop
int3
sahf
push
mov
enter
jecxz
dec
mov
lock
adc
andl
cmp
pushf
movsl
push
xchg
push
mov
sbb
mov
repnz
in
pop
fisttpll
cmp
mov
rcr
fisubl
popf
push
mov
mov
fsubs
pop
inc
ss
sub
xor
fmul
stos
stc
and
add
lret
popa
dec
aaa
sarl
adc
push
ret
andb
and
jmp
dec
add
inc
sbb
adc
mov
pop
sbb
pop
pop
dec
pop
movsl
jp
cmp
cmp
out
sbb
mov
sti
and
dec
cmp
mov
add
cmp
jecxz
je
arpl
xchg
dec
pushl
cwtl
jp
xchg
pop
pushf
arpl
mulb
shll
lock
inc
movsl
movl
mov
jnp
mov
ljmp
jp
outsb
push
scas
adc
ss
sbb
push
lahf
inc
mov
and
roll
mov
jle
sub
dec
pop
iret
repz
xor
sbb
adc
jg
ds
jg
rorl
pushf
cmpl
in
mov
jle
jl
and
jg,pt
pop
scas
fnclex
push
cmp
xchg
adc
js
rcrl
mov
fwait
push
ds
adc
adc
xchg
fisttpl
out
pop
js
repnz
adc
out
add
xlat
cmp
xor
lcall
or
cltd
jp
cltd
pop
and
xor
clc
shrl
dec
out
cmc
inc
addr16
in
imul
and
add
mov
shlb
lods
mov
lret
bound
insb
lea
or
xchg
ljmp
xchg
push
les
adc
adc
add
cmp
movl
pop
mov
push
sub
cmpsb
insl
lahf
mov
sub
add
push
mov
int3
cmp
xor
aas
testl
ret
sub
xchg
push
jg
jle
in
jmp
out
xchg
int3
out
cmp
dec
and
xchg
sub
mov
aad
icebp
ds
and
add
jp
mov
leave
outsl
pop
mov
cli
out
cmpl
inc
mov
stos
pop
lret
shlb
test
jbe
dec
test
adc
push
sub
fimuls
mov
insb
lret
nop
mov
or
cmp
push
dec
pop
push
out
sub
and
push
dec
mov
shrl
cmp
jg
out
hlt
add
fsubrs
cld
or
mov
in
js
cmp
or
inc
mov
sti
xor
adc
mov
not
lods
mov
pushf
jle
push
pop
aad
out
inc
sub
xchg
xchg
pop
aam
lods
xor
xchg
filds
sbb
xlat
lds
xchg
dec
push
aas
or
aas
or
push
sahf
sti
fldenv
aaa
adc
xlat
idivl
and
jle
xchg
fs
addr16
mov
out
imul
pop
ret
mov
xchg
cmp
es
scas
dec
push
loopne
movsb
clc
fadds
pop
jmp
or
out
pop
sub
jg
sbb
inc
dec
fists
mov
xor
fsub
mov
fstp
and
mov
repnz
mov
inc
sub
sub
xchg
hlt
pop
jg
jg
es
push
stos
lret
daa
mov
fcoms
inc
test
repnz
repnz
clc
pop
xor
xor
orb
into
por
int
ljmp
xor
mov
push
mov
hlt
aad
mov
inc
xor
aaa
mov
std
mov
pushf
inc
into
inc
into
add
mov
and
aas
cmp
cli
arpl
lcall
jb
xchg
rcrl
mov
mov
mov
mov
test
and
or
mov
sbb
mov
stos
mov
pop
sub
cmp
and
xor
dec
shl
adc
test
iret
cmp
in
insl
inc
daa
dec
test
jne
xor
test
cmp
test
stos
clc
xorl
iret
sub
scas
dec
addr16
inc
xchg
not
out
cmpsl
inc
add
aaa
adcl
inc
and
inc
sbb
imul
ljmp
xchg
push
push
and
dec
mov
in
stos
lret
push
fisubrs
dec
pop
or
dec
adc
fsubs
xor
push
je
loope
mov
mov
jmp
call
sub
fldenv
dec
fwait
out
xchg
cmpl
mov
lods
push
ds
in
loope
or
jp
insb
mov
jp
popf
mov
shlb
inc
xor
dec
cmp
addr16
pusha
out
nop
insb
je
cmpsl
stos
es
cmp
add
rcll
mov
cld
sub
movsb
adc
bound
loop
mov
inc
in
cmp
cld
mov
lret
or
or
pop
dec
rcr
sub
loop
cmp
cltd
sub
mov
outsl
add
adc
aas
xchg
dec
cmp
daa
mov
cli
leave
mov
xchg
jmp
ficompl
mov
lcall
dec
js
outsb
add
ja
xchg
in
pop
xlat
inc
sahf
adc
adc
mov
popaw
adc
jb
aas
test
ret
inc
fs
push
sbb
adc
and
jl
outsb
movsl
mov
mov
aad
dec
add
into
es
pop
leave
push
mov
loop
xlat
lret
push
cmpsl
lea
adc
mov
cli
pop
js
adc
push
leave
rorb
mov
dec
jge
add
xchg
inc
mov
insb
loop
and
cmp
sahf
ljmp
pop
cld
lcall
movl
adc
mov
dec
xchg
out
mov
pinsrw
fistpl
stos
pop
std
fsubr
js
sahf
dec
cmp
jnp
lcall
js
ret
xchg
cmp
sbb
pop
mov
inc
mov
push
xchg
sbb
andl
out
cmp
pop
imul
pop
fnstcw
jge
loopne
inc
dec
add
imulb
mov
rcll
or
pop
aaa
es
mov
push
iret
jne
xor
adc
lea
cmp
in
out
stc
cmp
cmp
insb
mov
pop
cmp
stc
adc
adc
nop
bound
cs
scas
in
hlt
mov
inc
mov
ret
sub
xor
jb
jbe
mov
addr16
adc
daa
push
mov
jb
cmc
fst
ja
repz
mov
inc
cltd
mov
jo
mov
or
jmp
add
fidivs
jle
sub
popa
pop
ja
ja
stos
scas
rolb
fwait
sub
push
jp
mov
scas
lcall
jmp
fucomp
lcall
into
pop
test
aad
insb
pop
insl
mov
cwtl
loopne
movsb
cs
orb
lret
sub
push
rcrl
or
sbbb
mov
mov
mov
xor
enter
adc
movsb
mov
or
xchg
rclb
leave
jp
imul
sbb
fstps
les
movsb
loop
outsb
and
insb
and
imul
out
loope
or
mov
ret
jae
and
mov
cmp
ret
orl
push
pop
in
pop
aaa
sub
jp
dec
imul
je
jne
in
imul
mov
imul
jbe
or
int
stc
sbb
ret
ja
roll
stos
out
ljmp
jo
mov
fldl
aam
mov
lock
mov
mov
cmp
cmc
adc
mov
dec
mov
addb
notl
mov
push
dec
push
xchg
xchg
incl
dec
lods
imul
mov
test
repnz
and
cmc
inc
mul
test
adc
or
pop
dec
pop
dec
cld
stos
push
cltd
sub
iret
mov
dec
js
scas
dec
mov
xchg
clc
lock
cwtl
ja
ja
and
pop
repz
mov
outsl
cmp
mov
loope
push
notl
cld
xchg
mov
jne
push
insb
mov
stos
ret
dec
jge
mov
dec
ret
fisttpl
pusha
incb
or
es
in
cmc
add
imul
imul
rclb
fnsave
jnp
mov
push
sahf
lcall
xchg
pop
or
sub
fwait
push
mov
push
push
int3
xlat
or
test
xchg
sub
push
shrl
imul
or
adcb
mov
sahf
jb
jle
sbb
std
sbb
insb
cmp
jns
xchg
push
scas
add
hlt
push
lcall
lea
mov
push
fstl
pop
int3
gs
mov
or
in
xchg
xchg
cmp
inc
out
or
punpckhdq
pop
xchg
mov
pop
leave
ret
ficompl
add
fchs
xor
in
pusha
pop
aam
pushf
pop
xor
xor
repz
mov
xchg
fwait
outsl
popf
cwtl
xchg
add
push
fnsave
pop
push
xor
fdivr
leave
scas
arpl
adc
push
adc
dec
enter
sbbb
sub
jmp
notb
loopne
hlt
ss
mov
push
cmc
push
inc
or
mov
sbb
and
sub
jbe
std
inc
sub
les
call
rolb
fsts
push
fcmovbe
pop
enter
add
add
add
pop
push
mov
push
pusha
lret
mov
jmp
jnp
xchg
insl
cmpsl
jg
dec
imul
mov
fnstenv
mov
cmpsl
jnp
aaa
inc
fstp
add
es
cmpsb
aaa
pushf
xor
xchg
or
lret
add
jb
ljmp
fstps
cmp
test
mov
popl
pop
rolb
pop
mov
cmp
adc
inc
aaa
and
sub
scas
aad
pop
in
bound
lods
cs
pushf
in
scas
movsl
jnp
sub
dec
outsb
js
dec
in
lcall
add
scas
add
cmp
xor
cmp
sbb
enter
dec
test
sbb
rorb
lcall
mov
inc
repnz
xchg
adc
mov
faddl
fldcw
out
push
ja
or
inc
jbe
lret
shl
cmp
and
pop
fwait
inc
das
out
mov
std
and
movsl
pop
pop
sti
sub
out
add
insl
xchg
sub
cmp
fbstp
call
in
shl
pushf
sub
mov
dec
sahf
btr
pop
movsb
or
push
mov
dec
adc
adc
dec
cmp
loopne
lea
or
xchg
mov
lock
or
mov
lock
cmp
dec
shr
fmul
lea
fnsave
enter
pop
mov
popa
lock
aad
fnstenv
jo
mov
pop
mov
daa
jnp
mov
stc
bound
mov
data16
rcrl
or
fwait
repnz
jecxz
insb
or
dec
xor
sbb
mov
stos
pop
mov
mov
shll
add
pop
xor
add
lret
ret
or
lret
inc
or
cmc
ret
pop
dec
push
jns
test
jecxz
aam
dec
xchg
cltd
lods
sbb
mov
mov
sbb
out
and
jp
cs
add
sub
cmc
inc
push
pop
sarl
mov
mov
pop
int3
into
sbb
mov
and
lret
scas
dec
mov
mov
push
push
pop
aas
imul
mov
popa
add
fadd
adc
call
inc
lds
adc
shll
fdecstp
pop
stos
data16
pop
jns
pop
loope
pop
leave
cmp
push
xor
decb
imulb
dec
dec
pusha
and
fcoms
mov
int3
enter
sub
dec
int3
xchg
in
std
xchg
adc
push
xchg
cwtl
scas
mov
fnstsw
mov
mov
in
mov
dec
xor
fistpl
xlat
or
out
cmc
xchg
or
push
insl
jns
xorb
hlt
sbb
push
inc
outsl
push
insb
lret
mov
push
shlb
jp
pop
repz
push
sbb
daa
rorb
adc
pop
lock
add
or
xor
push
fldenv
sbb
dec
bound
push
push
sub
mov
ljmp
push
negb
mov
sbb
dec
xor
fidivrs
addl
mov
jbe
inc
sbb
ja
add
add
adc
ds
cmpsb
scas
sub
and
repnz
cmp
pop
and
mov
movsb
dec
dec
dec
bound
aad
jbe
xor
mov
pop
adc
fwait
inc
dec
outsb
xchg
insb
hlt
or
inc
lea
mov
out
ficoml
aaa
popfw
jmp
jae
fistpl
leave
push
xchg
std
dec
pop
cs
insl
push
test
adc
mov
cmp
or
xchg
dec
ret
in
andb
cmp
nop
mov
sbb
sbb
fisttps
push
repnz
adc
imul
push
and
insb
mov
insl
sbb
push
mov
push
iret
imul
pop
aas
cmpsl
dec
lret
mov
ror
nop
clc
xchg
xorl
mov
mov
mov
push
cltd
cmp
add
xorb
test
mov
dec
pop
sbb
cmpb
xchg
and
pop
cmp
int
dec
jnp
dec
in
addb
dec
adc
jmp
cmpsb
sbb
les
mov
sub
aaa
inc
and
adcl
imul
into
dec
data16
jmp
inc
pop
lahf
or
rcl
xchg
mov
sub
xor
ljmp
sbb
push
xchg
cmpsl
ficoms
pop
mov
mov
cmp
data16
ja
lret
movsl
movsl
push
dec
icebp
jecxz
dec
jge
jmp
pop
mov
clc
fstpt
xlat
xor
insb
insb
sbb
aas
mov
adc
mov
lea
push
xchg
dec
cmpsl
xchg
cmpsb
push
movsb
sahf
cmpsl
sti
dec
pop
pop
and
hlt
dec
xor
pop
mov
gs
ja
ret
xor
stc
and
push
mov
and
addr16
adc
mov
mov
roll
ds
xchg
sbb
inc
rcl
jecxz
push
not
xchg
ljmp
xchg
xlat
movsl
dec
sbb
inc
mul
sub
inc
les
xchg
cmpsl
inc
mov
testl
inc
cli
jb
jne
imul
cli
pop
int3
sahf
out
stos
xor
xchg
pop
imul
jb
jo
mov
add
dec
movsl
pop
dec
xor
sbb
ficompl
adc
sbb
sbb
vpshaq
inc
mov
mov
and
test
mov
mov
in
out
in
xor
cltd
out
lds
push
mov
loope
inc
imul
push
jecxz
sbb
xor
or
orb
mov
mov
xchg
flds
cmp
je
out
push
pop
cmp
jb
fcomps
in
dec
outsl
adc
addl
xor
inc
lretw
or
out
aas
adc
fs
jne
mov
fcoml
xor
mov
movsb
and
hlt
mov
popf
cmp
faddl
test
push
sub
mov
addl
scas
jns
mov
jo
or
into
mov
sti
jg
mov
insl
mov
push
sti
jle
pop
xor
xor
inc
sub
jne
cwtl
jl
inc
sarl
fbstp
adc
sbb
in
xor
sub
xor
inc
or
xchg
fimuls
je
stc
xor
repnz
inc
or
movsl
pop
and
mov
test
sub
mov
in
xor
jecxz
mov
loop
sbb
mov
cmc
in
xchg
mov
in
mov
popa
push
add
cmpsl
xor
inc
lcall
sub
mov
add
or
push
test
sahf
out
jb
add
mov
ss
push
pop
dec
and
cwtl
ficomps
mov
sub
mov
mov
mov
stc
push
sahf
cmp
lea
xchg
mov
pop
mov
nop
mov
sbb
out
sbb
push
mov
je
push
mov
mov
adc
adc
sbb
clc
div
movsb
dec
and
sti
push
push
cmp
cmp
and
into
mov
jae
mov
mov
shll
cmpsl
and
sub
outsl
ss
push
ss
mov
je
cmc
push
xlat
xor
paddd
jbe
icebp
mov
leave
loopne
sub
and
or
out
xchg
push
sbb
add
dec
dec
xchg
test
mov
dec
mov
int3
movsb
leave
fwait
sub
pop
mov
cmp
push
loope
stos
push
in
sub
aad
sub
xchg
inc
sub
addl
imul
mov
or
scas
repnz
cltd
sbb
mov
dec
inc
shlb
rolb
lods
imul
dec
pop
jo
ss
push
pmaddwd
inc
dec
xchg
aad
aad
loope
je
jp
or
mov
xor
push
pushl
lods
mov
xor
in
popf
fs
push
and
addr16
pushf
faddl
mov
cli
mov
or
sbb
pop
push
bswap
cli
xor
sarb
add
scas
jb
cmp
cmpb
jne
sub
enter
popf
add
sar
jno
xor
movb
hlt
mov
adc
lret
adc
jge
ret
xor
test
mov
sbb
xchg
test
popf
pop
xorl
std
jo
pop
out
mov
orl
addr16
scas
mov
mov
test
mov
fdivrs
push
outsl
cld
sahf
lcall
fldenv
dec
jb
enter
lret
aas
or
fwait
add
xchg
jge
dec
cmp
insb
cwtl
jecxz
jmp
enter
xor
mov
xchg
rcll
mov
movups
andl
stc
mov
and
sbb
je
cmp
mov
es
sub
xor
sti
js
pop
jmp
mov
outsb
int
push
push
in
lods
outsl
adc
push
dec
xor
fs
inc
sub
popa
mov
xchg
out
call
mov
pusha
pop
test
mov
jmp
ss
jmp
cwtl
clc
pop
sub
push
jae
mov
movsl
mov
scas
test
cmp
nop
addl
insb
xchg
jae
adc
daa
or
add
fstpl
loope
in
sbb
sbb
popf
jge
data16
rsm
or
mov
and
test
cltd
lea
adc
mov
in
clc
mov
scas
dec
mov
push
cmpsb
loopne
dec
incb
cli
iret
ss
jle
adc
jo
xchg
sbb
xchg
imul
mov
mov
xchg
mov
push
fiaddl
cmc
test
ja
add
ss
fdivrs
bound
call
or
mov
clc
xchg
cltd
in
jge
xor
fimull
in
inc
inc
dec
inc
add
popf
xor
fstps
pop
mov
cmp
add
pop
testb
stos
popf
xchg
dec
sub
sub
add
mov
lcall
cmp
fsubl
mov
pop
mov
ds
add
popf
sub
pop
xor
movsl
adc
data16
mov
inc
je
adc
mov
push
negl
pop
push
les
pop
fiaddl
sub
sahf
pop
jecxz
rcr
insb
syscall
jb
inc
int3
jge
xchg
popf
push
in
push
push
xor
mov
int
or
cltd
cs
inc
in
insl
mov
dec
mov
jge
pushl
mov
lods
fdivs
sbb
sub
iret
int3
in
push
and
rorb
jbe
in
in
mov
dec
data16
dec
and
dec
xor
add
mov
xchg
mov
shll
cli
repz
aam
jmp
cmp
inc
out
hlt
mov
xchg
sbb
dec
jecxz
mov
outsl
fcmovb
call
jle
mov
lds
cs
fsts
int3
push
adc
cmovb
mov
xchg
dec
xchg
fistps
int3
push
jmp
clc
pop
jecxz
popa
mov
dec
xlat
mov
inc
inc
pop
out
xlat
aam
xor
addr16
test
mov
subl
xchg
adc
or
pop
lcall
or
sbb
or
lahf
pop
sub
xchg
pop
sub
mov
hlt
or
mov
in
jecxz
jmp
fidivs
sbb
pop
inc
stos
test
idiv
shrb
andl
xchg
fistpl
xchg
pop
inc
outsl
sbb
out
ja
loopne
jl
fwait
pop
rcr
arpl
jp
jmp
and
sbb
mov
and
inc
or
mov
mov
test
inc
xchg
and
mov
aad
scas
jp
xor
pop
sahf
xor
sahf
jp
cmp
jge
adc
out
enter
adc
fs
daa
cmp
inc
aas
in
ror
push
addb
lret
mov
or
test
cvttps2pi
sbb
es
sub
in
lock
out
xchg
push
jmp
sub
imul
test
pushf
movsb
sub
divl
inc
sub
pop
sbb
push
sbb
inc
sub
dec
push
push
sbb
jecxz
lret
or
repnz
push
push
dec
add
pop
jp
in
gs
inc
mov
lcall
int3
jecxz
std
mov
mov
xor
sbb
jae
push
out
scas
inc
ret
mov
xor
mov
jo
cmpb
add
mov
adcl
cmp
pop
mov
cwtl
jecxz
fwait
outsl
mov
push
je
xchg
aad
les
sub
repnz
adc
ljmp
pushf
adc
sub
std
add
rclb
insl
ja
dec
pop
divl
jns
ret
test
cld
sub
in
sti
xlat
adc
push
jmp
cltd
pop
mov
mov
cmp
repz
sub
pop
push
dec
mov
sbb
xor
leave
cmpb
lds
push
out
adc
call
xchg
xchg
negb
xchg
shll
pop
xchg
mov
cmc
inc
jns
cmpb
lret
loopne
test
push
push
shlb
int
sbbl
pop
mov
lods
fisttps
and
lock
out
scas
mov
add
adc
mov
dec
xor
jmp
es
mov
bound
ljmp
xor
xor
add
out
jns
shrb
jmp
xchg
dec
lret
push
insl
cwtl
xor
xor
add
sbb
push
call
out
sti
divb
dec
mov
pop
xor
popaw
push
xchg
shlb
add
dec
je
sub
scas
jge
xchg
mov
mov
push
pop
gs
mov
lds
add
scas
imul
xchg
shr
dec
mov
mov
sub
lret
dec
sarb
dec
sbb
jge
addr16
jg
mov
call
test
pop
mov
mov
in
icebp
loope
cltd
jle
dec
xchg
jno
lahf
fcoms
dec
repnz
cmpb
sub
push
or
mov
inc
add
xor
ret
xor
cmpl
push
and
jl
mov
dec
xor
mov
or
fisubl
ja
cmpsb
mov
and
jmp
lds
pop
and
sahf
pop
sub
bound
scas
iret
sub
xchg
testb
push
pop
sbb
adc
xchg
sub
add
lsl
adcl
push
loop
and
xchg
xchg
std
push
flds
sub
dec
pop
in
out
sahf
movsl
mov
fld1
sub
and
test
ret
pop
mov
xor
fiaddl
sahf
sub
aaa
fwait
mov
cmc
insl
js
xchg
mov
pop
outsl
lock
adc
ss
adc
mov
loop
daa
dec
cmp
mov
mov
ljmp
rcr
outsl
into
adc
xor
es
lods
cmp
das
mov
lcall
adc
sbb
mov
add
test
push
and
push
mov
das
lds
sbb
push
dec
ja
mov
das
or
outsb
fwait
xchg
push
sbb
xor
idivl
sahf
out
cmp
add
gs
aam
hlt
imul
in
leave
push
inc
in
stos
jno
int3
fwait
push
std
mov
push
cli
xchg
dec
xchg
ds
cmp
xlat
xchg
js
popa
mov
fdivp
cmc
cmp
fwait
inc
js
mov
or
pop
cld
dec
adc
aaa
cmp
jbe
in
repz
hlt
xchg
movsl
inc
mov
popf
add
adc
in
movsb
pop
imul
fisttpll
pop
xor
dec
jae
int
jae
mov
inc
lods
and
movsb
inc
idivb
sbb
notb
add
repz
mov
es
lret
push
out
dec
pushf
sub
push
nop
adc
or
cmpsb
sbb
xor
sbb
incb
iret
scas
push
jnp
jno
cmpl
mov
aaa
imul
mov
xor
mov
xor
popa
adc
mov
adc
jno
inc
pop
pop
xchg
aas
jo
jl
mov
insb
jo
imul
add
ljmp
out
dec
xchg
gs
mov
mov
int3
sub
scas
fildll
xor
push
inc
mov
pop
aaa
pop
lahf
pop
fldenv
shrl
add
into
adc
add
push
insb
xor
shlb
ficomps
cwtl
pop
sbb
jg
pop
add
adc
xor
xlat
dec
in
cmp
pop
adc
fwait
jp
stos
jp
popf
jmp
loope
or
add
out
daa
nop
jge
out
mov
mov
loope
inc
in
push
pusha
push
rdpmc
mov
inc
sbb
dec
lea
push
ljmp
dec
pop
mov
mov
lahf
cmpsb
adcl
inc
imul
push
xchg
inc
sbb
loop
and
sbb
rcl
push
test
mov
inc
les
inc
mov
jl
jnp
pop
xor
mov
add
pop
jg
mov
cmp
imul
leave
xchg
bswap
inc
mov
lsl
sahf
mov
sub
xchg
xorb
adc
outsb
inc
std
jp
sbb
cmpsl
jge
sub
out
outsb
std
adc
fs
out
xchg
lock
mov
out
mov
cmp
push
fstl
ljmp
pop
testl
lcall
dec
dec
repz
mov
sbb
fimuls
cwtl
test
dec
cmp
mov
add
ss
test
push
sub
inc
leave
add
inc
push
xor
mov
js
xor
loop
push
test
add
cmc
push
sub
add
or
jo
stos
sbb
xchg
mov
xchg
sub
cmp
in
lods
xchg
lds
sub
loop
lods
mov
dec
sbb
push
es
faddl
xor
jecxz
repz
imul
out
mov
enter
sub
push
mov
orl
outsb
lds
call
popf
icebp
mov
jbe
leave
sbb
daa
in
mov
push
push
lcall
cld
daa
rorl
pop
orb
lret
mov
and
dec
cmp
aad
int
sbb
out
js
fistl
pop
dec
ja
lods
shr
mov
sub
inc
arpl
nop
sti
pop
fwait
cmp
jl
ret
cld
scas
outsb
lds
and
fwait
mov
mov
stos
in
ror
sub
movsl
shl
imul
pop
lcall
sahf
inc
jns
imul
cmp
pop
movsb
notl
jmp
dec
dec
adcb
lret
dec
jbe
dec
xchg
int3
inc
hlt
je
lods
mov
repnz
add
mov
scas
sub
jge
sub
mov
mov
insb
cmp
and
xchg
add
xor
and
pop
and
fnsave
int
int
cmp
sbb
test
or
hlt
xor
push
mov
cli
jp
dec
fdivrl
adc
outsb
mov
and
inc
lret
scas
fldenv
inc
push
lods
mov
ret
lret
aas
into
out
stc
stos
inc
subb
in
js
xor
adcl
testb
fdecstp
test
mov
daa
mov
lret
mov
scas
pop
push
clc
push
cs
lds
xchg
cwtl
jl
fcomps
push
scas
pop
popf
fists
push
ds
push
push
ficompl
mov
push
out
sbbb
popf
inc
stc
xor
stos
fst
lods
repnz
pop
lds
loopne
arpl
hlt
or
and
test
inc
cmp
dec
scas
cld
outsb
mov
push
xor
hlt
sub
inc
mov
push
xchg
arpl
imul
pop
int3
rorl
push
pop
or
and
addr16
jae
xlat
and
je
or
pushf
mov
repz
add
dec
mov
imul
jle
sbb
movsb
negb
ja
arpl
lret
out
xchg
xor
xchg
lahf
adc
ret
sub
add
lods
push
in
aas
add
scas
pop
wrmsr
push
cmp
mov
fs
pop
inc
fstpl
sbb
or
mov
stos
cld
cmc
adc
xor
push
jb
icebp
out
xlat
sub
mov
in
in
mov
stos
pop
inc
push
pop
cltd
mov
dec
enter
ret
insb
pop
and
mov
clc
cmp
enter
cmpsb
es
dec
loopne
or
pop
cmp
ss
jl
mov
add
cmpsb
fmuls
insb
icebp
or
fs
cmc
data16
clc
in
fcoms
lret
and
stos
or
into
mov
push
inc
mov
nop
jns
or
mov
sahf
packuswb
pop
fcoms
add
dec
xchg
xor
std
ss
inc
movb
popf
jle
into
das
negb
pusha
arpl
adc
jb
xor
std
popa
pushf
push
pop
cmp
xchg
xchg
pushf
push
lock
dec
loop
adc
loopne
or
push
xchg
sar
mov
negb
xchg
lods
fstps
or
fcmovbe
in
out
sub
pop
test
pop
mov
dec
cmp
aaa
out
push
shrl
sbb
xor
mov
daa
cmc
xlat
inc
orl
cmp
mov
pop
mov
inc
mov
iret
jg
mov
xchg
roll
test
push
in
sub
xchg
jb
add
push
pop
arpl
xchg
cmp
or
arpl
divb
stos
shlb
insl
cmp
test
jg
jg
test
adc
icebp
pushf
aam
les
sbb
out
sti
cmp
and
pop
sub
out
leave
xchg
mov
dec
adc
faddl
xor
xor
cltd
dec
cmp
jmp
or
in
cmpsb
aam
lea
xlat
hlt
cmp
jle
data16
mov
loopne
repnz
icebp
rorl
pushf
js
xor
push
push
aad
push
mov
insb
mov
mov
sub
in
in
jbe
xor
and
sub
shll
mov
mov
fst
rorb
fisubrs
mov
sbb
mov
cmp
mov
push
ret
inc
add
bnd
out
pop
pushf
pop
ficomps
lahf
push
cld
popf
or
xor
cwtl
mov
xor
ret
test
int3
inc
pop
leave
xchg
shll
int3
adc
test
xchg
xchg
ja
mov
push
sub
ret
and
sti
cmp
mov
add
add
add
or
cmp
pushw
mov
nop
pop
lahf
iret
dec
outsb
idivb
pop
jmp
xchg
les
je
cmp
sar
or
or
popf
out
cmp
bound
js
push
orl
movsb
cmp
gs
jecxz
mov
or
sbb
xchg
mov
nop
xor
and
or
fists
je
aas
addb
loopne
enter
insl
inc
loope
jmp
xor
inc
cmp
call
inc
out
mov
std
mov
data16
add
cmpsl
dec
lcall
ret
mov
cmp
std
dec
xor
out
das
pop
rcll
cmp
sti
and
outsb
dec
ja
or
stos
or
mov
das
pop
sub
push
xchg
or
pop
jl
dec
int
rorl
ud2
cli
sub
aad
jo
mov
sbb
iret
roll
push
xlat
jge
mov
xchg
bnd
mov
test
sbb
mov
inc
aam
and
cwtl
pop
aam
inc
or
lds
adc
or
pop
hlt
lret
shlb
movsl
push
inc
jp
or
xor
out
ret
test
mov
push
sbb
scas
leave
rol
and
adc
in
mov
or
aad
inc
fs
push
call
aas
jnp
gs
jge
mov
nop
mov
out
pop
mov
jae
inc
or
test
sti
insl
and
imull
mov
and
or
std
mov
fnstcw
ret
aas
jb
mov
aas
inc
out
call
mov
pop
test
test
mov
test
iret
lds
movsb
xchg
ret
cmp
jl
and
das
pop
stc
pusha
test
aas
lret
aas
push
icebp
dec
fsub
mov
mov
jmp
cmpsb
push
inc
or
fildl
sub
in
mov
outsb
and
dec
repz
jbe
mov
push
mov
xor
mov
fdivs
lea
fldln2
mov
insl
insl
mov
mov
push
pop
mov
inc
sahf
dec
xorl
pop
pop
gs
mov
fldl
lock
mov
mov
jmp
and
mov
sbb
bound
or
add
inc
ss
arpl
cmpsb
std
sbb
xchg
aaa
mov
cmp
ret
outsl
popa
cmp
mov
scas
addb
inc
jp
addr16
xor
aam
out
cmp
fwait
dec
sbb
stos
out
mov
push
into
add
jecxz
sub
mov
cmc
lret
mov
and
add
dec
or
daa
and
pop
int
arpl
repnz
adc
or
js
sub
xor
sbb
hlt
inc
inc
jp
movsl
jecxz
icebp
lods
add
adc
not
jmp
data16
xlat
in
ret
jp
mov
call
dec
test
lret
inc
fs
sti
push
mov
inc
sub
sub
xor
jae
filds
sub
or
push
ret
cld
inc
push
or
pop
mov
mov
cmpsb
or
jmp
pusha
inc
daa
cmpsb
push
pop
sbb
ljmp
insb
inc
shll
test
std
shl
je
push
and
dec
push
outsb
dec
push
or
cmp
xchg
jecxz
dec
scas
push
pop
xor
push
popf
sbb
cmpsl
cmp
mov
jb
outsb
jb
pop
test
mov
xchg
xchg
add
insb
xlat
in
pop
xchg
rcr
jg
xlat
cwtl
cmpsl
lods
or
lcall
rclb
icebp
ficoml
mov
addr16
addr16
mov
mov
jge
jo
or
shrl
xchg
sub
mov
fstps
iret
xchg
out
pop
enter
test
pusha
enter
sub
pop
fidivl
sub
push
test
mov
mov
orb
cmpsl
ret
out
rcll
xchg
jno
pop
fdivrp
les
jne
mov
pop
dec
out
sbb
and
pop
or
jle
orl
enter
imul
repnz
test
fstpl
daa
imul
add
cwtl
add
enter
sbb
daa
add
cld
xchg
lds
cs
loop
fwait
push
xchg
push
cmp
leave
pushf
xlat
inc
pop
jmp
mov
stos
subb
xchg
mov
shlb
enter
push
jo
sti
pop
mov
sbbl
or
push
jne
mov
call
testl
inc
aam
inc
loope
call
push
xchg
cmp
xchg
insb
and
mov
inc
and
stos
fcomip
rcrl
jnp
cmc
cmc
popa
push
cmp
mov
add
or
pop
je
stc
sbb
dec
mov
sub
bound
sbb
jmp
scas
push
inc
clc
and
mov
movsl
adc
xchg
push
pop
clc
je
inc
mov
xor
movsl
jp
dec
mov
sub
adc
in
mov
movsb
dec
jo
mov
loope
push
cmp
jne
push
cmp
in
fs
xchg
test
or
jae
inc
out
inc
repnz
cmpsl
dec
fnstcw
data16
sub
inc
xchg
dec
cmp
data16
add
cmpsb
inc
test
or
and
cli
sub
push
cld
out
mov
loope
movsb
std
mov
mov
cld
dec
mov
js
cli
js
jle
sub
popa
mov
push
mov
adc
inc
xor
sub
aam
divb
add
fiaddl
jno
and
inc
fsubl
daa
xchg
pop
mov
test
adc
pop
roll
adc
es
jge
xchg
sub
or
sub
xorb
xchg
sbb
je
cmpsl
push
add
cli
push
popf
mov
mov
and
aas
std
mov
xor
jmp
fs
int
or
rclb
push
inc
loop
mov
cmp
mov
aad
add
out
mov
test
mov
fldt
scas
addr16
insl
es
mull
sbb
mov
iret
ja
es
leave
sbb
cmp
dec
mov
mov
ja
dec
jecxz
xor
mov
cmp
pop
repz
loopne
inc
mov
dec
dec
and
xor
dec
enter
mov
xlat
not
or
adc
mov
repnz
cmpsb
and
xor
add
push
loopne
push
sub
lahf
dec
int3
nop
cwtl
add
push
pop
add
lods
push
add
je
mov
out
xchg
jg
mov
insl
int
out
or
push
cmp
sahf
mov
rolb
push
ja
ljmp
iret
push
mov
je
outsl
es
inc
adc
jo
psubd
stos
fldenv
pop
fldenv
imul
or
clc
jne
jne
stos
ror
xor
push
xor
mov
and
in
in
jl
or
test
inc
arpl
fcmove
scas
push
adc
cs
mov
rcll
push
in
push
sub
das
sti
mov
sub
mov
shr
xchg
cmc
and
lcall
mov
push
lahf
push
inc
mov
cld
or
movsl
aaa
das
push
les
add
dec
xor
dec
daa
ror
les
arpl
mov
mov
adc
incl
pushf
test
clc
xor
repnz
adc
faddl
daa
loop
ljmp
arpl
das
mov
les
push
mov
das
dec
imul
and
pop
xor
and
cli
mov
dec
cmpsl
xchg
cmp
cmp
movsb
mov
mov
mov
xor
sbb
jno
and
jg
daa
ret
sti
lock
jp
push
jecxz
pop
jo
ds
jg
push
mov
lret
push
in
sbb
in
test
sub
inc
nop
dec
sahf
out
xchg
ljmp
adc
cmpsl
fsubs
out
adc
aam
ret
fbld
ljmp
dec
sub
imul
sbb
std
mov
xchg
repnz
inc
push
stc
daa
mov
fwait
stos
push
int
push
je
es
xlat
sarl
dec
mov
out
mov
sar
add
xor
cmp
cltd
hlt
adcb
enter
insb
dec
cwtl
sub
int3
ja
jae
and
sub
mov
jns
outsb
notl
xchg
add
cmc
iret
xlat
jge
add
ds
xor
dec
test
push
inc
xchg
xchg
movsb
hlt
xor
pop
and
sbb
mov
imul
or
pop
lds
jle
xor
xlat
fnstsw
adc
push
mov
movsb
jle
ficompl
mov
xchg
pop
movsb
mov
add
insb
pop
pop
cmp
inc
int
xchg
mov
mov
inc
pop
outsl
push
out
jl
inc
pmullw
je
push
data16
and
fdivrl
xor
movsl
jg
dec
sbb
mov
or
jmp
inc
xor
cld
xchg
adc
mov
or
aaa
mov
sub
sti
push
and
repnz
ds
arpl
lds
jge
outsb
icebp
push
icebp
fidivl
fidivl
sbb
adc
push
push
xor
mov
sarl
sarb
in
mov
pop
loope
cmpsb
pop
adc
xchg
cmp
scas
and
aaa
pushf
jns
pop
sbb
cmp
je
fsubrl
adc
xchg
loope
stc
inc
popf
mov
insl
or
cmp
popf
adc
push
mov
fdivrs
outsb
cmc
outsb
cmp
sbb
jns
loop
shr
lds
movsl
mov
or
pusha
add
cmp
mov
fdivr
add
or
arpl
sbb
negb
add
adc
pop
popf
shrl
das
jle
lock
adc
mov
cmc
or
dec
or
test
or
pop
jg
dec
hlt
test
sbbl
adc
jno
int
pop
cmp
and
mov
dec
int3
sti
insb
jecxz
fiadds
dec
insb
ficompl
jns
fsubs
mov
arpl
aad
mov
jbe
cmp
test
mov
out
sub
pop
xchg
jle
push
adc
sbb
lahf
xor
or
jo
je
jecxz
xchg
js
iret
sub
push
lds
imul
sbbb
punpckhdq
imull
inc
sub
pop
mov
sub
mov
push
jno
fs
mov
in
inc
xchg
mov
in
xor
call
fs
dec
jbe
push
std
stos
mov
cld
fs
adc
jne
int
cmpsb
mov
ffree
pop
push
dec
movsl
jg
divb
dec
xor
and
ret
push
or
push
in
sub
mov
and
aad
dec
out
hlt
lock
shl
mov
xor
push
jp
xor
dec
jne
inc
xor
ds
daa
mov
mov
je
jl
inc
or
aam
push
mov
out
push
ljmp
stos
popf
dec
jne
mulb
dec
arpl
mov
pushf
loop
pop
dec
icebp
lods
popa
jbe
dec
fidivs
filds
xchg
push
adc
inc
mov
test
adc
loop
sub
fcoml
or
xor
scas
mov
jae
sti
dec
cli
addb
inc
out
jns
sbb
arpl
repz
jb
fldenv
ret
les
jl
jecxz
hlt
sub
and
aas
add
insb
mov
xor
inc
andb
mov
mov
dec
xchg
add
jo
lock
pop
add
xchg
xor
cmpsl
sbb
mov
jne
mov
or
xchg
cmpb
mov
jns
push
pushf
dec
sahf
repnz
insl
xor
mov
sbb
ss
xchg
sbb
aaa
cmp
cmpsb
movsb
pop
das
adc
into
add
mov
fstps
cmpb
pop
ret
and
lea
sub
mov
dec
mov
and
es
pop
fwait
cmp
xor
loopne
xor
repnz
mov
xchg
mov
sub
dec
fsts
mov
sbb
push
mov
leave
cmp
jecxz
scas
test
loope
std
lods
cmp
pusha
loope
pop
mov
mov
dec
test
in
adc
dec
in
mov
js
sub
aam
dec
lahf
or
rcr
and
cli
stc
fadds
inc
into
or
in
pop
lea
int3
bound
cltd
add
xchg
outsl
bound
fdivrs
mov
mov
in
pop
sbb
mov
mov
mov
cmc
cmc
pop
in
fwait
sahf
xor
mov
roll
jns
or
xor
fsubrp
clc
jbe
pop
mov
push
mov
dec
rep
call
in
jge
inc
mov
sarb
sub
repz
dec
jbe
inc
in
mov
adc
jecxz
gs
pushf
in
cmpsb
cli
cli
daa
jp
and
adc
leave
sub
inc
pop
cmpsb
bound
dec
mov
out
mov
or
inc
aaa
loope
imul
push
push
bound
rolb
gs
fcmovnb
sub
adc
pop
mov
out
push
aas
jl
loopne
aam
in
pushf
push
mov
int3
repz
ret
adc
dec
xchg
mov
sti
cmp
stos
cmp
jmp
nop
sbbl
lret
sbb
xchg
jns
data16
or
movsl
sbbb
nop
cmc
jnp
movl
mov
cmc
dec
cs
inc
daa
push
orl
test
adc
out
and
pop
movsb
daa
test
mov
pop
or
xchg
test
cltd
subl
cmp
pop
push
scas
jne
lock
pop
mov
pop
and
lcall
mov
dec
cmpsl
xchg
push
adc
mov
fstl
push
jnp
in
pop
ds
pop
cmp
adc
inc
push
cmpsb
pushl
push
imul
ds
movsb
movsb
push
mov
cwtl
es
cs
daa
sbb
jl
negl
inc
dec
scas
sub
pop
out
mov
xchg
push
fldt
jns
jno
lea
lds
add
ret
push
in
or
les
rorb
mov
push
popf
stos
aaa
fdivrl
mov
orb
jecxz
inc
aam
imul
and
cld
sbb
stc
pop
mov
into
mov
push
xchg
fsts
ds
mov
mov
sahf
lcall
push
int
xchg
dec
stos
jmp
add
jnp
pop
in
ljmp
faddl
stos
imul
lcall
inc
daa
inc
jnp
push
inc
test
dec
cmp
jle
sti
sub
dec
xor
hlt
test
cmp
pop
out
outsl
dec
repnz
jle
loope
arpl
or
gs
loop
pop
push
psubusb
or
sbb
int
xchg
mov
pop
arpl
dec
scas
mov
adc
stos
stc
xchg
ljmp
enter
push
cmpsb
sbb
pop
ds
mov
test
dec
fistl
pop
add
lods
or
pop
push
dec
enter
in
pop
adc
shrl
ljmp
test
and
test
xchg
scas
out
cld
xor
push
xor
icebp
inc
jle
add
cmp
ficompl
add
dec
add
cwtl
lds
aad
cli
leave
or
cmpsl
lcall
movsb
test
jp
push
inc
push
pop
test
push
mov
mov
fwait
scas
arpl
gs
in
rol
mov
cmp
jbe
and
or
sti
sbb
adc
inc
sub
int
jmp
jnp
enter
cmc
cmp
fnstsw
es
push
jbe
pop
out
js
push
inc
popf
fildll
inc
or
sub
ret
enter
mov
pop
mov
inc
add
pop
aam
es
cli
cmp
notb
inc
ror
test
mov
shll
cld
jmp
dec
ss
mov
sbb
ud2
inc
insb
cs
das
mov
movb
in
movsb
fs
xchg
push
jg
pop
pop
pushl
mov
mov
inc
mov
in
mov
enter
stos
mov
pop
out
and
call
add
fcmove
and
sub
sub
ljmp
repnz
mov
loopne
add
push
sbb
jne
pop
sbb
jnp
popf
cwtl
xchg
adc
sti
cltd
pusha
aam
out
scas
dec
xorl
inc
fadd
out
xlat
fsts
icebp
adc
popf
ret
fs
pop
lds
aaa
pop
dec
mov
jno
or
sbb
xchg
scas
pop
ss
cmpsb
mov
test
aaa
mov
inc
mov
imul
xor
movsl
and
jo
cwtl
dec
mov
insb
pop
dec
movsb
mov
inc
out
fistpl
or
cmp
sbb
mov
and
std
lret
cmp
lods
sub
sub
cs
aam
movsl
aam
dec
lods
pushf
pusha
jne
sub
ret
jnp
stos
cs
sbb
mov
ss
test
jne
dec
loopne
add
mov
int3
push
add
cmpsb
jmp
popl
cmpsl
inc
in
loope
es
jp
add
fwait
ljmp
add
pop
xchg
mov
adc
popa
inc
repnz
lret
push
jge
inc
add
dec
xchg
xchg
data16
push
xlat
ds
mov
jg
cwtl
jmp
adc
lods
fimull
scas
popa
lahf
into
in
jg
mov
adc
fadds
adc
in
sahf
jle
out
enter
rcll
mov
insl
xlat
or
aam
hlt
cmp
stos
outsb
mov
adcl
xchg
mov
in
push
pop
arpl
and
aam
jp
sub
or
insl
lret
insb
pcmpeqw
dec
mov
into
and
cmp
add
xor
jmp
loopne
mov
jnp
out
pop
xor
hlt
mov
sbb
cltd
lods
xor
pop
in
pop
sarl
dec
cwtl
mov
push
fwait
push
test
or
sub
inc
into
pop
mov
ds
dec
and
xor
or
mov
stos
pop
out
adc
cmc
jmp
es
push
imul
gs
cmc
shlb
push
mov
jne
and
shlb
aas
xchg
je
test
dec
sbb
test
cmp
pop
test
sub
push
sub
je
aaa
xchg
fsubr
popw
stos
aas
idivl
into
cmpl
rcll
push
xor
dec
outsb
inc
mov
push
les
pop
movsl
popf
or
or
push
and
push
imul
test
mov
jle
jmp
std
mov
pop
xchg
jmp
mov
add
rcr
sbb
loopne
sbb
into
arpl
mov
ret
xchg
sbbb
cmp
adc
pop
push
stos
jge
orb
cmp
rolb
clc
iret
xor
into
outsb
sub
or
inc
xchg
jg
ljmp
xorb
je
or
pop
sub
neg
addb
rorb
movl
clc
push
mov
xor
insl
and
xor
mov
xor
adc
iret
fwait
mov
adc
add
es
mov
or
mov
sbb
adc
xor
stc
mov
push
shll
and
or
das
sub
bound
repnz
test
dec
sub
inc
ds
insb
test
mov
push
push
aas
pop
fs
call
adc
sbb
pop
aas
xor
fcoml
and
cmp
mov
sbb
adc
fstps
nop
or
pop
aad
out
jo
pop
mov
andb
jmp
ljmp
inc
call
ja
mov
enter
or
xchg
gs
sub
add
dec
pushw
sbb
cmc
lods
out
sahf
xchg
pop
jg
mov
aaa
loop
and
jmp
or
fisttpll
repnz
cmp
xchg
fbld
add
into
mov
scas
lahf
cmpsl
movsl
sub
cmp
fldcw
cmp
dec
addr16
imul
shll
testb
xchg
sub
out
dec
mov
mov
aad
cwtl
mov
ja
insb
or
sbbb
dec
sub
int
lea
push
jg
stos
xor
call
fsts
mov
cmp
lret
je
sub
cwtl
jno
idiv
fst
push
hlt
les
or
ret
mov
out
scas
ret
jmp
loopne
jg
and
lods
cltd
sbb
ds
clc
jb
cmp
inc
mov
cmp
mov
mov
xor
jo
fwait
les
push
mov
mov
enter
jb
test
mov
pop
mov
jge
leave
addr16
pop
jo
push
repnz
shrb
test
nop
mov
jne
popa
mov
stos
mov
pop
fcom
add
jae
push
insb
addr16
adc
jmp
mov
scas
mov
dec
iret
icebp
dec
mov
pushf
insl
mov
cmp
add
sbb
ljmp
scas
push
dec
mov
jbe
imul
fwait
lds
loopne
ret
mov
and
adc
or
sub
cmpsb
stos
mov
jo
and
fistps
or
loop
and
jb
repnz
sbb
pop
jl
inc
int3
in
test
iret
mov
stos
nop
push
inc
cld
lahf
adc
xchg
adc
dec
dec
jl
push
out
inc
jnp
aaa
adc
mov
cmp
fmul
lret
call
adc
outsl
xchg
xchg
dec
add
testb
call
rcrb
int
jbe
orl
jp
mov
dec
lods
xchg
jecxz
sub
fmulp
int
cld
mov
sar
jno
sub
sbb
sbb
xchg
xchg
dec
bound
mov
in
sub
jno
mov
mov
movsb
or
push
xor
test
into
insl
pop
pop
pop
add
or
or
sti
shl
in
test
and
movsl
ret
jo
mov
push
mov
incb
loope
sub
sub
scas
pop
out
cld
xor
loope
je
add
xlat
sub
test
jl
cmpl
xchg
sarb
push
mov
adc
cwtl
frstor
in
and
push
ficoml
stc
dec
nop
aad
push
mov
jge
shrb
pop
arpl
mov
pop
mov
xor
shrb
xor
ficompl
test
scas
fs
loop
adc
shll
test
push
stc
popf
test
mov
movb
xchg
pop
fistpll
mov
adc
subl
int
lock
mov
mov
fwait
mov
pop
mov
enter
mov
lahf
or
stc
test
push
mov
sub
jle
pushf
out
call
lcall
sbb
xchg
repz
repz
dec
movsb
aam
add
incb
cmp
sub
inc
icebp
outsl
pop
push
not
je
mov
xorl
icebp
bnd
ds
sub
add
icebp
xor
xchg
pusha
cmp
xor
pop
in
cli
shll
xchg
lahf
jb
mov
inc
adc
or
js
sub
pop
out
lock
clc
cmp
scas
pushfw
inc
xchg
jg
cli
stos
xchg
push
inc
imul
or
les
mov
or
mov
sub
dec
lods
pusha
shl
xchg
sbbb
dec
cmp
pusha
pop
pop
adc
jns
std
push
add
leave
aad
pop
jge
js
mov
xchg
pop
inc
adc
and
sbb
cwtl
mov
sbb
sbb
les
je
lret
out
pop
loope
mov
inc
add
rcr
xor
inc
push
mov
cltd
loope
out
stos
shrl
lcall
push
sub
mov
popf
add
jo
mov
popf
and
nop
fs
insb
test
jae
and
popf
adc
imul
scas
jl
jnp
mov
shll
mov
sub
mov
dec
insl
pop
push
outsb
lea
inc
mov
in
lcall
fldcw
vpaddb
iret
xchg
mov
addr16
push
decb
jle
insb
sbb
adc
lret
sub
out
inc
mov
test
daa
jae
sub
cmpsl
add
cmp
mov
dec
mov
je
aam
inc
cmp
rcll
jno
int3
popa
cmpsb
ja
das
pop
xlat
mov
and
insl
loopne
sti
pop
mov
leave
aam
mov
ss
fcompl
mov
push
fdivl
inc
popf
dec
jg
daa
aaa
pop
aaa
popf
and
cld
insl
xor
sti
xor
xchg
leave
xchg
pop
aas
xchg
push
jns
pop
pop
dec
jp
xor
nop
aas
cwtl
fdivrs
inc
ds
rolb
push
in
cmp
xor
and
jnp,pt
pop
pop
inc
insl
sbb
hlt
pop
jo
adc
xchg
mov
inc
inc
xchg
aam
sti
outsb
mov
and
jmp
fwait
sub
sbb
rcr
cltd
nop
xor
cs
stos
push
gs
sub
sti
nop
lock
cltd
mov
push
inc
daa
jle
mov
jb
inc
push
push
mov
pop
cwtl
pusha
sub
notb
mov
cmp
mov
sub
push
ja
out
and
mov
gs
mov
push
sub
jecxz
insb
call
lea
imul
cmpsb
sbb
ja
call
hlt
dec
test
xchg
lcall
cmp
mov
xlat
pop
dec
shrb
push
xchg
push
in
sti
cmpsb
fwait
movsb
ljmp
mov
jp
arpl
and
daa
and
cltd
clc
mov
fs
and
mov
ret
ror
mov
mov
inc
das
dec
popf
shl
and
lret
ror
sbb
push
daa
xchg
dec
xor
mov
andb
push
in
inc
pop
pop
sbb
scas
popf
and
cwtl
mov
push
lds
in
insl
sbbl
xchg
xchg
ret
andb
inc
mov
movsb
xchg
dec
fdivs
shlb
fnstcw
and
jmp
add
out
lea
cmp
cmpsl
lock
test
jle
push
or
xor
fstpl
jb
push
inc
jle
sti
ret
xor
xor
fildll
ret
sub
lds
push
loope
negl
lahf
sarl
outsl
mov
cli
push
xor
mov
les
shlb
lock
cmpsb
fisubrs
push
out
inc
push
adc
jnp
xchg
xor
addr16
rorb
movb
inc
iret
add
es
loopne
dec
std
xchg
mov
insb
pop
dec
cmp
dec
pop
in
sub
xchg
aam
repz
cmp
sbb
imul
sbb
push
imul
jo
loopne
stos
inc
popf
shlb
fidivl
adc
mov
jbe
ljmp
xchg
outsb
les
pop
scas
pop
xchg
sub
sub
dec
jae
adc
push
imull
push
adc
and
mov
test
push
into
xchg
lret
and
mov
or
adc
adc
pop
sub
pop
dec
jb
ret
push
push
pop
cmp
xor
icebp
sub
sub
inc
and
jnp
adc
cltd
test
das
mov
push
push
and
cwtl
cmovp
add
mov
push
mov
push
xor
lret
xor
rcl
fsubrl
adc
adc
and
cmpsl
xor
testb
mov
std
mov
int3
dec
pop
lcall
scas
dec
and
dec
test
js
mov
mov
inc
and
xor
mov
xchg
xchg
iret
jle
pop
pop
mov
mov
push
sbb
mov
add
lcall
xor
nop
or
mov
into
mov
cmp
push
sbb
cmp
xor
xchg
lods
mov
mov
gs
aas
mov
adc
test
lods
inc
jae
mov
jge
push
push
inc
shll
pop
cmpsl
push
fildll
sbb
das
or
fbstp
cwtl
aaa
lea
and
fsin
outsl
in
jae
xor
mov
lret
test
stos
mov
cltd
ficoms
jmp
jo
jno
into
bound
fucomi
dec
movsl
push
loope
cmpb
adc
aam
inc
sbb
and
cmpsl
push
xchg
inc
imul
popl
xor
in
dec
xor
mov
dec
push
shr
pop
push
out
lcall
movsl
xchg
outsb
loop
jo
out
pop
mov
push
add
stos
dec
add
sbb
inc
push
cmpsb
and
xor
cmp
push
daa
imul
mov
test
sub
lods
sbb
mov
out
pusha
mov
pop
jnp
in
test
je
fs
adc
mov
aaa
pop
push
jp
das
fnstcw
xor
fdivl
test
insb
inc
xor
mov
xchg
mov
pop
rcll
mov
out
xor
fnstenv
sar
into
test
jo
adc
test
adc
dec
movsb
pop
mov
ficompl
insl
mov
in
dec
notb
pop
sub
in
loopne
cltd
lea
push
push
xchg
push
rcll
mov
push
cli
sbb
cmpsb
cmp
push
xor
mov
dec
scas
add
sbb
and
adc
inc
and
jmp
sarb
add
xor
faddl
fbstp
and
rcll
repnz
sbb
loope
mov
sub
pushf
pushf
add
sti
cld
cmpsb
pop
out
int3
sarl
xor
sbb
arpl
push
sbb
fwait
push
mov
iret
push
std
mulps
jmp
jmp
gs
xchg
inc
test
call
rcr
sti
stc
jno
inc
icebp
enter
stos
ja
jl
shlb
fwait
loope
sbb
or
aaa
jbe
iret
inc
xor
roll
inc
mov
mov
inc
xor
out
jp
movsl
dec
out
adcl
xlat
pop
and
in
ss
mov
mov
addb
xor
mov
popf
movsl
dec
mov
mov
test
and
popa
imul
test
add
xchg
icebp
out
xlat
popf
aas
loopne
gs
movsb
xlat
push
sbb
addl
adc
mov
out
push
add
pop
test
outsl
enter
aaa
loopne
nop
jp
inc
lock
mov
jmp
in
leave
push
int3
lds
sbb
jne
sbb
and
hlt
jne
mov
xor
jbe
cmp
or
mov
jecxz
xor
in
jbe
int3
sbb
cmpsb
mov
push
sarl
jae
mov
dec
daa
and
lea
mov
cmpsl
mov
or
dec
lea
add
nop
sub
push
test
pop
das
xor
and
jp
nop
and
ds
push
stc
push
fs
lods
mov
sub
or
mov
mov
and
sbb
mov
adc
data16
fwait
adc
mov
inc
cmp
cmp
cmp
jne
arpl
rolb
push
shr
les
lret
mov
fiaddl
cmp
pusha
and
stc
inc
pop
sti
out
add
lret
aas
jl
std
stos
out
mov
nop
mov
scas
mov
popl
test
sbb
cmp
sbb
pusha
inc
adc
pop
enter
push
mov
mov
js
dec
mov
mov
in
in
es
sbb
out
ljmp
mov
sub
jecxz
repnz
das
scas
xor
cmp
push
daa
push
fimull
lods
bound
mov
shl
mov
dec
mov
sbb
mov
dec
pop
and
sub
sbb
sub
mov
ficompl
rcll
dec
bound
cmc
es
dec
cmc
repnz
mov
and
xor
mov
xchg
stc
xchg
out
les
repz
aam
sbb
sbb
and
mov
add
out
loopne
dec
dec
or
repnz
jo
pop
sahf
inc
in
test
push
fisttps
push
or
push
movsb
push
or
js
insb
js
add
jle
xlat
sub
shl
sbb
lods
inc
cmp
mov
jle
cmp
int3
cli
daa
add
jl
lahf
xchg
lea
movsb
cmc
dec
test
dec
stos
lcall
pop
push
movsb
sbb
sbb
mov
mov
inc
les
add
push
pop
add
lcall
aaa
iret
and
das
mov
loop
and
dec
idivl
mov
andl
dec
out
out
and
xor
leave
imul
mov
lock
push
jecxz
add
inc
inc
dec
call
jp
sbb
push
imul
pop
notb
stos
lods
jecxz
sub
out
xchg
inc
clc
cmp
in
and
push
adc
lods
fists
jmp
jno
aaa
xchg
mov
xorl
push
push
push
rcr
pop
std
out
imul
and
and
inc
clc
push
mov
js
mov
jl
scas
popf
xchg
xchg
sti
jns
int3
insb
push
lret
iret
mov
int3
or
cmp
mov
mov
pushf
movsl
aad
sbb
mov
xchg
push
pushl
cmc
dec
push
pushl
sarb
mov
pop
int3
inc
nop
push
inc
mov
push
lods
ret
andl
fnsave
leave
xor
outsb
lods
ja
lds
jbe
dec
lahf
adc
call
and
icebp
mov
sub
pmovmskb
push
add
push
fdivs
stos
pop
pop
sbb
js
jo
loopne
xor
imul
ja
outsb
ficoml
je
rcll
mov
jle
jle
ljmp
out
cwtl
popf
lcall
xchg
and
cld
repnz
or
scas
dec
sub
jle
test
pushf
mov
sbb
inc
inc
jno
inc
icebp
jnp
out
inc
mov
mov
adc
rorb
and
test
mov
mov
filds
adc
mov
decl
jge
adc
inc
pushf
add
lret
mov
lret
daa
shl
or
add
lret
std
add
out
jae
mov
mov
push
jbe
movsb
mov
fwait
es
jp
jmp
ja
sahf
outsl
fwait
dec
mov
sbb
push
xchg
xor
push
cld
push
cmp
into
sbb
dec
mov
inc
push
dec
cmp
xor
cwtl
in
sub
out
dec
mov
cmpsb
adc
pushf
jae
inc
cltd
pop
pushf
pop
add
cmp
daa
sbb
inc
aaa
jg
nop
xor
fnstenv
jl
into
popf
jns
jo
pop
xchg
clc
data16
stos
lret
and
pop
xchg
inc
xlat
out
out
sub
nop
or
sbb
out
xchg
mov
cmp
repnz
sbb
inc
stos
xor
pop
xchg
pushf
xchg
sub
and
fldcw
clc
xor
and
sbb
or
xchg
pop
jmp
mov
sub
ljmp
inc
les
pop
nop
xchg
lods
fxam
sub
imul
into
inc
out
and
or
fdiv
add
xchg
iret
xor
mov
xlat
dec
fimuls
push
and
lret
lds
daa
jb
pop
push
xchg
lahf
inc
fs
and
add
fnstsw
mov
imul
mov
icebp
daa
jae
mov
add
stc
testb
shll
xchg
stos
push
jmp
in
mov
into
mov
cmp
xchg
ljmp
mov
and
enter
leave
mov
fcoml
adc
xor
add
jmp
addb
call
nopl
cmc
sti
xchg
mov
cmp
xor
out
xor
lahf
push
pop
inc
aad
xor
int3
xchg
and
add
xchg
jo
cmp
or
cltd
xlat
jecxz
cmp
mov
cmc
jle
xchg
jge
mov
push
cmp
push
pop
ret
cwtl
lcall
orl
je
pushf
outsl
push
pop
jmp
pop
mov
stos
adc
jge
push
inc
push
push
pushf
jg
mov
loopne
mov
add
jno
or
push
sarb
rorl
faddl
pop
in
inc
cld
push
ja
cmpsb
xchg
push
lcall
or
loopne
std
sbb
clc
pushf
outsb
arpl
dec
or
arpl
mov
pop
mov
mov
jge
in
pop
repz
inc
dec
dec
pop
dec
pop
xlat
icebp
stos
stos
adcb
inc
stc
push
aad
loopne
jle
mov
xlat
mov
int3
push
pop
sbb
ljmp
punpckldq
fcoms
xor
fists
lahf
pmullw
xchg
cmp
sarb
add
sbb
pop
les
sub
inc
je
ss
or
cmp
sub
inc
scas
or
inc
in
in
es
fcomps
cmpsb
insl
pop
and
jno
negb
fldenv
ret
repz
fcomip
loop
push
adc
sahf
test
and
adc
js
pop
fisubrs
sub
inc
loopne
inc
lods
inc
leave
fldl
push
add
nop
adc
sbb
insl
ds
and
mov
xchg
jl
sbb
xorb
stc
mov
rorb
loopne
jno
sub
fsubl
testw
fisubrl
mov
daa
pusha
mov
lcall
sub
push
dec
popa
jmp
mov
mov
and
lock
sbb
jmp
mov
inc
out
push
out
push
mov
inc
push
xchg
scas
dec
jmp
in
mov
gs
lods
dec
cli
jp
inc
inc
sub
in
and
jb
jns
cmp
jnp
mov
dec
cmp
das
dec
adc
sub
mov
int3
add
push
pop
loop
int
mov
sub
or
lds
lcall
jb
ret
jp
jnp
dec
cs
sub
cmc
push
dec
dec
mov
icebp
cmp
fsubrl
pop
dec
sub
test
cmp
aad
xchg
data16
scas
push
cmp
add
mov
bound
test
je
lret
jle
cltd
shlb
shll
shl
mov
jle
add
jmp
xchg
int3
add
enter
sub
insl
xchg
arpl
ret
into
lock
sub
xor
insb
sub
add
xchg
nop
sub
jno
arpl
mov
mov
push
or
mov
xchg
pushf
mov
mov
ljmp
xchg
call
mov
xchg
xchg
int
sub
push
push
pop
pop
stc
fidivrl
in
or
iret
ja
xor
je
inc
and
mov
sub
insl
hlt
jb
pop
inc
adc
jae
mov
aas
add
lahf
aam
adc
lahf
nop
negl
aad
adc
push
push
addb
std
es
jo
push
iret
dec
inc
lret
addb
popa
call
hlt
lret
jbe
imul
mov
adc
and
xchg
aad
jle
cmp
cmpsl
adc
icebp
sub
adc
sti
push
das
std
pop
mov
sti
mov
pop
jns
or
or
xor
stos
cmp
imul
fsubrl
ror
movsl
scas
mov
pusha
or
cmp
in
fs
mov
mov
jb
je
out
pop
adcl
sbb
xor
jge
fisttpll
xchg
fs
add
jb
add
mov
add
push
mov
dec
shl
xor
push
xchg
adc
das
jb
gs
xor
mov
mov
or
mul
out
cs
imul
mov
and
aas
xchg
jne
insb
mov
sbb
pop
out
imul
aaa
fidivl
push
push
gs
fs
and
mov
inc
pusha
cmp
les
sbb
std
lea
xorb
sbb
lahf
sbb
add
cli
jge
faddl
xor
stos
test
lods
fdivrs
aaa
lahf
jp
xor
push
or
fcmovb
mov
dec
add
fmull
pop
aas
ljmp
jge
sub
cmp
cmp
insl
ja
ret
outsl
test
in
cmc
pop
rcrl
lds
mov
bound
js
push
int3
xor
mov
pop
into
data16
jl
push
add
sbb
and
and
fiaddl
popf
lods
movsl
in
mov
inc
jno
sar
or
sahf
repz
sbb
jo
les
mov
insl
cmc
je
lods
jp
xorb
mov
cmp
xor
shll
push
mov
lods
sub
cld
pop
pop
mov
and
scas
mov
movsb
test
lcall
cmp
outsb
roll
xor
mov
xchg
les
dec
pop
sub
fwait
ret
rcll
scas
push
pop
loop
jb
stc
mov
das
or
pop
outsb
cmpsb
test
adc
popf
ss
out
fisttpll
imul
push
lock
jno
and
mov
sub
lock
mov
pushf
mov
addr16
mov
adc
sub
xchg
mov
inc
mov
inc
push
mov
mov
xlat
sbbl
xorl
ret
aad
pop
pop
and
xchg
rol
cmpsb
mov
mov
cs
sbb
xlat
sbb
cmp
fcomps
out
leave
xchg
xor
std
xchg
cltd
aad
lcall
clc
das
push
test
push
inc
imul
add
jno
jae
jmp
icebp
inc
pop
nop
add
dec
imul
adc
xor
mov
jb
or
iret
loope
xchg
adc
push
push
int3
lods
in
test
cmpsb
mov
in
sbb
xchg
clc
ss
sbb
lret
js
xchg
outsl
dec
add
mov
notb
pop
and
adc
popf
mov
sar
cmp
repz
xor
rcll
mov
insl
lds
dec
fcmovnbe
mov
sbb
fisubs
adc
pushf
dec
scas
repnz
rcrl
int3
mov
jle
aaa
jg
out
mov
mov
push
iret
das
aad
mov
outsb
mov
stos
push
cmp
pop
or
mov
jae
adc
movsl
fsubrs
test
imulb
outsl
inc
sahf
cwtl
and
xchg
out
xchg
mov
mov
ds
scas
push
insb
in
leave
pop
int
sub
jns
push
dec
std
or
lods
jge
dec
jne
addl
ss
in
push
mov
addb
add
es
mov
pop
lcall
xchg
loopne
mov
xchg
mov
push
ret
pop
fsubs
add
movsl
jo
lahf
orl
cs
mov
dec
fbld
push
stos
cwtl
mov
sub
xchg
lcall
das
mov
aaa
xchg
jmp
sub
pop
pop
cli
push
dec
xchg
idivl
scas
push
ficompl
into
outsb
sbb
sub
cwtl
es
popf
cmp
repz
cltd
repz
test
xor
xor
sbb
cli
data16
inc
push
mov
xchg
adc
mov
stc
test
popa
push
rclb
xchg
jbe
push
test
sub
mov
mov
rcrb
fwait
mov
nop
in
push
fsubrl
jp,pn
xor
insb
jne
sbb
mov
std
cmpsl
sub
mov
repz
jae
xor
repnz
outsb
jno
insl
xchg
dec
xchg
daa
mov
imul
adc
inc
or
popf
and
xchg
mov
adc
loop
js
xchg
inc
sbb
dec
xor
frstor
sti
outsl
cli
sbb
mov
gs
lret
dec
das
stos
faddl
xor
pop
je
pop
in
cwtl
or
push
in
jecxz
xlat
stos
pop
xchg
cmp
dec
pop
call
mov
cmp
movsb
shll
and
dec
in
xor
push
jge
xchg
shlb
xchg
dec
mov
lds
insb
mov
lret
addl
cs
xlat
cmp
loope
stos
dec
stos
sarl
cmp
clc
push
dec
ds
pop
add
icebp
fcomp
jno
xor
pusha
push
jl
cmp
outsb
inc
push
jecxz
orb
cmp
int
js
mov
xchg
decl
es
lret
pop
outsl
inc
loop
sub
adc
cmp
inc
mov
dec
test
int3
sub
jbe
sbb
lahf
sbb
pop
leave
mov
inc
xor
push
jg
cmp
jge
xchg
xchg
hlt
leave
push
push
dec
inc
js
xor
iret
jno
arpl
jle
xchg
xor
lods
mov
mov
jmp
sub
loope
mov
es
adc
neg
xacquire
test
insb
stos
push
jle
mov
aaa
lea
push
ficoml
mov
adc
shll
rolb
xor
cmp
xor
hlt
jmp
pop
add
in
pop
dec
orb
push
add
ja
mov
xor
ljmp
sbb
jo
sub
nop
in
jae
bound
std
sub
and
push
in
test
push
pop
sbb
ret
andb
arpl
mov
mov
dec
mov
test
push
xchg
add
mov
sbbl
sub
into
jle
test
aad
pop
inc
jle
sbb
xchg
and
push
mov
insl
scas
sub
bswap
jle
lcall
cmp
js
mov
aam
mov
imul
test
mov
pop
sahf
cmp
sarb
xchg
into
lea
inc
xchg
sub
loop
scas
decb
rcl
sti
pop
lret
pop
jp
xor
fidivrl
pusha
push
mov
aad
mov
add
mov
add
sub
mov
add
mov
aam
outsb
daa
add
fldt
jb
sub
push
cmc
push
xchg
and
add
roll
popf
push
fistps
dec
xor
pop
js
push
scas
rcrw
movsb
and
lcall
jns
pushl
pop
jle
inc
fwait
cld
cwtl
in
scas
jo
mov
icebp
lock
jmp
scas
cmp
inc
in
loopne
xor
fiaddl
pop
daa
xor
daa
inc
xlat
das
and
fmull
xchg
aas
mov
hlt
pop
shlb
shrb
mov
test
sub
sub
shrl
sbbl
insl
fnstcw
dec
ret
jl
loop
mov
popf
in
dec
xor
fadds
and
mov
sbb
and
jecxz
mov
jo
lahf
ljmp
fisubrl
test
gs
dec
pop
mov
scas
adc
lahf
fidivrs
aam
clc
inc
dec
cli
cmpsl
xchg
push
push
fidivrl
repz
xchg
int
jmp
int3
fnstcw
aaa
in
mov
jp
pop
mov
sti
repz
in
jbe
cmc
dec
sbb
add
or
jns
adc
cli
sbb
testl
jecxz
fwait
pop
adc
aad
jmp
fdivs
lods
leave
stos
imul
push
dec
sbb
dec
ficoml
sub
insl
movsb
jne
mov
lcall
push
pop
push
andw
movsb
orb
pop
jnp
in
jo
mov
xor
subl
or
cmc
mov
lahf
arpl
mov
pusha
aaa
rcl
lcall
adc
ja
into
mov
cwtl
mov
sbb
add
ret
repnz
in
dec
xor
outsl
pop
dec
push
repnz
push
repnz
dec
jecxz
sbb
loopne
jbe
fucomp
rolb
outsb
or
aad
xor
or
cmp
iret
cld
lea
mov
mov
mov
divl
shlb
and
mov
adc
insb
lcall
test
mov
cmc
mov
fidivrl
mov
cmp
scas
mov
cli
mov
adc
repnz
enter
sub
lods
shl
adc
popf
pop
dec
std
sub
shlb
dec
adc
sbb
das
outsl
stc
push
cmp
cltd
repnz
f2xm1
jle
repnz
clc
testb
cmpsl
mov
ljmp
orl
fidivs
scas
pop
add
fdivl
shll
xor
push
pop
mov
inc
sub
cmp
shrb
leave
mov
xor
in
lahf
popa
loopne
or
scas
repz
push
mov
mov
dec
sbb
cmp
mov
and
packsswb
xchg
sahf
pop
xor
sti
xlat
ret
dec
das
mov
push
cld
mov
arpl
add
push
test
xor
sarb
xchg
call
dec
mov
sahf
std
xchg
mov
test
mov
pop
inc
cmpsb
mov
repnz
imulb
sbb
inc
fs
jmp
fisttpll
xor
mov
jp
nop
aas
pop
mov
jge
fsub
cmpsl
ja
pop
dec
int
iret
pop
mov
scas
stos
inc
lret
int3
mov
fmuls
loope
out
faddl
seto
lea
pop
stc
pop
mov
mov
hlt
mov
ss
stc
lcall
fists
xchg
test
lods
mov
jns
mov
xor
jb
mov
enter
push
inc
fdivrs
idivl
loope
adc
mov
imul
gs
fstpt
aaa
insl
je
pop
mov
loope
fcmove
setg
gs
pop
jge
adc
sbb
ret
outsb
pusha
into
pusha
in
push
popa
pop
inc
add
in
pop
out
wrmsr
test
or
inc
or
scas
call
ds
iret
adc
shrb
lret
sbb
dec
mov
push
xor
mov
mov
fildll
mov
cs
inc
xor
daa
pop
icebp
or
jmp
jmp
rcr
add
rcl
lods
or
jmp
addl
cltd
mov
mov
fsubrl
and
ficompl
adc
push
outsb
mov
es
add
call
sbb
in
lea
ror
shlb
mov
dec
arpl
or
idivb
int3
sbb
int3
sbb
add
pop
dec
repnz
xor
and
fidivs
xor
inc
pop
push
jl
push
inc
inc
mov
mov
cs
and
add
hlt
and
inc
cmp
ja
subl
adc
push
test
push
mov
mov
sub
negl
mov
lds
insb
int
jnp
std
in
fcoml
sbb
dec
outsl
pop
sbb
fmuls
jp
jmp
aad
dec
xchg
jnp
fs
dec
sti
mov
lret
mov
xchg
mov
mov
inc
mov
scas
lds
shlb
cltd
insl
insb
mov
mov
fdivrp
lahf
ss
or
in
xor
js
push
rolb
cmpsl
sbb
in
ja
push
mov
mov
rcr
iret
icebp
mov
lcall
mov
jae
pop
push
inc
add
push
xchg
pop
addr16
enter
out
rorb
repnz
lds
repnz
cmpsb
inc
adc
data16
pinsrw
imul
xchg
adc
mov
xchg
sub
iret
mov
adcl
push
jno
shlb
sar
mov
movsl
les
sti
or
xor
stc
add
ret
dec
lret
gs
aaa
into
popl
addr16
pop
mov
call
nop
sub
push
add
xchg
addb
call
movsl
jl
fwait
bound
arpl
push
or
jns
and
js
int
pop
push
mov
popf
test
cmpl
xchg
sub
das
xor
inc
jb
sti
into
jbe
adc
mov
dec
inc
inc
mov
mov
ror
cmp
mov
jne
outsb
add
or
cld
push
out
into
ret
or
lods
xchg
and
out
jo
cwtl
mov
lcall
inc
dec
outsb
out
sub
in
xor
cmc
and
push
nop
sahf
xlat
push
mov
xor
loopne
dec
leave
lret
fisttpll
and
test
movsb
push
sub
or
xor
popa
mov
stos
inc
popf
outsl
xchg
cmp
and
dec
jo
push
mov
push
cmp
mov
xor
int3
movsb
in
lret
mov
das
cmp
bound
mov
into
mov
lds
pop
pop
and
mov
fs
push
push
data16
fs
adc
shlb
adc
jo
push
pop
jo
push
test
out
or
sbb
jl
nop
add
mov
ficomps
adc
pushf
jl
lret
sahf
lret
test
mov
mov
data16
push
xor
mov
ss
sbb
add
lods
and
imul
push
mov
inc
cmp
out
into
xchg
bnd
lods
inc
loope
sarl
ss
mov
mov
andb
scas
sub
repz
push
fidivrl
cltd
sub
sbb
ret
addr16
inc
sbb
imul
inc
arpl
icebp
pop
fs
mov
fbld
repz
sub
lahf
inc
cmp
rorl
int3
popa
mov
je
cmp
dec
pop
dec
shld
jmp
and
push
push
mov
add
repz
lds
add
test
add
push
add
inc
cmpsl
aaa
pop
testl
mov
mov
mov
lret
add
fstpl
lods
xchg
cli
aam
mov
xchg
push
lcall
mov
mov
insl
insl
shll
sbb
ret
mov
or
push
fisttpll
and
jo
push
jno
jp
add
sub
pop
fwait
outsl
fidivl
movsl
mov
gs
inc
cmp
adc
out
jg
lods
xchg
fdivrl
adc
mov
and
dec
lret
mov
or
cmp
push
mov
mov
mov
stos
js
dec
xchg
pop
adc
popf
mov
fisttpll
inc
xor
pop
mov
repz
inc
or
cwtl
mov
pop
mov
and
mov
xchg
push
roll
push
icebp
lret
aad
xor
cmp
fidivrs
out
les
jecxz
mov
lret
mov
das
lret
lock
pop
mov
add
leave
dec
add
iret
xor
sbb
shll
cld
ret
sbb
cmpl
inc
jg
adc
leave
push
push
pop
divl
fistpll
mov
aaa
mov
push
icebp
aam
lods
shl
enter
stc
push
push
pop
aas
in
sbb
pop
dec
inc
pop
cmp
subl
stos
jmp
jae
call
pop
stos
orb
mov
mov
and
mov
jmp
jo
dec
mov
jne
mov
sarl
inc
aaa
jmp
mov
icebp
ja
or
call
adc
sub
add
loope
nop
fcmovnbe
inc
popf
jp
jne
jmp
pop
mov
xchg
sub
test
adcb
mov
and
into
mov
fwait
push
adc
iret
pusha
xchg
mov
lcall
adc
lock
ret
mov
lret
jp
popa
into
pop
push
nop
cs
inc
push
pop
push
pusha
pusha
cmp
push
pop
xor
leave
sbb
add
sbb
xchg
insl
xor
hlt
cmpsl
xlat
mov
cld
adc
inc
jp
bound
aaa
stc
ss
sbb
pop
jb
fs
jl
cmp
adc
mov
in
cmp
dec
cmp
repnz
adc
std
mov
out
or
sbb
in
push
push
push
sbb
cs
or
mov
imulb
cltd
sbb
in
xor
loopne
push
pop
xor
inc
lcall
stos
jmp
pop
pop
cmp
dec
mov
mov
repz
mov
sub
dec
pop
test
xchg
and
or
or
xor
adc
add
sub
shr
repnz
mov
jae
jg
jmp
add
int
mov
sbb
pop
mov
aas
cmp
fwait
out
pusha
sbb
mov
loope
dec
xorl
mov
inc
push
ljmp
push
cmp
lock
mov
push
ds
aam
popf
lcall
testb
lods
in
push
fdivs
ds
sub
js
movsl
push
inc
pusha
ja
int3
sbb
sub
loope
xchg
sub
enter
jo
dec
and
insl
lcall
sbb
je
jnp
adc
jne
dec
orl
jbe
pop
pshufw
cli
imull
out
in
lahf
jl
in
into
bound
add
test
aas
arpl
pop
sub
jns
or
and
int3
outsl
push
mov
inc
cmp
les
cmp
inc
mov
sti
cmp
sbb
dec
pop
push
add
xchg
mov
imul
shlb
lods
push
sub
sub
add
ljmp
into
in
cs
sub
xchg
mov
mov
out
stos
lret
out
test
push
inc
in
idivb
sub
pop
test
push
int3
stos
dec
cld
cmpsb
mov
mov
inc
scas
adc
clc
imul
push
pop
cmp
inc
pop
andl
adc
xchg
cwtl
stc
scas
mov
popf
cmp
or
and
jne
ret
nop
mov
popf
jg
inc
mov
out
push
icebp
sub
xchg
icebp
mov
in
ret
jmp
fcompl
adc
imul
fxtract
push
in
fwait
push
popf
fmul
mov
jl
mov
xchg
sbbb
adcl
xor
xchg
add
xor
jno
jmp
outsl
cmpl
mov
and
jns
fidivrl
repnz
xor
push
js
mov
xchg
xchg
imul
dec
push
inc
sbb
cmp
push
pop
add
mov
pop
imul
js
jge
mov
std
cmp
sub
push
jmp
and
mov
dec
ret
and
xchg
inc
push
and
sbb
add
jg
outsl
cmp
ret
or
rolb
jmp
cmpl
fnstcw
adcl
push
ret
mov
cmp
out
sbb
cmp
daa
jb
mov
lds
imul
jb
dec
mov
sub
mov
mov
adc
adc
jp
std
inc
sub
inc
cmpsl
pop
pop
or
xor
insb
fst
mov
adc
pop
cmp
xchg
or
inc
movsb
test
add
mov
push
add
out
test
orl
popf
inc
ja
mov
lods
cmpsb
add
add
inc
mov
adc
lods
cmp
sbb
sbb
dec
or
push
out
sti
push
pop
sub
cmc
rclb
xchg
in
pushf
mov
cli
add
xchg
pop
ljmp
sub
inc
rolb
pushf
fisubrs
dec
cmpsb
cmp
mov
cmp
xchg
roll
mov
imul
fists
mov
mov
hlt
cmpsl
jg
addl
pop
xchg
inc
dec
cmp
and
repnz
and
stc
adc
mov
xor
enter
jae,pt
jnp
into
stc
mov
aaa
cld
mov
mov
add
lods
push
xchg
push
fldenv
mov
add
adc
imul
jae
mov
cmp
pop
mov
jg
dec
mov
pop
lret
pop
jle
jae
and
adc
mov
repz
jne
cmp
mov
int
jae
icebp
lds
jb
pop
aaa
push
pop
and
jnp
jb
loope
sbb
xchg
push
inc
scas
adcl
scas
mov
sbb
aam
pop
cmp
mov
pop
push
sbb
mov
jae
gs
dec
into
and
fwait
ss
sub
mov
pusha
les
arpl
lcall
fcomip
cli
xchg
xor
or
fsub
lea
push
jae
push
gs
nop
dec
clc
bound
call
jbe
rcrl
push
shlb
sbb
fcomip
mov
das
cmp
jne
adc
xchg
pop
push
jo
test
das
mov
fsubl
add
mov
addb
fsubrp
pop
cli
jnp
or
pop
test
xor
jle
sub
enter
je
dec
cld
jmp
inc
jmp
rcll
push
out
shrl
mov
mov
pusha
mov
inc
fcompl
stos
filds
cs
push
push
ret
sbb
pop
loopne
or
lret
jp
test
jns
adc
shll
sbb
xchg
mov
ret
jno
and
pop
pusha
cli
imul
ret
mov
sbb
adc
push
ror
test
iret
sbb
repz
dec
ror
add
fwait
push
lcall
xor
outsl
and
or
in
in
movsl
jno
cmp
inc
in
movsl
xchg
enter
xchg
dec
cld
push
cmp
scas
cmpsl
jbe
and
cmp
in
scas
daa
dec
filds
jno
out
lods
jnp
mov
pop
mov
insb
jo
and
add
outsb
dec
push
pop
xchg
push
sbb
data16
mov
mov
lods
sbb
xchg
and
mov
inc
mov
cwtl
jg
push
push
mov
lahf
lret
pop
outsl
jmp
sbb
jle
xor
adc
and
call
fcompl
sub
iret
adc
stc
jp
test
in
push
fdivr
mov
jecxz
xchg
add
push
mov
aam
dec
jo
fimuls
xor
in
or
leave
dec
js
mov
adc
jle
inc
loope,pt
fcomps
call
repnz
fxch
mov
inc
dec
into
lret
push
push
mov
inc
paddusw
arpl
and
add
bswap
ja
push
and
cltd
lret
aaa
sbb
mov
cmp
enter
mov
sbb
aaa
ret
xchg
fwait
cwtl
cmc
out
xchg
adc
jo
popf
mov
or
lock
push
shlb
nop
inc
or
loope
aas
and
xchg
pop
lcall
xor
outsb
dec
add
jmp
hlt
xor
lods
jl
push
je
subl
shrb
int
cs
and
cmpsl
sbb
cmp
xchg
pushf
add
out
gs
or
in
dec
sub
inc
pop
rorl
bound
jo
shll
inc
divl
xchg
dec
je
jmp
lcall
mov
lods
lret
dec
cmp
pop
fisttpll
popf
pop
xchg
cmp
sub
inc
data16
or
jle
test
add
jle
mov
mov
push
cmp
adc
imul
xchg
ljmp
sbb
cmp
jae
popa
dec
aaa
mov
inc
inc
adc
add
sahf
mov
pushf
pusha
xor
cs
pop
push
pusha
ficompl
push
sub
lcall
loope
mov
adc
lcall
sbb
dec
xchg
in
mov
fucom
sbb
test
sub
pop
dec
orb
cmc
repz
mov
dec
out
sbb
into
pop
sahf
inc
cmp
popl
pusha
push
mov
je
mov
in
fwait
outsb
into
xor
mov
popa
mov
jb
repnz
jne
add
lods
adc
inc
pop
inc
pop
or
adc
xchg
mov
je
pop
clc
jbe
das
gs
in
xor
mov
mov
lcall
lods
mov
es
push
mov
leave
mov
adc
inc
add
ljmp
hlt
sbb
adc
iret
das
pop
adc
mov
jle
gs
gs
ja
or
jbe
mov
xchg
les
popf
imul
jecxz
arpl
push
xchg
test
mov
js
popf
xchg
mov
popa
fmull
rcll
out
insl
mov
call
jns
icebp
shrl
ror
mov
and
dec
adcl
push
adc
or
int3
scas
or
in
fwait
mov
cmc
mov
sbb
arpl
andl
dec
stos
sub
cmp
and
mov
cmp
dec
sub
cmp
mull
mov
shlb
add
loop
add
sbb
jmp
and
insb
add
popa
imul
sub
insb
loope
lock
jnp
dec
fstps
cmp
and
iret
out
push
jo
std
mov
shll
mov
popf
aas
shlb
jecxz
and
sbb
test
dec
push
loope
scas
pop
push
inc
add
rorl
pusha
test
mov
push
mov
addb
cli
xchg
push
ffree
jge
rcl
sub
out
dec
xor
jmp
sbb
pusha
adc
ror
out
lds
add
sub
inc
lds
cli
clc
mov
adc
push
push
popa
xor
fnsave
aas
lods
push
add
and
aas
pop
or
mov
sbb
xchg
add
jno
repnz
pop
sbb
pop
mov
aam
mov
les
fcomip
adc
mov
arpl
gs
in
xchg
clc
pop
jo
xchg
jo
roll
dec
inc
loope
fsubrp
xchg
mull
jnp
fcoml
out
stos
sbb
scas
push
in
rcrb
inc
imul
add
cltd
jge
js
xor
pop
imul
repnz
mov
jg
mov
mov
test
jbe
inc
pusha
mov
gs
sbb
aad
hlt
push
inc
xor
mov
sbb
xchg
or
xor
pop
pop
xor
sub
dec
pop
orb
dec
and
rorl
sub
add
ds
cmpsb
push
jp
sub
stos
inc
mov
pop
adc
mov
push
nop
ljmp
insl
add
mov
rorl
xchg
sub
fwait
xchg
push
cmpsl
mov
or
addr16
xchg
xchg
xchg
mov
pop
add
out
js
fisubrl
cmp
js
dec
dec
aad
jns
mov
loop
popa
movsl
dec
adc
push
js
insl
lock
pop
test
test
jne
dec
dec
push
repnz
sar
lds
fwait
testl
jge
pop
in
testb
inc
adc
mov
mov
sub
xor
lahf
push
filds
out
lods
test
fwait
lcall
fistpll
push
mov
insb
sub
cmp
jno
js
lahf
fdivrl
xor
push
je
adc
aad
jg
lahf
jae
adc
test
mov
xchg
xor
sbb
loope
xchg
loop
andl
dec
add
gs
push
or
mov
push
mov
or
xor
xor
divb
xchg
jnp
out
pop
fcmovb
fadds
jge
aaa
std
cmp
bound
div
stc
xor
push
mov
mov
push
xchg
fisttpl
xor
jae
nop
hlt
insb
sbb
pop
cli
dec
push
aam
and
push
adc
pop
cmc
mov
push
int
jne
lcall
sub
je
das
sbb
or
test
xlat
push
dec
push
mov
orb
push
jae
bound
daa
mov
push
loope
mov
ret
xchg
push
mov
shlb
push
popf
push
int3
nop
jno
push
add
jno
js
jae
cmc
pop
aas
insb
push
test
adc
rorl
xchg
jnp
lods
add
popa
dec
dec
fcmovne
pop
add
roll
sub
in
lcall
out
xchg
aas
outsl
sbb
pop
mov
fnstenv
push
sub
inc
cld
mov
clc
cmp
adc
mov
cmpsl
ret
adc
outsb
loope
and
jle
das
mov
mov
mov
sbb
fwait
jno
sbb
call
in
test
insl
ss
ret
lret
lahf
xchg
sub
lret
cmp
jg
xor
dec
sub
das
inc
sbb
cmp
pop
aaa
inc
xchg
lds
add
lret
or
rorb
mov
xchg
popf
stos
pop
out
bound
aas
test
jnp
and
push
jbe
adc
inc
push
adc
lock
loopne
jnp
std
les
mov
pop
clc
stc
stos
jnp
jecxz
cmp
cmp
imul
ficompl
popf
das
std
jge
lods
or
pop
and
inc
mov
push
repnz
mov
sti
ljmp
xlat
xchg
push
add
mov
mov
fs
push
xchg
aad
push
push
jne
loop
lea
jmp
xchg
jns
or
xor
mov
push
jp
inc
mov
stos
jbe
sbbb
pop
shll
sbb
push
jmp
push
gs
lds
in
cs
roll
repnz
mov
xchg
or
adc
mov
data16
mov
mov
xchg
ss
sbb
xchg
or
mov
pop
jl
cwtl
xchg
pop
and
mov
aad
stc
clc
mov
push
enter
jns
gs
outsb
jnp
ja
add
repnz
xchg
and
pop
inc
je
movsl
out
mov
or
pop
jae,pt
jle
pop
inc
or
or
jmp
xchg
scas
mov
xchg
repz
enter
pop
xchg
aad
aad
push
or
js
lret
inc
xor
pusha
sbb
add
xchg
fucom
movsl
addb
cltd
pop
or
pop
cmpb
stos
pop
sahf
jg
dec
int3
xchg
cmp
ss
add
add
xchg
mov
dec
sbb
sbb
adc
inc
rorl
cmp
dec
test
jmp
fdiv
mov
insb
push
ret
in
push
imul
mov
jl
test
dec
mov
movsb
aaa
push
push
rorl
sbbl
sub
xchg
jno
sub
nop
mov
fldt
cmp
xor
jmp
xchg
xor
sbb
jnp
sub
lds
imul
pusha
mov
xlat
jmp
shrb
ja
pop
insl
insl
shll
add
inc
jmp
call
ror
fwait
dec
sub
clc
jmp
mov
xor
mov
or
xchg
sbb
mov
fs
push
pop
inc
xor
into
push
orb
mov
adc
push
in
ficoml
push
cmc
das
dec
sbb
orl
add
or
es
and
ret
sub
mulps
push
lret
rcl
pop
out
jbe
or
ret
les
push
lods
xor
call
icebp
pop
repz
call
nop
les
cmp
pop
out
add
cmpsb
test
sbb
fs
iret
push
scas
xor
arpl
mov
jbe
shll
push
pop
test
add
dec
or
jnp
jle
mov
rcrb
sbb
scas
flds
outsb
cwtl
and
xchg
xor
mov
or
jecxz
lcall
decb
ljmp
out
push
mov
out
pop
ficoms
mov
or
pop
loope
and
inc
int
adc
and
cmp
push
sub
mov
or
in
test
cli
in
lds
mov
xlat
imul
dec
outsl
pop
scas
loope
xchg
jno
xchg
sbbb
sti
add
mov
addr16
pop
jmp
add
jle
sbb
pop
lret
jo
movsb
push
xchg
sub
mov
jne
jmp
cmc
ret
out
cmp
jno
lret
fcom
stos
in
jnp
mov
repnz
mov
add
xor
icebp
ss
shll
xchg
cli
jg
inc
or
mov
in
pop
pop
sub
cmpsb
stos
pop
movsl
out
std
scas
sub
pop
aas
jl
or
mov
jo
lea
add
je,pn
add
sti
mov
or
imul
mulb
lds
out
hlt
jo
xchg
push
dec
rclb
subl
mov
cmp
push
jecxz
test
aas
les
ss
fmuls
out
mov
out
mov
dec
or
jmp
pop
fildll
mov
sarb
icebp
and
sub
xchg
and
test
push
push
repz
dec
jo
dec
inc
out
movsl
cmpsl
mov
ret
mov
fs
fildll
aad
je
addr16
in
inc
add
movl
sbbl
or
inc
xor
in
inc
cmp
mov
scas
dec
popa
xor
clc
out
xchg
call
push
daa
jb
or
mov
sub
jp
mov
imul
dec
sbbl
adc
outsl
pop
pop
xor
jl
shrl
push
sub
movsl
rolb
call
movsl
fcmovnu
enter
imul
dec
daa
arpl
xor
in
enter
pushfw
sbb
nop
movsl
out
stos
call
in
adc
mov
xchg
in
loop
xorw
sub
fstpl
and
mov
jecxz,pt
repnz
mov
and
jecxz
cmp
mov
out
xor
jb
out
sbb
dec
loopne
div
fnsave
das
loope
jg
and
xchg
rcll
sub
popf
repz
scas
inc
lea
pop
call
pop
xchg
mov
ljmp
movsl
mov
push
test
push
cmp
iret
ret
test
mov
data16
mov
mov
leave
jecxz
in
adc
adcb
add
sbb
mov
xor
std
addr16
inc
insb
out
jbe
jge
pop
and
test
test
inc
push
push
dec
push
and
ret
sbb
ret
cwtl
pop
push
out
push
inc
sub
mov
out
insb
loop
or
jns
les
mov
mov
fildl
push
sarb
lret
or
sub
stc
fucomp
loop
out
add
cs
lods
out
in
inc
add
sub
adc
addr16
cli
jg
pusha
jg
bound
and
xchg
pusha
pusha
cmpsl
movsl
cltd
add
inc
lods
ljmp
adc
jbe
sub
shl
ret
and
ret
fdivrl
xchg
cwtl
and
or
jo
mov
dec
mov
pop
add
jle
lret
repnz
sub
pushf
inc
idivb
push
jbe
push
int3
dec
test
jae
imul
daa
clc
andb
mulb
sbb
mov
pushl
lock
lahf
das
sub
test
aaa
xor
mov
pop
lock
mov
jbe
cmpsl
mov
cmp
jecxz
push
push
jmp
fldenv
cs
inc
pop
xchg
js
fiaddl
leave
mov
cmp
in
sub
shrl
cmp
lcall
popf
dec
sarb
and
outsl
xorl
bnd
and
sub
xchg
mov
dec
sbb
xlat
jge
je
and
outsb
imulb
movsb
in
dec
sub
inc
mov
or
mov
lcall
and
push
pop
pop
inc
xchg
fidivrl
cmpl
in
sbb
mov
inc
add
int
in
push
xchg
je
outsl
cli
ficoms
lock
loop
ficoms
std
popa
mov
sub
frstor
sar
lods
mov
mov
inc
mov
in
sub
daa
mov
mov
jle
arpl
rol
cmp
cli
or
mov
outsb
cmp
jp
pusha
add
jge
push
xor
push
and
clc
inc
and
mov
les
lods
fwait
stc
out
decl
pushf
ljmp
cmpsb
lods
cmc
sbb
push
scas
jo
fwait
ret
shl
xor
test
xchg
mov
pusha
out
call
in
dec
push
lds
add
or
fisttps
addb
adc
mov
xchg
or
xchg
add
sbb
les
cltd
adc
fdivs
cwtl
xor
fdivrs
cmp
push
js
cld
cwtl
icebp
push
jnp
push
xlat
adc
sbb
cmp
rolb
pop
mov
push
int
mov
mov
add
negl
sub
adc
mov
fstpl
add
lea
or
add
mov
jb
cli
xchg
mov
pop
in
add
cmp
jbe
mov
cmc
dec
test
push
add
stos
pop
fimuls
mov
stos
cmp
inc
jmp
stos
arpl
sbb
add
in
dec
push
push
mov
daa
dec
int3
std
lret
inc
mov
add
cltd
imul
imul
lods
rcrl
jecxz
mul
popf
hlt
mov
cmpl
data16
xor
repnz
add
inc
xchg
sub
push
jo
and
fimuls
mov
test
xchg
dec
sti
das
add
mov
mov
mov
inc
jmp
inc
dec
pop
sub
out
mov
cmp
or
sahf
mov
das
jo
adc
jg
cmp
in
cwtl
imul
add
or
xchg
inc
inc
push
rcrb
push
or
inc
xchg
fincstp
data16
jg
test
lock
cmpsl
or
sbbl
sub
push
and
ficoml
add
xor
xchg
cmp
orl
out
mov
dec
cmc
pop
push
jno
das
push
cwtl
pop
dec
xchg
stos
scas
mov
imul
iret
sarb
and
and
imul
pushf
movsl
sbb
pop
pop
repz
mov
cmp
mov
aas
in
or
push
inc
mov
or
pop
cs
cwtl
loope
ljmp
add
pop
sub
outsb
movsb
sbb
xor
in
call
inc
lods
pop
mov
mov
xchg
cmc
xor
cwtl
lods
mov
ljmp
in
enter
xchg
clc
pop
jg
push
cmp
mov
push
fsts
in
fst
shrl
inc
arpl
int3
std
fistpll
dec
dec
ljmp
sarl
jns
jae
sub
jl
bound
mov
rcr
mov
int3
ucomiss
push
push
shl
lods
rcll
subl
shr
or
pop
and
pop
mov
xchg
cmp
xchg
xchg
fdivs
cli
push
cmp
pop
outsb
jecxz
ficomps
insl
adc
loop
mov
out
lcall
sbb
mov
aaa
add
cmp
fidivl
into
jno
mov
push
imul
mov
testl
sti
enter
xchg
fsubrs
repnz
insl
adcl
lods
and
fwait
pop
test
xchg
out
iret
adc
xor
fsubl
push
lods
ds
mov
ss
scas
adc
xchg
sti
fs
add
dec
or
push
and
or
push
sub
sbb
cli
gs
pop
shrl
rorl
cld
lods
xchg
mov
cld
or
mov
das
cmp
jb
adc
mov
ds
dec
cmp
cld
and
mov
mov
in
xor
pop
xchg
cli
jno
sub
movsl
jl
roll
stc
ljmp
mov
lds
and
popa
adc
and
xor
jmp
or
mov
xor
imul
fxch
sbb
and
out
sub
xor
pop
xlat
pop
out
imulb
into
popf
push
stos
pop
push
push
xor
fsts
js
and
nop
and
stos
mov
pop
movsl
scas
movsl
mov
std
bound
dec
and
mov
lods
fs
cmpsb
cli
jnp
js
xor
inc
jnp
jo
pushf
jg
aad
mov
addr16
cmp
pop
dec
outsb
cmp
push
mov
stos
push
jge
dec
test
dec
cld
dec
fmuls
sbb
sub
xchg
in
adc
aad
lds
fstl
pop
rorl
fiaddl
mov
repnz
fcoml
jbe
ret
movsl
mulb
stos
pop
xor
jl
popf
fsubrs
test
dec
vshufps
mov
cli
stc
fsubrs
hlt
lods
lret
notb
adc
fst
add
inc
js
enter
cltd
imul
iret
push
ficoms
push
loop
outsb
xchg
push
sub
pop
xchg
sub
push
icebp
dec
sarb
nop
cmpsb
aad
fisubrl
add
xchg
sar
jns
inc
and
push
fcomip
int3
and
hlt
out
add
mov
subl
inc
and
adc
dec
and
inc
dec
sub
push
mov
loopne
push
ja
jns
sbb
xchg
xor
cmp
push
stos
lret
out
repnz
imul
pop
fiaddl
cmp
mov
popa
in
dec
mov
add
or
jmp
fidivl
lock
insl
push
ja
stc
xchg
push
shlb
mov
shl
add
lea
dec
add
icebp
pushf
inc
jl
push
sbb
inc
dec
mov
push
dec
lcall
gs
push
shrb
enter
cmp
lret
data16
mov
jp
pop
xor
pop
iret
mov
lahf
rcrb
jmp
mov
push
adc
inc
xorb
jge
pusha
sbb
inc
dec
loop
and
aaa
mov
lahf
xchg
push
add
fs
lahf
fwait
cmpsl
js
jae
or
inc
movl
jnp
sub
arpl
inc
and
inc
stos
ja
or
adc
shl
ja
adc
lods
cltd
or
cld
je
imul
dec
mov
mov
cltd
mov
ss
cltd
clc
aas
cmpsl
inc
sbb
xchg
or
dec
lds
mov
mov
sub
std
test
xor
sbb
jmp
out
or
adc
mov
jne
push
mov
xchg
xor
movsb
mov
in
icebp
push
mov
mov
movsb
mov
or
iret
mov
inc
outsl
iret
mov
icebp
xchg
sbb
scas
and
mov
test
pusha
test
pop
jo
lods
shlb
roll
dec
sub
xlat
in
dec
and
or
pop
mov
xchg
ljmp
es
xor
repz
aam
push
das
mov
cld
jge
push
mov
les
out
sub
not
je
es
xor
pushl
outsb
xchg
or
sti
push
loope
mov
lahf
out
lret
lods
sarb
ficomps
repz
in
xlat
and
mov
sar
cmp
push
stc
ljmp
cmpl
mov
jge
sub
in
cmp
out
fs
ljmp
ficoml
mov
sub
xchg
lods
jb
mov
xchg
lock
ds
add
aaa
sub
lcall
jecxz
stos
addr16
or
lcall
out
sub
or
into
iret
sbb
sub
adcl
sub
daa
adc
aad
scas
mov
sbb
cmp
pop
push
orb
rol
xchg
in
pop
jmp
in
push
and
adc
subb
scas
push
lret
cmp
adc
sbb
pop
adc
in
xorb
dec
iret
push
je
imul
mov
ret
jo
bound
mov
in
adc
ds
jmp
mov
jnp
iret
mov
mov
cmp
outsb
lcall
lret
mov
aam
mov
xor
ret
gs
mov
lock
pusha
mov
aam
int3
jecxz
xlat
mov
fs
out
mov
xchg
mov
in
xchg
lods
or
xor
jno
repz
adc
xchg
orb
xor
test
repnz
xor
fadds
dec
clc
repz
cmp
imul
jbe
mov
nop
xchg
xor
xchg
std
cmp
dec
push
dec
or
xchg
pop
popa
push
mov
jns
pop
pop
adc
filds
jle
mov
cld
push
adc
mov
ja
sbb
add
push
hlt
pushf
andl
mov
xlat
sbb
ficoml
pop
aad
dec
inc
lahf
mov
and
stos
movsb
icebp
xchg
mov
fnstsw
ss
adc
jno
fcomp
ficomps
and
and
jl
nop
sub
cld
mov
dec
es
or
add
dec
adc
mov
mov
and
dec
cwtl
addr16
into
rcrl
ret
and
nop
and
mov
push
add
lods
sub
call
cld
and
daa
mov
popf
int3
xchg
movsb
adc
mov
mov
push
jbe
ss
cmpsb
pop
jae
lea
dec
push
xor
lcall
rcl
jae
mov
movsb
out
pop
aaa
and
mov
into
leave
js
mov
decl
cmc
and
ja
push
sahf
add
filds
repz
mov
icebp
stos
or
adc
stc
pop
sbb
cli
aas
push
push
pop
rorl
push
ss
lods
mov
dec
xchg
cmp
push
jge
cmpsb
fistps
jle
pop
mov
mov
jmp
pushf
xchg
and
sbb
jo
lods
inc
shlb
mov
mov
lods
or
cs
incl
and
int3
mov
and
jns
insb
sub
xor
rcll
fdiv
sub
mov
push
fnstcw
mov
push
cwtl
repz
xlat
and
adc
cmp
leave
xlat
ja
loopne
mov
icebp
mov
push
jmp
push
nop
pop
ds
cltd
cmpsl
push
fcmovnu
es
or
lcall
pop
pusha
cmp
mov
out
repnz
adc
sbb
stc
das
sbb
cmc
dec
clc
mov
lods
dec
xchg
mov
ja
mov
push
jo
test
sub
test
jge
rorl
push
and
test
insb
ret
cmc
jge
jge
fsubrs
stos
sub
pushf
cmp
mov
in
sbb
out
or
sbb
repnz
or
xlat
xchg
xchg
ljmp
mov
arpl
or
scas
add
xor
loope
add
call
shll
or
int3
xlat
shlb
insb
movsb
enter
mov
push
and
sbb
fstps
leave
xor
sub
or
lahf
xor
inc
nop
add
cmp
mov
jecxz
lcall
push
pop
push
les
aam
pop
arpl
lock
cmp
lds
in
cs
add
mov
aad
faddl
add
jmp
rcrl
inc
push
sbbl
xchg
push
enter
nop
mov
jl
gs
or
lret
cmp
xchg
adc
add
cld
push
stc
inc
test
fisttps
stos
cmp
rcr
test
scas
stos
mov
or
jge
call
or
loopew
adc
dec
push
jne
lea
or
sbb
or
mov
test
sub
pop
testl
lods
leave
inc
fsubs
jle
ljmp
inc
hlt
aam
jg
mov
inc
push
into
pop
xor
ret
sbb
pop
mov
cmp
sub
sbb
fdivr
out
test
into
lds
xchg
mov
cld
frstor
jb
jno
imul
mov
popf
js
push
cli
imull
movsl
mov
insb
mov
iret
mov
mov
lock
aaa
and
jmp
imul
push
xorl
mov
inc
mov
adc
push
int
mov
shufps
or
movsl
sbb
outsl
or
popa
and
jmp
addl
or
std
and
ret
out
mov
into
mov
dec
and
in
xchg
repnz
ror
sub
jl
lea
jge
in
sub
inc
imul
or
sbb
pop
dec
or
sub
adc
adcl
jo
push
sbb
and
cld
jge
adc
mov
int3
mov
inc
jp
xchg
cmc
fwait
std
leave
shlb
sarl
divl
ds
sar
lret
mov
aaa
sub
mov
fs
jl
cmp
xchg
in
shlb
or
cli
addr16
mov
and
inc
adc
sbb
nop
packsswb
sbb
pop
and
mov
lahf
dec
dec
stos
sahf
push
jmp
addr16
xor
mov
and
adc
xlat
inc
lods
sar
xor
scas
mov
pusha
stos
addl
xor
push
xor
jnp
aaa
xor
dec
std
dec
mov
gs
subl
subl
xchg
add
cwtl
pop
fsubl
lahf
mov
and
ss
dec
or
scas
out
xchg
pop
addr16
call
or
in
aam
je
fsubrl
mov
mov
hlt
into
addl
outsl
in
dec
insl
rcl
mov
jo
cwtl
mov
jae
das
push
or
fldcw
and
mov
mov
lea
mov
jecxz
std
xor
pushf
lods
jb
mov
es
popa
mov
adc
adc
jmp
and
icebp
clc
and
cli
test
inc
loope
dec
jb
hlt
mov
mov
add
mov
mov
testb
mov
hlt
xchg
pop
mov
cmp
jg
or
das
rcll
push
mov
cltd
cs
dec
test
sub
data16
pop
insb
repz
cmpsl
lods
push
lods
lret
mov
dec
xchg
repz
cli
push
adc
dec
loope
scas
cltd
push
in
cli
jl
pop
xor
cwtl
push
adc
pop
and
add
fsubrs
jno
mov
adc
xor
mov
xlat
adc
jecxz
sub
inc
cmp
addl
jg
sbb
les
dec
mov
jecxz
in
and
mov
jg
jmp
hlt
outsl
add
daa
adc
jb
leave
shll
xor
lods
fists
cld
pop
test
loop
mov
sbb
add
mov
or
js
fbstp
movsl
cltd
cld
mov
jmp
ret
iret
lds
int3
std
xchg
cli
in
jp
sbb
popa
cltd
xchg
push
xlat
fisubrl
inc
sbb
ljmp
fs
and
xchg
mov
mov
dec
cmp
cmc
jb
clc
aam
adc
sub
sub
inc
and
fisttpll
aad
cs
aad
popf
pop
cwtl
jne
mov
sarl
cmp
into
and
pop
out
mov
or
cwtl
scas
pop
popf
pushl
jp
xor
jbe
pop
sti
mov
ja
cmp
xor
or
pop
inc
stos
repnz
jecxz
cmp
repz
xor
xorb
movsl
adc
fs
mov
int3
jb
in
sbb
sub
jmp
insb
cli
fs
in
push
leave
pop
in
xor
lock
insb
xor
xchg
sub
sti
out
lret
outsb
cwtl
sar
rol
out
jmp
jp
adc
xchg
ret
fidivl
rcrb
dec
mov
test
sbb
out
shl
movsb
fimull
push
mov
cwtl
push
xchg
mov
mov
arpl
shll
sub
xor
movsl
and
adc
sbb
out
cld
lret
cmp
or
sti
and
mov
fcoml
pop
rolb
adc
popf
inc
in
or
negl
dec
clc
or
ja
leave
gs
xchg
aad
mov
cmp
xor
inc
mov
test
push
pop
movl
jne
sbb
lods
or
test
test
inc
pop
add
inc
cs
jno
outsl
jns
pop
lds
lret
xor
loopne
shrl
pusha
jno
inc
test
fists
insl
mov
mov
jns
pop
mov
pop
dec
or
rolb
imul
cmp
jge
je
mov
notl
pop
loopne
call
pop
lds
das
xor
add
scas
test
stos
adc
jmp
aaa
push
dec
nop
shlb
out
lea
lcall
dec
rcl
es
out
jb
cmc
push
outsb
ror
cwtl
cli
ja
xchg
jl
fdivr
test
jecxz
cmp
int3
repnz
push
cmp
jnp
pushf
sub
sub
mov
adc
sub
pop
sbb
push
pusha
cmp
clc
jb
lods
movsb
fdivl
push
mov
cmp
fldcw
sti
xor
mov
push
hlt
mov
inc
mov
fsubrs
adc
pop
test
daa
add
jp
xorl
scas
jno
adc
inc
xor
push
daa
pusha
scas
fisttpll
leave
pushl
leave
lcall
pop
setns
or
nop
movsl
ja
cmc
push
xchg
inc
xchg
push
clc
stos
mov
mov
loop
loopne
or
xor
js
jmp
cmpsb
xor
outsl
mov
add
dec
cmp
push
jne
lock
dec
in
sbb
lock
mov
icebp
sub
loop
fnsave
sub
jae
dec
inc
jae
scas
cltd
mov
mov
adc
add
and
movsb
sub
lahf
push
cli
int
add
jle,pn
data16
daa
iret
in
and
add
sub
fidivrs
popf
push
jbe,pn
mov
cmc
mov
in
fidivrs
pushf
cmp
outsb
cmp
mov
xchg
dec
test
and
js
pop
mov
fstl
les
ss
div
stos
xlat
cmp
mov
inc
mov
push
scas
or
ljmp
nop
mov
xchg
cmc
xchg
adc
std
or
cwtl
push
dec
inc
cmc
inc
ja
dec
cmp
popf
adc
push
orl
dec
lods
std
out
push
in
sbb
jne
adc
jns
or
inc
aaa
stos
movsb
ja
adc
cmpsl
cmpsl
jbe
ret
nop
jne
mov
in
add
gs
pushf
cmpl
inc
pop
rorb
sahf
mov
add
pop
dec
pop
push
xchg
sbb
push
push
adc
cmp
mov
scas
xlat
lods
and
jge
aam
sub
xchg
rcrl
pop
std
fsubrl
push
jecxz
test
lods
jbe
mov
je
lea
mov
cmp
jne
or
adc
movsb
popf
jl
shlb
jle
das
rolb
cmp
pop
lahf
movl
pop
daa
push
test
cmpsl
scas
mov
adc
leave
pushf
cmp
xor
in
mov
ror
idivl
test
clc
inc
and
leave
imul
dec
cli
sbb
mov
xchg
cli
sbb
sub
out
out
fimull
sbb
mov
fdivr
test
mov
jbe
cmp
daa
dec
jg
push
test
adc
or
aam
xor
sahf
mov
lea
xchg
dec
xchg
cli
xor
divb
dec
int3
and
and
and
iret
mov
aad
dec
dec
adc
sbb
sub
in
add
shl
out
orl
mov
cld
push
sub
aam
sub
movsl
xchg
out
stc
shrl
loope
add
jecxz
mov
pop
ffree
arpl
jbe
adc
dec
xor
xor
lret
subb
pop
jg
cs
dec
jmp
int
subb
aaa
pop
scas
daa
lret
add
or
push
add
ret
sub
sarb
jmp
bound
lock
inc
inc
push
ds
lock
inc
lods
and
fs
xchg
into
or
ljmp
cld
in
fdivl
mull
lock
inc
loope
test
test
mov
xchg
dec
clc
les
mov
dec
fs
jl
pop
pop
jb
xchg
insl
dec
das
sbb
jno
icebp
ss
dec
or
addr16
jae
or
mov
mov
mov
mov
mov
inc
es
push
ffreep
and
pop
or
cmp
test
jae
test
cmp
xor
mov
add
jo
pop
pushf
jmp
mov
or
jnp
xchg
leave
add
negl
pop
leave
inc
imul
dec
shll
nop
mov
imul
dec
inc
xchg
arpl
pushf
jge
pop
jae
fidivrl
sahf
add
sbb
lods
fmul
test
mov
das
and
dec
pop
lret
stos
pop
xor
in
sbb
add
jns
pop
mov
ret
insl
int
jmp
into
mov
dec
adc
mov
mov
xchg
inc
jp
push
pop
jmp
dec
jecxz
xchg
mov
nop
inc
lret
xor
pop
icebp
les
sub
outsb
mov
inc
pop
hlt
xchg
inc
mov
push
loopne
adc
inc
and
push
inc
pop
xor
pop
jle
mov
push
test
das
nop
mov
imul
mov
add
ja
jmp
dec
sub
xchg
jb
cmc
popa
orl
sbb
fisttpl
jno
cmpb
mov
mov
sub
rol
sub
out
es
out
adc
or
fwait
test
inc
dec
sub
js
mov
or
leave
xchg
xchg
mov
hlt
dec
add
sub
fsubr
push
roll
mov
pop
sbb
xchg
add
mull
icebp
mov
clc
into
fisttps
rcrb
add
daa
imul
pop
jg
mov
mov
xor
fistps
shlb
btc
repnz
aam
mov
cwtl
icebp
or
ret
push
cmp
cli
and
mov
popf
aam
fldl
jo
or
es
dec
lret
jnp
sbb
mov
mov
xor
jbe
jnp
xor
pop
pop
and
mov
loopne
pop
add
addr16
mov
xchg
or
inc
daa
xor
mov
add
add
mov
imul
rclb
stc
testl
inc
fs
xchg
call
push
mov
adc
mov
push
jae
push
out
inc
rcrb
inc
lods
inc
cmc
fsub
rcrb
mov
sub
mov
pop
xchg
fsubs
in
xchg
push
gs
test
rolb
dec
inc
ljmp
push
scas
sbb
movsb
mov
fdivrs
add
movsb
xchg
imul
fwait
xor
mov
je
or
pop
push
mov
out
leave
out
push
movsb
mov
out
inc
inc
daa
xchg
adc
test
inc
mov
enter
dec
or
fwait
fwait
gs
pop
je
mov
daa
xchg
ficomps
orl
orl
mov
fldl
push
mov
ret
mov
mov
test
push
push
cli
pop
stos
int3
fstl
add
dec
jbe
mov
mov
psraw
mov
outsl
test
or
add
je
jl
jb
inc
mov
sub
mov
lea
cli
lcall
xor
out
and
les
mov
rorl
fsubrl
divb
or
pushf
xor
mov
pop
cwtl
inc
out
repnz
outsb
and
xchg
mov
dec
pop
pop
sbb
xor
in
cmpsb
aas
mov
and
addr16
push
inc
es
popa
xchg
cmp
pop
dec
add
add
mov
pop
lret
sub
bound
cmp
xor
mov
std
hlt
lret
pop
and
mov
push
andb
xchg
sti
dec
jnp
push
lods
ja
mov
sti
push
mov
addb
mov
sub
leave
imul
jae
cltd
enter
cwtl
lret
mov
lods
mov
adc
xchg
jge
repnz
inc
loop
adc
mov
xor
lock
scas
pop
ds
scas
push
stos
cmpsl
push
lods
pop
sub
stos
ss
rcrl
leave
lahf
mov
lcall
inc
or
notb
adc
hlt
mov
sbb
sti
add
lds
dec
leave
mov
mov
fcmovb
sub
or
cld
test
sar
sahf
jmp
sti
adc
mov
daa
mov
insb
adcl
cmp
add
push
mov
jp
xor
jnp
imul
sub
les
lret
daa
push
cmp
mov
sub
out
jo
cmp
adc
xor
sub
and
orb
pop
push
adc
jns
dec
or
rcr
lods
icebp
sbb
add
fisttpll
fisttpll
push
push
popa
pusha
mov
push
dec
mov
lods
push
int
dec
pop
push
push
sub
subl
mov
lcall
ds
jne
lahf
push
popf
push
into
xchg
pushf
shrb
dec
jbe
pusha
fwait
insb
jne
push
pop
into
out
push
xchg
jns
orl
jg
in
or
and
adc
mov
js
sub
hlt
loopne
xchg
inc
movsb
ss
push
lods
mov
and
imul
scas
or
inc
push
xor
xor
sub
pop
push
xor
cld
jge
add
test
cmp
inc
mov
sbb
and
stos
fadds
inc
push
sbb
lret
shlb
shll
cwtl
mov
popa
cld
subl
jnp
jns
push
out
pop
popa
sbbb
cltd
faddp
sbb
in
mov
jbe
cmpsl
mov
sahf
test
mov
mov
mov
aas
es
pop
cmp
repnz
add
xchg
std
fldenv
mov
rcll
xlat
xor
pop
pop
xchg
push
mov
mov
scas
push
cmpsl
xor
xchg
out
and
push
cmp
mov
inc
inc
std
addl
push
cli
xchg
in
data16
in
mov
adc
popf
mov
repz
mov
push
cmp
rep
in
add
mov
adc
mov
xor
jne
fidivl
fidivs
sbb
or
mov
subl
mov
cmp
mov
stos
push
mov
test
loope
xor
je
and
rcl
cmpsb
aam
and
push
test
mulb
jl
push
sbb
mov
pop
xlat
add
mov
inc
movsb
in
mov
adc
dec
cmp
push
jne
mov
cltd
pop
fdivrs
sbb
mov
push
shll
lcall
aam
hlt
mov
aas
repz
int3
jecxz
xor
sbb
jle
mov
mov
dec
mov
dec
je
push
jnp
and
inc
and
mov
loope
das
cmp
cmp
or
jne
std
aam
mov
outsb
cmp
xchg
cld
aas
or
in
lds
mov
inc
les
in
mov
xchg
pusha
pop
lea
dec
rolb
mov
shlb
add
jecxz
jle
adc
cmc
xor
pushl
ficompl
enter
test
outsl
mov
mov
call
adc
or
mov
adc
inc
das
xchg
mov
imul
sub
in
popa
lds
xchg
sbb
push
les
dec
popaw
cs
ja
ds
addr16
mov
cmp
std
xor
or
js
sbb
adc
mov
call
jno
subl
lea
adc
in
pusha
call
mov
enter
cmp
icebp
jns
test
jb
inc
ds
cmp
fsubl
dec
inc
push
test
cmp
ja
dec
lock
inc
jno
mov
cmp
and
in
enter
cs
call
jae
inc
fstp
pusha
push
out
xor
mov
outsb
inc
test
ret
fbstp
pop
std
fcoms
aad
ficompl
addb
dec
mov
jns
push
adc
jnp
sbb
fldcw
movsl
rolb
sbb
subl
xchg
jl
dec
xor
aaa
lods
hlt
jns
sub
movsl
cmc
testl
lods
sub
jae
xor
mov
notl
dec
cmpl
add
fwait
jl
outsb
mov
and
push
in
repnz
nop
cli
aam
or
cwtl
mov
movsb
cmp
mov
jecxz
rclb
in
push
shlb
jnp
mov
mov
cmpb
loopne
or
dec
jno
xor
jmp
lret
divl
stos
test
fbld
fdivrs
push
xchg
add
cmp
mov
out
lret
xlat
sbbl
in
cltd
test
fsubr
lret
fldcw
int3
mov
out
xor
test
sub
pop
jl
mov
jnp
test
inc
or
push
push
add
mov
out
daa
cltd
call
and
add
xchg
imul
ds
out
iret
dec
fidivs
sbb
dec
cmc
rcr
test
xorl
notb
hlt
fstpt
jmp
pop
sub
mov
pop
into
test
ja
clc
adc
roll
push
idivl
fisubl
pop
mov
add
xor
add
fldenv
fsubrl
jmp
cld
ret
sub
xor
ret
ja
inc
push
mov
jbe
mov
addr16
mov
xlat
xor
jl
jo
cmpl
push
cmpsl
mov
leave
push
leave
loope
es
add
es
or
insb
pop
cwtl
dec
inc
pop
pop
mov
adc
jle
out
push
inc
jg
sub
ljmp
cmpsb
repnz
lcall
sub
push
cmp
notb
add
push
mov
addr16
pop
in
adc
sub
aad
pop
lret
ficomps
les
fs
adc
shll
out
cmp
test
popa
mov
sbb
out
pop
xor
pop
pop
nop
sub
rcrl
or
hlt
and
loopew
popa
clc
fincstp
sub
and
addr16
mov
push
in
repz
fstpl
adc
dec
es
call
loopne
es
sbb
cmp
mov
fs
int3
rclb
jg
lcall
xchg
fdivrl
jmp
dec
lret
incl
jo
filds
dec
push
adcl
lock
xchg
fisttps
inc
ror
jno
cmp
push
scas
mov
sub
or
dec
xchg
cmp
sub
shlb
imul
inc
mov
loope
pop
or
cwtl
mov
xor
int
fcmovnbe
add
cmp
clc
push
xchg
lods
cld
mov
lds
lea
mov
movsb
adc
adc
mov
jge
insl
mov
jl
cs
xchg
mov
jmp
cmp
pop
lea
test
mov
push
pusha
or
add
mov
xor
fimuls
dec
or
arpl
dec
negl
dec
aad
ret
negb
addr16
push
lea
movl
in
lds
xchg
shlb
iret
js
cmp
rep
and
mov
push
or
arpl
adc
insl
cmpsb
or
outsb
push
inc
push
jo
push
mov
jl
mov
cli
adc
mov
jmp
js
jbe
movb
mov
sub
mov
fdivl
imul
pop
stos
push
pop
dec
daa
loopne
mov
jge
cmp
icebp
lods
icebp
mov
xor
and
xchg
je
inc
shl
push
cmpsl
and
aas
lcallw
push
rolb
or
fs
and
outsb
push
mov
mov
in
aad
mov
inc
or
cmpsb
out
add
scas
cmc
fisubs
mov
incl
sub
pcmpgtd
add
push
stos
gs
pop
std
pop
sbb
jge
inc
lahf
xor
insl
sti
dec
mov
push
mov
out
lock
ja
dec
jp
mov
inc
xchg
jle
loope
sbb
mov
sub
xor
rolb
cli
fyl2xp1
pop
cmpsb
and
dec
int3
push
and
cmp
or
popa
imul
sub
lret
stos
movsb
mov
in
ja
test
xchg
ss
fnstcw
stos
add
jne
xor
xor
pusha
or
mov
xor
adc
shrb
mov
fisttpll
das
cmpsb
cmp
stos
in
push
mov
les
clc
dec
out
push
insl
mov
sti
push
stc
data16
mov
dec
std
mov
lods
fcmovu
sub
mov
inc
mov
sub
or
in
lcall
dec
ds
sbb
jns
jle
cmpsl
dec
fbld
push
cld
mov
jmp
sbbl
shll
mov
pop
pop
in
inc
pop
rolb
mov
call
fiadds
into
les
and
add
mov
jg
xchg
push
cmp
dec
mov
pop
lahf
mov
inc
popl
imul
scas
or
mov
pop
pop
inc
lds
insl
dec
mov
das
lock
adc
mov
cli
mov
mov
sbb
mov
out
je
shll
mov
jl
or
xchg
mov
hlt
jle
sbb
out
xchg
xor
inc
inc
or
inc
clc
movsb
lret
scas
adc
add
es
mov
mov
pop
movsb
mov
addr16
and
movsl
add
sahf
mov
pop
mov
js
or
pop
lea
cmp
lods
repz
sub
or
xor
jl
pusha
cmpb
cmp
outsb
dec
adc
das
gs
mov
add
inc
fcomps
testb
pop
lcall
out
or
mov
jae
and
lock
add
out
in
xor
fldcw
out
push
daa
jge
jne
push
sub
inc
mov
and
mov
outsl
or
jne
inc
sub
xchg
or
push
test
scas
mov
sub
inc
mov
aam
xchg
mov
es
mov
fidivrs
adc
leave
int3
push
lcall
pop
mov
hlt
inc
sbb
out
clc
or
xor
xor
xchg
push
xor
dec
push
call
xor
mov
clc
mov
aam
lcall
test
jne
pop
pop
hlt
jo
shll
and
lret
fidivrl
mov
sbb
in
push
mov
ljmp
loopne
shrb
add
ds
adc
fcmovb
jmp
cli
mov
sub
lcall
add
cmp
fsubs
pop
pop
cmp
push
sbb
inc
roll
or
mov
push
out
lea
xor
push
pop
jnp
xor
sarl
push
imul
clc
mov
xchg
mov
adc
dec
add
and
rcrb
gs
inc
xchg
leave
adc
mov
ret
mov
mov
js
cmp
leave
cmc
jne
test
mov
dec
xchg
mov
pop
inc
or
in
jmp
test
push
aam
out
js
cmpsl
ret
cmp
fcoml
push
sub
jne
ja
mov
sti
retw
sub
adc
lcall
outsl
inc
cmc
test
js
fisttpll
add
outsb
push
stos
dec
or
push
cltd
std
xor
push
addl
dec
sti
cltd
mov
dec
hlt
fmull
push
mov
mov
movsl
jmp
sbb
dec
jecxz
and
in
fucomi
ret
mov
cmp
lret
loope
jle
ds
cmc
xor
scas
add
adc
stos
lock
cli
fsts
fists
daa
pop
cmp
ss
sbb
push
popf
fisttps
shrb
rorb
inc
test
scas
addr16
cmp
push
xchg
aaa
mov
mov
test
pop
cmp
mov
jl
pop
pop
lock
pop
lods
in
add
je
inc
int3
pop
mov
test
sti
push
or
shl
shlb
jae
lret
lcall
jne
push
sahf
or
jp
xchg
test
cmpsl
movsb
nop
mov
and
push
popa
adc
cwtl
dec
cmp
xor
insl
out
cwtl
adc
lcall
or
loop
adc
inc
or
test
jecxz
xor
xor
inc
jle
adc
jns
jmp
loop
ret
stc
mov
jb
stos
rcrl
mov
mov
xor
mov
dec
shlb
ret
xchg
xchg
repz
lds
imul
faddl
push
divb
push
repnz
in
lret
sub
and
mov
sbb
ljmp
or
xchg
pop
inc
adc
fwait
or
cmp
sbb
mov
shl
jo
mov
cmp
and
pop
jno
pop
aad
inc
inc
xchg
enter
dec
popa
lret
les
mov
ret
xchg
push
ja
mov
stos
jmp
jno
arpl
push
inc
call
cmp
jmp
iret
fsts
push
inc
or
repz
ja
bound
push
push
jbe
jbe
dec
mov
icebp
jg
sbb
xor
lods
pop
inc
lods
xor
add
add
leave
mov
pop
test
mov
ja
aaa
push
call
in
mov
xor
add
call
jle
push
jle
mov
push
lahf
cmpsl
xor
mov
mov
mov
pop
jno
cmp
or
mov
sub
dec
mov
out
push
dec
sarb
inc
sub
cli
lock
and
and
lahf
ljmp
lods
pop
scas
add
cmp
or
push
lret
movsb
repnz
pop
push
adc
cltd
and
jmp
int3
mov
dec
ja
cli
pop
xchg
in
sarl
jae
out
adc
ficompl
pop
mov
sub
sti
xor
fimull
icebp
push
mov
inc
fildl
imul
stc
cld
out
stc
aaa
fidivl
leave
inc
cmovb
adc
sti
cmp
test
sub
dec
jp
les
cmpsb
ljmp
sub
and
fsqrt
sub
jmp
or
sub
xor
pop
adc
rcll
or
or
roll
dec
cmp
pop
test
or
imul
incb
xorl
pop
dec
dec
mov
aad
popf
test
jno
mov
loop
loopne
adc
dec
in
jl
pop
mov
jp
push
scas
dec
repnz
outsb
inc
xor
sahf
mov
pop
mov
cld
scas
int
fadd
fimull
test
iret
push
enter
or
and
or
ljmp
ds
jle
testl
adcb
mov
mov
pop
leave
dec
fldl
sbb
dec
mov
aas
aas
pop
call
or
mov
sahf
mov
in
mov
test
ret
or
pop
mov
cmp
jmp
xorl
call
inc
sti
lret
addr16
stc
adc
pop
xor
pop
add
out
pop
inc
lret
mov
cli
xchg
mov
add
imul
add
add
lock
test
cmp
adc
jmp
jae
lret
aas
or
iret
mov
xchg
mov
cmp
jg
out
jl
out
jne
pop
lock
test
xchg
out
lcall
pop
jo
cmp
test
mov
inc
push
in
inc
mov
add
xchg
push
dec
cltd
inc
iret
fistps
jmp
call
xlat
mov
inc
jnp
sbb
test
inc
inc
enter
fbld
mov
push
sbb
inc
or
xor
mov
data16
mov
dec
cmp
mov
ror
dec
mov
mov
fisubl
icebp
pop
mov
cmpsb
inc
fsubr
lock
shlb
shlb
adc
add
daa
stc
int
mov
loop
sub
dec
mov
imul
into
das
rorb
and
nop
lea
inc
rcrl
pusha
orl
imul
into
or
adcb
std
fidivs
sub
mov
mov
nop
sub
sahf
xchg
add
daa
xchg
dec
mov
jno
adc
jge
inc
in
leave
sahf
ret
inc
xor
cltd
lods
xchg
sbb
mov
cli
adc
add
inc
dec
push
push
inc
cmp
ret
loope
inc
popl
bound
and
dec
cltd
rcrb
stos
js
add
cmp
xchg
push
sbb
fldt
xor
mov
add
fcoml
cmpsb
movsb
popa
shrb
and
pushf
into
push
cmp
or
call
xlat
lret
and
outsl
mov
out
data16
test
in
mov
stc
cli
or
outsb
loopne
add
pop
ja
jl
subl
jmp
mov
scas
insb
push
mov
incb
sbb
pop
pop
std
mov
sbb
jo
into
mov
mov
add
fildl
ds
push
adcb
ds
cs
mov
into
mov
ss
mov
cmpsl
cmpsl
mov
add
and
test
leave
cli
fldl
pop
arpl
lds
stos
jge
insl
into
cmpb
fwait
pushl
and
adc
or
sarl
pop
leave
call
pop
inc
sahf
cmp
jo
adc
movsb
pop
aas
xchg
adcb
inc
imul
pop
mov
inc
outsl
pop
loop
outsb
pop
and
repnz
inc
sti
cmp
repz
push
test
pushf
int
fisubl
std
dec
jo
loop
xor
or
jb
ret
adc
arpl
rclb
jo
repnz
pop
and
clc
sub
sub
push
pop
xor
push
cmp
mov
cmc
ja
push
icebp
hlt
loope
pop
push
shlb
mov
aas
pop
inc
mov
dec
sbb
in
inc
mov
pop
cmpl
or
inc
sub
dec
enter
rcl
prefetcht1
push
cmp
push
les
repnz
push
pop
and
outsb
cmp
pusha
sub
out
out
pop
test
adc
xchg
lcall
ret
mov
icebp
leave
mov
jl
adcb
pop
jb
pusha
push
imulb
mov
sub
mov
movsb
adc
or
inc
mov
push
enter
lcall
loopne
cmp
pop
sbb
hlt
xchg
fbstp
in
jnp
ja
cmp
mov
jne
jns
cmp
negb
call
hlt
icebp
dec
cmpsb
jb
xor
push
push
lds
stc
and
repnz
jbe
add
int
push
fstps
sub
outsl
push
les
outsl
lcall
fstpl
and
gs
mov
mov
mov
repnz
dec
enter
push
cmovno
fcmove
sbb
in
mov
add
mov
imul
loopne
add
movsb
mov
mov
mov
imul
es
or
frstor
adcl
stos
mov
or
pop
iret
cli
call
dec
and
aam
pop
fwait
mov
pop
cs
scas
pushf
stos
push
xchg
cltd
mov
mov
mov
push
xchg
sub
call
test
inc
iret
mov
xchg
sbb
inc
mov
mov
fcmovnb
aaa
pop
stos
mov
clc
mov
popa
cmpsb
mov
add
jmp
aam
cmpsb
sbb
inc
lock
repz
es
pushl
or
lods
rcrl
adc
pmaxub
pushf
dec
movsb
out
dec
jle
sahf
inc
ficomps
inc
push
loope
jne
jp
add
insl
dec
mov
sub
sub
lds
cmp
leave
insb
ja
mov
sub
mov
xchg
dec
scas
cmc
aam
pop
and
jl
push
shll
inc
xchg
xchg
inc
xchg
pop
scas
data16
cld
sti
sub
arpl
fstps
adc
arpl
sub
in
mov
pop
jl
data16
std
inc
stc
icebp
push
aaa
fisubrl
xor
in
pop
and
sub
mov
inc
add
jecxz
mov
hlt
mov
xlat
and
or
loop
mov
xchg
lcall
dec
xchg
es
or
push
sarl
pop
push
inc
dec
int
fwait
repz
xchg
add
popa
outsl
iret
outsl
adcb
pusha
sub
daa
pop
out
push
sub
cld
xchg
mov
pop
adc
ret
leave
loopne
rcr
jne
mov
adc
mov
pop
sub
leave
enter
jg
cmp
jbe
subl
sbb
jns
nop
popf
jmp
pop
jg
xorb
stc
jmp
aas
vcomisd
cwtl
dec
call
pop
je
in
lea
mov
pusha
outsl
out
sub
cwtl
push
xor
into
mov
push
xchg
lcall
xchg
lcall
test
add
mov
push
mov
fisubl
aas
fstpl
inc
andb
loope
into
sbb
pushf
dec
pop
scas
add
pop
sbb
test
cmp
popa
dec
jo
repnz
jno
dec
test
cld
mov
leave
ljmp
mov
insl
int
jge
lahf
jecxz
fs
xchg
push
lret
jns
cmp
jo
add
jle
mov
bound
mov
subl
into
xchg
in
mov
andl
pop
jo
out
test
jne
jmp
inc
shr
ljmp
mov
fsincos
push
xor
pop
jmp
xchg
mov
xchg
sbb
mov
jne
xchg
out
jo
call
out
mov
push
hlt
mov
cwtl
jb
jmp
ret
ds
mov
aam
jne
loope
imul
orl
xor
sbb
aas
stos
inc
das
mov
aad
add
imul
jb
dec
das
pop
pop
cmp
movsb
movsb
add
jecxz
dec
and
lahf
jae
repnz
adc
aas
fwait
jmp
movl
inc
shlb
ja
jecxz
add
fsub
jmp
add
fcom
sbb
sbb
aad
mov
and
repz
in
sbb
sbb
lret
sub
cltd
mov
lods
pushl
inc
lcall
sub
xchg
pop
mov
sbb
add
incb
lods
ljmp
dec
mov
dec
cmp
hlt
stos
pop
ds
lret
dec
mov
xor
sub
std
ss
sbb
sahf
icebp
sub
in
jge
js
ljmp
xor
add
dec
cmc
dec
nop
in
cmp
push
xlat
outsb
test
adc
jmp
rclb
ljmp
pushf
fs
and
sbb
and
ret
dec
cmp
dec
lret
dec
fcmovnu
inc
cmp
pop
mov
cmp
pusha
ja
lea
mov
rcll
in
js
jae
roll
andb
push
sub
dec
jb
mov
inc
lret
adc
dec
not
sub
ss
notb
aas
add
aas
popf
and
pop
inc
push
push
push
ljmp
flds
cmpsl
push
sbb
lcall
jecxz
inc
std
dec
cmp
jmp
nop
and
out
leave
mov
stos
adc
popa
mov
mov
fildll
mov
sub
xor
out
push
mov
add
ffree
xor
outsl
ret
aas
mov
aaa
lea
rcrl
in
sbb
dec
ja
or
mov
xchg
dec
xchg
and
xor
inc
outsl
jg
push
sbb
daa
stos
xchg
arpl
mov
xchg
lahf
les
pop
sbb
lods
adc
enter
mov
lock
pop
int
call
aaa
add
bound
lods
pop
loop
cmc
or
mov
iret
xchg
jo
dec
inc
mov
fidivrl
sbb
mov
inc
rcrb
adc
push
inc
lods
fmul
jecxz
or
mov
xchg
sbbb
sbb
fstpl
call
inc
ret
pop
movsb
outsl
push
loop
cmp
test
jge
xchg
xchg
out
mov
add
pop
mov
int3
mov
mov
lcall
adc
xchg
cli
in
insb
jnp
xor
sar
in
imul
or
inc
mov
xchg
repnz
xor
fidivl
sbb
xor
enter
push
and
mov
or
into
xchg
xor
shl
sub
aas
int3
decl
das
dec
aad
int
mov
into
dec
adcl
imul
push
add
dec
sti
mull
test
insl
nop
into
or
pop
add
pop
loop
adc
cmp
or
hlt
fwait
lods
div
or
cmp
outsb
neg
out
fldenv
inc
xorb
js
shll
ret
mov
xor
and
push
imul
ds
popf
inc
insb
out
mov
sub
nop
cmp
gs
cs
mov
adc
aas
cwtl
push
jecxz
test
push
jbe
arpl
mov
and
push
or
cs
cmpsb
pop
cmp
pop
xor
cmp
or
dec
out
ficomps
js
call
dec
lret
cld
pusha
aad
sti
push
adc
xor
mov
shlb
add
es
and
jge
mov
jecxz
sub
sub
cmc
fwait
mov
dec
jl
mov
test
enter
in
in
add
and
outsl
clc
xchg
jl
mov
pop
xchg
pop
mov
fsubs
hlt
imul
mov
test
out
scas
push
push
or
dec
and
lret
sahf
add
cmp
sar
movsl
aad
test
shlb
cltd
xor
cmp
mov
sub
cs
adc
out
xchg
sti
jl
insb
sti
inc
sub
pusha
sbb
jbe
shl
xchg
sub
xor
scas
inc
mov
push
pop
ljmp
repnz
push
cmp
imul
nop
cmp
push
fimuls
cs
clc
sbb
lahf
pop
cmp
rcr
push
aas
sub
test
outsb
jl
mov
out
mov
fstpl
adc
sbb
xor
pop
or
test
and
and
rclb
pop
pop
js
sahf
ret
lcall
jbe
repnz
xchg
fisubrs
cmp
and
lcall
inc
jbe
lret
inc
sbb
push
push
jbe
mov
popf
int3
lret
out
sub
ja
cmp
das
fildl
xchg
sbb
lar
lods
in
adc
das
mov
jle
sub
les
shll
into
push
hlt
push
mov
inc
xlat
inc
xchg
lret
incb
mov
mov
aaa
mov
je
sbb
and
sub
mov
and
dec
pop
lock
in
xor
fwait
mov
stos
adc
ja
mov
hlt
or
adc
mov
push
aad
cmpsl
mov
leave
mov
inc
sahf
cmp
adc
dec
aaa
cmpl
xor
clc
pushf
dec
sub
lods
aaa
sahf
xchg
cwtl
insb
mov
clts
mov
xor
add
sub
test
cmc
xchg
and
stos
or
jo
aam
outsb
inc
divb
cld
aam
insl
sbbl
lock
xchg
das
and
jle
jnp
repz
mov
movsl
lret
scas
inc
je
and
add
lds
daa
inc
dec
ljmp
mov
jae
out
cs
ret
jmp
mov
out
imul
xor
into
popf
fcomip
jae
dec
xchg
pop
sbbb
push
jne
mov
mov
enter
je
data16
cmp
mov
dec
lea
dec
sbb
or
arpl
jno
mov
cmp
aad
inc
add
jecxz,pn
pop
into
mov
rorl
push
ficoml
fidivrl
dec
jl
movsl
movsl
cmp
sahf
repz
add
mov
insl
repnz
mov
stc
frndint
xchg
popf
jbe
outsl
fnsave
pushf
stc
aas
leave
jo
add
dec
cld
jns
and
sti
mov
repnz
dec
gs
mov
movsl
cmpb
cld
insb
or
jge
sbbl
dec
aam
lods
nop
lock
ret
mov
push
mov
jp
cmp
imul
mov
push
out
add
cli
xor
mov
orl
ljmp
dec
cmp
lahf
cmp
out
movsb
int
add
and
sti
adc
out
negb
les
shll
xor
push
adc
movsl
inc
bswap
lret
data16
into
jg
pushf
pop
xchg
sbbl
jne
pop
imul
sbb
lcall
inc
mov
aam
cltd
jne
das
sbb
imul
or
lret
fisubs
leave
fabs
mov
xor
filds
xor
and
cs
add
cmpsb
or
inc
push
add
push
rcrb
pop
call
ficoml
call
das
cmpsb
sbb
push
addr16
lcall
pop
push
lahf
sbb
inc
cmpsb
int3
xchg
in
mov
in
aaa
aaa
daa
fisttpl
outsb
aad
jae
mov
or
and
mov
fdivrl
add
dec
stos
push
out
mov
push
aas
int
rcl
inc
cmp
cs
test
xchg
and
and
xchg
stos
xor
mov
dec
int
inc
push
sub
std
icebp
push
ljmp
jne
ja
mov
adc
inc
pop
mov
ja
cmp
inc
sahf
pop
push
dec
push
push
sub
sbb
cltd
dec
push
in
out
aas
cmpsb
ret
shlb
adc
rorb
dec
xlat
push
lea
int
pop
adc
xchg
imul
adc
leave
sub
mov
mov
inc
pusha
mov
pop
inc
or
mov
lret
mov
fisubrl
mov
jnp
divb
rolb
inc
arpl
mov
mov
jmp
or
rclb
frstor
mov
fists
mov
inc
cltd
pop
adc
inc
mov
das
outsb
mov
ja
sbb
sub
ret
stos
pop
lea
outsl
xchg
cmpsb
test
nop
push
repz
adc
mov
dec
add
sub
jecxz
add
fnstenv
jmp
add
cmp
lods
and
rorb
mov
sti
mov
mov
loope
scas
cmp
or
dec
xchg
in
lcall
seta
not
jg
clc
add
add
fwait
push
pushf
jle
out
aam
push
fwait
adc
mov
negb
push
test
cltd
mov
and
mov
sbb
adc
in
pop
mov
jnp
pop
xor
mov
lea
in
xchg
jnp
imul
mov
addr16
repz
adc
and
cmp
addr16
jno,pn
or
pop
scas
xchg
ds
xchg
jb
clc
mov
ss
inc
jb
lahf
xlat
dec
jno
test
jns
dec
jae
mov
dec
or
jle
gs
aad
xchg
sub
pusha
and
jmp
jle
lea
imul
stc
dec
adc
std
mov
and
cmp
xchg
dec
ret
daa
jo
mov
dec
cmp
cmp
aad
add
repnz
mov
js
cmp
fdivl
ss
jo
call
dec
sub
incb
add
shll
mov
mov
rorb
mov
adc
pop
rcl
stos
jg
push
mov
xchg
mov
cmp
and
popf
cmp
das
or
mov
and
sub
xor
adc
jmp
mov
add
inc
xchg
imul
idivb
fmull
xor
les
arpl
cltd
ret
fdivrl
cmp
dec
push
pop
pop
hlt
stos
in
cmpsb
out
adc
mov
lock
xchg
js
clc
and
jb
inc
sti
sub
fs
out
sbb
cmc
out
fidivl
fsubrs
ror
lods
xor
cmp
dec
add
xor
push
adc
push
cmp
cmp
jle
inc
dec
xchg
jmp
mov
aad
xlat
fstps
iret
call
ds
sub
lock
sbb
lret
leave
ss
add
lcall
mov
rorb
out
pop
into
clc
xchg
jmp
in
lahf
nop
inc
mov
push
cmp
pop
out
and
lock
loopne
add
testb
sahf
or
lods
push
nop
cld
cli
dec
push
xchg
stos
mov
push
inc
clc
or
sar
test
adc
lods
ja
or
mov
adc
mov
adc
jmp
or
imul
jne
testb
sub
pop
add
rcrb
add
js
div
mov
pop
es
jp
out
clc
xor
jl
push
out
sbb
fists
mull
inc
repnz
mov
inc
xor
pop
push
shl
xchg
xor
sub
enter
dec
outsl
les
cmpsb
dec
mov
lea
arpl
pop
dec
out
arpl
es
insb
jmp
mov
js
xchg
sbb
sub
add
pop
rcll
xchg
sub
outsb
lock
cli
lea
out
dec
sub
out
xor
xlat
scas
xchg
imul
inc
je
in
loopne
mull
sub
mov
aad
or
sbb
sti
sbb
cmp
sub
pop
imul
je
popa
dec
cmp
mov
dec
sbb
add
call
or
xor
xorl
jae
jl
mov
scas
lret
pop
jnp
je
insb
test
lahf
and
push
cmp
mov
xacquire
addr16
add
inc
jecxz
mov
aad
xor
jl
std
insb
push
je
push
or
cmpsl
xchg
and
lret
mov
call
jnp
push
in
mov
and
fsubrs
daa
sub
jns
mov
aas
jo
xlat
dec
xor
sbb
cmp
xchg
xchg
jg
dec
mov
push
inc
push
out
popl
adc
push
and
xchg
dec
lods
lock
jbe
jecxz
sbb
mov
or
cmp
idivl
dec
and
mov
adc
xorb
pop
push
pushf
inc
and
rcrl
mov
in
pop
cmp
mov
aaa
inc
sar
fldcw
icebp
into
out
dec
mov
adcb
rcrb
lahf
ljmp
scas
sub
dec
add
jl
push
cmp
mov
sahf
mov
pop
mov
ljmp
test
jo
pop
pop
fwait
addr16
xchg
movsl
and
repnz
lock
pushf
inc
push
imul
inc
adc
shl
mov
xor
daa
and
mov
adc
mov
push
ffree
push
and
mov
push
mov
ror
inc
out
xchg
std
jecxz
dec
ja
inc
inc
addr16
cli
mov
loopne
inc
or
mov
mov
inc
inc
test
repnz
adc
ss
jno
addr16
jae
sub
movsl
sub
lock
xchg
outsb
dec
jmp
ja
push
out
mov
xchg
mov
inc
enter
out
xor
jl
call
loopne
sbb
add
add
pusha
addr16
out
subb
lcall
daa
sub
mov
scas
mov
hlt
addl
fldl
pop
xchg
push
xchg
xchg
cmp
fildll
int3
ret
xor
fidivs
ds
pop
mov
sbb
and
jecxz
repz
mov
loopne
mov
leave
sbb
fdivs
mov
shll
mov
adc
cmp
lea
out
xlat
bound
push
dec
jle
int
dec
clc
lods
adc
mov
xchg
inc
inc
insl
xchg
repnz
and
push
and
repz
test
out
out
fcmovnu
or
out
xor
push
xchg
imul
pop
lea
pop
mov
dec
xor
shll
int3
aam
leave
jp
lret
ds
mov
sub
mov
dec
sarb
mov
subb
jb
repz
arpl
and
aas
aas
add
fucomp
fwait
mov
mov
push
dec
lods
int3
push
lods
pop
mov
inc
mov
sbb
jmp
xchg
inc
and
ss
xchg
sbb
mov
pop
pop
iret
cmp
xchg
push
fistps
scas
insl
mov
lret
adc
jno
pop
cmp
sbb
pop
pop
stos
clc
call
gs
dec
and
daa
out
dec
mov
inc
cmpsb
sub
jbe
push
xchg
into
or
jo
out
add
cmp
fcomps
loopne
pop
fcompl
sbb
inc
outsl
fwait
pop
and
dec
pop
fs
mov
xor
dec
sub
add
into
iret
cli
sub
les
and
or
push
add
mov
fcoms
and
add
jl
mov
inc
mov
in
pop
je
test
jecxz
lcall
mov
repz
xor
cmp
gs
jmp
jp
mov
andb
stos
inc
dec
enter
ret
xchg
add
lock
fisttpll
pop
inc
adc
setp
push
mov
sub
outsb
daa
dec
arpl
lock
mov
push
cmp
xchg
xchg
sub
push
mov
aaa
test
leave
fwait
mov
sti
stos
fs
pop
cmp
popf
lahf
xchg
jbe
mov
dec
jae
in
sub
enter
ljmp
or
xchg
arpl
ss
adc
jmp
cwtl
fnstenv
dec
jo
js
jecxz
movsl
jns
lods
dec
mulb
add
mov
sub
or
repz
ds
push
mov
push
mov
lret
jbe
hlt
into
dec
rol
inc
je
xchg
mov
stos
pop
and
xlat
and
hlt
out
push
insl
shlb
mov
cmp
xor
fnstsw
arpl
call
xlat
pop
pop
mov
or
add
and
sub
lea
stos
sahf
in
jecxz
adc
call
add
mov
push
xor
rcrb
insl
popl
notrack
out
pushf
pop
jg
ret
call
in
cmc
out
xlat
xor
nop
lods
aad
mov
push
hlt
int3
lret
mov
call
xchg
inc
sub
dec
jg
rorb
jne
outsb
push
push
les
dec
pop
sub
sbb
push
adc
mov
cmpsl
dec
and
cmp
mov
xchg
aas
xchg
jnp
gs
or
je
repz
shll
stos
mov
add
movsl
stos
stc
mov
mov
sahf
lret
sbb
js
sbb
jns
mov
cmp
and
xchg
sub
test
xchg
jge
loope
jp
out
fisubrs
ja
icebp
sbb
lods
in
gs
inc
rorl
js,pt
xchg
rcrl
rorb
jns
jo
lret
and
pop
sub
shll
movsl
stos
xor
lret
movsb
sahf
mov
lcall
mov
or
wbinvd
outsl
cld
insl
cli
rcll
push
pop
and
das
fildl
adc
insb
dec
push
inc
dec
add
xchg
imul
add
test
imul
inc
sbb
lods
xor
xchg
jmp
jl
add
lret
and
pop
mov
xchg
les
enter
in
dec
mov
xchg
scas
push
pop
mov
bound
xchg
bound
into
in
cmp
pop
mov
push
adc
mov
xor
dec
xchg
lods
cmp
push
push
test
jo
scas
jge
push
arpl
and
std
push
lea
adc
lret
in
das
scas
cmp
aad
lret
lretw
ret
and
aam
ljmp
lods
add
loope
ss
mov
mov
mov
sbb
gs
or
sbb
pop
adc
lahf
and
aaa
fisttpll
jecxz
dec
js
add
cmp
shlb
outsl
adc
into
dec
and
xchg
cld
adc
test
pushf
pusha
pusha
popf
mov
scas
xor
test
lods
mov
repnz
rclb
psllw
movsb
out
mov
xlat
mov
js
lock
stc
push
sbb
xor
jne
nop
add
pop
jo
cltd
into
mov
dec
jno
jle
add
movsb
pop
and
shll
imulb
lds
push
scas
and
imul
sar
in
mov
cmp
mov
aaa
mov
lea
dec
adc
jge
jge
in
ljmp
test
adc
pop
push
adc
xchg
pop
jmp
nop
mov
outsl
in
add
jle
in
fwait
push
inc
aam
jle
lret
push
pop
jg
orb
sub
xor
aam
dec
loope
test
inc
jbe
add
daa
es
test
int
or
xchg
fldenv
loopne
rorb
push
enter
ret
test
scas
sub
xor
push
mov
std
punpcklbw
int3
fistl
mov
inc
xchg
pop
cmp
xlat
pop
mov
fdivrl
or
in
cmp
cmp
push
sub
lea
dec
loope
lods
daa
bound
jns
stc
insl
pop
das
hlt
mov
adc
outsl
fidivrs
in
sahf
sub
inc
xor
les
push
jl
xor
divl
aad
xor
sub
icebp
mov
inc
leave
fisubl
xor
xor
ds
lods
mov
fbstp
jl
popf
xchg
mov
mov
repnz
xchg
push
cmpsb
sbb
out
imul
or
adcb
xor
xlat
imul
cmp
add
xor
cmp
xor
mov
sub
jmp
jne
and
mov
jno
aas
xchg
bnd
mov
push
repnz
push
dec
sub
je
dec
or
cmp
lock
outsl
pop
add
or
inc
cmp
add
mov
mov
dec
cmpsl
xor
testb
mov
lahf
das
arpl
mov
push
fisubrs
sbb
xchg
imul
sti
imul
jns
fcmove
and
push
lock
dec
jns
push
clc
adc
mov
cmp
jno
jne
mov
arpl
imull
xchg
xchg
adc
add
xchg
decb
add
imul
fcmovnu
fsubl
xchg
push
dec
imul
jnp
loop
push
repnz
or
js
xchg
cmp
adc
inc
sbb
ja
sbb
xchg
shr
xchg
or
stos
fisubl
jne
sti
xchg
add
mov
aas
sbb
xor
inc
fdivr
mov
jbe
xchg
fstps
push
scas
jg
xchg
sub
jno
scas
out
sahf
jl
fwait
mov
adcb
add
fisubl
iret
dec
movsb
mov
and
subl
push
mov
cs
or
jp
call
data16
dec
mov
jno
les
call
in
push
mov
pop
lret
xchg
call
cmp
pop
inc
push
sbbl
xor
out
push
inc
jmp
and
pop
divb
inc
fcompl
sub
pop
fxch
cs
pop
int
insl
push
inc
enter
scas
dec
jno
mov
mov
or
dec
pop
in
stc
mov
xor
ret
test
ret
adc
int3
cmp
mov
lds
js
fisubrs
ds
pop
ss
sub
lock
ret
adc
ds
mov
outsl
add
push
jo
lods
cwtl
pushf
jmp
mov
sub
and
mov
push
test
lds
push
sahf
and
shlb
or
inc
mov
cmpsb
out
imul
dec
lcall
or
jae
push
scas
shl
inc
and
adc
jnp
add
adc
and
ja
ds
cmp
pop
mov
mov
in
inc
es
lods
std
int3
xlat
int3
xor
push
lods
rorl
outsb
jb
fbld
jnp
aaa
repnz
aam
mov
xchg
and
add
scas
scas
ljmp
sbb
addb
dec
jbe
jne
mov
adc
fisubrs
pop
inc
mov
fisttpll
iret
fwait
or
fnstcw
ficompl
js
xchg
xchg
insb
jl
outsl
and
jb
fimuls
jbe
cltd
mov
adc
sbb
sbb
lahf
or
sbb
pop
icebp
pop
int
dec
pop
popf
fwait
gs
iret
imul
test
shl
sub
fsubr
or
sbb
or
or
ficomps
pop
push
jp
push
mov
xchg
sub
lea
and
jns
loopne
push
mov
fcomps
outsl
jbe
xor
movsb
lret
add
inc
sbb
gs
sbb
lods
push
push
mov
imul
sbb
inc
mov
loop
mov
cwtl
leave
fmuls
sub
xchg
lds
xchg
mov
pop
mov
stos
das
push
push
pop
aam
adc
inc
imull
push
aaa
lcall
xchg
jns
leave
aad
mov
shll
lahf
inc
jmp
push
push
add
sahf
xchg
call
emms
das
pusha
jg
adc
lods
pop
xor
in
mov
loope
arpl
es
cmc
repnz
fs
xchg
jmp
subl
jb
hlt
sbb
int
add
sbb
ss
and
lea
je
mov
adc
mov
idivb
lahf
cmp
sbb
cli
repz
stos
call
mov
clc
mov
lcall
sub
fwait
aas
popf
and
idivb
ds
push
and
es
not
or
dec
dec
mov
inc
push
aam
hlt
mov
data16
adc
fstpt
adc
imul
daa
jg
aaa
xchg
sub
xor
into
jae
jg
scas
mov
jp
shll
push
pushl
stos
ret
push
jae
xchg
sub
call
jmp
inc
in
sbb
adc
pop
xchg
pop
test
jbe
xlat
cmp
jmp
dec
mov
test
inc
rorl
adc
adc
iret
mov
icebp
pop
into
inc
fimuls
pop
and
addr16
shll
and
inc
pop
xor
dec
sbb
dec
into
lods
xchg
pmaxsw
mov
pop
stos
jne
outsl
or
lea
int
enter
sbb
jmp
mov
into
or
mov
std
lods
lods
ret
js
icebp
aad
pop
dec
jb
sbb
and
mov
mov
movsb
mov
dec
nop
inc
orb
sbb
rep
iret
enter
mov
orl
sti
push
pusha
inc
pop
outsb
xchg
mov
fwait
xor
mov
divb
xchg
mov
nop
push
xchg
inc
xchg
pop
adc
neg
in
dec
popa
movsl
cmc
xor
mov
mov
cld
add
std
jmp
mov
mov
stos
test
shrl
cmp
in
cmp
sti
cmp
mov
and
sbb
or
xchg
dec
cmc
cmp
mov
loopne
call
scas
dec
pop
mov
and
imul
and
jge
sbb
adc
stos
js
or
or
in
shl
fs
pop
fdivl
xchg
xchg
inc
stos
pop
stos
jno
xlat
and
xor
fstp
inc
mov
mov
daa
xor
pusha
movb
xor
add
cmp
aad
stos
or
mov
jmp
cltd
dec
loopne
xor
movsb
jae
je
test
inc
sub
movsl
mov
stos
lret
loopne
jb
pop
sti
test
lock
call
mov
int3
loope
sti
inc
jecxz
das
das
scas
fcmovbe
bound
iret
add
addb
stc
adc
push
adc
adc
xchg
sahf
and
aaa
insl
ljmp
aam
jno
dec
push
push
inc
stos
mov
mov
dec
push
cmp
roll
lret
fidivs
cmp
lret
ja
jg
cs
mov
sub
cltd
insb
xchg
mov
mov
jg
ljmp
movsl
leave
sub
push
pushf
hlt
into
pop
pop
fimuls
jne
stos
cmpsl
xchg
or
dec
inc
cmp
scas
or
mov
icebp
fs
lock
sbb
ret
pop
popa
jne
rorl
enter
rcrl
pop
mov
into
push
test
mov
outsl
cmp
daa
or
cmpsb
jne
out
push
jmp
icebp
mov
push
pusha
add
jne
adc
mov
popa
out
loope
scas
jno
sbb
cld
loop
sbb
decl
repz
loope
out
xchg
add
add
insb
pop
dec
lcall
clc
jo
int3
lds
jmp
enter
pop
jp
stos
mov
stos
inc
add
fidivs
gs
and
fisubs
inc
fbld
shll
in
lods
push
inc
lret
fildll
mov
lret
out
pop
pop
repnz
mov
add
aas
fisubrs
sti
mov
mov
mov
mov
push
repz
sbb
pop
jl
das
cmpxchg
push
push
movsl
dec
jbe
ds
jl
xlat
imul
cmpsl
ret
mov
sub
dec
clc
imul
xor
jbe
mov
or
fidivrs
xchg
insb
stc
push
loopne
push
mov
in
cli
pop
test
pusha
loopne
dec
cmp
aam
enter
inc
stos
push
xor
nop
sbb
push
mov
gs
mov
jno
cmp
xchg
aad
push
shll
mov
ds
in
call
inc
aad
sbb
jmp
pop
dec
dec
in
dec
ficomps
out
mov
adcb
fstps
inc
dec
mov
jge
arpl
jo
sub
fidivrl
inc
cltd
gs
lret
data16
aaa
cmpsl
arpl
xchg
xor
adc
sub
sbb
adc
sbb
fdivrs
dec
pop
sbb
push
in
adc
lock
sbb
xlat
iret
mov
sub
cmp
outsb
pop
pop
mov
push
cmpb
jle
adc
ret
dec
stos
rolb
bnd
mov
sbb
rorl
xchg
js
mov
mov
mov
jnp
push
fnstsw
or
pushf
cmp
push
jl
jae
or
ficompl
pop
jl
ret
imul
rclb
subb
test
mov
outsb
pop
or
stos
inc
andl
fisttpl
stos
pop
and
in
dec
imul
lock
adc
cs
jp
in
stos
jne
sbb
mov
lret
fistps
jo
lods
add
in
shl
xor
add
imul
ret
loope
mov
pop
mov
and
scas
add
xchg
lock
scas
lret
call
push
and
rorl
out
dec
pop
mov
xlat
xchg
jne
test
jmp
and
shll
add
cmpsb
and
sub
sbb
xor
aam
lret
test
pop
jnp
sbb
xor
add
cmpsb
adc
pop
daa
out
adc
pop
lahf
and
dec
into
xor
xchg
push
jne
xchg
mov
out
add
nop
xchg
int3
movsb
push
aaa
mov
dec
orl
cld
stos
or
add
ficoml
outsl
arpl
mov
popf
xchg
aam
pop
sbb
cltd
xchg
and
mov
movsl
arpl
sub
and
lahf
jle
and
gs
mov
movsb
ror
pop
fwait
shr
adc
stos
add
add
pusha
test
iret
push
sti
dec
mov
fistpl
add
fbld
sti
lahf
out
dec
into
inc
mov
or
imul
sbb
aam
iret
xor
movsl
dec
pop
xchg
leave
in
test
into
sbb
cmp
rclb
jb
sbb
mov
jmp
in
adcb
int3
mov
imul
cmp
lcall
mov
xor
hlt
mov
outsb
pop
mov
hlt
imul
imul
roll
or
mov
nop
subb
fimull
cli
dec
jmp
adc
push
bound
repnz
outsb
les
call
ja
in
sbb
push
add
outsb
dec
mov
in
xor
xchg
cmpb
dec
cmp
xlat
adc
roll
loope
sbb
rcrb
pop
in
sub
ret
push
pop
outsl
mov
fs
iret
in
lahf
xchg
loop
test
mov
jmp
pop
leave
xchg
das
inc
xchg
out
sbb
inc
push
xchg
in
pop
mov
mov
ficoml
adc
fiaddl
push
fistpll
xchg
mov
adc
in
fwait
pusha
xor
push
jns
xchg
sub
or
cmp
cmpsl
lods
cmp
push
mov
iret
popf
iret
xchg
jnp
mov
xor
notl
in
lahf
movsb
or
and
mov
mov
mov
push
jne
sbb
and
pushf
pushf
mov
jo
into
mov
mov
sbb
loope
jno
xchg
lcall
mov
mov
mov
fistpl
repnz
jle
push
lods
or
ds
cmp
cwtl
xchg
and
stc
out
sbb
push
jmp
es
insb
jecxz
and
test
cmp
ret
adc
sbb
push
dec
aaa
cld
xchg
or
fmull
test
push
inc
push
les
push
out
push
out
loopne
nop
sti
cwtl
add
mov
ss
les
ds
jecxz
sub
fidivrs
jns
add
xchg
push
cltd
push
push
test
aas
test
adc
xor
scas
lods
pop
decl
dec
or
jg
add
bound
mov
mov
clc
mov
inc
adcl
jge
mov
sub
inc
sub
sub
xor
mov
loope
das
and
enter
push
fidivrl
jnp
mov
dec
fwait
aaa
adc
lahf
shlb
ret
sbb
sub
xor
or
sub
sub
xchg
pop
int
add
nop
pusha
add
ds
pop
vorps
ja
xchg
pop
and
or
aam
adc
cmpsl
add
pop
cmc
popa
test
js
inc
push
in
shlb
in
fisubrs
cmc
stc
or
popa
mov
xchg
mov
popa
xchg
push
aas
jmp
pusha
xchg
adc
fcmovnbe
pop
dec
xor
mov
jno
aas
sarl
or
and
sbb
out
mov
mov
pop
pop
fcomps
xchg
cmp
push
pop
dec
mov
ss
rorl
jbe
insb
jbe
imul
in
push
push
cmpsl
fcompl
outsb
mov
pop
pop
jbe
add
lcall
pop
jmp
std
and
mov
pushf
scas
sbb
fadd
aas
push
pop
sub
inc
leave
pop
sbb
cs
arpl
mov
mov
cmp
ds
xor
pop
loope
call
es
nop
fisttpll
jb
xchg
in
sbb
in
mov
rcr
inc
inc
adcb
add
clc
jp
subl
in
xchg
rorl
sub
movsl
pop
jl
imul
xor
cmp
mov
repz
push
pop
push
sbb
push
repz
sbb
push
xchg
sti
mov
mov
dec
hlt
movsl
sub
mov
adc
jle
inc
popf
std
mov
and
jne
push
mov
je
xchg
scas
cmp
and
xchg
add
dec
xor
xor
mov
enter
dec
loop
jecxz
subl
mov
mov
hlt
cmp
das
inc
mov
lea
mov
in
fistps
das
rorb
les
lret
imul
xor
movsb
or
adcl
outsb
repz
jge
data16
push
out
rcr
pop
cltd
ficoml
mov
lds
daa
sbb
stc
mov
push
in
fnstenv
arpl
jge
leave
sub
pop
out
inc
sbb
push
stc
call
push
cmpb
rcr
fcmovnu
ds
fstpl
das
std
fstp
call
aad
pop
sarl
adc
jne
cmp
mov
lahf
pop
lods
loope
mov
inc
cmpsl
mov
sbb
call
lods
xchg
mov
inc
jne
jp
jp
pushf
movsb
cmpsb
mov
aaa
lods
aaa
aaa
je
xchg
push
sub
and
mov
ljmp
fstl
dec
cltd
dec
mov
or
dec
jne
divl
daa
pop
mov
es
mov
push
jbe
adc
xchg
add
jne
inc
xchg
movsb
pop
dec
outsl
enter
mov
addr16
xchg
push
push
sti
or
mov
scas
rcrb
fwait
loope
mov
rolb
aam
mov
imul
and
or
push
leave
jmp
add
cmpsb
jb
or
gs
cmpsl
and
stc
add
xor
adc
sub
jmp
push
stc
fsts
fisubrl
lret
mov
ds
repnz
jnp
cmpsl
stos
fdivrs
xchg
loop
sarl
sbb
push
movsb
xor
mov
mov
loope
fsts
dec
insb
or
lea
pushf
dec
lahf
ds
stos
and
xlat
dec
jg
xchg
std
jne
inc
push
ret
mov
or
pop
fwait
fwait
dec
lods
dec
push
sub
pop
lss
bound
into
pop
int
push
jp
add
aas
jnp
lahf
mov
or
icebp
push
ret
loope
cs
or
push
mov
cmc
inc
imul
mov
cwtl
pop
arpl
or
dec
xor
mov
adc
mov
rcl
fldt
rorl
cmc
popf
imul
ret
jle
push
jno
fiaddl
mov
fdivrp
fcompl
xor
fwait
fwait
cwtl
push
clc
add
inc
lea
movsl
pop
push
pop
repnz
sahf
xor
loop
sub
das
jmp
lret
dec
pop
aad
aas
add
mov
cmp
imul
and
sti
mov
jnp
pop
pop
mov
or
cmpsl
xor
push
jbe
dec
jg
or
mov
fisttpl
subl
inc
sbb
movsl
sbb
jae
add
mov
pop
inc
sahf
sbb
mov
cmpsl
xor
xor
inc
aas
xchg
arpl
fidivrs
pushl
cltd
or
decl
into
jecxz
jae
insl
push
xchg
cmovl
lea
xchg
dec
push
or
aaa
rcrb
int
jb
dec
push
outsb
cmpsb
mov
mov
push
push
fidivl
push
lods
jge,pt
arpl
inc
sbb
movsl
enter
sti
mov
jle
iret
fimull
add
lret
pop
xchg
or
bound
or
add
xchg
sbb
lcall
mov
jo
cmp
test
inc
mov
mov
rorl
push
xchg
xchg
lret
cld
out
add
out
loop
aas
pop
push
or
add
fs
add
jbe
movsb
xchg
sarb
sub
lahf
stc
push
cmp
adc
adc
mov
jmp
int
cmpsb
movsb
jnp
xchg
xlat
sbb
dec
cli
sbb
xor
jmp
pop
cld
mov
data16
inc
pop
lahf
cmp
pop
cs
cmp
movsb
dec
add
mov
xchg
inc
scas
call
mov
test
cld
ret
mov
mov
out
cld
add
pop
add
push
or
loope
and
sub
daa
es
mov
add
mov
mov
clc
call
and
xchg
sub
add
scas
adc
ret
or
pop
ja
pop
mov
icebp
adc
test
les
mov
jns
mov
mov
aas
ss
xchg
dec
shll
int3
outsl
mov
iret
bound
cmpsb
sbb
xor
pop
xchg
dec
sbb
cs
mov
mov
jnp
stos
pop
inc
fwait
push
aad
clc
mov
jmp
cli
mov
xchg
pop
mov
int
mov
inc
sub
dec
mov
divb
daa
xchg
or
mov
pop
xor
orl
fists
movsb
stc
pop
or
test
ljmp
mov
enter
push
sub
repnz
adc
int
imul
add
loope
inc
xor
mov
out
adc
in
cld
sub
jl
xor
mov
in
rcrl
aas
mov
scas
jo
or
or
pop
mov
sub
pop
lock
test
xchg
push
jl
sub
dec
xchg
pop
fsts
mov
mov
movsb
clc
xor
jbe
mov
xor
and
lds
mov
sarb
xchg
push
fs
jle
out
addr16
das
mov
xchg
push
mov
scas
push
fbstp
es
aas
mov
mov
addl
push
mov
aas
mov
xchg
jno
addl
xor
xchg
imul
adc
in
push
pop
mov
sub
es
ficompl
xor
sub
dec
in
in
icebp
out
movsb
jp
inc
fisubs
inc
mov
mov
out
cmp
push
dec
enter
mov
pop
adc
jecxz
rolb
sbb
lcall
into
xchg
punpckhdq
divl
testb
xchg
mov
rolb
movl
mov
test
add
divl
sbb
mov
pop
aas
add
mov
pop
or
std
sub
dec
jns
inc
xor
aad
pop
mov
xchg
sbb
rcrl
sub
mov
inc
pop
push
xor
or
lahf
mov
xor
xchg
fdivl
mov
insl
push
xchg
mov
int
lcall
int3
fs
cmp
push
xchg
sbb
lds
cs
mov
rol
push
adc
sbb
outsb
adc
xor
xorl
cmp
or
mov
inc
adc
sub
sbb
jnp
push
xor
pop
inc
lock
test
clc
xor
push
xchg
pushf
insl
xor
cmp
jno
xor
push
adc
push
nop
push
pop
inc
jmp
in
pop
mov
and
mov
cmpl
push
add
pushf
mov
inc
rclb
mov
xchg
dec
push
mov
or
call
bound
aaa
jo
inc
inc
aad
stos
in
lret
lahf
lods
or
popf
fstp
adc
mov
repz
nop
sub
roll
jnp
jae
std
inc
test
ljmp
je
cs
lahf
inc
sbb
int
push
mov
xchg
push
add
sub
cmpb
inc
pushl
cld
out
mov
cmp
rep
and
js
insb
notb
mov
mov
mov
pop
and
scas
aam
fists
fstl
push
cmpsl
call
popf
sbb
rclb
cltd
lret
out
and
jp
sbb
adc
mov
push
clc
popa
roll
idivl
subb
jbe
or
shlb
out
test
dec
adcl
cwtl
pop
nop
cltd
pop
mov
sbb
repnz
inc
mov
push
adc
inc
sub
dec
jae
cmpsl
xchg
imul
in
and
std
push
mov
dec
xor
cwtl
in
and
push
push
mov
xor
cmp
cmp
inc
cwtl
inc
push
mov
xchg
cmpl
mov
rol
cmp
fmul
aaa
insl
loopne
ror
dec
add
mov
xor
popa
bound
test
add
imul
dec
jns
aaa
cmp
cltd
lret
cltd
push
mov
ljmp
call
mov
mov
lcall
cmp
push
data16
or
scas
arpl
or
std
mov
in
pop
inc
xor
push
and
outsl
cmp
xchg
bound
cmp
sbb
mov
scas
hlt
lret
sbb
in
push
sub
mov
sub
xchg
or
cli
jmp
or
mov
popf
xchg
lock
jae
stc
jb
or
repnz
inc
testl
add
pop
inc
mov
dec
mov
lret
pop
daa
fwait
add
sti
ja
add
or
ret
ret
dec
jno
inc
cmp
xchg
push
xchg
pop
mov
movsb
ret
fcoms
inc
cli
or
int3
mov
fdiv
push
roll
jle
mov
sbb
stc
jae
rorl
and
sbb
sub
out
or
dec
loope
mov
pop
and
enter
out
in
cmpsl
mov
mov
add
xchg
aad
and
xchg
xchg
push
sub
inc
fdivs
out
xlat
mov
sbb
int3
mov
orb
bound
nop
sbb
out
dec
cmpsl
and
or
lret
adc
mov
add
pop
xor
jns
out
arpl
clc
frstor
sbb
xor
and
jecxz
popa
insl
pushf
aam
scas
pop
dec
sub
sbb
mov
fstl
mov
and
push
mov
or
jg
pop
in
insb
js
cli
popa
cmp
shll
add
fwait
in
mov
iret
ror
xor
or
in
lds
movsb
cmp
sbb
daa
xlat
inc
cltd
aas
in
dec
sub
out
sub
pushf
dec
push
stc
cltd
dec
fisubrs
xchg
jnp
cltd
stos
fsubs
jno
add
push
mov
test
lret
mov
leave
and
das
mov
sub
int3
lods
aad
lret
sub
popa
fldcw
repz
sub
inc
daa
adc
push
adc
pop
inc
inc
dec
mov
repnz
adc
mov
nop
or
push
call
cltd
lcall
jge
xchg
test
aas
mov
push
stc
and
adc
jo
jecxz
ret
test
push
add
pop
mov
xchg
xchg
lret
imul
cld
lods
sbb
and
ss
adc
or
out
adc
inc
rorb
xchg
mov
test
push
pop
xchg
xchg
cmpsl
pop
jecxz
notl
adc
cmp
adc
push
das
lds
sbb
mov
mov
inc
xchg
daa
hlt
xchg
pop
or
pop
scas
test
je
aam
fidivrl
in
dec
lods
mov
lret
dec
stos
inc
mov
mov
sub
pushf
fwait
mov
push
call
sahf
mov
lods
push
push
in
lods
and
jle
divl
es
push
push
mov
repnz
or
adc
jge
call
outsl
stc
xchg
push
mov
sbb
dec
lds
push
mov
xor
lret
mov
and
xchg
jae
fisttps
mov
je
cmpsb
mov
and
xchg
push
xor
dec
sbb
std
out
adc
fwait
xorl
lahf
andb
flds
or
andb
orl
push
jb
sbb
movsb
or
xchg
pop
jecxz
inc
jg
fcomi
adc
test
mov
and
clts
jge
fs
push
sbb
sbb
adc
iret
stos
sbb
loopne
sbb
loop
lods
jbe
mov
ds
pop
jmp
popa
loopne
lahf
dec
hlt
mov
jbe
rorb
rclb
pop
mov
cmp
jno
adc
clc
lea
mov
pop
in
lods
xchg
adc
adc
xchg
rcr
jge
imul
lods
out
mov
lret
mov
cmpsb
fs
jae
pusha
dec
xchg
push
pop
cmp
mov
repz
jno
xor
sbbl
cs
mov
icebp
aad
imul
add
aas
and
loop
and
pop
jb
mov
call
mov
jge
es
xchg
add
hlt
ror
inc
xor
xor
mov
xchg
pushf
imul
jl
mov
add
add
dec
test
push
mov
in
lods
into
mov
mov
movsl
pushf
pusha
aad
and
mov
loopne
clc
fisubrl
cmp
sti
or
jg
and
into
aad
cmpb
mov
push
shll
push
add
xchg
shr
xchg
or
sub
jmp
push
insl
ret
add
xor
test
jp
pop
dec
adc
and
mov
fistpl
test
lods
push
or
scas
and
mov
xor
aas
fisubrs
and
es
add
dec
popa
repz
or
mov
add
stc
pop
sub
repz
dec
sarb
mov
dec
push
xchg
jbe
adc
mov
xchg
lahf
jmp
imul
sub
cmp
imul
daa
in
jns
push
es
pop
cwtl
test
test
sbb
addr16
fwait
ds
pushl
push
pop
push
addr16
sbb
push
inc
dec
mov
inc
add
xchg
test
inc
out
and
ret
push
sub
inc
inc
cs
fcmovu
adc
inc
out
mov
adc
mov
dec
and
popa
rcrb
leave
dec
xor
cmp
ds
push
scas
sahf
xchg
subb
inc
dec
push
pop
jne,pt
mov
repz
jns
and
jecxz
or
negb
stos
mov
xchg
hlt
gs
dec
pop
repz
push
lds
jns
mov
out
shll
sub
mov
mov
aam
xlat
lahf
push
push
inc
bound
test
scas
call
push
mov
adc
push
xlat
ret
clc
jns
stos
mov
inc
mov
inc
mov
aaa
daa
js
orb
or
dec
cmp
or
stos
pop
std
mov
cld
xor
push
jns
insl
lahf
pop
sahf
adc
lock
ljmp
cwtl
dec
clc
and
sub
jnp
mov
into
cmp
mov
outsl
test
arpl
adc
xorb
pop
fildl
int
stc
in
dec
pop
insl
out
pop
xorb
lcall
sbbl
aam
push
repz
mov
call
inc
sub
std
mov
xchg
sahf
push
push
dec
mov
xor
jns
sar
xchg
fnstsw
fidivl
ljmp
mov
loopne
pop
push
pop
out
into
test
jne
or
sbb
cltd
inc
pop
sub
dec
leave
mov
cli
repnz
movsl
xchg
xchg
and
flds
jne
or
adc
fimuls
scas
or
inc
stc
jne
sti
xor
negl
dec
jne
aaa
inc
sarb
push
sub
cwtl
lea
leave
sahf
push
jno
xor
aaa
dec
sub
arpl
lds
int3
loop
jmp
xchg
out
ret
imull
mov
out
jno
mov
cltd
cwtl
clc
test
leave
xchg
frstor
into
dec
fisubl
inc
loop
daa
sub
adc
loope
pop
push
jne
and
mov
nop
and
mov
lods
inc
loop
mov
and
data16
xchg
mov
mov
das
jge
pop
loopne
sub
sbb
repz
push
and
sbb
les
lret
xchg
add
fidivrs
fiaddl
loopne
mov
fildl
mov
pop
je
adc
pop
pop
mov
mov
icebp
mov
fstps
add
popa
lock
ret
mov
jne
icebp
repz
push
mov
and
inc
dec
pop
repnz
jns
popf
dec
adc
or
je
rcrl
mov
test
jp
push
jbe
popa
sbb
fwait
xchg
mov
sbb
insl
xchg
pop
cs
sub
insb
push
pop
mul
lock
cmp
gs
push
stos
int
mov
mov
sbb
in
mov
lcall
lret
inc
adc
ja
lds
sti
cmp
dec
movsb
outsl
je
or
icebp
mov
mov
cmc
jmp
sbb
cltd
pop
nop
popa
pusha
test
mov
ja
shrl
xchg
push
inc
mov
and
movsb
data16
or
sub
cmpsb
mov
cwtl
and
xchg
fiaddl
cwtl
pop
mov
push
outsb
and
test
sub
xlat
mov
test
dec
loop
loop
addl
insb
inc
cmp
into
mov
data16
mov
mov
rcrl
jmp
mov
inc
rorb
cs
push
xor
jg
pop
mov
adc
fstpl
jns
icebp
inc
mov
sub
dec
std
int
inc
jns
and
fnstcw
xchg
inc
cwtl
pop
inc
fisubl
inc
inc
imulb
ffree
mov
inc
imul
cmp
jp
mov
jb
xlat
dec
stc
insb
ds
lds
mov
pop
std
cmc
mov
scas
cmpsb
adc
fwait
clc
test
sub
add
cmp
dec
lods
jne
insl
notl
cli
pop
cmc
stc
mov
aad
das
lds
adc
insl
mov
fcoms
inc
repnz
or
xor
popf
arpl
and
mov
cmp
push
mov
and
aam
insl
mov
fdiv
pop
enter
mov
ds
inc
mov
repnz
xchg
pop
nop
aam
bnd
xchg
in
popa
cmpb
je
xchg
xor
pop
mov
test
das
inc
jl
cs
mov
out
fld
aad
fsubr
sbb
jae
ljmp
xor
jbe
and
inc
mov
xor
out
mov
movsl
and
imul
jns
icebp
and
pop
jne
inc
or
jp
mov
lret
xchg
idiv
aad
lret
jmp
call
int3
dec
mov
push
sbb
or
jbe
ds
xor
cld
je
push
ja
out
cmp
cmc
or
aam
enter
cmp
pop
dec
sub
lods
jnp
cmp
sbb
bound
push
cmpsb
jo
and
fwait
mov
add
mov
push
push
or
das
into
divl
mov
movsl
notb
mov
test
mov
dec
fcoml
into
mov
xchg
orb
repz
jo
adc
mulb
ret
pushl
add
mov
sbb
lds
into
hlt
lods
fwait
xchg
cmp
pop
push
cmc
scas
sub
ret
adc
mov
sbb
outsb
dec
sub
inc
inc
mov
xchg
in
rorb
cli
xchg
es
inc
jmp
arpl
subl
nop
scas
popa
nop
out
and
je
std
inc
sbb
pop
jle
xor
aad
pushf
mulb
loopne
pop
push
mov
fmulp
jno
lret
subb
cmp
pop
shrb
inc
pop
orl
cs
push
push
or
jge
jne
pusha
sub
mov
mov
mov
das
xchg
mov
rolb
icebp
jg
movsb
iret
and
xchg
in
mov
scas
sti
fiadds
mov
daa
fidivrs
fnsave
adc
jns
movsb
scas
les
ret
push
mul
and
in
mov
scas
dec
imul
test
sarl
mov
adc
dec
loope
jno
aam
jl
js
or
sbb
and
xor
xor
pop
xchg
or
cmpsb
frstor
aas
cld
ret
lret
movsb
mov
mov
xchg
movsb
mov
icebp
cs
cmp
fstpt
mov
popf
idivb
loopne
adc
arpl
jmp
dec
adc
jb
das
js
in
sbb
inc
push
repz
ficoms
mov
cmp
xor
out
dec
fimuls
ret
stos
push
adc
sub
mov
mov
pushf
fs
pop
jmp
mov
mov
inc
outsl
dec
mov
outsb
dec
roll
xchg
inc
mov
cli
and
sbb
lahf
js
stc
mov
lret
stos
pusha
mov
sbb
or
push
adc
into
mov
mov
xor
cmp
in
lcall
pop
push
ljmp
movsb
xor
in
insl
roll
mov
pop
xchg
push
movsl
clc
push
data16
loop
lcall
or
scas
fldt
mov
mov
imul
dec
xchg
mov
mov
sbb
cmova
arpl
or
std
cmp
mov
adc
aas
fidivrs
push
sahf
pop
xchg
out
enter
cmp
fwait
aad
mov
jo
push
sbb
out
rcr
add
and
mov
dec
sbb
fwait
adc
jp
jmp
in
imul
add
xor
jns
cwtl
or
mov
xchg
inc
and
fisubrs
jne
cld
loop
je
insb
scas
mov
outsl
es
fldenv
push
inc
js
pop
je
adc
insl
nop
and
lea
into
add
and
push
ret
dec
jmp
jne
out
fstpl
aas
lds
enter
movsl
adc
repz
stos
stos
dec
es
jo
add
rolb
xor
clc
mov
push
push
adc
fiadds
fucom
sub
pop
jne
push
ret
popl
cwtl
adc
and
test
fs
jmp
cmp
data16
xor
pop
push
push
push
jmp
rclb
lret
xchg
xor
push
adc
xchg
jl
adc
jl
adc
inc
push
movsl
ret
out
inc
xor
lds
inc
or
adc
or
mov
jecxz
push
cmp
addr16
orps
pop
push
push
outsb
cmp
es
in
sahf
sahf
cmp
add
aaa
mov
or
add
push
lds
adc
inc
popa
xor
sti
cwtl
loope
fstps
mov
bnd
sarb
call
fcomip
test
xor
test
rolb
clc
stc
xchg
cmpb
jns
adc
mov
add
cli
inc
mov
dec
push
inc
fs
popf
sbb
and
stos
mov
mov
push
cmp
cmp
xor
sbbb
push
sti
mov
ret
mov
ds
lret
or
mov
or
shlb
mulb
mov
lods
sub
add
loope
jbe
pusha
out
fcoms
shlb
fnstsw
imul
dec
dec
inc
bound
iret
cmp
outsb
jecxz
testb
movb
aas
int
mov
push
mov
jno
pop
push
jns
dec
jg
ljmp
in
leave
dec
pop
xchg
into
icebp
push
out
dec
xor
inc
mov
fdivs
mov
dec
sub
idiv
das
cwtl
ret
sbb
pop
push
add
inc
inc
movb
add
dec
shrl
nop
ds
scas
cmp
adc
gs
xchg
push
pusha
mov
jmp
loopne
inc
std
imul
rcrl
mov
dec
testl
xor
fwait
pop
push
cmp
int3
or
xor
out
pop
jo
dec
outsb
cmp
mov
or
sub
ss
cmpsb
inc
inc
data16
or
subb
pop
jbe
ds
fidivl
data16
push
movl
add
lods
mov
mov
push
sub
cwtl
sbb
xor
out
addr16
jp
int
and
pop
mov
xchg
sti
mov
aad
repnz
adc
out
mov
int3
pusha
lock
xchg
cmp
test
popf
aaa
sub
stc
bound
aaa
inc
jne
fwait
mov
test
push
add
pop
mov
push
pop
xchg
call
mov
arpl
xchg
cmp
addr16
fadd
mov
mov
aad
xchg
notb
sbb
in
mov
inc
rcrl
inc
mov
dec
inc
pop
arpl
imul
lock
test
inc
mov
add
mov
push
enter
sbb
or
jno
cli
movsl
jp
std
cltd
jne
jl
add
fmuls
sbb
mov
cmp
xor
push
mov
ds
sarb
xchg
repnz
imul
push
push
cltd
pop
xor
cs
push
lds
aad
adc
mov
sbb
movsl
mov
xchg
cs
and
cmp
push
xlat
nop
lds
or
imul
pop
mov
xlat
in
xchg
rcrl
mov
jbe
or
adc
push
xchg
nop
add
jmp
rcrl
and
dec
jg
icebp
xchg
cmpsb
inc
lods
jno
dec
cmp
lods
dec
fiaddl
addr16
out
adc
mov
lods
add
inc
push
in
sarl
inc
adc
dec
pusha
pop
out
adc
cld
mov
dec
push
fidivs
pop
jp
cld
jp
cltd
push
mov
dec
cmp
add
fcoml
nop
sbb
inc
dec
jb
or
test
mov
xchg
mov
ds
negl
add
inc
or
cmp
jp
mov
lcall
jne
and
adc
fsubrs
pop
imul
add
mov
ljmp
push
mov
and
shlb
or
fisubs
mov
dec
pop
arpl
xchg
mov
orb
xchg
push
xchg
xor
inc
ds
movsb
test
rorl
cmpl
or
test
arpl
in
inc
insb
movsb
sbb
inc
pop
jae
jno
inc
insb
ljmp
clc
adc
sub
push
or
mov
cwtl
repnz
mov
scas
cmp
mov
enter
fwait
cmp
enter
or
cli
push
cld
dec
out
fiaddl
jp
cli
test
push
dec
clc
and
div
sahf
and
stc
leave
daa
xor
lds
loop
mov
or
dec
sti
inc
gs
iret
shll
jmp
inc
decb
clc
ljmp
pop
shlb
lds
repnz
xor
sti
sub
push
popa
xorl
jmp
push
popa
pop
lret
adc
pop
orb
scas
push
and
loop
pushf
sub
add
mov
sahf
or
pop
cmp
adc
and
stos
inc
inc
xchg
mov
push
roll
mov
sbb
cmp
rol
mov
ljmp
mov
mov
cmp
jnp
cwtl
mov
dec
mov
push
push
je
decl
pop
ja
mov
mov
adcb
mov
test
cs
mov
mov
movsl
aam
cmp
frstor
sbb
cli
or
or
test
sub
add
imul
cmp
sti
dec
add
test
sub
adc
dec
or
ret
rclb
ret
push
jge
and
arpl
in
xor
lds
adc
mov
kmovb
and
sub
imul
xor
and
dec
insb
loopne
and
jmp
mov
jge
pop
and
inc
into
pop
or
mov
pop
inc
dec
fcoml
aas
lea
loopne
jb
dec
sbb
cmp
orl
mov
stc
mov
push
cld
andl
pop
add
and
jge
loopne
outsl
and
or
out
nop
popf
das
fsubs
push
pop
mov
lret
daa
jmp
xor
orb
rorb
mov
dec
dec
mov
pmulhuw
loop
jge
pop
xchg
loop
mov
iret
and
xor
pop
pop
and
xchg
xor
xchg
fistps
int3
out
stos
xchg
ljmp
andl
push
cmp
nop
inc
cltd
add
sbb
sub
cmpsl
repnz
mov
adc
mov
mov
push
mov
mov
mov
dec
mov
adc
xchg
data16
dec
dec
das
add
pop
xchg
mov
fidivl
inc
scas
dec
adc
adc
lret
or
pop
dec
std
mov
push
popa
std
jp
cmp
mov
cmpsb
jmp
stc
and
out
insb
sbb
loop
enter
and
cmpsl
adc
loope
scas
int3
jo
pushf
stc
js
lret
push
lcall
mov
cltd
add
xor
divl
sub
testl
lods
pop
xchg
sub
jecxz
int3
or
adc
jecxz
cs
sbb
mov
mov
adc
les
mov
fidivrl
or
jl
inc
orb
cs
lret
repnz
lret
pop
jnp
into
bound
xchg
imul
dec
pop
sbb
lods
adc
scas
push
add
jmp
sbb
jp
cmp
inc
pusha
movsl
lods
aaa
dec
imul
aad
in
jmp
test
fdiv
lahf
jns
or
out
hlt
pop
pop
push
sbb
jecxz
cmp
jnp
lods
push
mov
mov
mov
jae,pn
mulb
dec
lods
lds
rcll
mov
pushf
nop
lods
pusha
pushf
add
inc
shl
loope
add
mov
mov
sti
iret
mov
ss
leave
into
sti
cmp
leave
xor
cs
jge
push
and
pushf
rclb
sub
xchg
or
ds
ffreep
sbb
jae
imul
fcompl
mov
and
aas
icebp
pusha
xor
ss
push
roll
lds
ss
inc
or
pop
inc
jle
or
pop
or
in
cmpsl
les
adc
fsub
add
out
popf
inc
bound
in
adc
mov
adc
mov
ss
mov
repnz
je
mov
mov
fbld
lock
lahf
das
in
mov
and
int
inc
inc
push
xchg
or
adc
les
out
popa
faddl
lods
xchg
scas
cmp
out
sbb
cld
cmpb
jno
and
test
add
in
insb
add
inc
jl,pn
jge
aam
mov
add
xor
lcall
ficoml
push
das
xor
xchg
pop
mov
jle
or
rclb
xlat
jno
lods
mov
setns
xchg
or
mov
sub
cwtl
and
ret
andl
outsb
lret
iret
shlb
cmpsl
pop
sub
mov
or
in
movsb
leave
add
inc
repnz
popf
jecxz
out
or
repnz
mov
xchg
pop
je
fisttpl
stc
call
sbb
icebp
jecxz
dec
popf
or
test
mov
inc
mov
jb
lahf
dec
sbb
ss
lods
add
clc
xor
and
cmp
nop
pop
in
and
sti
add
jecxz
daa
jae
dec
ljmp
pop
popf
adc
lock
mov
lock
ffree
push
js
mov
ret
cmp
inc
popf
shr
loop
sar
jns
mov
mov
dec
movsb
rcrb
loop
push
pop
repz
rorl
cmpsb
pop
inc
js
and
loop
cmc
loopne
in
fmuls
xchg
cmpsb
and
or
sub
inc
test
cli
in
dec
or
sbb
pop
pop
xchg
fstpt
mov
addr16
out
inc
mov
pop
xor
jp
sbb
mov
popl
push
ficoms
and
sbb
mov
mov
fs
jmp
cld
data16
mov
mov
pop
mov
stc
or
mov
jmp
pop
add
inc
pop
push
outsl
sub
bound
popf
call
mov
fwait
das
jp
mov
adc
enter
add
cltd
leave
das
jno
stc
gs
test
jno
popa
xor
cmc
pop
pop
sbb
mov
xchg
dec
xlat
and
ljmp
sbb
xor
stos
push
mov
pop
rcll
sbb
xlat
push
sbb
sbb
rol
push
xchg
dec
mov
cmpsb
cli
sarl
sti
pop
sbb
out
add
add
push
cltd
insb
std
add
xchg
mov
inc
in
es
xchg
mov
sbb
cmp
add
dec
les
sbbb
cmp
std
lds
adc
shll
xor
cmp
stos
and
fbld
or
out
adc
daa
lods
test
sub
sahf
arpl
scas
cmp
popa
xor
idiv
xchg
xchg
push
xor
mov
jns
and
rclb
xor
adc
sub
stc
sub
push
inc
dec
push
xor
dec
mov
mov
pop
imul
xchg
push
fldl
ja
jp
fistl
jmp
mov
pop
push
insb
xchg
insb
and
fsubrl
es
pop
sub
jmp
pop
mov
inc
idivb
orl
cmp
arpl
pop
fwait
xchg
orb
mov
dec
subb
cmp
jmp
sub
mov
add
pop
and
jecxz
cmp
mov
mov
xor
and
jb
or
dec
dec
data16
or
xchg
pop
adc
or
push
outsl
loopne
mov
fldz
scas
push
adc
nop
xchg
dec
pop
mov
sbb
add
jbe
xor
push
inc
test
adc
icebp
jge
pop
loope
sub
push
aad
inc
in
sub
sub
fcoms
or
and
je
push
pop
popf
outsl
xor
mov
push
push
outsl
pop
in
xchg
aam
mov
les
cmpsb
aad
sub
mov
push
outsl
out
aas
add
lds
dec
cltd
cmc
cmp
add
cmp
jns
lcall
sbb
inc
inc
aad
and
mov
sub
loop
jg
pop
ljmp
pop
inc
xchg
sub
into
mov
test
and
out
push
sti
imulb
shll
loop
sub
sahf
cld
mov
jge
aam
xor
cmc
lret
dec
cmp
mov
or
push
push
inc
mov
add
shlb
in
shr
mov
pop
pop
cmp
jecxz
lock
inc
aam
push
loope
xchg
out
out
jae
and
mov
inc
int
jl
mov
fs
push
imul
xchg
mov
pop
xor
lock
leave
xchg
jecxz
mov
rcl
loop
and
cmp
dec
push
xchg
push
mov
mov
cmpsl
in
popf
xchg
je
mov
stos
stos
lock
rcrl
in
outsl
fiadds
mov
test
sub
sub
or
andb
xchg
jae
pop
dec
int3
dec
movsl
or
sar
cs
sahf
test
aas
loope
pop
shll
fs
pusha
or
dec
and
inc
adc
outsb
jbe
sub
xor
or
push
jae
sbb
pop
fs
cmpsb
jge
pop
lock
adc
pop
and
divb
xchg
lock
adcl
dec
push
mov
test
sarl
xchg
mov
sarb
and
dec
filds
sub
sbb
fdivr
push
xchg
mov
pushl
outsb
stc
arpl
enter
cmpsl
cltd
sub
into
jl
cmp
xor
pop
jge
inc
push
pop
lahf
fimuls
sbb
loop
fwait
sub
loope
rcr
mov
scas
or
stos
dec
testl
ja
and
inc
lcall
adc
inc
fwait
gs
xchg
pop
pushf
jo
stos
shll
or
pop
hlt
cmp
jno
iret
mov
inc
js
arpl
fidivrl
fildl
mov
or
icebp
jg
outsb
addl
mov
sahf
mov
ficomps
outsb
xchg
mov
fsubr
loop
xchg
pop
and
pushf
outsb
mov
push
insl
psubw
mov
out
sbb
mov
sub
pop
lock
mov
mov
mov
push
loope
pop
mov
or
mov
mov
inc
icebp
xor
pop
es
mov
stos
push
loop
inc
sub
sarl
jg
dec
dec
xchg
stos
mov
inc
outsl
ss
dec
pop
mov
mov
int
mov
cmp
mov
cmp
sbb
aaa
dec
or
push
cld
xor
popf
or
aad
in
add
insl
adc
movsb
cmp
mov
inc
cmovle
call
cmpsb
stos
add
mov
add
ret
push
scas
lea
stc
faddl
add
mov
add
jl
lock
stos
pushf
mov
xlat
stos
push
mov
mov
loopne
adc
rcr
mov
mov
mov
mov
sub
popf
scas
pop
push
push
push
repz
stos
cwtl
fwait
pop
stos
bnd
call
pushl
sahf
std
inc
mov
mov
add
pop
push
sub
pop
xor
insb
test
fisttps
js
push
dec
loope
call
sbb
lds
mov
xor
rol
mov
jbe
push
das
pop
ret
jb
shll
sub
or
and
fisubrl
sbb
outsl
jg
clc
rcll
imul
and
xorl
loope
xlat
cli
jne
sub
roll
test
bound
mov
lods
fdivl
bnd
mov
inc
push
dec
or
imul
push
sub
cmp
ljmp
jmp
pop
sbb
cmpsl
jecxz
and
and
scas
subb
lahf
push
xor
push
loope
add
xchg
inc
cmp
adc
ja
shr
leave
inc
popa
inc
sbb
fwait
insb
sub
and
dec
mov
mov
mov
jecxz
jp
push
xorl
shll
in
ret
gs
out
mov
cmp
bound
inc
ret
out
movsb
test
push
xorl
loopne
dec
fisubrl
je
js
js
jmp
outsb
dec
xchg
xchg
hlt
sbbl
pop
mov
sti
inc
inc
lock
testb
flds
or
leave
icebp
pop
cmp
lret
xchg
testb
dec
orl
int3
add
cmova
cmp
adc
mov
dec
dec
mov
xor
cmp
jmp
loope
cmc
jmp
mov
ds
aaa
push
mov
cmc
out
jns
ss
icebp
xchg
sbb
xchg
or
pop
dec
mov
rorl
sbb
mov
loop
lcall
insl
mov
aam
clc
push
stc
mov
popf
mov
pop
call
adc
and
sub
mov
pop
xor
pop
sti
cli
pop
dec
out
in
pop
xchg
clc
jp
adc
adc
jbe
scas
loopne
int
pop
push
imul
jmp
xor
cmp
addl
stos
jl
lods
and
aad
jmp
mov
fbld
clc
xlat
sti
jecxz
sub
outsl
pop
rcr
dec
mov
int3
push
sub
xchg
mov
icebp
push
push
movsb
adc
jae
push
js
mov
dec
jnp
int
or
cmc
mov
addr16
int
ror
mov
outsb
out
scas
arpl
mov
into
or
fwait
mov
sub
mov
jle
and
loopne
mov
xor
imul
dec
xchg
lret
adc
addl
xchg
ja
inc
in
pop
testl
pop
loope
inc
scas
cmpsb
loop
pop
lods
mov
jmp
in
pop
cmc
pop
xlat
pop
clc
mov
nop
push
testl
mov
cmp
xor
movsl
inc
inc
out
or
leave
sbb
aas
cs
lcall
hlt
jecxz
sub
mov
sub
xchg
adc
mov
xor
cmpsb
sahf
pushf
and
out
ret
scas
lret
clc
imulb
mov
inc
xorb
adc
fistpll
xor
adc
cwtl
adc
movsb
aad
mull
adc
push
push
lea
out
inc
lds
jmp
dec
mov
addr16
adc
sarl
lea
idiv
dec
and
cmp
or
pop
loopne
mov
stos
and
into
lahf
mov
fdiv
repz
cld
jp
push
leave
mov
mov
pop
add
cmpsb
ret
enter
jg
ds
cmp
mov
pop
pop
pushf
ret
insb
int3
xchg
push
push
imul
rorb
jno
fistpl
adc
xor
add
add
rclb
cmp
stos
add
in
bound
xchg
fildl
pop
stos
mov
hlt
inc
jge
ret
aad
inc
lret
dec
sahf
xchg
stos
jae
adc
mov
jae
or
int
scas
std
in
or
mov
aad
enter
add
xchg
or
shl
adc
dec
dec
dec
sbb
push
sti
mov
insl
insb
mov
mov
sahf
mov
inc
cmpsl
inc
xlat
sarl
mov
add
adc
call
add
int3
push
jnp
imul
cwtl
mov
cmc
sub
jg
out
fstpt
imul
popf
sbb
or
in
iret
jne
pop
mov
jne
popf
out
ret
dec
pop
sub
jl
popf
loope
and
inc
mov
add
jbe
xor
insb
mov
mov
repnz
stc
lods
outsb
rcll
add
test
adc
pop
push
sub
divl
fs
cmp
pop
lret
add
xchg
into
jp
arpl
mov
mov
xchg
je
mov
sub
pop
jno
mov
xchg
iret
xchg
sub
fimull
cmp
test
pop
int3
inc
pop
sbb
lods
loopne
outsl
pop
test
int
divb
daa
xchg
mov
cli
jecxz
jecxz
out
imul
cmp
pushf
cmp
fstpl
jb
mov
cmp
cmp
movsl
call
cmp
push
xor
sub
jb
jb
int3
imul
test
mov
cmp
add
hlt
dec
inc
out
out
aam
pop
xchg
push
xchg
mov
movsl
mov
adc
adc
and
or
enter
test
idivb
fisubrs
outsl
ja
or
inc
jno
mov
inc
push
pop
and
jmp
hlt
xchg
mov
jns
int3
pop
and
mov
loopne
sbb
int3
stos
es
or
pop
pop
in
in
insb
jecxz
sbb
or
fs
test
push
xor
fisubl
jle
addr16
jbe
jge
sub
test
inc
nop
dec
sbb
scas
mov
in
ljmp
lret
aas
addr16
mov
cltd
add
mov
jmp
insl
push
xor
mov
lahf
fisttps
or
scas
aas
push
mov
push
push
mov
adc
insl
lock
mov
push
jae
aas
out
dec
xor
test
push
cmp
add
jne
cld
ljmp
push
pusha
shlb
xor
cltd
add
es
adc
sahf
sbb
repz
lea
mov
inc
xor
sbb
add
into
mov
ss
inc
jae
dec
cmpsl
repz
popf
push
add
movsb
imul
test
shlb
dec
fiadds
jmp
outsl
repz
repz
aam
rol
cs
repz
nop
pop
fiadds
push
or
jae
mov
cmp
sahf
pop
xor
push
sbb
test
ret
and
sbb
icebp
jbe
ret
adc
cmpsl
mov
xor
cmp
sub
scas
mov
cmpsb
push
mov
push
daa
lret
dec
xor
dec
dec
push
or
gs
sbb
aam
notb
and
cltd
xchg
or
repnz
inc
mov
cli
mov
sti
in
fstpt
out
mov
inc
pop
or
nop
mov
and
icebp
test
repnz
loope
arpl
movsb
jl
mov
add
push
sub
sarl
inc
xor
pushf
clc
stc
jmp
mov
mov
inc
dec
mov
out
in
mov
mov
adc
test
out
cmp
and
testl
aas
mov
mov
xchg
fldcw
adc
jnp
shll
sbb
mov
lock
gs
fstps
clc
movl
arpl
and
ficompl
cltd
outsl
cmc
and
jo
cmp
out
adc
mov
cld
or
push
outsl
pop
push
push
test
inc
jbe
subl
xchg
jns
push
xor
mov
add
xorl
pop
les
sub
and
rorb
fcompl
ret
or
jbe
cmp
sub
sbb
je
roll
xchg
dec
xor
cli
les
adc
mov
loope
pusha
jb
jbe
test
iret
rol
int
and
lock
fadd
add
stos
add
in
stc
sbb
ucomiss
adc
cld
fisttps
es
aas
aaa
pop
cmp
andb
popf
es
sbb
fdivrp
imull
jmp
in
inc
or
daa
jle
insl
adc
jns
imul
push
or
clc
xchg
test
sbb
push
mov
insb
test
pusha
xor
nop
ret
insb
and
xlat
in
cltd
xchg
jle
addb
loope
or
inc
lea
add
inc
inc
sub
insb
xchg
insl
ljmp
mov
mov
imul
popa
addr16
xor
ljmp
add
jne
or
add
jmp
mov
pop
mov
push
leave
jmp
scas
into
adc
xchg
sbb
sbb
in
push
push
push
stos
pusha
mov
mov
or
js
pop
add
bound
bound
adc
movsl
in
mov
fisttpl
xchg
adc
in
pop
mov
out
xlat
pop
ficompl
push
scas
pushf
fucom
imul
fdivrl
push
gs
mov
adcl
jnp
loopne
xor
adc
rclb
sbb
mov
lcall
jnp
jae
lret
adc
jmp
and
ret
push
in
mov
adc
test
and
jmp
push
scas
or
ds
sti
ljmp
cmpsb
push
push
pop
insl
xor
std
adc
mov
pop
xchg
pop
ret
and
iret
enter
mov
sbb
sti
out
lods
aam
dec
xchg
call
imull
mov
mov
xor
pop
pop
jns
int
lock
jg
test
sub
inc
push
in
clc
movsl
xor
cmp
les
dec
pop
sbb
insl
mov
clc
mov
into
dec
mov
aaa
cmp
or
sub
iret
add
int
outsb
js
fsub
pusha
incb
aas
in
or
cmp
mov
lock
cmp
adc
mov
xlat
iret
shll
xlat
imul
stc
sarl
cmp
cmpl
cmp
roll
xchg
mov
add
adc
orb
stos
int3
or
shll
into
popa
lret
arpl
loop
repnz
cld
pop
add
jae
lret
lahf
mov
fs
mov
pop
out
jle
les
std
jmp
out
movups
out
gs
popf
jl
xlat
stc
loope
cmp
ja
xchg
pop
pop
ds
xor
mov
pushf
test
aaa
and
push
inc
jns
push
ss
mov
out
pop
fs
mov
cmp
adc
repz
shll
int
mov
pop
mov
pop
int3
sbb
mov
inc
fdivrs
cmpsl
push
fsubrs
mov
sbb
mov
xchg
jne
pop
mov
dec
sbb
lods
int
push
scas
sbb
movsb
es
cld
inc
push
in
ja
mov
mov
lcall
mov
and
lcall
leave
pop
mov
or
cmp
ror
mov
fistpl
inc
aas
test
mov
gs
das
pop
inc
pop
xor
lret
shlb
sti
insl
sub
add
mov
out
mov
cmc
incl
xchg
dec
cmc
out
push
mov
push
mov
xlat
in
xchg
xor
ret
mov
add
mov
push
pop
bound
cld
push
jns
enter
scas
rcrb
and
sbb
pop
and
daa
arpl
nop
sbb
xchg
aad
pop
mov
mov
ljmp
lret
andb
pop
mov
push
or
jge
mov
xchg
movsb
inc
xchg
popf
lret
scas
nop
cmpsl
lcall
dec
push
aad
mov
adc
push
sub
faddl
lcall
stc
sub
mov
jns
xchg
lods
std
xchg
insl
bound
pop
push
cmp
call
xlat
or
jmp
inc
cwtl
dec
sub
aaa
dec
sub
push
push
in
mov
lahf
decb
add
push
cmp
in
call
insb
xor
aam
mov
cmp
mov
push
or
sti
fst
mulb
ficoml
jmp
repnz
lea
add
xor
mov
mov
or
xor
lret
xor
jo
rorb
nop
leave
pop
test
xchg
push
insb
out
jecxz
jmp
repnz
scas
fidivrs
cmp
adc
xor
or
jg
jbe
fcmovnu
pop
dec
add
mov
mov
dec
jbe
jecxz
mov
mov
lret
sub
add
or
xor
mov
dec
push
xor
mov
int3
mov
daa
int3
shll
xlat
test
ljmp
sbb
xor
test
xor
xchg
xchg
lock
adc
sub
cmp
les
int3
movsl
fistl
or
mov
mov
dec
cmp
loopne
subb
xchg
mov
lahf
adc
mov
adc
xchg
mov
ja
adc
out
sarb
test
xchg
sub
and
jae
aas
sbb
or
push
jecxz
push
xchg
xchg
dec
in
out
cmp
xchg
in
hlt
ja
ss
cmp
das
fildll
lods
ret
mov
into
mov
fmuls
jl
movsl
pop
push
popa
pop
fsubrs
push
pushf
jp
and
imul
sub
cltd
jge
push
ljmp
repnz
movsb
push
push
lret
mov
call
sbb
aas
std
xor
jae
jl
aad
sub
cmpl
lahf
popa
jno
inc
mov
sub
lret
ret
sbb
insl
stc
jb
pusha
ret
fsub
clc
or
inc
inc
mov
push
sbb
add
mov
nop
and
xchg
mov
cmpsb
cmp
test
aas
jge
jl
pop
dec
jle
push
fisubrl
subl
inc
xchg
cmpsb
lret
pusha
push
scas
pop
cmp
std
daa
lods
and
xor
mov
xor
add
cmpsb
jmp
xor
hlt
fmull
in
pop
mov
popf
mov
sub
sub
xchg
xchg
sbb
add
jge
mov
lds
mov
dec
push
xor
test
mov
mov
inc
or
mov
subb
rcll
cmp
cwtl
adc
pop
iret
les
outsl
addb
test
lods
movsl
pop
lods
iret
lds
sti
pusha
decl
lea
mov
sub
adc
lock
mov
inc
test
daa
xor
mov
adc
cmp
scas
xor
dec
sbb
rorl
adc
jo
hlt
dec
adc
data16
test
in
rcrb
repnz
inc
idivb
fidivrl
jno
dec
cltd
std
test
enter
jle
pop
sbb
filds
fistpll
jbe
inc
pop
cmpsb
cmp
xchg
pop
mov
dec
divl
pop
adc
jge
mov
mov
data16
lahf
mov
out
sbbb
repnz
outsb
sbb
scas
fsts
mov
mov
jl
mov
orl
packsswb
or
arpl
stos
outsl
mov
push
sbb
mov
sarl
movb
scas
sub
and
aas
ret
add
jne
sub
jae
mov
xchg
push
jp
pop
mov
or
in
pop
testb
sti
jno
call
sbb
shrb
shll
jbe
adc
or
mov
cmp
es
adcl
das
imul
sti
xor
or
fld
fisttpll
lea
imul
pop
sarl
jmp
movsl
clc
not
lock
cmc
std
cmp
in
push
arpl
dec
icebp
and
dec
stos
push
mov
pop
xor
jae
nop
or
inc
in
mov
int
sub
lods
mov
lods
testl
dec
mov
push
pop
xchg
mov
pop
in
push
aas
mov
int
jmp
pop
cld
push
push
pop
jmp
cmp
out
jg
xor
out
scas
rol
ficoml
std
xor
push
push
orl
cmp
add
sub
pop
push
push
and
dec
pop
lahf
addr16
jg
dec
xchg
inc
sbb
retw
lock
xchg
mov
test
mov
cs
repz
and
push
loopne
out
faddl
adc
inc
xor
lds
dec
xchg
sub
jle
call
pop
in
cli
jbe
sbb
xor
and
jo
psadbw
mov
inc
xchg
fwait
data16
or
dec
rorl
and
jge
es
sar
sbb
je
inc
cmpsb
cs
or
adc
xchg
mov
push
pop
adc
insb
sbb
cli
or
jns
int3
mov
jmp
jg
and
jae
dec
add
sub
inc
arpl
rolb
or
pop
and
and
loope
int3
mov
test
in
or
and
and
adc
scas
adc
sti
pop
lahf
out
fmul
pop
or
imul
rcrl
inc
lea
outsb
push
mov
test
mov
pusha
nop
lret
sbb
jnp
adcl
adc
adc
das
mov
repz
fcompl
pop
lods
and
push
in
aam
add
call
jo
mov
out
mov
add
cltd
lods
cmp
mov
xlat
add
push
add
addr16
in
sub
xchg
xchg
dec
inc
xlat
cs
addr16
movsb
popa
xor
mov
adc
push
sbb
sahf
rcrl
addr16
jo
cltd
jno
hlt
jl
je
add
enter
lods
ficompl
mov
xchg
lea
xorb
rorl
jp
ud0
mov
outsl
shlb
and
pop
xchg
or
out
or
pop
xchg
in
push
and
sbb
leave
add
add
jmp
popa
sbb
cmp
xor
and
add
gs
dec
mov
sbb
shrl
movsb
sub
imul
pop
inc
clc
sti
push
lret
mov
subb
sub
xchg
pop
mov
dec
adc
inc
or
faddl
and
adc
dec
adc
or
bound
jne
push
xchg
push
xchg
lds
dec
push
mov
clc
jno
or
hlt
dec
adc
dec
adc
rorl
pushf
cld
fs
mov
ss
sbb
add
xor
shlb
icebp
xchg
fimull
pushf
xchg
cmp
in
jb
std
imul
and
dec
xchg
sti
pop
cmp
or
loop
cmp
sub
xchg
fdivr
scas
mov
inc
jle
xor
ljmp
mov
pushf
andb
inc
es
pop
rcpps
test
rol
repnz
mov
cmc
movsl
imul
andl
icebp
xchg
call
imul
fstl
lock
xor
es
mov
pop
mov
mov
jmp
xchg
mov
push
jle
imul
push
mov
mov
mulb
cld
and
xlat
int
addr16
repz
xor
outsb
fyl2xp1
ds
mov
jne
insb
push
es
or
pop
js
imul
jg
pop
xchg
inc
test
and
ss
pop
out
lahf
popa
cmp
push
inc
inc
jo
fcomp
test
inc
cmc
enter
imul
mov
jb
fs
add
mov
sbb
dec
pop
insb
cltd
jge
add
inc
sub
bound
loopne
cltd
andl
jns
sbb
out
xor
and
mov
push
test
adc
cmp
dec
aas
mov
add
inc
push
mov
dec
push
adcl
push
scas
loop
sti
movb
in
cmp
addl
add
mov
sbb
addr16
xor
dec
test
lea
mov
fstl
enter
inc
mov
movl
mov
xor
pop
xchg
into
iret
mov
dec
sbb
jns
mov
imul
push
std
push
xchg
das
lds
xchg
sbb
xchg
arpl
dec
cmpsb
mov
push
push
ljmp
fisubs
mov
inc
push
dec
test
sbb
xlat
sub
pop
and
inc
loop
inc
std
add
sub
inc
pusha
leave
notb
iret
cmpsb
cli
lahf
mov
lahf
outsl
outsl
jno
out
pop
sahf
popf
pop
lea
and
xchg
ret
mov
stc
ret
popf
pop
fwait
dec
pop
adc
test
clc
fs
arpl
jb
sub
imul
cld
popa
mov
fstp
daa
stos
mov
push
pop
cwtl
stos
or
sbb
int3
insl
mov
fsub
sbb
jae
jb
das
imul
hlt
loope
fildll
insb
es
mov
fs
add
outsb
dec
int3
mov
xchg
mov
or
pop
mov
add
xor
adc
jecxz
imul
xchg
xchg
jns
mov
cmp
adc
jns
pop
jg
jecxz
rcrl
lods
jecxz
pop
xchg
sbb
popa
movsl
add
mov
addr16
into
enter
cmpsb
pop
jmp
cli
int
roll
cld
movsl
aaa
pop
push
xor
ds
or
fwait
iret
fs
in
idivb
adc
mov
loope
lcall
sahf
cli
pop
mov
dec
sbb
sub
adc
xchg
pop
aas
adc
in
sahf
and
out
push
leave
lods
popf
in
test
push
scas
or
lods
jae
in
cmp
loop
mov
repnz
mov
out
loopne
mov
sbb
test
mov
xchg
in
mov
mov
pop
cwtl
xchg
lahf
xor
xchg
cmp
mov
imul
xor
lret
enter
lcall
inc
dec
pop
push
mov
fsubs
jb
xor
sbb
add
stos
xor
pop
xor
cmp
imul
stos
cwtl
xchg
mov
xor
outsb
adc
into
cmpsl
add
iret
aaa
pop
xchg
pop
xlat
stc
test
lea
mov
inc
mov
xchg
in
sahf
mov
inc
pushf
adc
gs
in
add
jb
mov
stc
sub
cmp
or
push
loop
test
test
mov
roll
mov
cmpl
cmp
jge
mov
xorb
addr16
add
push
push
push
cmp
cmp
jp
shrb
cltd
mov
inc
popa
icebp
cmp
mov
or
fwait
cmp
mov
into
push
push
jns
pop
les
sub
in
jl
cltd
add
cmp
xor
jecxz
nop
popl
fcoml
push
ds
ds
adc
sub
rclb
incb
test
jge
fnstenv
jmp
pop
jge
hlt
mov
in
add
mov
cmp
jmp
icebp
call
ffree
push
or
lret
dec
inc
ss
cmp
movsb
push
rol
cmp
clc
jb
hlt
fistps
pop
jl
lods
inc
lcall
stos
xchg
comiss
mov
pop
push
pushf
or
cmp
sbb
push
dec
xchg
mov
mov
mov
cwtl
jbe
inc
outsl
inc
imul
mov
call
xchg
or
and
rolb
mov
or
imul
data16
dec
fs
ljmp
ljmp
popf
ret
enter
pop
inc
repnz
xchg
cmc
aas
or
sub
add
or
bsr
jnp
fsubs
stos
cmpsl
cmp
jno
xchg
push
setge
popa
inc
cmpsb
pushf
jle
mov
fsubr
cmpl
push
inc
inc
fiadds
cmp
out
mov
dec
adc
ret
fwait
out
jns
sbb
andb
lahf
pop
shrb
cmp
rcll
sti
push
movsl
push
int3
fs
test
or
lea
je
sub
and
out
sub
dec
jle
mov
lods
ljmp
outsl
add
sub
pop
xchg
aam
clc
mov
mov
mov
sub
xchg
clc
xchg
pop
inc
add
outsb
mov
jmp
fcomip
xchg
ds
sub
xor
int3
out
pushf
or
sub
insl
cmpl
mov
enter
cwtl
nop
pop
adc
xor
xor
scas
ds
rcll
sbb
daa
imul
cmpsl
and
lcall
jb
mov
mov
insl
adc
add
xchg
dec
dec
aam
shlb
dec
cmc
shlb
out
cs
popf
push
dec
lock
inc
push
pop
jl
daa
mov
and
add
sahf
fwait
leave
push
jae
push
xor
daa
and
xchg
js
adcb
xchg
repnz
test
in
negb
mov
in
mov
in
js
lds
inc
movsl
pop
push
jnp
dec
ja
adc
mov
pop
sbb
pusha
clc
dec
int
cltd
jle
shrb
cmp
dec
sub
sbb
xchg
repnz
mov
repnz
das
dec
clc
sub
jns
insb
js
pop
in
movsl
pop
mov
push
mov
sub
std
in
cltd
inc
jmp
into
out
imul
xor
jecxz
adc
hlt
scas
dec
pusha
jp
outsl
jmp
fwait
sub
mov
dec
aas
dec
cmp
mov
cmp
pop
push
andl
add
xchg
add
push
in
lret
das
stos
mov
shrl
das
es
mov
pavgb
in
pusha
adc
cmpsb
bound
xchg
mov
loop
push
xor
mov
sahf
and
push
mov
lds
fdivrl
xor
adc
inc
std
adc
jne
dec
in
and
xchg
cmp
push
or
call
mov
xor
cs
cld
inc
mov
cwtl
xchg
cltd
mov
add
fprem
pop
and
jmp
std
daa
jl
lret
xchg
movsl
lds
lret
add
loopne
push
movsb
popf
std
imul
sbb
loopne
jg
mov
dec
sbb
dec
dec
jne
cmpsb
xor
sbb
and
xchg
dec
lea
jmp
push
mov
in
pop
cmp
push
xchg
sub
adc
adc
mov
shl
addb
lods
and
cmp
pop
sti
mov
jmp
stos
mov
push
jg
fstl
lock
cmpsb
movsb
and
pop
jge
hlt
in
out
or
nopl
sbb
leave
aam
rcrl
mov
lret
adc
daa
mov
lods
mov
and
movaps
call
test
pop
push
sub
cmc
lcall
scas
sbb
jl
mov
loop
aad
push
and
mov
fdivr
mov
sub
pusha
or
fidivl
int3
mov
inc
fs
popf
xchg
rcrl
adc
add
mov
xchg
sti
pusha
jecxz
mov
mov
mov
mov
inc
ret
or
imul
test
iret
jle
in
pop
ret
lret
jno,pn
roll
jb
pop
out
mov
xlat
dec
ret
pop
int3
in
je
push
mov
clc
mov
cmp
gs
dec
xchg
out
iret
in
and
xchg
vmread
test
add
ret
or
pop
xchg
cmp
pushf
jg
aad
or
push
xor
inc
push
dec
xlat
out
aam
inc
cwtl
mov
adc
test
sahf
rcrl
into
ficomps
jns
mov
popf
movsl
out
sub
data16
fistpll
cmpsb
adc
inc
mov
aam
fwait
pop
xchg
xor
push
jae
mov
into
push
fsubrp
fistps
push
mov
adc
rcll
fisttps
into
cmp
inc
or
fs
cmp
std
mov
mov
adc
mov
dec
pop
stos
ret
dec
js
hlt
rcr
pusha
sub
jg
aad
scas
dec
dec
int3
dec
jge
mov
sarl
scas
ja
dec
shr
cld
adc
mov
decb
xor
in
addr16
add
mov
push
xchg
xor
sbbb
pop
movsl
and
cwtl
push
and
inc
xor
aam
outsl
insl
into
stos
insb
scas
call
mov
mov
dec
adc
pop
jne
jnp
int3
adc
and
cmp
sarl
push
loop
adc
outsb
fldcw
ret
jno
inc
shr
xor
pop
cmpsl
mov
cld
mov
dec
xorl
mov
in
dec
imul
pop
arpl
lcall
inc
pop
mov
aas
mov
or
jae
scas
addr16
out
outsl
rorl
sub
outsl
icebp
pop
fs
cwtl
xchg
mov
add
pop
cmp
fwait
dec
loopne
mov
ficoms
sub
std
mov
in
mov
syscall
sub
cmp
call
mov
mov
mov
jno
out
dec
add
outsb
das
and
jg
add
xor
xchg
scas
std
adc
nop
pop
push
ljmp
rep
push
imul
inc
lahf
mov
pop
or
cmpl
loop
add
sub
push
es
fmuls
loopne
xchg
jne
dec
or
loopne
mov
pxor
ja
inc
ret
jae
cli
out
mov
fsubl
or
jl
mov
or
je
movsb
shrl
incb
fstps
movsb
mov
cmp
cvtpi2ps
jl
xchg
outsl
pop
adc
inc
adc
cmp
test
rol
test
lahf
push
cmc
dec
xor
mov
lods
bound
cmp
pop
lods
lods
fildll
inc
xchg
daa
jecxz
push
mov
jo
sbb
dec
push
aam
sbb
add
jbe
cwtl
inc
push
sarb
push
or
cmc
push
push
das
jmp
jmp
repnz
and
add
shlb
jge
mov
mov
xchg
rcll
test
jb
add
hlt
xor
andl
or
sub
cmp
pop
dec
adc
xchg
xor
jno
adc
les
into
and
inc
jmp
mov
pop
pop
cld
pushf
push
add
rcrb
test
sub
adc
fadd
out
sub
lret
jb
mov
mov
aas
xchg
mov
lock
push
aaa
in
push
dec
popa
rolb
mov
xor
inc
stos
call
xor
mov
das
and
dec
rorb
sti
add
adc
mov
fdivrp
mov
cld
cmpsl
or
icebp
in
mov
sarl
xlat
cmpsl
rcrl
shrb
bound
mov
mov
rorb
arpl
cltd
loop
dec
pop
xlat
pop
cmp
push
andb
and
add
push
pop
mov
jb
or
insb
xor
cld
mov
or
mov
nop
or
mov
scas
std
mov
loopne
mov
add
adc
jno
lea
les
adc
dec
jns
pop
inc
jecxz
imul
mov
push
icebp
inc
ljmp
repz
jbe
inc
xchg
xchg
mov
ficompl
ja
xchg
test
sub
xchg
or
pop
iret
sub
mov
jl
push
sub
fwait
add
adc
xor
mov
shlb
divl
sbb
insl
sub
or
mov
inc
push
in
rclb
jge
cld
dec
xchg
out
imul
jo
xchg
jl,pn
out
add
sub
cwtl
pushl
lea
mov
cmpsl
xor
fs
mov
adc
data16
sbb
sbb
mul
or
inc
push
add
call
adc
and
pop
lock
lods
test
hlt
fisttps
test
lock
insl
orl
js
repz
sub
push
sub
xchg
push
adc
enter
xchg
add
lahf
or
or
jge
in
or
lds
jnp
jbe
movsl
push
jns
sub
cs
cmp
outsl
lcall
mov
imul
xlat
sbb
cmc
xchg
fsub
pop
stc
in
out
daa
xlat
sub
mov
faddl
das
dec
dec
sub
iret
mov
jg
xor
leave
mov
jo
mov
mov
lds
loop
stos
cld
jb
push
mov
pop
mov
call
in
xchg
mov
insl
push
adc
call
fs
dec
jno
lods
rcr
mov
pushf
mov
repz
mov
test
and
div
in
or
int3
das
add
mov
fldlg2
adc
imul
jmp
push
test
js
repnz
bound
lcall
lods
push
enter
dec
mov
ljmp
test
cmp
imul
add
fcoms
std
pop
pop
mov
std
add
in
loopne
jno
add
fsubrs
sbb
inc
popa
inc
pop
test
xchg
xchg
cmp
mov
lock
cmp
and
lcall
scas
push
add
inc
sub
push
mov
sar
dec
jbe
add
cmp
out
insb
xchg
js
rcrb
cmpsl
hlt
push
ret
lcall
mov
in
cli
xor
dec
jb
or
jne
and
out
xchg
and
jmp
pop
xchg
xchg
xorb
xchg
or
cld
in
jmpw
outsl
and
repnz
stos
push
addr16
in
add
cmpb
stc
es
inc
xchg
aad
jle
xchg
jne
or
jo
or
pop
inc
shr
pop
mov
imul
sbbl
mov
add
pop
cmp
icebp
ja
adc
in
dec
sub
add
test
push
jl
hlt
cmc
cwtl
dec
pop
popa
clc
loop
lods
nop
stc
xor
cmovp
lcall
sbb
cmpsb
into
xchg
pop
xchg
notb
mov
ss
xchg
test
push
imul
sbb
dec
iret
cmp
jns
es
testl
icebp
andb
or
lds
xchg
addl
adc
mov
faddl
mov
in
and
lea
ret
pop
lret
lcall
rol
mov
push
in
js
jnp
jle
sub
rcrl
push
mov
mov
int3
movsb
inc
ljmp
bound
add
out
xchg
daa
and
pop
cmp
push
add
dec
inc
inc
dec
mov
mov
enter
or
cmc
mov
xchg
sbb
add
outsl
push
mov
lret
repnz
xchg
movsb
pop
iret
xchg
call
sub
fucom
pop
test
lcall
jo
in
mov
mov
xor
jg
test
adc
mov
dec
repz
inc
push
nop
cltd
sti
sub
jp
jb
fmull
lret
cmp
xlat
lahf
sub
sub
pop
lret
les
and
cmp
cmc
mov
enter
lds
xchg
xor
lret
cmp
out
clc
ret
pop
mov
lret
mov
mov
cmp
dec
notb
setp
push
ret
cmc
dec
pusha
add
sub
xchg
outsl
xchg
xchg
mov
out
ret
mov
or
mov
aam
pop
cmp
push
insb
dec
dec
loopne
or
divb
jno
sbb
mov
out
inc
aad
testb
mov
cmc
push
adc
in
push
into
addr16
cwtl
dec
fucomi
xor
jne
or
dec
nop
mov
push
loop
test
lret
xor
mov
mov
sub
add
mov
and
hlt
push
frstor
mov
xlat
pop
mov
xor
xor
push
scas
rorl
xor
mov
and
adc
jg
sub
lds
lret
fs
jle
lret
movsb
jecxz
mov
mov
js
and
mov
pop
cmpsb
push
add
aad
sub
mov
loop
cmpsl
test
pop
mov
in
xchg
insb
pop
add
jg
xor
jmp
popf
pop
or
xchg
sbb
int3
adc
xchg
add
in
mov
jp
sbb
push
int3
cmp
add
lock
shrb
sbb
jo
inc
dec
mov
in
pusha
mov
clc
cmc
in
fs
ret
xchg
push
ret
mov
iret
xor
bound
mov
inc
repz
ljmp
popl
ror
cmp
pop
add
in
ja
or
pop
dec
rcl
inc
call
es
lret
ud2
inc
jle
push
push
scas
push
sub
neg
jo
or
and
mov
call
scas
outsl
and
insb
aad
repz
xor
jmp
dec
jns
stc
mov
cli
dec
sub
adcb
test
inc
pop
dec
mov
fists
sub
inc
fisubs
adc
jnp
mov
insb
jnp
jge
loope
pop
aad
mov
xlat
push
leave
mov
test
xchg
scas
pop
add
dec
push
inc
aas
movsl
push
xor
dec
mov
jge
sbb
clc
and
outsb
loopne
or
ret
xchg
sub
xchg
dec
daa
pop
fldt
mov
mov
dec
jno
cmp
faddp
push
mov
lcall
arpl
stos
cld
sub
test
add
adc
mov
and
call
xchg
push
repz
test
ds
mov
sub
movsb
push
stos
inc
inc
in
xor
imull
adc
cld
inc
mov
loopne
andl
and
and
inc
mov
dec
int
inc
je
xchg
inc
cs
mov
cmpsl
cli
notb
gs
fdivrs
pop
fwait
das
mov
cmp
daa
data16
xchg
stc
or
push
cmp
mov
pusha
outsl
mov
sub
xchg
add
and
or
jle
scas
xchg
adc
shrb
gs
add
gs
arpl
or
mov
dec
cld
add
loope
jb
rcll
movzbl
mov
adc
out
or
in
lods
loop
sbbl
mov
mov
xchg
pop
popa
xor
or
pop
cmpsb
pop
mov
inc
imul
test
out
std
scas
cs
push
std
out
push
lock
xor
sbb
cmp
inc
xlat
dec
popl
shl
in
and
test
outsb
push
fadds
ret
les
push
add
sbb
and
gs
scas
out
jae
mov
xchg
pop
add
jno
adc
mov
mov
mov
inc
xchg
scas
pop
pandn
les
xchg
cmp
or
mov
dec
cmpsl
fidivrl
ljmp
testl
push
xchg
imul
icebp
test
mov
sahf
mov
jnp
or
pop
cmpsb
add
push
insb
fstsw
mov
fstpl
pop
lock
inc
pop
fwait
push
sahf
outsl
ror
in
mov
cwtl
add
cmc
orl
repz
lods
cmp
addr16
bound
pop
cmc
sub
push
gs
adc
in
fwait
lret
out
stos
lret
add
mov
out
cltd
xchg
sub
adc
ss
or
aas
xor
or
shll
shlb
cli
cld
daa
and
std
xchg
std
hlt
xor
aam
imul
add
push
outsb
test
js
sbb
ret
jp
test
enter
pop
aaa
push
mov
xor
push
dec
ss
scas
stos
jae
push
sbb
push
test
movsl
fidivs
lock
sub
xchg
jmp
pop
es
les
jl
or
ljmp
pusha
lret
movl
cmpsl
ret
out
mov
subb
scas
add
inc
add
mov
cmp
sub
xchg
mov
lret
out
int3
movsl
push
add
outsb
push
mov
arpl
cmc
mov
out
repnz
cmp
adc
rorb
push
xor
mov
jecxz
stos
inc
rorb
jb
int3
push
out
lahf
lret
mov
or
nop
sbb
aam
mov
dec
xchg
xchg
push
dec
sbbl
ljmp
and
lcall
andl
dec
or
loop
mov
xor
push
mov
icebp
sub
xchg
ret
imul
stc
ss
push
int
popf
dec
sub
insb
js
xorl
jne
dec
iret
shrb
or
lds
jg
and
into
pop
mov
pop
push
out
sbb
pop
xchg
stc
dec
les
xor
lcall
sarb
and
push
xchg
jl
pop
cmp
dec
xor
dec
push
dec
inc
lock
test
jl
mov
pushf
mov
test
out
leave
mov
add
popf
aam
cs
dec
sub
iret
aaa
shll
movsl
cmpsl
outsb
push
stos
xchg
xor
fs
xor
pusha
jne
xor
pop
jno
add
cmp
rcl
xor
push
dec
sti
test
pop
lcall
imul
outsb
loope
fcmovnb
ret
popa
scas
fcoml
inc
pusha
in
pop
mov
pop
push
mov
sbb
xor
pop
data16
mov
sub
sub
imul
push
jecxz
fldl
loope
bound
mov
test
pop
shll
dec
fstpt
or
aam
or
and
mov
xchg
cmp
dec
xchg
fisttpll
test
cmpsl
stc
jnp
repnz
mov
xchg
sub
ss
rcll
pop
shlb
pop
out
mov
shrl
ds
cmp
adc
ret
insl
mov
sub
mov
in
mov
pop
cmpsb
xor
dec
pop
mov
sub
add
js
mov
xor
xchg
pop
test
jp
xor
icebp
pusha
xchg
mov
mov
lds
and
repnz
test
fsubs
add
pusha
bound
mov
pusha
push
pop
jno
cmc
je
or
cld
fldenv
imul
push
test
push
xor
aaa
push
mov
outsb
sbb
sbb
push
jne
pop
mov
and
xlat
push
dec
pushf
adc
daa
push
dec
adc
call
add
inc
fdivrp
dec
dec
xor
int
rcrb
mov
inc
and
sbb
popf
xchg
cwtl
lret
popa
and
push
fstps
sub
xchg
sub
cwtl
xchg
nop
lock
push
lods
mov
add
mov
out
popa
fists
mov
xchg
lods
or
inc
jo
xor
out
sbb
push
cmp
sbb
cltd
mov
sbb
xchg
jae
adc
in
dec
in
aas
ret
pop
mov
push
scas
adc
push
stc
jae
or
fs
orb
insl
imul
pop
pushf
pop
pop
and
test
lock
pop
inc
scas
push
scas
nop
mov
adc
in
jl
into
lret
shl
xchg
push
sub
sbb
or
push
nop
pop
push
and
sbb
sar
xlat
mov
cmc
xchg
jb
sbb
dec
dec
into
iret
mov
mov
pop
dec
aad
or
mov
or
out
outsl
adc
nop
aaa
stos
sarl
std
sbb
ret
push
es
aas
js
dec
cmp
dec
xlat
jle
fcoms
mov
and
shl
loope
stos
pop
gs
out
mov
xlat
addr16
and
gs
aas
pop
es
rcll
push
mov
insb
out
loopne
out
jp
mov
sti
add
and
mov
add
sub
daa
xor
fstpt
xchg
pop
in
bound
int3
hlt
inc
cmp
xlat
or
xchg
test
lcall
sub
jo
lock
dec
mov
mov
mov
and
data16
inc
xchg
xchg
into
pop
divl
dec
and
clc
cli
jb
and
cwtl
inc
push
mov
mov
pop
je
movsl
mov
inc
es
inc
push
mov
jae
adc
cld
sub
mov
mov
aad
mov
aad
push
or
push
rorl
scas
lea
xchg
mov
lcall
sbb
jo
push
push
xor
out
mov
sbb
not
sbb
mov
push
jns
mov
inc
je
push
shll
movsb
sbb
inc
push
adc
push
adc
cwtl
js
mov
insb
pop
xlat
mov
xchg
les
xchg
pop
push
jp
fcomps
mov
and
xor
hlt
dec
sahf
jl
rclb
push
cmp
imul
jne
ret
adc
mov
aaa
cmp
mov
jl
mov
dec
cmp
mov
sbb
inc
pop
cmpsl
imul
push
and
mov
add
mov
mov
enter
inc
add
or
jo
js
loopne
out
in
in
mov
outsl
push
or
leave
in
fistps
fdivrs
mov
repnz
fists
into
push
cmpsb
ret
and
mov
cmp
cmp
jg
loopne
js
shrb
mull
fisubs
jns
and
js
or
aad
loop
gs
cld
push
pusha
mov
bound
mov
cld
frstor
push
sub
mov
test
fistps
lret
adc
enter
inc
mov
or
cmp
add
lds
pop
mov
pusha
les
sti
sbb
mov
or
xchg
imul
arpl
stos
lret
jbe
push
stos
call
mov
pop
addl
or
lock
out
add
and
sub
push
inc
add
or
aas
jne
add
test
push
outsb
scas
sbb
jo
mov
add
std
lret
iret
inc
lods
dec
fidivs
scas
mov
addl
jecxz
fs
lcall
sahf
jno
sbb
in
adc
xchg
and
das
ret
out
inc
xchg
adc
dec
inc
push
jecxz
jno
jne
jbe
inc
lock
mov
cmc
push
dec
mov
cmp
adc
jo
pop
rclb
sub
test
adc
data16
pop
lea
push
xlat
ficoms
ljmp
arpl
test
inc
push
scas
push
les
mov
enter
jbe
pushl
ljmp
adc
mov
push
lahf
xor
push
fisttpll
outsb
test
mov
lea
fdivrl
and
lahf
mov
nop
jne
aaa
sbb
jecxz
je
loope
cltd
fistps
dec
in
fidivrs
xchg
or
mov
push
js
arpl
shrl
icebp
pop
aam
mov
and
lea
and
out
movsb
and
pop
dec
aas
icebp
xchg
xorl
jbe
cmp
stc
ss
ret
sti
xor
sarl
not
test
mov
dec
ljmp
test
push
sbb
pushf
mov
repnz
jl
mov
or
push
push
add
jns
sub
mov
jmp
das
repnz
adc
aas
cmpsl
ss
lcall
push
and
out
outsb
push
bound
jl
fsubrl
movsl
xchg
sti
test
jge
mov
clc
xchg
add
push
cmp
cmp
fld
and
dec
push
dec
int
loope
insl
inc
ds
imul
add
adc
lret
adc
aam
aaa
fiadds
fwait
jbe
mov
popf
mov
mov
ds
mov
or
xchg
insl
inc
mov
mov
gs
sbb
and
xchg
sbb
pop
mov
cltd
and
dec
imul
lret
pop
mov
adc
sbb
push
ja
lcall
jnp
pushf
ret
mov
loope
fwait
mov
mov
or
ret
inc
ret
sub
xchg
or
lea
imul
into
inc
push
cmc
sub
push
mov
jge
test
pop
stc
mov
xlat
or
ret
shr
jge
and
ljmp
sub
dec
add
push
out
cld
call
pop
adc
loop
fldcw
sub
out
repz
pop
or
push
mov
mov
mov
mov
lcall
mov
sbb
jl
out
xor
addr16
ficoms
adc
pop
insl
shll
pop
adc
pop
scas
lea
daa
inc
jnp
mov
sbb
es
ret
sbb
rclb
push
sub
inc
daa
xchg
mov
xor
mov
or
push
bnd
or
lods
or
sti
test
cmp
or
movsb
lret
cwtl
insl
mov
test
mov
inc
fwait
dec
cmp
mov
adc
ja
mov
inc
xchg
adc
sbb
pop
loope
sbb
cmp
sub
pop
adc
mov
mov
in
xor
inc
lret
mov
mov
jne
fisttpl
ljmp
or
mov
xchg
pop
inc
movsb
nop
cmp
xorl
jmp
mov
andl
mov
pusha
fmuls
jp
xor
orl
ss
and
cmpsb
aam
xchg
xlat
ja
add
mov
xchg
or
jb
push
adc
mov
add
or
pop
inc
clc
stos
push
popa
cmpsb
int
bound
cmc
arpl
jbe
sub
cmp
adc
push
in
in
inc
ficomps
xor
add
std
xchg
es
daa
push
push
xchg
aas
shlb
rcrl
or
enter
jne
lock
dec
mov
fwait
out
cld
lods
mov
or
or
call
dec
sub
push
add
ror
xchg
cmp
mov
mov
pop
sub
mov
dec
int3
fsubrl
adc
cltd
hlt
ret
clc
fmuls
push
add
mov
jmp
test
or
and
imul
mov
test
and
xor
adc
xor
andl
add
insl
das
iret
inc
mov
mov
jmp
mov
mov
imul
cli
jo
cmp
pop
gs
mov
inc
aad
pop
lods
sbb
push
pop
mov
dec
adc
jne
inc
test
pop
testl
cld
mov
icebp
xor
or
push
cld
pop
stc
stos
pusha
cmpsb
shlb
int3
into
inc
mov
jge
pop
and
insb
lods
inc
cmp
in
sbb
leave
dec
pop
in
es
cmpsl
popa
adc
sub
cmpsl
inc
and
cmp
jecxz
cwtl
push
in
rcrl
fimull
fistps
or
sbb
xchg
stc
out
mov
sbb
and
movsb
cmc
or
fmuls
mov
xchg
add
pop
or
push
mov
jle
jno
jle
and
hlt
enter
fldl
cmpsl
cmp
push
add
mov
inc
shr
jo
icebp
test
arpl
adc
jb
mov
imul
and
jbe
in
test
add
in
fadds
aaa
xchg
mov
xor
inc
jne
xor
icebp
inc
sbb
ret
cmp
lods
add
loop
or
call
mov
test
insb
or
stos
dec
jmp
or
jnp
ss
sbb
sub
mov
xchg
fildl
aaa
popf
adc
dec
sbb
pop
out
mov
or
test
loop
lret
rorl
dec
push
ja
outsb
pop
in
scas
or
pop
lahf
xor
push
sbb
mov
outsb
cli
push
out
test
mov
xor
jp
sbb
jns
es
push
pop
or
jbe
mov
shrb
sahf
xchg
sub
sub
jb
or
adc
aas
xchg
pop
jb
xor
mov
cmp
aad
repz
insb
loopne
bound
dec
sbbl
aas
lcall
popa
pop
rcr
sub
inc
pushf
jg
pop
xor
mov
scas
and
rcll
filds
sbb
cs
leave
or
ret
or
mov
adc
jb
mov
push
push
fisttpl
jmp
sbb
es
pop
mov
pop
decb
push
or
add
mov
fistpl
sbb
jmp
and
jne
push
cwtl
call
inc
sbb
jae
test
pop
loope
fcoml
lea
mov
lock
and
insb
and
jno
cltd
cmp
test
fdivrl
pop
icebp
push
das
popa
ja
lcall
mov
dec
dec
mov
and
movaps
call
aad
enter
std
loope
jno
jnp
ja
repz
sub
or
push
je
push
inc
mov
push
js
sbbl
imul
cmp
add
iret
add
jb
out
mov
leave
lcall
jb
sub
movsb
ljmp
jle
call
push
popa
lcall
call
mov
popl
sub
cmpsb
add
cmp
les
lods
push
repnz
mov
dec
clc
mov
into
loopne
mov
sbb
pusha
hlt
inc
mov
dec
icebp
les
roll
mov
sti
or
inc
pushf
or
adc
cmp
shlb
addr16
in
push
into
jne
push
pusha
out
stc
push
sbb
sarb
testl
adc
gs
push
xlat
add
cwtl
ds
je
lds
cmova
fwait
in
cmp
push
mov
ja
sbb
cwtl
sbb
cwtl
and
dec
mov
inc
enter
std
bound
mov
orl
fsubrs
mov
inc
cmc
inc
leave
lcall
arpl
repnz
dec
lock
jnp
mov
add
adc
mov
xor
inc
sti
mov
and
aas
sbb
pop
jno
iret
mov
pusha
mov
mov
add
jp
pop
pop
test
pop
xor
insb
mov
cmp
pusha
xor
add
loop
lret
push
sub
add
int3
insb
fwait
pop
jo
out
adc
add
jge
and
shrb
mov
pop
js
sbb
inc
sub
xlat
xor
mov
enter
inc
jmp
pop
fsubs
pop
fiaddl
cmp
xor
xchg
xor
xchg
xor
pop
outsb
in
test
pop
push
mov
or
roll
mul
movsb
scas
xchg
pop
ficoms
sub
xchg
and
mov
scas
xchg
popa
cmp
xchg
fs
pop
push
xchg
mov
pop
push
fwait
jmp
and
and
iret
sbb
ljmp
js
mov
test
cmpsb
ficoms
add
pop
cmpsl
sub
cli
jg
mov
scas
sbb
xor
or
in
popf
mov
test
inc
xorb
fsubrs
cmp
addr16
or
mov
jecxz
xor
popf
cmp
mov
push
pop
pop
int
push
jmp
repnz
out
test
cmp
inc
lods
fistps
mov
xor
mov
sub
gs
pop
adc
push
subb
mov
ss
fsubrp
dec
pop
push
loopne
cwtl
inc
cmp
outsl
dec
jo
or
xlat
or
lods
or
sbb
or
cmp
sahf
push
jmp
add
mov
xor
inc
sub
pop
mov
or
jmp
in
lret
jno
adc
ja
mov
pop
unpckhps
fwait
push
push
lods
stos
add
imul
xchg
scas
dec
out
mov
dec
mov
and
inc
and
jns
adc
popf
data16
gs
into
lds
xor
push
stos
loop
adc
mov
pusha
scas
stc
cmp
in
inc
mov
lods
or
cmp
rclb
cli
rclb
or
or
pop
xor
loope
xor
mov
cltd
mov
pop
nop
std
sbb
std
pop
xchg
dec
push
mov
mov
mov
jg
stos
jb
mov
pop
add
insl
pop
jle
mov
sbb
int
jno
jg
push
mov
push
fwait
cmp
fcmovne
mov
sub
push
add
in
stos
jmp
ds
movsb
add
push
xlat
inc
xchg
pushf
ds
xchg
adc
mov
ds
mov
imull
mov
in
scas
mov
iret
imul
test
cmp
or
and
add
cwtl
xchg
clc
nop
aam
stos
xor
add
test
jnp
fstp
insb
lcall
pop
out
sub
mov
dec
mov
dec
xor
and
jle
sbb
mov
adc
push
push
inc
rcl
shrl
xor
mov
mov
add
lret
testb
lock
add
add
and
push
push
sbbl
jl
or
mov
addl
aam
and
push
int3
xlat
sbb
cmpb
stos
add
int
cmp
repnz
jns
sbb
aam
inc
mov
adc
rclb
push
mov
cltd
pop
or
push
dec
pop
imul
xlat
xchg
push
cmp
dec
jnp
test
ret
mov
fnstenv
fnstenv
stc
mov
and
xor
movsl
xchg
push
lea
sub
out
xchg
pop
fstl
dec
xor
add
ficompl
mov
stc
cli
or
pcmpgtw
push
inc
fisubrl
adc
pop
jne
inc
pop
jle
movsb
or
in
cmpsl
push
xor
mov
jmp
mov
movsb
mov
mov
frstor
stc
fs
scas
out
enter
and
push
outsb
push
push
incl
into
push
dec
pushf
stos
ret
into
pusha
ljmp
jge
push
cmp
pop
scas
dec
adc
dec
out
fcoms
jno
push
and
stc
dec
or
inc
push
xchg
js
pop
fcompl
xchg
inc
mov
test
xchg
xchg
jmp
je
jno
enter
push
aaa
cmp
push
call
cmp
rol
idivl
pushf
frstor
mov
jnp
out
cwtl
xor
cmp
and
push
sub
inc
hlt
cli
or
lea
mov
fcomps
jmp
jp
stc
xor
pop
or
daa
aam
lret
stos
in
call
inc
and
pop
mov
loope
in
into
sbb
leave
fdiv
imulb
imul
loopne
mov
ljmp
pop
aas
outsl
loopne
sub
pop
and
fnstcw
sbb
mov
or
mov
cmpsl
xlat
insb
pop
jmp
fwait
shll
add
sbb
inc
je
jno
jecxz
fprem1
and
call
pop
mov
pop
jle
pop
xor
gs
ss
hlt
sub
aam
pop
movsb
sub
in
inc
cmc
ljmp
test
lods
dec
dec
mov
push
icebp
cmc
pop
dec
sub
or
fadds
neg
push
ds
rol
shl
sub
adc
cmp
adc
cmpsb
pop
push
xor
fwait
cmp
repnz
dec
cmp
push
xlat
std
shl
out
leave
ljmp
jl
outsb
sub
outsl
cmc
stc
jge
or
test
adc
imul
rorb
pop
xor
mov
xor
or
cmp
mov
jo
fmul
dec
adc
add
push
dec
fldcw
push
outsb
popf
mov
dec
lcall
pop
into
inc
ret
imul
mov
mov
jge
movsb
pop
enter
imul
cmpsl
ret
ja
sub
mov
aas
in
std
imul
adc
adc
rol
mov
jno
push
adc
and
dec
mov
or
xchg
jl
sub
loop
test
or
sbb
test
loop
imul
cmpsl
adc
pusha
xor
shlb
add
pusha
cltd
pop
push
lahf
push
xchg
ja
lock
movsb
imul
sar
mov
loop
cmpb
jl
in
shll
shll
in
pop
cmp
mov
int
mov
enter
aaa
add
jne
push
or
imulb
sub
adc
pop
and
lock
das
jge
pushf
test
imul
movsb
pop
dec
pop
rclb
pop
nop
mov
mov
cmp
lods
lahf
mov
mov
movsb
pop
push
cmp
fiaddl
mov
mov
call
xor
cmc
lret
cmp
mov
sub
cmp
cmp
sub
xchg
jecxz,pt
clc
rorb
and
or
std
adcl
mov
mov
je
ljmp
repnz
scas
into
test
int
jno
sub
fsubs
pusha
cmp
cli
mov
adc
rcll
inc
mov
faddl
mov
jecxz
daa
ret
jge
pop
stos
add
in
xor
dec
std
popa
inc
fimull
cmpsb
mov
movsb
fsub
fdivrl
sbb
loopne
xor
sbb
outsb
jg
add
jmp
mov
sub
stos
lret
cmp
sarb
cs
loop
add
adc
mov
mov
sub
lock
cmp
aad
mov
imul
dec
es
and
pop
inc
ss
call
fs
pushf
ja
adc
fimull
jbe
and
nop
pushf
jne
adc
cmpsl
add
pop
test
pop
pushf
jbe
add
mov
pusha
shrl
movsb
cwtl
sub
jl
outsl
mov
jecxz
scas
mov
clc
cmc
or
pop
sbb
mov
ja
cs
jg
xchg
dec
lds
dec
sbbb
and
lock
pop
mov
scas
and
sbb
sub
jae
js
iret
int
add
mov
sub
mov
inc
mov
aaa
cmc
scas
mov
adc
inc
and
xchg
loopne
add
and
shrl
dec
adc
cmp
out
out
add
or
in
testl
pop
jge
jmp
jnp
xor
fisubrs
dec
into
lods
pop
and
mov
push
movsb
enter
clc
cs
fsubrs
jb
dec
adc
fcompl
femms
xchg
and
stos
aad
ret
push
shll
cltd
arpl
push
inc
mov
in
sti
sub
lods
jae
or
getsec
sub
mov
push
fwait
sbb
xlat
inc
dec
mov
data16
mov
dec
cwtl
js
dec
inc
and
mov
mov
and
fidivs
push
popf
arpl
add
and
jno
jo
repnz
xor
fidivs
in
dec
jno
popa
hlt
push
rcrb
lcall
clc
int3
test
loope
lods
stc
movb
les
push
das
fs
outsl
or
add
pop
mov
jge
insb
push
and
jns
sub
popf
jl
sub
pushf
mov
fdivs
sub
mov
arpl
scas
fildl
add
fwait
gs
cld
sub
ja
aas
iret
aas
arpl
xor
aam
testl
sarl
and
cmp
test
add
mov
lods
xlat
mov
cmp
inc
jl
add
inc
shrb
jnp
and
xchg
stos
add
push
jmp
repz
aad
and
sbb
outsl
sbb
divl
adc
inc
xchg
jno
cmp
loope
add
jo
mov
push
repz
mov
lods
mull
jne
test
cli
pop
dec
jno
pop
mov
out
jg
mov
pop
add
fwait
inc
push
popa
push
pop
daa
sbbl
pop
loope
jg
lds
xchg
jmp
nop
xor
jg
push
xchg
jns
cmp
arpl
bnd
sub
or
mul
pop
push
mov
and
pop
dec
test
mov
and
sbb
push
dec
sbb
pushf
imul
mov
stc
add
into
mov
pop
cld
stc
adc
push
mov
cmp
cli
insl
cmp
gs
push
out
imul
int
enter
cmp
in
inc
mov
add
sbb
jo
repnz
sbb
arpl
fisubs
xor
pop
mov
xor
mov
sbb
outsb
stos
into
movsl
xlat
mov
and
push
lea
adc
jge
and
or
inc
mov
and
lods
fiadds
mov
test
mov
push
scas
xlat
shlb
mov
and
std
push
icebp
jp
cmp
xchg
add
or
fisubs
xor
mov
shrl
add
lea
mov
jne
or
js
adc
mov
pushf
inc
mov
xlat
inc
xchg
stos
mov
mov
mov
inc
out
xchg
inc
pop
push
and
shll
leave
mov
loopne
scas
mov
inc
ret
popf
andl
jbe
mov
xchg
sbb
ret
cmp
sub
push
mov
addb
push
mov
jae
mov
xchg
lds
ss
xchg
inc
sub
fisubl
push
lahf
mov
movsb
sahf
cld
inc
dec
aad
lret
daa
out
push
loope
mov
lds
sbb
cmp
stos
pop
stos
rorb
std
outsl
xchg
sub
mov
aad
sbb
out
stos
nop
adc
popa
adc
pop
or
dec
pop
in
mov
push
adc
pushf
push
fbld
movsl
ret
sbb
mov
ljmp
jg
and
in
add
dec
fsts
mov
xor
cmp
iret
es
sub
pop
mov
mov
mov
fstpl
push
sbb
test
jmp
ror
inc
and
mov
int3
mov
pop
scas
cld
mov
nop
leave
notb
fldt
stos
decb
pop
dec
int
xor
and
push
lea
xchg
xchg
dec
cmp
cli
push
mov
scas
rcrl
xlat
cmp
mov
xchg
and
mov
cmp
jne
test
fdivp
sahf
push
xlat
nop
cmp
icebp
lea
dec
sub
jl
push
xlat
push
nop
xor
and
mov
inc
mov
outsb
mov
or
out
push
shrb
pop
or
mov
dec
pop
outsb
sub
cld
fiaddl
push
subl
xlat
lods
stos
inc
data16
clc
shlb
fwait
push
xlat
hlt
int
dec
aas
xchg
and
outsl
xchg
pusha
jp
add
xorl
sbb
sub
mov
mov
out
jg
fistl
call
mov
or
adc
loope
enter
neg
inc
xchg
sahf
mov
int
insb
in
iret
outsl
scas
bound
fdivl
push
xchg
push
jmp
push
in
shll
push
jge
add
in
test
int
mov
rcll
out
jo
fists
mov
aad
stos
fwait
cmp
es
inc
dec
add
push
aas
jno
stos
dec
sub
mov
add
repnz
cmpsb
xlat
imul
movsl
clc
jecxz
cmp
stos
sar
incl
add
dec
jl
in
mov
cmp
ja
push
xchg
push
sbbb
int3
ret
inc
mov
int
mov
pop
cmp
mov
inc
xchg
sub
lret
mov
imul
xchg
outsb
push
pop
test
pusha
scas
xor
divb
out
popf
xor
mov
cwtl
sbb
jle
push
imulb
xlat
sbb
ss
stos
ljmp
ja
popf
add
pop
and
cmpsl
fwait
in
pop
outsb
inc
pop
dec
jno
mov
cmp
add
sbb
jg
in
int
or
fcmovne
incb
and
das
jno
fnstsw
push
aad
mov
dec
xchg
ret
stos
cmp
ljmp
and
cmp
mov
or
push
mov
loop
jle
jge
stos
leave
in
jmp
mov
movsb
adc
adcl
jl
pop
rol
jg
imul
adc
xchg
lods
adc
pushf
xor
lock
jmp
repz
mov
lods
faddl
push
inc
fstp
mov
insb
jns
jne
jge
fists
je
mov
or
ret
ficoms
and
loop
int3
addr16
stc
adc
in
loopne
and
test
fwait
movl
inc
mov
es
push
mov
pop
mov
test
cmp
stos
sbb
xchg
xor
lock
int3
insl
lcall
ret
adc
jns
jp
call
popf
mov
mov
pop
mov
xchg
cmpsb
data16
pop
push
rclb
loope
enter
mov
and
das
int3
or
in
push
sub
loop
popa
popa
lock
stc
repnz
in
sbb
movsl
sbb
mov
lcall
xor
cmp
push
insb
push
cmp
pop
inc
lds
pushf
mov
mov
test
sub
dec
lcall
andb
lds
pop
fwait
out
mov
inc
xchg
int
and
add
push
ret
jns
outsb
daa
xchg
lods
mov
dec
push
imul
pop
fcomps
lret
cmp
push
imul
call
js
jbe
cmpsl
in
loope
insb
sbb
xchg
mov
push
mov
inc
insb
mov
loope
scas
xchg
cmp
inc
incb
pop
adc
jnp
stos
xor
mov
pop
outsl
sub
pop
loopne
mov
mov
repz
movsb
jb
xor
fisttpll
xchg
jb
mov
daa
int3
push
dec
mov
inc
lods
mull
lods
xlat
inc
repnz
stc
xor
sub
cmp
fiadds
push
cli
push
std
mov
xchg
lds
mov
inc
push
xchg
call
or
xchg
push
test
pop
ret
and
sub
inc
push
inc
and
push
mov
inc
pop
pushl
xor
rcrl
outsl
ljmp
and
mov
jl
sub
jmp
stos
fldt
and
int3
jp
dec
jae
add
inc
pop
jb
cmp
sbb
out
leave
xchg
stos
mov
adc
rol
cmp
lcall
call
mov
lods
bnd
in
subb
or
and
popf
push
aaa
out
xchg
fisubl
xchg
xor
xchg
jns
enter
roll
sbb
mov
adc
dec
pop
imul
andl
fnsave
filds
or
mov
jo
sub
jb
cmc
je
mov
idivb
sbbb
inc
out
ret
cmc
stos
dec
cs
push
arpl
addb
call
inc
lea
jg
in
lods
sub
xchg
jb
cld
mulb
clc
ret
sbb
mov
or
stc
call
fdivl
outsb
rorl
mov
jge
divb
sub
cmpsl
sub
or
fisttps
fnstenv
or
pusha
arpl
fmull
xorl
or
dec
or
push
lea
xchg
stc
ja
and
adc
dec
pop
jle
sbb
pop
movsl
xchg
xor
inc
push
mov
fnsave
push
fcompl
sbb
popa
addl
dec
push
ja
pop
insl
lret
push
cli
icebp
bswap
sahf
mov
fsubs
xchg
imul
mov
test
stos
add
frstor
lret
jmp
outsb
cwtl
jmp
or
sahf
rol
mov
and
jg
push
aam
js
dec
jmp
orl
sub
sti
dec
cwtl
mov
jmp
imul
das
cmc
push
inc
fdivl
es
xlat
iret
repz
or
jns
aaa
icebp
add
or
sbb
cmc
mov
xchg
dec
adc
mov
imul
enter
cmp
data16
adc
inc
movsb
stc
enter
lea
fdivs
hlt
sub
cld
mov
jbe
aas
sub
ds
pop
fcomps
fldcw
jp
jno
fdivr
mov
sub
mov
and
dec
and
insb
jno
pop
out
enter
out
sbb
pop
xchg
dec
jno
dec
add
dec
pop
or
fsubrs
adc
pushf
and
test
fisubl
daa
xchg
fwait
mov
icebp
xchg
fbstp
sbb
stos
push
or
movsl
mov
pop
pop
inc
sub
mov
adc
jge
adc
stos
adc
pop
mov
shlb
jb
in
adc
jmp
sub
hlt
jbe
fs
inc
xchg
pop
shl
lock
inc
lahf
pop
call
push
or
es
sub
mov
subl
fucomi
mov
or
cmpsb
jbe
jb
int
mov
into
mov
out
push
jmp
clc
sub
test
jnp
jb
fdivl
sub
fidivl
inc
push
pop
aam
into
jne
bound
adc
or
pop
push
sub
lds
in
les
jecxz
jae
adc
mov
adcb
stos
push
sub
pusha
fadd
rcr
insl
sbb
pop
xchg
xchg
in
je
aam
xchg
sbb
pop
ja
sbb
sbb
imulb
push
insb
adc
mov
sub
and
and
orl
dec
push
mov
dec
dec
dec
cmp
xchg
mov
fistpll
sbb
orb
mov
cmpsb
out
push
fdivs
xor
inc
dec
mov
cs
push
je
rcr
adc
lret
pop
xchg
je
mov
call
clc
xor
jb
xchg
pop
sub
dec
xorb
int
adc
cld
add
fwait
inc
sbb
fiadds
jge
lret
lds
pusha
lods
rcrb
cli
xchg
mov
loope
fstpl
stos
frstor
mov
idivl
dec
or
jo
pop
inc
shrb
insl
sub
inc
orb
inc
cwtl
icebp
jae
pop
sbbl
jns
mov
add
or
std
ret
cwtl
sbb
push
icebp
sub
loop
mov
dec
pop
cltd
mov
insb
or
push
std
cli
nop
cli
jmp
and
addr16
imul
es
and
xchg
aas
fwait
xchg
inc
adc
xchg
sub
adc
adc
leave
mov
lret
inc
out
test
jbe
pop
xchg
notl
fimuls
sbbl
xchg
das
mov
mov
xchg
pop
popf
xor
and
mov
icebp
inc
shl
test
scas
les
sarb
dec
mov
out
sub
add
xorb
filds
and
jg
cmp
les
xchg
push
or
pusha
jp
andl
jmp
mov
in
xor
outsl
cmpsl
cmc
testb
mov
cs
in
cmc
fstpt
mov
in
and
lods
jle
mov
sub
pushf
mov
mov
sbb
call
xor
repnz
and
les
xchg
dec
subb
jbe
mov
adc
dec
sub
shlb
add
sub
in
adc
xor
in
cld
push
call
pop
mov
pusha
fsin
test
and
enter
int3
icebp
lods
mov
lea
pop
mov
test
push
repnz
mov
insl
stos
es
mov
in
xor
push
out
pusha
int
adc
lahf
mov
das
push
or
sahf
pop
in
cmp
jns
adc
cmp
pop
mov
jne
xor
in
sbb
adc
aad
stos
mov
and
int
sub
cmpsl
out
scas
adc
sub
add
andw
inc
fs
adc
mov
cmp
out
arpl
fwait
add
sbb
push
jmp
push
mov
sub
or
in
cmp
xor
test
push
call
push
js
movsb
jns
lock
fiadds
sti
sbb
jl
repnz
popf
add
nop
pop
ja
mov
aam
and
stos
inc
negb
outsb
popa
push
fwait
cld
movsb
inc
cmp
into
adc
add
and
out
hlt
lea
mov
mov
push
push
iret
add
mov
dec
ds
pop
mov
fistl
inc
test
mov
mov
fs
decl
mov
xorl
mov
jo
arpl
aad
mov
adc
or
inc
inc
cmp
mov
pop
pop
push
fsub
rorb
movsb
movsb
pop
mov
xchg
les
mov
push
lock
jns
aad
insb
xorb
dec
out
mov
add
dec
shll
cmpsb
xchg
fmuls
cmp
mov
out
jecxz
bound
addb
les
cmpsb
out
lcall
push
sbb
cli
es
test
jo
gs
push
cld
sbb
in
cmpsb
dec
negb
mov
xchg
push
xchg
add
in
and
stos
xor
xor
sbb
fbld
mov
hlt
sbb
decl
jbe
shl
inc
cmp
lret
ret
or
test
mov
inc
xchg
or
cs
mov
xlat
pop
mov
adc
jbe
sub
arpl
sub
aam
mov
bound
push
cmp
in
xor
or
xchg
pushf
mov
xor
cmpsb
loope
push
jl
mov
jle
jecxz
cmp
pop
adc
or
lret
aam
sbb
inc
mov
fidivrs
mov
movsb
jle
fmull
xlat
cmp
fisttpl
inc
add
idivl
aas
cmp
pop
lea
sarl
in
mov
inc
inc
sbbb
gs
repnz
fwait
and
call
jmp
movsb
cmpsl
incb
pop
jmp
inc
fstpl
sbb
or
mov
test
mov
sbb
aaa
es
jle
add
addr16
inc
xchg
xchg
jno
add
scas
sbb
adc
xorl
icebp
jb
pushf
aam
mov
pop
push
js
mov
loope
jb
fisttpll
and
test
mov
movsb
test
add
mov
in
insl
xchg
jbe
pusha
mov
xor
enter
scas
push
inc
mov
add
mov
enterw
lds
notb
sti
adc
or
lea
nop
mov
outsl
pop
mov
pop
out
inc
popa
out
sti
adc
push
int3
in
outsl
jae
in
and
inc
lea
sbb
lods
cmpxchg
jnp
add
prefetch
mov
jno
daa
lods
sub
in
cmpsb
hlt
or
adc
xchg
repz
aaa
inc
and
push
pop
sub
pop
adc
push
gs
pop
in
mov
out
jns
pop
cmp
sbb
dec
es
jo
divb
orl
cmpsb
shll
fmul
mov
jmp
xchg
stos
push
stc
out
pusha
pushf
or
sub
loope
lock
push
dec
mov
push
add
sub
cmc
pusha
and
stos
out
lcall
pop
shr
les
mov
pop
add
data16
pop
sub
mov
mov
sarb
xor
ds
popa
xor
inc
push
cmp
iret
push
jae
int3
cmpsb
aas
jle
cld
xor
mov
xchg
lock
push
dec
popa
jp
fwait
xlat
loop
or
or
dec
repz
test
xor
jne
sar
rcll
mov
xchg
aam
imul
imul
popa
repz
dec
xchg
inc
shrl
push
stos
outsb
dec
aam
push
mulb
stos
xor
dec
or
cwtl
sbb
jmp
cmp
xor
loop
cmpsl
arpl
pop
xchg
mov
jno
int
repz
dec
in
inc
stos
pop
inc
pop
negl
push
xchg
jl
shlb
fs
mov
add
int
jmp
enter
cmp
pop
sub
and
aad
or
and
mulb
cmp
gs
aas
and
xchg
inc
imulb
aad
add
and
dec
jp
fisubrl
cmp
and
xor
sbb
popf
fucomp
sub
sub
mov
ss
sarb
jo
xor
call
ficompl
out
icebp
mov
jae
les
xchg
jb
mov
jnp
xor
lret
sbb
jo
nop
xor
dec
xchg
cmp
xor
push
mov
fistpl
or
inc
mov
cmp
jo
rclb
data16
xor
sbb
jne
mov
jg
push
jne
aaa
mov
sbb
pushf
mov
inc
mov
sub
imul
mov
mov
ret
push
je
add
in
call
adc
sahf
jmp
sub
ret
jbe
lret
out
femms
scas
mov
out
out
mov
pop
std
call
cmp
lods
repnz
scas
inc
push
les
sub
bound
push
into
das
dec
sbb
and
roll
cld
out
cmp
or
and
loope
inc
mov
add
pmaddwd
inc
push
sub
mov
mov
cmp
jnp
push
outsl
std
cmp
cmp
jo
jbe
loopne
loopne
sti
or
push
cld
in
mov
aas
and
in
sub
insl
sbb
pop
popa
xor
jb
push
add
mov
lret
add
mov
pop
outsb
lret
xchg
popa
fsubrs
cmp
sbb
cmp
int3
js
pushl
mov
push
xchg
test
testb
jg
loop
in
cmp
lret
repnz
pop
push
aas
pushf
insl
cltd
movl
mov
outsb
mov
ss
mov
jg
mov
pop
or
inc
cmp
sub
lea
lcall
mov
mov
test
lret
rorl
lret
out
adc
jbe
jns
scas
inc
int3
ljmp
inc
xchg
mov
or
cmc
movsb
popa
ret
stos
jp
jp
popa
fcomip
lea
out
out
cmp
jecxz
sub
fdivs
fucomp
mov
inc
mov
sub
cmp
lcall
ficoms
inc
daa
dec
cld
add
pushf
mov
pop
les
xchg
push
and
sub
bound
fistps
jae
or
fs
sub
sub
dec
pop
imul
add
rcrb
lahf
repz
inc
or
roll
cmp
sub
sarl
fwait
and
divb
cmpsb
jo
in
mov
test
or
sub
out
sbb
jg
in
sub
inc
mov
pop
add
int
fstpl
jmp
jae
lods
xchg
inc
and
or
xorl
mov
iret
stos
or
pop
arpl
lcall
scas
ror
xchg
lea
adc
out
popa
testb
jne
xchg
or
mov
mov
mov
ret
adc
add
inc
cld
push
pop
xchg
and
sti
mov
adc
cmpsb
adc
cmpsl
sub
in
out
cmp
inc
push
fnstenv
push
cmp
mov
or
stc
cmp
push
sub
or
xor
cmp
adc
cwtl
mov
lret
mov
adc
or
add
dec
dec
std
add
cmpsl
sbb
fistl
mov
lods
dec
fcmovb
jmp
and
jg
jmp
cmp
cmp
adcl
mov
les
popa
ret
and
mov
jb
adc
sbb
ss
adc
mov
xchg
and
mov
cmpsl
fcoml
arpl
sbb
ds
jnp
push
pop
test
mov
or
push
sub
mov
inc
pop
cmpsb
aam
mov
cmpsb
jecxz
adcl
hlt
cmc
pop
in
shl
ds
shll
lret
pop
shr
int
nop
into
arpl
shrb
push
jle
leave
divb
sub
ds
enter
and
dec
add
ljmp
jp
pop
aad
cmp
in
test
push
mov
mov
rcl
rcll
push
cli
inc
sbb
pop
iret
sub
add
out
fisttpll
mov
test
cltd
cli
fdivrs
and
scas
or
dec
insb
inc
aaa
inc
or
les
es
mov
clc
xor
inc
inc
icebp
int3
jp
cmp
scas
add
arpl
aad
cmp
test
mov
aam
fdivs
dec
subw
jg
mov
dec
dec
lcall
popf
es
mov
leave
mov
mov
sbb
in
pop
xchg
jbe
fadd
push
stc
pop
fbstp
loopne
jl
or
dec
cld
jbe
mov
ljmp
mov
or
mov
jbe
sbb
repnz
femms
ja
cwtl
or
leave
insb
or
pusha
test
jge
movb
cld
dec
push
sti
xchg
call
andb
mov
mov
xchg
pop
mov
fwait
jnp
lahf
mov
mov
adc
and
and
push
andb
std
sbb
sub
sub
adc
xchg
xor
jns
in
mov
ss
cmp
mov
mov
repz
jnp
ret
insb
xlat
adc
fisttpll
jg
push
jmp
cmpb
mov
dec
mov
or
and
out
divl
jle
lret
pop
js
dec
and
or
mov
jl
addr16
mov
inc
mov
pop
xchg
cmpsl
enter
push
iret
xchg
and
mov
fcomps
outsb
scas
push
bnd
movsl
jo
sub
jge
pushf
imul
cli
mov
pop
dec
push
add
in
adc
subl
lcall
pop
outsb
bound
rorb
dec
loop
lret
inc
inc
inc
icebp
cmp
adc
mov
ljmp
out
lods
dec
jns
mov
stos
pop
enter
fs
cmp
push
outsl
dec
push
xchg
cmp
lar
test
sub
fimuls
adc
sbb
movsb
jb
sbb
mov
pop
and
lret
addr16
pop
jecxz
call
outsb
aad
mov
mov
or
adc
mov
mov
sbb
dec
cmpsb
sub
sbb
xchg
xchg
into
inc
jmp
clc
or
icebp
loop
cmpsb
lods
pusha
xchg
push
pop
jnp
jnp
hlt
stos
or
mov
xchg
aam
and
cmpb
shll
repz
les
mov
mov
movsb
sub
bound
cmp
jecxz
add
cld
jmp
addr16
les
shr
push
jle
cmpsb
add
sub
push
dec
cli
pop
mov
addb
xor
movsb
in
ret
out
dec
add
add
or
dec
cmpsb
test
sbb
mov
fisubrl
fistps
push
xor
adc
sub
sub
inc
nop
das
gs
mov
stc
push
enter
jb
int
inc
sbb
sbb
lcall
mov
lahf
dec
addr16
and
dec
outsb
in
loope
and
rcr
lahf
sub
pop
and
ret
fdivr
jae
iret
adc
mull
push
cmpsb
cmp
xor
addb
and
jle
mov
lods
pop
sub
cmc
arpl
cmpsl
ljmp
cmp
ljmp
cmpsb
iret
push
pop
aas
das
ss
mov
arpl
dec
push
ja
add
or
or
dec
jno
dec
popa
lret
mov
push
and
xchg
mov
es
dec
insb
dec
dec
test
fs
imul
sub
mov
scas
aaa
and
lods
leave
and
or
cmp
cmpb
cmp
ljmpw
incw
bound
xchg
sbb
push
xchg
mov
cmp
icebp
imul
cmp
and
pop
sarl
mov
jmp
xor
incb
jl
nop
dec
sti
inc
or
into
mov
xchg
movd
lcall
test
in
pop
sub
mov
dec
fistpl
icebp
cmp
mov
rolb
divl
pop
cmp
data16
cmp
pop
push
je
subb
push
or
out
push
push
jns
mov
add
and
lret
adcb
xchg
mov
push
adc
add
jns
mov
decl
inc
in
adc
xchg
xchg
rcll
and
aas
out
insb
adc
jns
dec
xchg
out
jmp
fdiv
xor
or
addl
add
cwtl
jecxz
lret
std
sub
push
repnz
stos
movsl
int3
or
mov
mov
dec
icebp
pop
iret
fcmovu
push
nop
lret
stos
fsubr
jl
imul
cltd
enter
imul
push
and
ljmp
mov
cmpb
enter
jno
into
mov
mov
jmp
ret
sub
jne
imul
dec
xchg
rcrb
mov
add
outsb
in
push
jmp
aad
pusha
frstor
fmull
mov
mov
and
das
test
mov
les
shl
imul
imul
mov
aas
stos
cmp
mov
pusha
sub
outsl
enter
iret
sbb
lds
leave
xor
sub
cli
mov
lret
je
mov
mov
push
mov
sub
insl
call
out
and
cmp
adc
and
js
loope
sti
repz
ss
push
or
insl
movsl
std
add
jg
cltd
add
adc
adc
or
push
mov
pop
sbb
orb
mov
xlat
cmp
dec
repnz
enter
lea
mov
mov
pop
call
mov
xor
imul
lods
clc
in
push
and
lea
mov
repz
pcmpeqd
cltd
lods
test
pop
xchg
add
xor
dec
jo
jge
mov
in
sbb
test
and
outsl
add
imul
outsb
jle
mov
xchg
loope
cmp
add
push
dec
aad
mov
je
pop
sbb
and
xor
lods
shlb
pop
push
xchg
popf
loope
mov
push
inc
add
jno
dec
pop
or
mov
mov
es
inc
addr16
push
in
push
ss
addr16
pop
mov
mov
jg
mov
sbb
mov
arpl
inc
pushf
push
fwait
repz
mov
movsl
inc
xor
out
mov
in
and
subl
lret
dec
lret
jl
mov
sub
sti
les
sub
repz
je
mov
movsl
fbld
mov
mov
jecxz
mov
aad
pop
aaa
lds
pushf
xchg
inc
jae
fldcw
mov
lcall
and
xlat
adc
pop
cld
int3
out
and
out
pop
mov
sub
cld
outsl
xchg
inc
push
enter
sub
loop
es
imull
das
inc
push
inc
repz
ficomps
pusha
xor
ret
mov
xor
lea
gs
ss
in
outsb
cmp
push
pop
decb
push
or
and
xchg
push
int3
pop
das
jno
fwait
rcrb
cmp
mov
jmp
sbb
test
jae
sbb
pop
pop
out
cmp
xor
cltd
xchg
les
jp
nop
mov
mov
jo
or
test
scas
cltd
inc
jb
sbb
icebp
int
loop
adc
xchg
arpl
or
mov
mov
imul
xlat
cwtl
shrl
fwait
popl
in
cli
or
out
cmc
fidivs
popl
mov
test
push
or
stc
push
and
aad
scas
xchg
or
test
les
mov
push
jmp
and
ljmp
cmpl
sub
xchg
jbe
gs
sub
jo
push
rol
out
adc
adc
flds
jae
inc
push
pop
cmpsl
ret
cmpsl
sbb
pop
xor
and
mov
or
jae
or
sub
add
aad
sub
repnz
push
or
pop
dec
mov
out
shl
adc
test
ja
fsubs
aam
lahf
call
lret
inc
repz
add
stos
mov
into
jnp
push
jnp
leave
adcl
xchg
and
and
ljmp
aas
sub
pusha
add
enter
push
add
jno
or
pop
iret
jg
xchg
inc
clc
negb
movd
mov
cli
push
or
or
sbb
mov
mov
cmc
lret
popf
lods
inc
and
jns
pop
dec
aam
mov
xor
xchg
xchg
pop
dec
cmp
cmp
iret
adc
icebp
lcall
mov
add
jmp
lret
jg
rcrl
bound
sbb
pop
xor
jge
fcmovnb
aas
in
jbe
test
xchg
xchg
push
inc
pop
cmp
mov
xlat
lcall
and
shlb
sbb
cwtl
in
pop
aas
pushf
movzbl
dec
std
sub
lock
out
jmp
adcb
ljmp
cmp
and
fcmovu
call
mov
icebp
pop
out
xchg
outsb
mov
jecxz
popl
xchg
test
or
mov
inc
pushf
inc
das
or
push
popf
sub
pandn
push
rolb
push
xchg
or
xor
cmc
mov
inc
in
xor
jb
or
stos
mov
mov
xchg
mov
xchg
adc
lods
lcall
insb
pop
xchg
sbb
mov
jnp
inc
or
dec
adc
andb
mov
iret
dec
hlt
sub
sahf
mov
addr16
fcoml
stos
lock
out
jo
les
xchg
sub
pop
lods
inc
rcl
mov
rcll
push
push
mov
dec
mov
xchg
jne
popa
and
xor
cmp
pop
icebp
or
or
outsl
xor
dec
sbb
popf
shlb
lahf
jmp
rcrl
data16
popa
mov
dec
jo
xlat
idiv
push
ret
adc
loop
pop
lahf
pushl
push
and
sarl
ret
cmpsb
cmp
dec
pushf
jb
pusha
mov
pop
fwait
inc
stos
test
inc
mov
int
sub
push
jle
notb
std
imul
cmp
mov
rcll
ljmp
adc
dec
pop
push
inc
mov
in
mov
inc
mov
ljmp
cmp
push
imul
int
mov
test
cwtl
mov
adc
inc
jmp
movsl
push
stos
push
addr16
cmpsl
xchg
movsl
sahf
jbe
pop
xor
vmovss
adc
and
adc
xor
test
inc
push
test
sub
pop
pop
addr16
popf
push
repz
pop
loope
sub
pop
icebp
shll
stos
insl
push
jb
rorl
push
push
push
adc
dec
or
cmpb
dec
add
out
in
ljmp
stc
xchg
inc
adc
clc
test
mov
in
sbb
scas
stos
cmpsb
dec
aad
or
loope
fs
pop
lret
aaa
int3
lock
mov
das
cmp
xchg
loop
sub
mov
cmp
cmp
xor
inc
xrelease
sbb
push
and
jo
mov
mov
inc
jge
xorl
ljmp
and
lahf
adc
adc
mov
jno
enter
enter
int
xor
pop
dec
xor
mov
std
in
lret
loope
cmp
pushf
in
mov
dec
mov
lds
push
push
jmp
test
xchg
call
mov
and
dec
add
sbb
repnz
nop
and
outsl
sti
stos
std
adcb
sbb
lds
bound
pop
pop
cmpsb
sbb
scas
and
imul
fdivs
pop
cmp
pop
neg
cmp
cwtl
outsl
mov
cltd
into
xor
adc
aam
pop
fistpl
fisubrl
cld
add
dec
mov
mov
test
dec
or
int
fwait
xor
sub
roll
filds
pop
mov
aad
sbbb
stc
data16
push
or
jl
cmp
and
mov
cmp
xlat
mov
jg
xor
or
lods
xchg
or
cld
add
cmpsb
movsl
pop
add
push
cli
sbb
insl
lods
add
fimull
xchg
loope
mov
mov
out
and
dec
adc
cmp
lret
jmp
or
adc
jne
loope
aad
and
and
mov
aad
adc
ljmp
cld
fwait
hlt
xchg
mov
xchg
add
icebp
xchg
xor
enter
mov
mov
or
mov
clc
ret
sbb
mov
mov
loope
and
cmp
ja
inc
or
jle
xor
push
into
outsl
inc
outsl
xchg
xor
sub
loop
lret
and
dec
mov
out
ja
mov
xchg
mov
pop
loope
pop
test
adc
cmc
arpl
imul
loop
clc
out
adc
inc
cs
and
dec
jg
xchg
test
pop
hlt
inc
xchg
loopne
xchg
add
frstor
and
push
notb
adc
loope
bsf
scas
add
inc
loope
fiaddl
iret
daa
in
sti
pop
add
movsl
xor
inc
cld
push
bnd
stos
pop
xchg
xor
dec
in
stos
test
in
pop
push
test
adc
mov
mov
adc
push
add
rorl
dec
jl
cmp
in
sbb
sbb
fidivl
jno
mov
push
mov
incb
or
nop
lds
ljmp
sar
popf
push
sub
add
outsl
dec
xchg
push
rcll
lret
mov
adc
movsb
adc
inc
pop
fldl
dec
cwtl
je
ss
imul
xchg
push
aaa
mov
jge
or
inc
xchg
pop
shll
adc
mov
push
loope
jae
insl
mov
and
inc
cmp
fbld
lock
or
rcrb
insl
scas
xchg
sbb
out
mov
or
lods
mov
jne
pushf
out
lret
and
scas
mov
cmp
int3
shr
add
out
lret
je
rolb
inc
popf
and
outsb
stos
out
push
lcall
mov
fimuls
dec
insb
xor
sub
and
add
xor
sbb
dec
movsb
xchg
mov
mov
pop
sub
aad
lds
mov
push
and
dec
dec
mov
and
dec
clc
mov
stos
stc
je
sbb
ret
stos
jns
mov
cmp
cmpb
clc
add
popa
jmp
test
or
pusha
cltd
mov
sbb
scas
sbbl
out
insb
lcall
cmpl
int3
jno
aam
enter
or
inc
pop
mov
push
dec
mov
cmp
push
out
sbb
jo
cmpsl
inc
in
inc
add
movsl
push
mov
push
sbb
mov
cmp
leavew
pusha
orb
and
xor
and
adc
cmp
cmpl
test
mov
mov
mov
xchg
add
inc
sti
add
mov
dec
sub
cli
push
out
jns
jb
cld
mov
sub
clc
xchg
mov
add
jp
xchg
pop
loope
jg
fldcw
or
neg
insb
mov
xchg
push
fidivrs
pop
lret
dec
leave
jae
dec
fdivrl
inc
mov
scas
xor
xchg
fs
push
xchg
or
mov
jp
sub
repz
repnz
sub
sahf
loope
popf
mov
sub
and
push
test
mov
outsb
mov
addl
shrb
pop
cmc
mov
and
xchg
push
mov
cltd
mov
out
insb
dec
add
pop
lods
xchg
repz
adc
dec
addr16
pusha
cmp
hlt
insl
lock
inc
jnp
loope
and
add
xor
mov
lahf
sub
sbb
inc
adc
test
loopne
leave
fwait
or
lock
sub
fs
xor
dec
fsubr
dec
or
mov
sbb
mov
jnp
inc
fisttpl
iret
xchg
sbb
out
adc
sahf
aad
ja
and
loopw
insl
fldt
sub
dec
std
inc
inc
pop
sbb
jno
notb
dec
aaa
fs
rorb
ret
xchg
lds
push
inc
jae
test
fcoml
dec
stos
mov
xchg
or
pop
daa
cltd
sbb
and
mov
stos
mov
decl
pop
xchg
push
add
neg
mov
test
jne
sahf
xchg
insb
xchg
sub
xorl
outsl
xchg
lds
lock
mov
dec
in
hlt
imul
hlt
mov
sbb
repnz
inc
mov
imul
mov
mov
mov
sarl
dec
jbe
mov
imul
sbb
push
xor
test
cmp
sub
add
shrb
sbb
clc
scas
sub
daa
and
sbb
sbb
pop
sti
shlb
xchg
loop
mov
outsb
xor
popf
inc
cmp
push
or
movsl
fwait
jge
cmp
push
push
test
cmc
push
sub
push
adc
std
and
inc
or
adc
xchg
jb
je
pop
aaa
nop
mov
shl
adc
adc
inc
inc
rcrl
sbb
jb
jns
jo
sub
out
xlat
fisubl
push
outsb
adc
maskmovq
imull
cltd
fisubrs
dec
xor
add
iret
aam
mov
sbb
mov
mov
xchg
cmpsl
incb
popa
jp
test
sbb
xchg
jg
outsb
cli
add
stc
and
push
mov
adc
bound
das
mov
lea
pop
imul
mov
xchg
mov
faddp
sub
xor
sbb
cmc
sbb
fpatan
push
jbe
inc
push
push
loope
pop
fcmovbe
cltd
xor
repnz
out
scas
dec
and
jb
lcall
stos
mov
adc
pop
xchg
cmp
and
pop
adc
mov
lcall
sahf
and
dec
dec
scas
adc
sub
out
add
cmp
jge
mov
mov
inc
notl
inc
shll
lds
adc
pop
jecxz
sub
aam
out
jne
nop
inc
mov
pop
mov
ret
and
out
jmp
repnz
pop
xor
adcb
shlb
push
lret
cmpsl
testb
mov
push
or
orl
push
add
pop
pop
inc
dec
push
xor
jg
cmp
jecxz
lods
imul
out
add
notl
es
test
mov
xor
xchg
and
jns
cmc
add
testl
cmp
mov
pop
test
mov
movsl
jo
cmp
jmp
addr16
mov
pop
cmp
sti
xchg
decb
lea
sbb
pop
pop
cli
mov
sbb
test
aaa
adc
std
mov
fdivrs
test
stos
test
adc
fs
jmp
inc
pop
lds
inc
push
hlt
cmc
je
mov
pop
lods
inc
adc
jns
shr
xchg
les
bnd
cmc
sbb
cs
push
stos
mov
fcmovnb
bound
xlat
roll
rcll
mov
pusha
mov
cmp
packsswb
dec
scas
push
jg
faddl
inc
loopne
mov
ret
out
xor
roll
add
ret
add
repnz
ret
add
imul
insb
pop
rcrb
or
pop
add
and
jmp
in
adc
pusha
out
mov
pusha
mov
stos
mov
arpl
or
cwtl
push
or
push
pop
pop
xlat
lret
rcl
mov
adc
hlt
popa
xchg
loop
xor
lcall
ret
out
ret
mov
xor
xor
aad
jno
into
es
arpl
fldt
repnz
sbb
cld
pushf
mov
shrl
and
iret
fwait
push
fwait
lret
mul
je
lods
pop
jo
clc
in
dec
mov
jno
repz
fwait
cs
sbb
jl
insl
imul
or
cld
mov
xacquire
cs
mov
test
cmp
data16
lret
mov
mov
push
push
addl
push
cmpsl
xchg
adc
lods
and
xchg
cwtl
out
cmp
ds
cmc
pop
push
or
push
mov
sub
insl
pop
mov
test
add
test
mov
mov
cltd
adc
imul
push
push
cmpb
adcb
mov
xchg
imul
mov
stos
jmp
roll
and
enter
xor
dec
fildll
cmpsb
and
jl
es
add
je
adc
cmp
nop
and
jnp
movsb
jo
shll
lods
dec
sbb
mov
cli
pushf
mov
push
mov
xor
mov
jg
mov
movsl
je
repz
xchg
out
add
ss
push
loope
jl
adc
mov
dec
imul
sbb
push
or
pop
and
adc
mov
lds
in
sbb
scas
add
lods
pop
inc
pop
inc
out
addr16
xor
mov
mov
cs
aad
jne
mul
enter
inc
aam
cmpl
jp
mov
sarb
pop
sbb
sbb
std
mov
scas
pop
mov
rorb
jae
push
fcompl
pop
sub
arpl
or
mov
push
pop
cmp
cmc
sti
fcomp
repz
inc
dec
iret
push
and
push
mov
dec
pop
cmp
dec
and
fcoml
add
les
scas
push
fbstp
sbb
mov
cwtl
sbb
gs
mov
mov
inc
js
testb
hlt
dec
jae
inc
add
sbb
cmp
fs
lods
leave
and
xchg
cs
int
cmp
push
and
pop
sahf
and
push
sbbl
outsl
shl
cli
cmp
jmp
xor
pushf
jnp
je
enter
pop
fsubs
xchg
and
fnstsw
push
leave
shrl
fwait
jp
bound
test
ror
sub
jbe
jo
mov
pop
and
add
mov
and
shll
cmp
subl
in
push
jl
and
mov
mov
and
push
fnsave
lds
into
mov
mov
aaa
push
popa
sarb
mov
ret
inc
jnp
cmp
stc
and
dec
ja
inc
movsl
and
mov
leave
shrb
cltd
push
popa
addr16
mov
addb
shl
mov
mov
ret
pop
or
mov
jno
ljmp
jl
repz
test
imul
mov
ja
fisttps
dec
push
sbb
mov
cmp
das
mov
ljmp
mov
movsb
fstpt
sbb
and
test
nop
neg
and
insl
sub
adc
cmp
pop
cs
inc
mov
out
loope
sahf
add
out
inc
mov
test
push
dec
test
jl
je
jns
inc
inc
xlat
sbb
ret
stc
pushf
sbb
dec
xchg
hlt
enter
or
shlb
and
fldt
stc
cmp
loopne
outsl
icebp
in
mov
js
mov
mov
js
lods
jno
push
ja
inc
ja
lahf
adc
pop
dec
insl
cmpl
dec
mov
jl
pop
or
cmp
and
les
pop
add
jno
cmpsl
push
dec
popa
jg
movsl
arpl
inc
test
lock
sbb
xor
dec
cwtl
xor
mov
jno
add
push
jmp
ss
cmp
testl
dec
inc
cmp
and
and
pusha
sub
and
dec
jmp
ret
aad
jb
stos
cmp
mov
rcl
pop
jno
jmp
hlt
xchg
jae
fidivl
jg
les
push
xlat
rcl
and
mov
scas
cmp
push
jae
dec
xchg
lret
cmp
out
call
femms
xchg
shll
jle
jns
pop
xor
xor
jecxz
sub
push
adc
leave
out
xchg
dec
jne
push
and
jecxz
pop
push
sti
xchg
ja
jb
xchg
lods
xor
mull
sbb
pushf
ss
scas
icebp
pop
enter
or
lods
pop
into
sbb
pop
mov
inc
push
lret
sbbl
jae
or
fisubrl
inc
addr16
repnz
jmp
pop
push
lods
stos
lock
add
out
shrl
lret
push
mov
cvtdq2ps
in
push
stos
les
inc
or
cmpsl
ja
imul
stos
lcall
adc
popa
cmp
xor
and
aam
mov
fcmovnbe
repnz
loop
js
hlt
std
inc
fistpll
ds
lods
inc
jne
test
js
jl
mov
dec
mov
out
dec
aas
mov
das
mov
mov
and
xor
ljmp
repz
icebp
and
pop
push
icebp
mov
inc
stos
push
push
insb
cmp
jl
cmc
inc
sahf
push
jnp
jecxz
xchg
lret
int3
and
les
lcall
jl
lcall
punpckhwd
pop
test
or
push
or
inc
pop
fldl
cmp
jae
mov
out
mov
inc
aam
xchg
jge
xchg
inc
push
jl
sub
aaa
dec
or
and
jbe
push
cmp
mov
sbb
mov
imul
fistpl
outsl
nop
ljmp
lods
cmp
jbe
mov
and
divl
cmp
pop
les
aam
and
jle
rcl
lods
jl
add
adc
dec
xor
xor
mov
mov
mov
ret
sbb
mov
or
fwait
mov
in
add
pop
sbb
push
in
push
xor
mov
scas
aad
fdiv
mov
dec
pop
jmp
and
pusha
jb
xorb
add
sbb
out
inc
lods
mov
fiadds
or
or
add
add
jp
leave
out
addb
mov
dec
inc
xor
pop
sub
fisubl
xor
pop
adc
mov
lods
xchg
push
insl
xchg
fnstsw
xchg
inc
and
mov
dec
pop
pop
in
or
push
sbb
push
pop
jmp
lods
adc
mov
js
rcll
lods
pop
ja
cltd
mov
stc
cmp
js
loop
dec
pop
mov
mov
loope
dec
and
cmp
cmp
out
add
inc
fdivrs
cmp
add
jle
or
jno
outsl
shl
dec
jnp
mov
sbb
sub
or
jl
fisttpll
inc
lret
les
gs
mov
dec
enter
jbe
iret
mov
mov
fidivrs
xchg
or
popl
in
mov
ja
inc
pop
cltd
les
mov
call
stos
bound
jne
repnz
aas
jb
xor
in
call
xchg
push
mul
cltd
sub
adc
xchg
rclb
jmp
arpl
shlb
or
push
mov
lret
xchg
push
movsb
popa
xchg
test
pop
push
mov
mov
int3
pop
call
cmp
stc
sarb
cmpsl
cmpsl
ss
adc
dec
cmp
mul
xor
mov
repnz
inc
imul
icebp
cmpsl
xchg
imul
jge
clc
hlt
cmp
or
sbb
add
push
inc
add
testb
movsl
arpl
and
insl
int
inc
sbb
pop
in
sbb
mov
scas
rcr
add
fwait
mov
lcall
sbb
sbb
cmpsb
xor
jmp
mov
add
call
cld
mov
inc
mov
aam
xlat
arpl
leave
clc
into
addb
push
sti
jns,pt
add
ficomps
insl
add
xchg
mov
test
addr16
sbb
dec
inc
push
into
in
sbb
inc
iret
mov
push
cmc
or
loope
cmp
fstpl
push
adc
repnz
or
movsb
dec
insl
jle
xchg
mov
mov
scas
out
sub
inc
pusha
or
mov
push
call
add
bound
cltd
push
cs
or
jns
add
loopne
pop
mov
inc
js
es
out
js
test
jmp
sbb
loopne
popf
int3
sub
mov
push
add
popf
push
test
arpl
mov
lcall
dec
cmp
daa
scas
je
adc
movl
pop
ds
cmp
mov
mov
ljmp
and
outsl
or
sbb
mov
scas
ret
shld
push
xor
xchg
nop
push
iret
je
out
add
or
cs
aaa
jp
imul
addr16
pop
sub
mov
mov
and
xor
jp
cmp
mov
xchg
cmp
in
orb
mov
repnz
mov
mov
and
dec
sub
fcomps
lret
sbb
pop
or
out
cmp
sub
mov
loope
popf
lock
ja
repz
fcomi
cmp
inc
pushf
push
mov
repnz
test
adc
push
inc
enter
pop
push
movsb
pop
xchg
dec
popf
cmc
pop
mov
test
in
call
dec
xchg
lret
sar
and
mov
ss
imul
cwtl
enter
adc
cmpsl
sarb
das
std
mov
dec
ret
inc
daa
imul
movsl
jg
xchg
mov
int3
jns
push
xor
test
fsubp
iret
sbb
push
imul
pop
dec
or
movl
ja
dec
cmp
pop
jne
test
xor
push
mull
sub
rclb
ljmp
mov
out
out
shll
mov
xor
xchg
stc
dec
sbbl
cmp
push
mul
mov
lods
mov
and
dec
das
sub
enter
jo
insl
xor
aam
mov
inc
pushf
jns
xchg
ljmp
hlt
cltd
push
mov
pop
dec
in
outsb
pop
std
dec
je
mov
movsb
sub
cmp
fstpt
dec
fisttps
ret
out
sar
clc
lock
lods
push
insl
movsb
xor
arpl
in
add
mov
inc
inc
ljmp
inc
out
dec
enter
push
sub
sbb
push
ja
pop
inc
test
in
push
lods
fdivs
xchg
outsb
dec
cmpl
mov
test
adc
orb
xchg
xor
dec
jg
loopne
cmp
push
cmp
mov
sub
subl
jo
cmp
cmp
enter
xchg
mov
push
sbb
out
shrl
movsb
mov
mov
outsb
mov
es
lock
sbb
xchg
sub
cmp
cmp
aas
sbb
sti
xor
jns
mov
sub
and
inc
stc
or
xchg
lods
pop
jbe
out
cmp
and
ret
jg
adc
or
jge
out
add
pop
in
mov
cmp
cmp
scas
mov
bound
sbb
bound
ljmp
dec
push
dec
lea
cli
mov
or
mov
cmp
inc
roll
mov
xorl
sub
and
push
push
ficoms
stos
xor
jp
pop
push
sahf
mov
imul
xor
or
scas
adc
pop
daa
add
inc
out
sub
jbe
fs
mov
and
jnp
es
jle
jmp
scas
pop
and
adc
ret
cmp
adc
cld
movsb
mov
or
js
xchg
pop
sub
inc
popf
cld
ja
testl
inc
addb
jl
repz
push
insl
repz
push
xorl
leave
jno
outsl
inc
incb
in
or
rclb
daa
mov
testb
test
rcrb
dec
inc
ss
pop
js
orb
ds
dec
je
jg
jge
xor
jo
xor
lods
push
xchg
imul
insl
sbb
mov
sbb
in
addr16
and
adc
jae
sbbl
adc
sub
lock
aaa
pop
jl
fmul
push
in
ja
add
leave
leave
and
pop
ret
and
pusha
mov
jno,pn
mov
in
dec
data16
xchg
sub
push
xorl
adc
test
jne
dec
mov
sbb
sbb
sbb
sti
xor
data16
repz
or
pop
mov
xchg
cmp
lock
ret
adc
and
pop
int
mov
xor
mov
or
adc
and
in
xchg
scas
daa
arpl
ss
inc
into
pop
repz
and
fxch
insb
add
es
test
lahf
xor
cmp
sbb
lcall
mov
hlt
imul
xor
test
sbb
jge
mov
pushf
jb
xlat
pop
ja
cmpsb
jb
and
mov
inc
push
test
in
mov
inc
movb
jae
push
adc
shll
push
icebp
loop
adc
in
pop
shll
pop
jl
fbld
pop
mov
arpl
or
iret
iret
out
test
pop
xchg
lock
sub
sbb
out
jno
dec
fistps
in
sub
xchg
ss
mov
jo
ficompl
pop
movsl
push
sahf
sbb
leave
mov
push
xor
loopne
pop
rolb
ret
or
stc
sbb
jmp
xor
fs
adc
xor
xchg
pop
mov
sbb
xchg
pop
mov
shl
sbb
stc
push
and
mov
or
add
testb
pop
sbb
cmpsl
mov
sahf
fmul
stos
or
loopne
loop
push
push
rcrl
jmp
inc
cmpsl
adc
sarl
push
andl
pop
cs
adc
out
es
add
pop
push
dec
aam
inc
add
and
movsl
xor
fldenv
jge
pop
scas
inc
jae
jns
push
addb
add
enter
arpl
inc
push
test
scas
hlt
lea
mov
lret
mov
and
rsm
cmp
cltd
xchg
jmp
sahf
cwtl
cld
xlat
out
cli
adc
ds
cld
jb
cmp
cmp
lahf
dec
data16
or
nop
adcb
cmp
mov
es
jmp
mov
and
pushf
daa
les
dec
jne
cmpb
inc
fldl
push
mov
inc
ficomps
jle
pop
ret
and
enter
hlt
fwait
push
adc
xlat
nop
jmp
sub
dec
xchg
mov
icebp
inc
mov
push
xchg
mov
rcr
scas
xchg
jmp
mov
xchg
adc
adc
lods
out
cs
fisubl
mov
jbe
pop
push
addr16
cmp
and
stos
iret
das
dec
pop
out
sbb
adc
sub
xlat
xchg
jl
dec
pop
fs
xchg
lahf
fcoms
add
lret
jnp
sub
arpl
adc
jb
addl
into
repz
and
and
bound
jns
aam
lods
out
xchg
in
cmpsb
aam
insl
dec
aas
icebp
or
in
jo
fldl
aas
fnsave
icebp
sub
jno
jmp
jno
pop
daa
scas
fucomi
or
pop
mov
cltd
lods
ror
loopne
es
inc
rolb
lahf
jg
mov
add
stos
sahf
inc
xchg
pushf
pop
in
data16
lea
lcall
mov
mov
dec
sub
movsb
cwtl
adc
pusha
pop
in
inc
pop
cmpsl
repz
push
jg
les
mov
adc
fs
or
sti
inc
lret
repnz
cmp
je
or
cmpsl
test
in
xlat
mov
in
adc
xor
cmp
add
mov
call
and
jl
jne
cmp
icebp
rclb
mov
nop
pop
fwait
dec
sub
xchg
stc
loopne
out
mov
inc
xor
xchg
icebp
xchg
sarb
hlt
data16
sbb
mov
popf
cmp
jb
and
popa
mov
add
xchg
mov
mov
jg
daa
or
std
or
fsub
add
int3
or
xchg
inc
cwtl
aaa
mov
pop
inc
sbb
jb
mov
lret
sub
mov
dec
hlt
mov
and
jb
scas
sbb
pop
and
int
jnp
mov
outsb
mov
jne
jl
enter
or
icebp
sub
flds
iret
adc
xorb
xchg
push
sbb
jmp
jns
xchg
xchg
imul
xchg
inc
dec
cmp
inc
pop
imul
in
hlt
xor
mov
lret
jmp
add
cltd
pop
add
dec
jecxz
sbb
xchg
scas
push
arpl
mov
shll
push
andb
inc
addl
fimuls
dec
sahf
xchg
and
adc
js
addb
inc
loope
js
outsb
mov
push
jp
aaa
iret
addl
or
lahf
icebp
imul
dec
push
leave
stc
xchg
ret
js
or
mov
shlb
out
cmp
loop
ja
fwait
pop
arpl
hlt
sub
xor
es
movsl
repz
pop
call
adc
ss
bound
aam
enter
adc
or
int
bound
popf
mov
push
mov
scas
push
es
or
mov
imulb
fimuls
loop
sub
das
pop
mov
insl
cs
add
jge
repz
mov
lds
cmp
adc
in
mov
stos
mov
mov
xor
xor
mov
clc
add
dec
fwait
ret
dec
pop
shlb
adc
sub
dec
sbb
pop
push
pop
jle
cmp
aam
add
movsl
dec
dec
cs
push
outsl
loopne
jg
in
inc
mov
push
sbb
daa
shll
repnz
cmpsl
test
in
xor
repnz
shr
es
sub
clc
out
lahf
fcmovnbe
loope
loopne
imul
loop
mov
push
adc
lods
pop
filds
aaa
push
aas
sahf
xchg
mov
icebp
daa
adc
mov
sbb
xchg
stc
inc
loop,pt
inc
repnz
inc
rcl
movsb
sub
leave
jno
sahf
aas
out
out
mov
ss
and
jg
sahf
sub
xchg
pushf
and
pop
shr
inc
lret
xor
cmp
cvtps2pi
pop
idivl
stos
sub
mov
mov
add
adc
lret
loopne
and
mov
and
shl
aam
shr
push
mov
test
bound
movsb
out
insb
pop
or
les
adc
lcall
mov
test
cmp
xchg
mov
jp
mov
ret
addl
ljmp
xchg
xchg
nop
lock
scas
test
pop
add
xor
jo
mov
std
jecxz
adc
int3
enter
iret
popf
mov
es
mov
sbbb
pop
lods
xor
xchg
aas
clc
and
dec
rcll
shrl
int
call
fadd
aaa
cmp
sbb
adc
aad
sbb
jb
push
add
repz
xor
lods
incl
inc
jg
mov
add
loope
push
imul
jecxz
jl
push
ret
mov
push
fcmovb
sbb
add
les
rcll
jbe
inc
int3
and
aad
std
mov
add
ret
xor
cmp
std
sti
adc
cmpsb
sub
cmp
pop
dec
cmp
or
cmp
pusha
mov
mov
test
into
ss
xchg
in
daa
fwait
adc
outsl
cmp
mov
jl
repz
xor
sti
jecxz
cmp
dec
pop
mov
aam
enter
fwait
xchg
adc
sbb
popf
cmp
xchg
and
cmpsl
call
lods
add
nop
or
dec
inc
inc
xchg
pop
push
mov
in
xchg
mov
loope
in
add
sti
fidivrs
sub
clc
cld
dec
aaa
add
mov
jmp
adc
xchg
pop
pop
adc
outsl
in
nop
das
push
lret
push
mov
stos
add
in
jbe
dec
jmp
div
rcrl
test
xchg
loopne
mov
pop
inc
xchg
add
lods
xor
popa
int3
ss
test
stc
dec
mov
jmp
pop
das
pushf
jae
pusha
aaa
dec
jbe
int
scas
les
pop
pop
xchg
mov
inc
pop
test
xchg
mov
rclb
aaa
bound
enter
test
call
inc
sarl
mov
repz
sub
insl
mov
testl
sahf
ja
es
push
sub
add
add
pop
jae
int3
push
icebp
jge
dec
out
lea
xchg
popa
pushf
out
movsb
mov
in
mov
mov
sbb
stc
push
and
jge
lds
decl
xchg
scas
fbld
lods
jge
into
sub
push
lds
xor
pushl
jmp
push
xchg
inc
scas
gs
mul
out
push
push
pop
sbb
adc
aas
xor
ss
lea
push
repz
add
adc
add
push
mov
jae
jecxz
lret
les
cmp
xor
dec
daa
je
push
dec
cmp
sbb
push
inc
jecxz
loop
sahf
xchg
rcrb
mov
and
cltd
xchg
add
mov
sub
imul
sub
insl
mov
push
call
xchg
leave
repnz
lds
cmpsl
out
inc
or
xlat
popf
mov
es
dec
addl
aas
mov
adc
xchg
pop
popf
out
add
ljmp
jb
popf
add
pop
arpl
das
adc
push
push
mov
inc
bound
mov
add
mov
fidivrs
add
out
adc
xchg
popf
pop
mov
push
xor
loop
pop
jbe
cmp
mov
shr
dec
scas
out
and
inc
shr
push
push
xor
jo
fcompl
dec
filds
jbe
xorb
xor
shlb
int
arpl
sub
cmp
ficompl
mov
and
lahf
xchg
mov
cmp
mov
loopne
inc
std
or
pop
jno
push
mov
push
adc
test
jle
std
sbb
lcall
mov
xor
out
and
arpl
imul
or
cs
clc
and
inc
add
or
inc
add
inc
push
arpl
xchg
and
rcl
jmp
jl
andb
or
jmp
mov
mov
imul
mov
adc
sbb
mov
dec
push
leave
add
stos
mull
test
mov
mov
ljmp
pop
cmp
sub
xchg
loope
cmp
mov
push
mov
insb
add
xchg
fistl
mov
rcrl
add
dec
aad
xchg
mov
aad
das
das
cmp
sbb
pop
ja
xor
lods
fwait
cmpsb
xchg
loop
jbe
jne
fcoms
and
lea
xchg
mov
and
push
movsb
stos
inc
repz
lcall
jb
pop
jbe
jmp
pop
mov
adc
adc
pop
mov
sub
outsb
js
jecxz
ljmp
int3
imul
push
push
imul
test
iret
loop,pn
pop
mov
xchg
addr16
daa
mov
inc
pop
sbbl
pop
push
pop
sti
and
aam
inc
xchg
push
sub
out
sub
out
adc
xchg
clc
aas
rclb
jmp
inc
xor
add
and
loope
push
xor
das
cld
inc
mov
mov
pop
jmp
cmp
cmp
fldl
mov
outsl
mov
xchg
mov
push
sti
and
cmp
test
mov
lcall
loope
add
add
lods
and
icebp
popf
pop
push
xchg
push
push
jmp
xor
aad
or
xor
xor
roll
aad
or
enter
roll
jg
aas
faddp
stos
or
mov
in
sub
aas
mov
pushf
sbb
insl
sub
adc
xchg
cs
cmpsb
pop
mov
insl
cwtl
pop
push
fdivl
push
ret
arpl
or
cld
arpl
mov
pop
jae
xlat
jb
daa
sahf
popa
aam
push
jnp
and
jb
js
outsb
and
cmp
je
ret
jecxz
jle
ss
sbb
xor
jno
jp
hlt
or
loop
and
out
adc
ss
add
jmp
das
rolb
sbb
or
mov
ret
imul
hlt
lods
jns
ja
mov
push
dec
add
pop
cmpsl
movsb
rcrl
lcall
clc
mov
cld
leave
mov
sub
cmp
ret
fists
cmp
pushf
or
sbb
jns
insb
enter
xor
test
cmp
jecxz
sar
adc
in
dec
das
es
and
gs
jmpw
pop
cld
xchg
aad
inc
cmp
lahf
test
mov
loop
xchg
pusha
aaa
fldcw
arpl
mov
arpl
cld
push
xlat
mov
insl
dec
mov
mov
popf
sahf
and
out
pop
stc
ret
push
push
dec
jo
cmp
aas
jae
xchg
imul
pop
nop
mov
inc
add
push
lahf
rorl
out
popa
mov
ds
imul
cwtl
mov
sbb
dec
repnz
or
out
popa
cs
mov
mov
mov
and
loopne
bound
mov
ficomps
pop
pop
pop
add
jo
aaa
inc
nop
iret
jb
jmp
push
inc
pop
mov
pop
mov
add
fidivs
imul
inc
xchg
popf
or
sub
dec
repz
mov
push
push
fstpl
dec
push
sub
pmuludq
rolb
dec
lahf
xor
fdivs
lahf
lock
lods
pop
lods
gs
lock
int3
pop
add
jmp
mov
push
mov
lahf
inc
ficompl
mov
scas
push
jne
cmp
mov
jne
jle
mov
sub
cmpsb
jge
push
hlt
push
pushf
push
push
xlat
lds
fidivrs
xor
ljmp
or
data16
or
loop
lods
call
leave
xchg
mov
xchg
push
xor
mov
shlb
test
stos
mov
cmp
out
cmp
add
ja
std
jg
cmp
or
inc
dec
insb
mov
cwtl
cld
ljmp
or
inc
pop
aas
sbb
outsb
int3
lea
stos
sub
daa
nop
es
jmp
sbb
adc
popf
pop
in
pop
nop
negl
pop
in
xor
jp
addr16
clc
xchg
mov
scas
inc
jmp
pop
xor
popf
scas
mov
dec
inc
add
xor
flds
flds
fmulp
shll
lods
in
aaa
test
fdivl
in
mov
aam
pop
repnz
iret
lods
push
xor
xor
jmp
adc
dec
push
push
fadds
ljmp
or
add
ja
nop
and
dec
jg
mov
inc
dec
nop
mov
or
xor
test
loop
out
pop
pop
and
push
mov
mov
xchg
xor
push
adc
pusha
ljmp
repnz
add
insb
inc
mov
inc
lods
lock
fcoml
lods
pop
out
add
addl
and
dec
js
stc
xor
and
lds
mov
aam
xor
pushf
or
jge
jnp
xchg
mov
jno
and
insl
pop
inc
dec
sbb
cltd
mov
xor
repnz
iret
ljmp
cmpb
sbb
inc
cli
shll
lods
mov
daa
xor
sti
subb
cltd
xor
in
inc
mov
test
xor
sbbb
scas
or
sub
in
cli
pop
test
aaa
addr16
pop
jbe
arpl
outsb
into
ret
push
mov
iret
push
in
cmp
daa
lds
mov
stos
xlat
loop
cmpsl
adc
data16
in
rorb
dec
add
push
imul
xchg
jg
sbb
ret
xor
cwtl
lds
and
mov
repnz
imul
inc
jae
jbe
xor
icebp
fwait
rcl
sub
dec
mov
orl
out
out
sub
nop
sbb
mov
int3
pop
dec
inc
xchg
in
push
jl
mov
lret
fistpll
adc
out
iret
mov
js
mov
mov
dec
ss
lea
jp
ja
push
sub
mov
mov
inc
dec
push
jb
enter
dec
mov
lret
mov
jle
and
fstpt
in
push
subb
pusha
filds
lret
mov
lock
sbb
xchg
mov
fcompl
cld
xchg
arpl
push
loope
orl
aas
mov
pop
in
sub
rorl
push
rcl
lret
or
dec
daa
push
addr16
fwait
cmp
cmpsl
push
mov
xor
lock
push
aad
fldcw
xor
lret
add
xlat
jmp
xorb
xchg
pop
int3
popa
ljmp
shll
jg
dec
xchg
xchg
or
mov
or
xor
test
lahf
pushf
inc
cmpsl
xchg
fiaddl
aam
push
pushf
mov
xchg
mov
add
adc
mov
inc
int3
aaa
icebp
sti
ret
repz
push
jle
cmp
mov
xchg
sbb
jmp
cmpsb
and
out
add
inc
gs
into
test
lahf
pop
xchg
in
dec
in
jge
scas
inc
push
test
notl
leave
push
rcrb
mov
cltd
scas
ss
ss
pop
out
rcrb
mov
pop
adc
mov
cmp
sub
lds
out
stos
pop
cmp
stc
pop
pop
sbb
pop
inc
insl
outsl
call
mov
je
lea
mov
push
bound
push
mov
out
dec
repz
mov
lods
repz
addr16
lds
pop
xchg
addr16
sahf
mov
mov
sbb
addb
pop
jg
fsubl
iret
loope
mov
ljmp
cmp
pop
or
cmp
cmpsl
setbe
lods
push
fwait
out
andb
add
rclb
mov
mov
and
es
cmp
stos
pop
jo
addl
cmp
js
adc
outsl
outsl
dec
xlat
sarb
in
in
and
hlt
hlt
mov
ret
dec
sub
xchg
scas
fisubrl
dec
xor
fists
add
and
lods
xchg
xchg
or
inc
adc
lods
ficompl
pop
shlb
adc
add
shlb
xor
sub
inc
sub
daa
fldt
testb
ret
pop
and
rcrb
js
shlb
xor
fdiv
pop
and
sbb
sub
leave
pop
cmc
inc
mov
push
cltd
in
jo
and
jne
cmp
scas
and
mov
mov
int
imul
pop
lcall
xchg
pushf
jmp
in
inc
jne
icebp
test
inc
nop
pop
xchg
jecxz
sbb
sbb
mov
cmp
sbb
outsl
loopne
cs
into
pop
sub
mov
sub
add
inc
es
mov
jg
loope
imul
mov
inc
pop
sti
scas
push
inc
xor
imul
cmp
fimull
iret
iret
sub
nop
and
mov
or
inc
lret
sub
ja
push
cmc
sbb
rcl
mov
mov
fdivp
add
add
and
outsl
or
cli
repnz
pop
repz
push
cli
stos
jmp
outsb
xchg
xchg
orl
in
sbb
add
in
popf
lds
cwtl
addr16
dec
sbb
xor
dec
push
xchg
outsb
mov
sub
fcomi
aas
lahf
sbb
dec
faddp
xchg
test
pop
jbe
jge
mov
sbb
leave
add
jecxz
rol
outsl
icebp
cmpsb
lahf
icebp
mov
test
test
daa
jmp
mov
repz
into
cmpsb
testb
test
cs
jno
les
sub
scas
push
lods
sbb
hlt
imul
adc
dec
divl
out
add
lcall
dec
in
std
pop
pusha
push
xchg
in
xchg
sahf
mov
dec
mov
leave
mov
dec
dec
cmp
into
int
test
out
lahf
mov
cwtl
mov
fiadds
mov
mov
jmp
dec
add
lods
pop
test
test
es
movsb
in
mov
or
jbe
popa
arpl
insb
clc
dec
inc
jno
lods
adc
outsb
mov
xchg
cmp
aas
mov
mov
scas
sbb
lcall
sahf
jno
jno
inc
lods
adc
dec
cld
and
adc
mov
ret
xchg
insb
loopne
xor
push
sub
aad
loopne
xor
xor
popf
mov
cmp
or
pop
sbb
fisttpll
add
xchg
mov
jmp
or
cmp
inc
push
repz
lret
push
cmpsl
div
mov
xchg
inc
mov
test
or
jmp
push
js
sub
jae
arpl
scas
out
test
pop
inc
add
arpl
dec
movsl
rep
add
repnz
adc
ja
jb
nop
push
or
lcall
xchg
pop
repnz
cltd
stc
repz
xchg
in
fcos
push
test
dec
and
loop
jl
jnp
rorl
pusha
daa
popf
je
and
jmp
mov
int3
push
xchg
lahf
adc
adc
push
and
add
add
dec
jle
and
popf
fldcw
adc
popa
ja
cli
fs
mov
mov
xor
push
leave
lock
addb
aaa
sbb
out
ljmp
js
lods
test
cmp
lret
add
mov
sahf
pusha
cmp
pop
mov
shll
clc
fsubrs
lret
in
adc
jns
sahf
sbb
jmp
inc
jbe
and
add
mov
fistps
push
cmp
insl
pop
cmpsl
and
pop
mov
dec
mov
sbb
inc
cmp
cmp
sub
sub
xor
xor
dec
mov
jns
push
sub
xor
movsb
xor
mov
mov
xor
jmp
push
in
dec
jecxz
mov
sub
cmp
adc
ss
movsb
mov
sarb
repnz
lret
mov
ljmp
cmp
sub
and
jo
test
add
in
repz
fdivl
in
lock
in
dec
test
mov
sti
dec
out
int3
push
out
xor
lea
push
mov
iret
jge
cmp
add
xchg
stc
jmp
push
cmpl
outsl
xchg
lea
push
push
push
iret
aas
pop
mov
shrl
push
mov
les
mov
jmp
xchg
dec
iret
sbb
insb
movsb
imul
mov
push
mov
inc
js
ret
inc
rcl
lret
in
pop
into
rorl
xor
lea
mov
adc
dec
inc
je
push
mov
test
inc
xor
out
ret
and
jp
or
xchg
mov
jo
xchg
roll
push
pop
cmpsl
xor
xor
outsl
sar
pusha
fistps
movsl
ret
pop
xchg
add
ds
lcall
lcall
imul
mov
fdivrs
jae
cmpsb
jecxz
sub
sub
pop
shrb
and
push
jg
adc
cli
jle
imulb
inc
sub
inc
add
mov
lahf
int
and
xchg
or
lahf
mov
ja
jecxz
sbb
in
pop
clc
in
loope
push
push
ds
push
lcall
pusha
jns
push
test
push
add
std
xchg
aaa
and
fcmovbe
gs
sbb
lcall
out
js
insl
rcl
mov
cmp
jp
mov
xor
mov
xor
fmuls
inc
rcrb
inc
pop
daa
into
dec
scas
ds
add
pop
pop
dec
aas
sbb
in
pop
ljmp
outsb
sub
sub
ds
jo
cmpsb
in
mov
test
and
jmp
ljmp
cmp
gs
jmp
mov
push
and
scas
mov
cltd
dec
cmp
push
mov
ret
enter
add
jmp
int
push
push
mov
lock
subl
jbe
xchg
das
mul
inc
dec
cli
call
xor
mov
stos
inc
fwait
mov
loop
out
jmp
dec
push
mov
clc
loopne
xor
jbe
lret
xchg
daa
addr16
dec
sbb
decb
repz
or
mov
pop
mov
lods
fcmovbe
cli
stos
divl
lods
pop
cmp
addl
add
sbb
sub
fidivs
outsl
in
mov
mov
xlat
jle
loop
lods
adc
ror
dec
fmull
pminsw
int
hlt
dec
lahf
mov
jbe
shl
dec
xchg
scas
fstps
test
je
es
sub
clc
pop
and
sti
pop
inc
pop
lret
lret
out
fs
subb
dec
mov
mov
mov
and
mov
xchg
loope,pn
adc
aam
inc
jmp
or
add
pop
xor
movsl
in
sub
fdivl
jbe
lret
mov
fnstsw
fildll
dec
add
mov
insl
jmp
scas
jb
push
xchg
subb
sub
in
jnp
push
test
xor
sahf
mov
outsl
mov
add
add
setbe
iret
repnz
fcoml
lret
dec
andl
or
and
and
in
cmpsb
sti
imul
inc
adc
outsb
mov
xor
jg
dec
jg
xor
jno
jmp
jne
cmp
mov
int3
inc
fldenv
add
pop
test
fisubrs
bnd
push
pop
movsl
mov
mov
push
nop
cmp
jb
cmpl
mov
mov
mov
cmpsb
inc
das
jp
dec
mov
sub
sbb
mov
pusha
mov
sbb
dec
fcmovnbe
mov
arpl
mov
mov
cmpsl
inc
stos
mov
or
rcll
jbe
ss
sahf
mov
or
cs
mov
and
sbb
sub
sub
sub
dec
mov
fwait
cltd
les
xor
or
mov
ja
dec
movsb
mov
and
xor
in
jb
loopne
sub
outsl
cmp
inc
jnp
mov
push
mov
lock
pop
roll
outsl
and
neg
sbb
or
jbe
call
mov
xchg
inc
mov
test
jle
out
xor
leave
nop
cwtl
sub
sub
push
push
fsubrl
jg
orl
xor
es
fstps
pop
pop
insb
or
mov
js
cmc
mov
ds
mov
xor
xchg
ljmp
jge
mov
and
pcmpgtw
mov
cmpsb
and
xchg
movl
mov
outsb
mov
and
outsb
lret
stos
lods
test
sbb
int
cld
jnp
popf
arpl
mov
push
pop
sub
jnp
out
jl
iret
xchg
inc
xor
jo
jge
or
pop
adc
cld
sub
lods
aad
in
movsl
mov
sub
push
leave
test
mov
adc
clc
dec
icebp
xorb
add
mov
adc
cmp
pop
sbb
sub
lahf
xchg
iret
pop
pop
fwait
cmpsl
or
sbb
nop
sub
xchg
stc
mov
cmpsb
xor
xor
inc
test
int3
pop
fcoml
mov
xchg
shl
iret
pop
mov
test
inc
sub
mov
mov
or
jg
enter
cld
lahf
lcall
mov
xchg
sub
xchg
jo
push
andb
mov
sub
outsb
out
sarl
push
aas
test
jl,pn
dec
fwait
imul
inc
fldl
pop
cmc
cwtl
je
cld
sub
pop
push
push
fisttps
inc
and
or
jo
es
mov
mov
push
xor
pop
mov
xlat
adc
sub
mov
push
fnsave
pop
cmp
sahf
pop
pop
ds
pop
push
adc
daa
mov
mov
xor
dec
jmp
jno
mov
testb
cmc
daa
das
negl
dec
push
pop
sbb
call
addb
add
cmp
mov
jp
xor
dec
ffree
mov
imul
add
adc
mull
xchg
mov
sbb
mov
scas
xor
mov
je
cmp
xchg
jbe
bound
jmp
cmp
jp
ficoml
jb
sbbb
addb
pop
int
cmp
mov
aam
int3
pusha
sub
sub
shr
stos
mov
jg
repnz
inc
clc
cmp
divl
inc
and
ds
sbb
mov
cmpsl
xchg
inc
pop
and
dec
aam
cmc
pop
xchg
adcb
mov
cmp
cmp
mov
insl
mov
dec
add
js
out
shll
das
mov
psubusw
jae
fisubrs
pop
sub
mov
lods
add
xchg
xor
outsb
lods
movsb
mov
test
xchg
inc
outsb
jae
xlat
ret
inc
lods
sahf
popf
xor
dec
mov
jbe
adc
adc
shufps
les
call
fcmovnu
push
movsb
inc
xchg
filds
xor
lret
or
ljmp
dec
outsl
adc
int3
cs
jo
mov
movsl
push
push
in
mov
xchg
shl
into
js
pmovmskb
sti
or
lcall
mov
lret
dec
scas
mov
pop
mov
sub
or
scas
xchg
sub
pop
sti
xor
dec
cmp
idivb
ret
shll
decl
repnz
cmp
mov
mov
inc
icebp
mov
inc
dec
jbe
mov
fwait
sbb
xor
push
out
bound
inc
clc
push
out
fs
dec
addr16
inc
jecxz
dec
leave
adc
out
fnstcw
cs
lods
or
or
les
loop
adc
add
sub
and
sahf
dec
outsb
fcomi
dec
movsl
push
pop
subl
cmp
mov
pop
adc
repnz
or
dec
imul
sbb
leave
rorb
xlat
sub
das
sahf
popf
dec
sbb
dec
mov
fdiv
nop
sbb
and
fistl
std
cmp
jnp
jmp
sub
sub
xchg
sbb
das
pop
jg
negb
ja
aam
jno
in
mov
adc
push
mov
mov
daa
fstpl
ja
sbb
mov
rorl
mov
dec
jp
mov
push
or
jne
mov
fucom
repnz
xchg
mov
and
push
xchg
add
arpl
ljmp
test
pushf
push
pusha
lods
pop
pop
adc
fstpl
pop
mov
mull
jo
in
jge
sub
out
jg
mov
sbb
arpl
adcb
jbe
pop
cli
mov
sub
jmp
add
sbb
sbb
jns
cmp
andl
mov
mov
rclb
pop
ret
jg
lahf
pop
add
or
pop
sub
fwait
wrmsr
aaa
mov
sbb
repz
push
inc
pop
sahf
fwait
pushf
icebp
mov
add
pusha
decb
lds
loope
sbb
sbb
mov
jns
or
pushfw
fldl
out
jo
cmc
mov
pop
test
adc
push
jl
push
and
stos
call
pop
mov
in
sbb
cmp
xchg
pop
imull
and
mov
jbe
cmp
out
arpl
in
lret
add
in
push
movsl
out
jmp
mov
cmp
fldcw
lret
mov
inc
sub
jne
popa
daa
push
cmp
inc
aam
test
xchg
mov
and
adc
lret
jle
imul
inc
mov
dec
xchg
stos
jno
jle
sub
xor
enter
sub
sub
stos
or
jecxz
test
cmp
test
xlat
lds
mov
mov
or
pop
adc
ds
sbb
popa
popf
lods
add
pushf
out
mov
jl
icebp
push
cmp
adc
xchg
jl
daa
pop
fcoms
arpl
jb
in
mov
addl
imul
mov
mov
sub
in
xchg
test
xor
sub
shl
sub
in
lret
sbbl
push
repnz
movsb
in
mov
sbb
mov
mov
icebp
pop
jbe
mov
and
and
testb
or
dec
gs
dec
cmc
aaa
inc
dec
test
push
dec
cmp
mov
cmpsb
and
andl
cmc
scas
lahf
jp
cmc
es
or
out
pusha
inc
in
cld
aas
testb
sub
fcoml
sti
hlt
push
js
das
adc
loope
or
into
sub
in
mov
gs
mov
xchg
mov
dec
movsl
adc
dec
fdivrl
pop
inc
xor
dec
xchg
sub
sbb
pop
rol
xlat
ficoml
fcmovne
addl
or
in
mov
push
xor
inc
in
add
out
shrb
lock
sahf
pop
push
in
adc
jmp
test
in
ds
add
xor
in
outsl
fsubrl
arpl
jno
movsb
repz
or
pop
sarl
mov
dec
sbb
pop
pusha
ljmp
lcall
ret
mov
mov
ljmp
jecxz
neg
sahf
dec
jge
mov
cmp
mov
push
int3
push
addr16
add
xchg
pop
fnsave
lahf
inc
mov
sahf
xchg
cmc
add
xlat
mov
push
push
cmc
jp
mov
aaa
cmp
clc
iret
lock
int3
scas
into
mov
mov
jns
xchg
push
shl
out
pop
outsb
push
lods
pop
inc
sbb
xchg
sbb
test
hlt
lcall
dec
adc
push
into
push
inc
fistpl
mov
std
push
lret
fwait
and
lret
cmp
cld
mov
sbb
or
in
and
sbb
fimuls
repnz
push
dec
cmp
nop
loope
mov
out
mov
pop
dec
nop
lret
push
in
inc
hlt
lods
mov
dec
scas
lock
cmpsl
addr16
fsubs
scas
push
jns
cltd
push
sti
das
notl
fsubl
loopne
sbb
hlt
inc
dec
fstpl
inc
cmp
jne
mulb
mov
incb
hlt
adc
rorb
cmp
push
pop
inc
cmp
xchg
test
add
xor
aaa
xorb
aaa
jp
mov
andl
js
cmpsb
fdivs
jg
jle
dec
out
inc
push
les
aad
xchg
lods
lret
add
daa
scas
mov
shll
stos
or
xchg
imul
adc
into
pop
in
ss
mov
mov
or
mov
ret
icebp
inc
xchg
xor
add
notl
pusha
js
fadd
pop
inc
dec
xor
xor
dec
and
dec
mov
orl
push
outsb
sub
add
popa
and
or
imul
cwtl
or
loope
and
int
mov
decb
adc
dec
adcl
adcb
or
or
jne
iret
mov
inc
lret
dec
fists
pop
clc
adc
inc
andl
jmp
jae
mov
or
jae
push
xchg
jecxz
out
push
shrb
lea
jle
push
push
sub
inc
sahf
jnp
rclb
inc
cmp
sbb
mov
gs
stc
cmpsb
mov
scas
xlat
mov
push
xchg
out
clc
enter
xor
clc
cmp
jecxz
sub
hlt
mov
push
fwait
adc
insl
push
and
sbb
insb
mov
stos
jecxz
clc
rcl
jnp
pop
imul
lods
xchg
loop
jle
repz
push
push
nop
and
fstp
inc
outsb
push
bound
jg
sbb
cld
jge
cld
sub
sub
cmp
call
jne
mov
sub
or
into
nop
sub
adcb
fcmovnu
scas
adc
hlt
and
mov
adc
cmpsl
sub
mov
xor
cmp
add
sub
repnz
loope
lods
popa
fimull
pop
cmpsl
xchg
add
or
inc
aas
inc
mov
int
icebp
jno
lret
jle
push
mov
out
dec
xor
mov
fisttps
call
icebp
xor
push
cmp
add
adc
cmp
lods
test
outsl
dec
sub
mov
add
push
jbe
outsb
pop
add
cmc
fsubrl
xor
icebp
xchg
andb
leave
mov
test
pop
xor
cmp
inc
add
sub
push
les
imul
cmc
and
inc
test
das
pop
shrb
sbb
repnz
mov
dec
test
in
imulb
pcmpgtd
xor
adc
xchg
adc
sbb
sbb
enter
xchg
jl
cli
insb
mov
inc
das
push
addr16
jp
push
mov
pop
jo
jae
aam
xor
out
gs
fwait
loope
clc
daa
sbb
leave
and
mov
and
cwtl
js,pn
push
dec
adc
mov
stc
cmpsb
sbb
dec
jnp
jbe
jp
insb
jbe
xlat
mov
les
mov
push
in
cmp
imul
aam
stos
shrb
je
movsb
out
mov
mov
imul
jbe
jbe
loop
adc
outsl
ret
jg
movsl
cmpsl
mov
fsubrp
stos
out
push
fs
testl
scas
dec
lcall
xor
les
jb
jno
or
pop
xor
mov
nopl
mov
cmp
mov
dec
mov
xor
inc
cmpsb
movsb
call
movsl
xchg
pop
sub
xor
or
in
mov
outsb
cmc
lds
adc
ret
push
pusha
sbb
cmp
mov
cmpsb
es
outsb
imul
or
lcall
inc
fs
andl
and
cmp
lock
push
lods
repnz
test
jp
movsl
pop
icebp
sub
out
and
ljmp
addb
mov
popf
xchg
ss
lret
les
push
xlat
rclb
and
fs
insb
cwtl
dec
adc
scas
sbb
test
pop
outsl
cmp
ds
cmpsl
shll
in
cmp
divb
jg
xchg
mulb
dec
movsl
lods
shlb
stos
jmp
mov
test
fisttpl
adc
outsb
jno
ljmp
add
orps
shlb
inc
sub
fbld
sub
mov
lahf
mov
push
push
and
rorl
mov
in
sub
imul
testl
ret
dec
cltd
adc
jecxz
ret
and
es
ja
sbb
fcoms
call
xchg
xlat
xchg
inc
out
int
hlt
fcompl
mov
fists
mov
call
aam
mov
mov
xor
insl
rolb
mov
pop
pop
leave
out
je
or
rcrl
repz
je
insl
push
xorb
mov
sub
jge
clc
adc
sbb
sahf
popf
jnp
fadds
sub
push
dec
js
in
inc
xlat
pop
test
jl
xor
iret
adc
hlt
sbb
and
jb
int
movsb
punpckhwd
lods
addr16
push
test
in
pop
lret
dec
mov
jge
push
leave
imul
loope
mov
xchg
in
int
push
mov
sahf
dec
and
insl
inc
sbb
js
rolb
in
addr16
frndint
lret
jbe
sahf
aaa
jge
inc
ret
dec
lods
pop
jecxz
lock
pop
mov
test
cmp
push
xchg
pusha
cmc
out
scas
out
fwait
push
pusha
dec
test
sbb
mov
ret
sti
out
sub
in
testb
std
into
and
fsubl
mov
pop
cli
arpl
sar
adc
pop
repnz
jmp
cwtl
inc
sub
push
push
jmp
jb
out
push
stc
pop
cli
sub
cmpsb
mov
out
out
xchg
cmp
jmp
mov
mov
into
pop
arpl
enter
fnsave
lods
adc
jl
lret
jg
aam
icebp
cmpsb
cltd
cmpsl
dec
push
xlat
sbb
mov
sub
scas
pop
cmpsb
cmpsb
mov
add
pop
sbb
stos
xor
pusha
mov
sub
mov
xor
in
cmp
loope
and
mov
inc
pop
pushf
pop
push
xchg
cld
and
pop
push
mov
repnz
mov
filds
les
test
pop
outsl
push
sti
mov
mov
and
repz
cmpsb
outsb
call
into
xor
cmp
in
loope
mov
clc
out
add
push
pop
std
popf
jo
movsb
mov
repz
mov
and
adc
cli
xor
mov
popa
mov
xchg
call
mov
rorb
subb
fs
pop
decb
jmpw
push
sub
jp
push
add
imul
repnz
dec
sbb
jecxz
jle
or
push
xchg
popf
ret
ljmp
cmp
insl
cmove
adc
xchg
roll
and
cmp
icebp
addr16
lock
lock
sub
mov
stc
and
adc
sub
add
fwait
lods
mov
or
and
jb
jnp
addr16
cmp
test
ljmp
mov
cmp
movsb
push
push
lret
push
clc
sub
cld
aad
hlt
pop
push
push
sti
sub
dec
mov
sub
or
js
push
mov
mov
or
stc
sub
cmp
and
mov
pop
mov
lret
repnz
jg
inc
mov
cli
std
fnstenv
mov
inc
out
in
repz
mov
ljmp
call
sbb
adc
fidivrs
lcall
fs
dec
pusha
fs
xchg
scas
pextrw
lock
sbb
inc
or
jo
std
or
in
xor
sti
sub
xor
cmp
ss
imul
popa
es
sarl
ds
andl
xor
mov
sub
xchg
mov
xlat
test
inc
outsb
mov
sbb
sub
push
cmp
ret
jno
inc
lret
mov
mov
or
inc
dec
mov
int3
cmp
push
sbb
fdiv
xlat
sarl
js
filds
xchg
mov
mov
cmc
loopne
mov
mov
jle
mov
jle
data16
shr
add
add
rclb
jnp
adc
cltd
inc
pop
or
push
in
add
xchg
sub
mov
push
xor
cld
sub
push
lar
xor
mov
arpl
pop
xchg
aam
sub
cld
mov
adc
xor
sub
mov
xchg
mov
dec
inc
dec
pop
cmp
hlt
pusha
adc
loop
out
push
leave
mov
enter
dec
xchg
dec
xchg
jns
jmp
mov
aaa
aaa
call
sbbl
push
stc
jmp
sub
inc
insb
shufps
sub
mov
fisubrs
inc
or
push
add
out
cmp
rcll
addl
jnp
pop
mov
out
and
lea
pop
test
and
scas
into
or
inc
jae
pop
push
or
jecxz
push
mov
sti
sub
faddl
out
inc
data16
mov
or
shrl
mov
fwait
je
inc
pop
call
xlat
out
in
fisubs
loopne
push
into
es
fidivrs
cmp
inc
and
sbb
xchg
outsb
int
mov
cmc
addr16
fwait
andl
lods
inc
subl
xchg
hlt
out
xchg
mov
jae
stc
xor
add
push
subl
stos
jae
out
push
sbb
push
popa
inc
inc
push
call
mov
sbb
and
in
scas
lret
add
mov
add
leave
mov
adc
mov
popa
adc
movsb
xchg
xchg
mov
mov
jb
jg
cmc
enter
or
inc
call
jb
arpl
arpl
or
fstpt
mov
cwtl
fisubs
sbb
jbe
inc
js
xchg
aas
lcall
jb
movsl
mov
mov
adc
mov
in
adc
insl
in
out
inc
lods
sub
fbld
pop
gs
mov
xchg
xchg
jmpw
or
sbb
scas
push
in
or
fstpl
adc
shlb
inc
out
xor
std
loop
shrl
mov
lea
jns
and
pushf
dec
ret
movsb
mov
lock
push
aas
jg
mov
loop
popa
rorl
lea
jbe
xor
adc
adcl
inc
xchg
dec
test
jne
daa
lock
jb
sbb
jg
pop
movsw
pop
cltd
add
xchg
rcr
nop
inc
movsb
sahf
inc
outsb
mov
cmp
mov
sub
mov
mov
sub
xor
or
dec
clc
in
pusha
xchg
in
loopne
clc
lret
aad
imul
adc
sub
lods
out
ljmp
sub
adc
aaa
xchg
subl
and
std
push
rcrl
rorl
pop
inc
inc
sti
int
jb
repz
je
mov
icebp
fcmovnu
or
push
loope
sbb
loope
test
mov
push
popf
mov
xchg
dec
jbe
mov
test
pop
int3
lds
cmp
in
push
call
jmp
jo
mov
negb
insb
and
mov
ds
push
aam
cmp
cmpsb
cmc
mov
push
jle
cmc
ds
cmpsb
inc
and
add
cwtl
cltd
addr16
cmc
sbb
add
push
insb
aaa
outsl
into
lock
cld
fxch
xchg
cmp
mov
add
gs
jne
sub
mov
fsub
gs
jb
pusha
in
inc
jle
jecxz
sbb
dec
push
movsb
fwait
movsb
cmpsb
testb
std
mov
mov
mov
inc
xchg
inc
push
xchg
or
mov
fwait
int3
lods
aas
scas
scas
pusha
nop
fld
test
jge
jp
rcl
out
xchg
dec
gs
xor
dec
mov
fcomps
sti
ds
stos
xchg
je
mov
mov
mov
jne
shrl
xchg
pop
loope
push
mov
ja
subl
scas
stos
push
mov
movsl
out
push
xchg
addr16
sbb
adc
sbb
ljmp
pop
int
into
xchg
in
push
cmpsb
mov
cmpsl
jnp
fucom
sub
and
xor
mov
add
test
jge
fidivl
sub
fsts
mov
pushf
xchg
mov
mov
pop
stos
les
xlat
aaa
xlat
mov
ret
ret
lods
movsb
je
jge
loope
shl
mov
push
inc
mov
out
stos
xchg
fs
leave
lods
in
stos
in
fists
or
std
or
or
aad
ret
or
mov
test
push
lret
cltd
mov
rorb
imul
out
xchg
js
icebp
sub
mov
sub
and
ror
leave
jp
nop
and
mov
js
aad
xor
sub
mov
loopne
mov
sbb
insb
mov
int3
in
mov
mov
test
mov
rcr
xchg
push
cmpsb
sub
fcompl
inc
data16
stos
mov
les
roll
push
fs
ficomps
js
xor
dec
or
lock
pop
sbb
mov
sub
xchg
aas
jno
mov
xchg
adc
jecxz
xchg
es
pop
popa
ret
jne
std
mulb
hlt
pop
scas
and
aas
cmp
in
fadds
mov
lods
enter
pop
fbld
lahf
push
lret
xor
dec
push
imul
adc
fwait
sbb
jns
mov
outsb
gs
cs
int3
mov
inc
sub
and
mov
dec
arpl
add
out
std
mov
push
add
sbb
dec
and
jmp
jne
pop
xlat
mov
adc
and
sbb
push
in
jbe
xchg
sarl
push
inc
sub
jb
or
movaps
test
gs
lcall
dec
loop
cltd
cmp
sahf
sbb
addr16
xchg
js
out
inc
mov
mov
sub
inc
scas
movsb
cmc
int3
sub
jnp
rcr
lcall
cmp
fistpll
stos
sub
pop
arpl
dec
test
xchg
lods
mov
xchg
aam
mov
mov
jb
dec
data16
add
xor
test
mov
gs
jb
xchg
inc
lock
xor
pop
mov
out
lahf
and
ja
ja
lret
add
add
lods
movsb
sti
rclb
pop
mov
aas
pushf
push
addr16
pusha
jnp
std
insl
push
mov
iret
or
aaa
ret
insb
mov
cmp
fmul
and
lods
aas
jbe
lods
rolb
clc
xor
shll
pop
iret
negl
cs
jp
add
fstl
mov
ja
cmp
insl
insl
sub
jo
inc
push
cmpsl
cmp
push
dec
pop
lahf
in
fistpll
dec
cmpsb
icebp
inc
mov
in
scas
mov
push
jbe
ret
test
cmc
sbb
in
and
lahf
jge
sbb
shr
movsb
in
sbb
sub
dec
inc
jle
test
jno
repz
cs
pop
pushf
or
ret
cmpsl
std
sub
inc
push
repnz
push
or
lea
into
mov
xchg
dec
loop
add
out
mov
jl
andl
les
ss
repz
arpl
incb
test
lds
lcall
imul
imul
inc
mov
pop
addr16
les
push
test
xchg
inc
cs
adc
outsl
dec
sbb
cli
dec
adc
mov
xchg
mov
cmpl
bnd
loopne
lods
dec
lret
inc
jmp
pop
xchg
inc
mov
adc
fimull
sbb
or
sbb
inc
fdivrl
mov
push
rcl
dec
insb
sbb
leave
shll
adc
push
xchg
dec
cmp
add
lcall
mov
xchg
lcall
leave
jmp
inc
dec
in
nop
sub
in
insb
cmpsb
mov
or
sbb
addr16
call
xor
clc
idivb
xor
mov
stos
adc
sub
rcrl
and
pop
xor
cmp
adcl
xlat
sub
and
enter
arpl
or
loope
cli
push
push
sub
dec
js
push
lods
mov
xchg
adc
mov
and
add
outsl
xchg
xor
mov
sbb
pop
inc
sub
pusha
cmp
mov
add
and
call
push
sbb
ror
mov
mov
xchg
aas
mov
jno
dec
pop
xchg
mov
sub
jno
mov
xor
mov
mov
jae
lahf
xor
rol
aas
mov
jno
add
add
push
out
dec
mov
cld
mov
dec
shrb
adc
ljmp
pop
mov
mov
push
shl
mov
out
pop
mov
sub
rorb
bound
sbb
xchg
dec
mull
out
jne
adc
cwtl
imul
mov
test
push
in
adc
push
add
or
imul
mov
test
rorl
in
imulb
int3
mov
ret
mov
jo
inc
loopne
mov
cs
hlt
inc
inc
cmpsl
xor
and
inc
daa
cli
mov
fmul
xchg
imul
rolb
rolb
outsb
mov
mov
mov
xchg
out
insl
push
jae
stos
daa
mov
mov
or
push
jne
in
cmp
mov
xchg
imull
outsl
loop
lods
arpl
pop
in
sarb
adc
addr16
and
mov
mov
popa
addr16
jecxz
push
lahf
sahf
shll
mov
daa
pop
ljmp
clc
pop
and
lret
mov
lret
pop
or
pop
outsl
xor
or
and
or
inc
testl
or
jge
or
xor
daa
jge
pop
inc
data16
add
ficoml
push
inc
mov
mov
push
mov
aad
add
call
out
fstp
pop
sbb
push
and
sbb
in
addb
dec
jecxz,pn
addr16
pop
aad
sub
cs
lret
int
push
clc
clc
and
adc
cmp
cltd
sub
addr16
and
mov
mov
clc
adc
mov
fcmovnb
jbe
loop
iret
pop
jne
adcb
xchg
push
mov
pop
daa
gs
icebp
je
jge
mov
cld
sub
dec
bound
xchg
stc
int
jno,pn
mov
adc
inc
ja
test
sarl
jg
cmp
rolb
mov
and
in
mov
test
mov
fwait
mov
cli
sbb
xchg
aam
and
loopne
pop
enter
mov
cmp
insb
mov
pop
push
dec
dec
push
pop
ror
sub
mov
mov
xchg
js
outsb
pushf
scas
lock
mov
mov
mov
test
inc
repz
xor
mov
lcall
xor
bound
push
loop
cmpsb
dec
psrld
addr16
bnd
faddl
adc
popf
test
jne
lret
xchg
and
pop
fldz
or
fnstenv
sbb
pop
jbe
push
leave
cmp
jge
mov
lock
xlat
pop
subb
pop
data16
dec
das
cwtl
test
mov
mov
mov
das
inc
cltd
test
or
shll
arpl
sub
sub
sbb
loope
call
mov
mov
jo
push
jl
jnp
loopne
push
push
lods
aad
lds
mov
xor
jae
out
popa
xlat
jae
mov
loop
ret
xchg
fmuls
jmp
scas
arpl
pop
cmp
inc
cmpsl
pop
push
cmp
or
dec
in
pop
inc
int3
sbb
mov
or
ud2
jbe
jno
xchg
movsl
mov
inc
imul
mov
mov
mov
shl
lods
sbb
pop
and
mov
ret
inc
pop
pop
in
sbb
mov
xchg
xchg
dec
je
je
xchg
push
iret
repz
inc
xchg
jnp
pop
sbb
lahf
mov
push
mov
cmp
scas
or
rcr
jo
pushf
push
imul
stc
pop
sub
add
xlat
lds
xor
dec
push
addr16
pop
stos
pop
jge
jmp
ljmp
inc
cmp
lret
xor
xchg
sub
out
cmp
fstps
add
or
in
dec
mov
adc
roll
mov
jnp
jg
rolb
subl
xor
jecxz
pop
ffree
dec
pop
xor
or
jmp
scas
xor
jnp
cli
adcb
dec
lock
xor
fidivs
pop
push
sti
aaa
outsl
inc
loopne
imul
fwait
mov
jbe
gs
cmp
xchg
adc
add
xchg
movsb
or
jns
movsl
mov
sub
mov
jmp
out
outsl
pop
adc
test
out
dec
mov
repnz
pop
out
pop
popf
dec
inc
out
mov
bsr
dec
sbb
lahf
fstpl
sti
mov
lea
sub
cld
and
cmpl
inc
add
lock
lahf
dec
xor
cmp
movb
push
rolb
push
aas
lds
cmp
xor
mov
jae
jecxz
push
adc
cld
and
xor
mov
or
mov
add
shr
add
jg
fistps
mov
xchg
xchg
mov
xchg
in
dec
sbb
add
and
arpl
gs
mov
cmc
sbb
jl
test
lret
push
aam
fidivs
ret
and
xchg
cmp
bound
inc
repz
repz
cmc
lods
stos
rcrl
dec
and
push
adc
push
inc
mov
sbb
test
jno
rorb
mov
add
push
push
sarb
enter
test
lahf
adcl
pop
mov
add
je
outsb
insb
cwtl
inc
adcb
jg
int
jg
or
fstps
and
or
int3
aas
add
imul
in
push
shrb
cmp
cmpb
add
fnstcw
pop
dec
dec
mov
fcompl
std
xor
clc
pop
sbb
pusha
add
dec
cmp
lock
iret
push
sub
push
rcll
pushf
jbe
test
arpl
insb
fisubs
mov
mov
fcomip
sbb
fdivs
in
cmpsb
mov
push
aad
mov
jmp
cmp
pop
push
pusha
or
push
adc
es
imulb
addr16
fisttpll
shll
and
lret
xor
jbe
mov
inc
shl
lods
lret
nop
push
inc
mov
mov
iret
jmp
push
mull
dec
mov
jg
mov
outsl
mov
xchg
or
mov
push
popa
lcall
pop
fwait
dec
stos
mov
xchg
jle
repz
mov
rcrb
push
mov
stc
movsl
jbe
jg
jbe
jno
sub
pushf
into
push
dec
pop
and
jne
mov
mov
ljmp
popa
inc
je
jecxz
in
adc
leave
mov
fwait
cmpsb
sub
les
mov
fcmovne
push
clc
mov
scas
ficoml
test
leave
mov
nop
test
mov
jl
sub
int3
outsb
lods
push
pop
das
movsl
int
ja
std
add
sub
ljmp
ljmp
cmpsb
add
mov
dec
inc
jno
add
cmp
shl
xor
aaa
push
rcl
cmpsb
lret
repz
xchg
xchg
and
lds
sbb
call
mov
call
mov
push
into
ret
stc
int
idivb
and
lret
and
push
gs
lods
arpl
fildl
jne
or
cs
sbb
out
shlb
sub
loopne
andb
imul
xchg
xor
fnsave
data16
push
in
mov
pop
cmp
test
decb
sahf
insb
cmp
cmp
repz
push
fmuls
mov
xor
loope
mov
imul
xchg
push
mov
cmpsl
inc
aam
scas
sub
outsb
data16
out
and
sbb
ljmp
and
dec
notb
int3
cmp
sub
std
lds
xchg
in
lret
xor
cld
add
lods
fsub
arpl
jne
xchg
sbb
cmp
and
push
lods
jecxz
jp
xorb
xor
pop
cwtl
aad
mov
inc
jle
call
lar
inc
jge
lahf
dec
inc
das
dec
mov
pop
sti
ja
push
push
stos
or
addr16
cmp
cltd
cli
dec
ja
and
push
push
jbe
or
jns
mov
mov
push
xor
jo
sti
pop
xor
and
dec
frstor
xor
rcrb
dec
adc
inc
call
push
inc
cmpsl
jae
negl
into
cwtl
stos
rorb
push
adc
mov
mov
aad
xor
insb
xor
cmp
push
js
in
xor
movsb
cmpsl
cmp
cmp
out
mov
ds
jp
jo
mov
leave
jbe
jno
push
aad
cmp
pop
jbe
cmpsb
xchg
jmp
imul
mov
inc
sub
cli
adc
out
test
lar
pop
out
pop
dec
lahf
test
das
cwtd
mov
jno
lret
rcrl
lock
repz
sub
sub
sub
jno
xor
mov
add
test
negb
jno
and
and
enter
xchg
iret
pop
xchg
cwtl
fcomps
scas
pop
cmp
mov
cmp
loope
ror
push
rcrb
push
cs
ja
adc
cmp
ds
pop
fisttpll
test
mov
or
enter
stos
or
std
xchg
fsubs
mov
pop
dec
enter
stos
popf
scas
rcrl
mov
cmp
jg
fidivrl
ror
or
fisubs
pop
jg
or
sahf
dec
loope
sbb
aad
inc
cld
fidivrs
mov
mov
outsb
cltd
ds
mov
jns
xor
fucom
mov
daa
data16
and
call
fwait
jbe
pop
lcall
mov
pcmpeqd
dec
cmp
sbb
cwtl
sbb
adc
xchg
xchg
fucomp
cltd
enter
cmpb
cmpsl
jae
cmp
xor
cltd
pop
dec
out
push
addr16
push
xor
ret
pusha
mov
repnz
jb
imul
and
adc
ds
sbb
or
mov
push
test
inc
cs
mov
fimuls
dec
imul
arpl
std
mov
test
aaa
divl
lahf
mov
dec
nop
jg
dec
into
and
pop
test
and
aad
shll
lods
je
sbb
fisubrs
fdivr
mov
inc
in
sub
fimull
cli
int
adc
xor
mov
mov
loopne
mull
pop
and
push
xchg
mov
inc
sbb
mov
xchg
lret
xor
repnz
mov
mov
icebp
push
leave
or
mov
popf
sub
pop
fcoms
stos
pop
inc
fwait
jge
test
stc
cltd
sub
add
inc
mov
cld
scas
mov
mov
mov
loopne
push
jno
sub
insb
into
ret
aad
pop
mov
jmp
imul
in
jnp
dec
xchg
ret
xchg
jmp
mov
testb
mov
imul
cld
jae
dec
pusha
rclb
sub
push
sbbb
mov
mov
jns
inc
xchg
or
xor
fbstp
je
fisubrs
ljmp
inc
aas
rclb
inc
mov
pop
jecxz
std
aaa
cmc
dec
mov
mov
jmp
sbb
sbb
test
xchg
aam
push
jge
and
gs
xchg
sub
aam
or
mov
mov
stc
sub
adc
xor
lahf
sub
add
cmpsl
dec
pop
xor
outsb
mov
insb
mov
pop
gs
in
cmp
xchg
arpl
sets
pop
popf
in
sbb
add
push
sub
sbb
imul
int3
bound
out
sbbb
aaa
loopne
jo
lods
and
dec
cmpsb
jo
lret
lret
add
jnp
xlat
pushf
inc
test
add
pop
testb
int3
mov
add
test
inc
or
sub
mov
and
dec
xor
addl
fwait
push
cli
inc
sub
xchg
mov
mov
fisubs
xchg
stos
pop
inc
xchg
inc
outsl
popf
and
std
dec
fwait
sbb
addr16
xorl
addl
mov
mov
jle
loopne
scas
mov
pop
in
cmp
hlt
xchg
daa
xor
nopl
mov
int
cmp
clc
movsb
mov
pop
xchg
jmp
sti
sub
pop
jmp
fcompl
push
cmp
pop
cmp
xor
cmp
in
notl
adc
mov
shll
cmp
add
adc
ss
sub
pusha
int
ljmp
mov
cmp
jmp
mov
cli
fdivs
data16
jle
xchg
dec
mov
inc
add
outsl
int3
rorl
mov
bound
sub
sub
in
icebp
sub
and
cltd
iret
fnstcw
pushf
cmpsb
dec
xchg
xchg
shlb
push
fbstp
pop
pop
fiadds
cmp
push
inc
push
jo
inc
icebp
cmp
push
xchg
stos
icebp
jle
or
add
into
mov
cmp
push
xor
jl
cmp
cld
icebp
pusha
push
cwtl
and
test
pop
aad
jge
pop
mov
xchg
into
popf
jg
push
add
push
add
adc
insl
cwtl
push
pop
and
dec
mov
int3
sub
sti
sbb
subb
icebp
jnp
inc
xor
jmp
mov
out
push
and
repz
outsb
outsl
mov
jmp
xchg
sub
jne
push
js
fidivs
lds
scas
call
xor
addr16
xor
out
lcall
movsl
pop
and
dec
lea
jnp
lahf
loop
dec
clc
addl
xchg
cmpsb
pushf
push
push
ja
sbb
fnsave
adc
gs
iret
adc
push
xchg
adc
pop
mov
mov
xchg
cmp
sub
sarb
pop
push
adc
ljmp
mov
test
adc
lock
mov
aad
sub
and
std
and
bound
arpl
adc
sub
out
cmp
test
pop
daa
cltd
lahf
scas
xchg
push
fstpt
aaa
into
je
inc
in
mov
push
ljmp
lds
aad
mov
insl
mov
mov
mov
pop
dec
mov
mov
adc
notb
xlat
dec
adcl
cs
mov
out
gs
aas
arpl
dec
jae
push
mov
jp
hlt
shrb
add
cmp
out
jge
xchg
insb
push
cwtl
test
jno
into
xchg
and
popl
jne
add
mov
inc
loopne
push
xor
mov
push
push
add
mov
popf
pop
pop
mov
xchg
fcomi
pop
repnz
inc
cs
jmp
in
xchg
or
pusha
mov
iret
add
outsl
add
in
out
sbb
pushf
mov
inc
jmp
dec
cli
dec
fidivrl
xor
sub
inc
pusha
sti
clc
insl
ja
or
iret
sub
jb
jge
xchg
ljmp
push
popa
xor
sbb
xchg
cmp
push
sub
xor
pop
jecxz
jl
xchg
sbb
hlt
lea
rcll
jmp
adc
ds
jg
faddl
sub
sbb
lods
rolb
xor
jb
pusha
loop
arpl
xchg
fcomps
sbb
cmp
and
pop
aam
addb
fnstenv
fs
mov
out
inc
pop
dec
inc
xor
fistps
sbb
insb
adc
lahf
inc
out
arpl
or
jns,pn
aaa
lods
cmpsb
dec
dec
inc
mov
popa
push
out
cvtpi2ps
out
mov
push
adc
jnp
add
adcb
lock
mov
bound
sahf
scas
aam
sub
data16
cmp
push
aam
sub
aad
xchg
iret
out
jno
aam
pop
add
xchg
fcmovnu
fdivrp
xor
rcr
loop
jge
pop
adc
arpl
popf
ds
nop
mov
out
dec
inc
mov
and
fsubr
es
xchg
xchg
jae
mov
push
mov
mov
lahf
out
outsb
mov
mov
shll
data16
out
and
mov
pop
or
les
ja
jg
in
outsb
int
or
xor
pop
les
outsb
xlat
adc
sub
or
xchg
enter
out
mov
scas
push
pushf
push
inc
add
hlt
add
popa
xlat
xor
clc
xor
popa
rclb
inc
pop
sti
iret
ret
imul
imul
xchg
addr16
sub
push
ficoms
dec
jg
test
jle
mov
addr16
jb
jo
push
call
out
jo
jle
in
test
inc
xchg
pop
xor
mov
jmp
addb
subb
add
or
lods
shll
jno
jl
pop
outsb
xor
jle
cmc
sub
es
mov
xchg
inc
dec
imulb
clc
and
incb
mov
cmpsb
sbb
repz
nop
frstor
lahf
xor
lock
mov
dec
jmp
adc
or
stos
xchg
pop
push
inc
lods
pop
xchg
outsl
sbb
test
stc
cwtl
out
mov
jl
scas
ja
pop
xchg
fadds
adc
icebp
sub
push
mov
mov
inc
sahf
mov
fcomi
nop
lret
jne
and
mov
lea
cmpl
outsb
jnp
mov
rclb
mov
fidivl
cmp
les
test
cs
iret
push
inc
test
push
enter
testl
fwait
sbb
popl
dec
cmc
gs
fcmovbe
dec
ret
push
pusha
xorb
dec
mov
dec
movsb
imul
mov
jge
iret
leave
jmp
or
cltd
aam
in
jnp
fstpt
hlt
jecxz
mov
sub
loopne
mov
rol
cld
and
xchg
out
mov
flds
xchg
sbb
pop
sub
loop
add
fwait
push
ret
add
inc
sub
xor
ds
jmp
std
sti
jmp
inc
cmp
andb
mov
ljmp
cmp
scas
pushf
shlb
xchg
mov
pushf
jp
mov
mov
test
cmc
pop
das
fildll
mov
pop
insb
mov
dec
lret
int
es
lcall
out
movsl
enter
clc
imul
fmuls
jl
les
inc
add
shr
mov
or
jle
adc
or
add
sbb
mov
jnp
call
enter
mov
popf
xchg
test
test
jge
lods
in
mov
xor
mov
lret
pop
dec
rorl
test
xlat
pop
dec
jmp
hlt
mov
filds
call
xchg
add
cltd
sbb
lods
in
mov
cli
icebp
iret
jle
in
std
pop
xchg
in
lea
out
push
cmpsb
inc
aaa
sbb
lret
mov
push
xchg
fimuls
push
fadds
jmp
push
loop
popa
out
add
andl
icebp
adc
fidivs
pop
adc
push
adc
cmp
pusha
push
add
adc
cmp
in
jge
clc
repz
stos
repz
aad
adc
jp
jne
bound
fdivrl
andl
xchg
repnz
pop
movsl
cmp
adc
dec
ret
mov
add
cmp
sub
mov
dec
cmp
or
test
jp
jns
mov
cmp
nop
pop
cmpsb
sti
outsl
xor
cld
cld
out
mov
push
arpl
movsl
and
mov
iret
dec
mov
idivb
lea
lcall
jp
push
push
leave
arpl
ds
xor
je
inc
mov
xchg
or
mov
push
testl
cmp
pop
out
cmpsb
pop
std
popf
cmp
ds
push
fimuls
out
ret
bnd
push
pop
data16
ret
les
aaa
add
push
mov
and
es
xor
les
jl
decl
inc
mov
in
lret
into
jp
cs
inc
stos
cmc
movsb
mov
shlb
lret
repnz
addl
jnp
imul
xchg
push
or
jbe
adcb
push
cwtl
xor
mov
movsl
imul
jp
push
in
push
sub
mov
inc
push
sbb
sbb
lret
sub
xchg
sub
mov
mov
xor
xor
inc
cmp
int
cmp
lahf
into
mov
std
rcll
lcall
std
cvttps2pi
jge
push
rdtsc
arpl
push
loope
adc
das
sub
and
adc
stos
popf
mov
xchg
nop
or
mov
nop
push
aaa
sbb
cmp
push
rcll
jmp
adc
push
mov
or
and
jb
cmpsl
mov
cmp
mov
stos
mov
cwtl
out
lock
mov
loop
rorb
push
xchg
ja
fiadds
push
cmp
imul
pop
jns
mov
jl
cs
repz
aas
js
add
xlat
push
daa
cmp
mov
fwait
jno
pop
jl
outsb
push
xchg
jmp
iret
je
ret
jnp
mov
in
xchg
pop
call
shlb
pop
andl
mov
ficoml
mov
push
push
xchg
cmp
bound
xor
ljmp
jg
loopne
or
negb
mov
cmpsb
ds
mov
inc
sub
mov
dec
xchg
sub
aaa
push
fs
ljmp
pop
dec
testl
into
jle
mov
jno
sti
lds
int3
and
xchg
lahf
xor
adc
loop
lds
cmp
icebp
insl
sub
loopne
sbb
jg
and
adc
mov
mov
pop
push
mov
jb
mov
or
movsl
std
mov
mov
out
dec
rolb
lret
mov
cmp
push
cmp
or
mov
or
push
mov
mov
or
mov
in
xor
inc
cli
lea
arpl
and
mov
outsb
fst
sub
mulb
sbb
cmc
or
test
insl
push
mov
test
pop
push
insl
cmpl
loope
mov
sbb
and
or
pop
cltd
outsb
sahf
in
popa
dec
or
adc
and
inc
pop
add
jo
or
or
jge
movsl
xor
push
arpl
cmp
mov
xor
data16
rcrl
mov
ss
adc
cmp
xchg
fwait
popa
jbe
or
push
sarb
mov
cmpsl
pusha
adc
sbbb
push
cmp
cmp
ja
lods
mov
and
mov
cmp
outsl
fs
mov
xor
jne
adc
mov
jge
outsb
push
inc
jb
loop
loopne
movsl
in
sarl
and
stc
cwtl
or
ja
mov
popa
negb
lds
movsl
mov
dec
adc
pop
ss
jmp
xor
addl
lret
rcrl
fcomps
jnp
inc
out
daa
cmp
ljmp
mov
inc
and
add
movq
fidivl
add
cmp
pop
fwait
pop
movsb
push
dec
loop
add
push
mov
mov
xchg
inc
in
xchg
out
fisttpll
mov
in
lock
clc
stos
xor
cmp
sub
mov
idivb
inc
xchg
mov
and
fcomps
xchg
cld
inc
sbb
cli
dec
sti
inc
pop
popf
xchg
add
stos
outsl
gs
ret
jnp
sahf
lock
dec
inc
mov
out
sub
pushf
lahf
fwait
pop
sub
imul
imul
sub
outsl
nopl
lods
sarb
inc
adcl
int
out
jge
jecxz
inc
sti
sarl
push
jne
adc
shlb
pop
divl
test
push
sbb
xchg
iret
mov
sub
and
not
dec
dec
rclb
adc
adc
dec
xchg
sahf
ljmp
lcall
cmp
mov
xor
pop
lret
shlb
pop
int3
pushf
and
jbe
sbb
mov
and
sti
test
icebp
stos
cmpsl
icebp
push
push
or
ja
push
adc
xchg
adcb
cwtl
xlat
push
stos
mov
addr16
adc
pop
mov
dec
sub
in
test
dec
out
dec
add
es
push
in
jg
iret
sbb
ja
movsl
mov
fldcw
sbb
mov
xchg
jns
add
test
js
add
sbb
out
jmp
lcall
ds
adc
loop
stos
mov
push
dec
mov
push
cmp
mov
inc
xchg
lods
cmp
loope
cltd
jb
xor
adc
mov
in
push
xchg
mov
enter
cmpb
mov
mov
lods
and
xor
movsb
repnz
xchg
ja
stc
ja
pop
or
stos
mul
pop
adc
test
inc
and
inc
popa
shll
push
mov
imul
lods
aam
pop
pop
mov
mov
cmp
mov
gs
sub
pusha
xlat
test
leave
and
fisubrs
sbb
outsb
push
loopne
call
mov
sub
and
filds
leave
mov
dec
hlt
pop
jnp
xchg
mov
imul
jne
cmp
push
or
pushw
jg
sbb
popf
mov
jle
xor
dec
je
inc
add
sbb
cwtl
lock
loope
pusha
stos
jbe
mov
out
cmp
push
fs
imulb
dec
xchg
aaa
fwait
xor
aas
pushf
outsl
mov
movsb
sahf
shrb
orl
dec
jle
lahf
or
stc
add
stos
popf
stos
xor
xchg
out
imul
fmuls
pushf
cld
mov
adc
xor
popa
inc
and
jge
in
push
and
add
cmpsl
popa
mov
call
mov
or
sub
stc
out
cmpsl
adc
xchg
xchg
mov
xor
push
xchg
xchg
mov
insl
dec
sub
cmc
shr
shll
nop
loopne
inc
arpl
jns
movb
or
sbb
xor
and
out
or
jno
jb
insl
ljmp
or
ds
dec
imulb
test
mov
cmc
je
fistpl
sbb
jne
jg
shr
pop
xor
insb
jne
fwait
jecxz
outsl
out
stos
cli
clc
loopne
mov
dec
daa
lea
movsl
fnstenv
scas
sti
lahf
in
cmovb
mov
jp
xor
out
outsl
cmpsb
mov
scas
xlat
ret
mov
daa
hlt
roll
aaa
in
pop
roll
out
push
sub
mov
aam
insl
test
insb
push
sub
jg
and
outsl
xor
in
popa
jg
lods
lret
and
sub
add
stos
mov
loop
add
idiv
jb
cmp
inc
popf
cwtl
or
pop
jecxz
imull
cli
xchg
and
jecxz
mov
jne
pusha
xor
cmp
iret
shlb
je
or
lods
jns
sbb
push
push
rclb
ror
sti
int3
jp
fcoms
outsb
jns
lock
rolb
dec
popf
mov
inc
mov
cmpsb
aad
cmp
mov
and
sti
repz
mov
push
pop
jae
inc
movsb
sub
or
insb
std
xor
jnp
in
mov
fwait
pop
push
xchg
jno
insb
pop
jl
repz
xor
mov
push
stos
mov
xchg
daa
sti
sub
mov
scas
fs
imul
cs
inc
es
cli
adc
clc
mov
out
arpl
test
mov
mov
mov
outsb
add
lods
sbb
sbb
jns
mov
push
mov
dec
cli
jmp
jno
daa
sahf
fwait
gs
pop
cmc
aas
xchg
inc
jl
cmpb
inc
clc
test
sbb
dec
cmpsb
shlb
sbb
jbe
out
and
fiaddl
test
dec
ret
xlat
jge
adcb
xchg
jns
negl
ja
ja
test
les
sub
dec
jo
rcrb
xchg
imul
in
jb
inc
enter
lahf
sbb
push
movsl
xchg
xchg
test
bnd
inc
out
cmp
sub
orl
lret
push
test
add
mov
pop
adc
sbb
insl
jb
xchg
ds
pop
std
cmp
out
xchg
addr16
clc
out
icebp
inc
out
nop
inc
sbb
fcmovne
and
jg
mov
pop
mov
cmp
or
pusha
push
xor
jmp
lret
inc
dec
add
fcoml
stc
dec
fs
aaa
fildll
mov
sub
mov
mov
inc
push
push
dec
call
xchg
jp
mov
mov
dec
shrl
int
jo
fimuls
inc
xchg
inc
sahf
stos
gs
int3
or
adc
mov
gs
sub
imul
call
repnz
mov
ds
pop
fwait
dec
jmp
sbb
movsl
adc
add
inc
cmpsl
cmc
adc
es
or
inc
sbb
out
lods
xor
pop
call
sbb
je
cmpsl
add
addb
add
sbb
je
lods
call
and
rolb
iret
in
push
ret
mov
add
data16
mov
adc
sarb
leave
dec
add
roll
pop
pop
lret
or
in
add
pop
mov
nop
mov
pop
inc
loop
xchg
das
sbb
adc
and
sbb
pop
stos
clc
sub
mov
test
adc
jns
xchg
push
push
fdivr
adc
adc
cmp
push
pop
ja
push
and
aas
or
mov
roll
mov
or
ret
inc
mov
int3
and
cmpsl
sahf
inc
mov
fsubl
sbb
repnz
hlt
pop
cmpsl
pushl
pop
orl
nop
lret
out
inc
mov
fdivl
fsubrs
sbb
sub
sub
pusha
dec
lret
cs
mov
or
cltd
cmp
cmpsl
jecxz
out
ret
push
and
adc
sbb
xchg
dec
out
cmp
mov
lahf
mov
outsb
stc
xchg
adc
cmp
lock
aad
pop
test
out
ljmp
sbb
sub
push
sbb
add
test
pop
mov
jb
jo
jo
imul
orb
pop
mov
insb
rclb
pop
das
xchg
out
dec
inc
adc
pop
push
jmp
jne
dec
leave
or
dec
lods
sbb
push
insl
lea
shrl
icebp
jnp
jmp
insb
mov
mov
shrl
pop
fnstsw
xchg
gs
filds
mov
iret
fildll
fsubs
ljmp
or
mov
lret
mov
out
gs
and
xor
mov
sbb
lods
and
inc
mov
and
xchg
pop
out
mov
adc
mulb
shll
pop
lods
popa
clc
fsubrp
jbe
jne
insb
cmpsl
push
out
fsub
test
in
pop
imul
lret
aas
push
in
xlat
add
bnd
mov
adc
and
ret
notb
dec
adc
inc
popf
and
xchg
roll
inc
push
mov
mov
mov
pusha
bound
in
divl
dec
out
in
jle
loopne
adc
xor
inc
mov
gs
test
adc
xorl
dec
cmpsb
jl
les
lds
les
loop
jns
notb
xchg
xchg
push
jne
xchg
fcmovnb
xchg
fidivrl
jne
cmpl
xor
jb
cmp
fcmovne
popf
scas
xor
push
add
lods
rcr
inc
imul
hlt
or
add
jle
cli
aam
jl
push
jb
or
mov
insb
fsubl
arpl
shlb
call
popf
or
nop
pusha
test
outsb
scas
int
movsl
sub
sti
sbb
out
sbb
dec
jns
pop
sbb
jg
cmp
cli
pop
outsl
fs
pop
test
mov
mov
dec
imul
mov
shl
jmp
fs
imul
mov
sbb
out
inc
aad
dec
mov
cmp
bound
test
cmp
mov
or
mov
icebp
lock
push
movsl
or
mov
add
add
jecxz
cmp
aaa
in
mov
xchg
push
xor
pop
cltd
movsl
arpl
mov
lcall
cltd
test
test
icebp
jmp
push
mov
adc
inc
mov
sub
dec
add
cmp
arpl
push
jb
sbb
mov
test
aas
out
inc
cmp
add
xor
cmpsl
mov
xchg
or
adc
lret
js
sub
daa
xlat
sub
inc
or
mov
mov
popf
lds
dec
or
mov
mov
cmp
cmp
add
lret
dec
inc
insl
je
push
lret
xor
or
mov
xchg
jle
repz
in
inc
pushf
imul
jp
out
aaa
adc
out
loopne
mov
mov
mov
xchg
je
leave
mov
add
lcall
loopne
cli
sub
jle
movsl
inc
add
repz
pop
push
jmp
add
loop
mov
pop
or
fmul
daa
imul
pop
in
and
pop
ficoml
mov
iret
pushf
movsb
adc
in
sbbl
movsl
sbb
add
push
or
out
dec
sub
aam
fiaddl
cmpsb
repnz
or
mov
leave
loop
xor
scas
xor
and
cwtl
in
popa
or
pusha
pop
mov
cmpsb
adc
mov
pop
pop
and
cmp
enter
daa
mov
dec
inc
jns,pt
adc
cmpb
mov
cmpsb
outsl
insb
pop
sub
push
cld
inc
je
mov
mov
cmp
dec
jmp
xchg
mov
push
sbb
jp
neg
lock
pop
fcmovb
or
add
cs
xchg
add
fildl
icebp
pop
sbb
inc
nop
mov
imul
out
lods
adc
nop
test
adc
loope
repnz
mov
xchg
or
lds
and
cltd
cmp
out
add
pop
test
fwait
push
ljmp
xor
cltd
or
sbb
call
jno
cld
iret
pop
xor
not
and
add
cmpsl
pushf
jne
and
mov
out
test
lods
sbb
test
test
xor
mov
push
mov
ss
push
out
or
sbb
roll
push
shlb
xorl
push
mov
test
adc
sbb
or
push
pop
dec
inc
mov
mov
jle
or
xchg
ret
add
xchg
lea
std
mov
xchg
pop
cmpsb
sbbl
pop
cmpsb
inc
cltd
idivb
sbbl
jns
loopne
pop
or
mov
shrl
rolb
outsl
stos
fcomps
mov
leave
fisubs
push
inc
addr16
loopne
push
addr16
stc
sbb
mov
lahf
lahf
sahf
scas
inc
and
push
sbb
mov
inc
test
in
inc
aam
pop
lret
cmp
lret
mov
jp
xchg
xor
pop
fbstp
clc
sti
xlat
jmp
frstor
and
rol
dec
cld
mov
outsl
into
mov
pop
cmc
ds
jnp
out
mov
mov
pop
orl
mov
xor
je
xor
fildll
in
jp
dec
xor
sbb
inc
mov
sub
lock
int
mov
stos
cld
int
push
pop
std
cmp
push
int
xchg
add
inc
loope
pop
std
xor
jl
ficompl
xchg
aaa
imul
sbb
repz
mov
sahf
jno
mov
aas
jb
mov
mov
jb
sbb
das
dec
.byte
.byte
.byte
