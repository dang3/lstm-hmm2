mov
xor
testl
jg
and
mov
daa
clc
js
lahf
ja
lds
movsb
out
inc
outsb
test
out
pop
iret
ds
push
in
or
insb
stos
iret
aas
jne
fucomip
test
cs
xor
nop
subb
mov
mov
xor
movsb
clc
movsb
jne
sbb
jo
dec
mov
mov
cmp
push
jnp
mov
or
mov
adc
and
xchg
add
and
add
pop
cmpl
loope
ret
aam
mov
dec
mov
int
daa
ja
dec
pop
and
fiadds
mov
scas
cli
sub
push
mov
test
nop
pslld
mov
push
and
push
rclb
mov
cli
xor
push
mov
xlat
sti
cmp
sbb
cld
jp
ret
cwtl
cmp
cmp
jno
call
mov
cmp
lahf
push
in
addl
out
jecxz
inc
xchg
in
loopne
pop
cld
mov
out
push
pop
test
xor
mov
pop
jns
in
nop
xor
push
insl
aaa
cmp
or
scas
adc
or
push
jne
mov
int
inc
xchg
mov
push
in
or
or
push
movb
fnstenv
cmp
mov
cli
jecxz
loopne
cmp
mov
mov
lcall
and
int
add
cmp
cli
xchg
nop
movsl
or
pushf
pop
or
mov
push
lcall
movsb
cs
or
das
cs
in
mov
xchg
push
or
mov
xor
je
pushf
adc
push
jae
aam
mov
and
ja
stc
sti
sbb
jnp
mov
stos
fcompl
ds
std
fstpt
gs
out
jno
xor
mov
jmp
jle
inc
les
adc
mov
cmp
imul
lea
mov
lods
rolb
cs
mov
shl
mov
cmp
inc
jns
xchg
pop
jnp
addl
xor
and
pop
mov
clc
inc
lret
or
cli
jp
dec
mov
push
or
jo
mov
sbb
out
cmp
popa
stc
sar
and
andl
and
or
cmp
rorl
jns
mov
or
lahf
xchg
add
into
mov
push
mov
pop
and
mov
pop
cwtl
xor
outsl
cwtl
arpl
xchg
adc
repz
sub
mov
cltd
and
mov
call
icebp
ficomps
movsb
and
shll
nop
popa
insl
aam
xchg
add
jecxz
pop
in
and
and
data16
xor
cmpsl
jge
jnp
icebp
mov
mov
dec
je
xchg
lods
inc
adc
jbe
sarb
hlt
add
jbe
movsl
mov
or
movsl
adc
pop
mov
mov
mov
arpl
xchg
mov
or
mov
dec
scas
or
jg
push
and
push
dec
mov
out
dec
cwtl
adc
or
mov
or
xchg
and
test
pop
aaa
jmp
push
mov
scas
into
loope
loop
fbld
adc
mov
pop
push
fcmovbe
xor
adc
repz
movsl
xor
sahf
jle
popf
lock
call
pop
stc
ja
in
test
mov
sbb
mov
movsl
sub
add
cmp
xor
stc
movsb
ja
jl
xor
dec
movsl
movsl
out
daa
jge
mov
test
outsb
jmp
mov
jae
outsb
pop
sti
iret
mov
mov
das
ror
inc
xchg
jb
cmp
mov
sarb
js
mov
push
mov
or
mov
xchg
sarb
cmpl
push
jle
adcb
inc
sbb
leave
push
adc
dec
rol
or
push
cli
sbb
add
adc
bound
sbb
dec
pop
pusha
or
andl
jbe
push
out
lods
sbb
xlat
sub
xchg
shrl
cld
mov
adc
hlt
jg
divl
push
sbb
sbb
sub
push
icebp
test
movsb
pop
sbb
cmpsb
lret
mov
pop
mov
jp
adcb
push
cmp
scas
loopne
shrl
mov
xchg
and
push
cmp
jmp
sub
imul
cmp
dec
in
sbb
dec
mov
jne
mov
mov
lock
mov
xchg
inc
xchg
icebp
daa
or
mov
cmp
imul
xchg
push
push
cmovge
fistpl
cmp
ljmp
imul
aad
sbb
inc
fsubr
or
pop
into
rorb
leave
adc
mov
inc
aaa
or
xor
loope
cmp
or
or
sbb
jle
insl
mov
cs
mov
mov
dec
push
movsl
add
rcll
enter
sub
add
push
fstps
imul
push
lret
adc
pop
ljmp
outsb
pop
push
mov
mov
pop
lahf
nop
add
lcall
mov
fcompl
cmp
loope
inc
scas
or
sahf
cmp
mov
jae
out
jp
and
jne
xor
shll
das
rcll
call
dec
cmc
out
xor
push
aad
add
dec
mov
stc
test
in
dec
jne
mov
jle
aas
add
inc
stos
adc
scas
repz
jl
inc
xchg
cmp
mov
pop
ds
rolb
inc
mov
jmp
aaa
cld
add
add
ds
push
sti
inc
mov
or
fdivrs
mov
outsl
orl
cld
cmovne
add
mov
or
mov
inc
or
adcl
dec
outsb
add
push
cmpsl
pop
dec
sbb
adc
or
aam
mov
movsl
dec
pop
adc
dec
and
punpcklbw
arpl
jecxz
loop
pop
pop
inc
mov
ja
and
sahf
popf
dec
imul
fsubrs
mov
popa
push
lods
mov
pop
outsl
fwait
sbb
movsb
out
fidivs
ds
mov
fcomip
lahf
xor
mov
mov
popa
sub
add
andb
leave
cmc
scas
lret
and
insl
mov
jo
es
inc
out
cmpsb
jnp
call
cmp
mov
jle
jge
mov
insl
inc
dec
jg,pn
ret
shrb
inc
clc
inc
outsb
lds
inc
xor
sub
xchg
insl
xchg
ss
lret
fsubrs
lods
rorb
add
mov
push
les
rcrb
dec
mov
rorb
sar
or
xchg
lret
int
inc
push
mov
imul
pushw
sbb
sbb
sub
fistl
mov
mov
dec
popf
pop
loope
dec
pusha
push
pop
mov
cwtl
popa
dec
fwait
sbb
bound
and
lock
movsl
dec
and
jnp
jl
bound
sbb
popa
push
and
fisubrl
fsubrl
pushf
lods
push
icebp
push
out
adc
scas
pop
ljmp
mov
popa
xor
xor
jbe
and
aas
in
fdivrl
in
lods
negl
inc
cmpsb
mov
or
xor
mov
sub
int
aas
cmc
ds
mov
jp
sub
jl
push
ja
xor
test
xlat
ss
decl
mov
or
lods
inc
sub
int
mov
mov
adc
jge
inc
jb
sarb
push
or
xchg
mov
push
mov
jecxz
push
int3
adc
fmuls
xchg
test
leave
out
cs
xor
movsl
int3
popf
mov
pop
add
pop
pop
pusha
and
and
pop
push
dec
and
xchg
and
popf
xchg
dec
mov
call
aaa
xlat
test
sbb
imul
stos
dec
in
lcall
pop
das
in
dec
jno
push
icebp
daa
lock
sub
mov
popa
repnz
sub
ret
mov
testl
scas
inc
and
jno
daa
cli
add
xlat
jae
jmp
cwtl
jne
or
ds
cmp
jle
idivb
sbb
lahf
xorb
sbbl
cmpsb
cmp
inc
jl
popa
jg
cmc
or
test
dec
sub
add
mov
mov
and
call
sbb
rcl
shr
push
jecxz
xchg
int3
xchg
outsb
iret
push
inc
pop
or
inc
sbb
pop
pop
mov
js
sbb
sbb
popf
cmp
sbb
cmp
pop
popa
push
push
mov
push
inc
pop
push
cmpsb
pusha
mov
test
adc
fnsetpm(287
cld
addr16
out
sub
push
test
push
call
stos
mov
cltd
insb
and
scas
mov
add
jge
lock
pop
repnz
icebp
inc
xor
loope
imul
mov
fs
cmp
jbe
mov
sahf
cmp
das
js
mov
xor
mov
cmp
jg
fs
add
jle
rcr
inc
testl
iret
push
inc
pop
inc
std
jmp
pop
enter
int3
xor
ss
decl
mov
sbb
or
nopl
pusha
adc
jge
inc
pop
shl
aas
push
or
xchg
xchg
add
adc
les
fmuls
pop
sub
in
sbb
sbb
pop
dec
add
rcrb
stos
pop
sub
push
ret
lods
mov
xchg
pop
outsl
cltd
xchg
loop
and
and
shll
repz
xchg
movsb
xor
adc
mov
xlat
push
sub
sbb
loope
mov
lock
jp
cmp
scas
lods
cld
icebp
popf
jo
outsl
jge
mov
pushl
hlt
mul
xor
mov
inc
arpl
add
aaa
dec
ss
fidivrs
or
stc
std
jo
xchg
cli
loop
out
jg
cld
mov
pop
in
popa
mov
dec
inc
sub
int3
add
outsl
cmpb
dec
inc
xor
inc
cld
inc
nop
mov
adc
mov
add
xchg
add
push
push
sbb
inc
mov
rcr
cmp
test
mov
push
xor
rcl
rclb
xchg
inc
sahf
cli
adc
xor
push
sub
push
pop
pop
push
push
pop
iret
sbb
pop
pop
inc
pop
dec
fisttpll
pop
mov
rcrl
pop
pop
int3
fists
mov
scas
and
mov
push
xchg
adc
fsub
in
sub
out
popa
cmp
jne
std
jmp
shl
cltd
sub
fucomi
mov
mov
cs
xor
sbb
xor
pop
mov
loopne
jbe
inc
cmp
cmp
inc
sbb
stos
cmc
cli
cmp
cmp
pop
cmp
call
jmp
ds
stos
mov
insb
jg
jle
mov
das
addb
xor
inc
test
add
inc
mov
std
mov
pushf
mov
leave
test
mov
mov
les
dec
orb
push
sti
push
inc
or
rcl
mov
sbb
adc
push
dec
int
push
es
push
and
push
pop
int3
adc
push
dec
fadds
push
fcomps
nop
pop
cltd
xchg
jge
lcall
repz
in
stos
movsl
test
ljmp
mov
stos
subl
jno,pn
push
fs
es
sub
cs
xor
jbe
sub
mov
add
inc
stc
pop
inc
push
out
xor
inc
das
mov
jae
push
cmp
ja
cli
mov
repz
jnp
inc
je
int
xor
xorw
fldl2e
into
sbb
sbb
pop
jle
lods
fsts
xchg
xchg
add
inc
jbe
leave
xchg
leave
dec
jno
mov
adc
lds
push
push
out
pop
lret
add
and
imul
mov
jge
adc
pop
imul
mov
pop
xchg
test
adc
push
fs
xor
sub
sub
stos
xchg
notl
sbb
push
jl
lahf
sbb
adc
and
in
mov
and
mov
les
jecxz
inc
inc
jae
sub
jbe
or
daa
sahf
daa
jp
cld
xor
scas
ds
jo
das
lahf
xchg
lock
jle
les
popf
mov
jl
xor
dec
cmc
and
nop
div
adc
xor
in
div
test
sarl
mov
inc
sub
jle
ds
fimuls
ds
fcoms
xchg
mov
rorl
xorb
addr16
adc
arpl
xchg
xlat
add
fstps
xchg
cwtl
shll
sbb
cli
loop
xlat
sbb
push
fcmovnbe
lods
pusha
fisubrs
pop
sub
pop
cmp
es
in
or
sbb
pop
dec
xorl
jo
repnz
cltd
ljmp
clc
pop
sbb
fcoml
fcompp
cmpsl
call
and
mull
movl
dec
fs
lret
aad
stos
cmpsl
jge
adc
jmp
sub
sub
xor
push
shll
lods
add
in
movsb
xchg
mov
test
push
cmp
daa
pop
xor
cld
shll
imul
adc
cmp
out
ja
add
fdivrs
test
mov
inc
push
jnp
push
adcb
les
add
dec
push
cmpb
inc
push
sbb
mov
leave
leave
faddl
jge
mov
sahf
enter
inc
lret
mov
dec
pop
xchg
jns
addb
and
fcoml
in
add
dec
pop
fisubrl
inc
rcll
test
lret
pop
stos
adc
popf
push
adc
fldl2e
pop
out
push
dec
loope
mov
enter
jo
or
lcall
xchg
out
pop
and
mov
clc
mov
xchg
sub
push
mov
scas
in
and
jge
cli
jno
cmpsl
pop
push
jae
test
or
mov
in
jne
jne
testb
cmp
xchg
jp
icebp
sub
mov
cmp
cmc
jle
sti
add
int3
das
mov
sarl
sbb
repz
mov
xchg
adc
inc
dec
pop
fmuls
mov
dec
add
mov
dec
in
mov
rclb
enter
push
cmpsl
loope
loope
push
orl
jecxz
xor
dec
pop
insb
and
push
fsubrl
pop
daa
nop
sbb
ljmp
and
sub
in
push
scas
push
and
pop
sub
data16
and
fistpl
fwait
jmp
sbb
jne
pop
pop
push
lahf
insl
mov
ret
lock
lock
inc
cmp
cmp
jns
xor
xor
int3
pop
test
enter
ljmp
lret
in
xor
clc
int
gs
mov
xor
add
cmp
jae
xchg
mov
mov
and
inc
adc
jns
clc
leave
push
adc
add
mov
dec
cltd
push
inc
inc
cmp
repz
fcoml
insl
call
add
adc
or
inc
data16
adcl
mov
movsl
pop
or
and
and
pop
rorb
and
int3
ret
dec
pop
sub
or
lds
insl
es
pop
outsb
adc
aas
shll
test
nop
xchg
sub
out
cltd
sti
cmpsl
inc
pushf
cwtl
mov
ljmp
iret
pop
insb
aaa
xor
cmp
jns
and
fnsave
mov
jl
push
fbstp
and
and
add
stos
shl
imul
call
inc
movsb
sbb
cmp
pop
cmpsl
mov
cmpsl
sub
jb
dec
imul
add
shll
mov
or
or
xor
xor
and
cmp
into
rclb
shl
stc
rcrl
xchg
cltd
xchg
test
cld
repz
fwait
xchg
inc
push
jge
lea
adcl
ja
fisubl
dec
or
lds
push
pop
inc
js
test
fs
push
pop
xchg
jbe
mov
or
dec
in
and
mov
xor
in
in
lods
dec
test
sub
out
pop
push
shrl
in
pop
mov
adc
adc
xor
pop
pop
adc
int
xor
iret
pop
jae
xor
cwtl
sbb
dec
mov
lock
sbb
cmc
push
inc
pop
cmp
daa
sub
jecxz
mov
cmp
jb
push
cld
in
frstor
add
icebp
ds
mov
push
dec
test
xorb
je
lods
dec
or
mov
lods
mov
out
int
pop
cli
iret
xor
or
xor
jae
mov
into
or
or
xlat
pop
adc
adc
pop
mov
pop
cltd
push
add
cld
repz
fwait
xchg
xchg
mov
inc
adc
add
and
or
inc
jns
jecxz
sbb
sbb
mov
push
and
call
or
mov
test
adc
jmp
push
pop
adc
scas
ret
jne
pop
ds
sbb
xchg
jb
jmp
lret
xor
pop
repz
int3
push
aaa
xor
and
mov
jg
and
xor
cmp
cld
popf
aad
inc
jge
movsl
sub
mov
js
imul
sub
jecxz
inc
sti
sub
add
cmp
push
addr16
jg
jb
push
test
subl
inc
sub
lea
jo
repnz
sub
mov
mov
or
lods
aaa
sbb
cmp
addb
aam
xchg
mov
movsb
pop
push
or
xchg
testl
ret
test
ret
adc
sub
sbb
mov
scas
es
adc
dec
pushf
add
popa
mov
mov
iret
push
jae
sbb
into
roll
lods
cmpsb
cltd
data16
sub
pop
icebp
xchg
lret
jb
sbb
adc
insl
pop
mov
add
and
mov
les
xor
xor
adc
popf
rcll
mov
push
loope
mov
out
xchg
jecxz
add
out
ret
and
in
add
lock
popfw
out
push
pushl
sub
imul
stos
push
or
xor
fimull
je
push
mov
xor
sti
pusha
xor
jb
xchg
mov
xchg
jns
adc
add
ss
mull
aas
add
test
bnd
lcall
mov
jg
jbe
lods
pop
sbb
stc
xorb
leave
lea
cmp
repz
dec
out
mov
pop
lea
dec
xchg
xor
jne
adc
cmp
and
in
lds
sub
nop
add
pop
push
xorb
mov
or
xchg
das
and
cwtl
out
cltd
or
fs
adc
data16
push
fmulp
mov
adc
stos
mov
push
add
adc
jp
jp
mov
movsb
xchg
les
fld
mov
test
enter
ljmp
adc
rcll
int
mov
mov
shl
push
mov
push
jae
jecxz
call
jne
or
xor
clc
inc
outsl
pushf
cmp
lods
mov
mov
cld
xor
stc
and
repz
es
mov
shlb
out
int3
stc
retw
enter
jmp
cmp
inc
mov
dec
xchg
mov
cmp
fldl
jg
iret
imul
lock
cmp
inc
inc
fidivrs
push
add
fstps
cmp
push
sub
push
or
xchg
iret
aaa
lods
scas
neg
sarl
sbb
roll
mov
std
lods
lods
push
xor
in
aad
sahf
jmp
pop
xor
dec
in
add
fidivs
mov
and
scas
sub
cmp
or
shrl
mov
jle
fisttpll
roll
lea
or
ucomiss
xor
cltd
xchg
or
movsl
aam
or
cmc
enter
call
jg
or
sub
cmp
popf
cli
lods
pop
mov
and
cmp
std
ret
add
xor
push
pop
and
in
in
fiadds
mov
add
sub
cmp
ret
loopne
cmpsl
pop
mov
and
mov
cmpsl
dec
ljmp
out
daa
mov
push
adc
lods
push
add
mov
shll
das
aam
xor
mov
pop
mov
jbe
scas
cmp
mov
cwtl
mov
fstp
jbe
or
push
fs
push
jnp
popl
iretw
test
push
inc
ret
push
vcmpps
cmpsl
inc
cmpsb
push
inc
data16
push
insl
sub
sub
lret
insl
mov
test
inc
pop
or
fcoml
sub
sbb
xor
mov
push
jo
cmc
cmp
xchg
repz
pop
mov
sbb
xor
jns
clc
fs
mov
cmp
pop
adc
cmp
cwtl
std
gs
mov
mov
dec
or
fstl
loop
dec
mov
lahf
add
and
pop
repz
ret
cmpsb
push
lds
cmp
pop
popa
repnz
dec
cmpsb
dec
ss
or
dec
jb
shrb
into
jbe
lea
mov
mov
xchg
cmp
xlat
push
jo
jl
aad
sbb
inc
mov
jbe
sbb
cmp
je
fwait
dec
mov
xor
inc
cmp
aaa
leave
lcall
mov
and
xchg
dec
add
sub
sub
or
gs
call
pop
outsb
in
sub
lret
ljmp
inc
rorl
and
jae
out
aad
scas
and
jno
adc
pop
xor
mov
mov
pop
jne
jns
jbe
xlat
sbb
pop
pop
js
jl
mov
into
aam
fwait
sti
xlat
mov
mov
jecxz
loop
faddl
loope
roll
and
pop
movsb
jecxz
shr
inc
pop
leave
loope
out
add
dec
and
ljmp
or
sub
mov
insb
int3
or
mov
out
dec
push
adc
mov
rclb
ljmp
outsl
adc
ss
cmp
dec
mov
inc
sub
xor
cwtl
ds
pop
in
pop
mov
mov
fnstsw
cmp
jl
popf
cmp
flds
mov
dec
ret
bound
ret
and
in
inc
movsb
inc
add
sub
jno
push
test
sub
jmp
jo
in
dec
mov
popl
pop
dec
ucomiss
xchg
notl
push
jo
hlt
push
cmp
iret
xor
repz
jbe
xor
dec
dec
dec
push
jne
sbb
sbb
aam
aad
clc
and
insb
push
jp
sbb
and
xchg
xchg
pop
mov
test
jg
loopne
sbb
popf
add
mov
cmpsb
pop
sbb
test
pop
pop
daa
pop
sub
pop
iret
in
ljmp
sahf
imul
push
sub
into
nop
std
xchg
stos
push
in
mov
dec
push
fisubl
xor
dec
pop
cmp
sti
xchg
sub
push
or
jb
cmp
push
aas
fwait
cs
pushf
repz
shlb
loop
add
cli
cmp
popa
add
jecxz
ljmp
dec
cmp
mov
lock
dec
jnp
mov
push
iret
sub
jmp
nop
lods
outsl
hlt
dec
lods
add
insl
mov
xor
mov
inc
push
scas
jae
jbe
into
xor
shl
xor
pop
stc
sbb
xor
aaa
incb
xchg
mov
mov
jns
fidivrl
jmp
sti
fiadds
mov
mov
ds
add
enter
popa
shl
adcb
adcl
jecxz
or
push
es
and
xchg
stos
dec
fwait
push
mov
es
pushf
sub
jae
movsl
fisubrs
jno
sub
and
fnstcw
xor
push
rcrb
adc
xor
adc
lcall
rcr
jge
and
insb
cmp
inc
lods
mov
mov
loop
cmp
sub
pop
repnz
mov
lret
push
or
enter
mov
and
test
sub
add
or
sub
test
jl
cmpsb
dec
test
xor
insb
cmpsb
int
jg
out
loope
scas
test
cmp
xchg
icebp
cmp
mov
adc
cmp
les
mull
mov
cmp
ret
push
jp
sbb
jb
ret
cwtl
std
mov
dec
push
mov
and
sub
inc
push
int
inc
push
movsb
add
xchg
cmp
pop
pop
adc
xchg
in
dec
jmp
movsb
dec
xlat
imul
out
mov
dec
in
adc
sbb
into
loop
and
nop
fdivl
mov
outsb
adc
pushf
adc
call
sbb
sbb
xor
and
xchg
fcmovb
pop
jecxz
sbb
ficoml
out
cmc
and
pop
xchg
sahf
andl
fildll
aas
sahf
push
loope
gs
popa
stos
shll
and
imul
outsl
shll
xchg
dec
dec
cmpsl
lcall
push
fwait
push
jge
xor
or
aas
testl
pop
shr
sarb
lock
nop
scas
add
add
add
hlt
mov
nop
cmc
jl
mov
pop
jbe
inc
adc
fdivs
jmp
adcl
sbb
push
pop
jnp
jge
orb
xchg
cmp
enter
pop
lret
ss
dec
filds
arpl
xor
lds
test
out
repnz
seto
lcall
mov
mov
or
push
push
in
iret
xchg
mov
dec
ljmp
push
xor
call
lock
pop
cmc
push
out
push
imul
outsl
sbb
xlat
in
cwtl
dec
mov
ret
negl
mov
push
jne
int
stos
jnp
jecxz
pusha
sbb
fs
loop
mov
cmp
es
xor
daa
daa
xchg
aad
test
mov
test
sub
mov
mov
rcll
scas
outsl
movd
adc
add
xor
icebp
int
mov
xor
xor
push
mov
pop
ja
add
js
sbb
xchg
add
pop
mov
or
jge
fidivrs
jg
loopne
add
lea
shll
cmpl
add
test
xchg
and
adc
xchg
fadd
and
mov
lret
fsubs
int3
dec
in
mov
test
mov
fcoms
and
mov
nop
mov
push
add
shrl
xchg
push
ret
push
notb
xlat
pop
orb
xchg
cmp
imul
xchg
mov
iret
inc
fstl
cmp
scas
adc
and
mov
nop
call
inc
arpl
movsb
sub
and
in
jne
test
or
cli
sub
repnz
test
stos
fwait
cmp
jl
insl
adc
xor
aad
jp
xorl
jnp
das
ja
and
xor
inc
out
js
pop
sbb
aas
dec
inc
jns
gs
pushf
fwait
inc
inc
push
neg
jnp
cmp
and
adc
inc
enter
and
adc
dec
xchg
dec
jb
xchg
test
int3
sbb
pop
mov
rclb
pop
or
xor
pop
mov
scas
je
push
aam
lahf
shlb
xor
nop
movsb
adc
push
gs
repz
push
xchg
fcoms
sbb
pop
push
into
imul
nop
test
repnz
fwait
aas
pop
xor
pop
pop
outsb
pop
jb
jbe
mov
xchg
jnp
loope
imul
mov
inc
pop
imulb
leave
scas
arpl
mov
mov
dec
jns
mov
mov
icebp
rorb
mov
sub
outsb
mov
das
push
dec
mov
jo
lea
push
or
stc
push
je
cs
pop
sbb
mov
js
mov
popf
test
aaa
mov
cmp
xchg
in
jne
out
sbb
mull
jo
xchg
jg
ret
push
dec
cli
pusha
ja
pop
sbbl
push
xchg
ds
mov
std
xchg
pop
sbb
leave
jecxz
push
jnp
and
xchg
mov
add
or
inc
dec
push
and
nop
mov
cld
xchg
sbb
mov
push
aaa
scas
adc
inc
xchg
lock
dec
adcb
arpl
pop
dec
sbb
add
and
jmp
sahf
mov
icebp
addr16
push
cmp
push
pusha
shlb
ss
les
mov
sbb
dec
jnp
sahf
cmp
dec
dec
and
jle
test
cmp
mov
insl
insl
inc
adcb
add
mov
jp
xchg
pop
lret
xchg
push
add
lret
imul
push
push
negb
xchg
dec
mull
into
cmp
inc
sub
sarl
movsb
lret
dec
pop
jnp
ret
mov
pusha
dec
push
adc
sbb
push
rclb
ret
adcb
dec
jle
fwait
test
pop
sbb
nop
rcrb
dec
pop
mov
mov
cltd
or
mov
pop
mov
jbe
nop
call
or
xchg
dec
adc
push
or
push
fsubrl
int
adc
stos
cmp
jo
push
jae
mov
pop
cli
int3
cltd
sbb
xchg
shr
cld
mov
pop
fidivs
sarb
roll
loope
jo
std
push
in
je
dec
jmp
and
out
mov
add
adc
jb
jmp
outsl
inc
sub
pop
ja
xchg
xchg
add
scas
test
subl
or
xchg
or
xchg
pop
jne
pop
hlt
dec
lahf
jecxz
das
xchg
ss
js
pop
notl
out
insb
mov
inc
lcall
sbb
dec
or
stc
pusha
and
mov
push
pop
inc
aam
xchg
rcr
and
testl
es
xchg
dec
xor
repnz
adc
imul
adc
adc
xchg
and
int
divb
xchg
and
and
stc
sbb
into
push
fldt
pop
jb
ss
popf
cwtl
xchg
pop
sbb
pop
xor
out
cmc
stos
pop
aas
ficompl
lcall
mov
jmp
gs
pushf
sti
adc
loope
mov
pusha
outsl
rolb
movsl
mov
xor
aaa
test
sbb
addl
addr16
cmp
or
xchg
in
mov
xchg
out
xchg
mov
xchg
sub
into
xor
mov
xor
mov
cmc
dec
inc
sbb
sbb
inc
lret
lret
or
jp
hlt
and
test
xor
sbb
add
je
fnstcw
lods
dec
dec
loop
and
pusha
add
adc
pusha
ror
xchg
test
repz
mov
dec
jbe
or
mov
pop
lods
das
sti
outsl
lea
xor
adc
rcrl
imul
adc
aam
adc
enter
push
xor
stc
pop
dec
mov
stos
popa
jnp
loop
fistpll
ds
xchg
pop
mov
mov
shl
andb
loop
mov
fs
and
fidivs
sub
sub
arpl
and
shlb
xchg
xor
inc
sub
shrl
xchg
xor
push
je
dec
repnz
mov
xor
fwait
stc
cwtl
ss
push
aaa
jns
clc
cmp
mov
jge
mov
push
cld
inc
fistpll
andb
add
fcmovnb
sbb
fsubrl
test
lds
popa
cmpsl
jecxz
xchg
or
mov
or
repnz
sbb
fisubrl
xchg
dec
xchg
sub
mov
xor
xor
mov
mov
pop
insl
xchg
fidivs
push
lahf
notl
bound
sbb
cltd
test
pop
popf
daa
inc
sahf
call
dec
sbb
and
inc
lock
mov
ret
inc
movsb
das
add
stc
mov
movsl
mov
data16
xchg
stos
xchg
mov
ljmp
inc
outsb
int
adc
mov
xchg
das
cmpb
xor
mov
xchg
jno
xchg
xor
loop
jg
mov
notl
mov
nop
jbe
cltd
aaa
mov
jns
inc
xchg
mov
addr16
cmp
add
push
out
sbb
addr16
and
pop
shrl
or
adc
xchg
and
addr16
cmpsl
mov
insb
dec
mov
jo
lea
or
or
dec
sbb
shr
into
xor
fidivs
xor
xor
push
push
in
adc
shl
lods
sarl
adc
outsl
push
mov
fs
stc
xlat
sbb
mov
fildl
sub
sbb
mov
and
sarb
pop
bound
icebp
andb
add
add
xorl
imul
or
xor
out
jo
insb
repz
jmp
daa
leave
mov
or
inc
sub
lea
dec
pop
in
lea
lods
and
jb
adc
xchg
add
jnp
rcrl
jae
push
rcr
mov
dec
inc
ffree
cltd
ja
xchg
ja
mov
out
mov
loop
sub
lods
dec
pusha
lahf
jmp
mov
and
int
push
call
mov
push
mov
shrb
pop
cmc
adc
imul
stos
leave
push
ja
aam
dec
nop
and
pop
movsb
xor
out
stos
das
popl
rcll
scas
adc
jb
mov
aam
cli
push
sbb
inc
xchg
pop
mov
std
popa
cli
pop
jmp
jle
inc
push
mov
into
cmp
arpl
cmpsb
imul
fbld
inc
imul
popa
arpl
loop
xor
mov
and
jnp
iret
pop
leave
cmpsb
dec
stos
push
push
inc
sub
adcl
inc
insb
test
enter
dec
sub
and
out
xchg
and
mov
repnz
out
cmc
dec
xor
push
pop
jmp
clc
sbb
sub
ja
and
mov
sbb
neg
jl
ds
sbb
inc
jg
pop
sub
les
add
call
push
imul
jmp
gs
sub
jmp
or
push
mov
movsb
in
lret
out
or
jg
or
jo
xlat
jno
shl
push
mov
popa
jb
loop
insl
sub
mov
jg
pop
xchg
outsb
iret
dec
es
fistpll
cltd
mov
mov
sub
fsubs
out
popf
add
xor
and
test
aaa
mov
mov
in
aas
es
push
and
repnz
daa
shrb
mov
in
xor
loopne
lds
inc
data16
scas
adc
cli
sub
jnp
jno
std
std
jo
mov
das
mov
push
dec
lahf
mov
push
inc
data16
mov
ret
jmp
inc
cmpsl
cli
out
jmp
xchg
std
loopne
and
loope
fildl
fnstsw
dec
mov
shrl
xchg
aad
mov
fwait
and
nop
fsqrt
addl
add
loop
loopne
adc
pop
aad
lcall
mov
lret
rcl
sub
stos
adc
insb
aam
sub
scas
push
in
outsl
xlat
xchg
xor
mov
ljmp
hlt
pop
fidivs
ss
out
pop
outsb
jmp
jmp
mov
jns
stos
sub
in
scas
stos
gs
aas
out
outsw
add
jno
test
dec
cmc
sbb
jge
lahf
ljmp
inc
lods
mov
in
push
es
cs
cli
sbb
xor
jge
xor
and
xor
and
push
mov
jecxz
push
inc
in
mov
in
dec
out
mov
mov
mov
jnp
pop
ljmp
add
or
dec
sbb
shlb
push
out
rorb
pop
addr16
das
and
dec
push
lret
dec
mov
mov
pop
or
rcll
xchg
lock
in
xor
push
inc
mov
mov
xchg
cwtl
loope
pop
outsb
fldt
sahf
les
mov
shrl
loop
in
sbb
and
arpl
rcrl
in
loop
and
cltd
ret
pop
and
cmp
xor
and
pop
mov
sti
mov
insb
sub
mov
das
jae,pt
jge
scas
mov
movsl
jge
movsb
ret
cs
jge
push
jge
pop
rol
leave
xchg
jp
movl
xor
stc
fsubrs
sarl
out
stc
push
or
xor
xchg
push
inc
add
mov
cmp
add
lret
jecxz
lds
jge
sbb
scas
pop
xchg
jp
loop
push
pop
mov
pusha
lods
xor
cmp
cmp
sub
je
lea
daa
in
cwtl
lret
mov
adc
or
dec
shlb
fsubs
push
sbb
lret
mov
data16
pop
mov
cs
dec
mov
pop
sbb
je
lahf
xor
es
out
addr16
cltd
and
lcall
daa
jp
lods
pop
or
aaa
ret
mov
mov
sub
imul
jno
jecxz
fildll
popf
xor
gs
push
inc
loop
inc
in
jmp
adc
subb
lcall
outsb
dec
lods
xchg
stos
gs
pop
add
lahf
fs
pushf
jne
or
jbe
je
stos
sarl
iret
aaa
inc
cmp
cmp
sbb
inc
sub
mov
icebp
mov
mov
dec
test
psubusw
dec
ljmp
ficoml
adc
xchg
cmp
cmp
mov
pop
xchg
test
dec
adc
popf
sub
in
push
and
cwtl
or
mov
cmp
push
aam
faddl
push
call
add
lods
and
cmc
mov
mov
cmp
jp
shlb
mov
arpl
jp
inc
dec
out
adc
sub
sub
mov
and
mov
sub
mov
outsl
jo
rcrl
repnz
jae
dec
xor
imul
push
mov
divb
test
ja
and
sub
or
cmp
mov
pusha
sub
enter
imul
je
and
out
inc
loope
mov
addr16
sbb
xchg
cmp
xchg
pop
dec
pop
mov
insl
pop
pop
andl
xchg
push
gs
out
femms
into
repnz
mov
jno
mov
insl
aam
lods
sub
movsb
out
fistps
out
sbb
cwtl
punpckhbw
or
loopne
bound
sbb
in
aaa
in
inc
cmp
pop
loopne
sahf
or
sub
mov
jl
sub
and
out
in
jecxz
sub
mov
call
add
mov
sub
xor
inc
out
scas
in
sahf
out
push
xor
divb
mov
clc
xor
out
xor
shl
sbb
mov
ja
adc
push
outsl
cli
adc
add
adc
rcll
dec
popf
ret
fstpt
decl
and
aad
shll
lret
push
sbb
repz
mov
or
sbb
or
pop
pushf
dec
inc
popf
or
or
mov
fucom
inc
and
nop
mov
gs
xlat
int
mov
popfw
and
jl
xchg
cmc
mov
sbb
scas
fimuls
jb
icebp
xchg
xlat
or
repz
jnp
pop
pop
jmp
push
mov
jge
inc
pushf
in
ja
gs
daa
push
lock
cmc
bound
mov
jle
ja
dec
and
jmp
clc
xchg
daa
inc
out
sub
clc
sub
test
stos
cmc
dec
imul
mov
cmpsl
and
mov
insl
jno
push
pushf
not
dec
ja
or
icebp
and
jae
lock
into
or
pop
aad
movsb
push
jbe
pop
mov
jns
lock
mov
jle
repnz
shrb
jle
cmp
andb
xchg
inc
fs
inc
mull
pop
xchg
test
sahf
xlat
test
fadds
mov
loope
adc
mov
or
in
sbb
sub
or
dec
nopl
adc
stos
movsbl
sar
jne
daa
pushf
dec
rcll
xor
ss
push
cmp
push
cmp
mov
enter
scas
sub
es
jle
jle
popf
sub
sub
sub
out
sub
jnp
mull
xor
or
stc
scas
ret
scas
lock
cmpsl
lret
mov
imul
xchg
xor
xor
insl
jbe
scas
ret
aaa
inc
das
int3
inc
sbb
jp
mov
jne
ja
movsl
jae
loop
mov
repz
mov
fiadds
test
sub
scas
or
cld
xchg
call
adc
xlat
lahf
sub
fldenv
ret
dec
daa
vmovups
pop
sbb
outsl
psubsw
aaa
inc
jecxz
test
shlb
mov
cmp
aad
lret
push
fists
dec
cmp
jno
lea
inc
test
movsl
shlb
xchg
xchg
filds
lcall
fmull
and
mov
inc
adc
pop
adc
outsl
das
in
popa
jo
jns
xor
fst
gs
test
jns
call
fisubs
sbbb
mov
sub
jb
stc
xor
repnz
es
fisubrl
pop
sub
mov
push
insb
xchg
mov
jno
mov
mov
outsb
sti
sub
jns
xchg
jno
dec
jl
je
je
mov
adc
add
mov
aaa
test
int
inc
sbb
sbb
je
in
movb
loop
int
pop
loopne
push
mov
mov
dec
mov
mov
mov
adc
jnp
cmovns
out
fldl
or
sub
push
inc
dec
pop
adc
lea
ret
pop
mov
iret
adc
imul
xchg
sbb
xor
sbb
pop
insb
sahf
push
or
mov
fst
and
xchg
fdivr
xchg
mov
cmp
aad
insb
test
mov
jno
loop
mov
loope
cmpsl
adc
jmp
jmp
lds
out
data16
call
or
scas
lret
mov
add
repnz
test
pop
negl
std
xchg
cmp
in
jb
in
mov
jo
cmp
std
mov
stos
fstpl
lods
dec
mov
mov
dec
cmpsb
mov
or
fdivrs
sbb
cmp
jne
push
mov
int3
stos
xchg
add
push
inc
xor
push
mov
and
adc
into
shr
loop
push
fcomps
adc
mov
adc
mov
out
sbb
aad
cmovb
movsl
or
int
sub
mov
orb
arpl
lea
mov
imulb
lods
stos
aam
into
xor
aad
jecxz
jbe
stos
pop
fildll
je
lcall
dec
sbb
xorb
inc
out
outsl
and
push
mulb
sub
ja
mov
out
mov
pop
inc
dec
cltd
inc
stos
scas
add
out
call
xor
xor
mov
fwait
xor
lretw
dec
and
inc
mov
sub
or
jnp
push
repnz
nop
iret
or
dec
jmp
sbb
aaa
jp
sbb
sbb
xchg
imul
add
and
rcrb
enter
loopne
mov
test
jno
ffree
in
mov
lock
mov
pop
leave
sarb
fidivl
and
dec
lret
cmpsl
lods
lock
in
push
pop
pusha
or
add
push
sbb
in
outsb
popa
push
sub
xchg
enter
in
pop
jmp
pop
stos
pop
jne
jns
fidivrl
lret
and
xor
arpl
and
fbld
jle
hlt
pop
shrb
lea
or
loope
shr
pop
add
fsubs
fcomps
jecxz
les
or
leave
ret
mov
shrl
jge
jl
stos
dec
shlb
inc
cmp
idivl
mov
cmp
mov
std
add
dec
fs
push
adc
xchg
cmp
cmpsb
repnz
cli
icebp
lea
fs
xchg
add
aam
pop
mov
aas
pop
add
fwait
or
js
sbb
in
aad
adcl
jmp
dec
mov
gs
jl
jecxz
pop
dec
push
insb
insb
scas
lea
aad
xchg
push
leave
in
jecxz
lcall
imul
daa
xchg
jae
mov
mov
jp
call
leave
xchg
xor
ss
inc
pop
imul
mov
out
scas
mov
cmp
dec
into
scas
insl
push
fbstp
dec
mov
iret
and
es
xchg
cmpsl
testl
and
data16
xchg
jb
adc
std
stc
insb
lods
ret
je
aaa
dec
xor
ret
ror
add
test
arpl
or
cmp
and
xor
movsl
insl
add
xor
sub
stos
aam
into
sbb
jnp
sbb
sbb
sbb
pop
add
pushf
push
push
mov
out
fwait
mov
jg
and
outsl
rcr
and
inc
shll
cmc
cmpsb
pusha
dec
bound
push
sub
leave
cmp
xchg
ljmp
arpl
enter
inc
int
or
jns
xchg
daa
fistpll
pop
push
sbb
in
mov
xor
iret
rorb
loop
pop
sub
xor
and
repz
sub
lahf
mulb
mov
cmc
add
cmp
pop
jb
and
dec
push
and
nop
and
sarl
out
in
pop
jmp
lret
sub
mov
jo
out
or
lock
outsl
mov
push
movsb
mov
icebp
aas
hlt
mulb
js
scas
push
stos
cmp
cmp
mov
jl
mov
dec
cmpb
mov
sar
mov
adc
ss
lcall
or
cmpl
je
mov
mov
addb
mov
jp
addb
lcall
dec
dec
test
cli
int3
inc
xchg
or
push
push
or
push
xchg
or
jmp
xor
frstor
test
xchg
mov
mov
icebp
imul
rolb
sub
sub
dec
repnz
out
rcr
cmp
push
ljmp
shl
cs
mov
sub
fsubrp
fldt
lock
pushf
fnsave
mov
bound
mov
loope
pop
jno
mov
pop
mov
addr16
dec
cs
xorl
clc
or
mov
mov
cli
and
sarb
lock
mov
and
fistpll
dec
push
std
and
jne
out
and
jnp
lret
mov
test
leave
les
jle
inc
negb
rcr
std
adc
movb
inc
pop
fsin
dec
pop
mov
aas
scas
mov
popa
add
pop
add
jl
and
dec
mov
or
mov
rcrb
mov
sbb
pushf
dec
clc
xchg
loopne
adc
das
sahf
sbb
arpl
scas
jno
ss
pop
adc
loope
push
ljmp
bnd
ficoml
xchg
or
imul
sub
callw
jl
scas
and
pusha
add
les
in
sbb
fwait
pushf
fdiv
pop
in
or
xor
cs
mov
scas
and
xor
cwtl
jecxz
jecxz
inc
in
insb
pop
mov
movsl
aaa
lahf
smsw
ja
stc
cmp
jmp
jl
out
pop
xor
or
lds
dec
lret
lods
mov
or
shlb
mov
inc
dec
hlt
inc
inc
fninit
cmc
sarl
jne
jns
adc
ror
xchg
xorb
dec
jp
mov
push
inc
je
mov
cmp
mov
ret
adcb
aam
aam
xchg
xchg
add
xchg
lret
fwait
les
push
cltd
test
ret
cmp
adcb
lret
stc
loop
and
or
dec
scas
mov
hlt
clc
into
daa
mov
jnp
nop
push
lds
in
rcll
push
lock
jb
adc
adc
in
negb
fiaddl
push
ja
xchg
cltd
sbb
pop
popf
lods
fcompl
jns
sub
pop
sbb
ljmp
mov
in
mov
test
addr16
add
mov
insb
sub
shl
push
lods
das
out
gs
mov
out
test
call
lods
adc
out
add
sub
lock
iret
das
outsb
aam
cld
mov
ja
mov
cwtl
cmp
ja
icebp
loopne
pushf
popf
sbb
mov
mov
pusha
jns
sub
mov
cmpsl
cmp
mov
out
loope
add
add
orl
and
popa
pop
xchg
sbb
lret
add
shl
mov
rcl
int
lahf
cmp
push
aad
pushf
add
imul
push
mov
sub
sbb
nop
and
imul
xor
xchg
and
push
pop
aad
push
sub
sbb
push
cmp
pop
sbb
mov
mov
jl
mov
mov
mov
cmp
mov
loope
pusha
dec
or
cmpsl
push
sub
lock
mov
sub
imul
mov
mov
cmp
je
cmp
cmp
jbe
mov
xor
xor
fs
xor
mov
cmp
mul
cmp
roll
lahf
jp
bound
negb
mov
xchg
flds
rorl
pop
xchg
in
les
fwait
lea
xor
gs
popa
push
leave
bound
dec
sub
mov
push
shll
in
inc
push
xchg
adc
mov
cwtl
ljmp
push
in
adc
loop
cmp
mov
pop
inc
pop
rsqrtps
dec
out
in
mov
mov
ret
xchg
hlt
rclb
jae
xor
test
push
xor
pop
and
sbb
sbb
test
mov
lret
sbb
push
mov
popa
xor
cli
xor
sub
test
or
pop
insl
out
lods
cmp
iret
test
mov
mov
divb
inc
subl
nop
aas
mov
inc
adcl
xor
push
mov
sub
shll
cmp
sti
int3
mov
cmp
outsb
stc
xor
mov
add
cmp
call
cltd
lret
sbb
inc
xor
sbb
insl
out
ds
add
push
cmp
mov
inc
dec
push
fstpl
dec
and
mov
mov
int
mov
sti
decb
inc
lods
imul
mov
fstps
inc
fsubp
ret
in
push
cmpsl
push
test
jmp
xchg
movsl
inc
fwait
imul
pop
and
ljmpw
loope
jne
xchg
je
sbb
mov
mov
mov
bound
mov
bound
mov
test
in
mov
fs
push
xor
jbe
lods
divb
mov
ljmp
mov
clc
cmp
sub
aas
adc
xor
mov
cmp
out
addr16
dec
addr16
xorb
mov
testb
mov
inc
cmp
mov
jne
mov
idivl
pop
lcall
inc
or
or
decb
leave
hlt
cmp
aad
popa
pop
mov
popf
lret
jae,pt
orl
mov
xchg
ja
scas
test
ja
nop
inc
inc
sbb
jmp
adc
push
pop
dec
mov
push
aad
popf
jmp
sbb
test
negb
push
pop
negl
add
mov
cmp
jecxz
arpl
out
rcl
push
mov
jnp
nop
jecxz
inc
cwtl
xchg
push
ffree
inc
lcall
fistpl
int3
cmp
sahf
mov
test
and
lahf
cmpb
xchg
mov
sub
sub
mov
sub
xor
mov
les
test
stos
sub
jge
mov
inc
jbe
jo
outsl
sbb
mov
das
and
ds
jl
mov
enter
test
inc
pop
notb
notl
or
push
mov
imul
mov
flds
stos
pop
sub
out
mov
adc
mov
adc
xchg
repnz
fidivl
mov
push
cltd
fsubr
cltd
scas
push
lahf
xchg
rclb
pushf
xchg
sub
testl
pop
adc
and
shlb
pop
imul
inc
sbb
and
lcall
filds
mov
shlb
ljmp
popf
jle
jmp
in
push
cmp
into
sub
imul
sbb
and
mov
dec
into
jge
imul
xchg
fwait
bound
mov
lods
jnp
into
pop
sub
iret
jno
fucomi
and
mov
jnp
jl
or
mov
dec
clc
jl
jbe
pop
ljmp
in
push
repnz
cmp
xchg
fdivl
fistpll
sbb
jno
jecxz
aam
add
add
fidivrs
push
mov
or
push
sub
dec
and
enter
mov
icebp
mov
rol
loop
movsl
jecxz
movsl
notl
mov
jle
fs
add
sbb
lcall
jo
cmp
add
adc
fcompl
imul
cltd
jno
ficompl
sbbb
repnz
out
arpl
xor
cli
sub
repz
mov
daa
push
sub
scas
aam
shrl
gs
cmpsb
mov
insb
popa
mov
pop
add
and
jge,pn
shr
pop
clc
mov
cmp
lret
cld
cs
mov
test
mov
push
sarl
push
je
incl
sti
cmpsl
add
cmp
mov
pop
mov
and
cvtdq2ps
xchg
mov
aaa
jb
xchg
and
test
jnp
hlt
iret
fs
push
outsb
or
aas
mov
mov
mov
mov
rorb
fsubs
xchg
mov
push
nop
lock
or
sub
xchg
push
nop
add
ja
sub
pop
mov
call
jecxz
pop
in
mov
loopne
push
fldt
fwait
fcmovnu
movsb
les
lods
and
sub
lock
xor
and
inc
sub
data16
insl
test
test
inc
or
daa
xor
call
mov
jbe
sub
lds
push
cs
stos
out
dec
das
aad
test
movsb
cmp
jo
pop
repz
xor
jge
leave
mov
addb
rcrb
dec
cmpsb
incl
loop
xlat
pop
in
out
jbe
scas
dec
inc
rorl
lret
push
cwtl
pop
or
lahf
inc
dec
insb
adc
in
pop
add
push
mov
jmp
xchg
in
mov
push
jecxz
les
xchg
pop
sbb
push
adc
dec
lahf
push
push
cmp
into
jo
test
dec
sbb
xor
addr16
mov
sub
in
sbbl
je
mov
jmp
cmp
sbb
jg
pop
cmp
inc
loope
sub
cs
adc
lods
inc
and
mov
cmp
push
lds
xchg
lock
mov
leave
repz
aas
pop
lods
movb
sti
out
lret
adc
stos
icebp
adc
sar
jmp
jns
std
nop
cmc
enter
mov
xchg
mov
sub
cmp
jge
and
popf
pop
add
fstpl
push
idivl
lds
sub
adc
inc
jbe
adc
dec
add
test
xchg
pop
push
fnstcw
xor
adc
xchg
sbb
mov
dec
sbb
xchg
inc
aad
and
test
mov
adc
add
sbb
push
xchg
adcl
xchg
ljmp
sub
in
adc
ds
pop
outsb
adc
or
in
scas
sbb
leave
adc
sub
push
daa
xor
imul
sbb
mov
repnz
cmc
repnz
lods
or
movsl
xor
mov
js
imul
scas
cmpsl
ljmp
ljmp
repz
mov
addr16
enter
push
jg
mov
inc
inc
addl
les
jns
fsubp
push
lret
inc
lret
std
jle
ror
ds
mov
in
lret
sbb
jns
scas
dec
rorb
popf
pop
ret
add
push
cmpsb
rclb
xchg
sbb
jge
int
ds
or
pop
push
fsts
inc
lcall
fsubr
mov
pop
adc
push
sbb
mov
pushf
outsl
ret
xor
push
add
mov
add
mov
repnz
push
repz
pop
cmc
sbbb
insl
movsb
ljmp
out
lods
popf
fisubrs
ds
in
sahf
jge
cmp
imul
adc
add
in
and
mov
push
sub
sub
jo
mov
fdivr
push
sub
mov
push
sbbl
pop
xor
arpl
loop
lods
add
mov
int
adc
cmpsl
dec
ja
push
nop
jns
cli
fwait
or
and
mov
cmp
cmp
inc
adc
xchg
jno
mov
fiaddl
mov
inc
mov
in
fucom
pop
lea
lret
out
push
pop
adc
mov
loope
mov
or
push
out
jbe
dec
adc
xchg
fdivrs
int
cmp
push
insb
imul
dec
jo
out
xchg
in
xchg
xor
data16
ja
adc
pop
jmp
sub
clc
sub
jbe
sub
and
mov
push
mov
mov
addr16
mov
mov
push
jae
popf
in
pop
push
in
or
pop
cmp
daa
leave
pop
xor
mov
test
aad
stos
sbbb
mov
test
inc
mov
jp
cmp
cwtl
jae
xchg
cli
lret
aam
mov
repz
xlat
je
into
testb
jno
or
mov
mov
dec
cmp
mov
dec
cmp
loop
push
mov
jle
shll
mov
inc
lret
insb
popf
fldt
daa
add
cwtl
dec
adc
fimull
dec
sbb
pop
or
jle
push
jns
pop
int
push
adc
cmp
stos
aam
sub
sub
xor
sbbb
cwtl
fcoml
test
mov
fcmovnu
fmul
xor
fcmovu
xor
xor
jmp
or
jmp
mov
int
jbe
movsl
loopne
mov
in
and
sub
fsub
hlt
es
mov
cmpsb
adc
dec
int
mov
add
sti
add
incl
jp
jns
test
outsl
clc
shll
cmp
mov
clc
cmc
push
mov
inc
lret
lret
jne
mov
aaa
fisubrl
incb
pop
add
sarb
fsts
jge
dec
inc
leave
fdivrs
pop
inc
popa
cmp
test
push
pop
push
dec
test
out
push
cmovbe
rolb
rcl
cltd
in
or
or
insl
fimuls
int
add
mov
jnp
cli
bswap
lock
scas
push
fisubl
push
out
lahf
jns
movsl
lcall
cs
stc
out
sbb
jns
rep
pop
bound
leave
xor
test
cmp
aad
bound
in
psrad
mov
cmpsb
pop
ret
aad
push
push
mov
daa
in
insl
and
gs
movsl
mov
jg
cld
out
addr16
leave
jecxz
lock
jmp
insl
mov
stos
push
imul
lds
das
cli
idiv
pop
scas
add
xor
psubw
mov
cmc
scas
js
jbe
not
mov
mov
scas
sbb
dec
test
pushf
jl
push
loopne
xchg
push
push
movsl
popf
dec
mov
inc
push
ret
loope
repnz
fildl
movsl
bound
fldl
xchg
nop
popa
addr16
bound
rcrl
jns
pop
popa
dec
dec
jecxz
sbb
dec
jns
adc
addr16
cwtl
or
loop
xchg
repnz
shr
adc
in
adc
sbb
mov
outsl
pop
inc
loope
push
dec
pop
inc
cltd
or
sbb
sbb
es
fwait
leave
pop
rcrb
pop
int3
and
pop
andb
ss
outsb
clc
and
mov
and
sub
stc
jge
daa
daa
cld
cs
inc
mov
mov
stos
mov
sahf
lea
mov
enter
mov
into
ss
in
or
xchg
lds
mov
inc
ficoms
xor
jbe
add
ja
jo
scas
divl
cwtl
test
mov
sub
pop
loope
xor
push
jg
in
jg
and
sbb
cs
push
inc
scas
inc
lret
mov
xchg
es
inc
mov
inc
push
addr16
push
cltd
test
sar
call
dec
mov
int
aam
inc
push
fsubr
dec
mov
mov
cs
jecxz
mov
mov
adc
pop
mov
and
subb
or
ret
cwtl
and
cwtl
cmp
es
arpl
or
ja
lret
xchg
gs
push
jns
pop
push
sbb
xchg
fs
call
fs
and
sub
xor
mov
xor
jb
sahf
mov
pop
lods
mov
push
ds
cs
out
xchg
int
popa
nop
mov
pop
nop
jnp
inc
mov
bound
mov
xchg
dec
sbb
loop
xor
dec
addb
mov
add
or
rolb
push
pop
into
imul
orb
adc
aam
push
rcrl
inc
sbb
inc
ja
les
movsl
add
jle
in
adc
daa
mov
jp
leave
mov
cmp
push
into
jmp
sub
xchg
dec
mov
cwtl
xlat
sub
pop
ljmp
xchg
repz
ret
das
mov
in
pop
fdivrs
mov
mov
in
xorl
leave
cld
xchg
das
outsl
negb
loopne
mov
aas
repz
pop
out
push
rcrl
sbb
movsb
sbb
leave
sub
call
pop
sbb
loope
sbb
imul
and
xchg
xchg
inc
pushf
lock
scas
mov
pop
mov
inc
dec
stc
int
push
cli
into
orb
or
sti
add
add
inc
dec
dec
or
jge
addr16
add
xchg
push
ds
aas
add
addb
inc
or
or
xchg
or
xchg
adc
in
repz
repnz
xchg
xchg
mov
or
rcr
int3
aam
fwait
int3
adc
or
push
pop
mulps
lods
mov
sbb
jmp
jecxz
into
hlt
in
insb
pop
xchg
jecxz
cwtl
divb
adc
seto
ljmp
pop
pop
dec
scas
scas
xchg
pop
aam
je
out
ljmp
mov
lods
inc
fdivl
inc
outsl
into
shlb
daa
into
movsl
fsubr
add
lock
jge
add
xorb
jnp
or
cmp
aam
mov
dec
adc
xor
pop
xor
cld
fdivs
aam
ret
mov
xchg
add
ss
movl
fimull
xchg
dec
cmp
jge
mov
xor
mov
gs
pusha
aas
dec
sbb
push
mov
mov
jmp
pop
xlat
fildl
push
sbb
pop
fcmovb
or
xor
hlt
enter
inc
xor
dec
jg
lcall
lahf
jl
loope
stc
jnp
jge
ret
mov
jae
push
insl
nop
in
int
and
adc
adc
js
ds
pop
notl
xchg
jmp
inc
jnp
loopne
fcmovne
loope
pop
jbe
xlat
push
lcall
pop
and
dec
fsubs
mov
scas
in
mov
out
fsubs
lods
cmpsl
movsb
icebp
and
gs
data16
sbb
jge
inc
mov
jbe
outsl
push
pop
mov
mov
leave
sbb
test
jo
xchg
repnz
push
je
cmp
lock
mov
mov
mov
aam
loope
fnstenv
fdivrl
fwait
insl
jbe
add
mov
std
shll
sub
add
sti
inc
cmpsl
mov
add
xor
dec
pop
dec
pop
shl
dec
cli
int3
loope
sbb
add
and
inc
jb
cld
dec
shlb
pop
sbb
dec
push
rorl
aad
push
aad
push
fsts
dec
sbb
dec
mov
push
cltd
insb
nop
pop
fildl
out
pop
fwait
movsb
js
mov
sbb
loope
push
aaa
lds
mov
jb
notl
test
adc
mov
cmpl
pushf
jnp
push
add
lea
clc
loope
in
push
lahf
and
mov
mov
jo
in
movsl
pusha
test
out
jmp
in
shrb
mov
test
rol
shlb
scas
lcall
pushl
dec
jp
in
cmp
xor
sar
mov
popf
pop
fisubs
xchg
in
cmc
pusha
mov
xbegin
cmp
cli
mov
mov
add
data16
inc
ja
dec
xor
int
fidivrs
shll
icebp
cli
add
in
inc
jae
nop
decb
sub
mov
xchg
out
jae
xor
push
jno
lea
pop
scas
in
shl
lods
adc
out
xchg
pop
jecxz
aad
mov
rclb
jns
pusha
push
popf
sahf
fwait
and
or
shlb
adc
and
ret
fmul
pushf
es
mov
push
jmp
into
sbb
fidivrl
or
sub
jae
sub
and
lods
xor
cs
or
in
pop
js
xor
mov
clc
cmpb
xor
xor
test
lock
shr
inc
aas
add
push
repnz
ja
test
mov
mov
add
jl
xor
ret
enter
mov
push
xchg
jae
out
mov
pop
mov
sahf
ds
flds
fisttpll
stos
inc
and
shlb
insl
dec
adc
xchg
incb
push
cmp
adc
pop
sbb
mov
push
lods
into
sub
sbb
jns
xor
sbb
mov
test
fwait
into
out
push
shlb
push
xchg
and
mov
out
jecxz
addr16
fwait
jne
js
notb
lods
xchg
addr16
std
add
stc
push
mov
loope
sub
lods
sbb
mov
jge
xor
repnz
xor
cmp
repnz
cmp
jmp
jge
inc
pop
jb
mov
out
jns,pn
add
sub
or
jnp
lds
shrl
lret
mov
aaa
adc
subb
cwtl
leave
bound
ja
fwait
test
stc
cmp
xor
dec
inc
xor
dec
sarb
ss
mov
orb
mov
inc
fisttpl
push
rol
push
dec
sar
jnp
enter
dec
pop
flds
mov
inc
cmp
pop
dec
clc
sbb
add
iret
lret
or
mov
or
frstor
loop
adc
jp
iret
pop
imul
sbb
mov
jl
sub
cld
in
push
xlat
insl
xlat
repz
sub
sahf
push
mov
sub
gs
and
sahf
arpl
test
mov
mov
ljmp
ljmp
lods
mov
outsb
cmp
scas
loopne
cmpsl
imulb
jae
lods
repz
mov
mov
rorb
in
mov
scas
int3
je
jns
mov
shrl
mov
and
das
pop
mov
cmp
push
sbb
cmp
cmp
dec
mov
mov
dec
cmp
lds
pop
std
jle
xchg
mov
adc
fadds
cmp
dec
in
dec
add
push
xor
mov
xchg
pop
lcall
push
lahf
lret
sbb
xchg
mov
adc
loop
ficoms
cmpsb
pop
fstps
sbb
sbb
mov
cmp
sbb
jbe
dec
jno
mov
out
xlat
pop
cmp
hlt
sbb
cmc
fstps
sbb
sub
pop
lcall
adcb
mov
int
out
loopne
sbb
in
jecxz
and
rcrb
arpl
xor
shlb
mov
out
inc
les
dec
movsb
inc
pop
mov
icebp
push
lods
cmp
insb
outsb
mov
cwtl
cmc
mov
out
sbb
jno
ds
inc
shl
insl
add
movsb
pop
dec
test
inc
xchg
dec
inc
or
repz
rcl
loope
popf
in
cld
stos
in
ss
iret
aam
add
out
cmp
inc
out
inc
lock
leave
rorb
fists
or
call
xchg
pop
lret
mov
and
fcmovne
xchg
enter
lret
sub
cmp
bound
gs
rcll
fldt
xchg
stos
push
out
fsubs
xchg
sub
pop
aaa
push
push
fcoms
xchg
scas
lock
cmc
lods
lods
mov
in
sti
fidivl
in
mov
cwtl
fwait
clc
sahf
push
popa
pop
fcompl
pusha
aaa
push
dec
out
push
xor
daa
inc
in
adc
imul
leave
pop
orl
push
sub
xor
push
out
mov
popa
inc
pop
sti
mov
jmp
dec
pop
cs
sbb
das
jmp
enter
mov
dec
jno
push
jno
ret
repz
adc
ds
mov
mov
test
mov
or
add
lahf
xchg
lahf
mov
addr16
or
int
cmp
dec
out
pop
push
sbb
aas
lret
or
daa
add
adc
pcmpeqb
xor
dec
rcll
and
xlat
fldcw
dec
adc
sbb
push
sbb
xchg
out
out
rclb
and
orl
add
pop
xchg
or
movsb
popf
push
xchg
inc
pop
push
push
jmp
ds
aad
mov
pop
jo
scas
pusha
mov
stos
add
loope
pop
call
pusha
jae
mov
out
and
pushf
push
pop
lods
lea
inc
adcb
pop
int3
aaa
out
mov
push
enter
inc
sub
stos
mov
movsl
int
insl
test
add
popf
dec
sub
mov
sub
rorb
cmc
or
jae
hlt
pop
ret
mov
jge
hlt
inc
cld
mov
mov
mov
lret
js
jecxz
js
xchg
pop
adc
test
imul
or
sbb
mov
inc
lods
inc
insb
adc
add
movsb
pop
sub
mov
sti
iret
shll
jecxz
mov
jmp
insl
push
and
adc
jno
mov
push
jnp
adc
and
shr
and
dec
mov
mov
xchg
test
stos
pop
pop
push
imul
adc
insb
xchg
test
mov
movsl
das
adc
and
arpl
jle
daa
dec
jnp
xor
pop
push
lods
cmpsb
mov
pop
jecxz
call
jo
daa
lods
out
jnp
sub
subb
mov
test
jmp
sbb
pop
aaa
insl
movsb
cmp
scas
jb
jl
lock
or
cmp
dec
xor
dec
jae
pop
mov
mov
jg
mov
push
test
xor
inc
add
inc
xchg
hlt
leave
pop
incl
sbb
xchg
sbb
or
inc
int3
mov
or
xchg
xchg
and
inc
or
mov
inc
xchg
sub
add
imul
add
mov
cld
pop
or
inc
add
push
and
cltd
ja
xor
jo
in
push
in
push
push
pop
mov
cmc
xchg
cmc
sbbb
xor
sbb
cmpsb
mov
nop
movsb
lods
ret
xor
lahf
rorb
or
jbe
xor
mov
flds
clc
cmpsl
lret
inc
sarb
cmp
movsl
mov
adc
enter
cmp
int3
repz
xor
jmp
fisttpll
push
mov
push
lahf
pop
loope
stos
cld
aad
jns
lods
mov
sbb
enter
or
mov
jne
shll
ja
sub
push
or
mov
int
or
push
dec
fxch
mov
fwait
add
jp
pop
bound
cmp
inc
in
loop
mov
add
rolb
enter
je
dec
ss
mov
lret
mov
pop
dec
or
or
mov
dec
lea
setle
adc
rcl
adc
jbe
pusha
es
cmc
cmp
cs
call
push
ficomps
and
repz
and
leave
mov
pop
ja
dec
jecxz
aas
ret
popf
mov
cmp
daa
push
xchg
pop
test
push
push
adc
push
fiaddl
in
mov
jne
inc
pop
outsl
popa
pop
test
idivb
test
adc
fsubrs
test
xor
lea
insb
dec
mov
mov
cmp
outsl
xchg
jo
push
push
icebp
popf
jle
mov
cwtl
lret
add
xchg
mov
inc
dec
push
cmpl
aaa
inc
inc
pop
inc
test
push
pop
stos
les
push
push
sbb
pop
sbb
out
ja
mov
add
mov
inc
and
into
shll
mov
inc
mov
pop
or
enter
jns
dec
jp
or
adc
pop
shlb
adc
dec
jns
nop
jae
adc
int3
lock
pushf
lds
adc
jbe
dec
test
xor
pop
dec
popa
sub
and
shrb
scas
mov
in
data16
and
fisubs
xor
mov
shrb
xchg
jae
lods
cmp
movsb
ficoms
or
cmp
iret
xchg
xor
jnp
inc
adc
pop
stos
stos
lods
sbbl
out
pop
and
jo
outsl
add
or
ljmp
mov
dec
sbb
xchg
adc
xchg
cmp
xlat
cmp
xchg
cmp
jl
nop
adc
ja
jg
pop
cli
orb
xchg
int3
dec
inc
mov
out
lahf
inc
dec
aam
int3
mov
push
mov
inc
mov
adcl
fwait
or
ficoms
sub
add
mov
scas
lea
xor
fnsave
push
sbb
push
fcmovnbe
popf
outsl
dec
inc
cs
in
jmp
pop
fisubs
pushf
enter
inc
ret
sub
add
jmp
lcall
arpl
repnz
ficomps
cmp
cmpsl
sar
scas
bound
and
and
xchg
bound
mov
shlb
push
add
or
pop
sahf
js
sub
sub
pop
insb
ror
sahf
lds
pcmpgtd
out
sub
jo
leave
iret
push
js
cmc
scas
xchg
jecxz
iret
xor
int3
mov
mov
ja
lret
ja
mov
mov
pop
cmp
sbb
adc
std
pop
shrl
jae
decb
mov
lret
inc
add
inc
fdiv
mov
popa
fdivp
pop
lds
push
or
inc
arpl
fcmove
leave
sbb
loope
and
fisttpll
xchg
lret
cs
add
clc
lock
shll
xchg
adc
test
xchg
cwtl
lock
fxch
pop
xlat
and
sub
xchg
xchg
enter
pop
cmp
fs
fcomps
sub
mov
adc
repnz
gs
sbb
sbb
daa
std
xor
imul
xchg
sub
jbe
dec
mov
insl
stos
push
cmp
sub
add
shrb
mov
mul
cmp
or
push
mov
fsqrt
jbe
and
divl
adc
cmp
add
cmp
loopne
mov
mov
ret
into
push
fdivr
push
xchg
aas
ret
or
sarl
popa
xchg
jno
cmpsb
or
jp
jl
pop
imul
jns
dec
sti
jmp
cmpsl
push
pmuludq
sbb
lret
rcl
mov
iret
push
daa
mov
add
push
adc
mov
push
jge
stos
in
aad
sub
mov
jmp
pop
jb
inc
xor
lcall
lcall
lahf
sti
sub
mov
and
loope
mov
push
cmc
and
arpl
xor
addr16
mov
es
daa
sub
cmc
pop
mov
out
jne
push
adc
mov
into
ret
mov
popa
sub
jbe
mov
and
xor
sti
les
mov
cli
jge
or
shl
adc
lods
mov
fnstsw
cmp
test
inc
rol
sbb
push
stc
sbb
mov
xorb
inc
adcl
mov
xchg
inc
arpl
push
push
leave
in
into
sub
sub
call
sub
mov
xchg
jb
mov
mov
xchg
outsb
adc
rcll
and
fadd
mov
cs
fdiv
addr16
sub
ds
push
pop
es
aas
jmp
loope
xchg
mull
test
insb
jbe
push
mov
imul
xorb
dec
xchg
sub
cld
test
cmp
lods
and
sub
add
test
pop
mov
das
push
mov
push
add
rol
std
fidivl
mov
push
add
imul
add
push
aaa
jp
in
lret
inc
cwtl
cmp
sub
jge
pop
pop
jle
into
or
ror
cmc
nop
jno
dec
mov
fwait
cwtl
fldenv
gs
adc
aam
cmp
inc
pop
iret
and
daa
mov
faddl
pop
pop
in
sub
fmul
popa
push
idivl
mulb
sbb
sahf
rcll
lds
push
xchg
lcall
xchg
and
push
xchg
mov
and
in
cld
and
movsl
cmp
jp
mov
cmp
cmp
imul
popf
cmpsl
aaa
jbe
insb
or
or
or
push
dec
cwtl
xor
jae
lret
xorl
je
inc
inc
scas
adc
mov
and
inc
adc
out
mov
int3
jne
inc
mov
les
adc
adc
cmp
xor
stos
xor
cmp
dec
xchg
scas
push
fs
sar
xor
xchg
testb
xlat
test
ret
push
std
xchg
ljmp
lret
lock
dec
loope
mov
mov
or
sbb
xchg
rcrl
movsb
inc
dec
push
mov
jle
shll
push
clc
adc
je
xchg
outsl
adc
xlat
push
xchg
push
mov
sub
pop
shl
sbb
mov
fwait
das
stos
and
pop
cs
in
test
data16
pop
jp
icebp
mov
xorb
fisubrl
and
mov
lcall
jmp
jb
pop
xor
test
mov
add
jno
negb
icebp
jmp
rcrl
adc
mov
inc
and
cmp
xchg
xor
add
es
xchg
repz
mov
lods
in
mov
jne
pop
roll
in
aaa
inc
mov
add
inc
daa
std
add
push
push
dec
enter
xchg
add
std
test
mov
xchg
jle
pop
push
or
test
test
add
inc
mov
subps
sbbb
or
dec
sbbb
adc
sbb
add
enter
or
cs
sbb
pop
sbb
lahf
sbb
outsl
mov
pop
add
cmpsb
push
cmc
arpl
scas
pop
jmp
jno
sub
lcall
outsl
js
jo
pop
jno
push
jb
fbstp
lahf
je
pusha
jne
and
jns
push
shr
mov
filds
inc
and
dec
sub
iret
xor
inc
jae
mov
sbb
lahf
mov
mov
mul
cld
repnz
mov
cli
pop
mov
cld
rorb
sbb
sub
jnp
jp
mov
cwtl
cld
scas
iret
add
fs
jno
inc
sbb
xchg
lock
adc
fcmovnb
dec
lret
fbld
bound
inc
dec
dec
mov
mov
inc
leave
int
adc
dec
lods
insl
les
lcall
arpl
push
sti
or
rcrl
push
mov
push
adc
das
pushf
icebp
mov
ficomps
and
push
sbb
outsl
idivb
sbb
fadds
fyl2x
sbb
xlat
or
push
lahf
pop
ret
ret
jmp
sub
gs
jbe
add
jae
push
push
lods
test
outsb
pop
mov
jmp
out
mov
sbb
jb
ds
xor
addb
outsb
in
js
xchg
sbb
xor
cwtl
mov
xor
jbe
pop
jns
shll
scas
cmpsb
outsl
and
push
mov
jg
xchg
add
mov
repz
cmpl
push
mov
pop
push
das
cmp
inc
call
rorb
jg
pop
adc
inc
fs
jecxz
and
mov
out
jge
out
adc
push
cltd
cltd
pushf
pop
dec
popf
and
pop
xor
sbb
pop
mov
in
fdivrl
pop
cmc
std
jmp
push
xlat
repz
call
ljmp
mov
jge
loopne
loope
push
and
sub
daa
loopne
std
cmp
ret
fildll
mov
bound
add
stos
loope
cmpsb
out
mov
jle
fisttpl
jae
js
add
hlt
sub
ss
test
lcall
aaa
push
mov
cli
dec
mov
shrb
sbb
jnp
cmc
js
mov
out
pop
leave
push
mov
std
push
sbb
dec
jne
in
adc
orl
mov
jnp
outsl
les
rcr
invd
mov
or
rcrl
in
mov
jle
push
test
xchg
mov
addr16
popf
call
jb
xchg
mov
inc
and
adc
in
or
ret
add
rcl
rcrb
adc
and
stc
popa
jae
or
mov
into
pushf
sbb
jo
and
scas
pop
fdivrl
push
fstpt
push
lret
fildll
in
cmpb
push
xor
xlat
aaa
fistps
push
cli
outsb
cmc
xchg
das
mov
pop
rcrl
jmp
fs
fisubl
and
enter
pushf
mulb
ficomps
fists
mov
mov
jo
fidivs
xchg
cmp
mov
jge
push
inc
fsubrs
mov
imul
jns
add
cmp
into
mov
dec
cmp
adc
or
iret
adc
rcl
mov
push
jbe
sbb
lret
dec
cmp
sub
je
adc
imul
rorl
xorb
repz
adc
orb
scas
cli
push
or
lea
stc
lds
mov
cmp
jo
cmc
in
cli
push
mov
and
out
mov
ret
loop
add
push
popf
cld
push
xchg
lret
or
mov
pop
out
gs
xlat
imul
imull
inc
sub
lock
stos
add
mov
stos
pop
mov
xchg
lock
dec
lcall
mov
jbe
jns
pop
sar
push
mov
xchg
inc
mov
popa
mov
push
dec
fwait
push
jl
jae
and
scas
dec
test
xchg
sub
lret
dec
mov
mov
cmp
lret
rorb
push
out
adc
mov
das
push
int
mov
inc
or
ja
inc
mov
mov
fcoms
lret
fwait
int
sbb
fistl
xor
ljmp
addr16
push
into
movsb
push
and
inc
outsl
sbb
xlat
scas
jecxz
fucom
sbb
sub
xlat
lods
fcomps
repnz
push
pop
data16
cmc
enter
lea
popw
sub
and
aaa
jmp
and
fstpl
in
and
out
xchg
cmpsb
scas
push
inc
lret
mov
in
or
mov
cs
jne
outsl
dec
cmpsb
repnz
iret
std
mov
mov
in
fnstcw
lods
sbb
aaa
add
xor
hlt
or
dec
cmpsb
push
idivb
inc
rol
mov
sbb
test
sub
mov
xchg
xor
mov
out
andl
push
loope
inc
test
inc
andl
lock
or
xor
cmovs
xchg
add
mov
pushf
popa
pop
bswap
fcmove
push
push
xchg
std
jbe
fisttpl
push
mov
mov
add
ficomps
fcoml
cs
jle
cmpsl
lahf
mov
mov
cmc
std
ret
arpl
clc
outsl
gs
sbb
mov
popf
test
sub
sbb
leave
test
lret
push
jbe
cs
sub
cmc
jnp
xchg
scas
inc
adc
xor
xor
xor
mov
clc
mov
xor
daa
add
mov
jmp
scas
cmp
data16
adc
mov
and
insb
enter
std
aad
outsl
sub
mov
movsb
add
mov
nop
jns
push
addr16
dec
ljmp
sbb
xor
mov
or
jae
dec
mov
xor
sub
jge
jbe
iret
or
aam
adcb
inc
push
push
test
jae
xor
adc
dec
sbb
dec
dec
mov
cli
inc
pop
push
push
data16
inc
cmpsb
push
push
movsb
je
out
fnstsw
in
pusha
sub
mov
jae
in
xor
out
cmc
sbb
neg
lock
pop
aad
dec
lock
cmpsb
mov
rcl
fucomi
outsl
imul
insb
mov
lock
fstpl
adc
jns
jns
inc
out
mov
mov
mov
xchg
faddl
jle
movsl
xor
mov
insb
adc
mov
push
aad
add
jg
dec
mov
leave
and
dec
adc
and
insb
xor
icebp
push
gs
int3
ret
scas
pushf
imul
andl
push
inc
mov
imulb
mov
clc
leave
or
idivl
mov
sub
mov
ror
push
test
lea
es
pop
test
push
cmp
leave
test
mov
jmp
sarl
shrl
loope
mov
push
fsts
fwait
cltd
daa
and
fcomp
sbb
data16
pop
sbb
pop
and
push
lret
xor
xchg
jmpw
ljmp
mov
hlt
mov
xor
repz
mov
pop
mov
data16
pop
jno
cmpsb
xor
xchg
in
xor
insl
stos
xor
xor
cmp
jl
lods
xor
scas
je
je
xchg
bnd
jb
jbe
mov
ja
sub
cmp
cmp
push
lods
xor
test
iret
push
es
insb
rcrl
xor
dec
outsb
inc
rcll
xchg
fstpt
dec
mov
pop
stc
cmp
pop
ret
cmp
fld
or
fildl
rorl
mov
fs
mov
push
push
insl
lret
or
aam
and
adc
mov
push
mov
ljmp
and
or
push
bound
loop
stc
sbb
xchg
mov
fwait
push
xchg
jne
notb
push
loopne
add
jbe
pop
bound
push
push
jp
fnstcw
and
int
fs
jecxz
test
xchg
out
popa
adc
stos
and
and
inc
loopne
cmp
cmp
xchg
mov
fdivs
das
test
pushl
cmpsb
lock
fsub
adc
adc
test
lods
lret
cld
mov
cmp
ret
mov
push
enter
clc
imul
mov
inc
xchg
xor
inc
mov
dec
sbb
std
jne
ja
clc
mov
incb
cmc
and
or
subb
bound
push
inc
iret
lret
pop
ds
es
and
shlb
sahf
shrl
lahf
dec
ret
dec
lds
leave
iret
lds
adc
cltd
xchg
test
loope
or
sub
jecxz
mov
repz
mov
push
neg
xlat
movsb
fcom
inc
pop
daa
nop
pop
and
push
jmp
sub
jmp
popa
cmpsl
mov
inc
pop
repnz
lods
xlat
subb
das
pop
inc
loop
flds
fcomi
dec
mov
xchg
mov
mov
xchg
loop
jmp
mov
in
xchg
dec
lods
dec
test
sub
out
test
insb
daa
out
xchg
jl
scas
xor
jle
xor
test
lods
je
insl
ss
lods
jbe
scas
ja
add
mov
repz
je
int3
xor
test
and
aam
xchg
inc
imul
lahf
fmull
push
xlat
mov
and
cltd
aad
roll
or
leave
mov
addr16
adc
into
pop
pop
fsts
leave
rorb
sub
les
push
lret
and
fisubrl
dec
shlb
out
pop
jno
rcr
mov
push
sbb
push
push
out
adc
movsl
sbb
mov
adc
xlat
xchg
imul
add
ficomps
cwtl
sahf
ret
push
jg
movsb
rorb
fdivrp
movsl
gs
dec
js
cmp
xor
and
jecxz
cmpsb
push
or
in
outsl
in
ss
xor
gs
xor
cmp
stos
arpl
push
imul
lret
lods
call
add
outsl
cmp
push
js
xor
add
loopne
jl
cmpsb
mov
std
popa
iret
aad
mov
add
sub
shrl
incl
dec
push
fiadds
mov
nop
xchg
pop
push
cltd
or
push
inc
enter
or
add
pop
lahf
lahf
inc
or
loop
ffree
push
and
pop
rcrl
shll
or
loope
aad
lret
jecxz
adc
fcmovu
cmpsl
mov
imul
push
fs
pop
and
push
sahf
loop
lahf
stos
aad
insb
xchg
mov
pop
push
call
outsl
sbb
ljmp
fisubrl
insb
sbb
jo
in
jp
pop
cs
pop
das
mov
bound
and
test
std
imul
and
mov
out
call
test
push
inc
scas
jg
push
sub
inc
insb
inc
or
out
jbe
mov
mov
inc
mov
xchg
mov
or
dec
enter
mov
dec
cmp
dec
cli
bswap
or
push
nop
cmp
jns
rclb
mov
xchg
std
xchg
push
jge
sbb
fcoml
fcompl
inc
push
push
sbbb
andl
aad
arpl
loop
xchg
push
inc
in
adc
fs
pop
dec
out
dec
call
int
and
jmp
adc
pop
scas
adc
ret
sar
es
pop
inc
mov
jmp
test
fwait
mov
pop
push
mov
lds
stc
xor
fstps
pop
pop
sbb
es
decl
mov
orl
in
mov
es
in
xchg
mov
mov
sub
cmpsl
popf
push
loopew
scas
fcompp
push
popf
lods
push
pop
outsb
push
pop
das
push
fdiv
push
pop
outsb
or
mov
adc
and
xchg
frstor
mov
and
int
shll
push
daa
gs
es
out
std
adc
int
ret
cli
mov
test
sub
sub
ljmp
mov
sub
sbb
shrb
addl
lods
pop
sbb
repz
xor
enter
cmp
push
lret
loopne
aam
je
insl
aad
in
or
and
add
rcrl
xchg
js
out
sub
int3
mov
dec
pop
pop
sub
test
das
cltd
lea
adc
fwait
nop
dec
pop
xchg
or
je
mov
pusha
push
mov
in
mov
and
and
adc
pushf
aam
popf
nop
call
sbb
mov
sub
jle
sbb
fnstsw
ds
push
les
mov
cmp
mov
push
aaa
xor
xor
xor
cmp
sti
xor
jl
out
cmp
cs
cmp
std
cmp
add
adc
lock
dec
dec
add
cs
add
das
inc
inc
xchg
movl
mov
dec
dec
mov
lea
and
cmp
sarb
into
ror
clc
popf
adc
rcll
clc
addr16
nop
cli
xchg
xchg
xchg
sti
xchg
xlat
xchg
add
sbb
rcr
adcl
fcomps
les
jb
ret
repz
inc
hlt
and
repnz
repz
shlw
mov
push
stc
stc
stos
clc
push
stos
sbb
lods
arpl
jnp
shl
out
and
xor
out
mov
hlt
pop
scas
cmc
pop
jo
shrl
xor
jae
outsb
cmp
inc
xor
xor
cmp
and
imul
lds
mov
stc
inc
gs
adc
push
sarb
pop
cmp
push
mov
shrl
mov
mov
xchg
sub
out
sub
mov
push
outsb
pop
push
add
push
sbb
sbb
sbb
mov
sahf
pop
inc
lea
fbld
jmp
push
xchg
gs
aad
inc
bound
push
imul
or
pusha
das
sbb
lret
lods
add
repnz
repnz
cmp
dec
push
jbe
xor
negb
and
stos
mov
and
hlt
insl
sahf
test
and
std
cmpsb
sub
sbb
dec
jno
or
stos
cmp
imul
cld
xchg
add
cltd
sub
pop
lock
jo
fisubrs
xor
nop
dec
ja
je
fidivs
mov
adc
mov
arpl
sbb
cli
sbb
and
fwait
call
popf
addr16
sahf
sub
mov
mov
shll
ret
and
andb
daa
repnz
icebp
test
test
adc
or
insl
test
mov
jo
dec
roll
jb
mov
shlb
aad
adcb
sarl
add
cmp
cmp
push
cmp
xchg
aas
insb
xchg
sub
pop
loope
aad
jo
les
lds
hlt
jl
in
fxch
pop
or
pushf
shl
mov
pop
push
gs
mov
lret
out
nop
and
sub
adc
adc
push
xchg
test
sbb
sbb
das
sbb
sbb
in
mov
repz
push
lock
les
lahf
mov
or
mov
fwait
mov
ss
inc
and
stos
cmpsb
mov
and
lods
out
jg
test
mov
jge
icebp
xorb
jmp
xor
push
aaa
sub
cmp
cmp
cmp
mov
xchg
ss
inc
testl
jge
inc
cmp
mov
inc
inc
sbb
cli
xchg
dec
mov
scas
or
xchg
dec
fmuls
xchg
dec
test
push
inc
xchg
push
or
test
pop
sbb
sbb
pop
pop
dec
fwait
pop
push
pop
lret
sbb
push
mov
int
pop
xchg
in
push
movsl
popa
shlb
mov
movsl
jnp
and
test
test
push
stos
stos
pop
lock
call
xchg
imul
sub
in
sbb
sbb
xor
sbb
mov
aad
cmc
fbstp
divb
mov
clc
xchg
pop
cli
int3
idivb
gs
and
cmp
cmp
addr16
sub
inc
jmp
inc
outsb
add
inc
scas
addb
dec
subb
imul
inc
int3
pop
sub
push
int
dec
into
xor
loop
mov
xchg
mov
xchg
mov
aam
or
mov
fdivs
flds
xchg
fidivrl
fdivrl
ficoms
cld
call
lahf
push
lcall
cwtl
or
sub
cmpsb
pop
cmpsl
mov
or
stos
leave
fldt
popf
lods
adc
push
jecxz
cmp
mov
outsb
mov
out
jecxz
and
jbe
adc
mov
sti
pop
jns
push
push
cwtl
sub
sbb
add
stos
add
add
cs
scas
pop
and
or
jne
fidivs
or
or
js
mov
adc
stos
cmp
mov
cmpsl
mov
sub
xchg
out
xchg
mov
cwtl
imul
aas
fwait
mov
pushf
je
popf
sub
lahf
mov
mov
lds
out
xchg
faddl
and
mov
mov
mov
sub
sub
dec
sub
or
mov
sub
adc
xchg
das
mov
xor
sti
xchg
xor
xor
xchg
aaa
stos
aad
xor
push
mov
sbb
pop
sbb
lcall
ror
ret
nop
loop
dec
sahf
lds
arpl
aam
mov
enter
adc
lret
push
in
inc
cmp
cld
in
fldcw
mov
push
stos
xchg
xlat
test
xchg
imul
xchg
lcall
cs
ret
mov
pushf
push
mov
test
sahf
imul
xor
jns
loop
xchg
in
in
test
cmp
es
out
call
mov
ljmp
pop
out
xor
out
repz
inc
icebp
insl
inc
repnz
hlt
icebp
inc
cmc
les
ja
push
js
lret
jns
lret
jp
enter
jl
dec
jge
dec
jle
dec
jg
int3
addb
sti
dec
add
addl
std
roll
pop
mov
rcrl
pop
mulb
adc
adcl
lcall
push
inc
pop
push
pop
sbb
sbb
pop
push
dec
fwait
push
push
mov
loop
push
xor
int
pop
nop
repz
dec
movsl
pop
iret
bound
fsubl
push
mov
adc
cmp
xchg
sub
push
daa
in
call
xchg
stos
call
sub
fbstp
jmp
lods
in
pusha
mov
loop
out
fidivl
out
xor
aas
xor
fdivl
mov
repz
xor
and
mov
mov
cmp
js
daa
cmp
cli
cmp
cmpsb
inc
jg
mov
shrl
push
add
push
inc
andl
inc
xor
inc
repz
or
fcomps
cltd
push
mov
dec
cmc
xlat
push
mov
push
cmp
cli
or
mov
push
adcl
add
test
xchg
pop
mov
pop
dec
fstps
xchg
pusha
pop
mov
dec
fsub
push
cwtl
in
pop
in
pop
out
pop
out
sbb
mov
popa
ja
ljmp
shll
in
loopne
push
movsb
out
adc
icebp
shlb
repnz
repnz
gs
cmpsb
notl
clc
adc
cli
xchg
ljmp
std
fisubrl
pop
mov
sbb
add
xor
popf
scas
add
add
pop
dec
inc
sbb
inc
loopne
inc
arpl
dec
pop
mov
fimuls
lea
daa
lret
js
test
packuswb
jmp
adc
adc
rcll
pop
insl
mov
subl
jbe
pop
das
leave
pop
repnz
pop
popf
xchg
cmp
loop
mov
mov
in
dec
out
or
mov
jmp
dec
jmp
push
in
jge
in
inc
aad
add
out
mov
icebp
dec
repnz
repz
push
hlt
imul
sub
es
sbb
fwait
mov
mov
xchg
jecxz
dec
lahf
rcll
aad
les
pop
addr16
fsubrs
enter
movsl
outsb
mov
pop
stos
or
or
sub
sbb
adc
stos
adc
adc
sub
pushf
scas
push
and
fnsave
es
sbb
rcrb
sbb
sahf
movsb
mov
sub
cmpsb
mov
sub
gs
lods
inc
addr16
push
ds
inc
imul
sub
insl
out
shrl
outsl
insb
pop
jo
les
or
fdiv
hlt
xchg
mov
divb
divl
dec
clc
testl
je
sti
ds
cli
dec
std
mov
incl
add
out
mov
add
std
xchg
add
pushf
jmp
enter
push
mov
mov
mov
mov
into
pop
nop
mov
xchg
dec
loope
or
shll
xchg
nop
sub
or
fdiv
cwtl
cwtl
mov
adc
mov
pop
push
movsl
pop
sbb
xchg
addr16
push
sub
pop
jmp
sahf
out
and
jo
fucomi
sub
sub
jae
fnsave
fs
sub
jb
mov
icebp
sub
test
cmc
and
mull
stc
cs
lock
cld
cmp
add
ljmp
add
insl
add
shrl
ret
daa
adc
lret
gs
pop
push
shlb
or
dec
dec
jbe
dec
aaa
dec
dec
clc
or
or
dec
mov
nop
mov
adc
cmp
aam
xchg
aad
cld
out
mov
sbb
jp
pop
cmp
fcmovnbe
or
lods
xchg
sbb
test
pop
flds
mov
fisubl
lcall
shlb
mov
addr16
mov
adc
popa
int
stos
mov
lods
dec
jecxz
push
scas
iret
sub
cs
jp
cltd
jmp
push
cmpsl
xor
insb
xor
imul
jmp
in
cmp
cmp
jb
fucomp
ds
hlt
aas
and
inc
sbb
inc
pop
jb
xor
add
lds
cmc
cmp
xchg
dec
leave
movsl
cmp
insb
inc
lret
sub
int3
call
into
imul
adc
add
sub
aad
inc
insl
push
xlat
das
add
testl
subb
popf
jne
sahf
cmp
lahf
hlt
or
mov
dec
arpl
or
mov
data16
addr16
punpckhbw
push
push
imul
insb
rcl
adcl
jno
xchg
jb
push
jae
sbb
jne
cltd
jbe
pop
ja
sbb
fdivrl
pushf
jp
pop
jnp
push
jl
fistpll
lahf
jle
pusha
jg
and
bound
in
shll
xchg
mov
mov
ljmp
mov
sbb
nop
fsubrl
pop
das
xchg
push
lock
fbstp
pusha
xor
mov
bound
xor
movsb
mov
gs
cmp
mov
sub
arpl
cld
fs
mov
sub
addr16
ljmp
mov
das
inc
imul
insb
mov
insl
jno
outsb
xor
add
je
jb
inc
jae
or
jne
mov
dec
ja
or
int3
jns
mov
dec
jnp
push
jl
sub
cmp
aas
call
inc
mov
inc
inc
push
inc
add
ret
aad
adcl
pop
dec
fmuls
cwtl
dec
inc
pop
dec
or
dec
leave
fisttpl
fwait
dec
dec
pop
dec
or
mov
push
and
push
mov
adc
pop
shlb
push
and
aad
pop
xchg
addr16
push
sub
jmp
cwtl
push
pop
sub
sbb
and
lods
and
cs
sbb
sub
sub
repnz
mov
mov
das
jecxz
xor
xor
xor
mov
sub
aaa
jmp
cmp
cmp
cmp
lods
mov
cs
aas
out
add
roll
inc
xor
xor
leave
pop
pop
xchg
sub
rolb
imul
adc
popf
outsb
nop
fstpl
ds
dec
je
jo
xlat
aas
mov
adc
cmpsb
sub
sub
inc
or
xchg
ret
lea
adc
pushf
inc
dec
sub
fiadds
inc
shr
cltd
loop
pop
fnsave
pop
or
pop
xor
rcl
pusha
jb
jb
pop
lock
test
mov
cmp
push
sub
call
test
xor
mov
sub
hlt
cmp
push
jp
inc
xor
mov
es
push
jb
mov
repz
xchg
mov
hlt
and
jbe
cld
inc
pop
mov
pop
imul
aas
imul
cli
pop
pop
cld
sub
popf
pusha
rolb
int
ds
adcb
and
in
lret
arpl
sub
cmpsl
jecxz
cmpsl
stc
inc
add
fmull
shr
or
ficoml
jae
or
mov
test
outsl
cli
xor
push
cmpsb
xchg
jno
xchg
sbb
dec
int
mov
pop
adc
jecxz
sahf
mov
popa
push
jle
xor
mov
fdivrl
pop
nop
lock
repnz
and
jecxz
fs
jge
out
cmp
outsl
mov
jmp
jne
sub
out
je
stos
jo
dec
in
sbb
xchg
and
cmp
or
xor
jl
push
jo
inc
xchg
xlat
inc
xor
loop
mov
lret
mov
ja
sbb
mov
out
jmp
add
cmc
lea
dec
sti
sbb
mov
mov
fdivr
scas
movsb
pop
cs
adc
aam
cmp
xchg
out
pop
ret
inc
lds
outsl
pop
inc
pop
loop
lds
into
pop
add
rorb
or
shll
or
adc
sar
sets
or
adc
lcall
fmull
icebp
jecxz
fxch
es
xchg
js
dec
data16
dec
lock
sbb
aas
int
mov
add
shr
loop
xor
loopne
mov
loopne
shl
add
inc
daa
inc
ja
or
in
decb
jbe
mov
into
out
imul
jl
inc
sub
dec
jmp
or
jge
add
add
dec
scas
jo
or
jo
inc
mov
and
loope
hlt
repz
aad
hlt
int
cmpsb
or
sbb
imul
lcall
pop
mov
std
fidivrs
xchg
inc
iret
jge
lahf
rorl
ds
mov
lea
andl
fwait
adc
repz
lods
loope
push
xchg
into
jmp
pop
aaa
sahf
pop
jae
adc
push
ljmp
loope
shl
sbb
ret
jge
aad
mov
and
xchg
adc
lods
outsb
rcrl
inc
mov
lahf
lods
adc
popa
js
pop
jmp
fistpll
or
gs
les
hlt
mov
mov
cmpsl
sbb
cmp
ja
xchg
subb
data16
inc
dec
out
push
cmpsb
lahf
inc
xor
daa
scas
push
out
sub
xchg
mov
push
jle
push
outsb
hlt
gs
inc
mov
out
cmp
scas
jb
jno
mov
adc
pmuludq
repz
inc
jnp
repnz
xchg
mov
pop
in
xchg
mov
or
jecxz
cmp
insl
jo
shrl
imul
stc
test
mov
lcall
sahf
inc
fs
lds
adcl
inc
test
xchg
pop
sub
sub
mov
pop
or
lods
mov
rcl
sub
lods
aam
pop
lahf
push
cmp
push
jg
test
push
and
sbb
data16
lcall
clc
aaa
dec
fmulp
jmp
test
or
popa
fistps
ret
add
lock
inc
mov
adc
xchg
clc
out
mov
sub
out
xchg
lods
push
dec
dec
lock
cli
xor
sti
outsl
dec
cli
movsl
xor
cmp
or
sti
xor
mov
mov
into
jb
lods
shlb
andl
xchg
rclb
xor
push
dec
cmp
popa
aad
pop
inc
or
jp
sub
std
subb
dec
sti
aad
test
push
test
fidivrs
fildl
push
ret
dec
add
jno
inc
mov
mov
ffree
enter
pop
push
xchg
sahf
cwtl
adc
sub
js
or
cli
in
pop
xchg
fsubrs
imul
or
adc
xchg
mov
xchg
fldenv
stc
lahf
mov
xchg
lock
test
bound
xchg
outsl
jl
xchg
sub
aam
gs
push
push
push
out
test
ss
cltd
mov
das
lds
out
inc
and
push
movsl
and
inc
out
gs
sbb
aad
inc
ljmp
imul
and
fldt
aas
lds
lods
mov
filds
aas
lods
push
clc
cmpl
xor
cmp
jo
xor
mov
roll
xor
add
hlt
je
pop
xor
ret
inc
aas
rcrl
cmp
push
ret
mov
outsl
add
dec
stc
xchg
pop
add
cmc
aam
test
mov
shlb
mov
add
xchg
rol
mov
ror
or
int
lock
push
push
aad
xor
xchg
fistpll
sub
adc
cmp
push
push
roll
xlat
in
sbb
push
in
nop
inc
xor
fdivrl
pop
fisubs
pusha
pop
insb
pop
fsub
mov
cld
inc
data16
aad
enter
leave
lods
mulb
mov
jmp
xor
mov
sub
punpckhdq
jmp
mov
es
stos
jge
jg,pn
dec
mov
adc
icebp
ss
das
push
jno
and
std
shlb
clc
fnstenv
xor
mov
ss
or
lea
mov
or
push
or
fcmovb
rol
flds
push
rolb
mov
push
int
pop
xchg
movsl
fadds
lret
leave
hlt
xchg
and
add
je
adc
sti
lret
jnp
inc
sub
mov
xchg
aam
iret
pop
and
fildl
mov
push
xchg
lcall
push
cltd
int
rolb
lcall
push
jle
inc
pop
cmc
iret
push
xlat
xchg
mov
adc
cli
sub
insb
lods
pop
rcrb
mov
ret
jmp
xor
xor
pop
pop
loop
loop
lods
repz
gs
and
push
out
loop
daa
out
jbe
adcl
stc
insl
dec
fisubs
jmp
sbb
insb
out
mov
dec
sub
sub
insl
jbe
mov
cmpsl
add
loope
repz
jge
mov
insb
jmp
aam
cmp
aam
js
inc
xor
scas
clc
pop
daa
cld
xor
or
mov
pop
shll
add
les
jle
call
jecxz
xchg
shr
add
out
add
cmpsb
add
add
adc
cmpl
and
imul
adc
icebp
jge
pusha
add
sbb
sbb
jle
push
dec
stc
xchg
push
inc
cltd
call
or
cltd
das
test
xlat
pop
cmp
iret
stos
sbb
cmp
daa
bound
cmpsl
lea
push
jle
xor
xor
js
xor
jae
inc
jp
mov
aaa
out
inc
fs
repz
cmp
ljmp
lods
int
repnz
jae
in
out
out
rcr
outsl
outsl
in
jge
adc
lret
mov
pop
in
hlt
xor
add
data16
test
faddl
dec
hlt
xor
push
dec
in
mov
outsl
jnp
push
mov
pop
hlt
sbb
add
jmp
ds
test
mov
in
adc
movsb
sbbl
push
lds
test
test
xchg
sbbb
sub
push
dec
sub
dec
shrb
adc
nop
push
xchg
adc
adc
push
xchg
adc
cwtl
add
lret
sbb
data16
xchg
jo
loop
pop
loope
fistps
pop
push
sti
or
in
clc
pop
lahf
cmp
es
lods
movsb
jge
repz
jb
popa
mov
inc
fs
fs
inc
test
es
out
pop
sbb
cmp
imul
sub
ret
xlat
push
pop
js
stc
mov
ss
clc
and
int3
add
dec
bnd
mov
in
dec
mov
cmp
sahf
xchg
decb
inc
xlat
int
jge
push
inc
inc
push
roll
nop
mov
inc
into
std
je
sbb
inc
jecxz
mov
adcb
rcl
std
xlat
les
cmp
or
mov
pop
pop
mov
pop
mov
and
mov
or
lret
cmp
mov
xchg
in
imul
cmc
fsubrs
sahf
inc
sub
sbb
fsubl
ret
sbb
sbb
pop
paddusb
push
out
nop
in
test
pop
mov
and
cmp
and
mov
pushf
push
xchg
dec
inc
sti
daa
mov
lahf
jle
cmp
mov
push
icebp
decb
xchg
fildl
jns
mov
mov
fdivs
dec
into
or
jnp
mov
scas
mov
or
fdivrl
mov
adcb
mov
add
cmp
push
jge
js
inc
mov
loop
outsl
or
dec
aad
outsl
add
mov
inc
in
fucom
insl
fdiv
out
iret
pop
nop
popl
and
xchg
dec
out
enter
test
mov
mov
loopne
js
sub
xor
fisttps
fnstcw
pop
push
pushf
push
adc
sub
popf
adcl
xchg
pop
push
outsl
pop
sbb
in
pop
loope
cmpsl
negb
mov
fs
sbb
mov
sub
jge
out
loopne
inc
jg
push
mov
out
mov
jbe
negl
pop
mull
or
sub
sbb
imul
call
addb
enter
shlb
ja
decl
xor
loop
adcb
ss
gs
jp
push
std
cltd
jb
jecxz
mov
jns
mov
clc
jp
xor
mov
xchg
fadd
cmpl
imulb
jp
fwait
mov
jp
or
sub
ret
stos
ffree
enter
test
lods
sbb
ret
shll
cmp
popa
mov
mov
mov
dec
and
loope
bound
fldcw
imul
loope
adc
and
pop
xchg
inc
popf
inc
mov
mov
or
xchg
push
xchg
loopne
test
shll
repnz
push
mov
xchg
popa
out
xor
imul
lods
push
inc
data16
daa
xchg
addr16
imul
push
sub
dec
insl
adc
xor
imul
xchg
inc
cmp
pop
mov
mov
sub
cmp
mov
mov
pusha
dec
pop
or
call
std
pop
cmp
pop
js
popf
les
fwait
add
sub
orl
inc
or
roll
pop
movl
adc
pop
dec
xchg
xor
mov
push
push
adc
stos
adc
lock
or
and
mov
cwtl
cltd
dec
fisubrl
std
cmp
imul
xchg
xchg
in
loopne
sahf
mov
outsl
fs
mov
pop
xchg
icebp
xor
enter
push
and
daa
ret
push
ret
jl
sti
jecxz
sti
cmp
bound
sbb
jb
xchg
sbbb
out
adc
stos
sbb
sarb
xor
mov
sub
stos
mov
outsl
loopne
repz
lea
cmp
stc
clc
mov
cwtl
cmc
dec
hlt
and
nop
notl
adc
pop
mov
jae
jnp
out
cmp
pop
js
add
cmp
and
add
pop
mov
mov
cmp
aaa
ret
int
orl
hlt
add
xchg
scas
mov
scas
push
mov
sbb
push
xlat
insb
adc
dec
inc
addr16
ljmp
pusha
adc
xor
and
and
jb
push
outsl
xchg
push
enter
push
rorb
mov
bound
and
in
pop
sbb
scas
push
push
cmpsl
es
popa
mov
ret
and
jle
in
add
stos
sarb
repz
in
je
test
lods
icebp
sbb
xor
adc
pop
outsl
pmaddwd
scas
in
stos
shrl
sub
int3
cmp
lea
cmp
cmp
mov
iret
add
and
pop
cmp
cld
ror
enter
add
aad
push
mov
rolb
jo
inc
jg
andb
rol
mov
lret
rorl
in
dec
lcall
test
adc
imul
mov
sahf
rcrl
and
cmp
pop
dec
lcall
push
jb
and
aad
fwait
cltd
fcomi
pop
fistl
inc
ss
and
in
popf
lahf
inc
out
cmpsb
push
pop
jle
or
jecxz,pn
sub
xchg
daa
and
and
test
loope
cmp
mov
das
std
mov
sub
cmp
movsl
xchg
pushaw
and
in
and
sti
sub
je
sub
imul
int3
mov
out
das
or
mov
jae
xor
js
cmpsb
lret
sbb
sub
cmp
int
jae
sarl
mov
inc
push
jl
pushf
mov
xchg
js
add
mov
jbe
add
adcl
xor
dec
in
sbb
inc
out
aas
add
movl
mov
andb
dec
into
fistps
dec
mov
sub
fsubrs
int
daa
in
je
mov
aad
arpl
cmp
loop
adc
faddl
mov
lcall
inc
imul
insb
test
insl
xchg
scas
sub
in
sbb
sub
arpl
xor
je
hlt
dec
pusha
and
jbe
test
and
jo
test
cmc
mov
arpl
imul
idivb
cmp
shll
jl
stos
mov
shl
lods
je
jnp
dec
cs
loop
add
arpl
jl
cmp
mov
js
mov
movl
jg
jecxz
push
inc
dec
jge
xor
dec
jge
mov
test
dec
mov
or
addl
cmc
push
add
dec
ja
fimull
test
adc
push
adc
inc
push
jl
fst
pop
mov
ror
mov
js
mov
xchg
in
pop
cmp
xchg
fnstenv
inc
popa
xchg
push
mov
and
rcll
xchg
sbb
xchg
cwtl
ja
mov
pop
sbb
in
stos
dec
movsb
jp
xor
inc
sub
push
divl
gs
in
enter
in
test
es
in
sti
jnp
mov
clc
jl
and
enter
cmc
jl
pop
out
int3
jbe
sub
ja
cmp
movsb
std
and
mov
add
int
mov
loopne
cld
mov
mov
or
aas
jmp
lret
push
and
sub
ret
ret
dec
shll
adc
jp
sbb
push
int
sbb
sbb
shl
lret
adc
stc
pop
lea
les
enter
lods
mov
adc
push
stos
sub
mov
das
arpl
das
movsb
setbe
and
add
sbb
mov
out
sbb
enter
pop
xchg
mov
int3
xchg
jecxz
push
mov
lahf
push
arpl
pop
fstpl
sbb
pop
mov
sub
imul
call
add
loop
lods
in
sub
mov
imul
xor
xor
into
add
mov
mov
mov
cmp
add
xchg
xor
xor
stc
pop
ds
lds
test
stc
sub
test
cmc
mov
stc
lret
inc
inc
mov
add
in
int
dec
inc
in
repz
inc
lods
mov
push
lret
adc
mov
lea
icebp
mov
push
mov
or
lret
sub
push
sahf
das
ja
and
mov
out
ljmp
adc
shr
xlat
mov
into
aad
mov
push
negb
mov
data16
fists
mov
fidivs
and
pop
popa
sbb
fsubl
jecxz
sbb
aam
xchg
bound
xor
sahf
xor
pop
pushf
xor
jns
or
sub
jno
sbb
jg
add
inc
push
out
push
cmp
cmp
push
mov
mov
sub
dec
push
test
in
cmp
sbb
lods
cmp
clc
jb
shlb
mov
lock
xorb
pop
mov
jg
cmp
sbb
cmp
add
repnz
pop
ret
push
cli
cmp
orb
push
inc
bound
movb
sub
add
inc
nop
push
int3
scas
push
cmpsb
push
into
sbb
or
ja,pt
adc
mov
mov
adc
or
cmpsl
mov
adcl
push
scas
dec
cmp
lea
arpl
loopne
sub
adc
sbb
test
adc
es
iret
pop
clc
push
loopne
pop
dec
push
movsb
push
pop
das
aaa
pop
cmpsl
fninit
pop
loope
xor
sub
in
sub
scas
sti
xor
mov
in
mov
and
mov
inc
xor
out
pusha
push
outsl
les
jnp
or
iret
mov
cmp
jg
and
cmc
lret
mov
mov
sub
push
xor
mov
mov
xor
inc
mov
fimull
mov
dec
stc
push
imul
fiadds
or
pop
or
add
cmp
inc
dec
dec
and
sub
inc
mov
mov
adc
mov
in
pop
aas
loopne
or
xchg
dec
and
rorl
stos
push
cmc
popa
rclb
inc
test
sarb
pop
mov
icebp
xchg
mov
cmp
movsb
push
popf
mov
push
stos
outsl
aam
out
jmp
pop
idiv
stc
outsb
and
and
jne
xor
fdivrp
loop
addr16
loop
ret
sub
insl
dec
cs
arpl
sub
into
jmp
add
outsb
ss
call
hlt
gs
test
enter
in
sti
and
inc
shlb
stc
cli
jecxz
inc
mov
push
mov
jae
icebp
jl
mov
ret
dec
jnp
movsb
adc
mov
clc
mov
shrl
pop
cmp
fists
mov
xchg
call
jg
mov
inc
cmp
lret
into
jg
xchg
or
popw
test
ret
or
loope
mov
int3
adc
lea
inc
adc
fwait
scas
push
jge
inc
hlt
dec
fcmovne
dec
adc
cltd
mov
loop
hlt
xchg
shl
adcb
test
ljmp
sahf
sbb
mov
ljmp
xchg
enter
mov
imul
inc
pop
push
test
pop
popa
insl
or
pop
lret
in
testl
out
dec
es
ret
mov
xor
jae
jmp
test
add
je
push
cs
icebp
xor
test
mov
in
mov
xchg
call
hlt
aam
inc
jmp
jge
mov
aaa
jbe
clc
andl
mov
addb
xchg
aad
xchg
pop
lods
add
lret
mov
push
cmp
push
lret
mov
outsl
into
cmc
or
fnstcw
test
fisttps
ret
fcoml
rorb
imul
arpl
movsl
cmc
push
push
push
iret
jno
in
push
pushf
adc
or
pop
sarb
fs
mov
mov
sbb
fcomps
xchg
mov
mov
mov
loop
cmc
jbe
lcall
sbb
inc
loopne
dec
lahf
insb
pop
out
lods
jle
lahf
loop
test
and
xor
popa
arpl
addr16
hlt
and
fsubl
sub
shlb
in
add
sub
jbe
ljmp
push
sub
inc
ss
lods
orl
outsl
jb
cli
xorb
mov
mov
xor
jle
jbe
push
mov
lods
in
push
jmp
pop
pusha
lcall
cmp
mov
andb
pop
inc
mov
lret
mov
psubq
rorl
jecxz
popa
push
daa
dec
lods
jns
loope
inc
dec
sti
xchg
mov
pop
clc
mov
xor
xchg
loop
fcoms
popf
sbb
xlat
vpmacsdql
fdivrl
jp
sbb
dec
cwtl
pop
pop
out
jo
push
bound
sub
and
data16
pop
sbb
leave
lea
and
test
in
dec
sahf
cmpsb
sbb
jnp
call
dec
sub
adc
test
std
js
cmp
sub
pushf
sub
call
mov
jno
inc
sub
out
lcall
lock
mov
pop
xor
call
les
jmp
repz
xchg
in
mov
adc
xchg
icebp
mov
sub
mov
or
jmp
push
adc
pop
sldt
test
xor
add
inc
out
and
int
hlt
lret
shll
dec
leave
imul
or
mov
sahf
loop
or
ffreep
adc
dec
push
mov
out
push
cmpsb
add
dec
icebp
in
push
xlat
iret
std
sbb
pop
sub
dec
popa
cmp
sub
popf
lahf
ljmp
and
popa
ds
stos
mulb
test
adc
out
enter
fs
rdmsr
icebp
mov
push
je
daa
and
ljmp
add
ret
jmp
push
out
cmp
jecxz
jg
cmp
mov
hlt
fdivl
scas
sahf
inc
je
pop
lcall
pop
aas
xor
in
sbb
jb
lods
cltd
push
clc
movl
stos
cmp
neg
and
or
cwtl
out
jl
or
push
xchg
mov
or
or
push
rorl
add
pop
rcr
add
ret
rolb
call
mov
jmp
loopne
mov
in
pop
sbb
and
out
push
outsl
ret
bound
in
jb
repz
mov
adc
data16
xor
push
mov
je
cwtl
push
pop
cmp
jns
jnp
jnp
cltd
pop
xchg
das
popf
sbb
cmpsb
mov
and
and
sub
inc
cld
hlt
and
data16
mov
jae
test
sti
in
stos
enter
cmpl
daa
in
shrl
scas
jge
xor
mov
sub
lret
cs
outsl
enter
add
mov
mov
inc
pop
je
out
mov
js
divb
iret
fldenv
pop
mov
or
int3
bound
push
js
or
or
adc
jle
fbld
out
add
adc
rcll
inc
xor
movsl
pop
enter
xor
dec
cltd
xchg
and
mov
icebp
adc
data16
iret
pop
lock
push
lea
loope
xor
repz
int3
jo
je
xchg
les
add
add
orb
fldl2e
stc
sub
push
pop
fwait
ret
popf
mov
jbe
stos
jecxz
jnp
sbb
je
arpl
shl
push
pop
xor
jbe
mov
inc
aas
addr16
mov
pop
cmpsl
call
jp
test
flds
test
pop
int3
out
subb
filds
imul
push
inc
ret
or
aaa
popf
sbb
pusha
movb
xchg
stos
movl
or
mov
sbbb
jnp
adc
sbb
jp
add
iret
adc
cwtl
mov
add
fs
or
pop
xor
leave
out
test
push
int
inc
dec
inc
mov
xchg
incl
ss
push
mov
pop
adc
dec
ror
js
pminsw
aam
into
rcll
lock
jp
pop
or
add
lcall
inc
fcmovnb
aam
xchg
leave
jecxz
cwtl
mov
sbb
add
jo
sub
sub
push
or
sub
pop
mov
fcompl
jmp
xchg
cmpsl
fsubrs
rcrb
cmp
sbb
mov
clc
ss
adc
sub
lret
xchg
lods
scas
popa
popf
sub
cmp
jb
in
add
mov
pop
std
das
imul
outsb
cmp
adc
lock
push
enter
inc
stc
mov
sbb
int3
sub
cld
aaa
add
les
ret
push
inc
in
push
cmc
call
sti
fadds
lahf
orl
mov
mov
outsl
stc
iret
dec
add
push
aam
cmpsl
fstpl
cmp
jmp
or
and
mov
dec
ret
pop
and
mov
enter
shrb
fldenv
test
mov
jge
mov
ja
enter
test
mov
movsl
pushf
lcall
in
ret
out
mov
out
in
pop
sti
xor
jo
sti
js
test
adc
jp
jbe
movsb
lret
jmp
mov
scas
arpl
cmpsb
outsl
dec
pop
repnz
cld
hlt
or
mov
int3
jne
push
inc
add
inc
add
cmp
xor
and
xchg
push
sahf
test
jp
aas
roll
pop
adc
add
imul
push
mov
dec
fcos
pop
scas
xorl
push
add
pop
xor
aas
fs
xchg
xchg
push
add
inc
add
inc
mov
mov
jp
imul
rcll
filds
shlb
inc
cmp
add
popa
scas
lcall
xchg
int
jecxz
mov
dec
adcl
xor
jnp
sahf
lods
test
mov
sbb
pop
xchg
mov
aas
mov
dec
fwait
loope
cmp
bound
push
lods
sbb
xor
das
addr16
cmpsl
inc
mov
aas
ds
jecxz
shr
test
mov
sub
xchg
lock
out
or
jbe
das
add
fxch
negl
stc
xor
sti
mov
or
cmp
adc
mov
maskmovq
testl
jp
adc
pusha
add
xor
aaa
decl
xlat
dec
push
ret
fmuls
jne
inc
lds
add
xor
xchg
dec
xchg
test
push
ror
leave
adc
lret
aas
mov
or
out
lods
xchg
gs
mov
xchg
adc
pop
dec
test
pop
pusha
leave
shr
sbb
fcmovnbe
out
push
xchg
adc
pop
xchg
xchg
push
shlb
push
popa
pop
rcl
sbb
pop
sub
bound
aam
movsb
xchg
pop
es
movsl
out
fsubrl
sbb
lock
ja
sbb
cmpsl
js
sbb
and
daa
cs
add
mov
cmp
sti
rcrb
push
hlt
push
inc
jo
fs
xorl
jae
pop
mov
jg
or
cltd
pop
xor
jl
jb
adc
xchg
jge
gs
shr
xor
push
fidivrl
vunpckhps
xchg
ficomps
pop
jg
or
cmpb
cmp
jge,pn
es
dec
repz
leave
mov
pop
or
pop
push
insl
fadds
push
test
repz
xchg
adc
lea
pop
mov
lahf
pusha
ja
loopne
xor
mov
ss
and
push
test
ja
in
jae
aad
rcll
loopne
xchg
push
adc
fldcw
jmp
jmp
test
outsl
sarb
scas
loope
imul
push
pop
nopl
in
gs
sub
insb
ljmp
movsb
fcoml
aaa
daa
outsb
push
push
shrl
les
and
xchg
jne
push
aaa
outsb
imul
test
jns
sub
cmc
mov
repnz
outsl
mov
out
push
repnz
je
xchg
jns
les
icebp
mov
dec
mov
nop
sbb
fs
xlat
pop
add
push
pop
jl
push
ror
les
dec
je
adc
xchg
inc
push
mov
data16
lods
andb
insl
enter
iret
ljmp
inc
xchg
rorb
xchg
adc
mov
mov
dec
xchg
dec
std
dec
rcrl
nop
iret
mov
dec
push
inc
inc
loope
sub
jae
jno
stos
adc
inc
adc
jne
lret
nop
pusha
mov
mov
sbb
cmp
out
lcall
lds
lret
jbe
lods
lods
arpl
mov
or
cmp
mov
jnp
in
mov
mov
sub
sbb
inc
lock
cmc
into
outsl
insl
ja
sub
and
iret
mov
jns
ret
js
outsl
push
ret
dec
ficoml
shl
jb
jae
jae
and
mov
leave
jp
rorl
cmp
inc
jge
mov
mov
lcall
inc
push
inc
sbbl
dec
push
sbbb
movsb
lahf
roll
orb
xor
cltd
pop
or
push
dec
ds
dec
pop
mov
testl
int3
mov
pop
dec
mov
inc
shll
and
add
test
pop
jb
push
test
out
inc
fistpl
sbb
pop
addr16
insb
test
cltd
das
frstor
sbb
mov
es
and
add
pop
inc
imul
pop
aas
cs
popa
add
sub
add
das
add
fidivs
in
adc
lods
daa
aas
ljmp
cmp
jno
and
adc
scas
sti
cmpsl
jnp,pt
xor
mov
dec
xchg
inc
ret
mov
mov
out
idiv
pop
push
push
add
mov
sbb
mov
leave
iret
mov
dec
mov
ds
pop
mov
dec
mov
test
add
mov
add
test
push
pop
faddl
xchg
push
ficoms
mov
enter
adc
mov
cs
adc
cmp
movsl
xchg
fstpt
rcll
aad
pop
fstl
pop
frstor
mov
mov
sbb
push
sub
inc
cs
pusha
bound
movsl
das
jo
xor
out
or
out
cmc
push
movsb
add
jae
jecxz
and
mul
ret
mov
add
in
in
mov
fadds
enter
sbb
xor
cmc
cltd
push
icebp
dec
sub
cltd
add
sbb
xor
fsubrl
cmp
dec
or
add
hlt
fs
cmp
xchg
jg
mov
out
inc
mov
popf
inc
xchg
mov
add
inc
lds
add
sbbb
dec
or
dec
fiadds
dec
mov
inc
jmp
mov
int3
movb
push
in
fbld
lcall
dec
dec
and
adc
mov
sbb
pop
into
xlat
ret
cmpb
mov
cmp
mov
lcall
and
cmpl
mov
ret
jecxz
jno
clc
addr16
ss
cmp
lds
loopne
arpl
mov
ss
and
insl
mov
sub
je
or
pop
test
in
sbb
jae
pop
or
aas
in
sub
xor
adc
pop
adc
xor
cli
sub
dec
inc
inc
into
mov
add
cmc
xchg
sub
shlb
push
cmp
jb
xor
xor
sbb
sbb
or
pop
dec
inc
push
cmp
test
or
sbb
addr16
xor
push
dec
sub
push
mov
lock
cli
dec
iret
cld
cmp
or
xlat
movsb
ljmp
or
int
insl
push
mov
and
sbb
cmc
shl
jo
popa
sbb
dec
xchg
repnz
xor
ljmp
sub
arpl
sahf
push
sub
test
data16
les
pop
popa
sbbb
sbb
fmuls
xor
andb
pusha
xchg
aam
and
cwtl
lods
in
jns
imul
hlt
in
sbb
xor
lret
stos
or
stc
pushf
dec
cmp
mov
dec
mov
out
sub
stos
jb
fdivr
jp
ljmp
pop
rolb
mov
dec
addl
dec
test
lea
out
push
dec
mov
into
jl
test
xchg
push
std
inc
xlat
loop
mov
insb
das
pushf
dec
lret
adc
rcll
mov
enter
xchg
roll
jge
pop
fstl
mov
shr
xchg
push
sbbl
data16
dec
push
cmp
xchg
lea
shrl
lea
and
and
sbb
sub
mov
sub
fistl
cwtl
dec
imul
lcall
iret
cltd
jns
aad
xchg
push
shlb
jecxz
xchg
std
out
mov
xchg
ss
jbe
xchg
rorb
gs
sub
push
in
call
imul
fwait
jno
inc
ss
insl
jp
mov
call
inc
add
pop
push
scas
call
mov
lret
jo
mov
outsl
sub
mov
pop
aaa
jle
mov
testb
ret
insb
cmp
cmp
ljmp
mov
sub
loopne
insl
jno
inc
adc
add
inc
test
test
xor
sti
pop
push
jle
pop
pushf
xchg
lods
cmp
rcll
pop
or
mov
xor
jg
insb
int
adc
add
in
lret
xchg
cmpsl
pop
outsl
das
fdivrs
xchg
mov
mov
aad
cmp
push
das
dec
out
and
and
xchg
and
in
jmp
popa
popa
arpl
nop
punpckldq
sub
in
mov
addr16
daa
dec
fwait
dec
clc
ljmp
cmp
adc
in
jne
insb
fstl
icebp
mov
out
pop
xor
push
jb
push
icebp
push
sbb
cmp
mov
jb
or
sub
fadds
inc
sarb
mov
in
fisttpll
ljmp
jp
push
ds
loop
pop
or
jns
and
sti
pop
xlat
sbbl
enter
sahf
test
inc
in
orb
push
leave
cmp
in
movsl
lods
roll
jmp
fsubs
xlat
xchg
in
push
rcll
iret
xchg
cltd
sub
xchg
out
pop
faddl
stos
popf
push
sbb
cli
lea
lods
aaa
fcompl
inc
das
fmul
jge
sbb
adc
repnz
movsb
mov
jo
xchg
repz
jecxz
mov
dec
mov
loop
push
jo
clc
jmp
test
jle
lret
jmp
outsb
subl
cmpsb
stc
lock
sub
loope
or
add
pop
incb
out
repz
int3
dec
jl
das
cmp
lcall
sbb
stos
popa
add
and
push
mov
incl
xchg
es
adc
lret
push
cld
add
jae
mov
cltd
pop
ja
xchg
imul
jp
mov
fwait
notb
cmp
adc
dec
pushf
ds
jno
fsqrt
push
push
addr16
xchg
pop
gs
cmpsb
int
add
aad
push
xlat
fnstenv
pop
pop
adc
fcmovne
loope
mov
fwait
out
in
ds
pusha
ret
mov
cmp
ljmp
xchg
imul
sub
jb
sub
jae
mov
push
push
test
sub
mov
enter
sub
and
dec
leave
repz
add
or
xor
cs
mov
xor
and
xor
sarb
ret
xor
inc
stos
cmp
fstl
add
push
sbbl
mov
pop
stos
pop
xchg
leave
lods
dec
lea
xchg
cwtl
lahf
xlat
mov
out
icebp
loop
int
mov
mov
cmpsl
pop
in
adc
sub
aas
leave
in
fnstenv
iret
inc
ljmp
or
mov
in
rcrb
push
jo
lea
mov
adc
mov
sbb
sbb
xchg
ja
xchg
scas
fwait
cmp
fstps
adc
inc
int3
and
int3
xor
negl
add
sub
sub
push
std
mov
movsb
cld
jmp
mov
sub
fwait
add
sub
hlt
ja
test
lahf
icebp
xchg
inc
jno
clc
lods
xor
loop
cs
xor
scas
fsub
sub
outsb
adc
nop
push
outsl
ljmp
jmp
adc
dec
and
mul
cmp
cmp
mov
cli
lret
in
mov
sbbb
fstp
xchg
leave
add
adc
clc
cmp
jno
push
sub
sahf
mov
inc
dec
test
decb
test
dec
and
cmova
add
jno
mov
mov
xor
stos
mov
push
xchg
mov
pop
lock
cmp
rcrb
mov
fstps
xchg
fisubrs
call
sbb
sub
sbb
ljmp
pop
fistpll
or
popf
jo
cmpsl
test
orb
cs
jecxz
cmc
shr
xor
pop
jecxz
stc
and
mov
push
daa
mov
test
insb
dec
shrl
push
outsb
test
cwtl
inc
scas
xor
mov
pop
dec
das
jmp
mov
clc
stos
lods
mov
xor
push
jge
jne
mov
arpl
jge
mov
mov
sub
ljmp
lds
adc
outsl
inc
js
aam
mov
pop
in
jmp
int
mov
mov
sub
rcll
mov
lret
cmpsl
sti
mov
dec
push
popf
add
adc
sub
repz
adc
in
into
xchg
xor
call
push
movsl
bound
stos
fwait
dec
aad
not
and
cmp
sbb
ljmp
arpl
inc
fstpt
imul
fwait
popa
push
fs
inc
xor
adcl
cmp
xorb
cmp
mov
std
scas
cli
lods
repz
outsl
dec
xlat
inc
sub
push
stc
das
pop
fadds
sbb
hlt
pushf
shr
lods
rorl
add
lret
xor
out
cld
xchg
jg
push
repz
enter
mov
dec
xchg
aas
pop
push
cmp
cmp
mov
or
inc
sbb
mov
cmp
pop
jg
jl
inc
xchg
adc
dec
lcall
mov
adc
leave
cmpsb
stc
add
scas
in
les
addr16
inc
adc
add
fcoms
pop
mov
mov
jbe
into
and
cmpsb
adcb
mov
push
pop
xchg
ljmp
arpl
xor
jne
push
fwait
mov
divl
sti
sub
mov
std
xlat
jge
mov
sbb
loopne
hlt
pusha
adc
mov
sub
in
mov
jl
cmp
push
insw
loop
daa
jo
out
mov
repnz
cld
repnz
sub
sub
xor
add
inc
lds
jno
daa
inc
stc
out
xchg
mov
lret
clc
adc
xorl
mov
mov
inc
adcb
iret
jg
jge
mov
cwtl
dec
mov
jge
incb
xchg
mov
mov
dec
dec
les
sbb
int
sbb
push
into
subb
lret
nop
mov
jl
lock
rclb
in
dec
pusha
xchg
dec
inc
shl
rcrl
push
mov
lods
cltd
lcall
dec
pushf
fistl
jecxz
mov
fsubrs
cmpsl
pop
lock
loopne
js
pop
dec
pusha
dec
test
loop
icebp
pop
stc
jnp
mov
pop
sub
xor
icebp
sub
sbb
out
cmc
lret
lock
ret
std
cmpsl
addr16
sarb
sub
ds
or
or
int3
pop
stos
cld
in
xor
inc
xor
push
int3
jbe
push
xor
testl
imulb
xchg
and
mov
add
ss
add
cmc
mov
daa
push
mov
mov
arpl
mov
sbb
fmull
add
ret
rcrl
decb
inc
push
adc
xchg
leave
pusha
xchg
inc
xchg
les
or
mov
adc
adc
popf
nop
cmp
test
andps
adc
dec
jmp
push
inc
ljmp
adc
adc
test
xchg
pop
movsb
popf
cld
sti
jbe
lcall
pop
sbb
rcrl
push
fucomi
loope
jp
sub
mov
arpl
push
movsl
ret
sbb
adc
jmp
out
inc
movsl
sub
mov
add
sti
repnz
arpl
rdtsc
js
test
sti
scas
out
cmp
into
jb
inc
std
pusha
lret
mov
push
pop
dec
scas
mov
jnp
shll
mov
xorl
jp
aam
ds
ds
sbb
xchg
mov
daa
test
sti
xor
ret
mov
xchg
and
cld
xchg
rcll
xchg
je
xor
dec
pop
mov
loop
andb
push
push
int3
sub
fcomp
test
xchg
add
push
test
cwtl
xlat
dec
mov
add
dec
pop
fwait
or
insb
loopne
in
sahf
mov
outsl
jnp
jne
mov
repz
push
ret
repz
mov
adc
cmpsb
pop
cli
dec
out
jle
jmp
test
js
pop
in
sub
cwtl
ficompl
pusha
stos
pop
xor
int
or
das
insl
stos
in
aam
sbb
push
cltd
jecxz
pop
je
xlat
mov
mov
stc
pop
out
repnz
cwtl
lret
sub
or
mov
fldt
xchg
scas
lea
outsb
cmp
repnz
xor
inc
inc
jae
push
jno
adc
test
ds
inc
xorb
add
out
pop
inc
add
mov
fldl
add
mov
aas
or
in
or
sbb
pop
and
test
mov
fimull
pop
out
xchg
aam
dec
sub
or
lret
mov
dec
es
mov
mov
push
xchg
fcoms
mov
aam
sbb
shlb
sub
fwait
dec
movsl
pushf
pop
in
fsqrt
sahf
xchg
ret
lahf
jmp
cmpsb
in
and
pop
neg
shl
loopne
in
inc
sbb
and
jp
jnp
lock
mov
clc
imul
out
mov
nop
ljmp
inc
add
in
mov
aas
aas
hlt
leave
fnstenv
jmp
and
testb
stos
or
es
adc
hlt
jge
xor
insl
dec
xorl
push
mov
jp
mov
dec
pop
cmpb
loopne
xlat
lcall
inc
fsub
xchg
add
and
add
xchg
in
pushf
and
es
out
mov
ficoms
cwtl
dec
dec
mov
enter
mov
ds
mov
pop
push
lahf
xchg
mov
and
jmp
movsl
aam
jae
and
fcomps
loopne
push
sub
add
in
push
and
imul
cwtl
sbb
lods
shl
or
cmp
xor
jno
in
movsl
bound
popa
sub
pop
cmc
mov
repz
movsb
sub
mov
inc
clc
stos
mov
sub
je
outsb
stc
mov
xor
cs
out
in
cmovns
mov
pop
dec
loop
add
stc
ja
sub
or
hlt
dec
or
ret
xor
push
mov
adc
cmp
sbb
jge
fstpt
xor
cmc
jnp
lea
sub
jbe
xchg
dec
mov
iret
pop
add
jne
inc
rorb
adc
pop
outsb
dec
mov
movsb
mov
push
sub
mov
int
adc
pop
pop
stos
cmp
or
ror
sub
in
fs
inc
es
xor
mov
xchg
adc
sbb
sbb
pop
out
jns
xchg
cmc
and
fldt
adc
xchg
cmp
sahf
xor
push
loop
outsb
frstor
fs
and
arpl
data16
fists
ljmp
sub
movsl
push
adc
dec
outsb
sbb
jno
jecxz
mov
dec
out
cli
push
jbe
mov
and
inc
daa
sub
ja
push
js
insl
dec
negb
mov
sbb
arpl
frstor
cmp
add
jge
loop
jmp
repnz
sbb
aas
les
inc
rcr
rol
sub
stos
fadds
decb
fistl
fsubs
dec
pop
shl
jno
leave
fimuls
mov
dec
mov
inc
xor
push
loop
mov
mov
das
into
xor
adc
fidivl
adc
jnp
cmpsl
pop
mov
iret
push
cltd
lahf
or
xor
or
and
lcall
daa
dec
into
dec
aad
movsl
or
daa
push
or
loop
arpl
loop
xchg
adc
test
jp
shll
pushf
out
daa
shr
push
inc
mov
cmc
daa
xor
aas
ja
inc
xorl
pop
incb
inc
lock
les
lret
xor
push
mov
icebp
lock
xor
pop
jne
lret
mov
nop
mov
stc
scas
mov
nop
mov
sti
fnstcw
mov
sub
std
aaa
pop
push
jg
push
add
lods
orb
add
cmp
in
inc
jb
xchg
inc
mov
add
fcmove
sbb
lret
or
repnz
mov
fwait
push
decb
dec
or
rcrb
pop
sub
arpl
jb
lods
mov
pushf
divb
fsubl
pushf
mov
xchg
jecxz
inc
test
ficomps
fsts
dec
cld
out
pop
pop
in
lcall
mov
pushf
cmp
push
xchg
sarb
inc
sbb
push
mov
mov
ja
in
inc
jbe
add
and
or
ja
scas
fdivs
js
sub
mov
outsb
mov
adc
in
mov
addb
je
or
in
adc
out
xchg
add
insl
push
xorl
xchg
xchg
inc
mov
enter
mov
or
mov
rorb
mov
decl
xchg
sar
mov
mov
mov
dec
dec
test
add
jnp
int
push
fucomip
lcall
cmp
adc
in
mov
shlb
out
push
push
test
lock
pop
add
bound
or
xchg
test
fdiv
push
pushf
cwtl
xchg
sahf
jae
mov
lahf
and
pop
mov
loope
test
adc
shlb
and
data16
cmp
ds
mov
xor
jae
out
and
cmc
jns
dec
insb
xor
stos
stos
jo
inc
cli
test
movl
jg
inc
sbb
mov
xchg
dec
mov
pusha
jno
out
adc
mov
pop
xor
clc
jbe
mov
adc
roll
dec
xchg
arpl
sbb
cmpsl
sti
pmullw
fnstenv
cmp
xchg
push
xchg
pop
rcrb
add
fmull
fldl
lods
loop
in
into
loopne
mov
inc
cmp
mov
fisttpl
imul
sub
dec
mov
mov
push
insb
pop
cmovns
mov
fsts
into
fmull
adc
ffree
adc
push
loopne
xchg
repnz
sub
or
and
pop
pop
lds
sbb
xchg
out
fdivl
jecxz
sbb
xchg
in
and
or
lods
push
sub
and
and
add
xchg
popa
jb
addr16
xor
lock
icebp
adc
jge
mov
push
jnp
stos
outsl
leave
jnp
mov
mov
jnp
xor
sarb
mov
stc
pop
inc
mov
add
mov
ret
push
jae
jb
xchg
mov
mov
into
testb
or
add
decb
in
jle
fdivrs
cmp
and
and
jge
and
inc
insl
mov
mov
inc
or
dec
test
dec
rcrb
push
call
out
cmp
adc
lahf
inc
iret
pop
pop
inc
ror
loopne
pop
mov
jge
jb
xchg
data16
leave
push
stc
mov
scas
mov
push
pop
popf
jle
mov
dec
popf
push
pop
cmpsb
mov
loopne
dec
mov
vcvtdq2pd
shrl
outsl
add
inc
push
sub
push
icebp
stos
das
jae
imul
loop
cmpsl
mov
imul
push
ss
xor
xorb
hlt
fdivrl
jae
cli
movsl
pop
stc
rorl
xor
aas
dec
sti
xor
iret
cmpb
jp
test
fdivrs
sahf
adc
faddl
xchg
aam
mov
ret
pop
jge
push
enter
or
mov
dec
movsb
inc
imul
lahf
fs
mov
adc
bound
xchg
jns
mov
fcmovu
loope
push
lcall
pop
jp
adc
push
imul
add
fnstcw
out
push
fcmovbe
mov
mov
jno
and
xor
add
imul
mov
jno
in
cmp
dec
jl
cmpsl
daa
dec
cli
lock
mov
std
repnz
push
sub
bound
push
and
cwtl
mov
sarb
aaa
fbstp
sub
push
inc
jae
mov
lcall
cmpb
push
cmp
cmp
mov
cmp
jle
xor
mov
mov
jp
mov
inc
sar
inc
cmp
pop
or
sbb
fistpll
iret
jecxz
pop
pop
lret
cmpsl
mov
add
fs
adc
adc
dec
int
add
xor
push
aam
fcoms
pop
pop
sbb
jecxz
adc
daa
lods
sbb
fucom
lds
lock
sbb
pop
stc
icebp
pop
pop
fidivs
push
les
movsb
test
into
popa
ja
mov
xchg
xor
xor
in
int
and
sub
cmp
ljmp
addr16
scas
xor
add
and
icebp
enter
ficoms
cmc
loop
inc
imulb
addr16
mov
xchg
mov
aaa
jg
les
mov
xchg
pop
repz
jbe
hlt
mov
add
jg
neg
mov
aad
test
sbb
pop
jns
push
xor
data16
push
dec
sbbb
mov
mov
ret
push
stc
inc
imul
push
ret
or
dec
xor
inc
dec
setno
or
test
xchg
push
and
push
ja
lods
popl
push
fmuls
or
dec
add
in
sbb
add
rcrb
lret
mov
pushf
xor
dec
add
sub
popa
push
push
in
out
pop
adc
pop
mov
adc
xchg
jle
and
add
mov
arpl
pop
cli
js
ds
mov
movsb
cwtl
test
cltd
mov
mov
fsubs
mov
outsb
mov
insl
bsr
mov
clc
pushf
mulb
cmp
ret
icebp
xor
mov
movsl
pop
iret
add
enter
popa
cli
shll
cmp
xchg
cmp
imul
fists
cmp
daa
int
iret
xchg
dec
push
sbb
pop
leave
fcomps
and
fcomp
or
xchg
pop
mov
cltd
xchg
dec
std
mov
inc
mov
insb
push
sub
adc
fdivs
pop
xchg
aam
loopne
or
adc
push
in
dec
out
push
std
aad
xchg
jns
xorps
repz
fs
mov
nop
jno
fwait
and
sub
jnp
data16
sbb
fistps
pop
mov
mov
pop
cmp
sub
jae
test
ret
push
in
stos
aaa
out
clc
jbe
mov
or
xor
jns
xchg
repnz
mov
in
jnp
repz
mov
or
add
aaa
dec
pop
sub
or
push
mov
sti
cmpb
jns
mov
jl
test
jge
sbb
mov
mov
ret
jge
ficoml
pop
jg
ret
adcb
lds
ror
dec
add
fistpll
or
mov
adc
out
or
mov
orb
adc
pop
or
xchg
adc
mov
imul
jl
mov
ficoms
jbe
mov
stos
pop
xchg
pusha
push
pop
inc
sbb
fcoms
pop
loop
sbb
aam
jns
clc
mov
pop
sbb
mov
adc
pop
hlt
pop
sbb
xchg
and
jle
sub
shrl
loope,pn
in
inc
xchg
incb
xchg
cmpsl
xor
aas
pop
jmp
mov
mov
jg
repnz
mov
iret
mov
cmp
jae
bsr
jb
pushf
shrb
jae
sub
mov
es
jge
pop
fcom
fmull
jge
cld
negl
jl
push
push
adcb
inc
les
pop
mov
test
pusha
adc
and
jnp
daa
fmul
sub
mov
imul
adc
xchg
into
and
out
outsl
xlat
outsb
mov
push
jp
test
xchg
ficoml
jnp
cmp
and
imul
fldl
pushf
ret
sub
mov
pop
loope
out
cltd
arpl
lcall
imul
and
mov
and
xor
popa
test
ja
shrb
fs
cmp
add
jmp
mov
dec
dec
inc
aad
aas
mov
in
dec
scas
ss
in
xor
lods
scas
ja
dec
outsl
xor
stc
lock
jns
push
test
test
mov
fs
adc
mov
cmpb
insb
cmp
add
mov
fst
push
movb
sbb
xchg
fimuls
cmpsl
rolb
ficompl
push
sub
fdivs
pop
ret
outsl
xor
jnp
pop
adc
mov
ffree
adc
loopne
pop
sbb
xor
pop
ljmp
lock
or
sbb
imul
ljmp
fidivrs
cld
push
mov
jmp
and
fs
loopne
inc
fdivl
push
and
stc
adc
pop
and
loop
out
das
push
in
fs
sub
xor
ljmp
gs
cwtl
jno
jne
mov
pop
mov
dec
and
ss
das
aas
adcl
cmc
ret
call
jp
mov
fstpt
lods
addr16
mov
xchg
adc
jns
mov
and
insb
jecxz
add
add
jmp
inc
jp
aas
aam
cld
inc
add
lret
sarl
push
xchg
jmp
sub
inc
pop
mov
pop
iret
in
pop
shlb
fisttpll
sbb
fs
xchg
and
fisttpll
mov
push
gs
frstor
lcall
ja
jno
adc
es
xchg
add
adc
dec
lcall
sbb
test
push
lods
clc
and
insl
sub
pop
and
out
out
das
cmp
mov
dec
xor
popa
mov
psubw
mov
and
pop
inc
out
jp
stc
jl
loope
jnp
adc
sub
add
aad
pop
insb
pushf
lret
out
xor
fmull
ret
xor
add
hlt
clc
mov
bound
sti
imul
jne
cmpsb
cmp
outsl
xchg
stos
mov
ret
outsl
sub
sbb
pop
mov
and
cmp
mov
add
mov
pop
add
incb
push
pop
rcl
mov
fmuls
shrl
push
push
mov
inc
bound
sbb
lret
cmp
dec
inc
or
push
xlat
aad
insl
xchg
xor
dec
and
push
sub
iret
fbstp
and
icebp
adc
xchg
push
dec
push
push
sbb
mov
aad
jo
push
adc
pop
xor
pop
mov
pop
sti
stos
sbb
mov
sbb
xchg
fisttpll
gs
repnz
cmpsb
ret
dec
cmpsl
jo
fisubrs
popa
shl
lcall
lods
mov
add
xor
dec
cmp
stos
and
jmp
imul
aad
dec
loop
ljmp
ss
xor
jb
in
cltd
dec
mov
xchg
xorb
dec
ja
push
jnp
scas
add
add
js
mov
dec
fwait
xor
jge
mov
mov
popf
outsb
rcr
fwait
test
sbb
lret
push
rol
add
adc
add
and
leave
into
in
cmp
cld
pop
stos
or
xchg
or
mov
ret
rcrl
adc
cwtl
sahf
enter
lods
sets
lcall
sbb
das
arpl
fsubrs
pushf
add
push
icebp
sub
mov
call
shll
and
movsl
mov
push
lret
sti
adc
and
xor
mov
pop
lea
and
cmp
lods
shll
loopne
xchg
cmpsb
dec
scas
insb
and
jmp
push
sbb
es
sarb
outsb
nop
xor
jno
or
push
xchg
movl
fidivs
std
cltd
loop
test
mov
mov
or
jnp
mov
js
cmp
das
jp
push
std
push
mov
xchg
jg
rolb
or
adc
rolb
aaa
push
fwait
test
dec
leave
inc
mov
push
and
cmp
fwait
or
inc
sbb
lret
adc
into
outsb
dec
pop
fcmovu
ljmp
rcrb
xchg
stc
xorb
out
or
jmp
sbb
xor
pop
or
sbb
in
sbb
lcall
sbb
popa
cli
pop
add
stos
ljmp
mov
cmpsl
in
shlb
jne
pop
mov
mov
cmpsb
jo
sub
lods
mov
mov
sub
jo
mov
lods
sub
xchg
mov
and
xchg
mov
pop
xchg
mov
jne
rcrb
mov
xchg
shlb
sub
lds
xorb
hlt
dec
roll
ds
testl
popa
inc
rol
push
pop
jns
inc
cwtl
test
popf
movsb
adc
dec
pop
mov
sbb
pop
xor
dec
push
inc
or
fldenv
mov
push
movsl
push
nop
or
shl
jb
jo
and
and
in
or
jno
lods
and
rcrl
and
movsb
or
lds
xlat
push
cmpsb
pusha
sbb
dec
ljmp
rcr
fs
aam
in
dec
lods
mov
lods
cmpsb
xchg
push
cmpsl
aas
push
cmc
loop
push
das
dec
pop
movsb
insb
push
out
pop
and
outsl
or
outsb
push
fs
daa
test
and
out
dec
xor
jge
stos
push
inc
dec
jno
sub
je
xor
jne
xor
divl
and
mov
jae
cmpsb
cld
idivb
shl
dec
mov
rorb
or
aas
lret
mov
jns
cmp
call
xchg
std
lret
jno
sbbb
jnp
into
sti
sbbl
mov
xor
dec
lret
mov
pushf
push
mov
mov
dec
mov
imul
in
cmp
into
imul
mull
in
add
jno
xchg
jl
mov
enter
add
into
sbb
ds
aas
sbb
out
pop
dec
sahf
push
mov
fwait
insb
in
mov
arpl
loope
dec
ret
stos
and
sahf
push
fucomip
or
js
cmp
xor
or
jne
inc
mov
lret
outsb
sbb
mov
out
imul
fs
mov
add
sbb
jge
test
add
out
adc
push
out
pop
scas
pop
daa
jo
iret
pop
xor
push
jl
cmp
test
sti
dec
mov
push
jbe
sti
pop
add
cmp
mov
mov
sbb
cmp
dec
inc
xor
push
lret
ficompl
rcl
leave
mov
ficoml
lock
cmp
jmp
xor
mov
add
leave
dec
sahf
enter
imul
das
testl
cmp
mov
cltd
iretw
push
aam
aaa
repnz
jnp
and
cmc
in
adc
push
sbb
mov
and
cmpsb
sbb
sarb
int
push
arpl
mov
in
loop
pop
test
and
pop
fsubrp
jns
out
daa
push
jb
shrl
enter
aad
xor
xor
cmp
out
xor
jmp
adc
pop
xor
push
sbb
movsb
repnz
out
orl
push
icebp
stc
in
aad
pop
sti
mov
mov
xchg
loope
ja
xor
jne
arpl
jb
xor
jnp
mov
stc
inc
and
cmp
aas
jmp
inc
into
cmp
sbb
push
inc
sarl
fldl
insl
and
sub
call
out
pusha
or
sbb
ret
push
aad
push
add
subl
mov
pushf
mov
dec
xor
mov
fwait
adc
xchg
push
movsb
xor
mov
cmp
arpl
pusha
cs
popa
pop
xor
in
push
arpl
aad
push
fwait
push
or
jns
loope
sbb
fistps
mov
mov
or
movsb
stos
pop
ror
add
jae
clc
fimuls
ret
out
je
add
lock
inc
out
bound
aaa
and
mov
dec
insl
cmp
out
pusha
jno
xor
xlat
repz
mov
into
aaa
mov
scas
mov
push
test
sub
and
lock
fcoms
xchg
lock
dec
js
cmpsb
or
jmp
dec
jnp
ja
pushf
push
cmp
sarl
sahf
shrl
mov
and
pop
pop
aas
and
orb
leave
pop
or
in
push
fistl
sub
pop
data16
aas
dec
mov
mov
cld
pop
mov
jge
jno
lcall
push
pop
into
cltd
cmp
add
cwtl
or
in
add
push
sbb
pop
push
mov
push
lahf
jle
insb
xor
cld
jecxz
cwtl
cmp
repz
and
cmp
fs
out
mov
cmpsb
pop
or
jb
imul
push
jp
lods
test
fs
and
pop
xor
adc
sub
outsl
inc
jns
mov
dec
std
pushf
idiv
leave
lods
popa
call
cmp
pop
inc
sub
and
in
or
fiaddl
notb
inc
mov
mov
add
ds
jns
push
inc
pusha
cs
int3
cmp
add
xchg
mov
lret
sbb
cmp
xchg
and
sbb
fmuls
test
mov
fs
jb
mov
xchg
pshufw
inc
insb
adc
adc
push
xchg
adc
cwtl
call
xor
xor
xchg
stos
ficompl
jge
je
push
cmpl
jp
fsubrl
sub
pop
frstor
mov
sub
pusha
addr16
movq
push
lods
push
in
sti
cmp
fnsave
xsaves
sub
out
xchg
fmul
ljmp
mov
jo
scas
arpl
xor
sbb
ds
aaa
cli
inc
jo
in
orl
jae
push
cld
mov
dec
jns
xchg
mov
insl
mov
sti
popa
add
cmp
mov
sbbl
add
adc
iret
cmpsl
adc
fistpll
stos
sbb
mov
and
and
dec
int3
enter
mov
push
mov
fdivs
in
bound
lods
mov
adc
pop
hlt
xor
mov
daa
mov
adc
xchg
fmuls
loopne
adc
cmpsl
adc
pop
adc
adc
mov
pop
aad
push
loopne
pop
push
rcrb
and
mov
mov
push
arpl
sbb
jns
jns
cmpsl
std
adc
jmp
cmpsl
movsl
fcomip
or
js
push
mov
aaa
inc
inc
stc
mov
cs
sub
xor
jb
push
mov
mov
mov
lret
add
dec
fwait
dec
mov
mov
mov
dec
xchg
int
jns
mov
insl
je
inc
cmp
xchg
fimull
ds
sahf
call
rorl
and
lds
dec
inc
or
and
mov
pop
or
dec
xor
sbb
adc
sbb
inc
int
xchg
insb
push
lods
xchg
stos
fcom
les
insb
sbb
push
pop
loop
scas
adc
inc
or
xchg
movsb
push
fdiv
or
mov
mov
or
pop
xchg
pop
or
jp
jae
cwtl
popf
data16
sub
xor
and
std
arpl
xorl
mov
movsb
imul
sub
js
mov
and
jnp
pop
add
fnstsw
xor
jmp
dec
mov
xchg
outsl
lock
push
xchg
mov
pop
mov
ja
popf
or
out
mov
stos
ja
movsb
les
out
stc
orl
xor
ret
rclb
push
jg
out
pushf
sub
fwait
mov
push
or
inc
dec
std
mov
or
dec
out
daa
xor
push
fwait
inc
cmp
adc
mov
ret
or
xchg
fucomip
scas
insb
mov
push
adc
cmovge
aas
dec
mov
std
push
jl
fnstenv
xchg
fimull
or
out
popf
xor
xlat
mov
mov
cli
xchg
pop
push
loope
movsb
xor
and
in
sub
sub
das
sub
pop
test
divb
imul
lods
andb
scas
add
lock
cmpsb
icebp
andl
sub
add
xor
sub
dec
in
js
add
shll
test
inc
das
mov
mov
clc
mov
ss
cmp
repz
ret
xchg
xor
lret
decb
or
or
lret
lret
lea
dec
cmp
paddb
sarb
rcll
call
sarl
push
inc
aad
add
ret
xlat
xchg
sbb
inc
fstps
add
cltd
xchg
pop
inc
fstpl
or
fwait
leave
lea
pop
dec
loope
or
mov
ret
ret
bound
addr16
orl
in
stos
movsl
shrl
push
lods
call
scas
imul
pop
insl
jo
xor
stc
loopne
jl
js
cmp
push
and
sub
in
daa
test
push
fisubl
test
sbb
sbb
in
ja
insb
insb
inc
data16
sub
stos
imul
adc
xor
fdivl
fimuls
xor
lret
ds
movd
mov
push
mul
jp
in
cld
cli
ja
lret
clc
jp
mov
pop
cmp
push
lea
or
imul
sti
rolb
inc
or
les
lcall
add
es
test
int3
inc
loopne
xor
rclb
cld
clc
lahf
lcall
sub
movsl
xchg
test
xlat
and
les
push
das
out
push
pop
into
testb
push
stos
ffreep
hlt
cmc
fcomps
sub
pop
cld
jl
lcall
mov
movsl
dec
pmulhuw
xchg
xor
xor
in
add
fcoms
cmpsl
and
inc
jecxz
pop
fidivl
jecxz
test
add
popa
stos
sub
popl
call
in
and
sbb
aas
stos
cmc
cmp
ss
mov
push
fyl2xp1
and
in
sahf
mov
jle
push
adc
js
mov
mov
mov
pop
cmp
sbb
inc
cmp
fcmovu
lret
mov
jg
jne
mov
mov
int3
mov
ficoml
orb
pop
push
arpl
and
xchg
sbb
pop
das
xchg
push
lret
pop
mov
or
xchg
dec
insb
mov
stc
xchg
adc
aam
rorb
loop
rorb
dec
pop
rcr
xchg
mov
sbb
xor
push
in
das
cmpsb
shll
jo
lcall
jo
pop
jns
pop
jle
inc
ret
pushf
cld
std
and
popf
test
aad
xor
hlt
fisubl
ljmp
bound
scas
push
outsb
sub
add
test
xchg
shrl
std
sub
dec
cs
mov
push
outsl
inc
xor
repnz
pop
jo
dec
or
ficoml
jbe
aaa
sarb
jp
mov
mov
cmp
xchg
sub
loope
mov
push
add
notb
ja
les
mov
inc
cmp
pop
pop
xchg
lahf
mov
inc
cmpl
cmp
sub
outsl
mov
sbb
pop
adc
lret
int3
lret
sbb
sar
movsl
mull
xchg
sbb
mov
dec
movlps
popa
xchg
jb
sbb
xor
xchg
push
and
xor
sub
sub
popa
ss
pop
add
sub
mov
hlt
push
bound
inc
bound
cmp
bound
pop
mov
dec
sti
dec
mov
dec
push
or
push
xchg
rolb
out
jae,pn
ds
lods
jnp
enter
rclb
insl
imul
pop
dec
or
or
mov
mov
cmp
cld
and
int
addr16
shl
mov
mov
aas
xchg
inc
cmpsl
sbbb
cmp
add
roll
or
loopne
push
jbe
or
sbb
push
enter
test
push
mov
xor
sub
into
push
in
shlb
ljmp
or
sarl
xchg
in
das
mov
pop
fwait
dec
push
xor
pop
inc
pop
popf
sti
mov
inc
and
sbb
notl
sub
cmp
sbb
mov
test
aaa
out
filds
stos
and
pop
inc
in
ficoml
fstpt
and
mov
mov
lock
sub
sub
sub
mov
aad
pop
lods
data16
pop
mov
js
mov
daa
pop
jmp
inc
jmp
jnp
repz
cmp
xor
jge
addb
fistpll
and
mov
sarb
push
pop
or
pop
inc
js
xor
mov
inc
cmp
int
out
cmp
inc
or
std
adc
cmpb
add
xchg
inc
leave
xor
mov
scas
es
adcl
or
pop
sub
lock
std
pop
or
outsl
push
dec
aad
push
add
or
arpl
sbb
push
cmpl
ror
or
mov
push
mov
movsl
fwait
fs
sahf
adc
aam
pop
popw
push
popa
addr16
in
mov
fsubs
fstps
adc
clc
inc
loopne
push
lret
daa
or
enter
das
pop
pop
sub
mov
ret
inc
movsb
jmp
in
stos
mov
cmc
cli
jmp
dec
ja
xor
scas
xor
ret
mov
mov
outsb
push
scas
jl
xor
mov
cmp
mov
jp
jno
push
xor
jg
xor
repz
fbstp
leave
cmc
imul
dec
cmp
or
sti
lcall
ss
pop
jl
fwait
sub
popf
rcl
xchg
ror
js
or
lret
adcb
add
lock
mov
int
pop
fwait
ret
push
dec
cltd
and
mov
rclb
mov
iret
add
shll
mov
cwtl
jge
or
pop
rclb
filds
lahf
sbb
pop
fldcw
pop
popa
pop
arpl
iret
fwait
mov
in
stc
cmpsb
iret
lods
xor
fisubrs
jb
sub
jno
cmpsl
or
loope
jbe
mov
pop
psubusb
mov
and
loopne
fnstcw
sub
dec
pushf
sub
scas
push
xor
aaa
xor
shlb
jbe
stos
leave
adc
lahf
mov
pop
hlt
xchg
aaa
or
jnp
fistpl
xlat
adc
mov
notb
rcll
xchg
dec
or
add
cmp
push
fmulp
mov
add
sarl
jnp
lds
sbb
and
add
inc
orb
jl
fstl
dec
fmuls
bound
jo
sbb
mov
push
dec
xchg
pushf
stc
pop
or
loop
mov
push
jnp
outsl
xchg
imul
mov
fwait
jno
sbb
js
pop
cltd
fisubrl
push
and
sbb
pusha
popa
mov
dec
cltd
insl
or
movsl
lock
fidivs
dec
fdivrl
aaa
bound
ss
int3
sub
sub
shlb
xor
cmp
dec
xor
bnd
mov
ss
lret
lock
fmull
xor
stos
mov
mov
flds
xor
add
mov
or
jnp
rolb
inc
jecxz
out
pop
jg
ss
pusha
jnp
enter
imul
mov
dec
jg
pop
sub
fiaddl
inc
int3
pop
pop
inc
pop
dec
std
lea
mov
or
inc
cmovns
and
cmpsb
or
dec
leave
xchg
push
mov
xchg
push
dec
and
mov
push
mov
xchg
mov
push
push
mov
push
mov
push
inc
cmp
stc
xchg
cwtl
lods
repnz
repz
sbb
lock
xor
insl
ret
mov
pusha
imul
xor
push
mov
cmp
outsb
add
cld
ret
cld
sub
sub
xor
and
pop
fs
lock
add
orb
xchg
xorb
insl
ret
insl
hlt
pushf
mov
mov
rorl
xor
rolb
aaa
sub
dec
mov
iret
push
mov
mov
scas
aas
inc
push
cld
repnz
sub
cli
push
cmp
enter
add
or
aad
xchg
add
sub
sub
outsb
and
in
add
fisubl
outsb
insl
pop
inc
rcrb
into
enter
sbb
dec
loopne
mov
mov
lcall
push
call
inc
mov
out
push
pop
loop
push
fstpl
sub
clc
ss
mov
mov
aas
das
mov
or
and
icebp
es
ret
movsb
dec
sbb
test
andl
in
push
cmp
xchg
outsb
ljmp
lret
sub
mov
jmp
xor
jno
pushf
lret
js
push
dec
mov
inc
ja
cmp
mov
ret
push
cmp
repz
enter
sbb
mov
mov
adc
inc
les
xchg
mov
inc
movsb
sbb
push
adc
or
or
sub
xchg
mov
test
add
dec
inc
iret
fadd
rolb
pop
adc
or
sbb
icebp
je
jle
cs
xchg
fldcw
mov
ficompl
loopne
cld
rcr
cmp
pop
in
adc
jmp
aad
jmp
mov
dec
aas
adc
popfw
mov
out
fcmovnbe
xlat
gs
sbb
add
inc
test
sub
in
imul
repz
lods
arpl
fildll
xor
push
mov
xor
adc
jmp
push
mov
mov
mov
fs
jbe
jle
das
push
lret
jnp
mov
jae
fisubrl
pop
lock
jne
inc
daa
mov
repnz
inc
cmp
nop
cmc
add
jnp
dec
cmp
mov
out
ljmp
mov
jo
add
outsl
adc
and
mov
dec
pop
sub
xchg
aam
pop
inc
dec
push
adc
aad
xchg
psllw
push
pop
inc
xchg
pop
or
xor
mov
dec
aad
fstpl
dec
fistpl
lcall
adc
sbb
imul
pop
lcall
dec
stos
rclb
arpl
sbb
sub
flds
clc
adc
sub
pop
cwtl
call
insl
xor
scas
popa
lods
icebp
insl
ja
outsl
lods
and
jb
or
test
mov
xor
mov
loop
ret
mov
arpl
jne
jmp
mov
xchg
outsb
sbb
ja
aaa
mov
cli
icebp
dec
fdivrs
iret
inc
fisubl
call
mov
inc
mov
pop
add
addl
pop
mov
sbb
ret
adc
incl
dec
dec
test
mov
out
rorb
andl
xlat
dec
adc
int3
icebp
mov
dec
scas
inc
and
leave
adc
lcall
sbb
aam
lcall
push
sbb
adc
rclb
scas
push
adc
jno
jl
test
push
fstl
push
adc
xlat
sub
push
subl
in
das
and
in
lock
mov
cmp
xor
js
and
push
cmc
aaa
and
outsb
xchg
inc
movsl
cmp
mov
lods
push
sub
or
or
mov
push
in
xor
mov
mov
ja
mov
mov
sti
jle
mov
hlt
out
hlt
pop
sbb
ja
je
add
ficoms
xchg
decb
lds
adc
xchg
nop
popf
sti
add
xadd
adc
test
cmp
pop
mov
inc
cltd
xchg
mov
pop
or
pop
sbb
repz
adc
dec
jecxz
dec
iret
dec
inc
in
xchg
into
or
push
push
sub
call
push
jmp
adc
mov
xchg
cmpsl
int
cmp
or
sub
stos
dec
mov
jb
daa
fsub
sbb
loope
jae
ss
mov
and
mov
gs
cli
cmpsb
jo
mov
lods
xchg
cmp
pop
mov
inc
leave
stos
pop
jge
out
pop
jle
or
je
add
inc
sub
push
xor
sti
and
xchg
mov
xchg
mov
cmp
repnz
mov
inc
mov
mov
add
repz
enter
xor
jns
stos
sub
adc
mov
les
inc
pop
repnz
jmp
push
add
bound
add
rol
xchg
addb
xor
push
or
xchg
lock
or
mov
mov
lods
xchg
into
xchg
push
jp
xlat
inc
insb
pop
clc
or
xchg
mov
adc
or
sub
in
push
into
adc
rorb
ljmp
lcall
imul
pushf
outsb
pop
lock
add
mov
sub
mov
out
loopne
ret
mov
idivl
mov
enter
lods
cmp
cmp
bound
xchg
imul
jmp
or
jge
inc
jl
sub
xchg
lods
std
enter
daa
dec
mov
or
jno
add
cmp
xchg
sbb
xor
jge
xchg
in
dec
xchg
jbe
mov
mov
cmp
jae,pt
rclb
rorl
jge
inc
leave
jle
inc
cwtl
mov
ret
outsb
inc
or
jmp
add
xchg
push
enter
or
cmpsl
xchg
sahf
sbb
jmp
shrl
int
mov
cwtl
testb
xchg
cltd
loopne
jge
loop
fstpl
mov
movsb
xchg
and
jg
ja
lods
fsubr
xchg
fsubrs
inc
cwtl
pushf
iret
pop
jle
cltd
mov
gs
fsubp
loope
andb
fdivp
lahf
sub
pop
js
jecxz
les
leave
hlt
and
das
cmpsb
sub
sub
xchg
test
sbb
jle
jno
aaa
add
test
push
lods
sarb
pop
std
xor
and
or
inc
xor
aad
jae
add
cmp
push
inc
mov
clc
lahf
dec
mov
imulb
push
lock
pushf
mov
xor
rcrb
sbb
jg
shlb
inc
fdivp
mov
or
aaa
out
sub
dec
out
inc
mov
leave
push
rolb
inc
mov
xchg
push
dec
ret
int3
or
paddusw
mov
xchg
data16
mov
sbb
push
dec
movsb
popa
adc
adc
lcall
cld
dec
in
aaa
push
sbb
mov
push
xlat
push
test
push
xchg
rcrl
cs
into
jecxz
in
sub
and
mov
inc
pop
bound
and
mov
or
cwtl
movsb
movb
cmpsl
mov
sub
in
aaa
push
pop
stc
jmp
insb
int3
add
ds
in
fnsave
std
mov
ja
fnstenv
ja
icebp
add
repz
cmp
fildl
stc
test
mov
lock
xorb
cmpl
sbb
mov
nop
cs
std
into
dec
or
sub
testb
mov
loop
in
test
das
xor
daa
enter
mov
cwtl
sub
mov
push
push
loope
lods
push
test
cmp
mov
or
sub
andl
rclb
xor
sarl
fnstsw
sbb
push
in
lods
add
je
mov
js
ds
pop
scas
pop
fistpll
add
pusha
popf
ja
mov
inc
pop
sbb
lcall
pop
repnz
xchg
es
pop
cmpsb
jae
idivl
xchg
js
jbe
mov
outsl
jp
sub
xchg
inc
sub
out
dec
xor
sub
add
insl
mov
outsb
js
push
pop
mov
inc
dec
mov
fs
roll
xor
or
pop
js
notl
cmp
lcall
iret
int
stc
xchg
mov
scas
lcall
rolb
aaa
xchg
repz
add
dec
fisttpll
mov
bswap
sbb
stc
or
pop
or
in
adc
aad
cmp
lret
xchg
test
cmp
push
push
xchg
insb
rcrl
shrl
and
repz
popf
mov
dec
stos
test
mov
xchg
icebp
pop
mov
xor
in
mov
xlat
inc
jecxz
cmpsb
pop
jle
es
lods
sbb
mov
and
icebp
loope
jno
popa
loop
pushf
jb
and
in
test
bound
call
stos
mov
repz
sub
ljmp
shrb
cs
mov
cmp
mov
add
xchg
ret
in
mov
mov
testb
inc
sub
stc
add
xor
dec
std
jle
mov
int
rcr
mov
inc
jns
rolb
add
xchg
sbb
lds
dec
pop
cwtl
push
nop
xor
int3
rcrb
xchg
adc
cmp
mov
or
jecxz
lahf
push
xchg
xchg
insl
aas
dec
cs
mov
stos
pop
push
hlt
out
roll
add
xor
xchg
or
inc
lock
sbb
inc
dec
mov
pushf
xor
sti
cs
and
mov
cmp
push
and
psrad
push
inc
ljmp
inc
add
mov
mov
stos
out
shlb
fsubs
inc
mov
in
dec
loop
rolb
add
nop
mov
pusha
fiadds
mov
inc
inc
leave
jno
xor
inc
sub
adc
lds
addr16
insl
ss
mov
mov
jns
push
or
jge
or
mov
xor
dec
add
dec
jge
or
mov
pop
sub
mov
adc
add
push
or
or
or
pop
je
mov
dec
and
pop
xchg
stos
pusha
mov
lea
xchg
cs
into
xchg
in
cwtl
mov
push
inc
fstpt
xchg
pop
mov
aam
cmp
divl
pop
pop
xor
and
gs
outsb
inc
pop
mov
das
fistl
dec
aad
sub
pusha
icebp
pop
and
gs
mov
stos
cmc
pusha
pusha
cmpsl
andb
and
push
data16
sub
inc
mul
inc
mov
daa
cs
ret
inc
sub
mov
lods
jg
lock
mov
mov
test
lds
pop
xor
addr16
push
mov
sbb
clc
mov
mov
mov
loop
inc
fdivrs
jge
mov
mov
add
pop
jl
lahf
test
or
add
add
test
push
jge
rcrl
adc
cmp
push
push
adc
inc
test
movsb
push
pushf
mov
fwait
aam
dec
iret
movsb
push
rcl
jecxz
nop
xchg
in
pop
mulb
adc
call
mov
test
pop
mov
sub
fdivl
xchg
lods
les
fsubr
lods
arpl
adc
sbb
arpl
pop
aas
js
mov
mov
in
sub
repz
mov
daa
repnz
cmpsb
stos
cld
leave
cld
ss
pop
insb
jne
stos
jb
add
or
sub
fcompl
cmc
sarb
scas
mov
fwait
jp
and
stc
sbb
xor
or
ret
dec
and
inc
idiv
push
mov
push
ret
and
pop
hlt
add
test
enter
inc
jmp
mov
push
aas
push
addl
cmp
sbb
mov
mov
roll
or
lock
fdivl
adc
ficomps
in
mov
xchg
fsubl
ret
ficoml
adc
in
scas
or
xor
dec
dec
mov
adc
inc
or
cmc
pop
pop
ret
test
jnp
arpl
jb
fistl
aaa
jp
mov
fwait
inc
push
jge
sbbl
mov
adc
imul
fs
sub
nop
xchg
jg
scas
pop
aaa
xor
imul
jno
xchg
xor
out
repnz
in
push
jne
das
js
dec
mov
cmp
repnz
enter
mov
mov
enter
cltd
inc
inc
rorl
pop
ja
lock
jns
dec
addl
mov
cmp
ds
clc
mov
jns
xor
mov
xchg
je
push
push
push
xor
pusha
into
inc
mov
int
mov
push
ficoms
sbb
out
jmp
insb
lods
lcall
repnz
mov
gs
out
mov
mov
pop
stc
out
push
std
scas
stos
sub
xchg
xor
rcrl
mov
rcr
and
mov
bound
and
pop
sbb
jne
lock
andb
adc
pop
adc
test
cmp
cs
test
repnz
xchg
mov
pop
dec
mov
xor
mov
mov
jne
and
mov
data16
jae
adc
xor
cli
jno
fpatan
icebp
lds
jb
xchg
sarb
dec
jns
jge
out
xchg
mov
inc
cmp
jbe
push
hlt
cmp
sbbb
ret
cmp
dec
outsb
inc
loop
inc
sbb
xchg
rcrl
int3
test
add
int
pop
in
mov
out
pop
xchg
push
pop
dec
cltd
pop
dec
arpl
jae
adc
push
lret
sub
adc
or
push
cmpsb
cwtl
popf
iret
push
and
movsl
psubusb
pop
jecxz
push
gs
rcll
adc
pop
pop
inc
push
insb
repz
shll
inc
fiaddl
sbb
lods
fldl
inc
popf
movsl
inc
push
mov
pop
stc
daa
jecxz
pop
xor
ss
movsl
jae
and
and
mul
imul
movsb
stos
cmp
or
scas
loope
test
push
loop
or
test
or
gs
xchg
jno
mov
shll
pop
mov
jo
icebp
dec
xor
mov
mov
push
cmpsb
js
std
cmp
push
shll
loop
lea
jmp
lds
int3
jp
imul
repnz
adc
mov
push
insb
lods
shll
dec
lahf
mov
ss
les
jmp
mov
cmp
ror
ror
jl
dec
sub
mov
and
popf
roll
loope
xor
lret
aam
hlt
cmp
xchg
ds
pop
or
dec
aad
xchg
pop
nop
xlat
cmc
pop
daa
sbb
aam
pop
sti
pop
outsl
lcall
scas
pusha
pop
das
cmp
sub
fildll
adc
dec
data16
stos
adc
inc
mov
xchg
in
sbb
mov
stos
mov
icebp
push
mov
add
call
jne
mov
cmp
std
aad
cmpl
mov
test
icebp
inc
cmp
std
jle
cmc
cmp
or
sub
xchg
mov
jo
xorl
dec
add
lret
pop
mov
push
cmc
orl
incl
pop
pop
or
mov
xchg
dec
ja
out
sarb
cltd
mov
dec
pop
or
mov
sub
jle
loop
sbb
arpl
push
cmpsl
shl
aas
adc
mov
pop
adc
lahf
lret
je
mov
in
pop
pop
out
pop
mov
dec
aaa
arpl
leave
jge
mov
addb
sub
mov
dec
jge
hlt
dec
cld
gs
cld
test
and
jb
test
push
js
outsb
call
jns
icebp
stos
sub
xor
and
or
mov
outsb
mov
jb
jo
shlb
mov
mull
dec
xor
or
out
mov
lret
mov
dec
js
fistps
jecxz
lods
shl
andb
cmp
or
ljmp
adc
mov
ret
or
ja
shlb
ret
adc
add
roll
orb
fidivrl
push
pop
dec
pusha
ret
into
or
int
jbe
int3
pop
dec
ljmp
rcr
rcl
lds
lods
xchg
push
push
das
cwtl
int
daa
fwait
jle
into
push
xor
outsb
in
loopne
and
fld
lcall
mov
shlb
cld
mov
mov
mov
lret
and
movsl
pop
jns
mov
mov
scas
push
ret
clc
dec
pop
fwait
test
xor
lret
push
aas
sub
xor
aas
inc
push
xchg
mov
jle
iret
adc
xor
mov
xor
xor
enter
cmp
jle
lea
mov
enter
insl
dec
cmp
clc
pop
xor
jmp
orl
mov
push
popf
mov
or
rclb
lcall
repnz
out
fs
cmp
or
or
and
gs
push
pop
int3
aam
xchg
inc
push
jle
int
push
ja
adc
cwtl
dec
rcll
dec
jl
shr
loop
mov
adc
bound
and
lods
arpl
xchg
sbb
andl
cmpsl
cmp
imul
pop
xchg
cmpsl
push
pusha
add
jae
outsl
jmp
and
add
bound
cs
insl
xchg
sub
gs
cs
mov
repz
imul
jmp
ljmp
and
jo
aaa
and
dec
push
leave
sti
adc
std
jp
mov
add
dec
cmp
out
mov
sub
or
stc
hlt
ds
mov
xchg
add
imul
sbb
mov
inc
adc
pop
test
out
xor
jecxz
ret
popa
in
mov
fisttpl
pop
cltd
xchg
pop
inc
and
or
mov
imul
adc
mov
dec
into
loopne
in
aam
cmp
inc
xor
aad
fistpl
test
negl
cmpsl
adc
mov
fnstenv
push
je
xchg
fsubrs
dec
cwtl
jl
fcoml
push
pop
dec
mov
xor
inc
push
xor
pusha
jbe
lret
pop
mov
popf
fs
mov
or
lock
xchg
jmp
sub
mov
jmp
mov
mulb
aaa
fdivrp
adc
jle
hlt
icebp
mov
mov
mov
jae
aaa
cmp
aaa
ss
mov
mov
push
aaa
mov
mov
jo
lret
push
jno
pop
aad
inc
pop
mov
mov
push
les
pop
pop
pop
jb
repz
ror
mov
sub
add
int
jecxz
adc
in
jg
aas
mov
push
xchg
adc
adc
inc
push
pop
jmp
and
leave
aam
pop
push
dec
xlat
daa
push
movsl
hlt
fldcw
addr16
xchg
stos
mov
arpl
pop
adc
js
pop
fistpll
fstps
sub
pop
cmp
pop
cld
push
pushf
or
sub
imul
cld
pusha
addb
jns
mov
and
add
dec
mov
popf
cmpsb
outsl
sub
arpl
imul
add
xchg
subb
push
outsl
test
mov
fwait
lds
cmp
leave
mov
pop
mov
cmp
push
sarb
mov
rorl
or
out
pop
add
movsb
in
leave
and
sbb
das
xchg
jg
push
inc
xor
sar
add
test
add
add
test
and
enter
dec
jecxz
stc
shl
and
int3
and
stos
and
dec
jo
push
inc
xchg
inc
scas
call
adc
std
jmp
sub
inc
adc
in
mov
xor
mov
inc
sbb
push
xor
scas
or
push
movsl
in
sbb
pushf
std
pusha
sahf
mov
xor
andb
dec
popa
mov
jmp
jne
repnz
scas
mov
lods
test
imul
movsl
cmp
aaa
popf
in
xchg
out
mov
imul
jl
mov
push
add
mov
adc
ja
add
inc
les
mov
scas
shl
int
sti
in
push
rcrl
mov
pop
xchg
cmp
sbb
pop
cmp
xchg
negl
xchg
rorl
or
ret
lock
xchg
sbb
add
ror
std
lret
xorl
mov
push
push
dec
mov
mov
rcll
test
cmpsb
sub
add
mov
jmp
mov
stos
cs
mov
xchg
jb
in
fistl
cltd
cwtl
in
outsb
sbb
jne
push
ss
push
adc
stos
and
hlt
mov
in
fcmove
ss
mov
mov
or
in
std
jmp
mov
ret
sub
jecxz
outsl
adc
test
push
and
inc
inc
out
pushw
call
xchg
imul
jne
and
lods
add
js
out
out
dec
out
jbe
jne
mov
stos
mov
into
xchg
cmp
hlt
gs
cs
jbe
add
cmp
xchg
inc
repz
notl
mov
jns
fiaddl
sti
std
add
mov
mov
jne
dec
mov
arpl
int3
pop
dec
jbe
iret
mov
nop
in
pop
ret
inc
inc
jecxz
cmp
out
in
mov
decl
out
orb
iret
xchg
int
sbb
xchg
aas
sub
in
test
sbb
fcmovne
out
aad
cmp
dec
sbb
outsb
pop
pop
lahf
or
ficompl
out
jno
pushf
mov
mov
jo
js
inc
xchg
adc
in
test
imul
repnz
addr16
pop
enter
jg
xchg
inc
test
outsl
sub
cmp
shl
in
cmp
lods
mov
out
jg
xor
mov
out
addl
das
ret
xor
mov
shlb
jmp
vandnps
cmp
push
mov
cmpsb
xchg
mov
dec
aaa
add
push
out
push
les
cltd
mov
pushf
int
ljmp
ret
xlat
xchg
xchg
mov
push
dec
cmpsl
sub
pop
mov
sub
push
lret
call
insb
int
fwait
and
sub
lret
jae
xchg
xor
adc
pop
lret
shrl
dec
mov
push
int3
mov
cs
mov
push
test
pop
and
fiadds
addr16
jno
and
xchg
adcb
insl
repz
mov
xor
fnstsw
mov
xor
inc
jecxz
test
loope
lods
mov
iret
outsb
leave
mov
or
data16
fdivl
xorl
jmp
in
jp
adc
lods
cmp
sub
jns
scas
mov
insb
xor
xchg
jno
das
xor
hlt
cmp
aas
cmp
pop
lret
jg
ja
hlt
dec
mov
and
push
les
lret
cmp
mov
cmp
rcr
add
inc
pop
cld
jl
xor
xor
inc
dec
roll
mov
or
and
fadds
add
dec
in
js
adc
or
mov
aaa
mov
sub
adc
lods
in
or
jo
xchg
aam
call
push
insl
jne
sbb
adc
push
mov
push
dec
push
mov
jmp
sub
hlt
int3
lods
sbb
mov
ds
or
test
pop
daa
imul
out
jae
cmp
gs
xchg
xor
and
data16
ret
loop
jmp
js
mov
adc
jo
mov
popf
sub
jmp
cwtl
sub
scas
inc
mov
fwait
incl
xor
and
xor
sub
cmp
aad
cli
cld
inc
or
js
jl
divb
inc
aad
fstps
pop
jl
addl
imul
pop
mov
aaa
inc
dec
int3
js,pn
inc
adc
or
or
dec
push
or
dec
or
sbbb
rorb
test
and
sub
jle
enter
rcrl
mov
fs
pusha
enter
lea
mov
adc
andl
or
mov
push
inc
pop
pop
fbld
js
movsl
and
call
pop
pop
fwait
pop
das
arpl
xor
out
fs
gs
data16
loopne
and
lods
test
jne
ljmp
mov
cmc
gs
mov
outsl
outsb
jae
mov
mov
in
xchg
insl
cmpsb
divb
mov
enter
je
shrb
mov
das
push
add
sbb
pop
xor
inc
fwait
mov
popf
or
je
ss
call
stos
or
lahf
mov
xor
in
push
pop
popl
dec
mov
xorb
mov
adc
or
add
dec
or
int
test
cmpsl
out
lret
mov
ds
adc
or
xchg
loop
push
call
pop
mov
xlat
dec
dec
sub
push
adc
out
cwtl
pop
rcl
push
fistpl
jl
ds
mov
fistpll
arpl
jecxz
pop
xchg
pop
and
lea
inc
scas
faddl
data16
xchg
out
lahf
out
mov
daa
nop
shlb
jb
cmpsl
xorl
jnp
xor
push
daa
scas
ja
sub
imul
push
in
dec
leave
sub
int
dec
jb
push
push
mov
dec
xor
and
mov
call
mov
fadds
pop
mov
pop
mov
jbe
cwtl
lods
clc
or
and
cmp
inc
jmp
add
sbb
adc
adcb
inc
and
push
inc
push
xchg
pop
pop
mov
leave
push
sub
or
xlat
int
or
jo
std
lret
dec
outsb
loopne
scas
iret
das
sub
jo
rcrb
inc
in
push
repnz
shlb
sbb
push
into
aad
xchg
fidivrl
xlat
cwtl
gs
movsb
loope
fs
lret
lock
jle
pop
cmp
gs
xchg
out
out
adc
addr16
out
mov
push
scas
add
push
movsb
divl
fmuls
mov
out
je
or
xor
jge
mov
xchg
and
add
inc
jbe
cmp
and
sbb
hlt
lods
sub
aam
or
cmpsl
pop
jp
repz
int3
dec
test
xor
iret
repnz
mov
mov
loope
mov
mov
neg
add
push
mov
lret
mov
pop
outsl
movl
pop
clc
nop
shll
mov
lods
adc
bound
andb
xchg
dec
cmpsl
xchg
xor
lret
mov
pop
push
fnstenv
pusha
mov
jne
xchg
cltd
sbb
mov
xchg
push
mov
rcl
sub
fsubl
adc
fwait
out
fs
push
outsl
jne
shrl
push
popf
cmp
mov
pop
call
jecxz
es
shr
jecxz
popa
add
sub
test
or
push
mov
pop
or
icebp
jl
or
mov
inc
mov
repnz
mov
mov
mov
jp
js
jbe
mov
xor
cmp
pusha
call
cmpsl
dec
sti
jl
xchg
cltd
fnsave
int
cmpl
xchg
fistpll
jle
test
pusha
sbbb
orl
xor
ret
addl
inc
cmp
dec
data16
xor
icebp
push
int3
pop
data16
sub
dec
or
lds
daa
out
popf
push
dec
pop
jecxz
push
xchg
fsubl
adc
fdiv
push
outsb
mov
mov
lods
push
pop
mov
mov
jo
andl
push
dec
insb
lock
or
icebp
jb
pop
out
pop
sub
inc
repz
cmp
jo
movsb
jne
mov
test
loopne
mov
addb
cmp
mov
movsl
cld
hlt
mov
jle
addb
xor
stc
jae
lds
add
pop
aaa
sub
int3
cli
jnp
sbb
dec
stc
movsb
mov
dec
or
xchg
aaa
je
js
aaa
jl
pop
cmp
sbb
mov
mov
jmp
fimull
enter
popa
lea
xchg
add
jecxz
pop
adc
mov
adc
int
sar
leave
pop
popa
fsubrs
and
add
loopne
adc
aad
fsub
inc
mov
in
dec
dec
pushf
dec
xchg
mov
mov
sub
lock
pop
addr16
mov
mov
sub
insb
sbb
xor
cmpsl
dec
pop
fs
pop
lods
and
nop
xor
mov
out
and
int
shlb
arpl
adc
addr16
ret
sub
rcrl
jo
mov
mov
or
push
in
jnp
or
xor
dec
inc
call
mov
rol
in
jnp
jle
xor
sti
out
cmp
adc
lods
jns
inc
into
pop
in
inc
adc
inc
jae
adc
lahf
in
jge
sbb
pop
pop
dec
int3
cli
cmc
cwtl
movb
into
adcb
mov
push
stos
sub
fisubrs
pop
adc
ljmp
mov
popa
lods
adc
add
adc
xlat
lods
enter
jo
out
add
icebp
pop
mov
mov
xchg
in
fcmovu
lcall
jne
popf
mov
xor
push
push
xor
mov
mov
pop
stos
mov
add
jp
es
sub
pop
movsb
in
ljmp
aas
inc
daa
cmc
sbb
mov
inc
mov
push
stos
fdivrs
xor
cli
lea
lret
jg
add
subb
bound
xor
pop
xchg
adc
fisttps
or
dec
mov
xor
push
cmp
cld
add
mov
pusha
jl
push
aas
inc
pop
sub
add
mov
cltd
lea
sub
inc
syscall
ficoms
push
aas
enter
loope
xchg
xchg
cmc
or
xchg
push
lret
mov
mov
sarl
sbb
out
sbb
lcall
fucomp
push
ss
adc
sub
pop
jp
mov
repnz
mov
ficompl
xchg
outsl
icebp
and
pop
imul
das
es
push
push
test
jl
and
mov
ja
mov
ljmp
mov
inc
das
scas
cmp
mov
movsl
dec
and
sub
push
cmp
push
ret
mov
mov
mov
lahf
mov
test
mov
cmp
pop
push
jo
cmp
pusha
repnz
sbb
jmp
shlb
js
rcrb
cmp
xor
xor
jb
shlb
sbbb
push
pop
ja
pop
stc
roll
inc
int
mov
mov
cmp
movb
sbbl
mov
in
enter
adc
sti
sbb
mov
insl
js
nop
lcall
pop
mov
popa
andps
push
and
adc
pushw
pop
out
xlat
lock
test
lods
push
fimuls
sbb
cltd
sbbb
pop
stos
icebp
movsb
pop
loope
loope
jecxz
push
sub
mov
mov
or
push
adc
stos
jnp
ret
stos
pusha
lods
sbb
cmp
cli
dec
testl
mov
adc
stos
fisttps
popa
mov
out
enter
addr16
pop
repnz
stc
les
xchg
xchg
push
fcomi
pop
cmp
mov
lret
sbb
xchg
mov
mov
cs
lock
jg
xor
push
lahf
in
nop
shll
adc
adc
xor
in
in
sti
lds
pushf
ss
xchg
addr16
lea
cmc
cmpsl
test
push
and
push
mov
xor
imul
adc
adc
push
mov
lcall
push
lcall
movsl
jne
mov
and
fbstp
mov
stc
cmpsb
jl
movsl
mov
sub
pop
cmpl
xor
sub
and
inc
stos
xchg
js
xor
test
xchg
movsb
ret
sub
imul
or
mov
jmp
outsb
out
xor
sub
mov
insb
and
cmp
nop
and
jecxz
cli
cmp
xor
jo
dec
or
mov
inc
inc
rolb
testl
andb
sbbb
js
fistps
and
push
cmpb
pushw
and
cmp
or
inc
add
movsb
sbbb
push
dec
jbe
loop
shl
adc
outsb
movsb
sbb
pop
lods
out
cmp
int
in
iret
fidivrl
lea
xchg
lods
sbb
pop
adc
sbb
pop
jns
lds
and
lcall
int3
and
xor
fbld
es
leave
repnz
sub
push
ljmp
inc
outsl
cmp
stc
lods
divl
ja
cmp
lods
cmp
insb
lods
mov
jbe
xor
sar
xor
pop
addl
bound
je
xor
cmp
jp
xchg
dec
mov
sbbl
dec
loopne
mov
aas
sbb
flds
sahf
cmpsl
aas
cltd
push
mov
dec
add
les
inc
dec
jge
pop
xchg
mov
sbb
mov
and
into
sbb
es
add
adc
sbb
mov
push
gs
popl
sub
movsb
cs
push
fimull
fistl
ficompl
test
test
cltd
sbb
test
pop
push
addr16
mov
outsl
fucomi
ret
mov
pushf
imul
pop
sahf
jnp
mov
mov
adcb
push
mov
shr
clc
outsl
sub
stc
mov
jae
leave
jp
cmp
lret
das
das
push
int3
out
xor
lods
stos
sub
jae
popl
mov
repnz
sbb
cmp
sub
jno
inc
hlt
sarb
push
jp
ror
fistl
inc
js
shr
fimuls
xor
mov
adc
fdivrs
cmp
fadds
mov
add
lcall
push
or
inc
lret
add
cwtl
fadd
or
rcrb
or
scas
cmovae
aam
lret
xchg
xchg
inc
sub
mov
repz
pop
out
push
mov
adc
icebp
or
push
in
fsubp
pop
jo
sbb
les
xlat
scas
loopne
dec
popf
addr16
loop
adc
mov
fs
jp
push
mov
push
pusha
jecxz
lret
and
jae
jb
imul
shlb
pop
inc
jo
call
push
sti
in
push
mov
out
aam
insb
stos
mov
rorb
das
lods
mov
or
out
nop
lret
cs
daa
add
adc
xor
or
mov
mov
mov
popf
sbb
int3
mov
sbb
dec
fimuls
push
ret
fxch
pop
adc
or
lds
jge
inc
aad
sbb
xchg
mull
cwtl
test
jns
dec
xchg
lret
pop
enter
cmpsb
mov
pusha
fsts
shll
adcl
inc
push
push
bound
rcll
push
test
cwtl
fdivr
rcrb
mov
and
dec
xor
push
pop
jo
sbb
sub
roll
js
jge
movsl
shlb
scas
test
in
ret
aaa
inc
mov
adc
faddl
lods
sbb
daa
out
pop
movsl
cmpl
jmp
out
test
jae
imul
jl
adcb
xor
xor
xor
cmp
mov
loop
mov
mov
pop
mov
mov
inc
jge
mov
mov
push
lds
out
ss
cmp
lods
push
jp
mov
mov
jb
add
mov
lret
loopne
mov
sbb
sbb
ret
inc
fcomps
sahf
dec
dec
xlat
push
adc
pop
ror
into
imul
fstps
pop
int3
aam
or
fwait
adc
pop
xlat
nop
outsl
push
int3
scas
xlat
adc
lea
movsb
xlat
add
arpl
in
fnstenv
stos
arpl
sub
popa
sahf
sbb
jbe
dec
jge
add
loope
pop
in
push
movsl
cmp
pop
pop
movsb
popf
movsl
daa
or
add
fs
fcoml
add
inc
inc
sub
ljmp
out
fstpt
mov
cmpsb
test
int
mov
stos
test
jle
lods
pop
sub
lods
subb
out
jle
notb
clc
push
adc
cld
xor
push
lahf
jbe
pop
dec
jl
and
mov
clc
test
adc
dec
mov
das
mov
add
std
test
push
cli
into
ljmp
add
dec
iret
aas
mov
add
mov
dec
and
or
les
out
push
push
imul
dec
push
mov
or
lcall
inc
lret
push
mov
and
out
pop
mov
popa
sbb
rcrb
pop
cmp
jae
scas
ficompl
rorb
stos
daa
xchg
ljmp
xchg
es
cltd
scas
sbb
gs
mov
shll
mov
in
loopne
and
loop
sub
xor
add
test
insl
clc
jmp
stc
mov
jnp
mov
out
xchg
ljmp
xchg
stos
and
mov
sub
insl
and
idivb
jg
and
inc
mov
and
dec
in
push
dec
jne
sbb
jle
mov
jl
jo
in
aas
cld
dec
inc
xchg
cmp
das
int
cltd
stc
sbb
leave
or
pop
enterw
aam
pop
rclb
aaa
push
enter
add
mov
inc
jne
xchg
mov
xchg
sti
mov
and
mov
dec
mov
rorb
dec
sbb
jmp
pop
pusha
add
fstpl
or
and
xor
outsl
jmp
cli
cli
outsl
mov
stos
lods
rcr
jb
jp
fldt
xor
andl
aad
mov
lds
xor
loop
xchg
and
cmp
inc
mov
jl
xor
dec
jle
push
sub
lds
ror
dec
mov
push
push
inc
fwait
out
mov
mov
ss
mov
ds
bound
inc
inc
mov
cmpsl
push
jmp
cwtl
add
mov
lea
push
or
aam
push
iret
mov
cmp
push
dec
lret
add
and
xor
pop
inc
and
xchg
or
xchg
das
push
std
leave
sbbl
push
add
adc
sbb
fisttps
out
lea
aas
pop
stos
cmpsb
adc
mov
div
ror
and
xchg
leave
jmp
mov
dec
jecxz
mov
push
xchg
js
mov
test
sbb
push
jge
jns
fstps
jecxz
sahf
jae
jl
cmc
mov
fwait
mov
dec
cmpsl
loop
lock
mov
mov
push
cmpsb
test
add
mov
movsb
pop
call
scas
cli
out
push
or
aas
packsswb
ds
mov
xchg
outsl
mull
lock
xlat
sbb
dec
roll
inc
aad
jbe
add
pop
fdivs
pop
inc
cld
sub
cmc
dec
icebp
je
mov
mov
sti
adc
inc
cmp
sub
dec
xor
or
mov
sub
lret
pop
mov
add
mov
andb
mov
mov
test
push
sub
or
popa
sahf
pop
loope
push
orl
inc
out
lret
or
add
push
pop
mov
mov
es
imul
test
sbb
aaa
sub
xchg
insb
mov
and
int
cmp
sbb
pop
sbb
bound
xchg
xchg
xchg
outsb
out
sahf
call
loopne
into
clc
mov
loope
jmp
ret
test
pop
stc
xor
in
ja
insb
xchg
imull
inc
sub
in
mov
pop
push
outsb
scas
or
ret
scas
or
mov
stc
test
ret
inc
push
cmp
out
jmp
aam
mov
testb
or
cmc
leave
adcl
rcr
std
sbb
imul
mov
mov
shll
or
rol
inc
push
jecxz
adcl
lcall
dec
cmp
mov
add
xchg
in
xchg
lods
sbb
pop
adc
cmp
push
mov
into
or
push
test
lahf
push
add
loop
mov
addr16
pop
sarb
jecxz
mov
mov
jecxz
pop
int
pop
jns
int
xor
ret
pusha
adc
mov
insl
loop
mov
add
cmp
testb
sub
ret
bnd
pop
pop
sub
in
in
sub
xor
xchg
mov
lock
mov
js
or
push
jmp
mov
cmp
xor
leave
repz
loop
lea
rolb
cli
mov
iret
mov
mov
stc
adc
inc
shlb
imulb
cmp
jmp
in
rep
sar
mov
add
rcrb
jmp
rcr
rcll
add
subl
xchg
stos
std
cmc
pop
dec
pop
imul
bound
or
movsb
adc
rcll
pop
adc
aaa
ljmp
and
aas
adc
adc
cmp
pop
je
xor
addr16
repnz
jecxz
push
les
cmc
xor
xor
in
ret
and
pop
es
idivl
jns
add
fs
setns
mov
push
cmpb
aas
sub
aad
std
outsl
stos
mov
call
ja
add
sub
mov
fsubrl
xor
xchg
stos
cmp
xor
lock
aas
jno
mov
pop
inc
xor
movsl
cmp
hlt
cmp
jae
nop
and
decl
sbb
sbb
fisubl
ljmp
pop
rol
push
push
jmp
inc
add
leave
rorb
adc
mov
push
into
iret
mov
jb
pushf
mov
loopne
adc
icebp
dec
stos
jae
adc
mov
pop
mov
cltd
inc
movsl
mov
pop
movsb
adc
aam
and
push
fs
ja
ret
pop
ftst
jo
popf
sbb
js
sbb
es
mov
lahf
jge
inc
inc
hlt
mov
dec
loope
and
imul
mov
xchg
idivb
outsl
addr16
mov
icebp
mov
mov
inc
outsl
cmpl
icebp
xor
inc
repnz
inc
aad
fildll
adc
stc
cmp
mull
pop
daa
inc
xor
cmpb
and
mov
cmp
xchg
shlb
dec
cmp
dec
pop
pop
push
mov
mull
or
stos
pop
xchg
ret
enter
js
jl
fiaddl
mov
or
add
popl
jns
ss
cmp
mov
out
in
cmpsb
mov
xor
ds
xchg
pop
gs
sbb
stos
xchg
aad
fnstsw
stos
insl
pop
inc
movsb
test
jp
vminsd
mov
cmp
push
pop
cld
sbb
negb
lcall
mov
loope
mov
mov
insb
jg
daa
inc
fisttpll
push
stos
cmpsl
push
xorb
sub
les
cld
hlt
sub
mov
mov
adc
mov
jae
test
jnp
mov
cmp
cmc
scas
cmpsl
pop
fwait
push
testl
jecxz
in
dec
pop
sti
mov
ret
mov
mov
xor
add
incl
inc
inc
out
outsl
adc
xchg
push
lcall
fwait
lret
pop
or
stos
fwait
out
pusha
pusha
insl
repnz
in
mov
bound
push
xor
repnz
xchg
aas
push
sbb
js
insb
sbb
or
pop
pop
pop
ret
push
pusha
stos
bound
inc
ret
sbb
jne
sub
sub
mov
pop
data16
push
sub
lahf
mov
pusha
insl
mov
jbe
aam
cmp
test
sbb
lds
sub
loope
js
jbe
lcall
ljmp
dec
jle
pop
jne
adc
mov
add
push
lcall
gs
clc
jle
cmpsb
jnp
adc
ja
mov
pop
in
ja
sub
cld
aas
adc
xchg
mov
inc
stos
adc
pop
popa
rolb
xchg
add
add
add
dec
test
or
cltd
cmpsl
int
inc
iret
ret
jg
lock
sub
int
xchg
push
outsl
dec
sub
sub
imul
lock
push
jle
jae
mov
fisubl
mov
push
and
push
aaa
sub
fisttps
pop
stos
jo
push
lahf
mov
int3
mov
cmp
mov
arpl
rcrl
es
lds
cli
ljmp
movsl
scas
aas
in
push
inc
shl
test
cmp
cmpsl
sbb
mov
call
pop
stos
lock
mov
adc
push
sub
pop
aaa
shlb
cmp
ret
jne
xor
sti
add
mov
out
jb
fcomip
jnp
xchg
mov
frstor
adc
sbb
lcall
sarl
push
inc
sbb
or
adc
gs
inc
es
xlat
insl
mov
lret
cmpsb
push
pop
dec
push
sbb
pop
or
call
pop
stc
pop
or
adc
mov
int
aad
pop
and
out
and
jnp
outsl
sbb
mov
sbb
jae
movsl
xchg
mov
sahf
daa
xchg
adc
jbe
pusha
cwtl
adc
fdivrl
mov
mov
insb
outsb
pop
cmpsl
aas
sbb
or
nop
shll
xchg
aam
call
nop
js
jno
rcl
jecxz
mov
out
jmp
pop
test
std
rcrl
jns
jg
shr
cwtl
inc
sti
add
jno
push
insl
push
or
sub
xchg
aam
mov
rcrl
mov
sub
or
cmp
jb
mov
je
push
lock
mov
mov
imul
xor
dec
cmp
adc
outsl
loope
mov
or
in
xlat
push
xchg
push
or
push
inc
fadd
xor
mov
jno
mov
outsb
push
pop
lea
or
in
fwait
xchg
mov
ret
mov
add
pop
lea
jge
xchg
push
imul
and
sub
push
pop
fstpl
je
mov
sbb
pop
cli
das
fistpl
xor
xor
ljmp
xchg
ficoml
leave
loope
sub
int3
jo
arpl
out
dec
fs
or
mov
dec
mov
lret
inc
mov
sub
xor
sub
add
test
push
insl
xchg
and
repnz
pop
ret
push
int3
mov
or
jle
pop
into
jae
roll
stc
xorl
mov
sti
dec
mov
aaa
pop
adcl
jge
mov
inc
in
rclb
test
or
aas
add
std
inc
or
add
fstp
mov
cmpsl
dec
mov
lods
dec
adc
data16
push
mov
pmulhw
push
cs
fdiv
sbb
adc
lahf
jge
push
add
pop
xor
inc
push
popf
sbb
or
mov
sub
fistpl
pop
andl
add
repz
or
jb
dec
add
jae
cmpsl
aas
push
sub
pop
lret
movsl
push
inc
sbb
push
xor
fadd
ss
sbb
jp
mov
jl
or
mov
xor
jnp
mov
xor
int3
jg
cmp
mov
dec
icebp
mov
cli
add
mov
lea
mov
rorb
cmp
mov
rorl
pushf
out
fimull
jle
fisubrl
pop
pop
xchg
out
mov
jne
shrb
imul
inc
iret
popa
int
push
lods
icebp
lods
into
outsb
jle
jecxz
repnz
dec
pop
xor
bound
pop
push
or
je
stos
cmp
aam
gs
jecxz
ficomps
outsb
pop
mov
fstl
mov
and
push
icebp
fildll
popf
jae
stc
inc
mov
jbe
fsubrl
sub
or
stos
call
add
movsl
lret
outsl
mov
scas
int3
lea
mov
fistpl
xchg
pop
mov
cmc
cli
out
lret
je
sub
into
dec
addb
inc
cmpsl
jns
mov
inc
sbb
mov
xchg
mov
or
lahf
inc
aad
add
lock
dec
lsl
loop
push
test
ds
push
test
xchg
xor
fisttpll
leave
xchg
imul
pop
inc
push
xor
push
push
dec
sbb
add
rorl
push
lcall
cmpsb
push
mov
sbb
pop
repnz
enter
je
lea
add
mov
xor
loop
mov
loopne
adc
out
stc
js
subl
sub
loop
mov
add
scas
in
mov
cli
es
xlat
scas
shlb
outsb
cld
es
jle
hlt
dec
lods
call
dec
outsl
mov
out
mov
fisttps
inc
ja
lock
add
jo
ret
mov
push
rolb
rol
add
dec
jo
clc
inc
jp
test
ret
test
aad
mov
inc
cwtl
das
fisubs
inc
lahf
add
mov
ljmp
xchg
out
dec
add
mov
packsswb
scas
dec
jno
jmp
adc
sub
xchg
dec
mov
and
es
and
jg
mov
iret
mov
dec
cmc
push
sbb
imulb
sti
nop
lret
mov
jns
adc
jge
push
fistpl
and
test
aaa
pop
fbld
lods
loopne
stos
loope
jmp
xor
fisttpll
cmp
push
xor
sub
or
add
loop
cwtl
cmp
test
sub
jle
jne
lock
lahf
dec
imul
insl
cli
mov
jne
jae
jbe
cld
sub
jbe
sti
ja
mov
mov
dec
ret
les
lds
adc
jl
mov
or
adc
enter
hlt
mov
add
inc
gs
add
adc
fisttps
cltd
push
ret
or
cld
push
fisubrl
bound
sbb
jmp
stos
push
adc
mov
or
je
xchg
pop
xchg
lahf
ljmp
daa
test
in
xchg
xor
or
clc
ss
rcr
xor
add
jnp
xchg
mov
out
sbb
out
xchg
xchg
lahf
pusha
pop
arpl
out
loopne
cmc
mov
fldt
jecxz
loopne
inc
into
sub
dec
jae
mull
es
test
ss
xchg
jo
adc
test
inc
mov
inc
mov
mov
dec
int3
xchg
xor
push
xor
xor
dec
xchg
aaa
pop
std
adc
mov
fidivs
cld
pop
mov
jg
mov
add
xchg
lret
push
push
add
addl
sbbl
push
out
lret
aas
pusha
jno
push
inc
or
ret
or
lahf
pop
add
int3
mov
test
pop
mov
sbbl
mov
push
pushf
loope
push
or
pop
lods
inc
movsb
jecxz
arpl
cli
xchg
in
loop
pop
es
repz
jns
xor
int
daa
or
jle
push
ficomps
sbb
into
dec
mov
lret
jnp
test
loop
inc
and
loopne
push
or
je
dec
jns
inc
push
shlb
and
lock
sub
aad
addr16
mov
addl
mov
insl
popf
inc
aam
into
push
jo
xor
and
cmc
push
xchg
imull
mov
jge
add
xor
cld
pop
xchg
mov
xchg
ss
jns
data16
ja
cmp
cmp
in
inc
add
sbb
fsubr
or
gs
les
addr16
inc
dec
rolb
mov
rol
add
push
fwait
out
mov
lcall
adc
dec
and
adc
jb
inc
iret
push
out
adc
in
mov
add
push
xchg
pusha
subl
lods
fstps
bound
stos
lahf
scas
sbb
cltd
mov
int3
jp
pop
in
stos
sarl
sub
sbb
sahf
fmulp
rolb
sub
arpl
cmp
and
xchg
xor
movsl
jne
sub
andl
and
xor
xor
xchg
in
or
dec
sub
adc
mov
jo
in
outsl
dec
jo
shl
jo
mov
insl
sti
out
ss
jns
push
mov
aas
adc
test
bound
outsl
mov
jge
les
pop
std
sbb
fisttpl
popa
inc
adc
ret
fnstsw
push
ss
andl
dec
dec
sub
xchg
roll
mov
addr16
rolb
and
bswap
push
dec
mov
outsb
out
jmp
loop
loop
mov
cmovg
lea
xchg
add
imul
loopw
adc
outsl
test
scas
cmpsb
mov
in
inc
movsb
sub
inc
iret
pop
fcmovu
sbb
bound
mov
jb
fbld
adc
out
mov
ds
adc
jns
stos
icebp
mov
cmpsb
lods
test
cs
mov
pop
lret
sub
inc
icebp
leave
and
inc
scas
scas
or
cmp
adc
jp
lret
stos
mov
shl
and
enter
hlt
and
test
jnp
sbb
pop
mov
js
pop
mov
add
sbb
adc
cmp
or
fdivrp
jle
mov
nop
dec
cmc
fwait
jbe
or
inc
add
movb
popf
ret
loopne
or
add
test
inc
pop
lea
and
leave
dec
or
movsb
or
push
push
out
mov
out
push
xchg
push
push
jle
rcrb
xchg
fsubrs
mov
mov
lock
sbb
mov
pop
imul
insb
xchg
adc
insl
add
or
push
xchg
outsl
mov
xchg
jo
popa
test
pop
xchg
mov
cmc
push
xorl
scas
lret
es
imul
icebp
shrl
mov
insb
rcl
sbb
cmpsl
ret
out
jmp
or
sub
repz
nop
lock
stc
cmp
xor
cld
sbb
fcmove
je
cmp
cmp
xor
int3
jbe
mov
push
clc
jl
lcall
xchg
push
sti
xor
xchg
jecxz
mov
rol
xchg
or
add
stc
add
cmp
dec
call
insl
or
mov
inc
lcall
xchg
and
sub
jmp
cmpsb
pop
sbb
rorb
adc
add
in
xchg
inc
jae
shlb
rcll
and
les
insb
dec
insb
or
ret
fstpt
pushf
cmp
popf
mov
mov
out
repz
shll
xchg
mov
mov
inc
and
push
add
es
in
dec
inc
call
dec
clc
in
lret
inc
cs
lcall
cmpsb
dec
adc
add
mov
ret
scas
outsl
les
std
je
pop
test
idiv
xor
hlt
xor
add
ja
rcll
cli
adcb
lcall
call
shl
sub
addr16
jmp
xchg
xchg
test
cmpsb
fsubrs
push
sbb
idiv
test
cmp
into
int
enter
sbb
inc
xchg
ror
cmpsl
add
lods
dec
mov
dec
or
xchg
and
xor
sbb
es
mov
fcmovb
adc
rcrb
mov
loopne
jg
mov
icebp
lret
stos
fs
sub
jl
out
out
outsl
mov
shlb
sbb
dec
dec
xchg
xor
out
xchg
enter
fs
pop
adc
pop
jmp
imul
lock
dec
jmp
stc
jno
and
stos
cld
xor
jo
mov
push
xor
scas
adc
xor
mov
mov
jbe
dec
jp
ljmp
notl
ja
cmp
stc
stc
cmp
mov
incb
fdivrl
add
aas
out
inc
inc
ret
jno
add
addb
add
mov
adc
hlt
loop
bound
pop
cmp
jmp
into
dec
inc
jle
rclb
xchg
pop
negb
iret
daa
popa
and
push
and
xor
fst
xchg
cmp
xchg
pop
pop
mov
dec
inc
pop
fisttpl
sbb
pusha
mov
gs
data16
pop
or
outsb
shl
rcr
mov
imul
inc
adc
pop
jno
and
push
gs
daa
ret
lcall
inc
lods
jne
addr16
mov
mov
push
push
cmp
adc
xchg
ret
xchg
add
ret
repnz
mov
out
test
cmp
ja
mov
test
push
push
aaa
mov
pop
mov
ds
jg
dec
jge
fildl
sbb
cmp
sbb
lcall
push
pop
sahf
fisubrs
ficompl
ret
inc
int3
xchg
push
adc
lahf
mov
jmp
or
loope
push
xchg
mov
xchg
pop
shll
imul
xchg
push
jb
add
and
push
sub
cwtl
mov
jmp
rolb
pop
jle
arpl
push
loope
stc
mov
pop
aas
lods
out
push
push
in
data16
mov
pusha
xchg
lcall
pop
call
mov
sbb
stos
mov
or
dec
xor
daa
stos
jno
repz
push
push
xor
int
dec
sahf
repz
fadds
push
nop
mov
jp
cmp
cmp
jg
mov
jge
add
arpl
cmp
test
xchg
xchg
cmp
inc
adc
jl
pusha
mov
xchg
lods
test
arpl
push
or
or
in
push
inc
cld
and
cmp
pop
xchg
in
sub
inc
inc
sbb
xor
lea
inc
add
rcll
mov
add
inc
pop
mov
fcoms
fcoms
sub
cltd
sbb
cli
push
push
cld
mov
xchg
das
dec
sbb
mov
cmpsb
xlat
lcall
xchg
and
fcmovnu
pop
gs
out
rclb
fnstsw
jo
mov
pop
push
xor
pop
insl
cmpsl
pop
inc
cwtl
ret
fwait
sbb
ret
arpl
div
and
inc
cmp
icebp
data16
mov
mov
std
sub
dec
stos
pop
in
mov
ss
cs
repz
outsl
cmp
lds
add
add
jmp
push
jne
jbe
push
lcall
inc
sbb
xor
out
repz
mov
shrb
pop
ljmp
push
movsb
lcall
enter
xchg
lods
fs
mov
sbb
or
outsb
popa
sub
jnp
pop
dec
adc
pushf
mov
negl
aam
rolb
pusha
adc
jmp
cli
mov
cmpsl
cltd
divl
scas
xor
push
jbe
mov
stos
js
inc
pusha
pop
out
mov
pop
mov
mov
xchg
lds
neg
pop
mov
sti
out
and
ficoml
ljmp
sub
into
test
popa
sub
leave
mov
cmp
push
shlb
jb
cmp
cmp
lods
scas
xor
repnz
adc
push
repnz
lds
inc
xor
nop
xchg
sbb
jne
jl
fsincos
mov
movsb
stc
inc
cwtl
sbb
cmp
add
push
mov
jg
jle
add
add
adc
and
andl
push
push
cwtl
jge
or
xchg
mov
lret
leave
mov
push
and
sahf
rorl
and
repz
sbb
mov
inc
fbld
xchg
fwait
adc
nop
lret
outsl
xlat
push
xlat
movsl
xchg
xchg
xchg
notb
xchg
fsubrs
aad
push
dec
fchs
sub
jbe
xchg
out
jmp
sbb
xchg
adc
mov
sbb
and
fldcw
jge
enter
mov
pop
push
cmp
roll
sti
jo
add
mov
and
stos
xor
imul
imul
pusha
outsb
mov
enter
decl
outsb
enter
xor
jns
sahf
add
inc
pop
jo
mov
xchg
ja
pop
fdivrs
push
leave
idiv
or
mov
cmc
sbb
add
adcl
pushf
pusha
inc
mov
jb
inc
repz
ret
inc
mov
mov
lret
cld
lea
xchg
inc
inc
lds
iretw
loop
or
lods
data16
adc
lret
sbb
push
jge
fidivrs
iret
fsubrp
dec
mov
rorb
mov
shrb
pop
lock
aad
imul
push
bound
ss
mov
sbb
fldcw
mov
mov
xchg
jl
pushf
int
and
ret
lahf
inc
fcmovb
sbb
rcrl
leave
jmp
test
sbb
icebp
cmp
sbb
fisubrl
or
out
insl
push
push
mov
fldt
add
lods
sahf
xchg
xorl
loop
mov
cmp
adc
dec
add
mov
ja
ss
mov
adcb
jmp
idivl
pop
dec
jp
aaa
lcall
loope
sub
jle
inc
adc
mov
in
ret
andb
repnz
lds
jp
dec
test
adc
pop
sar
in
int3
mov
insl
pushf
push
adc
mov
push
pusha
loope
adc
xchg
xchg
sub
adc
push
xor
shr
adc
jns
sbb
jns
imul
mov
fwait
insb
mov
aam
fcompl
lret
mov
notb
and
test
sub
test
jecxz
rcll
add
and
lods
daa
push
in
cld
xchg
and
jmp
fisttps
xor
aas
pop
les
jl,pn
push
inc
pop
xor
mov
sbb
jge
daa
xchg
shl
shll
mov
mov
push
jnp
cmp
sti
pop
sub
sub
mov
push
mov
sahf
inc
leave
mov
mov
clc
ret
dec
xchg
icebp
jp
inc
push
je
mov
les
repz
dec
push
into
int
cmp
jecxz
add
xor
and
xor
aad
sbb
adc
loope
scas
sbb
lock
push
in
pop
jl
sti
fwait
jno
test
dec
jnp
sbb
sahf
icebp
in
outsb
scas
insb
cmp
in
fisubs
negb
outsl
popa
pusha
xor
daa
imul
fs
mov
gs
scas
lods
adc
mov
sub
insb
cmp
mov
xor
sub
out
inc
xor
iret
jb
std
ss
ljmp
jle
sub
jg
add
xchg
cmp
cmp
mov
cmp
mov
jmp
cmp
popf
jg
xor
in
hlt
loopne
popf
iret
inc
mov
filds
pushf
mov
lret
inc
cmpb
inc
push
pop
fidivs
xchg
cmp
mov
es
repz
lods
fstl
sub
xchg
das
sarl
mov
rcr
jbe
ret
jecxz
cwtl
inc
mov
mov
pop
mov
pop
fmuls
jno
ficompl
jnp
insl
fisubrs
mov
push
daa
push
mov
je
lcall
or
and
andl
stos
stos
incb
imul
insl
movsl
je
outsl
mov
mov
imul
jmp
jb
scas
dec
xor
scas
into
and
mov
call
jo
xchg
xorb
arpl
movsb
inc
mov
jo
push
cmp
mov
js
xchg
movl
cli
test
sti
jno
jl
cmp
push
ret
inc
or
popa
aam
add
adc
in
iret
mov
inc
jbe
enter
dec
jp
ja
push
or
mov
jae
dec
jnp
dec
push
or
or
pop
mov
mov
mov
and
sbb
and
adc
cmp
xchg
add
roll
lds
push
js
adc
out
push
cltd
or
adc
loopne
sbb
popf
out
pop
xchg
cwtl
loopne
cs
loope
sbb
fwait
xchg
pop
imul
mov
pop
je
movsb
sub
adc
gs
mov
xor
pop
cli
jmp
int3
cmp
add
out
inc
hlt
aas
in
bound
cmp
xchg
repz
push
mov
rclb
jg
into
movsl
aam
ss
rol
cmc
and
mov
and
mov
add
mov
dec
shr
inc
xchg
mov
mov
fbld
push
rorb
jge
mov
dec
xchg
add
es
imul
mov
jo
and
cltd
and
and
mov
test
rcll
out
push
pop
jge
int3
nop
pop
daa
dec
aas
iret
leave
icebp
loope
xchg
xlat
rclb
iret
push
push
rclb
mov
xchg
pusha
dec
pop
pop
xlat
xor
enter
mov
stos
xlat
sti
push
cmp
sbb
jge
mov
stos
ja
jecxz
loope
jae
test
cmp
out
jns
in
je
add
mov
out
popf
repnz
xor
or
sahf
mov
fcomi
sbb
js
lcall
mov
sub
xchg
or
mov
xor
sbb
jp
in
adc
repnz
inc
mov
sub
repz
mov
imul
cmp
jnp
iret
std
sbb
aas
lret
jle
cmp
enter
push
std
mov
inc
xchg
jnp
and
inc
loopne
pop
pop
or
dec
mov
ror
out
or
dec
mov
pop
or
iret
int3
adc
mov
fists
mov
rol
ret
inc
fs
sbb
shll
add
popf
sub
xchg
loope
ret
fnsave
popf
cwtl
jl
cmp
fmull
daa
cs
fiadds
ret
and
cltd
and
cmp
insb
push
stos
or
aam
hlt
jne
push
jmp
sub
jmp
dec
data16
shrl
fnstenv
xor
cmc
push
mov
xor
and
mov
inc
cmp
xchg
mov
mov
idivb
add
mov
mov
add
mov
js
push
cwtl
jnp
cmp
adc
or
sbb
mov
fadd
push
clc
dec
lea
dec
adc
add
lret
adc
push
adc
xchg
aam
ficomps
dec
pop
pop
dec
add
sub
lods
mov
shl
lods
arpl
jecxz
jle
adc
push
aam
lock
xchg
scas
adc
pop
mov
and
sbb
or
sub
jecxz
push
fldt
popf
mov
stc
gs
pusha
and
pop
test
push
cmp
loop
jmp
sub
mov
insb
stos
mov
pop
sbb
std
push
sub
push
sub
sbb
lods
push
mov
out
xor
call
hlt
ja
xor
lret
inc
xor
cmp
mov
mov
outsl
cmpsl
clc
cmp
push
out
repz
or
inc
fdivrl
jo
mov
pusha
gs
inc
je
arpl
cmp
push
add
xchg
xchg
leave
sub
mov
dec
int
stos
adc
sti
faddl
adc
mov
sub
and
mov
fwait
pop
fcom
push
jb
jnp
push
nop
fstpl
jb
push
lods
cwtl
and
cltd
loopne
pop
fscale
jmp
jnp
cmpsl
movsb
pushf
fdivl
sahf
adc
lret
gs
xchg
loop
pavgw
and
mov
and
pop
scas
lret
mov
mov
test
xchg
pop
xor
stos
notb
stos
clc
dec
sbb
cli
dec
sbb
scas
decb
scas
ljmp
stos
ja
cmc
cmp
cmp
addr16
icebp
jle
cs
push
cmp
mov
inc
jg
loopne
mov
add
push
inc
pop
iret
mov
pop
mov
scas
dec
mov
cwtl
mov
inc
xchg
inc
dec
mov
int3
test
xlat
xor
dec
stos
sbb
shl
pop
pop
push
cmp
sbb
adc
fidivrl
sub
sub
xchg
addr16
mov
push
and
hlt
push
inc
push
push
loop
imul
imul
fcomps
cmp
and
jne
movsb
cmc
jbe
popf
movsl
int
pop
jle
pop
addb
cld
sub
les
aad
gs
sub
ljmp
jmp
call
hlt
push
fildll
dec
cmc
sbb
push
mov
lods
jno
sub
mov
mov
xor
jg
cli
inc
xchg
lret
arpl
testb
les
push
js
std
fmull
cmp
in
lcall
rcrb
loope
mov
push
shlb
inc
adc
pop
adc
push
push
or
iret
mov
shll
hlt
mov
sti
or
mov
lret
or
fs
push
pop
cmp
dec
fwait
lcall
and
aas
out
add
cmp
out
fstp
in
sbb
mov
hlt
pop
lahf
jae
sub
push
cltd
and
jae
scas
outsb
cmp
clc
mov
mov
pop
jbe
and
enter
and
in
loopne
and
daa
jmp
in
test
stos
in
inc
sub
mov
nop
ljmp
cmpsb
aas
hlt
adc
inc
jo
mov
add
pop
push
pop
cmp
cmp
rcl
xchg
inc
scas
adc
add
push
rcrb
xchg
jne
pop
je
push
xchg
adc
fsts
inc
insl
nop
addb
mov
dec
out
pop
leave
lds
pop
inc
call
notb
push
rclb
adc
sbbb
idivb
push
ret
in
outsb
ret
movsl
popf
pop
jle
lcall
sbb
inc
in
shl
or
insb
jns
push
pop
xlat
cmc
pop
pusha
mov
cld
rcrb
out
cmp
mov
int3
inc
nop
outsb
sbb
inc
jl
call
ret
add
xorb
dec
mov
push
inc
jmp
mov
lret
push
jmp
stos
cs
test
das
outsl
xchg
in
xor
push
shlb
lock
sahf
xchg
xchg
je
scas
xor
push
in
and
repz
gs
inc
lds
mov
mov
jnp
test
jge
sbb
fistl
rorb
fwait
jnp
aas
lods
mov
cmp
cmp
pusha
sarb
andb
mov
mov
pop
in
add
sub
inc
test
cwtl
int3
push
pop
mov
dec
sub
sub
iret
insb
push
xchg
ss
xchg
sbb
xchg
jb
xor
or
fs
cmp
xlat
fsubr
xchg
hlt
xchg
mov
outsb
xchg
pop
pusha
and
mov
lds
fidivrl
jb
js
int3
xor
and
and
loope
push
push
fdivrp
je
xor
sbb
push
pop
cmpsl
inc
jne
out
pop
cwtl
fildll
lret
iret
mov
cld
mov
idivb
je
sarl
or
stos
call
scas
sub
or
imull
les
repz
xor
stos
and
stc
aad
idivl
fwait
sub
mov
sub
lret
jns
mov
pop
xchg
lods
mov
cmp
sbb
dec
enter
mov
mov
push
outsb
add
or
iret
pop
add
adc
inc
xlat
fsubrl
push
and
inc
cld
sbb
mov
mov
bound
dec
xchg
lea
data16
in
fs
pop
mov
call
lcall
adc
xchg
cmpsl
je
xchg
sub
push
cltd
out
xlat
sub
jmp
jp
bound
pop
sti
pop
loopne
mov
dec
sbb
lods
mov
mov
arpl
mov
mov
mov
stos
or
lret
xchg
test
jmp
cmp
imul
pop
sbb
in
js
cs
xor
or
ss
loopne
icebp
jno
repz
sbb
ss
inc
push
mov
popa
jp
mov
ds
mov
pop
mov
add
push
test
es
adcb
iret
test
aaa
pushf
jg
mov
inc
xchg
dec
shrb
adc
add
inc
sbb
test
out
leave
nop
mov
das
mov
xlat
rcr
jecxz
push
stos
or
dec
aam
mov
cwtl
pop
cld
cltd
notb
push
mov
ror
xchg
push
mov
push
aaa
and
ja
push
push
mov
and
fmull
xchg
popa
xor
ret
cmp
test
push
pop
pusha
fs
lahf
cmpsb
push
loop
jns
add
ljmp
xchg
and
xchg
out
push
cmpsb
loopne
imul
ret
insb
jl
ja
xor
xorl
in
divb
scas
rolb
ret
and
cmc
jo
cmc
pop
jbe
stos
xor
clc
arpl
pop
mov
insb
or
sti
mov
mov
data16
mov
sub
pop
cld
sti
dec
jmp
in
push
cmp
testb
scas
or
test
add
leave
dec
xlat
addl
or
sub
je
lea
adc
xor
shll
jmp
outsb
dec
lahf
xor
xor
cld
adc
dec
sub
xchg
rclb
rcll
mov
lcall
xchg
fcomip
pop
mov
pusha
hlt
fucomi
movsb
loopne
mov
aad
std
fwait
addr16
cmp
ss
movsb
gs
push
ret
out
jns
mov
push
jmp
and
dec
stc
jmp
jns
lods
mov
out
ljmp
out
add
inc
aad
inc
inc
outsb
mov
xor
mov
cmp
or
into
add
inc
push
xor
aas
iret
mov
insl
jns
mov
subb
mov
lret
movsl
add
jle
pop
cmp
push
xchg
add
sbb
cltd
iret
xor
mov
adc
add
rcrl
dec
mov
push
jecxz
int3
xchg
inc
insb
dec
imul
mov
sub
rol
in
mov
push
rclb
xchg
outsl
adc
xchg
ret
xchg
fsubrl
sbb
jp
lcall
je
fiadds
pop
mov
out
push
movsb
imul
lds
pop
pop
cmp
stos
arpl
adc
mov
cmp
out
dec
in
sbb
repz
jbe
xor
cs
xor
mov
dec
mov
xchg
mov
jno
lock
outsb
jg
insl
mov
into
jg
ja
sar
xchg
add
leave
xor
notl
mov
or
movsl
mov
icebp
les
dec
sbb
add
fidivrl
dec
sti
adc
aas
int
std
shlb
incb
pop
push
incl
adc
xchg
push
xlat
orb
add
rcrl
xchg
push
aas
xchg
or
fimuls
xchg
dec
pop
or
dec
shlb
adc
das
cwtl
sahf
and
fidivl
adc
jae
xchg
pop
and
pusha
std
in
mov
sub
in
pop
fisttpl
lret
push
mov
mov
sbb
mov
dec
adc
ds
jecxz
clc
mov
add
bound
and
sub
inc
fisubl
stos
push
push
fs
mov
jmp
test
push
sub
in
lods
mov
testb
repz
xor
lcall
daa
mov
pop
xor
push
jne
jbe
test
mov
std
pop
cmp
jle
pushf
aas
add
fdivrp
lds
popf
sar
sbbl
jecxz
push
mov
inc
sub
xchg
in
lret
xchg
mov
enter
cmp
insl
jmp
cs
mov
sub
dec
mov
adc
xchg
out
lea
jmp
and
adc
push
xchg
lods
push
xor
xchg
das
sbb
dec
sahf
push
scas
sbb
cmp
pushf
mov
pop
loopne
ret
in
cmpsl
addr16
ret
movb
and
xchg
jne
jl
mov
lods
jne
imul
mov
cmp
sub
xchg
add
dec
or
int3
jmp
sbb
jns
xchg
in
outsb
jnp
test
std
xlat
dec
inc
mov
lret
stc
jmp
inc
lcall
jl
cmc
jne
mov
xlat
xchg
aas
adc
aas
shll
inc
arpl
leave
lahf
and
inc
inc
gs
pop
notl
loop
push
mov
push
sbb
scas
enterw
leave
xchg
stc
stc
fisttpll
and
and
in
setne
ficoms
pop
pop
loopne
shl
bound
dec
jmp
mov
int3
mov
xchg
mov
add
out
fcomp
lret
movsb
dec
loope
jne
repz
insl
ja
call
daa
and
push
leave
pop
es
das
out
call
popa
jno
fdivrs
data16
repz
pushf
out
clc
or
inc
mov
clc
test
sarb
arpl
pop
mov
dec
jne
push
mov
pop
das
subl
mov
jecxz
mov
dec
or
mov
lahf
xchg
jae
std
xchg
jae
sub
leave
dec
testb
aas
and
dec
sti
lret
orl
lcall
cwtl
add
inc
and
bound
sbb
out
xchg
xchg
mov
add
sub
or
mov
loope
add
int3
sbb
sbb
sbb
or
or
xor
dec
cmc
mov
adcb
shr
dec
xchg
test
mov
mov
mov
adc
out
push
sbb
test
flds
xchg
gs
sbb
fwait
add
dec
mov
xorb
fwait
xchg
xor
out
mov
jnp
xchg
popa
push
pop
gs
dec
xchg
out
mov
xchg
gs
jl
cmp
stos
sub
and
out
repnz
inc
and
mov
sbb
test
outsl
shlb
xor
mov
fimuls
fwait
leave
fdivrl
push
mov
pop
pop
mov
ja
mov
mov
mov
imul
mov
adc
mov
jp
adc
jl
or
fcoms
stos
pop
ret
jle
inc
fldenv
rorb
inc
add
push
push
cmp
push
mov
dec
push
xchg
push
fs
push
sub
dec
into
data16
lret
call
fwait
and
lods
jne
into
jecxz
sub
test
cltd
xchg
gs
and
xchg
divb
sbb
sbb
fldt
and
pop
sahf
lcall
in
frstor
dec
mov
jge
inc
mov
push
pop
jns
out
cmp
scas
cmp
lcall
fs
out
push
imulb
xor
xchg
jg
xor
jge
add
or
xor
sub
arpl
add
or
lahf
imul
daa
pop
xchg
stos
mov
fildl
pop
imul
cmp
cmp
mov
jmp
adc
lret
ds
pushf
inc
jo
push
ja
fstpl
inc
xor
fadds
push
test
popa
std
jg
xchg
xchg
ds
inc
inc
lods
or
or
test
push
inc
or
fmuls
add
mov
lret
test
xchg
jl
stc
push
or
les
or
adc
out
mov
jp
mov
rcl
lahf
or
outsb
fnsave
adc
rcrl
out
mov
sub
xchg
stos
xchg
jl
test
ja
inc
idivl
pop
and
mov
ljmp
repnz
pop
ret
push
lds
mov
loope
data16
aam
cmp
jmp
test
shlb
in
mov
or
sub
rcl
fidivrs
in
push
add
sub
lea
js
stc
addb
clc
push
xchg
mov
or
dec
cmc
jne
stc
push
int
sahf
test
mov
int
lcall
ljmp
mov
sbb
jle
bound
jns
add
inc
mov
shrl
push
xchg
jmp
or
testb
pop
test
cmp
fmul
imul
xchg
mov
or
push
adc
cli
lret
stos
insl
dec
xchg
push
clc
lahf
shlb
adc
adc
hlt
dec
test
clc
data16
mov
clc
scas
in
pop
stos
mov
push
movsl
cmp
add
fwait
leave
pushf
mov
shl
int
call
fwait
cld
mov
cld
mov
mov
sub
bound
cmp
out
mov
test
scas
mov
pop
mov
cs
lods
sub
outsl
stc
and
xchg
lods
mov
mov
add
idivb
mov
aaa
cmp
xor
pop
dec
xchg
add
sti
add
sbb
cmp
aas
inc
push
jg
in
cltd
iret
or
add
scas
mov
lret
or
mov
fcmove
and
dec
mov
faddl
mov
inc
mov
aam
xchg
adc
cmp
pop
repnz
adc
negl
and
xchg
es
fldcw
jle
sbb
pop
in
push
popf
adc
xchg
push
fcoml
shrl
bound
das
mov
insl
mov
sbb
xor
xlat
xchg
xor
loopne
or
fiaddl
sub
push
ret
jmp
lcall
cmp
jno
fisubrl
jp
xor
cmp
dec
mov
aad
cs
xor
push
mov
test
jns
push
xor
adc
push
sahf
add
rorb
adc
push
rcll
call
scas
ficomps
test
xor
jae
subl
movsl
add
fisttps
outsb
test
cmp
and
fldt
mov
push
rorl
mov
adc
jno
inc
stos
fwait
xchg
outsl
sti
push
sub
fmul
movsb
scas
xchg
stos
loop
pop
out
popa
pop
pop
pop
sub
push
xchg
add
pop
xchg
xchg
fwait
xor
jno
pop
int3
sub
insl
pop
push
in
pushf
sub
xor
mov
jmp
subl
popa
or
es
imul
pop
add
jp
int3
test
xchg
sub
mov
les
mov
xchg
sub
aaa
insl
jns
addr16
mov
inc
xchg
add
daa
mov
cmp
xor
fwait
inc
push
mov
cwtl
js
pop
dec
js
sub
xor
jno
cmc
int
cld
mov
adc
daa
mov
pop
out
mov
rolb
into
test
enter
lds
xchg
xchg
inc
and
dec
out
gs
mov
nop
xor
arpl
out
roll
stc
dec
das
add
sub
movsb
cwtl
repnz
shll
push
jg
icebp
movsb
pop
jns
pusha
push
pop
fwait
inc
lock
in
inc
js
push
fmulp
mov
and
icebp
sbb
loop
xchg
inc
out
xchg
cmp
lock
fs
loope
jnp
data16
lds
mov
pop
add
cmpb
xor
mov
das
and
dec
mov
mov
das
das
jo
daa
xor
in
add
cmpsl
mov
aas
leave
hlt
ss
pop
jbe
sub
les
push
ljmp
dec
cli
inc
and
test
sbb
lds
cmp
inc
pop
enter
jp
dec
loope
fs
mov
mov
or
inc
mov
call
push
imul
adc
sbb
imul
call
sbb
shrb
lods
pop
hlt
in
insb
xchg
xor
out
aad
mov
pop
daa
pop
fadds
stos
das
push
loop
fbld
pop
mull
mov
ret
xchg
pop
lock
pop
sbb
outsl
jecxz
loope
mov
in
mulb
sbb
sub
dec
cmpsb
push
sub
notl
std
xor
ljmp
sub
lods
jl
push
ss
fcomip
sbb
mov
fidivrl
jne
sub
lret
iret
jne
jmp
add
xor
xor
aam
jl
mov
jns
sub
xor
mov
adc
jns
daa
das
inc
adc
loop
and
add
and
pop
in
out
push
inc
lret
add
xchg
and
or
stos
pushf
push
xchg
mov
movsl
or
push
pop
loope
mov
cmp
xor
enter
cmpsb
shrb
jno
flds
cltd
push
scas
pop
pop
push
mov
xor
fcmovnu
xor
sbb
gs
clc
mov
in
pop
movsb
ss
in
and
sub
mov
pop
push
and
es
mov
jg
mov
outsb
bound
int
test
arpl
inc
lock
jle
sub
mov
pop
jae
or
xor
mov
ja
in
add
sahf
inc
xor
cld
push
call
loope
jns
nop
arpl
lcall
cli
jl
std
xchg
test
dec
mov
inc
or
leave
inc
inc
in
pop
rolb
dec
aam
sbb
jnp
dec
add
pop
hlt
mov
fxch
xchg
mov
mov
jg
push
rol
stos
test
mov
push
pop
into
pop
jo
pop
pushf
mov
ljmp
std
sbb
pop
push
push
in
out
nop
and
pop
inc
fcoms
cwtl
xchg
jnp
and
bound
and
lret
and
pop
cmp
xor
lea
test
mul
in
fucomip
movsb
inc
movsl
jl
out
inc
inc
mov
imul
popf
lods
enter
stos
das
jge
lods
outsl
xor
iret
addl
push
mov
scas
jb
fnsave
xchg
push
hlt
inc
movb
rcrb
js
cmp
shll
cli
cmp
fimuls
sar
pop
sbb
pop
push
cld
roll
mov
and
gs
inc
icebp
xchg
loopne
push
or
mov
adc
or
mov
sub
aad
rolb
jmp
adc
jb
test
jecxz
into
arpl
scas
inc
loopne
fdivrs
xchg
dec
jge
incb
ret
into
ljmp
scas
arpl
xchg
fst
mov
cmp
enter
pop
dec
ja
js
mov
mov
in
fildll
movsl
test
bound
test
hlt
in
jb
stos
mov
out
in
cmp
pop
lods
sub
out
das
scas
push
mov
sbb
les
xor
and
xor
cmc
je
and
aaa
push
mov
lret
mov
js
xor
clc
mov
add
cli
cwtl
or
inc
adc
fidivrs
jl
add
inc
add
popf
ret
nop
subl
mov
leave
lock
mov
push
imul
test
push
inc
fwait
mov
dec
dec
mov
pop
sbb
push
das
out
xchg
mov
pushf
xlat
adc
mov
mov
sub
popf
fcoml
mov
push
iret
and
push
sbb
adc
mov
pop
ja
sbb
mov
mov
repz
pop
jb
inc
jle
arpl
xorb
sbb
and
mov
lods
in
out
lret
pop
jae
int3
filds
int
mov
inc
sub
loop
insl
mov
movsl
in
movsb
mov
mov
adc
out
mov
loope
das
sbb
or
shrl
xor
icebp
xor
stc
nop
sbb
jo
mov
jnp
inc
mov
adc
xchg
loop
xchg
hlt
jnp
dec
sbb
or
mov
js
push
cmp
fdivs
jnp
adc
dec
aam
ret
or
inc
arpl
inc
inc
xchg
add
xchg
in
xchg
ffreep
fs
or
pop
pop
or
dec
test
or
push
or
rclb
push
mov
adc
jle
push
xchg
aas
push
cwtl
inc
xchg
cmc
add
clc
pop
xor
xor
stc
fisttpl
mov
xor
and
pop
stc
repnz
icebp
cs
mov
and
jl
pop
mov
mov
pusha
xor
ret
push
jae
mov
inc
jl
jae
es
out
mov
add
dec
mov
mov
lods
or
pop
in
dec
lods
cmp
scas
scas
pop
mov
outsl
pop
mov
jo
mov
jno
mov
jb
mov
dec
sub
mov
into
jbe
mull
je
stc
jne
pushl
mov
add
push
add
mov
sub
jg
add
mov
adc
mov
add
lret
nop
fmul
dec
mov
sbb
xor
push
add
arpl
arpl
movsb
push
data16
adc
push
push
or
jno
sub
add
pop
push
pop
ficompl
xchg
cmp
and
xor
fidivrs
mov
movsl
adc
pop
cmpsb
in
cmp
scas
and
test
mov
cmpsl
or
jl
mov
mov
jne
add
clc
inc
lcall
sti
outsl
dec
xchg
cmp
lock
icebp
dec
xchg
xlat
inc
sub
cmp
push
sbb
test
xchg
push
jo
mov
sub
mov
icebp
pop
cmp
inc
and
cmpl
inc
xor
mov
fildl
mov
push
push
jnp
add
lea
add
aas
xor
lds
loope
cmpsl
xor
repnz
cmp
daa
or
fwait
into
addb
lock
test
mov
aas
fidivrl
dec
and
sub
or
push
insl
rcr
jo
and
in
es
fsubp
adc
cmpsl
aad
push
ret
mov
cwtl
movsb
sub
movsl
in
sbb
push
popf
imul
lods
repnz
lods
mov
scas
xor
cmc
loop
mov
mov
arpl
in
mov
mov
daa
mov
test
jl
mov
jmp
mov
add
xor
aaa
data16
test
mov
inc
xor
cmp
xor
adc
jnp
idivb
jge
aaa
jle
pop
adc
sarb
xchg
cmp
enter
cmpl
jle
push
aas
rcll
add
aam
aad
adc
add
xlat
fsts
fistpl
push
fstpl
fistps
loopne
lret
or
mov
jge
xchg
ficomps
lret
and
loopne
xchg
mov
push
call
pushf
hlt
push
movd
fcompl
test
cltd
daa
pushf
mov
dec
pop
imul
mov
sbb
fbstp
pop
and
push
mov
inc
push
dec
mov
loop
cmp
mov
inc
addr16
cmp
sub
dec
push
add
adcl
into
mov
xchg
mulb
dec
inc
jge
add
rorb
xor
or
clc
mov
mov
inc
mov
outsb
cmp
aas
test
pop
jns
mov
js
mov
pop
dec
jl
negl
jge
jge
sub
jns
adc
leave
into
mov
popf
test
es
push
aad
fcmovnu
aas
aaa
fwait
push
mov
push
lea
pop
dec
insb
fisttps
pop
push
dec
es
test
sbb
mov
xchg
jno
push
xlat
outsb
rclb
adc
ljmp
adc
mov
xchg
pushf
das
pop
test
cmp
sbb
fldl2t
cmp
jns
lcall
icebp
and
fucom
and
fidivrs
idivl
mov
jl
popf
xor
mov
test
and
jle
out
mov
cmpsb
xor
imul
scas
test
jecxz
pop
mov
jmp
repz
insb
xchg
xlat
je
int
imul
sbb
pop
mov
ds
mov
in
fnstsw
stc
jbe
cltd
movsb
sub
std
lcall
jge
scas
pop
cwtl
cmp
mov
pop
outsb
jle
sbb
and
addr16
sbb
cltd
dec
cmp
cmpsb
add
orb
pop
mov
mov
scas
pop
push
in
mov
xchg
or
pop
test
sbb
cltd
mov
int3
iret
pop
rclb
int3
adc
rclb
sub
mov
sbb
push
xchg
jne
out
fdivs
sbb
push
fstps
mov
fwait
imul
pop
inc
lods
loopne
add
pusha
add
jo
xchg
das
loop
sbb
out
and
and
movsb
push
xchg
gs
jnp
pop
jl
cmp
adc
sub
imul
out
adc
and
xor
add
lds
push
xor
cld
or
dec
ja
adc
data16
sub
mov
sbb
add
sbb
mov
stos
cmp
inc
fwait
or
ror
cmp
xchg
and
ljmp
or
xchg
ds
shll
xchg
mov
push
adc
xchg
cmp
sbb
xchg
cmpl
jle
xchg
adc
xchg
rorb
push
rorl
pop
pop
sbb
out
push
lcall
out
mov
fsubr
or
in
pop
mov
arpl
sub
and
in
dec
and
cmp
push
and
shll
cmp
cmpsb
dec
cmp
mov
xlat
jmp
hlt
shrl
lret
pop
xor
iret
and
negb
sbb
jne
or
jne
push
in
xor
jns
in
lods
stos
sti
scas
movsl
mov
cmp
mov
sub
jno
sub
jl
jge
mov
xchg
jle
dec
dec
repz
dec
push
lea
mov
pushf
movsl
int3
ficoml
out
pop
pop
rcrb
add
cmpsl
and
rcrl
sub
sarb
inc
mov
push
call
aad
and
inc
rcl
nop
inc
push
sub
sbbl
jae
sahf
xchg
call
fcompl
ja
push
mov
fisubs
popf
mov
sbb
imull
jp
call
adc
rcrl
xor
jbe
sub
cmp
outsb
sub
imul
outsl
pushf
into
cmp
addb
das
repz
sub
punpcklbw
clc
adc
outsl
jne
bnd
bound
mov
mov
dec
arpl
ds
inc
pop
and
int
jne
into
es
popf
pop
mov
flds
jg
mov
jg
inc
mov
dec
jns
or
orl
mov
jbe
mov
dec
xchg
fadds
mov
push
mov
push
push
push
xchg
fcmove
jmp
xchg
outsl
jb
push
dec
xchg
jbe
pusha
xchg
xchg
cmp
test
popf
pushf
or
push
pop
aad
xchg
insl
hlt
fstpl
push
pop
ja
jmp
pop
ss
mov
push
jne
fidivs
loopne
lods
fidivs
nop
imul
pop
lahf
sub
mov
inc
sar
outsb
sub
and
gs
fxch
divb
push
lcall
push
stos
leave
sbb
sbb
outsb
mov
jge
mov
mov
lret
mov
hlt
inc
xor
mov
dec
pusha
jne
stc
jbe
cmp
into
push
aad
out
movsbl
rol
mov
lock
sti
push
loopne
and
xor
and
mov
push
out
lret
inc
out
adc
out
andl
out
decl
push
mov
push
mov
adc
mov
add
stos
pop
mov
dec
mov
ljmp
mov
cld
xchg
jnp
dec
bound
mov
push
push
fimull
lcall
and
divb
sub
xor
push
jnp
mov
imul
popf
cltd
cmc
pop
sub
fdivr
outsb
sbb
mov
data16
mov
mov
and
incl
push
stos
mov
lods
call
fldcw
xor
mov
cmp
pop
in
cli
pop
das
outsl
push
mov
jo
push
xor
mov
cld
cmp
sbb
mov
mov
dec
cmp
adc
repnz
cli
ret
xchg
ret
test
std
mov
cmpl
pop
inc
pop
cmp
stos
xor
or
jns
dec
or
pop
dec
adc
pusha
dec
loope
and
loop
sahf
or
push
xchg
mov
rclb
or
out
pop
xlat
call
mov
sub
sub
fstpl
outsb
xor
add
push
sbb
pop
and
xor
popf
push
gs
mov
and
test
pusha
push
mov
pop
clc
repnz
std
lods
push
lods
pusha
test
add
sbb
pop
out
repnz
sub
mov
scas
stos
dec
add
sbb
lret
inc
imul
in
and
rcrb
fstl
leave
addl
jo
mov
cmp
icebp
aaa
sbb
test
mov
rolb
xchg
std
sbb
add
jmp
inc
adc
sbb
sbb
in
mov
jbe
adc
mov
inc
std
pop
dec
arpl
and
jg
inc
movsb
xchg
shlb
dec
int
fldenv
xchg
dec
aas
jno
aad
jecxz
sbb
addr16
aad
lret
and
pop
push
and
fdivrl
out
push
cmp
adc
mov
lcall
lcall
push
jae
add
fiadds
cltd
sbb
mov
dec
sub
xor
mov
pop
call
and
adc
mov
mov
data16
lret
xor
add
cmp
cmp
clc
repz
jmp
mov
sub
cmp
imul
dec
mov
int
imulb
ljmp
bound
lea
mov
adc
cld
push
leave
adc
mov
cwtl
nop
jne
jg
std
lds
adc
cmp
das
add
popf
adc
mov
mov
test
dec
ret
push
push
push
fxch
ljmp
roll
mov
stos
ja
sbb
jno
int
pop
or
dec
lods
push
cltd
push
adc
adc
inc
mov
rcr
dec
rcll
imul
in
jo
mov
adc
sahf
sahf
inc
mov
sub
out
or
xor
cmp
cltd
cli
fs
mov
push
push
out
insb
lcall
sbbb
and
ret
daa
call
rcl
insb
into
hlt
adc
daa
pop
popa
cmc
jecxz
sub
xor
cld
pop
jno
jbe
cs
je
jb
push
add
outsb
aad
mov
inc
test
xor
inc
jl
xor
adc
lds
and
jecxz
xchg
mov
mov
sarb
inc
stos
inc
jne
in
popa
lea
xchg
jne
mov
test
jo
mov
inc
inc
inc
leave
in
jne
test
mov
iret
cmpsb
addr16
shr
dec
dec
lret
jo
push
mov
xchg
dec
jge
call
and
mov
insb
out
pop
fsubrs
js
push
test
cmovge
pop
fsubs
push
jp
aad
jle
sbb
jle
pop
jb
fstps
xorb
scas
mov
cvtps2pi
loopne
in
das
pusha
movsb
mov
push
jae
jp
imul
sub
call
push
mov
enter
outsl
add
insb
ds
icebp
add
out
or
push
mov
out
mov
lods
pop
call
les
adc
jne
rolb
leave
hlt
mov
stos
push
dec
jne
jmp
xchg
ja
pusha
pushl
sti
ret
lret
jbe
cmp
mov
push
add
jb
mov
sbb
enter
iret
jo
pop
lcall
xchg
mov
movsb
fxch
paddd
add
outsl
js
out
xchg
dec
aas
or
dec
dec
push
sarl
adc
push
adc
leave
dec
push
mov
xor
es
fldcw
loopne
adc
sti
push
mov
lock
sub
cmp
inc
jo
fs
jb
jg
xchg
cmpsb
dec
dec
loope
je
mov
mov
imul
pop
stos
rcrl
arpl
push
mov
jmp
sub
js
in
xor
movsl
jmp
daa
jle
cmp
cmp
jbe
xchg
pop
mov
cli
jle
mov
clc
lds
xchg
imul
pop
jne
add
inc
jle
inc
ja
add
mov
dec
cmp
adc
dec
pop
call
inc
jmp
inc
lods
and
clc
mov
or
pop
sbbb
mov
xchg
stos
and
test
pop
rcll
loopne
lret
push
rcr
and
adc
cmp
mov
nop
xor
or
mov
sbb
xchg
cmc
xor
pop
stos
lods
push
mov
outsb
adc
fisttps
outsl
fcomps
sub
cld
fbstp
fstpl
cmpsl
pop
sub
pusha
mov
insl
add
and
ljmp
loopne
data16
es
pop
movsb
stos
addr16
inc
mov
lock
xor
add
arpl
xor
pextrw
push
sub
out
adc
jno
stc
rclb
pushf
cmp
push
xor
pop
dec
mov
jae
mulb
cmp
lret
cwtl
ja
jnp
movsl
dec
mov
sti
mov
sbb
std
adc
shll
pop
and
repz
mull
mov
mov
or
gs
outsl
cmp
xor
push
push
movsl
aad
xchg
dec
nop
in
mov
stos
inc
fistps
push
pop
icebp
adc
aam
lock
xchg
mov
add
fdivrl
mov
push
loopne
push
fistpl
or
sub
cmp
dec
sbb
inc
mov
pop
cmp
sbb
and
fdivl
add
add
movsb
fs
sti
mov
loopne
lock
sub
xor
sub
gs
int3
movsl
jb
das
push
in
dec
lods
aaa
ret
js
clc
nop
hlt
pop
pop
mov
add
mov
mov
in
rcrl
xchg
negl
jbe
movsl
rcrb
pop
jns
call
jnp
insl
test
in
in
adc
sbbb
inc
pop
sub
cmpb
push
jmp
xchg
fsubrs
dec
push
lock
pop
fisttps
test
aaa
adc
sbb
setb
fistpl
add
inc
jmp
idiv
je
and
mov
imulb
mov
fwait
xor
push
test
cmpsb
scas
sbb
aam
enter
sahf
movsb
mov
or
mov
mov
arpl
imulb
loop
or
xor
xchg
arpl
fwait
push
fs
imul
dec
in
adc
je
icebp
xchg
mov
jmp
mov
mov
mov
insl
sub
dec
shrb
or
xor
dec
clc
xchg
or
mov
mov
ret
add
popa
rcrb
inc
xchg
jns
jp
pop
addl
sub
dec
add
es
xchg
mov
hlt
les
in
fmul
ret
mov
xchg
into
jnp
mov
pop
vmrun
or
popf
inc
pop
push
gs
mov
dec
mov
lea
stos
inc
negl
and
icebp
and
fcmovnu
les
adc
or
rorb
mov
and
out
pusha
insb
mov
pop
lret
lcall
sbb
mov
xor
push
mov
xor
pop
in
mov
inc
aas
call
ja
push
es
sbb
sub
outsl
pop
mov
das
jnp
or
jbe
lods
add
mov
jge
iret
jb
lret
jp
push
adc
sbb
jge
test
test
adc
aaa
mov
sti
ljmp
jne
cld
sbb
nop
or
mov
push
ljmp
mov
mov
orl
mov
push
push
rorl
mov
mov
push
arpl
pop
mov
imul
insl
push
xor
lods
mov
nop
das
int
adc
bound
dec
ret
sbb
sbb
sbb
fs
cmc
je
shr
pop
lds
adc
loopne
or
insl
xchg
adc
dec
mov
xor
loope
js
push
andl
daa
jge
sub
sub
addr16
sub
mov
das
pop
push
test
outsl
xor
mov
xor
js
fsubrp
je
loop
repz
adc
sti
aas
xor
insl
inc
js
jmp
rcll
mov
add
out
or
mov
scas
xchg
int
sbb
push
jnp
xchg
pop
test
orl
pop
push
or
jbe
lret
and
dec
adc
cld
or
mov
jecxz
push
sti
xor
test
iret
imul
ffree
sub
cltd
in
into
nop
xor
movsl
int
dec
mov
int3
in
int
mov
mov
into
jne
mov
push
push
loope
je
rorb
push
pushf
pop
mov
xchg
mov
xchg
pop
cs
in
push
das
mov
mov
sbb
sub
jl
and
push
and
xor
push
loop
and
aaa
hlt
es
and
into
stos
es
iret
stos
in
xor
scas
sbb
imul
imul
cs
insl
mov
out
xor
xor
inc
scas
fistps
ret
mov
loopne
mov
sarl
jne
jns
mov
jne
jle
inc
push
inc
dec
nop
xchg
inc
or
cmp
adc
jl
jle
lds
mov
orl
je
test
mov
sbb
mov
mov
leave
add
int
cmp
scas
out
adc
cmp
dec
push
adc
xlat
jne
faddl
mov
xchg
ficoms
push
xchg
call
cmp
pop
outsb
mov
xchg
and
fcompl
xor
fcmove
cltd
add
loopne
ret
in
jg
jecxz
jo
out
mov
call
subb
mulb
in
iret
cmp
daa
addb
movsl
fisubrl
mov
sub
add
cmp
mov
inc
aam
cmpsl
je
je
insb
add
cs
dec
xchg
ljmp
jl
mov
mov
pop
notb
negb
mov
aam
rcr
leave
jnp
dec
mov
std
cmp
mov
mov
fimuls
and
adc
dec
addl
adc
or
xchg
xchg
pop
jnp
or
roll
push
sti
mov
pop
jp
dec
add
das
push
xor
push
push
orb
jle
jecxz
jbe
push
repnz
and
adc
shll
out
icebp
ficoml
aam
pop
fcompl
cmpsb
and
push
push
call
push
arpl
negl
adc
inc
fs
out
sahf
mov
xor
ret
add
mull
in
inc
mov
out
int
imul
push
xor
orl
in
jg
mov
sahf
add
mov
sarb
jno
xor
xor
cmp
sub
inc
mov
add
shll
mov
jb
fstpt
mov
pop
jnp
add
in
xchg
add
sarb
adc
nop
pop
add
mov
into
testb
shrb
jnp
shll
or
or
jo
xchg
inc
push
bound
dec
inc
xchg
cmpb
mov
or
clc
adc
test
jmp
test
pop
call
pop
ret
push
sahf
push
out
stos
fcmovu
push
mov
and
inc
insb
pop
and
sbb
mov
insl
mov
fcomp
scas
push
adc
and
xor
mov
pop
outsl
mov
shr
lods
iret
mov
addb
xchg
sub
mov
mov
fdivp
or
in
je
xor
mov
iret
popf
cmpl
or
mov
sti
cltd
sbb
adc
sti
mov
cmp
shll
inc
rolb
addl
sbb
or
sbb
dec
dec
xchg
jo
mov
push
rcr
or
enter
add
or
or
mov
pop
lea
or
loope
jnp
icebp
dec
push
xor
call
push
jbe
xchg
lock
aam
cwtl
jge
fidivrl
les
add
or
jnp
mov
sbbl
je
lahf
adc
frstor
mov
fbld
fdivrp
mov
jmp
mov
lds
movsb
inc
scas
outsl
cmpsb
out
push
loopnew
inc
lock
sub
sub
sub
imul
repz
cli
lods
lods
lret
push
das
insl
cmp
addr16
xchg
imull
jl
push
mov
mov
dec
aad
je
cwtl
xchg
cli
stos
negl
or
jp
dec
mov
dec
fisttpl
aas
jne
inc
sahf
je
dec
mov
add
pop
and
inc
jmp
or
or
jmp
in
pop
adc
dec
push
xchg
xchg
stc
jp
sub
adc
out
out
mov
xchg
scas
mov
dec
insb
stos
xchg
rcr
std
js
xor
iret
iret
or
mov
shll
lods
fstl
subb
es
mov
push
sahf
subl
jp
xchg
push
sbb
movsl
or
in
and
cmpsl
popa
mov
test
ss
adc
push
mov
xchg
out
shll
out
lret
cmp
mov
mov
pop
pop
insb
test
jmp
ret
icebp
test
and
add
add
test
add
jae
mov
jnp
or
mov
fdivrl
inc
dec
loop
mov
out
cs
mov
mov
mov
or
push
xlat
inc
test
xchg
xchg
cwtl
ds
add
xorb
jp
push
adc
leave
cmp
and
jl
imul
int3
xchg
mov
jp
int
divl
xchg
std
enter
lock
orb
xchg
jnp
mov
sub
cmp
sbb
adc
mov
mov
mov
aas
lock
or
addr16
mov
mov
ret
idivb
sahf
xor
xor
imul
sbb
pop
in
out
fwait
outsb
test
in
dec
pop
or
jnp
das
xor
jmp
and
sbb
mov
jmp
insb
mov
lods
jmp
cmp
sub
jge
in
push
incl
stc
jmp
dec
scas
sbb
pop
mov
push
dec
xchg
mov
inc
dec
pop
lock
or
mov
push
dec
xor
or
dec
lret
aam
or
cli
dec
dec
cmp
cmp
hlt
mov
xchg
jnp
bound
cmp
xchg
inc
xchg
aas
aad
xchg
inc
push
push
inc
push
dec
pusha
mov
push
sbb
sbb
sbb
shr
add
cmp
jecxz
loopne
and
loope
gs
mov
xchg
shll
sub
movsb
nop
push
movsl
xchg
stos
test
xchg
cs
outsl
les
xchg
repnz
lcall
ret
out
mov
loopne
adc
int3
out
repz
push
mov
and
loope
in
fisubrl
pop
sbb
mov
stos
jmp
inc
mov
add
push
jl
scas
dec
addb
les
inc
insl
jb
inc
or
scas
mov
test
mov
pop
pop
mov
or
mov
mov
dec
mov
aas
dec
testl
dec
stc
enter
or
or
add
sub
jl
subl
inc
jae
shlb
xchg
inc
adc
inc
xchg
stos
xchg
lret
jne
push
add
je
rcrb
mov
xchg
sti
dec
pop
jbe
and
cmp
or
lods
cmp
arpl
push
and
in
push
xchg
call
shl
test
pop
xor
in
adc
insl
xchg
sub
shrl
iret
mov
cmp
lcall
mov
popf
je
pop
fsts
test
aaa
pusha
mov
and
mov
jns
cmpsb
jp
and
push
cmp
mov
cmpsb
jg
sarb
push
dec
push
cwtl
mov
cmp
lods
and
out
sbb
je
jmp
pop
icebp
xor
jne
jnp
mov
and
xor
loop
jmp
cmp
mov
out
cmp
add
cmp
add
mov
ljmp
inc
in
or
in
or
inc
out
or
inc
scas
or
push
mov
mov
or
aas
jg
inc
lret
adc
jo
outsl
jg
push
jp
sbb
pop
dec
ret
push
adc
into
sbb
mov
dec
dec
jge
lds
jb
sub
push
gs
dec
and
pop
pushf
sub
loope
xchg
mov
rorw
cmpsb
popf
and
pop
jecxz
mov
cmc
out
imul
or
sbb
jmp
jb
shl
stos
xor
std
lds
daa
cmpl
adc
inc
jne
cmpl
stc
testb
repnz
jne
lods
shlb
cmp
push
negl
ds
or
andb
push
ljmp
lret
ds
popa
xchg
mov
fucom
push
popf
imul
push
les
pop
pop
popa
ret
addb
and
mov
xorl
fisubrs
mov
pop
or
or
je
jae
ljmp
push
mov
ss
push
cmp
jl
push
arpl
stc
imul
stos
jmp
pop
cmp
lcall
ja
and
mov
inc
sar
call
mov
sbb
xor
pop
xor
cltd
scas
insl
data16
or
push
add
scas
adc
xor
sub
clc
cmc
cmc
rorl
ja
adc
mov
lods
add
mov
stc
mov
mov
push
call
mov
xchg
sub
jmp
xchg
std
mov
push
pop
jae
dec
ljmp
jl
ret
aas
xchg
ss
add
or
das
pop
add
dec
stos
or
sub
mov
data16
sub
mov
test
cmp
adc
fnstcw
push
xchg
sbb
xchg
repz
sbb
repz
lods
xlat
mov
pop
stc
outsl
data16
push
sbb
jle
mov
mov
rsm
mov
enter
shlb
and
rcll
movb
loop
das
clc
push
jmp
sub
xchg
jmp
xchg
or
jecxz
out
cmp
jg
xchg
movd
xchg
xor
shlb
sti
lea
pop
dec
push
xor
mov
jns
jb
clc
jbe
lods
jb
mov
outsl
ret
aad
mov
cmpsb
adc
test
daa
popf
xchg
jecxz
cmp
push
cmp
out
cmpsb
ja
cmp
xchg
jg
lods
jae
push
inc
cmp
lret
cltd
stos
aas
jno
aas
xchg
mov
lods
pop
mov
jl
aam
jl
xchg
sub
pop
popf
inc
leave
ljmpw
inc
inc
dec
in
int
imul
jbe
adcl
push
mov
pop
sahf
mov
imul
or
or
aaa
negl
xor
pop
stos
mov
sub
sbb
sbb
cmp
pop
addr16
movsl
mov
call
or
fcomip
cmpsl
std
std
inc
dec
sub
outsl
jno
inc
outsb
nop
jbe
mov
rorl
in
fistpll
repz
gs
stos
inc
out
mov
jecxz
mov
pop
cmp
inc
ljmp
outsb
inc
jle
divl
mov
rcll
jne
aas
dec
imul
addr16
and
cmpl
and
hlt
roll
movsl
or
add
fimuls
cmpsb
popa
rorl
or
into
xchg
aam
add
xchg
dec
push
adc
cmp
rcrb
push
sbb
inc
and
dec
adc
aas
mov
xchg
pop
pop
push
dec
inc
sahf
mov
mov
sti
jo
mov
push
in
je
pop
push
mov
adc
mov
lock
and
sub
int3
mov
mov
and
pop
loope
pop
stos
pop
inc
and
inc
in
add
imul
mov
orl
pop
jne
lock
in
inc
je
stos
scas
sbb
decl
jnp
jno
int3
aas
rol
icebp
jo
mov
add
mov
xchg
dec
jbe
mov
mov
jg
pop
xor
icebp
xor
xlat
add
dec
cmp
mov
and
cmc
dec
repnz
pop
jg
in
sbb
ds
aas
scas
pop
shrb
add
orl
xchg
addl
int
add
and
dec
movsl
xchg
ficomps
loop
adc
pop
fs
adc
adc
jo
outsl
in
movsl
xchg
cmp
pop
dec
pop
cmpsb
loope
nop
inc
xchg
jecxz
test
sbbl
adc
into
dec
xlat
pop
out
xchg
cltd
sbb
repnz
into
fidivrs
add
in
leave
and
mov
mov
mov
mov
inc
dec
notb
stos
jmp
fld
or
dec
sub
arpl
xchg
aas
xor
or
dec
fisttps
dec
adc
xorb
xor
rcrb
inc
jbe
xchg
dec
rolb
inc
or
mov
dec
aam
jb
movsb
js
cmp
addr16
dec
dec
pop
fstl
loop
inc
lods
fs
pop
adc
push
lret
mov
neg
adc
pop
pop
or
add
rcrl
stc
jnp
inc
ja
mov
cmp
lea
ds
dec
xlat
ja
adc
xor
push
and
pop
mov
add
jb
or
cld
pop
lret
or
pusha
lods
mov
mov
and
mov
pop
sahf
mov
or
sbb
test
jge
rol
and
loope
pushf
adc
inc
push
cld
in
or
pop
scas
jp
adc
ror
sbb
push
push
pop
mov
pop
scas
mov
push
sub
inc
fdivl
les
pop
adc
inc
pop
push
push
xchg
xor
mov
test
cld
call
test
sub
dec
ja
clc
cmp
filds
dec
cmpsb
js
adc
ret
cld
fcmovu
ficoms
add
add
jge
incb
and
mov
ret
fcompl
cmp
test
lods
enter
adc
sbb
xchg
mov
fmull
cld
mov
aam
and
ja
or
ficoms
into
test
insl
and
xchg
ljmp
push
repz
popa
enter
cltd
xlat
push
push
flds
push
pop
sti
sbb
call
aaa
fucomi
mov
adc
push
or
ret
push
outsb
push
cmpb
jge
sub
add
imul
mov
cmpsb
or
in
ret
or
out
leave
mov
jb
pushf
sub
pop
pop
mov
ds
lock
mov
clc
loopne
repz
shll
jne
jp
dec
mov
or
jge
aas
aaa
fistps
pop
outsl
xlat
cmp
mov
fdivr
push
orb
mov
add
jl
fwait
subb
cmp
and
ret
ret
dec
pop
sahf
dec
leave
ja
sbb
sbb
dec
xchg
pushf
inc
or
xchg
repz
testb
mov
sub
adc
and
sbb
int
push
xor
xlat
sub
inc
aaa
in
dec
scas
out
sbb
sub
fstpt
cwtl
popa
or
or
imulb
mov
ja
inc
xchg
repnz
loop
and
nop
popa
xchg
les
loopne
sub
call
dec
scas
cmp
sbb
lods
pop
loope
imul
movsb
push
out
ret
xor
scas
cs
push
push
xor
or
jns
movsl
mov
mov
cmpsl
hlt
cmpsl
xchg
push
out
jb
imul
ja
mov
jns
clc
jns
xor
push
xor
sub
jle
pop
repz
lahf
pushf
adc
aas
aam
add
ja
inc
inc
push
mov
fadd
andb
daa
and
ret
push
aaa
aas
dec
mov
or
mov
adc
lea
cltd
mov
fdivr
outsl
loopne
xchg
aam
pop
xchg
cmp
repz
sbb
xchg
mov
into
adc
adc
mov
and
sahf
sti
pop
and
movsl
stos
pusha
fildl
insb
pushf
mov
mov
ljmp
icebp
test
data16
xor
xlat
shlb
sub
or
fistl
sub
call
lock
in
test
sub
insb
mov
xor
mov
sub
lods
cmp
xor
jbe
jae
push
insl
xchg
fisttps
mov
sar
inc
sarb
stc
inc
jns
pop
sti
call
insb
sub
jg
push
jno
or
jg
and
mov
inc
push
lods
lds
gs
mov
leave
add
add
or
es
xlat
lea
jne
stos
arpl
pusha
dec
lea
adc
in
add
jge
and
ret
repnz
sub
nop
fstl
adc
les
or
mov
push
loope
fcomps
dec
or
jle
mov
sub
xor
in
and
jmp
and
inc
movsl
imulb
mov
mov
push
out
pushf
es
in
pop
mov
data16
notl
test
mov
lahf
ja
xor
mov
hlt
rolb
hlt
jb
sti
xor
mov
jae
dec
add
mov
js
add
bound
lret
inc
mov
or
stos
int
mov
xchg
mov
mov
orb
sub
adc
cmp
add
outsb
movl
add
mov
push
enter
mov
lret
int
sub
lods
rorb
out
dec
pop
or
iret
adc
mov
inc
mov
rolb
dec
stos
es
xchg
bound
cmp
lahf
popa
test
xchg
adc
push
mov
out
sub
lahf
jno
lcall
fst
jecxz
jg
xchg
and
daa
cmpsb
arpl
sbb
test
xor
and
stos
push
mov
cld
mov
repnz
test
pop
jnp
pusha
sarb
shl
lods
das
call
adcb
shl
loope
mov
cmpb
iret
xor
pop
lea
ret
mov
sub
dec
jge
mov
out
mov
jbe
add
adc
add
sbb
shlb
sbbl
iret
in
inc
rcll
push
mov
dec
dec
stos
fwait
push
sub
push
out
psubq
test
pop
sbb
loope
imul
pop
pop
int
xchg
push
xlat
push
fstl
push
cmp
jmp
shll
push
pop
xchg
lcall
mov
in
pop
pop
pushf
fbld
fisttpl
les
mov
push
mov
mov
push
aam
test
push
js
cmp
lcall
insl
jmp
cmp
fs
insb
mov
pop
cli
mov
inc
xor
out
stos
jbe
sub
mov
sub
push
imull
mov
lods
js
jns
mov
je
or
std
pop
out
cwtl
stos
lods
lods
pusha
icebp
popf
sarl
inc
int3
mov
test
push
hlt
and
enter
testl
iret
sbb
add
and
push
adc
push
frstor
dec
push
mov
das
pop
dec
les
aam
adc
jae
inc
bound
sahf
push
arpl
push
push
xchg
fdivl
jecxz
cmc
arpl
sbb
int
mov
and
call
popa
inc
xorl
fnstcw
arpl
out
in
jns
and
orl
test
rcr
mov
sti
es
das
cmp
sbb
insb
xor
sub
xchg
sti
jo
add
mov
push
and
inc
aas
and
and
out
dec
cmovno
aaa
add
inc
mov
out
jge
dec
add
arpl
mov
inc
mov
les
inc
add
sub
pop
cmpsb
lret
pop
mov
and
leave
mov
mov
ds
or
cmp
loope
cmpsl
popf
xchg
mov
or
adc
xor
push
xor
aam
rcrb
fwait
stos
push
pop
in
icebp
femms
xchg
cmp
sbb
push
popf
sbb
out
xchg
pop
addr16
pop
push
fwait
loopne
fwait
and
sbb
jp
aaa
mull
fisubrs
sahf
push
and
pop
fldcw
cmp
out
push
lods
cld
bound
and
xor
int
sub
daa
scas
sub
inc
cmpsb
ja
stos
addr16
ljmp
and
jne
sub
cmp
inc
push
mov
out
jg
mov
je
jge
aas
pusha
mov
aaa
xor
cmc
or
mov
jge
dec
cmc
int
jne
sub
jns
jnp
push
stc
cmp
add
pop
lock
lahf
icebp
lahf
or
pop
inc
jns
dec
inc
je
xchg
inc
inc
jbe
test
add
adcb
push
mov
lods
xchg
or
lret
and
or
mov
or
out
mov
xor
jb
jae
nop
mov
xchg
cmc
out
xor
xchg
clc
sbb
and
jb
out
outsb
ret
sahf
pop
xchg
fsqrt
push
mov
mov
push
icebp
dec
in
out
pushf
inc
insl
push
push
and
scas
and
xor
clc
mov
and
and
inc
mov
or
out
sbb
or
jp
sub
sub
cs
push
mov
sub
xor
add
roll
js
jbe
mov
clc
push
addl
push
jg
cmp
aas
cld
mov
mov
cmp
pusha
les
add
subl
xor
negb
rol
aam
mov
int3
aad
or
push
ljmp
jle
or
or
lret
sahf
mov
aas
push
les
xchg
mov
mov
aad
call
rcl
xor
orl
clc
hlt
sub
fisubrl
sbb
pop
push
out
pop
pop
and
out
pop
adc
dec
sarl
movsb
mov
es
mov
sub
xchg
push
gs
movsl
xor
movsb
and
sub
jmp
inc
jno
dec
es
jmp
insl
mov
dec
jae
dec
mov
mov
into
lock
pusha
popa
repnz
dec
rorl
push
mov
out
xor
shl
ret
leave
mov
js
jle
jle
lcall
cmp
add
arpl
ds
jle
ds
and
popf
add
popl
jae
dec
and
pop
fimull
mov
aaa
mov
adc
push
hlt
fxch
popf
xchg
in
js
mov
push
and
shl
dec
xchg
adc
push
data16
jg
bound
js
lea
jge
movsl
mov
mul
pop
dec
movsb
jmp
and
add
outsb
insl
pusha
lahf
in
ret
pop
jecxz
jo
sbb
ss
sbb
lahf
mov
repnz
sti
mov
xor
jb
in
adc
ljmp
mov
mov
push
or
sub
mov
in
rol
out
add
add
nop
scas
inc
fidivrl
pop
repnz
lret
into
jnp
icebp
adc
lret
cmp
xor
dec
sti
repz
inc
xchg
std
cmpsl
sbb
sbb
test
ljmp
arpl
outsb
or
sub
xchg
imul
and
and
orb
mov
pop
mov
loopne
xchg
mov
sbb
xorb
push
adcl
push
loope
xchg
in
cwtl
sub
sbb
lcall
sub
push
imul
stos
pushf
sbb
push
lds
inc
enter
fstpt
imul
gs
daa
mov
mov
imul
mov
out
pop
test
add
mov
xor
jae
sbb
jne
stos
stos
mull
lods
xchg
test
sub
das
or
mov
lock
bnd
push
push
cmp
jnp
sub
std
lock
andb
insb
or
jb
dec
into
mov
xchg
int3
inc
imul
fcmovb
sbb
adc
xor
add
cli
les
add
arpl
mov
movsl
push
dec
lret
test
push
push
pop
dec
dec
dec
shrb
shll
push
jo
xchg
jno
ret
ficoml
add
lcall
sub
sub
addr16
stos
daa
cwtl
mov
call
shrl
mov
sbb
cmc
pusha
fisubl
stc
and
mov
mov
mov
sub
push
xchg
push
or
shr
test
scas
outsb
xor
lock
pushl
sub
mov
inc
das
jge
lock
mov
and
jno
adc
cld
pop
inc
mov
outsl
enter
rorl
xchg
jns
jno
inc
cmp
incl
in
add
pop
xlat
jge
adc
add
stos
lahf
clc
inc
lock
inc
jg
add
push
jae
xchg
and
stc
movl
or
cmp
add
popf
in
out
int3
mov
int
xchg
in
aad
or
mov
or
in
sbb
pop
lret
adc
dec
push
inc
mov
sbb
mov
dec
test
mov
jmp
insb
pop
and
inc
andb
mov
cmp
aam
fsubl
and
dec
jnp
stc
jl
push
xor
sub
cli
outsl
push
pop
jmp
fsub
fistl
and
nop
out
inc
cmp
add
test
sub
or
sub
dec
ss
mov
cmp
mov
cmp
xor
inc
sarb
cld
lock
push
nop
mov
divl
mov
lds
lret
cmp
les
and
pavgw
or
mov
mov
push
push
sbb
dec
test
dec
in
shr
enter
test
mov
or
and
cmp
bound
inc
test
loopne
pop
xchg
out
arpl
pop
add
lcall
jb
fucomp
ret
mov
cwtl
lret
cmp
fwait
and
cmp
icebp
popa
dec
add
aaa
sahf
pushf
test
mov
ljmp
call
mov
push
out
dec
testl
mov
lods
hlt
aam
mov
xor
in
fwait
jne
in
jg
xor
leavew
mov
rep
aam
ja
hlt
icebp
adc
jmp
jle
mov
xlat
mov
mov
jp
inc
cmp
pop
lds
iret
std
stos
add
jns
lret
jmp
mov
ret
lahf
stc
inc
add
loope
inc
inc
or
cwtl
insb
mov
mov
xchg
or
push
rcl
mov
or
nop
cmpsl
adc
push
or
or
repz
sub
bound
imul
stos
data16
mov
mov
fstl
adc
out
js
lcall
xlat
leave
negb
and
arpl
sti
mov
pop
sahf
mov
jo
cmpsb
mov
mov
arpl
xchg
repnz
gs
push
mov
inc
clc
push
push
sub
sub
xorb
iret
jge
lods
inc
cs
out
pop
outsl
icebp
mov
add
add
movsl
mov
bound
inc
sbb
jbe
icebp
mov
js
movsl
jnp
mov
add
or
cmp
jl
out
stc
push
jl
push
shll
mov
adc
adc
adc
fildl
aad
sub
xor
imul
mov
ror
or
test
push
leave
or
xchg
loope
in
or
mov
jo
std
mov
iret
xor
es
xchg
xchg
call
pop
pop
rcl
pop
sbb
aaa
mov
jae
mov
sbb
dec
adc
push
pop
dec
xchg
inc
cmpsl
imul
jns
lahf
jno
repnz
data16
mov
mov
add
fs
cmpsl
data16
int3
std
fwait
or
mov
jnp
dec
or
mov
out
sti
clc
cmpsb
sub
out
jg
mov
cmp
cmp
adc
push
nop
scas
jae
and
mov
pop
adc
jae
mov
push
mov
outsb
cmp
push
cwtl
cld
adc
cmp
popf
loopne
mov
xor
sar
ficoms
lcall
lret
cmpsb
iret
pop
cmpsb
add
xchg
xchg
orl
or
fs
adc
dec
lea
xchg
movsl
insb
adc
push
push
sub
dec
cwtl
pop
iret
mov
xchg
lods
cmpsb
push
fwait
xchg
jne
mov
xchg
or
cltd
fsubrp
or
mov
and
sub
test
cwtl
insb
push
jno
stos
jnp
ss
aad
jg
xor
jmp
jo
and
inc
bound
xor
out
imull
insb
je
lret
mov
cltd
mov
xchg
jl
add
dec
inc
jl
das
sub
add
stos
lret
cmp
hlt
push
ds
mov
xor
lds
xchg
ss
xchg
mov
hlt
mov
push
xor
lret
mov
mov
mov
cmpsb
inc
push
nop
mov
dec
imul
aam
in
inc
add
in
inc
dec
out
dec
imul
dec
pop
nop
faddl
xor
mov
xchg
sub
std
adc
pushf
sbb
pop
data16
add
pop
sub
push
pop
rcrl
adc
ficomps
or
in
fcoms
scas
popf
in
add
push
pop
add
and
cmpsl
popa
jno
mov
mov
jle
test
mov
out
mov
mov
addr16
test
dec
xor
jp
std
repz
and
or
loop
clc
dec
repz
jno,pn
mov
xor
xchg
add
clc
lret
int3
push
inc
scas
mov
enter
mov
mov
popf
push
sarb
rclb
andb
sarl
mov
pop
dec
jle
add
in
cmpsl
out
sbb
mov
sbb
rolb
imul
fisttpl
inc
xchg
out
push
fimuls
sbb
sbb
adc
adc
insl
fcomps
lods
pop
lret
xchg
jg
in
xlat
fists
sarb
gs
popa
cs
mov
xor
aam
fst
jge
sahf
ret
cmpsb
aas
mov
push
outsb
mov
out
jbe
cmp
in
scas
cs
cmp
das
jns
jmp
mov
adc
orl
das
jl
push
and
adc
mov
lock
iret
shrl
jle
fdivrs
xor
roll
mov
xorb
inc
ret
mov
inc
insb
int3
out
ret
roll
sti
or
aas
lock
jle
cmpl
inc
imul
stc
push
ret
push
sbb
les
loop
cmpsb
pop
pop
dec
lret
mov
arpl
mov
sub
pop
imul
dec
lahf
push
push
arpl
cld
mov
xchg
and
xor
push
pop
nop
test
mov
aad
xchg
lret
int3
push
push
jo
clc
stc
fldt
pop
sbb
jb
fildll
pop
xor
into
and
mov
aas
repnz
fistpll
pop
loope
loopne
test
or
jle
sub
test
mov
repz
aas
sub
jnp
xor
jo
xchg
or
cmp
mov
idivb
inc
cmp
push
push
repz
xorb
pop
je
pop
jg
cli
fwait
test
cmc
and
mov
mov
adc
push
mov
cwtl
jmp
xchg
mov
lea
incl
rcr
imul
cmp
jge
inc
std
sub
lcall
ret
fisttpl
loope
cmp
mov
dec
mov
or
movsl
and
mov
xchg
fs
push
and
nop
dec
cwtl
and
dec
fwait
arpl
pop
ret
stos
push
cmpsb
pop
mov
mov
pop
push
sbb
dec
aas
clc
js
mov
mov
cmp
pop
cmp
push
jp
call
pop
mov
adc
repnz
fisubrl
push
pop
call
gs
lret
into
test
mov
adc
mov
jge
notb
xor
cmp
cmp
sti
sahf
cmp
repz
ret
clc
clc
adc
pop
aaa
jmp
std
popa
cmp
cli
add
ret
cmp
scas
push
inc
test
inc
insb
popf
pop
insl
dec
cmp
add
rorl
cmp
mov
int3
mov
adc
iret
arpl
iret
in
mov
movsl
leave
int3
dec
lret
xchg
shll
jp
and
or
jp
and
and
in
pop
pop
lock
fdiv
aam
pop
mov
pop
dec
jmp
das
sbbb
fdivr
lds
jecxz
mov
sahf
xchg
cli
sbb
add
mov
cmp
cltd
jae
cli
mov
dec
test
jmp
lahf
stos
mov
sub
or
lods
daa
jmp
xor
mov
cmpsb
test
loope
pushf
cmpsb
stc
jb
repz
lea
loop
movsb
js
mov
das
leave
call
imul
mov
add
mov
sub
cmp
jns
inc
mov
xchg
or
add
ret
mov
lds
mov
and
ljmp
xchg
mov
adc
lahf
pop
mov
push
mov
inc
arpl
rcll
fisttpll
adc
dec
dec
jbe
int
or
dec
scas
push
nop
ret
fwait
push
inc
rclb
push
xchg
push
push
xor
dec
xchg
xlat
and
push
push
test
call
aam
inc
jmp
inc
xchg
arpl
jge
cmp
sub
mov
sbb
sbb
pop
cmpsb
test
and
sub
and
dec
ds
pop
sub
sbb
into
jle
js
leave
jo
call
ss
imul
add
or
in
lods
mov
insl
mov
pushf
xchg
mov
mov
jnp
mov
cli
test
aaa
jnp
dec
or
mov
insl
push
ds
ret
xchg
add
ret
ja
bound
add
aad
inc
cmp
jge
push
add
aas
in
int3
cmp
lea
fsubrp
dec
lret
add
dec
mov
and
ret
pop
mov
dec
or
dec
shlb
lea
dec
push
mov
setae
ljmp
pop
adc
sbb
xchg
push
enter
fsts
push
setle
lcall
pop
lahf
mov
sbb
push
mov
pusha
fnstcw
mov
sbb
xor
hlt
hlt
gs
lods
mov
mov
ret
xor
mov
in
sbb
test
scas
mov
add
push
lahf
test
cmp
inc
fsubs
xor
or
jae
or
mov
outsl
mov
sarl
sarb
sar
bnd
push
push
mov
test
push
leave
adc
cmp
lods
rolb
icebp
vlddqu
test
repnz
xor
mov
dec
dec
dec
out
dec
mov
ja
test
iret
pop
fmuls
scas
or
mov
int3
dec
mov
jae
out
mov
push
push
xchg
lret
push
or
aaa
fdivrs
push
inc
mov
call
add
xchg
scas
adc
pop
pop
jecxz
push
sahf
and
pop
loopne
xlat
loop
pop
dec
mov
jbe
ja
pop
movsb
xchg
xor
shll
jo
add
js
xor
cwtl
mov
mov
mov
movsl
sub
cmp
mov
ss
inc
mov
mov
shrb
int3
aaa
orb
mov
das
ljmp
mov
push
jno
rorb
sbb
jl
jno
adc
adc
movsb
adc
sub
mov
inc
xor
call
add
jge
adc
rclb
or
sbb
les
push
xchg
cmp
loop
cmp
push
xor
mov
movsl
dec
and
mov
pop
mov
test
push
xor
fsubrp
dec
push
jno
pop
mov
movsl
xor
pop
in
je
and
mov
cmpsl
into
mov
lcall
test
fsubrs
sbb
std
lret
xchg
movsl
aaa
pushf
stos
shl
mov
in
and
out
in
xor
stos
adc
stos
sub
out
clc
movsb
sub
daa
data16
bound
xchg
inc
mov
pop
test
lods
mov
add
movsl
and
add
or
jne
xor
jl
pop
jge
xor
push
mov
inc
push
test
push
mov
push
fimull
mov
jbe
cmp
into
cmp
out
mov
insl
adc
pushf
lret
or
ret
pop
icebp
xchg
mov
test
cs
les
xor
into
sub
sbb
dec
fisubs
xchg
xor
jb
mov
adc
dec
cmp
js
stos
inc
dec
jge
push
jne
dec
dec
adc
push
adc
popa
and
push
scas
fcomi
mov
xchg
sbb
jb
cmp
xchg
enter
ret
adc
pushf
pop
jge
lock
mov
push
add
pop
push
cmp
xor
mov
mov
pushfw
xor
in
in
test
mov
scas
jae
sbb
cmpsl
or
das
jns
cmp
sbb
lods
lods
cmp
lods
xor
shl
mov
mov
mov
in
sarl
insb
repz
push
jp
inc
jp
iret
adc
cld
pop
pop
mov
lcall
iret
cli
sbb
fstl
ss
nop
push
mov
das
pop
xchg
popaw
rolb
jg
iret
xor
pop
mov
leave
int3
in
shlb
mov
jne
fstps
sub
dec
movsl
mov
lcall
adc
or
push
adc
add
xchg
pop
push
sbb
je
inc
in
pop
ret
fsubp
sub
shlb
xor
pop
push
sbb
mov
in
push
sbb
daa
nopl
imul
fucomp
fbld
loope
xor
in
imul
and
sub
in
mov
test
push
sub
imul
movsl
jno
das
xorb
fiaddl
faddp
aaa
inc
js
adc
cmp
inc
push
push
rorl
mov
mov
jne
xchg
push
mov
clc
test
mov
xlat
cmp
mov
sub
mov
dec
jge
xchg
push
adc
mov
pop
or
roll
mov
mov
mov
lret
dec
mov
xchg
push
rcl
in
shlb
sub
dec
test
pop
outsb
lcall
aam
lret
xlat
dec
mov
negl
fdivs
jo
mov
xlat
ljmp
mov
testb
mov
pop
fcmovnu
pop
xor
jle
das
cmpsb
jle
test
addr16
push
mov
scas
out
jg
add
or
mov
shrb
mov
and
mov
inc
test
test
mov
pop
jne
dec
je
loop
jb
std
aaa
xlat
and
jns
lock
and
push
xor
xchg
jbe
fs
mov
or
repz
outsl
iret
dec
push
mov
mov
enter
out
fisubl
mov
push
lret
inc
xor
and
jo
xor
mov
pop
gs
pop
mov
ficoms
cmp
fsubrs
inc
adc
cltd
ljmp
xchg
xor
dec
fcomip
data16
push
pop
notl
mov
fs
xor
insl
mov
push
push
xchg
loop
call
push
sbb
sub
test
inc
inc
sbb
mov
cmp
ds
aas
sub
mov
xor
scas
push
sub
xlat
mov
pop
sub
dec
pushf
inc
lea
dec
or
mov
roll
scas
iret
or
xor
icebp
and
jb
jp
inc
stc
inc
adc
dec
stc
push
mov
out
insb
xchg
mov
inc
sbb
rclb
pop
cmp
je
inc
pop
outsl
sbb
xchg
inc
rcrb
rclb
inc
add
inc
cltd
les
cmp
jmp
inc
arpl
xchg
out
add
loopne
mov
fldenv
push
scas
push
and
cld
jmp
dec
sbb
aam
xor
and
and
sbb
pop
stc
cltd
xchg
cmp
push
push
mov
stos
ret
or
lds
pop
jle
sbb
arpl
idivb
mov
inc
inc
jb
push
cmpsl
js
jecxz
test
adc
and
das
out
out
lret
xorl
jb
sbb
hlt
jge,pt
insb
cmp
dec
fnsave
test
bnd
pusha
test
jbe
mov
adc
pusha
mov
ret
ss
push
dec
mov
xchg
loop
adc
mov
dec
mov
add
inc
in
push
inc
lahf
mov
or
or
pop
or
and
sbb
dec
pop
sbb
sbb
sbb
pop
pop
mov
lret
call
xchg
out
fidivrl
aam
dec
pop
call
push
pop
push
lods
sub
cld
das
sbb
push
jo
hlt
out
cs
xor
mov
push
sbb
out
jmp
ret
loopne
out
mov
in
sub
inc
mov
adc
rolb
lock
jge
repnz
js
sub
out
shlb
cld
cmp
jo
test
test
jae
mov
stos
cmc
adcb
sub
les
sub
cmp
sbb
mov
xor
imul
cld
xchg
push
mov
loop,pn
mov
int3
popa
dec
aaa
xor
sub
sarb
sbb
inc
in
jle
insb
push
push
addr16
or
xchg
pop
xchg
test
pop
arpl
sub
lret
nop
rol
fdivrs
add
xor
loopne
out
into
and
rcrb
sub
fbstp
dec
fisubl
pop
sub
sub
xchg
push
adc
adc
popa
loopne
gs
pushf
out
pop
enter
jge
pop
pop
pushf
sbb
ficompl
repz
sbb
mov
mov
inc
xor
push
push
lcall
je
sahf
fildll
mov
repz
scas
mov
cmp
pop
mov
ss
jg
daa
iret
sub
mov
fsubrl
xor
testb
sbb
fs
and
fmul
lds
or
fsubrl
and
or
popa
cmp
stc
int3
dec
cmpsb
xor
dec
mov
or
leave
rorl
movb
jp
and
mov
adc
inc
adc
xchg
ja
or
mov
mov
call
pop
xlat
int3
adc
testl
push
push
push
into
aad
cwtl
add
cltd
sub
jp
dec
jnp
repz
xchg
add
or
cmp
fistpl
pop
cs
sbb
ficompl
popw
pop
pop
nop
ret
ficoml
push
fcoml
rcr
loop
scas
and
and
loope
imul
in
and
sub
ljmp
xor
and
xor
xchg
push
mov
pop
outsb
jle
aaa
pop
mov
xor
mov
mov
stos
dec
mov
leave
mov
jne
scas
xor
mov
shlb
add
clc
arpl
clc
ss
jne
adc
dec
std
cltd
add
pop
xchg
jp
daa
mov
cli
pop
dec
decl
or
xchg
mov
xchg
incl
sbbb
int3
cltd
orl
outsl
or
inc
add
or
pop
inc
xorl
punpcklwd
outsb
testl
js
push
lret
rclb
pop
pop
dec
lods
dec
mov
dec
mov
lahf
sets
push
es
in
xor
gs
shlb
out
adc
mov
sahf
call
sub
outsb
ret
mov
fldenv
xor
pop
pop
lds
push
or
in
jo
sti
shll
arpl
mov
hlt
loop
in
cmpsb
push
mov
mov
push
ja
jg
sub
rcl
cmp
pop
std
ljmp
stos
sub
sub
lods
adc
lods
xor
cmp
ja
mov
rcrb
add
push
xlat
rcll
push
test
cmp
addb
aas
mov
popa
mov
sub
int
test
inc
push
pop
movsb
sbb
aad
cmpsl
xor
mov
std
cmpsb
jb
das
add
mov
cwtl
lods
xchg
fldt
adc
or
or
fidivs
jae
je
rcrb
sbb
xchg
mov
mov
sbb
ljmp
sbb
bound
stc
loop
ficomps
clc
and
pop
pusha
inc
push
movsl
xchg
call
in
lods
xchg
push
adc
and
mov
inc
test
cmp
mov
idivl
gs
sub
lret
ljmp
add
in
fwait
adc
xor
test
shlb
or
imul
addl
dec
je
leave
jae
mov
leave
clc
mov
mov
neg
enter
jo
jl
mov
ret
ja
sti
mov
mov
mov
in
jle
loopne
test
pop
sahf
les
dec
mov
and
inc
xchg
push
cmp
sarl
cmpsb
ror
cmc
mov
push
ror
test
pushf
add
push
cwtl
cltd
sahf
daa
adcl
mov
aam
push
adc
movsb
rdpmc
loopne
xchg
xor
cmpsb
xchg
xor
loopne
or
movsb
pop
lods
cmp
mov
fstl
jb
push
test
out
jnp
mull
push
sti
in
out
stos
es
xchg
insb
insb
dec
movsl
in
ret
xor
out
jle
cs
das
jle
insl
stos
xor
test
icebp
shlb
or
mov
xor
dec
xor
mov
xchg
cmp
mov
dec
jbe
les
adc
cmp
or
add
mov
cmp
or
adcl
mov
add
xchg
loope
add
xor
xlat
sbb
popa
cwtl
xchg
lret
int
xor
pushf
pop
xchg
xchg
scas
push
movsl
adc
push
adc
adc
bound
and
rcr
sti
xchg
jo
sub
arpl
fldenv
out
adc
xchg
loope
xchg
test
movsb
fisubrl
popa
out
pop
fxtract
push
nop
cwtl
rorb
xor
arpl
xchg
scas
mulb
pusha
loope
out
mov
daa
test
and
gs
jns
ja
sub
inc
in
mov
xor
cmp
mov
mov
outsb
sub
xor
inc
outsl
mov
jae
fdivr
idivl
shrl
jne
dec
int3
int3
push
test
inc
cmp
cld
out
jl
cmp
lret
or
dec
stc
rorb
jns
fmull
int3
les
paddb
adc
int
pop
mov
nop
mov
inc
ret
jecxz
push
and
rcr
mov
cwtl
adc
test
or
xchg
imul
mov
or
pop
push
popa
dec
adc
xchg
es
mov
in
sbb
scas
filds
int3
fs
pop
mov
insb
jle
loopne
push
inc
push
inc
pop
outsb
cmp
je
mov
ja
sub
insl
lods
lcall
sahf
das
pop
addr16
pop
mov
mov
xor
mov
jne
and
inc
movsl
bound
fs
iret
daa
icebp
outsl
sbb
inc
mov
mov
mov
pop
jmp
add
repnz
repnz
pop
mov
out
outsl
testb
sarb
stc
arpl
dec
jae
push
outsb
dec
ja
std
inc
xchg
xchg
cmpl
pop
fdivrl
mov
sub
popf
dec
add
fcoms
inc
aaa
fwait
adc
add
add
xchg
ret
fyl2x
xchg
lea
insb
dec
rcll
mov
cmpsb
push
inc
push
dec
and
jmp
pop
pop
dec
ljmp
cltd
nop
sub
int
loopne
push
adc
movsb
xchg
adc
mov
jo
es
push
scas
push
mov
xchg
jbe
fdivs
pop
imul
loop
xchg
ret
and
mov
cs
movsb
in
lahf
lea
insl
sub
movsl
out
mov
and
clc
and
mov
xor
mov
push
mov
lret
stc
scas
or
sub
jp
lods
xor
dec
cmp
out
vphaddubw
inc
cmc
cmp
mov
je
push
mov
jns
aaa
dec
mov
imul
push
ror
popl
jns
mov
inc
add
dec
mov
pop
cmovno
push
mov
inc
adc
and
xchg
xor
xchg
int3
test
mov
xchg
and
ficoml
int
pop
adc
aam
xchg
mov
push
push
jmp
jge
sbb
push
fists
jo
dec
pop
and
repz
fcoml
stc
sbb
mov
cmpsb
cltd
cmpsb
xchg
popf
repnz
mov
push
imul
push
bound
es
outsl
pusha
movsl
lock
shlb
or
jge
sub
stos
cmpsl
and
sub
xor
cmp
push
mov
pop
pop
inc
inc
js
call
adc
jne
scas
icebp
jl
int
jne
andl
inc
mov
ja
cmpsb
jns
mov
lea
aad
mov
not
lds
test
imul
mov
mov
jle
ds
std
mov
adc
les
sub
sbb
and
jno
dec
mov
push
fcmovb
adc
mov
sbb
movsl
pop
pop
or
fdivs
jmp
popf
or
inc
cmpsb
in
and
xlat
pop
pop
repnz
test
fs
pmaxsw
pusha
mov
xor
adc
push
adc
loop
sub
fsubs
ja
lods
fisubl
lods
and
cmp
fiadds
pop
insb
nop
mov
and
lods
out
rolb
das
insl
stos
lods
movsb
inc
push
push
das
dec
shl
sub
ds
cmp
sub
xor
mov
test
jp
into
lods
jge
inc
inc
jo
add
lahf
xor
mov
icebp
mov
cltd
addb
inc
xchg
inc
and
jb
jg
mov
add
push
mov
lcall
mov
inc
inc
pop
sbb
lret
jne
and
or
adc
xor
dec
push
xchg
pop
dec
inc
pop
adc
xchg
xchg
popf
negb
out
adc
sbb
add
loopne
push
fnstcw
xchg
or
lcall
xchg
aam
mov
pop
mov
fsts
hlt
pop
cmp
repz
shlb
pop
scas
push
rcrl
fistpl
xor
movsl
mov
sub
lcall
mov
sub
loop
xchg
fs
and
in
ss
pop
push
push
adc
push
jo
dec
cmp
icebp
arpl
call
dec
in
test
mov
add
mov
or
scas
shlb
add
adcl
push
pop
mov
lret
add
cmp
mov
add
jecxz
es
add
pop
add
sarl
les
mov
ljmp
adc
incl
out
mov
in
add
sti
push
negl
rorl
jb
es
cmp
jecxz
xchg
dec
sbb
test
push
fildll
sbb
shl
je
movsl
fisttps
outsb
test
cwtl
push
call
clc
push
fwait
loop
loopne
and
popf
sbb
movsb
mov
repz
mov
or
and
pop
shlb
ljmp
jae
es
lock
xor
stc
outsl
mov
scas
jmp
add
add
add
inc
shl
leave
jne
xchg
cli
addb
aam
mov
aam
xchg
in
push
mov
ljmp
or
push
add
sbb
jg
xorl
andb
push
push
mov
sbb
cwtl
stos
fdivl
pop
or
pusha
xchg
and
loop
lret
and
or
in
sub
lret
in
insl
and
mov
in
aam
xchg
push
rorb
nop
nop
push
push
or
int3
adcl
xlat
inc
jno
cmp
or
adc
es
scas
and
test
int3
xchg
mov
add
inc
mulb
jecxz
jl
add
bound
arpl
push
jecxz
and
scas
cmp
mov
insl
aaa
jnp
mov
push
aas
scas
test
or
dec
jno
insb
add
mov
sub
rorl
outsl
xchg
xor
adc
hlt
sbb
ss
xlat
cmp
xchg
mov
xchg
mov
mov
or
dec
add
stos
cli
shll
jnp
enter
mov
adc
fisttpl
xchg
add
jno
xor
lret
cmp
inc
cmc
push
cmp
mov
in
pop
int
ja
lods
jbe
xchg
iret
push
imull
adc
push
fsubl
stos
loop
shr
rcr
addr16
push
xchg
push
loopne
out
push
mov
cmpsl
xchg
sbb
push
jb
sub
mov
lcall
pusha
inc
test
cli
std
pop
jae
or
outsl
scas
adc
dec
icebp
jnp,pt
movsb
stc
jmp
scas
je
add
mov
mov
daa
and
imul
dec
mov
outsl
fcomp
out
sub
lret
inc
lods
stc
push
js,pt
pop
jne
mov
cmpb
inc
ds
cmp
or
cmpb
enter
lret
pop
mov
adc
lcall
inc
mov
jge
pop
push
jns
mov
mov
add
sahf
subb
push
mov
mov
pop
cmp
jns
inc
pop
jl
loope
lea
es
cmp
cmp
and
imul
scas
inc
xchg
xchg
xchg
xchg
adc
in
push
push
jae
push
mov
push
push
hlt
test
adc
xlat
jns
and
clc
or
cmp
cld
in
lcall
fwait
mov
je,pn
sahf
fists
loopne
loope
mov
push
loop
in
mov
mov
dec
icebp
in
xchg
mov
aas
out
cmpsb
mov
ss
mov
push
jg
jo
sub
leave
lds
mov
adc
scas
mov
scas
mov
adc
jb
repnz
xchg
sub
mov
call
notb
js
sarb
pop
xchg
sti
lcall
fucomi
mov
sbb
pop
inc
inc
shl
pop
mov
fwait
push
leave
inc
dec
scas
int
jnp
dec
mov
mov
data16
adc
fstps
push
pushf
or
les
cli
movsl
lret
sahf
lret
int3
sub
in
mov
fs
ror
xchg
sbbl
lahf
xchg
fwait
push
pusha
pop
add
stos
pop
pop
insb
sub
inc
mov
int
inc
jg
ljmp
mov
sub
xor
icebp
cmp
cli
shl
inc
int3
add
cmp
sub
imulb
data16
daa
in
repz
cmp
sub
cmpsl
das
sbb
jmp
ljmp
jo
out
mov
ss
xor
adc
adcl
mov
lret
sbb
movl
jle
mov
in
fmulp
mov
push
push
sarl
inc
or
pop
mov
nop
cmp
mov
mov
adc
scas
aas
jecxz
pop
mov
icebp
bound
or
xlat
cmp
mov
or
mov
loopne
insb
mov
push
mov
xor
mov
cmp
in
xchg
sbb
stos
rcrl
lds
xchg
sahf
fildl
lea
xor
clc
icebp
fsubrl
pop
push
sbb
sbb
imul
sub
fistpll
fs
mov
in
subb
sub
mov
xor
es
rorb
outsl
mov
lret
or
insl
sub
test
sarl
mov
das
mov
or
jno
les
ss
jl
out
pop
test
ss
mov
out
rol
ljmp
repnz
push
pop
rorl
jl
inc
and
fcom
scas
rcll
inc
les
add
into
and
scas
add
sbb
push
dec
pop
orl
inc
pop
mov
movsb
loopne
lds
xlat
daa
adc
or
pop
inc
bound
push
and
fsts
aam
or
mov
test
pop
inc
jmp
push
cmpsl
ljmp
mov
in
pop
outsl
xor
loopne
mov
pop
pop
andb
hlt
dec
inc
int
push
and
lds
stc
gs
movsl
cmpsb
push
pop
mov
sub
outsl
lret
cmp
mov
je
mov
leave
in
scas
xor
repnz
inc
mov
sub
and
sbb
dec
enter
jae
mov
mov
sahf
int3
xor
int3
rorb
add
push
jns
xchg
les
shlb
sbb
pop
add
inc
les
inc
add
arpl
adc
out
push
cbtw
lea
mov
push
dec
sbb
dec
add
sahf
lahf
lods
fcoml
or
xor
push
push
mov
sbb
imul
fsubrl
xchg
xor
mov
hlt
into
jle
cmpsb
aas
enter
out
jmp
sub
cltd
jmp
cli
js
jecxz
out
cltd
scas
scas
jo
mov
mov
pop
inc
pop
and
bound
xor
movsb
xor
inc
xchg
mov
das
mov
aam
repz
stos
dec
in
cmpsb
mov
jne
jno
sbb
mov
cmpl
xor
fincstp
push
rol
aad
pop
add
fadds
jp
and
xor
stc
mov
dec
jne
mov
mov
fwait
mov
dec
rclb
fimull
addl
inc
mov
jbe
and
adc
test
les
testb
andb
push
bound
and
adc
in
into
dec
adc
adc
dec
aad
loop
mov
pop
pushf
test
mov
nop
mov
push
mov
aad
pop
aam
mov
adc
cltd
push
pop
rcrl
pop
rcrb
lcall
pop
negb
jae
mov
push
fwait
pop
inc
out
out
cmpsl
xchg
in
jge
out
xlat
xor
sub
cmp
stos
lahf
mov
sti
mov
ljmp
hlt
hlt
mov
or
lret
mov
mov
hlt
cmc
rol
pop
in
movsb
push
leave
notl
cli
cmp
ds
push
xchg
testl
sbb
rcrl
and
in
dec
inc
mov
jl
push
mov
mov
lds
in
xchg
sub
pop
inc
add
es
into
xchg
nop
flds
lret
sub
or
cmpsl
lret
adc
movsl
maskmovq
testl
push
gs
andl
sub
aam
movsb
fnstcw
push
pop
xor
mov
sub
xchg
lds
jae
sahf
jge
mov
push
pop
sbb
and
mov
sub
cmp
and
insb
jbe
in
shrl
push
jns
push
fsubs
dec
ljmp
jnp
imul
lds
cs
sub
mov
test
scas
cmp
js
repnz
inc
mov
lcall
dec
cs
aam
int
inc
mov
push
into
or
sub
roll
xorl
inc
jns
jle
les
pop
dec
jp
adc
fisubl
fistpl
xchg
filds
push
sub
pop
psubsw
scas
mov
gs
adc
scas
or
dec
mov
into
sbb
loopne
aas
xor
mov
ret
sbb
sbb
out
inc
scas
push
pop
push
cltd
insl
repnz
pop
push
push
ds
sbb
pop
mov
jle
hlt
mov
aaa
cmp
nop
push
cmp
add
daa
out
mov
jns
push
dec
pop
mov
cmpsb
inc
imul
daa
sub
cmp
cmp
or
fcompl
into
pop
mov
sbb
clc
or
cmp
roll
shlb
sti
push
inc
xchg
movsl
cmp
xchg
dec
pop
in
out
mov
sti
jg
mov
ret
test
push
scas
jl
lahf
stos
roll
pop
mov
push
push
mov
push
mov
mov
push
mov
sbb
lret
xor
imul
pop
pop
pop
stos
ret
xor
fcompl
mov
addr16
mov
cmp
push
sub
push
test
adc
adc
arpl
sbb
pop
lahf
lock
in
fdivrs
lcall
fidivl
dec
push
jo
das
push
frstor
mov
pop
rcll
andb
mov
jecxz
out
insl
mov
arpl
xchg
xor
jl
jo
repz
adc
cmp
pop
repnz
outsb
inc
sub
push
das
jb
xchg
jp
mov
xlat
outsl
or
ljmp
divl
dec
js
orb
mov
test
sbb
xchg
mov
inc
pop
cmp
mov
dec
jg
inc
fstp
out
pop
xor
mov
cmp
or
adc
push
inc
add
xchg
fwait
in
adc
dec
lea
or
sbb
adc
jg
xchg
adc
fmull
clc
fs
xchg
cmpsl
data16
pop
outsl
fnstsw
push
adc
in
push
pop
gs
jno
pop
and
loope
mov
cmp
imul
popf
das
movsb
mov
movsb
push
pop
pop
sub
xor
jae
xor
jno
dec
dec
ret
xor
jecxz
in
divl
pop
xchg
movsb
cli
pop
out
or
inc
mov
dec
add
cmp
xor
mov
fs
fs
mov
sub
jge
inc
xor
mov
adc
xor
ja
and
es
push
jmp
mov
stc
adcb
pop
adc
pop
mov
cmp
rcll
push
push
sar
xchg
mov
xchg
push
fadds
popa
xor
add
lcall
mov
dec
mov
shll
jecxz
or
stos
adc
cmpsl
dec
sti
sub
cwtl
outsl
repz
outsl
push
ss
fisubrs
add
ret
adc
idiv
sbb
and
loopne
imul
cld
or
sbb
lods
cwtl
add
push
in
ret
loop
or
jp
movsb
inc
scas
cmp
jecxz
xchg
mov
jl
xor
push
popa
jl
lods
mov
aas
test
clc
jl
xor
ds
add
mov
dec
sqrtps
xchg
popf
enter
pop
adc
adc
mov
fiadds
in
psadbw
cltd
sti
test
lcall
push
cli
xor
cwtl
mov
inc
mov
xchg
add
popf
enter
xchg
inc
sbb
inc
inc
lahf
roll
pop
and
xchg
or
adc
or
enter
xchg
push
jmp
push
xchg
adc
loopne
sti
sub
test
mov
mov
sbb
insl
xlat
cld
pop
jb
cmp
cmpsb
pop
inc
lea
clc
xchg
jl
rcrl
in
lcall
add
daa
add
aas
gs
sub
and
mov
sub
mov
daa
and
popa
fwait
and
adc
outsl
inc
es
jb
test
mov
das
xchg
jne
sub
adc
xor
clc
mov
mov
iret
mov
cmp
sbb
push
and
jge
js
mov
sub
enter
cmp
add
add
sbb
adc
sbb
pushf
cmc
push
cwtl
loopne
pop
mov
rcrl
mov
mov
lcall
cmp
shr
inc
dec
out
mov
out
xor
sub
out
xchg
add
jl
stos
fwait
mov
pandn
out
out
adc
xor
lcall
xlat
lods
jnp
mov
sbb
aaa
loope
pop
xor
mov
and
adc
gs
cmc
out
cmp
stos
xor
mov
sahf
sarl
inc
and
mov
sbb
les
rorb
repz
sub
and
mov
ds
pushl
dec
popa
jbe
sub
add
ds
cmp
dec
roll
xchg
push
mov
in
xchg
jge
xchg
out
mov
mov
lods
rolb
call
sbb
pop
lods
lret
xor
inc
js
jg
lret
sarb
inc
jg
stc
inc
orl
sahf
pusha
aam
rolb
pop
sbb
fisubl
ss
int3
rclb
push
push
adc
pop
cwtl
sti
adcl
push
or
xchg
pop
mov
flds
xor
testb
pop
mov
adc
inc
cmp
push
jno
test
cld
pushf
hlt
sbb
mov
and
pop
cld
pusha
sbb
mov
mov
inc
in
jb
and
mov
pusha
js
cwtl
lods
pop
jmp
or
jns
movsl
dec
cmpsl
out
dec
mov
icebp
add
mov
and
mov
into
pop
mov
incl
mov
sbb
dec
test
stc
nop
inc
hlt
out
push
add
push
jmp
fldl
or
jnp
pushf
mov
les
iret
js
jl
test
ja
loopne
mov
aas
mov
fisubrl
lods
and
push
push
adcb
or
cld
pop
and
out
cmp
adcb
lea
inc
push
out
cmp
or
mov
sbb
push
add
popf
jecxz
rcrl
pop
push
sbb
jno
cli
into
xlat
gs
xor
dec
dec
cwtl
mov
sub
mov
call
cmp
pop
and
shl
mov
in
repz
jmp
stos
lods
lret
in
fs
mov
pop
mulb
xchg
ljmp
adc
scas
repz
stos
imul
into
inc
lods
add
pop
sub
or
xor
in
out
xorl
cmc
loope
test
cmp
outsb
test
cwtl
and
or
or
sub
ljmp
leave
mov
rol
lret
mov
sbb
push
test
push
cld
fisubrl
pop
test
pop
sbb
or
out
test
adc
inc
adc
lods
add
or
mov
xlat
daa
mov
cltd
dec
pop
loop
and
jae
xchg
imul
pop
mov
mov
pop
push
out
push
imul
pusha
dec
lahf
pusha
mov
and
jecxz
out
shl
mov
sub
push
add
pop
pop
pop
data16
mov
ret
pop
in
out
mov
in
in
mov
daa
ret
mov
and
mov
shrl
icebp
and
jecxz
imul
test
inc
jmp
stc
lock
dec
jnp
jl
mov
test
jl
push
mov
imul
aas
sar
addr16
jnp
roll
add
shl
mov
sub
push
test
jmp
mov
sbb
jns
add
jno
or
into
adc
dec
or
clc
lret
xchg
adc
lea
mov
push
movsb
enter
ret
dec
pop
push
pushf
pop
adc
xchg
xchg
in
adc
add
loopne
pop
ret
xlat
bound
xor
nop
adc
fcmovb
mov
pop
jg
pop
cmp
movsl
lds
mov
lahf
addr16
loopne
jnp
mov
push
push
and
pop
imul
in
ljmp
hlt
xor
pop
cmpsb
or
sub
mov
and
test
into
gs
inc
data16
pop
jecxz
fisttps
xlat
test
xchg
inc
xor
cmp
icebp
dec
into
mov
aas
jb
enter
fs
and
fnstsw
cmp
orb
inc
cltd
call
cmp
hlt
add
fxch
inc
arpl
jno
or
js
fiadds
cld
lret
into
add
nop
call
mov
fxch
bound
pop
dec
xchg
arpl
int3
sbb
or
xchg
mov
xchg
out
fimull
pop
gs
dec
mov
nop
aam
fsubs
add
cs
cwtl
sub
in
push
pop
out
adc
rol
jae
mov
daa
push
mov
imul
popf
mov
pop
jne
mov
popf
and
push
test
mov
outsl
loope
jns
cld
dec
jmp
sub
or
jecxz
test
in
fdivrl
in
adc
out
dec
sti
out
mov
add
xchg
cmp
push
subl
cmp
outsl
inc
jl
jo
xor
mov
stc
cmp
pop
cmp
mov
cmp
inc
nop
inc
aaa
fidivrl
lcall
mov
call
adc
rcll
loope
add
add
mov
icebp
pop
addl
test
mov
iret
arpl
out
sbb
sub
jmp
sarb
ret
loop
iret
mov
fisttpll
fbld
adc
mov
rcll
pop
popf
pop
sbb
cmpsl
fsubl
fmull
push
fstpl
pushf
push
imul
fists
pop
dec
cmpsl
call
popa
bound
inc
repnz
or
pop
xor
jbe
jp
call
mov
inc
and
jnp
cmp
jbe
inc
jnp
cmp
aas
ja
das
dec
jle
cmp
inc
subb
lret
dec
mov
sbb
dec
cmp
out
mov
inc
out
mov
out
sti
cli
fstpt
or
xchg
jno
mov
cmc
ds
xor
rolb
pushf
mov
pushf
clc
das
inc
inc
outsb
xchg
addr16
scas
xlat
es
mov
ret
inc
mov
mov
lret
mov
nop
jne
iret
nop
inc
push
or
popa
xchg
adc
inc
addr16
inc
pusha
push
mov
bswap
adc
or
sti
ds
pop
push
test
lea
or
mov
jmp
xchg
xchg
cmp
fcoml
add
adcb
xchg
pusha
add
adc
cli
mov
sub
inc
and
push
mov
icebp
movsl
and
pop
in
mov
mov
movsl
sti
jb
mov
push
ss
cmc
imul
test
ss
adc
rol
and
dec
add
fiaddl
fdivrl
inc
mov
out
popa
mov
and
das
or
mov
test
jno
sti
inc
add
push
inc
sarb
dec
adc
xchg
xchg
adc
inc
or
test
shrl
rolb
test
ret
mov
nop
mov
xchg
dec
les
fists
dec
push
fwait
mov
dec
mov
enter
std
lea
pop
dec
filds
dec
push
ljmp
mov
out
pusha
mov
push
ds
mov
xchg
push
popa
ljmp
test
mov
sbb
mov
aam
int
fsubrp
cmpb
and
or
bound
mov
lret
mov
js
and
sub
loopne
test
cmp
mov
fists
mov
cmpsb
das
and
push
stos
fidivrl
xor
xor
inc
xor
nop
movsl
lods
push
mov
inc
mov
fbld
cmp
mov
inc
jno
adc
xor
xor
mov
xor
add
mov
int
mov
test
subl
nop
or
xchg
enter
sbbb
fimuls
adc
push
push
pop
add
test
mov
inc
mov
jo
dec
adc
shll
lea
out
or
loopne
xchg
iret
xor
sbb
loopne
bound
pop
mov
popa
pop
xor
sbb
add
out
xor
in
lcall
arpl
push
sbb
cld
and
dec
pop
movsl
inc
scas
push
ret
fistps
imul
sub
cmp
inc
and
es
insl
and
xor
dec
cld
or
and
xchg
subl
mov
mov
jns
das
stc
aas
pop
jmp
and
cmpsl
inc
jae
xor
lods
dec
repz
mov
mov
xor
inc
divb
cmp
js
mov
push
mov
sbb
pop
jg
cmp
fstps
inc
nop
adc
or
rolb
xor
into
loopne
sub
rcr
sbb
rcll
adc
adc
lods
dec
xchg
popf
aad
std
lret
dec
lods
insb
ror
jmp
mov
shlb
mov
adc
cwtd
mov
add
vandpd
ja
push
sub
in
cli
sbb
aam
jb
cltd
fistpl
int3
sbb
mov
scas
push
cmp
inc
push
inc
jb
fisubrl
into
loopne
and
and
or
push
hlt
and
sub
test
sub
pusha
mov
shrb
scas
mov
xor
add
adc
cwtl
or
mov
hlt
roll
xchg
gs
push
and
xchg
or
mov
xchg
add
js
adc
inc
out
imul
popf
lea
call
daa
outsl
xchg
es
mov
int3
mull
push
mov
aaa
dec
insb
arpl
xchg
pop
pop
pop
xchg
or
inc
movsb
es
stc
mov
pop
push
push
cmpsl
sbb
test
xchg
in
pop
mov
pop
fdivrs
push
jmp
fcmovb
ds
pop
pop
imul
out
inc
xor
pop
loop
and
mov
cld
xchg
mov
xlat
pop
fsub
js
jbe
fstps
lahf
mov
icebp
mov
punpckhbw
insb
out
push
sub
mov
jl
mov
test
adc
or
lret
hlt
insb
shlb
ss
or
int3
jecxz
nop
stc
sbb
mov
push
pop
sbb
lret
jno
push
sarb
push
divl
mov
xchg
pop
pop
loopne
fdivrl
cltd
fidivrs
inc
sti
xchg
pop
pop
loopne
jg
fbld
mov
sbb
xor
movaps
pop
ss
inc
ret
ss
and
jne
cmp
xchg
mov
leave
adc
test
shll
xchg
sub
into
jno
push
test
adc
sbb
es
adc
or
cmpsl
call
dec
mov
ret
sbb
push
pop
fldenv
add
ja
and
mov
cli
mov
data16
sub
stos
lods
jmp
idivl
jmp
outsl
scas
cmpsb
add
ljmp
ss
jge
sbb
xor
lods
test
cli
sub
js
cmp
bound
xor
sti
pop
mov
lret
in
mov
jg
stc
sbb
add
fsubr
inc
aaa
adc
js
imul
push
ljmp
popa
cmp
adc
xchg
test
mov
fnstsw
or
lds
adc
adc
cmpsl
inc
jo
inc
data16
filds
pop
push
push
or
iret
or
aad
sbb
stc
sbb
xchg
dec
cltd
or
sbb
sub
fcompl
and
cmpsb
popf
xor
and
and
sbb
xchg
bound
mov
loope
lcall
movsb
loope
hlt
loopne
mov
cs
std
jp
xor
adc
cmp
push
in
sub
inc
cmpsb
sub
xor
int3
xorl
inc
add
xor
jno
jle
test
jbe
mov
mov
push
inc
stos
jne
xor
mov
sti
pop
sti
push
or
pop
or
imul
mov
shll
pushf
cmp
inc
adc
les
jnp
enter
dec
pop
dec
cli
outsb
jo
adc
rcrl
jl
fwait
iret
call
cmpsb
xchg
push
cld
mov
ficompl
pop
mov
xchg
lea
mov
xchg
out
xchg
in
inc
mov
dec
mov
rolb
adc
cmpsl
push
stos
push
jmp
arpl
mov
mov
jge
imul
daa
sub
push
sub
add
sbb
out
mov
sbb
movsb
pop
dec
outsb
adc
and
pop
nop
xor
xor
sub
mov
clc
and
and
cli
cmpsb
jmp
push
dec
and
or
xchg
sub
cs
sbb
mov
lock
mov
push
ss
decb
mov
cmp
stc
jbe
neg
addr16
mov
subb
mov
test
add
jg
rolb
loop
rorl
into
fs
inc
movsb
pop
add
and
mov
test
mov
jle
jb
loope
jle
loop
cmp
and
dec
mov
insl
push
movhps
dec
pop
cmp
pushf
lahf
xor
xchg
sahf
xor
popf
fdivp
aam
es
jle
adc
push
mov
aam
jnp
ljmp
pushf
movsb
jno
insl
jecxz
fsubrp
arpl
pop
out
insl
je
cmpsl
lods
enter
push
mov
xchg
loopne
inc
in
mov
ss
outsl
cltd
inc
dec
movsl
cld
inc
in
mov
sub
adc
je
incb
rorb
lret
and
ja,pt
das
xchg
aad
add
sahf
dec
mov
std
inc
mov
mov
sbb
clc
sbb
cmp
int
fwait
mov
or
mov
xchg
cmp
add
adc
inc
dec
inc
mov
in
or
sbb
jg
leave
iret
ss
pop
mov
inc
xchg
xchg
loop
shr
xor
lret
xchg
xchg
pop
adc
lcall
sub
mov
aam
repnz
loopne
cwtl
mov
es
adc
ds
cmp
and
adc
test
aad
fldl
sbb
xor
pushf
je
and
jp
mov
call
shll
outsb
insb
jmp
sub
cmp
xor
inc
scas
dec
add
std
sub
xchg
lcall
and
fiadds
nop
insb
xor
cmp
ss
ret
imul
cmp
shr
out
ds
icebp
push
testl
scas
aam
sti
cmpb
test
aas
mov
or
fldcw
shll
pop
cmpsl
mov
mov
adc
testb
or
inc
nop
out
orl
out
sbb
mov
dec
xlat
lea
lea
mov
dec
xor
add
test
js
adc
iret
xchg
adc
jl
in
mov
lds
loope
fidivrs
stos
pusha
sbbl
outsb
sbb
les
pop
mov
fcmovb
call
adc
daa
and
jp
mov
mov
jnp
add
dec
outsl
sbb
scas
fcoml
stos
pop
test
adc
outsl
push
and
mov
stos
jne
or
repnz
cmpsl
repz
shll
add
negb
jle
jne
xor
push
inc
pop
mov
pop
mov
inc
insl
orb
cmp
cmp
shlb
lahf
mov
mov
shr
lahf
xor
aas
js,pn
pop
mov
and
sbb
pop
mov
push
outsl
or
cmpb
mov
notl
pop
push
adc
jae
popa
lea
inc
inc
test
setb
and
xchg
popf
mov
lcall
notb
into
mov
adc
pop
jecxz
sbb
lcall
or
cli
fisubrl
arpl
jns
faddl
jo
mov
or
in
pop
fistpll
inc
or
pop
adc
dec
cmp
push
jmp
js
addb
dec
sti
xor
mov
sub
aas
arpl
jp
xor
lods
mov
mov
pop
sub
and
jns
mov
daa
leave
cs
push
test
mov
mov
push
cwtl
dec
ret
xor
aam
daa
inc
cmp
cmp
insl
jp
jg
mov
or
dec
and
cmp
mov
jne
push
add
movb
and
das
lret
or
hlt
inc
mov
nop
push
jns
pop
or
das
xor
fimull
cmp
pop
sbb
mov
daa
mov
adc
xchg
or
mov
sbb
push
inc
cwtl
and
mov
sub
sahf
jmp
add
stos
loop
in
sbb
jnp
jne
movsb
and
imul
test
mov
in
sub
sub
sub
insb
pop
mov
jecxz
insl
xlat
icebp
cmp
addr16
jno
sbb
mov
ja
add
push
out
cmc
fwait
andl
inc
or
mov
jecxz
or
xchg
bound
cmp
adc
push
mov
mov
lock
inc
pop
cmpl
cld
mov
adc
mov
gs
xchg
push
pop
popa
dec
shrb
push
lret
push
xorb
inc
and
shl
mov
mul
enter
pop
or
loope
xchg
call
int3
xchg
lret
test
mov
shrl
sub
fadds
cmp
negl
cmp
jmp
in
and
out
mov
movsl
enter
fidivl
sti
cmp
cmp
sub
movsl
insb
sahf
cs
outsb
mov
lret
repz
in
adc
popf
pop
and
and
jg
mov
out
call
cmp
test
mov
hlt
inc
xchg
repz
mul
push
pop
jae
cmp
mov
repz
std
test
hlt
adc
mov
test
nop
inc
or
mov
sarb
aam
sbb
add
mov
stos
mov
xchg
sar
outsb
rcll
jg
in
mov
add
add
xchg
add
xchg
xchg
add
sbb
xchg
pop
lods
cltd
cwtl
or
pop
lcall
arpl
imul
mov
xlat
inc
inc
shll
test
insb
call
js
test
scas
adc
inc
aad
adc
sub
inc
jmp
popf
popf
push
jmp
cmp
pop
add
add
ds
pop
call
jge
push
cs
xchg
gs
mov
daa
cmp
test
sbb
test
sub
stos
pop
or
mov
das
icebp
xor
lock
aam
mov
xchg
aad
jb
inc
pop
jae
fnstenv
inc
shlb
jbe
push
add
adc
cmpsl
cmp
sbb
popa
test
push
xor
mov
test
xchg
movsl
arpl
sub
repz
push
jmp
add
mov
mov
xor
sub
jg
cmp
xchg
lea
inc
jo
xor
pop
jb
pop
in
nop
jmp
xor
pop
bound
pop
pop
leave
sbb
sbb
fldcw
fdiv
cs
insb
sbb
outsl
fcmovu
jmp
lahf
je
push
xor
or
fwait
clc
addr16
in
mov
sub
shrl
in
add
mov
imul
leave
test
out
sbb
mov
lea
fdiv
push
push
mov
cltd
insl
xor
lea
xor
xor
push
or
xchg
pop
dec
push
push
mov
pop
dec
cmp
sbb
add
cli
mov
inc
dec
lods
cld
fidivl
sbb
mov
push
rcll
jb
data16
cmpsb
xchg
int3
adc
adc
cmc
rcll
and
sub
adc
cmpsl
or
js
lahf
adc
xchg
xor
jb
scas
xor
jo
fisubrl
sbb
sub
bound
push
arpl
sahf
out
inc
pop
add
stos
subl
imul
xor
pop
outsb
ret
fdivl
and
pop
std
xchg
cmpsl
movsl
mov
daa
push
pop
bound
sub
push
xor
mov
xor
mov
out
cmc
jecxz
stos
mull
daa
out
cmp
aas
mov
jne
cmp
xchg
dec
shrl
dec
lock
out
jb
mov
or
loopne
mov
insl
repz
icebp
movl
push
mov
or
mov
inc
insl
xchg
adc
mov
icebp
xchg
add
les
std
xlat
mov
pop
out
inc
xor
jbe
ror
dec
xor
gs
lret
mov
inc
insl
dec
insb
nop
test
lds
mov
sbb
rorb
mov
xchg
loop
aad
addr16
rol
xor
or
sarl
dec
out
out
and
lahf
nop
push
push
push
xchg
jp
mov
push
add
push
sarl
pop
inc
test
add
lcall
cmp
movsb
in
cmpb
push
lahf
es
pop
sahf
call
shl
fwait
sbb
sbb
sub
pop
outsb
stos
bound
jmp
mov
ret
enter
push
dec
push
jne
mov
push
push
enter
adc
dec
lock
xlat
mov
cli
jmp
cld
push
sub
xchg
cwtl
jbe
mov
lahf
sbb
lea
pop
jns
push
hlt
ret
aas
test
adc
roll
mov
cmp
orb
pusha
adcb
lahf
inc
cmpsl
in
andb
push
mov
inc
test
push
sub
add
paddb
fs
or
test
push
cmp
into
adcl
insl
stos
adc
sbb
popf
mov
dec
add
jmp
inc
xorl
or
fsubp
out
add
pusha
lahf
mov
mov
mov
arpl
insb
mov
mov
push
cmpb
cmc
or
fsubs
xor
fs
add
ds
cmp
pop
out
je
outsb
das
xchg
and
das
jo
xchg
mov
xchg
jb
add
inc
cmp
or
fwait
fdivrs
cli
push
lahf
xchg
mov
cmp
pusha
lret
cmp
or
cmp
inc
mov
ds
lahf
xor
enter
sbb
pop
xchg
push
mov
sub
cmpsb
lea
enter
xlat
rorb
iret
sub
pusha
aam
insl
int3
mov
cmp
mov
push
adc
mov
mov
stos
loop
fsts
sbb
or
dec
mov
xchg
jmp
push
or
stos
loope
out
repnz
push
and
ret
iret
arpl
insb
jp
scas
xor
bound
jecxz
xchg
shl
push
add
daa
xor
jnp
or
call
sbb
in
xor
sub
mov
push
das
adc
hlt
std
ret
xor
xchg
add
fstpt
ret
xor
or
jle
nop
sub
fidivrl
lret
jp
mov
cld
cmp
cmp
sbb
mov
mov
inc
xchg
mov
cmc
out
or
or
xchg
int
cmp
inc
pop
subb
outsb
xchg
xchg
dec
stos
push
jmp
push
popf
jg
data16
imul
ds
xchg
movsl
scas
mov
aad
shlb
repz
neg
mov
or
cmp
xlat
data16
and
push
test
inc
xor
mov
imul
and
mov
sub
jo
cmpsb
jecxz
jns
gs
stos
and
or
hlt
arpl
movsb
addr16
inc
out
add
orl
jmp
stos
dec
mov
icebp
jp
and
xor
popa
add
mov
sbb
mov
push
gs
sbbl
daa
cmc
cld
add
xchg
mov
or
cmp
aaa
or
lret
sub
add
jb
adc
je
push
mov
xchg
add
add
mov
jl
push
sbb
fldl
xchg
lds
sub
lea
pop
cld
cwtl
leave
popa
dec
mov
int
or
fcompl
test
addr16
and
push
mov
shrb
and
xchg
push
xchg
mov
push
es
sbb
mov
imul
pop
repz
mov
outsl
mov
cmp
movsl
cmpb
dec
pusha
clc
push
loope
test
adc
and
add
jecxz
in
stos
imul
xchg
mov
sub
xor
daa
stos
pop
dec
cmc
fcmovne
ja
imul
ret
cltd
sar
in
xchg
decb
sub
ficomps
dec
mov
dec
xor
lock
adc
cmp
and
push
mov
cmp
inc
dec
sti
mov
add
fnsave
mov
lock
push
fwait
jnp
add
mov
lds
mov
mov
mov
aad
mov
add
xor
fxch
out
mov
push
adc
xchg
not
jecxz
or
pop
pop
or
pop
or
adc
sbb
and
popf
andb
filds
jae
cmp
push
pop
cmpsb
push
cmpsb
in
and
jge
pop
insb
decl
stos
loop
filds
or
and
mov
or
test
jns
push
sub
or
fidivrl
inc
stos
insl
stc
imull
sbb
cs
jp
pop
cs
inc
je
int3
in
aas
or
mov
push
jno
lret
fdiv
xor
mov
fnstsw
sbb
inc
mov
xor
pushf
or
cltd
mov
mov
sbbb
mov
jns
cld
mov
jl
aas
xchg
push
xchg
dec
inc
adc
bound
aam
ficomps
sbb
mov
sbb
test
jg
adc
ja
test
jge
push
mov
outsl
addr16
cmp
cltd
repnz
adc
out
push
sub
cwtl
scas
sub
jne
xlat
jo
push
ss
push
push
pushaw
pop
lahf
stos
mov
mov
pop
jecxz
data16
pop
pop
daa
mulb
sub
jns
sub
sub
lea
and
or
in
jmp
jle
xor
les
sub
jge
shl
rolb
ja
xor
cmpsb
xor
add
xor
mov
mov
aam
sbb
push
jae
sub
je
mov
mov
mov
or
jge
dec
std
ffreep
pusha
mov
scas
jbe
popf
ja
sbb
mov
cmp
dec
mov
sub
sbb
inc
cmpl
icebp
aas
mov
mov
push
insl
leave
enter
and
lea
and
insl
aad
data16
mov
les
adc
lcall
fwait
mov
sbb
ret
push
cltd
add
aam
test
mov
xor
mov
cli
out
pop
mov
push
push
push
cmp
add
std
icebp
in
fs
lea
mov
jge
lock
sbb
fidivs
dec
cmpb
pop
sarl
fs
adc
push
push
mov
aas
adc
sbb
cmp
dec
aas
mov
xor
sbb
mov
mull
fadds
jge
xchg
insb
push
fs
cmpl
stos
pop
dec
leave
jg
outsb
mov
inc
mov
shl
enter
jmp
enter
jnp
xchg
push
dec
jl
rclb
cmp
or
loopne
adc
xlat
xchg
cwtl
dec
mov
aad
adc
adc
sbb
push
pop
mov
pop
inc
pop
fbstp
mov
xor
daa
bound
out
and
cmpsb
jae
jg
sahf
sbb
sahf
clc
idivb
fsubl
jns
inc
pop
fisttpl
fildll
mov
daa
cwtd
mov
mov
inc
sub
imul
jl
sti
daa
mov
das
push
inc
cmp
arpl
lods
mov
jns
andb
jns
or
jge
in
add
lods
sub
xor
aas
xchg
sbb
cwtl
shrl
insb
std
ret
in
rcrl
sub
add
cld
mov
stos
incl
loope
push
orb
dec
xchg
mov
add
xchg
push
hlt
outsl
xor
cwtl
dec
dec
jecxz
sarb
popa
jmp
mov
cmp
adc
cmp
int
mov
push
imul
xchg
mov
xchg
fwait
inc
jae
cmp
cmp
and
add
xlat
in
outsb
fiaddl
xor
lcall
fcmovb
stos
dec
mov
lea
pushf
mov
jle
cmp
jns
jae
in
call
sub
mov
stos
pusha
xor
aaa
mov
add
out
jp
pushf
mov
daa
xor
in
mov
xchg
in
mov
popl
out
ss
cli
sbb
mov
xor
pop
fld
cli
fadds
xchg
cmc
jnp
add
xchg
mov
loop
loope
sbb
outsl
sti
cmp
inc
rorb
roll
ds
xchg
cmp
pop
aas
fiaddl
dec
mov
mov
scas
add
or
sbb
add
push
lcall
pop
cltd
or
aam
adc
rcl
out
or
sbb
inc
les
cmpsl
add
push
loope
cmp
fsubr
push
jb
cwtl
inc
sub
aas
stos
sbb
mov
rcr
adc
ret
dec
pop
gs
push
arpl
and
icebp
outsl
std
cmpsl
and
ffreep
push
in
fisttps
test
adcl
fisubrl
hlt
cmpsl
pop
mov
stos
daa
cs
xlat
jae
leave
fwait
je
mov
and
and
sbb
jne
mov
push
mov
inc
hlt
and
fcoml
mov
or
xchg
addr16
cmp
inc
cmp
imul
nop
sub
dec
js
add
inc
adcl
xor
iret
pop
xor
dec
repz
or
push
enter
leave
iret
in
out
ja
xchg
daa
mov
shll
cmp
xlat
out
mov
sbb
mov
add
mov
pop
imul
fwait
xchg
iret
daa
popf
daa
lahf
movsl
or
push
sub
mov
mov
cmpsl
pop
daa
dec
lcall
scas
fwait
lahf
lock
pop
and
orb
loopne
add
pusha
icebp
jo
imul
push
add
sub
jns
or
jmp
test
clc
push
push
das
fdivrl
das
jecxz
dec
push
mov
addr16
in
xchg
xor
jo
xchg
cmovbe
dec
xor
int3
pmaddwd
mov
test
mov
jg
cli
sbb
mov
orl
inc
inc
push
sahf
ds
or
inc
lds
sahf
xorb
jno
push
flds
mov
mov
xor
sbb
fildll
or
lods
pop
xchg
mov
sbb
daa
cs
int3
xchg
pusha
jns
dec
popa
jg
push
js
xor
pop
bound
sbb
sbb
push
hlt
imul
sbbl
stc
sub
mov
in
mov
jecxz
add
pushf
lcall
daa
adcb
and
sub
ret
sub
out
stc
je
and
sub
ds
out
gs
or
loop
cmpsl
jb
pop
dec
out
adc
subb
gs
mov
and
ja
popa
adc
or
test
cld
sbb
add
cmp
mov
inc
add
and
lock
pop
loope
xchg
sbb
cmpsl
inc
sbb
mov
xor
sbb
add
xchg
lea
add
aad
inc
fisttpl
stos
mov
xchg
inc
mov
and
mov
cli
sti
lcall
cs
push
mov
or
rclb
mov
sbb
push
push
xlat
xchg
push
sub
fldcw
pop
mov
ljmp
jne
loop
push
jae
repnz
sahf
shll
xchg
movsw
sub
dec
sub
pop
jne
adc
cmpsb
ret
add
cmpsl
jmp
imul
test
call
inc
xor
stos
popa
xor
xor
xor
xorb
pop
in
lret
dec
cs
mov
mov
jns
outsl
dec
js
jns
inc
xlat
cmp
loope
pop
imul
mov
into
cmp
mov
hlt
subb
adc
sbb
rcl
popa
mov
dec
aas
or
ficompl
jecxz
pop
xchg
ds
pop
scas
sahf
int3
dec
inc
jbe
adc
test
lds
xlat
sub
mov
xchg
mov
lds
adc
stc
clc
sub
pop
out
sti
jno
int3
test
lea
sbb
fisubl
push
xor
fstps
xchg
les
and
cmp
cmp
lcall
adc
and
and
shll
aad
shll
mov
mov
sub
cld
fsubp
in
loope
scas
out
sub
cmc
das
push
adc
mov
push
jb
test
stos
cmpl
jae
jmp
sub
sar
mov
lret
incb
xor
jp
mov
sti
mov
aas
in
ret
repz
jnp
aas
stc
js
fidivrs
out
js
fnstsw
mov
dec
xorb
popa
rcll
inc
dec
arpl
mov
mov
dec
rorb
push
int
xchg
out
lret
push
gs
adc
rolb
movsl
mov
movsb
adc
cmpsb
or
mov
mov
cmp
push
negl
jp
xchg
cmp
pop
gs
cmpsl
pop
and
cltd
jp
dec
loop
mov
shl
fcompl
push
inc
push
and
xchg
mov
adc
sahf
push
lahf
cwtl
lcall
mov
push
dec
mov
mov
hlt
test
xor
jo
out
sbb
loope
sub
sbb
out
in
repz
es
add
imul
sahf
push
lods
xor
arpl
jle
push
outsl
lcall
into
xchg
insb
ja
sbbb
cs
mov
int
cwtl
cmp
mov
insl
js
loopne
andb
mov
sub
loopne
pop
dec
push
jns
pop
test
aas
and
aam
arpl
xchg
enter
push
mov
fstps
ja
mov
rcrb
sarl
mov
icebp
or
mov
inc
pop
adc
shll
mov
sub
outsb
repnz
adc
jae
sub
leave
xchg
adc
cmp
mov
je
in
rcrb
cmp
fdivl
push
rcr
outsb
pop
in
jnp
lock
aam
sub
test
scas
sub
pop
dec
mov
mov
mov
outsl
inc
subb
roll
adc
movsl
inc
sbbl
test
xchg
mov
std
jb
inc
push
je,pt
mov
lahf
jae
cmp
rorl
or
test
fldl
sti
inc
cmovs
nop
nop
mov
xor
xchg
sbb
rcrl
push
pop
xor
xchg
lds
cmp
and
push
inc
and
adc
jo
sbb
or
pop
mov
mov
jne
cwtl
mov
cwtl
push
sbb
mov
inc
adc
daa
sub
dec
xchg
pop
fisttps
push
dec
shrd
int
cwtl
in
aad
cs
inc
movhlps
and
push
bound
test
sbb
fs
or
pop
daa
adc
in
sub
pop
imul
add
mov
cmpsl
cmp
loope
jbe
in
mov
popa
ret
jg
movsb
or
xor
es
jnp
outsl
gs
fistpll
mov
or
mov
insl
dec
out
arpl
mov
inc
lret
shlb
push
mov
or
sahf
pop
adc
jbe
orl
cmpsl
mov
mov
push
cltd
cmp
xor
imul
loope
rolb
jbe
inc
and
into
lds
or
cltd
popa
xchg
add
bound
push
lret
gs
pop
out
addr16
or
cltd
or
push
or
out
pushf
or
jno
or
hlt
adc
movsl
mov
shlb
dec
jmp
fiadds
mov
nop
xchg
ror
fwait
outsl
out
pop
das
xchg
mov
ss
dec
fstp
inc
negb
out
movsb
mov
pusha
mov
loop
pusha
ret
loop
les
mov
adc
ret
adc
mov
cli
aam
xchg
add
icebp
sbb
daa
repz
ljmp
xor
outsb
in
out
cmp
sub
mov
cs
pop
jnp
stc
pushl
push
inc
or
lods
icebp
mov
mov
enter
js
lods
cli
or
cmpb
aas
mov
lods
mov
cmpsb
push
sarl
jmp
pop
fists
mov
dec
sub
push
add
xchg
roll
fcmovnb
aad
test
dec
adc
fiaddl
dec
push
je
mov
cmc
add
pop
jmp
shll
mov
ret
sub
mov
mov
lcall
fnsave
test
pop
punpckhwd
ret
mov
movsb
cmpsb
lods
cltd
es
lods
jp
stos
fsubrl
in
popf
imul
sahf
lods
lods
jb
fbstp
mov
mov
xor
mov
jae
mov
ljmp
daa
cmp
sub
jge
mov
mov
subb
add
or
inc
adc
scas
and
scas
into
add
mov
lds
mov
cmp
mov
jge
mov
xor
mov
mov
or
push
fisttpll
mov
inc
push
es
cld
xchg
ret
aad
xchg
push
mov
and
xchg
mov
jecxz
outsb
pop
dec
mov
fcoml
or
fisubs
int3
xlat
enter
or
int3
daa
xchg
pop
mov
fsts
xchg
aam
mov
push
or
rcrb
cld
jo
adc
pop
fcmovbe
xchg
jl
mov
pop
jge
pop
inc
jns
pop
ds
iret
cli
and
int3
daa
and
stos
in
ficompl
lock
mov
divb
ret
sbbl
push
cli
sub
xchg
mov
add
jmp
in
aad
clc
pop
cs
das
push
dec
or
mov
cmp
jecxz
xor
sub
mov
xor
push
add
jnp
insb
sub
cmp
shlb
test
sti
cmpsl
xor
fidivrl
cld
push
dec
sarl
std
jge
cwtl
cmp
adc
add
ss
cld
xchg
or
cmp
cmpsl
sbb
ja
dec
loope
cltd
fisttpl
dec
adc
xchg
lock
mov
mov
icebp
dec
or
cmc
aam
loop
push
push
lret
pop
icebp
adc
pop
repnz
icebp
adc
and
pop
sub
scas
xchg
add
cmpsl
and
jecxz
out
pop
lods
subb
pop
hlt
mov
sti
jb
xor
or
mov
mov
in
cmpsl
xor
out
lcall
mov
sti
cs
push
cmpsl
test
out
mov
loopne
jae
mov
cmp
ja
jle
mov
and
add
fdivl
in
aad
cld
ljmp
ret
aas
sbb
jnp
inc
cmp
inc
pushf
lret
inc
mov
addl
cmp
mov
and
andl
dec
inc
fiaddl
test
test
push
or
inc
xorl
addr16
into
and
dec
iret
shr
je
lods
movsl
xor
ret
adc
adc
xchg
push
out
sub
xchg
in
xor
jae
fnstenv
pop
mov
sub
pop
mov
loop
and
out
adc
sub
call
add
lahf
in
mov
addr16
add
xor
scas
and
das
inc
jb
dec
je
je
repnz
sub
pop
test
xchg
jl
movl
test
test
outsl
jp
mov
enter
rorl
dec
je
arpl
jmp
jbe
incb
jp
into
mov
jns
sti
ds
push
cmp
jge
dec
les
lea
dec
out
inc
sarl
pusha
or
or
or
jb
lret
push
into
test
inc
lock
pop
scas
adc
mov
leave
pop
mov
das
aam
pushfw
popa
imul
push
mov
adc
mov
push
lods
add
push
fdivrl
lcall
cmpsb
sub
xlat
fdivs
repnz
loop
aaa
lcall
mov
xor
mov
sub
sub
movsb
out
and
mov
movsb
jmp
xchg
add
add
fldt
sbb
in
sub
loopne
dec
mov
jl
ss
icebp
iret
sub
push
shlb
cli
cwtl
dec
into
sub
cmp
mov
sti
mov
xchg
daa
dec
xchg
mov
js
cld
aad
and
out
int3
int
sbbb
mov
jmp
int
and
mov
inc
sarl
inc
mov
mov
dec
stos
mov
pop
xchg
dec
adc
or
adc
jno
push
stos
cld
mov
dec
fisttpll
dec
adc
lock
sbb
cltd
push
mov
test
in
jmp
pushf
in
push
xor
mov
xchg
or
sbb
and
cmc
fwait
mov
xor
out
gs
andb
pop
or
es
cmc
or
enter
std
cmp
sub
aam
add
cmpsl
push
insb
sub
int3
testl
mov
clc
mov
aad
divl
mov
hlt
lret
mov
cmp
mov
xchg
stos
lahf
jbe
add
jl
clc
fiaddl
or
vhsubps
cld
add
pop
dec
orb
les
inc
inc
or
gs
mov
pop
xchg
sbb
dec
mov
loopne
xchg
loopne
rcrb
popf
test
xchg
fwait
lret
mov
shl
call
or
adc
push
and
sub
xor
and
mov
ja
sahf
subb
or
les
lods
jae
jb
popa
hlt
lods
movsl
in
sub
sahf
sbb
xchg
cmp
shll
or
pop
int
fwait
xor
hlt
and
in
movsl
es
out
lods
aas
mulb
sub
outsb
push
in
jmp
jge
fnstsw
imul
out
inc
out
out
xchg
mov
lods
mov
and
mov
loope
and
cmp
es
push
inc
dec
cmpsl
aaa
leave
ret
nop
notl
sbb
fadds
inc
pusha
adc
jecxz
push
jle
std
mov
rcl
pop
and
mov
cmovl
jae
popf
loop
or
or
sahf
push
sarl
leave
push
jne
insb
cmpsl
fisubrs
int
xchg
inc
dec
cli
dec
mov
and
sbb
mov
cltd
jb
lock
lcall
pop
popa
sub
xchg
jmp
rcrb
in
push
fdivrs
pop
test
push
pop
repnz
lods
in
loop
push
lock
lea
cli
mov
pop
sbb
push
stos
loop
mull
stc
out
loop
lods
ss
inc
xor
inc
scas
shl
stos
lret
insl
lret
jmp
lahf
out
mov
mov
imul
loop
je
jl
jae
lcall
mov
jne
inc
dec
test
mov
xor
mov
test
fiadds
add
sub
test
mov
add
ljmp
call
or
or
shr
push
xchg
or
stos
push
push
adc
push
aaa
stc
push
inc
insb
dec
fimuls
sbb
adc
xchg
fcoml
mov
adc
sbb
add
es
push
sub
lret
inc
sbb
jp
pop
jecxz
pop
adc
pushf
dec
push
cwtl
sub
ret
loope
dec
push
js
out
out
out
frstor
hlt
jmp
and
cmc
jb
mov
call
xor
mov
stos
gs
test
dec
sub
cmpsl
lock
mull
xlat
test
outsb
jmp
mov
in
sub
aad
mov
pop
lock
aaa
out
subb
fdivrs
pop
jge
adc
cmp
mov
mov
out
mov
inc
aaa
daa
add
add
xchg
sahf
mov
dec
rorb
ds
mov
pop
push
les
nop
dec
mov
sub
aas
inc
or
inc
inc
lret
pop
xchg
dec
daa
mov
jp
inc
test
jle
int
lods
mov
ss
fisttps
lea
repz
xor
adc
enter
stos
inc
pop
shlb
insb
dec
mov
pop
ljmp
cmpsb
ret
mov
cmpb
sbb
bound
jnp
cmc
lea
jg
push
cmp
mov
aas
add
out
iret
jae
dec
push
inc
push
fnstenv
cltd
cmp
in
jae
imul
stos
pop
jp
cmp
out
jmp
cmc
jo
or
ja
data16
js
xor
or
aaa
inc
scas
dec
xor
mov
xor
pop
mov
scas
xor
enter
mov
push
cmp
bound
pop
dec
xor
and
jns
ss
scas
sarl
xchg
ficomps
push
faddl
xchg
dec
pop
push
movsl
lds
push
push
mov
xchg
loop
jns
lahf
xchg
ret
fdivl
sbb
mov
sub
jp
rcrl
rol
ret
lret
cmp
mov
lahf
mov
push
and
aam
cmp
loop
ret
gs
std
add
lret
mov
test
pop
fsub
xor
addr16
pop
pop
insl
jne
add
push
push
add
xor
mov
stc
lods
cmp
shl
cld
cs
cmpsl
cmp
mov
push
and
adc
into
inc
xchg
std
mov
scas
adc
push
out
js
leave
cmpb
aaa
scas
mov
cmp
repz
xor
jecxz
jge
int
inc
ss
cmp
lcall
ds
mov
and
lds
popa
pop
add
rolb
fs
push
leave
shlb
movl
into
xor
or
or
adc
mov
dec
loopne
or
ljmp
mov
jecxz
cs
iret
push
lock
push
push
push
sub
out
mov
jmp
pop
bound
pop
cli
int
and
or
mov
call
pop
sbb
adc
xor
lods
adc
dec
cmpsl
jo
icebp
and
ljmp
inc
out
es
test
ret
sub
jae
jl
fidivl
sub
ja
inc
repz
insb
lods
mov
dec
imul
in
jecxz
in
popa
dec
xor
add
sti
in
push
jne
rcl
xorl
cmp
out
push
add
pop
inc
add
subb
pop
lcall
xchg
int3
inc
call
mov
push
andl
push
test
rorl
pop
xor
push
xchg
pop
gs
pop
fstps
lods
aam
xchg
mov
sarl
fisttpll
rorl
out
pop
mov
insl
outsl
rcrl
xchg
xchg
mov
in
cmp
mov
mov
sbb
xor
push
pop
es
pushw
out
sub
loop
cmp
and
and
add
call
push
test
or
inc
ja
push
mov
mov
mov
in
lods
jmp
out
lock
xor
mov
jp
mov
mov
jne
fistpll
xor
hlt
sbb
cli
or
jecxz
add
mov
cmp
add
cmp
sti
nop
inc
mov
outsb
jmp
jo
push
dec
push
inc
into
enter
pop
push
xchg
xchg
movsl
ret
cmc
xor
sbb
ss
sbb
pop
and
dec
push
dec
or
leave
test
adc
or
mov
adc
jg
inc
rcrl
xorl
push
pop
enter
xchg
aad
xlat
aad
mov
add
loopne
ja
popf
fs
or
adc
fsubrs
and
mov
lret
das
gs
inc
pop
cmc
cmc
or
fsubrl
xor
ret
sbb
and
add
movsl
jo
inc
aas
jl
push
or
fsubrl
int
aaa
fisttps
subb
mov
shlb
data16
fdivp
inc
call
cmp
orl
sbb
in
inc
pop
pop
dec
mov
xor
push
push
push
pushf
into
xchg
call
stos
mov
mov
insl
fs
adc
add
lock
fiaddl
pop
test
loopne
xor
sub
xchg
fwait
pop
dec
int
shll
xchg
mov
pop
xchg
mov
xchg
mov
pusha
popa
xchg
popa
pop
push
jno
pop
push
jb
pop
push
jae
pop
push
je
pop
push
jne
pop
push
jbe
pusha
push
ja
popa
cwtl
js
xor
pop
insl
and
out
and
jnp
and
pop
jge
daa
pop
jle
sub
jne
pop
xor
pop
cmpl
or
and
sub
pop
test
pop
xchg
xor
xorl
aas
sub
xor
mov
xor
popa
lea
cmp
or
and
dec
cmp
xchg
iret
cmp
xchg
adc
imul
add
pop
xchg
add
pop
fadds
sub
mov
sub
rorb
mov
xlat
xlat
adc
inc
sbb
add
dec
sub
aam
push
push
arpl
dec
sarb
sahf
push
inc
xchg
dec
movsb
test
adc
lahf
aam
push
roll
insb
xchg
rorl
push
mov
lock
jns
xchg
sbb
lock
jno
aam
sbb
data16
pop
scas
jo
mov
enter
cmp
int3
and
inc
or
push
mov
std
cwtl
mov
pusha
sub
inc
loope
in
mov
jbe
lock
xchg
add
jmp
das
sbb
out
push
xchg
lods
mov
fmuls
out
xor
sub
dec
xor
jbe
inc
mov
addr16
mov
xor
cli
hlt
xorb
je
outsb
cmp
cmpb
inc
xor
test
sbb
in
dec
add
or
or
push
popf
call
cltd
lahf
inc
or
loope
sbb
cli
mov
mov
divb
shll
out
push
and
lret
call
pop
or
sub
daa
sub
sub
or
sub
push
shrl
rcll
lock
push
lret
pop
xchg
pop
pusha
dec
fcomps
and
push
in
imull
and
daa
fwait
jns
lahf
sub
sahf
jle
xor
cmp
out
hlt
shlb
mov
je
cmpsb
push
dec
roll
loop
in
movsb
add
addr16
cmp
mov
dec
sub
add
sbb
dec
jae
pop
dec
inc
mov
dec
mov
mov
push
ja
int
scas
xchg
jb
loope
or
testl
sub
test
jge
inc
xchg
cmp
lret
sub
jmp
inc
stos
lcall
dec
adc
repz
dec
inc
mov
inc
mov
and
add
in
fiaddl
inc
push
lcall
dec
push
xchg
dec
push
orb
imul
jp
push
pop
mov
push
sbb
rclb
jae
mov
sbb
push
sub
addr16
mov
sbb
fisubrl
ljmp
and
push
pop
and
arpl
and
dec
stos
negl
fs
inc
pusha
mov
mov
jge
insb
xor
mov
jbe
fucom
test
addl
lock
xor
cmc
movsl
hlt
jmp
add
outsl
lods
hlt
xor
into
add
aas
dec
cmc
popf
mov
in
loop
mov
sbb
dec
adc
xchg
or
jge
aam
in
xchg
sbb
lods
js
mov
fnstsw
popa
fldcw
lret
adc
popf
push
lret
add
test
pop
adc
gs
add
leave
mov
xchg
mov
out
sbb
fisttpll
call
loope
cmp
out
xor
nop
int3
js
pop
xor
adc
or
xlat
fsubrl
pop
inc
push
mov
xor
fwait
lcall
loop
cvtps2dq
push
pop
sub
pusha
cld
fbld
pop
cs
fimull
sub
imul
inc
cmpsl
push
loope
add
adc
mov
mov
imul
jmp
cs
leave
mov
add
bound
and
das
jns
mov
fwait
jns
int3
imull
repz
idivl
testb
push
leave
aaa
xor
lea
sbb
xchg
cmp
or
dec
mov
popf
and
push
ss
cli
jbe
mov
mov
pop
or
lea
loopne
mov
mov
or
mov
test
dec
push
aad
mov
xlat
repnz
xlat
sub
test
out
jae
int
call
aad
in
adc
stos
sub
push
hlt
adc
aam
dec
out
hlt
add
fdivrs
pop
das
sahf
sub
inc
push
test
and
lcall
lahf
lods
movsl
sub
fiadds
pop
fistps
xchg
inc
imul
mov
repnz
je
in
and
dec
outsb
in
aam
call
scas
sub
mov
stos
push
jo
addb
inc
out
nop
loop
adc
popa
xor
ds
pop
jae
fs
xchg
and
ds
inc
inc
mov
xchg
add
add
out
mov
sahf
dec
cmpsl
test
jne
mov
sub
enter
fcmove
rclb
mov
stos
enter
mov
push
cmpsl
dec
mov
adc
int3
xchg
adcb
sarl
add
adc
xor
adc
outsl
xchg
xchg
inc
mov
gs
fidivrl
lds
mov
push
xchg
and
mov
arpl
in
cltd
loopne
xchg
mov
and
dec
jmp
lret
push
cmp
testb
mov
cs
jmp
cmc
push
pop
xor
and
test
ret
sbb
ret
mov
mov
data16
lock
mov
jno
lock
rolb
jmp
xor
pop
jns
dec
or
sbb
mov
jl
shl
and
jl
adc
or
push
lret
or
push
inc
inc
dec
loop
lds
jge
push
sub
cmp
jle
mov
rorb
sbb
outsb
dec
imul
addl
push
loop
fcomip
xchg
mov
jmp
mov
mov
add
push
jl
movsb
push
jge
out
adc
push
fiaddl
fisubs
push
pop
adc
jne
pop
aaa
and
sub
xor
pop
or
and
popa
push
ret
subps
rcrb
je
push
jmp
aam
icebp
xor
loop
and
xlat
in
outsl
xchg
in
xchg
jno
jge
call
repnz
jb,pt
mov
in
pop
xchg
cltd
mov
std
mov
ljmp
mov
mov
push
pop
xchg
cld
jnp
cmc
xlat
mov
mov
inc
pushf
sbb
aad
lret
mov
int3
jmp
lret
or
fsts
jae
mov
or
std
push
inc
push
adc
lods
xlat
or
push
in
xchg
cmp
sahf
cltd
xchg
inc
jl
or
mov
jp
and
in
adc
iret
in
lock
shr
xor
scas
out
push
jmp
es
sbb
xor
stos
test
sub
cmp
push
and
sub
lods
outsb
jg
cmp
popf
add
mov
and
mov
jmp
ficoms
jle
insl
shrb
in
sub
sub
mov
add
xor
xor
incw
jne
loopne
out
subl
jae
pop
sahf
mov
sahf
mov
stc
icebp
mov
pop
xchg
jl
test
push
ljmp
orl
mov
clc
addb
sbb
lds
mov
add
test
add
cmc
rol
addl
fiadds
pop
out
inc
xchg
dec
test
test
inc
addr16
sbb
or
push
sub
stos
mov
push
jl
push
rcl
cmc
xchg
add
jo
xlat
hlt
fisttpl
sbbb
xor
pop
add
push
das
fwait
and
xor
mov
pop
loopne
jle
cmpsb
fisubrs
cmp
fstpl
pop
loope
icebp
pop
mov
push
mov
nop
pusha
mov
inc
dec
ret
mulb
mov
ss
lret
fs
mov
fld
clc
insb
fwait
lods
sub
lret
popa
sti
arpl
pop
insl
stos
cmc
ds
jo
sbb
sbb
outsl
shlb
push
iret
jbe
xor
mov
loope
push
dec
sbb
into
dec
xor
xchg
sarl
jecxz
lods
in
sbb
dec
inc
pusha
stos
aad
test
icebp
andl
clc
jg
leave
or
mov
mov
loope
or
mov
mov
rol
fimull
ficoms
sub
adc
mov
or
fisttps
ficompl
jbe
xor
xchg
adc
jo
cmc
out
push
repz
jp
pop
xor
fcoml
or
cs
shr
out
mov
adc
xor
adc
push
test
repnz
dec
or
cmpsb
inc
pusha
mov
scas
aam
jb
jb
les
test
aam
or
add
mov
sub
stos
in
push
jnp
mov
mov
xor
testb
inc
and
mov
hlt
cmpsb
dec
sub
fwait
jne
mov
ja
push
cmp
sbb
mov
pop
and
jecxz
dec
xchg
add
mov
lret
dec
arpl
loop
xchg
mov
sbb
lret
rcrb
cld
xchg
inc
jb
or
loopne
push
dec
dec
pop
ret
dec
scas
dec
into
cwtl
ss
cwtl
fs
clc
push
sar
xchg
repz
loopne
xchg
lret
mov
inc
fmul
adc
cwtl
sub
scas
mov
sub
mov
fistl
das
test
sbb
sbb
repnz
cltd
cld
js
das
outsl
cmp
mov
rcll
loope
sbb
repz
pop
out
aam
cmpsb
jb
fidivl
mov
sub
test
jge
mov
int3
push
add
lods
and
pusha
test
aas
jb
jle
int3
cld
into
decl
aaa
sbb
cmc
int
add
std
aad
mov
js
xchg
cmp
xchg
cmp
sub
ljmp
inc
shrl
pop
pop
ret
in
jb
mov
stos
add
xchg
inc
js
adc
arpl
mov
vorpd
xor
adc
jbe
dec
xchg
jmp
mov
fidivs
std
mov
test
push
adc
out
imul
fmull
jb
xchg
sahf
and
mov
push
jbe
xor
push
xlat
and
outsl
cmp
in
mov
cwtl
insb
rcrl
mov
pop
fstpt
nop
jecxz
std
jmp
push
jg
jmp
add
loopne
addb
imul
hlt
mov
xor
dec
dec
stc
les
data16
loope
jno
xchg
sub
int3
pop
jb
pop
jne
das
stos
cmpsb
mov
push
jle
scas
jle
je
lea
mov
jno
pusha
bnd
push
sti
icebp
sub
mov
cmpsb
lret
fwait
mov
inc
cli
inc
out
xor
mov
push
jge
inc
sbbl
mov
add
je
or
aas
ficompl
shrl
push
les
xchg
mov
movsl
or
cmc
lcall
inc
jg
sbb
iret
or
push
lret
mov
adc
lcall
inc
test
iret
inc
jno
xor
pop
imul
sbb
mov
negb
lahf
rcrl
or
imul
pusha
dec
mov
iret
fsubrl
imul
sub
addr16
push
popf
loop
jmp
in
push
cmpsl
inc
xchg
jle
stos
inc
ss
inc
jbe
scas
scas
and
pop
and
repnz
mov
dec
push
mov
mov
jnp
clc
cmp
cmc
into
push
inc
clc
xchg
jne
sub
cmp
cmp
addr16
ds
or
or
andb
jno
dec
scas
out
rolb
or
mov
push
mov
mov
lds
sahf
rcl
lea
dec
lds
lds
cs
int3
leave
sub
xchg
adc
xchg
dec
call
fs
out
pusha
push
iret
nop
imul
sub
test
adc
pop
xchg
aam
in
push
mov
frstor
mov
frstor
mov
fldt
lock
in
xor
rcr
mov
adc
rcrl
dec
loopne
out
out
lahf
inc
cmp
jmp
ljmp
adc
test
xchg
call
jg
clc
es
mov
mov
pusha
mov
mov
fisubrs
or
mov
shrl
jle
fucomp
dec
jnp
jb
cld
js
and
cli
repnz
xor
cmp
aaa
mov
icebp
aam
movsb
jnp
adc
clts
outsl
mov
xchg
push
sti
xchg
sbb
fildl
mov
sbbb
inc
pop
xor
addr16
xchg
sub
test
xchg
movsb
adc
xchg
pop
inc
dec
insl
psubusb
jg
outsl
fmulp
xchg
push
in
or
lea
or
iret
adc
sbb
dec
mov
mov
lcall
adc
inc
fildll
scas
xlat
lcall
sbb
in
or
mov
out
cld
and
sbb
imul
enter
pop
movb
jmp
dec
mov
mov
sub
insb
sub
scas
cmp
pop
scas
outsb
adc
icebp
repnz
cmpsl
test
icebp
shr
jb
les
inc
xor
sub
jmp
lret
sbb
testb
jo
cmp
jp
xor
lret
adc
aas
mov
jge
orl
leave
inc
clc
inc
jnp
and
push
xchg
test
xchg
out
cmp
aaa
rclb
xchg
dec
adc
inc
pop
lods
dec
xchg
dec
ret
popl
add
push
mov
dec
sbb
stos
lcall
sub
insl
mov
mov
fcoml
cmp
in
push
cltd
or
jne
xchg
aad
rcl
out
lcall
xor
pop
push
jp
loop
cmp
pop
cmc
dec
jle
pushf
cmp
mov
cmp
bound
pop
mov
outsl
pop
cs
cs
sahf
and
into
pushf
repnz
cld
scas
fistpll
mov
arpl
and
and
sub
enter
fs
pushf
push
jno
push
mov
imul
loopne
sub
sub
jmp
in
stos
popf
jg
xchg
test
out
mov
mov
mov
aad
cmc
xchg
push
into
pop
mov
dec
std
ss
jl
cmp
fnstcw
jg
dec
mov
add
lret
jp
je
mov
sbb
sbb
push
dec
scas
add
and
mov
mov
testb
aam
movsl
or
jecxz
gs
and
mov
das
and
mov
enter
xlat
das
popf
cmpsb
or
push
dec
push
mov
mov
adc
adc
jecxz
jne
fcomps
faddl
stos
mov
cmpsl
sbb
pop
cltd
movsl
jl
fistpll
mov
and
dec
or
pop
call
mov
jne
ljmp
xchg
mov
sub
jbe
out
mov
les
addr16
test
shr
mov
xor
into
cs
or
insb
lock
jns
lock
jo
xchg
test
cli
in
js
hlt
repz
cmc
ja
mov
nop
jbe
or
xchg
inc
jbe
inc
ss
fistl
imul
dec
stc
mulb
sub
mov
jl
mov
xchg
pop
lcall
and
cli
push
pop
xchg
and
cmp
push
sub
testl
cmpsb
mov
dec
repz
lcall
movsl
push
xchg
addr16
mov
ret
jno
and
fcoml
pop
ss
lods
nop
lahf
mov
pop
fmull
lret
mov
aam
jno,pt
add
popf
cmpsl
xlat
xchg
addr16
pop
daa
dec
sbb
popa
cwtl
enter
outsb
data16
mov
in
cmpsl
pop
inc
mov
sub
jl
cmpsb
jmp
push
lcall
test
lods
stos
in
subb
sub
icebp
add
add
ds
inc
jnp
jb
inc
clc
adc
jp
xor
jne
test
cltd
divl
mov
push
sarl
icebp
std
decb
daa
dec
std
cltd
std
mov
xchg
mov
and
orl
dec
mov
xchg
repnz
test
or
inc
add
xchg
dec
push
lods
lds
dec
subb
das
sub
fimuls
and
xchg
push
xor
and
rclb
cs
sti
aad
lds
icebp
sub
pop
sbb
fistps
push
pop
sbb
insb
pop
pushf
nop
cli
xlat
pop
pop
add
cmp
inc
pop
xchg
pop
lods
lahf
popf
insb
sahf
cmp
cmp
mov
jb
adc
ja
mov
and
cmp
insl
xor
icebp
pop
cmp
mov
jg
or
adc
outsb
stos
mov
mov
fwait
or
mov
repz
in
cmpl
stc
xor
cmp
cld
sub
mov
jle
aam
dec
mov
jne
push
sbb
pop
rorl
push
rclb
inc
inc
jl
push
inc
arpl
xchg
xchg
pop
stos
add
in
inc
mov
add
or
mov
rorl
dec
ret
cwtl
out
adc
sbb
cmp
out
jb
push
out
push
mov
popa
rcl
adc
jo
lock
push
xor
loope
insl
and
cs
mov
mov
cmc
aam
push
fsub
mov
movsl
push
pop
mov
pusha
jno
insl
add
push
or
adc
int
gs
int
mov
sub
out
lcall
scas
jae
push
xorb
mov
pop
clc
pushf
je
popa
push
clc
test
inc
cmp
cli
in
hlt
mov
mov
cmp
add
jg
add
lcall
xor
cmp
mov
dec
leave
pmullw
pop
lahf
jecxz
aad
xchg
inc
xchg
cltd
gs
out
leave
mov
push
mov
sub
lahf
push
mov
adc
adc
mov
push
fidivrl
pop
adc
dec
cwtl
stos
pushf
push
sub
mull
fsubrl
inc
pop
push
fldl2e
push
xchg
sbb
push
loope
jbe
jo
and
fisttps
jnp
imul
add
jmp
sub
mov
outsb
fsubrl
sub
leave
clc
mov
gs
xlat
mov
nop
xor
mov
and
cltd
sti
adc
mov
jl
mov
sub
ret
pop
jp
inc
cld
aad
enter
xchg
add
inc
ret
aas
add
loop
inc
mov
cwtl
cmp
adc
sbb
adc
testl
test
cmpsb
mov
add
or
push
add
or
mov
ret
sbb
inc
outsl
add
jecxz
es
xchg
sbb
nop
rol
sbb
mov
xor
das
sbb
push
xlat
fsubrp
adc
sub
and
pushf
xor
jmp
adc
xchg
mov
mov
or
outsl
cmp
rorb
push
movsb
inc
lahf
cli
and
mov
retw
or
adc
cs
jns
insb
mov
shlb
subb
jp
ljmp
cmp
insb
mov
jno
out
fidivs
jp
mov
hlt
jb
lods
cmpsl
cmp
out
mov
dec
sti
jae
imul
jg
cli
mov
xchg
mov
cmpl
mov
ss
xchg
xchg
rorl
out
dec
push
mov
mov
rcll
xchg
rorb
dec
rcrb
stc
or
mov
insl
sbb
cmp
push
je
adc
clc
shlb
fildll
testb
mov
adc
adc
lds
cltd
xchg
cmp
or
adcb
fs
jecxz
mov
jecxz
sub
add
xor
and
and
movsb
rcr
jae
mul
lahf
inc
and
sbb
lods
mov
fs
test
stos
call
inc
in
push
or
outsl
lea
mov
aam
lret
inc
jb
push
xor
pop
adc
repz
les
lret
adc
push
les
clc
add
xchg
int
cmp
xchg
cmpsb
mov
cli
push
sbb
sub
in
mov
cmp
inc
andl
lret
push
flds
lahf
mov
rcrl
xor
dec
inc
fcomps
adc
bound
int3
negb
and
int3
nop
adc
std
ficomps
xchg
cmpsb
pushw
ja
adc
scas
add
add
jle
sbb
jae
daa
sbb
mov
push
pop
jp
inc
mov
bound
addr16
and
mov
clc
repz
insl
push
addr16
push
sub
inc
jb
inc
mov
in
lret
inc
stos
lods
lock
mov
mov
or
add
stos
or
insb
ss
mov
xor
jl
mov
jbe
add
mov
mov
cli
ret
aaa
cmp
mov
cmpsl
cs
mov
gs
lods
jl
mull
movsl
out
cmp
aam
iret
adc
inc
adc
int
adc
cmp
mov
cmp
cs
xor
ret
xchg
popa
je
fidivl
push
and
pop
inc
fistl
xchg
inc
sbb
das
push
rcll
dec
rcrb
dec
adc
mov
cmp
xchg
adc
pop
sbb
fld
ja
push
pop
scas
lcall
or
leave
outsl
aaa
cwtl
pop
or
xlat
cli
cld
test
lods
ficomps
jae
adc
xchg
jbe
loopne,pn
pop
mov
addl
jmp
in
test
sbb
js
test
in
out
jbe
lret
into
mov
sub
inc
sub
clc
mov
sbb
inc
push
mov
cmp
ss
xor
loop
test
imul
std
aam
je
scas
fs
aas
adc
sarb
and
les
ret
scas
sar
xor
insb
and
add
rorb
enter
add
addl
fs
cld
fwait
mul
mov
dec
lods
push
dec
xor
pop
xchg
lret
int
and
jbe
jnp
imul
rcrl
xchg
adc
adc
aad
or
test
sbb
inc
mov
xchg
lea
fcmovnu
sahf
movsb
push
jbe
out
imul
repnz
mov
pop
repz
into
adcl
jl
ja
jge
gs
cmc
inc
pop
xor
mov
pop
clc
mov
sub
xor
xor
xor
jbe
mov
mov
clc
lock
jno
jl
mov
imull
pop
cld
cld
xor
jg
push
push
mov
ret
cmpsl
sbb
push
jle
xchg
mov
jge
mov
cmp
lret
out
ds
pop
inc
movsl
jnp
push
outsb
jl
sbb
lds
lret
insb
lds
or
push
inc
pop
lcall
cmp
sub
push
xchg
rorl
shll
adc
cwtl
out
loope
fs
adc
js
push
lods
je
pop
xor
sahf
movl
and
jp
stos
sbb
pop
out
aam
rcrb
aas
and
cs
mov
and
jb
shrl
mov
mov
sbb
outsb
dec
fs
sub
mov
scas
fiadds
lea
out
inc
mov
lds
adc
mov
jns
shl
xchg
into
mov
repz
movsl
clc
in
push
inc
push
cwtl
xchg
jp
dec
ss
cltd
inc
les
jns
mov
stc
xor
or
lret
push
scas
sbb
mov
xor
cs
or
es
pop
mov
sbb
stos
dec
push
fwait
aaa
mov
sbb
es
or
push
mov
lods
push
push
dec
or
push
sub
or
or
jge
insl
ret
movsl
cmp
push
lret
sub
insb
cmpsb
fwait
aaa
insl
fdivp
xlat
cmpsl
sbb
sbb
out
pop
xor
test
and
fwait
sbb
lret
mov
mov
loop
cmp
jbe
and
jns
sub
push
mov
sub
lds
xor
js
mov
inc
mov
out
int3
inc
jo
cmpsl
repnz
test
stos
mov
add
xchg
popf
lods
rcrb
divb
ljmp
or
push
cld
mov
push
stc
lock
push
movzwl
or
aas
dec
aam
inc
sub
inc
insb
jns
cli
pop
push
bound
inc
and
inc
mov
cmpsb
jg
shll
rcl
inc
cmp
lea
add
push
xchg
fdivp
nop
mov
mov
fucomi
mov
push
popa
sbb
rcrb
mov
adc
aam
jmp
cwtl
inc
fdiv
lret
push
pop
std
mov
stos
dec
dec
pop
push
fisubs
dec
push
adc
and
xor
lahf
out
imul
xor
jnp
mov
stos
fisubs
fbld
shlb
fldenv
sub
in
dec
aas
scas
adc
jge
xor
mov
xchg
stc
test
and
icebp
std
andl
popf
mov
jp
and
imul
sub
rorb
scas
lret
inc
es
pop
xor
jge
movsb
jnp
mov
testl
xchg
inc
js
jle
push
js
cmp
cmpb
mov
inc
pusha
xchg
mov
and
mov
in
push
subl
and
sbb
xchg
dec
inc
xor
sub
mov
or
rcrb
push
xchg
mov
rcll
push
pop
outsb
mov
test
sbb
lret
aam
pop
sti
scas
hlt
imul
loopne
lcall
loope
in
cmp
pop
sbb
dec
loope
push
mov
and
js
pop
and
rcrl
mov
sub
lret
and
push
mov
sub
push
cmp
add
data16
fsubrs
test
call
and
fdivrl
addb
cmp
shl
repnz
jl
xor
sar
adc
push
lret
outsl
fsubp
mov
fistl
rolb
loope
inc
xchg
pop
xchg
xchg
mov
push
loopne
add
mov
aam
mov
push
pop
imul
lds
push
lods
gs
sbb
pusha
or
pushf
push
rclb
ret
dec
scas
or
cmp
adc
inc
pop
adc
lahf
loopne
push
movsbl
xchg
loope
sbb
ret
xchg
cwtl
xchg
cmpl
aad
push
aad
rcll
mov
or
lcall
pushf
xor
fwait
insb
in
cs
and
jp
lods
cmp
in
sbb
sub
mov
ret
cmpsb
movsl
in
xchg
ret
fsubrl
jae
in
xchg
loopne
test
push
sub
ljmp
jle
cmc
xor
mov
pop
cmp
jmp
test
testl
mov
pusha
jle
push
mov
cli
mov
sbb
add
cld
cld
outsl
pop
dec
std
mov
pinsrw
pushf
aas
push
mov
pusha
mov
mov
loop
or
popf
adc
adc
pop
xchg
pop
mov
lret
or
push
kmovb
or
js
mov
and
inc
jge
or
cwtl
xchg
xchg
dec
dec
rcll
inc
sub
jmp
push
out
xor
sub
outsl
adc
insb
pop
jo
lahf
pop
jno
mov
fidivl
mov
jo
sbb
inc
lock
mov
loope
movsb
jg
mov
shlb
and
inc
jmp
sub
mov
scas
add
shrb
or
ret
push
pop
push
sbb
sub
sbb
int3
cld
lods
gs
mov
or
in
ret
mov
xor
cld
and
cmp
and
jp
mov
jg
aad
mov
push
jns
or
shlb
add
add
ds
call
movb
fs
ret
push
mov
mov
ds
rcll
xor
xchg
xchg
mov
xchg
mov
xchg
xchg
faddl
sub
test
sbbb
shr
pmaxsw
aad
test
scas
faddl
xchg
js
js
push
mov
fists
in
push
or
out
fwait
clc
pop
mov
pop
lahf
out
shlb
loope
jmp
scas
push
ss
insl
aam
jns
jp
out
xor
dec
cmp
addr16
jmp
jmp
pushf
outsb
pop
and
test
dec
sub
jl
push
into
adc
jg
clc
insb
adc
pop
pusha
adc
cmp
stos
lods
jbe
jne
jae
int3
sbbl
mov
push
inc
add
add
xorl
add
lds
mov
mov
js
inc
or
cmpsl
scas
loop
adc
mov
in
sub
mov
jg
mov
pop
or
jecxz
xchg
or
enter
icebp
push
outsb
mov
repnz
rorb
stos
xchg
sbb
cltd
push
mov
pop
in
jp
mov
xchg
push
mov
rcrb
int
add
pop
flds
popa
xchg
add
daa
mov
gs
popf
pushf
sub
jns
bound
xor
fldt
mov
adc
sbb
insb
pop
jmp
jmp
nop
push
test
mov
das
push
das
enter
lods
lea
mov
imul
outsb
lods
jg
mov
out
aaa
out
leave
add
mov
das
inc
icebp
jno
pushf
adc
sti
repnz
cli
xlat
push
mov
cmp
pop
mov
stos
cmpsl
jns
xchg
mov
mov
xor
add
and
add
sub
lds
out
inc
push
mov
mov
xchg
mov
dec
movsl
dec
rcll
es
xor
es
jle
pop
psubb
loope
rclb
add
repnz
mov
repz
push
push
push
jg
and
movsb
mov
loope
sub
je
push
pop
or
test
fidivrs
and
out
mov
jle
scas
bound
into
or
movsl
ss
into
aaa
imul
jns
add
jbe
out
sti
mov
stos
mov
xor
xor
mov
leave
dec
and
jg
sub
cmp
cmpsl
sar
ja
push
cli
idivl
dec
adc
cmp
xchg
mov
rolb
jle
negl
ret
stc
mov
sbb
test
inc
push
vpsrad
inc
lods
inc
cmpsl
xchg
roll
mov
or
cmpsl
js
inc
gs
pop
mov
and
jmp
dec
outsb
les
roll
aam
imul
mov
out
lods
pop
xchg
xlat
mov
mov
lods
mov
xlat
and
movsl
cmp
mov
lret
test
scas
ljmp
call
jl
loope
mov
loopne
sahf
popa
ret
stc
add
or
icebp
sbb
pop
cmc
push
mov
xorl
xchg
sbb
pushl
fildl
dec
cmp
notl
jle
outsb
dec
sahf
jae
xchg
add
sbb
xchg
mov
iret
out
dec
movsl
mov
adc
jbe
jnp
push
cmp
push
jns
mov
mov
xchg
call
cmp
dec
mov
dec
repnz
pop
stos
into
or
adc
dec
xlat
push
sbbl
push
or
iret
mov
fisubs
mov
call
cmp
dec
test
adc
xchg
loopne
xchg
lods
cmp
pop
sub
and
scas
fistpl
jp
bound
cltd
adc
mov
sbb
push
mov
mov
cld
aas
popa
mov
jg
pushf
decb
and
loope
jno
sub
or
scas
out
addr16
ret
cmp
jb
in
mull
stc
insl
xchg
push
sbb
cmpsb
xchg
leave
dec
push
out
xchg
sub
outsl
sub
xlat
dec
jno
mov
add
outsb
mov
outsb
push
call
sub
jb
mov
xor
jmp
xor
stos
sub
mull
jo
aas
popa
arpl
dec
mov
jp
pop
dec
cmp
mov
xlat
inc
inc
push
shrb
mov
sarb
add
ror
fwait
shll
dec
dec
lahf
push
push
sub
cmp
fs
lret
out
out
sbb
out
movsb
or
dec
or
push
lcall
pushf
movsl
iret
xchg
mov
lea
mov
mov
push
sub
in
dec
pop
sub
popa
push
scas
or
cmp
popf
mov
jle
fldt
pop
mov
loopne
sub
and
pop
and
subb
daa
jle
cmp
xchg
adc
sub
or
or
imul
inc
jmp
xorl
fdivs
mov
imul
lds
and
add
mov
dec
or
mov
cmp
inc
dec
iret
loopne
orl
bts
fmull
std
loopne
pop
inc
aam
add
add
int
inc
cmp
add
sahf
pop
fisttps
ja
daa
adc
jnp
in
xchg
jl
inc
or
mov
outsb
or
sbb
push
shrl
inc
sub
mov
arpl
jp
sbb
jle
sbb
mov
loope
scas
inc
mov
xchg
cli
leave
add
push
repz
mov
setl
test
sub
push
add
xchg
jnp
sub
daa
in
into
insl
xchg
into
imul
test
outsl
das
out
push
push
int3
push
outsl
push
or
jne
fisttpll
mov
push
cmpsl
out
test
ret
lea
xchg
outsl
in
sti
cs
pop
repnz
ficoms
dec
mov
sbb
mov
inc
ja
inc
addb
test
mov
out
push
mov
mov
mov
mov
or
into
testb
jg
cld
adc
xchg
enter
cltd
dec
mov
enter
pushf
cmp
push
push
sub
arpl
jmp
jb
adc
push
jg
lret
pop
pop
sahf
sub
cmpsl
aam
pop
xchg
push
aad
xchg
test
push
ret
jle
nop
mov
mov
and
sbb
pop
dec
subl
jne
adc
jo
mov
ljmp
lods
push
xchg
out
sub
inc
and
push
xor
jecxz
inc
jmp
dec
stos
ljmp
pop
cmp
cli
aaa
sub
mov
xchg
cmp
jecxz
add
add
daa
rcrl
call
adcb
mov
mov
mov
inc
xchg
jl
push
jge
sub
cmp
inc
sbbb
nop
dec
sti
xor
or
xor
pop
fmull
rcll
insl
dec
inc
cmp
pop
loopne
test
dec
xchg
rorl
dec
into
adc
out
rclb
jecxz
mov
push
repz
xchg
xor
push
lret
xchg
push
out
mov
jmpw
xor
dec
mov
jmp
sbb
pusha
jge
jmp
mov
in
fwait
lahf
cwtl
in
pushf
loopew
popf
sbbl
lahf
test
icebp
mov
lds
bound
jecxz
xchg
stos
ljmp
mulb
jmp
call
mov
pop
inc
stos
lock
add
push
subl
jb
xchg
cmc
repz
xor
mov
jae
mov
xchg
jne
dec
mul
mov
clc
cmpsl
ja
js
js
cli
cs
fidivrs
cmpsl
mov
dec
jge
decl
inc
xchg
aas
add
ret
add
addb
xchg
inc
inc
lds
test
or
pop
pushf
cmc
pop
and
and
dec
and
or
or
out
push
imul
loopne
xlat
cmp
xor
in
adc
lea
push
cmpsb
sub
imul
cs
xchg
cmp
sub
imul
jp
fildll
arpl
dec
stc
push
mov
xchg
dec
jecxz
arpl
mov
inc
sbb
jb
mov
shll
push
xchg
jns
push
cmpsl
jo
cmp
mov
dec
jge
stos
ret
jae
insl
inc
adc
sub
nop
adc
les
rcll
inc
jo
push
js
cmp
adc
adc
cmp
inc
mov
add
xchg
sub
sbb
jp
shr
sbb
push
mov
fs
cmp
mov
adcb
movsl
imul
subl
pop
xchg
and
outsl
xlat
addb
xor
gs
lcall
daa
test
jae
inc
fstl
push
or
or
lret
and
out
outsb
adc
adc
xchg
push
lret
cmp
stos
add
push
push
out
push
and
mov
pop
jnp
pop
aaa
fnsave
adc
into
hlt
mov
clc
pusha
mov
jl
xor
add
pop
jae
lods
stos
and
and
clc
sar
fsubs
cli
imulb
dec
lds
dec
xor
mov
push
cmc
lea
dec
xor
imul
loopne
js,pn
out
es
repz
mov
inc
jb
mov
pop
aam
fdivrs
mov
ret
xorb
push
jge
dec
sbb
loop
cmp
aam
xchg
dec
aas
orl
dec
inc
mov
inc
dec
adc
mov
repnz
iret
push
adc
movl
mov
sbb
int
jns
push
xchg
sub
xchg
daa
dec
lea
insb
xchg
adc
dec
push
push
loop
push
mov
pop
xor
test
in
xlat
insl
xchg
test
xchg
pushw
popf
adc
sbb
dec
cltd
pop
sub
pop
pop
pop
xchg
push
mov
pop
push
cmp
outsl
pop
popf
popf
loope
xor
out
daa
lahf
mov
mov
and
and
or
mov
pop
sub
int3
mov
ljmp
imul
pop
in
test
inc
jmp
incl
lock
scas
hlt
outsl
mov
nop
mov
addr16
jo
cmc
xor
pop
sbbl
je
div
xor
xchg
jl
mov
ja
stc
xchg
jge
aas
popa
mov
ljmp
dec
xor
push
fdivrs
jg
jg
sbb
rolb
pop
mov
mov
das
test
inc
movsl
aas
pop
adc
xchg
movsl
jns
in
movsb
sub
pop
shlb
adc
mov
das
ror
add
popa
in
xchg
jecxz
jo
xchg
or
hlt
pop
mov
mov
sbb
sbb
sub
sbb
push
dec
adc
mov
pop
mov
jp
mov
loope
and
imul
loop
sbbl
test
test
into
mov
add
stos
ljmp
ljmp
test
popf
jne
repnz
jne
mov
mov
or
scas
bnd
push
nop
xor
jnp
aad
push
add
fidivrs
cmp
clc
push
clc
fisttpl
loop
cli
xchg
mov
dec
call
inc
movsb
out
test
popf
loop
xchg
or
imul
jnp
or
add
es
push
hlt
push
push
iret
mov
inc
sub
dec
push
loope
push
xchg
jae
dec
movsl
mov
or
mov
adc
mov
dec
fmull
xchg
fcmovnbe
repz
xchg
out
xchg
mov
pop
dec
cltd
xchg
push
or
jb
mov
sahf
fidivl
sbb
dec
pushf
mov
fisubs
mov
cmc
addr16
jne
cmpsl
cmp
sbb
xchg
xor
aaa
test
adc
aaa
mov
call
scas
mov
lods
mov
popa
daa
dec
lods
std
repz
ret
xlat
clc
sub
xchg
mov
mov
cmp
repnz
mov
shll
cltd
inc
mov
dec
push
cmp
aas
rorb
ficoms
push
arpl
pop
lock
push
or
adc
inc
inc
scas
stos
adcl
pop
rcl
leave
inc
dec
push
cmpsl
inc
cmp
jl
lret
xlat
pop
and
dec
mov
lods
mov
mov
sub
and
insb
or
out
negb
dec
popa
data16
enter
movsb
out
in
pop
insl
sbb
pop
mov
enter
lods
lcall
loopne
pop
out
pop
jmp
xor
shll
mov
in
xor
and
push
gs
shlb
ret
stos
cli
and
jp
pop
mov
std
scas
pop
jecxz
mov
ja
push
lret
lock
pop
subb
or
mov
add
je
jno
cmp
fpatan
mov
push
cmp
into
mov
jo
out
fsub
gs
add
mov
and
ret
in
add
std
lahf
scas
cmp
mov
or
and
in
out
jae
or
lret
in
outsl
arpl
nop
xchg
inc
mov
cmpsl
dec
pop
insl
or
add
sbb
dec
std
in
jmp
push
addr16
aas
out
in
push
daa
iret
shll
gs
nop
repz
sbb
rcr
pop
sbb
aam
sbb
test
dec
fisubs
in
push
mov
repz
nop
es
xlat
mov
pop
andb
bound
push
inc
inc
daa
loop
and
js
inc
imul
inc
ljmp
mov
ja
push
repnz
lods
jmp
mov
cmp
or
sbb
cvttps2pi
shlb
insl
lret
jne
xchg
scas
inc
pop
enter
cmp
mov
push
hlt
cmp
mov
xchg
enter
push
mov
push
jp
mov
cmp
fs
mov
decl
dec
add
push
cmp
arpl
dec
js
dec
mov
dec
dec
sub
push
mov
hlt
pop
xchg
pop
or
push
ljmp
outsl
mov
pop
adc
pop
clc
push
and
sbb
lods
sbb
rcrl
jmp
insb
push
or
insb
pop
cmp
push
pop
push
mov
pop
jp
sbb
in
xchg
adc
and
pushf
inc
sub
add
scas
out
arpl
push
and
lahf
cmc
cs
daa
mov
idivl
gs
inc
test
imul
push
jecxz
sub
in
or
push
inc
int
divl
add
test
mov
shl
xor
cmp
fwait
and
pop
hlt
mov
out
add
and
lods
xor
inc
test
jnp
sti
out
pop
shll
xor
lds
je
pop
cmp
lds
mov
adc
lret
xchg
add
test
dec
sub
pop
push
aad
pop
and
lahf
push
pop
inc
nop
jo
scas
scas
mov
mov
xchg
dec
pop
xchg
or
jge
mov
mov
out
and
pop
out
lahf
fistpl
sbb
ret
sbb
pop
add
xor
xor
aaa
lahf
mov
xor
aad
adc
mov
jge
shl
mov
xor
shr
lcall
imul
jnp
push
dec
in
sbb
push
int3
pop
jle
fldl
mov
rolb
cmp
or
cld
les
pop
mov
xor
test
jl
enter
outsl
adc
int3
iret
inc
xchg
cmpsb
push
fwait
cmp
nop
push
mov
mov
dec
ds
jmp
mov
push
rcl
pop
pop
movsb
aad
pop
pop
sbb
cltd
call
dec
call
leave
into
cmpsl
orb
dec
xchg
xchg
jne
mov
ret
shlb
popa
into
jp
mov
dec
shrl
imul
in
test
xchg
pop
push
push
jbe
rcll
testb
push
stos
and
jo
pusha
subb
scas
cmp
mov
mull
push
and
jns
jns
mov
les
inc
loop
stos
sub
scas
mov
jge
lahf
andl
imul
sub
sbb
nop
test
mov
cmp
xor
xchg
lock
repz
movlps
lds
or
mov
negl
ljmp
jne
add
test
mov
pop
inc
sarb
cld
or
sbbl
jecxz
add
lea
test
dec
mov
ret
and
push
sub
fadd
inc
or
repnz
ljmp
popa
sub
cmpsl
push
lahf
and
push
lahf
les
lock
pop
push
adc
cli
push
hlt
cs
test
insb
loopne
fisttps
nop
xor
pop
test
sbb
sbb
mov
repnz
xlat
pop
lahf
adc
call
or
cli
cmp
sub
jge
mov
mov
pop
fildll
or
lods
sbb
in
mov
imul
mov
ss
in
inc
mov
jne
and
clc
icebp
cmp
adc
adc
hlt
enter
inc
cmc
test
mov
sti
movsb
cld
jg
adc
jge
rcrl
aas
mov
ds
ror
add
je
call
jg
into
pop
xorl
add
les
pop
jb
dec
sbb
mov
nop
into
and
aad
dec
pop
out
xor
out
adc
jnp
push
dec
pmulhw
enter
imul
push
pop
sub
andl
orb
inc
sub
roll
sbb
insb
pop
or
sbb
gs
movsb
add
movsl
push
pop
adc
in
pop
lcall
das
imul
scas
adc
cld
int3
sub
and
cmpsl
outsl
push
movsl
jno
out
lock
mov
sub
xchg
repnz
sti
jmp
jae
mov
xor
shrb
jbe
inc
subb
mov
icebp
divl
cmp
mov
dec
lret
leave
cmc
jnp
fnsave
sbb
cmp
mov
jp
dec
push
sbb
lds
or
shlb
flds
inc
sbb
pop
xchg
stos
xchg
dec
arpl
adc
fbld
push
ficoml
jmp
loop
dec
mov
in
rcl
je
adc
out
pop
filds
ret
sub
xor
sahf
cmpsb
insl
adc
sub
push
repz
push
pop
hlt
push
loope
cmc
push
fstpl
mov
in
fimull
jmp
and
mull
popa
push
popf
and
sbb
pop
mov
cmp
jbe
jne
gs
sti
cmpsl
sub
incb
xlat
std
mov
aaa
xor
sub
fildl
cmp
gs
and
pop
cwtl
repnz
push
pusha
jae
pop
pop
adc
and
xor
mov
mov
pop
lcall
mov
sar
mov
data16
cld
xchg
scas
enter
adc
roll
push
roll
push
mov
cmpb
sbb
push
rcll
stos
nop
fldl
sbb
jae
mul
sar
adc
adc
sbb
mov
push
xchg
movsl
push
arpl
mov
adc
jo
dec
scas
cmp
aad
inc
push
mov
pushf
pop
loop
jns
mov
shlb
fsubl
fwait
pop
pusha
fprem
and
ret
xor
jae
and
mov
imulb
bound
movsb
or
lods
in
fwait
jge
cmp
mov
xor
cmp
and
jg
or
jbe
cmp
nop
icebp
mov
aas
jne
cmp
cmpsb
mov
dec
add
aam
mov
jge
les
bound
add
inc
dec
cmp
add
cmp
sub
push
jle
jns
xor
push
mov
mov
and
pop
shlb
rcrb
mov
iret
inc
sbb
enter
push
int3
ret
xor
jp
jne
in
dec
xor
lods
popa
lea
shlb
iret
nop
ret
bound
cmp
pop
inc
daa
adc
lcall
xchg
push
cs
fstpl
push
fcompl
sbb
or
sbb
jno
mov
rep
shld
pusha
and
push
jo
pusha
mov
insb
xlat
testb
jbe
stc
ds
and
shrb
fs
out
subl
add
xor
mov
jmp
out
lods
jb
mov
xchg
jp
jae
int
cs
add
mov
xchg
and
mov
enter
ret
lods
mov
shll
jp
mov
push
call
mov
mov
das
fsubrs
dec
ds
sbb
xor
jecxz
je
dec
dec
rorl
and
stos
jnp
add
out
mov
or
or
xchg
bound
mov
hlt
xchg
pop
repnz
jmp
pop
mov
dec
xchg
dec
jno
aam
mov
out
ror
jo
push
pop
rclb
add
insl
adc
fistps
push
repnz
int
lahf
sbb
jmp
loop
jae
pop
or
movsb
mov
pop
popf
jg
adc
mov
pop
jb
lcall
mov
xor
mov
mov
cmpsb
jo
out
xor
imul
lcall
repz
fbld
stos
jge
xor
ficoms
mov
icebp
jecxz
mov
adc
ja
je
ja
movsl
dec
pop
int
mov
ret
pop
mov
std
enter
mov
or
ds
rol
xorl
nop
and
pusha
rolb
les
mov
add
fiaddl
pop
out
push
dec
pushw
sbb
mov
inc
bound
jb
mov
int
lods
fisttpll
into
xlat
push
int
push
pop
sbb
mov
sbb
push
pop
jecxz
in
and
adc
in
fsub
imul
cltd
xchg
fwait
mov
pop
jae
imul
outsl
sbb
mov
mov
pusha
rcrb
xchg
test
das
mov
ret
dec
in
stc
cmpsl
mov
xor
jno
sub
cmp
pusha
add
std
cmp
stos
dec
js
mov
and
cmp
xor
notl
xor
clc
inc
test
jae
dec
hlt
mov
inc
ss
sbb
ja
cmpsb
mov
mov
sar
push
orb
insl
enter
fmull
rclb
push
mov
inc
dec
pop
jmp
test
adc
pushf
pushf
sbb
sub
es
push
mov
mov
or
mov
dec
mov
paddsb
xor
xchg
mov
mov
sbb
fisubs
out
insl
icebp
rep
imul
pop
das
pop
sbb
sub
pop
mov
jno
insl
mov
out
je
jbe
imul
sarb
ret
loope
scas
shll
out
aas
mov
js
pop
cmp
insb
idivb
shrl
sub
mov
and
lea
add
stos
mov
inc
in
loope
mov
mov
lock
mov
pop
push
mov
insb
clts
hlt
std
xorb
cmc
idivb
mov
adc
cmp
mov
out
xchg
divl
inc
mov
xor
sbb
or
add
jg
mov
addl
mov
in
xchg
fsts
xchg
cli
movsb
testb
inc
pop
mov
fildl
test
or
lahf
and
lea
lock
pop
add
push
pop
jb
nop
mov
sbb
bound
ljmp
popf
and
adc
pop
ds
jne
mov
icebp
mov
fsub
in
jae
mov
cmpsb
pop
jno
sbb
or
out
rcl
jecxz
fldenv
das
mov
and
xchg
das
idivb
sub
jmp
test
in
jl
lods
lea
and
outsb
mull
call
hlt
sub
add
sub
mov
dec
or
int
mov
pop
xor
xor
sub
adc
mov
or
inc
into
cld
aas
lds
sub
mov
mov
push
aam
lcall
fiaddl
pop
mov
psubusw
leave
shrb
int
scas
lret
dec
test
int
or
jmp
and
imul
movups
ficoml
push
dec
sbb
xchg
adc
push
pop
fldl2t
push
sbb
test
cwtl
inc
mov
and
ljmp
sahf
jecxz
insl
and
repz
xchg
in
jne
xor
repnz
mov
jle
imul
dec
test
aas
jbe
aam
outsb
aad
out
cltd
mov
fdivl
push
jne
sub
icebp
jb
inc
sub
xor
out
sub
xor
dec
dec
inc
ror
mov
push
lods
clc
or
dec
idivb
pop
cmp
gs
aas
pop
pop
add
rol
dec
jns
hlt
pop
mov
sysret
inc
ret
andl
aas
movsl
dec
or
push
add
dec
lods
or
in
mov
in
push
dec
dec
into
push
push
fsub
or
or
mov
dec
dec
xchg
dec
lret
sbb
push
mov
outsl
lea
loope
mov
adc
mov
pop
sub
ficompl
addr16
adc
push
push
movsl
fisubrs
cmp
ret
xor
insl
out
popf
sub
jecxz
add
mov
in
jb
cmpsl
insb
push
mov
jp
scas
mov
mov
mov
imul
iret
iret
in
mov
lcall
mov
or
popf
mov
loopne
or
stos
or
addl
jne
mov
add
mov
add
jecxz
sbb
cmp
mov
add
std
fnstenv
jl
sub
sbb
add
sub
xchg
adc
aam
add
stos
jmp
aad
test
mov
or
xchg
pushf
dec
daa
jmp
not
ficoms
pop
push
xchg
push
cmp
adc
lret
xchg
loop
nop
pop
in
sbb
xchg
jo
push
loope
lahf
push
xlat
pop
inc
out
sub
or
push
rcll
adc
repz
fsub
ljmp
mov
scas
pop
dec
and
sbb
out
mov
push
jnp
push
sbb
in
rcll
movsb
xor
jecxz
leave
jmp
je
mov
pop
imul
cmp
mov
jge
inc
inc
lods
ficomps
cmp
scas
in
jo
and
test
mov
mov
mov
movb
jmp
das
sarb
rolb
push
xchg
or
push
mov
dec
inc
xchg
lret
inc
out
fs
das
mov
push
dec
cmp
mov
pop
fwait
shrl
xor
mov
push
dec
aam
dec
dec
sbb
push
out
gs
int
xlat
nop
pop
add
sbb
jl
rcll
fisubs
dec
xlat
cld
adc
inc
and
pusha
cmp
icebp
jp
bound
arpl
fwait
scas
outsl
imul
fwait
pop
jo
and
lods
push
xor
js
loop
jns
mov
out
std
jne
test
std
pop
scas
mov
fiaddl
and
into
xor
jo
jmp
dec
mov
mov
add
lret
dec
inc
js
imull
dec
sti
inc
jo
mov
or
jb
repz
jae
je
adc
ds
mov
sbb
adc
push
aam
cli
jg
xor
push
fiadds
repz
dec
aam
xchg
clc
mov
insb
cmp
inc
lahf
and
or
or
fwait
inc
or
dec
push
mov
inc
push
inc
fs
and
addr16
dec
cmpsb
mov
fs
dec
jno
mov
cmp
addr16
dec
int
sbb
pushf
pop
fxch
addr16
ja
fs
mov
sbb
mov
outsb
and
ret
pop
sahf
mov
int
cmp
cwtl
cmp
mul
pushf
jae
mov
out
out
adc
mov
fimuls
out
cmpsb
shll
dec
jnp
cmpsl
fs
dec
mov
lock
js
mov
cmp
ret
out
cmp
inc
mov
sbb
cld
jae
sbb
aas
jae
lret
mov
enter
nop
je
int3
xor
push
add
outsb
aas
mov
push
or
inc
push
repnz
dec
adc
jle
cmp
sbb
popa
call
mov
sbb
mov
fcom
sbb
lock
dec
fimuls
adc
push
nop
ljmp
packsswb
mov
mov
xchg
adc
rcrb
adc
and
push
adc
arpl
xor
pop
xchg
adc
lods
and
mov
ret
and
jnp
sub
and
lods
loop
rep
pop
lcall
punpcklwd
pop
pop
sub
pop
jcxz
and
inc
loop
lds
pushf
push
insl
xchg
and
cwtl
stc
and
in
stc
roll
mov
jmp
add
push
add
jl
mov
adc
ret
xorl
xor
jno
mov
xor
aaa
cmp
push
std
mov
lret
test
adc
incb
arpl
or
subl
add
inc
cmp
or
dec
mov
into
mov
push
mov
mov
int
arpl
ficompl
or
or
inc
xor
xchg
lock
push
lods
iret
cli
cmp
out
adc
inc
or
shrb
dec
out
fsubrs
xchg
popa
jo
push
sbb
imul
pop
jnp
cld
outsl
pop
cmp
mov
aad
das
ret
shll
outsb
mov
shlb
movsb
js
and
mov
and
cmp
mov
xor
lret
jo
aaa
shll
jge
imul
or
mov
shrl
sbb
xor
jne
sbb
int3
add
insb
mov
inc
shlb
add
dec
or
adc
lcall
xor
test
sarb
mov
mov
andb
push
fidivl
insb
mov
aam
and
int
xchg
dec
xchg
dec
pusha
xchg
dec
or
leave
dec
xchg
sbb
mov
std
movsl
shl
fcom
aad
in
or
add
and
cltd
hlt
dec
insl
lahf
out
loopne
loopne
cs
loope
outsl
pop
notb
pop
out
mov
xchg
push
pop
pop
pop
ficompl
popa
cs
mov
mov
sbbb
loope
imul
jo
push
loopne
mov
lahf
inc
xchg
aaa
clc
imul
inc
sub
and
inc
adc
lods
add
jp
inc
cltd
es
mov
add
mov
xor
in
cmp
stos
fwait
inc
xchg
xchg
outsb
repnz
popa
or
nop
inc
and
mov
bound
xor
cmc
aaa
mov
jle
int
jnp
leave
cwtl
imul
cmp
mov
sahf
xchg
mov
pop
outsb
jg
push
shl
js
test
add
add
adc
xchg
inc
xchg
enter
or
test
lret
fisttpll
stos
fisttpll
xchg
mov
bound
dec
push
in
fnstenv
sub
data16
addr16
ficoml
push
xchg
push
xchg
stos
sahf
lahf
xor
and
adc
xor
and
jo
xor
jo
mov
and
test
sub
and
into
ja
data16
mov
jo
xchg
sub
jmp
in
popf
imul
hlt
scas
mov
mov
xor
call
adc
repnz
ss
pop
push
add
mov
std
and
jbe
mov
add
fnstsw
add
cs
int
fmull
push
xchg
push
mov
add
ficoml
push
fisubs
mov
dec
xchg
rcrb
call
mov
mov
pop
inc
out
cld
and
pop
repnz
jnp
pop
add
mov
mov
popf
scas
adc
xor
movsl
aas
cmp
lods
jecxz
sbb
add
sub
mov
inc
ljmp
cmp
pop
mov
xor
add
cwtl
mov
push
jno
ret
sub
repz
inc
out
stos
andl
or
pop
jle
lahf
movsb
cmc
cmp
rclb
sub
adc
xor
xchg
cmc
int
or
xlat
push
cmp
mov
shll
inc
push
push
dec
mov
xchg
inc
out
mov
sbb
test
std
pushf
rcr
cmp
add
incb
push
aam
leave
push
in
fadd
les
repz
sub
pop
out
dec
inc
adc
jbe
xchg
lret
xchg
mov
mov
mov
pushf
lret
outsl
test
dec
xorps
data16
pop
and
cli
icebp
add
mov
insb
pop
fildl
in
daa
mov
das
cmpsb
movsb
sub
sub
shlb
jg
and
mov
fidivl
stc
sbb
fidivl
adc
xor
pusha
sahf
add
movsb
mov
mov
jae
xchg
and
stos
mov
insb
in
jo
roll
out
mov
call
sub
add
cmp
push
mov
aas
xor
repz
testl
test
mov
aam
xor
push
mov
cmpl
or
stc
inc
push
xor
jp
pushf
cld
mov
lods
mov
jae
push
mov
push
pop
js
or
jecxz
adc
xchg
test
mov
int3
sbb
dec
popf
movsl
stc
fwait
mov
pop
setae
adc
rcll
xchg
pop
daa
push
sbb
dec
sbb
sbb
lods
pop
pop
scas
fcomps
addr16
loope
push
inc
push
fistl
and
or
in
mov
jecxz
fiaddl
jp
arpl
pushf
cmc
iret
sub
cmp
in
inc
in
cmc
and
and
dec
mov
cmp
jmp
sub
adc
dec
dec
sub
das
dec
sub
lods
ret
stos
cmp
in
sub
xchg
lods
jbe
popf
mov
lea
jmp
repnz
aaa
sbb
repz
fnsave
lret
jns
adc
mov
sbb
lods
scas
mov
xchg
add
jp
jmp
mov
cld
aaa
icebp
std
cmp
inc
mov
push
stos
inc
inc
add
aam
flds
test
inc
sbb
daa
iret
mov
add
data16
mov
mov
mov
or
fists
and
mov
adc
xchg
sub
in
adc
lods
adc
fdivp
adc
sbb
ss
aad
repnz
in
xchg
inc
outsb
sbb
out
pop
xor
movsl
dec
sti
f2xm1
adc
dec
fstp
popf
mov
mov
dec
imul
loop
lret
mov
scas
mov
outsb
mov
call
sar
push
add
sbb
push
ror
lods
fisttpll
repnz
into
mov
xchg
jns
inc
mov
xchg
cmp
xor
push
testl
fisttps
push
mov
adc
ret
push
rorb
add
loope
mov
and
mov
lds
xchg
mov
add
ret
adc
inc
xchg
ljmp
xchg
sub
xchg
sub
or
imul
hlt
jo
mov
dec
ja
or
jae
mov
adc
roll
jbe
les
push
test
adc
aam
jns
lret
cmp
sti
push
dec
mov
sarb
push
mov
flds
lcall
sbbb
pop
and
loopne
test
pop
loop
enter
arpl
in
lret
movsl
repz
dec
daa
jbe
call
mov
dec
sub
jmp
shrl
push
sub
aam
or
push
icebp
dec
xlat
mov
xchg
jb
pop
xor
sbb
fwait
sbb
pop
bound
cmp
mov
ljmp
stos
and
mov
mov
inc
jae
add
cmpb
cmp
test
pop
inc
lods
enter
cs
mov
or
lods
xchg
jo
into
xor
or
jae
aad
dec
xchg
cmc
adc
rcrl
jbe
fdivl
push
popf
clc
adc
aam
jns
mov
push
es
test
sbb
lcall
xor
sbbb
pop
cmp
loopne
test
pop
loop
enter
arpl
dec
and
shlb
mov
or
dec
int
adc
xchg
pminsw
stos
pop
nop
imul
sub
adc
pop
shrl
push
das
mov
mov
xchg
jno
push
xor
repz
mov
cltd
je
pop
xor
fdivl
pop
cmp
stc
cmp
mov
pusha
cmp
cld
aas
ret
bound
and
test
incl
mov
es
mov
inc
addl
xchg
mov
or
arpl
or
int
sbb
leave
pop
mov
and
mov
test
aad
ljmp
mov
and
nop
nop
bound
lcall
lret
dec
outsl
aad
jno
mov
std
xlat
pop
jae
loop
jp
jns
jnp
cld
fwait
jl
pop
outsb
mov
sub
add
dec
xor
xor
cwtl
out
mov
movsl
jns
mov
xchg
pop
daa
cmp
ljmp
xor
gs
ret
inc
ljmp
sub
sub
insl
imul
lea
in
in
shrl
scas
fdivs
mov
gs
mov
adc
dec
out
mov
hlt
mov
cmp
mov
mov
dec
cmp
mov
adc
and
cmp
sti
adc
call
call
rolb
add
lds
dec
test
sub
push
test
ljmp
in
dec
cwtl
sti
addr16
sbb
test
es
pop
loopne
xchg
sub
adc
out
push
notl
xlat
xchg
shlb
xor
fnsave
jo
pop
adc
xor
in
pop
push
and
lcall
insb
sub
cs
jno
pop
mov
mov
and
test
sti
sbb
inc
es
pop
out
push
lret
mov
add
aam
sub
test
pop
xor
int3
stos
jmp
sahf
push
cmp
jmp
add
dec
xor
test
sti
outsb
insb
xor
movsl
push
cmp
flds
js
divb
jns
push
cmp
mov
scas
mov
adc
xchg
shll
inc
inc
bound
mov
scas
icebp
fsts
mov
inc
test
test
xchg
gs
shll
xchg
leave
or
mov
xor
int
push
outsb
int
lock
dec
ret
cmpsb
dec
scas
add
cwtl
sub
cmpsl
push
pop
push
inc
scas
adc
nop
aam
xor
sbb
aam
jmp
fcomps
cwtl
jl
pop
xlat
aad
push
ja
push
cwtl
fwait
lahf
popf
xor
push
adc
ffreep
cmp
adc
pusha
mov
ret
mov
add
cs
andb
daa
dec
xor
call
repz
je
sub
in
xor
lods
dec
insl
xorb
icebp
add
cmp
cmpsb
lock
rdmsr
ss
pause
mov
mov
jne
hlt
cmc
mov
divl
mov
push
js
idivb
sub
mov
test
cmp
std
imul
mov
idivb
fldl
mov
xchg
mov
and
dec
mov
iret
cmp
jecxz
loopne
incb
lret
fisttpll
push
adc
mov
add
or
adc
adc
jecxz
push
pop
rclb
inc
nop
out
push
push
pop
leave
adc
adc
adc
push
xchg
jp
push
dec
aad
or
nop
cltd
push
das
lcall
test
xchg
fnstsw
popf
add
adc
jmp
loope
stos
pop
mov
andb
and
jmp
out
icebp
sahf
cmpsl
inc
push
ljmp
icebp
jne
sub
add
int3
scas
sub
xor
lods
icebp
in
mov
das
jb
inc
fsubrs
icebp
xor
shl
ljmp
jbe
sub
aad
mov
push
rolb
add
cwtl
xchg
cmp
mov
lds
push
inc
dec
mov
int
andl
rorb
add
adc
and
xchg
decl
or
adc
xchg
inc
dec
shlb
dec
or
mov
inc
dec
mov
dec
inc
int
add
rol
mov
jge
or
adc
push
mov
xor
mov
ja
iret
fcomp
xor
bound
pop
mov
clc
in
fstpt
fwait
je
adc
outsl
out
fsubp
jae
mov
push
lahf
std
pusha
xor
fsubs
jle
test
and
add
es
movsl
push
push
out
out
mov
or
imul
fbstp
mov
mov
outsb
or
fstpt
out
clc
mov
mov
dec
cmp
pause
mov
mov
sarl
in
idivb
sahf
shrb
adc
stc
xchg
mov
sbb
lret
inc
repz
test
sbb
dec
mov
pushf
mov
push
inc
inc
dec
stc
add
sbb
addb
popa
test
push
jle
mov
dec
dec
push
push
dec
ss
rorb
lret
mov
dec
xor
into
xor
test
cltd
pop
push
lods
adc
shrb
xchg
out
pushf
or
adc
push
int3
aad
push
test
push
movsb
popa
iret
sbb
mov
pop
loope
adc
movsb
js
movsl
push
pushf
cli
pop
loopne
aad
mov
and
pusha
fcompl
sbb
lahf
mov
and
shl
out
pushf
movsl
inc
xchg
jo
daa
jno
sub
loopne
xchg
or
dec
xor
dec
mov
insl
clc
or
cmp
mov
enter
mov
mov
inc
ds
cmc
xchg
mov
mov
ds
scas
clc
xchg
mov
test
fnstcw
sbb
fwait
mov
lret
sbb
shll
lods
dec
mov
iret
jl
adc
push
push
mov
sarb
mov
dec
cmpsl
push
rorb
lret
movsl
aad
mov
pop
push
les
inc
mov
dec
pop
pop
adc
pop
fisttpl
pop
lret
aam
fimuls
repnz
push
pop
int
mov
push
push
xchg
sbb
pop
sub
fstpt
pop
push
mov
fisubrs
cmp
push
pop
mov
loope
mov
mov
mov
sbb
ret
out
lock
cmpsb
inc
addr16
pop
sub
jmp
mov
stos
cmp
and
sub
mov
mov
outsb
or
mov
out
cmp
jno
xor
mov
xor
xor
adcl
cmp
mov
sbb
movsb
inc
repz
lret
jecxz
je
pop
jle
mov
aas
fldl
pop
or
pop
sbbl
les
sbb
pop
adc
and
adc
movsl
push
adc
xchg
add
or
push
or
lea
cmpsl
mov
shlb
push
xor
rol
xor
jecxz
int
mov
xor
mov
jge
fnstenv
cltd
std
arpl
sub
cmp
jae
inc
setge
std
pusha
cmp
mov
sub
outsb
movsb
int3
imul
bound
movsl
xor
jno
cmpsl
pop
arpl
je
or
testl
scas
xor
and
stos
das
clc
iret
cld
mov
jge
scas
xor
sar
popf
xor
jle
xor
lods
mov
push
popl
pop
add
push
jp
test
cmp
cld
adc
mov
lcall
xchg
ds
wbinvd
jbe
pop
orb
or
ret
inc
and
pop
and
cmpsb
adc
inc
leave
xchg
sub
test
xchg
sub
stos
push
jbe
iret
shrb
out
cltd
pop
push
lods
adc
mov
das
xchg
jo
or
adc
push
int3
aad
xor
lahf
or
and
bound
pop
mov
arpl
rcr
pop
cmp
adc
gs
fidivrs
sahf
arpl
pop
mov
loope
xlat
insl
loopne
popa
in
and
mov
gs
scas
xchg
push
sub
xor
ljmp
or
ss
xor
or
into
cmp
mov
lret
repz
arpl
aas
lods
notb
ja
cmp
lock
mov
jp
cmp
inc
mov
cltd
mov
pop
ds
cwtl
outsl
std
orb
mov
add
mov
dec
jecxz
mov
cld
add
cmp
push
mov
roll
out
test
rcr
push
or
out
add
sbb
lcall
mov
xor
mov
sbb
mov
xor
and
push
adc
lcall
cli
daa
push
cwtl
sbb
jnp
push
sbb
sub
pop
jl
shrb
dec
sub
loop
mov
sub
xor
out
lock
cmpsb
inc
xorl
repz
mov
sub
mov
mov
outsb
or
mov
out
testl
test
mov
scas
scas
cmc
ja
xchg
jbe
ja
pop
inc
xor
rcrl
sbb
inc
repz
adcl
ds
mov
lret
push
inc
mov
popf
jecxz
cmp
mov
fst
cmp
push
decl
adc
roll
out
dec
push
rorl
int3
aad
inc
mov
dec
rcll
push
push
addr16
inc
in
push
push
pop
enter
int
fcomps
pop
lret
nop
adc
jae
leave
adc
pusha
mov
je
inc
ret
negb
and
sbb
xchg
fdivrl
pushf
andb
mov
fistpll
jl
pop
pusha
jmp
jg
mov
and
cs
andb
pop
xor
pop
sub
jmp
inc
push
je
sub
in
push
dec
sub
sti
fs
js
jl
lods
xor
sar
mov
push
mov
cmc
lahf
ljmp
jbe
sub
aad
fwait
add
xor
fdivr
xchg
add
xchg
xchg
cmp
jne
xchg
lret
push
inc
rorb
add
andl
int3
dec
cld
add
cmp
add
mov
inc
push
mov
push
inc
xchg
aam
fadds
mov
pop
mov
iret
mov
push
mov
insb
repnz
lock
mov
lret
adc
aad
fisttps
push
mov
push
pop
and
ret
negb
and
sbb
sub
push
fwait
stc
pop
stos
es
push
sahf
cld
pop
es
and
daa
stos
pop
mov
sbb
scas
shlb
popa
out
test
pop
xor
gs
mov
push
sub
xor
mov
insl
or
aam
movsl
out
mov
mov
dec
jno
jnp
xor
repz
std
push
push
je
jle
xor
insl
mov
ja
sub
add
push
jp
test
cmp
aad
push
jae
lcall
cmp
mov
cld
mov
jnp
ret
mov
jbe
sti
inc
ret
and
xchg
movsb
sbb
jg
es
xchg
add
or
adc
in
xchg
inc
dec
fldt
push
lods
adc
sbb
pushf
or
or
and
adc
dec
xchg
hlt
push
pop
popa
iret
sbb
pop
mov
add
sbb
push
cli
pop
push
lcall
lahf
sub
sub
popf
and
pop
bound
and
fnsetpm(287
andl
out
cmpsl
inc
mov
push
loope
xchg
cmp
in
mov
mov
outsb
or
mov
mov
mov
xchg
cmp
pause
mov
icebp
je
xchg
inc
inc
jecxz
jecxz
aas
push
inc
cmp
js
or
iret
fs
and
mov
stos
cwtl
aas
fstpl
inc
int
and
data16
add
inc
xor
and
xor
sub
or
push
mov
mov
out
mov
out
push
aas
arpl
into
lea
pavgw
rcrl
imul
int
sbb
ss
out
nop
pop
lock
mov
dec
inc
cltd
sbb
xchg
pop
cmp
cs
mov
cmpsl
fsubrp
sub
fstps
loope
cltd
ja
rolb
shll
cmpsb
movsl
inc
imul
out
add
xchg
jmp
push
mov
stos
push
iret
in
pop
mov
mov
mov
lret
notb
jge
cmc
xchg
mov
jecxz
int
adc
ja
and
js
outsl
aaa
mov
ret
js
je
les
mov
aam
jmp
jge
ja
push
psraw
cld
lcall
pop
sbbl
loopne,pt
test
fs
mov
pop
sbb
xor
int
int3
inc
mov
in
bound
rorb
dec
adc
les
sbb
xchg
scas
jno
popf
xor
int3
and
mov
into
loopne
xchg
mov
fsub
ja
mov
sbb
pop
pop
scas
movsb
pop
pop
xchg
pushf
pop
lcall
xor
movsl
gs
mov
sti
sbb
mov
fldl
icebp
and
cmc
lahf
jno
sub
sub
xor
or
in
xchg
cs
cmp
les
xor
hlt
add
test
or
aad
gs
mov
loopne
jne
sbb
and
mull
lret
adc
cmp
loopne
jnp
push
jnp
sbb
and
mov
sbb
push
lcall
or
cwtl
bound
popa
inc
pop
pop
cmpl
inc
or
mov
lds
xchg
and
test
test
shlb
test
pop
or
fldl
pop
rorb
push
dec
popa
dec
out
repz
push
lock
push
inc
push
leave
psrlw
rorb
inc
pop
sbb
lea
add
in
sti
insb
xchg
lret
mov
and
rcll
fldt
fidivl
pop
mov
sbb
pushf
mov
aam
popf
inc
jmp
and
xor
xchg
aas
in
pop
outsb
adc
add
test
scas
or
popa
mulb
dec
sub
in
arpl
je
imul
lods
int3
xor
push
xor
pop
shll
stos
repz
sub
xlat
mov
mov
push
mov
pop
cmp
cmp
cmp
cld
jns
push
mov
mov
pushl
dec
lret
shlb
int3
shll
mov
sahf
dec
hlt
leave
neg
or
or
leave
xchg
push
add
xchg
adcl
imul
sarb
sbb
push
mov
xor
into
imul
sahf
sub
stc
int3
pop
je
or
xlat
adc
jo
add
shll
mov
push
jae
or
xchg
negl
mov
add
mov
clc
andb
inc
jecxz
or
mov
inc
cmpsb
xor
push
scas
pop
xor
call
subl
stos
mov
push
leave
sub
outsb
mov
das
outsl
scas
lock
mov
jne
mov
xor
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
lcall
pop
pushf
fstpl
pop
sahf
fistps
pop
lahf
loopne
pusha
mov
ret
bound
in
movsb
in
movsl
out
data16
out
cmpsl
call
sub
ljmp
stos
in
sub
lods
in
sub
outsb
scas
out
das
outsl
scas
lock
icebp
xor
repnz
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
lcall
pop
pushf
fstpl
pop
sahf
fistps
pop
lahf
loopne
pusha
mov
ret
bound
in
movsb
in
movsl
out
data16
out
cmpsl
call
sub
ljmp
stos
in
sub
lods
in
sub
outsb
scas
out
das
outsl
scas
lock
icebp
xor
repnz
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
lcall
pop
pushf
fstpl
pop
sahf
fistps
pop
lahf
loopne
pusha
mov
ret
bound
in
movsb
in
movsl
out
data16
out
cmpsl
call
sub
ljmp
stos
in
sub
lods
in
sub
outsb
scas
out
das
outsl
scas
lock
icebp
xor
repnz
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
lcall
pop
pushf
fstpl
pop
sahf
fistps
pop
lahf
loopne
pusha
mov
ret
bound
in
movsb
in
movsl
out
data16
out
cmpsl
call
sub
ljmp
stos
in
sub
lods
in
sub
outsb
scas
out
das
outsl
scas
lock
icebp
xor
repnz
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
lcall
pop
pushf
fstpl
pop
sahf
fistps
pop
lahf
loopne
pusha
mov
ret
bound
in
movsb
in
movsl
out
data16
out
cmpsl
call
sub
ljmp
stos
in
sub
lods
in
sub
outsb
scas
out
das
outsl
scas
lock
icebp
xor
repnz
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
lcall
pop
pushf
fstpl
pop
sahf
fistps
pop
lahf
loopne
pusha
mov
ret
bound
in
movsb
in
movsl
out
data16
out
cmpsl
call
sub
ljmp
stos
in
sub
lods
in
sub
outsb
scas
out
das
outsl
scas
lock
icebp
xor
repnz
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
lcall
pop
pushf
fstpl
pop
sahf
fistps
pop
lahf
loopne
pusha
mov
ret
bound
in
movsb
in
movsl
out
data16
out
cmpsl
call
sub
ljmp
stos
in
sub
lods
in
sub
outsb
scas
out
das
outsl
scas
lock
icebp
xor
repnz
repz
hlt
xor
mov
xor
jbe
divl
ja
clc
cmp
stc
cmp
cli
cmp
sti
cmp
cld
cmp
mov
jle,pt
aas
jg
add
rolb
add
add
les
test
add
inc
xchg
pop
inc
xchg
or
leave
or
lret
mov
or
int3
or
mov
or
dec
mov
cmovg
rcll
push
xchg
rclb
push
xchg
rcll
push
xchg
aam
push
xchg
aad
push
xchg
push
push
xchg
xlat
pop
push
xchg
fcomps
pop
cwtl
fstps
pop
cltd
ficompl
pop
.byte
fistpl
pop
fwait
.byte
sub
add
add
add
push
outsb
inc
insb
xor
cs
insb
add
jo
add
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
sub
push
push
push
lea
mov
mov
rep
call
jmp
call
add
add
add
jmp
call
add
add
add
jmp
ret
add
add
add
add
jmp
ret
add
add
add
add
jmp
jmp
add
add
add
jmp
ret
add
add
pop
sub
mov
add
push
call
ret
ret
call
jmp
call
add
sar
inc
call
jmp
ret
pushl
mov
int3
ret
call
jmp
jmp
xor
int3
ret
call
jmp
jmp
add
add
cwtl
inc
add
shr
add
add
add
call
xor
pushl
mov
int3
ret
nop
jmp
ret
add
jmp
ret
ret
jmp
ror
jmp
ret
jmp
ret
call
call
xor
nop
rol
clc
jmp
jmp
adc
jmp
call
call
add
jmp
ret
into
jmp
jmp
add
jmp
ret
ret
enter
pushf
dec
sbb
xchg
aam
sub
daa
and
lret
adc
or
mov
lcall
ret
lret
rclb
mov
push
mov
mov
in
push
add
in
ljmp
loopne
cmp
dec
mov
loope
in
loope
stos
aaa
jno
into
incb
ret
lret
cmpsl
and
divl
mov
push
mov
adc
xchg
fwait
push
sarl
inc
inc
es
push
dec
int
pushf
ficompl
daa
mov
shr
push
popf
notl
dec
enter
stos
sbb
push
addr16
mov
enter
jae
xor
inc
mov
mov
addr16
arpl
sub
inc
shll
das
xor
inc
das
mov
or
inc
jecxz
pop
lock
outsl
lock
cld
fdivr
loopne
fcompl
jmp
test
test
mov
popf
cmp
jge
jge
imul
lock
cmp
cmp
sbb
call
in
mov
lds
sbb
movsl
mov
mov
push
addl
imul
dec
sbb
fstps
idivl
ss
add
push
in
loop
in
ljmp
into
push
pop
sbb
jl
stos
mov
mov
adc
sbb
outsl
jae
or
push
out
aad
bound
ljmp
xchg
negl
pop
imul
mov
pop
xchg
fldt
pop
mov
mov
xor
xchg
adc
jnp
cmp
adc
pop
out
pop
ficomps
stos
sub
cmp
ja
add
sbb
call
cld
add
cwtl
lret
movsb
je
and
out
das
lods
sarb
mov
lods
jmp
inc
jne
jg
inc
inc
sbb
xlat
sub
and
push
mov
add
iret
les
or
xor
popf
aam
test
clc
cmp
nop
mov
shll
cmovs
dec
loope
in
sub
jns
cmp
push
fmuls
push
jmp
xor
xchg
leave
lret
iret
shll
jo
inc
scas
xor
std
cmp
xchg
xchg
fwait
outsb
ds
push
mov
sbb
push
push
ljmp
adc
add
paddusw
sub
ret
call
int3
cltd
rcl
fcomp
outsl
mov
cmp
xchg
and
mov
jae
mov
push
sbb
repz
aas
sarb
mov
sbb
cmpsb
pop
in
call
or
fcmovnu
frstor
push
rolb
in
lea
imul
push
out
pop
and
aad
xchg
sbb
in
rcll
into
movsl
fisubrl
mov
dec
mov
or
out
sbb
outsb
outsb
jb
adc
rcll
pop
out
sub
sub
ret
or
jae
sbb
out
sbb
repnz
dec
cmpsl
das
push
xlat
scas
mov
mov
mov
adc
negl
pusha
jno
jnp
push
dec
int
mov
pop
xor
clc
sub
cmp
xchg
ljmp
mov
sti
call
arpl
push
add
pop
loopne
lods
jns
mov
mov
sub
push
jl
dec
jge
push
push
pop
sub
daa
stos
mov
mov
pop
je
or
or
out
in
xor
inc
arpl
jo
pop
sub
mov
pushf
jle
push
mov
jno
popf
adc
call
movsb
and
dec
inc
int
mov
sbb
stos
sbb
xchg
mov
xchg
int3
lcall
inc
lods
xor
stos
mov
outsb
mov
inc
jns
jne
cmpsl
test
inc
xor
push
sub
and
ss
aam
or
adc
ljmp
iret
notl
mov
lods
scas
mov
dec
mov
in
fwait
lahf
jb
outsb
hlt
outsl
jg
mov
aam
push
ja
das
xor
xlat
add
aas
mov
mov
xor
shll
push
mov
pop
loopne
int3
mov
divl
aam
jae
outsl
icebp
pushf
aad
subb
inc
into
pop
dec
pop
pusha
and
mov
mov
pop
test
xchg
and
arpl
rclb
jmp
int
pop
aam
add
fisttpl
lods
mov
mov
mov
xor
cs
popa
imul
push
arpl
push
pop
xlat
xor
add
int
mov
sbb
dec
jecxz
loope
dec
xchg
shll
fadd
shll
add
icebp
mov
jmp
std
stos
jmp
std
jno
cmpsb
bound
dec
sbb
fstps
inc
and
jp
orb
mov
cld
and
lret
dec
lea
push
xlat
add
cmpsl
dec
mov
jecxz
mov
push
sbb
aas
jbe
jb
fwait
add
outsl
iret
and
pop
mov
or
pop
aas
add
jecxz
int3
jno
jecxz
jmp
out
jne
lret
aam
push
loopne
pusha
jecxz
int3
mov
inc
sti
push
test
mov
imul
xor
sub
add
test
cmp
push
or
movsb
push
mov
shr
mov
jnp
sarb
lret
mov
movsb
cmp
daa
jns
dec
mov
mov
add
lea
jo
insb
out
xor
pop
call
movsb
and
dec
mul
in
adc
adc
cld
jmp
enter
lret
into
mov
mov
add
xchg
std
sub
xchg
imul
clc
jbe
bound
inc
sbb
push
pop
repnz
sub
xor
cmp
add
mov
ret
sub
push
cmc
lods
cmpsb
ffree
xor
jo
fbld
dec
mov
or
adc
jnp
icebp
jae
adc
lret
aad
in
and
sarl
orl
cmp
int
ret
adc
sti
jmp
pushf
int3
fildll
pop
faddl
sub
pop
xchg
daa
xchg
adc
dec
nop
jg
inc
push
sbb
in
sbb
and
cmp
sarb
mov
jecxz
mov
in
lock
mov
mov
pop
fldcw
test
das
aaa
cmp
jge
dec
enter
scas
iret
mov
mov
repnz
cmpsl
mov
mov
hlt
mov
stc
std
ret
popa
je
jne
daa
leave
hlt
xor
popf
and
sub
push
xchg
loop
cmpb
sbb
and
jae
xor
or
movsb
sbb
push
loop
in
je
xchg
std
inc
mov
dec
iret
mov
cmpsl
stos
xorb
adc
lods
jmp
inc
jne
inc
sbb
push
push
pop
out
and
cmp
ss
push
adc
or
icebp
mov
insl
decl
iret
xchg
cmp
dec
dec
mov
and
jmp
cmovb
cmp
push
in
in
repz
pushl
int3
jmp
pop
ret
dec
repz
out
push
clc
cld
add
rclb
loope
fnsave
pop
pop
pop
cwtl
jbe
je
imul
icebp
sti
std
push
shll
in
shlb
sbb
incl
cld
in
addr16
cmc
stc
and
push
aad
in
mov
mov
or
ret
scas
pop
xor
test
out
cs
mov
adc
outsb
or
test
idivb
push
in
pop
mov
sarb
loop
xchg
gs
mov
aad
xchg
inc
mov
adc
mov
sub
cmp
aaa
push
adc
cmpsb
push
xlat
add
loop
shlb
out
repz
inc
dec
pusha
pushf
nopl
mov
outsl
or
sub
add
xor
aam
pop
mov
nop
mov
xor
or
xchg
pop
and
push
pop
xor
shll
lods
rcrl
push
es
pusha
stc
and
cltd
clc
int
pusha
jg
aad
or
fnstenv
pop
sub
and
or
sbb
add
clc
dec
dec
daa
shlb
fimull
mov
es
addb
popf
jecxz
jns
je
fidivl
pop
pop
and
xchg
jo
jle
sbb
jle
push
loop
jl
outsb
jp
ret
or
fsubrp
pop
xlat
push
mov
or
mov
pop
iret
mov
mov
mov
jge
daa
sub
das
jae
es
out
ret
dec
repnz
jo
cltd
pop
xor
mov
xchg
leave
xchg
cwtl
pushf
outsl
jge
in
push
ret
inc
lret
dec
mov
sbb
mov
inc
mov
fs
push
add
rcl
inc
scas
or
dec
hlt
mov
mov
loope
and
movsl
dec
lret
mov
call
aaa
xor
xor
aaa
in
inc
call
add
and
cwtl
test
push
fdivp
inc
sbb
push
stc
in
xchg
and
lcall
stc
or
xchg
pusha
and
xchg
cmp
outsb
sbb
or
cmc
fcoml
sarb
or
fxch
xor
mov
lods
adc
xlat
cli
xchg
nop
lds
mov
mov
dec
dec
push
dec
push
push
xchg
jg
or
push
push
cmp
mov
push
testb
xchg
aaa
and
int
aam
fmull
scas
pusha
mov
pmulhw
xchg
cwtl
xchg
inc
mov
dec
movsl
inc
pop
or
int3
xor
pop
mov
add
mov
add
inc
in
or
cld
pushf
lds
pushf
ljmp
repnz
jp
or
nop
pop
xchg
jno
fs
arpl
fisttpll
cmp
mov
insb
push
fisttpl
or
cli
xor
mov
hlt
clc
cld
inc
call
icebp
dec
daa
adc
add
xchg
sbb
fsubrl
jmp
inc
cmp
inc
jbe
dec
jl
pop
push
mov
fisubrs
ret
loope
add
push
sbb
cwtl
jbe
dec
pop
shrl
xchg
adc
int
or
adc
leave
arpl
loop
xchg
daa
lret
out
jb
jle
outsb
in
jg
icebp
icebp
repz
stc
aad
pop
nop
and
sub
ret
mov
or
stos
dec
adc
jecxz
mov
inc
xchg
pop
inc
rcr
fsub
jae
inc
mov
pop
jecxz
jp
repz
jnp
xchg
test
pop
shrl
fstp
push
out
lock
fdiv
clc
cld
and
xor
test
mov
roll
dec
push
aaa
cmp
adc
or
pop
sbb
and
test
push
or
mov
mov
mov
mov
sub
sbb
scas
mov
pop
aas
out
out
xor
std
lcall
inc
sbb
pop
sub
push
cs
mov
and
cmpsl
scas
mov
mov
mov
xchg
xchg
xchg
pop
shlb
mov
adc
sbb
in
repnz
arpl
mov
std
adc
and
ret
ds
mov
icebp
ja
out
push
cltd
shl
jmp
push
cltd
mov
sbb
scas
sbb
ds
pushf
adc
xchg
jmp
fdivl
hlt
ret
sbb
and
rcrb
ret
sub
repnz
insb
push
in
rcl
clc
dec
jecxz
xor
movsl
mov
cmpsl
sub
xor
mov
movsl
test
leave
gs
fwait
mov
fldt
jne
sbb
lret
mov
xor
xor
sbb
fnsave
adc
outsl
sub
stc
int
aad
rcll
inc
and
mov
mov
adc
jp
or
jle
lds
and
in
stc
and
or
adc
popf
push
cmc
cli
mov
inc
daa
daa
dec
iret
mov
sub
adc
or
jmp
addr16
inc
adc
inc
stos
into
dec
es
jno
ret
cs
inc
mov
movlps
repz
sub
pusha
pop
jle
rcr
fldt
pop
loopne
es
test
dec
mov
mov
jl
fsubrs
cwtl
jl
pusha
or
sti
daa
stos
adc
adc
pop
call
mov
ja
enter
arpl
movsb
pop
mov
mov
mov
xchg
push
cltd
jmp
popa
je
or
xor
std
sti
imulb
sbb
cmp
or
in
adc
test
sarl
insl
fstps
push
sub
mov
addb
popf
pop
mov
loop
xor
dec
out
add
add
test
cmp
adc
popf
push
in
pop
lret
outsb
jae
repnz
leave
iret
shll
or
mov
fists
pop
roll
push
mov
pop
xor
enter
push
adc
sahf
pop
lret
or
insl
std
lock
inc
enter
bswap
inc
xorb
add
sub
jae
movsb
js
jp
dec
push
movsb
pop
lds
xchg
aas
sbb
in
repz
mov
mov
mov
loopne
jbe
fsubs
add
test
mov
je
ja
je
lds
push
mov
mov
ficompl
jno
popf
adc
inc
add
cmp
stc
movsl
in
dec
lods
cli
xor
sub
test
pushf
rclb
iret
clc
jbe
bound
inc
ljmp
test
mov
push
mov
aam
ret
inc
mov
dec
iret
mov
sub
sti
xor
sbb
cmp
out
insl
dec
jecxz
arpl
push
aad
push
and
pop
add
outsl
and
fisttps
rcrl
out
push
jmp
jns
enter
mov
mov
sub
fwait
sub
push
push
sahf
push
jecxz
rolb
sub
es
add
test
xchg
stos
and
repz
pop
incl
lods
fistpl
dec
mov
test
out
adc
shrl
jne
imul
pusha
fucom
outsb
mov
aaa
pop
gs
jne
loope
cwtl
sbb
imul
outsl
and
into
rcl
mov
inc
jp
mov
leave
or
jne
insb
sbb
jecxz
cmp
cmpsb
push
xorb
mov
adc
cs
das
cmovo
push
jbe
ds
loope
lods
xor
cld
out
into
inc
cwtl
ror
rcl
stos
jp
sub
ret
xchg
bound
push
lods
call
jl
inc
and
cmc
call
stc
cs
sub
out
add
pop
jecxz
mov
cli
jge
adc
cmpsl
fcom
fsub
movsb
rcl
dec
mov
mov
aaa
mov
lock
push
rcrl
xor
mov
iret
add
adc
ljmp
arpl
cs
pushf
rcl
fnstcw
mov
and
xor
fs
mov
jno
jg
loope
adc
cmp
lret
lret
aam
aad
xchg
push
xchg
adc
cmp
mov
std
ret
inc
jbe
test
cli
cmp
scas
popf
sub
in
push
jbe
dec
cmc
adc
sbb
xor
cmc
push
rcl
add
or
mov
jmp
xor
std
dec
mov
mov
ss
add
xchg
fwait
ja
jbe
jb
or
dec
sub
push
and
sub
pop
pop
ds
ljmp
jg
sti
out
fcomip
idiv
add
je
sub
mov
bound
arpl
dec
cld
inc
mov
dec
dec
daa
mov
xor
repz
xchg
in
mov
aam
push
jbe
pushl
pop
lods
jl
sub
aaa
mov
addl
ljmp
inc
das
mov
mov
movsb
cmc
fbld
sub
or
call
je
cld
lea
dec
lret
and
cltd
popf
mov
sbb
and
movsb
ret
sbb
and
stos
cmp
push
mov
sbb
icebp
jmp
jne
std
xchg
rcll
jecxz
xchg
cli
xor
rolb
es
sbb
loope
jb
pslld
mov
out
shll
push
jmp
lock
adc
mov
cmp
cld
jmp
push
hlt
mov
pop
pop
test
sub
mov
or
popf
xor
push
push
clc
stos
xor
fcoml
test
mov
repz
lahf
pop
pop
loop
mov
ret
push
ficompl
repz
add
cmp
cld
jne
inc
add
enter
jmp
xchg
jg
push
dec
lea
jno
les
xchg
xchg
cmp
or
pop
arpl
jno
mov
lret
stos
xchg
outsb
addr16
int3
bound
push
sahf
outsl
int
mov
push
cmp
mov
loopne
inc
inc
or
jbe
fnstsw
and
icebp
adc
movsb
lds
xor
mov
mov
xlat
test
dec
popf
lods
mov
mov
mov
and
test
int
ja
lds
push
cltd
adc
jle
shlb
inc
nop
gs
mov
daa
imul
jge
loop
add
movsl
push
insb
cli
xchg
iret
ret
add
sbb
add
bound
push
adcb
pusha
hlt
rcr
sbbb
push
add
mov
mov
cmp
sbb
js
cmpsb
jns
inc
mov
mov
mov
xor
or
adc
imul
push
ret
fisubs
cmp
lret
or
popa
lahf
shll
outsb
fimuls
xlat
inc
inc
dec
mov
and
sub
xor
imul
push
or
loop
ljmp
es
xlat
mov
add
mov
xchg
inc
rcrb
ja
js
inc
shll
daa
push
xor
aaa
jnp
cmp
adc
pop
aam
sbb
mov
jge
enter
fmul
fsubrl
fnstenv
mov
jl
insb
js
fistpll
rorb
push
pop
sub
cmp
or
or
adc
call
xor
lds
frstor
mov
mov
xchg
xchg
cltd
popf
popa
imul
inc
dec
dec
push
push
pop
pop
and
cmp
adc
jmp
std
ret
into
rcl
fcmovu
mov
mov
mov
xchg
xchg
lcall
jbe
jle
inc
dec
dec
push
push
pop
pop
and
sub
xor
cmp
add
or
adc
sbb
loop
ljmp
lret
iret
rcl
fcmovnu
mov
mov
mov
xchg
xchg
fwait
lahf
arpl
outsl
jae
jnp
inc
inc
dec
dec
push
push
pop
pop
and
sub
xor
cmp
add
or
adc
sbb
jecxz
jmp
repz
inc
enter
fcomp
loopne
test
mov
mov
mov
fs
jl
inc
dec
dec
push
push
pop
pop
pusha
and
iret
lret
bound
cmp
add
or
adc
sbb
in
adc
hlt
clc
cld
add
rcl
call
lods
mov
lds
dec
popa
push
xchg
xchg
movsl
push
daa
jge
insl
jno
test
and
or
push
adc
xor
or
loope
jmp
std
ret
into
rcl
fcmovu
mov
mov
mov
xchg
xchg
lcall
jbe
jle
inc
dec
dec
push
push
pop
pop
and
sub
xor
cmp
add
or
adc
sbb
loop
ljmp
lret
iret
rcl
fcmovnu
mov
mov
mov
xchg
xchg
fwait
lahf
arpl
outsl
jae
jnp
inc
inc
dec
dec
push
push
pop
pop
and
sub
xor
mov
out
fdivs
daa
fsubrs
sti
jbe
loopne
xchg
mov
js
jl
rolb
js
sub
pop
ds
cmp
pusha
dec
push
push
pop
pop
xlat
push
inc
mov
in
adc
cli
mov
lock
clc
jnp
mov
imul
movsl
test
inc
dec
dec
dec
push
pop
pop
and
and
insl
jno
repz
into
cmp
sbb
and
test
rclb
lods
lret
xchg
push
fcmovu
mov
cwtl
js
dec
push
inc
push
push
xchg
lcall
xor
pop
cmp
or
repnz
inc
and
add
xor
cmp
sub
mov
test
xlat
pusha
and
lea
mov
sub
outsl
jae
and
inc
sub
into
aaa
inc
inc
dec
dec
push
idivl
in
loope
or
out
jecxz
adc
sbb
test
mov
scas
fisubl
daa
push
xchg
lods
fcomp
loopne
test
jbe
xchg
inc
jp
jmp
and
je
fs
xor
or
scas
mov
adc
and
sub
xor
sbb
int
lock
rcl
cli
in
in
lock
lea
xchg
test
addr16
xchg
mov
mov
daa
insl
xor
jno
jns
inc
incl
and
jmp
or
sbb
in
les
in
into
jmp
lret
fidivrl
cmpsb
stos
scas
mov
mov
mov
callw
inc
loop
ljmp
lret
jb
int
mov
ds
scas
push
mov
scas
insl
popf
popf
out
add
add
add
add
