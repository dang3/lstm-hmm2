cld
ret
dec
pusha
into
pop
lahf
xchg
fnsave
push
cmp
push
addb
lret
xor
movsl
and
mov
push
mov
mov
fiadds
lahf
push
dec
int
mov
jmp
test
dec
push
mov
jbe
aam
sub
cld
int3
jp
dec
jnp
aas
xchg
and
lds
mov
lock
loope
push
pop
fiadds
les
inc
stos
mov
lods
jle
xor
lods
mov
jnp
enter
imul
rcrb
fsts
adc
test
rep
adc
jo
push
cwtl
lahf
xchg
ss
clc
dec
jb
int
inc
dec
and
add
daa
jmp
mov
out
or
out
pop
cs
xor
iret
fcmovbe
cmpb
les
addl
arpl
mov
mov
and
mov
cmp
xor
push
stos
jg
xor
mov
jp
adc
xor
lcall
addb
insb
cmp
xlat
mov
sahf
pusha
cmp
and
lds
jl
add
push
or
push
push
jo
out
aad
cmpsb
sub
mov
jbe
sub
imul
call
xchg
fisttps
aas
xor
cltd
outsl
jae
sbb
jbe
lock
ror
sub
jle
divb
jl
or
test
and
sahf
shrb
enter
and
jmp
leave
rolb
fstps
je
pushf
and
lret
fdivrs
and
test
xchg
mov
push
repz
xchg
adc
xlat
movsl
xchg
repz
mov
mov
inc
inc
sahf
sbb
jl
enter
out
int
out
sub
pop
out
out
addr16
test
in
insl
or
popf
imull
push
inc
pop
add
lds
and
sub
inc
inc
xor
test
lcall
inc
and
idivb
lahf
push
sbb
imul
int
outsl
popa
pop
push
scas
mov
lcall
int
mov
pop
cmp
mov
dec
lret
andl
ret
lret
jg
adc
insl
test
adc
cmpsb
or
repz
inc
addr16
nop
push
aam
call
pop
push
mov
add
jne
out
icebp
es
rorl
mov
push
jae
jnp
xor
cmp
or
dec
pop
orb
mov
iret
aaa
mov
scas
addr16
sub
aam
jns
jp
mov
shrl
sti
in
sub
sub
test
adc
jbe
fistpl
and
inc
fmull
dec
mov
mov
push
adc
pop
pop
adc
ljmp
cld
ret
and
adc
pop
mov
xchg
inc
imul
add
es
cltd
and
movsl
or
mov
icebp
int
jnp
sbb
mov
loope
mov
or
movsl
sub
mov
push
push
xchg
jle
lea
sub
jmp
cltd
sub
jae
cltd
aaa
adc
rsqrtps
lea
add
fistpl
in
cld
cmp
mov
inc
inc
dec
xlat
xlat
fninit
cwtl
or
xchg
out
scas
stc
adc
fadds
jb
out
mov
shr
adc
sub
cltd
ja
jae
inc
jno
add
jns
inc
fcomi
sub
popl
sbbl
mov
jae
fdivs
and
cmp
cmpsl
push
roll
jg
mov
add
pop
push
and
cmp
adc
sbb
cmp
cmp
pop
rol
mov
mov
repz
cmp
push
add
mov
bswap
mov
lahf
push
bswap
bswap
lea
pushf
movl
push
call
test
jmp
cmp
mov
jmp
pusha
or
jmp
pushf
lea
jne
bt
call
jb
inc
mov
inc
and
mov
bound
loopne
insl
test
mov
xchg
movsl
shll
mov
mov
hlt
stos
jne
jb
cmpsb
inc
xchg
dec
loope
pop
sbb
push
cld
hlt
subb
mov
xor
lret
dec
push
sbb
mov
stos
and
add
out
ja
push
mov
mov
je
jle
mov
mov
push
arpl
mov
push
xor
hlt
lods
fisttps
stos
adc
ja
not
movsb
cmc
stos
mov
std
jne
aaa
out
rcll
inc
and
add
mov
push
pusha
inc
stc
bt
neg
mov
pushf
movb
rol
call
movzbl
mov
mov
push
pushf
pusha
mov
push
jmp
lea
ja
pusha
pushl
bt
pusha
imul
jmp
lods
lock
int
jp
sub
loopne
add
fdiv
push
iret
js
lds
leave
movaps
jb
or
movsb
sbb
cmp
push
push
stc
jp
dec
insb
or
stos
jl
xchg
mov
mov
das
roll
fs
jle
jl
adc
sub
fwait
lahf
js
shlb
mov
das
sti
cmpsl
push
adc
std
dec
cmpsl
dec
push
in
test
inc
inc
aad
jl
bound
mov
mov
push
stc
pop
mov
repnz
push
pop
repz
push
xor
jl
push
cmp
shll
out
popa
cmp
jbe
fdivrs
fwait
sar
out
pop
xor
push
out
sbb
mov
jae
neg
dec
mov
nop
ja
sub
mov
movsl
mov
out
and
pop
fwait
adc
ret
mov
pushf
push
jnp
sub
cmpsl
and
das
and
pop
arpl
lret
ficoms
enter
jecxz
cs
lea
mov
test
call
lea
ja
setns
movzbl
pop
push
pusha
push
setnp
mov
movzbw
bswap
mov
sete
movsbw
bswap
push
mov
pushf
push
pushf
mov
mov
not
pushf
jmp
dec
cmc
not
ror
ror
and
xor
not
push
call
mov
add
push
dec
aad
jmp
add
sub
cmpsl
mov
sahf
jb
ret
jne
adc
inc
hlt
stos
pop
jecxz
cwtl
cmpsb
pop
add
pop
stc
or
cmp
xchg
insl
das
add
fstps
sub
inc
jnp
outsl
or
push
cwtl
cmpsb
mov
aaa
lds
adcl
aas
daa
aad
mov
mov
lcall
fistl
jmp
jg
pop
xor
adc
movsl
in
inc
dec
mov
add
or
dec
mov
pop
das
aas
sbb
cli
fst
jb
dec
enter
ss
es
mov
add
sub
mov
push
idivb
rol
mov
mov
pop
jmp
sarl
mov
jg
das
das
xor
push
sti
ja
or
shll
addr16
adc
aaa
and
and
bound
loope
dec
mov
pop
lret
and
cmp
jmp
and
cmc
add
push
pushf
lea
jmp
and
push
jp
data16
sub
out
mov
ss
xor
cli
shl
fdivp
sbbb
mov
add
xchg
cmp
xchg
mov
xchg
clc
scas
sti
in
or
leave
adc
lods
mov
fwait
xchg
fwait
push
gs
gs
adc
pop
mov
inc
outsl
pusha
inc
shll
xlat
lahf
lcall
or
or
jns
dec
add
dec
sbbl
cmpsl
inc
inc
dec
out
scas
mov
sbb
adc
push
data16
inc
loop
fisttpl
nop
pop
adc
pushf
jb
out
inc
fdivs
lods
pop
ja
scas
into
mov
cld
call
mov
ljmp
sub
push
pop
outsl
icebp
lret
fimull
divb
and
xchg
in
pushf
call
call
sub
push
dec
pop
and
sub
push
decl
aas
fistps
pcmpeqw
dec
psubusw
lret
sbbb
popf
sub
and
hlt
popa
arpl
or
pop
hlt
shrb
lock
jns
mov
xchg
repnz
iret
aad
pop
mov
std
jae
lret
je
xor
inc
lea
xor
inc
mov
leave
into
mov
pop
or
ja
shll
and
xchg
arpl
into
cltd
clc
out
push
mov
add
mov
and
inc
sbb
add
cli
jbe
push
mov
pop
mov
sub
cs
or
pop
inc
fcmovnb
pusha
push
call
xor
fstpl
movsb
icebp
repnz
nop
pop
mov
cmp
sub
ljmp
dec
sub
pop
aas
adc
jge
leave
iret
mov
pop
and
push
inc
pusha
orb
stos
inc
test
push
push
mov
or
enter
cld
sbb
gs
lea
and
movsl
imul
pop
inc
mull
mov
aad
outsl
adc
sbb
jecxz
dec
add
std
lods
pop
leave
push
roll
insb
xor
fistpll
push
loopw
bound
test
rcl
fwait
jns
xlat
popf
popf
and
fistps
in
sbb
leave
in
or
jns
icebp
fwait
push
cmp
into
cltd
test
sarl
push
and
subl
gs
loop
or
jmp
xchg
add
and
stos
xchg
nop
dec
and
and
fs
call
pusha
mov
pusha
lea
jmp
xor
pop
addb
in
in
mov
pusha
clc
in
sbb
sbb
add
clc
or
xchg
cmpsl
mov
fsubl
cwtl
cmpsl
hlt
lods
aad
dec
cwtl
stos
add
ficomps
and
mov
add
xchg
push
fadd
jo
and
stc
cmp
push
jmp
je
add
jb
xchg
ss
pusha
in
xchg
and
xor
out
pandn
lods
mov
js
mov
mov
adc
sbb
andl
mov
pop
and
mov
push
sub
and
cld
jp
andb
jne
pavgw
sbb
icebp
shl
ja
mov
pop
pop
clc
mov
pop
movsb
je
mov
daa
das
cmp
lea
jae
cmp
sub
mov
shld
xor
shl
adc
mov
neg
mov
stc
sub
pusha
clc
mov
repnz
movb
pusha
lea
jne
adc
setge
call
neg
movzbw
cmc
mov
cmc
stc
and
clc
clc
add
test
cmp
cmp
add
push
jmp
and
and
mov
loop
add
dec
fiaddl
xchg
psubusw
mov
dec
sti
adc
dec
mov
and
inc
dec
sub
jno
cmpsl
iret
pop
xor
clc
lock
jle
call
int3
imulb
js
dec
insb
js
jle
sahf
aad
into
fistps
jmp
sti
inc
popa
and
negb
test
xchg
pusha
inc
fildll
mov
arpl
ficompl
mov
jg
inc
aas
and
or
add
movsbw
inc
jmp
pusha
push
movl
movl
push
movw
movl
pushf
lea
jmp
pushf
movw
lea
jne
call
test
jl
popf
adc
lret
push
filds
xor
or
bound
mov
jle
add
cmc
out
mov
data16
mov
or
xchg
cmpsl
addr16
inc
dec
mov
mov
and
pop
or
cld
movsb
jbe
mov
xor
pushf
dec
push
mov
mov
es
sahf
push
and
jmp
movb
setp
push
mov
lea
push
pushf
movl
movw
pushf
pusha
mov
push
pushl
ret
lea
jne
pushf
push
push
call
xchg
mov
not
movsbw
pushf
bswap
mov
not
not
mov
bswap
mov
pusha
pushf
pushl
ret
cmp
test
push
add
pushl
jmp
movzwl
lea
sar
push
mov
push
movb
add
stc
bt
bt
mov
call
pushf
movw
cmp
pushl
popl
movl
cmp
pushf
lea
ja
shl
and
and
sub
shld
setbe
ror
add
or
mov
call
fwait
les
in
insb
dec
or
or
xchg
jp
mov
sbb
fs
dec
xchg
pusha
sbb
leave
cmp
push
les
stc
jnp
jmp
jne
inc
inc
push
add
mov
cwtl
add
jge
jle
adc
sbb
icebp
hlt
jne
dec
and
pushf
push
in
jbe
jae
test
test
testl
sub
test
movsl
mov
out
decl
pop
es
mov
jp
pushf
push
mov
scas
xorb
and
aaa
imul
jne
movsl
sub
sahf
or
outsb
fiadds
iret
jmp
xor
imul
ja
shrl
dec
das
mov
ror
in
mov
rclb
mov
pop
jle
jp
mov
outsl
imul
mov
out
rclb
rolb
sub
out
mov
jne
rol
aam
jo
sbb
mov
pop
xor
fs
push
add
mov
mov
aaa
jbe
dec
dec
mov
mov
dec
jbe
xchg
pusha
fs
shrl
xor
push
cmp
sbbb
pop
cltd
cmpsl
ja
push
stos
ficompl
es
sbb
pop
fucom
add
adc
xchg
or
mov
mov
cmp
jae
xor
pop
jp
les
dec
int
fwait
icebp
mov
pop
inc
lea
add
addl
add
push
add
or
xchg
or
pop
pushf
pusha
pusha
movl
pushf
pushf
push
movl
push
push
lea
jmp
movsl
mov
mov
jge
inc
enter
push
xchg
cmp
cmp
out
adc
data16
sub
ret
fstps
inc
aad
mov
in
in
cmp
mov
fcoms
push
insl
in
iret
sbb
mov
je
in
nop
mov
sbb
mov
in
xchg
mov
add
ret
je
add
pushf
lea
jmp
pusha
pushf
lea
jmp
lea
jmp
lea
ret
sub
fnstsw
outsl
jg
scas
int
aad
sbb
jmp
xchg
pop
pop
out
add
ljmp
jno,pt
aaa
setno
and
movsb
mov
loope
push
aas
call
scas
jge
and
xchg
pushl
pushf
movb
pushf
dec
mov
pushl
bt
shl
setp
not
lods
call
rol
bswap
add
test
and
bsf
rcl
movl
rol
cmp
sub
sub
mov
cmc
cmc
cmp
jmp
call
bt
neg
pushf
dec
stc
call
push
push
lea
jb
pusha
cmp
pushl
pusha
lea
jae
xor
mov
rcr
xor
movsbw
mov
bts
cmc
mov
stc
sub
push
jmp
gs
sahf
xchg
xor
jns
cmpsl
dec
jecxz
or
fnstcw
push
cltd
pushf
mulb
mov
or
loop
push
add
adc
cmpsl
pop
mov
es
mov
data16
jmp
inc
jecxz
cmp
or
ds
or
imul
scas
aad
lcall
arpl
mov
and
mov
iret
data16
jg
fdiv
rcr
leave
fcomps
loope
loop
mov
into
shl
sbb
dec
pop
test
fstl
mov
decb
xchg
pop
or
shrl
flds
mov
clc
fiaddl
mov
dec
popa
jb
mov
arpl
push
ss
shr
lea
and
add
xchg
mov
imul
in
inc
and
loopne
jns
nop
scas
arpl
push
pop
xchg
mov
jp
mov
or
es
mov
aam
or
adc
push
fcoml
out
mov
jnp
dec
decl
test
int
lea
dec
adc
or
loop
inc
mov
shr
or
test
outsl
lods
mov
lods
jbe
pop
ja
mov
pushf
and
into
call
push
pop
mov
mov
dec
ss
pop
dec
pop
loopne
out
sub
sub
xchg
xor
int3
fnsave
in
dec
js
stos
lock
adc
hlt
adc
arpl
mov
mov
jno
sub
insl
and
add
or
bound
es
and
xchg
loopne
or
daa
fistpl
gs
xchg
inc
add
cmp
xchg
and
dec
mov
cld
or
insl
ds
pop
push
fs
cwtl
xchg
and
dec
aad
add
shl
in
jno
jne
out
ret
cmp
lds
or
pop
ljmp
lods
xor
jp
or
or
lret
fisubrl
push
les
subb
inc
add
or
pop
aad
ret
and
lea
adc
ds
add
aaa
popf
insb
ds
mov
fisubrs
inc
test
imul
testl
jg
mov
pop
sub
and
movb
pusha
movb
pushf
pushl
ret
pushl
popl
pusha
cmp
cmp
lea
jne
ja
or
sub
shl
shrd
add
bsr
ror
dec
mov
or
cmc
xor
inc
mov
pusha
mov
stc
cmc
repnz
pushl
push
call
push
lea
je
call
xchg
ret
push
fndisi(8087
jno
or
repz
cltd
cmp
stc
rcr
sbb
add
jge
sbb
orb
jecxz
aaa
outsl
int
out
jecxz
mov
xor
ret
push
jge
push
iret
idivl
ficoms
xor
out
in
addr16
mov
mov
push
cmp
sub
int3
jle
push
clc
mov
cmp
outsb
mov
popa
sub
in
addb
mov
inc
cmp
sbb
mov
fldcw
negl
fcompl
in
ljmp
pop
daa
or
lods
mov
pop
outsl
scas
inc
out
lret
lret
cld
cmp
sbb
int3
cwtl
fsubrp
test
xchg
cmc
flds
lea
repz
and
stc
idiv
incl
add
aas
push
add
out
add
aas
push
add
push
add
inc
push
add
ljmp
add
jb
add
xchg
lods
inc
fcmovnbe
mov
stos
pusha
or
mov
mov
mov
mov
std
pop
das
push
sbb
and
push
jmp
scas
das
and
das
and
mov
push
mov
stc
fists
es
idivl
mov
imul
or
repz
cmpsb
mov
jne
mov
test
pop
sbb
jge
pop
cli
aam
inc
shlb
sbb
push
out
lahf
movsl
ret
cmc
inc
fs
notb
rorb
adcb
xchg
btr
rol
inc
mov
pusha
lea
mov
adc
shr
lea
rol
jmp
mov
bt
pushf
or
call
dec
or
mov
pusha
mov
bt
cmp
call
pusha
jmp
or
cmp
and
pusha
sub
or
pusha
adc
push
xor
xchg
cmp
mov
sub
pushf
ljmp
or
test
cmpsb
add
jbe
jge
into
ror
pop
pop
mov
add
fs
xchg
or
in
test
mov
xlat
mov
data16
clc
gs
lahf
adc
jbe
cmp
and
mov
mov
add
outsb
or
xchg
sub
xchg
cmp
and
sti
mov
sub
xor
xchg
pushf
jmp
fsubrp
xchg
sbb
ja
pop
shrl
imul
repz
or
adc
or
dec
xor
or
je
pop
fisttps
call
out
movsl
movsl
mov
adc
mov
dec
outsl
ret
adc
mov
rclb
ss
inc
int
push
sarb
xchg
imul
fwait
mov
sbb
cmpsb
xor
cmp
and
je
and
sbb
add
shr
push
add
movsbw
bsf
mov
sub
bswap
mov
shl
mov
mov
test
pushf
sub
test
pushf
bt
repnz
pusha
lea
jne
xchg
bt
shld
mov
rol
not
movsbw
shld
sub
bswap
mov
cmc
clc
test
cmp
sub
stc
jmp
pusha
jmp
mov
add
adc
push
out
insb
hlt
mov
sahf
xor
push
lcall
or
in
mov
xor
ficompl
and
mov
mov
mov
push
xchg
addb
or
nop
jle
push
cwtl
outsb
dec
push
lcall
ds
mov
jmp
mov
call
pusha
movb
jmp
inc
push
xchg
mov
rol
js
and
add
jne
jge
mov
dec
ljmp
pop
jmp
sbb
addr16
cli
inc
sahf
std
hlt
lods
hlt
stos
add
pusha
add
dec
popl
xchg
push
int3
int
int
jge
pop
shll
xchg
popa
and
push
daa
add
fidivs
ja
scas
and
dec
cs
cmp
cwtl
mov
mov
jp
in
out
cmp
lods
jo
cli
out
pusha
dec
push
rcrb
xor
call
cli
and
cmp
add
lret
jp
mov
mov
arpl
xchg
shll
xchg
nop
cmp
mov
sti
fstps
adc
nop
add
shlb
xlat
aad
pop
inc
push
add
std
mov
rorl
imul
movl
jmp
cmp
push
xchg
mov
adc
push
jp
mov
jo
push
leave
out
div
jo
in
js
cwtl
sarl
aaa
lds
jle
sub
aad
cmpsl
jo
or
or
test
lock
pop
xor
inc
add
mov
push
pop
xor
ljmp
pop
aam
mov
icebp
scas
cltd
push
jge
pop
or
movsl
das
xchg
es
in
xor
or
cmp
cs
jg
les
aam
xchg
cs
testl
ljmp
mov
dec
push
and
imul
ficoms
mov
cwtl
das
data16
stos
inc
aad
push
mov
push
dec
pop
and
jle
and
mov
mov
push
mulb
sahf
test
fldenv
push
loop
mov
sahf
lods
sti
mov
pop
and
push
pop
mov
arpl
jae
ret
aad
loope
mov
nop
mov
pop
sbb
mov
jae
scas
pop
iret
imul
out
push
push
add
cmp
lock
mov
inc
inc
mov
jnp
sbb
shll
shr
jae
popa
sbb
cmp
pop
inc
lret
mov
pop
jnp
pop
sti
mov
inc
adc
rcrl
aaa
add
add
mov
mov
not
lea
jb
lahf
lea
pusha
pushf
movl
movb
push
pusha
call
ror
pushf
call
pusha
inc
pushf
mov
pushf
push
lea
jmp
scas
shlb
dec
cmp
pusha
neg
xchg
adc
sbb
xchg
cmp
jl
mov
sub
mov
or
jmp
out
je
loope
xor
dec
jb
push
adc
ror
cmp
adc
add
jns
or
pop
ja
jg
cmp
mov
int
fdivrl
mov
pop
cld
sbbl
and
and
dec
imul
mov
ds
hlt
push
dec
mov
cmpsl
or
push
and
cmp
test
pushl
pushf
pushf
lea
je
pushf
cmp
bt
add
push
cmp
movb
jmp
push
repnz
call
call
jecxz
xchg
sub
movsb
daa
cmpsl
pop
pop
add
lahf
and
mov
adc
daa
mov
mov
lea
jp
mov
and
arpl
clc
mov
mov
mov
daa
lret
fidivl
fcmovu
lods
into
notb
dec
push
push
jmp
mov
inc
scas
mov
add
dec
rcrl
cwtl
stos
cmp
mov
xchg
shl
mov
mov
pop
or
and
pushf
pushf
test
pushf
pushf
lea
je
push
sub
call
push
inc
lods
jb
call
mov
jb
call
in
fcoml
pop
pop
push
push
jb
stos
cmpsb
pop
ljmp
cmp
pusha
call
pusha
lea
jne
sub
mov
bsr
rcl
sub
not
mov
pushf
cmp
pushf
sub
jmp
popf
mov
into
movsl
lds
mov
int3
dec
lock
mov
sbb
adcl
sarl
shl
movsb
cld
shll
pop
xor
dec
sarl
cmp
mov
leave
jl
mov
imul
pop
xor
xchg
mov
ss
in
call
gs
ja
inc
lcall
mov
inc
pop
pop
mov
pop
lea
jle
xor
fcom
fsubl
cltd
mov
pop
jge
shll
xor
out
lret
xorl
xor
and
add
lea
call
push
mov
jmp
xchg
stos
cs
enter
jae
pop
jmp
jae
adc
cmp
mov
paddq
mov
push
jb
inc
cwtl
or
adc
cmpsb
jb
cmpsl
dec
pop
inc
and
lods
pop
jo
idivl
ret
dec
jge
loope
or
sub
loopne
in
pop
and
mov
lds
movsb
js
jge,pt
fwait
out
cmc
mov
add
hlt
inc
add
jl
and
mov
adc
add
and
imul
mov
xchg
mov
cmp
sub
cmp
sbb
inc
cs
mov
fmuls
call
cli
mov
jno
jo
xchg
imul
movsb
test
das
sub
inc
pop
push
sub
xchg
add
leave
xor
cmp
in
pop
cmc
xor
insb
aad
xchg
pushf
fs
hlt
jl
adc
jecxz
push
into
cmpsb
adc
pushf
mov
sbb
out
adc
popa
dec
mov
imul
test
mov
subb
mov
data16
jge
sub
cmp
cmpsb
xor
cmpsb
add
fs
aaa
or
cmpsb
xchg
inc
cli
push
jb
xor
add
cld
mov
xchg
adc
adc
jge
adc
xor
pop
and
rcll
incl
testl
or
push
pop
dec
rol
mov
xlat
loope
stos
leave
push
dec
mov
out
sub
fwait
ret
rorb
mov
clc
les
and
and
jbe
mov
inc
mov
sbb
xor
xor
mov
mov
iret
std
sbb
ret
stc
or
cwtl
sbb
pop
outsb
stos
es
or
jno
hlt
mov
loopne
imul
push
add
jg
push
outsl
cs
adc
pop
das
stc
mov
jmp
xorl
jecxz
ret
and
call
xchg
cwtl
mov
movl
movzbw
lahf
lea
call
push
lock
std
std
xchg
xchg
insb
push
mov
ret
jo
jg
int3
ret
jg
das
outsb
add
pop
adc
xor
push
outsl
mov
cmp
aam
push
leave
add
out
and
aaa
test
sbb
xchg
add
fnstenv
and
xchg
push
jbe
push
xor
test
cmp
jmp
adc
inc
pusha
pushf
call
pushf
inc
cmp
bt
cmp
bswap
lea
cwtl
mov
movb
mov
mov
call
movzwl
push
and
dec
mov
cmc
add
jmp
call
scas
sarb
and
dec
push
jnp
in
out
jg
stc
jg
xchg
sbb
jecxz
and
and
mov
mov
sub
jecxz
mov
sbb
ds
fidivrs
push
fstps
std
rolb
and
or
sbb
pop
cmp
adc
aad
addr16
icebp
xchg
pop
arpl
in
dec
fcompl
sti
fldcw
lock
sub
out
mov
pop
stos
imul
and
add
jecxz
es
outsl
add
jno
xchg
sbb
call
std
mov
adc
xor
pop
in
pcmpeqd
or
fmuls
jge
sahf
fwait
mov
in
sbbb
add
call
push
movsl
mov
movsl
xchg
fbld
jo
mov
push
and
sub
mov
test
rcl
sub
adc
clc
mov
mov
les
mov
dec
jle
dec
mov
rcl
mov
add
cmp
bt
call
dec
call
jmp
inc
lea
jmp
not
mov
push
mov
lea
call
pusha
add
pushf
pushf
movw
lea
jmp
stc
cmp
pusha
jmp
test
xor
pushf
jmp
mov
movb
mov
pushl
ret
push
mov
pushl
popl
pushl
push
pusha
pushl
pushl
ret
lea
jo
movsbw
mov
pushf
lea
jmp
lea
je
push
test
push
stc
sub
jmp
stc
sub
call
jmp
aam
jns
pop
jg
add
and
loope
popa
add
mov
pop
xchg
mov
stc
add
into
pop
notb
shlb
sbb
adc
xor
sbb
andl
roll
mov
adc
cmp
aam
inc
outsb
mov
sbb
pusha
es
andl
push
arpl
jmp
roll
inc
js
pushf
jp
cmp
lret
cmp
and
shl
mov
jmp
dec
add
stc
add
inc
gs
outsl
fs
gs
imul
add
xor
pushf
inc
push
push
pusha
lea
jmp
push
jg
xchg
xchg
std
push
or
mov
pop
adc
sbb
aam
mov
inc
iret
fistpl
mov
aaa
mov
push
loopne
rcrb
mov
adc
repnz
popa
les
or
inc
push
mov
cmp
inc
cmp
aas
push
lock
push
jnp
mov
in
popl
lods
jl
or
sub
lock
jge
loop
mov
ja
cwtl
cs
andb
mov
sub
mov
lret
inc
adc
add
push
out
pop
icebp
or
packuswb
in
sbb
mov
inc
xor
mov
test
loop
sub
shrl
aam
in
sahf
jb
push
xor
pop
pop
and
fs
jne
rol
clc
clc
mov
call
movl
pusha
call
call
pushl
popl
push
mov
pushf
pushl
pushl
ret
call
jmp
in
imul
cmp
add
sahf
and
dec
push
sub
fsub
popa
adc
insl
inc
arpl
xchg
test
in
loope
int3
xor
jb
jo
aam
xchg
mov
aaa
or
lods
cltd
push
mov
and
mov
outsb
and
sbb
cmp
int3
mov
cmp
in
and
add
add
les
xchg
shlb
push
movsbw
movsbl
bt
mov
push
sar
aaa
sub
cmp
aad
xor
push
movzbw
bsf
add
push
or
push
shld
cmp
rol
jmp
lahf
sbb
inc
dec
mov
inc
stc
push
pop
repnz
repnz
les
in
int
int3
fucomp
bound
mov
mov
cmp
inc
fldenv
pusha
fs
sub
loopne
outsb
jnp
cmp
test
sbb
sub
push
xor
in
insb
pop
inc
loope
add
jno
test
mov
insl
cmp
inc
lock
jge
jecxz
shrb
fwait
and
lods
andl
aad
and
loopne
lea
jne
call
pushf
jmp
pushf
lahf
lea
pushf
mov
push
movl
pushf
mov
mov
movb
pushf
pushl
ret
jne
pusha
lahf
mov
mov
push
pusha
pushf
lea
jmp
pusha
bt
add
call
and
inc
push
sbb
in
mov
cwtl
adc
nop
pop
add
mov
rcll
xor
push
scas
xor
enter
dec
xor
movsb
jns
xchg
jne
fsin
das
dec
das
xor
inc
insb
cmp
dec
call
sub
ret
mov
add
jb
ret
scas
pop
mov
ret
push
lret
xor
jecxz
mov
xchg
jb
xchg
jle
xor
mov
movsb
pop
lret
or
pop
fcmovnu
mov
les
pop
xchg
add
inc
fnstsw
mov
aad
lods
cmpsl
xchg
xchg
rclb
mov
jg
movl
roll
xor
mov
add
jb
mov
aaa
pop
outsb
mov
and
and
pop
mov
sub
in
mov
cmpb
leave
cmp
add
setg
mov
mov
imul
inc
loop
or
rclb
sub
repz
xchg
icebp
testl
or
in
inc
test
xor
andb
cltd
movsl
sbb
dec
mov
cld
or
sub
xchg
or
enter
mov
push
or
or
stc
fcom
loope
fwait
gs
gs
sbb
pop
add
mov
mov
jb,pt
sbb
int
add
test
dec
add
mov
adc
mov
mov
cmp
pusha
lea
jb
test
bt
stc
bt
cmp
jmp
inc
pushf
pushf
pushl
lea
jmp
test
jmp
daa
mov
mov
mov
lods
adc
scas
addr16
dec
push
pushf
push
lock
mov
xor
ss
insl
stos
leave
icebp
lock
pop
or
outsl
cmp
clc
push
sub
jae
sti
addr16
push
pop
rorl
in
hlt
popf
pop
aaa
sbb
stos
iret
cmp
fnsave
negb
pop
pop
sbb
cmp
fwait
movsl
and
sub
movl
push
pushl
pushf
lea
jmp
jg
neg
mov
test
call
jmp
call
add
stos
dec
inc
popf
add
push
jo
xor
inc
add
jns
into
ljmp
enter
adc
xchg
dec
jge
mov
jnp
scas
jle
cmpsl
rcll
rcr
and
call
test
pop
push
ljmp
mov
xorl
gs
popa
addr16
outsl
js
add
mov
adc
add
add
add
add
add
add
nop
lret
adc
xchg
lret
adc
xchg
lret
adc
add
add
add
lcall
flds
jecxz
xor
iret
shl
ljmp
mov
or
mov
dec
pop
test
inc
test
arpl
mov
aaa
lods
and
nop
and
icebp
pop
int3
fs
mov
out
daa
pop
mov
mov
inc
cld
sub
jecxz
and
rol
jb
movsb
nop
cltd
js
xlat
pop
les
pop
jge
jmp
dec
cwtl
fs
fmull
cmp
into
in
out
lret
test
pop
ja
pop
lahf
pop
mov
xchg
popf
jne
push
je
or
dec
outsl
sbb
int3
xchg
mov
in
push
cmp
pop
ljmp
jg
sub
int
xchg
data16
push
xacquire
ffreep
outsb
sbb
inc
xor
popf
xor
in
and
jp
pop
adc
arpl
xchg
xchg
pop
jge
lret
rcll
test
aaa
mov
xchg
dec
xor
and
in
pop
inc
pop
lret
cli
xchg
jge
xor
adc
dec
mov
lods
xchg
jbe
test
xchg
fiadds
jg
xchg
lds
push
adc
sahf
les
cmc
jl
cmp
negl
mov
sbb
shlb
sbb
jns
dec
orl
es
xchg
push
jae
fisttpl
in
mov
imul
add
addr16
push
add
xchg
jmp
mov
push
les
repz
fsubl
sahf
sub
test
popf
inc
inc
insb
lahf
in
xchg
xchg
pusha
mov
outsl
popa
adcl
mov
xchg
movsb
jecxz
sub
lret
push
mov
pop
and
fbstp
pop
ss
push
inc
and
mov
xor
jo
and
jns
jl
popa
sbb
inc
lods
adcl
adc
xchg
aad
pop
insl
sub
pop
jge
mov
rcrl
dec
iret
dec
in
inc
or
mov
sarb
and
icebp
inc
pushf
mov
dec
lods
or
xor
mov
bound
and
mov
div
loope
xchg
pop
inc
dec
inc
incb
movsl
mov
mov
mov
mov
mov
testl
adc
loop
insb
add
dec
push
clc
and
add
fnstsw
dec
hlt
mov
ja
sbb
std
push
or
popa
xor
add
inc
stos
dec
ret
mov
addr16
sub
rcrl
xor
dec
in
pop
incl
into
xor
mov
mov
xchg
sti
mov
mov
sbb
dec
xchg
mov
icebp
pop
js
incb
inc
lret
repz
or
in
or
mov
add
adc
movsl
xor
mov
test
push
iret
pop
inc
jge
and
or
clc
lods
ret
sbb
repz
addr16
xchg
sub
ja
sbb
stos
jp
mov
mov
iret
or
cmp
sahf
mov
jl
add
aas
push
decl
iret
jno
jns
pusha
add
loop
mov
loope
add
je
fisubrs
push
dec
mov
and
movsb
adc
sahf
nop
cmp
subb
stc
mov
test
scas
fstps
cmp
push
insl
cmc
push
push
push
cmpsl
inc
iret
cltd
stc
in
rclb
hlt
mov
dec
or
negl
out
jne
enter
lcall
and
ds
mov
movsl
cmp
or
dec
test
sar
or
bound
inc
mov
push
lods
cwtl
cmp
dec
mov
sbb
fmulp
xorl
lcall
fcoms
cmp
mov
addr16
testb
sub
jmp
jg
adc
mov
daa
xchg
cwtl
xor
inc
jo
sub
add
mov
imul
js
mov
mov
insb
mov
call
hlt
mov
mov
imul
fstpl
mov
mull
dec
lods
subl
xchg
jle
cld
mov
out
sbb
stos
fidivs
mov
into
cmp
into
in
mov
sub
es
fwait
mov
sbb
inc
call
dec
fs
inc
stc
out
push
int3
sub
std
mov
ret
inc
nop
dec
icebp
sbb
inc
xchg
pop
jmp
cld
add
rcll
arpl
mov
dec
or
push
mov
out
add
adc
pop
cmc
lods
imul
pop
sub
sub
arpl
push
cmp
outsl
pop
lods
pop
lcall
shll
xchg
mov
mov
enter
jl
mov
mulb
xchg
sbb
popf
jg
enter
mov
fisttps
out
mov
pusha
pushl
sub
das
or
pop
es
mov
arpl
enter
mov
lret
pop
cmp
test
imul
test
fwait
dec
xchg
xlat
scas
push
jle
and
loope
jnp
popf
je
or
arpl
cmp
adc
popa
data16
frstor
mov
dec
shlb
inc
mov
and
pusha
jo
aas
loopne
fisubs
dec
data16
mov
cld
test
jns
mov
fsubrl
pop
mov
mov
movsb
dec
mov
leave
out
sbb
pusha
cwtl
xchg
jl
rcrl
popf
xor
sub
aaa
cmpl
lcall
mov
int3
out
std
scas
enter
sbb
mov
sub
sahf
insl
ror
cltd
hlt
lock
pushl
mov
imul
and
lcall
sbb
pop
and
cmp
push
adc
adc
out
inc
fcomps
pop
loop
mov
sub
fstpt
nop
sbb
or
pop
pop
jge
sbb
cmc
and
sbb
and
cwtl
adc
mov
test
pop
int
cmc
add
mov
pop
test
xchg
sti
sbb
jb
fdivrp
add
rcrl
sbb
sbb
mov
push
test
add
mov
mov
loopne
in
cltd
push
mov
sahf
icebp
subb
fs
and
pop
shl
mov
aam
mov
movsb
je
ljmp
sub
adc
std
lea
mov
jb
add
stos
or
arpl
xchg
push
fisttps
mov
ret
sub
pop
js
jecxz
adc
xor
out
push
mov
cmp
loopne
ds
adc
pop
aaa
mov
adc
cli
dec
repnz
fwait
dec
pop
mov
sbb
jae
rclb
pop
shll
add
mov
shl
into
jp
addr16
cmp
inc
movsl
adcb
sbb
mov
loopne
cltd
shlb
js
orl
cmp
cmp
xchg
fisubl
hlt
test
ret
stc
xlat
ja,pt
sbbb
jmp
lahf
push
stos
and
dec
sbb
lods
sbb
ljmp
popf
mov
and
cmp
scas
cld
inc
jb
adc
mov
xchg
scas
fadd
lods
jbe
ljmp
adc
loope
add
loope
push
mov
mov
pop
mov
aaa
push
cmp
stc
test
xchg
out
in
cmp
jg
lods
cmp
add
lret
std
mov
lea
fadd
mov
dec
fists
adc
add
push
mov
fcoml
dec
idiv
push
aam
inc
mov
lcall
xchg
iret
fstp
mov
and
mov
sbb
inc
mov
insl
scas
loopne
enter
jo
test
mov
inc
pop
bound
out
or
or
pop
cmc
push
shrl
pop
pusha
add
mov
sbb
mov
lods
stc
fidivs
ret
nop
lods
int
adc
dec
leave
mov
cli
sbb
pusha
gs
ljmp
pop
cmp
aaa
adc
out
push
sbb
mov
aaa
movsl
imulb
push
add
cs
test
dec
test
nop
repz
xchg
jne
in
dec
pop
rcr
or
insl
and
adc
cmp
mov
xor
shlb
mov
lods
mov
jge
lods
imul
pop
sbb
stos
jmp
jno
int3
or
insl
inc
mov
sti
inc
dec
jno
and
sbb
pop
xchg
shr
xlat
push
in
sub
jg
sub
dec
idivb
out
and
daa
lea
jecxz
sbb
jg
sbb
xchg
das
loop
out
cld
xchg
jg
lret
mov
and
sahf
xlat
fmull
mov
shlb
add
mov
adc
pop
jl
sarb
ja
inc
lods
pop
cld
daa
fcompl
call
clc
cltd
lret
inc
add
out
loop
jnp
mov
cmp
je
cs
xchg
vrcpps
mov
xchg
push
sub
addl
pop
out
and
push
adc
sbb
and
sub
mov
sub
jp
and
aam
mov
mov
and
dec
adc
xor
sbb
lods
adc
rcr
icebp
jl
dec
test
push
test
jbe
call
mov
addr16
daa
pop
dec
sub
xlat
or
push
adcb
mov
popa
ja
mov
js
and
shrl
mov
or
push
mov
daa
adc
notb
push
add
call
enter
adc
sbb
fwait
sbb
dec
and
loopne
add
andl
inc
loope
xor
jle
aaa
cmpb
push
xchg
loopne
dec
out
out
xor
add
lock
sub
mov
int
xor
adc
orl
pop
cwtl
stc
jl
scas
mov
sub
popf
and
pop
rol
xchg
adc
dec
jmp
in
jae
mov
fstps
mov
out
repz
test
push
cmp
push
cmc
leave
or
fimull
aaa
inc
sub
cmp
repz
adc
xor
fiaddl
and
mov
or
call
shlb
scas
mov
loop
js
or
jbe
jns
cs
xchg
xor
popf
inc
or
mov
push
jmp
sub
pop
or
xchg
nop
xchg
mull
xlat
stos
adc
loope
mov
xchg
aam
shll
xchg
in
sbb
jbe
aaa
shll
pushf
and
bound
dec
or
add
add
add
jmp
jo
cmc
popf
fwait
dec
add
sub
or
push
loope
xchg
test
jecxz
outsb
push
popf
loop
mov
in
jno
mov
jl
push
fbstp
mov
andb
jnp
lock
lds
aas
and
popa
in
inc
movsb
pop
orl
cli
and
sbb
xor
push
push
fsubs
test
adc
lahf
or
adcb
bts
sbb
das
ret
dec
sub
pop
aaa
std
scas
mov
adc
cmp
mov
add
cmpsl
ja
das
and
adc
mov
add
daa
or
adc
dec
ucomiss
nop
lods
mov
mov
test
add
cwtl
sbb
adc
adc
mov
dec
adc
movsb
je
cwtl
sbbb
mov
push
lcall
fs
aas
add
scas
mov
mov
add
bound
mov
cs
dec
mov
mov
pop
lahf
or
fldl
test
cmp
sbb
and
lods
mov
mov
push
sbb
sub
enter
xlat
mov
into
popa
int
add
icebp
ret
lret
outsb
jl
add
push
aam
add
dec
inc
sbb
test
sahf
bound
aam
sub
std
push
lret
repnz
pop
arpl
pop
dec
popw
sub
sub
xor
xchg
addb
clc
repz
ret
pop
sbb
mov
je
add
iret
fildl
adc
xchg
push
cmp
mov
ds
cmp
stc
jle
jmp
insb
notb
rep
sub
add
mov
in
enter
xchg
orb
insb
xchg
and
mov
fsubrs
push
stos
shr
sti
jnp
out
sti
xchg
mov
sbb
sbb
data16
popf
mov
cmp
sub
pop
mov
dec
test
ret
out
arpl
pushf
lahf
dec
movsb
das
ljmp
pop
cwtl
addb
gs
and
ficomps
mov
add
inc
lret
mov
add
aad
jns
je
jo
movsb
data16
mov
add
fcomps
add
add
xor
push
sub
call
pusha
mov
call
add
pushl
pushf
lea
jmp
movb
lea
je
cmc
clc
push
pusha
add
pushf
lea
jmp
sub
push
pop
and
test
mov
cmp
outsb
adc
xor
sub
call
insb
sub
lods
stos
adc
mov
mov
js
xchg
mov
push
in
shlb
xor
jmp
pop
xchg
out
fnstcw
and
es
inc
push
ds
dec
inc
and
mov
decl
or
or
inc
lret
scas
lcall
out
les
adc
lret
add
mov
jg
xor
cli
sub
loop
sbb
sbb
lods
arpl
sbb
push
jmp
pusha
ror
adc
pushf
mov
bt
cmpb
movb
pusha
movb
mov
lea
jne
xor
push
shr
sub
sub
das
pushf
mov
xor
jmp
inc
jae
lea
add
aaa
stc
dec
jecxz
dec
out
out
adc
sbb
pop
xor
lcall
int
or
js
inc
lcall
stos
pop
enter
cmp
addr16
dec
dec
clc
adc
lock
call
clc
aam
dec
xorb
mov
je
mov
pushf
movb
pushl
ret
lret
cld
data16
pop
shll
negb
xchg
sbb
jnp
xchg
cmp
or
jge
mov
push
call
testb
add
mov
add
enter
icebp
loopne
subb
das
push
mov
mov
enter
jmp
pop
inc
jb
movsl
or
add
and
repnz
xchg
rcrb
jnp
leave
xorl
test
mov
pop
adc
test
add
loopne
shrb
btr
bsf
mov
stc
xor
add
js
mov
pusha
test
bt
test
mov
push
push
mov
lea
je
pushf
sub
jmp
mov
stc
pusha
cmp
pushf
lea
jb
stc
stc
cmp
jbe
ja
dec
push
add
lea
rol
jmp
lea
call
call
xor
push
data16
js
out
fstps
cltd
sub
xchg
incl
dec
setge
push
mov
sahf
mov
repz
jmp
jae
jmp
insb
pop
outsb
jb
cltd
mov
loopne
mov
popa
xor
jne
ret
pop
xchg
gs
or
inc
iret
push
sbb
sbb
aad
mov
push
imul
push
xor
mov
cltd
mov
das
sbb
push
je
mov
add
and
shl
mov
add
mov
sbb
dec
int3
dec
push
outsl
mov
pop
out
add
sbb
ja
daa
out
lahf
imul
pop
push
mov
mov
sbb
mov
mov
push
sub
mov
or
fcompl
in
out
add
pushl
popl
jmp
jle
pop
xchg
lds
mov
dec
mov
mov
lret
dec
out
roll
fldenv
xor
or
pushf
xor
lret
adc
hlt
xchg
cli
das
insl
jno
bound
sbb
jmp
sbb
xchg
int
pop
sub
sub
out
jne
and
inc
and
cmp
or
lea
jmp
pushf
pusha
jmp
movl
push
pushf
push
movb
mov
pushf
pushl
mov
pushl
ret
mov
mov
movl
xchg
sub
rcll
in
clc
pusha
add
lds
dec
cmp
outsb
loopne
push
ds
sahf
repz
mov
lret
xor
xchg
sbb
jmp
lret
insl
fs
xchg
xor
mov
mov
cs
add
fwait
inc
fstps
inc
or
or
xchg
lds
in
test
daa
mov
pop
jmp
movl
jmp
call
lea
je
push
lea
lea
pusha
jmp
lea
call
pushf
jmp
lea
bswap
mov
call
inc
pusha
call
lea
call
jmp
lea
jae
clc
jmp
mov
call
jmp
loopne
scas
sub
dec
or
mov
fiadds
dec
fidivrl
xor
push
cs
aad
cs
mov
out
popf
inc
lahf
adc
test
mov
mov
or
clc
push
adc
imul
or
popf
mov
and
jae
dec
mov
inc
adc
movsl
lea
dec
mov
sarb
aam
icebp
jae
in
adc
push
inc
and
and
push
dec
mov
cmp
dec
int3
pop
xor
insb
int3
test
push
ds
test
mov
dec
enter
cwtl
sbb
pop
push
rclb
push
enter
add
mov
cmpsb
enter
lods
pop
dec
cmp
and
movl
pusha
mov
lea
jmp
pusha
push
stc
cmp
jmp
jl
daa
mov
pop
jno
xchg
sbb
jg
stos
inc
pop
cmp
int
lock
jge
les
sub
std
out
in
xchg
fstl
and
and
xchg
cs
out
jge
mov
xor
inc
push
xchg
pop
jno
sub
sbb
ds
fldenv
idiv
lds
jg
inc
add
ret
outsl
jge
xchg
fcompl
mov
xchg
inc
or
gs
sub
cli
and
lret
gs
popf
jns
jle
divb
pop
stos
in
cmp
xchg
fldenv
test
mov
lock
jge
lds
push
push
dec
loopne
pushf
or
rclb
and
sub
add
and
scas
push
and
or
test
lret
xchg
jbe
mov
mov
outsl
mov
std
ljmp
clc
insl
stos
das
add
sub
jmp
and
ss
stos
push
mov
push
jns
das
cli
or
test
out
loope
mov
jp
or
lods
dec
pop
sbb
in
aaa
imul
and
arpl
mov
data16
test
inc
push
lock
xchg
and
les
lea
cmc
pushf
test
jmp
sbb
fs
or
sub
xchg
or
pop
inc
mov
or
jo
mov
sub
shll
cmp
hlt
stos
cmp
cwtl
cmpsb
cmp
and
cmp
int
mov
dec
cli
loopne
bound
fmull
jbe
and
jp
mov
enter
test
lcall
mov
xchg
mov
sbb
xchg
mov
clc
push
pushf
les
push
xor
ljmp
inc
mov
adc
fbld
adc
jp
cld
fidivl
mov
push
ss
dec
push
adc
mov
sahf
and
jle
push
or
loopne
repz
dec
enter
sbb
enter
loop
fsubrs
mov
dec
filds
ret
and
pop
pushl
lea
jmp
stc
cmp
test
repnz
pusha
lea
jne
not
lahf
mov
jmp
pusha
pushf
movl
mov
push
lea
jnp
push
pushf
pushf
pusha
lea
jmp
add
dec
outsl
popa
fs
imul
add
rolb
neg
adc
shl
mov
call
push
pushf
lea
jae
pusha
jmp
lea
jmp
push
mov
xchg
add
out
dec
loope
adc
cmpsl
pop
fstp
out
pop
mov
addr16
lahf
xchg
jl
sbb
xchg
lret
call
sub
rorl
dec
mov
orb
or
sbbb
in
push
leave
ret
push
jge
push
mov
in
outsb
icebp
mov
orl
addr16
adc
movsl
cmp
push
pop
lret
popa
dec
movl
jmp
sub
icebp
jmp
mov
icebp
ret
push
inc
pushf
neg
stc
clc
pushl
rol
call
jae
and
sub
mov
adc
mov
or
in
mov
cmp
repnz
xchg
scas
sbb
sub
mov
sar
movsb
movl
mov
lods
jle
and
dec
arpl
add
fldt
loop
mov
pusha
mov
jmp
movb
pushl
popl
push
pushf
pushl
ret
mov
pushf
lea
jmp
pop
xor
xchg
add
mov
ret
or
call
cld
rclb
or
int
mov
xor
test
hlt
lods
xchg
pushf
cwtl
stos
pusha
inc
cld
xor
int3
popa
lcall
mov
icebp
mov
jnp
jmp
scas
outsl
inc
dec
aad
mov
pop
test
ja
sbb
stc
sub
add
neg
bsf
add
test
mov
sub
pushf
mov
stc
clc
push
repnz
pushf
push
pushf
pusha
lea
jne
movsbl
movb
push
cwtl
mov
mov
jmp
cmc
xor
push
jmp
dec
push
out
jg
pop
sbb
pop
andl
jmp
sbb
sbb
fwait
or
idivl
xchg
xchg
and
mov
fistps
subl
pop
sub
aaa
cmp
imulb
test
rcrb
fisubrs
das
xor
cmp
or
test
jno
in
xor
dec
rolb
and
loope
add
je
and
dec
shrb
or
jo
scas
xchg
mov
and
and
jge
ret
push
pop
outsl
out
outsl
dec
sbb
sarl
add
insl
push
mov
shrl
pop
addr16
jmp
add
ret
imul
mov
stc
inc
mov
xor
decl
pop
sub
cmpsl
cmp
jmp
and
aaa
in
pop
movsb
insb
aaa
xchg
mov
dec
inc
xchg
jecxz
pop
fdivrl
popa
lret
cwtl
adc
mov
jg
cs
js
in
xchg
test
lahf
and
rcrl
mov
pop
sub
xchg
fsubrs
xchg
into
sub
adc
add
lret
jle
mov
push
ss
fiaddl
adc
mov
cmp
mov
adcl
push
orb
lds
gs
fcmovu
lret
jne
mov
push
enter
ljmp
jle
movsb
inc
cwtl
sbb
lea
adc
and
mov
fstpl
mov
clc
lret
xchg
inc
sbb
xchg
add
lea
not
mov
jmp
xor
repnz
test
lock
aas
stc
mov
test
sbb
loopne
scas
in
jmp
test
mov
imul
shlb
jge
sbb
and
pushw
outsl
cmp
add
loopne
out
pop
sbb
xor
out
movsl
std
mov
mull
inc
add
inc
test
addl
cmp
jp
cld
sub
sti
push
test
mov
mov
jg
out
cmc
jbe
mov
add
sbb
cmpsb
mov
subl
aas
cld
std
inc
pusha
jnp
lret
dec
inc
dec
dec
test
jp,pt
lods
jmp
pusha
imul
or
mov
aam
add
clc
cmpsb
xchg
jge
test
test
inc
es
cmp
call
rclb
dec
dec
or
push
xchg
xor
hlt
xor
xor
cmp
leave
pop
iret
gs
add
jge
sub
imul
cmp
add
mov
xchg
test
mov
cld
jp
lcall
aas
and
jge
add
jnp
and
pop
inc
inc
jl
daa
stos
std
sbb
pusha
pop
repz
jmp
ds
mov
mov
inc
addb
push
mov
xor
inc
mov
sbb
cmp
call
sub
mov
je
jne
idivl
inc
sbb
rcrl
clc
mov
in
ret
into
loopne
iret
movb
cmpsl
cmp
mov
push
add
leave
mov
cltd
inc
js
adc
arpl
andb
sbb
movsl
dec
nop
dec
push
inc
inc
ds
cmc
lock
inc
mov
sbb
push
sbb
sbb
test
inc
out
and
pop
or
or
dec
sbb
lds
adc
jle
fstpl
sbb
test
popf
jnp
cmp
sub
lock
push
out
cmovp
mov
mov
in
mov
stos
pop
test
roll
mov
dec
mov
movb
lods
xor
mov
lods
icebp
sub
adc
wbinvd
dec
test
in
add
jae
inc
sbb
leave
scas
mov
sbb
cmc
mov
imul
jge
test
enter
cmp
or
andl
inc
dec
aaa
or
xor
push
sbb
mov
jge
cld
lock
pop
lock
push
inc
stos
add
sbb
cmpsl
mov
ljmp
lret
mov
cmc
xchg
sbb
push
iret
leave
dec
dec
in
test
and
pushl
or
enter
repnz
adc
mov
leave
lods
or
and
mov
test
call
jne
test
mov
dec
inc
sbb
sbb
mov
sub
mov
mov
mov
dec
fcoml
clc
and
inc
cmc
loopne
sbb
roll
sub
inc
xchg
imul
sbb
subb
mov
jp
mov
add
enter
adc
cmpsl
imul
fs
lods
dec
leave
dec
rorl
hlt
and
ljmp
ljmp
mov
cld
jge
in
sub
hlt
cmp
and
sbb
mov
xor
mov
mov
iret
xchg
jbe
jl
mov
nop
add
imul
jl
fistpl
sbb
imul
xor
inc
sbb
jno
scas
test
add
stc
sub
jp
push
stc
bnd
ljmp
into
stc
xor
xacquire
xchg
movb
stos
stc
mov
or
xchg
insl
mov
in
inc
pop
bound
insl
dec
pop
sub
inc
sbb
dec
add
sar
mov
scas
mov
int3
add
or
in
inc
mov
loop
ljmp
jnp
and
cmpsl
mov
jb
add
test
sub
call
xor
xchg
ljmp
loopne
sbb
jnp
mov
pop
test
movb
aas
push
cmc
stc
lds
test
cmpb
or
shl
in
pop
lahf
insl
in
mov
jne
sbb
testb
jne
push
and
addl
xor
iret
fwait
push
call
inc
sti
nop
sub
mov
ds
cs
push
loop
xor
imul
inc
repnz
mov
test
mov
les
mov
lods
fwait
xor
je
cmc
test
inc
push
in
je
inc
xorb
cmc
xor
jmp
cli
inc
in
cs
ljmp
xchg
jne
adc
sbb
xchg
xor
mov
ss
inc
les
shrl
aas
and
xor
repnz
add
pop
push
jbe
adc
stc
jnp
ss
xchg
out
out
inc
inc
and
mov
imul
out
aas
roll
sub
hlt
inc
lahf
mov
inc
leave
add
mov
lods
inc
fbld
sbb
adc
stc
test
cmpb
cmp
add
lock
cmp
sbb
inc
hlt
shrl
jg
mov
mov
stc
add
sub
xchg
test
push
shrl
mov
dec
jnp
in
xor
sbb
inc
clc
mov
les
ret
xor
shrb
add
roll
push
stos
inc
lahf
sub
jnp
ljmp
inc
into
mov
xchg
xor
call
inc
rolb
cli
inc
mov
jle
cmc
mov
leave
fwait
jo
push
lds
stos
inc
xchg
xor
andl
mov
and
imul
sub
iret
xor
hlt
inc
stos
inc
sbb
in
pop
cmpsb
mov
sub
sbb
inc
dec
rcrb
addb
movb
pop
test
hlt
inc
and
mov
fisttps
aam
add
roll
lock
inc
inc
mov
mov
and
adc
test
add
inc
sbb
jmp
inc
aam
and
and
int3
xlat
enter
pop
mov
clc
jnp
in
addb
push
add
cmpsl
jmp
lods
xchg
push
test
sbb
lock
push
adc
pushf
sub
mov
xor
inc
xor
mov
cltd
inc
jo
jne
daa
mov
push
daa
xor
inc
enter
rcrl
imul
xor
sti
ss
xor
imul
mov
inc
jmp
cmc
push
inc
add
pushf
hlt
inc
sbb
inc
addr16
xchg
sbb
sub
jmp
xor
aad
rcll
sub
xor
pushf
aas
lock
mov
xor
xor
inc
cmp
rcll
ret
jns
mov
cmp
ret
jns
in
out
dec
and
push
shll
dec
pushf
hlt
cli
pop
cltd
stos
jnp
adc
insl
lods
pop
push
lods
inc
mov
push
push
pushf
hlt
subb
daa
dec
call
pushf
addb
or
inc
jbe
pushf
sbb
ret
inc
imul
mov
mov
mov
leave
xchg
inc
clc
push
dec
mov
mov
jb
xor
les
or
inc
dec
pop
daa
rcrl
xchg
in
test
cld
loope
sbb
jl
mov
lret
lret
lock
sbb
iret
add
cld
lret
inc
jp
stc
jae
jnp
cmp
pop
iret
push
mov
in
pushf
jp
adc
imul
mov
adc
stos
stc
mov
ss
mov
jnp
das
push
adc
jbe
jb
pushf
pop
ljmp
stos
movsl
sub
cmp
aad
pushl
jge
repnz
mov
push
stos
sbb
test
push
sbb
xor
fmulp
lret
orl
sub
pmuludq
iret
lahf
divl
imul
lock
dec
test
adc
sub
aaa
dec
sub
int3
imul
pop
stc
adc
inc
inc
ret
jnp
ret
mov
pushf
inc
int3
daa
out
mov
lock
daa
jle
jae
xor
xchg
xor
orl
mov
inc
xchg
inc
push
and
cmp
mov
xor
inc
movl
in
xchg
mov
in
aad
das
sti
es
jnp
lods
lods
sarl
add
inc
sub
andb
fnstcw
andl
ljmp
cmp
mov
pusha
mov
adc
mov
negl
add
and
xorl
ret
loopne
nop
icebp
ss
cmpsl
test
pop
mov
mov
inc
loop
gs
sub
call
and
test
cmp
jg
clc
stc
fdivrs
cmp
mov
cmp
pop
pop
repz
pop
cli
daa
gs
je
stc
jns
ljmp
loope
and
pusha
xorps
sbb
lret
mov
popf
sub
mov
sub
xlat
mov
sub
mov
aaa
sahf
pop
pop
jo
out
cli
js
movsb
mov
mov
out
or
push
icebp
js
cwtl
andb
bound
and
or
fwait
mov
clc
mov
mov
push
mov
loopne
jecxz
and
insl
mov
xor
scas
ja
jo
insb
xor
jbe
in
sub
sbb
icebp
pop
mov
insb
movsb
bound
scas
movsb
movsl
mov
and
jecxz
incb
lods
mov
movsl
mov
mov
dec
mov
jo
daa
mov
cmp
sub
popf
enter
cmp
cmp
outsl
xor
stos
insl
das
shl
fwait
scas
dec
stos
nop
mov
adc
sub
xor
mov
cmp
or
je
in
cmpsl
inc
and
in
stos
pop
xor
loopne
xor
cltd
xor
movsb
insb
xchg
ret
scas
andb
inc
sti
xchg
sahf
insb
sub
lcall
aam
mov
xchg
mov
fs
cmp
je
stos
push
sub
sub
inc
pushf
push
aam
aaa
mov
adc
into
mov
insb
sarb
cmp
scas
sbb
ret
cmpsb
lcall
mov
test
mov
in
pop
sub
stos
mov
cltd
in
gs
push
adc
pop
call
rol
mov
dec
pop
push
fwait
xchg
std
mov
cmpsl
and
out
hlt
adc
fwait
outsb
mov
mov
mov
xor
scas
push
inc
push
sahf
xor
mov
cli
stos
mov
fwait
push
out
mov
sbb
fs
mov
push
xorb
xchg
lcall
andl
loopne
mov
sbb
xchg
adc
stos
jecxz
cwtl
inc
cltd
mov
adc
and
mov
loop
ret
bound
inc
shlb
add
ret
mov
pop
mov
movsb
mov
insb
gs
sarl
rolb
xchg
push
mov
and
fisubrs
movsl
call
inc
fs
nop
jae
xchg
leave
mov
int
push
dec
out
mov
inc
xchg
xor
xlat
cmc
jbe
stos
push
mov
arpl
mov
lock
sub
pop
stos
out
cmpsl
mov
dec
cmp
out
cmp
mov
call
arpl
into
mov
out
pop
out
out
shrb
popa
mov
xor
ret
pop
or
mov
arpl
xor
lods
je
mov
mov
mov
js
inc
loope
lods
pop
push
xor
inc
mov
jmp
cltd
rorb
and
xlat
ret
je
mov
add
mov
mov
push
int
daa
jl
roll
popf
stos
add
hlt
mov
pop
lcall
negl
jo
mov
and
adc
sub
push
xchg
mov
into
hlt
xchg
sbb
sahf
push
cwtl
cld
call
ljmp
sahf
in
into
aaa
loopne
inc
ja
out
pop
mov
ret
xchg
push
les
cmpsb
popa
inc
bound
es
icebp
mov
mov
shrb
out
lods
lds
jno
hlt
sbb
xchg
mov
xchg
lods
aas
scas
inc
mov
pusha
test
mov
inc
xchg
ret
or
sub
int
stos
jnp
test
or
cmp
push
arpl
pop
repz
push
enter
jmp
mov
popa
dec
loop
ret
mov
mov
test
mov
decl
fidivrl
sub
jmp
daa
mov
lock
mov
lods
stos
adc
mov
out
sub
test
ror
fstps
xor
sub
lret
out
clc
imul
jecxz
xor
clc
jnp
mov
xchg
clc
out
xchg
nop
loop
add
jnp
cmp
in
mov
mov
push
mov
and
inc
movsl
negl
sub
in
loop
test
and
sub
aad
aam
mov
gs
cmp
and
roll
sub
mov
call
xor
sbb
mov
cmpsb
and
ret
and
mov
js
out
ljmp
dec
ficoml
dec
add
pop
xorb
mov
jmp
xchg
add
scas
les
and
mov
movsl
mov
ret
iret
loop
stos
dec
add
or
mov
mov
adc
lods
lods
sub
inc
adc
lods
in
iret
and
pusha
pop
repnz
mov
loope
inc
pop
pop
mov
or
pop
loopne
pop
inc
pop
lock
add
fucomp
popl
cmpsb
mov
cmp
mov
sbb
cld
sub
adc
test
and
fildl
sbb
test
sbb
mov
jne
mov
stos
xchg
sbb
stc
inc
test
in
add
inc
push
idivb
adc
and
movsl
mov
mov
push
mov
outsb
rcrb
stos
mov
mov
fcmovne
outsl
inc
icebp
xor
mov
mov
fcmovnbe
mov
or
insl
jnp
dec
xchg
xor
xor
or
test
mov
cmpsb
aad
xchg
dec
adc
mov
je
inc
cltd
xchg
into
insl
lahf
mov
movsb
gs
add
jp
and
out
mov
xorl
mov
lock
mov
adc
pop
mov
cmp
ja
icebp
sbb
or
andb
or
xchg
hlt
dec
bound
dec
dec
push
pop
or
xorl
int3
jl
orb
loop
stos
ljmp
mov
into
mov
cwtl
lcall
in
mov
xor
popa
pop
jae
mov
inc
icebp
popf
insb
rcrl
fcomip
adc
idivl
test
xor
mov
mov
jbe
lcall
rorb
fwait
les
je
mov
add
in
cmpsb
inc
xchg
out
loop
ret
jle
and
sub
out
mov
insb
mov
sub
pop
aas
je
cmc
loop
jae
mov
bound
repnz
mov
inc
add
mov
mov
mov
insb
nop
xor
mov
push
outsl
hlt
mov
cmp
mov
mov
out
sbb
xor
pop
sbb
scas
call
mov
cli
sbb
mov
cmp
lret
loope
addb
add
push
sub
jae
repz
cmp
test
dec
and
lret
aas
cmpsl
push
push
clc
mov
fucomi
push
or
push
aam
add
adc
add
mov
cmp
push
outsl
adc
xor
sahf
outsl
in
repnz
scas
daa
cmpsl
pushf
pop
ret
mov
mov
frstor
repz
xchg
push
push
mov
mov
loopne
mov
pushf
aad
in
movsb
daa
fdivrs
popf
xchg
push
xchg
out
andl
pusha
dec
arpl
mov
lods
or
out
pop
cmp
add
push
out
or
data16
sahf
xchg
ret
scas
test
stos
test
outsl
outsl
arpl
movsb
mov
mov
pushf
sub
stos
cmpsl
addr16
sti
into
arpl
pop
popf
loopne
add
dec
sub
or
inc
pop
sbb
xchg
mov
cmp
sbb
sbb
xchg
cld
sbb
xchg
daa
fsubl
fiadds
sub
je
sbb
sub
inc
lcall
jmp
sub
adc
cmp
mov
and
xchg
xchg
divl
cmpsb
leave
stos
mov
jnp
aas
mov
inc
cmpb
test
push
jnp
scas
movl
in
sbb
mov
scas
mov
ror
sub
rclb
mov
and
sub
add
je
cmpsl
fcomip
test
dec
fcomi
movsb
lds
decb
mov
ret
sbb
hlt
mov
repz
sti
test
movsl
mov
fs
addr16
xchg
and
xchg
iret
inc
std
pop
cmp
sub
test
jae
cmp
aas
aas
adc
mov
mov
or
loop
ret
cld
cmp
add
ret
mov
scas
rcr
mov
stos
ss
or
scas
xor
and
dec
movsb
mov
cli
loopne
flds
imul
cmpsl
pop
cmpsl
stos
addr16
sahf
add
es
mov
shll
xchg
imul
mov
pusha
leave
lcall
addr16
loop
loop
sub
adc
loope
dec
repz
pop
out
outsl
pop
push
imul
std
fwait
inc
loope
push
mov
and
xor
mov
inc
sbb
lcallw
sbb
loopne
and
and
pop
pop
mov
outsb
addr16
mov
push
sahf
add
and
inc
arpl
popa
inc
and
xor
xorb
jb
fistpl
pop
call
in
out
icebp
jnp
and
cltd
stos
popa
lahf
mov
repz
and
cmp
sbb
xlat
xlat
lcall
ss
mov
mov
and
insb
push
cmpsb
ret
ds
std
push
jnp
pop
mov
movsl
lcall
add
out
popa
loopne
mov
mov
ret
hlt
sub
and
ds
adc
les
popf
scas
out
repz
inc
cld
jmp
sbb
test
lcall
std
dec
or
hlt
and
mov
lea
mov
aam
dec
ds
push
mov
call
jne
lock
scas
popf
lea
and
scas
mov
rcrl
outsb
pop
mov
dec
aam
lcall
cmc
inc
je
or
inc
outsb
pop
push
and
mov
shlb
movsb
aam
mov
or
data16
mov
mov
cmp
ret
lea
arpl
cmp
pusha
loopne
ja
sub
repz
cli
das
jbe
dec
ret
mov
loope
shlb
sub
pop
mov
mov
lcall
pop
fcmovbe
push
out
mov
jo
mov
ret
xchg
popf
adc
mov
jae
test
test
inc
sahf
pop
out
and
xchg
rcrb
out
xchg
inc
fsubs
clc
daa
pusha
mov
sahf
pop
out
daa
stos
and
adc
scas
jge
ljmp
mov
fsubp
fstps
shr
mov
mov
and
daa
mov
icebp
lahf
pop
pop
dec
das
push
or
out
mov
les
pop
mov
jge
xchg
ja
out
loope
or
test
imul
data16
jp
mov
push
push
mov
les
cs
xchg
repnz
enter
daa
cwtl
in
push
insl
insb
xor
stos
lahf
stos
fs
cmc
pusha
js
sbb
js
mov
xchg
mov
push
mov
or
sbb
inc
test
call
mov
or
test
jmp
bound
xor
aaa
mov
dec
lock
add
mov
insb
dec
daa
nop
std
out
mov
movsl
outsb
push
mov
and
sub
push
cmp
inc
push
pop
xor
xor
mov
xor
push
scas
push
fs
fwait
orl
stos
mov
or
or
mov
cs
js
std
popf
fwait
sub
lret
inc
jbe
out
xchg
dec
and
xor
and
repz
imul
and
or
int3
jle
pop
fisubrl
jno
les
inc
loopne
int3
cmp
fcmovnb
mov
sub
xorb
ret
xchg
lock
pop
jbe
insl
loop
cmp
test
pop
dec
inc
and
fimull
mov
fldlg2
stos
out
in
cmpsb
sub
mov
sbb
lcall
fwait
jle
jns
ficomps
add
and
testb
subl
fldcw
and
push
jno
popa
xchg
adc
jbe
mov
push
iret
inc
negb
xchg
adc
cli
ds
cmp
mov
xor
subb
sbb
pop
mov
scas
mov
sub
int3
test
fdivp
sbb
cmp
jg
adc
jmp
fildl
xchg
xlat
push
movsl
inc
lcall
adc
sbb
mov
sbb
test
pop
push
sub
aad
jo
mov
xchg
and
mov
stos
xchg
adc
xor
clc
je
daa
and
mov
adc
int3
das
pop
in
sub
push
jp
call
push
repnz
out
pop
in
test
mov
cli
mov
decl
test
push
adc
lret
mov
add
scas
inc
mov
inc
icebp
movsb
sahf
adc
ljmp
stos
pusha
and
mov
movsl
daa
mov
fwait
in
sbb
aas
subl
loope
and
cmp
cmpsl
out
adc
test
inc
out
in
iret
or
stos
fwait
push
shlb
cwtl
sub
daa
push
out
imul
test
aaa
in
in
cmpsb
and
shrb
jno
int
data16
push
cmpsl
bound
rorl
scas
jo
out
cli
xlat
mov
les
lods
fwait
inc
in
call
repnz
or
mov
add
rclb
sub
jno
cmc
sbb
fldt
repnz
jge
xchg
jle
leave
dec
sbb
orl
test
adc
xchg
imul
lds
int
xchg
lock
mov
cltd
mov
xchg
xchg
iret
nop
in
leave
je
pushf
popa
mov
icebp
pop
push
or
inc
outsb
call
mov
lahf
ret
mov
leave
lret
xor
mull
leave
xchg
xchg
bswap
repnz
add
cmp
and
pop
xor
jo
jbe
mov
push
mov
in
xchg
pusha
out
pop
cwtl
jge
loop
fimull
mov
shrb
rcll
mov
mov
mov
cmp
shll
and
scas
loope
mov
scas
mov
mov
sbb
xchg
push
mov
into
adc
daa
mov
das
xchg
stos
mov
jb
clc
sub
test
ret
add
divb
fisubrl
jmp
aam
fwait
xor
xor
addr16
daa
outsb
pop
std
inc
inc
testl
lcall
jge
fwait
and
loopne
lcall
es
push
insb
stos
adc
mov
pop
mov
pop
ret
and
test
adc
nop
and
xor
imul
sahf
out
sbb
out
int
popa
push
inc
pop
gs
daa
and
mov
insb
ret
xor
ds
loopne
mov
mov
mov
int3
lock
mov
mov
cwtl
nop
dec
cmp
cmpsb
rcrb
inc
adc
and
dec
mov
xor
and
test
sub
mov
test
add
std
mov
mov
push
inc
mov
shlb
sub
test
insb
call
outsb
shlb
cmpsb
sarb
push
mov
repnz
xor
lods
movsb
mov
icebp
cmpsb
xchg
ficomps
mov
imul
and
fisubl
xchg
daa
mov
pushf
mov
sub
add
lods
clc
adc
inc
cmp
test
lcall
lods
daa
jno
inc
add
mov
test
and
push
sbb
add
pop
sbb
pop
fbld
out
loop
sub
and
test
push
popa
xchg
jge
mov
xchg
test
dec
and
nop
popa
ljmp
scas
add
popf
lcall
bound
ja
cmpsb
pop
andl
and
enter
leave
and
jmp
sbb
bound
xchg
in
jo
mov
mov
in
data16
fs
andb
xchg
movsl
cwtl
sbb
and
cmpsb
popf
pop
adc
movsl
fiaddl
aas
sub
jae
test
cmp
rol
mov
lds
and
mov
pop
and
dec
add
sub
xchg
and
aaa
loop
test
mov
xor
fsubrs
fidivs
sub
das
mov
xchg
pop
mov
and
add
test
sub
scas
xchg
mov
mov
mov
mov
mov
addb
add
imulb
and
repz
lea
xchg
insl
jb
sub
bts
out
shlb
jnp
lret
es
call
cmpsb
pop
xor
movsb
sbb
addr16
jnp
scas
and
pop
inc
sub
in
cmpsb
pop
and
mov
or
mov
sbb
mov
aam
test
mov
in
xchg
mov
mov
push
out
mov
sbb
xchg
and
lahf
rcl
push
cmp
push
imul
add
rcrb
cwtl
outsb
aas
clc
popa
rcll
and
adc
loop
jbe
imul
mov
mov
sbb
shll
fs
loope
and
mov
out
pop
push
and
pop
mov
xor
adc
movsb
inc
cmpl
mov
sub
inc
sahf
imul
mov
cmp
inc
loope
rorb
or
jecxz
pusha
pop
shl
mov
mov
inc
lcall
xor
lcall
ret
pop
data16
adc
xor
cmp
push
mov
mov
sbb
jg
mov
cmpsb
and
cli
pop
xchg
bound
jle
jmp
xlat
shr
movsl
mov
loop
cwtl
lods
imul
xor
mov
push
lcall
add
ret
lcall
cmp
pop
movsl
pushf
mov
icebp
fwait
ret
mov
xchg
test
mov
mov
insb
jecxz
insl
imul
mov
test
mov
loope
and
cmpsl
pusha
push
insb
mov
push
adc
push
sub
mov
negl
cmp
mov
push
and
jg
or
lcall
jbe
and
pop
lcall
jne
mov
mov
fwait
xchg
mov
sub
pushf
mov
rcrb
pop
dec
loopne
mov
ja
add
repz
scas
or
lods
inc
push
shrb
lcall
out
sub
in
pop
rolb
and
stc
cwtl
mov
jno
test
mov
mov
inc
jmp
test
cmpsb
das
xchg
sub
mov
js
mov
mov
mov
xchg
lcall
xor
mov
mov
lret
and
mov
fs
je
loope
xor
mov
lock
movsl
fwait
dec
xor
loopne
sar
push
inc
jmp
adc
sti
mov
mov
cmpsl
dec
out
xchg
lods
lcall
out
mov
les
mov
mov
sub
push
push
mov
mov
inc
jle
mov
ss
xlat
jo
lcall
sub
mov
inc
hlt
out
cmp
ret
repnz
push
dec
cmpsl
push
lock
daa
or
or
out
insb
fsubs
and
mov
daa
movsb
mov
xlat
cmc
stos
scas
lock
ret
pusha
jp
mov
push
pop
push
xor
icebp
ljmp
pop
sbb
mov
in
inc
popa
cmpsb
lods
aam
cmp
xchg
sbb
sarb
fs
pop
popf
cmp
dec
insb
loop
sub
lcall
hlt
mov
add
bound
ljmp
mov
xor
adc
mov
push
cwtl
adc
lea
mov
adc
popa
lcall
outsb
aad
inc
push
aaa
mov
xor
out
mov
inc
mov
xor
je
sbb
test
cmp
cltd
in
out
mov
cmpsb
ret
pop
inc
out
or
xor
andb
test
jne
in
jbe
cli
and
xchg
mov
jmp
adc
dec
mov
aas
loop
outsl
lock
jae
and
das
daa
pop
outsl
xor
test
clc
rcl
js
cmpsb
ljmp
insb
and
mov
loopne
loope
jbe
mov
mov
pusha
in
je
hlt
daa
ret
scas
cmpsb
daa
out
imulb
sbb
pusha
sbb
into
push
jmp
repz
inc
aad
mov
pop
and
aad
in
xor
lock
pop
decb
cmpsl
and
and
mov
mov
sub
push
divb
loop
push
push
lds
bound
adc
and
scas
mov
xor
cwtl
pop
adc
jns
imul
xlat
xchg
repz
pop
push
mov
push
lcall
in
xchg
inc
scas
sub
insl
fistpll
jge
pop
fwait
add
in
and
xchg
repz
roll
fimuls
movsb
adcl
daa
call
lcall
fwait
adc
loop
xor
jecxz
xor
or
and
mov
fwait
or
mov
test
mov
jl
and
cmpsb
repz
loopne
push
outsb
je
dec
outsl
inc
ret
sub
rclb
out
outsl
mov
lods
and
inc
in
les
xor
call
scas
inc
mov
lahf
call
xchg
shrb
int3
add
fildl
fs
add
xchg
cwtl
jno
lea
xchg
jmp
test
je
ret
out
lret
popa
andl
test
mov
in
or
daa
or
cwtl
sbb
dec
pop
cmpsl
or
clc
nop
scas
xchg
pushf
add
fistps
loop
jnp
jns
push
popa
inc
ss
lock
sub
test
xor
fs
sbb
push
jns
xchg
mov
mov
and
and
dec
out
mov
pop
frstpm(287
rclb
insl
add
jb
mov
sub
shlb
lret
scas
push
and
xchg
test
addb
outsb
sbb
shrl
xor
push
lds
pop
out
inc
les
jp
and
mov
fidivl
ja
push
imul
or
adc
sti
hlt
or
jle
repnz
and
mov
cmpsb
shlb
js
xor
outsl
outsb
mov
fldt
nop
jg
xlat
jmp
call
and
in
cmpb
xlat
pop
jo
outsb
sahf
mov
subb
sub
iret
xchg
aad
mov
mov
jns
xlat
xor
int
mov
in
mov
jnp
rol
cmc
pop
mov
out
add
fistps
ja
out
inc
shlb
cmpsl
stos
ret
xchg
negl
leave
jo
jae
mov
lea
incb
movsb
addr16
ljmp
aam
xchg
lcall
mov
movsb
push
in
mov
mov
add
adcb
push
mov
cld
test
sbb
out
aaa
push
sahf
lds
lret
push
lcall
out
push
rorl
gs
jl
scas
lods
mov
mov
and
inc
insb
mov
out
ret
and
mov
and
mov
jbe
mov
enter
mov
fldt
inc
daa
rolb
xlat
fidivrl
xor
push
jnp
cltd
push
shll
add
mov
lods
pushf
fcompl
stos
dec
xor
nop
inc
cmp
ret
mov
mov
aad
js
pop
add
sub
pop
push
test
sub
cmp
popa
dec
adc
or
pushf
mov
fistps
sahf
iret
pushf
mov
xor
neg
adc
sbb
xorl
and
lea
mov
mov
and
cmp
stos
call
stos
adc
mov
mov
xchg
and
pop
jmp
arpl
orl
push
aaa
sub
xchg
ret
aas
cld
in
xor
bound
add
xcrypt-cbc
cmpsl
xlat
jp
mov
andb
inc
in
push
shrb
mov
data16
imul
data16
xchg
jg
dec
jno
jne
stos
out
mov
inc
rolb
push
xchg
and
adcl
mov
jecxz
adc
sub
testl
mov
jnp
mov
pop
push
and
cmpl
lcall
shrl
movsl
jecxz
add
and
int
xchg
lea
rcrb
mov
aas
jecxz
repz
xor
je
xchg
xchg
jl,pn
xorb
xlat
inc
out
movsb
xchg
sbb
outsb
jmp
ret
aas
cmpsl
je
pusha
sbb
mov
sub
movsb
jl
add
ja
movsl
aaa
add
push
xchg
sub
add
cmpsl
inc
clc
aas
mov
mov
mov
xchg
negl
jb
ss
es
sbb
pop
xor
negl
xchg
in
jno
shlb
fwait
and
mov
or
mov
in
xchg
scas
inc
adc
je
aad
cmp
test
push
les
inc
cwtd
sar
insb
popa
xchg
es
or
sub
cli
lods
addr16
push
bound
xlat
call
pop
divb
xchg
jmp
out
jge
addr16
cmp
clc
xor
jle
ficompl
not
lods
adc
lock
sbb
push
xor
xchg
negl
pop
aaa
movb
out
clc
jecxz
test
adc
sub
mov
pop
sub
daa
inc
je
or
ror
pop
stos
jl
mov
repnz
shr
cli
stos
mov
mov
outsl
call
mov
lret
aad
das
dec
addr16
loope
push
bound
mov
call
adc
push
cwtl
daa
les
pop
repz
mov
push
rcrl
std
add
in
inc
ds
lcall
call
out
and
mov
xor
xor
mov
cmpl
psrad
cmp
jg
lock
call
aas
add
stos
out
lret
mov
lods
je
shl
lcall
xchg
repz
pop
movsl
sti
ret
adc
imul
into
fwait
mov
test
add
call
adc
loop
jne
lret
hlt
fwait
testb
add
pusha
cmp
and
out
push
jnp
movsl
sub
fcomps
cli
mov
mov
push
inc
call
mov
mov
es
in
sub
out
cmp
pop
cmpsb
lea
add
popf
lock
test
mov
pop
stos
cmp
sub
outsb
pop
clc
dec
jle
arpl
adc
std
mov
and
pop
mov
inc
xchg
mov
and
and
mov
mov
daa
mov
inc
loope
stos
rcl
inc
xchg
adc
inc
notl
scas
shr
cmpsl
sbb
jle
jl
ljmp
bound
cwtl
out
jbe
test
outsb
mov
fcompl
inc
jl
inc
out
stos
mov
sub
call
scas
test
in
or
adc
pop
adc
mov
mov
test
and
bound
xchg
pop
inc
lock
ficomps
xchg
and
push
and
mov
ret
mov
push
inc
push
lods
inc
adc
outsb
pop
gs
mov
sarl
add
xchg
and
lcall
shr
daa
xchg
sub
inc
mov
xor
dec
lock
xchg
jne
xchg
sbbl
mov
mov
add
push
mov
dec
xchg
enter
xorl
nop
jo
ret
insl
imul
out
out
neg
pop
lock
mov
mov
pop
mov
add
and
adc
cmpl
mov
mov
mov
dec
movsl
fimuls
pop
inc
std
das
fwait
sub
or
in
roll
es
or
xchg
mov
inc
je
mov
and
das
ja
notl
loop
sbb
or
iret
mov
adc
jnp
jno
ljmp
pusha
inc
mov
add
imul
adc
aam
mov
es
out
push
and
lcall
sub
pop
in
jb
jge
mov
fnstsw
mov
test
arpl
sub
hlt
sti
sub
psrlw
das
add
pop
cmp
and
cli
sub
sbb
popf
sbb
jecxz
out
cmp
or
mov
push
xor
push
lcall
jno
outsb
mov
pop
cmc
outsl
fcmovb
sbbb
es
lcall
jns
xor
imul
mov
or
push
lock
push
jne
stos
mov
loop
fwait
xor
adc
iret
lock
addr16
scas
sub
movsl
scas
jle
lcall
cltd
fildl
lods
fucom
xchg
ret
adc
lahf
lods
inc
call
inc
in
push
pop
out
mov
xchg
sar
mov
lret
sbb
std
cmpsl
pusha
pop
sub
int
xor
pushf
stos
rcrl
pop
mov
or
das
pop
jno
and
pop
ret
scas
xchg
repnz
mov
fistps
in
ss
fildl
repnz
test
aaa
cmp
daa
xchg
iret
mov
data16
push
xchg
xchg
subb
negb
aas
mov
and
jp
fldt
adc
sahf
inc
pop
or
or
cmpsb
frstor
mov
dec
call
in
push
insl
xorl
sub
mov
and
repz
iret
cmc
xor
loope
and
sbb
cmp
xchg
ret
ficompl
test
pop
xor
inc
shl
shlb
and
repnz
movsb
loopne
repz
add
and
repz
push
cmpsl
and
scas
mov
xchg
xor
and
sbb
cmpl
sub
mov
cli
pop
pop
sub
mov
out
out
xor
lcall
lret
loope
jae
pop
sbb
push
sub
xor
loop
pop
mov
xor
int
push
nop
sbb
mov
inc
or
xor
mov
decb
in
adc
lds
cmpsl
adc
cwtl
sahf
je
pop
jl
loopne
in
repz
push
test
pusha
gs
cmp
mov
jle
fs
icebp
incl
mov
fisttpl
into
rcrl
stos
xchg
enter
adc
inc
lret
mov
imul
rol
jp
sub
mov
aaa
aad
dec
lcall
mov
out
popf
sub
unpckhps
pop
stos
cwtl
ficompl
push
add
aas
fsubs
loopne
add
xchg
inc
loop
mov
cmpsl
out
mov
add
cmp
sub
pop
test
incl
dec
mov
in
mov
push
xchg
loop
xchg
lods
lea
aam
jle
scas
jge
loop
mov
jle
in
aaa
repz
mov
push
xchg
ret
adc
push
mov
pushf
sub
cs
cmp
inc
pop
mov
cmpsl
addr16
les
push
stos
sbb
daa
inc
pop
subl
add
jno
in
ds
imul
or
das
cmpsb
xchg
cmpsl
negb
cltd
dec
ret
xchg
mov
push
jo
scas
int
adcl
jmp
mov
ja
je
sbbl
inc
adcl
sub
lods
mov
inc
fsubrs
mov
in
loope
enter
cwtl
mov
mov
daa
lea
xchg
xchg
lea
jne
sub
adc
push
cmp
fistl
xor
in
loop
mov
shll
cli
adc
dec
mov
mov
sahf
cmp
repz
cmpsb
lods
loope
loopne
cmp
and
int3
add
mov
imul
lret
sub
inc
in
test
leave
mull
test
and
or
hlt
cmc
call
imul
out
inc
pushf
ljmp
repz
repz
je
mov
mov
ljmp
out
mov
jne
in
mov
push
mov
mov
push
or
push
test
sbb
mov
and
movsb
mov
jg
negl
fidivl
jb
mov
out
sub
cmpsl
xor
fcomps
pop
mov
cs
loope
das
clc
movsb
push
pop
pop
ljmp
imul
mov
add
jb
aam
mov
out
stos
loop
add
jno
or
popf
cmp
cmp
loopne
mov
pop
lcall
stos
movsb
bound
fwait
movb
sub
xchg
mov
xchg
notb
xchg
xor
mov
mov
sbb
adc
cmpsb
loop
and
loope
mov
test
ljmp
and
and
lock
xchg
insb
cltd
fsubs
scas
push
pop
xor
aas
rcrb
mov
insb
pop
sahf
mov
test
or
ret
rorl
cmp
data16
jo
aas
ja
fisubrl
daa
inc
push
inc
lcall
rolb
dec
dec
push
in
pop
mov
repnz
pop
push
pusha
sbb
xor
adc
rorl
adc
movsb
daa
idivl
shlb
cmp
repz
push
and
lds
mov
lock
and
fisttpl
xor
repz
outsb
lret
sub
daa
cmc
testb
rolb
lock
ret
add
bound
push
sbb
iret
adcb
stos
inc
mov
popf
mov
test
sar
aaa
lock
out
fwait
rcr
mov
ret
and
jae
push
shll
sahf
ret
add
mov
mov
or
loopne
sbb
movsb
ja
fwait
mov
iret
or
in
mov
fs
clc
add
ljmp
pushf
pop
ret
sub
xor
lret
jp
enter
cmpsb
cli
push
repz
lods
incb
add
loop
sbb
loopne
cmp
xor
cmp
in
push
dec
loopne
dec
xlat
dec
mov
sbb
mov
lds
adc
loop
and
inc
mov
add
jge
daa
dec
mov
cmp
mov
insl
mov
hlt
mov
scas
xchg
jbe
imul
enter
or
cmpsb
in
std
mov
sub
popa
mov
aam
xor
adcb
jle
je
lcall
scas
sahf
stos
ss
xor
aaa
in
add
ljmp
pop
in
aad
sbb
pushf
xor
ljmp
xorb
pusha
test
pop
lods
mov
xor
mov
mov
inc
lock
loopne
ljmp
and
or
fdiv
loop
in
xchg
add
popa
insl
das
mov
stos
mov
mov
sub
xchg
das
std
scas
inc
mov
jg
mov
mov
xor
and
shrl
and
jmp
mov
inc
movsb
mov
mov
popa
movsl
shlb
cwtl
lret
ret
pop
out
pop
mov
inc
sbb
or
in
lods
jo
call
addb
cmpsb
mov
xor
je
rcrb
mov
test
pop
mov
stos
in
loop
andb
das
sbb
cltd
xchg
ficompl
test
pushf
loop
in
call
mov
aam
xchg
ficoml
fsubrs
adc
in
xor
cs
pop
hlt
shl
jmp
mov
pop
sub
subl
jns
fisubrs
iret
call
pop
les
cli
sti
in
jne
roll
call
lods
dec
cs
pop
pushf
mov
push
hlt
shlb
pushf
subl
mov
in
push
leave
imulb
xor
test
imul
pusha
movsb
xor
movsb
cmp
sub
std
test
stos
pop
mov
sbb
clc
aad
mov
call
xor
xchg
sbb
adc
mov
and
adc
dec
enter
xor
bnd
outsl
mov
stos
repnz
lods
xorb
subb
loope
cmp
jle
repz
dec
push
ds
ret
incl
push
mov
lds
scas
loop
out
mov
pop
jb
jnp
cmpsb
rcrb
xchg
sti
adcb
jb
and
test
cmpsb
pop
fcmove
mov
lods
lods
aas
mov
test
and
xchg
dec
jne
ret
sub
sarl
test
cltd
push
sub
cmpsl
add
cmp
inc
aaa
stc
ret
rorb
push
inc
xchg
ficoms
xchg
mov
mov
push
xchg
cmpsb
es
pop
adc
sbbb
jb
shlb
cmpsl
xchg
call
repz
and
mov
jo
cmpsl
lcall
popf
js
dec
jo
pop
sbb
adc
scas
adc
or
test
repz
add
xor
sbb
sub
sbb
in
fstpt
lcall
mov
roll
rcrb
movsb
fsub
aas
imul
loop
enter
xchg
dec
loop
and
bound
jle
jmp
jp
imul
stc
aas
add
movsl
xorb
mov
xor
xchg
icebp
gs
popf
push
sbbl
lods
cmpsl
ret
mov
lcall
insl
mov
jae
sub
cmp
in
inc
loop
push
test
add
aam
inc
fstpl
jmp
fiaddl
in
ja
mov
std
mov
cwtl
jo
xor
cltd
xchg
xor
cmp
xchg
ds
movsl
rorb
in
add
sub
pop
mov
ljmp
inc
pusha
adc
mov
push
sbb
fsubs
int3
sbb
jnp
dec
push
hlt
pop
insl
push
add
push
mov
and
pushl
lods
shlb
ret
pushf
inc
or
lret
jbe
adc
push
jmp
leave
sbb
loop,pn
fisubs
mov
cmp
jecxz
out
test
push
mov
adc
negl
pusha
ret
push
lret
or
jbe
inc
popa
push
cld
xchg
fnstsw
mov
jae
xor
test
push
jns
jl
aas
cmpsl
mov
ljmp
pop
sub
jecxz
das
sub
imul
vcmpss
xchg
inc
in
cmp
push
xchg
xchg
xchg
lds
mov
imul
insb
rcrb
or
xchg
aam
mov
adc
aam
subb
ret
flds
xchg
push
mov
adc
bound
or
push
push
andb
push
mov
cltd
popa
and
cmp
fldenv
test
cwtl
sahf
fisttpl
call
dec
test
sub
mov
and
lea
pusha
loop
xor
xchg
inc
cmpsl
jne
stos
outsb
sub
enter
dec
pop
mov
in
sub
lret
orb
mov
sub
fstpt
add
daa
test
mov
arpl
mov
xor
jmp
out
inc
jns
sbbb
xchg
xchg
lods
mov
mov
int
mov
test
scas
mov
sbbb
call
xor
and
xchg
outsb
das
or
sahf
enter
test
and
mov
fcmovbe
or
scas
arpl
lahf
cmpsl
dec
out
sbb
or
push
aaa
mov
insl
mov
ja
ss
icebp
mov
push
ret
cmp
mov
movsb
popf
inc
and
stos
pusha
xchg
jb
inc
mov
loopne
loope
and
mov
pop
orb
mov
cmp
and
and
sbb
je
imul
add
mov
fdivl
push
iret
test
test
cmp
in
xor
arpl
and
imul
and
les
xchg
sub
xor
sbb
adc
stc
and
mov
cmpsb
cmp
pop
mov
ficoms
std
lret
xchg
es
add
cmpsl
stos
test
mov
mov
jbe
out
xchg
scas
push
add
xor
sub
mov
xchg
sbb
mov
mov
push
sahf
les
in
mov
shl
loop
imul
cmp
repnz
orb
clc
imul
inc
psrad
sub
stos
xchg
jo
mov
or
in
adc
aaa
fwait
subb
mov
cmp
inc
adc
ja
les
mov
xchg
lret
and
shlb
mov
test
ret
xchg
mov
and
ljmp
xor
call
imul
in
sub
cmp
xchg
and
outsb
rcll
mov
jno
xchg
adc
aas
mov
xchg
mov
mov
subb
mov
cli
dec
and
stos
jecxz
in
ljmp
loop
cmpsl
fsubrs
jo
addb
mov
out
fistpll
mov
imul
add
inc
xor
xchg
imul
dec
push
sbb
jp
mov
xchg
pop
or
lcall
movsb
xchg
mov
stos
sub
sub
inc
stc
loope
xchg
mov
cmc
cmp
xor
dec
ffreep
sbb
bound
adc
movsb
pop
lret
cmc
pop
addr16
fisttps
jne
loope
stos
imul
fidivrs
out
inc
xor
gs
roll
add
sti
cmc
popf
jnp
cmp
pushf
push
xor
testl
lcall
jo
mov
enter
adc
mov
dec
mov
xor
fstpt
hlt
xlat
mov
movsb
sbb
int
imul
mov
rclb
xchg
mov
xor
mov
lcall
pop
mov
or
pusha
mov
or
out
mov
pop
out
movsb
sub
or
es
jno
or
xor
cmp
xchg
bound
fstp
daa
xchg
pop
cmpsl
clc
outsb
cmp
xor
je
je
and
and
movsb
mov
outsb
cwtl
mov
mov
jmp
mov
fs
sub
call
repnz
repz
test
mov
push
fwait
cmpsl
scas
mov
sub
or
stos
mov
cmpsb
mov
push
jb
and
fisttpll
sbb
adc
push
xchg
xchg
add
hlt
insb
push
jo
out
in
aas
sbb
and
or
or
lds
pushf
add
push
xor
inc
shrb
stos
xor
sub
sbb
repz
cmp
mov
nop
out
push
cmp
lcall
data16
jae
cli
sub
inc
aaa
cmp
ljmp
gs
sub
out
sbb
xchg
sbb
pop
add
pop
inc
mov
mov
aam
mov
in
loop
dec
sub
push
fldl
pop
stos
ret
sub
xor
gs
ja
cmp
push
stos
loop
lock
ljmp
pop
test
lcall
xor
cmp
icebp
sbb
out
push
pop
jecxz
xor
rorb
cli
jmp
xor
daa
daa
mov
and
mov
cmpsl
mov
dec
rcl
clc
mov
xchg
xchg
and
xchg
lcall
imul
inc
mov
lods
cmp
lods
in
mov
cmp
sbb
daa
pop
add
xchg
pushf
cmp
pop
scas
jo
out
in
mov
push
xor
je
xor
test
adc
outsl
in
mov
je
test
adc
jbe,pt
mov
sub
dec
lods
out
popa
cmp
mov
mov
xchg
shll
out
dec
bound
dec
xor
mov
xchg
mov
mov
scas
imul
mov
aaa
hlt
xor
hlt
icebp
test
sub
push
hlt
loopne
push
adc
inc
movsb
jecxz
fs
int3
lods
decb
jnp
aaa
outsl
pop
lods
pop
enter
pavgb
mov
aaa
lcall
sub
stc
icebp
scas
imul
push
rclb
push
mov
sub
and
pop
shlb
loop
inc
mov
fsubrs
gs
aas
cmp
sub
xor
pop
iret
out
pop
bound
imul
mov
aaa
clc
lock
mov
fidivs
shl
stos
gs
xor
scas
sub
sub
push
or
adcb
and
std
mov
aam
ljmp
mov
stos
mov
ja
mov
in
popa
or
push
imull
mov
sub
push
mov
jb
jge
xchg
xchg
scas
sub
in
daa
movsb
fisubl
push
xchg
jnp
test
rcl
popf
jb
mov
add
xchg
std
loop
xchg
out
sbb
xor
jb
xchg
aaa
test
enter
ret
subb
addr16
and
pop
ficompl
mov
mov
and
and
clc
in
fldcw
xor
rclb
orb
pop
and
outsl
cmpsl
popa
mov
mov
jg
jno
mov
mov
ljmp
cmpsl
lock
stos
mov
dec
mov
mov
jnp
dec
mov
enter
nop
push
insb
adc
cmp
or
mov
mov
imul
loopne
repz
and
out
xor
inc
lods
aas
repz
xor
xchg
push
aas
sub
andb
fisubs
sbb
mull
push
mov
mov
and
xchg
mov
mov
sbb
xchg
movsl
popf
shl
call
push
mov
push
ss
popf
lcall
cli
daa
clc
daa
test
push
pop
mov
add
cmp
rolb
das
xor
cmp
mov
mov
fsubrs
out
adc
lcall
stos
testb
jle
jnp
jbe
fcoms
test
out
xchg
push
add
mov
or
sbb
jl
cltd
addr16
xchg
push
pusha
sbb
das
mov
inc
mov
add
fs
repnz
mov
jp
xor
jg
cmp
and
push
xor
fcmovbe
shrb
jns
stc
xchg
testb
outsb
mov
cmp
gs
andb
jnp
imul
dec
sub
out
popa
mov
xor
xchg
fstps
xchg
mov
push
mov
hlt
sbb
pop
lcall
aaa
sbb
movsl
sub
inc
gs
adc
out
pop
mov
jp
mov
pusha
push
outsb
push
cmp
pop
nop
lods
and
rcll
sarb
lret
int3
push
and
int
push
test
pop
xor
out
mov
add
sbb
loopne
adc
jne
pop
jp
add
cmp
cmp
lock
loope
mov
mov
aam
fisubs
outsb
dec
std
scas
jp
fmul
cmp
out
test
gs
xor
push
les
push
mov
and
cwtl
imul
aaa
lret
and
in
test
movsb
xchg
sub
mov
add
mov
test
in
add
mov
add
add
pop
cmp
sbb
pop
fbld
jp
sub
mov
icebp
adcb
mov
ss
jb
into
mov
orb
pop
xor
and
loopne,pt
imul
mov
push
xor
xlat
dec
add
push
cmpsb
xchg
dec
cmpsl
ja
mov
pop
sub
insb
fstl
adc
mov
xchg
mov
es
outsb
push
lock
or
pop
jno
sar
movsb
ficompl
or
jne
mov
add
ficoml
or
enter
loop
rcrb
jp
cmp
xchg
xchg
je
cmp
jecxz
xchg
subb
push
cmpsl
cmp
push
cmp
pusha
cwtl
jbe
aam
sbbb
test
pusha
iret
mov
inc
sbb
daa
pop
dec
dec
and
push
jne
outsl
loope
lcall
loop
add
pushf
mov
pop
jns
cmc
jne
std
cwtl
outsb
in
mov
push
or
inc
pop
test
push
inc
push
ret
pop
fcompl
stos
jge
repz
imul
leave
pop
stos
push
ja
pop
add
adc
sbb
loop
adc
mov
lods
shl
mov
in
shll
sub
lods
dec
cmpsb
fs
aaa
pushf
sbb
cld
js
mov
fistpl
inc
sti
je
adc
sub
mov
fs
ss
iret
push
push
lret
xchg
inc
aaa
pushl
xchg
lret
mov
cmpsl
repz
mov
test
pop
sbb
fwait
je
xchg
xlat
mov
or
and
xor
shl
adc
sub
lahf
stc
testl
cmp
fsubr
jecxz
popf
jo
push
xor
int3
cmp
and
pop
cmp
xlat
mov
sbb
fnstenv
jne
outsb
leave
dec
sbb
adc
cmp
or
loope
pop
fs
int
sbbl
jmp
and
and
mov
or
push
xchg
loop
push
inc
xchg
add
mov
pop
test
in
pop
sbb
cli
xchg
lods
mov
adc
movsb
sbbb
nop
imul
adc
pop
repnz
xchg
mov
mov
arpl
sub
jbe
flds
cwtl
fs
ss
pushl
fisubs
into
mov
mov
xchg
repz
push
and
cmpsl
movsl
xor
fistpll
push
push
rcll
ja
shrl
inc
daa
das
lcall
inc
and
aad
fldt
int3
imul
ret
push
mov
fcmovb
sbb
sbb
out
shlb
ret
inc
fidivl
mov
pusha
popa
int3
mov
loopne
push
mov
in
daa
lcall
xor
pushf
pushw
mov
mov
mov
ret
data16
push
dec
subb
cwtl
cmpsl
subb
dec
push
inc
jge
mov
cwtl
inc
test
in
cli
stc
cmp
mov
repnz
incl
cmpsl
xchg
das
in
in
repnz
in
jae
and
loope
outsb
adc
sbb
loopne
pop
jno
sub
mov
sahf
loope
mov
push
mov
jmp
das
push
push
inc
popf
pushf
adc
dec
lahf
dec
and
std
xchg
mov
mov
bnd
test
imul
dec
mov
adc
into
idiv
loop
mov
neg
add
in
in
mov
xor
mov
sbb
pop
xchg
dec
mov
shlb
pop
push
ss
nop
push
push
btc
out
sar
iret
jge
insl
stc
xor
out
mov
push
cmp
mov
subb
cmp
jle
lods
daa
jno
loope
dec
fiaddl
or
dec
lock
fidivl
mov
mov
mov
add
les
loope
pop
dec
jp
insl
call
lcall
mov
pop
sub
dec
push
xchg
sbb
fwait
xor
lcall
xorb
insl
add
lock
xchg
xor
fnstsw
mov
pop
dec
roll
pop
jns
fs
sub
out
pop
imul
jecxz
and
out
xor
mov
adc
lret
push
popf
xchg
or
cmp
lcall
es
push
pop
cmp
arpl
xor
cmp
mov
je
movsb
call
sub
pop
shlb
into
popl
mov
ds
push
leave
pop
mov
cli
and
in
out
ljmp
and
test
mull
and
in
fs
sbb
pusha
les
mov
mov
loopne
popf
fs
loop
lcall
sahf
into
xchg
out
rclb
jnp
mov
bnd
bound
add
xchg
xchg
jmp
inc
pop
mov
xor
adc
cmpsl
mov
aas
or
mov
das
int3
and
xor
adc
cwtl
sbb
fisubl
outsl
add
mov
bound
mov
push
mov
pushf
xor
adc
rolb
in
pusha
and
shr
out
test
pusha
xchg
xchg
leave
leave
shl
lcall
test
ficoml
aam
cmp
pop
inc
mov
ja
and
xor
pshufw
fwait
mov
jp
xor
dec
imul
mov
mov
pop
cmp
xchg
out
mov
movsb
and
lods
xchg
fidivrl
rep
mov
je
ret
sti
fstl
jg
cmpsb
cmp
gs
testb
push
mov
fwait
in
rcll
push
shlb
std
cltd
jge
xchg
dec
fs
push
mov
adc
mov
sbb
lods
fwait
sub
scas
add
fimull
sbbb
and
andb
call
data16
push
lods
jae
add
test
std
dec
je
push
aas
icebp
mov
jmp
xor
xlat
dec
imul
pop
les
imul
fisttpl
jbe
mov
outsb
sub
push
adc
and
fiaddl
ljmp
mov
inc
push
cmp
cmp
fwait
mov
enter
xlat
cmpsl
std
cmpsb
outsb
sbb
mov
movb
ret
out
mov
jae
cli
popa
cmp
xchg
js
cs
movsl
mov
fwait
out
jge
loope
xchg
lcall
fwait
hlt
gs
mov
sub
sahf
mov
bound
aam
fimull
leave
in
subl
stos
and
sahf
lret
lahf
mov
stos
sbb
lcall
cmpsb
cld
lcall
bound
pop
pop
jmp
out
cmc
fsubr
fs
xchg
cmp
dec
rorb
aas
dec
and
mov
repz
mov
cli
mulb
mov
sub
mov
mov
and
std
or
mov
jo
ret
dec
fcmovb
dec
jg
clc
inc
adc
stc
ja
push
int3
les
lods
sub
add
xchg
xchg
sbb
mov
mov
out
in
mov
mov
sarl
movsl
scas
mov
loopne
push
mov
cli
icebp
aas
stos
inc
pop
or
movsb
jmp
add
and
push
repz
and
rcr
mov
adc
bound
xchg
mov
push
inc
shrb
movsb
cmp
inc
loope
jae
push
pusha
rcrb
sbb
loope
cmpsb
jae
out
es
mov
shll
movsb
mov
add
mov
mov
imul
xchg
xchg
pop
inc
mov
sbb
cmc
ja
icebp
adc
inc
rolb
call
popf
cmpsl
bound
pop
jecxz
loop
loop
adc
stc
ficompl
sbb
popw
sub
and
adc
pop
insl
lcall
scas
popf
nop
ret
pop
sub
and
xor
xchg
scas
imul
push
mov
xchg
das
out
jne
xchg
push
add
sahf
pop
mov
lcall
xor
stc
sub
movsb
mov
pop
stos
jne
mov
mov
mov
push
andl
in
jne
fbstp
test
mov
repz
xor
das
mov
push
jle
and
xchg
stos
test
nop
sub
inc
cwtl
out
repnz
cmpsb
daa
mov
test
push
mov
aaa
mov
mov
xchg
push
repnz
xor
dec
popf
mov
adc
lock
fistl
sti
imul
cmp
push
in
pop
mov
gs
jnp
fidivs
std
cwtl
movsb
adc
sbbb
lcall
pushf
push
xor
aas
out
loopne
mov
std
loopne
lods
pusha
rol
scas
ds
out
xor
lea
shld
adc
sub
icebp
shlb
fwait
in
je
mov
adc
xor
popa
mov
push
loop
cmp
xchg
jb
pusha
lods
inc
and
inc
nop
stos
push
or
lcall
sarb
mov
xchg
xchg
enter
adc
mov
sahf
jb
or
xchg
imul
mov
iret
xchg
and
xchg
mov
scas
sarb
mov
pop
out
popf
movsl
cmp
aas
jecxz
fidivrs
in
out
nop
mov
xor
or
movsb
xor
sbb
cmc
mov
stos
jo
insl
movsb
in
mov
xor
scas
enter
jo
cmp
jo
jns
outsl
lahf
jmp
ljmp
pop
call
icebp
stos
ljmp
repz
js
and
outsb
mov
and
dec
hlt
ret
jne
bound
pop
sahf
mov
scas
bnd
sub
pop
inc
inc
sub
cmp
loope
mov
mov
cltd
bound
aad
mov
dec
jle
dec
int
bound
jb
lds
dec
jp
jmp
mov
mov
cmc
xorl
cltd
sbbb
mov
loop
mov
frstor
jne
adc
dec
adc
jae
dec
icebp
test
mov
push
xor
sub
add
outsl
xor
mov
push
jge
pop
imul
mov
dec
in
pushf
andl
movsl
xchg
cmp
xlat
shll
movsb
bound
sbb
sbb
pop
movsb
and
adc
and
fwait
nop
andb
pop
inc
xchg
or
test
jno
hlt
rcrb
or
mov
cmpsl
or
push
jmp
insl
pop
mov
lods
subb
inc
mov
outsb
push
cmp
xchg
add
sbb
fnstenv
in
adc
lds
push
pusha
outsb
lock
push
mov
in
mov
test
mov
je
xor
cmp
xchg
lret
mov
mov
xchg
repnz
xor
push
push
je
xchg
jmp
adc
or
sub
ljmp
scas
repnz
sarl
idivl
mov
mov
out
movsb
add
in
xor
movb
subb
mov
pop
jge
repnz
add
inc
int3
xchg
shr
mov
out
xchg
addr16
xchg
test
test
pop
out
jae
mov
rcl
push
adc
popa
inc
push
cmp
sbb
subb
outsb
and
cmp
or
in
inc
xchg
mov
mov
dec
in
rcll
popf
fwait
xorb
in
scas
jge
xor
pop
inc
jae
mov
xor
cld
pop
inc
push
dec
pushl
loope
aam
jb
or
outsb
jecxz
fdivp
and
adc
sbb
lret
out
enter
ja
inc
sub
jns
sub
rclb
lods
rclb
scas
dec
negb
xchg
pop
sub
in
cli
std
ljmp
mov
mov
fistl
testl
and
xchg
aaa
pop
push
sub
popf
addl
cmpsl
in
pop
xchg
pop
out
xchg
fcmovu
jbe
mov
xor
pop
out
jns
imul
sbb
jns
dec
fidivrl
inc
mov
lret
lahf
test
les
mov
in
pushf
pop
cmp
pop
rcrb
jmp
cmpsb
fcmovb
mov
fcoms
sub
call
iret
adc
jo
jge
sub
xor
jle
or
jmp
lcall
std
sbb
pusha
fcmovnb
repz
add
push
shrb
adc
std
scas
fimull
je
xchg
lret
fiaddl
jp
lods
orb
ror
inc
test
sub
aaa
roll
arpl
sub
insb
cwtl
add
mov
in
lds
sbb
pop
xchg
or
repnz
mov
fs
fcoml
sar
cmpsl
add
fiaddl
or
jo
push
xchg
jne
pusha
push
cmp
ret
out
pushf
movsb
push
mov
inc
in
mov
adc
sahf
aam
lcall
test
mov
in
mov
shlb
adc
cmp
lret
mov
fdivr
mov
fiadds
cmpsl
lcall
mov
cmp
or
pop
and
out
jecxz
lahf
xchg
mov
inc
xchg
imul
orb
scas
push
icebp
cwtl
mov
push
pop
and
loop
mov
fstl
jo
mov
mov
mov
mov
lcall
xor
ret
mov
pop
pop
iret
inc
mov
in
jl
pop
sti
xor
test
repz
mov
ds
inc
mov
das
xor
outsl
sbb
dec
daa
sbb
sbb
out
push
cmp
es
and
xor
inc
dec
movsb
mov
pop
mov
and
lret
mov
cmp
cmpsl
imul
std
loope
mov
movsl
adcb
out
and
or
cmp
cmp
pop
int3
or
inc
jmp
into
call
mov
dec
int3
adc
leave
jmp
out
into
and
test
pop
and
inc
int3
iret
cmp
fisubs
repnz
and
sub
out
and
cmp
lcall
xchg
std
test
inc
push
out
add
lea
imul
xor
mov
pop
sahf
push
mov
pop
push
cmp
jne
xor
and
leave
pop
hlt
push
sub
andl
sub
mov
data16
jl
xorl
dec
subb
orb
nop
adc
sub
test
adc
cmpsb
rorl
lock
fwait
and
lcall
arpl
dec
xchg
and
cmp
jge
mov
mov
inc
bound
xor
cld
xchg
lods
mov
cmpsl
pop
cmpb
push
mov
icebp
mov
mov
popa
enter
add
jecxz
imul
sbb
pop
jmp
icebp
mov
loope
aam
es
cmp
jle
loop
inc
pusha
movsl
xchg
popf
dec
xor
in
movsb
add
mov
aaa
je
inc
inc
call
xor
subb
push
pop
jns
arpl
jge
push
lods
jae
clc
stos
imul
rcl
sti
stos
sbb
data16
testl
out
fstpl
mov
nop
mov
xorb
mov
clc
lret
scas
pushf
cmp
loopne
inc
cmp
dec
pop
pop
into
xchg
cld
push
mov
add
pop
scas
shll
mov
lcall
xchg
shrb
neg
cld
add
call
fwait
push
aaa
sahf
mul
mov
repz
lcall
ret
insb
sub
add
cmp
data16
sub
jae
sti
shl
inc
and
xor
xor
ret
aaa
xor
and
iret
not
fcmovne
pop
and
test
mov
mov
inc
cmp
sub
jo
pop
xchg
xchg
cltd
cmp
sti
repnz
bnd
std
nopl
nop
loopne
cmpsb
push
repnz
pop
pop
nop
cmpsl
cmp
outsb
jmp
out
pop
icebp
cltd
test
xor
into
movsb
fisubrs
insl
or
aam
push
or
stc
in
insl
ret
fwait
push
shll
lcall
out
scas
flds
push
in
jb
sbb
mov
jnp
das
inc
out
std
sub
loop
stos
ss
ret
outsb
push
mov
rcrb
inc
mov
cltd
inc
test
pop
inc
fs
inc
pop
stos
cmp
int3
push
sub
daa
shr
out
cli
sbb
stos
test
mov
add
loopne
xor
mov
pop
adc
cwtl
shr
scas
addr16
cld
sbb
inc
pushf
insb
bound
rclb
mov
inc
lock
cs
lahf
add
popa
push
movsb
shlb
rol
lock
xchg
fwait
sbb
popf
dec
jnp
les
xor
jge
rolb
jmp
mov
sbb
jle
cltd
pop
cmp
adc
xor
pop
inc
cmp
add
xchg
sbb
daa
mov
fwait
popa
movl
loop
sbb
in
mov
cmpsb
bound
lcall
adc
test
imull
fstps
pop
inc
jmp
dec
xchg
push
xchg
stc
sub
jae
cmp
cmp
cmp
lret
enter
out
andb
outsb
adc
out
and
mov
sub
xor
pop
sub
fwait
out
mov
push
xor
cwtl
loopne
ret
pop
into
fidivrs
add
scas
or
lds
call
jno
fcomi
fisubrs
lcall
test
in
out
bound
jl
cmpsb
sub
xchg
pop
test
lret
push
lea
in
and
addl
xchg
sub
jns
bound
movsb
out
adc
fcompl
in
or
mov
mov
aas
ja
mov
mov
aam
xor
sbb
xchg
and
mov
mov
xchg
mov
and
hlt
jae
xchg
pop
dec
mulb
insb
data16
fwait
subl
sbb
in
adc
push
aam
xor
jecxz
sub
icebp
movsb
movsb
pop
mov
loopne
pusha
pop
outsb
sbb
popa
add
cmpsb
loope
gs
mov
pop
popa
fistps
and
sbb
mov
mov
xor
iret
and
fimuls
sub
scas
mov
and
inc
fisubl
pop
xchg
sub
sahf
sarl
or
in
bound
aam
add
pushf
mov
mov
add
and
test
mov
cmc
das
mov
xchg
test
xor
push
dec
in
push
mov
push
popa
xchg
xchg
loop
les
mov
xchg
gs
xor
in
pop
mov
cltd
mov
pushf
pop
mov
xchg
mov
sahf
pop
mov
popf
mov
shll
out
sahf
mov
rcrl
sub
lock
jo
testl
mov
xchg
mov
jo
loope
mov
xor
lods
mov
mov
fsubrp
push
xchg
in
test
mov
loop
rclb
add
sbb
jbe
enter
cld
sbb
into
adc
push
jb
cmp
lea
dec
xchg
sbb
mov
popa
lods
loop
scas
mov
stos
les
xor
movsl
sub
in
pop
mov
fwait
mov
movsb
pop
mov
mov
mov
cmpsl
mov
test
scas
adc
loope
iret
test
addl
fwait
push
jp
clc
out
dec
dec
movsb
push
inc
mov
mov
loopne
fs
ja
xchg
xor
cmp
adcb
mov
adc
inc
cmpsl
inc
movsl
cli
xor
sub
push
loope
scas
and
inc
cmp
ja
sbbb
lret
dec
and
les
out
andb
aaa
fwait
aam
xor
cmpb
pop
mov
imul
popa
outsl
cmp
mov
int3
sub
cmpsb
pop
inc
sbb
xor
mov
lret
mov
cmp
add
popf
jle
push
mov
xor
mov
ret
rcr
adc
jne
sbb
data16
dec
shrl
and
loop
pop
scas
ficompl
jno
sub
mov
inc
test
inc
push
xchg
or
ss
lods
negl
imul
jb
repz
or
jb
repz
pop
mov
and
add
jne
imul
lcall
lea
das
dec
fs
pop
ja
aaa
cmpsl
js
mov
cmpsl
and
clc
pop
jne
xlat
rolb
jb
xchg
dec
mov
xchg
ja
sub
pop
dec
jo
into
rep
fcoml
dec
out
shrb
jno
in
cmp
aad
add
and
ss
lret
insb
sub
and
je
loopne
dec
and
xor
cmp
mov
mov
add
cmp
call
shl
sub
push
mov
dec
xchg
repz
bound
fs
cmp
jns
daa
pushf
cmp
push
xchg
repz
rorb
ss
shll
fwait
and
test
and
outsb
aaa
cmpsb
jge
mov
shll
aas
mov
roll
and
pop
clc
loopne
jp
or
sbb
imul
push
nop
and
daa
jl
je
in
mov
push
shrb
cmp
cs
jb
or
xor
movsb
aas
ret
jmp
add
testb
cmp
fwait
xorb
daa
xchg
or
ds
js
xor
mov
xchg
mov
pop
mov
adc
icebp
cltd
lcall
dec
out
daa
cmpsl
sub
jb
cmp
and
pop
inc
sub
movsl
sarl
mov
popf
fucomi
sahf
stos
jmp
popf
cmpsl
mov
xchg
mov
or
jae
xchg
subl
pop
sbb
sub
and
mov
out
pop
jecxz
mov
pop
and
fwait
xor
out
mov
testb
xor
sbb
jo
or
mov
dec
or
pushf
add
pop
mov
mov
scas
sbbb
xchg
std
inc
in
fisubrl
bound
stc
mov
in
xor
xor
mov
inc
pop
adc
bound
popf
pop
cmpsl
andb
push
enter
ret
outsb
nop
movsb
cmp
scas
cmc
cltd
les
ficoml
cmpsb
mov
popf
sub
sbb
lahf
fcomip
add
or
stos
sub
movsb
outsb
push
xor
dec
xor
cmpsl
fwait
out
sahf
ret
test
loope
add
imul
rolb
movsb
les
xchg
loope
inc
bound
mov
xchg
cmpsb
scas
mov
cs
fcmovb
stos
aam
idivb
adc
fidivl
inc
jmp
loope
mov
add
push
sbb
and
mov
jmp
xchg
sbb
cmp
test
and
lret
out
pop
mov
nop
scas
insb
adc
das
cmp
xchg
orl
mov
mov
mov
std
icebp
in
mov
add
cwtl
sbb
cmc
dec
movsb
fimull
fidivrl
pop
lea
ss
scas
call
fs
fisubrl
jnp
int3
mov
pop
xor
and
cmp
sbb
std
jge
stos
cmpsl
xchg
movsl
mov
outsl
add
xor
push
adc
leave
sub
mov
inc
loop
sub
into
dec
rcl
lea
fdivs
mov
jne
dec
and
mov
cmp
sahf
jae
lcall
adc
cli
ret
je
movsb
and
inc
xor
jbe
inc
xlat
cmpsb
adc
push
xchg
sbb
mov
push
pop
xchg
scas
and
dec
cld
icebp
push
mov
out
pop
push
cmp
ljmp
xchg
pop
mov
pop
adc
sub
sbb
cmp
mov
repz
loopne
out
out
mov
mov
mov
adc
sub
loop
test
add
sbb
insb
cmpsl
cmp
scas
xor
orb
call
cmpsb
mul
lcall
rcl
sub
lock
ss
xor
and
pop
push
imul
movsb
mov
aaa
push
bound
loop
cmpsl
push
xor
inc
stos
je
mov
pusha
and
arpl
xor
xchg
into
imul
push
xor
xchg
aas
push
mov
aaa
cmp
sbb
fwait
cltd
sub
notb
adc
dec
lock
int3
sbb
aas
popf
sub
pop
repnz
shlb
loopne
mov
pop
mov
out
repnz
push
lods
push
insb
je
movsl
out
inc
fs
scas
sub
xchg
mov
pop
adc
mov
cmpsl
xor
pusha
cmp
inc
jb
outsb
xchg
mov
sub
adc
mov
dec
push
mov
mov
out
sbb
rclb
and
xor
ret
test
outsb
mulb
dec
es
add
mov
shll
scas
inc
loope
mov
sbb
xor
cmc
test
pop
mov
test
les
sahf
out
rcrb
cmpsl
and
loopne
jb
outsb
adc
test
or
out
xor
mov
adc
addr16
or
inc
push
push
out
push
or
mov
mov
test
shll
mov
in
mov
cmpsl
movsb
aaa
mov
mov
scas
xlat
sbb
ljmp
fldenv
outsb
aam
div
xor
shll
mov
scas
repz
icebp
popa
cs
lock
cmp
scas
andb
ljmp
out
mov
insl
dec
cmpsb
or
out
repnz
imul
push
xchg
call
jnp
mov
sbb
inc
adc
push
mov
cmpsl
adc
cli
add
enter
dec
hlt
jmp
dec
repnz
fsubs
mov
aam
or
or
adc
mov
lret
andb
inc
popl
jmp
fcompl
mov
dec
and
mov
je
movsl
mov
cmp
out
pop
out
out
pop
sub
fs
pusha
in
in
hlt
lret
adc
loope
xor
add
jge
pop
sub
out
test
mov
dec
mov
mov
add
aad
mov
mov
pop
in
pop
insl
mov
arpl
inc
sbbb
lock
sahf
xlat
dec
cmp
mov
xlat
mov
ret
cmp
outsl
cmp
das
mov
fistl
and
xor
rcrl
pop
inc
inc
xor
lcall
js
inc
xchg
pop
mov
xchg
mov
add
int
ficomps
pop
movsb
xchg
ss
mov
daa
enter
xor
mov
movl
rcrb
adc
popf
sahf
add
rorl
dec
mov
ret
xor
sarb
push
jae
xchg
fisubl
lock
mov
add
sbbb
popf
popa
sub
movsb
in
mov
cmp
mov
cmpsl
mov
loope
mov
inc
mov
mov
out
jno
dec
test
push
jo
xor
cmp
cmp
add
jo
xchg
adc
xchg
out
mov
loop
cmpsl
push
js
inc
sbb
adc
jg
pop
in
mov
stc
and
adc
rcrb
rclb
mov
mov
pushf
repnz
jb
dec
push
or
sti
xor
popa
add
in
sub
push
pop
xchg
fs
cmpl
cmpsl
rcr
cmpsl
enter
adc
negb
pop
inc
jne
dec
cwtl
cmc
jo
sbb
sub
jl
call
gs
shrb
dec
lahf
pop
jno
loop
daa
jge
mov
push
loopne
int
mulb
cmp
cmc
inc
adc
xchg
jno
pop
cmpsl
aas
jno
in
lods
fdivrl
jne
xchg
test
pop
movsb
jmp
mov
and
cmpb
xchg
loope
and
sub
fs
pop
and
adc
in
loope
scas
fsubrl
jno
in
je
ret
jp
fwait
mov
in
dec
repnz
popf
cmp
sub
mov
popa
push
imul
scas
frstor
shll
sub
dec
xor
nop
cltd
scas
popa
popa
jbe
lret
jae
xchg
ljmp
cmp
rcrb
in
push
xor
sub
sbb
out
in
out
push
movsb
sbb
daa
fwait
mov
xor
mov
stc
fxch
xchg
mov
push
adc
push
mov
xchg
lcall
mov
jb
adc
arpl
push
repnz
lds
les
dec
test
out
out
adc
sbb
mov
imul
mov
xlat
scas
pusha
lock
popf
sbb
icebp
fsubrs
cmp
xchg
out
imul
pushf
scas
enter
je
lock
imul
xchg
adc
push
sbb
loope
dec
outsl
adc
dec
pop
sahf
lods
cmpsb
stos
je
arpl
scas
in
sbb
cmc
push
mov
shlb
xchg
cmp
cmp
in
jo
or
sub
jbe
imul
cs
scas
in
cmp
add
mov
icebp
lret
xchg
out
jle
mov
lcall
movsb
adc
shrl
in
iret
jl
or
loope
inc
mov
les
dec
mov
test
push
repz
test
xor
mov
pop
les
push
es
lcall
pop
mov
mov
and
repz
mov
jne
scas
shlb
adc
sbb
jno
loop
fmull
popa
cli
pop
cmp
adc
loopne
inc
xor
and
out
jnp
addl
push
ljmp
sbbb
mov
loop
popa
repz
lods
pop
sbb
bound
test
addl
repz
bound
sbb
data16
aam
scas
jl,pt
outsl
and
fisubs
andb
xor
jo
loop
mov
push
xchg
bound
sti
call
dec
sbb
xchg
aaa
jle
and
outsb
lods
iret
popf
popf
mov
lret
insb
enter
pop
dec
mov
aas
sub
bound
loop
lret
xor
mov
lods
insl
pushf
sbb
int3
xchg
sub
sub
dec
inc
jo
pop
movsl
jns
xor
outsb
in
mov
add
inc
out
inc
fs
imul
shll
insb
fistpll
lret
imul
xlat
jl
or
shrl
mov
sbb
jecxz
in
popf
js
sub
sbb
push
and
pop
jns
mov
cmp
addl
fistpl
ret
jae
push
sbb
in
add
or
popf
test
pop
test
fwait
push
pop
fwait
mov
jp
push
lret
bound
jecxz
or
sbb
lods
or
repz
mov
bound
daa
fsubrs
pop
mov
pop
sub
jbe
and
lea
imul
push
out
inc
pusha
mov
shl
lcall
adc
ret
push
jo
inc
xor
mov
call
jmp
pop
push
ret
pop
jae
push
in
pop
loop
xor
cmpsl
pop
pop
xchg
xor
arpl
es
pop
jb
cltd
sbb
fstps
pusha
scas
lahf
jp
adc
test
scas
mov
cmc
dec
popf
sub
scas
mov
mov
notl
adc
jb
mov
shrb
iret
pop
cmpsl
fisttpll
into
bound
or
mov
sbb
andb
popa
sar
movl
js
push
lock
pushf
popa
inc
cmp
out
leave
repnz
fidivrs
out
or
jo
bound
movsl
ja
mov
loop
add
and
mov
push
lods
xchg
sub
xor
test
sub
in
pop
iret
sbb
xchg
push
mov
xor
rcrl
jno
adc
or
rolb
scas
xor
dec
mov
add
ja
push
xchg
mov
popf
sti
enter
lods
int
jbe
mov
in
adc
lret
cltd
jl
pop
leave
mov
pop
aad
enter
mov
xchg
or
fwait
pop
mov
inc
in
lcall
cmp
mov
mov
lahf
icebp
es
sbb
outsb
dec
cli
jno
dec
lahf
mov
mov
mov
lods
sub
inc
test
outsl
pop
xchg
outsl
lcall
fnstcw
movl
inc
frstor
and
pusha
push
add
xchg
pop
or
outsl
inc
loope
add
or
lods
and
push
aam
adc
fucom
mov
ja
xchg
push
jge
fidivl
aam
jmp
repz
fstpt
ret
loopne
push
lds
clc
sbb
mov
test
test
mov
xor
and
outsl
jns
mov
mov
mov
pop
pushf
lds
hlt
fistpl
inc
hlt
adc
divl
lds
mov
and
popa
pop
xor
dec
push
cltd
mov
add
repnz
jp
das
les
ljmp
fisubs
push
pop
jg
imul
ret
fistpl
add
ror
push
lock
outsb
lock
popa
or
fadds
gs
hlt
shll
push
xorl
xchg
in
je
stos
out
adc
cli
in
sbb
cmp
enter
jnp
xlat
cmp
hlt
xor
xchg
scas
inc
mov
xchg
sub
xchg
sarl
mov
stc
fwait
rcrl
mov
push
lret
cmp
insl
xor
outsl
out
sub
jno
mov
dec
in
and
out
ret
lods
aaa
imul
test
pop
ss
xchg
out
cmpsb
loope
negb
sub
roll
lods
and
mov
and
jo
addb
inc
insb
mov
jp
shlb
xadd
mov
ljmp
jbe
mov
jnp
mov
stos
mov
mov
mov
ljmp
test
ss
hlt
jmp
out
enter
fidivrs
lock
and
fs
scas
mov
movsl
ret
push
fcmovu
mov
pusha
jmp
leave
inc
cmp
rol
imul
xchg
icebp
xchg
xor
iret
dec
jp
push
movsl
enter
popf
ja
jl
inc
mov
daa
add
subb
movsl
pop
loop
mov
push
andb
aas
fs
inc
rorb
mov
push
sub
call
inc
jmp
add
push
mov
sub
mov
subl
movhlps
outsb
fwait
cmpsb
add
and
mov
aam
push
push
std
shll
lret
cld
test
ret
or
nop
mov
push
jge
addr16
das
movsb
test
shlb
ret
inc
cld
cmp
push
xor
cwtl
xor
mov
aam
mov
call
xor
in
loopne
lock
adc
popf
pop
xchg
test
adc
sub
xchg
and
sub
mov
mov
push
mov
jl
lods
fcompp
icebp
into
adc
push
pop
mov
pop
pushf
xchg
or
jg
mov
mov
popa
cmp
push
pop
sti
pop
pusha
repnz
inc
out
fsqrt
sbb
sub
arpl
shlb
stos
ret
push
fsubrl
icebp
mov
mov
xchg
movsb
scas
pop
repz
jmp
out
or
ss
or
push
lods
icebp
cwtl
or
popf
in
inc
testl
popa
aas
mov
subb
lcall
sub
mov
ret
imul
jne
movsb
push
xor
fiadds
scas
movsb
adc
fmull
cmpsb
dec
fsubl
call
pop
jae
inc
mov
push
sahf
fdivs
insb
sbb
or
sub
ret
sbb
lods
dec
js
scas
lret
and
xor
std
cltd
xor
xchg
xchg
dec
ficompl
ss
or
es
pop
call
lcall
lods
lods
mov
and
mov
popw
mov
shlb
in
test
in
pop
sub
aam
sub
decl
rorb
mov
sbb
cmp
fsubs
fwait
outsb
jecxz
or
sub
push
xchg
lea
pop
jle
ss
jl
or
stos
call
xchg
aam
adc
loope
popa
inc
enter
outsl
in
fidivl
cmc
lahf
outsl
jmp
sahf
data16
jno
enter
enter
std
loop
add
sub
pusha
and
pop
std
xchg
xor
xchg
aas
sbb
inc
pop
mov
pushf
popf
mov
sahf
repz
jnp
push
sub
dec
cmpl
popl
jmp
out
xor
jne
lahf
jbe
int
sti
mov
jae
sti
lea
cmp
icebp
mov
xchg
nop
cwtl
mov
je
bound
repz
movsb
pushl
xchg
add
lret
xlat
ljmp
ret
push
jnp
and
aaa
pop
out
std
mov
jae
or
xchg
aaa
mov
jecxz
mov
arpl
call
lods
xor
test
mov
shrb
add
dec
sub
clc
sub
push
or
mov
and
mov
movsb
push
data16
imul
std
in
insb
mov
ret
jge
stos
fwait
mov
scas
inc
sub
ja
adc
idivl
sub
and
iret
dec
fstpl
loopne
movsl
dec
lret
add
inc
dec
rorl
xor
out
aas
add
xchg
pop
cld
mov
int3
mov
cwtl
popl
test
cs
xor
aas
xor
jecxz
scas
fldenv
pop
outsl
inc
jo
mov
pop
cmp
and
sub
rolb
pop
dec
inc
std
mov
xchg
repz
jnp
jmp
xor
xlat
sub
cmpsl
xor
dec
test
ret
sub
subb
xchg
cmp
sbb
fsubrs
in
les
inc
and
sbb
jecxz
ljmp
and
fists
mov
jns
dec
adc
cwtl
repz
outsl
mov
enter
xchg
xor
out
mov
je
add
rcrb
test
mov
add
xchg
data16
and
in
cmp
add
pushf
jl
fidivrl
sbb
or
cwtl
add
loope
add
xor
xor
mov
insb
loopne
jl
lcall
mov
xor
out
jmp
fcompl
sahf
xor
jmp
sub
shll
mov
outsb
adc
pop
pop
ret
and
adc
sbb
jnp
pop
and
test
popf
outsb
movsl
fcmovnu
xchg
jbe
cmpsb
loop
inc
pop
es
cmp
bound
pusha
es
cmp
or
xor
push
sub
rcrb
xchg
pop
lock
lods
dec
jbe
and
gs
adc
mov
aad
dec
aad
push
call
push
cmp
cli
stos
or
out
cmc
and
mov
das
mov
pop
and
cmp
out
jmp
xor
data16
js
and
mov
lods
xor
sbb
mov
xlat
inc
push
cltd
jno
and
or
in
inc
dec
mov
pop
js
sub
dec
push
out
scas
cltd
mov
mov
in
movsl
sbb
lods
mov
pop
test
repnz
cmp
jo
gs
inc
pop
push
dec
gs
and
mov
and
aam
dec
fbstp
adc
jecxz
cmpsl
jp
sub
data16
out
repnz
gs
dec
ret
movsb
jl
ljmp
pushf
or
add
outsl
imul
mov
add
jae
aam
add
nop
adc
jo
xchg
sub
jae
inc
enter
cmp
mov
jl
mov
aaa
sbbb
pusha
mov
iret
cmpsb
xrelease
mov
in
loope
jle
mov
mov
sbb
xorl
enter
movl
cmpsl
xor
inc
lods
mull
or
pop
fs
dec
in
shrl
enter
xor
cmp
out
das
lret
inc
test
xchg
mov
sahf
sbb
divl
fimuls
jmp
jae
inc
fwait
or
insl
mov
or
dec
je
dec
loopne
mov
xor
sbb
ss
pop
addr16
shlb
stos
insl
sub
mov
jns
push
out
sub
mov
add
repz
cmp
jp
mov
nop
xor
cltd
mov
es
push
xor
out
dec
das
hlt
cmp
loopne
lcall
mov
aad
xchg
cmpl
outsl
mov
and
push
sub
mov
mov
lcall
push
or
dec
test
pop
jae
inc
push
outsl
lcall
pusha
mov
pop
ss
jnp
lcall
push
cmp
fisubs
xchg
add
lods
pop
or
out
sbb
xchg
fbld
gs
adc
mov
dec
jb
push
loop
loopne
iret
aas
out
test
repz
cmpsl
lret
xor
testl
fcomp
and
sub
and
jno
push
mov
popf
mov
movsl
mov
push
addl
xchg
inc
sub
pusha
adc
sub
std
out
and
ret
sbb
push
lcall
call
out
mov
cvtps2pd
out
push
imul
stos
movsl
fsub
call
daa
sbb
sti
sub
pusha
jge
andb
cmp
pop
mov
shlb
add
cmpsl
and
mov
rcrl
pop
sub
dec
imul
cmp
sbb
sbb
pop
mov
inc
repz
cmpsl
and
push
xchg
aam
xchg
xchg
aaa
jbe
mov
cmp
mov
mov
fadd
pop
rol
lds
call
xor
xchg
add
fwait
xchg
pop
sub
dec
sbb
push
dec
iret
leave
jp
daa
ret
mov
cmp
std
int3
jl
mov
cwtl
out
pop
nop
mov
aas
test
mov
lods
mov
call
xchg
shlb
adc
out
inc
sbb
sub
mov
aam
out
sbb
and
push
insb
fwait
jl
shll
lea
mov
push
push
adc
pop
mov
pop
pop
or
push
inc
push
rorl
loope
sbb
dec
dec
xchg
mov
xchg
push
xor
out
lcall
push
scas
int
call
mov
stos
not
in
pop
push
sbb
mov
jae
in
xor
push
sbb
push
jecxz
or
fdivr
cmpsb
aaa
je
jmp
xchg
test
ds
mov
push
mov
hlt
xchg
out
or
and
cltd
sahf
jl
mov
jbe
adc
sub
dec
xor
test
and
outsl
dec
aad
adc
pusha
xor
fwait
movsb
imul
push
lods
int3
outsb
mov
mov
xor
pop
xor
or
fs
hlt
pop
push
aaa
ds
je
aaa
stos
rcr
loop
jae
cli
xchg
xor
jnp
fnstsw
sti
imul
cmpb
sbb
add
mov
cmp
ljmp
ficoml
cmp
imul
xchg
inc
push
mov
xor
lock
cli
sbb
insb
push
adc
jbe
xor
outsl
movsl
jl
xor
sbb
shl
pop
es
mov
call
movaps
jle
out
dec
jns
add
inc
pop
mov
cld
cmpsb
lods
addr16
jno
mov
arpl
xchg
lcall
icebp
add
inc
lcall
in
fimuls
adc
jb
lock
daa
pushw
popa
adcb
mov
insb
in
pop
jne
nop
xor
ss
sub
cmpsl
call
outsl
popf
xor
lcall
jg
inc
loop
push
cmp
dec
out
repnz
push
add
cmpsl
cs
jno
add
lock
lahf
adc
xchg
xor
cmp
push
adc
lds
sub
out
mov
cmp
jb
sub
enter
inc
scas
out
repz
in
ss
iret
adc
sub
cmpsb
jge
mov
je
fsubrs
xchg
xor
and
xlat
scas
out
xlat
mov
loope
pushf
xor
outsl
shlb
pop
jg
jne
pusha
mov
daa
lret
adcl
cwtl
jns
mov
rcrb
outsb
sub
add
daa
cmp
mov
in
jg
add
enter
lahf
repnz
push
adc
cmpsl
outsl
lcall
push
adc
aas
aam
xor
out
mov
loope
add
fwait
lcall
loop
cmp
push
adc
mov
xor
push
push
data16
pop
pop
cmpsl
movsb
cmc
mov
mov
cwtl
nop
xchg
sahf
xor
sbb
cmp
repz
popf
push
xchg
cmp
sbb
sbb
test
iret
mov
sub
aas
mov
ja
pop
pop
mov
out
icebp
push
daa
shll
dec
or
sbb
fs
push
loop
and
mov
mov
and
sbb
inc
popa
v4fnmaddps
mov
popf
add
pusha
adc
lock
mov
in
repnz
and
xchg
mov
mov
pop
cwtl
aad
pop
pop
cmpb
mov
xor
add
jo
sub
sbb
out
out
and
scas
mov
das
mov
sub
and
and
pop
mov
cmp
adc
call
pusha
test
arpl
lahf
inc
jg
outsl
xor
mov
adc
xorb
and
mov
mov
rcl
push
decb
test
jne
stos
mov
incl
push
push
popa
inc
cmp
jns
rolb
loopne
es
cmp
xchg
push
nop
stc
andb
lock
pop
fiaddl
mov
pop
jmp
arpl
sub
add
push
stc
pop
and
adc
xchg
enter
push
pop
insl
mov
fwait
dec
scas
pop
mov
or
xchg
pop
or
xchg
out
out
outsb
jo
repz
icebp
out
push
outsb
lea
lcall
cmpsl
sub
jo
int
movsb
add
cmpsb
push
fstpt
lahf
and
pop
or
or
inc
sbb
mov
xchg
shlb
bound
and
xor
clc
xor
sahf
lcall
jb
test
mov
into
xorb
shlb
and
mov
cmpsl
loope
sub
lock
xchg
ljmp
add
cmpb
sub
clc
mov
add
repz
pop
push
mov
sub
mov
push
pop
mov
push
sahf
shrl
mov
xor
incl
dec
repz
mov
push
js
testb
orl
loope
test
and
fsub
push
mov
rcrb
nop
inc
xchg
pop
sbb
and
cmp
jg
inc
mov
dec
sbb
test
cld
jo
mov
scas
fidivl
dec
pop
bound
sbb
sub
insb
nop
cmpsl
in
cmp
ja
xchg
ljmp
test
dec
stos
and
std
sahf
bound
or
out
rcrb
inc
jmp
fiadds
scas
pop
sub
sub
push
es
divl
jo
inc
cmpsb
adc
mov
mov
inc
fsubr
das
sub
jb
add
es
pop
mov
hlt
push
cli
mov
shlb
cltd
mov
das
sbb
sbb
lods
movsb
pop
jg
pop
clc
cmpsb
xchg
fsubl
call
pop
lods
adc
or
clc
inc
pop
pop
add
fidivrl
inc
add
out
movsb
mov
cmp
mov
lock
mov
xor
sub
das
pop
mov
mov
repz
add
push
mov
scas
clc
bound
test
xorb
sbb
adc
dec
sbb
mov
mov
icebp
imul
mov
cmc
jb
sub
repz
lcall
push
addr16
push
iret
or
lcall
and
mov
sti
cmp
imul
push
and
aam
pop
pop
xchg
lods
mov
in
les
mov
mov
and
in
cmpb
push
inc
and
loopne
scas
add
pushf
sbb
sbb
pop
sub
addb
mov
lcall
es
dec
call
loope
mov
outsl
scas
xor
dec
pushf
dec
out
jle
push
int
dec
jne
movsb
arpl
cmp
adc
mov
mov
sub
push
dec
mov
lock
outsb
dec
and
pop
xor
fcmovb
in
mov
hlt
or
xor
xchg
mov
fcmovu
inc
in
outsb
loope
fs
mov
xchg
xchg
fildll
pop
cmpb
movsl
mov
inc
scas
cmpsb
movb
push
ja
call
add
push
int
or
out
jecxz
repnz
repz
pop
adc
and
xor
or
mov
std
movsb
arpl
test
fdivrl
hlt
cmp
jno
outsb
xchg
ror
imul
popf
out
xor
dec
mov
inc
pop
add
xchg
xor
hlt
popf
daa
repz
add
sbb
sbb
mov
pop
ret
xchg
test
cmpsl
dec
loopne
cmp
pop
insl
xor
mov
cs
in
sub
fistpl
sub
fcmovu
sub
popf
sub
sub
stos
cs
es
pop
add
cmp
daa
loop
rcrb
push
das
lods
inc
and
lcall
repz
xchg
lcall
test
subb
repz
sahf
adc
repnz
mov
sahf
add
lds
add
fisttpl
andl
out
outsl
stos
sbb
cmpsl
fwait
cmp
popf
repnz
mov
push
repz
adc
xor
repz
mov
mov
in
in
xchg
dec
fs
adc
adc
jecxz
popa
leave
push
pop
ss
jb
fwait
mov
outsl
cmpsl
xlat
mov
repz
addl
pop
inc
sarb
shlb
nop
jae
scas
lcall
mov
movsl
gs
xchg
nop
pop
int
dec
sub
ljmp
xchg
push
das
pop
orl
cltd
mov
xor
fwait
add
call
xchg
sub
mov
adc
mov
test
movsl
js
out
outsb
icebp
sbb
dec
arpl
outsl
inc
mov
adc
xor
out
ja
mov
xchg
test
cmp
dec
lds
add
add
push
pop
fldt
bnd
lock
mov
xor
xchg
hlt
sub
add
pop
daa
ret
sub
xor
movsl
std
pop
mov
pop
jbe
fcoml
fimull
adc
add
dec
adc
inc
es
mov
out
call
xchg
push
negb
pop
xchg
enter
clc
mov
add
mov
add
mov
js
std
cmp
jae
fucomip
sbb
aad
les
dec
push
movsb
sbb
je
fnstenv
push
ret
test
aam
data16
adc
cmpsl
loop
out
ljmp
repnz
push
lcall
cmpsb
adc
lcall
cmc
jbe
adc
aam
mov
push
cmpsl
cmp
imul
push
in
out
or
fs
sar
inc
mov
rorb
cli
repnz
cmp
dec
js
sbb
add
cmp
lcall
stos
xor
push
jb
ljmp
cs
int
dec
sub
cltd
push
int3
cmpsb
add
jecxz
inc
mov
cmpl
xchg
cmp
scas
arpl
outsl
mov
movsl
dec
sub
ror
out
or
mov
jne
xchg
cli
or
mov
xor
inc
test
jb
or
or
mov
jmp
stos
out
das
push
pop
adc
mov
xchg
or
adc
xrelease
sub
mov
and
sub
jo
shr
jecxz
loop,pn
mov
fistpl
pop
fmul
lods
stos
xchg
loop
xchg
pop
push
and
sbb
xor
movsl
in
sub
clc
push
daa
push
sub
push
movsb
and
mov
mov
fwait
adc
es
xlat
push
inc
insl
in
mov
mov
scas
fcomps
stos
pushf
push
pop
mov
lods
call
push
mov
sub
mov
lods
sub
or
mov
xchg
mov
mov
addb
dec
xorb
mov
mov
mov
pushf
mov
mov
mov
movsb
mov
mov
scas
jg
xchg
inc
add
pushf
hlt
mov
mov
sub
xor
call
jnp
pop
sub
in
mov
call
mov
sub
in
sbb
mov
cmpsl
daa
outsb
out
xor
testl
stos
and
jae
xor
jmp
imull
cmp
out
pop
push
sbbb
cmpsb
mov
movsl
cmpsl
mov
test
mov
pusha
inc
add
repz
jl
movsl
push
sahf
hlt
lods
and
cmpsb
popa
xchg
scas
es
xor
dec
and
and
jge
out
test
mov
push
jge
ret
test
mov
loopne
adc
imul
sti
mov
andb
cmpsl
scas
pop
fdivl
imul
jb
cltd
add
test
mov
jl
sbb
shrb
cmp
or
sub
test
ja
add
or
subb
and
xchg
aam
aaa
ret
add
mov
and
sbb
shl
jge
xor
and
mov
cmp
daa
int3
mov
mov
repz
scas
cmpsl
add
xchg
loopne
pushf
fisubl
adc
cld
mov
loopne
sub
lods
das
insb
clc
and
rorl
pusha
rcrb
fsub
test
stos
pusha
xchg
orl
pop
int
xor
repz
addl
loopne
mov
xorb
scas
inc
pop
in
dec
jp
call
aas
inc
insb
push
adc
xlat
int
mov
pop
xorb
ljmp
mov
aaa
pop
add
repz
lea
or
xchg
cld
icebp
int
xor
popa
loope
repnz
mov
std
sarl
es
fwait
rcl
cmpsl
nop
ret
mov
add
test
mov
mov
shlb
ret
pop
repnz
and
xchg
mov
test
outsl
aad
insl
xchg
hlt
faddl
imul
jmp
scas
out
inc
sub
shlb
scas
jge
loop
je
and
loopne
inc
into
xchg
mov
jmp
nop
ret
insl
lods
sbb
test
push
insb
adc
out
inc
cwtl
test
out
and
push
sbbb
shlb
out
jle
mov
adc
pop
and
mov
out
int3
mov
lods
pop
fidivs
mov
mov
xor
in
leave
cmp
and
mov
js
popl
movsl
mov
sub
push
mov
mov
mov
mov
fisubrl
fsubs
in
add
xchg
clc
xchg
fsubp
in
jae
pusha
mov
outsb
lods
push
jl
out
mov
cmp
movd
xor
gs
dec
out
xchg
lcall
fwait
test
mov
icebp
mov
sahf
in
inc
jbe
cmc
xchg
popa
dec
nop
sbb
ret
pop
ret
jne
mov
in
lock
and
rol
std
jle
cmp
jae
pop
add
jge
xor
cmpsl
mov
loopne
dec
add
lock
pop
pop
popa
dec
out
lock
lods
icebp
sbb
lea
scas
cmpsb
insb
pop
push
sub
rclb
cmpsb
scas
scas
lods
xchg
push
shl
imul
mov
addr16
sub
xor
lret
je
scas
mov
mov
add
xor
xchg
roll
pusha
aas
popa
jns
loop
movsb
xchg
bound
test
xor
jno
imul
outsl
jns
push
or
xchg
xor
cmp
ljmp
cltd
mov
pop
dec
dec
sbb
rclb
loopne
push
xchg
stos
inc
and
xor
popa
inc
addr16
push
jns
aam
jno
xor
lock
mov
ret
and
mov
push
leave
push
outsl
filds
sub
loope
jae
cmp
push
aam
cmpsb
jae
das
ret
pushf
mov
dec
push
js
pop
mov
push
repz
mov
popa
sub
sti
lahf
mull
lods
pop
out
adc
sub
out
popf
out
xor
lcall
arpl
pop
iret
mov
out
xchg
loop
pop
insb
andb
adc
loopne
sbb
jae
push
roll
ret
cmpl
mov
test
push
loop
mov
inc
push
and
jb
into
fsubr
sahf
inc
cmc
ficoms
cmp
mulb
insb
sarb
inc
pop
daa
lock
dec
div
imul
imul
cltd
nop
fcompl
sbbl
push
xchg
add
xchg
and
aaa
dec
ss
mov
xchg
bound
call
pusha
jae
pop
lahf
or
mov
pushf
mov
fsubrl
fcmovu
fsubrl
loopne
jae
add
pop
push
push
cld
out
mov
leave
daa
pop
in
and
dec
add
pop
sub
mov
jae
popa
mov
and
adc
add
jno
aas
push
aas
or
jo
inc
fmuls
xor
scas
add
xor
cmp
repz
and
sti
push
lods
cmp
inc
and
ljmp
adc
cwtl
mov
out
and
or
jne
push
cmp
cmp
jae
mov
add
add
call
pop
cmpsb
int
test
push
fs
and
repnz
imul
xor
outsb
out
add
adc
jns
and
sub
sti
cmpsb
sub
addl
xor
aaa
movsl
fisttps
mov
shll
xchg
pop
sbb
orl
adc
aaa
lds
fcomps
mov
xchg
lock
call
fidivrs
inc
pop
dec
outsl
add
cld
push
push
sbb
dec
int
xchg
imul
faddl
jb
mov
mov
inc
movsb
lret
mov
mov
jae
inc
mov
lods
lods
jo
inc
lods
test
lahf
mov
jb
es
sbb
fs
pop
ffreep
sti
arpl
stos
pop
add
pop
flds
xor
shrb
pop
test
test
std
cmpsl
inc
sbb
cmpl
stos
loop
fwait
sbb
enter
enter
test
xchg
loop
les
nop
ret
sbb
test
rcrl
loop
shll
lods
xor
test
xchg
mov
mov
es
sbb
mov
andl
loop
dec
or
pop
sbb
mov
jo
insb
stos
popa
mov
loop
mov
mov
mov
je
push
ret
js
mov
mov
xchg
scas
xchg
je
imul
xor
ss
cwtl
ja
mov
sahf
dec
inc
or
push
mov
sbb
mov
stos
fiadds
in
and
sahf
loop
push
ret
sub
pop
and
notl
adc
mov
xor
or
jmp
xor
ljmp
mov
sbb
test
clc
fwait
xchg
outsb
mov
imul
scas
aad
dec
addr16
xchg
out
adc
cmp
inc
idivb
out
rcrb
push
jmp
cmp
dec
cmc
cs
jb
or
lret
jl
sbb
lea
ss
scas
cwtl
sbb
cmp
je
imul
jbe
call
pop
ret
fwait
cmpsl
mov
inc
jl
adc
dec
cmp
inc
or
imulb
out
ret
mov
fbld
in
ss
out
lcall
iret
int3
js
pop
subb
subl
lds
sbb
loopne
xchg
popa
movl
insb
shlb
sub
push
xchg
insb
jecxz
mov
rol
push
cmpsl
stos
mov
hlt
dec
ja
sub
scas
cltd
mov
jo
push
imulb
mov
adc
call
stos
enter
shll
in
outsl
pop
ja
pop
mov
add
popa
fcmove
insb
data16
lret
test
fdivp
fs
in
sahf
xchg
loop
lret
bound
scas
daa
adc
test
and
shl
mov
push
sar
push
ja
cmc
push
out
movsl
enter
mov
jmp
test
xchg
xchg
lcall
xlat
jo
and
popf
mov
adc
cmp
and
pop
stos
stos
addr16
loope
pop
lcall
xor
in
xor
adc
mov
jmp
rorb
push
outsb
shlb
add
sbb
adc
or
negb
ret
fisttpl
or
ret
mov
mov
cmp
mov
push
lret
negb
rclb
or
loopne
cs
or
pop
fdivs
lret
lahf
imul
cmp
inc
rolb
sbb
mov
or
test
sarb
sbb
ss
stc
stos
fmulp
stos
adc
fwait
pop
in
stos
imul
mov
lret
jbe
cmp
add
pushl
push
fiaddl
jl
cmp
adc
popf
rcr
sbb
lock
lea
fnstsw
repnz
sahf
push
loop
hlt
xchg
pop
mov
pop
icebp
int3
dec
push
idiv
sbb
sbb
in
divl
xor
bound
pop
call
test
shll
in
sbb
std
cmp
movsb
cld
je
pop
movsb
mov
fldenv
mov
dec
add
test
xchg
das
and
lds
ja
pop
cmp
daa
movsl
pop
jae
xor
push
jno
imul
pop
iret
lahf
aam
lret
sbb
into
pop
mov
inc
shlb
mov
pop
call
scas
test
loopne
push
movsl
jnp
cli
repz
and
gs
int3
jb
idiv
add
sub
pop
imul
popf
ss
xchg
out
mov
xor
icebp
xchg
sahf
std
mov
fwait
insl
sub
mov
ficoml
mov
push
int3
mov
mov
insl
jb
fs
mov
lods
pop
xchg
lcall
aaa
bound
movsb
je
and
imul
jmp
xor
push
ds
fidivl
push
ss
fs
dec
out
and
mov
shll
push
test
out
jno
leave
mov
pop
imul
sub
test
mov
pushf
hlt
in
cmp
std
mov
lods
test
lcall
push
mov
out
jecxz
pop
lock
cwtl
lcall
and
and
out
mov
xor
cwtl
sar
int
sub
mov
cmpsl
lea
cmpsl
pusha
shlb
nop
dec
neg
or
or
stos
ds
fnstcw
in
pusha
dec
sub
xor
xchg
inc
ret
aad
push
add
repz
sbb
das
xor
sub
adc
and
dec
cmp
mov
xchg
notb
lds
ret
outsl
xchg
push
xchg
cmpsb
hlt
cmp
imul
rcrb
adc
dec
cmp
insb
push
xorb
fmull
dec
insl
inc
push
xchg
pop
cmp
jmp
mov
mov
addr16
push
xor
nop
mov
jmp
xor
xchg
mov
or
das
mov
xchg
ret
mov
aam
add
add
in
sbbb
push
mov
fsubrs
push
out
push
loope
pop
mov
mov
mov
lea
sub
xchg
xor
and
xchg
movsb
pop
fyl2x
xchg
xor
das
xchg
add
shlb
insl
cmpsl
ficoms
mov
ret
rol
jle
mov
popa
or
dec
stos
inc
loop
pop
mov
xor
xor
in
jne
push
dec
sub
add
cmp
andb
jns
andb
and
loopne
pop
xor
pop
push
jl
call
inc
outsl
ret
fcmovnbe
sti
jb
and
daa
lcall
rcll
mov
sbb
jmp
pop
inc
xchg
jge
insl
scas
lods
lea
push
add
out
fs
and
mov
addb
xor
nop
pop
xchg
cmpsb
push
cwtl
adc
xchg
lock
pop
hlt
cmpl
adc
icebp
insb
fidivrs
je
dec
out
pop
in
into
lcall
push
sub
xchg
pop
hlt
lret
mov
pushf
imul
nop
mov
xlat
sbb
fdivl
xor
lcall
xlat
es
sub
lock
lcall
dec
mov
test
cs
sbb
xchg
rcll
push
xchg
or
xchg
and
mov
sub
popa
push
loop
adc
mov
xor
xchg
push
mov
jmp
cltd
inc
push
nop
rolb
jbe
lret
sahf
pusha
push
lds
lcall
inc
insl
jmp
outsb
pop
pusha
ret
loopne
mov
cmp
call
adc
notl
sbb
or
fwait
add
idivl
cmpsb
add
pusha
lahf
in
mov
or
adc
cltd
mov
mov
insb
push
or
xchg
and
pop
pusha
pop
loop
testl
sub
cmpsl
mov
out
xchg
fs
jmp
mov
ss
adc
enter
enter
lods
std
inc
lea
repz
cld
test
lcall
leave
and
jb
dec
inc
stos
pop
pop
mov
outsl
lahf
addr16
mov
ror
xchg
lods
lcall
lret
cmpsb
popf
imul
jbe
scas
pop
jns
fsub
push
xor
inc
sbb
ret
shrl
add
sbb
test
imul
add
in
pushaw
push
rclb
sbb
nop
cmp
jb
or
xor
cwtl
imul
outsl
jns
fnstsw
mov
push
lds
xor
mov
insb
xchg
or
push
xchg
sub
daa
inc
ds
cmpsb
scas
repz
mov
fldenv
jae
mov
movsb
mov
std
fldenv
das
sbbb
test
adc
movsb
scas
or
xchg
or
addb
push
pop
ffree
cmp
or
test
popa
movl
jle
cmpsl
bound
sbb
xor
movsl
sbb
adc
xorb
scas
sub
or
ds
lods
fiaddl
out
outsb
jmp
mov
fbld
pushl
cwtl
cmpsl
mov
das
aaa
add
jne
dec
int3
jecxz
mov
mov
shlb
or
loope
sub
std
shrb
xchg
mov
jno
cmc
cmpsb
xorb
xor
dec
xorb
fstpt
sti
cmc
scas
and
jge
adc
mov
shl
stc
call
sub
andl
sti
outsl
out
push
repnz
sub
repz
call
jge
call
xchg
xchg
or
mov
sahf
cs
jae
outsb
adc
pop
ret
in
rolb
jb
fwait
mov
cmpsl
lds
dec
dec
mov
sbb
lcall
lods
pop
lret
dec
mov
pusha
push
inc
call
sub
mov
popa
mov
dec
sarl
mov
push
adc
or
mov
inc
push
sahf
mov
popf
test
icebp
mov
and
pop
test
lods
mov
sbb
shlb
mov
mov
hlt
rclb
pop
push
dec
cmc
sub
outsb
mov
jle
inc
add
fs
mov
add
mov
mov
lcall
lods
cmpsl
push
je
sbb
mov
push
cmp
test
pop
mov
inc
sti
scas
fs
jo
outsb
enter
mov
mov
repnz
out
hlt
xor
rorl
jecxz
xor
push
push
mov
and
das
cmp
out
xor
aaa
iret
das
test
and
sub
push
add
inc
shl
bound
fwait
int
cs
adc
sbb
xchg
mov
mov
fisubs
insl
mov
repnz
mov
push
xchg
cmp
js
adc
pop
xorl
cmpsb
outsb
mov
lahf
fs
cmp
cmp
pop
pusha
pop
fldt
mov
lock
ret
push
outsl
inc
addr16
jae
or
jae
dec
pusha
sbb
sbb
sub
das
pop
mov
mov
push
or
sbb
sbb
mov
std
das
xchg
jmp
xchg
mov
inc
mov
sub
and
xor
ss
pop
aaa
out
lret
mov
ss
xor
sub
mov
cmp
in
int3
mov
xchg
push
lcall
stc
ljmp
adc
dec
xchg
xchg
cmp
sbb
pop
mov
scas
mov
cmp
xor
cwtl
rclb
or
dec
call
lods
iret
fisubrs
aam
mov
push
mov
hlt
fcomp
scas
jno
and
out
and
rcrb
popf
mov
stos
nop
and
imul
xorb
sub
or
lahf
jb
mov
xchg
stos
movsl
mov
pop
xchg
mov
dec
lock
sahf
pushl
mov
aas
jb
and
popf
jmp
cmpsb
sti
jno
jns
push
clc
lods
clc
mov
lds
lock
mov
sub
mov
test
cmp
lods
dec
cmp
outsb
adc
loopne
movsl
and
pushf
ds
fsubrl
andl
or
jecxz
aam
cmpsb
dec
and
mov
imull
repz
aas
icebp
daa
stc
cmpsb
sbb
and
insb
call
mov
pop
fldt
jge
cmp
ds
cmp
xchg
enter
rcrb
jb
mov
push
ss
adc
add
pop
fldl
push
inc
scas
addr16
jns
xchg
push
popf
mov
imulb
imul
std
mov
add
lods
push
push
mov
imul
cmp
outsl
cmpsb
adc
cltd
out
jmp
test
repz
or
scas
inc
sbb
add
cmp
pop
imul
aad
inc
mov
loope
scas
adc
jmp
int3
aad
mov
mov
mov
call
fwait
ret
fidivrs
mov
out
std
imul
fcmovb
lret
movsb
lds
mov
imul
insb
mov
jl
jae
and
aas
xchg
mov
mov
loopne
cmp
add
or
pusha
cmp
jge,pn
xchg
pop
ret
and
insl
jecxz
loope
jmp
out
mov
sbb
repz
mov
xchg
fstpt
adc
mov
das
icebp
or
lahf
and
dec
in
in
clc
xchg
or
mov
je
xchg
sub
bndldx
notl
adc
xor
dec
and
jno
mov
outsl
repz
xchg
push
jb
nop
repz
pop
sub
xor
or
ja
mov
sbb
mov
mov
mul
insl
lahf
and
fiadds
xchg
fistl
pop
icebp
into
sbb
sbb
mov
test
pusha
adc
mov
ret
push
push
push
mov
mov
dec
bound
into
aas
dec
mov
sti
fwait
int
xor
cmpsl
xchg
push
cmp
xor
inc
aam
insb
sbb
adc
fs
iret
inc
aas
xchg
pop
loop
ret
dec
outsb
testl
mov
mov
mov
stos
loope
fs
nop
pop
jge
sahf
adc
sub
lcall
xor
push
jmp
pop
rcr
ds
and
or
cs
inc
hlt
adc
push
pop
push
mov
movsl
inc
fstpl
jp
scas
fwait
test
adc
test
inc
scas
cmp
xor
push
test
xchg
movsl
mov
aaa
movsb
sub
bound
mov
fwait
shl
xor
andb
test
lods
test
and
push
sbb
inc
adc
insl
add
ss
fwait
sbb
jno
push
shrb
jmp
sbb
mov
push
pop
or
out
bound
or
stc
mov
shlb
in
stos
outsb
sub
push
loop
lcall
out
rcrl
out
cltd
jns
test
mov
test
das
rcr
xor
icebp
inc
add
and
outsl
add
mov
shrb
subb
rcrb
push
stos
rep
pop
rolb
lcall
xchg
xchg
movsl
fcmove
pop
subb
movsl
std
cwtl
dec
xor
and
fidivrl
mov
cwtl
test
inc
jecxz
lds
ds
movb
pusha
aad
bt
rcrb
notl
inc
adc
add
gs
push
mov
push
push
adc
js
aaa
mov
push
sbb
adc
stos
aaa
popa
dec
je
movsb
fadd
push
pop
fidivrl
daa
ds
cmp
imulb
ss
rcrb
mov
cwtl
xor
xchg
inc
jp
cmpsb
mov
in
pushaw
sbb
mov
cmp
lret
jmp
pop
cmp
jecxz
mov
xor
pop
cmp
lock
outsb
sbb
pop
sbb
cltd
xorl
aam
ds
leave
jnp
shll
xorl
cmp
testb
dec
push
out
loopne
enter
out
push
call
xor
into
in
fidivl
cltd
xchg
out
popa
inc
jmp
push
jae
ljmp
in
or
pop
dec
and
enter
cli
imul
and
push
pop
cmp
push
dec
jne
divb
mov
pushf
mov
bound
sbb
dec
sbb
ret
lock
xchg
mov
movsl
rcrb
f2xm1
dec
ss
outsb
scas
xchg
mov
mov
daa
or
pop
insl
int3
ljmp
jbe
mov
push
fs
add
dec
sbb
in
test
xchg
test
xor
aad
lods
sbb
cmp
or
mov
xor
fdivr
sbb
and
ljmp
ret
push
mov
adc
xchg
pusha
sub
sbb
push
jnp
sarl
add
test
loopne
outsb
in
aaa
inc
and
leave
sbb
mov
shl
jnp
orb
int3
mov
mov
aad
shlb
pusha
xchg
xor
popa
scas
or
into
jnp
rorl
pop
pop
out
xor
imul
jno
call
les
mov
push
pop
add
rcrb
addr16
bound
push
in
mov
fidivs
sub
shl
cmpsl
nop
sbb
and
scas
test
out
pop
out
leave
sub
fst
popf
in
mov
mov
sub
mov
mov
xor
cltd
mov
lds
pop
sbb
ret
cmp
sahf
adcb
aaa
push
shrb
fwait
test
xchg
and
mov
xchg
daa
mov
mov
jnp
sub
outsb
jo
push
pop
mov
xor
daa
loop
and
mov
and
loop
mov
cwtl
loope
pusha
scas
xor
dec
lods
sub
inc
cmc
imul
xchg
sub
in
xchg
mov
xor
enter
loop
cld
push
loopne,pn
xchg
cmp
add
in
pop
aad
push
ljmp
mov
jo
testb
or
xchg
mov
mov
dec
xor
mov
insl
leave
lods
xchg
fcoms
pushf
jo
mov
idivl
xor
in
daa
in
shlb
mov
pop
xor
stc
imul
sub
mov
pop
lods
out
jge
mov
and
jl
sbb
andb
mov
xor
lahf
cmc
hlt
inc
sub
data16
fidivrl
lds
imul
pop
ljmp
cmpsb
ret
lret
pop
xor
and
dec
ret
sub
inc
cmp
fiaddl
xor
test
test
loop
inc
imul
fiaddl
movsb
inc
icebp
xchg
notb
mov
aad
push
jns
stos
mov
fisubrs
mov
into
stos
dec
jmp
dec
cmp
lods
cmpsb
mov
ja
mov
adc
or
xor
mov
ret
xchg
sti
mov
int
inc
nop
in
out
mov
jno
push
ret
adc
cmp
cmp
ret
scas
dec
and
or
out
sbb
test
insb
xchg
rcr
fwait
xlat
mov
loop
pop
pop
nop
aaa
into
hlt
call
mov
jmp
aam
data16
jns
aam
subb
xchg
sarl
xlat
out
sbbl
test
test
adc
ret
std
and
pusha
or
fwait
mov
test
cmpsb
mov
push
movsl
hlt
in
mov
jle
mov
addl
xrelease
adc
loope
or
clc
sub
ljmp
aas
movsl
xchg
sbb
pop
jge
out
sar
lds
mov
adc
xor
push
cmpsl
rolb
or
sub
iret
insl
jno
lds
lods
push
cmc
pop
popa
inc
jb
or
daa
xchg
cmp
fmull
scas
mov
call
and
push
scas
test
jmp
and
int
mov
cmpsb
orb
xor
dec
clc
sub
inc
in
xchg
insl
add
jae
xchg
and
pop
nop
and
push
divl
xchg
xor
dec
xchg
cltd
movsb
and
and
ficompl
scas
lods
cmpsb
repz
popa
pop
out
jl
sbb
insb
test
daa
xchg
sub
xlat
pop
data16
xchg
xchg
mov
das
cltd
inc
out
pusha
xchg
mov
shlb
xor
mov
xchg
outsb
test
jg
addr16
adc
es
sbb
repnz
popa
jno
popf
shll
xor
jae
mov
mov
mov
inc
stc
mov
mov
sbb
pop
mov
std
insl
and
rclb
nop
mov
in
std
xchg
push
pop
mov
and
lcall
bound
pop
or
repz
jge
out
das
sbb
std
xor
pop
test
mov
add
mov
push
jnp
dec
or
lahf
rcrb
bound
fwait
lcall
repz
out
es
xchg
test
mov
fstps
cmp
dec
or
sbb
push
fwait
movsl
cmp
into
cmp
addr16
mov
pop
and
xor
jmp
or
loop
cmp
mov
or
jmp
repnz
lods
xor
icebp
xor
add
aas
clc
inc
cmp
test
mov
mov
test
adc
scas
xchg
cmp
mov
cltd
xchg
shlb
sub
mov
add
mov
push
cltd
inc
out
in
add
mov
scas
pop
imul
push
push
fdivp
or
and
popa
les
scas
ds
andb
sbb
daa
ja
scas
test
gs
imul
shll
cwtl
movsb
movsb
test
mov
jb
aam
outsl
and
ss
inc
mov
les
aaa
bound
in
mov
iret
ret
setle
sbb
loop
shl
xchg
dec
xor
adc
add
push
repnz
pop
imull
xchg
mov
push
les
dec
ret
sub
pop
and
mov
add
pop
mov
daa
pop
daa
jo
jmp
test
mov
loop
and
lods
jne
add
xchg
xchg
loope
mov
sbb
mov
pusha
jp
mov
les
and
push
xor
jne
xchg
stos
pusha
mov
jbe
pop
cmpsb
xchg
test
in
roll
mov
jecxz
hlt
pusha
rcrb
aam
mov
insb
jne
gs
xchg
sub
sbb
loop
mov
test
adc
out
sub
mov
dec
fildl
cld
lds
inc
daa
cli
shlb
xchg
mov
lcall
icebp
dec
xchg
rcrb
mov
mov
cwtl
jnp
xor
hlt
push
xorl
out
pop
add
xchg
sbb
pop
xchg
loope
mov
fwait
cmc
pop
sub
xchg
stos
inc
push
sbb
inc
rcrb
sbbl
ds
into
hlt
out
inc
mov
add
bound
pop
stos
pop
xchg
lea
mov
test
pushf
test
dec
adc
xchg
fdivrl
mov
movsb
cld
push
jbe
and
adc
mov
mov
sbb
jae
xchg
mov
repz
loopne
push
adc
lahf
in
movsl
sbb
fcmove
pop
or
fs
mov
inc
loop
mov
lods
mov
call
sub
or
scas
iret
in
stos
pusha
int
mov
or
shll
into
pop
out
jnp
xchg
ljmp
mov
dec
lock
mov
mov
cmpsl
in
outsl
sahf
adc
jnp
xchg
aaa
pop
pop
dec
mov
add
push
jnp
mov
lds
push
pop
xor
xor
addr16
ljmp
xchg
pusha
nop
mov
mov
stc
ret
fstps
pop
std
test
adc
mov
adc
out
inc
fs
scas
jle
adcb
in
mov
or
jg
jmp
aam
xchg
sbb
fmull
sbb
mov
push
mov
scas
jecxz
shrb
or
movsb
sbb
or
xor
test
aad
ja
clc
movsb
adc
movsl
dec
test
stos
movsb
mov
lahf
les
mov
cmpl
lods
movsb
push
mov
notb
popl
mov
dec
push
daa
pushf
lock
addr16
push
and
rcl
jb
add
xchg
sahf
jecxz
mov
sbb
sub
jo
mov
inc
xchg
mov
pop
lahf
cmpsl
add
add
xor
sbb
std
mov
mov
pop
inc
test
out
sub
mov
aam
add
or
mov
fidivl
jge
in
sub
add
and
lock
loop
cmp
push
inc
xchg
cmpsb
notl
mov
xor
xor
movsb
icebp
jb
into
mov
roll
test
xchg
and
icebp
shrl
dec
andb
shll
push
test
mov
mov
pop
xor
adcl
xchg
adc
inc
push
adc
cld
andl
xor
cmp
mov
pop
add
call
std
and
or
fwait
xor
scas
int3
or
int3
test
call
sbb
lahf
lods
mov
lcall
stos
mov
fcompl
sub
pusha
add
and
jns
cmp
testl
cmp
test
lods
mov
lret
sub
jp
push
and
inc
jne
nop
shlb
mov
dec
mov
fistl
pop
mov
pusha
jmp
dec
mov
mov
scas
repz
roll
pop
pop
cli
cmp
stc
andl
pop
and
mov
shll
cmpsl
xchg
test
sbb
xchg
fwait
lods
xor
fcoml
ret
in
loop
xchg
mov
mov
or
sbb
shl
cmp
and
xchg
mov
outsb
xchg
repz
push
shrl
outsl
ss
xchg
push
pop
lds
xor
inc
mov
mov
rcrl
outsb
or
pop
scas
pusha
icebp
xchg
rcrb
insl
sub
adc
outsb
adc
aam
pushf
sbbb
or
lahf
pop
imul
cmp
jo
pusha
mov
lock
mov
outsb
orb
pusha
lods
lods
jb
jl
sbb
mov
das
mov
mov
out
xor
adc
mov
cmpsl
repnz
xchg
loopw
mov
xchg
hlt
adc
inc
and
adc
ret
int3
push
jmp
mov
adc
loope
lahf
aam
mov
loopne
sub
xchg
add
and
adc
adc
loopne
inc
xchg
cmpsl
into
movsb
adc
shlb
movsb
shl
test
push
adc
and
mov
mov
dec
repnz
nop
sbb
sahf
bound
loope
stos
cs
jae
js
out
cmpsl
loope
sub
js
mov
mov
bound
test
xor
icebp
movsb
sub
sbb
dec
es
push
xchg
and
xor
mov
dec
les
push
sbb
push
inc
adc
outsb
push
pop
push
jne
in
xorb
pusha
loopne
push
push
or
mov
leave
mov
and
popa
loope
notl
xchg
mov
mov
fisttpl
xorl
movsb
cmp
adc
cld
mov
fsubs
and
xor
rcr
dec
clc
shrb
fwait
push
mov
or
jae
ds
jno
out
mov
and
mov
stos
pushl
mov
arpl
movsb
fcmovu
xor
add
mov
aaa
scas
out
jne
push
mov
pusha
push
xor
lods
mov
push
cltd
mov
and
pushf
and
popf
stc
repz
jae
mov
sarb
stos
lea
in
mov
nop
lret
icebp
cltd
bound
xchg
adc
ret
xorb
sbb
mov
or
fistpll
xor
test
mov
and
mov
mov
lock
xchg
dec
sub
das
push
insb
test
movsl
ljmp
adc
dec
cmpsl
shrb
lcall
jbe
aam
sub
rcrb
sub
jno
xor
repz
or
loop
addr16
in
sbb
and
imulb
mov
xchg
xchg
push
rcl
mov
mov
xchg
sbb
push
es
sbb
mov
mov
testl
scas
test
adcl
and
lods
call
inc
ficoml
cs
dec
push
std
xchg
mov
mov
xor
call
dec
or
xor
push
aaa
cmpsb
add
push
adc
lods
les
sub
aad
ret
movsb
sub
addr16
lods
and
fwait
data16
aam
mov
or
xor
mov
jne
std
cs
fdivs
out
mov
adc
out
mov
jp
idiv
movsb
pop
sbbb
out
cmc
cltd
mov
inc
clc
divb
push
jo
mov
cs
call
nop
sbb
in
push
out
jle
leave
jo
or
and
mov
mov
dec
jmp
ds
aaa
mov
cmp
scas
xchg
bound
xor
mov
mov
in
xchg
mov
negl
add
adc
frstor
outsl
shll
mov
fiadds
enter
pop
sbb
or
cwtl
popa
test
sub
das
inc
cmpsb
aam
movsb
ret
cmp
hlt
popf
xchg
bound
sbb
add
scas
sub
sub
inc
jecxz
add
lea
pop
cmp
nop
sub
sub
adc
mov
movl
and
loop
cwtl
xchg
test
jle
lods
out
ds
hlt
adc
ljmp
pop
mov
subb
push
cmp
inc
lods
ss
out
cmpsl
pop
push
mov
lcall
or
mov
and
scas
xorb
cwtl
xor
loop
and
scas
mov
sbb
test
lods
pop
sahf
les
ret
imul
sub
insl
and
sub
scas
xor
push
mov
adc
xchg
and
scas
sahf
mov
mov
stos
les
sub
andb
mov
adc
sbb
ret
movsb
lock
les
sub
jnp
imul
sub
adc
xchg
mov
loop
lods
cmpsl
or
sub
sub
in
add
adc
loopne
dec
cmpsl
clc
cmpsb
clc
cltd
loopne
push
test
adc
mov
clc
jno
xchg
loopne
ljmp
mov
loopne
stos
aaa
jmp
and
and
xor
jo
mov
sbb
sub
out
dec
scas
stos
pop
push
jge
pop
daa
es
cmp
shlb
and
cmpsl
mov
jecxz
call
scas
cwtl
mov
mov
scas
arpl
sahf
popf
dec
pop
lret
push
js
and
mov
idivl
lods
sbb
addr16
mov
in
pushl
cmp
jb
scas
scas
xor
sub
mov
test
inc
sub
mov
dec
test
insl
and
pop
mov
lret
popa
stos
lock
jo
cmp
mov
and
test
loope
or
adc
xchg
je
sahf
xor
mov
add
mov
sti
lods
rol
movsl
add
inc
sbb
and
incb
loopne
pusha
cmpsl
out
test
loop
and
loope
popa
movsb
in
and
fistpl
pop
cmpsb
out
movsw
in
gs
mov
das
outsl
stos
ljmp
imul
out
mov
sub
xor
mov
xor
mov
xor
hlt
xor
mov
mov
ss
mov
pop
mov
mov
cli
cmp
jns
cld
cmp
jl
repz
jle
xlat
and
sub
cli
shlb
inc
add
fistpl
sbb
and
mov
addb
stos
outsl
mov
fldcw
sbb
scas
pop
into
cmp
push
and
movsl
pushf
ss
add
pusha
cli
stc
ljmp
inc
sar
and
stos
mov
je
scas
and
popa
sub
rcrb
lock
lods
aaa
fsubl
lock
cli
js
jns
std
mov
dec
jg
in
mov
gs
std
push
cmp
stos
movsb
mov
mov
clc
pop
push
ror
mov
test
mov
mov
mov
scas
mov
scas
fwait
sub
xor
repz
stc
push
aas
dec
int
mov
or
mov
lock
pop
rep
into
icebp
mov
aas
adc
cli
stc
mov
rcr
repz
xchg
sbb
xor
inc
das
jle
adc
in
lret
jne,pt
and
push
data16
jg
sar
jns
xor
pop
xchg
imul
dec
lea
or
sbb
lea
pop
ja
cmp
test
mov
mov
imul
ja
ret
out
clc
xor
mov
push
icebp
clc
xchg
sub
cltd
jns
call
and
and
leave
rcrb
in
sub
repnz
xchg
mov
xor
and
mov
sub
xchg
pop
cmp
dec
inc
push
loope
mov
mov
sub
lahf
adc
push
fwait
scas
pop
mov
mov
mov
mov
sarb
adc
stos
je
mov
push
adc
aad
pop
add
push
loope
xor
pop
mov
inc
jns
jnp
or
insb
mov
scas
mov
shrb
or
mov
les
jp
lods
sub
mov
jne
mov
aaa
cld
repz
push
icebp
adc
inc
xor
fucomip
shrb
call
xchg
cmp
das
pop
cs
lock
or
sub
add
inc
inc
mov
scas
leave
pop
inc
shl
and
jl
lahf
sub
aas
fcmovbe
mov
int3
out
mov
mov
adc
icebp
rorl
jo
aas
in
test
jo
mov
shll
sub
shrb
cmp
jo
mov
or
sub
mul
dec
call
inc
cs
loopne
mov
test
xchg
stos
jbe
push
mov
movsb
adc
xchg
and
add
mulb
bound
and
mov
and
loopne
icebp
and
and
cmp
and
mov
fwait
out
and
and
adc
andb
hlt
hlt
out
dec
mov
add
inc
add
les
jnp
mov
push
inc
test
mov
or
iret
mov
or
leave
mov
or
add
add
into
push
dec
int
or
push
xchg
xlat
mov
adc
shll
adc
mov
mov
push
push
xchg
aad
adc
pop
lahf
fbld
sbb
fldenv
sbb
xchg
shll
push
pop
popf
pop
mov
ss
mov
mov
jp
lret
mov
xor
mov
cs
lods
fists
sub
mov
repz
pusha
mov
push
push
lock
pop
lea
out
jns
cmp
jno
sub
bound
pop
mov
lock
xchg
push
movsb
xor
mov
jmp
cli
mov
js
jo
cmp
repz
and
mov
add
mov
cld
mov
mov
lods
loope
mov
js
pop
mov
or
jnp
jl
push
imul
push
mov
and
icebp
jns
in
je
mov
movsb
scas
lods
lock
cmpsl
scas
movsl
test
ja
sbb
jno
je
shl
loopne
jmp
mov
jno
cmp
mov
mov
and
cmp
repz
js
iret
clc
jg
xor
mov
xor
sub
scas
mov
push
jnp
push
add
ret
stos
cmp
add
or
mov
or
scas
or
sub
pop
mov
jns
out
and
stos
scas
and
loop
cltd
in
xchg
aas
push
cmp
or
pop
xor
jo
sub
cmpsl
movsl
mov
jg,pn
sti
mov
ja
lock
mov
and
mov
dec
cmpsb
jl
test
loope
mov
add
xchg
lods
push
fwait
and
and
movl
cmp
cmp
pop
je
mov
jo
das
jns
icebp
xor
and
aas
aad
int3
loopne
mov
lock
imull
cli
xchg
cmc
nop
call
ljmpw
and
loopne
call
ja
bnd
push
push
push
test
test
fidivrl
xor
jb
inc
xor
in
push
mov
aaa
call
outsl
mov
inc
pop
mov
mov
out
mov
fists
xlat
mov
cmp
popa
mov
in
jmp
test
add
pushl
popa
dec
jp
lcall
test
jl
mov
lea
mov
fdivl
cli
pusha
sub
cwtl
loopne
popf
adc
mov
inc
sbb
mov
inc
movsb
and
xchg
push
out
rcll
cs
test
test
xchg
mov
cli
lods
inc
movsb
sbb
iret
cmp
mov
add
ret
sbb
mov
imul
test
sbbb
xchg
stos
cmp
xchg
stc
sahf
popf
push
jns
pushf
mov
leave
mov
scas
dec
sub
mov
adcb
shrb
mov
push
subb
xchg
fdivl
push
mov
int3
insl
mov
imul
int3
jg
xor
cmp
subb
cmp
test
nop
mov
mov
rorl
mov
pusha
rorb
mov
movsb
push
mov
std
cwtl
adc
jne
lods
pop
loop
or
mov
movsl
fdivl
fwait
jle
in
mov
lcall
jns
mov
jb
and
mov
lock
stc
stos
lret
or
repz
pusha
cmpsl
imul
xchg
jo
clc
loop
stos
jns
push
mov
xor
xor
clc
shrb
mov
jmp
push
jle
mov
mov
icebp
icebp
sbb
and
stos
cli
js
jp
dec
repz
ja
fwait
mov
mov
repnz
jge
aaa
inc
repnz
pop
loopne
mov
and
cmp
jo
mov
pop
idivl
loopne
adc
lret
dec
mov
dec
push
mov
xor
jns
sbb
fildll
sti
mov
add
jno
aad
ds
nop
sub
test
mov
pop
fsub
and
cmpsl
add
gs
aam
scas
bnd
jmp
dec
xchg
mov
dec
mov
in
inc
pop
daa
mov
and
and
cmpsb
fadds
xor
adc
lcall
mov
je
mov
loopne
jle
out
mov
clc
add
fidivs
sbb
pop
loopne
and
movl
mov
mov
pop
js
fisubrs
icebp
jle
mov
and
mov
aaa
mov
add
test
jecxz
cmpsb
add
ss
test
test
aad
or
stc
aam
fwait
cltd
xchg
aaa
push
adc
sbb
loopne
repz
pandn
xorb
enter
jmp
and
inc
rorb
lods
sub
mov
jo
andl
shrb
lret
push
notl
jmp
call
xchg
clc
stos
pusha
hlt
pop
int
arpl
rorl
jb
or
scas
int3
add
insb
xchg
lock
xchg
in
mov
sbb
mov
ret
scas
test
sbb
test
or
mov
stos
jbe
mov
data16
stos
xor
mov
fs
and
icebp
mov
sub
mov
icebp
sti
mov
adc
lock
ljmp
lahf
iret
cmp
dec
movsl
xor
popa
mov
xchg
xchg
into
xor
sub
adc
mov
cmc
rcrb
in
arpl
mov
aas
addl
jmp
push
push
xchg
mov
ror
and
add
and
and
xchg
test
scas
mov
mov
jo
sub
movsb
cld
imul
std
pop
mov
divl
lcall
jg
out
mov
je
xchg
push
jno
bsf
xchg
subl
lods
scas
je
or
adc
ds
dec
mov
out
xor
xchg
mov
mov
mov
loop
adc
cld
stos
jp
add
sub
and
sub
and
loopne
or
nop
pop
int3
out
mov
mov
sbb
sub
mov
loop
loop
sub
loop
and
icebp
lods
and
mov
in
and
cmpsl
and
movsb
lock
ljmp
je
ljmp
mov
mov
stc
ret
mov
mov
daa
sub
or
shlb
inc
ljmp
je
movsb
push
test
mov
cmp
adc
test
movsl
cmpsb
add
mov
mov
mov
mov
imul
xchg
adc
cmc
xchg
xor
loop
movsl
pusha
andb
or
xor
scas
lahf
sub
and
loopne
mov
test
inc
lods
sbb
test
loopne
pusha
test
inc
out
cmp
jecxz
add
loopne
xchg
fnstcw
loope
test
push
leave
push
jp
into
sub
or
scas
and
movsl
mov
cmpsb
xlat
andnps
mov
movsb
inc
cwtl
popf
add
inc
clc
rorb
ljmp
mov
mov
lock
call
es
lcall
enter
out
push
xor
lods
cmp
sub
push
xchg
movsb
adc
cmp
loopne
xchg
mov
dec
xchg
sbb
movsb
dec
inc
lret
mov
iret
scas
mov
aas
imul
cmc
mov
mov
dec
xor
int
mov
adc
mov
sub
pop
scas
mov
in
fwait
sub
pushf
outsl
mov
xchg
ret
subl
xchg
mov
movsl
ret
and
les
call
sub
mov
inc
mov
ds
mov
popf
les
aas
jno
add
nop
popf
and
loopne
pusha
adc
mov
mov
scas
xchg
loop
les
adc
sahf
sub
cltd
cwtl
ret
xchg
scas
xchg
mov
les
add
and
scas
mov
test
and
lods
mov
mov
les
lods
ret
test
mov
cmpsl
mov
cmpl
in
xor
jmp
jge
push
and
aas
lcall
movsl
pusha
push
stos
pushf
faddl
test
je
stos
mov
mov
mov
test
xor
mov
mov
mov
push
loop
xchg
test
cmp
ret
pop
out
in
lods
loop
ret
cmp
jae
sti
sub
movsb
and
scas
icebp
mov
xor
loopne,pn
popf
les
fisubs
subb
shlb
and
adc
mov
mov
xchg
xchg
out
push
xor
mov
push
xor
scas
xchg
and
mov
mov
lea
out
cmpsl
dec
shlb
mov
xchg
adc
push
xor
ret
mov
xchg
mov
add
sub
sti
dec
mov
shr
add
mov
movsl
shlb
add
add
push
pop
repnz
ds
jns
cwtl
andl
mov
outsl
out
rcll
cwtl
mov
adc
pop
cmp
pop
mov
ljmp
pusha
movsb
pop
or
xchg
mov
mov
fdivs
ds
xchg
push
les
pavgb
mov
pop
dec
aaa
loope
pop
mov
nop
xor
mov
mov
mov
outsb
jecxz
or
fnstenv
fcomip
in
xlat
jge
inc
add
setl
iret
andl
ss
out
cmc
ret
push
jg
mov
sub
cmpb
rolb
mov
mov
pop
mov
loopne
insl
cld
out
and
mov
ss
sarl
and
rcrl
jmp
sbb
sahf
xchg
addr16
push
mov
dec
sbb
cli
mov
sub
in
lea
ds
popa
jnp
or
adc
movsb
adc
xchg
popa
jae
dec
lahf
subb
fdiv
pusha
xchg
or
pop
add
je
repz
fwait
inc
push
dec
adcb
test
subb
outsb
popa
in
clc
inc
lds
int3
je
mov
dec
sbb
daa
pusha
or
mov
mov
iret
shrb
jge
sub
lea
mov
daa
xchg
push
pop
shr
push
cs
js,pt
jo
nop
mov
scas
add
mov
xchg
xorb
pop
pop
punpcklbw
mov
arpl
cs
cld
movsl
adc
subb
test
or
iret
add
mov
xor
mov
inc
cwtl
js
repnz
jno
or
jle
mov
nop
adc
lcall
mov
mov
sub
cmp
addb
jnp
std
in
adc
xchg
cmpsl
aad
xchg
sub
andb
fcompl
cmpsl
in
psubq
movsb
loop
andb
ljmp
cmpsb
ss
and
mov
dec
cmp
cmp
and
stos
sub
jmp
repnz
push
sub
xor
sub
aas
mov
repz
clc
aas
in
sub
test
lods
xchg
or
jl
xor
cltd
insb
scas
xchg
repz
lods
js
cli
mov
shld
mov
mov
lods
xor
test
es
gs
idivl
mov
xor
mov
sbb
or
jp
mov
cld
js
call
int3
xchg
pop
lods
imul
imul
mov
and
movsl
mov
lock
cld
mov
lock
pop
push
loop
movsb
rcrb
add
and
sbb
pop
inc
cltd
push
je
or
or
sub
lahf
in
cmpsb
cltd
out
pushf
cld
xchg
mov
popf
xchg
insb
subl
outsb
push
and
mov
pop
push
sbb
jecxz
inc
xchg
mov
and
lahf
mov
jle
cmp
out
arpl
jbe
jae
add
push
sub
test
repnz
add
push
les
jno
inc
push
push
lods
out
outsb
inc
stos
dec
orl
sub
cwtl
pushf
sahf
xchg
popf
ficoms
lcall
cmpsb
sahf
movsl
popf
test
scas
popf
stos
popf
test
popf
scas
popf
lods
popf
mov
mov
mov
mov
mov
stos
popf
mov
jp
lcall
popf
jnp
test
pop
popf
fcompl
lods
popa
cmpsb
and
in
pop
jo
sub
sahf
mov
insl
cmp
pop
fsubrl
and
lahf
jl
add
pusha
fildll
insb
mov
nop
shlb
lcall
and
lods
mov
insl
dec
insl
pop
and
arpl
aad
pop
push
fisubl
sub
and
pop
push
and
inc
mov
push
mov
notb
push
mov
push
add
push
inc
push
dec
push
mov
push
adcl
aam
cwtl
push
sbb
xchg
out
adc
adc
fldt
lock
cmc
lcall
pop
add
mov
mov
sub
ja
sbb
push
inc
push
mov
push
xchg
push
pusha
lods
and
dec
insl
dec
cmp
xchg
mov
repz
mov
sbb
dec
fmuls
fcompl
mov
xchg
pop
push
ljmp
push
sbb
inc
adc
sub
add
xor
movsl
insb
pop
inc
loope
into
outsl
shlb
jg
add
outsl
or
and
shrb
jae
movsl
in
lods
scas
insl
mov
mov
sub
fidivl
fidivrs
sbb
data16
push
mov
pop
movsl
gs
in
lds
ret
and
stos
jecxz
in
ss
into
nop
and
arpl
enter
mov
jo
scas
ljmp
push
rcll
add
xor
add
rorb
in
in
sub
data16
icebp
add
jle
xchg
sbb
sbb
ficoms
pop
ficomps
sahf
out
cmp
mov
mov
cmpsb
mov
cmp
cmp
inc
cmp
or
mov
in
add
add
inc
sub
dec
jg
shlb
shr
aam
arpl
ja
icebp
scas
scas
mov
popf
lds
mov
xchg
popf
adc
adc
popf
pop
imul
popa
push
jno
inc
out
push
mov
push
ss
call
push
repz
ds
inc
push
mov
push
xchg
push
adc
push
in
das
inc
sub
cli
dec
cmp
cmp
shlb
loop
and
and
mov
popf
or
sub
lahf
negl
call
rolb
cmp
xlat
cmp
fidivrl
jb
repz
add
mov
repnz
add
sbb
inc
pop
inc
movsb
and
adc
mov
ds
repnz
inc
das
or
fiadds
out
jbe
shll
ret
xchg
push
mov
pushf
fwait
cs
outsl
lcall
jb
xor
cmp
inc
cmp
int
and
cs
jbe
push
xor
adc
jns
jae
inc
sahf
dec
popf
dec
popf
push
popf
cwtl
test
sbb
add
jle
std
int3
negb
sub
imul
cmp
pop
ret
xchg
insl
sarb
test
mov
out
in
movb
idivl
or
adc
and
mov
imul
inc
dec
or
rcl
inc
aam
xchg
mov
jge
lds
test
shrb
mov
enter
mov
lahf
lods
shl
imul
cmc
inc
jg
inc
xlat
andps
pop
pushf
and
lahf
xor
sbb
insb
xor
movsl
mov
inc
add
push
gs
sbb
jecxz
push
pop
and
dec
notb
pop
inc
pop
add
adc
outsl
pushf
jb
movsb
inc
outsl
push
imul
inc
adc
dec
lds
adc
inc
scas
repnz
stos
lock
in
cmp
mov
xor
push
ds
cwtl
sub
xor
stos
mov
popf
addb
test
lahf
cmp
pushf
add
sbbb
push
fnstsw
cmc
mov
nop
loope
fwait
shlb
scas
xchg
stos
sahf
test
addb
addb
jmp
ja
jg
shlb
ret
xchg
add
movsl
mov
jecxz
call
fs
stos
xor
mov
jge
lds
mov
mov
xchg
movsl
fs
call
sti
aaa
stos
xchg
mov
insl
xor
insl
inc
insl
mov
insl
inc
insl
nop
insl
aad
pop
insl
sbb
insl
pop
and
sub
das
or
sub
fwait
icebp
mov
lods
mov
push
popf
dec
popf
movsb
les
movsl
mov
lds
in
jb
test
js
cmp
xor
xchg
dec
fmuls
and
mov
xor
int
movsl
loop
out
add
jno
into
popa
push
jno
inc
movsb
scas
sub
mov
fstp
pop
ficompl
out
cmp
mov
movsl
test
mov
adc
rolb
lods
loop
loopne
imulb
push
push
neg
gs
mov
nop
in
lahf
iret
lcall
xor
mov
mov
push
lahf
movsb
js
inc
lods
dec
les
popf
xchg
jg
stc
lahf
or
nop
bound
insl
lahf
negl
push
out
arpl
add
mov
sarb
lock
ret
stos
add
insl
sbb
fs
and
push
push
loop
lock
outsb
lods
add
test
inc
rorl
pop
inc
addb
push
add
call
rcr
or
xor
in
lcall
in
cmp
mov
movsl
and
insb
out
out
adc
nop
jecxz
shrb
push
cltd
dec
out
arpl
sub
lea
dec
out
nop
test
fcomps
in
arpl
mov
mov
ss
cmp
stc
dec
pushf
rcr
mov
ret
rorb
pop
lods
and
cmpsb
push
outsb
lods
lock
repnz
sub
sub
scas
mov
xchg
mov
xor
popa
xor
mov
adc
psubusw
mulps
mov
loopne
mov
in
movsl
in
popa
lds
movsl
add
icebp
gs
les
inc
test
inc
popl
sti
mov
adc
scas
andb
sarb
mov
push
aam
pop
push
jmp
dec
lods
dec
mov
mov
mov
mov
xchg
push
mov
popf
mov
mov
in
add
cmc
gs
incb
inc
mov
das
jecxz
nop
jns
push
or
mov
inc
rcll
push
pop
push
push
xchg
and
popa
xor
ret
xor
mov
xor
pop
adc
in
cmpsb
lahf
and
pushf
mov
icebp
nop
je
addl
out
mov
daa
cli
inc
jle
mov
mov
xchg
cmp
cmp
cmp
insl
enter
dec
or
ret
inc
dec
inc
dec
inc
xchg
mov
cmp
xchg
in
pusha
jp
das
arpl
shr
shrb
sti
out
cs
dec
mov
insl
cmp
add
cmp
sbb
xor
int3
rcl
fsubrs
in
out
xchg
and
cmpsl
xchg
arpl
sbb
loop
scas
iret
outsl
push
cltd
mov
add
sub
dec
push
dec
push
push
pop
push
pop
push
pop
push
pop
push
pop
dec
pop
lahf
and
movsb
loopne
mov
cs
out
and
sub
cmpb
insl
lds
mov
mov
mov
loop
test
cwtl
mov
subl
inc
xchg
mov
xchg
pop
lcall
fidivrl
xchg
cwtl
fstl
add
mov
nop
sbb
stos
shlb
fmuls
ficomps
mov
popa
sbb
mov
lock
popf
lcall
cmpsb
mov
addl
addb
test
push
mov
rorb
ficoms
insl
xchg
insl
mov
insl
lahf
insl
cltd
insl
xchg
insl
popf
loop
lods
mov
scas
fsubrs
and
nop
inc
mov
mov
addl
xchg
push
mov
sbb
sbb
shrb
lea
popf
xchg
popf
xchg
popf
mov
jb
loop
lahf
lock
ficomps
inc
mov
jno
inc
movsl
push
test
scas
push
stos
push
test
cmp
stos
fidivs
push
shlb
mov
and
loopne
std
add
repnz
jmp
test
loope
jo
fwait
mov
daa
jmp
imul
pop
sub
ds
shrb
test
jns
cmp
pushf
in
sub
aad
sti
jne
fwait
arpl
xor
mov
repz
lock
arpl
mov
adc
outsb
enter
mov
cmpsb
lea
rcrl
dec
mov
or
pop
mov
imul
cmp
addr16
into
pop
daa
push
dec
add
mov
adc
push
scas
fsts
mov
int3
cwtl
leave
push
movsb
or
or
lds
mov
push
pop
push
adc
sub
mov
sbb
test
mov
loop
cmpsl
push
sub
jnp
pop
mov
dec
sarl
sub
mov
and
and
out
xor
aaa
dec
jge
fwait
in
in
ret
sub
cmp
sarb
xchg
push
sahf
and
js
cld
repz
test
movsl
dec
call
inc
imul
xchg
inc
jl
cmpl
cli
pop
push
inc
xchg
xor
in
insb
mov
outsl
pop
xor
mov
add
xor
jae
hlt
sub
enter
test
and
jge
inc
jg,pn
stos
xor
divl
sub
mov
outsl
sahf
push
fistpl
test
jmp
out
adc
in
out
loope
mov
int
test
jne
out
insb
push
loope
xor
mov
imul
pop
out
cmp
ja
stos
dec
popf
mov
aaa
cld
lahf
add
pop
or
out
jg
iret
scas
aam
inc
xor
test
jb
jmp
xchg
sub
inc
sub
mov
loop
aas
jno
dec
lock
ja
ret
repnz
push
arpl
xchg
sbb
inc
xor
push
stc
add
inc
call
aas
test
call
mov
sub
xor
mov
sub
mov
fs
sub
mov
mov
jae
fsubrl
jl
lods
mov
adc
ret
jbe
je
sarb
cmc
mov
and
push
xchg
and
push
and
outsl
dec
in
out
enter
insb
mov
and
aad
lods
scas
stos
cmpsl
sub
lods
out
in
test
je
gs
jg
mov
sub
mov
sbb
jmp
scas
stos
mov
leave
mov
lock
mov
fcomps
mov
test
xchg
out
adc
scas
in
cs
test
sub
xor
xor
lcall
subl
out
insb
sub
test
or
clc
pop
xlat
jmp
imulb
or
ljmp
xor
ss
sub
insb
ret
sbb
pop
stos
in
scas
andl
es
mov
lahf
js
sbb
sub
nop
jae
clc
scas
cmp
mov
adc
test
test
cli
lret
dec
mov
xchg
jg
daa
mov
movsb
and
shrb
imul
std
and
jo
andl
das
sub
pusha
xchg
xor
and
and
icebp
popf
scas
add
or
mov
sar
adc
int3
data16
lahf
mov
mov
mov
dec
outsb
call
sub
inc
and
arpl
scas
test
imul
add
xor
inc
push
repnz
xor
add
push
jp
aaa
stos
je
cld
hlt
sbb
and
jp
xor
push
sub
cmp
mov
pop
repnz
mov
mov
sub
and
xchg
sub
sarb
cwtl
insl
icebp
cli
mov
lcall
movsl
xchg
and
mov
je
or
call
cmp
fdivrs
mov
fnstcw
add
sbb
cld
xchg
aaa
sbb
push
imul
in
dec
lret
in
repz
sti
popf
jp
iret
xor
sub
cld
cmpsb
jle
sub
mov
pop
mov
mov
jl
hlt
jg
sbb
jnp
mov
mov
test
lock
aas
ja
sub
jg
popf
fsubrs
sbbb
jp
imul
pushf
mov
movsl
es
sub
dec
inc
push
and
jo
mov
in
fs
scas
cmp
fsubs
mov
lock
add
hlt
repnz
cmp
idivl
cli
mov
mov
mov
xchg
mov
cmp
cli
call
sub
mov
push
push
pop
decl
cli
ret
fdivs
je
fstpt
mov
aas
mov
inc
inc
test
imul
das
ss
pop
add
test
lahf
outsb
xor
fnclex
test
jns
sub
aaa
stos
in
mov
mov
icebp
cmpsb
loopne
sub
insb
mov
imul
cmp
jle
loope
lock
call
push
outsb
adc
imul
cs
dec
outsl
and
aas
insb
movsb
andl
jmp
iret
arpl
dec
mov
mov
cmp
mov
scas
sbb
or
ds
imul
data16
jg
push
sahf
sub
sbbl
jecxz
xor
pop
pop
pop
mov
enter
push
push
ljmp
mov
xor
imul
xor
popa
fnstcw
jae
cmpsb
bound
xor
sub
pop
push
lods
js
and
cmp
pop
arpl
out
adc
in
mov
ret
sbb
scas
cmp
sbb
jno
cltd
out
jns
jae
pop
push
xchg
iret
fidivrs
pop
push
ds
in
lods
sub
adc
push
adc
adc
mov
cmp
ds
or
xor
dec
and
jmp
int
ja
adc
idivb
mov
lea
cmc
mov
jne
mov
scas
ljmp
mov
sub
pop
jge
ror
decb
sbb
sbb
jmp
pop
in
add
mov
in
out
xchg
sub
test
jno
es
movsb
add
or
mov
addr16
and
push
test
mov
sub
out
sub
iret
movsl
test
fdivp
lret
lss
mov
bound
jecxz
test
test
testl
lods
add
dec
push
loope
scas
sub
enter
out
jb
sub
pop
cmpsb
inc
sbb
fists
hlt
xchg
arpl
lods
xchg
scas
pop
push
pop
insl
vpacksswb
out
scas
push
and
lods
or
test
and
mov
mov
imul
cmp
jp
sbb
or
adc
in
repz
or
scas
inc
aas
xchg
jmp
insb
mov
sub
pop
test
add
arpl
pop
imul
ret
mov
xchg
lret
int3
lock
outsb
out
mov
and
or
scas
pop
pop
add
jo
or
jno
fs
cmp
in
js
and
xchg
clc
adc
cs
decb
xlat
outsl
mov
sub
mov
outsl
mov
repz
pop
lcall
adc
jmp
add
xlat
adc
leave
icebp
sbb
mov
repz
cmp
lds
xchg
test
out
xor
shrb
enter
adc
outsl
mov
jo
xor
das
in
xchg
jb
nop
xchg
das
out
cs
pop
aad
jge
enter
add
fucomip
outsl
sub
mov
add
idiv
sub
arpl
or
mov
inc
and
jp
push
sub
mov
jp
push
mov
mov
imul
adc
pop
inc
int
mov
push
orl
jmp
lock
xor
imul
gs
adc
or
ss
and
xchg
mov
arpl
outsb
pop
test
xlat
test
fsubrs
outsb
scas
jno
xchg
pop
daa
cmc
sub
lods
pusha
cltd
mov
arpl
aad
mov
jb
add
xor
std
test
and
mov
test
ds
popa
loope
fadds
iret
mov
cltd
sub
mov
mov
mov
out
inc
out
mov
xchg
cld
sbb
aad
mov
mov
add
mov
call
xor
ljmp
or
sub
je
repz
mov
call
outsl
sub
inc
popa
xor
insb
push
push
mov
and
dec
es
mov
repz
insl
mov
ljmp
or
test
call
pop
les
enter
mulb
mov
and
arpl
xor
scas
sub
mov
push
ja
fsubr
lods
xor
js
outsb
add
mov
cmp
cmp
xor
xor
add
xchg
dec
stos
cmp
ljmp
jecxz
jnp
pop
xchg
fdivs
or
bound
imul
ja
mov
movsb
jmp
push
call
push
push
or
cli
inc
push
xchg
jae
pop
xor
adc
imul
add
out
arpl
or
pop
xchg
enter
lea
cmp
ret
cmp
test
in
pop
mov
sahf
xchg
inc
loopne
dec
shlb
push
hlt
pop
setg
xchg
fadd
insb
xorb
icebp
inc
data16
push
add
repz
sub
cmp
pusha
xor
cmp
sbbb
and
mov
xchg
in
loop
shrb
lret
jno
cmc
adc
hlt
or
aaa
xor
insb
hlt
arpl
adc
add
scas
imul
addr16
inc
repnz
add
sub
lods
cmp
add
inc
push
pop
cmp
ljmp
in
sti
rcll
push
xchg
stos
xor
inc
jnp
push
loop
jecxz
lds
daa
data16
and
add
dec
je
push
cmp
xlat
rorl
fisubrl
mov
leave
iret
repz
jb
adc
sub
add
cmp
xchg
imul
dec
mov
push
ss
xchg
cltd
scas
sub
xchg
fcmove
and
subb
cld
ds
and
mov
push
scas
lods
jbe
cld
in
insb
aas
out
inc
and
xor
pop
jmp
mov
arpl
scas
mov
jge
push
movsb
lds
xorl
pushl
jns
ret
insb
in
mov
inc
pop
and
repnz
int
xlat
jb
notb
push
lock
inc
enter
xor
rcrb
jo
pop
imul
sarl
cltd
mov
fmulp
sbb
mov
arpl
out
scas
inc
popf
push
or
and
fwait
inc
int
push
leave
sti
imul
cmp
push
pop
addr16
lahf
sub
fisttps
testl
sbb
lods
jecxz
out
sbb
imul
sub
fdivp
jo
imul
mov
push
sbb
jmp
cli
arpl
add
and
inc
hlt
and
inc
lds
fnstenv
inc
mov
or
sti
mov
mov
push
daa
adc
movsl
stos
jnp
stos
adc
xor
mov
push
mov
test
pop
loop
add
out
xchg
mov
test
shrl
lret
jl
mov
jecxz
imul
shlb
pop
iret
arpl
or
xor
inc
add
test
cmp
ret
dec
jae
push
jns
stos
scas
outsl
push
sbb
out
jmp
cmp
push
aaa
mov
sub
scas
into
jmp
sub
adc
mov
pop
jg
push
lahf
jecxz
pop
and
popf
and
scas
stc
pusha
push
in
lods
test
jmp
add
dec
scas
xor
pop
push
xchg
sbb
xchg
pop
mov
dec
xlat
dec
rclb
adc
ss
pop
sti
int3
dec
mov
xor
loope
pop
cld
xchg
xchg
movsb
xchg
jl
mov
xlat
mov
mov
test
and
dec
inc
imul
je
movntps
jo
mov
test
ja
rcrl
addr16
imul
sub
arpl
push
lret
xor
mov
int
jp
cli
pop
mov
cmp
jge
ficoml
push
cmp
adc
imul
outsb
lret
pop
lds
fdivrl
mov
mov
enter
enter
out
imul
jle
lods
fs
sarl
cmc
icebp
lods
lods
cmpsl
leave
jl
or
fwait
mov
test
jb
out
xor
iret
cld
inc
rorb
outsb
push
std
cmp
xchg
outsl
or
sub
sub
insl
xchg
dec
add
push
call
sub
push
arpl
cmp
ret
ljmp
in
lods
push
insl
arpl
rorl
xchg
sub
pop
push
xchg
out
add
aaa
inc
and
add
std
adc
scas
jecxz
pushf
inc
nop
sbb
inc
jno
xor
mov
imul
mov
xor
and
jne
nop
enter
imulb
cmp
push
add
inc
xchg
xchg
mov
push
add
push
cmp
fs
call
popf
call
or
add
adc
dec
leave
jb
fcoml
repnz
jp
and
adc
xor
sub
push
popf
add
and
xor
xor
sub
lds
push
leave
jp
mov
cli
add
test
xor
inc
adc
push
lret
xchg
or
frstor
dec
lahf
inc
push
adcl
jecxz
xor
and
push
repz
out
sbb
mov
repz
adc
scas
cmp
inc
mov
arpl
mov
jmp
pop
mov
cli
stos
adc
stos
aam
jb
mov
add
in
sub
stc
outsl
add
push
lea
test
in
jne
icebp
stos
add
insb
pushf
shl
lds
sub
cmp
xchg
shrb
arpl
sub
pop
adc
mov
cmp
and
fadd
lret
adc
mov
ret
mov
inc
test
rcrl
pop
sub
adc
int
xchg
lea
imul
daa
and
adc
lds
dec
sub
fptan
mov
fidivrl
fldenv
fwait
adc
fmuls
movsl
push
sub
dec
imul
and
jg
repnz
aad
inc
test
mov
adc
cmp
sti
dec
mov
leave
data16
fdivrl
std
cmp
or
push
fcompl
repnz
jl
xchg
pusha
cmp
mov
lcall
push
cmp
pop
insb
gs
lfs
lret
jecxz
cli
test
or
and
adc
xchg
je
xor
stos
clc
setg
mov
scas
dec
mov
fs
fld
cmp
out
mov
arpl
adc
or
adcb
or
xchg
lret
scas
adc
std
xchg
dec
sub
xor
xorl
lds
shrl
adc
mov
sbbl
ja
sti
std
jmp
sbb
fdivs
repnz
shlb
sbb
mov
push
push
movsl
scas
lret
je
xor
add
mov
dec
cli
into
xor
pop
fidivrl
add
inc
icebp
push
ss
cmpsb
jae
sub
and
js
imul
add
lret
cltd
mov
pop
ljmp
pop
bound
ss
imul
orl
ret
mov
push
mov
insl
imul
xor
jae
jb
popf
jns
lock
xor
jl
fiadds
mov
repz
repnz
stos
imul
mov
xor
lods
stos
cmp
mov
and
xor
divl
jmp
aas
arpl
mov
sub
repz
stos
xor
mov
jp
push
lret
add
xor
ds
mov
cli
mov
pusha
xchg
xor
jo
imul
cmc
test
ja
and
out
fdivrs
jae
test
stc
jo
nop
repnz
arpl
jb
push
ja
ret
add
scas
lods
imul
icebp
mov
repz
cmp
jmp
insb
mov
dec
int
mov
ja
cmp
mov
jae
scas
icebp
lock
daa
jo
out
repnz
cmp
mov
clc
lock
imul
inc
outsl
xor
and
jns,pt
daa
cmp
mov
push
jb
fwait
ds
mov
addr16
repz
jae
insl
cmp
cmp
mov
mov
hlt
push
imul
stc
xor
mov
jp
arpl
pop
mul
fwait
mov
jb
jns
xor
imull
jp
mov
aas
je
push
jmp
jo
cld
insb
icebp
mov
lods
xchg
in
mov
mov
mov
mov
jl
scas
xor
mov
xor
cmp
mov
clc
divb
cli
mov
repz
sub
xor
mov
jp
mov
cmp
lods
mov
test
insb
push
jecxz
xor
and
rclb
mov
mov
jb
popa
lods
jecxz
pusha
push
mov
mov
arpl
jmp
mov
mov
aas
icebp
cmp
in
mov
out
loopne
lods
imull
mov
mov
pusha
jo
imulb
mov
scas
jb
loope
ja
js
test
mov
mov
and
mov
stos
js
jl
mov
shlb
mov
repz
push
jecxz
cltd
nop
and
pop
push
inc
ss
mov
in
clc
repz
test
pusha
mov
jecxz
cmp
push
lcall
cmpb
mov
scas
jl
xor
insb
clc
push
popa
aas
imul
outsb
gs
out
sub
mov
lods
xor
ss
xor
xchg
stos
pop
pushf
in
cmp
mov
jb
icebp
imul
loope
test
mov
js
arpl
imul
or
xchg
jns
dec
je
mov
push
pop
pushf
mov
mov
jo
das
jp
div
mov
cmpsb
repnz
ss
ds
cld
mov
cmp
xchg
mov
jae
mov
addr16
lock
arpl
jecxz
or
jp
loopne
insb
jmp
xor
adc
icebp
add
jp
test
popf
and
in
cmp
xor
scas
and
repz
nop
and
push
imul
addr16
cltd
test
push
cmp
mov
cli
icebp
mov
repz
out
dec
das
hlt
adc
stc
jae
repnz
scas
lock
stos
mov
popa
aaa
xor
scas
mov
xorb
mov
sub
push
adc
enter
and
test
xor
jmp
scas
xor
mov
add
ss
roll
jns
and
scas
mov
mov
insb
mov
and
xor
sbb
dec
mov
aas
in
push
push
mov
push
andb
sbb
and
mov
rcl
lock
aaa
jno
xor
jo
or
icebp
js
xor
mov
mov
addr16
xor
sbb
out
xor
bnd
mov
insb
mov
mov
xor
popa
lret
mov
fisubs
stos
xor
push
mov
lret
mov
jecxz
cmp
mov
jo
and
cmp
and
lea
out
mov
mov
xchg
test
arpl
and
lods
xor
mov
sub
dec
jmp
out
je
xor
mov
inc
stos
cmp
jo
xor
dec
pop
out
mul
dec
cmp
cld
and
or
and
repz
mov
push
mov
xor
scas
sbb
into
cmp
fld1
out
test
mov
cmp
icebp
das
push
sbb
gs
or
inc
loopne
jl
jb
mov
mov
push
cld
xchg
lods
divl
mov
pusha
hlt
xor
inc
aad
fyl2x
js
mov
mov
mov
jae
xor
stc
mov
repnz
jns
push
sbb
adc
fcomps
xor
js
aaa
cwtl
xchg
mov
jb
xchg
xor
pushf
sub
ja
loopne,pt
jb
stos
mov
cmp
pop
test
imul
movsl
jle
inc
repnz
cld
mov
jnp
pop
inc
mov
hlt
notl
pop
ja
mov
adc
loope
je
mov
mov
out
or
mulb
fistpll
xor
hlt
lods
mov
pop
sbb
test
mov
jmp
sub
cmp
in
cmp
loop
jl
imul
cmpb
jmp
jo
icebp
mov
adc
inc
jmp
xchg
jno
mov
mov
fs
js
inc
pop
icebp
aas
and
cwtl
bnd
ljmp
test
jns
xor
sbb
lock
out
xor
mov
movsl
mov
pop
clc
adc
inc
ds
jecxz
in
sub
js
jns
jnp
loopne
mov
nop
fdiv
jb
mov
aaa
mov
cmp
lock
jb
ja
in
jmp
add
es
mul
out
cmp
stos
jecxz
push
mov
fdivl
mov
scas
hlt
ja
das
jo
pop
jae
pop
inc
add
fdivrl
notb
mov
clc
out
sub
xchg
mov
push
sub
movsl
cmp
shrb
mov
jo
adc
test
mov
mov
mov
loope
fnstcw
aam
pop
jmp
arpl
shlb
pop
fldl
movsl
sub
cmp
mov
inc
imul
jmp
stc
lret
cmp
xchg
mov
lods
je
test
adc
sbb
scas
and
lock
sub
cwtl
push
xor
sub
aas
add
push
fidivl
mov
sub
je
sub
in
mov
repz
or
cmp
stc
cmp
pop
pushf
cmp
hlt
add
je
rol
jg
sbb
xchg
and
mov
imul
xor
stos
sub
cmp
repnz
mov
loope
xor
test
xor
sbb
and
mov
adc
repnz
hlt
mov
lock
xchg
je
sub
test
fdiv
jb
js
pop
outsb
inc
movsl
dec
mov
imul
test
jb
imulb
pop
test
and
push
xor
nop
xor
jns
mov
lock
mov
xor
push
jno
sbb
mov
sub
cli
mov
sbbb
mov
mov
mov
or
mov
ja
stos
mov
mov
or
mov
orl
repz
cld
or
xchg
mov
lods
idivl
sbb
loopne
jl
lods
jb
jo
stos
mov
out
icebp
cmp
mov
stos
or
fucom
xor
gs
cmc
cwtl
repz
out
loop
in
mov
cmp
popf
xor
rorl
ss
xchg
adc
jl
adc
jb
adc
mov
mov
cmp
out
sbb
xchg
enter
cs
mov
jns
mov
insb
pop
push
xchg
leave
jle
jp
mulb
hlt
mov
mov
icebp
cmp
scas
cmp
in
fwait
mov
jg
daa
mov
jecxz
daa
mov
fidivrl
cld
incl
jnp
aas
xchg
jmp
mov
sub
test
lods
sub
lods
push
sub
jmp
cmpsl
jp
insb
mov
pushf
lods
loopne
clc
ja,pt
mov
jl
mov
adc
lods
adc
mov
xor
sbb
andl
pop
arpl
sub
insb
in
mov
xchg
mov
aas
push
or
das
stc
imul
sbb
pop
cmpsl
popa
xor
mov
mov
push
fwait
jno
gs
or
cli
add
je
jo
lock
dec
jp
xchg
pop
mov
loop
mov
jmp
push
cmp
fwait
out
iret
ss
mov
lret
mov
mov
ja
pop
std
insb
sub
nop
stc
mov
pop
sbb
fiaddl
mov
jg
je
jae
sti
pop
jge
push
mov
sbb
and
cld
bound
and
add
arpl
out
mov
cltd
cmp
popa
cmp
dec
iret
aam
xor
pop
loopne
aaa
je,pt
lahf
mov
mov
fmulp
and
lods
fnsave
fidivrl
jmp
pop
jg
repnz
xor
fnstenv
cmc
adc
ja
lret
sub
mov
mov
stos
push
mov
in
int3
xlat
push
pop
add
stc
xor
add
xor
lahf
addr16
aaa
cmp
mov
and
test
cmp
xchg
aaa
rclb
repz
adc
add
xor
push
and
lea
stos
mov
dec
test
aaa
jb
jb
mov
cld
cmp
imul
rclb
clc
mov
jo
xor
xchg
test
jno
jns
mov
hlt
scas
nop
lods
and
fsubrl
cld
jno
jne
sub
pop
ja
or
mov
xchg
ret
dec
jno
test
mov
pop
in
clc
xchg
gs
jp
aam
call
sbb
mov
push
sub
js
jne
sub
add
stc
jmp
mov
mov
add
clc
cmp
mov
pop
push
loop
test
jno
add
lods
lods
mov
and
jecxz
shlb
xor
cli
arpl
mov
xchg
push
enter
sbb
js
lods
push
insb
test
ds
movsl
mov
cmp
inc
xchg
jno
cmp
inc
test
js
xor
jo
out
fwait
xor
js
cmp
insb
jecxz
sub
in
xchg
dec
inc
push
stos
pop
mov
xor
aad
scas
mov
test
arpl
mov
imul
jle
std
mov
in
jno
pushf
repz
stos
and
mov
imul
lcall
xor
lods
rcl
jae
aaa
imul
xor
and
mov
mov
adc
cmp
mov
sub
fidivrl
pop
xor
je
jbe
in
scas
imull
stos
jmp
sub
jg
inc
test
imul
clc
cli
imul
lret
xor
inc
pushl
cmp
js
subb
sub
cmp
cmp
mov
push
mov
clc
jp
popa
mov
jo
je
mov
mov
ljmp
pop
and
mov
js
pop
bound
mov
xor
sbb
les
mov
mov
mov
addr16
push
repz
cmp
clc
addl
mov
js
popf
and
cmp
subb
stos
sub
or
xor
icebp
mov
lods
mov
and
xor
mov
int3
mov
lods
sbb
test
pop
negb
dec
lock
mov
lods
cld
mov
enter
dec
loopne
xor
jecxz
into
popf
adc
arpl
idivl
int3
repnz
mov
aaa
jae
xor
cvtpi2ps
mov
sub
xlat
jno
inc
mov
cmp
mov
lcall
dec
jg
lods
hlt
cmp
cmp
cli
adc
jo
mov
insb
mov
std
cld
mov
je
cmp
adcb
imul
mov
cmp
in
inc
fbstp
in
scas
xorb
test
and
mov
nop
mov
clc
mov
test
mov
jo
mov
cmp
mov
stc
loop
cmp
and
insb
mov
mov
jecxz
ret
and
jg
js
insb
stos
sti
cltd
test
mov
push
movzbl
imul
arpl
pop
cltd
xchg
push
xchg
cwtl
mov
repz
clc
mov
ljmp
jg
xor
sbb
xor
mov
imul
xchg
xchg
and
aas
test
lock
push
loop
clc
inc
mov
mov
jp
shl
or
fidivrl
sbb
mov
and
sub
lods
push
cmp
and
and
mov
gs
mov
out
sub
shrb
test
icebp
cmpsl
xor
mov
insb
xor
mov
push
cld
xchg
xchg
je
xchg
out
imull
es
mov
lods
outsb
mov
mov
jne
loopne
aaa
push
insb
xrelease
jb
jb
cli
imul
sbb
repnz
jns
in
push
mov
out
cwtl
divl
in
mov
mov
pushl
js
pop
lcall
xor
aaa
mov
cmp
mov
pop
imul
xor
jmp
cld
mov
in
js
sub
mulb
mov
adc
xor
mov
fimull
in
pop
sahf
idiv
in
jecxz
ss
aaa
mov
fdiv
jno
loop
cli
jo
cmpsl
lcall
push
decl
fdivrl
and
stc
pushf
ss
repz
adc
sub
dec
xor
mov
xor
js
loop
jno
stc
push
loop
rol
cmp
mov
sub
cs
inc
xor
in
and
fcom
mov
inc
inc
pop
xchg
test
stos
xor
sbb
scas
inc
jns
imul
stos
enter
adc
lods
arpl
or
cmp
xor
cmp
in
sbb
icebp
jmp
or
js
push
mov
fwait
mov
ds
test
or
push
lds
idivb
mov
mov
jae
mov
aaa
js
test
cli
mov
cld
cli
scas
jns
inc
and
mov
sub
xor
imul
mov
test
xlat
imul
add
xchg
test
mov
ja
aas
cmp
xor
lods
xchg
hlt
arpl
jecxz
shrl
xor
or
js
cmp
in
sub
cmpsl
idivb
ja
outsl
and
mov
jmp
cmp
das
jp
xor
cld
sub
shl
jns
mov
jb
sub
mov
jno
imul
jecxz
ss
fidivrs
stos
movsl
dec
sub
mov
divb
sahf
out
ret
ret
or
adc
popa
repz
jmp
cmp
xchg
mov
mov
mov
js
push
mov
mov
arpl
mov
mov
in
jno
jns
mov
xor
imul
jmp
cmpsl
jecxz
nop
mov
hlt
test
sahf
and
fists
cmp
cmp
in
imul
xor
sbb
jns
cmp
dec
ss
push
clc
sbb
cmp
imul
mov
xor
insb
fmuls
imul
je
shl
cmp
mov
ss
jne
scas
mov
cli
mov
jmp
and
cld
mov
hlt
mov
jae
push
and
push
mov
sbb
xor
cmp
jo
pop
stos
ds
and
clc
xor
jge
inc
inc
jl
mov
mov
jecxz
imul
inc
ja
inc
and
cmp
push
stc
cli
aas
push
jge
out
js
sbb
lcall
arpl
and
divb
icebp
orb
out
cmp
cld
mov
jmp
jecxz
addr16
lods
cmpl
mov
mov
xor
aaa
in
mov
in
xchg
out
xchg
mov
jno
mov
imull
loop
jecxz
scas
out
loop
insb
mov
xor
mov
daa
call
jb
popf
dec
movsl
xor
nop
cli
cmp
scas
jmp
or
jl
cmp
sub
hlt
scas
mov
xor
fdivrs
and
loopne
repz
jno
aad
mov
das
xor
and
mov
repnz
imul
aam
repz
sub
ljmp
xor
jp
in
loopne
jns
cmp
pushf
mov
jae
std
ja
xor
sbb
repz
pop
ds
loop
sub
mov
add
lock
cmp
int3
rolb
in
jl
test
and
call
test
test
lods
out
mov
and
lock
lahf
lock
icebp
cs
cs
xor
scas
notb
fwait
mov
test
aas
xor
xchg
fs
xor
test
das
mov
movsl
fs
mov
incb
mov
aas
mov
mov
lcall
clc
fcoms
mov
sbb
out
xchg
test
test
xor
repz
imul
add
lods
mov
adc
pushf
stc
pushf
insb
xor
mov
jb
push
mov
mov
jo
lret
mov
lods
cmpl
mov
mov
hlt
mov
mov
movsb
push
xchg
repz
xchg
cmp
cli
cmc
popa
imul
icebp
movsb
hlt
mov
xor
ss
ret
push
xor
mov
arpl
test
dec
stos
cltd
stos
cld
adc
ds
pusha
clc
cmp
scas
mov
cmp
pop
test
ja
pusha
mov
push
pop
pop
jmp
test
mov
mov
xor
mov
stos
jl
mov
sbb
mov
add
cmp
xchg
fdivp
xchg
arpl
add
jo
dec
popf
hlt
lods
xor
nop
les
repz
test
jae
sbb
pop
in
push
lods
stos
out
cli
je
pop
xor
sbb
pushl
js
mov
mov
test
idiv
jmp
test
adcb
add
ss
mov
jp
imul
out
lock
add
pop
mov
cmp
inc
mov
cmp
add
lds
sub
pop
mov
mov
out
jns
test
mov
repz
cmp
jno
outsb
lock
pop
or
daa
aas
push
jmp
cmp
push
mov
aaa
test
call
adc
cld
dec
xchg
sub
aas
jae
repnz
xchg
xchg
xchg
nop
or
divl
ss
std
imul
cli
and
mov
xor
sbb
sub
jg
mov
and
mov
and
stos
xor
ds
and
loop
mov
jle
test
cmp
cld
cmp
mov
mov
jp
push
mov
jns
fdiv
popf
jae
mov
xlat
jno
mov
incb
mov
in
jmp
inc
aas
insb
and
mov
and
xorl
mov
fs
xchg
icebp
xchg
jl
sbb
jmp
push
cmp
push
in
mov
mov
out
js
cli
stc
scas
inc
mov
cwtl
mov
mov
je
sub
mov
arpl
mov
lahf
sbb
mov
cmp
ss
dec
xor
js
ss
sub
imul
and
inc
wrmsr
fbstp
pop
inc
ds
fmuls
cmp
jecxz
shlb
mov
lea
mov
inc
mov
cld
ljmp
xor
lock
jae
idiv
out
jl
push
pop
fisubs
sub
inc
movsb
mov
jae
xor
lods
test
imul
cmp
jbe
rolb
sbb
iret
rcl
repz
lcall
and
fcoms
mov
mov
hlt
loope
sub
test
xor
gs
or
mov
sub
mov
adc
jmp
hlt
mov
mov
scas
push
mov
sbb
pop
sbb
adc
inc
mov
jl
and
sub
pop
lods
or
sub
movsl
hlt
jmp
mov
stos
mov
sti
fdivrs
insb
pop
test
cmp
xlat
arpl
fchs
aaa
aas
jno
mov
addr16
jmp
mov
xchg
sub
pop
mov
lods
stos
cld
cmp
repz
xchg
lods
xchg
mov
in
mov
imul
adcb
aaa
push
adc
inc
sbb
je
stc
test
push
stos
mov
xor
fcomps
loopne
xor
cmp
mov
stos
pop
add
cmc
sbb
scas
bnd
fisubrs
fildll
mov
cmpsl
pop
ja
sub
stc
cmp
mov
xor
jae
mov
mov
stos
xchg
std
aas
or
sub
mov
aaa
mov
loop
xor
scas
cld
movsl
and
jp
ljmp
jecxz
jmp
jg
cli
mov
xchg
das
ds
push
daa
hlt
sub
push
xchg
shl
mov
ds
dec
pusha
pop
push
aas
and
leave
sub
cmp
sarb
icebp
cld
cmp
jno
stos
sahf
jg
jno
mov
xchg
aaa
fisttpll
js
stos
mov
and
sahf
stos
mov
movsl
in
mov
jnp
fucom
cmp
fimull
cld
lods
shlb
hlt
cmp
xor
notl
mov
and
outsl
imul
jns
lods
jnp
test
mov
mov
pop
xor
add
jb
mov
clc
jp
imull
jl
lahf
in
mov
ljmp
mov
fnstsw
cmpsl
das
or
mov
movsl
jb
sub
cmpb
add
jo
cmp
sti
in
testb
pop
push
and
test
xlat
popa
inc
into
mov
jl
scas
and
xor
mov
in
nop
cmp
mov
mov
xor
pushl
imul
mov
ss
jb
xchg
mov
jns
mov
push
sbb
push
arpl
mov
xchg
mov
cli
ja
mov
add
mov
mov
imul
jns
out
sar
popw
sub
fs
jnp
add
sbb
loop
in
jns
xor
mov
xor
add
mov
sub
stos
mov
call
std
and
sbb
or
cmp
mov
cld
imul
clc
and
jns
mov
hlt
clc
mov
and
mov
push
dec
mov
out
mov
adc
stos
mov
call
mov
sahf
gs
cli
pop
and
sub
mov
rolb
xor
xor
mov
mov
loopne
arpl
js
xor
lods
ret
cmp
mov
repnz
xchg
xlat
popa
mov
icebp
and
xor
mov
push
mov
or
adcb
jecxz
fwait
mov
mov
testb
mov
xor
add
mov
lock
xchg
cmp
lock
rolb
loop
jae
mov
mov
cmp
lcall
adc
js
in
xchg
hlt
ja
add
mov
xlat
cmp
test
cmpsl
sub
incl
negl
pop
lods
lods
hlt
jnp
loop
scas
add
clc
cmp
hlt
aaa
popa
test
repnz
ds
and
lods
pusha
cli
mov
sub
lcall
jb
in
and
inc
mov
addr16
js
add
mov
sub
sub
div
jmp
imull
shlb
or
mov
inc
mov
jmp
push
mov
stc
push
mov
xlat
dec
add
xor
mov
mov
mov
jae
aaa
xor
cmp
mov
ds
sti
or
hlt
insb
and
cmp
pushf
jecxz
mov
jle
add
jmp
xor
fstps
and
imul
fdiv
test
hlt
clc
stos
mov
mov
cmp
lods
fnsave
mov
out
aaa
mov
jmp
mov
add
js
mov
es
jp
mov
jb
lods
jle
mov
and
clc
mov
mov
aaa
xor
jno
insl
jns
sbb
pop
sub
out
adc
test
jae
imul
fs
cmp
cmp
mov
mov
idiv
pop
cmpsl
out
xor
push
jmp
cmp
cmp
xchg
pop
stos
and
bound
imul
lods
cmp
je
in
jl
hlt
js
ss
mov
icebp
lock
out
mov
cmp
xor
outsl
mov
lock
mov
outsl
xor
lcall
lods
xor
sbb
fs
mov
push
mov
loopne
push
cmp
mov
les
mov
fld1
iret
fidivs
ja
jge
std
imul
xor
mov
lcall
scas
mov
jecxz
jl
mov
insb
jo
stc
imul
stos
xor
pop
mov
jl
std
imul
xor
repnz
mov
mov
dec
lods
jp
mov
pop
adc
stc
lock
jl
mov
lods
cmp
mov
cli
inc
movsl
xor
push
mov
icebp
or
mov
xchg
pop
cmp
push
jb
je
mov
fs
cmpsb
lret
add
aaa
test
mov
mov
pop
jl
sub
ja
orl
and
mov
pop
lock
push
or
insb
cmp
sub
xchg
jge
arpl
and
adc
imul
adc
lret
mov
aaa
divl
in
arpl
push
jo
pop
inc
jg
sbb
enter
out
imul
das
andb
icebp
jl
js
jecxz
imul
adc
xor
add
pushf
jg
test
and
jns
shl
and
cli
mov
scas
mov
cmp
testb
mov
scas
cmp
mov
and
jo
leave
mov
test
jno
sbb
out
mov
cmpb
pop
mov
test
movsl
out
cmp
sahf
aam
push
loopne
mov
cmp
sub
cli
mov
ds
push
mov
fwait
call
aas
cmp
jp
iret
or
cmp
dec
mov
aaa
lcall
loope
jl
aad
mov
scas
das
repnz
and
cld
fsubl
mov
sub
pop
ds
jmp
jp
cmp
pusha
imul
insb
inc
lods
dec
repnz
loopne
js
mov
mov
mov
mov
leave
jg
aaa
lods
hlt
lock
mov
aas
scas
jbe
mov
and
inc
ret
mov
test
mov
and
stos
mov
aad
testl
fs
jns
inc
bound
stos
test
and
jo
arpl
cld
hlt
mov
cmp
mov
clc
mov
and
sub
aaa
jecxz
mov
cltd
mov
jb
cwtl
inc
xor
and
jl
pop
jg
mov
lods
add
out
xor
clc
mov
mov
sbb
sub
xbegin
xor
cld
cmp
cmpsl
mov
sbb
mov
xchg
and
test
sub
and
inc
sbb
push
xchg
mov
pop
jl
aaa
xlat
test
mov
imul
cmpl
xor
xor
js
cmpsb
cs
lods
jl
hlt
inc
cmpsl
pushf
mov
mov
push
pushf
mov
sub
jb
pushl
arpl
mov
cmp
xor
lock
test
lock
mov
and
jp
mov
sub
out
cmpb
and
popa
sub
dec
push
js
and
shll
push
cmp
stc
xor
sti
xchg
in
repnz
push
std
jne
addr16
icebp
pop
lahf
jae
cs
cmp
rcl
jno
pushl
fidivrs
arpl
ret
daa
repz
call
fcoml
inc
pop
or
scas
mov
mov
inc
mov
test
movsl
imul
pop
mov
mov
xchg
dec
sbb
adc
mov
jp
jo
cli
fwait
ret
aad
mov
push
adc
subb
mov
xchg
icebp
addr16
jp
fdiv
js
pop
inc
mov
cld
test
fnstsw
push
in
or
scas
cmp
inc
push
push
loope
negb
ja
jbe
and
pop
pushf
loop
cld
icebp
aaa
pushf
cmp
mov
and
jb
xor
mov
mov
out
aaa
cmpsl
mov
stos
jl
shr
mov
scas
lods
mov
stc
jg
jp
call
hlt
jae
lods
fcomip
sbb
mov
lods
stos
cmp
jg
push
imul
in
stc
mov
jae
mov
cli
and
jecxz
lods
cmp
addr16
mov
xchg
insb
test
cmp
clc
idivl
xor
mov
mov
lock
addr16
shr
mov
inc
loopne
js
ss
mov
pop
pusha
stos
idivb
jecxz
mov
jo
mov
jno
out
incb
mov
lock
push
data16
imulb
out
inc
stc
fsubr
pop
xchg
nop
cmp
sub
ja
mov
jecxz
mov
xor
test
lods
mov
xchg
cmp
repnz
add
mov
pop
insl
mov
add
xor
sub
clc
jecxz
jge
addr16
insb
aaa
cmp
mov
out
outsb
mov
cld
jo
sub
push
push
push
enter
imulb
mov
jg
push
mov
mov
clc
loop
popa
call
aas
xlat
and
cli
mov
pop
scas
add
cmp
out
push
mov
inc
lods
js
sbb
scas
icebp
stos
sbbb
mov
jl
and
repnz
or
stos
add
lahf
mov
fisubl
imul
xchg
scas
mov
lea
and
js
insb
jae
mov
sbb
mull
ss
loop
inc
push
cld
jae
mov
imul
cmc
movsl
ja
in
aas
fs
jecxz
icebp
jno
nop
cld
stc
mov
mov
mov
ja
cmp
sbb
push
je
repnz
mov
hlt
cli
mov
sbb
mov
iret
cld
mov
dec
cmp
jns
xchg
push
adc
mov
jmp
in
les
sub
sbb
outsl
jno
mov
mov
xor
sbb
mov
jge
arpl
sbb
icebp
mov
xor
adc
test
incb
mov
int
and
imul
repz
ds
clc
ss
adc
and
je
sbb
andb
lods
inc
xor
jb
arpl
lods
dec
hlt
ja
adc
sbb
aam
mov
xor
jecxz
mov
xor
cwtl
xor
lods
mov
enter
scas
cld
xchg
clc
cmp
mov
fisubrs
pop
mov
jb
imul
loopne
out
mov
cmpsl
divl
mov
sub
jg
repnz
cmp
lods
sub
and
mov
movsl
pop
or
arpl
test
xchg
and
cmp
xchg
jmp
mov
in
hlt
mov
xchg
ljmp
imul
daa
nop
aaa
in
jmp
ds
mov
mull
xor
cmpsl
cmp
fwait
test
ss
cmp
cmp
add
lock
cmpsl
lods
sub
xchg
push
scas
lds
mov
mov
add
mov
out
je
lret
mov
and
scas
test
push
in
xchg
jg
sarb
cmpsl
mov
add
cmp
clc
dec
idivl
imul
repnz
in
stos
aaa
cmp
mov
lock
test
hlt
ds
and
sbb
mov
or
ss
popl
xor
pop
stc
mov
xor
jnp
push
test
pop
in
or
and
xor
cmp
nop
aaa
mov
mov
add
mov
push
outsl
mov
mov
jl
ljmp
stos
mov
jmp
ja
bound
in
cmp
mov
push
scas
mov
pop
loopne
jb
cmp
lods
cmpsl
jg
mov
imul
xor
cmpb
popa
jno
pop
dec
iret
pusha
lods
imul
push
xlat
xor
and
stos
sub
dec
jo
sub
xor
add
lods
mov
fidivl
test
cmp
jb
mov
in
xor
lock
or
add
clc
int3
cmpsb
push
push
push
inc
lcall
dec
cmp
test
pop
adc
scas
in
push
stos
inc
rcr
mov
cmc
scas
jmp
incb
jo
jae
or
negb
inc
pop
hlt
xor
icebp
pop
leave
jo
cmpsl
mov
xchg
add
jg
ljmp
adc
jmp
mov
jno
jne
push
push
mov
js
jecxz
cmp
sbb
insb
cmpsl
xchg
arpl
xchg
jae
mov
bound
stos
mov
bnd
jg
shll
shlb
xchg
push
outsl
xor
jo
rcrb
negl
lods
test
js
jl
mov
cli
mov
add
cld
cld
sahf
lods
addr16
xor
repz
arpl
mov
testl
repz
cmp
sub
rcrb
mov
mov
mov
cmp
imul
clc
ljmp
mov
jo
hlt
aaa
repz
push
mov
repnz
in
mov
push
sub
cmc
out
add
push
mulb
push
aas
sar
test
out
sbb
cld
shr
iret
lods
daa
scas
cltd
mov
push
xor
pop
loop
sub
cli
movsl
sub
cltd
imul
jae
lock
push
sub
bound
mov
ja
xchg
mov
btc
lods
mov
xor
ds
and
imul
call
lea
ja
hlt
jo
mov
inc
pop
imul
scas
mov
daa
pushl
sub
mov
xchg
loop
mov
sbb
loopne
aas
cmp
pop
xchg
mov
nop
xor
cmp
hlt
jp
and
aaa
jns
cmp
repnz
scas
stc
mov
xor
divb
daa
subb
das
add
sbb
ds
mov
repz
stc
out
jge
xor
pop
js
gs
mov
fs
dec
lods
mov
in
jbe
int
inc
mov
mov
mov
xchg
mov
mov
mov
lds
jecxz
popa
test
or
pop
and
mov
test
fisubrl
mov
ss
push
jmp
jecxz
or
mov
out
sbb
js
or
lods
pop
mov
jle
cmp
mov
pop
jl
mov
jb
mov
push
xchg
jmp
mov
jecxz
stos
test
not
arpl
mov
loopne
cmp
std
clc
mov
jb
mov
jo
out
mov
push
out
js
bnd
mov
out
jb
aaa
cmp
xor
outsb
jl
popf
lcall
mov
imul
mov
mov
negl
pop
fbld
cmp
arpl
pop
js
xlat
call
cmp
mov
add
call
pusha
and
jo
inc
dec
cmp
cmp
jmp
aas
loope
hlt
mov
mov
test
mov
mov
sub
es
aaa
adc
sub
jb
divl
stos
mov
repz
dec
ret
call
push
arpl
clc
pop
in
lock
cmp
jno
mov
jecxz
sbb
scas
and
xor
sbb
mov
mov
jp
cli
repz
scas
xchg
mov
addr16
divl
jp
sbb
xchg
and
jb
jnp
imul
aaa
testb
mov
nop
mov
mov
mov
xor
push
lods
jns
repz
mul
cmp
jb
insb
imul
mov
mov
es
mul
xor
icebp
das
cmp
xor
sub
jae
cmp
and
loopne
jo
mov
jp
imul
repnz
xor
rorb
xor
jb
mov
jmp
inc
clc
dec
sar
iret
adc
mov
stos
ja
shll
mov
ds
stc
add
mov
cmp
cmp
jo
lret
test
mov
mov
in
ja
stc
movsb
imul
sub
cmp
jb,pt
bound
ret
adc
lea
in
jno
and
clc
add
cmp
stos
lods
mov
pop
jo
lock
xchg
mov
xor
mov
pop
xor
cmp
jmp
inc
pushf
push
scas
stos
jb
sub
pop
mov
adc
jnp
xchg
sub
xor
ss
or
jno
dec
and
addr16
xor
push
and
aaa
nop
adc
aas
loop
cli
cmp
cmp
adc
jp
test
add
cs
ds
and
das
aas
push
cmpsl
loope
push
xor
das
mov
jg
mov
stos
in
cli
mov
mov
jp
xor
jo
adc
inc
rcll
jb
cwtl
andb
xor
mov
pop
xor
sub
mov
jmp
sbb
mov
decl
pusha
mov
imul
negl
or
lock
xchg
mov
nop
repnz
mov
ja
mov
js
adc
mov
lods
jno
testl
mov
mov
jecxz
pop
mov
push
xor
mov
hlt
or
js
dec
decl
pop
test
stc
mov
shll
jno
out
cld
imul
std
mov
addl
xchg
fs
mov
stos
shlb
test
jmp
fnstcw
lock
xor
dec
mov
cli
stc
sbb
jno
mov
mov
popa
imul
cmp
cmp
dec
aaa
mov
add
mov
jecxz
ds
mov
cmpsl
fildll
mov
mov
loopne
scas
ja
jg
xor
jle
jae
jno
fldenv
in
pop
mov
push
and
mov
dec
sbb
mov
mov
jg
hlt
dec
pop
and
sahf
cmp
mov
in
or
jb
stc
mov
mov
cmp
ja
push
mov
jl
add
mov
xor
mov
mov
pop
lods
mov
fbld
loop
mov
inc
jecxz
mov
fsubs
lods
lods
xor
xor
jl
xchg
sbb
fisubs
xor
jno
jb
aaa
imul
sarl
push
sub
ret
scas
jae
cli
idiv
stc
insl
ja
jge
xor
imul
jp
leave
arpl
aaa
mov
mov
mov
je
std
insl
sub
hlt
fsubrs
jle
inc
jmp
sbb
jb
mov
push
in
sub
das
mov
mov
mov
xor
sarb
fbstp
dec
imulb
dec
aaa
xchg
add
and
xchg
fnstenvs
fs
and
out
cmp
mov
jns
stc
adc
call
or
xchg
sub
arpl
adc
icebp
addb
ja
mov
out
lock
mov
test
jb
scas
int
sbb
test
je
shrb
out
xchg
repz
fdivrs
jns
sahf
idivb
hlt
inc
pop
and
jno
push
ss
clc
jnp
test
ljmp
mov
jb
jg
jno
jmp
adc
cmp
or
mov
stos
imull
jmp
shrl
mov
mov
mov
mov
lods
ss
ljmp
add
mov
pop
nop
xchg
xor
or
test
cmp
popa
popa
insb
or
jecxz
loopne
xor
xor
js
pop
jae
mov
push
pusha
cmp
lock
jle
loope
jae
jb
in
icebp
mov
and
scas
jg
cld
jo
dec
in
jmp
call
cmpsl
mov
cwtl
bound
sub
roll
aaa
inc
in
and
cld
mov
and
imull
sub
and
jg
imulb
and
xor
cmp
repnz
call
sahf
in
adc
cmp
cmp
nop
and
imul
in
cli
push
mov
mov
test
pusha
mov
jno
adc
and
cmp
das
mov
out
mov
in
cld
sbb
scas
lea
arpl
and
and
mov
scas
sub
fs
cmpsl
mov
out
ja
inc
cld
idivl
push
sub
jb
adc
mov
scas
jno
xchg
aaa
xchg
push
sarb
mov
xchg
cli
xor
rclb
scas
lcall
sahf
adc
xor
jl
fwait
arpl
test
outsb
mov
cmpsb
xor
mov
sub
jl
das
cmp
ss
lea
jo
mov
mov
cld
mov
test
out
mov
mov
arpl
into
adcb
jns
jmp
jmp
aaa
aaa
js
xor
jae
jo
in
insb
ss
shll
out
popf
aaa
mov
mov
lock
mov
insb
cltd
pop
cld
inc
mov
or
enter
scas
jo
sub
mov
mov
mov
and
mov
and
mov
clc
mov
in
inc
jno
js
loopne
xor
cmp
scas
mov
enter
clc
mov
add
jle
or
xchg
clc
mov
rorb
cmp
mov
sub
mov
out
imul
cmp
inc
and
cmpb
adc
cmp
rclb
mov
popa
lock
bnd
mov
idivb
or
mov
inc
xlat
mov
mov
mov
push
xor
idivl
xorl
cmp
imul
cmp
jl
daa
aaa
lods
mov
sbb
xor
and
repnz
mov
sub
idivb
jp
jg
je
test
push
jb
repnz
imul
xor
mov
loopne
sub
ja
fcom
jno
pusha
lret
mov
add
lock
sbb
icebp
orb
xor
ds
xor
lock
xchg
std
repnz
mov
hlt
cld
lock
stos
mov
imul
sbb
jl
or
idivl
je
pop
cmpsb
in
stos
stos
xor
mov
xchg
gs
mov
xor
mov
mov
mov
sub
mov
pushl
cmp
pop
std
das
stos
lods
xchg
inc
imul
sub
lock
push
cltd
push
das
push
adc
pop
jne
cmp
lock
test
jae
aaa
xchg
sbb
repz
test
ss
jo
cmp
xrstors
push
div
loope
sahf
mov
imul
mov
jb
fadds
test
mov
mov
jb
call
movsl
jno
sub
clc
repnz
cli
bound
mov
jae
dec
icebp
xchg
test
xor
xchg
mov
cmp
arpl
leave
xchg
mov
sub
ss
ljmp
in
sbb
xor
lock
xor
out
insb
jl
mov
popf
mov
out
mov
scas
scas
clc
stos
test
jno
gs
sarb
mov
js
push
call
stos
test
and
mov
dec
mov
xchg
jno
mov
icebp
loope
je
xor
test
jl
cs
enter
imul
jle
sbb
fs
jae
pop
shlb
cmp
inc
mov
mov
in
mov
movsb
repnz
push
cli
clc
mov
adc
and
sbb
cltd
lds
add
insb
xor
jns
jno
xor
lods
scas
and
mov
mov
scas
xor
add
xor
cmp
aas
out
mov
jg
out
stos
adc
jb
sub
and
mov
xchg
scas
mov
sub
mov
mov
insl
out
mov
jp
test
mov
mov
test
sbb
icebp
ljmp
repnz
mov
jg
sahf
dec
cli
push
inc
insb
arpl
ds
lret
cld
xchg
stos
xchg
or
xor
sub
sbb
mov
mov
scas
pop
in
outsl
jo
js
mov
jg
sub
pusha
jmp
mov
aaa
stc
imul
cmp
cmp
mov
loopne
clc
jecxz
sub
imul
test
mov
fistpll
adc
ror
xchg
xor
xor
imul
sbb
and
mov
popf
mov
mull
divb
out
jecxz
pop
inc
clc
rolb
lcall
cmp
xor
fdivrs
adc
fs
decb
sbb
insb
movsl
sbb
cmp
xor
jmp
push
imul
mov
nop
add
clc
imul
mov
sub
xor
bound
aas
push
xchg
cmp
sub
jo
mov
stc
ret
test
sub
fwait
sbbl
sbb
lcall
xor
pusha
pusha
lods
stos
int
mov
xor
push
inc
out
jmp
ret
aas
sarb
push
mov
jae
js
jnp
insl
add
insb
movsl
xlat
lea
rcrl
icebp
aas
ljmp
mov
cli
ja
ds
lock
sub
jmp
mov
dec
sbb
jo
inc
mov
and
mov
xchg
jmp
ljmp
mov
add
test
jp
outsl
test
sbb
lock
pop
mov
test
stos
repnz
lahf
mov
mov
mov
sub
cmp
jnp
lods
adc
test
cli
jp
subl
mov
sub
jno
sub
or
sti
pushf
mov
push
je
shlb
sub
dec
push
cwtl
add
imul
xor
aaa
loop
mov
xorl
ds
cld
mov
out
jl
and
movsl
gs
push
aaa
mov
stos
jmp
cmp
mov
push
shrb
xor
sub
popa
xor
lods
aaa
iret
sub
inc
adc
lock
divl
in
pop
pop
adc
repnz
jns
nop
inc
mov
das
repz
and
mov
adcb
repnz
mov
dec
scas
repz
in
imul
jno
movsl
xor
push
or
pusha
mov
je
cld
ret
loopne
xor
xor
ja
push
ds
mov
jae
jo
xor
jns
xchg
test
gs
jg
mov
popa
cmpsl
lahf
jmp
xchg
gs
addr16
idiv
cwtl
cld
lock
fmulp
repz
mov
outsb
nop
inc
lods
cmp
sar
clc
cmp
jg
loop
mov
mov
arpl
mov
dec
cli
insb
je
cmp
repz
jns
aaa
or
mov
mov
inc
repnz
xor
and
rcl
mov
mov
stos
jmp
fadds
xchg
sbb
rcl
mov
dec
lds
cld
jae
mov
loop
xor
insb
mov
mov
ja
jge
insb
inc
std
mov
in
out
jl
pop
push
imul
stos
popf
dec
push
add
into
mov
and
push
mov
mov
lods
mov
cmp
jp
mov
movsb
into
jecxz
mov
mov
jge
add
mov
out
mov
out
in
repnz
ss
add
and
test
fucomip
xchg
stos
testl
mov
aas
xchg
and
sub
adc
imul
pop
popa
repz
pop
cmp
sub
idivb
xchg
pop
jg
mov
imull
imul
das
cmp
or
adc
je
imul
stos
add
mov
sbb
fwait
cmp
cmpl
arpl
lret
cld
mov
mov
sub
enter
cli
fisubrs
pop
xor
lock
fdivl
test
hlt
sarb
insb
mov
xor
and
lock
add
jecxz
pop
insl
and
cmp
xor
cld
mov
mov
and
lret
sbb
rcrb
mov
xor
fidivl
xchg
sub
mov
clc
jae
mov
test
mov
push
mov
jl
sub
mov
sub
rcrl
out
xchg
inc
mov
mov
mov
mov
xchg
cmp
mov
scas
dec
mov
jmp
pushf
lods
repz
cmp
push
aaa
mov
mov
out
test
cs
fdivp
push
loopne
arpl
jo
mov
dec
and
negb
lock
mov
test
mov
stos
jo
scas
jno
or
jl
lea
and
jb
cltd
cmp
loop
lock
adc
jb
xchg
aaa
scas
test
stos
scas
mov
adc
ss
mov
insb
sahf
fsubs
mov
icebp
inc
in
test
jns
and
jo
jg
xor
and
push
in
push
add
inc
jb
xor
sub
and
cmp
in
aas
cld
inc
mov
mov
cltd
stc
fwait
repz
andb
cmpl
mov
cmp
lods
jecxz
test
imul
insb
jb
mov
gs
jl
stos
or
xchg
imul
aaa
cld
mov
mov
sbb
jno
stos
or
mov
jns
das
repz
sbb
cltd
mov
mov
pop
mov
mov
push
inc
in
lods
add
mov
clc
and
shlb
sub
xor
aaa
inc
icebp
cmpsl
dec
mov
cmp
dec
imul
cmp
cmp
mov
repz
jmp
scas
orb
aas
mov
bound
dec
je
call
subl
jns
sbb
clc
jno
addr16
xlat
fldl
mov
es
mov
repnz
sarb
mov
hlt
add
out
mov
xor
jo
mov
and
jno,pt
push
add
lret
shlb
in
lods
ss
data16
xor
aaa
add
cli
mov
xor
negl
jl
shrl
adc
div
daa
lcall
and
lea
jo
mov
insb
scas
aas
mov
inc
jecxz
cli
cwtl
adc
sbb
mov
pushf
mov
mov
ja
loop
mov
repz
mov
das
repnz
loopne
jno
push
shl
test
jmp
les
xor
and
or
jp,pt
jl
xor
or
cld
in
repz
aaa
mov
imul
sbb
lea
imull
jg
cmp
xor
xchg
jae
cmp
dec
js
repz
cli
out
sub
repnz
stos
jno
adc
pop
mov
inc
cmp
xlat
aas
cld
ret
movl
aaa
mulb
xor
sub
arpl
cwtl
lock
mov
rcl
insb
cld
sub
addr16
xor
xchg
adc
scas
fucomi
loopne
mov
xor
repz
jns
cmp
inc
mov
lock
mov
mov
test
scas
lock
ljmp
scas
and
aaa
and
xchg
and
clc
mov
jl
mov
stos
insb
mov
jo
lahf
je
leave
ja
mov
and
ds
scas
mov
lock
mov
fnstcw
cmp
hlt
mov
mov
gs
stos
xchg
mov
mov
mov
cmp
outsb
mull
and
loop
xor
into
stc
jns
mov
jb
add
and
in
mull
push
mov
xor
mov
outsb
jae
fmuls
pop
aaa
daa
inc
jb
cmpsl
mov
aas
sub
arpl
pushf
dec
mov
push
lret
add
insb
mov
cmp
push
stos
mov
aas
add
icebp
out
sub
nop
push
repnz
add
mov
mov
mov
jg
repz
xchg
sub
mov
jne
jl
mov
fcompl
cli
mov
mov
mov
jge
push
sbb
push
testb
mov
xor
sbb
xor
aad
push
clc
je
test
js
mov
mov
call
jl
lods
push
xor
mov
test
loope
cld
xor
daa
mov
lods
mov
outsl
xor
cmp
lcall
bound
out
jp
adc
cmp
loop
and
aaa
ss
mov
add
cmp
jno
sbb
outsb
and
loop
out
test
pushl
andb
repnz
cmp
arpl
push
and
sub
lods
leave
jns
mov
jp
cmp
testl
lock
aaa
mov
bnd
out
mov
jb
stos
ret
shlb
cli
jl
divb
jae
imul
shlb
cs
dec
jb
aaa
xchg
out
pop
sbb
pop
jo
cmp
je
or
rcrb
idiv
and
adc
imul
mov
in
clc
mov
mov
xor
aas
xor
aaa
and
pop
sub
pop
out
jb
jmp
lcall
cmp
mov
pop
loop
jo
test
shlb
mov
push
jbe
mov
divl
clc
cmpsl
stos
clc
push
in
dec
call
cld
shrb
lock
loop
daa
mov
mov
pushl
nop
sarl
push
mov
ss
mov
call
aas
add
lahf
jns
push
out
mov
xor
jl
icebp
mov
cmp
and
cmpsl
ret
ss
addb
push
mov
mov
mov
aas
mov
mov
sahf
leave
mov
and
mov
test
cli
js
and
imul
cmc
push
stos
ret
mov
or
gs
cmp
add
stos
xor
outsb
hlt
out
pop
outsb
sti
ja
out
jl
inc
mov
arpl
push
jecxz
shl
xchg
ja
enter
add
push
dec
add
clc
and
popa
fs
dec
mov
hlt
adc
inc
sub
dec
xchg
xor
loop
imul
mov
jmp
mov
fnstsw
sub
lods
repz
mov
aas
cmp
movl
int
insb
xor
mov
je
jbe
cld
sub
or
pop
mov
push
mov
add
xor
xchg
fwait
mov
mov
bound
add
mov
in
mov
ds
lcall
and
mov
gs
aaa
ret
in
imul
int3
mov
xlat
inc
lahf
mov
pop
sub
sub
or
mov
jmp
sbbb
mov
mov
jp
scas
sahf
mov
divb
adc
mov
mov
mov
je
imul
arpl
mov
imul
in
aaa
xor
xor
mov
jae
xor
xor
jo
fidivrl
mov
test
insl
stos
notl
sub
xlat
icebp
lock
lods
xor
hlt
stc
add
push
adc
imul
xchg
nop
in
mov
mov
and
lock
jae
jno
repz
aas
inc
clc
bound
lods
jo
sahf
sub
and
mov
mov
clc
pushl
cmp
inc
js
or
xor
xlat
and
clc
push
push
and
or
mov
stos
push
mov
dec
mov
and
test
scas
jns,pt
mov
js
pop
test
mov
lret
call
cmp
cmp
cmp
jp
test
icebp
push
jb
mov
jecxz
cmp
sbb
cld
xchg
jecxz
mov
xor
divl
pushf
jg
lds
clc
divb
in
nop
test
mov
clc
cmpsl
mov
inc
jl
ss
loope
stc
xor
lahf
jo
xor
mov
cmp
mov
jge
adc
cld
cli
push
mov
in
ret
insb
popf
scas
outsl
cmp
jns
jmp
cmp
lods
mov
pop
test
cmpsl
ss
int3
mov
pop
jb
mov
mov
repz
lahf
loop
clc
dec
jg
stc
hlt
js
mov
lods
xor
xor
cmp
push
jmp
mov
test
cmp
imul
out
push
aad
lahf
push
mov
sub
mov
hlt
mov
xor
jp
lock
repnz
cmp
mulb
xor
xor
clc
pop
scas
cmpsl
hlt
and
xchg
lock
xor
mov
test
pop
mov
je
push
addr16
sub
xchg
add
adc
loop
jb
mov
repnz
shl
mov
jno
fdivrp
cld
and
hlt
cli
cmp
stos
jl
das
cmp
jp
sub
imulb
scas
mov
cltd
stos
mov
inc
aaa
mov
inc
adc
setge
lock
into
cmp
imul
sub
lock
hlt
fdiv
mov
repnz
mov
jl
mov
movsl
xor
cmp
testl
adc
mov
xor
ljmp
fdivl
xchg
jg
jl
jp
out
push
xor
and
int3
scas
mov
movsl
repz
je
outsl
lcall
jg
das
lods
cltd
mov
cli
stos
lahf
test
clc
mov
pop
cld
jl
jge
loop
xor
pushl
xor
pop
sub
gs
push
inc
int3
cwtl
ss
mov
ja
test
mov
aaa
aas
dec
xor
sub
std
in
and
loope
jb
stos
aam
pop
aad
les
mov
in
aas
sub
mov
daa
mov
test
inc
xor
repz
or
pop
insl
movsb
movsl
push
hlt
arpl
loope
mov
mov
pop
js
inc
stc
cs
stos
xor
rep
outsb
loopne
jo
xor
call
pop
mov
orb
popf
jno
aam
mov
cmp
lods
ja
out
arpl
xchg
jae
cli
cld
fidivs
xor
mov
xchg
rcl
je
repnz
loop
and
jecxz
imul
jo
mov
push
cs
xchg
pop
gs
pop
mov
xor
pushf
out
insl
jg
pop
cltd
neg
cmp
scas
lds
sub
xchg
ss
outsl
cmp
mov
inc
pop
scas
xor
mov
jno
test
push
mov
dec
adc
mov
pushl
xchg
xchg
sbb
push
xor
sub
cmp
test
mov
xchg
and
and
popf
mov
insl
and
es
mov
jl
or
inc
sbb
lock
imulb
mov
sbb
enter
pop
cld
jg
pop
mov
ds
sub
scas
popa
bound
pop
jp
mov
clc
xor
sbb
in
and
jno
stos
ffreep
loop
daa
cld
rolb
mov
push
shlb
loop
xor
hlt
jno
nop
push
cld
aaa
lock
cmp
scas
push
and
jl
scas
ja
aaa
arpl
jb
jp
andl
jecxz
imul
dec
mov
cmp
and
cmp
in
imul
dec
mov
out
je
repnz
xor
and
inc
pop
jae
mov
insb
mov
jno
nop
jno
mov
lahf
lock
dec
and
add
insb
hlt
bnd
mov
sub
xor
mov
mov
sub
in
std
cmp
inc
pusha
jp
cmp
or
out
stos
pushf
xchg
stc
mov
mov
nop
in
jl
hlt
mov
imul
daa
stos
push
and
mov
mov
mov
mov
loop
aas
clc
pusha
xchg
arpl
lods
adc
pushf
and
mov
sbb
jecxz
mov
fs
jns
add
jo
clc
imul
loopne
mov
mov
xchg
pushl
out
mov
push
popf
mov
jno
loope
sub
mov
mov
ss
cmpb
icebp
lods
hlt
incl
mov
xlat
push
lea
mov
mov
outsb
repz
push
push
iret
mov
rclb
icebp
push
mov
mov
add
pop
xor
sbb
popa
fistpl
mov
jb
jo
and
icebp
bound
out
mov
cmpsl
push
jns
inc
mov
mov
cmp
imul
scas
aas
mov
push
in
cli
pop
ret
andb
insb
mov
stos
mov
jae
mov
ds
jb
cmp
xor
insb
icebp
cmp
test
scas
xor
xchg
popf
mov
aas
dec
jae,pt
cmp
addr16
fwait
je
jl
jnp
imul
sbb
and
imul
hlt
jecxz
pop
rcrb
xor
or
cmpsl
test
arpl
loope
imul
pushf
stos
sbb
xor
cmpsl
in
repz
cmp
mov
lret
stos
arpl
xor
je
pop
call
in
or
stos
add
jns
popf
xor
xor
mov
test
fdivrp
xchg
test
ss
mov
push
sbb
in
inc
scas
lock
pop
xchg
xor
movsl
mov
dec
std
xchg
out
xchg
mov
or
mov
test
pop
mov
and
addr16
out
lret
push
adc
xor
xor
or
sbb
int3
das
xchg
pop
mov
pop
or
push
push
bound
xor
negl
out
jp
bound
pop
cmp
pushl
gs
test
jecxz
sub
xor
mov
sahf
and
icebp
mov
fsubr
cwtl
mov
test
hlt
xor
xor
popa
xlat
add
cmp
iret
jp
lods
mov
fisubl
icebp
xor
mov
jbe
bound
fwait
cmp
jge
mov
jo,pn
mov
cld
out
cld
mov
ss
xor
mov
hlt
out
xchg
cmp
push
xchg
cmp
ds
jno
xchg
add
and
sbb
popf
mov
or
cmp
aaa
rcr
stc
push
push
out
jecxz
in
add
jo
hlt
jg
js
test
cmpsb
insb
ds
cmp
mov
imul
aam
add
sub
sub
sbb
stc
mov
inc
adc
xor
jno
xor
cmp
cmp
idivl
outsb
rol
ss
xchg
cld
scas
scas
mov
add
lods
fwait
cmp
stc
push
movsl
and
imul
popa
movsb
mov
js
mov
mov
loop
xchg
dec
arpl
cltd
js
jge
pop
mov
mov
cmpsl
mov
loopne
mov
aas
xor
call
fwait
dec
jg
enter
pushf
fs
repnz
daa
adc
jp
mov
mov
jae
popf
shlb
test
cld
mov
jecxz
and
xor
in
xlat
cld
movsl
mov
cli
xchg
sub
sar
cld
cmpsl
push
enter
xchg
jns
insl
mov
test
shlb
out
repz
loopne
cmpsb
jns
jmp
xor
insl
push
mov
repnz
mov
stos
shll
jo
idivb
scas
jae
jns
nop
pop
insb
cmp
cmp
scas
scas
iret
out
arpl
ja
mov
lcall
sub
cld
mov
pop
test
addr16
jp
ss
hlt
sbb
mov
cli
sub
and
and
clc
rorb
mov
inc
and
jns
xor
sbb
clc
inc
jmp
and
xor
lods
cmp
repz
dec
pop
addr16
cli
cwtl
xor
roll
push
pusha
insb
jae
mov
pop
scas
lahf
sub
iret
in
lods
cld
mov
arpl
arpl
cmp
cmp
jne
mov
sbb
scas
in
loopne
cmp
mov
sbb
cmp
clc
sub
ss
inc
add
repz
loop
cmp
sbb
mov
test
jae
test
mov
xchg
xchg
and
jecxz
lock
sti
js
lods
jg
cmp
int
cltd
or
bnd
idivb
ds
cmp
cmp
test
jl
xor
popa
cli
mov
incb
out
stc
sub
js
je
jb
in
ds
sub
cmpsl
mov
mov
and
mov
sbb
je
popa
sub
icebp
ds
jno
decb
insb
mov
fildl
cmp
stos
adc
mov
enter
int
lock
jmp
popa
jbe
insb
ja
je
cmpl
scas
mov
shlb
add
inc
test
mov
xchg
sub
cltd
stc
loop
imul
repz
jmp
xchg
ljmp
divl
dec
enter
imul
sub
xor
mov
mov
in
cli
cmp
in
xorl
loop
aas
stc
jb
sub
jp
leave
test
sub
xor
imul
repz
xchg
mov
movsl
mov
lods
in
movl
push
xor
cmc
je
jmp
icebp
jg
mov
mov
dec
imul
sbb
push
mov
jecxz
cmp
and
sbb
mov
cmp
fcmovbe
cmp
in
test
mov
lds
pop
mov
scas
xchg
rorb
ds
bound
xchg
xchg
fidivrl
bound
mov
bound
sahf
xchg
das
cld
clc
add
scas
aas
cmp
xor
outsl
repnz
xor
imul
inc
pop
pop
or
subb
cld
push
mov
daa
int3
push
pop
clc
les
test
pop
bnd
sub
xchg
stos
add
jo
mov
call
xor
push
add
push
mov
xchg
xlat
gs
sbb
sub
movsl
clc
imul
jecxz
inc
std
imul
sub
jb
test
hlt
jmp
out
mov
sbb
mov
and
repz
nop
xor
jae
cld
clc
pop
outsb
rcrb
imulb
inc
push
insb
clc
aas
movsb
lock
lcall
cmp
orb
xor
inc
mov
lahf
lock
jge
mov
data16
cmp
arpl
mov
mov
or
add
mov
mov
mov
into
insb
test
sub
jecxz
jno
scas
cmpsb
out
and
test
sbb
sub
jmp
mov
mov
xor
mov
fwait
imulb
mov
cmp
test
stos
adc
mov
jmp
das
jecxz
sbb
mov
imul
pusha
jns
mov
push
adc
lods
xchg
scas
fsubrl
js
arpl
jns
mov
out
adc
loopne
stc
xor
ss
sbb
jmp
jno
sbb
sahf
mov
cmp
add
aas
push
iret
fdivs
lcall
and
and
arpl
hlt
sub
hlt
xchg
add
mov
sbb
xor
sahf
mov
xor
lods
and
arpl
outsl
test
mov
pushf
cmpb
stc
out
arpl
jecxz
jg
xchg
lock
jg
das
ss
int
sahf
xor
adc
scas
scas
scas
int
pop
scas
pop
movsb
add
sbb
xor
repz
jp
mov
mov
pop
je
mov
mov
mov
das
and
mov
push
xor
adc
mov
sarb
and
in
mov
jbe
and
out
imul
jno
jl
icebp
mov
xor
cmp
scas
sub
add
mov
pop
mov
jg
mov
xor
sarl
cli
sahf
cltd
in
nop
lahf
out
repz
aas
imul
ja
insb
imulb
add
mov
dec
hlt
hlt
cmpsl
adcl
xor
jmp
mov
js
jg
sbb
sbb
xor
pop
lock
out
jo
jp
mov
xchg
inc
scas
repnz
cld
xlat
lock
outsb
dec
sub
cli
or
stos
ss
xchg
or
mov
lcall
or
lods
dec
add
dec
mov
lcall
cmpsl
jbe
jae
test
jp
bound
lock
jo
in
incb
mov
jns
add
cmp
dec
cmp
aaa
lock
mov
mov
in
lock
mov
or
add
pusha
sbb
stc
xchg
cmp
jecxz
ss
scas
cmp
adc
lods
insb
mov
lret
sbb
and
cwtl
or
ss
int3
jns
push
xorl
adc
push
pushf
xor
repz
cli
jecxz
out
js
and
je
stos
notl
test
in
jno
xchg
repnz
ds
repz
jl
loope
jmp
in
pop
xor
mov
rolb
clc
xchg
ja
inc
loopne
sub
sub
mov
stc
iret
scas
je
out
std
mov
hlt
ja
adc
movsb
mov
mov
pop
jae
jns
jg
test
aaa
fs
outsl
push
mov
adc
and
mov
decb
sub
jecxz
sarb
ss
js
pop
mov
imul
jg
add
mov
cmp
mov
test
outsl
cld
fdiv
cld
test
cmp
inc
push
jo
inc
je
icebp
ljmp
addr16
out
cmpb
jmp
xchg
and
ljmp
test
push
cld
jecxz
xor
aas
jmp
cltd
xorl
sub
inc
cmp
aaa
rcrb
aam
cmp
sahf
fisubrl
in
aad
jne
stos
xchg
jl
mov
icebp
jle
xchg
imul
mov
ds
fcompl
jmp
lea
jno
mov
mov
mov
iret
ret
popf
test
imul
jmp
adc
cmp
jecxz
jmp
xor
xor
repnz
jmp
jae
cmp
mov
insb
cld
mov
adc
and
in
jb
stos
loopne
arpl
clc
std
add
fnstcw
test
movsl
mov
jl
jecxz
aas
mov
mull
fmull
and
mov
dec
mov
jecxz
push
push
scas
mov
lret
sub
call
jns
insb
in
setp
cmp
xor
mov
inc
sar
xor
jp
mov
stos
lds
in
push
mov
jecxz
scas
adc
sahf
push
mov
mov
adc
lcall
xor
je
cld
push
xor
fildl
mov
in
and
jno
inc
jmp
lds
add
sbb
icebp
insl
cli
add
xor
in
mov
clc
movsl
jp
xchg
outsb
and
call
imul
inc
out
repz
push
mov
cmp
xor
pushl
mov
test
mov
repnz
dec
insl
insb
xor
fstl
dec
nop
jnp
cmp
cmp
mov
idiv
xor
sarb
fwait
jns
mov
mov
mov
mov
imul
add
lods
xor
jl
xor
clc
jo
loop
xchg
and
jo
push
push
sarb
mov
mov
pushf
idiv
repz
mov
scas
jnp
jae
xor
or
aam
ss
push
sbb
mov
sub
imul
jmp
in
add
cmp
mov
scas
clc
sar
add
popa
or
arpl
idivl
lcall
push
jecxz
mov
pushf
sbb
test
mov
aam
fcoms
test
mov
insb
hlt
div
cmp
fs
sahf
jb
mov
mov
jg
jae
pop
and
in
lock
inc
cli
ss
repnz
push
xchg
loopne
fucomip
aaa
push
mov
jp
mov
out
lods
mov
aas
mov
add
imulb
test
jne
pop
fisubs
jg
mov
lock
arpl
js
mov
das
cmp
sub
ds
dec
dec
das
stos
jl
scas
out
mov
popa
aas
insb
jne
mov
jae
imul
xor
in
neg
xor
xlat
add
mov
adc
xchg
call
xor
mov
out
js
cmp
jns
sbb
cmp
jnp
jl
mov
loope
sub
and
inc
loopne
test
cmp
push
pop
popa
stc
clc
outsl
lods
hlt
sbb
jae
xchg
test
call
mov
xor
and
mov
xor
mov
test
push
mov
divl
xlat
rorb
jp
xchg
imul
movsb
repnz
in
call
jb
jns
imul
hlt
jl
mov
lret
je
dec
scas
pop
add
bound
xor
mov
pop
and
lea
fcomp
jae
lods
add
mov
js
int
xchg
push
pop
adc
imul
shll
jg
int3
sub
mov
loopne
aas
idivl
sub
pop
jo
add
jg
outsb
scas
arpl
in
das
mov
bound
mov
push
js
inc
cmp
aas
mov
in
sbb
mov
sub
push
adc
in
xchg
push
stos
clc
inc
xor
xor
lods
jo
and
jl
decl
xchg
or
clc
mov
cmp
add
je
loop
xor
cwtl
icebp
fwait
mov
mov
shlb
jb
adc
fidivrl
or
pop
cmc
movsl
int3
jb
cmp
inc
scas
repnz
and
jmp
outsb
aaa
mov
mov
repz
cli
mov
scas
clc
inc
mov
lods
jae
ss
fsubrl
mov
imul
js
arpl
xchg
pop
ss
cmpsl
fs
xlat
mov
in
scas
insb
mov
mov
inc
xor
push
xorl
arpl
movsl
ja
stc
paddusw
aam
aas
xchg
jmp
inc
jns
gs
jo
dec
adc
repnz
scas
sub
mov
outsl
mov
gs
sahf
mov
jb
xor
clc
or
loopne
arpl
xchg
jmp
and
or
jp
js
dec
jb
mov
ja
ret
mov
mov
in
divb
fwait
repz
mov
mov
mov
scas
jg
xchg
test
out
lock
jne
push
jb
cwtl
mov
xor
icebp
mov
mov
push
mov
mov
repz
aam
clc
jo
sub
cmp
jmp
sbb
push
sbb
ds
pushl
and
mov
imul
enter
aas
stos
xor
mov
aaa
inc
adc
loop
cld
mov
xchg
cs
movsl
scas
mov
out
lods
sub
push
icebp
clc
ss
jge
lods
in
or
lods
xlat
mov
push
mov
cmc
cmp
xchg
jb
jp
stos
cmp
pop
loopne
idivb
mov
cmp
mov
in
cs
js
out
fbstp
sahf
bound
fst
xor
mov
add
jmp
adc
xor
std
and
sub
test
hlt
icebp
mov
jl
sub
cmp
clc
xchg
xchg
jns
loopne
jb
out
repnz
mov
movsl
imul
xor
sbb
inc
sbb
fldcw
popa
je
jae
arpl
cmp
addr16
andb
push
mov
mov
jge
mov
aad
jmp
sbb
aas
stos
cmp
into
enter
outsb
mov
jne
pushf
shlb
imul
mov
mov
shlb
xchg
repz
imul
hlt
test
mov
imul
xor
inc
test
out
mov
out
clc
dec
cmpsb
ja
jp
das
scas
repnz
cmp
mov
sbb
or
stc
insl
int3
xchg
mov
sbb
adc
test
mov
insb
add
sub
mov
int
decb
push
shlb
call
shl
ds
adc
sbb
inc
jmp
jb
mov
aaa
lods
sub
movsb
stos
jne
fwait
mov
xor
mov
stos
mov
sbb
mov
call
mov
mov
jl
push
ja
cmp
sbb
mov
cmp
jecxz
or
add
jl
mov
mov
popa
sbb
js
lock
mov
jo
xchg
jecxz
test
daa
jmp
add
ja
inc
sub
addr16
cli
cmpb
imul
cmp
jp
sub
jo
outsb
repz
mov
mov
es
insb
mov
jecxz
xchg
rclb
imul
cmp
mov
cmpsl
jmp
cmp
inc
stos
mov
mov
mov
cmp
mov
jo
aaa
ja
jle
sbb
pop
jle
imulb
fcompl
popf
xchg
test
mov
mov
mov
ss
xor
int3
and
cmp
lods
out
ja
clc
sub
stc
jb
cmp
idivb
and
ss
fdivrs
outsl
repnz
clc
jno
cmp
in
nop
adc
mov
bound
adc
shll
push
pusha
loop
sub
xor
cld
imul
lods
jmp
lcall
jae
lea
mov
push
and
lcall
test
xor
xorb
arpl
sbb
test
lret
imul
add
les
jae
fldl
bound
jl
xchg
repz
insb
mov
cli
repz
cmp
xorb
mov
mov
push
jmp
stos
aas
mov
push
cmpl
pop
aam
stc
xor
ds
sub
cmp
and
mov
je
repnz
jb
out
lods
gs
pushl
mov
fsubrl
pushf
mov
sbb
hlt
and
scas
or
jl
jecxz
sbb
psadbw
xchg
xor
ja
jp
test
incl
mov
jae
nop
sub
and
mov
stos
idivl
xor
mov
hlt
jl
jno
mov
test
xchg
jb
or
repnz
xor
mov
push
fstpt
ja
sub
mov
sub
mov
xor
dec
out
bnd
sbb
arpl
outsl
aaa
aas
hlt
ds
sbb
jns
je
sub
pop
arpl
sbb
lods
sahf
and
jne
mov
mov
mov
shll
push
push
fdivs
mov
ret
add
or
cmpsl
mov
sarb
jae
mov
scas
mov
stos
or
jb
cmp
cwtl
adc
jp
push
test
movsb
testl
jecxz
fs
mov
push
xchg
mov
xor
jno
mov
cmp
insl
mov
or
scas
insb
mov
adc
loopne
cli
xor
xchg
sub
into
cwtl
das
imull
add
shlb
gs
sub
cmpsl
or
cmpsl
stos
mov
repnz
jl
cmp
cmc
sbb
mov
and
jno
stos
lods
jl
and
mov
cs
je
mov
in
shl
jmp
cwtl
xor
scas
imul
ds
push
fwait
mov
and
lock
in
mov
mov
xor
daa
jl
cmp
lods
clc
movsl
jae
mov
inc
or
xor
mov
cli
mov
insb
cmp
lods
xor
scas
mov
xor
mov
xchg
pop
cmp
mov
jns
mov
test
ss
xor
xor
mov
idivb
hlt
imul
mov
or
xchg
fldl
mov
outsl
icebp
int3
jae
out
lods
icebp
xor
push
mov
sub
and
ljmp
insb
shrl
jno
hlt
idivl
xchg
mov
mov
jno
rorb
inc
fistpll
clc
jae
adc
mov
es
stos
and
cld
jb
clc
lret
mov
in
pop
xchg
mov
jecxz
pushf
xor
out
lods
icebp
arpl
inc
cwtl
mov
mov
shrl
fdivr
outsb
sbbb
aaa
mov
mov
test
mulb
push
lods
xor
jg
ds
lock
cmpb
repz
cld
and
ja
sbb
movsl
mov
bound
mov
aas
lret
jl,pt
sbb
jmp
cli
inc
adc
mov
enter
push
cwtl
iret
mov
ss
mulb
arpl
push
pop
das
pop
out
sahf
cmpsl
loop
ss
mov
je
lods
inc
xor
mov
test
clc
sarl
cmp
xor
xchg
and
stos
push
mov
sbb
adc
cld
out
scas
repz
loopne
sbb
ja
adc
loop
push
xchg
hlt
inc
imul
xorb
insb
aaa
sub
ss
sbb
xchg
mov
cmp
xor
jae
arpl
addr16
loop
js
movsb
loop
cmpb
inc
bound
loopne
icebp
mov
mov
div
inc
push
ss
xor
mov
cmp
or
adc
push
mov
mov
and
xorb
imul
adc
mov
ss
aas
xor
loop
lock
sbb
jae
xor
outsl
jns
stos
and
sub
push
loopne
shlb
xchg
add
ja
into
pusha
test
rol
imul
aas
mov
push
mov
jo
ja
fs
xor
sbb
movsl
cld
clc
adc
fucom
cwtl
js
imul
mov
xchg
icebp
aaa
mov
add
ja
mov
std
addr16
mov
stc
mov
cmp
nop
mov
loop
rcrb
xor
xorb
out
insb
mov
mov
scas
ja
sahf
mov
sbb
xchg
pop
and
dec
fsubs
adc
mov
xor
lods
orb
icebp
mov
hlt
xor
adc
pop
insb
lock
mov
aad
notl
rcrb
mov
lcall
sbb
and
call
push
and
mov
aaa
xor
mov
frstor
mov
xor
incb
push
mov
push
inc
sub
mov
lods
sub
xor
xchg
aaa
cmp
test
xor
and
das
sub
out
adc
lock
mov
cld
sub
or
and
idivl
subb
xor
or
aaa
sti
cmp
nop
adc
fs
mov
jo
and
push
jmp
sub
ret
pusha
stos
clc
scas
and
inc
mov
and
repz
xor
adc
ja
stos
ss
hlt
mov
mov
mov
cmpsl
jp
sub
xchg
stos
xor
lea
xor
xchg
hlt
jp
mov
jecxz
mov
clc
and
in
repz
pushl
jb
mov
bsf
dec
jno
stos
sub
mov
sbb
mov
clc
pushf
out
mov
fs
inc
in
cmpsl
imull
jns
mov
cld
mov
and
jno
push
push
fsubrl
jle
cmp
test
shlb
clc
and
arpl
mov
nop
enter
dec
imul
loopne
jp
clc
icebp
repz
lods
sbb
jmp
mov
rcrb
cmp
mov
out
jo
nop
mov
cmp
stos
cmpsl
sub
stos
ds
js
idivl
sbb
bound
ja
jl
mov
sub
out
sub
cmp
add
push
clc
jl
xor
jg
xor
xchg
jno
imul
mov
je
lret
and
mov
arpl
jecxz
lahf
push
xchg
mov
clc
repz
gs
xor
xor
add
cmp
xchg
xchg
inc
leave
push
cmp
adc
cmp
lock
sahf
cli
ss
popf
and
lock
xchg
xor
mov
sbb
jmp
mov
imul
xchg
mov
popf
pop
mov
shlb
mov
sub
xchg
cmp
cmpsl
mov
sahf
outsb
jbe
xlat
lods
inc
loope
jg
xor
jae
jmp
ret
xchg
test
out
jg
mov
cmpsl
dec
mov
pop
sbb
mov
sbb
mov
adc
arpl
adc
sbb
mov
imul
addr16
mov
je
popa
mov
mov
pop
and
in
xor
nop
cs
out
xor
clc
mov
cmp
cmp
mov
jns
add
divb
clc
jecxz
mov
daa
mov
mov
adc
fbld
or
mov
mov
cmc
cmp
push
cmp
mov
cmp
imul
sbb
aas
aad
xor
clc
frstor
aad
mov
mov
mov
ret
sub
rclb
hlt
in
ss
bnd
aad
out
mov
sbb
mov
sbb
mov
jp
mov
cmpsl
xor
mov
xor
in
sub
stos
jns
xchg
adc
sbb
mov
sub
adc
add
in
jg
mov
test
incl
push
jb
sbb
jmp
mov
cmp
imul
inc
lahf
imul
fabs
in
imul
dec
xchg
imull
test
mov
add
hlt
lock
fwait
jecxz
jb
and
out
jl
movsl
or
arpl
and
pop
pop
xchg
cmp
test
sbbb
push
test
sub
cmp
jns
push
mov
andb
icebp
cmp
mov
xchg
jae
lods
divl
xchg
mov
fdivs
mov
fldt
cmp
ja
test
clc
push
mov
sub
mov
cld
lods
jg
test
mov
scas
mov
cmc
sub
cmp
mov
mov
js
rcrb
aas
je
adc
cmp
insl
in
scas
das
xor
mov
gs
btr
mov
jecxz
add
push
aas
mov
xchg
sbb
lock
pushf
lods
mov
add
jg
sub
cwtl
ret
mov
add
mov
bound
fnsave
lods
push
push
fwait
pop
adc
mov
test
and
mov
repnz
repz
xor
aaa
mov
xchg
hlt
xor
adc
xor
fbstp
mov
popf
cld
insb
xchg
imulb
ss
icebp
adc
lret
mov
xor
enter
pushl
pop
mov
and
test
fucomip
pushf
push
std
lds
imul
jno
cwtl
int
popf
cli
ret
js
flds
mov
xchg
xor
jmp
clc
mov
out
mov
jns
inc
jecxz
mov
xorb
mov
das
clc
inc
xor
dec
and
lods
jmp
sub
cld
mov
repnz
xor
xchg
loop
and
push
cmp
jne
test
idiv
call
mov
lret
cmpsl
mov
stos
push
mov
imul
je
mov
mov
add
jno
push
test
shll
mov
je
dec
arpl
push
lods
mov
mov
ss
mov
cmp
dec
ja
sub
aas
jl
and
fists
xor
insb
cmp
jp
fidivrl
and
pop
repnz
imul
jno
and
cmp
jo
in
fisubrs
mov
cli
stos
in
outsl
popa
loop
push
and
loop
mov
fstl
mov
scas
divb
popa
test
clc
out
xor
or
mov
sub
xor
jbe
mov
mov
imul
out
repz
mov
sahf
adc
ja
push
mov
aas
mov
add
jb
mov
imul
and
mov
out
aaa
xchg
lret
cmp
repnz
dec
fwait
in
popf
mov
lods
sbb
cld
push
bound
popa
icebp
mov
je
xor
mov
js
mov
repnz
and
mov
clc
fwait
add
out
testb
mov
xor
mov
cmp
and
xor
jl
push
stos
jmp
pop
and
aas
inc
sub
jg
cld
xor
mov
bound
xor
test
leave
fbstp
cmp
shrb
mov
xchg
lods
and
cmpsl
mov
jns
or
cmp
cld
fdivr
aas
mov
xchg
sub
xor
loop
xor
daa
outsb
in
mov
sbb
mov
xchg
xchg
cld
pushl
mov
popa
imul
scas
popa
xchg
out
lock
insb
out
idivb
xchg
xchg
in
add
ss
mov
mov
js
ja
adc
lret
in
add
xor
mov
test
mov
mov
incl
mov
jg
mov
hlt
test
pop
fisubrl
cmpsl
scas
ds
cli
mov
mov
mov
lods
aas
adc
jae
pop
jmp
mov
repnz
std
cli
sbb
xor
icebp
jno
sahf
pop
hlt
ds
adc
test
fs
mov
pushf
imul
repnz
adc
cmp
jp
sbb
mov
call
cld
aam
pop
push
xchg
mov
fstpt
lahf
mov
or
xchg
dec
mov
cli
imul
cmp
jne
cmpsl
xor
inc
cs
adc
fidivrl
mov
cmpsl
out
aas
scas
jae
inc
rcrb
outsl
inc
bound
xchg
xor
jo
sbb
and
hlt
pop
jecxz
test
inc
js
cmpb
mov
push
cmp
int
scas
notb
xor
in
das
jns
xchg
scas
repnz
divl
sub
lods
or
iret
jno
push
mov
ja
test
jns
inc
movsl
ds
in
push
mov
inc
fstpl
lods
enter
mov
inc
arpl
xor
fsubr
mov
aas
std
cmp
js
jmp
mov
ss
aaa
pushl
ds
jns
test
nop
test
mov
xor
hlt
inc
aam
mov
nop
jg
mov
push
ja
shlb
fsubrs
fdivrs
jmp
add
jno
mov
sub
in
adc
mov
mov
fwait
rolb
out
cmp
movsl
hlt
xor
scas
test
sub
movsb
bswap
and
iret
sbb
ffree
arpl
mul
mov
in
pop
js
sub
sub
jo
add
jge
cmp
sti
ja
sbb
pop
add
or
scas
mov
pusha
and
mov
lea
cmp
mov
negl
hlt
or
mov
xor
ja,pt
in
clc
jo
xor
mov
sbb
inc
cmp
dec
xor
mov
xor
insl
jecxz
out
lods
scas
xchg
jnp
mulb
aas
mov
jne
mov
cli
mov
mov
sbb
bound
jmp
or
bnd
ja
sub
cmp
mov
mov
ds
call
jno
lods
loop
jb
and
dec
out
push
nop
shll
imul
sub
aaa
jns
mulb
xor
jp
pop
inc
mov
insb
jecxz
xchg
cs
xor
fdivrs
xchg
xor
jmp
pop
insl
jl
test
jns
testl
repz
cmp
xchg
stc
imul
test
cmp
pop
push
add
in
pop
fwait
pop
mov
jo
and
inc
cmp
jb
fidivrl
stos
cwtl
mov
xchg
jno
aam
imul
mov
mov
lock
mov
cmpl
sub
data16
aaa
test
mulb
jl
cmp
pop
je
out
jae
adc
icebp
rcrb
pop
dec
pavgw
jae
repnz
mov
sbb
mov
adc
fwait
insl
pop
cmpsl
bnd
aaa
pop
shlb
xor
cmp
xchg
ret
and
cmp
aas
je
push
adc
clc
sbb
mov
cmp
mov
jl
pop
lcall
das
addr16
jns
pop
stos
iret
lds
sub
jl
cli
xchg
cmp
sarb
mov
xor
lods
lea
out
mulb
cmp
xlat
jecxz
mov
mov
out
adc
pop
ss
xchg
pusha
sahf
test
je
jns
jp
clc
xor
bound
pop
and
mov
jl
sahf
movsl
sub
fimull
xchg
enter
mov
xor
sbb
mov
cli
cmp
mov
mov
lea
xor
test
fstpl
mov
jno
imul
loopne
mov
lahf
aaa
xor
adc
jno
add
loopne
xor
stos
pop
jb
mov
mov
pop
shl
lods
bound
jle
test
fucomp
mov
mov
imul
mov
pop
addr16
ja
loopne
jo
jno
mov
test
xchg
xor
sub
pop
ss
jg
hlt
ds
jmp
test
mov
in
push
scas
sbb
sub
stos
xchg
mov
out
xor
dec
neg
push
dec
xor
push
mov
cmp
xor
jl
cmp
inc
movsl
jl
cmp
cwtl
mov
mov
imul
cmp
and
stos
pop
jg
push
loop
pusha
fdivs
test
inc
mov
sub
xchg
xor
loopne
mov
repz
imul
js
mov
sbb
jno
loopne
mov
sti
cli
xor
inc
inc
pop
mov
repz
stc
cmp
jp
mov
imul
jl
mull
mov
std
ret
dec
xor
xor
lock
mov
loopne
jo
jg
push
cwtl
mov
repz
mov
stos
add
mov
mov
jo
xchg
scas
push
mov
iret
movsl
mov
jae
mov
cmp
loopne
mov
cmp
mov
cwtl
js
jge
out
out
jl
repnz
sbb
mov
jno
pusha
xorb
mov
rol
ss
call
pop
shll
sub
adc
mov
adc
cmc
push
mov
jmp
imul
popf
jno
sbb
mov
stos
lods
mov
addr16
sahf
or
adc
ss
ja
jl
aad
mov
xor
arpl
sbb
mov
cwtl
lock
and
xor
pop
icebp
and
clc
mov
and
mov
jmp
and
xlat
stc
loop
in
xchg
lahf
scas
cmp
scas
dec
mov
sbb
cmp
cmp
dec
sbb
jno
sbb
es
inc
mov
arpl
in
test
mov
mov
lds
sbb
sbb
and
xor
lods
test
popf
insb
pushf
cmp
mov
lahf
out
ja
test
and
cmpsl
mov
push
cmp
jns
mov
mov
mov
mov
jg
sti
out
jb
aas
mov
mov
add
mov
cmp
scas
sbb
rcrb
jp
ds
cmc
xor
push
cmp
cli
ja
ds
jnp
mov
jae
jno
adc
mov
xchg
mov
divl
xor
lret
mov
test
mov
scas
cmp
xor
mov
lahf
jbe
test
fs
fidivs
das
cmp
jmp
scas
scas
mov
mov
arpl
or
aas
cld
jae
in
xor
sub
xor
aas
mov
repnz
push
cmp
cmp
rclb
test
jae
mov
jp
lods
repnz
xor
jecxz
jp
xchg
lods
aam
jb
clc
push
mov
iret
loop
ljmp
test
xor
cmp
test
mov
aaa
ret
sahf
push
insl
in
ss
popa
lock
les
jo
aam
lods
movsl
jg
ret
or
out
cmp
test
popa
fwait
xchg
add
loop
cmp
xchg
lods
popf
std
xor
aas
jo
test
cmp
fs
arpl
fcoml
jp
xchg
or
imul
cmpsb
stos
add
lds
pop
loope
lock
lcall
dec
fdivs
xchg
addr16
cmp
sbb
sub
jge
mov
stc
das
mov
scas
jne,pn
and
je
stc
lods
jecxz
adc
jo
jg,pt
pushf
cmp
mov
mov
insb
mov
sub
repz
jnp
sub
jb
into
sub
in
xor
mov
pop
and
jecxz
mov
cmp
aaa
imul
js
fsubrl
cld
imul
aad
in
sahf
in
ret
sahf
cmpb
jno
repz
in
addr16
repnz
cmp
aaa
into
mov
xchg
add
jmp
cmp
imul
inc
popf
stos
push
fwait
push
inc
mov
mov
psrad
imul
loop
inc
pushf
lock
ds
mov
mov
rcl
sbb
aad
push
rcrb
xchg
mov
test
xchg
popf
clc
mov
std
out
push
or
mov
mov
int
icebp
insb
lds
cli
jns
lahf
jo
mov
insb
push
xchg
or
lock
mov
xchg
jecxz
lret
xor
ja
out
lods
xor
xor
mov
aaa
push
test
repz
jl
test
mov
xor
mov
test
and
repz
aaa
jo
jmp
loopne
xor
mov
mov
push
out
lea
xor
xor
sub
inc
xchg
pop
fsubrp
adc
shll
out
and
mov
cmc
leave
test
sbb
pusha
leave
je
leave
or
cmp
test
xor
xor
sub
cmp
stc
in
dec
in
mov
dec
mov
jno
movsb
mov
call
mov
in
jp
das
cmpsl
push
icebp
xor
pop
stos
xor
sub
insb
and
stc
lods
xor
sbb
fbld
arpl
out
cmp
mov
jno
repz
out
sub
mov
or
aam
cmp
scas
sahf
das
loop
imul
scas
pushf
popa
jns
dec
cmpsl
inc
jp
mov
fs
cltd
cmc
sub
sub
jb
pushf
insb
inc
sahf
mov
sub
lods
jl
out
gs
ss
mov
xchg
xor
div
xor
sbb
mov
xlat
xor
mov
mov
inc
stc
mov
call
gs
mov
mov
ret
sub
and
mov
xor
sub
jb
mov
test
jp
jae
pushf
pushf
stc
lods
jo
adc
jmp
test
and
adcb
xchg
cld
xor
pop
and
push
xor
div
jmp
ja
jmp
xchg
add
xor
addr16
jp
mov
movsl
mov
xlat
arpl
imul
ja
addr16
jb
outsb
add
and
lods
and
cmp
mov
mov
aaa
mov
dec
bound
shll
pop
jp
mov
mov
mov
or
push
mov
bound
push
cld
int
lcall
xor
ja
jg
repnz
aam
arpl
imul
adc
insb
sub
jl
arpl
lahf
cmp
ds
loopne
xor
cmp
mov
xlat
sub
test
pop
scas
mov
mov
aam
fcoms
cmc
aas
add
out
repz
loopne
ss
inc
scas
mov
iret
mov
inc
sti
inc
insb
stos
outsl
sub
lahf
hlt
incb
sub
in
mov
xchg
aaa
notb
in
sarl
mov
lods
stc
inc
fwait
insb
ss
adc
lcall
jp
es
xor
xchg
cli
mov
jmp
adc
push
mov
lahf
clc
sbb
enter
jns
inc
mov
dec
icebp
fbstp
or
lret
adc
mov
ret
loop
jae
xor
fistps
rorl
sub
lock
popf
mull
fwait
dec
loop
pop
mov
scas
repz
mov
sub
mov
js
mov
xchg
inc
cmpsl
push
cmp
dec
fwait
adc
jae
pop
mov
push
daa
std
lock
mov
pop
repz
jmp
test
mov
jecxz
sub
nop
mov
inc
loope
mov
xchg
mov
fwait
adc
sub
xor
fldlg2
pop
repnz
mov
xorb
cli
fmull
rclb
testl
out
insb
xchg
mov
mul
mov
mov
mov
mov
ret
adc
jne
test
test
imul
cmp
out
dec
xchg
orb
jmp
enter
mov
mov
xor
je
out
adc
idivb
ss
jle
mov
jb
inc
lods
scas
lods
mov
xchg
xor
jle
push
mov
repz
mov
xor
stos
aaa
mov
mov
mov
stc
pop
pop
cld
scas
out
cld
mov
inc
jb
jp
jno
and
xor
inc
jns
or
dec
out
std
add
adc
xor
push
in
pop
and
xor
leave
mov
xlat
sub
hlt
lock
mov
out
enter
and
bound
mov
mov
cli
mov
mov
jp
addr16
mov
lods
lcall
test
push
aas
cmp
xchg
and
cli
clc
ja
pop
icebp
dec
addr16
arpl
pushf
mov
mov
in
repnz
jl
lcall
lds
push
mov
mov
mov
into
jbe
inc
cmp
insb
push
repnz
xor
into
mov
mov
mov
inc
pop
cmp
ret
jns
inc
and
popf
dec
mov
xchg
lock
inc
jecxz
sub
out
sahf
jno
mov
jle
and
fdivr
cld
jbe
jbe
ss
mov
adc
xchg
mov
movsl
mov
adc
mov
cmp
adc
mov
fprem
mov
imul
arpl
sahf
push
lcall
stos
out
push
jae
add
jo
stos
xchg
or
imul
cli
stc
jg
lods
cmpsb
xor
push
pop
shl
cmp
push
mov
and
jno
mov
test
out
out
icebp
mov
scas
loop
jns
pop
mov
cmp
adc
dec
mov
push
fdivs
mov
cmp
mov
shr
call
das
scas
fbstp
test
xchg
inc
fisttps
mov
mov
rorl
fildll
fwait
mov
lods
arpl
xchg
adc
jecxz
lods
adc
inc
and
cli
and
mov
xor
js
or
add
into
or
xchg
mov
mov
jl
out
jae
cmp
sti
sub
out
stc
jb
repnz
sub
lcall
jo
mov
pop
mov
pop
das
mov
mov
sbb
in
js
lahf
aad
mov
shrl
cmp
jmp
out
ss
push
and
pop
mov
xor
stos
jmp
mov
scas
adc
scas
ss
lods
mov
mov
sub
divb
cld
xlat
repnz
sub
cld
push
mov
inc
sub
stos
nop
inc
jl
mov
movsl
jbe
imul
or
mov
jl
mov
imul
repz
mov
pop
cmp
and
insb
stos
xor
dec
idivb
mov
out
add
cwtl
in
hlt
test
divl
arpl
and
mov
jo
dec
bnd
scas
mov
push
repz
pop
lock
push
sbb
aas
je
lret
test
push
orl
and
mov
cmp
xor
jno
cmp
dec
jp
insb
mov
push
cwtl
test
sbb
imul
jo
js
jns
xor
push
jp
jg
push
mov
mov
fldl
out
icebp
rolb
jno
jo
mov
scas
subb
hlt
xchg
jns
sbb
test
mov
aas
icebp
scas
insb
testb
and
push
jl
cmp
jmp
sub
insl
inc
ds
mov
iret
stos
popf
or
push
aas
mov
hlt
loop
mov
out
sub
cld
ja
cltd
lds
xor
fdivrs
xor
mov
jb
jecxz
lods
outsb
arpl
push
xor
xor
in
imul
cli
xor
xor
cmp
sahf
enter
pusha
imul
repnz
idiv
mulb
lock
repz
icebp
mov
mov
and
jns,pt
clc
jl
cli
sub
out
cmp
lods
lock
cltd
test
mov
ss
xlat
sub
ja
fwait
mov
js
sbb
mov
cld
jo
idivl
inc
es
cmpl
popa
scas
ss
and
inc
movsw
int
jo
push
sub
mov
cmp
cld
repz
mov
and
jns
and
stos
jne
mov
call
enter
arpl
repz
cltd
lods
idivl
test
shlb
and
and
sub
mov
in
xlat
test
out
cld
mov
and
xor
fistpll
mull
ss
jecxz
xor
xor
or
jb
jmp
xor
ret
mov
outsb
pop
sbb
or
xchg
mov
js
push
xor
test
pop
cmc
cmpsl
jecxz
repz
xchg
imul
lods
and
and
testb
popf
jns
inc
jl
mov
jae
test
mov
jmp
je
clc
std
pop
mov
stos
fs
and
mov
in
pop
test
je
mov
xchg
mov
aaa
pop
outsb
fs
fs
ja
push
add
mov
shrb
push
popf
xchg
aam
call
mov
cmpb
popa
test
inc
icebp
sbb
pop
or
stos
jecxz
jle
adc
clc
jl
sub
out
bound
add
insb
mov
mov
into
push
mov
jl
jae
sti
stc
clc
xchg
xchg
out
int
mov
or
cmpsl
aas
mov
mov
call
mov
cmp
push
test
mov
repnz
jecxz
and
xchg
and
mov
push
cmp
divl
xchg
cs
mov
jl
or
lea
cmp
and
cmp
lds
js
mov
hlt
loop
jp
out
jo
loopne
mov
imul
mov
out
scas
xor
sahf
sub
enter
sbb
hlt
mov
stos
xor
divb
adc
or
stos
pop
jno
and
popa
mov
test
push
add
hlt
aaa
repnz
add
insb
out
cmp
sbb
aas
cmp
ja
negl
bound
aas
mov
nop
mov
mov
mov
test
push
mov
sub
push
insb
mov
icebp
roll
dec
and
mov
test
jecxz
cmp
pop
cld
hlt
mov
cmp
gs
dec
mov
out
daa
cmp
xor
xor
mov
push
icebp
mov
xor
adc
jp
clc
jg
das
push
stc
hlt
stos
nop
test
ja
inc
js
aad
xlat
loopne
and
enter
je
xor
stc
in
add
clc
nop
aas
repz
mov
imul
push
scas
pop
or
shrb
cmp
jg
aas
mov
in
xchg
pusha
fdivrl
ja
sub
xor
mov
jb
inc
sahf
hlt
dec
mov
push
sub
adc
jecxz
pushf
jp
aaa
cmp
sub
cmpsb
shll
in
dec
mov
jb
jbe
and
ret
mov
pushl
sub
push
loop
inc
xchg
out
clc
dec
call
aam
enter
ja
mov
stos
stos
je
lds
pop
lock
xlat
lds
sti
adc
rorb
jmp
decb
pusha
push
inc
movq
mov
clc
cmp
out
cmp
ljmp
arpl
imul
pop
and
mov
test
les
sub
jl
jbe
imul
pop
mov
mov
aas
mov
xchg
xor
roll
divb
test
mov
cli
hlt
pop
cmp
fwait
ja
stc
lret
inc
ja
test
test
mov
sub
cmp
lods
orl
cmp
mov
or
mov
mov
mov
inc
shlb
xor
ds
std
movsb
test
jno
xor
into
jns
mov
leave
test
cmp
pop
repz
pushl
add
repnz
lock
test
xor
pushl
int
mov
cli
lcall
out
icebp
scas
sbb
js
jg
xlat
loope
pop
cli
scas
mov
pusha
cmp
mov
in
ljmp
jae
xor
lods
and
test
add
pop
test
out
scas
test
sub
idivb
mov
jb
out
inc
std
mov
mov
mov
jl
xchg
dec
mov
hlt
add
ret
rcrl
inc
xor
mov
jmp
loop
xchg
jae
mov
pop
fs
loopne
jp
cmp
add
fcom
jecxz
xchg
xor
xor
sahf
push
lock
xchg
dec
and
cmpsb
leave
addr16
mov
jo
cmp
cmp
jp
and
lock
cld
lret
dec
aam
mov
dec
cmpsl
pop
mov
sub
mov
lock
lods
dec
hlt
cmp
dec
out
cmp
push
xor
mov
bound
xor
shl
fisubs
sahf
jmp
mov
cmp
jl
imul
mov
mov
jl
int
test
and
jg
cwtl
mov
mov
lds
ja
mov
push
mov
fs
loopne
mov
jno
xchg
push
pop
idivb
test
stc
bound
je
ret
and
mov
mov
inc
stos
sub
push
lods
and
mov
cmp
mov
adc
repnz
mov
xchg
repnz
shlb
and
addr16
jmp
and
imul
out
jb
xchg
mov
sti
sbb
mov
add
fstl
push
cmp
mov
push
and
mov
mov
dec
cmpsl
lret
cli
jg
in
sub
pop
xor
scas
cld
xor
test
xchg
imull
lods
cli
in
push
cmp
ds
sub
mov
sbb
popf
pop
stos
cmp
xchg
jo
and
cli
jp
sub
pop
ds
hlt
xchg
mov
dec
mov
jb
add
mov
out
push
or
mov
jns
popf
jae
xor
xchg
push
insl
je
or
insb
cltd
stc
mov
xor
pushf
cmp
mov
cmp
ja
mov
pop
mov
cmp
mov
mov
mov
je
ljmp
inc
imul
mov
mov
cld
xchg
xor
out
in
repz
hlt
sub
mov
mov
aas
repz
cld
ss
mov
cmpsl
aaa
jno
sbb
mov
mov
cli
je
lods
mov
xor
stos
daa
in
jl
xlat
cmp
jp
adc
push
in
mov
lock
je
jl
ss
fidivrl
xor
out
aaa
icebp
cmpb
fs
xchg
jg
lahf
sub
xor
cmp
stc
push
out
mov
xchg
fs
pop
cmp
mov
jns
gs
inc
pop
iret
loopne
lods
cli
out
mov
and
rol
jno
aaa
jl
jp
mov
cmp
dec
outsb
bound
and
mov
xor
sub
mov
jl
mov
xchg
stos
cmp
xor
and
xor
scas
addr16
cli
mov
cli
idivb
mov
mov
jae
cmc
jns
popa
sub
fwait
mov
lock
cli
imul
mov
mov
lret
stc
and
xchg
scas
insb
jg
addr16
imul
shrl
repz
test
test
test
and
or
dec
sbb
cmpsl
loopne
mov
adc
xor
and
xor
xor
dec
loop
stc
xchg
shl
jmp
cmp
aam
pop
int
sub
mov
and
aad
cmp
and
mov
mov
push
lcall
adc
aaa
aam
mov
and
mov
das
testb
mov
mov
inc
in
nop
in
jno
push
lock
pop
enter
pop
mov
clc
pop
adc
incb
shrb
fcompl
test
mov
cs
dec
fistps
fnstcw
aaa
out
mov
sbb
and
in
adc
mov
adc
jg
out
cld
xchg
sub
xor
cmp
lods
cmp
mov
adc
mov
es
jo
dec
mov
ss
jo
arpl
fstpl
mov
pop
mov
mov
lods
xor
jno
jb
mov
xor
jo
sti
jmp
lea
popf
mov
mov
or
in
and
and
xchg
mull
sub
mov
inc
adc
insl
lods
testl
shl
cmp
and
sub
cwtl
js
push
shl
lds
arpl
xor
inc
xchg
xchg
loopne
idiv
xor
xchg
arpl
stos
push
jne
enter
fstpl
xchg
and
mov
xor
f2xm1
enter
pop
cmc
sbb
jae
mov
imul
cmpsb
jns
cmp
xlat
mov
lds
ja
mov
push
xor
addr16
jecxz
je
test
xchg
popf
sub
xor
mov
and
cld
je
inc
in
sub
xor
mov
test
jns
sub
adc
mov
xor
sti
and
loop
imul
jns
mov
mov
repz
dec
xchg
ss
imulb
ja
in
fdivrl
sub
imul
gs
call
pop
daa
cmp
sbb
mov
cltd
cmp
idivl
jmp
mov
mov
mov
in
lods
push
and
and
cmpsl
jb
mov
ss
dec
outsb
lods
dec
aas
add
je
and
cli
loop
out
mov
add
lock
inc
mov
in
insl
jp
sbb
js
jecxz
mov
cltd
stos
cmp
mov
push
lods
test
adc
out
jae
int
call
cmp
sbb
insb
ds
dec
cli
mov
jae
hlt
mov
jo
cmp
loope
mov
pop
add
clc
scas
add
out
fs
shrb
mov
scas
mov
movsl
adc
lock
jo
cwtl
cmpsb
imulb
clc
dec
aam
in
inc
push
xchg
xor
lds
add
pop
mov
mov
xor
fwait
mov
xchg
mov
push
stos
add
roll
outsl
add
add
xor
cli
xchg
mov
out
insb
mov
jp
and
sub
adcl
push
mov
xor
cmpsb
imul
jae
sub
inc
sbb
mov
pushf
dec
cmp
mov
mov
and
je
mov
or
mov
mov
push
test
sahf
pop
cmp
pop
and
xor
test
pop
mov
fsubl
dec
hlt
cli
dec
cmp
lock
int
push
js
inc
mov
inc
jb
mov
cltd
testb
pushf
bound
and
pop
ret
aaa
sbb
mov
sbb
and
sub
cld
lahf
mov
out
clc
mov
icebp
int
jns
addr16
or
std
jb
jg
ds
fs
addr16
scas
nop
lock
stos
sbb
pop
hlt
out
jecxz
dec
cmp
mov
scas
lret
out
inc
mov
xor
adc
xchg
xor
and
stc
mov
testl
push
jae
mov
popa
outsl
push
jle
jge
data16
jae
scas
mov
test
dec
and
in
cmovne
outsb
aas
mov
mov
jbe
imul
outsb
int3
sbb
xor
test
gs
sbb
scas
add
xor
sub
mov
xor
outsb
je
pop
les
jae
outsb
popa
xor
adc
imul
inc
pop
call
ja
adc
test
add
in
jno
jo
dec
ss
insl
xchg
scas
jl
scas
and
lea
arpl
xor
mov
sub
push
lock
fdivs
jb
mov
or
xor
repnz
push
lcall
aam
clc
mov
add
int
rclb
cmp
out
mov
stos
dec
popa
les
lcall
add
repz
inc
jp
sbb
jns
dec
das
repnz
in
cmpsl
and
jae
push
sub
pusha
insb
mov
test
lods
mov
or
cli
cmp
mov
sub
dec
adc
test
addr16
cmp
xor
repz
mov
mov
test
sbb
insb
fbstp
push
popf
roll
lods
daa
aaa
xchg
test
test
xor
xlat
or
hlt
dec
clc
addr16
mov
repz
loope
or
es
and
nop
divl
mov
icebp
jo
in
jae
xor
stos
pop
lret
call
mov
mov
jo
mov
bound
inc
mov
js
mov
inc
inc
cli
or
add
pop
sub
mov
insb
xchg
scas
jae
aaa
lcall
xchg
mov
enter
stos
mov
jae
js
xor
cs
mov
inc
lods
xor
jecxz
ds
add
adc
cmp
add
jmp
mov
mov
lahf
mov
cmpsb
mov
and
hlt
imul
idivb
jp
pop
xlat
in
or
push
mov
cs
or
cmp
xlat
mov
je
insl
xor
mov
fwait
jg
outsl
out
cmpsl
and
fidivrs
ja
insb
scas
mov
sbb
xchg
aam
stos
aas
cld
sbb
insl
mov
mov
insl
jb
or
gs
jl
mov
pushl
mov
shl
popa
stos
sub
imul
jp
adc
dec
sar
ret
clc
pop
sub
pop
stos
mov
adc
das
imul
or
scas
stos
test
sbb
xor
add
and
lods
clc
popf
mov
sbb
addb
incb
mov
cld
clc
fcoml
mov
dec
and
mov
push
mov
mov
mov
mov
pop
dec
lock
xor
movsl
mov
mov
mov
cmp
imul
add
xor
stos
jo
outsl
clc
mov
mov
icebp
ficoms
movsl
scas
xor
ret
stos
repnz
jp
fdivrs
sbb
insb
jo
mov
lea
push
jno
stos
lods
cmp
and
lock
arpl
xchg
fwait
pop
pop
mov
in
lock
jne
or
cmp
mov
inc
push
mov
arpl
mov
hlt
aas
push
in
out
imul
out
mov
xchg
pushl
xor
dec
push
sub
cwtl
jg
fwait
jo
mov
mov
fildll
sub
jae
mov
nop
idivl
jp
cwtl
rclb
frstor
jmp
roll
jp
adc
jns
mov
mov
cmp
mov
or
and
adc
test
aas
pop
stos
xor
jp
inc
lret
imul
js
mov
popa
jge
insl
mov
mov
mov
mov
stc
xchg
fs
in
jns
shr
aas
pop
xor
aaa
jae
and
nop
int
cmp
xor
mov
and
inc
jnp
xchg
jp
or
adc
mov
xor
in
leave
decl
loopne
xor
mov
jo
jl
movsl
imul
mov
mov
pushl
xor
je
nop
shlb
cmp
cmp
cld
cmpsl
stos
push
shlb
xchg
arpl
out
sbb
jl
jmp
shrl
js
addl
push
cmp
loop
je
pop
adc
inc
test
in
pushf
icebp
cli
mov
pop
sub
ds
cld
xor
insb
mov
jp
sarl
or
sub
aas
xchg
int
jg
lock
mov
imul
mov
mov
jecxz
aaa
imul
sbb
shl
loop
xchg
lret
es
adc
lock
mov
stc
fcoms
sbb
dec
je
mov
mov
in
mov
popf
sub
push
mov
cld
icebp
clc
jg
movsl
pop
sarb
cmp
mov
jo
dec
mov
mov
outsb
test
sub
sbb
xor
and
and
jb
pop
and
xchg
cmp
mov
imul
popa
jno
jae
out
mov
popa
jge
pop
popa
push
out
lds
cmp
add
lods
repz
bnd
lds
shr
mov
mov
push
push
xor
sub
jle
loop
orb
sbb
out
repz
cmp
fisttps
sti
sub
jmp
jle
stos
rcr
mov
jp
clc
sub
push
fwait
notl
mov
hlt
pop
daa
mov
into
mov
fdivs
xor
hlt
ficompl
loop
aaa
xor
xor
cmc
subps
test
mov
insl
js
jne
loop
je
popa
push
push
mov
cwtl
arpl
je
sbb
icebp
scas
mov
xor
mulb
aad
adcl
and
cmpsl
aam
and
cmpsl
or
loop
mov
repz
aas
mov
je
les
mov
hlt
pop
xor
sbb
pop
cmp
inc
aaa
xor
js
test
sub
testl
xor
int
lcall
jmp
imulb
and
mov
addr16
out
cmpsl
ret
fdivl
lock
icebp
sub
scas
jg
add
fwait
int
mov
imull
scas
and
hlt
inc
fildll
lahf
mov
pop
pop
cmpb
pop
mov
sbb
jge
mov
or
mov
xchg
lods
ja
pop
mov
lds
mov
pop
stc
cld
inc
and
arpl
lods
iret
pop
mov
jae
or
lock
jl
dec
repnz
ja
dec
cmp
popa
sub
add
sahf
ss
fwait
and
mov
or
lods
dec
inc
jns
push
cmp
sbb
sbb
pop
in
jb
mov
or
insb
or
movsb
stc
test
faddl
mov
sub
dec
jo
cltd
ds
lock
shll
and
jno
cmc
shrl
scas
stc
cs
out
cmp
mov
lods
cmpsb
jecxz
mov
js
push
mov
in
jne
sbb
mov
jmp
ja
stc
push
mov
jno
mov
insb
lcall
add
clc
enter
cmp
mov
push
add
test
xor
insb
insl
jno,pt
mov
pop
insl
repz
and
mov
stos
js
mov
arpl
jb
xchg
adc
shlb
lock
jecxz
mov
jno
cmp
aas
push
and
mov
mov
test
orl
test
fsubr
sub
and
jne
int3
cmc
cmp
imulb
mov
mov
insb
test
fdivp
pop
mov
dec
loop
mov
test
cmp
out
cmp
cmp
sbb
aaa
xlat
test
mov
xor
cmp
idivb
jne
pop
lds
mov
mov
sub
out
jae
pushw
xlat
fs
imul
mov
cmpsb
xor
mov
cltd
arpl
fcompl
popf
mov
test
pushf
cmp
or
mov
sub
jl
mov
je
mov
and
cld
mov
repz
ja
mov
stc
mov
fcoms
add
in
cmp
sbb
gs
jl
jmp
repnz
cltd
test
fwait
lock
cwtl
mov
push
or
dec
and
out
gs
cli
insl
jae
mov
std
jae
je
inc
push
jnp
push
pop
mov
dec
and
pop
push
xor
mov
jae
mov
push
sbb
int3
mov
mov
push
ret
cmp
ljmp
scas
call
fadds
jo
sub
test
mov
es
jecxz
fst
repnz
cld
mov
mov
add
repz
cmp
jno
icebp
mov
or
movl
jae
jns
cmp
xchg
cmp
xor
fucom
lock
cmp
stos
xchg
sarl
xor
lock
loopne
stos
sub
scas
js
test
sbb
push
pushf
jecxz
and
and
cmp
pop
aas
or
jns
lahf
lds
adc
fisttps
dec
ss
cmp
jl
cld
push
lock
daa
outsb
stos
xor
cmp
or
cmp
stc
test
xchg
and
push
pop
adc
jo
xchg
add
mov
test
xchg
and
xor
test
dec
jg
sub
xor
nop
lahf
rcll
or
mov
cmp
adc
mov
ss
or
das
test
pushf
stos
inc
flds
sub
je
cmp
stos
mov
scas
js
mov
icebp
je
xor
loop
sbb
add
incl
xor
scas
mov
aam
movsb
pop
mov
and
mov
fwait
xor
inc
xorl
mov
and
sti
cmp
rolb
insb
outsl
mov
aam
out
mov
lock
shlb
push
mov
mov
leave
inc
and
call
sub
pushw
mov
sbb
pop
mov
or
xor
out
fisubl
push
in
push
lret
jecxz
in
enter
loop
and
in
jo
shrb
mov
cmp
adc
cmp
jle
pushf
ljmp
das
push
ja
mov
xchg
mov
push
mov
fstpt
jnp
mov
dec
xchg
stc
pop
and
test
pop
xor
pop
imul
lds
cmp
cmp
fwait
lea
mov
out
imul
mov
sti
shlb
mov
jno
jl
aam
mov
idivb
aas
xor
icebp
mov
outsb
mov
cmp
loopne
jl
cmp
scas
xor
mov
outsb
loopne
imul
jg
pusha
adc
je
pushf
stc
mov
hlt
js
test
mov
or
jl
mov
cmp
stos
xor
lods
xor
js
mov
xchg
out
jno
aaa
mov
sahf
mov
xchg
mov
sbb
test
xor
out
cmp
aaa
sbb
cld
or
cmpsb
sub
arpl
fucomp
and
aas
cmp
je
out
mov
mov
test
pop
test
jp
mov
or
pushf
outsb
pop
add
mov
fwait
cli
mov
fsubrs
mov
cmp
inc
jbe
sti
jns
pop
xchg
out
jmp
inc
adc
aad
loopne
jecxz
repnz
fsubs
xchg
mov
xchg
outsl
mov
outsl
ds
xor
idivl
sbb
cmp
mov
push
mov
scas
mov
mov
cmp
cld
scas
jns
mov
mov
addr16
idivb
cmp
idiv
js
xor
sub
mov
sbb
cltd
push
cmp
mov
repz
inc
mov
insl
mov
fadds
cld
mov
clc
mov
xchg
icebp
mov
bnd
and
je
gs
shrb
js
push
outsl
stos
mov
and
mulb
mov
fwait
arpl
mov
sbb
bnd
sub
nop
ds
stos
jmp
mov
test
mov
pop
lahf
mov
ds
mov
aaa
jmp
mov
shll
jo
imul
push
push
mov
lods
mov
clc
insb
mov
adc
xchg
repnz
mov
xchg
hlt
mov
xor
jl
mov
loop
jmp
repz
scas
and
movsb
jecxz
clc
shl
push
sti
shrb
push
rolb
xor
cmc
add
mov
repnz
js
jle,pt
mov
stc
testb
in
mov
pop
adc
js
insb
mov
icebp
xor
push
xchg
clc
pop
ret
jmp
btr
mov
pushl
outsl
mov
jl
mov
divb
in
mov
mov
stos
cmpsl
fnstsw
rorb
shl
or
andl
pop
jecxz
add
loop
cmp
and
jno
sbbl
xor
bound
out
cwtl
repz
in
loopne
jecxz
sub
jmp
pop
mov
adc
cmpsl
out
hlt
cmp
cmpsl
cmp
mov
sub
xor
jg
sub
out
incl
or
das
jg
adc
arpl
xor
mov
cmp
jae
ret
cmp
xchg
xor
mov
clc
in
mov
ss
divl
out
xlat
cmp
xchg
scas
imulb
lahf
mov
ror
decl
pop
lods
inc
or
xor
sub
xchg
mov
test
mov
cli
xor
add
repnz
mov
out
sub
xchg
imul
mov
arpl
stc
lods
mov
and
mov
adc
clc
cwtl
push
je
mov
aas
test
jp
nop
aaa
cmp
lods
hlt
mov
and
cli
mov
inc
incb
mov
mov
aaa
repz
mov
xor
adc
mulb
scas
xor
bound
mov
test
sbb
cmp
sbb
cmp
out
inc
cmpsb
and
fstps
mov
xor
imul
cld
sub
div
dec
daa
popf
mov
mov
repz
divb
dec
out
mov
push
push
xchg
xchg
and
repz
insl
ljmp
arpl
pushl
mov
scas
cld
je
fcomi
mov
stc
repz
push
cwtl
imul
mov
cmp
adc
pushl
loopne
lods
mov
sub
xor
ss
mov
mov
mov
cld
enter
jl
nop
nop
add
sub
stc
shl
mov
test
scas
js
jmp
arpl
in
movsl
cmp
xor
mov
idiv
popf
clc
gs
jp
dec
and
mov
or
loopne
jno
stos
ds
jo
addr16
cmp
jb
xchg
outsb
mov
bound
imul
push
inc
shr
adc
adc
jmp
ljmp
icebp
or
ljmp
stos
mov
lcall
in
mov
arpl
cmc
hlt
fnstenv
sbb
sti
mov
stos
stos
movsl
idivb
sub
mov
xor
sub
stos
mov
je
loop
xor
into
lea
ja
gs
jmp
mov
std
inc
sahf
les
xchg
sbb
in
mov
mov
rorl
dec
jg
xchg
xor
gs
sbb
je
movsl
push
add
jnp
out
stos
fwait
out
pop
lret
mov
mov
mov
mov
imul
cmp
sbb
mov
cmp
mov
test
mov
mov
fadds
cmp
xor
clc
insl
aaa
sub
test
ss
sahf
xchg
repz
sub
cmp
call
imul
push
inc
repnz
shr
mov
test
lock
mov
jg
sub
pop
sti
lods
insb
repz
push
je
mov
aam
call
jo
cli
lahf
sbb
xor
cli
mov
sbbl
cmp
mov
nop
cli
sbb
test
popa
xadd
cmpsl
nop
dec
in
jge
imul
shll
xorb
imul
and
xchg
and
imul
js
add
mov
stos
xorl
xchg
sbb
imul
insb
lods
out
ds
jns
repnz
mov
xchg
sub
dec
push
and
jae
cmp
xor
call
mov
mov
mov
xchg
movsb
sbb
icebp
clc
cld
imul
pop
sbb
bound
push
adc
lcall
mov
mov
adc
clc
or
adc
xor
movsl
repz
aas
pushf
in
repnz
mov
mov
mov
hlt
pop
rcl
pop
mull
loop
xor
in
xor
js
mov
cld
dec
and
cli
jbe
xchg
pop
pop
cmp
icebp
jo
ret
rorb
mov
clc
xchg
in
sbb
sbb
adc
push
lcall
test
insb
pop
inc
push
xchg
ss
ds
sahf
pop
stc
inc
mov
js
rorb
mov
loop
mov
jb
push
xchg
mov
pop
xor
mov
ljmp
sub
insb
cmc
nop
dec
je
mov
cli
cmp
stos
mov
mov
jecxz
jno
cmp
adc
inc
add
hlt
sub
xor
push
pusha
in
mov
adc
cmp
adc
js
and
jae
add
xor
divl
cmp
sub
pop
lock
pop
leave
test
movsl
test
mov
data16
cld
mov
clc
nop
xor
test
cli
ret
sahf
pop
sbb
in
mov
mov
and
shl
in
js
pop
sub
je
mov
outsb
jp
and
mov
and
clc
imul
sub
sub
mov
daa
mov
jge
sbbb
je
pop
cmp
xchg
jle
les
clc
mov
andb
scas
mov
sahf
jl
cli
imul
add
test
and
sbb
popa
in
rorb
cmp
inc
js
clc
sub
mov
jae
sub
mov
mov
ja
xchg
stos
sarl
jno
mov
mov
push
jns
or
ja
lods
xchg
lock
pop
and
push
xor
js
push
aaa
lret
xlat
es
sbb
clc
or
jae
dec
aas
mov
mov
and
mov
push
idivb
jo
test
adc
mov
pop
addb
jecxz
xchg
mov
mov
xor
arpl
cwtl
in
aaa
dec
add
js
clc
clc
ss
xor
hlt
jmp
loopew
sbb
cmp
push
insl
jl
loope
xor
mov
jno
idivb
je
imul
ds
repz
mov
jae
push
bsr
pusha
icebp
bnd
cmp
and
xor
repz
insb
mov
push
daa
cld
pushl
mov
outsb
insb
mov
divb
adc
hlt
sar
sub
hlt
sbb
add
xor
xchg
negb
addl
popa
cwtl
imul
hlt
sbb
fnsave
repz
imul
outsl
jmp
nop
ja
stos
test
inc
add
fidivrs
out
call
cmpsb
sub
or
int
andl
mov
dec
scas
scas
sub
iret
out
out
mov
xlat
add
mov
icebp
imul
test
lods
mov
pop
adc
xor
clc
pop
mov
cltd
clc
push
xor
sbb
fdivrp
pop
or
cmp
shlb
imulb
mov
out
clc
mov
cmp
xor
jp
movsb
pop
push
sbb
loopne
xor
jno
lods
js
das
and
fwait
lods
mov
insl
sbb
mov
jns
jmp
mov
jecxz
sub
mov
mov
gs
mov
push
bnd
xor
jmp
pop
push
rcll
sub
insb
mov
jb
xchg
cld
jo
cmp
js
xor
in
ds
int3
stc
and
sbb
push
sahf
pop
mov
data16
xor
cmp
xor
mov
bnd
lods
jns
pop
pop
test
lock
ss
stos
mov
mov
jecxz
xchg
fincstp
imul
mov
pop
icebp
lock
mov
imul
clc
jno
sbb
test
add
push
arpl
cmp
sub
mov
push
push
lret
cld
dec
adcb
mov
cmp
sar
mov
clc
mov
cmpsb
aas
add
out
cmp
sub
pop
pusha
mov
xchg
mov
and
sub
cwtl
loope
mov
lcall
dec
sub
xor
subb
bound
mov
mov
dec
cmp
add
mov
arpl
scas
pop
xor
int3
je
test
mov
ja
je
mov
jae
imul
adc
jno
lods
imul
shrb
mov
mov
mov
mov
jnp
in
mov
imul
xor
rcr
xor
repnz
jl
push
mov
xor
ds
hlt
mov
mov
mov
inc
repz
pusha
loop
stc
jo
sahf
jno
inc
mov
xchg
pop
nop
dec
xor
jbe
xchg
pusha
jl
lock
stos
jae
cmp
mov
add
adc
or
mov
out
mov
rep
fisubs
cmp
out
jns
inc
icebp
sbb
cmp
ja
movsb
cmp
jns
adc
push
xchg
addr16
scas
pop
cmp
sub
xor
sub
ret
lods
ljmp
lcall
sahf
shll
js
push
jge
mov
bound
jl,pt
push
sub
push
cmp
jne
das
cld
mov
popf
xor
inc
fisubs
lcall
ss
dec
ret
mov
cwtl
mov
fwait
mov
test
jg
pop
jo
mov
aas
add
xchg
out
jb
arpl
pusha
cs
aas
popf
fnstcw
enter
bound
fistpll
mov
xor
jns
cmp
adc
lock
add
cmp
mov
add
test
adc
sub
xchg
int
out
xor
mov
rorl
cmc
lock
aas
jns
adc
out
sub
sahf
xor
cld
lds
push
sub
pop
in
xchg
sbb
and
sbb
or
jo
adc
add
inc
xlat
and
or
pushf
nop
mov
mov
jg,pt
mov
sbb
lods
fisubrs
enter
mov
mov
pop
orb
pop
and
pop
rorb
lret
inc
mul
dec
hlt
rolb
xor
loope
ss
repnz
push
sbb
shrl
jns
jno
fiadds
outsl
clc
xchg
icebp
mov
ds
jg
jae
and
or
fstps
add
mov
clc
pop
lods
stos
cmp
ja
sbb
xchg
cld
mov
repnz
fdivrl
cli
loop
jo
mov
int
ss
popa
imul
cmp
js
out
repz
xor
mov
mov
clc
repz
mov
add
movsl
jmp
jle
sbb
clc
lahf
repnz
pop
mov
mov
mov
insb
ss
and
push
aaa
cmp
xor
mov
pop
test
xor
mov
mov
push
popa
clc
mov
js
rcll
cli
pop
or
ss
jne
out
imul
mov
mov
pop
repz
push
mov
mov
popf
xchg
movsl
ja
insb
dec
mov
xchg
cmp
cmpsl
add
clc
push
sbb
xchg
push
inc
mov
lea
sub
sub
arpl
cmpsl
outsb
adc
sbb
js
cld
pop
sub
and
flds
popa
pop
mov
daa
jge
mov
stos
bound
and
mov
cmp
mov
mov
out
xor
inc
jo
sbbl
mov
test
mov
leave
mov
cmp
ja
xor
fwait
and
gs
cmp
test
xor
aas
push
mov
cld
aaa
ds
xor
mov
sub
pop
mov
sub
test
mov
scas
das
insb
mov
jo
mov
aaa
adc
mov
jle
jp
mov
addr16
js
add
mov
pop
cmp
xor
adc
addl
jl
pop
jno
cli
jo
insb
xor
fdivl
pop
mov
ret
pop
or
scas
jg
fiadds
mov
xor
xor
popa
in
aaa
scas
lods
popl
dec
stos
mov
repz
jnp
call
pop
and
sub
mov
mov
push
cmp
scas
mov
repz
dec
loop
cmp
out
imul
or
sub
mov
jo
push
in
cld
test
lahf
ss
mov
stc
cmp
adc
sub
pop
push
pusha
jo
xor
xor
mov
icebp
mov
data16
xchg
push
lds
cmp
test
xor
cmp
insb
ret
adc
mov
xor
lock
fs
mov
xor
repz
jae
mov
out
in
mov
xor
ja
jecxz
addl
mov
shll
ja
out
sub
imul
and
lret
push
jae
rcrl
xor
mov
inc
and
cmp
jae
cmp
xor
xchg
dec
addr16
sub
jb
js
mov
daa
push
std
les
mov
repnz
jnp
add
sub
mov
mov
addr16
xor
mov
test
mov
mov
mov
xor
mov
add
jl
xor
push
push
pop
cld
repz
mov
out
and
xor
clc
jmp
jnp
mov
xor
or
nop
xor
push
dec
add
int3
add
cmp
and
lods
lods
insb
das
push
fldcw
ret
es
test
das
sub
mov
xchg
imul
test
fsubrp
mov
imul
sbb
mov
jg
push
xor
mov
cmc
mov
lods
mov
and
xor
jp
adc
sahf
test
cmp
mov
adc
jecxz
xor
xor
negb
cltd
in
mov
inc
repnz
mov
repz
mov
or
sub
nop
out
jns
test
adc
and
and
adc
cmp
sbb
bound
mov
mull
xor
repz
loop
cld
das
stos
clc
dec
xor
xor
jecxz
jnp
cltd
pop
mov
xor
xlat
jne
movsl
inc
pop
adc
aaa
xchg
lahf
mulb
js
lret
inc
cmp
cli
cmp
ds
scas
stos
mov
shll
sahf
cmp
xor
jmp
mov
mov
iret
push
mov
adc
scas
and
rcl
cld
clc
sbb
mov
mov
hlt
or
arpl
mov
xorl
ret
stos
push
cmp
dec
fists
scas
xchg
sub
outsb
lods
imul
or
jecxz
adc
push
test
cmp
xor
flds
inc
test
push
repz
mov
and
jb
stos
cmc
insl
mov
inc
icebp
stos
loopne
push
jecxz
sti
push
lods
les
test
outsl
sub
push
mov
mov
jecxz
je
cmp
cli
mov
mov
xchg
repnz
pushl
das
ss
mov
sar
mov
popf
jo
das
mov
jl
daa
lock
jb
mov
mov
mov
xchg
cmp
repz
mov
push
add
insb
pop
inc
rcrl
xor
jns,pt
push
ljmp
mov
or
leave
mov
and
aad
sbb
push
hlt
pop
xchg
xor
add
jae
xchg
outsb
aam
lahf
or
test
cmpsl
xor
aam
or
stos
sbb
xor
cmp
push
clc
xor
xor
push
push
test
mov
add
mov
outsl
sub
dec
mov
xor
cld
sbbl
out
jo
test
jle
arpl
mov
adc
jne
aas
ret
sti
xor
mov
arpl
in
clc
mov
popl
jecxz
xor
mov
movsb
adcb
stc
xchg
stos
in
sub
mov
sahf
dec
movsl
and
xchg
xchg
icebp
test
jnp
or
movsl
repz
lock
into
insb
mov
push
decb
leave
mov
sbb
clc
mov
mov
mov
jae
clc
xchg
cmp
jb
icebp
sbb
inc
jmp
mov
mov
push
cld
sbb
mov
pop
or
scas
cli
xor
out
fs
xor
mov
and
inc
jmp
fsubrs
mov
xor
out
mov
sar
cmc
out
push
imul
and
jo
ja
mov
dec
fs
stos
sbb
mov
pushf
cli
je
jo
jmp
jecxz
repz
mov
lret
jae
test
enter
push
lods
jb
ds
fsubs
pop
mov
cmp
mov
insl
xor
xchg
jb
adc
jae
fcom
in
xchg
jmp
loopne
ss
mov
sub
jnp
sub
cmp
fnstenv
xor
and
jb
popa
scas
xor
push
clc
insb
insb
js
jecxz
mov
cld
imul
cwtl
outsl
mov
lods
mov
gs
mov
sub
popf
negl
mov
in
mov
imul
add
stos
xchg
cli
mov
sar
push
mov
lods
lods
cmp
stos
and
xor
mov
sahf
jmp
test
loope
ja
imul
jl
je
or
out
lcall
mov
test
insb
mov
jb
mov
shlb
add
mov
mov
pop
add
xor
sub
sbb
daa
icebp
js
cmpsl
inc
pushf
stc
cmp
sbb
cmp
fwait
arpl
xchg
xor
nop
cmp
stos
lcall
sbb
gs
jl
xor
cwtl
pop
repz
test
and
adc
mov
int
inc
je
iret
inc
or
notl
mov
xor
sub
inc
mov
mov
cli
jp
mov
jge
pop
clc
jbe
test
idivb
lds
jl
mov
mov
mov
mov
loopne
cli
xor
cld
jecxz
sarb
pop
pushl
repnz
and
mov
cmp
sbb
dec
xor
add
xor
cmp
pop
xor
insb
pop
fbstp
popf
sub
mov
lock
mov
imul
in
mov
lcall
negl
cmp
decb
test
jns
cmp
in
ja
mov
mov
call
shll
mov
in
lods
xchg
leave
cmp
test
mov
cli
test
cmp
jb
mov
shrl
scas
movsb
ss
ljmp
mov
outsb
jecxz
mov
sub
mov
mov
xchg
outsb
mov
xor
mov
cli
sarb
xor
call
sub
lret
mov
stos
scas
xor
pop
gs
stc
mov
test
in
xor
icebp
mov
cmp
jl
jo
jg
mov
cmpsl
pushl
mov
pop
inc
stc
lods
push
je
aas
mov
xor
xor
mov
mov
push
pop
jl
add
and
popa
xchg
and
repz
idiv
pop
sub
mov
inc
mov
push
cmp
aaa
in
jnp
insb
xlat
out
jae
jle
stc
xor
loopne
imul
sbb
mov
in
mov
mul
xor
shll
jo
insb
xorb
pop
frstor
clc
rcl
ja
cli
xchg
out
clc
stos
imul
out
mov
cmp
add
pop
mov
pusha
mov
shr
mov
jns
das
xor
dec
pusha
mov
cmp
test
mov
adc
inc
jg
or
addr16
call
inc
iret
mov
or
mov
test
xchg
insb
stc
repnz
xor
jne
mov
adc
xchg
xchg
pop
pushf
fsubrs
jno
imul
je
mov
jecxz
insl
push
jge
jl
cmc
push
jle
mov
pusha
mov
xor
inc
and
out
stc
scas
repnz
es
cmp
mov
scas
jecxz
lea
mov
and
jae
inc
mov
adc
pop
mov
cmp
test
sub
pop
loop
clc
jno
sbb
inc
cmp
pop
data16
addl
xchg
cmp
xor
sub
lock
or
inc
mov
hlt
xor
sbb
cmp
lock
xchg
cmp
jecxz
add
inc
push
aad
cs
loopne
mov
mov
mov
test
sbb
ja
push
hlt
and
push
jne
test
stos
mov
inc
lods
lret
cmp
mov
popa
and
js
cmpb
jecxz
jae
insb
rep
mov
mov
cltd
fs
mov
cmp
xor
push
mov
es
cli
ds
pop
test
cmp
mov
sub
add
imul
mov
lods
scas
mov
mov
adc
mov
jecxz
xor
cmp
aad
ja
xor
stc
push
cmp
ss
divb
scas
xor
sbb
inc
movsl
incb
xchg
imul
jno
lock
mov
std
shrb
test
incl
js
icebp
bnd
out
repz
loop
loop
pusha
add
out
fldl
inc
add
scas
aas
pop
mul
lea
test
mov
in
xchg
sti
sbb
jo
xlat
test
jge
mov
jae
xabort
sbb
xchg
xchg
push
jo
ja
ja
dec
adc
jno
push
xchg
lds
repz
jmp
das
nop
sbb
cmp
sbb
mov
leave
mov
aaa
dec
pop
stos
pop
stc
sbb
inc
in
mov
mov
test
hlt
jl
fnsave
mov
add
mov
ja
test
jae
xor
mov
adc
arpl
lcall
shlb
jns
and
pop
sbb
mov
jmp
add
jle
decb
xor
mov
push
mov
mov
mov
or
scas
cmp
cmp
sub
sub
lods
or
mov
sbb
mov
xchg
loop
mov
ja
sbb
cmpsl
cmp
jecxz
call
das
inc
das
shr
xchg
xchg
cs
imul
mov
push
out
divl
mov
aas
mov
add
pop
jge
mov
movl
xor
arpl
cmp
mov
adc
test
mov
js
lock
loop
scas
inc
mov
pop
mov
aas
mov
jl
aaa
out
jecxz
pop
movsb
jnp
mov
repnz
cmp
cmp
lock
jp
lds
cmp
arpl
test
stos
cld
sub
test
fimuls
cmp
lahf
mov
cmp
add
sub
loopne
cmp
scas
out
cmp
cmp
xlat
sub
add
in
inc
push
mov
int
lea
into
xchg
inc
mov
loope
clc
mov
mov
sbb
mov
hlt
mov
mov
popa
fsub
mov
mov
cld
mov
loop
clc
mov
add
in
hlt
mov
xchg
mov
clc
cmp
mov
ljmp
mov
loop
cld
incl
js
pop
in
cmp
iret
mov
sbb
cmp
cmp
aam
aas
sahf
pop
repz
inc
jne
out
xor
cmp
mov
jmp
mov
arpl
jo
jb
sub
clc
test
jno
sbb
clc
cmp
clc
xchg
jg
int
xor
xchg
cmpsl
mov
mov
push
xor
cmc
pop
in
in
inc
mov
mov
ds
hlt
dec
loop
inc
push
jb
push
and
cmp
test
scas
je
cvttps2pi
test
inc
adc
inc
pusha
jecxz
ret
fwait
ret
ss
mov
jmp
icebp
mov
inc
dec
jl
addr16
xor
mov
adc
out
test
sbb
and
out
mov
and
jmp
mov
lods
jns
bound
js
xchg
das
sub
in
ret
mov
loop
mulb
jp
pop
mov
or
lcall
xor
and
ss
and
adc
scas
test
mov
or
xor
xchg
jecxz
cli
and
sub
fwait
cmp
mov
add
and
imul
mov
fidivl
aas
mov
jae
rsm
scas
insb
movsb
negl
das
testb
cmp
loopne
jo
test
cmc
arpl
sbb
jecxz
pop
mov
js
dec
jle
mov
mov
lods
mov
ds
loop
jno
imul
push
push
ret
jns
lds
cmp
jo
pusha
andb
aad
add
mov
mov
jmp
scas
loopne
imul
icebp
data16
movsb
sub
jmp
jg
imulb
or
idivl
pop
repz
sub
and
incb
aaa
mov
hlt
push
pop
push
rcl
in
or
inc
aaa
xor
pushf
scas
mov
cltd
test
insb
stc
mov
xor
jmp
jae
mov
imul
shrl
jns
and
push
mov
jecxz
outsb
pushf
idivb
cmp
aas
xchg
pop
push
xor
sub
push
test
lods
ds
hlt
mov
test
pop
out
test
push
mov
mov
jb
mov
pop
and
mov
mov
test
jno
mov
mov
fdivp
sbb
pop
daa
and
mov
sub
clc
pop
js
xchg
in
add
mov
mov
cld
mov
push
gs
jecxz
mov
jo
mov
shlb
xlat
mov
mov
arpl
movsl
pop
xor
xor
stc
xor
mov
mov
iret
ret
adc
cmp
mov
icebp
jl
js
mov
mov
mov
mov
add
fisttps
xchg
cmp
popa
xor
push
mov
mov
dec
mov
dec
loop
insb
xchg
arpl
dec
ret
enter
and
je
rorb
push
mov
pop
scas
stc
or
mov
inc
mov
add
and
cmp
mov
and
cmp
xchg
mov
mov
add
adc
fidivrl
dec
lock
mov
scas
out
cld
pop
test
in
negl
lock
adc
push
mov
dec
xor
scas
clc
mov
cmp
imul
and
cli
shrb
fdiv
jp
out
mov
pop
divb
fwait
add
loop
mov
std
and
das
inc
scas
jl
jp
push
or
std
add
icebp
fsubrs
test
xchg
mov
mov
push
fdivrl
lods
sub
add
or
insb
mov
hlt
mov
lock
xor
jo
pop
cmp
cld
gs
enter
or
mov
xchg
mov
mov
push
pop
jmp
adc
push
push
popa
dec
andb
mov
pushl
ss
push
pop
cli
icebp
out
fildl
rcrl
mov
arpl
cmpsl
in
cmp
jae
xchg
jecxz
and
sub
xor
adc
lock
inc
rorl
bound
cmp
mov
mov
mov
mov
mov
js
cmp
lock
jns
hlt
jo
sbb
jecxz
cli
test
jl
xor
mov
stos
loop
icebp
push
and
mov
ss
xor
and
jae
fstl
pop
inc
jns
stos
negl
mov
jg
cmp
aaa
ss
mov
jae
ret
jge
ret
mov
rolb
scas
test
jp
out
mov
sub
test
stos
mov
imul
pop
lods
mov
cmc
jg
ljmp
cmpsl
add
test
ret
sbbb
mov
js
not
mov
mov
gs
jae
mov
gs
dec
cli
test
pop
mov
test
mov
aaa
cwtl
push
xor
dec
xchg
repz
cld
popa
sub
insb
and
ret
dec
inc
cmpsb
ljmp
test
mov
mov
xor
mov
int3
jo,pn
bnd
push
pusha
mov
cli
hlt
jg
cmp
xor
push
lods
fldt
fistpll
hlt
mov
mov
mov
xor
mov
shrb
and
imul
sbb
fdivs
jp
mov
aaa
addr16
mov
mov
mov
lock
mov
mov
push
push
xchg
pop
rcl
mov
pushl
rclb
cmp
fcomip
jns
call
jb
push
imul
je
and
movsl
jecxz
js
xchg
and
test
sub
lea
inc
sbb
stos
clc
lods
inc
cld
jno
fistps
fsubrs
inc
and
sub
push
jecxz
lds
xchg
mov
sub
xchg
test
xchg
mov
imul
test
lods
xchg
out
or
pop
daa
into
push
cmp
repz
push
ds
stc
jl
mov
add
out
mov
push
or
jmp
xlat
xor
pusha
xchg
xor
inc
cmp
test
sbb
adc
cld
mov
aaa
das
xor
xor
mov
lds
insb
icebp
pushf
js
dec
test
idivl
and
imul
jl
jns
jp
push
ret
inc
inc
cmpsl
imul
jg
add
xchg
repz
lods
pop
mov
jno
repnz
lods
pop
in
aam
les
mov
mov
pop
cmp
popa
loop
hlt
jns
inc
stos
jo
xor
loop
call
push
mov
cmpsl
divl
imul
xor
and
jp
loope
jb
in
pop
lods
lods
insb
pop
call
test
add
mov
mov
jecxz
ret
cmpsl
xchg
pop
bt
mov
fwait
test
jno
mov
lock
scas
push
jge
or
ss
imul
stos
call
aas
adc
mov
cmp
hlt
mov
adc
cmpl
loope
or
cmp
mov
ja
push
xor
pop
jmp
pusha
divl
cmpsl
push
ljmp
sti
mov
jbe
pop
imul
sbb
stos
stos
jg
cmp
mov
jecxz
out
mov
and
push
outsl
out
mov
lret
mov
ffreep
icebp
out
ds
inc
scas
cli
inc
xchg
pop
and
sbb
mov
xor
sub
ja
jmp
pop
mov
and
jb
adc
lock
movsb
rcrl
jl
mov
push
mov
sub
aaa
cmp
mov
in
divb
jl
cli
imul
out
out
cwtl
xor
sub
dec
int
mov
outsb
enter
mov
jne
fs
imul
jns
insb
ret
mov
cld
add
xor
sti
in
push
xchg
jp
mov
out
xor
fidivrl
sbb
int3
jae
test
push
pop
call
dec
sbb
mov
pop
mov
sbb
out
lock
pop
push
sarl
js
mov
or
mov
jno
icebp
call
cmp
jnp
add
push
data16
push
in
stc
xchg
sub
subb
clc
in
mov
mov
and
cmp
inc
jp
pshufw
sub
scas
jecxz
clc
jno
fwait
bnd
shl
mov
xor
addr16
cmp
cmp
push
dec
inc
test
sub
add
mov
inc
or
stos
fs
jae
mov
cld
jg
mov
mov
xor
mov
mov
mov
xchg
mov
lock
ds
push
addr16
mov
fldenv
cmp
repnz
xchg
xchg
jp
inc
fdivs
xor
lahf
sub
clc
add
xor
mov
xor
jno
push
mov
mov
cmp
sub
test
fsubl
mov
cs
mov
push
stos
ss
jp
pop
and
inc
imul
je
jnp
lea
push
mov
cmpsl
xlat
jae
xlat
lods
dec
xchg
adc
mov
mov
mov
or
popa
or
sub
ss
lock
push
xchg
lcall
jb
jno
notl
jecxz
jl
adc
pushl
scas
xor
das
subb
xchg
inc
mov
cli
jae
jb
ds
mov
xor
mov
out
mov
adc
inc
dec
xor
mov
sub
cwtl
cmc
xor
mov
pushf
cltd
sub
popa
repnz
mov
and
test
arpl
xchg
call
fisttpll
fldenv
xchg
push
scas
divb
or
popa
repnz
xor
jno
sbb
xchg
div
mov
cmp
repz
hlt
clc
cmp
pop
cmp
cmp
lahf
push
sub
hlt
add
ds
pop
adc
rol
mov
shrb
or
testl
xor
adc
test
ss
sbb
arpl
push
ds
push
inc
jo
loop
cmp
movsl
jl
mov
cli
mov
jno
add
out
test
sub
dec
repz
idivl
test
xor
xor
loopne
cmp
fnstsw
aaa
mov
cmpsb
sub
jmp
arpl
cmp
and
dec
icebp
cmp
lods
aaa
xor
stos
add
iret
arpl
push
in
cmp
jo
cmp
sahf
lcall
adc
icebp
stos
and
xor
pusha
cmp
xor
sub
in
sahf
popa
jb
addr16
div
rclb
cmp
mov
and
cli
cmp
movsl
pop
jl
and
fs
push
jg
mov
bound
cmpsl
je
jmp
notl
ljmp
test
test
or
mov
add
out
jb
sub
mov
sub
fldcw
test
shlb
pop
mov
mov
cs
mov
aaa
inc
inc
cmp
cmpb
idivb
xchg
rol
inc
mov
add
and
arpl
fwait
jecxz
jnp
jb
lods
lods
xor
test
icebp
out
xchg
arpl
sub
mov
mov
push
hlt
sarl
or
push
cmpb
out
mov
sub
repz
mov
pop
and
add
xchg
lds
fcomps
cmp
lods
mov
test
mov
ja
cmc
inc
repz
lods
stos
mov
mov
jb
inc
add
mov
int3
add
push
rol
das
pop
mov
add
cwtl
jmp
test
scas
fidivs
mov
mov
pushf
cmp
xor
mov
and
fcoms
jp
shll
movsb
jg
adc
mov
in
jecxz
stos
clc
das
jae
xchg
insb
lock
cs
in
pop
mov
stos
xchg
mov
in
popa
mov
jecxz
and
mov
shlb
jl
lds
insb
lcall
js
xor
mov
push
mov
imul
inc
jns
loope
or
jle
xor
test
jmp
xchg
fldenv
mov
sub
loop
add
push
mov
cli
mulb
inc
xchg
das
mov
int3
mov
icebp
aas
mov
jmp
fcoml
xchg
xchg
or
cmp
xor
mov
stos
mov
enter
in
clc
push
jno
xor
addr16
icebp
cmp
cli
inc
outsl
push
mov
jno
stc
cld
or
int3
sahf
fistpll
mov
xchg
jo
jmp
bnd
arpl
jecxz
cmp
dec
lock
mov
insl
outsl
mov
or
nop
add
cld
insb
outsb
mov
js
xchg
mov
stos
pop
mov
jp
sbb
cmp
sbb
je
negb
js
push
mov
jns
icebp
jb
and
jmp
adc
test
hlt
outsl
jp
cmp
pop
push
pop
mov
push
stos
sarb
out
inc
adc
in
dec
test
lahf
cli
push
mov
sub
mov
or
add
jl
mov
mov
out
cmp
aaa
sbb
mov
or
xor
cmp
out
int3
jb
adc
cli
dec
jno
pushf
adc
repnz
stos
mov
mov
out
sub
out
xor
js
sub
dec
icebp
subl
aas
jecxz
inc
arpl
jecxz
aaa
xchg
sbb
xchg
inc
mov
add
and
mov
mov
ficompl
imulb
pop
cli
cmp
xor
daa
jne
jg
sbb
mov
idiv
jo
pop
xor
xchg
and
out
mov
cmpsl
pop
ss
lods
inc
ss
mov
hlt
xchg
ja
sub
fsubp
and
mov
or
mov
inc
cmpsl
out
jbe
in
inc
cmp
scas
nop
stos
repz
scas
mov
lock
mov
insb
lahf
sub
mov
xchg
push
lds
cmp
mov
loop
and
sbb
ret
in
mov
cs
pop
cmp
test
je
inc
sbb
lea
loop
loop
mov
jl
shlb
pushf
cmp
lods
mov
mov
insl
pop
movsb
cmp
xchg
push
add
mov
lret
out
icebp
inc
dec
out
popa
pop
and
jp
clc
jns
sub
lods
jmp
daa
arpl
cmp
and
enter
xor
jnp
in
push
notl
jns
cmpsb
repz
mov
scas
sbb
cmp
jb
jp
add
jge
mov
adc
jne
inc
add
jb
jl
dec
bound
addr16
ss
sub
lods
cmp
mov
ret
cltd
push
icebp
jp
sub
mov
stos
addr16
ds
leave
fwait
pop
xorb
shl
jno
push
cmp
mov
popa
cs
lds
in
repz
mov
xor
arpl
repz
xor
or
jp
insb
data16
sub
xor
push
jmp
mov
idivb
cltd
cmp
push
repz
mov
idiv
jp
adc
xor
xchg
test
mov
int
cli
jl
scas
mov
xchg
bound
mov
frstor
mov
addr16
cmpsl
pop
mov
mov
mov
xor
repnz
scas
xor
pop
mov
cmp
lods
mov
das
stc
test
jns
inc
jo
js
adc
mov
je
addr16
arpl
mov
mov
sbb
mov
xor
arpl
jns
dec
es
sbb
push
cld
lods
icebp
cmp
pushf
push
mov
mov
cwtl
imul
js
mov
stos
mov
jb
dec
insb
addr16
mov
imul
lea
ret
or
lea
mov
stc
cld
jecxz
out
ds
mov
ljmp
call
and
rolb
or
hlt
movsb
rcrl
clc
mov
je
insl
incb
xor
in
add
jp
cmp
in
sbb
and
stc
mov
sbb
ds
mov
jge
jp
mov
pop
mov
ja
addr16
arpl
jb
jmp
push
push
movsl
pop
mov
add
repz
fs
out
repnz
shll
popa
idivb
gs
or
jg
bound
mov
enter
arpl
and
fbld
movsb
nop
push
clc
xor
incl
addr16
je
jae
xor
mov
and
mov
stc
pusha
imul
mov
pop
gs
pop
and
movsl
shlb
sbb
cmp
jo
sub
lock
call
xor
pushf
mov
jns
jge
sbb
pop
mov
xor
adc
clc
aad
mov
ja
dec
nop
xor
mov
bound
in
ret
popa
fwait
xor
gs
mov
jb
out
mov
xchg
pop
andb
sbb
and
adc
insb
and
sahf
cmp
ja
std
loopne
cmp
notl
xchg
xor
imul
lahf
aas
ds
add
push
mov
jno
dec
xchg
push
xchg
and
cmp
mov
or
lret
fsubrl
mov
in
jmp
mov
mov
mov
jp
cmp
pmuludq
add
fs
sub
jnp
test
jo
mov
mov
pushl
pusha
scas
cli
mov
clc
jo
fninit
jae
test
and
mov
jp
xchg
jmp
push
sbb
loopne
imul
ljmp
and
test
xchg
mov
test
lea
mov
jge
jg
sysenter
sub
cmp
jae
out
sub
mov
imul
xchg
xlat
add
jno
lret
rcrl
cld
sbb
ljmp
xor
jno
lahf
mov
jnp
xlat
push
push
and
sahf
sbb
cli
lods
inc
jno
push
xchg
push
xor
sbb
out
imul
mov
jb
mov
insl
sahf
cmp
daa
std
mov
cmp
loop
and
je
sbb
cs
shlb
imul
mov
ja
imul
scas
and
xor
mov
jp
clc
add
cmp
xlat
test
popf
push
jle
stos
mov
pop
and
dec
cld
xchg
xchg
sub
aaa
icebp
aad
icebp
loop
pop
inc
pop
lock
push
jl
xchg
fstpl
js
and
icebp
clc
push
xchg
cmp
mov
push
mov
testb
jb
shrb
insl
faddl
xor
imul
roll
xor
jge
fs
jg
mov
cld
pop
test
cwtl
mov
cli
mov
mov
repz
push
jo
idivl
jg
int3
mov
stc
loop
adc
ds
lods
clc
or
cmp
sbb
jl
push
adc
inc
arpl
mov
stos
sub
jmp
or
std
repz
xor
stos
xor
cmp
in
dec
xchg
pushf
scas
leave
js
jo
cmp
jb
clc
inc
xchg
mov
int
divl
sbb
cmpsl
pop
jp
xor
and
xor
mov
dec
scas
dec
cmp
mov
lock
mov
repz
and
dec
and
ret
cmp
icebp
mov
push
cmpsb
xchg
movsl
and
cmp
test
hlt
push
or
dec
mov
mul
cmp
mov
mov
adc
or
filds
jecxz
mov
mov
subb
scas
test
add
adc
clc
imul
jnp
adc
pop
push
jb
rcll
xorl
aas
jae
xor
mov
shr
xor
xor
ret
sbb
cmp
push
sub
adc
mov
aas
repz
mov
jo
push
cli
mov
or
insb
stc
imul
dec
xchg
ret
fidivrs
stos
test
xor
sub
mov
mov
jae
test
out
fbstp
pushf
imul
jns
movsl
stc
scas
sub
clc
mov
mov
test
push
jbe
pushf
xchg
pop
mov
aaa
xchg
push
clc
or
sbb
repz
fs
daa
jne
pop
xchg
sbb
lods
and
imul
lods
repz
ss
fsubrl
cld
ja
push
gs
and
adc
push
cmp
push
add
icebp
cmp
adc
sbb
xchg
push
hlt
inc
loop
xor
icebp
sub
sub
and
jl
push
push
jno
stos
jne
je
notl
bound
jl
xor
mov
cli
mov
orb
and
cmp
sbb
xchg
lods
stos
out
xchg
add
insb
adc
jno
ss
stc
out
adc
lods
lods
cmp
adc
ds
adc
mov
push
dec
ror
stos
mov
mov
sub
fcom
cs
out
mov
mov
mov
and
in
movntps
ja
jno
arpl
mov
scas
mov
xor
jecxz
adc
and
loopne
xor
jp
pop
mov
cmpsl
sub
subb
in
sub
add
xor
ja
mov
pusha
sbb
push
or
pop
cmpsl
in
mov
sbb
mov
test
fld1
lahf
mov
rcrb
scas
adc
inc
jae
mov
cltd
adc
cmpsl
lahf
sub
pusha
and
xchg
adc
jne
sbb
or
lods
mov
clc
sub
sbb
and
jns
jmp
mov
xor
mov
cmp
fdivs
cmp
ds
pop
inc
xor
cs
sahf
mov
cld
add
xor
sarb
scas
lods
add
or
jg
xor
push
dec
popa
lds
dec
jns,pn
test
sti
ja
loope
jl
mov
mov
jo
shrb
dec
arpl
mov
rcrb
cmp
and
mov
xchg
add
sub
scas
jl
xor
mov
cmpsb
test
addb
out
cmpsl
xor
imul
mov
mov
bound
cmp
adcb
jmp
lock
js
fnstenv
adc
cmp
das
sbb
mov
adc
and
sbb
and
sbb
adc
cmp
std
outsb
test
test
mov
mov
arpl
push
out
movsb
or
insl
mov
clc
ret
arpl
push
cmp
cmp
pusha
inc
mov
dec
scas
pop
push
clc
inc
jecxz
clc
xchg
lods
mov
popa
and
bound
repz
push
insb
icebp
ljmp
mov
pushf
xor
xchg
mov
lods
mov
add
jp
repz
pop
stos
or
in
mov
mov
lret
rcrb
jno
sbb
dec
popf
xor
test
idivb
sub
fwait
push
mov
test
arpl
gs
xlat
jae
mov
xchg
push
sbb
mov
aaa
aad
xchg
lock
adc
notl
pop
scas
ret
mov
jbe
shlb
shll
sahf
test
stc
nop
imul
sub
jo
or
movsb
out
mov
aas
imul
xor
mov
or
add
mov
jno
mov
cmp
cld
jae
jns
mov
add
stc
xchg
imul
mul
clc
je
mov
sbb
xchg
or
adc
inc
pop
shlb
jmp
sub
icebp
out
xor
jnp
jo
nop
push
scas
mov
ds
add
mov
movsl
mov
xor
jle
mov
das
adc
mov
je
cli
mov
mov
lock
in
rcrl
addl
cmp
push
sbbb
repz
xor
mov
bound
mov
cld
inc
out
cmpsl
aaa
mov
arpl
outsb
addr16
push
in
jge
fidivrl
lock
shlb
cs
scas
in
cld
jge
pop
mov
xor
xor
mov
imul
int3
fbstp
popf
xor
and
stc
adc
imulb
mov
popa
add
and
xor
mov
pusha
jbe
je
sub
add
ds
mov
testl
mov
mov
add
stos
xor
je
cmp
ds
xor
fimuls
sub
mov
dec
mov
mov
scas
popf
and
cli
adc
in
clc
inc
js
arpl
cltd
sub
mov
mov
and
stc
or
out
and
lods
xchg
and
in
aas
mov
inc
cmp
mov
jo
cmp
hlt
cmp
jo
dec
jb
pop
pop
xchg
adc
jae
mov
mov
xor
addl
stos
sub
mov
adc
inc
aaa
out
stc
push
sub
mov
out
out
add
out
add
cmc
idivl
sbb
inc
fisubl
lret
mov
or
xor
mov
std
mulb
and
adc
xchg
xor
bnd
test
sbb
out
inc
adc
cld
aam
mov
mov
ret
rcrb
ret
mov
scas
jmp
bound
jmp
add
dec
jmp
inc
in
cld
leave
mov
jae
xor
negl
mov
xor
jg
jle
jb
test
xchg
pop
cmp
mov
mov
mov
popf
pop
push
jmp
je
mov
in
xor
cs
jbe
int
mov
sbb
push
push
sahf
cmp
mov
cmp
jo
sub
aam
xchg
cmp
jb
cmp
xor
rolb
xor
xchg
cmp
imul
or
gs
in
scas
hlt
jge
pushf
sarb
and
add
movsl
ja
bound
out
and
jo
jbe
nop
sub
insl
aaa
mov
push
lods
mov
idiv
inc
push
outsl
jb
js
push
shlb
jmp
mov
out
cmp
sarb
jecxz
in
cli
xchg
push
fs
repnz
dec
addr16
jno
pop
in
and
lods
mov
mov
jl
ja
jge
test
in
mov
xor
sub
idivb
mov
sub
jns
cmp
mov
mov
das
jp
in
pop
mov
or
sbb
aad
sbb
popf
aas
notl
xor
pop
clc
mov
pop
mov
mov
icebp
fs
dec
movsb
div
dec
cli
mov
sub
mov
mov
sbb
and
ds
sbb
mov
xor
mov
fs
clc
cmp
out
cmp
fnstenv
outsb
lock
cli
arpl
pushl
stc
cli
jb
sub
stos
mov
xor
xor
xchg
loop
cli
divb
loop
mov
stc
repz
mov
inc
pusha
out
ss
sub
mov
scas
aam
lods
js
xor
sahf
sahf
out
idivb
ss
movsb
jmp
dec
sbb
fdivrl
xchg
fcoms
push
mov
adc
push
lea
cmp
js
cltd
mov
sub
dec
loopne
mov
mov
scas
mov
mov
in
outsl
cmp
mov
stos
pop
aas
mov
mov
stos
int
sbb
mov
mov
sub
pop
pushf
ds
mov
js
repnz
xor
ret
js
mov
leave
fs
lea
and
aas
imul
std
xor
sbb
cmpsl
sti
sub
in
sahf
mov
cmp
xor
out
cmp
iret
out
scas
out
adc
xor
mov
fmuls
mov
divb
cmp
clc
mov
cs
sbb
sub
ffree
test
testl
shlb
mov
mov
and
jecxz
negb
inc
pushl
addl
test
aas
out
js
outsl
mov
jae
lcall
aaa
xchg
mov
add
mov
xor
jne
adc
imulb
repnz
clc
in
leave
pop
test
xchg
mov
clc
aas
xor
inc
jecxz
cmp
or
add
lea
mov
push
ret
aam
scas
jl
mov
test
xor
fwait
mov
das
jae
cs
test
or
xor
fwait
stc
mov
adc
jns
inc
insb
mov
mov
test
jb
mov
arpl
jp
jmp
lods
fdivrs
icebp
xchg
ljmp
stc
imul
js
adc
mov
mov
test
pop
fsubr
sbb
clc
stos
or
ficomps
aaa
and
cs
jae
sbb
mov
out
arpl
int
xchg
shlb
and
mov
call
mov
jnp
jo
mov
mov
jecxz
inc
imul
xor
arpl
sarl
nop
inc
sub
xor
xor
pop
fisubs
jg
in
mov
mov
clc
fwait
jmp
pushf
cmp
jmp
push
jo
in
sub
dec
fidivrl
mov
imul
ret
push
lret
inc
xlat
fdivrl
and
jns,pn
xchg
dec
mov
cwtl
xor
fs
push
xor
test
arpl
mov
loop
cmpsl
imul
xor
pop
jge
mov
fstpt
sbb
mov
std
mov
xchg
and
aaa
jno
cli
add
inc
scas
ja
dec
cmp
jb
adc
cwtl
imul
out
das
mov
pushf
dec
pop
cld
stos
repz
mov
jo
daa
clc
jg
jp
adc
cmp
jb
xchg
jge
mov
cli
mov
inc
icebp
jg
mov
int
fsub
shrb
cmp
xchg
insb
loopne
mov
xor
lods
xor
cwtl
data16
sarl
fidivs
div
or
addr16
dec
jmp
arpl
out
mov
stos
js
cmp
mov
mov
xchg
mov
out
jl
add
xor
ja
or
in
out
mov
addr16
div
and
dec
mov
arpl
jg
push
jae
sub
hlt
and
pusha
mov
cmpb
stos
testl
jo
add
ficompl
pop
or
pop
popa
int
pusha
out
mov
stc
pop
pop
and
xor
insb
leave
cmp
out
pushl
sub
cmp
lods
inc
and
sar
mov
fs
gs
std
mov
and
imul
les
test
xor
lret
mov
lock
divb
mov
jb
mov
ss
shll
jecxz
mov
enter
mov
in
mov
mov
sbb
push
jmp
jo
fdivrs
ss
mov
lods
xor
jle
mov
cli
mov
test
imul
inc
mov
jp
sbb
mov
pop
ss
js
loop
out
arpl
and
aaa
mov
into
out
stc
push
test
aas
in
jmp
das
aam
mov
cmp
fsubrl
cmp
mov
mov
xor
repnz
cltd
hlt
je
test
arpl
sahf
dec
mov
jp
adc
cmpsl
jb
jo
and
xchg
xchg
in
inc
stc
lock
pop
clc
push
dec
lods
and
dec
cmp
push
imul
stc
xchg
cmp
sub
cmp
add
adc
repz
sbb
and
hlt
pushl
sahf
lret
sub
xorb
out
aam
test
jns
push
aaa
fs
cmpsl
ja
jno
out
mull
mov
push
mov
mov
lock
mov
out
cli
icebp
mov
pushf
xor
testb
cmp
jne
iret
xchg
clc
xlat
jb
xchg
or
mov
ljmp
inc
lods
mov
cmpsl
imul
and
repnz
mov
xor
mov
in
cli
jle
mov
ds
aam
popf
repz
jae
xchg
jae
out
and
fisttps
cmp
lock
sbb
mov
jno
sahf
mov
ja
mov
pop
test
push
subl
xor
mov
sahf
ret
pop
enter
mov
repz
outsb
jl
push
mov
daa
xor
and
mov
clc
push
icebp
mov
xchg
test
inc
xor
movsl
cmp
cli
lock
mov
sub
scas
fwait
cmp
imul
jecxz
sub
repnz
stc
cs
movsb
pushl
push
cmp
mov
repnz
mov
pop
je
jb
cmpb
mov
mov
inc
and
mov
pop
xchg
xor
and
cmp
xlat
jno
gs
push
cmp
and
clc
ja
negl
dec
lock
jns
mov
cmp
jl
jo
cmpsl
xor
pop
loop
aaa
orb
or
mov
je
mov
push
xor
jno
adc
jo
xor
in
stc
mov
divb
lods
inc
and
adc
cli
jae
or
cli
jl
mov
and
icebp
arpl
out
mov
dec
addr16
jns
shll
ret
loop,pt
jo
xor
add
cwtl
in
mov
jno
adc
rcrb
mov
cmp
mov
cmp
mov
out
mov
mov
mov
jl
pusha
lds
mov
jae
pushf
mov
divl
aas
dec
mov
aas
mov
enter
sbb
test
cmp
sub
sbb
cltd
out
mov
and
xor
clc
int3
jae
adc
sbb
mov
es
fwait
addr16
stc
call
test
js
adc
ja
add
jno
cli
hlt
push
mov
inc
ret
nop
push
xor
xchg
add
mov
lods
scas
sub
into
lock
lea
mov
int3
and
jae
lods
nop
aaa
mov
fs
je
movsb
add
cmp
jge
scas
mov
mulb
rcrb
cmp
aam
lret
repz
jg
arpl
lds
jmp
aad
js
cmp
inc
mov
push
out
sub
xchg
es
daa
bound
test
mov
mov
mov
mov
stos
fdivrl
mov
stos
push
mov
ret
push
test
imul
push
mov
fs
xor
xor
bound
outsb
es
xor
cmp
sbb
scas
arpl
xchg
insl
mov
mov
mov
dec
popa
insb
jmp
addr16
mov
lock
cmp
sub
and
push
mov
xchg
mov
hlt
cmp
rclb
lods
cltd
je
sbb
in
orl
fs
mov
mov
clc
adc
cmp
popa
mov
jecxz
dec
rcrb
insb
js
lock
in
sub
mov
cmp
clc
jo
adc
xor
lret
repnz
jns
add
imul
stos
push
xlat
icebp
test
adc
lcall
mov
sub
scas
add
mov
xor
mov
xorb
popa
movsl
imul
ds
pushf
je
and
add
fsubrs
jno
mov
insb
icebp
or
mov
jp
cld
adc
mov
xor
jp
cmpsb
popa
xchg
push
jns
and
cmp
jae
jns
mov
test
mov
or
jg
or
cld
cltd
xchg
cmp
shr
cld
sbb
cmpsb
cmp
cmp
push
xlat
dec
mov
loopne
out
icebp
jb
insb
xor
cwtl
mov
lock
pop
subb
pop
aas
mov
xchg
and
cld
mov
test
dec
outsb
mov
sub
test
repnz
in
mov
repz
mov
lahf
sbb
push
and
xor
popa
push
xor
cmp
loopne
aas
mov
repnz
ss
xchg
addr16
jns
out
arpl
in
add
mov
das
stc
mov
jp
test
mov
push
mov
fs
je
mov
std
sub
nop
sub
mov
sub
bound
mov
movsl
test
insb
jle
and
cld
pop
or
fs
addr16
mov
je
adc
shr
mov
lret
fcoms
xchg
and
loop
div
repz
in
pusha
add
lods
pop
mov
daa
mov
in
xor
mov
lods
imul
sub
ja
and
hlt
jecxz
mov
mov
je
popa
inc
cli
lods
arpl
cwtl
ss
stos
jecxz
mov
and
fistps
xlat
push
fs
dec
mov
mov
pop
xchg
mov
adc
dec
pop
jl
sub
mov
lahf
mov
xchg
lock
jo
add
mov
jp
xchg
xor
test
cmc
sbb
or
hlt
push
dec
xor
imul
lods
lret
and
mov
mov
fnstsw
dec
lock
jecxz
mov
sbb
cli
stc
insb
scas
imul
test
aaa
js
rorl
cmpsl
push
jb
pop
das
mov
pop
scas
ss
cld
xor
and
pop
fwait
inc
stc
jge
roll
xor
and
mov
stos
call
iret
lods
inc
jae
ja
nop
push
xor
mov
repnz
xor
cld
mov
add
lcall
sbb
cmpsl
stc
cmp
and
mov
shrb
insb
imul
inc
mov
icebp
xor
insl
jae
mov
jge
test
and
stos
js
out
jg
lock
inc
or
test
cld
mov
jmp
xor
sahf
jo
cmp
mov
sbb
xor
mov
insb
inc
mov
repnz
hlt
inc
jnp
xchg
pushf
inc
popf
pop
cmp
out
jl
sbb
mov
add
out
in
arpl
clc
out
adc
mov
sub
ja
popa
mov
sbb
jns
icebp
pop
addr16
sub
repz
pop
inc
cmp
icebp
aas
out
push
stos
xchg
pop
punpcklwd
js,pt
xchg
sbb
pop
xchg
jl
cli
sub
cltd
mov
jecxz
addb
cld
and
repnz
pop
sub
jmp
bound
inc
cmp
cmp
ds
push
fs
mov
cld
movsb
pop
ret
push
mov
bound
cli
or
cli
insb
mov
aaa
push
mov
mov
or
stos
imul
cmp
and
mov
je
and
sbb
pop
lcall
xchg
mov
xor
cs
fcmovbe
xor
aaa
mov
icebp
xchg
jb
xchg
popf
mov
mov
pusha
jl
mov
push
ja
stos
or
jns
mov
out
lea
fistpll
push
pop
movsl
mov
sub
clc
popa
das
aad
mov
aas
dec
ljmp
stos
jb
adc
imul
xor
cmp
cs
out
frndint
out
sbb
daa
xor
aas
fiaddl
dec
sub
cmp
stos
xor
lea
jmp
mov
mov
aas
mov
mov
push
push
dec
fcoml
and
jge
clc
pshufw
in
addr16
arpl
cmpb
jno
sub
xor
in
hlt
fs
mov
in
pop
jo
pop
icebp
sub
dec
adc
mov
xor
push
aam
add
pop
popf
xchg
stc
cli
lcall
repnz
and
scas
push
jle
repz
iret
jb
xchg
je
fmuls
sbb
sbb
test
jns
jp
sbb
or
xor
xchg
fwait
mov
jl
jo
lret
inc
rol
icebp
lods
xchg
je
cmp
pop
push
clc
test
in
adc
jl
enter
into
jl
je
push
shl
clc
cmp
sub
add
cmp
movsl
repnz
lcall
fdivr
lods
jg
pop
cld
dec
out
shl
and
aaa
cs
lock
inc
out
mov
and
shr
inc
stc
stos
je
or
jp
pop
fwait
and
test
negl
fs
jns
xchg
test
jno
inc
cmp
scas
sti
cmp
pop
scas
aam
cmp
imul
jno
jp
cmp
lcall
je
fdiv
mov
in
div
jg
mov
ret
add
mov
jno
aas
sahf
cmp
imul
stc
xchg
mov
scas
jae
scas
scas
mov
mov
push
jns
dec
xchg
jp
sub
mov
rol
outsb
xor
mov
inc
fs
jo
xor
or
push
bound
cmpsl
inc
cmp
cmp
repz
cmpsb
js
jl
jecxz
out
xchg
fwait
nop
push
in
mov
out
and
movsl
sub
neg
inc
or
sub
out
add
mov
pop
pop
adc
and
bound
adc
ss
jns
std
mov
ja
imul
xchg
call
outsl
mov
xor
mov
jecxz
lods
lods
mov
test
scas
icebp
je
stc
mov
stos
es
mov
addb
cld
sub
push
repz
sub
xchg
lods
cmp
shlb
xor
mull
lahf
xor
or
dec
dec
nop
jl
sub
mov
lods
rolb
jb
aaa
jmp
cmp
scas
push
mov
cmp
cs
xor
pop
imulb
jo
sbb
ficoml
add
js
fwait
imulb
xor
rolb
cwtl
or
fidivrl
cmp
adc
mov
mov
mov
xor
jp
cmp
cmp
mov
vmovaps
int3
int
jb
xor
cs
and
aaa
jno
ss
fnstcw
cmp
xor
ja
mov
xor
loopne
mov
es
mov
jecxz
aaa
xchg
movsb
xor
dec
test
dec
add
jecxz
mov
mov
ja
push
dec
test
jb
push
cmpb
push
repz
jmp
xchg
cld
pushf
fsub
test
mov
lret
mov
repz
aaa
idivl
test
xchg
pop
xchg
hlt
imul
sahf
jg
mov
jb
and
cwtl
stos
icebp
mov
sub
mov
test
lods
xor
shrl
cmp
clc
ja
ljmp
scas
repz
cmp
xor
stc
js
and
lea
out
jae
nop
in
jb
mov
in
ds
jmp
and
xor
insl
addr16
inc
inc
js
xlat
idivb
dec
mov
js
repz
xor
pusha
test
divl
js
and
cmp
stos
repnz
sbb
in
cmp
dec
cmpsb
xor
idiv
lds
mov
lret
push
fsubr
popf
mov
and
js
pop
je
sub
out
aaa
adc
sub
xor
sub
imul
cmpsl
pushf
repnz
jl
mov
dec
fs
addr16
pop
xchg
add
mov
xor
repz
cwtl
push
je
scas
clc
mov
mov
cmp
jae
div
cmp
mov
insl
xchg
mov
fisttps
ljmp
and
mov
mov
sub
mov
or
idivl
pop
inc
sbb
int3
cmpsb
cld
fisubrs
xchg
push
test
pop
push
add
pop
mov
jnp
jbe
xor
mov
sbb
mov
add
xor
mov
adc
xchg
mov
xorb
cld
inc
mov
fs
icebp
loop
mov
xchg
and
clc
cmp
adc
jge
sbb
stos
inc
mov
fdivp
push
push
test
popf
fsubrl
dec
mov
shrb
call
jae
inc
movsl
cmp
test
aaa
xchg
cmp
jmp
ret
clc
mov
add
and
insb
cmpsb
adc
cmp
cmp
scas
mov
xorl
gs
mov
mov
jle
and
lcall
push
and
in
adc
cmp
stos
cmp
jb
cmc
sbb
outsl
test
dec
xor
cmp
inc
arpl
loop
mov
xor
xchg
mov
sbb
xor
movsb
pop
xchg
out
icebp
xchg
jno
lock
popf
jae
hlt
cmp
xor
cld
shlb
lods
jl
sub
xor
les
cmp
mov
mov
push
mov
jecxz
loop
out
hlt
lods
xchg
aas
add
pop
inc
icebp
scas
adc
shrl
dec
imul
add
jg
cmp
pop
push
mov
lea
mov
mov
pop
mov
stos
in
aas
imul
cwtl
jg
shrl
lds
js
lock
xor
gs
mov
cld
jb
mov
shl
ret
sbb
jl
lods
cld
out
lcall
scas
cli
test
inc
jno
ds
ja
movsl
fs
jnp
rorb
sbb
std
insb
adc
loope
repnz
mov
mov
fnsave
and
ss
shll
jno
outsl
xor
std
jecxz
imul
push
inc
pop
mov
and
cwtl
push
cmp
xchg
insl
cmp
imul
insb
js
adc
xchg
inc
pushf
xor
cmp
repnz
hlt
clc
sbb
jb
jae
bound
lret
add
mov
cmp
cld
shrl
add
in
pushf
sbb
jns
sub
xchg
das
pusha
push
jno,pt
test
ss
push
clc
aad
sbb
pop
add
mov
jl
jae
mov
xchg
cs
cmp
jno
popa
mov
cld
push
clc
jge
enter
lds
scas
cmp
cli
sub
bound
fdivrs
mov
cwtl
adc
or
popf
pop
and
sti
out
in
push
jp
lods
fs
sbb
leave
sub
sub
mov
and
cmp
addl
jecxz
mov
adc
bnd
jg
jo
pop
mov
js
mov
adc
lods
xchg
or
jae
adc
sbb
out
jecxz
icebp
ss
testl
xchg
or
mov
pop
mov
es
sub
cmp
jl
subb
ds
push
adc
loopne
ja
mov
cmp
insb
adc
adc
ja
insb
mov
rcll
in
scas
push
jae
shrb
insb
fmul
mov
add
and
cli
pop
pop
test
clc
mov
adc
cli
fisubs
mov
je
and
or
popf
sub
inc
das
stc
inc
pop
mov
jg
xchg
cmp
cmp
dec
xor
push
inc
push
xor
jno
xor
pop
jp
movsb
out
mov
outsb
mov
out
cmp
shlb
xor
add
mov
repz
mov
clc
loop
xlat
cld
ds
sub
fwait
movsl
clc
daa
imulb
jecxz
mov
lcall
mov
stos
xor
fimull
xchg
sbb
lods
sbb
dec
enter
jmp
cmpsb
or
cmp
mov
fwait
imull
sbb
inc
scas
xor
cli
pusha
xchg
xor
addr16
movsl
ds
mov
and
lods
adc
push
aam
ss
iret
call
cmp
fsubrp
pushw
xor
out
mov
outsl
jmp
cmp
les
mov
lock
xorb
sub
pop
jo
mov
or
mov
jmp
xlat
mov
mov
jmp
cmp
mov
outsb
mov
out
icebp
mov
sub
push
js
imul
jo
mov
popf
sub
xor
and
lcall
icebp
mov
jg
jp
mov
inc
data16
cld
fcomps
popl
cmpsl
out
mov
mov
clc
xchg
stos
lretw
pop
rclb
sbb
sbb
test
cltd
arpl
jmp
adc
int3
pop
repz
in
out
inc
xlat
inc
or
and
in
and
jb
mov
out
push
test
jmp
loopne
outsl
mov
jne
lods
cltd
add
test
push
das
mov
outsl
mov
jns
mov
push
and
fwait
cmc
jp
sti
mov
out
push
xchg
jmp
sti
scas
into
jecxz
sbb
hlt
mov
xchg
mov
xchg
sub
inc
or
repz
xorl
outsl
js
xchg
mov
stc
arpl
imul
and
movswl
xchg
lret
ds
repnz
enter
push
lahf
add
outsl
rclb
aas
lahf
sub
add
fcompp
mov
xchg
jno
mov
or
loope
push
sub
pop
int
push
xor
xor
xor
mov
ja
push
scas
popa
sub
inc
xor
adc
arpl
add
mov
test
mov
sub
sub
out
or
add
mov
or
inc
dec
enter
dec
aam
adc
test
sub
mov
xor
inc
lods
xor
repnz
les
jae
lods
ds
jno
jne
psllw
clts
test
jecxz
sub
test
push
test
shlb
ds
jae
jp
popa
ljmp
in
xor
je
pop
cmc
xor
scas
jb
stos
xlat
sahf
je
test
test
ret
jno
jno
jb
inc
add
cmp
xlat
fmul
cmp
imul
cld
jle
mov
inc
test
sub
jb
stos
sub
scas
repz
imul
jae
fldenv
jns
aas
insb
xchg
jb
outsb
ja
int
sbb
sub
jae
mov
sub
adc
inc
rclb
mov
jg
cmp
pushf
xor
push
mov
xor
imul
cmp
ss
mov
xor
cmp
cmp
push
in
hlt
popa
push
aas
mov
jmp
mov
outsl
cmp
push
insb
ds
jae
repnz
cmp
mov
mov
lock
jp
mov
jmp
jg
sub
bound
inc
sarl
ret
xchg
jae
lcall
mov
sub
cmpb
repz
or
dec
imul
ss
je
mov
bnd
jb
repnz
push
mov
jns
ss
jo
insb
cmp
jp
lods
rep
aas
jmp
mov
pusha
aaa
scas
cld
jno
jl
mov
xlat
cmp
popa
mov
and
xor
cmpsl
clc
in
mov
scas
sbb
jmp
jo
add
push
idivl
cld
or
jg
mov
out
lods
mull
shlb
mov
cld
stos
xor
lock
fdivrs
mov
jo
ss
xor
ret
fldt
clc
in
and
jns
mov
mov
sbb
imul
sub
aaa
movsl
jae
sub
cld
jo
in
add
movsl
jns
stos
cmp
mov
cmp
fnstcw
pushf
mov
repnz
ds
pop
dec
xor
stc
hlt
in
push
out
dec
popa
sub
mov
jo
mov
repz
jp
push
and
rcl
cmp
push
xchg
cli
repz
insb
dec
out
sub
push
pushf
mov
stc
je
xor
ja
pushf
xchg
xor
outsb
loop
xor
mov
jns
je
mov
cmp
stc
cmp
hlt
mov
mov
lock
jae
mov
jg
cmp
ds
data16
std
cwtl
cmp
jecxz
xor
imul
in
sub
lds
or
mov
mov
fs
push
sub
jmp
cmc
je
loop
jl
jo
loop
outsb
insl
add
and
imull
clc
xlat
mov
and
jecxz
jmp
stc
mov
lods
adc
cmp
mov
cmp
scas
xchg
pop
xor
cli
mov
mov
cmp
add
inc
icebp
mov
cmpsl
mov
xor
insb
je
jmp
xor
fwait
jae
xor
notl
pop
push
xor
ss
add
sub
inc
cmp
js
test
cmp
cmp
lds
mov
jl
pop
lods
fs
cli
lock
loope
sbb
jg
stc
mov
in
xor
js
push
imul
enter
mov
and
pop
mov
cli
cmc
mov
je
insb
xchg
pop
test
jecxz
xor
nop
cmp
insb
jo
stos
xchg
mov
icebp
xchg
in
cli
cmp
ds
mov
and
xor
mov
inc
ss
xchg
scas
sub
jns
or
test
test
je
mov
push
jmp
scas
out
loopne
mov
js
xchg
out
mov
pop
fists
push
dec
jae
aaa
jno
movl
lods
out
sub
js
mov
or
cmp
icebp
pushl
mov
cld
stos
ja
xlat
mov
jmp
movsl
jg
cmp
lock
stos
xlat
out
mov
in
sbb
imul
ds
mov
incl
push
mov
mov
js
test
mov
ret
jge
dec
out
cmp
or
icebp
loop
mull
jo,pn
and
jl
jb
js
sarb
int3
scas
lcall
cmc
cli
jmp
mov
jmp
shl
mov
jl
mov
hlt
mov
loop
sub
subb
pushl
and
lock
mov
mov
data16
xchg
add
fcoms
jae
push
and
aas
xchg
shlb
aas
call
imul
push
jp
mov
mov
hlt
xor
xchg
sub
xchg
xchg
sbb
cmp
xchg
scas
pop
subb
and
mov
jb
sbb
add
repnz
xor
out
lods
scas
lock
js
xchg
add
jl
xlat
sub
sub
scas
aaa
mov
divl
clc
hlt
xchg
jns
ret
mov
out
and
mov
dec
xor
sub
sbb
lcall
and
xor
sbb
ret
and
jl
mov
js,pt
and
insb
jb
dec
jp
mov
int3
push
sub
push
cmp
sti
sbb
cmp
push
dec
or
inc
pop
jp
push
shlb
cmp
cmc
mov
repnz
cld
test
sbb
out
jb
jecxz
movsb
cmpsl
les
sub
mov
cmpsb
je
sbb
jae
repz
imul
cmp
lcall
fnstsw
cwtl
push
cmp
stc
imul
je
ret
in
aaa
jl
repnz
xor
jno
out
dec
scas
das
xor
loopne
insb
sub
mov
jbe
andl
repz
jns
cmpsl
movswl
adc
inc
push
in
loop
mov
and
ret
xchg
popl
int3
xor
xor
add
mov
jb
popa
adc
scas
xchg
enter
imul
mov
xor
jmp
push
pop
idivl
xchg
insb
inc
mov
xor
mov
out
mov
test
jno
lcall
out
pop
nop
xchg
imul
pop
test
mov
xor
mov
adc
out
repnz
add
mov
fsubrl
dec
je
bound
lea
aaa
xor
jecxz
jae
push
sub
lods
imul
mov
scas
jae
jecxz
inc
sti
cld
dec
inc
iret
cwtl
xor
cmp
mov
xor
push
stos
xor
mov
xlat
fxam
jl
arpl
xor
hlt
mov
ss
push
bound
mov
cmpsl
xor
in
idiv
andl
cmpsl
add
sbb
xor
pushf
loop
mov
mov
mov
mov
imul
mov
insl
pop
and
aaa
push
mov
popa
mov
cmp
mov
cmp
in
mov
mov
jg
mul
mov
scas
imul
in
sub
cmp
cli
test
pop
xchg
clc
divb
cmp
scas
lock
mov
adc
jecxz
cmpsb
dec
mov
jecxz
cmpsl
lods
clc
fistps
xor
mov
sbb
insb
pop
lret
add
ds
mov
hlt
push
test
test
dec
sarb
push
lock
xor
fsubs
je
jecxz
xchg
push
mov
inc
mov
jl
ds
pop
out
jecxz
outsl
call
inc
cmp
mov
dec
pop
cld
movsl
mov
jb
mov
in
mov
into
insl
cli
popf
in
hlt
clc
adc
lcall
mov
jecxz
mov
jo
in
stos
jmp
loop
lock
inc
fcomip
add
pop
repz
sti
cmp
mov
gs
xor
sbb
xor
gs
sub
daa
scas
sti
jmp
jecxz
mov
push
jae
sbb
in
stos
mov
xlat
rcll
mov
je
in
jb
fldt
divb
mov
mov
xchg
lea
loop
jae
rclb
add
aad
test
and
xchg
icebp
sub
addr16
pushf
in
jno,pn
add
mov
push
arpl
mov
insb
test
aaa
push
cmp
cs
add
dec
sub
fildl
mov
das
aam
icebp
scas
mov
inc
sahf
imul
divl
aaa
fdivr
mov
sub
scas
xor
mov
cli
aad
xor
imul
rcrl
mov
cmp
ja
out
mov
dec
call
sahf
mov
jg
sub
mov
mul
jo
or
ss
and
jl
pop
repnz
hlt
sbb
mov
cmp
lods
ss
cmp
test
nop
lods
imul
pop
jmp
push
loop
out
mov
or
jp
xchg
mov
hlt
aas
cld
stos
cmp
div
scas
sub
cmp
and
hlt
mov
cld
lods
sbb
xor
push
scas
pop
mov
test
jo
cmp
sub
mov
out
cli
and
fwait
out
out
mov
sbb
faddp
inc
cmp
cli
xor
hlt
arpl
icebp
mov
nop
xorl
in
in
mov
cld
hlt
imul
jl
jge
pop
cmp
lret
mov
mov
xor
or
icebp
sti
mov
ss
mov
rep
jecxz
push
cwtl
js
mov
mov
pop
mov
ss
pop
sub
cmp
jb
insb
mov
mov
imul
sbb
lock
aas
xchg
sub
mov
sbb
test
mov
mov
or
cli
imul
jno
lock
mov
and
cs
test
jo
mov
dec
mov
mov
test
dec
stos
repnz
mul
outsl
stos
test
xor
xchg
call
insb
testb
bound
sbb
jmp
insb
stos
arpl
pop
lret
test
mov
cli
push
lahf
stc
push
repnz
out
jecxz
mov
dec
out
cld
mov
xor
jo
imul
xchg
repz
xor
xor
jns
mov
fnstenv
daa
lret
and
ljmp
cmp
sub
cmp
icebp
rolb
xor
pop
and
jp
stos
mov
ja
clc
dec
and
out
jp
imul
aaa
mov
repnz
jge
shll
mov
mov
js
jmp
mov
cli
ja
jp
xorl
test
movsl
idiv
sahf
repnz
mov
mov
shrb
insl
cmp
imul
insl
cwtl
xor
jno
js
mov
or
adcl
ss
cmp
clc
cwtl
mov
aas
cmp
in
cli
cmp
xor
inc
mov
mov
jmp
loopne
jp
je
in
test
pushf
lock
mov
add
mov
clc
xor
mov
aas
popa
mov
in
xor
mov
mov
mov
xchg
add
mov
fs
bound
mov
insb
inc
adc
sbbl
mov
cmp
outsl
test
mov
pop
jge
int3
fdivl
movsl
xor
jge
mov
mov
mov
mov
cmp
xor
add
fildll
pop
addr16
mov
and
sti
fidivrs
sub
mov
and
aaa
repnz
repnz
jmp
fs
xchg
xor
lds
mov
and
mov
mov
xchg
jecxz
test
out
cli
cmp
addl
adc
cmp
jl
cli
mov
mov
xchg
stos
stos
aas
test
mov
popa
rdtsc
idivl
mov
push
and
daa
fidivl
stc
jno
jb
sbb
negb
mov
mov
jg
sub
sti
pop
mov
jecxz
mov
enter
mov
mov
sbb
dec
int
test
imulb
and
sbb
cs
icebp
arpl
xlat
and
pop
mov
mov
cld
pop
mov
stos
xor
xchg
cmp
cmp
sahf
ss
stos
sub
push
xor
ret
test
push
shll
fsubl
mov
lods
push
mov
xor
icebp
adc
repnz
cltd
aaa
mov
jno
jmp
aaa
pop
in
popa
insb
mov
xor
int
xchg
push
test
hlt
leave
adc
cmpl
and
lods
mov
jae
lcall
mov
fdivl
push
inc
inc
bound
inc
in
je
push
dec
idivb
test
cmp
mov
ds
mov
sub
mov
mov
cltd
pusha
in
clc
mov
cmp
mov
stos
mov
cmp
mov
lock
xor
or
lds
mov
jg
hlt
mov
js
jp
dec
stc
cmp
icebp
loop
imul
jp
lods
mov
sub
xchg
mov
out
mov
cltd
dec
mov
mov
subl
mov
imul
mov
jo
inc
ljmp
fimull
jne
gs
ss
xchg
pusha
in
cmp
cld
mov
mov
adc
lods
nop
jo
jg
mov
imul
mov
mov
rolb
pop
inc
dec
pusha
test
cmp
inc
mov
out
addr16
movsbl
cli
cwtl
mov
scas
lock
lods
cmp
jnp
sbb
pop
mov
jecxz
insb
sub
orl
jae
xchg
mov
jno
pop
rclb
push
mov
cmc
jecxz
test
mov
mov
cli
icebp
cltd
mov
mov
iret
hlt
dec
fs
xchg
cmp
cld
inc
sub
repnz
lock
mov
in
cli
add
adc
mov
jp
in
jno
je
adc
pop
fisubs
xor
js
and
aas
mov
add
lods
dec
stos
xor
jb
mov
jo
sbb
jne
ret
cli
or
sub
cwtl
xor
enter
xor
jo
cwtl
mov
test
xchg
mov
xabort
daa
cmp
jb
scas
insl
stc
icebp
mov
aas
divb
jl
mov
adc
mov
das
jmp
ss
cmp
aaa
loopne
mov
clc
xor
loop
and
inc
cltd
xchg
sub
ss
sub
icebp
jp
xchg
popf
jle
jmp
je
pop
stc
hlt
jg
inc
test
daa
cmpsb
cmp
jecxz
call
push
xor
or
fs
cld
std
imul
inc
mov
xchg
sbb
nop
mov
sbb
mov
sti
ror
mov
out
insb
out
add
imul
sti
mov
and
repz
cli
xchg
sub
cmp
push
ja
lret
inc
aaa
je
push
cmpsl
inc
lret
jmp
pop
mov
test
inc
xor
mov
adc
add
mov
or
jns
arpl
and
inc
inc
xlat
lods
pop
jne
adc
add
xchg
in
popa
jmp
and
mov
test
lcall
xor
jo
mov
and
fisubrs
arpl
clc
leave
mov
jl
divl
es
xor
pop
lock
jo
test
arpl
mov
xsave
and
xor
out
das
mov
test
out
lcall
mov
pop
pushf
test
sub
ss
scas
xor
dec
adc
xor
stos
mov
sub
push
mov
jge
and
cmp
mov
stos
or
test
sbb
cmp
adc
imul
mov
js
nop
jg
cmp
mov
jge
arpl
bound
jae
loop
mov
repz
div
addl
mov
add
stos
jp
out
out
cwtl
cld
sub
stc
pop
loopne
mov
cmp
imul
in
xor
mov
rolb
cmp
mov
aad
mov
xor
dec
xchg
je
test
jp
pop
imul
stc
rep
ss
shlb
mov
inc
and
mulb
mov
in
xchg
xor
jne
lea
je
insl
and
or
in
mov
cmp
fs
mov
xor
mov
add
clc
mov
stc
push
add
fs
shl
fwait
sbb
sub
mov
aas
mov
jmp
xchg
and
pushf
add
movsl
cli
sbb
lods
mov
jnp
or
jb
jne
xchg
xchg
test
dec
test
test
movsl
cmp
mov
jl
test
or
push
test
mov
pop
test
ds
inc
xor
out
xor
mov
roll
xor
adc
xor
les
mov
xor
aas
xor
mov
xchg
es
inc
xor
xchg
xor
push
loope
test
dec
jb
and
xor
mov
push
cmp
rclb
in
cmp
loope
mov
ss
sub
lock
sbb
clc
scas
push
aam
arpl
mov
repnz
pop
xor
cmp
out
out
clc
jae
mov
xor
lahf
sub
ss
jmp
imul
cmp
dec
xchg
dec
orb
cmp
cld
push
push
sub
adc
pop
sbb
jge
je
mov
jne
cld
in
fdivr
js
sub
mov
jno
or
fisubl
lock
xor
xor
cmp
and
jo
inc
xor
push
mov
mov
jne
xchg
int
dec
mov
mov
scas
icebp
pushf
inc
sbb
out
mov
movsl
in
shl
jle
loop
jg
ds
hlt
and
sub
stos
cmp
and
adc
cmpsl
mov
and
mov
and
cmp
jecxz
rep
xchg
arpl
jl
jl
jbe
or
inc
jecxz
jns
xchg
lods
lock
repnz
daa
jge
pop
imul
or
lods
out
xor
mov
in
cmp
aas
incb
mov
pushl
out
bnd
jecxz
xor
and
mov
mov
xchg
js
jmp
adc
outsl
mov
aam
ss
mov
ret
mov
in
sbb
mov
negl
adc
movsl
icebp
ja
iret
jge
loopne
mov
mov
push
xor
test
ss
imulb
jg
mov
sbb
mov
lahf
imul
aaa
xchg
mov
and
bound
js
testb
push
stos
sbb
pop
lea
testb
xor
and
test
mov
jmp
adc
xchg
repnz
mov
imul
inc
addb
sbb
repnz
idiv
test
ss
mov
mov
cmpsl
arpl
and
mov
repnz
mov
ss
mov
scas
lock
inc
jbe
xchg
cmp
xlat
arpl
popa
imul
lods
and
popa
out
bound
std
and
insb
nop
mov
jg
stos
and
popa
mov
std
mov
mov
xor
xor
xor
mov
cli
repz
aaa
push
lods
xor
xor
ret
insb
pusha
jmp
scas
nop
icebp
idiv
popa
jo
jb
jge
pop
and
xor
imull
sub
rclb
mov
in
adc
inc
movsb
icebp
jb
mov
imul
pushf
test
pushf
rorb
pop
lods
cmp
cmp
mov
push
lret
decb
js
insb
mov
stos
lods
cmp
pop
mov
cld
leave
negb
xchg
mov
arpl
ss
xor
clc
sbb
ds
loope
scas
xor
and
imull
sub
mov
mov
int
jmp
mov
cli
jnp
add
mov
insb
call
mov
repz
scas
aaa
cmp
cmpsl
mov
xchg
out
lcall
je
cwtl
arpl
mov
jb
insb
repz
arpl
mov
ja
xor
sbb
push
sbb
jno
xchg
xlat
sbb
or
dec
and
cmp
add
xchg
adc
xor
rorl
mov
cmp
jb
xchg
and
mov
jno
test
sbb
arpl
ljmp
int
jne
xchg
push
jl
insb
adc
bound
lock
jo
test
mov
or
cmp
and
loop
mov
lods
insl
mov
sbb
mov
jg
cmp
cld
mov
xor
shlb
test
rcl
sti
sbb
movsb
push
rcr
aas
pop
lock
xchg
jmp
xchg
xchg
repnz
inc
xchg
push
jae
aad
ja
mov
xchg
aaa
xchg
push
dec
repz
xor
mov
icebp
inc
and
pusha
cmp
dec
sbb
outsl
mov
stos
ss
xor
xchg
fsubl
dec
jb
loopne
imul
adc
xor
mov
push
adc
ja
popa
pop
cmc
pop
cmp
mov
jo
xchg
jp
adc
and
cmp
into
icebp
jge
xchg
jno
jecxz
cwtl
mov
sarb
mov
push
jae
mov
loop
jb
nop
sub
and
jmp
cltd
mov
sbb
cwtl
lcall
jae
mov
lea
cmp
sbb
arpl
lods
mov
nop
imul
aas
loopne
mov
and
hlt
mov
jecxz
test
mov
sub
loopne
scas
cmp
sbb
in
enter
imul
sub
stc
xchg
je
cmpsl
xor
push
add
jle
add
mov
mov
sbb
push
pusha
jge
aaa
mov
mov
in
mov
mov
cli
lds
stc
sub
andl
lret
cmp
jl
adc
sub
mov
gs
hlt
sub
mov
fsts
xor
div
xchg
imul
mov
in
sub
ds
leave
mov
lcall
outsl
js
nop
fwait
lods
mov
movsb
arpl
adc
imul
inc
ss
fidivs
mov
sub
push
cmp
out
and
insb
gs
xor
in
mov
mov
loope
jb
fs
lahf
dec
sub
imul
lods
mov
cltd
xor
mov
cltd
cli
scas
out
pop
and
fwait
dec
dec
mov
bound
js
adc
mov
cmp
lret
mov
jbe
mov
in
mov
or
test
repz
add
push
adc
and
jnp
sub
sbb
std
mov
pushf
shrb
cs
jo
je
xor
lock
icebp
arpl
push
sub
cmp
bound
addr16
jno
add
ja
lock
push
inc
dec
mov
lds
mov
sub
cmpl
xor
ja
inc
js
push
inc
inc
fidivl
nop
xchg
repnz
sub
cli
inc
mov
scas
mov
mov
cmp
scas
hlt
cld
clc
mov
mov
call
cmpsl
cmp
push
xor
xchg
imul
adc
mov
mov
mull
mov
xchg
cld
nop
daa
jo
divb
adc
arpl
push
repz
repnz
jecxz
jb
aas
dec
adc
mov
inc
enter
in
repnz
cli
imul
push
stos
pop
jg
push
pop
mov
mov
test
aas
jb
repnz
je
sub
cmpsl
mov
sub
mov
inc
lods
cld
imul
lock
mov
push
inc
out
or
push
xor
les
cmp
test
stos
inc
mov
cmp
pop
loop
clc
inc
loopne
repnz
fbld
mov
jl
jb
fmul
stos
cltd
jp,pn
jb
mov
mov
stos
xor
stc
cmp
fidivl
fs
jno
ss
popa
lock
je
and
mov
mul
mov
mov
gs
stc
out
js
adc
adc
sub
lods
ds
adc
sub
icebp
inc
in
inc
ds
adc
dec
out
cmp
sahf
jne
enter
sub
stc
xor
push
nop
das
mov
in
mov
xor
inc
aad
pop
sub
bound
ds
inc
lock
add
mov
jo
jnp
loope
or
sub
xor
loop
idivb
int3
mov
mov
push
jle
cmp
lea
cli
xchg
adc
movsl
inc
or
sub
jp
mov
cmp
cmp
in
cs
jecxz
stos
mov
jno
jb
arpl
xor
mov
cld
mov
jno
in
icebp
scas
xor
or
jmp
jne
push
scas
inc
cmp
cmp
aas
aas
xchg
leave
out
test
adc
orb
cmp
mov
ds
cmpsb
stos
arpl
aas
je
test
cltd
jp
cmp
aas
rcrb
clc
ds
test
sub
mov
pushf
push
scas
inc
add
and
jae
or
cmp
mov
cli
sarb
je
repz
pop
xor
gs
cmc
mov
jge
jl
xchg
xor
int3
cmp
mov
cld
scas
jecxz
nop
ret
ja
js
sub
jp
idiv
jb
xchg
ss
hlt
lock
or
cltd
cmp
mov
test
loop
stos
mov
daa
shlb
add
mov
dec
sbb
jg
push
pop
and
loop
cmp
and
cmpsl
mov
sub
mov
mov
aaa
lock
fwait
ja
sbb
xor
mov
lock
mov
mov
sbb
gs
xchg
pop
std
rolb
divl
mov
mov
xchg
jp
xchg
and
cmp
nop
cli
jb
mov
insb
mov
jle
sbb
cmp
jns
inc
pop
pop
icebp
adc
stc
mov
cmp
je
daa
xor
test
fcomps
mov
mov
xor
enter
scas
mov
pop
ss
fs
jmp
mov
lahf
jb
adc
pop
or
mov
mov
push
aaa
and
loop
mov
enter
test
fnstcw
addl
scas
mov
mov
cmp
sbb
insb
mov
mov
jp
cmp
or
mov
jl
jl
sahf
out
out
mull
jae
idiv
aaa
scas
imul
mov
pushf
lcall
push
jecxz
cmp
nop
jo
pop
lods
pop
push
jo
imul
mov
arpl
sbb
fs
loop
mov
rcrb
lods
mov
sbb
add
jl
push
loop
cwtl
cmp
mov
push
int
aas
aad
jge
js
jnp
ja
lock
les
jb
pop
mov
mov
stc
aas
cmp
fstpt
pop
and
mov
out
mov
pushf
mov
mov
push
mov
add
mov
push
inc
inc
lret
sub
das
shlb
ret
js
insb
jae
and
movsl
mov
stc
mulb
stos
jae
shlb
cmp
dec
or
shrb
adc
jg
hlt
stos
xor
in
sub
mov
inc
mov
mov
imul
mov
shl
movsb
stc
dec
xchg
test
sbb
fwait
sub
bnd
mov
xor
fs
hlt
mull
mov
jns
nop
sub
test
lcall
scas
mov
and
in
imul
or
cld
mov
inc
loop
mov
dec
push
add
sub
fs
mov
lock
sbb
mov
mov
arpl
mov
jecxz
cld
mov
dec
inc
loopne
jae
mov
add
mov
sub
mov
repnz
cwtl
push
cld
mov
scas
xchg
ds
mov
fidivl
out
sub
dec
cmpsl
in
insb
cli
cld
or
cmp
add
mov
scas
lods
and
sub
jo
jge
cmp
js
adc
mov
mov
outsl
xor
xchg
add
sub
push
pop
lret
lock
test
rep
sub
jmp
popa
jb
ret
fisubrl
jae
add
mov
pushl
ss
js
pop
inc
aaa
and
gs
mov
cli
jno
into
jmp
xchg
std
mov
pop
movsl
das
jb
mov
std
fcomp
icebp
mov
in
aaa
inc
jo
test
outsb
shrb
cmp
dec
xor
ljmp
lcall
lock
dec
ds
jl
lods
out
in
shll
out
cmp
jg
aaa
idivb
std
mov
mov
es
jmp
lods
stos
dec
das
sbb
pop
aam
xor
in
cmp
aad
inc
jecxz
repz
mov
or
aaa
lds
cmp
test
xor
or
sbb
arpl
aas
ja
jp
adc
xchg
xor
add
sub
mov
dec
sbb
addl
rorl
ret
xchg
jl
mov
sub
out
pop
xor
movsl
lock
nop
add
negl
lock
idiv
hlt
or
inc
aad
call
notl
lds
adc
cmp
push
cmpsl
ss
sbb
aad
push
jge
into
pop
mov
mov
hlt
pop
sub
lret
mov
xchg
orb
mov
push
loopne
ss
adc
fdivrs
call
sbb
jg
jo
roll
mov
outsl
jno
sahf
inc
jl
or
xor
mov
notl
clc
popa
pop
aaa
lods
xor
sub
xchg
or
movsb
xor
xchg
jno
xchg
xor
mov
mov
aas
jae
and
scas
js
imul
mov
repz
sub
mov
int
cli
imul
mov
fs
push
je
cmpl
imul
addb
cmp
inc
dec
jo
int
fsubl
adc
pop
jo
mov
adc
js
cmp
fwait
repz
and
push
daa
out
sbb
repz
push
arpl
mov
aaa
push
xchg
mov
mov
adc
or
dec
pop
xchg
loop
insb
cmpl
push
mov
stc
js
cmp
xchg
adc
adc
in
pop
xchg
mov
jmp
sub
bound
inc
js
mov
mov
push
mov
jns
lahf
cmp
stos
lret
shl
out
fsubrp
sub
test
mov
js
je
das
push
sbb
mov
sahf
cmp
lock
mov
mov
jl
insb
clc
mov
cld
rcll
jge
stc
inc
pushf
inc
fisubrl
jne
fcomp
stos
cmpsb
mov
loop
aaa
mov
cli
repnz
cmp
mov
jae
insb
xlat
xchg
jg
mov
fnstcw
pop
sbb
cmp
mov
daa
lods
cld
mov
jo
mov
xor
aaa
test
push
pop
jae
ret
testb
jl
push
mov
test
xchg
add
scas
clc
outsl
jo
sub
mov
das
insb
push
test
jecxz,pt
push
pop
xor
imul
mov
xor
jnp
cli
cmp
push
movsb
sbb
mov
mov
jg
sub
mov
jge
insb
addr16
mov
push
mov
fisttpll
inc
cli
cmp
movsl
jo
addl
xchg
in
out
cmp
jb
jl
sub
and
icebp
fdivrs
idivl
sub
jecxz
cwtl
mov
gs
xor
rolb
push
dec
jmp
repnz
pop
fidivrs
mov
sarl
xchg
ds
sub
push
mov
push
imul
xor
call
imul
lds
idivb
ss
shlb
cmp
dec
mov
ds
das
out
pusha
stos
lods
cmp
xchg
xchg
loope
adc
daa
lock
repz
pop
pop
addr16
inc
inc
cmp
sahf
jg
cld
sbb
xor
sub
mov
xor
mov
adc
jns
test
mov
insl
repnz
scas
lods
jmp
xlat
mov
jg
ja
mov
aas
mov
xor
inc
add
repnz
mov
xor
lcall
xor
mov
popa
ds
out
ss
popa
dec
cmp
and
ss
lock
aas
sbb
je
aaa
add
bound
test
fsubrp
scas
test
ds
ret
push
sbb
jae
jmp
cld
aad
clc
lods
imulb
ficompl
mov
and
addr16
jmp
push
addr16
cmp
mov
pop
dec
loopne
je
imul
hlt
repnz
sbb
pause
pop
xor
fwait
icebp
add
cmc
mov
ja
sbb
mov
mov
hlt
and
loopne
mov
pop
add
nop
shl
mov
out
adc
jb
push
fnstcw
test
xor
imulb
cmp
and
jnp
cmp
or
mov
jg
outsb
cwtl
xor
mov
test
and
mov
mov
cli
inc
xor
and
jge
dec
call
jge
pushf
imul
call
jge
jg
lds
fwait
aas
push
icebp
lock
xor
mov
clc
mov
fsubl
stc
jp
addr16
dec
sahf
ja
xor
shlb
outsb
ss
insl
stos
mov
jo
lock
mov
gs
dec
mov
in
sub
ja
insl
mov
jg
jae
lahf
jb
ss
sbb
addr16
jno
lret
xor
shlb
bound
cmp
and
mov
dec
mov
inc
ljmp
lea
sub
pushf
enter
stos
stos
insb
popa
and
repz
and
sub
and
jb
mov
test
push
loop
mov
jp,pt
out
xor
jno
xor
mov
mov
pushl
fistpll
notl
sbb
xor
jmp
into
pushf
repnz
mov
xor
mov
mov
sbb
sub
add
xor
xchg
xor
and
cmp
bound
adc
js
loop
mov
cld
xchg
aas
push
xchg
cltd
xchg
mov
call
idivl
mov
outsb
repz
jns
jp
pop
push
inc
jg
sar
cmp
stc
add
and
mov
stos
push
cmp
cld
xor
xor
cmp
or
pushf
cmp
and
mov
jle
std
xor
cmp
out
and
jns
cmp
enter
repz
decb
fs
test
and
fsubrl
fcoms
cwtl
jecxz
scas
scas
hlt
xchg
ficomps
mov
shll
cmp
pushf
mov
jl
mov
rcll
stc
int
std
inc
and
pushf
test
stc
mov
and
fs
mov
adc
pusha
ds
cmp
subb
and
mov
mov
mov
sub
sbb
mov
mov
mov
fs
daa
fisubrs
mov
out
ds
sub
sbb
jne
mov
stc
scas
cmp
mov
jns
test
pop
mov
jbe
pop
jo
pop
cld
pop
xor
xchg
mov
push
cmp
andl
idivl
push
aas
repnz
xchg
cmp
cmp
out
popf
mov
xor
push
sub
or
repz
mov
dec
out
imul
not
faddp
aad
repnz
ja
mov
stos
mov
push
bound
arpl
imul
fs
popa
sbb
dec
and
imul
jne
mov
push
mull
cmp
jl
insb
mov
outsb
pusha
aaa
jmp
jns
ja
icebp
das
stc
scas
fisubrl
insb
and
mov
notl
bound
je
ljmp
pop
and
test
xrelease
je
jne
adc
xlat
lret
sti
and
add
stos
cli
repz
in
push
fimuls
lcall
jmp
jno
push
lock
imul
xor
mov
mov
pop
sub
cmp
sub
jo
cmp
xchg
lds
mov
mov
clc
mov
mov
stc
clc
jns
mov
aaa
js
jmp
jp
test
lock
mov
cld
dec
xor
cmp
js
dec
jecxz
xchg
bound
popaw
orl
clc
jo
jg
bsr
mov
mov
mov
mov
in
pop
lods
js
cmp
out
jecxz
sbb
dec
xchg
pop
cs
mov
enter
div
bound
add
and
loopne
mov
inc
or
xor
xor
int3
fstl
add
sub
mov
lahf
jge
ds
pop
xor
and
out
xor
in
sbb
out
inc
hlt
add
mov
ja
mov
jns
sbb
jge
or
or
and
mov
scas
cmp
addr16
cmp
sub
mov
lock
nop
fnstenv
clc
mov
and
jb
mov
in
imul
icebp
aas
cld
repz
loop
add
je
xor
idivl
jae
adc
lods
jo
dec
and
mov
insl
mov
mov
scas
lret
cmp
arpl
mov
je
jno
data16
xor
sbb
jbe
clc
cmp
push
je
pushf
mov
stos
xor
cmp
icebp
jecxz
lea
jbe
insl
int3
enter
test
mov
das
mov
mov
clc
cs
mov
mov
mov
sub
jmp
xchg
ss
cli
imul
add
mov
or
insb
jbe
cwtl
cmp
lcall
in
stos
insb
repz
jae
movsl
cmp
adc
fs
lcall
in
imul
lods
adc
mov
jae
ret
mov
bound
sbb
fldcw
cmp
cmp
inc
adc
inc
mov
or
sti
divl
addr16
jge
sub
cmp
insb
in
mov
out
jae
xor
push
ds
repnz
stc
call
pop
pushf
scas
mov
notb
std
or
pop
out
sbbb
icebp
mov
insb
out
stos
cltd
mov
hlt
out
clc
in
ds
arpl
cmp
sahf
dec
insl
push
mov
sbb
jb
cmp
out
xor
jo
xchg
lods
cmp
fmul
xorb
repnz
jns
jp
mov
cs
jnp
test
hlt
js
sbb
enter
xchg
repz
cmp
scas
add
sub
xchg
push
nop
movsl
mov
imul
scas
decl
imul
sbb
lock
mov
jno
add
sub
or
jg
mov
repz
mov
mov
popa
arpl
idiv
lods
stos
pop
or
out
jl
clc
daa
lock
sbb
fwait
and
scas
cmp
ss
lock
test
clc
xchg
lods
mov
lret
cwtl
mov
mov
divb
xor
push
gs
scas
out
sub
mov
push
xor
xchg
fdivs
xor
ret
std
ret
aaa
jae
jecxz
cmp
mov
pop
adc
sbb
sub
adc
sbb
fwait
mov
cmp
jae
lods
and
imulb
insb
sbb
mov
mov
out
add
lock
mov
ss
xor
xor
test
testl
mov
mov
cli
ds
mov
sbb
sub
addr16
pushl
lret
push
je
pop
icebp
xor
mov
imul
cmpsl
sbb
ja
push
rorb
pop
in
pushf
jg
xor
popl
jb
adc
mov
pushl
js
mov
mov
mov
lcall
and
lock
clc
int
mov
cmpsl
xor
test
mov
jo
loopne
jns
stc
mov
pop
hlt
test
daa
aaa
lret
mov
mov
mov
sbb
inc
popa
and
mov
push
ret
adc
push
jp
test
pushf
out
push
cmp
sbb
xor
loopne
sbb
test
out
or
inc
pop
je
pusha
xor
clc
and
iret
les
jno,pn
fs
inc
push
das
xor
xor
or
dec
inc
lods
lret
mov
or
jecxz
mov
xchg
pop
jp
insb
lret
push
movsl
inc
leave
lret
inc
inc
lret
out
adc
stos
inc
fldcw
mov
sbb
cmp
iret
and
addl
jp
popa
stos
inc
and
stc
ja
mov
mov
or
adc
push
sahf
mov
and
xor
mov
dec
mov
mov
jns
jae
xor
inc
popa
out
xor
gs
aad
dec
mov
push
mov
das
imul
fidivl
fwait
les
insb
mov
and
xor
arpl
cmp
cmp
adc
jnp
lea
cmp
idivb
pop
repz
pop
xchg
xlat
jle
adc
or
repnz
or
adc
xchg
sub
mov
mov
xor
jmp
rcr
mov
mov
jno
cmp
and
xor
testl
repz
mov
test
stos
incb
leave
mov
dec
jl
rol
sahf
popa
jmp
and
cmpb
repnz
mov
cli
mov
and
xor
clc
xchg
je
addr16
mov
inc
bnd
clc
xor
cltd
xchg
in
jp
test
mov
sahf
rep
mov
jae
mov
hlt
jp
and
adc
shrb
jmp
lods
inc
mov
or
mov
mov
jmp
test
jno
mov
subb
subb
scas
add
scas
imul
mov
jae
repnz
cmp
arpl
or
and
mov
iret
jo
inc
out
and
mov
repnz
jno
xor
lods
mov
sub
mov
jp
cmp
or
mov
jae
out
scas
and
jg
lret
jmp
or
xor
fs
push
ds
xor
cmpsl
push
test
and
stc
adc
movsl
scas
xor
cmpsl
fisubrs
ja
pop
repz
adc
xor
jae
popa
imul
mov
cmp
das
ja,pt
jecxz
cmp
ret
cmp
push
stc
jno,pt
mov
push
cmp
les
lahf
clc
adc
mov
stos
aaa
dec
int
sbb
insb
cmp
stc
ret
cmpsl
cmp
lock
call
pop
dec
loopne,pn
lods
and
imul
mov
imul
ss
sub
sbb
adc
mov
jo
movl
stos
imul
inc
arpl
divb
mov
hlt
push
cmpl
testl
imul
incb
xor
pop
in
dec
mov
pop
push
cmp
cmp
mov
inc
xor
hlt
xchg
outsl
sarb
cli
cld
lahf
jp
lea
xor
or
leave
or
inc
pop
pop
push
testb
cwtl
ss
ds
xor
cld
xor
lock
cmp
aas
stc
cmp
adc
cmp
mov
imulb
mov
icebp
and
mov
xor
loop
test
lahf
push
or
icebp
and
imul
push
mov
sub
mov
test
sahf
lods
mov
cmpsb
out
out
jae
imul
sub
inc
pop
or
out
lock
lahf
cmp
movsl
xor
mov
mov
mov
add
stc
mov
sub
jns
shlb
mov
jb
jmp
shlb
cmp
mov
mov
mov
std
mov
cmp
sub
movsl
and
imul
fdivrs
mov
popa
mov
icebp
aaa
xchg
mov
daa
jmp
sbb
jns
mov
out
jecxz
mov
jae
sbb
in
xor
and
xor
jge,pt
addr16
mov
push
add
cmpsl
add
imul
xor
addr16
imul
in
test
inc
xchg
adc
icebp
jo
and
xchg
sub
clc
xor
pop
jp
dec
or
repz
and
sbbl
aas
push
and
movl
lahf
cld
sbb
mov
jl
mov
lods
aas
in
mov
add
repnz
mov
adc
sar
xor
lods
xor
addb
mov
insl
mov
mov
in
mov
out
xor
xor
push
adc
xchg
loopne
repz
in
in
data16
mov
subl
sbb
andl
test
mov
jg
mov
mov
je
lahf
aas
mov
push
jo
sahf
stc
ja
push
jns
cmp
or
insl
adc
adc
mov
js
shll
mov
mov
movsl
sbb
mov
je
lahf
jp
push
mov
mov
out
xor
xchg
nop
rorb
ds
sbb
adc
pop
jl
sbb
jns
cwtl
stc
jge
outsb
jo
add
ds
nop
lret
lods
out
das
mov
shll
and
arpl
and
jp
ret
mov
loop
jecxz
jmp
inc
pop
mov
imul
popf
mov
mov
add
mov
pop
xor
pushf
test
mov
pop
clc
mov
sub
loop,pn
jo
test
mov
mov
xchg
lret
pop
fsubrs
xor
cmp
sbb
xor
int
xor
idivl
mov
test
test
mulb
mov
push
cmpsl
out
xor
repz
icebp
fnsave
lcall
jecxz
dec
cmp
clc
sub
mov
sub
div
int3
cmp
in
nop
scas
cli
arpl
popa
popa
in
scas
jl
in
mov
icebp
ss
je
xor
hlt
repnz
bound
and
ss
aaa
popa
mov
cmp
xor
lods
push
sarl
adcl
imul
arpl
mov
jle
xor
jne
js
lret
xchg
jo
push
jl
jns
xor
movsl
stos
cmp
scas
mov
cld
cli
aaa
mov
addr16
imul
and
enter
scas
arpl
and
pop
sti
enter
jmp
clc
stc
adc
nop
xchg
dec
add
adc
xor
shlb
cmp
ds
sbb
sahf
imul
dec
movsl
in
sub
push
pusha
xor
idivl
jae
mov
cld
and
insb
divl
js
mov
in
test
outsl
sbb
aaa
stos
sbb
xchg
mov
test
sbb
mov
mov
xor
movntq
push
and
push
loop
mul
fnstcw
call
mov
mov
sub
mov
mov
mov
sbb
arpl
negl
mov
movsb
fcompl
mov
push
sbb
shlb
mov
mov
jg
xor
or
out
aas
mov
add
mov
int3
adc
xchg
or
ljmp
cmp
inc
dec
int
sbb
jne
fadd
jo
stc
cli
test
mov
sbb
arpl
outsl
mov
push
jbe
imul
rclb
ja
stc
jp
mov
icebp
and
jecxz
mov
jae
jl
popa
out
jno
repz
imul
ja
cmp
call
sub
mov
fwait
mov
inc
scas
je
pusha
mov
jno
rcrl
push
push
bound
bnd
mov
inc
sub
cmp
cwtl
ret
and
xorl
nop
mov
jle,pt
scas
sub
push
push
fwait
mov
divb
xor
jns
add
nop
stc
cmp
xchg
xchg
sub
scas
jns
xor
and
sbb
mov
je
cmp
adc
pop
cmp
jo
push
cmp
push
negl
adc
inc
rcrl
inc
mov
aas
xchg
push
pop
insb
xor
cmp
jecxz
fmuls
xor
imul
inc
test
push
sbb
insb
repz
sub
mov
aas
stos
stc
mov
mov
mov
fwait
push
dec
hlt
and
loopne
mov
mov
js
add
or
mov
jae
sahf
cmp
dec
mov
arpl
out
mov
xor
ja
adc
inc
rcrb
mov
enter
lock
mov
xchg
cmp
cmp
out
mov
rcrb
je
in
ss
repnz
js
mov
std
clc
or
adc
aaa
out
lock
jecxz
out
imul
addb
mov
pop
sbb
sbb
push
mov
add
inc
shlb
add
mov
test
testb
loopne
out
mov
mov
in
scas
out
push
adc
push
test
mov
popa
bound
arpl
cmp
jge
mov
xorl
imul
enter
nop
gs
and
cmp
adc
repnz
jge
push
fs
bound
push
rcr
imul
mov
mov
cmp
xorl
ds
mov
adc
jae
repz
out
cli
mov
cmp
sahf
mov
push
mov
aas
xchg
scas
call
test
sub
stos
dec
scas
mov
es
aas
add
out
aaa
xor
mov
jo
xor
inc
dec
testl
stos
jno
dec
sbb
adc
lock
pushf
clc
xor
cmp
xchg
mov
push
out
mov
mov
scas
ja
mov
lret
cmp
xor
pop
lea
subb
mov
jl
divb
inc
fsubrs
test
inc
sub
testl
or
jb
or
test
clc
mov
jae
cmp
xorb
cld
mov
cmp
call
loopne
cmp
cmp
pop
xchg
dec
addr16
jecxz
mov
pop
scas
and
stc
in
movsl
cmp
mov
mov
jno
cmp
mov
scas
mov
mov
adc
cmp
jno
ds
idivb
jg
sar
xor
xchg
cmp
mov
or
sub
shrb
insb
bnd
out
hlt
out
std
out
mul
hlt
pushf
test
xor
bound
jb
sub
mov
cmpsl
mov
push
lcall
test
mov
jmp
popf
sub
jp
xchg
rcrl
xchg
pop
lods
bound
xor
addr16
fwait
mov
jp
stc
add
clc
mov
push
shrb
mov
mov
aaa
arpl
aam
cld
ss
negl
jns
mov
addr16
cmp
jp
jg
cmp
mov
cld
cmp
push
mov
xchg
mov
imul
clc
jo
mov
adc
and
mov
stos
jp
sbb
mov
jo
sub
and
xor
adc
jo
bound
scas
add
stos
fsubrl
int3
vaddsubps
pusha
ds
aam
pop
scas
repnz
mov
jno
mov
jae
xchg
pop
push
addr16
inc
nop
mov
icebp
jecxz
mov
sub
lret
mov
repnz
adc
aas
xor
imul
cmp
jb
xor
daa
in
cmp
mov
or
andb
xor
and
and
imul
mov
lcall
mov
mov
jecxz
lods
lret
cmp
or
cld
cmpl
ljmp
mov
jb
cmp
push
mov
je
jle
mov
xchg
mov
push
mov
mov
insl
mov
mov
loop
mov
mov
scas
push
scas
aam
mov
mov
rolb
mov
out
jae
mov
sbb
jo
ja
popa
fs
loopne
imulb
clc
frstor
cmp
lock
jns
negb
or
mov
fwait
cmp
gs
into
mov
out
xor
mov
ja
inc
dec
movsb
arpl
scas
push
cmpsl
or
mov
hlt
adc
jg
xchg
and
xor
gs
in
pop
cmpsl
ja
mov
dec
popf
popf
sub
add
mov
pop
and
mov
jg
test
xor
test
out
xor
stc
clc
push
hlt
jb
lock
jp
call
fsubr
loop
mov
jns
and
add
sub
xor
je
add
lret
jmp
les
mov
xchg
mov
xor
mov
jge
xchg
je
xor
mov
test
pushl
mov
mov
mov
xor
sub
aas
ja
or
pop
andb
or
xor
jno
cmpsl
cmp
in
lock
cmpsl
xchg
lods
xchg
dec
addb
js
test
mov
jmp
idivb
out
xor
mov
stc
mov
ret
mov
jb
mov
cmp
das
outsb
inc
cmp
fs
xor
shlb
mov
mov
mov
test
hlt
fs
aam
fldz
fcomip
jp
aas
jmp
mov
std
mov
sub
xor
cmp
xor
add
xor
aad
jb
inc
int3
push
cwtl
imul
arpl
mov
jns
imul
jle
xchg
inc
xchg
dec
mov
movsl
mov
lods
mov
aas
xor
and
jno
mov
pop
mov
mov
jb
ds
sub
jo
pop
and
in
cld
mov
iret
sub
stos
xor
jecxz
mov
and
mov
jp
pop
stc
push
imul
daa
sub
in
loop
cmp
mov
fwait
jp
mov
insb
sub
ss
push
mov
inc
jb
fnstenv
test
jmp
jecxz
icebp
cmp
cmp
test
dec
mov
inc
lret
ss
jns
out
imul
jne
or
dec
sub
dec
lcall
cli
jb
cmp
das
in
push
sub
sub
jmp
repz
mov
mov
test
fistpll
adc
push
insb
mov
insl
jbe
and
xor
shrb
mov
stc
mov
or
dec
movsl
bound
sti
cmp
rorb
inc
xlat
clc
cmp
mov
je
ret
out
sbb
mov
imul
aaa
sub
in
and
jge
repnz
ljmp
and
stos
arpl
jp
cwtl
insb
mov
fs
cmp
jno
adc
stos
mov
mov
mov
cli
xlat
fcomps
cmc
sbbl
mov
pop
jno
addr16
hlt
mov
lods
push
pop
aaa
pushf
mov
cmp
jae
fdivr
or
mov
imul
insb
ds
rorb
stos
xchg
in
idivb
and
mov
into
jne
fdivs
repnz
push
aad
into
jl
or
loopne
mov
mov
jecxz
clc
lds
pushl
ss
pushf
xor
cmp
cmp
cld
fsub
xchg
jno
xchg
adc
jno
test
xor
stc
out
push
inc
cli
mov
imul
cltd
xor
cmp
ja
lods
adc
cmp
loope
xor
dec
and
je
std
scas
pushf
jecxz
mov
imul
push
adc
lods
ss
mov
mov
mov
mov
xchg
jb
sub
jns
push
stos
aas
jl
xchg
and
mov
xor
and
inc
out
icebp
ds
jns
xchg
sbb
sbb
jecxz
loopne
mov
mov
mov
popa
xor
lret
cmpsl
jno
sbb
aam
shlb
jb
std
ja
mov
push
adc
hlt
jo
xlat
popf
fwait
mov
push
pop
in
mov
scas
add
clc
mov
xor
mov
mov
insb
popa
fidivrl
es
and
addr16
and
jae
cs
xor
imul
mov
sbb
mov
push
and
dec
je
mov
xchg
push
popf
xor
mov
adc
pushf
push
jo
mull
mov
mov
cmp
jmp
sbb
or
mov
fisubrl
aaa
cld
push
test
sbb
scas
sahf
arpl
xor
jae
pop
and
test
ret
addr16
xchg
jg
mov
ljmp
bts
lcall
out
xor
xchg
outsb
xor
jg
je
lods
mov
pop
imul
imul
mov
or
mov
mov
jnp
mull
ja
xor
test
aaa
mov
out
in
mov
popf
inc
and
arpl
fwait
sbb
mov
mov
mov
daa
mov
xor
movsb
enter
cmp
mov
std
loope
arpl
clc
decl
jns
test
out
aaa
add
lcall
jl
jae
inc
ds
cld
outsl
cld
mov
jns
xchg
ljmp
divl
xchg
cmp
mov
jb
mov
idivb
sbb
mov
in
sub
pop
in
adc
insb
mov
bound
jl
pop
mov
jns
lods
mov
cltd
inc
mov
andb
arpl
insb
mov
out
jo
xlat
ret
pusha
dec
cmp
stos
ds
out
mov
adc
push
lods
std
mov
inc
jecxz
pop
mov
xor
lods
jp
inc
xor
mov
sub
jno
jb
lahf
popa
mov
js
cld
xlat
aaa
mov
ds
mov
xchg
imul
add
lahf
push
dec
mov
cmp
mov
jae
je
loopne
cld
xor
out
fisubrs
aaa
test
lock
xchg
imul
jno
push
mov
out
bnd
sbb
test
aas
fidivrs
xor
sub
lcall
cltd
mov
scas
xor
push
and
mov
lods
mov
popa
jg
div
or
stos
push
out
in
xor
popa
inc
cltd
lds
jae
addr16
hlt
clc
pop
sub
mov
xor
enter
xchg
pop
cmp
xor
sahf
clc
lret
push
loop
and
call
lret
insb
xchg
mov
cltd
lods
mov
jbe
push
repnz
inc
sbb
mov
loope
xor
jo
test
repnz
aaa
cs
adc
shlb
jmp
xor
jae
repz
mov
cld
pop
ret
mov
loop
jp
adc
cmp
icebp
sub
bound
sbb
jg
mov
mov
mov
sbb
xor
cmp
pop
ja
sbb
shl
push
in
stos
cmp
xorl
sbb
imul
cmp
and
repz
xlat
mov
bnd
aaa
add
in
lods
insb
mov
bound
ds
ss
xor
mov
push
loopne
jg
mov
clc
xor
icebp
adc
mov
mov
scas
mov
jl
test
or
out
lods
testl
and
jae
stc
or
jecxz
inc
dec
mov
loopne
xlat
cmp
and
mov
pop
fldl
pushf
or
mov
mov
stc
xchg
push
xor
xchg
and
and
jo
mov
push
push
xor
pushf
aad
jnp
xchg
dec
in
mov
and
clc
pushf
xchg
jp
pop
lods
jmp
adc
ja
je
sub
scas
xchg
in
inc
and
xor
xor
xchg
in
aas
or
or
addr16
xor
mov
clc
mov
jb
and
je
and
mov
jno
cmp
rolb
clc
ret
xor
or
and
or
aas
in
jl
roll
ds
fwait
push
pop
cmp
sbb
in
in
int
xor
nop
int
xor
and
imul
cld
mov
sti
sub
ss
mov
xchg
mov
fdivl
pop
mov
enterw
cli
mov
in
cmp
sti
popf
aaa
pop
or
dec
fdivr
pop
xchg
mov
stc
jnp
xor
bnd
mov
and
enter
icebp
jp
dec
dec
aaa
shrl
das
lods
mov
lret
xor
and
repnz
sbb
mov
in
cmp
jp
sub
lods
pop
jb
and
lea
repz
mov
lock
repz
sbb
and
mov
xchg
repz
or
repz
divb
movsl
jmp
js
jp
adc
scas
pop
mov
lods
jne
inc
out
outsl
mov
cmp
jne
rolb
lods
loopne
test
sbb
or
mov
test
arpl
lret
mov
lods
sub
adc
push
test
push
mov
xor
pop
aas
bound
jmp
and
aad
cli
repnz
cmp
inc
inc
xor
and
mov
sub
mov
test
jno
add
icebp
mov
ret
pop
shrb
cmpsb
mov
lock
cmp
mov
mov
fnsave
dec
insb
add
mov
lods
mov
pop
cs
scas
mov
and
xchg
lock
ja
je
mov
ss
cmp
mov
es
mov
inc
mov
shlb
int
out
stos
sar
jp
in
mov
je
pushl
cmp
arpl
nop
outsb
scas
cmp
imul
call
jo
xor
push
xor
cmpsl
test
jae
repnz
cld
negb
xor
aas
mov
pop
loop
icebp
lods
mov
jg
jecxz
and
xor
push
and
jno
lock
mov
mov
hlt
jmp
mov
mov
xchg
xor
jne
mov
clc
cwtl
push
pop
cmp
xor
add
inc
mov
aas
fiadds
loopne
cmp
je
xchg
rclb
jo
mov
cmp
or
outsl
popa
xor
push
mov
notb
sbb
loopne
lret
pop
pop
scas
divl
iret
mov
ret
mov
jp
inc
test
dec
lock
sub
ds
mov
clc
sub
jmp
push
mov
cmp
xchg
xor
sarb
repnz
imul
stos
idiv
testb
and
mov
cld
scas
add
out
sub
loop
cmp
stc
sbb
test
jecxz
xor
sbb
pop
repnz
or
scas
clc
in
std
insl
popa
cmp
and
stc
out
cmp
xchg
sub
cli
xor
cmpsb
imul
movsl
sti
pop
mov
jb
imul
cli
js
or
pop
sahf
nop
addr16
mov
mov
icebp
jb
bound
mov
jl
mov
pop
hlt
sub
pop
pusha
mov
cmp
cld
fnstsw
dec
jmp
mov
jno
xchg
mov
mov
add
ss
cli
in
clc
mov
mov
loopne
mov
aas
clc
pushl
add
cs
ret
movsl
dec
cltd
sub
lock
mov
sbb
mov
cmp
aaa
xchg
cmp
test
mov
jns
subb
ja
lods
pop
test
mov
div
jp
stos
mov
sbb
test
mov
test
mov
shlb
jno
sahf
mov
jns
gs
jecxz
std
cmpsl
sbb
mov
xchg
push
dec
repnz
lods
mov
mov
and
aaa
stc
xchg
xchg
push
jg
xlat
bound
ds
mov
in
sahf
insb
movsl
mov
cli
push
jmp
js
idivb
mulb
dec
jns
lock
sub
popa
mov
std
cmp
add
imul
mov
adc
mov
jno
jmp
add
jg
mov
ss
das
mov
popa
icebp
mov
mov
cmpsb
mov
jo
es
xor
mov
sbb
mov
xchg
mov
inc
xor
fwait
mov
gs
stos
mov
mov
iret
mov
and
jge
outsb
insb
dec
jl
jo
out
out
jb
mov
jmp
scas
cld
jno
adc
and
js
cld
roll
or
js
out
mov
jmp
fs
adc
mov
fdivr
bound
mov
mov
mov
das
mov
repz
cmp
xor
xor
test
in
mov
xor
inc
nop
cmp
xor
cmpsl
js
xor
xchg
jno
loop
and
sbb
jecxz
cltd
lahf
sub
mov
xchg
jle
dec
dec
xchg
pop
test
mov
movsl
loopne
mov
mov
icebp
shll
xchg
xchg
jmp
out
push
xchg
sbbb
ss
rcrl
dec
xchg
in
inc
sub
fdivr
js
xor
adc
sbbb
add
xchg
pop
pushf
mov
cli
jecxz
fcoml
mov
mov
js
xor
xor
mov
jbe
pop
loop
xchg
adc
mov
mov
jno
inc
mov
repnz
dec
sub
aam
pop
and
ds
orb
xor
mov
mov
xchg
scas
and
in
mov
hlt
cmp
sub
mov
fbld
imul
jo
mov
mov
sbb
jno
subb
and
mov
repz
mov
out
gs
jnp
lds
out
xor
stos
jno
mov
or
hlt
mull
test
sarb
adc
cwtl
test
cmp
and
movsl
cmpb
mov
and
andl
hlt
sbb
setle
and
ss
sbbl
sub
filds
loopne
scas
out
cmp
lods
popa
mov
mov
stos
jmp
lock
ss
push
xchg
pop
mov
xor
clc
pop
and
sti
or
enter
rcrb
arpl
lock
aas
sahf
imul
scas
shrl
loopne
je
mov
jb
test
repnz
cmc
sbb
mov
sbb
cmp
ja
cmp
xor
adc
loop
jmp
je
mov
arpl
aad
ds
pop
and
mov
mov
arpl
sub
ds
ret
cmp
mov
mov
pop
in
out
sbb
icebp
mov
cld
mov
lods
xchg
sbb
mov
outsb
jl
in
repz
sub
js
cmp
inc
cmp
push
test
insl
repnz
inc
sub
scas
mov
lcall
mov
dec
jb
or
jmp
mov
fcomps
popa
insb
dec
adc
mov
scas
jae
lds
aaa
and
out
xor
ds
xchg
cmp
mov
aam
repz
outsb
xor
push
pop
fisubs
aas
jle
jl
icebp
xor
test
mov
jae
and
cmp
imul
or
aad
or
sbb
repnz
fcomip
call
aas
stc
mov
cmp
push
cmp
mov
fsubl
jo
push
gs
mov
cmp
cli
js
pop
imul
cli
mov
xchg
je
notb
icebp
arpl
cmp
addr16
push
les
cli
arpl
mov
mov
jl
cmp
pushl
push
pop
sti
lods
gs
pop
sbb
out
sub
jmp
imulb
loopne
mov
pop
mov
aas
dec
pop
out
addb
testl
sbb
mov
and
aaa
mov
cmp
xor
cmpsl
iret
hlt
imul
jnp
xor
jge
mov
in
lods
test
cmpsb
fdiv
in
js
jecxz
lods
xor
mov
cmp
negl
xor
mov
and
cmp
scas
xor
sub
mov
aad
xchg
xor
jno,pn
mov
and
mov
addr16
js
xor
rorb
mov
loop
mov
jecxz
arpl
stos
stos
pop
divl
leave
imul
push
pop
fwait
cltd
xor
cmc
push
testb
or
mov
in
mov
mov
push
bound
sub
pusha
jg
jl
cld
cmp
inc
xor
scas
and
ds
insb
lahf
jno
rclb
test
aas
jno
mov
ds
cmp
jmp
ss
mov
aas
icebp
mov
mov
test
ds
mov
or
add
shrb
mov
xchg
and
or
aas
fdivrl
hlt
lcall
jmp
or
pop
daa
mov
xor
and
xor
xchg
out
test
mov
mov
dec
cmp
push
pop
int
bnd
lock
jg
and
out
jl
and
mov
ja
divl
mov
inc
clc
mov
repnz
inc
stos
mov
insb
inc
repz
xchg
cmp
xchg
push
out
jle
sub
pushf
mov
mov
clc
mov
mov
ret
das
and
cmpsb
bound
mov
ss
icebp
xor
repnz
mov
nop
or
mov
cmp
cmp
orb
lods
adc
xor
lcall
lret
mov
lock
jecxz
add
pushf
jl
jae
dec
mov
mov
mov
mov
jno
sbb
ja
xor
or
inc
sbb
out
xor
xchg
ja
mov
stos
mov
stc
idivb
sahf
mov
jg
mov
jae
subb
aas
pop
adc
fistpll
rcr
aaa
mov
mov
mov
out
repz
ds
and
xlat
cmpsb
inc
xor
shlb
mov
push
fmulp
andl
jae
cli
je
addr16
aaa
or
sbb
push
mov
or
jg
jo
pop
cli
mov
in
pop
pop
adc
mov
adc
mov
mov
and
jg
and
fwait
and
jnp
cs
lods
jns
pop
xor
cld
jmp
es
mov
fs
in
icebp
aaa
mov
gs
sahf
popa
or
shr
mov
jns
jbe
xor
mov
jl
fwait
insl
jns
push
jp
jb
jbe
mov
jb
xchg
div
daa
push
test
fwait
rorl
imul
out
mov
sbb
testl
sub
xor
mov
dec
mov
pusha
jecxz
mov
js
out
je
mov
lea
test
mov
sub
jp
aas
mov
inc
jns
sub
mov
jo,pt
sub
or
jne
mov
jo
or
shl
jp
mov
out
lock
pop
das
xor
and
movsl
and
xor
clc
hlt
out
cmpsb
xor
mov
pop
out
ds
inc
popf
out
mov
mov
cmp
lock
mov
jo
jb
sbb
test
test
sbb
jle
cld
cmp
mov
das
scas
test
flds
pop
add
mov
mov
cwtl
dec
cld
shrb
mov
in
mov
aam
testb
mov
push
in
sarb
sbb
dec
cmp
fs
jno
jp
ja
mov
arpl
divl
orl
xchg
adc
ret
pusha
cmp
and
add
push
cmp
clc
and
sbb
daa
insb
stos
mov
in
scas
ds
in
lods
aas
bound
pushf
push
test
stos
mov
mov
inc
in
mov
divl
lock
repz
push
daa
cmp
test
testb
jg
popf
imul
mov
xor
test
jl
rcrl
mov
mov
cmp
jmp
mov
jae
jns
inc
adc
jno
test
les
test
cld
mov
and
in
push
pop
push
js
ja
mov
je
mov
loop
imul
pop
jecxz
ds
dec
scas
repz
jmp
jg
push
add
adcb
stos
ficomps
cli
out
ss
addr16
repnz
icebp
and
cld
scas
mov
mov
loope
cmp
mov
mov
out
dec
imul
imul
test
dec
out
jno
xlat
and
loopne
cmp
mov
shrb
and
push
rcrl
arpl
sbb
mov
iret
out
icebp
mov
or
mov
sar
ja
cmp
insb
lds
hlt
push
jo
ds
ja
jae
adc
icebp
xor
cmp
mov
aas
and
cld
sti
sbb
fs
cmp
test
sbb
imul
stos
iret
cld
xor
mov
mull
idivb
iret
jb
xchg
ds
bound
arpl
dec
mov
je
mov
in
mov
out
cli
cmp
clc
in
inc
cld
sub
je
mov
jecxz
ds
push
test
jno
out
ret
fs
dec
cld
std
cmp
xchg
cmp
xor
sub
mov
pop
xor
xchg
xor
jbe
mov
rsm
ljmp
xor
xor
sbb
and
mov
mull
ljmp
mov
pop
inc
pop
dec
pop
and
mov
out
xor
cmp
add
xor
clc
jnp
jp
push
jecxz
lahf
das
mov
sub
test
sub
and
cmp
nop
push
mov
or
cmp
mov
in
xlat
cmp
push
mov
scas
jl
xor
xchg
stc
test
mov
in
stos
dec
adc
xchg
push
or
out
cli
cmpsl
stc
mov
cmp
inc
shl
mov
sbb
pushf
jecxz
adc
xor
push
pop
lahf
or
sub
test
clc
js
xor
lods
dec
je
mov
in
push
xor
sbb
fs
in
mov
add
mov
aad
int3
imul
sti
or
aam
das
adc
mov
jno
cmp
sub
and
and
cmp
inc
jno
loop
mov
scas
aaa
hlt
mov
mov
js
movsb
imulb
adc
mov
imul
cmp
jae
nop
jns
in
out
cmp
jp
or
jb
imul
jns
in
cmp
js
aas
ss
mov
scas
mov
xchg
dec
inc
or
adc
aas
mov
add
orl
mov
sahf
xor
jnp
xchg
lods
in
imul
jb
jl
jmp
jns
test
int
in
mov
pop
je
push
lods
and
mov
or
imul
jp
jg
aad
in
cld
testb
jg
sub
loop
xchg
je
mov
and
mov
xor
add
push
call
cld
xchg
xor
push
xchg
cwtl
push
mov
mov
imul
aas
xor
jp
xchg
and
xchg
jo
xor
fmull
iret
jno
mov
mov
or
loop
and
xor
cmp
aas
sbb
ja
addr16
mov
and
xchg
cltd
fidivl
mov
in
xor
jnp
lds
push
xchg
jmp
js
push
cld
sbb
adc
stos
jp
insb
repnz
mov
hlt
scas
arpl
daa
mov
xor
fwait
pop
lock
and
mov
mov
mov
clc
xchg
daa
dec
xor
sub
sahf
add
push
xchg
fbstp
or
ret
xchg
xor
repz
ljmp
mov
scas
add
jl
mov
jns
mov
xchg
sbb
cmp
lds
fwait
imul
sub
ss
cmp
scas
dec
xor
jl
xor
fstpl
inc
xorl
repz
xchg
mov
fwait
sbb
movsl
jb
mov
es
mov
arpl
out
iret
mov
lock
mov
icebp
call
xor
lea
ljmp
xor
pushf
sbb
push
adc
aaa
jns
mov
clc
push
call
clc
scas
daa
and
xor
mov
jns
cmp
mov
hlt
jmp
test
enter
icebp
mov
mov
lods
and
je
jmp
jp
push
add
repz
mov
jae
mov
adc
xor
imul
jge
jl
aaa
xor
je
pop
js
cmp
mov
enter
mov
das
mov
loopne
in
cmp
push
stos
pop
sahf
cmp
test
repz
pop
fdivrs
adc
xor
out
jg
and
shrl
je
ds
mov
mov
pop
ljmp
xor
insb
stos
clc
loop
mov
mov
lods
and
clc
mov
xchg
lret
mov
addr16
mov
jns
mov
pop
and
xor
mov
dec
xchg
lods
repz
rcrl
adc
jecxz
jno
test
mov
xchg
repnz
in
push
jnp
imul
icebp
sub
mov
lds
jecxz
bound
mov
icebp
js
mov
clc
jge
adc
mov
js
and
inc
cli
add
cmp
or
pop
cli
jp
loope
loopne
mov
xor
jecxz
pop
clc
mov
test
sbb
push
fwait
mov
mov
rolb
jecxz
xor
mov
clc
cmp
or
push
aas
shlb
xor
insl
push
addr16
jno
ja
repz
mov
mov
repz
xchg
out
xor
inc
loopne
jmp
fdivs
mov
sub
mov
mov
mov
mov
sbb
mov
in
mov
sbb
mov
cs
insb
jo
fs
popf
fs
jl
popa
cmp
mov
ds
pop
and
hlt
loop
mov
fs
xor
ds
mov
iret
fs
je
and
imul
mov
ja
bound
test
in
aas
jecxz
pop
jg
xchg
in
fisubl
sahf
cmpsb
fs
adc
jo
push
cld
mov
and
mov
xor
jl
aaa
addr16
jmp
stos
jae
mov
clc
imul
jb
enter
mov
stc
cmp
out
adc
sub
xor
fdivs
xor
je
mov
imul
xor
xor
xor
test
lock
ss
push
mov
icebp
jg
mov
aas
mov
out
test
mov
and
mov
xchg
cs
mov
xchg
cmp
mov
loop
out
daa
pop
insb
xor
aas
mov
daa
jle
clc
mov
mov
cmp
jg
ljmp
les
dec
lods
inc
arpl
mov
lahf
out
mov
lret
ja
in
fs
jp
clc
inc
push
mov
cmp
aaa
dec
mov
mov
shll
jp
xchg
push
inc
adc
xor
aaa
xor
mov
xchg
mov
cmpsb
stc
cld
mov
neg
mov
xchg
mov
jns
xor
shll
data16
cmp
mov
mov
mov
push
hlt
jo
xchg
cmp
xchg
cmp
xchg
pop
pushf
push
xor
stos
and
call
push
xchg
and
out
mov
cmp
test
inc
adc
xchg
mov
sbb
sub
cmp
mov
shrl
adc
pop
leave
daa
popa
jns
jg
mov
add
sub
sahf
js
stos
mov
fcoml
addb
sub
jp
mov
pushf
cmp
xchg
cmp
pusha
mov
mov
movsb
movsb
out
hlt
lret
popa
jnp
jg
in
push
sbb
enter
mov
xorb
xor
fldcw
int3
xchg
adc
cmp
push
add
sub
add
mov
mov
push
mov
mov
in
jae
lock
inc
xor
scas
mov
jns
stos
mov
fwait
arpl
rol
clc
repz
roll
out
aas
xor
out
xor
jno
mov
fdivs
imul
cld
out
jno
adc
std
and
push
xchg
imul
fisttpll
xor
loope
mov
popf
idiv
enter
adc
xor
lods
mov
mov
out
or
add
idiv
pop
into
roll
cli
push
jae
adc
inc
repz
mov
xchg
ss
cmp
mov
scas
mov
xchg
pushl
leave
mov
loop
aas
bnd
lret
jl
sahf
sbb
mov
test
jo
mull
scas
scas
mov
shl
jae
loopne
icebp
mov
cmc
xor
in
ds
out
xor
mov
cmp
mov
mov
jecxz
loop
mov
popa
push
clc
adc
in
mov
loop
aaa
call
sub
cs
lcall
mov
jl
mov
or
mov
fsubr
insb
adc
idivl
cmp
xor
ja
je
loopne
pushl
jae,pt
push
insb
fstl
sub
mov
pop
mov
aas
imul
loopne
pushl
lods
jbe
xor
ja
clc
mov
cmp
bt
pusha
mov
shrl
mov
mov
icebp
mov
shll
jns
jl
xor
cmpsl
inc
sub
inc
pop
loop
daa
jbe
lcall
add
jecxz
inc
push
jmp
cmp
mov
leave
in
jp
or
je
in
insl
mov
sub
lahf
mov
sahf
inc
out
xor
mov
jb
arpl
xor
sub
jno
fdivrl
pop
sarb
arpl
ret
lock
mov
mov
cmp
addl
sbb
xor
jecxz
mov
cli
out
sti
outsl
adc
push
sti
scas
cmp
sbb
rcrl
aas
pop
test
imulb
cmp
decb
js
mov
jae
mov
jmp
xchg
sahf
xchg
cld
mov
mov
insb
out
xor
js
pop
mov
jb
mov
cld
dec
mov
cli
mul
scas
arpl
xor
jae
push
or
adc
mov
mov
push
xor
out
cld
and
xchg
adc
mov
xchg
mov
mov
cmp
in
jg
loop
arpl
xor
js
and
mov
dec
ret
and
mov
jne
popf
mov
xor
jae
ljmp
mov
das
mov
cmp
xor
stos
cmp
cld
xchg
xor
mov
pop
je
inc
and
outsl
cmp
mov
mov
xor
int
dec
cmp
dec
mov
hlt
xor
mov
mov
hlt
testb
cmp
repnz
adc
jmp
adc
mov
add
cld
mov
divb
push
jno
mov
xor
insb
and
and
loopne
lods
cmp
jecxz
in
mov
mov
test
js
cmp
push
lock
inc
sub
mov
dec
out
mov
mov
cmp
negb
inc
mov
xor
mov
mov
pop
repz
sub
stc
and
insl
inc
sub
mov
mov
mov
cmp
shlb
xor
loope
icebp
mov
arpl
pop
mov
ja
mov
xor
jns
cmp
outsb
mov
lcall
mov
in
push
xor
push
lea
or
sub
test
dec
cmp
pop
cmp
repz
cmp
fsubl
pusha
mov
or
inc
test
mov
sub
mov
ja
fwait
mov
cli
sub
lods
xchg
mov
mov
jmp
mov
inc
sti
xor
and
xchg
sbb
mov
out
mov
arpl
and
xchg
outsb
adc
mov
mov
jno
clc
repnz
mov
cmpb
fidivs
jle
mov
xor
jns
jno
bound
ret
lret
sahf
dec
repz
imul
jns
push
imul
mov
add
xor
cltd
xor
mov
lret
insb
sub
imul
in
jae
repnz
pop
cmp
and
mov
out
aas
mov
mov
bound
mov
dec
repz
and
cmpsb
push
xor
in
xor
ffree
pop
mov
icebp
jp
sahf
ds
jno
das
int
mov
mov
dec
xor
xchg
fs
mov
in
sti
aas
push
inc
sub
mov
lods
jb
dec
mov
xor
outsb
pushl
push
leave
loopne
ds
xor
push
adc
xchg
cmp
jns
fwait
inc
ficoml
sbb
push
jne
out
push
and
arpl
fldl
imul
inc
mov
add
xor
cmp
sbb
arpl
dec
insb
bound
sbb
mov
inc
mov
xor
insl
imul
popa
stc
icebp
testl
stos
jno
mov
xor
mov
cld
test
jns
mov
or
and
mov
cli
mov
jp
loope
mov
jle
cmp
pusha
mov
repz
repnz
mov
shlb
sbb
idivb
into
sahf
rcr
mov
lods
pop
jp
ss
pop
out
repnz
add
scas
aaa
sbb
outsl
sbb
ja
pop
lods
ret
aad
stc
mov
shll
test
cli
imul
pop
in
out
jno
xchg
mov
jb
and
jl
add
adc
inc
jp
xor
popa
pop
push
mov
aas
push
inc
in
rcrl
jecxz
pop
and
pusha
out
mov
fnstsw
mov
lods
repz
pop
fidivs
insb
jle
lcall
jns
add
jmp
mov
pop
fiadds
add
jbe
enter
test
mov
jb
repz
imul
jecxz
insl
sub
lods
aaa
js
pop
mov
jo
mov
bound
ljmp
mov
enter
xor
cmpsl
and
mov
push
adc
mov
push
mov
xor
movsb
sub
dec
in
ret
ss
cmpsl
ret
gs
mov
jbe
mov
add
repnz
ja
mov
xchg
push
jo
mov
pop
insb
xor
cmp
ret
cmp
scas
je
loop
and
push
arpl
mov
mov
xor
ret
test
test
jmp
mov
out
or
sub
hlt
ja
test
xor
xchg
push
adc
aam
mov
mov
xlat
lods
test
negl
jp
ss
inc
mov
mov
ja
divl
subb
jecxz
lahf
imulb
push
sub
je
inc
adc
ret
xor
jp
aaa
adc
xor
ficoms
fimull
mov
pushl
mov
fsub
addr16
out
mov
sbb
sti
test
imul
je
mov
mov
and
sub
cmp
lcall
clc
mov
and
mov
mov
mov
test
mov
and
xor
xor
cmp
cmp
sbb
mov
push
insl
cmp
cmpsb
scas
mov
jp
pmullw
scas
je
arpl
icebp
shlb
mov
jae
mov
push
aaa
mov
loopne
sbb
and
mov
pop
cs
fiaddl
mull
sub
mov
cmp
pop
scas
pop
mov
adc
stos
push
jae
jbe
adc
ds
cmp
mov
rol
inc
cmpsb
mov
mov
jecxz
xchg
push
out
cld
cmp
cmp
or
vpsllq
stos
stos
mov
mov
mov
pop
icebp
repnz
add
mov
push
mov
imul
mov
cmp
jl
ds
sub
mov
push
mov
imul
lds
les
adc
pop
jg
cmp
mov
ss
pushl
xor
pop
test
cmp
mov
movsl
idivb
imul
push
fwait
and
mov
cmp
imul
xor
mov
xchg
jae
ret
mov
mov
jno
cmp
imulb
xchg
jns
xor
mov
decb
arpl
repz
jb
shrb
xor
xor
jno
mov
gs
jae
in
test
pop
push
cmp
arpl
jl
xor
cwtl
movmskps
mov
add
nop
scas
repz
jae
cli
mov
mov
insb
dec
popf
push
jle
mov
ja
sbb
fmull
aas
icebp
lcall
lock
sahf
mov
inc
pushf
cmp
lods
add
stos
cmp
test
mov
cltd
mov
out
js
inc
popa
cmp
jb
outsl
mov
lods
and
in
xor
arpl
loop
xor
fs
idiv
test
ret
shlb
xor
jge
lds
push
pop
ja
cld
jb
divb
mov
popa
xor
stos
push
idivb
add
cmp
js
outsl
mov
hlt
out
stc
jmp
sub
cmc
cmp
std
mov
xchg
and
push
mov
mov
loope
adc
negl
jb
cmp
out
xor
cld
xor
fistpll
icebp
mov
cwtl
jl
jns
je
push
js
ss
jle
mov
mov
js
inc
sbb
data16
pop
jno,pn
jl
or
stos
jp
sahf
repz
and
ja
mov
push
mov
lods
cmp
cmp
icebp
sahf
pop
jb
loop
mov
mov
dec
mov
aaa
cmp
jb
mov
mov
js
push
in
cwtl
pop
stc
lods
jp,pn
adc
hlt
push
idivl
cld
clc
mov
xor
mov
std
sub
mov
inc
out
ss
icebp
pop
cmp
movsb
mov
call
cmp
lea
or
scas
out
cmp
insb
xor
and
add
js
xchg
mov
jl
mov
ljmp
sbb
popa
test
outsl
mov
bswap
push
mov
lods
test
stos
adc
dec
out
out
adc
sub
std
push
dec
imulb
xchg
sub
and
jl
jns
mov
stos
add
adc
adc
js
pop
outsb
divb
mov
mov
clc
loop
test
jl
add
jns
cli
cmp
jb
js
push
mov
inc
mov
xchg
mov
repz
jmp
xor
rcll
mov
insb
mov
pop
xor
cmp
aas
popa
mov
pop
js
repnz
jp
mov
insl
xor
mov
cmp
mov
cmp
jg
dec
xchg
dec
das
mov
stos
lods
fs
jb
pop
pop
mov
jae
mov
ds
aas
cli
mov
stc
jl
mov
scas
lahf
mov
pusha
out
ds
movsl
sub
push
es
cld
lock
loope
div
jnp
lret
push
adc
mov
xor
mov
mov
add
fsts
mov
insb
adc
mov
fstpt
icebp
mov
xor
and
insb
sbb
inc
cltd
les
mul
mov
jb
fcomi
sub
xchg
jne
fcom
lods
cmp
arpl
adc
mov
inc
rcrl
and
mov
add
std
adc
movsl
cld
mov
inc
ds
mov
mov
mov
aas
push
sub
icebp
pop
loopne
sub
xor
je
cmp
inc
ret
je
ja
cmp
jno
dec
mov
pop
or
or
adc
adc
add
mov
cwtl
je
jno
mov
arpl
test
cmp
cltd
mov
ficompl
imul
and
into
mov
jg
or
js
adc
lock
clc
cld
imul
movsb
xchg
je
imul
sbbl
xchg
movsl
repnz
jno
mov
pop
mov
stc
repz
imul
mov
cld
imul
mov
in
cs
adc
xor
xchg
add
sbb
and
repz
dec
clc
xchg
xor
xor
lock
sarb
pushf
mov
nop
idivb
aaa
mov
mov
jno
pop
mov
ds
popa
and
insb
inc
xchg
es
lock
mov
mov
mov
cli
imul
scas
fbld
ds
xchg
mov
jecxz
jnp
cmp
xor
aaa
mov
mov
mov
hlt
cmp
cmp
divl
jle
or
mov
imul
jo
imul
test
insb
and
jp
je
mov
sub
inc
inc
mov
xchg
mov
stc
mov
mov
in
xor
loop
pop
aas
mov
adc
xchg
push
pop
xchg
xchg
pop
cmpsb
push
mov
adc
mov
clc
mov
adc
scas
cld
jae
aaa
ds
mov
popa
xor
insb
or
pop
xor
sahf
pop
and
mulb
cmpsl
cmp
subl
js
stos
jae
push
mov
data16
aaa
out
mov
xor
mov
ss
ja,pt
test
dec
mov
cmp
shlb
mov
mov
mov
sub
xor
test
xor
push
mov
and
xchg
pop
sarl
xor
push
adc
adc
adc
jns
repnz
cld
sti
add
sub
dec
fmul
outsb
rclb
mov
pop
pop
shlb
mov
test
jl
jno
jmp
jg
mov
test
jae
mov
mov
sbb
mov
icebp
insb
aaa
out
push
push
pusha
push
cmp
jnp
pop
adc
jg
mull
xor
fistpll
or
clc
jecxz
adc
mov
imul
jp
sbb
cmpb
ds
hlt
xor
push
xchg
jae
mov
js
cld
lods
push
mov
pop
insb
mov
jge
xchg
and
mov
push
cmpsl
jb
xor
movsl
inc
repnz
jecxz
divl
sub
mov
lods
clc
xlat
fcoms
cmp
mov
sbb
mov
xor
or
adc
mov
lods
mov
mov
mov
sbb
jg
xchg
inc
dec
shlb
jb
inc
clc
sti
mov
mov
xor
ja
je
mov
jl
jno
or
xor
xchg
mov
push
test
mov
mov
imul
out
pop
pop
fwait
inc
out
fs
hlt
mov
mov
push
ja
adc
imul
cmpb
xor
out
jmp
adc
mov
jns
mov
cmp
mov
adc
imulb
jl
add
popf
or
imul
mov
mov
mov
xchg
xor
das
cmp
sahf
and
lods
mov
sub
cmp
add
xor
cmp
sbb
adc
daa
mov
in
and
ja
rcrb
jl
sahf
cmp
movsl
mov
mov
jg
pop
pop
xor
out
mov
mov
pop
pop
push
in
jb
scas
stos
and
or
xor
or
mov
xor
rclb
mov
xchg
jp
sbb
lahf
fnstcw
ds
movsl
pop
fldenv
scas
stc
jmp
mov
sbbb
xor
js
cwtl
xor
mov
cltd
xor
divl
cltd
imul
mov
mull
out
lods
shlb
and
xor
push
divb
dec
jb
es
xlat
hlt
cld
inc
test
or
loopne
mov
dec
mov
mov
cmp
lods
jecxz
xor
push
dec
xchg
xor
gs
adc
icebp
xor
adc
lock
inc
mov
lods
imul
cli
mov
mov
mov
jg
pop
stos
repnz
repz
out
xchg
ror
lcall
ds
inc
test
xor
mov
pop
cmp
lods
out
cmp
cmp
cmp
imul
stc
inc
imul
std
inc
xchg
xor
pop
add
jb
push
jne
imul
pushf
mov
lds
mov
mov
leave
ret
sub
mov
mov
fs
and
mov
mov
in
bound
scas
idivl
mov
jno
mov
or
jecxz
jl
jp
push
fsubr
scas
mov
outsl
mov
cmp
ret
jbe
addb
mov
xor
sbb
stos
cli
popa
aam
cmp
pop
jp
and
aas
cld
test
mov
cmp
stos
mov
push
lcall
xchg
nop
je
mov
jmp
inc
test
stc
xor
xor
lods
xor
jae
mov
mov
sbb
cmp
jmp
ja
ss
insb
test
mov
sub
arpl
push
and
mov
mov
mov
dec
mov
jl
xor
loopne
mov
je
and
loopne
ror
mov
adc
gs
mov
mov
mov
jp
lock
rclb
in
into
lea
push
mov
test
iret
in
inc
mov
aas
sbb
cmp
andb
cld
pop
and
mov
divb
cmp
cs
leave
jg
int
sti
xor
gs
icebp
mov
stos
jmp
repnz
xchg
es
push
outsb
lock
mov
pop
fwait
imul
xchg
mov
pusha
push
lock
adc
in
cli
and
xchg
ja
clc
lock
xor
addr16
push
inc
push
pop
jmp
pusha
cmp
mov
mov
cli
fisttpl
push
ja
push
sub
aaa
rep
jb
lock
js
cltd
mov
loopne
in
add
and
sbb
cli
mov
insb
dec
hlt
scas
dec
dec
inc
xchg
ja
jmp
jae
aaa
jns
fdivrl
test
cltd
cmp
incl
sub
lcall
rcrl
mov
xor
xchg
je
and
xchg
or
in
dec
jp
jmp
lret
cmp
das
xor
ss
sbb
ja
mov
push
xor
lds
sub
popa
je
stc
in
inc
clc
loop
mov
mov
dec
outsl
ss
mov
test
and
bound
mov
test
bound
and
xchg
xor
push
fs
jb
dec
dec
mov
xor
xlat
xchg
shrb
sub
xor
sbb
and
jp
mov
cmpsl
repnz
push
adc
lock
mov
inc
movsb
je
jns
xor
aaa
imul
inc
aad
or
scas
or
movb
das
jo
jne
mov
pop
stos
mov
pop
mov
test
gs
adc
repnz
jno
sub
or
push
jmp
and
lods
scas
outsl
jp
mov
scas
repz
mov
lret
lock
in
dec
addr16
icebp
mov
push
jg
sbb
xor
notb
lock
sbb
inc
mov
add
je
lea
popa
sub
ss
cltd
inc
lds
jle
pop
pusha
shrl
mov
daa
xorb
repnz
pushf
pop
scas
jg
loope
xor
inc
xchg
loopne
jb
stos
lds
jo
jg
push
je
dec
push
push
sbb
add
mov
cmp
test
test
jmp
mov
push
pushf
jb
sbb
jo
and
and
mov
mov
sti
and
ds
mov
jecxz
aam
mov
add
push
insb
push
divl
test
arpl
dec
stos
mov
xchg
mov
xchg
push
pop
les
jmp
dec
mov
rorl
cwtl
mov
jnp
outsb
mov
addr16
mov
ret
idiv
and
ss
xchg
xchg
jg
xor
mov
cmp
adc
push
cwtl
out
ds
loopne
cli
xor
mov
lahf
cld
mov
and
imul
mov
jno
push
cmp
cmp
mov
repz
and
xor
xchg
das
lods
pop
sub
mov
mov
xor
cli
out
jo
inc
dec
pop
mov
pop
loopne
icebp
mov
iret
dec
in
ret
imul
das
cmp
mov
cld
arpl
lods
test
mov
inc
pop
sbb
adc
dec
mov
rcl
push
repz
cltd
add
sub
mov
mov
mov
std
pop
sbb
xlat
stos
nop
xchg
mov
mov
mov
xlat
and
mov
jmp
xor
jno
mov
jb
ds
lahf
push
jnp
lret
and
daa
dec
notl
repnz
scas
mov
popa
hlt
and
imul
mov
push
jo
fistps
cli
mov
cwtl
pop
jb
xor
mov
adc
jae
jno
pop
mov
mov
jecxz
ja
mov
lret
jp
cmp
adc
mov
inc
add
shlb
fucomip
bnd
jle
shl
rolb
cmp
div
arpl
xchg
inc
inc
xchg
aaa
pop
nop
adc
je
test
cli
mov
sbb
jae
jb
xor
lods
jmp
mov
fdivl
add
cld
sbb
hlt
and
jge
repz
jno
in
mov
out
movsb
ja
push
out
inc
pop
push
cmpsl
inc
xor
xor
inc
ja
xor
clc
add
xor
jbe
xlat
mov
xor
sarb
and
repnz
addr16
loop
sub
xor
jecxz
cli
nop
jle
xor
test
hlt
dec
repnz
cmp
push
notl
out
mov
inc
xchg
push
cmp
movb
mov
pop
xor
dec
scas
mov
cli
out
jg
repnz
cmp
test
pop
clc
inc
mov
lods
pop
xor
mov
jl
in
imull
mov
mov
jl
rol
jle
jne
subb
ja
mov
mov
sub
insb
or
loop
lret
lock
imul
divl
or
out
cld
ja
xor
pop
imul
fbld
jns
imul
in
cltd
cld
out
clc
xor
cmp
jae
shlb
aad
bound
leave
xchg
mov
xor
push
es
cwtl
jno
sub
cli
scas
and
popa
lock
stos
add
mov
in
cmp
inc
arpl
movsb
mov
test
xor
clc
sbb
xchg
insb
aas
mov
gs
out
mov
mov
mov
mov
cmp
jmp
and
xor
pusha
mov
jecxz
lds
stc
div
lods
mov
and
mov
sbb
or
push
pushf
xorb
cmp
mov
jo
out
imul
jge
jl
fwait
mov
jns
mov
hlt
loop
mov
negl
je
std
jmp
stc
imul
adc
hlt
test
lods
ja
aas
jb
test
outsb
idiv
insb
sub
xor
adc
jg
add
nop
pop
mov
in
jae
and
mov
sbb
mov
and
mov
and
add
pop
bound
mov
nop
test
out
scas
mov
in
js
stos
mov
cmp
pop
cmc
adc
inc
cwtl
jle
sahf
ja,pt
mov
xor
xor
xlat
pop
xchg
inc
repz
push
and
mov
cli
imul
lods
cmp
mov
mov
stc
mov
mov
mov
aas
inc
xchg
ficompl
fcomps
mov
mov
in
mov
movsl
sub
jns
scas
dec
xchg
shll
mov
das
sub
mov
test
xor
inc
addr16
dec
or
insb
jl
mov
mov
loop
je
cltd
adc
and
cmp
mov
loopne
hlt
xor
sbb
mov
jg
fidivrs
test
scas
ja
sbb
gs
ds
mov
repz
mov
mull
fwait
dec
push
sub
jmp
xchg
test
push
aaa
jle
fnstsw
clc
insb
mov
mov
sub
sub
ss
or
js
addr16
ror
mov
fidivrl
aad
es
cmp
hlt
ds
jae
pusha
push
test
insb
push
jl
movsl
jo
sub
jmp
adcl
jmp
stos
insb
lock
arpl
xor
xchg
testl
pushf
xor
mov
pushf
xlat
mov
insb
sub
inc
mov
and
bound
insb
adc
inc
dec
stc
push
mov
pusha
cli
sarl
push
mov
je
cld
mov
insl
mov
icebp
repnz
popa
ja
inc
in
imul
sar
sahf
test
push
xor
mov
jg
ds
divb
jmp
scas
incb
cmp
sub
divl
or
mov
inc
mov
outsl
popf
scas
pusha
mov
out
xor
stc
mov
js
mov
add
xor
xchg
xor
mov
xor
mov
xchg
fisubrl
jns
insb
imul
es
mov
divl
and
jo
cmp
push
jno
shrl
shll
inc
hlt
dec
ds
inc
sti
mov
cmp
je
div
cmp
ss
mov
push
out
stc
je
lds
inc
shrb
cmp
adc
jae
mov
aaa
dec
add
and
adc
mov
gs
punpckldq
icebp
mov
adc
ja
scas
jp
fdivrs
jae
dec
and
mov
and
ret
scas
mov
inc
outsb
lods
clc
int
arpl
push
jecxz
mov
stos
jbe
into
arpl
scas
cmp
push
push
fwait
insb
into
fwait
and
xor
xchg
je
loope
scas
push
jmp
ret
bound
repz
sahf
mov
cld
push
mov
es
inc
dec
pop
mov
mov
call
push
cmp
pop
jo
les
cmp
xor
imul
cmp
pop
in
mov
js
cmp
in
jb
idivb
cmp
aaa
mov
push
cmp
lods
lock
mov
repz
cmp
arpl
adc
pop
sbb
dec
add
sub
in
sbb
test
test
add
mov
pushl
bound
repnz
mov
jo
xchg
cmpsb
push
add
ja
jb
mov
jae
test
mov
fdivl
sub
mov
sbb
cmp
out
aam
divb
mov
pop
inc
mov
enter
pop
imul
je
bnd
adc
repnz
loop
rcr
jl
sbb
mov
mov
adc
pushf
iret
fwait
js
jmp
decb
mov
mov
or
sub
cmp
cmpl
out
lods
icebp
hlt
adc
scas
fdivrp
dec
push
xchg
inc
mov
push
mov
xchg
cltd
push
ja
pushf
rep
jmp
jb,pt
sub
cs
jecxz
xor
xchg
out
ds
icebp
lock
jns
mov
xor
adc
daa
mov
cmp
sub
mov
mov
out
xor
testl
jmp
test
mov
mov
out
imul
bound
repz
lahf
push
fs
mov
mov
cmpsl
xchg
arpl
repnz
rcrb
sub
dec
add
fidivs
ss
repz
bound
mul
xorb
cmp
or
test
cmp
das
jno
dec
and
cmp
mov
add
xor
lods
lods
ss
xchg
fsubrl
mov
jns
xchg
mov
xchg
andb
rclb
mov
mov
jb
mov
repz
je
pushf
repz
sub
dec
jecxz
aaa
aas
fs
jno
sbb
das
daa
jmp
cmp
mov
and
cld
cmp
mov
jae
mov
xchg
enter
test
ja
in
arpl
sub
and
jg
cmp
mov
fmul
lds
xchg
call
jp
ret
lret
or
lods
aaa
mov
xchg
mov
daa
inc
cmp
xor
xor
std
and
scas
insb
cld
call
fs
jg
mov
push
sarb
repnz
mov
stos
jmp
sarb
jns
lahf
nop
adc
jb
sarl
fstp
jmp
pop
cli
imul
mov
xchg
xor
mov
and
clc
out
and
mov
jns
jnp
xchg
jp
in
xor
bound
cmp
mov
imulb
and
dec
mov
sub
aaa
pop
mov
sub
jo
fbld
xchg
imul
xor
das
mov
std
lcall
cmp
hlt
lods
lds
jo
jmp
mov
push
mov
jecxz
fdiv
out
leave
out
fmulp
test
int
pop
movsb
xchg
test
and
xor
xor
push
xor
add
pop
xor
jb
inc
add
xchg
xor
hlt
ficoml
jbe
bound
mov
inc
jo
cmp
jns
mov
xor
push
pop
push
lods
jmp
scas
out
cmp
mov
xchg
xor
add
cmp
repz
arpl
ss
or
lahf
xor
xor
or
jge
test
and
enter
xor
mov
sub
mov
ja
inc
jp
aas
xor
mov
ds
xchg
or
es
cmp
pop
jae
sbb
lods
pop
cmp
nop
mov
and
xor
test
push
pushf
mov
js
jbe
mov
jl
sub
popf
and
or
cli
test
lock
popa
jns
ds
dec
sti
mov
dec
bound
daa
add
mov
fisubrl
sbb
sbb
fsubrs
lock
ja
imul
out
and
ret
js
push
fbstp
xchg
cwtl
fdivp
cltd
decl
jno
stos
jmp
cmp
cmp
cmpsl
jo
addb
mov
lret
js
fists
push
cwtl
cmp
dec
popa
dec
push
bound
pushf
xlat
sbb
lds
icebp
mov
mov
jae
push
or
push
jb
testl
mov
out
in
cmp
aas
xor
xchg
mov
scas
jo
and
fists
inc
gs
loopne
icebp
arpl
sub
hlt
sahf
mov
daa
push
sub
in
and
sbb
mov
sub
divl
cmp
jns
cmc
adc
push
cmpsb
imul
xor
sbb
js
sar
lods
test
mov
cmp
imul
xchg
inc
out
cmp
add
jb
addl
ds
cwtl
adc
ss
xor
fsubrs
mov
sbb
stos
shll
jae
fisttps
test
cmp
fs
sub
inc
add
lahf
outsl
sbb
ss
lds
xor
mov
cmpsb
pop
lods
mov
jl
out
test
jno
mov
sbb
pop
pop
or
mov
mov
pop
lods
cmp
sbb
idiv
lahf
bound
test
jg
and
rcr
push
cmp
push
mov
mov
in
mov
xor
jae
mov
mov
xor
mov
lods
enter
mov
adc
xor
cmpsb
ja
mov
icebp
ds
pop
jo
mov
cli
push
pop
xor
lods
mov
jb
mov
shll
xor
aas
jecxz
imul
mov
call
jb
out
jecxz
addl
mov
push
jbe
cmpsb
cmp
mov
insb
sub
xor
scas
sub
cmp
cmp
rorb
cwtl
loop
daa
lods
mov
mov
lcall
and
cmp
stos
inc
mov
aas
xchg
dec
mov
mov
repnz
lods
and
jno
sub
aad
xchg
ret
jmp
mov
imul
jns
jno
cmp
das
jo
mov
xor
jmp
js
mov
push
nop
and
stc
div
jae
push
ja
mov
lds
jp
jmp
xor
mov
mulb
cmp
jecxz
js
mov
sbb
mov
dec
pop
push
mov
sbb
test
test
xor
jmp
xor
ljmp
xorb
movsl
mov
mov
jecxz
sub
je
insl
mov
xor
mov
adc
mov
scas
icebp
jns
imul
pusha
mov
xchg
imull
jo
js
les
inc
mov
lock
and
sti
push
je
test
mov
imul
inc
mov
jno
jae
xchg
shrb
inc
xor
sub
testl
xor
adc
xchg
jmp
adc
and
ja
pop
mov
scas
jmp
sub
add
xor
bound
lret
clc
xchg
out
dec
mov
nop
cmp
in
xor
jae
popa
pop
lret
iret
and
cmp
aas
int3
add
jp
mov
int3
push
test
and
push
jmp
mov
idivb
ljmp
lds
push
dec
pop
lret
das
insl
into
mov
mov
jbe
fcomi
xchg
clc
sub
divb
jno
xor
or
adc
mov
test
or
js
insb
xor
bound
jmp
mov
mov
cmp
pushf
add
stos
stc
adc
xchg
adc
sbb
mov
pusha
xorl
imul
push
leave
add
xor
loope
cmp
push
inc
xorb
in
pushf
jecxz
out
add
mov
pop
lcall
jg
cmp
pop
icebp
xor
ret
jns
fdivs
jno
int
andb
icebp
xchg
mov
add
insb
xchg
call
and
or
shll
jnp
xor
pusha
push
jb
mov
jno
jg
xchg
mov
add
jo
testb
add
push
stos
sbb
nop
sub
les
test
cmp
mov
lds
xor
push
cltd
pop
jno
mov
mov
stos
mov
xor
lret
arpl
ret
aas
into
and
and
les
dec
stos
roll
orb
push
xor
rorb
movsl
add
mov
jae
ret
fstpl
je
sub
hlt
test
fwait
icebp
stc
aas
loop
adc
jg
clc
and
mov
jo
andl
jl
cmp
ja
cmp
push
test
xchg
mov
ret
popf
sub
mov
sub
leave
mov
loop
das
jns
sahf
aaa
adc
int
sarb
jmp
push
test
test
inc
xor
mov
and
fwait
inc
mov
and
stos
dec
push
orb
pushf
imul
lods
lock
test
int
hlt
jecxz
and
jecxz
jg
shl
fnstcw
addl
dec
test
mov
ljmp
mov
test
clc
jl
xor
xchg
in
sbb
in
mov
movsb
mov
adc
test
sahf
scas
sub
fnsave
lret
inc
ret
push
and
inc
sbb
test
or
jge
and
xor
sub
cmp
mov
mov
jbe
mov
adc
mov
sub
test
mov
inc
jo
xchg
test
inc
add
fwait
scas
add
cmp
xchg
call
js
mov
cli
adc
xor
test
outsb
cmp
stc
inc
mov
mov
icebp
jecxz
ds
mov
mov
add
in
inc
adc
das
scas
pop
test
cli
jno
dec
adc
adc
cmpsb
cli
out
iret
test
push
call
push
mov
iret
dec
orl
ret
xor
sub
xchg
xor
dec
iret
test
pop
add
mov
aaa
mov
mov
mov
sbb
mov
mov
xor
sub
cmp
pop
xor
loop
jns
mov
mov
je
mov
cmpsl
jecxz
andb
xor
mov
push
jns
fcmove
jo
mov
xor
push
fsts
aad
cmp
xor
jnp
mov
ljmp
loop
mov
mov
fimull
mov
bnd
and
sub
add
cmp
ds
jo
jl
mov
xor
xor
sub
push
ja
cmp
pop
xchg
inc
outsl
jl
mov
in
aas
je
out
jp
jecxz
aam
push
into
pop
push
aam
mov
xor
into
xor
mov
cmp
xchg
cmp
shlb
inc
in
cli
clc
popa
fiadds
mov
cmp
loop
div
jae
cmp
pop
sub
out
outsb
and
cmp
insl
stc
xchg
cltd
sub
mov
decb
push
stos
stos
sub
repnz
gs
cmp
push
lcall
bnd
pop
int3
xor
lahf
stc
mov
addr16
sub
and
dec
pusha
or
imul
repz
aas
xor
cwtl
lret
jecxz
mov
sbb
push
addr16
mov
mov
xor
push
xor
pusha
hlt
repnz
jns
inc
ret
xor
fwait
or
pushf
js
out
bound
rclb
cltd
cmp
dec
movsl
lods
movsb
mov
cmp
mov
js
jae
or
test
jns
mov
inc
and
jbe
bound
mov
cmp
mov
aas
test
sub
insb
xchg
or
movsb
repnz
sub
test
mov
jb
sahf
repz
ja
in
jp
divl
mov
xor
push
cmpsb
cmp
imul
xchg
push
dec
js
pushf
cmp
jo
scas
ret
mov
imul
mov
mov
cli
ja
sub
mov
scas
subl
arpl
jns
and
cmp
mov
mov
xchg
scas
ja
xor
push
cltd
mov
add
decb
xor
mov
loope
lods
stos
imul
adc
jecxz
xor
cltd
and
cmp
jne
mov
pusha
imul
mov
pop
cmp
rolb
mov
leave
je
mov
xor
lcall
hlt
xor
jnp
aam
lods
mov
mov
clc
and
xor
sub
mov
mov
lahf
add
mov
int
bnd
jno
aas
mov
insb
je
cmp
xchg
mov
cmp
imul
cmp
idiv
jns
pop
mov
sub
mov
call
mov
mov
xor
insl
push
lcall
enter
mov
mov
loopne
mov
cmp
out
loopne
xor
jecxz
rorb
insb
lds
popa
jns
mov
jp
mov
jg
jae
inc
xor
mov
and
mov
jl
cmp
sahf
dec
mov
test
mov
js,pt
repz
in
jae
pop
inc
outsl
cwtl
les
jg
and
arpl
cwtl
jle
mov
aad
outsb
fdiv
xchg
cmp
pop
jno
mov
ljmp
rolb
xor
out
hlt
ss
ja
mov
js
and
jp
movsl
ss
loop
sub
and
and
lahf
xor
xor
mov
pop
pop
add
fistpll
xor
jnp
sub
cmc
lcall
out
gs
xchg
mov
pop
scas
movl
cmp
mov
fsubr
push
adc
mov
mov
jg
hlt
sub
xchg
xchg
jns
out
js
jmp
insb
jo
imul
xchg
jbe
jp
loope
cmp
mov
in
cmp
mov
xchg
adc
fwait
lock
fs
sbb
lcall
and
imul
sub
sahf
cmpsl
cmc
mov
inc
push
jne
mov
test
bound
xor
divb
in
ja
shrb
fwait
stos
ds
jecxz
adcb
stc
repnz
and
subl
lcall
sbb
dec
mov
cmp
push
cmp
in
jge
sbb
push
and
imul
pop
jecxz
ja
mov
ss
out
mov
loop
cmp
mov
aas
lahf
mov
insb
cmp
popa
jb
sub
ds
cmp
add
xor
pushl
sbb
mov
adc
adc
clc
std
adc
fldl
imul
icebp
sub
sub
stos
loop
aaa
jb
pusha
add
add
jno
loop
inc
pop
jno
repz
push
xor
xchg
aaa
lahf
xchg
out
imul
or
daa
out
mov
mov
pop
ja
jns
aas
imul
and
mov
xor
push
mov
cmpb
and
cltd
incl
imul
imul
adc
sub
idivl
jmp
mov
repnz
cli
mov
scas
xchg
dec
and
lods
in
hlt
mov
outsb
jecxz
fs
and
xor
jns
gs
xor
pop
test
push
popa
popa
mov
jl
mov
fwait
jae
mov
cwtl
out
mov
adc
cmp
neg
and
mov
cmp
jge
sbb
ja
mov
mov
mov
fdivrs
cli
lahf
cld
js
fwait
and
lods
clc
fdiv
xor
mov
imul
xor
push
mov
rcrl
call
jl
lods
lods
jp
sbb
jae
addr16
cmp
adc
ds
call
ret
das
sbb
ds
xor
fsubrl
pop
xor
notl
adc
mov
bound
xor
je
mov
fs
out
jb
movsl
dec
inc
mov
xor
scas
push
setge
clc
sub
xchg
and
push
mov
imul
mov
mov
mov
cmp
ss
sbb
insl
jmp
cmp
cs
mov
scas
roll
lock
xchg
shlb
jb
fidivrl
cld
pop
sbb
push
pop
lock
gs
mov
in
xchg
sub
jmp
sub
mov
jl
jno
scas
jle
xor
and
jb
gs
ss
stos
rorb
mov
jge
bound
adc
addr16
dec
or
imul
sbb
aad
sahf
xor
loop
jns
dec
or
mov
js
cli
mov
inc
pusha
or
icebp
rorl
push
pop
jae
shl
lods
test
jno
sub
or
and
jp
sar
fdivl
pop
push
adc
clc
push
mov
xchg
lds
adc
jl
xchg
repnz
jmp
jg
xor
imul
repnz
mov
pop
fldenv
mov
mov
mov
fwait
lock
mov
clc
test
cmp
loop
clc
mov
sbb
xor
jg
shlb
mov
fldcw
inc
inc
popf
inc
or
jl
mov
cld
and
hlt
or
add
mov
icebp
lock
xor
cli
dec
insl
and
lock
stc
imul
in
xor
fisubrl
ljmp
xor
mov
jl
mov
jne
jns
out
arpl
cmp
mov
aad
pop
clc
lret
adc
mov
xchg
data16
fsub
jg
and
sub
pusha
mov
dec
mov
shrl
mov
imul
idivb
call
clc
fucomp
pushf
jl
cmp
xor
out
mov
sahf
ss
cmp
fcomps
jg
xchg
or
mov
push
call
aas
pop
mov
in
hlt
inc
xchg
jb
jno,pt
aaa
ja
and
jp
pusha
fdivl
scas
xor
ret
add
mov
cli
jecxz
icebp
xor
mov
mov
shl
mov
mov
jl
mov
cli
mov
mov
icebp
scas
cmp
addr16
sub
insb
cmp
shlb
adc
jl
cmpsl
clc
lock
mov
je
sbb
xor
add
jno
and
loopne
cmp
cmp
pop
sahf
mov
adc
pop
nop
xchg
mov
jg
xor
push
addr16
cmp
addr16
loop
ret
mov
mov
add
cli
sub
mov
loop
out
pusha
sbb
ja
cmp
sbb
loopne
jno
xor
call
xchg
incl
repz
inc
add
mov
cmp
rolb
hlt
in
in
test
je
mov
cmp
pop
cmp
aas
testl
insb
clc
and
mov
hlt
xor
ds
sets
mull
sub
mov
sub
sub
icebp
xor
mov
loop
cld
xor
loop
out
mov
jle
js
dec
fs
fwait
dec
mov
jae
bound
bound
and
imul
mov
pop
sbb
loop
xor
loopne
fs
mov
push
sub
mov
repz
and
ja
nop
add
arpl
mov
insl
repz
jg
push
outsl
mov
popf
lock
lock
sub
mov
sbb
nop
jns
cld
inc
mov
bound
clc
cwtl
jp
jb
pop
adc
ret
sahf
out
cmp
pop
cmp
mov
stc
xor
cld
xor
mov
imul
push
jl
mov
adc
sbb
lcall
testb
cmp
loop
jp
daa
test
gs
xor
cltd
add
enter
sub
jecxz
xlat
jp
pop
sbb
cmp
nop
adc
xor
out
mov
and
in
packssdw
test
sarl
stos
jge
arpl
pop
ds
out
test
sbb
and
shll
je
int3
cmp
stos
push
mov
mov
loopne
ja
xor
cli
notl
mov
pop
inc
test
mov
mov
cli
mov
jl
adc
and
adc
fnsave
fidivl
ds
stc
push
int3
jb
pop
lea
sub
out
in
jns
lods
je
fnstsw
ja
cmp
jmp
insl
data16
test
lods
imul
mov
fwait
xor
loop
stos
out
jecxz
fisubrl
xlat
push
insb
clc
nop
lret
cmp
and
mov
jmp
fdivl
mov
xor
mov
les
xor
cmp
test
jb
popf
pop
xor
cmpsb
outsl
stos
cld
xor
lret
das
mov
jno
nop
inc
aaa
aas
mov
push
loop
sarb
inc
clc
jl
jp
dec
out
jl
popa
mov
jo
test
jb
fs
sub
ja
dec
jmp
ss
fnstsw
cmpb
cli
jns
mov
arpl
push
mov
repnz
cmp
xor
xlat
jae
stos
rcl
lods
push
aam
mov
push
negl
xchg
mov
and
jno
mov
jge
xchg
sub
test
sbb
push
test
xor
scas
xor
repnz
xor
adc
xor
pop
clc
mov
sbb
and
mov
adc
cmp
cmpsl
shrb
cltd
cmp
mov
mov
insb
js
cmpsb
out
stos
add
test
xor
sub
or
jb
fdiv
jecxz
cmp
xor
das
cmp
imul
jecxz
popf
sbb
lea
and
fmulp
lea
out
repz
jb,pn
mov
sarb
mov
mov
lds
aaa
sub
cli
fldenv
stc
outsl
insb
jl
loop
mov
dec
push
adc
clc
stos
stos
lock
insb
jns
lcall
mov
mov
mov
mov
loopne
insb
sub
push
jo
sbb
dec
scas
cmp
sub
push
mov
aaa
cmp
and
pushl
push
popf
gs
adc
cmpsl
push
clc
pop
jb
lcall
mov
push
mov
das
idiv
loopne
stos
mov
ds
mov
scas
ss
pop
jle
mov
imul
scas
pop
mov
test
enter
nop
stos
and
mov
sbb
in
outsb
jp,pn
scas
mov
and
and
mov
loopne
idivl
jecxz
lret
jg
and
imul
mov
mov
mov
pop
mov
sub
sub
cld
subb
sahf
outsb
add
jmp
add
jp
inc
pop
mov
flds
lds
subb
xor
idivb
icebp
clc
out
insb
js
ret
fdivs
push
aas
loopne
mov
xor
mov
sub
jg
insl
out
xchg
jl
sub
aam
test
lock
push
test
ds
and
fdivr
pop
xchg
cmc
and
in
popf
icebp
sti
mov
imul
fs
pop
pop
sbb
jle
mov
cmp
hlt
sub
in
fwait
in
sbb
std
cld
jns
sub
mov
negl
cmpsl
adc
mov
or
scas
repz
je
push
test
mov
pop
js
add
imul
mov
jg
data16
add
lret
repnz
xor
lret
adc
cmc
fsubrs
xchg
loop
ss
cmp
xchg
arpl
cmp
repnz
insb
dec
stc
dec
add
cmp
sarl
pop
imul
mul
les
sarb
test
arpl
pop
pop
jecxz
mov
sub
clc
cmp
stos
test
jp
mov
mov
test
call
sbb
out
imul
mov
and
out
sub
sbb
out
mov
mov
repnz
icebp
stos
push
repz
cmp
loop
scas
mov
and
call
mov
push
jno
shlb
pushf
clc
icebp
mov
cmpsl
lods
ds
push
hlt
adc
inc
sbb
jo
into
xor
pop
fidivl
push
mov
sbb
imul
xor
and
xor
movsl
cmpsb
mov
lods
shlb
xor
xlat
scas
mov
cli
aaa
and
jb
xlat
and
pop
pusha
pop
jmp
mov
lcall
imul
jns
cmp
mov
cmp
add
jae
negl
cmp
clc
xor
je
cli
mov
sbb
xchg
and
pop
hlt
pushf
pop
or
repnz
xor
mov
mov
out
sbb
xor
and
rcl
push
cmp
xor
xor
mov
inc
xor
dec
ss
adc
out
mov
jecxz
shl
inc
negb
fldl
test
xor
lods
jns
mov
fs
sub
dec
xlat
pop
and
mov
cmp
adc
inc
mov
stos
arpl
pop
mov
idivb
clc
aad
test
mov
out
mov
jecxz
and
idivb
cli
lock
mov
pop
aaa
sbb
push
and
sub
add
jns
stos
clc
loop
mov
jle
test
sarl
jl
mov
xor
cld
repnz
test
aas
icebp
mov
add
jno
pop
inc
push
ljmp
cld
mov
data16
xor
fdivs
pop
and
jl
pop
xor
popf
jmp
adcb
mov
mov
mov
hlt
scas
mov
cld
or
imul
mov
cmpsb
cmp
mov
cmp
je
test
mov
pop
and
jp
ljmp
ja
arpl
addb
idivb
cmp
adc
add
xor
pushf
mov
stos
test
push
aaa
xor
scas
xchg
or
outsb
stos
arpl
push
push
mov
pop
clc
mov
adc
xor
adc
cmc
inc
js
jmp
aad
cmp
pop
fs
gs
jb
stc
js
mov
aas
ds
sbb
mov
and
in
into
xchg
shrb
incb
sbb
scas
xor
inc
subl
and
cmp
and
jb
lock
xchg
ja
xor
pushf
mov
and
test
fwait
xlat
cltd
jge
ja
and
mov
js
bound
stc
and
xor
jns,pn
sbb
mov
mov
pop
out
clc
xor
sbb
xor
mov
std
and
jo
jp
mov
jecxz
ds
cmc
aas
jb
testl
rolb
xor
mov
fistps
cltd
test
xchg
ljmp
cld
xchg
jno
push
jno
inc
popf
ja
xor
cld
jb
mov
and
jl
jl
pop
divl
xchg
push
xlat
rcrb
sbb
imul
scas
mov
call
cmp
xchg
sub
jb
push
orl
std
push
loop
and
js
jge
jo
xor
inc
adcl
xor
jl
push
stos
test
xchg
mov
mov
and
test
shlb
rolb
mov
adc
jecxz
sbb
js
rcr
stos
xchg
jp
icebp
scas
sub
dec
cwtl
bnd
aaa
mov
lods
aas
mov
mulb
cmp
xor
inc
fwait
out
mov
push
mov
cmp
aad
aam
mov
stos
mov
jl
lods
cmp
ss
aas
addb
in
cld
jecxz
add
mov
mov
mov
fisttpl
movsb
ret
add
dec
in
out
xor
mov
inc
add
xchg
adc
sub
inc
lods
cmp
fsub
xchg
out
imul
gs
cmp
es
scas
inc
imul
jnp
adc
cmp
mov
arpl
cli
xor
ret
scas
ja
les
adc
js
sub
jp
xor
cs
das
scas
test
pop
mov
bound
sub
ja
xchg
cld
je
movsb
lds
lcall
fst
paddb
sahf
insb
mov
inc
cmp
adc
js
pop
ljmp
cmp
sbb
and
cmp
inc
jno
sub
cmp
rolb
xor
lods
js
and
arpl
mov
xor
outsb
mov
cmc
add
imul
sub
dec
ret
fisubrl
mov
mov
and
aaa
mov
xchg
jno
xchg
fsts
pop
adc
inc
aaa
cld
mov
mov
xor
scas
aad
mov
data16
icebp
movsb
test
jg
enter
jmp
and
jmp
into
cmpsl
ss
sti
xor
ret
add
imul
movsl
and
ja
sub
mov
out
or
mov
jl
mov
jno
lcall
mov
and
in
mov
xor
push
mov
stos
sub
scas
arpl
stc
and
lock
xor
inc
jb
out
clc
fwait
lahf
inc
hlt
xchg
ja
push
das
ret
stos
movsl
mov
mov
ss
imul
xchg
inc
sbb
xor
aas
jae
cld
stc
cmp
scas
lock
sbb
out
sub
sbb
clc
cmp
ss
pop
mov
cltd
cmp
cmp
outsl
clc
xlat
lods
int3
mov
loop
mov
sub
ja
stos
push
xor
sub
jmp
adc
cmp
enter
push
mov
lea
lcall
stc
adc
js
inc
cmpsl
jns
jmp
dec
mov
test
mov
out
mov
frstor
jo
mov
mov
and
insb
hlt
test
jp
mov
jb
and
cmp
imul
lods
jecxz
outsb
test
hlt
mov
stos
mov
and
mov
imul
in
mov
dec
jmp
mov
adc
inc
ds
mov
add
ret
mov
mov
add
xchg
cli
hlt
sti
out
cld
or
imul
jno
jb
xor
fcomip
push
stos
ret
jmp
jo
ret
daa
enter
popf
cmp
and
ret
cmpsl
xchg
pop
pop
ss
test
mov
cmp
xlat
data16
mov
mov
mov
imul
jg
lods
cmp
jl,pt
stc
imulb
mov
js
test
xlat
mov
cmp
pop
add
jae
pop
xchg
leave
and
mov
inc
push
jo
jl
rcll
push
cs
popa
loope
mov
sub
sbb
jge
mov
xor
shll
clc
mov
jb
jbe
mov
or
aam
xor
fsubs
cmp
stos
jo
and
lods
clc
xchg
pop
inc
cmp
lods
dec
jg
mov
mov
mov
xor
lock
mov
push
popa
out
xor
aaa
mov
xchg
inc
or
push
stos
ja
pop
out
mov
mov
out
push
and
mov
insb
jno
push
pushf
and
stos
inc
loop
arpl
dec
out
cmp
sbb
jp
mov
stos
pop
cld
mov
sub
cli
cmp
cltd
xchg
xor
mulb
repnz
jo
push
clc
loop
mov
add
xchg
int
inc
push
add
mov
xor
adc
pop
popa
cmp
jp
sahf
out
insb
stc
aas
test
and
jg
jge
lods
loop
mov
cmp
sahf
cli
pop
push
lock
test
jmp
sbb
lock
mov
pop
sbb
loopne
das
insb
jecxz
in
mov
arpl
push
add
fs
xor
mov
xor
idivl
je
mov
xchg
imul
lea
jo
jp
push
jl
data16
cmpsl
xor
shrb
cmp
xor
jns
mov
or
frstor
mov
mov
lods
clc
xchg
movl
jmp
mov
les
xor
outsb
bound
add
notl
cltd
jo
jae
and
xor
and
bound
ret
jge
rorb
cmpsb
push
xor
and
inc
repnz
sbb
test
loop
xor
mov
imul
stc
mov
jl
icebp
ds
aaa
clc
loope
mov
js
adc
jno
and
adc
mov
into
adc
xchg
stc
pushl
or
mov
pop
dec
lahf
mov
cld
test
mov
shrl
mov
sub
aas
stos
outsb
mov
shll
js
movsl
jb
divb
xlat
sub
xchg
negl
out
movsb
je
sub
sub
sbb
sahf
mov
shlb
and
ja
cwtl
ss
test
in
and
aaa
xor
ja
rclb
in
mov
mov
pop
test
xor
mov
sbb
idivb
clc
or
cld
mov
lock
add
fwait
mov
stos
mov
cli
and
insb
pop
in
sarb
and
icebp
push
adc
xor
adc
fucom
lret
int
lahf
push
out
and
test
mov
pop
jno
ss
mov
les
lahf
mov
or
xor
xlat
sbb
fidivl
pusha
mov
lahf
push
lods
imul
stc
add
mov
jge
push
cli
adc
mov
imul
in
mov
mov
xor
push
jo
mov
idivl
in
and
insb
dec
gs
out
cmpsl
addr16
out
xchg
addr16
lods
out
pop
mov
and
cmp
pusha
mov
mov
mov
cmp
xor
out
xor
dec
mov
bound
jne
inc
aad
insb
iret
insb
jb
add
stc
jae
push
ss
lock
mov
mov
shrb
das
mov
xor
hlt
test
icebp
sub
mov
cmp
stos
or
aaa
sbb
faddl
imul
jg
mov
cwtl
add
mov
add
jle
addl
and
dec
and
mov
and
pop
in
lret
pop
in
addr16
mov
hlt
sbb
in
popa
mov
push
add
ret
cli
ret
and
xchg
xor
mov
adc
jo
cmp
mov
jae
loopne
mov
mov
xchg
jecxz
in
pop
lods
fidivl
divb
aaa
add
cmpsl
test
decb
ss
out
jl
rcll
sbb
xor
cmp
pop
mov
jge
aas
icebp
jno
ja
arpl
mov
aad
sub
and
sub
cmp
cmp
dec
loop
movl
sbb
mov
push
hlt
repz
test
mov
cli
repz
jb
xor
and
jae
cmp
cmp
lahf
mov
mov
adc
cs
adc
xor
stos
lock
aaa
mov
cld
imul
jbe
mov
dec
sbbb
cmp
xor
jbe
sub
lock
pushl
sahf
imul
lods
mov
aas
repnz
lods
cmp
mov
pop
cli
insb
sub
xor
and
jbe
add
push
repz
push
lret
data16
lock
stc
xor
xchg
add
push
jns
repz
cmp
pop
negl
shrb
mov
cltd
jo
stos
jg
or
dec
add
mov
outsl
imul
jae
jno
and
ds
repnz
pop
arpl
pop
mov
xor
xchg
pop
dec
int3
mov
lock
lock
cmp
cmp
add
cwtl
es
cmp
icebp
lea
insl
mov
hlt
xchg
pop
xchg
jl
xor
repz
mov
popf
mov
jmp
cmp
jecxz
jp
mov
dec
xchg
push
jno
jnp
imul
call
push
jle
int3
lock
int
mov
xor
mov
into
lods
mov
cli
jbe
div
int
imul
and
fdivl
mov
cmpsb
stc
jns
or
and
mov
pop
lea
and
cmp
out
sbb
jno
popf
mov
lock
loopne
jp
insb
mov
mov
test
mov
sub
inc
jl
add
push
xchg
rorb
nop
jns
jp
arpl
mov
lret
mov
xlat
sbb
jg
bound
ja
dec
mov
enter
lods
ds
dec
mov
xor
cwtl
mov
lock
sbb
mov
mov
cmp
push
mov
mov
xor
incb
dec
jae
cmp
add
mov
jl
mov
clc
pop
pop
enter
popf
stc
inc
adc
test
mov
mov
cmpsb
insb
popf
imul
call
or
movsl
popa
cmp
cli
scas
adcb
jmp
clc
mov
cmp
xlat
loop
icebp
popa
xor
adc
inc
lods
sub
mov
in
mov
push
mov
push
jo
ja
lods
dec
xchg
adc
xchg
xor
cmc
test
mov
mov
and
aas
scas
shlb
xor
div
popa
scas
dec
imul
mov
into
clc
inc
lods
movsl
jns
xor
aaa
aad
movsl
mov
jg
dec
ret
xchg
jl
mov
cmp
imul
stos
cmp
bound
cli
adc
jge
mov
mov
stos
xor
js
jecxz
clc
cmp
mov
add
cs
out
sbb
in
mov
divl
cltd
sub
push
nop
icebp
es
mov
cld
test
jl
cmp
xor
int3
lcall
repz
mov
fwait
stos
mov
sbb
ds
popf
stos
aas
or
pop
inc
ret
jp
nop
negb
fwait
xor
xor
jg
sub
int
lods
cli
xchg
cmp
aaa
or
ja
dec
cld
inc
or
and
fs
push
push
lret
dec
out
mov
and
repz
jg
fwait
clc
mov
outsb
push
cmpsb
insb
aas
xchg
xor
mov
mov
les
xlat
mov
or
mov
cmp
cmp
mov
mov
mul
je
mov
lahf
popa
pop
pop
stc
sbb
mov
idivl
mov
aaa
cmp
hlt
cld
inc
in
mov
jb
fwait
adc
stos
or
pop
test
icebp
mov
sub
mov
pushf
js
mov
ret
push
adc
jl
pop
jae
mov
mov
aaa
fdivrs
cmp
fldlg2
xchg
push
cwtl
iret
and
and
mov
push
xor
ja
cmpsl
lcall
mov
jp
bound
addr16
cmp
xor
test
lods
sub
mov
lret
mov
sub
xchg
mov
jp
dec
ja
mov
cli
sbb
imul
xchg
dec
cmpsl
popf
mov
xor
nop
push
testl
mov
bound
mov
call
andl
in
push
mov
adcl
cld
mov
enter
das
insb
ret
sub
sbb
jb
repz
data16
cmpb
mov
jl
pop
inc
repz
mov
cs
push
xchg
test
cmp
imul
mov
xor
pusha
sbb
mov
mov
repz
je
ljmp
push
xor
jo
int3
jae
jle
add
daa
mov
sbb
jno
mov
out
and
je
lret
jno
cmp
jbe
loop
mov
cmp
dec
mov
fwait
ljmp
and
in
jge
insl
aaa
sub
bound
xor
mov
in
jns
jg
ret
cmp
out
dec
mov
jl
repnz
sti
and
loop
xor
scas
xor
repz
ljmp
idivl
xchg
lock
and
xor
les
jmp
xor
lods
jg
mov
sub
mov
xchg
inc
cmp
push
adc
jo
cltd
cli
xor
add
xor
xor
popl
cmp
lods
jl
mov
jle
jmp
addr16
cld
jno
fldt
stos
jmp
js
xor
dec
jecxz
jns
mov
icebp
rcll
xor
and
and
loop
clc
pop
fdivrl
cmp
out
rol
popa
aas
in
ds
out
jp
clc
mov
repnz
test
repz
push
mov
and
mov
outsb
fs
mov
movsl
cmp
scas
fstl
cmp
jmp
cmc
and
and
out
test
and
ja
jns
mov
mov
stos
mov
sbb
mov
inc
test
out
icebp
xor
negl
arpl
jmp
loopne
xor
mov
movsl
adc
popa
add
iret
ljmp
arpl
aaa
jae,pt
mov
jg
jmp
jl
popa
hlt
jno
insl
cmc
icebp
scas
mul
mov
scas
stos
mov
cmp
xor
fdivs
setae
xor
movsl
jg
adc
xchg
sub
inc
ss
inc
insb
xor
and
cmp
sbb
sub
and
aam
loop
mov
mov
inc
adc
mov
pop
je
cmp
jl
outsb
jns
nop
mov
idivb
or
xchg
stos
jg
add
ja
or
je
or
cld
mov
scas
sub
jb
adc
mov
arpl
dec
mov
mov
bound
add
dec
jp
push
pushf
or
jecxz
mov
and
jbe
push
stc
jl
mov
and
jns
aas
jae
fsts
lea
enter
jo
mov
stos
mov
push
imul
lock
jl
jns
clc
cmp
mov
pop
mov
jb
aas
push
repz
xor
daa
pop
and
or
imul
mov
popa
mov
sbb
cltd
and
cltd
xchg
shlb
lods
icebp
hlt
sti
lods
push
mov
loop
sub
repnz
bound
mov
jae
pop
cli
pop
call
xor
lcall
jo
rol
adc
dec
sub
loop
or
scas
lcall
out
clc
cmp
mov
pushf
xor
cli
loop
mov
cmp
sub
dec
lods
ds
lds
inc
leave
hlt
test
sbb
sub
mov
and
aaa
imull
inc
adc
jg
jp
scas
inc
mov
repnz
xchg
lods
cmp
stc
mov
mov
mov
jno
xchg
aad
pop
adc
imulb
aaa
clc
mov
testl
adc
imull
xchg
loopne
jae
imul
imul
imul
sub
xrelease
push
dec
sbb
insb
mov
mov
xor
aaa
pop
in
negl
xchg
imul
jecxz
pushl
clc
pop
popa
jb
mov
scas
jae
push
repz
jno
xor
push
test
notb
das
adc
imul
scas
cmp
arpl
sub
mov
bound
lock
inc
cmpsl
int3
repz
ljmp
idivb
imul
ret
and
scas
stc
mov
inc
and
aaa
jno
cmpsb
cld
jns
popf
mov
out
jmp
cmp
mov
lods
scas
cwtl
pop
jno
cli
stc
jo
aaa
negb
xor
lods
and
mull
js
xchg
ret
fs
loop
push
cli
out
stos
xlat
or
add
mov
andb
inc
sahf
decb
addb
repnz
mov
imul
jp
test
xchg
mov
inc
mov
mov
xlat
mov
imul
loop
scas
popf
js
cmc
pusha
mov
jg
cmp
xorb
mov
cmp
call
pushf
inc
xor
jno
cmp
out
repnz
cli
add
cmp
pop
je
cmp
jg
rclb
imulb
mov
cmp
out
mov
xchg
sub
loop
mov
js
dec
je
out
mov
cwtl
in
clc
xor
sbb
xchg
mov
cmp
shr
jp
sbb
repnz
popa
mov
repz
jg
negb
mov
mov
cmp
stc
sub
sub
inc
xchg
js
repz
xor
mov
jnp
mov
stos
ss
jge
xchg
jge
pop
clc
mov
push
jmp
mov
sub
mov
mov
clc
jno
hlt
addl
adc
test
lock
mov
pop
mov
mov
xor
sbb
ds
xor
stc
jne
imul
add
sahf
dec
movsl
cmp
jl
xor
inc
xchg
jb
jl
popf
mov
jae
out
mov
and
push
loop
fsubl
lcall
cli
jmp
addr16
in
cmp
lods
jg
mull
sub
icebp
or
movsb
addb
sub
sbb
adc
lods
pop
jb
jmp
lock
test
cmpsl
nop
divb
cmpsb
scas
test
jecxz
jae
mov
js
lods
movsb
ja
mov
test
mov
movsl
adc
xor
xor
cmp
cmp
jmp
jae
xor
js
jns
cmpsl
icebp
xor
xorb
jl
sub
test
ss
push
aas
cld
out
incb
lods
push
js
ja
stc
repz
nop
daa
mov
mov
in
xchg
icebp
cld
dec
mov
mov
adc
mov
sbb
mov
sub
neg
loopne
scas
xor
insb
test
jecxz
lcall
pushf
sbb
mov
push
mov
mov
stos
jg
mov
pushf
and
mov
mov
sarl
mov
repnz
jo
dec
jecxz
mov
sti
icebp
mov
imul
mov
mov
js
addl
out
adc
mov
fildll
cld
and
jbe
incl
sbb
ss
aas
jle
mov
jmp
lret
popf
jno
mov
mov
jo
sbb
fs
sbb
aam
in
int
ret
sbb
mov
mov
std
adc
mov
mov
in
cld
mov
cli
inc
add
sbb
nop
popa
jecxz
pop
mov
xor
loop
sub
mov
ja
aas
bnd
cmpsl
and
repz
xor
mov
sub
insb
pop
cmp
and
inc
jns
and
mov
dec
sbb
stc
sub
cmp
idiv
movsl
add
jge
negl
mov
ds
mov
xor
cmp
scas
int
cld
cmp
cli
sarb
lods
xchg
mov
cld
mull
hlt
bnd
xor
sub
xchg
mov
lret
jae
push
mov
repnz
xor
jecxz
out
test
hlt
inc
xchg
jno
push
and
push
mov
jmp
adc
xchg
mov
pop
jno
stc
stc
fnstsw
fwait
jnp
pop
sub
mov
mov
mov
jg
imul
dec
enter
lods
fidivrs
mov
mov
mov
xchg
mov
mov
repz
push
mov
popf
push
inc
mov
mov
adc
pop
stos
hlt
lds
jecxz
ss
int
cld
mov
fmuls
in
adcb
cmpsl
pop
stos
sbb
pop
jg
inc
dec
jmp
and
mov
mov
clc
lea
scas
mov
xor
fwait
mov
cmp
test
cld
bound
in
mov
mov
push
mov
mov
inc
add
jo
jnp
clc
sbb
stc
clc
enter
mov
jp
scas
xor
es
jl
xor
mov
dec
push
loop
je
into
stos
js
mov
mov
push
push
cli
stc
test
incl
inc
movsb
sub
lods
aaa
stos
ja
lahf
js
jb
scas
sub
sub
add
sub
ret
addr16
mov
shl
jmp
imul
jecxz
jno
mov
jb
xlat
and
pop
je
and
jecxz
mov
cmpb
xchg
loopne
stos
sub
mov
jb
test
mov
aaa
jmp
mov
mov
cld
mov
push
add
js
jmp
shll
aaa
xor
lock
mov
arpl
mov
hlt
sub
loope
sahf
out
push
adc
mov
sbb
jae
mov
jg
js
sahf
stos
in
test
loop
jg
cld
mov
shll
cld
sbb
push
loop
mov
popf
std
pusha
mov
mov
notb
in
mov
cmpsl
xor
icebp
decl
fisubrl
in
pop
cmp
sbb
sbb
stos
je
int
inc
and
mov
and
adc
push
push
cmp
mov
arpl
mov
mov
sbb
xor
enter
cmp
or
mov
ret
jbe
inc
add
outsl
mov
cmp
mov
in
js
jge
adc
mov
test
rcrb
adc
jae
xor
xorl
cmpsl
psubb
push
mov
add
sbb
js
adc
inc
bound
cli
loope
decl
adc
xchg
mov
test
scas
xor
xor
cmpsb
sbb
push
jmp
repnz
xorl
mov
repz
adc
adc
mov
xor
jb
mov
testb
loope
je
scas
push
lret
inc
or
mov
out
stc
sbb
and
jns
pushf
adc
scas
and
lds
push
mov
cwtl
mov
loop
out
xor
mov
xchg
xor
cmp
repnz
mull
mov
ds
sub
jp
ja
stc
js
test
sub
inc
divl
or
adc
std
stos
mov
mov
mov
inc
pop
bound
sub
and
jns
aam
hlt
mov
xchg
sub
xor
repnz
push
insb
in
clc
je
mov
scas
cmp
jge
test
sub
jae
fwait
jns
test
push
sbb
sub
push
cmc
ss
push
push
bound
aas
sub
mov
lds
andl
mov
es
cmpsl
adc
mov
sbb
sbb
adc
and
xchg
jae
add
jl
inc
sub
fs
cltd
fldt
sub
scas
cmpsl
mov
mov
dec
xchg
pop
shll
cmp
jns
cmp
xor
cli
inc
pop
mov
cmpb
je
movsl
popa
push
addr16
push
fbstp
test
mov
mov
adc
mov
lock
clc
add
jmp
mov
xor
js
pop
cmp
cmp
jg
mov
mov
jns
repnz
ds
mov
sub
and
enter
add
mov
and
mov
mov
fstpl
cld
lods
pusha
aaa
sub
mov
pop
and
cld
lods
pop
mov
mov
clc
mov
xor
xor
mov
mov
mov
jo
adc
repz
stc
xlat
ss
sbb
mov
jae
and
stos
cli
or
lock
je
repnz
clc
stos
hlt
mov
cs
pushl
mov
and
jns
in
into
mov
addr16
enter
jmp
sub
or
aaa
dec
xor
dec
ret
dec
push
jp
mov
jb
repz
add
cld
jno
rcl
stos
clc
add
push
jecxz
cmpsb
arpl
test
clc
mov
jae
test
pop
scas
iret
push
mov
aas
repz
hlt
xor
loop
mov
repnz
fwait
scas
sub
pop
mov
in
and
leave
xor
scas
mov
stos
lock
mov
push
es
shlb
pusha
mov
jb
out
jl
shl
icebp
fnsave
loop
cli
mov
sbb
lods
jmp
cmp
mov
dec
je
dec
call
pop
inc
mov
mov
lods
cmp
negl
adc
or
cwtl
test
lahf
lods
xchg
aas
in
mov
mov
bound
popa
mov
or
jp
mov
dec
cmp
add
mov
add
cmp
xor
icebp
adc
push
loop
rorb
jb
push
repnz
in
mov
jo
adc
fdiv
xor
jno
sub
imul
cmpsl
lds
adc
rorb
cmp
idivl
xorb
xchg
stos
mov
enter
int
test
fdivr
mov
lods
ds
jae
bound
testb
pop
sub
push
adc
mov
adc
xchg
popf
xchg
or
and
xor
cwtl
test
test
stc
jmp
or
out
push
xchg
lods
fmull
lods
gs
in
repnz
pop
popf
aaa
xor
add
daa
mov
fwait
cmc
xor
loop
xor
ljmp
sub
test
stc
arpl
imul
mov
loop
cld
mov
push
rol
stc
nop
inc
and
jecxz,pn
xor
sbb
ss
shll
lods
imul
sub
ja
xchg
cld
icebp
lods
scas
ss
mov
cmp
jl
jno
mov
xchg
mov
scas
aas
xor
mov
adc
aad
imul
test
xchg
cmc
aaa
in
jecxz
or
xor
xchg
divl
or
or
mov
push
xor
mov
lock
and
mov
xchg
mov
lds
sbb
addr16
aas
arpl
inc
add
cmp
shrb
mov
aad
pop
xor
cwtl
and
loop
jns
ret
imul
repz
lods
ja
mov
stos
xor
in
jo
pop
popf
mov
cmp
out
mov
and
ss
xchg
mov
xor
cmp
add
lahf
sbb
mov
js
test
xchg
fmull
cmpsl
stc
mov
cmp
mov
sub
mov
fisubs
js
mov
sub
cltd
test
cmp
sahf
xchg
mov
jecxz
scas
mov
js
push
bound
jo
mov
fdivr
in
rcl
adc
xchg
xchg
mov
sti
xchg
cmp
jns
fs
sbb
loop
cli
hlt
xor
adc
test
mov
xor
lret
mov
div
and
sbb
ljmp
mov
out
test
sbb
mov
lea
loop
cli
add
aas
mov
dec
cmp
test
push
jb
mov
imul
int
mov
inc
xchg
cli
rcll
call
sti
push
test
mov
mov
mov
fcompl
in
out
outsb
mov
xor
mov
arpl
lock
pop
into
mov
push
mov
shl
imul
ret
fidivrl
sub
pushf
dec
xor
mov
pop
jne
mov
jns
jne
xchg
jae
cli
test
sub
mov
xlat
sbb
and
push
imul
mov
stos
loop
inc
push
jp
pop
scas
jno
mov
push
sub
imul
jb
cmpsl
adc
pop
push
pop
inc
and
jecxz
mov
xor
sahf
xor
mov
mov
mulb
out
cmp
addb
imul
pop
mov
lock
test
mov
jp
arpl
push
sub
mov
cmpsl
cli
xchg
lods
mov
idivb
adc
sbb
ja
test
jp
mov
hlt
cli
sti
mov
push
sub
cmp
push
insb
mov
cmp
xlat
imulb
xor
stos
pop
test
out
jp
fdivrs
sub
cmpsb
lock
cmp
adcb
js
inc
jmp
mov
ss
and
iret
notl
and
sub
inc
arpl
sbb
adc
loopne
jns
cld
stc
call
and
xor
hlt
out
jecxz
dec
test
jmp
cli
out
jl
mov
mov
insl
movsb
or
push
cmp
cmpsb
jb
cwtl
lock
sub
jle
outsl
mov
xor
lret
and
mov
jae
repz
mov
cmp
sub
jno
ret
orb
sub
arpl
pop
stos
sti
dec
call
popa
and
pop
xchg
mov
repnz
jo
hlt
and
or
lret
in
cltd
outsb
fwait
mov
inc
jbe
repz
repz
xchg
stc
hlt
pop
test
out
xor
fdivs
and
xor
idiv
arpl
aas
pop
aad
sarb
jo
lods
sub
jl
ja
fdivl
mov
push
stos
cli
pop
sbb
lahf
jb
cmp
mov
movsl
xor
xor
enter
sbb
adc
ret
sub
pop
aaa
mov
push
inc
inc
cmp
hlt
cmp
ret
jbe
stos
test
mov
mov
cmp
ja
xor
mov
xor
xor
lods
test
repnz
ret
pushf
pop
rolb
and
mov
sub
sahf
fs
xchg
mov
pop
xor
movsl
mov
shl
jae
sub
xor
sti
imul
bound
jmp
sbb
adc
dec
mov
and
dec
mov
popf
cld
jns
mov
hlt
mov
lock
xchg
jb
add
push
and
jbe
or
imul
scas
test
lock
fwait
pushf
xor
xor
ja
pusha
loopne
repz
popa
shrb
aas
mov
and
imul
mov
gs
mov
movsl
push
call
imul
bound
aad
push
dec
and
nop
lea
je
cmp
adc
in
cs
fstp
push
clc
sti
pushf
jae
mov
add
in
xchg
xor
test
mov
jo
dec
in
cmp
and
xor
push
xchg
comiss
mov
mov
cld
mov
shlb
adc
cmp
xor
aas
test
mov
fldl
mov
mov
xchg
jg
out
js
hlt
jne
cltd
xor
outsb
adc
repz
icebp
mov
and
hlt
fs
or
nop
or
mov
je
xor
xor
cmp
icebp
mov
sbb
dec
mulb
xor
ss
cltd
imul
scas
pusha
jp
stos
je
insb
pop
fbstp
jns
mov
js
lea
jp
jmp
mov
in
dec
fs
and
lock
jl
xlat
out
and
inc
test
outsl
hlt
xchg
arpl
or
xchg
ficoml
mov
mov
andb
bound
pushf
repz
ret
cmpsl
xchg
mov
fldcw
xorb
cli
cld
repz
rorb
mov
or
jno
xchg
bound
hlt
jo
sbb
jg
imul
cli
xchg
xlat
mov
aas
out
arpl
add
push
shl
jb
xor
mov
ret
jo
mov
imul
mov
push
roll
test
imul
adc
testb
mov
jae
in
xor
xrelease
cmp
je
cli
mov
icebp
adc
sub
shrl
xor
incb
repnz
sub
lods
xchg
addr16
arpl
icebp
jo
cmp
mov
cmp
cmp
add
ret
daa
jg
sbb
jo
std
out
in
ljmp
mov
nop
xchg
push
fs
mov
or
cmp
scas
jl
sbb
imul
imul
cmc
add
gs
mov
cmp
sbb
add
pusha
cli
jmp
and
iret
lret
mov
mov
and
stc
add
les
jno
xchg
xor
cld
mov
mov
stc
add
mov
jmp
push
mov
cltd
and
mov
les
xor
mov
mov
test
jns
mulb
pop
xchg
jp
cmp
cld
xor
mov
pop
xchg
js,pt
mov
sbb
loope
icebp
xchg
jo
js
xor
jp
enter
or
sub
sbb
dec
bound
jae
push
add
mov
scas
dec
and
pop
in
and
cmp
stos
dec
xchg
sbb
lret
pusha
ljmp
cmp
ds
cmp
mov
fs
or
pop
jg
test
mov
lock
cmp
daa
mov
repnz
pop
and
pshufw
clc
mov
mov
cmp
mov
iret
mov
xor
mov
stos
push
loop
test
icebp
xor
mov
inc
dec
mov
mov
cmpsl
xor
icebp
mov
movsl
cmp
sbb
jo
xor
repz
pop
xor
mov
xchg
jno
sbb
jb
sub
mov
push
jns
cltd
pop
push
cld
jp
jns
sub
scas
or
pop
cld
les
stc
mov
cmp
sbb
sbb
jl
xchg
outsl
jmp
mov
imul
cli
mov
ss
sub
mov
mov
xchg
shrb
mov
pop
clc
xor
out
xchg
xor
insb
nop
cmp
jno
cmp
xor
inc
loopne
cld
clc
imul
ljmp
mov
mov
pop
adc
popa
jbe
loop
mov
sbb
jecxz
stos
roll
cwtl
js
aaa
jge
push
xor
cmp
leave
mov
mov
repz
clc
lods
xor
lret
out
into
and
fwait
int3
in
mov
addr16
scas
ficomps
incb
cs
hlt
hlt
sub
imul
xor
push
sub
stos
lret
and
jb
mov
sti
and
popa
aas
mov
sub
stc
dec
xor
nop
jecxz
clc
sahf
repnz
xchg
mov
mov
ficomps
imul
je
cmp
mov
and
jo
sbb
insl
ud1
and
bound
ja
jp
xor
mov
ss
jecxz
dec
das
insb
cld
sbb
ss
into
sub
test
push
mov
xor
popa
les
jg
dec
mov
scas
jns
cli
lock
mov
push
lock
idivl
pop
js
jecxz
inc
loopne
jns
cmp
cld
jo
jl
jle
test
mov
xchg
jle
jno
lods
pop
jno
jecxz
lahf
cmpsl
cli
cmp
in
popf
or
jns
js
imul
sub
bound
das
fwait
jl
test
imul
popf
addr16
in
je
test
scas
ljmp
jmp
dec
ror
mov
mov
xor
jb
push
mov
jecxz
gs
sbb
mov
cmpsl
bound
and
cmp
cmp
xor
cmp
lock
movsl
cli
cwtl
push
repz
jns
and
dec
stc
movsl
xor
insb
xor
and
lock
jno
arpl
xor
ret
loopne
mov
mov
leave
jecxz
aas
imul
and
out
sbbb
fsubs
sbb
and
stc
push
imul
cmpsb
and
movsl
sbbb
in
mov
hlt
mov
adc
lcall
mov
fs
inc
mov
dec
xchg
in
jg
test
stos
scas
mov
ja
mov
mov
jg
fcom
jp
add
xor
fsubs
inc
xor
sbb
jl
sbb
in
scas
lods
and
stos
scas
lock
outsl
imull
stos
mov
jno
mov
xchg
iret
sbb
out
xchg
xlat
mov
call
insb
fidivrl
test
test
mov
addr16
xor
icebp
dec
add
sbb
pop
jge
aaa
aas
jle
pop
mov
aaa
jmp
pusha
out
and
mov
int
cmp
sarb
xor
js
sub
fs
aas
arpl
and
js
frstor
adc
repnz
push
jno
cmpsl
aad
icebp
popf
adc
stos
inc
inc
jmp
pop
cmp
test
xor
out
lods
in
dec
idivl
insl
add
mov
lock
lods
jae
push
mov
mov
roll
scas
cmp
ds
mov
ret
and
sbb
cmp
ja
arpl
cmpsl
cmp
sub
cld
push
cmpsl
imul
imul
sub
ja
ds
add
mov
and
xor
in
xlat
call
mov
xor
mov
fs
mov
pop
mov
jno
movsl
scas
xor
mov
lods
mov
bound
ja
pop
mov
xor
hlt
daa
adc
mov
push
mov
and
xor
pop
fistl
cmpsl
cmpsl
clc
ja
mov
mov
scas
mov
nop
jb
push
lcall
xor
and
or
fwait
pushf
and
inc
mov
std
add
push
mov
and
sub
jb
fs
xor
scas
pop
pop
and
add
cmp
fwait
push
mov
inc
imul
lock
pop
push
in
hlt
divb
push
lret
xchg
add
shl
clc
pop
outsb
shl
aaa
stos
call
lods
xchg
jp
decl
iret
sub
les
jno
jns
stc
into
mov
out
mov
mov
pop
xor
mov
outsl
mov
xchg
sbb
addr16
mov
cmp
testl
imul
lret
bound
xor
add
out
cmp
rorb
ja
in
adc
jmp
cmp
add
cmc
cwtl
mov
incl
cli
movsl
in
inc
sub
add
movsb
movsl
lcall
aaa
loopne
jl
jmp
sub
in
add
pop
loop
shrb
xor
mov
jbe
addr16
jns
inc
pusha
fisubrs
mov
out
jbe
and
and
clc
nop
sbb
scas
hlt
jp
lods
adc
xor
mov
popa
pop
aas
fdiv
repz
call
sahf
xor
pop
sti
mov
mov
arpl
jp
mov
and
clc
in
jns
es
xchg
push
cmpsl
add
aas
push
add
daa
aaa
xor
fwait
cmp
mov
imul
mov
sub
lcall
stos
and
cli
imul
xor
sbb
xchg
pushf
aad
std
jno
mov
xor
sbb
clc
das
jae
test
mov
push
icebp
icebp
xor
cltd
add
mov
or
mov
fwait
xor
jmp
cmp
mov
aaa
mov
xor
sbb
imul
jg
sub
mov
and
outsl
js
mov
in
stc
notl
loop
jno
notb
aas
repz
fwait
icebp
sub
js
fidivl
or
push
mov
scas
jle
xchg
inc
and
bound
cmp
shlb
aas
sub
xor
fildll
mov
jg
icebp
jl
jb
lods
push
repz
mov
jge,pt
int
mov
in
mov
cmp
sub
subb
jo
xor
and
stos
in
loop
aaa
add
ror
icebp
jae
mov
xor
mov
movsb
mov
subb
mov
lods
imul
scas
sub
xor
xchg
mov
mov
scas
cmp
fs
stc
mov
shll
xor
ret
shlb
cmp
sar
mov
mov
ja
pushl
incb
xor
cmpb
mov
cwtl
jne
imul
jno
pushf
dec
xor
iret
arpl
sub
int
mov
cwtl
adc
andl
nop
jecxz
cmp
arpl
mov
jns
stos
cmpsl
jmp
test
xor
ds
jo
dec
arpl
mov
frstor
and
out
jl
gs
sbb
xchg
push
adc
fisubrl
rorb
cmp
std
dec
and
je
cmp
sub
lock
mov
stos
xor
cmp
push
cli
add
jmp
out
jg
mov
mov
imul
mov
jb,pt
shlb
jnp
or
cld
sbb
sub
cmp
adc
sub
andb
cli
inc
add
inc
pusha
cmp
ds
and
xor
cmp
cmp
mov
mov
jbe
jmp
fistpll
insb
cli
add
imul
xchg
cld
mov
mov
repz
and
cmpsb
sub
lods
cli
pop
test
sub
pop
pop
mov
jae
mov
xlat
bt
rorb
cmp
addr16
test
jl
mov
jp
inc
mov
jo
clc
pusha
insb
xchg
out
js
cli
je
adc
mov
mov
out
cld
adc
pushf
push
mov
cmp
lods
mov
mov
stc
ja
jecxz
mov
mov
ret
bound
lret
add
jl
dec
xchg
and
hlt
mov
imulb
xor
bnd
ja
insb
cld
jb
jno
pop
pushl
jl
xchg
out
xlat
aas
mov
in
incb
sahf
jecxz
cmp
mov
jb
fmull
into
lock
mov
out
mov
sub
scas
aaa
mov
mov
and
mov
mov
cmp
xor
stc
jp
in
mov
loope
cmp
scas
push
cmp
mov
or
xlat
inc
loop
mov
add
and
bound
enter
and
cmp
push
pusha
add
sub
imulb
loop
mov
mov
push
ljmp
xchg
sbb
fwait
and
mov
jb
inc
cltd
test
cmp
ret
mov
lods
test
mov
push
sub
es
mov
jp
out
out
xor
cli
shlb
sbb
xchg
icebp
xor
out
cmpsb
mov
cmp
ret
stos
or
movb
ret
mov
and
sbb
cmp
ljmp
adc
test
cmp
mov
sbb
mov
inc
pop
mov
pop
mull
sbb
add
add
mov
xlat
enter
mov
repz
adc
out
aad
xchg
mov
cmc
fs
test
push
jmp
mov
hlt
clc
arpl
jg
es
ret
xlat
mov
jno
ret
movsb
pop
fidivs
push
clc
mov
sbb
mov
inc
fstl
push
repz
mov
cmp
inc
pop
add
cld
cmp
iret
stos
shrb
cmpsb
mov
je
xor
jo
scas
mov
js
xor
mov
xor
sahf
mov
mov
cmp
imul
jbe
inc
ficoms
sbb
cmp
in
pop
mov
fstl
cmp
lods
mov
cld
mov
cs
stos
inc
mov
ja
jl
xchg
and
mov
cld
insb
cmp
xchg
cmp
add
jecxz
add
ss
mov
enter
jae
ja
cmp
ljmp
fdivl
jle
fimull
sub
stos
cmpsl
lock
je
bound
loop
dec
in
xor
cwtl
cmp
cmp
jg
push
mov
outsl
mov
ss
cmp
repz
sub
mov
and
xchg
mov
mov
mov
in
pushl
mov
scas
xchg
stos
in
jecxz
xor
clc
lahf
mov
add
mov
and
xor
mov
test
xor
fldl
mov
orl
ds
mov
cld
mov
imul
and
lock
cmp
decl
ds
cmp
not
jae
rol
jmp
mov
arpl
cld
add
fmuls
in
pop
pop
mov
adc
adcb
scas
scas
xor
rorl
mov
hlt
jns
inc
out
repnz
fldcw
divb
and
mov
rcl
out
shll
nop
fistpll
mov
je
mov
jo
ss
mov
jecxz
idivl
test
mov
repnz
mov
push
mov
repnz
push
jno
pushf
scas
sub
and
cmpsl
jg
mov
bound
fcompl
insb
in
cltd
test
aas
mov
addr16
jo
mov
shll
cmpsl
test
icebp
fdivl
aaa
cmp
xor
push
scas
cld
mov
cmp
inc
sbb
scas
neg
sbb
fwait
stos
jno
stos
imul
sub
cli
mov
cmp
mov
push
adc
xlat
cmp
sub
repnz
imul
gs
aam
ja
push
notl
in
pop
mov
imul
stc
and
jg
lods
push
add
pop
or
mov
hlt
xchg
scas
aaa
xor
cmpsb
popf
jae
mov
stos
out
mov
lcall
jl
or
movsl
mov
dec
lock
mov
pop
mov
mov
mov
in
mov
and
inc
jmp
cmpsb
repz
ss
repz
sub
pushf
mov
cmp
ficompl
mov
adc
cmp
xlat
mov
add
sub
cmp
add
mov
jmp
push
cld
and
mov
jp
outsb
das
repnz
out
mov
ja,pn
jl
pushl
test
jp
stc
jecxz
addr16
ds
inc
mov
add
bnd
jo
aad
xchg
pusha
test
xor
and
loop
scas
mov
out
push
add
pop
mov
movsb
sub
int3
pop
sub
hlt
add
cmp
js
lcall
cwtl
mov
stos
pop
mov
push
xlat
ret
xor
movsb
pushf
push
test
stos
insb
or
add
ds
aas
xor
aaa
jb
mov
lock
fnstsw
push
cmp
push
mov
repnz
lock
or
clc
jge
sbb
jns
jmp
xorb
insb
adc
dec
test
add
int3
pop
and
mov
push
mov
test
xchg
jno
ss
cli
mov
or
lds
and
jns
xor
je
lock
mov
andb
cmp
jl
cmp
mov
aaa
mov
in
jg
mov
jae
daa
sub
add
cli
xor
jp
mov
cmp
out
cmpb
and
jecxz
jno
rcrb
mov
mov
xorl
call
idivb
cmp
jge
push
test
mov
imulb
mov
adc
scas
cmp
int3
sahf
mov
ss
faddl
push
xlat
mov
cmp
je
jg
jno
popf
adc
adc
popa
in
mov
jo,pt
je
cwtl
fdivrl
stos
xchg
and
jp
imul
popa
inc
ja
fiadds
jae
pop
push
push
mov
xor
push
and
popa
xor
fstpl
or
cmpsb
jns
emms
lods
jg
cmp
cli
jae
lods
clc
cmpsl
leave
mov
repz
aas
lods
int
cs
js
xchg
in
bound
jl
mov
mov
stc
mov
fdivrs
and
cmp
mov
imul
add
mov
movsb
hlt
lret
sbb
addr16
js
push
and
cwtl
clc
cmp
mov
js
push
xor
jg
cmpsl
jno
lock
and
ds
add
push
and
mov
mov
xor
outsb
divb
fmul
sbb
sahf
loopne
jb
xor
jg
cmp
ds
add
sub
mov
mov
adc
mov
stc
fbstp
orb
add
pop
call
lahf
arpl
xor
in
ja
cmp
outsl
mov
sub
inc
das
lods
xor
push
mov
jmp
xor
loop
mov
fdiv
pop
fistpll
mov
cwtl
hlt
mov
dec
fcomps
aas
cld
or
push
clc
sbb
shrb
cmp
clc
lods
hlt
inc
and
adc
aas
imul
push
cwtl
mov
mov
push
cmp
jae
clc
mov
stc
lods
cli
jg
cld
inc
js
jp
jg
test
cld
pop
cld
cmp
add
je
lock
sub
sub
xchg
mov
test
mov
icebp
and
jg
arpl
insb
hlt
jmp
scas
xchg
lods
divb
mov
sti
mov
jne
cmp
mov
mov
and
cmp
jae
movsl
adc
push
insb
scas
mov
jb
sbb
adc
xor
lcall
mov
divb
xchg
jmp
mov
aaa
ds
adc
insb
sahf
clc
dec
xor
lds
jb
and
lock
or
add
stc
shr
add
sub
mov
push
jno
sub
adc
rolb
js
test
xor
or
mov
cmp
nop
dec
mov
jg
sub
jae
sbb
sbb
mov
mov
imul
je
ja
idivb
mov
in
mov
sub
and
jmp
fwait
arpl
repz
enter
jmp
xor
sub
addr16
outsb
ss
jns
mov
xor
cmp
pusha
sub
shlb
idivl
xor
shll
inc
lods
and
jb
pusha
lret
mov
ja
mov
icebp
je
nop
scas
js
out
cmp
outsl
idivl
xor
push
in
push
lods
movsb
in
scas
mov
out
mov
stos
cmp
scas
std
inc
mov
xor
mov
fistps
pop
lret
shrb
add
xor
test
mov
mov
xchg
mov
test
daa
cmp
cli
sbb
sub
sbb
mov
xor
in
in
sahf
sahf
insb
mov
inc
sub
mov
jmp
andb
sub
pushf
cmp
mov
jo
jecxz
out
mov
cmpl
fwait
hlt
jecxz
add
mov
jns
mov
repnz
lret
aaa
fdivr
inc
test
xor
in
pushf
mov
mov
das
movsl
mov
xchg
adc
sub
lock
mov
or
jns
hlt
jae
and
popa
fs
xor
gs
and
clc
cltd
cmp
sub
mov
xor
sahf
mov
jmp
mov
or
adc
out
pop
ja
fildll
sbb
das
jmp
xor
test
sub
adc
xchg
in
lods
iret
mov
cmp
pushl
movb
and
pushl
aas
negb
imul
lea
hlt
mov
xor
repnz
imul
mov
test
mov
sub
jg
ja
stos
stos
clc
mov
sub
mov
pop
xor
repz
sbb
mov
or
ja
xor
cmpsb
cli
scas
jae
jp
loopne
mov
xchg
lods
jecxz
jno
mov
or
jg
jnp
or
mov
in
jp
dec
stos
iret
mull
repz
jl
out
hlt
clc
push
ds
mov
mov
jp
jae
cmpsl
jg
xor
inc
mov
aad
cltd
mov
ss
sbb
mov
push
lahf
cmp
int3
add
mov
jmp
jae
dec
jb
jl
neg
fistpll
test
je
arpl
ljmp
mov
in
es
mov
insb
divb
fcomip
pusha
repnz
mov
mov
stc
call
ss
cltd
sahf
loopne
and
imul
out
js
jno
subl
mov
pop
in
stc
scas
xor
outsl
and
cld
push
add
mov
jecxz
mov
mov
dec
out
imul
lods
popa
imul
cltd
mov
stos
jl
xchg
nop
or
lods
xor
mov
test
jo,pn
pop
mov
divl
mov
cmp
clc
das
test
aaa
xchg
or
add
jl
sub
arpl
in
out
lahf
cmp
daa
stos
sahf
scas
idivb
cmp
mov
mov
in
xor
gs
xor
pop
sub
mov
arpl
and
push
js
into
jmp
pop
inc
or
test
mov
mov
mov
gs
stos
jp
aas
mov
sbb
adc
aaa
jne
test
cli
idivb
xor
fdiv
jo
jecxz
or
daa
loop
cmp
mov
test
mov
movzbl
mov
ds
outsl
cmp
hlt
stos
fisubrl
inc
sub
mov
cmpsb
xor
sub
jl
and
hlt
mov
inc
xchg
push
in
mov
scas
pop
dec
mov
ds
stc
mov
and
ret
stos
push
stos
out
mov
push
int
mov
lods
mov
shlb
ss
je
aaa
cmp
test
loop
mov
fsubr
mov
jb
pop
enter
jl
xor
in
sbb
enter
shll
fbstp
cmp
inc
cmp
push
xchg
out
cmp
xchg
mov
mov
jo
bound
mov
mov
jl
imul
push
xor
mov
lds
mov
push
jge
mov
xchg
pop
js
pop
mov
mov
mov
mov
xor
stos
sub
ja
nop
inc
icebp
mov
sbbl
cmp
or
mov
mov
repz
imul
adc
jb
dec
inc
cmp
and
jecxz
js
mov
inc
je
aad
jnp
adc
lock
mov
loopw
scas
aas
mov
sbb
gs
jecxz
xlat
add
out
stos
repnz
sub
sub
js
cwtl
fwait
idivl
mov
sbb
xor
fbstp
in
lock
cmp
lcall
arpl
les
lods
jp
lods
jl
xchg
fidivl
dec
js
fsubrl
dec
dec
lds
adc
lea
imull
sub
arpl
cmp
outsb
jae
mov
jno
stos
jo
lods
adc
sbb
mov
jns
push
mov
jecxz
xchg
jae
clc
jo
inc
loopne
mov
je
jns
cltd
hlt
sbb
sbb
and
xor
negb
mov
push
sahf
aas
mov
lahf
xor
xchg
jg
and
movsl
mov
stos
divb
nop
or
decl
imulb
popa
clc
repnz
xor
cmp
hlt
jg
pushf
mov
mov
in
pop
or
arpl
and
jo
push
hlt
aaa
imul
jb
xchg
sub
xor
ja
popa
cmp
jg
imul
rclb
jo
enter
mov
clc
inc
mov
mov
arpl
mov
push
xchg
sub
repnz
hlt
pop
mov
mov
sub
clc
xor
cli
mov
ja
popa
push
jb
jo
loopne
push
xor
cmpsl
sarl
xchg
test
mov
icebp
stc
das
cmp
adc
divl
mov
sbb
jecxz
dec
lods
and
xor
insb
test
jno
xor
mov
stos
sub
decl
hlt
rolb
rorb
and
aas
mov
jg
cld
icebp
jo
out
mov
idivl
xor
mov
popa
dec
pop
cmp
xor
adc
out
jns
clc
and
jg
pushf
idivb
cli
jmp
daa
divb
test
test
cmpsl
aas
mov
inc
out
jae
icebp
popf
hlt
mov
jg
pop
pop
mov
push
insb
cmp
js
clc
mov
scas
push
test
mov
divb
lods
lds
xor
cmp
sarb
jb
mov
cmpsl
pop
cld
repz
lret
inc
dec
cmp
cmpsb
cmp
sub
sub
test
xor
out
mov
push
clc
clc
or
incb
cmp
imul
sti
icebp
loopne
scas
jecxz
xor
das
sub
and
fwait
out
loopne
out
repz
cmp
enter
sub
inc
xchg
cmp
repz
xchg
std
icebp
das
and
jge
insb
mov
ret
repz
scas
push
es
adc
aad
bnd
inc
mov
movb
sub
xchg
xor
jns
mov
xor
jle
mov
sbb
mov
mov
stos
xchg
xor
stc
and
sub
push
jg
imul
ds
mov
imul
mov
loop
scas
popf
andb
mov
mov
jb
mov
mov
inc
movb
jns
xor
xor
jnp
mov
cmp
cli
mov
out
scas
pop
mov
lock
jb
jno
loopne
mov
inc
mov
sbb
add
stc
lods
jmp
sbb
mov
sub
shrl
and
xor
inc
push
sbb
adc
mov
push
xchg
xor
xor
cmp
adc
push
mov
xlat
or
push
ds
jl
arpl
mov
stos
test
jmp
mov
xor
mov
idiv
nop
jae
out
mov
mov
cld
xor
jnp
and
add
xor
aaa
hlt
cmp
les
cmp
insb
push
and
divb
loop
ss
jno
into
xor
ja
fucomip
inc
jno
push
mov
fdivrs
cld
xor
sbb
mov
shl
mov
mov
das
arpl
test
aaa
clc
test
mov
imul
xlat
or
pusha
pop
imull
add
cli
ss
in
dec
test
mov
mov
cmp
or
pop
loope
jle
xchg
test
mov
mov
decb
das
clc
xor
dec
lahf
or
loopne
hlt
sub
call
sbb
ss
sub
out
cmp
cli
mov
loop
mov
mov
hlt
xor
les
fs
cmp
pop
jno
imul
adc
fsubs
clc
sbb
rclb
cwtl
inc
repz
jb
mov
jae
out
cmp
add
adc
mov
repz
pop
femms
shrb
out
rol
jae
das
mov
test
scas
mov
je
mov
cmp
xor
shl
mov
mov
xor
stc
aad
fwait
or
pop
jmp
push
mov
xchg
test
mulb
xor
sarl
xchg
mov
aad
push
fldl
mov
mov
xchg
mov
sbb
cmpb
outsb
ds
adc
icebp
out
fs
shlb
jge
test
mov
add
mov
mov
cmp
jno
mov
pop
mov
loop
stos
sbbb
jns
jae
test
cmp
sub
dec
add
call
cmp
fisubs
aad
outsl
mov
pushf
inc
fcompl
pushl
mov
fdiv
imul
scas
jmp
mov
sub
and
adc
insb
clc
mov
dec
push
lret
loop
mulb
out
xor
inc
cld
lret
icebp
adc
outsl
xor
stos
in
xor
cmp
ja
jg
adc
xchg
jb
popf
mov
fs
mov
xor
cld
mov
es
test
mov
jb
jmp
cwtl
xchg
xchg
xchg
pop
scas
xchg
idiv
clc
sub
mov
lods
mov
adcb
cmp
movsb
out
ss
call
jp
stos
mov
xchg
mov
loop
jl
mulb
inc
mov
mov
cmp
std
lods
mov
addr16
add
xacquire
xor
mov
fs
addr16
in
and
sub
cmp
das
or
and
lcall
jg
mov
sbb
hlt
jno
repnz
and
hlt
clc
lret
lahf
lock
mov
mov
xor
jo
xor
xor
not
cld
or
sbb
xchg
mov
imul
mov
clc
lods
aas
jmp
pop
imul
mov
out
jmp
lock
movsb
dec
leave
test
mov
das
xor
outsl
nop
mov
je
scas
loop
shll
mov
stos
cmp
arpl
fwait
mov
mov
pop
jge
test
in
mov
jb
fimuls
sbb
gs
sub
jg
scas
mov
sbb
mov
stos
loopne
repz
mov
in
cmpb
cmp
cmp
push
dec
negb
add
inc
aas
push
test
js
adc
mov
and
jae
icebp
xor
mov
dec
adc
mov
jb
dec
loop
inc
cmc
mov
out
xor
xlat
fs
sbb
mov
hlt
movsl
xor
mov
daa
xchg
aas
clc
sub
and
test
popa
pusha
xor
xor
and
xor
cmp
sbb
dec
jecxz
imul
sub
lret
cmp
push
cwtl
imul
lock
add
mov
fdivs
mov
mov
imul
outsl
in
adc
orl
cld
mov
cmpsl
xor
ss
nop
pop
icebp
aas
lock
mov
jge
sub
subb
jp
nop
and
mov
mov
xor
lods
ja
mov
mov
mov
lcall
test
pop
jmp
mov
xor
pop
mov
sbb
stos
in
stos
scas
jae
mov
cld
clc
mov
push
mov
sahf
jo
xor
divl
nop
dec
mov
inc
fwait
imul
jecxz
xor
loop
cmp
repz
add
or
mov
sub
fwait
iret
adc
hlt
jae
loopne
stc
sub
jno
ds
push
arpl
and
out
fchs
imulb
sbb
sbb
and
xchg
jno
jmp
mov
js
clc
jns
cld
hlt
mov
in
mov
xchg
pushf
sbb
push
mov
jge
aas
inc
lods
out
cmp
iret
out
jb
add
mov
jp
xchg
cld
mov
cmp
lods
push
pusha
scas
jp
mov
imulb
int3
pop
lock
jns
mov
or
and
mov
jl
or
out
repnz
jo
inc
imul
jno
lock
repnz
or
clc
sbb
fdiv
cmp
cmp
lock
and
cmp
imul
xadd
cwtl
insl
imul
ss
shrb
clc
inc
cmp
cmp
sub
js
stos
imul
testl
jo
mov
test
xor
mov
lock
and
sarb
xor
sbb
int3
cwtl
ds
or
stos
jmp
push
aaa
xor
xor
jg
test
mov
test
mov
je
mov
mov
cli
jecxz
mov
sti
out
repnz
cmp
clc
je
lods
mov
hlt
jg
mov
push
cmp
rclb
mov
test
cmp
test
jp
stc
dec
sahf
fldcw
cmp
add
out
jp
sub
mov
sbb
outsl
stc
jns
add
std
fs
out
jecxz
daa
xchg
arpl
pop
loopne
cmp
mov
lea
je
inc
mov
push
mov
jae
shl
test
xor
cmp
jp
mov
ret
cmp
divl
ja
fildl
je
fwait
in
mov
test
fwait
cli
mov
stc
mov
push
in
sub
repz
insl
push
xchg
jae
cmp
sbb
jno
mov
mov
arpl
sbb
mov
or
or
sbb
icebp
jecxz
into
movzbl
sub
adc
sub
mov
jns
xor
mov
mov
cmp
mov
scas
mov
aaa
xchg
mov
jns
clc
cmpsb
bound
and
into
pop
mov
cmp
test
jb
mov
xor
popf
jae
and
ss
hlt
mov
fldcw
sub
repnz
mov
inc
add
ss
loope
in
lea
jge
mov
lahf
ja
incb
or
sbb
psraw
lods
ss
pop
adc
jg
cmp
test
outsl
mov
cli
and
mov
and
dec
xlat
xchg
inc
jo
lock
movsb
ja
xor
shrb
loop
lock
sub
ds
in
mov
adcl
xor
or
aaa
ja
in
jp
pop
lods
ldmxcsr
repz
fsubrl
lods
sbb
adc
add
ja
mov
jns
cmp
adc
adc
xchg
adc
repz
inc
xor
cmp
out
xchg
hlt
insl
divl
mov
cli
pushf
jl
jg
pop
and
push
pusha
jle
not
xlat
mov
inc
imul
cld
xor
mov
jg
push
xor
mov
loopne
jb
xor
push
inc
add
mov
sub
clc
mov
hlt
je
mov
sub
clc
sub
lock
scas
imul
mov
fsubs
cmp
mov
push
jb
xchg
xor
ss
fcomps
fdivrs
jle
jmp
lock
xor
cmp
fldl
mov
fbld
cwtl
mov
mov
mov
mov
jp
sahf
stos
scas
cmp
pop
mov
mov
mov
mov
push
loope
test
add
int3
stc
and
cmp
aaa
mov
jmp
das
xor
cmp
mov
or
mov
imul
scas
jp
jg
lock
cld
arpl
cwtl
test
scas
jecxz
xor
loopne
mov
or
mov
mov
mov
pmuludq
popf
xor
cmp
xor
ret
and
lods
xorl
cmp
jecxz
jno
xor
insl
and
mov
sbb
pop
dec
mov
cmp
sbb
mov
xor
dec
adc
push
fisttpll
jae
cli
push
jg
add
mov
sub
mov
lods
and
push
ret
push
in
sub
jne
and
test
aaa
cwtl
insb
cli
out
lahf
clc
enter
xlat
rorl
lock
mov
popf
popa
adc
je
fs
lods
cmp
fsubp
popf
ret
push
mov
scas
pop
scas
out
insb
jno
push
hlt
fst
in
mov
rolb
js
cmp
mov
icebp
xor
mov
ss
sahf
mov
xchg
mov
sbb
mov
jb
shlb
xor
add
repnz
imul
or
xor
mov
icebp
jp
cmp
nop
mov
mov
xchg
das
jp
outsb
xchg
cld
in
sub
xor
mov
adc
add
mov
xor
sub
mov
cmp
jl
xor
out
dec
adc
test
jge
divb
xchg
cmpsb
lret
and
repnz
hlt
les
pop
mov
nop
lods
cli
jecxz
mov
sahf
hlt
sbb
jp
repnz
xor
sbb
divb
jge
arpl
push
jecxz
mov
jnp
aam
rep
imul
add
xchg
popf
rclb
push
xlat
nop
out
xor
das
sub
ss
xor
mov
inc
adc
cmpsl
jp
jno
adc
or
outsb
pop
add
test
sub
divb
add
jns
inc
mov
aas
std
iret
mov
testb
imul
jge
sub
add
and
xor
mov
pop
call
enter
fxch
jl
mov
lock
in
ja
push
in
jmp
jp
lock
mov
jae
xor
mov
mov
jp
mov
stos
mov
jl
loope
repnz
mov
mov
cld
mov
sbb
movsl
push
loop
sub
mov
and
or
jno
sbb
sub
imul
addr16
imull
popf
shll
repz
test
aaa
ret
pop
repnz
daa
gs
cmp
imul
jg
incb
xchg
cmp
mov
cmp
jne
lea
sbb
mulb
cld
xchg
cli
xchg
push
and
xor
ja
mov
mov
mov
arpl
je
cmp
loop
mov
hlt
mov
cmp
icebp
jns
jg
mov
test
or
xchg
xor
gs
mov
sub
jo
scas
jl
dec
and
fcompl
push
mov
mov
aas
xchg
mov
ja
sbb
ds
lods
mov
jae
iret
mov
adc
sub
xor
jo
jmp
cmp
xor
xor
stc
fdivl
bound
and
cmp
mov
dec
lcall
inc
movsl
fadd
ss
addr16
outsl
mov
sub
cmp
jle
fisubrs
xor
mov
add
std
jb
stc
jo
cmp
cld
ja
jo
lods
shll
mov
cmp
loope
sarb
inc
inc
clc
add
xor
testl
mov
test
mov
cmp
imul
xchg
in
pop
inc
add
cmp
ficoms
jl
arpl
hlt
pop
rorb
insb
sub
popa
lret
jno
imul
aas
clc
adc
fidivs
stc
out
ja
sahf
shrl
aaa
mov
das
in
sub
or
ss
aas
adc
lcall
icebp
in
repz
cs
ja
mov
inc
dec
insl
xor
sbb
je
mov
div
idiv
das
jno
jb
mov
pop
jl
insb
gs
lods
lcall
test
std
lock
pop
or
mov
jo
mov
cmp
lds
cmp
mov
jl
xor
les
sbb
into
fdivrp
inc
mov
scas
arpl
mov
add
imul
ret
xchg
clc
andb
stos
jp
test
xor
repz
and
loop
xor
lea
idivl
mov
xor
push
jb
mov
bound
popa
push
std
gs
inc
push
movsb
pop
ja
test
inc
ljmp
and
inc
add
mov
pop
imul
imul
stos
lcall
out
bound
fildl
sbb
cltd
pop
jae
and
rclb
aad
es
and
push
aas
sbb
js
xchg
jns
ds
imul
aaa
rclb
ds
data16
fldl
out
std
add
cwtl
and
jecxz
xor
loop
mulb
rolb
xlat
lock
and
and
push
dec
orl
fadd
sub
stc
ja
sub
rorb
cmp
inc
fwait
sub
xor
jb,pn
out
jo
lods
cli
rorb
imul
and
stos
scas
scas
sbb
scas
clc
idivl
es
mov
mov
xchg
rcrb
mov
sub
add
enter
loopne
and
popf
sahf
and
out
ja
subb
and
xor
js
add
jp
jmp
aam
or
mov
sub
popa
push
arpl
add
jg
fcoms
jl
outsb
cmp
jb
loop
jo
lods
adcb
cld
jno
mov
popf
addr16
jmp
lock
mov
in
add
sbb
fwait
scas
insb
cmpb
std
pop
add
sub
cmp
cmp
cli
or
lods
rcl
cltd
hlt
jno
popa
xlat
mov
sub
sbb
leave
js
jmp
lcall
fs
mov
and
notb
out
js
pop
cmp
repnz
in
out
clc
mov
mov
jns
or
mov
cmp
add
imul
sub
lock
inc
lcall
and
jl
inc
sub
xor
and
sbb
xchg
sbb
pushf
aaa
ror
xchg
mov
or
insb
mov
add
inc
cmp
aas
test
hlt
repnz
popf
mov
sub
pushf
addr16
sub
jmp
jae
in
mov
pusha
lret
roll
inc
xorb
fdivs
fsubr
cmp
je
xor
cmp
bound
arpl
mov
xchg
in
inc
cld
lods
jle
stc
xor
mov
lahf
mov
pop
je
jae
ss
sub
lcall
mov
stc
div
mov
mov
mov
mov
mov
xchg
scas
stos
imul
pop
ret
jmp
mov
xchg
stc
and
push
adc
push
xor
xor
es
cmpsb
lock
sub
insb
push
and
je
xor
in
mov
js
lods
aaa
mov
divl
jne
xlat
inc
mov
mov
sub
imul
mov
xor
testb
fisubs
jl
inc
mov
je
jg
negb
in
jmp
cmp
mov
jns
xor
shrb
mov
pop
test
lock
xchg
clc
stos
mov
adc
lods
stc
cmp
test
loope
jae
sub
icebp
mov
popa
mov
push
or
loopne
jmp
lods
pop
cmp
jb
fs
sub
pop
mov
clc
call
ret
leave
jecxz
movsl
mov
cmp
xor
mov
mov
mov
cmp
push
jl
fwait
fs
loop
mov
adc
cmp
push
jp
and
mov
inc
mov
pushf
sub
dec
or
hlt
xchg
je
mov
dec
mov
clc
shlb
call
mov
ret
lods
cmp
in
push
or
xor
push
jo
mov
mov
loope
stos
xchg
aas
mov
jl
jbe
sahf
lods
insb
cmp
push
xlat
mov
xchg
jae,pt
cmp
cmp
shl
pop
ja
out
fistpll
dec
sbbl
mov
jb
xor
fsubr
fistps
loop
clc
mov
loop
mov
in
inc
outsl
sub
out
mov
pop
ja
inc
jecxz
dec
mov
testl
insb
jle
icebp
stc
xor
xor
xor
lock
ss
clc
mov
jb
clc
and
xchg
stos
repz
mov
sti
jno
repnz
mov
sti
mov
sbb
inc
mov
in
mov
mov
xor
or
inc
sub
es
sub
fnstenv
mov
mov
and
js
lock
or
jo
gs
mov
mov
pusha
adc
icebp
mov
fisttpll
xor
shlb
enter
aaa
mov
dec
add
bound
inc
stc
mov
ja
test
sbb
xor
sub
fidivrl
loop
cmp
repz
cmp
mov
shrb
js
insb
cwtl
lock
mov
mov
mov
out
dec
adc
daa
xchg
mov
mov
adc
jno
sub
fwait
je
subl
stc
fwait
or
mov
movsl
js
mov
outsb
mov
cmpsb
scas
sub
lret
js
out
clc
imulb
pop
jns
sbb
mov
xchg
subb
sti
cltd
in
xchg
out
jmp
sti
mov
inc
or
inc
add
and
xchg
push
iret
or
loope
or
sub
pop
icebp
in
and
divl
dec
insb
dec
xlat
push
cld
jo
lcall
mov
insb
jl
inc
xor
inc
and
scas
cmp
push
jb
rcrb
insb
clc
lcall
cs
mov
pop
xor
repz
mov
pop
jae
jns
jb
mov
mov
repz
cmp
or
icebp
push
cmp
pusha
test
mov
xor
pop
js
or
lock
lods
jnp
mov
mov
insl
cmp
enter
jecxz
fisubrl
mov
in
inc
out
incb
ss
insb
jp
pop
gs
clc
fucom
mov
sahf
and
mov
xor
test
adc
lea
out
mov
xchg
xor
push
popf
jp
or
add
std
xchg
sub
sub
mov
mov
cmp
mov
add
loop
mov
ss
cltd
xor
or
mov
scas
adc
sub
daa
jae
fnstsw
sahf
jecxz
xor
xor
lods
cwtl
cmp
mov
lcall
xor
and
jecxz
jo
mov
loop
cmp
jne
ss
call
xchg
jns
xchg
add
and
mov
subl
loop
cmp
cmp
push
jp
push
and
popa
mov
pusha
pop
jl
testl
mov
ret
push
imul
jp
ss
movsl
outsb
mov
hlt
ss
out
jae
pop
adc
sub
divb
loopne
js
stc
lods
je
ss
and
popf
xor
xor
mov
in
movsl
scas
jbe
sti
fdivrs
adc
mov
mov
ret
sbb
mov
add
js
inc
mov
shrb
mov
je
mov
mov
stos
mov
xchg
jb
lcall
xor
dec
lods
inc
jb
dec
popa
sub
dec
pop
in
repz
adc
sti
hlt
lock
ja
dec
jp
push
fsubp
jg
js
loop
ljmp
add
int3
clc
add
pusha
xor
movsl
stc
push
jb
rep
je
ret
cmp
aad
ljmp
cmpsl
lret
xor
xlat
insl
and
jo
test
jg
cwtl
jp
cli
sub
loopne
clc
jae
mov
das
mov
popa
insb
jecxz
fs
or
lods
cmp
xor
mov
fdivs
fistpll
repz
mov
scas
pop
sbb
cli
xchg
jecxz
ds
mov
sub
mov
out
jo
je
mov
xor
imul
mov
sbb
cmp
repz
jg
movsl
add
mov
cmp
jns
add
cmp
test
in
sbb
adc
mov
cmp
bound
ret
loopne
idiv
hlt
jns
pop
jbe
popf
iret
repnz
das
inc
das
add
add
aaa
jno
cli
jno
jge
mov
inc
jecxz
ljmp
cli
rorl
mov
mov
jp
push
cs
mov
sub
pop
xor
loopne
js
cli
xor
adc
and
out
hlt
push
xchg
push
cmp
cmp
mov
ss
fs
movsl
sub
xorb
pop
inc
shrb
test
mov
sub
in
xor
fs
and
lds
mov
clc
dec
mov
sbb
xor
mov
addr16
insl
aaa
cmp
mov
rcrl
push
mov
aad
sub
sub
mov
mov
xor
sub
push
movsl
xchg
adc
repnz
inc
scas
fs
stos
jo
pushf
mov
mov
mov
sub
mov
es
jecxz
pop
mulb
mov
sub
cmp
je
mov
mov
xchg
mov
lret
pop
jae
cmp
mov
je
cmpsl
sub
imul
mov
mov
mov
jecxz
cmp
adc
xor
push
push
jae
fwait
xor
mov
lods
pushf
lock
iret
push
add
mov
insl
mull
or
repnz
shlb
sti
add
mov
mov
das
sub
fucomip
push
das
arpl
cld
pop
and
fstpl
mov
push
test
cld
push
push
add
dec
roll
mov
dec
jmp
sub
push
je
mov
jae
notl
and
sti
and
pop
movsb
mov
incb
fdivr
mov
jae
sbb
xor
jb
push
mov
ds
ja
mov
leave
pop
mov
test
mov
scas
mov
loop
aaa
mov
shlb
popa
mov
mov
mov
divl
jae
mov
scas
mov
sbb
int
mov
mov
stos
mov
mov
mov
repnz
stos
hlt
xor
xchg
sar
and
popf
sarb
ds
ja
outsl
mov
scas
mov
mov
hlt
jecxz
sarl
movsb
out
add
lock
sub
xor
stos
mov
imul
and
test
sub
and
cli
mov
repnz
int3
lock
imul
das
notl
or
shlb
pop
repz
jne
aaa
inc
and
push
stc
in
mov
rcrb
lods
pushl
imul
jbe
decb
xchg
out
mov
or
hlt
pushl
jno
or
ds
mov
and
mov
xor
cmp
push
js
push
mov
push
lods
sbb
ja
arpl
je
lods
sbb
sbb
sub
mov
ss
and
push
mov
test
jl
jb
jmp
sub
push
pop
inc
in
ja
test
ss
testl
clc
cmp
out
and
nop
loopne
xor
cli
jl
fldlg2
mov
aas
loopne
aaa
ja
mov
add
cmp
clc
mov
aas
hlt
mov
rorb
mov
adc
inc
mov
jb
xlat
mov
ret
mov
stos
aas
lea
repz
mov
cld
pop
mov
ss
mov
das
sub
loope
pusha
repz
sub
jne
push
imul
jge
push
idivl
lock
or
xor
popf
pop
push
mov
inc
jb
xchg
mov
xchg
pop
jl
fwait
xor
ja
into
mov
push
jl
push
sub
jb
pop
imul
shlb
clc
mov
cmp
cmp
lds
push
fdivs
xor
sub
aad
fnstcw
sub
mov
cmp
scas
aam
xor
mov
mov
dec
out
cld
clc
fcomps
stos
jns
pop
mov
cmpsb
scas
or
lret
lods
mov
cmp
popa
loop
out
and
outsl
ss
mov
out
and
in
mov
test
xor
dec
les
adc
push
xchg
iret
xor
xor
repnz
call
out
jl
xchg
out
mov
mov
xor
cmp
sub
sbb
cltd
mov
cmp
pushf
xchg
sahf
mov
mov
arpl
test
inc
movsl
pop
jecxz
fnstcw
test
in
push
push
mov
popf
cmp
jl
or
sub
push
sbbl
ja
push
divb
xor
loope
mov
in
lods
mov
cmp
xchg
xor
neg
fidivl
xor
arpl
daa
icebp
xor
shrl
in
sarb
in
jae
leave
cmp
js
cwtl
ja
insb
out
jo
mov
bound
inc
jmp
imul
fcoml
sub
jne
xor
adc
add
xchg
stos
aaa
shlb
xor
int3
rcrb
sub
pop
cmpsl
jl
scas
mov
push
add
sub
loop
cmp
stos
mov
negb
mov
sub
fsubrs
adc
and
stos
push
das
pop
cmp
call
test
mov
aaa
scas
cmp
js
rorb
jp
rcll
imul
dec
cmpsl
sub
inc
push
mov
imul
or
sub
daa
mov
jns
pop
push
xor
push
ja
pushf
xchg
mov
lret
mov
or
dec
in
sbb
pop
jo
push
arpl
clc
mov
jl
push
call
das
jns
or
cli
xor
shrb
call
sub
divl
xchg
subl
mov
push
popf
imul
jl
push
jp
mov
mov
mov
addr16
cmp
push
mov
mov
jmp
and
sahf
scas
stos
cmp
sbb
mov
pusha
cmp
imul
clc
push
xor
lock
jno
pop
xor
ss
cli
jo
cmp
pop
arpl
loopne
mov
mov
bound
lods
mov
icebp
in
out
cmp
and
mov
repnz
cmpsl
out
mov
out
push
rcrb
scas
mov
fwait
jp
mov
mov
xor
jl
clc
notl
divb
arpl
and
inc
sbb
push
ja
stos
mov
aaa
xlat
test
mov
scas
inc
stos
sahf
sarb
cld
arpl
xor
out
cli
inc
insb
jmp
mov
jmp
out
bound
cld
xor
xor
sub
and
bound
xor
mov
cmp
in
pop
lods
and
mov
pusha
test
sub
fsubl
mov
push
movsl
repz
lods
ds
pop
imul
jecxz
cmp
in
mov
sbb
outsb
addr16
mov
icebp
mov
out
jg
lahf
call
orb
lods
jp
daa
push
stc
sbb
and
mov
ds
adc
xchg
idivl
pause
das
imul
and
mov
mov
test
dec
inc
into
mov
out
jae
jle
sbb
test
inc
cmpsl
mov
dec
jmp
push
xor
mov
cld
test
lcall
jae
hlt
xor
mov
mov
mov
das
stc
aaa
in
add
sub
xor
mov
mov
jns
popa
inc
jecxz
mov
mov
and
and
std
jns
push
popf
xchg
sub
mov
out
adc
push
mov
jp
mov
shl
cmp
xor
jb
cmp
pop
xchg
clc
jp
ljmp
dec
sbbb
mov
sub
xor
dec
cli
pushf
mov
mov
sub
mov
fidivs
loopne
jb
jno
in
adc
lds
sub
pusha
xchg
mov
xor
pop
adc
out
xor
mov
stc
mov
movsl
mov
test
mov
xchg
or
inc
mov
xor
xor
inc
arpl
jg
sub
fdivl
ret
testl
mov
push
adc
je
xor
call
push
mov
cmp
in
mov
push
mov
cld
cwtl
sub
aad
les
test
incb
adcb
scas
hlt
outsb
aas
cmp
and
xchg
out
loopne
icebp
jp
ja
pushf
cmp
xchg
mov
cmp
js
mov
push
in
in
cwtl
outsb
rclb
mov
ja
mov
inc
jp
cli
xchg
imul
int3
repnz
cltd
out
or
and
jl
mov
nop
xlat
jns
test
iret
outsl
sahf
cmp
push
in
lea
mov
push
lahf
mov
jp
ds
add
jl
mov
jb
pop
addb
mov
cmpsl
ja
imul
xchg
cld
mov
int
adc
push
out
hlt
xlat
jge
or
divl
xor
jecxz
jle
push
and
jae
mov
cltd
mov
out
fistpll
xor
cmpsb
mov
xor
insl
cwtl
pop
je
js
iret
in
mov
repz
cmp
xor
mov
in
cld
adc
popa
xor
sub
mov
pop
lods
xchg
mov
mov
jo
leave
cwtl
dec
imul
mov
xor
cli
imul
mov
in
mov
push
sbb
enter
fbstp
leave
mov
mov
mov
mov
call
lods
dec
adc
push
and
out
pop
jecxz
gs
cmc
idivl
and
out
push
ret
mov
out
mov
inc
sahf
xor
dec
mov
test
call
daa
sbb
jb
mov
enter
jp,pt
aaa
cmp
imul
cmp
mov
hlt
add
ljmp
xor
push
stc
movsb
push
mov
lcall
cld
in
inc
in
dec
xchg
jns
mov
mov
xchg
xlat
insb
jo
movl
jecxz
sub
js
popf
jno
jl
jg
loope
jp
pop
mov
and
push
stc
faddl
mov
jp
push
push
aaa
aas
cmp
cmp
cltd
aas
stos
cmp
ds
out
movsl
mov
mov
and
jg
mov
lods
in
sbb
out
divb
aas
jae
icebp
sub
imul
push
nop
mov
ja
ss
jae
mov
in
cmpsb
xor
out
mov
jl
js
imul
jno
push
mov
adc
mov
icebp
mov
mov
inc
bound
clc
inc
jge
jle
add
cmp
aaa
mov
cmp
cmp
mov
out
sahf
push
scas
push
sub
notb
jg
movsl
jb
add
loop
cmp
mov
xchg
xchg
mull
mov
dec
push
js
sbb
mov
decl
cmp
mov
test
mov
fistpll
insb
add
imul
xor
push
movsb
jno
pusha
jns
mov
cli
das
jno
test
and
jae
test
mov
mov
inc
stos
mov
dec
cmp
adc
mov
stos
mov
ds
aaa
mov
adc
jae
jp
lods
xchg
mov
cmp
icebp
popf
and
mov
sub
inc
hlt
mov
movl
and
jl
xor
dec
push
xchg
mov
jns
or
and
imul
inc
pop
mov
xor
ja
dec
aaa
sti
and
popf
pop
scas
mov
cmpsl
jp
cmp
in
pop
sbbb
mov
notrack
pushf
jns
cmp
mov
das
ss
loop
stos
ret
inc
jae,pt
pop
aaa
in
lock
sbb
or
test
cmp
jns
repnz
xchg
jp
inc
xor
loop
repnz
in
xor
xchg
sbb
push
cmp
or
xor
xor
aas
jp
pushf
sub
mov
je
xor
sbb
shl
push
sbb
mov
jae
sub
push
or
scas
mov
cmp
mov
hlt
jo
jmp
idivl
xor
dec
cwtl
imul
jmp
stc
mov
fcoml
imulb
call
jmp
mov
pushf
fcompl
jecxz
subb
shlb
xor
repnz
xor
cli
jg
sbb
scas
jmp
rclb
mov
jmp
arpl
mov
in
push
cs
pop
mov
mov
repnz
sbb
xor
push
jecxz
fwait
adc
mov
bnd
stc
cmp
out
add
mov
xchg
sbb
cwtl
ljmp
movntps
inc
inc
cwtl
cmp
mov
ss
arpl
push
lods
arpl
sbb
mov
sar
xor
xchg
add
cmp
jl
add
js
sbb
sub
or
divb
andl
inc
ds
xor
cmp
scas
cmp
jp
jb
lods
mov
mov
repnz
clc
js
rcll
in
scas
or
sti
cmp
mov
lock
outsb
cmc
sub
inc
adc
push
xor
mov
in
repnz
data16
mov
mov
mov
out
scas
inc
outsl
xchg
xchg
cmp
cs
je
inc
adc
in
lea
in
in
das
stos
fildll
mov
loopne
arpl
ss
sub
mov
push
andl
stc
hlt
xchg
outsb
jp
stos
loop
add
out
adc
cmp
daa
mov
lock
mov
mov
jae
or
mov
das
jb
je
xor
mov
scas
out
scas
lods
je
fdivr
mov
mov
loopne
js
ja
jb
push
or
xor
dec
pop
scas
sahf
dec
loopne
cmp
lock
adc
cmp
insb
xor
mov
cmp
cltd
and
clc
mov
cmp
jmp
push
mov
adc
or
pushf
mov
xor
scas
outsl
fs
cmpsl
lods
mov
pushf
shrb
mov
out
mov
pop
and
stc
jns
insb
mov
push
push
mov
cmpsb
jp
cmp
rep
xor
pop
pop
mov
cmp
das
adc
xchg
adc
idiv
xor
jo
and
push
push
shrb
xor
insl
in
shr
js
in
mov
sub
dec
je
in
mov
mov
inc
cs
mov
and
or
in
lock
dec
repnz
jl
shl
stc
in
mov
pop
push
adc
scas
aaa
jg
cmpsl
mov
jmp
arpl
adc
fidivrs
mov
cmp
into
jbe
mov
scas
jmp
pop
clc
loop
cli
mov
ss
mov
mov
jge
inc
jae
or
out
mov
out
popf
dec
test
pop
xor
push
loop
stos
add
notl
xchg
xorb
and
mov
addr16
ss
ret
mov
fdecstp
repz
jne
and
ret
cli
inc
ret
mov
push
out
add
and
and
in
in
mov
mov
and
loop
mov
shr
cmp
xor
add
cmp
sub
lods
cli
mov
aas
mov
daa
mov
push
mov
mov
out
jb
cltd
push
out
jl
mov
cmp
test
lock
stos
lods
stc
sti
xor
fs
mov
push
add
and
cmp
sahf
push
cmp
jnp
fisubl
fsubl
scas
mov
or
das
addr16
je
jno
lock
mov
jg
xchg
test
push
mov
mov
shrb
cmp
xchg
inc
dec
cli
sbbl
add
mov
mov
clc
xchg
test
imul
xor
sbb
cld
nop
jns
mov
sarb
and
imulb
mov
fstl
xor
mov
or
insb
jmp
das
jecxz
push
out
incb
jg
ja
out
sub
push
push
int
repz
call
testl
scas
mov
in
mov
and
repnz
cmpsl
sbb
ds
pop
mov
mov
jge
aas
and
jno
lock
lods
cmp
lea
shlb
push
scas
sbb
stc
ds
xor
mov
jb
out
clc
mov
imul
jecxz
stc
cld
arpl
jns
push
je
mov
shlb
test
in
jb
jno
movsl
lcall
and
xor
vmread
addr16
js
aas
lods
stos
icebp
fwait
xor
cli
fistps
mov
fildll
cmp
testb
stos
mov
dec
jmp
jl
sahf
stc
jecxz
jo
cltd
xchg
mov
aas
gs
enter
test
out
js
push
and
popa
pop
cmpsl
cmpl
cmp
dec
mov
cmp
sub
addb
mov
pop
cmp
test
adc
cmp
xchg
out
insb
cmp
hlt
aas
jp
test
inc
stos
mov
and
xor
jo
dec
xor
dec
push
lock
scas
into
mov
subl
test
cwtl
aad
cmp
sub
popf
in
int3
mov
push
scas
test
cmp
je
ret
sahf
mov
xor
mov
int
data16
sbb
test
ss
mov
inc
push
sarb
jmp
xchg
xchg
ror
cmp
stos
repnz
cli
in
sbb
xor
lods
sub
inc
bound
stos
ss
and
in
repnz
rcr
lahf
cmp
test
test
mov
ret
jb
xor
out
aaa
insb
sbb
inc
push
ss
add
jl
imul
mov
mov
mov
mov
loop
jns
pop
fnstsw
int3
push
jge
insb
mov
push
sub
xor
mov
shl
cmp
inc
fdivl
cmp
repnz
or
out
adc
stos
scas
push
and
sbb
jecxz
js
cmp
cmp
je
ds
mov
stc
xor
pop
adc
lcall
clc
fdivl
dec
cli
hlt
cmpsl
stos
cmp
push
xchg
fdivrl
call
imul
and
mov
mov
sub
cmpsb
fdivrs
cli
repz
push
sbbl
test
mov
and
lods
es
mov
sbb
rolb
push
jae
sbb
xor
bound
push
popa
dec
sub
jg
jecxz
dec
or
ds
mov
pop
jae
fs
and
bound
or
jmp
mov
mull
jae
ds
loop
nop
cld
cmp
jb
testb
xor
cmp
repnz
jne
pop
loope
lock
xchg
push
mov
pop
jl
adc
jmp
cli
adc
push
lahf
iret
rcr
imul
mov
imul
jmp
cwtl
jb
mov
push
jp
mov
mov
and
push
mov
les
inc
and
sbb
mov
and
sarl
imul
mov
incb
push
cli
jb
jl
pop
mov
lods
xor
add
mov
sub
js
mov
outsb
addr16
cld
jp
mov
xor
mov
mov
inc
add
jl
fcomp
cmp
cmpsl
popf
cmp
out
pushf
mov
je
xor
js
mov
push
stos
stc
push
cmpsl
xor
scas
mov
stos
xor
sahf
rcrl
loop
mov
xchg
mov
mov
or
popa
xor
in
or
daa
and
test
ds
fisubrs
mov
in
adc
sbb
mov
idivb
insl
stos
aaa
pop
test
mov
mov
mov
mov
inc
xchg
jmp
stos
adc
dec
and
inc
mov
in
sbbl
scas
mov
shlb
mov
cmp
mov
out
xchg
js
inc
fnstenv
daa
sbb
stos
loop
mov
lods
add
imul
test
inc
sbb
inc
outsl
jecxz
xor
sub
xor
jge
imul
insb
nop
in
imul
xor
and
cmp
testl
mov
xchg
popa
in
mov
jb
cmp
mov
fwait
imul
mov
popa
cli
cmp
push
cmp
lock
ss
into
arpl
mov
push
imul
pusha
sub
xor
xor
idiv
adc
jecxz
mov
neg
es
cmp
imul
stos
bound
xor
inc
cmp
lods
data16
pop
dec
jecxz
mov
in
adc
lock
cmpsl
and
clc
sarb
sbb
mov
sbb
xlat
sbb
mov
push
xor
or
je
xor
xor
stos
fidivl
sub
and
inc
shll
hlt
insb
pop
pop
pop
repz
sub
sub
mov
jb
mov
cltd
dec
loop
xor
daa
sub
imul
jae
sbb
push
jno
cli
imul
pop
jmp
cmpsl
aam
rclb
xor
mov
mov
scas
and
mov
cmp
imul
jne
outsl
nop
lds
int
sbb
jo
scas
cld
mov
ljmp
ret
push
mov
lcall
fcompl
jp
scas
mov
aaa
push
ficoml
cmp
pop
mov
or
pop
sbb
mov
cli
mov
jbe
cmp
test
loop
cmp
mov
xor
mov
js
dec
xchg
fwait
andb
clc
or
insl
xchg
adc
lahf
mov
test
ljmp
jp
int3
jmp
lods
mov
ja
ss
cmpl
lods
sbb
mov
int
xchg
sbb
mov
mov
andl
in
and
ss
js
dec
inc
shlb
mov
dec
clc
adc
dec
jae
and
jl
lods
nop
fidivl
cli
cmpsb
scas
repz
imul
mov
dec
aad
inc
xor
lcall
loopne
sub
clc
push
test
push
sahf
ljmp
jno
mov
jae
aaa
idivb
pusha
mov
xor
mov
cltd
insl
jbe
dec
jl
rcrl
pop
sbb
test
pop
je
mov
jae
jp
jo
js
mov
mov
out
bound
push
stos
xchg
fwait
mov
daa
mov
lds
add
adc
bnd
testb
bound
add
pushf
stos
mov
sbb
mov
out
sbb
jg
xor
push
cmp
add
jmp
fs
jns
test
js
jb
push
clc
or
aam
jg
repnz
mov
mov
xor
sahf
pop
sub
fistpll
aaa
lcall
xchg
xor
loop
cli
ret
out
jns
jp
mov
jecxz
into
xchg
insb
je
cld
push
add
in
and
divl
cmp
jae
aaa
inc
or
movl
push
out
clc
xor
mov
cmc
es
js
push
testl
stos
pop
test
arpl
xor
cli
fdivs
cs
repz
push
mov
push
cld
mul
mov
mov
jns
loop
mov
stc
jae
clc
adc
mov
lock
mov
cmp
and
jge
cmp
popa
mov
ja
jae
xchg
cmp
jg
mov
inc
inc
idiv
inc
lock
adc
xor
push
dec
sub
sub
xor
xor
loopne
addb
jp
push
push
fidivl
test
stc
jae
mov
cltd
mov
jl
mov
mov
mov
popf
incl
adc
push
in
mov
outsb
mov
fnsave
cwtl
inc
jo
or
jp
or
pushf
outsl
mov
xchg
mov
out
jns
fwait
ds
xchg
in
in
or
mov
xchg
jmp
jg
inc
inc
js
jge
test
cld
nop
adc
cld
mov
mov
mov
int3
pop
mov
jp
mov
jl
xchg
dec
rcrl
out
out
mov
jo
das
or
sahf
bound
cmp
cmp
sbb
cwtl
and
imul
mov
aas
imul
xor
cmp
push
aaa
and
or
mov
lods
sub
xchg
cmp
je
lahf
stos
enter
pushf
mov
icebp
ja
imul
inc
test
xor
lret
jo
mov
adc
sbb
xlat
push
movsb
pop
nop
addr16
scas
push
imul
inc
cmp
mov
sbb
push
repnz
push
pop
ds
sbbl
and
stc
lds
sub
hlt
insb
add
ffreep
and
mov
scas
jmp
cwtl
loop
out
inc
imul
arpl
jne
iret
xor
js
xchg
xchg
jb
jo
mov
xchg
ds
aaa
pop
mov
xor
or
icebp
cltd
dec
icebp
adc
js
cwtl
mov
clc
sub
cld
adc
jp
popf
mov
adc
inc
fisubrs
mov
sbb
aas
je
cli
ja
push
fisubs
int
sbb
mov
insb
jmp
cmp
xor
out
dec
clc
push
aas
dec
test
lcall
in
jp
mov
cmp
add
negl
jnp
xchg
or
das
daa
mov
insb
xchg
or
rcl
aaa
jns
mov
shll
hlt
sti
repnz
xchg
mov
and
jno
cmp
jmp
fs
xchg
or
mov
jb
mov
xor
mov
cld
mov
stc
adc
sbbb
sbb
dec
mov
mov
stos
push
mov
fs
lock
popa
loopne
cli
clc
nop
mov
mov
inc
and
or
stc
hlt
lock
xor
mov
daa
pop
xor
xchg
and
mov
jbe
xchg
xchg
sub
in
xor
jns
ds
insb
xchg
xor
cld
cmp
and
sahf
sub
lods
or
jnp
es
sbb
xor
pop
rclb
in
shrl
shr
test
js
xor
je
stos
cmp
mov
and
orb
ds
lock
jg
sub
mov
mov
aaa
mov
repnz
push
btsl
insl
int3
mov
shlb
cltd
xor
sub
xor
mov
or
pop
xor
mov
mov
jne
mov
cli
lcall
add
dec
sbb
hlt
sub
repz
out
mov
mov
inc
cmp
gs
mov
nop
sub
xchg
mov
pushf
xor
ja
jb
mov
test
popf
jo
enter
clc
xor
xor
mov
mov
flds
jl
jge
lahf
jno
jae
test
or
hlt
stc
mov
sbb
mov
add
stos
fs
int
hlt
cmp
clc
mov
xor
jecxz
adcb
mov
cld
xor
aaa
inc
jmp
mov
sti
cmp
mov
clc
dec
test
hlt
test
inc
outsl
pushf
pop
test
arpl
mov
cs
xor
cmp
jns
imul
mov
mov
aaa
out
mov
fisubrl
xor
xor
xchg
push
xchg
sub
sbb
leave
adc
imul
xor
ret
out
mov
xlat
pop
inc
lods
jp
add
dec
xor
mov
mov
jp
mov
mov
sub
bound
jecxz
daa
fnstsw
and
stos
mov
mov
pop
mov
scas
sub
lods
pop
and
push
mov
mov
cmp
xor
mov
and
mov
stos
or
out
mov
mov
sub
xor
pop
adc
pop
imull
pop
and
mov
repz
nop
daa
lock
xor
pop
ss
je
xchg
cmp
aas
outsl
ja
sbb
push
mov
out
jp
stos
cwtl
jecxz
xchg
xchg
adc
xor
xor
xchg
xchg
test
cli
bound
enter
loopne
cmp
test
inc
xchg
sahf
scas
pushl
stc
mov
scas
divl
mov
ret
jmp
idiv
and
mov
mov
sbb
pop
lods
or
lea
insb
ss
mov
and
mov
test
dec
mov
cmp
adc
jnp
sub
mov
insb
in
xor
mov
lds
lods
hlt
jb
divl
cmp
jno
decb
xor
cmpl
jbe
sub
int
fwait
inc
mov
clc
xor
sub
jecxz
arpl
fisttpll
iret
insb
mov
adc
jge
mov
mov
mov
fs
sub
stos
pop
sub
cld
and
popf
pusha
sub
mov
and
clc
mov
xor
and
cmp
insl
aad
scas
popa
pop
sub
into
lea
mov
mov
js
inc
hlt
inc
push
or
adc
or
ja
shlb
mov
lods
jp
mul
and
repnz
jno
jns
pop
jb
cmp
mov
out
sbb
push
mov
es
std
adc
rol
jp
pushf
insb
lock
pop
test
loopew
mov
adc
cmp
xchg
je
jo
jl
xchg
xor
fisubs
call
insb
scas
test
sub
jmp
inc
in
fidivl
fs
ret
fnstenv
push
mov
jae
cmpsl
pop
mov
insl
ja
xchg
ret
ss
repz
insb
js
mov
out
int
bound
cmp
and
pop
in
mov
sar
cmp
inc
push
mov
fwait
insb
mov
std
mov
je
mov
int
cld
xor
cli
xchg
pop
xchg
add
cmp
outsb
xor
pop
mov
scas
mov
imul
js
jno
flds
cli
mov
je
jae
xor
adc
push
addr16
mov
div
aas
mov
iret
xlat
dec
add
xchg
push
mov
bnd
xorb
push
cmp
repz
xor
cmp
mov
jo
out
idivl
enter
lahf
lods
and
cmp
jecxz
ja
adc
mov
cs
gs
adc
and
clc
inc
es
add
test
icebp
bnd
mov
jno
mov
stos
div
add
mov
push
add
xor
dec
mov
mov
jnp
cs
jmp
mov
xor
repnz
mov
mov
repz
out
fldlg2
xor
fisubrl
adcb
mov
scas
stc
fsubs
add
cmp
hlt
int
sbb
andb
mov
add
repz
adc
pop
ret
cmc
call
mov
mov
jmp
aas
popa
repz
bnd
and
dec
and
jecxz
scas
inc
js
mov
pop
bound
scas
mov
mov
hlt
mov
dec
mov
cmp
xor
fidivs
jl
mov
mov
mov
jge
xor
jge
call
enter
adc
cld
xor
push
rcr
jb
xorl
jp
adc
lods
mov
inc
je
jns
lret
js
xor
jmp
hlt
xchg
and
lock
ss
int3
xor
jecxz
xor
lods
jae
les
mov
or
cwtl
nop
mov
and
mov
out
cld
aad
mov
and
push
stos
sub
imul
and
fisubrl
add
cld
out
jo
push
mov
push
jo
cmp
roll
push
imul
xchg
enter
xor
icebp
mov
jno
stos
dec
and
add
pop
mov
insb
mov
xor
mov
mov
fwait
mov
jp
dec
inc
mov
arpl
adcl
lds
pop
fidivrs
divl
insb
arpl
lods
sub
aas
lods
xor
mov
mov
jg
ss
and
adc
xchg
int3
shrl
mov
stc
mov
xor
xor
lea
inc
pop
xor
push
imul
and
ja
xchg
dec
nop
shll
stos
icebp
cli
jecxz
stos
jns
or
sbb
mov
xchg
cld
jg
arpl
cli
adc
jle
xor
aas
dec
push
lods
dec
jecxz
in
scas
pop
mov
rclb
insl
fmuls
sbb
sub
cwtl
sbb
jp
in
loop
mov
jp
test
and
cld
mov
js
adc
add
loop
push
xchg
cli
pop
and
and
and
push
ss
xchg
jno
imul
enter
loop
sub
loope,pt
test
xor
mov
lods
clc
add
mov
mov
cmp
into
cmp
js
mov
insl
lcall
stc
mov
xchg
mov
inc
test
cmp
xor
icebp
ss
repz
mov
xorl
mov
jno
fwait
mov
mov
stc
inc
ja
fdivl
repz
or
mov
xor
and
das
js
aaa
daa
je
xor
sahf
xrelease
aaa
jo
in
sbb
sub
jmp
jo
stos
add
cmp
mov
imul
xchg
mov
mov
xchg
pop
imul
divl
sbb
pop
jl
xor
sbb
jnp
das
mov
jecxz
jb
std
push
sbb
mov
mov
jno
jg
mov
leave
loop
xor
jae
es
daa
xlat
or
sbb
fwait
adc
mov
cmp
insb
loop
mov
jp
inc
int3
and
push
push
cli
cli
shlb
aaa
mull
jl
hlt
and
sub
adcl
movsb
and
cmpsl
popa
mov
xor
div
scas
clc
xor
pop
fwait
or
mov
xor
pop
mov
clc
and
ja
ret
xor
cmp
push
arpl
inc
inc
jp
jl
sbb
or
mov
or
insb
pop
lods
jl
fs
fidivrl
inc
ret
push
loope
sub
bound
cli
std
inc
cmpsl
or
out
lock
xor
mov
fstps
rcrb
out
test
mov
loop
mov
sbb
jmp
xor
hlt
mov
popf
push
lods
scas
icebp
push
xor
js
mov
fwait
stos
in
ljmp
xor
xchg
pop
sbb
sub
out
xor
mov
and
out
incb
imul
lock
mov
lock
test
fcompl
cmp
sarl
in
sub
mov
inc
fucomp
or
insb
cwtl
fidivl
mov
sub
mov
adc
mov
das
mov
jmp
imulb
pop
xor
add
pushf
cli
ljmp
fs
mov
cmp
test
shll
and
cmpsl
imul
and
bnd
pop
rcll
fldt
sbb
mov
aas
cwtl
ds
xor
mov
jp
je
sti
mov
jns
mov
and
mov
mov
mov
mov
push
clc
cmp
sbbb
jecxz
popf
cld
xchg
lret
mov
jns
cmp
jge
lret
jno
sub
sub
push
jg
mov
cs
sbb
xor
ss
mov
mov
cmp
rorb
icebp
dec
addb
and
addr16
cmp
scas
in
fwait
test
xor
mov
js
mov
add
icebp
jmp
dec
mov
mov
jno
lcall
push
inc
mov
push
dec
incb
daa
fdivs
ljmp
mov
sub
fmuls
mov
push
repnz
add
add
jb
jg
in
test
js
dec
jl
aas
dec
mov
cwtl
je
stos
imul
push
in
pop
fst
mov
nop
stos
jmp
rep
jae
fildll
mov
hlt
test
pop
sbb
lea
xlat
test
aam
jg
shll
and
xchg
rcrb
imul
sti
out
divb
lock
lods
stos
xchg
push
bndldx
mov
das
imul
xor
jg
aaa
mov
jp
xor
jmp
pushf
or
imul
out
shlb
push
add
je
sbb
arpl
lea
mov
ficoml
pop
pop
rorl
sbb
mov
adc
lds
adc
jl
jl
repz
adc
dec
cmpsb
xor
fs
cmp
mov
jg
cmp
adc
fildll
aas
jbe
out
mov
nop
iret
out
stc
in
mov
push
mov
push
or
push
xchg
inc
cmp
mov
test
imul
xchg
jb
and
addr16
inc
cld
ret
mov
and
cmp
sub
icebp
out
xor
aaa
sbb
fsubrp
ja
push
daa
push
jg
ds
cmp
jb
cli
sub
in
mov
add
call
pop
jmp
out
jns
rcrb
insl
enter
mov
push
mov
fistpll
inc
aad
popa
aaa
and
ss
shrb
lods
xor
ror
mov
cmp
jb
xchg
and
xor
mov
mov
push
in
xchg
jmp
and
icebp
jns
mov
sub
bound
cmpsl
xchg
aas
les
mov
or
mov
push
das
lock
sub
repnz
jecxz
mov
shl
jno
mov
jne
popf
jge
and
arpl
add
pop
and
cwtl
stos
mov
mov
mov
sahf
pop
mov
insb
in
outsb
adc
ds
mov
imul
lods
ljmp
cmp
lods
pop
cld
nop
test
mov
sahf
out
mov
pop
in
hlt
xor
mov
adc
insb
cmp
cmp
rcrb
das
xor
sub
shlb
adc
jae
imul
stc
mov
mov
push
inc
and
add
repz
divl
cld
cld
mov
test
repnz
out
aaa
decl
jns
or
out
lock
je
ja
mov
cmp
arpl
jo
int
jns
dec
in
clc
aaa
cmc
cmp
test
sahf
out
test
fs
mov
jns
sub
fnsave
shrl
lods
repz
mov
cmp
imul
sub
adc
in
cwtl
mov
jno
andl
enter
clc
mov
jno
and
adc
xchg
stc
fwait
jns
gs
lds
mov
and
xor
jl
aas
sbb
data16
mov
push
cmc
mov
lret
xor
xor
xor
clc
cmpsl
mov
shlb
pushl
je,pn
iret
xor
sbb
xor
xchg
loopne
mov
cmp
cmp
mov
mov
sub
repz
jo
xor
mov
movsl
ss
fs
int3
les
adc
xlat
hlt
clc
pop
pushf
imul
and
and
je
jo
push
bound
scas
out
hlt
xchg
pop
shlb
mov
mov
cltd
sub
jl
sbb
loope
jo
mov
imul
ja
cld
lock
aas
mov
cmp
adc
cmp
pushf
mov
mov
mov
scas
mov
mov
jl
mov
lock
imul
clc
jle
pop
add
mov
xchg
jno
add
mov
stos
mov
in
pop
inc
stc
cmpsb
lods
add
sbb
fs
loop
ds
insb
or
mov
inc
dec
xor
in
mov
insb
push
fcom
ss
jmp
cld
cli
je
loop
daa
movsb
mov
shrl
addr16
mov
loop
mov
sub
jo
sbb
mov
cld
and
and
xor
sub
mov
psadbw
mov
lret
mov
sub
xor
daa
cmp
cli
daa
fwait
out
jb
vprotb
ja
mov
fbstp
and
mov
cmp
je
mov
shrb
add
cwtl
int
scas
int
out
cmp
adc
jg
sub
loop
inc
cmpsl
cmp
jbe
sbb
loope,pn
insb
test
dec
and
fbld
aam
mov
pushf
push
je
imul
out
and
cli
and
imul
hlt
dec
clc
addr16
mov
aaa
call
jg
fwait
ljmp
dec
cld
stos
in
and
lcall
inc
inc
or
xchg
outsl
xor
call
mov
stc
and
and
mov
shl
sub
sub
dec
jno
add
sbb
out
jecxz
imul
mov
cli
mov
jmp
hlt
cmp
cmp
xchg
cli
jae
jns
jmp
and
bound
hlt
fdivr
jg
iret
jle
mov
and
clc
fs
push
xor
sar
sbbb
rorb
fsubr
xor
jp
mov
arpl
inc
out
jno
dec
insb
std
mov
icebp
mov
sbb
xor
ret
jb
jmp
lock
add
test
mov
mov
scas
sub
icebp
sub
push
jecxz
lret
movsl
mov
pop
test
cmp
hlt
gs
lods
push
xor
repnz
xchg
decb
in
gs
cmpl
push
xor
ljmp
mov
jg
cli
sub
jns
test
sub
andb
imul
nop
fnstsw
clc
push
clc
cmpb
xlat
push
loopne
out
mov
mov
jp
mov
call
lahf
xor
dec
ja
lock
sub
out
bound
mov
pop
ja
mov
shl
cli
jp
xor
out
mov
push
pop
jns
movb
loop
aas
in
and
mov
in
jno
xor
lock
icebp
jo
and
aad
jmp
and
and
ss
imul
call
jg
xchg
and
sub
aas
xchg
xor
out
arpl
scas
mov
mov
mov
sub
mov
mov
lock
test
rcrl
xchg
xorb
jg
hlt
push
into
das
fs
imul
imull
lea
jge
shrb
enter
mov
or
repnz
cwtl
mov
xchg
mov
sub
xor
sbb
or
mov
mov
mov
sub
mov
ds
xor
bound
and
adc
jo
sub
neg
mov
test
or
cmp
imul
stc
neg
call
jno
push
cmpsl
bound
shlb
mov
aas
xchg
dec
shrb
mov
mov
add
sub
mov
loope
jb
aaa
out
out
cld
jp
adc
jg
push
pop
sbb
mov
and
mov
lcall
test
mov
mov
mov
stc
and
xchg
mov
or
jo
adc
jnp
push
adc
mov
mov
sub
mov
and
ja
mov
in
xor
clc
mov
je
or
mov
jo
or
sub
sar
push
mov
push
mov
pop
dec
movsb
fwait
sbb
push
cwtl
inc
mov
scas
out
add
push
scas
xor
xchg
fstpl
stos
xchg
and
and
xor
xor
decl
cmp
ret
popa
cltd
jnp
mov
mov
scas
mov
mov
xchg
loopne
xor
xor
arpl
test
and
lods
stos
imul
push
xacquire
xlat
andl
mov
xchg
sub
xchg
lret
pop
inc
sub
aaa
pusha
out
sub
mov
pop
jl,pn
addb
xor
mov
data16
pushf
cmp
hlt
or
fldl
lcall
jg
xor
cli
test
ds
mul
jmp
xchg
aaa
cli
pop
xor
bound
pop
mov
sahf
outsb
insl
xor
outsb
lret
inc
out
jg
cmp
mov
cmpsl
icebp
out
add
cmp
xchg
xchg
clc
cld
or
adc
add
jno
mov
lea
je
mov
stc
repnz
jmp
xchg
fidivrl
cld
loope
bound
adc
pop
clc
rorl
cmc
jl
jle
push
mov
push
lods
mov
aas
repnz
xor
daa
mov
jg
push
xchg
xor
in
add
rclb
mov
mov
in
jo
cmp
out
insb
hlt
shrb
xor
clc
movsl
bnd
jb
hlt
loope
test
mov
ss
cltd
loopne
mov
shll
mov
jbe
sbb
dec
adcb
mov
clc
mov
inc
xor
cmp
lock
dec
xor
sbb
cmp
mov
out
adc
cmp
xchg
add
mov
in
dec
lock
lods
mov
testl
jg
in
test
mov
test
fwait
scas
jns
lahf
cmp
xor
and
repnz
out
mov
stos
jno
mov
push
divb
jae
ljmp
fwait
enter
sbb
mov
sahf
sub
mov
jle
lods
pushf
add
outsl
out
jno
test
xchg
cmp
sub
jl
mov
scas
stos
pop
pop
loop
mov
lock
cmp
in
mov
mov
cmp
mov
ss
adc
cmpsl
jecxz
cld
xchg
or
imul
cli
sbb
fdivr
mov
sahf
sub
xor
test
out
pop
push
in
sub
jl
mov
test
mov
jne
mov
lock
cld
mov
fwait
imul
push
imul
xor
push
pop
mov
repnz
test
mov
jecxz
pop
dec
fsubr
mov
hlt
mov
ficomps
or
jl
mov
pushl
mov
mov
imul
mov
insl
jae
mov
mov
mov
lock
outsb
fdiv
out
sub
fwait
in
jb
push
inc
ret
xor
hlt
cli
mov
negl
mov
inc
add
jg
cld
mov
adc
ds
mov
xor
inc
sub
pop
mov
mov
adc
aaa
dec
out
cmp
jnp
mov
and
xor
mov
adc
push
inc
mov
and
ffree
aam
shrb
aaa
mov
xchg
imul
js
sbb
frstor
mov
mov
adc
imul
sub
repz
ja
and
mov
xchg
out
sbb
gs
ds
lea
ss
sbb
pop
addr16
arpl
sub
mov
mov
mov
jb
dec
loopne
lods
xor
repnz
lds
mov
ss
lock
jo
sub
aas
icebp
cmp
cmp
idiv
cmpsb
dec
pop
and
ret
mov
mov
rcr
testb
sub
ljmp
cli
jl
mov
push
cmp
adc
addr16
stos
mov
lret
mov
out
or
sbb
and
pop
test
mov
cmp
sbb
push
lds
roll
imulb
stc
cwtl
adc
hlt
fucomip
sub
jae
mov
mov
jo
mov
nop
clc
mov
test
push
bnd
repz
and
mov
sub
ss
push
gs
dec
movsl
fdivs
cli
mov
ss
idivb
lock
daa
xor
cwtl
out
mov
stos
jmp
into
or
cmp
jecxz
mov
imul
lods
cld
xchg
ds
out
mov
jl
mov
inc
pusha
fcomps
lods
push
js
cld
ss
out
mov
mov
jecxz
scas
jae
inc
mov
cmp
rcrl
hlt
mov
adc
pop
sub
out
repnz
ss
add
inc
add
mov
mov
sbb
cwtl
idivb
test
gs
mov
xor
arpl
loopne
in
cld
mov
mov
jno
test
testb
ret
pop
outsl
xchg
jns
jmp
and
mov
fdivl
pop
adcb
test
int
mov
nop
sarl
xor
and
xchg
inc
stos
and
push
and
movsl
repz
test
imul
arpl
mov
mov
jne
int3
push
xchg
mov
adc
pshufw
xor
ja
xor
xor
repz
aaa
shl
push
sub
jg
sbb
pop
js
mov
cmp
imul
clc
outsb
fsubrs
xor
mov
sbb
imul
aas
add
or
xchg
mov
inc
movsl
cmp
loop
add
stos
imul
stc
in
adc
lock
push
sbb
jl
lock
insb
jmp
fsubrs
and
fisubs
mov
sbb
fdivr
adc
sub
cs
cmp
fnstsw
mov
cmp
jo
mov
jmp
enter
cltd
call
jl
aaa
outsl
pushf
mov
outsl
nop
and
inc
aam
and
test
das
test
cmpsl
push
mov
decb
xchg
fidivl
mov
imul
stos
scas
mov
cld
xchg
mov
xchg
mov
xor
loop
out
jmp
mov
arpl
stos
add
test
imul
mov
xlat
inc
cmp
xchg
lods
in
repz
xor
or
in
xchg
mov
pop
or
adc
cmp
mov
jns
inc
in
fldcw
mov
mov
ss
xchg
dec
lret
add
push
inc
repnz
es
jo
add
test
jmp
out
sub
adc
add
jno
loop
mov
push
mull
jge
jg
mov
jp
lock
push
int3
idivb
fs
mov
adc
je
cmp
inc
mov
loopne
jnp
xlat
inc
loopne
ds
mov
mov
and
nop
and
push
cmp
push
jle
scas
and
outsb
ret
cmp
dec
mov
jno
das
mov
and
clc
inc
clc
in
sub
shlb
adc
cwtl
cmp
jmp
or
imul
mov
xor
mov
adc
mov
out
scas
dec
loop
jno
add
hlt
jns
dec
mov
in
test
scas
movsl
xor
and
imul
fsubp
jo
xchg
mov
pop
test
mov
pop
out
mov
insl
push
cwtl
lret
xor
adc
iret
testl
arpl
ja
mov
xchg
inc
loop
inc
sahf
shrb
xchg
inc
mov
icebp
arpl
int3
hlt
mov
jp
mov
or
sub
stos
nop
aad
ljmp
jp
jae
jno
mov
jb
jns
test
and
repnz
imull
stos
iret
and
mov
ds
loop
add
bound
mov
jo
out
push
push
sarb
stos
push
mov
out
sub
mov
sub
add
and
das
xchg
mov
cli
xor
rorb
mov
pop
imul
test
hlt
fsubrs
mov
fs
jns
add
add
fs
pop
mov
out
bound
lods
roll
inc
xchg
mov
repz
add
js
sub
jp
cmc
scas
sti
scas
mov
cmp
imul
sub
jbe
fstps
xchg
mov
xor
jg
daa
in
je
mov
mov
mov
daa
xor
shll
push
push
imul
js
pushf
repz
mov
and
pop
jo
mul
xchg
jae
mov
pop
insb
sbb
hlt
repnz
cwtl
or
int
outsb
lods
sub
inc
jecxz
scas
jb
js
shlb
mov
xchg
and
aas
clc
dec
sub
aam
in
adc
cli
pop
lods
mov
fwait
jmp
jg
gs
mov
sub
mov
repnz
stos
js
or
xchg
orb
aas
fwait
xchg
orb
cltd
push
movsl
push
mov
jno
imul
popa
xor
cmp
dec
insl
stc
jmp
ss
aaa
mov
mov
cli
imul
jns
sbb
ficomps
jbe
rorb
dec
dec
xor
imul
mov
cmpsl
xor
bound
and
int3
hlt
mov
pop
jge
pop
ds
xchg
repnz
enter
mov
in
idivb
and
mov
clc
and
outsb
add
xor
or
jno
push
cmpsb
push
push
and
loopne
mov
negl
mov
imul
loope
scas
ss
push
lea
jmp
lods
add
xor
pushf
sbb
imul
cmp
and
inc
call
hlt
ja
mov
sbb
fidivs
mov
clc
lahf
push
fcomps
bound
adc
cmp
xlat
jg
cld
xchg
addr16
scas
jp
loop
clc
test
hlt
add
int
lahf
mov
andl
mov
xor
or
scas
hlt
shrl
or
pop
mov
stc
xor
das
and
jne
cmp
xchg
aas
or
ret
nop
and
jmp
lcall
xor
xchg
sub
insl
hlt
rorb
xchg
hlt
dec
and
and
mov
adc
sub
jg
stc
push
out
je
popf
mov
xchg
enter
cmp
stos
clc
mov
jl
cmc
popa
icebp
ja
cmc
sub
movsl
inc
sub
in
xchg
daa
xchg
out
cmpsl
lcall
mov
push
in
lcall
call
jmp
sub
sub
sbb
ljmp
mov
or
int
repnz
inc
lock
adc
clc
lds
ss
push
adc
ja
push
jb
pushf
movsl
mov
adc
and
idivl
jmp
xor
xchg
clc
stos
adc
out
hlt
insb
shlb
mov
test
pusha
mov
xchg
mov
mov
ret
sub
sbb
xchg
jno
mov
mov
cs
mov
loop
cli
mov
cltd
mov
and
jg
aad
repz
hlt
shlb
fnsave
cmp
dec
xor
and
mov
out
jns
in
cmp
out
mov
repz
mov
cmp
cs
aaa
mov
jge
xchg
mov
mov
jg
movl
cmp
shll
popa
jmp
cli
or
xchg
jp
pop
clc
adc
nop
lcall
test
jg
jmp
jg
jno
mov
pusha
stos
xor
sub
mov
dec
mov
jmp
lds
jno
jl
push
sar
cld
mov
clc
xor
aam
imull
xchg
xchg
mov
in
arpl
daa
cmp
mov
lods
adc
sub
jecxz
xor
arpl
and
lods
mov
pop
aaa
mov
out
mov
mov
movsb
jb
in
jo
mov
jae
out
push
xor
divb
cld
mov
jg
and
cld
aaa
mov
jno
mov
stos
push
sbb
xchg
cmp
adc
cmp
and
cltd
sub
pusha
into
cmp
xor
mull
xor
xor
out
xchg
ljmp
ljmp
fnsave
mov
call
hlt
sub
stos
mov
cwtl
sub
imul
bound
repz
and
mov
jne
ret
sub
out
out
repnz
push
jae
js
pop
cmpsl
push
lock
aaa
sbb
mov
lods
movsl
dec
mov
xor
aas
movsl
mov
and
jmp
imulb
hlt
mov
test
xor
jge
rol
decl
cmp
push
arpl
inc
cmp
jae
das
rol
cltd
mov
or
and
add
insb
sarb
cmpsl
fdivrp
adc
mov
imul
pop
mov
and
jae
add
hlt
lock
in
cs
popa
loop
in
je
push
mov
lods
scas
mov
jg
bound
xchg
mov
mov
divb
arpl
icebp
inc
movsb
repz
test
xor
mov
loop
and
test
out
frstor
js
xchg
sbb
cmp
xor
jecxz
mov
imul
loopne
mov
cld
mov
mov
sti
mov
jb
gs
push
or
cmp
jge
movsl
lods
xor
jbe
dec
add
bnd
je
mov
mov
fisubrs
icebp
out
pushl
stos
inc
sahf
inc
lds
iret
int
inc
mov
mov
fsubs
clc
jno
mov
sbb
repnz
cmpb
in
incb
cli
call
push
jg
jo
repz
out
ret
xchg
loop
mov
test
mov
js
xor
cli
outsl
imul
or
sahf
bound
stos
js
in
xor
lods
mov
inc
and
mov
leave
mov
lock
push
and
loopne
mov
mov
out
icebp
out
cmp
jnp
xor
clc
mov
or
jp
andb
test
cmp
dec
jns
adcl
cwtl
inc
mov
jb
fwait
clc
lods
std
negl
out
lods
idivb
mov
fs
dec
ret
xchg
nop
push
imul
cmp
jg
aas
js
inc
test
hlt
jae
mov
mov
mov
clc
cmc
jmp
cmpsl
mov
sbb
xor
sarl
loope
je
outsl
clc
loopne
xor
mov
jle
insb
ja
adc
mov
mov
push
mov
aas
mov
pop
inc
mov
fldl
xchg
js
mov
das
mov
test
cmp
loop
frstor
push
daa
pop
stos
xor
arpl
popf
and
dec
push
inc
or
stc
enter
repz
mov
fwait
repnz
lock
out
pushf
fdivrs
and
jns
dec
inc
aad
icebp
sti
or
es
jecxz
movsl
mov
or
push
out
ds
sub
jp
test
mov
imul
mov
dec
sbb
fs
bound
cmp
add
loop
cmp
inc
ljmp
stc
jns
mov
xchg
loop
and
inc
mov
jecxz
pop
insb
shlb
clc
sahf
test
clc
mov
push
mov
add
mov
repz
mov
xor
or
insb
fs
out
hlt
mov
dec
mov
sbb
push
sub
gs
jb
repnz
mov
arpl
mov
idiv
jns
cmp
adc
aaa
idiv
jecxz
lods
outsb
stos
insb
cld
jae
xor
cmp
loopne
and
xchg
lods
xor
push
sbb
xor
outsl
inc
push
shlb
lahf
stos
je
sahf
mov
mov
xor
jnp
stos
cld
fisubs
xor
shl
testl
shlb
lock
iret
test
jmp
mov
xor
mov
mov
jb
fs
fldenv
daa
dec
out
jp
pop
arpl
sbb
fistpll
cwtl
sub
xor
sti
pop
mov
enter
adc
lret
sbb
adc
inc
pop
mov
les
mov
movsl
arpl
push
popa
mov
hlt
and
fs
icebp
mov
mov
or
xor
popa
pop
imul
lock
hlt
stc
cmp
xor
xchg
popa
fcoms
cmpsb
add
inc
cmpsl
in
aas
movl
jmp
neg
js
test
jns
xor
jge
xor
cmp
push
inc
stos
stc
aas
mov
lock
cmp
lds
and
repnz
popa
jae
aaa
stos
subb
mov
pop
enter
mov
mov
insb
dec
and
mov
arpl
stc
sarb
cwtl
test
pushf
call
jp
jg
sbb
mov
jnp
fistpll
sub
scas
and
sbb
movsl
jb
testl
jmp
fsubrp
call
xlat
cmp
inc
lcall
mov
fistpll
push
scas
adc
and
add
fiaddl
lods
mull
sub
mov
jl
mov
or
mov
fnstsw
add
out
test
addr16
cmp
jecxz
popf
fprem
inc
js
mov
scas
xor
jp
aaa
pusha
pop
xor
hlt
pop
lret
cmc
ds
pusha
scas
mov
jmp
shlb
stos
clc
and
je
aad
js
jecxz
lods
adc
lock
test
lods
jae
gs
mov
clc
stos
mov
xor
cs
cld
int
push
mov
xor
arpl
jecxz
xchg
repz
aam
mov
mov
jmp
push
shlb
cli
xor
test
jl
mov
call
aam
mov
divb
mov
push
add
jno
xchg
mov
cmp
lods
test
aaa
ficomps
xor
push
mov
push
mov
jns
cmp
clc
pop
xor
pushl
cmpb
insb
nop
and
cmp
test
jns
mov
scas
je
mov
sub
dec
xchg
cmpsl
push
scas
in
add
xchg
or
and
repnz
addr16
mov
and
jle
sub
imul
mov
jno
int
push
shl
push
ja
aas
rolb
popf
jl
mov
stc
insl
mov
inc
push
sub
scas
mov
mov
sub
test
arpl
test
cmp
sub
nop
clc
xor
insb
xchg
sbb
testl
mov
and
jp
mov
stc
aas
cmp
cmp
ret
inc
jmp
into
mov
ja
add
arpl
and
in
bound
jmp
loopne
mov
leave
sub
cmp
mov
jae
mov
repz
lock
xchg
cmp
cld
jno
and
jecxz
aad
cmp
test
arpl
pushl
adcl
testb
movsl
jecxz
mov
and
insl
xor
mov
and
jo
icebp
mov
test
shrb
lods
leave
jg
mov
stc
cld
or
das
jns
push
sti
sub
dec
lods
sbb
cmp
jns
lods
cmpsl
cmp
and
xor
stos
out
mov
movsb
jl
add
mov
mov
mov
stos
xor
gs
pop
fnsave
mov
bnd
xchg
mov
cmp
mov
lods
dec
mov
cmp
push
adc
sbb
cltd
push
in
aad
out
lock
scas
arpl
adc
and
stc
mov
mov
push
push
notb
lods
jmp
repz
test
call
mov
mov
mov
mov
mov
ret
lea
fsin
mov
test
push
or
xor
pop
push
sub
scas
and
or
inc
in
stos
imul
xor
sub
popa
pop
xchg
insl
test
sub
test
cli
xchg
mov
lds
stos
in
jne
fcmovb
or
cmp
leave
and
push
test
pop
sbb
pop
test
pushf
icebp
cmp
test
into
fs
add
out
inc
adc
cmp
cmpsb
addl
fnstsw
jne
mov
ljmp
xchg
inc
insl
or
cld
rep
xor
cmpl
imul
je
mov
mov
js
or
std
pop
mov
jg
in
ret
mov
lret
lahf
and
lea
leave
adc
mov
dec
std
popf
cmpsl
in
stc
je
jno
ja
xchg
xlat
loope
and
mov
popf
dec
inc
jmp
insb
jbe
ja
xor
lock
mov
cmp
jo
mov
push
pop
sbb
insl
mov
sub
sub
sbbl
leave
pop
mov
mov
stc
arpl
jecxz
mov
imull
lds
sbb
inc
shrl
cwtl
clc
sarl
mov
out
gs
clc
cmp
lods
idiv
or
mov
cmp
xor
mov
xchg
jge
add
aaa
icebp
popa
stos
pop
ds
loope
test
or
jnp
cld
mov
sub
lock
loope
mov
clc
cld
stc
adc
sbb
cmp
adc
in
xor
sub
lods
jns
cmp
sub
push
lds
adc
cltd
jle
and
je
mov
xchg
mov
add
hlt
mov
fwait
shlb
mov
pusha
jae
dec
jg
cmp
mov
cld
add
test
inc
dec
cs
clc
fidivrs
mov
and
mov
icebp
jo
lods
popa
pcmpeqw
out
jns
popf
cmp
cmpxchg
mov
mov
bswap
hlt
mov
inc
push
or
sbb
xor
mov
lock
xchg
movsb
xchg
add
and
insb
enter
xchg
movsb
stos
roll
jb
je
pusha
sbb
divb
lds
leave
pop
cmp
test
push
arpl
enter
cmp
insb
enter
je
test
xor
xchg
sti
fucom
test
mov
sti
mov
shlb
lock
scas
push
cmp
add
test
int3
and
jmp
test
xor
pop
shrl
xchg
vmread
inc
mov
test
fbstp
sti
xor
cmp
push
or
test
push
movsb
mov
hlt
add
or
add
stc
xchg
push
roll
rol
adc
movb
enter
test
in
inc
shl
sbb
dec
mov
or
mov
cwtl
xor
icebp
lods
loop
dec
ret
decb
popl
dec
lcall
bswap
xor
insl
push
incb
in
xor
lock
xchg
add
mov
pop
ret
test
cli
test
sub
adc
sub
stc
iret
or
testb
addb
jg
movsb
push
jne
xor
sub
adc
jp
stos
mov
les
push
test
es
hlt
mov
mov
ljmp
mov
jp
inc
es
mov
push
test
adc
mov
cli
test
adc
xor
test
dec
sub
test
add
jmp
or
pushf
jae
sbb
pop
negb
into
popa
mov
js
cwtl
frndint
xor
out
cmp
aas
add
ljmp
mov
jp
fidivl
xor
shll
repnz
xor
xchg
and
and
xor
jge
mov
sbb
jg
cmp
jns
adc
jo
fdivs
test
xchg
sub
jl
and
mov
fldl
mov
icebp
jp
out
mov
xor
mov
xor
sbb
lods
jg
add
nop
ss
mov
clc
aas
cmp
adc
aaa
mov
mov
jne
and
mov
and
stc
lods
pop
dec
pop
nop
in
mov
sub
out
sub
mov
nop
loop
ja
pop
add
mov
and
loopne
mov
pushf
push
out
pushf
decb
jmp
jecxz
sub
aaa
push
daa
aaa
pushl
movsl
ds
mov
lret
hlt
mov
jl
cmp
and
xor
add
xor
and
aaa
jns
daa
divb
mov
lock
clc
jge
stos
sbb
test
mov
insb
arpl
pop
mov
mov
es
xor
je
jl
insb
sbb
mov
xor
lods
mov
jns
outsl
mov
cmp
in
and
pop
jl
incl
or
adc
mov
xorl
mov
mov
mov
dec
jp
lock
cmp
jb
push
ljmp
cmp
mov
mov
sbbb
xchg
or
mov
cmp
inc
jb,pt
ja
leave
aam
leave
shl
psraw
fwait
jmp
je
mov
push
test
xor
sbb
and
clc
and
cmpsl
aam
je
imul
sub
pop
je
lock
jae
and
mov
pop
repnz
xor
lahf
das
add
mov
mov
xor
mov
cmovns
or
out
cmp
aaa
cmp
or
cmp
mov
mov
enter
cmp
clc
and
cmp
insb
add
mov
cmp
aas
xor
lahf
fwait
xchg
push
das
jb
adc
sub
test
cmp
adc
mov
test
add
test
jno
fs
gs
jb
sbb
leave
xlat
scas
jns
cld
sbb
jne
call
repnz
adc
in
jne
aas
push
mov
out
sbb
adc
sti
mov
mov
xchg
add
mov
sbb
popl
lret
cmp
jmp
test
push
pop
cmpb
jg
lea
aas
and
clc
add
test
cld
cmp
out
xchg
ss
jae
mov
gs
add
mov
in
sbb
ds
push
xchg
ljmp
mov
repnz
mov
pusha
icebp
mov
or
mov
mov
aaa
enter
pop
push
cmp
stos
notl
cli
mov
dec
js
mov
jns
pop
mov
mov
xchg
or
jns
mov
xor
cmp
movsl
xchg
inc
mov
insb
je
mov
lcall
loope
mov
xchg
cmp
pop
inc
xor
inc
cmpsl
icebp
mov
scas
lret
push
dec
clc
cmp
mov
mov
mov
adc
cmp
cmp
xor
adc
imul
fdivrl
sub
sub
clc
adcl
addr16
jg
ja
mov
mov
xor
xor
jb
mov
sbb
enter
ss
jp
mov
or
mov
cli
jo
loopne
icebp
jmp
mulb
imul
clc
and
xchg
cmpsb
divl
stos
cmpsb
mov
clc
inc
hlt
lahf
jecxz
mov
jp
ljmp
mov
imulb
xor
inc
scas
fs
std
aaa
xor
cli
rorl
jb
mov
in
mov
popa
icebp
test
scas
out
pusha
jp
jg
mov
aaa
xchg
ljmp
inc
jae
in
lods
and
in
mov
imul
es
add
jecxz
xor
test
pop
fdivs
xor
ljmp
cmp
mov
lods
cmpsl
xor
orb
lahf
popa
mov
mov
fs
stc
mov
hlt
jmp
imull
sbb
add
pushf
hlt
ds
js
mov
mov
clc
cli
and
ja
mov
mov
mov
and
cmp
add
out
jg
and
inc
movsl
mov
mov
cli
and
insb
jl
xor
and
cmp
rorl
mov
mov
je
and
loope
mov
pop
loop
xor
add
std
sub
mov
jg
test
sbb
loopne
lods
clc
jecxz
in
lock
jo
aaa
mov
pop
cmp
pusha
scas
xor
jp
inc
fstps
orb
add
sub
xor
popa
aam
repnz
insb
sub
adc
ss
inc
imul
mov
arpl
mov
jnp
inc
mov
mov
jg
sbb
loope
xor
mov
stos
jecxz
cmp
xchg
mov
jbe
jl
jecxz
popa
leave
jno
pop
push
cmp
iret
mov
jb
fdivrl
arpl
scas
test
and
ss
bound
and
xor
aas
push
mov
mov
cmpb
mov
fnsave
lods
and
adc
cld
xchg
xor
xor
or
sti
cmp
mov
xor
jecxz
xor
mov
mov
mov
sub
js
lds
jb
enter
xchg
mov
xchg
sar
jg
js
jp,pn
push
cmp
icebp
test
sbb
push
inc
inc
xchg
mov
sahf
test
aaa
sahf
jo
leave
mov
scas
xor
test
popf
aad
outsl
xchg
out
dec
mov
cmp
jl
mov
cli
sub
sbbl
repz
clc
mov
sbb
orl
mov
push
js
pop
shll
pusha
xchg
mov
fcoms
lcall
bound
jecxz
clc
jle
mov
mov
idivl
lods
xor
jno
jb
jl
jns
mov
xor
xor
scas
insb
cmp
mov
mov
repnz
mov
or
loop
lock
sbb
and
cmp
xlat
mov
je
mov
mov
xchg
stc
jne
int3
dec
xor
lods
test
cli
mov
jns
xchg
mov
sub
stos
mov
push
in
cltd
push
imul
fdiv
jns
inc
imul
popf
cmp
xor
scas
xor
mov
sub
push
pop
imul
xor
popa
sbb
pop
sub
aas
or
xor
popf
jne
lea
cltd
jo
sahf
or
lods
mov
mov
lahf
out
xor
repnz
mov
sub
cmp
in
jl
cmpsl
dec
cmp
mov
jmp
sbb
xchg
mov
sbb
cmp
and
cli
xchg
pop
loop
bnd
sahf
mov
in
mov
mov
pop
xchg
mov
mov
and
cmp
push
insl
xchg
or
stos
scas
jg
and
jo
test
xor
push
cmp
je
imul
ss
leave
rcl
sub
decl
jo
jns
jecxz
or
lods
loopne
fldcw
repnz
adc
mov
ja
outsl
mov
cli
sub
mov
repz
ljmp
cld
jo
cld
rcrb
cld
lret
cli
sbb
lock
sahf
lods
sub
arpl
icebp
imulb
add
mov
xor
cwtl
daa
mov
xchg
or
mov
lret
nop
cwtl
mov
or
js
jp
insb
mov
stos
stc
mov
out
icebp
push
mov
sbb
imul
divl
mov
push
mov
mov
and
fs
jg
dec
repnz
imul
ficoms
and
mov
aas
stos
scas
mov
aad
xor
dec
stc
mov
and
arpl
pop
lock
out
hlt
mov
push
outsl
mov
xchg
cmp
mov
divb
jns
xor
xorl
mov
mov
test
push
cld
jl
repz
mov
cli
mov
jo
xchg
mov
sti
mov
jno
out
mov
mov
subb
das
xchg
loop
cld
inc
cmp
and
mov
insb
mov
shlb
mov
ss
push
and
pop
xchg
pop
in
iret
adc
jns
xchg
xor
cmp
mov
loope
loopne
mov
mov
mov
mov
call
and
jno
xor
cmp
mov
lods
jae
clc
sub
xor
into
jl
test
test
xchg
scas
divl
repnz
sub
pop
jno
cmp
ja
in
mov
inc
stos
dec
insl
stos
repz
outsb
sti
aas
mov
cmp
sub
cmp
mov
adc
pop
insb
jecxz
pop
es
xorb
andb
scas
cmp
xor
mov
mov
cmp
repz
inc
xchg
and
xchg
and
not
stos
repnz
jl
js
sarl
and
mov
inc
inc
xor
jo
mov
rol
mov
das
jb
scas
xchg
std
pop
mov
bound
xor
imul
scas
mov
mov
divb
xor
xor
push
je
jg
cmpsb
sbb
xor
aas
sub
mov
dec
loopne
idivb
mov
mov
mov
mov
jge
popa
and
cmp
sbb
sbb
xor
cmp
mov
hlt
xchg
fdivrl
cmp
lret
cld
xor
fistpll
ds
ljmp
mov
mov
data16
je
or
into
pushf
test
aaa
mov
push
sbb
mov
loop
mov
mov
addb
mov
mov
mov
xlat
cld
cmp
lret
sbb
int3
fidivrl
pop
add
hlt
and
notb
test
cmp
lods
mov
fdivr
sbb
out
rep
xchg
cmp
out
mov
adc
jne
imulb
push
insb
imul
test
in
icebp
mov
mov
jno
xor
mov
imul
mov
ret
push
sbb
into
mov
das
cmp
mov
push
testb
aas
mov
mov
mov
jo
test
outsb
cld
pushl
inc
adc
add
sbb
or
mov
push
mov
jnp
xlat
add
push
pusha
mov
mov
popf
cli
mov
cmp
cld
mov
cmp
push
ss
out
sbb
or
cmp
ret
incb
insl
ss
push
add
leave
stos
mov
cmp
cld
dec
sbb
mov
xor
ds
bound
cld
mov
repnz
cmp
jp
fst
les
imul
jecxz
enter
mov
mov
js
mov
cmp
mov
pop
inc
clc
enter
mov
arpl
mov
hlt
xchg
jo
pop
adc
call
xchg
shll
cli
push
cld
sbb
mov
inc
loopne
xor
mov
repnz
cmpsl
jne
arpl
test
mov
test
icebp
jo
push
clc
lods
cmp
push
and
ret
mov
mov
arpl
dec
lods
xor
xor
mov
cmp
fisubl
cmp
cmc
inc
shl
mov
js
in
dec
cmp
test
sub
cmp
inc
and
scas
and
sub
cmp
inc
xchg
ficompl
fwait
ss
lock
imul
mov
lods
add
and
mov
cltd
xor
push
sub
mov
ja
jae
in
mov
imul
cmp
outsl
mov
jp
clc
dec
hlt
fiadds
loope
cmp
aas
xor
and
es
jo
push
cmp
inc
inc
dec
jae
add
mov
xchg
icebp
mov
stc
cmp
in
cmp
push
sub
jo
and
jo
scas
test
push
ja
jge
aas
repnz
and
jno
lds
xchg
sub
scas
lods
sub
and
and
les
insb
test
push
test
or
pop
mov
ret
push
pop
jae
jb
lahf
es
push
cmp
mov
ret
loop
push
repz
push
ljmp
add
sbb
imul
mov
cmp
xor
divl
jne
mov
jb
loop
div
popa
lcall
and
sub
addb
jmp
ficompl
xchg
jp
ja
out
sbb
scas
mov
sub
add
lods
cmc
nop
jmp
test
shlb
mov
jp
jo
cmp
pop
xchg
das
js
xor
xchg
lea
jecxz
test
mov
cltd
aaa
mov
and
jmp
test
mov
mov
push
bnd
test
pop
dec
mov
imul
jp
mov
mov
mov
xor
ficompl
jb
int3
ds
xor
push
inc
xchg
andb
push
mov
repz
jge
mov
mov
mov
enter
fwait
testl
and
mov
sbb
sbb
js
jnp
insl
repz
test
xlat
test
inc
arpl
popa
adc
ret
or
shlb
mov
xor
icebp
fisubl
js
inc
idivb
lea
cli
and
mov
mov
jns
jmp
test
daa
mov
cli
cmpb
ds
dec
xchg
jge
mov
sbb
xor
push
add
xlat
bound
daa
push
stc
test
mov
dec
loop
mov
loop
adc
lea
mov
out
icebp
cmp
add
jo
andb
ret
shll
jb
aad
xor
data16
pushf
and
xor
icebp
out
in
aaa
pusha
push
sub
mov
push
je
hlt
xor
mov
test
sbb
lods
sub
aad
and
outsb
cmp
and
out
mov
in
jl
mov
jae
pop
lds
outsl
lds
cld
insb
jl
mov
testb
mov
arpl
jns
mov
aas
lods
mov
enter
mov
ja
jmp
je
xchg
loopne
cli
in
imul
cmp
hlt
stos
gs
mov
stc
mov
mov
pushf
dec
pop
mov
inc
cmp
fs
mov
nop
jbe
cmp
inc
mov
mov
mov
cmp
cmp
mov
ja
and
sbb
mov
fdivl
mov
gs
mov
pop
stos
cmpl
add
jge
jnp
sub
aaa
adc
mov
xor
pop
fsubl
pop
lods
movsb
lods
clc
mov
idivb
mov
add
hlt
add
jecxz
pusha
push
stc
jae
inc
into
and
pop
scas
cmp
dec
mov
addr16
jecxz
scas
push
jp
lock
add
scas
dec
inc
in
out
std
mov
js
mov
push
push
push
sbb
movsb
cmpsb
xor
stc
enter
sbb
lret
pop
mov
cmp
mov
xor
idivb
cwtl
lods
loop
icebp
sbbl
aaa
push
out
jno
push
xor
int3
sub
out
fwait
loopne
ja
cld
sub
stc
dec
fs
pop
and
mov
mov
iret
das
aas
repz
int3
sub
xor
jle
adc
ds
std
mov
or
les
cld
mov
div
inc
jg
push
push
imul
stos
repz
lods
sbb
jbe
push
jb
adc
adc
jae
repz
inc
outsl
sub
aas
mov
in
mov
mov
lods
repnz
jb
xchg
mov
fwait
stos
xor
mov
mov
jge
sbb
ljmp
mov
sub
mov
repz
cmp
inc
fsub
imul
mov
testb
repz
popa
aas
sub
pop
stos
mov
push
push
jmp
mov
aam
mov
mov
jae
fistl
clc
data16
mov
imul
or
sub
xor
mov
pusha
jl
je
lock
jg
repz
jge
mov
out
cmp
jl
and
jb
push
sbb
andb
mov
jae
fidivl
inc
stos
insb
mov
lods
pushf
imul
mov
mov
stos
cli
aas
jle
cmpsl
sub
js
jmp
xor
mov
adc
inc
mov
loop
int
fwait
stc
mov
fnstenv
imul
xor
pop
mov
xchg
loop
icebp
jmp
mov
fwait
jae
lock
insb
mov
push
stc
sub
jecxz
lods
in
mov
jno
jae
mov
ret
inc
aaa
sub
loopne
stc
out
mov
scas
repz
fdivrl
ss
insl
sarl
mov
test
insl
jno
pusha
outsl
cmp
mov
jmp
mov
xor
out
mov
enter
cli
cld
mov
in
sbb
loopne
mov
jb
in
loope
lock
xchg
adc
hlt
mov
jbe
cmp
mov
cmp
inc
addr16
les
clc
shll
xchg
fadds
cli
mov
cltd
cmp
mov
clc
enter
imulb
cmp
stos
ja
adc
xor
xchg
repz
je
dec
repnz
enter
jge
push
jnp
cwtl
cmp
out
xchg
stos
mov
clc
pop
test
insb
js
push
mov
notl
out
arpl
cli
ffree
cs
mov
and
cli
fstl
jecxz
and
jno
jmp
mov
lock
add
sub
bound
test
in
cmp
imul
sub
mov
xor
ret
push
and
adc
mov
mov
inc
mov
jp
int3
out
mov
mov
or
jmp
out
mulb
mov
sbb
lods
inc
es
daa
jb
jbe
insb
in
and
mov
ds
mov
clc
mov
fnstsw
clc
stos
lahf
insb
scas
je
xor
idivl
aaa
mov
sbb
clc
mov
out
addr16
js
dec
cmp
outsl
orl
je
std
xor
inc
sbb
out
sub
mov
and
aad
mov
inc
fwait
mov
stos
mov
in
push
xchg
sbb
scas
cltd
cmpsl
repz
pop
dec
mov
xor
stc
jno
loop
jecxz
cmp
jns
add
cli
or
pop
or
mov
mov
mov
ja
jl
jmp
test
or
cmpsl
mov
cmp
xor
dec
rep
xchg
cld
out
cmp
mov
cmp
stc
sub
mov
iret
jno
lods
test
stos
jg
hlt
pushl
in
insb
xor
jmp
cmp
stc
and
shl
call
mov
out
mov
dec
xchg
sub
mov
cmp
shlb
sub
mov
add
ret
and
mov
rolb
mov
jecxz
add
xchg
push
mov
fldenv
mov
sub
clc
or
or
ret
dec
in
pop
roll
pop
pop
test
mov
fwait
arpl
mov
cli
imulb
sub
jb
adc
jg
mov
xchg
adc
int3
mov
push
cmp
stc
mov
sahf
xor
mov
adc
scas
loopne
popa
sbbl
mov
mov
xor
arpl
pushl
imul
daa
and
loop
aaa
loop
inc
or
pop
jbe
xor
and
lock
ds
adc
and
cs
and
in
or
scas
mov
xorb
mov
xor
jmp
mov
rcrb
cmp
cmp
arpl
pop
mov
mov
das
jb
loop
mov
mov
jp
mov
sbb
mov
je
movsb
xor
stos
jmp
mov
stos
pop
cmp
lods
and
sub
lock
push
nop
adc
scas
cli
dec
mov
out
sub
adc
stos
stos
xchg
hlt
mov
pop
mov
cmp
scas
daa
xor
cli
adc
push
mov
jb
adc
aas
add
lret
cwtl
adc
jae
mov
mov
xor
ss
rcr
mov
clc
mov
cwtl
xor
adc
mov
icebp
lea
addr16
mov
jl
mov
test
addl
arpl
addr16
jns
jecxz
or
mov
mov
sub
subl
xchg
and
ja
imul
lea
mov
mov
ss
fbld
out
cld
movsl
or
out
aaa
and
or
mov
dec
aas
sbb
mov
mov
mov
and
js
mov
cmp
and
repnz
or
cmp
test
jmp
or
dec
xor
push
fisubs
mov
xor
xor
sub
jge
mov
std
scas
mov
adc
add
and
fidivl
negb
into
sbb
xor
aas
insb
fldl
xor
fbstp
je
scas
sbb
fcomi
mov
mov
icebp
lods
sub
xor
xor
fsubr
lods
xor
mov
sbb
adc
push
lods
aas
pushf
lock
xor
xor
inc
lods
loop
push
mov
mov
scas
jno
js
push
lock
scas
loop
imul
imul
and
jno
clc
mov
repnz
out
test
xor
sbb
adc
and
les
jecxz
in
cld
cmpsb
mov
pop
inc
or
cli
divb
outsb
addr16
mov
aas
aaa
mov
add
mov
icebp
pop
and
push
cmp
fsubs
cld
mov
mov
test
jl
mov
jno
mov
inc
sub
test
jo
cmp
popl
inc
sahf
test
sarl
cwtl
cld
rep
idivb
cmp
bound
cld
or
cmp
pop
sub
mov
adc
pop
into
mov
aam
in
fistpl
in
insb
jae
fistpl
pop
clc
jne
fmuls
daa
cmp
cmp
loopne
out
mov
sarl
dec
dec
icebp
dec
sbb
xor
xlat
bound
cli
mov
pusha
fisubrs
jae
cli
repnz
jbe
xor
sub
jno
sahf
pop
jl
loop
jg
add
mov
roll
lods
xor
in
xchg
mov
pop
sub
mov
xor
mov
mov
je,pt
repz
mov
xor
mov
push
in
or
data16
in
mov
sub
sub
testl
es
mov
pop
dec
out
repnz
fstl
aam
cmp
aad
hlt
adc
movsl
sub
push
cs
icebp
jae
and
std
shrb
xor
imul
xor
xor
cmp
ljmp
push
adc
sub
mov
je
test
sbb
rclb
stc
scas
aaa
in
or
rorl
sbb
push
es
jecxz
add
inc
subb
ds
mov
push
clc
ljmp
cltd
xchg
mov
mov
pop
mov
jns
push
bound
decl
shl
mov
add
out
leave
mov
jb
popf
inc
pusha
pusha
ss
arpl
jno
std
stos
loope
out
mov
outsl
inc
and
es
test
dec
pop
lock
pushf
ss
ret
orl
stc
lret
and
pushf
fimuls
adc
cli
fldt
push
mov
mov
add
addr16
lock
jnp
imul
arpl
scas
jae
ss
xchg
frstor
dec
mov
cmpb
je
jmp
cli
int
inc
imul
xor
popa
pop
addr16
mov
inc
shll
jmp
push
cmp
orb
push
or
xlat
jo
sti
roll
jb
pushf
jl
mov
cmp
cwtl
loop
jp
sahf
adc
jb
jg
jl
ja
gs
jns
stos
mov
jnp
gs
xor
jo
xor
dec
sbb
outsl
jecxz
xorl
sahf
xor
xlat
ds
cwtl
icebp
insb
mov
jecxz
pop
rcrl
sbb
loopne
icebp
mov
inc
jp
cwtl
data16
ja
js
lods
push
xor
nop
adc
jecxz
inc
lock
mov
mov
pop
loop
insb
int3
iret
fwait
push
rclb
jnp
sub
ja
mov
into
mov
lahf
inc
and
add
inc
adc
sub
stc
cmp
test
test
cmp
repz
stos
mov
jae
mov
test
add
dec
stos
lret
or
xor
out
or
mov
sub
xchg
push
mov
adc
xchg
lret
test
mov
stos
leave
xchg
jmp
xor
adc
mov
arpl
mov
repnz
and
cmp
sub
repnz
scas
and
pop
xchg
cmp
and
scas
xor
xlat
cmp
movsl
test
ficoms
mov
or
test
mov
loop
ss
jb
and
inc
mov
ret
int3
insb
jecxz
or
sub
adc
fwait
push
int
outsl
icebp
or
jb
xchg
sahf
lods
repz
mov
cltd
ss
add
jecxz
in
mov
xchg
sbb
mov
imul
xor
repnz
clc
sarb
inc
test
xchg
pusha
jnp
incl
sub
add
out
pushl
adc
stc
out
shll
mulb
test
test
pop
arpl
and
je,pt
fstps
push
test
lret
xor
push
je
roll
test
push
xor
fimull
and
and
cs
stc
flds
mov
stc
inc
xor
xor
adc
mov
mov
hlt
cmp
jae
push
cmp
stos
push
sub
icebp
outsb
jae
jp
out
cli
cli
idivl
out
xor
movsl
push
divb
pop
mov
call
push
mov
mov
sbb
and
scas
ja
insb
jae
xchg
shll
das
or
xchg
jne
scas
sbb
xor
cmp
and
xchg
inc
mov
mov
mov
roll
mov
xor
mov
xlat
mov
sub
sarl
in
sbb
mov
mov
decb
sarb
repnz
popf
jecxz
stc
add
ljmp
es
icebp
jge
cmpsl
cmpsb
mov
xor
hlt
lock
dec
jne
xchg
adc
cmpsb
outsb
jl
push
lret
dec
imul
lahf
mov
mov
aaa
divb
lcall
push
mov
mov
mov
call
hlt
lds
mov
add
test
stos
sub
adc
mov
xchg
js
jne
fwait
sub
jmp
jge
fucomip
xchg
jl
xorb
mov
in
mov
imul
mov
mov
cmp
imul
mov
cmp
mov
mov
arpl
jecxz
xchg
cltd
jae
cmp
adc
sub
in
push
cmp
and
clc
and
cmp
iret
rolb
aas
xchg
mov
scas
enter
push
pop
jb
adc
insl
mov
imul
push
jno
jg
mov
clc
pop
test
scas
icebp
mov
jae
stos
xor
in
das
call
push
xorb
jo
mov
lods
ds
mov
xor
in
xor
mov
cld
xchg
adc
sahf
and
aaa
or
lret
inc
repz
nop
test
ds
mov
loop
or
push
imul
sbbl
xor
test
loopne
imul
xchg
sub
mov
cmp
sub
stos
mov
xor
mov
idivb
jno
ljmp
hlt
fsubl
push
and
dec
repz
aas
ja
popa
stos
mov
push
fcoml
jae
cld
insb
ja
push
outsb
cwtl
in
add
mov
in
das
push
fwait
testl
arpl
cmp
out
outsl
mov
pop
pushf
nop
stos
push
cmp
jl
adc
sahf
movsb
aad
mov
int
ret
xor
mov
xor
jl
sub
enter
js
scas
aas
sub
and
loop
arpl
mov
push
sub
sub
test
jp
mov
je
pusha
hlt
cld
icebp
pushf
jns
jmp
div
out
and
adc
repz
pushf
mov
idivb
call
xor
in
mov
dec
xchg
mov
xor
sbb
mov
iret
outsl
xchg
mov
push
repz
jbe
mov
imul
and
mov
sbb
int3
popa
jp
aas
fdivrs
in
cld
in
add
pushf
xor
sbb
jp
and
pusha
push
jne
push
xor
das
test
lods
jnp
pop
push
cwtl
cld
mov
jp
shll
xchg
mov
fidivl
push
repz
mov
cmp
fdivp
sbbb
lods
data16
pop
cld
in
loopne
cmp
mov
hlt
imul
ss
xor
jae
mov
imul
push
inc
lea
popa
js
clc
push
ds
mov
mov
xchg
in
je
xor
jl
push
pushl
daa
hlt
cmp
mov
into
loopne
aas
arpl
jp
pop
mov
idivb
test
nop
std
stos
repnz
out
je
inc
loopne
repz
xor
bound
cmp
inc
divl
loope
mov
push
loope
xor
ds
xor
mov
adc
mov
aam
in
test
stc
cmp
je
arpl
mov
mov
cmp
mov
repnz
jl
xchg
xor
jbe
cltd
sbb
xor
mov
xorb
scas
jl
xchg
mov
int
push
aas
stos
not
test
and
loop
push
movsb
test
and
in
hlt
mov
xor
ds
cmp
inc
and
repnz
lea
cwtl
aaa
xor
pusha
cmp
stos
jns
test
inc
jge
test
in
cmpl
cwtl
and
mov
into
arpl
jmp
mov
mov
xor
das
repz
int
frstor
mov
lcall
mov
mov
cmp
jl
cmp
outsl
test
clc
stos
jg
xchg
in
notl
push
push
add
jno
mov
add
push
cli
sarl
stos
imul
jl
ret
jns
xorl
mov
push
mov
clc
decb
mov
push
ja
mov
inc
andb
sbb
js
sbb
mov
mov
add
popf
xchg
scas
xor
mov
sub
xchg
stc
sbb
inc
test
xor
mov
jge
cmp
cmp
imul
cwtl
movsl
xor
je
adc
sbb
push
inc
mov
jmp
xor
lret
dec
lds
movsb
ja
mov
mov
scas
jp
jecxz
ja
sbb
xor
adc
jl
cmp
mov
jae
sbb
pop
xchg
lcall
adc
xchg
cld
repz
cmp
xor
jb
ja
sahf
cmc
ret
xchg
xor
mov
lcall
and
xor
imul
mov
xchg
aam
pushf
mov
out
push
xchg
or
xchg
lods
mov
mov
lahf
and
and
xor
jno
mov
into
adc
pop
push
arpl
xor
mov
jno
add
cmp
cld
imul
xor
xor
stos
lods
mov
sub
mov
jns
out
jg
scas
push
shlb
lret
sahf
test
mov
dec
mov
loop
jmp
ja
je
mov
xor
jo
sarb
mov
stc
or
cmp
lock
mov
in
jmp
push
shll
pushf
repz
mul
mov
pusha
out
into
enter
in
inc
divl
xor
lods
arpl
mov
hlt
mov
shll
mov
es
add
idivb
scas
push
adc
aad
xchg
sub
mov
cmpb
cmp
test
pop
mov
cmp
aam
out
shlb
mov
mov
and
and
jp
lock
xor
push
out
jnp
nop
mov
insb
lods
ja
bound
out
stos
cmp
das
cmp
scas
sti
out
test
cli
mov
cmp
rol
jl
fdivl
sub
scas
mov
jb
inc
mov
out
mov
inc
movsl
imul
hlt
sub
add
fwait
mov
cmp
sub
mulb
decl
xor
and
in
ret
mov
cmc
inc
sti
xor
scas
push
xlat
mov
ss
pop
in
jp
inc
adc
aas
imul
imul
mov
lock
sbb
into
xchg
inc
mov
ja
cwtl
mov
xor
leave
add
mov
sub
insb
or
xchg
jae
int
xchg
and
mov
xor
mov
in
xor
push
arpl
mov
mov
mov
and
sahf
mov
jp
mov
xor
sub
push
dec
inc
jbe
imul
mov
or
lods
ss
dec
scas
jle
lcall
aas
xchg
scas
xor
pop
xchg
ja
adc
insb
sbb
xor
out
cmp
bound
inc
aaa
mov
jmp
jg
inc
xchg
enter
bnd
addr16
out
inc
adc
sub
jle
add
lods
add
mov
jno
bnd
pop
cli
mov
test
lds
sub
std
test
daa
js
aad
jnp
rcrb
mov
bound
and
loop
lods
inc
xchg
xor
and
jae
fbstp
lods
add
mov
mov
out
jp
imul
cli
pop
rcr
and
cmc
fcmove
cmp
xchg
lcall
addr16
loop
mov
inc
das
mov
scas
cmp
sub
cs
out
in
jg
fwait
out
clc
or
mov
mov
xchg
pop
outsl
and
idivl
repz
mov
mov
gs
mov
ret
add
and
mov
shlb
mov
lahf
jp
stos
mov
ss
xor
jne
push
cmp
mov
shll
notl
stos
gs
sbb
ret
pushf
sbb
scas
xchg
addr16
ds
mov
aas
mov
mov
xor
mov
lock
pop
jb
stc
popl
xchg
jge
xchg
aas
push
and
mov
cld
mov
cli
xorb
movsb
js
daa
jecxz
sti
and
xor
xor
xor
push
fldenv
clc
popa
xor
cli
mov
outsb
repnz
idiv
add
aaa
aad
cmpsb
push
stc
ror
imul
repz
nop
arpl
cmp
mov
xor
jne
mov
mov
pop
jge
cli
dec
out
or
mov
shrd
xchg
clc
les
add
or
jle
mov
ja
dec
add
shlb
and
in
jp
pop
jae
mov
lahf
cmp
sbb
jo
jecxz
movsb
mov
jge
sti
cs
xchg
and
xor
cs
mov
xor
sub
jg
or
clc
js
stos
jno
xor
movsb
pop
dec
mov
idiv
xor
mov
push
inc
pushf
lret
sub
xchg
orb
arpl
testl
xor
cmp
repz
call
in
out
cmp
lock
mov
or
mov
cmp
insb
fisttpl
shl
hlt
cmp
icebp
mov
repz
mov
popa
movsl
repz
cltd
daa
and
jmp
cmp
outsb
jmp
clc
lret
repz
hlt
repz
push
fs
loop
out
pop
dec
in
xchg
outsb
jl
and
fildll
repz
in
mov
cs
pop
cld
loop
scas
lock
fsubrs
mov
inc
jg
sbb
outsl
pushf
jp
cmp
add
loopne
sub
sub
das
mov
leave
mov
clc
push
mov
int3
add
xor
push
cmpsb
cmp
sbbb
insb
ss
loopne
mov
jns
cli
and
into
imul
push
xor
cli
mov
js
sub
sub
out
scas
mov
sub
mov
cmp
adc
mov
not
pop
out
test
repz
cmp
fmuls
xor
mov
arpl
mov
enter
mov
sbb
leave
sub
nop
aas
add
mov
adc
repz
fstps
jae
outsb
fcoms
sub
test
jns
sub
jle
bound
cli
xor
stos
lcall
ja
jae
mov
repnz
mov
jb
iret
or
xor
or
dec
fwait
mov
aas
repz
inc
or
nop
loop
sub
jmp
sbb
mov
arpl
mov
out
lods
in
mov
xor
rcr
jns
push
push
int3
in
mov
jl
lret
push
inc
out
stos
xchg
and
xor
lock
out
in
cli
shrb
or
icebp
push
mov
ss
addr16
out
lds
mov
mov
mov
test
xchg
imull
cmp
shr
mov
loop
cmp
loope
test
add
cmpsl
icebp
repz
xor
scas
pop
xor
repz
stos
cmp
in
xchg
cli
mov
jecxz
add
bound
cli
clc
shlb
js
xor
scas
push
ja
test
imul
adc
mov
mov
stos
mov
das
add
cli
movsl
pop
bound
xchg
jo
inc
les
sub
and
ljmp
ss
xor
js
lods
mov
jo
mov
iret
add
mov
ret
loop,pn
mov
es
xchg
mov
iret
cmp
sbb
and
pop
arpl
popf
or
adc
adc
cmp
cmp
outsl
cwtl
out
in
and
push
mov
cwtl
mov
lea
jmp
fidivl
rolb
scas
xor
bound
repz
add
cmpb
xchg
outsb
div
in
push
rol
mov
pop
out
js
xchg
das
out
arpl
popf
and
push
out
pop
xchg
xchg
push
jmp
sub
sbbl
subb
pushl
and
subb
jo
mov
insb
repnz
clc
fs
into
xchg
xor
ret
out
adc
testl
ja
bnd
add
in
xor
int3
out
pop
jae
dec
imul
test
divl
cmp
hlt
out
fs
testl
ss
mov
shlb
xor
xor
aaa
xchg
xchg
cmpsl
push
ljmp
jae
fistpl
sahf
mov
xor
sar
cmp
inc
cmp
test
addr16
ja
shll
add
jmp
in
xor
je
mov
adc
mov
cli
fidivrs
cmpsl
stos
jl
dec
test
mov
jmp
push
jno
pop
dec
and
push
loop
out
add
into
mov
sbb
cmp
xor
clc
adc
adc
arpl
mov
in
lock
mov
test
mov
mov
hlt
push
mov
mov
sub
outsb
mov
std
jle
inc
mov
adc
mov
or
in
jns
push
lods
fldcw
push
nop
xchg
xor
in
scas
mov
mull
test
in
cmpsb
cli
jg
cmp
in
mov
xchg
in
fists
mov
mov
mov
sub
ror
ss
aas
push
sub
mov
mov
pop
std
push
adc
xchg
adc
jl
mov
dec
lods
arpl
mov
cmp
aaa
pop
mov
icebp
pop
movb
movsl
insb
test
js
ss
xor
adc
xor
mov
ret
mov
and
stc
loopne
imul
in
dec
xor
mov
and
pop
mov
cmpsl
xor
clc
in
mov
imul
mov
mov
jl
mov
js
ss
js
cmpsl
lods
jl
cmp
jl
fs
mov
jmp
int
shll
fadds
stc
icebp
mov
fstps
mov
ds
cmp
fdivrl
push
jp
mov
mov
leave
jmp
cli
mov
pop
popl
or
ja
cmp
shlb
mov
jp
lods
int
cmp
repnz
sub
lods
out
mov
ds
xor
mov
sub
cmp
xchg
hlt
jl
cltd
xchg
adc
mov
xchg
aam
xor
das
cmp
in
stos
dec
lods
lods
mov
mov
in
inc
mov
adc
out
jmp
int
and
and
cmp
ljmp
mov
shrb
imul
out
mov
push
lods
mov
repz
mov
lret
pushl
xor
cmp
and
jb
imul
adc
pop
cmp
fadds
ja
int3
xchg
pushl
mov
cmp
jns
nop
ljmp
mov
sbb
mov
imul
mov
sub
sub
out
mov
mov
cmp
mov
idivb
imul
cmp
xor
jl
loop
cmp
js
lret
cld
mov
jl
mov
in
icebp
scas
xor
mov
mov
sub
js
jecxz
icebp
mov
int
lock
hlt
iret
ret
push
mov
divb
xor
rdpmc
xorl
jb
xor
ds
sub
scas
sbb
stos
je
frstor
mov
xor
imul
pop
je
in
jno
movsl
js
add
cld
adc
mov
mov
sbb
cmp
popw
cld
xlat
push
xchg
cwtl
fstpt
cmp
mov
and
aas
insb
mov
insl
stos
sub
in
ret
cmpsl
jl
scas
inc
gs
sub
mov
xor
neg
dec
mov
repnz
arpl
mov
inc
clc
push
testb
fbstp
in
cmp
mov
fcomps
cld
xor
repnz
das
jl
out
xchg
lods
icebp
push
lock
mov
hlt
mov
ffree
jb
loop
mov
mov
testb
mov
mov
cmp
ss
fnstcw
cmp
xor
es
sub
loop
addr16
mov
cmp
xchg
stc
mov
clc
cld
inc
pusha
jno
and
cmp
test
xor
and
and
int3
lods
idivl
pop
push
inc
imul
shll
jae
loope
shr
jne
cmp
push
hlt
mov
mov
mov
push
dec
mov
bnd
orb
lahf
jecxz
js
int3
imul
lcall
mov
test
inc
stc
cmp
rclb
clc
pop
mov
mov
cmp
mov
xor
int3
mov
mov
scas
mov
stos
and
mov
xor
mov
xor
mov
jg
out
jecxz
aaa
sbb
outsb
js
aad
lods
imul
incb
mov
adc
xchg
mov
inc
jno
cwtl
shr
pop
clc
ret
push
xchg
clc
repnz
aas
sbb
bound
lock
lock
cmp
leave
divl
and
testb
das
mov
ret
xor
jg
mov
enter
scas
pushf
adc
mov
mov
sub
sub
fwait
aas
xor
mov
and
inc
clc
push
repz
imul
lock
xor
mov
loop
aaa
js
call
push
out
cmp
and
xor
addr16
jno
insl
lahf
ja
mov
cli
mov
mov
xchg
jae
imul
mov
jns
cwtl
adc
jb
xor
insb
clc
jmp
or
add
jae
mov
cs
xbegin
aas
ds
push
mov
lods
push
sbb
and
ja
sbb
push
xor
mov
mov
lods
addr16
movsl
test
and
incl
mov
jmp
fwait
clc
adc
mov
loopne
push
sub
lods
stc
pop
mov
arpl
mov
idivl
sub
mov
xchg
push
aaa
pusha
xor
inc
lods
mov
js
pop
addl
jo
xchg
xchg
das
push
in
call
push
dec
nop
jl
stos
clc
imul
push
cmp
out
jecxz
or
repnz
pop
mov
ss
js
mov
dec
mov
mov
insl
jae
xor
mov
mov
in
sti
fldenv
frstor
cmc
xor
cmp
mov
insb
je
jo
sub
pop
mov
cld
xor
adc
mov
jb
jmp
mov
xchg
add
mov
mov
mov
or
divl
add
cmp
aas
mov
cmp
push
scas
lods
loope
mov
jecxz
xchg
insb
cmp
push
jl
in
xor
or
imul
xor
in
cmp
or
xor
in
inc
jg
dec
lahf
ja
mov
leave
mov
mov
test
pop
add
jne
mov
sub
in
xor
push
and
inc
xchg
jmp
mov
mov
repz
andb
xor
jmp
insb
ljmp
clc
ds
in
in
cmp
sbb
test
idivb
cli
sbb
mov
scas
adc
loope
and
mov
mov
and
jl
fdivrp
sbb
mov
arpl
mov
push
hlt
aad
aas
shrb
call
push
mov
cmp
jno
fisubrs
mov
insb
out
push
xor
lock
jo
xchg
repnz
idivb
sub
jae
mov
fwait
cmp
dec
in
scas
cmp
mov
add
mov
cmp
sub
stc
cmp
mov
mov
mov
in
jecxz
mov
imul
out
arpl
push
or
scas
repz
inc
loopne
cli
insb
mov
xchg
cmpsl
ds
xor
cmp
jne
mov
fmull
ds
ss
stos
shlb
jae
jecxz
jno
sbb
adc
scas
js
add
sbb
repz
mov
jae
ja
xchg
rclb
mov
imul
ja
mov
jno
clc
mov
cmc
scas
testb
mov
aaa
add
jno
inc
sub
mov
pop
dec
das
hlt
push
clc
xchg
scas
dec
daa
mov
xor
and
imul
out
cmp
cmp
adc
rcrb
lods
jge
inc
mov
xor
movl
pop
adc
cmp
fwait
ss
in
sub
or
and
decl
imul
ret
adc
icebp
cld
sbb
sbb
imulb
cs
xlat
call
sbb
mov
aas
add
mov
xor
stc
cld
scas
add
cmp
xor
mov
hlt
andl
mov
jmp
jns
repz
out
imul
adc
sti
and
scas
adc
cs
lods
fsubrs
lods
and
jno
push
xor
scas
jae
aas
mov
stc
outsb
subb
mov
je
mov
xor
jo
add
xor
xchg
cmp
mov
aaa
scas
and
xor
push
adc
mov
cli
loop
mov
mov
and
subl
mov
sub
and
push
cmp
in
scas
cmp
es
nop
arpl
jmp
mov
inc
je
ss
inc
add
insl
outsb
sti
jo
sbb
sbb
orb
xor
popa
aas
cmp
jae
stos
pop
lret
test
dec
lock
mov
xchg
mov
sub
cmp
divl
insl
fwait
enter
sbb
mov
js
out
cld
jl
jae
cmp
mov
dec
pusha
mov
jecxz
icebp
stc
loopne
sub
ja,pt
xor
pop
je
pop
es
mov
pop
jl
ja
mov
jle
sub
cmp
enter
and
mov
adc
xchg
sahf
sbb
or
fcomp
push
push
cmp
xor
jb
mov
popa
fisubrl
std
jno
push
jl
push
pusha
repz
or
repnz
jns
mov
out
test
das
push
dec
test
cmp
int3
mov
xchg
mov
add
aaa
dec
lock
ja
std
test
sub
jp
je
js
cld
jb
arpl
bound
icebp
jo
jg
sbb
and
sbb
push
repz
mov
hlt
imul
fiadds
cmpsl
xor
popf
xor
mov
jmp
sub
lock
jp
in
xor
mov
scas
gs
int
lods
xor
clc
movsb
xor
cwtl
xchg
jno
cmp
popa
and
lods
jb
inc
jnp
test
imul
jle
jne
test
add
mov
int3
repz
mov
aas
rcrb
repnz
jl
lods
mov
jg
ds
loop
or
sub
adc
out
clc
test
shrl
inc
or
call
cld
es
popf
mov
shl
icebp
add
sbb
mov
cmp
in
mov
sbb
sbb
pop
call
xor
or
push
lahf
imul
fwait
jb
std
mov
sbb
lods
sub
cmp
and
mov
das
cmp
leave
out
xor
mov
push
mov
jno
aas
into
test
mov
scas
add
and
xchg
xor
mov
mov
xor
jae
mov
out
icebp
add
and
cmp
sarl
push
lahf
lock
jno
sub
out
fnsave
push
add
test
push
out
cmpsl
mov
cli
pusha
jp
test
test
mov
stos
mov
clc
ds
push
mov
imul
jmp
jg
arpl
add
enter
cld
cld
mov
inc
sbb
repnz
mov
into
sub
jb
and
ss
mov
cmp
add
mov
cmp
imul
mov
and
cmp
lds
mov
scas
in
in
cmpsl
stc
and
nop
jle
js
test
xor
sub
stos
aas
mov
icebp
add
sahf
lret
sbb
out
mov
mov
ficoml
xor
ds
movl
shll
xchg
adc
sub
xor
js
inc
xor
subb
add
mov
pop
mov
cli
and
mov
adc
cmpsb
mov
sub
xor
aaa
mov
fnstsw
mov
xor
aaa
adc
stc
imul
mov
mov
lods
mov
add
jae
inc
adc
ret
and
jp
nop
loop
stc
pop
xchg
xor
and
jns
jmp
cld
mov
or
and
in
jns
imul
icebp
and
mov
movsl
mov
stc
inc
jno
mov
cmp
in
mov
ud1
xorb
xor
jb
cli
popa
xchg
insl
add
add
in
add
pop
pop
push
imul
lea
jp
mov
stos
lds
in
mov
jle
insb
je
xor
arpl
and
cli
shlb
jmp
cld
stc
cli
cmp
cmpsl
jg
pop
cmpb
frstor
scas
ss
subb
arpl
lods
inc
and
mov
mov
insb
mov
sub
ja
mov
mov
add
outsl
mov
shrb
test
jno
test
mov
scas
mov
mov
mov
icebp
insl
mov
jge
mov
test
pop
stc
mov
test
clc
and
add
push
stos
mov
inc
pop
popa
test
jns
pop
in
sti
jl
leave
loopne
or
ss
repnz
test
repz
xor
lcall
mov
insl
sub
je
cmpsl
cmpsl
jmp
into
movsl
xchg
mov
out
lods
mov
cmp
in
pop
lock
imul
mov
notb
ss
sub
cmpsl
stos
leave
cld
jo
jb
data16
add
xor
pop
mov
jno
mov
mov
jns
jne
jmp
stos
sbb
mov
sub
and
xor
shl
mov
jae
mov
adc
insb
lods
jae
shlb
mov
jecxz
adc
mov
jno
dec
mov
divl
icebp
cmp
mov
and
inc
insb
sbb
addb
jns
sub
pushf
jg
cmp
popa
jno,pt
lds
pop
pop
mov
sub
insl
xchg
stos
das
jp
das
pop
outsb
daa
cld
xor
in
or
mov
jae
jo
jp
mov
sub
jb
pop
or
xor
enter
in
outsl
insb
mov
out
jae
cmp
add
xorb
lods
test
in
jo
imul
jl
mov
imul
inc
cmp
scas
xor
lock
mov
push
repz
imul
adc
sub
push
mov
mov
xchg
cmpsl
mov
inc
adc
lods
test
mov
mov
xchg
cli
cmp
pushl
rorl
mov
mov
sub
add
outsb
popf
fimull
out
mov
mov
cmp
cmp
insb
scas
popa
mov
xor
test
xor
mov
or
dec
stos
mov
cltd
jno
outsb
addr16
jl
dec
push
mov
aam
or
and
stc
mov
mov
nop
mov
pop
mov
jmp
aaa
imul
xchg
xor
dec
and
cmp
xchg
add
lods
xchg
nop
lods
cli
mov
jecxz
add
sub
adc
sub
daa
loopne
cmp
ja
test
and
push
pop
ret
imul
push
xlat
mov
ret
mov
in
data16
pushf
jb
jmp
pusha
mov
gs
mov
xor
inc
clc
jp
cmp
fcompl
notb
stc
mov
cmp
jb
lcall
cmp
cs
jmp
xor
mov
ss
mov
mov
sub
mov
repz
mov
and
mov
imul
fsubrp
xor
xchg
add
mov
jl
mov
ja
lock
pop
sahf
xor
stos
jae
aam
sub
das
mov
stos
push
push
jmp
fbld
fs
cmp
stos
ds
sbb
fsubr
push
mov
loopne
xor
scas
cli
xor
mov
mov
mov
xor
and
lds
or
jno
movsl
jae
call
stc
mov
imul
jns
and
sahf
cmp
mov
xor
lods
std
lock
mov
in
jg
push
mov
add
cmp
xor
imul
and
lock
jno
arpl
incl
xor
inc
add
repz
sub
fwait
in
and
mov
add
pop
cmp
adc
and
std
imul
es
and
jae
sbb
vmwrite
mov
addr16
jmp
mov
aas
push
push
lea
cmp
lock
aam
incl
mov
repz
push
push
out
ret
and
cmpb
jl
test
cmp
mov
or
jno
xor
lock
leave
or
mov
pop
in
test
repnz
push
ss
mov
repz
je
lock
cmp
aas
imul
shlb
adc
cmc
adc
mov
insb
icebp
hlt
fcompl
cli
xor
cltd
clc
xorb
test
push
and
and
mov
pop
push
mov
icebp
bnd
xchg
movsb
sbb
testl
dec
cmp
jl
lcall
push
mov
adc
xlat
int
test
mov
stos
repnz
dec
xor
adc
adcl
aam
je
cmc
jmp
lea
insl
out
inc
push
divb
xor
je
aad
push
or
xor
jecxz
js
jns
xor
mov
cld
outsb
outsl
repnz
and
mov
mov
xor
and
sub
jae
xor
mov
sub
and
lock
js
adc
aam
mov
xchg
fadds
test
jl
cmpl
pusha
adc
sub
test
inc
mov
mov
stc
jbe
loop
movsl
adc
and
test
icebp
js
push
xor
fdivs
nop
and
ss
xor
mov
xchg
cmp
add
scas
das
std
mov
push
test
mov
and
idivl
xor
mov
xchg
xchg
fdivl
mov
mov
jge
cmp
cmp
fs
ja
out
jl
das
xorb
loop
stc
insb
popa
into
jg
sub
test
mov
and
enter
movl
repz
fdivs
mov
in
lds
clc
jecxz
aas
hlt
mov
stos
add
jne
test
scas
jb
int3
cmp
ja
clc
repz
mov
jp
pop
roll
jno
push
sbb
and
addr16
imul
mov
nop
shrl
repnz
testb
aas
mov
fdivs
mov
pushf
aaa
pop
mov
xchg
mov
adc
out
sub
test
mov
cli
jae
test
pusha
mov
mov
cld
icebp
test
hlt
popa
or
xor
xlat
lret
add
mov
addr16
mov
aam
aaa
negb
cmp
jb
cltd
lret
cs
inc
mov
sub
mov
insb
cli
repz
xchg
cmpsb
cltd
xor
stc
pop
mov
shrb
imul
dec
mov
lods
in
mov
fisubs
jmp
bnd
iret
lret
sub
test
sarb
andl
ja
cs
movsl
xchg
mov
add
fs
and
inc
fwait
xchg
push
xor
mov
xchg
mov
loop
aas
inc
inc
mov
repnz
xor
imul
stos
test
and
xor
pop
mov
dec
clc
xor
sbb
add
test
aaa
xor
mov
sbb
jb
lret
cmpsl
mov
lods
sub
sahf
pusha
das
cmp
and
jge
jl
xchg
pop
cmp
outsl
ja
jns
std
hlt
mov
ljmp
sub
arpl
mov
cld
sub
ds
mov
pop
mov
xor
cwtl
jae
jae
push
jp
hlt
aas
mov
mov
sbb
je
mov
cltd
divb
mov
jl
xchg
aaa
mov
mov
leave
mov
mov
mov
or
mov
jmp
fs
jo
clc
cmpsl
test
mov
adc
arpl
and
sbb
jns
out
cmp
and
cld
loopne
push
jecxz
imul
push
imul
or
ss
mov
sahf
ret
mov
cld
jb
push
std
jl
lods
inc
ds
mov
xchg
push
mov
jo
icebp
mov
sbb
and
mov
mov
out
xor
lcall
scas
cmp
mov
hlt
js
xor
and
xchg
jge
stos
mov
and
jns
cmpb
mov
jo
mov
cmpsl
pop
xor
inc
jne
lahf
xor
mov
imul
sbb
mov
repnz
pop
cmpsl
into
jae
add
or
movsl
jns
jg
cmp
mov
mov
jb
int3
adc
cli
aaa
sbb
test
or
xor
jo
adc
loopne
mov
jae
imul
xor
mov
imul
and
aad
add
in
ja
mov
cli
xchg
stos
push
mov
pop
and
in
cmpsb
lods
adc
lock
or
popa
mov
lods
js
mov
insl
mov
mov
xor
sbb
push
pop
je
push
sub
sar
jp
pushf
cmp
xor
nop
shl
aaa
xor
add
test
sub
inc
test
icebp
pushl
lahf
sbb
mov
mov
mov
pushf
push
jo
cmp
inc
lods
jae
and
in
jb
cmp
cli
pop
lock
pusha
push
xor
cmp
insb
cmp
xchg
jb
and
sub
negb
and
movsb
xchg
xchg
cli
test
popf
aas
and
dec
loopne
sub
out
ret
shlb
lods
mov
ds
mov
mov
sub
jns
mov
or
in
pop
cmp
aam
and
idivl
cmp
icebp
or
test
cmpsl
mov
aaa
mov
mov
pusha
dec
in
add
push
adc
pop
mov
adc
mov
cli
xchg
mov
jae
clc
cmp
movsl
popa
dec
imul
js
jo,pt
sbb
add
insl
xchg
cmp
add
sbb
daa
outsl
mov
je
mov
mov
out
jmp
jns
popa
dec
icebp
clc
lods
popf
mov
aaa
inc
mov
js
leave
loop
cmp
mov
hlt
jecxz
push
fiadds
mov
scas
xor
sahf
and
mov
mov
mov
jae
cltd
xor
outsl
xchg
repz
in
scas
mulb
icebp
in
iret
and
jo
inc
fwait
mov
testb
cmp
and
jno
stos
cmp
add
mov
xchg
loopne
imul
jmp
cmp
and
xor
xor
hlt
lods
cmp
jg
aas
clc
mov
bound
cmp
push
sbb
icebp
cmp
subb
jl
imull
mov
cmp
and
je
xor
xor
stos
pop
insl
out
repz
scas
adc
loopne
mov
test
fimull
rclb
repz
mov
jns
ret
icebp
popa
stos
movb
jmp
mov
orl
stos
mov
lods
and
mov
arpl
mov
xor
add
ja
fdivrp
jo
mov
sbb
mulb
sub
push
jns
movsb
insb
insb
mov
ret
jo
popa
imul
mov
pop
sub
jp
aad
sbb
xor
cwtl
sti
mov
fidivl
testl
ss
xor
popf
dec
mov
lods
repz
js
mov
or
neg
cs
adcb
mov
mov
sbb
into
pop
mov
cld
mov
jecxz
mov
pop
out
mov
push
popl
orb
mov
xor
scas
loop
mov
test
loopne
ss
out
stc
cmp
jo
dec
insl
ret
push
mov
cmp
arpl
das
xor
ds
scas
mov
hlt
decb
aas
fisubrs
fimuls
cltd
hlt
xchg
sahf
movsl
jb
leave
lcall
cmp
adc
mov
imul
mov
bnd
mov
scas
and
negl
test
xor
sub
and
out
fs
fdivr
cwtl
clc
cmp
xorb
imul
cmp
data16
sub
mov
xor
mov
mov
mov
xor
mov
in
mov
ljmp
add
insl
add
repz
test
imul
loop
cmp
mov
mov
mov
mov
mov
scas
sbb
mov
fwait
push
mull
arpl
hlt
jp
jl
imul
add
and
fs
mov
jno
mov
stos
incl
sub
or
sub
scas
jp
xchg
clc
insb
mov
mov
cmc
js
das
sbb
jmp
loope
pop
repnz
jecxz
stc
in
mov
or
pop
mov
dec
or
and
sub
cmp
add
jns
lods
je
jns
imul
jb
dec
pop
addb
jo
jecxz
jmp
in
imul
jno
xchg
out
pop
out
mov
push
test
aas
xor
js
push
repz
scas
stos
cmp
inc
rclb
test
xchg
or
cwtl
mov
loopne
jl
notrack
aaa
clc
aad
sahf
stc
in
cld
stos
xchg
and
shlb
inc
sub
pop
lea
scas
ret
or
jnp
mov
and
mov
sbb
clc
mov
cli
pop
push
push
bound
inc
push
mov
dec
fs
mov
imul
bnd
je
daa
aas
inc
xchg
lret
cmpsl
jae
mov
ret
repz
push
push
aas
jb
outsb
fdivl
mov
mov
mov
mov
xor
icebp
mov
repnz
loop
je
or
insb
jnp
mov
cli
stos
mov
pop
and
sbb
xchg
ret
aaa
or
int3
inc
test
mov
lcall
cld
jno
pushf
negl
fwait
std
jmp
scas
mov
or
stos
fs
mulb
mov
jecxz
push
mov
mov
mov
dec
popa
add
fwait
xor
and
daa
mov
and
sub
mov
and
mov
addr16
mov
in
xor
imul
dec
fdivs
lods
cmp
mov
hlt
adc
loop
cmp
inc
dec
stos
out
xchg
xchg
xor
daa
jo
bound
jmp
out
daa
test
test
je
jnp
pop
andl
mov
pusha
out
lods
xor
mov
sub
mov
js
ret
mov
xor
mov
repz
mul
hlt
aaa
repnz
xchg
xor
pop
mov
notl
js
rcrb
and
sbb
sarl
out
xchg
xor
ja
imul
arpl
aad
pop
xor
mov
mov
js
mov
mov
push
sbb
stos
vpcmpeqb
jecxz
ret
or
repz
jmp
push
and
jp
cmp
mov
pop
xor
popa
xchg
cmp
jo
mov
and
sbb
sub
jbe
sub
cld
push
imul
cmp
mov
mov
push
out
stos
lret
divl
stos
ja
mov
hlt
lret
fs
mov
xchg
out
cmp
out
enter
clc
jmp
sbb
lock
mov
xor
cli
mov
stos
mov
lods
mov
xor
clc
mov
shll
mov
mov
divb
cmpsb
out
mov
adc
dec
outsl
cmpb
jb
dec
cmp
xor
js
fwait
scas
mov
adc
test
jnp
in
stc
repnz
imul
mov
or
pop
xor
leave
cwtl
jb
jns
sbb
pop
mov
cmp
outsl
ss
cmp
pop
cmp
xor
jno
dec
addr16
mov
test
in
aam
push
dec
rolb
lret
ror
je
adc
out
arpl
ret
popf
cmp
jge
repz
pop
inc
fcompl
stos
je
addr16
mov
aaa
testb
push
mov
and
repnz
ss
fs
test
test
jno
stos
xor
lret
clc
nop
ja
jl
mov
jle
mov
leave
inc
mov
sbb
mov
mov
xor
repz
and
jb
stos
int3
jns
or
aaa
mov
hlt
ds
pop
pusha
mov
out
jb
negb
out
sub
dec
stos
and
repz
stc
pushf
push
cwtl
jb
lock
out
sarl
xchg
xor
sub
test
sub
mov
imul
fs
mov
add
cmp
and
inc
inc
std
ret
shlb
idiv
adc
push
je
cmp
jmp
adc
test
outsb
mov
shrl
mov
insb
test
add
sub
and
cmp
jg
mov
out
imul
xlat
sahf
aaa
mov
push
insl
cmp
mov
jmp
jg
xlat
mov
andl
shll
std
xor
adc
or
mov
mov
and
or
jge
jl
fstl
xor
aas
and
mov
es
jns
stos
sub
jne
aaa
cli
cmp
daa
repz
push
in
xchg
pop
push
je
mov
inc
out
imul
push
cmp
push
cld
mov
aas
nop
mov
jmp
or
mov
mov
mov
add
jmp
inc
jp
sub
loop
bound
sbbb
sbb
scas
add
imull
sbb
test
inc
stos
hlt
arpl
out
cmpb
or
sub
fcoml
mov
addl
cmp
repz
cmpl
sub
mov
imul
stos
idivb
inc
add
lret
pop
imul
push
fstpl
stc
lret
ret
movsb
adc
aas
stos
out
sahf
stos
mov
xchg
ret
or
mov
in
dec
cmp
sub
mov
scas
cld
loope
lds
stos
cmp
adc
cmp
sbb
mov
jecxz
pop
mov
xchg
add
and
mov
sub
pop
loop
cld
leave
stos
push
mov
pop
insl
xchg
gs
mov
clc
cmp
cmp
cmp
mov
jp
popf
stos
mov
nop
mov
jecxz
jb
pop
ja
mov
sahf
repz
add
movsl
xchg
xchg
cmp
pop
movsl
add
ljmp
mov
outsb
lcall
jecxz
imul
mov
scas
lock
push
ds
and
mov
sub
imulb
mov
pop
jae
mov
dec
jbe
jmp
mov
mov
xor
xor
gs
pop
jae
push
mov
jmp
sarl
xor
in
popa
repnz
adc
sub
push
pop
hlt
cmp
popa
fdivs
and
loop
in
and
lods
loopne
mov
cmp
push
int
shlb
xor
popa
bound
xor
mov
rcll
pop
cwtl
in
stos
sub
jg
insb
repnz
cld
mov
repz
out
std
ds
sarb
inc
mov
out
jns
jg
ja
ficoml
mov
outsb
jno
inc
ljmp
mov
scas
xor
sub
sub
mov
repz
sub
fldenv
js
mov
leave
clc
adc
testb
xchg
add
mov
js
fisubrl
in
adc
lds
add
js
xor
xor
repnz
loop
insb
adc
mov
jo
std
js
and
mov
xor
ja
repz
xchg
pop
mov
icebp
xchg
sbb
repnz
out
stos
jl
fsubrs
mov
mov
jl
fdivrp
cmp
xor
pusha
jg
sub
rorl
sub
cmp
pushf
mov
pushw
pusha
ret
xchg
mov
and
loop
ss
sbb
mov
cmpsl
fidivrs
xor
dec
inc
push
cli
lods
jns
mov
mov
xchg
mov
stos
cld
stc
xchg
xor
lea
jecxz
popa
dec
xor
sbb
out
stc
jno
jmp
out
mov
push
out
cmp
aas
jecxz
xor
dec
mov
cs
xor
int3
mov
cld
outsl
pop
pop
into
add
out
loop
loopne
repz
clc
push
lods
mov
add
jmp
push
cmp
cmpsl
repnz
jmp
push
bound
mov
cmp
jp
add
jb
mov
ss
lock
outsl
insb
mov
gs
xor
in
imul
mov
stos
pushf
fistpll
adc
adc
in
and
arpl
cmp
dec
mov
js
adc
clc
scas
divl
xor
scas
mov
cmc
imul
mov
sub
jmp
sahf
stc
and
ret
repnz
jp
cmpl
push
mov
pop
jns
call
mov
arpl
stos
mov
clc
xor
mov
test
xor
pusha
clc
lahf
mov
divb
test
jno
mov
xor
pop
push
sub
repnz
xchg
mov
jae
aas
sub
xchg
test
jb
fdivrl
cli
sub
leave
das
lock
and
mov
cmp
jp
rcll
xor
mov
into
jmp
add
std
pop
ret
push
das
cmp
imul
jp
sub
or
inc
mov
sub
or
xchg
adc
pushf
jle
xor
adc
or
add
repz
nop
jo
xchg
ds
pop
test
xor
sub
and
fs
negb
test
pop
repz
fisubrs
ss
lahf
fwait
push
and
gs
dec
pop
pushl
push
xchg
add
xor
mov
insb
rolb
imul
pop
test
divb
cli
mov
fsubl
mov
add
inc
and
push
cmpsb
dec
and
arpl
or
jecxz
xchg
pushf
scas
and
cli
sub
stc
cs
push
sbb
sbb
rolb
inc
cmp
daa
stos
pushl
pop
inc
pushf
dec
inc
xchg
and
push
sbbb
jecxz
push
inc
daa
mov
imul
and
cli
xor
pop
cmp
cmp
aaa
jle
movsl
xor
mov
roll
sub
mov
and
mov
jae
cld
mov
push
adc
mov
mov
adc
push
push
jbe
cmp
jo
aaa
xlat
and
xor
cmp
adc
and
insb
cwtl
aaa
xor
and
mov
sbb
xor
cmp
insb
jns
je
mov
sub
repz
test
or
push
cmp
andb
lods
jb
mov
mov
imul
cmpsl
push
jecxz
add
mov
loop
mov
aaa
das
cmp
add
mov
sbb
jecxz
push
repnz
test
mov
and
loope
xor
sub
sub
iret
mov
cmp
mov
mov
sahf
dec
jb
lods
in
sub
test
mov
addr16
stos
out
mov
incb
mov
imul
repz
stc
mov
int
push
mov
cmp
loop
mov
loop
ja
ljmp
scas
inc
arpl
clc
jno
cmp
mov
add
add
push
ds
mov
ret
imul
into
adc
ja
shlb
fistpll
out
cmp
mov
stos
imul
pop
jg
xor
mov
clc
and
repnz
cwtl
scas
mov
fs
imul
xchg
imul
ds
sub
push
movsl
xor
fwait
sbb
cmp
fistps
xchg
jb
sub
mov
cmp
call
push
xchg
lcall
arpl
pop
aas
scas
aad
inc
pusha
dec
mov
gs
cmpsb
mov
pop
test
in
nop
mov
insb
in
cmp
repz
ja
mov
scas
fisttpll
mov
jg
icebp
test
sahf
lock
cwtl
je
xchg
out
enter
int3
clc
test
dec
add
stc
loop
mov
push
stos
push
sub
xor
cmp
popa
jne
push
jmp
test
out
xor
xchg
das
aaa
lock
xchg
enter
scas
sub
es
jnp
test
mov
or
push
popa
les
mov
jecxz
jae
sbbb
repnz
mov
jg
arpl
insl
in
cld
je
inc
out
in
mov
jl
loop
sahf
leave
push
add
push
out
jo
and
and
lcall
sti
cmp
ret
in
stc
sub
mov
sbb
push
push
push
out
stos
cmp
in
cmp
xor
xchg
jns
inc
vmovntps
in
ljmp
mov
in
mov
sub
insl
jo
jo
lods
ret
cmpb
mov
add
jecxz
in
test
sbb
arpl
jl
insb
cmpsl
xchg
mov
movsl
pop
out
pop
push
nop
and
hlt
sbb
cmp
nop
sbb
cmp
ljmp
sub
mov
inc
ds
xchg
inc
call
cmpsl
gs
mov
xor
cmp
out
and
mov
das
pop
in
sbb
movsl
imulb
lret
mov
push
ds
sub
test
je
out
int3
divl
ss
shrb
mov
dec
jecxz
leave
mov
es
xor
int
cmp
xchg
mov
or
bndstx
arpl
xor
ja
jp
mov
xchg
jns
jae
nop
sbb
icebp
jl
mov
xorb
jp
movsb
adc
xor
mov
pop
add
mov
addr16
mov
xor
je
ss
test
lock
inc
lock
ss
cld
xchg
xchg
ja
lcall
push
mov
arpl
xor
adc
jmp
mov
mov
hlt
sub
inc
in
xor
xor
and
repnz
out
sub
mov
inc
stc
mov
lods
push
cmp
mov
jl
cld
ds
shlb
fldcw
lods
xor
mov
ja
clc
stos
test
ud1
repz
stc
jl
and
lock
mov
mov
cmp
fsubrp
idivb
dec
inc
mov
jl
mov
lock
xor
loop
jmp
shll
and
adc
sub
and
push
add
xor
notb
jecxz
sub
pop
clc
lods
mov
sub
repnz
in
pusha
fidivrl
jb
out
aaa
stc
push
stos
xchg
mov
test
icebp
cld
mov
pop
push
movlps
mov
xchg
mov
fbstp
xor
imul
and
sub
mov
fildll
cmpsl
insb
addr16
insb
mov
decl
cmovs
jo
lcall
loope
les
test
mov
in
popa
sahf
jo
xor
sbb
stc
adc
xor
int
xorl
js
imulb
icebp
jb
test
pop
cmp
clc
and
push
test
sub
jecxz
jmp
sub
fdivl
clc
xlat
insl
xlat
and
pop
je
pop
xor
jns
out
mov
das
stos
sbb
or
es
leave
fidivrs
call
push
mov
or
xchg
je
inc
adc
hlt
push
xor
in
dec
nop
xor
jae
jo
xchg
hlt
cld
mov
cmp
fs
mov
stc
scas
test
lock
and
shlb
mov
push
mov
fscale
adcb
sub
lret
xchg
imul
pop
sub
sbbl
scas
movsl
in
inc
mov
push
adc
jne
fidivl
xchg
add
or
arpl
cmp
outsb
xchg
lret
jne
mov
jb
mov
fildll
clc
stos
jns
imul
jb
stos
cmp
lret
pop
jbe
iret
mov
hlt
mov
jge
mov
pop
test
xrelease
xor
loopne
xor
add
ja
jo
fld
subb
jmp
xor
mov
mov
sub
out
cmp
dec
cltd
stos
mov
mov
mov
arpl
repnz
cmp
nop
pop
mov
popf
stc
xor
dec
mov
cmpb
fcmovbe
mov
gs
repnz
icebp
rolb
stc
call
mov
and
sub
stc
mov
pop
mov
mov
divl
lds
xor
mov
lds
ds
cmp
pop
aaa
loop
xchg
cmp
int
popa
repnz
or
push
jbe
sbb
adc
cmpsl
loopne
or
xchg
and
cmp
adc
rclb
jo
cmp
lds
push
into
mov
xor
jmp
filds
loop
aaa
pusha
jne
mov
out
mov
pop
add
popa
cmp
rorb
mov
jo
mov
sbb
cmp
lds
sar
aas
xchg
xor
ret
xor
scas
add
adc
xor
pop
shll
sbb
in
arpl
stc
mov
hlt
xor
fucom
jg
cld
loopne
imul
adc
jmp
and
loop
aas
sub
add
ljmp
adc
and
mov
mov
pop
repz
jg
lahf
sub
mov
lret
js
push
jle
fldt
sbb
mov
out
idivl
test
mov
and
stc
and
pushf
aad
sar
xchg
xor
outsb
pop
or
pop
mov
idivl
clc
or
nop
lahf
mov
xor
jo
insb
xchg
sub
insl
adc
xor
mov
jecxz
mov
xchg
fs
addr16
push
je
stos
xchg
xlat
leave
xor
mov
xor
or
lods
sbb
xor
cmp
add
mov
xor
mov
out
mov
pop
mov
lock
mov
loopne
jns
shll
loop
roll
repnz
out
notb
adc
jl
test
stos
cmp
aam
jmp
popa
ret
imul
ja
sub
push
adc
ss
popa
lods
scas
je
xchg
leave
bound
xor
loop
xchg
pop
jbe
rclb
sarb
je
rcll
cld
test
jmp
adc
lock
jl
test
xchg
lods
ss
pop
sub
jecxz
inc
mov
cli
int
or
cld
and
mov
jl
jns
je
pushf
ja
cmp
jnp
push
push
lahf
xlat
xor
dec
lret
les
test
jb
cld
xor
hlt
and
out
scas
inc
or
inc
and
mov
and
cltd
loop
aas
aaa
jp
leave
mov
mov
sub
xor
dec
das
cli
push
test
cmp
addr16
xchg
mov
subb
sbb
xchg
aas
js
insl
sub
jns
popf
sub
and
mov
or
aas
stc
outsb
push
ja
icebp
ficompl
push
repz
adc
in
cmp
fbld
xor
out
xor
push
pusha
adc
sub
stos
mov
and
xchg
and
jp
fs
push
mov
rclb
mov
loop
mov
insl
mov
mov
js
popf
cmp
movsb
mov
std
out
xor
insl
mov
jmp
adc
cmp
xor
push
ja
incl
rolb
loope
xor
outsb
add
stos
push
inc
hlt
push
ds
cmc
inc
bound
cmpsl
test
sub
das
stos
xor
out
mov
shlb
pushf
divl
in
add
imul
push
dec
imull
sbb
mov
addr16
add
mov
fwait
stc
dec
mov
xor
and
ljmp
idivb
jns
push
sbb
and
sbb
jge
je
in
jo
jo
jg
sbb
jle
sahf
dec
test
insb
push
add
xchg
out
mov
icebp
push
pop
adc
mov
mov
incl
xor
mov
mov
out
sub
push
scas
cmp
repz
cld
test
xor
mov
jl
sahf
fwait
mov
arpl
in
out
mov
push
cmpsb
addr16
mov
xor
jb
xor
fs
cmp
insb
lcall
cmp
test
stos
ss
cmp
pop
call
dec
xor
aas
mov
rolb
je
mov
cmp
push
dec
out
cmp
jecxz
inc
mov
pop
jno
and
cld
popf
ret
xor
xrelease
cwtl
es
mov
push
and
xor
cmp
out
add
cli
out
pop
xor
in
out
aaa
imul
sub
jg
jns
shr
lods
cs
mov
stos
clc
movsl
pop
pop
call
sbb
xor
mov
mov
xor
imul
int
ss
adc
jecxz
or
bound
mov
sub
outsb
test
scas
imul
mov
push
js
or
stos
jne
jb
aaa
scas
mov
ss
push
mov
outsb
ss
stos
nop
pushl
cmp
xor
aaa
jg
cmp
mov
pop
mov
lods
mov
je
lods
cmpsl
mov
push
in
nop
jg
mov
sub
cmp
xchg
add
imul
fstps
xchg
inc
mov
push
sub
pushl
push
lock
pop
xchg
addr16
cmp
out
xchg
push
hlt
inc
jnp
stc
lds
push
repz
rorb
call
adc
or
push
bound
jmp
gs
stos
jecxz
adc
sbb
rorb
mov
mov
mov
cmp
mov
or
dec
stc
xchg
dec
es
lea
and
mov
mov
ds
mov
lock
aaa
sbb
sub
hlt
fbstp
mov
cmpsl
ljmp
clc
sahf
stc
in
insb
mov
xchg
mov
jne
mov
repz
mov
cmp
je
js
iret
mov
ret
adc
mov
loop
push
ret
pop
add
in
ljmp
lea
aas
stc
nop
movsl
push
mov
push
mov
ss
mov
imul
cmpsl
jl
js
lret
pushl
mov
mov
stos
ja
ljmp
out
mov
dec
addr16
stc
jl
jae
cmp
popa
das
mull
dec
xchg
or
xor
das
xchg
movsb
jns
cmp
scas
mov
cwtl
test
xchg
sbb
jb
cld
jl,pt
jp
cltd
jns
repnz
je
orb
imul
ds
adc
jmp
or
push
insl
jo
jge
cmp
xor
mov
jns
cli
jae
mov
dec
mov
xor
sub
xor
add
ja
mov
add
sbb
push
dec
and
movsl
dec
adc
xchg
sahf
in
cmp
fists
std
cmpsl
adc
shlb
scas
lods
xchg
sub
dec
pop
pushf
mov
mov
icebp
imul
xor
lods
bound
add
dec
imul
mov
mov
shlb
mov
dec
mov
in
test
jg,pt
enter
sar
adc
aas
push
repnz
test
cld
jge
inc
pop
ffree
lock
mov
and
xor
jnp
pop
push
fsubrs
inc
add
jo
xchg
je
xor
mov
xchg
aad
stc
shrb
xor
in
dec
lock
xlat
jo
adc
mov
aas
jg
jbe
jecxz
icebp
test
fdivs
stc
insl
pusha
xlat
mov
mov
idivb
jnp
test
int
and
mov
arpl
aaa
insb
inc
mov
push
mov
test
cmp
adc
xor
add
jno
inc
sub
xor
cld
xor
mov
adc
popa
stc
jp
xlat
stos
jo
out
test
out
mov
movsl
ja
imul
mov
test
jo
pop
subb
jb
das
adc
ret
sbb
imul
push
cmp
mov
std
sbb
mov
std
mov
and
out
mov
push
outsl
and
mov
sti
add
mov
loop
sub
mov
outsb
pop
xor
fmuls
out
cld
and
cmp
jl
aad
sbb
mov
xor
inc
fistpll
fs
cltd
bound
cmp
mov
ss
mov
ss
insl
roll
or
test
test
or
ss
test
adc
ss
sub
in
imul
outsl
and
push
pop
jl
cmp
fidivrl
and
test
mov
pop
idivb
dec
fidivl
or
lcall
xchg
cmpsb
mov
mov
xchg
push
data16
and
scas
imul
sbb
jae
mov
push
outsb
je
movsl
cmovge
divb
ja
js
mov
jg
pusha
push
xor
cmp
mov
xor
and
idivl
jg
jp
jo
rcrb
out
mov
pop
aas
mov
mov
jns
cli
mov
hlt
arpl
cmp
sbb
fisubrs
sub
scas
cli
imul
arpl
pop
inc
or
bound
negb
std
clc
mov
hlt
mov
sti
pop
sub
xor
cmp
mov
test
ljmp
push
sbb
stos
mov
xor
stos
in
push
loopne
lods
cmp
clc
repnz
push
ret
xorb
imul
loopne
arpl
nop
jb
in
imul
add
cmp
jg
mov
pop
sbb
out
arpl
push
fwait
xor
push
test
add
mov
repnz
imul
cld
scas
pop
mov
push
mov
stos
jne
imul
adc
inc
mov
xor
pop
pushf
cmp
xor
daa
push
lods
jb
cmp
jne
and
aaa
dec
mov
jecxz
mov
notb
test
mov
xchg
dec
loop
jg
push
fucomp
inc
lock
popa
sar
fistl
stos
stc
xor
mov
sub
sub
mov
push
mov
sbb
outsb
ret
and
push
mov
divb
jg
xlat
loopne
out
mov
cmp
inc
cwtl
sbb
cmpl
lea
and
mov
lock
fldenv
enter
xchg
cld
enter
dec
mov
fidivl
aas
insb
scas
arpl
mov
pop
sbb
sbb
jecxz
loop
stos
cmp
cmp
mov
in
scas
pop
lea
xor
mov
push
loop
jp
xchg
jmp
fwait
div
dec
das
jo
out
jno
sbb
mov
cmp
iret
sub
mov
outsb
mov
jb
mov
and
mov
sub
mov
arpl
xor
je
movsb
jecxz
testl
test
in
rorb
pushf
cmp
mov
js
jp
pop
xchg
pushf
inc
negl
mov
jno
insl
idiv
stos
stos
add
cld
hlt
ljmp
jae
aad
xor
mov
idivb
mov
jno
xor
lea
jnp
decb
sub
jg
in
loopne
stc
cmp
xor
addb
stos
clc
js
mov
loopne
ja
icebp
cwtl
imul
xor
ficompl
js
bnd
cli
inc
imul
inc
mov
in
arpl
idivl
jl
test
decl
fsubrl
popa
lret
jecxz
daa
mov
fsubr
pushl
jno
fs
adc
jo
sbb
ret
popf
je,pn
sti
cmp
mov
and
ds
fwait
xchg
sti
mov
das
mov
popa
sub
aad
in
adc
mov
push
pop
xor
fadds
jns
mov
test
sub
mov
aas
inc
stos
stc
test
cwtl
push
cltd
inc
repz
clc
and
mov
inc
cld
repnz
hlt
mov
mov
mov
loopne
stos
cmp
popa
sub
je
and
xor
jb
push
cmpsl
mov
push
mov
cmpsb
sub
mov
cmp
ficoml
imul
divl
cltd
xor
hlt
sahf
insl
mov
and
stc
js
xor
sarb
loopne
repz
dec
fidivs
mov
cmp
fwait
mov
pop
sub
or
dec
je
stos
mov
shrl
repnz
dec
inc
jg
push
sub
cmp
jae
push
mov
jle
mov
idivl
sahf
push
xor
repz
pop
sbb
sahf
push
and
mov
mov
cmp
dec
xchg
sbb
out
cmp
test
push
fs
lahf
aaa
repz
ret
push
divl
outsb
sbb
js
push
mov
lock
cs
jecxz
or
nop
lahf
cmp
test
ss
add
scas
cli
std
in
inc
jmp
xor
sub
dec
sbb
stc
in
mov
cmp
mov
mov
cmp
xor
stos
aas
imull
sarb
pop
shll
insb
xor
sub
idivl
test
mov
cmp
repnz
int
pusha
scas
sbb
lea
fcomps
inc
xchg
sbb
mov
mov
ret
test
jno
jae
lret
imul
insb
pop
fsubs
test
lods
and
jp
mov
bound
lods
icebp
andl
outsl
jp
rolb
adc
aad
add
aam
mov
mov
xor
dec
jb
and
cld
mov
stc
and
cwtl
cmp
test
scas
mov
es
xchg
and
or
shrb
mov
repnz
clc
jge
push
xchg
arpl
lcall
push
testb
cmpsb
jbe
cmp
punpckldq
scas
insb
push
and
neg
cmpsl
mov
fsubrp
es
js
adcl
mov
das
dec
clc
sbb
pop
jbe
int3
jp
xchg
in
testl
push
loop
js
sub
jno
lahf
lods
add
imul
mov
and
adc
adc
repnz
mov
lods
mov
xor
imull
pop
nop
adc
push
jg
ds
ret
fdivrs
stos
js
cmp
test
out
jno
js
mov
mov
pop
aam
cwtl
jecxz
and
mov
sbb
jo
and
movsb
jge
pop
mov
loopne
mov
xor
pop
fsts
mov
mov
lcall
push
jle
gs
mov
js
cwtl
add
mov
mov
arpl
sub
jnp
aam
jns
fbstp
mov
mov
cwtl
fbstp
inc
push
jno
jb
push
and
ds
cmp
jb
adc
rorl
sub
jbe
jp
mov
sub
test
xchg
jmp
push
xchg
push
xor
jmp
mov
lahf
mov
mov
stc
imul
test
popa
mov
jge
mov
cmp
fwait
mov
out
adc
jmp
pop
in
hlt
cmp
fnstenv
test
mov
cmp
repz
sub
inc
icebp
fs
and
out
imul
adc
mov
inc
scas
divl
sub
lods
sub
jle
xchg
out
cmp
clc
pop
jnp
jg
sub
and
inc
scas
mov
mov
and
iret
dec
or
jne
fdivp
loop
out
popf
or
or
cmp
mov
cmp
or
lcall
fwait
xor
cld
and
xchg
aam
outsb
mov
mov
in
mov
jb
lods
or
loop
stos
jae
loop
xchg
sub
in
inc
insb
mov
mov
cmp
fisubrs
adcl
pop
ljmp
cmp
mov
xchg
leave
sahf
add
pop
out
into
add
fdivs
inc
outsl
test
into
sub
mov
test
movsb
mov
je
jg
and
jo
push
sarb
insb
sub
mov
repnz
cmp
mov
addb
ret
js
dec
arpl
push
lods
cmpl
in
mov
pop
lods
shll
xor
in
mov
adc
sub
es
lret
js
cmp
clc
jmp
icebp
repnz
sbb
repz
mov
mov
xor
ffree
inc
js
push
cwtl
or
lea
sbb
imul
mov
mov
jns
xor
sarl
jb
mov
lds
mov
mov
idiv
out
scas
repz
lcall
aaa
orb
je
and
ja
mov
push
sahf
cmpxchg
pop
call
mov
arpl
je
nop
imul
and
gs
push
iret
aaa
mov
mov
xor
add
ja
ficompl
xor
mov
mov
addr16
out
jp
mov
arpl
inc
insl
subb
mov
imul
mov
test
xor
stos
mov
jb
and
jb
pop
lods
xchg
icebp
adc
imull
pop
imul
aaa
or
ja
and
insb
orl
add
inc
ja
xchg
int
or
mov
sar
mov
pop
push
mov
cmp
mov
sub
cmp
add
push
clc
jge
mov
inc
stos
sbb
sarb
rorl
arpl
mov
scas
sub
lds
bound
jp
repnz
xchg
icebp
lea
aas
push
mov
orl
push
sub
push
jo
jg
gs
aas
insl
xchg
cmpsb
xor
lcall
mov
fbstp
cmpl
jp
mov
icebp
leave
out
test
aas
fdivs
hlt
arpl
mull
xor
cltd
mov
jl
mov
aas
sub
mov
jnp
jmp
je
sub
mov
xor
lods
test
jne
dec
mov
xchg
push
pop
mov
jns
xor
jno
sub
mov
imul
jo
mov
stc
fucomip
or
test
jp
xor
std
mov
rcr
cs
cmp
test
inc
inc
aaa
cmp
das
mov
fs
fwait
test
push
ficoml
inc
mov
mov
test
hlt
mov
push
pop
jmp
and
adc
sub
mov
pop
iret
cltd
xchg
es
mov
cmp
mov
lods
out
xor
jl
cmp
mov
mov
cmp
sub
or
jns
imul
cltd
jl
mov
aaa
loop
scas
jge
sbb
test
jg
js
rcll
aas
mov
mov
lods
cltd
mov
repnz
lds
cmpl
aas
jg
or
enter
jb
insb
dec
cltd
rorb
lock
test
stc
dec
jnp
hlt
stos
jg
push
push
jb
jns
mov
aas
adc
bswap
cmp
cmp
repnz
test
inc
shrb
ss
out
sub
mov
xor
stc
in
pushl
jmp
mulps
sti
cmpsb
xchg
mov
jns
mov
lahf
pop
adc
jg
xchg
into
sbb
lods
and
aas
mov
lret
in
clc
pop
sub
push
hlt
shlb
push
das
movsl
in
cmp
sbb
pop
mov
sbbl
ja
jnp
sub
pusha
mov
jg
cmc
ss
lods
das
ss
and
popa
mov
lods
xchg
lcall
mov
lods
xor
popa
xor
sbb
cmp
jae
pop
pop
push
cmp
sub
mov
test
adc
ds
xor
inc
fwait
cmp
mov
sbb
pop
mov
fmul
and
outsl
in
idivb
jecxz
ljmp
xor
or
in
and
fwait
das
cmp
cld
negb
divb
pop
mov
sarl
mov
mov
inc
mov
cmp
cmp
and
or
cltd
mov
aam
arpl
cmp
repz
imul
push
or
xlat
insl
fwait
jnp
mov
sub
mov
xchg
stc
aas
mov
mov
push
test
sbb
push
jle
fidivrl
xor
and
xchg
xor
cmp
mov
xor
icebp
rorb
mov
cmp
add
cmp
dec
mov
mov
jo
jnp
rcrl
mov
push
std
xchg
lahf
shr
jecxz
repz
sub
fdivs
pop
xor
sub
cs
icebp
mov
cmp
and
push
xor
es
shlb
ljmp
jb
mov
sarb
jns
dec
sbb
stos
mov
test
fdivr
mov
cmp
and
sahf
hlt
mov
aas
js
xchg
adc
mov
lea
outsl
mov
xor
xor
scas
jns
testl
js
movsl
cmp
je
mov
stos
imul
aaa
cmp
ds
xor
jg
sbb
jecxz
mov
stc
sub
lds
sbb
out
stos
cli
or
mov
in
jne
insb
mulb
xor
stos
jb
insl
pop
jl
addr16
cmp
out
mov
and
call
ret
clc
jo
repz
mov
stc
outsb
add
adc
mov
dec
xor
test
repz
push
sbb
add
imul
lea
into
sbb
xor
jae
jb
sahf
jns
nop
pusha
xor
negl
out
aas
lods
bound
lret
jo
fmuls
and
divl
sbb
mov
and
test
jmp
pushl
arpl
aas
hlt
inc
lock
add
jp,pn
nop
imul
test
loopne
cmp
cli
js
jl
cwtl
daa
idivl
jns
out
jo
push
std
or
not
push
movsl
sahf
push
testb
jno
mov
cli
addr16
xor
jns
jg
cs
xor
mov
test
idivl
mov
insb
aas
jge
inc
mov
cld
test
pop
pop
leave
or
out
ja
mov
mov
mov
mov
sbb
je
xor
cld
in
insb
popf
jecxz
lods
mov
mov
insl
inc
mov
ja
push
stc
mov
out
scas
andb
jo
jae
xlat
lret
dec
xchg
xor
cli
imul
repz
xchg
jl
mov
ss
xchg
jecxz
xor
lods
out
lcall
push
enter
xor
pop
mov
and
mov
jmp
xor
sbb
popf
jmp
inc
stos
je
and
imul
add
stc
clc
repnz
sbb
push
mov
xchg
lock
mov
hlt
jecxz
sbb
repz
or
ss
inc
outsl
jg
mov
sub
push
movsl
jae
mov
cld
jecxz
test
ja
xchg
xor
jbe
int3
icebp
jp
push
adc
pusha
imul
scas
mov
push
popa
lock
xor
and
popa
sti
repnz
mov
mov
xchg
inc
jg
testl
je
cmp
loop
jns
cmp
jno
loopne
jg
stos
mov
hlt
mov
loopne
and
jno
jp
jl
sbb
iret
xchg
cmp
loop
xor
mov
adc
jl
nop
ss
test
xbegin
add
iret
cmp
mov
outsb
cmp
jno
mov
bound
sub
and
gs
cli
in
jb
adc
mov
cwtl
push
mov
cwtl
jne
ret
mov
js
adc
fildl
out
aaa
imul
mov
sub
aas
pusha
jg
mov
xor
arpl
jp,pt
push
jl
jecxz
pop
push
add
adc
cmp
mov
and
xor
cld
mov
ds
cmp
mov
bound
addr16
aaa
jbe
mov
hlt
add
stos
inc
out
nop
stos
mov
jp
mov
mov
xor
mov
inc
and
sub
js
inc
add
cld
sbb
ret
inc
ds
js
xchg
mov
sbb
cli
xor
adc
mov
sarl
jp
jle
pop
lods
pop
loopne
stc
clc
mov
mov
sahf
insb
mov
mov
mov
aaa
xor
ja
mov
sub
lods
cmp
jp
pop
mov
jno
sbb
out
pushf
repnz
cmp
cmp
jg
xor
cli
jb
mov
sub
aam
lock
adc
fnstcw
or
dec
hlt
xor
mov
icebp
mov
das
mov
in
mov
in
hlt
ss
inc
mov
lods
stos
arpl
shrl
cltd
andb
mov
xor
push
cmp
jns
mov
pop
leave
push
idivb
lods
sbb
xchg
mov
aaa
and
dec
xchg
stos
popf
adc
icebp
cwtl
test
out
repnz
jl
aaa
mov
jno
adc
std
adc
fdivrl
cmpsb
cld
and
add
sbb
mov
es
mov
mov
sbb
mov
enter
fwait
xor
and
adc
cwtl
dec
das
add
inc
loopne
ja
arpl
cmpsl
mov
std
dec
pusha
cmc
jo
ret
rcrb
xor
mov
jp
jns
or
idivb
clc
ret
jno
push
daa
jo
stc
scas
stos
jl
jns
mov
and
and
cld
js
sarl
insb
cmp
testb
arpl
jg
dec
pop
push
mov
mov
jno
xchg
test
sub
mov
pusha
imulb
sbb
out
jno
xchg
movsb
inc
pop
pop
lock
cmp
addr16
repnz
clc
mov
lock
mov
cltd
mov
cwtl
jl
jmp
scas
and
out
dec
stos
cmp
mov
cmpsb
jg
clc
mov
mov
mov
cs
rep
out
cmp
out
mov
mov
std
mov
xor
jno
cmp
icebp
pop
jl
mov
lea
mov
mov
loopne
jb
jp
std
sub
xor
out
cmp
lret
arpl
xchg
in
push
test
fs
xchg
mov
stc
sub
inc
shrb
mov
mov
stos
mov
jge
ja
jae
mov
shlb
jecxz
pop
adc
addr16
sti
or
dec
bound
rclb
jno
int3
inc
mov
adcb
cmp
pop
ja
xchg
mov
xor
add
mov
mov
adc
xchg
cmp
rclb
mov
outsb
mov
mov
outsb
push
ds
arpl
add
push
dec
pop
sub
cmp
mov
out
lods
jmp
mov
js
scas
popa
lods
mov
mov
xchg
orl
aas
jno
lea
bound
movl
negl
sahf
cmp
mov
pop
jg
mov
and
mov
int
mov
cmp
stc
test
mov
push
loopne
icebp
jl
mov
jae
and
hlt
jns
dec
xchg
xor
stos
jl
rcrl
scas
mov
loop
mov
cmp
cmp
jb
adc
xor
fiaddl
mov
inc
mov
mov
ja
xor
lods
addr16
xor
cmp
imul
mov
sub
xor
cmp
lods
add
popa
lock
cli
out
add
in
popa
mov
pop
sub
repnz
pushl
push
scas
test
pop
loope
mov
mov
mov
insl
jl
inc
lock
insb
movsb
pop
dec
jp
popa
jg
mov
dec
sahf
clc
mov
ss
inc
mov
cmp
in
hlt
xchg
mov
and
mov
jno
int
mov
sub
xor
mov
hlt
pushl
jno
stos
lods
cmp
cltd
jae
jo
mov
xor
js
lock
xor
mov
jne
js
test
lods
mov
shrb
cmp
push
imulb
cmp
mov
xorl
sub
mov
icebp
push
in
mov
mov
test
cmp
cli
mov
mov
and
notb
cli
aaa
sub
adc
dec
jo
shrl
jbe
popf
mov
mov
jge
cs
mov
xor
pop
test
repnz
push
insl
imul
ja
popa
icebp
inc
push
cmpsb
je
mov
cmp
push
js
push
jp
push
lds
cmp
insb
sbb
pop
inc
mov
add
mov
mov
xor
lods
mov
jno
mov
xchg
testl
negb
push
aas
dec
outsb
and
mov
xchg
js
pushf
hlt
mov
xorl
and
xor
cmp
inc
sbb
jecxz
sbb
cmpsl
ja
testb
mov
rcr
in
mov
pop
pop
jge
outsb
shrl
je
sub
or
aaa
ljmp
inc
mov
and
ss
mov
repnz
or
scas
cmp
repz
mov
idivb
sbb
js
cs
mov
repnz
imul
mov
stos
js
mov
ss
loopne
sub
mov
out
mov
test
fcompl
xchg
jp
test
cmp
xor
mov
rcr
push
lods
mov
jecxz
popf
in
out
pop
repz
mov
and
fsubr
test
sbb
ret
mov
jl
xchg
mov
push
xchg
aaa
repnz
dec
test
ja
stos
mov
nop
sub
outsb
cld
cli
jl
test
icebp
out
push
jb
xchg
inc
and
cwtl
mov
imul
cmp
ss
xlat
mov
mov
push
das
jno
jecxz
add
cli
mov
mov
jg
loopne
xor
mov
aaa
xor
mov
clc
push
xchg
mov
sbb
push
popa
out
cwtl
mov
sub
stos
out
xor
ret
jb
push
pusha
jl
jae
fidivs
mov
cmp
sub
daa
scas
imul
in
test
mov
test
sub
mov
ficoms
mov
lods
mov
jno
sti
scas
xor
in
sub
fwait
lcall
pop
and
outsb
das
sub
inc
ss
std
sub
and
mov
mov
lods
stc
test
jb
sub
mov
mov
and
mov
aaa
push
push
gs
sub
fwait
pop
add
ds
out
mov
mov
js
jl
sub
cmpsl
js
cld
pop
mov
jns,pt
addr16
xor
je
fldl
adc
and
mov
adc
mov
mov
push
das
imul
test
cmp
cmp
data16
repz
mov
js
mov
mov
jns
loopne
je
jp
lods
out
ficomps
sbb
xor
push
ds
repz
jecxz
and
mov
jno
or
movsl
jmp
cmp
jae
jg
push
sbb
xor
sbb
in
test
nop
add
repz
sub
cmp
sbb
test
lods
stos
cmp
mov
or
aas
repnz
addr16
imul
decb
scas
pop
bound
repz
mov
mov
jb
popa
xor
mov
sub
sbb
inc
out
aaa
imul
insb
sbb
sub
insl
shlb
jb
and
xor
cmp
int3
sub
gs
jae
popa
inc
cmc
loope
cmp
pusha
xorb
push
sahf
ja
push
push
cmpsb
mov
xor
gs
mov
mov
sub
stos
adc
jae
imul
xor
sbb
insb
push
loopne
mov
ja
cmp
cld
or
mov
fisubrs
mov
jmp
stos
ret
scas
js
aam
icebp
jl
in
in
mov
mov
loope
ret
lods
or
mov
mov
icebp
rcrl
movsl
jns
or
and
cmp
xlat
arpl
xchg
insl
adc
xor
push
xor
xor
mov
dec
sbb
insl
loopne
ljmp
stos
adc
stos
imul
les
mov
xchg
bound
inc
outsb
shl
loop
inc
xchg
cmp
test
icebp
test
jg
repz
mov
movsl
lock
jp
jle
cld
mov
adcb
popa
cli
push
sbb
fwait
mov
ja
mov
jle
cli
lcall
mov
push
sub
imul
sahf
adc
cmp
mov
and
jno
or
shrb
push
xchg
xchg
nop
cmp
push
sahf
jb
je
hlt
jns
and
and
and
andb
or
ss
sub
push
push
xchg
inc
jne
sbb
jo
add
cmp
mov
divb
lods
and
shlb
cld
sbbl
call
mov
imul
inc
xor
lcall
imul
push
jecxz
clc
mov
lock
fwait
xchg
mov
adc
xchg
xor
imul
and
clc
mov
mov
movsl
test
ss
lods
lock
cmpl
hlt
das
mov
in
stos
xor
shll
lock
test
jno
push
dec
xchg
xor
clc
cwtl
sub
lea
idivl
repnz
in
fwait
push
jge
pop
popa
dec
sub
cld
loopne
repnz
addr16
ja,pt
xchg
pop
inc
xor
cld
hlt
mov
jo
sarb
sub
jecxz
dec
not
movsb
sbb
sbb
out
popa
cmc
ss
xor
xchg
jmp
jl
mov
ds
push
mov
into
das
mov
jecxz
mov
shrb
pop
push
aaa
inc
addr16
pop
sbb
arpl
sbb
ja
sbb
imul
xchg
in
xchg
cmp
test
sub
mov
cmp
mov
cld
imul
push
cwtl
or
cmp
loop
repz
push
aas
jnp
xor
imul
mov
mov
test
jb
mov
pop
mov
jo
mov
push
stc
sub
mov
mov
daa
imul
mov
out
sub
loop
ja
icebp
jno
mov
pop
mov
mov
sub
mov
sahf
mov
mov
mov
fisubs
jmp
stos
imul
mov
jle
and
mov
cwtl
jl
int
sahf
lahf
stos
mov
inc
jo
jae
scas
jae
cltd
and
gs
mov
jg
mov
lock
aaa
inc
test
in
mov
xchg
popa
cld
jae
loop
adc
in
mov
cmp
and
popf
addr16
xchg
mov
stc
ret
sub
and
aas
mov
shlb
in
mov
outsl
loope
mov
clc
stos
mov
test
xchg
mulb
sub
divb
mov
cltd
cmpsl
jns
adc
imul
cmp
repz
hlt
fsubs
lods
cld
icebp
and
js
stc
test
repnz
lods
fstpl
test
out
pop
loope
aaa
ss
adc
push
ss
cmpsl
in
loop
mov
and
stc
cli
ss
push
xchg
jno
mov
notl
daa
bound
cmpsl
hlt
jp
sbb
fs
loop
scas
pop
stos
mov
mov
add
repnz
out
mov
mov
and
imul
sar
cmpsl
pop
pop
inc
xchg
adc
push
mov
cmp
mov
pop
mov
and
addr16
lods
jl
adc
xor
sar
jo
je
adc
cmp
fdivrp
out
fnsave
daa
mov
movsb
stc
push
cmp
nop
loopne
mov
mov
mov
cmp
ja
outsl
aas
dec
mov
push
sub
dec
add
js
pop
cli
jne
xor
enter
push
xor
popf
lcall
and
and
xchg
jp
scas
xor
fucompp
popa
or
test
xor
push
lods
mov
dec
mov
cmp
call
or
lcall
test
pop
jns
aad
aad
in
jb
shrb
and
arpl
ljmp
mov
jl
jae
ja
xor
inc
stos
push
popa
xor
or
mov
push
pop
xchg
jns
daa
add
or
adc
imul
out
xchg
mov
ds
gs
cli
add
mov
xor
push
inc
xchg
xor
cmp
jmp
repnz
cmp
mov
decl
xchg
jg
jo
xor
xor
popf
lea
mulb
cli
sub
sbbb
jp
jnp
outsl
mov
scas
loopne
cmp
jno
pop
jg
data16
mov
mov
scas
mov
and
push
aas
xor
lret
das
sub
mov
pop
jecxz
dec
je
jmp
mov
repz
xorl
outsb
enter
mov
cld
mov
jl
lods
jae
sti
test
popa
mov
stos
add
mov
push
popa
jecxz
xor
ss
out
test
sub
ds
sbb
hlt
xor
jg
xchg
jge
js
jno
cmp
ss
mov
cmp
xor
inc
pcmpeqb
testb
mov
test
mov
xchg
movsl
jp
popf
mov
mov
test
hlt
ds
testl
fucomp
mov
clc
push
arpl
cmp
mov
sbb
jmp
jmp
xchg
jae
jecxz
nop
outsb
jle
lock
test
lods
stos
xchg
dec
inc
fsubr
mov
clc
lcall
mov
mov
stos
jno
bt
clc
mov
fs
jg
dec
mov
repz
test
repnz
test
cmc
mov
push
test
mov
xor
xchg
adc
stc
add
mov
mov
mov
lahf
and
cmp
fwait
std
push
imul
shll
add
jp
popl
xor
jl
mov
mov
mov
js
arpl
mov
jae
cmp
mov
ficoml
mov
aaa
loop
cmp
js
mov
xchg
push
in
jbe
sbb
js
mov
and
outsb
cmp
in
ja
mov
stos
sub
xchg
add
xor
inc
mov
mov
repz
in
notl
cli
cld
xor
mov
cmp
ja
lock
mov
mov
stos
imul
cld
mov
aad
mov
shlb
xor
ret
pop
ret
movsb
scas
leave
pop
leave
xchg
aas
ss
lahf
test
aaa
xchg
xchg
cld
add
cmp
arpl
lods
call
sub
adc
jmp
andb
and
pusha
test
test
cmp
leave
sbb
and
and
das
idivl
jns
hlt
xor
shlb
push
push
jns
mov
sub
clc
test
cmp
das
adcb
mov
cmp
shll
stc
fisttpll
cmp
inc
scas
fs
imul
mov
mov
addr16
hlt
or
out
cmp
mov
scas
in
mov
ror
jns
mov
inc
jb
and
cmp
mov
sbb
popf
mov
sub
mov
mov
xor
orb
aas
ds
sbb
scas
sub
insb
in
jno
aaa
fwait
pop
cmp
mov
xchg
jl
push
popaw
sub
and
mov
mov
lock
mov
cmc
mov
imul
enter
and
ja
cld
jno
push
cmp
xor
xchg
xor
out
sub
loopne
imul
mov
jns
mov
mov
imul
dec
clc
cmpb
lds
adc
jno
cmp
sub
lock
cmpsl
xor
dec
aas
cmp
push
xchg
jbe
xchg
iret
mov
mov
cmp
mov
pop
mov
and
mov
imul
xor
ja
sbb
sbb
adcl
movsl
lcall
icebp
nop
mov
xor
addr16
dec
divb
mov
stc
in
jns
and
jno
stos
cltd
test
gs
cmp
sub
pop
push
lahf
inc
flds
push
xor
hlt
cld
xchg
mov
jecxz
or
icebp
xor
push
xchg
xchg
inc
and
inc
jg
mov
jo
sbb
loop
xor
test
jae
mov
fsubrp
imul
pop
stos
push
jge
mov
push
stos
mov
popf
loop
cmp
cwtl
cs
mov
mov
mov
js
mov
lods
xchg
xor
mov
mov
mov
mov
ss
je
and
scas
faddp
push
mov
insb
cmp
mov
xlat
inc
movsl
push
nop
mov
repz
idivb
push
icebp
icebp
sub
or
mov
sbb
cld
adc
and
xchg
xor
push
xor
clc
mov
stc
mov
in
mov
inc
xchg
push
ret
repnz
loopne
hlt
jl
mov
or
es
js
scas
test
mov
insb
jb
outsb
xor
das
repz
push
mov
push
xor
add
xchg
js
scas
xor
dec
lock
jle
jl
mov
ja
jp
xchg
adc
cmp
jae
xchg
imul
sub
add
je
and
fwait
ljmp
xor
inc
loop
xor
aad
add
push
dec
je
cmp
out
mov
cld
xchg
push
mov
and
mov
jno
nop
shlb
repnz
adc
cli
cmp
lcall
cli
jmp
fists
out
jg
das
cmp
sbb
cld
sub
mov
xor
mov
lods
adc
clc
jl
repz
mov
add
test
das
jae
add
jo
mov
cwtl
pop
xchg
shll
jg
lret
mov
mov
mov
jg
clc
loop
mov
cld
jecxz
push
fsubrp
in
lret
arpl
jmp
xchg
jne
sahf
and
inc
popf
sub
mov
mov
and
jmp
ss
dec
pop
lock
hlt
fdivs
lock
mov
ss
pop
jo
and
jp
in
mov
ja
cmp
add
mov
mov
push
mov
das
jl
pop
mov
pop
ja
mov
test
mov
push
fcompl
aas
mov
jb
repz
stos
add
mov
xchg
add
mov
push
mov
fdiv
sbb
push
lods
call
iret
iret
xor
cmpsl
nop
ja
push
ss
leave
or
les
aaa
imul
aaa
mov
mov
cltd
mov
test
xchg
mov
pop
sahf
clc
aaa
xor
cmp
jg
xchg
mov
dec
lock
mov
testb
mov
repnz
xchg
cmp
or
js
leave
xor
xor
and
dec
cs
pop
insb
pushf
mov
je
scas
jns
repnz
mov
nop
inc
rclb
mov
test
repz
push
mov
push
in
mov
xchg
loop
cld
mov
gs
mov
popa
stc
repnz
xor
ret
and
cld
js
aaa
mov
mov
repnz
clc
push
adc
aas
mov
jno
cltd
mov
xchg
mov
push
mov
call
xor
xor
jno
popf
xchg
mov
cmp
mov
sbb
scas
jmp
lods
cmp
jb
jl
popa
outsb
push
cld
scas
repnz
add
jp
das
je
les
mov
shl
xchg
in
jno,pn
lods
push
jmp
xor
js
inc
push
xor
xor
cli
mov
cmpsl
push
xor
stos
cs
mov
cmp
in
vcvtss2si
popa
movsb
add
xor
repnz
scas
ds
addr16
jecxz
and
insb
mov
stc
imul
gs
xor
mov
loope
jecxz
xchg
pop
xchg
cmp
imul
cmp
cmp
gs
je
inc
stc
stc
stos
addr16
imul
cmp
mov
test
mov
idivl
push
pusha
inc
cmp
jmp
push
cwtl
loope
clc
jmp
enter
or
out
mov
or
ss
outsb
into
hlt
xchg
cmp
loop
sbb
scas
mov
and
cli
repz
or
mov
out
dec
inc
add
mov
lcall
outsl
lock
add
xor
mov
or
xchg
or
or
mov
add
imull
mov
mov
mov
inc
pusha
xor
divb
js
nop
div
mov
cs
and
cmp
xor
push
mov
pop
sbb
and
lock
push
cmp
pushf
insb
imul
mov
test
pushl
and
scas
or
int3
stc
nop
lds
jns
mov
js
test
lock
fsubrs
lods
mov
mov
mov
insb
cmp
les
loope
xor
test
push
loopne
insb
lock
mov
arpl
xor
jp
xor
stos
movsl
imul
mov
mov
xchg
mov
shl
sub
scas
add
mov
fwait
out
sahf
imul
arpl
jecxz
add
jno
out
jns
fdivr
xor
mov
jecxz
add
stos
out
jns,pt
loope
mov
mov
mov
sbb
jecxz
mov
mov
fisubl
cmp
ss
sub
clc
imul
mov
mov
imul
mov
jae
jno
mov
dec
insl
mov
and
mov
push
dec
outsl
stos
push
jl
mov
bnd
test
sub
stc
hlt
cli
ret
mov
scas
aaa
lahf
pop
arpl
push
mov
stos
in
cltd
dec
scas
or
mov
jg
int
aaa
xor
xor
loop
testb
or
adc
in
shlb
lods
xchg
divl
cld
fdivrl
mov
mov
mov
xchg
cmp
jl
test
and
jmp
fs
and
mov
push
xchg
jb
xor
sub
mov
je
arpl
jl
jg,pn
push
mov
mov
cmp
sub
loop
xchg
insb
push
sbb
or
mov
ljmp
push
mov
mov
cli
mov
test
pop
mov
jae
cltd
mov
test
pop
call
xor
imul
popa
sbb
aas
mov
stos
pop
pushf
aaa
cmpsl
jns
arpl
cmp
jne
jns
dec
adc
imul
mov
cld
push
mov
jno
out
cld
test
call
jg
bnd
push
mov
xor
cmp
fldl
push
test
inc
mov
test
sub
bound
ja
ret
addb
clc
inc
sbb
mov
hlt
popf
jg
mov
xor
icebp
mulb
aaa
pop
jp
test
std
cmp
les
test
jg
mov
cmp
imul
ds
sbb
repz
clc
cmp
loopne
xor
sub
mov
cmp
mov
and
arpl
mov
xor
mov
xor
inc
sbb
stc
bound
ss
out
lock
xor
scas
aad
sub
je
push
hlt
leave
cmp
test
and
arpl
mov
cld
mov
imul
mov
stos
out
idivb
repnz
mov
inc
hlt
scas
push
cmp
mov
je
es
cld
mov
aaa
inc
pushl
jno
in
pop
mov
lock
insb
loop
arpl
repnz
inc
insb
xor
in
cli
mov
cld
mov
jecxz
ja
inc
pop
bound
push
add
jg
ss
xchg
test
loop
jb
incb
lock
out
pop
clc
add
mov
insb
xchg
jo
imul
test
mov
adc
pop
push
pop
jno
jmp
hlt
insb
sub
cmp
lret
push
subb
aas
mov
sbb
pop
xchg
and
jp
adc
cmp
cmp
outsl
stc
jns
jb
fmuls
xor
outsb
hlt
mov
sbb
lods
jg
mov
cli
xchg
nop
aad
sub
enter
les
aaa
mov
pop
loopne
clc
xor
mov
daa
pop
add
popf
jns
xorb
xchg
bound
ss
sbb
pop
cmp
adc
dec
mov
xor
mov
mov
mov
popa
and
imul
adc
repz
xchg
sahf
les
fsubl
insl
and
mov
mov
mov
cld
pushf
js
insb
mov
je
into
stos
ds
stc
lods
jno
bound
loop
mov
imul
aas
sbb
sahf
ja
clc
test
jb,pn
ret
ss
xor
icebp
mov
sbb
clc
mov
test
or
mov
xchg
dec
cmp
aas
cld
in
cmp
rcrb
lods
stos
lock
ds
xchg
xchg
or
repz
test
or
stos
sahf
icebp
mov
repz
xor
mov
sbb
dec
and
aaa
mov
inc
xchg
int3
inc
ret
push
lods
mov
push
pop
sbb
xor
cmp
jae
imul
sbb
mov
push
mov
ja
imul
and
and
clc
shrb
imul
xor
rcrl
icebp
mov
add
test
xor
xor
loope
sahf
repnz
cmp
mov
addr16
mov
pop
js
mov
loope
mov
ja
and
aas
imul
mov
mov
inc
out
out
lods
lock
xor
hlt
in
jp
sti
dec
shrb
stc
mov
mulb
jo
pop
mov
push
imul
jmp
ss
mov
cmp
mov
cmp
mov
mov
sbb
popa
div
mov
ret
mov
push
inc
pushf
arpl
or
cs
hlt
test
ret
mov
mov
fisubrl
mov
hlt
xor
mov
jnp
aaa
inc
jl
pushf
or
mov
out
pop
lock
xchg
sbb
and
sub
ds
das
and
jns
xor
sub
mov
call
clc
shll
hlt
stc
add
inc
sbbb
jmp
mov
mov
mov
mov
cli
jmp
mov
scas
jns
jg
scas
jb
mov
cmp
ja
add
pushf
outsb
xor
stos
arpl
jno
jno
mov
jge
inc
push
add
xchg
adc
in
sub
xchg
outsb
sarb
jns
imull
shr
cmp
jg
insl
pop
scas
sub
ds
xchg
lods
jo
pop
call
cwtl
jmp
jno
xor
js
and
xor
cld
mov
cli
mov
cmp
das
fstpl
movsb
xor
cmp
cltd
sarb
xchg
mov
xchg
cmp
je
or
xor
mov
fsubrl
xchg
mov
lds
faddl
jns
xor
gs
cmp
push
aas
mov
and
out
pop
jnp
jnp
pusha
jg
aaa
js
outsl
ja
stc
std
cwtl
clc
mov
icebp
clc
cmp
lock
jns
test
mov
adc
mov
mov
test
cmc
repnz
mov
mov
mov
clc
sub
lret
mov
lock
mov
movsb
jbe
mov
stos
mov
push
xor
jmp
jns
adc
sbb
stos
dec
and
mov
cmp
repnz
movsl
pop
jmp
cld
arpl
cmp
sub
test
stos
xchg
jg
incb
aas
mov
dec
shr
cmp
mov
clc
add
js
imul
mov
mov
jo
shl
cmp
js
xchg
fadds
stc
and
movsl
rorb
xor
push
inc
nop
popf
fs
clc
xchg
ficompl
aaa
jg
jo,pt
adc
pop
test
ret
cmp
xchg
xor
jno
das
adc
jmp
cld
sub
and
cmp
ret
test
cltd
xchg
shll
aaa
ja
sub
mov
inc
cs
in
mov
scas
jo
addr16
repnz
mov
ds
rdmsr
mov
test
sarl
test
ja
int
repz
lock
add
jno
mov
jae
sub
inc
arpl
cli
out
xor
sub
stc
mov
idivb
push
aaa
cmp
jb
insl
fcomps
mov
out
stc
mov
mov
mov
rcrb
jl
cs
gs
repz
dec
inc
cmp
repnz
jl
call
dec
xor
mov
jle
aas
loop
idivb
mov
repz
pop
fcomps
mov
xor
imul
and
in
mov
xor
mov
das
xor
push
out
fdiv
icebp
xor
mov
hlt
negl
shlb
pop
xor
mov
lods
js
pop
xchg
insb
cmp
sbb
and
inc
mov
xor
pop
mov
mov
and
ljmp
sbb
data16
jnp
mov
inc
cli
push
cmp
loop
jecxz
or
je
jl
lock
mov
cs
pop
mov
pop
test
mov
cmp
push
pop
stos
pop
test
mov
jmp
mov
in
or
in
push
aas
repnz
and
mov
push
cwtl
xor
aaa
scas
shll
push
xor
pop
hlt
fdiv
push
pop
jp
test
cmp
adc
mov
sbb
bound
repz
mov
mov
xor
call
mov
push
jle
mov
ja
pusha
jo
sub
mov
mov
jmp
test
xor
in
lock
xor
push
insl
aam
ds
rcrb
jp
push
xor
jns
ja
xor
and
fadds
sub
mov
std
adc
xor
das
jno
cs
hlt
aas
pop
cmp
andl
das
je
pop
pop
aad
xchg
test
cmp
daa
cld
js
pusha
mov
out
bound
into
xchg
mov
mov
and
and
cld
clc
rclb
in
adcl
cmp
jb
out
mov
and
push
sbb
int3
adc
xchg
into
adc
in
out
xchg
lods
loop
cli
mov
js
sub
pusha
mov
xlat
rolb
ja
rcl
mov
test
cmp
loop
jae
daa
out
insb
scas
and
imul
nop
mov
jmp
mov
out
jo
and
xlat
cltd
in
push
cmp
jg
add
mov
cmc
hlt
cmpsb
fdivr
adc
daa
aaa
mov
inc
xchg
mov
divl
adc
je
xchg
shlb
stos
mov
mov
mov
es
cmp
cwtl
scas
js
jl
insl
jns
repz
dec
test
push
mov
aaa
add
outsb
mov
mov
stos
jno
fcoml
lock
cmp
push
jge
fsts
jmp
or
xor
sub
mov
mov
jb
inc
clc
outsl
ss
mov
rep
mov
add
scas
hlt
es
cmp
ja
in
mov
inc
mov
arpl
push
adc
push
jle
jno,pt
xchg
rolb
cs
loope
mov
xor
inc
push
mov
test
repz
aad
xchg
jl
icebp
pop
lods
lock
bound
loopne
mov
lods
cmp
repz
inc
ss
imul
mov
insb
js
or
mov
jl
mov
loopne
sub
xor
jg
xor
sub
xor
mov
jg
lods
adc
mov
sbb
imul
mov
ss
bnd
inc
and
jb
cli
jae
or
movsl
jae
jl
in
mov
repnz
aas
ret
push
xor
inc
das
cmpsl
and
jge
stc
fwait
mov
stc
scas
mov
mov
clc
in
lods
out
pop
lcall
cmp
insb
ja
pop
push
lock
stc
lods
lahf
sub
and
scas
insb
fsubrl
jl
aad
stos
test
imul
scas
mov
mov
push
pop
inc
sbb
jg
sbb
mov
sbb
mov
popf
xor
fcomps
mov
clc
jno
and
insl
clc
cmp
fildll
in
arpl
cmp
jo
in
mov
jb
ret
repz
push
shrl
add
mov
fwait
out
stos
mov
repz
sbb
push
mov
jl
jne
mov
idiv
jg
sbb
in
mov
repz
sahf
adc
or
ja
cmp
scas
cmpsl
sbb
repnz
xor
jo
int3
addr16
inc
insl
xor
push
sarb
cmp
insl
cmpsl
aas
icebp
cmp
ret
cmpl
and
insl
int3
stos
mov
clc
fbstp
in
aas
test
out
mov
repnz
aaa
es
pop
mov
rclb
mov
fstl
xor
jb
push
rorb
outsl
mov
stos
jp
scas
xchg
repz
test
repnz
xchg
mov
stos
gs
adc
xchg
mov
arpl
xchg
mov
stos
idiv
or
cmp
jecxz
ja
pop
xor
stos
mov
mov
jo
and
sti
jno
sbb
cld
and
je
push
stc
mov
add
loopne
jmp
ja
das
lcall
jl
cmp
xchg
out
icebp
lods
mov
jb
repnz
addr16
idivb
mov
lock
sbb
movsl
repz
and
je
mov
in
pop
nop
push
lock
repnz
mov
cmp
div
sub
mov
mov
jns
push
lret
insl
sahf
test
or
cmp
xchg
add
xor
notl
lea
cld
test
sub
xchg
mov
clc
scas
jecxz
xchg
mov
mov
xor
idivl
pop
xor
sahf
jns
repnz
jo
sbb
jno
mov
mov
aaa
mov
inc
mov
popa
and
jp
sbb
add
int3
lock
mov
lods
inc
jno
repnz
arpl
sbb
cltd
lock
inc
fcompp
mov
jl
inc
sbb
leave
out
xor
dec
jmp
mov
push
repz
mov
mov
and
jecxz
inc
mov
adc
iret
shrb
jb
fucom
fdivrs
aas
sub
jnp
loopne
clc
jns
mov
adcl
push
outsb
arpl
sub
sbb
mov
mov
jl
lock
andb
and
mov
sub
jp
lods
clc
mov
mov
lock
push
addr16
cld
repnz
scas
lock
cmp
mov
cwtl
xchg
test
je
cmp
mov
mov
bound
push
movl
jns
mov
shlb
push
mov
fxch
test
sub
pop
enter
orl
and
xor
imul
mov
in
test
mov
push
scas
mov
jecxz
inc
cmp
mov
in
pop
loopne
xor
jecxz
cmp
in
div
jmp
clc
js
scas
repz
xor
cli
jl
xchg
push
lods
pop
cmp
ret
addr16
jp
ljmp
in
ja
cmp
arpl
subl
jl
push
cmp
push
cmpsl
scas
scas
imul
insb
push
imul
mov
out
mov
cli
adc
cld
mov
sbb
lea
arpl
xchg
outsl
dec
out
aas
mov
jo
mov
jecxz
inc
mov
mov
mov
dec
repz
xchg
lods
mov
mov
in
out
imul
cmp
out
cld
lods
cmpb
mov
and
mov
xor
mov
ret
test
inc
hlt
mov
mov
xor
mov
ret
mov
aaa
gs
stos
mov
xor
repnz
fcoms
mov
jb
repnz
adc
mov
push
insb
pop
jno
cmp
rol
mov
cmpsl
sarl
rcrb
addl
push
or
mov
stc
outsb
mov
shl
pop
popf
aam
sbb
popf
jns
stos
mov
sbb
sub
mov
lods
shr
push
jo
cld
subl
popf
mov
mov
subb
inc
ds
test
test
xchg
sub
sub
test
cmp
jp
ss
xor
insb
cld
daa
test
cmpsb
xchg
das
lock
stos
and
divb
ss
xor
mov
scas
mov
insl
mov
daa
in
aas
jmp
test
negb
add
and
call
addr16
aas
mov
ja
mov
cli
mov
pop
out
cmp
cmp
cmp
imul
lock
ja
clc
hlt
jae
scas
cmp
loope
and
xor
and
xchg
aas
xchg
add
lahf
sbb
xchg
stc
ss
icebp
popa
rclb
hlt
push
out
bound
out
cli
rolb
mov
ljmp
and
push
and
cmp
pop
mov
icebp
add
js
ss
mov
jo
push
jb
hlt
iret
dec
adc
cmp
icebp
ss
adc
dec
inc
fdivrs
mov
sub
jl
pop
cmp
movsl
je
xor
jns
test
jb
idiv
sub
mov
mov
daa
daa
bnd
jl
test
adcb
ret
std
xor
cmp
sub
adc
rcl
push
ror
jb
inc
daa
xor
mov
lods
idivl
xor
adc
fadd
ja
jb
push
add
ret
clc
cwtl
lock
loop
insb
mov
and
aad
test
mov
mov
fwait
jno
aaa
push
jge
push
ljmp
aas
outsb
imul
mov
cmp
rorb
call
popa
jp
or
pop
cli
js
mov
dec
pop
xchg
jae
int3
test
cmp
inc
lret
xchg
xor
idiv
repnz
xor
xor
jno
sahf
xor
jae
ja
jl
das
test
jo
test
xchg
test
cmp
push
ror
in
adc
sbb
mov
mov
xor
jg
popa
cli
pop
adc
jge
lds
daa
jns
jae
loop
ja
cmp
pusha
imul
jmp
xor
add
pop
xor
add
push
lods
stos
pop
and
sbb
addr16
mov
lahf
movsl
xor
jmp
arpl
lret
insb
xor
out
add
mulb
leave
je
div
fcoms
pop
jo
imul
pop
in
gs
sbbb
arpl
cs
stc
xchg
into
sbb
mov
cmp
cwtl
or
int
mov
mov
repnz
mov
cld
divb
sbb
in
rorb
repnz
jo
mov
out
pop
dec
mov
test
jecxz
mov
mov
cmp
push
scas
jp
cmp
add
loop
std
mov
mov
mov
jb
stos
mov
xchg
inc
xor
dec
call
and
jmp
cld
js
bound
dec
sub
cmp
xchg
xor
aaa
adc
shr
bound
mov
cmc
mov
pop
dec
mov
test
test
cli
lret
adc
xor
ficompl
scas
mov
and
idivb
aas
xchg
cld
rcrb
in
ja
cld
sub
clc
sub
mov
mov
add
imul
cmp
lods
jge
or
cli
ja
pop
cmp
inc
cltd
sub
ret
arpl
out
push
scas
jae
out
insb
js
push
xchg
xor
inc
cmc
inc
pop
cmp
stos
insb
lret
fcomps
jg
fcoml
cmp
xchg
adc
mov
fsubl
sbb
lods
divb
ja
adc
mov
mov
cs
hlt
adc
inc
stos
repz
ret
jp
data16
dec
pop
and
js
dec
cmp
lea
push
jb
and
xor
xor
imul
gs
inc
divl
inc
pop
bound
addr16
sub
push
cltd
mov
repz
mov
dec
out
jp,pt
jns
inc
lock
icebp
repnz
mov
mov
cmp
mov
xchg
testl
jae
pop
gs
stc
mov
neg
xor
push
xchg
jae
test
mov
jmp
test
stc
insl
bound
xor
mov
mov
insb
sub
mov
fs
cli
mov
mov
in
aas
add
xchg
mov
dec
jmp
out
dec
cmp
sbb
jo
pop
pushf
jecxz
jmp
push
and
mov
sarb
mov
lret
aas
mov
and
mov
mov
sub
pop
inc
and
out
jg
ds
icebp
or
mov
int3
and
and
jp
cli
cmp
and
sub
mov
jl
push
add
sub
nop
clc
mov
xchg
mov
jl
cld
mull
jae
ja
jmp
or
sub
mov
mov
jo
pop
mov
lods
xor
mov
test
test
sbb
and
jmp
xor
sub
js
out
repnz
mov
mov
jns
fwait
sbb
or
xor
pop
jns
adc
imul
jmp
jecxz
mov
gs
ss
fisubs
js
sbb
pushl
jnp
or
aaa
stos
imul
fwait
sbb
mov
outsl
mov
mov
stc
sub
out
out
pop
rorb
xor
inc
scas
data16
mov
aas
or
cmp
jp
mov
and
cwtl
repz
xor
mov
push
dec
xchg
pop
enter
mov
jo
and
stc
pop
xchg
push
dec
jae
mov
mov
insb
rcrb
icebp
cmp
dec
popa
fwait
and
cli
imul
ja
sub
mov
xor
xor
notb
cmp
xor
jl
test
in
mov
jecxz
clc
repz
aas
lock
xchg
loopne
mov
in
jno
mov
sbb
jo
lds
inc
xor
push
add
cs
add
mov
jne
xchg
jl
cmp
test
repz
lea
xchg
jl
push
cmp
loop
xchg
xchg
dec
cmpb
cmp
lods
mov
sub
hlt
and
mov
icebp
mov
xor
xchg
cmp
jg
andb
scas
int3
mov
sbb
mov
push
daa
bound
popa
cmp
inc
test
loop
xor
inc
jae
push
sub
enter
ds
add
sbb
mov
in
test
mov
jae
xor
test
pop
das
mov
pushf
pop
mov
or
arpl
cmp
hlt
sahf
adc
pop
lds
xor
cli
jae
stos
aas
mov
loop
mov
xchg
iret
fistps
cmp
jb
rcrb
adc
in
cmp
popa
cmp
shll
sbb
loope
testl
fistpll
mov
in
inc
cmp
cmp
clc
enter
cltd
jecxz
push
dec
addr16
insl
push
js
jb
cmpb
xor
mov
and
jl
push
mov
insb
aad
test
mov
stos
or
repnz
std
and
jmp
mov
pusha
xor
mov
insb
pop
leave
adc
cmp
cltd
cmp
mov
mov
ret
pushf
in
mov
inc
mov
jl
test
and
jg
movsb
xlat
rcrl
mov
push
mov
cmp
aaa
icebp
idivl
loopne
clc
pop
or
jg
loopne
das
divb
stos
lods
xchg
xor
mov
imul
push
idivl
js
popl
cs
lea
jecxz
clc
jbe
test
xor
xor
sub
jp
sub
outsl
cmp
adc
mov
les
mov
ret
adc
in
sbb
fimull
xor
mov
mov
jbe
mov
imul
mov
xor
cmpsb
mov
mov
mov
sbb
push
mov
test
aaa
jg
add
stos
adc
imul
outsb
xor
mov
inc
loop
insb
nop
test
jl
lods
jns
rcrb
insb
push
push
jg
mov
mov
clc
mov
add
addr16
in
repz
mov
add
js
dec
insb
xchg
xchg
outsl
lret
sub
in
mov
mov
mov
jns
pusha
cwtl
cmp
xor
mov
mov
test
mov
sbb
dec
ret
xchg
mov
xchg
dec
aam
mov
mov
mov
jl
sub
jb
enter
clc
inc
mov
mov
add
mov
push
in
aas
popa
add
mov
or
jp
js
pop
mov
and
cmp
popf
arpl
call
imul
stos
scas
xor
fdivrs
mov
mov
arpl
lods
imul
fwait
divb
repz
les
jp
push
stc
pop
inc
shlb
shll
xchg
xor
push
xor
xor
jo
rcrb
sub
scas
mov
inc
repnz
pop
pop
pop
bound
cmp
repz
or
dec
notl
pop
inc
sub
addr16
and
mov
bound
lock
sub
mov
sub
js
cli
stos
arpl
mov
jo
scas
jg
sub
loop
stos
lcall
pop
jp
pop
inc
shll
cmp
sahf
imul
idivb
jmp
cld
inc
lahf
lock
stos
test
js
inc
mov
lods
cmp
aaa
cltd
imul
jp
mov
cmp
out
mov
xchg
adc
jmp
lock
stos
jns
mov
mov
xchg
mov
clc
enter
mov
jns
jno
mov
sbb
mov
icebp
scas
enter
stc
imul
lock
in
jg
inc
mov
mov
nop
xor
imul
or
jl
addr16
repz
pop
in
xor
test
and
xchg
inc
bound
gs
lcall
mov
gs
ret
stos
aas
or
mov
jecxz
test
pop
adc
jb
cmp
in
stc
or
lea
mov
adc
mov
jecxz
jl
loopne
cli
icebp
jmp
test
aas
mov
in
mov
jmp
jno
jne
fsubrl
mov
stos
stos
lock
out
cli
mulb
xor
add
fs
movsl
mov
cwtl
ljmp
xchg
adc
lods
lods
mov
sub
mov
mov
test
mov
xor
mov
mov
xchg
imul
sbb
push
adc
test
cltd
jno
mov
gs
lea
mov
mov
xor
pop
cmp
mov
mov
sbb
imul
cltd
sbb
jne
cmp
divl
dec
push
sub
addr16
scas
sahf
jno
loop
scas
mov
mul
fnstenv
push
in
jl
div
ds
and
arpl
cmp
insb
sub
mov
push
scas
arpl
sbb
and
jns
mov
mov
mov
scas
mov
or
mov
and
jns
neg
adc
mov
push
imul
test
icebp
mov
mov
mov
jns
xor
sub
xchg
ja,pt
mov
inc
f2xm1
repz
std
mov
mov
mov
xor
pop
out
mov
xchg
fsubl
mov
jo
cmp
bnd
push
loop
pop
dec
scas
movsb
out
mov
jp
hlt
std
push
jl
clc
ret
lret
mov
mov
test
cmpsb
icebp
xor
lds
nop
xor
repz
jg
xor
push
mov
lods
jb
outsl
cld
sub
cmp
mov
adc
enter
xor
lods
ss
lcall
and
cli
insb
ss
add
mov
add
add
xchg
xchg
loope
pushf
sub
test
aas
push
mov
js
pop
mov
pusha
jno
xor
jo
inc
dec
cmp
add
jne
lods
and
clc
divl
push
test
fldt
jmp
scas
mov
bound
mov
mov
push
jge
int
cmp
popa
cmp
cmp
js
mov
cmpsl
xchg
insb
push
jmp
mov
imul
sbb
int
sbb
fwait
loop
mov
dec
fiadds
pop
mov
sbb
out
jle
add
sbb
popa
mov
jl
sub
ss
aaa
sbb
push
icebp
jo
nop
mov
inc
or
and
je
out
push
or
lea
js
push
jb
sahf
sbbb
repnz
test
xor
sub
sub
scas
repnz
pushf
mov
out
test
mov
loop
mov
cmpsl
hlt
cmp
xchg
out
imull
cld
push
jne
dec
add
add
and
ja
movsb
lods
add
popa
sti
popf
inc
cli
and
out
insb
clc
lea
adc
mov
add
hlt
xchg
je
ret
mov
outsb
mov
and
bound
jg
sub
imul
dec
sbb
stc
pop
and
gs
pop
mov
hlt
enter
ljmp
mov
test
and
cmp
clc
mov
test
xchg
movzbl
sbb
cmp
jp
mov
lock
clc
sub
xchg
aaa
jle
xchg
pop
or
lret
cmpsl
mov
push
push
inc
pop
xchg
test
hlt
stos
jg
add
data16
add
mov
sub
faddl
stos
push
pop
sbb
mov
mov
sbb
aaa
test
mov
pop
pusha
scas
xor
idivb
aas
repz
pusha
xchg
jecxz
les
call
cli
cmp
xor
insb
jno
aad
pop
jge
test
and
outsb
ret
dec
mov
stos
enter
ret
sub
scas
rolb
call
and
test
stos
stc
cmp
add
xor
mov
ja
inc
mov
jp,pn
mov
addr16
mov
mov
xor
jg
pop
clc
xor
jnp
and
lock
into
sbb
xor
sarb
or
lods
cmp
pop
mov
xor
lahf
xchg
scas
mov
cmpsl
das
xor
ss
mov
decl
adc
dec
cmp
je
pop
mov
mov
ds
cwtl
cld
mov
mov
shl
mov
mov
cmp
xchg
test
ret
jg
addr16
jmp
out
mov
das
and
test
mov
icebp
mov
loop
idivb
negl
imul
aaa
aas
popf
push
ret
sub
shlb
clc
lds
mov
mov
lcall
decl
lcall
xor
pop
and
cltd
mov
cmp
push
and
ss
dec
pop
jb
or
mov
insb
mov
mov
sub
insl
fs
jl
stc
inc
mov
loopne
cld
mov
jecxz
xchg
movsl
jl
mov
jg
xor
cmp
push
add
and
lcall
into
orb
imul
std
mov
arpl
lret
sub
rclb
in
mov
div
imul
add
test
jno
mov
push
popa
jmp
jo
mov
daa
pop
lds
lods
test
jecxz
sbb
bound
bound
lahf
jg
popa
or
jno
dec
sarb
fidivs
dec
add
repnz
lock
mov
xor
lods
pop
jmp
mov
push
cmp
mov
cld
scas
cmp
test
mov
mov
addr16
mov
mov
pop
rcrb
xor
inc
and
mov
jle
pop
clc
mov
xor
xor
js
je
pop
lods
xchg
jg
dec
jp
frstor
push
sbb
icebp
pusha
mov
mov
xor
mov
movsb
gs
push
jo
scas
in
inc
mov
scas
aaa
gs
mov
adc
xchg
sbb
stos
or
xor
jmp
mov
or
cltd
daa
scas
xchg
out
xor
loop
mov
cld
cmp
mov
fs
jo
adc
mov
mov
outsb
das
cli
dec
pusha
xor
xor
pop
sub
xchg
push
enter
mov
outsb
in
cli
jmp
cs
jno
mov
mov
xor
jno
mov
cmp
pop
sbb
mov
mov
mov
cli
in
repz
mov
xchg
scas
shr
xor
stos
cld
bound
mov
xchg
subl
xor
mov
mov
xchg
pop
hlt
jb
lahf
sub
sbb
cwtl
xor
mov
mov
pop
lods
cwtl
cld
xchg
pop
andb
testb
inc
repnz
mov
cs
and
test
cmp
mov
adc
jle
sbb
dec
out
hlt
imul
scas
inc
ja
cmp
jae
push
bound
mov
arpl
jl
loop
jp
lret
sub
addr16
lods
js
out
jmp
lock
mov
adc
mov
ja
cmc
jo
ss
mov
out
shr
cs
sub
mov
ss
push
xor
mov
push
mov
mov
mov
mov
push
imul
mov
and
jo
lods
aaa
notl
int
and
push
test
xor
lret
jl
loop
add
sarb
and
xchg
mov
mov
fwait
outsb
icebp
mov
mov
mov
lock
mov
insb
and
and
mov
aas
xor
icebp
push
mov
imul
inc
ret
push
daa
call
mov
jecxz
gs
aas
loop
test
mov
cli
movsl
insl
jge
sbb
mov
pop
lret
mov
mov
sub
cmpsl
leave
add
mov
hlt
mov
mov
shl
xor
mov
clc
mov
test
jp
nop
popf
ret
test
stc
adc
loop
mov
mov
jp
cmp
in
sub
test
aaa
sub
inc
in
and
sbbb
jp
jo
push
scas
jb
popf
mov
repz
in
jmp
sub
adc
xor
mov
repnz
adc
int
cwtl
cmp
popf
mov
jg
aas
mov
sub
sbb
ja
jp
pusha
scas
enter
sub
add
idivl
add
cmp
std
pop
xlat
repz
sbb
pop
xchg
mov
jp
gs
mov
aaa
ja
imul
jecxz,pt
push
jns
mov
inc
xchg
push
cmp
mov
mov
inc
test
repnz
xor
push
jmp
mov
sub
rclb
xor
or
pushf
cmp
mov
aam
decl
cmp
in
dec
cmp
ret
inc
int3
pop
aas
mov
mov
mov
dec
jne
enter
pushf
mov
or
stos
sub
mov
pop
loope
ja
push
xor
stos
mov
mov
aaa
imul
test
jns
js
repnz
cmp
sar
aaa
xor
push
popa
and
das
xchg
imul
mov
cmp
test
sbb
std
xchg
ret
mov
shrl
scas
adc
push
nop
mov
xor
adc
adc
mov
inc
mov
out
mov
mov
ds
test
sti
addr16
scas
test
push
mov
out
push
loopne
mov
mov
mov
scas
jl
and
mov
sahf
pop
scas
movsl
iret
push
arpl
ss
xlat
mov
and
add
insb
cmp
fdivl
and
pusha
and
out
stos
out
in
jb
jg
and
jae
jno
xor
jno
mull
cmp
mov
ss
imul
hlt
sbb
jl
ret
dec
jmp
in
imul
xor
data16
mov
and
cli
cmp
mov
mov
in
jae
cli
shlb
test
mov
cld
sub
xor
movsl
stos
mov
ret
mov
push
mov
inc
add
cmp
icebp
inc
sbb
xor
loopne
repz
lock
adc
out
inc
jo
loopne
inc
push
mov
loop
jo
repz
lock
jno
lock
xor
pop
test
cmp
ja
hlt
mov
fdivr
nop
pop
mov
mov
iret
insl
cmp
lcall
loop
mov
inc
push
cli
jp
xchg
xchg
push
adc
sbb
sub
call
test
cmp
icebp
clc
jl
cmp
cltd
mov
sub
idivl
mov
push
jecxz
out
jo
shlb
mov
test
sub
mov
clc
xor
jae
andl
out
add
cmp
adc
mov
stos
decb
pop
cmpsb
js
sub
mov
mov
cmp
dec
cs
aaa
cmp
jb
sub
lods
mov
sbb
popf
jp
mov
pop
scas
xchg
mov
adc
pop
arpl
aaa
mov
nop
ss
push
adc
and
add
mov
mov
pop
lock
adc
sbbl
jge
mov
pop
out
or
test
fcmovu
lcall
lock
repz
mov
aaa
clc
cmp
sbb
ret
mov
ss
adc
xor
inc
addps
sbb
icebp
and
xchg
jecxz
jns
stc
jmp
or
icebp
push
leave
mov
mov
jmp
mov
add
fdivs
inc
fs
test
mov
cmp
lods
arpl
mov
out
cmc
iret
popa
aaa
out
aas
fs
insb
ret
int
xor
pop
or
mov
sub
ds
mov
cmp
mov
sub
testl
imul
lret
js
sub
ss
xor
jp
mov
mov
stc
lods
or
pop
xchg
cmp
jl
mov
imul
decl
pop
sbb
xor
mov
repnz
test
cmp
and
aas
cmp
sub
jo
push
mov
das
out
mov
sbb
lods
xor
add
jae
jl
scas
push
sub
loop
stc
addb
jae
and
xorl
dec
mov
hlt
ss
js
and
inc
sub
and
bound
jecxz
in
bound
roll
cmp
sarl
push
std
das
aaa
cs
jmp
mov
mov
xor
push
call
mov
mov
push
sbb
test
cmp
iret
sti
sbbl
cwtl
inc
xor
sub
outsb
mov
hlt
subb
js
jl
pushf
jecxz
stos
jg
cmpsl
jne
ja
jp
xchg
mov
cmp
xor
mov
mov
mov
jb
mov
mov
cld
sbbb
cld
fstps
push
iret
fsts
sbb
out
mov
mov
adc
repnz
cmp
jnp
dec
loop
xor
inc
inc
arpl
lods
ds
add
insb
cmp
mov
mov
mov
dec
mov
jb
fsubrl
add
sub
lret
mov
fs
fwait
sarl
clc
xor
push
push
dec
mov
jnp
xor
divl
mov
rorb
mov
sahf
mov
out
mov
cmp
imul
nop
sub
insl
mov
lods
mov
jb
push
xchg
mov
ja
mov
jno
repz
scas
cmp
and
mov
jg
shrl
sbb
pop
mov
adcb
daa
mov
mov
mov
jb
ds
lret
or
mov
fadds
xchg
sub
mov
shlb
cltd
xor
testb
nop
pushf
mov
jno
jae
jae,pt
mov
ret
test
test
cmp
hlt
jo
scas
cmp
cmp
js
ljmp
clc
mov
es
jge
out
jecxz
mov
icebp
lods
lods
xlat
mov
fsubrs
lahf
in
jp
push
xor
jb
mov
jecxz
xchg
test
ss
mov
push
mov
arpl
add
pop
inc
cmpsl
cs
mov
jp
addr16
test
xor
or
sub
mov
sti
cmpl
xor
sub
adc
clc
in
clc
adc
int3
js
pop
jo
mov
add
sub
loop
cmpsl
test
sbb
jmp
nop
jb
cmp
in
xor
es
and
xor
int
xchg
mov
movsb
mov
enter
fldt
pushf
lock
sub
pop
sub
shl
lods
push
jns
or
cmp
clc
imul
out
jae
inc
xor
bound
mov
mov
inc
or
test
mov
ss
divb
mov
cmpsl
ja
repnz
cs
sub
pop
mov
or
sub
xor
nop
jmp
mov
sbb
push
stos
loop
adc
fdivs
mov
fs
mov
lret
mov
mov
fwait
scas
jmp
andl
mov
mov
xor
mov
ret
cmpsl
in
xlat
mov
or
or
sti
lods
hlt
cwtl
mov
xor
mov
jp
pushl
jecxz
scas
cwtl
lods
repnz
jmp
dec
das
xor
in
mov
out
jmp
xchg
fwait
cs
fisttps
mov
hlt
sbb
test
es
pop
fldcw
push
jg
cld
nop
into
cmp
mov
sbb
and
stc
mov
bnd
xor
xchg
add
bound
mov
add
mov
out
lret
xor
jne
mov
mov
xchg
xor
imul
sbb
jge
push
insl
jmp
xchg
scas
mov
imul
mov
lds
je
adc
jno
xchg
pop
mov
mov
sub
das
mov
arpl
adc
mov
mov
cmp
addr16
ja
mov
je
mov
adc
mov
sub
mov
lahf
sub
movsb
gs
mov
je
scas
cli
push
and
js
mov
cmp
lock
pop
cld
hlt
mov
adc
cwtl
jns
mov
ja
imul
dec
mov
xor
pop
ds
cld
movsb
lods
mov
xor
lock
pop
pop
js
imul
jl
mov
mov
sbb
mov
xor
shlb
insb
loop
mov
mov
and
mov
mov
and
scas
lret
ljmp
cmp
js
push
mov
fistpll
clc
xchg
mov
sarb
ja
pop
xchg
repz
repnz
xchg
bound
out
loop
and
xor
aam
inc
push
fldl
dec
xchg
jp
or
repz
or
xor
clc
pop
test
gs
jno
or
xor
popa
mov
iret
pushf
xchg
mov
push
lods
xor
jg
fldl
cmp
stos
lods
mov
jge
test
jge
mov
imul
and
imul
mov
dec
and
filds
testb
dec
fldlg2
jbe
pop
repz
jae
xor
sbb
mov
cwtl
sub
pop
mov
xor
mov
jecxz
cli
sub
pop
mov
mov
movsb
jg,pn
lods
test
arpl
fsts
shlb
test
jecxz
jno
cmpsl
jae
mov
push
cmp
lods
jl
stos
je
loop
inc
ss
repnz
mov
test
out
daa
rclb
idiv
stos
stc
ds
in
mov
mov
cld
xor
mov
push
imul
mov
aas
jb
cli
mov
mov
stos
mov
stos
pusha
fdivl
in
mov
xor
jg
mov
in
testb
test
outsl
mul
mov
xor
insb
imul
push
jg
repz
ret
cmp
jns
imulb
sbb
aaa
in
sti
js
push
out
shrb
adc
cmpsl
jecxz
aas
lods
jg
xorb
in
xchg
icebp
sub
or
dec
loop
hlt
daa
loop
adc
xor
add
test
das
mov
jge
out
repz
and
nop
aam
ss
lock
insl
das
js
mov
aas
mov
push
das
mov
mov
lods
jp
hlt
ja
loope
cmp
jns
cmp
mov
stos
clc
aaa
fldlg2
jmp
enter
xchg
cmp
fisubrl
mov
xor
arpl
outsb
or
inc
jecxz
insl
pusha
jl
mov
dec
je
repnz
xchg
mov
outsl
lock
pop
in
stos
dec
movl
push
and
mov
add
adc
mov
cld
testl
loop
sub
repnz
push
sub
ja
jp
cmp
and
pop
xor
xor
push
mov
imul
test
cmpsl
arpl
imul
notb
push
scas
mov
push
subb
jmp
cli
hlt
ficompl
lods
jo
mov
out
cld
and
hlt
stos
jg
icebp
lock
and
push
push
dec
cwtl
js
divb
lds
icebp
and
adc
jo
out
mov
xor
out
xchg
cmpl
and
pop
mov
push
cmp
fdivrs
lods
out
mov
cmp
jae
push
mov
and
cmp
and
adc
mov
dec
jo
stos
jne
xchg
add
aas
lret
sbb
pop
pushf
cmp
mov
xor
jb
pavgw
jno
lods
imul
mov
and
imul
mov
push
outsl
pop
repz
pusha
rcrb
pop
pop
mov
addb
iret
sub
mov
mov
inc
leave
imul
push
mov
jo
arpl
sbbb
repz
imulb
mov
movsb
mov
mov
cmp
rorl
sub
int3
cwtl
lahf
jae
adc
fwait
push
test
clc
push
pusha
cmp
and
jmp
jecxz
shll
icebp
ds
jg
mov
xor
jo
sub
outsb
sbb
ds
cmp
lcall
sub
jno
sbb
loop
mov
lret
lods
addr16
add
xor
add
mov
mov
aaa
clc
call
xchg
jns
fcmovbe
cld
inc
mov
mov
icebp
aas
push
sarl
call
mov
push
jns
push
lock
xlat
repz
adc
push
mov
mov
out
jae
jns
sbb
sub
jnp
inc
loopne
pop
jecxz
xor
inc
lods
mov
enter
shlb
jmp
push
xchg
test
out
jo
jmp
shlb
out
cmp
sbb
test
repnz
xlat
or
lea
jg
ja
hlt
aad
cmp
in
mov
xor
mov
clc
pop
in
repnz
nop
cmp
aaa
sar
mov
ss
mov
hlt
loopne
mov
mov
mov
mov
cmp
adc
cmc
add
mov
lods
shrl
mov
aad
into
loopne
mov
ja
adc
jns
and
mov
addr16
mov
add
sbb
add
repz
popl
jecxz
push
pop
inc
insl
nop
jo
idivl
adc
cmp
pop
adc
xor
cmp
cmp
ds
add
inc
jle
shll
mov
cmp
add
imul
inc
xor
aas
js
xchg
repnz
cld
dec
sub
bound
dec
sbb
in
sarb
cmp
and
xchg
rcr
mov
rolb
mov
fiadds
mov
sub
mov
xor
pop
sbb
stos
js
cmp
add
push
loop
sub
push
popa
ffree
jo
stos
xor
test
sub
les
scas
cmpsl
mov
daa
mov
ljmp
cld
js
insb
mov
push
mov
test
cli
sar
mov
aam
push
fdivp
mov
jl
ss
roll
mov
xor
lret
and
mov
test
aaa
mov
stos
or
jae
xor
jo
test
test
mov
mov
cmp
mov
sbb
addr16
lods
imul
andb
test
in
xor
jns
iret
mov
leave
sti
add
pop
outsb
inc
ss
or
lock
xor
sub
cmp
in
jo
push
mov
mov
pop
popa
into
icebp
adc
push
push
and
in
sub
repnz
jns
xchg
scas
pop
jo
cmp
jp
xor
movsl
sti
mov
gs
sbb
mov
scas
stc
je
ss
repz
and
aas
imul
xor
ljmp
clc
test
xchg
mov
and
fldcw
cmp
idivl
pushf
pop
jae
test
jmp
cli
mov
and
mov
shlb
mov
pop
jp
sbb
lea
lods
divb
sahf
das
out
mov
jl
scas
sub
mov
ja
sbb
cmp
mov
cmp
xchg
scas
bound
jo
mov
jp
xchg
mov
cmp
pop
mov
jmp
mov
movsl
scas
cmp
mov
sar
and
push
xor
jb
cmpsb
sbb
sbb
xchg
inc
insb
aas
inc
sbb
push
popa
stos
cmp
adc
fadds
test
lea
mov
sbb
xchg
push
mov
push
push
ret
mov
stc
mov
jns
xchg
sub
out
scas
xchg
out
lods
xor
xchg
adc
js
pop
xchg
cmp
mov
insb
je
cmp
stc
xor
imul
sub
xor
and
js
jno
je
xchg
xor
mov
cmpsl
divl
jg
xchg
aas
cmp
jno
sub
push
clc
pushf
cmp
lcall
repnz
mov
push
mov
jns
nop
add
clc
and
mov
xor
jo
cwtl
cli
mov
loopne
xchg
pop
imul
adc
insl
imul
stc
xorb
icebp
mov
or
xor
xchg
aaa
js
mov
mov
mov
ja
repnz
in
cld
and
shl
out
imul
xlat
jns
and
mov
icebp
pop
bound
adc
sarb
push
rclb
mov
rcrl
sub
jo
mov
das
and
xchg
pop
lea
push
xchg
sbbl
in
mov
mov
idivb
sub
jmp
or
xchg
xchg
movsb
and
subb
jecxz
stos
mov
push
loop
ds
push
mov
mov
cmp
repnz
mov
xor
repz
adc
pop
cld
mov
pushl
jp
mov
mov
stos
xor
pop
movups
mov
fdivrs
js
mov
fsubs
mov
and
cli
jp
mov
jo
mov
sub
xchg
iret
cmp
jg
enter
daa
pop
fisubl
clc
rcr
lods
fsubr
mov
bound
mov
sar
add
jp
xor
shlb
sub
mov
out
jo
jg
jno
mov
ss
aaa
push
sbb
jo
outsb
test
sbb
jecxz
jo
or
xchg
imul
ljmp
hlt
mov
pop
xor
outsl
mov
pop
bound
repnz
insb
js
stos
je
ja
daa
and
mov
cmp
mov
pop
push
push
insb
jo
xchg
adc
jmp
loope
pop
movsb
lret
cli
mov
jno
lods
je
xor
mov
mov
imul
jl
and
scas
mov
pushf
and
cli
cmp
jl
xchg
push
loop
addr16
mov
sub
jl
idivb
jns
out
mov
add
enter
lods
cmp
mulb
mov
cmp
hlt
mov
clc
pop
jle
test
mov
idivb
xchg
in
fs
not
cld
adc
mov
adc
lods
jmp
lock
jmp
mov
out
mov
pusha
iret
cmp
out
test
xchg
pop
in
aaa
clc
mov
mov
stc
fdiv
lods
xchg
negl
out
outsl
xchg
sti
rclb
push
jp
pop
clc
int
out
mov
and
imul
lret
cmpsl
ds
inc
sub
mov
pushl
add
jae
mov
mov
pushf
mov
hlt
jb
xor
cltd
xor
cmp
popa
jo
cmp
sbb
jecxz
and
cld
push
xor
inc
scas
cmp
out
pop
mov
jecxz
lock
loopne
jno
lods
jns
lret
xor
adc
icebp
mov
xor
ja
jnp
cmp
dec
out
lahf
mov
hlt
cmp
repnz
pop
pop
lds
mov
jg
hlt
psraw
pop
mov
mov
lods
xor
cmp
cmpsl
mull
xchg
repnz
outsl
ret
mov
mov
push
mov
insb
jno
mov
divl
ds
and
cmp
cmpsb
fwait
lret
lods
insl
mov
dec
cmp
mov
jg
and
jo
adc
xor
dec
dec
adc
ds
adc
ret
and
cmpl
inc
aas
scas
jp
popf
mov
popf
cmc
or
xchg
cmp
icebp
scas
xor
mov
mov
xor
pop
cmp
ljmp
ss
scas
clc
stos
lock
hlt
mov
push
pop
call
nop
in
mov
jecxz
cmp
mov
dec
test
xor
fdivs
popf
sub
mov
mov
and
out
icebp
subl
sbb
lods
add
cmp
shll
adc
push
mov
mov
sub
iret
call
repz
xchg
push
xchg
aad
mov
mov
int3
mov
cltd
mov
and
int3
bound
scas
outsb
mov
mov
or
bound
inc
mov
fistpll
xor
xor
stc
repnz
insb
fdivrl
repz
cmpsl
loop
mov
cmpsl
mov
mov
xchg
stos
sbb
out
push
divl
add
insb
mov
and
mov
iret
in
add
mov
jmp
push
nop
int3
mov
insb
cmp
sub
lods
jo
pop
cld
fidivrl
mov
test
daa
jne
adc
jle
mov
adc
push
inc
sub
testl
xchg
cmp
lock
and
mov
int
jno
jno
mov
into
popf
cld
je
cwtl
xchg
out
mov
jno
mov
bound
mov
cmp
stos
mov
call
mov
test
das
cmp
inc
sub
shr
xchg
or
cmp
imul
cmp
mov
out
xchg
mov
cld
mov
xchg
jle
inc
ds
pop
add
and
aaa
mov
cmp
in
lea
jl
mov
adc
cmp
adc
jae
data16
mov
mov
xchg
pop
adc
xor
push
adc
pop
xor
stos
aas
movsl
jb
jp
mov
inc
subb
mov
negl
push
js
loop
popf
mov
icebp
sbb
pop
in
lahf
shrb
jb
fidivl
jne
popf
aam
clc
mov
pop
inc
push
inc
push
cmp
jecxz
xchg
add
cmp
jno
xor
and
bound
loop
xchg
jo
adc
xor
imul
insb
xchg
mov
jns
clc
jb
lock
popa
pop
je
mov
jbe
fs
ss
adc
stos
mov
sub
mov
mov
mov
imul
xor
popa
or
cmp
push
pop
ja
outsb
sbb
jo
pop
jb
mov
clc
xor
cmp
xor
es
stos
pop
mov
inc
insl
icebp
mov
jl
xor
xor
xchg
sbb
scas
jae
inc
das
int
push
stos
loope
jecxz
push
in
mov
xchg
imul
sar
mov
imul
add
das
mov
bound
pop
mov
out
sbb
or
cmp
xor
dec
push
jae
ss
insb
sub
cmpsb
incl
cmp
cmp
jp
fwait
inc
test
shlb
sub
mov
gs
out
mov
mov
test
cld
mov
xor
cmp
push
cltd
mov
cmp
clc
xorb
in
repnz
cmp
adc
cmp
rorl
stos
enter
test
mov
inc
in
push
cld
popa
xor
cmp
rolb
mov
mov
hlt
mov
or
mov
cld
aam
mov
mov
subl
test
hlt
cmp
arpl
jb
sbb
mov
mov
stc
cmp
pop
cmp
movsb
ds
and
fwait
cmp
xor
cmpsl
dec
scas
jno
mov
insb
cmp
insl
adc
bound
cmp
push
ss
xor
je
add
mov
jp
repz
mov
jb
gs
xchg
pop
and
jl
in
cwtl
jecxz,pt
lds
loop
ss
xlat
ja
stos
push
movsb
repz
je
mov
test
jnp
test
mov
push
mov
in
aaa
cld
sub
stos
push
sub
negb
xor
in
mov
arpl
inc
test
push
inc
jmp
lods
mov
cmpsl
mov
jp
idivb
mov
and
in
clc
pushf
xor
dec
fisubrl
sbb
cli
pushf
in
mov
js
xorb
lcall
mov
mov
xchg
out
mov
scas
mov
push
xor
mov
xor
mov
and
dec
je
mov
adc
jl
xor
repnz
mov
and
hlt
cmp
adc
mov
imull
add
jp
test
inc
inc
daa
imul
sarb
test
std
mov
sub
mov
cmpb
add
icebp
cmp
ljmp
sbb
jb
scas
push
incb
js
lock
mov
icebp
faddl
stc
imul
int
add
lcall
xor
aaa
push
js
jge
ds
lds
or
jp
scas
pop
bound
jp
cli
neg
mov
jl
fnsave
sub
mov
and
jo
imul
xor
mov
sahf
mov
stos
scas
movsb
pop
scas
and
and
pop
jns
add
out
jecxz
leave
repz
xor
jae
push
mov
bnd
and
out
pushl
bound
xchg
rcrb
mov
sub
in
push
out
xor
sub
mov
repnz
je
xchg
xor
add
shrb
sub
dec
stc
lock
mov
mov
out
mov
jg
xor
cmp
and
out
scas
out
jmp
xor
pop
outsl
mov
mov
sbb
sub
and
ds
jo
jns,pn
js
fnsave
sbb
jp
ret
mov
mov
insb
jo
subb
sbb
adc
mov
ja
sub
in
jno
sbb
icebp
mov
sub
pusha
mov
mov
test
test
pop
inc
idiv
mov
xor
lods
xchg
stos
in
mov
mov
pop
pushf
mov
mov
mov
je
jno
lods
icebp
inc
jo
divb
nop
adc
cmp
clc
out
cmp
inc
sti
mov
sbb
jb
repnz
daa
inc
test
mov
adc
jnp
xchg
or
push
or
jbe
inc
dec
sub
cli
and
lods
mov
movzbl
pop
and
sahf
inc
jb
or
in
mov
lea
jno
mov
mov
jmp
mov
sahf
or
ja
stos
mov
pop
mov
jae
mov
loop
mov
sbb
mov
out
cli
or
mov
aaa
jae
xor
xor
stc
cmp
ret
mov
dec
lret
mov
mov
scas
and
hlt
mov
icebp
mov
sub
ror
xchg
test
mov
cli
jns
inc
adc
stos
jmp
shlb
add
cmp
and
mov
lret
sbb
xor
scas
jns
add
xor
xchg
sub
leave
xchg
sub
pushf
jmp
mov
insb
cmp
xchg
jae
scas
rcrb
push
sbb
jmp
cs
adc
mov
cmp
insl
aad
scas
mov
cmp
imul
lock
scas
imul
aas
mov
mov
ret
int
sbb
mov
mov
sti
out
scas
cld
cwtl
sub
fdivrl
ret
jmp
mov
xor
mov
cmpsl
and
aas
insb
mov
imul
mov
repnz
xor
cmp
pop
rorl
scas
int
mov
pop
xchg
test
inc
cltd
adc
mov
scas
mov
mov
inc
mov
mov
repz
mov
push
mov
sub
lea
fmull
xor
push
pop
aam
mov
jae
xor
cmp
mov
out
lret
push
aas
dec
fiaddl
stc
neg
xlat
sub
cmpsl
movb
movsb
xor
mov
imul
stc
cmpsl
imul
ja
push
cmc
inc
lret
xor
adcb
mov
xchg
hlt
ret
shlb
adc
scas
jp
addr16
stos
stos
je
cmp
mov
mov
repnz
scas
xor
arpl
mov
pop
mov
push
xor
mov
aam
xor
loopne
jmp
imul
inc
cmp
xor
xor
mov
xchg
iret
sbb
mov
mov
dec
xor
out
stos
xor
addr16
scas
js
or
loope
popa
sbb
jb
adc
repnz
daa
mov
jbe
add
rol
inc
aad
mov
sahf
mov
jp
orl
xor
stc
mov
mov
stos
lret
test
or
ds
xor
push
mov
out
imul
lahf
pushf
mov
mov
imul
push
dec
out
pop
add
sub
sbb
fnstsw
sti
dec
bound
mov
addb
jb
outsl
mov
aas
out
xchg
movsl
and
ja
dec
mov
test
and
sub
out
xchg
int3
push
xor
sbb
pop
je
fldt
lock
test
xor
addr16
sbb
mov
iret
mov
hlt
loop
xchg
mov
cli
fidivs
xchg
mov
sub
popf
scas
adc
xor
xor
cltd
stos
push
mov
xor
repnz
ss
adc
ss
mov
repz
mov
bound
jmp
dec
ret
jmp
into
jne
test
pushl
mov
and
ss
sub
dec
jge
and
mov
push
cli
jae
clc
addr16
xor
mov
cwtl
xchg
and
je
nop
out
mov
mov
stos
mov
sub
cmp
bound
fs
dec
dec
xchg
into
mov
mov
stos
xor
pop
jle
mov
aam
mov
mov
sbb
sbb
cmp
sub
leave
lock
insb
mov
mov
and
xchg
adc
test
dec
cwtl
jns
dec
jo
je
mov
outsb
neg
mov
add
add
inc
outsl
adc
pusha
scas
dec
cld
pop
mov
xchg
xchg
mov
xor
xor
clc
jae
mov
pop
jl
mov
outsl
lods
jb
adc
jno
mov
test
ljmp
mov
sti
popa
insb
ret
lahf
inc
ret
lods
data16
int3
aaa
cmpb
out
mov
insl
mov
xchg
dec
loop
stc
jb
jle
clc
or
xor
jno
cmpsb
push
and
mov
mov
scas
or
inc
js
mov
sti
pushf
xor
inc
arpl
divl
mov
je
add
sbbb
mov
aaa
jb
pop
pop
and
sub
rorb
xchg
movsb
sbb
arpl
scas
jno
jae
stos
scas
jns
mov
aas
stc
cwtl
mov
add
cmp
jo
jp
mov
mov
mov
icebp
aaa
mov
jo
cmp
sub
mov
insl
add
arpl
out
inc
arpl
jns
and
loop
jp
jae
and
je
xchg
scas
imul
lods
mov
cmp
sub
jne
xchg
scas
fs
movsl
xchg
or
stc
repz
push
clc
mov
mov
int3
stos
out
cld
repz
mov
icebp
cmp
dec
rol
sub
scas
cmp
and
fmul
or
dec
jns
dec
imul
cmp
in
shlb
mov
mov
xor
aaa
mov
push
cmp
cltd
jo
xrelease
jl
mov
inc
mov
jno
mov
and
aaa
sub
sub
mov
fs
cmpsl
into
jns
shlb
cmp
sub
ja
cld
pop
push
mov
fdivrl
test
mov
add
and
and
insl
pop
lret
cltd
lock
repnz
stos
fsubrs
sub
and
xchg
cmp
mov
cltd
mov
mov
ss
add
scas
arpl
in
lcall
xor
addr16
outsl
icebp
mov
mov
and
jecxz
jg
sarb
fstl
call
mov
arpl
movsb
std
shlb
aaa
bnd
in
iret
xchg
or
stos
imul
movsl
xchg
cmp
das
xchg
xor
hlt
mov
idiv
jmp
adc
fs
clc
and
test
stc
mov
outsb
push
and
out
sub
rolb
subb
jge
repnz
loop
xor
mov
cld
push
inc
and
loop
jp
out
repz
nop
sbb
clc
clc
xchg
cmp
icebp
lcall
add
or
lea
sbb
test
jecxz
popa
aam
xor
icebp
gs
mov
scas
popa
jge
xor
stos
mov
addr16
test
jp
xchg
cmp
das
ss
or
movsl
js
aad
jl
scas
add
mov
icebp
mov
test
mov
loopne
xor
outsb
pop
push
or
mov
jl
mov
lods
stos
mov
js
jb
cmp
mov
mov
adc
xchg
cmp
cmp
shlb
in
leave
or
decl
les
jo
shl
ss
dec
aaa
in
cmp
icebp
mov
sbb
stos
mov
mov
insb
mov
jl
mov
jns
add
fstpt
adc
aaa
cwtl
cli
xor
data16
mov
mov
ds
mov
imul
jg
test
repnz
xor
jno
mov
hlt
insl
xchg
and
and
mov
sub
out
jae
aas
jae
xchg
loopne
je
cmp
xchg
ja
xchg
js
push
in
bound
cli
lods
mov
dec
sbb
push
daa
mov
cmp
sub
stos
mov
js
pop
clc
mov
sub
xchg
mov
mov
sub
jle
cmc
xor
cmp
pop
and
daa
lods
cli
hlt
test
push
inc
jae
stos
sub
mov
pop
mov
jecxz
ja
call
outsl
xor
pop
shrb
ds
sbb
xchg
enter
cwtl
ja
mov
movsl
pusha
jl
imul
mov
jmp
adc
cld
push
stos
adc
jno
out
repnz
sarb
mov
adc
leave
loop
jae
cld
mov
xor
dec
es
cmp
int
pushf
lock
test
ds
fs
cwtl
in
loop
xor
mov
ljmp
notl
stc
inc
aaa
jbe
xlat
fiadds
jb
icebp
or
in
push
mov
es
mov
nop
sbb
mov
aas
jmp
xchg
sub
mov
mov
pop
cld
mov
mov
test
mov
imulb
cld
scas
test
mov
clc
in
je
jmp
adc
cld
arpl
mov
push
jle
imul
sbb
or
cld
sbb
mov
fldl
idivl
push
loop
mov
shl
fdivs
ja,pn
xchg
sub
add
cmp
push
adc
lock
push
lcall
xor
lea
jno
fmuls
idivb
sub
mov
jg
mov
fsubl
xor
scas
mov
es
test
or
bound
shll
jge
out
mov
and
nop
mov
scas
je
xor
outsb
popa
fldcw
inc
stos
in
xchg
sub
sahf
cli
lods
and
pop
xchg
imul
scas
mov
in
xor
ss
mov
mov
scas
cli
je
lock
jecxz
adc
mov
ja
cmpsb
testb
jg
icebp
in
add
jo
orl
test
lods
imul
stos
xlat
das
jo
stos
imul
arpl
xchg
or
test
or
push
sbb
test
clc
iret
xor
arpl
scas
rcrb
sbb
push
gs
mov
xchg
ss
cld
mov
and
jmp
addr16
scas
cmp
out
mov
dec
insl
xchg
jle
lret
lds
xor
mov
cmp
mov
mov
icebp
mov
jno
and
and
sub
sub
lret
cld
data16
rcr
aam
pop
lods
mov
jns
xor
push
pop
loop
lock
iret
pop
push
dec
sbb
out
jl
movsb
pop
push
mov
and
cld
and
and
lea
in
lock
mov
sub
mov
mov
test
sub
push
test
mov
pop
rcl
test
cmp
mov
cmp
in
test
mov
mov
imull
bound
out
insb
hlt
inc
jecxz
jae
mov
mov
je
stos
lods
inc
mov
cmp
in
iret
imul
out
leave
sub
mov
sbb
mov
mov
mov
addr16
mov
cmp
imul
iret
mov
movsb
clc
add
jo
popa
ja
jns
mov
lea
cmp
mov
mov
test
das
jb
test
out
xor
stos
cmpsb
popa
cmp
adc
pop
daa
hlt
xor
cwtl
mov
and
out
mov
frstor
imull
inc
and
clc
repz
jge
icebp
into
lods
fsubrp
mov
mov
aas
popf
ljmp
lods
call
imul
stos
ss
and
icebp
insb
aam
jbe
push
xchg
cmp
cmp
lods
arpl
js
mov
add
mov
popf
repz
out
sbb
into
mov
call
mov
je
pushf
sbb
loop
lock
incb
push
jno
push
mov
sub
sub
test
lock
push
les
inc
xchg
mov
icebp
mov
hlt
mov
add
pop
aas
je
data16
test
mov
jae
nop
fadds
jno
sub
stc
xor
repnz
xor
jecxz
and
ja
and
clc
fisubrl
shll
cmp
stos
xlat
das
ja
mov
sarb
repz
sahf
sub
inc
inc
icebp
imul
pop
mov
arpl
aad
push
xor
cmp
xchg
lea
bound
adc
dec
lret
mov
jl
xchg
aaa
mov
repnz
cs
mov
mov
cmp
sarb
cld
lea
mov
pop
movsb
inc
dec
test
fstpl
lods
and
and
idivb
push
xlat
aaa
test
mov
xor
nop
lea
imul
icebp
hlt
shlb
push
jnp
clc
cmpl
jp,pn
add
cmp
dec
ja
mov
arpl
xor
outsl
push
scas
sub
sbb
cmpsl
and
dec
and
and
mov
sbb
mov
shlb
repnz
cmpsb
scas
adc
loop
in
cmc
inc
ds
loop
push
fidivrl
popf
out
sub
in
sbb
popa
mov
jno
jge
scas
scas
mul
cld
shlb
hlt
jb
dec
insb
enter
jne
cmc
dec
add
dec
jno
mov
js
scas
aaa
cwtl
insb
aas
mull
call
mov
mov
bound
xor
jae
movsl
je
nop
and
or
mov
aad
push
cli
cmp
cwtl
jnp
cmp
cmp
or
cmp
stos
jle
dec
xor
xor
pop
mov
fdivr
cli
lods
shlb
jg
mov
ss
popa
mull
adc
pop
dec
push
sbb
jno
pop
adc
loopne
repz
icebp
jae
imul
lcall
mov
nop
outsb
loopne
divb
std
sub
dec
pop
cmp
aas
adc
mov
jecxz
mov
cs
gs
push
repz
mov
jl
or
add
mov
les
push
daa
cwtl
jno
mov
lcall
jno
mov
xor
mov
repz
ss
imulb
sub
inc
xchg
xchg
adc
jp
sub
loop
hlt
mov
mov
cld
loop
das
jl
jns
shl
in
xor
nop
add
je
cmpsl
icebp
ss
mov
add
lods
clc
jb
cltd
pop
mov
out
js
ja
aas
mov
cli
cld
stos
imull
enter
loopne
mov
fsqrt
xor
int
icebp
shll
jns
cltd
sahf
mov
arpl
out
xor
push
xchg
push
jmp
negb
pop
test
push
addr16
stc
inc
xorb
scas
das
jns
inc
pushw
ret
mov
imul
mov
sub
fwait
movsl
loop
jp
jno
cli
incl
sub
dec
in
push
repnz
mov
imul
lock
js
adc
test
icebp
in
mov
xor
stos
jg
xor
pop
lock
rep
rcr
repnz
movsl
xchg
aas
dec
and
bound
mov
pop
mov
jmp
in
push
mov
shl
mov
xchg
jo
call
mov
or
mov
adc
mov
xor
lods
cmp
sub
outsb
cli
mov
xor
stos
std
mov
repnz
das
hlt
ss
cmp
xor
js
jp
dec
pop
scas
mov
jno
and
testb
inc
mov
mov
mov
xchg
mov
ret
scas
mov
repnz
repnz
data16
cmp
imul
aaa
jmp
pop
xor
cmp
mov
jecxz
out
and
push
mov
xor
jb
sub
bound
cmp
es
add
jl
sar
mov
hlt
repnz
in
or
in
rorb
ldmxcsr
mov
out
sub
push
mov
fisubl
cmp
jae
inc
ret
outsb
loopne
xor
cmp
adc
jns
mov
in
jmp
fcoml
shl
cli
movsb
inc
fnsave
sub
sub
xor
movsl
or
stc
cmp
mov
das
nop
and
sahf
cltd
mov
out
xor
lods
pop
mov
bound
out
rorl
jnp
imul
mov
out
mov
jl
ret
push
jnp
pop
sbb
mov
xor
icebp
pop
xor
cli
decb
and
mov
jmp
jae
jne
int
mov
fcmovnb
add
imul
mov
sub
sbb
sarb
repz
add
clc
cmc
mov
nop
lock
mov
scas
ds
inc
xor
jmp
adc
ss
mov
mov
outsl
xchg
cmpb
cli
in
and
jmp
stc
jge
jecxz
cmp
lea
xor
or
cmp
push
jecxz
out
jb
sub
mov
mov
imul
aaa
lds
in
in
repz
lods
dec
lock
lahf
aaa
mov
fs
insb
fwait
jns
and
lods
sub
test
and
cmp
mov
jp
rclb
mov
ficompl
ljmp
fcmovu
lea
mov
xchg
inc
cltd
dec
arpl
nop
sbb
cmp
jp
xor
lea
pushf
sbb
ss
cwtl
and
mov
jb
mov
mov
push
xor
xchg
int
dec
jbe
mov
testb
leave
jle
insl
jno
adc
xor
je
cmp
out
mov
lods
cmp
jl
sub
push
and
and
mov
or
ja
and
cmp
cmp
fsub
cmp
pushf
jge
cmpsl
imul
mov
dec
in
lods
insb
mov
sub
sbb
inc
lock
clc
jno
xchg
mov
into
jno
movsl
pop
mov
mov
cli
je
test
lock
mov
sbb
jns
mov
and
and
mov
std
fs
pop
and
fdivrl
popa
mov
popa
stos
jb
stos
push
sbb
push
cmp
cmpl
mov
imul
out
std
int
insb
addr16
cld
shll
jb
mov
movsl
and
lcall
mov
cmp
ljmp
and
sub
push
xor
out
arpl
mov
hlt
lods
gs
mov
sub
movsb
cmp
mov
insb
hlt
mov
xchg
arpl
xchg
jno
scas
stc
insl
mov
sbb
test
ss
fnstcw
cli
js
test
cs
das
hlt
mov
repz
loopne
cmp
mov
push
ss
icebp
sub
shlb
jno
incb
repnz
inc
mov
leave
and
mov
mov
imul
ret
js
adcl
ss
cld
push
pop
sarb
mov
adc
sahf
xor
add
jno
jb
and
and
mov
js
push
das
xor
xor
mov
clc
pop
mov
out
jb
add
mov
repnz
lock
idivl
mov
divl
mov
jl
fnstsw
lock
mov
movsb
or
lcall
xchg
jmp
clc
arpl
js
adc
ds
nop
cli
xor
popa
sub
repz
bound
cmp
mov
sub
loopne
jns
lock
jo
push
mov
in
icebp
aas
fsubr
aam
outsb
add
rclb
scas
push
ret
jb
ror
mov
xor
and
icebp
stc
jne
sub
jmp
aas
mov
mov
out
aas
mov
nop
mov
or
lods
mov
dec
negb
icebp
pop
clc
mov
mov
cmp
xchg
xchg
stos
gs
scas
mov
mov
xor
clc
adc
mov
cmp
dec
and
lss
in
jb
add
sbb
ds
add
cmp
jmp
adc
shr
scas
test
jp
jg
mov
xor
jne
xlat
imul
xor
or
lods
arpl
mov
test
pop
mov
mov
js
cmp
xor
pop
and
clc
jo
je
out
stos
mov
testl
mov
clc
ja
fwait
cmp
ss
mov
jp
mov
imul
cmp
cld
cmp
bound
clc
jns
mov
mov
in
or
repnz
mov
cli
xor
sbb
jb
jecxz
loop
mov
xor
mov
inc
out
jae
xor
bound
add
pop
mov
inc
arpl
pusha
cmp
and
pop
xrelease
test
fs
imul
mov
cmp
cwtl
add
cmc
pop
sub
mov
popa
jns
inc
movsb
xchg
push
cmp
jl
xchg
push
mov
test
cmp
hlt
lea
mov
std
mov
loopne
cmp
lods
xor
in
aaa
and
cli
mov
shl
jp
add
push
decb
andb
xrelease
pop
xor
mov
clc
ss
pushf
lods
test
popa
and
cld
je
sub
nop
ja
jl
xor
mov
xchg
sub
push
daa
cmpsb
xor
test
repz
cmp
shrb
imul
mov
xchg
dec
loop
loopne
cli
bnd
cwtl
jl
mov
inc
xchg
aam
test
je
xor
and
jle
dec
lock
mov
les
mov
cmp
lcall
bound
push
mov
fstl
idivb
dec
imul
sbbb
xor
js
mov
push
mov
out
arpl
testl
jbe
and
mov
out
ds
outsl
mov
sbb
jp
mov
mov
rorb
mov
outsb
cwtl
mov
mov
jnp
lods
mov
adc
and
dec
sbb
fwait
test
cld
xor
push
push
jg
arpl
sti
das
xor
outsb
jecxz
lahf
imul
pop
clc
loopne
inc
mov
jmp
loopne
imul
arpl
cmp
and
sbb
addr16
jp
sysret
in
lods
mov
hlt
fs
stos
movsl
sbb
icebp
jo
loop
mov
mov
sub
loopw
inc
in
pusha
pop
xor
and
stc
imul
mov
fildll
cmp
cmp
push
mov
jb
mov
divb
mov
pop
shll
xor
mov
dec
push
les
pop
add
cmp
aas
cmpsl
sahf
xor
in
push
push
cltd
push
popa
mov
clc
add
bnd
shlb
xor
imul
scas
std
inc
hlt
arpl
jl
cmp
adc
xor
sub
test
inc
shll
adc
or
loop
push
pop
and
pop
js
aad
and
sbb
in
insl
out
insb
mov
aas
mov
in
negl
add
sub
mov
ror
mov
std
pop
inc
pop
mov
add
xorl
stos
repz
mov
xchg
xchg
dec
jo
and
sbb
nop
dec
push
test
jno
inc
shrb
hlt
lock
cmp
movsb
and
sub
sbb
mov
idiv
or
popl
mov
or
mov
sbb
push
cwtl
mov
mov
sub
insb
pop
mov
aad
ja
adc
jp
push
out
stos
xlat
mov
and
inc
sahf
neg
mov
inc
stos
push
adc
jo
dec
cli
incb
imul
inc
sbb
mov
cmp
jle
ds
mov
push
std
xlat
cmpsl
mov
jmp
lock
push
sahf
push
cltd
movsl
cmp
push
jecxz
dec
iret
push
loop
sub
push
xor
dec
sbb
push
adc
nop
out
mov
gs
cmpsl
mov
cld
mov
adc
mov
cli
icebp
xor
hlt
jp
imul
idivl
mov
mov
and
jno
sbb
sub
scas
mov
dec
bound
dec
pop
cmpl
loop
stos
inc
in
xchg
mov
push
shlb
int3
xor
jecxz
popa
cmp
leave
mov
push
stos
icebp
fs
jae
mov
in
mov
fcoms
stos
mov
rcrb
jo
adc
int
jl
mov
cli
mov
clc
mov
lock
push
cld
out
mov
stc
mov
clc
jne
bound
cmp
cmp
out
mov
push
loop
jne
add
inc
sahf
je
and
xor
enter
sbb
cmp
mov
movsl
push
lret
shlb
aaa
mov
add
jo
pop
cld
push
dec
ret
or
and
mov
aas
cmc
mov
mov
bound
pushl
ret
jl
idivl
mov
test
mov
clc
jmp
ja
inc
sbbb
mov
imul
xor
xor
adc
mov
jp
gs
clc
lcall
ja
aad
into
aaa
mov
test
dec
and
shl
push
sub
xor
and
xor
stos
clc
jb
out
repnz
mov
jo
cmp
les
je
scas
mov
mov
xrelease
add
cmp
dec
dec
dec
stc
stos
test
sarl
scas
call
call
arpl
test
ds
mov
or
sub
out
xor
push
jnp
add
ja
sbb
mov
jg
xor
add
xchg
aas
stos
or
popf
lahf
lds
lcall
arpl
sti
das
xor
sub
cli
mov
dec
adcb
add
inc
ret
sub
jge
jne
add
sub
aaa
imul
call
pushf
out
and
jae
repnz
jae
cli
ja
loop
ret
inc
in
push
add
sbb
in
add
repnz
stos
jb,pt
in
imul
jne
mov
fs
mov
xchg
mov
scas
push
mov
pushf
inc
sahf
ds
ss
or
pop
mov
adc
imul
adc
mov
and
cmp
ds
pop
scas
test
pop
xor
in
stos
push
jecxz
push
pop
divl
pop
adc
scas
push
add
cmp
jg
js
mov
lods
leave
insb
fs
mov
movsb
idivl
nop
fdiv
out
jno
lcall
add
icebp
jno
mov
sub
cli
xor
dec
xor
mov
or
cmp
popf
xor
jp
aas
fimuls
fcomi
adc
jl
incl
repnz
mov
mov
ret
imul
daa
jns
sbb
arpl
push
inc
arpl
imul
divl
cmp
inc
pop
popa
call
and
fnstsw
mov
stos
stc
ret
inc
mov
popw
mov
push
push
xchg
adc
pop
xchg
ja
test
je
xor
lea
mov
push
stos
mov
inc
hlt
test
jae,pt
adc
add
mov
mov
jp
inc
cmp
or
ja
mov
add
mov
repz
icebp
movsb
xor
call
or
cli
and
sub
test
xchg
test
js
mov
add
sub
sub
sbb
mov
mov
jb
sub
mov
jge
push
scas
mov
les
js
pop
mov
test
cmp
repz
imul
bound
sti
sub
repnz
mov
push
adc
fimuls
and
mov
sbb
xor
in
pop
push
out
sub
icebp
test
cmpsl
xchg
stc
inc
addr16
arpl
adc
jae
jmp
cmp
clc
scas
xor
or
and
xchg
mov
cld
pop
ret
jecxz
cmp
mov
test
in
and
push
mov
mov
cld
mov
xor
sub
push
stos
mov
imul
jmp
in
mov
sub
lods
aaa
sub
int
sub
leave
popa
bound
pmuludq
mov
xchg
jmp
movsl
icebp
jb
scas
xor
lods
js
test
test
test
adc
jo
mov
je
and
sbb
jmp
xchg
jmp
je
xchg
aaa
in
in
xor
cmp
loop
jecxz
jl
push
out
scas
or
cmp
or
adc
ds
aas
lods
or
xor
out
cmp
jg
jae
mov
adcl
mov
mov
addr16
cmp
cmp
imul
jg
movsl
xor
mov
arpl
inc
popf
inc
jne
and
sti
fs
sti
jne
aad
push
insb
mov
scas
mov
mov
jp
sbb
sub
inc
aaa
sub
pop
lock
jno
mov
call
push
mov
mov
jmp
addr16
mov
int
inc
gs
jnp
jae
xor
out
inc
pop
icebp
repz
inc
mov
jns
xor
test
jecxz
sub
pop
jns
xlat
js
push
addr16
ret
stc
popa
sbb
sub
bound
subb
in
mov
and
jo,pt
mov
inc
sub
sahf
loop
mov
cmp
mov
scas
or
jecxz
jmp
mov
sub
mov
push
test
gs
xor
icebp
cld
xor
hlt
out
pop
mov
movsl
ja
jae
mov
pop
in
std
lock
mov
stos
cmp
mov
popf
and
xor
idivl
xor
lods
cld
inc
jmp
aam
js
clc
inc
lods
and
cmp
push
dec
loop
sbb
inc
imul
inc
pop
mov
sbb
hlt
mov
lcall
mov
aas
int
clc
imul
mov
repz
mov
clc
shrb
hlt
cmp
sub
and
mov
cld
jp
push
xchg
jns
pop
mov
pushl
dec
into
dec
outsb
orb
out
xor
pop
cld
adc
repz
xor
loop
mov
das
stos
sti
movsl
mov
stc
mov
jo
aaa
stos
lods
pop
xlat
mov
or
test
lea
and
mov
mov
add
xchg
lock
pop
aas
mov
add
adc
adc
repz
cmp
mov
fs
cld
daa
stos
mov
bnd
out
jno
test
sti
stc
mov
mul
jbe
xchg
xchg
mov
sarb
adc
imul
daa
lcall
mov
mov
scas
hlt
add
in
mov
xchg
mov
mov
mov
outsb
mov
test
sub
sub
mov
inc
jne
cltd
cmp
mov
add
mov
jmp
mov
push
pop
shll
lods
mov
enter
mov
sub
test
fadds
mov
mov
ss
cwtl
in
sbb
mov
jb
loop
stos
jge
pop
sub
ss
or
ja
aaa
testl
dec
and
aas
stos
jo
cltd
xor
lods
std
lea
cmp
sbb
fists
test
cltd
ss
pushl
jmp
test
mov
rep
aas
aaa
clc
push
jle
xchg
mov
arpl
call
push
sti
out
xor
jge
jns
jecxz
push
hlt
cli
xor
add
repz
clc
cs
shl
out
mov
lods
ja
sub
sub
jg
xor
mov
push
jae
imul
imul
mov
cmp
jg
xor
adc
inc
hlt
mov
inc
sbb
mov
sti
out
movsl
rclb
vpcomuq
adc
xor
fs
mov
xchg
mov
xor
mov
lods
ja
cmp
jecxz
fstp
popa
pop
dec
mov
movsb
sub
sti
mov
pusha
jo
jb
int3
mov
jne
pop
cli
mov
xor
lock
stc
mov
dec
jg
test
ja
in
and
mov
aaa
cli
cld
xchg
push
sti
out
sub
cmpsl
add
jg
shlb
cld
loop
or
inc
dec
cmp
imul
js
rcl
add
xor
out
and
xchg
adc
xor
xor
jp
push
idivb
stc
hlt
imul
mov
pop
cmp
mov
insb
cmc
pop
scas
dec
inc
cmp
arpl
xchg
jno
mov
xor
jne
mov
int
loopne
negl
xor
lock
js
mov
push
adc
aad
test
scas
jb
lods
jecxz
sahf
out
mov
rolb
ret
arpl
mov
ds
ds
ja
add
jl
xchg
scas
jnp
sahf
fidivrs
cmc
mov
out
push
jbe
xchg
cmpsl
fs
cmp
push
and
subb
cli
aas
mov
sub
ljmp
imul
insb
mov
je
xor
cmp
aas
sbb
div
int
xchg
and
mov
popf
cmp
lds
jno
cmp
dec
pop
push
cld
scas
sub
test
stos
lock
imul
cmp
sub
imul
inc
push
sbb
shlb
xchg
mov
imul
loopne
cmp
idivb
sub
inc
inc
dec
js
cmpb
cld
sbb
mov
scas
scas
cli
jmp
outsl
adc
arpl
mov
mov
test
cld
ja
add
fdivp
jo
mov
flds
mov
pushf
dec
mov
jb
lea
ret
mov
xchg
mov
cmp
sub
ret
addb
cld
stos
pushf
jl
test
or
arpl
jns
hlt
repnz
stos
cmp
mov
insb
ja
xor
imul
and
mov
and
loopne
jnp
aas
xor
cmp
add
xchg
adc
xor
push
add
jbe
jno
mov
mov
and
jp
sbb
loop
popa
insb
mov
mov
mov
pop
mov
mov
repnz
mov
mov
stc
push
lcall
icebp
dec
cwtl
adc
imul
mov
hlt
cmp
outsl
jbe
inc
cli
icebp
and
aaa
mov
cld
pushl
sbb
rol
xor
fistpll
xchg
div
mov
sarl
mov
aaa
je
addb
push
outsb
xchg
mov
ss
mov
cmp
sbb
mov
nop
push
xchg
jae
mov
mov
or
in
pushf
cmp
neg
xor
xchg
hlt
rclb
insb
xor
add
jp
fwait
mov
andl
in
fdivrs
cld
cmp
hlt
xor
nop
lods
arpl
and
mov
jbe
test
cmpsl
adc
bnd
scas
dec
cmpsl
pop
mov
iret
pop
adc
cmp
lock
cmp
lock
mov
call
pop
pop
push
imul
aas
hlt
xor
mov
cmp
es
cwtl
enter
or
mov
mov
xor
out
aaa
sub
mov
repz
in
mov
mov
pusha
jb
dec
cmp
sbb
xlat
insb
test
xchg
andb
lock
cmp
cmp
jae
enter
mov
lcall
out
and
sbb
or
push
jo
push
aaa
xchg
push
stc
scas
jmp
pop
mov
std
mov
gs
or
js
into
jmp
xchg
lods
cld
push
mov
lahf
lock
mov
stos
and
nop
add
out
ror
test
jb
lock
xlat
jo
add
js
dec
hlt
mov
in
addr16
imul
xchg
jl
sbb
jg
mov
sub
and
int
arpl
dec
xor
or
mov
mov
gs
iret
jno
pushf
stc
jmp
mov
mov
pop
test
shrl
loop
stos
icebp
mov
scas
cmp
mov
call
xor
jp
out
pop
sarb
out
cld
push
lods
pop
xor
subb
cwtl
mov
stos
mov
push
lea
xor
dec
stos
addb
mov
mulb
and
test
shr
scas
mov
xchg
out
jl
jmp
mov
xchg
js
cmp
mov
decb
jno
repz
ja
pop
xchg
mov
hlt
stos
sub
mov
pop
loopne
js
aaa
jmp
xlat
repz
test
jb
ds
rcl
mov
mov
cmp
pop
js
mov
jae
xor
lret
and
sarb
aaa
popf
pop
pop
fidivs
stos
adc
xor
xchg
outsb
clc
shll
mov
aaa
in
js
push
clc
je
mov
les
das
mov
jl
mov
inc
stc
fwait
cmpsb
mov
xor
mov
mov
std
das
lds
js
xor
cli
aaa
xchg
aas
inc
loop
popa
out
pand
stc
jns
out
xor
mov
adc
sub
repz
mov
xor
and
repz
js
lods
out
jp
jbe
test
iret
mov
dec
sub
mov
xchg
cmp
or
aas
je
stos
push
pop
sbb
lcall
jb
scas
or
mov
lahf
test
imull
ljmp
pop
sbb
jle
pushf
je
sbb
fdivrs
xlat
lods
pop
xchg
bound
mov
lea
jmp
out
loop
clc
pop
mov
mov
adc
not
adc
sub
bound
adc
lahf
sub
jp
clc
gs
jns
mov
push
sub
mov
popa
xchg
lret
cld
jae
xor
cld
jns
mov
stc
inc
inc
das
jno
js
xchg
mov
push
pop
mov
stos
aas
sbb
mov
jmp
pop
pop
xlat
add
je
pop
add
xor
cmp
cmp
jp
scas
aas
add
mov
mov
sub
mov
sub
or
movsl
sti
jle
in
test
jecxz
loop
cmp
jg
test
push
xor
stc
mov
test
and
fdivl
cltd
lock
int
mov
incb
cmp
jo
rorl
stc
clc
ljmp
xor
cmpsl
div
xchg
sahf
xrelease
fs
sbb
lods
pop
imul
hlt
hlt
cld
pop
clc
loop
mov
jne,pt
int3
cltd
test
lods
inc
sbb
jl
call
or
inc
pop
jbe
and
nop
js
shll
jno
out
xor
lods
in
xor
sub
push
pushf
mov
mov
aaa
cmp
cltd
nop
xorb
jmp
mov
fs
subb
clc
mov
mov
bound
mov
mov
adc
inc
adc
sub
jae
mov
cmp
cmc
shlb
je
mov
push
sbb
jg
cmpsl
hlt
out
imul
xchg
out
mov
and
into
cmp
adc
sbb
clc
add
sahf
nop
and
mov
mov
xor
clc
cltd
mov
imul
rolb
lock
arpl
aaa
out
js
mov
aaa
sbb
jecxz
loopne
js
cld
mov
or
mov
mov
fnstenv
scas
add
hlt
daa
cmp
test
jp
ds
outsl
xor
push
insb
nop
out
cmp
xor
xor
jns
jmp
xor
mov
xor
xchg
int
mov
cld
fsubl
sbb
jl
mov
mov
sahf
bound
pop
test
idivb
outsb
mov
test
adc
xchg
scas
mov
sub
cld
mov
icebp
decb
and
and
push
lock
mov
out
in
cmp
push
test
mull
push
xor
xor
and
dec
insb
push
jo
cmpsl
out
inc
pop
add
je
and
or
icebp
lods
mov
jmp
jo
sbb
add
mov
pushf
xor
outsl
xor
loope
jecxz
inc
inc
loop
dec
jb
or
or
push
adc
mov
stc
sub
cli
mov
mov
mov
ss
mov
test
hlt
popa
imul
and
xor
clc
ss
fistpll
cld
xchg
xor
inc
pop
stos
test
jns
jo
cmp
add
in
xor
icebp
jns
cwtl
out
je
sbb
dec
push
push
mov
dec
and
ret
scas
pusha
jno
jecxz
repz
mov
inc
pushf
imul
jo
sub
xchg
insb
or
fs
adc
sbb
repnz
ret
ds
jecxz
mov
in
dec
lock
aad
pop
pop
pop
cmp
fwait
insl
jae
lret
mov
jp
jbe
push
test
adc
mov
cmp
mov
mov
movsl
mov
lock
je
jno
lods
add
pop
mov
test
repz
mov
out
mov
sub
push
xor
adc
aas
mov
icebp
mov
mov
push
and
cmp
mov
jmp
ret
jb
mov
out
repnz
ret
hlt
mov
arpl
adc
adcb
repnz
fsubrl
fwait
push
sub
xorl
mov
stos
push
popf
mov
mov
movsb
sahf
or
mov
jg
push
loope
and
imul
mov
mov
stc
test
inc
mov
repnz
mov
lods
dec
and
mov
aam
mov
mov
lret
fisubrs
out
mov
pop
cmp
lods
ret
xor
push
adc
and
jp
mov
jecxz
push
xchg
pop
mov
xlat
aaa
pop
sbb
cmp
out
jne
aas
aas
push
jmp
mov
repnz
sbb
lods
sbb
cmp
mov
mov
mov
scas
sbb
adc
cmp
or
or
jl
push
sub
cmp
cmp
inc
popa
test
rcr
lods
aas
shlb
repnz
enter
jecxz
sub
mov
dec
cltd
dec
pusha
mov
aas
xor
push
mov
imul
push
ds
stos
fdivrs
pushf
das
mov
test
add
xor
rcrb
aaa
cli
test
stc
clc
scas
xorl
testb
mov
test
imul
xor
mulb
mov
imul
lods
stos
jo
cwtl
mov
xor
adc
pop
and
scas
mov
lods
sbb
in
imul
jns
fisubrs
xor
int3
mov
sbb
hlt
in
push
and
pushl
push
jns
imull
xchg
push
outsb
loop
jae
enter
mov
cltd
mov
xchg
fs
and
loop
jg
cmp
sub
adc
mov
sbbl
mov
push
jne
adc
insb
lods
out
je
sbb
mov
push
jns
or
clc
jecxz
icebp
jo
sbb
mov
cmp
cld
mov
pop
xor
mov
mov
bound
imul
jns
cltd
and
and
jp
and
jb
sub
mov
mov
add
xor
popf
mov
sub
fwait
cmp
dec
and
mov
xchg
clc
mov
and
fstps
insb
jl
xor
je
clc
mov
xchg
sub
test
push
mov
xor
ret
lods
cmp
jns
and
mov
jae
imul
xor
xor
hlt
inc
xchg
cmp
push
jp
fdivrl
inc
lock
xor
jb
sub
enter
jns
idivl
hlt
stos
cli
push
imul
mov
lock
sbb
cld
and
cmp
mov
pop
mov
xor
sub
xchg
sub
js
stos
xor
cmp
xor
fs
shlb
je
sbb
in
adc
leave
fwait
sub
cwtl
mov
mov
cmp
xor
gs
lods
sub
jecxz
jae
jb
mov
pop
pop
sbb
stos
pop
test
mov
dec
imul
repz
push
jno
sub
cs
mov
clc
js
repz
sub
lds
ljmp
test
lcall
sbb
lods
mov
andb
hlt
mov
pop
mov
jae
jp
lahf
push
imul
cmp
stos
sbb
pop
lods
idiv
mov
and
stc
out
lock
loop
add
xor
lret
lcall
test
clc
xor
rcrb
cmp
mov
jecxz
and
lods
popa
mov
jno
xor
ds
and
cmp
rclb
adc
add
fwait
jmp
je
mov
std
pop
lods
imul
mov
repz
mov
scas
cmp
jbe
hlt
mov
jmp
jb
mov
movl
fsubl
cld
pushf
xor
xor
jle
pushf
jno
jge
xor
repnz
out
scas
ja
jo
pop
mov
adc
sub
mov
testb
repnz
jmp
mov
xor
ds
push
inc
inc
cmp
sub
enter
daa
call
jg
mov
aas
mov
in
jp
xor
mov
es
stos
lock
jae
mov
out
repz
leave
mov
gs
das
mov
mov
std
sar
jp
test
xor
jmp
xor
ds
or
mov
sahf
imul
mov
add
xor
jne
sahf
xchg
fs
fs
cmp
inc
push
lahf
out
push
and
xor
mov
ss
cwtl
xchg
arpl
je
sub
xor
rcrb
loopne
arpl
pop
nop
push
mov
jle
in
repz
pop
repz
in
aaa
mov
cmpsl
comiss
fs
cwtl
jp
inc
js
stos
jno
cmp
cmp
mov
lods
and
xchg
js
and
xor
mov
pop
mov
mov
jecxz
negb
xor
or
xor
popa
add
lds
sahf
xor
lahf
xchg
mov
test
xor
xchg
mov
pop
dec
jno
xor
adc
and
cmc
lods
dec
iret
jmp
adc
aas
aad
sti
mov
repnz
negl
ror
cmp
sbb
cli
cmp
mov
pushf
and
ds
jnp
fwait
inc
add
push
in
or
cmc
xchg
or
add
mov
sbb
add
xor
and
and
repnz
sbb
aaa
jnp
and
sub
cmp
ja
or
cmp
xor
adc
and
add
lods
jp
xor
mov
scas
push
out
hlt
cmp
out
insb
mov
mov
pop
xor
je
bound
aaa
ret
addr16
cwtl
sub
sub
test
xchg
arpl
dec
test
xor
fs
ret
xor
imul
outsb
es
mov
lods
and
aas
add
jae
mov
add
arpl
stos
stc
lcall
imul
pusha
jb
jp
and
jo
cmp
sub
in
test
mov
dec
in
jl
cmp
mov
and
xor
jns
mov
xor
mov
lds
fdivr
lods
lods
cmp
lods
cmp
lds
jns
adcl
mov
in
pop
dec
push
ds
mov
add
sub
cmp
inc
mov
pop
jae
shll
push
loop
mov
aas
addr16
sbb
and
out
cli
imul
repnz
out
mov
xchg
aaa
sbb
mov
bound
data16
imul
jo
repz
lods
icebp
xor
xor
fwait
imul
divl
mov
imul
enter
dec
push
mov
idivl
mov
stc
dec
outsl
lock
xor
mov
out
mov
int3
mov
shrb
cmp
xor
addr16
lock
jg
xchg
pop
shlb
mov
sub
cmp
lds
mov
filds
icebp
cmp
hlt
decl
xchg
xchg
aas
mov
and
fsub
repz
addr16
jno
idiv
push
cmp
ja
rolb
mov
jo
cmp
adc
jno
js
mov
mov
imul
lods
jmp
bound
or
jno
sahf
jno
aad
jmp
stc
mov
mov
jno
ja
subb
pop
nop
stos
xor
cli
mov
adc
js
or
mov
fidivs
mov
rep
popa
addr16
sahf
sbb
test
mov
mov
mov
mov
enter
cli
cmp
inc
in
clc
xchg
mov
in
mov
ret
mov
lock
adc
cmp
movsb
aas
inc
or
xchg
pop
adc
scas
loopne
xor
mov
sbb
inc
stc
aas
xor
lods
jae
sarb
inc
jnp
stos
mov
lret
jo
jmp
sub
shlb
jns
mov
decl
scas
sub
cmp
in
clc
in
call
sub
mov
xor
cli
sub
adc
sbb
pop
push
jp
mov
xor
mov
mov
jno
mov
ss
inc
jp
mov
xor
mov
scas
jb
and
cmpsl
ss
cmp
ss
sub
out
mov
clc
repz
sbb
xchg
add
andl
cs
jb
mov
jnp
loop
mov
pop
out
rcrb
adc
adc
lock
pushf
adc
or
inc
mov
mov
mov
inc
xor
fs
jae
ds
arpl
mov
scas
xor
mov
cmp
out
insb
pushf
repnz
stc
rcrb
neg
and
test
mov
js
cli
cltd
pop
stos
mov
aas
aas
rcrb
mov
pop
popf
repz
cmp
ja
mov
xor
xor
test
add
and
push
popa
insb
lds
jmp
out
js
popa
daa
mov
push
insl
test
ja
jno
jecxz
js
in
je
sahf
jno
cltd
addr16
sub
mov
add
imul
jmp
popf
cli
jb
out
rolb
jo
sbb
movsl
and
dec
imul
aaa
ss
ret
arpl
mov
mov
pop
test
ds
jb
icebp
mov
aaa
stos
test
cmp
clc
pop
mov
out
mov
mov
les
arpl
adc
loop
mov
test
je
mov
inc
xor
popf
das
sub
sbb
cmpsl
jl
jmp
jecxz
js
mov
sbb
lea
add
mov
pushf
jae
add
scas
mulb
dec
in
jp
add
imul
aam
adc
and
ficoms
inc
jno
imul
les
add
icebp
mov
lods
idivb
shll
xor
xor
xor
into
enter
fsubr
aad
cwtl
cmp
sahf
xor
jae
mov
pop
mov
cmpsb
out
mov
sub
xchg
adc
dec
add
ror
icebp
sbb
push
nop
push
and
nop
outsb
imul
std
mov
mov
pop
popa
sbb
ljmp
inc
xchg
repnz
jl
cmp
arpl
pop
and
mov
mov
jecxz
dec
call
popf
mov
cmp
aaa
mov
mov
out
ret
loop
idivb
out
stos
xchg
lods
fdiv
mov
xchg
push
sbb
fdivl
adc
push
pushf
mov
xor
lcall
mov
xor
mov
xor
aas
sub
push
test
add
in
mov
lret
rcll
lods
fnsave
fisubrl
test
xor
push
out
lods
jp
and
jecxz
scas
fsubrl
cwtl
or
mov
ret
nop
cs
out
mov
cmp
jns
and
sub
ja
rcll
aas
mov
cmp
movsl
jb
jge
push
out
or
leave
cmp
arpl
hlt
mov
pushl
cmc
push
inc
push
jl
jne
gs
xor
and
jae
mov
pop
sub
jg
sbb
je
leave
jmp
out
xor
mov
and
mov
mov
cmp
mov
add
xlat
das
sub
enter
adc
jb
sub
mov
cmp
aaa
in
mov
mov
mov
sub
mov
xchg
lods
mov
icebp
mov
inc
scas
xor
out
insb
cmp
xchg
lret
lcall
inc
arpl
pop
cmp
repnz
or
aas
call
insl
mov
mov
jp
js
mov
js,pt
mov
sub
mull
cmp
loopne
imul
push
xchg
adc
sbb
and
add
inc
addr16
loop
out
mov
cwtl
mov
fistpll
cli
mov
sub
xchg
push
jne
fwait
lcall
lea
adc
repnz
mov
mov
xrelease
mov
sbb
xor
and
or
jno
idivb
adc
imul
xchg
mov
pop
xchg
mov
arpl
cld
rcrb
test
jne
and
sub
mov
mov
enter
pop
call
icebp
hlt
xchg
adc
mov
sbb
nop
push
stc
imul
negl
sub
mov
mov
jno
mov
in
pop
cmpsl
mov
or
cmp
adc
mov
mov
js
loopne
xor
lock
imul
jp
cltd
dec
inc
push
pop
jno
mov
dec
and
mov
jb
mov
in
adc
mov
mov
in
jb
ss
pop
jno
xor
cmp
cmp
in
mov
jp
lods
div
pushf
mov
scas
pop
popf
push
shlb
stos
hlt
mov
loop
mov
sub
lods
sub
push
jg
loop
ds
xor
push
imul
and
mov
lock
scas
or
repz
inc
or
pop
mov
repnz
mov
mov
aas
imul
mov
sti
push
xchg
lret
insl
adc
cld
lcall
mov
jge
and
rep
jle
push
ja
mov
mov
loopne
cltd
sbb
loopne
nop
test
test
xor
mov
inc
cwtl
lods
pop
mov
out
lcall
lods
sub
mov
fsts
add
insb
hlt
xor
xor
mov
pop
adc
and
mov
arpl
mov
and
mov
ss
cmp
mov
shlb
mov
sub
xor
aaa
or
ud0
sub
arpl
sub
fdivrs
add
xchg
pop
sbb
mov
mov
xor
ja
mov
ss
mov
shl
imul
jae
divb
insl
div
ja
pop
mov
jns
jae
sub
adc
stos
mov
out
push
jg
cmp
inc
mov
or
insb
loop
jo
lock
adc
xor
cld
punpckhdq
mov
sbb
sbb
mov
xchg
mov
out
das
stc
loopne
mov
xchg
and
mov
mov
cmp
hlt
in
mov
xor
mov
cmpsl
jecxz
imul
mov
dec
mov
int3
push
clc
xor
aam
pop
xchg
stc
cmp
push
push
mov
imul
fbstp
loop
cli
pusha
shrb
ja
mov
jo
pop
adc
das
addr16
dec
mov
xchg
mov
insb
jp
ja
rorb
mov
adc
in
cmp
pop
mov
xchg
scas
clc
mov
stc
pushl
sub
xor
xchg
and
and
aas
mov
push
xor
dec
push
push
mov
pop
jecxz
add
cmp
or
lds
jmp
mov
xlat
pop
shlb
cld
shlb
ret
out
mov
mov
cmpsl
cmp
in
mov
outsb
or
jae
ret
loop
bound
loop
mul
cmp
insb
out
jge
in
lods
in
sub
or
sti
ja
cmpsl
add
in
add
fcomps
cld
dec
outsb
xchg
pop
rorb
scas
pushl
sub
ds
andl
out
mov
jp
xor
lret
xor
test
cld
das
repz
stos
jge
jae
mov
in
adc
dec
inc
mov
mov
mov
movsl
jno
pop
mov
sbb
mov
sub
jns
pop
bsf
divl
xchg
adc
test
scas
imulb
ss
and
test
xchg
jge
adc
cmp
lods
lods
pop
lds
lock
js
and
mov
lret
nop
push
jns
jmp
sub
icebp
les
in
pop
ret
pop
fldl
outsl
mov
inc
cmp
loope
stc
icebp
mov
std
out
int3
insb
mov
ljmp
cmp
cmp
fdivrs
lods
sub
scas
jb
xor
xchg
out
ds
xor
push
js
mov
mov
mov
cmp
xchg
addr16
jmp
mov
imul
stos
cmp
outsl
and
shlb
repz
mov
imul
mov
mov
and
mov
scas
jecxz
cmp
jb
mov
test
pop
out
mov
xchg
xor
loop
icebp
cld
loopne
xor
mov
imul
mov
lods
sahf
sub
cld
jb
hlt
xor
repz
sbb
stc
jne
fidivs
ret
ja
mov
or
cmp
lock
ljmp
mov
and
mov
sub
je
hlt
test
addr16
push
cmp
mov
jecxz
lret
sbbl
sub
push
jecxz
repnz
lods
mov
sbb
cwtl
xor
pop
xor
jp
insl
lods
stos
idivb
mov
xor
xchg
fwait
repz
cmp
hlt
xor
fidivrl
mov
cmp
imul
jne
nop
push
clc
mov
mov
out
mov
test
jno
loop,pt
aaa
mov
jge
ds
adc
sub
cmc
xchg
push
insb
dec
inc
cwtl
jecxz
cmpsb
test
mov
aaa
mov
out
xchg
dec
popa
divl
insb
jg
fwait
push
lock
sub
xor
adc
aas
test
imul
pushf
jae
push
fs
out
and
insb
jge
shl
sbb
mov
nop
sub
jg
ret
mov
jmp
jecxz
jp
xor
js
or
jmp
aas
pop
xchg
in
xor
push
push
mov
xor
xchg
mov
and
sub
imul
divb
lods
and
aas
jl
dec
loopne
js
mov
jo
hlt
mov
mov
fs
icebp
mov
je
mov
test
xor
mov
bound
jp
dec
sahf
dec
mov
mov
jns
cmp
addr16
xchg
xor
lahf
adc
aaa
clc
cld
jae
xchg
rorl
dec
lock
cmp
mov
inc
cltd
arpl
cmp
pusha
cltd
ds
mov
aaa
mov
push
movsb
sub
mov
lods
test
mov
cld
jae
lock
scas
arpl
jae
mov
mov
mov
mov
mov
and
sbb
lods
in
mov
insb
aam
call
mov
repz
insb
mov
dec
jmp
dec
out
aaa
jb
mov
sbbb
ss
jge
sbb
jo
popa
js
test
mov
dec
mov
dec
mov
out
cmp
adc
cwtl
lock
xchg
gs
notb
and
in
mov
roll
es
nop
mov
fsubr
mov
push
dec
data16
hlt
dec
clc
in
clc
aaa
fcomip
xchg
jae
mov
xor
cmp
lods
adc
lock
push
cltd
pop
add
ss
push
insb
xchg
nop
sub
cli
cmp
test
mov
lock
xor
mov
mov
adc
mov
into
cmp
mov
fs
pop
popa
xor
add
vfrczps
jb
scas
mov
sub
mov
jecxz
addb
cmp
inc
xor
clc
mov
call
xchg
mov
out
xor
adc
inc
std
sub
in
shrb
sub
mov
repz
mov
mov
or
stos
orb
and
pushf
mov
jae
and
insb
jb
mov
and
dec
popf
imul
jecxz
mov
fldl
js
je
mov
mov
bound
cmp
addr16
idivb
sbb
aaa
mov
mov
lods
outsl
in
divb
lock
adc
sbb
mov
cmp
cmp
stos
sarb
jo
testl
xor
je
clc
jno
pop
ja
jl
mov
jmp
bnd
popa
shll
mov
js
cmpsl
cmp
jns
xor
js
lret
and
jae
cmpb
xor
es
adc
jnp
inc
das
mov
stos
fs
and
test
xchg
adc
nop
out
mov
mov
arpl
mov
shlb
cld
je
xor
loop
xor
stc
mov
and
sub
jns
mov
loop
sbb
hlt
shll
movsb
jg
add
test
test
divb
ds
cmp
cld
imul
jns
pop
ljmp
xchg
lahf
hlt
mov
jecxz
push
mov
mov
lods
jl
scas
jo
loop
repnz
insb
jmp
and
scas
hlt
mov
dec
mov
mov
cmc
push
popa
jb
aas
repnz
es
imul
movsl
in
aaa
cmp
sbbl
push
sub
clc
fnsave
pop
cmp
xchg
scas
mov
repnz
test
adc
jg
lock
in
jo
notl
jae
ljmp
mov
add
mov
mov
pop
jecxz
sub
push
mov
add
jo
push
hlt
inc
push
insb
xor
xchg
xchg
cld
or
mov
jge
cld
mov
xor
mov
stos
pushf
fsubrs
jp
cmpsl
popf
sub
mov
or
jg
cmp
xchg
mov
outsb
and
jg
jne
test
out
mov
test
lock
das
lods
ljmp
cmp
icebp
js
repz
lods
test
jge
fnstcw
popa
and
movsb
mov
in
jnp
out
cmpl
mov
daa
mov
jmp
sbbb
and
imul
mov
fwait
and
cs
mov
fwait
imul
mov
jno
faddl
dec
shr
je
cmp
xchg
pop
and
fwait
jnp
mov
mov
in
cmp
xchg
or
jecxz
jno
mov
jg
pop
mov
inc
shlb
sub
cmp
jae
icebp
jo
imulb
sahf
adc
stc
cmp
es
shrb
mov
clc
arpl
mov
xor
mov
ds
cli
je
clc
cltd
arpl
mov
ds
mov
jno
cmpsb
aas
out
sub
loop
icebp
mov
lods
mov
mov
outsl
mov
lods
inc
jg
or
sar
push
lds
xchg
cmp
imulb
adc
int
cli
xor
addr16
xor
movsb
and
mov
add
cmp
mov
inc
fdivrs
xor
mov
mov
cld
cmp
mov
ljmp
insl
rolb
lock
xor
call
icebp
clc
xor
lods
stos
js
dec
inc
pop
cmp
jno
mov
stos
or
mov
jge
imul
push
in
and
jae
cwtl
mov
jne
mov
xor
and
repnz
add
mov
out
xchg
clc
ds
int3
mov
das
negl
outsb
out
xor
movsb
int
push
sbb
jmp
jbe
or
jle
arpl
xor
and
xor
js
bnd
cltd
ud0
ja
scas
insb
xchg
sbb
mov
jp
lods
loopne
jae
js
adc
ds
mov
adc
dec
xor
push
and
cmp
xchg
lds
sub
jns
cmp
jb
leave
lods
mov
aas
lds
adc
pop
sub
sbb
jns
xorl
stc
inc
out
xor
push
mov
mov
ss
push
iret
jae
push
xor
sub
sahf
and
and
mov
push
sbb
jg
dec
mov
push
ja
mov
js
jb
mov
mov
out
imul
inc
out
or
aaa
or
call
jne
mov
rcrl
xchg
lcall
xor
stos
mov
or
movsb
scas
lods
xor
scas
cmp
js
sub
xchg
mov
adc
mov
inc
mov
ret
clc
adc
ds
inc
jmp
cli
addl
scas
mov
pop
xor
push
and
cs
addr16
jb
cli
out
xor
push
dec
and
arpl
mov
jecxz
lcall
fs
sub
out
inc
shrb
xor
fs
mov
mov
mov
push
jns
push
cmp
scas
jno
mov
push
inc
in
and
inc
sub
dec
and
out
mov
je
inc
xor
cmp
and
jns
repz
mov
popf
test
pop
xor
xlat
jecxz
add
mov
xor
repnz
lock
mov
daa
mov
movsl
mov
and
ja
sbb
icebp
mov
add
mov
jno
mov
gs
jp
jl
arpl
jg
mov
cmp
jp
jl
out
scas
mov
sub
scas
pop
mov
jno
pushf
dec
jae
mov
xrelease
xor
cmp
jns
js
sub
jl
movsl
xor
or
xchg
gs
les
aaa
sbb
iret
insb
mov
mov
xor
jo
pop
add
test
dec
push
push
test
xor
bound
adc
xchg
sbb
outsb
loopne
mov
cmp
push
jo
or
clc
push
xor
lea
cmp
imul
icebp
jg
mov
cmp
imul
in
adc
scas
and
scas
xor
mov
arpl
adc
outsb
jno
pop
pop
mov
pop
sbb
aaa
lods
into
aas
adc
jbe
and
fsubrs
ss
mov
push
xor
and
cmp
push
inc
inc
stos
cwtl
aaa
push
cmp
jp
mov
cmpsl
cli
sub
aas
or
cmpsb
clc
sbb
xor
cld
mov
and
jl
repz
iret
mov
sbb
lcall
jecxz
sub
and
aaa
mov
fsubr
cmp
fisubrl
in
movsl
stos
loop
insb
add
sub
std
or
lock
sub
loopne
idivl
xor
mov
pop
pop
test
pushf
insl
mov
ljmp
out
enter
sub
mov
ja
mov
stc
or
push
lret
clc
es
clc
out
jecxz
stos
or
js
jae
repnz
xor
add
ss
lcall
jmp
cld
jne
popf
xor
stos
and
cmp
xchg
hlt
arpl
outsl
js
mov
jno
fimuls
mov
mov
push
addr16
aam
aas
scas
stos
test
cld
addr16
sub
push
xchg
cmp
push
aaa
mov
pushl
xor
mov
jl
repz
mov
arpl
cmpsl
or
xor
stc
jp
out
sub
sub
jns
into
fisubrs
xchg
mov
mov
and
jmp
mov
sub
cwtl
cmp
xor
mov
ja
test
mov
add
sub
sbb
jns
sub
jns
pop
sbb
sub
pop
jbe
popf
sbb
sbb
jne
notl
xor
lea
or
addb
fstpt
pop
in
sub
repz
pop
mov
pushf
movsb
cmp
cli
mov
dec
lods
scas
idivl
repz
je
insb
out
arpl
mov
jns
repnz
stos
xchg
xchg
js
insb
in
das
mov
sub
add
ja
mov
in
mov
mov
out
mov
push
je
adc
fidivl
or
jne
push
out
stos
clc
ficoml
cli
insb
lea
stos
jno
rcrb
jg
jns
ja
adc
pushf
mov
sub
repz
dec
inc
cmpsl
jl
mov
xor
insb
xor
mov
popl
jns
mov
jo
xor
sub
loopne
push
sub
mov
sbb
sbb
cltd
in
test
fs
mov
jp
xor
loop
repnz
cmpl
jo
and
ds
xchg
mov
aaa
xor
and
add
mov
sub
pusha
jl
mov
mov
xchg
nop
fistpll
cltd
clc
and
aaa
test
sarl
loope
xor
rcrb
pop
push
mov
mov
mov
gs
subb
jp
xlat
cmp
stc
cmp
xor
lods
dec
aad
int
jno
jp
jmp
call
mov
arpl
jp
adc
inc
jle
cli
lret
aas
lea
js
push
and
aas
mov
xor
aas
lock
clc
mov
loope
andb
pushf
push
and
push
xor
sub
idivb
xor
jp
test
ret
xchg
cmpsb
rolb
xchg
out
cld
mov
insl
xor
jecxz
test
push
fidivrs
ficompl
mov
xor
sbb
test
mov
imul
mov
mov
loop
mov
imul
sub
pop
repnz
and
xor
lock
test
mov
sub
cwtl
inc
mov
cld
ss
arpl
add
sarl
pop
mov
scas
ja
outsb
jb
inc
add
insb
loopne
repnz
mov
ss
push
das
push
imul
jb
scas
cmp
ds
fldenv
in
fisubs
scas
mov
or
popa
jae
daa
jo
jl
das
divl
sub
ja
sar
icebp
lods
hlt
mov
mov
clc
mov
xchg
negl
mov
cld
lock
cmp
pop
adc
pusha
pop
jecxz
or
cmc
out
ss
cmp
sbb
xchg
jb
and
insb
mulb
mov
loopne
hlt
ss
je
push
popa
leave
mov
xchg
lock
cli
rcll
xlat
clc
inc
loopne
push
out
xchg
mov
mov
or
cs
xor
mov
lds
sbb
or
mull
jle
mov
sbb
pop
and
fldenv
push
in
pop
jecxz
hlt
xlat
cli
fcomip
mov
mov
xor
out
icebp
jp
or
xlat
call
xchg
mov
ja
lcall
or
pop
in
rcll
jno
hlt
mov
and
divb
adc
fldt
jmp
lods
jecxz
dec
pop
imul
fcomi
inc
roll
fdivl
out
test
es
test
pushf
xor
jl
mov
sahf
imul
in
sub
mov
aas
imul
jo
cmp
inc
xor
jno
xor
push
adc
cld
mov
jo
cmp
stc
andb
dec
pop
popf
je
daa
popa
push
jl
or
adc
cmc
lods
imul
jg
xchg
icebp
rolb
insb
jecxz
mov
mov
sbb
fiadds
aaa
test
and
dec
loop
xchg
movsl
xor
cmp
test
adc
sub
and
divl
pop
mov
scas
lods
arpl
mov
xchg
scas
cli
xor
inc
mov
fisubrs
subb
nop
push
mov
sub
ds
xor
lock
testl
sbb
fs
cld
lods
push
xchg
out
jp
mov
jns
cmp
mov
xor
pop
lods
mov
jecxz
ja
in
insb
scas
mov
repnz
ss
and
mov
xor
mov
cwtl
pop
cmp
stc
out
push
mov
test
adc
mov
jmp
js
pop
out
jb
mov
xchg
cmp
std
shr
daa
stos
je
adc
movsb
xor
cld
xor
jae
cld
mov
mov
loop
out
orb
imul
aaa
jns
mov
mov
in
subb
push
cld
sbb
cmp
repz
cmpsl
inc
and
ret
stos
insb
enter
clc
jae
hlt
pop
out
imul
xlat
fwait
dec
xchg
jae
xchg
bound
sbb
mov
cmp
jmp
mov
xor
stc
fdivrl
or
fsubs
mov
imul
clc
bound
mov
pop
aaa
movsl
inc
test
push
jae
repnz
xor
jg
xor
jo
imulb
ficoml
and
idivl
ja
cli
rclb
mov
xchg
jae
imul
pop
scas
xor
jns
ss
nop
lds
ja
mov
jae
push
dec
test
mov
cmp
lcall
std
mov
arpl
mov
outsb
mov
aam
aaa
add
cli
push
idivb
adc
mov
enter
mov
jns
mov
jne
imul
je
fdivrl
jp
mov
xor
in
jno
inc
mov
jae
in
cmp
aas
addr16
mov
jb
lods
imul
shlb
xlat
sbb
clc
cmpsb
hlt
jb
xchg
mov
je
icebp
mov
sub
jmp
je
les
lock
stos
adc
sub
insb
pusha
fcos
xor
loopne
jecxz
mov
fs
movsb
cld
xor
pop
pop
jp
push
dec
movsb
mov
pusha
cmp
xor
bound
and
and
insl
shrb
ret
sbb
repnz
lods
or
in
out
jmp
jge
loopne
xor
adc
xchg
pop
jp
jecxz
lret
cmp
negb
jb
repnz
stos
test
xor
test
cmc
js
and
mov
scas
cmp
mov
xor
jp
mov
mov
ss
cmc
jbe
mov
jg
rcl
stos
jmp
dec
sub
sub
mov
mov
mov
xor
aas
clc
inc
push
mov
xchg
stos
mov
inc
mov
xor
aaa
mov
pop
xor
arpl
inc
fs
xlat
ja
adc
mov
inc
mov
out
mov
loopne
mov
jge
mov
xor
adc
xchg
and
je
test
notl
mov
js
jmp
arpl
xor
ss
in
scas
scas
cli
stc
jo
xchg
xchg
mov
hlt
mov
jbe
fldcw
insl
jl
sti
jg
movsl
ret
stos
stc
dec
repz
and
test
inc
cmp
ja
jns
mov
fsubrp
jmp
lcall
push
jmp
lods
outsl
jb
ds
xchg
sbb
mov
sbb
xchg
inc
xchg
jl
sbb
mov
call
cmp
aas
sub
pop
xor
xor
scas
jbe
dec
scas
push
and
lock
xor
mov
jnp
jp
jmp
jp
je
dec
das
push
and
jmp
push
mov
mov
mov
jle
mov
je
and
mov
popf
xchg
imul
idiv
outsl
mov
mov
cltd
stos
and
stos
lret
ret
out
mul
stos
jae
jecxz
fwait
shl
xor
icebp
loope
test
sbb
mov
das
xor
pop
mov
mov
cmp
push
idivb
repz
decl
xchg
out
stc
xchg
add
xchg
mov
mov
imul
ret
cld
xor
test
dec
fstl
rcr
jge
jne
adc
movsb
sbb
mov
jl
call
int3
in
dec
jo
mov
ret
ss
fbstp
xor
cld
stc
out
jne
insl
loop
mov
daa
mov
push
mov
mov
std
and
or
mov
pop
scas
cli
sbb
stc
aaa
ret
cmp
insb
ret
popa
add
js
pushf
jp
and
idivb
cmp
loopne
repz
movsl
cmp
inc
jns
jb
loop
cli
out
stc
inc
sti
adc
jge
jae
arpl
pop
jg
mov
sbb
xchg
mov
es
scas
cld
mov
out
cs
iret
lock
sub
push
js
cmp
stos
cmp
test
testl
mov
jecxz
outsb
and
mov
xchg
mov
adc
cli
jmp
mov
jg
lock
mull
mov
loop
divb
rcll
divl
mov
jns
imul
mov
fidivs
pop
mov
addr16
mov
imul
and
sahf
stc
popa
sub
xor
mov
lods
xor
mov
and
jmp
mov
popf
arpl
and
es
cmpsl
mov
imul
xor
cmp
mull
aad
jecxz,pt
adc
jl
out
fldlg2
xor
mov
jmp
scas
and
xor
jae
dec
mov
ret
jg
mov
lock
int3
enter
mov
mov
xor
mov
out
mov
pop
imul
xchg
hlt
jmp
jg
jp
imul
mov
mov
cmp
mov
aaa
xchg
inc
cmpl
jl
and
mov
and
or
aas
xor
cmpsl
aas
je
imul
cli
ss
lock
scas
mov
push
inc
aad
cmpsb
ja
jp
outsb
lret
xchg
mov
stos
mov
pop
ss
and
sub
xsave
out
mov
and
test
cli
mov
mulb
mov
pop
jno
pop
push
icebp
dec
sbb
loop
cld
loopne
jmp
mov
test
jae
add
xor
pop
add
add
ljmp
mov
popa
jns
push
push
xor
add
addr16
fsubrs
clc
or
sub
pop
in
sbb
jo
cmp
xor
mov
stos
cmpsb
mov
mov
fidivrs
outsb
mov
idiv
jns
scas
ja,pt
dec
lock
mov
mov
loop
jb
das
pop
lods
mov
mov
aaa
xchg
add
mov
in
jl
push
pusha
pop
jae
sbb
push
add
and
imul
pop
lock
jp
mov
push
cmpsl
dec
cli
or
adc
sub
mov
ds
mov
int3
cltd
in
lahf
lret
jp
pop
call
test
xor
ss
fisubrs
mov
mov
das
cmp
imul
cmpsl
and
xor
icebp
mov
jae
mov
aad
mov
xchg
mov
mov
je
aaa
shlb
ret
popf
mov
inc
jno
leave
stc
mov
repz
mov
jo
je
mov
push
stc
xor
jecxz
lods
rclb
sub
mov
mov
daa
hlt
imul
xchg
jae
in
lds
xor
mov
add
lock
ret
mov
mov
mov
cmp
in
push
and
pop
mov
js
pusha
jno
and
xor
out
cmp
jns
arpl
incb
sbb
mov
cmpsb
jno
xchg
out
jb
jae
or
scas
jno
xor
cmp
lods
pop
sub
jl
pop
das
jp
pop
insb
lock
fdivrs
mov
mov
jl
cmp
imul
shlb
mov
jmp
insb
leave
mov
mov
jp
out
pop
mov
imul
scas
xchg
jo
lods
popa
pushf
adc
jno
mov
stos
inc
push
mov
repnz
sub
sub
hlt
cmpsl
fidivl
js
dec
jae
aam
in
inc
shll
lahf
repz
jno
mov
imul
inc
xchg
lods
daa
fdiv
cmp
addb
ja
mov
addr16
cli
add
addr16
mov
imul
shrl
imull
push
popf
mov
xor
arpl
cld
jns
jo
jnp
push
lds
jecxz
js
cmp
xor
mov
jno
test
lock
cmc
lods
sahf
insb
and
lahf
popa
movsl
mov
add
inc
sbb
mov
jbe
movsl
xor
xor
adc
mov
cmp
scas
repz
insl
mov
and
add
xor
int3
into
cmp
dec
cmovne
adc
lret
idivl
mov
jnp
insl
daa
jmp
mov
mov
insb
mov
ss
mov
outsl
inc
cltd
addr16
jno
ja
and
bound
sub
jp
out
aaa
loope
lock
adc
sbbl
imul
aaa
mov
mov
fdivl
ja
xchg
adc
ds
xor
xchg
pop
inc
sbb
and
mov
jmp
mov
push
clc
mov
mov
sbb
pop
mov
mul
pop
mov
insl
xchg
cld
mov
and
jg
jo
je
xor
shlb
imul
mov
jbe
fwait
cmp
mov
divb
cmp
icebp
lcall
divb
mov
nop
mov
mov
sbb
stc
push
mov
mov
out
repnz
jecxz
jmp
mov
call
sbb
in
sub
mov
js
stc
pushf
int
cltd
mov
dec
lret
cli
lds
jg
jp
cli
mov
adc
mov
mov
mov
jno
mov
insb
xchg
sub
addr16
jns
testb
push
lods
mov
jae
dec
cld
stos
mov
mov
xlat
mov
bound
out
dec
loop
cli
xchg
sub
jae
pop
push
or
popf
jo
cli
lmsw
popa
test
xorb
cmp
pop
cmp
mov
mov
icebp
and
out
sarb
jl
xchg
data16
icebp
lods
mov
andl
aaa
sbb
stc
mov
mov
andb
jo
push
mov
mov
push
test
xor
mov
inc
test
and
rcr
cld
lods
leave
stc
mov
mov
in
add
ljmp
jecxz
mov
mov
stc
aam
xchg
xor
movsl
jno
xor
out
sbb
xor
lock
xchg
rolb
mov
jmp
les
jg
pop
stos
sub
cltd
xor
outsl
clc
aaa
roll
sub
cld
repz
repnz
jne
into
mov
and
je
arpl
mov
fadds
imul
icebp
mov
repz
xor
in
mov
add
aas
leave
mov
fwait
loop
xor
out
mov
addr16
cli
inc
inc
imul
andb
mov
orb
je
mov
popf
jo
mov
mov
clc
jp
scas
je
dec
stos
insb
mov
ds
sub
fisubrl
xchg
xor
js
mov
adc
aaa
testb
repz
lods
pop
test
and
jo
add
adc
adc
xchg
push
sub
test
cmp
cld
notl
sbb
and
xor
mov
addr16
sub
js
cmp
gs
std
popf
cmp
stos
xor
loopne
mov
cwtl
leave
hlt
sbb
es
cli
test
ret
stos
mov
cmp
and
jg
and
jo
cld
xorb
pop
outsl
jb
popf
test
lods
mov
jbe
push
inc
scas
add
sub
xor
out
scas
sarb
cwtl
dec
mov
adc
cltd
xor
aaa
loop
ss
repnz
inc
jp
sbb
sbb
sub
insb
xchg
push
nop
xor
jo
xchg
pop
fnstsw
insb
lds
ja
int3
cli
iret
cld
sub
fcomi
jns
push
test
or
clc
push
fidivrs
ds
mov
xchg
mov
lock
aas
and
xchg
mov
sub
xchg
insb
mov
mov
incl
cmc
xor
cli
out
jae
and
mov
adc
andb
es
insb
mov
xor
mov
push
fwait
cmp
mov
mov
je
sub
mull
jo
das
cmp
das
mov
lcall
cmp
leave
das
mov
or
mov
les
mov
cs
mov
hlt
mov
scas
hlt
scas
sahf
jno
inc
in
adc
imul
pop
mov
dec
rcr
mov
idivb
dec
push
mov
jns
jno
mov
out
sbb
mov
sub
cli
icebp
jge
and
jno
js
ds
cmp
cmp
popa
mov
scas
stos
cld
notb
mov
dec
je
push
mov
fxam
ds
mov
mov
rcl
test
push
lea
stos
push
mov
mov
jl
jecxz
sbb
and
scas
pushl
dec
xor
push
sub
jmp
or
test
jg
and
push
jno
addl
or
repz
jo
jmp
in
cmp
xchg
divb
xor
mov
jg
xchg
or
scas
xchg
xchg
mov
lret
sub
mov
ss
dec
xchg
movsl
arpl
push
je
insb
dec
cld
inc
outsl
cmp
sub
jp
scas
out
icebp
push
push
sub
mov
mov
sar
in
divl
and
icebp
jo
pop
mov
mov
repnz
mov
insb
and
cld
pushf
imul
xor
sub
negl
jl
gs
repz
lcall
xor
add
ficomps
mov
int
xor
mov
and
bnd
fdivrl
pop
xor
jecxz
or
cmpsb
clc
mov
popf
lods
sub
repz
aas
mov
xor
clc
out
mov
mov
mov
aaa
ds
hlt
mov
mov
jae
bnd
cmp
push
xor
divl
xchg
aaa
adc
xor
jno
ret
mov
mov
imul
stos
testl
insb
lock
mov
mov
repz
imul
cmp
cld
js
addr16
mov
sub
mov
mov
imul
push
sub
mov
cmp
in
arpl
pop
pop
adc
cmpsl
sbb
nop
or
cmp
insb
in
stos
jmp
mov
jo
mov
jl
aaa
jno
jno
je
jb
xchg
arpl
jns
aas
stos
in
sti
stos
xchg
test
clc
dec
in
aaa
cmp
sub
cld
mov
lret
jb
aad
andl
stc
and
repnz
jp
lea
mov
addr16
and
mov
or
imul
mov
mov
jo
dec
mov
and
adc
insb
jge
scas
icebp
imul
fs
stos
and
xor
arpl
movsb
enter
fldenv
subb
mov
ja
out
ds
jp
std
cmp
dec
movsb
mov
fidivrs
and
sbb
cmp
mov
push
mov
stos
jno
lock
mov
jp
cmp
movsl
dec
cmp
jae
push
cwtl
jno
cli
popa
scas
mov
cmp
mov
cwtl
cmp
lcall
pop
dec
test
pop
stos
or
loope
sub
mull
xor
jecxz
xor
pop
out
xchg
or
sahf
jmp
pop
hlt
pop
mov
or
xchg
outsb
mov
test
jb
in
ja
cmpb
jmp
mov
imul
repz
sub
clc
or
outsb
stos
and
inc
and
mov
fidivl
gs
sub
insb
out
pop
xor
ss
cmp
cli
or
inc
imul
mov
add
lods
jo
xor
ds
xchg
aam
test
mov
jns
frstor
jmp
aam
pop
and
test
adc
sub
insb
cmp
add
mov
aaa
mov
sar
aas
mov
sub
xor
ss
fistpll
sub
cli
jecxz
arpl
mov
je
mov
cmp
addr16
scas
arpl
xor
repnz
xor
jo
cltd
inc
sbb
aaa
pop
and
jns
inc
push
mov
jo,pt
mov
cmp
xor
cli
hlt
mov
repnz
shll
in
xor
sub
xchg
js
mov
cmc
mov
imul
add
notb
cmpsl
fwait
mov
push
aas
jae
xlat
inc
loop
repz
cmp
sub
jg
cli
sub
arpl
insb
xor
test
xchg
mov
pop
jno
and
dec
fcomi
mov
std
mov
mov
jp
fwait
inc
push
and
js
insb
cmp
ljmp
jno
jo
adc
ljmp
sbb
mov
cmp
shlb
xor
mov
mov
das
imul
xor
adc
mov
jb
pop
mov
adc
mov
pop
lock
stos
cld
push
mov
mov
mov
cld
and
idivb
mov
in
nop
jbe
lods
mov
mov
ds
dec
jmp
xor
mov
and
xchg
andb
xor
mov
sbb
pop
xchg
jno
test
and
xor
movsl
pop
ja
jnp
mov
bound
jecxz
imul
xor
sbb
movsl
clc
iret
mov
sbb
cmp
cmpsl
xor
pop
xor
push
sub
lret
and
sub
mov
sub
imul
mov
out
testb
jb
cmp
insb
jae
nop
jnp
xor
mov
out
stos
rep
or
jb
mov
xchg
cmpsl
cmp
mov
loopne
ja
cld
push
clc
cmp
mov
pop
jae
pop
scas
or
or
xor
sub
xor
js
inc
in
push
stos
xchg
ficoms
fnstsw
test
int
imul
aaa
jl
xor
sarb
jl
xchg
adc
int
mov
idivb
xor
hlt
xchg
clc
xor
shl
cli
push
mov
icebp
jl
mov
push
rclb
jecxz
adc
cmpsl
mov
lods
sub
sbb
js
mov
mov
mov
stos
imul
sub
mov
cmp
cmp
shl
mov
test
fcmovu
jp
mov
push
cwtl
fnsave
mov
idiv
cli
outsl
jo
inc
and
and
xor
movsl
cli
ret
dec
mov
pushl
xchg
imul
ds
test
gs
sub
repnz
mov
push
test
mov
mov
gs
jns
xor
repz
add
stos
cmp
jp
out
sub
jno
testl
mov
cmp
sar
cmpsb
ret
xchg
or
mov
js
scas
push
repnz
adc
xor
outsb
test
out
sahf
jns
roll
cld
icebp
outsb
dec
xor
xor
rol
xor
mov
ret
mov
andb
insb
mov
mov
je
fidivrl
xor
sub
hlt
popa
cmp
xor
sbb
inc
cli
cli
sub
popf
cmp
jecxz
mov
lods
sbb
popf
jb
jp
movsl
xor
ja
xchg
cmp
jp
mov
repz
and
repnz
xor
test
sub
dec
cmpsl
mov
cmp
sbb
test
insb
in
cltd
fsubp
sub
mov
test
es
and
idivl
les
jmp
out
pop
lcall
mov
and
xor
cltd
xlat
loope
scas
jb
inc
call
icebp
mov
icebp
mov
mov
daa
mov
hlt
inc
pop
xor
inc
and
mov
inc
mov
imul
pop
and
mov
mov
je
mov
cld
popa
cli
mov
mov
loop
ret
mov
mov
lret
mov
push
mov
and
jae
adc
ret
inc
sti
xor
loop
inc
jno
or
fs
loop
ss
mov
sub
repz
out
je
dec
mov
xor
mov
cmp
sti
stos
ret
sbb
hlt
loope
jg
adc
mov
xor
arpl
and
adc
add
fcomip
aad
cwtl
mov
jne
shr
ja
ret
cwtl
push
int3
xor
outsb
and
cmc
out
adc
jo
repz
jmp
hlt
xor
imul
test
fisttps
ja
imul
clc
and
je
clts
push
test
push
ret
xor
imul
push
push
jle
push
jmp
jp
push
mov
popf
and
out
mov
andb
push
jp
dec
divb
sub
dec
cltd
mov
je
cmp
ror
hlt
loop
roll
mov
mov
je
sbb
mov
mov
fucom
sub
sbbl
xor
xchg
and
push
and
jp
imul
ja
test
adc
xor
mov
out
cld
cmp
mov
lds
lahf
xor
das
xor
jmp
mov
inc
push
mov
mov
jecxz
fdiv
mov
stos
stos
sbb
outsl
jo
cld
cmpb
testl
jns
cmp
lock
into
repnz
ljmp
add
stc
sub
je
mov
lods
repz
notl
dec
inc
mov
fwait
cmp
repnz
mov
push
xchg
daa
jmp
out
scas
daa
imull
lods
inc
jl
lods
xchg
mov
adc
add
sub
bnd
test
cmp
inc
push
inc
out
xor
and
test
adc
test
push
cmp
jg
lock
movsb
or
mov
xchg
and
mov
push
cli
test
and
sbb
push
fcomi
movsl
lock
cli
jl
mov
bnd
add
sbb
inc
ja
test
push
and
dec
cli
dec
cltd
mov
push
movsl
test
test
xchg
repnz
pop
repnz
into
jno
sub
xchg
push
test
inc
cli
push
mov
fs
icebp
mov
cmp
ja
test
ja
clc
stos
int3
lock
xchg
out
mov
mov
cs
insb
push
push
je
pop
mov
mov
inc
repz
jmp
jns
in
repz
mov
pop
xor
lods
cmp
mov
sarl
mov
fisttps
push
hlt
xor
mov
imul
cli
mov
ja
sahf
cli
test
outsb
cmp
jb
pusha
jecxz
jae
shl
popf
ljmp
dec
cmp
or
pop
sub
in
xor
in
mov
bound
hlt
mov
gs
lcall
test
jecxz
fcompl
cmp
ret
repz
ret
xor
test
aas
arpl
jge
out
sub
xchg
icebp
int3
idiv
rep
xchg
inc
jns
jecxz
dec
hlt
push
hlt
jmp
in
jecxz
pop
dec
mov
test
mov
cmp
out
icebp
out
mov
mov
imul
cli
mov
jl
and
mov
arpl
mov
popf
cli
mov
cmp
mov
aaa
lahf
mov
xor
xor
cmp
jmp
xor
stos
repz
imul
in
and
inc
je
in
mov
imul
int3
sbb
clc
insb
arpl
ds
add
mov
sub
sbb
ds
imulb
xor
scas
js
lds
imul
cmp
rorb
jmp
and
push
mov
mov
aaa
js
xchg
and
lcall
or
out
js
pop
scas
xchg
jnp
and
cmpsl
mov
and
mov
xor
cmp
jmp
jl
mov
xor
jp
sub
push
fidivl
in
cwtl
stos
jl
cmp
loop
mov
mov
mov
dec
fisubrl
addr16
sub
mov
ss
mov
mov
mov
mov
push
xor
jb
dec
jo
stos
jecxz
daa
icebp
mov
mov
jae
xor
pushl
cmp
pop
fcompl
push
pop
sbb
push
mov
pop
ja
cli
mov
cmp
push
dec
xor
mov
xor
pop
and
loop
repz
fsub
jns
repnz
test
mov
outsb
jae
mov
mov
mov
xor
jl
and
icebp
js
stc
lock
mov
jo
cmp
mov
xor
arpl
je
xchg
xor
nop
sarb
push
out
sub
repz
es
jp
and
and
pop
fdivs
mov
mov
jb
scas
ds
cli
and
data16
xchg
adc
xor
mov
imul
mov
testb
xchg
mov
jmp
es
pop
cmp
jp
mov
rcrb
cmp
mov
jg
lods
cli
hlt
cmp
lcall
add
or
out
xchg
aad
out
cmp
sarb
in
xor
mov
or
xchg
aad
add
imul
jae
aad
mov
jp
cmp
jne
and
xor
ss
mov
stc
pop
lods
arpl
icebp
xor
lock
popa
jo
imul
jl
inc
je
arpl
jns
push
outsb
mov
cmp
mov
sar
mov
xchg
sbb
add
xchg
mov
repnz
cld
repz
or
cli
jg
lock
movsl
sbb
clc
sbb
imull
rol
lods
jl
jp,pt
and
outsl
sarb
add
movsl
js
sub
lret
hlt
rorb
jo
cld
daa
aam
test
jmp
cmp
mov
cmpsb
in
ss
jne
inc
fidivl
mov
ja
cld
shll
addb
inc
push
sub
xchg
arpl
mov
icebp
scas
mov
pop
fmuls
or
mov
insb
jo
icebp
hlt
mov
ss
enter
stc
inc
jo
cmpsb
sbb
cmp
decb
mov
notl
mov
add
icebp
nop
adc
jo
xor
out
mov
ds
and
mov
daa
dec
cmp
push
mov
js
imul
stc
xor
shll
fcoms
mov
repz
and
pop
cmp
mov
inc
xor
sbb
lock
push
xor
and
popa
daa
mov
jb
inc
jno
je
mov
test
push
das
ljmp
jno
hlt
fstl
xor
popa
xchg
repnz
mov
or
xchg
sub
aas
xor
idiv
imul
mov
jmp
mov
ret
sar
jb
repnz
sbb
int3
imul
mov
xor
out
xor
scas
jns
in
pop
cmpsl
sub
push
cmp
loop
test
mov
hlt
mov
and
lea
jns
mov
or
jo
mov
mov
jno
adc
jmp
pusha
mov
imul
adc
cmp
adc
dec
cmc
inc
mov
ja
mov
mov
cmp
xor
jb
out
cmp
jmp
fwait
test
lret
jnp
out
add
dec
xchg
clc
addr16
xor
cmp
mov
je
cld
sbb
xchg
xor
jno
push
add
cmp
jne
ds
repz
fidivrs
idiv
xor
lock
aas
jp
pop
xor
sub
sub
xchg
stos
les
jns
rolb
xor
and
lods
shll
lods
scas
out
mov
push
je
and
pop
sti
mov
arpl
adc
mov
add
out
and
fsubs
test
xcrypt-cbc
cmpsl
adc
lea
imul
sub
jo
pop
ja
push
mov
add
scas
mov
div
dec
xor
inc
ret
inc
loop
aaa
pushf
dec
xchg
add
mov
xor
ret
jmp
cltd
out
hlt
mov
cld
jo
cmpsl
ds
aam
mov
jne
add
icebp
jae
xchg
js
mov
push
mov
jns
and
sub
ret
cmp
arpl
jg
push
daa
mov
cmp
imulb
iret
mov
jae
cmp
cwtl
mov
fsubl
sarl
jl
gs
cmpsb
mov
jp
test
lret
mov
test
cmp
cwtl
cmp
sbb
clc
push
mov
hlt
jp
adc
cli
icebp
loop
imul
mov
fdivs
cld
mov
sarl
mov
and
xor
mov
popa
pushf
xor
imul
mov
pop
push
sub
mov
imul
fdivrl
jo
out
je
daa
xor
lock
cwtl
dec
icebp
stos
push
mov
sub
mov
mov
cmpsl
cmpb
push
and
mov
inc
sub
mov
add
xor
adc
lock
in
pushf
cmp
hlt
in
mov
pop
lret
cmp
pop
cs
xor
test
jp
jl
enter
aas
je
push
push
loopne
mov
jp
stos
ja
das
mov
scas
scas
jg
ficompl
lcall
rol
mov
push
scas
stos
mov
xchg
outsl
inc
or
jecxz
mov
mov
push
test
in
jno
fisttps
xchg
mov
and
adc
js
lcall
cmp
subb
test
arpl
mov
jle
lods
mov
loopne
xor
mov
mov
mov
shlb
out
cmc
je
mov
mov
stos
mov
daa
jns
cmp
fs
aaa
sbb
fdivs
imul
push
out
dec
jb
sub
inc
mov
lcall
pop
or
jns
push
out
jg
popa
xchg
jae
pop
add
adc
mov
addb
jae
scas
sbb
loop
xor
clc
arpl
stos
and
pop
cli
or
jecxz
notb
cltd
jns
or
and
out
cmp
jecxz
pop
and
cmp
xor
mov
in
jo
xor
sub
lods
cmpsl
sbb
mov
loop
incb
aas
imul
repz
xchg
inc
cmp
or
ss
cmpsb
cmp
std
jo
insb
jp
test
sub
ds
push
jmp
dec
xor
fidivrs
xor
lods
xchg
sahf
dec
and
ds
mov
pushf
sbb
mov
mov
mov
lods
mov
dec
jg
mov
out
mov
sarb
and
hlt
xor
adc
jg
arpl
stos
into
mov
stc
xor
rclb
lock
lods
lahf
repnz
xor
xor
ds
aaa
cli
jo
sub
cld
hlt
mov
adc
lea
mov
mov
out
arpl
sbb
xor
jp
cmp
xchg
mov
in
mov
lahf
xor
fwait
xchg
or
pop
in
add
cmpsl
jbe
jno
out
xor
adc
mov
mov
aaa
jge
repnz
aas
testb
ja
subb
mov
xor
bound
fwait
scas
and
inc
mulb
lods
cwtl
das
xor
and
jb
cmp
or
mov
lea
or
push
sub
leave
or
xchg
mov
rclb
or
adc
arpl
cli
jmp
stos
outsb
xor
imul
mov
mov
dec
sbb
stc
out
mov
sub
lea
xlat
jl
js
pop
mov
cld
imul
or
ss
lods
mov
outsl
jb
cmp
cwtl
test
lds
sub
and
scas
popf
insl
hlt
jmp
in
xor
test
enter
stos
mov
nop
ds
sub
out
mov
jns
adc
cmp
mov
repnz
xor
test
mov
and
ret
cmpsl
test
ljmp
cmp
xor
aas
cmpsb
movsb
daa
stc
cmp
mov
mov
cli
pop
mov
aaa
arpl
xor
loop
cmp
and
je
loopne
mov
jb
hlt
mov
js
lcall
mov
xchg
sub
jmp
mov
cmp
xor
push
fs
insb
repz
mov
mov
shrb
arpl
pusha
sub
jno
idiv
xchg
or
mov
test
ret
ret
mov
lds
cmp
sbb
icebp
and
mov
adc
add
mov
lock
adc
adc
sub
jb
inc
mov
sbb
add
mov
pop
sbb
test
loopne
repnz
jb
and
and
ja
mov
hlt
xchg
cli
mov
sub
sti
mov
jp
jb
mov
incb
mov
test
xchg
std
sub
xor
test
cmp
and
enter
or
imul
lock
push
cld
or
add
stc
cltd
loopne
mov
mov
pop
push
arpl
hlt
cmpsb
mov
mov
cmp
hlt
scas
sub
mov
out
ja
clc
mov
in
out
scas
imul
bound
cli
mov
sbb
mov
lcall
xchg
pusha
call
mov
mov
fdivl
jecxz
mov
inc
add
dec
pop
cmp
dec
inc
adc
dec
loop
xchg
adc
stos
jg
loopne
xor
out
mov
mov
int
out
cmp
hlt
jmp
jno
mov
std
lock
clc
xor
mov
ret
shrb
test
adc
ja
mov
inc
jecxz
xor
jb
rolb
mov
jns
sbb
cmp
cmp
mov
mov
lock
js
and
ja
in
pshufw
mov
mov
mov
stos
test
jns
cli
aas
cmpsl
popf
jecxz
inc
adc
push
je
fistpll
fildl
dec
or
ss
mov
sub
je
imul
inc
xor
mov
sbb
mov
mov
jp,pt
jmp
xor
nop
inc
clc
jg
mov
outsb
stos
mov
xor
aas
bnd
and
xor
mov
xchg
shlb
cmp
lods
data16
jle
test
adc
jle
xchg
icebp
mov
aaa
mov
out
jo
sub
cmp
in
fucomp
lea
sbb
addr16
in
push
jno
xchg
repz
incl
stos
jmp
inc
rorb
das
cli
ds
cmp
jg
int3
adc
inc
je
cmp
nop
aad
arpl
out
jns
shrb
mov
iret
icebp
mov
js
inc
sub
xor
push
inc
decb
xor
outsl
inc
pop
jmp
xlat
stos
test
mov
aaa
xchg
scas
mov
cmpb
sub
js
sbb
jmp
insb
push
lods
out
jno
out
stos
fs
or
mov
mov
mov
sub
xor
stos
aad
mov
ljmp
push
mov
enter
test
js
xchg
idivl
xlat
mov
aam
sub
sahf
imul
movsl
and
mov
and
mov
cmp
hlt
xor
imull
jne
sbb
xorb
cmc
mov
stos
mov
lods
xor
and
enter
mov
jo
sbb
or
dec
mov
pop
xchg
sub
jb
xlat
leave
popa
shrl
and
lret
in
test
mov
int
jge
aad
ds
xor
cmpl
mov
sbb
mov
mov
mov
pop
scas
mov
loop
add
lock
mov
xor
cmp
call
jb
aaa
inc
clc
dec
lcall
ret
mov
mov
iret
test
adc
cmpsb
cmpsl
xchg
mov
and
outsb
xchg
push
in
js
imul
mov
repz
mov
es
lods
ficoms
inc
ds
adc
bndstx
xor
ret
push
mov
push
fidivrs
insl
xchg
rolb
mov
in
xchg
adc
imul
xchg
mov
sbb
and
mov
jge
and
inc
inc
divb
test
jbe
and
sub
fidivs
stos
fisubrl
jb,pt
ja
dec
cmp
pop
xor
jo
jb
ja
mov
fmuls
or
jo
sub
scas
inc
hlt
adcl
and
mov
jp
aas
bound
insb
imul
lods
and
cli
jb
adc
and
mov
ror
xchg
imul
loope
pushl
insl
mov
jb
mov
ja
fprem1
rol
insb
lods
add
and
adc
mov
mov
cmp
xor
sbb
mov
movsl
xor
faddl
shlb
scas
mov
repz
push
cld
bound
ja
cmp
mov
mov
push
xlat
stc
cmpsb
test
in
jo
testb
das
sub
mov
sbb
sahf
jb
cmpsl
scas
push
xchg
xchg
stos
les
jne
jp
test
clc
push
lods
jae
dec
int3
push
mov
mov
mov
xor
cmp
mov
int
jno
lret
xchg
mov
imul
insb
push
test
ds
cld
and
xlat
stc
clc
out
xchg
xchg
sbb
add
js
push
cmp
xor
adc
jmp
int3
xchg
aad
test
stc
fdivrp
cmp
movsb
aaa
inc
push
push
mov
sbb
sub
push
cmp
enter
mov
mov
nop
cmpsl
mov
dec
pushf
cmp
scas
jno
rcrb
loop
out
inc
push
mov
and
int3
sbb
cmp
shrl
test
pop
jns
ds
or
enter
push
cli
cld
mov
mov
lods
jmp
cmp
mov
mov
mov
cmc
cmc
je
cmp
repnz
out
icebp
out
add
cld
lock
ja
xor
jb
jns
arpl
loop
stos
add
jno
stos
sub
sbb
bnd
adc
mov
mov
adc
jno
mov
xor
test
inc
stc
lock
lock
repnz
enter
cmp
xor
mov
stos
mov
scas
scas
push
test
xchg
jl
jb
xlat
bound
xchg
push
or
mov
testl
jo
jg
mov
je
mov
aad
outsb
mov
jno
mov
lods
mov
dec
xor
sbb
std
sbb
or
cmp
out
repz
lds
sbb
mov
int
aad
pusha
scas
sub
and
sbb
mov
sarl
fs
or
sub
scas
sbb
jecxz
mov
sub
stc
xor
and
inc
dec
mov
add
cmp
mov
add
imul
jne
cmp
clc
adc
push
xor
and
mov
jecxz
bound
mov
push
cmpsb
lret
rcrb
lods
jp
jl
mov
xor
mov
js
cmp
xor
fdivp
sbb
shll
hlt
xor
sbb
and
aaa
call
or
mov
pushf
xchg
sbb
add
or
adc
or
imul
sahf
mov
push
rol
imul
scas
adc
enter
out
mov
mov
add
xor
adc
mov
les
ss
fmuls
dec
lods
mov
xor
pop
dec
hlt
cs
dec
dec
cmp
pop
add
mov
cs
push
ja
push
jbe
push
loop
loopne
stc
jp
add
cmp
sub
mov
mov
inc
imull
cmp
add
inc
arpl
push
int3
ja
cs
std
jle
xor
outsl
aas
rolb
jns
fildll
sub
jg
in
daa
cld
xchg
cli
jmp
add
sbb
push
test
lods
and
cmp
jecxz,pt
insb
jno
incb
dec
mov
insl
roll
sbb
cmp
sbb
mov
test
lods
jno
mov
lock
xchg
call
pop
push
or
test
test
mov
push
test
es
je
sti
xor
mov
or
mov
sbb
popa
cli
and
addr16
sbb
dec
cmpsl
divl
add
in
popa
stos
clc
icebp
mov
loop
push
es
sub
ds
mov
inc
xor
ss
mov
mov
cmp
mov
lods
xor
mov
lods
repnz
jns
mov
cs
cmp
xor
out
clc
pop
cmp
dec
in
sub
jb
ret
mov
repnz
cltd
jg
js
sbb
sbb
add
mov
jle
add
xchg
sbb
push
mov
mov
das
cmp
bound
jae
sar
pushf
cltd
idiv
pop
pop
jmp
mov
shll
insb
cld
xor
popa
xor
add
cli
ss
in
jb
ljmp
int
jns
sub
and
bound
xor
imul
sub
jg
xlat
sub
arpl
enter
cli
notl
loop
cmp
inc
inc
sbb
loope
mov
jge
sbb
mov
xor
xor
jno
sub
icebp
mov
mov
xor
sbb
loop
clc
jne
loope
mov
out
ds
aam
test
mov
mov
mov
adc
pop
in
mov
dec
js
scas
mov
ljmp
mov
cwtl
dec
ds
lods
jmp
imul
inc
lahf
popf
lcall
mov
jge
jp
shlb
cmp
mov
and
dec
and
pop
mov
out
bound
mov
popa
filds
data16
cli
outsb
jp
jae,pt
cmpsb
cmp
sub
mov
sbb
inc
addr16
repz
mov
adc
movsl
jno
divb
adc
cmc
xchg
jbe
mov
in
cmovge
shlb
jp
adcb
mov
pop
lods
add
sbb
mov
xor
test
push
ja
inc
fidivrl
mov
and
in
lcall
push
cmp
xor
or
cld
in
mov
inc
mov
cli
insb
mov
fwait
das
mov
jmp
inc
jl
pop
imul
jo
pop
cmp
jns
sbb
and
hlt
mov
repz
xor
xchg
xor
push
loop
push
mov
rcl
aaa
jp
sbb
adc
cli
divb
mov
xchg
aad
mov
add
dec
xchg
je
test
jo
inc
cmp
das
cli
mov
cvtps2pi
xor
and
jecxz
sahf
imul
mov
mov
loope
aaa
cli
insb
sti
mov
popf
jo
movsl
cmp
jae
repz
andb
clc
jae
scas
cmp
mov
cmp
mov
aas
pop
xor
js
inc
repz
and
shrb
sti
movsl
dec
xchg
imul
jns
clc
pop
pop
inc
imul
in
adc
push
lock
mov
sbb
xor
jae
jo
in
jecxz
addr16
in
xor
jp
adc
xchg
je
mov
test
imul
cmp
sub
dec
mov
dec
lock
shrb
mov
mov
pushf
mov
jo
sub
aas
xor
push
xor
inc
jl
cli
insl
out
nop
aas
fdivrp
push
test
lods
mov
addr16
jle
arpl
and
idiv
xor
stos
mov
clc
popf
pop
mov
and
jns
call
jo
repnz
cmp
jb
jl
cli
mov
clc
jno
cmp
clc
jge
adc
xchg
add
fdivrs
mov
jns
sub
subl
xlat
sub
pusha
cmp
jb
hlt
notl
add
mov
mov
and
in
ret
cmpsl
xchg
stc
adc
mov
sub
lcall
lcall
mov
jae
lock
fnstenv
test
cmp
xor
test
in
mov
outsb
mov
pop
mov
clc
xor
scas
mov
and
movsl
push
mov
movsl
icebp
clc
xor
xor
aaa
xor
mov
or
push
sar
xor
adc
sbb
movsl
lods
push
jne
jne
inc
arpl
pop
loop
mov
xchg
mov
repnz
arpl
adc
sahf
xchg
loop
clc
cld
mov
mov
xchg
sub
mov
mov
ss
pop
sub
imul
in
sbb
xor
xchg
pop
pop
lret
test
jns
cmp
cld
mov
mov
mov
test
ljmp
imul
fcmovbe
loopne
cld
pop
xchg
cmp
or
xchg
mov
testb
repz
ja
je
imull
and
jg
in
ret
out
and
jg
sbb
mov
jb
stc
loop
and
mulb
inc
addr16
fs
sbb
adc
or
js
mov
jo
pop
jae
adc
ds
adc
fisubrl
add
mov
imul
cmp
or
jae
mov
mov
jns
adc
mov
test
xor
mov
jp
sub
mov
negb
adc
or
aas
out
divl
pop
mov
cmp
lods
jmp
xchg
dec
out
mov
push
push
xlat
mov
je
adc
js
or
ret
rclb
frstor
movsb
mov
push
mov
and
mov
or
cmp
jecxz
shrl
test
clc
cmp
adc
js
sbb
aaa
mov
sbb
xor
test
mov
mov
mov
mov
sbb
cs
mov
hlt
mov
and
scas
std
jmp
movsb
push
push
stos
mov
mov
lcall
jb
xor
jno
jne
mov
insl
mov
jae
jns
jl
jo
xchg
sbb
cmp
mov
popa
jp
aaa
sub
mov
arpl
lds
fidivrs
lret
nop
push
cmp
mov
aaa
ds
sub
push
out
scas
push
imul
pushf
mov
insl
mov
out
mov
pusha
dec
cmp
mov
jo
mov
test
fcoml
cmp
scas
mov
jb
jge
idiv
nop
sbb
xor
mov
cmp
jle
xor
xchg
repz
push
in
mov
push
xor
loope
add
ljmp
outsb
and
mov
push
xchg
jmp
mov
mov
mov
mov
jmp
jmp
or
jmp
sub
ss
scas
jp
jns
sbb
push
fadds
popf
ret
scas
sub
ljmp
adc
sub
cmp
loop
sub
jmp
scas
test
sub
and
sub
dec
xor
fldcw
push
mov
sarl
sub
sub
cmpsb
cli
and
jno
jmp
sub
xor
or
adc
fisubrs
push
mov
icebp
cmp
mov
lahf
aas
lahf
push
outsb
insb
jg
mov
repnz
jb
arpl
xor
sbb
test
xor
mov
idivb
out
ss
ret
mov
inc
cmp
cmp
jmp
stos
mov
xor
lea
mov
jl
mov
add
bound
hlt
clc
mulb
ds
outsl
adc
cmp
add
stos
cmp
repnz
lock
stos
push
mov
test
data16
fldenv
je
xor
mov
mov
mov
mov
adcl
sbb
imul
cmp
lret
mov
jecxz
xor
std
xor
xchg
add
mov
repz
stc
xchg
push
movsb
ja
cli
repz
add
cmp
aaa
mov
je
into
hlt
xor
test
sbb
sbb
test
pop
fs
enter
clc
sub
xor
inc
cwtl
lods
cmp
cwtl
mov
hlt
inc
add
outsl
mov
ljmp
push
lods
mov
repnz
bound
jp
ret
pop
xor
dec
inc
dec
push
mov
mov
sbb
in
test
pop
fildl
jae
ss
jecxz
xchg
gs
and
sahf
icebp
mov
xor
cmp
lcall
sbb
arpl
cmp
inc
jmp
cmpb
stc
stos
jae
jmp
out
fdivs
mov
ljmp
imul
aaa
add
xor
mov
mov
je
aas
jmp
mov
imulb
mov
loop
imul
jno
mov
mov
jle
mov
mov
cmp
jo
outsb
sub
bound
movsb
test
enter
adc
dec
fs
sub
xor
das
nop
cld
xchg
mov
jecxz
ja
add
stc
lock
push
pop
ret
lods
loop
mov
lods
outsb
mov
dec
add
xor
sub
pop
mov
ja
or
mov
out
and
outsb
inc
sub
shll
pushf
push
das
add
pop
mov
mulb
mov
repz
sahf
push
enter
mov
pop
test
icebp
scas
jl
adc
jmp
jb
mov
stc
lock
or
int
sub
mov
mov
scas
mov
aas
push
jo
cmp
sbb
imull
sub
xor
neg
and
aas
mov
lock
hlt
xor
xor
dec
jl
in
data16
test
mov
mov
sarb
sar
jb
xor
in
mov
xor
jl
cmp
adc
fsts
xor
mov
test
mov
xor
inc
fidivrl
push
imul
int3
xor
xchg
inc
sbb
xchg
mov
mov
mov
call
cmp
test
mov
mov
je
mov
mov
out
mov
mov
push
xchg
pop
lcall
cmpl
repz
xor
decl
pop
jl
or
sub
or
aaa
sub
lods
pop
mov
lods
sbb
xor
fs
mov
xor
in
jne
lock
xlat
sbb
arpl
xor
jnp
test
mov
xor
dec
in
in
or
fs
push
xor
mov
notl
jl
sbb
jo
pop
jae
or
stos
xchg
in
xor
lock
je
lock
jb
repnz
loopne
sub
testl
and
and
mov
stos
bnd
lcall
mov
cmp
arpl
cmp
sbb
rclb
inc
mov
pop
lock
int
xor
bound
loop
inc
lea
gs
punpcklbw
xchg
shl
xchg
xor
mov
push
adc
clc
dec
jl
xor
lock
pop
pusha
mov
jb
cltd
xlat
fsubs
fcoms
cmp
es
ss
mov
mov
repz
cmp
sub
mov
rcl
arpl
mov
sub
repz
out
jns
cltd
push
xorl
mov
imull
icebp
out
cld
in
repz
sub
ljmp
xor
mov
push
icebp
fldl
jbe
aas
out
nop
mov
or
mov
adc
and
icebp
jno
ja
lcall
mov
lods
push
aas
lahf
jno
insl
cmpsb
jae
ljmp
lock
xor
cmp
inc
add
out
test
lods
jl
mov
cld
cld
mov
xor
je
aaa
insl
jle
js
mov
into
arpl
das
sub
sub
xor
ret
lret
or
sbb
negb
mov
ds
push
add
icebp
loop
mov
inc
out
imul
pop
js
in
jmp
jg
jg
inc
cwtl
ja
add
cmp
jmp
outsl
push
mov
xor
cli
lds
jp
aaa
mov
mov
stc
mov
hlt
insb
adc
imul
je
add
repnz
sbb
loopne
xor
call
or
imul
mov
outsl
notb
stos
nop
loope
jp
arpl
push
sub
sub
mov
scas
mov
aaa
in
mov
mov
cmp
cmp
mov
sti
lea
jb
push
and
stos
xchg
shrl
add
in
sbb
call
sub
lods
and
jne
cltd
cs
insb
mov
mov
out
lea
jp
and
xor
mov
mov
mov
cmp
loop
pushf
cmp
test
jmp
je
add
mov
mov
jo
repnz
cmp
mov
cmp
jno
xor
ja
test
dec
pop
ret
mov
push
lret
or
xchg
arpl
mov
cwtl
lods
mov
mov
hlt
inc
push
xchg
add
xor
jmp
loop
sub
shrb
into
pop
and
mov
pusha
xchg
in
stc
ds
repnz
xor
std
sahf
out
mov
inc
and
mov
xor
mov
xor
nop
jmp
ja
nop
arpl
decb
mov
sbb
nop
pushf
cli
cmp
mov
in
scas
mov
xor
clc
cmp
mov
lods
test
sbb
divl
int3
push
sbb
sub
mov
fidivrs
in
mov
sbb
mov
insb
inc
mov
pusha
cmp
adc
bound
call
xchg
fwait
icebp
mov
sbb
mov
out
ror
imul
clc
mov
mov
sub
aas
gs
mov
stc
mov
sub
push
mov
repz
push
std
xor
insb
sbb
dec
sbb
fsub
adc
ljmp
loopne
aas
aaa
decb
bound
cmpsl
mov
faddl
mov
hlt
push
jmp
mov
inc
sbb
dec
inc
xchg
adc
jae
cltd
sub
mov
and
mov
outsb
or
popl
scas
mov
rorb
lock
xchg
scas
cmp
lods
sahf
stos
cmp
pop
fcmovu
mov
pop
pop
lret
dec
cmpb
insb
and
jno
test
stos
inc
test
jmp
mov
mov
cmp
divb
frndint
test
aaa
adc
mov
stos
mov
mov
mov
fucom
icebp
xor
lahf
call
mov
js
mov
jl
mov
mov
jb
test
mov
cmp
jmp
fisubrs
idivb
push
imul
xor
jb
xor
xor
adc
xor
push
repz
mov
lock
cltd
call
in
clc
stc
stc
cwtl
mov
scas
add
int
jno
jno
mov
fnstcw
adc
daa
mov
and
clc
mov
jl
stc
and
mov
mov
call
test
aaa
loope,pt
jg
lock
lock
and
inc
cld
in
js
xor
inc
call
mov
clc
enter
js
cltd
push
fstl
ret
and
cli
mov
popf
push
mov
fwait
jo
cmp
jno
and
repnz
cmp
add
jo
repz
sub
movsb
xor
sbb
mov
cmpsl
sub
andl
lock
call
or
repnz
call
test
lea
ss
outsl
lret
push
inc
and
scas
pusha
iret
cmp
add
hlt
adc
das
and
stos
js
xchg
stc
xor
inc
es
sub
test
scas
pop
nop
jmp
mov
mov
mov
inc
push
cwtl
fs
or
mov
sbb
out
push
cs
fsubs
aaa
mov
popa
jb
cld
xor
or
cmp
jae
sbb
test
xchg
jo
lock
es
movsl
jo
sub
aas
mov
xor
lock
lock
stc
daa
nop
insl
push
aas
cmp
mov
pop
inc
jmp
or
lret
xlat
dec
push
or
inc
jae
je
jmp
hlt
cmp
xor
mov
repz
pop
xchg
inc
shll
cmp
fstl
xchg
in
bound
subl
cmp
inc
arpl
lods
ss
andb
sub
idiv
pushf
repnz
and
xor
out
jl
sub
mov
lods
pusha
lock
daa
mulb
jecxz
icebp
fwait
stos
mov
adc
mov
imul
jecxz
ss
xchg
mov
sbb
popf
or
cld
sub
jno
das
repnz
pop
mov
pop
out
adc
jmp
in
cld
sbb
jp
mov
fdivr
imul
out
sub
xor
mov
das
rep
sahf
pop
cmp
rorb
popa
inc
sbb
das
stc
inc
insl
sarl
arpl
jmp
rclb
repz
stos
aaa
cld
ret
bound
test
adc
sub
add
fldlg2
xor
pop
pop
addr16
jecxz
into
stos
add
sub
mov
sbb
cmp
aaa
jl
mov
mov
cmp
mov
inc
mov
bound
jp
test
hlt
xchg
xlat
push
pusha
xor
mov
movsl
xor
mov
bound
lods
imul
arpl
mov
jb
test
mov
jp
out
jo
jb
mov
push
fwait
stc
sub
jnp
or
lods
arpl
jae
mov
daa
mov
insb
clc
cli
and
stc
arpl
mov
rcrl
mov
out
xor
addb
pushf
mov
mov
cli
cmc
pusha
insl
push
sbb
or
pop
and
out
repz
jecxz
movsl
arpl
ljmp
imul
je
and
shl
repnz
mov
jae
in
jecxz
ds
mov
add
xor
shl
ds
push
jecxz
mov
sahf
adc
mov
xor
stc
pusha
mov
imul
cmp
cmp
xor
cmpsl
lods
mov
sti
mov
js
jl
mov
enter
fadd
cmp
mov
sbb
mov
in
lods
aas
sub
mov
pop
sahf
jo
test
mov
mov
jl
mov
jg
mov
jecxz
mov
jl
in
xor
mov
and
cmp
repnz
jo
in
pop
gs
gs
jae
jecxz
outsl
fldt
cwtl
push
mov
mov
mov
aas
xor
imul
xor
mov
xor
cs
xchg
into
jecxz
add
dec
xor
xor
stos
mov
out
sub
pop
push
pop
popa
adc
pop
aaa
daa
jmp
push
adc
je
sub
sub
xor
pusha
repz
jp
sbb
out
mov
mov
adc
mov
mov
jle
flds
mov
jle
mov
cmpsb
mov
ds
jp
fs
scas
mov
or
cmp
shlb
lods
adc
mov
test
repz
test
repnz
rcr
push
xor
loop
jg
jp
cmp
lcall
xchg
shl
xor
mov
cmp
jae
mov
jecxz
mov
jp
mov
vpcomb
stc
jge
dec
xchg
pop
bound
addr16
imul
sub
sub
mov
nop
jb
das
aam
jns
or
mov
gs
icebp
adc
clc
loop
xchg
lock
hlt
xor
cmp
sahf
add
stc
mov
mov
aaa
mov
mov
mov
sar
mov
in
pop
gs
add
lock
sub
loopne,pt
xor
stos
or
les
cli
jg
imul
jp
stos
sub
cmp
loopne
mov
inc
test
in
mov
insb
ficoms
lock
jb
rol
xor
mov
sti
stos
jecxz
sbb
mov
fwait
mov
xor
adc
sub
fidivs
movsb
mov
mov
scas
outsb
cli
sub
lret
sbb
mov
mov
div
in
lahf
sub
jl
pop
stos
xchg
clc
fbstp
cmp
dec
mov
gs
cmc
ss
xor
inc
cmpsl
mov
fsubrl
mov
imul
mov
stc
push
sbb
ljmp
ds
xchg
test
xchg
mov
mov
pop
imul
ret
dec
and
sbb
cwtl
in
xchg
mov
pop
arpl
pop
jp
mov
hlt
xor
jno
jae
xor
sub
mov
jl
jb
subb
mov
mov
xchg
mov
repnz
xchg
out
adc
sbb
mov
or
shll
shll
sahf
jp
jecxz,pt
xor
out
stos
js
cmp
mov
mov
pop
inc
xchg
xchg
stc
mov
pop
js
shll
aas
loopne
mov
clc
push
xor
test
out
jecxz
mov
ficoms
xchg
sub
repz
shll
popf
or
bound
aas
xor
lret
add
repnz
jp
js
lock
call
cltd
xor
arpl
push
mov
mov
ds
in
sti
insb
xor
adc
outsl
mov
imul
imul
cmp
lods
add
push
mov
lret
mov
test
mov
xor
adc
ret
xchg
xchg
aas
lods
push
mov
idivb
mov
sti
push
outsl
mov
xchg
and
imul
jb
sub
addr16
repz
test
cli
insb
sub
sbb
mov
sbb
popf
or
daa
insl
xchg
in
cmp
out
dec
idivl
cwtl
decb
pop
clc
cli
in
scas
ja
out
jmp
xchg
insb
jb
and
mov
ret
loope
jl
std
in
pop
aaa
mov
jp
stc
mov
outsl
mov
imul
and
mov
add
div
mov
sub
jno
mov
ficomps
add
ss
mov
bound
mov
insl
ss
rol
cmp
jo
outsb
and
inc
mov
mov
fsts
jno
add
mov
sub
jbe
cltd
loope
xor
mov
lock
and
xorb
xor
std
imul
xor
xlat
push
dec
fs
and
bound
hlt
addr16
mov
mov
xor
cli
xor
sub
xor
mov
xor
pop
cld
scas
mov
sub
pop
xor
mov
loopne
and
jge
inc
popa
arpl
mov
jg
inc
mov
mov
mov
test
lret
loop
cld
jg,pt
mov
mov
outsl
imul
mov
mov
stos
stc
push
mov
lds
cli
xor
xchg
xchg
and
es
cmp
stos
mov
mov
jae
scas
mov
or
or
or
mov
xchg
mov
pop
aam
sub
popf
jno
rclb
in
dec
xchg
imull
xor
ds
mov
pop
adc
mov
stc
lods
lcall
loop
mov
xchg
jecxz
mov
mov
pushf
mov
aaa
ret
mov
fbld
and
xchg
sub
mov
leave
adc
in
jo
orl
mov
mov
jne
push
negl
mov
sahf
leave
mov
jno
pop
loop
insb
jns
cmpsl
or
lret
pushf
repnz
mov
adc
mov
mov
scas
scas
andb
in
cli
jae
lahf
ja
das
push
dec
stos
daa
mov
xchg
dec
sahf
and
mov
sbb
cmp
loop
addr16
adc
jg
test
mov
and
in
and
mov
insb
sub
cmpsb
lock
repnz
ret
inc
mov
jmp
out
aas
jp
js
int3
outsb
sub
in
mov
testl
mov
mov
jno
mov
hlt
push
pop
test
mull
ja
xor
xchg
mov
xor
xlat
das
sub
outsb
xchg
or
loope
inc
push
cld
xchg
adc
aaa
adc
mov
ds
xor
inc
adc
imul
mov
jo
jb
ss
mov
jno
mov
mov
int
enter
adc
mov
stc
jp,pn
pop
cmp
aas
insb
mov
bound
in
test
mov
test
cmp
push
mov
mov
divl
fmull
xchg
xor
test
mov
das
mov
cli
add
stos
repnz
jmp
test
jae
xchg
dec
mov
and
cmp
mov
insb
imull
xchg
mov
enter
push
xchg
xchg
jl
test
jle
cwtl
repnz
scas
icebp
scas
sub
xor
clc
ja
and
shlb
jecxz
fst
and
xchg
jp
test
pop
mov
xor
clc
aaa
adc
xchg
jb
cmpl
xor
cmp
cmp
jp
jl
cwtl
add
mov
dec
stos
lods
test
in
imul
mov
xor
pusha
add
hlt
add
mov
jg
and
xor
xor
add
mov
lods
mov
adc
test
xor
cwtl
cmpsb
imul
repnz
test
sti
cltd
popa
sub
sub
inc
clc
lods
add
addr16
cmp
imul
fwait
in
jmp
inc
sub
cli
xor
add
xor
adc
repz
mov
mov
cmp
arpl
cli
jo
cli
inc
sub
shl
mov
clc
out
jge
adc
bound
ja
cs
adc
jno
stos
test
in
jne
inc
push
stc
add
cmpsl
cmp
mov
mov
call
enter
and
lcall
popf
sarl
bound
ret
sub
andl
test
mov
divl
jle
cld
mov
cmp
adc
adc
stos
mov
icebp
lock
jecxz
mov
out
xor
inc
stc
popa
pop
adc
mov
xor
repz
mov
cmp
sub
mov
sub
fnstenv
xchg
push
lods
icebp
jno
lock
mov
mov
jg
jg
push
mov
sub
hlt
xchg
ds
imull
mov
jb
mov
cld
jo
cmp
ja
push
pusha
xchg
mov
or
push
sarb
jge
vprotw
subl
mov
insb
mov
movntps
adc
mov
jmp
pop
int
pop
int3
mov
cltd
imul
decb
pcmpeqd
adc
mov
and
jns
mov
ret
cmpl
cmp
fadds
jl
dec
xchg
ss
jo
adc
bound
push
ljmp
jg
int
or
iret
mov
dec
std
sbb
pop
mov
push
scas
js
mov
icebp
ret
xchg
scas
pop
mov
aas
repz
mov
xor
insl
or
mov
mov
lds
or
add
ss
dec
sbbb
jecxz
repnz
xor
jae
mov
sub
jns
xchg
lret
test
mov
and
out
stc
sbb
pop
xor
sub
mov
aaa
cli
dec
push
push
mov
bound
jo
cld
jg
subb
js
cmp
xchg
cli
stc
xchg
aas
inc
fsts
mov
cwtl
fisubrl
add
mov
adc
jb
mov
notb
arpl
push
push
test
outsl
js
test
arpl
mov
in
cmp
xor
pop
mov
filds
jb
ss
repnz
sbb
divb
pop
mov
xchg
xchg
hlt
pop
mov
mov
dec
sahf
les
jl
clc
icebp
aad
jbe
sub
xor
dec
sarb
scas
xchg
out
addr16
xor
sub
ret
popa
pop
mov
insb
push
inc
popa
or
jb
inc
and
scas
aaa
test
inc
repnz
insl
xchg
in
push
add
jmp
cmp
repz
clc
cmp
add
jmp
repnz
cld
mov
mov
arpl
jns
cwtl
popf
insb
lods
mov
mov
mov
ds
cmpsb
mov
mov
pop
mov
cmpsl
push
jecxz
adc
mov
test
sarl
adc
bnd
sbb
sbb
and
fwait
cld
add
fidivrl
aas
stc
testb
imul
and
mov
push
pushf
and
js
mov
cmc
mov
push
sub
mov
mul
inc
repz
test
or
inc
fnstsw
arpl
out
icebp
cmp
std
in
push
insl
int3
incb
pop
pusha
pop
lods
xor
mov
inc
push
aaa
hlt
ret
lock
scas
ds
jae
pop
imul
insb
lods
ret
clc
jmp
aaa
aas
mov
cwtl
jae
xchg
xchg
jns
ljmp
mov
push
mov
jo
jecxz
cmp
sbb
mov
cmp
mov
js
sbb
lock
arpl
inc
ret
je
sub
mov
ret
push
test
inc
nop
mov
mov
cwtl
sahf
insb
in
repnz
addb
add
popa
mov
push
xor
mov
or
fidivl
mov
insb
incb
mov
pop
test
mov
jb
jns
xor
insb
cmp
ja
or
cmpsb
ret
shlb
lea
xor
adc
imul
pop
mov
mov
fwait
stc
add
and
sbb
lahf
scas
pop
loop
jecxz
and
adc
xchg
sahf
jno
lcall
xor
inc
cmpsl
add
xchg
inc
fstps
movsl
add
stc
je
sbb
mov
mov
sub
xor
mov
fstpl
lock
mov
lcall
test
test
and
loopne
stc
mov
bound
ret
lgs
gs
lea
sbb
loop
jmp
and
aas
or
fwait
jo
outsb
pop
fnstcw
shrb
sbb
mov
rolb
jmp
sbb
pushf
xchg
scas
mov
mov
das
xor
in
mov
imul
mov
adc
clc
ja
sbb
psrad
daa
jo
cld
xor
subb
jle
mov
mov
jg
jno
xchg
pusha
imul
xor
mov
sbb
pusha
cli
mov
arpl
push
in
ret
bound
push
scas
xchg
test
jecxz
repnz
and
jmp
mov
xor
cld
cmp
je
aam
cmp
cmp
sbb
mov
inc
jb
fcmovu
push
test
mov
mov
ds
mov
bnd
mov
mov
daa
testb
sbb
outsb
orb
ds
sub
int
ljmp
inc
adc
aad
pop
pop
dec
ret
fdivrs
mov
sub
in
xor
add
sub
cmp
mov
dec
push
ljmp
data16
mov
clc
fidivrs
clc
dec
mov
pop
cmp
xchg
mov
jecxz
mov
idiv
mov
js
imul
stos
jo
push
icebp
nop
sbb
test
pop
and
push
dec
jmp
xor
dec
sbbb
cltd
mov
xor
mov
popa
hlt
xor
mov
jecxz
and
in
and
cld
jno
clc
mov
mov
pop
test
add
mov
or
scas
xor
rcrb
mov
and
and
jo
inc
xor
enter
pop
mov
jl
fcoml
push
ss
lret
aad
cli
call
lret
add
test
mov
pop
test
push
sahf
jae
movsl
xor
aas
scas
push
je
inc
and
movq
lahf
in
jmp
push
out
jns
out
mov
add
jecxz
xchg
cmp
pop
xchg
cwtl
mov
mov
lods
mov
repnz
push
xchg
scas
jo
mov
into
jae
push
test
bound
push
sbb
mov
jmp
in
mov
cli
adc
fs
mov
mov
jo
mov
xor
fdivrs
stos
cmp
sub
clc
jecxz
mov
jl
inc
push
je
out
mov
je
aas
push
mov
pop
mov
cmp
cmp
mov
mov
jno
loope
pushf
mov
sbb
jbe
mov
xor
add
jp
out
ja
popa
dec
jno
hlt
cmp
outsl
lock
in
ss
jb
mov
in
jno
cmp
jb
inc
js
mov
sbbb
mov
rep
cs
inc
insb
repnz
aaa
mov
jecxz
mov
std
out
mov
lock
push
dec
inc
scas
imul
cmp
leave
lock
ja
mull
and
mov
cmp
std
ret
push
sub
stos
out
sbb
jl
push
and
adc
sahf
mov
mov
mov
repz
out
xor
mov
add
cmpl
mov
aam
out
jno
test
xor
jbe
nop
sbb
adc
sbb
scas
jp,pt
jmp
ja
cwtl
insl
xor
sbb
scas
jb
popa
inc
sub
in
popa
insl
loopne
mov
clc
mov
pop
adc
xchg
flds
adc
fidivrs
and
stos
mov
bnd
cli
mov
test
xchg
jae
mov
lret
or
out
in
xor
add
ss
hlt
idivl
cmp
inc
dec
adc
scas
or
jae
mov
adc
jns
ret
ljmp
cmp
or
scas
es
sub
mov
and
push
pop
loop
mov
mov
sbb
test
push
pushf
iret
pop
sbb
nop
hlt
jo
sub
fsts
cmc
and
xchg
jmp
imul
jb
lret
popf
fwait
xor
test
xor
or
ja
cmp
and
xchg
cmp
xor
mov
sub
int
add
je
dec
mov
jp
jo
cli
test
and
and
lods
jmp
xor
sbb
bound
pop
insl
mov
adc
adc
bound
test
xor
push
test
cmp
test
adc
jmp
push
xchg
mov
fimull
push
fistpll
mov
bound
inc
jo
jge
jmp
loopne
mov
xor
cmp
and
xor
and
in
pop
or
stos
jo
dec
mov
sbb
hlt
and
lcall
jb
leave
inc
scas
mulb
mov
cmp
add
lock
jae
add
mov
mov
mov
std
pushf
dec
adc
sub
lret
orb
clc
jo
test
idivb
push
outsb
jns
sbb
xor
insb
jb
lcall
lea
inc
lock
stc
lods
cli
mov
cwtl
test
jns
mov
popf
loop
sub
popa
movsl
inc
pop
sbb
push
sbb
nop
inc
cli
mov
notl
ljmp
cmp
fsubrl
jg
adc
loopne
jno
clc
jns
sti
lods
rcrl
sub
lods
out
mov
sub
fwait
cmp
mov
inc
in
mov
mov
pop
push
dec
shlb
jl
pushf
test
mov
xor
xor
adc
js
or
push
xor
xor
jns
jg
mov
stc
mov
cmpsl
mov
xor
dec
ja
loope
mov
in
loopne
mov
test
mov
jl
add
xor
mov
out
cltd
loop
mov
ss
aad
stc
ds
clc
in
out
out
icebp
or
adc
cmp
pusha
lock
sarb
icebp
ss
popf
xor
rcr
mov
inc
cmp
out
mov
xor
js
inc
dec
push
popf
sbbl
pushl
test
pop
jmp
cmp
gs
push
cmp
daa
cmpsl
jg
aas
lcall
dec
and
test
sbb
dec
ja
mov
fistpl
sarb
flds
dec
stc
xchg
mov
mov
xor
mov
and
adc
test
fdiv
sarl
and
mov
and
imul
mov
enter
lahf
cld
mov
mov
incl
sub
cmp
xchg
xchg
movsl
enter
jb
idivl
insl
lds
jno
icebp
dec
ja
das
ds
mov
jge
jp
mov
bnd
testb
mov
loop
xchg
dec
cmpsl
clc
hlt
mov
inc
sbb
aaa
repz
loop
jns
xchg
out
xor
pop
add
jno
adc
push
xor
in
test
mov
mov
nop
js
scas
sarl
ja
fs
fwait
loop
and
aas
mov
add
imul
sbb
xor
xchg
lods
adc
jno
imul
mov
push
xor
push
outsl
call
xor
mov
xor
mov
imul
cmp
pop
fnsave
cmp
xor
mov
xor
test
cli
cs
cwtl
insb
adc
mov
jl
xchg
cmpsb
repz
arpl
ss
daa
cmp
mov
sbb
cmp
std
mov
push
testl
and
mov
mov
aaa
inc
nop
lock
das
test
inc
fwait
jb
and
mov
mov
mov
je
mov
fs
cs
sub
mov
jne
iret
xor
add
icebp
mov
sbb
xchg
test
sahf
jns
ss
cmp
mov
ds
cmp
mov
jbe
out
sub
xor
xchg
adc
movsb
dec
mov
xor
cwtl
loop
jns
cmp
sub
jae
sarl
and
sub
mov
clc
enter
and
inc
sbb
add
stc
jae
mov
jae
pop
cmp
in
jae
aaa
repnz
lods
push
lahf
in
adc
lods
iret
mov
mov
testb
mov
imul
mov
test
mov
jae
bound
jmp
cltd
jl
arpl
enter
sbb
mov
loopne
imul
xchg
repz
sub
push
out
in
inc
testl
hlt
sub
mov
dec
push
mov
jnp
cmpb
repz
je
stos
jo
add
cld
js
aas
sarl
nop
pushf
jmp
imulb
imul
mov
out
jae
repnz
mov
xor
add
icebp
adc
jp
das
in
sub
aad
xchg
jae,pt
ss
and
mull
cmp
lcall
mov
scas
cmp
mov
ljmp
out
mov
mov
movsl
cmp
imul
ret
repz
scas
nop
arpl
cmp
fnstcw
lcall
and
cli
xor
mov
sub
xchg
inc
cwtl
lods
push
arpl
and
fwait
stos
pop
adc
mov
xchg
ret
jp
adc
jl
mov
pushl
inc
mov
and
jge
test
ja
push
jl
and
scas
mov
and
pop
cmc
addr16
sub
xor
pop
hlt
mov
ja
jb
xor
jp
add
cs
mov
imul
jbe
mov
xor
cmp
in
mov
xor
test
jo
test
mov
xor
mov
cmp
mov
daa
stos
idivb
cmp
mov
mov
lods
cli
icebp
mov
sahf
scas
push
ss
sbb
das
mov
ds
stc
xor
sub
cs
imul
je
jecxz
jmp
icebp
push
cmp
shl
mov
jecxz
jecxz
test
xor
and
int3
arpl
mov
popl
dec
retw
and
dec
fwait
inc
pop
mov
and
aaa
xor
xchg
mov
shll
inc
pushf
jg
or
shrb
loopne
jecxz
mov
cmp
add
popl
sbb
push
xor
and
shrb
lods
xchg
out
mov
lea
stos
xor
mov
ret
jp
jb
xor
out
mov
ds
mov
int
mov
bound
cmp
test
jno
popa
cmpl
jns
mov
cmc
subb
mov
jns
pop
xlat
adc
negl
leave
xchg
dec
std
ret
mov
das
adc
ret
mov
sbb
jo
cwtl
xchg
in
jo
scas
js
mov
push
call
cld
jecxz
dec
pop
mov
xor
stos
icebp
push
lods
aaa
push
lret
mov
xor
jp
imul
pop
xchg
xor
mov
js
sbb
stos
ds
jmp
mov
mov
pop
xchg
std
jge
ja
jns
popf
ss
lret
clc
ficompl
mov
or
inc
imul
test
xor
je
mov
pop
mov
out
jb
mov
fwait
std
enter
cmpb
pop
je
repz
sub
test
cmp
xor
repz
stc
sbb
loopne
jae
mov
cmp
out
enter
cmp
je
push
mov
push
ss
mov
cld
mov
cmp
xor
xchg
scas
ss
scas
xchg
icebp
cld
adc
mov
cmp
jp
mov
sub
repz
mov
mov
mov
mov
jbe
clc
mov
jae
scas
jp
and
mov
mov
jb
dec
mov
cmpsl
hlt
mov
mov
pop
xchg
mov
sub
imul
insb
fs
in
xor
xchg
and
divl
xchg
pop
lock
and
stos
clc
mov
js
push
cld
enter
add
xchg
xchg
faddp
add
icebp
mov
out
or
insb
mov
addr16
mov
andb
lock
lods
cli
out
js
adc
insb
stc
cmp
sbb
lods
insl
sub
pop
xor
aaa
or
inc
jb
ss
sub
and
xor
mov
repnz
psllq
ss
and
mov
mov
test
stc
pop
cld
das
cltd
jae
xor
rolb
push
jecxz
or
jnp
and
fwait
mov
aaa
cmp
in
mov
ja
mov
sub
mov
js
mov
cmp
aaa
mov
icebp
imul
inc
adc
mov
aaa
out
popf
cmpsb
repz
imul
pusha
repz
jno
cs
cli
test
shlb
dec
xchg
in
xor
scas
cld
shrd
jmp
imul
push
mov
and
jbe
and
mov
sbb
add
mov
scas
cld
jno
and
sub
aaa
insb
iret
xor
sub
xorl
movsb
lea
mov
icebp
repnz
xchg
lret
sbb
adc
insb
jmp
cli
mov
xor
or
negb
cmp
mov
add
repnz
sbb
shl
mov
push
cld
test
repz
imul
ss
adc
push
scas
xor
xor
add
mov
mov
aam
aaa
aas
cmp
jecxz
repz
test
mov
ss
cmp
jge
in
pop
or
xor
shr
hlt
mov
test
jb
lahf
call
mov
int
dec
mov
cs
ss
popa
jmp
pop
mov
xorl
mov
imul
bound
stos
bound
loop
jne
and
cmp
lcall
js
popf
testl
jp
cmp
leave
movsb
orl
mov
mov
mov
icebp
cmp
and
and
fwait
bnd
or
mov
jecxz
stc
adc
cmp
jae
test
stos
mov
lock
clc
adc
or
add
mov
lods
popa
push
sub
divl
mov
jg
sub
std
test
sbb
stc
cmp
sarb
cmp
test
xor
icebp
ss
lods
push
mov
lahf
aas
inc
mov
popf
xor
scas
test
rep
mov
jo
inc
lods
arpl
adc
popa
mov
enter
mov
repnz
arpl
sahf
xor
cmp
inc
adc
inc
mov
mov
cli
imul
insb
pop
jl
loopne
repnz
cli
clc
mov
fsubrs
inc
insb
adc
pop
xor
test
jl
mov
aaa
cli
insb
popf
sbb
dec
and
leave
bound
jg
stos
std
popa
sub
imul
mov
dec
in
aas
add
pop
xor
and
insb
cltd
icebp
and
aas
fs
inc
mov
jg
pop
lods
fdivs
pop
fisubrl
mov
incl
pusha
cmpsl
imul
lea
movsl
xor
mov
mov
clc
jb
jp
lea
scas
icebp
xlat
loop
jo
je
nop
lock
lock
repz
cld
mov
push
out
fwait
jo
test
stc
ljmp
out
inc
lods
push
int
mov
imul
scas
cmp
and
xor
jecxz
cs
cld
lock
cmc
sar
cmpsl
xchg
and
and
lods
cmc
sub
mov
sbb
pop
sub
in
mov
mov
je
pop
cli
mov
dec
lahf
aam
mov
add
jae
push
or
pop
mov
inc
sbb
int3
out
ds
jg
cmpsb
jne
adc
push
jnp
jb
jb
mov
aas
test
pusha
das
fsub
mov
jl
arpl
pop
popf
xor
sbb
jp
cwtl
mov
adc
cmp
jb
imul
scas
repz
clc
or
popa
dec
hlt
sbb
sarl
lea
inc
mov
xchg
ja
stos
arpl
fisubrl
mov
jmp
gs
arpl
sbb
stos
cmp
inc
call
bound
and
jno
xor
xchg
call
scas
imul
and
lods
sbb
pop
mov
repnz
inc
xor
push
cmp
fs
bound
mov
lods
jl
lcall
insb
stc
xor
xor
lret
add
bound
rclb
jo
jnp
sub
xor
clc
mov
dec
bound
and
xor
repnz
lock
popa
inc
mov
push
xor
js
mov
xchg
mov
icebp
and
outsb
cmpsl
jns
arpl
cld
clc
push
mov
xor
imul
test
sbb
testb
mov
mov
lock
mov
cltd
mov
and
mov
mov
xor
lcall
inc
and
sbb
or
addl
filds
mov
xchg
fs
and
sub
push
dec
sbb
nop
xor
jb
xor
cli
fsubrs
dec
jb
jg
push
ja
out
fs
xor
push
and
out
stc
rorb
sub
cmpb
repz
mov
jne
fdivl
jg
sub
mov
adc
sub
fs
mov
scas
mov
cmp
and
stc
xor
aaa
xchg
adc
xchg
lea
repz
mov
neg
sti
test
and
cmp
or
mov
jo
xor
ds
test
imul
mov
out
and
xchg
popf
cld
fdivrp
pop
call
aam
xor
ret
cld
mov
jecxz
sub
jmp
push
xor
inc
pop
xchg
inc
sbb
pop
add
hlt
mov
popa
andl
and
loopne
xor
jb
imul
icebp
fldenv
xchg
and
mov
mov
ljmp
repz
cli
icebp
mov
xchg
inc
sbb
mov
or
mov
aam
pop
das
ja
mov
cmp
lret
shrl
inc
mov
push
cwtl
imul
imul
cld
addl
xchg
jns
shlb
arpl
icebp
mov
and
ret
cltd
pop
jo
icebp
test
aaa
pop
mov
mov
add
je
push
push
pushl
pop
xor
notl
iret
call
mov
cs
imul
das
test
jg
stc
stos
ret
jp
outsl
sti
aaa
repz
mov
xor
icebp
cmpsb
jo
jmp
hlt
mov
cld
mov
mov
ret
xchg
into
out
icebp
mov
jno
stos
gs
jae
mov
out
idivl
sbb
loope
cmp
sahf
ret
je,pn
div
push
sahf
xor
xchg
jns
lcall
mov
stos
call
xor
jb
arpl
mov
cmp
repz
mov
jmp
hlt
xor
cmp
dec
sub
popf
inc
pop
sti
mov
stc
jge
repz
cmpsl
loopne
hlt
xchg
shlb
imul
mov
adc
stos
addr16
icebp
xlat
clc
lcall
or
push
fs
dec
mov
rolb
in
xchg
add
imull
js
int
mov
arpl
mov
sub
inc
add
js
adc
imul
adc
imul
ljmp
ss
js
lods
movsl
push
stc
addr16
hlt
fsubp
je
sar
mov
cmp
jne
add
sbb
sub
adc
clc
nop
xchg
out
cld
push
stos
cmp
mov
mov
cmp
lahf
mov
ds
movsb
sub
call
stc
nop
xchg
mov
xchg
jg
insl
push
cmp
test
add
nop
mov
js
mov
or
jo
jae
mov
mov
jg
adc
in
push
js
adc
jl
pop
mov
ja
lahf
jecxz
stos
jns
scas
pop
mov
xor
clc
xorb
xor
in
jge
repz
shlb
mov
inc
rorl
push
scas
fbstp
clc
movsl
dec
push
mov
lds
lods
enter
add
cmp
jp
mov
cld
mov
xchg
sub
test
lahf
xchg
and
cmp
push
cmpsl
cmp
mov
imul
push
fwait
mov
sbb
mov
sahf
jns
mov
nop
mov
xor
in
jno
mov
mov
mov
aas
pop
mov
test
mov
insb
mov
cli
mov
mov
inc
stos
mov
xor
jae
xchg
sbbb
sahf
dec
int
hlt
mov
jecxz
adc
mov
lahf
mov
cmpsb
aaa
jg
push
adc
test
mov
insb
arpl
bound
push
test
aas
cmpsl
clc
mov
pop
xor
jmp
mov
mov
rep
mov
icebp
mov
xor
addr16
jg
xchg
sub
addr16
xor
jp
jg
cmp
fidivrl
out
fs
inc
cltd
sbbl
or
cmp
ja
ds
mov
jp
xchg
mov
xor
aas
xor
stos
je
div
mov
mov
xor
cmp
mov
imul
or
test
xor
mov
mov
push
jo
imull
mov
mov
jl
in
mov
bound
repnz
jp
repz
lret
pop
add
sbb
mov
mov
xchg
xor
repz
test
mov
ss
pop
mov
daa
idiv
mov
test
fistpll
mov
lods
ss
call
jb
jmp
in
mov
out
decl
mov
insb
js
jns
push
jae
xor
test
mov
push
lcall
sub
loope
cmp
mov
mov
jecxz
stos
mov
cmp
adc
sbb
addr16
cmp
loope
mov
lahf
mov
mov
nop
mov
arpl
ljmp
jg
jmp
ja
jecxz
mov
and
and
sbb
inc
mov
mov
mov
cld
adc
jl
movl
rolb
icebp
jle
mov
div
insl
jle
jmp
mov
in
in
mov
pop
jg
cmp
xor
pop
lds
out
mov
scas
add
divb
insb
mov
jecxz
addr16
js
push
mov
adc
xchg
jl
mov
outsb
cli
mov
insb
ds
xor
cmp
call
xor
mov
jns
jae
adc
and
and
adc
jge
mov
nop
cmp
jecxz
out
movsb
mov
mov
cmpsb
cmp
adc
xor
push
push
test
and
loop,pt
mov
jb
pop
mov
addr16
imul
bound
mov
shlb
cmp
push
cmp
imul
jmp
or
mov
insb
mov
out
jb
cmp
fmuls
idivb
pop
mov
xor
inc
push
sarl
mov
pop
je
test
rcrb
xchg
ss
sahf
jmp
iret
les
mov
scas
sub
add
jne
stos
xchg
jp
mov
lods
mov
icebp
arpl
inc
scas
jns
cmp
loop
loop
inc
shrb
jmp
mov
out
mov
fldcw
fstpl
mov
inc
divb
sub
imul
clc
jns
stos
push
lahf
xor
fidivs
mov
add
aaa
xor
pop
push
test
mov
dec
pop
xorb
mov
out
insb
in
call
scas
stc
jns
lods
je
sub
mov
loope
cld
mov
xorb
outsb
adc
jge
jge
ss
jp
shlb
lahf
lock
shrl
imul
sub
push
idiv
test
jl
jno
lock
or
sub
push
sub
jae
sub
bound
jne
rorb
mov
pop
scas
and
inc
xor
aaa
insb
push
mov
mov
out
mov
jg
in
xchg
xor
sub
mov
movl
shrl
add
aaa
scas
push
test
jle
cmp
pop
js
jo
cmp
xchg
out
repz
lock
pop
outsb
inc
or
mov
jae
lods
aam
add
div
ljmp
pop
mov
sbb
mov
mov
insb
xchg
les
mov
addr16
imul
mov
imulb
divl
mov
clc
lods
scas
cltd
push
mov
cli
fidivs
sbb
cli
sbb
sbb
imul
inc
icebp
leave
jle
jns
enter
ljmp
xchg
stos
mov
jl
jb
ret
dec
repz
dec
loopne
mov
pop
xchg
mov
lock
xor
mov
sub
add
mov
icebp
pusha
xchg
cmp
cli
data16
pop
push
in
loop
jecxz
mov
dec
jne
add
mov
popf
scas
adc
cmp
jnp
hlt
imul
imul
icebp
test
insb
add
pop
lock
lock
imul
inc
xchg
or
cmpsl
mov
cmpl
adc
jae
mov
jne
loop
mov
icebp
popf
arpl
popf
xor
stos
jecxz
insl
add
jo
push
xor
dec
repz
lcall
lock
mov
ss
jl
xor
stc
movsl
add
adc
shll
inc
jmp
add
and
fidivl
push
in
mov
imul
sbb
clc
sbb
mov
js
dec
insl
sbb
push
or
in
cmp
fisubrs
js
add
cmp
mov
jns
sub
enter
inc
pop
std
cwtl
clc
jns
loop
mov
mov
subl
mov
cmpl
xor
adc
and
js
in
add
jbe
sub
or
cmp
mov
sarb
or
mov
gs
cmp
ja
iret
rorb
stc
inc
stos
jae
gs
sbb
push
pop
mov
add
lock
mov
cwtl
lock
js
scas
je
dec
shl
add
cmp
je
pop
and
add
in
mov
mov
mov
inc
imul
imul
xor
repnz
and
mov
push
xchg
hlt
dec
arpl
icebp
pushf
imul
dec
shrb
aaa
clc
push
into
aad
mov
xor
cmpsb
push
hlt
test
pop
dec
popl
push
jl
mov
shlb
xlat
mov
mov
ss
imul
cli
mov
lods
loop
mov
mov
sub
out
cld
inc
xor
cli
or
and
xchg
push
fldenv
arpl
sbb
jl
jg
ss
cmp
inc
push
stc
pop
cmp
sub
in
aas
shll
cmp
lret
pushf
lock
xor
sub
push
loop
inc
adc
sub
dec
cmp
mov
mov
cli
std
je
xor
jp
clc
lahf
aaa
sub
jno
clc
arpl
push
cmp
nop
and
popf
mov
enter
loopne
test
mov
inc
xchg
lock
sbbl
ja
dec
clc
cmp
jno
dec
inc
aas
icebp
dec
jae
add
ja
jb
add
mov
xchg
xor
push
sarl
cmp
stos
and
cmp
mov
sbb
jno
in
loopne
push
inc
cmpb
ret
iret
pop
lods
cmpsl
clc
icebp
dec
xlat
and
int
sbb
jp
xor
pop
rorb
lods
jnp
arpl
mov
sub
mov
mov
jmp
mov
and
jecxz
loop
cld
bound
xor
and
jp
push
test
mov
iret
mov
aad
or
dec
or
sbb
push
jg,pn
mov
cld
xor
arpl
nop
stos
pop
inc
dec
mov
cltd
in
test
dec
jnp
inc
hlt
jns
loop
shrl
xchg
or
stc
test
leave
test
insl
out
mov
adc
push
shll
cs
loop
cld
mov
inc
jne
mov
pop
cmp
sub
inc
ja
aam
lahf
jmp
and
scas
xor
fldl
sub
jl
adc
loop
add
cld
stos
xor
test
hlt
cmp
sbb
jb
jg
mov
or
mov
push
out
jo
adc
xor
mov
out
mov
mov
pushf
sub
repnz
xchg
aas
ss
cmp
lods
cli
aaa
xchg
out
je
fwait
insb
xor
sub
clc
dec
and
pop
sbb
dec
in
push
jns
ljmp
les
pop
aaa
not
pop
rclb
jns
inc
test
in
xor
mov
cltd
andb
mov
out
xor
pop
orl
lret
cwtl
je
cld
jns,pt
lock
and
jp
fwait
mov
mov
mov
push
call
mov
in
sbb
arpl
ja
ljmp
movsl
hlt
jmp
imulb
stos
pop
mov
xor
mov
cmp
cwtl
repnz
hlt
cmp
jmp
cmp
bound
push
jecxz
notb
sti
jl
test
mov
es
and
popf
or
mov
xor
cmpb
sub
mov
rcrb
cmp
inc
scas
test
cli
hlt
add
stos
mov
cmpsl
js
cld
add
aad
cmp
adc
mov
loop
loopne
je
jecxz
pushf
pop
mov
out
or
mov
mov
fwait
xor
test
jl
xor
std
fwait
and
aas
mov
and
daa
cmpsb
aaa
ljmp
jg
push
mov
sub
jb
ret
mov
mov
cli
ja
mov
divb
jp
or
inc
shlb
cld
neg
in
jns
cmc
addr16
aaa
add
jp
ret
in
xor
jb
cmp
mov
mov
imul
mov
mov
xlat
test
mov
es
out
xor
jb
xchg
mov
repz
nop
nop
sub
mov
mov
imul
mov
cmpsl
inc
mov
int3
out
push
pop
jb
jg
xor
and
in
imul
cmp
xchg
clc
jecxz
inc
and
lock
mov
mov
into
loop
inc
repz
outsb
pusha
inc
and
hlt
imul
and
sbb
pop
fnstcw
imul
stos
push
pop
ja
cmp
add
or
ja
repnz
xor
adc
stos
cmp
fcompl
push
fadds
jg
lock
jae
adc
aas
cmp
shrb
lds
popa
aaa
mov
xor
imul
mov
and
mov
adc
mov
xchg
xor
and
cmp
imul
shll
ja
xor
jmp
jns
mov
sub
jno
lea
repz
ficoms
loop
aaa
scas
lods
and
mov
sub
xor
mov
je
hlt
test
mov
je
jbe
enter
lock
cld
scas
mov
mov
icebp
stos
mov
mov
scas
pushl
jl
adc
xor
xor
in
gs
add
stc
scas
nop
insb
icebp
je
sub
jecxz
mov
das
jg
xchg
fwait
imul
mov
loop
xchg
daa
repz
sbb
lock
cmp
test
or
addr16
push
or
fisubrs
and
jno
in
fs
cmp
adc
sbb
fimull
lcall
pushf
xor
cmp
stc
js
push
pop
dec
push
jecxz
inc
lahf
into
push
lahf
jle
loop
jno
sub
mov
mov
mov
out
mov
loop
jo
mov
aas
mov
repz
mov
xor
cmpsl
cld
mov
inc
dec
push
test
loopne
hlt
mov
pop
lds
push
push
inc
mov
insb
cld
jae
xor
icebp
movsl
mov
in
sub
imul
jnp
dec
push
arpl
cmp
shll
test
loop
jl
scas
lods
mov
dec
test
lret
or
lock
hlt
imul
sbb
cmp
push
dec
inc
inc
arpl
dec
push
mov
cwtl
adc
mov
cltd
stc
lcall
sub
mov
inc
stos
ret
add
xor
out
repnz
dec
mov
in
subl
mov
mov
sbb
mov
paddb
imul
mov
add
mov
in
cmpsl
daa
arpl
insb
repz
push
xor
loop
pushf
rcll
movsl
push
hlt
pop
insb
gs
lods
and
lock
ss
scas
adc
mov
std
repz
jae
sub
addr16
jg
xor
xchg
mov
repz
mov
fwait
js
imul
addr16
mov
jns
mov
mov
mov
adc
imul
lods
aaa
inc
mov
andb
sub
jns
mov
insb
aaa
xor
push
push
sbb
and
cmc
jns
pusha
ja
xor
mov
dec
xchg
lds
cli
testb
stc
mov
test
repz
dec
mov
push
je
mov
or
icebp
pop
lods
adc
out
imul
clc
mov
mov
ja
ds
dec
aaa
enter
or
dec
in
inc
inc
es
scas
gs
xchg
lret
aas
in
stos
mov
scas
mov
mov
in
test
sbb
sbb
les
sub
lods
nop
arpl
imul
mov
push
gs
mov
mov
cmp
in
cmp
sbb
ja
insb
mov
jae
jl
pushl
fcos
xor
mov
bnd
cmc
test
cld
mov
imul
ret
loop
inc
inc
mov
xchg
jp
mov
cmpsb
mov
into
divb
push
mov
je
and
jmp
jns
lods
push
loopne
sub
xor
jecxz
test
mov
push
xchg
mov
lahf
js
in
jl
int3
cmc
in
mov
test
sbb
xor
mov
mov
jns
test
aaa
cmp
inc
repz
aas
jb
mov
mov
jmp
lock
jle
add
cmp
mov
xchg
and
mov
mov
lock
and
fwait
jg
in
adc
xor
test
inc
jp
ss
shr
sub
jecxz
test
outsb
imul
arpl
mov
pop
sub
int
inc
pop
push
test
loop
mov
jl
mov
sbb
push
imul
and
xchg
mov
xacquire
mov
lock
xlat
repz
insb
jnp
pop
scas
lods
inc
stos
std
out
out
jno
fs
jp
push
pop
inc
int3
cli
repnz
test
mov
xchg
mov
push
and
push
aaa
mov
dec
in
fcoml
lods
dec
cmp
pusha
mov
fcoms
jae
sbb
xor
cmp
movsl
xchg
push
xchg
lods
scas
and
aaa
stc
clc
inc
xlat
repnz
jb
icebp
mov
out
cld
sarb
call
adc
nop
sub
jl
xchg
test
sub
cli
popa
js
and
inc
jb
cli
add
jns
stos
cmp
jp
xlat
lods
xor
aad
pushaw
into
aas
jb
or
js
mov
inc
push
mov
mov
aaa
jo
scas
inc
sarl
out
mov
mov
cmp
in
mov
mov
or
push
xchg
jb
mov
xor
cmpsb
push
mov
lods
imul
out
mov
push
xor
xor
out
testb
ret
daa
jg
aad
rcr
mov
inc
pusha
out
bound
popa
sub
jmp
cli
lock
in
mov
fs
mov
jno
push
in
aaa
sbb
stos
mov
cmp
sub
push
xorl
js
lret
xchg
ret
xlat
rorb
dec
and
fs
or
xor
jle
stc
xor
add
mov
insb
xchg
in
jns
cmp
icebp
subl
jl
cmp
scas
jo
lcall
mov
xor
mov
test
loop
jns
xchg
std
subb
mov
sarb
loop
push
jo
xchg
jmp
scas
repnz
scas
jae
repz
cmp
lock
ds
adc
mov
aaa
sbb
out
mov
test
cld
cltd
jl
mov
popa
arpl
cmp
ja
stos
and
sub
je
xor
xchg
push
pop
jno
mov
loop
lock
or
pusha
add
stos
and
jns
cld
imul
xor
imul
push
sarb
cld
mov
xor
cld
inc
mov
je
stos
lods
lock
sub
out
das
ja
movsl
mov
mov
aas
lahf
aaa
test
mov
sar
lock
mov
jno
mov
cltd
stc
gs
movsl
je
paddd
arpl
xchg
xor
or
jns
jmp
jno
xor
mov
mov
lods
cmp
stc
jl
daa
scas
clc
pushl
test
mov
mov
stc
jp
cmp
cmp
jo
lods
cltd
push
aam
cmp
jg
jae
add
clc
add
mov
shl
xor
mov
fdivr
inc
mov
mov
movsb
outsl
xor
inc
stc
jo
fadds
or
bound
pop
ljmp
pop
cld
stos
out
stc
cmp
pusha
inc
idivb
and
call
jo
in
dec
clc
sub
lods
mov
daa
jmp
into
shlb
ds
in
icebp
jp
xchg
cmp
icebp
xor
dec
scas
sub
jmp
stos
jo
cmp
push
mov
cld
in
cmp
fdiv
jecxz
push
stos
fcompl
xor
shrl
pushf
jle
scas
ja
in
scas
dec
and
xor
nop
clc
aad
sahf
sub
pushl
aas
cmp
sub
cli
adc
icebp
xor
gs
repnz
xor
adc
add
insl
das
jp
popa
mov
aaa
xor
into
ds
je
push
jae
lret
repz
rcll
mov
mov
scas
cmp
push
and
sub
cltd
jg
insl
mov
aas
imul
ss
ds
gs
jmp
and
scas
aas
push
and
mov
xor
jb
dec
and
into
mov
jge
sbb
pop
jg
lock
and
pop
outsl
xchg
imul
push
cli
je
imul
xor
mov
scas
jnp
out
in
xchg
sbb
mov
mov
xchg
mov
mov
lods
mov
jns
push
arpl
jo
mov
aas
jp
jg
push
xor
sahf
sub
adc
loop
ret
add
sub
or
xchg
sub
repz
jno
lret
flds
lock
bound
inc
sbb
inc
jae
icebp
add
out
repz
jge
cmp
popa
cmp
dec
pusha
pmaxsw
stos
roll
mov
ret
std
mov
in
or
xor
pop
jl
outsb
add
cmp
xor
bnd
xor
cmp
stc
lock
repz
in
ja
mov
jg
cmpsl
mov
clc
hlt
lds
sti
negl
inc
adc
mov
pop
loop
mov
pop
jmp
fcoms
mov
mov
icebp
cmp
shr
cmp
imul
and
lods
bsf
dec
mov
xor
das
jb
dec
popf
mov
xor
ja
imul
add
and
mov
push
mov
imul
cwtl
mov
insl
mov
pop
in
or
ss
adc
pop
movsb
dec
xchg
mov
xor
sbb
negl
fdivrs
mov
int3
mov
insb
popa
adc
xlat
sub
movb
lods
mov
loop
jl
inc
mov
mov
cmpsb
nop
out
aas
cli
stc
cmp
test
cmp
push
mov
jo
push
shll
add
repnz
cmpsl
fisubrs
xor
cmp
pop
mov
mov
das
repnz
mov
dec
setle
sub
stos
aaa
cmp
mov
mov
push
pusha
mov
cmc
mov
pop
out
clc
lock
ja
mov
and
mov
add
add
cltd
ds
dec
cmp
std
mov
mov
sub
mov
cmp
ja
cmp
adc
mov
ds
int3
or
sbb
inc
loop
mov
cmp
test
pop
xchg
sarb
jmp
enter
ror
mov
dec
notl
adc
loop
icebp
jp
hlt
xor
jmp
xor
fists
outsb
mov
cmp
mov
sbb
mov
mov
scas
decb
jo
imul
dec
fdivrs
cmpsl
xchg
in
inc
stos
cmp
into
xchg
enter
jmp
mov
cltd
movsb
xlat
mov
fs
lock
mov
xlat
mov
mov
gs
nop
vmovups
mov
into
mov
aas
ja
pop
mov
out
or
pushf
jo
gs
jp
cli
and
and
sbb
popa
push
xor
incl
loopne
and
jl
xor
cmp
mov
xlat
dec
jo
push
push
inc
stos
imul
cld
outsb
pushf
mull
jmp
cmp
cmp
or
scas
pop
lods
jne
cmp
mov
jecxz
push
mov
icebp
mov
out
jecxz
les
mov
and
frstor
mov
out
mov
push
pushf
push
xchg
pop
out
sub
mov
enter
mov
repnz
push
xchg
pop
out
mov
in
imul
jne
mov
mov
mov
nop
mov
mov
scas
ja
mov
arpl
das
cli
test
lea
push
into
das
adc
jo
js
je
addl
testl
and
fbstp
enter
inc
popf
stos
repnz
testl
sbb
out
xchg
pop
jle
mov
pop
mov
xor
mov
sbb
mov
pushl
hlt
mov
xchg
jne
jo
adc
inc
aad
out
inc
cwtl
bound
divb
cwtl
jno
jb
cld
mov
adc
aas
rolb
rep
fnstenv
jb
lock
adc
and
push
mov
mov
xlat
mov
jmp
divb
mov
ficomps
mov
jns
jmp
push
lret
mov
enter
mov
mov
jno
call
ret
jge
jecxz
fs
sbb
mov
jp
mov
ds
xor
sub
jl
jb
push
jecxz
imul
cmp
cld
push
mov
ret
mov
xchg
rolb
sahf
js
add
ret
fistpll
jae
clc
cwtl
fdivrs
repz
outsb
inc
dec
ds
mov
inc
push
fstl
insl
idivl
xchg
icebp
jg
out
mov
pusha
jecxz
jmp
stos
js
repz
mov
testl
cmp
lea
cmpsl
mov
mov
jb
push
xor
or
ds
xor
ss
scas
hlt
jo
push
mov
ds
jno
fisubrs
dec
cld
addr16
and
mov
push
jno
xor
sbb
mov
mov
daa
sub
jl
test
mov
dec
jge
dec
scas
mov
push
pop
mov
cmpsl
push
jecxz
fcompl
aas
and
aaa
stc
sub
inc
pop
scas
jae
mov
xor
std
lock
adc
mov
mov
rcrl
add
cmpsl
stc
lods
pop
add
sub
xchg
icebp
mov
push
cld
mov
add
mov
mov
mov
cld
pop
mull
push
test
ss
push
push
icebp
xor
hlt
iret
pushf
cli
pusha
pop
xor
mov
dec
sbb
mov
repz
push
aam
jno
enter
jge
and
xor
ja
jo
inc
bnd
push
aaa
je
pushf
xor
fbstp
mov
mov
adc
adc
aas
xor
cli
push
out
mov
xchg
scas
insb
cld
or
jns
repz
jb
jae
pop
jmp
mov
add
gs
push
jge
xor
mov
jecxz
mov
push
sti
xor
enter
adc
xchg
xor
jmp
mov
stos
or
mov
daa
arpl
xchg
and
inc
stos
xor
popf
cld
xchg
xorb
test
repnz
fidivl
test
in
arpl
push
mov
adc
jae
ret
inc
ja
xor
pop
push
dec
mov
mov
jb
mov
cmp
mov
andb
dec
jb
pushl
add
mov
cmc
adcb
icebp
mov
in
and
je
pop
push
jb
push
jno
icebp
out
jno
xor
mov
pop
sub
xor
idiv
ss
hlt
jno
jne
into
scas
xor
add
dec
loop
stos
cmpsl
mov
lods
jmp
out
xchg
sar
sbb
xchg
or
out
xchg
or
jo
imul
jmp
fstl
adc
mov
in
stos
cld
mov
jmp
mov
loop
mov
shlb
aaa
and
mov
mov
jmp
out
jp
adc
pop
or
addr16
mov
mov
scas
hlt
pop
call
out
ds
cmp
lods
test
push
cmp
cmp
aas
stc
jg
sbb
jge
cmp
mov
mov
xchg
jno
mov
pop
cmp
mov
arpl
xor
lds
aaa
mov
xor
fimuls
xor
mov
js
jecxz
xor
cmp
jo
pop
decl
mov
popf
push
jp
xlat
mov
clc
cmp
loopne
mov
lods
mov
push
lock
shl
lods
jno
sbb
ret
lcall
repz
sbb
jae
add
imulb
mov
jp
cwtl
sub
xor
mov
icebp
das
repnz
out
pop
cld
loopne
imul
stos
mov
insb
push
lock
and
loopne
jb
cmp
push
sbb
sbb
popa
mov
js
xchg
and
mov
out
mov
sbb
lcall
cltd
js
push
xchg
or
pop
fdivs
and
scas
jg
lea
cmp
sub
jl
inc
add
push
or
fs
pop
sbb
add
cli
push
sbb
mov
imull
jp
xor
fdivp
mov
aad
mov
mov
dec
decl
mov
divl
fnsave
pop
repnz
divb
sti
test
icebp
push
jo
test
sbb
sbb
cmp
sti
int3
mov
mov
or
jbe
and
dec
gs
mov
cmpsl
loop
xor
or
in
pusha
mov
jo
mov
mov
pop
and
xchg
jo
xchg
incb
divl
loop
add
ss
mov
ret
scas
repz
xor
cmp
pop
loop
mov
add
mov
mov
xchg
in
ret
sahf
push
pop
stos
mov
mov
mov
add
jne
sbb
xchg
jns
xor
into
and
xor
sbb
js
push
lret
sbb
arpl
adc
fidivs
push
test
das
adc
or
loope
js
and
out
repz
inc
fs
ja
jmp
js
lock
sub
cmp
loopne
iret
js
stos
lods
xchg
sub
inc
cmp
out
je
jecxz
int
movsl
cmp
and
cmp
lods
mov
shll
je
shlb
rorb
inc
fimuls
mov
cmp
sub
pop
addr16
testl
fisttpl
jg
mov
repz
lcall
push
lds
out
les
mov
mov
ret
enter
jb
adc
out
xorb
xor
mov
adc
loop
imul
mov
stc
mulb
jg
and
xor
test
xor
loope
sub
jp
pop
pusha
cmpb
push
xchg
jl
sub
adc
mov
mov
adc
in
test
push
cltd
xor
insb
mov
mov
testl
jb
cltd
xchg
and
loopne
mov
movl
and
sub
aad
cli
stos
mov
out
ss
btr
test
jmp
jp
js
push
mov
popa
xor
adc
and
jecxz
and
adc
push
insl
loop
ds
ret
in
pushl
imul
push
jne
adc
shlb
test
cld
xchg
pop
insb
jae
int
jno
push
dec
repz
pop
idivl
push
clc
push
mov
ret
lahf
aaa
pop
mov
fidivs
ljmp
mov
cmp
in
and
or
lcall
call
arpl
sub
stos
jns
jl
inc
pusha
push
mov
ss
mov
jns
mov
xor
inc
jb
push
jle
mov
jg
push
js
xor
jae
cmp
mov
aad
jle
pop
push
add
jnp
shl
mov
sbb
popa
popf
inc
movntq
cmp
test
hlt
or
adc
pop
jno
and
clc
sub
and
imul
mov
cmp
push
nop
subb
jns
mov
adc
mov
dec
scas
je
dec
xchg
sbb
mov
jno
aad
push
xor
jmp
adc
outsl
mov
xor
mov
push
test
mov
pop
xor
push
mov
xor
xor
popa
scas
jno
jne
inc
insl
pop
jbe
test
scas
adc
lods
jno
cmp
je
xchg
clc
mov
and
divl
ds
xorl
dec
add
mov
mov
fdivl
clc
pop
dec
test
jae
cltd
mov
test
out
imul
cmp
add
je
lcall
idiv
and
stc
mov
shrl
xor
repz
mov
cmpsb
outsl
xor
adc
fsubrl
popa
cmp
test
shlb
cwtl
and
jns
mov
xor
subps
push
fsubs
in
pop
lods
gs
dec
add
mov
in
dec
mov
sbb
jl
in
mov
pop
clc
bound
fsubrs
xchg
mov
in
shll
call
sbb
and
and
jno
sahf
add
sbb
je
repz
icebp
mov
add
xchg
jmp
xor
and
arpl
pop
sub
or
das
out
xor
cmp
mov
inc
loop
mov
cmpsl
out
cli
inc
imul
shlb
fisubrl
push
int
jecxz
mov
pop
xchg
stc
ds
push
decl
idivl
push
or
aas
inc
add
mov
sar
jp
jb
cmpsb
jmp
xor
sarb
push
inc
xlat
jae
xor
pop
rclb
xor
mov
lods
mov
jl
cld
mov
inc
mov
test
mov
push
push
jle
cltd
jo
pop
jl
imul
push
jo
adc
cmp
sub
jp
idivb
dec
clc
inc
js
xor
or
add
insb
aas
and
adc
outsl
stos
divl
repnz
cmp
jo
mov
xor
repnz
subb
mov
test
inc
and
push
dec
push
iret
jg
xchg
mov
dec
pushf
int3
pop
mov
jmp
cmp
pop
and
mov
push
movsl
sbb
mov
test
imul
adc
xor
lcall
adc
sbb
std
stos
ja
outsl
mov
cmpsl
pop
mov
jns
add
arpl
fisttps
push
add
mov
sub
jg
mov
loopne
cmp
jb
cli
xor
push
dec
sub
js
and
imul
or
mov
insb
cmpsb
xor
dec
xor
xchg
xchg
and
aas
testb
jo
incl
cmp
divl
mov
pop
jle
jecxz
mov
pop
dec
xor
loope
mov
xchg
and
repnz
mov
divl
shl
mov
fs
cmpsl
adc
jmp
out
mov
pop
stc
adc
push
jbe
add
jl
divl
lods
fcos
cli
lock
sahf
pop
mov
insl
cld
and
loopne
cmp
mov
cmp
mov
jl
bnd
cmpsl
dec
mov
mov
push
sti
movsb
pop
lods
sub
sbb
fidivrs
loopne
ss
jno
mov
xor
pop
inc
loop
mov
sti
sub
and
mov
addr16
jp
cmp
adc
jae
mov
bound
aas
jg
sub
cli
loopne
mov
cli
cmp
sbb
jle
mov
stc
hlt
jno
adc
lods
or
icebp
imul
adc
ja
mov
hlt
lods
popa
and
test
jg
enter
xchg
mov
adc
sub
repz
mov
icebp
mov
jmp
xlat
daa
jecxz
mov
mov
mov
sub
dec
nop
mov
stos
test
in
jg
mov
xor
mov
mov
xor
and
or
xchg
xchg
pushf
loopne
lods
cltd
xor
lcall
fs
mov
sub
mov
loopne
repnz
mov
sbb
test
dec
xchg
inc
test
dec
add
dec
out
mov
movsl
push
mov
and
mov
icebp
stos
repnz
lock
or
pop
aad
pop
repz
jp
xor
xor
and
mov
jae
repz
sbb
jno
sbb
add
hlt
ds
stos
test
repnz
pushf
mov
pop
cld
imul
mov
cmpsl
loope
mov
cltd
and
daa
aad
arpl
mov
bound
jno
xor
es
cmpsb
mov
mov
shrb
cmpsl
addr16
incb
lret
repz
inc
hlt
sub
jecxz
ds
scas
push
repz
xor
lock
sbb
and
imul
imul
mov
jge
fstpt
test
outsl
sub
nop
test
and
out
mov
mov
mov
xchg
loop
jg
pusha
cmp
aas
stc
ja
sub
popa
mov
jns
mov
sub
dec
daa
and
sub
jl
test
push
add
mov
ljmp
jb
imul
mov
jns
scas
xor
and
gs
jmp
sbb
mov
loop
xor
mov
je
xchg
and
test
jns
js
cmpsl
divb
mov
sarb
repnz
sti
adc
jo
daa
mov
test
cmp
test
mulb
sbb
jg
cmp
xor
mov
mov
cmpsb
pop
fidivrs
push
jp
cmp
hlt
mov
mov
mov
jo
mov
jg
mov
js
xchg
jae
jmp
stc
sub
in
xchg
adc
and
xor
lods
cmp
ret
mov
cmp
jns
adc
dec
mov
testb
or
mov
mov
mov
mov
xorl
arpl
stos
cmp
popf
push
stc
mov
mov
imull
cmp
dec
inc
and
sub
arpl
mov
jne
mov
mov
sub
lods
adc
in
jp
loopne
jns
mov
mov
xlat
add
insb
or
cwtl
jno
leave
subl
cmpsl
js
arpl
xor
mov
jmp
jp
push
jns
adc
cs
inc
or
ss
mov
popf
movsb
stos
sub
adc
lea
jl
ret
jo
arpl
mov
pop
jp
ja
xchg
dec
bound
push
bound
mov
fwait
loop
in
add
mov
scas
mov
ja,pn
addr16
cmp
sahf
xchg
push
mov
adc
or
cmp
frndint
mov
imul
jns
gs
push
mov
das
repz
test
clc
insb
hlt
jo
push
xor
cmp
xor
lret
addb
clc
push
fnsave
and
jg
adc
insl
sarb
cmp
repz
jne,pt
xchg
lods
inc
ja
insb
mov
jmp
sbb
xchg
cltd
cmp
stc
add
shlb
sbb
jne
mov
xor
mov
aaa
popf
insb
cmpxchg
into
jb
repz
mov
push
fdivr
mov
sub
dec
mov
sub
mov
aaa
mov
aaa
out
outsb
arpl
icebp
or
nop
loopne
cld
repnz
sub
in
mov
les
xor
xor
and
pop
lds
cmp
mov
rcrl
mov
hlt
mov
clc
and
scas
mov
add
and
cld
imulb
pusha
dec
insb
lret
push
ror
cmp
push
mov
aaa
fstps
pushf
cltd
stos
cmpsl
jno
jg
decl
neg
sbb
mov
mov
sbb
jno
xor
test
cli
je
test
cmp
addr16
hlt
jg
mov
aaa
stos
stos
xor
cmp
dec
clc
inc
inc
icebp
xchg
mov
inc
sbb
cmp
ds
mov
fdiv
shrl
or
jne
jge
mov
sub
ljmp
sarl
ss
pushf
xor
test
pushf
idivl
adc
mov
mov
push
cmp
mov
test
push
cwtl
mov
sub
cmp
mov
test
jl
mov
arpl
xor
jl,pt
imul
outsb
cld
iret
mov
dec
xchg
lods
xchg
sbb
and
js
das
sahf
mov
test
popa
je
repnz
or
push
or
mov
imul
sub
mov
jnp
mov
add
scas
xor
push
bnd
lret
cld
jns
jo
jg
push
gs
add
mov
mov
mov
mov
sbb
adc
lods
mov
scas
inc
and
fwait
sbb
jecxz
adc
adc
adc
pusha
cmpsl
divb
arpl
mov
xor
or
ja
jp
cli
jmp
imul
sbb
jns
and
pop
xor
push
js
xor
out
mul
mov
clc
jp
lods
mov
pushf
mov
jno
adc
mov
repz
outsb
jb
scas
mov
xchg
insb
test
adcb
mov
gs
lods
push
dec
stos
mov
and
repnz
and
mov
mov
out
cmp
dec
stc
mov
jmp
add
mov
cmpsl
aaa
scas
cmp
cld
hlt
clc
pop
cmp
dec
insl
xchg
dec
sub
xor
dec
cli
test
lret
movsl
ds
mov
inc
push
js
xlat
adc
pop
cmp
sbb
adc
icebp
push
and
jmp
mov
nop
outsb
imul
mov
mov
jmp
mov
mov
mov
pusha
cmp
jb
xor
and
jae
repnz
mov
hlt
rolb
repz
add
lods
out
mov
repz
push
xchg
xorb
test
mull
xor
in
sub
mov
lahf
mov
mov
repnz
imul
aaa
mov
jns
sbbb
mov
cmp
or
rorb
hlt
and
aam
leave
bound
loop
shll
pop
cld
test
js
push
test
mov
stos
jae
push
movsl
mov
jl
sub
mov
scas
aaa
sub
mov
lods
gs
iret
xchg
dec
pop
lods
cmp
fsubrl
pop
daa
or
pusha
xchg
je
hlt
dec
mov
out
ss
pop
stos
xor
push
add
out
xor
sti
das
arpl
bound
mov
xor
imul
jae
mov
mov
fsubrl
mov
cmp
int3
jns
in
cmp
inc
and
push
out
leave
repnz
and
dec
xchg
mov
aaa
sahf
mov
jecxz
mov
negb
stc
lods
je
mov
cmp
xchg
or
adc
adc
xor
xor
js
jo
popf
xorb
pushf
test
jno
aam
clc
xor
repz
jp
add
icebp
movsl
xchg
mov
push
sti
xor
jb
mov
cmc
xor
lods
cmp
imul
jp
cs
fwait
dec
jnp
lods
cmp
jge
mull
mov
jae
mov
arpl
mov
jns
adc
stc
out
push
test
loop
loop
and
cmp
lcall
xchg
fwait
scas
mov
mov
loop
int
idivb
mov
sub
lods
in
stc
ss
adc
cmpsl
dec
sub
adc
cmp
mov
lods
xchg
push
out
mov
xorb
mov
and
idivb
sub
and
arpl
mov
ds
sub
repz
xor
inc
lock
mov
mov
repnz
mov
nop
pop
stos
arpl
test
imul
mov
subl
mov
jp
mov
sub
xor
scas
xchg
cmp
push
mov
lret
repz
xor
adc
out
xor
sub
mov
pop
mov
repnz
clc
ja
mov
cwtl
imull
test
ja
leave
std
loopne
jb
mov
push
in
or
ret
pop
imul
pop
lds
adc
ja
xchg
scas
js
test
sbbl
mov
stc
lods
cmp
xchg
js
jno
push
xor
push
mov
fwait
shll
jge
mov
mov
insb
mov
adc
mov
stc
push
cmp
adc
pop
out
cmp
or
push
out
sub
cmpsl
adc
jae
jmp
jecxz
outsl
je
mov
cs
icebp
pusha
cld
mov
aaa
mov
rep
std
and
loop
xor
ja
jae
lock
jns
jecxz
movsb
repz
mov
xor
cmp
lods
push
neg
cld
leave
pop
dec
cli
dec
dec
jo
mov
arpl
jp
mov
das
out
jecxz
out
mov
adc
jl
fsubrs
xchg
xorb
adc
sub
scas
lods
cmp
jns
lds
in
mov
jecxz
xor
mov
icebp
repnz
es
cmpsb
xor
mov
scas
ss
mov
adc
mov
or
gs
push
ja
popl
scas
fsubl
cmp
icebp
add
imul
mov
scas
mov
jo
mov
fs
and
dec
cmp
mov
popf
dec
stos
and
xor
mov
add
ds
inc
jmp
mov
xor
cmpsl
jmp
mov
inc
inc
adc
fisubl
sahf
imul
addr16
out
bnd
cmp
xor
xlat
jl
mov
icebp
jmp
outsb
js
mov
mov
ds
xor
in
or
add
mov
loopne
sub
je
lods
sbb
ds
daa
cmp
xchg
xor
and
add
cmp
mov
out
outsl
xor
cmp
arpl
or
pop
in
mov
sbb
je
or
or
jmp
stc
imul
sbb
call
out
repnz
out
out
aaa
cld
je
pop
and
and
enter
cmc
pusha
jmp
div
jp
fisttpll
jp
mov
mov
cltd
mov
cmp
sbb
pusha
icebp
je
xor
xlat
sub
sub
push
lahf
sub
pop
jge
lock
sub
pop
mov
lods
repnz
mov
scas
xchg
or
xor
sub
add
jns
or
xchg
dec
jae
lock
add
mov
sbb
ss
mov
adc
push
scas
sub
lods
sub
mov
push
cmp
sbb
imul
js
sbb
repnz
pop
cmp
or
sub
mov
shll
xchg
cli
xor
and
dec
rorb
repnz
sbb
ja
out
inc
sub
jle
pushf
sub
or
outsl
icebp
mov
ds
ss
cmp
xor
fldt
shll
cmp
jmp
jge
and
mov
mov
enter
enter
mov
mov
ja
sub
fwait
inc
mov
shlb
dec
test
test
stos
xchg
adc
ds
mov
sarb
fwait
clc
mov
in
icebp
xchg
mov
sbb
js
cltd
pop
fnstcw
enter
fs
dec
sti
ss
jns
daa
cmp
push
imul
subb
push
mov
lods
insb
out
dec
imul
out
js
mov
xchg
loop
mov
dec
test
and
sahf
cmpsb
fs
inc
inc
pop
push
lods
pop
dec
popa
sahf
ljmp
jae
pop
js
addl
add
aas
divb
insb
xor
iret
jo
rorl
ds
insb
das
arpl
out
cwtl
pop
mov
pop
mov
cli
sub
test
mov
jl
jb
int3
cmp
mov
push
xor
cli
and
add
sbb
das
loop
mov
sub
cld
jb
cmp
clc
dec
jg
aas
jmp
xchg
shrb
arpl
div
clc
and
insb
sbb
lret
ret
aaa
sbb
insb
fsubrl
mov
ret
jle
push
xor
jae
xor
bound
inc
cmp
jl,pn
and
add
fldcw
in
jecxz
cmp
cmp
or
popa
jae
popf
iret
mov
test
idivl
mov
test
jbe
int3
loopne,pt
stos
jmp
sub
mov
fs
and
cli
cld
cwtl
adc
arpl
and
clc
cmp
fwait
jl
test
ja
je
cmp
lods
repz
fincstp
add
imul
punpckhdq
xchg
loope
cld
sbb
xor
pop
xchg
test
adc
push
rcrl
arpl
lahf
jecxz
adc
shl
xor
cwtl
aaa
jl
mov
jno
lret
or
push
pop
out
mov
xor
jo
and
scas
pop
push
nop
lcall
add
xchg
ja
jmp
stc
xor
mov
push
testl
and
leave
xchg
sub
xor
cli
mov
cmpsb
inc
out
stc
xor
xchg
and
and
cld
xchg
imul
inc
loope
out
cli
mov
ljmp
clc
mov
mov
clc
daa
or
test
pop
imul
xor
cmp
xor
mov
test
movsl
in
xchg
or
xor
xor
mov
stos
test
fistps
js
xlat
sub
std
pop
or
insl
mov
ds
test
test
mov
test
call
cmp
bound
push
test
cmp
ds
test
aas
ds
mov
test
mov
test
and
xor
sbb
adc
ds
test
cmp
mov
ds
test
test
cmp
jl
test
bound
push
test
mov
test
aas
ds
mov
test
outsl
cmp
or
das
jg
mov
push
test
insl
sub
lahf
ja
mov
jae
imulb
sub
lods
cmp
mov
mov
aas
pushf
ja
fucomip
xor
test
aaa
inc
ds
test
jl
pushl
mov
mov
mov
push
hlt
clc
ds
jae
jge
cli
xor
inc
aam
insb
mov
jo
cmp
fucom
mov
jecxz
cmp
test
sahf
cmpsb
push
sub
xor
mov
jp
mov
xor
decl
scas
sbb
hlt
call
push
divl
pusha
pop
mov
arpl
mov
ja
mov
imul
repz
das
adc
fwait
repnz
xor
mov
jl
cmp
out
insb
mov
mov
sbb
cmp
sub
jmp
lods
aaa
and
jp
cld
in
or
jns
adc
cmp
mov
cwtl
aas
mov
push
adc
repz
out
xor
pusha
sbb
xor
cmp
into
mov
mov
fdivp
pop
sbb
xor
data16
test
pop
push
or
jns
repz
lret
or
lahf
inc
lret
xchg
xchg
cmp
js
or
push
imul
test
repz
pop
adc
push
lock
jb
cwtl
test
scas
inc
stc
subl
cli
test
popaw
and
mov
daa
cmp
aas
jecxz
mov
lahf
jns
stos
ljmp
cld
cmp
pop
jns
push
xchg
xchg
lret
xor
test
sub
adc
inc
mov
hlt
dec
arpl
pop
and
lods
jae
xor
stos
xorl
scas
repz
scas
pop
add
jmp
mov
lahf
stos
sbb
repz
lahf
push
cmp
jl
test
xchg
push
jns
mov
jnp
imul
les
test
pop
icebp
pop
sub
xchg
imul
repnz
and
pop
xchg
and
stos
and
imul
or
lahf
push
test
lahf
mov
int3
aas
stc
test
mov
leave
sub
in
and
cmp
jbe
jnp
cwtl
push
inc
xor
mov
pop
xor
cmp
xor
test
ret
mov
das
cmp
xor
lods
jno
mov
mov
mov
popa
scas
jecxz
arpl
mov
or
push
aam
mov
insb
push
lods
sbb
pusha
xor
mov
add
aas
out
mov
xchg
xchg
repz
jbe,pn
jg
mov
cmpsb
mov
in
push
mov
cmp
jae
idivb
or
add
sbb
sbb
daa
inc
xor
xchg
jmp
cld
rep
and
movsl
sbb
cmp
dec
dec
cwtl
add
inc
outsb
or
inc
enter
in
sub
mov
jmp
lods
shrl
rorb
jns
insb
mov
mov
mov
std
addr16
jmp
jns
inc
aas
add
or
decl
addr16
sub
xchg
pop
in
jmp
lret
xor
aas
enter
test
sub
dec
dec
int3
and
sub
sub
mov
call
mov
mulb
sub
scas
aas
sbb
loope
sub
jge
stc
lods
mov
loopne
mov
movsl
cmp
jp
jo
mov
test
cmc
movsl
loope
mov
mov
loop
sub
inc
and
in
mov
mov
mul
and
or
fstpt
or
and
test
fwait
imulb
mov
mov
or
mov
scas
lahf
out
inc
mov
lods
fwait
sub
in
push
stos
xor
xchg
call
and
arpl
out
cmp
jnp
fwait
mov
lahf
sub
cmp
lahf
mov
and
arpl
call
call
xchg
insb
xor
xor
pop
test
lods
xor
sub
insb
pop
test
and
push
movsl
adc
insb
pop
test
mov
arpl
fildll
fwait
sub
in
sbb
pop
test
lahf
jecxz
call
jo
or
hlt
mov
xchg
xchg
lahf
mov
stos
clc
mov
shlb
jmp
xchg
arpl
sbb
imulb
cld
in
test
sub
mov
xor
divb
fisubrl
leave
stos
mov
into
mov
and
and
xor
xor
jb
cs
or
ljmp
or
imul
enter
cmp
adc
mov
fisubrl
leave
stos
mov
stos
mov
stos
mov
stos
psubsw
stos
sub
iret
pop
xor
adc
xor
jnp
sub
adc
stc
mov
int3
sbb
and
test
xor
and
mov
sahf
xor
xchg
mov
sbb
sbb
cmp
mov
xchg
sarb
xchg
das
adc
mov
cmp
das
xorl
shr
and
test
jg
cli
pop
js
xor
call
xchg
lods
aad
xchg
mov
arpl
and
in
dec
call
nop
cld
or
push
jmp
pop
aas
pop
pop
iret
loop
xor
mov
fwait
mov
adc
push
adc
xchg
testb
movsl
aaa
and
jmp
cmpsb
xor
scas
lea
mov
leave
xor
ret
sub
lods
mov
sub
fldenv
scas
lds
ret
xchg
mov
dec
adc
int3
add
gs
lods
std
push
sbb
or
cli
fcompl
lahf
lods
imul
in
bound
pop
xchg
in
xor
sub
inc
lods
ss
dec
mov
jb
cli
addl
sti
flds
into
mov
push
aad
cmp
ret
sub
jecxz
pushf
sahf
and
lahf
jecxz
call
call
mov
sub
adc
sub
cmp
xchg
mov
xchg
adc
mov
and
jp
sahf
sub
imul
por
mov
sbb
cltd
imul
das
sub
xor
adc
lahf
jecxz
call
cmp
jg
jp
or
lcall
or
movsl
int
insl
pushf
aaa
pop
add
add
lahf
outsb
mov
stos
pop
sbb
repz
mov
jne
sub
jp
xor
add
dec
out
sub
add
push
fisttps
mov
sub
xor
cmp
in
jmp
stos
les
xchg
xor
fwait
out
and
fwait
cmp
mov
sub
inc
sub
in
push
sbbl
subb
push
daa
orl
jno
into
mov
or
pusha
shl
jns
mov
inc
cwtl
pushl
test
mov
jmp
add
test
stos
push
test
jl
call
cwtl
jne
lods
movsl
notb
test
scas
scas
scas
mov
mov
lods
out
push
mov
mov
jbe
cltd
xor
mov
inc
xchg
jne
xchg
imul
shrb
test
subl
fdivl
jno
ja
dec
mov
mov
mov
cmpsl
out
lods
outsl
movsb
xchg
cld
fwait
imul
ss
ud1
cmp
out
xchg
xor
add
cs
aam
sub
scas
andb
loopne
sti
popa
cmp
movsl
and
scas
mov
es
shrb
mov
in
or
lods
cltd
jo
nop
out
xor
in
cmc
test
test
insb
lds
cmpsb
imulb
mov
push
div
mov
cmpsl
gs
fidivrl
add
jnp
stos
and
sub
add
mov
ret
cmp
adc
xor
mov
xor
jecxz
in
test
mov
xor
xor
cmpsl
add
cmp
or
out
jmp
mov
out
sti
cltd
mov
mov
lods
out
test
sti
add
or
sahf
cli
push
xor
or
sarl
lcall
cmp
outsb
in
movsb
mov
sbb
scas
arpl
jp
mov
fwait
cmp
test
xlat
inc
mov
xchg
add
adc
outsl
scas
or
pop
xor
add
xor
lcall
cltd
mov
add
scas
add
arpl
scas
sahf
jge
das
dec
jmp
and
mov
out
and
mov
decb
cmp
xchg
mov
jecxz
in
data16
and
cmp
subb
je
cmp
scas
es
inc
es
mov
xor
jge
xchg
lods
bound
mov
loope
or
mov
and
add
pushl
push
cmc
insb
or
scas
sbb
or
mov
shl
adc
lods
inc
sub
adc
test
mov
sub
cmp
fidivrl
or
mov
xor
mov
popf
lret
sub
xchg
lods
adc
jmp
repnz
xchg
jecxz
xor
xor
das
sub
faddl
ret
testb
sub
jecxz
mov
mov
aam
enter
aas
sub
cmpsl
dec
test
or
into
mov
mov
jg
test
pop
jae
ljmp
jnp
lahf
aad
or
sbbb
mov
mov
stos
sbb
std
fcoml
cmpsl
lahf
dec
or
xor
icebp
scas
mov
and
adc
mov
and
test
push
fwait
mov
cmp
mov
fucomip
mov
xchg
and
cld
les
mov
das
cmp
stos
ucomiss
cmp
push
negb
sub
xor
sbb
data16
xor
movsl
arpl
shlb
mov
mov
pop
jg
call
and
mov
and
add
loopne
mov
mov
xchg
sub
subb
mov
loopne
leave
jle
mov
xor
adc
out
add
negb
xchg
push
mov
add
add
mov
jle
push
adc
and
mov
ljmp
push
sub
icebp
mov
jl
scas
adc
and
pop
jae
pop
insb
rsm
imul
in
mov
cmp
int3
inc
hlt
enter
push
inc
sbb
cmp
xchg
mov
ljmp
and
and
mul
jo
test
add
mov
cmp
arpl
lea
subl
lock
xchg
movsb
pavgb
mov
imul
lods
lds
jo
xor
xchg
loop
mov
or
jmp
xchg
adcl
jne
scas
loop
sbb
scas
lods
insb
cmp
xor
pop
mov
repnz
mov
or
mov
dec
mov
jle
gs
bound
mov
repnz
aaa
shrb
and
xor
pop
cmp
adc
xchg
mov
sbb
mov
out
cmpb
cs
sbb
into
or
rol
jbe
sub
cmp
in
stos
push
mov
mov
jne
push
movsb
scas
test
pop
add
push
scas
pop
insb
xchg
jnp
je
bound
cltd
into
xor
sub
test
je
mov
sarl
pop
xchg
je
in
and
xlat
mov
jg
xor
sbb
jge
imul
add
or
lea
jne
mov
les
mov
pop
fisubrl
stos
or
mov
ds
rol
repnz
pop
lcall
cmp
mov
jp
jg
push
movsb
scas
xchg
hlt
xlat
movsb
les
pop
lcall
scas
scas
push
adc
scas
mov
faddl
lea
dec
mov
stc
fwait
sti
lea
std
enter
adcb
cmp
sbb
mov
or
je
imul
fldt
xlat
sbb
movsb
mov
lea
repz
xor
or
mov
sbb
xchg
xchg
mov
jo,pt
hlt
mov
xor
popa
and
sbb
cltd
xchg
test
dec
inc
les
in
inc
sbb
sbb
xchg
movsl
das
arpl
stos
movsb
push
sub
add
and
jmp
mov
aas
push
push
mov
movsb
cs
in
ret
sbb
add
xorl
sub
mov
out
xor
push
sub
arpl
adc
and
mov
insb
add
mov
decb
and
test
push
sbb
sti
cld
mov
add
jle
ljmp
jo
xchg
movsb
mov
or
dec
sub
cmp
jne
jecxz
mov
mov
out
add
pop
or
aaa
ds
cwtl
out
add
mov
lahf
call
movsb
push
jne
or
aas
imul
daa
mov
jo
ror
xlat
jp
lea
and
popf
jge
mov
inc
scas
mov
cmpsb
mov
lahf
arpl
addr16
fildl
pop
push
adc
aaa
sub
test
es
out
scas
sub
imul
add
addl
pushf
fnstsw
addr16
mov
push
mov
push
lahf
arpl
jbe
scas
mov
cmpsl
xor
push
fmull
sub
mov
add
adc
jg
push
inc
push
mov
push
mov
sbbb
xchg
cs
add
cwtl
xlat
lahf
mov
xor
jmp
pop
add
or
inc
cmp
test
mov
repz
mov
and
or
sti
mov
jecxz
and
pop
stos
adc
cltd
add
mov
jb
mov
mov
sub
idiv
jmp
nop
and
shlb
inc
decb
and
sub
and
es
mov
scas
adc
push
sbb
mov
mov
jecxz
inc
sbb
mov
and
cmp
cmp
scas
xchg
lock
popa
jp
mov
scas
xor
sbb
and
arpl
xchg
adcl
mov
stc
loopne
jb
xchg
or
cmp
in
cld
movsl
nop
int3
jnp
mov
sub
sbb
cli
jl
jno
mov
cmp
lods
jae
and
sbb
mov
ds
sub
les
fcompl
sti
aad
ss
lea
xor
jmp
inc
push
add
jnp
sahf
mov
inc
jnp
jo
xor
sub
inc
fldenv
jp
pop
jecxz
lods
cmpl
inc
xor
xchg
lock
add
loop
cmp
mov
ficompl
jle
sub
jbe
das
jl
xchg
lods
dec
fcomi
popa
pushf
jge
push
mov
stos
sub
negb
and
pusha
jmp
push
je
iret
pop
xor
and
mov
mov
lret
lea
lods
xchg
fwait
sbb
inc
or
bound
mov
mov
cwtl
decl
adc
mov
fwait
bound
mov
fwait
scas
mov
add
insb
cltd
and
jnp
mov
add
mov
or
stc
xchg
sub
and
lods
mov
test
lea
rcrb
stos
cs
sbb
pop
mov
out
stc
xchg
fs
add
inc
add
test
adc
test
dec
jnp,pn
cmpl
jne
mov
pop
mov
mov
cmpl
mov
sbb
and
pop
sub
inc
ret
sti
xlat
or
inc
sbb
test
or
jp
pop
xor
jbe
or
mov
or
inc
or
mull
mov
jecxz
sar
adc
lahf
adc
sti
mov
or
mov
jbe
xor
mov
scas
arpl
nop
mov
and
and
push
in
into
sub
xor
testb
adcl
lcall
lods
mov
je
loop
sub
or
mov
sub
push
push
negb
xor
mov
cmp
test
and
xchg
cwtl
xchg
sub
icebp
and
cwtl
lcall
ficomps
push
ficomps
mov
jne
std
lcall
adc
adc
mov
insb
out
popf
cmp
push
pop
mov
mov
outsl
sub
mov
jb
ljmp
loopne
roll
jbe
xchg
sbb
xchg
push
xor
mov
mov
xor
push
jnp
stos
push
sub
add
and
mov
jg
dec
sbb
and
add
sbb
shlb
sbb
clc
movsb
std
mov
ljmp
out
lods
push
jnp
sbb
shlb
stc
out
sub
in
mov
cmpsb
das
imul
and
ss
xchg
cmp
sbb
or
xchg
pop
sbb
dec
cmp
mov
xchg
lcall
add
aas
and
sbb
testb
mov
adc
loop
xor
xor
sbb
xlat
mov
adc
xor
movsb
sub
xchg
loopne
jmp
enter
lds
loopne
cmp
push
xor
xor
push
lret
push
jbe
mov
xor
mov
inc
mov
xorb
hlt
insb
std
add
inc
xor
dec
or
mov
hlt
ljmp
mov
jbe
mov
ja
pop
mov
push
mov
and
adc
sub
add
and
je
mov
sub
jg
fcoml
sub
mov
inc
add
cld
leave
pushl
pushf
cmpb
sti
cs
scas
popa
movsb
dec
xchg
cwtl
mov
and
fdivrl
jae
and
add
lret
xor
xor
ja
test
imulb
xor
cmp
and
cmp
pop
mov
lods
and
cli
idivb
xchg
dec
test
in
cwtl
mov
cmp
add
mov
add
test
sti
xchg
xchg
adc
cmp
xor
mov
xor
mov
stos
les
ljmp
xor
mov
xchg
loopne
data16
inc
out
aam
mov
dec
mov
mull
push
mov
data16
stc
jg
cmc
bound
loopne
push
call
mov
dec
clc
lock
or
fwait
push
mov
in
or
mov
adc
aaa
xlat
daa
sbb
lret
dec
jp
xor
xchg
aam
orl
in
jae
mov
or
fldenv
pop
jg
decl
sbb
add
push
ljmp
pusha
xor
pop
dec
xchg
scas
lret
inc
jb
fs
aaa
cmp
xlat
shl
jb
sbb
lcall
push
stos
jge
cs
xchg
mov
mov
mov
jnp
cmp
xchg
lret
ret
push
mov
inc
add
xchg
movsl
daa
repz
mov
xor
push
inc
push
mov
jns
loope
shll
outsl
in
out
rclb
mov
xchg
mov
in
jmp
mov
clc
add
cs
shlb
mov
pop
push
clc
adc
pop
and
sub
outsb
inc
or
pushf
je
push
je
mov
shlb
cs
mov
pop
lods
lods
mov
imul
xchg
xchg
and
int
dec
mov
or
jns
ficompl
adc
adc
add
out
pop
nop
inc
rolb
mov
mov
lea
sub
aam
cmpsl
cmp
jle
push
fcom
jbe
adc
mov
push
insl
mov
in
pop
and
or
mov
lea
pusha
pushl
mov
pushl
lea
call
call
test
shl
pushf
call
push
xchg
movsbw
call
pusha
lea
jne
call
movzbw
call
push
jmp
out
mov
test
mov
or
mov
imul
movsl
popf
pop
setae
mov
leave
cmp
jl
bound
pop
xchg
fsubrs
xchg
je
loopne
lcall
xor
mov
inc
not
pop
adc
sub
xchg
adc
cmpsb
rorb
setnp
sbb
mov
mov
int
icebp
imul
loop
xchg
push
mov
hlt
cmpsb
inc
int3
sbbb
push
mov
stc
sub
sub
push
xchg
dec
add
ret
adc
and
cmp
pusha
mov
cmp
call
pushl
popl
pushf
pushl
ret
dec
mov
cmc
pushf
cmc
cmpb
call
jmp
sbb
aas
insl
add
pop
cs
push
mov
sbb
dec
lock
mov
stos
pop
xor
mov
push
or
test
cwtl
inc
dec
and
hlt
lods
insb
dec
ret
in
xchg
fs
bound
ret
add
je
cld
loopne
jb
out
aam
pop
sbb
and
inc
add
jne
mov
stc
jmp
push
call
sub
mov
lea
lea
bt
sub
push
pushf
jmp
push
lea
je
pusha
clc
stc
bt
cmp
pusha
mov
lea
jne
push
inc
movb
call
or
push
dec
repz
orl
dec
leave
dec
int
cmc
test
mov
ja
and
test
fs
push
adc
adc
add
mov
rcrb
stos
test
rol
and
call
jmp
mov
stos
sub
jns
mov
movsl
pop
mov
ljmp
arpl
xor
popa
adc
fistps
into
lods
int3
xor
sbb
stos
int
insl
imul
insb
ja
push
sub
insl
out
push
cmp
jae
xchg
ja
movsb
xchg
test
outsb
xchg
ja
inc
add
or
in
lahf
and
cmpb
lock
mov
jl
xchg
jbe
push
lea
ja
push
mov
cmc
imul
pushf
mov
jmp
lea
jb
cmp
cmp
pushf
lea
ja
push
cmp
cmc
add
bt
bt
or
lea
jge
pusha
pusha
lea
je
cmc
pushf
cmp
pushl
pushf
pushf
lea
jne
call
inc
mov
inc
jp
imul
adc
int
in
loope
dec
pop
jge
add
aad
andb
fdivp
arpl
cmp
loope
mov
add
rolb
and
stos
push
xor
push
lret
cmp
in
js
pop
xor
mov
add
mov
cmp
sbb
and
mov
push
or
mov
pop
and
lea
jae
je
push
pushl
push
adc
pusha
pushl
movw
lea
jmp
bt
ror
call
movl
movb
pusha
jmp
test
cmc
shr
mov
call
mov
cmc
add
mov
aaa
jmp
icebp
fstps
xchg
and
push
loopne
rcrl
lods
clc
cld
vpcmpd
inc
push
in
sub
ficoms
lock
ja
cmp
push
cmc
cmc
add
movb
test
bt
or
jmp
lea
je
bt
bt
clc
add
cmc
cmp
cmp
cmp
jne
jb
pusha
mov
cmp
movb
jmp
push
mov
pushf
pushf
movl
movb
pushf
lahf
mov
lea
call
push
pushf
lea
jmp
pusha
pushl
popl
push
pushl
movb
pushl
ret
call
call
pusha
mov
movl
mov
pushf
pushf
lea
jmp
lea
ja
call
pushf
pusha
movb
adc
lea
pusha
movb
jmp
xchg
add
push
repz
add
inc
in
insb
clc
je
cmp
jge
add
mov
mov
sti
dec
and
aas
dec
pop
sbb
cld
jmp
inc
inc
lahf
dec
push
mov
sbb
sahf
pop
inc
lock
or
sub
aam
adc
mov
dec
hlt
iret
jge
lds
xchg
jg
call
or
sbb
add
insb
stc
rcll
mov
pushf
data16
push
outsb
jae
jno
into
arpl
mov
cmp
and
mov
aaa
fwait
cli
push
stos
rcl
adc
int
cmp
xor
jecxz
popa
mov
xchg
cmp
daa
dec
shrb
mov
and
into
jo
xchg
adc
mov
mov
int
dec
pop
adc
filds
or
iret
mov
ljmp
cmp
pop
cwtl
or
or
imul
sti
mov
cmp
and
fsqrt
inc
inc
and
mov
call
call
movl
lea
not
lea
call
lea
jb
pusha
cmp
movb
pushf
lea
jae
sbb
bsr
setnp
mov
test
bsf
cmc
mov
rcr
movsbw
cmp
mov
pushf
call
pusha
pushf
pusha
lea
ja
shl
jmp
test
add
bt
mov
movl
test
mov
push
test
jmp
pushl
popl
mov
pushf
pushl
ret
xor
js
or
add
testl
add
lahf
cmp
aas
xchg
xchg
xor
pop
test
in
arpl
sbb
sub
xchg
add
xor
or
rolb
sbb
sub
add
xchg
xor
fists
add
pop
jae
dec
adc
mov
pop
push
push
xacquire
inc
hlt
addr16
xor
fdivrs
sub
add
pop
es
adc
imul
cltd
outsl
inc
ret
xchg
mov
xor
in
lret
sahf
xor
je
or
mov
mov
push
dec
xchg
pusha
pusha
mov
movl
jmp
pusha
movl
mov
jmp
lea
je
add
neg
add
neg
or
xor
sub
test
bswap
mov
shr
inc
jmp
jmp
pop
jl
xchg
test
inc
mov
in
push
call
or
jbe
xchg
imul
pop
hlt
cmpsb
inc
loope
cwtl
mov
pop
andl
insb
repnz
sbb
mov
cmpl
or
cltd
pop
and
xchg
aas
loop
and
das
xchg
jge
mov
xchg
adc
and
sti
push
jp
cwtl
push
fsub
ficoms
loop
das
add
rcrb
adc
ror
xchg
or
adc
sbb
int3
inc
sub
loopne
aaa
mov
mov
lret
rorb
cmp
aas
repz
lods
or
test
and
jb
cld
shlb
loope
mov
fldl
adc
pop
inc
and
repnz
and
or
sarl
add
xlat
test
mov
dec
enter
cli
out
lods
sbb
ret
rcll
push
cmp
rcrl
lahf
incb
fidivrl
cmpsl
pop
std
jns
or
out
aam
dec
mov
ja
pop
std
insb
pop
jp
mov
loope
jno
and
xlat
mov
dec
pop
insb
mov
and
mov
sub
shlb
fs
shrl
aad
fwait
and
insb
add
xorb
fs
mov
insb
mov
jae
sbb
dec
shll
loope
icebp
insl
jmp
adc
inc
add
or
fbstp
mov
cmp
out
xchg
push
mov
dec
push
insl
pop
cmp
mov
jne
add
mov
nop
fmuls
and
loope
jbe
stos
daa
mov
push
shll
popf
outsl
inc
adc
adc
mov
xchg
cmpsl
jecxz
mov
or
xor
mov
sub
push
clc
int3
add
aad
in
lds
xor
pop
sarl
imul
repz
mov
add
out
pop
movsl
sub
cmp
inc
int3
fcoms
idivb
xlat
cs
call
orb
fcomps
sarb
out
cmp
int
sahf
enter
pop
push
sbb
mov
cwtl
cmpb
imul
lods
not
sete
mov
not
movzbw
bswap
lahf
movl
movzbw
pushf
lea
push
movl
movb
jmp
pushf
pusha
movl
lea
jne
pusha
pushf
movl
mov
pusha
lea
jmp
push
push
pop
mov
repz
sarl
lods
xor
cmp
test
pop
pop
cltd
popa
aam
mov
inc
pop
fidivrl
push
xchg
fs
fidivs
push
push
cmpb
ror
dec
fld
pop
ljmp
loope
aam
aas
and
mov
rcl
lcall
imul
scas
mov
and
fmul
xchg
bound
add
adc
jge
lds
cmp
sarb
insl
adc
xchg
adc
std
mov
xchg
imul
adc
mov
dec
and
mov
mov
pop
lahf
ss
adc
pop
in
cwtl
dec
dec
inc
and
aam
pop
enter
fldcw
test
popf
lahf
icebp
loope
ja
test
fs
xchg
xor
xchg
push
xchg
adc
lds
enter
fmull
cld
inc
pushf
pushf
lea
jb
cmp
stc
test
bt
cmp
push
lea
ja
bt
call
insb
movsl
sbb
push
rcrb
mov
pop
cli
nop
sbb
push
hlt
test
loopne
sub
push
mov
sub
mov
push
out
sub
cmpsb
pop
fs
or
dec
xchg
jp
inc
jge
xchg
adc
int
out
lret
enter
push
aad
es
addb
addr16
jecxz
int
jecxz
lret
inc
jns
jmp
xor
xchg
add
push
lret
sbb
ret
inc
in
shlb
sbb
xchg
shlb
pusha
pushl
ret
lea
je
push
mov
pop
push
jmp
push
aas
mov
cwtl
dec
ficomps
ja
out
mov
cmp
or
dec
pop
addb
cmpsl
inc
decl
inc
cld
test
xchg
and
mov
mov
push
cmp
sahf
insb
jg
fadds
mov
out
pop
es
fcoml
loop
aas
das
incb
cs
cwtl
popf
sar
ret
mov
iret
scas
xchg
cmp
sbb
mov
jno
rorl
mov
adc
push
mov
push
and
pushl
popl
push
pushf
pushl
ret
cli
or
adc
js
stos
dec
mov
or
mov
push
gs
nop
and
sti
pop
stc
cmp
nopl
mov
ljmp
ret
sbb
out
sbb
lea
xchg
add
pop
push
sbb
loop
push
out
cmpsl
int
out
ffree
cmp
cwtl
test
mov
mov
shlb
fsubrs
scas
or
rcrl
dec
xchg
cltd
push
out
jb
addr16
mov
xrelease
pop
addr16
inc
int
dec
push
shll
pushf
mov
ja
mov
popa
cmp
cmp
hlt
pop
in
pop
and
adc
mov
and
fildl
xchg
lods
jmp
pop
jecxz
push
out
push
cmc
xlat
jne
lahf
xor
pop
aad
test
cwtl
int3
mov
sbb
inc
adc
xor
pushf
bound
loop
insb
ds
lock
inc
dec
and
jmp
das
mov
dec
out
xchg
lods
cmpsl
outsb
pop
jle
cmpsl
fsts
add
jl
movsb
push
mov
in
jp
loope
es
bound
mov
mov
insl
sub
rorl
xchg
roll
mov
cmc
cmp
cwtl
cmp
call
and
bound
mov
or
fstl
inc
shll
gs
adc
mov
lcall
pop
sub
pandn
subb
in
mov
cmp
ja
add
xlat
into
adc
xchg
ds
lods
leave
fnstenv
sbb
and
xchg
sbb
add
test
cmp
call
pusha
dec
bt
jmp
sar
mov
call
call
int3
add
mov
or
sub
jge
pop
xchg
popf
adc
xor
push
outsb
dec
or
pop
out
cmp
js
mov
cmp
repnz
sub
jmp
sub
test
mov
xor
jo
cltd
lea
adc
mov
dec
dec
and
pushl
jmp
into
decl
lods
dec
xchg
or
ret
push
in
fisttps
hlt
or
ds
addl
movsl
push
sbb
ret
cmpsb
sarb
lret
adc
scas
dec
leave
cmp
or
xorb
mov
and
mov
and
clc
movb
xor
pushf
lea
call
stc
jmp
push
xchg
scas
fwait
dec
push
sub
pop
decl
pop
fildl
inc
adc
push
pop
outsb
pop
mov
push
out
arpl
mov
mov
push
and
in
pushf
xchg
mov
xchg
ljmp
lret
ret
push
int
mov
add
add
push
push
ljmp
stc
cmp
push
xor
dec
sub
stc
outsl
jae
addr16
mov
push
cwtl
dec
push
call
mov
fucomip
xchg
cmpsb
das
icebp
jae
xchg
mov
pop
xchg
mov
ss
mov
and
mov
pusha
lea
ja
dec
pushf
jmp
scas
call
lods
ret
fwait
out
pop
xchg
sbb
flds
subl
push
pop
mov
jge
pop
lahf
xchg
cltd
sub
push
fsubrs
mov
fucomi
jnp
inc
insl
inc
dec
xchg
testl
jnp
cmp
mov
xchg
iret
lea
call
push
mov
mov
push
push
pusha
lea
jmp
movl
pusha
movl
mov
pushf
push
lea
jmp
pushf
call
pusha
call
sbb
mov
inc
testb
repnz
test
or
jb
push
jb
or
test
mov
xor
fiadds
ret
cwtl
mov
mov
push
int3
lret
int3
js
sbb
lret
sbb
je
cs
inc
call
pusha
pusha
lea
jb
stc
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
test
repnz
call
loop
xchg
sbb
mov
xchg
aam
testl
fwait
and
out
cmp
icebp
pushf
dec
lds
lea
cmpl
test
fucomp
fs
adc
lds
fnstenv
mov
out
popf
adc
filds
xor
fcos
iret
lods
dec
test
ljmp
adcb
pop
and
cwtl
mov
adc
mov
jne
adc
xor
mov
fs
jmp
sub
test
shl
adc
cmc
mov
rol
sar
add
cmc
xor
mov
mov
mov
test
call
daa
mov
push
repnz
out
imul
add
mov
pop
jnp
out
hlt
pop
adcl
jmp
test
leave
dec
lods
xchg
and
jmp
xchg
xchg
repnz
ret
xor
xchg
jnp
stc
jecxz
ret
shl
sub
out
stc
test
notl
xor
insl
cmc
repz
inc
aaa
fstpt
xchg
xchg
lret
shr
cwtl
or
push
cwtl
int3
inc
xchg
cltd
sub
addr16
add
xlat
sarb
lods
lret
jnp
cmp
add
add
mov
lahf
scas
add
mov
push
cmp
fiaddl
jb
in
outsb
xor
insl
icebp
imul
sti
mov
dec
das
std
fbstp
mov
xor
xor
pushl
lea
ja
pushf
push
lea
jne
imul
push
jmp
cmp
movb
call
jnp
sbb
mov
lret
outsb
stos
inc
scas
inc
enter
push
mov
call
jns
ret
xor
mov
iret
push
outsb
or
lock
sub
aam
mov
adc
mov
cmp
jl
lcall
test
mov
cwtl
jle
adc
push
and
inc
xchg
mov
cmp
inc
inc
sbb
fdivrs
ds
fldenv
decb
lea
imul
in
xchg
pop
adc
int
dec
dec
and
pushl
call
add
add
add
add
adc
add
add
test
jecxz
add
in
sbb
sti
out
sbb
cmp
adc
pop
inc
push
add
add
add
mov
xchg
lea
dec
mov
pusha
sets
movb
pushf
mov
pushf
push
mov
pushf
jmp
sub
loope
insl
stc
jp
fwait
iret
push
sti
fisttpl
scas
aas
mov
and
dec
sub
ja
pop
adcb
dec
insl
lods
inc
cmp
aam
and
push
lahf
repz
xchg
jmp
xchg
pop
add
ret
jb
jl
mov
mov
adc
nop
sub
clc
nop
pusha
jle
adc
ret
stos
push
and
ret
lahf
jg
imul
mov
sbb
jl
or
sub
cli
sahf
or
pushf
sub
call
inc
leave
fldl
lahf
mov
and
fwait
xor
pop
fucomi
xor
stos
data16
mull
adc
push
cld
xchg
mov
icebp
fbld
adc
das
aad
addr16
cmp
lcall
ss
jbe
les
dec
or
sahf
and
cmp
mov
mov
xor
jno
mov
lds
fwait
scas
mov
nop
insb
and
lret
inc
hlt
adc
adc
and
fdivrs
bound
sbbb
popf
rcll
and
ret
mov
xor
shlb
push
and
sub
lods
les
sbb
bound
xchg
xchg
data16
sahf
xor
push
negb
xor
cmp
xchg
jle
sub
pop
outsb
xchg
adc
mov
adc
mov
add
scas
rclb
dec
jle
outsb
and
cmp
les
cmc
xor
mov
pop
xchg
dec
int
mov
adc
cmp
test
mov
jbe
out
cli
cwtl
adc
in
mov
stos
inc
dec
jl
and
cmp
push
mov
mov
jle
inc
rcrb
nop
cmp
push
and
jmp
jmp
push
pushf
lea
je
push
pushf
adc
pusha
mov
push
push
lea
jmp
sbb
pop
arpl
adc
cmp
jb
jbe
mov
mov
mov
or
dec
insl
lds
js
shlb
loop
dec
movsl
lods
mov
int3
sub
divb
outsl
jb
dec
pop
add
jae
xor
sbb
stc
iret
mov
mov
call
dec
out
and
aas
addr16
xchg
inc
cmp
imul
in
lret
aam
insb
inc
sbb
mov
sub
lods
pusha
sub
iret
out
push
mov
pop
and
and
jmp
jmp
mov
call
pusha
pushl
pushl
ret
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jns
sbb
sub
test
xor
inc
aad
cmc
jno
popf
daa
test
aad
sbb
fildll
pushf
pop
pushf
sbbb
jle
ficoms
imulb
push
push
popf
push
lock
jl
jge
ds
fbld
repz
or
fiaddl
pop
movl
cmc
xor
rcrb
adc
and
adc
pop
in
popa
and
add
mov
bt
test
bt
cmp
push
lea
ja
adc
shl
rol
sub
neg
cmc
add
btr
mov
setne
mov
cmp
repnz
call
jne
call
lea
jae
not
pusha
mov
pusha
mov
inc
call
cmp
clc
clc
clc
sub
stc
cmp
pusha
push
pusha
lea
jae
push
pusha
movb
mov
lea
jmp
add
dec
outsl
arpl
inc
jb
add
mov
and
jl
pusha
int3
dec
jle
scas
mov
rcrb
enter
dec
pop
pop
cltd
mov
test
or
push
mov
mov
sub
jge
int3
pop
insb
fadd
cmp
out
test
cmp
repnz
js
or
scas
movsb
and
lea
jne
neg
dec
adc
mov
shld
or
lea
adc
sub
or
btc
mov
jmp
movl
pusha
movl
push
mov
lea
jmp
lea
jne
cwtl
movb
pushf
mov
bswap
setbe
pusha
cwtl
lea
push
call
mov
cmp
pushl
lea
je
pushf
pusha
push
lea
jmp
jmp
jmp
lea
jbe
xchg
neg
sub
bsf
test
mov
rcl
btc
xadd
add
mov
bt
bswap
rcl
add
call
jns
xor
mov
xor
add
fcomps
xchg
cli
stos
pop
cmp
rcrl
lcall
mov
subb
dec
cmp
jle
pop
add
mov
out
imul
xchg
jb
out
test
push
push
scas
xchg
mov
sbb
inc
add
xor
adc
adc
gs
pop
orl
mov
cli
movsb
sbb
mov
stc
pop
dec
int3
lods
xor
and
hlt
pop
fisubs
xchg
push
in
mov
sbb
bound
fwait
jbe
out
das
inc
mov
mov
push
xchg
cwtl
mov
pop
dec
xchg
popa
insl
mov
sub
cmc
lds
adc
push
test
rcll
or
lods
mov
and
pop
push
repz
in
pop
and
mov
inc
ficomps
lods
mov
pop
in
in
mov
je
jbe
daa
and
lods
sbbl
sbb
enter
aas
in
rclb
out
pusha
pop
js
pop
es
mov
xchg
pop
lea
loope
push
test
repnz
pushf
jmp
jg
sub
js
jbe
inc
out
fiaddl
cwtl
push
clc
push
push
clc
psrld
das
stos
dec
sbb
xchg
test
xchg
cmpsb
mov
in
gs
ss
cs
and
div
iret
xlat
cmp
fldenv
add
shl
or
movsl
and
cmp
adc
mov
pop
notl
imul
shr
imul
je
adc
push
in
xchg
dec
or
adc
xchg
std
lea
je
pusha
lea
movsbl
movzwl
jmp
call
lods
call
lea
ja
push
lea
jb
push
bt
call
shr
in
ja
jmp
daa
test
addr16
adc
adc
enter
mov
stc
sub
sub
push
lea
and
dec
mov
sub
sarb
sbb
fisubs
xchg
fsubl
or
call
sbb
sarb
push
jecxz
xor
out
jmp
loope
jmp
adc
push
loopne
mov
rcrl
mov
push
jp
ja
enter
dec
ljmp
jp
jb
jle
add
sub
mov
add
xchg
clc
sub
popf
mov
and
repnz
daa
fucomi
dec
cli
adc
jmp
test
rclb
add
xlat
and
jno
mov
xchg
fs
add
jbe
sub
movb
lea
jnp
je
cmc
jmp
call
pushf
pushfw
popw
push
cmc
mov
jmp
add
pushf
mov
lea
jmp
jmp
pushf
movl
jne
push
pusha
lea
jmp
mov
sahf
jp
add
pop
cmc
addr16
sti
jno
mov
pop
sub
clc
mov
or
in
cmp
push
clc
data16
mov
xor
ljmp
cwtl
mov
xor
push
fldt
aas
push
jmp
stc
fidivs
out
add
into
sti
aad
mov
xor
adc
scas
mov
setle
flds
and
lret
stos
mov
shll
les
movsl
insb
loope
pop
shrl
xchg
mov
pop
in
and
jmp
inc
inc
inc
imul
fs
pop
in
data16
cs
jno
std
faddl
ret
daa
adc
mov
mov
add
hlt
sahf
mov
mov
shrb
dec
flds
adc
and
mov
dec
xor
mov
mov
test
xchg
movsb
inc
ret
or
test
mull
icebp
lds
imul
cmpsb
lcall
xchg
add
int
add
ret
xor
adc
adcb
mov
shl
into
mov
sbb
mov
hlt
adc
test
shl
pop
adc
pop
int
or
jo
inc
and
call
add
pop
out
gs
push
icebp
jp
leave
pop
push
mov
jg
add
cwtl
mov
arpl
rorl
add
pop
pop
aad
add
push
cmp
sub
punpckldq
mov
xchg
in
adc
loopne
lea
scas
push
adc
rolb
pop
xor
push
and
movl
movl
movl
pushf
mov
pushl
lea
jmp
call
adc
push
bts
bswap
aam
das
mov
neg
sub
rcr
cwtl
push
ror
push
bswap
push
btc
push
pushf
aad
sub
pushl
mov
jmp
add
nop
push
add
push
add
nop
push
add
pop
add
pop
add
add
add
add
rolb
bt
mov
clc
cmp
add
movb
cmc
clc
stc
test
pushf
movb
movb
lea
jne
call
not
mov
pusha
pushl
ret
movsbw
pusha
pushl
mov
jmp
bt
cmpb
pushf
lea
jne
push
sub
sar
rcl
adc
mov
lea
jmp
aad
in
push
loope
andl
add
cmpsl
xchg
dec
mov
xor
addr16
add
rcrl
add
push
mov
clc
add
push
ds
pusha
cmp
nop
pushf
push
rclb
or
mov
lea
adc
jbe
inc
cwtl
mov
sbb
and
mov
push
out
pop
dec
lock
pop
inc
mov
xor
aam
pop
sub
in
bound
sbb
inc
dec
jmp
cmp
push
int3
js
loop
or
cmp
clc
xchg
lahf
xor
mov
lods
push
mov
daa
jg
dec
adc
jg
out
test
arpl
sahf
jo
add
xor
dec
into
icebp
nop
jle
test
xor
push
dec
pushf
sub
mov
adc
imul
dec
loopne
jp
adc
sbb
je
cmp
popf
lcall
loopne
lea
jno
pop
xchg
es
and
aam
or
inc
lock
pop
ss
xchg
inc
cli
jb
mov
sub
dec
in
js
lcall
jno
add
stos
aam
mov
fwait
daa
add
out
xor
es
mov
sub
mov
push
arpl
and
call
data16
stos
push
aaa
mov
repz
sbb
inc
sub
mov
push
in
mov
sub
pushf
push
jno
jb
xlat
and
xorl
jo
mov
test
adc
lea
and
cmc
and
cmpsb
cmp
jno
jb
lods
loope
outsl
xorl
clc
sbb
pop
mov
push
movb
cli
out
sub
xor
and
hlt
cmpb
sub
iret
in
adc
andl
adc
inc
cmp
jo
cltd
xor
jge,pt
int3
in
xlat
imul
pop
xor
lret
push
jge
push
xor
jg
fcompl
mov
push
lock
mov
jae
pop
push
fdivrl
mov
and
sbb
mov
mov
add
daa
sbb
jge
outsl
stos
mov
fdivrl
cmp
mov
jb
cmpsl
shld
int
dec
out
aad
test
pop
jle
push
sbb
cltd
test
mov
repz
and
or
cmp
int3
out
int
xor
push
cmp
or
fiaddl
mov
lock
dec
arpl
mov
inc
jae
sub
mov
adc
push
mov
and
mov
dec
cld
jg
pusha
movl
jmp
movzbw
lea
lea
push
jmp
push
aaa
stos
inc
imul
cmp
gs
inc
shll
lea
jecxz
aas
or
dec
push
rorl
gs
mov
inc
sub
mov
icebp
lods
push
daa
pandn
xchg
xchg
push
sub
sbb
leave
jmp
popa
test
cltd
or
or
xchg
loopne
push
pop
jns
insb
clc
xchg
sbb
push
fldt
aas
sub
lcall
ret
jg
xchg
cmp
xor
rorb
testl
mov
pop
insl
out
test
push
aad
sbb
lods
add
gs
jae
mov
arpl
adc
lods
inc
pop
bound
pop
enter
mov
in
jnp
sub
adc
lds
or
rcll
and
mov
or
adc
popa
jmp
and
dec
mov
insb
mov
outsb
or
pop
test
mov
and
pop
jg
lods
add
pop
mov
inc
lret
sub
mov
cmc
cld
popf
inc
movsl
inc
scas
jecxz
pop
scas
xor
nop
lret
jbe
lock
dec
push
ja
daa
or
lahf
movsl
push
rorb
fwait
pop
and
insb
xchg
push
sbb
push
ror
sbb
and
lret
ss
mov
mov
sub
bound
push
xor
push
push
fld
xorb
enter
dec
jle
mov
inc
fcomps
hlt
and
push
or
cmc
and
call
and
cmp
and
push
jl
int3
push
lock
jge
fildll
mov
in
dec
push
cmp
dec
and
test
and
jmp
call
lea
jne
bswap
call
call
jmp
imul
sub
or
adcb
sub
dec
out
mov
movsb
inc
clc
cmpsb
fs
mov
call
push
movsb
mov
lods
xchg
sub
js
or
movsb
fs
sbb
and
call
lea
je
lea
mov
call
lea
je
pusha
jmp
add
add
andl
jns
rcr
rep
sbb
jge
jmp
pop
cmc
adc
mov
dec
outsb
sbb
sub
xchg
hlt
ljmp
xor
lods
popa
es
pop
mov
mov
xchg
pop
cmp
or
in
insb
js
cld
mov
cltd
xchg
or
addl
in
push
jne
imul
push
outsb
jge
sti
outsb
les
push
out
stos
mov
mov
jne
stos
and
arpl
push
xchg
sbb
test
xchg
jp
jmp
clc
mov
shl
cmp
add
setp
mov
cmc
bt
test
push
pusha
movw
jmp
jmp
pusha
movl
pushf
mov
pushf
pushf
movl
push
lea
jmp
ds
in
gs
pop
pop
push
xchg
outsl
fistl
jno
mov
push
mov
outsb
mov
inc
mov
lock
push
pop
pushf
and
insb
loopne
bound
push
xchg
movsl
daa
adc
cmp
push
jbe
enter
lret
jb
adcb
sub
xchg
out
pushf
sbb
sbb
addr16
iret
cwtl
sbb
jb
add
fldenv
sub
jge
fstps
out
jp
mov
insl
inc
jmp
sbbl
call
jecxz
movsl
add
xor
add
aaa
sub
jae
jne
stos
dec
rcll
stc
int3
fmull
mov
mov
nop
imul
cltd
daa
mov
movsl
add
sbbl
aas
jbe
cmp
out
shlb
xor
or
and
mov
pusha
xchg
movzbw
pushf
not
movl
jmp
push
pusha
movl
mov
mov
mov
movl
movb
push
lea
jmp
movl
call
cmc
pushf
cmp
pushf
pushf
pusha
pushf
lea
jne
pushf
call
lret
pop
icebp
inc
jle
lcall
ds
loop
cs
int3
jb
pop
jge
jbe
mov
andb
push
lods
fnstenv
ja
rorb
movsl
popf
addr16
pop
mov
and
icebp
popa
cmp
inc
dec
sub
stos
adc
dec
and
cmc
add
popa
andb
call
add
out
lret
adc
mov
loopne
xchg
or
sbb
cli
fmuls
jmp
popf
xor
adc
int
dec
fwait
jbe
mov
mov
and
lahf
mov
mov
push
hlt
lods
lods
sub
scas
inc
leave
shl
pushf
hlt
shl
cmp
fmuls
jo
or
ret
push
xchg
adc
jge
andl
gs
pop
std
jne
mov
daa
dec
and
add
dec
es
and
icebp
inc
pusha
push
push
icebp
dec
in
adc
jg
stos
adc
cmc
scas
andl
add
and
pusha
cmp
fst
jns
in
and
orb
xchg
ficoml
and
in
mov
out
or
jl
xorb
push
and
iret
mov
clc
mov
rcrb
xchg
cmpsl
iret
fimuls
push
aad
jns
adc
loopne
fwait
sbb
loopne
and
nop
bound
lret
push
jl
pusha
dec
push
or
adc
push
cmp
imul
cmp
leave
fwait
mov
in
lahf
imul
push
stos
idiv
sbb
jae
jmp
mov
mov
in
data16
mov
jns
xchg
cmp
pop
iret
jge
jecxz
sub
arpl
loope
sbb
test
repnz
rclb
xor
out
or
fwait
xchg
adc
es
stos
pop
dec
push
dec
push
sbb
scas
mov
or
pop
aas
pop
repz
push
adc
hlt
dec
mov
and
imul
repz
popf
sub
or
stos
es
sahf
pop
ds
cmpb
xchg
adc
jb
addb
jb
in
jmp
and
inc
adc
push
xchg
arpl
imul
xor
gs
mov
cmp
dec
roll
lds
sub
ds
pop
xor
sbb
xchg
scas
dec
cmc
loope
std
imul
jb
xchg
xor
enter
push
imulb
data16
xor
lock
movsb
xchg
out
ljmp
adc
mov
outsl
push
test
xor
mov
ficomps
push
or
int3
sahf
inc
fistpll
inc
bound
jae
roll
nop
add
in
jo
pusha
push
fidivrs
jmp
sbb
or
fbstp
mov
lret
fstpt
dec
bound
and
fcmovnbe
setae
ret
and
push
or
add
hlt
mov
xor
mov
repz
jge
mov
jae
sub
jg
adc
add
stc
xor
jbe
data16
jae
ss
inc
aad
call
cld
div
xor
loopne
inc
push
mov
js
mov
ljmp
adc
and
cmp
jno
mov
add
hlt
mov
mov
scas
adc
adc
sub
mov
dec
test
cmp
inc
les
mov
pop
add
push
inc
sub
mov
dec
into
or
in
dec
pop
ljmp
adc
shll
mov
pop
sub
mov
cmp
mov
and
sub
add
push
push
rcrb
les
mov
and
je
int3
lods
push
mov
insl
jnp
push
jmp
lods
arpl
int3
mov
sub
mov
mov
outsl
pop
or
xchg
imul
jnp
inc
jge
stc
add
les
fsubrl
mov
mov
dec
fucomi
mov
sub
pop
int
andb
xchg
daa
mov
movsbl
dec
or
or
sbb
pop
push
js
ljmp
into
aam
add
mov
clc
loopne
or
rorb
movsl
mov
mov
mov
andl
mov
jno
xor
movb
mov
push
dec
stc
movl
jmp
pushf
lea
jae
pushf
pushf
jmp
bound
xchg
cmp
adc
lret
shlb
outsl
mov
jl
mov
cli
fimull
and
aad
jle
notb
xchg
adc
jg
sbb
lods
jae
pop
iret
shll
xchg
decb
xor
lea
pusha
or
push
jmp
mov
dec
call
sarb
sbb
dec
icebp
rcll
jns
xlat
mov
dec
test
fidivrs
sbbb
dec
in
or
xchg
imul
sub
cmpsb
movsb
mov
fstl
in
jb
xlat
xchg
out
lock
jge
test
inc
pop
icebp
into
jo
in
inc
arpl
pop
mov
xor
aaa
popf
dec
das
aas
ja
push
shr
adc
lret
adc
mov
out
aad
mov
rcl
and
sets
pushf
movsbl
lea
pushf
xchg
push
not
pushf
lea
pushl
popl
jmp
call
es
dec
jns
dec
or
lea
mov
jecxz
std
jg
xchg
inc
cmc
fistpl
aas
xchg
notl
sub
popf
xor
or
add
or
enter
add
cmpl
or
ljmp
push
dec
fldcw
push
push
iret
mov
sub
imul
pop
cmp
gs
imul
outsl
mov
popa
jno
test
scas
inc
pop
imul
adc
int
popa
rcll
xchg
lds
jmp
rolb
ja
pop
icebp
aad
mov
daa
stc
mull
xchg
std
fcomip
ret
cmp
jmp
lea
jne
pushf
lea
push
movb
push
mov
push
jmp
cmp
pushf
jmp
or
imul
xor
pop
rcrl
cltd
or
dec
lock
jmp
xor
mov
dec
in
mov
daa
shlb
jecxz
push
dec
mov
cmc
cmc
orl
push
popa
pop
test
add
jns
adcl
mov
and
cmp
mov
mov
pushf
push
add
dec
gs
fxam
mov
into
loopne
icebp
sub
or
les
cmp
jg
cltd
ja
loope
ret
adc
lds
xchg
push
xor
mov
inc
dec
lcall
pusha
out
int3
lock
push
and
into
push
data16
ficoms
subb
push
cs
es
lds
jle
icebp
shl
cwtl
fisubs
shrb
xchg
xor
adc
aam
movsb
addr16
fcompl
rcrl
sbb
orb
xchg
cmc
adc
xlat
dec
lcall
add
stos
mov
and
lods
lock
ja
sahf
mov
out
xor
jb
push
push
rcrb
nop
or
and
inc
stos
cmpb
or
mov
adc
xor
ror
jne
jne
or
jne
xchg
mov
jecxz
add
mov
popa
add
pop
cmp
sub
xchg
xchg
mov
mov
mov
adc
stc
dec
cmpsb
addr16
fnstenv
pusha
xchg
les
aad
mov
jno
fimuls
stc
out
lock
inc
sti
out
xor
mov
mov
cmp
fsubs
pop
push
sub
test
leave
decl
sub
xchg
cmp
xor
lock
test
nop
aaa
inc
test
sub
insl
jne
mov
dec
roll
sub
adc
xchg
jp
or
and
dec
dec
pop
das
arpl
jg
jmp
ficoms
clc
jecxz
xor
mov
lea
movsbw
pusha
mov
bswap
setle
mov
setno
lea
seto
mov
pushf
mov
jmp
xchg
clc
mov
cmp
sub
push
rep
push
mov
mov
pushf
pusha
lea
jmp
mov
add
in
loopne
mov
cmpsl
pop
shrl
subl
pop
int
vpsubw
mov
in
mov
xlat
jmp
mov
fmull
cwtl
lods
clc
cltd
clc
sub
push
cld
add
and
stos
xchg
cmp
flds
xchg
push
jg
xchg
mov
push
and
clc
sub
jmp
mov
mov
lea
je
cmc
cmp
pushf
jmp
mov
add
scas
jp
inc
ret
popa
in
fildll
mov
lret
aaa
in
mov
or
popf
mov
sbb
out
cmpsl
sahf
inc
cmc
cwtl
mov
xchg
les
es
push
push
or
mov
dec
and
and
pushl
jmp
shr
outsb
je
adcl
bnd
xchg
and
cmp
data16
jmp
pop
shll
sti
mov
sbb
insl
outsl
xor
xchg
pop
sbb
jmp
scas
arpl
sti
fstl
mov
and
push
or
mov
ss
scas
aaa
pop
push
fnsave
and
aad
inc
dec
lea
cwtl
aad
in
jne
jns
xor
push
fisubl
or
mov
mov
leave
cmc
and
cld
jle
mov
or
cmp
mov
sbb
mov
mov
test
sub
aad
addr16
daa
das
inc
arpl
xchg
sub
icebp
es
fisubrl
data16
out
dec
adc
fsubl
xchg
pushf
adc
movb
lea
je
pusha
movb
lea
call
pusha
lea
jb
pushf
pushf
pusha
pushl
ret
sahf
adc
add
dec
lea
mov
test
cmp
fs
cmp
or
popa
xor
leave
cmpsl
jb
out
fistl
lods
js
scas
cwtl
mov
add
add
in
insb
es
sbb
mov
dec
stc
loope
imul
xchg
add
xchg
vdivps
add
div
imul
and
mov
dec
call
lea
jae
cmc
clc
push
clc
add
call
lea
je
cmc
stc
test
cmp
pusha
mov
call
pushf
popf
dec
das
lds
pop
mov
mov
lea
scas
aaa
lods
xchg
mov
push
stos
ret
test
jmp
dec
sub
xor
jecxz
pop
insb
test
fdivrs
push
mov
or
out
mov
xchg
lcall
mov
or
jne
int
shl
xchg
cmp
aas
pop
jecxz
leave
call
inc
fwait
mov
xchg
jno
adc
add
lahf
push
xor
and
mov
bsf
mov
rol
test
shl
mov
xor
dec
stc
test
sub
not
mov
pushf
lods
pusha
and
shl
xor
mov
call
jmp
lea
call
jmp
movl
push
pushl
mov
lea
jmp
call
sbb
outsl
dec
add
cmp
dec
scas
pop
shll
in
dec
sbb
add
pmaxub
sbbb
dec
fsubl
cmc
push
ret
mov
xor
sub
rorb
and
jge
fimuls
rorl
sub
ljmp
fdiv
or
dec
mov
xor
aaa
lea
shll
push
mov
loop
sub
xchg
push
sub
cmp
lea
sbb
adc
and
xor
and
or
push
outsb
push
mov
xor
cmp
xor
sbb
pushf
lods
aam
xor
cli
and
add
or
sarb
mov
in
lret
xchg
je
shr
shr
bsr
mov
inc
pusha
rcr
adc
add
lea
jns
movzbw
movsbl
mov
pushf
push
movb
mov
not
lods
stc
clc
jmp
lea
jne
pusha
movb
call
imul
sahf
add
pop
or
xor
push
lea
leave
fiaddl
stc
arpl
bound
les
imul
cmp
mov
js
jbe
pushf
push
pushf
inc
sbbb
out
ss
pop
mov
jae
push
out
add
push
dec
pop
ror
int
sbb
adc
mov
or
cmp
div
mov
and
mov
aad
mov
jg
inc
xor
xor
fidivrs
and
add
jle
ficoml
ss
pop
and
push
mov
add
lret
push
enter
iret
push
out
call
std
adc
jmp
imul
icebp
xchg
fisubs
mov
or
mov
popa
outsb
cmp
push
hlt
fisubs
mov
or
insl
int3
xchg
clc
lcall
pop
cmp
ja
out
dec
add
lea
and
movsb
jbe
hlt
mov
in
jo
imul
push
test
xor
xor
and
pushf
pusha
pushf
movl
pusha
movw
call
mov
movsbw
movzwl
jmp
pushf
push
lea
jne
mov
or
adc
mov
add
dec
rcr
sub
btr
mov
clc
test
sub
clc
cmp
clc
bt
pushl
bt
bt
push
cmp
push
pushl
call
call
imul
gs
xor
cs
insb
add
daa
mov
dec
mov
rorb
add
xchg
and
outsl
add
iret
mov
inc
or
xchg
jo
cltd
push
fcomip
adc
push
mov
push
xor
lods
jp
enter
jb
sbb
mov
push
and
enter
sub
mov
cmp
in
xchg
push
es
ret
mov
int
enter
cli
decl
adc
add
cmc
jle
cmp
pusha
pusha
call
jmp
call
pushf
cmp
cmc
stc
or
mov
pushl
lea
je
jmp
int3
popf
call
jmp
mov
pushl
pushf
bswap
lea
pushl
popl
pushf
not
lahf
not
mov
push
cwtl
movl
not
lea
push
call
movb
call
lea
jae
call
stc
mov
test
clc
cmpb
push
pushf
pusha
lea
jne
btc
sub
rol
mov
inc
add
bt
push
mov
bt
pusha
stc
test
test
jmp
stc
push
clc
pushl
or
pushf
push
jmp
aam
cmp
aam
jbe
xchg
cli
aam
faddl
cmp
inc
ljmp
inc
sub
cmpsb
es
out
cmp
lret
mov
and
jmp
ljmp
mov
es
lahf
movsb
test
fnsave
inc
cmpsl
lcall
mov
rclb
add
pop
mov
inc
aaa
inc
pusha
lods
and
jecxz
hlt
xchg
adc
icebp
out
loope
pop
push
sbb
in
mov
dec
faddl
fsubs
jo
ss
xor
or
xlat
sti
sbb
cld
push
mov
adc
je
adc
outsb
dec
push
in
mov
daa
js
loop
divb
fiadds
xchg
push
cmp
int3
cmp
push
jp
jno
or
pusha
enter
sbb
stos
stos
cmpsb
int3
jmp
jecxz
sub
sub
xchg
cmp
push
cmp
xor
jg
jecxz
mov
sbb
adc
mov
enter
out
mov
cmp
in
push
xor
push
mov
je
arpl
xchg
dec
dec
ja
xchg
insb
mov
in
cld
sub
mov
mov
jne
pop
imull
imul
mov
mov
enter
xchg
pushf
call
clc
bt
test
pushf
lea
je
clc
sub
cmc
cmp
cmp
push
mov
pushf
pusha
lea
ja
stc
stc
pusha
imul
cmc
cmc
push
add
pusha
pushf
pushl
movb
lea
jmp
repnz
repnz
jne
movsl
daa
test
jecxz
outsl
add
out
add
repnz
cltd
outsl
push
and
and
sbb
ljmp
lods
jo
ss
mov
outsb
subb
add
adc
test
jnp
and
xchg
rcrb
or
jne
loope
mov
addr16
jecxz
sbb
cltd
movsl
imul
lods
push
xor
adc
pop
bound
fiadds
mov
xchg
xlat
inc
and
mov
pop
out
mov
pop
in
add
and
fwait
mov
push
fistl
sbb
out
aas
pop
push
jne
repz
mov
popf
add
cli
jmp
leave
pusha
call
imull
lret
pop
fs
xchg
xor
mov
push
pop
addr16
inc
cmpsl
fstpt
ds
and
xor
mov
sub
in
in
insl
jno
push
iret
pusha
sbb
in
xchg
sub
stos
pusha
lret
inc
cli
mov
pop
mov
test
dec
jmp
dec
in
popf
jb
sarb
jmp
push
add
mov
pop
sbb
shrl
imul
repnz
and
jb
mov
enter
in
mov
mov
add
in
xorb
mov
mov
or
pop
lret
or
enter
jae
xchg
popa
imull
mov
add
adc
lret
inc
jmp
dec
sub
lret
or
pop
out
enter
int
sbb
xchg
and
gs
sub
testb
iret
mov
les
xor
scas
jp
sub
fldt
and
clc
adc
sub
sub
mov
mov
dec
out
pushf
call
sahf
mov
xlat
aad
jns
lretw
ficomps
lcall
fsubrl
push
stos
mov
add
fs
push
xor
xchg
mov
divb
or
or
pop
or
sbb
adc
ss
fisubs
stos
test
lods
cld
inc
or
mov
push
jl
rorl
mov
push
aaa
sbb
lahf
daa
pop
ja
lea
je
pushf
call
mov
push
push
movsb
xor
xchg
test
mov
jne
sbbl
or
and
mov
iret
pop
jp
rcl
test
or
pushl
push
cmp
lds
lcall
repz
lea
pushf
call
stos
popaw
pop
and
inc
out
stos
in
aad
and
jo
mov
inc
loop
jmp
lret
gs
dec
lock
stc
or
xor
movsb
jbe
outsl
xor
in
stos
push
mov
mov
xchg
ret
sbb
sbb
cmc
add
movl
pusha
mov
mov
push
movl
movb
lea
jmp
mov
mov
ja
push
sbb
cmpsl
and
mov
je
ret
sbb
and
in
sarb
fisttpll
adc
outsl
in
pop
add
sub
loopne
add
inc
lods
aas
popa
lea
inc
notl
jmp
test
shll
fisttpll
adc
mov
inc
fldenv
lods
pop
mov
test
lcall
cmp
or
out
sbb
cmpsl
sarl
xchg
jp
mov
outsb
fiadds
or
pop
inc
movsl
push
and
mov
cmpsb
mov
icebp
cmp
popa
push
mov
scas
mov
push
jae
mov
aas
inc
xchg
scas
mov
test
lcall
xlat
daa
insl
pop
mov
lcall
mov
mov
rcr
lods
push
test
mov
lcallw
push
xchg
xchg
sbb
test
xchg
mov
mov
dec
and
adc
fbld
cmpsl
sahf
fidivrl
sub
xor
or
dec
adc
iret
and
stos
push
mov
aam
push
sub
loop
adc
adcb
fwait
bound
int3
xor
mov
cmp
jae
mov
stos
adc
xlat
popa
add
cmp
pop
shrl
cmpsb
and
out
jmp
hlt
push
mov
test
jle
scas
stos
movsb
mov
push
subb
ja
out
sbbb
popa
sbb
cmpsb
xchg
xchg
ficompl
mov
push
sahf
aas
repnz
cmpsl
call
mov
and
inc
fisubrl
pop
es
test
sbb
daa
scas
sbb
fcoml
icebp
loop
sbbb
lahf
lea
and
add
sarl
and
in
push
jmp
insl
sbb
mov
in
inc
hlt
xlat
cmc
scas
gs
clc
lods
outsl
mov
add
and
dec
std
test
or
cmpsb
mov
mov
mov
inc
dec
divb
repnz
xchg
test
clc
outsl
data16
and
mov
mov
movsb
fimull
and
mov
stc
stos
add
adc
pop
ja
movsb
mov
fidivl
ret
rcl
inc
insb
lea
mov
sub
in
dec
xlat
push
call
fwait
scas
repnz
xchg
fimull
cmpb
jmp
scas
call
test
dec
or
cmpsb
out
mov
fistps
push
cmpsl
pop
push
cmp
lret
cltd
mov
mov
or
push
dec
sahf
lods
rorl
mov
inc
pop
dec
fnsave
or
mov
jnp
ror
cmp
fnstcw
fdivrl
mov
fldcw
adcl
or
inc
add
mov
nop
cmp
int
and
loopne
sub
popa
adc
rclb
enter
call
xor
xor
addb
nop
mov
jl
xchg
ret
mov
xlat
cmp
loop
cmp
xchg
xchg
rclb
xor
dec
jecxz
dec
and
roll
push
xchg
addr16
fisttpll
ret
xchg
cmp
ror
cwtl
stos
neg
pop
bound
cmp
push
adc
push
pushf
fwait
add
out
mov
rcrb
xchg
or
ljmp
fwait
shl
sbb
ss
dec
fwait
test
leave
andb
xor
dec
pop
push
das
mov
js
lret
stos
aaa
aad
daa
add
dec
gs
sarl
das
loopne
push
stos
adc
sbb
or
les
cltd
test
fisubrl
lcall
aam
inc
and
das
or
lcall
jne
and
lcall
clc
pusha
pushf
xchg
jmp
inc
mov
lods
icebp
ret
loope
xorb
in
scas
sarb
pop
push
andb
jge
sbbb
js
sbb
cli
je
aaa
aam
or
lods
sbb
adc
andb
adc
cmpsl
outsb
sbbb
scas
mov
in
mov
stos
xchg
test
ficoml
repnz
push
add
test
or
dec
jge
popa
mov
cmp
fcmovbe
and
mov
add
cs
repz
pop
mov
bound
out
test
loop
add
sbb
cwtl
outsl
test
movsb
sbb
cmpsb
out
clc
pop
sbbb
mov
pop
pop
push
sub
mov
xchg
scas
loopne
test
sahf
movsb
popf
inc
cltd
mov
mov
mov
sahf
add
sub
cmc
lods
inc
test
xor
push
adc
push
ds
mov
fstpl
push
ret
sti
mov
sbb
addr16
cltd
dec
out
sub
shll
or
dec
cmp
xor
std
out
fadds
stos
mov
dec
jg
and
push
xor
movb
andb
jg
aad
ret
addb
mov
xor
movsl
lods
fisubl
mov
push
imul
sub
xchg
jo
test
mov
nop
mov
mov
mov
out
mov
xor
mov
cmp
repnz
inc
andl
ljmp
mov
jo
jle
mov
mov
shrb
add
mov
jae
fdivrs
push
in
pop
or
add
jb
loopne
cwtl
mov
das
xchg
je
push
mov
loopne
and
sbb
jle
movsb
imul
imul
lock
pushf
roll
scas
pop
jo
mov
jmp
sub
fiaddl
mov
in
xchg
add
rcrb
and
ret
mov
mov
ss
std
fwait
scas
movsb
lcall
jnp
add
orb
and
mull
cwtl
daa
push
test
mov
xchg
and
or
mov
rcll
cmpsb
xchg
fbld
les
sbb
jmp
mov
daa
cwtl
xchg
aaa
out
xor
filds
lcall
fisubl
shrb
hlt
adcb
add
sbb
or
sub
hlt
rcrl
add
push
xor
test
mov
sbb
movsl
jmp
jmp
mov
outsb
pop
daa
adcb
dec
movsb
push
sub
mov
scas
dec
push
lcall
mov
int
je
lahf
add
or
adc
add
aad
mov
jmp
repnz
cld
sbb
jp
and
sub
jecxz
inc
dec
pop
in
clc
rorl
mov
gs
arpl
stos
ljmp
sti
add
pusha
sbb
notl
sahf
scas
popf
movsl
adc
mov
xchg
jne
jmp
loopne
push
mov
sbb
popa
mov
call
scas
fcompl
lcall
xchg
jle
out
clc
mov
sub
sarl
fimuls
jb
mov
add
pop
cmpsl
dec
push
and
sahf
inc
xchg
call
add
fnstcw
lcall
mov
cmpsb
popf
vpavgb
adc
rolb
jne
lret
cmc
push
adc
ds
pop
lcall
addr16
xchg
and
aaa
fs
lcall
xchg
shll
ret
jmp
cmpb
jg
cmpsl
clc
cmc
sarb
jo
cmpl
adc
mov
fcoms
loopne
roll
mov
cmp
addb
test
lcall
xor
daa
add
lcall
mov
inc
divb
xorl
mov
pop
mov
push
insl
std
movsl
xchg
cmc
adc
mov
lcall
push
aas
in
sub
cwtl
mov
gs
pop
subb
test
fs
lock
lods
mov
pop
aad
repnz
pusha
movsb
mov
shrl
out
adc
sbb
into
daa
lcall
imul
jl
mov
loop
xchg
cmp
stc
decb
xchg
inc
fiadds
mov
adc
xsaves
stos
and
mov
mov
ss
jo
cmpsl
lock
gs
js
fidivs
jle
pop
out
insl
and
add
insw
push
cli
lahf
aaa
mov
clc
pop
mov
mov
shl
mov
lock
pop
mov
pop
movsb
adc
add
push
cmpsl
jno
jo
fcmovb
inc
hlt
test
pop
jle
test
into
mov
ret
divl
jbe
icebp
cltd
xchg
sahf
cmpsl
lcall
jbe
jp
loopne
and
mov
cld
and
mov
sub
sub
sti
xchg
bnd
xchg
lea
test
mov
test
mov
sub
push
ret
lods
mov
dec
popa
std
mov
rcrl
rorl
in
nop
sbb
aaa
pop
push
xchg
sbb
add
nop
adc
lcall
rol
mov
ret
or
or
add
inc
and
sarl
ljmp
lea
mov
add
call
mov
cmpsl
in
adc
repz
popa
fdivrl
cltd
lret
test
push
lea
scas
mov
mov
stos
add
xor
mov
cmpsl
scas
sbb
jge
sub
scas
lcall
mov
test
add
ss
push
insb
adc
out
mov
mov
lods
iret
gs
cmp
scas
push
in
ficomps
push
xor
sub
jge
addb
xchg
adc
shlb
mov
fisubrl
cmp
pop
bound
sub
rol
fmull
je
or
mov
sti
mov
fisubl
sub
mov
dec
sbb
rcll
inc
inc
mov
in
clc
inc
js
and
mov
mov
pop
dec
xor
cld
fisubrl
mov
add
fidivs
adc
mov
shll
sbb
push
loop
pop
inc
loope
and
stos
jle
mov
xor
mov
sbb
aad
sbb
mov
test
push
mov
jmp
test
cmp
imul
or
mov
xchg
push
or
loopne
out
mov
outsb
sbb
lods
push
and
mov
je
lods
pop
sti
inc
rcr
inc
mov
xchg
mov
adc
xchg
mov
mov
cmp
out
mov
mov
mov
mov
xorb
repnz
pusha
sbb
inc
mov
movb
bound
fisttpll
sub
daa
mov
lret
hlt
insl
adc
and
add
xchg
mov
xor
subb
fs
sbb
daa
jmp
clc
push
mov
shll
and
jne
jb
dec
pop
pusha
mov
xlat
cli
insl
out
je
ja
fidivl
sub
jl
cld
fsubr
ja
and
ja
xor
add
cmpsb
inc
lret
add
push
call
and
lret
fidivl
mov
les
cmp
mov
test
xor
fsubs
dec
add
inc
movb
jmp
pop
add
dec
lods
and
test
in
mov
mov
ficomps
and
push
andl
shll
inc
xchg
xchg
jb
out
mov
lcall
xor
xchg
push
fwait
stc
pop
scas
xor
adc
arpl
test
sbb
xor
pushf
test
add
xchg
ss
popf
out
push
add
ret
sbb
jecxz
adc
mov
mov
adc
push
mov
mov
ss
cwtl
pushf
pushf
es
lea
addb
out
shrl
dec
adc
insb
mov
adc
shll
cld
ficomps
push
push
adc
call
imul
jae
ret
lret
rcrb
xor
inc
test
addr16
gs
mov
sbb
subl
shll
ret
outsl
mov
dec
adc
xchg
xor
cmp
adc
lret
test
sahf
pop
fwait
cmpb
scas
adc
in
sbb
dec
and
cmp
rcrb
popa
popa
inc
outsb
push
rcrb
push
mov
stos
pop
or
xchg
jp
aaa
sbb
and
aaa
jmp
call
out
mov
mov
les
jge
mul
sub
fistps
dec
xchg
fdivp
ljmp
test
and
push
aas
mov
xorb
mov
push
inc
lret
mov
fisubrl
xchg
adc
mov
lcall
adc
sahf
cmpsb
loopne
mov
fiaddl
or
xor
les
jmp
inc
aad
inc
scas
test
shlb
push
push
jae
inc
dec
ret
mov
fadd
or
jmp
ljmp
daa
loopne
jo
test
add
push
lret
hlt
hlt
mov
pushf
inc
lret
lock
ffreep
clc
xchg
shrl
push
sub
cli
mov
loopne
mov
jg
mov
scas
fiadds
jle
mov
xor
adcb
inc
nopl
sbbb
stc
inc
cmp
and
daa
in
add
jp
les
mov
xor
addb
pop
sahf
nop
in
mov
xor
dec
cmpsb
movsb
aas
imul
lock
mov
ficoml
add
jmp
mov
mov
mov
cmc
add
lcall
insb
sub
fs
bound
cli
add
test
push
aas
add
stc
int3
mov
fcmovb
mov
fnsave
mov
jp
pop
mov
and
loop
loopne
lret
int3
out
dec
iret
sbb
xor
fidivrl
inc
lcall
xor
ret
dec
pop
sub
rcrl
mov
pusha
jno
aaa
in
xchg
push
scas
fiadds
fisttps
insl
xor
dec
fisttpll
sbb
pop
test
sbb
std
rolb
scas
xchg
ds
rol
cwtl
adc
adc
cmp
mov
repnz
sbb
dec
fwait
dec
pop
loop
mov
test
mov
inc
movsb
sbb
leave
push
insb
lods
mov
ljmp
js
lods
int
loopne
popa
ret
xor
mov
scas
test
imul
mov
xchg
ss
jecxz
shrl
lret
stos
stos
xchg
adc
nop
repz
leave
mov
dec
xchg
mov
fisubrl
pop
cld
push
mov
or
xlat
and
les
mov
ficoml
xor
lret
inc
stos
xchg
xchg
mov
add
ss
or
out
push
jp
fldenv
pop
cmpsb
movsb
adc
adcl
aaa
xor
addr16
rolb
loopne
sahf
and
rolb
adcb
daa
add
cmpsl
push
sbb
pop
mov
mov
sahf
fisubrl
or
adc
dec
repnz
dec
xchg
jmp
iret
cld
mov
cmpl
mov
push
sub
lods
mov
push
fsubp
movsb
mov
mov
jl
cld
ljmp
mov
aaa
xchg
inc
pop
xchg
popa
sbb
mov
mov
mov
push
fildl
adc
cld
cmpsl
in
in
es
adcb
in
cmpsb
stos
lods
pop
add
test
pop
loopne
test
fisubl
cmp
popf
mov
mov
repnz
jl
leave
sbbb
sti
cmc
out
and
mov
xchg
adc
aam
mov
lcall
out
inc
mov
popa
cmpsl
leave
xchg
lcall
aad
test
stos
mov
movsl
pop
cs
fisubs
into
pop
sub
cli
fistpl
out
mov
xor
cmpsl
dec
jnp
mov
mov
cmpsl
popa
les
sbb
cmpsl
fidivs
test
loope
aam
loop
rcrb
mov
mov
scas
xchg
mov
and
xchg
cwtl
xlat
dec
adc
push
xchg
cli
pop
mov
outsl
ret
pop
sbb
lret
out
xor
push
bound
adc
sub
or
push
scas
lods
mov
adcb
loop
cmpsb
add
xchg
and
clc
add
cs
repnz
xor
cmpb
mov
jge
fdivrp
scas
xchg
mov
aas
loop
push
mov
dec
test
pop
fsts
sub
push
outsw
push
add
adc
lods
lcall
pop
test
cmpsl
scas
xchg
fimull
outsl
sub
and
mov
sbb
mov
in
movsl
dec
adc
adc
and
test
inc
cmpsl
xchg
lods
popa
rolb
imull
mov
loopne
fidivl
pusha
adcl
fadd
mov
test
mov
lret
loop
or
lcall
cmpsb
nop
inc
out
jbe
xchg
inc
xchg
add
stos
pushf
dec
xchg
mov
adc
xlat
fs
inc
xacquire
les
mov
ret
or
out
jmp
adc
inc
popf
jne
mov
nop
repnz
insb
scas
mov
lret
lret
shl
push
sub
pushf
mov
lcall
cmp
xchg
daa
movsl
xor
aaa
fiadds
ss
cmc
jbe
xlat
test
mov
imulb
jns
mov
mov
inc
pop
test
movsl
stos
xor
nop
xchg
ret
aas
pop
roll
insl
mov
out
fdivs
addb
fs
inc
rol
and
scas
sbb
lcall
test
cmpsb
mov
loopne
inc
rcll
adc
aam
mov
sub
movsb
cs
rcrl
rcr
int3
stos
cwtl
sub
sbb
push
popl
push
xor
mov
mov
cltd
mov
je
lock
mov
mov
lds
or
test
sbbl
nop
cmpsl
popf
pusha
popa
add
scas
ret
fsubs
scas
lret
rolb
xchg
das
adc
test
xor
fwait
push
or
fildl
iret
and
pop
daa
fisubs
xchg
push
jns
test
cltd
nop
shlb
sbb
sahf
sub
scas
daa
test
add
sbb
jge
into
and
or
ret
mov
mov
mov
je
fsubl
inc
adc
cmp
popa
fnsave
aad
jne
or
push
xor
dec
nop
in
mov
fdivs
sbb
test
jmp
xor
jno
add
mov
and
insb
cltd
mov
pop
pop
or
std
cwtl
movsl
push
pop
sbb
mov
inc
pusha
or
adc
lret
lock
jo
pop
popa
repnz
out
xor
nop
rcl
or
mov
aas
bound
inc
popa
ficoms
sub
and
popa
aad
call
out
mov
xor
add
push
aaa
jbe
and
mov
cmp
ret
adc
pop
pushf
popa
add
sbb
cwtl
and
je
push
push
ss
imul
daa
leave
inc
ljmp
loop
rcr
jge
outsb
cmpsl
adc
imul
ljmp
sbb
lods
push
test
scas
aas
call
cmpsb
das
loop
das
xchg
ret
loop
push
jle
enter
psllw
or
loopne
dec
pop
mov
popa
adc
push
loop
sub
hlt
push
sahf
popf
adc
ficomps
inc
hlt
fneni(8087
push
inc
sub
mov
sbb
lcall
add
enter
fiaddl
test
push
cmp
popa
push
cmpsb
dec
pop
pop
test
inc
mov
xlat
fisubl
sbb
test
lcall
jbe
loop
sub
sbb
imul
cs
jge
jne
dec
xchg
mulb
inc
cmpsb
jo
mov
inc
fiaddl
adc
xor
loopne
mov
inc
add
in
out
out
scas
xlat
cmp
mov
push
imul
sbb
sbb
sbb
mov
adc
sub
xor
nop
fucomip
mov
mov
fisttpll
shll
fcmovbe
sub
mov
adc
mov
adc
mov
mov
popa
add
lcall
outsl
mov
xchg
push
scas
push
xchg
adc
and
fidivl
mov
test
imul
lret
adc
fwait
outsl
shrl
lahf
add
pushf
out
or
sub
and
mov
jg
sbb
pop
xorb
int
outsl
imul
push
and
cwtl
adc
faddl
jo
cmp
mov
jge
mov
out
pop
fdivrl
insb
roll
arpl
adc
jecxz
sbb
dec
rclb
adc
and
cli
std
fdivrp
call
lcall
shlb
mov
mov
das
sbb
lcall
xchg
and
sarb
insl
push
mov
lcallw
add
movsb
into
pop
in
jnp
push
in
dec
cmc
push
loop
push
icebp
insb
xor
scas
mov
rclb
adc
int3
pusha
mov
ret
push
das
shrl
xchg
dec
inc
jno
outsb
mov
out
call
inc
fldenv
jg
mov
sub
jbe
jo
bound
adc
mov
mov
dec
mov
and
xor
mov
inc
mov
mov
inc
test
push
xor
and
xor
mov
ret
sub
repz
imul
pop
cmpsl
stos
fisubl
imul
aaa
aam
loope
adc
mov
dec
fldt
inc
lea
xor
adc
mov
push
add
mov
inc
mov
out
xor
stc
popl
sbbb
rcrl
jg
push
insb
stos
push
add
or
pushf
cmp
clc
mov
pop
stc
cld
scas
jmp
hlt
mov
inc
mov
rorb
cltd
fidivrl
lcall
xchg
nop
dec
leave
divb
sbb
lret
mov
pop
cs
out
scas
shrb
xor
lock
imul
leave
mov
mov
xor
adcl
addl
fs
popf
out
sbb
mov
jnp
inc
aad
repnz
add
adc
fimuls
mov
cli
out
aas
add
dec
int3
jmp
mov
mov
lea
jle
adc
sub
sub
lret
and
cld
mov
loope
fsubrl
data16
mov
gs
out
sbb
and
leave
xchg
shl
imul
add
testb
mov
popf
xor
test
je
sti
xchg
cmpsb
jb
xor
adc
data16
cmp
icebp
sahf
jecxz
mov
pushf
sub
fcom
es
dec
sbb
inc
outsb
jne
push
hlt
sahf
imul
mov
jle
ss
adc
test
lcall
pop
sbb
shlb
cmpsl
mov
aam
mov
pop
mov
loopne
cmc
movsl
sub
or
jbe
dec
lahf
push
loop
nop
cmpsl
jne
inc
and
shll
xor
lods
jg
loop
nop
or
dec
testl
mov
pop
and
pop
loop
rorl
adc
xchg
jmp
mov
pusha
mov
jle
sahf
push
xchg
stos
gs
sbb
sub
mov
out
or
sub
inc
in
pop
xlat
sub
ror
out
cwtl
bound
icebp
push
lret
sub
cmpb
inc
xchg
jne
sub
jb
cmpl
xchg
imul
movsl
test
repnz
rclb
inc
jp
xor
fiadds
das
aad
inc
mov
dec
adc
fmuls
inc
test
fists
fs
xchg
int3
jne
cmpsl
in
xchg
in
mov
sbb
popa
push
dec
xchg
mov
sub
or
cmp
ds
movsb
aaa
xor
scas
fsub
inc
scas
pop
mov
jecxz
scas
jae
outsl
fidivrl
fsubs
test
push
inc
sbb
in
lret
imul
scas
push
lcall
scas
mov
ljmp
hlt
jno
out
sub
in
dec
push
scas
or
mov
dec
push
test
sbbb
push
mov
and
adc
in
mov
shrl
test
sbb
jo
loopne
push
in
iret
sbb
lahf
fcoms
add
dec
popa
mov
fidivl
adcl
jg
clc
andl
adcb
adc
mov
popf
inc
data16
xchg
adc
xor
shlb
test
adc
popf
jne
mov
mov
adc
and
popa
shrb
nop
xorb
xor
jbe
xchg
sbb
xchg
test
cwtl
ret
xchg
xchg
cmp
nop
not
in
enter
aaa
cmp
fmull
or
and
lods
push
adc
sbb
loop
insl
mov
btl
outsb
mov
mov
pop
fidivrl
in
stos
idivb
xor
jbe
mov
jp
jno
jmp
sbb
push
fiadds
imul
add
jle
in
icebp
repnz
iret
xor
add
cmpb
pop
ret
mov
xlat
sub
out
repz
mov
stos
mov
pop
cmp
pop
and
sbbl
pop
popf
int
mov
cmp
shlb
push
sbbb
push
shll
int3
pushf
popf
ljmp
mov
fcomip
cwtl
jecxz
mov
ss
pop
cmp
shl
cmp
loopne
scas
clc
adc
outsl
aam
pop
ret
mov
mov
add
sbb
xchg
push
int
xor
ret
dec
adc
sub
mov
daa
inc
push
push
sub
fdivp
sbb
or
jp
ficoms
fwait
mov
mov
push
andl
cmpsb
sub
mov
idivl
je
in
fiadds
cmpsb
fstp
subb
mov
push
daa
mov
cmpsb
cli
sbb
mov
cmpsb
push
push
movsb
fiaddl
mov
cltd
and
scas
pop
movsb
mov
mov
and
pushl
mov
inc
test
sbb
ljmp
test
ds
mov
adc
xchg
mov
sti
mov
mov
mov
loope
push
scas
cmpsl
xchg
call
mov
in
fists
out
mov
subb
xchg
mov
xor
mov
imulb
test
test
mov
mov
xorb
push
fwait
xchg
andl
movsl
je
mov
xor
jnp
test
mov
mov
js
pop
lock
mov
lods
test
sub
cwtl
stos
mov
xchg
inc
int3
daa
scas
mov
test
popf
push
jecxz
decl
mov
loop
repnz
enter
cmp
je
xchg
negl
addl
pop
out
les
lret
movsb
jnp
xchg
aaa
xchg
mulb
lret
xchg
xor
sub
test
mov
test
xchg
dec
mov
xchg
mov
mov
test
push
nop
ja
scas
mov
out
or
movsl
or
stos
mov
mov
push
sub
sbbl
stos
cmpsl
xor
adc
shll
xchg
add
addr16
pop
add
pusha
outsl
and
mov
and
cmpsb
xchg
cs
sbb
jmp
in
and
xor
inc
push
popf
jo
jae
cmpb
ret
push
lock
and
mov
lcall
cmp
lds
lcall
ficoms
pop
dec
or
mov
and
pushf
sti
dec
sbb
movsl
or
pusha
int
fxch
sub
nop
inc
int
inc
jne
loop
lea
out
scas
aam
loop
stos
xor
pop
fs
jns
add
cwtl
xor
int3
in
xchg
in
mov
ljmp
and
xchg
sti
add
out
fdivl
add
xchg
and
shrl
push
cmp
cld
mov
mov
faddl
sbb
or
leave
lds
push
jnp
xor
pushf
add
ret
out
or
fcmove
add
or
dec
xchg
cli
inc
fsubrl
jmp
cmpsl
jge
xchg
sbb
sarl
insl
mov
clc
pop
out
inc
adcl
cltd
addr16
mov
mov
mov
push
jmp
ljmp
mov
adc
dec
sbb
adc
pop
mov
hlt
inc
fwait
mov
jo
fcmovb
js
sub
orb
dec
xor
out
sbb
or
lods
scas
mov
inc
pop
pushf
lds
add
mov
scas
xor
push
repz
jmp
mov
jge
shl
bound
and
pop
loopne
faddl
cs
xrelease
fmul
cld
movsl
pop
arpl
aas
sbb
inc
shl
inc
outsl
out
pop
sahf
fwait
dec
mov
lret
in
push
pushf
rcr
jne
lcall
stos
and
xchg
popf
mov
test
jl
xchg
mov
jo
sbb
mov
sarb
inc
xor
push
cwtl
stos
cmpsb
adc
xor
xchg
movsb
or
in
loope
mov
test
lods
or
mov
push
jmp
pushf
pop
ss
adc
push
dec
pop
out
mov
xchg
sahf
fnsave
movsb
mov
jb
xchg
sti
test
mov
mov
jae
mov
popf
ret
xor
pop
push
dec
inc
imul
xchg
ret
push
jp
ds
push
cmpsl
xchg
push
inc
sahf
sti
inc
rcrl
xchg
idivl
mov
stos
push
ds
ret
adc
lcall
jmp
or
lds
add
xchg
adc
out
filds
rorl
push
cwtl
stos
loope
xlat
mov
mov
push
xchg
push
and
aam
cwtl
jns
mov
mov
mov
gs
test
and
xchg
aam
mov
cltd
rclb
jmp
dec
out
icebp
and
shrl
mov
inc
inc
in
cmpsl
out
xchg
cwtl
and
stos
hlt
adc
or
inc
sbb
cmp
and
pop
or
push
xor
cwtl
repnz
movsl
lcall
sbb
jae
aas
mov
add
push
mov
test
mov
sub
js
out
adc
cmpsb
bound
inc
cmp
mov
call
aam
ljmp
cltd
mov
jecxz
js
sub
mov
push
mov
and
push
mov
inc
sbb
iret
in
or
mov
das
mov
cmp
cmpsl
repnz
jnp
fcoml
mov
addr16
jne
cmp
mov
mov
mov
mov
xorb
mov
mov
stos
mov
push
imul
dec
pusha
mov
test
test
adc
out
fistpll
fisubrs
andb
mulb
inc
xor
and
and
mov
cwtl
xor
loop
cmpsb
test
mov
popa
int3
call
cwtl
mov
mov
mov
add
orb
je
mov
jecxz,pn
sti
sub
push
mov
test
pop
dec
ret
cmp
adc
mov
fs
and
pop
cwtl
addr16
rcl
pop
pusha
push
imul
cmp
iret
xchg
add
sub
sbb
je
imul
xor
imul
and
popf
ss
movsb
fidivl
inc
js
cwtl
sub
push
in
ret
xchg
arpl
scas
sub
mov
js
sbb
fprem
mov
inc
adc
test
cmp
dec
inc
lods
xor
sbb
pop
sahf
imul
lret
scas
fs
insb
lret
inc
inc
sahf
push
jp
addl
mov
xor
shrb
ss
jo
and
cmpsb
fldl
rorl
rcll
lret
sub
stc
pop
sbb
lods
mov
sub
fbld
xlat
sbb
sarl
fisubrl
jne
mov
sbb
sub
push
cwtl
daa
scas
add
into
test
pusha
xchg
rcl
mov
cmp
mov
cmp
mov
ret
jnp
ret
pop
popf
dec
push
je
and
xchg
shrb
lods
sbb
into
imul
sbbb
pusha
pop
cwtl
mov
dec
clc
fstpl
jne
push
push
std
fs
cmpsl
mov
inc
fstl
ds
stos
dec
stos
testl
push
stos
mov
ss
push
cmpb
cmp
mov
sbb
testl
scas
xchg
loope
and
and
xchg
scas
adcb
stos
pop
repnz
jge
dec
loope
jp
bnd
mov
cld
mov
movsb
sub
pop
xor
adc
ja
jmp
mov
mov
mov
adc
into
mov
inc
test
sahf
repz
imul
lods
lahf
shlb
sub
je
negl
mov
flds
xchg
inc
leave
mov
sbb
insb
xchg
pop
lds
insb
adc
and
push
sahf
outsl
adc
add
jae
gs
push
shl
sub
adc
cmp
aad
inc
pop
incl
into
mov
xor
fidivrl
insl
xchg
hlt
shrb
mov
mov
cmp
aad
test
lods
pop
xchg
jnp
leave
shl
lods
mov
xor
mov
imul
adc
mov
in
adc
cwtl
aas
adc
add
push
add
ds
jbe
add
xchg
xchg
or
jecxz
out
hlt
xchg
dec
cmc
in
mov
fwait
shl
aaa
xlat
lods
imul
mov
rorl
cld
in
hlt
sub
imul
mov
fisttps
mov
into
cmp
rcll
out
sbb
pop
pop
inc
sub
jmp
rcrl
push
addr16
je
mov
mov
imul
inc
push
bound
push
mov
filds
test
mov
pop
aam
mov
mov
repz
add
aas
jg
sbb
roll
mov
push
and
xor
arpl
xchg
popl
clc
or
pop
movsb
stos
lock
clc
int3
lcall
adc
repnz
push
sahf
xchg
nop
xchg
sbb
insl
adc
inc
fiaddl
fldl
stc
cmc
lret
mov
push
popa
cmp
adc
pop
loopne
push
adc
pop
inc
sub
pusha
ret
pop
outsl
cmp
xor
out
mov
orb
mov
dec
or
mov
insl
test
sub
out
sub
inc
inc
xchg
insl
mov
popa
sub
inc
fcompl
xchg
mov
bound
je
out
xor
std
xor
mov
sbb
push
stos
adc
fidivrs
outsl
fisttpll
push
cltd
xorl
sbb
dec
jecxz
fs
xor
mov
pop
movsb
cld
mov
sub
fs
xchg
movsl
popa
mov
test
lea
sahf
mov
out
sti
or
adc
adc
xchg
lret
dec
cwtl
ret
lcall
daa
mov
jmp
push
cs
pop
cltd
and
ss
push
in
ret
loop
sahf
lcall
mov
iret
lea
sbb
mov
adc
mov
xlat
faddl
outsb
sbb
dec
add
pop
pop
xor
aam
jnp
roll
xchg
jmp
lcall
bound
cltd
mov
add
mov
mov
push
das
or
pop
rcrb
jo
rcrb
push
and
jmp
inc
pop
mov
movsb
out
hlt
mov
into
ss
sub
jg
cmpsb
jmp
inc
push
cwtl
imul
mov
mov
fs
and
nop
dec
xor
fstps
add
xchg
in
inc
and
ret
xor
popa
rolb
inc
test
pop
mov
and
loop
addl
cmp
mov
rcll
lcall
popa
dec
aam
loopne
cmpsl
xchg
rcr
jle
adc
lea
ret
arpl
sub
push
cmp
test
les
push
xchg
out
xor
mov
cli
sahf
loopne
pop
mov
jbe
gs
sbb
sbbb
sahf
xor
pop
in
xor
and
aad
mov
lahf
xchg
sbbb
sbb
sahf
nop
mov
inc
jmp
adc
mov
outsl
jne
fisubrs
je
xchg
mov
mov
outsl
pop
faddp
cmc
nop
rorl
mov
mov
xor
lcall
pop
test
lcall
sahf
push
mov
mov
jnp
mov
xchg
mov
out
jbe
and
or
or
adc
lods
push
add
pop
addb
cmpsb
int
pop
repnz
adc
or
pop
ficompl
cmpsb
lock
sarb
add
cmpsl
pushf
pop
pop
out
fisttps
cmp
xchg
imul
int3
mov
pop
lcall
lock
sbbb
xchg
out
rcrl
aad
ficompl
sbb
jno
addr16
ljmp
adc
lret
rclb
daa
sbb
pop
sbb
imul
push
out
leave
aad
and
sbb
xor
jmp
rcl
fdivrs
scas
mov
popa
test
push
shlb
or
loop
adcb
sbb
lods
int
jmp
es
mov
hlt
adc
ret
mov
jbe
imul
or
sbb
xchg
ret
inc
stc
lret
dec
push
vpmacssww
shr
pusha
loopne
and
push
adc
gs
leave
ljmp
mov
inc
lods
lods
mov
sub
xchg
xchg
add
mov
mov
psllq
mov
adc
ds
cltd
inc
mov
dec
mov
mov
mov
sbbb
sahf
daa
adc
lock
sub
fs
sub
pop
xchg
push
jp
add
btr
or
sbb
xchg
decl
or
push
push
pop
fbld
outsb
clc
sub
sbbl
push
mov
in
and
jge
gs
mov
mov
psubusw
mov
repnz
lods
les
mov
dec
mov
insl
fldcw
aaa
js
push
dec
sarl
push
push
mov
fidivl
ds
test
or
jae
lret
sti
fs
mov
mov
lds
cld
cmp
mov
mov
fistps
cmp
jo
lcall
xchg
and
out
nop
fidivrs
jno
test
jb
mov
mov
popf
roll
mov
lahf
sbb
fcom
mov
inc
pushf
mov
xchg
add
lahf
xchg
cltd
push
loopne
push
out
fwait
add
and
fmul
cmp
pop
fsubrp
stos
jle
xchg
inc
push
or
fwait
aam
sti
cmpsl
mov
mov
add
mov
mov
in
lock
mov
daa
pusha
cmpl
lret
sbb
cmp
push
repnz
mov
ret
lahf
dec
dec
or
and
cs
ss
test
lahf
das
leave
cwtl
push
loop
lcall
pop
pop
rolb
out
dec
mov
out
sub
mov
pop
jno
sub
movsb
fcomps
addr16
incl
in
fst
lcall
xchg
shrb
push
mov
fs
out
ss
fsubrs
fistpl
pop
mov
push
mov
jno
pop
out
adc
test
fadd
ret
xchg
orl
test
cmp
cmp
mov
mov
stc
repnz
add
negl
push
mov
int
xchg
in
pop
and
fcmovne
mov
stos
cmp
inc
sbb
push
out
sbb
sub
mov
mov
xchg
jmp
pop
lock
sub
and
or
or
sbb
loop
lahf
sub
xchg
cmp
fisubrs
loop
mov
mov
lcall
loopne
push
js
pop
xor
lds
jl
or
int3
adc
or
inc
rcrl
cmpsb
sahf
dec
or
aad
imul
xlat
test
jp
bound
xchg
lahf
push
sub
repz
in
mov
pop
repnz
out
andl
pop
aad
or
mov
int3
popf
lahf
add
mov
dec
shlb
in
ret
aas
lods
or
aad
xor
jb
mov
xchg
mov
mov
andb
popa
inc
sti
cli
xor
mov
mov
xchg
sbb
inc
cs
push
xchg
cmp
xchg
push
imul
mov
outsb
cmpsl
xor
add
add
cmp
cmp
mov
shlb
popf
imul
outsl
jb
bound
movsl
icebp
out
in
lods
out
stc
dec
xchg
out
out
sti
clc
outsl
cmp
imul
loopne
mov
pop
bound
sub
cmpsb
bound
and
xchg
pushf
add
je
aad
lcall
add
insl
hlt
sti
inc
rcrl
mov
in
inc
lcall
popa
mov
pop
and
divb
lret
pusha
repz
lahf
outsb
dec
ret
rcl
int3
popa
insl
and
lods
lret
test
push
push
xchg
adc
sti
sarb
adc
stos
into
movsl
lods
iret
jo
mov
fisubrl
mov
mov
add
test
dec
jmp
xor
aaa
dec
stos
ror
gs
iret
stos
jp
xor
push
push
sbb
je
sub
inc
icebp
arpl
pushf
adc
shlb
pop
cs
popa
test
pop
push
cmpsl
add
adc
lds
sbb
repz
add
fs
lcall
sbb
mov
xchg
test
cltd
mov
pop
sbb
loopne
jge
cmpsb
popa
pop
push
imul
add
test
repz
jns
ljmp
xchg
out
cmp
push
mov
addr16
aaa
inc
jbe
xor
sub
sub
mov
pop
dec
push
in
aas
jle
shl
aad
ja
mov
cmp
sbb
or
mov
aad
shlb
movsl
and
shr
dec
jecxz
add
popa
shlb
sbbl
jno
pop
dec
sub
and
hlt
dec
cmp
sahf
jno
movsb
inc
int
adc
mov
jle
les
bound
mov
out
inc
pop
xchg
pop
mov
inc
mul
pop
insl
xor
lahf
stos
in
jge
cs
rcrb
in
pop
sbb
jns
js
test
mov
adc
pop
fdiv
stos
xlat
and
bound
lock
sub
loope
mov
test
jecxz
mov
hlt
shrl
lods
add
stos
lahf
xor
insl
sbb
jbe
adc
xchg
jae
sub
leave
jno
add
sub
push
rolb
shl
mov
pop
mov
pop
push
jb
or
xchg
mov
adc
lock
hlt
lods
push
andb
stos
mov
mov
cli
cmp
and
cmpsb
mov
push
or
stos
mov
fstpl
pop
xor
insl
and
or
mov
inc
jp
enter
lret
loopne
fstpl
nop
cmpsl
icebp
aad
cmp
dec
test
aas
mov
bound
adcb
cmpsb
leave
enter
int
in
subb
sti
popa
mov
pop
cs
iret
dec
mov
rcll
dec
scas
insb
mov
mov
rcrb
pop
cmp
outsl
movsb
adc
test
mov
and
pop
repnz
iret
and
frstor
bound
pop
and
pop
pop
lcall
mov
xchg
mov
inc
pop
icebp
popf
out
mov
and
stos
test
and
cmp
xor
in
xchg
mov
cmp
ficoml
inc
mov
lods
adc
repz
ret
das
and
outsl
lods
lcall
je
ds
shlb
adc
mov
sbb
mov
stc
mov
adc
movsb
mov
aad
pop
sbbb
xor
daa
sbb
outsl
cwtl
lock
sub
pop
std
sbb
shlb
cwtl
mov
sbb
adc
mov
mov
jb
ret
jo
adc
cwtl
addr16
in
xchg
xchg
lcall
fcmovu
xor
push
xlat
and
pop
mov
mov
mov
scas
and
push
mov
xchg
xchg
dec
xchg
inc
jae
fldcw
and
and
int3
movl
std
push
jmp
les
sbbb
lods
push
fimull
pop
sub
nop
shlb
in
jno
cltd
cwtl
pop
fwait
lods
mov
loopne
sti
or
xor
xchg
aad
xor
and
fstl
push
call
mov
movsl
pop
pop
mov
imul
leave
sbb
lock
iret
and
mov
movsb
xor
mov
dec
rorl
mov
jnp
xor
stos
mov
jmp
xchg
mov
xor
lods
aas
ret
out
xchg
pop
mov
imul
clc
mov
or
mov
sbb
out
cs
rol
mov
shrl
loop
mov
xchg
xchg
rcrb
adc
mov
jg
int3
mov
and
mulb
mov
mov
pop
mov
xor
mov
call
add
fmuls
in
setg
test
popf
pop
test
dec
scas
adc
mov
loopne
fisttpl
dec
mov
cmpsb
add
dec
mov
mov
je
addr16
mov
xchg
les
or
and
cmc
aas
push
loop
sbb
inc
cmp
pop
mov
popf
push
je
mov
in
hlt
clc
jmp
test
mov
inc
lods
jl
sbb
and
rolb
mov
adc
test
test
jo
dec
test
mov
mov
scas
enter
mov
scas
or
jno
in
loopne
cli
insb
leave
lret
loop
jl
ss
mov
dec
mov
test
mov
rcrl
enter
dec
mov
jb
and
mov
xchg
cmpsl
aam
popf
iret
mov
sbb
xchg
adc
mov
rcrl
jp
hlt
push
int
xchg
jnp
movsl
fildll
sub
xchg
imul
sub
fwait
jne
ret
test
out
and
lods
xchg
and
test
xchg
inc
xorb
out
fidivl
lcall
fistpll
pop
push
adc
or
enter
addl
add
cmpsl
nop
jbe
fisubrl
filds
fwait
repz
mov
out
cmpsb
or
sub
ret
test
cmp
mov
ljmp
mov
or
bound
lods
mov
mov
repnz
test
out
pushf
pop
jb
pushf
int
lds
xchg
nop
test
adc
xchg
nop
cld
push
mov
jo
lds
and
mov
pop
arpl
or
lods
test
pushl
push
inc
stos
sub
mov
sub
jmp
lcall
sahf
xor
fisubrs
mov
xchg
bound
es
lea
lea
cmp
ficompl
ljmp
scas
iret
mov
popf
js
fsubs
add
fucomp
push
out
push
mov
dec
inc
sbb
in
mov
fidivl
lods
mov
icebp
push
mov
cs
outsl
inc
ret
push
rcrl
idivb
dec
xchg
adc
xor
ljmp
push
addb
lea
adc
imul
rcrb
out
scas
inc
sub
sbb
add
and
mov
xor
int3
mov
mov
shlb
lcall
dec
std
xor
xchg
jbe
outsl
cmc
aam
lcall
inc
cmp
jo
out
sbb
stos
mov
shrl
call
and
xor
loop
loop
mov
loop
push
movb
push
aaa
test
xchg
xor
rcrb
jecxz
pop
rorl
dec
push
xor
push
cmp
adc
or
sarl
mov
test
bound
cmp
scas
pop
lods
inc
mov
test
adc
ror
xor
aam
call
rolb
cs
mov
test
sub
xor
movsl
mov
outsl
shlb
jb
sbb
imul
sbb
pop
rcl
sbb
aaa
test
xor
shll
lcall
dec
mov
in
cmpsb
stos
jl
or
or
sub
push
lret
outsl
sbb
adc
xchg
arpl
loop
in
imul
push
lock
jle
and
jno
push
or
sbb
fsubl
adc
aam
jb
mov
mov
lcall
out
repnz
scas
rcrb
fidivrs
dec
push
fcmovu
mov
push
pop
dec
arpl
ret
cmpsl
dec
out
and
xchg
xchg
repz
and
dec
dec
mov
roll
push
mov
stc
mov
mov
push
or
xchg
push
ljmp
hlt
dec
jo
sub
loop
js
xlat
dec
out
nop
jge
add
sub
adc
push
cmpsb
mov
cmpsl
lcall
call
sbb
jmp
shrb
imul
cwtl
ror
xor
test
lret
clc
stos
cmp
xchg
fadd
in
ret
iret
inc
lret
pop
into
out
hlt
sub
mov
mov
jne
pop
xchg
mov
push
cwtl
test
fimull
lock
lea
inc
lcall
mov
nop
sahf
addr16
sbb
aas
cld
inc
mov
inc
ret
ret
cld
cmp
xor
jno
movsb
sbb
xchg
sbb
enter
pop
shll
pop
andb
add
push
cmp
negb
xchg
pop
scas
out
sbb
adc
or
cmpsl
push
push
or
inc
add
push
mov
adc
xchg
adc
insl
pop
loopne
xchg
xchg
sbb
mov
loop
push
loop
cs
sahf
out
adc
cltd
sbb
daa
pop
xchg
add
cmc
sbb
bound
inc
adc
mov
jno
mov
adc
mov
loopne
adc
inc
xchg
jle
gs
stos
std
out
mov
pop
fdivs
lret
or
mov
pop
lods
jb
aam
arpl
mov
scas
adc
aas
ljmp
or
mov
movb
jb
ret
lahf
fistpll
dec
jmp
xor
fistps
push
mov
mov
xor
pop
adc
dec
adc
or
dec
adc
daa
bound
test
adc
mov
lcall
dec
stos
lods
push
mov
lcall
enter
fadd
mov
popa
xorb
pop
mov
mov
loopne
je
add
pop
dec
fldt
fisubrl
xchg
rclb
or
jno
mov
xlat
sub
insl
out
mov
ret
outsl
cmc
out
loop
test
push
cmpsl
xchg
sbb
stos
adc
mov
mov
pop
aad
test
mov
mov
mov
pop
inc
lahf
movsl
scas
imul
std
sbb
adc
jle
in
movsl
mov
lcall
int3
test
fidivl
inc
lret
mov
xchg
push
lcall
fistpll
cld
sub
jmp
test
cmp
and
enter
add
dec
push
cmpsl
out
cmpsb
dec
je
lods
jns
mov
fadds
or
cmp
lock
jle
cld
int3
sbb
shl
xor
repz
rclb
push
inc
jno
mov
add
mov
ficoml
test
sbb
fnstsw
shrl
adc
sub
jno
mov
lahf
mov
aas
lret
fsubrs
fsubrp
and
or
faddl
lea
stos
xor
mov
jp
or
lods
arpl
stos
adc
hlt
jl
push
pop
lods
cmpsl
ret
repnz
repnz
push
xchg
xchg
jbe
ljmp
and
ret
into
test
xor
sti
xchg
mov
xchg
fcoml
mov
das
out
icebp
sub
jp
cmpsb
aam
mov
jne
lds
sbb
inc
push
test
mov
push
rol
aam
in
cmp
lods
rcrb
outsl
mov
bound
dec
mov
mov
imul
dec
push
aaa
inc
lods
cmp
into
int3
fiadds
movsb
fildl
ljmp
sub
or
movsl
sbb
mov
xchg
sbb
mov
xlat
in
imul
push
daa
cmpsl
jl
fcmovbe
mov
adc
imul
mov
add
xchg
sub
aam
ud2
sub
loopne
mov
pusha
lcall
cld
add
in
cli
mov
outsb
cwtl
sbb
lret
mov
fnstsw
inc
lahf
std
add
bound
and
out
mov
inc
push
pop
loopne
push
sub
pushf
fiaddl
imul
js
loop
pop
mov
hlt
lret
mov
or
lods
jp
repnz
lds
out
push
faddl
pop
es
jp
adc
jmp
add
jl
test
mov
enter
aaa
add
xchg
jp
into
scas
ficompl
push
sbb
scas
mov
jmp
movsl
cmpsl
fdivrp
pushf
xor
mov
or
out
insb
or
cmp
popf
int
jb
mov
scas
in
adc
push
mov
mov
lock
outsb
mov
int3
movsb
lcall
jmp
dec
mov
aas
lcall
nop
out
popa
add
push
mov
loop
insb
int
xchg
leave
rorb
stos
adc
push
cmp
iret
imul
enter
cwtl
push
xor
cmp
xor
pusha
mov
imul
dec
lock
sub
cmc
mov
or
movsl
mov
xorps
fucomi
fisttpll
lcall
mov
hlt
mov
sbb
or
pop
cltd
mov
mov
test
test
cmp
xchg
stos
lcall
addb
idivl
out
std
out
stos
out
sarb
into
pop
xor
fs
loopne
lods
fwait
or
jbe
orb
xor
lds
out
jb
fiadds
mov
sub
lcall
rorl
mov
xchg
jbe
bnd
mov
pop
mov
cmp
insb
adc
mov
cmpsl
arpl
or
daa
cld
lcall
xor
jbe
fmulp
imul
lcall
mov
adc
sbb
lret
xchg
aam
daa
fidivl
mov
cmpsb
push
adc
push
into
sub
inc
mov
mov
test
fimull
lret
sbb
xchg
xchg
lcall
sub
fs
adc
lret
cmp
jae
lret
out
xchg
orb
push
insb
xor
jmp
ret
pop
adc
add
nop
adc
sbb
mov
hlt
push
add
shll
xor
scas
stc
and
bnd
in
inc
sub
xor
dec
aas
push
mov
movsb
pop
sbb
inc
mov
fisubs
loop
js
sbb
rolb
sub
lods
jne
imul
je
test
xchg
data16
leave
mov
mov
sti
imul
jge
jo
mov
sbb
hlt
and
inc
xchg
sahf
bound
sub
add
dec
jno
mov
or
adc
scas
lods
cmpsl
call
das
jge
jae
cmpb
rcll
add
sub
rclb
xchg
xchg
cwtl
pop
inc
ret
sub
out
push
mov
sbb
sbb
dec
xchg
inc
mov
rcrl
adc
push
je
and
mov
sub
pop
lods
push
push
lock
dec
xor
dec
xchg
mov
adc
shl
push
xlat
test
cmp
rol
mov
inc
ffree
scas
xor
rcrb
mov
arpl
push
and
adcb
sbb
addr16
adc
scas
stos
or
lea
loopne
lcall
pop
sub
lcall
int3
fwait
xor
adc
mov
fwait
nop
shll
sti
lcall
sub
mov
jmp
xor
and
dec
mov
sbb
fs
mov
fnstsw
sbb
jns
inc
push
repnz
pop
push
in
lahf
repnz
jne
sub
adc
aam
or
loope
mov
lods
je
mov
cmp
stc
cld
and
sbb
xchg
arpl
outsb
adc
xor
daa
repnz
xchg
xchg
fcmovb
mulb
xchg
fs
inc
sbb
je
jns
sub
add
xor
add
add
and
loopne
or
jp
add
in
pop
adc
rclb
xlat
int
jmp
loope
adc
add
xchg
sbb
or
and
pop
jl
lcall
testl
inc
dec
xchg
push
das
mov
lods
and
sbb
lcall
in
out
leave
lea
addb
mov
out
das
je
xor
test
xchg
jp
pop
xchg
cmc
outsl
mov
xor
and
daa
sti
sbb
sbb
nop
sbb
mov
sub
pop
and
iret
test
loope
pop
jp
ljmp
lds
loopne
mov
cs
orl
cwtl
lds
sarl
jns
pushf
dec
shll
outsb
repnz
or
mov
pop
and
xchg
mov
mov
insb
test
xchg
dec
test
jecxz
adc
or
stos
mov
mov
jnp
cltd
lock
add
rcrb
jp
sbb
mov
push
jbe
and
sub
in
shrb
inc
fadd
jmp
jmp
fistl
fstpl
xor
push
sahf
bound
loope
arpl
inc
gs
or
aaa
xor
dec
push
xor
fiaddl
mov
xchg
xor
or
insl
pop
xchg
add
mov
in
pop
or
mov
and
cmp
fs
mov
icebp
popf
lea
jnp
shl
push
cmp
sub
fwait
add
push
mov
test
push
ret
test
push
fadd
stos
mov
sbb
stc
cs
xor
test
sub
ret
mov
xchg
mov
xor
cs
cmc
mov
xchg
jno
adcl
pop
and
sbb
lods
add
loop
and
aam
popf
fists
mov
lcall
pop
shr
rcll
push
pop
mov
mov
lret
pusha
cmpsl
fidivrs
int3
repz
sub
test
cmp
ds
push
push
pusha
int
add
imul
sar
ljmp
insl
mov
shlb
inc
push
roll
pop
add
enter
es
jno
enter
pusha
xchg
mov
ret
push
movsl
mov
into
mov
rclb
pushf
lcall
out
addr16
mov
adc
imul
or
xchg
iret
inc
mov
push
jg
popf
jbe
mov
jle
lret
sub
ja
shlb
pop
adc
loop
xor
inc
sahf
xchg
pop
ljmp
imul
xchg
cltd
cmp
push
sbb
bound
lcall
sbb
insb
notl
fmuls
xchg
cmp
out
je
mov
test
in
insb
push
sub
fists
and
cmp
stos
les
or
fwait
adc
mov
inc
pop
shrb
pop
and
mov
repnz
xor
int3
push
jmp
sub
dec
xchg
nop
xchg
push
adcb
ss
cmpsl
stos
mov
and
into
sbb
xchg
fwait
sbb
loopne
int
pop
in
xor
lods
cmpsb
mov
lods
jge
xchg
cmp
fildll
mov
mov
push
cmpsb
sti
xor
addr16
movsb
rorb
or
mov
rolb
out
cmpsb
push
test
sub
repz
jmp
mov
adc
insb
lock
js
mov
push
nop
aas
insl
mov
xchg
andl
jno
dec
dec
movsb
push
mov
xlat
dec
out
inc
mov
jmp
fisubs
fstps
sarl
mov
sbb
rorl
xor
fsincos
add
mov
xor
add
pop
pusha
xor
call
pop
mov
movsb
iret
fldlg2
adc
xchg
lret
in
out
push
nop
fisubrs
leave
cltd
cmc
add
filds
mov
stos
lcall
cs
ljmp
mov
test
sub
daa
jl
and
dec
add
push
jl
loop
mov
gs
jmp
mov
es
or
scas
testb
jmp
mov
fisubs
es
mov
xor
aas
or
fwait
mov
outsb
pop
repnz
inc
pop
fidivrl
lock
rclb
lahf
loopne
and
frstor
xor
movsb
xchg
push
mov
add
xor
cmp
ja
pop
mov
inc
fcompl
xchg
jecxz
fs
push
fsubrl
ficompl
mov
popl
cmp
push
out
xchg
movb
mov
jmp
push
mov
dec
jp
ds
in
pusha
add
outsb
push
imul
jecxz
shrl
sahf
fists
adc
je
lds
arpl
mov
sub
or
nop
mov
add
jmp
leave
sbb
mov
pusha
adc
fsub
outsb
dec
movsl
mov
in
fdivs
lret
sahf
inc
hlt
loop
rorb
insl
mov
xchg
shlb
sub
push
insl
or
cmc
push
sbb
cwtl
jmp
loop
jae
mov
inc
ja
add
sub
invd
mov
iret
cmp
bound
ja
fidivrl
mov
roll
or
pushf
adcl
and
jg
push
bound
in
mov
xchg
adc
mov
jne
xor
pop
fs
je
bound
pop
lcall
xor
pop
adc
lret
je
fisubrl
lds
cwtl
and
adc
fnstcw
xchg
lcall
lcall
pop
loop
pop
stos
divb
sbb
pop
movsl
outsl
add
leave
xor
xchg
repnz
pop
fcmovb
sbb
lret
or
leave
mov
lret
adc
mov
loopne
popf
and
into
sub
or
cmc
ficoml
mov
rcrl
nop
adc
and
loope
add
inc
movsb
add
mov
fiaddl
jl
sahf
rcrl
leave
cmpsl
outsb
call
loop
aad
aaa
loop
mov
pop
shll
scas
inc
lcall
out
cmp
sbb
mov
add
loop
fisubrs
hlt
repnz
jl
cmpsl
mov
imul
cmpsb
pop
sahf
loopne
subb
sar
fs
cltd
pop
aaa
cwtl
sbb
sahf
ret
xchg
outsb
mov
cmp
adc
sahf
js
lea
fld
xchg
fsubs
popa
int
pop
add
and
jb
pop
push
jbe
pop
test
inc
frstor
cmpsb
fisubrl
sbb
jno
fimuls
xchg
lcall
push
filds
push
cmpsl
xchg
scas
adc
sub
sbb
xchg
pop
push
les
movsl
xor
sub
xlat
fcmovb
push
shrb
fidivl
loopne
sub
mov
xor
jno
mov
pop
add
loopne
adc
fsts
sbb
mov
out
mov
mov
gs
adc
sbb
add
loopne
test
mov
push
jbe
fwait
push
mov
lcall
pop
cmpsl
mov
inc
cwtl
mov
shr
repnz
mov
rcrb
test
jp
lock
jb
cwtl
xchg
and
bound
jmp
lcall
mov
das
ficoml
stos
fisttpll
mov
les
mov
jno
inc
adc
push
inc
xchg
rolb
add
xchg
jbe
xchg
loop
lcall
sbb
and
iret
mov
scas
aas
cwtl
sbb
fcmovnu
inc
add
mov
push
or
rcll
dec
and
mov
inc
shlb
iret
sbb
adc
mov
and
scas
adc
mov
fcmovu
push
lds
out
adc
sbb
cmpb
push
aas
cmpsb
test
sbb
or
inc
loope
push
sub
mov
in
leave
or
inc
mov
xlat
jae
adc
imul
outsb
add
pushf
iret
pop
inc
cwtl
scas
mov
ucomiss
dec
jmp
fisubrl
mov
je
and
shl
pop
fs
sub
xchg
out
mov
dec
pop
ljmp
sbb
cmp
inc
dec
lahf
push
pop
sub
jp
rcrb
adc
lock
pusha
xchg
adc
and
cli
clc
iret
clc
nop
sub
or
out
jae
sarl
sub
mov
movsl
push
push
mov
mov
mov
mov
sbb
loopne
mov
in
fisttps
negb
mov
jmp
pop
add
fimull
stos
addr16
xchg
xor
ret
ret
rcll
pop
negl
aam
pop
fnstenv
add
mov
mov
enter
and
aaa
sti
inc
pop
inc
les
data16
rcll
movl
pusha
fidivrs
out
jno
dec
sbb
inc
outsl
dec
enter
test
pop
fcompl
or
movsl
imul
pop
rcll
xchg
jl
jnp
xchg
dec
mov
cmp
jno
in
test
jb
leave
push
loop
cmpsl
test
mov
jb
xchg
xor
aad
lcall
outsb
mov
rcrl
mov
add
call
adc
lret
lock
xor
rcrb
inc
ljmp
roll
xchg
js
mov
adc
inc
cs
dec
andl
ljmp
je
sbb
in
mov
jmp
out
mov
xor
ss
sub
cltd
loop
dec
test
or
sti
mov
roll
mov
xchg
add
add
mov
outsl
in
rcrb
cmp
insl
lcall
rol
xchg
imul
sahf
mov
arpl
sbb
shll
xor
or
sahf
cltd
imul
test
test
jbe
xor
adc
aad
stos
out
and
add
shlb
pushf
adc
lret
jb
and
fdivrl
xor
add
cmpsl
pop
stos
xchg
test
aas
sbb
repnz
push
loopne
sbb
pop
scas
pop
mov
std
inc
lret
jp
mov
movsl
dec
xchg
pop
mov
push
adc
and
movsb
and
movsl
nop
adc
aam
mov
mov
xchg
mov
shlb
sub
push
imul
icebp
stos
inc
cmpsl
mov
push
sbb
jb
insl
sub
mov
outsl
xor
xchg
cmpsl
or
mov
lcall
add
mov
inc
dec
push
out
shlb
xchg
push
outsb
rcr
ficompl
sub
sbb
dec
and
aaa
jb
fsts
sbb
fidivl
test
jae
pop
mov
mov
push
cmp
adc
dec
test
ljmp
push
lret
inc
xchg
mov
call
sbb
pop
inc
fnstsw
pop
rol
int3
sub
iret
aad
fs
dec
out
xor
pop
pushf
stos
pushf
cmp
inc
xchg
and
ficompl
dec
pushf
mov
adc
das
and
popa
xchg
pop
mov
inc
dec
add
test
ljmp
shlb
aam
rorl
dec
pop
xchg
loop
push
arpl
xor
add
pop
mov
mov
mov
adc
lret
pop
iret
out
cmc
cmpb
aam
sbb
ret
mov
lcall
popf
pop
out
pop
push
mov
mov
aas
and
add
int
xchg
push
clc
lcall
shlb
xchg
cmpsb
lret
inc
cmpsl
aam
dec
lods
ret
movsl
or
jne
xchg
push
fwait
lods
lcall
xchg
jo
adc
xor
shlb
cmpsb
popf
jle
lcall
jge
test
pop
push
bound
mov
or
stos
add
imul
cmp
mov
push
cmpsl
int3
adc
mov
sub
pop
jge
insb
sbb
mov
xchg
inc
xlat
data16
cli
sub
adc
mov
xchg
scas
jns
xchg
pop
aas
mov
lods
jae
scas
add
stos
jp
push
mov
movl
or
jo
mov
sbbb
push
bound
mov
test
mov
mov
cld
es
mov
aas
xchg
faddp
xor
lret
dec
adc
cmp
jmp
xlat
pop
add
daa
rorl
leave
rcrb
scas
push
lret
nop
xchg
into
mov
pop
jne
mov
jbe
out
xchg
pusha
lods
push
cmpsb
and
and
out
cld
mov
or
nop
test
daa
scas
rolb
inc
inc
shrl
test
push
dec
lret
bound
clc
imul
ret
push
mov
pop
and
mov
or
fs
xor
test
sbb
sarb
xchg
arpl
cs
jb
bound
jns
cwtl
out
mov
scas
int
ja
call
adc
push
bound
imull
out
in
orl
lds
imul
enter
xor
xor
lcall
sbb
insb
fs
xchg
fsubl
cmp
les
dec
stc
cmp
sbb
negb
mov
xchg
fidivrl
xchg
jge
mov
mov
fidivrl
adc
insl
xchg
int3
xor
xchg
jp
add
mov
outsb
push
adc
clc
cwtl
jae
dec
loope
xchg
ret
mov
loop
fidivrl
and
jmp
pop
add
pop
add
cltd
ja
cmpsl
pop
or
dec
lea
fildl
xchg
popf
repnz
dec
or
loopne
xlat
mov
fisubrl
xor
adc
cmp
push
aas
scas
inc
xor
sbb
sub
mov
outsb
bound
in
mov
dec
mov
arpl
ljmp
ljmp
or
loopne
aaa
xchg
scas
daa
pop
jle
iret
mov
mov
cli
sbb
stos
inc
mov
jecxz
sbb
cmp
scas
sbb
fisubrl
ds
fisubrs
lcall
sbb
leave
add
xchg
pusha
pushf
out
bound
fs
push
jp
orl
mov
rclb
loopne
xchg
sub
sbb
adc
test
test
mov
inc
dec
lret
sub
mov
test
lret
orl
fs
mov
andb
cmpsw
fisubrl
push
out
adc
jbe
ljmp
mov
in
jae
testl
jp
ret
ret
sbb
mov
lcall
mov
cs
leave
mov
mov
xchg
jo
jnp
and
popf
fidivrl
add
test
test
sahf
xor
pop
loope
rcll
aad
dec
pop
xor
push
out
push
les
cmc
leave
data16
cmc
mov
pop
inc
add
call
hlt
push
and
xor
call
xchg
xor
sarb
ffree
mov
lcall
adc
scas
adc
xchg
push
xor
lret
pop
xor
rorb
pop
cmpsl
xchg
mov
adc
add
and
nop
lahf
and
or
stos
fdivrl
or
arpl
aam
xchg
sub
sbb
and
push
pop
jo
pop
inc
jge
rclb
daa
popa
scas
dec
xchg
cmp
xchg
dec
mov
call
loop
out
icebp
mov
into
ret
frstor
mov
imul
cs
cmp
sub
xor
ficompl
adc
adc
std
or
cld
out
loop
cltd
ljmp
mov
mov
in
out
inc
loop
cmp
sub
fisubrl
or
call
loope
leave
jne
popa
xchg
jle
pop
mov
mov
mov
jle
pop
lcall
and
pusha
xchg
jb
lods
cli
pop
lods
aaa
stos
cmpsl
lret
cmpsb
add
mov
mov
mov
mov
imul
fwait
sbb
cmpsb
xchg
fnstcw
xchg
jg
icebp
scas
mov
dec
cltd
call
xor
inc
fsubp
fwait
xchg
mov
inc
sub
mov
in
or
mov
rorl
nop
cmp
mov
mov
mov
lods
incl
or
out
fwait
stos
movsl
sub
scas
movsb
inc
je
mov
lret
cmp
sub
and
add
and
xchg
mov
mov
sub
cmp
add
into
lcall
jnp
push
xchg
lods
xchg
pop
fsubrl
lock
mov
xor
decl
scas
lods
fsubl
in
mov
xor
cmpl
xchg
dec
mov
mov
cmpsl
or
shll
std
popf
pop
aam
mov
ret
mov
stos
mov
mov
sub
mov
dec
mov
addl
cmp
mov
scas
and
xor
stos
xor
xor
cmpsb
testl
cwtl
das
mov
mov
mov
cwtl
push
test
xor
scas
mov
push
test
xchg
test
xchg
lock
testl
mov
xchg
scas
mov
xchg
mov
mov
mov
add
nop
xchg
out
mov
pusha
sbbb
cmpsl
outsb
aam
ret
movsb
mov
jbe
jno
imul
shlb
sahf
int3
xor
sub
sbb
shll
xlat
jb
dec
lds
xor
inc
xchg
data16
mov
push
test
pop
call
fcoms
loopne
repz
loop
mov
add
fistpl
roll
imul
lock
stos
lcall
ljmp
lcall
popf
cld
cmp
jmp
inc
mov
cmp
mov
test
xchg
xorb
xchg
dec
in
cmpsb
cmpsl
rorl
pusha
roll
bound
ficoml
mov
cmp
insl
adc
push
in
xor
movsl
mov
or
mov
xchg
xor
dec
mov
fidivl
popa
addr16
sbb
sub
data16
or
in
fisubrl
std
and
jle
daa
push
adc
adc
adc
mov
xor
adc
mov
shr
adc
jb
sbb
ss
shll
aad
mov
shl
add
cmpsl
ficompl
sahf
xor
sahf
xchg
inc
inc
ror
dec
ljmp
pop
imul
mov
jl
mov
test
in
out
ret
mov
fs
test
or
add
xor
movsb
dec
jp
ficoms
push
in
mov
test
mov
jp
popa
cmc
cmp
sbb
filds
cmpsb
lcall
stos
fcomip
nop
jmp
test
jnp
cmpsl
lea
movsb
xchg
popa
loope
sbb
and
xor
mov
call
push
push
mov
sbb
mov
bound
sub
add
movsb
enter
mov
jnp
movsb
and
shll
test
cmp
test
xchg
aam
addb
frstor
andl
je
xchg
fidivs
dec
cmpsb
popf
sub
xorb
mov
es
clc
mov
repnz
sub
pop
lahf
das
mov
nop
mov
mov
and
cmp
movsb
cmp
repnz
mov
out
movsb
mov
repnz
mov
xor
mov
mov
mov
and
add
and
pusha
mov
iret
in
mov
jbe
call
inc
and
movsb
xchg
call
mov
xchg
sahf
or
and
and
popf
shll
ss
mov
xchg
mov
in
xchg
scas
scas
call
test
xchg
divl
pushf
or
stos
jnp
lret
mov
mov
test
mov
jnp
mov
xor
andb
jecxz
clc
xorl
xchg
fwait
hlt
mov
les
cmpsb
mov
xchg
mov
cmpsl
pop
cmc
popf
xchg
mov
xchg
fwait
call
aaa
xchg
lock
mov
repnz
les
decl
mov
cwtl
lock
imulb
scas
mov
xorb
scas
mov
or
ljmp
fisubrl
or
rclb
pusha
adc
jno
enter
mov
sti
cmpl
outsl
lcall
xchg
cmc
dec
jg
sahf
jae
cld
lcall
mov
adc
jne
repnz
jmp
or
jge
sub
push
bound
ja
cmp
adc
mov
stc
push
imul
hlt
adc
mov
lcall
mov
lea
mov
mov
and
jae
pop
mov
add
cmp
adc
imul
xchg
push
lcall
fisubrl
add
pop
lods
lahf
xor
jae
popf
insb
and
inc
or
mov
movsl
imul
jb
jno
loope
xor
and
adc
pushf
aad
imul
push
loope
jecxz
push
mov
stos
cltd
scas
movsb
test
xchg
loop
cmp
in
dec
mov
mov
mov
fisttpll
das
lods
shrb
popf
nop
lahf
filds
cld
aad
in
rcrl
loop
cmp
lea
in
push
cmpsb
adc
or
push
negb
push
cmp
scas
add
mov
in
xor
cs
sub
sub
adcb
fimull
test
mov
xor
shrb
xchg
xchg
dec
fcoms
ds
or
insb
pop
es
movsb
xchg
fisubl
adc
data16
sub
push
mov
lahf
adc
xor
xor
jbe
xchg
sub
xor
inc
insb
mov
xchg
lds
stos
cltd
cmp
stos
aad
shlb
xor
jge
xor
cmp
and
nop
stos
push
cmpsb
fidivrl
dec
pop
outsl
mov
mov
mov
mov
xlat
rolb
loop
sbbb
mov
push
xor
mov
cli
test
or
xchg
jne
inc
cmpsb
cmpsl
sbbl
test
icebp
cmpsl
fiaddl
sbbl
inc
sbb
xor
fimull
popf
fidivrl
cmp
outsb
push
dec
lret
sbb
rolb
lcall
xchg
mov
inc
sahf
outsb
mov
sahf
or
outsl
jmp
mov
jge
mov
pop
ret
fcomps
jecxz
jge
sets
lcall
jg
stos
mov
xorl
jle
popa
out
sbb
adc
adc
test
out
push
out
pop
test
pop
clc
insb
and
test
add
pop
inc
cmp
mov
shr
lcall
insl
cwtl
gs
inc
pop
rcl
in
push
inc
mov
shrl
lret
pushf
rclb
fsubrl
nop
frstor
in
mov
aam
xlat
pop
cmpsb
push
shlb
bound
mov
shll
and
fcmovu
or
push
sahf
addr16
dec
cli
hlt
imul
or
jmp
cmp
out
mov
movsb
jns
test
or
pop
ror
in
mov
iret
sub
repz
jl
call
dec
sbb
xchg
arpl
or
enter
les
imul
rol
xor
push
push
faddl
sbb
adc
dec
xor
mov
movsb
sbb
pop
and
sahf
aam
mov
inc
cs
nop
popa
dec
nop
add
dec
sbb
lods
push
mov
movsb
sar
add
jnp
in
xchg
dec
lods
cwtl
lcall
out
jmp
ds
iret
push
sub
pop
mov
jle
or
xchg
sahf
fisubl
xchg
xchg
pop
inc
mov
aad
cltd
inc
ja
sahf
insl
xchg
cmp
jae
lods
lea
ja
cmp
inc
push
dec
movsl
out
sahf
xchg
sti
adc
test
adc
jl
mov
clc
xchg
loop
cmp
and
push
sahf
hlt
stos
sub
lret
jmp
or
jle
or
xchg
dec
jbe
push
xchg
xchg
mov
jmp
push
add
adc
insb
cmp
and
cltd
ret
stos
scas
sbbb
push
adc
stos
pop
adc
pusha
int
adcb
daa
mov
enter
in
mov
adc
loopne
sbb
adc
mov
loope
mov
cmp
adc
mov
lcall
in
sbb
fimull
imul
hlt
mov
adc
pusha
test
mov
add
shrl
cli
inc
sbb
jnp
adc
lahf
pop
rcrb
cmc
outsb
jne
adc
adc
iret
inc
aas
mov
jb
xorb
addb
aas
push
push
mov
jo
and
in
nop
lcall
dec
sub
mov
mul
imul
mov
jecxz
ljmp
fwait
mov
andb
pop
dec
and
lods
xchg
ds
sbb
pop
mov
icebp
xchg
fiadds
fmull
xor
or
and
sub
adc
mov
arpl
das
stos
jmp
cld
push
xchg
push
daa
xchg
xor
cmp
loop
sahf
fs
dec
je
adc
cmp
add
and
jmp
push
sti
rorl
cmpsb
mov
das
sbb
jmp
pop
pop
cmp
jmp
in
fnsave
push
push
xchg
pop
outsl
out
add
fdivp
outsl
cmc
cmp
jno
mov
jmp
ret
xor
in
lods
cli
mov
fnstcw
mov
adc
daa
cmpb
movsb
or
insl
nop
pushf
lcall
and
sub
dec
in
push
mov
xor
ljmp
out
dec
push
sahf
pop
sbb
inc
imul
ror
mov
dec
stos
arpl
aam
daa
fdivp
int
gs
jmp
dec
sbb
adc
mov
clc
xor
cmpsl
divb
and
xchg
ljmp
mov
aad
mov
lret
ret
add
pop
pusha
stos
cmpsb
push
xor
das
xor
and
sbb
add
jg
xchg
mov
dec
pop
sbb
and
push
push
xorb
add
aam
sahf
mov
mov
lds
stos
jecxz
push
ret
mov
xchg
lcall
inc
sahf
test
test
cmp
xchg
push
andl
adc
inc
daa
jmp
and
sbbl
lea
nop
mov
popf
lods
mov
aaa
pop
push
push
test
xchg
xlat
sahf
shl
in
sbb
pop
ret
pop
sti
scas
aam
shrl
and
lea
jmp
test
fsubp
adc
stos
dec
push
jmp
sbb
cmp
add
sbbb
shll
sub
aam
rclb
sub
jae
add
mov
inc
push
sub
push
push
clc
pop
mov
addr16
mov
lcall
stos
imul
push
sbb
daa
cmp
ret
adc
gs
fiaddl
mov
clc
inc
cli
cmpsl
xorb
dec
push
sub
pop
xchg
std
loop
pop
xor
xor
mov
mov
out
xchg
adc
imul
iret
pop
cld
popf
and
in
popf
inc
add
inc
jg
xlat
ficomps
mull
in
or
movsl
fisubrs
outsl
jno
push
shlb
lock
dec
int
mov
and
shr
sub
pop
jbe
jmp
jb
sbb
out
xor
or
push
aad
leave
push
mov
shll
push
fadds
lcall
xor
mov
ss
push
dec
and
leave
mov
jle
pusha
outsb
pop
loope
cmpsb
pop
or
push
mov
dec
push
mov
into
mov
sbbl
inc
fwait
sti
sbb
daa
push
push
lock
mov
push
adc
lcall
cmp
rcrb
orb
jnp
stos
and
push
or
jge
enter
ret
imul
inc
mov
mov
lret
pusha
shrl
addr16
fcmovnbe
nop
sbb
loope
xchg
push
dec
xchg
xor
mov
jb
and
pop
test
aam
mov
fisubrl
scas
mov
cmpsl
sub
pop
xchg
std
lods
push
jg
repz
scas
xchg
int
clc
sahf
or
call
adc
bound
add
sahf
cwtl
xchg
scas
shlb
test
test
test
outsl
push
stos
cmp
sbb
and
pop
insb
xchg
jge
sbb
add
ljmp
xlat
xor
cmpsl
jb
jecxz
pop
add
int3
out
testl
arpl
sub
out
mov
and
lea
cwtl
pop
dec
mov
enter
dec
fisubrs
pushl
xor
pop
xor
movsb
dec
dec
mov
xor
sbb
pop
mov
mov
scas
les
out
mov
jno
dec
mov
push
lahf
aad
shl
shlb
pop
dec
or
bound
leave
jae
push
nop
popf
fucom
lret
lods
mov
dec
pop
adc
sbb
lret
and
mov
jecxz
cmp
sahf
ljmp
sbb
outsb
fldcw
sbb
sub
shlb
xor
inc
and
or
dec
mov
dec
push
xchg
and
sub
xchg
or
sahf
nop
mov
push
inc
mov
xchg
lods
dec
mov
or
adc
xchg
mov
push
mov
push
pop
cmpsl
popa
add
jecxz
dec
and
into
dec
pusha
mov
cld
outsl
pop
push
sbb
mov
sahf
loop
test
adc
mov
ja
mov
std
dec
cmpsl
into
jne
lret
test
mov
push
movsb
mov
xchg
mov
stc
mov
jo
aas
movsb
xchg
out
out
cld
imul
outsl
add
mov
xchg
xor
mov
enter
jns
inc
mov
test
movsb
bound
ret
lock
mov
gs
sub
or
in
sub
mov
clc
in
mov
loopne
cmp
subb
mov
sub
xchg
fildl
xchg
test
lock
mov
out
andb
mov
mov
imul
pop
rorb
jge
fwait
cmpsb
xor
pop
fs
add
mov
jbe
xchg
mov
clc
lods
mov
std
negb
das
mov
aaa
mov
cwtl
lock
mulb
test
repz
or
push
subb
mov
xchg
mov
mov
cwtl
dec
mov
test
mov
mov
mov
sarl
cmpsb
pushf
mulb
movsb
mov
mov
mov
call
and
das
lods
test
mov
sbb
xlat
hlt
adc
orb
test
or
test
mov
movsl
mov
xchg
sub
mov
mov
dec
mov
mov
mov
movsb
call
out
test
mov
sub
andb
popl
xchg
add
scas
xchg
fsub
mov
scas
and
mov
mov
andb
sub
lock
dec
pushf
subb
icebp
enter
pushf
mov
lea
xor
es
push
or
mov
pop
inc
leave
scas
out
lcall
xor
jb
mov
mov
mov
outsb
mov
sbbl
loope
add
js
jb
jmp
rcrl
ficoml
mov
adcl
hlt
mov
adc
adc
addr16
mov
pop
or
rclb
stos
cmp
xlat
sbb
and
leave
std
mov
fcomps
fwait
lahf
fwait
loop
mov
cmpb
aad
outsb
stos
fisubrl
enter
cli
cli
pop
sahf
rorl
xor
inc
jbe
mov
xchg
jnp
pop
and
jae
and
out
adc
repz
fadds
pushf
mov
popa
cmpl
cmp
mov
in
rol
adc
out
lea
bound
stos
inc
ds
or
sahf
cmc
sbb
mov
scas
lret
or
stos
jo,pn
push
shl
fs
adc
dec
in
fisubl
xor
sbb
fdivrp
loop
ficomps
shll
fnstcw
jecxz
jae
add
movsl
aad
pop
test
jle
lea
jbe
aad
insb
test
repnz
shrb
ds
sub
mov
mov
aaa
inc
outsl
jg
aam
and
test
call
dec
cld
ljmp
mov
push
test
call
ret
xchg
push
popf
stc
ss
popa
pusha
sbb
jo
outsl
fiaddl
adc
push
lcall
or
aam
and
lock
loope
enter
xor
idivl
adc
sbb
and
add
dec
jb
daa
xor
dec
dec
hlt
mov
mov
rcrb
cmc
shll
push
sarb
test
xchg
cmpsl
mov
jnp
dec
fbstp
imul
fidivl
test
rol
xor
nop
lcall
mov
stos
insl
popf
ret
lret
insl
mov
loopne
jmp
inc
cmp
cs
xchg
xlat
leave
xor
xchg
dec
mov
mov
out
outsb
or
dec
ret
call
les
push
test
sub
adc
mov
sarb
sarb
mov
lods
pop
out
xor
xor
movl
bnd
jmp
sbb
push
mov
push
xor
mov
loop
loopne
movsb
push
fsubs
push
and
lret
aas
pushl
movsl
pushf
jmp
adc
sbb
mov
fwait
pop
adc
sbb
nop
rcll
fdivl
mov
add
mov
movsb
aam
bound
xor
mov
pop
lret
negl
in
scas
pushf
loop
pop
fidivrs
jb
lea
cmp
jbe
into
cmp
push
xchg
addl
push
mov
adc
test
sub
jp
dec
xchg
jae
les
hlt
mov
mov
fs
cltd
xchg
popa
ret
sub
addl
nop
cwtl
jge
addl
and
into
imul
or
out
jp
mov
stos
xchg
dec
jge
mov
mov
add
mov
jmp
dec
fistpll
mov
inc
adc
stos
jne
shlb
cmp
rcrl
cmp
mov
push
and
ljmp
mov
mov
jb
repnz
movsl
incl
popf
mov
movsl
sarl
pusha
scas
fistps
sub
leave
xor
push
mov
inc
mov
sbb
sbb
inc
in
and
mov
test
pop
sahf
or
xor
dec
cmpsl
xchg
mov
stos
jg
xorb
mov
mov
loopne
xchg
mov
xor
fwait
popl
xorl
shlb
fcmovb
xchg
or
rolb
sub
stos
cwtl
je
ss
push
sti
mov
cmpsl
in
or
mov
sahf
or
push
mov
mov
mov
and
pop
sbb
sbb
adc
mov
test
daa
or
xchg
adc
and
bound
cwtl
push
pushf
flds
mov
nop
test
xor
xchg
pop
imul
ret
cld
cs
les
xchg
ficoml
or
sub
inc
roll
ljmp
int
fwait
xchg
jl
cmc
dec
inc
fwait
add
ljmp
and
xchg
xchg
ret
cmp
sbb
sbb
sti
loopew
arpl
and
xor
data16
outsl
insb
xchg
dec
out
jmp
hlt
scas
mov
std
ret
mov
int
out
dec
and
adcl
int3
xchg
aaa
shlb
push
cmpsl
test
add
push
pop
xchg
fstps
xchg
iret
daa
and
xor
mov
fcmove
imul
adc
mov
bound
push
cmpsl
lcall
call
cld
arpl
xlat
inc
enter
mov
in
xor
push
jns
imul
jno
fwait
push
mov
or
popa
das
jnp
dec
sbbl
adc
sbb
outsl
push
adc
mov
cli
adc
ljmp
in
call
sub
jle
pop
mov
or
std
int
daa
test
mov
push
aaa
std
push
adc
xchg
adc
cmc
adc
push
push
ret
xchg
ficoms
sub
mov
lods
adc
cmpl
xchg
xor
xchg
inc
rcrb
orb
xlat
stos
in
gs
or
repz
dec
push
outsl
lcall
es
cltd
jne
lods
movsl
jmp
out
jbe
mov
cltd
rep
xor
sbb
ds
jae
sbb
inc
pop
jae
fcmove
xor
pop
cmp
movsb
fsqrt
mov
ret
adcb
mov
popf
lcall
or
push
call
cmp
test
ret
push
push
xchg
sub
movsl
pop
sub
fimull
pop
or
push
dec
repnz
xor
fcmovbe
ss
and
les
scas
lahf
popf
adc
cmc
lds
adc
loop
add
jne
inc
adc
adc
mov
pop
pop
jb
lea
andl
out
repnz
ljmp
and
lcall
fcmovb
lods
cmc
pop
xchg
addr16
xchg
mov
jns
cmc
xor
ret
jg
out
scas
push
mov
adc
loopne
dec
shr
pop
cwtl
mov
add
bound
pop
cmpsl
mov
push
cmp
negb
test
push
mov
or
or
pop
loopne
dec
jl
insb
inc
fidivl
pop
scas
or
dec
mov
movsl
jmp
lcall
je
sti
mov
out
in
push
sub
jg
aam
sub
lock
mov
mov
in
mov
mov
ret
jg
mov
xchg
cmpsb
fnstsw
clc
mov
xor
ror
cmp
js
push
lods
int3
mov
jno
popf
ss
jae
in
movsb
jl
cmp
xchg
test
lcall
mov
mov
adc
mov
xor
rorl
jbe
and
dec
ret
pop
bsf
add
sbb
out
mov
jp
aam
in
sbb
jge
sub
and
js
sbb
repnz
adc
sbb
pop
add
addr16
xchg
fidivl
gs
xlat
gs
repnz
hlt
sbb
frstor
mov
and
jae
clc
push
nop
xchg
test
inc
xchg
xchg
lea
call
andb
mov
or
lock
sbb
xchg
mov
lahf
fmul
movsl
sarl
pop
or
cmp
jbe
xchg
movsl
xchg
lcall
loop
fisttps
mov
mov
test
test
xlat
cmp
lods
mov
test
and
loop
cltd
mov
outsl
stos
sbb
dec
mov
mov
lcall
sahf
or
mov
nop
xor
in
scas
je
loopne
mov
jmp
leave
or
leave
mov
mov
fld
dec
or
jmp
mov
xor
icebp
popf
into
push
xor
cmpsb
adc
fisubrl
pushf
mov
mov
bound
cld
mov
test
cli
and
movsb
pop
fwait
mov
testl
and
jge
lods
mov
in
push
daa
fsub
pop
aas
repnz
testb
cmpsl
xlat
inc
sbb
xor
xor
popa
movsl
shlb
mov
test
leave
aas
mov
fdivrl
das
push
sub
sahf
lock
cmp
cmpsb
ficoml
jno
sub
mov
sbb
mov
and
push
xor
fsubrl
mov
fidivrl
xchg
jge
ret
cs
adc
cmpl
lcall
sbb
sbb
xchg
popf
std
xchg
dec
xchg
push
push
jmp
icebp
cs
pusha
dec
adc
adc
insl
nop
xchg
and
pushf
adc
out
sbb
mov
sub
gs
xchg
pop
popa
dec
push
test
lds
es
outsb
xchg
mov
sub
rcr
outsl
aad
dec
xor
xor
repz
shrl
rorl
jae
mov
or
nop
cmpsb
add
sbb
cld
out
movsb
mov
mov
xor
cmp
mov
in
enter
mov
hlt
xorl
add
push
fdivrs
pop
and
jl
lods
out
sub
ds
xrelease
lods
aas
or
and
xchg
ljmp
ficoms
movsl
gs
adc
xchg
cmp
repnz
or
or
dec
sub
mov
sub
sbb
repz
fadd
lcall
insb
ja
inc
out
mov
outsb
loop
pop
int
sahf
xchg
sub
inc
lock
aad
lret
mov
mov
add
outsb
inc
add
imul
pextrw
dec
cmc
pop
loopne
movsb
shrl
mov
aas
rorb
loope
pop
lret
pusha
jns
jmp
fidivl
aaa
addr16
pop
push
sahf
mov
or
out
fwait
les
scas
pop
mov
push
lock
push
mov
imul
add
xchg
add
lahf
mov
cli
out
dec
add
inc
xchg
adc
bound
or
out
adc
ds
aad
mov
mov
movsb
inc
sahf
and
jl
bound
or
rorl
in
inc
add
cmp
fsubrl
mov
and
imul
shlb
test
pop
jae
andb
sbb
and
fnstcw
dec
push
sti
movsb
adc
sahf
bound
or
cmc
xchg
loopne
in
bound
mov
sbb
ss
loope
mov
adc
cmp
sub
jg
jmp
cmp
xor
mov
sbb
inc
cmp
lcall
bound
inc
out
or
lcall
xchg
mov
lahf
sbb
sbb
adc
pop
subl
xchg
iret
test
mov
fsubl
dec
cmpsb
nop
xor
jno
sahf
icebp
nop
ljmp
sahf
xor
adc
jno
ds
andb
stos
daa
sahf
mov
mov
loop
test
sarl
jbe
mov
lea
mov
leave
push
daa
jbe
pop
fcomps
xchg
inc
cmp
mov
jp
pop
jl
inc
cmp
scas
mov
mov
dec
iret
jmp
leave
sbb
cli
fiadds
out
lret
test
shll
and
stos
mov
ja
divl
xor
test
mov
adc
loopne
sbb
jg
mov
flds
xor
add
int
jle
repnz
leave
xchg
clc
addl
psubb
xchg
push
push
jb
sbb
xor
pop
add
addb
or
loop
jg
insb
lcall
aas
cmpl
data16
mov
subb
inc
sub
cmpsl
xchg
sbb
sbb
xlat
and
ss
pop
loop
jle
add
dec
call
pop
in
leave
xlat
in
sbb
lods
lret
pop
jbe
sub
mov
xchg
out
inc
sub
insb
cmpsb
rcl
and
push
dec
sbb
xor
mov
out
add
adc
jae
ja
cmpsl
mov
sbb
mov
dec
shlb
scas
mov
inc
or
aaa
cmpsb
mov
out
jbe
mov
mov
pand
jbe
shlb
inc
popf
mov
push
stos
and
jbe
int
lcall
outsb
ljmp
mov
aam
mov
outsl
pop
lret
or
jp
das
xchg
insl
test
pop
in
insl
ficoml
jno
repz
scas
cltd
outsb
mov
mov
inc
hlt
fdivrl
es
inc
mov
ja
out
stos
in
mov
mov
loopne
mov
xor
inc
ljmp
iret
fistpll
mov
adc
loop
loopne
imul
stos
mov
rcl
mov
aad
adc
ret
and
lret
and
pushf
cmpsl
orb
loop
rcll
push
and
imul
lods
dec
loop
pop
pop
sbb
push
inc
xor
add
aam
out
nop
jae
test
jle
es
insl
mov
adc
loope
xlat
rclb
data16
fisttpll
push
pusha
mov
out
and
js
or
js
mov
and
outsb
jno
mov
nop
aam
pop
jne
int
frstor
out
sbb
pop
roll
push
in
fcmove
aam
clc
std
dec
sub
pop
or
pop
test
jno
fs
daa
scas
lcall
xlat
jmp
sahf
mov
adc
adc
fiadds
setg
pop
pusha
sub
jo
movsb
jne
dec
dec
clc
xor
lods
add
mov
mov
test
insb
xlat
mov
subl
inc
pop
jp
and
sbb
fidivrl
dec
out
adc
das
repnz
addl
test
lcall
and
ss
outsl
repnz
cmpsl
xlat
add
arpl
push
rcll
jno
cmp
xor
mov
test
loope
or
mov
aam
sbb
mov
pop
adc
push
scas
cmp
mov
pop
lret
mov
mov
and
cwtl
and
test
out
dec
imul
test
mov
lock
fs
push
sbb
pop
cmp
cmpsl
loope
jae
inc
pop
sarb
mov
fnstsw
mov
inc
inc
lret
sub
loopne
pop
sahf
rclb
in
in
push
test
mov
xchg
sub
mov
daa
mov
mov
inc
pop
flds
mov
test
mov
mov
fimull
lcall
mov
fwait
stos
xchg
adc
add
mov
loop
or
bound
call
sbb
ficoms
xchg
xor
lds
mov
icebp
mov
lcall
lahf
cld
xor
mov
push
out
adc
and
pop
sub
push
and
and
jmp
add
aas
bound
adc
leave
das
dec
loopne
mov
aam
cmp
push
sahf
and
sbbb
cmpsl
add
adc
lods
cmpsl
popa
add
sbb
mov
jo
ss
call
jno
lods
xchg
repnz
mov
and
mov
xorb
test
push
pushf
out
out
pop
outsl
shll
xchg
pop
pop
fs
inc
jno
aam
or
add
push
pop
bound
leave
scas
imull
mov
xchg
lret
push
lret
fiadds
lahf
push
pop
cmp
bound
rcll
cwtl
push
int
lret
adc
add
cmpsl
sub
loop
pop
pop
sarl
jno
sub
xlat
test
sbbl
sbb
push
push
push
add
cmpb
je
loopne
test
jmp
setp
pop
ret
jmp
das
aad
sahf
push
bound
add
dec
cmc
pop
pop
pop
sbb
and
pop
insb
cmp
imul
pop
jno
rcll
fnsave
sbb
or
cmp
mov
sahf
fisttpll
test
xor
out
pop
lahf
loop
jne
incb
insb
aad
sahf
mov
xor
sti
cmp
xchg
lcall
xchg
dec
ret
cmp
mov
dec
mov
stos
nop
or
xchg
adc
xchg
jno
sahf
mov
pop
add
mov
push
pop
and
or
mov
mov
push
or
add
mov
mov
outsb
xchg
inc
xchg
popf
pop
ret
xchg
mov
jbe
bound
ds
fidivl
sbb
mov
out
fsubs
popa
fidivrl
jge
fisubrl
mov
test
mov
cs
daa
js
mov
inc
jp
mov
inc
xor
pop
mov
cmp
jns
push
pop
shll
add
pushf
xchg
lock
dec
test
mulb
jge
mov
mov
xor
scas
cli
adc
gs
sub
test
fsubl
mov
iret
push
nop
xchg
pop
mov
mov
xchg
arpl
divl
pop
mov
jg
loop
rclb
or
mov
pop
out
neg
add
pushf
inc
or
aaa
adc
div
jns
and
mov
mov
inc
xor
fs
notl
xchg
ljmp
jge
dec
addl
stc
and
sti
xor
push
xor
xchg
mov
fst
mov
pop
dec
imul
xor
leave
xchg
add
jecxz
push
push
xchg
sbb
mov
ss
movsb
lcall
aaa
pop
xchg
imul
and
loope
and
fcmovbe
shlb
xchg
pop
jnp
sbb
stos
dec
jne
xor
or
adc
dec
inc
out
popf
hlt
lods
xor
dec
xchg
jbe
outsb
xchg
mov
lea
jecxz
sahf
add
nop
rcrb
cmpsl
inc
mov
jns
test
cmp
add
add
pop
rcll
outsl
frstor
lea
mov
cli
movsl
repnz
pusha
fwait
xor
dec
cmp
lahf
mov
xchg
out
lods
xchg
jge
cld
adc
sbb
shlb
and
orb
fimull
and
sub
pop
push
out
lcall
stos
stos
or
sti
shrl
mov
std
lods
mov
jmp
mov
inc
fwait
pop
and
lock
sub
mov
mov
xor
mov
pop
push
test
inc
mov
and
hlt
add
cmp
inc
out
mov
fisubrl
or
adc
outsb
stos
outsl
popa
xchg
sarl
test
sbb
xchg
lahf
loopne
mov
fwait
enter
fnstenv
lcall
ss
cld
jl
popa
stos
mov
in
pop
or
xor
ja
mov
pop
sbb
cmp
shll
xchg
ret
push
xchg
fdivr
lock
ja
jno
xchg
repz
pusha
lock
mov
or
int
out
lds
arpl
xchg
js
add
inc
add
and
test
pusha
jg
insb
inc
repz
xchg
cmpsb
popa
js
adc
xchg
mov
stc
test
mov
fwait
test
test
jp
pop
jl
pop
inc
pusha
lods
movsb
call
inc
sub
movsb
xor
cmpsb
jno
loop
cmp
test
test
jecxz
mov
test
in
jmp
movsl
mov
ljmp
mov
mov
cmp
lods
mov
cld
mov
test
test
outsb
dec
mov
test
push
inc
xchg
mov
mov
out
mov
call
lea
jp
and
mov
mov
mov
scas
mov
mov
sahf
aaa
mov
push
or
test
mov
mov
lock
loop
mov
xlat
cmp
mov
aam
lods
jge
jmp
pop
mov
mov
xchg
xlat
icebp
test
mov
xchg
xlat
imul
daa
movsl
je
mov
cwtl
sub
loope
mov
mov
mov
push
cmp
jmp
jp
mov
xchg
mov
mov
aaa
push
lock
and
lahf
das
mov
mov
outsl
xchg
movsb
test
mov
test
out
repnz
push
nop
inc
scas
xchg
ret
and
xchg
xchg
mov
fsub
mov
aaa
int3
in
dec
xchg
out
fisubl
xorl
xchg
jl
push
or
call
mov
jnp
aaa
xchg
mov
sub
mov
aaa
xchg
xor
mov
aaa
jl
mov
sub
stos
nop
scas
flds
decl
xorb
and
lret
cwtl
lret
lock
cmc
fmuls
xor
in
rolb
inc
mov
jecxz
mov
xor
lcall
mov
aaa
jns
lcall
cs
int3
aad
fiaddl
cmp
mov
mov
outsl
mov
xlat
dec
movl
lahf
and
cmp
mov
subb
mov
aam
xchg
sbb
adc
add
xor
sub
xor
sbb
sbbb
sub
jge
mov
inc
aas
call
subl
fsubs
aam
add
cmp
test
inc
sbb
faddl
cmp
test
cli
push
imul
fs
and
jne
and
stos
loope
cltd
and
xchg
push
pop
les
mov
addr16
push
dec
ret
andb
shlb
rolb
push
push
sbb
pushf
add
test
sbb
shll
sbb
rol
ficompl
loop
or
dec
fstl
add
jae
fldl
enter
cmp
out
std
sarb
pop
push
adc
sbb
xchg
sbb
jbe
jno
adc
sub
xchg
fimuls
adc
adc
cmpsl
sbbl
lods
add
push
iret
add
jae
mov
js
xor
push
push
rolb
imul
js
mov
es
fldl
or
pop
dec
inc
test
xchg
pusha
or
mov
out
sub
inc
push
adcl
fdivrl
xor
fwait
sarl
xlat
sahf
movsb
mov
cmp
mov
xchg
call
ds
sbb
jbe
popf
aam
push
mov
dec
in
add
mov
lods
xchg
popf
xor
mov
mov
pop
loop
std
mov
in
loopne
lods
push
out
pop
mov
fistps
cmp
cmc
mov
shl
movsb
lret
out
imul
mov
cmpsb
test
stc
mov
or
jns
inc
imul
pop
jnp,pt
xchg
mov
dec
imull
mov
lcall
stos
testl
inc
xor
mov
fwait
rorl
scas
mov
out
push
pop
jne
aam
fwait
dec
les
bound
movsb
sahf
mov
loop
das
dec
mov
mov
test
or
ficomps
mov
cltd
push
xlat
lcall
jno
jae
test
rclb
xchg
mov
adc
out
push
ficompl
dec
cmpb
push
test
fists
push
mov
cmp
pop
mov
movsb
lds
repnz
push
inc
push
push
test
movsb
mov
jmp
movsl
mov
fisubs
inc
jb
mov
pop
bound
loope
adc
test
fidivl
mov
adc
pop
stos
xor
cmpsl
stos
aaa
in
icebp
repnz
and
sbb
push
adc
and
dec
cmpb
mov
xor
xchg
mov
arpl
repz
fwait
sbb
scas
mov
scas
into
jno
fs
push
or
jmp
and
lcall
sub
cmpsb
xor
xor
int
outsl
mov
rol
add
mov
cmc
mov
sub
cmpsl
roll
inc
stos
push
or
int
nop
aad
xchg
aam
add
sbb
shrd
xor
icebp
loop
rclb
xchg
xchg
fsubs
xchg
pop
xor
hlt
in
nop
rcrb
jecxz
loope
or
dec
push
bound
mov
ret
jns
sahf
sub
sub
mov
fbstp
or
cmc
sub
cmp
mov
cmpsl
xchg
xchg
mov
scas
xor
mov
pop
dec
xchg
out
xor
inc
loope
clc
mov
xchg
bound
fs
insl
sbb
daa
cmp
mov
fidivl
cmp
jnp
fadd
xchg
add
je
inc
pop
pushf
xchg
mov
push
jl
add
adc
inc
dec
cmp
mov
icebp
and
shrl
int
jbe
xchg
lea
ret
stos
pop
je
xor
cli
enter
lret
mov
sahf
xor
add
scas
push
add
mov
aaa
and
movsl
fdivs
hlt
sub
mov
jecxz
push
fnstcw
cmp
fdivrs
mov
mov
subb
mov
add
mov
mov
lods
fcoms
fiadds
scas
pop
addr16
xlat
in
sbb
inc
sub
adc
push
pop
and
in
xor
xchg
jmp
scas
push
jp
xchg
xchg
jmp
pop
xchg
push
stos
cs
loop
dec
stos
push
fucomi
nop
cmp
xchg
ss
cltd
out
fisubl
mov
cwtl
cmp
push
call
dec
mov
in
sti
adc
jle
xchg
lea
add
in
or
mov
lods
pop
jmp
fisubrl
loopne
stos
lcall
mov
mov
cltd
xchg
xor
stos
int
xchg
popa
lcall
cwtl
lret
fsubrs
adc
test
sbb
sbb
test
dec
push
cmc
loop
fisttpll
push
adc
xor
xor
repz
mov
pop
daa
mov
mov
enter
dec
xchg
les
imul
pop
out
nop
mov
fisubrl
mov
mov
cld
test
outsb
pop
lock
cmp
iret
xorb
jo
pop
sub
push
icebp
fsubrl
adc
vphsubwd
lcall
int
std
fldl
or
popf
fimull
rcll
mov
jmp
test
jns
cmp
stc
hlt
sub
adc
sbb
lods
xor
xchg
sbb
roll
es
test
scas
adc
and
addr16
lock
mov
int3
testb
test
dec
push
fisubrs
enter
rcrl
lcall
mov
repnz
jno
adc
fs
xchg
in
ret
cmpsl
test
not
xchg
repnz
cmpsb
call
ret
mulb
enter
enter
or
xchg
mov
ficompl
jno
scas
pushf
add
sbb
cmp
xor
or
cmp
ficoms
mov
xor
jo
sbb
in
or
pop
addr16
in
and
das
sub
stos
pop
sbb
popf
add
dec
pop
add
out
mov
mov
adc
sbb
sbb
sbb
jp
aaa
lret
out
clc
cmc
mov
pushf
push
mov
cmp
inc
jl
cmpsl
sbb
cmp
push
lcall
mov
push
mov
cltd
cmc
mov
fisubrl
pop
dec
nop
sbb
pop
jb
popf
movsb
dec
cmpsl
fcomps
and
lcall
imul
bound
setle
xchg
les
pop
push
xchg
pop
aaa
xchg
sub
fwait
loop
fstl
in
mov
add
rclb
push
enter
xchg
out
pop
repnz
js
inc
push
ret
ret
pop
stos
or
sub
icebp
mov
sub
mov
lret
out
mov
fistl
jle
xchg
flds
mov
dec
sub
xlat
call
popf
into
and
push
or
mov
cmpsb
fistpll
mov
sbb
add
mov
adc
out
imul
cmc
push
sub
mov
jmp
lods
insl
cmp
mov
stos
pop
xchg
push
imul
scas
xlat
dec
inc
add
lods
subb
pop
xor
mov
and
lea
xchg
push
mov
cmp
dec
stc
and
adc
pop
xchg
push
mov
push
sti
sbb
popf
adc
push
andl
cmp
lcall
adc
mul
mov
dec
adc
jb
xchg
or
push
mov
and
call
test
test
pusha
sbb
adc
xchg
shll
scas
sbb
lcall
in
xor
in
jbe
in
and
cli
xlat
sti
or
sbb
fnsave
xor
dec
addb
clc
inc
mov
sti
mov
je
cmc
pop
hlt
das
cmp
lods
movsb
xchg
arpl
cmpsl
dec
in
std
aaa
ljmp
pusha
mov
and
inc
xchg
clc
pop
cltd
push
shlb
mov
fwait
cld
mov
sbb
mov
inc
lret
aaa
jmp
xlat
pusha
sbb
mov
lods
mov
testb
fcomps
fsubrp
repnz
pop
mov
dec
xor
adc
dec
adc
adc
and
out
push
pusha
fmul
and
js
xchg
jae
into
in
push
int
add
or
add
mov
mov
rclb
and
pop
adc
cmpsl
mov
push
aaa
fcmovu
lea
jg
mov
push
xchg
push
outsl
inc
lret
rcl
int
fcomp
jle
mov
fisubl
outsl
fsubs
test
test
int
adc
cld
imul
ficomps
das
xchg
pushf
aad
jmp
rcrb
pop
lock
rcll
cmp
pop
sahf
mov
push
push
roll
jne
adc
or
addb
sub
mov
jp
adc
movsb
out
dec
fimuls
xor
mov
pop
cmp
insl
adc
mov
push
adc
or
mulb
mov
or
test
fcmovb
mov
aas
add
addr16
fmull
flds
ret
lret
outsb
lret
stos
mov
xor
pop
or
mov
sbb
shl
std
push
fwait
imul
dec
faddl
and
sub
dec
addb
loop
mov
pop
jno
fbstp
mov
scas
mov
out
movsl
rorl
jno
rcll
jle
lcall
adc
mov
adc
lret
insl
push
out
fildl
fbstp
ror
or
iret
nop
in
cli
nop
or
and
test
and
push
mov
insl
xchg
cmpsw
testb
mov
add
fcomps
mov
xchg
mov
arpl
out
outsb
or
lods
mov
and
pop
sub
mov
dec
std
ljmp
or
mov
movsb
out
push
mov
bound
pop
lods
cmc
mov
mov
rcr
out
orb
mov
scas
push
and
int3
sahf
pop
cltd
inc
aas
or
dec
test
ficomps
fidivrs
xchg
mov
rcll
imul
sub
sbbl
mov
cltd
out
and
add
loop
mov
loopne
je
stos
gs
sub
jle
mov
mov
loop
cmp
test
push
adc
stos
or
je
mov
sbb
mov
cmp
cmp
xchg
aas
scas
jmp
bound
mov
mov
dec
das
movsl
outsl
push
and
jne
inc
jbe
test
jp
ja
push
arpl
lea
gs
out
adc
je
in
or
lahf
pop
loop
ficoml
imul
into
lcall
rolb
int
lods
subb
fs
add
mov
sbb
jge
fs
inc
xchg
orb
and
popf
push
sarb
scas
addb
in
xchg
daa
or
hlt
cmpsb
sub
out
int
inc
adc
ret
ret
repnz
jne
movsl
and
rorl
daa
loop
fimull
repnz
xor
inc
shrb
xor
jb
mov
jne
rcrb
popa
inc
jg
ljmp
test
hlt
push
cmp
jo
daa
mov
outsl
xor
insl
outsl
mov
ss
add
ret
inc
dec
enter
loopne
mov
cmp
aad
movsl
loopne
jecxz
aaa
negb
in
testb
jne
ret
inc
mov
pop
pop
ret
mov
jb
or
shl
push
ret
and
add
negb
xchg
sub
loop
mov
out
loopne
in
jbe
imul
pop
pop
lods
cmp
xchg
daa
pop
mov
adc
mov
shll
sti
xchg
sbb
shl
adc
cmpsb
cltd
sahf
or
mov
mov
vpinsrw
sbb
lcall
wrmsr
adc
cmpsb
adc
aaa
stos
cmpsb
jecxz
sub
mov
add
dec
clc
sbb
scas
aas
jb
movsl
gs
pop
inc
fwait
and
mov
push
mov
test
test
imul
mov
jne
aaa
mov
push
sub
mov
ljmp
pop
scas
adc
sub
mov
or
and
ljmp
ss
jns
inc
int
mov
aas
adc
hlt
mov
cmp
insb
xlat
mov
push
cmp
popf
loope
or
fistpl
stos
out
pusha
test
lcall
jno
mov
cmp
inc
jb
cmpsb
rcrb
pop
jle
cmp
mov
aas
outsl
push
mov
hlt
aaa
adc
aam
xchg
mov
dec
test
cmp
mov
insb
mov
in
push
ret
fsubs
scas
popa
adc
xlat
push
pop
mov
pop
cld
das
mov
push
dec
pusha
sub
mov
push
aas
es
or
imul
or
dec
jl
mov
mov
out
lcall
mov
sbb
xor
mov
lcall
sbb
andb
subb
hlt
pop
stos
jg
xchg
lcall
iret
adc
xor
add
loop
mov
movsb
push
aad
push
pop
lds
xlat
mov
fidivl
push
xorl
mov
icebp
and
outsb
push
adc
jmp
mov
pop
call
out
adc
stos
jbe
adc
test
mov
xchg
or
cli
pop
psubsw
mov
call
enter
pop
add
pushf
push
imul
xchg
out
bound
adc
sbb
cmpsl
mov
sbbl
repz
adc
pop
rcr
push
add
rcl
jnp
in
fistpl
sbbb
shlb
cmp
inc
mov
in
mov
or
mov
mov
fiadds
xchg
adcb
rcrb
or
ud2
jo
push
rolb
je
pop
mov
es
mov
pop
sbb
mov
adcb
call
test
xchg
or
pop
dec
pushf
cmp
mov
push
mov
nop
pushf
out
dec
fidivs
sbb
fimull
jb
mov
xor
xchg
mov
adc
repnz
and
push
stos
adc
fdivl
mov
std
inc
into
push
add
xor
cltd
xchg
rcrb
mov
aaa
iret
test
insb
cmpsb
lcall
sub
in
cwtl
add
xchg
add
pop
jmp
lcall
sub
mov
imul
outsb
imul
pop
rcll
pop
negl
sbb
std
push
loopne
lret
xchg
or
push
shlb
jae
push
sbbb
fs
and
cwtl
shrb
ja
mov
cmp
and
stos
cwtl
add
sahf
mov
mov
and
ret
push
and
lock
xchg
add
shrl
ret
or
cmp
loopne
std
or
and
loop
lock
sub
shrb
push
movl
xchg
sub
imulb
int3
aam
jbe
cmpsl
cwtl
clc
and
lahf
aas
xchg
stos
inc
call
xlat
pop
xor
xchg
xor
mov
and
call
ret
xchg
xor
jbe
scas
ja
cs
xor
cwtl
sub
into
cmpsl
adc
fldl
scas
sub
dec
xchg
push
scas
adc
cltd
popa
mov
inc
xor
push
lods
push
je
mov
outsb
loope
mov
xchg
cmp
test
ret
cmp
test
test
icebp
fcmove
out
jmp
add
into
hlt
mov
das
fs
mov
outsb
inc
dec
lods
addr16
test
lcall
stos
gs
aam
loop
or
popf
pop
cmpsl
sahf
sbbl
test
cmp
ret
shlb
in
leave
mov
sub
pushf
gs
popa
lcall
testl
fldt
xchg
and
pop
out
dec
sbbb
pop
inc
ss
sub
pop
nop
mov
xor
mov
or
pop
dec
out
mov
or
ficompl
xor
mov
mov
pop
adc
adc
cmc
bnd
sub
add
mov
and
popa
int
je
xor
xor
adc
in
push
std
fadd
add
movsl
outsb
sbb
pop
test
ficompl
add
sti
inc
out
pop
aas
rep
psubusw
getsec
das
sub
sbb
movsl
outsl
in
or
push
cmp
outsl
sub
xchg
ds
jne
and
int3
push
sub
repnz
dec
inc
dec
xor
xorl
imul
xchg
lret
test
mov
adc
sub
dec
js
int3
ss
or
hlt
mov
sahf
mov
xchg
inc
sub
add
call
arpl
arpl
or
mov
daa
inc
stc
inc
jae
push
bound
les
mov
xchg
pop
dec
mov
inc
or
xor
and
xor
popa
or
dec
mov
inc
scas
cld
out
mov
jae
cmp
mov
adc
pop
and
xchg
pop
xor
mov
aas
shr
mov
xchg
in
repnz
aaa
ret
test
sahf
or
xor
pushf
loop
sbb
out
and
ret
and
fstpl
jle
cmpsl
das
sub
mov
data16
push
loop
push
xor
inc
sbb
push
fimull
adc
andb
nop
sbb
pop
jmp
shrb
or
mov
inc
aaa
dec
jmp
loop
cmp
ss
outsb
add
mulb
xchg
mov
mov
sub
imul
call
inc
loope
pop
sbb
inc
pop
adc
jo
fwait
into
test
clc
pop
jbe
cmpsb
fs
mov
js
xchg
lahf
in
bound
push
movsb
lods
xchg
add
in
mov
mov
int
ret
jbe
in
sbb
lret
cmpsb
data16
addb
repz
int
stos
pop
shl
push
test
pop
add
aas
int
test
mov
adc
mov
in
jmp
or
test
mov
mov
xchg
mov
subb
stos
test
mov
andb
xor
mov
call
andl
mov
xor
cmpsb
mov
mov
adc
xchg
test
lods
pop
jbe
data16
fwait
testl
xchg
cwtl
mov
call
xchg
xchg
jnp
push
andb
mov
repnz
push
and
inc
iret
jecxz
mov
movsl
out
test
das
xchg
xor
xchg
xchg
jo
xorl
xor
mov
mov
cmpsb
xor
pushf
mov
lea
enter
mov
mov
xorb
sub
icebp
test
scas
cmpsl
stos
cmpsl
mov
mov
mov
inc
subl
scas
lahf
call
cmpsb
test
cmp
mov
shll
cmpsl
test
mov
test
mov
jp
insb
mov
mov
mov
mov
cmp
push
lcall
dec
shlb
sahf
frstor
push
mov
sti
sub
int3
scas
mov
add
insb
cmp
cmp
cmpsb
cmp
inc
sub
xor
lods
inc
pop
adc
xchg
pop
lods
push
out
xlat
adc
int
jno
daa
push
clc
bound
rcr
test
mov
shrl
cmpsb
inc
mov
or
lcall
mov
pop
adc
call
jg
repnz
mov
shll
xchg
mov
mov
inc
mov
roll
push
push
pushl
sbb
loopne
aad
sahf
push
adc
jmp
data16
push
xchg
out
sbb
nop
dec
fnstcw
out
xchg
loopne
push
test
daa
inc
push
xchg
adcb
inc
lcall
insl
xchg
lods
imul
pop
lret
cmc
repz
xchg
sbb
adc
ja
stos
fstp
inc
mov
mov
xchg
popf
xchg
inc
mov
cmp
adc
ds
in
push
stos
inc
loopne
mov
sahf
sbb
fcomps
xchg
sub
outsl
repz
ss
and
dec
out
xchg
sub
mov
repz
stos
popa
push
mov
xor
stos
ficoml
mov
repz
jne
mov
fsubs
mov
mov
mov
mov
add
sub
push
xchg
int
xchg
jae
pop
shll
and
mov
in
sbb
mov
sub
mov
cmpsb
lcall
or
mov
fisubrl
mov
mov
sub
arpl
jbe
sarl
daa
aad
fbld
iret
sbb
or
xor
sti
sbb
in
shrl
xchg
xlat
add
cmp
dec
in
cmpsl
jmp
push
lcall
cli
in
dec
push
enter
int
and
pop
jb
ficoms
inc
dec
imul
aad
xchg
pusha
and
cmpsl
dec
andb
popa
push
adc
movsb
ficoms
rcrl
adc
ficoms
outsl
adc
lods
movsl
je
mov
mov
mov
sub
imul
mov
and
in
mov
adc
movsb
mov
cmp
insb
push
mov
xchg
lcall
push
push
add
in
xor
loop
cmp
lahf
ja
test
shll
cmp
je
and
sbb
xor
outsb
popf
test
fidivrl
mov
in
push
ror
sbb
xchg
push
add
inc
pop
ljmp
cmp
ljmp
loopne
rcr
scas
jns
das
lock
repz
mov
sahf
fucomp
jne
lahf
rcl
mov
cltd
mov
shll
fucomp
sub
lahf
xchg
test
scas
shlb
push
scas
jbe
mov
xchg
push
mov
xchg
mov
int3
jns
enter
stos
pop
bound
sub
sarl
mov
shlb
or
mov
lret
addl
mov
daa
shlb
sbb
std
test
aam
nop
fbstp
addr16
push
xchg
ret
ja
shrb
adc
push
rcrb
lcall
add
mov
or
mov
nop
adc
dec
in
and
arpl
data16
sbb
cmpsb
sbb
ljmp
jl
mov
stos
mov
bound
mov
pop
inc
shrl
mov
lahf
pop
mov
int
int
xor
leave
jge
test
mov
sub
es
in
mov
mov
loopne
test
adc
xor
adc
js
mov
sbb
imul
cmp
xlat
ret
xchg
jmp
mov
or
inc
in
out
lock
sub
scas
sbb
dec
pop
cmp
into
push
xor
stc
jb
or
imul
movsl
push
test
call
jnp
mov
adc
adc
cmp
inc
cwtl
ja
aaa
icebp
xchg
xlat
mov
jnp
jns
mov
outsb
cmpb
sub
sbb
mov
mov
mov
outsb
mov
fiadds
stos
cmp
pop
jne
mov
adc
sub
pop
dec
ss
and
xor
sub
int
les
imul
dec
pop
out
jmp
cmp
scas
xor
fdivl
into
gs
cmp
xor
fsub
ljmp
jg
pop
repz
xor
xchg
lea
imul
jp
and
or
push
loopne
mov
test
lea
pop
aas
mov
in
pop
les
out
movsl
inc
sbbb
fiaddl
repz
ss
mov
clc
test
in
mov
fs
gs
sahf
loop
add
pop
fstl
insl
out
push
out
adc
mov
push
xor
loop
fcmovbe
into
ljmp
imul
iret
std
add
hlt
mov
push
scas
in
xor
push
ljmp
push
pop
push
xor
subl
dec
testl
sti
bound
mov
sbbb
movsb
xchg
adc
cmp
xor
add
aam
sahf
dec
and
dec
stos
leave
lcall
mov
fisubl
jne
lock
cmp
sbb
and
cli
aad
fcoml
ljmp
adc
sbb
sbb
loop
xchg
inc
xor
dec
and
inc
loopne
adc
mov
xchg
xchg
or
test
xor
sbb
inc
xor
fucomi
push
sub
dec
and
sarb
fcompl
mov
mov
bound
add
xchg
sbbb
sbb
jb
mov
bound
adc
add
arpl
rcrb
or
ret
adc
scas
inc
cmc
adc
mov
dec
nop
cmpb
stos
dec
pop
adcl
dec
lea
push
mov
loop
cld
xor
ret
ds
push
adc
push
pushf
lcall
iret
fidivrs
std
out
xor
xor
movsb
iret
xor
out
and
gs
adc
mov
push
adcb
inc
jae,pt
xchg
arpl
xchg
lret
mov
andb
test
dec
sbb
dec
xor
inc
nop
or
jg
repz
out
cmp
dec
mov
bound
in
loop
lret
push
push
je
dec
lcall
ljmp
mov
es
sub
js
lods
repnz
std
ss
xor
shrd
ss
jb
je
daa
mov
mov
in
xchg
daa
daa
mov
sbb
pop
loopne
int
shll
lcall
lcall
sbb
pusha
fisubs
fcomp
cmp
xor
xor
pusha
je
lds
mov
or
nop
pop
pop
inc
add
xor
movsb
jg
lcall
mov
mov
dec
in
mov
push
and
cltd
imul
iret
fs
mov
mov
and
add
xlat
inc
sub
lcall
xor
loop
mov
mov
xchg
dec
ret
ret
or
test
in
dec
add
ljmp
scas
fnstenv
and
sbb
inc
inc
mov
pop
outsl
or
mov
mov
mov
mov
adc
out
xor
imul
or
movups
jmp
jecxz
sbb
inc
jp
shl
scas
or
sbb
icebp
movsb
stc
fwait
cmpsb
ror
mov
mov
xchg
cmpsl
mov
dec
lods
push
test
adc
pushf
pop
sub
in
ss
popa
nop
push
jmp
cmpsl
jbe
xchg
sub
sbb
popa
out
lcall
std
mov
lahf
jecxz
jbe
or
lcall
fsubrp
xchg
adc
xchg
xchg
and
cwtl
and
aam
frstor
jge
ret
scas
jle
jno
aas
push
push
mov
xchg
mov
xor
test
push
les
xor
inc
pushf
shlb
or
lcall
push
sbb
sahf
jne
dec
cmpsl
sbb
xchg
rcrl
rorb
adc
andb
mov
jecxz
pop
cmp
out
mov
loopne
andl
jmp
movsb
std
ficompl
sub
inc
pop
or
or
test
xchg
push
out
jle
pop
outsl
mov
les
mov
push
repz
jbe
leave
mov
sub
sbb
sahf
enter
lcall
mov
daa
pop
mov
and
pushf
mov
dec
in
cmpsl
notb
inc
mov
clc
call
xchg
or
shlb
or
popa
test
mov
fcoml
sbb
mov
push
jmp
mov
push
pop
loopne
pop
out
lea
cli
lahf
out
xchg
push
icebp
cmpsl
mov
adc
mov
icebp
fcoml
xor
test
jno
out
in
sti
hlt
xor
in
pop
fimull
lret
movsl
das
lea
pop
in
fstpl
call
push
adcl
xor
adc
fmuls
cmp
add
out
rcrb
or
icebp
ds
fwait
shrl
rolb
lds
test
push
stos
lock
mov
mov
movsb
fisubrl
dec
cmp
push
mov
hlt
mov
pop
jp
fisubrl
sahf
inc
jp
subl
int
sbb
push
test
test
stos
lret
cmpsl
lcall
mov
sub
sahf
inc
loop
in
xor
lret
xor
jge
mov
fwait
ljmp
push
out
stos
ret
popf
add
imul
cwtl
pop
cmpsb
mov
dec
dec
int3
jge
mov
subb
int
jo
and
cmp
stos
cli
cmpsl
mov
fimuls
xchg
ret
jo
aas
xchg
inc
test
inc
dec
cmp
mov
rol
xor
insb
mov
aam
sbb
inc
and
aad
push
xlat
jmp
sbb
in
mov
sti
inc
bound
mov
jnp
pop
loop
aam
inc
mov
xor
test
nop
aam
test
sbb
shrb
addr16
fiadds
xor
mov
cmc
repz
insb
xchg
daa
nop
loope
fisubl
inc
lret
loop
lcall
pop
pop
enter
stos
int
lds
and
or
fisubrs
push
add
xchg
or
push
sub
jl
loop
popf
mov
inc
dec
shll
jmp
fcmovne
sbb
push
adc
and
lods
mov
push
dec
pop
test
xchg
ret
out
rorl
jnp
mov
xor
mov
test
mov
sbb
xor
inc
sahf
test
inc
pop
rcl
fidivrs
popa
scas
lcall
movsl
cwtl
mov
jne
xchg
adc
jo
pusha
lahf
jnp
test
mov
bound
enter
and
adc
adc
test
pop
cmp
ja
add
jle
loope
jecxz
loopne
lcall
cltd
ss
push
and
shr
or
xor
xor
imull
mov
decl
jmp
jo
mov
jg
leave
jmp
js
mov
xchg
ljmp
mov
inc
pushf
addr16
mov
mov
and
fwait
xchg
enter
lret
test
imul
xchg
jg
outsb
xchg
ficoms
and
add
pop
and
adc
push
mov
mov
lds
movsb
cltd
mov
and
repz
stos
prefetcht0
inc
mov
out
dec
pop
adc
adc
pop
xchg
rcrb
ss
and
in
push
orb
out
popl
popa
shll
lcall
ret
add
xor
shr
and
jne
in
aas
cmp
push
jb
fidivrs
dec
loop
lahf
sub
lret
out
pop
mov
movb
adc
leave
testb
cmc
adc
mov
or
adc
in
mov
testl
outsb
mov
sahf
sub
loopne
lcall
xchg
xchg
pop
add
xchg
or
enter
mov
popa
shlb
adc
sbb
scas
fisubl
sti
push
pop
or
add
gs
ret
mov
in
sbb
mov
or
out
gs
hlt
icebp
or
out
rclb
not
mov
push
sahf
fists
je
xchg
movsb
jb
sub
popf
inc
push
mov
std
and
scas
lret
xchg
pop
stos
in
xchg
aam
mov
adc
sub
inc
mov
xchg
shlb
dec
into
xor
sarb
adc
scas
flds
mov
cwtl
adc
jecxz
dec
sbb
xchg
push
lock
das
mov
mov
inc
xor
inc
adc
add
xchg
add
xor
stos
jge
add
dec
push
addr16
subb
push
mov
rclb
leave
push
and
mov
cmp
sbb
mov
and
pushf
lcall
cmp
inc
jge
call
test
out
out
nop
or
jl
inc
mov
addr16
jmp
loopne
notb
adc
and
sahf
sub
mov
bound
pop
and
adcb
lea
lret
xor
fisubrl
and
loopne
rclb
ret
lea
hlt
add
mov
push
addl
cmp
lods
fcmovu
out
mov
mov
scas
jmp
or
test
sub
mov
push
call
call
hlt
jno
jmp
mov
lcall
sahf
jp
shrb
push
adc
jl
jno
lahf
dec
cli
sbb
std
pushl
addb
aam
lcall
adc
xchg
cmp
or
fs
sbb
movsb
xchg
aas
and
ficomps
xor
int3
je
mov
test
je
cltd
add
call
sub
sbb
shlb
shrl
fidivrs
add
push
addr16
mov
sbb
test
rcrl
decb
sahf
call
lahf
jo
xorb
lcall
cwtl
movsb
mov
lds
push
mov
cmp
dec
inc
mov
pop
lods
movsb
movl
addr16
lret
test
popa
adc
or
mov
in
inc
shlb
lock
adc
inc
std
shll
ret
rcrb
lahf
fisttps
xchg
ljmp
jae
rolb
imul
pop
push
sti
ljmp
push
push
cmp
push
lds
stos
iret
bound
fs
xchg
mov
push
mov
outsl
xor
push
ret
xchg
addr16
fwait
jno
loop
in
pop
add
test
mov
fisttpll
mov
mov
test
dec
fsubs
sbb
pop
mov
push
clc
lods
cmpsl
stos
push
dec
cmp
dec
ficompl
jle
enter
sub
jnp
cwtl
xorl
sbb
imul
shl
mov
movsb
adc
xor
xor
push
scas
mov
xchg
mov
mov
iret
jmp
sub
push
mov
or
adc
jae
lcall
jb
insl
xchg
push
out
out
cmp
mov
dec
lcall
sbb
fisubl
outsb
outsl
into
pop
cmp
jno
sbb
and
ss
xor
xor
das
movsl
cmpb
sub
push
nop
sub
loop
ljmp
sub
mov
mov
outsl
inc
sti
addb
inc
inc
loop
jne
test
fmulp
rcr
call
lcall
pop
inc
inc
sub
lcall
sub
clc
insb
fistpl
or
xor
pusha
mov
mov
jp
call
aam
xchg
fidivrs
jmp
addb
adc
cltd
xor
clc
xor
movsl
jno
scas
jno
clc
std
sahf
int
rcrl
loop
fdivp
cmp
mov
inc
xchg
sbb
xor
mov
pop
push
adc
js
ss
push
loop
insb
fnstenv
popf
test
sbb
sbb
jmp
fadds
xchg
mov
ljmp
test
orb
lods
xchg
loope
bound
adcb
ljmp
lcall
es
and
mull
push
das
imul
pop
sti
int3
add
mov
bnd
stos
loopne
rolb
push
fdivrs
lahf
ds
jecxz
push
dec
inc
mov
push
in
negb
sub
jne
sub
push
jge
xchg
insl
fs
aaa
mov
or
jmp
out
pop
sbb
int
hlt
call
test
inc
and
ss
mov
and
es
inc
lret
imul
dec
push
fistps
data16
sbb
push
loope
sbb
mov
xor
xchg
les
cwtl
in
push
mov
mov
xchg
movsb
adc
or
dec
pop
pop
and
in
rol
repz
popf
push
mov
mov
movsl
mov
shr
jno
dec
fisubrl
dec
ficomps
jmp
das
dec
out
movsl
add
gs
inc
pop
and
mov
dec
sub
cld
int
add
pop
xlat
outsl
in
xchg
repz
add
xor
mov
into
xchg
xor
add
sbb
xor
lcall
roll
scas
cmp
rclb
out
fs
stos
fldcw
fisubrs
stos
fcmovu
jae
in
push
sahf
out
xchg
pusha
lret
mov
mov
das
ljmp
negb
xor
sub
cmc
xchg
lods
and
mov
pop
mov
inc
test
mov
or
push
adcl
lret
mov
rorl
lret
inc
fadd
dec
xchg
push
pop
ss
or
adc
jmp
or
outsl
out
lret
jl
outsl
xor
adcb
push
pop
fwait
add
arpl
stos
sub
fsubs
adc
hlt
mov
and
imul
enter
cltd
pop
push
ret
mov
test
test
and
or
and
aad
adc
lea
mov
cmp
fstps
scas
push
ret
push
hlt
inc
mov
gs
xor
fildl
lcall
stos
imul
push
add
enter
lcall
inc
cmp
outsl
into
enter
inc
pop
inc
mov
sub
add
test
fmulp
xchg
push
dec
sbb
fs
bswap
je
adc
cwtl
or
dec
or
cmc
scas
jbe
xchg
and
jb
rcrb
push
mov
fs
jle
test
sub
or
out
or
mov
lea
rorl
punpckhbw
or
lahf
fisubrs
mov
jge
cmp
mov
mov
hlt
push
fbstp
into
fcmovne
repz
cltd
and
pop
mov
xor
push
cmpsb
sbb
mov
ss
rcll
or
repz
mov
jmp
ja
fsubrs
out
pop
pop
sbb
cwtl
ss
pop
mov
jg
lods
or
out
movsl
mov
mov
mov
outsl
in
lahf
popf
ret
xor
jae
push
out
les
mov
lods
jb
dec
int3
adc
jge
push
and
add
cld
das
mov
cmp
add
cmp
mov
adcb
push
mov
lcall
sub
std
jb
movsb
mov
sbb
scas
cwtl
ljmp
sbb
cmp
lahf
push
cltd
call
sbb
scas
or
in
int
mov
inc
and
dec
icebp
cli
daa
lods
and
in
subl
sub
bound
decl
cld
sub
jo
lahf
popf
loopne,pt
adc
js
out
inc
xchg
cmpsb
bound
adc
push
lahf
fs
adc
repnz
mov
js
int3
mov
pop
dec
scas
adc
push
fidivs
xchg
sbb
stos
jl
hlt
mov
inc
adc
jmp
ja
repnz
int3
xor
push
test
cmp
sbb
dec
push
setp
adc
adc
mov
loop
lods
loop
jno
scas
adc
int3
xchg
adc
je
pop
mov
hlt
test
test
jb
or
mov
or
dec
pop
sbb
xor
or
push
stc
and
insb
xor
xchg
pushf
stos
stos
iret
leave
inc
int
ss
bound
popa
inc
nop
pop
dec
dec
mov
popf
jbe
xchg
cmp
ret
mov
aas
add
ret
loope
and
xor
cli
popf
fnsave
xor
ud0
lea
sub
push
and
pop
arpl
xor
mov
mov
rcl
ss
fadd
mov
xchg
xchg
jmp
jecxz
sbb
out
loop
sti
xchg
push
jbe
mov
in
fisubs
pop
mov
ljmp
fdivl
popa
loope
xor
shrd
jns
lds
idivb
cltd
sbb
fnstcw
rclb
mov
inc
mov
mov
sbb
rclb
sub
and
test
lcall
jle
dec
je
iret
xchg
roll
mov
in
adc
ret
lds
jne
and
cmp
cmpb
stc
push
sbb
aaa
in
jmp
jne
xor
ljmp
movsl
shll
dec
mov
sub
push
mov
rol
leave
movsl
nop
aad
push
jno
adcl
adc
rolb
rol
lds
shlb
int
adc
mov
or
bound
mov
sbb
sub
insl
test
sarl
cmpsb
mov
sbb
sub
mov
dec
rcl
cwtl
adc
sub
nop
les
jmp
pop
push
fisubl
mov
test
sbb
adc
jno
xorb
sbb
mov
push
rorl
nop
add
out
fwait
jp
lods
sbb
inc
mov
xor
jle
loopne
mov
sahf
inc
jge
std
pop
imul
repnz
pop
in
jge
leave
xor
call
orb
inc
lret
cmp
add
xchg
lcall
lahf
outsb
das
jbe
or
js
out
sbb
and
das
xchg
cmpsl
clc
xchg
cmpsl
cmp
mov
ja
adc
test
neg
movsb
les
out
daa
je
mov
add
inc
cmp
mov
cmpsb
xor
inc
lret
push
mov
xchg
mov
jp
ds
add
bound
icebp
fsub
mov
jg
and
xchg
and
xchg
adcb
cmp
jae
hlt
dec
mov
out
idivl
das
jnp
inc
xchg
loope
pop
stos
cmpsl
xchg
mov
test
jno
hlt
mov
push
fwait
mov
mov
mov
pop
loopne
pop
out
mov
or
mov
jnp
mov
stos
mov
jnp
popf
dec
mov
shrb
movsl
jmp
loope
mov
imul
inc
inc
add
mov
loopne
sub
mov
out
cmpsb
xadd
mov
mov
lock
loop
jmp
jecxz
fisttpl
fwait
sub
mov
mov
lods
test
add
insb
movsb
xor
mov
mov
sahf
cmp
pusha
loop
out
movsl
movsb
xchg
stos
push
lea
xchg
cmp
lods
cwtl
loop
dec
mov
mov
xor
mov
out
mov
movsb
add
mov
jnp
xor
push
xchg
fwait
pop
mov
aam
movsl
hlt
mov
stos
adc
movsb
cltd
add
cmpsl
xchg
insb
mov
xchg
popl
mov
mov
test
scas
lock
mov
call
mov
fwait
xor
mov
test
add
xchg
xchg
mov
outsl
push
ret
cmp
mov
jecxz
sub
ss
aam
in
xchg
sub
rcr
sub
cmp
pop
mov
or
loop
sbb
in
arpl
ljmp
testb
sbb
or
cmp
fisubs
xchg
pop
or
into
mov
mov
push
daa
ficoml
test
xchg
and
mov
nop
mov
stos
xchg
xchg
aad
xor
sub
addr16
div
lahf
mov
mov
fisubrl
inc
lret
xchg
lcall
xchg
sub
arpl
mov
inc
in
mov
sbb
or
repz
movsb
lret
mov
call
addr16
fstp
outsl
repz
lcall
ficomps
fimuls
shlb
pop
xor
lea
cwtl
mov
out
in
pop
enter
xchg
mov
sub
adc
lcall
jb
dec
iret
ret
fnstsw
imul
jmp
test
gs
inc
loopne
lahf
sahf
mov
pop
loop
push
jge
sti
rcrl
and
push
push
sbbb
imul
hlt
outsl
and
xchg
jnp
jmp
jle
adc
mov
push
loop
push
jbe
add
lods
in
cmp
in
and
adc
sarb
sbb
sti
cltd
jle
lods
arpl
test
xchg
push
lds
sti
push
ds
xor
js
aam
dec
fwait
outsl
xchg
stos
bound
inc
les
scas
lahf
sub
fldt
xor
dec
xchg
jne
jae
add
add
xchg
xchg
lahf
lcall
push
pushf
pop
aam
sbb
bound
cmpsb
fistl
pop
push
sbb
out
adc
add
and
in
subl
xlat
xchg
cmp
cmc
mov
into
cmp
js
shl
cmp
icebp
xchg
in
inc
mov
inc
push
cltd
or
add
into
call
and
ret
aad
ljmp
xlat
push
pop
loopne
rorb
mov
rcr
and
xor
into
cmp
int
sarl
dec
inc
pop
call
or
lahf
stos
rcll
pop
rcrb
cmpsb
xchg
mov
pop
mov
xor
push
xor
imul
mov
sbbb
lock
rcrb
fsubrl
test
xchg
lret
addr16
xchg
test
mov
fstps
nop
sub
mov
xchg
aaa
test
rol
jp
leave
cltd
sbb
lock
lods
pop
mov
cld
shlb
xchg
daa
adc
nop
dec
push
lods
ja
jl
jp
and
mov
add
aas
fs
add
outsb
js
sub
inc
pop
imul
xor
dec
adc
add
cmpsb
xor
or
imul
jmp
aam
scas
mov
popa
pop
andl
ss
pop
jo
xlat
jecxz
iret
pop
push
movsb
jge
xor
cltd
mov
pop
cmp
cmpsb
popa
cmpsl
push
inc
jmp
insb
out
push
ret
shll
mov
lock
lcall
leave
push
out
xchg
mov
mov
out
hlt
hlt
test
mov
insl
dec
clc
ljmp
xor
sbb
push
jne
stos
lock
and
movsb
mov
xorb
lds
and
fimull
pop
mov
sub
popa
test
mov
cmpsl
stos
lock
mov
cmpsl
and
xchg
mov
ret
sub
nop
adc
push
add
xchg
pop
lods
loop
loop
xor
push
iret
lcall
mov
mull
lcall
jmp
xor
outsl
pop
sbb
sahf
pop
popf
int
fsubl
sub
and
xor
cmpsl
sbb
sbb
lcall
in
adc
mov
fcompp
xor
addb
jmp
xor
mov
aaa
int3
pop
fidivrl
pop
rcl
adc
test
mov
inc
jge
jp
pop
orl
adc
dec
jnp
fnsave
lret
test
jo
sahf
or
mov
xor
cmp
enter
adc
xor
adc
xlat
loop
inc
jecxz
xor
jle
int
jl
test
repz
in
test
pop
decl
inc
js,pn
mul
test
lret
and
xlat
addr16
mov
shl
ja
outsl
push
pop
lret
mov
inc
sbb
daa
mov
ss
outsl
sbb
loopne
push
jmp
stos
and
pop
stc
icebp
ss
push
subl
fiaddl
rorl
mov
cmp
repnz
jmp
test
mov
sbb
xor
outsb
pushf
ret
cltd
icebp
xor
shll
jne
aaa
imul
cmp
cmp
mov
fidivl
mov
daa
jae
aas
sahf
pusha
daa
mov
bound
scas
popf
loop
pushf
dec
imul
out
xlat
fcmovb
addr16
pop
and
inc
mov
cld
movsb
inc
sbbb
inc
xor
in
mov
mov
inc
jae
jle
pushf
insl
shlb
and
test
scas
sub
jb
jae
cmpsb
pop
xchg
int3
int
arpl
cmp
cmpsb
mov
rclb
pop
ficoms
mov
lcall
mov
icebp
cmpsl
xor
loope
shrb
jae
jbe
adc
cmpsl
or
mov
sub
cmp
call
loopne
mov
and
sbb
ficompl
cli
cmpsl
std
cmpsl
inc
dec
or
mov
imul
mov
pop
add
and
pop
xchg
or
sub
adc
jmp
lock
enter
push
push
sbb
pushl
push
or
pop
arpl
cs
sbb
daa
test
and
xchg
mov
mov
scas
push
push
outsl
cmp
into
xor
movsb
lock
movsb
and
mov
pop
mov
and
test
rcrl
sbb
popa
push
mov
xchg
add
pop
lcall
sbb
mov
jmp
jno
fidivrl
xor
stc
push
lea
sti
out
int3
imul
mov
mov
add
sub
nop
or
movsl
mov
js
inc
outsl
cld
fwait
xchg
push
or
ret
xchg
mov
xor
enter
hlt
mov
popa
jmp
movsl
lods
adc
stc
sbb
mov
pop
iret
xor
pop
dec
movsl
mov
xor
jl
loop
pop
dec
cltd
shrb
sahf
push
in
add
sub
xorl
jmp
mov
xchg
xor
lcall
cmpsl
fidivrl
pop
jno
pop
lods
mov
add
jl
and
lcall
outsl
fsubp
push
adc
lahf
les
nop
mov
sub
fcmove
mov
loopne
cmc
shrb
std
repnz
stos
push
lcall
cltd
imul
movsb
mov
push
sbb
out
sub
mov
add
pop
jbe
cmc
aas
popf
inc
xchg
fisttps
mov
mov
push
ficomps
cs
pop
mov
mov
mov
jne
mov
add
enter
jge
int3
or
mov
cltd
popa
in
adc
add
sub
xorb
jbe
add
mov
adc
dec
adc
mov
and
xchg
push
mov
leave
lock
mov
bound
lcall
fidivrl
lea
mov
fisttpll
cmp
ret
jp
cmpsb
push
pushf
hlt
bound
shll
aad
adc
add
and
lcall
test
inc
and
sub
mov
aad
cmp
inc
mov
shrb
and
aad
add
sbb
lods
cs
fimull
or
lcall
add
loope
cmp
lods
aaa
dec
mov
out
mov
pop
dec
movsb
lods
mov
and
inc
test
push
ds
add
ret
pop
push
imul
test
jmp
test
and
ljmp
dec
jno
nop
dec
lcall
arpl
mov
addr16
mov
jle
cs
pop
and
mov
call
ljmp
or
pop
mov
jmp
fidivrs
lret
push
scas
push
out
loopne
popa
pop
sti
jmp
mov
rcrl
dec
push
aad
out
rolb
adc
cwtl
cmp
js
dec
fsubl
cwtl
rclb
mov
or
les
pop
mov
and
adc
in
push
mov
test
pop
sbb
pop
out
xor
mov
push
sahf
push
push
shl
cmpsb
ds
pop
xchg
pop
bound
push
outsl
orb
dec
xchg
je
cmpsl
mov
imul
cmp
out
loop
mov
sahf
push
out
pop
jns
call
xchg
inc
insb
loop
cmp
repz
loopne
pop
push
in
sub
inc
xor
test
jbe
aaa
pop
jecxz
cwtl
iret
sbb
fsubs
push
insl
push
inc
mov
push
lcall
xchg
and
mov
jnp
ror
mov
jae
add
or
adc
jno
cltd
jmp
ljmp
mov
or
mov
xchg
imul
mov
iret
mov
sub
jecxz
dec
ja
push
sarl
mov
shl
or
mov
shlb
dec
add
sbb
and
pushf
out
rclb
ljmp
add
icebp
je
leave
std
lods
call
leave
pop
sub
adc
or
ds
lcallw
pop
cmpsb
rclb
xor
les
shll
adc
mov
sahf
cmpsb
in
movsb
insl
in
push
fcomps
dec
sbb
imul
shr
mov
or
jbe
cltd
mov
lods
cmpb
mov
loopne
scas
sbb
test
mov
je
push
xchg
outsl
out
mov
aam
push
inc
repz
ret
stc
bound
lahf
xchg
xchg
push
mov
fwait
nop
fbld
inc
dec
pop
mov
icebp
insl
mov
mov
loop,pn
jge
cwtl
test
test
adc
shll
data16
scas
loope
pop
mov
sbb
mov
hlt
lea
faddp
xchg
aaa
push
cmp
fstpt
loop
push
std
insb
andl
fsub
mov
and
mov
push
pop
xchg
mov
mov
cs
and
test
cwtl
mov
push
adc
mov
je
mov
mov
cmp
dec
scas
mov
aad
sbb
sbb
lcall
sub
jb
ret
push
inc
xor
cmc
mov
xor
stos
cmp
jg
scas
pop
xchg
mov
mov
ret
cmp
das
xchg
shlb
neg
lahf
and
daa
ret
push
cmpsb
arpl
xor
fstl
movsb
dec
dec
mov
mov
push
out
push
lahf
jecxz
mov
fildl
jbe
clc
loopne
scas
testl
or
movsb
stc
adc
mov
xlat
ja
sbb
punpckhdq
imul
pop
jle
cmp
xchg
lret
push
ret
sub
out
sub
mov
fstsw
outsl
jne
loop
xchg
addr16
adcb
push
ret
jnp
mov
outsb
pop
push
or
jg
stos
or
sahf
xor
dec
mov
or
mov
bound
lret
mov
fidivrl
xor
xor
lea
cmpsl
sbb
jne
cmc
dec
test
inc
ret
fwait
iret
fidivl
sbb
rcr
push
shll
jae
loop
xchg
inc
sbb
aad
sbb
fimull
mov
jbe
mov
mov
pop
xchg
iret
mov
fidivs
popa
xchg
inc
movsl
cmp
jo
xor
fcomps
out
pushf
jmp
lcall
mov
rcl
xchg
ljmp
mov
bound
xchg
ret
lcall
fisubl
push
jb
lock
xor
mov
ficompl
andb
pop
leave
popf
adc
das
or
out
cmp
mov
addr16
xchg
mov
outsl
stos
jbe
adc
int
lock
je
push
xchg
or
push
loopne
je
leave
push
rcll
mov
adc
inc
xchg
cld
scas
fisubrs
add
push
popa
push
nop
pop
mov
test
inc
adc
les
andb
out
addr16
jno
sub
jbe
call
test
push
mov
jb
adc
pop
sub
test
mov
jb
shlb
rclb
fimull
dec
push
mov
xchg
cli
adc
xor
shrb
movsb
fcom
xorb
fisttpl
aas
mov
stos
mov
mov
imul
bound
xchg
addl
pop
sbb
imul
std
out
push
das
imul
lahf
sub
mov
notl
xchg
cwtl
scas
stc
out
jmp
mov
sbb
imul
push
push
andb
xor
ret
pop
xor
inc
xor
insb
pop
lcall
cmc
jne
sub
inc
in
mov
std
sub
aad
jg
lret
inc
xchg
mov
push
lcall
pop
xchg
pushf
and
mov
or
addl
push
cmpl
dec
bound
in
adc
lods
xchg
fucomip
sub
or
sbb
inc
fidivrs
inc
pop
sbb
shl
sbb
push
sbb
cmpsb
mov
pop
inc
lcall
sbb
dec
loop
mov
decb
in
insl
movsl
mov
xchg
or
and
out
mov
pop
cli
outsb
cmc
sub
stos
hlt
mov
adc
movsb
or
mov
xchg
lods
rclb
dec
outsb
popf
mov
pop
out
xor
jecxz
cmpsl
mov
sahf
mov
gs
xor
push
imul
xorl
add
inc
dec
call
mov
dec
jbe
call
cmp
mov
jecxz
sub
jno
add
mov
aaa
out
mov
cmpsb
sub
cld
insb
mov
mov
dec
mov
test
mov
xor
cli
cwtl
in
and
mov
stos
xchg
jle
mov
sub
xor
call
jae
clc
inc
mov
sahf
ret
ret
aaa
cmpsl
popf
out
xor
fsub
cmpsb
adc
cmpsl
sbb
mov
and
cmp
jmp
xlat
cmp
imul
push
push
sbb
and
stc
sbb
sub
sbb
push
mov
xchg
xor
aas
addr16
fidivrl
xor
fistps
arpl
mov
and
xchg
aad
or
xchg
out
loopne
dec
call
add
xor
push
aam
add
cmp
pushl
mov
sbbb
lahf
shr
mov
mov
cmp
sub
mov
jb
ss
fbld
push
fsubl
fdivp
and
jge
mov
sbb
xchg
pop
push
mov
push
dec
mov
inc
mov
fnstenv
bound
popf
xor
test
lds
mov
jno
and
insb
sahf
xchg
push
add
sbbb
push
xchg
sahf
std
sarl
xchg
ss
jno
push
fs
in
jae
add
lret
out
xlat
sbbb
xchg
in
lcall
iret
xor
addr16
stos
mov
or
loopne
cmp
adcb
fisubrs
popa
mov
fbstp
lods
rcll
push
cltd
mov
cmp
dec
scas
inc
sbb
sti
pop
inc
jl
out
pop
sbb
add
push
push
dec
push
sbb
notl
xor
push
movsb
mov
jle
and
mov
out
sbb
xor
xor
sub
cmp
inc
dec
bound
repz
and
movsl
shll
add
lret
push
test
mov
outsl
push
test
arpl
rcrb
out
xor
fimull
cmp
lret
fidivrl
xchg
pop
dec
hlt
mov
mov
adc
dec
sub
mov
mov
icebp
jge
sbb
lret
cmpsl
fiaddl
jbe
int3
ret
inc
inc
mov
jb
fiadds
inc
loop
test
movsl
cld
mov
aad
and
mov
mov
push
mov
fisubs
mov
fimull
mov
jge
push
push
test
xchg
cmpsl
mov
andb
jmp
fwait
into
cmp
fldenv
cmc
xor
dec
inc
and
fs
aam
mov
xchg
sbb
aam
nop
test
lods
mov
adc
xchg
sbb
adc
iret
xchg
nop
outsl
nop
or
movsb
popf
fisubl
hlt
jb
push
push
xchg
mov
and
sbb
mov
addr16
icebp
mov
mov
and
sahf
xlat
inc
adc
bound
in
in
fdivrs
cmc
bnd
pushf
imul
jge
pop
negl
out
push
popl
daa
adc
push
push
xchg
xchg
loop
inc
jno
dec
aad
add
pop
popa
dec
mov
es
sub
dec
sar
mov
mov
imul
sbb
xchg
lret
aaa
and
rcr
incb
cmp
aam
adc
push
rorb
inc
lea
cwtl
push
lret
dec
test
sbb
sbb
adc
xor
inc
pop
rclb
mov
mov
add
xlat
ja
movb
sbb
xor
addr16
pop
int3
ds
sub
movsl
insb
xor
mov
add
fidivs
pusha
mov
fisttps
dec
or
xchg
popa
adc
aad
test
loope
shrb
cmp
xchg
shlb
int
mov
cwtl
fidivrl
cmp
cmp
test
fbstp
adc
jmp
dec
bound
shrl
wbinvd
pop
push
stos
jbe
jo
add
push
xchg
fnstenv
mov
rcrb
data16
mov
add
jmp
jg
out
cmp
jnp
sub
jmp
mov
pop
cltd
fnsave
or
jecxz
xchg
lods
pop
xor
roll
xchg
mov
shlb
jg
popa
dec
pop
jmp
jge
push
out
rcrl
dec
andb
xchg
sahf
pop
jae
in
insl
ss
data16
inc
xchg
lahf
cwtl
lock
adc
subl
xchg
dec
aad
push
fdivrl
outsb
insb
aaa
fdivrl
cmp
dec
dec
inc
cmp
cmp
push
ficompl
popf
stos
jb
push
inc
xlat
imul
mov
add
mov
mov
sti
and
push
jmp
dec
mov
push
fbstp
int
or
mov
insl
adcb
adc
bound
push
fimuls
rcr
sub
mov
pop
add
pushf
ret
sarl
out
sub
sahf
ja
mov
aad
in
dec
test
lret
push
lea
mov
mov
pop
rorl
xor
cmc
lcall
mov
or
lcall
cmp
jae
inc
loopne
xchg
xlat
fidivs
sahf
aas
or
cmpsl
lcall
mov
iret
add
ljmp
add
mov
add
out
xorb
fwait
lds
outsl
mov
aam
popf
sub
xor
mov
push
insl
xorb
pop
fcomps
out
sbb
xchg
lea
push
sub
loop
into
leave
sbb
int
bound
pop
mov
xor
adc
fisttps
roll
cmp
outsb
xchg
hlt
inc
dec
ret
lods
test
adc
jno
pop
mov
sub
xor
frstor
sarl
into
mov
cmpsb
lods
dec
xchg
test
or
js
mov
push
pop
xchg
andb
negl
scas
data16
adc
jne
and
dec
cmpsl
mov
je
mov
jmp
and
andl
jae
jmp
leave
aad
pusha
pop
mov
mov
adc
cli
push
jmp
out
ss
int
mov
xor
daa
call
int
pop
fs
inc
dec
leave
loopne
popa
xchg
or
sbb
jne
inc
les
pop
movsl
imul
jle
lods
shl
test
sub
jne
and
sbb
arpl
xchg
dec
cwtl
rcr
dec
aaa
iret
loop
loop
mov
out
test
mov
mov
outsl
xchg
out
lcall
sbb
imul
mov
out
sbb
bound
sbb
mov
scas
fcomps
mov
lret
or
xchg
cltd
pop
stos
jbe
mov
sbb
push
mov
arpl
sahf
fisubrl
xchg
out
xor
push
iret
xor
sahf
sub
xor
mov
mov
dec
mov
movsl
ret
lcall
xchg
cli
or
cld
jb
sbb
xor
pop
cmp
lods
popf
pusha
andb
rcl
scas
lcall
daa
dec
lock
cmp
mov
in
rorb
fistpl
out
cmpsl
cli
mov
mov
stc
add
loop
sahf
jmp
and
add
addr16
iret
aam
aas
repz
xchg
or
bound
adc
inc
sbb
test
gs
push
pop
mov
lea
xchg
adc
inc
and
and
dec
shl
pop
test
xchg
sbb
xchg
or
call
scas
mov
hlt
jmp
push
test
aam
pop
into
andb
out
ret
test
arpl
add
adc
cli
bound
xchg
lea
sub
fisubrl
stos
xchg
jb
ss
push
fs
jb
sbb
inc
sarl
mov
stc
sub
adc
insb
int3
pop
and
mov
xor
push
popf
xor
xchg
jb
pop
mov
les
sbb
mov
imul
cmpsl
and
mov
and
lahf
cmpsl
outsl
mov
shl
fisubl
xor
rolb
imul
leave
ret
test
sahf
sbb
lret
test
fisttpll
mov
scas
rclb
loop
jmp
aas
lea
xchg
imul
jo
mov
sbb
or
adc
out
mov
hlt
mov
sti
inc
jb
js
mov
mov
pop
jle
std
mov
lahf
jmp
jmp
fwait
mov
jp
ljmp
cmpsl
mov
pushf
mov
fnstsw
stc
stc
mov
xorb
lret
xor
ficoml
push
xchg
out
ret
cmp
lcall
insb
jecxz
xorb
mov
test
ret
popa
in
fdivs
xor
pop
fmulp
ret
sbb
lret
cmp
testb
mov
loopne
orl
cmpsl
fldcw
jno
notb
xor
sahf
jae
xor
out
mov
xchg
loope
je
popf
mov
std
loop
aaa
out
lcall
test
mov
roll
divb
daa
cmp
adc
imul
or
fucom
mov
add
lods
jge
sub
adc
pop
or
mov
or
fiadds
sbb
out
or
pop
xchg
push
inc
mov
iret
fistps
repnz
ret
sbb
add
roll
cmp
movsb
dec
xchg
inc
dec
xchg
sbb
jmp
sbb
mov
xor
pop
js
test
pop
movsl
mov
mov
and
xor
mov
push
sbb
lds
inc
fs
mov
loopne
fidivl
lcall
fimull
and
xchg
call
in
aaa
xor
enter
push
out
mov
aad
xchg
mov
mov
mov
stos
mov
cmp
out
mov
xchg
and
and
push
dec
jmp
loope
mov
sbb
int
xchg
gs
push
movsb
shlb
adc
les
hlt
cmpsb
rcl
rorl
push
out
test
push
ss
lcall
in
test
pop
pop
inc
sbb
xchg
adc
pop
mov
adc
fidivs
sahf
lock
in
in
ficomps
cmp
fidivs
fidivl
divb
mov
cmp
push
out
notb
addl
cmc
dec
arpl
lret
and
outsl
stos
xor
int
rcrb
repnz
and
out
xlat
mov
mov
dec
xlat
mov
cmpsb
das
jae
repnz
test
jg
movsl
leave
faddp
outsl
pushf
mov
ficoms
jl
aad
xor
nop
mov
aas
lcall
mov
pop
ficoms
repnz
adc
mov
arpl
adc
insb
push
movsb
mov
sbb
push
pop
and
inc
in
and
pop
bound
sbb
imul
hlt
nop
mov
stos
paddusb
int3
push
push
jmp
push
clc
call
sub
insb
sahf
inc
rcrl
mov
pusha
adc
mov
test
fnstsw
imul
pop
ja
lcall
dec
mov
je
adc
lret
ljmp
ret
in
mov
push
sbb
rol
inc
mov
add
dec
mov
test
imul
mov
sbb
cmpsl
mov
add
rcrb
icebp
inc
xor
aaa
addb
mov
adc
mov
es
mov
aaa
xchg
sbb
push
and
inc
or
cmp
mov
fwait
lcall
addr16
push
lcall
or
mov
popf
push
xchg
ror
loop
pop
push
pop
inc
popf
decl
cmp
scas
push
jae
pop
fimuls
mov
mov
jge
movsb
addr16
ds
lret
mov
repz
ret
add
icebp
xchg
gs
bound
popa
sbb
adc
pushf
rorb
pop
in
lods
add
xor
mov
jge
jmp
and
fimull
cmpsl
not
mov
or
pop
xor
mov
shll
aam
lcall
sbb
test
mov
cmpsl
mov
adcl
push
mov
repnz
sar
lret
lahf
test
cwtl
and
mov
add
lret
pusha
repz
je
enter
mov
ret
jl
pop
ja
lcall
adc
sbb
scas
pop
push
data16
mov
rcll
outsl
push
lock
fiaddl
mov
stos
subl
mov
test
pop
fildl
cmp
jbe
mov
ds
das
icebp
sub
add
bound
sub
and
js
jecxz
and
maxps
lahf
adc
int3
xchg
mov
orb
mov
add
mov
clc
adc
ds
call
nop
lcall
dec
cli
mov
mov
push
je
xchg
pusha
cmp
outsl
xor
shl
xchg
dec
ret
cmp
xor
mov
stos
and
adc
mov
sbb
lahf
loop
leave
jmp
mov
jp
or
push
lcall
sbb
and
ret
enter
data16
cmpsb
inc
and
cmp
pop
sub
mov
cmp
mov
sbb
ror
aas
ljmp
adc
ret
jno
fisubrs
imul
xor
loop
lcall
std
test
cmp
loop
int
nop
mov
mov
out
arpl
xchg
mov
nop
sbb
out
push
push
imulb
sahf
push
add
call
leave
or
ja
xchg
mov
minps
shlb
mov
rcrl
fiadds
pusha
mov
pop
loopne
mov
jmp
cli
loope
adcb
pop
cs
sub
mov
adc
test
pop
pop
fwait
sbb
sub
adcl
mov
mov
scas
add
or
jge
cs
push
inc
xchg
push
sbb
fcom
imul
jmp
out
and
lock
shlb
pop
test
xor
fnsave
xor
or
and
sbb
shlb
in
stc
paddd
lods
pop
mov
popf
ss
imul
fs
ret
jns
cmp
roll
and
adc
lcall
divb
mov
cmpsb
out
loopne
adc
or
mov
adc
lods
movl
les
and
xchg
cmp
adc
mov
movsl
sbb
outsb
jge
or
xor
and
xchg
fnstenv
or
jo
xchg
fidivl
xchg
push
xor
subl
aad
mov
outsb
loop
sbb
fidivl
mov
cltd
notl
movsb
jo
push
pop
iret
and
adc
lods
out
loop
fcoms
push
push
xor
sub
lcall
xchg
hlt
les
outsl
data16
shl
and
pop
lcall
lods
pop
jmp
aam
rcr
loop
mov
fbstp
adcb
repnz
js
dec
es
jbe
xor
dec
es
nop
out
lea
mov
xor
pusha
shll
nop
inc
inc
add
xor
mov
mov
add
ret
adc
movsb
inc
mov
dec
loop
push
daa
int
mov
je
mov
jmp
mov
js
mov
loop
lret
mov
adcl
mov
sub
inc
mov
lret
sub
mov
imul
ljmp
nop
mov
mov
jg
test
lahf
es
jl
cmp
inc
jno
cmpsb
and
push
fsubl
and
sarb
das
fistpl
int
fisubs
cmp
movsl
out
or
mov
dec
fisttpl
push
sbb
lret
stos
jecxz
sub
dec
sbb
into
inc
pop
mov
mov
mov
jecxz
imul
cltd
icebp
mov
sahf
rcrl
pop
push
mov
lret
pop
sub
and
repnz
mov
or
mov
xchg
adc
dec
aad
rolb
int
mov
stos
sbb
mov
les
xchg
test
call
out
add
stos
test
cmpsl
aaa
or
sbb
jb
popf
mov
xchg
fidivrs
dec
sub
sahf
add
scas
dec
push
or
xchg
sbb
mov
or
test
mov
adc
ljmp
pop
stc
loop
cmc
lret
pop
inc
fwait
aad
xor
jg
and
cmpsl
ds
ret
push
ljmp
push
mov
sbbb
adc
cld
add
aas
jbe
cltd
mov
loop
pop
sti
lret
int
je
pop
jl
cmp
sub
xchg
xchg
pop
leave
ss
pop
mov
add
enter
sbbb
dec
xor
cs
mov
fs
xchg
sti
sahf
lock
loop
push
out
and
pushf
sub
xlat
cltd
stos
int
rcrb
daa
and
fwait
loop,pn
mov
sbb
sbb
sti
xor
xchg
cs
push
shll
xchg
lea
iret
fwait
notl
lcall
sbb
mov
lods
bound
rcrb
sti
sbb
stc
jl
cmp
lret
shll
xorl
ja
sub
push
in
mov
imul
cmp
adc
fnstsw
loope
imulb
add
sub
lcall
mov
test
pop
leave
lcall
lret
inc
or
mov
mov
andb
jg
xchg
fadd
push
lds
gs
and
sbb
out
lret
lret
cmc
divb
dec
imul
push
and
je
add
test
test
lock
aam
sub
xor
jne
jecxz
pop
insb
jno
pop
clc
jae
push
sbb
pop
andb
adc
fisubrs
dec
cmpsl
loopne
dec
mov
inc
fs
push
xchg
xchg
dec
cmp
jne
testb
stos
inc
inc
pop
ret
movsb
add
imul
lds
or
lock
pop
pop
mov
ret
stos
jnp
rorb
rorb
stos
enter
fs
sbb
pop
and
repz
xlat
dec
mov
iret
sbb
lock
push
xor
in
popa
mov
mov
addl
sub
jnp
mov
fildl
push
and
xchg
mov
jne
add
xor
sarb
push
stc
or
sbb
hlt
nop
cltd
and
test
std
add
or
loopne
add
push
cltd
cmpsb
movl
andb
jbe
popf
and
mov
and
inc
add
add
mov
loop
and
icebp
inc
cld
xchg
test
iret
xchg
lret
roll
mov
cltd
stos
and
ror
fidivl
push
scas
pop
js
out
push
adc
pushf
mov
jb
lret
mov
or
cmc
sub
pcmpeqd
push
sbb
push
ret
mov
lahf
or
xchg
lret
mull
insl
or
push
dec
mov
data16
mov
mov
add
sbb
ss
inc
sbb
insb
sbb
test
ficoms
daa
mov
clc
fwait
mov
push
cmp
cltd
xchg
cld
and
push
cmpsl
out
adc
sbb
fcmovbe
sub
test
fldl
icebp
aam
sub
cwtl
orl
shrl
sahf
push
mov
xor
pop
sahf
xchg
sub
imul
repz
sbb
xchg
inc
inc
mov
fdiv
test
jno
rorl
fnstenv
xor
or
xchg
icebp
lods
sub
mov
push
je
shll
jns
mull
jge
addr16
sbb
pop
xchg
fcompl
inc
mov
cli
bound
and
insb
stos
call
lock
rorl
cld
ds
lcall
inc
pusha
imul
imul
pushl
dec
cmp
cld
sub
pop
ret
adc
add
fisubrs
cmpsl
xor
aas
daa
xchg
jmp
fwait
xchg
call
jbe
clc
add
cmp
stos
push
adc
cmp
sub
out
cltd
sub
rorl
ljmp
pop
cld
das
test
push
scas
dec
or
out
mov
cmp
loopne
cld
pusha
movsl
inc
and
lcall
sahf
sarl
mov
fwait
xchg
inc
aad
loop
adc
mov
inc
mov
add
sahf
mov
fildll
mov
push
int3
jle
xchg
cs
aam
pop
xor
cmp
in
xor
push
ficomps
loop
mov
cmp
lock
rcl
and
jns
push
push
mov
push
imul
std
inc
rcl
xlat
cmp
mov
mov
cmpsb
mov
mov
mov
stos
dec
cwtl
dec
jg
daa
fnsave
rclb
pop
fadds
gs
lea
mov
jl
in
ret
push
mov
jno
cmpsl
inc
dec
ret
or
adc
adc
xrelease
jne
mov
jno
cltd
mov
subb
rolb
in
fstl
addr16
rclb
rclb
xlat
sub
adc
xchg
mov
addr16
adc
pop
shrl
sbb
dec
dec
pushf
mov
mov
mov
adc
or
clc
push
mov
dec
jp
into
cmpb
jae
dec
cmpsl
and
add
xor
lods
adc
jmp
push
bound
iret
daa
cmp
adcb
cld
adc
loope
stos
aad
dec
push
or
mov
xchg
fcmovb
push
pushf
jno
dec
jbe
xchg
inc
cmp
pop
sbb
ror
test
xchg
push
xchg
lds
lods
lock
testb
mov
fwait
movsb
scas
dec
cmp
gs
lea
fsubl
pop
jae
xor
cmpsl
sbb
ret
cmpb
and
sub
je
mov
xlat
mov
and
add
and
stos
ljmp
test
movsb
mov
and
mov
mov
cmp
inc
lds
push
mov
jno
adcl
xlat
jge
out
mov
dec
inc
movsl
lds
push
xchg
in
mov
cmp
xchg
cld
or
mov
incb
lret
out
mov
mov
nop
push
rclb
adc
jae
add
cld
inc
hlt
mov
sarb
out
out
arpl
pushl
ljmp
enter
out
shll
in
jb
das
cmp
mov
popa
jmp
jge
xchg
insl
imul
sub
shll
inc
jl
jg
or
pushf
fcomip
mov
sub
cmp
popf
sbb
cmp
push
sub
imul
scas
sbb
jp
mov
fimull
enter
stos
cmpsl
je
sub
adc
mov
cmpsl
lcall
fucomi
fidivrl
adc
push
dec
repz
test
jnp
pushf
add
xlat
cmpsb
push
mov
cld
mov
jmp
sahf
std
dec
xor
fsubrs
ljmp
enter
movsb
mov
xor
sahf
cmp
in
cld
cmp
arpl
cmpsb
and
jnp
cmc
mov
xchg
fidivs
addr16
push
mov
mov
aam
daa
xchg
xor
ret
or
scas
push
fisubrs
mov
outsl
add
mov
out
mov
filds
loopne
ss
push
aas
and
cmp
jne
stos
xchg
push
adc
push
in
mov
inc
jle
dec
mov
nop
out
mov
sahf
sbb
mov
push
lcall
mov
inc
or
out
mov
in
lods
loopne
adc
test
or
fucompp
mov
xor
mov
sbb
out
jl
lods
cmp
stos
xlat
test
jno
inc
inc
adc
dec
push
clc
das
sub
movsb
fdivr
cwtl
and
mov
adc
mov
jb
cmp
daa
out
push
aad
rolb
and
daa
ret
push
fisubrl
fwait
add
test
mov
mov
lahf
push
adc
pop
add
xor
cmp
repz
sub
adcb
cmp
shrl
jns
lret
pusha
jl
lcall
xor
push
std
aas
add
das
jns
or
ficomps
outsb
pop
dec
shlb
rcll
sbb
xchg
mov
mov
imul
pop
inc
sbb
sub
out
push
fmulp
adcl
orl
scas
fwait
xchg
sbb
cmpsb
inc
lcall
das
js
into
mov
jnp
mov
stc
jge
mov
lcall
jl
and
add
out
fimuls
lods
arpl
iret
sbb
jae
add
xchg
test
iret
xchg
sbb
push
jle
push
loop
movsb
dec
add
mov
push
stc
leave
cmp
and
loop
stos
mov
and
sar
ljmp
out
imul
mov
xchg
mov
mov
push
stos
das
aas
add
xor
in
xor
mov
lahf
js
mov
mov
aas
subl
aad
mov
or
cmpsl
mov
das
mov
ret
add
or
mov
mov
fwait
xor
fsubrl
pop
lods
lods
xorl
out
jo
and
mov
movsb
lock
mov
push
push
in
fsubl
or
mov
mov
jnp
movsb
mov
cmpsl
mov
push
call
mov
or
scas
hlt
jnp
xor
fwait
shrb
in
lcall
lock
out
out
call
test
xchg
pushf
xor
lock
mov
cmp
lods
cltd
cmp
mov
addb
mov
add
subb
mov
mov
sub
ljmp
cltd
xorb
and
sbbl
or
je
mov
push
mov
sub
mov
cwtl
negb
xchg
and
mov
xchg
pop
dec
cmpsb
mov
out
mov
sahf
xchg
add
cmpsl
scas
jnp
push
xchg
icebp
mov
xor
mov
nop
mov
mov
xchg
aad
pop
mov
adc
aas
mov
mov
mov
orl
lcall
mov
mov
fwait
lods
popf
repnz
cmpxchg
cmp
movsb
test
push
shlb
orl
popf
xor
jp
out
fs
or
dec
scas
xchg
mov
sbb
mov
adc
rcrb
ljmp
fistpl
out
xchg
mov
add
outsl
pop
pop
shl
stos
mov
mov
sbbb
xchg
test
ret
lahf
loopne
ljmp
mov
nop
ja
xchg
outsl
pop
fdivl
cmpsl
add
test
fsubrp
sahf
adc
or
rcrb
movl
adc
mov
lods
js
clc
out
mov
loope
lcall
adc
sahf
push
xor
mov
mov
ja
in
pusha
lods
imul
jbe
inc
sbb
subb
inc
mov
cmp
rcrl
inc
and
lods
xchg
jecxz
loope
loope
rcrb
enter
out
inc
ret
push
and
cwtl
dec
dec
lret
orl
mov
leave
mov
xchg
jp
mov
ljmp
adc
jnp
xchg
cmpsb
mov
xchg
xchg
mov
inc
or
mov
jne
mov
mov
xor
jmp
inc
xchg
test
je
inc
jp
bound
leave
adc
data16
pop
cli
add
dec
ret
cmp
sbb
dec
sahf
and
xor
pop
fadds
mov
xchg
xor
pop
test
lcall
addr16
repz
fidivl
fisubrs
adc
mov
fdivp
and
mov
pop
fcmovu
cmp
fwait
nop
mov
sbb
test
jmp
add
cmp
aaa
fidivl
sahf
ret
fsubrl
rcrl
loopne
nop
sbb
mov
jbe
scas
or
pop
lcall
lods
rorb
mov
lcall
fdivl
aam
in
dec
cmp
mov
orl
jne
inc
mov
daa
dec
sub
mov
cs
ja
fidivl
push
ret
iret
xorb
sub
lea
or
cmpb
mov
nop
pushf
int
dec
dec
inc
scas
sti
rorb
lock
jb
dec
xor
mov
subl
in
shrl
in
mov
adc
adc
mov
adc
repnz
test
add
adc
scas
jp
cmp
sub
lcall
jbe
scas
xor
xor
push
out
adc
push
inc
out
mov
or
cmp
xor
cmpsb
push
out
xchg
mov
test
shll
dec
scas
imul
test
xchg
mov
and
jne
mov
nop
cs
repnz
sub
in
push
fsubl
frstor
lea
sub
lock
and
test
int
xchg
xor
int3
mov
test
ret
lcall
xchg
stc
jmp
sarb
push
sbb
jmp
fstpt
sahf
imul
daa
or
ja
fistl
sub
popf
cmpl
frstor
popa
fidivl
dec
dec
cld
xchg
sbb
dec
cmp
sti
jmp
mov
or
xchg
add
sub
shlb
loope
daa
ljmp
push
mov
orb
fisubl
loopne
js
test
dec
lods
xchg
and
shlb
pop
xlat
loop
rcrb
nop
xor
jecxz
rclb
shlb
xor
idivb
jge
xchg
cmpsl
sbb
repz
mov
sub
xor
pop
or
jmp
outsl
sub
test
push
idivb
out
cmp
xchg
pushf
push
fs
xor
adc
lcall
sub
stos
lock
mov
pop
sub
and
and
xchg
mov
mov
sub
mov
xor
push
fdivl
cmp
xor
gs
xchg
mov
leave
loopne
mov
inc
hlt
std
xchg
mov
fistl
push
and
fstpl
mov
mov
xorb
lcall
xchg
scas
add
push
and
fldz
push
cwtl
mov
insl
mov
sbb
scas
adc
adc
dec
jp
xchg
test
mov
sahf
or
jge
adc
inc
loop
testb
add
mov
repz
cmc
adc
or
insl
idivb
fcoms
shr
mov
xchg
cwtl
pusha
pop
fisubl
loopne
lods
nop
push
ljmp
add
popf
xor
mov
cmp
js
shll
sub
xlat
sbb
nop
rcll
push
add
add
sbb
push
call
pop
adc
jb
and
inc
andb
cmp
mov
scas
jp
pop
xchg
or
rcr
ret
cmpsl
cmp
and
push
mov
pop
sbb
add
data16
mov
sbb
jge
mov
add
sti
xor
nop
xchg
mov
ljmp
into
xchg
push
cmp
fisubrs
shrl
idivb
bound
jl
out
xchg
pusha
add
pop
pop
mov
aaa
sub
add
je
mov
xor
or
fimuls
mov
popa
inc
mov
adc
fiaddl
lea
jg
test
push
aas
insb
les
and
xchg
sbb
ss
cmc
mov
jb
int
xchg
xor
rcrl
loop
pop
cwtl
ficomps
push
mov
and
adc
lcall
lods
xchg
mov
ret
push
pop
inc
rclb
jne
enter
cli
and
push
scas
mov
std
pop
sbb
out
adc
daa
push
pop
sahf
xor
sub
int
mov
push
lret
loop
sti
sahf
mov
nop
fcoms
mov
addr16
xor
dec
test
xor
repz
subl
cmc
sub
stc
xor
scas
std
mov
lcall
sbb
adc
ljmp
adc
xor
pop
mov
and
push
repnz
mov
and
push
sub
jno
lahf
sbb
dec
testl
sbb
popa
mov
inc
and
mov
pop
jle
xchg
jnp
psraw
inc
lcall
ficomps
mov
sahf
dec
adc
out
dec
ret
addr16
aam
ret
leave
test
js
dec
push
mov
mov
icebp
xchg
dec
push
or
jl
cmpb
cmc
adc
xchg
add
mov
shll
cmp
sbb
test
out
push
dec
pop
dec
jecxz
enter
jp
jb
pop
or
lea
push
movsb
mov
xor
mov
or
subb
fiaddl
mov
add
mov
hlt
scas
sbb
repnz
xlat
jmp
lcall
outsl
scas
mov
sbb
or
sbb
mov
pop
push
mov
xchg
andl
adc
cmp
push
xchg
jnp
ss
out
adc
push
loop
nop
mov
pop
push
fsub
out
les
rcrl
shrb
pusha
mov
add
aam
sub
mov
inc
insb
push
jle
fs
cmp
xchg
test
adc
in
xor
or
std
mov
fimull
stos
out
outsl
mov
pop
sti
les
mov
jp
dec
sbb
pop
and
push
rclb
mov
sbb
lret
repz
pop
cmp
out
sub
inc
sbb
xchg
sbb
mov
jl
mov
cwtl
insb
arpl
jbe
loopne
popa
pop
sbb
sub
rcl
mov
dec
jp
sbb
std
in
inc
pusha
and
loopne
xlat
xchg
ficoml
daa
push
insl
add
fisubs
sbb
mov
insb
jmp
pushf
mov
in
jge
dec
xchg
and
repnz
sahf
repz
xor
sub
test
push
scas
popf
mov
sub
cmpsl
push
daa
ljmp
imul
sbb
lea
lds
pushf
mov
test
lcall
jnp
mov
cltd
cli
push
push
mov
mov
shr
nop
shll
jns
mov
loope
repz
pop
pop
mov
ficompl
repnz
mov
test
jmp
sar
cltd
call
in
lcall
mov
in
sbb
subb
dec
pushf
push
xchg
loopne
cltd
popf
popa
sbbb
or
mov
jbe
jg
cmpsl
int3
mov
ret
sahf
push
xor
nop
adc
sahf
lcall
iret
xchg
int
xchg
dec
call
cmp
mov
outsb
jae
pop
xor
sahf
xor
push
enter
cmp
icebp
ss
repnz
xchg
jo
fs
push
mov
out
adc
mov
adc
lret
sbb
xchg
in
push
pusha
inc
dec
jb
mov
adc
xchg
inc
subl
sbb
les
int
test
add
fldl
lea
xchg
mov
mov
call
fimuls
adcl
in
sahf
xchg
cmp
mov
lods
and
int
sub
test
adc
lcall
jge
adc
push
pop
mov
imul
mov
in
pop
adc
stc
fwait
test
pop
sub
xor
scas
aam
dec
push
cs
mov
cmpsl
je
adc
jge
repnz
dec
dec
mov
xchg
inc
les
cmpsb
movsl
lcall
dec
into
jle
inc
lret
nop
sbb
cltd
or
fimuls
lods
rcrb
aaa
ret
jnp
sbb
test
sbb
shrb
mov
sub
dec
lcall
sbb
fsts
add
mov
ss
and
stos
sbb
data16
cwtl
pushf
js
mov
lock
cmp
mov
lcall
jmp
lods
ficompl
enter
mov
jns
xor
sahf
in
nop
mov
mov
test
xchg
mov
xchg
add
and
lcall
inc
pop
dec
or
mov
inc
inc
jbe
cmpsl
insl
xchg
jmp
rcll
mov
stos
sub
lcall
sbb
mov
fiaddl
stos
movsl
xchg
push
hlt
and
out
pushf
lcall
push
sbbb
inc
xchg
shll
lret
and
inc
lret
adc
inc
mov
xchg
lods
hlt
cmp
inc
outsl
pop
ficomps
dec
inc
sub
testl
arpl
pop
add
jne
mov
xchg
fistl
int
push
out
add
pop
shl
inc
jge
das
out
and
jb
hlt
mov
loopne
cltd
push
mov
jge
and
ficoms
mov
addr16
mov
mov
push
mov
inc
ret
cmpsl
test
adc
dec
test
pop
xorl
divb
sbb
ret
mov
out
shrb
filds
cwtl
mov
lret
idivb
movsb
xchg
mov
cmp
push
push
nop
lcall
inc
xchg
fnstenv
test
imul
inc
jl
out
daa
cmpsl
repz
push
or
add
sub
lcall
sbb
inc
mov
insb
mov
popa
rcrl
pop
mov
scas
push
jne
sub
mov
pop
lods
fcmovb
adc
ljmp
int
xchg
mov
cld
cltd
enter
dec
mov
jo
lcall
add
mov
test
inc
fs
cmpsl
repz
and
outsb
or
cs
xor
int3
es
cmpsl
jge
mov
jl
int
frstor
mov
xchg
mov
xchg
mov
shr
mov
aas
test
xor
cld
int
test
lods
add
wrmsr
data16
test
test
xchg
subb
popf
mov
gs
mov
sub
movsb
fimuls
call
mov
fists
dec
xchg
clc
enter
fs
push
into
mov
push
mov
xchg
movsb
lock
test
cld
xchg
ja
add
out
mov
mov
movsb
mov
ja
push
add
imul
dec
popf
mov
sbb
movsb
xchg
add
icebp
and
mov
setle
mov
sbb
es
loop
repnz
mov
or
mov
test
test
pop
vpmacssdql
or
xchg
xchg
lret
lods
adcl
test
cmpsl
adc
mov
mov
cmpsl
aaa
mov
dec
mov
mov
lcall
mov
aaa
xor
test
scas
mov
sahf
xor
test
and
sbbb
mov
lea
mov
movsl
test
test
ja
movsb
xchg
dec
nop
test
test
scas
decl
repnz
test
cmpsb
or
mov
test
mov
jge
lods
xor
mov
xchg
mov
cltd
jnp
add
mov
cltd
add
scas
mov
mov
loop
out
mov
test
xchg
mov
mov
mov
test
mov
mov
or
dec
mov
stos
mov
addl
mov
sahf
cli
out
bound
cmpsl
xchg
fidivl
push
xchg
push
daa
jnp
mov
lcall
xor
fdivrs
cmp
add
sub
inc
mov
cmp
dec
std
adc
addb
push
loop
dec
dec
jmp
mov
aad
mov
test
sbb
mov
sbbb
loopne
mov
aad
dec
jo
lcall
pop
or
pop
inc
jb
pop
stos
pop
jg
jnp
push
xchg
rcrb
pop
sbb
bound
ficoms
loop
ffreep
aam
mov
daa
adc
cwtl
nop
adc
jne
mov
dec
pop
aas
repz
aad
rol
dec
mov
cltd
cmpsb
fcmovbe
adc
push
fidivrl
daa
fiaddl
cmp
pushf
dec
sbb
push
outsl
xlat
xor
repz
push
pop
rclb
mov
repz
mov
ret
jmp
hlt
mov
xor
popf
sub
int3
lret
addr16
pop
pushf
mov
mov
fisubs
jge
iret
xchg
cmp
das
sahf
dec
inc
mov
mov
negl
xchg
dec
or
js
xorb
fdivl
fisubrl
sti
and
dec
xor
mov
cli
mov
xor
std
lret
mov
cwtl
sti
pusha
xor
fs
aam
es
cmp
pop
mov
inc
jl
xor
outsb
loop
and
loope
jecxz
mov
hlt
bound
out
xchg
mov
mov
sti
in
mov
lcall
gs
pop
cmpsl
mov
sbb
fs
int3
imul
adc
xchg
xor
imul
mov
test
fidivl
and
jnp
mov
ss
into
loop
mov
mov
mov
out
push
daa
adc
pushf
xchg
cwtl
pop
pop
lods
in
pop
sahf
loop
xor
aad
mov
jge
std
cmp
mov
xorb
test
faddp
mov
in
into
mov
int
ss
je
sysexit
xor
cs
inc
inc
gs
adc
nop
in
sbb
mov
leave
flds
cmpsb
imul
in
in
jp
jne
ficoms
jbe
cmp
sbb
mov
outsl
test
cmpl
nop
mov
out
adc
mov
test
lcall
iret
aas
orl
push
mov
adc
adc
mov
iret
jb
mov
aas
ret
inc
cld
push
ret
movsb
popa
xlat
inc
add
outsb
mov
rcll
outsl
cmp
in
bound
mov
xchg
aad
xchg
jns
push
in
fcoms
incl
scas
or
xchg
cmpsl
ret
jle
in
pushf
cmp
lcall
fdiv
aam
jge
or
or
mov
cmc
lret
mov
inc
sbb
scas
dec
pop
ficoml
scas
push
sub
cld
push
dec
xstore-rng
cmpsl
xchg
jmp
repnz
sub
xchg
lock
cmp
mov
daa
lcall
lcall
jl
push
jecxz
jnp
test
mov
ret
std
testb
insl
add
pop
adc
sub
push
in
push
xor
dec
push
sub
addr16
aam
dec
mov
ret
sbb
ret
sub
in
mov
inc
lcall
pop
stos
outsl
scas
or
or
imul
xor
popf
je
dec
or
jecxz
lret
test
xor
call
inc
inc
mov
lcall
cmp
push
xchg
xor
push
test
mov
pop
pop
mov
adc
pop
lds
mov
divb
or
push
xchg
jmp
or
into
or
rol
mov
jbe
outsl
cmp
pop
cmpl
jnp
push
int
push
sub
adc
sub
nop
push
sbbb
in
sahf
out
mov
cltd
mov
xorl
ficoms
aam
loop
shrb
insb
mov
test
rcrb
xor
out
shlb
sub
inc
ficoml
enter
jp
out
sbb
jb
test
mov
dec
sub
cmp
or
sbbl
dec
mov
sbb
sub
push
cmp
sbb
xor
popf
cmp
inc
cltd
cmp
stos
cmp
jb
ret
or
mov
cli
leave
std
adc
std
cltd
shlb
rcrb
sahf
xchg
jno
ljmp
mov
cmp
jmp
sub
lcall
sbb
xor
inc
mov
xchg
addr16
or
fwait
sbb
adc
mov
or
adc
xchg
stos
dec
rclb
xor
shl
push
add
out
cltd
lea
xchg
cmpsl
movsl
fisubl
ret
outsl
push
xlat
lds
dec
push
lock
sub
adc
filds
loop
add
pop
xor
cmc
pushf
jmp
mov
subl
call
loop
dec
push
out
je
add
xor
xor
adc
loop
push
jmp
cmp
mov
pop
ret
cwtl
pop
in
adc
sahf
movsl
dec
mov
sbb
or
jno
push
jge
adc
stos
sub
push
test
adc
lret
mov
lods
pushf
cwtl
sti
pushf
mov
int
lret
dec
xor
popf
bound
fadd
xchg
and
pop
loop
test
popa
lock
shlb
mov
pop
shll
push
stos
inc
mov
mov
or
cli
movl
orb
and
adc
and
aam
push
inc
lea
inc
pop
sub
push
icebp
test
pop
mov
rorb
scas
call
jnp
out
jo
aas
sub
gs
nop
xchg
sbb
jmp
adc
sbb
pop
rorb
mov
sbbb
adc
and
or
movsl
xlat
push
cmpsl
fisubs
fcmovb
xlat
popf
mov
mov
or
and
lcall
jo
imul
stos
push
stos
lds
call
push
sub
lock
dec
sub
roll
or
pop
xor
jge
in
jno
fcmovnbe
hlt
loope
aam
jmp
fnsave
or
and
xor
adc
inc
sar
sbb
jb
or
cmp
mov
rclb
push
sarl
sbb
test
push
mov
cs
sbb
je
movsl
nop
sbb
and
cmp
rol
fabs
or
call
sbb
xchg
sub
mov
fwait
imul
adc
mov
fstpl
and
dec
lret
xchg
add
pop
shr
pop
out
mov
xor
imul
mov
mov
bound
dec
jb
sub
jne
ret
repnz
aam
xchg
xor
and
movsb
mov
and
sub
xlat
add
jns
pop
fsubrs
rep
shlb
jl
leave
push
adc
cmc
rcr
inc
jo
nop
int3
pusha
jne
mov
sti
mov
fwait
mov
adc
mov
inc
and
pop
test
fiadds
lret
out
push
jne
xor
outsl
ss
iret
xchg
mov
dec
fcompl
std
push
sarl
repz
xchg
ficoml
cmpsl
in
mov
mov
and
fldl
pop
cmp
and
push
fisubrl
sub
movsl
inc
add
xchg
push
movsl
sbb
out
hlt
sub
pop
sbb
dec
std
loop
push
testb
xorl
cmp
rclb
cmp
loopne
mov
subb
xchg
inc
fdivr
out
sbb
adc
jns
mov
mov
movsb
xor
sbb
cmpsb
sbb
mov
adc
push
imul
xchg
es
pop
pop
dec
adc
mov
xor
dec
stos
adcb
dec
push
pop
in
xor
lds
pop
movsb
ror
jmp
daa
mov
movsb
inc
outsb
pop
pop
stos
fidivl
enter
loopne
mov
mov
xchg
sub
dec
push
ret
and
sub
and
mov
rcrb
xor
xchg
adc
jb
int3
xchg
push
mov
nop
mov
int3
outsb
add
sbb
in
jb
int
add
aaa
leave
repnz
insl
sub
adc
add
adc
mov
push
lcall
pop
ret
insb
jb
cs
mov
daa
push
aad
jno
sarl
add
rclb
pusha
mov
lods
xchg
xor
adc
jno
sbb
pop
mov
stos
and
cmpsl
mov
rcl
jno
or
popa
fldenv
or
pushf
pop
ficoml
adc
mov
mov
mov
scas
fxch
sub
and
adc
xchg
aam
and
in
cltd
lock
xchg
mov
xchg
pop
push
test
in
xor
sub
sbbb
xor
and
push
int3
loop
fsubr
mov
int3
cmpsb
mov
xchg
lcall
int
or
xor
sbb
mov
iret
movsb
ret
mov
cmp
mov
mov
arpl
adc
adc
dec
sub
sbb
sub
and
comiss
mov
leave
rcrb
fwait
cmpb
sbb
xor
mov
ret
cmp
xchg
add
push
push
movsb
daa
int
lcall
xor
loopne
inc
js
mov
jo
shr
xchg
test
mov
fcmovbe
das
fdivrs
sahf
incb
jge
int
xchg
imul
mov
inc
or
sbb
mov
cld
pop
mov
fimuls
rorl
sbb
dec
shl
adc
pushl
sbb
dec
adc
aad
rcrb
push
pop
clc
jmp
dec
push
cld
aas
outsl
pop
jmp
fidivrl
mov
xchg
fildl
shlb
sbb
call
xor
into
outsl
sbb
mov
fidivl
and
dec
jb
jl
sub
mov
and
adc
and
ret
mov
faddl
cmpsb
divl
cmp
xor
mov
mov
or
mov
aam
loop
add
jb
push
mov
dec
inc
push
xor
mov
sbb
std
adc
insb
int
xchg
movsl
dec
sbb
mov
aam
lahf
sub
mov
add
push
addr16
pop
jbe
mov
inc
add
mov
fsubrp
test
test
xchg
mov
daa
fisubs
ret
xor
mov
arpl
scas
xchg
ss
test
inc
cltd
mov
call
rcrb
mov
mov
jbe
mov
push
rcll
sub
push
movsb
loopne
adc
adcb
mov
lcall
lds
jg
mov
out
cmp
icebp
divl
fimull
fs
scas
jecxz
clc
sub
outsb
cmpsl
nop
inc
rcrb
xchg
or
loop
xchg
scas
loop
pop
sub
out
popa
add
ret
int3
xor
cwtl
int
jecxz
push
rolb
mov
mov
repz
insb
lock
gs
pushf
push
jmp
fcmovbe
jge
test
mov
pop
xchg
jl
jb
scas
cmp
loope
dec
lods
sub
ficompl
xor
sbb
stos
addb
sahf
jmp
ret
testb
adc
ss
mov
rolb
jmp
cs
sbb
sub
outsl
adc
fidivl
push
ret
hlt
dec
cmpsb
rorb
jl
jge
lahf
pushf
xchg
popa
sbb
pop
rcrl
insb
sti
ret
or
ret
aaa
ja
iret
cmp
test
andl
shlb
xchg
push
shlb
movsb
lcall
pop
fnstsw
stos
lret
jl
icebp
dec
mov
setne
dec
ss
push
pop
pop
ret
stos
xchg
imul
push
adc
stos
ret
or
mov
scas
push
xchg
test
jns
add
shlb
insl
pop
cwtl
enter
add
cs
mov
insb
and
or
lcall
pushl
loopne
fisubl
sbb
int3
add
repnz
lcall
xchg
mov
test
dec
jb
sbb
sub
cld
outsb
clc
lcall
popf
lcall
sub
adc
add
loop
or
cli
ja
pop
adc
sub
cmpsb
negl
cwtl
sarl
lds
test
cmpsb
jmp
dec
test
or
fcoml
sbb
pop
and
add
into
mov
sbb
shlb
lcall
fidivl
mov
cmp
push
fildl
mov
nop
mov
xchg
bound
loop
sbb
popl
jecxz
inc
cmp
push
sub
jmp
test
andb
cli
mov
dec
cmp
jnp
mov
mov
sbb
push
int
jp
cli
cli
sahf
fucom
sahf
pusha
push
ja
adc
jnp
out
xchg
push
hlt
pop
popa
mov
mov
and
add
inc
lcall
cmpb
and
and
add
sbb
lods
xchg
nop
or
jecxz
fcoml
add
xchg
roll
bound
das
lds
sub
fwait
jge
test
cs
xor
dec
loopne
sbbb
lcall
cmpsl
rorl
stc
xor
push
sbb
xchg
xchg
adc
and
pop
adc
movb
inc
loop
cmp
jge
test
push
mov
and
fidivl
cwtl
rcrb
roll
fdiv
jg
inc
push
xor
mov
pop
push
pop
xlat
pop
mov
and
push
sub
hlt
hlt
sub
fsubrl
pop
iret
xor
adc
mov
sahf
adc
xchg
mov
out
xchg
pushf
jb
dec
mov
fwait
popa
or
pop
es
jmp
mov
sar
pusha
fdiv
push
loop
push
xchg
adc
push
xor
dec
rcr
xchg
lcall
dec
push
mov
popf
mov
imul
shlb
in
frstor
scas
mov
loopne
jmp
int
fs
loop
andl
sub
push
loope
test
shll
mov
xor
mov
or
loop
ret
xchg
xchg
pusha
jnp
mov
push
pop
addr16
sahf
adc
add
add
out
sbb
lret
mov
call
scas
dec
into
adc
sbb
push
adc
cmpb
fisubrl
je
cmpsb
mov
push
and
mov
xor
clc
sub
jb
xchg
nop
cmp
loopne
rcrl
mov
push
or
pop
mov
cmpsl
mov
faddp
adc
mov
jge
mov
popl
movsb
pop
test
mov
je
rcrl
mov
repnz
insl
jge
lret
movsb
cld
xlat
mov
push
sbb
lds
jmp
addl
sub
mov
xor
mov
sbbb
cs
in
out
je
mov
int3
cmp
ss
cmp
hlt
jne
lods
push
dec
mov
ficompl
dec
adc
ss
and
sbb
dec
sub
push
sbbb
repnz
push
cwtl
dec
sbb
add
mov
xchg
cwtl
push
fs
xchg
rcl
push
lcall
mov
test
in
inc
push
fstpl
add
sbbl
xchg
and
inc
dec
scas
xor
add
and
cmc
aaa
out
add
test
cmpsb
sbb
js
or
mov
repnz
mov
mov
mov
jb
loopne
popa
add
sub
fisubrl
cld
cld
dec
loop
push
nop
or
adc
adc
outsl
dec
lahf
or
add
sub
jecxz
ficoml
jno
adc
mov
inc
stos
add
dec
add
pop
sub
dec
inc
xchg
pop
xchg
loop
dec
sahf
inc
cmp
sbb
adc
test
or
loope
nop
dec
jo
jo
cli
lcall
sahf
daa
push
bound
je
jp
cmp
pop
fidivl
repnz
cmpb
cmpsl
mov
xchg
jge
inc
loop
imul
popa
mov
mov
xchg
clc
dec
cwtl
fimull
sahf
js
sbb
faddp
lcall
fs
jne
incb
cmpsl
push
mov
inc
cmc
lods
lret
popa
subb
xor
mov
sub
scas
iret
mov
push
inc
popf
xchg
inc
fisubl
jno
sbb
out
rcrb
dec
lahf
xchg
xor
mov
sbb
jbe
pop
inc
mov
test
and
jmp
and
mov
loopne
mov
clc
or
dec
cmpb
mov
mov
orl
negb
xor
icebp
xchg
and
leave
ds
fisubl
sbb
jmp
or
lret
bound
loop
bound
fdivr
mov
repz
cmp
shll
insb
out
and
rcrb
hlt
test
xchg
add
add
and
mov
adc
and
rclb
sub
sub
mov
mov
jno
xchg
xchg
lock
mov
imul
dec
stos
add
or
cmpsb
xchg
aam
dec
mov
adc
mov
sub
mov
jnp
xor
mov
sub
or
jge
sbb
lcall
imul
lret
das
frstor
out
imul
mov
push
mov
lds
add
jp
fists
xor
dec
push
fdivrs
sub
rcl
mov
aaa
ficoml
or
cwtl
or
loop
loope
fadd
inc
shl
out
pop
fidivrl
sub
shll
outsl
xor
pop
dec
xlat
fs
mov
jecxz
sbbb
and
and
fsub
imul
push
inc
call
xor
mov
xchg
das
xchg
push
push
cwtl
inc
gs
lods
xchg
repnz
pushf
lret
xchg
xchg
pop
sub
mov
in
dec
cs
mov
bound
push
outsl
pop
imul
nop
shlb
jnp
or
std
mov
jg
pusha
sahf
in
push
mov
jge
or
clc
xor
adc
sahf
sbb
cwtl
mov
xchg
push
divb
pop
jno
mov
pop
mov
out
push
imul
fcoml
push
mov
mov
mov
fs
cmp
and
lcall
int3
pop
roll
std
sub
jle
jb
cli
and
xor
test
loop
das
xchg
outsb
in
rcr
jecxz
mov
outsl
inc
rorl
inc
ss
push
popf
pop
fucom
xchg
lret
arpl
or
retw
in
push
shl
imul
xor
jne
jg
iret
addr16
out
sbb
lret
adc
jb
sahf
lcall
in
jne
fxtract
sub
push
dec
outsl
bound
addr16
je
test
mov
aaa
and
sub
xor
adc
mov
or
ret
stos
xchg
repnz
aad
push
shlb
lret
mov
cmp
mov
mov
shl
frstor
shll
xor
push
mov
ret
out
in
or
push
sub
adc
rolb
les
cld
les
jmp
sub
sub
shrl
mov
mov
ljmp
sub
sub
mov
mov
jmp
sbb
sbb
leave
nop
xchg
xchg
xlat
pop
lea
push
bound
push
lods
and
aam
andb
icebp
or
in
mov
add
ss
mov
mov
inc
dec
cmpsb
jmp
xlat
cmpsb
popa
scas
xchg
inc
mov
lcall
xchg
inc
int
outsl
ret
mov
out
mov
aad
loop
inc
mov
lcall
cmp
sub
cltd
mov
pop
fildl
inc
push
sahf
mov
sbb
std
xchg
inc
and
outsl
cmpsl
cli
push
xor
rclb
adc
dec
xchg
adc
adc
test
daa
jne
sbb
inc
cmpsb
dec
shlb
sub
mov
add
dec
push
test
pop
stos
int
sahf
inc
mov
lock
xchg
ds
loopne
dec
mov
sbb
pop
cmp
stos
xor
insb
sbb
sub
test
mov
mov
ficompl
cmp
popf
lds
stos
ficoml
dec
mov
adc
outsl
flds
fwait
sub
or
dec
push
lock
rcrl
movsl
lea
je
aam
mov
imul
push
cmpl
xor
cmp
cmp
and
in
and
pusha
scas
push
xor
sbb
mov
sbb
test
or
mov
sub
lods
repnz
or
jge
pushf
sub
pop
cmpsb
or
mov
and
pusha
aad
call
scas
cmp
scas
into
mov
cmpsb
data16
lds
sub
sahf
jo
das
sbb
mov
ret
jmp
movsl
faddl
add
fldl
shl
mov
mov
je
add
mov
hlt
xchg
fstpt
loope
test
scas
push
movsl
sbb
jg
cld
cmp
mov
mov
lock
mov
loop
cmpsl
xchg
mov
xchg
inc
and
in
jns
jp
testb
movsb
sub
mov
orb
cmpsl
mov
mov
xchg
es
or
stos
orb
or
adcb
call
xor
call
cltd
and
mov
lods
call
adcb
xor
lods
aaa
addl
xchg
aaa
sbbb
lods
mov
popf
lret
test
push
mov
subb
push
test
orb
cmp
aas
cltd
xchg
mov
xchg
xor
movsl
mov
stos
das
movsb
nop
jge
movl
test
stos
xchg
add
fwait
mov
shll
divb
cmpsl
mov
mov
xor
xchg
aaa
xor
call
lods
mov
aas
mov
sub
popl
divl
lcall
or
std
test
test
cmpsl
fnstcw
pop
xchg
ret
ret
adc
adc
lcall
cs
xchg
push
jns
adc
push
jmp
test
lods
mov
mov
pop
out
in
cmp
fsts
push
stc
movsb
mov
or
in
in
jmp
jmp
xor
cmpsl
adcb
notl
jge
sub
xchg
sbb
dec
imul
out
stos
mov
outsl
lcall
in
movsb
mov
nop
outsb
sbb
mov
shlb
inc
mov
mov
sbb
adc
push
mov
nop
or
aam
lods
dec
pop
outsb
loopne
push
push
mov
dec
add
imul
mov
cmpsl
mov
xor
in
add
andb
test
push
mov
mov
aas
mov
addr16
sub
jb
and
sbb
mov
sti
jno
jnp
adcl
addl
mov
shll
shrl
dec
jmp
call
xchg
cmp
andb
mov
lcall
mov
push
sbb
sarb
jmp
movsb
ficoml
push
daa
loopne
xchg
jl
xor
mov
nop
and
popf
fidivl
orl
lret
testb
dec
aam
mov
adcb
mov
and
inc
pusha
cmpsw
pushf
jp
popf
sub
xchg
movsb
int
mov
inc
movsl
jae
mov
stos
sbbb
icebp
inc
and
fwait
sbb
pop
shll
sbb
les
cmp
int3
sbb
adc
cmpsb
inc
shr
cmp
mov
mov
adc
sub
pop
inc
fdivl
fdivr
push
lret
in
jp
sbb
push
call
jno
jecxz
mov
ret
inc
jne
test
sub
fisubrl
sti
mov
sahf
pop
add
inc
mov
mov
dec
xor
xchg
or
pop
je
adc
jne
loop
stc
out
jbe
aas
pushf
rcll
and
cmc
aam
outsl
mov
xchg
sahf
ficoml
pop
ss
mov
sub
jns
cs
int
xchg
faddl
sub
dec
int
xchg
lcall
xchg
xchg
inc
jne
xor
jp
ja
mov
jp
popa
int3
sahf
sbb
mov
xor
aaa
inc
sbbb
lahf
mov
out
test
mov
in
addl
xchg
mov
test
or
jle
out
mov
fwait
adc
mov
xchg
lcall
sbb
push
lret
sbb
xor
add
mov
sbb
push
mov
ret
mov
popf
lret
add
mov
sbb
inc
or
shl
sub
sub
sub
lods
dec
mov
mov
adc
in
mov
sarb
jmp
mov
outsl
loop
ficomps
out
mov
mov
pop
pop
inc
sbb
sbb
dec
fistps
xchg
cmp
push
mov
fcomps
adc
adc
imul
stos
sbb
pop
xchg
and
and
outsl
and
or
ret
mov
cs
sbb
pop
js
sub
loopne
aaa
ffreep
mov
lcall
test
repz
subb
dec
mov
and
push
add
inc
mov
out
pushf
mov
jmp
lcall
push
cmp
popf
mov
cltd
sbb
jmp
in
xchg
divb
nop
add
add
popf
sahf
cmc
repnz
imulb
cs
sbbb
imul
or
jne
insb
jl
rcrb
adc
or
and
adc
aaa
hlt
jmp
scas
xchg
in
out
adc
dec
mov
xchg
stos
stos
xchg
mov
or
test
add
lret
adc
mov
movsl
cmp
cmpsl
lods
xchg
cmpsb
mov
mov
scas
fimull
inc
mov
rolb
fisttps
and
xor
pop
sbb
rcrb
pop
lods
loopne
insb
add
fs
mov
xor
insl
das
adc
ret
xor
cmp
int
push
out
xlat
fmull
mov
ret
imul
fimull
mov
or
shlb
cmp
pop
xchg
mov
aad
mov
add
adc
mov
mov
mov
or
mov
lods
popf
imul
shlb
fcoms
mov
dec
sbbl
sbb
xchg
push
mov
jnp
sub
xchg
in
dec
lea
dec
call
fadds
mov
sbb
lret
pop
mov
flds
clc
push
inc
sbb
inc
into
mov
xorb
sbb
es
out
rcrb
dec
xchg
iret
inc
stos
ret
dec
lahf
mov
test
cmp
out
mov
jecxz
adc
mov
dec
leave
mov
clc
xor
popf
shll
jns
lea
lret
mov
movsb
scas
sub
hlt
adc
xor
or
in
fisubl
lods
mov
lret
jbe
popf
inc
pop
xor
or
adc
cmpsb
xchg
repz
mov
dec
insb
into
mov
jno
cmpb
adc
xor
add
lds
test
in
enter
mov
adc
sub
sahf
imul
add
loop
lea
fsubl
mov
lods
les
shlb
loopne
lds
sarb
sarl
bswap
mov
lret
andb
cmpsl
lcall
push
cmpsw
push
lret
fldcw
loopne
test
xor
popa
xchg
pop
ljmp
push
aad
and
pop
outsb
xchg
sbb
xchg
sbb
mov
movsb
push
inc
mov
add
jmp
js
push
mov
mov
ret
scas
add
mov
sbb
add
or
out
inc
inc
decl
jmp
cmp
mov
cmpsl
xchg
pop
dec
fsubl
movsl
or
jmp
test
push
lcall
mov
mov
dec
xchg
pop
sbbb
mov
xchg
jne
in
xor
pop
sarl
inc
rcrb
jbe
dec
scas
or
lods
in
ret
das
inc
xor
mov
pop
adc
lea
subl
shlb
ret
fnstenv
shr
loopne
push
jl
loopne
test
loop
mov
xor
jge
pop
sub
jmp
xchg
mov
adc
adc
shl
negl
lods
mov
sbb
mov
jmp
repz
sbb
imul
cmpsl
pop
mov
xchg
mov
dec
and
outsl
loope
out
pushf
out
inc
jbe
pop
mov
xchg
dec
pop
nop
cmpsb
sbb
xchg
and
push
test
vorps
movl
xchg
adc
popa
je
pop
or
movsb
lods
ret
movsb
aas
inc
fnstsw
arpl
jmp
and
lcall
sbb
pop
cld
dec
sub
scas
cld
cmp
out
inc
push
xor
lods
loope
sti
out
adc
mov
jecxz
lock
nop
jne
pop
repnz
xchg
outsb
sarb
lods
cmpsl
dec
rcll
or
mov
iret
movsb
sub
pop
outsb
jmp
cltd
or
shl
jecxz
das
aad
cmp
adc
inc
imul
push
mov
enter
cwtl
jns
jno
lcall
sbb
inc
sub
jo
popa
int
cs
leave
xchg
sbb
sbb
lods
cmc
js
sub
push
adc
sbbb
imul
stos
cmc
mov
test
pop
in
test
push
cmp
xchg
add
and
pop
aad
loopne
mov
divl
pop
and
mov
xor
nop
dec
repz
repz
cmpsl
inc
xchg
lahf
mov
xor
cmp
and
iret
lods
xlat
insl
loop
xchg
nop
rcrb
addr16
sahf
test
pop
psubusb
imul
movsl
xchg
lcall
lods
cmpsl
mov
xor
loop
dec
test
aas
jle
repnz
ret
popf
imul
mov
push
jno
sbb
loopne
mov
cmp
sbb
repnz
push
inc
add
roll
pop
add
and
leave
and
mov
mov
aad
cmp
dec
incl
repz
dec
jno
adc
bound
cmc
sub
test
ret
jmp
cmpsb
mov
sbb
cltd
fimuls
movsb
add
ficomps
shlb
cmp
sub
scas
rol
rolb
jecxz
xor
in
subb
repnz
test
mov
pop
push
mov
mov
add
push
jmp
pop
fimull
and
mov
mov
fistl
rcrl
mov
adcb
sbb
adc
or
push
in
out
mov
lods
jns
adc
je
push
filds
cmpsl
inc
add
fs
pop
and
cld
pushf
aaa
xor
enter
roll
pusha
repz
fdivrs
aaa
xchg
jo
jno
xchg
xchg
cmpb
test
jmp
addb
scas
adc
and
idiv
mov
mov
sbb
imul
adc
xchg
or
outsb
sub
negb
add
cmpsl
push
push
dec
xchg
push
iret
repnz
das
mov
not
dec
arpl
inc
dec
out
push
outsb
xchg
add
scas
lahf
sbb
outsl
fwait
and
mov
pop
push
test
gs
xchg
daa
adcb
cmpsl
test
mov
shrl
fwait
out
sub
stc
sbb
xor
adc
in
adc
sbb
pusha
bound
bound
or
out
push
and
or
lcall
in
push
xchg
fcmovbe
push
stc
cwtl
sub
push
mov
jo
lahf
cmp
cs
add
and
or
stos
push
inc
pushf
stos
inc
mov
lcall
sbb
cmpsb
xor
add
sahf
or
pop
loopne
loop
push
repnz
lahf
cwtl
inc
push
add
lcall
add
pop
pop
mov
mov
out
aad
sbb
test
mov
jno
dec
in
shrb
xchg
jmp
lcall
cmp
mov
popf
cmpsl
out
mov
shll
lods
adc
adc
out
and
dec
mov
pop
lods
add
cmp
xor
mov
es
js
ljmp
cld
sbb
adc
iret
or
pop
xchg
xlat
cmpsl
lods
xchg
mov
es
into
fldcw
add
fadd
sbb
loop
adc
popa
nop
sub
fisubrl
pop
mov
icebp
pop
call
adc
sbb
cmpsl
cmpsl
iret
test
int3
sbb
popf
daa
push
mov
pop
pusha
mov
dec
sbb
fidivl
popf
fwait
mov
rcr
cwtl
out
inc
cmp
cmpsb
lcall
loope
js
cmp
imul
cmpsl
movsb
lcall
mov
dec
jecxz
fiadds
ret
movsl
test
mov
mov
les
xchg
lods
mov
int3
jecxz
xchg
add
cmpsl
mov
lcall
inc
fcmovbe
inc
adc
mov
xchg
xchg
ds
jmp
mov
outsl
dec
push
repz
or
or
mov
ret
add
lea
mov
roll
sub
stc
sbb
pop
inc
lret
add
lcall
xor
mov
shrb
lea
pop
jg
or
dec
xchg
rcr
inc
test
mov
addr16
popa
push
ret
jno
lea
xor
and
push
push
hlt
bnd
leave
mov
and
inc
and
dec
xor
cmp
scas
loopne
ficoml
mov
mov
aaa
int
mov
outsb
aam
rclb
lret
subb
jmp
xor
lcall
jp
in
imul
or
popf
out
inc
adc
stc
jno
push
xchg
mov
stos
dec
mov
fisttpll
mov
push
dec
je
daa
lcall
in
nop
loop
push
sbb
lret
shll
mov
sub
int
dec
imul
nop
jno
movsb
mov
jmp
push
out
test
lret
in
pushf
mov
jp
mov
mov
fiaddl
or
fiadds
notl
loop
jge
pop
and
pop
int3
inc
lock
imul
out
ret
sub
jnp
pop
jae
xchg
dec
push
lock
inc
sahf
mov
jmp
leave
stos
and
ret
push
in
sub
pop
sbb
enter
fs
mov
jg
sbb
add
mov
xchg
repz
sbb
pop
divb
dec
in
mov
lcall
pop
push
pusha
jne
inc
outsl
scas
jmp
das
fnstsw
pop
mov
mov
loopne
push
jmp
xchg
jnp
aam
push
out
jp
sbb
push
push
cmp
xchg
mov
rorb
push
xor
dec
in
xchg
pop
cmp
sub
xchg
adc
pushf
mov
lret
repnz
cmp
adc
lcall
out
addb
test
out
mov
fisubs
out
scas
dec
push
add
lcall
or
jo
inc
ds
pushf
ljmp
fidivrs
iret
pushf
movsb
xchg
sub
bnd
jae
jp
stc
loopne
cmpsl
in
leave
incl
push
cld
jle
jge
hlt
mov
cmp
into
std
aas
jb
adc
xchg
sub
xor
push
fsubp
xchg
push
and
and
test
cmpsb
test
nop
jae
iret
xor
clc
xor
xchg
stos
imul
fiadds
loop
xchg
sub
pop
loopne
mov
ljmp
jmp
orb
cmp
add
jbe
mov
jnp
fcoms
push
inc
mov
aas
lods
jbe
dec
nop
mov
lcall
ja
adc
lret
xchg
inc
push
std
stos
aad
rorb
sub
in
inc
pop
jl
sbb
jb
inc
shlb
mov
scas
lds
mov
sbb
sub
out
pop
adc
xchg
lret
cmp
out
rcl
iret
call
ficompl
les
lcall
divb
movsb
sbb
in
xor
in
push
out
dec
sbb
cwtl
out
insl
movsb
xorb
les
push
lods
cmp
xchg
mov
sub
dec
call
xor
mov
cmc
mov
stos
stc
fidivrs
les
aam
fisubrl
sti
xor
xchg
addr16
int3
cmp
xchg
pop
xor
outsb
add
cs
mov
xchg
cmpsb
mov
scas
imul
sub
loop
dec
stos
mov
pop
xor
add
pop
jne
aam
inc
xchg
push
cwtl
and
jmp
sbb
mov
jl
mov
xor
cwtl
aas
filds
ljmp
push
dec
fsubr
inc
and
jno
or
std
adc
aas
dec
xchg
lret
sbb
mov
mov
mov
scas
pop
adc
and
mov
lcall
lds
loopne
mov
or
test
shrl
jmp
inc
mov
push
or
push
enter
loope
lcall
xchg
loop
lcall
ret
std
cmpsb
fwait
out
in
adc
rclb
pusha
mov
add
adc
adc
adc
jmp
adc
xchg
dec
mov
push
mov
and
imul
data16
adc
push
jno
jne
outsl
push
fwait
pusha
cmp
arpl
mov
add
dec
mov
imul
lret
sarb
inc
fildl
adc
sbb
ljmp
lods
xchg
adc
ss
mov
add
xchg
sti
scas
pushf
movsl
in
xor
rcll
repnz
mov
xchg
fmuls
arpl
dec
dec
outsl
das
ds
data16
dec
mov
and
aaa
daa
mov
fldl
xlat
cltd
cmp
and
adc
stos
fsubs
test
aaa
jp
sub
fstl
mov
xchg
rorl
sbb
inc
pop
stos
movsb
popf
add
shll
popf
mov
adc
bound
pop
pop
pop
ja
and
out
xor
pop
sbb
inc
and
xchg
bound
inc
repnz
iret
shl
and
pop
mov
fsubrs
push
mov
cmp
push
cwtl
adc
ret
xor
jbe
cwtl
sti
push
or
vrcpss
fwait
push
mov
shll
adc
xchg
les
sarb
out
sahf
jmp
cmpb
jle
xchg
mov
loopne
mov
xor
loop
sbb
in
xchg
or
and
mov
push
sahf
loop
fmulp
scas
ss
js
dec
sbb
mov
push
cld
test
push
test
and
xorb
jmp
xchg
ret
clc
fcoms
lret
into
test
cli
test
push
pop
mov
test
scas
xchg
xchg
testb
sbb
and
daa
int
fisubrl
pop
lcall
repz
mov
lcall
inc
or
sbb
mov
mov
inc
daa
into
bound
fsubrp
bound
xchg
mov
movsb
test
cmpsl
sarl
xchg
mov
cmpsl
lcall
loopne
xlat
mov
shl
call
int3
pop
subb
inc
cmp
dec
and
aam
rcrl
movsb
scas
mov
fwait
lcall
xor
aam
loope
xchg
mov
and
imul
fisubrl
push
xchg
iret
mov
cmp
xor
sbb
adc
out
lahf
jne
les
addr16
iret
ret
rolb
test
lcall
mov
stos
mov
jb
in
push
adc
xchg
push
mov
and
cmp
cs
mov
roll
ficompl
mov
cmc
pop
lock
in
xor
cmp
mov
xor
jp
jne
and
mov
fiadds
scas
cmp
lret
xchg
pop
jno
sub
rcrl
pop
or
jb
mov
mov
or
por
scas
xchg
mov
mov
mov
shlb
or
insb
dec
add
add
rclb
dec
pop
xor
incl
stos
stos
pushf
pop
ret
xchg
pop
lcall
or
mov
sub
ret
cli
cmp
aam
mov
fcmovbe
fwait
and
imul
dec
in
mov
arpl
and
and
push
sahf
adc
jo
ficoml
adc
jno
imul
sub
fisubrl
pushf
pop
aaa
test
test
cmp
loopne
adc
lods
push
mov
aas
loop
sub
stos
sbb
xor
mov
pushf
imul
movsl
fwait
das
mov
or
out
in
xchg
xchg
test
and
dec
fwait
loopne
mov
roll
push
jecxz
cmp
in
inc
popa
mov
stc
and
lcall
cmp
dec
ret
xor
mov
inc
push
jbe
pop
pop
xchg
dec
fidivs
jmp
inc
test
pop
mov
or
out
add
pop
int
mov
adc
inc
xor
stos
pop
jns
pop
dec
lock
fnsave
jmp
repz
jns
xchg
fwait
idiv
add
pop
xchg
dec
sbb
add
out
jg
mov
fwait
cmp
je
jno
xchg
xor
movq
push
cmpsb
imul
sahf
aad
pop
adc
mov
lret
xchg
out
fldcw
shll
cmp
add
mov
inc
stos
sub
adc
orb
in
aad
mov
pop
xchg
sahf
inc
add
addb
jae
cmp
test
mov
int
icebp
sub
and
and
mov
int3
inc
insb
mov
mov
sbb
ja
imul
out
mov
push
xchg
or
scas
insb
add
js
xorb
dec
mov
mov
sbb
pop
sub
loope
cmpb
inc
add
mov
add
and
mov
inc
inc
mov
jle
push
cmpb
insl
fwait
adc
jno
or
mov
adc
and
or
mov
hlt
test
imul
enter
push
out
mov
jne
dec
xchg
xor
pop
sub
dec
mov
roll
mov
fs
xchg
adc
mov
gs
repz
nop
mov
adc
je
loop
mov
adcl
jno
lret
lcall
mov
repnz
and
mov
ljmp
mov
mov
mov
pusha
popf
aam
bound
loop
sub
or
or
aad
addr16
xchg
cmpb
mov
xor
out
and
fmul
mov
xor
fistpll
js
push
test
mov
stos
aad
xchg
push
std
popa
push
stos
lods
in
rcrl
out
repz
in
in
lahf
xchg
inc
mov
add
cmpb
cmpl
mov
mov
inc
inc
cli
inc
or
jae
jge
clc
cmp
movsb
adc
or
fyl2x
mov
loop
stos
sbb
ss
xor
push
push
xchg
mov
push
cmpsb
push
fisttps
adc
int3
sarb
orl
adc
insl
out
and
nop
nop
mov
inc
leave
sbb
leave
call
lcall
cmp
ficoml
das
loop
pop
mov
inc
movsb
mov
lock
sub
cmpsb
imul
hlt
mov
sbb
xlat
test
dec
mov
adc
mov
sbbb
xchg
pop
testb
or
xor
sbb
aaa
and
stos
mov
mov
loope
outsl
lret
sbb
lock
xchg
inc
sbb
dec
fcmovnu
mov
cmp
pop
ret
test
sub
out
lock
sbb
jge
ljmp
lahf
and
fs
mov
out
notl
xor
cltd
pusha
or
pop
sbb
push
out
mov
aaa
jge
movsb
ret
test
repnz
mov
push
out
cld
out
mov
mov
repnz
xor
pop
lds
mov
lcall
push
jg,pt
xchg
ret
mov
xor
and
stos
sub
mov
bswap
add
or
cmp
lods
ss
fldt
aam
jno
adc
cmpsl
or
xchg
sahf
mov
mov
gs
sbb
cmpsb
fimull
add
xchg
xchg
or
xchg
or
inc
mov
loop
push
sbb
pop
ret
adc
int
test
aam
out
clc
mov
sub
and
movsb
mov
sahf
mov
fiaddl
cmp
sbb
test
addb
loopne
push
in
inc
mov
xchg
aam
push
mov
lods
int3
and
xor
andb
inc
lea
jp
pop
xor
push
ficoml
fwait
pushf
sbb
lret
push
test
ror
cmp
mov
and
and
mov
cli
imul
bound
popf
loopne
xor
pop
xchg
test
xchg
jns
mov
mov
ljmp
movsb
outsb
mov
jmp
or
add
sarb
lret
test
and
pop
jb
test
shr
mov
adc
jle
stos
stos
faddp
add
fs
stc
cwtl
jecxz
loopne
jmp
pop
sti
fbstp
stos
mov
add
dec
negl
fisubrl
test
cmp
lret
or
lret
jmp
stos
movsb
xchg
lea
dec
sarb
out
lods
cmp
cmc
sti
test
cmp
imulb
stos
je
adc
loopne
les
mov
push
xchg
jae
in
sti
mov
jle
and
pop
cmpsl
jmp
fs
fidivl
cmpsl
mov
lcall
cmc
stos
pop
call
mov
shrb
sub
nop
xchg
jne
in
cmc
fcoml
adc
imul
mov
cs
lcall
push
les
jl
and
test
shr
lret
es
bound
arpl
pop
sbb
mov
pop
out
outsb
negb
insl
push
leave
or
fs
pusha
imul
inc
xchg
mov
sbbb
aam
add
test
out
push
jl
xor
xchg
pop
and
jl
aaa
fs
repnz
pop
push
mov
aad
jbe
xor
addr16
or
lcall
pop
xchg
mov
cmpl
jne
inc
ret
gs
test
ret
mov
addr16
mov
lea
clc
xchg
fisubs
mov
bound
jecxz
adc
xchg
xor
inc
add
xchg
adc
and
mov
fs
mov
fadd
outsb
adc
mov
or
test
fbld
xor
rolb
mov
stos
lods
fnstcw
jmp
mov
adc
sub
dec
jmp
dec
xchg
lcall
push
fists
lods
fs
add
jle
les
mov
mov
fwait
jecxz
bound
mov
dec
repz
psadbw
fidivrl
cmpsb
lcall
negb
lea
fs
adc
mov
push
sbb
shll
add
gs
test
popa
dec
imul
test
pop
push
mov
sub
arpl
gs
add
mov
test
cltd
adc
aam
mov
test
testl
pop
test
inc
push
or
insl
fwait
ret
subb
dec
leave
lahf
cmp
loop
inc
stos
lea
mov
mov
xchg
cmp
inc
push
cli
hlt
jl
sub
loop
aaa
cld
or
into
mov
mov
movsl
push
addr16
dec
hlt
pop
movsb
lcall
outsb
lods
int
loope
mov
and
push
adc
int
fidivrl
inc
adc
pop
cmpsl
adc
mov
popf
fisubrl
mov
sbb
sbb
mov
xchg
icebp
and
icebp
out
and
cmp
hlt
inc
jmp
jl
sub
test
mov
insl
in
movsb
jns
add
xchg
loop
jmp
xor
mov
and
fidivl
mov
dec
and
jno
jmp
xor
sti
pop
mov
sbb
lret
jno
mov
sub
stos
adc
test
fidivl
call
les
pop
jbe
lea
xor
mov
in
insb
adc
adc
mov
roll
jbe
mov
dec
arpl
fcomps
pop
cli
xchg
int
xchg
xor
jns
orb
lahf
mov
idivb
lret
jns
pop
test
test
pop
cmp
cmpb
pop
pop
hlt
fincstp
and
push
orb
cmpsb
add
in
sub
inc
cmp
inc
scas
xchg
jmp
aas
rolb
xchg
cmp
xchg
pushf
lret
les
push
jmp
xor
xchg
and
mov
insb
shlb
pusha
pusha
ss
das
test
rolb
inc
lret
jb
push
in
mov
icebp
repnz
test
shll
mov
repz
xchg
lret
or
mov
jne
rclb
lea
in
sbbb
mov
pushf
repnz
mov
lret
xchg
sub
decl
in
xlat
mov
subb
test
lcall
aam
mov
loop
int
icebp
cmc
mov
and
dec
shrl
ljmp
pop
dec
movsl
ret
cmp
fcmovnu
push
lea
loopne
ja
clc
adc
ficomps
outsl
stos
cmp
mov
test
add
outsl
add
xchg
imul
lds
pusha
popa
add
pop
repnz
cmp
loopne
push
pusha
add
cmp
in
mov
lea
test
loop
inc
into
lret
inc
sti
pop
xchg
and
and
pop
mov
mov
nop
xlat
mov
lods
fidivs
inc
nop
inc
xchg
adc
test
xor
cmp
scas
mov
cli
je
mov
lock
push
push
mov
adc
hlt
mov
dec
dec
hlt
lods
test
int3
mov
or
arpl
mov
xor
jmp
push
xchg
and
outsb
cmp
addb
lcall
jge
loope
sbb
mov
inc
push
sub
and
xchg
xor
jp
aaa
xchg
je
ds
jbe
cmc
sub
cld
push
xchg
ret
push
ljmp
loop
mov
mov
clc
lcall
adc
cmp
or
fcompl
out
lds
xchg
mov
stos
scas
jmp
adc
sub
mov
loop
lcall
les
jns
js
into
adc
mov
mov
aaa
mov
inc
mov
add
inc
xor
lahf
test
xor
ss
xor
jl
sbb
mov
push
movsb
mov
repz
pop
out
popa
add
lock
int
push
lea
mov
pop
add
mov
sub
or
repz
jecxz
gs
cmp
inc
xor
push
jp
ret
scas
mov
mov
mov
jo
arpl
mov
cmp
pop
mov
cs
mov
xor
jmp
inc
mov
fisubrs
mov
sbb
es
nop
je
sti
fisubrs
dec
mov
sub
inc
fcoml
insb
xchg
int3
dec
jp
add
mov
bound
xor
xchg
mov
rcr
add
faddl
or
cmpsb
and
xchg
subb
mov
aaa
adc
adc
add
cmpsl
adc
jne
pop
mov
mov
sbb
test
push
adcl
dec
sbb
xor
cmp
push
into
sbb
add
shll
mov
mov
les
dec
adc
mov
add
cmp
fnstcw
push
daa
push
sbb
test
inc
jmp
adc
nop
xchg
je
loop
je
insl
xchg
or
or
aas
stos
mov
and
fdivrl
dec
movsb
loope
movsl
push
sub
out
lcall
scas
push
jne
cwtl
lcall
nop
inc
clc
in
bound
fidivl
mov
adc
xchg
dec
add
das
lcall
ja
sub
jmp
roll
sub
insl
ficoml
scas
push
iret
leave
mov
lcall
xchg
getsec
inc
jne
jo
and
jecxz
sbb
mov
push
pop
pusha
ljmp
test
and
movsb
adc
adc
stos
lods
dec
sbb
lods
pop
je
cmp
mov
sbb
add
push
ss
and
lcall
adc
sub
jno
mov
sub
cltd
or
loopne
rclb
lret
arpl
jne
mull
fnstcw
xor
and
sub
ja
testb
push
ljmp
fsubs
mov
inc
push
mov
fs
ret
add
mov
sahf
cmc
std
xor
pusha
std
daa
bnd
mov
je
mov
test
jnp
mov
xchg
inc
stos
sti
cmpsl
and
stos
xchg
lds
ja
sub
jbe
cmp
push
cltd
dec
fcoml
mov
push
or
shrb
lock
mov
andl
lcall
push
repnz
fwait
jae
cmc
scas
pusha
loopne
loop
pushf
aaa
shr
jp
cwtl
je
pop
adc
int
mov
mov
cmp
pop
bound
xchg
inc
scas
or
gs
pop
cmp
or
mov
and
fnstsw
test
jnp
rclb
test
dec
fwait
mov
pop
imul
in
lods
in
mov
jmp
sbb
and
xchg
mov
popa
hlt
inc
inc
jg
and
mov
popf
inc
fdivrp
inc
imul
mov
and
andb
add
adc
xchg
or
out
push
cmpsl
or
movsb
fbld
cmc
ljmp
cs
or
fstpl
int3
lcall
jg
je
ret
fisubrl
mov
mov
push
add
jno
ja
and
loopne
data16
popf
mov
shrb
lods
push
insb
or
adc
andb
mov
jno
mov
mov
mov
out
movsl
adc
test
xor
test
fs
mov
cli
shlb
mov
add
stos
mov
lods
sbbl
push
xor
pop
cmp
faddp
std
mov
or
das
xchg
jo
insl
and
mov
movsb
push
lret
inc
cmp
lods
js
fidivrs
out
mov
jge
je
mov
mov
sub
lds
std
push
add
aas
inc
cmp
adc
sti
dec
ret
sub
lods
out
loope
stc
cmpb
push
repnz
stos
test
mov
sbb
adc
adc
mov
shr
add
adc
xchg
ret
push
dec
outsl
jle
fs
xchg
lods
imul
add
into
sbb
bound
mov
es
or
mov
xchg
sub
scas
ljmp
xor
pop
fisttpll
sbb
mov
cmp
mov
fsubr
mov
movsb
fiaddl
aad
sub
popa
inc
les
imul
lock
iret
in
sbb
and
mov
out
test
sbb
ja
imul
push
std
int
je
sbb
test
ret
out
shl
enter
jne
dec
pop
clc
xor
gs
addr16
mov
and
imul
jp
std
dec
mov
adc
ja
pop
sahf
fistl
xor
cmp
add
aam
sbb
insb
lea
jge
mov
rolb
dec
out
jns
lcall
ja
adc
into
decb
je
push
sub
fcmovnu
int3
mov
cmpsl
and
fimull
jp
ljmp
lods
in
lock
in
pop
roll
xor
xchg
mov
lock
mov
out
sbb
add
popf
pop
jmp
add
mov
jg
stc
sahf
decb
mov
fsubs
mov
inc
out
pop
sub
mov
cmpsl
xchg
jmp
add
push
es
loopne
push
rep
inc
push
mov
xchg
sub
inc
test
mov
mov
arpl
cld
out
pusha
test
inc
or
xor
push
mov
mov
sub
mov
or
ss
jae
mov
and
ficompl
dec
in
aam
es
movsb
repnz
mov
add
xchg
sub
or
mov
mov
jl
test
xor
mov
cmpsl
nop
hlt
jecxz
and
pushf
sbbl
ret
inc
and
aad
push
loopne
jle
fs
pop
jmp
jg
add
lds
stos
inc
mov
sbb
pop
enter
mov
mov
mov
jne
mov
cmpsl
mov
and
add
sub
mov
lret
dec
movsb
dec
jbe
mov
push
repnz
cmpsl
push
jno
cli
and
leave
jne
in
clc
dec
popa
jbe
cwtl
scas
clc
add
cmpb
pop
cmpsl
fnsave
dec
mov
jae
pop
cwtl
or
jle
xlat
xchg
mov
xchg
repz
cmp
xchg
jp
test
movsb
loop
mov
inc
push
jns
test
clc
dec
fwait
cmpsl
jp
repnz
das
pushf
dec
sub
out
loope
gs
cmpsb
xchg
inc
xor
inc
clc
shll
pop
push
pop
mov
xchg
sub
icebp
clc
sub
xor
outsb
sub
in
add
mov
mov
cltd
push
sarb
cmc
adcb
sub
in
int3
push
mov
and
cmpsl
dec
test
jae
lds
cmp
dec
mov
lcall
scas
stos
and
scas
out
cmp
mov
bound
inc
repnz
or
ret
jnp
ret
std
mov
mov
xchg
test
mov
ljmp
mov
mov
mov
hlt
lahf
cmc
push
cmc
xchg
inc
outsl
push
rclb
add
pop
daa
stos
rol
push
ss
and
sub
repz
out
add
push
jae
lcall
mov
in
mov
or
jnp
sbb
sbb
dec
mov
xchg
inc
pop
xor
lock
movsl
out
ljmp
js
rcrb
add
rcl
movsb
cmp
mov
fwait
mov
mov
stos
ds
mov
rolb
lahf
dec
lock
jle
in
adc
roll
test
sub
cmp
mov
outsb
shrb
push
jb
out
ja
mov
imul
xchg
fldl
mov
fidivl
mov
push
test
lret
insl
sub
fwait
push
inc
cmpsl
mov
push
xchg
test
pop
mov
nop
and
test
xlat
imul
je
pop
out
mov
test
jne
lret
xor
mov
pop
fidivs
fmulp
mov
add
push
jns
data16
push
lret
mov
sbb
sub
int3
jge
cmpsl
mov
jl
mov
in
adc
shrl
aas
faddl
repz
mov
pushl
mov
lds
movsb
inc
rorb
dec
les
xlat
popa
xchg
rcr
cld
jnp
xchg
sub
mov
pop
mov
mov
js
mov
dec
out
ficompl
push
cltd
sub
xchg
jno
rcr
test
andb
movsb
dec
and
lcall
sbb
fcomp
stos
jmp
je
jmp
rcrb
mov
cmp
fcmove
mov
xchg
test
les
fwait
xor
adc
mov
fisubrl
test
mov
and
loopne
push
xor
mov
xchg
fcmovbe
test
pop
adc
mov
lea
js
movsl
cmc
movsl
ficompl
pop
dec
mov
xorb
fdivrs
test
xor
inc
int3
xchg
push
imul
ret
mov
addl
fiadds
pushf
loopne
shrb
daa
enter
xchg
xor
jge
lret
or
fcmovbe
dec
inc
shlb
mov
push
push
mov
in
mov
popa
inc
add
cmc
sbb
gs
pop
cmp
lods
movsb
mov
mov
adc
mov
cltd
add
lcall
pop
push
jmp
xchg
pop
ds
push
or
mov
pop
cltd
ret
aaa
adc
test
mov
xor
test
jecxz
imul
push
cmpsl
aam
shl
jmp
or
jne
scas
and
jp
clc
popa
stos
cwtl
out
add
lcall
inc
xchg
cmp
out
sbb
adc
fdiv
sbb
addl
xchg
pusha
movsb
mov
fsubr
pop
cmp
pop
pusha
mov
fldl
aas
subl
mov
mov
push
push
icebp
out
bound
test
popf
and
pop
shlb
mov
mov
loop
fmuls
scas
mov
cmpsl
into
pop
mov
lds
inc
xchg
clc
enter
pusha
sarb
scas
aaa
lods
pop
pop
cltd
jnp
and
notb
mov
inc
and
and
icebp
mov
pop
arpl
mov
push
cld
repnz
gs
sub
mov
sbbb
mov
pop
test
mov
xor
scas
and
xor
cwtl
out
lret
outsl
fistl
jae
aam
push
lock
lret
adc
mov
inc
inc
rcll
mov
loopne
movsb
push
ja
xchg
xorl
mov
pop
adc
dec
mov
scas
mov
call
mov
jne
jmp
stos
mov
jno
stos
cmc
lock
or
aaa
arpl
in
in
and
fidivs
adc
mov
inc
loopne
xlat
inc
and
xchg
mov
mov
inc
mov
adcl
mov
xchg
xchg
and
jmp
mov
push
mov
std
jle
xorb
subb
xlat
and
out
mov
mov
loopne
add
sub
je
dec
mov
or
pop
cmpsl
mov
and
jno
xchg
lods
mov
push
nop
push
shll
mov
pop
and
dec
cltd
sar
test
movsl
call
scas
imul
xchg
mov
fnstcw
stos
pusha
pop
xchg
jnp
or
jo
mov
iret
mov
adcb
xchg
cmpsl
fcmovnbe
testl
subl
test
push
mov
scas
cli
mov
dec
pop
or
mov
fildll
cmp
orl
push
mov
mov
call
fildll
add
dec
jo
adc
jb
shlb
stos
dec
adc
mov
movsb
fs
xor
orl
ja
fs
dec
sbb
ljmp
cmpsl
cmpb
push
lods
xchg
cmp
fcomip
mov
add
sbb
das
jae
adcb
xchg
sbb
fs
mov
add
pop
test
aad
enter
push
fs
outsl
add
in
add
cmpsl
aad
pop
aam
lods
inc
ja
pusha
mov
dec
pop
mov
addb
test
fdivl
lock
ss
into
mov
scas
jmp
mov
push
sbb
mov
scas
pusha
imul
xchg
sub
dec
subb
xor
mov
push
xchg
mov
mov
mov
stos
call
and
mov
xchg
pop
mov
push
loopne
inc
inc
push
repnz
pushf
cmp
gs
pushf
lret
out
mov
in
pop
pop
mov
fcoms
and
push
je
loop
scas
or
pop
sti
cmpsl
lcall
mov
das
popf
dec
push
mov
xor
mov
mov
and
adc
movsb
fistl
mov
leave
cmp
cltd
mov
push
mov
lret
mov
lock
cmc
sti
mov
fcoms
mov
mov
jl
lock
andl
mov
je
or
pop
xor
add
sbb
mov
cltd
popa
jbe
cs
add
addl
or
jno
add
into
dec
int3
mov
mov
popa
stos
adc
adc
jp
cmpsl
mov
inc
push
jle
pop
in
xor
jne
out
fiaddl
adc
sub
mov
sub
mov
sub
xor
sub
jl
leave
pusha
sub
pop
loop
loop
sub
and
es
sub
in
in
das
mov
jl
mov
cmp
jnp
xchg
movsb
mov
pop
shlb
pop
mov
sub
pusha
enter
push
push
lahf
cmpb
and
pop
jae
fldt
and
mov
sbb
push
adc
mov
or
adc
or
pop
ja
aam
inc
jbe
mov
dec
bound
cmp
push
pop
mov
add
mov
inc
sarb
popa
cltd
push
imul
pushf
inc
icebp
xorl
pusha
rclb
enter
xchg
hlt
loope
fwait
pop
dec
nop
imul
fisubs
sbb
pusha
jmp
test
sub
loopne
gs
xor
dec
das
xchg
stos
jns
sub
stos
js
bnd
xor
stos
imull
clc
mov
or
inc
test
shrl
mov
mov
push
ljmp
sarl
jg
lock
daa
and
jge
movsl
mov
mov
cmp
and
mov
std
popa
cmp
xchg
and
xchg
push
adc
mov
jge
mov
cltd
loop
cli
mov
lret
xor
repz
scas
mov
pop
and
loope
ficomps
and
xchg
mov
mov
andb
pop
sub
mov
mov
and
mov
pop
lock
mov
sbb
out
imul
add
mov
mov
jae
mov
mov
inc
add
fwait
cmp
and
xor
add
mov
mov
fstl
jmp
xor
mov
repnz
clc
cld
adc
push
mov
xchg
mov
insb
xlat
pop
pop
popa
shr
cs
mov
test
lods
out
adc
adc
addr16
pop
out
mov
clc
dec
cmpsl
cld
and
repz
mov
pusha
jne
fsubs
negl
pop
mov
cmpsl
ret
sub
mov
outsl
mov
shll
nop
pop
in
push
cmpb
and
mov
jo
lret
jmp
xlat
in
nop
nop
mov
sbb
cld
mov
fnstsw
popa
xor
cmc
mov
test
mov
mov
loopne
je
or
mov
mov
adc
outsl
mov
and
imulb
adc
mov
rclb
sub
inc
loopne
mov
xlat
lcall
pop
test
mov
addr16
nop
bound
icebp
mov
xor
inc
mov
test
idivb
scas
xchg
and
mov
sbb
cmpsl
mov
ds
fistpl
and
daa
mov
push
pop
popa
mov
adc
mov
add
lods
adc
pop
mov
push
mov
jg
and
je
mov
ds
and
mov
xchg
fwait
mov
sbb
mov
loope
inc
les
cmp
xor
inc
outsl
and
enter
mov
xchg
ja
lret
cmpsb
ss
iret
mov
and
mov
mov
mov
push
fcmovb
or
and
mov
call
pop
aaa
cmp
push
aas
in
mov
test
sub
push
leave
adcl
xor
lods
mov
mov
and
imul
xchg
popa
mov
and
ja
js
cli
sbb
in
cmc
xchg
cwtl
das
jl
scas
movsl
fwait
mov
in
andb
push
and
jmp
push
xchg
lahf
mov
pop
mov
clc
or
cmp
mov
and
scas
subb
sbb
mov
sub
cbtw
lret
or
adc
sbb
jns
inc
dec
mov
pop
add
mov
cmpsl
and
loopne
incb
mov
push
xchg
shrb
xchg
lret
adc
mov
push
test
outsb
push
in
andb
push
movsb
movsl
fildl
mov
or
sti
add
and
xor
cli
lock
int3
mov
and
ficomps
mov
inc
mov
mov
jne
icebp
shr
mov
pop
xor
and
push
cmpsb
mov
fcmove
jne
loop
ret
mov
xor
adc
aaa
mov
das
loop
stc
jns
mov
pop
mov
mov
loopne
push
cwtl
jnp
call
xor
push
imul
ss
loopne
mov
inc
hlt
into
dec
sbb
sbb
mov
test
shlb
shlb
and
mov
xchg
mov
int
cmp
push
pop
sbb
js
mov
mov
or
mov
mov
lods
jl
shrl
mov
and
test
mov
xorl
fwait
ss
dec
adc
scas
scas
mov
mov
jecxz
and
inc
loopne
imul
dec
popf
das
inc
jle
xor
or
and
imul
pop
icebp
js
sbb
pushf
sub
aaa
mull
ret
frstor
sbbl
mov
fmull
mov
out
hlt
icebp
sub
mov
push
addr16
sub
imul
mov
lret
lahf
movsb
addb
std
test
sub
jge
mov
mov
mov
test
aaa
in
sbb
xor
sbb
mov
adc
mov
idiv
mov
out
daa
cmpsl
ss
in
fs
shll
enter
pop
mov
loopne
jae
jnp
xchg
fs
sbb
mov
inc
mov
fwait
test
in
sub
or
push
ljmp
mov
scas
xor
leave
jbe
and
push
xor
idiv
lock
icebp
pop
cltd
adc
adc
and
sbb
loopne
pop
stc
je
jo
test
add
outsl
fdivs
add
sbb
mov
sahf
sti
mov
mov
mov
negl
and
and
addl
test
pop
and
xor
xchg
add
mov
and
jns
add
call
pusha
sub
mov
mov
mov
jmp
addr16
sub
mov
and
pop
dec
sahf
mov
cwtl
movsl
nop
popa
adc
insb
setg
push
scas
and
lods
ret
shlb
rclb
lret
out
adc
inc
cs
and
in
xchg
and
sub
pop
out
in
ret
mov
rcrb
lods
dec
push
aam
out
xchg
test
movsl
add
push
inc
adc
pop
lods
xor
ja
clc
icebp
insl
ss
mov
mov
movsb
xchg
xchg
mov
in
pop
xor
in
out
cld
rclb
xchg
and
movsl
mov
jb
xchg
rep
or
subb
mov
mov
arpl
insl
insb
test
and
loopne
lods
mov
ja
out
popa
movsb
sub
mov
out
movsl
test
leave
mov
addr16
jle
shlb
inc
sub
outsl
push
ja
clc
hlt
mov
push
out
sub
movsl
and
jecxz
jo
and
cmp
push
test
jae
in
add
les
lahf
xchg
lcall
mov
imulb
out
lods
dec
and
cmp
outsb
xorb
stos
repnz
scas
jecxz
sub
cmp
outsb
sub
cmpsl
sub
mov
in
dec
or
add
inc
sub
out
insb
pop
daa
loope
mov
sub
pop
out
cs
lods
shlb
std
in
aad
adc
lods
cli
lds
dec
cmp
repz
shlb
outsb
fstl
mov
push
nop
xchg
mov
and
add
insb
insb
and
inc
inc
xchg
pusha
inc
arpl
lahf
lret
into
and
outsb
and
sub
mov
lahf
cmp
arpl
out
mov
sub
scas
cwtl
lods
movsb
in
cmp
mov
mov
sbb
je
fidivl
lods
mov
in
lahf
lea
sub
mov
mov
mov
sub
outsb
sti
and
lods
xchg
mov
mov
jg,pn
outsb
sub
fldt
out
fs
scas
movsl
push
lods
adc
scas
pop
xchg
pop
out
xchg
add
sbbb
and
cmp
add
mov
ljmp
cltd
in
shrb
pop
outsb
pushf
inc
shrd
out
frstor
pusha
and
mov
jecxz
jle
and
ret
arpl
inc
enter
jo
mov
mov
and
lods
add
cmp
jne
cmp
xchg
xchg
addr16
mov
clc
cmpsb
sub
push
push
lock
insb
xor
dec
xchg
mov
fbld
out
add
lock
adcl
outsb
mov
sti
cs
pop
inc
push
outsb
sbb
jbe
dec
test
push
sub
cmpsb
insb
jns
adc
xchg
dec
loopne
dec
mov
bt
rcl
push
movsbw
xor
push
stc
shrd
setne
movzbw
push
not
adc
shr
mov
jmp
bt
mov
push
cmpb
pushf
jmp
jmp
lea
je
pushf
mov
jmp
lea
jae
clc
cmp
xor
jmp
pusha
cmp
add
call
mov
fs
testb
faddl
pop
call
adc
pushf
sbb
mov
fucomip
add
mov
mov
outsb
hlt
movsb
in
push
int3
cwtl
mov
mov
testl
xor
mov
xchg
test
test
inc
push
add
adc
sbb
stc
cmc
mov
mov
call
pusha
lea
jmp
sub
loope
pop
fstp
mov
test
xchg
jne
inc
and
nop
xor
movsl
fiaddl
jl
mov
dec
fwait
loope
mov
cwtl
lret
sarl
pushf
mov
repnz
cwtl
rorb
ret
add
and
lea
jmp
or
push
pop
add
sbb
mov
dec
ficoms
jbe
subb
xor
jl
and
jnp
mov
push
sbb
or
jbe
xchg
hlt
movsl
sub
mov
and
iret
fnstenv
dec
and
adc
xchg
jp
ljmp
cwtl
mov
into
jno
xchg
cmp
inc
stos
ds
fiadds
push
ljmp
dec
mov
or
outsb
popf
mov
and
mov
aaa
or
sbbl
push
in
jecxz
jb
xchg
sub
push
lret
mov
cwtl
jns
lahf
rolb
int3
fimull
lods
mov
sub
ljmp
test
shl
sti
or
fwait
xor
adc
sub
mov
adcl
pop
aas
mov
sub
into
adc
sahf
pop
leave
out
inc
xor
call
out
clc
ljmp
les
test
mov
push
cmp
cmp
cmp
xor
test
test
push
shr
push
pushl
push
lea
je
pushf
pushf
adc
pusha
push
push
lea
jmp
movw
ror
push
pusha
movb
bt
xor
clc
jmp
jge
push
cwtl
cmpsb
jbe
or
lcall
jnp
popf
and
andb
or
xor
in
stc
outsb
sbb
lret
cmc
and
jle
es
or
fcmovu
loopne
add
lods
repnz
pop
ret
dec
mov
sahf
sub
jl
andb
aaa
shll
jp
hlt
fwait
jns
into
int3
push
xor
inc
adc
lds
sub
shll
test
bound
mov
pop
cmp
inc
push
pop
pop
das
mov
add
and
pushf
pushl
lea
jbe
rol
xor
mov
neg
clc
xor
setge
add
sar
mov
jmp
cmp
jmp
jmp
fsubrp
outsl
adc
adc
shll
mov
icebp
lea
lea
adc
mov
sbb
xchg
push
mov
hlt
movsl
sbb
cmpsb
ljmp
dec
out
mov
inc
and
mov
cmp
repnz
mov
push
cld
xor
pushf
stc
repnz
pusha
jmp
pushl
lea
jne
push
stos
pushl
lea
jmp
xor
clc
pushw
popfw
mov
pushl
inc
jmp
mov
inc
ret
repz
jno
popf
sub
xchg
sbbl
jl
in
sub
enter
ljmp
loope
rcrl
inc
cltd
xor
dec
push
out
lds
mov
jmp
enter
xor
inc
jb
adc
jl
sub
mov
int3
dec
jl
fs
mov
in
insb
fmull
lahf
inc
iret
roll
shrl
incl
xor
loope
adc
das
adc
push
arpl
mov
repz
ds
mov
aas
dec
pop
fstpl
scas
pop
adc
in
out
dec
jbe
mov
or
xchg
cmp
mov
icebp
and
lahf
movsbl
movb
pushf
cwtl
movsbw
mov
bswap
lea
jmp
and
pusha
push
jmp
jmp
pusha
call
push
dec
int
enter
dec
iret
dec
jo
lds
enter
jo
enter
int
dec
enter
int
jo
dec
jo
dec
int
dec
ret
dec
iret
leave
lret
into
jo
lret
dec
lret
lret
dec
inc
iret
inc
ret
jo
movb
shlb
fs
je
bts
shrd
shld
mov
movsbl
lea
adc
add
btc
mov
push
test
pushf
push
lea
je
or
shr
add
btr
sub
lea
btc
mov
clc
clc
add
call
and
aaa
jl
loopne
clc
jmp
inc
and
xchg
je
out
fs
sbb
dec
jp
sub
out
out
clc
mov
sahf
jo
ja
fbstp
cmp
in
mov
jno
setle
out
call
mov
shlb
push
inc
imul
andb
and
jecxz
mov
mov
mov
lods
insb
in
xor
hlt
pop
and
lods
mov
mov
jnp
out
xchg
xlat
cltd
daa
arpl
add
hlt
cs
imul
xor
mov
arpl
imull
mov
push
push
jb
out
mov
pushf
cmp
movsb
xchg
lods
loop
inc
lods
inc
mov
lds
pop
sub
std
jle
sbb
loopne
test
loopne
dec
xchg
in
xchg
out
mov
pushf
xor
jl
mov
sub
add
and
mov
sub
shll
fiaddl
mov
in
mov
rolb
xor
add
lods
push
call
inc
cmpsb
push
mov
movsl
pop
arpl
mov
xchg
scas
pop
xor
pusha
cwtl
out
cmpsb
movsb
mov
mov
scas
addr16
pusha
sahf
add
jns
out
mov
movsb
mov
shlb
subb
in
mov
movsl
cmpb
mov
mov
in
movsb
xchg
out
shlb
mov
scas
aaa
sahf
adc
rorb
lock
xchg
hlt
or
push
mov
movsb
in
xchg
mov
mov
cmpsl
and
and
pusha
mov
insb
lcall
lret
test
sbb
xchg
loop
sub
sbb
ret
out
in
cmpsb
push
push
lret
jae
test
cld
mov
jo
mov
xor
xchg
mov
fs
popf
lea
mov
ljmp
mov
call
jae
lods
data16
mov
mov
stos
scas
push
rcrb
pop
jnp
sub
push
movsb
lods
mov
nop
rol
mov
ljmp
movsb
ljmp
movsb
in
test
xchg
xor
lea
sahf
lods
out
mov
aad
cmpsb
enter
mov
subl
add
sub
popf
xchg
sub
jo
int3
test
adcl
imul
lock
fsubp
lods
ret
mov
sbb
mov
jnp
xchg
les
pop
pusha
cltd
sub
mov
mov
dec
mov
ret
mov
mov
xchg
mov
fwait
mov
ret
mov
les
cmpsl
les
shrb
loop
mov
test
lods
stc
movsl
mov
mov
mov
ret
mov
mov
sbb
orb
and
movsl
cmp
pusha
test
iret
mov
mov
mov
aas
cmpsl
out
in
pop
inc
mov
mov
lahf
xchg
inc
js
lods
movsb
loop
pop
ds
loopne
aad
mov
stos
mov
mov
mov
cmp
call
and
jnp
popl
test
clc
mov
adc
inc
mov
shll
pop
int3
test
loop
adc
xchg
xchg
pusha
xchg
mov
adcb
das
lods
cmpl
popa
int3
lods
lea
fsubl
cmpsb
jecxz
fwait
mov
pop
test
mov
and
xchg
stos
lods
inc
mov
test
scas
jae
insl
or
out
fwait
or
imul
enter
loop
cmpsb
popf
insl
stos
lahf
out
cltd
push
in
pop
int3
shlb
scas
imul
xchg
mov
fidivl
sub
xchg
and
mov
fwait
hlt
mov
mov
pop
into
daa
loope
cltd
sarl
mov
mov
mov
lods
mov
out
mov
movsb
out
lret
ljmp
cmpsl
adc
lods
lahf
add
lods
xor
mov
mov
push
ret
cltd
or
mov
scas
mov
insb
aas
daa
push
in
int
add
call
movsb
mov
mov
xchg
mov
sbb
scas
rolb
mov
or
leave
xchg
jl
xchg
mov
add
cmpsb
enter
dec
in
dec
push
mov
mov
sarb
add
mov
dec
stos
test
popf
shr
cwtl
das
lcall
stos
nop
jnp
pop
pusha
mov
es
mov
nop
les
mov
xchg
stos
add
mov
xchg
scas
mov
mov
clc
scas
aam
pop
pusha
mov
out
or
xchg
mov
test
cli
xchg
cmpsb
es
and
mov
andb
pusha
loopne
mov
mov
ljmp
mov
into
inc
push
cmp
mov
out
mov
cld
aad
adc
es
inc
stos
jae
mov
mov
arpl
in
xor
xchg
push
pop
movsb
mov
or
out
xchg
adc
mov
ja
jns
mov
fldenv
push
sub
movsb
xchg
adc
pop
xor
mov
dec
cmp
add
clc
xchg
subb
xor
pushf
and
mov
xchg
jb
test
xlat
xchg
mov
sahf
out
loop
out
xchg
clc
cwtl
cmp
adc
in
stos
ljmp
mov
fidivl
jmp
out
neg
scas
lss
xorb
push
test
sahf
in
nop
ljmp
sub
xchg
test
rolb
xchg
mov
fsubs
lcall
mov
mov
xchg
loope
test
cmpsl
push
fadd
inc
mov
push
mov
jo
mov
xor
popf
xchg
daa
xor
mov
and
cmpsb
mov
pusha
stos
in
movsb
jl
out
and
scas
mov
sub
loop
clc
mull
in
stos
loop
ret
mov
in
mov
xlat
out
cmp
mov
movsb
movsb
cltd
adc
mov
xchg
add
fsubl
pop
movsb
mov
pushf
cmpsb
mov
adc
mov
mov
add
mov
push
or
cmpsb
call
test
xchg
faddl
jo
xchg
cld
mov
int3
in
cmpsl
into
mov
andl
movsb
mov
mov
les
mov
scas
lahf
subl
mov
mov
mov
xchg
fadds
lahf
cwtl
and
sub
movsb
xor
movsl
cmpsb
add
or
xchg
sbbb
out
cmpsl
movsl
lea
mov
les
sub
movsl
pushf
aaa
adc
mov
in
aam
mov
cwtl
xchg
xorl
push
xchg
test
scas
pushf
adc
les
jg
inc
mull
mov
shlb
movsb
call
xor
scas
fwait
and
call
subb
cmp
rdmsr
mov
stos
fdivs
mov
fbld
mov
jne
in
mov
movsb
and
and
stos
addl
fsubrl
jle
test
mov
adcb
mov
add
fsubl
neg
pusha
cwtl
insb
cmpsb
dec
sub
inc
loop
scas
push
xor
aam
stos
popf
stos
adc
xchg
xchg
loop
dec
loopne
mov
out
in
insb
nop
push
call
arpl
hlt
add
xchg
hlt
or
xchg
loopne
mov
jl
mov
loop
in
mov
sub
mov
pop
xchg
cs
jl
jns
repz
and
jmp
xor
loope
loope
call
aaa
or
hlt
xchg
lods
decl
ds
scas
sub
mov
xorl
test
test
pop
mov
cmpsb
mov
cli
add
sbb
imul
xor
mov
push
mov
cmpsl
movsl
lock
mov
bound
loop
sbb
aaa
and
and
mov
out
icebp
xchg
xchg
mov
xchg
mov
cltd
fwait
mov
mov
mov
ljmp
lahf
adc
mov
add
test
fdivs
mov
jg
out
addb
js
out
outsl
cmp
in
cwtl
daa
lahf
hlt
cmp
add
loop
ficomps
adc
jb
lea
xor
mov
xchg
mov
cmpsb
imulb
cmpb
in
lahf
lea
xchg
out
loop
mov
xchg
cli
in
jl
mov
mov
mov
pushf
sti
jno
jecxz
push
scas
sub
cli
sahf
mov
lods
lahf
rorb
pushf
repz
pushf
in
push
mull
cmpsb
cmpsb
xchg
inc
mov
lods
adcb
scas
mov
xchg
mov
arpl
push
jb
jmp
pushf
push
add
mov
jmp
lods
iret
mov
ja
mov
mov
and
mov
mov
dec
scas
inc
mov
fs
cltd
xchg
jne
pop
pusha
mov
mov
movsb
add
ret
movb
adc
subl
stos
leave
lfs
out
popf
ret
pop
lahf
dec
ja
inc
mov
pop
scas
or
nop
rolb
outsl
xor
mov
mov
push
popf
cltd
mov
mov
mov
nop
out
mov
xchg
rcrb
jmp
jb
fwait
in
lods
mov
xchg
jo
add
fwait
insl
push
shrl
xchg
les
mov
mov
lods
incb
fcmovb
loop
stos
mov
icebp
and
fbld
pushf
aas
cmp
mov
stos
dec
ljmp
and
lea
cmpsl
pop
mov
aas
lods
nop
clc
mov
add
test
xchg
test
cmp
inc
mov
lea
movsb
mov
mov
inc
outsb
insb
sbb
in
mov
subb
movsb
mov
stos
mov
das
mov
ja
xchg
std
leave
mov
push
or
jnp
cmpsb
enter
cli
adc
cltd
jo
push
sbb
lods
pop
sbb
add
fwait
mov
stos
mov
orb
stos
mov
aam
ja
lock
cmpsl
xchg
xor
push
test
cmpsl
xor
mov
orl
mov
mov
daa
adc
mov
scas
sub
and
loop
shlb
jno
add
mov
mov
mov
add
insb
in
loop
insb
out
loop
fisttps
rclb
inc
fwait
lcall
mov
loop
les
test
mov
insb
out
sbb
scas
jmp
out
rclb
adc
mov
out
loop
and
ljmp
push
mov
ret
sbb
loop
subl
xchg
loop
push
mov
sbb
movsl
aas
movsl
loop
scas
scas
ret
xchg
xchg
add
mov
mov
jmp
scas
cmpsl
mov
or
mov
cmp
sbb
mov
daa
mov
test
stos
xchg
mov
mov
insb
pushf
or
mov
fdiv
mov
aam
sub
mov
and
push
inc
test
xchg
mov
aam
mov
test
test
mov
hlt
enter
ja
test
mov
hlt
shlb
movsb
mov
or
mov
bound
inc
mov
push
pop
fcmovbe
movsl
sbb
add
scas
scas
push
cltd
mov
push
icebp
out
mov
xor
or
lret
lds
mov
jo
lcall
insb
push
fisubrs
loop
cltd
mov
and
and
call
pop
push
dec
mov
mov
push
push
cmpsl
in
jl
arpl
sub
and
addb
jns
popf
push
xor
jnp
sub
pushf
xchg
in
repnz
stos
xor
sub
cmpsb
mov
mov
divl
cmp
ret
mov
in
nop
jne
xor
jmp
dec
adc
inc
movsb
jp
dec
mov
ret
xchg
leave
lods
clc
mov
loopne
and
mov
xor
loopne
pop
mov
es
and
cmpsb
pushf
adc
mov
out
mov
dec
mov
jb
into
arpl
jl
sub
and
andl
fwait
mov
push
mov
orb
js
adc
mov
inc
adc
lods
lcall
and
adc
mov
add
pusha
jnp
test
push
sti
mov
movsb
cmp
push
mov
inc
pop
mov
mov
xor
pop
lcall
sub
scas
mov
mov
insb
adc
orl
xchg
lock
insb
sbb
xchg
mov
mov
sbb
aas
mov
fwait
test
loop
mov
xchg
aas
mov
xchg
out
xchg
in
mov
xchg
xchg
out
loop
adc
scas
cwtl
mov
andb
aaa
xor
sti
xchg
cmp
lock
loop
sbb
add
xchg
mov
ljmp
mov
loop
scas
lcall
stos
sub
xchg
and
scas
cltd
mov
andb
mov
mov
mov
mov
les
xchg
xorb
lahf
loop
scas
popf
mov
daa
mov
test
mov
mov
mov
sub
fcompl
push
cwtl
xchg
jle
xchg
loop
cmpb
loop
mov
call
test
mov
xchg
lock
sahf
jo
fwait
pop
test
mov
mov
stos
mov
aas
push
repnz
mov
mov
jle
mov
andl
adc
add
adc
add
stos
mov
push
mov
add
sbb
mov
fsubrl
inc
or
mov
add
cmpsl
mov
sbb
sub
out
mov
insb
xchg
mov
cltd
addb
mov
out
inc
fsubrl
pusha
adc
mov
mov
imul
imul
mov
scas
mov
inc
mov
add
fs
scas
xchg
nop
cmp
lods
int
rcl
stos
pushf
cmpsl
je
cmpsb
repnz
or
xor
test
mov
adcl
hlt
mov
stos
cmpsb
dec
int3
adc
mov
mov
mov
daa
cmpsb
fsubr
adcb
inc
call
adc
mov
iret
scas
fildll
subl
sbb
mov
jnp
movsb
add
cmp
lea
test
enter
jb
cs
movsl
test
inc
mov
xchg
mov
mov
and
mov
test
hlt
loop
scas
mov
cs
jnp
and
xchg
mov
andl
mov
mov
mov
mov
cwtl
loop
in
out
loop
popf
or
loop
scas
stos
mov
les
test
mov
in
movsb
loop
scas
mov
mov
in
loop
sbb
scas
mov
mov
mov
test
lea
sub
subb
movsl
sbb
push
and
test
aam
test
test
daa
lods
in
cwtl
mov
xchg
mov
mov
popa
mov
in
pop
test
lahf
movsb
xchg
xchg
out
sbb
dec
inc
fcoms
movsb
hlt
mov
ret
mov
repnz
mov
test
lcall
movsb
int
stos
aad
call
dec
movsl
call
sbb
adcl
mov
aam
test
adc
mov
rolb
xchg
push
mov
adcb
xchg
inc
mov
lahf
inc
outsb
enter
sbb
push
mov
mov
movsl
call
dec
mov
loopne
loope
lds
and
lea
jmp
add
mov
sbbb
lahf
pop
lcall
test
adc
xchg
nop
xchg
movsb
inc
dec
pushf
sub
stos
call
mull
testl
rcll
xorl
mov
insb
lcall
cltd
dec
test
insb
mov
andb
push
scas
jne
stos
cltd
scas
add
xchg
aad
mov
xchg
ret
lcall
xchg
idivl
test
mov
mov
loop
sub
mov
test
mov
xchg
les
xchg
loop
ret
fidivs
test
ljmp
lahf
sub
mov
daa
stos
loop
cmpsb
repnz
cmp
out
cwtl
repnz
loop
dec
out
repnz
addl
mov
mov
mov
movsb
adc
ljmp
subb
jb
push
lods
mov
in
pop
mov
sbb
mov
mov
mov
insb
mov
or
xchg
rolb
lods
andb
lock
aaa
lods
cmpb
shll
cmpsb
fdivrl
out
hlt
mov
mov
ret
mov
cmpb
fimuls
sti
mov
xchg
mov
scas
xor
scas
push
cwtl
add
or
jnp
add
mov
add
add
repz
dec
loopne
and
sub
lods
push
fisubl
in
aam
les
inc
push
jg
popf
loop
or
cmp
movsl
cmp
mov
cmpsb
dec
stc
jnp
movsl
test
out
adc
mov
mov
xchg
mov
repnz
sti
lahf
mov
cltd
push
in
sti
pop
nop
mov
ret
cwtl
fwait
loop
movsl
cs
xchg
mov
xchg
ret
fisttpll
mov
mov
mov
mov
stos
out
mov
mov
mov
sbb
in
hlt
mov
leave
rcrb
outsl
aas
cwtl
sub
xchg
stos
lock
lcall
mov
mov
mov
out
mov
xchg
push
testb
jmp
ret
outsl
mov
aaa
mov
cli
mov
mov
pusha
popf
xchg
daa
cltd
mov
mov
test
in
cwtl
sbb
movsb
mov
addr16
mov
cmpl
mov
inc
mov
movsb
xchg
cmpsb
mov
lret
pop
mov
xchg
shlb
movsl
mov
mov
mov
jg
test
cmc
mov
push
add
mov
mov
push
inc
mov
in
inc
sub
add
mov
addr16
mov
mov
roll
mov
out
mov
mov
mov
or
scas
mov
jecxz
mov
testl
call
dec
mov
call
dec
mov
outsl
fidivs
push
movsb
pop
sub
add
movsb
pusha
mov
lods
stos
xor
mov
cmpsl
mov
fsts
push
cmpsb
mov
addl
mov
mov
sahf
andb
dec
mov
xor
test
mov
mov
call
mov
in
mov
mov
mov
call
scas
dec
xchg
cwtl
mov
mov
sub
or
and
xorl
nop
loop
xor
addb
fsubs
mov
mov
nop
shl
lcall
mov
scas
mov
lods
ret
stos
das
nop
sarb
mov
mov
mov
xchg
sub
mov
mov
les
xchg
mov
scas
xchg
mov
les
mov
test
mov
les
add
xorl
mov
cmpsl
mov
fwait
ret
lods
scas
lods
xor
mov
mov
push
mov
test
adc
dec
orl
movb
mov
and
scas
popf
mov
pop
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
lods
pop
sbb
pushf
popa
imul
in
nop
or
pusha
mov
pop
mov
test
mov
loop
test
xchg
sbb
nop
fs
fbld
cwtl
je
test
sbb
xchg
mov
xchg
mov
in
mov
leave
daa
movsl
inc
mov
push
lea
test
int3
cltd
pop
cld
lods
adc
mov
mov
lahf
test
xlat
pop
pop
mov
aam
xchg
mov
xchg
or
fsubl
cmp
pop
fcoms
and
movsb
ljmp
stos
aam
adc
fsubrl
xor
adc
mov
fdivrl
lds
mov
add
out
xor
loopne
lret
sahf
aaa
outsb
arpl
ja
movsb
mov
cmpsb
test
addr16
cld
xchg
mov
sbbl
pusha
xchg
test
lods
addb
xchg
xchg
mov
lea
mov
mov
mov
adc
cwtl
xor
fisubs
push
test
addl
cmpl
push
loop
sub
out
scas
movsl
cmpsl
inc
adcb
cwtl
lods
inc
sbb
mov
xchg
into
test
mov
xor
mov
and
mov
in
pushf
call
lods
xor
hlt
out
scas
cmpsb
sub
hlt
mov
sbb
cmp
xor
xorb
call
cmpsb
jb
mov
lret
out
call
mov
lds
ss
xchg
cmp
pushf
sbbb
mov
xchg
test
jnp
mov
loopne
xchg
test
mov
roll
sub
fwait
lods
enter
test
and
add
cmpsl
lcall
in
cmpsl
roll
test
xchg
movsb
push
xchg
in
xchg
les
and
test
in
syscall
loop
fcomip
lods
imul
jmp
in
loop
fistl
insb
mov
nop
adc
mov
xor
mov
adc
cmpsb
xchg
mov
cwtl
hlt
xchg
loop
subl
nop
sub
loope
out
loop
gs
cmpsb
push
mov
mov
movsb
in
mov
stos
mov
loopne
out
test
mov
sbb
xor
sub
loopne
xchg
jae
xchg
mov
and
pop
addl
hlt
mov
bound
loopne
pushf
xchg
inc
cmpsl
and
jno
test
xchg
call
icebp
pushf
sbb
fcoml
xchg
xor
call
in
movsb
ljmp
loop
les
pop
test
hlt
mov
imul
repz
test
jae
xchg
mov
mov
mov
mov
mov
mov
loopne
hlt
leave
jnp
fwait
jno
or
inc
jnp
mov
fistpl
xchg
lods
jmp
sti
mov
mov
test
mov
mull
push
lods
mov
xor
ss
mov
dec
mov
fwait
or
pop
stos
mov
xchg
inc
xchg
cli
lahf
andb
sub
jne
inc
popf
or
hlt
mov
cmp
cmpl
mov
mov
lods
xchg
mov
ficomps
sahf
cmp
call
lods
mov
mov
mov
loop
lock
inc
in
mov
fwait
and
test
test
pushf
mov
movsb
lea
xchg
test
popf
dec
xchg
call
in
loop
in
xchg
loop
out
mov
das
mov
mov
cmpsl
mov
mov
test
xchg
loop
ret
mov
divb
mov
movsb
adc
mov
inc
loop
imul
mov
cli
cmp
aas
mov
iret
cmpsl
pushf
scas
subl
loop
lcall
sub
mov
xor
xor
lock
and
inc
cwtl
sub
xchg
loop
jmp
test
mov
mov
les
nop
ret
lcall
scas
mov
mov
mov
mov
les
cmpsl
mov
ret
stos
scas
mov
sub
mov
sub
scas
in
stos
loop
mov
les
mov
pushf
clc
sub
lods
mov
mov
scas
mov
popf
test
and
scas
xorl
and
out
fimuls
mov
mov
in
setne
movsb
scas
mov
mov
xchg
test
mov
ret
lahf
scas
sahf
mov
pop
mov
scas
mov
mov
scas
xorl
andb
scas
mov
mov
mov
jnp
and
scas
xchg
mov
les
test
test
les
add
rolb
subl
mov
lcall
mov
sub
test
les
cmpsl
mov
cmpsb
ret
pop
lods
test
lret
mov
inc
sub
frstor
mov
mov
aaa
sbb
scas
mov
adc
cwtl
sbb
lahf
mov
sub
jecxz
mov
dec
test
push
pop
mov
js
test
sub
lods
scas
lcall
fwait
in
mov
xor
mov
pushf
sub
lds
movsb
xchg
scas
lahf
movsb
leave
scas
ret
sbb
pop
xchg
ljmp
aad
aam
ja
lock
mov
mov
loope
add
out
pop
jge
xor
mov
mov
lea
imul
movsb
and
push
xchg
subb
inc
ret
test
mov
sti
xchg
fidivrs
popf
cmp
pop
mov
jb
das
scas
leave
xchg
sahf
int
mov
add
mov
in
jne
mov
aaa
movsl
loop
sbb
lods
push
jno
mov
fwait
aaa
dec
mov
scas
push
mov
or
roll
xchg
mov
sub
xchg
sbb
hlt
xchg
out
mov
sub
lahf
popf
xchg
int3
movsb
lcall
mov
xchg
lahf
popf
lcall
pusha
cmp
dec
sahf
cmpl
test
movsb
mov
xchg
sub
in
sub
leave
xchg
loop
add
inc
imul
mov
je
mov
fsubl
cmpsb
cmp
sbb
push
mov
in
mov
adc
jnp
faddl
les
stos
in
push
enter
addl
and
nop
cmpsb
dec
lds
je
stos
and
adc
mov
cmpsl
lods
mov
hlt
xchg
cmpsb
loope
sbb
mov
stos
push
sub
mov
dec
xchg
call
push
and
sub
cmpsl
data16
les
imul
mov
mov
movsl
idivb
xchg
mov
mov
adc
jnp
lods
into
lcall
xchg
imul
mov
xchg
mov
je
movsl
call
stos
mov
pop
cltd
out
add
mov
fimull
decl
cmp
mov
xor
stos
xor
xchg
loopne
test
das
test
ss
sub
in
xor
loop
sbb
int
xchg
in
jns
and
and
xor
mov
push
ljmp
xchg
and
or
or
inc
mov
fwait
loopne
add
add
jecxz
aaa
sbbb
cmp
jbe
stos
and
pop
or
lret
bound
fldz
push
jno
loopne
out
arpl
push
ja
cmp
imul
pop
dec
and
push
jge
out
add
mov
movsb
xor
shlb
repnz
addr16
mov
cmpsl
movsl
paddusw
loop
and
scas
or
dec
insb
and
mov
sub
movsb
mov
and
fs
mov
out
inc
insb
add
repnz
loope
scas
add
out
movsb
aaa
and
in
out
mov
out
insb
fldt
arpl
mov
repnz
je
jo
jl
stos
mov
lea
stc
js
mov
add
and
jae
loop
pop
pop
aam
outsl
pushf
aaa
loopne
sahf
ljmp
cmpsl
aaa
insb
loop
mov
push
inc
add
xchg
addb
and
addr16
mov
movsl
jnp
mov
xlat
jmp
xchg
pusha
leave
and
xor
stos
push
mov
mov
int3
sahf
mov
ficoms
jle
test
xchg
xor
addr16
cwtl
int3
test
jmp
mov
mov
lds
clc
bound
sub
mov
out
xchg
pop
arpl
xor
inc
ljmp
in
repnz
js
and
jl
lock
sub
out
mov
imull
pushl
test
mov
xchg
cmc
jae
sub
and
cmpsb
les
ljmp
divb
xlat
pop
adc
sbb
shl
test
mov
and
mov
push
inc
mov
mov
das
sahf
bswap
nop
test
push
addr16
mov
mov
sbb
mov
mov
imul
jmp
mov
popa
fildl
sub
lock
cmp
mov
inc
jno
jl
sub
mov
addr16
int3
mov
cmp
arpl
stos
cmpsl
mov
fnstenv
dec
stos
sti
stos
mov
sbb
out
divl
testl
push
lahf
mov
mov
jp
fstpt
ljmp
mov
inc
lcall
sub
les
shrl
mov
and
mov
test
lock
sub
clc
cmp
push
mov
mov
push
bound
cmpsb
hlt
out
das
loop
push
cwtl
lods
cmpsl
fisubs
sbb
movsb
dec
rolb
pop
sub
push
adc
lods
xchg
xchg
fs
in
cmp
enter
insl
pusha
faddl
mov
iret
mov
mov
or
xor
dec
dec
cmp
or
sub
movsb
pop
push
mov
ds
rcll
xchg
push
cltd
mov
xchg
repnz
call
adc
mov
lods
daa
jmp
lock
sarl
out
scas
push
aas
aaa
cmc
mov
mov
mov
push
scas
pop
adc
cltd
mov
in
gs
clc
lods
fstp
jno
mov
fwait
ret
fistpll
int
popf
pop
mov
jmp
fdivs
pushf
pusha
mov
test
mov
xchg
cmp
pop
xchg
mov
adcl
push
xchg
ret
cltd
ret
mov
imul
mov
fidivrl
pop
stos
fs
andl
mov
divl
mov
mov
dec
push
xchg
jne
cwtl
ficoms
mov
lock
mov
int
xlat
sahf
movsl
pop
nop
outsl
stos
mov
popf
rol
pop
mov
repnz
leave
lcall
xchg
or
mull
add
ja
push
mov
movsb
lods
adcb
lcall
mov
xchg
mov
cwtl
imul
test
dec
fildl
lods
sub
mov
pop
testb
fs
hlt
pop
xchg
inc
andb
xchg
pop
subb
mov
pop
subb
enter
pushl
mov
cmp
mov
xchg
stos
mov
xlat
stc
lcall
jbe
xchg
mov
mov
mov
in
push
std
nop
int3
mov
push
test
and
add
mov
and
mov
xor
mov
adcb
or
inc
mov
lods
movsb
aaa
mov
stos
scas
in
mov
xchg
test
cmpsb
inc
call
push
scas
push
mov
andb
data16
jg
mov
xor
stc
or
or
cmp
je
test
xchg
inc
jnp
je
dec
scas
sahf
mov
scas
test
mov
mov
movsl
dec
push
subb
xlat
mov
inc
mov
dec
ljmp
fwait
movsb
jg
dec
add
xchg
adc
mov
mov
mov
scas
fwait
jb
xor
mov
mov
and
sbb
xchg
or
push
xchg
jb
add
imul
imul
scas
push
inc
in
in
inc
xchg
loopne
out
pop
pusha
cmp
stos
xchg
mov
clc
mov
mov
sbb
mov
and
in
scas
xchg
lahf
mov
scas
push
and
testl
mov
mov
mov
imull
sub
xchg
mov
mov
aad
mov
adcb
mov
aaa
fistl
scas
pushf
js
test
ljmp
mov
mov
hlt
fistl
mov
and
adc
xchg
xchg
lcall
lea
call
cmp
out
loop
movsb
test
loop
cmp
jnp
popf
cmp
mov
and
lahf
push
cmpsb
jl
out
bound
mov
mov
xor
stos
xchg
xchg
mov
mov
mov
test
and
call
movsl
imul
jmp
popa
mov
jg
out
sbb
add
mov
xchg
xchg
repz
loopne
imul
movsb
jp
jge
inc
scas
dec
mov
les
pop
notl
adc
nop
xor
push
or
mov
xor
fwait
cmpsl
jns
fisubl
loopne
test
stos
mov
pushf
outsl
jnp
mov
fists
add
dec
rorb
mov
into
mov
mov
pop
movsl
cld
mov
int
fistpll
mov
sahf
lea
xchg
mov
or
orl
pop
mov
mov
xlat
mov
pushf
cmp
mov
negl
mov
orb
test
mov
loopne
out
pusha
mov
xchg
mov
xchg
in
shld
clc
xchg
stos
jle
lcall
xorb
xorl
lret
xchg
cwtl
xorb
xchg
xchg
stos
add
mov
mov
add
subl
xchg
lcall
ret
dec
mov
in
test
mov
mov
cwtl
das
mov
and
stc
mov
pop
in
out
cmp
gs
pop
test
and
icebp
mov
inc
in
out
ljmp
sti
push
mov
xchg
sub
push
cmpsb
test
cmp
lods
mov
lret
ja
in
andl
stos
xor
lods
stos
jo
lds
mov
jle
outsl
mov
sti
mov
cli
test
mov
mov
andl
nop
adc
jnp
xchg
xchg
push
mov
cmp
push
xchg
sti
adcl
mov
test
jnp
mov
mov
in
jmp
movsb
cmpb
xchg
mov
cmp
into
mov
sub
mov
sbb
popa
jb
movsb
fwait
jge
mov
jnp
outsl
mov
in
mov
movsb
test
inc
xchg
mov
gs
mov
lahf
lahf
xlat
cmpsb
setg
inc
shlb
les
push
insl
je
jg
jle
dec
mov
sahf
fiaddl
mov
mov
popf
subb
add
mov
xchg
loopne
push
mov
sbb
fistps
xor
imul
push
push
mov
sub
pop
mov
aam
lahf
xor
scas
shrb
ljmp
mov
test
adc
xchg
or
mov
fwait
test
push
xchg
mov
pop
xchg
mov
push
bound
movsb
movsb
cmp
xchg
xchg
mov
lret
xor
test
stos
test
push
decl
inc
scas
mov
dec
mov
aas
mov
pusha
mov
adc
cmpl
loope
mov
xchg
nop
mov
pusha
test
xlat
outsl
xchg
movsb
fbstp
mov
xchg
xchg
rclb
xchg
in
nop
rcrb
push
out
out
cmp
sbbl
mov
into
loop
xchg
shrb
test
scas
or
cltd
sub
xorl
outsl
call
data16
lods
loop
and
scas
movsb
xor
in
sub
mov
jnp
xorb
xchg
shlb
pushf
js
and
arpl
cmc
mov
aas
mov
xchg
loop
mov
mov
mov
xchg
lods
pushf
test
xchg
mov
xchg
push
rorb
cmp
mov
cld
mov
mov
sahf
xor
repnz
sub
lods
loope
in
lcall
rolb
xchg
mov
mov
pusha
test
adc
adc
xor
and
and
inc
xchg
xchg
inc
scas
bound
ja
call
lods
xchg
adc
fwait
lahf
es
mov
stos
push
xchg
xchg
hlt
jne
fmuls
add
push
lahf
ret
pop
jno
xchg
mov
adc
in
testb
cmpsb
sub
in
ret
clc
fwait
and
jnp
movsb
stos
int3
mov
pusha
lods
ljmp
mov
xchg
arpl
xchg
cmp
sub
fdivrs
lea
fs
addb
cmpb
inc
stos
subl
adc
daa
jmp
xchg
bound
loopne
xchg
addl
adc
test
les
roll
lods
test
jo
xchg
mov
sub
mov
in
roll
xchg
mov
loop
test
scas
in
test
addl
inc
inc
movsb
pop
ljmp
mov
les
idivl
scas
dec
mov
les
jnp
push
loop
jmp
repz
mov
subl
enter
test
xchg
iret
adcb
inc
nop
add
mov
movsl
jae
lods
jno
mov
ljmp
push
scas
and
mov
xor
fwait
cmpsl
pop
mov
jnp
movsl
leave
sbb
stos
bound
aad
mov
xchg
jge
loopne
xchg
xor
mov
fwait
movsl
inc
mov
imul
jmp
ss
es
cmp
or
fwait
sbb
sbb
mov
cmc
mov
jmp
jmp
shl
cltd
mov
enter
or
dec
call
out
and
lods
xchg
inc
mov
fs
out
jmp
rcr
mov
xchg
movsb
enter
xchg
push
fwait
movsb
mov
add
outsl
mov
ss
pop
mov
movsb
adc
mov
sbb
jmp
lcall
mov
mov
sub
pushf
mov
lahf
add
nop
xor
dec
cld
xchg
adc
pop
pushf
iret
sub
lea
cmpsl
mov
dec
xchg
mov
mov
dec
idivl
out
xchg
pushf
mov
in
ljmp
mov
lahf
decl
out
lea
mov
mov
aad
lea
scas
pop
daa
mov
cmc
mov
mov
push
lods
iret
movsb
mov
mov
xchg
js
mov
stos
jg
xchg
aam
popf
dec
mov
mov
xchg
sti
add
movsb
ss
sbbb
scas
sbb
xchg
xchg
sbb
and
cmpl
inc
xchg
cmp
mov
cmpsb
cmp
stos
lahf
and
xchg
enter
cmpsb
jo
adc
bound
out
mov
pop
cmpsb
andb
jge
xchg
inc
xchg
mov
fistps
test
xor
ret
xor
lea
test
inc
mov
gs
xchg
push
sahf
xchg
mov
aaa
push
movsb
cltd
pop
or
sub
mov
push
aam
mov
cwtl
jo
xlat
xchg
push
lcall
mov
sbb
mov
call
mov
mov
mov
inc
mov
hlt
mov
loop
mov
out
and
mov
lds
mov
xchg
cwtl
xchg
test
xchg
jmp
mov
xor
mov
lds
enter
cmp
mov
lods
jnp
lds
test
lds
xchg
pop
xor
add
xchg
fwait
add
loop
notb
es
lods
add
popf
mov
test
cmp
mov
and
movsb
hlt
in
cmpsb
scas
mov
aaa
inc
mov
hlt
out
mov
push
mov
inc
xchg
call
push
and
scas
pop
mov
mov
jo
imul
and
scas
dec
mov
les
pop
fsubr
addb
ljmp
lcall
cmp
loopne
mov
mov
xor
jnp
movsl
mov
jnp
xchg
lahf
mov
je
mov
mov
fbld
mov
sahf
mov
mov
xchg
sahf
mov
sub
jnp
mov
je
test
sbb
scas
jnp
mov
or
mov
xor
sbb
jb
mov
mov
mov
cmp
sbb
mov
adc
ljmp
dec
ljmp
cmpsl
repnz
xchg
dec
loopne
test
xor
testl
das
jae
lcall
push
adc
cltd
aad
call
sbb
movsb
scas
pop
or
fwait
mov
xor
sti
outsl
mov
stos
pxor
stos
ja
mov
mov
lcall
mov
call
fwait
adc
inc
xchg
jmp
mov
stos
jg
ja
loopne
lds
cmpsl
jo
addl
dec
loop
push
cmpsl
sub
mov
subl
out
in
mov
pop
lds
aam
xchg
inc
in
pusha
movsl
jb
sahf
or
mov
cmpsl
xchg
imul
movsl
sbb
push
xchg
xor
and
xchg
mov
les
mov
mov
cld
pushf
xchg
mov
shlb
xchg
cmpsl
jno
dec
mov
scas
in
lods
xchg
mov
pop
lods
cmpsb
xchg
jg
cmpsb
adc
sub
mov
push
push
pop
jnp
mov
mov
cmpsb
jmp
cs
xor
sub
mov
adc
mov
subl
mov
in
les
pop
mov
ss
stos
pop
clc
mov
nop
xchg
in
ljmp
and
mov
aam
or
sub
cwtl
pusha
lods
pop
inc
lahf
insb
mov
xchg
call
rorb
jnp
mov
jmp
mov
sbb
inc
aaa
out
dec
out
xchg
sbb
xchg
sub
divl
push
repnz
in
or
mov
cwtl
jge
mov
andb
scas
sbb
jmp
jnp
jns
mov
in
movsl
repnz
andl
and
stos
push
inc
lahf
scas
add
mov
mov
push
fwait
mov
cltd
push
xchg
mov
mov
xchg
or
push
xor
xchg
inc
jns
loop
dec
mov
mulb
mov
test
jnp
enter
cmpsl
mov
mov
dec
xorl
mov
in
mov
xchg
pop
in
push
outsb
mov
sbb
sahf
jno
pop
lcall
lret
mov
mov
leave
mov
mov
add
xchg
sbbl
cltd
mov
add
xchg
xchg
fidivrl
xor
scas
or
ja
call
lods
cltd
push
inc
outsb
subl
xchg
lods
jo
xchg
mov
cmp
stos
fsubl
and
or
shlb
mov
lea
mov
cmp
lea
and
fwait
test
and
xchg
mov
mov
stos
fsub
popa
in
mov
movsl
mov
push
mov
scas
xor
test
inc
sti
cmpsl
ss
dec
stos
xchg
nop
scas
hlt
scas
cwtl
mov
cli
and
ss
mov
movsl
jno
sbb
adc
xchg
lahf
test
and
jnp
popa
cmp
mov
test
dec
ret
mov
xorb
mov
mov
fsubrl
stos
in
dec
lahf
sub
out
fdivl
cmpsb
xchg
sbb
jnp
cmp
mov
gs
sbb
into
orb
ret
loop
ror
sti
pushf
je
mov
ret
fstpl
mov
daa
adcb
ss
inc
lahf
push
cmp
add
mov
sbb
scas
mov
ret
out
jnp
sub
mov
lea
mov
mov
test
mov
je
inc
movsb
jg
mov
inc
ret
sahf
les
push
mov
addr16
retw
jo
imul
mov
dec
ret
pop
scas
push
jb
mov
test
adcb
enter
cmpsb
mov
xor
mov
xor
and
ds
sbb
xchg
sub
jnp
orl
mov
xchg
inc
push
sbb
xchg
sahf
xor
and
punpckhwd
ret
inc
xchg
fdivrl
hlt
mov
lcall
popf
mov
inc
mov
jo
ret
mov
scas
push
test
mov
enter
jb
shlb
lcall
sub
mov
mov
orb
mov
fistpll
scas
jnp
dec
xlat
xchg
mov
mov
mov
hlt
jge
mov
mov
push
in
mov
mov
imul
mov
xchg
sbb
pop
push
mov
aam
xchg
mov
sub
inc
mov
stos
xchg
stos
call
sbb
xchg
or
xor
xchg
add
leave
sub
sahf
adc
fwait
push
mov
mov
xor
pop
sbb
pop
addb
xor
sub
mov
and
lods
push
divl
out
cwtl
xchg
inc
mov
aaa
push
jmp
inc
and
leave
or
dec
ds
and
into
mov
pushf
xchg
mov
dec
test
xchg
mov
cmpl
jnp
outsl
lcall
loop
xchg
fwait
inc
and
inc
cli
lods
insl
mov
call
mov
dec
mov
inc
subb
cmpl
adc
andl
xchg
lods
push
push
lcall
mov
xor
cwtl
shlb
pop
sarb
test
cmpsl
movsb
fsubs
mov
movsl
test
xchg
pop
lods
add
and
push
cwtl
lods
xor
mov
lods
stos
aaa
inc
sub
in
xor
lret
cli
lods
clc
call
outsl
js
out
fwait
and
loop
jno
ljmp
xchg
and
mov
mov
mov
loope
jo
xchg
cmpsb
cmp
fistpl
and
cltd
inc
xchg
mov
mov
aaa
pop
mov
mov
addr16
dec
dec
aaa
and
and
sub
inc
adcb
pop
in
mov
in
hlt
xchg
test
pop
jb
push
fistpl
nop
int
mov
mov
mov
and
sub
mov
sarb
xchg
imul
lods
inc
xorb
xchg
aas
into
and
mov
and
mov
mov
mov
cmpsb
subb
lods
orb
in
push
lahf
call
mov
test
sbb
xchg
lock
shlb
subl
mov
lea
cmpb
stos
arpl
sbbl
nop
jo
sbb
mov
mov
in
and
jns
cli
cmp
stos
cmp
fwait
sub
clc
sbb
call
mov
icebp
dec
pusha
leave
xor
fbstp
je
cmp
mov
lods
aaa
repz
movsb
jo
mov
pushf
loop
xor
insl
mov
xchg
xor
test
jno
mov
sbb
adc
cmp
and
idiv
mov
xchg
test
push
imul
sub
jb
mov
popa
movsb
mov
xchg
loope
movsb
mov
int3
aaa
xor
inc
xorl
mov
stc
push
lods
adc
mov
pop
adc
lcall
mov
mov
jae
push
mov
add
bound
mov
and
jl
and
pop
jae
and
test
and
add
mov
mov
mov
mov
insl
cmp
xor
mov
out
dec
and
repz
std
shrl
andb
pop
popa
loope
je
scas
jge
pop
dec
mov
or
sbb
and
cmp
into
fistpl
cmpsb
mov
xchg
push
lods
jp
sub
mov
push
mov
mov
mov
cs
mov
ljmp
sarb
fdivp
call
mov
aas
repz
sbb
mov
xor
jno
mov
les
cwtl
imul
mov
call
out
mov
mov
adc
sbb
push
pushl
ss
dec
incl
xorb
dec
mov
jg
aad
hlt
sarb
mov
cs
sbb
jl
sbbb
insb
sub
jp
mov
jns
clc
sbb
push
mov
call
std
mov
mov
mov
adc
js
mov
insb
xor
dec
add
mov
sbb
or
add
lahf
outsl
fists
adc
mov
or
xchg
xchg
xchg
je
insb
xchg
mov
mov
xchg
xchg
mov
ljmp
mov
stos
cli
out
cmp
jnp
mov
aas
mov
ret
push
push
ret
jbe
mov
fwait
mov
xchg
jecxz
pop
test
mov
jl
xor
jl
mov
mov
adc
sub
adc
jbe
test
pop
jmp
insb
sbb
out
loop
mov
mov
loop
mov
test
fdivs
mov
out
cs
imul
jmp
scas
idivl
cwtl
cmp
ljmp
stos
mov
pop
mov
pop
stos
mov
loop
test
leave
movsb
pop
jno
inc
xor
mov
sub
js
loopne
xchg
cmp
mov
mov
mov
lcall
mov
xor
das
mov
sbb
and
and
mov
enter
mov
jp
mov
repz
mov
je
mov
sbb
pop
out
lret
hlt
movsl
sarb
mov
test
xchg
loop
les
scas
mov
cmc
mov
stos
or
mov
xor
shlb
je
xor
jnp
add
cltd
mov
lods
pop
jo
xor
fwait
jbe
sub
xchg
lcall
mov
cwtl
xor
jp
loope
xchg
arpl
aaa
push
inc
inc
mov
and
lods
mov
xor
cld
sbb
lods
sbbb
xchg
fdivs
mov
movsl
fisubl
cmp
sbb
das
loop
jg
mov
sti
movsb
cmp
xor
cmc
mov
mov
sbb
loop
fidivrl
xchg
inc
or
mov
mov
adcb
xlat
shlb
into
jne
xchg
xor
stos
mov
add
aaa
inc
add
test
xchg
pushl
xor
loopne
stc
mov
andb
addr16
inc
das
insb
xchg
mov
and
mov
mov
lahf
xor
mov
movsl
mov
loopne
test
jo
out
imul
shlb
mov
loop
loopne
mov
imulb
outsb
add
idivl
pushl
xchg
aas
out
mov
int
fiadds
pop
jno
mov
jnp
xchg
cmp
mov
xor
pusha
icebp
jno
dec
and
xchg
incb
cmp
jnp
lahf
mov
mov
xchg
sti
xchg
mov
push
cli
cmp
jnp
mov
lcall
repz
cmp
xor
add
jle
sub
add
idivl
ds
andl
mov
aas
sub
mov
outsl
push
movsb
dec
adc
cmpsl
cmc
cltd
test
mov
fdivl
mov
repnz
xor
adc
sub
add
lahf
dec
cmc
or
repz
push
nop
xlat
lahf
andb
xor
xchg
std
scas
xor
jge
inc
lods
cmpsl
je
jo
hlt
hlt
sbb
jl
je
xchg
xchg
add
lods
xchg
daa
cli
lock
push
mov
insb
add
jae
mov
mov
xor
mov
sbb
je
repnz
test
mov
adc
sub
test
mov
inc
mov
ret
pop
arpl
xor
mov
pop
jle
adc
xchg
mov
mov
loopne
sub
inc
loop
adc
or
fwait
mov
call
mov
pop
or
mov
vprotd
cmp
mov
je
js
mov
xor
leave
movsl
sti
jge
mov
aaa
mov
hlt
adc
mov
mov
insb
test
mov
adc
bound
cmpsb
cwtl
and
cmp
orb
leave
cmpl
push
pop
add
pop
mov
mov
ds
scas
fsubl
pop
xchg
lea
and
fidivs
aaa
and
repz
cmp
imul
push
sahf
das
mov
lods
push
cmp
inc
inc
mov
fwait
les
bound
mov
mov
movsb
and
mov
mov
xchg
push
xchg
test
stos
inc
in
sbb
sub
jbe
pop
cli
mov
je
mov
repz
ss
adcb
xchg
inc
fwait
mov
imul
lret
in
xchg
scas
aam
and
lahf
and
jae
call
xchg
mov
mov
repz
mov
cmp
mov
mov
loop
mov
test
xor
pop
xor
mov
mov
ja
xchg
loop
jp
pop
cmp
xor
testb
clc
lahf
stos
les
pushf
xchg
mov
jo
out
pushl
mov
stos
xchg
cmpb
xchg
sub
push
sbb
addr16
inc
xor
stc
mov
les
jnp
fs
imul
jmp
xchg
out
andb
adcb
sbb
out
je
lcall
aam
cmpl
idivl
repz
mov
mov
xchg
adc
mov
mov
mov
cli
aas
jb
mov
mov
ja
shlb
mov
lock
push
sahf
lahf
je
in
adc
aam
and
adc
mov
add
mov
into
xor
jb
mov
mov
mov
xchg
movsl
ja
or
mov
out
mov
call
popa
mov
and
xor
int3
push
mov
push
scas
ja
add
inc
out
push
stc
push
cmp
fisubs
call
and
sub
xchg
fisttps
cwtl
sti
mov
test
mov
mov
jae
mov
cmp
scas
push
lahf
mov
test
ret
lea
icebp
dec
dec
ja
lret
loope
inc
mov
movsb
shll
iret
adc
xor
movsl
mov
scas
lea
loope
stos
clc
push
jecxz
pop
movl
mov
out
xor
mov
lods
lret
xchg
mov
mov
popf
mov
clc
ret
mov
je
movntps
in
adc
xchg
inc
cmpsl
xor
xchg
mov
mov
sbb
sub
cmp
testl
scas
or
mov
call
lods
mov
xchg
mov
shrl
xchg
ljmp
movsl
ja
xchg
popa
shlb
cmp
xchg
lock
stc
mov
lea
mov
mov
gs
test
cmp
inc
jb
ljmp
cmpb
dec
sub
mov
aaa
aaa
mov
sbb
je
mov
mov
orb
movsl
ja
xchg
popa
cld
lock
lahf
js
xchg
mov
scas
mov
stos
loop
pusha
push
movsb
movsb
movsb
pop
repnz
lods
jmp
lods
sub
mov
and
and
hlt
mov
cmp
test
cmpsb
aaa
clc
out
enter
loop
cmp
call
incb
mov
test
push
loope
lret
lods
mov
aad
or
jae
nop
mov
mov
inc
je
push
mulb
loope,pt
fldl
pushl
into
push
lock
cmpsb
movsb
mov
fwait
mov
mov
mov
fsubrs
mov
ficompl
xchg
xchg
xor
aaa
mov
out
shrl
jb
add
ljmp
test
frstor
movsb
inc
repz
mov
pop
pop
mov
test
mov
call
xchg
and
in
lahf
inc
popa
shlb
cli
add
repnz
sub
xlat
lods
test
mov
sarl
xchg
pop
xor
xor
outsb
mov
sbb
mov
negb
loopne
hlt
stos
imul
loope
xchg
je
pusha
mov
mov
andb
mov
lods
call
mulb
js
mov
loop
cmp
jb
jnp
stos
insl
xchg
pop
mov
xlat
adc
out
shrb
mov
test
test
or
mov
mov
xchg
xchg
aad
mov
lret
adc
mov
dec
cmp
sub
outsl
mov
xchg
movsb
mov
mov
cmp
fisubrl
pop
jg
mov
mov
loop
mov
jne
xor
movsl
test
jne
xchg
add
and
sub
jbe
cltd
es
scas
cmp
or
and
hlt
mov
aaa
mov
test
mov
mov
loopne
xor
cmp
pushf
out
aaa
jmp
or
test
and
mov
jge
jno
cmp
adc
je
sub
scas
inc
and
cmp
mov
push
mov
xor
jne
adc
push
je
test
push
mov
mov
xchg
mov
lret
pop
mov
cmpsb
js
jp
xor
adc
xchg
test
insl
jg
xchg
xor
cli
mov
xor
sub
jl
add
sarb
movsl
sub
mov
xchg
sbb
push
add
xorb
xor
imulb
or
popa
jne
mov
xchg
cmp
fbstp
andb
mov
mov
mov
inc
shl
test
sub
stos
orb
test
imul
lcall
mov
lods
test
out
mov
stos
daa
shlb
loop
jecxz
into
lods
scas
clc
jge
xchg
lods
push
mov
mov
mov
xor
mov
fcmovne
mov
aam
mov
mov
xor
inc
inc
jmp
mov
xchg
scas
and
adcb
pop
aas
cmp
pop
mov
add
sub
cmp
das
das
mov
jl
lods
or
xor
mov
call
xchg
loopne
movsb
cmpsl
mov
rolb
sbb
xchg
les
push
bound
xor
ret
cs
test
mov
mov
fistpll
sbb
push
stos
mov
scas
mov
cmp
andl
or
mov
inc
sub
ret
lret
mov
pushf
xor
movsb
enter
xor
push
and
clc
pop
push
sbb
mov
icebp
addr16
adc
xchg
leave
push
mov
scas
mov
fwait
popf
add
mov
xchg
mov
repz
mov
es
cmpl
mov
mov
mov
mov
cs
add
lock
pop
insb
cmp
sub
xchg
cli
and
sbb
mov
sbb
jno
xchg
add
cmpsb
sbb
std
xchg
xorb
jl
pop
cs
xchg
mov
cwtl
movsb
sti
pop
mov
ljmp
push
test
push
ss
fdivrs
mov
fdivr
mov
adc
mov
shll
stc
push
cmpb
xor
cmp
xchg
adcb
mov
btc
mov
mov
push
sub
call
fwait
cmp
test
test
jecxz
out
cli
mov
lea
cwtl
shll
adc
mov
addl
cltd
adcb
xchg
cmpsb
xorl
sahf
shrl
cmp
ja
sbbl
or
clc
cli
or
into
mov
movsb
aam
and
lahf
mov
sub
mov
movsl
movsl
shll
mov
enter
stos
shll
sub
mov
mov
lods
shl
rorb
jns
out
push
and
push
mov
inc
fwait
movsl
xor
loop
cmpsb
mov
push
sub
outsl
xchg
int
sbb
ret
mov
call
xchg
xchg
and
or
mov
push
aam
cmp
and
lahf
cmpsb
xor
jmp
xchg
xchg
mov
mov
sbb
cmp
loope
inc
dec
loop
xor
jns
jbe
cmpl
sahf
push
mov
sbb
ffreep
in
out
xor
stos
fsubrl
or
in
mov
sbb
clc
negl
mov
adc
mov
loop
pop
cmp
xchg
cmp
cmpsl
pop
cmpsb
mov
mov
mov
mov
repnz
stos
lea
sub
jno
jg
sbb
xor
cli
sbb
insl
dec
inc
mov
mov
push
and
adc
jbe
mov
adc
stos
repz
test
fwait
pop
fwait
gs
adc
jl
jo
ret
sbb
mov
and
test
hlt
mov
insb
adc
jns
xchg
xchg
jnp
xchg
or
mov
cmpl
mov
jb
loop
repz
sbb
jb
out
lock
mov
jg
mov
sti
xchg
mov
xchg
mov
mov
push
enter
inc
and
adc
lds
jle
nop
lods
xchg
in
jne
mov
jb
xor
mov
aam
mov
adc
xchg
jge
mov
test
imul
add
jo
das
movsl
inc
outsl
mov
mov
clc
sbb
dec
pop
mov
push
mov
sbb
pop
pop
push
mov
out
sub
lahf
lret
jmp
cltd
mov
and
sbb
mov
pop
sti
push
xor
add
aaa
gs
mov
dec
popf
fsubp
jo
push
jecxz
jno
subb
aaa
mov
sbb
arpl
orb
inc
xchg
enter
nop
mov
adc
test
xor
in
adc
add
jnp
sti
subb
jo
scas
in
xchg
mov
lret
mov
insl
inc
movsb
sub
pushl
out
inc
push
cld
mov
cmp
cmp
fsubl
fisubrl
sub
push
sahf
stc
lds
push
mov
xchg
or
filds
mov
pusha
cmp
cmp
ja
xor
pop
or
or
lret
jae
sbb
movsb
mov
adc
lods
cmc
mov
sar
idiv
hlt
push
mov
mov
mov
pop
pop
out
cwtl
movsl
enter
mov
xchg
mov
cmp
stos
xchg
imul
mov
mov
mov
adc
pop
push
in
movsb
sub
mov
push
or
xchg
fdivr
pusha
mov
mov
adc
xor
decb
out
ja
or
cltd
dec
scas
xchg
rorl
and
cmpsb
idivb
movsl
xchg
ss
leave
mov
and
test
ljmp
test
add
decb
mov
xchg
add
xor
cmp
test
mov
xor
xchg
subl
scas
mov
stos
lods
xor
movsl
mov
cmp
stc
adc
push
ljmp
jmp
cmpsb
mov
sub
mov
mov
out
daa
icebp
out
mov
lahf
icebp
arpl
xor
dec
cmp
xor
add
movsl
sub
xchg
add
cmpsl
cmpsl
push
je
lcall
lods
imul
cmp
xchg
mov
jge
icebp
ds
mov
add
cwtl
sbb
je
pusha
inc
xchg
sub
scas
ss
movsl
cs
mov
jae
push
sysexit
sti
cmpsl
push
mov
xor
stos
adc
stos
scas
mov
push
cmp
rcl
int3
jnp
mov
popa
mov
mov
das
mov
enter
mov
mov
scas
scas
mov
mov
repz
mov
lock
add
repnz
stc
mov
divl
adc
mov
mov
cmpsb
xchg
hlt
mov
push
movsl
aas
jp
push
mov
lret
mov
pop
cmc
mov
inc
repz
and
mov
sub
xor
mov
std
hlt
xor
aaa
enter
stos
mov
xor
lods
push
xchg
lods
mov
jle
push
xor
ds
jnp
jge
mov
movsl
cmp
cltd
mov
jbe
mov
cmp
mov
mov
mov
lods
and
stc
fnstsw
mov
xor
notb
jb
xor
out
fidivrl
loopne
mov
je
mov
mov
fstpt
clc
inc
xchg
fstp
cmp
loopne
mov
scas
in
inc
and
lahf
hlt
sub
mov
add
test
cld
jne
xor
and
lcall
inc
mov
andb
subb
test
adc
idivb
andb
adc
cmp
hlt
xchg
das
xchg
mov
es
inc
movsl
xor
jg
enter
and
xor
aaa
and
mov
movl
lahf
test
cmp
mov
jnp
and
xchg
int
daa
sub
imul
das
mov
ja
negb
movsl
out
lret
movsl
gs
inc
hlt
ljmp
aaa
scas
movsl
data16
movsb
mov
mov
movsl
xchg
xchg
scas
xor
gs
xchg
xchg
cmp
loop
mov
mov
inc
dec
movsb
loopw
inc
ljmp
in
xchg
faddl
scas
jge
cmp
sbb
mov
call
pop
inc
loop
fs
data16
push
jo
test
daa
mov
adc
mov
int
in
popa
inc
pop
std
cmp
jmp
mov
mov
sti
mov
dec
clc
cli
mov
mov
lods
stos
cmpsb
jecxz
mov
loop
lods
stos
or
or
sub
scas
mov
adc
insb
adc
mov
arpl
xor
mov
in
mov
insb
fwait
xchg
addr16
decb
test
jne
ud2
push
ret
cmp
push
mov
outsb
lcall
cli
test
mov
add
mov
ds
test
xchg
test
mov
jp
popf
outsl
inc
test
in
sub
aas
cmpsl
imul
sub
les
test
and
jnp
mov
xchg
popl
bound
dec
mov
pop
sub
cwtl
jmp
sahf
das
in
movsl
jno
icebp
adc
jmp
sub
ss
loop
js
and
das
xchg
cli
jmp
mov
jns
aas
movsl
cld
and
xchg
mov
test
incb
ds
pushl
into
mov
mov
addl
xor
jb
sub
xchg
xor
adc
addr16
subb
mov
iret
jnp
xlat
mov
cmp
xchg
mov
fdivs
fwait
or
or
jl
xchg
or
xchg
xchg
xor
enter
jecxz
mov
inc
sbbl
mov
das
aaa
jo
adc
lahf
mov
adc
iret
mov
mov
mov
sti
mov
xor
lahf
popf
jg
cli
cwtl
js
cmp
mov
xor
mov
ja
popa
jnp
lret
mov
out
daa
cmpsb
xorb
cmp
fwait
movl
lods
movsl
inc
xchg
out
jb
andb
ljmp
mov
cmpl
mov
mov
test
mov
cmpsb
aam
iret
mov
out
mov
cmpsb
xor
mov
xchg
xor
and
sbb
jmp
jmp
movsl
fucomip
stos
and
jnp
xchg
push
fwait
xchg
mov
jmp
test
mov
mov
ljmp
xchg
lds
sub
jecxz
dec
cmp
and
mov
cmpsb
adc
push
dec
movsb
or
arpl
movsb
movsb
xor
scas
sti
cmp
in
add
cmpsl
pushl
scas
hlt
movsl
mov
iret
push
scas
mov
add
push
ret
and
cmp
or
fstpt
mov
and
mov
fldenv
test
mov
add
mov
mov
mov
sub
push
mov
scas
sub
adc
loopne
mov
cwtl
decl
mov
sub
fwait
aaa
lods
andb
mov
movsb
aaa
jo
mov
scas
mov
andl
arpl
jmp
popa
lods
jno
or
lahf
jo
icebp
pushf
mov
dec
xor
scas
lods
sarl
nop
push
lods
lahf
daa
mov
jbe
jge
mov
push
test
xchg
cmp
lahf
shrl
pop
in
dec
fwait
lock
mov
jnp
mov
sub
out
pushl
or
test
lret
xor
mov
insb
int3
lahf
pop
sbbb
or
and
xchg
xchg
and
sbb
mov
out
jne
test
cwtl
pop
mov
cmp
mov
and
jo
rolb
stos
adc
mov
xor
pop
shr
movsb
mov
mov
mov
mov
test
and
cmp
stc
js
inc
stc
add
imul
mov
xor
les
mov
lods
xchg
or
and
cmpsb
outsl
stc
fs
fbstp
xor
and
scas
and
mov
cmpsb
inc
test
aas
loope,pn
out
mov
add
and
imul
andl
sbb
out
lea
loopne
and
pop
lcall
adc
fwait
mov
and
cwtl
sti
notb
mov
xor
stos
xchg
mov
loope
lret
xor
mov
xchg
scas
xchg
sub
aas
jns
cmp
xor
mov
xchg
mov
xor
xor
stos
mov
clc
xorb
xor
ret
mov
mov
cmp
mov
je
dec
lcall
lcall
adc
mov
dec
xchg
scas
mov
and
stos
addb
xor
lcall
fwait
outsl
cli
imulb
sti
jmp
movsb
iret
stos
subb
je
subl
jmp
je
and
mov
out
jge
mov
loopne
mov
jb
xor
fwait
sbb
or
sahf
je
lods
ret
fstpl
push
jnp
sarb
jnp
and
jp
xchg
out
insb
orb
scas
lahf
dec
jg
test
loope
dec
shll
imul
scas
es
mov
xor
cmp
sti
sub
xlat
andb
xor
inc
stos
mov
jno
mov
fstl
adc
pusha
fiadds
lock
mov
lahf
movsl
fsubrp
orb
xchg
lods
outsb
iret
xchg
mov
pop
sbb
xor
mov
fildll
scas
xor
aaa
scas
call
jecxz
ljmp
mov
mov
data16
mov
movsb
or
mov
movsb
das
daa
gs
movsb
sarb
jnp
movsb
xorb
cmp
movsb
push
das
test
fwait
mov
inc
movsb
mov
andb
test
mov
mov
outsl
testb
and
add
adc
cmp
xchg
pop
mov
inc
sti
nop
mov
lods
rcrb
test
or
lods
mov
mov
push
and
xchg
cmpsb
mov
imul
sub
in
dec
fs
test
cmp
xchg
add
cmpsl
stos
xchg
mov
jo
ret
movsl
mov
test
xchg
aaa
jmp
xchg
stos
scas
jno
add
jg
sub
dec
lahf
out
mov
shlb
xor
add
jge
sbb
mov
mov
subl
in
movsb
sbb
loopne
pop
mov
and
and
cmpsl
cmpsl
or
pop
mov
leave
xchg
ret
rolb
inc
notl
inc
cld
mov
movsl
movsb
ss
xor
xor
pop
pushf
je
mov
and
cmp
sub
inc
fwait
xchg
xchg
mov
negb
sti
pusha
adc
mov
xor
and
or
jl
insb
incb
roll
repnz
jg
adc
cmpb
xor
dec
mov
mov
stc
jns
cmpsl
fldl
popa
lcall
xchg
loop
fwait
call
test
in
sbb
ret
or
mov
notb
lods
stos
stos
inc
mov
fidivrl
sti
cmp
mov
jbe
add
mov
es
js
xchg
test
je
inc
push
inc
pop
in
cmp
pop
mov
jle
xor
pushf
hlt
sub
jno
jge
adc
fwait
decl
test
xchg
inc
mov
mov
in
jne
mov
and
lock
xacquire
inc
stos
mov
push
jbe
cmp
mov
loope
imul
int3
test
sub
sbb
mov
mov
mov
test
pop
mov
mov
xor
cwtl
mov
mov
sahf
popl
mov
mov
mov
mov
jp
xchg
movsl
loope
incl
nop
inc
mov
mov
inc
mov
das
sbb
int
adc
sub
sbb
jg
jp
xor
mov
fsubs
lock
ss
jl
lea
sarl
sub
repnz
xor
mov
jo
cmp
mov
sub
je
xor
int3
and
imul
movsb
sub
xlat
mov
popa
xchg
jg
in
xor
push
das
cwtl
xor
mov
inc
mov
movsl
mov
xchg
xor
mov
adcb
test
adc
xchg
cmp
pop
das
push
rcrl
outsl
imul
sub
dec
xchg
mov
loope
je
mov
jns
stos
cltd
adc
int3
pop
stos
xchg
mov
jp
sbb
cwtl
or
or
jne
test
mov
imul
ljmp
ljmp
ds
pop
sub
and
cmp
add
mov
rorb
sub
xor
les
scas
push
and
mov
mov
scas
out
mov
xchg
mov
cmp
lahf
dec
repnz
into
mov
and
adc
call
sbb
ret
xchg
movsl
xchg
add
nop
xchg
cmp
test
test
test
add
xor
mov
and
jnp
jae
inc
enter
test
test
clc
cwtl
pop
jbe
mov
xchg
xor
xor
sti
data16
xor
movsb
cmp
mov
mov
xor
mov
mov
dec
mov
in
pushf
rcrb
push
imul
xchg
mov
pop
xchg
je
sub
jno
fwait
cltd
addr16
jne
xor
stos
test
mov
mov
fs
xor
lods
xor
mov
and
testb
cmp
jb
xchg
mov
cmp
lods
and
mov
pusha
sbbb
and
lcall
mov
pop
jbe
jnp
mov
in
cmpsb
out
mov
dec
sub
and
xchg
mov
out
mov
xchg
lods
adc
mov
jge
mov
fcmovnu
imulb
stos
dec
out
dec
es
test
pop
cmc
test
je
movsb
jg
xor
lods
mov
and
mov
lods
cmp
subb
call
test
cmpl
inc
flds
mov
xor
or
mov
pop
lds
fmuls
or
and
sbb
mov
sub
fwait
xchg
insb
xor
ljmp
mov
push
scas
insb
mov
mov
adc
sbb
fwait
test
lods
fwait
dec
mov
adc
mov
cmp
lods
jo
pop
xor
sub
je
stos
and
popa
notb
xchg
test
jo
inc
xchg
imul
inc
aas
push
mov
ja
shrb
out
dec
jge
mov
in
or
les
stc
xor
out
mov
mov
mov
stos
or
mov
mov
cmp
cmp
or
or
jo
lock
mov
movsl
sbb
nop
ljmp
mov
stos
jno
push
daa
lods
sti
jp
inc
movsl
movsb
loop
iret
hlt
test
fdivs
and
stos
sarl
cmp
sub
xchg
mov
mov
xor
fwait
mov
test
xchg
rolb
loopne
fwait
mov
xor
mov
sub
cmpsl
pop
ret
xchg
out
test
popl
movsb
jp
inc
movsb
xorl
xchg
enter
add
jle
cld
mov
xor
rolb
pop
push
jbe
iret
shlb
enter
cmp
add
clc
imul
hlt
nop
push
cmpsb
sub
cwtl
pop
mov
loop
repz
mov
mov
xor
add
mov
test
pop
fs
repz
test
cmp
mov
mov
rolb
cmp
loop
cmpsb
ret
mov
stos
stc
adc
mov
xor
xchg
mov
xchg
xchg
cmp
xor
lods
mov
mov
inc
test
loope
andb
movsl
mov
adc
sbb
sbb
sti
fwait
loop
inc
or
xchg
mov
stos
xorb
jg
mov
mov
mov
les
test
cwtl
ljmp
sbb
mov
and
gs
dec
and
mov
adc
imul
xchg
inc
xchg
mov
das
jne
push
mov
jl
sarl
jbe
jl
inc
mov
jb
sbb
adc
lea
je
movsb
xchg
out
cmpsb
cmp
or
xor
jg
mov
test
movsb
push
jne
test
movsb
stos
add
test
ljmp
and
cmp
mov
mov
add
repz
or
or
call
inc
mov
or
sti
into
sbb
mov
xchg
pop
cwtl
loopne
xor
sub
enter
mov
cmp
mov
stos
pop
hlt
subl
test
mov
adcb
call
and
mov
jl
cmp
push
mov
les
jg
mov
jge
pop
mov
nop
fwait
sbb
jnp
xor
fnstenv
sahf
add
push
xchg
xor
add
andb
and
movsb
scas
xchg
and
mov
test
mov
cmc
loop
jbe
sbb
dec
mov
jbe
je
cltd
add
mov
or
mov
mov
call
movsb
jmp
mov
aas
ret
mov
mov
inc
ljmp
xor
cmp
je
mov
xorl
sub
mov
scas
mov
xchg
mov
lods
push
xchg
rclb
inc
jl
subl
insl
mov
hlt
cmp
mov
xchg
xor
popf
xor
mov
test
stos
test
ljmp
xchg
push
imul
push
lea
pop
mov
mov
les
scas
int
mov
imul
rorb
cmp
mov
decb
cmpb
scas
mov
jmp
mov
fwait
shrb
jb
test
in
pop
jae
mov
jo
jle
xchg
adc
scas
or
repz
in
mov
adc
subb
push
cmp
xor
movsb
jp
cmp
cmpsb
push
sbb
adcb
cltd
mov
xor
sbb
lahf
pop
xchg
mov
scas
cmp
test
stos
and
add
mov
hlt
jmp
or
sub
mov
je
lret
jg
and
and
add
cmp
mov
xchg
add
mov
mov
pop
lcall
mov
pop
mov
xchg
xchg
mov
scas
orb
shlb
sbb
mov
movsl
mov
or
mov
into
movsb
and
fs
rolb
pushf
das
mov
push
jne
es
fwait
xchg
mov
mov
sbb
mov
das
cli
test
jne
test
mov
xor
daa
in
mov
cmp
lahf
shrl
cli
test
mov
js
lahf
jl
outsb
push
or
mov
mov
mov
cmp
mov
mov
mov
or
movsb
sub
mov
fsubrs
or
mov
mov
clc
aaa
cwtl
mov
push
jmp
popf
lea
mov
and
and
mov
mov
lods
mov
sbb
je
cmp
aas
pop
adc
imul
push
fidivl
adc
loop
xor
jae
and
stos
sbb
mov
cmp
scas
dec
xor
jnp
sbb
xchg
cld
jne
lcall
fnstenv
or
adc
iret
mov
repnz
pop
cmpsl
pop
stos
insl
aad
jl
jnp
xchg
add
fwait
xchg
mov
daa
mov
ljmp
fwait
mov
in
ss
leave
jne
mov
jne
mov
fnstcw
adc
test
push
sub
inc
movsl
pop
and
orb
add
mov
std
jno
dec
xchg
fstpl
jge
out
mov
mov
add
mov
sbb
imul
loope
loopne
or
sub
mov
sbb
scas
out
adc
sub
out
sbb
arpl
sbb
loopne
test
andb
gs
fsubrl
and
lcall
sub
sub
jmp
hlt
xchg
cwtl
test
sti
push
rcrb
loop
push
test
jl
das
cmpsb
arpl
loop
out
jmp
arpl
mov
scas
push
mov
test
mov
ljmp
imul
push
mov
xchg
nop
out
enter
testl
adc
cli
enter
call
mov
cwtl
lods
mov
jp
mov
sub
cwtl
popa
scas
call
mov
enter
dec
pusha
pop
scas
mov
mov
cmp
add
mov
mov
call
loop
xor
clc
popw
cltd
nop
bound
mov
adc
andl
push
lcall
sbb
daa
push
sub
mov
inc
push
stos
scas
and
in
xor
sub
dec
daa
mov
mov
cmp
rcl
arpl
pushf
test
cmp
sbb
ret
jle
cmpsb
cwtl
scas
or
js
mov
push
and
scas
lods
and
cmp
cmpxchg
jge
cmpl
fwait
std
mov
and
out
outsl
ljmp
sub
push
xor
pop
xchg
test
xchg
test
lods
jmp
in
cmp
lods
lods
add
mov
mov
mov
mov
lahf
inc
mov
popf
daa
gs
mov
nop
popa
scas
bound
mov
fwait
mov
mov
jnp
fiaddl
pop
out
or
mov
fwait
and
inc
mov
nop
insb
js
test
push
out
sbb
test
fwait
and
xor
mov
inc
adc
movsb
repz
nop
scas
cld
movsl
mov
mov
dec
mov
mov
adc
xor
xor
decl
nop
fisubl
bound
pop
pop
lock
xor
out
and
cltd
ja
test
aad
xchg
stos
pop
jb
xchg
cld
mov
xor
lcall
xchg
mov
ds
xchg
and
popf
and
mov
out
mov
out
cmpsb
ljmp
pop
and
and
test
cmp
mov
loope
fwait
mov
in
and
add
and
cmpsb
and
mov
in
mov
mov
cwtl
or
sub
enter
test
mov
test
mov
out
loope
movsb
add
xchg
loopne
movsl
outsb
mov
mov
push
mov
repnz
mov
xchg
es
subb
cmp
xchg
insb
mov
stos
cli
xchg
movsb
sub
xchg
js
andb
add
mov
xchg
scas
inc
cmpsb
test
push
xor
daa
test
mov
in
pusha
sub
xchg
lods
mov
mov
cmpsb
addb
decl
movsb
sub
les
mov
in
jnp
out
mov
xchg
loope
inc
pop
mov
mov
mov
xor
fs
loopne
xchg
add
cmpsb
sub
mov
fs
jo
xchg
call
loopne
loop
in
pop
leave
cs
sbb
xor
and
add
and
test
push
pop
xchg
rorb
xor
and
cmp
out
scas
test
subl
stos
jl
lea
int3
push
sub
lret
pushf
stc
lds
leave
push
arpl
jmp
dec
adc
out
addr16
xor
jne
jae
ja
je
gs
or
nop
cmpl
xchg
adc
mov
nop
iret
xor
mov
popa
xchg
lock
in
adc
addr16
sub
out
mov
or
sti
stc
lret
and
mov
jb
mov
jg
jns
mov
ficomps
pop
cmpb
add
adc
movsl
fstps
xor
pop
out
dec
lods
test
push
jp
sbbb
fisubl
add
and
rcll
sbb
mov
mov
add
jbe
orb
cmc
jecxz
mov
mov
xchg
mov
xchg
mov
pop
cmp
scas
mov
pop
roll
xchg
enter
jno
into
rep
clc
inc
movb
xchg
nop
enter
jb
je
sub
enter
push
popl
and
mov
push
mov
or
test
adcb
repz
test
and
cmp
pop
cmpsb
scas
add
mov
mov
movsl
lods
inc
add
jno
cmp
and
nop
lcall
pop
out
cld
sub
lods
das
sub
inc
jp
out
rclb
test
sarb
icebp
pop
and
cmp
in
fs
dec
and
cltd
cmp
ret
testl
xor
jo
mov
in
cld
test
test
ds
nop
insb
pusha
add
inc
inc
lret
gs
stc
mov
push
insb
cmpsl
nop
mov
mov
dec
loop
mov
xorb
movsl
inc
je
stos
js
andb
mov
mov
sbbb
sti
cwtl
cmp
mov
int
ljmp
lret
sbb
cmp
push
dec
test
sub
adc
ror
mov
xchg
mov
fwait
cmp
or
pushf
inc
sti
nop
cmp
pusha
mov
mov
mov
xchg
sbb
dec
mov
adc
add
and
mov
test
jecxz
nop
xchg
xchg
fimuls
fidivs
scas
loopne
int3
addr16
cmp
fs
fsubrs
mov
mov
mov
nop
hlt
mov
add
jne
movsl
xchg
fistl
ja
xchg
loop
add
xchg
ret
loopne
push
cmpsl
roll
fdivrs
xorl
cwtl
das
test
pop
jecxz
adc
pusha
and
aaa
sbb
lds
sbb
lods
fs
or
scas
ret
iret
sub
andb
stos
sbb
sub
mov
xchg
ljmp
test
rorl
in
dec
data16
or
scas
out
out
dec
mov
je
jecxz
daa
ret
cld
xor
int
cmpsb
xor
and
cmp
lahf
mov
or
mov
out
into
push
in
push
sub
jge
ret
pop
insb
test
aam
and
cld
pushf
mov
and
push
dec
adc
fwait
aam
lea
stc
dec
int
rorl
mov
and
or
jns
pop
cmpsb
jecxz
ljmp
cmpsl
loop
out
pop
mov
xor
dec
pusha
jns
jmp
lods
loope
in
and
loopne
sti
mov
dec
xchg
ds
push
in
pushf
popa
int
pop
lods
inc
and
ss
pusha
sub
mov
adc
pushf
push
cmp
popf
stc
sbb
pusha
stos
loopne
dec
mov
mov
outsl
outsl
mov
adc
sub
ret
ds
xchg
scas
loopne
loope
pop
adc
subl
lea
dec
dec
adc
and
dec
arpl
jae
dec
add
cmpsl
adcl
bound
cmpsb
push
les
das
mov
xchg
ret
xchg
clc
or
push
push
adc
mov
out
and
leave
or
push
adc
or
cmp
out
test
xchg
mov
pop
xchg
cmp
jp
inc
pop
loopne
lcall
xchg
cld
dec
mov
xchg
dec
int3
sbb
loopne
cmpsb
jg
rorl
xchg
fmul
xchg
mov
or
adcl
xchg
inc
sub
out
push
pusha
in
cmp
jle
test
xor
sub
push
repz
leave
ret
sbbl
xor
cmp
fsubr
mov
and
jg
push
pop
jnp
add
dec
mov
pusha
and
ret
data16
sbb
aaa
cmpsl
aaa
and
and
sbb
aad
pusha
dec
sub
mov
adc
andl
mov
xor
and
and
xchg
popa
ret
movsb
push
fsub
pushf
mov
icebp
sub
cmp
or
scas
aaa
std
movsb
adc
fsubs
xchg
push
cs
movsb
jecxz,pt
cmp
test
sahf
call
mov
add
xchg
jnp
insl
test
push
loop
pop
sbb
jno
out
jo
and
sbb
inc
pusha
mov
out
loope
in
out
loopne
add
mov
mov
outsb
sbb
xchg
ret
int3
cs
mov
xchg
rorl
cmpsb
cmpsl
sub
xchg
push
in
mov
fcoms
cmpsb
xor
loopne
das
and
mov
test
sub
mov
outsl
fwait
mov
mov
push
rcrb
mov
cs
out
cmpsb
popf
sbb
in
fs
aam
push
enter
mov
call
adc
push
call
adc
xchg
mov
loopne
es
push
std
xchg
xchg
sub
out
pop
scas
fsubs
mov
test
popa
pop
jl
int3
dec
sbbl
test
dec
lds
cli
fdivrl
mov
fwait
lods
xchg
and
into
xchg
dec
push
cmpsl
and
sub
lods
ja
adcb
adc
xchg
dec
push
push
out
es
in
loopne
test
movsb
addr16
mov
add
or
or
push
adc
inc
lods
movsl
andl
pop
sahf
mov
sbbb
and
jae
mov
cmpsl
dec
lea
sub
cwtl
les
je
sub
fadd
push
imul
loopne
dec
dec
xchg
inc
rclb
or
lods
xchg
loop
mov
test
shll
loop
push
push
fistl
ja,pn
fdivrs
lcall
or
dec
sub
daa
or
imul
cmpsl
ret
adc
scas
loope
push
xor
cwtl
loopne
mov
insb
ret
adc
xchg
enter
cmpsl
push
int
xchg
adc
out
stos
test
scas
mov
xchg
inc
nop
push
aaa
fisubrs
test
mov
test
ret
stos
sbbb
lods
pop
bound
std
xchg
jmp
or
insb
nop
and
dec
xor
daa
lahf
xchg
ret
popa
ret
push
stos
sub
cmpsl
pop
test
es
loopne
in
and
movsl
je
mov
loop
out
add
imul
add
lret
cmpsl
bound
lea
fsubr
jmp
sub
lods
movsl
iret
call
pop
movsl
adc
add
iret
in
mov
in
and
dec
test
outsl
xchg
out
adc
jge
adc
pop
andl
out
lcall
mov
or
daa
sbb
cmpsl
lea
lea
xchg
addr16
pusha
jae
in
test
rorb
cs
sahf
addr16
test
lahf
inc
loope
fucomi
imul
pop
mov
dec
pop
mov
dec
ret
pop
scas
xor
xor
mulb
cmp
add
mov
pushf
rcrb
pop
jbe
and
sbb
mov
fsubr
lcall
jecxz
or
push
xchg
sub
mov
in
pusha
addr16
shlb
out
adc
test
xor
stos
arpl
sub
xchg
xchg
repz
aas
add
insb
imul
jmp
ss
call
int3
mov
scas
loopne
mov
push
mov
inc
ljmp
pop
adc
ret
xor
mov
adc
push
dec
mov
les
in
lds
inc
cmpsl
jb
hlt
xchg
mov
scas
aaa
out
cmp
xchg
xlat
in
mov
lods
cwtl
ljmp
addr16
sub
in
xorl
mov
sub
out
daa
mov
fidivrs
mov
push
jg
test
mov
loopne
cmpsb
mov
adc
inc
lahf
cmp
and
adc
jo
and
xlat
mov
aad
sub
mov
and
adc
psllw
outsl
lret
mov
mov
sub
and
pop
xchg
cwtl
insl
movsb
out
aaa
repnz
loopne
and
out
stos
push
scas
xchg
pusha
xchg
pusha
pusha
cmpsl
add
mov
and
daa
push
mov
mov
pop
loope
and
mov
adc
mov
lods
pop
jns
cmpsb
mov
data16
cli
arpl
loope
mov
push
loop
mov
adc
and
mov
mov
out
loopne
ja
stos
and
loop
js
ret
movsb
mov
push
xchg
shr
std
lock
pop
in
and
in
mov
clc
addr16
mov
enter
mov
aam
scas
insb
out
cmp
sbb
mov
sub
scas
out
jo,pn
divl
bound
repnz
mov
divb
js
aas
jg
sub
cmp
mov
mov
inc
add
mov
sti
cmp
dec
iret
cmovg
dec
add
inc
mov
push
xchg
xlat
pop
mov
adc
mov
mov
push
fcomps
pop
mov
lcall
xchg
rcll
push
sahf
fidivs
xchg
lock
daa
lcall
in
or
dec
shll
xchg
jnp
jae
mov
daa
and
hlt
addr16
fs
mov
dec
loopne
push
and
orb
mov
push
jo
xor
sahf
add
push
push
sbb
inc
xchg
jmp
int
mov
inc
pushf
push
pop
jno
mov
push
xlat
sub
clc
or
or
pushf
or
dec
in
dec
cmp
push
cwtl
jno
sub
or
mov
and
adc
in
ret
add
mov
lret
xchg
mov
ja
stc
scas
jae
and
enter
pop
mov
lods
mov
ljmp
sahf
pop
jecxz
lahf
jg
loopne
adc
and
mov
xchg
int3
adc
clc
pop
dec
add
mov
cmp
les
popa
add
dec
xor
arpl
pushf
popa
cwtl
cmpb
fidivl
mov
ret
das
insl
mov
js
mov
pop
shl
iret
mov
stos
push
jp
mov
cmp
and
mov
shrb
jb
outsl
test
icebp
ret
enter
mov
and
sbb
sub
ja
ret
popf
mov
cwtl
inc
xor
add
sarl
cmpsb
mov
lret
sbb
or
jmp
std
push
pusha
jp
lcall
mov
push
iret
or
push
pusha
jle
aas
sti
sbb
sub
movsl
pop
in
mov
ja
shrl
mov
lcall
das
cmc
xor
jbe
aaa
mov
hlt
or
mov
dec
ret
shl
imul
fmuls
jl
adc
das
mov
notb
jno
pop
push
leave
mov
push
cmp
shll
xor
jecxz
or
and
inc
sub
push
arpl
jne
mov
sub
outsl
xor
std
jg
aam
stos
in
and
mov
iret
leave
andl
or
xor
addr16
fwait
jle
popf
mov
cmp
subb
pop
mov
mov
lds
scas
pushf
popf
sbb
xlat
outsb
mov
ja
mov
jne
andl
jmp
cmp
loope
sbb
pop
mov
lds
filds
xor
mov
mov
out
aam
cmc
stos
sbb
mov
mov
inc
mov
scas
pop
adc
mov
aad
push
xchg
loopne
and
jge
or
pushf
cli
jmp
cmp
pop
cs
into
addb
popl
orl
adc
mov
xor
mov
mov
jns
jbe
leave
xorl
repnz
sbb
mov
push
or
jp
pop
mov
insb
cwtl
mov
loop
stc
addr16
cwtl
xchg
sub
xchg
pushf
aas
mov
bnd
lret
or
subb
movsl
mov
mov
loopne
popf
dec
mov
stos
test
sahf
cmp
mov
push
mov
and
lea
bound
movsb
jb
fdivs
cmp
jge
mov
add
xchg
jmp
in
ffreep
cmp
popf
add
daa
jne
ficomps
push
push
mov
bound
in
nop
std
and
int
mov
data16
cmc
jle
mov
xchg
dec
fs
mov
inc
push
out
mov
int3
mov
jge
and
pop
cmc
mov
sahf
jns
mov
repz
push
mov
sub
jne
mov
outsb
mov
scas
jle
stos
insb
loopne
mov
js
cmp
xchg
arpl
jo
sahf
xorb
or
mov
xchg
sbb
loope
pop
rcr
popa
in
jo
cwtl
cmpsl
or
push
stos
test
mov
movl
aaa
inc
fcomp
and
cmp
nop
outsl
push
mov
fsubrs
mov
popa
ret
loopne
push
ds
lods
sub
popf
enter
mov
jmp
mov
jecxz
jne
jle
loop
in
adc
lods
mov
addr16
jae
mov
lcall
rorl
push
out
movsl
leave
mov
push
mov
jle
mov
daa
punpcklwd
mov
fcompl
repnz
cmpsb
jle
loopne
int
dec
inc
dec
mov
test
or
sbb
pop
bound
loope
stos
sub
pop
cli
sahf
pusha
sbb
xchg
dec
xorb
mov
ss
push
jno
sbb
jae
scas
sub
lock
dec
idivl
sahf
mov
andl
popf
fistpl
inc
pop
add
loope
xchg
inc
fmul
outsb
xor
cli
andb
cmp
ficoms
mov
mov
sub
push
gs
shlb
jae
sahf
jo
cwtl
mov
xchg
push
jb
add
and
dec
cmp
push
movsb
nop
mov
lds
ja
jae
jb
mov
adc
mov
sbb
inc
gs
adcb
push
stos
fcoml
xchg
loope
mov
dec
leave
sbb
push
jne
idivb
mov
cmpsl
add
sub
jmp
cmp
push
inc
shll
dec
mov
sub
xor
pop
je
seto
sub
jo
xchg
cli
nop
sti
jbe
mov
mov
lret
mov
mov
js
jae
xor
std
mov
mov
pop
pusha
mov
lret
aaa
push
or
nop
jl
add
insl
loopne
fwait
movsb
mov
fstpl
mov
jp
or
insl
adc
fcoms
jle
mov
jns
das
inc
mov
mov
cmpsb
xchg
outsb
data16
testl
sbb
shlb
jmp
push
add
cwtl
repnz
test
mov
fldt
fwait
in
data16
pusha
mov
xlat
gs
pop
dec
xchg
shll
or
xor
pop
adc
fcomp
movsl
fisubrl
xchg
sub
cld
xchg
xchg
sub
mov
and
fiaddl
add
mov
jmp
dec
sbb
ja
hlt
int
aaa
mov
mov
popl
addr16
inc
inc
out
test
popa
bound
pop
mov
mov
loope
dec
fcomps
add
cli
repz
ficoml
popa
ret
repnz
jno
xor
scas
pop
stos
mov
xchg
dec
shrl
ret
pop
mov
adc
xor
xchg
mov
js
ds
sub
aaa
cmc
ficompl
iret
stc
and
shl
mulb
clc
mov
mov
insl
pop
ljmp
outsb
mov
pop
fwait
or
mov
xor
subl
cmp
movsl
test
es
movsb
std
xor
std
pop
loopne
movsl
sbb
pop
loopne
add
scas
mov
stos
andb
pop
scas
loop
pop
jmp
adc
cwtl
mov
lcall
sub
jbe
fistpll
das
add
pop
sahf
addr16
mov
pop
loopne
fsubs
cli
bound
and
movsl
cmpsl
mov
and
and
push
addr16
movsl
xor
cwtl
scas
push
out
add
leave
pop
in
daa
and
lods
stos
inc
xor
addr16
push
xchg
call
xor
addr16
push
in
adc
ja
xchg
js
pushf
inc
sbb
push
enter
lods
test
sub
and
das
jb
rorl
and
mov
mov
cmp
cli
in
daa
test
xchg
stc
push
movsb
sub
xor
call
in
inc
lcall
push
mov
sub
fwait
aaa
loope
enter
test
or
and
mov
in
inc
lcall
jge
dec
xor
mov
stc
push
movsb
adc
pop
jns
add
movsb
cmp
sub
test
mov
insb
mov
loop
test
pop
mov
mov
mov
out
rcll
sbb
movsb
xor
or
fwait
loop
push
sbb
test
into
push
push
test
fs
scas
icebp
mov
xor
inc
movsb
fistpl
imul
jb
sbb
movsb
mov
popa
sbbb
and
repnz
pop
bound
divb
out
mov
divb
and
imul
mov
xchg
data16
mov
div
and
movsl
movsl
mov
mov
in
call
divb
and
mov
out
and
fsubl
or
nop
xchg
addr16
pop
int3
dec
dec
and
fs
call
jb
arpl
push
cltd
stos
mov
daa
sub
and
xchg
sub
cmpsl
test
imull
xchg
sahf
pop
dec
int
pushf
add
lret
adc
or
rcrl
call
mov
rorb
addl
aam
lods
pusha
xor
and
xchg
cmpsl
les
rcr
xchg
sahf
shll
lcall
scas
iret
mov
mov
fisubrl
or
mov
jge
sub
daa
cmpsl
sub
mov
pop
pop
out
and
cmp
and
jns
mov
lods
mov
inc
sbb
rolb
xchg
fmull
shrb
test
push
pushf
xchg
popa
hlt
daa
cmp
dec
scas
push
loop
stos
cmpsl
rorb
loope
lds
movsl
repnz
loop
sub
mov
mov
jo
call
stos
call
mov
xchg
loope
sub
sub
test
mul
nop
add
fstl
ljmp
jo
call
jmp
and
out
adc
adc
inc
jb
adc
adc
fs
out
mov
sbb
daa
iret
in
lods
arpl
loop
mov
sti
ljmp
xchg
and
les
fstpl
aaa
cmp
addr16
pop
pushw
dec
lds
add
test
bound
int3
push
xorb
ss
pop
outsl
fidivs
adc
fisubrs
mulb
sbb
xchg
arpl
mov
sub
imul
mov
ds
dec
mov
sahf
rcrl
aad
nop
inc
jle
dec
popf
and
js
inc
xor
mov
and
adc
push
loopne
add
xor
jmp
and
rorb
mov
sahf
inc
pushf
jge
neg
jns
cmpxchg
mov
mov
ja
add
bound
dec
aas
into
mov
xchg
pop
dec
pop
mov
repnz
ja
stc
mov
enter
mov
sbb
fsubl
jo
or
and
movl
arpl
jle
pusha
aas
add
cmpsl
pop
mov
in
inc
fwait
bound
mov
mov
push
mov
inc
enter
out
mov
lret
ret
add
orb
flds
pop
mov
movsb
imulb
pop
fildl
fldl
repz
aam
xchg
imul
jp
pop
pushf
mov
outsb
xor
scas
test
mov
mov
dec
xchg
fcoml
fwait
jmp
ss
cltd
lret
pop
in
aaa
push
mov
xchg
mov
int3
mov
inc
mov
jp
lret
ret
mov
mov
inc
insb
out
lea
push
and
inc
inc
stos
inc
add
mov
pop
xchg
imul
adc
aam
cmpsb
xchg
in
and
lea
add
outsb
addr16
movsl
lret
and
mov
mov
sub
sub
cmp
mov
fisubs
pop
icebp
ret
inc
inc
fnstcw
rcl
mov
loopne
sub
dec
mov
sbb
test
cmpsl
imul
xor
scas
dec
fwait
xchg
jns
push
shlb
xchg
int3
fldcw
rorb
loop
scas
aaa
jno
cwtl
mov
cmc
mov
add
les
dec
ljmp
adc
test
or
sub
dec
dec
and
xchg
jns
jb
mov
sar
insl
mov
cli
sub
in
cmp
push
jmp
lods
sub
sbb
push
jno
int
inc
incl
pop
bound
or
jb
aaa
xchg
call
test
jmp
imul
frstor
push
in
and
lcall
sub
add
subl
mov
in
jnp
out
mov
mov
call
test
xchg
in
mov
mov
cmpsl
orl
lea
subb
popf
mov
mov
jmp
cmp
fwait
lods
sbb
ret
out
call
cmp
stos
es
xor
push
sahf
cmp
or
in
lods
movsb
cmp
xor
sub
sbb
xchg
or
jbe
call
xchg
loop
fsubs
xchg
test
es
inc
dec
push
jne
out
je
outsb
and
imul
jo
andb
pop
sub
imul
push
xor
xchg
scas
test
jne
jle
enter
xchg
ljmp
push
pop
cmpsl
outsl
and
add
loop
lahf
add
daa
mov
int3
dec
push
mov
mov
call
sub
mov
push
add
mov
sub
in
es
es
cmp
lret
fisttpll
lods
test
ss
gs
push
jmp
inc
xor
in
mov
into
xchg
int3
xor
lea
and
jmp
push
dec
jp
inc
add
dec
xor
stos
outsb
mov
fldcw
xchg
orl
mov
mov
lcall
lods
sbb
lods
shll
mov
loop
lods
xor
pop
cltd
fnsave
mov
xchg
xchg
sbb
mov
push
lahf
push
mov
mov
inc
push
add
lea
lods
jp
mov
movsb
je
or
dec
lods
test
mov
mov
sub
push
dec
xchg
sbb
fwait
sbb
inc
xchg
daa
mov
dec
xchg
repz
popa
and
test
sti
int
cltd
iret
call
faddl
popa
add
adc
sbb
sbb
dec
mov
xchg
sbb
lea
outsb
aas
lods
pop
hlt
jp
and
jno
add
xchg
add
in
cmp
dec
pop
jp
dec
jg
in
ret
cmpsl
mov
repz
xor
fwait
jns
mov
out
stos
pop
mov
lret
sbb
fildll
push
and
out
hlt
inc
xchg
out
sub
cmp
hlt
dec
xor
inc
inc
lea
cmp
pop
mov
mov
push
mov
sbb
dec
jg
push
mov
outsl
mov
frstor
xor
pop
jg
jns
add
mov
jmp
inc
cs
divl
cmp
test
xor
cmpsl
movsl
nop
push
aam
frstor
rolb
or
loopne
into
push
adc
in
stos
xchg
fst
xchg
aaa
mov
ret
dec
movsb
push
movsb
int3
lds
call
addr16
cld
and
cmp
mov
xor
jmp
or
adc
loop
adc
mov
add
or
repz
xor
mov
mov
rcl
push
push
movsb
ljmp
and
lea
add
xchg
outsl
ja
mov
xor
sub
das
in
sbb
mov
or
stos
out
scas
fiaddl
and
push
int3
dec
dec
or
push
jp
sarb
or
add
add
scas
mov
popf
xchg
push
add
mov
rclb
mov
xor
mov
cltd
subb
push
icebp
and
lcall
adc
pop
cs
mov
jne
jle
cli
mov
cwtl
mov
outsl
daa
jb
add
jno
inc
push
lahf
loop
and
imul
mov
imull
inc
cld
sahf
sbb
xor
mov
addr16
lock
xor
lahf
xchg
xchg
push
mov
outsb
adc
ljmp
lods
gs
arpl
or
mov
repnz
out
idivb
arpl
pop
pop
gs
fstps
xchg
pop
mov
dec
shl
jle
lret
hlt
ljmp
push
out
gs
dec
sbb
inc
xlat
cmc
shlb
dec
sub
out
jg
mov
sbb
pop
xor
insl
push
fs
movsb
adc
mov
jb
sub
stos
add
jle
pop
mov
mov
test
adc
fsubl
sub
lods
out
jno
sbb
in
mov
outsl
mov
cmpsb
jo
inc
mov
fbld
fnstcw
sub
lea
inc
mov
sub
jo
inc
fld
lea
mov
jg
and
sbb
push
call
cmp
sub
test
sbb
movsb
push
mov
and
or
cmp
mov
pop
xchg
int3
mov
cmpsb
jge
mov
shlb
outsb
adc
loop
imul
fnstsw
call
mov
pop
imul
mov
sbb
or
pusha
inc
das
out
aaa
pop
fidivs
fcmovne
mov
fwait
cwtl
dec
and
xchg
xchg
dec
push
push
xor
testb
das
popf
mov
xchg
popa
sbb
add
push
rclb
sahf
and
cmp
xchg
adc
scas
stos
fisttps
jle
in
mov
adc
pusha
outsb
sbb
lods
mov
or
rolb
aas
pop
and
mov
les
arpl
scas
movb
daa
sub
insb
cmpsl
mov
test
adc
out
call
or
outsb
ja
fsubrs
push
ss
mov
push
dec
mov
or
dec
cmpsb
hlt
movsb
and
dec
mov
lods
and
lret
rorl
fs
mov
ss
jecxz
aad
jp
sahf
or
in
call
sbb
sbb
neg
arpl
call
pop
inc
ljmp
addr16
arpl
ss
xchg
daa
jno
sbb
iret
inc
cwtl
ss
jnp
jno
sbb
rdmsr
call
test
jecxz
mov
fsubrs
mov
xlat
rclb
or
es
mov
ret
push
rorb
jge
inc
sub
sub
mov
lods
ja
orb
loop
jnp
lods
jno
inc
jno
add
pop
rcll
test
sbb
jo
push
call
xchg
out
mov
test
jge
ret
push
or
pop
xchg
mov
sbb
sbb
fwait
mov
adc
stos
movsl
dec
xlat
scas
mov
sub
mov
loop
cmpsl
rcrl
lea
loop
jo
andb
dec
cmc
mov
pop
out
sub
sub
jnp
lods
jmp
push
adc
push
mov
sbb
iret
xchg
push
popa
xchg
call
popa
ret
loope
dec
lds
pop
adc
out
flds
sbb
inc
jns
xor
mov
imul
mov
movsb
mov
and
inc
and
rorl
aas
int3
dec
lcall
push
sbb
mov
adcl
mov
push
xchg
or
sub
orb
lds
cmp
fcoml
push
inc
xlat
jns
cwtl
cmp
dec
mov
lods
cmpsb
int3
jne
loope
leave
xchg
repz
shlb
mov
jmp
lcall
sahf
stc
fsubl
mov
inc
movsl
mov
push
nop
mov
push
sub
loopne
inc
cltd
pop
cld
nop
add
mov
xchg
sti
inc
mov
mov
lret
xchg
mov
mov
cmc
popa
jne
mov
pop
dec
jmp
mov
pop
cld
xchg
sbb
sub
insb
jne
push
movsl
aaa
mov
xchg
lea
cmc
adc
mov
cld
add
test
inc
subb
jge
int
outsb
icebp
dec
inc
sbb
repz
ret
dec
mov
cmp
mov
sub
mov
mov
movsw
adc
pop
xor
mov
aaa
pushf
pusha
sti
fcomp
ss
lcall
andb
adc
cmp
adc
and
inc
push
xchg
mov
std
mov
lea
inc
insl
fwait
xor
pop
sub
cld
dec
loopne
shlb
cmp
push
lcall
mov
shufps
lods
inc
adc
mov
mov
popf
popf
addr16
pushf
inc
sub
or
stc
xchg
pop
pop
gs
push
mov
add
and
xlat
test
lods
add
xor
fdivl
psrld
fdivrp
push
pusha
test
insl
xlat
push
jo
push
rolb
shll
pop
adc
aaa
gs
xor
adc
jne
mov
mov
push
mov
inc
fwait
add
jb
les
test
fcoml
popf
jbe
loop
std
pop
outsb
dec
addr16
pop
xchg
push
push
es
xchg
push
lcall
pop
push
push
shlb
cmpsl
xchg
sbb
jb
mov
stos
mov
jae
mov
cs
fsubl
ljmp
and
les
popa
dec
sahf
cmp
stc
xchg
mov
xor
testb
in
mov
pop
pop
scas
push
ret
pop
add
inc
out
in
or
dec
xchg
ja
push
cmpsb
push
jbe
adc
clc
nop
pop
adc
inc
mov
leave
nop
cld
jp
jmp
sub
push
in
sub
pop
and
push
dec
and
shll
jno
in
imul
cltd
push
shr
mov
outsb
aas
push
lods
add
cld
mov
call
inc
fdivs
sub
jle
cmp
pusha
push
push
mov
inc
dec
sahf
inc
mov
jmp
mov
test
jbe
loopne
pop
pop
popf
mov
arpl
push
cmp
and
gs
add
mov
popa
popf
mov
ficoml
imul
cmp
aaa
or
ljmp
xor
mov
sub
inc
mov
data16
sub
arpl
dec
mov
lret
mov
shrl
dec
popf
mov
movsb
loop
sbb
mov
push
fbld
cmp
jmp
mov
int
in
sbb
adc
mov
jbe
outsl
popa
out
push
cmpsl
adc
and
cmp
icebp
sbb
cmpsl
and
popa
xor
adc
xchg
jbe
xchg
popa
mov
ds
in
shrb
sbb
sub
out
sub
or
loope
add
out
sub
nop
fadds
scas
out
push
fsubs
out
cmpsl
stc
push
mov
mov
pop
hlt
sub
fldenv
dec
xor
mov
push
xchg
cmpsl
xchg
and
movsl
fsubl
xchg
inc
and
add
out
adc
arpl
mov
xor
fidivrs
stos
and
test
aam
loope
sti
cmpsb
mov
movsl
dec
cmp
pop
bound
dec
adc
idivl
lods
out
dec
mov
cmp
insb
or
add
fstp
test
and
test
xchg
lock
pop
std
cmp
push
dec
push
mov
mov
or
cmp
int
pop
and
pop
in
bound
jle
mov
xchg
lcall
xchg
int
xchg
lahf
cmpsl
loopne
daa
or
and
arpl
jl
in
lods
jle
adcl
cmp
arpl
mov
cmpl
es
mov
leave
sbb
pop
aad
xchg
orl
ret
je
imul
in
lcall
ss
pop
andb
rcrb
bound
fimull
pusha
loope
xor
loope
inc
imul
dec
movsl
int
movsb
call
bound
sub
int
fcmovbe
adc
cmp
mov
fwait
add
pushl
and
jo
leave
cmp
or
in
sub
adc
mov
cli
insb
sarb
mov
js
mov
and
ror
jo
adc
in
movsl
out
jo
arpl
cmp
dec
xchg
xor
mov
fisubrl
popf
loop
mov
mov
dec
lods
mulb
dec
pushf
xchg
fldenv
sub
out
lods
push
scas
jge
xchg
cltd
in
xor
cli
clc
xor
sahf
testb
popa
push
iret
cmp
out
arpl
mov
and
lods
cmpsl
fisubs
fisubrl
stc
and
add
loop
out
pushf
call
mov
push
out
and
and
sahf
lods
sub
push
hlt
in
mov
add
movsb
jge
clc
mov
pop
jl
jmp
je
loopne
fwait
shrb
pop
lahf
pop
mov
and
loope
inc
pop
das
xchg
scas
xor
sti
in
outsb
nop
movsb
mov
ficompl
daa
sub
inc
pop
mov
push
xchg
push
es
mov
cmc
sub
cmp
inc
ja
pushf
filds
cli
mov
in
mov
ss
push
fcoms
lcall
mov
cs
popf
es
mov
xchg
repnz
xor
imul
add
jne
popf
pop
cld
mov
pop
popa
mov
inc
inc
test
xor
js
aad
inc
frstor
pop
push
pushf
xchg
and
adc
lds
pop
add
jle
sti
ljmp
adc
jns
lods
xchg
mov
imul
jno
push
mov
xchg
jb
jbe
xor
repz
jo
push
inc
gs
leave
mov
inc
and
mov
add
fstps
out
mov
sbb
addl
sahf
shrl
sti
and
mov
in
inc
xor
dec
loopne
pop
inc
mov
es
repnz
arpl
lcall
sbb
cmp
int
xor
lds
daa
pushf
dec
sbb
pop
repnz
adc
mov
jns
adc
cmp
cli
sti
mov
mull
ljmp
mov
fmull
jns
jne
pop
and
xchg
jmp
or
loopne
lds
popf
fisttpl
mov
or
andb
test
aam
iret
sbb
pushf
arpl
inc
mov
push
and
mov
add
stc
xor
outsb
adc
aaa
lret
mov
ds
and
andl
out
icebp
adc
cmp
sub
mov
push
xor
popa
repnz
inc
cwtl
enter
jns
cmp
sbb
int
jp
shlb
les
mov
js
ss
aad
test
mov
rclb
sbb
dec
fmul
outsl
shll
int
push
jmp
rcrb
sti
pushf
jne
cli
cmp
mov
divb
xchg
scas
mov
mov
cmpsl
pusha
inc
jae
insl
dec
pop
ret
mov
popf
imul
push
pop
subb
inc
sbb
mov
call
dec
mov
pop
pop
mov
jp
xchg
cmp
sub
mov
les
mov
inc
out
lcall
in
insl
imul
adc
push
sbb
push
sbb
clc
test
je
mov
sbb
xchg
popf
cs
movsl
gs
mov
lret
and
pop
testl
cmpsb
add
adcb
in
movsl
repnz
mov
add
jbe
lea
add
add
mov
ja
xchg
mov
add
shrb
mov
push
popa
out
jg
test
dec
jl
in
outsb
push
nop
pop
js
mov
ja
mov
scas
addr16
xor
shll
pushf
test
lock
mov
mov
repz
pop
mov
adc
mov
jecxz
shl
jne
lods
icebp
rcrl
add
adc
das
fisttpll
jl
push
nop
sub
pop
stc
adc
sti
fistpll
cmpsl
andl
call
fistpl
mov
movsb
mov
jo
push
mov
xor
jmp
je
ss
adc
stc
pop
push
imul
stos
test
pop
mov
cmpl
jne
test
popf
jae
popa
nop
jle
mov
mov
adc
mov
aas
lret
andl
movsb
insl
sti
mov
sub
imul
adc
test
aas
mov
sbb
lea
jle
lods
push
arpl
repz
sbb
mov
push
pop
adc
sbb
cmpsl
jns
xchg
in
mov
lahf
test
dec
or
mov
popa
out
sbb
fdivl
pusha
mov
js
xchg
or
adc
scas
popa
and
inc
sub
sbb
and
in
jae
pusha
ja
sahf
repz
int3
adc
scas
push
push
mov
push
sub
mov
jbe
repnz
jmp
adc
stos
add
into
cmp
sub
add
push
adcb
fsts
mov
mov
ss
adc
leave
test
mov
pop
pop
sub
push
js
jne
loope
inc
mov
sbb
andb
sub
loopne
outsl
frndint
fadd
xchg
icebp
push
incb
push
jge
cs
jns
cmp
les
movsl
cmp
jbe
movsl
stc
adc
jg
mov
jae
inc
loopne
or
inc
jmp
adc
pop
sti
pop
push
and
leave
jp
out
lret
lahf
sbb
adcl
fcmovu
cmp
mov
push
cmpsb
popl
add
call
pushf
jbe
push
pop
loopne
adcl
fidivl
mov
cmp
push
sbb
cmpsb
dec
mov
inc
movsb
into
sbb
outsl
mov
jmp
add
push
push
adc
fsubs
cltd
push
mov
mov
push
pop
aaa
push
xchg
jno
idiv
std
loopne
sub
enter
add
mov
or
cmp
xlat
mov
and
mov
mov
sbb
xchg
cmp
sbb
insl
repnz
fmull
scas
sti
mov
mov
xor
fdivrp
hlt
add
xor
mov
psraw
fldt
cmpsl
jge
inc
xchg
mov
adc
xchg
out
pusha
cmp
mov
int
and
int3
pop
aaa
inc
xor
and
std
ja
mov
lcall
orb
mov
movsb
daa
popf
mov
pop
sbb
mov
rol
dec
mov
addr16
and
scas
and
dec
mov
pop
mov
daa
push
sbb
and
outsl
mov
mov
mov
lock
in
addr16
les
scas
test
stc
add
mov
mov
sbb
inc
sbb
pusha
and
push
xchg
dec
jno
jecxz
fists
negb
in
ss
or
mov
mov
mov
pop
push
fistpl
mov
mov
enter
daa
dec
cmp
stos
std
aaa
sbbb
inc
jle
repnz
jg
test
neg
cmp
push
sbb
mov
cmc
popa
gs
pusha
pop
adc
or
fsubl
inc
sbb
mov
std
sub
push
mov
inc
mov
into
pop
push
push
mov
rorl
mov
pop
dec
cmp
xor
push
inc
movsb
mov
push
mov
and
dec
andl
inc
inc
icebp
mov
inc
jns
addr16
xchg
bound
inc
roll
mov
xor
mov
mov
mov
mov
jge
out
iret
sbb
incb
sbb
mov
pop
pop
idivb
sbb
test
std
push
fcmovnb
mov
popa
lea
dec
mov
cld
mov
popa
fsubl
adc
xchg
jns
jp
mov
push
sti
or
std
addr16
je
inc
test
lret
mov
cmp
and
je,pn
mov
inc
cltd
jp
mov
jo
jns
mov
adc
arpl
jp
jmp
jae
xchg
aam
sbb
enter
mov
push
pop
cs
sub
xlat
lock
or
repz
dec
sahf
dec
jle
enter
add
cmp
mov
mov
pop
add
scas
incl
mov
dec
bound
loop
push
popf
les
or
ss
pop
push
inc
push
mov
jecxz
mov
and
out
cmp
insb
xlat
sub
jb
mov
mov
ss
cld
ja
iret
mov
maskmovq
mull
push
xchg
mov
push
adc
mov
mov
leave
rcll
mov
lock
pusha
out
int
add
mov
popf
mov
xchg
sti
mov
push
inc
daa
lods
in
cwtl
mov
enter
mov
fs
mov
sub
imul
adc
into
shll
and
mov
nop
pop
cltd
mov
fdiv
pop
push
mov
pushf
inc
mov
mov
jne
dec
add
test
int
shll
leave
xchg
mov
cli
adc
mov
scas
xor
pusha
rolb
pop
xchg
push
inc
and
pop
imul
jns
mov
xchg
pushf
mov
adc
xchg
or
push
movsb
inc
outsl
sbb
mov
sar
stos
test
mov
int3
mov
rcrl
fisttpl
or
mov
sbb
pop
mov
adc
fidivrl
pusha
gs
jmp
ljmp
inc
call
jge
cmpsl
inc
loopne
xor
insl
subl
dec
lea
imul
sti
pop
mov
fimuls
int3
out
stos
push
mov
out
adc
hlt
fsubrl
cmp
push
or
mov
sti
lds
mov
dec
xchg
mov
lods
sub
andl
in
pop
les
pusha
xchg
add
xchg
lods
popa
pop
ret
cld
sti
pushf
jmp
jl
stc
lock
xchg
xor
out
mov
jmp
sub
mov
cltd
jne
mov
dec
aad
pop
sbb
pushf
push
pop
mov
sbb
or
mov
jmp
cld
pop
sarb
mov
int3
jecxz
arpl
test
or
andb
cmp
add
xor
mov
xor
in
out
test
mov
stos
ret
pop
fnsave
popa
cmp
andb
mov
cld
testl
out
loope
loop
pusha
outsb
jne
movsb
push
test
mov
fdivrl
ja
xor
jo
dec
jle
mov
mov
mov
push
inc
or
scas
test
push
sub
xchg
pusha
sub
popa
inc
cld
mov
es
and
loope
sbb
je
push
or
mov
xabort
shlb
popa
push
popl
mov
add
lods
mov
shrl
out
and
fdivrl
xor
inc
cltd
mov
inc
push
andl
xlat
out
mov
or
mov
roll
jae
nop
les
mov
mov
inc
mov
pushf
jge
clc
fcomps
jbe
xchg
insl
mov
dec
sbb
inc
xor
scas
mov
cmp
out
mov
ja
pop
pop
and
jbe
call
xchg
data16
push
add
in
lods
jge
xchg
pop
popf
jmp
cwtl
popa
mov
testl
xor
in
fwait
pop
push
jbe
mov
push
mov
rcr
xlat
popa
in
dec
cwtl
mov
loope
sbb
outsb
repz
shlb
xchg
sub
shrl
xchg
jbe
insl
stos
jle
xchg
jge
cmc
bnd
pop
ja
addr16
jb
mov
dec
lahf
xchg
fucom
cld
les
cmp
shrb
insl
loope
shrl
jo
aam
mov
adc
int
int3
cmp
mov
sar
fwait
inc
mov
scas
sti
int3
loop
or
out
std
push
fsubrs
cs
jle
inc
mov
lods
lahf
inc
mov
sbb
add
loope
sbbb
sbb
jae
mov
add
cli
lods
push
arpl
mov
and
mov
xor
dec
push
push
loop
mov
cmp
in
mov
dec
fsubl
mov
inc
jge
add
test
cmp
adc
shl
fsubs
or
jns
leave
adc
stos
insb
mov
sub
add
xchg
mov
pop
fldenv
call
xchg
mov
dec
fsubl
push
nop
or
and
mov
movsb
xchg
mov
push
in
xchg
sub
ret
pop
cltd
dec
dec
popf
movsl
mov
sbb
jmp
ds
adc
xlat
mov
cmc
mov
cmp
adc
faddl
sbb
sub
sub
jmp
fdivl
xorb
xchg
pop
mov
inc
xor
sbb
jbe
sub
mov
out
pop
sbb
xchg
push
in
mov
jl
testb
call
mov
sbb
push
mov
fisttpll
popf
in
dec
sbb
movsb
mov
or
cli
orl
stc
imul
mov
scas
test
imul
dec
sbbb
into
rolb
iret
inc
mov
mov
int
jbe
mov
insl
fsubrs
mov
fwait
cli
mov
or
xchg
dec
stos
pop
popa
loop
sub
mov
cmpsb
add
push
or
gs
imul
jp
inc
cwtl
mov
aaa
push
outsl
cmc
sub
fcomp
or
push
fdivrs
xchg
int
addr16
fcmovnb
jmp
inc
sub
and
mov
push
lret
sbb
dec
xlat
gs
pushf
mov
jp
pop
sub
ret
iret
jb
cltd
fwait
ljmp
jle
or
popf
adc
xchg
jbe
add
jns
gs
pop
xchg
fisubs
fcomps
into
pavgb
and
xchg
or
mov
stc
mov
leave
sub
pop
mov
cmpsb
jmp
and
xor
outsl
lahf
add
insb
jle
js
xchg
cmpsl
imul
sbb
int
xchg
cmpsl
mov
push
jno
sbb
cmp
jb
xlat
jb
mov
pop
sbb
mov
jmp
nop
inc
adc
mov
pop
je
repnz
fimull
and
sub
popa
sti
sarl
mov
or
scas
das
cld
sti
in
mov
cmc
mov
cli
inc
push
pop
cmp
sbb
outsb
xchg
sbb
andl
imul
mov
cmp
adc
xor
mov
jno
mov
mov
jae
dec
fs
mov
addr16
and
push
imul
rcll
jbe
cwtl
sbb
pop
fistpll
jmp
cmp
mov
fwait
nop
add
lahf
sbb
sahf
out
shll
jmp
sbb
dec
pop
mov
bound
popl
push
inc
sbb
dec
inc
pop
enter
pop
jle
and
adc
test
repnz
test
jno
sub
shll
pusha
sbb
mov
pop
or
outsl
add
push
pusha
int
and
mov
pop
outsb
sbb
xchg
dec
sub
sahf
pushf
or
movsl
jnp
sahf
inc
pop
js
inc
pusha
xchg
in
and
mov
inc
jl
cld
push
mov
jnp
movsb
ja
mov
or
fmull
mull
push
pop
ficompl
dec
xchg
nop
cmp
testb
aam
fsubrl
mov
cmp
mov
push
in
mov
repz
lahf
test
mov
push
je
lea
cmp
cmc
push
fsubrl
pop
jecxz
cmp
jmp
jp
jo
jbe
mov
xor
push
mov
xlat
pushf
sub
icebp
mov
dec
adc
inc
sbb
popa
daa
jo
adc
int3
andl
xchg
mov
pop
add
repnz
std
push
fwait
hlt
into
mov
fstpt
push
dec
add
push
jmp
inc
cltd
xchg
cli
sbb
addr16
inc
ss
mov
ret
mov
cltd
and
sub
jbe
test
iret
or
mov
xabort
fwait
outsb
das
jg
jne
dec
rorl
scas
maskmovq
idivl
mov
mov
hlt
lods
cli
inc
push
mov
mov
fstpt
repz
cld
mov
movsb
push
test
das
addr16
or
movsl
in
insl
jo
call
fs
or
push
sti
out
js
sti
and
sub
andb
ljmp
or
cmp
iret
adc
fcompl
cmpsl
daa
scas
mov
test
pusha
mov
es
cmpsb
pop
insb
lods
cmp
xchg
mov
push
mov
add
aaa
insb
imul
scas
mov
and
aaa
outsb
repz
add
sbb
add
mov
pop
cmp
mov
popa
xchg
cmp
pusha
cmp
lcall
repz
andb
or
arpl
mov
add
xor
dec
pop
adc
push
push
lea
stos
jmp
lds
loop
fisttpll
pop
inc
add
loope
out
decl
xor
loop
popl
add
xchg
enter
fwait
dec
addr16
loop
sbb
mov
pop
movsl
adc
js
mov
or
sub
in
sub
daa
add
and
ss
add
negb
xchg
mov
scas
cmpsl
sub
mov
out
sub
xchg
adc
jecxz
int3
cld
aam
cmp
adc
adc
sbb
std
mov
mov
fldt
mov
jns
cwtl
push
pop
xchg
and
push
adc
and
and
out
and
xchg
cmpsb
adc
test
mov
scas
push
jecxz
mov
daa
inc
mov
push
mov
sbb
cmpsl
mov
lods
lds
ret
mov
subb
stos
dec
push
outsl
mov
xor
cmpsb
and
std
mov
xor
mov
lods
mov
jmp
mov
sub
lods
pop
jp
mov
dec
adc
roll
addr16
stos
loop
stos
fwait
repnz
fcompl
push
sbb
xchg
mov
or
ret
loope
aaa
test
lahf
ljmp
pushf
add
dec
cltd
push
loopne
loope
out
push
sbb
adc
xchg
xor
jmp
mov
xor
mov
in
sbb
xor
jge
or
gs
mov
and
mov
sti
bound
adc
or
sbb
aad
out
or
fs
es
push
mov
movsb
or
sub
bound
lcall
ret
or
cmpsl
lea
push
or
fwait
scas
repz
mov
loop
es
movsb
mov
sbbl
push
inc
stc
stos
cmpsb
scas
in
fs
or
hlt
mov
loop
es
ljmp
cs
adc
pop
nop
jp
test
sbb
pop
cmpsb
cmp
leave
adc
fcompl
outsb
fisubl
sbb
imull
push
arpl
loop
or
xchg
aam
xchg
test
sbb
sbb
scas
imul
fdivs
sbb
sbb
pop
ljmp
jo
jbe
outsl
ljmp
mov
inc
test
pop
aam
jbe
lods
test
outsb
ja
push
dec
mov
xchg
ret
jle
cmp
clc
cld
lea
xchg
jecxz
ret
into
dec
add
fisubs
pop
mov
ret
xchg
sbb
stc
or
xlat
add
outsl
lods
lret
add
popa
mov
lahf
fstpt
movsb
addr16
sub
mov
gs
push
pusha
lods
loop
test
push
xchg
repnz
and
call
jle
pusha
lcall
pop
jnp
inc
xchg
adc
sti
sbb
sub
je
aaa
inc
clc
and
inc
pop
jno
xchg
out
std
xchg
stos
pop
xor
pop
jno
inc
xor
std
xchg
nop
pusha
test
cmpsl
mov
pusha
call
xchg
ja
mov
sbb
fsub
sbb
sub
loopne
jo
sub
andb
push
cltd
lods
fsubr
xchg
mov
loope
mov
mov
ljmp
daa
xchg
xor
cmpsl
bound
mov
dec
adc
push
call
nop
mov
out
std
roll
xor
andb
xor
cs
jo
mov
or
adcl
mov
jg
fwait
xchg
jo
sbb
jnp
or
and
dec
push
sub
movsb
sub
jne
pusha
xor
sub
sahf
xchg
or
jnp
jo
sbb
jo
jne
dec
cld
andb
repz
pop
push
sub
push
pop
shll
push
addr16
aam
test
adc
inc
xchg
xlat
int3
or
test
and
rclb
jb
out
add
and
imul
in
sub
adcb
sub
mov
dec
adc
sbbl
jne
fstpt
test
js
mov
call
mov
inc
int
nop
sahf
adc
pusha
xchg
lret
or
adc
push
push
fstl
push
mov
call
and
loope
cmp
ret
xchg
orl
dec
fsubs
pop
sbb
lahf
mov
fwait
test
movsb
sbb
sub
xchg
clc
mov
fdivrs
movsl
xchg
push
rolb
push
push
movsl
test
lods
push
out
test
rcr
pop
mov
fstl
xchg
dec
mov
or
jmp
mov
mov
adc
lret
or
insb
nop
and
in
jne
jmp
in
scas
scas
das
lret
and
fiadds
add
lock
out
in
scas
push
sub
and
sub
mov
xor
repnz
push
xchg
mov
push
dec
mul
dec
into
and
jae
das
xlat
lahf
cmpsl
or
dec
shlb
rcll
pushf
and
xor
jns
mov
popaw
lods
and
cmpsl
nop
mov
out
ret
push
mov
insb
call
es
cltd
xor
push
xor
leave
lret
in
mov
outsb
push
cli
cs
cld
jp
fwait
in
jns
aaa
cmp
lcall
fcompl
and
cmp
mov
daa
jae
je
mov
sub
fimuls
and
out
cltd
push
or
add
sbb
xchg
in
pop
loop
repnz
insb
sbb
lods
shlb
loope
fs
push
loopne,pn
and
and
push
xor
jle
pop
mov
mov
loop
out
xchg
outsb
mov
inc
jns
cmc
nop
add
jne
mov
or
jp
pop
aas
cmp
mov
xadd
sbb
add
mov
test
mov
xor
movsb
jnp
push
and
das
inc
addb
mov
mov
mov
ffree
mov
push
pop
ja
jge
mov
ret
sub
test
jns
mov
cmp
or
in
dec
ret
loop
dec
jecxz
adc
mov
int3
idiv
leave
mov
popa
cltd
lds
fcompl
orb
out
pop
or
mov
lods
adc
xchg
scas
or
into
mov
pushf
mov
or
or
leave
mov
adc
ret
mov
pop
mov
repnz
push
scas
addr16
xchg
movsl
lods
andb
fwait
ret
imul
addr16
dec
sbb
js
cld
xchg
jg
data16
pushf
adc
rorl
sahf
mov
dec
mov
push
pop
xchg
bound
aad
inc
clc
ret
jns
add
cmpsl
imul
sbb
outsl
inc
adc
jmp
mov
mov
add
or
cmc
ja
fwait
cld
sbb
shl
jl
movsl
xchg
incb
adc
dec
and
mov
jmp
stc
imul
mov
nop
cmpsb
push
je
add
fsubrl
lcall
pop
and
mov
mov
in
dec
adc
sub
mov
inc
jb
popf
add
xchg
mov
fwait
xchg
out
nop
ja
and
rcll
push
mov
bound
and
sub
mov
sbb
add
lcall
loope
jbe
dec
xchg
push
test
push
add
xchg
dec
push
hlt
in
bound
data16
mov
mov
mov
xchg
push
push
iret
inc
sub
dec
in
push
les
push
mov
and
cmpsl
addr16
popf
sbb
sbb
mov
push
call
inc
cli
jne
sbb
popf
insb
icebp
adc
and
stos
arpl
mov
push
lahf
adc
or
mov
mov
in
and
lahf
jl
dec
test
mov
scas
nop
add
loopne
mov
mov
gs
vrsqrt28pd
and
mov
notb
mov
jno
pop
sbb
push
dec
test
xchg
imul
sub
sbb
sub
and
or
out
movsl
mov
fbld
call
ss
sub
sub
js
movsl
mov
test
inc
jmp
mov
cmp
push
jno
scas
fsubl
out
xchg
insb
push
pushf
lcall
rolb
pop
pushf
call
sub
push
cli
orl
jb
aad
mov
sub
jge
in
fldenv
scas
mov
mov
jmp
popf
stos
xor
out
rcr
in
xor
loop
or
xchg
std
mov
add
sub
xchg
xor
cmp
fwait
and
lods
dec
mov
sub
icebp
adc
shrb
jne
mov
insb
in
jg
popa
fs
fs
mov
cmp
imul
jle
inc
lds
jle
lds
fsubs
out
mov
imull
dec
mov
js
movl
add
fwait
push
mov
sbb
add
cmp
scas
pop
movsb
jns
movsb
test
imul
push
mov
mov
subb
push
in
es
mov
push
js
pusha
and
jle
add
mov
push
in
push
xchg
insb
fistps
and
sahf
adc
lods
lret
shll
cmp
and
sub
pop
adc
jb
push
imulb
and
push
insb
in
lods
inc
loopne
scas
add
dec
pop
xor
mov
mov
push
lods
add
jp
pop
or
mov
les
lahf
aaa
xor
push
mov
mov
leave
mov
subb
cmp
outsl
into
pusha
xchg
jecxz
and
xchg
sbb
sbb
inc
popl
xlat
ljmp
mov
sar
push
popa
loopne
or
push
sub
mov
js
cltd
dec
pop
mov
ss
inc
sub
sbb
dec
aaa
mov
jb
push
out
in
mov
push
stc
mov
test
pop
mov
loop
enter
pop
and
dec
push
outsb
or
out
cld
leave
repnz
js
xorb
adc
sti
imul
cmp
inc
nop
test
test
leave
aad
fsub
or
push
jl
pop
sub
jle
dec
das
aad
ror
add
rcr
and
arpl
mov
shlb
cli
mov
lcall
mov
jp
popa
stos
int3
cmc
arpl
jge
std
out
dec
bound
inc
cmp
mov
mov
sbb
add
lcall
xchg
xor
mov
aad
push
dec
mov
inc
sahf
mov
pushf
adc
or
insw
pusha
into
test
mov
scas
add
mov
and
repz
mov
pushf
xchg
mov
repnz
and
xor
ffree
ja
jge
mov
sbb
mov
cmpsb
push
mov
xor
xchg
sahf
testl
mov
lret
imul
pop
push
mov
aas
ret
mov
mov
and
and
mov
cmovg
cmp
ds
fisubl
jne
pop
push
pusha
das
add
xchg
lret
mov
stos
hlt
jmp
add
loopne
fs
pusha
ljmp
das
loopne
cwtl
or
sub
push
mov
jle
das
gs
inc
pop
icebp
jb
pop
xor
push
leave
je
cld
push
mov
mov
out
cs
subb
aas
sub
mov
jne
sub
sahf
xlat
fadds
leave
mov
iret
mov
repnz
add
adc
les
popf
cmpb
rcrl
arpl
mov
adc
repz
rorb
in
loopne
dec
mov
mov
cmpsl
addr16
test
mov
or
roll
mov
push
popa
popf
and
iret
cwtl
cs
push
mov
xchg
xor
pop
mov
mov
push
int3
cvtps2pd
jp
adc
add
jnp
test
dec
sbb
pop
int
sub
push
push
mov
out
dec
mov
xchg
dec
xchg
dec
mov
and
pusha
pop
lahf
movsb
sahf
daa
out
out
xchg
inc
mov
xor
sub
in
pop
sbb
mov
or
xlat
mov
sbb
xchg
cld
leave
mov
or
int
mov
inc
push
mov
popa
je
inc
adc
mov
push
ds
addr16
adc
push
jno
mov
dec
clc
jg
mov
call
mov
add
and
movsl
sbb
xchg
mov
ret
in
insb
mov
and
jo
mov
stos
mov
adc
and
iret
mov
jo
and
xchg
mov
ret
mov
pcmpgtd
enter
pop
ss
add
rclb
jae
or
popf
fistpl
jo
cmp
sub
test
dec
cmp
loopne
sub
lea
mov
orl
movsl
adc
lret
clc
add
rorb
mov
lret
inc
mov
lret
lods
hlt
stc
mov
cmp
aaa
lea
insl
and
test
repnz
mov
testl
xchg
mov
in
jmp
mov
sahf
jns
fdivr
sbb
xchg
inc
and
mov
push
negl
addr16
mov
mov
or
addr16
mov
shrb
jle
mov
aad
lea
jns
add
mov
mov
push
sbbb
rcrl
dec
sbb
xchg
inc
sub
testl
lds
cmp
adc
leave
sbb
jg
mov
push
and
nop
insl
fldt
pushf
cltd
into
iret
pusha
cmc
jge
ja
or
bound
enter
dec
pusha
mov
scas
sti
xor
xor
pop
pop
popa
imul
out
sbb
cmp
imul
pushf
jmp
or
xorb
xor
rcrl
negb
nop
add
jecxz
jb
orb
mov
jp
data16
fstl
fsub
add
int3
dec
lea
fnstcw
mov
pop
add
lock
cli
iret
jne
xor
pushf
mov
mov
push
pushf
inc
mov
das
jbe
mov
or
dec
adc
data16
icebp
jae
inc
add
sbb
imulb
inc
nop
arpl
jbe
and
xchg
add
jecxz
xchg
add
dec
sbb
lods
sahf
add
sbb
sbb
addr16
pop
loopne
mov
mov
jl
push
jle
xchg
or
repz
adc
xchg
inc
and
js
dec
daa
cmpsl
rorb
add
sub
inc
cwtl
mov
jb
je
mov
loop
or
and
ss
mov
scas
mov
daa
frstor
jno
in
pushf
cmc
mov
push
mov
lea
mov
shrl
orl
mov
imull
push
les
mov
loopne
inc
sub
mov
out
fstl
pushf
push
sti
les
jne
push
das
jnp
jae
mov
cli
inc
xchg
fbld
movsl
insb
icebp
mov
test
sti
jmp
mov
inc
pushf
inc
and
or
sahf
arpl
mov
ret
adc
fcomip
jo
dec
sub
sbb
adc
bound
sbb
mov
in
jbe
js
ret
lea
scas
mov
mov
pop
stos
sahf
cmp
add
pop
push
repz
xor
cmp
add
inc
lods
jl
or
xlat
jne
sub
das
leave
xchg
and
or
in
not
push
mov
aam
xlat
lea
orb
jge
mov
jl
int3
mov
js
clc
add
push
imul
push
add
and
test
pop
inc
mov
ljmpw
popl
mov
lods
leave
dec
or
jbe
ud0
ja
mov
stc
pop
inc
cmpsl
sbb
pop
lods
xor
mov
aad
dec
gs
xor
inc
jbe
enter
mov
sahf
inc
pusha
nop
out
cmp
push
xor
or
stos
lcall
sbbb
and
enter
or
les
scas
sbb
cmp
outsl
lods
mov
ret
sahf
mov
sbb
stc
push
pop
xlat
lcall
clc
ficomps
jecxz
push
pop
mov
and
inc
mov
pop
aam
rclb
add
inc
push
fucompp
lock
mov
inc
xchg
call
push
adc
nop
dec
sbbl
sahf
in
je,pn
iret
xchg
test
add
stos
daa
mov
mov
ret
sbb
adc
cmpsl
xor
push
inc
mov
std
mov
cmpsl
dec
loopne
daa
jae
xlat
outsb
imul
ss
pop
sahf
scas
mov
sub
cmp
and
jae
sti
leave
movb
cmp
aad
sub
xchg
and
fsubs
push
xchg
bound
lret
cli
sub
ror
fsubs
insb
inc
lcall
lret
xchg
outsl
sub
dec
mov
and
push
xchg
and
stos
das
rorl
jo
call
mov
iret
mov
scas
rorl
movsl
orl
cli
call
mov
shll
mov
jbe
out
adc
rcr
cmpsb
jge
nop
pusha
jae
inc
xchg
adc
daa
jns
out
pop
xor
movsb
int
inc
ljmp
sub
dec
sar
ljmp
dec
mov
adc
cpuid
in
mov
cmp
jmp
inc
jnp
push
and
or
sbb
push
adc
adc
stos
mov
fstl
adc
daa
mov
sub
cmp
mov
sbb
sub
ljmp
test
cmpsl
test
scas
push
ret
mov
push
inc
cs
rclb
lahf
push
nop
daa
ljmp
mov
xchg
dec
push
lock
mov
enter
push
lds
cmpsb
popf
in
scas
mov
test
push
jne
inc
test
pop
addr16
das
in
pop
bound
sbb
loop
add
sub
jmp
popa
sbb
aad
fsubs
push
dec
inc
pop
scas
aad
enter
push
clc
and
in
sti
jne
xor
out
dec
lcall
out
movsb
hlt
fsub
mov
bound
inc
pop
push
and
jne
into
xorl
xchg
sbb
cli
in
inc
lcall
adc
int
jns
outsb
mov
sbb
add
and
mov
jne
pushf
ja
or
mov
jb
in
mov
push
ret
data16
push
add
mov
or
jmp
scas
add
fcoms
adc
or
pusha
cmp
push
sbbl
jmp
mov
inc
int
sub
mov
arpl
not
aad
mov
incl
mov
adc
mov
jae
int3
pusha
inc
xchg
es
xchg
fiaddl
insb
popa
pop
pop
out
ret
test
add
cmpsl
out
sti
mov
push
adc
mov
jnp
and
fbstp
aad
xchg
inc
mov
lock
cmp
loop
mov
pop
testl
bound
cmp
cmp
push
mov
or
repz
sub
lods
pushf
cmp
lods
jno
push
sarl
daa
inc
jae
mov
xchg
push
jp
ret
jg
push
shll
and
call
out
mulb
subps
das
mov
and
sub
js
cmp
out
push
adc
add
adc
sti
cli
mov
mov
push
jnp
jbe
xlat
insl
jl
mov
repz
int3
mov
cwtl
insb
push
mov
xchg
sahf
insl
fcompl
das
int3
mov
inc
mov
jb
cmp
mov
cltd
mov
scas
pop
ret
adc
mov
pop
mov
por
sub
leave
mov
cs
fsubs
dec
sbb
loope
or
repnz
sub
decb
jle
aas
sbb
sar
cmpsl
lret
mov
movb
fs
or
mov
wbinvd
mov
sub
cld
jg
std
jae
cmc
sahf
cmp
clc
adc
pop
add
das
mov
xchg
ffree
mov
loop
iret
sbbb
adc
jmp
mov
ret
jle
or
mov
mov
sub
mov
mov
mov
cmpsl
sub
or
clc
int3
pop
movsb
nop
pushf
xchg
rclb
pop
sbb
jns
mov
cmp
sbb
ret
fnsave
sbb
mov
mov
mov
out
sub
mov
incl
pusha
in
test
orb
or
mov
sahf
int
insl
mov
lret
jg
cld
dec
xchg
sahf
dec
mov
push
adc
dec
cltd
xor
jae
lock
add
jmp
mov
inc
stos
mov
imul
nop
and
ljmp
mov
inc
mov
cltd
xor
cmpsl
mov
lea
clc
mov
jmp
fucom
cwtl
xchg
pop
xchg
pusha
xor
mov
mov
xor
mov
inc
mov
jbe
cli
repz
fbstp
push
xchg
lcall
cmpsl
pop
push
orl
mov
xor
addb
jae
mov
mov
mov
push
repnz
dec
push
fisttpl
insb
jo
mov
add
jbe
cwtl
inc
sub
inc
inc
dec
mov
jecxz
je
insl
and
xsavec
cs
cmc
mov
adc
dec
mov
loope
push
xor
movsb
push
inc
stos
pushf
cmovnp
adc
fisttpll
mov
mov
test
loope
sbb
xor
adc
jmp
push
sarl
xchg
cmp
xor
and
pop
cmp
outsb
and
xor
out
xchg
mov
mov
mul
sti
aaa
ljmp
push
mov
xchg
mov
cmp
pop
mov
pop
int
pop
stos
fadds
cmp
sub
mov
mov
jp
fwait
bound
rolb
loop
xchg
pop
push
dec
mov
mov
or
pop
pop
mov
addr16
mov
arpl
popa
popa
lock
roll
test
lahf
arpl
dec
test
popl
mov
in
jle
or
sub
inc
sbb
fnstcw
sahf
jns
or
mov
cmc
mov
outsb
pusha
mov
cltd
es
in
xorb
clc
cs
pushf
mov
in
adc
pop
stc
addr16
sbbb
dec
nop
jno
mov
scas
inc
sbb
push
cltd
in
mov
jp
add
cmp
jb
pusha
cmp
lretw
push
sub
mov
cli
sbb
aad
pop
sarl
clc
addr16
pop
inc
adc
mov
es
inc
add
aad
mov
jo
cmc
shlb
push
xchg
mull
adc
inc
test
and
loopne
loop
dec
sbb
aas
mov
fs
ljmp
imul
lcall
or
mov
jmp
cmp
mov
jo
mov
punpckhdq
fadds
jns
mov
pushf
pop
into
loope
leave
pop
inc
mov
sbb
add
dec
ljmp
mov
jbe
and
adc
rcr
js
xor
xchg
mov
mov
rorl
fdivrp
paddusw
mov
loope
cmpsl
outsl
and
aad
jecxz
pop
and
dec
mov
in
jecxz
pop
bnd
repnz
sbb
sub
outsb
or
sbb
ret
cli
mov
mov
fimull
push
sbb
inc
mov
popf
pusha
xor
push
sbb
stc
testl
adc
or
int3
push
sbb
adc
adc
pop
stos
adc
test
dec
lret
or
int3
xor
pop
and
mov
mul
imull
ljmp
pop
stos
lock
xchg
push
les
xchg
les
iret
mov
mov
subb
shll
fwait
je
mov
repnz
or
pop
imul
and
sbb
mov
data16
popa
xchg
pop
or
jno
test
xchg
mov
out
dec
inc
int
cmpsb
lahf
dec
push
fwait
int3
xchg
mov
sub
bound
lods
mov
push
sbb
sub
inc
sbb
nop
pusha
mov
dec
xor
push
call
push
and
fildl
roll
push
push
mov
lahf
or
push
dec
hlt
push
in
inc
sbb
dec
test
adc
dec
xor
mov
xchg
or
in
daa
loop
jge
mov
mov
sub
or
adc
sbb
in
sbb
imul
std
add
rcll
jo
call
ret
and
cs
idivb
in
and
mov
hlt
out
xor
lea
andl
or
scas
imul
or
pusha
pop
push
int
cmp
xchg
pop
and
mov
ss
pop
add
mov
and
adc
adc
jnp
and
dec
iret
imul
xor
andb
pop
lret
lahf
push
hlt
mov
inc
in
orl
sbb
int
or
xor
jns
cltd
roll
fwait
and
pop
aam
int3
inc
lds
push
bound
mov
sbb
js
sti
push
or
dec
pop
push
inc
out
sti
mov
adc
clc
sbb
js
ret
push
pop
xchg
fs
pop
test
pop
bound
outsl
cmc
sar
les
jo
ljmp
push
dec
dec
fsubrl
mov
adc
fwait
loop
out
enter
xor
lds
pushf
xorb
test
frstor
inc
mov
sbb
fs
out
mov
dec
aad
sub
jae
stos
pop
out
stos
movsb
cltd
cmpsl
xchg
jnp
mov
fldenv
xor
std
cltd
push
mov
fwait
je
jmp
shlb
inc
and
xor
push
stos
push
push
hlt
lock
sarb
add
lcall
adc
pop
es
pusha
mov
sbb
in
bound
lods
stos
loop
lret
loopne
dec
int
adc
aas
test
sbbb
fsubs
xor
mov
out
inc
xchg
jb
es
lahf
sbb
scas
cmpsb
cmp
cmp
cmp
icebp
das
jns
pop
xchg
inc
sbb
and
out
ret
pop
pop
cmp
leave
pop
sbb
xchg
push
es
add
push
mov
mov
movsl
push
xchg
inc
dec
out
jge
subl
dec
push
add
jg
mov
push
call
mov
sub
mov
ds
mov
into
mov
xor
movsl
add
out
dec
jmp
clc
and
xchg
nop
pusha
add
stos
cmpsb
bound
adc
push
push
scas
insl
push
inc
fsubs
add
rorl
inc
xchg
popa
pop
in
outsl
ds
push
mov
lcall
xorl
sahf
les
das
mov
cmp
ja
in
es
lcall
sbb
out
iret
mov
repz
and
push
subl
jge
cmp
or
frstor
cmpsl
icebp
outsb
xchg
sub
outsb
rcll
push
mov
daa
xor
out
shl
add
pop
mov
iret
stos
sub
cmp
cltd
aaa
xor
in
and
xor
jl
mov
lods
out
and
ja,pt
xchg
push
lea
lods
out
rcrl
ss
lods
andb
clc
push
ljmp
cmp
mov
mov
xor
movsb
adc
aaa
addr16
dec
mov
gs
and
rolb
aaa
and
outsl
push
cmpsl
sub
pop
push
movsb
push
test
mov
incl
and
adc
jge
sbb
lods
xor
rorl
pop
addr16
and
stc
sbb
in
inc
sahf
test
pop
call
push
scas
jmp
adc
mov
mov
xchg
out
push
pop
pop
pop
xor
inc
adc
inc
ret
pushf
pop
xor
cmp
or
jae
jae
xchg
movsl
aaa
outsl
push
pop
sub
pop
add
js
sahf
xor
sbb
cld
negb
stos
icebp
shrb
in
fldenv
xchg
fsubl
mov
push
fwait
lcall
test
add
cmpsl
cli
cmc
mov
and
mov
and
test
lods
sbb
add
sarl
xchg
and
push
mul
sbb
xchg
movsb
pop
popf
mov
arpl
fidivrs
scas
inc
lcall
stc
aad
jns
cld
mov
adc
mov
push
fbld
inc
lcall
xlat
mov
popa
rorl
insl
mov
in
inc
sbb
mov
mov
xor
sub
addr16
repnz
daa
lods
stc
pop
mov
insl
scas
sub
lods
mov
inc
insl
adc
cmp
movsb
mov
add
in
scas
imul
stos
sub
push
ficoms
pop
movsb
aaa
nop
pusha
xchg
stos
je
stc
fs
mov
sub
fsubs
xchg
sbb
dec
adc
sbbb
mov
scas
fdivs
mov
orl
stos
call
inc
sbb
and
push
xchg
push
rcrl
aad
je
sbb
dec
dec
aaa
xchg
sub
testl
cmp
fst
mov
icebp
inc
andb
call
inc
dec
dec
sbbb
pushl
ljmp
sbb
cmp
jbe
dec
push
movsb
pop
and
mov
push
push
dec
cmp
mov
fcmovnb
dec
xor
loope
push
push
in
push
loop
test
dec
pushf
inc
nop
mov
push
push
sbb
std
popf
jge
xchg
aaa
repnz
sbb
sub
daa
sub
ljmp
adc
imul
mov
je
sbb
pop
mov
stc
divb
ficoml
in
adc
inc
jmp
add
ljmp
in
pop
sahf
call
mov
jmp
dec
adc
ljmp
daa
gs
addr16
addr16
scas
jnp
iret
mulb
cs
call
mov
jp
pop
mov
push
or
mov
jo
ret
push
dec
das
add
hlt
and
movsb
test
pop
jo
andb
stos
xchg
cld
clc
xor
call
cmpsl
jo
call
call
divb
sub
mov
test
xor
movsb
mov
xor
push
fwait
cmc
imul
push
xor
mov
out
xchg
push
dec
or
jno
cli
xchg
push
or
adc
push
sbb
pop
fcoml
push
icebp
or
cmpsl
and
popa
fstl
orl
add
xchg
pushf
sbb
lahf
addr16
push
movsb
shl
pop
jno
mov
mov
mov
fildl
xchg
sti
xchg
push
sub
sub
das
addr16
push
shr
push
jge
mov
dec
fisttpl
mov
leave
xor
push
das
push
push
or
cmpsl
ljmp
sub
pop
add
and
imul
shl
cmp
call
inc
sbb
movsl
pop
call
cmp
loopne
sub
jne
sbb
outsb
mov
sub
inc
fsubs
pop
xchg
imul
nop
add
orl
dec
sbb
shrb
pop
fwait
sub
test
lea
dec
out
aaa
and
addr16
imul
sbb
aam
inc
lahf
cmpsb
das
xor
jge
stc
ret
popa
and
mov
push
ficoms
pop
mov
mov
add
ja
adc
or
lret
push
push
das
ret
push
divb
cmp
jo
imul
xchg
aaa
mov
iret
dec
sahf
push
rcll
push
movsl
cmp
sbb
dec
pop
jo
push
mov
in
sbb
push
lret
addl
ret
test
je
ret
pop
adc
sbb
inc
pop
test
lahf
mov
dec
xchg
divl
push
push
sub
inc
mov
shrb
inc
sar
jno
mov
out
inc
fs
or
outsl
mov
ss
and
and
and
arpl
addl
dec
mov
pop
push
hlt
mov
pop
ror
movl
or
xchg
in
loop
xlat
dec
lock
mov
xchg
insb
or
ss
jne
out
mov
les
and
pusha
jae
cs
cmpsw
int
mov
je
mov
out
mov
in
sbbb
push
mov
fwait
fwait
mov
fnsave
mov
cmpsl
rcr
inc
pop
lock
mov
and
cmpb
rcrl
mov
mov
fdivl
sets
sbb
mov
or
and
jne
push
xchg
lds
mov
repnz
jns
xor
nop
loope
push
or
loop
das
mov
sarl
js
jo
out
sti
xchg
xor
and
ret
add
xchg
pop
cs
mov
jmp
in
andb
in
ret
add
adc
xor
hlt
scas
ljmp
jae
xor
iret
jmp
fwait
stos
es
les
fs
and
sbbb
in
sbb
in
and
jmp
or
or
insb
inc
mov
repnz
aad
pusha
or
sub
dec
les
jecxz
gs
gs
push
sbb
push
cmpsl
sub
in
repnz
dec
add
shlb
clc
imul
pop
call
das
test
jne
int3
cmp
fnstenv
test
fs
pop
xchg
test
mov
test
rcr
jne
push
sub
add
fs
mov
cmp
nop
cmpsb
fwait
popa
data16
sbb
and
fbld
mov
push
and
es
jbe
repnz
pop
push
dec
out
loope
jmp
jmp
push
add
cmc
hlt
push
jmp
imul
out
jge
xchg
xchg
frstpm(287
jmp
mov
push
movsb
cmp
mov
out
insl
pusha
adc
pop
or
push
insb
das
cmp
adc
in
cmc
aam
push
jmp
jmp
pop
jmp
stos
push
loope
sub
inc
sub
imul
movsb
aaa
sub
pusha
fisttpll
jecxz
jmp
pop
jmp
sub
lods
in
out
les
mov
leave
ljmp
push
cld
js
outsl
out
js
pop
mov
mov
test
movsl
icebp
je
pop
clc
cmp
cmp
aas
mov
mov
sbbb
fadd
xor
fisttpll
jb
xor
outsb
add
mov
push
mov
xor
push
jbe
or
push
loopne
jb
mov
mov
mov
cmp
addr16
jo
in
daa
in
sbb
cmp
and
lahf
mov
inc
movsb
cmpsl
push
xchg
fcomps
sub
loopne
daa
inc
outsb
jo
push
xor
and
pusha
and
and
jmp
movsl
pop
popa
std
inc
movsl
ss
jle
cli
and
sub
and
mov
repnz
sub
pop
pop
mov
fisubs
in
scas
pop
stos
loop
stos
icebp
xor
mov
add
mov
xor
inc
dec
pop
xor
fucomip
mov
sbbl
mov
mov
jbe
sub
inc
add
adc
mov
mov
mov
mov
add
out
loopne
insb
xchg
and
mov
cmp
xor
lods
repnz
or
mov
popf
daa
sub
aam
mov
mov
movsb
shll
out
aam
adc
popa
movsl
scas
inc
je
rclb
jmp
fiadds
adc
jl
mov
cmp
push
mov
mov
fdivl
scas
mov
mov
push
ret
dec
xchg
sub
in
scas
push
and
testb
push
loop
sbb
jmp
cli
and
scas
ja
or
in
mov
mov
fs
out
dec
scas
aad
dec
rclb
adc
imul
lret
das
ret
push
icebp
out
push
mov
mov
xchg
mov
lahf
push
leave
dec
pusha
fdivl
mov
xchg
pop
arpl
push
pop
out
push
fcmovnu
push
and
aaa
cmp
imul
and
and
sbb
arpl
jmp
stc
lock
mov
mov
jg
cmp
mov
enter
daa
mov
sbb
je
cmp
negl
call
lret
mov
scas
fwait
stos
mov
jl
cmp
cmp
sbb
cmpsb
dec
mov
cmpsl
les
mov
jno
jle
add
outsb
xor
lods
xor
dec
and
xchg
out
in
repz
popf
cmp
test
and
out
add
scas
ds
mov
ljmp
cli
jns
ss
call
cmpsl
movsb
sub
and
jmp
push
scas
clc
sub
cld
xor
and
cmp
push
cmp
out
addr16
cmp
fstpt
scas
xchg
loopne
mov
test
test
inc
outsl
in
clc
mov
xor
jb
sbb
fiaddl
mov
mov
pop
mulb
and
add
mov
and
stos
and
pop
ret
popa
jmp
lock
or
test
and
aad
sbb
out
pop
and
cwtl
lods
inc
cmc
jns
dec
imul
in
xchg
lds
ss
subb
xor
mov
sub
mov
addr16
mov
push
pop
and
ficomps
popa
push
mov
jb
pushf
push
mov
jge
cmpsl
fsubl
popa
scas
and
icebp
lods
stc
sub
sahf
jns
jle
mov
repnz
push
out
sbb
push
jo
iret
sub
repz
inc
push
jmp
inc
pop
mov
mov
loopne
mov
pop
sti
fidivl
shlb
xchg
stc
lahf
sbb
mov
std
xchg
lret
dec
mov
add
test
xor
adc
mov
testb
loopne
or
das
jb
jmp
mov
mov
aaa
les
mov
sbb
cmp
dec
push
inc
xchg
rcrl
mov
pop
iret
fmuls
and
push
sbb
out
ds
add
ret
jae
inc
xor
mov
mov
stos
push
mov
jne
in
mov
inc
push
dec
xor
xchg
dec
mov
je
lea
fistl
into
jns
mov
mov
jnp
sub
sub
dec
xchg
dec
and
jmp
inc
mov
pusha
jnp
mov
addb
adc
push
and
fcom
adc
mov
xacquire
mov
stos
pop
aad
xchg
cmp
fwait
lea
push
daa
xchg
cmp
shll
fistpll
pop
sub
ror
mov
mov
and
jmp
nop
sub
fiadds
in
ret
bound
jb
mov
adc
fsubrl
pop
mov
daa
inc
enter
add
add
outsb
pusha
xlat
cmp
lods
lret
fisttpl
mov
mov
cmp
xor
pop
aas
push
lods
push
xlat
and
cli
or
jns
lock
mov
mov
mov
adcb
cli
inc
mov
sbb
pop
push
mov
mov
outsl
pop
rorl
xor
and
or
pop
and
adc
orb
inc
popf
je
fwait
pusha
or
ret
xlat
mov
xor
mov
call
adc
cmpsb
mov
dec
add
mov
pop
lds
inc
addr16
loope
push
mov
mov
sub
xchg
cmpsb
loopne
or
and
popf
call
push
ds
inc
mov
xor
push
test
cmp
adc
adcb
test
sbb
xchg
mov
loope
add
movsl
movsl
dec
enter
mov
bound
rcrb
jne
gs
arpl
cmp
mov
ljmp
cltd
xchg
mov
fsubs
lock
mov
mov
hlt
divl
mov
cmpsl
jmp
sbb
out
imul
data16
sbb
xchg
xchg
loop
jecxz
into
imul
adc
sahf
fisubl
adcl
mov
outsb
adc
push
mov
and
push
incl
mov
out
ss
mov
into
pop
sub
fdivl
shrb
cmc
sahf
aaa
jmp
pushf
mov
lock
mov
xchg
loope
lahf
mov
xor
lea
sbb
or
xchg
mov
and
mov
mov
pop
shll
mov
shll
sbb
jl
mov
test
cwtl
cmp
lods
ss
sbb
lock
aas
cwtl
mov
push
mov
mov
mov
add
push
imul
sbbb
push
jbe
data16
push
loopne
jb
lret
xchg
cld
movsl
push
adc
fsts
inc
jnp
and
lods
lea
push
mov
adc
ret
pushf
das
xchg
es
xchg
iret
or
adc
ljmp
push
push
testl
ret
addb
call
mov
hlt
lods
jno
sbb
sbbb
and
add
lock
addr16
jae
mov
loop
or
mov
sub
push
imul
push
and
pusha
pop
jae
cmp
inc
mov
lret
jae
addb
push
mov
jne
inc
sbb
nop
lret
push
jg
mov
sti
cwtl
scas
xor
xchg
add
sahf
mov
pushf
fmuls
sbb
ret
and
jb
mov
mov
scas
push
loopne
in
test
pop
mov
bound
popf
jg
pop
sbb
sbb
movsl
addl
mov
add
stos
sub
int
jge
cli
add
cmp
xor
xchg
mov
orl
mov
or
int
out
loope
ja
dec
popa
rep
pop
xchg
mov
sarl
sub
mov
jmp
lcall
push
mov
mov
insl
pop
xchg
sbbb
jge
cmpsl
lods
mov
aad
fdivs
inc
mov
sbb
out
push
jae
push
jns
sbb
cmp
mov
xor
in
jp
mov
popa
sbbl
cmp
test
dec
cmp
mov
lret
xor
pusha
lret
jl
repnz
pop
sub
push
repz
shlb
icebp
push
je
dec
xchg
mov
pop
sub
hlt
push
enter
and
sbb
xchg
sti
out
in
sub
push
jae
pusha
add
mov
mov
jb
pop
aad
nop
stos
push
fisubs
cmp
ret
xchg
loopne
cmp
pop
cmpsl
or
pop
inc
clc
cwtl
push
pop
out
rclb
cs
or
sub
mov
xchg
in
dec
lcall
pop
popa
cmpsl
js
mov
sbb
add
adc
loope
cmpsl
jp
adc
cmpsl
add
xchg
mov
sbb
jecxz
cld
mov
js
jmp
daa
dec
or
and
cwtl
pop
xor
xor
aam
shlb
pushf
movl
lods
and
xchg
sahf
sub
jle
xchg
shrb
adc
sti
arpl
in
outsb
rclb
sbb
inc
jbe
fsubl
and
test
xchg
add
jo
flds
mov
cmp
mov
lods
sub
mov
jle
call
aaa
decl
hlt
das
sub
mov
cltd
movsb
or
mov
popa
and
into
xor
mov
inc
or
out
das
and
outsb
mov
sub
das
jmp
loop
bound
daa
fs
fsubr
fwait
lock
xor
or
sub
sbb
fucomi
sbb
popa
aaa
mov
mov
sbb
lock
jge
xchg
movsb
push
imul
ret
xchg
push
jbe
or
adc
int3
xchg
xor
xor
and
int
pop
mov
sbb
adc
xlat
dec
lods
mov
sbbb
cmp
sbbb
xchg
call
mov
pop
scas
dec
mov
in
hlt
jb
test
jns
and
sub
frndint
dec
nop
test
fldt
test
sub
repz
and
pop
mov
test
pushf
mov
stos
inc
jne
pusha
cmpsl
push
xor
insl
inc
lea
jge
mov
lock
in
jmp
push
data16
test
popa
xor
dec
add
mov
dec
std
sbb
adc
int
and
stc
or
add
xchg
mov
pop
adc
gs
fsubs
pop
cmp
iret
mov
rcrl
fldenv
mov
daa
shl
sbb
psubsw
dec
or
dec
mov
xor
sub
xorb
cmpsl
pusha
scas
outsb
mov
dec
fmuls
sahf
mov
jg
popf
push
adc
nop
movsl
loop
paddusw
jne
dec
popf
in
dec
add
push
pop
jno
inc
outsl
scas
ficoms
sbb
and
dec
lds
ja
lods
mov
pop
ss
push
hlt
dec
adc
xchg
xor
pusha
bound
xchg
dec
aaa
das
mov
cli
mov
nop
icebp
addr16
mov
sahf
sti
jb
popa
inc
rcr
pop
xor
mov
mov
cmp
sbb
nop
mov
mov
mov
lods
int3
test
add
sub
inc
cltd
mov
testl
inc
fdivrs
dec
add
xor
addb
xor
aad
or
mov
xchg
add
mov
ret
in
mov
imul
repz
adc
das
mov
int3
fistl
ret
mov
mov
cmp
mov
fdivs
lock
dec
inc
cli
jge
mov
inc
xor
rcrl
fwait
adc
jbe,pn
sub
repnz
xchg
inc
mov
jg
cmp
add
push
mov
popf
mov
xor
fadd
pop
shlb
leave
popf
call
std
sub
popa
jno
jo
or
ret
mov
lcall
aad
les
mov
dec
or
repz
cltd
mov
pop
xchg
mov
add
jl
xchg
sub
lods
in
sbb
scas
sbb
ljmp
xor
push
loopne
jmp
sahf
dec
enter
push
mov
icebp
aaa
push
cmc
mov
cmpl
or
std
dec
mov
in
inc
push
inc
jg
adc
mov
insl
jne
mov
add
ss
or
cmp
mov
pop
cmc
xor
stos
add
or
outsb
mov
cltd
push
les
cltd
sub
dec
loopne
faddl
rorb
push
loopne
sbb
sbb
loopne
push
jo
dec
shrl
add
cmp
shrb
rcll
stos
pusha
sbb
cmpsb
lcall
push
aaa
popa
inc
mov
push
jo
add
pusha
sub
lret
insl
dec
rcrb
sub
mov
jge
aad
mull
mov
sbb
mov
popa
aaa
xor
lods
mov
popf
mov
lods
mov
pop
sahf
dec
xor
xadd
cmpsb
pop
xchg
scas
pop
mov
cli
push
sub
xchg
mov
xchg
and
fsubs
mov
pop
sub
pushf
mov
lret
cwtl
stos
adc
jb
sub
pusha
in
push
add
and
push
dec
mov
in
mov
mov
jg
add
inc
mov
jbe
lods
out
xlat
lods
cli
push
iret
xchg
cmp
cmpsb
xchg
icebp
jle
jecxz
movsb
mov
test
lods
popa
xor
pop
hlt
mov
push
bound
mov
mov
push
sbb
mov
sbbl
mov
movsl
insb
ljmp
scas
arpl
sbb
enter
mov
js
fdivrs
std
pop
pop
fcmovne
mov
repz
xchg
xchg
cmpsl
lods
ret
in
stos
push
mov
mov
fnstenv
mov
sti
mov
lock
mov
jp
push
cwtl
sahf
dec
pop
icebp
movsl
push
int
mov
xchg
in
and
xchg
dec
push
lock
sbb
pop
ja
adc
mov
pop
inc
xchg
clc
loopne
hlt
lea
mov
sub
test
ror
outsl
stos
addr16
in
outsb
std
test
jno
das
mov
adc
dec
aam
sbb
add
push
stc
and
sub
push
push
in
mov
or
inc
or
cmp
mov
stos
or
xchg
jb
add
mov
mov
out
pop
popf
pop
out
cmpsb
and
jno
movsb
fsubrs
int3
dec
dec
mov
or
rclb
add
outsb
repz
dec
dec
pop
lcall
or
lret
cmp
scas
and
sbb
decl
andl
in
lahf
xor
xor
cmp
push
xchg
xlat
push
or
popa
or
pusha
cli
lods
push
in
sub
orb
popa
int
or
mov
test
shlb
nop
adcl
push
lock
in
jmp
mov
inc
xor
insl
mov
pushf
nop
adc
sub
ja
pop
dec
test
sub
adc
adc
loopne
rclb
or
or
in
or
divl
les
call
xor
xchg
int3
pushf
out
xchg
aam
mov
addr16
add
dec
mov
hlt
mov
adc
push
test
or
fimuls
push
lret
fstl
sbb
mov
mov
pushf
dec
enter
pop
xchg
dec
mov
mov
xchg
les
mov
adc
call
xchg
or
push
ds
xchg
mov
pop
and
lret
jns
sbb
imul
ret
cmpsb
xchg
in
cs
mov
jg
inc
pop
mov
mov
jns
rorb
inc
mov
add
cmpsl
jo
loopne
cmpsb
cli
ljmp
lea
pop
jmp
and
cmp
fwait
sbb
pusha
pop
popa
xchg
in
jge
or
les
mov
fs
lea
scas
add
dec
dec
je
xchg
addb
clc
and
and
dec
clc
daa
nop
and
pop
lahf
mov
std
dec
jmp
out
movsb
pop
lahf
bound
push
shrl
dec
sbb
ret
jae
repz
mov
jb
sub
and
in
cwtl
ficoms
movsb
push
loopne
jb
mov
rclb
mov
jno
popf
neg
mov
jns
lret
mov
mulb
mov
jp
popa
mov
sub
mov
xchg
mov
cwtl
or
push
mov
inc
sub
popa
repz
mov
pop
in
stos
cli
inc
sahf
mov
push
mov
sbb
mov
mov
xor
movsl
dec
pop
cs
xlat
mov
fistpl
cli
es
jge
leave
js
mov
mov
xchg
sbb
adc
addr16
xchg
mov
nop
pop
je
jle
inc
outsb
inc
mov
push
sbb
xlat
bound
neg
std
mov
mov
adc
pop
mov
or
mov
adc
cltd
clc
in
push
pop
mov
adc
cmpsb
call
mov
movsl
cmp
and
fsubr
outsl
ja
mov
je
repz
mov
icebp
test
les
mov
cmp
nop
mov
cmpsb
sbb
pop
sub
sub
sahf
pop
pushf
fsubs
mov
push
adc
mov
lock
lea
cwtl
int
push
les
mov
lea
mov
lods
subl
adc
mov
jno
xor
shlb
pusha
cmp
mov
mov
addb
fs
idivl
pop
mov
insl
sbb
inc
imul
mov
xor
cmpsl
gs
mov
push
push
rorl
jp
in
push
in
cmc
jle
xlat
push
popa
in
into
pop
mov
mov
dec
lea
in
ds
hlt
fidivrs
gs
cmp
and
pop
ljmp
pushf
popa
stos
mov
iret
cltd
and
and
sbb
pop
sbb
sahf
mov
sbb
scas
dec
scas
negl
and
push
pop
pop
aaa
loopne
push
xchg
dec
pop
fidivrs
lea
sbb
pop
mov
mov
and
xor
sbb
stc
push
mov
mov
xor
lret
out
fldt
sbb
lods
inc
daa
mov
jge
inc
adc
je
jns
pusha
sahf
sbb
xchg
in
fistl
fdivl
mov
cmpsb
push
pushf
add
in
xchg
ljmp
adc
mov
dec
and
lods
mulb
dec
or
in
repz
ljmp
mov
int3
mov
aaa
cmp
popl
xchg
loope
pop
js
inc
cmc
xchg
popf
jno
xor
mov
cmpb
jbe
outsl
stos
add
sub
notl
mov
and
stos
mov
popf
cmp
notb
mov
add
int3
xchg
sub
push
add
scas
shlb
jbe
enter
out
mov
pop
stc
adc
xorb
mov
popf
push
loop
std
mov
out
lret
into
mov
xchg
mov
mov
or
mov
and
inc
sbb
sub
or
pop
bound
lods
mov
add
aas
xchg
icebp
dec
jbe
enter
pusha
xor
mov
notb
fsts
jo
cmp
shrl
popf
cmp
nop
jge
pop
mov
dec
xor
mov
mov
fwait
adc
dec
push
and
sahf
test
shlb
cmc
mov
cmp
divl
movsb
inc
and
inc
jp
insb
cmp
add
inc
je
or
fsub
fisttpll
jle
xor
jbe
pop
add
jnp
inc
pop
in
mov
es
jb
ja
sbb
out
sahf
popa
mov
in
jge
xchg
cmp
scas
subb
mov
hlt
add
mov
out
and
mov
cmc
pop
xchg
sbb
sbb
mov
loopne
cli
or
push
inc
push
stos
push
cmc
out
pop
sahf
xor
pop
sbb
dec
dec
scas
imul
dec
push
pop
cltd
add
cwtl
inc
sub
scas
mov
mov
ret
inc
insl
test
mov
bound
mov
aaa
leave
add
mov
dec
mov
or
push
inc
xlat
mov
inc
or
mov
mov
pop
jo
call
or
inc
cmp
xchg
mov
jnp
test
or
stc
in
call
xchg
mov
mov
mov
cwtl
sub
and
fstps
insl
mov
mov
lcall
and
in
test
cmpsb
out
je
jb
sbb
jecxz
stos
out
mov
adc
cmp
hlt
lcall
cwtl
call
in
mov
push
dec
add
lods
outsb
xchg
push
out
scas
test
and
cmpsb
fstpl
push
imul
sub
pop
xor
xchg
xor
sub
mov
dec
sub
iret
nop
sub
gs
imul
in
jne
dec
jo
push
mov
test
ret
sbb
mov
cmpsl
jp
xchg
sub
mov
mov
and
mov
outsb
and
cltd
fwait
push
out
push
pop
rolb
adc
xchg
fbstp
and
inc
lahf
mov
lcall
cmpl
adc
sub
lock
push
dec
out
lahf
sbb
push
movsb
mov
and
lds
popf
in
sbb
aad
xchg
pusha
dec
out
addr16
xchg
int
andb
xchg
es
jo
or
scas
mov
cmp
jp
les
dec
xchg
out
dec
fiaddl
cld
in
dec
xor
cld
pop
fdivl
cmp
xchg
mov
fidivl
pop
inc
call
adc
ja
inc
cwtl
addr16
aam
push
test
dec
push
xchg
jmp
outsl
int3
lret
cld
dec
test
data16
and
pop
xchg
mov
sahf
addr16
jae
call
adc
dec
popf
cmp
int3
into
dec
fdivrs
mov
mov
and
mov
mov
loope
cmpsl
rcrb
loopne
dec
push
mov
mov
jae
pop
xor
ja
push
xor
movsb
cwtl
loopne
add
sbb
xor
repnz
fwait
call
ficoms
mov
verw
adc
sub
outsl
int3
sub
lea
sub
jbe
cmp
dec
lods
mov
xchg
dec
fwait
je
pop
xchg
dec
out
inc
add
enter
out
test
movsb
scas
loop
ret
bound
scas
jns
lret
inc
cmp
enter
sub
mov
jle
add
jecxz
lods
popa
mov
aad
mov
rorl
xchg
cmpsl
pushf
xchg
inc
test
mov
stos
fsubl
jmp
xchg
mov
repnz
movsb
adc
mov
inc
jecxz
int3
pushf
sub
sub
pop
int3
sbb
rorb
sub
cmpsl
adc
xlat
movsb
adc
dec
adc
mov
xor
sub
cs
imul
psubsb
push
or
and
dec
mov
inc
mov
cmpsl
dec
adc
jae
inc
movsb
xchg
leave
js
cmp
test
cmp
cmpsl
push
and
and
pop
xchg
mov
rcrb
adc
hlt
xchg
and
aad
fcoms
lock
pop
mov
cli
sbb
and
mov
fsubs
shll
xlat
mov
xchg
mov
movsb
and
xchg
pop
cmpsl
nop
push
jl
lods
frstor
cmpsl
inc
pop
adc
rcrb
xchg
jo
mov
jmp
mov
xchg
fldl
inc
mov
movsb
dec
pushf
jmp
cmpsb
inc
lods
rorb
int3
outsl
sub
pushf
popf
xchg
xchg
call
sbb
sub
adc
movsb
adc
jo
and
out
enter
fsubrl
cmpsb
or
test
std
or
push
nop
mov
mov
push
or
mov
push
ja
sbb
and
mov
movsb
lock
adcl
cltd
pop
inc
call
iret
push
std
sbb
cs
mov
iret
sbb
sub
in
fisttpl
mov
js
dec
lods
or
fs
mov
xchg
call
inc
les
lcall
push
xchg
sub
cmp
pop
gs
aaa
test
popa
mov
mov
pop
adc
cmp
lahf
mov
loop
xlat
popa
insl
in
push
pop
xor
outsl
loopne
addr16
sbb
and
rcrb
cmc
cmp
cld
pop
gs
ret
movsb
jno
dec
add
xchg
add
aaa
push
ljmp
inc
add
cmpsl
out
and
rolb
sbb
pop
mov
outsl
xchg
les
and
or
les
adc
and
add
add
or
pop
and
inc
cld
inc
loop
pushf
stos
mov
ljmp
movsb
fst
dec
test
sub
and
sub
sahf
ret
and
sti
aam
loop
popf
sub
jb
sarb
xchg
mov
fcmovnb
fwait
xchg
adc
fwait
add
stos
stos
xor
ja
test
dec
xchg
in
inc
lcall
adc
in
sbb
jl
jno
out
cmpb
sub
xorb
xchg
call
loopne
popf
jne
ljmp
xor
push
enter
repnz
adc
les
mov
jecxz
test
cmp
out
les
jno
add
gs
mov
js
adc
and
addr16
sbb
mov
popa
jo
lcall
push
call
in
inc
lcall
or
adc
loopne
adc
adc
xchg
insl
mov
ret
pop
sbb
push
mov
addr16
push
out
outsl
mov
lret
dec
popa
pop
cmp
dec
push
std
sbb
popf
jnp
lret
jns
cmp
push
loop
xor
lahf
sarl
adc
test
test
test
cmp
movsb
xchg
push
aam
imul
nop
cld
cmp
adc
push
ja
jmp
xchg
rorl
xchg
push
and
in
std
xor
dec
xchg
test
ret
and
sbb
fdivl
cmpsb
push
inc
or
cmpsl
jo
push
sub
adc
lea
cmp
pusha
out
sti
lds
or
repnz
adc
addb
adc
fisubl
movsb
add
xchg
loopne
sub
stc
popa
orb
mov
lods
stos
inc
pushl
fsubs
in
es
fwait
mov
dec
scas
adc
test
mov
cmpsb
mov
mov
scas
pop
repnz
stc
mov
mov
cltd
xchg
sub
pop
mov
cmovbe
dec
loope
out
subb
xchg
adc
or
das
addr16
outsl
xchg
inc
mov
or
ret
xor
outsl
pop
movsb
adcl
inc
daa
test
scas
fdivl
iret
sbb
push
add
and
pusha
clc
push
je
loope
and
in
xchg
xor
pop
mov
popa
divb
in
cltd
xor
adc
sti
xchg
xlat
add
sub
sbb
push
shrl
out
ja
int3
dec
rclb
daa
xor
dec
jb
movsb
ret
aad
int
push
or
lea
mov
or
push
pop
fdivrs
stos
jmp
inc
call
jle
push
daa
sbb
and
and
cmp
test
pop
fs
adc
popf
or
scas
cmpsl
mov
pop
xor
mov
add
sbb
or
adc
movsb
pop
out
cs
stos
jle
jae
lret
and
sub
in
je
jno
and
imul
scas
push
test
jecxz
test
and
adc
test
out
dec
sbb
imul
jecxz
test
data16
jmp
xchg
repnz
sub
cld
xchg
in
mov
xchg
pop
push
mov
sub
dec
jno
or
inc
cmp
fsub
test
push
xchg
call
mov
lods
push
enter
mov
and
mov
out
inc
sbb
jle
cmp
pusha
mov
mov
je
stos
fisttpl
and
add
outsl
xchg
stos
inc
pop
fldenv
mov
pop
loopne
and
sbb
add
mov
xchg
int3
cmp
or
mov
imul
xlat
mov
cmp
jg
push
call
addb
stos
push
pop
in
je
loopne
dec
fsubrl
lock
sub
scas
push
outsl
shrl
and
imul
pushl
push
mov
inc
in
int
pop
test
xchg
bound
movsl
aaa
ret
out
adc
out
mov
sub
in
es
enter
or
pop
inc
and
sub
in
outsl
jmp
out
jmp
movsb
inc
out
loop
dec
imul
inc
pop
sbb
adc
or
ljmp
cltd
ja
loop
rolb
dec
cmp
jae
shrl
ss
fnstsw
and
cmpsl
mov
aaa
movsb
push
leave
pop
cwtl
imul
bound
in
inc
lcall
mov
leave
xchg
addr16
shll
jb
out
enter
cmpb
and
loop
divl
push
pop
fwait
dec
or
loopne
aas
and
imul
jp
jecxz
stc
movsl
stos
jl,pt
pop
test
add
pusha
stos
clc
stc
mov
cmp
dec
js
cmp
sub
adc
cmp
insl
mov
vunpcklps
movsb
push
std
pop
loopne
movsl
ljmp
push
pop
rorl
mov
data16
lahf
ljmp
cmpsb
cltd
int
hlt
mov
or
nop
dec
fiaddl
push
int
push
std
mov
xchg
push
cmp
inc
fdivrl
test
out
mov
call
dec
or
movsb
jge
lahf
and
or
or
push
pop
ljmp
jge
cmpsl
adc
loop
imul
movsb
sarb
cs
fimuls
xchg
les
pusha
movsl
dec
or
lahf
outsl
cmp
das
push
enter
push
int3
arpl
and
mov
call
push
add
mov
out
ds
popa
rep
mov
mov
fsubrs
xor
pushl
adc
fsubs
xlat
movsb
and
dec
xor
loop
dec
faddl
jge
push
or
fistpl
into
mov
mov
inc
lret
mov
lahf
out
sbb
sti
jmp
inc
push
mov
sub
inc
ss
xchg
sub
bound
imul
lods
pop
out
mov
daa
mov
jmp
mov
mull
lock
mov
pop
jb
or
xchg
mov
mov
mov
in
or
or
xchg
ja
jo
mov
loop
in
pop
and
pop
subl
xorb
popa
mov
cwtl
into
fstl
xor
xchg
cmp
mov
mov
dec
inc
mov
inc
xchg
mov
and
mov
push
add
push
cmc
push
sbb
jo
xchg
test
cwtl
movsl
jno
fdivp
shrl
and
das
mov
xchg
jbe
jb
andb
jns
xchg
lahf
jge
movsb
adc
sbb
in
out
jb
sub
call
imulb
mov
daa
out
cmp
scas
xor
out
into
lock
shlb
fsubrp
add
lret
out
or
inc
jns
cmpb
cmp
sub
pusha
outsb
movsb
mov
mov
js
outsl
scas
ja
scas
mov
xchg
rclb
or
outsl
sub
out
push
pop
pop
pop
xor
ret
xor
cld
in
sbb
subb
xor
xor
int
sbb
test
pop
shll
leave
fwait
mov
mov
test
scas
lea
in
mov
mov
bound
sbb
ja
cmp
cmp
cwtl
adc
popa
loope
call
lods
das
lea
addr16
stos
aam
mov
je
mov
dec
test
in
bound
adc
shrb
adc
inc
out
in
jl
test
rolb
dec
lcall
mov
mov
cmp
push
jns
nop
xchg
adc
mov
cld
mov
subl
cmp
dec
rcr
adc
loop
mov
or
lods
mov
movsb
xor
stos
idivb
ljmp
pusha
xchg
xor
mov
cmp
mov
and
mov
push
dec
dec
repz
pop
pop
mov
push
mov
mov
mov
mov
rolb
rorb
or
lea
pop
or
or
push
cmp
lret
and
jge
call
mov
repz
ds
or
cwtl
add
pop
addr16
cmp
and
push
cmpsl
bound
push
mul
cmp
pxor
push
add
jns
push
xchg
xor
inc
or
scas
xchg
ja
mov
loopne
stc
or
xlat
xorl
mov
mov
add
insl
sarb
outsl
rcl
xorl
xchg
and
xor
xchg
cmpb
shrb
jno
inc
subl
adc
xor
sub
push
in
inc
fcmovu
sub
movsb
mov
rclb
jb
scas
loop
pusha
xor
push
cltd
je
push
stc
push
add
out
int
push
movsb
adc
xchg
hlt
push
cmp
dec
subb
shll
ljmp
mov
mov
dec
roll
loop
dec
dec
xchg
stos
mov
mov
and
pop
xchg
movsb
jbe
lret
lahf
push
movsb
or
lahf
xlat
scas
ss
and
push
fsubrp
ss
loopne
xchg
inc
in
pushf
mov
jno
sbb
mov
lods
loopne
rol
or
and
adc
push
cmc
mov
push
push
call
mov
lods
shl
je
inc
movsb
sub
sbbl
xchg
cmpb
mov
repnz
sub
xor
inc
andb
leave
in
inc
lcall
xchg
sbb
dec
out
or
popa
mov
dec
fldl
lods
or
in
mov
test
loopne
insl
push
pop
push
orb
and
xor
push
xchg
or
pop
mov
sub
inc
scas
sub
mov
and
popf
push
sbb
movsl
jb
sbb
or
jb
and
cmpsl
mov
cmp
jmp
loope
enter
jmp
mov
mov
or
and
pusha
orb
jmp
jb
into
sub
push
pushf
test
outsl
repz
jae
sub
fdiv
cmp
push
adc
mov
mov
mov
popa
mov
xchg
inc
daa
cmp
out
in
or
lahf
out
stc
push
in
aad
mov
inc
lcall
sbb
enter
je
fwait
push
xchg
loop
add
fwait
je
divl
or
lods
aaa
fistl
push
scas
sub
in
mov
mov
lods
pop
aaa
sub
xor
adc
fistpl
sbb
and
sub
lds
loop
popa
repz
cmc
pop
loope
mov
in
sbb
xchg
xor
pop
xchg
xchg
out
add
repz
test
push
dec
xchg
push
push
xlat
pusha
push
xchg
sbbl
cwtl
popf
rorl
push
int
inc
imul
imul
xchg
xor
icebp
ret
xchg
lea
pop
sbbl
loopne
xchg
enter
xor
sub
loop
ja
icebp
mov
ret
jecxz
inc
movsb
dec
mov
sbb
sub
ja
xchg
loope
mov
xchg
les
jnp
bound
cmpsl
lods
mov
frndint
and
shl
aaa
je
pop
mov
cmpsl
sub
adc
xchg
pop
inc
xor
loopne
lock
xchg
xchg
dec
aam
cmp
dec
jnp
out
call
imul
test
push
movsb
popf
pusha
push
insl
xor
mov
pop
out
aaa
xor
into
add
and
lock
cmpsl
xor
int3
push
call
dec
mov
xchg
call
in
inc
lcall
scas
rorl
ja
call
push
add
mov
das
rorl
push
inc
sbb
mov
adc
rorl
cs
jo
pusha
xor
hlt
lods
mov
jmp
les
mov
movsl
aaa
in
mov
and
in
and
mov
pop
push
andb
lods
lods
sbb
pop
jae
sub
xor
popa
dec
hlt
push
xchg
call
mov
mov
loope
fs
xchg
mov
ret
sub
xchg
xor
xchg
push
jge
ljmp
and
push
fimuls
stc
add
imul
or
inc
adc
push
subl
xchg
push
imulb
mov
outsb
or
push
adc
sbb
popf
sti
xchg
fidivl
mov
cmpsb
adc
out
test
inc
jo
jno
push
xchg
xor
and
sbb
xor
lahf
adc
mov
cs
fcoml
gs
cmp
lock
mov
cmpsl
bound
movsl
lret
mov
insb
shlb
jo
sbb
jno
xor
fwait
jo
sbb
cmpsl
xor
lock
mov
imul
stos
push
out
fs
aam
out
pop
ljmp
bound
jecxz
mov
mov
scas
mov
idivl
pop
xor
jb
jne
dec
mov
imul
xor
pushf
aam
out
or
dec
int
outsb
lds
cmpsl
sbb
fldt
mov
imul
cmp
mov
xchg
push
fldenv
cltd
or
mov
adc
push
xor
enter
xchg
fs
lods
stos
xchg
int3
inc
sbb
mov
cld
je
jno
push
mov
pop
stos
cs
cmpsl
xor
pop
cli
test
jnp
mov
xchg
pop
je
xchg
mov
jo
das
popa
push
cld
pop
bound
lods
rcrb
lret
test
xor
lock
add
mov
cmp
xor
inc
jbe
les
mov
jg
mov
movsb
push
bound
xor
movsl
push
xchg
call
in
inc
lcall
inc
andb
shll
add
xlat
popa
out
out
push
movsb
aas
pusha
pop
jo
andb
scas
sti
cli
xor
cmp
es
and
ja
push
xchg
push
pop
jns
xchg
xor
insb
mov
xchg
es
enter
mov
push
shl
lea
les
sbb
lock
loopne
xchg
cmp
xor
fwait
fs
movsl
adc
inc
out
push
mov
call
or
mov
sub
mov
mov
into
xchg
dec
push
shl
add
mov
sub
sub
aaa
mov
into
or
xor
cmc
adc
push
mov
ja
test
add
pop
cmp
mov
bound
rorl
lea
mov
lds
cmp
loop
dec
lock
mov
imul
int3
mov
hlt
inc
lcall
add
daa
xor
inc
add
push
and
shll
ret
inc
mov
mov
into
test
sbb
cmpsl
cwtl
or
scas
dec
gs
sub
into
xlat
or
mov
pop
push
add
call
daa
loop
call
test
hlt
in
or
push
push
enter
pop
ret
int3
and
sbb
dec
rcrb
xchg
xchg
sbb
cmp
add
popf
push
insl
mov
lock
and
lea
lcall
call
push
and
push
test
sub
fwait
aaa
fistl
mov
cmp
and
mov
in
inc
lcall
out
jno
and
jno
add
xchg
test
nop
int3
fiadds
repz
or
ljmp
dec
mov
pop
inc
sub
cmpsl
mov
sahf
andl
or
inc
pop
or
or
mov
fldl
mov
sub
fs
mov
rorl
dec
dec
mov
mov
aam
test
or
xchg
lcall
sti
and
jl
push
cwtl
push
movnti
orl
arpl
lret
addl
adc
push
sbb
add
inc
out
scas
es
stos
stos
push
outsl
adc
shlb
sbb
mov
pop
adc
mov
in
mov
insl
mov
in
sbb
loopne
outsl
daa
stos
out
fsubr
add
xor
inc
out
fwait
and
cmpsl
test
mov
shl
arpl
cltd
push
lahf
out
lahf
pop
push
lret
jmp
xor
or
cltd
out
dec
and
jbe
fcmovb
adc
scas
stos
inc
addl
push
inc
pop
pop
test
fld
sbb
or
dec
xor
addr16
cld
enter
out
loop
jge
inc
and
fldcw
push
mov
mov
je
into
xchg
dec
and
dec
push
adc
mov
mov
ss
out
and
pop
test
imul
mov
or
stc
push
and
pusha
out
imul
imul
or
mov
movsb
push
push
sub
outsb
cwtl
xlat
dec
push
mov
outsb
rorb
js
cs
movsl
je
imul
lock
aam
mov
adc
iret
jno
addl
popa
sub
jbe
cmp
push
or
and
or
cli
cmpsl
xchg
ficoms
inc
imul
scas
lahf
mov
sbb
stos
out
push
out
pop
sahf
mov
sti
mov
loop
call
mov
dec
loope
cmpsl
mov
into
sub
adc
mov
pop
int
jmp
cmpsb
inc
sbb
mov
imulb
and
cmp
dec
push
addr16
jmp
pop
push
and
lea
push
jle
lds
xchg
xorl
xor
and
sbb
sbb
push
pop
in
xlat
scas
cmpsl
and
push
cmp
or
mov
mov
or
subb
pop
ss
out
enter
notl
xchg
lahf
lret
mov
out
imul
cld
and
sti
pop
jb
test
test
mov
out
inc
loop
cmp
push
adc
cmp
bound
xchg
mov
int
add
sbb
call
hlt
mov
sbb
popa
out
outsl
lret
and
mulb
std
pop
mov
ljmp
scas
addr16
insb
adcl
mov
sub
sub
mov
push
push
lock
mov
inc
add
mov
andb
xchg
pusha
mov
loope
in
and
sub
and
mov
mov
les
addr16
loop
inc
dec
xchg
in
cs
xchg
inc
adc
jmp
xchg
popa
lcall
push
lahf
scas
stc
push
scas
sub
and
push
call
push
jae
stos
cmp
sbb
frstor
mov
popa
data16
adc
jae
cmpsb
push
sub
addr16
adc
xor
imul
movsl
dec
xor
jae
in
inc
pop
xor
call
and
pusha
stos
add
imul
mov
movsb
mov
movb
mov
int3
lock
mov
inc
jg
pop
mov
jle
inc
jae
mov
mov
jmp
pop
xor
adc
nop
xchg
mov
lcall
int
loop
pop
sahf
mov
sub
insb
or
hlt
sub
dec
jnp
aaa
pop
xchg
or
outsl
push
nop
xor
mov
sub
and
daa
jg
push
gs
fcoms
and
adc
xchg
popf
lods
or
ret
stos
ds
dec
das
pop
mov
inc
hlt
bound
adc
call
jbe
jb
jns
add
push
dec
sub
test
lods
push
cmp
pop
lock
int
testb
mov
jmp
xchg
jb
stc
fiadds
mov
iret
sahf
mov
push
add
stos
pop
mov
sbb
dec
xchg
rcr
test
shll
xchg
push
lods
xor
fstl
test
cmp
or
push
subl
repnz
push
sarb
lods
cli
jns
add
popa
lods
push
xchg
inc
and
les
lcall
aam
mov
push
and
mov
xor
out
ss
sub
bound
fucom
andb
notb
mov
mov
jbe
stc
jg
mov
ds
outsb
imul
inc
jne
fnsetpm(287
lock
mov
addr16
dec
fs
mov
pusha
or
dec
mov
cmp
mov
in
sbb
ss
xchg
sbb
cli
arpl
mov
int3
mov
rcr
adc
and
pusha
dec
xchg
jbe
push
jge
xchg
test
add
push
mov
mov
int3
sub
mov
scas
jmp
mov
mov
cmpsb
dec
sub
cmpsb
enter
adc
adc
mov
sbb
sbb
mov
test
sbb
sub
out
sub
lods
pop
jb
mov
push
inc
jmp
and
enter
lods
mov
sbb
fcmovnb
mov
mov
ret
sub
pop
cmp
pop
cltd
fcompl
jb
push
push
arpl
mov
mov
mov
divb
data16
push
sub
fwait
sub
inc
xchg
cmp
jnp
adc
pusha
jg
or
push
pusha
xchg
add
push
daa
leave
xchg
lods
fldenv
xchg
imul
loopne
jae
mov
push
in
jg
test
outsb
loopne
stos
or
sahf
fistl
mov
push
adc
shll
in
sbb
mov
adc
neg
sub
fmull
xchg
jb
pusha
cmp
andb
mov
jo
and
sbb
xlat
popl
xchg
mov
ret
push
mov
jmp
rcll
mov
mov
cmp
pop
mov
xor
adcb
sbb
sahf
add
adc
aam
fistps
int
jmp
icebp
mov
arpl
loope
dec
sub
mov
inc
repz
lods
pop
push
addl
xor
inc
cmp
dec
inc
mov
inc
test
xlat
in
dec
jecxz
push
and
jbe
movsl
xor
or
stc
out
leave
mov
dec
into
add
mov
sti
add
sbb
xchg
in
ja
outsl
add
or
add
repnz
jno
repz
lahf
test
pop
xchg
sbb
data16
test
mov
test
fmul
ja
scas
es
xlat
pusha
inc
inc
push
popf
jmp
fldenv
xchg
repz
mov
pop
mov
or
std
dec
movsl
loop
sbb
mov
enter
pop
dec
repnz
mov
sbb
adc
xlat
mov
dec
addr16
lock
mov
jbe
imul
lods
ljmp
adc
xor
movsb
cmp
xchg
ror
mov
cmp
imull
inc
dec
and
enter
inc
movsb
xchg
loop
andl
dec
mov
stos
popf
stos
pusha
sub
and
scas
ja
outsl
jne
in
jecxz
std
scas
lock
leave
jecxz
sti
in
cmpsl
and
jle
inc
and
push
rorb
int3
sbb
and
sub
arpl
sub
test
add
sub
and
xchg
cltd
out
popa
and
jno
sub
gs
in
movsb
pushf
popa
andb
loope
add
push
loopne
imul
pop
aaa
cmpl
cmpsb
sbb
mov
pop
or
mov
sti
pop
mov
daa
xor
inc
lods
jp
and
fsubrs
sub
jge
pop
push
pushf
xchg
ja
inc
fsubs
gs
jns
xchg
adc
sbb
pop
ja
andb
outsl
pop
movsb
sbb
movsl
ret
and
in
or
movsl
pop
xorl
call
push
and
loopne
xchg
stos
inc
lahf
adc
fidivrs
mov
jne
push
push
imul
test
call
in
adc
mov
fbld
xchg
addr16
xchg
and
xchg
add
add
adc
xchg
dec
test
daa
pop
popf
push
daa
in
add
loop
sub
jecxz
and
out
scas
or
and
mov
arpl
in
out
call
popf
cmp
cmpl
int3
jp
jo,pn
push
iret
add
xchg
pop
xor
andb
scas
movsb
pop
fcompl
sub
mov
stos
mov
aas
pusha
xchg
mov
hlt
mov
repz
lahf
dec
mov
movsb
adc
ja
inc
fsubs
mov
cs
jo
mov
jnp
movsb
insb
into
rolb
in
mov
cmp
movsb
cltd
cmpsl
xchg
mov
cmc
rep
int
sub
mov
push
pop
and
inc
push
cmp
imul
sub
adc
out
cmpsl
add
fldt
lea
int3
in
sbb
sbb
or
cmpl
push
fidivrs
and
and
dec
out
xor
push
sti
les
dec
cmpsb
push
popf
gs
mov
les
mov
sbb
inc
loop
jo
les
add
push
mov
ja
mov
inc
mov
mov
gs
inc
push
mov
xor
rorl
mov
lods
fldenv
xchg
addr16
mov
stc
push
in
sbb
repnz
cmp
pop
ja
and
xchg
scas
xchg
xor
ja
push
or
and
mov
aaa
in
loopne
fucom
out
lock
add
mov
or
fisttpll
xchg
push
movsb
or
pop
xor
and
rorl
call
test
movsb
test
mov
dec
mov
and
imull
cmp
movsb
mov
xchg
mov
mov
push
jmp
adc
add
add
xchg
movsb
adc
sbb
or
in
adc
add
aam
mov
jmp
and
xchg
xchg
mov
movsb
push
sahf
push
xchg
mov
push
test
xchg
mov
test
sahf
loop
call
or
rcrl
addr16
sub
daa
pop
test
test
je
push
ljmp
or
les
cmpsl
loop
dec
mov
icebp
je
imul
mov
aas
adc
inc
aad
stos
fdivrs
sub
repz
ds
push
bound
dec
add
and
out
jb
push
push
jl
in
fs
into
cmp
and
popf
call
mov
mov
cmp
lods
pop
jl
xchg
sahf
jno
cmpsb
cmpsl
inc
insl
xchg
mov
sbb
sbb
sub
xor
adc
stos
jo
ljmp
aaa
imull
pop
mov
outsl
mov
sbb
mov
push
sub
push
jge
loopne
sbb
mov
loopne
out
and
and
hlt
out
sub
mov
test
fsubs
cmpl
mov
jnp
gs
jne
movsb
fwait
cmp
fwait
addr16
adc
mov
test
fsubl
lods
stos
popa
fbld
jmp
daa
sub
fwait
jo
sbb
fs
jmp
adc
in
adc
out
and
out
pop
xchg
das
mov
jmp
and
into
mov
and
jmp
cltd
sub
fwait
jo
sbb
fs
jmp
movsb
mov
sbb
jecxz
andb
bound
xor
sbb
in
sbb
fsubl
sbb
xor
jl
or
sub
jl
xor
push
dec
jns
mov
dec
loope
lcall
push
xchg
push
xchg
and
lea
fcomps
add
inc
lcall
sbb
xor
add
mov
in
adc
fwait
and
push
jnp
mov
cmpsb
testl
sub
scas
das
outsl
pop
adc
daa
mov
movsl
les
imul
sbb
mov
push
inc
call
cmp
test
scas
mov
out
or
and
loop
cltd
sbb
movaps
loop
mov
mov
add
loop
mov
repz
push
mov
xor
or
and
loopne
pusha
callw
jmp
mov
push
aas
sub
out
and
in
mov
pop
push
jg
xchg
add
rclb
pushf
inc
shlb
pushaw
and
lods
sub
xchg
popa
int
pop
ja
cmp
dec
dec
sub
and
xchg
pop
out
aam
cmp
xor
inc
outsb
xchg
scas
adc
mov
or
test
mov
mov
pop
loopne
push
cmp
pop
andb
popa
xor
repnz
mov
and
and
cmpsl
dec
push
rorl
into
and
mov
mov
push
leave
dec
cmp
nop
lret
jbe
adc
mov
and
lcall
cmp
aam
and
test
xor
jae
dec
int3
push
pusha
sti
jns
dec
cmp
aam
popa
jo
imul
mov
mov
ds
scas
xor
cmp
or
sbb
pop
pop
xchg
ja
je
lcall
xchg
test
mov
xor
mov
stos
jo
or
jecxz
cmpsl
sub
and
movsb
daa
or
daa
mov
xor
subb
popa
das
dec
mov
xchg
sub
imulb
xchg
scas
xor
mov
movsb
lret
jmp
lahf
or
int3
dec
sbbl
push
jo
xchg
je
pushl
inc
xchg
lret
adc
pop
push
inc
cmpsl
mov
mov
mov
aaa
and
mov
sbb
mov
adc
addr16
xor
push
pop
fidivrl
mov
jp
mov
insl
cmp
push
xchg
pop
loop
push
sbb
imul
fwait
push
movsb
mov
aas
call
stos
cli
stc
cmp
dec
mov
hlt
pushf
inc
imul
jo
lds
or
xorb
in
dec
xchg
push
scas
push
mov
dec
movsb
sub
mov
out
mul
mov
push
add
aam
sbb
fucomi
pusha
cmp
fisubrs
or
sub
cmp
mov
sub
and
xchg
mov
insb
data16
sbb
mov
cli
add
loop
ljmp
mov
mov
cltd
mov
jl
and
cli
cmp
jae
and
in
sub
xchg
test
sbb
xchg
and
loopne
repnz
and
pusha
or
daa
or
pop
jmp
dec
xchg
and
jl
mov
sub
mov
je
mov
mov
or
jmp
call
icebp
push
popf
sbb
jmp
xor
bound
ficoml
jno
in
out
and
sbb
daa
cmp
fmull
xor
movsb
push
dec
and
out
loop
push
mov
mov
scas
stos
aad
pop
and
xchg
fsubrl
add
add
dec
pop
sub
imul
movsb
jge
jl
movsb
movsl
jle
cmp
ss
push
push
shlb
lods
call
lock
clc
fs
shrb
fwait
sahf
mov
cmp
cmp
aam
addr16
add
je
fcomp
js
jecxz
mov
mov
stos
mov
mov
pop
adc
mov
xchg
repz
aaa
outsl
jnp
cwtl
sbb
xchg
iret
ret
xlat
lret
fbld
pop
sti
lsl
arpl
jg
jae
cmp
push
dec
pop
mov
mov
repz
inc
out
in
and
mov
cld
sub
mov
xor
add
shlb
fadds
add
cmp
popf
mov
rolb
mov
dec
pop
mov
and
cmpl
ljmp
rorl
mov
pop
or
icebp
cmpsl
jno
push
sbb
and
cwtl
lahf
push
stc
int3
dec
mov
lea
gs
insl
adc
pop
inc
dec
sbb
dec
jecxz
rcrl
pop
adcl
push
pushf
jg
xor
mov
push
cli
and
mov
push
inc
pop
repnz
pushf
mov
mov
dec
gs
insb
lret
xchg
or
mov
loop
pop
call
cltd
js
in
xchg
push
scas
mov
mov
mov
pop
cmpsb
push
lock
cwtl
mov
into
adc
enter
fcomps
or
mov
imul
mov
out
fsubp
nop
loopne
push
std
outsl
int3
xchg
roll
pop
push
xor
adcb
pop
sbb
mov
inc
push
push
xlat
mov
pop
je
andl
mov
jl
push
pop
and
arpl
ds
icebp
xor
jp
insb
out
mov
addr16
leave
popf
push
xchg
in
insl
punpcklbw
adc
sbb
jge
mov
jns
int3
out
clc
and
inc
das
repnz
pop
mov
addr16
inc
push
inc
movsl
inc
mov
xor
dec
jmp
push
cmp
mov
sti
in
inc
nop
mov
repnz
dec
test
push
lahf
mov
mov
and
or
jns
int3
mov
shlb
repz
sbb
fimuls
mov
jbe
lahf
mov
mov
add
inc
push
addr16
cmp
sahf
in
sub
test
dec
inc
xor
leave
pop
in
dec
or
cmp
or
mov
inc
xchg
mov
adc
push
jge
mov
mov
filds
ret
and
inc
sbb
pop
and
dec
test
jge
push
stos
mov
push
pop
mov
cld
push
mov
push
pop
add
stc
mov
pop
inc
push
icebp
stos
sbb
jge
pushf
fldt
cmpsl
insb
push
pusha
int
dec
cli
mov
and
gs
fmuls
pushf
mov
repz
mov
push
test
xchg
push
push
loopne
dec
insb
push
rorb
dec
test
xchg
movsl
std
mov
sub
push
imul
jmp
pop
loope
shrb
mov
add
mov
loopne
cmc
xor
xchg
shlb
inc
jns
out
dec
aad
fildl
into
or
in
mov
out
add
fisubrl
repz
and
push
jle
pop
xchg
mov
and
or
gs
push
cmp
pop
mov
pop
clc
push
push
mov
movsl
inc
xor
push
cmp
sbb
popf
adc
mov
repz
mov
sbb
mov
xor
push
pushf
sub
push
inc
mov
push
gs
mov
cmp
ret
dec
mov
shll
scas
std
dec
and
mov
stc
daa
xchg
in
rcll
xor
cwtl
pushf
add
sbb
insl
sti
dec
mov
pop
lds
insl
cmc
testl
mov
mov
aad
cmc
dec
pop
sub
into
push
loope,pn
adc
dec
repz
push
pusha
add
cwtl
mov
cmp
mov
sub
js
test
fwait
xchg
or
mov
or
pop
js
mov
in
inc
and
xchg
pop
ja
loopne
jbe
mov
mov
mov
in
cmpsl
mov
lret
dec
insb
cmc
mov
mov
add
xchg
xchg
xor
fs
cmp
mov
in
cmp
dec
mov
sbb
jg
pusha
jbe
mov
mov
cmp
mov
sbb
insl
adc
out
cmp
pop
nop
js
xchg
pop
pusha
into
adc
sub
pop
xchg
xchg
xor
push
or
mov
lods
cmp
and
sub
shl
mov
fcmovb
je
mov
scas
cld
or
scas
pop
ret
xchg
loopne
sbb
xchg
xchg
mov
lock
pushf
fsubl
movsl
xor
and
mov
jns
xchg
adcb
mov
cwtl
jecxz
mov
jl
dec
lcall
mov
es
arpl
in
aas
lods
rep
xor
popa
test
jne
xchg
pop
mov
movsl
pop
cmp
sahf
cmp
sub
pushf
test
mov
mov
pop
cmp
push
sub
pusha
mov
cmpsl
cld
mov
sbb
mov
cmp
xlat
sub
repnz
pop
test
cmp
mov
dec
xchg
fisubs
cs
mov
sbb
jle
and
inc
adc
sti
adc
fldl2t
push
mov
lds
das
push
jp
mov
mov
push
adc
mov
mov
mov
orl
int3
push
call
xchg
mov
adc
push
adc
dec
loopne
inc
sbb
mov
jle
sbb
clc
dec
int
cld
nop
mov
mov
or
in
gs
mov
or
jecxz
cmp
jnp
out
or
fwait
add
xchg
xor
shr
pop
lret
jb
adc
je
clc
xor
add
insl
nop
or
add
pop
push
mov
xor
mov
pop
stos
xlat
lea
sbb
dec
movsl
mov
cmp
push
jl
push
mov
popf
or
mov
mov
cmpsb
adc
mov
mov
pop
mov
mov
xchg
in
inc
enter
cmpb
mov
fstl
stc
mov
movsb
mov
mov
xchg
mov
icebp
inc
or
mov
loope
lcall
xchg
push
mov
mov
mov
repz
sbb
xchg
pusha
cmp
and
mov
sub
mov
inc
test
std
mul
arpl
pop
cmpsl
int
sbbl
icebp
jb
and
jns
inc
inc
pushl
lock
mov
add
jmp
insl
ficomps
imul
repz
lret
into
popa
or
adc
imul
sti
mov
inc
aaa
int
in
add
sub
frstor
add
ficoms
push
mov
lods
rorb
sub
pop
sub
dec
js
jle
loope
and
jnp
sbbb
mov
push
dec
sahf
fisubs
dec
inc
xchg
adc
js
pop
xor
adc
imul
std
add
xchg
sub
adc
dec
jb
std
jp
mov
in
imul
popa
cmp
mov
cmpsb
pop
mov
mov
pop
std
jno
jmp
mov
xor
or
gs
sarb
pop
cmpsl
sub
dec
xchg
subb
fisubs
pop
xchg
push
push
mov
adc
inc
std
cmp
mov
in
insl
aaa
mov
adc
push
cmp
sahf
dec
int
inc
lea
cli
dec
aam
push
lds
mov
inc
popa
ret
adc
addr16
mov
dec
gs
and
sub
push
lock
lcall
push
jl
inc
icebp
mov
or
adc
sbb
push
popa
add
sbbb
scas
shl
lahf
lods
and
cmp
int3
fdivrp
add
xchg
addr16
sbb
movsl
imul
sti
loopne
jne
mov
push
into
xchg
xchg
pop
xchg
pop
mov
stos
cmp
mov
movsb
rep
dec
mov
test
cmpsl
mov
stos
sbb
callw
mov
jbe
out
loopne
inc
mov
xor
mov
cmpl
and
jl
out
dec
out
and
xlat
push
adc
inc
nop
fbstp
mov
insb
std
mov
inc
lock
rorl
out
ret
inc
adc
orl
sub
jns
push
mov
mov
mov
inc
jge
cwtl
loope
lds
sub
ret
in
inc
pop
cwtl
xchg
xchg
dec
cmp
loopne
outsl
out
movsb
push
push
xchg
aam
mov
aas
lcall
dec
pop
iret
mov
cmp
or
out
push
adc
adc
insl
add
sti
movsl
push
push
pop
mov
daa
add
das
loopne
inc
dec
into
inc
push
js
inc
call
xor
and
test
jne
hlt
dec
aam
imul
push
lds
mov
xchg
mov
mov
lods
idivl
sub
js
mov
cmovnp
xchg
jl
mov
jae
popf
push
addr16
push
testb
mov
and
dec
mov
fldenv
mov
inc
incl
inc
loop
nop
orb
mov
mov
pop
add
sbb
and
mov
fildll
mov
dec
ja
insl
shl
sbb
ret
iret
sti
jl
push
and
aaa
mov
push
cwtl
cmp
jl
out
push
or
sbb
enter
xor
popa
inc
subb
arpl
mov
loopne
mov
lds
repz
jns
inc
in
jae
das
jmp
sub
mov
cmp
sbbl
lods
or
mov
jns
mov
lcall
lret
dec
pusha
dec
and
push
jmp
test
int3
in
jns
mov
mov
push
jno
hlt
ficoml
push
std
mov
ljmp
jnp
push
inc
dec
inc
addr16
insl
rol
push
addb
incl
mov
inc
loop
inc
xor
mov
icebp
xchg
fwait
mov
and
mov
xlat
or
mov
inc
fmulp
inc
mov
shll
jae
test
and
shrl
shll
sub
push
mov
stc
cwtl
push
out
fnstcw
cmp
pop
xor
xchg
adc
mov
mov
sbb
out
mov
and
jl
js
and
lret
mov
jge
addr16
aas
in
adc
sbb
jge
mov
ret
int3
mov
mov
mov
push
mov
dec
ss
xor
xchg
arpl
mov
and
mov
push
nop
leave
jl
push
aaa
inc
scas
pop
sbb
mov
jae
adc
scas
mov
int
frstor
testb
or
cli
sbb
mov
pop
sub
mov
test
xchg
out
add
ret
add
sti
shlb
in
js
jnp
mov
push
insb
cmpsb
mov
jns
cs
bound
pop
scas
iret
mov
mov
push
and
adc
fld
xor
xor
inc
lods
cmpsb
jns
into
shll
movsl
mov
std
mov
sub
int
das
mov
pop
inc
lret
cmp
idivb
mov
sbb
pop
add
mov
push
sahf
jne
mov
adc
mov
sbb
mov
clc
add
cmc
inc
or
sbb
ficoms
in
and
test
ss
xor
arpl
mov
sbb
jp
xchg
stos
in
sub
jo
cmp
lret
mov
mov
dec
notb
mov
pop
jne
mov
stc
mov
jbe
icebp
sti
fstpl
jge
bnd
les
gs
das
mov
jmp
inc
push
mov
scas
or
xor
inc
mov
cmp
test
daa
mov
cltd
push
movsl
or
lret
add
sub
or
mov
test
addr16
push
stc
stos
mov
mov
sbb
shll
lret
adc
mov
xchg
jb
push
xchg
mov
dec
and
mov
push
mov
insl
push
pop
out
out
in
rol
push
test
xchg
lds
shlb
test
push
mov
adc
lret
imul
aad
mov
mov
test
mov
xchg
add
stos
jg
mov
call
movsl
sub
mov
pop
mov
aad
or
mov
dec
cmp
xstore-rng
cmpsl
pop
and
push
adc
mov
into
ret
jl
rorl
pop
loopne
dec
mov
movsl
outsl
arpl
ret
push
leave
add
cmpsb
adc
pop
cmp
mov
jge
mov
jae
sub
add
inc
jbe
xchg
in
test
insl
mov
dec
adc
pop
dec
imul
cmc
dec
ja
xlat
jns
push
lcall
int
int3
inc
mov
lea
cmp
pop
loopne
jo
mov
je
xchg
scas
adc
out
loopne
sub
es
dec
cmp
pop
adc
mov
sbb
mov
rolb
mov
jp
dec
jo
ficoms
mov
repz
or
add
xchg
xchg
xchg
clc
mov
jl
mov
push
fiaddl
and
enter
cmpb
cld
pop
sbb
push
cli
popf
cmpsl
pop
sahf
mov
lods
lods
push
mov
aad
push
fsubl
adc
sbb
test
jnp
push
adcb
adc
aad
call
or
in
dec
fcomps
lahf
pop
mov
aad
popf
dec
sbb
shl
mov
xchg
pusha
in
cmc
cmc
dec
scas
and
pop
sub
jecxz,pt
jmp
jle
mov
pop
jns
imul
js
jg
mov
outsl
add
mov
xor
aam
test
or
out
mov
mov
add
mov
mov
or
mov
out
pop
mov
test
lahf
inc
lea
xorb
sahf
mov
popf
adc
leave
std
pushl
dec
or
push
jg
mov
jbe
xchg
aad
push
cmp
shrl
adc
fldl
xchg
jp
test
fildl
in
popf
shl
xchg
popa
xor
xchg
pop
push
mov
sub
jle
aaa
sbbl
mov
jae
jnp
pushf
movsl
jns
xchg
mov
repz
add
add
je
and
cwtl
pushf
mov
in
pop
mov
adc
iret
loope
push
cmp
fidivrl
dec
push
movsb
mov
orl
sbb
mov
adc
imulb
and
adc
mov
push
mov
xor
cmp
mov
jmp
cmp
stc
mov
sub
pop
jge
ja
popa
in
js
pop
andb
pop
lods
mov
std
push
pusha
cltd
mov
push
dec
popf
outsl
movsl
dec
jne
inc
ror
stos
mov
mov
add
push
push
xor
or
mov
push
or
mov
pop
aam
popa
mov
addr16
push
and
mov
int3
es
mov
xchg
cld
adc
test
add
cmpsb
sahf
mov
insb
jno
or
xchg
sbb
subb
in
aaa
cmp
mov
lret
inc
ja
mov
xchg
sub
data16
push
sbb
push
stc
push
cwtl
adc
cmp
mov
mov
push
mov
fcompl
loop
or
sahf
repnz
mov
dec
cli
mov
push
mov
mov
and
mov
mov
dec
aad
js
lcall
add
leave
or
mov
cld
neg
sub
gs
inc
jge
mov
pop
jo
pavgb
in
imul
dec
xchg
or
add
inc
xchg
push
test
jge
mov
mov
std
mov
push
loopne
data16
arpl
iret
xchg
jmp
bound
or
cmp
xchg
popa
jnp
aaa
cld
clc
push
push
ljmp
inc
jno
mov
out
jl
shlb
mov
ret
sarb
adc
pushf
and
jl
cli
or
xor
jns
js
popf
pop
sbb
lcall
push
pop
adc
nop
loopne
leave
lret
aam
sub
call
sbb
pop
fdivrl
cltd
fdivs
icebp
out
sub
aas
push
je
push
sbbb
ja
lods
ss
int
lret
adc
or
sub
fucomp
outsl
cmp
int3
pop
push
mov
bnd
push
pop
mov
ds
scas
clc
ljmp
ss
dec
test
adc
daa
nop
cmp
sub
fcmovbe
popa
or
addb
js
loopne
dec
mov
add
push
or
rorl
inc
mov
and
dec
aas
xchg
dec
lods
mov
xchg
add
or
pop
push
mov
es
xor
cmc
add
mov
xor
in
std
and
adc
or
jge
push
out
mov
inc
pop
and
fwait
int3
add
ret
push
xchg
dec
dec
push
fldenv
jge
sarl
insl
sub
out
and
add
mov
stos
fistps
lahf
push
jp
jmp
in
mov
iret
mov
cmp
mov
jmp
sbb
jbe
mov
cmpsb
push
lods
repnz
sbb
testb
out
push
dec
and
mov
lret
cmp
jbe
cmp
mov
ror
ja
add
dec
or
mov
jnp
cmp
push
and
pop
pop
jecxz
xchg
mov
mov
xorl
outsb
cmp
sbb
inc
pusha
movsl
cmc
mov
push
push
mov
cmp
es
ja
jb
xor
ret
mov
int
and
jle
and
clc
ds
outsb
xchg
add
cltd
imul
in
ficoms
dec
adc
and
int3
push
jns
repnz
push
xchg
sbb
mov
xchg
sub
mov
dec
mov
fs
jmp
int
lret
jmp
sahf
mov
mov
mov
xor
mov
adcb
icebp
sub
insl
jb
mov
mov
xor
and
pop
shll
xor
and
mov
mov
int
std
pop
loope
sahf
pop
xlat
xchg
addr16
mov
mov
paddd
fdivrs
std
jge
jmp
cld
inc
mov
pop
cltd
sti
into
test
aam
pop
push
inc
dec
sbb
adc
pusha
dec
rcll
and
push
inc
add
push
cmc
imul
lds
inc
repz
pop
mov
mov
inc
jo
dec
mov
es
sbb
inc
push
jns
mov
std
shll
sti
jo,pt
mov
xchg
rep
scas
jb
mov
push
push
jge
nop
adc
imul
mov
shll
and
pushf
dec
adc
adc
push
ret
fisttpll
pop
pop
mov
inc
adc
mov
and
dec
cmp
push
push
jge
mov
or
lods
es
mov
insl
test
pop
jecxz
mov
xor
push
jmp
jle
fidivrs
mov
sbb
daa
sti
jge
push
pop
cmp
mov
fldl
xorb
outsb
jo
xchg
push
data16
mov
mov
iret
mov
push
or
les
inc
mov
clc
sbb
ret
daa
push
pop
sahf
stc
mov
insb
adc
push
gs
cmp
mov
mov
pop
pop
test
pop
pop
ja
loopne
inc
mov
dec
loop
in
adc
int
cli
das
ljmp
loopne
shrl
adc
xchg
jle
mov
rolb
fcoms
adc
push
fcmovb
aad
add
scas
jae
sbbb
push
adc
mov
xor
aaa
pop
jg
cmp
cmp
out
sub
popf
add
inc
pop
lods
je
dec
std
xchg
jecxz
and
add
andl
pop
mov
std
mov
mov
aad
adc
push
pop
push
jns
sbb
mov
lret
inc
pusha
push
repz
mov
enter
mov
rcrl
cmp
pop
sbb
inc
pop
out
ret
xchg
mov
jg
pushf
mov
cmp
scas
gs
mov
sbb
jecxz
mov
cmpsb
jo
aad
jb
pop
add
and
nop
dec
inc
push
xchg
pop
dec
cwtl
dec
loop
add
fidivl
jg
pop
jo
adc
adc
push
bound
mov
dec
jl
rol
dec
xchg
dec
sahf
mov
out
inc
pop
jne
cmp
add
xor
mov
fisttpll
popa
popf
cltd
aaa
sbb
and
or
inc
mov
and
movsl
insb
sub
cmpsl
out
fdivs
movsb
xchg
loopne
pusha
fldenv
mov
and
loop
loope
push
and
call
scas
add
and
and
test
stos
cmp
shrl
imul
loope
push
and
adc
les
aaa
and
jecxz
jmp
mov
fsubl
enter
call
mov
repnz
mov
mov
pusha
jo
or
jae
scas
in
lods
hlt
cmpsl
cmp
sub
sbb
popl
dec
lret
pop
and
fwait
stc
mov
call
cmpsb
mov
repz
mov
cmp
fnstsw
js
hlt
xor
mov
iret
ret
fs
xor
mov
ja
aas
je
movsb
inc
xor
stc
xchg
inc
push
xor
mov
daa
jl
cli
js
sbb
cltd
mov
and
add
jnp
and
mov
dec
adc
mov
push
cld
cs
cmp
jmp
stos
divl
jno
call
add
sarb
push
mov
sbb
cmpsl
and
es
jg
das
mov
cmp
stos
divl
and
icebp
jl
jmp
daa
clc
mov
fwait
and
dec
cld
lcall
fcomip
mov
inc
jge
out
mov
jmp
cmp
lock
add
push
xchg
mov
xchg
sbb
loop
jo
xlat
push
mov
daa
bound
jg
popf
mov
cmc
sbb
lods
xor
out
inc
std
xor
scas
mov
scas
out
aam
sbb
repnz
sbb
repnz
mov
stos
repnz
mov
iret
cmpsb
movsb
in
loopne
sti
fwait
cmp
xchg
loopne
mov
in
insb
mov
imull
mov
push
rorb
pop
sti
pop
add
call
bound
lock
mov
inc
incl
inc
mov
mov
jl
and
push
stos
jo
sbb
sub
pop
fsubs
mov
mov
jl
sub
pop
add
stc
pop
mov
push
lods
push
bound
cmp
pushl
xor
outsl
pop
cs
dec
mov
imul
lods
xchg
mov
add
inc
xor
out
mov
and
mov
test
mov
inc
cmc
adc
rcrb
subb
push
sub
icebp
mov
inc
xchg
mov
cli
xchg
adc
and
aas
or
jae
jg
or
loope
outsl
dec
lcall
aaa
jno
in
mov
sub
mov
loope
out
and
inc
jmp
cmp
push
inc
or
sbb
fldt
jl
xchg
jo
adc
imul
fimull
inc
push
inc
arpl
mov
fmul
adc
decl
js
dec
and
scas
sub
push
loope
aas
mov
decl
out
in
test
xorl
popf
stos
mov
cmp
sub
xchg
and
xchg
jecxz
imul
lods
adc
mov
push
mov
insb
jecxz
enter
mov
in
jecxz
mov
or
scas
mov
insb
gs
iret
jle
enter
gs
cs
pushf
fwait
cmp
sub
push
fisubl
and
cli
mov
pushl
jnp
sub
in
addb
scas
ljmp
rep
fildl
inc
add
mov
xchg
cmp
mulb
neg
and
sub
adc
push
jmp
sarl
out
in
mov
shl
mov
loop
fnstsw
stos
xchg
and
jecxz
scas
shrl
jge
or
shrl
in
out
jns
and
cs
sub
or
mov
xchg
test
xlat
pop
adc
jmp
jo
add
scas
icebp
rolb
ficomps
add
mov
js
dec
inc
mov
ljmp
sbb
rorb
add
icebp
rcrl
add
loope
das
nop
stos
push
call
adc
inc
jl
fsubrl
sbb
lods
stc
inc
test
cli
and
ljmp
mov
sbb
insb
mov
mov
lcall
mulb
cmp
aam
cmp
bound
jae
dec
ret
push
int3
movsb
mov
cmp
rep
and
pusha
sbb
or
pusha
inc
loopne
mov
clc
xchg
xor
and
and
daa
vmwrite
xchg
mov
cmpsl
loop
cmp
or
bound
lret
pop
add
adc
addr16
sbb
push
aaa
jge
daa
jnp
add
fldenv
addr16
mov
fwait
lock
fnclex
mov
scas
insb
pop
xor
cld
shlb
mov
cmp
out
mov
je
add
mov
jl
aaa
arpl
js
pop
mov
adc
mov
inc
xchg
dec
mov
ljmp
out
fldl
frstor
frstor
pop
aaa
pop
dec
push
fldcw
pop
push
pop
mov
dec
push
fildll
pop
push
fucomp
fsub
repnz
jp
fsub
push
and
xor
stc
pop
xchg
inc
insl
call
imul
sub
fwait
cld
mov
cmp
and
scas
lret
cmp
pop
fadds
jbe
mov
cmpsb
mov
or
jecxz
mov
outsl
and
inc
aaa
mov
sub
repz
xchg
int3
sbbb
popl
jp
pop
stos
bound
aas
scas
xor
stc
mov
addb
lcall
inc
lret
fisubl
cmp
add
push
or
adc
sbb
jnp
sub
inc
test
dec
mov
push
aad
andl
outsb
cld
jecxz
jge
aad
or
mov
je
xor
and
arpl
pop
xchg
and
pop
or
inc
fldenv
and
mov
mov
lret
sbb
adc
pop
roll
and
sbb
insb
pop
fildll
fxch
into
jb
dec
sub
icebp
ja
fldl
lret
mov
pop
in
pop
mov
mov
shlb
jne
adc
xchg
sub
mov
push
pop
mov
in
xchg
sbb
jns
push
jle
jecxz
popa
cltd
fbld
leave
ds
lock
or
fdivrl
pusha
xor
pop
lret
mov
das
lds
xor
xchg
inc
mov
push
lods
hlt
jg
mov
mov
xlat
jmp
cmp
mov
insb
stos
in
stos
xchg
arpl
fs
sub
lods
or
ror
addr16
data16
jmp
ret
xchg
pop
mov
leave
lcall
ljmp
mov
bound
test
add
jl
pop
nop
je
imul
mov
jle
sub
test
fadd
fwait
xlat
mov
iret
sbb
mov
jo
lret
cltd
or
sbb
jecxz
fimuls
loop
punpcklwd
test
addb
adc
rcll
adcl
mov
loope
test
fisubl
mov
push
add
sub
ss
cmpsb
mov
js
jbe
mov
loope
in
mov
inc
adc
mov
inc
jecxz
cmpsb
leave
fcoms
jno
and
xorb
push
xor
sbb
addr16
mov
fldl
loop
enter
mov
dec
sub
int
jbe
or
mov
fwait
sub
stc
test
push
fs
lahf
stos
mov
test
cmpl
out
pop
push
inc
cli
std
pop
mov
jb
imul
xor
push
lods
fisttps
sbb
jp
mov
jb
popa
add
dec
mov
mov
pusha
movsl
xor
sub
or
sti
mov
dec
dec
paddusb
jb
push
and
sub
pop
pusha
and
push
shld
push
scas
andb
popl
sbb
and
xlat
dec
add
mov
mov
pusha
fcomps
push
lahf
dec
lret
shl
gs
sub
mov
dec
xor
and
nop
lret
xchg
pop
repz
mov
stos
add
inc
cld
inc
pusha
xor
out
cmp
pushf
add
js
and
and
test
shlb
cmp
fcoms
jmp
inc
sub
pop
xchg
mov
sub
movsl
pop
addr16
sub
pop
jg
xchg
nop
jb
filds
mov
addr16
jecxz
mov
jb
incl
mov
dec
in
push
mov
pop
test
out
jb
mov
pop
cmp
push
fcmovne
xor
mov
jno
sahf
gs
lods
mov
jecxz
adc
repz
sbb
jns
daa
push
mov
movsb
or
mov
jmp
sub
xor
daa
sub
test
push
mov
fisubl
or
push
in
push
cwtl
popa
js
xor
sub
in
movsb
add
mov
std
lds
xchg
and
lods
push
cli
xchg
pop
mov
sub
mov
dec
inc
mov
or
xchg
sti
mov
lods
inc
dec
dec
out
dec
shrl
push
jbe
inc
test
mov
addr16
mov
sar
push
xchg
mov
push
dec
and
pop
mov
inc
cwtl
dec
into
out
add
stc
push
lods
nop
xchg
mov
lds
sub
ja
adc
mov
rcrb
repz
gs
mov
lods
push
mov
aad
mov
or
jmp
adc
insl
cmpsl
mov
mulb
icebp
sti
mov
push
jecxz
cltd
mov
cmp
leave
dec
addr16
push
and
mov
mov
sub
jne
or
popa
mov
sub
push
mov
adc
sahf
mov
mov
mov
cltd
cmp
jae
notl
mov
add
repnz
jmp
and
popf
sbb
push
add
movsl
jp
and
mov
mov
and
stc
sub
add
aaa
sub
cmpsb
adc
je
fistpl
pop
mov
imulb
sbb
xchg
and
sbb
mov
mov
into
pop
xchg
pusha
jbe
outsb
orl
cltd
fwait
and
inc
in
pop
xchg
mov
push
push
fnsave
mov
jge
and
adc
cmp
repnz
jecxz
or
xor
dec
jo
daa
addr16
subb
mov
mov
test
js
movl
addr16
popf
push
jg
divl
in
mov
cwtl
push
mov
mov
sub
dec
lahf
insb
inc
lcall
add
or
and
xchg
lahf
out
andb
add
mov
xlat
sbb
jae
jmp
outsb
sub
jge
mov
mov
xchg
mov
cmpsl
mov
jno
pusha
inc
mov
stos
or
mov
or
ja
addr16
outsl
cmp
cmp
mov
hlt
ret
and
testb
push
inc
mov
data16
int3
jl
pop
test
imul
adc
xlat
lock
rcrl
int
inc
xchg
mov
pop
or
cmp
dec
mov
jg
or
fisttps
push
jle
mov
loopne
xchg
pop
inc
mov
ja
inc
sbb
sub
xchg
adc
inc
jg
push
sub
int3
addr16
mov
inc
cmp
ljmp
cs
mov
pop
jnp
xlat
mov
push
out
cmp
out
jle
clc
popf
mov
mov
jae
scas
xlat
ds
lea
je
mov
cltd
xchg
push
mov
jb
das
or
std
inc
aaa
jne
push
daa
adc
push
jbe
popa
rep
shr
mov
iret
xchg
and
adc
loop
test
jo
push
lret
pop
test
sbb
ds
mov
jecxz
in
sbb
repz
sub
mov
lds
cmp
stos
jae,pn
dec
lahf
int3
outsb
mov
adc
push
or
out
add
sub
ljmp
pop
aaa
int3
mov
arpl
xor
xorb
into
add
inc
mov
push
ret
mov
cmp
pextrw
mov
adc
out
push
and
add
jbe
cltd
sbb
cmp
pop
popa
add
xor
mov
mov
mov
pop
or
pop
negb
sub
ds
sahf
xchg
and
mov
cmp
les
xor
cmpsb
mov
in
push
ljmp
xor
add
sub
and
gs
aas
mov
mull
popf
push
xor
ljmp
inc
sub
hlt
xor
ja
mov
aaa
ret
mov
test
repz
pop
jne
cwtl
push
lds
sbb
push
dec
xchg
inc
jecxz
lea
enter
and
mov
xor
aaa
sbb
xchg
mov
mov
xchg
dec
and
mov
xor
dec
in
mov
into
push
adc
lahf
stc
cmp
aaa
dec
sbb
inc
jnp
mov
mov
lods
or
cmp
lock
xchg
movsl
ja
xorb
mov
mov
xchg
cmc
stc
inc
mov
inc
call
loopne
je
jg
cmpsl
add
les
in
subb
cmp
xor
imul
adc
push
mov
sub
adc
daa
pop
dec
push
mov
cmpsl
iret
or
push
mov
mov
popw
rorl
mov
pushf
jns
fsubl
xor
add
mov
lods
jno
addr16
mov
aam
dec
mov
mov
and
jle
lods
mov
pusha
lock
cwtl
fs
mov
rcr
and
out
jecxz
pop
push
nop
lds
je
loop
push
mov
mov
enter
fs
js
ret
lods
mov
adc
sub
sub
popa
dec
test
mov
ret
pop
fs
lahf
jne
jmp
pop
icebp
mov
divb
aaa
lock
loopne
stos
lret
mov
pushf
sarl
pusha
loope
jb
andl
ljmp
or
inc
jmp
repz
xchg
adc
mov
out
mov
mov
outsb
dec
lods
mov
sub
add
lret
stos
jl
cmpsl
jge
inc
sbbb
jne
mov
and
mov
lock
and
add
mov
addl
lock
mov
xor
and
mov
mov
sar
xor
inc
dec
adc
mov
test
sbb
pop
pusha
mov
sub
add
fsubl
rcrl
pop
adc
mov
pusha
std
repz
xor
lret
and
mov
jb
push
xor
mov
leave
pop
pushf
mov
movsb
inc
addr16
aas
cmp
mov
add
jns
jl
mov
mov
add
xchg
loopne
jecxz
push
imul
xchg
dec
lret
pop
xchg
shrb
cmp
repz
popa
add
jne
jecxz
mov
dec
ljmp
adc
cmp
mov
pusha
mov
jno
pop
mov
add
jne
push
loopne
xchg
push
mov
hlt
jb
repnz
lahf
out
xor
fwait
sub
cmpsl
cmp
or
jno
movsl
cmc
les
sub
fwait
test
mov
cltd
es
mov
test
cmp
ret
jmp
lret
fisttpll
cwtl
push
fidivrs
aaa
mov
push
inc
mov
jno
aas
push
rcrl
jae
dec
mov
iret
pop
mov
xor
ss
es
je
push
xchg
pop
ljmp
sbb
fmul
cli
das
mov
and
sti
xchg
cwtl
test
xor
and
scas
jg
shll
fidivs
cmp
mov
sbb
les
pop
imul
test
inc
call
mov
stos
jp
gs
and
mov
sub
mov
jb
out
mov
arpl
jne
mov
sub
and
mov
or
in
mov
mov
icebp
int
imul
xchg
push
mov
mov
scas
sahf
les
dec
sub
mov
fcmovb
push
cmp
cmp
test
sub
divl
pusha
push
mov
icebp
mov
mov
mov
cwtl
xchg
test
loopne
push
mov
jns
cmpsl
ljmp
divl
or
sub
adcb
mov
addr16
js
sbb
mov
mov
inc
jecxz
loopne
repnz
fimuls
lahf
outsb
cmp
add
jnp
add
sbb
mov
aad
icebp
nop
mov
sbb
std
push
push
subl
pop
mov
shrl
adc
add
stos
sbb
cwtl
sahf
push
outsb
les
sarb
lret
lods
sbb
pop
lahf
movsl
movsl
lret
sub
add
dec
call
das
dec
lods
inc
mov
outsl
mov
in
push
push
mov
sti
sbb
in
pop
xchg
lods
inc
subb
cmp
dec
movsl
mov
fsts
pop
ljmp
mov
push
or
leave
lahf
loopne
xor
pop
pusha
cmp
arpl
les
lcall
xchg
dec
push
mov
xchg
push
xchg
push
stos
mov
in
mov
cmp
mov
mov
adc
push
push
pop
mov
xor
test
scas
mov
rcl
jl
mov
lods
xchg
sahf
push
mov
xchg
and
inc
pop
mov
dec
jns
lods
mov
sbbl
bound
cmp
mov
add
loope
sub
cltd
aam
in
push
dec
mov
mov
adc
adc
les
fwait
in
sti
mov
mov
or
sub
sbb
jle
shll
sub
mov
test
aas
add
xchg
jge
mov
addr16
mov
pushf
in
cmpsb
add
cmpl
fnstenv
mov
and
mov
dec
adc
hlt
mov
arpl
jl
pop
aad
mov
in
mov
in
ljmp
sbb
addr16
lods
xchg
scas
hlt
clc
mov
orl
push
in
mov
in
jecxz
sub
xchg
jle
cld
mov
les
sbb
mov
pop
sbb
mulb
mov
flds
mov
xorb
mov
cmp
xor
mov
cmpl
jbe
ss
mov
cmp
lea
popf
push
movsl
jbe
stc
sub
popa
mov
adc
mov
and
fldcw
mov
into
mov
sbb
xor
sar
mov
or
xor
leave
pop
and
cmp
sub
xchg
popf
jo
in
pop
cs
cmc
in
fldenv
xor
jo
cld
movsl
in
addr16
jle
dec
xchg
scas
dec
nop
xor
hlt
mov
cmpsl
fmull
mov
xchg
sarl
ljmp
or
jg
repnz
movsl
ja
mov
pushf
cmp
dec
inc
mov
int
xchg
ret
mov
call
jg
cmp
int3
popa
mov
sub
iret
rorb
mov
xchg
mov
mov
sbb
xor
add
aas
sub
pop
in
jl
cltd
stc
mov
mov
arpl
fsts
dec
push
mov
push
mov
jmp
ficomps
lods
repz
push
mov
xor
mov
sub
lcall
rolb
fdivrl
xchg
jge
cmpsb
sbb
and
pop
sub
ja
inc
jno,pt
mov
dec
mov
js
pop
nop
sbb
test
out
loopne
mov
nop
mov
mov
lret
bound
push
xor
popf
sbb
jmp
gs
orb
sbb
sub
repz
shl
pop
fsubrp
xchg
push
mov
movsl
push
mov
pop
push
jle
inc
lret
inc
inc
outsb
xchg
lds
cld
cmovge
int3
sub
std
lahf
pop
jns
xchg
cli
mov
das
fwait
and
jp
xchg
mov
cmp
xchg
fs
clc
or
test
loopne
pop
push
xlat
and
lcall
je
ret
into
mov
add
inc
mov
push
adc
mov
fisubl
in
jnp
jbe
jle
and
lock
out
js
fwait
shll
rorb
push
mov
int3
icebp
js
popa
lcall
mov
das
outsl
addr16
lret
mov
fstps
int
iret
xor
and
adcl
fisubrl
xchg
pusha
sbb
sbb
insl
push
push
call
pop
mov
jge
and
mov
scas
mov
fs
add
inc
sti
in
sub
push
and
and
xchg
fwait
mov
mov
sub
ja
inc
sbb
jmp
mov
jmp
sub
addl
mov
mov
and
dec
nop
std
mov
dec
aas
pop
pusha
bound
inc
lahf
stos
imull
xor
stc
or
mov
and
xor
pusha
gs
in
imul
adc
mov
dec
sbb
stos
mov
mov
xchg
cld
add
mov
loopnew
das
lods
cmp
mov
pop
cmp
jp
es
cmp
addb
pusha
nop
hlt
test
ret
fldenv
mov
xor
mov
loop
enter
mov
insl
outsl
inc
inc
ret
sbb
adc
cli
add
xchg
xor
out
pop
sub
mov
pop
lea
aad
inc
in
push
mov
stos
pop
push
mov
add
out
outsl
shll
je
arpl
and
mov
jge
dec
and
push
cli
mov
bound
lea
push
cmp
mov
mov
inc
push
lock
mov
jno
adc
sbb
mov
and
scas
loopne
negb
popa
inc
fnstsw
jge
push
sub
pop
mov
mov
inc
push
movsl
xchg
mull
int3
in
mov
jge
test
fs
or
out
cmp
push
testb
mov
inc
jno
or
nop
addr16
push
adc
jg
mov
sub
inc
or
scas
sbb
push
sub
push
pop
dec
xor
std
jle
mov
in
ret
pushf
arpl
and
mov
push
outsb
mov
mov
xor
xchg
sbb
sbb
or
mov
or
jmp
jle
sub
les
test
xchg
mov
dec
inc
call
popf
xchg
popa
loop
push
dec
loopne
subb
push
mov
push
movsb
icebp
fmuls
cltd
out
in
addl
cmpsb
pop
mov
test
mov
and
mov
out
jmp
cmp
je
lret
mov
pushf
push
ror
dec
mov
mov
inc
inc
addr16
aas
adc
movsl
cli
icebp
and
xor
mov
test
outsl
push
sbb
in
shll
sbb
mov
bound
insl
pop
pop
fisubs
repz
rorl
ja
inc
xlat
mov
mov
xor
pop
sbb
xchg
lret
pop
inc
add
loopne
or
pop
cltd
dec
jp
test
or
xchg
int3
mov
outsl
xchg
dec
mov
push
insl
pop
inc
mov
js
adc
fs
cmc
nop
cltd
mov
test
cli
lahf
mov
add
cmpb
popf
mov
or
and
inc
ja
xchg
mov
dec
mov
test
sbb
push
popa
mov
push
inc
shll
movsl
xchg
cld
mov
mov
add
sub
pop
mov
popf
xor
insb
aas
in
adc
inc
push
cmp
mov
push
inc
push
into
test
cmc
or
and
xchg
loopne
and
adc
jns
sbb
push
dec
nop
dec
xor
push
fcmovu
out
and
imul
xchg
bound
mov
xor
xchg
sbb
push
add
jecxz
xchg
mov
not
lret
sub
add
inc
dec
mov
scas
add
mov
test
cmp
pop
out
adc
mov
shll
leave
int3
xor
ficoml
mov
aam
mov
stos
hlt
mov
cld
push
mov
enter
mov
mov
js
shrb
nop
or
outsl
lahf
ja
mov
mov
jg
push
call
jge
pushf
frstor
inc
cmp
mov
aad
movl
loopne
popf
insl
cmpsl
in
sub
aam
nop
arpl
pop
adc
movups
adc
stos
shl
mov
xchg
cmp
jl
and
in
sub
mov
ret
movzbl
mov
mov
sbb
dec
xor
sarb
fcoms
popf
insb
cmp
jl
in
jbe
xor
popa
enter
cmp
fiadds
pusha
pop
out
inc
inc
mov
mov
insb
push
mov
cwtl
add
xor
scas
mov
in
jmp
pusha
xchg
js
push
test
pusha
sub
sti
out
into
cmpb
pushf
insb
test
push
imul
in
dec
movsl
cmp
xchg
cmp
jp
sti
dec
jg
addr16
push
push
aad
or
test
mov
lret
ljmp
push
push
insb
pop
adc
sbb
test
jle
pmaddwd
pop
clc
or
xchg
mov
aad
adc
lock
call
cmp
push
outsb
inc
nop
jne
xor
inc
out
mov
add
jno
sub
les
popa
ljmp
dec
sbb
mulb
stos
cmp
mov
lret
ret
pop
sahf
xchg
mov
into
insl
int
mov
js
ja
jns
sahf
sub
sti
cmp
sbb
fistpl
movsb
mov
mov
sbb
sub
inc
in
daa
fiaddl
or
iret
les
mov
cmp
inc
std
mov
shrl
push
mov
mov
in
jne
mov
call
loopne
movsb
adc
dec
mov
push
adc
sub
adc
jp
mov
add
adc
movsl
ds
inc
test
cmc
insl
push
cmp
test
add
adc
repz
pusha
aam
subl
cmc
fisttpl
mov
dec
sti
mov
inc
push
jle
and
das
ficoml
jg
repz
stc
xchg
sub
cwtl
xchg
into
out
mov
dec
out
add
lret
mov
sub
or
push
ret
clc
mov
xchg
xor
mov
add
mov
xchg
jo
lahf
and
lret
sub
dec
adc
cmp
arpl
mov
push
les
xchg
ret
repnz
mov
sub
popf
dec
and
inc
adc
mov
lock
insb
sti
xchg
mov
pop
jo
mov
cltd
lock
cmp
mov
mov
mov
mov
mov
mov
adc
sbb
sub
out
mov
mov
loop
xor
jno
mov
into
std
inc
jl
mov
mov
shr
shll
ss
pop
jecxz
jnp
lods
sbb
mov
dec
push
jne
inc
lret
jnp
pop
xor
adc
lds
cmp
jg
mov
sbb
inc
cmp
or
cmp
sbb
repnz
push
out
lods
lret
mov
push
loopne
repz
lcall
arpl
sbb
push
push
inc
ljmp
mov
std
movl
xor
stos
cmpsb
nop
pop
mov
test
push
cmp
addr16
loopne
jle
ja
sbbl
fisubrl
cs
or
test
push
and
push
jb
mov
test
getsec
and
rcrl
sub
insl
js
mov
insl
or
cmpsl
stc
jmp
jp
add
nop
adc
mov
inc
push
std
shr
int
cmpb
mov
and
lret
das
insb
call
mov
sub
ja
jbe
je
jno
into
sub
repz
jae
inc
sbb
dec
sub
fneni(8087
mov
lds
pop
xchg
sub
cmpl
rcrl
loope
add
in
int3
jnp
outsl
fcmovne
pop
in
popa
das
xchg
dec
nop
mov
imul
test
ja
or
jge
in
push
fs
adc
aam
mov
mov
add
aas
dec
loopne
jecxz
adc
aam
xchg
cmp
mov
aas
add
inc
push
pusha
push
lret
cmp
and
mov
xchg
lahf
rorl
mov
shl
enter
mov
loopne
cld
std
mov
mov
cmpb
movsl
xacquire
mov
ja
fisubs
push
push
dec
push
sahf
out
mov
mov
fcomi
lods
mov
mov
jbe
xor
dec
xchg
fwait
sbb
mov
imul
sub
pop
je
xchg
sub
addl
stos
into
sub
popa
cbtw
aad
out
sbb
mov
pop
in
into
xchg
push
pop
sbbb
xor
sbb
fsubs
loopne
mov
xchg
and
loope
dec
xchg
mov
iret
xchg
mov
pop
out
mov
int3
sub
cwtl
cmp
mov
popf
mov
out
gs
out
xor
jmp
xchg
lret
jl
bound
pushf
stc
int3
cmc
push
cwtl
push
mov
repnz
mov
push
insl
sub
nop
cmp
sub
rcrb
mov
adc
xlat
iret
mov
cli
sbb
sbb
shll
mov
fwait
lret
stos
data16
out
repnz
or
shrb
daa
out
mov
mov
outsb
xchg
in
lods
ja
nop
lahf
push
shrl
testb
sbb
andb
lods
pop
leave
push
shlb
xor
push
sahf
frstor
test
and
pop
loopne
jmp
push
cwtl
lods
inc
out
je
aas
iret
nop
mov
and
mov
lods
mov
flds
cmc
xlat
cmp
mov
push
or
mov
mov
sub
lock
std
ret
xchg
lcall
sbb
mov
cmpl
inc
add
pusha
pcmpgtw
mov
fwait
pusha
sbb
js
stos
mov
stos
ja
push
in
xlat
pop
cltd
mov
xchg
push
cmc
mov
es
rcrb
mov
or
pop
idivb
aam
repnz
add
insb
cli
ja
cmc
xchg
test
adc
and
mov
cmovno
mov
pop
sub
addb
sti
inc
addr16
xor
mov
fldenv
or
push
or
nop
push
pop
and
xor
mov
jecxz
mov
push
out
mov
jo
push
cmp
cld
into
dec
push
sub
mov
repnz
pusha
inc
repz
hlt
dec
es
gs
xchg
and
dec
or
jmp
inc
sbb
mov
mov
pusha
ficoms
cld
mov
sbb
mov
sbb
aas
mov
arpl
pop
mov
int
sub
and
test
testl
frstor
shrl
sahf
fmuls
cmc
aam
mov
icebp
es
mov
xor
ret
loopne
mov
pop
lcall
mov
mov
and
sbb
sbb
xchg
mov
push
out
jae
std
mov
mov
mov
call
adc
js
xor
jg
xchg
push
imul
xchg
or
mov
divl
movaps
xchg
aad
push
pusha
enter
mov
xchg
pop
push
je
addr16
adc
xor
rolb
sbb
pop
or
icebp
stos
inc
mov
xchg
iret
mov
arpl
popf
mov
add
lahf
mov
loope
xor
inc
inc
mov
dec
jp
js
mov
mov
fidivrs
jmp
jae
mov
cmpsb
and
adc
aaa
popa
cmp
mov
mov
cwtl
lds
mov
push
les
pop
shr
imul
mov
xor
leave
cmp
dec
jl
aad
ret
std
bound
js
mov
xchg
pop
and
dec
cmp
mov
out
pop
push
add
and
adc
and
icebp
test
pusha
js
out
es
bound
scas
pop
pop
fldcw
jl
out
sub
icebp
sti
sbb
mov
dec
mov
mov
mov
loope
ret
mov
xchg
gs
loop
push
add
out
dec
sbbb
push
mov
pushf
push
inc
push
divl
enter
bnd
and
xor
mov
lods
addr16
and
sbb
test
in
adc
dec
mov
xor
gs
and
dec
into
mov
xchg
cmp
sbb
cmpl
mov
icebp
lods
sbb
lods
and
dec
addr16
stc
iret
sbb
mov
add
out
test
stos
fisubs
push
mov
adcl
mov
mov
std
adc
jle
dec
inc
and
adc
sub
mov
repnz
mov
xlat
cmpb
fildll
into
loopne
add
jle
sub
mov
xor
jmp
mov
mov
iret
pop
popa
inc
mov
cld
in
rorb
cs
test
jnp
cmp
jo
pop
mov
iret
sub
imul
enter
sbb
sar
sbb
pusha
fimuls
cwtl
push
inc
mov
sar
je
push
mov
test
ja
mov
add
push
movsl
cmp
sahf
inc
mov
data16
cmp
cld
fnstcw
dec
jge
mov
lret
cltd
dec
shll
mov
test
mov
imul
dec
add
adc
in
pop
stos
leave
loop
jp
dec
adcb
cmp
jl
call
addr16
aad
cmpsb
push
sbb
in
idivb
cmp
mov
dec
jmp
adc
fistpll
mov
adc
xchg
add
inc
lcall
adc
sbb
and
scas
xchg
mov
cmp
push
mov
jne
test
fwait
jp
in
sub
imul
fiadds
ret
outsl
mov
xor
or
cli
push
adc
xchg
pop
jae
out
js
test
lods
push
xor
mov
pop
arpl
loopne
mov
cwtl
cmp
mov
push
sbb
xchg
pop
addb
jno
pop
jge
pusha
rcrb
imull
mov
dec
mov
xor
push
fwait
lcall
insl
xor
and
addr16
or
icebp
sahf
insl
mov
jge
inc
xchg
mov
push
push
mov
xor
mov
dec
int3
mov
sub
jle
mov
mov
sbb
xor
insl
icebp
cmp
xchg
pop
xor
std
add
lds
jg
cmp
enter
insl
jl
int3
sub
popa
leave
dec
dec
mov
dec
aas
cltd
push
out
in
roll
stos
and
mov
scas
pusha
mov
std
mov
fdivs
insl
adc
fwait
leave
rcl
into
in
aad
sub
cmc
mov
mov
adc
jno
xor
popa
push
sub
lea
mov
adc
adc
pop
mov
fs
mov
mov
stos
adc
insl
push
nop
mov
call
adc
jmp
mov
add
iret
jp
dec
jne
cmp
scas
sbbl
test
mov
fistl
stos
cmp
in
xchg
mov
sbb
lret
ja
adc
xchg
shr
mov
fldenv
pop
ret
mov
insl
in
std
out
mov
sarl
mov
mov
ds
cmpl
fidivrl
and
add
and
negb
pcmpeqb
pusha
ja
nop
dec
dec
mov
push
insl
adc
inc
xchg
inc
cltd
clc
fcoml
test
xchg
iret
ds
outsl
adc
cwtl
sahf
add
sbb
mov
mov
push
mov
xor
rclb
mov
bnd
jae
sbb
lock
sbbb
stos
sbb
stc
test
adc
shl
and
mov
mov
pop
and
ss
enter
cmpsl
xlat
mov
jge
push
or
inc
clc
xchg
jbe
in
sbb
idivb
test
movsl
cld
mov
push
push
fiadds
popf
addr16
push
jne
push
lods
popa
je
inc
cs
add
ljmp
pop
lds
in
addb
mov
rorl
into
sub
dec
adc
call
ds
mov
or
mov
jecxz
mov
data16
mov
xchg
mov
sbbb
or
xor
mov
jae
pop
data16
imul
mov
pop
movsl
mov
fidivl
xor
sahf
push
xchg
inc
push
jns
pop
push
cmc
ret
loopne
mov
push
int3
and
pushf
dec
push
sbb
add
sbb
jae
dec
push
mov
pxor
xor
mov
mov
lods
stc
adc
mov
sub
inc
test
push
adcl
cmp
jb
adc
lods
jns
ret
push
in
mov
pop
xor
xchg
add
lea
jns
leave
dec
pop
mov
or
or
push
mov
pop
add
in
add
popf
stc
xor
mov
mov
mov
lret
cld
and
add
fisubl
mov
lods
aaa
xchg
stc
push
dec
dec
cs
daa
lcall
out
subb
mov
mov
inc
xchg
movsl
test
sub
mov
fwait
sub
dec
call
push
adc
xchg
push
mov
test
mov
jge
loopne
fstps
or
rorl
cmpsb
mov
xchg
jnp
lahf
mov
pinsrw
cmp
add
jmp
or
sub
mov
ficompl
mov
xor
pusha
outsl
repz
mov
cmp
aad
mov
das
into
mov
inc
and
cli
xchg
sub
cld
add
add
out
or
dec
js
add
movntps
loopne
pop
pop
jp
movsl
pop
push
pushf
jnp
ss
mov
fimuls
sub
aam
subl
mov
mov
sbb
scas
sub
sahf
popa
jne
mov
or
push
mov
lret
pop
xlat
mov
jle
pop
push
mov
mov
dec
cs
movsl
jns
mov
inc
mov
inc
int3
pushf
push
shll
or
inc
push
test
adc
jmp
or
shl
and
nop
mulb
mov
add
and
sbb
sub
add
icebp
lcall
nop
adc
bound
out
subl
popa
cmp
push
add
mov
cmc
mov
cltd
fdivp
repnz
ja
cmp
loope
mov
enter
lret
stos
mov
pop
cmp
pop
icebp
adc
xchg
imul
clc
loopne
cmp
jl
popa
xchg
lods
xorps
ss
cwtl
enter
mov
or
js
sbbb
mov
imul
fbld
xor
cmp
xchg
push
xchg
pop
mov
jl
push
in
and
fsubr
stc
cmpsl
mulb
ja
xchg
mov
lret
lret
xchg
or
lcall
cld
pusha
adc
sbb
push
add
add
lock
addb
or
xor
movsl
les
or
xchg
dec
sbb
mov
out
mov
mov
loope
xchg
mov
sub
ljmp
and
jne
outsb
dec
dec
cwtl
sub
mov
inc
into
lcall
cmp
cmp
sub
xchg
gs
push
loopne
pushf
mov
xchg
mov
decb
jns
mov
inc
jb
iret
mov
fs
test
add
jne
mov
aad
push
cmp
push
and
cmp
sarl
adc
imul
add
xchg
mov
adc
mov
xchg
mov
sti
or
cmp
or
sub
mov
jno
jns
pop
cmp
inc
mov
mov
bound
es
cmp
loopne
dec
push
mov
mov
test
dec
inc
aaa
and
nop
mov
addr16
or
lods
das
in
into
loopne
loopne
jg
xlat
jb
sub
jmp
dec
add
or
loop
lea
aaa
pop
test
insl
icebp
imul
fdivrl
mov
arpl
sbb
dec
mov
xlat
jge
lcall
cltd
cmp
mov
mov
hlt
lea
ret
fistl
xchg
add
in
dec
pop
mov
repz
mov
nop
jmp
rclb
push
fdivl
dec
rcll
shrl
mov
dec
jo
inc
mov
loopne
pop
xchg
sbb
pop
xchg
inc
cld
pushf
adc
daa
dec
xor
lds
inc
push
fimuls
jecxz
mov
cmp
and
js
mov
lods
mov
shlb
sub
js
mov
insb
test
loop
rcrb
xlat
add
out
out
rcrb
fistps
xchg
and
addr16
dec
pop
loope
mov
nop
pop
mov
cwtl
popa
fiadds
iret
out
adc
sbb
mov
pop
push
imul
icebp
lea
or
stc
mov
lret
das
xchg
cmp
cmpsb
loopne
push
xchg
jmp
mull
lea
lock
fstps
xchg
push
sbb
jecxz
sub
cli
in
mov
sbb
inc
aas
fisubrs
push
mov
jle
jl
mov
mov
lods
sub
mov
cmc
mov
dec
outsl
or
int
mov
fsts
add
mov
cmpsl
pusha
xchg
mov
push
in
dec
popf
cs
mov
cltd
xor
mov
mov
xchg
add
jbe
daa
mov
lds
jo
push
and
movsb
jne
test
in
xor
sub
sbb
push
loop
fisttpll
loopne
jg
and
stos
call
mov
sub
clc
dec
sbb
decb
lods
or
push
jno
push
mov
aad
fdivr
mov
jmp
cmp
fsts
sbb
mov
pushf
mov
push
push
xchg
dec
dec
cwtl
push
inc
in
mov
inc
jne
pop
mov
mov
dec
push
outsb
add
jge
or
lea
pop
xlat
cmc
sub
mov
sti
add
ss
loope
testl
mov
dec
push
repnz
andb
jns
in
mov
sbb
jle
dec
stc
lea
sti
mov
insl
sub
cli
xchg
adc
sbb
mov
cmpsb
mov
test
jl
in
mov
add
data16
push
dec
cld
jns
inc
adc
mov
sub
out
scas
sub
nop
mov
fimull
pop
xchg
shl
jmp
mov
xlat
lahf
cmp
repnz
inc
leave
addr16
push
or
aad
int
sti
ss
jnp
nop
jae
mov
xor
sti
out
ret
xchg
cmp
sub
outsb
xor
ds
inc
cs
mov
out
push
and
jmp
mov
sbb
push
out
test
mov
adc
mov
enter
cs
mov
adc
out
fistpll
xchg
call
mov
add
ss
loopne
sahf
sbbb
pop
xchg
or
mov
dec
cltd
adc
outsb
push
out
mov
sub
add
push
inc
mov
mov
xor
mov
dec
jge
mov
loopne
mov
cmp
gs
inc
clc
addr16
mov
js
popw
pop
xchg
icebp
mov
pop
in
mov
adc
pop
sub
sub
rcrb
je
loopne
pop
fildll
add
sbb
loope
mov
or
inc
add
loopne
mov
outsl
xchg
das
fldenv
sub
cmp
nop
test
xchg
mov
push
imul
mov
fisubrs
data16
dec
push
jecxz
xchg
xchg
mov
sub
jmp
push
and
fmuls
adc
repz
fstps
mov
das
test
pop
pop
xchg
jno
mov
aaa
push
lock
pushf
xchg
and
rcrb
xchg
dec
ds
cmpb
lret
sub
push
nop
xchg
cli
and
fnsave
imul
outsl
pop
cltd
fs
cmp
lods
mov
nop
jnp
daa
insl
xorl
push
mov
push
stos
and
pop
in
gs
pop
rcr
test
idivl
addr16
pop
push
or
push
shll
test
push
addl
clc
cmp
adc
mov
testb
lcall
add
xchg
dec
cmp
inc
mov
sbb
scas
or
addr16
mov
adc
aam
xchg
ja
and
rorl
test
cmp
mov
push
rcl
loopne
test
sub
scas
sbb
pop
ffreep
sarl
loope
out
aam
leave
movsl
push
adc
sub
cmp
or
add
add
or
jge
std
loop,pn
push
lods
cld
adc
int
pushf
rorb
test
add
xor
dec
bound
mov
sub
rcll
fwait
dec
shll
lods
mov
mov
pop
mov
vunpckhps
mov
or
jae
sub
pusha
hlt
xor
mov
icebp
mov
lds
xchg
mov
push
jg
frstor
iret
add
ret
cmpsb
outsl
inc
test
cmpsb
loope
das
jge,pt
and
mov
ret
mov
cmp
pop
fsubl
imul
outsl
xlat
xchg
and
xor
nop
aaa
and
leave
mov
mov
movsb
icebp
mov
cmp
push
adc
and
mov
out
hlt
into
jo
mov
ljmp
jecxz
add
add
lock
mov
pop
push
xor
mov
dec
cmp
mov
xchg
sbb
push
movsb
mov
loopne
jecxz
pop
jl
mov
cld
jg
movsb
shl
push
repnz
sbb
mov
das
cwtl
inc
in
adc
jb
xor
mov
push
pop
xorl
or
loopne
cmp
ret
sbb
adc
lods
mov
push
mov
stos
mov
mov
push
lcall
inc
andb
xor
mov
aas
or
mov
dec
lods
call
out
mov
stos
andl
jns
mov
jl
push
mov
add
fbld
sub
mov
mov
aas
push
rcl
pusha
push
jnp
lods
ficoms
push
jl
sbb
or
and
mov
pusha
dec
mov
mov
push
fbld
sub
ret
add
jae
in
and
ljmp
push
mov
in
or
push
sbb
inc
inc
cmpsl
stc
iret
inc
mov
aaa
and
movsl
mov
addb
adc
aad
mov
sub
pop
push
cmpb
sbb
jnp
pop
xor
jno
adcb
insl
pushf
xchg
mov
jg
jmp
mov
xchg
dec
mov
mov
std
xchg
and
mov
adc
push
mov
dec
insb
pop
jmp
sub
cmp
and
or
mov
inc
cmpsl
add
xchg
loopne
mov
popf
pop
mov
cld
push
out
dec
mov
test
cmp
fwait
push
mov
mov
push
outsl
push
arpl
ljmp
cmp
stc
clc
sarl
mov
lock
lahf
stos
test
mov
pop
sbb
rorb
dec
jnp
mov
pop
or
add
sarb
insl
lret
sub
or
cld
mov
sub
mov
stos
rclb
popf
jge
and
cmc
test
idivl
rorl
dec
scas
mov
push
pop
rclb
jmp
cs
dec
inc
mov
js
xor
pop
xchg
incl
mov
or
mov
negl
inc
in
cmpsb
ror
int
daa
sbb
icebp
dec
pop
xchg
push
cmpsb
mov
lods
push
bound
popa
lods
mov
pop
jmp
mov
lahf
mov
outsl
sti
mov
pop
out
rorl
mov
dec
dec
jne
nop
xchg
hlt
ss
pop
mov
xor
inc
mov
fiadds
in
mov
jno
das
dec
addr16
gs
and
ss
sub
xchg
ja
mov
mov
shll
adc
gs
mov
inc
sbb
mov
pop
int
sub
pop
les
fcoml
xchg
push
sub
jl
scas
cmp
mov
scas
jge
adc
mov
scas
mov
sahf
mov
dec
adc
mov
mov
mulb
mov
stos
pop
mov
into
addr16
sbb
das
push
popa
stos
scas
inc
iret
imul
andb
inc
adc
out
jp
stc
cmp
divl
sbbl
push
das
xchg
mov
fsubl
leave
loopne
data16
lods
cmp
xor
in
dec
xchg
xlat
jl
inc
inc
mov
push
push
icebp
movsl
dec
into
outsb
jo
jae
mov
xor
jbe
popa
jb
mov
movb
and
push
hlt
jp
mov
adc
into
sahf
jle
dec
xor
inc
das
and
cmp
sbb
adc
jg
xor
fists
aam
xor
ud0
je
cs
scas
ljmp
sub
dec
xor
icebp
sarl
loopne
adc
repz
mov
jo
mov
mov
out
push
stc
lods
mov
add
pop
mov
push
xchg
xchg
divb
mov
jnp
jno
mov
into
jae
cmp
adc
das
movsl
mov
or
push
fsubrl
sbb
and
mov
addr16
and
lock
subb
jae
mov
repz
push
mov
loope
cltd
mov
mov
stos
jns
sub
sbb
mov
jge
or
xor
out
std
mov
aaa
ret
pusha
cli
mov
clc
pushf
ret
inc
xchg
mov
jg
push
jp
cmp
daa
or
stos
xchg
pop
pop
add
sbb
aad
push
add
pop
push
adc
lods
fmull
jae
sbb
xorb
imul
mov
mov
inc
pop
lock
daa
or
stos
mov
jno
lahf
push
cmpsb
int
mov
out
jecxz
cmp
sub
mov
xchg
rolb
mov
jmp
outsl
test
out
push
add
mov
sbb
mov
cmp
inc
add
imul
cmp
addr16
adc
arpl
mov
adc
test
pop
mov
mov
lds
movsl
lahf
mov
push
xchg
pop
inc
mov
mov
or
icebp
inc
inc
fisubl
add
mov
push
sbb
popf
and
sbb
outsb
stc
mov
nop
test
xchg
pop
mov
div
jecxz
mov
cld
pop
pop
xor
dec
xchg
or
mov
mov
enter
add
test
aas
jle
sbb
lret
sub
xchg
push
inc
xchg
lea
and
jb
jge
addb
push
jae
fsubl
gs
mov
pop
aas
outsl
ret
mov
jns
inc
add
syscall
mov
dec
or
mov
push
mov
add
cmp
mov
adc
mov
stos
out
cmp
out
ret
cmp
loop
stc
jl
mov
mov
stos
inc
pop
ret
mov
lret
test
jg
int3
xor
mov
stos
mov
mov
xor
add
dec
push
mov
add
xchg
mov
and
or
cmp
mov
movsl
mov
sbb
jp
push
cmp
mov
bound
in
hlt
pop
add
mov
xor
int
mov
and
push
jno
jg
cwtl
add
or
cwtl
xlat
mov
dec
js
clc
sbb
mov
mov
lar
mov
pop
call
popa
call
rol
nop
push
sub
call
mov
addr16
xchg
cld
dec
xor
xor
hlt
iret
xchg
divl
gs
mov
sub
pop
mov
or
mov
adcb
popf
fs
push
nop
fisubs
pop
mov
sti
ljmp
setbe
popf
push
mov
cmpsb
or
mov
push
push
xor
mov
mov
sbb
cmp
cmc
pop
pop
nop
stc
add
shll
push
bound
pmuludq
jl,pn
or
incb
adc
mov
push
pop
mov
cmp
mov
cmp
das
clc
out
call
mov
add
cmp
fiadds
int
mov
repz
ret
push
movsl
cmp
clc
sti
daa
jnp
push
addr16
pusha
ds
test
gs
adc
dec
xor
push
jae
mov
adc
movsl
jge
or
mov
push
mov
hlt
inc
int3
and
sarb
sahf
inc
xor
or
test
mov
xor
mov
cmp
pusha
cmpsl
mov
pop
inc
mov
xchg
popa
iret
insl
lock
popf
and
mov
hlt
mov
push
cmpsl
pop
adc
sbbl
out
adc
mov
in
pop
xor
mov
gs
ret
nop
imul
mov
ljmp
push
mov
nop
pop
enter
dec
lds
jae
jnp
fwait
inc
jecxz
sbb
mov
cmp
leave
add
cwtl
adcb
loopne
icebp
ficoms
push
mov
inc
in
mov
addb
or
icebp
lahf
dec
mov
push
add
mov
dec
cmp
adc
xchg
or
mov
in
mov
das
aas
pop
sbb
cltd
jl
mov
ljmp
mov
mov
imul
addr16
mov
inc
cmpb
jle
and
jecxz
rcr
xchg
mov
shll
repnz
cmp
and
ret
stc
xchg
int
inc
mov
js
or
mov
sbb
lds
repnz
sti
dec
loope
fcomps
mov
outsl
add
push
in
test
mov
mov
push
std
adc
popf
lret
mov
shlb
mov
mov
pop
pusha
pop
push
or
cmp
test
inc
inc
mov
cmp
xchg
sbb
jecxz
and
clc
mov
pop
in
push
xor
mov
in
daa
pusha
jbe
push
xlat
xchg
addb
xor
adc
cmp
loopne
and
sub
xchg
jg
or
push
adc
xchg
les
shrb
loopne
mov
pushf
xchg
mov
mov
movsl
mov
sub
and
fwait
pushf
cmp
dec
inc
adc
sbbl
loopne
test
mov
iret
xor
jbe
push
inc
sbb
inc
sbb
mov
nop
int
fwait
and
jo
sbb
outsl
fs
nop
movsb
add
mov
fwait
sub
inc
sti
mov
sbb
lret
jo
mov
mov
mov
jne
stos
sbb
cmpb
test
and
in
jecxz
shrb
bswap
lcall
bound
movsl
mov
jne
lods
xchg
repnz
fistl
add
mov
out
pop
in
adc
pusha
jbe
jae
call
inc
xor
hlt
shlb
andb
pop
mov
mov
xor
lods
test
xlat
xor
nop
and
das
mov
pop
lock
pushf
popa
push
outsl
icebp
jp
dec
sub
jle
insl
mov
and
push
dec
es
xorb
out
dec
je
mov
loopne
das
cmp
rcr
pushf
mov
adc
sbb
scas
js
out
frstor
addr16
imul
into
pop
test
cli
sti
jle
inc
loopne
in
rcrb
sbb
mov
add
mov
push
mov
xchg
cmpsl
pop
xchg
hlt
sbb
mov
add
inc
cltd
mov
push
movsb
pusha
jb
inc
dec
test
mov
pop
lahf
pop
sbb
mov
add
mov
sub
dec
aas
cs
cmp
loop
sub
and
movsl
mov
xor
hlt
test
dec
mov
shll
lahf
std
jns
cld
jl
into
notb
mov
rcrb
cmp
insl
mov
pop
jecxz
inc
and
sub
xor
push
shl
jp
les
jnp
jbe
cmp
or
pusha
xchg
pop
lock
jae
out
cltd
outsl
popa
loope
inc
popa
xchg
add
mov
ja
or
lahf
mov
xchg
repz
push
pop
fcoms
or
repnz
xchg
push
mov
jae
push
mov
mov
push
adc
adc
icebp
xlat
mov
adc
mov
jbe
mov
rcrb
cmpl
pshufw
subb
in
mov
cmp
and
dec
fidivs
push
das
push
rorb
imul
mov
lea
movsl
loope
xchg
nop
nop
repnz
shlb
enter
jl
mov
loopne
push
sub
movsl
test
mov
dec
xchg
inc
fldenv
push
cmp
aam
pushf
mov
cmpsl
jp
lahf
loope
lods
xchg
imul
in
or
or
mov
mov
mov
repz
sahf
mov
out
xor
lds
mov
sbb
hlt
or
sbb
push
inc
movsb
jne
pop
movsl
fistpl
lahf
pop
loop
push
lods
jl
aaa
ret
mulb
mov
and
nop
pop
dec
dec
repz
jg
js
xor
xchg
and
sbb
stos
jb
movsl
jmp
mov
and
mov
mov
adc
push
pop
jne
pop
icebp
pop
mov
and
fsubl
pop
xor
jno
sti
mov
ss
fstl
mov
addr16
popa
cltd
jle
pop
dec
shl
adc
mulb
cmpb
fldenv
adc
mov
cmpsl
cmpsl
cmp
out
subb
dec
cli
xor
mov
cmp
mov
popf
insb
out
cmp
cltd
rorl
add
arpl
mov
add
fs
or
jae
scas
lret
fstpt
xor
js
pop
mov
cmp
xchg
xchg
ss
pusha
xorb
clc
cltd
pop
dec
out
mov
inc
mov
bnd
mov
xchg
cs
jno
pop
aas
int
mov
xchg
or
push
xchg
sarb
add
pusha
and
mov
cwtl
jae
mov
inc
sbb
push
inc
cwtl
and
aaa
imull
jbe
and
mov
or
jns
loop
ret
mov
inc
mov
gs
xor
xor
in
mov
mov
bound
inc
inc
mov
mov
inc
popf
inc
push
mov
loopne
jecxz
jae
lods
adc
outsb
mov
mov
and
mov
mov
inc
fisubs
test
int
nop
push
mov
jo
rorl
pop
fiaddl
pusha
scas
xor
ret
std
test
inc
jl
pushf
push
xchg
cmp
inc
xor
filds
pop
jle
ds
sbb
mov
std
mov
push
jle
mov
mov
cmp
inc
sahf
daa
popa
push
or
xchg
mov
mov
and
push
rcrl
ljmp
sbb
pusha
mov
cmp
ret
popf
mov
adc
mov
and
js
movsb
insb
mov
mov
xor
jo
f2xm1
test
cltd
ja
addr16
stos
xchg
xlat
or
outsl
les
imul
fisubl
push
int3
xchg
xchg
mov
xor
bound
adc
andb
insl
lds
jo
adc
adc
mov
ja
stos
pop
stos
cmp
or
sarb
out
mov
out
iret
dec
mov
and
sbb
lahf
inc
cmp
mov
xor
push
mov
pop
roll
fildll
mov
popa
mov
addr16
jg
repz
push
pop
inc
mov
pop
adc
mov
incb
repz
sbb
movsl
and
push
cmp
mov
xor
ret
or
or
add
xor
mov
inc
mov
leave
filds
fildl
stc
mov
xchg
cmp
and
loopne
xchg
ret
xor
in
lock
mov
push
and
xorl
mov
xchg
sbb
cmp
mov
inc
mov
mov
push
adc
andb
shlb
push
stos
dec
out
mov
jg
icebp
shll
not
adc
mov
pop
lahf
pop
dec
or
shr
push
jg
les
in
sbb
loopne
cmp
les
cmp
ret
push
pusha
adc
into
push
jns
jmp
sti
cmp
syscall
lods
out
mov
adc
roll
js
and
mov
mov
jmp
cwtl
fisubl
push
inc
call
mov
push
adc
or
push
movsb
cmp
or
shl
pop
mov
test
mov
sub
xor
out
mov
dec
mov
xchg
bts
jge
es
popa
test
or
mulb
inc
xchg
cmp
pop
fisttpll
push
dec
fsubl
push
mov
sub
data16
pop
idiv
add
orb
mov
sub
outsb
jp
aas
sahf
xlat
pop
inc
mov
xchg
rorl
movsb
shll
cltd
and
dec
mov
xor
arpl
fcomp
clc
or
mov
push
xchg
jge
fsubs
jno
mov
adc
je
scas
mov
pop
xor
es
lret
shll
cmp
adc
mov
jle
mov
or
xchg
enter
mov
dec
sbbb
jp
push
popa
adc
jo
ja
mov
test
test
inc
cmc
mov
push
add
mull
rorl
push
test
inc
sbb
movsl
aam
mov
dec
mov
hlt
mov
inc
mov
sub
pushf
jl
dec
jne
xchg
out
mov
and
add
sbb
into
sub
mov
lret
movsl
sbb
loopne
in
mov
pop
fldenv
sub
mov
inc
push
or
repz
out
mov
and
push
sbb
negl
into
adc
mov
fistpll
jmp
push
xchg
shll
mov
pusha
stc
push
cmp
inc
mov
repz
sub
arpl
and
imul
xchg
repnz
cmp
mov
xchg
stos
sahf
inc
mov
dec
cmp
lret
mov
sbb
add
popa
and
cs
cld
subb
mov
cmc
mov
mov
clc
das
stos
smsw
imul
push
sbb
mov
and
icebp
hlt
imul
loopne
mov
xchg
cltd
add
jge
repnz
sarb
orb
insb
xor
cmp
add
push
je
mov
out
addr16
push
and
pushf
lret
xchg
lods
push
mov
sub
addr16
inc
cmp
xchg
aas
fs
add
insl
sub
ljmp
xor
mov
xchg
or
adc
into
jp
sbb
sub
cmc
test
int3
cmp
lods
das
lea
dec
fstps
loop
xchg
fiadds
daa
mov
int3
pusha
sahf
in
loopne
mov
jb
imul
pop
fs
sahf
cmp
mov
and
testl
mov
loopne
xchg
mov
pop
imul
stc
xlat
sarl
nop
in
xor
mov
xchg
sbb
imul
scas
xor
mov
xor
mov
pmaxsw
les
pushf
je
insl
adc
out
cmp
aad
das
push
lret
lods
popa
inc
shrb
add
jb
dec
in
adc
iret
test
mov
mov
repnz
dec
mov
rcl
mov
in
pusha
fldcw
mov
xchg
mov
xor
sub
xchg
mov
cmp
jge
stc
xchg
js
jl
mov
xor
lods
or
push
mov
js,pt
or
jecxz
mov
dec
jb
mov
nop
sbb
fwait
pop
das
popf
lcall
jnp
ljmp
xor
lea
mov
in
push
dec
and
dec
aas
mov
or
test
jg
sahf
xchg
adc
add
shlb
das
arpl
lahf
repnz
addr16
fwait
ret
in
imul
test
out
movsb
xor
arpl
dec
cli
sbb
daa
and
mov
ret
out
add
aad
leave
mov
mov
cld
pop
xchg
jae
fnstsw
mov
aaa
adc
xchg
nop
int
push
cli
mov
sub
adcb
jno
stos
add
xchg
fcomip
or
cmp
mov
mov
or
jmp
mov
hlt
push
fadd
xchg
lock
push
xchg
lret
stc
ret
xor
xchg
idiv
in
adc
mov
sbb
andl
sub
lock
outsl
pop
mov
into
mov
rcll
mov
mov
aaa
xor
in
mov
iret
cmp
sbb
or
cltd
dec
addr16
fisttpll
push
out
lods
push
push
cmp
mov
xchg
inc
push
test
push
sbb
iret
imull
push
popf
fmuls
jl
cld
push
sti
scas
mov
mov
mov
inc
neg
xor
outsl
ss
pop
mov
mov
or
mov
loop
aaa
push
inc
sub
jae
std
int
pop
inc
adc
push
cmc
mov
mov
insb
xor
outsl
push
adcb
int
xchg
mov
push
out
and
cli
stc
mov
test
popa
mov
out
jns
mov
jno
mov
ja
mov
adc
mov
xchg
js
popa
into
pop
mov
loopne
scas
xchg
not
in
lods
jae
mov
adc
xchg
xchg
cwtl
xchg
add
fcoms
mov
cwtl
sbb
mov
dec
sub
lods
dec
icebp
loop
or
xchg
cmpb
pop
pop
in
sub
pushf
push
jge
enter
cmc
andl
and
inc
dec
dec
pop
mov
arpl
jmp
es
out
das
fs
push
js
loopne
movsl
inc
iret
leave
pop
outsl
push
cmc
mov
xchg
in
sub
xchg
adc
fs
xor
addr16
xor
mov
lret
sub
stos
adc
add
roll
cltd
pop
jnp
dec
pop
add
pop
xchg
popf
push
mov
or
mov
mov
ljmp
xchg
and
cwtl
cmp
sti
pushf
sbb
push
outsb
mov
sub
mov
pop
xchg
lahf
push
mov
mov
dec
fsubs
loope
hlt
add
adc
jge
js
int
repz
imul
push
loopne
inc
xchg
rolb
cwtl
loopne
cld
or
lds
pushf
adc
pop
aam
aad
inc
mov
or
test
add
mov
bsf
cmpsl
and
mov
stos
pop
mov
shl
test
sub
adcl
jl
int
mov
push
cmp
mov
dec
je
shll
adc
xor
mov
push
je
pop
aas
mov
sbb
and
and
mov
sahf
arpl
scas
lock
test
idiv
push
subb
add
adc
mov
roll
cli
xor
mov
shlb
add
loopne
ret
mov
jl
and
adc
mov
sti
and
xchg
mov
cld
inc
in
mov
std
inc
les
andb
cltd
and
mov
stos
mov
xchg
pop
cmp
dec
add
ud2
adc
addr16
mov
in
dec
test
cltd
shl
andl
mov
sti
outsb
ret
mov
loopne
lods
mov
lahf
aad
push
and
into
xlat
pop
sbb
lods
in
dec
stos
nop
mov
inc
movsb
pop
mov
mov
xchg
int
inc
aad
jb
xor
dec
jg
mov
stos
xchg
xchg
jmp
adc
pop
fisttps
into
mov
jae
push
xor
icebp
adc
in
notb
in
add
adc
add
std
mov
pop
aas
xchg
pop
pusha
or
orb
sub
lock
sbb
fildll
mov
mov
pop
and
sub
lahf
or
mov
xorb
xor
dec
pop
xchg
outsb
mov
sub
dec
andl
cs
or
jbe
add
cmp
dec
mov
mov
xchg
mov
dec
sbb
mov
sbb
mov
ss
pusha
js
push
mov
fldcw
cmp
mov
xchg
out
mov
xchg
mov
dec
adc
mov
aam
or
addl
pop
fnstcw
and
lods
shr
loop
inc
pop
nop
cwtl
add
cli
pop
aam
out
int
jb
inc
pusha
sbb
push
int3
push
aaa
les
or
add
test
adc
pause
fisubl
push
inc
std
in
push
cmp
addr16
xor
cld
loopne
jno
sbb
mov
push
mov
ss
sbb
push
fmull
mov
dec
in
jbe
mov
mov
pusha
adc
daa
push
inc
adc
fistl
mov
mov
xchg
iret
xchg
insl
imull
and
push
xchg
inc
lds
xlat
jb
stos
sti
mov
xchg
sbb
mov
divl
cld
int3
lods
out
add
mov
jmp
fidivrl
xchg
int
popa
xchg
shlb
pop
jle
cmp
cld
lock
adc
icebp
push
mov
rorl
pop
mov
lret
mov
sub
stos
mov
rcr
lret
mov
xor
add
jo
fidivs
add
sub
lea
js
add
mov
loop
iret
in
shl
test
fisubs
mov
push
stc
cwtl
cltd
ret
insl
jl
sbbb
xchg
cmp
dec
dec
mov
and
sub
xchg
repz
dec
repz
xor
dec
hlt
in
imul
mov
leave
xor
xor
dec
lods
cli
mov
cmp
shll
and
jae
push
pop
sbb
pop
mov
push
mov
inc
push
or
jge
lahf
add
pop
fucomi
pusha
in
pusha
arpl
faddl
adc
mov
pop
sbb
das
xor
xor
ss
adc
aam
cmp
das
and
aaa
xor
sub
pusha
std
das
adc
bound
push
mov
out
mov
scas
pop
mov
xlat
mov
xor
dec
popa
cmp
mov
dec
mov
call
gs
xchg
fstps
or
addr16
pop
pop
xchg
out
int
jns
stc
mov
cmc
sub
pop
sbb
test
jne
loope
cmp
dec
into
cmpsb
push
mov
les
fs
bound
add
xchg
mov
insl
roll
jb
pop
aas
lret
outsb
mov
and
test
lods
mov
jns
jne
mov
adc
jne
or
lods
jbe
pop
cwtl
rcll
dec
jns
aam
mov
mov
push
stc
xchg
mov
mov
push
xorb
dec
cmp
dec
loope
fisubrl
outsb
mov
and
pusha
adc
in
fisubrs
xchg
jle
enter
test
sub
and
icebp
mov
cmp
or
sbb
dec
or
jle
imul
addr16
stc
loopne
pop
shl
iret
xor
mov
mov
stos
dec
cmp
xchg
fnstenv
mov
stos
push
add
cmp
push
shrb
mov
lcall
dec
push
cmp
mov
lds
out
movsl
cld
cmp
ja
jg
or
and
jae
rclb
cwtl
outsl
loope
mov
or
inc
push
jnp
add
inc
out
and
rorl
lods
rclb
icebp
mov
add
pop
sub
mov
xchg
adc
mov
loopne,pn
subb
push
jne,pn
sar
xchg
sbb
and
mov
and
sbb
adc
add
xchg
cmp
mov
push
xchg
addr16
adc
mov
xor
clc
sub
push
je
jo
icebp
inc
adc
mov
sahf
push
xchg
negb
lret
mov
jecxz
and
sub
sbbl
in
rclb
in
hlt
subb
out
mov
mov
cmp
outsl
inc
mov
repz
roll
pop
lds
add
call
testb
mov
xchg
mov
adc
testb
add
jmp
aaa
jge
aam
stos
sub
sub
outsl
adc
jbe
mov
stos
cmp
addr16
and
push
fnstenv
jno
mov
lret
loopne
xchg
scas
gs
add
aam
jb
sbb
adc
test
clc
ficompl
jge
sub
jno
pushf
push
jne
fst
pop
shl
int
or
or
mov
fsubrp
xchg
leave
inc
add
pop
mov
push
fstl
popa
fwait
dec
je
mov
iret
sbb
js
xor
or
mov
lret
cmp
inc
int
xchg
dec
pop
cmp
xchg
cli
or
mulb
movsb
and
mov
int3
sub
sub
inc
pop
test
dec
dec
stos
mov
dec
mov
add
inc
pop
ja
enter
jae
loopne
popf
cld
xchg
inc
jle
xchg
push
dec
repnz
fisubs
mov
clc
cmp
inc
push
sbb
or
add
sub
mov
jge
mov
int3
xchg
inc
jecxz
xor
mov
mov
lahf
mov
dec
aas
cmc
outsl
mov
dec
xor
dec
popa
xchg
cli
mov
xchg
xchg
sbbb
test
jecxz
pop
mov
adc
xor
jle
dec
jl
scas
or
adcl
lret
pop
inc
mov
ss
test
push
fsub
push
hlt
mul
repnz
sub
decl
rolb
in
or
cmp
shrl
and
or
pop
repnz
mov
inc
jecxz
cwtl
das
add
leave
pop
jae
fldenv
mov
lock
cs
jl
mov
mov
repnz
addr16
pop
movsl
pcmpgtd
mov
jne
sub
ret
mov
cmp
daa
dec
fsts
pop
xlat
and
jns
inc
inc
add
cwtl
sub
dec
andl
mov
push
subl
mov
pop
jle
fbld
jns
test
addr16
jl
test
sub
sahf
imul
or
shrl
aaa
add
cmpsl
cmp
icebp
mov
lock
sti
andl
jmp
imul
add
xchg
mov
into
inc
fstl
loopne
arpl
gs
addr16
std
xlat
push
test
push
pushf
jb
mov
fnstsw
repnz
and
in
aaa
xchg
mov
jns
testb
fwait
ret
inc
aad
inc
call
jb
pusha
loopne
imul
cmp
inc
std
xchg
xchg
push
jp
xchg
lds
leave
mov
mov
mov
mov
and
sahf
mov
shll
cmpsl
push
inc
test
jbe
mov
es
mov
pop
mov
or
push
adc
scas
jecxz
fldcw
add
aam
movsb
push
add
jb
mov
in
inc
fs
pop
and
add
fsubrp
mov
ja
test
push
mov
mov
jmp
mov
sahf
push
pushf
loopne
xchg
xlat
pop
add
sub
add
pop
loop
xchg
stos
outsb
stos
xor
xor
test
aas
jge
cmp
mov
movb
test
dec
sti
push
dec
mov
mov
ret
into
mov
aad
stc
push
mov
out
push
xchg
mov
outsb
icebp
xchg
add
mov
mov
pop
sbb
dec
push
jg
adc
test
xchg
mov
xor
mov
in
jl
mov
iret
dec
mov
sahf
popf
inc
mov
data16
loopne
mov
jne
xchg
lods
mov
mov
fisttpll
mov
pop
lods
jg
mov
movsb
push
pusha
push
imul
mov
mov
or
pop
test
popf
and
fstpl
cmp
add
mov
jns
inc
mov
cs
int
adc
data16
sub
cmp
popa
std
daa
loopne
ss
jo
jae
in
aas
fwait
jle
inc
popa
stc
xchg
mov
bound
jecxz
sub
or
loopne
adc
jmp
push
movsl
push
pop
mov
stc
and
mov
xchg
mov
adc
loope
jl
ljmp
fisubs
sub
das
mov
dec
inc
aad
aaa
fs
and
cmp
lret
and
and
mov
ja
je
pusha
cli
sbb
lahf
dec
and
movsb
adc
dec
int
cmp
cli
shll
mov
adc
inc
sbb
pop
in
std
bound
addb
mov
aaa
test
mov
rep
fs
jmp
pop
lret
push
jns
sbb
repnz
sub
pop
addr16
xchg
or
mov
pushl
stos
pop
push
mov
sbb
ljmp
mov
int
xlat
jp
faddl
cmpsl
and
add
sbb
mov
xor
int3
fcmovne
dec
ss
aaa
mov
imul
inc
in
dec
dec
pushf
shll
adc
xor
cmp
inc
pop
cwtl
xchg
idiv
mov
xor
lock
das
arpl
jno
or
stos
mov
cli
push
ret
xlat
mov
add
out
push
mov
pop
stc
mov
scas
xor
push
mov
xchg
pusha
pusha
sti
push
pop
out
add
cmp
pushf
xchg
jle
cmp
cmp
jcxz
shlb
test
repnz
popf
inc
in
std
loopne
into
outsb
lcall
lahf
clc
fbld
cmpb
inc
mov
les
sbb
sub
and
andl
mov
dec
mov
cltd
add
outsb
lahf
hlt
insl
jno
addb
aas
aad
add
sub
mov
mov
jle
cmp
cld
adc
inc
sbb
add
fdivr
movsl
fimuls
pop
stos
push
insb
test
lods
jnp
sub
and
dec
and
xor
mov
mov
xchg
mov
cmp
aaa
mov
aas
inc
in
shlb
jo
cmp
and
fidivrs
mov
scas
dec
imull
in
repz
das
enter
mov
arpl
pop
cli
aas
mov
clc
xor
cs
cmp
dec
repnz
pusha
push
add
jo
xchg
mov
insl
mov
xchg
and
cmp
cmpsl
xor
aaa
popf
add
stc
stos
aad
bound
shll
xor
lods
jne
cmpsl
dec
pop
stos
ja
pusha
push
jg
iret
adc
mov
mov
and
push
test
inc
mov
rcrb
arpl
nop
in
pop
push
mov
call
les
mov
or
imul
lea
lock
mov
out
adcb
in
pop
loopne
or
pop
clc
je
mov
insb
xchg
popf
mov
mov
cmp
mov
test
in
sub
mov
fbld
outsb
fnstcw
movsb
in
dec
mov
in
jne
div
jbe
lret
test
ja
stos
push
jb
sbb
cmp
stc
inc
mov
popa
cmpsl
ss
cmpb
jbe
mov
fidivrl
aas
loop
notb
xchg
inc
adc
adc
cmc
add
popa
pop
dec
outsb
mov
push
in
insb
cmp
mov
pop
cmpsb
add
mulb
sub
mov
xchg
imul
popa
add
dec
dec
xor
rcrb
ss
rcr
lods
insb
es
add
fwait
adc
mov
cmpsb
lock
xor
iret
mov
aaa
jecxz
sbb
orl
cmp
xchg
fcom
mov
ds
fcmovu
pop
fistpl
repnz
je
cmpsl
inc
pushf
bound
push
mov
mov
lds
fnstsw
mov
cs
int3
movsb
mov
in
fs
mov
das
movsl
pop
mov
dec
push
insl
mov
mov
ffree
aad
adc
addr16
pusha
lea
xor
mov
fiaddl
mov
push
popf
jno
rcll
sub
stos
and
inc
xor
jne
fdivrs
mov
push
mov
pusha
int
rorl
shl
mov
std
jg
orb
xchg
lods
add
xchg
gs
daa
popa
mov
ss
loope
lahf
mov
sbb
or
arpl
inc
inc
dec
mov
dec
cmp
push
lock
add
xor
rorl
data16
cld
test
and
xor
fs
sub
push
das
cmc
popa
sub
jnp
ja
jbe
into
loopne
xor
push
outsl
mov
mov
int3
sbb
mov
push
sbb
pop
in
jbe
inc
out
lods
adc
sbb
mov
mov
loope
mov
fwait
lock
mov
fs
push
pop
mov
adc
dec
out
cmp
jno
lds
mov
inc
loopne
mov
call
in
fnstcw
and
fdivr
pusha
aam
aas
inc
xchg
cwtl
loop
pusha
test
jno
test
push
nop
daa
push
gs
or
jo
mov
cmp
mov
in
mov
mov
mov
pop
add
fnstcw
pop
cmp
loop
pop
xlat
addr16
and
jge
icebp
shlb
stc
push
sbb
mov
nop
add
lahf
or
push
xor
jno
loope
fs
mov
iret
push
lods
out
lea
cmp
lds
rcrl
jge
movsl
mov
lods
jnp
sub
mov
and
push
adc
movsb
adc
shlb
pop
and
cmp
dec
sub
loopne
sbb
cmp
jbe
pop
jge
sbb
push
xchg
mov
test
aad
sub
std
in
push
pop
addl
or
mov
test
xor
out
add
dec
orw
aas
xor
into
add
test
addb
repz
lret
pop
out
das
ret
fwait
lcall
stos
shll
mov
pop
mov
push
pop
cmc
push
scas
leave
dec
ret
adc
popf
dec
xchg
lret
aad
fcom
sbb
xchg
mov
dec
sbb
ss
insb
imul
dec
mov
popa
dec
adc
lret
inc
xchg
stc
hlt
add
mov
sahf
mov
into
and
fmul
push
ljmp
nop
jne
mov
stc
mov
aad
andb
jecxz
push
and
hlt
mov
adc
lea
div
sti
xchg
int
mov
mov
sar
mov
cld
enter
mov
lret
repnz
jle
and
jl
shl
mov
js
shlb
dec
imul
cs
push
sbb
sbb
cmp
insl
loopne
gs
ds
push
sahf
and
stos
leave
lret
or
push
sub
push
shlb
std
inc
inc
adc
insl
xchg
push
pop
dec
loop
in
aaa
mov
repnz
sbb
shrl
jb
and
cmpsb
mov
mov
lods
cmp
xchg
push
lods
mov
divl
mov
test
lahf
ror
jl
jb
and
mov
adc
aas
mov
mov
insl
fidivrs
mov
loope
ret
pushf
loopne
cmp
dec
div
jb
dec
dec
xchg
mov
ror
nop
push
mov
movb
add
mov
mov
fbstp
stos
jmp
and
dec
xlat
cld
sub
mov
mov
scas
int3
mov
out
stos
mov
push
or
test
push
sub
cld
mov
mov
adc
pop
inc
mov
xor
jl
jmp
int
addb
pop
mov
jns
ds
add
mulb
scas
mov
jmp
push
sub
aaa
mov
dec
mov
shlb
push
mov
fiaddl
cmc
sahf
out
xchg
dec
mov
sti
jns
jb
or
push
flds
inc
bound
ds
jno
or
sub
cli
ret
mov
loope
popf
xor
pushf
push
jne
jp
or
cmpsb
movsl
repz
cmp
push
add
insl
fcomp
aaa
pop
jg
aas
in
loop
mov
sub
ret
popa
or
popf
je
test
inc
sbb
pushf
xchg
pop
sub
sti
popa
sub
scas
mov
xor
pop
bound
aam
es
mov
lcall
fldl
lea
call
mov
outsl
xor
int3
shlb
mov
xchg
push
push
loop
pop
cmc
iret
mov
scas
out
add
pusha
push
jae
mov
sbb
mov
data16
dec
mov
rcrb
enter
jno
adc
fstpt
lret
stos
or
es
mov
sbb
push
imul
scas
add
cmp
jecxz
movsl
out
mov
sub
mov
cmc
pusha
shrl
cld
nop
mov
push
loopne
insl
rclb
pushf
mov
and
dec
ret
add
and
nop
insl
cmp
mov
sbb
dec
sbb
cmpsb
cmp
push
leave
cmp
hlt
ja
pop
push
pop
pop
mov
das
cli
fiaddl
or
jl
lods
cmp
inc
mov
imul
lcall
jnp
movsb
stos
mov
xchg
popf
pushf
push
mov
fisubl
xor
andb
mov
je
xchg
push
xor
int
inc
add
rcrl
ret
cmc
adcb
add
add
lods
sbb
xchg
scas
cmpsl
jns
int
insl
mov
or
ffree
movsl
lret
mov
mov
pusha
sti
rcr
cmpsl
movsb
into
fwait
sub
out
in
mov
clc
xchg
adc
jecxz
aam
ret
mov
jp
xchg
push
cmc
les
shl
iret
subb
ret
xchg
gs
out
push
addb
ret
or
sbb
pop
sub
inc
fnstcw
jmp
mov
jno
jecxz
addr16
lods
shr
and
aam
add
xchg
pushl
pusha
xlat
mov
mov
lahf
insb
lret
call
pop
mov
xchg
mov
fisubs
in
mov
xor
push
adc
lret
in
dec
and
sbb
adc
inc
add
inc
lahf
pop
xchg
push
lahf
push
stc
mov
mov
aaa
pop
add
in
mov
ret
dec
pop
addb
sbb
mov
mov
mov
inc
mov
aad
out
mov
adc
adc
mov
in
test
add
ficompl
cmp
repz
xor
xchg
pop
mov
jg
xchg
je
sbb
xchg
adc
lcall
outsb
imul
and
js
loop
imul
imul
pop
or
js
jns
push
rcll
xor
stos
cld
mov
dec
mov
movsb
mov
jns
jno
mov
mov
push
dec
es
xchg
adc
ds
scas
push
in
mov
mov
sbb
push
jecxz
push
fsts
ja
push
jbe
add
in
das
jp
inc
push
inc
scas
lds
lock
fbld
sub
xor
xchg
dec
add
dec
movsb
mov
xchg
or
pop
subb
icebp
test
adc
repnz
nop
fstl
daa
pushf
pop
dec
dec
xchg
push
mov
popf
push
outsb
std
jae
mov
les
adc
mov
movsl
cmc
mov
push
fcmovu
push
mov
lahf
fwait
cmp
loopne
adcb
int3
cmpsl
scas
in
or
mov
shll
idivl
out
out
lock
rorb
dec
sub
in
popa
lods
loop
iret
ds
ret
rclb
or
sub
jno
lahf
mull
lahf
and
icebp
mov
lods
push
js
mov
mov
adc
lea
lods
jo
xchg
mov
xchg
pop
xchg
insl
inc
mov
cld
std
jns
mov
mov
insl
les
pop
sub
int3
and
pop
mov
adc
mov
stos
call
test
pop
test
sub
jecxz
cld
sbb
decl
mov
ds
pop
push
scas
loop
cmp
mov
xlat
hlt
andl
pop
or
or
add
push
cmp
jg
popf
mov
dec
add
and
insl
lahf
mov
test
loop
add
cwtl
mov
gs
push
inc
xor
nop
addr16
mov
outsb
add
mov
adc
inc
xchg
add
hlt
mov
inc
mov
mov
dec
mov
test
imul
and
sahf
mov
jno
packsswb
mov
xorl
test
dec
js
cmp
mov
mov
jge
frstor
or
xor
mov
gs
data16
call
orl
lds
frstor
dec
scas
fsts
sbb
sub
ret
cmp
loop
and
mov
sbb
loopne
call
and
outsb
or
out
cs
repz
push
insb
bound
pop
mov
test
and
pop
xchg
cmp
test
test
popf
int
dec
fcomip
repnz
inc
je
out
pop
push
adc
mov
jp
adc
and
adc
and
insb
mov
cwtl
out
sahf
cs
rcrb
rol
cwtl
push
pusha
loopne
mov
pop
lret
mov
push
mov
gs
xor
loop
push
frstor
addr16
and
sbb
mov
popa
dec
fstpt
cs
push
adc
shlb
addr16
xorb
cmp
mov
inc
fdivr
cmp
cli
mov
sbb
in
movsl
pop
loope
hlt
jo
cmp
inc
inc
ret
in
fistpll
mov
dec
push
xor
jnp
test
mov
ret
popa
and
cmp
mov
sarl
gs
mov
orl
mov
mov
out
loop
adc
sbbb
jmp
icebp
leave
inc
aaa
lret
cmp
scas
std
mov
fstps
pop
pop
scas
and
cmp
test
test
mov
mov
lcall
orb
scas
and
fimuls
insl
xchg
aad
add
ss
and
sub
imul
inc
mov
fsubrp
nop
adc
jae
and
outsl
push
sbb
lahf
xor
dec
inc
test
in
adc
sbb
addr16
movsb
cmpsb
ret
std
push
mov
cmp
mov
hlt
push
jmp
pusha
push
jmp
sub
mov
mov
mov
aad
jmp
mov
repnz
les
adc
jnp
mov
dec
or
push
add
mov
sbb
sub
mov
mov
dec
jbe
or
lcall
mov
les
xchg
mov
inc
push
ss
or
jl
xor
aam
push
cwtl
mov
mov
add
push
ljmp
cmp
sbb
lea
inc
inc
pop
sbb
cltd
and
and
ja
mov
jns
dec
clc
popa
scas
es
js
jp
mov
stos
mov
jge
dec
fldcw
mov
mov
popf
and
jnp
ja
movsb
popa
and
subl
xor
inc
sbb
shlb
mov
pop
mov
mov
cltd
lock
inc
adc
pusha
pop
shll
test
insb
cmpsl
sub
stc
sbb
mov
add
shl
sub
cltd
movsl
jl
mov
mov
and
icebp
jp
push
popa
mov
repz
cmpsb
add
je
push
int
daa
xchg
mov
add
sub
sub
test
js
mov
movsb
mov
daa
sti
mov
cmc
adc
out
mov
xor
inc
mov
xlat
mov
andb
mov
mov
add
push
das
cltd
jp
or
ds
jae
sub
loopne
jb
mov
data16
mov
jbe
push
lret
mov
jb
push
sahf
out
test
dec
xlat
xorb
add
cli
gs
ret
push
mov
pusha
mov
outsl
fnsave
jecxz
in
inc
fcoml
mov
lods
dec
xchg
std
cs
mov
ds
and
adc
addr16
test
xchg
xchg
jg
sbbl
cs
lahf
xor
fmulp
mov
das
lock
mov
push
push
and
shll
add
cli
sub
arpl
je
add
sbb
sbb
mov
mov
inc
xor
mov
sbb
fbld
mov
xchg
mov
xchg
fiadds
aad
int
push
inc
rclb
pop
test
frstor
and
jmp
inc
loopne
cmpsl
stos
sbb
push
gs
mov
popa
lock
and
sub
fimull
cli
lods
fcmove
gs
lret
add
xchg
jne
cmp
or
dec
sub
je
popa
enter
fnsave
push
test
sub
mov
lahf
sub
mov
xor
or
adc
mov
xchg
inc
mov
cmp
or
nop
mov
fisubl
push
jo
adc
adcl
and
mov
pop
and
sbb
cmp
sub
enter
inc
aad
data16
fistpl
jmp
je
popf
loop
xchg
jo
cmp
xor
cwtl
adc
and
mov
pushf
inc
ficompl
cmp
sbb
jne
push
dec
mov
xchg
mov
mov
push
shll
or
dec
mov
xchg
std
movsl
andl
xchg
mov
inc
mov
iret
mov
out
repnz
bound
inc
cmp
jg
test
jg
orb
cmc
mov
xor
mov
cwtl
mov
push
les
lds
sub
mov
rol
enter
xchg
arpl
movsb
lea
sub
in
push
icebp
gs
iret
cltd
mov
jb
mov
test
std
outsb
test
orb
fbld
or
in
pop
inc
cmp
aam
popf
sbb
hlt
mov
lret
push
mov
mov
cmp
arpl
addr16
aaa
test
mov
xchg
jmp
mov
xchg
out
mov
stc
jl
sti
into
mov
ja
clc
icebp
mov
sub
xor
mov
cld
add
aad
push
pop
cmp
jmp
adc
ds
ja
and
pop
sbb
lahf
fs
inc
adc
mov
scas
mov
mov
popf
sub
push
aas
lret
mov
shll
out
test
sub
cmp
stc
jp
sub
out
loop
stos
insb
lahf
sub
lcall
insl
inc
and
pushf
incb
stos
cmp
mov
aam
mov
loopne
xchg
push
mov
and
cltd
sbb
push
flds
jo
sbb
adc
loopne
mov
hlt
sub
mull
sbb
cmp
cs
in
add
pusha
mov
pop
outsb
and
loope
and
mov
js
mov
imul
data16
xchg
dec
enter
ljmp
push
sbb
jp
fcomi
adcb
popa
loopne
mov
or
xchg
xchg
dec
pop
test
sti
cld
es
mov
xor
sbb
mov
adc
aas
out
mov
in
or
mov
loope
jl
in
jmp
xlat
hlt
dec
lret
je
cmp
pop
mov
mov
lret
jae
nop
stos
jp
inc
leave
add
xchg
adc
fucomi
mov
lcall
enter
add
dec
cli
cmp
mov
push
inc
ret
lods
mov
aam
xchg
jle
dec
xor
mov
sti
dec
sbb
dec
shl
pop
test
mov
cwtl
cmpsb
int
mov
lahf
add
sbb
inc
mov
data16
xchg
pusha
xor
mov
mov
loopne
pop
fs
or
pushf
pop
mov
or
mov
seto
cmp
dec
mov
pushf
into
decb
ja
mov
inc
mov
add
push
mov
jo
movb
stos
ret
xor
and
in
data16
ds
out
mov
sarb
sub
mov
sahf
xchg
es
jo
mov
out
or
call
repz
pop
in
pop
cmp
xor
jmp
out
scas
mov
mov
adc
jno
fdivrs
aam
cmp
mov
je
push
xchg
mov
adc
int3
mov
xor
mov
pop
sbb
mov
mov
cmpsb
inc
fstps
adc
ret
out
inc
scas
inc
arpl
sbb
call
jle
mov
leave
enter
bndldx
std
mov
stos
imul
popa
xchg
mov
stos
cld
and
int3
and
mov
mov
stos
mov
xchg
fldt
je
push
es
mov
jle
into
jmp
arpl
pop
clc
and
sub
xchg
xchg
mov
and
ljmp
jg
pop
push
jp
dec
sub
loopne
mov
lret
outsb
jge
jns
inc
faddl
mov
gs
loopne
hlt
cmc
out
jecxz
xchg
sahf
lds
into
cld
xchg
fs
xor
popf
push
sbb
mov
or
and
lea
scas
mov
sub
adc
loope
jle
or
sub
ds
jbe
loop
and
xchg
and
lods
mov
sub
xchg
sbb
imul
and
aad
inc
mov
mov
enter
data16
jbe
loope
scas
fsubl
cs
scas
out
stos
inc
mov
call
sub
xchg
in
cmp
into
pushf
repz
mov
xor
and
aad
dec
cmp
out
sbb
cmp
shll
pusha
add
in
jne
incl
dec
push
in
fwait
sbb
fsts
push
mov
test
push
mov
clc
dec
dec
ss
cmp
lcall
xchg
call
mov
shlb
mov
jle
mov
cmpsl
ja
xchg
mov
pop
lcall
pop
loop
push
add
or
mov
in
and
int
mov
cmpsl
inc
cltd
loope
sahf
nop
mov
test
mov
xchg
gs
mov
divb
ret
cltd
sub
cmpb
lods
mov
pop
xchg
push
sbb
xlat
repz
sub
dec
lds
xor
lahf
imul
or
data16
pop
cld
sbb
push
mov
insl
push
cmp
movsl
fwait
aaa
cmp
mov
mov
cmpsl
mov
fnsave
add
int
mov
scas
mov
adc
jno
mov
push
mov
inc
jg
out
mov
inc
jmp
hlt
mov
loop
rorb
test
pop
sub
xor
cmp
push
jae
xchg
sahf
cmp
lods
dec
mov
xlat
lds
cli
mov
pop
dec
aam
push
inc
or
dec
cwtl
and
cmp
sbb
out
push
mov
fcmovb
mov
frstor
repnz
test
aas
cmpb
std
mov
sbb
cli
fwait
push
test
sbb
icebp
rcrl
dec
pushf
push
mov
les
loopne
xor
push
dec
mov
push
fstps
mov
add
and
mov
les
cmpsl
jb
test
xchg
fsubp
dec
mov
call
xchg
lock
leave
mov
pop
inc
adc
pop
sub
mov
loopne
repz
mov
aas
push
into
adc
mov
xchg
jge,pt
mov
push
push
repnz
hlt
cld
fsubp
pop
jecxz
mov
leave
cmpsl
sbb
mov
sahf
arpl
mov
daa
mov
dec
inc
popl
adc
fbstp
add
mov
dec
jnp
mov
jae
adc
iret
repz
icebp
fisttpll
push
rcrl
inc
loop
mov
lcall
sub
xchg
and
addr16
cmpsb
fdivs
sahf
sbb
ret
mov
loopne
aad
loope
in
lcall
mov
jle
nop
adc
adc
popf
nop
adc
popa
sti
push
int
jne
je
xchg
jno
cmp
jmp
fstl
test
fwait
mov
mov
mov
sub
jae
out
mov
mov
sahf
cmp
rolb
xchg
mov
pop
int
jo
jge
ret
lcall
cmp
movsl
mov
xor
push
je
stos
lcall
sub
cmpsl
add
in
dec
insl
cmpb
inc
xchg
pushf
mov
xor
int
mov
stc
inc
ljmp
adc
cmpsb
and
xchg
mov
jmp
loopne
daa
and
fcoms
rcl
inc
gs
mov
add
aam
rorl
pushf
cs
mov
jno
add
dec
ja
mov
sbb
pop
and
cmp
mov
outsb
sub
ret
lret
js
mov
push
repnz
mov
push
xchg
lret
inc
pushf
ret
or
scas
push
adc
aad
push
adc
fisubl
out
dec
sahf
xor
sbb
mov
adc
daa
pusha
add
mov
add
mov
fcomps
inc
aas
pop
sarb
out
jbe
inc
push
or
popa
adc
sbb
jne,pt
dec
push
dec
stc
mov
fstps
push
lahf
mov
orl
cmp
mov
pop
xor
add
push
cs
push
add
or
and
inc
add
push
pusha
call
adc
push
xchg
jbe
rcll
lahf
and
fldenv
cmp
or
push
dec
out
push
mov
mov
pop
xor
hlt
rcr
and
paddsb
aam
ljmp
jmp
dec
xchg
fwait
jle
loopne
xor
push
mov
sbb
pop
nop
or
loop
fists
pop
inc
stos
fstpl
pusha
imul
gs
mov
ds
pop
xchg
mov
inc
cmpsb
adc
fsubrs
unpckhps
arpl
jmp
out
aas
sbb
push
js
xchg
or
lds
jl
and
adc
mov
jmp
push
mov
test
pusha
inc
scas
mov
js
andb
in
xor
mov
movsl
leave
mov
test
frndint
repz
xchg
mov
call
dec
fs
out
mov
fld
cmp
in
addr16
push
aam
mov
push
cmp
sub
iret
xchg
sub
sub
rorb
sub
mov
xchg
incb
andb
jp
shl
ljmp
scas
dec
and
fisubs
dec
mov
jmp
into
mov
inc
xor
nop
rcrl
loopne
stc
mov
bnd
ss
pop
outsb
push
pop
add
and
lods
or
stos
cmp
mov
inc
adc
mov
imul
or
pop
andb
aas
or
add
cmp
das
mov
sub
in
and
jb
nop
jne
lods
mov
mov
out
dec
dec
mov
pop
inc
dec
mov
mulb
shl
push
mov
popl
mov
loopne
jl
push
lods
lea
and
repnz
loopne
or
mov
adc
xchg
cwtl
fwait
xor
mov
or
sbb
insb
pop
orb
mov
pushf
push
dec
jae
xchg
loope
gs
push
jmp
ret
adc
pusha
lret
fwait
jle
pmaxsw
and
data16
jb
test
push
orb
sbbb
sarb
sbb
dec
mov
mov
pop
push
cltd
mov
sub
xchg
pop
add
add
out
xor
mov
pop
mov
pop
fyl2x
aad
sti
outsb
sbb
rcrb
mov
jns
push
ds
mov
outsb
jg
je
pop
lret
mov
push
daa
das
add
mov
lods
or
lahf
arpl
and
popf
jae
mov
pop
stos
xchg
and
xchg
and
inc
or
jmp
sbb
stc
ficoml
jge
iret
out
xor
std
mov
lcall
mov
add
imul
or
and
ds
sbb
movsl
sub
into
lahf
fwait
stc
push
mov
sub
mov
testb
mov
lahf
mov
into
inc
add
insb
es
adcb
jge
sub
daa
jbe
cld
out
mov
mov
fimull
or
jecxz
divb
je
mov
mov
pushf
nop
push
jmp
addr16
repnz
and
pop
adc
xlat
adc
loop
push
pop
mov
dec
xor
outsb
lcall
push
ljmp
pop
or
mov
pop
or
mov
cmp
push
inc
sub
mov
popl
mov
addr16
testl
outsl
lds
int
loop
dec
mov
test
mov
cmp
mov
inc
aad
sbb
movsb
mull
call
mov
mov
mov
push
and
into
mov
jne
ficoml
and
js
sub
mov
cltd
lods
stc
scas
mov
pushf
pop
pop
mov
mov
push
push
xor
cmp
int
sbb
scas
xchg
fs
clc
rcll
mov
push
ljmp
fsubl
in
adc
ja
sub
lock
ret
scas
mov
gs
xlat
subb
sbb
insl
push
inc
cmpb
jmp
data16
inc
decl
add
pop
push
fwait
sub
sbb
pop
xchg
xchg
icebp
xor
and
and
insb
sub
mov
pop
lret
out
insl
or
xorl
fidivs
lds
pop
inc
cmp
cmp
inc
dec
outsb
mov
scas
inc
popa
mov
ja
push
sub
xchg
mov
add
sbb
out
pushf
mov
mov
sub
xchg
shll
fdivl
add
or
mov
jno
sbb
or
shrl
addr16
sub
mov
inc
jg
cwtl
hlt
movsl
jnp
mov
lock
shlb
or
movlps
mov
dec
rolb
mov
outsb
cmpl
push
jne
imul
scas
pop
xor
nop
inc
jns
adc
out
addr16
inc
insb
inc
iret
mov
xchg
sarl
cmpsb
inc
xor
mov
push
push
sub
mov
cltd
and
pop
pusha
dec
pop
lods
dec
std
fisttpl
es
mov
sbb
adc
xchg
inc
mov
fwait
cwtl
mov
push
push
cld
filds
pop
mov
pop
pop
outsl
mov
adc
dec
sahf
inc
mov
loopne
sti
fwait
testb
fsubrs
push
xchg
mov
out
pop
xchg
mov
out
lret
or
xchg
inc
xchg
and
cmp
cmp
inc
fidivrs
and
sub
jp
lds
test
iret
and
push
ja
aaa
dec
test
popf
lea
jge
xor
pushf
in
push
insl
in
add
mov
cmc
hlt
loopne
mov
xlat
xchg
xor
scas
xor
aas
xchg
repz
mov
xchg
xchg
mov
orb
pop
sub
cmp
in
loope
xchg
fidivl
push
mov
push
fwait
push
repz
sbbl
xchg
in
jne
xchg
insl
in
imul
mov
hlt
push
js
mov
lret
cmp
or
shll
jmp
in
xchg
cmpsl
mov
mov
jb
add
loope
mov
cmp
xor
lea
lods
dec
sbb
mov
cmp
imul
shl
mov
cli
fidivs
jno
dec
aas
add
or
outsl
andb
jmp
mov
movsl
sub
fnstsw
test
mov
pop
xchg
inc
inc
pusha
andl
pop
test
xchg
hlt
jp
mov
iret
pop
or
andl
sbb
and
jl
sub
loope
or
lock
loop
pusha
je
mov
push
mov
in
pop
ret
and
adcl
fdivl
cmp
repnz
or
jecxz
or
mov
adc
mov
pop
or
add
dec
loope
sub
andb
out
jo
and
cwtl
sub
inc
add
rcrl
pop
les
mov
or
mov
icebp
sub
mov
pop
xchg
aam
leave
sti
mov
push
test
mov
pop
jl
fisubrl
lds
mov
js
jge
cmp
pop
bound
sub
mov
fstps
sarb
js
mov
rol
cli
add
cwtl
cld
pop
lret
nop
in
lods
adc
push
pushf
xchg
sub
ljmp
adc
mov
cltd
loop
jne
jp
push
arpl
fidivl
mov
dec
loopne
fildll
mov
jbe
mov
test
lock
mov
add
pop
stos
scas
push
stos
cmpsb
movsb
or
mov
add
ds
mov
into
xchg
mov
dec
cli
int
mov
push
jle
pushf
loopne
adc
cwtl
jge
mov
mov
loopne
loopne
int
mov
nop
xor
pop
imul
test
xchg
pusha
mov
xchg
clc
add
mov
insl
inc
mov
int3
pop
jae
iret
loop
and
mov
std
jo
subb
loopne
push
xchg
xor
call
scas
mov
gs
xchg
push
mov
fxam
xor
loopne
add
cmc
sti
xor
cwtl
inc
outsb
into
test
aas
mov
jne
cltd
push
xchg
or
xchg
cmp
fldln2
and
ja
in
bound
cmp
and
rcrb
repz
xchg
xchg
mov
cwtl
enter
pop
outsb
loopne
and
testb
es
popa
adc
cwtl
xchg
pop
push
ja
xor
pusha
nop
mov
add
jno
mov
jnp
sbb
mov
popf
std
cmp
mov
mov
mov
loop
mov
fldenv
rcrl
je
xor
ficompl
mull
ss
scas
or
jl
adc
leave
sub
loopne
inc
rorl
fwait
xchg
xchg
pusha
xchg
and
sub
xchg
adc
out
mov
dec
orb
xchg
dec
daa
inc
ss
outsl
add
shrl
xlat
lock
mov
push
addr16
scas
mov
xchg
pop
icebp
ret
jecxz
mov
mov
cmpl
sub
mov
pop
jbe
clc
or
xchg
mov
cmc
daa
and
inc
cmp
pusha
xor
sbb
adc
or
sub
and
mov
cmp
push
cmp
imul
adc
and
and
fdivs
cmp
mov
xor
pop
cmp
mov
rcll
pusha
into
sbb
xor
or
mov
mov
jmp
test
dec
cld
inc
add
cwtl
mov
cmp
xchg
xor
fcomip
cmp
dec
jl
mov
ss
mov
jmp
out
lcall
mov
push
mov
push
or
fisubs
jg
adc
mov
and
add
push
mov
daa
hlt
mov
idivl
adc
or
push
fstps
fimuls
inc
mov
or
gs
pop
mov
xor
lret
test
in
mov
adc
sub
push
and
mov
or
add
push
dec
mov
mov
scas
sbb
inc
addr16
out
rolb
mov
mov
and
cltd
inc
clc
mov
orl
pop
into
ss
leave
cmp
insl
mov
lds
lcall
cmp
jno
fs
xchg
jmp
pop
in
aad
call
sub
adc
popa
push
add
std
pop
xchg
xchg
inc
cld
in
gs
mov
pop
in
cs
sbb
cmc
push
jle
outsb
mov
stc
inc
push
jmp
jge
and
xor
pop
inc
xor
arpl
das
xor
mov
cld
and
daa
cmpsl
idivb
les
nop
ror
cmp
xor
imul
and
pusha
mov
mov
inc
mov
pop
loope
cs
icebp
mov
xchg
lcall
jecxz
test
cld
mov
pop
jmp
rcl
fstl
push
pusha
inc
jns
jg
lret
mov
mov
aas
daa
xchg
push
in
and
adc
scas
adc
ja
out
mov
arpl
mov
pushf
shrb
xchg
int
lock
pusha
lret
cltd
mov
cmp
aad
mov
mov
adc
div
jo
adc
sbb
push
andb
loopne
lds
or
cmc
mov
pop
leave
mov
stc
imul
in
ret
xchg
outsl
lret
cmp
jecxz
in
outsb
idivl
push
mov
mov
negb
test
mov
jno
cmpsb
sbb
lods
xlat
mov
loopne
mov
or
ss
xor
xor
pusha
adc
outsb
mov
pushf
mov
mov
jae
adc
add
add
loope
cwtl
dec
ret
lahf
stos
shr
xchg
mov
test
loopne
jmp
jb
int
out
mov
or
sbb
mov
test
mov
mov
mov
inc
mov
test
dec
xchg
and
addr16
std
sahf
cmpsl
xorl
fidivs
push
test
stc
mov
clc
or
adc
aas
lea
lcall
push
imul
mov
pop
or
in
jl
mov
ja
cmp
icebp
mov
xchg
mov
xchg
ss
push
xor
pop
mov
test
nop
cs
scas
push
test
int3
pusha
stos
adc
add
mov
mov
orl
std
mov
imulb
rolb
arpl
mov
xchg
sbb
mov
nop
stc
test
aad
add
jp
mov
pushf
cwtl
int3
mov
stc
das
sub
mov
push
incl
sahf
mov
pop
aad
sbb
jae
es
jecxz
xchg
dec
push
repnz
scas
mov
ljmp
mov
adc
xor
lods
pop
popa
mov
sahf
cltd
sbb
stos
addr16
psubusw
ficoms
push
pushf
add
pop
xchg
mov
adc
addr16
mov
or
xchg
dec
add
scas
add
scas
push
push
add
fidivrs
sub
mov
pop
test
lea
mov
push
mov
push
addr16
dec
repnz
mov
mov
sbb
mov
in
mov
sbb
pushf
jno
cltd
push
popa
mov
jg
js
arpl
mov
in
xchg
jecxz
mov
adc
scas
lret
repnz
hlt
inc
mov
nop
movsb
xlat
sbb
dec
push
mov
push
bound
sbb
sub
mov
je
mov
stc
ret
scas
mov
loopne
mov
adc
mov
dec
sub
shrl
pop
fadds
sahf
shrb
or
pop
mov
xor
push
jnp
shl
jmp
cmp
jecxz
mov
pop
hlt
clc
xlat
xchg
outsb
push
addr16
fcoml
pop
das
push
lods
jl
and
and
nop
popa
cli
out
out
xor
add
lock
ret
stos
cwtl
adc
arpl
nop
and
mov
jae
mov
pop
mov
ds
xchg
jp
sbb
out
stos
mov
mov
movsl
pop
push
pop
pusha
ljmp
nop
pop
sub
jmp
jnp
mov
mov
orl
enter
fcompl
mov
xchg
push
jo
cs
adc
cmp
xchg
xorl
push
mov
lods
addr16
dec
dec
push
cmp
xchg
push
fwait
insl
mov
shlb
pop
mov
add
int
incl
adc
mov
cld
fmuls
fisttps
push
hlt
or
icebp
loopne
in
push
jno
jb
adc
sbb
lahf
sbb
rep
mov
mov
push
and
aam
mov
cltd
sub
int
into
sub
mov
or
jmp
addr16
ss
mov
cmpb
shrb
inc
das
test
mov
in
cld
loopne
add
test
sub
dec
enter
mov
fs
ret
ja
lea
gs
push
sbb
mov
push
repnz
or
push
xchg
mov
sub
xlat
mov
cltd
fwait
lcall
jbe
push
rcrl
adc
jno
inc
nop
js
popa
cmp
sbb
adcl
cmc
push
inc
rolb
cmp
ficoms
push
sub
and
adc
lock
mov
cmp
xchg
scas
mov
scas
into
mov
jnp
filds
js
stc
xor
leave
pop
and
mov
test
sbb
repz
mov
xor
dec
in
imulb
mov
push
fwait
jmp
add
pushf
outsl
jecxz
cli
mov
jge
ds
inc
inc
leave
pushf
cmc
jg
or
adc
fsubs
and
mov
popa
cwtl
adc
jno
mov
popa
push
in
cwtl
pop
mov
mov
mov
sti
fldl
into
mov
adc
gs
jnp
jbe
negl
mov
add
xchg
mov
sti
and
mov
movsl
int3
jl
mov
outsl
lods
xor
inc
mov
jb
imul
es
inc
stos
inc
in
lock
pop
aam
mov
out
sbb
and
mov
mov
sbb
inc
dec
mov
addr16
scas
jg
mov
mov
mov
daa
ret
rdtsc
ljmp
fdivrl
loope
cmp
and
js
inc
jns
jne
into
add
in
into
popa
cltd
lea
fsub
fwait
ds
pop
adc
push
cwtl
ficoml
cli
mov
mov
mov
repz
mov
xchg
pushf
dec
in
orb
out
je
xchg
jo
ret
push
pop
dec
mov
repz
mov
xchg
dec
inc
mov
xchg
fsts
and
leave
mov
lar
cwtl
add
mov
loopne
push
mov
jmp
pusha
lods
inc
fwait
mov
lret
pusha
insb
ljmp
shrb
mov
or
dec
dec
rcrl
push
inc
xorb
popa
dec
cmp
idivl
jne
push
add
xchg
std
fsts
dec
jp
mov
and
mov
sbb
mov
mov
cmpsl
cmp
adc
insl
out
pop
cmp
xor
sub
pusha
xchg
icebp
xchg
inc
mov
fisttpl
mov
cmp
pusha
xor
out
in
leave
mov
mov
inc
jns
jbe
lahf
or
into
push
sahf
inc
sbb
pop
andl
in
lea
mov
xchg
xchg
lods
sbb
dec
inc
in
adc
aas
mov
mov
add
addr16
pop
sub
lret
insl
xor
out
push
jge
into
insl
mov
xor
xchg
mov
push
push
rol
mov
movsl
fcmovbe
adc
aam
mov
sbb
mov
es
push
enter
jge
adc
sbb
sbb
xor
add
mov
push
inc
mov
loope
clc
sbb
mov
rolb
outsb
and
insb
repnz
mov
or
jmp
daa
add
adc
sbb
xchg
movsl
push
mov
inc
imul
xor
xchg
mov
daa
mov
ja
xlat
jecxz
mov
and
jmp
mov
dec
hlt
sbb
and
jno
mov
popa
ret
jbe
mov
mov
xchg
loopne
icebp
rcll
dec
nop
pusha
xchg
data16
mov
in
inc
xchg
mov
push
mov
push
test
or
sbb
mov
gs
mov
mov
mov
pop
xlat
mov
in
xchg
pop
mul
les
add
and
sti
dec
call
loope
jns
and
mov
cwtl
les
xchg
sub
push
mov
bound
in
inc
test
jl
adc
push
fiaddl
push
mov
jle
jb
arpl
push
inc
add
and
int
pop
hlt
xchg
fstpl
cmp
imul
mov
lahf
or
add
idivb
pop
mov
sub
test
push
loope
adc
dec
pop
xchg
fcomp
mov
cwtl
push
inc
and
and
sbb
sub
popa
aaa
hlt
xor
or
popf
dec
jg
aam
mov
inc
into
dec
arpl
ret
sub
pop
in
outsb
jno
jle
gs
fldl
testl
and
stos
call
xchg
shlb
pop
sbb
mov
ja
cmpsl
adc
dec
inc
or
mov
leave
icebp
lea
popa
mov
call
mov
mov
dec
xor
pop
fcmovne
jae
push
mov
add
mov
cwtl
int3
inc
jno
xor
aaa
jp
ret
ficoml
xchg
mov
cmp
cmp
xor
test
pop
in
inc
test
jbe
inc
out
lret
mov
xor
lcall
bound
lock
insb
mov
mov
mov
dec
jns
adc
and
daa
sub
xor
insl
stos
adc
and
int
push
cmc
sbbb
xchg
stos
int
or
jo
pop
fwait
jp
inc
sub
sbb
mov
and
ficoml
mov
or
add
bound
mov
sbb
data16
data16
into
scas
dec
je
int3
stc
xchg
rorl
push
push
loop
xchg
test
scas
mov
push
subl
in
lret
push
add
sbbb
cmp
mov
idivl
stos
loopne
push
dec
lahf
test
fsubl
imul
add
xor
test
pop
popa
push
cwtl
push
sarb
imul
mov
icebp
out
xchg
dec
or
sbbb
push
js
push
mov
sub
repnz
xchg
jbe
dec
mov
popf
pop
cmp
sbb
mov
fsts
lahf
jecxz
xchg
or
in
mov
mov
daa
inc
dec
mov
xchg
pop
sub
jg
push
hlt
mov
add
lea
mull
in
fs
cmpb
fdivs
outsl
mov
dec
mov
push
popf
rcrl
repz
and
fsubs
in
mov
in
push
repnz
cmpsl
xchg
andb
test
in
mov
es
push
and
sub
clc
jle
mov
mov
fbld
movsl
xlat
mov
mov
cmpsl
or
xchg
orb
mov
sub
cmpsb
pusha
push
out
mov
push
cs
push
and
arpl
inc
cmc
andl
jmp
mov
jmp
cmp
inc
dec
mov
and
jge
jns
xor
loope
pop
loopne
push
fidivs
repnz
mov
imul
xchg
movsl
xchg
lods
add
xchg
xchg
ret
mov
push
imul
and
mov
mov
mov
xchg
cmp
aaa
loopne
ds
fcoms
popf
int
push
rcll
sbb
jge
out
mov
dec
sub
xor
jno
jg
and
nop
jmp
cmp
incb
dec
mov
jmp
xchg
les
lret
sub
fs
insl
dec
addl
mov
inc
dec
sub
push
test
xchg
add
jecxz
xchg
insl
mov
add
test
lret
mov
sahf
mov
scas
dec
and
xchg
mov
mov
rcrl
or
dec
out
pop
jg
mov
adc
cmp
mov
scas
adcl
push
and
dec
loope
mov
dec
pop
jns
mov
mov
and
cmp
ja
lods
stos
pop
imul
pusha
fs
fdivr
arpl
mov
sahf
test
dec
pusha
inc
enter
mov
cmp
add
mov
pop
pop
cmp
push
loopne
mov
dec
fistl
lods
das
and
andb
mov
cs
rcrb
xchg
lods
mov
js
je
ficoml
popf
andl
xor
cld
dec
nop
fsub
in
mov
pop
sub
std
push
push
or
sbb
popa
loope
mov
push
cld
hlt
mov
mov
mov
and
cwtl
int
repz
lods
int3
stos
addr16
cmp
std
lods
cs
orb
and
int3
sub
cltd
call
test
imul
subl
adc
std
out
and
jae
sub
mov
das
imul
pop
cwtl
ja
fs
cmpsb
cmp
incl
mov
loop
add
lods
ds
xorb
mov
and
daa
jp
pop
inc
xchg
sbb
push
or
add
or
js
inc
cmpsb
cwtl
mov
and
aas
inc
leave
push
pop
xchg
xchg
stos
fisubs
cwtl
iret
push
mov
cmpsb
xlat
mov
pop
xchg
shlb
jp
xor
dec
sbb
mov
mov
push
mov
out
ret
loopne
int
imulb
or
inc
mov
xor
lods
mov
pushf
les
mov
out
sub
mov
les
subb
outsb
loopne
jnp
add
mov
cs
inc
inc
enter
sti
cltd
popl
jmp
inc
adc
mov
xor
xchg
adc
jno
jb
out
xor
cmp
add
and
filds
mov
fucompp
insl
les
jp
icebp
xchg
cmp
mov
pop
ficompl
das
mov
mov
int
xchg
jmp
or
addr16
jg
cld
outsb
gs
or
lahf
xchg
mov
dec
in
adc
cmc
inc
mov
aam
insb
out
shlb
test
xor
sbb
mov
fwait
loop
inc
mov
jbe
aam
fsubl
dec
mov
jb
hlt
cmpsb
fsave
cwtl
xchg
enter
arpl
popf
clc
sahf
jle
jne
sub
pop
inc
mov
mov
push
inc
or
in
jne
push
push
mov
and
loopne
dec
sbb
push
rcr
xchg
pop
inc
mov
ja
adc
mov
stos
dec
jp
push
es
sub
dec
loopne
lods
jbe
xchg
mov
mov
iret
addr16
stos
scas
xchg
imul
or
jecxz
sub
ds
cltd
jns
popf
push
mov
adc
xor
xchg
mov
jl
adc
stos
mov
stos
clc
sub
mov
fiadds
test
sbb
and
mov
jbe
pop
sub
jg
test
das
add
push
inc
sahf
xor
dec
fisttps
idivl
mov
fnstsw
scas
scas
fsubrl
jo
jno
mov
cli
movsl
addr16
gs
jl
sbb
mov
lahf
outsl
mov
sarb
ret
leave
out
mov
bswap
mov
orb
xor
mov
add
insb
mov
jmp
sar
mov
push
shll
ftst
ss
mov
mov
xor
in
jne
nop
cwtl
cs
lods
dec
jle
xchg
outsb
xor
or
out
add
loop
mov
insl
xchg
mov
push
das
lret
xchg
mov
aad
sti
sbb
mov
inc
dec
loopne
mov
insl
jecxz
xchg
mov
in
out
mov
mov
xchg
cwtl
popa
sub
es
test
ret
repz
mov
lods
outsl
sub
mov
ret
push
mov
and
lahf
mov
xchg
fldpi
and
aad
test
outsb
movsl
push
xor
out
lock
lods
xchg
and
jmp
or
lods
adc
rolb
stc
loopne
jle
mov
mov
inc
dec
mov
add
mov
push
jge
push
stos
lds
loop
jae
jno
jg
loope
ds
push
out
and
push
sahf
xor
add
push
fwait
mov
inc
lds
and
and
pop
mov
inc
or
jmp
into
cmp
daa
and
inc
cld
mov
push
mov
movsl
es
iret
ja
lds
pop
add
push
js
sbb
mov
pop
and
and
mov
jno
sbb
cmpsl
push
lds
out
add
rclb
or
cld
xchg
fwait
mov
mov
outsb
inc
in
into
xor
mov
repnz
lahf
mov
lret
add
adc
pop
cmp
jb
shll
xchg
icebp
mov
xchg
mov
sbb
test
stos
popf
push
nop
or
ret
mov
in
mov
pop
fstpl
pop
xchg
insl
inc
inc
bound
pop
cmp
add
loopne
cltd
lods
sub
jne
mov
pop
les
dec
add
mov
aam
js
insl
sbb
cmp
mov
mov
mov
adc
mov
stc
push
mov
lock
andb
in
sahf
sahf
pop
mov
loope
sbb
jg
lds
xchg
addr16
xor
aad
xlat
addb
imul
leave
xlat
mov
mov
insb
js
shrl
add
add
lds
dec
sub
and
and
push
popa
xor
test
push
cli
rol
mov
rcll
int3
push
xchg
hlt
xor
mov
popa
pushf
popf
nop
cmp
pop
std
ja
jle
mov
mov
cmp
mov
in
pusha
inc
clc
adc
cmp
jno
push
fidivrs
cmp
pushf
pop
pop
or
xlat
scas
rol
sub
int3
adc
mov
mov
fld
or
loopne
icebp
inc
aam
jno
push
xchg
daa
jb
mov
push
dec
adc
mov
sub
andl
jmp
push
scas
pop
sarb
mov
aaa
fs
mov
clc
and
and
mov
xor
mov
stos
mov
jp
fstl
adc
sahf
out
jmp
jl
cmp
xlat
mov
push
mov
sbb
push
mov
mov
outsl
shrb
scas
orl
mov
mov
mov
cmc
add
mov
aaa
jo
enter
int3
jmp
mov
test
mov
mov
pop
adc
and
jne
or
xchg
dec
mov
dec
fmulp
sbb
push
lahf
inc
mov
and
popa
or
popa
cli
cwtl
dec
pop
jl
push
mov
lret
or
jle
jl
cli
xor
pop
xchg
aas
mov
mov
icebp
pop
mov
mov
jle
dec
and
mov
std
cwtl
movsl
push
and
adc
repnz
mov
sbb
imul
lcall
push
dec
test
mov
je
pop
xlat
cld
nop
in
idivb
sbb
icebp
cmpsb
pop
push
mov
xchg
and
jo
mov
hlt
add
dec
divb
sarb
dec
lahf
mov
jae
pushf
cltd
out
pop
add
ret
xchg
push
out
pop
js
adc
push
mov
inc
and
jmp
sub
call
mov
stc
rolb
popa
dec
int3
lock
jne
add
and
adc
pop
xor
adc
cli
loop
aaa
test
mov
cld
ja
cmp
mov
lods
mov
mov
ss
add
mov
dec
sbb
or
ficompl
js,pn
push
dec
out
sbb
addb
aaa
loopne
or
jle
add
mov
sbb
sbb
jge
mov
add
dec
hlt
je
mov
jl
ret
push
mov
or
inc
jae
loope
sbb
fst
mov
int
push
mov
into
pop
jo
fldenv
dec
or
add
fwait
notb
les
inc
fildll
mov
pop
loopne
das
xchg
push
cwtl
arpl
cmp
out
outsl
dec
repz
push
cwtl
dec
in
addb
sbb
sbb
jbe
jge
fabs
push
xchg
in
les
mov
repz
cmp
sub
scas
frstor
inc
xchg
mov
mov
or
or
stos
mov
fdivl
icebp
mov
test
sub
fstps
or
test
ret
jle
rorl
and
jmp
ss
push
push
movsb
adc
mov
dec
ret
insb
popa
pusha
xor
jno
mov
lea
jp
cmpb
data16
inc
push
push
leave
mov
add
mov
mov
cld
cmc
jecxz
insl
les
mov
pop
mov
dec
xchg
inc
inc
adc
jo
mov
mov
or
cmova
jno
xchg
xchg
cmc
push
add
dec
or
jmp
inc
call
int3
push
mov
lahf
lret
out
leave
insb
subb
push
outsb
adc
adcb
int
pop
sbb
sbb
popa
dec
or
xchg
orb
adc
jno
js
jecxz
mov
dec
push
cmp
fisttpll
adc
jmp
iret
pop
icebp
inc
nop
inc
clc
add
add
jne
mov
mov
ss
popl
pushf
jecxz
cmp
adcl
and
testl
mov
jae
mov
loope
shlb
int3
insl
cli
ljmp
fcmovnu
mov
arpl
enter
lret
jge
cmp
cmp
or
jns
les
push
repz
addr16
lods
inc
scas
cmp
jge
xchg
dec
int
mov
push
das
mov
push
jo
xchg
out
subl
repz
sti
mov
push
lret
dec
mov
fsubrs
adc
sbb
sarl
mov
jae
jbe
mov
or
add
xchg
xor
mov
jp
dec
mov
inc
pushf
dec
jg
fnstsw
xor
and
fisubs
xchg
cwtl
inc
cli
mov
cmp
jg
bound
push
or
xchg
test
xor
dec
mov
std
fs
fucomi
mov
cld
push
add
adc
xchg
dec
mov
inc
jl
push
mov
arpl
fcoms
out
mov
sti
sbb
nop
add
sar
imul
xor
add
pop
add
ret
ret
and
xchg
push
sbb
dec
pop
or
pusha
repz
aas
out
sbb
mov
in
int
xchg
addr16
add
and
push
sbb
dec
fdivrl
or
mov
movsl
and
jno
orb
mov
mov
jle
add
mov
inc
jae
lea
imul
push
cmp
mov
xchg
popa
ljmp
mov
mov
es
mov
push
push
mov
adc
mov
cmp
stos
cs
mov
sub
fwait
out
scas
push
aad
mov
dec
push
int3
in
xchg
lds
and
popf
and
repz
mov
ret
sbb
mov
loope
push
cmc
loopne
movsb
or
dec
iret
xchg
mov
sub
dec
mov
jbe
sahf
mov
ret
addb
mov
js
xor
cmpsl
jbe
cmp
add
push
jns
aas
jb
ja
rcrb
popf
lods
insl
inc
je
rcll
sar
cmpsw
dec
mov
out
pop
ja
pusha
adc
adc
leave
cmpb
and
push
xor
out
out
iret
loop
ds
rcr
sbb
xchg
mov
inc
mov
addr16
fcoml
int
cmp
lret
rorb
xchg
cmpsb
inc
cmpsl
sub
popf
std
stc
popf
cmpb
out
ss
addb
add
xor
cwtl
repnz
push
subl
xchg
push
js
clc
jmp
lret
std
mov
popf
cli
loopne
dec
imul
cmp
ljmp
mov
fcmovu
adc
flds
dec
fistps
scas
data16
push
and
inc
out
imul
mov
jne
popa
xor
and
sbb
cltd
ds
mov
ljmp
mov
dec
enter
das
cmp
ficompl
movsl
fs
jno
xchg
jg
mov
or
jnp
pop
xor
or
xchg
mov
pop
sbb
lahf
adc
sub
jo
sbb
cwtl
stc
fisubs
pop
pop
mov
mov
jecxz
push
jle
sub
mov
sar
jns
add
mov
mov
mov
lods
ret
and
and
addr16
dec
or
aaa
lcall
imul
cli
insl
push
outsl
xorb
push
xor
sbb
in
rcrl
dec
jae
cmpl
fs
jmp
jge
pop
sub
mov
jp
mov
or
sahf
push
jle
cmp
mov
ljmp
inc
push
icebp
add
cmc
sub
ret
std
popa
cs
jmp
sub
mov
mov
or
cmp
pusha
jbe
mull
dec
xchg
or
mov
xchg
mov
hlt
add
cmp
std
mov
adc
rclb
pop
xchg
cmp
inc
adc
sbb
nop
imul
popa
clc
cwtl
xor
dec
dec
mov
hlt
jno
shlb
mov
loop
pop
cld
cwtl
repz
hlt
xchg
jbe
cltd
jge
outsl
int
popf
jl
jg
stc
popf
dec
jae
das
popa
cmp
test
ret
scas
sbb
test
sub
pop
rolb
and
dec
dec
sbb
rorb
xchg
adc
push
sbb
pop
imulb
or
adc
cmc
pop
shll
pop
pop
mov
xchg
xchg
mov
mov
getsec
inc
and
mov
cmp
lods
mov
test
jmp
mov
mov
or
cli
mov
mov
enter
add
cltd
leave
bound
stos
jle
sbbb
jp
popa
fidivrs
dec
mov
add
add
push
or
repz
repnz
jecxz
ret
sti
fldl
test
and
mov
and
std
outsb
sbb
repz
inc
xlat
gs
lock
push
sub
mov
jno
mov
jecxz
dec
dec
mov
sarl
sub
mov
int3
mov
jp
push
mov
pop
mov
sbb
aaa
sub
sub
jne
fldt
lret
mov
pop
sti
cmpsb
addr16
cltd
adc
mov
dec
sbb
mov
repz
out
jge
lcall
cs
cmp
pop
xchg
mov
fucomp
testl
jl
adc
cmp
jmp
leave
loopne
lea
icebp
out
mov
mov
inc
stc
mov
loop
mov
loop
psrld
loopne
xchg
dec
hlt
sbb
inc
mov
jl
shll
ds
or
out
sub
sbb
sub
or
std
xchg
pop
mov
test
lret
hlt
cmp
dec
mov
mov
push
imul
outsb
xlat
aam
pop
cmpxchg
in
jne
inc
shlb
mov
sti
sbb
mov
andb
popa
vunpcklps
stos
dec
mov
mov
mov
outsb
inc
adc
mov
mov
add
aad
out
sti
mov
ret
pusha
adcb
iret
inc
inc
mov
xchg
fisttpl
mov
fimull
xchg
xchg
inc
and
stc
sbb
aad
aam
aaa
xor
cmpsl
sbb
pushf
int
ficoms
cmp
pop
mov
lahf
in
xchg
cltd
add
movsb
je
mov
jne
mov
inc
xchg
and
ja
add
mov
and
mov
clc
mov
jo
jl
insl
repz
jge
mov
and
inc
and
push
insb
in
ret
pop
in
mov
cmp
hlt
push
lret
jno
arpl
ror
leave
mov
lods
and
aas
ss
lock
mov
call
shlb
aad
leave
pop
jbe,pn
sbbb
xlat
and
xor
lods
xchg
outsb
adc
fwait
inc
inc
sahf
cmpb
movsb
fdivrp
sbb
lahf
or
mov
push
into
mov
jge
adc
sub
daa
out
arpl
xor
push
or
xchg
int
or
lret
lea
cmpsl
sbb
mov
mov
pop
fdivrp
pop
mov
dec
cmc
mov
cmova
arpl
mov
push
or
inc
sbb
mov
push
imul
jne
cmpsb
test
out
loope
icebp
and
cld
cmp
inc
cmp
imul
mov
mov
mov
enter
mov
pop
leave
mov
mov
cli
out
jbe
fsubl
or
mov
je
push
adc
lods
data16
mov
clc
out
icebp
jle
or
pop
in
hlt
sti
and
sub
pushf
push
lret
mov
sub
mov
mov
pop
push
mov
dec
inc
jmp
jge
cs
mov
inc
xor
sub
push
sub
and
sub
add
xchg
push
or
fidivl
add
subb
dec
mov
xchg
and
cmp
sbb
cmp
lret
fs
mov
mov
into
dec
xchg
lods
mov
sbb
add
mov
mov
shrl
shll
or
popf
mov
mov
dec
sub
mov
fbld
xchg
and
decl
sub
pop
cmp
mov
lds
out
popf
lret
mov
sbb
push
dec
dec
pop
mov
test
imul
gs
dec
mov
ja
loopne
cmp
xchg
sbb
leave
jp
and
mov
mov
sbb
dec
and
hlt
mov
call
mov
cmp
loope
xlat
xchg
dec
mov
or
hlt
push
das
test
pop
and
jno
clc
or
rcrl
jae
mov
iret
das
mov
mov
push
adc
inc
adc
into
inc
jmp
pop
mov
add
cld
faddl
outsb
mov
inc
dec
mov
sbb
mov
lods
into
nop
nop
fs
pushf
lods
inc
dec
je
push
sbb
aad
incl
jmp
leave
arpl
nop
leave
scas
mov
lds
and
fsub
jecxz
scas
mov
js
data16
addr16
xor
fdivl
fcmovne
mov
test
mov
or
shll
fwait
gs
out
nop
adc
or
xchg
loopne
sub
or
fisttps
dec
out
pop
and
mov
xchg
rcrb
dec
xchg
lea
mov
cld
int
adc
add
adc
ss
mov
test
sti
push
xchg
fstpl
cli
mov
loope
push
outsb
mov
out
push
test
sbb
mov
imul
mov
and
push
imul
sbb
repnz
lods
test
xchg
inc
cmp
sbb
and
cmc
sub
xor
scas
flds
mov
jmp
ss
inc
xlat
push
mov
loope
mov
xchg
mov
and
scas
xchg
lret
hlt
mov
dec
dec
mov
addb
xor
mov
fcoms
pusha
rcrb
aaa
test
mov
lahf
repnz
inc
or
adc
pop
lds
popa
xchg
lret
jbe
mov
fisubs
mov
mov
hlt
jg
nop
sahf
xor
sahf
loope
test
adcb
mov
mov
sub
in
pusha
cs
sarl
cwtl
mov
xor
orb
cmp
inc
sub
mov
sbb
mov
jb
xor
inc
daa
mov
adc
mov
mov
insl
xchg
mov
push
inc
jne
push
aam
imul
and
and
sbb
flds
daa
ds
sbbb
lret
and
daa
scas
cltd
sub
or
push
iret
test
or
ds
jne
push
push
dec
sbb
cmc
pop
dec
push
rclb
fldt
cs
mov
fnstsw
inc
push
daa
repz
push
push
or
jecxz
in
data16
sub
jl
sahf
popf
shll
pop
bound
mov
mov
lahf
out
mov
pop
lds
insl
loopne
push
cmpsb
pop
sub
sbb
aad
sbbb
jg
sbb
loopne,pt
xchg
cmp
push
sbb
mov
mov
dec
or
dec
cmp
cmp
inc
or
xchg
bnd
pop
jnp
iret
mov
push
push
push
adc
sbb
adc
cltd
push
test
mov
lcall
and
xor
lea
mov
add
lahf
jb
mov
ret
loopne
inc
dec
push
push
lahf
cmp
and
roll
xchg
adc
or
pop
sbb
xlat
mov
xor
mov
in
dec
xchg
ret
cmpsl
jae
nop
mov
push
subb
iret
sti
nop
por
lock
lea
mov
cmp
push
js
mov
out
mov
adc
loop
roll
jo
mov
fdivrs
call
dec
pushf
push
pop
mov
push
repz
add
out
adc
pop
mov
mov
jb
test
mov
xchg
and
sbb
push
or
leave
pop
and
cmp
lods
xor
push
in
pop
ret
int
mov
mov
jae
jb
loope
in
and
push
orb
pinsrw
insl
sub
dec
inc
out
dec
xchg
mov
notb
in
jns
lods
bound
push
dec
push
mov
xor
mov
ret
aad
pusha
sub
out
stos
pushf
rcll
cmp
lods
inc
fisubs
mov
mov
or
jbe
push
dec
mov
mov
mov
add
add
mov
jae
int
dec
ds
arpl
adc
jns
mov
cmp
push
and
addr16
or
jle
sub
arpl
mov
mov
or
setnp
xor
mov
pop
lea
iret
addr16
ret
test
push
int
popa
imul
lods
mov
pop
aam
add
mov
arpl
rcll
mov
mov
jne
loopne
lea
gs
lods
xchg
mov
add
xor
and
outsb
xchg
jb
mov
stc
mov
mov
mov
and
enter
dec
je
pop
ja
sub
sub
sub
mov
push
fisubrs
pop
mov
xchg
push
and
imul
sti
or
and
cltd
cltd
push
stos
xchg
xchg
ret
addr16
out
bound
dec
push
stc
inc
mov
push
pop
push
arpl
iret
pop
lock
push
loopnew
xlat
mov
nop
loop
popa
sub
adc
fwait
dec
jl
lahf
sbb
push
test
add
dec
push
test
xchg
aas
push
nop
mov
out
lea
sub
mull
sub
xchg
inc
push
pushf
aad
loop
push
xor
mov
lcall
out
fldl
inc
in
jno
ss
pop
mov
sbb
or
xlat
std
mov
dec
ss
mov
inc
push
xchg
mov
popa
adc
jo
inc
dec
xchg
mov
into
mov
pandn
add
out
and
mov
push
or
and
sarb
repz
mov
jle
pmullw
xlat
lds
shrb
dec
push
repnz
push
pop
nop
add
outsb
ds
inc
pop
inc
mov
jnp
pop
cmpb
mov
mov
dec
jmp
mov
add
adc
dec
jl
ja
mov
xchg
shrl
inc
and
sbb
or
iret
xchg
inc
fdivs
cld
sbb
testb
and
cwtl
cmpsl
inc
stc
scas
adc
xchg
sbb
xchg
faddl
mov
pop
push
fs
loopne
adc
sbb
addr16
sbb
mov
out
ret
add
icebp
iret
and
adc
xchg
addb
mov
add
xchg
outsb
inc
bound
fcomps
mov
sahf
dec
pop
mov
lds
out
aam
inc
mov
sub
mov
jmp
xchg
lcall
xor
stos
lret
in
nop
leave
test
mov
push
push
add
mov
movsl
push
xor
arpl
pop
dec
gs
mov
push
or
lret
dec
push
mov
stos
sti
push
push
mov
xorb
cs
loopne
push
rcr
std
push
sbb
ljmp
rcll
mov
int3
mov
fsubl
lret
pop
loopne
push
lea
test
sbb
popf
jp
jg
or
inc
sub
addr16
cmp
xchg
xchg
jmp
repz
clc
js
loop
push
loope
inc
test
add
xchg
xchg
movl
mov
clc
sub
add
push
test
lds
mov
stos
inc
jl
popf
sbb
xor
pop
popa
dec
je
mov
adcb
test
jecxz
add
xchg
sub
shll
dec
daa
push
loopne
xchg
popf
jle
inc
mov
pop
addr16
je
addb
xor
aaa
cmp
cmp
inc
mov
je
push
xchg
xlat
mov
ret
xor
aaa
add
mov
in
pop
jmp
cmpsb
ss
mov
sarl
mov
cmp
and
sbb
or
mov
or
mov
inc
xchg
test
out
push
jns
test
mov
mov
cld
fistl
popa
inc
iret
jle
andb
out
sub
mov
mov
adc
out
cmp
loope
sbb
mov
sbb
pusha
mov
adc
dec
and
outsb
mov
aaa
sbb
and
mov
test
and
cwtl
jle
mov
int3
mov
jo
dec
in
mov
lods
aad
inc
hlt
cmp
lahf
add
popa
je
inc
lret
movsb
cld
nop
add
mov
push
sub
jecxz
outsb
fmuls
sub
fwait
cld
loop
mov
out
dec
movsb
sub
mov
push
pop
out
mov
inc
push
sti
fldcw
shll
jecxz
xor
inc
leave
lock
xchg
sub
jle
xchg
repnz
xchg
mov
push
cltd
mov
shlb
and
mov
xchg
mov
dec
or
and
arpl
adc
mov
jne
mov
sahf
cmpsb
mulb
inc
cmc
sub
mov
pop
xchg
orb
movsl
xchg
mov
and
adcl
cvtps2pi
es
pop
dec
add
dec
popa
test
stos
lcall
mov
aam
mov
and
add
popf
nop
jmp
inc
test
and
push
mov
sahf
adc
jle
lcall
xorb
nop
shll
mov
mov
shrl
lret
mov
mov
in
jnp
popa
leave
add
dec
roll
cmc
movsl
inc
dec
dec
mov
lahf
outsl
mov
and
ja
adc
into
movl
jae
test
push
dec
into
push
addr16
movsb
mov
mov
push
mov
sti
arpl
scas
sub
mov
sbb
and
jp
int
push
sub
push
cmpb
leave
shl
mov
pushf
mov
mov
inc
fwait
jl
adc
and
insl
inc
pop
mov
in
es
stc
lcall
pushf
adcb
mov
shrl
popf
dec
add
cmp
jg
aaa
add
rolb
test
mov
in
jbe
mov
inc
out
jno
out
pop
xchg
jmp
jmp
divl
or
push
pushf
pop
cmp
enter
add
pushf
das
add
mov
test
lret
jae
sbb
jmp
outsb
lahf
push
popa
mov
adc
mov
add
pop
jae
mov
push
xor
sar
and
inc
insl
jno
inc
gs
xchg
cwtl
xchg
jae
out
add
sub
in
jb
in
loop
mov
lret
pop
xchg
jbe
popf
aad
mov
xchg
mov
pop
sbb
sahf
rcr
in
push
jo
out
add
sbb
xor
lea
cmpsl
xor
adc
nop
sbb
fildl
inc
inc
mov
push
xchg
or
and
scas
inc
sti
je
sbb
fmull
inc
mov
adc
add
addb
pop
imul
xor
mov
xor
test
push
mov
mov
push
gs
mov
jne
xor
mov
pop
shlb
loopne
imul
cmp
fnstsw
xchg
jns,pt
sbb
sbb
lds
lcall
mov
gs
clc
ds
jbe
popa
lea
mov
mov
jle
xchg
xor
jp
cltd
jbe
scas
cmp
jnp
sub
jl
sbbb
call
pushf
xor
mov
cli
add
jns
loop
push
pop
shll
mov
test
scas
inc
addb
and
mov
jbe
mov
mov
dec
dec
push
not
loop
jne
stos
loopne
adcl
lea
rcll
ret
lret
out
lea
add
push
movsl
movsb
outsl
icebp
dec
ds
cmpsl
scas
fnstenv
xchg
adc
loopne
pause
cmp
sahf
rcrb
lock
add
mov
andb
push
mov
pop
add
xchg
cmp
dec
pusha
push
in
mov
mov
dec
push
aam
sub
mov
sarb
addr16
pop
jg
sti
out
jg
ds
icebp
mov
or
mov
jns
dec
nop
repnz
negl
shll
incl
mov
xchg
adc
loopne
push
push
or
push
rcll
dec
pop
lret
cli
jmp
adc
or
inc
add
sbb
int
ds
mov
ja
and
mov
test
mov
pop
mov
dec
inc
popa
data16
cwtl
and
adc
pop
pop
jae
mov
jns
int3
add
ret
or
aam
and
xchg
leave
psrld
ret
sbbb
cmp
mov
ja
shll
sbb
sub
sarb
mov
aaa
xor
sbb
add
xorb
inc
cmpsl
or
pushf
stos
outsb
xorb
pusha
adc
mov
sub
es
pop
mov
scas
mov
testb
addr16
insb
jecxz
addr16
gs
jb
mov
mov
sbb
dec
adc
push
dec
bound
push
andb
popf
push
sub
lods
jbe
push
nop
sub
adc
push
mov
or
mov
inc
fildl
cs
inc
mov
xchg
mov
ds
dec
mov
scas
lea
popa
out
idivl
lret
adc
sub
and
jns
lock
cmpb
mov
enter
popa
inc
mov
mov
movsl
push
mov
or
mov
pop
mov
inc
and
push
nop
je
pusha
cmpsb
fs
xor
and
repz
mov
frstor
sti
sub
mov
mov
nop
mov
or
pop
jmp
loope
sub
dec
movsb
jg
mov
pusha
mull
pushf
pop
or
js
cmpb
jns
jne
fbld
push
jle
mov
add
scas
mov
push
loop
adc
push
dec
xor
ficoms
mov
sbb
mov
mov
xchg
pop
and
cltd
aad
mov
xchg
push
sbb
mov
stc
xlat
fisttpll
dec
mov
xchg
ljmp
or
and
in
insl
test
mov
mov
aad
jbe
dec
inc
mov
sub
jo
loope
fwait
sbb
fbstp
mov
xchg
je
mov
cmp
mov
movsb
loop
subl
aad
jp
bound
lea
imul
mov
call
add
imul
cmp
pop
or
jae
mov
xchg
lcall
loop
stc
arpl
cwtl
dec
add
and
mov
les
test
into
enter
lea
bound
stc
push
add
sub
add
popl
jno
mov
mov
pop
mov
inc
aad
roll
into
stc
fidivs
and
sbbb
or
cmpsb
jmp
cmp
push
pop
mov
or
mov
pop
sbb
cmc
in
loopne
or
das
dec
xchg
adc
mov
shl
loope
scas
add
orl
ret
mov
rolb
mov
pop
popw
mov
repz
sub
dec
mov
push
xchg
call
mov
mov
stos
test
stc
mov
not
and
mov
and
mov
dec
jnp
cmp
icebp
add
clc
pushl
mov
push
mov
mov
sub
enter
adc
ds
nop
dec
repz
sub
dec
cmp
nop
fld
ret
das
ss
addr16
out
sub
in
sbb
mov
mov
mov
shll
cmpsb
push
adc
movsb
mov
mov
pop
je
mov
cmpsl
lahf
and
jl
and
mov
pop
inc
sbb
pop
push
dec
add
js
push
inc
jb
outsb
adc
test
or
jns
cmc
lcall
pop
adc
adc
jmp
test
inc
xchg
mov
mov
cli
mov
xchg
fsts
mov
sub
das
push
add
jae
enter
loopne
inc
les
cmp
mov
mov
xchg
aad
sbb
sti
adc
lret
and
inc
jmp
fistl
popf
sahf
loope
push
and
aas
push
inc
shrb
enter
mov
gs
lods
mov
ja
nop
sbb
stc
push
mov
xchg
lea
lcall
and
mov
repnz
jnp
mov
pop
push
pop
sbb
push
int
dec
testb
xorb
mov
in
jo
pusha
mov
in
cwtl
sub
outsb
lods
inc
add
out
notb
call
or
lret
sbb
jbe
xchg
jecxz
shll
hlt
iret
mov
lds
ds
mov
pop
pop
and
rorl
aas
fs
and
mov
push
sbb
push
std
notl
sub
enter
loope
sbb
gs
or
insl
add
jnp
into
popf
int3
loopne
mov
push
xchg
cltd
sbb
lods
fcomi
xchg
mov
repnz
fwait
adc
xchg
lret
loopne
push
out
jmp
cmp
mov
scas
mov
mov
je
iret
push
ror
leave
andb
lret
fisttpll
sti
out
mov
mov
pusha
or
sbbb
and
mov
jg
fscale
pop
mov
sbb
cwtl
mov
or
xchg
mov
mov
push
stos
fbld
mov
test
mov
cmp
pop
inc
addr16
ficoml
xor
repz
or
push
loop
leave
rorl
mov
js
sbb
cs
enter
mov
jmp
mov
pop
add
aam
dec
jae
mov
out
int
pop
xchg
lcall
cmp
test
cli
mov
cmp
scas
cmp
mov
mov
psubsw
add
mov
insl
xor
add
imul
push
xchg
arpl
cwtl
outsb
xchg
push
andb
push
testl
in
ja
jb
jge
sub
push
xor
in
mov
jl
pop
mov
mov
sub
jbe
incl
or
test
leave
lahf
mov
dec
cmp
cmp
mov
or
popf
fldenv
sbb
out
xchg
add
or
loope
xchg
shll
or
lret
aaa
mov
jp
mov
int
mov
push
adc
sub
or
add
mov
mov
fucomip
test
pop
mov
lods
pop
dec
inc
mov
ret
pop
pop
es
cltd
jmp
jle
shlb
cmp
sti
fdivr
js
or
mov
mov
into
xchg
les
daa
je
adc
loop
scas
mulb
arpl
fnstsw
ror
mov
xor
mov
fwait
ret
clc
andl
mov
dec
ret
mov
jbe
sbb
mov
leave
popf
outsl
pusha
jg,pt
jae
and
mov
mov
adc
das
fstpl
or
sub
fstps
ret
stos
sbb
pop
out
arpl
clc
mov
cvtps2pd
dec
cmp
es
and
xchg
out
leave
ljmp
insb
cmp
mov
jbe
std
xchg
jmp
mov
mov
loopne
mov
mov
dec
xchg
dec
dec
add
cmpsl
mov
call
shlb
mov
movsl
adc
fabs
roll
mov
mov
fsts
lahf
push
cmp
xchg
lret
mov
and
in
jmp
out
jl
shrl
mov
pop
mov
out
adc
loopne
push
arpl
xchg
ss
lret
jne
push
das
mov
fs
adc
cmp
out
cltd
xlat
jl
in
lret
imul
addb
shrb
or
push
sbb
or
or
mov
mov
dec
adc
js
fcompl
or
add
pop
add
mov
shrl
sbb
fmuls
insb
push
in
cmc
mov
add
lods
mov
jne
popa
popa
jl
push
xor
into
pop
cltd
mov
push
cld
mov
das
add
jp
fsub
add
inc
lods
imul
sbb
fcmovnb
testb
jae
pop
xchg
pop
aaa
aad
dec
mov
xchg
shl
mov
sbb
test
in
movsl
mov
sbb
shl
mov
dec
and
mov
inc
inc
push
idivb
mov
out
scas
faddl
sbb
jge
xor
js
add
inc
mov
cmc
mov
test
int
out
mov
out
icebp
dec
push
enter
mov
les
sub
out
sub
lods
imul
mov
mov
cltd
xchg
nop
cmp
ja
aam
pusha
lods
mov
sub
xchg
cmp
mov
data16
mov
cmp
icebp
push
lea
and
cmc
cmpsl
jle
stc
sub
lahf
jl
repz
xor
lods
setb
mov
test
orps
cmp
dec
xchg
cld
icebp
sti
adc
shlb
sub
andb
emms
inc
mov
in
dec
mov
pop
mov
lea
sub
pusha
loopne
mov
nop
lods
xlat
lea
ds
jl
mov
jae
push
pop
nop
xchg
stos
lcall
push
add
cpuid
push
ficoms
out
jne
es
lret
sti
call
imul
push
lods
fs
pop
cmp
int
push
jae
mov
inc
daa
mov
push
sub
add
sub
ja
add
adc
cmp
stc
mov
mov
imul
cmpsb
mov
cmp
xor
pusha
cmp
sahf
pop
popf
inc
sub
jg
subb
icebp
nop
ret
addr16
cmp
jl
shl
mov
popa
addr16
popf
lock
stos
lcall
pop
or
or
mov
loopne
sub
sbb
jno
mov
into
mov
push
cld
adc
dec
in
sbb
lods
mov
mov
push
cmp
mov
pop
sub
and
and
or
mov
out
and
cmp
mov
mov
icebp
popf
dec
das
and
int
rolb
repz
cltd
push
mov
mov
jnp
inc
cmp
inc
repnz
pop
subb
push
and
mov
add
inc
fldenv
mov
dec
pop
mov
adc
mov
imul
sbb
aaa
data16
lret
enter
pop
jne
ja
cmp
jle
sbb
mov
in
mov
xlat
scas
add
and
bound
jp
push
push
ss
cmp
lds
cmc
inc
daa
cmp
jbe
add
adc
in
ffree
inc
lret
jg
sub
push
or
arpl
aam
loop
cmp
mov
adc
jb
sub
mov
cmpsl
xchg
mov
add
idiv
add
aad
cs
popa
or
sub
or
das
mov
push
adc
mov
mov
scas
les
mov
mov
cmpsb
sub
loopne
shr
jbe
inc
jnp
sub
sbb
push
lret
shl
fwait
iret
adc
stc
or
out
cmc
int3
ror
inc
movsl
fisubs
mov
sar
pop
fdivr
and
push
pop
test
cmp
mov
push
xchg
sub
push
pusha
mov
mov
fcoml
jle
out
mov
xor
mov
mov
pop
jmp
dec
shll
pop
es
mov
subl
fsincos
mov
or
jle
cmp
mov
leave
test
and
test
mov
and
mov
push
pushf
mov
sbb
lcall
jb
andb
dec
pusha
repz
jle
mov
flds
rclb
xor
cmpsb
sahf
mov
movsl
xchg
xor
leave
and
xchg
sub
push
xor
mov
xchg
js
push
popa
xor
dec
mov
test
mov
push
lock
fidivs
ja
addr16
jbe
jae
xchg
mov
jmp
add
mov
mov
fldcw
mov
nop
cmp
mov
push
sbbb
outsb
aaa
adc
xor
lods
mov
xchg
mov
fisttpl
jae
mov
mov
cs
fbld
lds
cmc
dec
sbbb
mov
sbb
mov
ljmp
scas
jge
frstor
cmp
pop
fnstenv
cmp
test
xchg
lods
pushf
xor
out
test
xlat
inc
pop
dec
mov
fwait
cld
rcrl
gs
mov
or
or
pop
lret
cmp
or
mov
push
orb
mov
in
jne
push
and
fwait
sbb
jbe
mull
mov
in
popa
shll
sub
out
or
xorb
cmp
fbstp
out
enter
mov
xor
js
imul
rcrb
sbb
fstps
aam
mov
imul
je
rol
or
lods
xor
mov
jecxz
movsb
ljmp
aaa
fstpt
mov
and
insb
cmpsl
mov
lock
xorb
adc
add
dec
aad
mov
notb
jbe
cmp
xchg
orb
shrb
adc
inc
xor
jnp
loopne
push
pop
lcall
repz
xor
fxam
cmp
adc
leave
int3
cmpsl
pop
push
mov
stos
sub
popf
lret
pop
jb
mov
ja
sbbb
aas
push
pop
cltd
fwait
mov
adc
out
mov
jne
out
addr16
sahf
add
mov
xor
dec
mov
pop
pop
jl
jbe
or
pop
mov
mov
add
pusha
repnz
jo
add
sbbb
scas
bound
out
orps
jle
sahf
jno
push
mov
int3
cs
jns
bnd
inc
nop
fnstenv
add
sbb
cmp
sub
sbb
daa
or
mov
mov
loop
leave
scas
inc
andb
push
popf
pop
mov
movsl
cmp
mov
or
shl
mov
js
lods
daa
test
mov
jns
mov
lods
adc
inc
sub
xchg
mov
and
ffreep
mov
and
ror
mov
mov
inc
mov
or
adc
lock
jl
std
fwait
jne
divl
andl
out
push
push
sub
cwtl
es
mov
add
call
rorl
popf
mov
push
sahf
inc
pop
mov
jne
insl
stc
mov
mov
mov
mov
or
out
ss
ljmp
aad
aam
dec
cmp
xor
pop
dec
mov
insl
jmp
scas
sub
xor
mov
lods
and
stos
call
mov
adc
cmpsb
add
or
mov
fs
pop
gs
enter
loop
inc
fidivs
sarb
mov
add
hlt
mov
outsb
jno
js
cli
arpl
xor
sbb
cld
ret
test
lret
add
mov
fistps
popa
insb
jnp
mov
push
out
mov
mov
pop
push
dec
mov
dec
pop
mov
in
ret
mov
adc
adc
popa
dec
rcl
mov
mov
mov
popf
push
mov
pop
mov
mov
mov
or
sub
and
loop
dec
xchg
mov
mov
mov
add
sub
in
mov
cmc
adc
pop
bound
xchg
mov
stc
cmp
mov
inc
fistpl
pusha
cmp
dec
ret
push
movsl
pushf
enter
fbstp
xchg
sahf
or
sahf
add
mov
or
cli
mov
add
int
cmpsb
adc
mov
js
cmp
mov
mov
jnp
push
mov
inc
rcrl
mov
push
mov
outsb
insb
or
cmp
gs
mov
imul
xchg
inc
mov
mov
dec
addr16
mov
sub
idivb
shlb
pop
lods
adc
mov
mov
das
jecxz
mov
pushf
cmp
mov
rcr
jp
mov
add
cmp
lods
dec
mov
sbb
mov
clc
out
adc
mov
in
push
mov
add
stos
mov
pop
fcom
lcall
push
dec
jp
pusha
rcrl
pop
add
ds
in
xchg
mov
adc
cmpsb
andl
mov
testl
xchg
jge
aam
mov
mov
mov
jb
in
push
cwtl
adc
mov
sbb
sti
incb
cmp
lds
sub
pushf
add
lret
dec
stos
dec
mov
ror
jl
scas
pop
in
push
lods
mov
cmp
mov
push
sahf
inc
cltd
cmp
mov
leave
mov
lea
xchg
push
mov
sahf
pop
add
mov
xlat
sub
sti
push
cs
fs
xorl
inc
jmp
dec
popf
fmuls
mov
mov
jnp
adc
addr16
loope
test
mov
mov
xchg
lret
xor
loopne
jecxz
sbb
inc
jp,pt
sti
jns
lahf
sbb
jp
pop
mov
aad
mov
sub
mov
dec
inc
push
mov
pop
sub
pop
movsl
and
cmp
subb
adc
ret
or
mov
iret
mov
int
mov
and
sarb
push
loopne
test
cld
xchg
cmp
mov
negl
add
cmc
xchg
fsub
add
std
push
xchg
dec
sub
rorl
cs
cli
pop
aas
addr16
stos
test
mov
push
xchg
xchg
enter
add
push
add
idivl
cld
cmc
outsb
arpl
mov
dec
xchg
mov
inc
aas
cmp
gs
es
das
ficompl
icebp
addr16
pop
andb
frstor
std
dec
add
xchg
mov
or
mov
sub
aaa
aam
sub
mov
icebp
push
jle
mov
jg
mov
xchg
cmpsb
pop
movsb
xor
add
and
cmc
and
mov
mov
mov
xor
imul
xor
fsub
jg
sub
loope
sbb
inc
and
stc
cs
push
lret
int
or
pop
jl
jge
push
jle
dec
dec
xor
cmp
outsl
pusha
inc
call
sbb
int3
sub
mov
hlt
or
mov
repz
gs
sub
mov
aas
dec
or
rolb
loope
dec
mov
jmp
pop
mov
hlt
lock
sar
xchg
fstpl
lahf
dec
jp
inc
jns
push
incb
loope
cmp
outsl
mov
fdivl
sti
push
mov
lcall
sbb
test
packssdw
jns
int3
xor
mov
pop
jle
sbb
inc
loopne
jae
push
push
lcall
leave
dec
movsb
add
cmp
ss
clc
pop
sub
sub
sub
loop
push
mov
add
push
mov
push
jp
cmc
pop
adc
jle
cmp
dec
femms
jno
loop
loopne
lock
add
mov
and
sarl
popa
insl
arpl
cwtl
inc
dec
std
push
push
test
jl
cmpsl
or
xchg
and
mov
shlb
cmp
or
sbb
mov
cmc
push
repnz
jmp
xchg
mov
ljmp
fsubs
or
push
cmpsl
mov
mov
and
or
sbb
or
es
loopne
fstps
lahf
sti
adc
shrb
nop
cli
mov
xchg
andl
popf
mov
pushaw
in
mov
and
add
fs
insl
ds
rcl
ret
arpl
dec
push
or
insb
shrl
fistpll
or
dec
add
pop
and
pop
mov
or
cmp
dec
divb
or
repz
xor
push
mov
in
pushf
lret
in
cmp
inc
and
div
mov
stos
or
fldenv
add
cld
out
cmp
mov
cmpsl
xchg
add
negl
insl
inc
cmp
jnp
shlb
mov
lret
mov
jo
push
xchg
loopne
lret
ss
repnz
sbb
xchg
fisttpll
mov
je
mov
stc
mov
pop
mov
out
out
and
lods
pop
push
push
mov
sbb
dec
lock
pop
sub
jp
push
push
ljmp
mov
xchg
out
les
sbb
enter
out
addr16
push
pop
fisttpll
sbb
loopne
lods
mull
addl
lret
aam
sbb
nop
std
scas
lods
mov
push
fists
in
in
insb
mov
pusha
cwtl
inc
fsubrl
cmp
out
dec
shlb
mov
loope
out
lods
nop
mov
arpl
sahf
mov
es
in
mov
nop
cmp
push
leave
ret
inc
dec
pop
add
pop
mov
data16
mov
clc
mov
mov
rorl
sub
and
clc
or
mov
into
arpl
jle
imul
mov
pop
out
sbb
inc
lds
ret
mov
rcl
cmp
shrl
xor
addr16
aad
or
mov
mov
mov
clc
mov
xor
test
das
arpl
repnz
jo
dec
ss
es
scas
adc
iret
mov
cmp
mov
fildl
aaa
or
mov
push
pop
xor
pop
jle
pop
and
mov
popf
sbb
cmp
fbstp
and
adc
mov
adc
mov
nop
or
mov
add
mov
mov
cli
dec
stos
fmull
pop
push
cmp
js
mov
cmp
test
mov
mov
adc
jae,pn
xorb
fscale
fnsave
lock
adc
and
push
lods
sub
cli
mov
fsubs
adc
bound
test
push
dec
insl
push
shll
adc
aad
and
xchg
imul
jle
loope
andl
add
mov
js
lds
dec
mov
dec
gs
cmp
outsl
xchg
dec
adc
mov
cltd
jmp
pusha
iret
aad
adc
aaa
mov
testl
and
sub
shlb
jns
icebp
sbb
fimuls
jb
mov
fsts
cwtl
dec
stc
mov
aad
andb
xchg
jmp
sahf
cld
out
inc
push
mov
or
push
jmp
cmp
nop
mov
into
mov
mov
push
fisubs
or
stc
jmp
js
xchg
repnz
fildl
cli
mov
cmpb
popa
lds
xchg
push
popf
lods
sub
or
mov
ljmp
ss
mov
int3
aaa
mov
pop
rcl
mov
out
push
addr16
xchg
xchg
and
mov
jne
xor
fcoms
loope
xor
mov
dec
mov
popa
fcomi
xchg
mov
insl
lea
cld
fisubs
sub
push
jb
out
cmpsl
or
mov
adc
or
push
les
sarb
push
lods
ret
shrb
add
pop
sti
dec
ds
jmp
movsb
or
shl
mov
stc
loope
or
sbb
pop
or
fisubs
jl
popf
lea
cs
stc
cltd
test
dec
push
jbe
mov
popa
mov
and
jge
repnz
xchg
mov
shll
stos
jnp
out
xor
rclb
xchg
pop
push
xor
pusha
or
shr
jle
lahf
sti
arpl
mov
xchg
inc
mov
sub
cmp
loopne
or
sub
add
xchg
int3
push
jbe
lahf
rcrl
test
mov
adc
or
push
push
and
push
call
int
daa
mov
int3
ret
mov
cmp
dec
insb
jecxz
sahf
outsb
add
cltd
push
mov
sub
mov
mov
je
inc
test
cli
mov
add
pop
sub
mov
push
loopne
inc
sbb
xchg
mov
cld
and
cli
test
sti
sub
pop
sbb
hlt
out
and
aad
pop
pushf
inc
loop
mov
repz
xor
mov
xchg
mov
lret
loop
ljmp
repz
push
rcrl
cli
xchg
in
lods
mov
std
popf
popa
xlat
jns
stos
jle
ljmp
sbb
clc
pop
pop
int
sub
push
xor
and
pop
mov
xor
int3
mov
and
fcompl
add
mov
mov
cmp
popa
or
cmc
outsb
add
sti
push
mov
mov
xlat
lea
mov
dec
shrb
pusha
shll
adc
shll
lods
jl
mov
xchg
mov
mov
fs
mov
cmp
mov
mov
gs
mov
addr16
push
das
cmp
fcmovne
aad
mov
in
push
lds
adc
bound
cltd
cmc
fsubrs
mov
fistpll
std
push
mov
aas
mov
inc
jl
in
cmp
loopne
xor
out
push
shl
popf
and
mov
and
pop
mov
cmc
adc
jmp
mov
mov
inc
cmp
mov
or
add
xor
push
mov
add
xorl
push
or
fwait
hlt
push
mull
mov
std
mov
push
jne
insl
arpl
lahf
mov
pop
cld
push
mov
popa
jle
mov
jns
mov
stos
pop
push
cmp
xlat
fstl
nop
int
lret
inc
ja
lret
movsb
mov
orl
fstpl
fsts
aas
dec
mov
adc
inc
mov
jp
push
fbld
cli
clc
add
xor
sarb
out
sub
iret
scas
nop
inc
fs
imul
mov
flds
add
in
cli
pusha
xchg
mov
pop
jbe
sahf
mov
inc
pop
sub
jbe
divl
daa
ja
pop
mov
mov
int3
mov
fildll
dec
cmp
mov
scas
mov
add
loop
inc
mull
inc
pop
jns
mov
cmp
jo
mov
addr16
pop
adc
pop
adcb
cmp
mov
div
push
dec
mov
rorb
xor
xchg
and
mov
mov
test
cmp
mov
aam
jb
mov
in
int3
pushf
ret
jle
sub
xchg
mov
mov
outsb
sti
enter
fs
xlat
push
and
popa
cmp
ss
nop
sbb
mov
push
mov
imul
mov
dec
jl
or
inc
sub
sub
lret
push
insl
dec
addb
aaa
push
push
push
jg
arpl
adc
mov
test
lret
andb
jnp
mov
mov
inc
jge
jle
and
or
sbb
in
mov
int3
push
cmp
ja
js
or
sub
add
mov
popa
dec
in
fwait
in
subl
mov
mov
mov
ds
lcall
cmp
cltd
arpl
clc
data16
orb
mov
jo
mov
fwait
mov
xchg
pop
xchg
pop
mov
adc
mov
fsubrl
mov
xchg
ja
mov
and
mov
xor
mov
outsb
inc
into
pop
popa
cmp
jae
xor
pop
jmp
mov
std
mov
nop
sbb
mov
scas
out
pop
cmc
adcl
adc
addr16
sbb
mov
and
lret
repz
xchg
dec
add
or
mov
sbbb
and
jb
ficompl
jmp
mov
sub
sub
jbe
popf
xor
jae
mov
pusha
aam
jno
push
mov
adc
jecxz
mov
fwait
daa
xchg
push
ret
and
pop
lods
push
sub
or
movsb
mov
data16
imul
mov
add
mov
xchg
push
jmp
mov
out
jnp
pusha
mov
push
cmp
lods
cld
fnsave
xchg
mov
pusha
mov
rol
jle
mov
mov
shrb
push
push
push
test
or
test
cmpsl
xchg
test
mov
sub
inc
shlb
frstor
xor
inc
pushf
mov
mov
ljmp
xchg
fimull
pop
imul
mov
pushf
jecxz
mov
lods
mov
pusha
cltd
add
mov
push
out
push
orb
std
cld
popa
dec
mov
push
test
test
mov
add
add
mov
mov
addr16
xchg
mov
mov
sbb
jb
xchg
xor
pop
add
lret
lret
xor
ret
or
shll
or
das
cmp
sub
xchg
dec
pop
dec
mov
aaa
and
in
imul
mov
inc
and
loop
je
andl
and
lods
pop
mov
sti
pop
popa
int
inc
mov
imul
xor
mov
loope
xor
sahf
mov
cmpsb
cmp
mov
xabort
stos
lcall
sbb
loopne
xor
sahf
push
mov
push
mov
pop
lods
cmpb
aad
das
mul
sub
test
push
popa
add
cmp
mov
rorb
pop
pop
mov
loope
or
test
popf
and
mov
iret
in
and
adcb
stos
sbb
clc
mov
and
shr
lds
push
cli
jns
mov
cwtl
popa
mov
mov
cmp
cwtl
xchg
mov
mov
xchg
js
sub
cmpsb
ljmp
enter
xor
sub
dec
sbb
mov
mov
fs
mov
iret
negl
inc
jmp
xchg
shrb
fwait
mov
cli
adc
mov
inc
movsl
mov
cmc
push
test
pop
cmpsb
data16
in
mov
or
hlt
dec
addr16
mov
ret
lea
shll
add
lds
add
shlb
sbb
xchg
jmp
mov
push
sub
scas
shll
stc
mov
xchg
nop
jnp
sub
mov
loopne
fldt
sbb
cmp
or
loop
push
popa
hlt
cmp
mov
mov
lahf
in
mov
sub
aaa
mov
or
loopne
outsb
sbb
sbb
mov
mov
aaa
sbb
dec
repz
xlat
mov
pusha
mov
lea
stos
cld
icebp
out
xchg
add
cwtl
sahf
mov
shr
mov
mov
jp
xor
pushf
push
fs
xchg
jge
movsl
xchg
ret
or
je
adc
lret
in
inc
mov
loopne
lcall
inc
mov
push
pushf
lds
in
jle
inc
pushw
mov
loopne
ffreep
aad
enter
sub
mov
fldl2t
fisttpll
popa
arpl
push
add
inc
call
outsb
mov
popa
mov
mov
push
and
pop
mov
ret
sbb
jmp
addr16
xorb
das
mov
sti
xor
mov
push
sahf
mov
loopne
push
cmp
dec
sub
shll
loopne
popf
pop
sbb
out
insl
cltd
aam
or
jbe
inc
mov
pop
jo
fisubl
test
jmp
and
in
fdivrl
push
lcall
aaa
add
mov
dec
xchg
xchg
into
jbe,pn
mov
pop
sbb
mov
aaa
mov
das
mov
test
test
mov
nop
mov
push
out
inc
fstp
lcall
int3
dec
jl
arpl
out
and
lea
cmp
or
mov
ret
cmp
repz
repnz
int3
or
out
pop
gs
xchg
les
add
pop
cmp
add
push
cmp
mov
call
mov
push
imul
pop
push
cmp
arpl
mov
cltd
adc
and
orb
and
xor
es
and
sub
sbb
or
pop
or
push
mov
adc
xchg
xchg
and
aad
push
mov
mov
cs
shrb
into
cld
repnz
lds
aaa
sub
jecxz
pop
int3
pop
mov
xchg
mov
shll
icebp
rolb
ljmp
adc
jmp
dec
push
leave
jmp
idiv
push
push
xchg
mov
lock
jecxz
loop
mov
shlb
mov
push
mov
dec
lods
mov
fsts
cs
stc
cmp
mov
and
or
dec
push
incb
or
and
cltd
push
cwtl
push
push
inc
cmpsl
jne
cmp
mov
mov
jmp
mov
cmc
leave
push
mov
cmp
repz
enter
sbb
sbb
getsec
rorb
mov
repz
data16
cmc
sbb
jns
lcall
out
jp
xchg
shll
xchg
push
mov
sbb
cmp
sarl
mov
adc
cmpsb
scas
popf
test
mov
jno
addr16
pop
jg
mov
mov
cs
dec
cli
loop
data16
add
sub
or
xor
mov
fucomi
loopne
pop
xchg
mov
xor
inc
ljmp
adc
mov
mov
and
in
mov
movsb
mov
pushl
mov
std
mov
js
xchg
sbb
lods
sbb
aas
pop
insb
sti
xchg
mov
mov
mov
and
jmp
out
cmp
daa
das
add
neg
xor
jno
sbbl
pop
mov
sub
mov
lods
and
pop
mov
sub
and
pop
jns
pop
adcb
add
push
sub
inc
mov
daa
inc
insb
inc
mov
xor
lahf
add
cmp
mov
cld
loopne
pop
mov
cwtl
dec
add
fistpl
xchg
mov
dec
inc
xor
fiadds
mov
push
jbe
sbb
fistpl
sub
gs
mov
mov
jbe
ds
mov
fcomps
lea
ja
out
mov
dec
pop
mov
push
jo
and
jnp
daa
mov
dec
mov
into
jo
int3
mov
push
pop
ss
xchg
fdivs
lcall
jne
xchg
mov
xchg
imul
into
scas
scas
in
addr16
cmp
inc
mov
sbb
and
rorl
xchg
into
inc
mov
jmp
sub
loop
pop
xchg
shlb
pushf
leave
cmpsb
lahf
jp
xor
dec
mov
mov
cmp
mov
loopne
scas
push
or
push
xchg
mov
mov
xor
sub
xchg
rclb
xor
mov
mov
sbb
cmp
test
sub
lcall
or
mov
jb
popf
mov
sti
sub
mov
cltd
inc
pop
dec
mov
xchg
or
pop
push
in
out
imul
fwait
mov
jp
shlb
repnz
aaa
es
subl
push
and
sub
push
insl
outsb
cmp
mov
jo
adc
mov
mov
dec
in
sbb
std
shlb
lods
mov
out
pop
dec
push
jne
scas
mov
scas
data16
push
ds
inc
sbbb
int3
add
mov
cmpsb
jnp
xor
inc
loope
sbb
and
in
dec
jnp
pop
push
and
jp
enter
sti
icebp
and
sub
les
push
pop
mov
adcl
push
hlt
adcb
lock
mov
test
push
cmp
mov
into
xor
pop
push
nop
xor
push
cli
loopne
mov
ds
inc
mov
pop
das
and
mov
xchg
cltd
pusha
fimuls
jecxz
xchg
sub
es
iret
adc
js
jmp
mov
mov
rorb
rcrl
mov
dec
adc
fists
xchg
pop
neg
and
push
out
add
cmp
mov
cld
pop
xchg
insl
cmp
das
out
bound
scas
test
movb
mov
xchg
out
cli
loopne
add
and
fdivrl
cmp
xchg
xor
ja
or
pop
xchg
lret
shlb
stc
inc
adcl
jae
aas
rclb
adc
and
sbb
cld
mov
push
xor
xor
clc
sbb
hlt
push
push
push
scas
sahf
push
gs
lahf
add
ss
loop
in
in
mov
outsb
xor
pop
and
divl
mov
das
mov
or
pop
mov
mull
fwait
push
mov
les
add
stos
mov
fcoml
cmp
mov
push
dec
out
cmp
aad
mov
imul
dec
cli
mull
or
das
dec
mov
out
push
inc
insl
sbb
mov
out
pop
imul
mov
arpl
add
fidivl
dec
dec
cmp
lods
xchg
outsl
mov
loop
and
and
int
push
mov
cltd
lahf
push
mov
push
clc
mov
cmp
or
and
jns
mov
inc
cmp
aas
fcoms
cmp
xchg
les
push
mov
pusha
sub
lods
and
push
stos
mov
pushf
jne
fcoml
repz
ret
dec
test
jp
std
aad
or
xor
in
popf
inc
ds
in
mov
and
iret
in
jle
cmp
mov
mull
popf
mov
lods
aad
lret
scas
fs
data16
jg
lods
scas
loopne
adcb
add
ret
lcall
and
mov
loop
pop
cmp
push
sub
xor
clc
inc
xchg
and
movsl
mov
pop
rcl
mov
ss
mov
pop
mov
pop
ret
mov
push
dec
adc
dec
mull
xchg
nop
sbb
je
addr16
add
xor
jp
popf
and
pop
mov
sub
xchg
test
sbbb
jb
mov
adc
inc
xor
dec
je
rcr
pushf
mov
icebp
xchg
loopne
lret
jb
addr16
mov
cmp
das
lds
inc
sbb
sahf
dec
jl
and
push
sub
cwtl
jno
jbe
cld
loopne
sub
pop
lcall
sbb
mov
mov
mov
cltd
std
popf
mov
stos
add
test
or
jns
cmpsb
out
push
dec
sub
loopne
push
cmp
les
cmpsb
jp
pop
lahf
dec
mov
and
shlb
sbb
mov
xor
sahf
hlt
mov
push
push
xchg
sbb
jl
jne
out
outsl
mov
std
sub
inc
add
test
lret
mov
rolb
xchg
pushf
dec
std
mov
cmp
mov
mov
dec
push
dec
pop
xlat
rcrb
jg
mov
insl
mov
jmp
and
jae
clc
pusha
insb
cmpsb
cs
arpl
test
in
xor
sbb
ret
inc
or
and
adc
xlat
loopne
jmp
mov
fidivrs
pop
mov
psubusw
pop
jbe
clc
adc
lea
addl
jbe
fwait
pop
xchg
and
mov
cld
call
mov
dec
iret
stos
ret
stc
push
fs
pop
sbbb
jno
ds
and
mov
mov
sahf
negl
mov
in
push
rcrl
aam
popf
outsl
das
dec
clc
jmp
jo
push
ja
mov
inc
and
or
xor
mov
cmpsl
stc
sbb
out
jecxz
enter
daa
xor
dec
nop
es
mov
pop
ret
cmp
mov
insb
loopne
loop
clc
mov
es
roll
loopne
mov
or
dec
xchg
xor
loopne
xchg
stc
in
aas
add
mov
lods
pop
or
mov
loop
hlt
js
lret
popf
sbb
in
pushf
mov
push
dec
add
out
stc
push
mov
inc
and
jmp
add
pop
add
int3
xchg
pushf
mov
jnp
sbb
lds
addr16
test
jne
sub
mov
sbb
sub
iret
mov
xor
and
pop
addr16
nop
sub
pop
adc
pop
xchg
js
cld
mov
stos
mov
push
fldcw
ds
mov
jnp
shlb
or
hlt
pop
cmp
imul
mov
test
enter
cmp
add
adc
aad
loope
inc
cmp
call
push
mov
add
test
sbb
push
xchg
std
mov
cmp
xchg
pop
addr16
and
mov
cwtl
popf
mov
cli
repz
pop
in
shll
imul
arpl
in
sub
pusha
jno
push
push
mov
xchg
fdivrl
and
add
imull
mov
dec
jne
adc
jle
push
iret
pop
xor
cmp
add
pushf
popf
mov
push
jl
push
jmp
mov
les
mov
call
shlb
inc
jb
mov
fs
sti
cli
xchg
in
xchg
call
mov
repz
inc
mov
nop
adc
inc
rcrb
jecxz
pop
enter
push
mov
dec
cmc
jno
cmpsb
push
lret
mov
push
mov
popa
dec
sbb
and
sub
adc
out
test
sub
jecxz
out
mov
mov
xchg
adc
push
lcall
jg
ret
hlt
out
or
in
mov
sub
sti
mov
arpl
pusha
test
cmpsl
clc
mov
dec
jg
imul
stos
mov
mov
pushf
in
mov
and
lds
enter
jle
adc
mov
add
je
jo
and
push
dec
push
sbb
addr16
jg
adc
mov
mov
imul
hlt
jecxz
in
jl
inc
mov
pop
dec
lea
shl
push
cmp
fiaddl
xchg
roll
pop
test
sbb
or
negl
mov
addb
mov
scas
out
nop
out
push
add
cmp
mov
test
add
loope
push
cmpl
stos
loopne
mov
ficoms
inc
push
insb
popl
aad
hlt
dec
sbb
push
dec
test
xchg
addl
mov
push
test
cmp
hlt
jns
cli
sbb
cmp
imul
pop
sbb
cmp
sbbb
in
rorl
cwtl
push
fmulp
and
sbb
imul
xor
cmp
mov
xor
sbb
ficoml
out
inc
sbb
add
repz
pusha
pop
rcll
sub
es
cmp
les
or
push
loope
mov
mov
cmp
mov
add
cmp
aad
add
and
sub
and
mov
or
push
stc
and
xchg
adc
xchg
mov
mov
sbb
pop
nop
mov
jle
cmp
jge
mov
pusha
push
fbld
sbb
mov
inc
cmp
ret
icebp
movsl
jle
push
pusha
sti
mov
sbb
lock
ds
clc
xchg
icebp
inc
inc
mov
mov
into
mov
aaa
push
sbb
repz
mov
fisubrl
addr16
loopne
insb
aad
nop
rcll
mov
imul
addr16
jb
adc
stos
fstpl
mov
aas
testb
incb
mov
cltd
push
mov
xor
pop
and
stc
dec
test
cwtl
es
pusha
inc
push
lahf
push
jecxz
push
mov
inc
and
mov
repz
leave
stos
lds
mov
sub
int
inc
sbb
dec
xchg
jecxz
fcoms
sub
js
add
aam
mov
loop
xchg
dec
lret
mov
inc
mov
lret
dec
xchg
pop
dec
dec
or
fdiv
xor
out
test
pop
int
enter
orl
jmp
jle
sahf
xchg
js
mov
iret
dec
test
cs
out
cmpb
mov
int3
xchg
or
mov
outsb
iret
rclb
ds
jp
out
pop
lret
nop
xchg
and
mov
push
rcrb
aad
cld
xchg
cmp
mov
icebp
inc
add
loopne
mov
inc
insb
fwait
mov
xlat
xchg
daa
mov
jns
push
pop
imul
insb
mov
rcrb
sbb
adc
xchg
leave
test
mov
test
pusha
sar
mov
mov
cmp
loopne
mov
cltd
sbb
sub
shll
ja
xor
mov
push
mov
inc
mov
jo
into
xor
mov
xlat
pusha
sbbl
mov
mov
dec
inc
loopne
mov
nop
mov
rclb
xchg
pop
std
push
loopne
mov
jnp
or
mov
jecxz
push
addr16
mov
push
mov
cmp
movsl
inc
mov
dec
adc
push
fs
insl
into
mov
mull
or
aam
test
lret
enter
dec
in
mov
sbb
lea
mov
stc
out
jo
sbb
and
adc
or
adc
mov
mov
sbb
adc
lahf
mov
outsb
add
addr16
mov
lcall
aam
andb
fs
je
int3
popa
jecxz
jae
mov
jbe
ja
mov
int3
lods
aaa
aaa
flds
lret
mov
fdivs
push
or
adc
stos
mov
icebp
jno
fsubs
in
pop
xchg
frstor
sub
gs
icebp
pop
inc
cltd
xor
ljmp
xchg
cmp
test
cmpsb
out
add
inc
das
insb
push
inc
inc
cwtl
movsb
mov
insl
inc
fnstenv
mov
gs
pop
lods
lahf
inc
xchg
add
inc
sub
mov
sarb
lock
insb
mov
roll
jge
loope
xchg
pop
out
addr16
adc
outsl
sbb
cwtl
loope
push
out
test
sbb
xor
test
and
dec
leave
lods
jle
push
cwtl
stos
mov
loopne
push
and
pop
notl
push
pop
orb
mov
rcll
insl
push
jns
mov
ret
push
jno
clc
and
sub
iret
imul
inc
fs
cld
and
add
es
mov
lods
outsl
mov
mov
cmpsl
roll
mov
cli
in
sub
sub
jns
popa
mov
int
cs
pusha
in
jle
popf
arpl
ret
in
xchg
lcall
mov
mov
and
ss
adc
sbb
clc
jo
push
push
inc
xor
push
outsb
aad
add
cmp
repnz
sbb
jae,pt
and
sub
dec
xchg
jle
insb
cmp
data16
mov
aad
les
mov
pop
jbe
cmpsl
mov
push
andb
jae,pt
cwtl
jno
addr16
adc
mov
sti
das
xlat
nop
les
cmp
mov
cmpsb
or
mulb
lret
stos
jne
mov
push
shlb
loopne
adcl
mov
mov
lods
mov
int
mov
aam
bound
xchg
cltd
movsb
lds
out
add
cs
push
or
mov
and
mov
out
mov
mov
addl
loop
in
mov
lret
arpl
jae
xchg
xor
cltd
adc
jbe
push
fildl
inc
adc
jae
stc
mov
in
jno
repz
pop
xchg
dec
jmp
jmp
mov
push
fadds
mov
popa
ficoml
test
stos
out
ljmp
cmp
cwtl
sarb
add
jl
sbb
mov
mov
in
clc
pushf
movsl
add
mov
ljmp
fwait
mov
lods
mov
jno
insl
sbb
dec
test
mov
in
push
cmc
mov
add
pop
sub
inc
fucomi
stos
fisubl
out
sub
or
push
ret
outsb
xor
rol
push
loopne
mov
dec
dec
dec
adc
jecxz
mov
adcl
inc
mov
scas
divl
sbb
leave
popa
mov
jbe
mov
int3
frstor
sahf
mov
sbb
jle
sbb
cmpsl
push
mov
mov
xor
mov
pushf
mov
sub
clc
pop
subl
inc
or
mov
add
jecxz
cmc
cltd
push
mov
jg
ret
aad
sahf
mov
or
insl
xchg
fidivl
sub
push
adc
stos
cwtl
or
popa
adcl
mov
fimuls
cld
jle
pop
sbbl
xchg
test
mov
and
inc
insl
popa
add
aad
pop
and
xor
push
mov
sti
loopne
iret
cld
bound
pop
xchg
jno
mov
lods
and
imul
incl
in
and
adc
test
add
or
lret
sarl
jbe
jb
out
fstps
mov
hlt
stc
sahf
in
mov
push
jg
or
mov
dec
or
bswap
mov
adc
je
push
add
insl
movsl
nop
aas
mov
ret
cld
mov
in
xchg
aam
pop
movsw
fucomip
imul
pop
mov
or
jno
aaa
sbb
add
dec
push
js
sbb
lret
inc
jb
adc
pop
pusha
insl
and
aas
mov
movsb
dec
mov
addr16
xor
mov
loope
inc
js
repnz
xchg
imul
mov
stos
popf
fidivl
mov
nop
mov
mov
in
out
pop
inc
shrl
imul
xor
cmp
sahf
and
inc
cmp
jb
adc
lock
lods
out
es
mov
pop
mov
mov
cmpsl
mov
loope
push
ljmp
or
push
fstl
mov
adc
fs
mov
repz
inc
popf
out
inc
lahf
cmc
loop
sub
cmpsb
insb
into
sub
xor
sarl
mov
lret
mov
push
mov
sub
mov
xchg
push
xchg
inc
bound
das
and
mov
leave
mov
cltd
mov
ja
jbe
mov
jae
add
mov
dec
daa
fisubrs
sbb
sbb
pop
mov
add
xchg
mov
lcall
pop
xlat
hlt
mov
cmp
xor
xchg
cli
test
mov
push
pushf
jns
jmp
sti
aam
add
cmp
pop
and
lods
push
pop
mov
sbb
jmp
int
cwtl
and
push
ljmp
sub
inc
cmp
dec
dec
rorb
cmp
mov
sbb
adc
lret
mov
sbb
stos
cmp
mov
or
xchg
iret
out
pop
movsl
and
leave
or
mov
sahf
mov
inc
jge
out
sub
mov
fcomps
fldenv
push
popf
add
nop
iret
pop
fbld
mov
mov
push
sbb
mov
xor
ds
dec
inc
fldt
lock
arpl
sub
mov
popa
fisubs
dec
stos
in
daa
mov
insl
lret
pop
push
mov
mov
mov
aas
outsl
hlt
insl
mov
mov
icebp
sbb
fnstcw
addr16
lcall
sub
lahf
xchg
jbe
push
mov
sti
loope
ficomps
dec
mov
popa
shlb
in
jmp
aad
shlb
fistps
pushf
inc
into
jp
ds
pop
jge
scas
mov
sahf
push
mov
popa
rcl
ret
dec
dec
pop
cmp
adcb
cltd
mov
sti
push
add
iret
adc
jb
dec
adc
sbb
mov
ljmp
dec
xchg
pop
mov
stos
ds
mov
sbb
jbe
bound
mov
push
mov
fucomip
add
jo
sub
out
pop
mov
fldenv
add
and
adc
mov
push
xchg
xor
mov
movsl
jge
mov
iret
dec
shll
ror
dec
jg
orl
mov
fidivrl
inc
jg
fisttps
xlat
rorl
mov
jecxz
cmpsb
mov
push
je
mov
jg
inc
jae
cld
mov
jb
mov
ja
mov
xorb
test
popf
fcoms
push
loopne
cmp
popa
kmovw
out
sbb
shll
mov
adc
mov
lods
iret
cmpb
xchg
rcrb
push
cmp
cmp
pop
xchg
mov
xor
fldcw
cmp
inc
and
mov
push
mov
push
daa
xchg
in
dec
lret
sarb
lahf
popa
fs
shll
movsl
mov
xchg
andb
stos
xorl
les
jns
movsl
jle
divl
add
mov
mov
cmp
loop
mov
clc
inc
and
loopne
nop
test
gs
int3
pop
adc
lods
mov
mov
inc
mov
hlt
xchg
cmp
jl
mov
cmp
inc
jbe
popf
mov
mov
nop
or
sub
outsl
sub
mov
lret
lods
cs
pusha
out
test
xchg
rcrl
jne
or
mov
inc
adc
xchg
mov
mov
std
lods
mov
jo
ljmp
mov
ds
lret
dec
adcl
mov
into
adc
mov
xor
inc
pop
jns
popa
pushf
sub
pusha
test
test
call
fst
xchg
pusha
jmp
jg
jle
or
push
sub
lods
scas
inc
and
and
sti
aaa
mov
lds
icebp
cmp
mov
mov
sbb
or
sbb
outsl
pop
fidivrl
cmp
pusha
cli
mov
nop
insl
lods
cmp
inc
addr16
dec
les
imul
xor
aaa
pop
out
out
push
fldl
mov
or
fcmovne
lcall
xchg
scas
jmp
mov
cmc
jo
daa
mov
mov
inc
loopne
icebp
mov
cmp
and
push
adc
lret
lahf
cmc
sbb
mov
inc
outsb
mov
xchg
adc
cmp
xor
adc
test
neg
jns
mov
test
cmp
mov
mov
push
dec
in
outsb
pop
jbe
ret
and
jle
mov
lods
jp
xchg
movsb
mov
cmp
out
mov
enter
mov
in
jno
mov
pop
data16
shlb
and
jle
repz
pop
in
mov
jg
add
mov
repz
aas
pop
sub
adc
pop
jns
fidivs
sub
xchg
std
mov
jmp
mov
icebp
sub
and
scas
stos
je
insb
cwtl
hlt
pop
cmpsl
in
pushf
sub
loope
das
mov
sub
xchg
adc
stos
addr16
push
dec
mov
shrl
ds
inc
mov
das
add
mov
dec
into
insb
dec
popa
stc
xchg
adc
cmpsl
or
call
rcr
xchg
jg
ss
hlt
jo
in
sub
pop
mov
sub
loopne
or
in
mov
xor
push
pushf
adc
aam
sub
mov
ret
stc
outsb
cmp
inc
xchg
shlb
dec
in
pop
sbb
andl
iret
xchg
ja
imul
sub
adc
hlt
or
arpl
xor
mov
addb
mov
mov
pop
mov
icebp
dec
and
push
out
cmp
enter
xchg
mov
cmc
test
lods
mov
jae
inc
xchg
mov
js
out
mov
dec
decb
addr16
dec
mov
adc
pop
jg
xorb
stos
mov
repz
test
cli
sahf
mov
xor
leave
mov
mov
lock
dec
cmpsb
mov
xchg
scas
std
nop
cli
fcoms
cmp
dec
jno
jg
or
ss
jmp
mov
scas
hlt
pop
les
std
nop
jge
test
xor
inc
in
jnp
cmp
and
popa
adc
cltd
mov
fstl
push
mov
fmull
mov
or
inc
dec
inc
xor
lods
mov
pusha
jne
and
mov
or
cwtl
mov
popf
lods
scas
pop
sbb
pop
pop
into
mov
or
iret
mov
lret
movsl
out
out
cmpsl
pop
add
nop
mov
lods
xchg
cwtl
jb
sub
xchg
int
mov
out
mov
jl
dec
ss
cld
in
or
mov
adc
shrl
mov
pop
dec
cltd
xor
mov
dec
std
cs
mov
mov
xor
and
lret
xorb
fisubs
arpl
cmpb
aad
xor
adc
ret
fcoml
push
stos
jae
pop
push
inc
loopne
dec
ljmp
xchg
loopne
rorl
cld
add
inc
data16
cmpl
adc
jo
mov
add
js
mov
cwtl
dec
loopne
adc
pushf
cmp
mov
stc
cld
test
jnp
shlb
mov
imul
pop
push
mov
mov
push
and
jae
es
lret
fwait
jecxz
ds
call
lea
push
inc
subl
mov
pop
dec
daa
inc
push
add
pop
inc
int3
mov
jle
mov
adc
clc
and
mov
mov
test
cwtl
pop
push
and
dec
ja
mov
mov
lcall
pop
mov
insb
mov
cmp
mov
mov
mov
push
ljmp
cli
stos
mov
xor
and
ret
nop
sub
fwait
mov
mov
fiadds
mov
clc
mov
stos
xchg
rorl
mov
data16
aam
cltd
or
test
ja
mov
sub
push
jecxz
or
push
movsl
xor
sub
mov
jnp
outsl
scas
sbb
mov
fcomps
xor
push
jl
cmpsb
out
ja
cmc
xorb
insl
push
rcll
adc
xor
and
mov
mov
js
insl
pop
adc
lret
icebp
test
stos
sbbb
jo
cmpsb
out
dec
mov
lods
in
pop
dec
fisttpl
push
and
push
fdivr
loop
call
xchg
mov
test
dec
mov
xchg
testl
push
cwtl
leave
xchg
jo
in
mov
mov
out
jbe
jns
mov
dec
mov
lcall
and
hlt
dec
jmp
pop
push
int
test
scas
call
insl
mov
xchg
pop
je
xor
mov
jg
add
mov
sbb
jns
loope
andl
or
ja
pop
mov
pop
aam
fsubs
inc
iret
lret
push
in
in
aaa
pop
shll
sub
cs
cwtl
push
inc
inc
orl
das
adcb
mov
subl
push
in
cmp
mov
mov
popf
push
mov
mov
scas
addr16
mov
and
mov
clc
and
xchg
xchg
mov
in
jp
fstpl
js
xchg
push
outsl
popf
xor
ds
addr16
das
sub
out
add
jne
ret
repz
cmp
subl
enter
mov
cld
jge
dec
push
lds
or
lcall
cmp
mov
mov
jbe
xchg
mov
mov
push
aas
mov
xchg
mov
sahf
flds
stos
hlt
loop
jecxz
cld
call
push
xor
mov
test
cmp
jge
mov
out
jne
jae
lcall
dec
iret
ljmp
lret
jae
xor
mov
test
out
sub
pop
sbb
xchg
mov
inc
sub
or
ficompl
imul
int
lret
pushf
cmpl
mov
fidivrl
shr
nop
xorb
aam
pop
addr16
sub
mov
dec
lea
sti
arpl
mov
adc
push
stos
push
les
pushf
mov
mov
fcomps
mov
popa
sbb
ds
add
int3
shrb
lret
mov
inc
dec
or
push
or
mov
rclb
pop
jno
fcoms
mov
push
es
inc
mov
fbld
lret
cmp
pusha
inc
adc
movsl
add
out
sub
and
orb
aad
imul
mov
gs
jb
std
rclb
cmp
sbb
add
mov
or
test
mov
test
pushl
and
fidivrs
scas
adc
cmc
loopne
arpl
pop
jns
push
jge
dec
xchg
or
aas
lods
hlt
stc
or
lea
push
cmpsb
rcrl
mov
dec
aad
push
in
inc
outsl
repnz
gs
jae
shll
addr16
push
mov
stos
mov
loope
pop
out
mov
cmpsb
dec
ljmp
sbb
lea
mov
add
mov
sub
pop
or
adc
in
shll
xor
hlt
mov
push
jl
aas
and
push
js
xchg
sub
mov
stos
lods
aam
loopne
jno
adc
sbb
fld
lods
out
mov
loop
ljmp
add
push
and
mov
mov
mov
outsl
xchg
mov
lock
shlb
add
mov
jae
and
or
xor
mov
mov
mov
mov
xchg
in
mov
mov
fisubrl
lahf
orl
dec
cmp
test
in
stc
aaa
push
mov
sbbl
lret
imulb
jmp
jno
fistpl
mov
cmp
in
loopne
push
and
xchg
mov
into
movsl
and
fwait
xchg
lret
cmp
sbb
shrb
inc
pusha
out
aad
mov
dec
filds
mov
iret
stc
ficoml
mov
mov
sbb
adc
pop
les
jmp
mov
push
add
cmp
out
or
stos
fisttpl
jl
jle
das
faddl
xchg
mov
lods
repnz
and
outsl
and
aam
or
je
subl
cmp
add
push
insl
mov
in
fildll
loop
mov
mov
test
cmp
pusha
sub
fstp
lret
test
roll
pop
cmc
dec
into
sub
les
mov
push
hlt
pop
cltd
mov
test
and
or
int3
out
add
and
icebp
test
or
xor
cmp
and
mov
outsb
jmp
jg
inc
shlb
xor
xchg
bt
inc
aas
fstl
sbb
pop
mov
jae
push
das
pop
adcb
imul
add
mov
jne
stos
sub
arpl
outsb
pop
pusha
mov
push
xchg
in
inc
mov
or
nopl
mov
cs
mov
mov
sti
sub
fsubs
xchg
enter
insl
sub
nop
sub
xchg
mov
fs
mov
mov
popf
sahf
xchg
dec
cmp
int
orl
lret
dec
push
mov
gs
mov
sahf
cld
or
out
idivl
adc
cltd
add
loope
push
std
enter
dec
sahf
rorb
adc
xchg
pop
add
pop
and
icebp
mov
jb
hlt
add
imul
mov
sti
in
cmp
in
cmp
in
loopne
loope
addl
lcall
ss
orb
lods
imul
outsb
jno
adcb
mov
test
mov
std
push
into
fsubl
inc
in
dec
jle
mov
sbb
mov
adcl
iret
inc
call
cmp
lock
mov
push
or
and
dec
jl
nop
dec
out
mov
insb
xor
add
dec
fwait
iret
rclb
mov
je
cld
loope
xor
and
or
scas
fnstcw
mov
inc
mov
out
pushf
jbe
jne
dec
cmpsl
insb
imul
push
lea
into
mov
inc
cmpsl
push
cs
int
bound
jns
imul
adcl
jnp
adc
les
cmp
rcrl
push
adc
push
mov
mull
lock
jnp
mov
xor
in
dec
pop
mov
jno
fs
mov
dec
jle
in
mov
or
in
mov
cmp
mov
sub
repz
pop
aaa
add
or
push
push
mov
add
xchg
xchg
inc
push
mov
adc
insb
repz
mov
test
add
push
shl
push
pop
pop
add
mov
and
aas
mov
mov
xor
xor
inc
mov
jno
addr16
mov
movsl
xchg
inc
loopne
pop
aad
sbb
add
cmpsb
sahf
mov
hlt
repz
fisubrs
fldl
test
cmp
jbe
sahf
gs
int
dec
test
xchg
rclb
cltd
cwtl
push
or
xlat
das
jl
mov
dec
add
or
xchg
fwait
aaa
adc
mov
fldenv
sbb
pushf
cwtl
int3
mov
inc
pusha
pusha
add
lcall
add
mov
scas
cwtl
andl
mov
vcvtsd2si
mov
xchg
ds
imul
das
pop
adc
push
cmp
mov
pop
cli
lea
cmpb
addr16
repnz
fsubrs
mov
dec
aad
lds
shr
mov
or
cmp
shll
mov
jns
xor
and
cs
cwtl
xchg
xor
repz
inc
rcrb
int
out
insb
movsl
pop
mov
mov
inc
ljmp
lods
mov
xchg
or
push
adc
jo
icebp
dec
xchg
dec
test
test
jecxz
into
dec
mov
adc
stos
pop
mov
enter
mov
jns
jp
cmp
out
out
mov
andl
push
mov
or
lcall
into
ds
sub
imul
inc
mov
int
mov
stc
sahf
int3
pusha
add
aad
inc
inc
dec
sahf
popf
andb
cmpsl
add
scas
out
lcall
js
or
test
adcb
insl
cmp
aaa
dec
mov
out
in
add
lods
add
cmp
mov
imul
add
cs
jge
mov
pop
icebp
jmp
in
dec
fisubs
sbb
das
shrl
adc
bound
mov
jo
stc
sbb
aad
inc
into
mov
xchg
mov
cmpsl
pop
in
popl
inc
popf
imul
ret
or
push
xchg
cltd
and
repz
es
stos
mov
imul
outsl
cmp
sti
sbb
add
add
shrl
jae
into
nop
inc
mov
pop
jl
mov
addr16
dec
ret
xchg
cld
xor
cmp
or
enter
sub
mov
inc
jge
and
aaa
cmpsl
sldt
fs
nop
adc
or
xchg
subl
xor
cmpsb
movsb
js
xchg
inc
inc
fisubrs
push
sbb
add
mov
out
mov
test
stos
dec
mov
xchg
mov
cmp
fsubr
push
mov
pusha
xor
loope
dec
mov
testl
lret
sbb
or
mov
ficompl
inc
pop
dec
push
incb
nop
mov
clc
cld
andl
mov
cmp
iret
pusha
xchg
inc
push
nopl
mov
sub
nop
adc
push
in
xchg
cmp
and
int3
sub
xchg
mov
sbb
fsubl
xchg
pop
dec
movsl
pop
lcall
jle
xchg
mov
movsl
neg
inc
mov
rcr
and
jl
lea
xchg
add
pop
inc
xchg
mov
mov
stc
shll
mov
xchg
sub
fsts
loope
inc
outsb
test
push
test
mov
add
ror
mov
movsl
pop
mov
hlt
loopne
out
insl
sarb
mov
test
popa
mov
mov
xor
imul
or
push
cmpsl
jecxz
mov
cld
nop
idivb
gs
loopne
jle
dec
mov
popa
jns
jmp
pop
xchg
mov
gs
jnp
jbe
cmp
out
addr16
pushf
imul
pop
jmp
mov
dec
mov
bnd
call
rcr
icebp
insb
loopne
int3
inc
pop
add
xchg
dec
outsl
movsl
cmc
stc
dec
lcall
xchg
aam
popa
sbb
mov
fwait
pop
mov
int
dec
repz
icebp
pop
push
mov
adc
lret
mov
subb
push
mov
addr16
xor
aas
mov
jae
mov
test
push
adc
out
add
mov
ja
testb
iret
mov
xchg
mov
mov
loope
jae
dec
cwtl
jge
sub
add
add
lret
mov
xchg
xor
jno
ljmp
push
dec
bound
sbb
jmp
mov
push
and
mov
mov
jl
dec
pop
and
fsubrs
sub
xchg
sbb
mov
mov
lcall
mov
inc
iret
mov
inc
int
lock
jg
cmp
sahf
mov
mov
into
lea
xchg
jmp
fisubs
or
lods
shl
push
xchg
or
divl
daa
sarl
xchg
outsb
cmp
divb
adc
and
jl
lea
push
mov
bnd
stos
mov
mov
mov
adc
andl
sbb
pop
pop
clc
xchg
lock
mov
loopne
stos
sub
fadds
lods
xchg
jo
jb
shlb
mov
push
lahf
mov
cli
sbb
pop
add
pushf
dec
sub
test
les
sub
xchg
nop
in
cmp
cmpsl
mov
lret
mov
leave
inc
push
adc
sbbl
jmp
movsl
insb
je
xchg
mov
add
mov
jne
xchg
frstor
push
sub
jle
stc
sbb
pop
nop
loope
mov
or
sub
xor
pop
popa
int
fldenv
movsl
nop
les
inc
out
cli
loopne
jp
call
lret
nop
push
push
fildl
mov
iret
loopne
rcrl
lcall
adcl
add
inc
out
mov
push
fwait
mov
ss
test
xor
pop
fadds
xorb
jg
cli
repnz
inc
leave
adc
and
cmp
push
mov
mov
aam
pop
jecxz
jae
jnp
sbb
xchg
mov
dec
mov
lcall
or
ret
mov
adc
xchg
xchg
lret
or
addr16
cmc
mov
cmpsl
xchg
sbb
popf
cmp
mov
in
and
cmp
xlat
inc
imul
cld
cmp
jmp
xor
cld
sub
das
push
dec
lahf
jmp
cmp
push
loopne
push
into
cmp
lods
xchg
dec
andb
cmp
inc
xor
adc
int
pop
pop
sar
mov
cmp
sahf
push
adc
mov
jmp
stos
loope
cwtl
out
mov
aam
stos
arpl
imul
and
or
mov
rcrl
add
mov
test
pop
xor
cld
push
inc
mov
pusha
stc
mov
xchg
test
stos
push
pusha
test
and
sub
sbb
jae
lcall
pusha
stc
mov
mov
and
and
rolb
sbb
cmp
fdivrp
sbb
mov
gs
addr16
and
movsb
int3
inc
xor
mov
xor
fsubrp
adc
mov
mov
and
dec
stos
mov
sbb
sub
daa
clc
adc
xor
popa
inc
jb
fisttpl
jnp
add
inc
jmp
aas
das
in
pusha
xor
cmpl
xor
lods
dec
clc
jge
mov
mov
or
jae
or
mov
mov
mov
leave
repz
lcall
stos
dec
inc
loop
mov
inc
lds
je
mov
ja
sub
stos
popa
pop
nop
shr
call
test
mov
fwait
repz
jp
pushl
cltd
sub
aad
xchg
les
fsubrs
xor
xchg
or
pop
mov
cmp
or
mov
jecxz
mov
dec
push
arpl
dec
and
repz
mov
cs
cmc
sbb
xorb
mov
repz
mov
xchg
sbb
mov
fiaddl
outsb
loopne
insl
orl
sahf
mov
xchg
mov
clc
push
shll
jno
dec
lock
jmp
xchg
mov
pusha
cmpsl
pusha
decl
icebp
or
loopne
mov
ds
fbstp
and
loope
cmc
jae
xchg
mov
inc
scas
cmp
gs
push
stos
cs
loop
xchg
je
test
divl
outsb
jo
mov
mov
test
mov
leave
and
push
mov
mov
lods
imul
fcmove
adc
testb
ss
nop
jle
push
dec
lcall
addb
jnp
cli
hlt
mov
mov
or
sbb
xchg
or
loop
aas
add
out
and
insl
sub
sub
or
mov
stos
daa
test
xchg
push
in
jmp
xchg
add
ja
int3
inc
js
pushf
cltd
in
pop
and
in
add
dec
mov
fidivs
sub
mov
ljmp
cld
movsl
shll
sub
adc
jns
dec
push
sbb
mov
imul
mov
xchg
xor
dec
fbstp
mov
fcoms
movups
mov
cs
in
lods
xor
enter
add
mov
push
and
mov
xchg
addr16
inc
or
push
cmp
dec
mov
sahf
shll
add
repnz
insl
xor
mov
cmp
push
jl
mov
jp
pop
cli
push
jae
int
xor
aad
adc
mov
jnp
mov
dec
pop
inc
and
push
inc
xor
jnp
push
ja
lcall
loopne
push
fbld
adc
cmp
mov
mov
pop
inc
stos
pusha
cltd
andl
je
cmpsl
in
imul
push
pusha
mov
adc
sbb
inc
xor
je
lret
cmp
mov
and
nop
int3
add
or
sahf
sahf
lods
sbb
hlt
mul
mov
movsl
test
or
mov
sbb
jns
adc
outsl
in
pushf
mov
lods
es
inc
xchg
jo
push
idivb
mov
adcb
addr16
out
jecxz
test
pop
ret
or
sbb
dec
je
movsb
cmp
rcrl
cs
add
dec
cwtl
mov
mov
adc
loopne
in
mov
ret
subb
and
ffree
lods
pop
pusha
stos
pop
xor
mov
mov
rcr
push
or
gs
mov
or
mov
movsl
and
pop
sbb
mov
push
mov
pop
cmpsl
push
fnstsw
nop
arpl
ret
lcall
loope
sbb
xor
lahf
and
test
imul
push
inc
push
xchg
cmp
popf
int
cmpsb
xchg
cld
xchg
cmp
nop
mov
insl
adc
aam
popl
test
out
and
icebp
and
lret
nop
movsb
push
sbb
scas
jbe
mov
mov
cmpsb
lahf
lods
mov
inc
push
dec
fxch
les
mov
pop
xchg
push
movsl
sti
mov
inc
shrd
pop
adc
aaa
xor
sub
movsl
testb
nop
mov
cs
addr16
cmpsb
nop
stos
jnp
mov
inc
leave
xchg
imul
mov
mov
cmp
jl
dec
mov
sbb
fld
cmp
mov
inc
cmp
rcrb
dec
inc
dec
mov
jno
cmpsl
nop
dec
outsl
repnz
or
push
lahf
jp
xchg
pop
pop
mov
mov
flds
push
ljmp
adc
popa
iret
test
jge
jo
mov
jne
sub
jle
dec
sbbb
cltd
movsb
lret
sub
retw
inc
test
loope
movsl
ja
xor
lods
cmp
int3
dec
and
loop
push
sbb
andb
cmp
xor
popf
jo
mov
std
test
fwait
mov
rcrb
sbb
mov
inc
icebp
movsl
jno
mov
shl
mov
mov
repz
test
mov
xchg
mov
and
pusha
add
ljmp
addr16
movsb
mov
mov
push
jno
sarb
jle
lea
cld
mov
loop
pop
add
popa
mov
mov
add
or
std
pop
movsl
mov
rolb
add
inc
outsl
mov
push
mov
pop
jne
mov
push
sbb
lea
fildl
shl
lds
add
aaa
popf
mov
mov
outsb
mov
sbb
aad
mov
add
cmp
mov
mov
test
ss
cwtl
dec
imul
mov
pop
jmp
jmp
jecxz
fldcw
xor
popf
in
xchg
mov
sbb
cltd
lods
pop
sahf
cmp
das
js
mov
push
imul
sub
pop
std
xchg
sub
mov
mov
testl
push
loopne
outsl
cmp
fstl
sar
push
fdivr
add
xorl
mov
repz
arpl
mov
mov
push
fwait
int
mov
arpl
mov
jbe
leave
add
sub
lea
jo
hlt
mov
sub
test
mov
inc
mov
mov
stos
jnp
es
mov
inc
xchg
lds
push
mov
repz
in
out
mov
push
loopne
inc
inc
dec
add
mov
xorb
jp
xor
pop
icebp
repnz
ror
nop
mov
out
in
push
daa
dec
mov
mov
cmpb
jae
jle
mov
mov
push
shlb
jp
mov
enter
mov
in
dec
xchg
mov
test
mov
push
jae
or
aas
adc
sbb
lock
push
ret
mov
mov
scas
scas
pop
mov
push
lods
jbe
mov
mov
sub
dec
jmp
sbb
mov
in
enter
push
shll
mov
mov
push
xor
sub
push
mov
and
mov
rcrb
imul
mov
or
fsubl
dec
dec
push
sqrtps
popa
movsl
pop
sarl
mov
repnz
inc
mov
xchg
sarl
xchg
sbb
loopne
xor
inc
in
lahf
out
jb
add
aaa
lret
sub
mov
or
adcb
inc
ficomps
test
je
pushf
mov
push
test
loope
mov
mov
pop
dec
stos
arpl
dec
xlat
lea
ja
mov
add
mov
out
rorl
pusha
inc
daa
mov
fsts
repz
test
ret
sarb
push
lret
adc
lods
inc
out
add
mov
push
add
jbe
mov
stos
sti
fs
outsb
cmp
sub
pushf
mov
sarb
sub
jge
ds
test
mov
divb
int3
add
fwait
imul
outsb
shl
sbbb
imull
push
xchg
pop
jl
xchg
jnp
inc
xchg
jl
out
jne
adc
cltd
adc
jmp
mov
data16
mov
outsb
pop
mov
add
push
mov
fcomp
dec
add
mov
mov
push
adc
dec
push
add
cmp
xchg
sub
push
mov
dec
fs
mov
pop
xchg
ffree
je
shll
lahf
pop
pop
or
repnz
pop
jns
and
push
mov
in
mov
das
jb
sti
and
rcr
arpl
xor
bsf
sbb
cli
cmpsl
lret
lods
cmp
addr16
xor
cltd
pushf
mov
daa
scas
insl
lret
test
xor
mov
jno
andl
in
in
mov
push
cmp
cld
mov
aam
jge
fbld
out
sbb
mov
mov
jmp
scas
add
add
pop
test
lds
sbb
lahf
icebp
adc
stc
dec
push
cmp
out
shr
mov
clc
pop
mov
pop
scas
ds
jo
mov
jae
sbb
mov
les
shr
jge
pop
mov
mov
push
ja
inc
dec
add
outsb
jg
dec
addb
jo
div
pushf
jecxz
mov
imul
es
mov
sub
ljmp
sbb
adc
jecxz
and
das
xchg
rcrb
shrb
fistl
ret
ret
mov
jmp
mov
xor
xlat
jns
cmp
scas
mov
pusha
mov
bound
int3
sbb
push
xchg
lret
ljmp
loopne
jecxz
pop
pop
fiadds
jge
jnp
sbb
add
add
xchg
daa
mov
pop
mov
cwtl
sbbb
pop
and
mov
mov
jae
sub
mov
daa
sbb
sub
cmp
xchg
sub
daa
inc
in
into
int3
mov
or
repnz
xchg
aam
cld
and
jg
ds
fs
and
jle
pushf
mov
jl
jge
push
js
fcomps
mov
or
test
mov
ds
popf
push
test
popa
sbb
mov
mov
fbstp
test
repz
loope
push
loope
lea
lret
notl
mov
add
ret
test
jecxz
adc
inc
cltd
lock
add
test
stos
and
movsl
pop
mov
mov
in
inc
add
fiadds
fbld
xlat
rolb
xor
sub
pop
data16
dec
jo
add
sbb
push
cmp
mov
lcall
aad
xor
movsb
pop
pop
repz
dec
push
xchg
cmc
mov
mov
jg
sub
in
mov
aaa
inc
cmp
mov
mov
sub
outsl
pop
ud2
jbe
inc
push
arpl
cld
pop
jmp
push
mov
mov
mov
sbbb
nop
fucomi
jmp
out
mov
inc
stos
shlb
and
sbb
dec
idivl
hlt
mov
fmull
jp
sub
and
sti
lcall
enter
pop
mov
dec
cmp
jmp
dec
sub
and
sbbl
cmp
push
icebp
mov
xchg
or
push
in
popa
cmp
dec
pop
mov
repz
add
pop
test
push
push
mov
cltd
cmp
mov
test
daa
lahf
lahf
test
es
aas
idivb
inc
and
cmp
push
push
roll
nop
lea
insl
daa
adc
mov
nop
sbb
mov
cmp
sbb
mov
xchg
xor
ljmp
mov
fadds
mov
dec
pop
cs
dec
repz
xlat
jmp
mov
lahf
sbb
cmp
repnz
jns
mov
mov
fbld
or
mov
lods
cs
in
adc
int3
or
mov
insl
outsl
fnstenv
or
clc
mov
aad
mov
addr16
add
adcb
les
arpl
lock
imul
cmp
cli
mov
inc
inc
pop
ja
jo
in
push
int3
mov
jge
or
mov
and
pushf
sbb
fildl
dec
jb
xchg
in
sub
xor
pop
inc
into
sti
jae
push
lds
aam
icebp
ja
test
in
pushf
push
jno
fcomip
mov
gs
scas
cmp
mov
sahf
cs
aam
fisubs
push
dec
mov
pop
popf
jmp
mov
icebp
jp
jns
mov
sub
sbb
dec
dec
out
movsb
add
xor
push
pusha
fisttpll
inc
sahf
sbb
jle
pop
or
cmp
xchg
sbb
sub
or
mov
int
lahf
loopne
std
cltd
and
imul
movsl
je
mov
movsb
loop
push
loopne
pop
pop
dec
into
inc
mov
mov
mov
mov
daa
jge
mov
mov
mov
pop
loop
lds
data16
xacquire
subb
lret
mov
out
fs
and
ja
cmpsl
mov
pop
xchg
pop
sbb
rcrl
jo
popw
loope
and
xor
inc
mov
jecxz
pop
and
add
inc
nop
xor
mov
add
mov
or
push
leave
clc
test
dec
fdiv
stos
mov
xchg
scas
fcmove
inc
push
scas
fxch
adcl
and
add
ret
and
adc
in
mov
lea
or
ljmp
xor
cs
adc
cmp
inc
adc
mov
repz
dec
fs
imul
mov
cwtl
xchg
add
adc
push
xchg
jle
fbstp
dec
cld
sbb
popa
add
lea
movsl
mov
in
sahf
stos
adc
jnp
jno
mov
push
mov
push
mov
out
jge
outsb
dec
push
andl
mov
movl
cmp
mov
mov
cmp
jno
scas
stc
test
orl
nop
sbb
ss
enter
bnd
adc
push
and
test
xor
fwait
cs
and
xor
push
fcoml
jl
dec
xor
mov
mov
scas
sub
leave
ret
mov
xor
cli
inc
xor
hlt
mov
idiv
mov
cmp
push
test
mov
sbb
inc
push
lods
orb
push
push
mov
adc
mov
icebp
rorl
or
lahf
divl
xchg
mov
addr16
in
lds
sbb
sub
shrl
popa
movl
fsubs
sbbl
mov
jbe
inc
out
dec
mov
xchg
sahf
or
addr16
aaa
ss
jge
pusha
mov
cmpsb
or
push
aad
int
push
inc
iret
outsb
jg
lods
and
mov
jae
fldenv
mov
pop
mov
ljmp
out
mov
add
xchg
lcall
push
pop
mov
and
cmp
mov
lahf
mov
movsl
sbb
mov
dec
cmpsb
shl
ja
and
test
pop
xchg
pop
xlat
mov
into
push
cmp
mov
data16
gs
inc
cmp
loopne
xchg
pop
mov
sub
inc
loopne
ret
sti
inc
push
cmp
dec
push
xor
sub
nop
cmp
push
loopne
cmp
or
xchg
imul
mov
dec
jge
or
lds
and
es
add
mov
mov
in
mov
jns
decb
sti
arpl
jno
ret
mov
loopne
rorb
pop
mov
sub
int
popf
sbb
fdivp
in
daa
push
nop
popa
fistpll
push
ljmp
mov
jns
cmp
push
sub
lahf
lret
dec
mov
jmp
lds
adc
pop
sbb
sbb
in
sar
jo
out
mov
pusha
scas
aaa
enter
push
arpl
mov
sub
mov
mov
jns
push
mov
mov
mov
or
push
xor
mov
inc
sbb
dec
in
dec
jbe
jp
stc
and
cmp
jle
mov
inc
cmp
daa
imul
call
addr16
mov
xor
mov
fincstp
jb
jo
xor
in
jge
mov
cmp
dec
rcll
xor
mov
js
mov
adc
ffreep
hlt
test
and
fstp
aas
pop
nop
call
imul
mov
ja
mov
fdivr
test
inc
jmp
mov
scas
enter
repnz
inc
mov
aas
hlt
xor
sbb
and
xchg
int
lahf
mov
mov
lcall
push
scas
xor
and
add
sbb
mov
lods
stos
sub
pop
push
cs
or
into
xchg
gs
push
push
pop
test
je
inc
lahf
add
mov
push
outsb
push
addr16
inc
dec
jae
fchs
mov
in
cmp
push
pop
dec
cwtl
rcr
decl
dec
xor
mov
cwtl
nop
inc
inc
int3
xchg
pusha
inc
icebp
jl
push
jbe
out
in
jae
mov
xorl
push
mov
in
adc
adc
dec
fbstp
pusha
jg
sub
addb
jmp
xor
out
pop
ret
mov
sbb
test
mov
subb
cmp
jns
push
xchg
mov
shll
in
jl
mov
mov
inc
mov
cmp
icebp
pop
push
jmp
cmp
fbld
cmc
ja
sub
sbb
mov
mov
loopnew
leave
dec
les
cmp
int
push
sbb
imul
cwtl
daa
xchg
shll
mov
mov
lea
jb
insl
mov
add
je
jp
in
lret
mov
stc
imul
scas
push
arpl
mov
xor
nop
mov
cmp
dec
xchg
cmp
dec
fisubs
icebp
add
dec
andb
mov
stos
jo
rcll
dec
xchg
fwait
data16
mov
mov
je
das
and
jp
mov
sub
int3
lods
add
sub
scas
dec
mov
enter
and
lea
adc
scas
sub
inc
in
xchg
mov
pop
int3
and
mov
out
stos
andb
mov
pop
repz
andl
movsl
push
lahf
adc
xchg
push
in
mov
xchg
in
ret
testb
mov
shlb
shrb
or
sbb
loope
daa
adc
adc
outsb
adc
test
nop
out
jecxz
test
fldenv
aas
push
decb
sbb
mov
loop
ffreep
testl
adc
stos
js
and
dec
mov
adc
lea
lods
push
incl
daa
test
add
and
iret
dec
pusha
and
dec
stos
mov
sbb
mov
icebp
dec
and
mov
sahf
inc
sbb
mov
xchg
adc
mov
inc
out
cwtl
mov
fwait
out
test
mov
mov
lea
jl
cmpsl
mov
jle
and
mov
mov
popf
pop
cmp
addr16
and
movsb
inc
mov
insl
cli
std
loopne
stc
fisttpl
mov
mov
jbe
or
loopne
fiadds
cmp
jmp
mov
jae
sub
andb
mov
outsl
xchg
lods
sti
mov
sbb
pop
shll
cmp
clc
sub
adcl
hlt
inc
mov
pop
or
adc
cmc
mov
movsl
in
cs
sbb
in
pop
push
repz
mov
repnz
inc
jl
mov
movsl
pop
cltd
add
sar
push
jns
cmc
or
scas
adc
and
les
jmp
rcrb
mov
test
adc
outsl
ret
pop
cmp
and
inc
dec
jb
and
clc
sbb
fbld
jp
out
mov
popa
out
push
xchg
shrb
int3
incb
lcall
js
dec
je
mov
push
jno
cmp
jmp
test
sbb
mov
adc
xchg
aas
int3
push
jl
popa
mov
int
inc
push
push
cwtl
sub
push
fxtract
inc
and
mov
movsb
jge
repz
lcall
mov
push
inc
mov
in
dec
addr16
xchg
mov
andb
lahf
mov
sbb
add
mov
and
data16
pop
xor
sbb
bound
js
mov
andl
mov
out
adcb
mov
shl
add
movsl
test
jmp
mov
in
sbb
push
mov
adc
lods
fisttpll
imul
push
pop
mov
xorl
ljmp
mov
mov
xchg
mov
inc
fiadds
bound
lods
addr16
pop
nop
in
add
push
dec
mov
aam
push
inc
mov
cmp
sub
push
js
add
loopne
mov
negl
add
clc
and
dec
jecxz
mov
xchg
pop
cmp
mov
or
idivb
and
mov
mov
inc
sti
std
push
mov
fcmovne
xlat
mov
lods
xor
dec
daa
and
pop
xor
mov
fldcw
outsb
pusha
push
dec
pop
inc
loop
pop
and
or
jle
outsl
inc
sbb
adc
jnp
mov
push
sbb
movsl
loope
lret
mov
xor
inc
xchg
lock
in
pop
push
mov
leave
inc
mov
or
pop
xchg
out
sub
sbb
test
das
cmp
dec
int
sarl
inc
mov
cmpsl
addr16
aaa
movsb
sbb
mov
aas
sub
mov
aam
daa
lahf
mov
sub
aad
xlat
sub
mov
cs
fbstp
dec
or
pop
xchg
mov
jmp
adc
pop
les
mov
leave
push
push
dec
fsubrl
daa
mov
and
push
in
mov
fldenv
push
mov
cld
sbb
neg
sti
sbb
repnz
xchg
mov
xchg
mov
and
mov
shrb
xor
mov
cmp
jnp
cmp
adc
imul
shlb
sub
mov
dec
lret
and
shlb
int3
cmp
mov
cli
mov
xchg
subb
std
pop
stc
inc
loop
cmp
mov
push
scas
sbb
repz
insb
and
sub
mov
iret
jmp
repnz
xchg
stos
mov
mov
aaa
iret
and
adc
lock
mov
jo
lcall
mov
pop
jge
sbb
add
mov
test
xchg
cmpl
mov
les
and
cmp
xchg
clc
mov
popa
fdivs
fwait
lcall
and
ds
dec
jge
mov
jb
ficompl
adc
mov
or
mov
sbbb
adc
mov
lcall
xchg
mov
xor
rolb
shl
outsb
bound
mov
and
or
xorl
mov
mov
andl
mov
mov
sbb
sub
pavgb
or
jmp
cmp
roll
xor
call
or
mov
gs
out
or
push
jne
mov
push
in
mov
sti
mov
sbb
mov
inc
inc
cmp
mov
mov
leave
pop
jnp
jge
cld
scas
mov
cmp
fnstenv
or
loopne
xchg
adc
es
nop
jbe
filds
movsl
adcb
jge
sbb
mov
out
add
mov
movsl
data16
mov
cmc
loopne
sahf
int
in
jge
out
adc
dec
movsl
int3
fisubl
popf
stc
cwtl
sub
mov
push
pop
mov
push
flds
and
mov
jo
mov
scas
mov
inc
cmp
cmp
in
mov
cli
dec
clc
mov
add
mov
mov
addr16
stos
and
pop
lcall
sub
insb
daa
sub
and
mov
into
cmp
xchg
lods
inc
dec
mov
scas
jl
insb
or
mov
dec
xchg
jbe
dec
mov
jmp
mov
xchg
iret
and
frstor
jmp
shll
fisttps
xlat
and
mov
lea
mov
add
lods
insb
mov
imul
mov
cli
and
andl
xchg
rolb
mov
ficomps
sub
imul
mov
call
jbe
sbb
sub
mov
xchg
aas
pop
push
out
jl
jge
jo
out
xor
out
jnp
lea
jbe
or
push
lret
cmp
fbld
jnp
ficomps
das
std
or
mov
pusha
out
ja
inc
push
add
mov
jmp
jnp
ret
mov
xor
xor
mov
jp
mov
sub
mov
loope
xor
lods
mov
test
add
cmp
out
pop
jnp
add
inc
mov
adc
sbb
inc
rclb
addr16
bound
inc
fldl
fsub
popa
stos
cmp
adc
lods
lods
dec
outsb
inc
lcall
js
jbe
arpl
mov
xchg
movsl
sub
call
mov
or
jno
mov
lret
pop
lcall
fnstcw
mov
mov
pop
cwtl
imul
mov
mov
movsb
mov
mov
aas
sub
sahf
pop
and
lock
sar
push
mov
add
es
fldenv
jp
cli
daa
adc
nop
incb
cmp
push
cmp
jmp
push
movsb
pop
or
sbb
mov
aam
test
fiadds
out
jge
pop
and
sub
mov
pop
and
ljmp
add
xor
test
pop
adc
mov
push
dec
and
loop
data16
addr16
test
jns
fbld
cmc
jmp
out
pop
scas
rorl
mov
or
outsl
push
daa
repnz
dec
jle
sbb
or
jns
and
push
jg
sbb
mov
push
pop
cld
pop
adc
pop
mov
pusha
lock
mov
outsb
lcall
mov
pop
sahf
mov
ds
dec
mov
fcoml
lahf
mov
jb
insl
or
cwtl
inc
rol
pop
fsubr
xchg
das
inc
addr16
mov
lret
in
ja
fistpll
stc
call
out
jge
adc
out
and
adc
ljmp
mov
lahf
push
push
sbb
cmp
add
je
les
movsl
ficomps
mov
mov
loopne
push
inc
adc
xchg
dec
out
mov
sub
mov
negb
jbe,pn
mov
push
pusha
mull
jmp
lock
sub
mov
adc
call
push
shlb
fldl
dec
outsb
int3
fs
add
and
lock
pop
mov
lret
mov
int3
sbb
and
aad
mov
in
mov
subl
sub
mov
sbb
dec
fisttpl
sub
ja,pn
loop
adc
or
inc
out
inc
ljmp
mov
mov
nop
xlat
addl
or
cmp
sti
fimuls
cmc
mov
mov
and
mov
mov
lret
cmpsb
loopne
frstpm(287
sub
out
push
xchg
in
pop
mov
add
js
mov
xchg
in
sub
nop
mov
inc
ss
adc
dec
mov
enter
js
mov
mov
mov
dec
outsb
mov
cmp
pusha
stos
ret
inc
jne
and
inc
dec
jns
push
fwait
outsb
jle
inc
mov
add
add
push
in
fldenv
aam
xor
xchg
dec
scas
arpl
mov
cmp
ja
mov
mov
flds
xchg
loope
pop
js
icebp
push
scas
cld
pop
aam
test
xor
adc
in
cwtl
jp
cmp
add
scas
out
pusha
sbbb
and
es
xor
arpl
aaa
cmpsl
sub
in
sub
ja
stc
das
in
pop
cmpsb
lods
loopne
and
stos
aaa
fwait
loop
mov
pop
arpl
xorb
loopne
xorb
xlat
scas
addr16
fs
andl
movsl
loop
pop
pusha
jns
fwait
test
lock
popa
into
out
or
call
lock
dec
movsb
jno
mov
scas
aaa
movsb
mov
mov
aam
pop
cs
movsb
adc
pop
sbb
jge
cmpsl
sahf
mov
sbb
test
aas
loopne
popa
loop
and
loopne
lcall
insb
mov
sbb
andb
loope
loop
test
sbb
cmpb
mov
push
bound
push
push
xchg
loopne
sub
clc
cmp
mov
out
or
cmpsl
xchg
xchg
push
mov
and
movsl
and
mov
pop
sub
mov
pop
and
ret
jns
jl
mov
lcall
movsl
daa
xorl
pusha
les
repnz
cld
sbb
mov
js
push
sub
movsb
loopne
mov
loop
cs
jo
and
add
fldenv
mov
add
mov
into
push
or
ja
aas
lods
loop
out
mov
and
nop
add
cmp
gs
adc
or
shlb
xor
out
pop
mov
mov
lods
dec
lcall
popa
addr16
movsb
mov
and
mov
mov
test
cmpsl
mov
or
popa
stos
rclb
lods
in
jne
mov
les
outsb
in
pushf
mov
hlt
mov
push
shll
aaa
addr16
clc
addr16
jmp
imul
addr16
lahf
sbb
mov
add
mov
mov
lods
mov
cld
sub
fcompl
jno
out
jmp
sbb
in
fistpll
sbb
xchg
insb
or
les
imul
nop
sbb
push
adc
and
nop
mov
movsl
addr16
ljmp
jns
xchg
clc
cmp
mov
loopne
mov
loop
out
xchg
jae
std
in
pusha
loope
rcll
adc
in
and
loop
bound
daa
inc
jp
lods
out
cmp
push
xchg
adc
pop
mov
pop
ja
xchg
push
push
push
dec
xchg
sarl
sub
adc
and
mov
cmpsl
mov
cmpsl
and
inc
fs
or
in
dec
jae
inc
in
inc
cmpsb
cltd
xor
fsubl
push
and
add
out
adc
mulb
mov
shlb
mov
cmp
mov
xchg
adc
dec
and
pusha
jnp
cmpsl
int3
stos
sub
iret
and
fcoms
stos
xor
push
inc
sbb
test
dec
mov
sbb
bound
lcall
mov
movsb
mov
sbb
fistpl
pop
fwait
andb
shll
insl
movsb
call
imul
shl
sub
movsb
or
push
jmp
movsb
mov
popa
enter
mov
push
movsb
mov
jae
add
xor
pusha
movsb
nop
in
and
call
call
sahf
mov
lock
scas
popa
loop
jge
pop
and
movsb
testb
pusha
arpl
xor
adc
inc
pusha
push
xlat
les
pushf
addr16
imul
je
scas
aaa
bound
movsb
lods
scas
mov
mov
movl
loope
and
cmpsl
ret
cmpxchg
out
ljmp
loopne
sub
dec
lahf
or
fs
push
sbb
dec
jno
inc
shlb
outsl
stc
bound
sub
test
sub
inc
sub
stos
and
xchg
cmp
stos
bound
ja
call
mov
xchg
and
pop
pop
fsubs
xchg
sbb
pop
loop
sub
mov
or
cmpsb
arpl
stc
inc
js
add
xorl
shrb
movsl
xchg
inc
mov
neg
sbb
outsb
es
and
or
sub
scas
xchg
loopne
icebp
push
fdivrs
test
and
and
cmp
daa
inc
push
and
scas
adc
ljmp
imul
mov
push
repnz
cmpsb
and
jmp
and
in
push
ljmp
jnp
out
ljmp
std
push
fucomi
adc
lahf
lods
stos
mov
sub
or
mov
mov
comiss
stos
aaa
mov
test
mov
fs
pop
mov
adc
ret
sbb
push
push
cmp
popf
pusha
push
push
enter
lcall
sub
and
and
psrlq
mov
es
mov
test
fwait
mov
test
lret
or
daa
dec
or
mov
push
push
or
mov
push
pop
loopne
sub
pop
insb
shrl
mov
dec
push
pop
and
and
mov
dec
test
fcmovbe
dec
mov
cmpsb
cmp
xor
mov
sbb
scas
sub
sub
in
xchg
and
out
and
xchg
mov
mov
or
call
or
adc
inc
or
adc
adc
out
std
xchg
or
shrl
and
mov
test
stos
or
mov
mov
sub
test
jecxz
jnp
push
clc
jecxz
and
int3
movsb
cmpsw
mov
adc
jg
xchg
mov
aam
in
and
arpl
and
fldl
scas
cmp
shll
sbbb
and
and
les
fistpll
aaa
pop
cli
mov
insb
xchg
cmp
mov
mov
loopne
out
loopne
daa
push
js
loopne
mov
test
and
cmp
mov
faddp
les
xchg
imulb
imul
jnp
test
mov
push
ret
idivl
fsubs
sbb
mov
xchg
test
outsl
test
mov
push
je
outsl
fs
cmp
aam
mov
add
lods
stc
inc
scas
mov
cltd
jo
popf
xor
jb
stos
pushf
mov
lods
mov
movsl
mov
cmc
inc
aam
mov
pop
enter
mov
loopne
mov
jb
mov
movsb
frstor
and
mov
add
test
cmpsl
sub
mov
lods
jo
sbb
cmpb
jge
rcll
and
lods
xchg
mov
sbb
mov
cmp
imul
stos
ret
sahf
mov
mov
xchg
mov
nop
and
mov
mov
mov
mov
loopne
sub
xchg
mov
mov
adc
push
fwait
mov
mov
fdivs
ljmp
mov
xchg
jo
ds
shlb
and
push
xchg
jno
push
push
pop
fsubl
mov
data16
in
mov
arpl
and
xchg
mov
mov
jecxz
lods
fwait
sub
test
push
mov
add
or
inc
loopne
pop
cld
scas
aas
xchg
mov
sub
xchg
shrl
cmp
mov
mov
imul
cmpsl
mov
mov
out
adc
arpl
pop
shrl
movsb
jmp
mov
leave
cmpsl
pop
xchg
cmpsb
mov
xchg
mov
imul
mov
push
ljmp
jecxz
idivl
sub
sub
aas
xor
lods
fistpl
scas
cmp
loopne
out
repz
rorb
movsl
out
mov
call
subl
push
out
movsl
imul
xchg
mov
fst
mov
jl
stos
lret
pop
js
fwait
mov
mov
push
xor
icebp
add
jns
mov
mov
sub
insb
in
repnz
mov
mov
data16
xor
add
and
cmpsl
cmpsl
das
jns
sbb
shl
hlt
jp
or
and
lcall
cmpsl
jns
outsb
add
loope
loop
addr16
pop
aam
addr16
mov
mov
mov
cmp
inc
jmp
out
out
pop
xor
cltd
ret
mov
jge
jle
inc
movsl
jns
xor
push
out
fwait
sarl
nop
and
xchg
mov
xchg
cmpsl
push
mov
add
jnp
hlt
cli
data16
frstor
daa
lods
cwtl
popf
xor
and
rorl
or
mov
xorl
and
fwait
sub
data16
add
addb
push
lcall
and
push
push
lods
mov
mov
ja
and
scas
and
and
call
movsl
outsl
sahf
push
mov
movsb
movsb
out
xchg
movsl
es
mov
clc
push
movsl
arpl
cmp
jmp
xchg
mov
adc
sbb
icebp
scas
loope
cs
mov
jl
xchg
mov
in
mov
and
adc
negb
xor
loope
out
orb
push
push
pop
jno
mov
lods
stos
lahf
push
fwait
mov
push
xchg
loopne
dec
mov
pushf
mov
xlat
sub
filds
cmpsl
add
cmp
push
inc
pop
pop
sub
jecxz
pop
mov
pop
insb
add
subb
in
mov
ss
aam
push
test
imul
inc
mov
scas
movsb
mov
mov
jo
sbb
dec
gs
pop
pop
lods
movsl
fcomps
mov
test
mov
pop
test
mov
call
iret
nop
push
pop
lcall
movsl
out
or
pop
call
sbb
mov
inc
xorb
cli
out
stc
sub
mov
stos
outsb
pop
fstpt
xor
xchg
sub
mov
in
rcl
loopne
sarb
movsl
int
outsl
dec
pop
sbb
add
movsb
xor
scas
mov
sbb
mov
adcb
loopne
jmp
jae
and
std
scas
test
sub
push
mov
bound
jmp
and
and
cmpsl
ret
scas
ret
aaa
notl
call
test
mov
mov
aaa
lock
sbb
movsb
jb
xchg
mov
push
mov
mov
test
testl
mov
enter
aaa
xchg
xor
xchg
mov
cwtl
xor
movsl
scas
loopne
cmp
fdiv
jb
cmpsl
aaa
push
insl
pop
stos
mov
xor
cmpsl
lea
je
cltd
repnz
jb
enter
aaa
xchg
xor
or
mov
push
gs
dec
mov
cmpsb
xchg
pusha
mov
test
xchg
mov
sub
mov
out
fsubs
push
lods
jne
add
cmp
mov
dec
dec
andl
movsb
xchg
mov
out
ret
xchg
ljmp
bound
cmp
cmp
pop
cld
jge
jnp
lret
mov
cmp
fidivs
fcomi
popw
ja
cmp
mov
ljmp
jg
xchg
pop
mov
inc
mov
neg
data16
or
shll
popfw
xor
add
pop
jo
and
addb
stos
sbb
lods
inc
movsb
or
mov
test
xor
lods
lods
mov
cltd
mov
and
repz
shld
test
jns
inc
mov
dec
fsts
and
sub
mov
leave
mov
push
add
inc
stos
popf
sbb
jnp
dec
mov
test
lods
popf
movsl
pop
xor
jnp
cltd
push
mov
mov
movsb
cmp
xor
loope
mov
popa
mov
jno
fwait
loopne
fwait
addl
in
mov
les
fwait
inc
rcr
in
cmpsb
cmpsl
mov
adc
mov
mov
push
cld
mov
stos
adcb
or
xor
mov
adc
mov
xchg
out
xor
mov
mov
fistpl
mov
xor
sub
inc
rclb
add
ljmp
jecxz
adc
out
cmp
in
cmpl
mov
iret
test
scas
bound
scas
lods
stc
cwtl
push
test
mov
into
divb
mov
jbe
lret
data16
out
jo
fucomp
xchg
and
mov
das
repz
in
sub
mov
xor
loop
push
maskmovq
testl
sbb
mov
mov
leave
mov
xor
not
stos
pop
sbb
inc
xor
hlt
xchg
or
xchg
hlt
mov
jp
mov
pop
sahf
sub
scas
ret
fnsetpm(287
out
pop
jo
add
fcmovb
cmp
add
lcall
or
mov
dec
mov
adc
imul
jae
mov
mov
pop
out
popa
fwait
pusha
out
sbb
inc
pop
mov
daa
idivb
fistl
ljmp
xor
fimuls
cmp
in
mov
mov
popf
push
scas
mov
mov
cmpsl
js
mov
icebp
sub
lock
add
cmpsl
fwait
repnz
cmp
repnz
xchg
mov
mov
mov
test
scas
jmpw
xchg
xchg
mov
les
daa
jns
or
mov
mov
popf
rorl
popf
cmpb
inc
in
ret
mov
push
popf
xor
xchg
stos
xor
mov
out
movsl
fwait
fwait
lock
outsl
stos
ds
sahf
add
mov
mov
data16
dec
xchg
out
push
jl
xchg
mov
mov
daa
pop
sar
cli
pop
and
mov
fs
mov
jns
xor
xchg
loop
mov
mov
icebp
mov
jnp
cmpsl
mov
or
lods
xchg
in
lods
call
fldenv
in
in
sbb
pop
ljmp
sub
lods
xchg
xchg
sbb
test
movsl
fs
jb
cmp
rcrl
std
xchg
mov
scas
mov
stc
mov
adc
lods
cltd
stos
mov
adc
mov
shll
ficoms
and
jp
mov
out
in
xchg
stos
and
pop
inc
mov
cld
addr16
loop
fisubs
jne
stos
sub
jmp
push
repz
cmpsb
adc
push
xchg
cmpsb
out
iret
and
adc
inc
sub
adcb
repnz
mov
cmpsb
xchg
fwait
mulb
jae
insb
mov
nop
mov
xchg
and
mov
cmpsb
xchg
rcl
mov
mov
movsl
pop
xchg
mov
push
das
outsb
inc
xor
mov
out
pop
xchg
in
lock
xchg
pop
loope
sbb
lahf
xchg
repnz
xchg
fcmovne
aaa
xor
popa
movsl
cmp
es
loope
movsl
scas
movsb
cmp
in
mov
inc
movsl
xchg
jge
xchg
das
xchg
andb
push
xlat
movsl
xor
lret
test
cs
loope
daa
test
jle
fwait
mov
out
pop
in
xchg
divb
mov
jle
scas
mov
lahf
xchg
adc
mov
sbb
scas
cwtl
call
test
mov
movsb
pushf
loopne
ljmp
mov
push
xchg
ss
mov
mov
out
cmpsl
push
popf
sahf
ror
cs
mov
sbb
push
lods
mov
sub
dec
xchg
add
subb
pop
stos
add
or
cmpl
xorb
mov
fsubs
cmp
ret
outsl
sub
das
xchg
jne
cs
dec
pop
pop
lcall
mov
scas
das
test
or
push
std
push
mov
test
mov
leave
adc
mov
mov
data16
and
adc
lcall
pop
addr16
roll
cltd
push
sti
mov
test
and
mov
lods
inc
xor
loopne
lret
int3
cmp
jecxz
push
movsb
or
dec
loope
sbb
pushf
dec
mov
dec
mov
stos
outsl
scas
sar
mov
mov
shrl
orb
push
lahf
xchg
lret
pusha
imul
and
icebp
iret
and
mov
and
mov
adc
xchg
cltd
mov
adc
imul
sub
mov
sbb
mov
cmp
ror
movsl
pop
enter
loop
xlat
xchg
cmp
pop
mov
pushf
xor
pop
test
out
test
sub
sub
ja
mov
movsl
fs
mov
mov
into
mov
test
in
stos
mov
test
sbb
and
test
lret
mov
adc
repnz
cmp
sti
aas
mov
adc
outsb
cmp
out
mov
mov
mov
lock
aas
aam
jne
add
and
ja
xor
movsl
andb
sbb
ljmp
and
push
jecxz
mov
mov
test
test
fs
popf
aas
in
jg
rolb
popa
bndldx
inc
fs
test
mov
mov
clc
sti
pop
lods
movsl
add
fwait
pop
in
mov
loop
fdiv
mov
scas
out
ljmp
adc
imul
daa
loopne
lods
in
xchg
adc
xchg
iret
mov
stos
jnp
out
mov
push
sub
imul
mov
inc
xorb
jmp
xchg
call
mov
lods
repz
out
pop
lods
andl
popf
mov
adc
push
imul
clc
xchg
insb
fldl
xlat
inc
sbb
mov
aaa
mov
pop
mov
cmc
cld
ds
mov
mov
jle
cmp
mov
inc
jnp
adc
scas
mov
movsb
mov
mov
cmp
jecxz
ret
push
push
sub
push
sub
loope
mov
push
or
lods
cmp
ljmp
mov
xchg
test
in
push
data16
ljmp
mov
sub
cs
test
mov
outsb
inc
test
test
jo
shlb
fsubl
iret
and
mov
fwait
jmp
jo
int
jg
sbb
loop
xchg
std
lcall
push
sub
sub
fwait
pop
jo
scas
jb
aaa
cmpsl
push
enter
and
push
sub
imul
mov
bound
aam
mov
mov
jnp
mov
mov
dec
std
xchg
jp
lea
cmpsl
iret
add
ret
mov
jmp
jb
or
int3
and
fwait
aaa
lods
scas
mov
ja
sub
mov
aas
shl
call
cmp
adc
mov
xor
xor
mov
arpl
stos
or
xchg
stos
xchg
loop
xor
sub
shll
mov
cmp
or
mov
testl
sti
std
ss
ljmp
inc
mov
cmpsl
stos
inc
out
mov
cmpsl
push
imul
adc
jnp
mov
insl
sub
out
and
mov
gs
cmp
and
ds
cmp
sub
sub
and
mov
jmp
mov
cs
mov
lea
xor
ja
and
jno
jecxz
call
repz
insb
outsl
mov
out
inc
xchg
mul
mov
movsl
mov
sbb
sahf
sbb
scas
scas
pop
pop
xor
subl
cmp
shlb
ljmp
mov
dec
mov
inc
mov
loop
mov
in
in
mov
sub
in
mov
data16
enter
outsl
idivb
mov
leave
movsl
imul
fisubl
mov
mov
cmpsb
jae
mov
shlb
inc
sbb
adc
frstor
xchg
adc
pop
mov
aaa
jecxz
or
ja
scas
jbe
outsb
aaa
mov
loopne
mov
mov
add
mov
mov
mov
lods
subw
dec
adc
loop
or
xor
and
sub
ret
movsb
inc
cmpsl
sbb
adc
sbb
in
in
addb
pop
sbb
fwait
test
mov
inc
mov
mov
add
ja
out
pop
andl
mov
jle
lods
filds
mov
loopne
cs
push
dec
roll
push
adcb
lods
xchg
lea
enter
xchg
gs
cltd
inc
or
fwait
sbb
jno
mov
mov
fisttpl
jae
pop
ret
jno
fnstcw
mov
bound
daa
sbb
and
icebp
shll
ljmp
inc
pop
jo
test
pop
callw
jle
jmp
inc
cmp
sahf
xchg
les
vphaddwd
sub
test
pushf
or
push
inc
cmpsl
pop
adc
jmp
sub
xor
bound
xchg
cmpsl
xor
push
xchg
sub
jp
mov
sub
ds
mov
les
cmpb
sub
xor
lea
mov
insb
adc
mov
out
lds
or
jae
mov
mov
cmc
jbe
or
scas
xor
cmp
int
pop
mov
cmpb
movl
sarl
jp
mov
shl
nop
test
sbb
mov
dec
cmp
cmp
mov
popf
bound
adc
mov
addl
orb
xor
lock
flds
pop
xor
out
and
add
in
orl
test
mov
fcmovnbe
xchg
fdivrp
testl
ret
pop
push
out
mov
jge
jmp
jmp
cmp
repz
test
push
sub
mov
lea
cmpsb
loop
pop
xchg
xchg
lcall
cs
mov
daa
bound
and
scas
cmc
les
pop
pop
inc
and
and
push
jmp
ljmp
cmpsb
hlt
outsl
dec
repnz
fstl
add
fstps
mov
ljmp
test
fnstenv
inc
and
and
iret
lods
cld
or
or
xchg
test
xchg
pop
cld
cwtl
icebp
mov
data16
xor
cmp
pop
ja
test
mov
mov
dec
leave
push
dec
mov
stos
xchg
cld
sub
cli
test
pop
or
aam
xor
sbb
dec
lret
xchg
sti
mov
mov
ret
loop
loope
lods
loop
or
js
lret
bound
loope
inc
cs
lret
insb
or
add
adc
scas
add
es
or
daa
pop
out
pop
xchg
movsl
inc
push
cmp
mov
rcl
das
mov
jp
mov
add
xchg
xchg
and
sub
jo
out
dec
scas
pop
bnd
iret
ds
cmp
pop
loope
repz
loop
fs
outsl
jnp
mov
xchg
adc
cmp
jb
add
sbb
jge
xchg
sub
out
xlat
movsl
push
sti
lds
cmp
xor
pop
out
push
mov
call
adc
mov
or
adc
sub
ss
or
mov
xor
leave
fwait
fs
out
mov
xchg
mov
outsl
cwtl
ret
vpshlw
mov
loope
add
mov
aaa
xchg
dec
stos
in
cmp
cs
ret
das
xchg
pop
mov
pushf
int3
lods
and
cmp
ret
sbb
hlt
xchg
fnstsw
sub
cmpsl
stos
dec
jbe
sbb
adc
jns
in
mov
sub
mov
xlat
dec
mov
adc
shlb
stos
adc
cmpsl
imul
sbb
testl
inc
or
cli
adc
sti
outsl
mov
rcrl
fwait
arpl
xchg
mov
add
cmp
rcrl
fwait
add
jge
lods
mov
add
loop
stos
outsl
iret
fucom
popf
cmp
insb
add
scas
mov
movsb
cmpsb
or
and
imul
inc
cmpsb
outsb
icebp
stos
into
insl
pop
scas
pop
adc
fimull
mov
xchg
mov
jnp
add
sub
mov
fsubrs
inc
push
out
ljmp
and
sub
mov
mov
test
dec
adc
out
scas
mov
sub
hlt
xchg
test
rcrl
sbb
scas
mov
mov
pop
fwait
sti
data16
iret
and
adc
jl
jmp
scas
test
sub
cmc
adc
jge
js
mov
mov
mov
mov
aas
cwtl
test
jo
ret
mov
mov
out
lods
sub
stos
ret
xchg
out
movsl
mov
jne
test
or
stos
cmp
adc
push
divb
lods
sahf
pop
dec
xor
movsb
xchg
mov
pop
xor
fwait
mov
scas
ret
or
pop
add
icebp
scas
cli
mov
jecxz
repnz
mov
addr16
mov
repnz
fstpt
int
mov
mov
jno
jecxz
lcall
daa
jbe
inc
insl
aas
add
sub
push
mov
mov
jecxz
mov
fs
leave
sub
mov
fs
loop
sub
imul
lods
jmp
mov
outsl
xor
lret
mov
jecxz
cs
imul
test
out
and
cvtdq2ps
push
popa
repnz
add
xorb
cmpsb
inc
add
ret
sti
xchg
fsub
push
les
data16
leave
sbb
xlat
cwtl
jmp
cmp
lret
dec
ljmp
and
cmp
mov
push
mov
xchg
cld
mov
mov
xor
pop
loopne
sub
lahf
adcl
mov
lock
arpl
nop
test
cmp
inc
mov
mov
leave
push
sbb
cmp
mov
arpl
mov
and
scas
and
xchg
stos
test
mov
xchg
mov
add
cmp
int3
jmp
and
and
ljmp
mov
filds
dec
fwait
cli
push
fwait
mov
out
sub
icebp
ss
add
and
pop
ret
aas
arpl
mov
mov
out
inc
mov
out
and
mov
daa
int3
mov
add
mov
and
clc
cwtl
cwtl
pusha
pop
shll
rclb
out
stos
mov
adc
popf
mov
sti
jl
xchg
cmpsb
jecxz
shl
les
jnp
fwait
sub
daa
aaa
jmp
mov
hlt
push
and
mov
fwait
xor
cmp
popl
mov
test
adc
and
rcll
fwait
xchg
mov
movsb
add
mov
pop
cld
mov
mov
movsb
aam
ss
sub
sub
mov
and
sbb
add
in
pop
jbe
mov
xchg
cmpl
mov
and
fisubrl
jb
or
out
mov
hlt
dec
imul
lret
cmpsb
test
out
and
and
fildll
lods
cmpsb
pop
mov
call
push
outsb
lea
adc
test
xor
fstl
mov
sbb
xchg
daa
jno
mov
inc
imul
shll
sub
cmp
divl
test
pop
in
mov
mov
je
xchg
mov
imul
mov
lods
or
outsb
jmp
mov
imul
adc
test
jmp
or
pop
and
mov
negl
iret
sub
pop
insb
push
repnz
scas
mov
and
call
pop
cmpsb
sub
aaa
and
dec
push
divb
push
out
mov
mov
mov
pop
popf
fnstenv
movsb
add
dec
fwait
sbb
cmp
mov
scas
in
cmpsl
loop
test
mov
cmp
jae
sbb
hlt
aas
lea
jae
pop
jl
push
test
pop
cmp
out
dec
pop
pop
dec
fcomip
jo
lods
sbb
test
adc
fldt
cli
icebp
mov
add
xor
lcall
popf
sbb
cmpsl
movsb
in
in
pop
push
xor
ret
scas
aas
fdivrs
out
fisubl
mov
mov
xchg
loopne
inc
mov
push
scas
xchg
mov
scas
xchg
stos
std
movsl
adc
enter
rcrb
and
cmpl
mov
jp
daa
adc
std
xchg
lds
jne
movsb
or
mov
cli
loopne
sti
pop
outsl
lea
int
stc
xor
ds
mov
xchg
cmpsb
push
pop
xchg
sti
imull
sub
repz
imull
cmp
and
aaa
mov
mov
clc
mov
data16
mov
je
xchg
dec
dec
mov
xchg
sbbl
inc
mov
inc
xor
xchg
out
adc
sarb
jp
xchg
bound
mov
jnp
loop
mov
or
jmp
and
and
cmp
add
js
fsqrt
movsb
adc
jl
jnp
pop
jg
mov
mov
mov
push
and
jno
fbstp
push
lock
test
mov
sub
push
call
cli
int3
mov
mov
push
xchg
test
push
daa
sbb
lret
in
es
push
mov
movsb
or
into
sti
xchg
jge
xor
cmp
push
cmpl
dec
cli
vmovdqu8
hlt
daa
lock
insl
aas
sarb
xor
xor
mov
popf
adc
push
mov
out
fwait
jg
stc
add
pushf
sbb
clc
and
test
fstpl
out
mov
push
popa
mov
dec
loopne
mov
mov
jp
lret
xor
fisubl
scas
cli
mov
fdiv
in
pushf
xor
xor
repnz
adc
jno
xchg
cs
push
sub
mov
lahf
push
mov
mov
xor
mov
mov
sti
xchg
lds
ret
sti
nop
adc
cmp
xor
mov
mov
mov
inc
jmp
int
mov
cmpsb
cld
dec
out
sub
and
shlb
shrl
pushf
and
sbb
jecxz
mov
adc
rclb
jb
int
stc
out
add
out
pop
mov
out
clc
scas
test
mov
xchg
leave
fsubrl
int
iret
lcall
lcall
inc
and
mov
dec
lods
call
sub
cmpsl
lret
pop
mov
or
out
jns
dec
sbb
out
and
jo
xchg
mov
lahf
loop
xchg
movsb
dec
xchg
cmpsl
xchg
outsb
adc
insb
movsl
pop
or
sbb
loopne
xchg
movsl
iret
adc
jmp
xchg
lcall
and
inc
and
mov
sbb
jno
jmp
call
mov
xchg
test
xchg
int
and
add
lret
cwtl
inc
mov
mov
data16
xchg
cwtl
shrb
mov
cmpl
mov
inc
out
or
push
scas
scas
and
xchg
lea
pushf
mov
les
sbb
lods
repnz
aaa
cmpsl
sbb
mov
call
adc
shrl
call
insb
test
fmull
xchg
and
aas
xchg
add
daa
adc
outsb
lods
push
out
sbb
sti
dec
mov
push
les
cld
sbb
idivl
or
xor
mulb
sub
out
xor
int3
pop
xor
jne
mov
rdmsr
es
lret
pop
dec
sub
cmp
jl
mov
scas
xor
xchg
movsl
pop
mov
jecxz
pop
dec
popa
cmp
adcb
sbb
jns
mov
pop
test
clc
jbe
jae
cli
andb
sbb
ljmp
push
sbb
push
xor
and
xor
out
sbb
lock
add
cmp
cwtl
push
inc
sub
mov
jb
sbb
popf
sub
jo
das
rorl
add
adc
negb
cmp
jmp
mov
adc
xchg
cli
mov
test
loop
cltd
add
cwtl
outsl
stc
lods
sahf
test
mov
out
xchg
xchg
mov
mov
mov
sbb
inc
lahf
adc
inc
aaa
fsubl
ljmp
movsb
mov
sbb
sub
popa
ss
enter
xor
bound
stos
mov
fnsave
jae
mov
fnstsw
inc
sahf
outsb
mov
sbb
push
sahf
inc
cmp
xchg
mov
mov
xchg
iret
lods
out
cmp
sahf
imul
call
ljmp
mov
add
aaa
repz
stos
imul
in
lret
push
sub
dec
repnz
mov
icebp
fisttps
imul
and
xchg
add
pop
jb
js
or
and
sub
or
inc
movsl
lods
mov
dec
popf
xchg
mov
nop
test
add
sub
pusha
faddl
jmp
in
movsl
inc
cmp
call
cmpsl
out
shrb
mov
aaa
insl
ss
fdivrs
lods
xchg
sahf
push
mov
jp
das
adc
dec
adc
add
aaa
mov
inc
cli
inc
scas
cmp
xchg
push
mov
xlat
lea
stos
xchg
addb
add
lds
xchg
mov
aaa
cmp
movsb
mov
scas
dec
mov
lretw
ret
add
mov
mov
lods
stc
loop
add
leave
imul
scas
pop
popf
shll
xor
sbb
movsb
scas
mov
xchg
arpl
out
push
jecxz
pop
stos
cltd
jne
jbe
lahf
push
cmp
out
sbb
test
scas
sbb
mov
cmpsb
fsub
imul
jb
push
idivb
adc
out
lcall
sbb
fwait
push
mov
arpl
cmpsb
xlat
das
xor
bound
cli
mov
push
and
arpl
jmp
sub
xor
popa
cmc
and
ret
movsb
inc
and
jmp
andb
and
or
xchg
sub
test
in
out
and
and
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
cmpsl
imull
aaa
in
mov
repnz
cs
pop
xor
cmp
mov
lds
cmp
test
mov
ja
lds
jg
test
mov
fildl
xor
mov
aaa
pop
les
jo
or
stc
cmpsl
xor
mov
cmp
out
pop
jge
ficompl
and
push
inc
cmpsb
sbb
lods
clc
jl
lods
popf
sub
insl
push
test
jecxz
das
push
call
and
mov
out
ss
and
inc
imul
and
lods
rcrl
call
addb
gs
movsl
daa
in
and
cmp
in
jecxz
sub
inc
sahf
insb
fdivl
scas
stos
xchg
cld
movsb
add
nop
fldl
pop
xchg
jbe
lods
or
cmc
ljmp
scas
xor
push
out
adc
jbe
cmpsl
and
dec
insl
xor
movsl
push
or
fstpt
aam
mov
jb
mov
cwtl
repz
test
jnp
sbb
xchg
xor
push
xorb
and
mov
cli
aam
daa
mov
sub
movsl
mov
xchg
inc
icebp
cmp
mov
push
scas
xchg
mov
pop
leave
xchg
cmpl
out
add
mov
sbb
sti
add
inc
insl
aas
out
jp
outsl
decl
lods
test
cwtl
sub
shlb
out
loopne
es
and
jmp
inc
mov
shll
mov
xchg
jns
mov
mov
mov
in
mov
mov
fwait
dec
pop
cs
xchg
cmpsb
and
cmp
pop
iret
push
or
shll
std
cmpsb
scas
jo
xor
push
outsb
sahf
mov
test
pop
and
std
cmpsb
xlat
jp
loop
andl
shlb
fadds
jb
arpl
cmp
lods
xor
pusha
xchg
fs
dec
fnstsw
xor
outsb
mov
out
addr16
xor
mov
mov
xchg
cmp
xchg
mov
lret
stos
jmp
pushf
jmp
lret
or
mov
or
stos
xchg
xor
or
pop
scas
lahf
add
xor
and
or
jne
mov
jns
sti
dec
ljmp
fidivrl
cmp
sub
lock
lcall
lahf
in
jo
inc
adc
mov
inc
cltd
cmpsb
test
mov
pop
xchg
add
dec
je
sub
test
mov
pop
je
xchg
scas
inc
nop
and
mov
fsubl
push
dec
ja
mov
mov
cld
sbb
lods
pop
sub
sbbb
mov
sub
add
mov
dec
sti
lret
jmp
cld
ss
xchg
mov
es
ja
mov
xchg
sbb
in
popf
sub
popa
rcll
je
sbb
dec
lea
outsb
scas
mov
mov
int
shll
cmpsl
adc
addr16
mov
add
aam
ja
rorb
sub
in
and
and
sbb
mov
jb
repnz
rol
mov
bound
mov
lcall
mov
dec
mov
aam
inc
and
bound
es
xchg
leave
xchg
ret
out
std
fnsave
or
das
lahf
int
lcall
sub
xor
pop
test
mov
out
push
aam
lahf
stos
sub
pop
in
lods
jbe
sub
addl
jno
fstps
fistps
add
fs
push
fidivrl
fimull
mov
xchg
call
mov
adc
xor
and
push
out
mov
rcrb
stos
ret
sub
imul
outsl
push
div
idivl
dec
out
dec
xchg
imul
imul
std
or
sub
fwait
hlt
lods
cli
lock
das
aad
sbb
adc
xchg
pusha
mov
xor
dec
ss
bound
dec
arpl
mov
daa
fs
mul
push
xchg
and
insb
add
fistpl
test
or
sbb
and
mov
int3
cmpsl
sub
mov
addl
hlt
stos
fcompl
cwtl
mov
mov
fwait
lret
jmp
sub
sbb
ljmp
movsl
push
mov
nop
daa
inc
pop
out
jp
les
push
jno
daa
int
and
stos
mov
or
movsb
mov
shrl
stos
stos
mov
in
add
leave
aas
call
xchg
inc
cli
jg
mov
add
push
add
dec
scas
and
mov
pop
add
scas
decl
in
insl
movsl
aad
mov
movsb
push
mov
sbbb
addr16
or
cmp
in
dec
xor
sbb
stos
sub
fs
dec
js
mov
enter
es
clc
mov
addr16
and
aas
and
cmp
fldl
xor
loope
movsb
fbstp
or
imul
cmc
xchg
xchg
fs
jne
ret
jo
scas
lcall
lahf
popa
push
fs
popf
or
jo
sbb
das
sub
lock
aas
jnp
pop
idiv
mov
jns
shrb
hlt
jecxz
cmp
mov
jnp
inc
lahf
in
lock
popf
mov
scas
cwtl
cltd
inc
stc
mov
fwait
xchg
inc
mov
jne
stos
mov
scas
loop
mov
addr16
mov
push
call
loopne
cmp
mov
mov
xor
adc
pop
and
aam
dec
sub
xor
repnz
cmp
lcall
aad
imul
mov
int3
or
mov
push
inc
ret
data16
or
sarl
jmp
cmp
fldt
outsl
lods
in
cmpsl
mov
push
sub
pop
cmp
mov
lcall
lods
mov
jp
outsl
pop
stos
daa
cli
cltd
dec
dec
lcall
jnp
pop
mov
enter
or
imul
mov
pop
mov
mov
sub
jb
mov
loopne
push
cmp
xchg
dec
xchg
fsubs
movsl
sti
ljmp
aaa
loopne
push
sbb
loopne
sar
je
pusha
jns
sbbl
or
mov
sub
mov
popa
iret
pop
in
dec
aam
das
test
scas
or
insb
sti
mov
adc
mov
and
es
sub
mov
and
cs
sub
mov
jne
push
pushf
fsubs
mov
test
inc
sbb
xor
mov
jl
cmpsb
lahf
fwait
in
sar
xchg
shll
stos
in
and
pop
and
imul
outsl
jl
js
cmp
xchg
ljmp
imul
push
mov
orl
mov
sub
fiadds
mov
pop
lea
jl
pop
dec
mov
lret
daa
fs
dec
adc
dec
jl
movsb
fbstp
js
mov
push
cld
jbe
add
add
fwait
and
xor
sahf
cwtl
xchg
xchg
xor
cmp
xchg
loop
add
ret
pop
pop
adc
mov
xlat
test
stos
jecxz
aam
daa
lea
movsl
lret
out
cmc
push
pop
mov
lahf
scas
cmp
out
aas
movsl
mov
jge
lcall
cs
pop
mov
fdivrl
pop
jb
mov
mov
xlat
or
aaa
sub
bound
lcall
xlat
pop
xor
and
es
andl
and
imul
inc
adc
add
xorl
ss
mov
stos
and
xor
sarb
mov
mov
sub
outsl
je
mov
scas
add
ret
imull
rcrl
sbb
mov
jne
andb
mov
scas
stos
push
push
into
fnstsw
sti
ret
mov
cmp
cmp
sbb
sub
mov
inc
bound
xor
cs
shlb
daa
ret
int
push
mov
cwtl
push
xchg
mov
and
add
out
sub
stos
mov
in
orl
sub
xchg
sbb
fldt
push
test
loop
mov
mov
jae
adc
sti
lcall
in
fs
jno
pop
sub
pop
sub
inc
jbe
out
cltd
and
mov
and
ret
cs
jle
repnz
inc
int3
dec
adc
xchg
lret
jmp
je
ret
aas
mov
mov
ret
fs
rcrb
mov
sub
icebp
mov
mov
sahf
stos
fsubl
es
xor
mov
sub
stos
outsl
cmpsl
mov
xor
dec
lods
adc
in
mov
mov
mov
dec
sub
cmpsb
and
fstpt
les
test
mov
or
and
xchg
dec
and
movsb
orl
mov
mov
xor
cltd
imul
cld
xchg
and
mov
and
mov
fdivs
sub
mov
loop
push
adc
push
aad
lahf
xchg
movsl
jmp
cmp
cmpsl
cmc
mov
mov
mov
sahf
test
std
test
lcall
mov
mov
daa
daa
mov
mov
mov
pop
jp
sbb
es
les
in
out
pushf
pop
bound
mov
in
and
or
sub
call
jo
in
lea
loopne
test
aam
or
loope
sti
pop
sbb
mov
inc
scas
xchg
dec
adc
int
sbb
test
xchg
mov
ss
mov
imul
out
aas
stos
xchg
lea
lock
mov
test
mov
xor
mov
and
in
mov
cs
mov
pop
sub
hlt
cmp
sbb
jb
sti
adc
out
cs
jns
adc
cmpsb
pusha
arpl
leave
sub
aaa
scas
out
movsl
sub
and
sub
out
xor
and
jbe
insb
sbb
cwtl
fnstsw
mov
subl
xor
stc
xor
sub
fimull
roll
testb
aaa
mov
mov
stos
ret
mov
mov
xor
idivb
ret
mov
jbe
lahf
dec
cmp
sub
or
cltd
add
das
stc
pop
scas
mov
cmpb
mov
inc
ret
xchg
scas
add
xchg
data16
jmp
mov
xchg
iret
aam
test
mov
pop
mov
xchg
daa
call
push
iret
jg
dec
imul
dec
mov
mov
jmp
cmp
mov
orl
aad
xchg
cmp
daa
loope
pop
test
and
jb
xchg
xlat
cmpsl
fiadds
dec
test
push
jl
icebp
mov
xorb
mov
pusha
test
call
add
sub
xor
jp
lahf
sub
add
mov
mov
insb
imul
jmp
out
test
loope
and
jbe
adc
aam
inc
mov
icebp
mov
mov
and
xor
mov
pop
mov
sahf
sub
ret
fidivrs
movsb
jle
and
pop
and
or
in
dec
mov
mov
jp
xor
cmc
movsb
or
mov
repnz
and
sub
mov
scas
aas
pushf
xchg
jg
data16
dec
sahf
push
fnstenv
pop
lcall
scas
mov
mov
dec
mov
movsl
movsb
loopne
jle
lods
xchg
mov
inc
dec
jbe
movsb
mov
mov
jmp
popa
iret
aas
lret
stc
push
inc
shrl
pop
rcll
sbb
xchg
or
cmpsl
pop
xchg
rclb
repnz
dec
mov
outsl
lods
stc
inc
add
jne
scas
icebp
sbb
sub
sub
add
jne
stos
mov
pop
jg
inc
les
xor
lret
out
js
mov
div
pop
adc
loope
mov
mov
stos
jno
mov
test
xorb
in
jne
and
shrb
call
and
sbb
les
lods
push
xchg
gs
sbb
push
mov
lret
scas
lcall
cld
xchg
movsl
shrb
jae
popa
stos
and
call
jmp
mulb
adc
xchg
mov
xor
mov
push
pop
test
test
push
jp
sub
mull
xchg
lods
and
cltd
test
stos
sub
scas
mov
movsl
ret
fwait
dec
lods
movsb
inc
inc
jne
xchg
mov
and
jl
out
sbb
loop
inc
xchg
jl
std
push
divl
bswap
movsl
inc
js
sub
lcall
les
stc
pop
cmp
lcall
mov
mov
int
rcrl
mov
mov
inc
and
inc
pop
add
lcall
test
bound
clc
jb
adc
push
es
cmp
movsb
sti
outsb
sub
das
js
movsb
and
or
mov
and
fbld
cmpsl
fwait
sub
insl
cmpsb
das
sbb
cmp
in
mov
and
dec
sub
sbb
pop
mov
pop
data16
cltd
outsl
mov
push
lea
jg
mov
inc
mov
stos
push
cmc
adc
xchg
ja
push
add
test
movsl
mov
xchg
ja
and
popf
jle
and
cmp
adc
out
and
pusha
test
jo
pop
xchg
outsb
mov
inc
xchg
daa
mov
rolb
movsb
mov
sbb
cmpsl
sbb
andb
call
xchg
imul
cmp
pop
mov
pop
sub
into
push
jmp
sub
jmp
outsb
jnp
adc
adc
pop
bound
fiadds
add
push
mov
das
and
scas
outsl
loop
mov
cmp
out
sbb
ret
inc
outsb
add
cmp
div
cmp
sbb
mov
push
movsl
fistps
mov
bound
sub
stc
repz
sub
fwait
sub
jge
les
mul
pop
cld
add
cmpsb
mov
adc
js
xchg
and
sti
mov
push
xor
cltd
add
add
add
mov
lcall
push
mov
testb
mov
sarl
test
mov
pop
mov
fists
aam
shrb
dec
adc
xor
xor
mov
mov
stos
imul
inc
mov
out
xor
orb
xchg
jns
pop
lods
movsl
inc
inc
push
out
icebp
loopne
sbb
mov
mov
enter
mov
xadd
xchg
fsubs
sub
xchg
jae
xchg
in
inc
xchg
mov
call
nop
dec
sbb
jle
scas
rorb
mov
mov
int
sbb
test
lret
in
cli
std
mov
mov
push
scas
cld
xchg
outsb
sub
fisubrl
jne
xor
leave
imul
in
xlat
int3
pop
fiadds
fcomp
ss
mov
sub
imull
call
sub
test
fcomi
jl
jle
bound
cmpsb
push
in
mov
imul
popa
and
and
in
and
xor
mov
bound
stc
and
stos
movsb
test
stos
sbbb
es
out
fistpll
cmp
stos
ljmp
cs
mov
xchg
mov
call
mov
mov
jnp
push
xchg
push
mov
lods
ds
imul
push
xchg
push
cs
loope
add
ret
inc
test
inc
into
inc
test
movsl
jecxz
and
movsb
pop
call
add
ja
mov
inc
cmpb
inc
xchg
inc
mov
sti
inc
xchg
cmp
popf
xchg
add
pop
jae
mov
or
and
scas
iret
push
test
insb
mov
dec
adc
sti
cltd
adc
adc
mov
lahf
mov
xor
insl
sub
sbb
push
sub
loop
loopne
mov
mov
cltd
int3
push
sub
xchg
test
stos
loop
mov
cs
mov
mov
jno
lret
dec
stos
xor
sub
jle
sbb
dec
jg
dec
cmp
movl
jmp
inc
mov
mov
repnz
xor
jno
in
and
out
sbb
out
mov
fnstsw
push
ret
and
and
add
nop
in
insb
xchg
xor
xchg
lock
cmp
mov
jecxz
sub
pop
and
dec
call
movsb
fucom
mov
add
mov
std
xchg
jp
sbbl
in
cmpl
or
out
and
call
in
xor
and
or
lret
sub
jmp
pop
mov
xchg
es
jo
call
mov
mov
arpl
pop
pop
mov
mov
std
iret
stos
mov
sbb
jge
sub
mov
sbbb
jp
mov
sub
pop
out
cwtl
push
sbb
mov
jle,pn
jno
inc
out
movsl
outsl
mov
cmp
call
pop
push
push
fnstsw
scas
dec
jl
bound
outsl
and
pop
imul
mov
xchg
movsl
loop
mov
sbb
out
xchg
sarb
lret
insb
mov
or
pusha
adc
mov
mov
shlb
jg
loop
iret
imul
iret
mov
popl
pop
incl
sbb
outsb
add
mov
test
mov
sbb
mov
jbe
pusha
insl
sbb
stos
xchg
fs
lret
push
jnp
insl
mulb
scas
jbe
faddl
push
mull
lods
jae
aad
push
test
arpl
call
xlat
mov
ja
nop
popa
adc
ds
lock
dec
push
jge
mov
jb
mov
mov
cmp
stos
ficompl
inc
cltd
or
pushf
adc
cmp
lods
push
jo
mov
movsb
loop
enter
cmp
add
mov
adc
fmull
sub
dec
movsl
sbb
out
lods
movsb
sbb
cmp
call
ds
pop
test
popf
cltd
ss
test
arpl
ss
xor
js
xor
or
dec
hlt
clc
cmp
call
add
cmp
imul
mov
fldenv
or
mov
lods
push
std
ret
jnp
or
jle
outsl
xor
pop
pop
xor
or
sbb
filds
fadd
stos
adc
sbb
sub
push
adc
fidivs
pop
jbe
mov
or
and
outsb
pop
mov
popf
mov
cmpsb
and
mov
ljmp
or
je
cmpsb
out
enter
mov
pushf
mov
movsb
dec
sub
mov
push
fwait
xor
lods
jne
test
divb
and
scas
mov
jno
cltd
repz
int3
pushf
test
xor
or
jmp
add
push
inc
mov
mov
incb
fwait
out
jmp
ret
mov
or
cmpsl
scas
mov
test
push
jbe
xor
mov
pop
gs
je
scas
loopne
lods
xor
mov
sub
sbb
mov
mov
movsl
loopne
mov
or
cmpsb
xchg
and
fwait
and
lds
pop
out
mov
cld
mov
push
in
loopne
and
mov
movsb
add
mov
loopne
ret
loop
out
pop
add
inc
cli
mov
push
ss
xchg
mov
add
xchg
mov
std
jle
fs
mov
out
jecxz
dec
js
pop
xchg
lret
or
fwait
and
add
xchg
mov
ret
scas
ss
fbstp
and
pop
aas
ss
push
jp
dec
jmp
push
xor
cltd
and
push
cmovae
pop
and
jl
scas
sbb
ret
push
jmp
jp
mov
insl
jbe
stos
cmp
lea
sbb
jns
xor
test
jmp
mov
or
adc
jmp
mov
xlat
cmpsb
mov
dec
xchg
test
daa
xchg
shlb
fs
inc
and
sbb
or
test
mov
aaa
and
sbbb
sar
lock
sbb
pop
mov
sub
xchg
mov
inc
mov
in
xor
jecxz
sub
jge
or
in
daa
and
mov
andnps
push
xchg
xchg
rolb
daa
decl
notb
sbb
xor
cmpsb
icebp
sub
fsub
and
repz
and
add
cli
adc
fisttpl
jbe
int3
pop
lock
dec
jmp
in
xchg
push
xor
and
cmp
shl
cmp
mov
adc
jmp
outsl
mov
push
pop
jle
aam
roll
or
fisubrs
add
pushf
xor
inc
add
mov
or
adc
int3
inc
and
add
inc
iret
lret
int3
mov
push
addl
scas
bnd
mov
imul
mov
sbb
insb
and
popa
out
stos
ret
es
sbb
pusha
push
xchg
lahf
jecxz
outsb
dec
fiadds
cmp
and
and
outsb
xchg
test
and
out
cmp
cmp
bound
inc
xchg
movsb
push
jecxz
imul
jno
data16
xchg
bound
lcall
cld
fnsave
jp
mov
lahf
xor
mov
insl
imul
test
test
mov
repz
loopne
mull
sbb
ret
out
fildll
jnp
mov
loope
cwtl
out
jp
pop
add
divl
iret
push
ret
outsb
push
fiadds
test
lahf
adc
mov
push
mov
dec
repz
jo
jbe
dec
push
push
ljmp
mov
cltd
mov
hlt
mov
out
lods
into
mov
into
movsl
popf
test
xchg
mov
cmp
mov
mov
xchg
test
out
xchg
stos
loop
imul
lahf
in
adc
jnp
cmp
mov
mov
mov
mov
loop
cmpsb
les
pushf
ljmp
mov
xchg
mov
ds
mov
cmp
cmp
cli
mov
sarl
xchg
fwait
jp
pop
cmp
adcb
lea
nop
jl
ljmp
xchg
in
cmpsb
mov
scas
mov
mov
xchg
cmpsl
shll
mov
test
fcomip
lahf
mov
cmp
mov
mov
and
adc
je
inc
sarl
cmp
scas
mov
mov
movsb
lahf
pop
ljmp
and
jns
push
xor
test
nop
mov
std
stc
fcoms
jae
mov
pop
push
push
and
sar
popa
mov
inc
aam
sbb
je
xlat
jns
inc
add
or
add
clc
ficoms
mov
mov
loope
lods
in
aaa
cmpsl
lods
insl
aam
xchg
in
ljmp
mov
aaa
lods
out
xchg
jo
cmp
subl
sbb
lcall
adc
xor
movsl
xchg
inc
cmp
dec
aaa
xor
fs
push
ror
outsb
push
stc
into
stc
cmpsl
and
jnp
leave
push
sub
lds
sub
outsl
mov
cmpsl
mov
fidivs
cltd
push
cmp
scas
lret
sub
jmp
cltd
repnz
sbb
stos
fcmovu
stos
aaa
fisubrl
mov
stc
dec
int3
leave
out
loopne
jno
out
hlt
push
lahf
jnp
mov
xchg
mov
roll
scas
popa
iret
mov
and
loopne
hlt
cmpsl
in
fbld
xor
in
cs
mov
adc
cmp
test
imul
pop
and
jg
and
add
mov
imul
cmp
lret
mov
jp
arpl
add
data16
jne
jo
das
pop
cld
mov
xchg
mov
out
mov
adc
iret
data16
loope
sbb
cmp
mov
sub
and
jno
inc
iret
jbe
cmp
fcmove
test
xchg
fwait
or
mov
stos
push
mov
clc
mov
push
dec
fimuls
jl
bound
jae
data16
sub
mov
xor
xor
popa
fwait
mov
xor
mov
mov
jecxz
cmp
mov
test
pop
and
xor
add
jmp
movsb
stc
mov
outsb
sarl
xchg
test
cmpsb
xor
adc
jo
sub
sub
test
sbb
mov
nop
mov
outsl
loopne
aad
movsl
mov
xchg
sbb
notb
mov
jmp
loopne
subl
ja
mov
flds
cmp
add
les
andb
jecxz
loopne
aaa
mov
daa
out
ds
jge
leave
out
lahf
movsl
insb
mov
jle
test
mov
scas
ja
mov
fwait
dec
mov
mov
and
mov
dec
xchg
mov
adc
les
push
lea
mull
iret
ret
fbld
mov
aad
test
mov
xchg
jb
int
inc
call
out
andb
push
mov
or
mov
stos
iret
lock
push
xchg
xchg
fxch
pop
inc
mulb
imulb
mov
xor
mov
out
mov
loop
and
pop
xchg
imul
adc
push
out
movsl
popa
pop
jne
out
in
xor
cmp
jb
in
xor
add
jb
pop
lods
fistps
addr16
lahf
fcmovnu
push
pop
test
fsub
sbb
addr16
pop
bound
out
lods
inc
sub
cmp
aaa
xor
dec
jns
cltd
cwtl
jecxz
pop
gs
hlt
loopne
ret
outsw
inc
fldl
mull
pop
cmp
xchg
pop
jb
decl
cmp
stos
aad
ja
cmpsb
lea
push
xchg
push
ret
aam
mov
or
or
push
pop
inc
hlt
mov
xor
gs
sub
or
mov
movsb
ret
pop
mov
mov
mov
stos
fisttpl
mov
cwtl
in
xor
mov
or
add
sbb
dec
dec
adc
cwtl
popa
dec
inc
or
lret
repnz
mov
jb
mov
fcomip
insl
mov
jle
add
pop
shrl
cld
adc
push
leave
ljmp
out
push
imul
dec
mov
movsl
cmp
cmp
mov
add
push
bound
jmp
push
mov
mov
divl
idivb
ret
sub
ret
xchg
mov
lods
ret
add
sbb
insl
or
dec
mov
mov
cmp
shrl
sbb
push
jne
mov
je
and
stos
cs
and
pusha
adc
sub
push
xchg
scas
call
dec
test
mov
mov
daa
and
movsb
sti
call
pop
cmpsl
jbe
add
scas
scas
xchg
inc
push
jae
mov
in
pusha
cwtl
pop
cmp
or
imul
fadds
leave
adc
jno
mov
mov
push
repz
aam
push
sbb
pop
bound
mov
mov
mov
stos
xorl
cmp
cmc
enter
jl
sub
jecxz
das
mov
mov
pop
jl
inc
and
sti
movsb
cmc
mov
lea
add
test
mov
mov
jle
repnz
fwait
sbb
mov
fstpt
fiadds
jne
jge
cmpl
mov
mov
sbb
ret
mov
mov
mov
scas
jecxz
xchg
enter
icebp
pop
and
mov
xchg
mov
imul
mov
pushf
pop
shll
sarl
enter
popf
lcall
add
jo
aad
jne
aas
out
jb
je
or
outsl
mov
push
scas
mov
lds
or
loopnew
push
in
or
out
aaa
sub
add
add
es
xor
pop
pop
in
lods
movsl
adc
mov
cmp
stos
cmp
mov
test
mov
bound
jp
inc
sub
pop
mov
and
jp
add
in
cmc
rolb
dec
mov
scas
cmpsl
xor
or
pop
mov
dec
imul
dec
add
imul
jo
xor
lcall
mov
and
inc
sahf
subb
inc
mov
stos
ja
pop
mov
fwait
ret
movsl
shll
mov
aaa
mov
or
fiaddl
aas
mov
mov
fmulp
cli
xchg
inc
and
mov
or
sub
mov
sbb
scas
ret
cmp
xchg
fsubrl
insl
sub
mov
or
inc
xchg
out
outsb
mov
imul
pop
mov
mov
mov
mov
mov
cmp
leave
testb
stos
jge
mov
mov
int
mov
lock
push
test
cli
cmpb
push
or
shrl
ret
sub
push
xor
pop
add
fs
cmpsl
call
popf
add
xchg
mov
repnz
popa
sbb
mov
mov
sub
call
popf
out
dec
int
pusha
and
jae
call
mov
mov
add
jecxz
mov
add
xchg
push
xchg
dec
je
mov
rorl
fldl
scas
bound
test
pop
mov
ljmp
out
push
inc
mov
add
mov
mov
xor
cltd
mov
inc
and
ret
sub
jl
inc
movsb
stos
ret
adc
xor
jne
mov
cmp
jmp
jb
push
sbb
lahf
jnp
fbld
mov
xor
and
ja
inc
ljmp
hlt
xor
sub
into
and
jno
add
scas
push
js
mov
xchg
fdivl
mov
and
mov
rclb
or
out
mov
add
cld
mov
add
sbb
jbe
sub
fistps
xor
push
mov
xchg
fsubl
scas
xchg
cmpsl
sub
push
add
cmpsl
pop
xchg
out
pop
inc
or
push
mov
mov
mov
sub
pop
mov
and
addr16
jge
jnp
mov
xchg
cmp
test
xchg
sbbl
xor
xlat
cmpsl
ds
ret
imul
inc
jno
adc
ret
cmpsl
movsl
lcall
sub
dec
out
pusha
xor
pop
xchg
fs
enter
scas
and
leave
popa
jno
or
ljmp
scas
pusha
popa
ret
xchg
lcall
sub
inc
in
ret
sbb
pop
push
std
andl
test
fwait
and
jns
out
mov
outsb
sub
mov
aaa
inc
mov
ficoml
movsl
jp
sub
mov
data16
in
xchg
mov
insb
add
xchg
adc
sub
stos
orl
xchg
roll
iret
lods
mov
lds
inc
fwait
repz
or
popf
cmc
je
cmpsb
cmp
subb
cmp
or
xor
cmpl
pop
mov
mov
in
xor
cmpsb
sbb
jo
mov
jecxz
subb
scas
mov
shlb
pop
movsl
lods
add
fs
sbb
icebp
push
ljmp
mov
loopne
ljmp
faddl
add
and
sbbl
jmp
xor
adc
mov
popa
cltd
mov
imul
mov
xchg
rcr
imul
sbb
sub
fucomi
xchg
sbb
xchg
mov
lahf
sub
icebp
mov
inc
push
cmpsl
xchg
mov
lods
add
aaa
cmpl
cmpsl
xor
add
and
dec
rcl
jmp
sbb
sub
mov
out
fdivrs
mov
mul
xor
outsb
insl
cmpsb
movsl
and
and
and
mov
mov
icebp
jb
xor
xorb
leave
pop
mov
scas
mov
lcall
jo
in
mov
ds
leave
dec
push
mov
and
loop
xchg
and
mov
mov
cmpsb
pop
xor
add
aaa
jle
cmpsb
mov
call
mov
jns
mov
jo
les
and
movsl
xchg
in
mov
repz
imul
imul
movsb
lahf
mov
mov
ja
or
push
mov
fmull
mov
mov
inc
fsubrl
in
stos
or
repz
mov
pushf
loopne
pop
xchg
xchg
lods
xchg
mov
out
add
in
xor
out
mov
mov
mov
dec
mov
shll
pop
sahf
cmp
stos
movsl
pusha
mov
test
lcall
test
loopne
out
mov
movsb
movsb
out
xchg
ljmp
push
lcall
push
in
cltd
add
mov
in
sub
ret
mov
push
pop
ss
fistpll
push
and
mov
mov
subb
pop
sub
jnp
mov
and
sub
enter
mov
jp
mov
xchg
sbb
clc
cmp
clc
sti
out
pop
gs
mov
xor
xlat
mov
xchg
push
add
leave
scas
and
pop
stos
das
orb
xor
jecxz
div
and
mov
xor
mov
daa
test
or
xor
pop
pop
mov
or
dec
ljmp
in
or
fsubrl
test
test
add
mov
inc
sbb
rcrl
mov
hlt
mov
loop
sub
fs
faddl
mov
pop
cmp
fldt
iret
mov
int
pop
scas
and
fstpt
enter
jne
xchg
andb
jp
inc
movsl
mov
stc
and
jne
ja
mov
cli
iret
stos
or
push
push
stos
dec
icebp
fcmovbe
mov
add
divb
fwait
test
icebp
scas
pop
add
jbe
jg
sahf
jno
mov
out
lock
lahf
push
sbb
test
pop
inc
daa
jae
in
sub
pop
adc
sub
xchg
fwait
jbe
xor
xor
add
repnz
scas
aam
or
cmpsb
mov
adc
jle
cmpsl
out
int
add
mov
jecxz
div
movsl
lcall
sub
ljmp
cmp
das
push
xor
clc
sbb
aas
dec
jno
mov
xor
int3
sub
mov
dec
hlt
and
xchg
xchg
cmpsl
inc
add
mov
jg
push
dec
pop
add
divb
popf
sbb
push
sub
cmp
or
or
shlb
mov
jge
int
test
and
repnz
aad
mov
and
mov
xor
sti
and
out
insb
jecxz
scas
nop
mov
jmp
add
stos
icebp
push
adc
mov
jmp
mov
sub
ss
mov
and
or
fmuls
test
mov
mov
inc
cwtl
sub
loop
push
mov
insl
mov
inc
lods
addl
nop
movsb
add
xor
mov
loopne
movsb
call
outsl
shrl
jno
int
or
scas
outsl
shrl
ss
and
mov
pop
mov
add
call
mov
test
push
and
fcmovnb
cmp
and
andb
sub
movsb
repnz
popf
loopne
ja
or
adc
mov
mov
cmp
in
cmp
inc
sub
fwait
jge
and
adc
out
ret
xchg
and
int3
int
movsb
xchg
int
lea
cli
sub
adc
pop
jl
inc
out
xor
int3
or
outsl
scas
mov
je
testl
clc
adc
push
mov
jmp
movsb
mov
stos
cmp
data16
and
cmp
jne
xchg
not
sbb
sub
mov
or
daa
inc
and
mov
cmp
adc
jle
lds
mov
pop
sbb
cmp
test
dec
jecxz
mov
lods
xchg
mov
xchg
mov
add
mov
dec
and
bound
hlt
and
and
pusha
jns
call
jl
xchg
mov
sbb
sbb
test
inc
mov
xor
xor
add
test
insl
outsl
sbb
loopne
sub
cltd
xchg
stos
xchg
in
and
mov
call
sub
mov
mov
dec
cmp
and
sub
sub
adc
mov
sub
sub
mul
mov
addr16
adc
mulb
scas
mov
add
fidivrs
cmpsl
das
push
sub
xor
add
cld
sar
push
xor
cli
lea
imul
or
cli
lcall
scas
jg
mov
inc
mov
lahf
mov
movsl
int3
loopne
in
sbb
movsb
mov
mov
movsb
mov
push
and
mov
cmp
mov
rcll
mov
repnz
mov
pop
mov
or
mov
mov
sub
pop
ljmp
in
fwait
xor
lcall
out
and
add
or
dec
stos
ret
push
sub
dec
mov
mov
scas
andb
or
pop
daa
cld
adc
les
out
lret
ficompl
and
cmp
stos
ljmp
and
push
stos
mov
and
shlb
movsb
repnz
out
push
and
sub
jmp
dec
pop
out
subl
ret
movsl
test
fbstp
fucomi
jmp
lcall
es
daa
mov
sub
cmpsl
addr16
xchg
fstpt
outsl
jle
movsb
jno
pusha
and
mov
or
xchg
and
test
and
xor
outsb
pop
xchg
xor
in
fsub
sub
sbb
and
and
mov
test
adc
push
movsb
negb
and
adc
scas
mov
test
xchg
sbb
movsb
mov
les
stos
out
mov
or
out
subb
les
xchg
stos
dec
xor
fwait
xlat
movsl
fnstsw
push
mov
dec
xchg
sub
or
jns
add
icebp
jmp
icebp
in
mov
cmpsb
cmp
imul
push
popf
mov
popa
sub
out
push
jo
in
pusha
sbb
mov
ret
enter
test
pop
in
call
sbb
cwtl
and
test
xchg
xor
ljmp
subb
mov
stos
lods
movsb
in
or
xor
inc
jp
sub
mov
lea
lahf
dec
dec
mov
cmp
popf
and
sub
pop
ss
jecxz
cwtl
filds
lahf
or
lods
dec
ret
insb
mov
or
sub
lock
xchg
jbe
daa
sbb
pop
xor
and
scas
hlt
das
push
xchg
and
adc
mull
sbbl
pop
jmp
popa
test
and
outsl
cld
xor
pop
aas
mov
xor
sub
popa
cmpsb
sbb
scas
mov
sub
push
test
inc
stos
and
movsb
leave
and
test
das
inc
in
insb
outsl
popa
lods
dec
addr16
test
ja
fnstcw
xchg
or
add
mov
xchg
push
in
jecxz
loopne
das
int
pop
aaa
adc
mov
loope
mov
std
ja
test
mov
mov
test
and
in
push
jmp
and
push
xor
mov
dec
jo
popa
sub
jmp
add
fucom
mov
movsb
pop
sbb
fldenv
lods
mov
push
clc
sbb
jp
push
push
lock
out
xor
cmpsl
sbb
jb
mov
ds
fstpt
sub
loop
leave
pop
stos
cmpsl
mov
mov
test
ffree
out
iret
or
inc
jo
fnsave
cld
ret
jmp
mov
mov
loop
and
movsb
fs
aam
insl
test
mov
mov
scas
movsb
std
and
lods
mov
jae
xchg
mov
out
addr16
cmp
mov
xchg
pushf
mov
xchg
pushf
pop
bound
push
mov
or
jmp
movsb
ret
popf
out
mov
hlt
sub
es
jb
scas
imul
mov
dec
in
in
adc
mov
imul
sub
lahf
dec
sub
mov
pop
aaa
hlt
sub
and
mov
mov
mov
xor
mov
mov
popf
into
mov
out
lret
or
push
loop
cwtl
push
push
shrl
pop
xor
jae
lea
aaa
mov
mov
cli
pop
pop
xor
mov
popa
call
inc
test
das
and
mov
mov
les
out
add
or
out
jnp
mov
mov
xchg
mov
ljmp
add
lcall
pmullw
test
scas
mov
xor
and
movsl
xchg
sub
scas
mov
pop
jb
lea
push
ljmp
and
andl
jns
xchg
push
fsubl
scas
movsl
sbb
or
movsb
andb
mov
fidivs
dec
movsl
jb
or
sbb
lahf
jb
adc
mov
mov
inc
cmpsb
loope
popf
mov
movsb
imul
sarl
test
movsb
imul
xchg
dec
aam
sbb
icebp
rcrb
add
jnp
movsl
sahf
mov
mov
jg
adc
mov
lcall
xchg
xor
sub
bound
jae
jge
daa
stc
mov
add
sbb
jae
stc
cmpsb
xor
dec
cld
sbb
test
lahf
rcrl
cs
jnp
arpl
lea
outsb
xor
movsl
dec
sub
sub
mov
scas
daa
in
xlat
mov
in
sub
sbb
mov
jmp
loopne
mov
mov
lds
es
mov
popa
and
sbb
mov
repz
fstpl
and
stc
scas
scas
mov
daa
iret
pusha
jp
popf
pushf
dec
pop
mov
mov
jp
mov
loop
mov
movsl
lret
jmp
aas
leave
jle
mov
jmp
ss
mov
test
mov
test
in
xchg
insl
or
andb
movq
jb
mov
frstor
mov
and
insl
dec
cmpsb
stos
and
or
mov
add
lds
pusha
loop
cmpsl
iret
pop
addr16
repnz
sbb
cmp
push
mov
jae
add
sbb
push
xchg
loop
xchg
lods
sub
in
ljmp
adc
fsubr
je
and
or
mov
jno
sbb
push
xor
or
loopne
aas
cs
lods
mov
ret
loop
mov
lods
mov
leave
movsl
sub
enter
dec
mov
cltd
inc
ds
loopne
test
xchg
and
sbb
jb
scas
mov
adc
lar
xchg
add
xchg
mov
mov
ret
sbb
jb
cmpsb
xor
dec
movsl
cs
out
xlat
psraw
cmp
mov
sub
dec
not
outsl
sarl
rcr
dec
jp
adc
in
jbe
push
daa
test
ror
call
xor
cmp
and
ljmp
jns
xor
sti
stos
mov
int3
bound
aad
repnz
movsl
jbe
cmovl
adc
or
mov
jl
mov
xchg
fwait
stos
pop
xchg
insl
aaa
test
and
das
data16
mov
lret
mov
mov
daa
loope
mov
or
aas
mov
sub
aas
xchg
jbe
dec
out
xchg
cwtl
jno
jbe
mov
dec
mov
fwait
loop
push
xor
rcl
pushl
test
mov
inc
mov
inc
cmpsl
movsl
jno
add
pop
xchg
js
leave
fistl
or
movsb
cmpsb
int
fs
dec
sbbl
movsl
out
loop
outsl
push
adc
js
mov
cmp
sbb
aas
lea
and
bound
nop
cmpsl
lock
pop
stc
xchg
scas
movsb
push
mov
jmp
sub
lods
mov
lock
and
sbb
xchg
or
jne
push
sub
sub
fstps
test
sub
stos
cld
ficompl
iret
cwtl
insl
clc
jne
xrstor
movsl
adc
stos
jl
sbb
pop
xchg
xor
ljmp
push
je
lea
push
fnsave
ljmp
test
popf
insb
xchg
in
pop
adc
ljmp
add
cmp
popf
mov
inc
das
lods
je
inc
mov
movsb
add
mov
ja
mov
lods
add
and
stos
sbb
bound
push
mov
ljmp
mov
add
insb
bound
jno
rcr
addb
jnp
insl
imul
mov
fisubrl
sahf
lcall
lods
ds
int3
mov
cmp
xchg
and
mov
sbb
cmp
jl
leave
in
xchg
sbb
nop
jp
mov
mov
xchg
xor
or
xchg
push
sar
mov
outsl
loope
stc
ss
xor
xor
mov
adc
cmpsl
dec
mov
sub
loopne
mov
popf
scas
dec
movsl
adc
mov
mov
inc
sub
loopne
and
xchg
mov
and
loopne
or
loope
and
sub
cmp
mov
jbe
jnp
pop
xor
push
xchg
sbb
jg
icebp
lahf
in
scas
movsb
cs
sbbl
cli
or
scas
cmp
adc
cli
xchg
sbb
mov
insl
add
sub
cmp
push
mov
out
pusha
xchg
mov
xchg
sbb
nop
jno
ffree
scas
push
sbb
loopne
movb
icebp
mov
mov
push
cwtl
xchg
call
mov
outsl
lcall
xchg
fiadds
adc
dec
pop
orl
pusha
xchg
jb
jo
call
inc
mov
sub
loope
or
mov
sub
in
xor
or
in
and
call
fildl
xor
or
out
and
call
out
xor
jmp
jecxz
gs
scas
call
mov
mov
sub
icebp
call
mov
mov
sub
pop
dec
fcompl
jae
mov
and
cmpsl
xor
xlat
sahf
fs
pop
repz
pop
lcall
push
cmp
or
sub
and
pop
and
adc
xor
cmc
push
sbb
jg
mov
mov
jae
jo
or
in
mov
pop
mov
sub
in
mov
and
xchg
or
cmp
mov
mov
outsb
imul
adc
outsb
cli
cmpsb
fstp
add
jo
push
outsb
xchg
pop
mov
mov
dec
call
pusha
pop
pop
arpl
fidivrs
xchg
out
test
xchg
inc
push
lea
lcall
push
andb
test
bound
out
es
outsl
popf
cltd
mov
in
and
xor
xchg
cmp
aad
data16
ror
xchg
int
hlt
data16
das
cmpsb
cmpsb
pop
xor
popa
jp
push
push
callw
jnp
lods
stos
shlb
iret
xor
mov
test
aad
repnz
sbb
jp
adc
sub
insb
xchg
cmp
popa
mov
xchg
ja
mov
push
xchg
xlat
or
cmp
mov
call
mov
mov
mov
outsl
mov
cmp
imul
cmp
mov
inc
lahf
mov
je
out
rclb
cld
ret
cmp
push
adc
jne
mov
movsb
and
and
filds
in
xchg
out
mov
or
pop
xchg
xchg
test
ljmp
jno
mov
iret
sbb
hlt
sub
push
es
jne
movsb
fs
mov
jmp
or
das
mov
cltd
hlt
jecxz
mov
shll
cmc
repnz
pop
xor
xchg
sbb
xchg
shrb
and
and
jle
mov
movsl
fadds
fldcw
ret
out
addr16
inc
lret
mov
stos
mov
bound
mov
push
push
and
add
test
pop
insl
pmuludq
enter
setae
mov
and
cmpsl
jp
repnz
stos
or
in
xchg
movsb
cmc
test
call
orl
push
cmpsl
das
mov
xchg
or
push
pop
adc
mov
ret
xchg
mov
mov
mov
cmpsl
jg
cmpsl
repnz
shll
stos
sub
dec
imul
feni(8087
lods
andb
mov
push
js
ficoms
add
sarl
pushf
ljmp
add
mov
int3
and
cmc
out
repz
addr16
sbb
mov
out
out
sub
out
in
jb
dec
cld
pusha
movsl
pushf
mov
call
push
loop
cmpsb
sub
xor
mov
sbb
out
lods
and
andl
imul
scas
out
mov
fimull
push
mov
pusha
adc
inc
cmp
in
mov
call
sub
mov
jns
data16
pop
testb
jecxz
das
movsl
pushf
cwtl
and
xor
std
mov
hlt
scas
xchg
lds
cmpsl
adc
mov
add
mov
cmpsb
xor
scas
pop
and
xor
clc
and
jae
daa
add
insb
pusha
jno
xchg
xchg
sub
fwait
das
mov
out
es
jae
or
lods
cmp
add
es
insb
stos
xor
shll
les
mov
ljmp
movsb
jno
sub
mov
hlt
les
out
neg
cs
dec
ret
out
and
jg
push
out
mov
jne
push
mov
ljmp
sbb
push
adc
fsubs
xchg
addl
es
test
xchg
jo
test
and
movsb
cli
or
sbb
faddl
enter
dec
xchg
sub
in
xchg
sbb
insb
xor
add
imul
cmp
xchg
xor
and
int
andl
push
mov
mov
mov
fsubrs
test
fidivs
jno
push
lods
aad
leave
sub
int
mov
pop
and
bound
jo
jg
inc
mov
in
mov
mov
lods
hlt
in
pop
xor
sub
outsl
dec
jmp
mov
mov
fadds
xor
jmp
add
ret
stc
cs
lcall
fcomp
jb
push
pop
stc
je
je
mov
fildll
cmpsb
cmp
sub
fs
lcall
decl
rolb
jb
or
dec
movsl
pop
int
shlb
mov
pcmpgtd
adc
jnp
dec
jbe
scas
mov
stos
into
jns
xchg
sbb
push
loopne
cmp
scas
dec
hlt
xchg
cmpsl
aaa
mov
mov
rcr
cmp
jns
lret
repz
scas
dec
hlt
add
xor
mov
mov
daa
movsl
cs
sahf
sbb
out
nop
xor
into
push
icebp
in
xor
cli
scas
test
pop
sub
test
lcall
and
pop
jb
sub
cmpsl
xchg
daa
cs
lods
mull
adc
adc
mov
xorb
pop
addr16
xor
pop
push
sbb
xchg
jecxz
cltd
adc
movsl
repz
sub
sti
adc
nop
stc
cmp
aas
mov
scas
fwait
xchg
popa
test
test
es
adc
cmpsb
sub
mov
or
ret
je
sub
add
mov
sbb
test
fwait
mov
das
sub
cwtl
mov
out
ss
mov
mov
mov
movsl
loope
icebp
xchg
cltd
gs
test
mov
and
and
mulb
bound
inc
mov
fs
movsb
mov
xchg
cmp
fucomp
xchg
and
divb
mov
fsub
loop
dec
daa
leave
mov
push
or
in
sub
xchg
flds
imul
mov
stos
test
pop
cli
lods
sbb
mov
push
addb
hlt
movsb
les
mov
mov
stos
mull
mov
pop
subb
leave
pop
and
jb
pop
idivl
fwait
movsb
mov
out
xor
lds
and
inc
scas
jne
int3
ljmp
and
xor
mov
push
cmpsl
mov
outsl
fisttps
std
insb
out
loopne
cmp
enter
cmpsb
or
and
jp
xchg
sbb
push
mov
shll
lods
pop
mov
mov
cmpsb
xchg
xchg
sbb
mov
aaa
mov
ljmp
jmp
lahf
push
sbb
out
xchg
es
pop
mov
aaa
adcl
not
pop
outsl
xchg
push
sbb
jge
push
cmp
stc
mov
sub
jo
mov
sub
rolb
test
jl
jle
inc
movsb
mov
push
sbb
xor
pop
aas
stos
pushf
jbe
and
dec
inc
mov
addr16
mov
ret
adc
inc
or
mov
mov
lahf
cmp
out
loop
and
scas
jnp
xchg
mov
rclb
sbb
pop
cmp
cli
and
sbb
and
into
mov
sub
xor
in
push
aam
adc
imul
xor
cs
imul
mov
test
scas
stos
addr16
mov
out
pop
push
xchg
scas
arpl
mov
lret
or
fnstenv
les
mov
inc
jmp
add
mov
mov
int3
cld
mov
pop
or
lcall
jmp
into
adc
pop
adc
stos
fwait
or
xchg
test
pop
and
loopne
xor
xchg
jb
shlb
lret
movsb
mov
xor
and
pop
mov
bound
mov
jb
cmp
xchg
jnp
movsb
dec
repz
mov
push
mov
in
sti
scas
jge
js
lods
jo
mov
test
pushf
movsl
cmp
aaa
outsl
cmpsb
std
jl,pn
push
cmpb
repz
mov
stos
outsb
loop
sub
test
mov
lods
sbb
fwait
movsb
sub
sbb
inc
imul
popf
insb
sbb
mov
fwait
out
and
jbe
cwtl
lret
insb
xchg
adc
aas
mov
mov
cmp
xor
sub
mov
movsl
popa
ds
lds
jmp
shll
xchg
popf
je
sub
push
js
movsb
cs
fnstenv
sub
pop
mov
or
test
sahf
jnp
lock
repnz
push
scas
mov
or
xchg
ljmp
push
cwtl
and
inc
cld
cltd
mov
addr16
cmp
and
popf
jmp
mov
movsl
inc
mov
jp
xor
ds
lret
xor
lahf
enter
jp
mov
xchg
fwait
push
rorb
lock
sbb
movsb
mov
iret
jae
or
jb
cmp
lds
push
ds
arpl
dec
push
mov
mov
mov
cmp
lds
hlt
cmpsb
xor
movsb
or
add
push
mov
in
jae
orl
adc
rclb
testb
movsl
cwtl
xorb
jg
inc
pop
xor
jns
mov
dec
mov
in
and
jnp
jl
cmpsb
sbb
adc
mov
push
and
cs
or
in
lret
cmpsb
mov
mov
push
cld
in
movsb
shrl
jbe
movsl
add
adc
subl
lods
in
daa
mov
or
push
xlat
fstpt
sub
or
jle
lret
jle
imul
mov
ljmp
pop
cld
jae
in
sarl
xchg
imul
add
loopne
mov
stc
mov
mov
int
in
push
fdivrl
jmp
call
out
mov
xchg
jmp
mov
jmp
ss
mov
jo
jo
and
xchg
movsb
stos
xchg
hlt
cmp
paddsw
add
call
jp
xor
dec
cmp
pop
fwait
ja
pop
jmp
addr16
cmp
pushl
cmp
loopne
scas
jmp
stc
pop
mov
push
sti
jmp
call
cmp
xor
and
sbb
out
dec
jnp
or
mov
lods
xchg
xchg
or
jnp
mov
ss
xchg
dec
jl
mov
jbe
and
mov
cmp
pop
xchg
lret
out
cmpsl
aaa
hlt
adc
or
jp
outsl
aaa
in
jp
push
pop
add
cli
sahf
sbb
mov
sbb
jne
cmp
sub
insb
push
pop
aaa
sub
push
xlat
jle
pop
aaa
sub
mov
addb
jecxz
pop
jo
movsb
leave
jmp
and
stos
repnz
in
stos
jle
cli
mov
loope
mov
ss
jbe
movsl
aad
call
les
jge
xchg
fs
stc
stos
and
jne
fnstsw
stos
cmp
xor
and
lret
jb
jl
inc
aas
jmp
hlt
or
mov
ljmp
sub
fstl
mov
in
and
in
enterw
fcmovnb
jp
shlb
dec
mov
stos
ret
and
lods
add
xor
jnp
movsl
xchg
mov
imul
test
scas
xor
test
lods
mov
fimull
mov
xor
out
shrl
sbb
or
sbb
fwait
mov
mov
xor
mov
and
subl
inc
movsb
fwait
int
mov
adc
xchg
and
xchg
or
mov
pop
cmp
dec
mov
je
jp
fdivs
adcb
adc
mov
pop
inc
nop
xchg
int3
push
adc
mov
cmpsb
jbe
xor
ljmp
adc
lret
inc
jbe
sub
pusha
pop
ljmp
adc
test
jns
dec
in
mov
jg
mov
jns
jmp
mov
cmc
daa
cmpsl
and
cmp
scas
lret
out
cmp
lods
or
call
mov
xor
das
in
sbb
mov
cs
pop
out
icebp
lods
mov
and
cmpsb
sub
arpl
test
imul
add
xor
in
pusha
jae
mov
or
xchg
imul
xor
push
xor
xchg
or
fstp
scas
imul
aaa
mov
mov
addr16
cld
pop
jns
ret
xchg
push
or
xor
cmpsb
hlt
arpl
push
aad
cmp
jmp
leave
mull
add
xchg
scas
inc
insl
test
push
and
add
mov
mov
add
mov
dec
pop
sub
mov
and
insb
push
mov
add
in
pusha
fistl
jle
push
mov
out
loop
data16
mov
fimull
cli
add
xlat
mov
lea
mov
les
xchg
sbb
mov
out
push
ret
mov
pusha
cmp
fmuls
test
push
pop
add
xlat
mov
xor
out
mov
cmp
stos
addr16
and
je
cmp
sub
mov
ljmp
scas
bound
aad
loope
test
imul
xor
bswap
dec
pushf
dec
xor
loopne
icebp
jge
movsl
es
movsb
jae
loop
push
pop
testl
in
repnz
jge
and
arpl
cmc
ret
std
hlt
xchg
cltd
and
jo
loopne
xchg
add
adc
sub
dec
fcoms
dec
fwait
adc
fstpl
mov
pusha
int3
test
and
cmpsb
stos
lock
xlat
call
adc
mov
insl
cld
out
adc
stc
insl
andl
push
push
test
push
dec
sahf
movsb
xorb
lods
xchg
pusha
or
xchg
mov
pop
scas
jg
inc
jb
push
mov
inc
sbb
out
cmpsl
mov
idivb
cli
imul
hlt
adc
mov
addr16
xor
scas
ljmp
add
mov
sub
mov
data16
and
loopne
popa
es
and
and
test
mov
test
das
xor
test
in
arpl
pop
repnz
xchg
mov
loopne
popa
and
or
arpl
mov
jg
jns
daa
push
loop
cmp
out
jle
or
and
ljmp
lods
mov
cmp
movsb
mov
pop
data16
scas
or
sbb
test
cmc
xor
sub
add
fisttps
or
movsb
xor
pop
call
sarl
leave
jmp
cmpsb
adc
mov
and
hlt
pop
and
out
out
pop
jmp
lods
les
push
fstpl
mov
cmp
cwtl
pop
ds
subb
hlt
in
in
test
loop
xor
imul
pusha
cltd
pop
lds
loop
or
dec
xor
xor
sbb
cltd
push
jbe
xor
adc
cmp
fadds
loopne
call
push
pop
call
and
push
xchg
push
sbb
xor
xorl
jns
out
fsts
call
and
shll
out
add
rcrl
and
jbe
cmp
pop
xchg
sub
pop
mov
add
jl
and
adc
pop
dec
aaa
into
test
call
cmp
js
icebp
dec
push
xor
gs
xor
das
stos
mov
mov
ret
stc
lods
jmp
cltd
and
xchg
pop
mov
xor
stc
add
scas
push
sub
lcall
movsb
sbb
out
sub
or
cld
xor
pop
sub
sub
ret
sub
lcall
dec
adc
out
sti
icebp
dec
mov
lret
xor
lahf
xor
shlb
add
out
ss
mov
mov
popf
and
sub
pushl
cmp
inc
jnp
mov
jb
dec
lods
mov
sub
cmp
jnp
or
sahf
fnsave
inc
and
mov
cmp
adc
test
leave
adc
adc
mov
xchg
in
loopne
call
stos
push
lods
adc
inc
mov
push
pushf
fbld
test
push
rcrl
imul
xor
test
cmp
test
imul
pop
frstor
mov
push
loopne
test
pushf
iret
cmpsl
adc
jbe
testl
iret
or
outsb
stos
sbb
jp
out
xor
inc
or
xor
and
adc
xchg
mov
pushf
xor
push
jmp
loope
stos
xchg
jo
fnstcw
pop
xchg
and
and
dec
push
stos
test
jae
mov
dec
cmpl
or
pusha
cmc
cltd
jns
std
les
cmp
push
sarl
add
stos
sbb
fnsave
test
popf
and
jbe
loop
out
test
fisubrl
pop
adc
pop
jmp
mov
call
imul
xchg
push
and
sbb
rorb
sbb
sub
into
out
sub
pop
mov
mov
cltd
call
mov
ds
adc
push
xor
outsb
pop
cli
incb
fs
fildll
rclb
incl
xor
lret
push
stc
call
ret
imul
sarl
mov
mov
pop
mov
pushf
aaa
sbb
inc
mov
xor
xchg
or
fldl
icebp
cmp
jp
jmp
aaa
or
faddl
xor
or
inc
fadds
push
out
push
mov
add
mov
test
sub
stos
mov
subl
outsl
cmp
mov
sub
loop
xchg
sbb
mov
jo
sbb
add
test
mov
outsl
xchg
jle
lods
xor
dec
imul
mov
cwtl
mov
imul
mov
xchg
outsl
in
test
xor
arpl
mov
mov
mov
push
push
pop
add
xor
xchg
xchg
jb
push
push
adc
sub
push
add
or
jnp
test
ds
xor
mov
test
mov
adc
icebp
cmpsl
out
or
ds
mov
sbb
xchg
cli
sbb
lods
sbb
or
test
addb
push
mov
movsb
movsb
sahf
sbb
faddl
sub
and
jnp
es
test
jae
aas
out
arpl
dec
lcall
shlb
sub
mov
mov
xor
and
lock
xchg
sub
mov
nop
scas
lea
mov
and
out
xchg
mov
mov
xchg
fimull
jmp
sbb
pusha
dec
jnp
mov
call
sub
aas
inc
xor
mov
lds
inc
mov
fcomip
fbld
adc
fmuls
jl
test
sub
movsb
mov
mov
mov
cltd
dec
jmp
mov
sbb
stos
or
push
cmpsl
repz
xor
jns
or
fs
es
aaa
sub
adc
or
jae
sub
popf
bound
xchg
pusha
scas
outsb
mov
xor
scas
and
xchg
lret
and
stos
push
push
ds
sbb
inc
gs
and
insb
or
mov
mull
adcl
fwait
mov
pop
dec
stos
test
xor
push
shlb
in
xor
sub
lahf
es
inc
dec
sub
adc
lret
movsl
inc
loop
pop
and
negl
sub
les
mov
or
xor
bound
push
daa
mov
lock
inc
insl
insb
xor
mov
push
pushf
jne
push
movsb
sbb
dec
sub
pusha
or
sahf
mov
mov
mov
pop
test
pop
xchg
inc
mov
mov
out
fdivs
loop
fwait
xor
inc
adc
cmp
ret
aas
mov
mov
push
mov
sub
cmp
sbb
mov
loop
dec
or
fildl
mov
scas
mov
daa
mov
adc
sbb
fs
mov
cs
jo,pt
sbb
scas
movsb
and
in
loopne
addr16
push
inc
repz
push
jmp
xorb
and
aam
mov
bound
cmp
lods
xchg
mov
push
dec
xchg
xchg
pop
adc
and
mov
and
and
xor
jge
nop
and
insl
pop
xchg
push
or
cmpsl
mov
cltd
push
mov
mov
bound
das
je
out
add
cld
mov
mov
ret
and
adc
data16
mov
insl
and
xor
fwait
jno
adcl
xchg
loope
jmp
dec
movsb
mov
mov
movsb
out
and
or
test
sahf
jno
mov
shl
and
fimuls
push
mov
out
bound
stos
ds
dec
test
mov
fistps
jno
xchg
sbb
int
inc
movsb
imul
xor
inc
gs
subb
sbb
ja
out
shll
and
dec
pop
push
jle
mov
mov
xor
inc
outsb
fsts
fidivrs
out
shll
cmpsl
outsl
icebp
mov
shlb
shll
mov
in
sahf
sar
cs
fwait
movsb
dec
in
cmp
js
dec
pop
fwait
addb
sub
jnp
ret
cmp
mov
sbb
stos
lea
sbb
jbe
cmp
xchg
sub
pop
test
cmp
xchg
test
jnp
loopne
mov
lds
push
aad
cmp
xor
or
mov
notb
inc
push
cld
jbe
sahf
fisttps
lahf
jp
mov
insb
and
xor
fwait
loopne
hlt
cmovo
aad
jge
mov
pop
and
cmp
xor
push
xor
stos
mov
mov
xor
mov
sbb
and
push
pop
in
pop
ds
push
adc
mov
xor
rcrl
xchg
bound
push
repz
jp
pop
jmp
pop
test
add
mov
shr
mov
int3
movsl
and
push
xor
daa
enter
inc
out
jle
mov
lret
movsl
jge
pusha
ljmp
std
mov
lahf
nop
jmp
and
xchg
pusha
push
icebp
mov
mov
mov
testl
loopne
test
xchg
scas
jne
mov
mov
mov
push
cmc
test
xchg
jp
or
mov
iret
mov
jno
pop
jae
mov
jae
sbb
inc
xor
cmp
cmc
lods
inc
cmpsb
mov
stos
cmp
ljmp
xchg
out
sub
pop
sarl
pop
ret
movsl
sub
mov
mov
imul
movl
testl
push
xchg
mov
ljmp
push
dec
add
mov
mov
dec
pop
lods
mov
sahf
rcrb
sbb
cmpsb
loop
imul
lahf
jg
jnp
fildl
and
fsts
shrb
int
xor
jmp
lret
jecxz
or
add
icebp
push
add
push
xchg
mov
and
xchg
gs
loopne
fwait
push
mov
ffree
push
sahf
fwait
dec
xor
xchg
jg
and
call
and
sti
pusha
and
lcall
add
dec
and
xchg
xor
mov
in
mov
imul
mov
lds
jp
xchg
jecxz
insb
fldl
sbb
pop
push
xchg
adc
mov
mov
xor
xchg
jo
mov
aam
sub
pop
out
cmpsb
cmpsl
adc
mov
sbb
and
lods
sub
loopne
mov
subb
and
push
hlt
xchg
frstor
jne
xchg
test
in
lods
cmp
add
mov
movsl
or
aam
js
daa
insb
shll
mov
loopne
shlb
movsb
enter
scas
fsubrs
stos
xor
xor
lock
mov
inc
mov
cmp
aaa
ret
cltd
lahf
leave
mov
cld
and
dec
faddl
sbb
insb
jp
pop
adc
pop
fwait
aam
cli
decl
data16
dec
push
and
and
ds
or
call
push
cmpb
mov
rorb
push
and
lock
push
mov
mov
fs
xchg
test
out
jl
sub
ljmp
insb
add
dec
mov
xchg
movsl
fs
mov
mov
mov
aad
fs
ret
aad
jbe
mov
addb
add
jb
mov
mov
or
ljmp
daa
daa
jmp
mov
push
aad
out
call
cmpsl
enter
xor
or
shll
movsl
dec
roll
cmp
and
mov
test
mov
shl
movsl
pop
test
daa
cmp
and
jne
adc
push
fwait
loopne
ja
push
sub
loop
xchg
and
cmp
cmp
and
js
cmp
push
andl
ja
push
xchg
cmpsl
and
and
jg
pop
ja
push
xchg
rcll
call
rol
inc
or
in
and
fwait
aaa
cmpb
mov
mov
xchg
movsl
push
aaa
xor
stc
testl
and
mov
shr
popa
callw
or
mov
mov
mov
sbb
cmpb
push
mov
les
mov
pop
cmpsl
adc
push
add
xor
sub
lods
push
out
mov
movsb
mov
cli
or
in
and
movsb
mov
adc
mov
xor
mov
jb
push
and
jle
shlb
ficoml
cs
jp
fwait
mov
movsb
in
call
pop
sub
cmp
mov
dec
rorb
and
rcrb
stos
mov
cmp
cltd
hlt
jg
cmpsl
mov
es
pop
gs
xor
xchg
popf
sub
jnp
mov
push
mov
jb
insb
xlat
and
sbb
fdivrl
loopne
sahf
loopne
notb
movsl
jb
dec
inc
loope
cmpsl
es
xchg
inc
dec
cli
adc
jae
mov
repnz
sub
cmp
imul
iret
in
jp
cmc
cmp
push
mov
test
push
sbb
in
sub
pusha
repz
rcrl
test
pop
call
or
fistpl
rorl
jo
or
test
mov
scas
dec
push
mov
out
test
stos
fsubl
movsb
mov
mov
lret
and
jne
imul
and
xor
mov
and
sub
or
sub
push
sub
fcompl
xor
push
imul
testb
pusha
dec
imul
testb
xor
sti
pop
sti
hlt
in
xor
mov
sub
sub
xchg
mov
xchg
pusha
ret
fildll
xchg
lods
in
movsl
sbb
orb
test
in
lret
mov
stos
mov
ret
dec
sub
add
add
cmpsb
test
lret
call
rorb
cli
movsb
ds
cmp
pop
cwtl
xor
in
or
and
inc
sub
xor
adc
adc
mov
pop
mov
adc
xorb
xchg
inc
mov
cmp
mov
addr16
test
repz
pop
stc
lds
loop
adc
xor
in
push
call
mov
call
fidivrs
int3
pop
adc
sub
stos
xchg
mov
fisubl
outsl
mov
loop
out
enter
dec
rcrl
cld
adc
loopne
fsubl
or
jmp
fs
adc
movsb
cmpsl
xchg
sbb
xor
jge
add
xchg
xchg
jbe
imul
pusha
jmp
pop
ret
iret
jp
xor
loope
push
xor
cmpsl
mov
push
enter
enter
and
mov
jp
xor
dec
mov
test
popa
add
subb
cmp
cld
xchg
stc
sbb
and
push
inc
or
jno
mov
mov
mov
mov
jns
xchg
add
test
fbstp
lcall
push
hlt
mov
add
cmp
mov
and
pop
add
jp
mulb
sbb
dec
sub
bound
mov
cmp
mov
inc
jo
movsb
sub
adcl
mov
sub
xchg
imul
xor
lret
mov
shlb
das
scas
adc
adc
sub
das
movsl
xor
test
jo
xorb
mov
sbb
in
cld
and
call
jl
in
mov
mov
pop
psubusb
jl
xor
ljmp
das
cmpsl
lds
add
xor
and
cmpsl
mov
cmp
bswap
inc
mov
imul
sub
lret
sbb
push
movsb
and
movsl
fbstp
test
xlat
pop
pop
das
jo
cmp
fisubs
mov
cmpb
ljmp
out
addr16
je
and
and
push
push
add
mov
enter
xchg
jo
xchg
jns
shlb
cmpsl
push
lods
cld
xchg
mov
movsb
daa
xchg
mov
cmp
mov
enter
sub
lar
das
aaa
movsl
xor
jnp
jo
call
mov
xor
inc
or
in
divl
out
xchg
mov
and
call
mov
lods
cmpb
sub
gs
mov
std
movsb
or
lds
sub
and
pop
or
and
cmpsl
test
jge
push
movsb
dec
sbb
in
and
sbb
xor
mov
cmpsl
add
call
inc
xchg
xchg
fs
mov
lcall
add
dec
cltd
mov
jns
fisttps
mov
pop
imul
jle
test
add
sbb
ds
mov
rcrl
pop
in
and
aaa
mov
fsubs
xor
cmp
jmp
in
sub
xchg
fdivs
test
hlt
inc
pop
sahf
mov
in
pop
lds
and
out
cmc
addr16
movsl
bound
ljmp
mov
movsb
in
enter
push
xor
and
add
sbb
sbbb
jo
sub
nop
xor
and
and
les
fildl
lcall
add
sbb
sub
call
out
scas
stos
out
test
cmp
xchg
sub
scas
push
jge
std
loop
out
in
cmpsl
xchg
cmp
stos
outsl
cmc
mov
stos
xchg
xchg
pop
sbb
cmpsl
pushf
cmp
fbld
push
push
sub
test
ljmp
int3
mov
movsl
inc
cld
cmc
aam
push
xchg
lea
stos
ljmp
xor
cli
mov
and
test
scas
cli
mov
fistps
sbb
push
lock
lcall
mov
lcall
mov
ret
mov
addr16
aam
in
out
cltd
or
xchg
scas
lahf
xchg
js
jno
or
xorl
rcl
xor
stc
xor
movsl
and
jmp
and
sbb
das
movb
pop
sub
or
icebp
mov
push
adc
push
ljmpw
stos
adc
repnz
les
test
or
add
pop
ja
lcall
jle
icebp
enter
cmpsl
bound
fwait
scas
mov
adcl
mov
sbb
xchg
inc
ficoml
out
mov
mov
and
scas
xchg
mov
sti
mov
sbb
aad
sarb
sub
jae
sahf
gs
sub
frstor
pop
push
movsl
mov
repz
fldl
pop
add
mov
pop
test
out
dec
dec
jmp
subb
sub
lods
movsl
add
loopne
push
and
mov
push
xorb
stos
rolb
mov
movsl
test
fwait
inc
push
movsl
ljmp
and
xchg
nop
outsl
xor
pop
adc
inc
sbb
scas
sbb
lock
mov
push
jmp
push
ret
insb
ss
mov
inc
pop
testb
stc
and
xlat
and
mov
out
sbb
lods
jns
adc
aaa
int
icebp
outsl
lret
xchg
ja
sub
sub
outsl
cmp
and
xchg
mov
andl
cmc
loop
mov
ret
push
xchg
cmp
lea
xor
xchg
add
add
fs
dec
scas
arpl
gs
loop
xor
xor
sub
out
xlat
mov
repnz
and
in
addr16
sbb
xor
test
jbe
aaa
bound
sub
out
mov
add
push
cmpsl
mov
outsl
xor
xchg
inc
ss
mov
lea
pushf
enter
xchg
cltd
hlt
push
mov
daa
pop
decb
mov
jbe
inc
mov
xchg
mov
ds
xchg
xor
pop
and
sub
inc
add
and
jae
cmpsl
dec
pushl
pop
mov
push
mov
mov
popa
pop
mov
mov
movsb
sub
mov
es
aam
xor
adc
aam
pop
mov
out
xchg
push
or
push
jno
data16
mov
pusha
cli
insb
lods
scas
mov
aam
sub
imul
fsubs
lods
and
xchg
test
insl
jmp
or
and
in
fisubl
ja
pusha
push
xor
loopne
inc
aaa
sbb
stos
std
jbe
movsl
fldenv
pop
int3
pop
test
ret
push
ja
fs
mov
push
and
addr16
mov
cmpsl
mov
lods
data16
jno
sbb
and
div
shlb
cmp
inc
jl
aam
xchg
enter
or
movb
jmp
mov
jl
xchg
shlb
xchg
arpl
cld
lds
push
pushf
add
mov
inc
sbb
jg
and
sbb
jmp
and
dec
mov
jbe
lods
and
das
test
mov
sbb
or
xor
inc
inc
or
jnp
xadd
mov
mov
addr16
dec
and
pop
or
enter
push
int
xchg
jb
and
sbb
lret
mov
jecxz
mov
mov
push
mov
stos
mov
lods
mov
mov
mov
lods
xchg
lcall
add
addr16
mov
ror
cld
xor
out
sub
int
jae
in
loopne
xchg
push
data16
fsubr
cmpsl
sub
dec
fisttpll
pusha
xor
ret
sub
cli
cmpsl
addr16
and
cmp
jo
mov
cmp
sub
movsl
imul
xchg
cs
andb
test
jl
cmp
and
movsl
stos
je
movsl
jb
mov
push
test
lods
inc
sub
sbbb
hlt
das
add
addr16
and
inc
pusha
loop
cmp
fdivs
iret
xorb
movsb
jmp
lret
and
call
and
mov
out
pop
insb
mov
cmpsb
mov
lahf
mov
sbb
iret
pop
xor
test
cld
repnz
xor
in
movsl
push
cmpsl
out
sbb
outsl
mov
bound
lea
jle
loop
sub
dec
xor
xchg
cmp
cmpsb
outsl
popf
inc
cltd
xchg
inc
cwtl
sahf
andl
sbb
loope
mov
jne
repnz
mov
jbe
pop
mov
jmp
adc
test
push
enter
sbb
movsb
add
in
sub
and
sub
or
xor
ljmp
xor
inc
mov
mov
pusha
int
mov
and
sbb
out
mov
lahf
andl
outsb
or
mov
mov
mov
and
aam
xchg
add
loope
bound
cmp
jmp
adc
jmp
or
int
push
cmp
ret
scas
push
daa
push
fimull
mov
jb
int
movsl
or
lret
les
cmp
fwait
sub
out
notb
xor
addl
mov
mov
lock
cli
sub
xor
arpl
xor
mov
cs
pop
stos
mov
lahf
xchg
jno
jge
icebp
pop
gs
inc
and
movsl
sub
mov
add
sub
add
mov
jp
lret
cmpsl
and
lahf
push
cmpsl
cs
popf
imul
lcall
add
push
or
mov
jae
ficompl
xchg
stos
mov
pop
cmpsl
mov
mov
jb
sbbb
cmpsb
sbb
out
mov
add
lahf
adc
xlat
mov
jnp
sbb
mov
push
cld
or
and
xchg
lds
daa
outsl
clc
xor
mov
insb
popf
popa
outsb
pop
cld
cmp
push
mov
cwtl
xor
mov
xor
inc
fwait
sub
mov
jmp
mov
test
ss
xchg
pusha
bsf
outsb
xchg
cmpl
dec
dec
scas
and
jg
jno
fsts
sbb
addl
xchg
mov
jno
int3
inc
push
pop
xchg
aaa
inc
inc
imul
inc
pushf
pop
aas
add
aam
ja
movsb
xchg
sbb
mov
test
fwait
cwtl
scas
lea
fnstenv
mov
mov
cs
mov
sar
inc
sub
jp
popf
xor
dec
or
add
xchg
mov
out
cmp
aas
and
mov
and
stc
pushf
fisubl
mov
jp
cmpl
psllw
ficompl
jae
push
addr16
and
jl
dec
out
xor
insl
mov
xchg
aam
xor
movsb
pushf
sbb
cmp
mov
jb
stc
and
push
dec
iret
xor
in
or
cmpsl
xorl
fs
imul
mov
icebp
sub
decl
into
icebp
mov
movsb
add
jne
dec
xor
and
call
jg
cwtl
dec
les
dec
mov
xchg
inc
xchg
mov
test
aaa
test
sahf
add
stc
mov
mov
xchg
in
mov
leave
mov
adcb
leave
pop
fwait
sbbl
loopne
cmpsl
aaa
mov
movsb
out
mov
mov
pop
mov
xor
ss
mov
mov
mov
nop
loop
and
scas
xor
mov
dec
mov
lds
mov
jl
cmp
sub
divl
movsb
in
jp
and
fsubl
mov
lock
adc
out
in
or
out
lret
cld
add
out
dec
fcompl
stos
arpl
fnstsw
lods
push
fwait
xor
sbb
sub
in
hlt
lea
dec
movsl
das
cli
jp
test
test
lods
enter
or
mov
add
jno
xchg
stos
lods
inc
repnz
ret
stc
push
or
test
mov
lods
cmp
movsb
sub
scas
movsl
cmp
mov
mov
add
push
inc
cmpsb
xor
xchg
lock
adc
mov
mov
sbb
and
test
adc
mov
mov
scas
das
mov
in
in
sub
jnp
imul
lret
xor
mov
xor
jmp
andb
insb
out
sbb
push
jne
xlat
popf
xchg
adc
sub
cmp
icebp
mov
jo
les
aaa
cmp
lea
mov
mov
mov
aaa
or
lds
lods
xchg
pusha
gs
movsl
aam
xor
pop
out
add
lcall
xchg
mov
mov
popa
mov
push
fistl
mov
clc
ja
inc
repz
xor
mov
sbb
adc
lahf
and
jbe
jg
sub
mov
jge
xchg
loopne
fdivl
xor
adc
or
shll
and
mov
imul
test
push
andl
leave
popf
adc
setno
or
cltd
mov
cmp
lock
adc
mov
mov
push
push
lcall
xchg
scas
out
adc
out
cmpsb
jecxz
fidivrl
mov
in
push
adc
jo
add
popf
mov
loope
mov
clc
mov
fwait
mov
fwait
hlt
adc
in
inc
out
cmc
cltd
lds
adc
ljmp
cmp
and
int3
mov
dec
cmp
test
imul
lahf
push
push
lods
imul
sub
sub
adc
adc
mov
adc
xchg
xor
xlat
mov
xchg
sbb
inc
cltd
mov
insl
gs
dec
gs
enter
mov
mov
inc
cmp
mov
test
rolb
xor
mov
mov
test
pop
movsl
mov
lock
add
shlb
mov
ret
movsb
push
scas
sub
stc
adc
fidivl
or
jg
mov
jns
fisubl
jle
mov
inc
scas
jnp
loop
sbb
sarb
or
push
cmp
testl
cmp
jae
push
rorb
jo
mov
fwait
add
adc
scas
fistps
out
lcall
jmp
and
jp
push
adc
scas
in
sub
scas
jge
jae
push
movsb
pop
call
out
loopne
inc
cmpsb
xor
add
mov
mov
ds
andb
call
pop
xor
inc
xor
repz
das
xchg
scas
add
push
mov
in
js
and
cmp
es
cltd
test
movsb
pushf
cmpsl
lcall
mov
or
rcr
jle
insb
test
mov
sub
ret
xchg
mov
les
mov
xchg
mov
imul
pushf
mov
leave
daa
popf
std
pop
push
mov
data16
xor
or
jo
clc
aaa
mov
shl
adc
xchg
sbb
popf
pop
call
jnp
lahf
mov
jge
popa
lcall
and
xchg
mov
mov
in
adc
fdivr
mov
addl
out
cmpsl
mov
mov
mov
inc
jbe
fsubrp
add
int3
cwtl
jo
jmp
mov
cmpsl
std
das
imul
movsl
lods
repnz
fwait
shll
in
sbb
mov
cmpsl
jp
mov
jl
pop
insl
sarl
push
mov
xor
leave
xor
fwait
out
jp
mov
popf
data16
lret
push
lret
push
add
push
dec
popf
es
and
sbb
pusha
mov
sbb
or
xor
xchg
out
mov
imul
aad
pop
push
ds
xor
add
dec
movsb
negl
das
lods
fidivrl
adc
add
jnp
xchg
sub
lret
cmp
icebp
sbb
es
ret
mov
gs
repnz
push
jle
pop
fidivl
mov
push
and
stos
and
jb
fwait
scas
loopne
adc
and
jae
fisubrs
push
jmp
test
pusha
inc
jo
cld
pop
cld
fwait
sbb
pop
aaa
sub
int
call
add
add
sub
push
or
movsb
movsl
sub
cmp
xchg
pushf
mov
mov
lds
push
out
into
and
pop
push
lcall
and
dec
adc
cmpsl
jl
ret
fistps
xlat
xor
fwait
mov
adc
mov
pop
in
sbb
outsb
mov
dec
jno
dec
jmp
das
in
xor
mov
jmp
and
add
cltd
cmpsl
repz
mov
pop
test
add
mov
cmp
int3
jnp
sbb
inc
mov
pushf
mov
lods
xor
cmp
test
outsb
adc
mov
cld
in
icebp
scas
sbb
pop
loop
bound
cmp
mov
dec
xor
nop
popa
test
cs
cmc
fmull
movsl
ret
mov
jg
and
movsl
mov
xor
ljmp
ja
mov
or
test
ss
loop
les
jo
mov
subb
ljmp
inc
ret
and
fsubl
enter
pusha
jne
cmpsb
int
sub
out
js
scas
movsl
xchg
and
cltd
xor
and
mov
scas
sbbl
pop
les
or
adc
sub
mov
and
outsb
scas
imul
adcb
inc
push
leave
xor
pop
jbe
push
test
push
or
adc
sub
gs
sub
jno
dec
cmp
stos
and
dec
lds
inc
mov
or
out
enter
loop
mov
add
dec
cmp
inc
les
dec
scas
jb
pushf
xor
xchg
rsm
inc
xchg
in
push
xlat
movsl
outsl
lods
or
mov
sub
lahf
das
xorl
stos
or
and
popf
or
push
push
mov
add
cmpsb
in
xchg
add
adc
stos
out
cmpsb
ss
and
shrb
test
jbe
fldl
inc
cmpsb
rcr
sahf
dec
xchg
xor
adc
stos
mov
sub
cmp
ds
mov
enter
gs
dec
fidivl
lcall
jecxz
popf
xchg
adc
cmc
cmc
and
outsl
fwait
and
mov
test
jge
add
call
mov
mov
subb
inc
div
repnz
xlat
jno
mov
xchg
mov
stos
mov
outsl
loopne
jae
int3
mov
stos
xchg
xor
shr
sahf
lcall
adc
insl
and
mov
into
cmpsl
add
and
sbb
xor
cltd
cmp
pusha
and
movsl
lahf
xchg
jns
cld
out
int3
jg
and
ljmp
mov
stos
daa
push
sbb
pop
cmp
push
cmpsl
jne
pop
sbb
pusha
in
and
mov
sub
push
aam
xchg
sbb
sarb
mov
xor
lcall
dec
ljmp
notl
mov
jge
cli
lods
out
sbb
lret
pushf
mov
aas
inc
fprem1
test
out
push
mov
cmp
outsb
mov
sbb
add
movsl
xchg
add
sbb
out
ss
popa
dec
sti
xchg
lods
and
push
sub
and
cs
xchg
mov
aas
test
jle
or
lods
bound
insb
outsb
xor
mov
ljmp
loop
pop
fdivp
jb
jno
cmpsb
inc
es
mov
cmp
mov
sub
das
cs
subb
mov
lods
adc
movsb
adc
mov
add
sub
clc
xor
xor
pop
clc
dec
ljmp
mov
pop
scas
sbb
mov
iret
movsl
mov
push
push
xor
mov
pop
sub
dec
jbe
add
mov
rep
mov
sarb
cld
mov
aam
and
bound
iret
icebp
int
mov
outsl
mov
sbb
inc
inc
popa
mov
in
jl
lods
hlt
xchg
cmp
enter
pop
mov
jo
push
gs
pusha
mov
fisubl
mov
out
sbb
test
mov
ss
pop
adc
sbb
push
lock
xor
testb
insb
cmpsl
adc
outsl
mov
mov
mov
loope
and
cmp
fwait
in
bound
and
insb
in
and
xor
sub
pop
xchg
sahf
in
pop
jns
jb
lock
data16
outsl
mov
loop
movsl
and
jo
hlt
outsl
xor
lock
add
insb
mov
test
push
mov
lods
cwtl
xor
fisttps
sbb
mov
mov
into
lret
stos
and
xchg
ss
and
jmp
call
aad
mov
xor
sub
int3
dec
fcmovnbe
les
pop
leave
sub
mov
fs
fwait
sbb
lock
mov
jp
dec
mov
mov
pop
sbb
shlb
xchg
lcall
repz
addr16
push
decb
addr16
inc
xchg
mov
jnp
adc
call
loope
mov
mov
bound
push
fs
pop
xor
dec
pushf
jecxz
outsl
dec
xchg
stos
jp
cs
lds
in
xchg
arpl
mov
jecxz
pop
in
mov
lods
movb
and
inc
xchg
inc
iret
shrb
negb
int
or
dec
addr16
jg
xchg
stos
jmp
push
mov
mov
sbb
in
xchg
stos
outsl
icebp
xchg
xchg
movsb
pop
std
je
sub
aam
dec
pop
std
jno
cltd
xor
and
sbb
in
sbbb
ljmp
cmpsb
mov
gs
push
scas
push
mov
mov
stos
ret
mov
fnstsw
fwait
lcall
jg
stos
xchg
rol
jns
jnp
mov
test
mov
xchg
ret
mov
cmpsl
lods
mov
mov
in
scas
ljmp
sbb
cs
scas
outsl
cmpsb
out
sbb
adcb
add
mov
sbb
test
addb
pushf
cwtl
push
xchg
nop
stc
mov
addl
xchg
repnz
mov
jle
push
icebp
setnp
sbb
cltd
jl
or
pop
mov
or
push
mov
push
xor
cmp
hlt
fwait
adc
bound
das
int
movsb
int
ret
test
sub
es
pop
jge
pop
shll
and
lods
mov
out
and
aad
xchg
popf
mov
adc
pop
pop
data16
std
xchg
clc
mov
cmp
sbb
and
adc
iret
and
fs
test
pop
mov
mov
cltd
fistps
sbb
inc
mov
lea
mov
mov
fsubl
popa
jmp
and
iret
sbb
mov
cwtl
aas
test
loop
mov
fwait
mov
mov
jne
mov
mov
andb
sub
xchg
mov
mov
xchg
scas
mov
sub
cmpsb
sbb
cmc
cmc
in
dec
or
int3
inc
out
or
out
pop
in
out
sub
daa
and
pusha
out
outsb
xchg
jne
mov
jmp
mov
dec
lods
jecxz
repz
aam
sbb
loopne
sbb
cmc
les
and
in
xchg
and
addr16
dec
in
out
pusha
push
test
jmp
mov
in
mov
es
mov
sbbl
jg
lea
cmp
mov
aas
mov
fdivl
mov
xor
xor
fwait
add
xchg
dec
xchg
aaa
or
in
xchg
andb
xor
jp
jne
fsubrs
ss
push
pop
add
inc
mov
inc
testb
fs
adc
dec
mov
stos
or
push
or
je
jg
push
and
pop
enter
fwait
aam
xor
out
rcr
jl
das
sub
ret
sbb
shlb
pop
test
mov
sub
into
loopne
daa
movsl
and
dec
push
cmp
pop
mov
and
mov
jmp
and
jb
sbb
xchg
pushl
fldl
cmpsl
jnp
mov
out
sbb
dec
insb
or
xchg
pop
in
xchg
pop
jb
outsl
mov
pop
aas
xor
out
mov
push
ja
xor
stos
jnp
inc
push
adc
and
movsl
xchg
in
mov
imul
shll
mov
pusha
mov
popa
jno
test
in
fistpll
and
scas
orl
dec
out
mov
mov
push
mov
ja
sbb
and
xlat
mov
add
in
xor
test
insb
cmp
test
mov
inc
insl
pop
adc
decl
test
jbe
insb
shrl
push
inc
int
imul
pushf
ljmp
inc
cld
out
and
push
lahf
les
nop
inc
out
xchg
ret
popa
fwait
rolb
aam
pop
mov
fldcw
ss
movswl
aaa
decl
jle
jp
mov
jnp
lret
xchg
push
nop
inc
or
repz
xchg
rep
dec
or
and
sbb
in
mov
sbb
bound
fiadds
pop
fdivrs
clc
mov
test
lock
loope
xchg
mov
es
sbb
sbbb
cmp
mov
scas
fmul
mov
mov
push
xchg
push
dec
subb
test
aaa
and
jp
cwtl
pushf
jge
mov
fisubl
sbb
loopne
es
jmp
or
inc
or
insb
jmp
movsl
xor
out
and
pop
pop
jae
sub
imul
out
mov
aam
jp
cmp
clc
sbb
iret
sbb
pop
data16
inc
cli
aad
sbb
mov
fsubl
inc
out
lea
mov
pop
ja
test
xchg
cli
insl
mov
arpl
sub
je
xlat
jmp
push
insl
roll
xor
or
lcall
fcmovne
testl
aad
push
jne
pop
scas
in
dec
mov
or
and
push
out
pop
mov
add
xorl
jbe
mov
xchg
in
xorl
dec
rcrb
aas
aas
into
mov
jp
leave
mov
jae
jle
subl
cmp
mov
incb
jns
call
push
inc
cld
pop
xchg
cltd
lock
cmp
xlat
adc
addb
xchg
sub
pop
mov
jle
icebp
aad
push
dec
clc
lret
out
mov
stos
cmpsb
or
inc
inc
outsl
popf
inc
mov
test
xor
movsb
popf
sti
scas
cmpsl
scas
and
sbb
cmp
pusha
pop
pop
loopne
dec
jno
lds
pop
mov
sub
bound
bnd
test
out
mov
movsl
mov
cmp
out
popf
sbb
push
loop
push
out
mov
movsl
adc
popa
in
scas
scas
sub
mov
mov
xor
out
cli
inc
xchg
loopne
jmp
mov
scas
mov
lea
mov
mov
dec
test
flds
xchg
and
addr16
aas
mov
mov
sete
ja
cmpsl
addr16
fdivp
loope
pop
cmpsl
outsb
jne
fisubrl
repnz
pop
push
sub
scas
mov
inc
pop
xchg
jne
test
ljmp
es
push
mov
pop
cmp
ret
sub
sbb
cmp
in
rcrl
jne
test
and
mov
xor
sbb
or
repz
lods
dec
mov
jo
stc
iret
das
repz
je
and
pusha
mov
sbb
es
add
pop
pushl
jle
sbb
mov
sahf
outsl
rep
lret
dec
fadd
jbe
and
and
add
sahf
add
push
lret
loop
and
pop
aaa
fldenv
cs
sbb
sub
jg
stos
push
cld
mov
outsl
xor
xchg
ja
shll
imul
ljmp
sbb
subb
sbb
mov
aaa
mov
xchg
cmpsl
jp
mov
mov
sub
cmp
mov
adc
mov
mov
negb
lcall
mov
ja
movsb
push
cmpsl
enter
iret
add
mov
ds
gs
out
divl
jo
cmpsb
and
in
pop
xchg
mov
inc
cwtl
rcrl
ja
pop
mov
divb
push
out
cmp
imul
push
jmp
jecxz
mov
ficoms
cltd
call
rolb
mov
cli
and
imul
lcall
xchg
or
push
outsb
inc
sahf
jbe
lods
or
xchg
add
mov
jge
ds
or
aas
fwait
aad
sub
jge
sbb
xchg
fidivrl
xorl
adc
fwait
aam
xchg
jae
out
out
mov
inc
mov
mov
adc
mov
xchg
xlat
mov
and
movsb
dec
outsb
sub
sti
jmp
mov
add
and
mov
push
add
lods
repnz
mov
xchg
xchg
ficomps
pop
mov
in
or
out
sbbb
ret
repz
mov
and
cmpsl
mov
addb
mov
cmp
mov
push
pop
stos
mov
scas
or
jg
dec
xchg
ficoms
in
pop
rol
push
js
push
lahf
or
mov
mov
fsub
mov
inc
lret
cmc
and
push
add
sub
test
xor
cld
sub
sub
fs
mov
inc
push
sub
cmpsl
jp
mov
sbbl
test
push
or
or
xor
mov
or
mov
mov
ja
aam
mov
movsl
iret
jmp
cmc
imul
and
test
movsb
negl
das
and
jns
les
add
in
inc
sbbb
shlb
mov
sub
mov
jg
pushf
jae
jmp
outsl
mov
scas
clc
call
mov
test
data16
cmpsb
in
testl
imul
addl
jmp
jne
insb
add
inc
and
dec
fs
inc
aam
pop
cld
mov
rcl
or
jmp
aas
fwait
sbb
cmpsb
insb
sbb
out
outsl
pop
push
subl
outsl
pop
mov
daa
leave
pop
cmp
dec
inc
test
adc
js
loop
and
cmpb
dec
repnz
nop
insb
sub
out
fbld
mov
hlt
movsb
es
mov
cmp
sub
scas
xchg
inc
sub
sub
pop
add
sbb
xchg
xor
movsb
aas
test
mov
jo
lcall
xchg
loopne
out
mov
pushf
xor
dec
fsubl
imul
push
je
test
mov
aaa
aam
xchg
mov
sahf
mov
jno
test
xor
add
pushf
mov
movsl
outsl
cmp
add
aam
push
or
pusha
xchg
sub
pop
adc
into
scas
sti
and
out
in
int
adc
adc
data16
sti
mov
jbe
sbb
push
mov
daa
clc
xor
mov
adc
jns
sahf
pusha
or
pop
or
mov
lods
xorb
lods
scas
test
daa
loope
test
mov
inc
inc
ljmp
cmp
and
jb
mov
lea
dec
out
xor
mov
fldenv
push
jo
call
push
pop
pushf
mov
stos
ret
scas
in
and
btsl
cmpsl
mov
lods
imul
stos
les
xchg
or
push
and
jl
inc
enter
mov
in
sbb
popf
ja
lret
cli
adc
dec
xor
sbb
cltd
out
mul
and
adc
into
iret
mov
sub
jmp
lds
jp
lds
movsl
fs
jmp
dec
add
dec
mov
hlt
cs
andl
push
sbbb
fwait
scas
ljmp
jns
lock
push
mull
mov
orl
imul
call
movsl
into
adc
out
fidivrl
es
loop
cmp
mov
jo
movsb
popf
aas
test
out
iret
lods
mov
es
sub
xchg
xchg
shlb
mov
and
cmp
xchg
sar
gs
xchg
pop
and
out
and
sub
or
pop
js
push
imul
jb
or
int3
popa
fwait
movsl
out
and
and
insl
mov
pop
ret
call
sbb
sahf
add
je
outsl
mov
mov
mov
mov
sub
push
mov
push
cmp
out
mov
sbb
jae
outsb
xor
jl
clc
scas
frstor
out
and
mov
inc
dec
movsl
pop
les
push
js
ret
scas
call
xor
push
mov
rcll
imul
mov
dec
ret
xor
jp
popf
inc
popa
xchg
shll
mov
scas
mov
call
jae
add
std
aaa
push
add
stos
lock
mov
mov
repnz
loop
mulb
bound
inc
jns
xor
push
pop
testl
jno
cmpsb
bnd
test
test
in
arpl
pop
repnz
movsb
push
int3
jge
push
pop
scas
lods
xchg
repnz
xor
adc
addr16
sub
cmp
ds
push
xchg
mov
xchg
ficoms
or
mov
cmp
lods
inc
divl
cs
scas
lea
nop
lahf
jg
ljmp
adc
gs
mov
dec
repnz
adc
cli
and
xchg
add
jno
dec
and
scas
xchg
dec
cmp
xchg
xchg
mov
xchg
jnp
mov
xor
pop
insb
push
jle
mov
pop
or
fwait
ret
in
test
mul
jmp
bound
cmp
movsl
mov
cld
outsl
inc
push
mov
adc
cmp
pop
lret
int3
cmp
cmp
popf
push
xor
adc
cld
push
mov
bound
fstpt
cwtl
sub
fstpl
sbb
test
loope
loope
aam
adc
shrl
out
es
jno
add
push
mov
cmpsl
loop
mov
ret
inc
sbb
scas
and
or
pop
mov
pop
dec
mov
adc
and
out
jmp
loopne
loop
and
mov
fwait
test
ret
jp
xchg
imul
pop
and
push
fwait
imul
mov
mov
scas
mov
add
jecxz
test
inc
mov
xchg
xchg
mov
push
insb
test
jbe
xchg
pushf
scas
inc
jl
outsl
or
std
ficomps
and
scas
lods
mov
mov
in
and
mov
adc
adc
cmp
iret
stc
das
xor
and
push
mov
fildl
jp
and
cld
es
mov
pusha
mov
or
clc
sub
sahf
push
sbb
xchg
inc
mov
or
dec
scas
fs
shl
sahf
add
pop
lods
xchg
cmp
sbb
sbb
push
mov
xchg
push
out
out
sahf
dec
int3
test
inc
sub
cld
bound
inc
adc
out
cmpb
cltd
enter
mov
lods
and
fs
add
cmpsb
pushf
inc
pop
test
sti
int
sbb
lods
pop
popa
js
stos
cwtl
in
pop
jnp
mov
hlt
nop
mov
mov
ss
push
scas
dec
mov
inc
test
push
xor
adc
or
les
adc
cwtl
ja
push
pop
mov
addb
mov
mov
mov
mov
fsubl
xchg
or
sub
data16
aad
and
xchg
add
test
inc
add
sahf
xchg
lahf
add
jnp
pop
add
xor
jb
scas
lcall
inc
xor
jmp
lret
pushf
imul
hlt
mov
mov
ljmp
cmp
mov
cmp
xchg
sub
movsb
push
and
pop
repnz
fsubrl
inc
sti
lea
scas
sub
ds
daa
loope
mov
imul
or
cmpsl
loop
and
and
and
cmpsl
lods
fst
test
mov
leave
loope
nop
xchg
popf
enter
jbe
mov
popf
inc
ja
lahf
mov
adc
inc
mov
test
mov
mov
scas
mov
sub
movsb
sbb
add
or
loopne
cmp
jmp
adc
aam
and
jae
xor
rorb
mov
iret
shll
mov
lods
and
xchg
int3
movsl
movsl
cli
add
scas
xorb
inc
xchg
lret
xor
push
shlb
cmpsl
xchg
jmp
ss
jno
imul
mov
push
mov
push
lods
rclb
xor
ret
lods
sub
push
fs
xor
or
les
mov
sbb
repnz
xor
lds
mov
and
mov
pushf
jecxz
popf
pop
fdiv
cmpsb
dec
push
enter
stos
fnstsw
jg
xor
stc
jecxz
ret
pop
add
xchg
sbb
sbb
mov
outsl
pop
insb
imul
or
inc
sbb
sbb
iret
pop
adc
aas
imul
sbb
aas
inc
mov
sub
in
cltd
mov
cmpsb
sti
sbb
sbb
test
xorl
popf
repz
jecxz
pop
in
add
scas
pop
add
lcall
pop
xchg
call
pop
mov
cmp
jg
add
pop
xchg
jne
sarb
mov
mov
test
mov
les
sub
mov
test
push
in
pushf
pop
cmp
jnp
xlat
xchg
cmp
pushf
add
sbb
push
adc
add
sub
adc
out
adc
test
frndint
sub
daa
xor
sbb
fwait
movsb
ret
mov
fwait
and
pop
lods
and
push
mov
scas
ljmp
sbb
outsl
xchg
ds
rcrb
cwtl
movsl
cmp
or
xchg
fistpll
xor
xor
mov
mov
stos
sub
dec
xor
rolb
movsb
pop
sbb
dec
jp
sti
lahf
mov
imul
shlb
mov
cmp
push
and
mov
mov
xchg
bnd
and
and
in
push
shll
mov
das
shr
out
in
sub
in
add
sbb
mov
sbb
hlt
js
cmc
xchg
mov
popl
mov
sbb
popf
scas
cmp
jle
xchg
add
push
cmpsl
ret
sbb
je
mov
fwait
scas
movsb
adc
les
pusha
out
bound
cwtl
les
ret
subb
sub
xchg
stos
loop
shrl
sahf
add
jae
or
sbb
out
shr
mov
outsb
cltd
dec
cmpsb
sub
iret
aad
in
loopne
cmpsl
cltd
mov
mov
add
cmc
imul
in
test
and
imul
jecxz
sub
jge
cmpsl
cmp
test
popf
sub
mov
fwait
inc
push
flds
cmpsl
mov
dec
mov
lods
pop
leave
in
test
jae
xor
movsb
movsl
push
inc
jae,pt
and
call
stos
pop
aaa
scas
sbb
out
xchg
mov
stos
jns
scas
les
mov
movsl
pop
lahf
mov
inc
xor
jns
stos
dec
addr16
das
xchg
scas
scas
dec
int
pop
push
sbb
rclb
and
dec
ljmp
sbb
or
movsl
dec
out
icebp
stos
scas
jbe
mov
mov
pusha
into
arpl
cmp
push
jp
mov
or
lods
xchg
movsl
xor
out
and
in
lods
xchg
mov
add
aas
sbb
mov
test
mov
aas
and
test
imul
jns
fninit
imul
es
mov
andb
stos
fwait
and
sub
push
sub
mov
mov
adc
cltd
iret
mov
mov
xor
push
xchg
movsb
stos
subb
sub
into
mov
mov
xorb
rolb
cltd
xchg
daa
mov
and
addr16
xor
daa
pop
pop
push
pop
xchg
out
lret
adc
mov
jl
and
je
xchg
div
sahf
add
sub
outsl
or
mov
inc
mov
jecxz
inc
xchg
mov
cmpb
adc
jp
and
xor
dec
lahf
mov
mov
jb
jne
xchg
imul
loopne
stos
daa
lret
cmpl
xor
cmpsl
mov
into
mov
xchg
fnstcw
andl
push
inc
mov
loope
orb
lock
and
call
mov
fmull
xchg
ss
xchg
lods
les
cltd
loop
mov
add
lcall
mov
stos
pop
call
pop
xchg
stos
push
lahf
stos
jle
stos
insl
cld
stos
and
fwait
imul
movsl
push
jo
test
push
lea
mov
cmp
and
pusha
mov
cmpsl
out
das
sub
pusha
arpl
xor
cmp
in
adc
cmpsb
out
and
test
aam
sbbl
dec
xor
pop
push
xlat
mov
call
inc
les
push
push
daa
sub
dec
push
call
ljmp
jo
ljmp
dec
cmp
sbb
scas
push
fwait
mov
repnz
cmp
xchg
jbe
dec
int
fstl
fstpt
arpl
jns
imul
pop
pop
jmp
mov
xchg
in
ret
pop
mov
inc
cmp
pop
sahf
cmp
and
test
aam
push
push
pop
xchg
sub
stos
test
mov
pushf
fcoml
les
imul
xchg
push
jg
xorb
xchg
mov
dec
stos
dec
mov
pop
lods
add
jo
push
les
mov
insb
test
lcall
in
mov
daa
sub
fcmovnu
shrb
lds
test
and
adc
mov
loop
mov
fcmovbe
jle
xor
sub
icebp
imulb
mov
frstor
and
xchg
lods
sub
pop
push
sbbb
data16
cmpsl
mov
test
adc
cmpsl
mov
stos
daa
pop
mov
int3
pop
dec
mov
shll
push
push
movsb
aaa
scas
add
shrb
mov
cmpsb
shrl
add
mov
or
hlt
jbe
icebp
mov
aaa
mov
aaa
jnp
inc
and
call
inc
enter
xor
sub
mov
jae
add
mov
inc
movsb
mov
add
sub
cwtl
add
pusha
dec
push
mov
jecxz
jb
je
mov
jne
daa
mov
sub
mov
imul
mov
sub
les
mov
es
loopne
out
xchg
ds
loopne
and
sbb
or
fwait
xchg
xchg
push
fwait
sbb
add
mov
stos
mov
cmpsb
pop
es
push
fwait
les
xorl
sahf
or
pop
mov
scas
sub
stc
test
add
cmpb
mov
enter
js
rorb
add
add
in
mov
enter
dec
andl
xchg
stos
lock
adc
dec
out
mov
or
inc
sbb
and
andl
add
lods
cld
jmp
cmpsl
je
lods
mov
inc
mov
movsb
loop
mov
mov
sahf
les
mov
scas
jle
lea
sub
mov
imul
ror
imul
scas
nop
inc
lds
mov
jecxz
cmpsl
and
sbb
fwait
or
mov
or
jmp
sbb
xor
dec
mov
or
dec
cltd
add
daa
xor
mov
cmpb
mov
imul
mov
mov
daa
or
mov
in
test
push
xchg
test
adc
mov
mov
lock
out
mov
lcall
aaa
ret
cmpsb
xor
push
adc
ds
bound
pop
es
mov
sbb
sahf
movsl
ret
mov
mov
movsl
flds
test
lahf
out
mov
cmc
test
inc
jg
sti
iret
jge
dec
dec
sbb
scas
out
xchg
cltd
mov
popf
sub
ljmp
fadd
jne
push
outsb
pop
inc
push
testl
jo
stos
dec
mov
jle
scas
enter
ljmp
popa
scas
addl
push
push
xchg
and
mov
stos
int
leave
cmc
cmp
and
shl
xchg
gs
xor
sub
push
cmpsb
out
mov
lahf
mov
and
add
xchg
ljmp
testb
sub
add
mov
cmp
loopne
cmpsb
into
divb
insb
mov
orl
and
int3
sub
mov
add
scas
mov
adc
mov
lods
inc
cmpsl
pop
push
leave
pop
frstor
mov
bound
pusha
ss
push
popa
xor
xor
scas
les
or
pushl
stc
cld
mov
test
movsb
cmpsl
mov
int
sbb
int
mov
out
adc
mov
rol
push
cltd
lock
clc
pop
mov
xor
mov
and
cmp
iret
sub
icebp
and
xchg
es
aaa
icebp
jbe
fidivs
xor
push
add
test
mov
xchg
out
cmpsl
sbb
les
pop
in
mov
pop
cmp
nop
scas
xchg
jbe
in
xchg
cmpsb
loop
das
sub
mov
add
fisubrl
cmp
mov
mov
cmp
ret
fistpll
jle
dec
pop
cmp
lret
fildll
test
lds
push
xor
mov
mov
cmpsb
out
adc
fwait
mov
jp
cmp
insl
mov
mov
sahf
xor
mov
mov
out
xchg
out
imul
and
movsb
data16
push
adc
cli
xor
std
repnz
movsl
sbb
push
or
or
out
dec
andl
and
in
sbb
mov
cmp
aaa
pop
sti
push
jg
pop
pushf
mov
das
mov
test
outsl
popf
das
or
movsb
jecxz
call
int
std
mov
addr16
pop
fldenv
pop
or
call
gs
xor
mov
or
inc
sbb
mov
stos
jne
fstps
mov
jbe
jno
inc
daa
call
pop
adc
pop
shll
lock
repnz
stos
mov
fistpl
stos
insb
loopne
fwait
insl
dec
arpl
mov
xor
lret
mov
xorb
mov
sti
in
frstor
adc
mov
mov
push
cmp
sub
dec
push
cmp
and
arpl
pop
fwait
cmp
jne
out
jae
mov
nop
mov
ret
ret
xchg
out
push
sbb
pop
cld
cmpsb
jle
popf
xor
scas
mov
cld
test
jne
mov
aad
lahf
jb
sti
cmpxchg
andl
es
fnsave
cmp
and
and
mov
pop
mov
sub
js
xor
pop
xchg
mov
push
dec
rolb
loopne
in
sarb
xchg
rolb
xor
mov
loopne
das
xor
xor
pop
shl
pop
pop
push
push
mov
and
popf
and
insb
negl
movsl
pop
pop
scas
movsb
jno
mov
test
xor
cmp
and
and
xor
and
mov
mov
test
mov
push
mov
cltd
cmpsb
ds
push
test
enter
or
mov
call
sbb
movsb
sub
lret
jmp
hlt
aas
icebp
sub
add
popf
jb
mov
mov
cwtl
rcrl
call
sahf
movsb
and
push
out
mov
and
movsl
les
subb
out
and
movsb
in
and
xchg
mov
popa
in
dec
and
out
shlb
ret
pop
fnstenv
pop
or
and
jecxz
pop
mov
xchg
call
scas
movsb
ror
cmpsb
inc
in
rolb
int3
aas
daa
sub
xchg
stos
sub
daa
xchg
stos
mov
es
int3
daa
data16
cltd
push
rdmsr
or
push
es
into
in
iret
loope
mov
and
and
cwtl
shll
test
aam
lahf
cmp
lods
popa
in
dec
and
addr16
je
xchg
scas
aam
bound
dec
popa
cmp
nop
and
dec
test
movsb
adc
pop
xchg
cmp
xchg
sbb
jne
lods
dec
xorb
or
fcompl
int
sub
mov
lcall
test
lods
outsl
mov
out
sub
push
scas
push
or
and
out
mov
dec
sub
and
dec
outsl
sub
push
push
mov
cld
add
jmp
mov
movsb
fwait
xchg
pop
jg
mov
in
outsl
stos
dec
jmp
sbb
pop
pop
movsb
mov
mov
push
xchg
mov
ljmp
cmpsb
mov
in
mov
jnp
stc
js
cltd
jne
or
and
popf
insb
ds
jp
imul
test
pop
and
int
ds
jb
cli
xor
outsl
insl
mov
movsb
cmpsb
or
and
and
lret
test
or
scas
and
push
test
or
bound
aaa
fldl2t
outsb
sbb
out
xchg
test
ret
rcr
iret
mov
rcl
push
aam
mov
ljmp
mov
fsub
lods
jge
mov
lahf
mov
dec
decb
sub
leave
jne
scas
in
lahf
scas
stos
hlt
ret
or
ficomps
in
xchg
dec
test
sbb
pop
pop
daa
fistpl
test
and
mov
cmp
add
ret
push
ret
pop
and
inc
xor
mov
sbb
pop
cmp
adc
leave
mov
test
lock
xchg
test
mov
lcall
cmp
dec
ss
inc
mov
leave
das
mov
mov
insl
lret
inc
jb
hlt
sub
addr16
aas
bound
mov
mov
adc
or
in
or
in
addr16
mov
outsb
jne
sbb
test
lret
or
movsb
mov
jmp
mov
dec
sti
cmpsl
jne
int
sbb
aad
fisubl
xchg
test
insb
jo
or
dec
pop
fiaddl
lods
hlt
xor
loope
and
aam
push
shll
fincstp
outsb
add
movsb
or
sbb
movsb
movsb
push
movsb
in
fwait
adcb
pushf
mov
fwait
sbb
mov
xchg
jno
sti
jg
inc
mov
xor
insb
and
dec
es
sub
xor
mov
xchg
bound
pop
xchg
xchg
dec
mov
mov
sar
push
sub
ljmp
lds
fsubl
aad
jge
mov
dec
sub
addb
jb
jae
jge
mov
mov
mov
fsubl
aad
jge
sbb
pop
lret
scas
mov
shll
sbb
sub
pop
test
cmp
push
jae
jge
test
sbb
sbbb
sbb
lret
pop
sbbb
and
jae
iret
ss
addb
xor
inc
scas
in
jo
sub
add
dec
nop
sub
add
jecxz
sbb
inc
lahf
jg
call
add
add
das
mov
fldcw
cmp
xor
leave
sbb
fwait
pop
adc
pop
dec
lods
cltd
cltd
movaps
pusha
test
bound
in
cmpsb
fwait
lods
push
jo
inc
sbb
mov
shll
or
pusha
inc
mov
cmp
data16
mov
pop
pop
lods
pop
out
cmpsl
cmpsb
mov
shll
push
stos
ror
pusha
daa
sub
mov
mov
xchg
push
cmp
push
xor
jnp
jb
or
push
les
out
fidivs
movsl
and
mov
inc
hlt
scas
imul
or
inc
sub
dec
mov
scas
out
stos
sub
or
dec
xchg
mov
inc
test
movsb
movsb
inc
cmp
repnz
aam
mov
dec
fwait
ss
xlat
insb
dec
mov
pushf
sahf
movsb
scas
mov
mov
mov
xchg
xor
movsb
xchg
fwait
daa
inc
movsb
mov
or
sbb
out
or
or
daa
push
xchg
fwait
stos
mov
push
mov
inc
fwait
dec
out
xchg
out
cwtl
scas
mov
movsl
mov
jb
fnstenv
dec
fwait
lcall
xchg
mov
and
pop
fs
mov
push
adc
arpl
jle
mov
or
nop
fs
cmp
cmpsb
rorb
dec
push
test
and
les
push
push
es
sub
lds
inc
or
xchg
xchg
gs
mov
fwait
xchg
xor
cmpsb
sbb
inc
outsl
xchg
xchg
or
lret
push
and
mov
pusha
in
fidivs
in
cmpb
sbb
rorl
push
jl
adc
jg
adc
push
mov
mov
jae
inc
or
test
cmp
aam
data16
lea
and
into
xchg
push
cs
or
xlat
or
aam
sub
xchg
bound
sahf
cmp
stos
and
push
pop
xchg
in
pop
ja
shrb
dec
cmp
jle
pop
jae
jle
cwtl
pusha
inc
push
sbb
sbb
cmp
jle
push
and
loopne
mov
andb
das
lret
push
test
adc
fistpl
mov
jnp
in
xor
test
xchg
xchg
into
bound
jnp
push
cmp
test
inc
sbb
shlb
mov
fs
mov
leave
dec
mov
xchg
call
xor
lea
ljmp
popf
ja
sub
adc
stc
aad
cmp
int3
sub
les
sub
pop
inc
test
mov
mov
sbb
sbb
je
inc
and
mov
push
mov
fsubrs
pop
jae
and
das
mov
mov
inc
add
dec
push
js
std
push
xor
rolb
or
enter
add
fwait
mov
sbb
xor
push
and
lods
aam
mov
stos
call
js
xchg
loopne
and
and
scas
push
mov
pop
and
shll
mov
cs
cmpsl
xor
rorb
pop
xorl
mov
jns
mov
or
and
push
dec
xchg
sbb
cmp
xor
inc
shll
test
inc
sbb
xor
scas
jb
mov
mov
repz
dec
sbb
fcompl
cmp
and
jne
fcomps
lcall
js
or
mov
cmpsb
xor
inc
mov
scas
fsubrs
fstp
subl
test
stos
fisubrl
cmp
and
xchg
mov
cmpsl
call
lret
lods
movsl
sbb
repnz
and
xor
adc
and
jp
push
sub
dec
pop
mov
fldcw
aam
loopne
or
sahf
bound
shll
inc
repz
lea
cs
sbb
xchg
ds
mov
mov
test
sbb
fwait
test
sahf
out
push
push
popl
and
lds
xor
test
repz
jbe
xor
movsb
in
inc
sub
pusha
push
mov
mov
push
jbe
fisubl
sbb
in
cld
xchg
fdivs
cltd
lahf
dec
xor
loopne
jae
enter
cwtl
sbb
outsl
popa
cltd
andl
test
jae
and
lcall
mov
cli
add
xor
mov
mov
mov
or
nop
jp
mov
std
lds
test
out
fistpl
std
aas
aad
mov
and
enter
jp
movsb
pop
cmp
rclb
test
scas
divl
push
call
and
in
insl
icebp
dec
add
dec
mov
test
and
jb
lea
lret
sbb
xchg
fwait
mov
daa
and
adc
icebp
pop
dec
in
and
insl
fsubr
pusha
xchg
pusha
and
dec
loope
xor
in
out
pop
jnp
outsb
fcmovbe
aas
push
inc
out
mov
mov
dec
and
xor
test
out
or
out
mov
pop
cltd
int
push
add
ljmp
dec
movsb
imul
pop
addr16
lcall
mov
sub
inc
xor
lods
mov
pop
and
lods
icebp
out
sbb
mov
sub
sub
arpl
mov
mov
mov
cmpb
les
mov
mov
mov
in
adcb
dec
fwait
lock
insl
pop
lcall
popf
xchg
lcall
clc
bound
inc
out
cltd
int
pop
gs
xchg
dec
and
pop
push
xchg
popa
stos
jmp
pop
hlt
fs
in
push
hlt
sub
xchg
int3
mov
and
insb
cmpsb
and
add
stos
adc
mov
sub
icebp
xor
scas
movsl
sub
dec
jl
loop
sub
imulb
sbb
test
cmpb
out
cmpsl
scas
sub
jbe
jge
xchg
mov
sbb
jb
movsl
push
inc
mov
jp
ss
test
or
sbb
push
mov
std
lcall
mov
mov
adcb
mov
scas
je
adc
test
inc
pop
ljmp
push
jae
ljmp
mul
std
dec
movsl
popf
mov
cmpsl
and
cmp
inc
jge
out
xor
loope
movsl
jbe
in
and
xchg
movsl
mov
stos
test
inc
ret
bound
mov
and
mov
in
andb
lds
les
popf
cmp
ds
pushf
repz
scas
clc
imul
aaa
shll
mull
add
shl
xchg
pusha
aam
movsl
cmpsl
inc
dec
stos
inc
mov
mov
daa
ds
sub
push
lahf
icebp
sub
in
sub
movsb
in
jne
loopne
xor
imul
hlt
sbb
das
ds
mov
repz
cmp
push
daa
and
xor
cmp
xchg
icebp
mov
push
and
fstpl
cmp
lcall
sbb
xor
in
ja
sub
mov
lahf
dec
lahf
cltd
inc
add
out
mov
xchg
xchg
sbb
jne
push
sbb
sbb
popa
out
lods
jmp
test
scas
fcmovbe
xchg
stos
lds
scas
mov
xchg
ret
or
dec
pop
aam
xor
pop
aam
outsl
mov
xor
popf
jno
pusha
jle
mov
subb
xlat
loopne
sub
lret
shll
out
jp
jno
cwtl
addr16
scas
and
push
sub
jg
mov
ds
push
inc
dec
jecxz
mov
and
cld
sbb
mov
sub
mov
ljmp
pop
sahf
movsl
int
add
mov
mov
mov
add
jns
cmpl
adc
dec
mov
out
mov
shl
mov
and
arpl
aas
jne
xchg
jnp
add
cmc
mov
imul
das
jno
pop
stos
repnz
mov
sbb
jmp
or
sahf
mov
inc
cld
mov
sub
sub
fisttpl
sti
cmpl
ljmp
sub
push
inc
das
gs
std
inc
aas
mov
loop
repnz
ret
das
das
jo
lret
adc
loop
pop
pminub
stos
jg
mov
cmp
movsb
sbb
mov
jno
dec
mov
xor
cwtl
mov
inc
dec
repnz
pop
xchg
jo
test
or
xchg
daa
mov
mov
fcompl
inc
movsl
ss
test
out
sub
das
pop
xorb
push
inc
xchg
sub
fdivrs
xchg
flds
insb
lods
popf
test
aam
jns
loope
icebp
xor
and
add
lods
mov
xor
xlat
mov
jno
test
xchg
fs
sbb
stc
es
adc
mov
cmpsb
mov
bound
sub
and
sti
xor
mov
mov
add
sbb
add
mov
and
inc
ljmp
sub
imul
das
mov
fsts
cmp
jecxz
fadd
sub
pushf
test
int
dec
inc
sub
mov
addr16
adc
imul
scas
insb
mov
retw
mov
scas
lods
int
xchg
imul
mov
add
or
sbb
lret
subl
addr16
sub
adc
pusha
mov
mov
stos
xorl
inc
pop
xor
icebp
ljmp
mov
xlat
jl
test
loopne
jp
dec
jmp
test
mov
mov
sbb
out
lods
mov
push
jecxz
xor
imul
lods
out
jecxz
pop
dec
mov
cmp
adc
mull
push
leave
fwait
pop
fs
icebp
movsl
dec
dec
ja
jae
mov
lods
mov
cmp
and
shll
mov
xchg
jnp
add
les
test
inc
sbb
xchg
insb
hlt
scas
push
xchg
shr
cmp
ret
xchg
sbb
scas
fwait
out
imul
fwait
xchg
sbb
bound
xchg
sub
test
and
movsb
dec
push
cli
mov
push
and
std
cld
testl
mov
pop
adc
jae
push
das
out
loopne
hlt
sub
push
dec
mov
loopne
sub
sbb
or
inc
lret
cltd
push
loope
and
mov
sbb
xor
cmpsb
cmpsl
outsl
xor
mov
xchg
jg
sbb
test
negb
idiv
xchg
push
xor
mov
cmpsb
xchg
outsb
and
fcoms
jmp
xchg
enter
int
cmp
imul
jp
repz
sbb
adc
mov
rep
out
xchg
mov
repz
xchg
pop
pop
xor
xchg
jbe
xor
mov
scas
add
shrl
xlat
and
pop
adc
aam
jae
loopne
movsb
mov
mov
imul
push
sub
xor
mov
pop
xchg
call
pop
add
repnz
mov
mov
dec
mov
int
ret
divl
or
cld
and
in
movsb
add
loop
and
insl
cwtl
xchg
sets
xor
or
sti
sub
addr16
aad
sbb
movsl
dec
lcall
out
pop
dec
mov
mov
arpl
push
sub
cwtl
xor
call
sahf
int
or
mov
shlb
loop
jno
loopne
mov
scas
mov
orb
mov
add
adc
jnp
mov
clc
xor
stos
mov
aad
stos
ds
dec
lret
mov
add
jae
ss
pusha
repz
jne
lcall
push
lret
mov
xchg
inc
pop
xor
es
out
sub
push
jae
mov
cltd
loopne
imul
cmp
and
rcrb
mov
push
sub
pop
and
or
cmpsl
dec
mov
fldenv
cmp
mov
xor
imul
subb
and
and
cltd
mov
push
cmp
sbb
cmp
or
xor
lahf
xor
jb
into
mov
iret
sub
ss
sub
subb
shrl
or
ds
inc
rorb
imul
xchg
push
into
mov
or
xchg
je
movb
subw
mov
les
fwait
or
push
xorl
pop
or
test
or
pop
movsl
fcoml
andb
and
pop
scas
cmp
push
test
mov
scas
out
rol
scas
xchg
xchg
jl
ljmp
cmp
das
mov
dec
in
leave
adc
call
add
in
mov
jno
pop
mov
xchg
adc
sbb
outsl
bound
sub
pop
sub
stos
and
sbb
sub
int
xchg
jp
pop
mov
dec
mov
in
arpl
xor
dec
icebp
sbbl
jae
stos
cmpsl
movsb
loopne
fimull
cltd
fisubs
mov
and
sbb
shlb
loop
jp
mov
cmp
mov
mov
push
sub
icebp
daa
daa
cmpsb
mov
loopne
jb
dec
lds
lods
imul
xchg
xor
in
out
inc
lods
xor
out
push
jno
popa
mov
popf
mulb
and
add
movsl
inc
and
aam
cmpl
test
dec
add
punpcklwd
adc
mov
push
cld
cmc
insb
mov
sub
mov
stc
fs
sub
mov
sub
shrl
xor
ljmp
dec
and
jle
in
test
cmp
sahf
lods
pop
mov
sub
insl
movsb
test
stos
push
cmpsl
and
push
sub
mov
xchg
xchg
lcall
xchg
insb
test
int
movsb
mov
movsb
push
mov
addr16
int3
mov
mov
in
pop
les
inc
sbb
rol
lods
dec
xchg
shll
lods
insl
lcall
push
jns
hlt
xchg
dec
sub
push
lcall
je
ss
bound
and
add
test
movsb
sbb
or
movsl
lds
xchg
xor
mov
sbb
cld
push
loop
sub
aas
push
xlat
imul
dec
xor
movl
lret
jnp
outsl
jmp
jo
scas
mov
gs
xor
cltd
sbb
cvtps2pi
adc
leave
or
lock
cmp
daa
sub
jp
insl
orb
inc
scas
test
adc
jnp
scas
add
adc
push
fwait
xor
mov
cs
fiaddl
and
roll
jns
cmpsb
cltd
lds
dec
or
lea
push
int
or
in
inc
bound
imul
ss
xchg
lock
fwait
clc
push
mull
and
aad
sahf
and
push
sbbl
mov
cmp
mov
adc
ret
out
mov
ja
jmp
jno
inc
jb
cltd
fadds
sub
xchg
hlt
stos
data16
cmp
into
or
xchg
aaa
and
sbb
inc
mov
out
fstpt
and
and
cltd
movsl
inc
and
ficoml
and
iret
daa
pop
adc
std
int3
mov
xor
out
stos
pusha
imul
dec
idivl
jle
xor
mov
adc
cmp
jo
out
daa
pop
les
adc
mov
push
add
ss
jb
cld
pop
dec
cmp
mov
call
pop
clc
push
loope
push
jo
xor
jae
les
das
and
test
shl
jbe
test
xlat
cs
mov
int
int3
stos
loopne
mov
rcll
xor
loop
inc
mov
fdivrl
mov
call
xchg
mov
add
jbe
negb
xor
cmp
dec
ffree
mov
stos
and
daa
es
insl
adc
xchg
outsb
xchg
sub
jecxz
aam
jne
sbb
stos
scas
out
sbb
xor
xor
call
gs
insl
pop
add
and
pop
vmovaps
popf
jnp
xor
cmpsb
sub
or
ret
jns
lret
xor
push
rcl
dec
out
sub
ret
scas
movsb
mov
imul
cld
test
test
jmp
popa
in
mov
adc
xor
push
daa
lods
jo
and
cmp
cmp
push
dec
mov
movsl
push
je
andb
mov
cli
adc
lahf
lods
in
push
push
loop
mov
mov
sub
stc
xchg
data16
scas
insb
call
stos
imul
iret
aas
movsb
cmp
pop
push
imul
push
jae
mov
ret
sahf
add
negb
and
loope
mov
pop
cld
pushf
mov
add
jl
in
gs
xchg
mov
inc
mov
xor
xchg
aad
dec
test
mov
mov
in
cmp
lahf
mov
sbb
pushf
sbb
std
movsb
incl
and
and
mov
aas
xchg
andb
mov
addb
xchg
out
xchg
sub
mov
test
mov
jp
mov
mov
ljmp
mov
or
cmpsb
xchg
fsubrl
pop
ljmp
movsl
sub
mov
or
sbb
std
inc
insb
mov
outsb
cltd
popa
rorl
lret
daa
xchg
xchg
popa
mull
xchg
movsl
cmp
bt
and
loopne
jle
scas
lock
and
mov
and
xor
xor
sbb
and
jl
pop
fistpll
out
and
sahf
shr
outsl
out
sub
cmpsl
jp
cmc
fcomip
enter
outsb
ret
cmpb
fwait
arpl
push
lcall
jnp
fwait
xorb
mull
data16
push
in
mov
ss
sub
adc
xor
sbb
movsb
divb
and
cmp
dec
and
cli
sbb
fs
cld
lods
imul
push
adc
sbb
xor
repz
pop
or
test
das
jmp
cmp
pop
cld
test
and
jge
adc
aad
push
mov
mov
arpl
les
mov
fs
mov
sbb
pop
nop
ficoml
sbb
xor
nop
cmpsb
icebp
in
and
out
xchg
mov
sbb
cli
push
cmp
stos
jne
push
out
daa
cmpsb
arpl
std
inc
nop
movsb
mov
shlb
push
inc
xor
push
nop
cmpb
lahf
sbb
adc
test
repz
sub
nop
arpl
insl
or
or
jnp
negb
lods
roll
pop
call
push
mov
hlt
call
or
push
mov
rol
daa
jecxz
xor
ficoml
mov
std
dec
push
in
call
mov
mov
jbe
cmp
test
push
iret
or
mov
aaa
xor
push
mov
adc
outsb
sahf
push
xlat
fldenv
or
xchg
cs
lea
dec
loop
outsb
pop
aas
jns
into
into
cld
pushl
out
lods
inc
dec
xor
jmp
fwait
sub
pop
xlat
pop
pusha
fnstenv
dec
in
in
adc
push
pop
movsl
pop
out
jnp
mov
stos
call
dec
or
fs
insl
stos
xor
jb
mov
sbb
push
cmpsb
je
sub
scas
dec
vpsubsb
jg
out
adc
mull
cmp
and
mov
cld
int
xchg
mov
cwtl
cwtl
pop
cmp
imul
jne
pop
cmp
cmp
movsl
and
loopne
inc
jle
jns
pop
loopne
adc
mov
pop
mov
in
mov
pop
fidivs
dec
ret
pop
push
je
outsb
dec
sub
push
insl
sbb
mov
xor
outsl
push
dec
lahf
mov
xor
test
js
mov
cwtl
dec
aas
or
sbb
jg
mov
dec
mov
add
sbb
dec
or
pop
xchg
sahf
or
jne
vpavgb
cmc
fwait
stc
mov
lods
les
imul
iret
xor
les
ljmp
push
sub
jnp
inc
lea
jae
stc
mov
jae
push
scas
jle
mov
mov
pop
lds
push
lds
scas
out
sub
mov
push
cld
scas
fwait
and
dec
aas
ja
ret
sub
add
sub
mov
fwait
push
insl
nop
cmpsb
loopne
das
hlt
and
sub
mov
out
pusha
out
jecxz
enter
fdivp
insb
dec
iret
jae
pop
jecxz
mov
lods
outsb
sbb
adc
mov
icebp
call
xchg
and
pop
cmp
or
lret
pushf
enter
mov
popa
mov
cmp
xor
std
mov
sub
adc
mov
or
in
mov
xchg
jb
shll
fs
movsb
mov
xchg
movsl
or
adc
rcll
test
and
dec
dec
arpl
mov
ret
fwait
adc
mov
imul
sahf
xor
mov
push
iret
out
or
dec
sub
or
dec
push
scas
out
decb
arpl
inc
out
push
push
in
test
xor
mov
dec
sbb
stos
pop
mov
lock
leave
jae
sub
outsb
fs
fisubrl
xchg
cmp
test
sbb
jp
lds
mov
clc
lahf
mov
ljmp
fstl
not
lret
xor
adc
inc
in
xchg
sub
xor
in
cmp
or
loopne
push
sbb
orb
leave
arpl
dec
push
fisubrs
xchg
mov
test
mov
lret
or
je
adc
sub
or
divl
xor
and
lcall
mov
push
stos
add
outsb
fisttpll
cmp
xchg
xchg
xchg
xor
mov
sub
fcmovu
inc
push
mov
fnstenv
jb
ss
insl
xor
pop
cmp
or
loop
into
mov
jnp
pop
cmp
insb
sahf
mov
movsb
loop
sahf
adc
pop
pop
stos
sub
ret
xor
test
mov
mov
ljmp
in
leave
sub
lock
push
repnz
xchg
les
cmp
or
hlt
mov
or
pop
pushw
das
mov
test
mov
pop
lods
inc
xchg
leave
cltd
and
cmpsl
dec
xchg
jo
and
test
push
cltd
inc
imul
daa
int
aam
daa
movsb
xchg
ja
aam
sub
jne
arpl
or
xchg
iret
jp
fs
cmp
popf
mov
add
xor
xchg
xor
inc
outsl
mov
lcall
sub
bound
loopne
push
cli
and
lret
call
and
aaa
loop
loop
test
pop
mov
andl
mov
pop
ret
cld
jnp
clc
call
xlat
pushf
sbb
ret
sbb
sub
imul
sub
loopne
stos
and
jns
adc
lahf
sbb
daa
jge
addb
int
mov
ret
nop
adc
loop
add
inc
pop
stc
popf
data16
pop
inc
adc
in
cmp
in
loope
xchg
cmpsb
aam
sub
add
sub
mov
mov
or
iret
inc
mov
mov
test
insb
fsubr
pusha
testb
mov
mov
cwtl
inc
and
mov
pop
mov
movsl
repz
jecxz
out
int3
jge
lret
out
or
inc
push
and
stc
lods
aad
scas
fbld
jmp
adc
test
fcoms
mov
xlat
push
out
frstor
xchg
nop
push
movsl
out
or
ret
scas
xchg
adc
cmp
add
xlat
add
daa
add
in
sbb
push
in
xor
test
dec
repnz
nop
lods
das
adcb
movsl
mov
mov
test
enter
imul
sub
inc
push
fsub
das
pop
lahf
ljmp
mov
lods
repnz
ficoms
rcrb
and
xchg
sub
daa
or
outsl
decl
sbb
stos
or
bound
outsb
or
testb
into
stos
mov
jg
jo
xor
cmpsb
cmc
xor
lret
sbb
shll
and
xor
ljmp
xchg
jo
mov
pop
pop
and
out
cmp
inc
ret
pusha
xor
dec
in
bound
ljmp
xor
pop
shll
cld
shrl
lret
loope
mov
hlt
cld
rorb
addb
and
sbb
xor
daa
insl
fisubrs
data16
out
dec
sbb
and
sub
mov
ja
nop
inc
mov
outsl
mov
mov
pop
pushf
into
jg
push
mov
sti
add
bound
cld
stc
ret
rcl
xorl
sub
lahf
pop
or
and
scas
test
push
sub
in
mov
out
adc
mov
mov
gs
mov
test
adc
xor
mov
lcall
std
mov
cli
xor
int3
cld
sub
scas
dec
push
mov
mov
adc
sub
xorb
mov
and
mov
cwtl
shll
add
cwtl
cmp
jge,pn
mov
push
pop
shl
pop
hlt
cmpb
cmp
cs
mov
add
ds
das
jge
and
mov
sbb
and
xchg
leave
loope
mov
mov
inc
inc
mov
push
lods
mov
or
lret
int3
lahf
sbb
jb
push
cmp
xchg
mov
mov
push
mov
xchg
pushf
loope
jmp
ja
fisubs
mov
mov
mov
or
push
mov
popa
push
movsb
and
shl
mov
mov
inc
pop
popa
push
xor
mov
add
fwait
xor
xchg
ss
mov
xor
cs
iret
test
loopne
ds
cs
lods
icebp
xchg
in
or
in
test
inc
in
jae
sbb
or
fidivrl
xchg
dec
inc
mov
stos
in
scas
cmp
cmp
or
lds
call
mov
mov
cli
mov
scas
xchg
xchg
ret
lret
fs
mov
mov
xor
add
aaa
les
or
in
test
ja
clc
aam
adcb
aas
jb
dec
roll
seta
push
cld
cs
rcll
cs
cmpsl
fcomps
jle
lcall
vdivss
mov
scas
repz
callw
add
pop
mov
imul
and
popa
push
xchg
mov
pop
mov
or
add
mov
mov
fcomps
push
sbb
sahf
rolb
jb
pop
scas
or
aaa
int3
xchg
dec
aaa
lods
mov
fnstenv
adc
cs
xor
jl
ret
mov
cmp
dec
xchg
gs
loop
mull
inc
popf
inc
movsl
aas
call
mov
mov
sub
xchg
pusha
sub
dec
fnstenv
in
or
movsb
scas
daa
pushf
push
pop
mov
loopne
cs
cld
pop
fwait
dec
in
sbb
and
dec
test
xor
cs
popf
inc
iret
les
lret
and
cmpsb
xchg
pop
xchg
adc
scas
cs
test
adcb
loopne
mov
pop
inc
inc
into
or
call
int3
movsl
jo
orb
call
movsl
out
adc
push
add
sbb
movb
cmp
jo
cs
mov
rcl
or
sbb
orb
pop
divl
and
cmpsb
movsl
rclb
sub
test
movsb
leave
push
push
cmpsl
or
dec
ror
int3
sbb
push
jbe
call
cwtl
xchg
movsl
inc
xor
mov
in
rcl
push
cmpl
mov
icebp
test
xchg
js
xchg
ror
test
cmp
rcll
mov
and
fldcw
xchg
jno
jo
test
je
sbb
sbb
rcll
sbb
cmp
rcll
stc
ja
inc
arpl
loop
mov
xchg
insb
rcrl
push
adc
mov
add
jo
sub
and
pop
lcall
leave
sub
xchg
mov
add
test
pushf
lds
jmp
mov
push
repnz
scas
xchg
pop
cmpsb
loop
and
mov
xchg
pop
outsl
jne
mov
out
mov
shl
inc
sub
andl
lds
cmp
outsl
jne
popf
pop
loop
test
add
in
cmpsl
dec
mov
dec
pop
and
repnz
push
push
sub
dec
jmp
xchg
lods
scas
movsl
or
dec
push
dec
loop
repz
lret
mov
pusha
inc
mov
iret
cld
in
daa
pop
mov
mov
loopne
cmpsb
jbe
fstpt
fwait
mov
out
fdivrs
or
shlb
and
mov
movsl
andb
nop
stos
repz
call
lds
daa
aad
test
xor
pop
inc
test
cmp
add
loop
loopne
aaa
jns
and
gs
rcr
jp
jo
stos
lods
xor
cmp
xor
scas
mov
data16
cmp
ret
jbe
test
test
jmp
call
and
pusha
sbb
call
scas
sub
xchg
insl
ljmp
and
test
dec
mov
iret
test
pop
mov
mov
lods
dec
lods
xchg
inc
dec
imul
xor
ret
lret
ds
xchg
mov
mov
daa
xor
les
loop
stos
cmpsl
and
cmpsl
xchg
arpl
sbb
mov
pusha
mov
daa
test
sbb
mov
mov
clc
jp
lret
fucomp
cmp
je
xorl
and
lock
das
cwtl
stos
std
dec
sbb
jbe
sbb
sub
movsl
outsl
call
in
or
jmp
lret
and
sar
scas
pop
mov
pop
lock
ja
xchg
jnp
xchg
fidivs
push
movsl
mov
push
por
adc
imul
jle
aam
and
mov
mov
leave
filds
leave
pop
xchg
and
inc
popf
shr
daa
mov
scas
movsl
std
mov
sarb
pusha
shr
add
outsl
dec
xchg
mov
out
iret
mov
mov
inc
lock
mov
stos
mov
xchg
mov
mov
out
mov
shll
repz
mov
cmp
mov
mov
js
cmpsl
xchg
daa
sub
call
mov
mov
in
mov
in
xor
int
or
jno
mov
xor
js
das
mov
dec
movsb
xchg
cmpsl
push
addr16
fisubs
mov
leave
ret
add
dec
stos
bound
cmp
adc
and
mov
push
xorb
sub
lret
mov
mov
mov
jg
or
add
jp
inc
add
add
mov
dec
mov
and
in
mov
inc
shld
in
mov
cmc
mov
scas
sbb
repz
mov
loop
test
xchg
pop
mov
cmpsl
sub
std
xor
cmp
xor
lret
add
pushf
mov
cwtl
stos
pop
pop
sar
jg
loope
int3
jg
mov
and
test
lea
and
sub
mov
jecxz
mov
ret
cmpsb
pop
out
loop
lea
pop
loop
push
inc
stos
cmp
and
lods
mov
inc
adc
loopne
loop
mov
scas
movsb
mov
cmpsb
leave
sbb
test
and
in
mov
pushf
cmpsb
mov
pop
in
pushf
clc
rorl
and
lcall
movsl
popf
xchg
inc
push
mov
mov
andb
fiadds
mov
loope
mov
aaa
mov
test
add
nop
shrb
mov
cmpsl
shll
xchg
insl
ja
and
push
cld
insl
inc
inc
outsb
xor
sub
cmc
test
jge
adc
inc
xchg
sub
and
ror
jmp
cld
jl
lods
jae
lods
movsl
scas
movsl
pusha
mov
bound
and
adc
mov
movsl
dec
icebp
out
push
or
test
xor
scas
std
fwait
mov
mov
sub
mov
xchg
add
shll
jno
lahf
test
inc
xor
mov
icebp
mov
repz
sarl
fs
and
mov
out
stos
sub
std
out
sbb
mov
out
mov
test
dec
adc
xor
iret
xchg
mov
movsl
decb
imul
push
test
xchg
and
addl
bound
inc
sub
aam
dec
loopne
enter
xchg
call
xchg
or
pop
sbb
inc
pop
adc
adc
cmpsl
movsb
repnz
mov
or
and
sbb
les
call
jge
xchg
scas
cmp
jle
es
cmp
pusha
xchg
test
call
pop
adc
cs
mov
xchg
xchg
push
push
mov
xchg
sbb
popa
xchg
inc
mov
orl
mov
xchg
sbb
mov
outsl
call
out
fsub
mov
lahf
sbb
loop
or
jae
mov
fs
test
fsubs
stos
xor
icebp
fwait
or
aaa
fwait
test
push
adc
pop
je
xor
and
inc
push
or
call
iret
xor
jnp
dec
or
xor
jmp
cli
lret
xchg
xchg
pop
pop
xchg
test
mov
test
cmp
out
rcll
mov
xor
cld
mov
or
dec
xchg
cmp
cmpsb
stos
ljmp
mov
popa
push
in
mov
sub
pop
jecxz
scas
je
sbb
xor
ljmp
pop
jae
jb
enter
je
add
mov
in
and
cmp
adc
lods
repnz
scas
sbb
ret
add
jmp
dec
sbb
addr16
insb
jl
push
sarl
cld
cmp
mov
or
lods
sub
xchg
data16
mov
mov
adc
fwait
lock
xlat
out
sub
fwait
sub
add
or
cmp
test
inc
and
push
pop
cmpsl
fwait
cmp
and
sub
insb
jno
inc
mov
xchg
imul
lock
addr16
dec
cmp
int
jo
jb
lret
dec
test
mov
xchg
sub
dec
jnp
mov
push
test
mov
jecxz
mov
push
sbb
sub
or
outsl
gs
sub
xor
jecxz
movsb
test
push
sbb
and
jae
xor
in
lods
dec
cmpsb
jle
pop
mov
mov
mov
pop
xchg
or
lea
mov
es
insb
cli
call
xchg
popf
test
push
lods
out
clc
lea
pop
mov
scas
repz
addl
lcall
imul
mov
loop
cmp
adc
xchg
and
mov
xchg
arpl
cmpsl
in
scas
call
sub
xorb
cmpsl
into
aaa
leave
lods
xor
jo
xor
xchg
xchg
sbb
inc
cmp
jmp
push
aas
cmpsl
mov
sbb
je
outsl
jne
enter
outsl
sub
and
stos
scas
inc
test
out
and
je,pt
stos
ss
stos
call
push
aad
outsl
jmp
inc
mov
in
outsl
subb
push
push
push
sbb
mov
movsl
push
loopne
fwait
out
in
or
or
popa
fistpll
bound
shlb
mov
and
pop
filds
movsl
ds
bound
insl
and
and
in
enter
movsb
addr16
jo
popa
sti
mov
lods
hlt
in
mov
or
adc
push
mov
scas
or
lret
aas
and
sti
cmc
inc
mov
dec
adc
sbb
in
bound
cmpsl
popf
inc
movsl
cmc
jbe
pop
pop
aaa
cmc
mov
sbb
push
or
test
imul
scas
pushf
stos
inc
cltd
jp
mov
mov
mov
mov
ss
pop
cs
ss
mov
mov
mov
shl
mov
xchg
mov
fs
clc
lahf
fnstcw
pushf
jecxz
paddw
and
sub
mov
mov
cmp
jecxz
sbb
stos
mov
lock
mov
push
fwait
lock
outsl
mov
sub
inc
and
sbb
mov
mov
push
sub
add
fisttpl
cmpsb
jecxz
out
mov
das
xchg
cmpsl
hlt
or
das
mov
daa
imul
mov
or
jb
in
mov
jle
aaa
shrl
xor
sub
cmp
cmp
in
mov
push
out
mov
push
jecxz
iret
lock
dec
push
and
subl
je
adc
mov
add
jo
jne
and
test
add
movb
jg
adc
cwtl
xor
test
mov
and
inc
xchg
xor
es
loop
xor
mov
scas
cltd
pop
mov
ds
scas
das
mov
inc
repnz
int
mov
cmpsl
fstl
xorl
mov
sub
subb
adc
out
movsb
sahf
xchg
dec
mov
out
lea
outsb
jne
mov
sahf
xor
int3
xorl
loop
mov
xchg
stos
loop
adcb
jns
lds
mov
data16
mov
add
push
push
clc
out
shl
xor
adc
movsb
js
test
add
out
gs
js
lret
sti
mov
and
mov
inc
jmp
mov
push
popf
sbb
divl
pop
xor
inc
fdivrs
add
scas
jb
mov
add
xchg
dec
lret
cltd
stos
divl
mov
call
incl
adc
xchg
sbb
mov
movsl
xchg
out
ljmp
push
fs
mov
sbb
lea
xchg
pop
mov
cmpsl
push
sbb
icebp
jb
xchg
sahf
xchg
ret
adc
cmpsb
push
xchg
mov
and
lods
aam
daa
aas
test
sub
adc
movsl
xchg
jg
lods
xor
sub
cltd
inc
fldenv
mov
bnd
cmpsl
mov
ss
and
cmp
mov
daa
cvtps2pi
pop
ljmp
or
mov
mov
mov
mov
mov
jle
aas
test
fwait
inc
xor
shrb
inc
xchg
clc
fstl
imul
jecxz
jns
sti
xchg
cmc
and
pusha
ja
insb
hlt
data16
jnp
lds
cmpsb
sbb
xor
scas
push
lahf
cmpsb
in
movsl
loopne
repnz
xchg
popa
mov
push
and
inc
test
es
scas
pop
push
sbb
lret
js
jb
sbb
fidivrl
leave
das
in
jne
icebp
and
push
push
mov
aam
dec
mov
or
cmp
outsl
fsubrl
inc
xchg
movsb
inc
dec
fs
sub
xor
frstor
int3
or
lret
int3
fs
inc
fcoml
daa
js
cltd
dec
pop
popf
stos
xor
pop
sbb
inc
mov
inc
shll
faddl
stos
mov
scas
push
cmp
int
call
dec
push
xor
dec
xchg
xor
sub
mov
out
jnp
scas
lahf
xorl
mov
adc
loop
mov
mov
xchg
jo
stc
cmp
cmpsl
xchg
mov
and
mov
ja
call
sbb
inc
call
leave
popl
pop
lea
insl
hlt
lcall
mov
out
and
mov
call
mov
pop
xor
xor
jp
xlat
push
clc
sub
daa
mov
not
and
xchg
hlt
ret
lret
pop
in
or
jnp
jge
data16
pop
mov
mov
adc
ss
push
cs
fwait
pop
outsb
into
jle
fcmove
fstpl
push
insb
or
jp
out
cmpsb
sar
mov
xchg
scas
insb
mov
push
push
push
js
xor
bound
ret
pushf
fnstsw
mov
sbb
add
ret
pusha
xor
hlt
mov
mov
test
adc
jecxz
pushf
xchg
cmp
inc
cmp
cmp
jne
in
call
out
cmp
mov
cmpsb
repnz
inc
in
scas
xchg
mov
pop
dec
sub
or
mov
push
sbb
jmp
dec
mov
negb
cmpl
movsl
repnz
fstpt
sub
divl
callw
sti
call
mov
push
and
sahf
outsb
cmp
xchg
pusha
jbe
xchg
test
mov
sub
stos
subl
cmpsl
dec
mov
push
les
sub
cwtl
dec
out
and
fsts
mov
test
xor
outsl
aaa
lods
stos
xor
sub
and
xchg
push
sub
jno
pop
sbb
push
lahf
sbb
jne
and
fs
adc
and
and
loopne
mov
xchg
movsb
ret
scas
xchg
mov
mov
jbe
push
jae
mov
or
sub
sar
pop
mov
loop
scas
mov
sub
mov
sbb
mov
jnp
in
addb
cmc
cld
mov
mov
mov
test
jp
sbb
pop
pop
add
divl
xchg
icebp
fwait
sbb
lea
test
adc
xchg
mov
in
in
scas
mov
in
mov
jae
test
adc
xchg
frstor
shrl
stos
mov
test
adc
xchg
mov
in
in
scas
mov
cmp
lods
jae
test
adc
xchg
popf
adc
shr
or
stos
cmp
lea
xchg
mov
in
in
scas
mov
jae
test
adc
xchg
mov
fs
mov
loope
outsb
xchg
imulb
fsubl
cmpsl
stc
sub
movsb
xor
mov
lea
lods
add
and
cmpsl
stos
sub
movsb
mov
movsb
inc
mov
shll
sbb
xchg
imulb
fsubl
cmpsl
jl
test
mov
movsb
testb
xor
push
shl
lods
add
and
cmpsl
jb
movsl
outsb
xchg
mov
movsb
xor
popf
fidivrs
movsb
inc
mov
shrl
sbb
xchg
imulb
fsubl
cmpsl
insb
sub
movsb
xor
mov
lea
lods
add
and
cmpsl
mov
movsl
outsb
xchg
mov
movsb
cld
xchg
mov
shll
imulb
fsubl
cmpsl
mov
test
mov
movsb
jns
mov
xor
push
shrb
add
and
cmpsl
sub
movsl
outsb
xchg
mov
movsb
aas
xchg
mov
sar
loope
outsb
xchg
imulb
fsubl
cmpsl
xor
test
mov
movsb
hlt
cmpb
mov
mov
and
test
sbb
cmp
xor
sub
jge
cmp
push
dec
jns
scas
hlt
stos
jno
lock
stos
imul
stos
popa
or
mov
add
mov
add
mov
add
mov
scas
scas
dec
scas
shrb
inc
scas
lret
scas
scas
cmp
scas
jae
cli
scas
jg
imulb
ja
out
scas
arpl
out
pop
scas
loop
addr16
cwtl
lock
insl
clc
in
clc
imul
in
popa
clc
loopne
pop
in
fsubr
pop
in
fsubr
push
in
aam
push
lods
shlb
xchg
xchg
les
jge
cld
xchg
mov
pop
popf
sbb
shll
test
fwait
mov
test
sahf
popf
fnstsw
mov
xor
mov
mov
fimull
mov
cwtl
sub
pop
xor
adc
jns
dec
sbb
cmpsb
push
sbb
mov
sahf
pop
xchg
and
jp
adcl
lods
and
inc
testb
in
cmp
cmpsb
rol
prefetch
mov
movsb
scas
push
adc
and
pusha
add
add
pushf
mov
jno
popf
test
cmp
dec
jae
sub
pop
fildll
and
rcrl
jnp
mov
nop
jmp
jno
es
sub
or
xor
mull
test
pop
int3
fcmovne
adc
lahf
mov
daa
cmpsb
pusha
or
mov
lea
sbb
test
adc
dec
push
or
shlb
imulb
mov
stc
cmp
cmc
mov
stos
cmp
mov
iret
sub
idivl
lods
pop
daa
add
jne
jp
repnz
or
mov
test
cltd
or
test
xchg
sbb
mov
mov
cmpsl
scas
mov
or
scas
jb
pop
cmp
and
scas
sub
sub
cltd
out
xchg
pop
xchg
test
mov
movsl
mov
setp
mov
negl
les
ficomps
or
mov
pop
pop
mov
xlat
adc
mov
ficomps
or
mov
negl
imul
sub
pop
xchg
or
mov
ficomps
les
mov
xchg
jne
ficomps
or
mov
ficomps
or
cmc
sub
pop
xchg
or
mov
ficomps
or
mov
negl
les
ficomps
or
mov
notl
imul
sub
pop
xchg
or
mov
cmpsb
sbb
and
and
cmpsl
dec
push
in
pop
push
movsb
cld
dec
lea
pop
ret
jbe
lahf
pop
in
mov
xchg
adc
xchg
mov
js
ja
mov
mov
adc
stos
pop
cmp
lea
scas
add
fs
jns
adc
xchg
jb
xchg
cmp
mov
adcb
ja
fwait
lea
xchg
fsubl
cmpsl
cmp
mov
movsb
jmp
mov
in
mov
sbb
int3
adc
shrl
movsb
sbb
xchg
lea
popl
fsubl
cmpsl
sub
movsb
cmpb
aas
push
sarb
fwait
cmpsl
sub
pop
in
imul
gs
cmp
jnp
sub
movsb
xor
mov
xor
mov
add
and
cmpsl
xor
pop
in
pop
xchg
push
sbbl
mov
jae
test
adc
xchg
mov
in
in
scas
stos
mov
cmp
scas
mov
fs
jae
ret
imulb
lahf
push
stos
cmp
sbbl
adc
push
xchg
mov
movsb
cmp
mov
xor
push
sarb
fsubl
cmpsl
mov
xchg
pop
in
and
sahf
dec
inc
lods
lahf
aaa
mov
jp
xchg
in
scas
andl
test
icebp
in
adc
xchg
mov
in
in
out
mov
lea
adc
xchg
notl
lahf
aaa
mov
out
in
in
scas
andl
test
mov
xchg
jns
pop
cs
and
stos
insl
or
add
stos
gs
add
test
add
mov
add
mov
add
mov
add
mov
sbb
adc
lret
xor
xor
xor
xor
xor
cli
xor
divb
imul
xor
out
xor
ljmp
xor
xor
ficoms
fimull
pop
add
dec
out
cwtl
in
popa
clc
loopne
pop
in
fsubr
pop
in
fsubr
push
in
aam
push
in
shr
dec
in
int3
in
dec
in
enter
in
inc
in
shr
in
cld
in
jns
clc
in
jne
hlt
in
jno
lock
insl
mov
xchg
inc
mov
or
stos
jmp
fwait
pop
inc
fisubs
fisubl
bound
shlb
into
bound
lret
mov
aaa
add
sbb
mov
mov
cmpsl
mov
aas
sti
sub
mov
push
jl
mov
xor
pop
in
cmpsl
xor
xor
push
pop
jb
lcall
loope
mov
imul
pop
dec
xchg
loop
xchg
ret
or
imul
mov
or
xor
aam
adc
xor
cmp
pushf
sub
scas
mov
cmc
fwait
loope
jnp
add
js
rorb
insl
sbb
mov
std
mov
mov
stc
push
and
ss
stos
fwait
imulb
xchg
mov
pop
cld
ret
and
outsb
jne
stos
add
jne
cwtl
mov
pop
pop
and
lret
ds
and
ds
scas
pop
jle
push
xchg
add
mov
test
cmp
mov
xor
and
movsl
mov
pop
aas
mov
loop
and
mov
dec
fsubrs
adc
aad
test
das
lea
pop
xor
add
mov
xor
test
pop
pop
fs
addl
test
movsb
loope
xchg
jg
mov
jmp
sub
xchg
mov
xchg
cmpb
scas
pop
xchg
aas
pop
test
xchg
hlt
sbb
or
ljmp
scas
popf
fidivrs
sub
inc
mov
xchg
inc
or
fsubrl
fwait
sub
cmpsl
mov
sub
pop
xchg
or
mov
ficomps
or
mov
negl
les
ficomps
or
mov
negl
imul
sub
pop
xchg
or
mov
ficomps
les
mov
xchg
jne
ficomps
or
mov
ficomps
or
cmc
sub
pop
xchg
or
mov
ficomps
or
mov
negl
les
ficomps
or
mov
notl
imul
sub
pop
xchg
or
fcompl
and
mov
xor
dec
xor
sahf
adc
push
insb
fisttpll
sbb
cwtl
mov
sahf
push
cmp
loop
cmp
and
movsb
and
pop
movsl
mov
cmp
jge
sub
push
popa
push
push
scas
pop
cmpsl
push
add
out
mov
out
pusha
dec
std
pop
jp
mov
cmp
scas
jecxz
into
mov
adc
sub
sub
xchg
adc
mov
mov
shl
repnz
mov
cltd
sbb
inc
movsl
jp
sub
or
mov
xchg
and
jge
filds
out
out
and
pop
and
stos
or
sub
sbb
inc
scas
jnp
outsl
sub
hlt
xchg
or
in
pop
push
cld
lds
movsl
out
in
fwait
movsl
jae
dec
stos
mov
cs
mov
cs
xchg
andb
and
popl
mov
push
cmp
xchg
cs
dec
fs
sahf
cltd
data16
test
push
daa
clc
or
test
inc
jno
mov
call
inc
dec
cs
pop
sub
pushf
fcomps
outsb
dec
jge
outsl
clc
cwtl
fnstsw
mov
mov
ljmp
cmpl
clc
pop
repz
mov
orb
sub
movsb
test
lret
daa
movl
daa
out
scas
lret
out
mov
mov
fstl
popf
push
insl
or
dec
rclb
push
mov
xchg
or
pop
mov
pushf
inc
cltd
repz
sbb
xchg
xchg
jbe
roll
and
nop
and
scas
fadds
pusha
fwait
outsl
filds
shll
andl
stos
repnz
xchg
lock
cmc
xor
jbe
fidivrl
adc
arpl
test
or
icebp
out
push
iret
stc
fcomi
lret
add
arpl
cli
cmpsb
pop
sub
les
ljmp
sbb
fwait
and
ret
push
stc
adc
sbb
xchg
gs
clc
jp
enter
fmuls
inc
jmp
xlat
inc
ljmp
mov
push
or
arpl
orl
test
mov
mov
movsl
idivl
sub
push
mov
hlt
xchg
insb
inc
rclb
pop
lds
fwait
nop
mul
cmpsl
and
rcll
jbe
xchg
xor
dec
cmp
xchg
add
shl
lret
jb
addr16
xchg
dec
mov
add
sti
and
mov
dec
and
add
popa
movsb
pusha
leave
xchg
cltd
dec
sbb
subb
cwtl
andl
mov
and
call
fldcw
adc
xchg
ja
jmp
les
xchg
cs
test
xlat
xchg
sub
loop
subb
orl
xchg
jo
out
push
push
cmp
dec
mov
cmp
add
mov
scas
repnz
hlt
sti
int
xor
pop
aaa
test
daa
xor
mov
ror
hlt
xor
mov
xlat
xchg
jbe
out
in
xchg
jp
stos
test
dec
and
in
jo
push
or
mov
cmpsb
xor
and
sub
jbe
scas
in
andb
xchg
loopne
imul
imul
loope
cs
ds
scas
and
and
pop
sub
test
imul
dec
imul
and
and
push
pushf
sbb
ficoms
jl
les
pushf
ficompl
sub
loop
push
sub
cwtl
imul
les
cld
lahf
sub
jo
and
jae
jae
imul
bound
sahf
cmp
loope
cmp
icebp
stos
xor
rol
aaa
ljmp
mov
scas
movsl
add
shl
bound
andl
movsb
sbb
in
dec
outsl
mov
push
lods
fs
xchg
js
xchg
loopne
and
shll
sub
in
loopne
shll
loopne
xor
js
cltd
or
movsb
xor
inc
test
cmp
cmp
or
lahf
int
test
jo
addb
jnp
das
xchg
mov
test
jno
insb
mov
int3
mulb
and
mov
jge
mov
rol
inc
and
loopne
mov
xchg
push
sub
sbb
hlt
mov
js
push
sub
leave
mov
xor
loopne
rol
pusha
cmp
jns
mov
loop
movsl
add
das
cmpsl
mov
add
add
call
cld
adc
dec
mov
fs
and
mov
cld
inc
mov
and
or
insl
mov
das
lahf
call
adc
faddl
pop
imul
test
ja
rorb
shll
jne
test
jo
subb
fistpll
xor
pusha
inc
mov
in
jecxz
dec
mov
das
mov
mov
outsl
sub
pop
sbb
movsb
sbb
or
xor
or
lahf
rol
ja
xchg
cmp
mov
add
test
ljmp
movsl
stc
daa
testl
fld
pop
dec
jne
lds
jb
call
adcb
sub
loop
arpl
mov
fdivs
mov
jge
aam
mov
mov
and
shl
adc
cmp
test
call
test
adc
sub
scas
out
jle
cmc
mov
lds
mov
sub
and
sbbb
sbb
fs
sbb
inc
call
in
jmp
sub
dec
je
das
mov
inc
test
xorl
push
adc
enter
and
pop
mov
xor
int3
add
fcompl
in
loope
mov
and
call
and
mov
or
in
and
push
adc
mov
xchg
bound
mov
xor
ret
mov
jb
mov
bound
dec
js
jge
aaa
add
and
pusha
sbb
mov
ja
test
mov
mov
fsubrs
mov
mov
loope
cmp
xor
cmp
lret
mov
call
push
inc
fs
sahf
arpl
das
cmp
mov
scas
fidivs
js
repnz
stos
adc
and
out
sbb
mov
outsb
addr16
push
xor
test
mov
mov
lret
lea
loop
pop
and
pop
stos
pop
inc
cmp
cwtl
pop
mov
sbb
or
and
cmpsl
inc
fwait
mov
aas
add
fwait
xchg
in
sub
loope
mov
mov
aas
fidivl
lods
sub
pop
and
popa
test
add
call
cmc
sti
ljmp
adc
mov
mov
loope
push
mov
int
xlat
push
movsl
dec
out
lahf
cmpsl
xor
js
jnp
xor
mov
rcrl
data16
out
leave
scas
stos
xchg
cmpsl
dec
jo
push
mov
es
mov
mov
add
and
xchg
pop
out
sbb
outsl
pop
sarl
mov
aas
std
int3
ljmp
or
stos
mov
or
adc
fwait
les
mov
and
mov
mov
aaa
inc
aam
xchg
inc
out
andb
popa
and
adc
xor
pop
sbb
leave
mov
cmpl
cmp
loop
or
jge
mov
fidivl
and
pusha
pop
scas
xchg
or
and
adc
cltd
jnp
pusha
pop
andb
pop
mov
jp
pop
jo
add
fsts
pusha
and
rcrb
aam
dec
and
sarl
cmp
sahf
lcall
or
cmp
push
jle
inc
push
sbbb
movsb
sub
je
out
out
inc
insb
rcll
in
das
and
out
push
xchg
int
jbe
pop
inc
dec
mov
and
dec
rclb
jg
add
jns
jp
scas
outsl
or
nop
or
lahf
aad
inc
xchg
mov
loop
jl
ja
jb
xchg
xor
inc
fwait
push
cmp
test
loope
stos
test
les
bound
jle
mov
mov
jo
hlt
add
push
sbb
cmpsl
and
cmp
icebp
jae
sti
inc
cmp
and
cwtl
xchg
pop
loope
movsb
and
bound
bound
call
movntq
imul
movsb
adc
fcompl
adc
mov
dec
xchg
clc
adc
push
pop
cli
fldenv
lcall
cmp
dec
sbb
arpl
cld
les
xchg
bound
sub
xchg
inc
cmpsl
bound
sahf
outsl
imul
jg
into
push
jp
dec
mov
xchg
cmc
lcall
adc
lds
imul
sar
addr16
sbb
loope
cmp
cmp
jecxz
ds
add
sti
jp
std
nop
lea
outsl
and
imul
jp
xchg
sarl
dec
ret
sti
cmpsb
mov
xor
jmp
mov
test
lret
stos
outsl
scas
test
mov
sub
adc
push
mov
mov
dec
lcall
mov
scas
fnstcw
mov
and
and
imulb
mov
sub
std
inc
xor
mov
xchg
push
repz
daa
xor
mov
sub
movsl
push
aaa
dec
jo
mov
pop
xchg
jo
sub
je
mov
scas
cmp
and
bound
push
add
mov
movsb
cltd
or
popa
movsb
call
and
out
adc
push
iret
add
and
icebp
pop
mulb
fsubs
out
data16
movsl
pop
lret
cmpsl
pop
imul
loope
mov
fwait
push
adc
addr16
push
cmc
sti
shrb
out
cmpsl
call
xor
and
cld
or
or
cmp
sub
dec
push
dec
mov
mov
gs
cwtl
cmpsl
rorl
pusha
ret
mov
mov
and
xlat
scas
pop
jbe
sbb
movsl
sub
add
xchg
ret
scas
mov
lahf
lret
mov
fcmovnbe
cmpsl
cltd
or
fdivl
aaa
cwtl
xchg
cli
cmpsl
sub
ret
movsl
pop
lret
or
sbbb
stos
mov
jb
insb
xchg
inc
mov
arpl
pusha
xchg
cmpsl
and
test
lock
es
daa
mov
xchg
cmp
ss
clc
and
mov
aaa
out
lahf
icebp
out
mov
or
je
sub
mov
mov
out
xor
mov
in
mov
add
data16
ljmp
and
mov
mov
cwtl
outsl
xor
jp
movsl
push
nop
mov
test
and
shrl
lds
cli
sub
loop
fs
xor
xchg
or
lret
test
sbb
add
test
addr16
add
mov
test
test
daa
test
popa
cmp
aam
std
ljmp
add
das
frstor
sub
lea
add
push
stos
sub
pusha
or
pusha
enter
mov
add
mov
jge
xor
jmp
fildl
mov
xor
push
xchg
fwait
test
insl
sbb
sti
mov
lods
iret
xchg
out
jno
mov
int3
imul
subb
and
mov
cmp
inc
je
add
xchg
xchg
lahf
out
mov
mov
ret
fs
adc
lods
and
sbb
bound
xor
out
insl
sarl
mov
subl
xchg
bound
movsl
hlt
push
mov
xorl
add
pop
push
in
movsl
ror
imul
bound
sbb
aaa
test
jns
and
jns
mov
xchg
push
mov
ficomps
lea
outsl
imul
mov
pop
bound
cmpsl
pop
adc
add
cmp
stos
inc
or
mov
push
cmp
mov
testb
sarb
mov
xchg
pop
mov
cmp
mov
movsl
pop
mov
or
js
cmp
or
sub
fs
loopne
push
sub
and
stos
pop
and
loopne
cs
push
nop
andl
test
daa
xchg
mov
shrl
xor
scas
lahf
mov
xor
adc
dec
inc
ret
movsb
fisttps
push
or
ss
out
test
mov
iret
movsb
xor
lahf
pop
js
pop
scas
popa
movsl
xor
int
lods
js
lods
loopne
and
sub
loop
std
fstps
push
rcl
pop
loopne
insl
dec
mov
stos
push
andl
mov
cld
mov
push
mov
pop
cld
repz
mov
add
imul
popa
xchg
data16
and
sahf
gs
out
cmpsb
imul
aaa
jmp
sbb
mov
xchg
sahf
lods
movsb
fidivrl
daa
lcall
sbb
cmp
shrb
aaa
pop
mov
cs
mov
jge
jnp
adc
cmc
cs
xor
cmp
and
lock
push
cmp
loopne
pop
nop
inc
sbbl
xor
jnp
xor
cmpb
mov
xchg
push
mov
adc
stos
adc
out
mov
cltd
stc
mov
mov
lods
pop
cmpb
aam
test
lods
bound
cmpsl
xchg
movsl
mov
loopne
and
outsl
mov
xchg
cmp
js
arpl
jge
test
loop
loope
ror
js
xchg
fs
vcvtpd2dqx
mov
and
loopne
mov
jne
jmp
shll
test
in
call
pusha
inc
xchg
sub
sub
ss
sub
lret
mov
hlt
jecxz
dec
sarl
les
push
fwait
test
jbe
es
pushf
movsl
jecxz
dec
push
sarb
xchg
in
pusha
fnclex
jmp
jo
jb
rol
ja
cli
int3
inc
cltd
dec
and
sub
pop
add
jae
iret
jp
sub
jnp
mov
sbb
stc
sti
sbb
mov
xchg
mov
scas
mov
and
lcall
and
andb
out
scas
mov
out
mov
pop
xchg
jge
out
xchg
mov
bound
and
pop
cmpsl
sub
aam
cmp
adc
je
inc
mov
xchg
add
out
sub
and
test
lock
sub
sbb
pop
daa
xorb
mov
pop
daa
mov
addr16
enter
mov
push
addr16
fisubl
jae
xor
jae
fwait
in
mov
ds
roll
pop
mov
mov
mov
inc
test
filds
sub
rcrl
fwait
inc
inc
scas
xor
jbe
fisubrl
xchg
pop
aam
and
and
fsubp
mov
mov
cwtl
or
mov
mov
in
idivl
push
and
fidivrl
jo
test
sub
pop
scas
daa
mov
add
lock
xchg
fwait
ljmp
sub
out
cmp
loope
rclb
lds
mov
adc
call
xchg
cmp
adc
addr16
roll
lahf
lea
dec
out
sub
xor
sbb
je
cmc
fwait
mov
ja
jns
ficomps
sahf
or
add
ja
mov
add
push
and
pop
addb
stos
sbb
and
and
sysenter
jne
pop
dec
lock
daa
mov
cmc
loop
notb
in
fwait
outsb
into
and
xchg
lcall
in
mov
idivb
lds
repz
mov
xor
jns
movsl
int3
movsl
lahf
sti
scas
fisttpl
mov
mov
cmp
push
aas
jp
pop
ljmp
lahf
dec
jnp
mov
mov
xor
inc
and
add
stos
lock
push
ja
test
popa
sbb
mov
mov
dec
push
lahf
add
repz
jne
pop
xchg
sub
sub
jb
sahf
xchg
cmpsl
push
cmpsl
scas
cmpsb
out
mov
lock
jp
push
aaa
inc
xor
clc
daa
shl
call
adc
mov
lea
scas
movsl
mov
popa
ret
sbb
gs
sbb
adc
dec
and
outsl
xor
out
dec
es
js
cltd
loopne
mov
or
movsb
sbb
cmpl
icebp
dec
mov
movsl
pushl
add
shll
jnp
in
cmp
ss
sub
mov
push
ds
mov
and
fdivl
cmp
push
dec
sbb
out
call
shl
mov
es
pop
pop
out
jb
loop
and
out
mov
cmp
bound
in
cmpsl
mov
push
movsl
cli
lcall
popa
data16
mov
les
incl
scas
sbb
cwtl
scas
adc
mov
mov
sbb
cld
fnsave
enter
mov
fucomi
enter
in
xchg
pop
sub
add
and
das
sub
into
inc
in
fbld
mov
xor
pusha
std
jg
jl
cmpsb
cmp
popf
or
insl
xor
daa
je
sub
out
movsl
je
icebp
js
aaa
jno
lahf
dec
xor
fldl
outsl
popf
mov
scas
mov
mov
and
sub
movsb
inc
cmpsb
jno
xchg
sti
jl
cmp
xchg
sub
push
pusha
push
push
out
orb
inc
inc
enter
shrl
mulb
jg
rorl
mov
sub
pushf
sbb
mov
mov
jp
xor
sub
mov
lock
xor
in
sub
or
cltd
sahf
scas
addr16
in
into
loopne
test
push
xchg
sub
dec
sbb
xchg
daa
jmp
and
xchg
fwait
mov
jle
fsubrl
bound
std
imul
mov
sbb
bound
xchg
xor
andb
pusha
and
xor
push
in
loop
lahf
add
popf
insb
push
lea
or
sbbb
inc
and
mov
cwtl
sub
and
and
or
fwait
mov
shlb
mov
xchg
mov
scas
dec
cli
sub
mov
in
popa
mov
out
cmpsb
in
cli
dec
mov
out
sbb
sbb
push
adc
aaa
mov
mov
mov
test
mov
add
and
fldenv
cltd
xor
out
mov
inc
dec
idivl
xchg
out
mov
out
int3
sti
sub
mov
pop
mov
out
and
mov
ja
xor
mov
mov
jp
leave
scas
mov
ss
lret
mov
data16
scas
mov
push
pushf
push
hlt
daa
mov
xchg
out
lods
cmpsb
in
and
inc
stos
xchg
mov
out
jp
lret
ret
call
decl
sub
scas
mov
jp
sti
add
jmp
cmpsl
loopne
loope
push
test
lock
lds
out
xchg
test
popa
lcall
adc
xchg
movsl
and
adc
movb
xchg
out
pusha
rcll
mov
cmp
fildl
cwtl
xlat
movsl
inc
jb
inc
xchg
movsb
xor
sbb
mov
mov
cmpsl
fs
mov
cmpsb
and
mov
xor
xchg
mov
aad
xchg
cmovp
sahf
cmpsb
ret
push
and
sbb
mov
test
sahf
std
out
mov
jmp
test
and
ret
mov
lcall
inc
add
mov
aaa
movsb
hlt
fcomi
mov
or
xor
and
dec
dec
sbb
movsb
and
movsb
and
sub
test
sbb
arpl
mov
lahf
xor
and
sub
mov
add
and
xorl
sub
mov
dec
mov
push
popf
movsb
xchg
push
popf
ljmp
pop
in
lcall
notb
ss
loopne
scas
sub
or
sub
in
in
xchg
mov
add
mov
imul
fucomi
out
mov
addb
sub
and
push
fs
cmp
sbb
mov
cmpsl
xor
popf
mov
mov
and
xor
add
ret
es
ds
es
ss
jg
push
mov
pop
fmuls
pop
aad
es
lock
pop
ljmp
pop
test
rorl
in
push
mov
jp
mov
call
pop
test
mov
scas
adc
jae
pop
mov
xor
jae
das
and
sbb
ret
inc
lea
lret
loop
repz
roll
pop
ljmp
shl
fnstsw
movsb
int
mov
xchg
and
and
jge
jg
mov
jae
cmpsl
sub
mov
jnp
test
ljmp
pop
test
cmpsb
movsl
pop
les
outsb
cmp
inc
xchg
mov
xchg
mov
xchg
cmpl
aas
jnp
pop
jnp
jae
es
inc
jl
push
or
mov
pop
jno
inc
or
in
sbb
xchg
cs
mov
jle
add
adc
and
sub
mov
rorb
out
add
call
fldt
loop
movsb
notl
mov
jle
outsl
cmp
jno
shll
mov
xchg
hlt
xor
or
cmp
jo
shl
outsl
sbbl
or
iret
and
mov
cmp
dec
lock
xchg
andl
popa
push
movsl
das
addr16
in
xchg
shl
cmp
movsl
push
les
sbb
or
inc
imul
inc
scas
sbb
mov
mov
cmp
and
clc
lcall
addr16
jp
xchg
scas
movsb
sub
lcall
jo
xor
xchg
cmpl
stos
ret
pop
lret
es
int3
int3
addr16
push
xchg
movsl
push
xchg
lahf
cmp
xor
add
enter
cltd
jmp
xor
and
divl
enter
outsb
lea
push
adc
mov
push
pusha
xor
xchg
outsb
loop
inc
xchg
loop
push
xchg
cmpsl
hlt
mov
mov
mov
inc
in
inc
dec
hlt
jno
cmp
stos
std
jmp
push
and
shlb
stos
mov
call
dec
xchg
and
xchg
insl
dec
test
les
cmpsl
push
das
adc
imul
in
gs
xor
push
sub
aas
daa
call
jnp
jb
stos
push
fcmovnb
jae
lods
sub
aad
repz
adc
icebp
inc
xchg
cli
loope
stos
mov
xor
push
lcall
aad
dec
push
cmp
fs
inc
xchg
aam
push
enter
cli
in
leave
and
scas
jl
iret
movsl
sbb
lcall
jmp
enter
dec
cmc
subb
pop
push
nop
adc
mov
cmp
mov
mov
mov
xchg
stos
idivl
sub
xchg
scas
mov
loop
cmp
mov
pop
jbe
lss
loop
scas
fwait
mov
les
loop
mov
xchg
xchg
push
jmp
jnp
fstl
mov
dec
lods
jnp
pop
and
loop
movsb
mov
movsb
movsb
dec
pushf
push
pop
fwait
ja
mov
in
in
scas
mov
sbb
les
call
jae
adc
les
call
mov
mov
call
cmp
adc
les
jae
sub
adc
les
call
imul
mov
call
cli
in
and
in
xchg
call
mov
mov
in
test
mov
ret
movb
clc
mov
mov
jae
or
push
mov
lea
out
test
jmp
push
test
jo
inc
lret
mov
out
imul
out
lods
sbb
jmp
push
or
mov
fiadds
mov
cmpsb
and
or
dec
add
add
adc
xor
push
inc
mov
push
xor
or
filds
lods
pop
call
xchg
jp
dec
test
xor
cmp
mov
inc
lahf
cmp
mov
jmp
xor
sbb
pop
test
lea
lahf
test
call
xchg
mov
cli
xor
pop
test
jns
call
xchg
mov
jae
test
jae
lahf
jmp
jns
xchg
cmp
xor
sbb
pop
test
lea
lahf
mov
cmp
js
xor
mov
xchg
push
scas
stos
lea
cmp
push
loop
lahf
mov
cmp
cmpb
mov
xchg
cmp
xor
sbb
pop
test
in
lahf
push
mov
xor
pop
test
lahf
cmp
call
xchg
push
push
test
cmp
add
mov
mov
xchg
mov
add
fwait
popa
ret
fs
in
orl
xorb
call
inc
mov
loop
mov
test
imul
push
cmp
cmpl
dec
lahf
test
xor
xchg
es
xchg
mov
test
and
loopne
ret
jmp
and
stos
fidivl
iret
cmp
mov
scas
jmpw
mov
int
lds
sub
shlb
sub
jne
sbb
mov
andb
insl
and
jl
lret
fsubs
in
sub
andl
push
pop
jmp
fisubs
call
cmp
out
sub
xor
scas
mov
lods
stos
mov
test
mov
imul
loop
out
fstpl
out
mov
jp
rclb
mov
mov
xchg
sbb
cmc
das
mov
outsl
std
les
pop
and
fcoml
mov
mov
mov
cmpsb
inc
in
fwait
data16
sub
lret
and
mov
imul
xchg
ja
das
loop
adc
arpl
jmp
pusha
sbb
andb
pop
lahf
addr16
out
dec
mov
in
movsb
mov
sub
inc
cmpl
mov
jns
loop
sarb
test
push
andb
jo
inc
cmpsb
test
push
lds
imul
jmp
je
sub
cs
mov
and
mov
mov
aad
pop
cmc
xorb
lea
loopne
addr16
popa
xor
mov
jbe
jp
test
push
fldenv
rep
popa
and
addr16
xor
movsb
bound
movsb
scas
mov
push
mov
pop
decl
lahf
enter
popf
sbb
adc
jl
mov
sarl
arpl
adc
mov
jnp
fld1
jnp
stos
or
jg
xor
lods
fisubs
and
mov
jecxz
jb
sbb
add
cmpsb
add
push
test
ret
inc
les
mov
es
jb
lods
xor
sahf
nop
pop
xchg
aaa
loop
clc
sub
popf
push
mov
xchg
pop
out
adc
nopl
add
es
loop
push
notl
cmc
out
hlt
lret
or
add
daa
pop
lahf
cmpsb
popa
xor
test
xor
in
bound
adc
iret
shlb
sbb
cmp
xor
call
jno
xchg
das
movsl
addr16
xor
xor
shll
out
ja
test
mov
jcxz
out
ja
test
cmp
mov
movsl
xor
sahf
cmp
and
mov
call
out
call
xlat
movsb
xorl
hlt
mov
sub
xor
mov
movsb
mov
xor
sub
scas
test
pop
pop
movsb
test
adc
xor
cmp
inc
xor
jg
mov
lahf
push
scas
aad
sarb
pushf
dec
xor
mov
cmp
insl
mov
shl
dec
loope
mov
outsl
xorl
mov
adc
mov
mov
pop
movsl
and
xchg
push
pusha
fs
xor
rorb
je
or
xchg
cli
inc
and
inc
push
ljmp
icebp
fwait
jo
jno
lahf
xor
mov
mov
inc
add
xor
adc
mov
push
sub
jae
iret
xchg
jae
out
loop
fs
lods
mov
lret
xchg
rol
enter
mov
jo
fnstsw
cltd
lret
cld
cmp
xor
mov
stc
mov
in
mov
out
dec
add
sub
and
rclb
or
xor
scas
test
xchg
inc
loopne
sbb
jge
loopne
test
dec
pop
inc
scas
enter
mov
fwait
stc
aaa
mov
mov
insl
sti
sahf
movsl
cwtl
fwait
loopne
call
dec
sbb
xor
or
mov
or
movsl
jecxz
loop
cmc
mov
sub
loop
repz
mov
mov
aad
jns
lods
fdiv
in
sbb
aad
movsl
xchg
cmpb
jo
push
call
into
outsb
push
mov
pop
das
mov
mov
jnp
cmp
mov
outsl
jl
jg
orb
xor
xchg
js
and
cmc
test
aas
mov
or
loopne
lea
test
inc
push
or
jae
jge
or
rolb
repz
aas
sahf
pop
loop
mov
out
in
imulb
or
mov
repz
mov
mov
dec
test
pop
int
adc
loopne
movsb
and
add
and
and
rcr
bound
cmpsl
cs
fadds
popf
call
ja
jg
mov
bound
movsl
add
and
mov
inc
movsb
push
pushf
into
dec
mov
lcall
loope
ficomps
call
mov
cmp
movsl
pop
xor
loopne
add
and
push
int3
int3
sub
dec
mov
or
pop
cmp
push
test
jns
in
xor
movsb
cltd
loope
xlat
test
mov
xchg
push
sub
mov
xor
mov
das
and
orb
mov
cmp
xchg
bnd
daa
and
add
loopne
or
mov
and
movsl
cmp
push
int3
jp
pop
shrl
jne
or
repz
lcall
jae
and
xorb
sbb
adc
mov
push
or
movsl
sub
mov
jae
xor
and
inc
aas
das
or
stos
lahf
dec
cmp
mov
xchg
jno
inc
sahf
adc
in
je
fwait
jnp
adc
mov
ret
pop
cmp
cmpsl
mov
mov
movsl
fdivs
iret
xchg
xchg
mov
loop
fstps
stos
icebp
addr16
lock
pop
cmp
cmp
jl
xor
lcall
cmp
cmpsb
push
mov
fwait
imul
movsb
mov
fldenv
mov
outsb
sahf
dec
xorl
fwait
jbe
sub
dec
test
scas
jo
mov
sbb
and
fwait
les
add
xchg
pop
sbb
sbb
les
dec
mov
mov
out
sahf
dec
or
and
mov
cmp
push
dec
scas
repz
mov
xchg
aaa
xor
push
fsubs
mov
popf
dec
addl
sahf
dec
push
lea
mov
sbb
push
popf
imul
and
pushf
push
scas
les
dec
idiv
pop
fisubrl
xchg
outsl
lahf
pop
cmp
and
cmp
adc
fsubs
movb
dec
insb
pop
std
das
cmpsb
adc
xchg
push
add
mov
mov
xchg
xchg
adc
in
lahf
int3
aam
mov
mov
push
dec
jmp
fcoms
scas
jnp
dec
int
xchg
das
mov
hlt
mov
ja
mull
fildll
test
inc
cmpsl
mov
and
fsubs
adc
xchg
push
cli
or
pop
clc
mov
sar
pop
mov
xchg
jnp
in
sti
cmpsl
push
sbb
mov
mov
imul
js
fwait
inc
insl
xchg
addr16
push
setne
lock
sahf
imul
add
dec
xchg
loopne
jno
mov
add
sub
int
pop
aas
pop
add
fsubl
movsl
xchg
and
xchg
sbb
into
in
and
jecxz
cmpsl
push
roll
add
inc
daa
and
hlt
rcr
and
cmpsl
and
mov
xor
popf
sub
nop
pop
inc
imulb
jecxz
fistpll
push
mov
imull
cmp
test
cmp
sbb
fwait
xchg
sub
jmp
pusha
cmp
xor
sbb
pop
test
lea
clc
stc
fidivrs
stos
mov
addb
fwait
jns
ljmp
pop
jmp
and
movsl
mov
je
adc
mov
test
in
andl
fstl
call
xor
test
movsl
out
loop
lahf
inc
ret
gs
xchg
bound
mov
nop
mov
xchg
jmp
or
adc
mov
jns
adc
xchg
and
adc
pop
fbstp
fwait
inc
addr16
scas
push
popa
out
cmp
arpl
movsb
and
pusha
shrl
jl
mov
in
out
mov
xor
in
scas
shll
add
popa
pop
lret
mov
test
mov
pop
jnp
mov
stos
mov
mov
shrl
movsl
sbb
decl
imul
gs
dec
ljmp
mov
push
fwait
mov
and
addb
mov
call
adc
xorl
sub
outsl
movsb
nop
mov
jecxz
arpl
icebp
lock
mov
aad
arpl
icebp
loope
mov
lds
repnz
lret
push
jns
mov
or
addr16
cwtl
and
sub
mov
inc
and
and
push
cli
lods
push
pop
sti
cmp
sub
mov
cmpsl
pushf
fs
adc
mov
add
cmpsb
fldcw
jmp
pop
sub
arpl
cmc
sti
or
enter
loopne
ja
test
test
xchg
lcall
cmpsl
mov
stos
pop
outsl
mov
ljmp
out
bound
xor
out
es
xchg
imul
xchg
mov
xorb
mov
lods
mov
les
push
stos
loopne
cmpsl
and
add
jmp
leave
xor
testb
in
sub
cmp
pop
jge
inc
inc
in
fstpl
or
dec
cld
andl
sub
ret
xor
test
aad
xchg
fistps
cmpsb
sbb
loopne
mov
rorl
mov
roll
dec
in
and
cmc
aaa
dec
xchg
xlat
xchg
sbb
push
leave
sti
test
test
cwtl
xchg
movsl
imul
mov
jge
or
enter
ljmp
and
frstor
xlat
add
sbb
nop
out
mov
lods
and
xchg
imul
test
jbe
aaa
rclb
and
add
loope
sbb
inc
in
movsl
dec
push
push
jle
push
xor
imul
imul
pop
loop
in
pusha
enter
call
lea
cmp
lret
pop
pop
int
les
adc
lret
push
pop
mov
stc
add
arpl
nop
jbe
lds
loopne
jno
cmp
lea
pop
push
cmp
pop
xor
call
movsl
xchg
cmpsl
xorb
fldenv
and
call
or
cs
sub
cmpsl
adc
mov
or
mov
mov
pusha
xlat
mov
push
imul
sub
jl
pop
xchg
add
andb
sub
sbb
icebp
cmp
out
push
or
push
mov
out
movsl
scas
inc
ret
out
xlat
movsl
jo
adcb
sbb
ror
push
lods
es
push
ficompl
mov
iret
std
push
mov
mov
and
push
int
lods
and
mov
adc
pop
or
es
lock
adc
xchg
add
movsl
ss
mov
into
imul
add
lahf
dec
mov
imul
xchg
frndint
shl
jecxz
mov
loope
fsubl
push
cmp
loop
push
jg
arpl
shlb
add
jmp
testl
sub
in
daa
call
movsl
fwait
addr16
mov
fisubrl
in
add
stc
jmp
sub
or
call
bound
sub
mov
mov
call
cmp
lods
or
stc
in
adcb
dec
ret
sbb
movsb
loop
xchg
add
xchg
addr16
push
pop
or
and
daa
mov
test
adc
ja
inc
cmp
sti
cmpb
push
sbb
mov
xchg
adc
push
push
cmp
mov
test
leave
mov
pushf
ss
loop
xor
in
scas
adc
test
sti
xor
lods
jge
inc
arpl
xchg
lock
sbb
mov
xor
add
daa
sarb
insl
bound
pop
and
adc
mov
test
popf
inc
xchg
shlb
fidivrl
inc
lahf
sbb
adc
in
mov
sub
jns
jo
call
mov
hlt
jp
fwait
jae
fnstcw
sbb
daa
jne
jo
call
mov
push
lods
or
hlt
in
lds
inc
in
cmp
jmp
mov
pop
test
mov
dec
mov
add
add
xor
bound
call
movsl
xor
sbb
xchg
aaa
stos
add
inc
xor
movsl
cli
bound
data16
or
mov
outsb
sub
scas
lahf
mov
add
lds
jle
push
ss
jmp
cmpsb
lret
sbb
aas
loopne
xor
cmp
push
or
inc
xchg
aaa
pop
adc
test
insb
cmp
pop
inc
or
and
stc
mov
movsl
add
loopne
mov
ret
sarb
jae
jns
enter
mov
push
mov
add
and
cmpsb
add
ss
lret
adcb
movsb
or
push
arpl
mov
mov
ds
inc
or
out
rolb
or
and
cmpsb
xchg
mov
sbb
mov
pop
and
xchg
fwait
movsl
pop
popa
add
roll
mov
sbb
and
or
inc
mov
iret
ja
into
imul
out
xor
call
dec
add
adc
aad
addr16
push
push
mov
jecxz
ds
and
popa
enter
movsl
loop
enter
xchg
add
sub
shlb
movsb
pop
push
add
movsb
subb
movsb
mov
pop
inc
mov
or
inc
cltd
out
mov
movsb
xor
inc
inc
or
or
mov
call
inc
ja
into
imul
pop
data16
xor
test
mov
pop
add
loopne
bound
stos
ja
lods
jae
sbb
movsl
or
jae
call
sbb
sub
add
movsb
movsb
mov
sbb
in
sbb
movsb
ret
imul
pop
dec
shld
jecxz
frstpm(287
rcr
insl
add
mov
fisubrl
jecxz
mov
xchg
repnz
stc
pop
jo
loopne
and
pop
std
and
xor
jo
loop
xor
hlt
adc
jecxz
cmpsl
mov
gs
scas
fbstp
not
sbb
cmp
jns
mov
sub
push
sbb
mov
lea
add
addr16
mov
jae
bound
shl
mov
jo
push
mov
jnp
mov
mov
mov
stos
and
out
and
test
dec
inc
ret
test
popf
popa
mov
sbb
jp
cs
movsb
pop
inc
andb
jno
movsb
bound
movsb
inc
les
xchg
movsb
mov
call
movsb
aad
dec
movsb
movsb
sbb
out
movsb
popa
push
jns
movsb
cs
sbb
lahf
sub
and
lahf
jns
movsb
and
lahf
imul
mov
lds
jns
movsb
jg
movsb
inc
cli
xchg
movsb
cmp
xchg
movsb
imul
mov
out
movsb
popa
push
aas
out
movsb
popa
push
clc
out
movsb
popa
push
lods
out
movsb
bound
sbb
pop
test
dec
call
movsb
movsl
adcl
inc
mov
and
sub
fisubs
call
movsb
xchg
movsb
in
push
xchg
and
sub
fisubs
call
test
test
decl
and
negl
lahf
jae
enter
push
push
jge
and
pushf
and
pushf
lea
push
fisubs
push
sub
xchg
and
sbb
adc
and
inc
sbb
and
pop
sub
push
pop
sbb
lds
lds
lds
mov
lds
jnp
imul
bound
or
adc
insl
imul
das
loopne
movsb
mov
dec
cwtl
ficompl
pop
fistpll
jno
dec
and
sbb
jnp
mov
xchg
push
in
sub
js
mov
mov
shrl
cmp
xor
movsl
pop
xchg
lds
imul
out
aaa
push
xchg
dec
sbb
out
xor
push
ret
push
int3
test
and
adc
stos
dec
mov
xchg
cli
mov
push
and
mov
sbb
enter
and
fnsave
cmpl
xor
sbb
pop
mov
sbb
push
pop
xor
fisubrs
cmpsl
es
xchg
scas
push
xor
or
jp
jns
sbb
and
aas
mov
pop
out
xor
shll
mov
inc
std
adcb
mov
sub
aas
loope
and
mov
scas
out
movsl
scas
push
loope
and
mov
arpl
loopne
fstl
test
lea
or
and
mov
and
cmp
mov
add
cmp
jmp
std
in
ljmp
or
in
mov
mov
repz
jns
movsb
movsl
pop
mov
sti
mov
dec
loop
repnz
jnp
fwait
mov
test
pop
adc
les
hlt
andl
and
out
sbb
cmpsl
dec
adc
stos
inc
mov
scas
xchg
cmpsb
add
pop
mov
mov
pop
mov
outsl
and
push
pop
jo
mov
scas
and
in
idivl
push
inc
outsb
push
stos
mov
mov
aad
in
inc
add
sub
push
mov
daa
add
and
hlt
loopne
mov
loopne
cmp
fs
push
push
xor
rclb
popa
lods
frstor
cmpsl
loop
push
xor
stos
cwtl
out
jmp
call
test
sbb
cmpsl
mov
fisubs
loop
into
movsb
sub
loop
scas
mov
mov
mov
in
mov
test
test
movsb
mull
pop
iret
or
or
or
jge
dec
xor
jl
pusha
loop
popa
les
add
push
cmp
sbb
jne
mov
push
insl
xor
addr16
test
pop
loope
bound
add
cmp
push
push
gs
test
out
loop
mov
mov
pop
das
gs
sub
mov
loope
and
gs
mov
bound
hlt
outsl
movsl
sub
jle
loope
mov
mov
mov
or
cmpsl
and
sub
popa
psrlw
or
jmp
and
andb
push
cmpsl
jmp
dec
inc
jle
call
and
movsl
scas
arpl
sarl
jp
cltd
dec
pop
add
xchg
call
shlb
in
int
rorb
jns
out
int
inc
cs
push
fistpl
inc
lcall
mov
mov
mov
ljmp
pop
xchg
and
xor
adc
xchg
xchg
adc
jecxz
aas
xor
dec
xor
pop
mov
mov
lock
mov
sbbb
sub
loop
shlb
ror
jns
aam
push
cmpsb
mov
nop
mov
into
aas
xchg
and
cmc
mov
rorb
cmp
pushf
mov
out
mov
adc
xlat
clc
mov
test
movsb
mov
cmpsb
inc
movsb
scas
jl
stos
and
subl
lcall
lret
pushf
and
mov
repz
inc
pop
push
loope
xchg
int3
or
adc
dec
lcall
aam
lea
sub
movsl
dec
xchg
xchg
pop
int
inc
adc
xor
xor
mov
sub
xchg
xchg
push
ljmp
out
les
sbbb
popf
jmp
push
fnsave
jne
mov
add
xchg
mov
icebp
cwtl
jno
mov
loope
outsb
or
rolb
scas
test
push
add
or
jbe
aas
ret
xchg
hlt
testb
andl
js
scas
test
dec
lods
ficompl
das
mov
cmc
dec
dec
fxtract
mov
aaa
cmpsl
inc
adc
daa
dec
cmpsl
push
fnstsw
xlat
adc
stos
and
loopne
hlt
xlat
scas
cmpsl
andb
or
sbb
fsts
fsubl
pushf
adc
aaa
pushf
xor
pop
push
lret
dec
add
addr16
sub
push
adc
cmc
or
lahf
mov
sbb
mov
jo
push
js
div
js
xor
sbb
xchg
movsb
cltd
xor
mov
push
clc
sub
cld
xchg
adcl
mov
xchg
and
pop
adc
jmp
adc
rcll
test
fwait
push
loope
sbb
xchg
movsl
adc
mov
sbb
adc
pop
and
mov
push
cmpsl
xor
jno
shr
repnz
mov
and
mov
das
mov
push
bound
das
xchg
jl
pushf
imul
dec
and
aad
sub
loopne
enter
jecxz
mov
pop
mov
adc
lret
mov
popf
movsb
test
adc
mov
arpl
bound
andb
mov
xchg
mov
xchg
xor
out
cmp
adc
pop
adc
jae
mov
lds
mov
or
push
fwait
mov
repz
popf
jne
loope
adc
adc
jl
jae
gs
and
cltd
iret
push
test
mov
pop
dec
push
lcall
loopne
or
scas
and
cmp
adc
jb
cmp
leave
add
iret
push
jns
in
cwtl
loope
popf
fmulp
mov
ja
loope
sbb
cmpb
xor
out
add
cltd
adc
aaa
das
call
pop
fstp
fs
iret
sarl
gs
movsl
fchs
adc
in
mov
add
stos
jae
repz
cmp
shl
adc
mov
out
or
jnp
mov
shll
mov
xor
subb
jle
sbb
cmpsl
sub
ljmp
pop
mov
xchg
mov
int
mov
not
sbb
repnz
push
test
scas
inc
outsl
adc
test
xor
jmp
ret
dec
les
scas
inc
pop
sbb
and
mov
je
sahf
push
dec
movsl
fnstsw
cmp
in
stc
cmp
jp
pop
xor
jmp
out
xor
lahf
mov
mov
arpl
jae
pop
lock
mov
data16
sti
xchg
lcall
jg
and
sub
push
mov
imul
ds
into
or
and
pop
adcb
in
cltd
jmp
movsl
cmpsl
sub
dec
data16
fwait
outsl
mov
imul
jle
mov
mov
test
gs
inc
dec
fistps
xor
push
call
sub
inc
stos
and
scas
insb
xor
pop
sti
es
fwait
mov
or
lods
loopne
lds
jbe
xor
scas
and
lea
cmp
ss
movsl
les
or
stos
mov
lods
ret
pop
mov
cmpsl
dec
scas
mov
mov
xchg
mov
jo
xchg
jbe
pop
stos
add
cmp
inc
int
fwait
sahf
sbb
lcall
mov
pushf
mov
fsubl
out
xchg
sbb
xchg
repnz
jae
jnp
fwait
xchg
scas
pop
in
stos
les
xchg
mov
push
pushf
mov
fsubl
out
xchg
sbb
xchg
mov
lahf
mov
add
xchg
scas
pop
in
stos
les
sahf
aaa
popf
mov
sub
fwait
lea
ja
mov
add
and
out
mov
cmp
outsb
xchg
mov
lahf
scas
jae
les
jae
jle
adc
sar
or
int3
mov
mov
xchg
mov
lahf
mov
scas
mov
cmpb
xchg
scas
pop
in
stos
repnz
in
fisubrs
xchg
in
push
push
movsb
imul
xchg
pop
int3
xchg
mov
fwait
sbb
shrb
lahf
jae
or
push
mov
fsubl
mov
stos
adc
pop
fwait
push
jne
mov
adc
ljmp
cmc
mov
xchg
jne
sarl
adc
ljmp
cltd
mov
scas
mov
add
pop
mov
movsb
pop
mov
clc
cwtd
jae
or
fwait
jns
test
xor
push
cmp
ret
in
in
in
out
mov
stos
scas
outsb
xchg
repnz
cmp
orb
aaa
push
mov
mov
xchg
fwait
jns
test
xor
lea
xchg
fsubl
stos
mov
cmp
outsb
xchg
repnz
mov
scas
jae
les
jae
push
jne
mov
adc
push
sahf
mov
and
or
test
add
ret
sbb
adc
add
sti
add
add
xor
push
add
pop
stos
or
rclb
into
or
lret
or
add
inc
stos
decb
jae
cli
jg
testb
add
ja
out
mov
outsl
fwait
out
sub
mov
hlt
cmp
lock
in
cmp
call
cmp
loopne
pop
xor
xor
fdivs
push
xor
xor
shlb
dec
xor
xor
enter
les
inc
xor
lock
cmp
inc
sbb
sbb
sbb
sbb
sbb
sbb
cli
sbb
negb
imul
sbb
out
sbb
ljmp
loop
addr16
mov
mov
mov
jecxz
cwtl
pop
lahf
mov
xchg
sbb
xor
mov
mov
popf
cmpsb
popf
mov
lcall
in
mov
mov
jb
decb
imul
scas
or
loopne
xchg
pop
sbb
lret
aaa
xchg
push
jbe,pn
adc
arpl
mov
in
jp
or
loope
xchg
add
stos
lret
fidivrs
jmp
movsb
jmp
clc
mov
push
enter
loope
pop
mov
bound
mov
mov
push
test
outsb
shrl
push
mov
jbe
scas
repz
add
jg
adcb
push
mov
ret
and
sti
sbb
and
aad
cs
sub
outsl
mov
mov
sub
or
repnz
imul
pop
lods
imul
or
enter
jecxz
and
lods
or
movsb
mov
mov
insl
cmp
lahf
mov
mov
xor
cmp
icebp
jl
or
fsubrl
add
popf
mull
adc
cmpsb
jecxz
and
stos
mov
cltd
ret
adc
hlt
lcall
inc
clc
movsb
mov
mov
or
int3
cmpsl
jp
insb
jo,pn
scas
xchg
mov
pop
fs
aaa
pop
iret
jmp
out
xchg
ss
jg
dec
scas
test
push
scas
fidivs
xchg
lcall
mov
lahf
lcall
fstl
ds
shlb
mov
xor
mov
mov
repnz
sahf
outsb
das
shrl
dec
test
push
adc
mov
insl
pop
ja
jno
xchg
adc
xlat
mov
fcmovb
mov
mov
cmp
mov
sbb
movsb
mov
mov
mov
shl
mov
mov
sbb
shl
in
cltd
movsl
imul
and
mov
xchg
test
lret
fcmovnu
add
cmp
cmp
cld
hlt
or
mov
pop
les
lcall
test
fsubl
sti
mov
jp
std
or
sahf
jle
jo
and
loopne
mov
das
fwait
stos
je
add
sarb
xchg
repz
insl
mov
mov
lds
and
jl
sbb
jb
scas
mov
inc
mov
xchg
loop
mov
test
cmc
lods
je
mov
out
out
jae
mov
push
pop
sbb
lret
and
dec
fists
mov
mov
mov
mov
mov
jno
loopne
addb
sbb
incb
mov
xchg
and
fs
or
into
mov
in
repz
cmp
rolb
sahf
cmp
mov
xchg
and
stos
push
mov
test
push
mov
inc
loop
pop
xchg
xchg
test
pop
mov
jae
xchg
or
sub
and
inc
lods
lock
push
cld
scas
pusha
imul
cmp
adcl
jp
jnp
mov
aas
test
xchg
sahf
fst
shrb
pop
xchg
or
mov
ficomps
or
mov
negl
les
ficomps
or
mov
negl
imul
sub
pop
xchg
or
mov
ficomps
les
mov
xchg
jne
ficomps
or
mov
ficomps
or
cmc
sub
pop
xchg
or
mov
ficomps
or
mov
pop
pop
xchg
or
mov
ficomps
or
mov
negl
les
ficomps
or
mov
notl
adc
in
inc
lahf
ss
mov
scas
loopne
test
or
sub
addr16
mov
mov
andb
movsl
test
jecxz
test
xchg
cmpsl
jl
mov
out
cmp
and
pusha
cld
outsl
mov
cwtl
xchg
lcall
push
or
daa
jns
sbb
cmp
pop
cmp
fiadds
xor
push
mov
mov
ret
call
sbb
pop
aam
and
mov
and
push
mov
std
iret
mov
jo
andb
stos
xchg
xchg
movsb
add
in
js
mov
arpl
and
pusha
mov
int
addb
and
test
mov
sub
fldt
mov
iret
mov
jo
and
fnstcw
test
sbb
aam
and
adc
test
add
decl
fiadds
or
sub
mov
xor
cmpb
sahf
jnp
fidivrs
sbb
mov
outsl
dec
adc
scas
sub
xchg
jo
subb
cmp
xlat
outsl
imul
pop
aaa
daa
or
cmp
rolb
faddl
push
ja
xchg
pop
push
pop
mov
push
inc
adc
popa
stos
add
movsl
mov
sbbl
popa
inc
les
jmp
cld
loop
jle
xchg
jo
add
pop
mov
imul
shrb
cmpsl
andb
andb
outsb
sbb
in
andb
addb
orb
xor
test
lock
sbb
push
das
xchg
movsb
jecxz
xchg
cmp
xchg
mov
jo
andb
imul
faddl
xchg
subb
in
andb
gs
scas
movsl
ja
int
imul
mov
movsb
or
adc
cmc
testb
sub
jge
xchg
or
pop
xchg
pop
out
cmpb
mov
stos
hlt
mov
add
loope
movsl
sbb
incb
cmp
mov
ds
add
push
js
sub
lods
cmp
enter
cmp
imul
das
and
mov
and
sbb
ret
jg
dec
mov
int
fiaddl
mov
mov
cmp
lret
testb
jmp
loopne
mov
stos
bound
xchg
movsl
sub
and
mov
or
pop
out
mov
sbb
xchg
sbb
jnp
push
mov
mov
daa
xchg
stos
lret
xor
movsl
and
loopne
cmp
daa
insl
dec
cmc
aas
jo
outsl
repz
mov
and
fcoms
add
stos
repz
ja
and
cmp
es
sar
cs
mov
xchg
push
jnp
lods
jbe
sbb
fldenv
test
sub
fwait
jg
jg
adc
mov
and
and
push
and
mov
dec
sbb
mov
mov
cmpsl
out
mov
clc
movsl
test
outsb
aaa
cmp
jae
jle
lahf
daa
and
mov
bound
pmulhuw
push
jle
lock
sub
cmpl
jmp
sub
shl
cmpsl
push
push
imul
loop
cs
push
sbb
cmpsb
sub
lahf
jecxz
inc
shll
shrb
loopne
outsb
je
out
push
enter
mov
mov
fwait
sarl
movsb
in
and
pop
and
and
mov
stc
add
nop
inc
adc
das
or
mov
push
aas
out
pop
cwtl
mov
mov
lahf
mov
adc
cli
call
fisubrl
cmp
cmp
addb
movsl
adc
add
call
cmpsl
sahf
out
jns
hlt
les
and
mov
xlat
lds
push
shr
mov
xchg
shrb
loope
push
mov
push
xchg
xchg
cmp
and
shll
push
adc
sub
xlat
leave
repz
insl
xchg
adc
shr
inc
jp
xchg
mov
ja
paddb
sahf
popf
rolb
jp
mov
sub
in
and
pop
mov
addr16
jnp
enter
adc
jle
fwait
and
test
je
sub
movsl
inc
and
inc
cld
xor
and
out
fisttpll
ja
bound
adc
xchg
jnp
mov
pop
pop
bound
cmp
les
push
bound
cmpsb
aam
xlat
sub
fisubl
mov
movsl
les
mul
imul
scas
cmp
sahf
out
loop
cmp
dec
and
jmp
daa
loope
sub
js
cmp
cli
add
movsl
mov
mov
and
aas
incb
insl
andl
and
mov
cli
repnz
sbb
fsts
mov
ljmp
imul
cs
mov
sub
lret
adc
mov
or
push
xor
inc
in
xor
loope
mov
dec
imul
sub
hlt
mull
pop
push
inc
lret
jb
dec
pop
mov
xchg
or
stos
pop
xor
imul
mov
mov
and
jle
xchg
movsl
std
pop
add
in
jmp
test
mov
movsb
ret
sub
mov
andl
mov
aad
pop
ss
loopne
lea
sub
dec
adc
xor
add
and
jne
and
xor
add
cltd
mov
mov
fs
lds
and
push
mov
inc
push
cli
dec
jmp
outsb
ljmp
insl
test
ljmp
cmpl
push
mov
arpl
ret
mov
ds
push
push
pop
fwait
jne
mov
sarb
jmp
cmpl
xor
inc
xchg
pop
ss
xorl
xchg
mov
mov
sbb
mov
sub
and
test
cmp
imul
xchg
arpl
xor
adc
push
add
jge
inc
push
sbb
fidivl
jl
xor
push
inc
mov
and
out
and
xchg
add
sbb
jnp
xchg
ret
pop
or
repz
loopne
ds
lea
in
add
cs
jecxz
popf
nop
and
in
jb
inc
sar
aad
incl
dec
pop
stos
xchg
mov
mov
imul
scas
clc
in
in
mov
xor
pop
les
cltd
inc
and
movsb
movsb
lret
rcr
and
cmpsl
cs
test
fwait
lods
outsl
mov
and
ret
pop
lods
ror
aaa
push
mov
std
xchg
incl
outsl
lea
fcmovnb
add
mov
loopne
sarb
xchg
mov
cmp
mov
xor
shrb
imul
insb
xchg
inc
or
xor
jb
subb
adc
addr16
and
jae
push
jle
aad
add
scas
sub
repnz
add
and
fimuls
stos
roll
mov
mov
sbb
out
sbb
xor
scas
mov
and
sub
cmp
inc
cmp
lret
mov
inc
dec
xchg
data16
jae
bound
movsl
and
cmp
pop
or
stos
and
lcall
je
mov
fs
fwait
and
out
ds
lods
and
stc
mov
inc
lret
mov
push
in
mov
and
test
mov
imul
out
jns
imul
sub
add
movsb
cltd
and
mov
sbb
inc
add
lsl
xor
aaa
xor
imul
mov
scas
lock
mov
pop
jb
xor
int
jle
fwait
pop
or
jae
cs
outsl
lods
mov
xchg
sbb
popf
mov
mov
and
daa
scas
or
pop
or
add
lcall
mov
ret
jae
cmpsb
lret
data16
sahf
test
push
jge
or
loopne
mov
add
jge
pop
mov
cmpsl
adc
insl
bound
jmp
cli
movsb
mov
std
inc
add
or
sub
pop
outsb
lret
cmc
movsb
stos
jl
shll
dec
mov
pop
fs
outsl
scas
lods
lret
fbld
mov
out
jp
es
sbb
sub
cltd
xor
xor
mov
arpl
movsl
pushl
mov
fldl
pushf
stc
cmpsb
lds
daa
bound
dec
push
push
lods
inc
mov
fwait
push
jge
les
push
imul
sbb
inc
inc
adc
jbe
sbb
mov
pop
inc
loopne
cmp
das
pop
and
outsl
adc
movsb
stos
out
nop
mov
fldcw
aaa
loope
fsub
loope
pop
daa
rcrl
je
xchg
or
mov
daa
or
jns
adc
scas
mov
mov
push
xchg
test
cmc
pop
insb
aaa
cmp
mov
js
movsb
ror
scas
push
cmp
fdiv
das
daa
es
mov
cltd
push
xchg
test
pop
and
and
sub
jecxz
in
or
and
sub
jne
push
mov
lret
push
mov
stos
or
mov
sub
sbb
xchg
cmpsl
imulb
das
in
sti
adc
iret
mov
adc
sub
push
arpl
test
insl
jp
mov
and
fdivrs
jo
scas
out
movsl
scas
xor
xor
das
push
jo
mov
cltd
rorl
lahf
mov
scas
stos
jne
dec
adcb
andl
in
push
xlat
mov
cmp
mov
or
jg
lcall
repz
mov
das
aaa
and
mov
out
addr16
js
mov
xor
ja
mov
inc
xor
addr16
xchg
repnz
mov
add
movsb
xchg
mulb
popa
les
addl
sub
fwait
ja
mov
push
orl
andb
sub
and
and
movsb
ss
dec
and
movsb
and
and
add
or
xchg
daa
sarb
in
je
xchg
mov
mov
popl
sbb
cmp
stos
xchg
fldenv
cmc
scas
movsb
ja
enter
popa
and
mov
cs
mov
adc
mov
rol
xlat
stos
adc
call
jno
stos
cwtl
and
mov
add
xchg
mov
sbb
adc
jl
call
xor
movsl
mov
divb
ljmp
popf
xchg
mov
loope
push
stos
cmpsb
mov
pop
bound
rcrl
or
loope
lock
std
mov
out
push
adc
or
push
scas
xchg
insb
and
push
stos
scas
cmpsb
and
and
jno
cld
lcall
out
stc
into
jne
std
mov
mov
and
rcll
pop
mov
rorl
shrl
arpl
movsl
jb
sbb
in
pop
cwtl
sub
and
lods
push
subl
rcrl
pop
mov
and
lahf
test
das
or
push
test
and
and
or
mov
jle
mov
cmp
popa
add
fcomip
test
pop
js
repz
mov
sub
xor
ss
test
jae
out
xchg
inc
sub
dec
stc
movsb
push
adc
push
sub
and
outsb
xchg
cmp
mov
jge
cs
in
in
jmp
jb
add
mov
pop
mov
imul
xor
push
pop
popa
xor
mov
andb
adc
bound
lcall
loopne
ret
mov
mov
mov
data16
jns
out
xchg
push
cmp
call
cmp
and
cmc
mov
mov
loop
pop
xor
insl
sub
stos
outsl
nop
push
sub
fs
in
clc
stos
jno
lcall
and
aam
fistl
cmpsb
jb
loope
fmul
mov
xor
inc
jmp
jmp
jne
xorb
aam
xchg
aaa
fildl
mov
ds
cli
jmp
mov
stos
add
dec
xchg
pusha
and
inc
test
and
les
testl
sbb
popa
cmp
sbbb
std
pop
in
xchg
test
cmp
fisttpl
test
std
xlat
lea
inc
jmp
sub
lods
sti
or
xor
repz
dec
mov
xor
in
iret
sub
mov
sahf
xor
aas
test
fwait
mov
xchg
or
jge
mov
xor
divl
cmpsl
and
sub
repz
je
loop
push
xchg
cmpl
sub
clc
mull
loope
repnz
stos
inc
sub
cmp
insb
icebp
xchg
mov
movsb
cs
push
xor
xchg
popf
and
adc
shll
add
mov
and
test
mov
or
and
mov
cmp
adc
add
xchg
test
iret
xchg
pslld
test
outsb
fwait
stos
clc
mov
sbb
mov
fcmovb
ljmp
or
and
enter
ret
adc
jge
mov
roll
or
imul
iret
stc
jmp
mov
push
loop
fnsave
dec
aaa
test
jp
dec
xor
movsb
jne
in
imul
ja
call
dec
call
dec
call
or
mov
jecxz
icebp
adc
das
movsb
mov
and
mov
iret
sbb
pop
test
or
dec
scas
outsb
xchg
dec
push
and
jae
les
and
cmp
dec
test
cmp
inc
or
cmpsl
fwait
hlt
gs
data16
cmp
sti
lea
imul
or
cmp
sub
icebp
mov
es
ds
out
out
lea
sarl
mov
and
sbb
test
and
outsl
push
push
mov
inc
mov
addr16
dec
pop
lods
xor
mov
push
xchg
cmc
lahf
mov
test
mov
gs
movsb
xor
call
push
sbb
and
ds
xchg
cmpsl
daa
mov
jno
add
sti
jge
xor
ljmp
int3
loop
xchg
enter
scas
ja
push
push
mov
sub
dec
xor
ja
inc
mov
or
or
sub
icebp
cltd
and
mov
into
stos
cmp
add
int3
stos
pushf
jecxz
jnp
imul
mov
loope
xchg
cmpsl
std
repnz
mov
in
push
mov
out
insl
loopne
pop
in
loop
loop
sar
cmp
int
cmp
mov
orl
jbe
out
data16
stos
jns
inc
out
shr
push
sbb
mov
ljmp
mov
mov
jo
cltd
mov
jns
push
and
test
dec
xchg
movsb
imul
daa
cmp
mov
cmpsl
movsb
sub
ret
in
sbbl
data16
pop
xchg
in
inc
mov
add
fstl
shl
mov
stc
fwait
scas
stos
or
xchg
jl
test
inc
jns
aaa
push
mov
xchg
repnz
aaa
inc
mov
int
and
mov
call
jmp
xlat
inc
ds
out
and
loopne
mov
push
mov
dec
cmp
mov
or
mov
cmp
xor
cltd
movsb
popa
bound
insl
jbe
sub
dec
fwait
lret
cmc
testb
mov
loopne
mov
sub
loopne
sbb
gs
sbb
and
insl
or
aad
fsubl
hlt
fstpt
sbb
cmpsb
out
pusha
filds
ds
aaa
es
addr16
hlt
xor
cld
add
aaa
pusha
lea
xor
fadd
sbb
xchg
jp
in
xchg
loope
movsb
mov
and
xor
and
or
xor
mov
sub
mov
sbb
pop
or
rclb
mov
mov
fidivs
imul
leave
rcrb
xchg
xchg
xchg
push
stos
xor
jbe
pop
xor
fs
popa
in
callw
aaa
xchg
insl
mov
mov
xchg
clc
insl
push
and
ja
pusha
les
sbb
bound
sub
loope
jge
and
les
loopne
movsb
mov
mov
popa
ja
xchg
gs
sbb
cmpsl
fstpt
jl
pop
and
loopne
cmpsb
std
call
shll
data16
movsl
lock
shl
and
jge
and
test
and
icebp
xchg
arpl
icebp
pop
fs
icebp
xchg
arpl
icebp
pop
fs
icebp
xchg
sub
cmpb
mov
and
push
icebp
out
sbb
push
icebp
out
sbb
push
icebp
cmpsb
fs
xchg
adc
in
cmpsl
movb
xchg
stc
fs
sbb
push
icebp
data16
and
icebp
fs
loop
mov
mov
mov
shll
out
cmpsl
shll
jno
shll
mov
xchg
shll
in
mov
and
add
mov
pop
xchg
jne
insb
idivl
cltd
xchg
test
dec
shll
xchg
push
xchg
xchg
mov
movsb
sub
sub
xor
jecxz
jns
mov
test
mov
cmpsl
test
inc
test
movsl
cmpsl
xchg
mov
in
in
popf
frndint
jmp
sbbb
lcall
mov
cld
cld
scas
push
shrb
dec
mov
imul
call
shll
jmp
mov
xor
inc
push
lcall
jecxz
in
mov
mov
xorl
shl
adc
push
scas
sbb
test
inc
xor
aam
dec
and
mov
out
mov
std
les
mov
lods
mov
addr16
mov
mov
cmp
or
jecxz
dec
push
mov
gs
jbe
lods
pop
push
sbb
shrb
test
or
jecxz
inc
mov
and
divps
mov
mov
aaa
loopne
cmp
and
jmp
push
sub
mov
rclb
mov
hlt
ss
stos
ss
add
mul
xor
mov
and
imul
mov
std
les
shlb
mov
pop
push
pop
inc
loop
rcrb
fsubr
popa
or
jecxz
or
push
gs
loope
xchg
sub
fstps
loope
out
ficompl
pop
push
call
addr16
and
jg
mov
sub
int3
mov
push
pop
scas
cmpsl
push
and
lret
popa
rclb
inc
add
push
sub
lret
and
clc
movsb
push
and
lret
and
pop
add
sahf
mov
scas
or
aaa
mov
push
adc
shll
and
sarb
jecxz
pop
cmp
aaa
mov
outsl
enter
pusha
shll
daa
es
andb
out
xchg
mov
gs
push
pop
sub
sahf
mov
and
xchg
pop
mov
ljmp
jecxz
mov
pop
sub
and
stos
or
fldcw
mov
push
popa
stos
mov
jge
out
mov
fildl
stos
shlb
mov
divb
les
add
mov
shll
loopne
rcl
xchg
popa
or
jecxz
jno
mov
mov
pop
test
mov
jo
dec
inc
loope
ror
mov
mov
std
les
jecxz
jo,pn
cltd
and
mov
adc
sub
loop
rol
pop
pop
and
test
scas
and
outsl
mov
mov
xchg
leave
xchg
fcomi
gs
fistl
add
fstpl
negl
sub
arpl
sbb
dec
cld
mov
and
mov
movsl
in
lret
loopne
cmpsb
jmp
movsb
cld
loopne
cmp
mov
test
adc
mov
test
mov
or
mov
jne
into
mov
stos
lret
xchg
mov
jo
pop
stos
stos
shrl
in
cs
call
aas
pop
ja
aas
movsb
jecxz
in
movsl
lock
pushw
xor
push
sub
add
mov
ljmp
call
pop
or
shlb
mov
andl
xchg
je
mov
pop
out
test
lock
lods
scas
lahf
cs
sub
and
xor
mov
sub
lods
aam
mov
xchg
dec
xchg
fdivrs
insb
adc
push
dec
jne
xor
in
cmpsl
sub
pop
and
push
xchg
mov
cmpsl
add
xchg
cmp
inc
jns
sbb
dec
test
cmpsl
mov
jbe
sub
sub
stos
out
cmc
adc
loop
jae
lock
stos
fwait
movsl
lcall
fdivl
xor
push
add
sbb
inc
lock
rorb
mov
gs
hlt
cmpsl
mov
stos
and
mov
outsb
fwait
stc
push
lods
and
in
fwait
mov
dec
fdivrl
mov
pusha
fstps
ja
mov
mov
inc
negl
mov
clc
xchg
jo
sbb
ljmp
repnz
scas
clc
popa
mov
orl
jns
nop
mov
lahf
das
mov
arpl
or
xor
sbb
in
adc
test
push
xlat
xchg
mov
mov
pop
inc
push
and
insl
mov
cmp
dec
jo
enter
in
mov
gs
ljmp
fstpl
lahf
repnz
aaa
jge
movsb
mov
arpl
mov
push
negl
cld
xor
or
in
int3
ds
insb
and
fwait
xor
cmp
xor
sub
dec
test
or
stos
fidivrs
cmpsb
xor
sbb
mov
loop
lret
sbb
je
daa
loopne
and
mov
jb
or
sub
mov
scas
movsb
scas
jae
stos
frstor
jb
push
shrl
fildl
idivb
push
push
lcall
ds
aaa
xchg
xor
mov
insl
repz
lret
orl
ret
fldenv
mov
mov
mov
mov
jnp
inc
pop
test
jg
mov
mov
xchg
sbb
adc
inc
iret
mov
ss
mov
lahf
cmp
imul
cmpsl
cmp
popa
in
mov
cs
lcall
cli
mov
cmpsl
mov
jmp
xchg
fwait
jp
clc
leave
jne
insl
fwait
in
loope
outsb
in
xor
mov
test
test
fs
imul
fsubrl
and
arpl
dec
and
in
ret
sub
and
out
adc
aad
and
mov
cmp
fwait
pusha
xchg
adc
insb
popa
movsl
sub
mulb
mov
push
push
loope
std
jmp
ss
push
adc
fstpt
cs
mov
inc
movsb
dec
dec
push
loope
test
jmp
lock
divb
pop
mov
mov
mov
xor
cld
clc
mov
or
xchg
lods
sub
out
mov
sbb
mov
dec
imul
xchg
add
fisubrl
fildl
in
jb
add
lds
movsl
or
mov
incb
repnz
cltd
jge
rclb
ret
inc
mov
aaa
lds
fcoml
inc
xor
bound
sbb
in
popf
ficoms
clc
cltd
cmp
pop
xchg
sub
daa
loope
cs
xchg
mov
mov
mov
and
js
mulb
sub
sbb
jge
mov
loop
cwtl
std
scas
xorl
fwait
lret
imul
add
je
repnz
xchg
in
ljmp
fisttps
xchg
addr16
jge
imul
pop
aaa
mov
jnp
nop
xchg
mov
test
fcmove
mov
mov
shlb
mov
xchg
out
popf
mov
cmp
inc
xchg
mov
mov
test
and
mov
mov
ret
xchg
cmp
and
das
and
in
add
mov
xchg
addl
ss
jp
mov
enter
leave
bound
imul
and
hlt
fwait
arpl
mov
fs
fs
enter
xor
fldcw
int
lcall
push
insl
repnz
int
add
inc
int
add
inc
int
add
inc
int
add
inc
int
add
inc
int
decl
rcrl
xorb
test
jnp
loopne
cmpsb
cmp
mov
mov
jle
fs
inc
adc
divb
test
movsl
loop
lea
mov
sub
adc
cltd
out
lods
or
movsb
adc
fstp
movsl
dec
push
movsl
fwait
mov
mov
sub
scas
scas
mov
stos
push
sub
mov
int
scas
pushl
cmpsl
sub
jbe
subb
mov
cmpsb
mov
mov
sbb
repz
loop
dec
fisubs
das
xchg
xor
mov
stos
insb
cld
xchg
cmp
mov
insb
sbb
stos
int
push
in
xchg
sub
ljmp
je
or
sti
mov
mov
sub
jns
jo
sub
mov
jp
jnp
scas
stos
cmp
clc
jns
sbb
enter
stc
and
fsubrl
or
out
mov
fstl
fnsave
shlb
outsb
sbb
mov
js
jp
das
mov
and
mov
xchg
stos
add
mov
sub
incl
imul
jle
sbb
cmpsl
dec
int
and
and
mov
jo
lret
xor
in
and
add
mov
out
int3
ret
xor
mov
addr16
imul
mov
dec
lea
fists
repz
or
mov
xor
push
xorb
adc
dec
cmp
pop
in
je
sti
mov
pop
insb
iret
mov
push
daa
cmp
mov
cmpb
call
inc
add
call
arpl
iret
shlb
inc
xchg
mov
and
mov
xor
pop
subb
add
sbb
jle
les
fmull
gs
sub
sarb
mov
push
cmp
xor
xchg
mov
data16
lcall
sub
add
xor
repnz
fadds
out
push
xchg
les
in
push
sbb
push
sub
loope
jg
sub
sbb
push
cli
shll
and
mov
inc
add
mov
push
adc
testb
xchg
mov
xchg
sbb
shl
mov
mov
int
subb
sub
and
inc
mov
cmp
loop
fbstp
jp
das
fisttpl
in
bound
mov
inc
fcompl
pand
mov
icebp
es
loop
cmp
lcall
dec
nop
data16
mul
cs
in
ljmp
loop
mov
jmp
xor
aas
push
stos
xor
dec
inc
repnz
ja
adc
mov
mov
xchg
ja
out
les
pop
lret
outsl
movsb
jmp
xor
pop
dec
or
cltd
outsl
push
xchg
movsl
imul
mov
lds
popa
pop
xchg
sbb
in
sub
aad
gs
fistpl
shll
add
xchg
push
and
hlt
cmpsb
dec
mov
out
movsl
cmpsl
mov
aas
js
in
adc
shlb
stc
cmp
movsl
outsl
mov
sub
pop
mov
pop
lea
decb
and
mov
dec
push
or
and
mov
adc
mov
mov
cltd
and
test
jnp
add
in
cmp
mov
lretw
cmp
and
testl
in
sbb
inc
adc
sub
mov
test
leave
dec
jnp
pop
roll
cld
test
mov
repnz
dec
adc
inc
and
xor
or
inc
sti
and
push
or
loop
sbb
loop
outsl
mov
lcall
fsub
lret
mov
repz
jcxz
cmp
sbb
sarl
les
sub
movsb
rcll
popa
xor
scas
adc
push
cld
xchg
push
mov
ret
cld
jno
fs
add
lahf
sbb
adc
mov
jbe
aam
sbb
push
inc
int
and
xchg
pop
xlat
les
test
fldl
mov
xor
pop
mov
into
mov
sbb
cmp
movsb
or
dec
in
stc
sub
fs
hlt
addl
pusha
push
xor
stos
ljmp
push
jo
jge
stos
cmpsl
popf
sbb
cli
int3
rcrb
test
fwait
loop
sbb
test
idivl
push
scas
fcomps
inc
dec
enter
insb
inc
mov
cmp
add
lcall
add
test
push
movsl
add
and
mov
loop
mov
jecxz
popf
inc
adc
mov
icebp
sub
xchg
in
mov
loopne
imul
adc
mov
mov
dec
aaa
adc
cmc
dec
pushf
cli
ja
call
and
mov
hlt
outsl
repz
jp
jle
fdivs
mov
movsb
idivb
xor
pop
fs
data16
fwait
ja
fbld
cmp
cmpl
outsl
cltd
es
xor
fstpt
cmp
mov
or
repz
mov
sbbl
outsl
mov
mov
ja
call
mov
les
mov
or
adc
sub
fcomp
test
sti
fcmovnbe
inc
mov
mov
mov
and
lret
jb
insb
fcomps
and
out
addb
int3
and
lahf
mov
fbld
test
pop
es
fsubs
arpl
inc
insl
aaa
jge
imul
lea
lds
lock
xor
sub
add
pop
ljmp
mov
cmpsb
cs
inc
xor
mov
es
mov
mov
inc
hlt
lahf
mov
lods
lret
xor
mov
mov
mov
stos
outsb
pop
sub
mov
hlt
mov
mov
outsl
mov
mov
scas
and
jle
movsl
test
das
or
jecxz
xchg
inc
jp
in
outsb
movsl
movsl
jnp
mov
pop
xchg
in
pop
loope
adc
mov
loop
fwait
xor
fnstsw
setnp
inc
out
xchg
scas
call
and
sahf
ffreep
popf
jae
sti
mov
or
movsl
out
sub
and
adc
loope
popf
sub
jecxz
cmpsb
movsl
aam
cld
cmp
cmp
jno
imulb
mov
xor
cwtl
cmp
jmp
mov
daa
ljmp
mov
xchg
add
lds
add
mov
mov
sub
cmpsl
mov
mov
mov
daa
inc
mov
es
es
xor
xchg
negb
push
fldl
xchg
xor
dec
js
pop
mov
stos
ret
xchg
fsub
jecxz
push
pusha
inc
mov
nop
sbb
mov
out
cmp
xchg
loope
mov
sub
std
mov
mov
sbb
and
out
in
int3
ljmp
mov
movsb
push
movsl
fxtract
daa
or
mov
in
pop
mov
cmp
sub
je
mov
adc
mov
addb
enter
sbb
test
mov
loopne
movsl
jl
cmpl
cwtl
xchg
dec
pop
insl
fnsave
jg
sahf
ds
ja
sahf
shll
xorl
inc
adc
inc
daa
movsl
scas
mov
aaa
xchg
outsb
cmpb
shrb
and
push
movsb
mov
adc
inc
or
mov
andl
psubb
cmpsl
pop
jae
popa
cld
inc
movsb
cli
push
pop
mov
mov
mov
stos
and
test
stos
fildl
pop
mov
xchg
cmp
scas
cmp
or
push
pushf
arpl
sub
pop
add
push
insb
and
mov
popa
cmpsb
ds
cmpsb
loope
andb
push
imul
push
das
and
sbb
ljmp
sub
mov
frstor
daa
lods
mov
mov
sub
pop
sub
and
movsb
fldl
jbe
and
xor
xor
mov
test
jo
cli
imull
mov
fldt
push
stos
xor
mov
outsl
sbb
aam
aaa
mov
mov
pop
repnz
inc
pop
mov
or
mov
mov
cmp
push
test
int
shll
adc
aam
fs
and
adc
test
push
imul
xchg
and
mov
cmp
adc
cmp
push
cmp
and
sti
data16
iret
stos
mov
xchg
and
and
outsl
xchg
sbbb
shrb
shlb
mov
push
mov
icebp
mov
mov
shll
out
xchg
and
test
lock
jno
ror
sbb
andb
ds
mov
neg
xor
iret
mov
pop
pop
push
imul
push
addr16
and
fwait
out
inc
xor
pop
mov
sarb
fnsave
mov
icebp
xchg
aas
in
out
mov
mov
je
out
std
int3
xor
push
andb
les
scas
outsb
inc
insb
add
je
stc
sub
xchg
ja
inc
sbb
xor
loopne
stos
sbb
push
xchg
inc
adc
mov
shlb
iret
pop
or
mov
orl
and
mov
jl
gs
xchg
in
stos
out
les
add
adc
xchg
xor
lahf
mov
shl
mov
test
movsb
fucom
insb
xchg
subb
pop
mov
push
test
movsb
cmpsl
or
loop
cmp
lods
and
xor
sub
mov
call
mov
stos
sub
sbb
push
sahf
mov
ret
icebp
movsb
push
add
shr
mov
jno
andb
or
int
inc
sahf
gs
enter
call
test
cmp
movsb
and
mov
push
and
xchg
mov
inc
xchg
lret
fsubrl
xchg
call
or
in
sub
cltd
cmpsl
rorb
movsb
scas
jnp
mov
lahf
xor
lahf
inc
push
mulb
lcall
mov
in
test
inc
and
dec
mov
in
into
jb
subb
pop
and
add
das
sbb
add
mov
stc
and
jb
sub
or
fwait
add
ljmp
push
and
sub
or
and
out
rcll
push
push
cmp
xor
mov
bound
xor
mov
jle
ss
lea
or
stos
shrb
push
xor
les
jmp
mov
or
orb
inc
out
and
pushf
add
sub
loope
out
cmp
popf
mov
das
mov
xchg
push
cmpsb
mov
iret
cmpsb
scas
hlt
in
and
lods
ffree
sub
mov
mov
fs
and
and
icebp
mull
mov
pop
jne
mov
out
push
lods
sbb
in
cmpsl
fs
xor
jne
test
fildl
rorl
aam
and
add
or
xor
push
lods
stc
cld
das
jmp
sub
adc
sub
mov
lods
gs
sbb
fimuls
cltd
leave
frstor
outsl
pop
mov
mov
lds
mov
cmpsb
pop
mov
mov
sub
jnp
add
mov
add
xchg
test
jnp
jae
pusha
push
sbbl
adc
cwtl
cmpb
sub
push
xchg
dec
sbb
and
mov
scas
mov
cmpsl
sbb
subl
cmpsl
lcall
fwait
jno
adc
ret
lret
lods
bound
movsl
iret
lret
fmull
add
imul
mov
ret
popa
in
lock
test
lcall
and
es
jne
mov
leave
cs
test
lods
int3
mov
rcrb
pop
mov
or
sbb
or
nop
fnstsw
pop
jb
mov
add
insb
fnstenv
out
mov
xor
test
je
mov
lahf
outsl
movsl
push
jge
addr16
int3
hlt
mov
lea
lret
sub
test
and
fs
loope
popf
sub
pop
data16
or
mov
dec
out
mov
jno
and
outsb
scas
or
rorl
mov
mov
out
into
cmp
push
imull
fstpl
lock
lret
pop
fcmovnb
jo
mov
sbbl
mov
and
sti
scas
nop
push
or
pop
hlt
xchg
xlat
shrb
sbb
mov
out
loop
mov
movsl
sub
push
insb
jne
sbb
sub
xor
mov
jb
sub
mov
mov
xchg
mov
jecxz
mov
inc
sub
xor
out
fstpl
lods
in
test
lock
insl
cld
and
fucomp
adc
fiaddl
daa
cmpsl
out
xchg
sub
lcall
sbb
std
lahf
out
xchg
daa
repz
and
cmpsl
lea
outsl
jb
or
daa
popa
outsl
mov
pop
in
sahf
fstpl
inc
std
rcrl
xor
add
sub
stc
and
xchg
sti
add
mov
xor
mov
fiadds
scas
jmp
lahf
out
fwait
or
imul
or
jb
clc
subl
clc
and
xchg
sub
lock
mov
jnp
mov
mov
add
repz
mov
mov
rorl
loopne
scas
add
test
mov
or
test
iret
and
jne
fwait
add
dec
cmp
movsl
std
fidivrs
mov
loop
repz
xchg
xchg
xchg
test
dec
xchg
mov
mov
fisttps
loopne
shlb
xchg
fsubrl
rclb
popa
sub
jb
cmp
loope
sub
daa
loop
and
scas
hlt
mov
les
mov
mov
scas
and
in
in
das
stos
call
in
les
sub
xchg
loop
scas
jne
mov
mov
xchg
sub
mov
mov
incl
cli
and
scas
sub
loopne
scas
xor
dec
mov
lods
mov
lret
and
xlat
and
jnp
das
ret
inc
fistpll
test
in
mov
into
fdivp
ljmp
mov
xor
adc
mov
xchg
push
fbld
xor
fs
sbb
into
mov
jbe
add
and
movl
push
movl
push
pushf
lea
jmp
movb
jmp
mov
rorb
popa
lock
jp
subb
sub
jp
out
pop
orl
push
mov
movsb
fdivl
rolb
pushf
insl
adc
add
roll
mov
insl
xor
mov
xchg
adc
mov
pop
jp
popa
and
dec
add
and
fidivl
je
incb
popa
jle
sub
call
inc
push
into
nop
lods
hlt
shlb
push
push
jge
mov
adcl
xor
and
push
jmp
pusha
pushf
cmp
push
call
pusha
lea
ja
rol
dec
sub
dec
add
rol
rcl
bts
mov
adc
rcl
clc
mov
pusha
test
stc
push
repnz
call
not
movb
setp
jmp
push
call
sub
xchg
ljmp
add
insb
sbb
mov
loope
fdivrs
lret
loopne
push
enter
cmp
mov
cwtl
dec
lahf
cmp
xchg
mov
sbb
shlb
mov
jecxz
lds
inc
pop
xor
pop
loope
fldt
xor
add
aad
mov
pop
and
not
inc
neg
shl
rcr
adc
xchg
pusha
setl
lahf
jmp
nop
mov
dec
or
xor
push
cwtl
inc
es
repnz
sub
lea
ret
and
mov
mov
sub
mov
pop
in
push
push
ja
sbb
icebp
dec
mov
jl
add
aad
add
xlat
rcrl
aad
movsl
sub
into
xchg
popa
jo
inc
pop
in
jo
sahf
imulb
xchg
pop
arpl
mov
insl
cmp
call
hlt
sarb
testb
xchg
or
and
cmp
cmp
sbb
insl
cmp
inc
and
jmp
les
jne
xchg
sub
addr16
es
xor
jg
pop
mov
ret
and
xchg
jae
adc
lea
fidivrl
sbb
mov
sub
sti
xlat
jge
sbb
mov
xor
lea
mov
jne
js
les
mov
pusha
stc
shl
pusha
mov
jmp
rcl
jnp
or
aad
leave
aas
sbb
mov
and
cmp
or
mov
and
cwtl
or
mov
mov
and
pop
xor
mov
mov
and
cmp
pop
xorl
sbb
add
add
repz
mov
pop
xorl
clc
xorb
shll
or
xchg
mulb
and
fcomps
adc
test
mov
cltd
sarl
add
add
rorb
push
int3
jnp
sub
add
mov
and
cmp
jmp
inc
dec
fidivrl
adc
add
dec
jnp
add
add
mov
jnp
and
add
cli
testb
mov
sti
xorb
push
out
pop
adc
sbb
ljmp
push
and
add
pushf
add
mov
add
xchg
jmp
out
stc
loop
mov
and
pusha
loop
push
xchg
outsl
sarl
add
add
xor
scas
mov
and
jo
pop
nop
mov
sbb
or
add
push
mov
rcl
mov
and
jo
cmp
repz
adc
cmp
ljmp
pop
and
pop
mov
mov
or
add
push
xchg
mov
and
sbb
add
add
push
fnstcw
or
add
or
and
sub
pop
fisubrs
jnp
add
add
xchg
popf
push
out
insl
stc
jnp
flds
mov
daa
fwait
iret
xchg
mov
and
mov
mov
jnp
arpl
add
xchg
sarb
add
sbb
xchg
and
jnp
mov
cmpb
scas
xlat
sbb
add
add
sub
mov
add
clc
add
sub
test
scas
cli
incl
jne
clc
test
sub
push
stc
call
pushf
lea
ja
push
stc
imul
pusha
cmp
cmp
pusha
add
mov
push
movb
pushf
lea
jmp
cmp
jmp
mov
bound
fsubs
nop
add
mov
pusha
ljmp
sub
sbb
fildl
and
sbb
jmp
and
enter
push
cmp
mov
and
lods
push
mov
mov
aam
mov
xchg
pop
and
xchg
or
mull
xorl
dec
pushf
lea
ror
ror
mov
dec
bt
sub
push
clc
push
pusha
xor
dec
sar
mov
xadd
btr
xchg
push
mov
xadd
test
mov
pop
not
mov
push
or
pushf
call
clc
cmc
or
push
lea
jne
stc
rcl
ror
bt
mov
cmc
jmp
popf
mov
fisttpl
pop
divl
mov
mov
pop
sbb
pop
pop
add
loope
lea
sub
iret
lods
test
mov
out
xor
idivb
lds
add
xorl
repz
xlat
push
hlt
test
mov
sbb
sbb
lar
push
movsl
push
into
mov
mov
pop
pop
out
mov
call
pop
in
jns
das
fxch
jnp
sub
and
test
bound
pop
pop
ja
icebp
jo
je
sub
fsubl
sbb
scas
jl
sbb
in
xorl
pop
dec
dec
icebp
inc
jecxz
stc
xchg
or
insl
stc
jg
outsl
negl
imul
lret
push
scas
test
in
rcrl
add
ror
or
sub
dec
clc
out
adc
dec
imul
lea
push
inc
fisttpll
lds
xchg
xchg
and
outsl
insl
adc
lock
test
shll
cmp
lods
and
lret
pop
repz
add
loopne
adc
sub
xchg
outsb
sbb
insb
mov
fsubrl
pop
xchg
divl
and
inc
jne
mov
sub
jle
popa
in
mov
nop
push
mov
test
pop
js
mov
fsubrl
cmpsb
js
sbb
sub
add
shlb
mov
or
sub
data16
pusha
sbb
lret
add
xchg
sbb
in
shll
gs
maskmovq
notl
fsincos
adc
dec
arpl
popa
out
push
aas
fildl
xor
xchg
rcl
xchg
xor
cmp
mov
gs
pop
test
mov
lods
xchg
push
xor
int3
mov
dec
push
xchg
xor
cli
lahf
inc
int3
sahf
loope
fdivrs
hlt
mov
pop
int
shrl
xorl
xor
in
or
aaa
fbld
xlat
pop
pop
or
sahf
inc
sbb
aad
subl
sub
hlt
mov
repz
mov
outsb
call
movsb
ja
pushf
hlt
inc
xlat
xchg
bound
lods
xchg
and
fucomp
lcall
mov
inc
cmc
adc
xor
mov
and
dec
mov
jb
mov
inc
pop
push
jno
push
leave
mov
jnp
xor
ret
ret
out
adc
ss
scas
xor
mov
mov
sub
mov
xor
lea
mov
aam
inc
sub
fsubrs
inc
sbb
stos
insl
sub
mov
lods
popf
cmp
inc
and
xlat
mov
outsb
addl
pushl
pushl
pusha
lea
jmp
sahf
add
addb
add
pop
lret
adc
add
add
test
jecxz
add
in
sbb
sti
out
sbb
cmp
adc
pop
inc
push
add
add
add
jbe
adc
movsl
inc
nop
or
mov
mov
mov
loop
sub
mov
andb
int3
xchg
addr16
mov
mov
movsl
xor
jae
fisttpl
cwtl
dec
add
inc
jmp
pushl
jmp
or
or
cmc
jmp
pusha
pusha
pushl
lea
je
clc
sub
jmp
bt
cmp
mov
lea
ja
stc
imul
cmc
call
js
pop
mov
subl
fiadds
cmp
pop
cs
mov
rcll
adc
or
test
fidivrl
push
inc
fisubrl
add
mov
dec
sub
test
cmp
test
sub
or
sbb
cli
pushl
gs
xor
fs
insb
add
or
scas
add
xor
sbb
aad
std
cmpsl
and
imul
or
mov
jnp
mov
hlt
mov
cmpsb
andb
push
sbb
cmpsb
cwtl
push
dec
inc
and
popf
rdtsc
nop
pusha
call
movl
pushl
movw
movl
movb
movb
mov
lea
jmp
mov
call
das
push
rclb
add
test
pop
dec
stc
jg
lods
cmp
in
xchg
dec
shll
popf
imul
adc
cmp
cmp
jl
sub
jnp
scas
inc
or
stos
and
insl
ja
adc
repz
fldenv
outsb
mov
cmp
shrl
dec
cs
or
cmp
popf
iret
lock
or
xchg
push
test
mov
cltd
arpl
xor
jp
cmp
mov
in
paddw
aad
icebp
jae
jmp
and
hlt
test
stos
and
leave
scas
ja
sbb
and
jle
rcrb
fadds
xor
sahf
or
les
cld
mov
pop
adc
call
ret
int3
fidivl
mov
ficoms
nop
hlt
cmpsb
mov
out
and
lcall
movntq
cmpsb
cmpsl
xchg
mov
cld
int3
cmp
leave
aas
mov
fstpt
stos
leave
and
and
mov
sub
lds
pusha
sub
push
sub
adc
xchg
jle
xlat
ss
rcrl
rorl
adc
inc
test
loopne
add
jb
and
insl
xchg
movsb
ljmp
dec
or
es
imul
mov
rorl
xchg
into
adc
mov
int
insb
jnp
aas
adc
add
scas
stos
and
cmp
jmp
in
sub
cmp
das
daa
scas
addr16
addr16
adc
div
jae
or
cmp
loope
cmp
mov
or
push
mov
dec
jecxz
mov
jb
call
jmp
sub
dec
adc
ficoms
xor
mov
adc
cld
lret
sbb
and
movl
lea
jle
push
pushf
movl
movl
mov
lea
jmp
mov
dec
or
or
mov
xchg
decl
mov
stos
push
iret
repz
inc
ret
sbb
mov
int3
xchg
jg
xlat
cmpsl
mov
int3
lods
mov
and
cli
jp
xchg
test
test
adc
bswap
test
out
xchg
pop
dec
dec
bound
mov
or
in
dec
inc
adc
cmp
les
out
jb
adc
outsl
or
cmpsb
or
xchg
pop
or
mov
push
fists
mov
pushf
mov
ja
es
mov
cmpsb
or
jne
and
inc
pop
fwait
jg
jge
sarl
arpl
cwtl
pop
cmp
js
fsubrl
mov
ss
enter
add
mov
ljmp
xchg
cmpsb
or
out
decb
aam
or
pushf
push
movl
lea
js
push
mov
movl
push
movl
pusha
lea
jmp
cmpb
jmp
movl
pushl
movb
pushf
lea
jmp
push
das
fldt
shll
xor
lcall
or
leave
pop
sbb
fsubrs
cmp
shlb
jno
imul
repz
mov
subb
push
mov
inc
and
cmp
aaa
pushf
dec
xor
inc
and
dec
and
mov
pop
shrb
movsb
or
fcmove
leave
mov
jg
mov
or
imul
es
divb
push
xchg
notb
push
inc
push
pushf
enter
push
inc
mov
cwtl
rcrb
pop
cmpsb
out
jp
dec
pop
push
imul
cwtl
outsb
sub
mov
fs
rolb
shrb
loopne,pt
pop
adc
mov
leave
addl
movsl
icebp
dec
mov
jmp
sbb
add
and
lret
fists
push
loope
sbb
cmp
mov
fcmovnbe
test
mov
mov
in
enter
stos
adc
pop
cwtl
mov
jl
mov
pushw
addl
negl
and
xor
lea
jnp
pushf
dec
call
movb
lea
jne
sub
lahf
sub
aas
call
cmp
ds
loope
stc
adcb
jl
pushf
inc
mov
scas
fidivs
push
jns
mov
fwait
lea
inc
lock
je
sub
fnstsw
cwtl
push
lret
inc
xchg
dec
mov
ret
jmp
xlat
out
sbb
addb
ds
cli
les
orl
mov
daa
mov
lret
addr16
or
mov
lock
add
stos
pop
lock
loop
cmp
fmull
push
and
mov
call
add
inc
js
je
jb
arpl
jae
into
fbstp
repz
test
mov
mov
ret
jb
test
scas
sub
push
es
mov
lods
sub
scas
jmp
add
std
sub
call
andb
sbb
add
mov
jbe
pop
xor
repz
in
out
push
int3
sub
popa
outsl
fwait
push
cmpl
incl
fldt
mov
loopne
outsb
pusha
sbb
mov
push
ds
lret
int3
mov
clc
movb
pusha
push
movb
lea
jmp
push
push
pusha
pushl
pushf
lea
jmp
ror
jmp
push
dec
int
dec
inc
enter
lds
jo
dec
inc
inc
ret
jo
enter
jo
into
jo
enter
jo
enter
int
dec
enter
int
jo
dec
jo
dec
int
dec
ret
dec
iret
leave
lret
into
jo
lret
dec
lret
lret
dec
inc
iret
inc
ret
jo
movb
pushf
mov
jmp
jmp
push
roll
lcall
push
xor
icebp
ja
popf
sbb
rorl
testb
inc
ja
pop
loope
ss
enter
push
lods
xchg
lea
int
ret
mov
lret
insl
or
test
not
test
jmp
and
icebp
jae
push
mov
nop
adc
daa
mov
lds
add
jp
jno
lods
leave
cmc
xchg
imul
dec
outsl
xchg
cmpsb
hlt
sbb
jnp
cmp
cld
sub
sbb
push
mov
jno
jecxz
pop
or
stc
dec
outsb
popa
in
ret
loop
and
ss
push
cs
mov
insb
push
add
movl
and
enter
push
pushf
lea
jmp
lea
jne
inc
sub
rcr
stc
mov
pusha
add
jmp
cmp
data16
fiaddl
fisubrl
nop
or
rolb
add
mov
ss
pop
pop
sub
mov
leave
hlt
cmpsl
popf
jae
cwtl
stos
mov
shll
imull
icebp
int
jae
push
leave
mov
std
iret
lahf
mov
add
and
jmp
mov
pushl
not
movzbw
push
lea
lea
js
push
call
lea
je
stc
pusha
sub
call
call
outsl
cwtl
xor
movsb
inc
add
movsb
push
fwait
xlat
push
in
adc
or
mov
push
adc
test
push
cs
xchg
inc
negl
xor
pop
adc
mov
data16
xor
aam
push
mov
mov
lret
add
inc
and
dec
jmp
movsbw
lea
pusha
mov
lea
ja
push
pushf
call
add
cmp
cmp
stc
call
bt
pushf
clc
imul
cmp
pusha
push
bt
add
pushl
pushf
lea
jmp
xor
cmp
cmp
imul
sub
dec
fidivrl
movsb
xchg
pop
cmpl
inc
jne
shl
jne
div
sbb
mov
and
push
jge
pop
rcrl
jns
sbb
and
pusha
movw
push
pushl
lea
call
push
movl
call
mov
pusha
mov
btr
pushf
stc
bsr
mov
jmp
movl
mov
push
pushl
popl
push
pushf
pushl
pushl
ret
test
cmpb
mov
push
pushl
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
pop
xor
leave
pop
xlat
lea
movsl
xor
imul
fsub
sub
cmp
mov
mov
sti
xor
mov
push
xchg
repnz
pop
sbb
out
push
push
imul
pop
fadd
adc
lret
xor
test
pushf
cmpsl
xchg
repnz
and
sbb
xchg
jae
jecxz
std
test
jae
lcall
lea
xchg
mov
sahf
sub
add
dec
inc
dec
dec
jne
or
push
leave
dec
out
push
ss
popf
add
add
mov
add
rep
repz
dec
imul
cs
dec
or
or
out
fimuls
xor
jg
stos
dec
cmc
dec
push
xor
rorb
ss
mov
rcl
cli
sbb
cmp
adc
add
ss
out
xchg
pop
cmp
mov
xchg
push
pop
mov
pusha
lahf
pushf
dec
loope
pop
pop
mov
push
sbb
loopne
and
ret
fldcw
jbe
mov
insl
pop
or
add
cltd
das
inc
fists
sti
jl
mov
addl
sahf
call
insl
jb
fldenv
decl
xor
aam
cmp
in
jp
clc
push
and
or
scas
pop
fnstcw
sbb
mov
or
sub
ljmp
cmp
cmc
mov
lret
adc
cmpsl
test
adc
subl
mov
push
call
loopne
xchg
inc
and
jnp
adc
movsb
mov
sbbb
movl
cltd
push
aaa
les
shrl
mov
fmull
fiadds
mov
mov
sbb
jg
cmpsb
les
je
mov
xor
loopne
push
inc
or
out
cmp
pop
aas
lret
push
mov
fcoms
mov
stc
lea
pop
aad
jno
and
movl
or
xchg
add
movl
pushf
push
lea
jmp
sub
ljmp
push
xor
push
sarb
ljmp
xor
lcall
xor
and
dec
aad
out
inc
jecxz
push
out
push
sbb
or
xor
xor
pop
gs
in
pop
cwtl
sbb
dec
in
arpl
fsubrl
stos
loopne
sub
imul
sbbb
push
idivb
aam
pushf
and
mov
repz
dec
jmp
stc
xchg
cmp
cmc
imul
adc
movsl
fwait
dec
pmaddwd
pop
cli
fists
loop
mov
rcr
xchg
xchg
gs
fs
push
aam
pop
and
pop
mov
or
mov
stos
daa
mov
pop
adc
sahf
jmp
xchg
dec
fwait
pxor
outsl
dec
sbb
xchg
xor
movsb
jle
cmpsl
dec
out
in
pop
out
mov
pop
pop
cs
scas
movsb
dec
mov
mov
or
push
lea
out
test
les
cmp
inc
push
pushf
movb
movl
inc
push
lea
jmp
mov
stc
clc
call
cltd
lret
out
faddl
xchg
loopne
cmc
fwait
jg
xchg
sub
or
xor
mov
adc
stos
jae
test
loope
mov
cmpsb
clc
je
pop
xor
sub
out
push
out
pop
fisubs
nop
jbe
cld
add
add
shrb
daa
or
cmp
test
cmp
jmp
enter
in
inc
cs
pusha
sbb
jg
lea
sub
cmpsb
cmp
cmp
and
mov
jl
shrl
imul
jmp
rcrb
mov
cli
push
adc
push
arpl
inc
nop
mov
movsb
xor
jl
adc
jg
jp
test
sti
andl
arpl
nop
lahf
std
adcl
adc
out
inc
or
and
repnz
mov
enter
push
xor
cmc
inc
jge
jb
ret
fwait
dec
pop
xchg
mov
lods
fldln2
or
js
cmp
mov
mov
push
sub
cltd
xor
out
cmpsb
dec
loope
sahf
mov
stos
xchg
sub
iret
fsubrp
hlt
pusha
loope
and
inc
out
fisubrs
scas
xor
mov
sbb
xor
test
push
xor
add
push
cltd
mov
aaa
das
out
jmp
fwait
out
imul
dec
push
and
xor
es
jl
cltd
sub
push
test
push
movsb
addb
pop
cwtl
and
lods
and
dec
or
lcall
pop
pop
dec
and
imul
shll
adcb
cmp
sbb
xor
xor
sub
sahf
jge
mov
mov
adc
fcompl
push
sti
xor
leave
inc
rolb
movsb
sub
lock
adc
jge
jne
mov
and
sub
lods
lea
stc
movsl
lahf
jae
and
pushf
movl
mov
mov
mov
pushl
ret
icebp
adc
out
add
jp
and
data16
mov
or
rcrl
sub
cltd
repnz
sub
pop
jge
lds
stc
iret
into
fcompl
sub
mov
jne
lods
repnz
mov
int
xchg
xor
enter
mov
in
sub
inc
addr16
cmp
fisttps
divl
pop
arpl
repz
push
mov
mov
or
add
mov
insl
and
pusha
jmp
pusha
lea
je
bt
pushf
or
mov
lea
je
or
push
rcr
xor
call
jmp
not
call
xchg
jmp
cmp
addb
adc
push
lock
mov
xchg
cli
std
icebp
jle
pusha
mov
xor
cwtl
mov
xchg
jne
notl
cld
mull
not
mov
outsl
sbb
mov
aaa
pop
cmp
sbb
leave
xchg
cli
decl
test
mov
push
aad
or
mov
stc
or
call
mov
dec
inc
clc
cwtl
dec
pop
xor
je
mov
pop
xchg
mov
cwtl
jb
sete
fstps
sbbb
nop
push
sbb
mov
mov
test
push
repnz
iret
insl
fmull
mov
dec
loopne
xor
adc
leave
dec
daa
jp
mov
mov
jge
cmp
addr16
adc
sub
xlat
lods
pusha
xor
and
push
jge
ja
or
in
or
cmpsb
xchg
push
adc
sbb
fs
ja
adc
rol
sub
bsr
add
not
dec
sbb
mov
adc
mov
push
add
jno
cmc
test
repnz
push
movb
push
jmp
pop
xchg
adc
jne
sbb
arpl
arpl
mov
mov
repz
jns
adc
psrld
fists
xor
xchg
mov
fcoms
scas
inc
pop
push
jl
mov
mov
pushf
cmpsb
fidivs
or
jge,pn
xchg
mov
jmp
mul
lret
jae
cmpl
sbb
rcr
mov
jmp
or
push
repnz
cmc
add
mov
test
cmp
shlb
popa
aas
add
adcl
xchg
inc
lea
pushf
lea
call
push
call
jmp
bt
cmpb
pushf
pushf
lea
jne
bswap
adc
rcl
mov
mov
jns
pushf
movw
pushl
add
push
pusha
pushf
pushf
movzwl
lea
movzbw
mov
call
adc
popa
pop
sub
jne
mov
xlat
dec
out
pop
lea
mov
mov
lahf
cmpsl
jecxz
loope
push
loop
jno
rcrl
inc
sbb
aad
pop
imul
xor
out
jge
loopne
cs
ljmp
ljmp
ficompl
fimull
add
sbb
rol
mov
dec
adc
inc
loope
push
mov
or
xor
loope
pushl
adc
push
mov
xchg
lds
xchg
xchg
or
imul
aam
les
out
mov
lods
push
lcall
nop
outsb
repnz
mov
hlt
sbb
fwait
cmp
fs
xchg
test
push
and
pop
jmp
adc
push
jno
jmp
lock
xor
jno
in
or
daa
mull
ja
and
push
mov
pushl
pusha
mov
not
mov
mov
pushf
push
mov
movb
mov
not
pop
pusha
pushl
ret
mov
push
pushl
mov
lea
jmp
mov
push
clc
mov
pushf
push
hlt
nop
clc
xorb
pushf
inc
rclb
inc
jb
lock
stos
iret
push
jno
gs
mov
loop
adc
and
subb
or
jnp
mov
sub
cvtps2pi
jnp
lcallw
mov
leave
xchg
pop
xchg
ljmp
loope
mov
and
pushf
movl
pushf
push
movl
push
lea
jmp
andb
ja
loop
icebp
fistpll
jns
xchg
dec
frstor
jnp
and
xor
aaa
sarb
fprem1
fistl
cmp
cmpsb
jne
jnp
ljmp
daa
jle
out
popf
in
pop
roll
in
sub
sarb
inc
jle
fildll
daa
jge
and
and
into
mov
test
clc
cmp
cmp
jmp
movl
pushl
mov
pusha
pushf
pushl
ret
pusha
call
call
lea
ja
bt
pushf
mov
cmc
imul
push
add
movb
mov
push
movw
lea
jmp
repz
pushf
movl
jmp
call
in
push
xchg
mov
mov
lods
dec
mov
mov
add
out
xor
dec
out
lods
icebp
shll
jmp
and
mov
insl
outsb
and
lods
xchg
jne
xlat
scas
gs
add
iret
and
adc
mov
jmp
jmp
inc
sbb
cmc
jnp
cmc
xchg
popf
popf
xor
xchg
fsubl
adc
sbb
shll
in
mov
mov
clc
pushf
mov
dec
mov
imul
lds
xchg
dec
cmp
imul
sbb
xchg
pop
adc
dec
je
mov
mov
adc
scas
and
mov
popa
out
jae
xchg
sub
dec
loope
mov
fwait
ja
xchg
mov
mov
xchg
lods
and
inc
fisttps
sbb
hlt
movsb
js
mov
push
das
or
out
jno
sbb
xor
mov
xchg
clc
dec
sub
lds
sbb
pop
into
addr16
dec
pop
and
mov
out
stos
out
push
mov
inc
rorb
imul
push
add
or
adc
out
mov
push
into
lock
gs
mov
dec
lahf
mov
sbb
cs
push
inc
cli
or
nop
into
jne
aas
xlat
mov
jae
imul
adcl
cmpsb
mov
adc
aas
out
pop
sbbb
or
add
sbb
add
jnp
int
mov
repz
inc
mov
mov
shlb
add
pop
inc
insb
sbb
mov
jg
mov
jecxz
push
inc
rclb
daa
or
cli
xchg
pop
pop
in
sbb
sbb
lods
ret
jno
add
xor
pop
mov
and
and
les
mov
inc
cmp
inc
add
cmp
mov
xor
pop
cmpsb
inc
push
or
push
xchg
in
cmp
les
xchg
call
mov
loopne
fst
xchg
shl
mov
lea
imul
adc
outsl
inc
aaa
lea
cmp
inc
push
aad
aam
inc
mov
iret
mov
stc
fwait
sbb
and
and
hlt
hlt
or
mov
jno
mov
les
and
push
sub
and
pop
cli
sub
add
mov
mov
push
pop
mov
xchg
pop
pop
pusha
xor
mov
dec
push
fxch
in
push
xchg
mov
dec
mov
js
sbbb
xlat
test
stos
sub
cli
or
lcall
xchg
xchg
lret
sbb
cs
sub
cmc
jb
inc
jb
sbb
lea
adc
cmp
pushf
sahf
xor
stc
lahf
mov
cmpsb
fcomps
call
mov
mov
lock
bound
or
pop
je
movsl
into
pusha
js
sbb
push
fdiv
jb
and
aam
push
sub
insl
sarl
sarb
cmp
pop
and
pushf
push
nop
sub
pop
cltd
cmpsl
adc
cmp
neg
fldt
lea
aad
pop
jno
or
les
cmpsb
or
into
aas
dec
pop
add
pop
add
jnp
icebp
fnstsw
dec
sbb
mov
je
xor
je
mov
iret
mov
mov
aaa
fldl
ficompl
ror
push
outsb
shl
notb
lahf
mov
stc
mov
dec
push
inc
fiadds
lods
sbb
hlt
lock
testb
lret
call
xchg
test
aam
clc
xchg
stos
cmp
push
and
in
hlt
lods
out
or
mov
and
sub
aas
aaa
clc
adc
adc
sbb
dec
fst
push
dec
popa
pop
sarl
shll
add
int3
xchg
stc
push
pop
repnz
dec
aad
xor
lcall
outsb
lret
mov
dec
pusha
pusha
jle
sti
lea
testl
sti
aas
xlat
xchg
mov
das
pop
mov
push
int3
inc
lds
push
add
dec
jo
in
mov
mov
mov
pop
mov
shl
cmp
push
xor
dec
inc
aad
movsb
adc
cmp
mov
xor
mov
loop
mov
cmpsl
mov
jle
test
pop
fs
jp
dec
mov
ret
in
testl
mov
stos
sub
std
popf
xor
lret
mov
cmp
cmp
scas
lret
dec
leave
mov
push
push
mov
jae
push
cmp
ret
fcoms
cmp
pusha
loop
in
pushf
jb
subb
xor
push
mov
aaa
dec
hlt
pop
fstpl
insl
sbb
mov
cwtl
scas
mov
imul
push
int3
mov
and
sbb
mov
clc
js
inc
dec
pusha
pop
xchg
add
in
loope
les
xchg
in
stos
pop
xor
lea
sub
add
push
xchg
inc
frstor
jbe
adc
pop
lea
jo
cs
or
pop
sub
xchg
aad
and
fucom
push
push
or
icebp
xchg
pushf
inc
hlt
mov
dec
test
aam
out
call
mov
fdivs
xor
xor
push
ss
jo
inc
mov
dec
jl
push
out
sbb
dec
dec
scas
adc
xchg
sub
fbstp
xlat
subb
jle
aad
sbb
jbe
ficomps
adc
or
scas
mov
cli
fsubl
xchg
stos
int3
fistl
pop
dec
fwait
mov
scas
mov
repnz
aam
jne
mov
in
std
push
jno
clc
dec
lcall
or
lcall
bound
lods
mov
arpl
iret
fsubrs
movsl
xlat
xlat
jno
rcr
and
mov
cmpsb
mov
clc
push
and
shrd
adc
sar
add
mov
cmp
cmp
pusha
movb
and
cmp
movb
stc
add
pusha
movb
push
lea
jmp
or
movb
pushf
push
lea
je
jmp
call
push
push
jecxz
jno
xchg
pusha
ret
cs
iret
pop
iret
jno
cltd
sbb
mov
repnz
mov
sbb
mov
in
lcall
movsl
mov
sahf
je
cs
in
movsb
test
and
addb
pushl
ret
xor
jno
cmc
dec
sbb
mov
loope
adc
mov
in
aas
pop
jns
aaa
push
dec
filds
add
mov
stc
mov
adc
loop
jp
jmp
mov
fwait
lods
xor
push
sub
and
mov
jns
test
adc
cmpsb
xor
int3
cmp
mov
stos
je
daa
xor
jle
push
fsubs
test
xchg
add
fcmovb
add
xor
addl
adc
add
repz
mov
lea
call
jmp
popf
cpuid
nop
pusha
movl
push
movl
pushl
push
push
lea
jmp
str
push
jmp
xchg
movzbw
xor
lea
mov
pushf
mov
bswap
pop
jmp
jmp
movzbw
not
pusha
mov
call
fisttpl
inc
lret
iret
dec
lret
inc
iret
inc
lret
enter
inc
inc
enter
lds
xchg
rcl
mov
shl
bt
bsr
shr
add
shrd
adc
rcr
add
pushf
dec
inc
mov
bt
pusha
pusha
push
shr
push
cmc
cmp
call
pushf
jmp
pop
jbe
cwtl
pushf
adc
repnz
fistps
clc
movsb
sbb
pusha
lret
fiadds
hlt
jno
stos
subb
cld
rorb
mov
add
jo
fsubp
inc
xor
cli
decb
cs
mov
sbb
adcl
mov
push
or
lcall
mov
cmpsb
dec
sbb
ret
mov
push
test
mov
jne
adc
or
sub
jle
je
adc
jp
xor
orb
sub
fidivrl
push
sarl
cmp
inc
sbb
mov
mov
enter
mov
xchg
popf
jnp
loopne
outsl
out
inc
sti
xchg
mov
jo
sub
std
outsl
mov
cmc
cmp
sbb
cmpsl
dec
sub
mov
insl
jns
jno
sti
bound
cld
or
sub
repz
cmp
scas
xor
into
xchg
fs
imul
mov
pop
dec
pop
lea
jae
test
seta
ror
xadd
mov
inc
inc
shrd
rol
mov
shr
mov
bt
bt
pushf
sub
cmc
repnz
call
jb
xor
inc
jecxz
xchg
lods
aas
movl
fyl2xp1
lahf
fmuls
push
dec
popf
cld
add
jmp
bound
and
inc
out
adc
fxch
inc
in
cmp
shll
in
sub
int3
cli
mov
fisubrl
clc
sbb
pop
add
push
dec
push
shrl
fisubrs
lret
cmpsl
and
push
fwait
inc
mov
mov
mov
jmp
notb
or
mov
add
dec
out
adc
cmp
pop
xlat
repz
int3
sbb
sub
jl
sarb
lahf
mov
xor
jne
aaa
dec
shll
cmpb
cltd
or
loop
and
add
rorb
stos
lea
add
aas
sub
mov
movsl
xchg
ja
xlat
popf
jae
mov
popf
sub
mov
stos
xchg
pusha
sub
mov
stos
push
lock
test
cmp
push
add
decl
insb
xor
mov
hlt
and
int
push
mov
mov
adcb
sahf
sbb
stos
push
lock
adc
inc
adc
mov
stos
mov
sbb
rcrb
xchg
fs
adc
mov
and
test
fwait
inc
ds
push
mov
mov
movsb
cli
rorb
dec
add
mov
dec
add
xlat
push
outsb
or
dec
les
xchg
sbb
mov
call
inc
ljmp
aad
sub
les
push
mov
mulb
div
sub
jecxz
inc
adc
rorb
outsl
push
dec
pop
mov
jo
xchg
lea
inc
fcompl
mov
cmp
dec
push
mov
mov
mov
jne
or
pop
jmp
outsb
fstpt
loopne
adc
in
mov
aaa
adc
jne
cmp
sub
inc
and
test
setbe
pusha
sar
xchg
xor
mov
xadd
ror
pusha
xchg
sar
lea
lea
je
cmc
push
mov
push
ror
shld
rol
pushl
add
inc
bsr
xor
push
dec
bts
bsr
btc
mov
shld
add
sub
cmp
xor
push
adc
shl
bswap
bsf
add
rol
rcl
inc
lea
xadd
neg
sub
movzbw
mov
lea
setno
mov
jmp
pushf
movb
mov
mov
pushf
lea
jmp
mov
lea
jge
push
pushf
pusha
dec
push
push
push
lea
jmp
mov
pushl
movw
pushf
movw
lea
jmp
mov
cmc
sub
btc
rcl
rol
btc
btr
shr
rol
sub
jmp
push
bts
mov
pushf
cmc
cmp
stc
add
movl
movb
push
lea
jmp
add
add
pushf
xchg
clc
cmp
jmp
pusha
pushf
popl
pushf
pushl
pushl
popl
pushl
movb
mov
pushl
lea
jmp
xchg
cmp
call
call
shl
call
push
shl
movzbl
call
call
jmp
lea
jp
std
cld
pushf
pusha
jmp
mov
pushf
popl
jmp
call
aam
mov
shl
rcr
cmc
mov
stc
jg
sub
pushf
shl
movl
pusha
mov
pushf
mov
jmp
mov
lea
call
repz
popl
stc
call
cmp
cbtw
bt
cmp
cmp
cwtl
test
jmp
call
movzbl
clc
bt
add
sets
setb
jge
dec
clc
shrd
call
add
mov
bt
pushf
add
push
pusha
lea
jmp
call
stc
sub
pushf
pushf
lea
jmp
pushl
popl
pushf
mov
lea
jmp
call
mov
lea
je
push
pushf
mov
mov
mov
push
lea
jmp
cmp
stc
stc
not
cmc
cmc
test
bt
sub
clc
call
mov
cmc
bt
pushf
cmc
add
pusha
pushl
pushf
mov
pushf
pushf
pushf
push
lea
jmp
pushf
mov
pushl
pusha
push
lea
jmp
rol
bt
bt
pushf
xor
cmc
pusha
stc
stc
sub
push
call
call
push
mov
pusha
pushf
repz
popl
bt
clc
mov
pusha
cmc
call
lea
jne
pusha
mov
pusha
pushf
mov
pushf
lea
jmp
pushl
add
call
shld
sbb
mov
lea
test
jmp
pushf
add
call
jmp
push
sarb
lahf
and
aas
lahf
arpl
aas
lahf
sbb
lahf
in
jmp
lahf
aaa
in
aas
lahf
sbb
lahf
adc
enter
in
aas
lahf
push
sarb
lahf
add
aas
lahf
xchg
fidivrs
lahf
ja
aas
lahf
xchg
aas
lahf
fidivrs
lahf
jecxz
aas
lahf
pop
enter
out
lahf
aas
out
lahf
jo
aas
lahf
in
aas
lahf
out
aas
lahf
mov
sarl
lahf
xchg
fidivrs
lahf
or
lahf
add
aas
lahf
ja
aas
lahf
jo
aas
lahf
sbb
lahf
out
aas
lahf
sahf
enter
into
aas
lahf
xor
aas
lahf
aas
out
lahf
in
jmp
lahf
jl
aas
lahf
jb
aas
lahf
fidivrs
lahf
pop
enter
sarb
lahf
movsb
aas
lahf
jl
aas
lahf
fidivrs
lahf
sbb
lahf
mov
aas
lahf
in
aas
lahf
ja
aas
lahf
push
sarb
lahf
sahf
enter
loop
lahf
sbb
aas
lahf
das
out
lahf
sbb
aas
lahf
xor
aas
lahf
in
jmp
lahf
sub
aas
lahf
adc
enter
sarb
lahf
adc
aas
lahf
scas
fdivrs
lahf
inc
in
aas
lahf
add
aas
lahf
ja
aas
lahf
jecxz
aas
lahf
jecxz
lahf
in
aas
lahf
and
lahf
int
aas
lahf
jecxz
lahf
push
enter
sarb
lahf
mov
sarl
lahf
mov
out
lahf
and
lahf
sbb
aas
lahf
fidivrs
lahf
sahf
enter
sarb
lahf
mov
fidivrs
lahf
sbb
aas
lahf
jl
aas
lahf
jo
aas
lahf
xchg
sarb
lahf
adc
aas
lahf
mov
jecxz
lahf
mov
aas
lahf
fidivrs
lahf
pop
enter
sarl
lahf
adc
aas
lahf
sbb
lahf
sbb
out
aas
lahf
out
aas
lahf
mov
sarb
lahf
push
enter
aas
lahf
pop
in
lahf
gs
aas
lahf
adc
in
aas
lahf
sub
aas
lahf
and
out
aas
lahf
ja
aas
lahf
xchg
sarb
lahf
int
aas
lahf
arpl
aas
lahf
test
aas
lahf
sahf
enter
out
aas
lahf
js
aas
lahf
and
aas
lahf
jecxz
aas
lahf
sahf
enter
out
lahf
int
aas
lahf
mov
aas
lahf
lret
lahf
jb
aas
lahf
lret
lahf
aas
out
lahf
lret
lahf
xchg
sarb
lahf
lret
lahf
sbb
lahf
lret
lahf
push
enter
lock
lahf
mov
lock
lahf
mov
lock
lahf
inc
in
aas
lahf
lret
lahf
mov
lock
lahf
gs
aas
lahf
lret
lahf
and
lock
lahf
adc
lock
lahf
push
sarb
lahf
lret
lahf
xchg
aas
lahf
lret
lahf
push
enter
aas
lahf
in
aas
lahf
mov
aas
lahf
movsb
aas
lahf
sbb
lahf
mov
in
aas
lahf
sahf
enter
iret
aas
lahf
sbb
lahf
jecxz
aas
lahf
js
aas
lahf
inc
in
aas
lahf
aas
out
lahf
add
aas
lahf
test
aas
lahf
arpl
aas
lahf
xchg
fidivrs
lahf
test
aas
lahf
xchg
aas
lahf
sbb
aas
lahf
daa
leave
aas
lahf
in
aas
lahf
sbb
aas
lahf
sbb
aas
lahf
repnz
lahf
fidivrs
lahf
daa
leave
aas
lahf
lods
in
lahf
sbb
sarl
lahf
test
aas
lahf
jecxz
aas
lahf
test
aas
lahf
lods
in
lahf
test
aas
lahf
xchg
aas
lahf
test
aas
lahf
mov
jecxz
lahf
and
aas
lahf
test
aas
lahf
test
aas
lahf
test
aas
lahf
jb
aas
lahf
test
aas
lahf
push
sarb
lahf
test
aas
lahf
xchg
aas
lahf
test
aas
lahf
pop
enter
jecxz
lahf
and
jecxz
lahf
lods
in
lahf
test
aas
lahf
in
jmp
lahf
test
aas
lahf
sbb
aas
lahf
test
aas
lahf
sbb
aas
lahf
test
aas
lahf
xor
aas
lahf
lods
in
lahf
inc
in
aas
lahf
add
aas
lahf
push
enter
icebp
aas
lahf
sbb
lahf
test
aas
lahf
jecxz
lahf
sbb
lahf
sbb
lahf
mov
jmp
aas
lahf
mov
aas
lahf
push
enter
jecxz
lahf
xchg
fidivrs
lahf
xor
aas
lahf
sub
aas
lahf
int
aas
lahf
test
aas
lahf
sub
aas
lahf
mov
sarl
lahf
sbb
aas
lahf
sbb
lahf
mov
aas
lahf
xchg
aas
lahf
push
sarb
lahf
js
aas
lahf
sahf
enter
lock
lahf
lods
in
lahf
xor
add
rcr
movzbl
call
rcl
lea
cmc
jmp
stc
add
pushf
not
pushf
jmp
movsbw
movsbw
mov
movsbl
bsr
pop
bsf
add
neg
pop
lea
das
pop
lahf
cmc
sub
pop
shl
shl
shrd
pop
aad
aam
cmc
pop
setbe
or
bswap
pop
movsbw
sbb
rol
stc
pop
shld
pop
shl
popf
lea
bswap
pop
push
pushl
ret
mov
pushf
pushf
lea
jmp
pushf
movw
pusha
mov
call
jmp
add
jle
push
shr
not
push
bts
push
call
jmp
pushf
pusha
mov
jmp
call
pushf
mov
movsbw
std
mov
mov
call
inc
stc
setae
bswap
rol
lea
inc
pop
or
add
not
and
btr
mov
clc
bt
jmp
mov
pusha
mov
call
clc
call
add
mov
pusha
test
sub
bt
call
mov
xor
call
inc
dec
shl
mov
cmc
test
cmc
call
stc
bt
mov
test
pusha
pushf
mov
push
push
bt
mov
ror
mov
rcr
xchg
bsr
mov
sar
call
movb
mov
pushf
mov
movb
push
pushf
lea
jmp
cld
cld
pusha
cld
mov
pusha
rep
sub
rol
add
bsr
mov
jmp
rcl
push
movzbw
movsbw
mov
inc
jmp
pusha
movb
movb
mov
mov
pusha
lea
jmp
pusha
pushf
call
lea
jp
pushf
mov
mov
movb
pushf
pushf
mov
pushf
mov
mov
jmp
pushf
not
mov
push
pushf
pushf
pusha
lea
jmp
jmp
test
bswap
test
rol
pushf
adc
add
shld
shrd
lea
cmc
pusha
sub
pusha
pushl
pushf
lea
jmp
cmp
clc
sub
mov
call
and
or
bsr
mov
adc
add
mov
pushf
setne
dec
mov
call
clc
sub
call
pushf
jmp
jmp
pushf
daa
rol
call
mov
pushf
jmp
pushf
pushf
pusha
pushf
mov
pushf
repz
popl
jmp
mov
cmc
cmc
cmp
call
pushf
popl
jmp
setge
movzbl
push
mov
pushf
lea
pushf
pusha
push
mov
movb
movw
movb
lea
jmp
bsf
add
stc
movzbw
rol
rcl
not
bt
btr
rcr
rol
pushf
rcr
add
adc
movzbw
btc
bsr
movzbl
jmp
pushf
pusha
pushf
pushf
popl
push
pushf
pushl
popl
mov
mov
pushf
movw
lea
jmp
push
shld
shl
mov
pushl
add
setbe
mov
pushl
jmp
sub
call
pusha
aam
mov
sub
clc
mov
mov
sub
cmc
cmc
call
cld
std
mov
not
mov
bswap
bswap
lea
pusha
call
pushf
jmp
lea
call
stc
stc
and
call
mov
test
pusha
xchg
clc
pushl
mov
mov
shr
clc
pushf
xchg
xor
btc
mov
lea
mov
sbb
pushl
popl
movzbw
dec
and
movl
pop
movsbl
bts
mov
shld
xor
xor
mov
adc
movzbw
ror
bswap
shrd
pop
btc
add
sub
lea
call
mov
stc
mov
movb
pusha
clc
mov
or
not
bsf
mov
adc
sub
sar
xchg
bsf
mov
movsbw
clc
stc
mov
call
jmp
rcr
rcl
lea
mov
rol
push
mov
movl
pushf
stc
cmp
add
mov
mov
pusha
mov
movb
movb
lea
jmp
cmc
xor
test
add
clc
movl
sub
test
cwtl
bt
cmp
movw
sub
pushf
call
pushf
popl
mov
pushl
popl
pushf
pushf
push
lea
jmp
pusha
call
pusha
mov
movl
pusha
lea
jmp
add
call
push
mov
push
add
pusha
call
divl
pushl
push
lea
jnp
mov
pusha
push
push
mov
jmp
bsr
bswap
mov
xor
stc
stc
mov
call
push
add
jb
add
call
shl
movsbw
xchg
rdtsc
bt
call
lea
jne
cmp
test
mov
test
and
pusha
jmp
shl
xadd
mov
and
mov
xchg
movzbw
pushl
bswap
pushl
popl
bsf
stc
rol
not
movl
sbb
xadd
adc
xadd
mov
rol
dec
xor
pop
rol
btc
bswap
btc
bsf
movsbw
add
push
adc
add
lea
stc
clc
sub
pusha
pusha
lea
jmp
add
movl
mov
mov
pusha
pushf
lea
jmp
mov
pusha
add
pusha
pushf
push
lea
jmp
cmp
test
test
mov
cmp
js
add
pushf
pushf
mov
pusha
jmp
test
mov
bt
push
stc
clc
sub
test
bt
add
pushl
pusha
pushf
popl
mov
pushf
pushl
popl
pushf
lea
jmp
cmp
xor
bt
bt
rol
bt
pushl
cmc
sub
jmp
lea
jne
clc
call
bts
sar
mov
pushf
jmp
shr
call
call
aam
btr
neg
rol
mov
mov
mov
push
cmp
add
pushl
pusha
push
call
shl
test
jmp
mov
movw
mov
mov
jmp
mov
push
pushf
lea
jmp
push
mov
add
mov
sub
mov
cmp
movl
movl
sub
pusha
pushf
cmc
shr
jmp
clc
push
call
pushf
pusha
mov
mov
repz
popl
call
or
test
movb
xor
mov
pushl
pushl
inc
pushf
decl
jmp
add
jb
pusha
mov
mov
pushl
ret
bt
sub
call
xor
pusha
ror
mov
test
mov
clc
add
mov
push
lea
jmp
jmp
push
jmp
sbb
not
add
call
lea
je
cmp
stc
stc
sub
bt
cmc
cmc
test
xchg
pushf
pusha
call
jmp
pusha
add
pushl
movb
call
jmp
setne
mov
xor
push
rcr
add
setbe
pushf
setl
mov
pusha
mov
pushf
lea
jmp
shl
xor
btr
bswap
bt
not
inc
add
pop
shrd
lea
bt
stc
sub
push
lea
jmp
pushf
jmp
jmp
lea
shrd
cwtl
mov
jmp
pushl
popl
pushf
pushf
push
push
lea
jmp
lea
not
mov
movsbl
mov
push
mov
jmp
mov
cmc
neg
cmc
add
test
stc
movb
mov
mov
cmc
sub
pusha
push
mov
mov
pushl
lea
jmp
push
pushf
repz
popl
cmc
mov
clc
mov
cmc
pusha
xchg
bsr
push
mov
shrd
sar
dec
adc
xchg
inc
stc
not
pop
mov
movsbl
mov
rcl
pushl
popl
inc
movl
xchg
mov
cmp
stc
shr
xor
lea
bsf
pop
bswap
dec
movsbw
rcl
dec
add
movsbl
test
lea
bt
movb
sub
pushf
pushf
pushf
lea
jmp
mov
call
mov
movb
cmp
clc
mov
and
shl
shl
btr
mov
sbb
lea
clc
shr
mov
bsf
mov
btr
shld
dec
test
mov
xadd
rcl
bsf
pushl
popl
inc
shr
xadd
sbb
movl
adc
mov
rcr
xor
add
cmp
ror
xor
bswap
clc
cmp
add
and
pushf
movzbw
shl
lea
push
test
sub
pushf
pusha
pushf
lea
jmp
call
xor
mov
add
clc
xor
bt
mov
adc
btc
add
shrd
dec
neg
pusha
pusha
bswap
lea
dec
movzbw
sar
add
btc
clc
xor
mov
bt
lea
add
shrd
mov
movzbl
dec
btc
adc
mov
mov
lea
jno
sub
cmp
jmp
mov
jmp
call
clc
cmp
call
bsr
adc
and
mov
cmp
call
xor
neg
bswap
not
add
and
bts
add
btc
lea
pushf
clc
bt
sub
push
mov
movb
lea
jmp
pushf
shr
pushf
pushl
call
pushl
popl
mov
movb
movb
mov
lea
jmp
jmp
mov
mov
pushf
jmp
bswap
aad
movzbl
mov
pushf
call
neg
sbb
sub
movzbw
mov
xadd
movzbl
mov
btr
btr
add
xor
setns
bsr
or
mov
push
add
rol
rcl
rol
cmp
neg
jmp
jmp
xchg
pusha
pushf
movl
pushf
mov
pushf
pushf
mov
push
pushf
movb
pushl
ret
mov
pushl
pusha
mov
push
pushl
ret
add
pushf
push
mov
lea
jmp
mov
pushl
popl
pushl
movb
lea
jmp
call
bswap
and
add
bts
pusha
lea
cmp
stc
cmp
sub
push
lea
jmp
pushl
mov
jmp
mov
push
or
jmp
pusha
pushf
push
mov
pushf
pushl
pushf
push
lea
jmp
dec
test
add
add
xor
movzbw
ror
bt
push
add
rol
pushf
movzbl
lea
mov
clc
sub
movb
clc
add
call
add
pusha
lea
jmp
push
add
bswap
pusha
not
not
pop
bt
btc
rol
bswap
setp
bt
neg
add
sbb
ror
movzbl
bt
call
sub
call
push
test
sub
pushf
clc
rol
pushf
sub
pushf
call
pushl
popl
pop
movl
movsbw
movzbw
mov
cmc
add
jmp
add
cmc
bt
cmp
sub
call
lea
jne
dec
xorb
pusha
sets
pop
mov
push
pusha
push
lea
jmp
mov
push
lea
jmp
cmp
call
cmp
sub
notl
add
bts
mov
test
cmp
jmp
jmp
push
pusha
mov
movl
mov
pushl
ret
call
pushf
movb
pushf
popl
movb
pushl
popl
mov
movb
movb
mov
lea
jmp
neg
pusha
movzbl
cmc
cmp
movb
pushf
add
call
sub
push
pushf
pusha
mov
lea
jmp
pushf
push
mov
pushf
repz
popl
call
bswap
adc
rcl
pushl
popl
movsbl
not
ror
shrd
movl
push
sar
sbb
mov
movzbw
btr
bsf
xor
shrd
bswap
dec
movw
stc
add
shl
stc
shl
lea
clc
jmp
cmc
neg
bt
add
movw
stc
mov
mov
pushf
mov
movb
sub
call
sub
call
push
sub
call
call
xor
ror
mov
call
mov
xor
shrd
test
mov
rcr
cmp
shl
jmp
pushf
mov
pushl
pushl
push
dec
pusha
pushf
lea
jmp
jmp
mov
movb
lea
jmp
movb
call
inc
jmp
add
clc
push
pushf
bt
sub
stc
pusha
cmp
not
test
stc
xor
stc
pushl
add
stc
sub
pushf
movb
pushf
push
mov
jmp
pushf
pushf
popl
pushl
pushl
popl
pushf
pushf
pushl
lea
jmp
mov
movb
push
mov
lea
jmp
push
lea
mov
pusha
jmp
jmp
pushf
mov
pushf
call
mov
bt
btr
shr
mov
pushf
test
stc
pusha
not
stc
cmp
test
not
bt
pushf
push
and
pushl
jmp
jmp
xchg
pusha
stc
shr
neg
mov
cmc
sar
xchg
rol
sar
mov
bt
xadd
pushf
rcr
mov
inc
stc
xor
btc
pushl
popl
xor
bswap
shld
mov
movl
clc
jmp
btr
call
cmp
push
mov
clc
clc
mov
cmp
mov
cmp
test
push
movl
mov
stc
mov
bt
bswap
neg
push
sub
shl
push
shl
xchg
movsbw
lea
push
lea
pushf
stc
test
pushl
popl
push
bts
sar
ror
movl
or
cmc
mov
shr
movsbw
xor
movsbw
btr
bts
bsr
bswap
shrd
dec
add
jmp
btc
sub
mov
test
mov
xchg
neg
rcl
mov
sar
pushl
popl
not
movl
xadd
jmp
repz
test
push
call
bt
shld
call
pushf
popl
movb
pushl
popl
pusha
lea
jmp
repz
popl
pushf
cmp
pusha
push
mov
clc
mov
bt
stc
mov
movzbw
jmp
cwtl
mov
push
mov
call
test
not
call
mov
pushf
call
push
mov
push
push
pushf
repz
popl
pusha
bt
mov
jmp
pushf
pusha
mov
pusha
mov
mov
pushl
lea
jmp
inc
test
xor
clc
stc
bt
xor
cmc
mov
sub
mov
mov
movw
mov
mov
movb
lea
jmp
pushf
mov
pushl
jmp
mov
test
call
pushf
pushf
lea
jb
jne
btc
cmp
mov
clc
call
lea
js
mov
pusha
push
lea
jmp
pushf
popl
call
mov
movb
call
movsbw
push
movsbw
inc
pop
rol
pushf
pushf
sete
inc
pop
sbb
sub
and
bt
bts
mov
pushl
bt
push
add
lea
jne
mov
pusha
pushf
lea
jmp
pushf
pushf
pushl
lea
je
cmp
pusha
clc
xor
bt
cmp
jmp
call
shl
mov
test
mov
adc
shr
mov
pushf
add
clc
shrd
pusha
mov
pushf
mov
push
jmp
movsbw
mov
clc
clc
cmp
bt
add
pushf
mov
lea
jmp
jmp
jmp
pop
movzbl
mov
movw
call
dec
movw
lea
jmp
mov
pushf
push
pushl
mov
movb
movb
lea
jmp
rol
cmp
add
jmp
call
xchg
call
push
sub
movzbl
call
jmp
setle
mov
pushf
lea
cpuid
test
jmp
mov
mov
push
mov
lea
jmp
lea
jne
call
rep
lea
xor
btc
btr
mov
sub
rcl
mov
test
movb
test
pushl
popf
mov
movl
lea
jmp
mov
movb
or
jmp
push
pushl
add
bt
pushl
movb
rol
cmp
test
cmp
xor
stc
call
lea
jne
jmp
pusha
lea
bt
test
sub
pusha
lea
jmp
pushf
shld
dec
shrd
mov
rcl
pushf
adc
jmp
call
test
pushl
popf
pushf
mov
mov
lea
jmp
rep
add
bsf
mov
bsr
bt
mov
cmc
pushl
cmp
pushl
popf
push
lea
jmp
mov
pushf
lea
jmp
movzbw
push
dec
pusha
call
sbb
movsbw
shl
mov
bt
sub
pushf
pusha
mov
pushl
pushf
mov
lea
jmp
xor
add
btr
call
dec
pusha
pushf
dec
movsbw
add
neg
adc
shld
sub
bsf
btc
movsbw
mov
test
add
call
pushf
mov
lea
jne
bsf
bsr
rcr
mov
pusha
and
stc
cmp
mov
lea
jne
shrd
movzbw
call
mov
clc
clc
xchg
jmp
neg
cmc
stc
mov
and
neg
and
mov
stc
cmp
sub
call
stc
pusha
cmp
bswap
pushf
call
sar
mov
pushf
cmp
mov
add
movb
push
lea
jmp
test
pushl
stc
jmp
push
call
jbe
add
cmc
cld
stc
clc
popf
push
movb
pusha
pushf
lea
jmp
movzbw
btr
mov
pusha
cmc
stc
call
repz
popl
pusha
cmp
mov
call
pushf
pushf
pushf
popl
lea
jle
push
pusha
pushl
popl
mov
pushf
push
push
lea
jmp
call
cmc
pusha
xchg
btr
bt
mov
call
push
call
mov
pusha
pushf
popl
call
xadd
bsr
mov
shr
bts
xor
shrd
lea
push
not
bswap
movsbw
shr
stc
bts
add
add
pushf
lea
stc
pusha
pushf
sub
pushf
lea
jmp
push
bt
stc
add
pushf
stc
call
inc
mov
shl
test
shrd
bt
mov
test
clc
test
not
js
cmp
not
jmp
shl
call
push
mov
jmp
cmp
jmp
mov
mov
push
dec
pushf
pushf
movw
movb
lea
jmp
test
shl
mov
clc
add
push
lea
jmp
mov
pusha
mov
pushf
lea
jmp
mov
mov
jmp
not
stc
stc
and
mov
test
bt
cmc
sub
test
jmp
bt
add
pushf
jmp
jmp
mov
pushf
mov
pushf
mov
mov
push
push
lea
jmp
setns
mov
rol
push
clc
push
add
shl
add
pushl
sub
sub
btr
shr
lea
and
mov
pusha
cmp
test
call
pushl
not
lea
jno
rol
push
cmp
jmp
jmp
clc
xor
mov
xchg
pusha
movl
mov
mov
movb
pushl
ret
pusha
mov
pusha
push
lea
jmp
pushf
popl
mov
mov
pushl
popl
pushf
push
mov
lea
jmp
jmp
push
pusha
mov
jmp
cwtl
sub
mov
jmp
or
movsbl
pop
push
bsr
or
push
cmp
mov
shrd
pushl
movsbw
jmp
pushf
pushf
pushf
pushl
popl
push
push
pushf
pushf
lea
jmp
dec
jmp
bt
btr
mov
dec
rcl
mov
stc
push
add
push
jmp
mov
pushl
lea
jmp
mov
movsbl
xchg
xor
rcr
dec
mov
bswap
inc
movsbw
not
btr
add
shr
sub
rcl
cmp
lea
and
jmp
test
sub
jmp
pusha
lea
ja
shl
mov
push
movzbl
lea
sar
shl
rcl
sub
sar
lea
btr
bt
and
sbb
bt
neg
shl
sub
lea
mov
movzbw
not
pushf
movzbw
bswap
push
xchg
movsbw
js
pushf
mov
mov
movsbw
movsbw
pushl
lea
pushf
mov
pushf
jmp
mov
call
mov
push
pop
mov
movb
pushl
mov
call
push
push
mov
jmp
pusha
pushf
mov
pusha
pushf
push
lea
jmp
cmc
sub
push
pushf
mov
movw
lea
jmp
rol
mov
shl
adc
shl
rcr
mov
jo
cmc
cmp
push
sub
call
dec
call
bt
and
pusha
mov
pushl
pushf
popl
mov
push
call
ror
mov
clc
add
push
pusha
pushf
lea
jmp
neg
pushf
clc
cmc
sub
movb
pusha
mov
cmp
mov
cmc
jmp
mov
jmp
cmc
jmp
cmp
jmp
pusha
mov
jmp
call
shl
inc
shl
mov
inc
bsr
bts
mov
cmc
bt
mov
clc
add
jmp
pushl
popf
pushf
pusha
pushf
lea
jmp
mov
cmp
movw
mov
clc
mov
bts
mov
bt
or
bswap
rol
mov
bsf
call
lea
jno
pusha
mov
pushf
pusha
movl
pushf
lea
jmp
setae
pusha
dec
shl
movzbl
pushf
pushf
test
add
clc
jmp
sub
test
shl
cwtl
mov
shl
rol
mov
push
lea
jns
pushf
add
jmp
clc
bt
push
add
jmp
movzbw
rcl
movsbw
rol
and
neg
ror
xor
clc
btr
movzbw
neg
shl
sub
add
jmp
mov
push
pushf
mov
pushf
call
cmc
cmp
shr
jmp
pushf
mov
jmp
clc
pushf
cmc
mov
cmc
cmp
add
movb
pushf
lea
jmp
push
jmp
push
mov
pusha
push
lea
jmp
add
movzbw
bts
mov
stc
bt
pushl
popf
pushf
mov
lea
jmp
call
bsr
aaa
aad
add
mov
shr
ror
inc
adc
mov
push
cmc
sub
test
stc
cmc
shl
jmp
push
movb
mov
mov
mov
movb
push
lea
jmp
pushf
popl
call
stc
stc
cmp
push
jmp
mov
stc
call
sub
stc
cmpl
pusha
pushf
movb
pushf
mov
call
movzbl
jmp
pushf
sub
jmp
pushl
popl
pusha
pushf
push
lea
jmp
push
pushf
cld
call
pushl
popl
pushf
movb
lea
jmp
xorb
jmp
mov
jmp
pushf
pushf
mov
movb
push
movw
pushf
popl
pusha
pushl
popl
movb
lea
jmp
pushf
movw
pushf
popl
pushl
pushl
popl
mov
push
pusha
pushf
lea
jmp
repz
popl
stc
pusha
mov
test
call
pushl
popl
pushf
pushl
pushf
lea
jmp
or
mov
ror
stc
mov
jmp
pushf
mov
call
bt
clc
call
cmc
stc
clc
sub
cmc
cmc
clc
cmc
shr
push
mov
mov
pushf
popl
pusha
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
not
rcl
mov
jmp
bt
shl
mov
mov
mov
jmp
test
sub
cmc
shl
jmp
pushf
pusha
movb
mov
push
push
repz
popl
pushf
test
call
test
add
pusha
mov
pushl
pushl
movb
mov
lea
jmp
bt
mov
rol
stc
add
jmp
movb
pushf
popl
pushf
jmp
mov
mov
clc
sub
call
call
call
sub
stc
and
pushf
jmp
shl
seta
clc
ror
push
adc
rcl
bts
clc
push
bts
pushl
lea
xadd
clc
push
call
pusha
pusha
call
test
sub
pushf
call
shld
and
mov
pop
movzbl
xchg
movw
bsr
jmp
push
pushf
push
call
pushf
mov
rol
bsf
mov
mov
add
sar
pushl
popl
clc
push
sub
movl
xadd
mov
lea
stc
shl
rcl
xor
call
pushf
pushf
mov
jmp
sar
pusha
mov
call
xorb
pop
mov
pusha
pushf
movl
lea
jmp
mov
cmc
push
pushf
mov
bt
test
test
clc
xchg
bsf
mov
cmc
btr
xchg
clc
xchg
mov
stc
lea
mov
bsf
shld
pushl
popl
xadd
pushf
rol
movl
sar
mov
lea
bswap
not
xor
pushf
mov
bswap
cmp
stc
shld
add
add
lea
bt
jmp
lea
push
push
lea
jmp
jmp
jmp
mov
push
pushf
pusha
pushf
lea
jmp
pushf
add
pusha
lea
jmp
call
pushf
call
add
jg
clc
cmc
add
jmp
push
pusha
stc
sub
push
add
pushf
pushf
push
mov
mov
pushl
ret
test
add
jmp
pushf
sub
pushf
pushf
push
and
jmp
