push
call
ret
ret
push
add
shl
mov
scas
adc
test
das
inc
dec
hlt
sub
sarl
rcll
scas
fcmovu
fstl
sub
mov
and
outsl
in
test
into
cmp
or
imul
lock
cmp
movsl
dec
dec
mov
sub
or
sbb
xor
mov
loopne
xchg
psllq
dec
pop
push
pop
cltd
inc
pop
jmp
lds
xlat
cmp
lahf
push
lea
loope
mov
cmp
scas
jb
lahf
cli
iret
pop
push
pusha
and
and
inc
push
movsl
popa
div
jne
dec
insl
mov
imulb
add
shlb
jmp
xchg
pop
repnz
push
mov
hlt
call
pushf
ds
movsl
jl
in
sbb
jne
out
mov
test
lret
sbb
into
dec
out
repz
push
xchg
imul
adc
leave
testb
sub
cmpsl
pushf
dec
jae
jb
xor
sub
mov
enter
push
pop
push
cmp
xchg
daa
cli
lds
push
mov
int3
sti
cmp
neg
loop
inc
push
jbe
mov
int
ljmp
test
add
ljmp
mov
xchg
fstps
or
aam
sti
adc
rolb
xor
and
pop
cmp
jecxz
out
ds
pop
mov
outsl
mov
dec
sub
jl
mov
xchg
mov
stos
negl
inc
hlt
hlt
jno
cltd
mov
jo
cmp
ja
mov
push
aaa
hlt
fs
cli
into
lock
or
fsubr
cwtl
addps
xor
lock
bound
rcl
adc
or
cmp
mov
cmpsl
stc
mov
insb
mov
push
pop
inc
adc
outsl
jmp
cmpsl
cmp
int
xchg
or
sub
jl
push
sarb
andps
push
sbb
pop
push
and
jmp
or
add
ret
fnstenv
jle,pt
cmp
repnz
jecxz
jp
sub
cmp
pop
lds
jbe
in
inc
addr16
mov
sbb
lds
clc
loop
or
xchg
sub
mov
lods
pop
jg
lods
test
divl
or
dec
test
mov
out
push
aad
lods
mov
cmp
xor
jecxz
jae
sub
pop
js
inc
mov
jo
dec
lcall
pop
hlt
fldl
add
add
pop
mov
ja
test
add
pop
enter
cmpsl
lods
or
add
add
insb
lahf
cwtl
adc
cmp
xor
imul
aam
out
or
push
movsb
or
out
sahf
xchg
mov
adc
pop
inc
jnp
push
aam
stos
loopne
insb
jmp
mov
add
into
or
cmp
bound
ja
mov
cmp
fcmovu
movb
addr16
out
insl
adc
scas
nopl
popa
loop
sub
addr16
es
lock
pushf
cmc
sbb
pop
js
jmp
jne
jb
outsl
ja
fwait
in
fcomps
ficoml
insl
stos
xor
loope
es
and
es
and
push
inc
inc
dec
lcall
fs
pause
jns
xchg
xor
push
push
ret
jle
aam
insl
cmp
hlt
dec
es
lea
ja
addr16
shll
dec
int
push
mov
mov
sub
divb
idivb
xchg
lds
push
mov
hlt
mov
aaa
or
lods
out
fiaddl
or
aad
dec
and
mov
loope
mov
mov
adc
xchg
mov
or
xchg
mov
dec
or
inc
pop
mov
lcall
jne
testl
mov
mov
loope
pop
sbb
cmpsl
outsl
pop
scas
mov
mov
pushl
push
push
lea
out
mov
mov
les
imull
sub
mov
xor
rorl
stc
decb
or
mov
popa
inc
lcall
enter
sbb
in
push
jecxz
clc
xchg
mov
cmpsl
sub
or
inc
movsb
dec
aam
cmpb
lret
lahf
dec
cmc
fimuls
push
adc
inc
mov
or
hlt
pop
cwtl
xor
popa
subb
jbe
rclb
push
and
aam
cld
jge
call
push
nop
in
push
stos
add
stc
out
sbb
mov
push
cmp
sbb
jns
add
imul
fidivl
mov
mov
cs
fcomps
mov
jmp
pop
cmp
inc
and
jb
jle
xchg
in
cmp
aaa
adc
fstp
cli
sti
aaa
shrl
mov
jl
mov
sti
fwait
pop
inc
leave
loope
jecxz
or
loope
adc
bnd
arpl
mov
xor
mov
mov
test
imul
dec
xor
sbb
mov
xor
xor
jg
xchg
sub
xor
cwtl
mov
lret
mov
imul
xchg
rcl
fisubl
pop
clc
dec
fnstsw
sub
addr16
mov
mov
rcrb
fsubr
dec
jae
mov
stos
bound
pop
xor
xchg
adc
int
arpl
loopne
and
fldcw
jne
imul
cltd
xchg
fisttpll
mov
cwtl
jp
negl
xor
arpl
mov
and
lods
in
adc
ficompl
and
add
xchg
xchg
push
in
or
cmp
dec
adc
xchg
imul
jmp
ficoml
jnp
rol
sub
xor
in
iret
sub
push
cltd
je
inc
idivl
add
push
jns
xor
repnz
mov
sbb
xor
or
insb
loop
xchg
dec
and
popf
xor
sub
xor
lret
push
cld
sbb
add
cmpsb
add
jl
ds
insb
cmp
jne
mov
cmp
outsb
frstor
lret
mov
xchg
mov
test
mov
stos
jae
je
sbb
sti
fisttpl
test
push
ret
mov
sbb
cmp
das
cmc
rorb
sub
xchg
and
negb
fld
dec
cld
lret
test
lods
sbb
mov
fisubrl
pop
pop
cld
push
cmp
mov
sti
mov
jnp
in
inc
loopne
inc
imul
xor
ja
mov
dec
mov
repnz
push
inc
pop
push
add
push
jg
mov
push
inc
lods
mov
aam
hlt
jb
je
roll
and
xchg
dec
sahf
cmpsl
sahf
pop
push
jnp
cmp
xchg
leave
bound
dec
popa
pop
repnz
inc
ret
add
sbbl
in
arpl
gs
adc
pop
push
repz
pop
cli
sar
adc
pop
lahf
imull
sub
loop
jmp
inc
or
inc
mov
or
push
imul
imul
imul
xor
notl
adcb
and
mov
stos
or
stos
fwait
jmp
ds
xchg
push
mov
sti
decl
cs
bound
repnz
and
test
call
pop
pop
fwait
push
outsb
outsl
ja
adc
addl
cli
mov
jno
or
pop
fs
bound
and
push
xchg
xchg
test
int
cmp
sub
cmp
push
lret
pop
jns
cmp
addr16
rorb
ret
push
adc
int3
lods
inc
add
test
test
out
repnz
notl
xchg
imul
je
sarb
nop
jae
and
std
xchg
testb
rcll
jmp
roll
iret
inc
jg
sbb
inc
gs
jmp
or
subb
iretw
aad
ljmp
out
shlb
ret
add
dec
sahf
lea
insl
shrl
or
fwait
scas
sbb
sbb
cmp
imul
stos
push
lds
jo
mov
mov
shlb
sub
lock
loopne
xor
mov
ja
fiadds
aaa
adc
pop
or
pop
es
push
push
fadds
lock
scas
sbb
inc
pop
outsl
lahf
jle
dec
das
mov
jle
stos
add
fstpl
in
out
push
pusha
mov
push
jnp
outsb
test
out
adc
test
sti
aas
push
loopne
add
add
cltd
jno
inc
jb,pt
std
imul
lea
test
es
sub
xor
xchg
repz
ljmp
out
ja
xchg
or
ja
test
repnz
jp
test
add
cmp
insb
sbb
xor
les
xchg
sarl
imul
and
push
leave
xor
mov
dec
bound
pop
scas
cmp
sahf
aas
dec
jbe
inc
mov
pop
out
lahf
push
js
sbb
ss
push
jo
mov
add
and
aas
adc
sti
rolb
icebp
leave
add
xchg
push
add
aas
add
push
fwait
sub
shlb
xchg
push
push
testl
rcll
das
bnd
cmpsl
icebp
push
adc
pop
xor
sub
lret
into
push
push
scas
inc
add
mov
call
iret
pmaxsw
ja
stos
xchg
pop
adc
mov
sbb
nop
mov
int3
lods
lahf
scas
mov
pop
in
sub
mov
inc
jge
arpl
and
adc
nop
mov
push
lods
loope
pusha
subl
jae
lahf
push
jae
out
mov
decb
hlt
in
cmp
dec
leave
mov
mov
push
ds
add
push
loope
popa
movsl
pop
rolb
add
cltd
out
movsl
xchg
mov
sub
mov
mov
pop
mov
xchg
aam
xor
mov
cmp
jmp
pushf
xor
insl
mov
push
ljmp
dec
daa
jmp
dec
push
scas
mov
or
add
lcall
mov
les
ret
and
fwait
pop
or
movsl
xchg
adc
inc
cmpsl
ss
push
xchg
jnp
cmc
sub
mov
pop
repnz
repnz
ffree
dec
add
add
mov
mov
adc
shl
into
shrb
sub
pop
jp
mov
mov
mov
sahf
pop
push
mov
add
pop
cmp
lahf
rcrb
xchg
loop
xchg
mov
and
jge
clc
cwtl
aas
enter
rol
sbb
inc
xchg
jo
xchg
or
daa
or
popf
xor
cwtl
xor
mov
stos
add
andb
and
test
jecxz
xchg
mov
pushf
xlat
mov
fists
and
cmp
es
fmuls
lret
lahf
lahf
lods
mov
xlat
hlt
sub
iret
jle
xor
cltd
scas
arpl
sbb
push
mov
xor
and
cmp
arpl
into
aam
adc
fsub
xchg
das
out
sbb
push
outsb
jno
xchg
xchg
and
std
fs
or
xor
shlb
mov
or
mov
sub
insl
imul
inc
push
push
cmp
push
mov
inc
mov
popf
daa
test
scas
lret
add
fiadds
or
mov
mov
push
and
cmp
pusha
xor
mov
jmp
push
jl
mov
inc
adc
inc
nop
push
mov
imull
gs
mov
mov
lods
das
cli
movsb
xchg
lret
push
adc
and
out
mov
dec
sbb
ret
sub
ljmp
inc
bound
cli
jns
bound
push
pop
shlb
mov
adc
in
pushf
ret
pop
cwtl
mov
into
xlat
dec
addl
jl
nop
shll
jg
push
cs
ret
mov
pop
cli
sbb
xchg
shll
lret
xchg
pop
push
lsl
lods
cwtl
jmp
test
mov
out
pop
or
cs
test
nop
xor
pop
push
jmp
or
imul
mov
movsl
stc
jae
adc
loopne
push
dec
mov
mov
dec
cli
into
and
adc
hlt
mov
call
or
sbb
ret
rorl
mov
or
mov
sbb
les
pop
add
dec
pop
push
and
push
xor
xor
xchg
jne
in
add
daa
shlb
cmpsl
mov
inc
in
cmpsb
movsl
cmpsl
js
sbb
fwait
in
xchg
fcoms
int
add
push
cs
repnz
daa
push
scas
or
dec
in
in
gs
aam
pop
dec
mov
fsubs
mov
data16
mov
lret
adc
or
push
mov
int3
cmp
jmp
mov
lods
pop
jno
xchg
push
mov
retw
sub
out
push
or
push
or
mov
xchg
sub
xorb
addl
pop
popa
cmc
lock
dec
ret
sub
and
add
icebp
popa
stc
dec
cmpsb
std
loop
daa
push
mov
push
mov
mov
fdivs
std
sbb
cli
jae
pop
adc
push
cld
dec
pop
and
mov
lahf
out
xlat
movsl
pop
cli
jp
test
or
pusha
xorl
les
nop
test
jno
mov
push
hlt
mov
dec
insb
out
add
jecxz
jg
addr16
das
orl
cmpsb
loope
cli
repz
inc
pop
dec
jno
mov
or
mov
mul
cli
in
jecxz
lret
movsb
addl
test
faddl
sahf
lods
ja
mov
ret
inc
xlat
jb
jge
mov
jle
js
or
imul
sub
push
idivl
mov
adc
inc
push
shl
mov
int3
add
aam
inc
incl
sahf
pop
inc
xchg
xor
imul
lahf
mov
repnz
jmp
add
fbld
out
push
outsb
lcall
insb
aad
loopne
dec
movsl
std
aaa
hlt
xor
inc
or
cltd
jb
lods
out
imul
repnz
cmp
mov
add
jne
push
push
sbb
or
dec
or
subb
jo
mov
push
emms
mov
in
aas
sub
jbe
pop
pop
mov
int3
xor
scas
dec
or
cmp
adc
or
out
dec
mov
aad
sar
cmp
push
lds
gs
pop
cmc
push
jo
fildll
cwtl
and
mov
nop
in
jbe
leave
shlb
lods
std
mov
mov
orl
ret
int
cmpb
inc
cltd
pop
mov
stc
cmp
leave
sbb
das
pusha
scas
mov
insb
loop
movb
arpl
push
xchg
mov
xchg
inc
aas
cmp
cmp
fwait
orl
cmp
mulb
pop
xchg
mov
pusha
mov
mov
xchg
dec
or
divb
sub
mov
into
ljmp
loop
jle
jg
hlt
in
test
sti
cmp
and
sahf
ja
adc
or
cmpb
les
pop
ds
mov
in
std
les
inc
mov
adc
add
jnp
cmp
aad
fcoms
push
test
into
mov
je
insl
loop
xchg
push
jo
outsl
cmp
and
sub
cmp
mov
adcl
js
jns
inc
sar
push
sbb
mov
cld
dec
jnp
adc
out
aas
and
rcrl
sahf
fdivl
daa
addps
mov
sbb
test
inc
or
dec
movsb
sub
xor
imul
xchg
add
jns
lods
push
mov
inc
xchg
int
dec
jecxz
std
orb
jl
mov
xor
inc
xor
push
mov
test
jle
pop
daa
rcl
out
nop
fs
push
xor
cmp
mov
pusha
or
nop
cmpsb
imul
lahf
cmp
lahf
int
lds
adc
negb
clc
stos
xor
scas
push
fwait
xchg
push
aaa
test
pusha
stos
lods
jno
push
out
ret
adc
shll
sub
inc
push
adc
adcl
inc
pop
push
rorl
test
mov
mov
shll
sub
sti
mov
sbb
sbb
xlat
jmp
jo
and
cld
inc
push
pop
popa
jbe
cmpsl
jns
jno
aad
push
cld
cmc
stc
xchg
push
sub
rolb
and
out
imul
inc
push
xchg
ficoml
mov
cmp
inc
xor
xchg
cmpsb
fcoml
shrl
mov
jge
mov
mov
ret
add
mov
sbb
jno
in
jmp
and
pop
mov
in
xchg
xchg
ss
lret
and
dec
das
cmp
scas
lcall
int
pop
dec
jbe
pop
and
pop
repz
shrl
adc
es
ret
mov
sub
xorl
xor
push
fldenv
jge
and
iret
mov
jmp
lods
cs
push
jecxz
js
dec
cld
lret
dec
nop
mov
cli
fwait
movsl
xchg
jle
add
nop
test
popf
sarb
aaa
inc
jnp
push
mov
push
mov
add
fcoms
cwtl
testl
fs
xchg
mulb
push
jecxz
icebp
stc
cmp
movsl
shlb
imul
sahf
je
jno
outsb
sub
jnp
aas
push
dec
or
jns
std
test
movlps
pop
sbb
jbe
pushf
fs
fdiv
mov
jmp
test
push
push
add
pop
rol
iret
filds
popf
cld
repnz
stos
out
or
clc
dec
xor
dec
inc
xchg
gs
pop
test
ja
xor
in
imul
je
xchg
cs
mov
inc
inc
xchg
in
pop
mov
jbe
push
clc
fstp
pop
rep
sub
xchg
pop
jmp
push
popf
xor
lds
cmp
pusha
cmp
sahf
push
push
test
sbb
aas
or
imull
xchg
push
fbstp
test
sub
push
xchg
mov
fucomip
orb
repz
call
test
repnz
mov
es
and
ret
push
pop
jmp
ja
push
xor
into
stos
movsl
jecxz
sub
or
push
lock
mov
and
xor
xchg
jne
xor
xchg
sub
or
sub
mov
ds
pop
pop
fbstp
aam
mov
mov
fldt
mov
adc
and
pusha
mov
mov
or
or
pop
test
int3
push
sbb
jno
cmpsl
scas
or
aas
push
mov
in
sbb
cmp
mov
or
enter
xchg
jecxz
adc
ss
pushf
and
out
in
das
lahf
mov
or
pop
or
pop
push
int
mov
push
pop
fsubrs
ret
movsl
cmp
ret
sti
outsl
imul
inc
pushf
popf
push
test
sbb
xor
fcomp
gs
and
cmp
shll
jnp
dec
jle
pop
lds
or
cmp
mov
xchg
xor
push
mov
add
jg
into
mov
cmp
clc
or
jae
or
les
fadd
test
cmp
xlat
dec
add
int3
into
aam
sub
sbb
mov
mov
xor
inc
jno
repnz
movsl
bound
push
pusha
adc
inc
cmpb
dec
xchg
in
mov
mov
adc
popa
btr
cmp
inc
fdivrs
xchg
imul
add
sbb
push
mov
pop
pop
jb
xor
mov
incl
jno
idivl
cmpsb
mov
dec
xorl
adc
movsl
xor
mov
loope
lods
sahf
dec
inc
sbb
jae
pop
inc
arpl
and
aam
movsl
push
pop
inc
mov
push
mov
cmp
jl
mov
fwait
loope
pop
pop
addr16
or
mov
test
jmp
roll
mov
cli
imul
ss
and
xchg
imul
inc
shlb
or
iret
add
mov
cmp
xor
push
fwait
mov
lret
mov
das
jg
push
add
fldenv
in
pop
xchg
mov
aas
mov
jl
dec
xor
ja
rorb
leave
das
adc
cltd
addr16
and
ds
mov
test
lret
ja
push
jnp
xor
test
loopne
mov
jae
ss
mov
es
cmpsb
mov
xor
test
cmpsl
and
jno
push
xor
adc
xlat
arpl
jp
adc
scas
mov
fs
es
out
leave
push
mov
cwtl
push
inc
adc
cli
mov
mov
imul
iret
and
push
adc
ds
sbb
les
lret
sub
sub
mov
outsl
clc
push
stc
cwtl
lods
mov
sub
pop
insl
fldl
inc
in
popa
add
jo
rorb
stos
pop
push
pop
dec
jno
lock
ret
dec
int3
in
cmp
cmc
push
add
rcrl
and
mov
push
out
xchg
mov
cmpsb
icebp
add
les
nop
xor
std
mov
negb
cmp
test
push
sub
pop
cmc
adc
and
int3
mov
insb
and
inc
push
cmp
push
les
xchg
mov
pusha
adc
add
xchg
mov
shl
mov
ror
xchg
mov
divb
sub
xchg
jmp
add
push
sbb
sbb
movsl
mov
sub
int3
fnstenv
lcall
inc
lahf
mov
adc
adc
test
mov
pop
es
movb
repnz
adc
mov
cmp
mov
xor
sbb
pop
pop
psubsb
add
fs
mov
mov
jp
mov
mov
dec
dec
je
pop
mov
push
pop
je
sub
mov
mov
sbb
loop
roll
fwait
mov
jnp
insl
mov
cmc
push
xor
sub
jbe
sar
outsb
dec
fdivs
push
push
dec
xchg
xorl
sub
jno
jecxz
inc
adc
mov
jo
aas
jo
mov
jo
adc
rcll
stc
inc
xchg
adc
or
add
in
repz
ret
pop
in
xor
jne
xor
push
inc
mov
dec
dec
lock
adc
fistpll
notl
push
cwtl
lock
jae
jl
mov
sub
push
dec
out
xlat
ds
mov
repz
out
aas
mov
sti
add
mov
movsl
dec
jp
arpl
test
call
out
add
mov
or
jp
xor
mov
popf
loope
add
into
pushf
jo
scas
cmp
add
in
sub
and
xchg
mov
push
ret
cli
aas
ja
pop
push
sbb
add
dec
lds
add
adc
cmpsb
and
stc
push
cld
mov
jge
push
stos
pop
xor
jnp
cs
sbb
test
jnp
mov
movl
adc
test
mov
icebp
aaa
mov
cmp
cltd
imull
sub
je
cmovge
pusha
imul
cmp
jne
jns
icebp
xor
shll
int
test
or
push
push
in
in
repnz
xchg
es
cmp
call
mov
aaa
push
orl
inc
sbb
std
aam
fldcw
push
mov
push
cmp
inc
or
jne
cmpb
out
push
and
repnz
dec
outsb
or
jecxz
push
add
fiadds
mov
popf
nop
xlat
xor
push
jge
jle
in
ss
nop
in
add
cmpsb
mov
jns
dec
xor
cmp
cld
pop
dec
jae
xchg
in
fwait
adc
out
cmpsl
call
inc
hlt
mov
mov
or
sbb
mov
push
add
push
ds
cmp
aam
or
dec
setnp
mov
sarl
add
dec
and
out
dec
mov
imul
jp
dec
jno
or
ds
add
and
dec
lds
bound
sbb
sbb
xchg
mov
xor
insb
jecxz
mov
push
rol
pop
loope
mov
stos
sbb
dec
pop
jl
nop
ret
jp
int3
xchg
xchg
xchg
xor
push
adc
mov
sub
mov
and
mov
cmp
fwait
sub
ja
push
fstp
outsl
mov
nop
stc
cmpsl
in
xchg
ss
lock
fsubr
cmp
push
in
gs
mov
addl
mov
jmp
push
adc
cmp
inc
in
test
mov
or
add
sub
xlat
pop
push
jnp
or
notl
leave
push
xchg
push
mov
add
popf
xor
push
repz
mov
in
xchg
xchg
mov
out
popa
push
mov
pop
mov
or
js
addr16
daa
xlat
mov
mov
dec
inc
mov
xchg
fiadds
mov
pop
dec
sbb
adc
in
stos
out
push
adc
shrb
adc
in
call
out
loope
adc
fcoms
in
inc
in
ret
divb
mov
lcall
dec
dec
insl
jg
ret
fs
lret
ffree
out
mov
mov
cmp
jle
xchg
cmp
mov
clc
push
pop
dec
out
divb
rcll
outsl
mov
js
sub
cmpsb
inc
in
lock
jge
cmpsl
rorb
inc
or
scas
ficomps
inc
sub
ss
jbe
cwtl
cmc
pop
or
ja,pn
sbb
jg
jmp
mov
jb
andb
shr
xor
outsb
push
and
cmp
or
fs
filds
sbb
mov
push
mov
fdivrl
stc
lds
into
xchg
fdivrl
loop
aas
dec
dec
sub
inc
pushl
pop
into
int3
loop
test
movsl
mov
mov
xchg
int
jb
fidivrs
lahf
jns
mov
fcoms
push
push
or
add
outsl
cmp
into
or
data16
gs
imul
lock
jg
scas
pop
jns
pushf
push
dec
mov
pop
out
cwtl
andl
ljmp
mov
inc
or
cli
cwtl
mov
sbb
mov
nop
xor
sahf
out
jb
fld
cmp
or
and
repz
test
leave
int3
mov
xchg
ss
ja
outsl
ds
and
lcall
pop
push
addr16
out
mov
jne
shl
inc
repz
test
push
cmc
mov
cli
push
lock
adc
push
imul
popf
adc
lret
test
fsubl
int
pushf
mov
scas
fcmovnbe
lcall
push
jnp
popf
subl
in
xor
mov
xchg
lahf
shlb
add
sbb
cld
cmp
lret
jmp
scas
ljmp
push
aam
or
xor
lock
fstp
sub
rorb
adc
jne
sub
mov
fcmovnu
dec
mov
inc
sti
adcb
push
cs
sti
outsb
pop
int
stos
inc
or
cmpsl
lds
fdivrs
outsl
or
mov
out
sarl
pop
lret
lahf
add
mov
mov
xor
add
sub
mov
fwait
dec
cmp
sahf
test
es
pop
push
mov
es
mov
xchg
popl
fld
hlt
jae
sub
popf
lods
push
cltd
mov
xchg
sahf
sbb
in
insb
jns
icebp
push
mov
jmp
loopne
pop
push
sub
pusha
test
and
lock
test
sbb
fwait
inc
fs
bound
out
or
pop
js
insb
push
inc
inc
lock
adc
mov
xor
movsb
jle
in
lahf
rol
jle
adc
or
rcl
fcoms
inc
clc
adc
sbb
js
xchg
sbb
and
in
xor
and
cmpsl
sub
mov
cvtdq2ps
out
in
dec
mov
int
lahf
adcl
shll
in
test
sub
xchg
and
add
mov
mov
mov
xlat
lods
jmp
ret
push
jb
fsubl
pop
mov
push
mov
out
jae
je
fiadds
stos
mov
ficomps
cli
cwtl
xlat
inc
shlb
mov
lea
pop
out
ficoms
push
mov
adc
lock
aas
mov
in
xor
fpatan
and
fisubrs
add
push
adc
nop
inc
jnp
push
inc
lock
inc
dec
sahf
loope
jecxz
mov
stos
lret
adc
push
sbb
sarl
dec
and
jae
dec
push
es
dec
les
lret
pusha
add
into
and
pop
push
mov
inc
je
int3
in
jg
jbe
into
jne
out
and
xchg
cmc
jne
pusha
shlb
sbb
pop
enter
push
mov
and
xchg
inc
push
into
mov
mov
arpl
jae
inc
lock
cltd
adc
adc
sub
dec
lock
ds
push
mov
sub
adc
pop
movsb
ficompl
ror
inc
and
rclb
sarb
push
cli
aaa
mov
cmc
outsb
lock
xchg
sbb
and
cwtl
add
mov
pop
jg
mov
mov
xchg
mov
dec
testl
imul
rcrb
inc
push
mov
das
into
repz
cmp
jb
mov
mov
hlt
mov
repz
test
subb
sub
sub
outsb
lods
nop
sub
test
jne
int
sbb
pop
push
fcomps
test
and
jnp
mov
pushf
xlat
data16
jecxz
fstl
stos
stos
xchg
cmpsl
das
mov
xor
xchg
jecxz
lea
mov
fcmovne
pop
and
adc
xchg
inc
adc
sar
jae
cmpsl
hlt
jbe
fnstcw
xlat
pop
push
mov
mov
xor
mov
lock
repnz
mov
fcmove
inc
sbb
push
mov
jg
outsb
adc
cli
cmpsb
arpl
ret
hlt
cli
ja
mov
in
jle
ret
xor
jbe
xor
loop
xchg
sub
dec
daa
leave
loop
push
inc
pop
push
lret
hlt
and
pop
push
test
stos
xchg
push
xor
add
push
push
mov
mov
mov
in
fcmovbe
xchg
pop
les
sub
aas
inc
stos
mov
dec
mov
inc
mov
or
les
push
dec
mov
xorl
sub
mov
mov
ss
xchg
fnstsw
popf
xor
jge
fdivr
decb
pop
xor
mov
dec
mov
cmp
sub
gs
jl
int
in
aad
jge
jmp
movsb
add
je
sbb
arpl
adc
mov
std
adc
push
adc
xor
into
in
repz
xor
hlt
bound
mov
mov
jmp
sti
mov
rorl
nop
mov
push
dec
insl
iret
inc
mov
mov
dec
mov
into
dec
dec
and
cmc
lea
enter
dec
mov
mov
lock
xchg
mov
imul
stc
call
std
ret
lods
xorl
rorl
cmpl
mov
orb
mov
data16
jl
nop
cmp
inc
jmp
fisubrl
sbb
jne
push
test
sti
sbb
mov
jae
and
xor
dec
rorl
add
mov
rcll
cmc
mov
mov
into
sbb
add
aad
sub
sub
xor
push
and
hlt
aam
jo
ret
or
or
fdivrl
sub
std
lret
out
int3
inc
xchg
pop
pop
lea
loop
cmp
fstps
in
mov
xor
xlat
push
adc
fcmovu
testb
iret
inc
popa
jge
xor
sbb
rcl
xchg
out
push
inc
mov
imull
mov
cs
pop
sbb
sbb
mov
cmp
push
loop
addr16
aam
cld
pop
pshufw
or
inc
test
cld
test
clc
fs
imul
jmp
rclb
inc
in
aaa
cmc
xchg
popf
les
xchg
mov
push
mov
cmp
or
lock
ds
mov
data16
adc
enter
insb
add
fidivrl
inc
adc
add
movsb
div
dec
pop
xchg
test
xchg
int
jnp
push
test
jmp
push
xchg
xchg
cwtl
movsb
pop
rclb
gs
sahf
ret
insb
push
fmulp
clc
loop
testl
mov
pop
lea
jmp
jo
push
lret
sub
fmuls
out
push
aas
jle
fsubr
fld
in
int
bound
xor
fsubrl
sbb
jae
js
enter
adc
pop
imul
adc
in
mov
cmp
pop
mov
dec
repz
push
stos
lods
testb
add
test
shlb
int
int
cmpsl
outsl
xor
repnz
mov
cmc
or
daa
mov
lods
decb
pusha
jg
jns
pop
popa
xchg
sub
iret
out
lcall
xchg
cmp
xor
repz
sub
fstpl
shrb
inc
jmp
mov
sbb
shl
sbb
dec
cmp
aaa
roll
jb
out
and
lds
mov
pushf
gs
xchg
xchg
lret
sub
std
jne
mov
cwtl
ja
pop
pusha
jle
sarl
adc
mov
mov
xor
in
ret
dec
push
add
fadd
negl
jno
iret
je
dec
push
jns
and
enter
xchg
jg
and
push
sub
fists
fldenv
icebp
repz
dec
insl
ja
je
mov
or
jo
imul
nop
or
roll
push
fwait
pop
inc
add
cwtl
aam
xchg
cmpb
daa
jno
pop
push
jp
fcomps
sub
pop
pop
dec
fbld
out
out
ficompl
xchg
shlb
jmp
dec
fimull
scas
add
cltd
mov
cmp
jge
lret
dec
lods
test
and
in
sub
popf
push
sarl
out
mov
mov
and
push
inc
or
cld
adc
icebp
mov
ja
jnp
arpl
shrb
clc
inc
jae
or
cwtl
cltd
fstl
or
pop
insb
loopne
mov
jb,pn
or
mov
xchg
ljmp
cld
ret
push
in
push
lea
repz
aad
pop
popa
insb
das
shl
push
mov
in
push
xchg
pushf
xlat
cmpsb
rcll
popf
enter
sub
test
stos
out
je
test
dec
inc
sbb
lret
push
xor
add
sub
cmp
fsubrp
imul
into
lret
imul
add
insb
add
or
stos
cmp
ja
mov
sub
mov
xchg
and
mov
mov
adc
cmc
sar
sbb
fnstenv
cmp
push
rclb
and
fistps
adc
pop
xchg
divl
push
in
or
out
add
cmp
xor
popa
sti
jecxz
stos
int3
das
push
add
inc
pusha
push
sbb
xchg
stc
lret
adc
notb
sub
lahf
cmp
popa
cmp
push
inc
jns
or
sub
add
xor
adc
aad
stos
loop
jb
out
fadds
loope
bound
pushf
xchg
sbbl
into
lods
pop
aam
fcomps
adc
mov
enter
jg
dec
jle
cs
in
xor
mov
test
dec
mov
or
and
jp
pop
add
jge
xchg
jge
fistps
jmp
push
cmp
test
iret
out
call
jmp
xchg
add
xor
ret
dec
or
fldl
loopne
gs
jbe
push
adc
push
lea
cltd
mov
mov
imul
imul
js
clc
test
clc
mov
insb
cmc
inc
xorl
push
jbe
sahf
push
and
lea
xchg
scas
and
and
mov
jmp
jo
in
sub
nop
xchg
sbb
or
idivb
jb
cmp
lcall
jecxz
lcall
cld
adc
and
jb
mov
inc
fs
stos
mov
faddl
imul
pop
xchg
dec
lea
jmp
out
mov
call
outsb
outsb
pop
pop
and
mov
cmp
add
dec
test
jno
cli
insb
lock
shll
cli
cmp
pop
push
dec
sbb
cmp
jo
jp
stos
pop
mov
add
sbb
lock
or
sbb
arpl
mov
mov
insl
xchg
aas
pop
xor
in
std
jb
fwait
dec
cmp
test
out
inc
xchg
enter
mov
cmp
in
sub
add
add
ds
roll
cwtl
push
clc
cs
or
add
js
lret
cmp
mov
lahf
loopne
or
scas
inc
getsec
jb
xor
bnd
pushf
dec
mov
ds
test
xchg
ja
and
adc
std
sbb
lods
xchg
enter
sbb
pop
lret
test
push
je
mov
mov
sti
mov
out
lods
pushf
and
push
cmp
insl
mov
cmp
xor
fists
and
jne
mov
xor
push
cmp
push
outsl
mov
enter
div
jmp
bound
insl
pop
push
xchg
incb
xchg
adc
fisubs
arpl
lods
xlat
in
fistps
adc
cli
jp
mov
ds
inc
or
mov
jnp
add
imul
js
test
inc
gs
test
into
fwait
dec
add
out
mov
pop
imul
or
push
push
push
pusha
lahf
or
fs
pop
add
pop
js
sti
push
cmp
jecxz
lds
ja
repz
sti
mov
mov
mulb
lods
cmc
xchg
das
mov
in
ret
std
ljmp
and
rcl
cli
xlat
in
push
je
adc
fmulp
sbb
movsl
pusha
loopne
and
stos
mov
cmp
fwait
negl
into
fiaddl
push
mov
icebp
xchg
mov
int3
fsubl
das
pushf
inc
test
adc
xlat
cwtl
add
pop
xlat
cmpsb
lods
or
dec
mov
pop
movsb
push
aam
mov
add
xchg
aaa
add
pop
imul
in
repz
stos
sub
cmpsl
mov
lea
mov
fistps
xor
sbb
test
push
ficoml
rcll
sub
out
cmp
mov
dec
sarl
xchg
mov
sbb
fidivrl
aad
mov
fnstcw
jmp
ret
test
lret
in
lods
rcll
imul
fmulp
mov
add
jno
insl
jns
jl
mov
aad
jge
popf
push
inc
daa
mov
add
push
lock
rorl
addb
popl
int3
mov
sbb
test
ss
mov
addr16
stos
mov
xchg
inc
imul
andb
outsb
adc
dec
das
test
nop
pop
repz
mov
ficoms
inc
pop
mov
adc
xlat
test
fwait
lds
imul
mov
sub
fs
dec
ds
mov
sbb
inc
mov
jbe
iret
mov
imul
inc
cmp
add
movsl
add
cmpsl
jo
and
add
lods
dec
iret
icebp
cld
out
pushf
mov
es
fs
std
xor
add
ret
cmp
pop
cmpsl
enter
cmp
testb
lods
push
sub
mov
sarl
jns
xchg
aam
hlt
inc
mov
or
mov
cltd
sub
xchg
outsb
pusha
cmp
pop
imul
or
xlat
cmp
xchg
add
popf
push
sub
divb
push
mov
xchg
xchg
ret
das
inc
jae
xor
scas
cmc
ss
lea
sbb
jle
in
push
xchg
add
cwtl
leave
inc
jecxz
imul
xor
std
ja
push
mov
loope
jns
add
dec
push
mov
pop
cmpsb
hlt
inc
jg
pop
xlat
jne
lock
int
jns
jmp
pop
jae
lods
and
cmc
call
mov
dec
jne
rcll
sub
fwait
xchg
kaddw
xchg
outsb
sahf
out
and
fwait
out
idivl
out
add
and
push
insb
push
pop
and
cld
sub
jns
fisubrs
cmc
xchg
jecxz
in
jbe
xchg
pop
negl
jns
pop
roll
cmp
add
ja
mov
lahf
dec
jmp
shr
jle
add
fwait
cmp
sub
fisubrl
and
mov
test
mov
outsb
popf
sub
sbb
jl
jl
aaa
insb
aam
mov
out
xchg
pop
ja
popa
scas
imul
popa
ja
add
mov
sub
in
daa
sbb
shl
and
mov
mov
fs
stos
mov
push
pop
pop
cmpl
loope
push
mov
stos
jb
cmp
into
xor
mov
sarl
sti
call
dec
pop
mov
gs
mov
pop
xchg
mov
mov
or
mov
andl
mov
mov
xor
out
xchg
pop
inc
sbb
ret
xchg
cli
fwait
mov
mov
movsl
xchg
inc
push
jmp
dec
arpl
data16
ret
add
out
mov
adc
mov
mov
sub
loope
fiaddl
adc
imul
into
sbb
mov
adc
enter
cmp
mov
mov
push
ljmp
rorb
lods
fsubr
pop
adc
lods
sbb
rcll
les
stos
fdivl
lods
push
out
and
sbb
lods
pop
mov
pop
clc
jecxz
xchg
and
adcl
mov
test
movsb
mov
out
sti
nop
jle
int3
insl
mov
cld
ljmp
jns
or
dec
mov
icebp
mov
fdivs
loopne
mov
popa
inc
cmp
rcrl
sbb
repnz
out
enter
out
clc
pop
into
push
add
repnz
and
cmp
mov
pop
ja
sbb
lret
fwait
mov
push
push
mov
pop
lods
add
xor
inc
add
stc
test
stos
stos
jbe
scas
fs
inc
xlat
mov
cld
cmpsb
mov
sub
into
aad
pop
adc
xor
sub
sbb
ss
cmp
xorb
test
scas
sbb
lds
shlb
or
sarb
mov
mov
jnp
lods
sbb
std
pop
add
pop
add
push
cmp
adc
and
mov
mov
mov
fdivrp
cmp
into
xchg
mov
fisubrl
das
mov
jbe
ss
mov
into
cmpsb
call
jle
push
dec
jns
jg
les
jle
fdivrs
mov
fsubrl
les
pop
add
aas
cs
sbb
and
int
in
and
pop
dec
sub
fldt
pop
jmp
dec
lea
psrlw
hlt
cmp
cmp
sbb
mov
mov
lock
xor
or
and
pop
inc
lret
inc
xchg
push
lret
addl
add
icebp
pop
xor
icebp
andb
xchg
lds
xchg
mov
cmpsb
divb
jo
pop
xor
push
push
dec
jnp
ljmp
push
dec
xor
or
push
xor
pop
pushf
pop
mov
add
mov
sub
jmp
out
std
dec
push
rcll
inc
lcall
jge
pop
push
lds
dec
out
loopne
movl
mov
xchg
pop
enter
jnp
stos
popa
xor
mov
lea
loop
cmp
outsl
fld1
daa
push
fdivrl
das
aaa
mov
cmc
jecxz
imul
fisubrs
cltd
jl
enter
clc
stos
lea
ret
pop
dec
hlt
ss
adc
ret
ljmp
mov
fisttpll
cmp
enter
or
cltd
ja
addr16
out
mov
enter
ret
push
xor
pop
pop
inc
dec
aaa
les
sbb
fcmovnbe
lock
jb
inc
mov
stc
lret
add
push
das
ret
jns
dec
adc
pop
psubsb
pop
test
mov
push
adc
fildll
mov
fdivp
in
add
cmpl
cmp
xchg
subb
inc
pop
lds
add
jg
jge
sbb
jno
push
cli
sub
scas
pop
inc
loopne
push
jbe
sbb
fildll
sub
xchg
fsubrp
pop
and
jns
icebp
push
add
scas
sbb
sub
out
sbb
and
xor
lret
cmp
rolb
ja
js
dec
xor
cmp
js
mov
pusha
add
mov
adcb
sbb
jg
cmpsl
sahf
stos
cli
sti
lea
lahf
mov
out
lds
ret
sahf
clc
mov
cs
inc
sub
add
xor
mov
in
shlb
imul
dec
rol
sbb
in
subl
jge
mov
andb
je
sub
lock
arpl
in
js
lock
cmp
rcl
pop
inc
aas
dec
loopne
mov
or
insl
xchg
dec
xchg
push
loope
and
xchg
test
xor
push
jl
jnp
inc
push
or
and
sahf
out
sbb
push
xchg
mov
xchg
adc
dec
jo
mov
mov
es
push
jmp
cmp
repnz
mov
sbb
add
fcoml
xor
mov
jbe
mov
pushf
loope
insb
or
xchg
rolb
xchg
jl
in
dec
inc
adc
clc
and
inc
iret
sbb
or
notb
cmp
xchg
push
or
pop
push
arpl
aas
std
jecxz
fdivr
popa
xlat
mov
cmp
mov
cmc
jmp
xchg
add
mov
xchg
enter
into
cmp
jl
addr16
xor
pop
and
fstl
sub
push
adc
push
jns
roll
pop
ret
and
movb
loope
xor
mov
subb
rorl
enter
sarl
sub
push
sahf
inc
nop
push
mov
sbbb
jae
pop
outsb
imul
jl
out
popf
adc
mov
call
lock
xor
xlat
jnp
mov
mov
sub
insl
mov
sbb
jnp
popf
pop
fldt
fbld
push
mov
aaa
std
inc
inc
or
adc
aaa
lahf
outsb
js
inc
mov
mov
js
jge
mov
cltd
out
ret
ret
xchg
movsl
int3
in
adc
test
or
lahf
sti
addr16
loope
daa
loopne
fldenv
or
inc
iret
movsb
rcll
sbb
or
push
adc
xor
inc
jns
aas
dec
mov
sbb
dec
fnstenv
cmpsb
sub
sbb
sub
mov
push
loope
push
imul
test
popa
add
fnstsw
push
cmp
sbb
pop
je
push
es
out
call
mov
cs
sahf
rolb
push
cmp
mov
enter
loop
jbe
adc
mov
incb
cmp
add
not
test
rcll
mulb
adc
dec
pop
shrb
pop
or
es
outsb
in
and
lods
div
cmp
add
or
out
adc
mov
push
add
dec
ja
and
xchg
add
xorl
rcrl
popa
inc
hlt
lds
inc
jbe
xchg
je
hlt
lahf
shrl
push
aam
seto
or
xchg
dec
add
push
and
and
ljmp
mov
push
pop
push
or
dec
inc
or
sbb
sbb
fisubrl
mov
jne
pushf
mov
lods
imul
push
mov
lods
imul
iret
rcll
push
push
xchg
shlb
loopne
dec
sbb
cmp
mov
sbb
testl
hlt
pop
mov
fistl
test
jne
mov
loope
mov
add
mov
ds
push
outsl
ss
clc
xor
andl
les
fldt
dec
lods
push
sub
movsb
bound
repz
jmp
test
pusha
sbb
sub
movsl
test
andl
bound
lock
jae
int3
push
insb
mov
leave
jg
xchg
jbe
lock
into
sbb
enter
and
cmovae
pop
loope
sbb
orb
adc
pop
add
or
xchg
test
aam
int
cltd
jp
add
movsl
mov
gs
sbb
out
int
cmp
lret
dec
mov
test
popa
xor
cmp
mov
jecxz
sbb
les
popa
into
ret
bnd
or
xchg
inc
push
cmp
enter
inc
cmc
insl
mov
and
fstl
xchg
mov
dec
mov
or
lea
sub
loope
pop
sbb
repz
mov
ret
sarb
push
sub
fs
ficoml
xchg
sbb
add
sub
subl
ljmp
mov
imul
sti
xchg
push
popf
pop
sub
loope
lahf
gs
lds
sbb
pop
push
sbb
pop
aam
push
xor
mov
ret
arpl
jae
xor
jno
jecxz
jmp
mov
cli
dec
mov
jmp
movsl
int3
add
or
int3
aaa
pop
loopne
dec
dec
inc
rorl
outsl
repnz
nop
dec
push
jnp
movsl
pop
sub
ljmp
dec
fimuls
shll
pusha
popa
jnp
cmpsl
fcoml
outsb
sbb
mov
and
sbb
push
dec
jl
sub
dec
cltd
push
jne
push
test
arpl
bound
pop
add
jbe
mov
jg
adc
or
mov
lret
mov
aad
cmp
test
repnz
cmc
cmp
inc
sub
sti
test
rolb
jne
loope
loope
movsb
mov
pop
int
mov
jnp
inc
aad
and
xor
in
ret
adc
jb
jmp
arpl
inc
bswap
add
push
pop
rcrl
sbb
rolb
dec
adc
mov
mov
sbb
or
outsb
punpckhbw
sbb
jne
test
int
jle
jle
pop
loopne
rolb
sbb
out
in
add
sbb
inc
mov
jb
adc
dec
movsb
pop
mov
mov
out
mov
add
jno
decb
std
ficomps
shr
int3
mov
sbb
daa
pop
xchg
neg
mov
adc
or
inc
xchg
incl
insl
push
mov
add
pop
xorb
sub
mov
dec
jp
pop
psubq
pop
cs
or
or
imul
test
sbb
push
and
cmc
mov
add
fcmove
nop
mov
xor
mov
jmp
mov
out
out
out
mov
lcall
es
mov
jae
mov
jg
loopne
push
dec
test
mov
mov
add
addr16
outsl
fsubrs
filds
cli
mov
shl
test
push
sub
movsl
cmp
pop
test
sbb
ds
mov
inc
xchg
and
pop
inc
loope
leave
orl
push
cld
jo
clc
pusha
test
fldcw
cmp
sahf
jle
xchg
clc
rol
dec
imul
mov
mov
xchg
xchg
inc
leave
pop
fwait
lret
in
pop
mov
mov
inc
push
std
scas
jl
aam
or
pmulhw
imul
into
sbb
mov
mov
lods
cmp
mov
leave
pusha
jmp
adc
pop
adc
xlat
inc
das
xlat
popf
xor
test
test
mov
sahf
dec
test
adc
push
xchg
xchg
mov
test
inc
dec
or
es
dec
orl
ja
push
inc
cs
roll
mov
push
in
loopne
cs
inc
vmread
dec
pusha
movsb
movsl
int3
lds
sti
push
push
je
scas
aad
jnp
pop
or
fwait
cli
ret
std
lahf
test
mov
push
cmpsb
into
push
xor
and
adc
pop
mov
jns
sbb
stos
mov
xor
mov
mov
test
xchg
shrb
xchg
popa
dec
imul
iret
fs
sbb
mov
movsl
or
hlt
or
hlt
int
loop
ja
cmpb
ss
adc
leave
cmp
sbb
ljmp
jle
in
sub
adc
xchg
mov
pop
adc
lahf
inc
addr16
cld
cmp
pop
jno
divb
inc
popa
cs
out
into
dec
inc
jl
and
out
cmpsl
adc
sbb
and
inc
test
nop
and
jg
leave
filds
inc
jne
loop
push
xor
mov
scas
dec
jg
test
sti
lock
cmc
pop
outsl
cmpsl
pop
lods
lds
sub
jge
jg
sahf
lock
mov
xor
lret
push
or
mov
mov
sub
mov
mov
inc
dec
out
and
negl
subl
lods
mov
add
mov
insb
or
or
push
mov
adc
jmp
push
adc
add
shlb
mov
lds
jmp
pop
and
add
fnstsw
mov
into
inc
pop
das
repz
stos
movsl
iret
ret
cmp
test
push
iret
push
es
pop
mov
xor
and
inc
sti
add
push
dec
sbb
sbb
and
mov
jae
pop
ja
or
lea
sbbl
and
fs
jae
jns
mov
sbb
leave
rol
and
add
and
in
in
jbe
mov
imul
sub
push
mov
hlt
push
stos
ficoms
hlt
lea
xor
mov
movsl
adc
mov
jecxz
mov
push
es
jmp
movsl
mov
dec
xchg
icebp
stc
push
push
imul
jno
cmpsb
mov
mov
test
pusha
stos
lods
lods
sub
adc
jmp
lods
cmp
iret
adc
cld
leave
dec
mov
aas
cmp
lods
gs
inc
cltd
jbe
inc
cli
out
sub
push
push
add
je
and
lret
hlt
test
addr16
mov
xchg
lret
je
jae
add
lock
sub
orl
pop
push
push
push
pop
es
pop
push
pop
or
mov
inc
enter
mov
scas
scas
in
pop
push
in
add
and
stos
jo
sbb
cmpsl
in
movsl
lret
inc
fmul
ljmp
pop
jg
pop
mov
or
loope
je
out
in
push
mov
jge
add
inc
jae
in
shrl
gs
pop
rolb
jo
ljmp
out
aaa
int3
loop
push
fisttpl
in
aas
dec
sbb
call
out
bound
inc
sbb
ljmp
or
mov
or
pop
pop
pop
in
dec
in
add
sbb
fwait
cmp
cmp
xchg
js
cwtl
decb
jae
out
jg
mov
mov
jmp
adc
mov
sub
ja
in
xchg
out
push
or
fs
sbb
cmc
mov
fisubs
mov
cs
mov
sbb
push
test
ret
inc
outsl
repz
lret
cmpsb
mov
pop
push
popa
addr16
or
cmp
test
stos
mov
or
dec
xor
mov
pop
fisubs
in
jb
push
hlt
jno
popa
jge
sbb
rcrb
pop
jmp
lcall
dec
movsb
jle
or
stc
add
xor
dec
add
and
inc
rcr
inc
popf
pop
xchg
es
pop
mov
mov
cmp
add
adc
jg
jae
pusha
add
in
xchg
lcall
xor
and
mov
pop
lahf
inc
mov
add
leave
fwait
mov
negl
lea
jo
xorb
pop
stos
push
mov
scas
mov
pop
out
ror
insl
sbb
stos
mov
dec
in
push
pop
dec
int3
cmp
aam
pushf
lret
jl
xchg
mov
scas
push
dec
xchg
push
jge
adc
push
sbb
or
sub
daa
mov
xor
cwtl
inc
in
stc
jp
repz
and
cmp
lret
repz
push
iret
mov
pop
out
or
out
lea
pop
push
fisttpl
into
in
mov
ret
vcvtsd2si
dec
shll
ds
push
js
xchg
jno
stos
jmp
inc
dec
enter
mov
mov
js
loopne
pop
into
adc
shll
sub
outsb
sub
rcrl
imul
pcmpgtw
adc
incl
popa
push
insb
out
icebp
inc
add
js
and
mov
dec
les
fdivs
jns
jp,pn
sbb
inc
out
js
sbb
cs
mov
mov
nop
pop
ja
jae
dec
scas
and
rcrl
int3
push
xchg
testl
jge
ret
pop
ljmp
outsl
jp
xchg
fmuls
movsb
test
movsb
lds
jmp
xor
je
pop
push
insb
lods
and
aaa
jae
push
inc
inc
in
ja
inc
mov
clc
mov
sub
inc
pop
pop
nop
jbe
sbb
call
enter
loopne
jae
pop
fldl
popa
xchg
pop
sbbb
jecxz
mov
ljmp
cmp
fs
sbb
mov
xor
sbbb
or
xchg
cmpsb
cld
pop
xorl
inc
ja
dec
dec
je
mov
dec
pop
cmp
test
popf
pop
lret
adc
sbb
stos
jle
mov
adcb
stos
fdivr
adc
neg
mov
sub
pop
jp
lock
jns
mov
dec
lods
xor
cmp
loop
test
fcoms
loope
repz
pushf
test
mov
imul
int
or
lea
xor
loop
xchg
and
shll
mov
fldenv
data16
jbe
and
add
fldl
imul
enter
sbb
pop
jle
xchg
inc
insl
cmp
loope
filds
mov
xchg
mov
dec
gs
lret
mov
push
call
sub
sbb
cmp
dec
lods
sbb
push
cs
mov
ret
adc
adc
int3
lods
lcall
fsubr
aas
es
sbb
or
mov
mov
leave
cmp
out
add
out
inc
and
mov
jo
add
or
mov
out
hlt
jl
dec
xor
subb
shrb
push
into
cli
xchg
insl
scas
jmp
and
js
push
sbb
sub
inc
xchg
adcl
cli
push
aam
gs
jle
jne
adc
loop
iret
inc
add
gs
lds
sub
push
enter
sub
fwait
in
popa
cld
jecxz
lret
xlat
fsubs
jg
call
movsl
add
mov
mov
fnstenv
jecxz
and
fidivrl
dec
popf
push
sbb
inc
repz
out
popf
daa
stos
aas
cli
test
pop
ret
jb
cbtw
or
and
inc
inc
fstp
neg
jno
sarl
mov
arpl
dec
bound
je
out
fucom
lret
insl
push
pop
bound
in
xor
sbb
add
dec
std
mov
ret
sub
sbb
jcxz
lcall
sub
loope
pop
xchg
in
ret
adc
xchg
lods
test
jl
and
ljmp
cmp
inc
mov
sar
loopne
mov
movsl
push
pop
add
xchg
xchg
inc
outsb
nop
push
out
jns
push
cmp
adc
jne
cmp
adc
dec
cmpsb
out
mov
sti
mov
cs
push
inc
orb
lcall
outsl
or
inc
cmp
cmp
xor
int
or
stos
repz
xlat
push
and
mov
popa
imul
adc
sbb
inc
cltd
mov
in
enter
jmp
mov
std
push
pushf
sbbb
mov
in
int
pop
mov
nop
inc
jle
xchg
mov
icebp
fs
ret
lods
fs
out
mov
jl
repz
jne
mov
mov
mov
push
inc
push
add
cmpsl
inc
imul
mov
pop
data16
outsl
or
pop
cmc
dec
cld
and
push
dec
mov
or
push
ret
pop
pop
sub
mov
divb
or
stos
push
pop
les
xchg
jmp
and
or
repz
arpl
dec
xor
push
jge
mov
add
imul
adc
ljmp
popf
pop
leave
push
mov
push
insb
jnp
xor
cmpsl
adc
mov
std
jbe
mov
std
adc
cli
es
inc
adc
shrl
in
mov
sbb
outsb
mov
movsb
aas
push
xchg
xchg
or
arpl
mov
jno
cmp
push
xchg
sub
and
stos
jb
pop
adc
ror
add
inc
cli
jns
push
arpl
xchg
aas
mov
sbb
sar
jns
mov
pop
xchg
adc
nop
cmp
pshufw
xor
minps
and
mov
into
push
shll
lds
sub
mov
add
xor
lods
inc
mov
mov
pop
inc
adc
jecxz
div
mov
xchg
push
pop
pop
pushf
push
inc
cld
fnsave
push
mov
pop
mov
and
ja
lds
adc
or
xchg
push
push
aad
lcall
jle
cmp
shr
stc
mov
dec
or
test
inc
or
push
leave
push
jecxz
xchg
daa
sub
orl
inc
or
push
fcoml
inc
sbb
pushf
jo
mov
data16
add
sub
fcoms
mov
stos
inc
pop
cmpb
fwait
jbe
add
fiaddl
push
mov
lcall
xchg
cmpsl
mov
int3
sub
mov
sbb
or
push
shlb
xchg
jle
pop
push
and
xor
pop
sub
gs
fidivrl
cmp
fsub
push
dec
scas
ret
notb
cmp
cmp
sub
sbb
mov
jl
outsb
push
fxch
sub
add
push
pop
push
enter
or
push
dec
push
push
mov
mov
loope
aad
lahf
and
mov
xchg
pop
test
cmc
jmp
inc
sarb
mov
jno
test
cmp
lods
mov
bound
sub
dec
mov
icebp
push
pop
sarl
cmp
mov
scas
jp
push
add
roll
lret
bound
pusha
aam
ljmp
sbb
popa
xchg
dec
data16
mov
fbstp
mov
pop
outsl
inc
mov
mov
jle
js
dec
add
sub
in
lcall
lret
cmp
clc
push
sub
add
pop
xchg
jg
xchg
stos
in
ja
jl
mov
mov
pusha
dec
or
test
xchg
scas
xlat
aas
jne
insl
pop
mov
push
pop
rcl
mov
sub
es
cs
in
xchg
adc
inc
xchg
jno
xchg
aad
aaa
xchg
out
ljmp
mul
inc
cwtl
push
mov
sti
ds
flds
xor
aad
mov
mov
mov
fisubl
mov
sti
xchg
xor
andb
xor
int3
pusha
push
push
push
hlt
jl
shll
jecxz
jne
xorb
pop
xchg
jae
cwtl
and
fs
or
ret
popa
enter
stos
icebp
cmp
xor
pop
push
adc
xor
mov
and
insl
repz
out
mov
repnz
out
pop
push
and
mov
mov
mov
and
movsl
out
or
lea
rcrb
subl
loopne
lods
mov
push
jg
add
shrl
lock
mov
lds
mov
ret
jbe
mov
insb
add
adc
std
mov
adc
cmp
push
stos
push
std
aam
cs
xor
popa
push
mov
sub
jo
xor
jmp
pop
out
cs
ljmp
pop
adc
mov
lods
xchg
and
flds
loopne
movsl
push
js
or
xchg
inc
lock
sbb
test
sbbl
decl
pop
dec
sarb
aam
pop
push
enter
jns
pop
cld
push
sub
lea
and
push
xor
add
stos
jns
sbb
cltd
out
add
push
fisubrs
test
dec
sub
or
ret
dec
mov
cs
iret
xor
lods
push
mov
popf
or
inc
inc
rorl
dec
jnp
sub
dec
and
cltd
push
jmp
dec
and
inc
prefetch
sbb
aam
or
mov
push
sub
mov
aas
fwait
add
jp
pop
mov
mov
ficompl
movsl
push
stos
sub
cmpsl
xchg
cwtl
out
xchg
jae
aas
mov
jge,pn
push
aas
mov
sbb
lock
jmp
aas
scas
mov
mov
ds
inc
scas
xor
addl
sub
pop
mov
xchg
call
filds
or
cmc
popa
les
inc
mov
lea
insb
in
adc
call
sub
or
or
inc
fbld
push
push
in
xchg
push
or
loope
movsl
jecxz
or
es
fistl
lret
cs
outsl
mov
push
int3
addr16
imul
loop
or
fisubrl
pushf
pop
shrl
frstor
xlat
mov
rolb
push
jno
adc
into
xlat
push
push
jb
data16
xchg
imul
jbe
insb
mov
out
rolb
xor
rcl
call
jmp
xchg
dec
out
sub
and
mov
addl
popa
pop
lahf
xchg
out
lds
sub
fnstcw
pop
test
data16
push
mov
mov
mov
fwait
in
push
gs
mov
or
pushf
add
rolb
inc
ljmp
sbb
push
xchg
ljmp
stos
sub
xor
pop
dec
mov
mov
loop
lods
sahf
cmp
xor
iret
sub
mov
fisubs
cltd
adc
ret
or
mov
in
sub
xorl
mov
popf
push
and
out
pushf
xchg
jmp
ja
add
mov
mov
mov
bnd
mov
xor
push
jb
flds
les
mov
xor
enter
xlat
mov
cmp
fs
xor
sub
mov
or
mov
xchg
loop
jnp
add
scas
ret
jnp
mov
pusha
scas
jne
xchg
mov
mov
mov
insl
mov
inc
sub
lods
bound
push
pop
xchg
pop
lahf
mov
aaa
int
ret
fimull
cli
pop
add
mov
ret
idivl
icebp
pop
dec
sbb
or
out
das
ret
addr16
lds
adc
out
push
adc
mov
add
enter
out
dec
mov
aas
mov
loopne
ljmp
shll
and
lods
test
adc
dec
push
cwtl
ljmp
out
push
mov
pop
add
mov
cmc
les
mov
stc
mov
cs
lret
and
ja
jb
inc
mov
jns
mov
inc
pop
jae
jp
ja
leave
adc
xlat
sbb
xor
sub
aam
xlat
lds
jo
pushf
notl
push
icebp
sub
into
and
lea
repz
push
sbb
imul
test
stc
icebp
loop
aad
pop
out
popa
sub
cltd
aam
rolb
ror
sub
dec
andb
push
sbb
dec
xor
jp
push
inc
scas
pushf
xor
jns
inc
pop
movsb
not
imul
mov
jp
outsb
mov
mov
mov
mov
ds
sub
jge
fcoms
cltd
ret
stos
adc
jmp
xor
imul
lahf
int
mov
cmp
and
test
xchg
pushf
outsl
lock
xchg
or
mov
mov
ds
inc
clc
adc
mov
stc
adc
sub
stos
pusha
rcl
jp
mov
push
jne
cmc
or
iret
pop
mov
out
or
adc
xchg
mov
pop
and
cmp
jno
adc
sarb
addr16
jne
pop
lds
stos
in
hlt
xadd
shl
cmpsl
mov
data16
xor
or
fildl
jns
dec
stos
cmpsl
dec
movsb
xchg
cli
fisttpll
jne
fwait
adc
test
mov
push
cli
mov
test
jecxz
cmp
xchg
jle
jg
mov
jne
lahf
and
repz
add
dec
aaa
in
mov
rolb
push
push
sub
loopne
fs
dec
sahf
adc
sbb
sub
mov
insb
int
xchg
loopne
xchg
test
cld
filds
pop
gs
int3
mov
mov
push
push
ss
daa
shll
adc
xchg
daa
jo
inc
out
jae
shll
and
es
lock
pop
cwtl
sti
cmp
inc
test
dec
fcmovb
fwait
and
xor
hlt
jnp
insb
pop
xor
out
inc
enter
jnp
xchg
dec
push
or
pop
and
scas
and
imul
and
sub
sbb
jnp
dec
mov
inc
je
push
stos
or
iret
inc
or
mov
mov
sub
gs
push
adc
mov
mov
mov
int3
insl
test
jnp
push
pop
jb
cwtl
mov
fdivrl
jb
add
repnz
sti
adc
and
or
loop
mov
push
pop
sub
sti
test
pusha
sbb
inc
or
fidivs
js
fcompl
insb
xor
ret
scas
xor
lds
or
jmp
mov
push
sub
aad
imul
cmpb
stos
xchg
jl
sbb
add
or
and
and
push
movsl
inc
sbb
jne
inc
xchg
inc
cmpsl
cmp
test
xchg
shll
cld
adc
mov
loopne
dec
push
lds
outsl
pop
aam
mov
jno
xor
or
in
xchg
das
sbb
rcll
stc
jl
jl
push
add
push
pusha
in
mov
push
inc
out
iret
adc
sbb
adc
or
cmpsb
enter
cmp
mov
push
or
cmp
inc
lahf
xlat
pop
out
cmpsl
push
pop
mov
nop
popa
and
faddl
loopne
pop
add
cwtl
pop
icebp
stos
nop
inc
inc
sarb
push
add
jno
cmpsl
and
add
push
sbb
les
addr16
dec
scas
lock
and
adc
cwtl
pop
movsl
lret
add
adc
sbb
pushf
sub
pop
cs
mov
pop
or
mov
test
xor
les
idivl
idivb
sahf
int
out
adc
andb
sub
add
jns
ret
rcll
inc
cmp
mov
ret
jecxz
data16
ss
pop
scas
frstor
add
in
dec
out
adc
dec
mov
pop
les
adc
inc
xchg
or
imulb
stc
jb
movsl
filds
adc
fs
mov
es
out
inc
dec
call
cs
arpl
add
add
rorl
inc
mulb
inc
sub
xchg
cld
jecxz
pop
movsl
test
sti
sub
lcall
inc
nop
cwtl
xor
loop
lahf
dec
push
push
ljmp
adc
dec
int
mov
dec
xchg
inc
or
push
fistl
data16
inc
cmp
xor
xchg
bound
ret
mov
adc
ret
mov
cmp
dec
cmpsb
adc
or
jo
xchg
testb
leave
fwait
cltd
jne
ja
shrb
push
call
pop
pop
add
ss
ljmp
xor
cmp
mov
cmpb
addr16
xor
add
mov
and
fisubl
xchg
inc
bound
mov
cmp
insl
int
in
xor
jbe
out
call
mov
mov
stos
mov
int3
xor
std
push
js
sbb
arpl
nop
inc
das
inc
push
inc
xor
mov
push
aad
cmc
mov
les
loope
inc
shl
scas
xorb
xchg
and
or
cmp
jbe
xchg
fs
inc
mov
push
cs
or
ret
mov
fcom
dec
cmp
loopne
xchg
pop
dec
jmp
inc
pop
mov
or
pop
dec
test
jne
jbe
jecxz
push
fsubl
pop
and
mov
les
lds
or
stos
cmp
imul
dec
pop
lahf
div
or
out
adc
sbb
xor
rolb
popa
movl
jae
and
test
movsb
adc
add
mov
push
ja
sub
test
pop
fldenv
lahf
dec
aas
stc
fcmovnu
mov
mov
lidtl
cmp
xor
in
adc
push
push
repz
dec
loop
xchg
adcl
xchg
aaa
add
dec
adc
mov
jae
sub
ret
fbstp
push
dec
sbb
inc
mov
jmp
fwait
xorb
xchg
out
sub
jne
sbb
xor
and
jno
or
inc
sbbb
dec
in
es
cmc
in
mov
jb
jo
adcl
inc
mov
or
inc
and
rclb
call
xorb
pop
push
insl
stos
adc
xor
nop
add
add
sarb
mov
adc
xchg
sahf
pop
idivb
cld
insl
and
mov
mov
out
and
clc
pop
out
addl
xchg
cmp
ret
jge
mov
outsb
movsb
iret
mov
push
aad
xchg
stc
xchg
sub
adc
mov
mov
push
lods
clc
or
loope
mov
adc
push
js
sub
jp
mov
pmaxub
in
ret
lds
add
sub
inc
imul
and
xchg
repz
add
xchg
sub
cmp
ds
jnp
sahf
and
and
jbe
in
testl
adc
je
push
sar
data16
xchg
cmp
in
jl
or
lret
fiaddl
fs
sbb
xlat
jb
sub
adc
test
inc
add
addr16
jecxz
shlb
cmp
fxch
nop
cwtl
pushf
ficoml
xor
mov
push
adc
jecxz
lcall
mov
xor
jg
xchg
lock
lret
mov
fsubp
cmp
lock
insl
pop
test
scas
clc
notb
xchg
mov
addr16
mov
test
jmp
cltd
sub
enter
popf
mov
imul
mov
xor
cmp
repz
lahf
pop
xchg
ljmp
call
mov
pop
test
dec
jecxz
fisubrs
rorb
cmpsl
push
js
adc
or
sbb
jb
mov
daa
cwtl
xchg
leave
and
or
sub
add
rorb
aad
sub
jo
mov
daa
add
jae
insb
subl
cli
fwait
or
iret
outsb
add
add
mov
add
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
mov
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
addb
add
loopne
add
mov
add
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
mov
add
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
mov
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
test
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
mov
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
sbb
add
mov
add
add
add
add
add
sub
add
mov
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
dec
add
add
mov
add
add
add
add
add
pop
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
xor
add
add
add
add
add
add
add
or
sub
add
in
add
add
add
int3
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
and
or
add
add
in
add
add
add
sub
or
and
add
in
add
add
add
dec
rorb
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
pusha
rorb
pop
add
add
add
add
add
add
or
add
add
in
add
add
add
insb
rorb
or
add
add
add
add
add
add
in
add
add
add
adc
add
add
in
add
add
add
test
or
pop
add
add
add
add
add
add
add
in
add
add
add
xor
or
and
add
in
add
add
add
hlt
in
or
inc
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
xor
xor
jo
mov
mov
xor
jmp
je
lods
sub
in
loop
ja
xor
xor
fs
mov
xor
and
dec
pop
jp
mov
ds
adc
cmpsl
cltd
clc
mov
jle
sub
dec
mov
pop
das
aas
sub
cs
int
adc
dec
out
push
enter
cmp
add
inc
mov
movsl
or
inc
push
adc
cltd
call
xchg
dec
adc
nop
in
mov
adc
mov
xchg
mov
mov
dec
mov
or
lods
scas
and
add
xchg
mov
ja
nop
mov
inc
ret
pop
leave
cmc
in
subb
push
sbb
xor
in
adc
divb
mov
loop
mov
sbb
mov
loop
mov
xchg
repnz
and
inc
inc
xchg
adc
loopne
sbb
pusha
inc
jmp
std
sub
insl
out
loopne
hlt
ss
cwtl
and
testb
push
pop
xchg
in
fadds
test
dec
and
cmp
push
adc
dec
ja
in
adc
jo
sbb
scas
push
push
xor
and
mov
or
inc
out
lahf
adcb
ret
nop
popa
ja
icebp
dec
mov
mov
scas
cmc
sub
popf
add
inc
repz
call
cli
xchg
sub
ret
mov
test
cmp
scas
pop
scas
imul
lcall
sub
push
sahf
pusha
or
cmp
pop
loope
cmp
add
push
jae
mov
cld
mov
pushf
sbb
inc
rorl
xchg
inc
xor
lock
in
imul
mov
adc
cmpsl
mov
hlt
sub
add
adc
leave
stos
jle
mov
or
pop
xor
mov
pop
xor
xchg
mov
pop
xchg
stos
mov
jns
in
mov
insb
fs
lret
jno
sbb
daa
outsl
add
inc
or
adc
loop
lcall
ret
ficoml
cmp
out
int3
add
xchg
jns
cmpsl
dec
cmp
push
incl
aam
jecxz
pop
or
push
xor
leave
push
or
nop
les
jge
je
cltd
nop
sub
jl
in
fucomp
jae
ret
out
into
les
out
xor
xchg
lcall
xor
adc
cmp
push
add
call
mov
in
lcall
and
cli
xor
in
mov
xlat
jmp
aam
mov
sub
ss
cmpsb
out
xor
pop
jmp
or
add
pop
ds
and
xor
enter
sbb
inc
and
cs
imul
cltd
adc
add
pop
test
lret
lcall
or
inc
popf
sub
cmp
dec
out
daa
ret
xchg
xorl
testl
repnz
xor
fisubl
out
xor
dec
pop
xchg
jnp
fildll
cwtl
cmp
ja
sub
cwtl
sub
lcall
push
scas
or
jo
mov
mov
and
ret
mov
cmp
cmc
dec
in
cltd
sarb
mov
ds
outsl
push
fistps
adc
xor
mov
jbe
add
fmull
push
pop
jg
push
pop
mov
aad
pop
inc
jae
adc
dec
push
fsubrl
lods
fbstp
mov
pusha
stc
repnz
jo
cltd
mov
mov
rcll
push
xchg
jl
aad
dec
jmp
push
in
add
mov
enter
and
je
lods
scas
sbb
lret
xchg
sub
jo
nop
push
fidivrl
movsb
imul
xchg
sbb
cmc
popa
push
loop
pop
out
jle
xlat
dec
test
loopne
in
jle
hlt
cli
mov
fwait
test
fwait
hlt
push
rcl
pop
lock
and
xchg
and
cmp
push
bound
lret
jle
lcall
or
mov
xchg
dec
popa
daa
push
and
fldl
ret
test
ss
mov
emms
mov
inc
hlt
or
push
adc
sbb
pop
rcll
out
mov
movsl
in
add
cmp
xor
dec
mov
jo
fs
inc
mov
mov
mov
dec
adc
into
loope
or
xor
mov
adc
fcmovbe
push
fs
mov
sub
and
pop
stos
jg
lds
imul
mov
ret
sti
sub
cmp
cli
bound
andb
pop
lcall
or
enter
push
inc
jb
xor
std
sub
fmul
push
out
cmp
push
shld
pop
xor
adc
cmc
and
mov
inc
lcall
inc
dec
sbb
loopne
rclb
test
ret
sub
dec
ficoml
mov
rclb
fidivrs
loopne
cli
sarl
and
xchg
mov
scas
insb
fidivrl
outsl
push
out
xor
adc
in
pop
mov
jl
adc
mov
mov
aam
mov
lods
adc
xchg
pop
fiadds
fldt
lret
sahf
dec
arpl
testl
and
push
cli
fcmovb
add
fisubrl
into
js
lods
stos
or
clc
and
mov
ret
jae
inc
cmpsb
xorb
cmp
data16
xor
inc
xor
mov
int
leave
fs
add
or
fiadds
cmp
sahf
xchg
lcall
les
jno
dec
popf
pop
jno
stc
leave
out
out
adc
sbb
paddb
mov
jns
push
leave
jecxz
jne
add
inc
stos
push
xor
rorl
shll
and
int
shlb
cmp
jae
xor
pop
mov
mov
cmp
mov
mov
repz
fdivl
push
adc
push
call
xchg
jmp
rcll
push
xor
cmp
nop
cs
add
mov
sbb
aaa
adc
dec
cmpsb
shlb
mov
inc
fcomip
stos
inc
pop
fdivrl
fstl
jae
adc
push
mov
shlb
cli
int
or
mov
push
jbe
mov
in
cmpsl
cmp
ja
addr16
mov
or
and
pop
or
sbb
cs
fs
jae
ljmp
stc
inc
sbb
jl
xchg
in
nop
jge
imul
dec
ja
das
mov
movsb
push
pop
shrl
stos
jns
sbb
mov
or
jmp
stc
pop
cltd
outsl
add
mov
outsb
data16
arpl
push
fdivp
jl
lret
add
pop
fs
stc
stc
push
push
inc
sbb
movsb
xchg
xchg
inc
mov
loope
stos
and
add
out
push
dec
es
stos
stos
arpl
outsb
sub
pop
add
or
push
in
mov
lcall
mov
cmp
lock
jnp
std
cmp
addb
jg
add
nop
dec
outsb
lods
jg
mov
sbb
cmp
aam
insb
lds
dec
mov
push
fdivrs
mov
xchg
push
loop
daa
cli
add
rclb
pop
pop
xchg
in
std
or
push
pop
cmpsl
rcl
dec
sub
cli
mov
xchg
popf
mov
add
in
cs
iret
xchg
jnp
sbb
aad
jbe
jmp
sbb
loopne
mov
jbe
push
mov
clc
fsubr
xor
cmp
mov
push
arpl
pop
lahf
jns
orl
adc
xchg
test
daa
sahf
stos
scas
ds
mov
imul
clc
ret
inc
sub
ja
add
out
ljmp
in
mov
add
push
mov
pop
aad
xor
dec
cmpsb
lock
insl
mov
pop
hlt
mov
add
xchg
mov
adc
dec
push
xchg
sbb
in
xor
mov
cmpsl
iret
fs
dec
out
jno
push
sub
inc
repz
subb
push
rcrb
mov
gs
push
lret
ds
out
mov
push
add
cmpsl
add
xchg
mov
dec
dec
mov
cmpl
icebp
jns
mov
out
int
push
stc
fimuls
jecxz
aad
cwtl
lods
enter
jg
lret
loop
scas
ja
cld
fdivrl
jo
cmp
enter
jbe
jp
mov
sbb
sbb
ret
mov
pop
jnp
rolb
push
xor
jns
scas
aas
dec
adc
shll
aas
add
xchg
scas
mov
xchg
imul
cmpsb
mov
cli
aad
icebp
es
push
cmp
xor
cmp
in
push
out
xchg
into
push
push
mov
mov
test
cli
in
clc
ds
daa
ret
pop
rcrb
cmp
fs
sbb
dec
bound
push
lahf
push
dec
cmovbe
add
xor
lods
fistl
cmp
add
jge
cld
addb
adc
or
rcrl
shll
cltd
add
add
jo
adc
pop
and
cs
pop
popf
add
push
mov
xchg
out
insb
fcomps
xor
jle
sbb
cmp
mov
std
mov
js
inc
xor
shl
add
and
cli
lock
aad
jno
daa
or
aaa
sub
cmpsb
sub
jl
hlt
jae
inc
inc
push
adc
stos
adcb
or
orb
mov
push
stos
adc
popf
das
push
pusha
add
or
sub
cmp
aam
sub
cmpsb
jle
sbb
xchg
cmc
xor
and
lods
fstp
icebp
test
mov
dec
aad
roll
repnz
mov
jle
mov
inc
pusha
insb
jecxz
push
pop
out
mov
sub
sub
fadds
int
mov
cmpsb
and
icebp
cmp
jmp
mov
mov
pop
loope
lahf
mov
and
mov
mov
mov
inc
inc
sbb
pop
jmp
mov
cmp
sahf
inc
fwait
std
xchg
dec
push
inc
stc
mov
mov
push
and
lock
cmp
xlat
xchg
jle
push
mov
inc
inc
ljmp
push
and
bound
push
inc
push
pushf
pop
xchg
pop
xchg
pop
dec
mov
mov
jecxz
inc
add
jg,pn
sub
lock
and
rcr
js
sub
int3
cltd
dec
mov
xor
rcr
popa
je
xchg
outsl
sbb
sahf
fidivl
cld
jmp
inc
mov
testb
stos
mov
je
mov
adc
pop
jge
loopne
jg
pushf
bswap
mov
xchg
fucomp
test
xchg
loopne
sub
push
loopne
mov
stos
pop
insl
and
mov
mov
jae
pusha
in
faddl
pusha
je
les
xchg
xor
sub
jmp
pop
xchg
mov
hlt
push
insb
data16
pusha
negl
push
xchg
into
daa
cmpsb
leave
xor
mov
push
and
sub
imul
xchg
lahf
push
repz
lret
ljmp
andb
push
sbb
enter
lock
and
or
notl
lods
loop
fsubl
cmp
mov
ljmp
jecxz
in
sahf
sarl
xor
and
movsl
and
je
test
jbe
cld
rcll
mov
or
dec
mov
adc
add
ds
or
push
std
xlat
pushf
mov
ljmp
gs
jnp
in
sbb
cpuid
pop
ljmp
adc
dec
loopne
xadd
add
inc
mov
ljmp
adc
sub
xchg
pop
push
add
cmpsl
inc
inc
aad
fldt
mov
mov
add
in
stos
pop
cmpsb
xchg
sbb
bound
or
jbe
dec
bnd
mov
mov
nop
mov
xchg
mov
inc
test
push
ja
add
in
call
out
icebp
mov
mov
adc
mov
add
fimull
movsl
lcall
cltd
cmpsl
pop
lret
adc
stc
ret
sub
stos
jecxz
adc
cli
sbb
mov
enter
scas
mov
xchg
pop
lahf
dec
rclb
xor
pushf
dec
movsl
inc
stc
outsl
out
pusha
lods
dec
jecxz
xor
lods
roll
mov
jl
inc
add
xor
add
shlb
fucomp
cmp
pusha
xchg
push
test
fdivr
pop
stos
mov
xchg
pop
pusha
adc
pop
ljmp
cmpsl
mov
sub
fiadds
insl
jne
aas
das
sarb
xor
cmp
fwait
xor
push
xchg
flds
pop
in
lock
lahf
add
sbb
dec
cltd
jns
fwait
imul
mov
fninit
xchg
loope
push
xor
jmp
push
mov
xchg
repnz
lcall
adc
rorb
enter
popf
into
lock
das
push
dec
xor
pusha
daa
rcl
sub
xor
nop
mov
adc
cmc
insl
ss
pushf
fisubrs
xchg
sub
xor
push
xlat
xchg
xor
xor
cmpl
pop
scas
sbb
push
sahf
dec
xor
popf
insl
cmc
lods
xchg
dec
adc
dec
fs
clc
and
or
sbb
outsb
loope
push
jns
pop
cltd
xchg
xor
shlb
pusha
adc
or
push
pop
cmc
sub
or
enter
mov
jl
lahf
rcll
cmp
add
flds
xor
inc
movsl
xchg
movsl
addr16
adc
and
push
dec
clc
xor
daa
or
push
daa
arpl
mov
fisubrl
or
xchg
xchg
sub
mov
mov
add
jecxz
mov
pop
hlt
mov
push
lods
fisttps
test
iret
cwtl
inc
lret
repz
ss
pop
mov
jge
xchg
mov
std
fsubs
scas
push
dec
add
and
or
or
in
or
mov
push
imul
mov
dec
clc
mov
xor
ss
push
push
dec
push
outsl
or
xor
xor
iret
addb
aaa
test
aam
dec
push
or
or
arpl
xor
scas
fwait
mov
jecxz
lock
add
ljmp
mov
inc
aad
dec
push
imul
xchg
stc
adc
adc
cmp
mov
enter
inc
or
fcmove
outsb
ret
xchg
pop
out
jp
cmp
mov
mov
jo
mov
incb
daa
aaa
and
cltd
mov
mov
mov
inc
mov
inc
cwtl
cmpsb
xor
pop
shl
fs
xor
xchg
cltd
xlat
dec
cmp
sbb
out
pop
pop
pop
loop
jne
cmp
cs
lods
mov
je
int
mulb
sbb
ljmp
in
xchg
sub
cmpsb
mov
cld
scas
scas
add
ret
pop
dec
or
cld
pop
dec
idivb
cmpsb
push
fabs
xor
int3
aad
ror
rcrl
inc
cmp
pop
jns
lds
mov
sbb
pop
mov
mov
daa
out
lea
mov
lds
aam
sub
lret
push
push
popa
sub
mov
sub
xchg
xor
sub
cli
mov
xor
notb
dec
lock
shrb
sti
cmp
jl
popf
and
mov
scas
or
out
sub
iret
cld
ds
pop
inc
mov
sub
cld
std
inc
sahf
and
sbb
mov
mov
rcrb
xlat
xor
or
add
stos
and
xchg
dec
jo
call
inc
mov
je
sub
lret
xchg
mov
test
sahf
adc
cmp
mov
pop
insl
in
in
jns
inc
push
or
fiaddl
mov
xor
and
pop
test
out
mov
insb
dec
jnp
push
mov
inc
aas
sub
jne
jns
pushf
stc
cli
js
sbb
add
arpl
mov
xchg
shll
in
lcall
push
cmp
repnz
aaa
push
fisubrl
mov
adc
xchg
daa
mov
dec
mov
mov
dec
sub
push
mov
and
pop
lods
insl
je
mov
mov
pop
push
das
lock
aad
jp
adc
mov
mov
mov
jne
mov
dec
in
loop
add
mov
cmp
push
mov
je
xchg
popf
loop
dec
cmc
rcl
jp
inc
lahf
push
xchg
gs
ja
mov
sub
jg
inc
cs
loop
mov
adc
mov
addl
scas
rorb
mov
leave
adc
sbb
in
ja
ds
fwait
loop
stos
popa
or
leave
or
arpl
clc
xchg
out
std
sahf
fwait
mov
out
repnz
add
mov
mov
sbb
mov
scas
mulb
sbb
lds
pop
out
jae
jb
push
jb
and
xor
std
dec
icebp
mov
cltd
adc
inc
imul
iret
and
inc
jns
stc
inc
imulb
cs
pop
xchg
stos
jge
outsb
bound
sbb
repnz
in
fldenv
mov
mull
call
mov
xorl
cwtl
pushf
loop
insl
outsb
loope
outsb
sub
rolb
pop
xor
dec
addr16
sub
lret
jl
xlat
or
jns
xchg
fistpl
out
shll
cmp
pop
insb
daa
inc
dec
mov
pushf
je
pop
push
jg
pop
push
lods
lret
push
clc
dec
jle
lahf
mov
pop
in
cld
inc
xor
fiaddl
ljmp
pop
adc
jo
pushf
gs
push
or
pop
mov
je
cmc
pop
in
xor
out
cmpl
jnp
adc
pop
lahf
inc
notl
mov
ret
adc
adc
std
add
repz
inc
shll
mov
sahf
xchg
push
inc
push
jle
push
jns
or
test
xchg
mov
sub
jns
sub
scas
xor
stc
mov
mov
lret
xor
sbb
jo
push
aam
add
pusha
ret
inc
les
fwait
adc
dec
sbb
stos
rep
cli
sti
xor
push
mov
lods
out
jns
mov
dec
mov
iret
repnz
jmp
pop
repnz
insl
gs
push
dec
je
jb
std
cltd
test
icebp
in
js
into
loope
sub
sar
xor
mov
ja
subl
dec
data16
int
ljmp
mov
lcall
jno
jge
cwtl
std
and
in
fxch
pop
cmpb
js
call
mov
in
sbb
mov
or
sti
fcomp
pusha
repnz
add
mov
xchg
sub
lock
jae
jns,pt
repnz
mov
push
jnp
enter
imul
or
inc
sbb
mov
sub
adc
pusha
and
xor
and
jns
jg
and
repnz
je
sbb
or
cs
jnp
stos
stc
pop
or
jbe
mov
add
and
orl
xlat
jmp
test
pop
scas
push
mov
popa
loopne
data16
adc
sub
hlt
leave
fdivrl
adc
cld
cmp
fcoms
mov
or
mov
push
andb
movsb
push
test
iret
les
push
imul
mov
mov
inc
das
jp
out
cmp
retw
stc
inc
mov
call
ja
out
jae
cli
mov
ret
movsb
stos
rorb
add
xchg
ret
insb
xor
xor
sub
test
sbb
pop
mov
hlt
inc
notl
xchg
rclb
ret
dec
insb
cmc
loopne
inc
rcrw
add
adc
addr16
or
and
jmp
std
in
je
sbb
push
iret
jp
jle
inc
add
adc
mov
jge
or
les
lods
xchg
jbe
aas
mov
xchg
xchg
pushf
loope
cmp
xchg
mov
mov
aas
mov
sahf
add
or
mov
jecxz
xchg
mov
ret
xchg
xor
pop
pop
aam
dec
iret
roll
call
outsl
lret
loop
pop
push
adc
mov
pop
daa
sub
js
dec
dec
int3
inc
pop
inc
cmpsl
jbe
jle
mov
lds
sub
xorb
inc
jbe
shlb
loope
add
ret
jno
sahf
fbstp
add
inc
xchg
xor
lods
mov
movsl
push
insl
inc
inc
fnstcw
xor
xlat
rorl
xor
sub
and
push
out
mov
push
push
sub
cmp
je
cwtl
sbb
mov
enter
and
mov
or
jl
decb
xor
stos
jecxz
lock
lahf
cmp
jno
inc
jno
dec
ret
push
ljmp
das
clc
gs
xor
or
roll
mov
adc
push
out
jge
out
out
pop
cmpsl
cmp
cmpsb
iret
and
pop
clc
jge
lret
in
pop
in
jmp
inc
cmp
stos
mov
pop
roll
sbb
subb
mov
out
push
mov
mov
mov
xor
pushf
push
xchg
mov
push
push
pusha
mov
add
pop
push
stc
xor
mull
push
lcall
mov
cmp
in
cld
cmc
es
hlt
icebp
pop
movsb
jbe
inc
inc
xchg
loop
insl
sbb
and
push
sbb
stos
sub
push
pop
adc
push
mov
mov
and
dec
ror
movsl
dec
lret
xchg
add
push
push
jo
xchg
pop
lcall
inc
xor
push
fcompl
aad
xchg
aas
pop
popa
repnz
in
and
shrl
fstpt
or
es
jo
aad
cmpsb
sarb
cmp
push
and
mov
sub
or
adc
notb
js
pop
or
xchg
test
xchg
push
and
mov
ss
xor
out
shrl
outsb
cmc
movl
outsb
sbb
insb
add
jo
out
add
push
pop
and
xor
push
or
or
mov
pop
in
cmc
bndstx
pop
xchg
add
out
xor
scas
mov
stc
cmpsb
lcall
cwtl
rorl
data16
repnz
xchg
mov
adc
xchg
cmp
xchg
sarb
xorl
sarb
add
sbb
sub
test
sbb
enter
sub
dec
enter
xor
sti
insb
fmul
jl
push
iret
sti
bound
insl
cmp
inc
loope
sbb
jp
or
or
mov
cmpsb
dec
adc
lods
insl
das
enter
dec
sub
std
idiv
les
outsl
inc
scas
ja
xor
xchg
int
rcrl
jge
xchg
addb
or
or
and
or
pop
push
mov
adc
loopne
cmp
stos
sub
fwait
mov
mov
mov
std
stos
cli
lret
arpl
mov
sub
add
sahf
adc
add
jo
lods
test
add
xlat
mov
shlw
mov
sbb
cmp
repnz
outsl
ret
testb
loope
ret
push
jecxz
jmp
sub
and
or
xor
jp
push
add
jecxz
sbb
or
mov
test
outsl
or
testl
jg
shl
or
push
scas
pop
inc
jae
push
xor
cmp
outsl
add
ret
scas
mov
mov
fildl
xchg
hlt
loop
adc
or
mov
js
adc
push
add
xor
cld
test
ss
dec
dec
test
mov
push
or
jns
mov
push
lock
push
jo
jo
and
pop
jae
or
icebp
sbb
mov
addr16
xor
mov
imul
cmpsl
into
sti
inc
out
in
and
sub
push
loopne
mov
add
rcrb
sbb
jne
inc
add
call
jmp
jae
ja
inc
mov
clc
stos
inc
mov
mov
inc
mov
inc
arpl
sti
loope
cmp
mov
jge
repz
les
out
or
jecxz
push
mov
ror
pop
mov
loopne
xchg
in
and
adc
imul
xor
test
or
cli
or
aas
out
das
add
icebp
into
and
jbe
dec
or
rorl
cltd
push
addr16
rol
shrl
mov
shll
cmp
popf
cmp
mov
inc
mov
push
mov
pop
hlt
mov
and
lea
les
fwait
push
out
mov
aad
les
add
sti
frstor
inc
jge
pop
or
cmp
mov
stos
push
mov
gs
dec
sbb
in
mov
push
mov
jge
mov
clc
in
out
jmp
iret
push
test
dec
mov
cmpsb
jl
sub
cmp
dec
fisttps
dec
xchg
in
cmp
pop
cmpsl
sbb
ljmp
shlb
mov
aas
scas
or
adc
add
add
mov
outsb
sti
shrl
mov
add
stos
movsl
ret
fsubs
data16
repz
push
push
out
sbb
out
push
movsl
fistps
adcb
dec
imul
adc
aam
sahf
stc
cmp
xchg
mov
aaa
into
cmp
pop
jae
add
dec
pop
cld
pop
jnp
xchg
jo
fdiv
ret
lods
push
xchg
cmpb
je
pop
mov
lahf
sub
fwait
iret
cmp
cli
fisubrl
pop
sbb
sub
pop
mov
xchg
les
flds
adc
ljmp
ds
inc
inc
test
pop
incl
decl
dec
pop
mov
jo
rorb
xorl
dec
mov
cwtl
mov
pop
aam
push
jns
and
cmc
xor
negb
push
data16
mov
xor
scas
mov
sub
mov
fs
xor
fsubs
les
out
rcrl
sahf
stos
test
pop
jmp
sbb
pop
aas
push
push
mov
test
ror
sub
aam
mov
sti
rcrl
sarl
mov
inc
pop
enter
push
and
add
arpl
imul
orb
cmp
orl
xchg
mov
in
loopne
mov
jb
sub
jns
fwait
call
jo
mov
xchg
loopne
or
sbb
movsb
cmp
inc
ret
shl
or
xor
xchg
test
inc
outsl
sbb
movsb
adc
nop
pop
sub
pop
ja
mov
imul
pop
or
movsl
pop
and
pop
cwtl
push
ljmp
cld
xorl
xchg
push
xchg
icebp
sbbl
mov
cmpsb
test
xchg
shrl
in
push
cmpl
jnp
dec
lret
in
fnstcw
dec
loope
in
push
mov
sub
jg
repz
mov
add
pcmpeqd
adc
or
mov
lods
sbb
data16
mov
jne
fisubs
lods
in
mov
push
data16
mov
mov
mov
adc
pop
sbbl
sub
inc
bound
fidivs
ret
mov
rcrl
push
neg
jmp
pop
adc
loope
movsl
mov
sub
data16
sbb
outsl
jp
pop
sub
lcall
jo
imul
push
insl
negb
push
bound
dec
mov
mov
lods
mov
jmp
mov
sbbb
xor
xor
cmp
cmpsl
cmp
out
adc
sbb
pop
lcall
and
xchg
xor
loopne
mov
lods
mov
inc
dec
push
xchg
add
roll
jecxz
cmp
mov
nop
jae
call
mov
lock
arpl
iret
sub
test
adc
mov
cmp
push
jne
daa
pop
mov
cmp
xor
stc
jne
xorb
inc
add
xor
sbb
push
in
jno
pushf
stos
call
sub
sbb
mov
sbb
mov
cmpsb
cs
jl
movsl
ja
cld
or
mov
xor
fwait
or
mov
sahf
push
test
and
dec
mov
dec
imul
loopne
inc
inc
int3
pop
xor
or
mov
xor
mov
rol
clc
inc
sti
xor
das
xchg
xchg
icebp
inc
mov
push
pop
jl
cmpsb
cwtl
fxch
mov
insb
call
push
mov
testl
pop
cmp
inc
adc
jbe
pop
dec
das
into
shrl
jne
lock
adc
dec
sub
sub
call
mov
push
push
xchg
xchg
pushf
arpl
or
addr16
or
and
cli
out
mov
jns
jne
or
cmp
dec
push
lcall
xor
cmc
jmp
lahf
xchg
jo
aaa
cmp
data16
mov
stc
nop
popf
pusha
inc
xor
and
mov
stc
sbb
std
xchg
mov
dec
aad
std
pop
add
neg
push
fildll
das
and
fwait
out
push
sub
pop
ret
pop
jns
xor
mov
movsl
push
rclb
hlt
jp
imul
test
sbb
mov
or
lods
or
ret
popa
inc
out
lret
arpl
sbb
pop
jmp
mov
xorl
mov
daa
adc
ljmp
sub
pop
into
cmpsl
xchg
rorb
mov
js
adc
add
jnp
shlb
inc
ffreep
lds
testl
hlt
cmp
test
cld
andl
mov
add
das
add
sti
mov
ss
push
jnp
outsl
aas
xorl
out
dec
mov
mov
pop
ss
jns
lret
fwait
dec
sbb
mov
push
jns
xor
push
adc
mov
call
mov
dec
xchg
mov
mov
push
inc
lret
cltd
mov
stos
into
mov
pop
mov
sbb
sub
fnsave
pop
adc
loopne
jne
pop
shll
pop
inc
mov
lcall
adc
and
jl
fsubrs
adc
and
mov
mov
dec
cs
add
inc
les
add
fsubr
dec
shll
push
push
ja
lcall
and
inc
or
and
xchg
aam
fnsave
adc
lods
sbb
cmp
ret
jno
test
sbb
mov
loop
dec
fimuls
lcall
repnz
cmp
inc
ljmp
push
test
into
sbb
jo
jo
sbbl
mov
repnz
js
push
imul
scas
jl
dec
ds
push
pushf
dec
push
arpl
std
pop
sub
iret
rcll
nop
rorb
jle
popf
sbb
out
pop
cmpsl
mov
incl
cwtl
repz
adc
test
mov
rclb
or
mov
rcrb
popf
push
dec
mov
movsl
pop
and
aaa
mov
xchg
mov
sub
dec
test
adc
cmp
lea
cs
into
imul
jmp
adc
cwtl
jnp
loope
sub
sti
icebp
jmp
jae
jle
jno
dec
push
mov
dec
pop
cld
pop
ror
mov
inc
push
popf
rcrb
idivl
xchg
ds
pop
xchg
hlt
jl
sbb
xchg
ret
sbb
add
pop
sbb
lock
cwtl
inc
outsl
mov
es
cmp
jl
lahf
std
push
mov
movsl
roll
and
pop
dec
sub
int3
ljmp
dec
adc
xor
ljmp
adc
mov
mov
adc
jo
fcoms
ficomps
cmp
loopne
cmp
fstpl
jmp
loope
insb
mov
ret
out
adc
loope
cltd
pop
movsb
push
aaa
or
sbb
jne
lock
xor
xchg
lcall
scas
repnz
cmp
mov
push
or
shll
daa
jl
pop
xor
pop
sub
imul
sarb
mov
cmp
cli
call
sub
cwtl
loope
push
adc
adc
or
push
into
inc
lods
stos
sub
mov
rcl
jp
cs
test
sub
fstp
jae
icebp
rclb
mov
push
in
cmpsl
or
lahf
push
outsl
imul
lods
mov
bt
mov
mov
inc
in
inc
inc
dec
adc
cmpsl
dec
mov
pop
cmc
aaa
or
dec
es
mov
fimuls
sub
in
pop
insl
pushf
adc
mov
leave
lods
lods
adc
fstpt
mov
bnd
xchg
imul
push
xchg
test
and
cwtl
adc
std
jg
mov
cmpl
push
les
push
mov
xlat
or
jge
xchg
ret
daa
lock
adc
or
out
jmp
stos
andb
sub
in
fbstp
loope
out
mov
clc
mov
sbb
push
mov
in
das
in
repz
mov
sub
pop
inc
push
pop
arpl
mov
pop
push
push
mov
sub
data16
sub
outsb
push
xor
xchg
inc
sub
data16
inc
inc
ljmp
leave
outsb
stos
outsb
inc
mov
cmp
pop
jecxz
shlb
mov
mov
inc
pop
mov
dec
sbb
call
les
testb
rorl
xor
cli
jbe
lods
enter
loop
clc
subb
mov
in
jle
push
push
mov
fsubrs
cmp
sbb
xchg
sub
inc
xchg
lock
lret
adc
push
fdivrs
mov
cmp
mov
and
mulb
pop
pusha
jnp
sub
xchg
jns
cmp
and
test
clc
sub
pop
bound
mov
std
inc
pop
jns
out
push
push
fldl2e
pop
fwait
xchg
mov
pop
mov
psraw
dec
cmp
andb
aas
fildl
push
das
adc
jle
data16
jnp
pop
push
rcr
inc
push
add
cli
mulb
test
adc
jmp
sub
lahf
dec
insb
out
adc
push
stos
jb
enter
sahf
mov
mov
repz
fnstsw
lcall
mov
aaa
push
sbb
push
push
adc
dec
push
mov
int
jae
or
dec
cli
insl
mov
xchg
cld
je,pt
divb
ljmp
pop
push
mov
faddl
out
push
addr16
pop
ja
pusha
pop
lods
push
pop
and
add
rcr
into
add
pop
jne
cmp
lcall
in
mov
sub
push
popa
mov
inc
mov
inc
pop
fisubrl
push
icebp
push
out
ret
dec
ljmp
and
jo
add
call
and
sbb
gs
push
jo
testb
test
xchg
mov
or
push
push
mov
dec
mov
fiadds
ljmp
adc
jge
xlat
sbb
or
cmp
in
jnp
notl
insb
inc
stc
inc
pusha
mov
or
pop
push
out
sub
sbb
mov
push
test
push
push
cwtl
loop
fsubs
mov
out
push
add
mov
fimull
pop
or
gs
pop
inc
ficoms
mov
insb
sub
shr
arpl
xor
add
jl
xchg
dec
adc
cmp
iret
je
mov
pop
clc
sahf
adc
mov
imul
aad
adc
shlb
nop
mov
je
das
and
xor
popa
lods
mov
movsb
push
add
adc
shrl
je
arpl
mov
and
push
dec
cmp
inc
cmp
ds
mov
ret
repnz
clc
jmp
lahf
cmpsl
out
push
ror
and
fists
es
add
xchg
add
incb
sub
lds
and
or
pop
iret
ret
mov
mov
shl
lea
cltd
dec
mov
aaa
insl
pop
inc
pop
pop
mov
push
jp
cwtl
add
test
mov
ret
subl
push
dec
je
xchg
jbe
fwait
push
bound
fnsave
test
daa
mov
jg
adc
inc
nop
xor
xchg
push
imul
daa
pop
cmc
cli
and
jae
scas
adc
pop
pop
outsb
xchg
cld
jno
adc
jl
add
jns
loopne
fldenv
xchg
fisubs
std
or
sub
arpl
push
mov
ret
push
cmpsb
mov
mov
adc
outsb
mov
jmp
xchg
or
cmp
inc
mov
sbb
push
push
aas
jo
popa
test
mov
or
pop
jo
jge
sub
int
jb
js
cmpb
pop
xor
fsubrs
and
es
mov
xchg
rcrb
and
mov
or
xchg
and
xor
pushl
mov
or
fcoms
stos
push
lcall
daa
dec
xchg
mov
lds
dec
fcmovbe
or
xchg
ret
xchg
and
pop
das
mov
sbb
aas
adc
pop
sti
clc
jecxz
rclb
inc
lds
adc
aad
es
jno
fsts
rorb
xchg
in
insb
cmpsl
stc
gs
xlat
jmp
mov
inc
mov
cwtl
jl
pop
cli
xor
aad
jnp
cmp
dec
or
pop
clc
ss
dec
jecxz
pushf
xchg
paddsb
jge
and
mov
bound
fmuls
iret
cmp
mov
inc
in
clc
out
loopne
dec
cs
or
jg
sahf
jp
movb
xchg
fld
push
adc
cli
push
add
pop
gs
int
inc
mov
mov
int3
jnp
mov
xchg
lahf
ja
cmp
addr16
push
xchg
pop
in
jnp
lods
mov
fdivrp
jmp
lcall
cmp
dec
sub
vmovq
mov
insl
inc
ljmp
mov
shll
pop
jnp
gs
cmc
dec
xor
bound
pop
jbe
arpl
cmp
int
idiv
sbb
mov
dec
xor
pop
outsl
repnz
sarl
cmc
cmp
imul
add
adc
icebp
jne
outsb
sbb
xchg
imul
sub
ss
push
aas
xlat
jg
lret
or
push
adc
jns
aas
cmp
jne
jg
or
fldenv
push
xor
push
xor
adc
jno
xchg
ret
jmp
ret
not
imul
mov
push
in
ret
gs
sub
jmp
cmp
sbb
subb
insb
inc
mov
data16
dec
pushf
mov
mov
adc
jl
repz
jne
aam
or
mov
std
dec
out
lods
xor
into
pop
rcll
mov
push
lods
sti
or
cmpl
fwait
pop
jmp
pop
pop
mov
iret
stos
xchg
sbbb
movsb
jae
or
sbb
cmp
ja
jo
aas
inc
xlat
shlb
xchg
mov
adc
jae
fdecstp
xchg
push
test
aaa
andb
jns
sub
es
js
mov
fs
lea
inc
jbe
jle
int3
in
cmpsl
rcl
mov
mov
push
mov
jg
cmc
fcomps
cmpsl
addr16
fisubrs
aad
jne
addl
popa
sahf
sti
jg
push
mov
pop
imul
lret
xor
xor
fs
mov
push
push
pop
jae
out
jg
push
xor
inc
dec
test
pop
xchg
gs
dec
xor
outsb
mov
loopne
ficomps
push
sar
jmp
bound
inc
adc
push
hlt
sahf
jecxz
ja
popa
fistl
and
lods
add
push
dec
cmpsl
fisubs
in
test
bound
sub
sbb
scas
inc
mov
nop
fidivs
stos
loope
xchg
cld
xchg
jnp
aam
mov
mov
stos
fildl
and
mov
test
push
or
fildl
sbb
fwait
cld
pop
mov
int
or
fwait
inc
add
sub
mov
push
pop
dec
cmp
adc
pop
into
mov
sbb
add
loope
xchg
insb
adc
or
ret
push
lock
push
and
mov
add
jae
mov
cmp
mov
cmp
idivb
stos
jle
push
push
sbbb
rcl
xor
lahf
flds
adc
mov
into
jne
sub
xchg
cmp
int3
stos
gs
mov
cmpsb
or
loop
and
loopne
sbb
fimull
insl
movsl
xor
xor
je
mov
mov
ja
insl
or
sbb
or
or
dec
and
dec
repnz
scas
sbb
xchg
lret
enter
inc
push
addr16
lret
pop
pop
in
inc
and
xor
xchg
out
loopne
loopne
mov
cld
iret
cmpb
mov
addr16
pop
out
gs
fs
in
adcl
cmp
pop
push
icebp
addr16
test
es
add
js
inc
insl
jno
loopne
push
ret
jne
mov
jge
pop
ja
sub
fmuls
enter
and
test
dec
gs
in
pop
and
and
les
sbb
out
jbe
fstp
hlt
inc
inc
xchg
fists
fbld
dec
daa
cmpl
nop
movsb
add
xor
test
in
pop
xchg
cmp
mov
in
aas
loopne
pushf
mov
jmp
das
insl
mov
sbb
aad
in
mov
jbe
adc
aaa
fwait
nop
sarb
lcall
jmp
insb
pop
lods
cmove
stc
or
sub
pop
mov
mov
xor
lea
inc
std
pop
imul
mov
mov
je
insb
jo
mov
jp
jb
insb
stos
sarl
add
inc
sti
cwtl
sbb
clc
pop
xor
mov
mov
cwtl
lahf
mov
mov
cmp
mov
add
xchg
push
xchg
in
stc
clc
xchg
and
scas
pop
cmc
mov
cmc
movsl
popa
sahf
xchg
cltd
icebp
loope
fisubl
stos
gs
fwait
and
fidivl
fcomp
mov
lds
xchg
mov
xor
jge
lcall
roll
mov
test
sti
push
fldt
push
mov
add
adc
sbb
je
dec
cmp
xchg
jbe
jmp
mov
inc
fiadds
and
pusha
xchg
outsl
adc
das
xchg
mov
mov
add
lods
mov
rolb
lock
lcall
sbb
jl
test
jl
xor
call
aas
inc
or
enter
xchg
ret
cmp
popa
jl
xchg
les
fnsave
dec
sub
mov
insb
fisttpll
fnsave
incb
mov
jae,pn
cmp
sub
fsubr
dec
jl
nop
mov
cmp
mov
addb
push
jle
xor
cs
call
pop
sub
pop
mov
dec
les
movsl
cltd
lret
and
mov
mov
je
out
jne
mov
repz
mov
psubsw
aam
and
push
imul
rep
inc
mov
jns
data16
test
stc
mov
ss
divb
adc
cmp
dec
cmp
aas
dec
inc
pop
pusha
jg
xchg
mov
test
jle
lea
pop
cmp
shlb
roll
bound
sub
lcall
push
mov
lcall
xor
cmp
mov
adc
pop
jg
inc
jle
cmpl
jbe
pop
int
or
inc
pop
shrl
rorb
inc
insb
sbb
push
cmpsl
in
rcrb
adcb
and
rcll
cltd
rcll
fs
aaa
sub
hlt
scas
mov
into
stc
imul
push
loope,pt
mov
jb
stos
hlt
pop
lcall
ss
pop
in
jle
flds
or
call
std
pop
and
push
sub
mov
or
pop
aad
add
dec
cltd
js
inc
in
mov
jmp
adc
pushf
fsubrl
ljmp
nop
mov
or
pop
addr16
mov
mov
cmpsl
stos
cmp
lods
jp
outsl
daa
pushf
adc
lret
adc
mov
xchg
fwait
push
in
xchg
jns
mov
mov
or
dec
fucom
add
mov
adc
rcrl
aaa
nop
loop
sub
push
cld
mov
fsubrl
cwtl
into
idivb
push
lcall
jns
ljmp
out
pop
insl
mov
pop
dec
inc
mov
jae
js
out
outsl
dec
push
xchg
sub
sbb
frstor
inc
mov
push
xchg
mov
dec
push
arpl
or
loop
xor
jp
icebp
in
popa
cmp
iret
push
jae
xchg
push
xchg
pop
aas
js
jmp
cmp
pop
push
and
bound
mov
cmc
xor
arpl
cli
dec
xchg
movsl
mov
mov
mov
sbb
mov
mov
jp
xor
out
push
jle
icebp
lods
in
sub
sub
push
ljmp
jnp
mov
out
clc
jb
xor
add
sbbl
pop
fisubs
add
popf
arpl
xchg
mov
and
out
dec
fstpt
cmp
test
imul
popa
je
mov
sbb
in
das
inc
cltd
xor
rcrb
mov
sbb
pop
pop
lret
je
xchg
ret
xlat
push
sub
sbb
or
decb
jbe
lods
loopne
subb
cwtl
fwait
inc
xchg
xchg
outsb
fcmovnu
test
push
fisubs
daa
and
test
xor
cmp
pushf
or
and
ret
clc
xchg
mov
rolb
jmp
hlt
xchg
loopne
sub
jge
popf
loopne
xor
inc
cmp
bound
jmp
cmp
test
xchg
shl
xchg
add
dec
js
scas
pop
adc
adc
pop
mov
shr
fdivl
add
jmp
cmc
sarb
in
imul
mov
xchg
xchg
cmpsb
xchg
js
fstpl
mov
dec
push
imul
cmc
mov
and
mov
adc
aad
or
and
mov
or
mov
push
sbb
jmp
xor
mov
test
xchg
cmp
cwtl
stos
imul
or
and
je
pop
dec
pop
lock
pop
cmp
add
push
std
ds
shlb
jns
jb
push
movsb
jne
fstl
ljmp
sub
rorl
or
fs
testb
or
sub
lock
addr16
cmp
cmp
inc
std
aam
shl
fnstenv
sbb
sbb
test
and
inc
push
push
dec
xor
add
inc
aad
adc
outsb
adc
lods
xchg
xchg
ss
jg
mov
xor
mov
stos
inc
mov
cs
mov
imul
jns
adc
or
push
cmp
js
stos
mov
jge
fcoms
mov
daa
mov
enter
dec
idivl
xchg
aam
push
jns
and
mov
popa
or
pop
push
gs
mov
stc
xor
xchg
ljmp
fdivr
rep
mov
lret
test
test
imul
std
inc
rol
outsb
test
iret
xchg
dec
cmpsb
ss
push
or
push
mov
test
xor
push
out
mov
xchg
and
xor
inc
imul
pushf
or
push
adc
mov
ret
pop
cli
data16
and
ss
pushl
or
mov
repz
mov
push
inc
adc
dec
add
repz
or
jmp
lods
sahf
pop
rclb
adc
cmc
sub
sbb
lods
fstp
icebp
or
ret
lahf
lea
mov
insb
sahf
xor
ds
insb
int
loope
and
push
pushf
fwait
ret
mov
mov
test
cld
mov
mov
dec
test
jecxz
add
stos
mov
out
pop
mov
pop
mov
fsubrp
mov
enter
push
push
jnp
std
lahf
or
or
fwait
test
stos
and
or
xchg
out
mov
push
stc
pop
and
or
pushf
sub
cmp
mov
jne
aaa
ffreep
insl
cmp
adc
jl,pt
fs
ret
or
sub
rorb
mov
and
or
mov
mov
enter
xchg
mov
mov
jmp
and
shll
subb
fwait
stos
sbb
sbb
rol
test
cld
push
in
pushl
pop
jmp
mov
mov
mov
jecxz
sbb
mov
aas
cmc
xor
clc
xor
sahf
xchg
pop
fildl
xor
leave
out
cmp
int3
adc
repz
push
jns
divl
mov
and
and
sti
rolb
cltd
imul
dec
jge
pop
xor
xor
js
xchg
jb
clc
ja
out
push
fisubrl
cmp
cmp
xchg
sub
subl
cmp
dec
nop
jb
int
cmp
xor
insl
aaa
adc
jae
sub
pop
les
in
das
mov
aas
sbb
sbb
sub
push
cmp
jg
sbb
in
adc
imul
andl
rcl
push
push
aaa
mov
cmc
and
ss
adc
mov
dec
push
outsl
das
into
in
dec
cmp
mov
push
rcrl
inc
or
xchg
out
jle
dec
inc
add
or
mov
pusha
aaa
or
mov
push
jo
inc
jo
out
push
xor
inc
scas
divl
mov
mov
inc
js
aaa
gs
sbb
sub
xchg
in
inc
daa
rolb
loopne
ret
dec
mov
inc
mov
repnz
add
jb
mov
ds
outsl
loop
fdivr
dec
fnstenv
fidivs
outsl
xor
add
rcrb
repnz
popf
pusha
loope
pop
leave
xor
jl
iret
mov
add
mov
push
xchg
rorb
scas
sub
xor
xor
ds
enter
or
sbb
incl
shlb
movsb
inc
mov
or
sbb
xlat
adc
pop
ret
js
out
shrb
ds
int
cs
jecxz
nop
popf
push
inc
mov
jno
mov
lods
cmp
pop
cld
and
in
push
int
popa
fwait
push
push
sub
in
push
cmp
xchg
mov
icebp
roll
dec
shr
rorb
jne
inc
movsb
cs
jbe
pop
or
sbbb
aas
jecxz
lret
or
mov
xor
fwait
inc
test
arpl
xchg
rcrb
incb
push
dec
jp
mov
call
fs
or
mov
jae
xchg
or
aam
lret
arpl
sarl
rorl
rorb
lea
cmpsb
cwtl
outsb
xlat
push
inc
add
or
pop
mov
shl
shrl
push
push
adc
jp
jae
add
int3
xor
mov
hlt
movsb
pop
cmc
bound
fldenv
mov
inc
fisubrl
inc
sub
adc
cmp
lahf
sub
sbb
bound
cltd
fidivl
cld
xchg
jno
inc
addr16
cmp
adc
xor
xchg
jae
idiv
sub
in
sahf
or
push
xchg
push
mov
cmc
xor
inc
cmp
sbb
int3
int
cltd
jne
ljmp
adc
mov
incl
sbb
enter
adc
mov
jecxz
adc
add
loope
pop
mov
pop
pop
cmp
mov
vandnps
out
jmp
and
jge
addr16
outsb
adc
sub
mov
int3
and
inc
xor
fadds
hlt
cmp
fdivrl
movsb
je
imul
lods
mov
stos
and
mov
xor
push
cltd
mov
add
mov
cmc
xor
mov
cmp
cli
or
cmp
in
add
mov
mov
or
adc
mov
in
xor
push
xor
dec
iret
mov
mov
out
mov
scas
sarl
push
mov
inc
pushf
pop
stos
fistpll
cmp
push
ss
rolb
fisubrs
stos
pop
lcall
and
jp
loopne
mov
pop
xchg
inc
mov
enter
dec
lret
aas
dec
jne
mov
repnz
push
stc
lahf
in
clc
pop
ret
fcmove
popf
test
js
loopne
jns
jge
out
jp
mov
in
push
les
xorb
vmwrite
popa
mov
xchg
dec
xchg
push
stc
mov
movsl
mov
cmp
add
mov
mov
pop
jp
std
out
pop
ljmp
push
outsb
jbe
xlat
into
lods
cltd
add
push
and
adc
test
inc
leave
movsb
in
sbb
push
pop
fisttps
jnp
shll
pop
faddl
loopne
outsb
jnp
pop
or
xchg
push
xchg
out
or
arpl
xchg
sub
cmp
pop
mov
mov
inc
aas
add
idivb
jg
add
ljmp
dec
data16
mov
lds
jne
das
adc
cld
add
stos
sub
or
rcrl
inc
cmpsb
xor
xor
mov
filds
inc
subl
popf
jecxz
iret
dec
adc
jmp
xchg
movsl
iret
inc
add
dec
cld
shll
out
fistps
in
jp
imul
movsl
insb
mov
ja
call
xchg
pop
jle
loop
movsl
jg
xchg
pusha
imul
mov
mov
sbb
aam
jle
pop
orl
leave
jge
jl
cmc
pop
mov
push
dec
and
adc
mov
xchg
sbbb
cmc
jecxz
or
movsb
sub
pusha
daa
jle
inc
mov
xor
insb
dec
sti
imul
call
cmpsb
fcoms
jo
pop
mov
sbb
jno
pop
push
jbe
sub
sbb
movsl
inc
push
loope
jp
cmpsl
rcl
pop
imul
xor
add
sub
add
dec
mov
sub
mov
ror
dec
mov
lret
add
lods
sbb
mov
in
sti
add
pop
call
iret
dec
push
mov
shlb
mov
mov
aaa
mov
jns
pop
mov
cmp
jno
aam
and
hlt
data16
clc
ret
pushw
vmread
adc
ret
mov
rolb
jle
mov
shr
shll
mov
mov
add
mov
mov
ret
or
adc
in
nop
stos
in
lcall
test
iret
dec
test
pop
ror
out
jmp
in
pop
es
shlb
loope
js
sbbl
shll
pop
or
pop
mov
mov
mov
jp
fcomps
out
xchg
stos
test
rol
loop
or
jge
leave
insb
faddl
movsl
push
fsub
data16
shrl
ret
xor
jge
or
sbb
mov
and
xor
sub
sbb
jns
sub
cmpl
jno
aad
push
lea
scas
outsl
add
pop
and
hlt
scas
lahf
inc
loopne
and
cltd
cli
mov
aam
dec
mov
pop
sahf
jo
cmpsb
aas
mov
push
icebp
stc
push
fstl
imul
imul
jo
sub
mov
sti
rcll
loop
test
cmpsl
aaa
inc
enter
or
add
movsl
push
sub
pop
out
cwtl
xchg
xor
loop
rorb
jns
loopne
std
mov
and
decl
push
mov
ja
cmp
cmc
das
sbb
out
jb
ss
inc
mov
fwait
in
outsb
loop
lods
add
addr16
int3
xchg
inc
push
and
inc
push
cmpsb
push
mov
xor
pop
adc
incb
jge
daa
mov
insl
or
iret
iret
adc
or
and
stos
xor
mov
add
or
xchg
push
negl
clc
sbb
mov
push
inc
lret
jp
xchg
cmp
je
jge
outsb
scas
or
roll
jmp
add
test
xchg
sbb
insb
lds
out
inc
fistps
sbb
pop
push
js
fsubr
stc
sbb
mov
fucom
cmp
fdivs
mov
pop
mov
xor
sahf
out
inc
scas
cmp
add
rcl
negl
vpsubsb
aad
cmpb
ss
lcall
push
scas
sbb
pop
jno
aam
xchg
mov
xchg
aas
adc
loopne
in
pop
lea
adc
sbb
mov
adc
stc
mov
mov
pop
ss
mov
rorb
into
sub
jmp
nop
dec
sbbl
inc
test
loope
push
pop
xor
outsl
cltd
cmp
loopne
push
cmc
lea
adc
mov
ja
mov
mov
bound
or
aam
inc
in
pop
mov
or
or
lret
lret
std
adc
xor
outsl
xlat
mov
add
xchg
fcmovb
rcrl
jmp
lds
fcoms
shl
lret
loope
or
xchg
push
push
sbb
pop
or
lcall
push
sbb
pop
gs
jmp
mov
jg
iret
repz
mov
imul
aam
xor
cmp
adc
scas
jg
sub
ror
js
or
xchg
aam
ljmp
aas
xchg
cmp
orb
xchg
lcall
xor
test
jae
mov
test
pop
xor
push
mov
dec
shl
xchg
sahf
test
jne
sbb
adc
out
imul
xchg
inc
mov
sbb
outsl
jae
cmp
popa
inc
fcomps
add
and
pop
dec
out
test
cmp
dec
jp
pop
xor
cmpsl
push
arpl
insb
push
popa
adc
je
and
cmp
sbb
push
out
ds
lcall
jae
div
movsl
out
enter
push
mov
lret
cmp
push
in
pushf
sub
mov
mov
cmpsb
scas
inc
scas
les
jne
lods
cmpsl
mov
test
gs
movsl
mov
adc
adc
xor
or
sbb
add
ficompl
add
mov
jnp
mov
and
mov
sar
mov
imul
fisttpll
je
xor
pop
sbb
push
stos
fistps
xchg
in
movsl
inc
mov
clc
js
lock
into
add
out
dec
sub
je
scas
rclb
mov
divl
packssdw
add
sub
mov
pop
in
in
lea
jbe
add
and
insb
loopne
jbe
push
sub
sub
inc
dec
testb
pop
pop
or
lock
int3
aas
in
in
loope
in
ja
xor
dec
mov
push
cltd
xor
mov
lret
sbb
ss
push
xor
cmc
add
push
imul
sti
lds
mov
jg
sub
lds
push
and
stos
adcl
jnp
std
test
sahf
imul
aam
adc
xor
cltd
cmp
das
sbb
and
addr16
fcmovnb
jge
mov
out
jbe
cwtl
clc
inc
popa
mov
mov
xchg
or
mov
add
dec
daa
icebp
jge
jmp
aaa
lock
test
cs
leave
pop
mov
dec
aad
jmp
and
sbb
ret
inc
cmp
cltd
ret
xchg
xchg
pop
cmpsb
outsl
out
or
sbb
jno
cli
int
sbb
and
lock
mov
daa
xor
ja
mov
push
sbb
jb
pop
pushl
mov
pop
testl
dec
jl
inc
adc
ss
imul
mov
pop
lock
cmp
aaa
xor
jmp
add
and
std
xor
sub
xchg
scas
pop
or
cli
xchg
out
or
xor
cmp
xchg
cmc
push
sub
sub
es
inc
adc
cltd
mov
fildll
jne
xor
or
je,pn
pop
clc
fisubs
pop
xchg
rcll
outsb
loop
pop
out
imul
loop
iret
xor
jge
cmp
aad
clc
out
das
lcall
out
xor
arpl
adc
rolb
or
or
out
fidivs
push
add
adc
and
fs
push
push
lds
adc
push
adc
sub
cs
mov
mov
scas
stc
dec
cmp
xor
fsubl
add
call
add
movntq
mov
pop
or
jae
xlat
mov
add
mov
or
adc
adc
leave
pop
jno
shl
fcoml
pop
aas
mov
ljmp
popf
ja
push
lea
sahf
mov
pushf
in
xchg
push
dec
stos
xor
jae
xchg
stos
adc
aad
cwtl
mov
push
jl
das
out
repz
push
cmp
mov
inc
in
xor
pop
lcall
lahf
mov
add
sahf
test
or
add
sub
sbb
mov
adc
sbb
nop
jne,pt
leave
int
das
sub
xchg
fmuls
fldenv
push
incb
pop
lret
dec
and
pop
cmpsb
cmp
or
ds
xchg
cmp
aam
loope
fs
and
jge
enter
mov
ds
out
test
daa
sbb
xor
mov
iret
inc
push
adcl
sub
xchg
je
in
fwait
jb
test
outsb
sub
movsb
cmp
rolb
push
push
es
lock
lcall
in
loop
ror
xchg
pop
arpl
shrl
xor
jmp
xor
xor
adc
mov
push
rclb
fsubs
sarl
xchg
dec
adc
adc
cwtl
mov
inc
rorb
jle
popa
das
scas
xchg
pop
icebp
mov
jbe
or
mov
shll
cs
mov
sbb
jp
test
out
cmp
push
sahf
stc
mov
daa
pop
aad
inc
int3
aad
std
jge
fs
pop
shll
ret
les
push
data16
aas
ret
jns
sub
sub
mov
push
mov
cmp
mov
dec
es
mov
mov
insl
push
jge
lret
adcl
pop
cmp
daa
cwtl
mov
fs
xor
ret
in
push
jbe
std
pop
shlb
cs
push
mov
mov
pushf
idivl
cmp
out
and
in
int3
add
cmp
jmp
mov
push
xor
lods
subl
xchg
test
adc
push
adc
cli
inc
pop
test
xorl
clc
push
mov
add
cmp
adc
xchg
cmp
jmp
fdivs
pop
xor
lret
dec
push
sahf
xor
cmp
inc
xchg
add
mov
insb
out
pop
push
addr16
fiaddl
cltd
sbbl
sti
push
push
enter
adc
insl
add
rcrl
in
int
inc
push
fistps
and
aam
lock
pcmpgtw
loope
mov
insl
rcrl
dec
icebp
mov
imul
loopne
test
mov
jbe
and
cmc
cld
mov
add
dec
cmp
jle
scas
cmc
push
add
cmp
in
mov
repz
scas
xchg
mov
ljmp
fildll
hlt
dec
inc
shrl
sub
or
xlat
mov
popa
xor
mov
dec
push
xchg
subl
push
mov
popf
js
push
icebp
filds
mov
aam
sub
push
cmp
pop
push
add
push
ffree
mov
fisubl
daa
mov
or
pop
cli
aam
jnp
lahf
inc
loop
rorb
cmp
push
sar
fucomip
loop
leave
movsl
xchg
lods
xchg
adc
call
int3
inc
push
jo
mov
imul
push
push
insl
fildl
loope
mov
push
inc
inc
lods
sub
arpl
adc
cltd
jl
adc
jg
adcl
das
jl
xor
mov
add
aam
testl
or
dec
xchg
push
shrl
sub
dec
push
shll
push
nop
mov
ja
jg
cli
addr16
pop
pop
rcll
push
lods
and
lret
ljmp
mov
lcall
push
adc
adc
cmp
js
sbb
xchg
inc
shlb
xchg
mov
push
cmp
pushl
stc
cld
adc
push
fdiv
xlat
adc
sbb
movzwl
pop
lods
xchg
mov
scas
hlt
jmp
pushf
cltd
cwtl
pop
nop
adc
jg
sub
shlb
jno
mov
add
mov
les
cld
mov
stos
jne
leave
ljmp
adc
in
mov
xor
mov
lret
inc
subps
outsl
jg
cmpb
jge
test
jbe
insl
sub
lock
pushl
cmc
cwtl
inc
movsb
and
imul
in
sbb
movsl
loopne
jmp
loope
mov
daa
dec
aas
jae
sub
mov
lret
out
iret
jecxz
js
mov
fwait
push
outsb
cld
cltd
in
mov
mull
cltd
mov
aad
aas
scas
jecxz
fwait
xchg
sarb
inc
dec
enter
sti
test
outsb
test
push
and
or
decl
lock
loopne
dec
add
xor
cs
ja
cwtl
cmp
xchg
jl
mov
pusha
or
push
jne
imul
pop
arpl
mov
mov
pop
das
and
repnz
mov
je
or
jg
test
fistps
jmp
or
fs
fs
mov
test
push
dec
stc
mov
fwait
test
inc
add
or
aad
or
push
cmpsl
jb
in
in
mov
xor
icebp
popf
ljmp
mov
loop
sub
mov
xchg
pop
push
add
xchg
pop
or
shlb
cmpb
pop
cmp
enter
popa
mov
push
loop
push
clc
lcall
inc
into
dec
loope
mov
pop
addr16
xchg
and
adc
imul
shr
mov
mov
mov
and
adc
cmpb
mov
cmpsb
inc
lea
int
negl
mov
popl
test
icebp
in
lret
fndisi(8087
aaa
mov
aad
xor
das
faddl
push
out
popf
in
push
push
lds
sbb
fs
push
rcl
pop
int
push
test
pop
mov
stos
cmp
mov
cmp
scas
jmp
or
sub
or
mov
das
push
mov
mov
mov
dec
sub
popa
mov
out
shr
or
psadbw
cltd
frndint
test
cmp
movsb
pop
add
orl
jo
cwtl
xchg
ds
xorl
cmp
into
lret
fisttps
jmp
sbb
push
jecxz
xchg
jecxz
inc
pop
std
test
lods
jnp
pop
and
lret
scas
out
add
aad
push
mov
in
pop
inc
xchg
add
mov
xchg
jae
cmp
inc
aas
cmpsl
roll
fisubrs
test
dec
mov
mov
inc
adc
outsb
and
pusha
sbb
add
inc
xchg
fmul
jge
repz
dec
cmc
sbb
nop
pop
sbb
add
xlat
imul
sbbl
cwtl
idivl
aaa
pop
lret
call
sbb
sbb
sbb
jmp
or
stos
xor
or
sbb
jmp
mov
lds
jecxz
push
or
int3
in
pop
movsb
adc
xchg
mov
dec
mov
inc
cmpl
sti
loope
cs
pop
xorb
lock
cmp
push
addb
mov
incl
fsubs
push
in
mov
mov
pop
and
pusha
aad
jmp
add
arpl
jae
shlb
push
fnstenv
aam
mov
jnp
cmpsb
mov
sub
iret
inc
std
and
pop
sub
test
and
leave
shrb
xchg
mov
in
enter
adc
cmp
or
adc
in
add
add
imul
mov
mov
push
dec
pop
call
lods
fisttpl
bound
xchg
leave
inc
sbb
pusha
pushf
sub
mov
dec
adc
cmp
mov
push
cmc
divl
pop
jnp
fmulp
imul
and
push
and
or
ss
xchg
lods
adc
pop
cltd
je
sti
push
push
clc
clc
icebp
sbb
mov
sbb
push
inc
mov
mov
leave
dec
add
push
pop
lcall
pop
pop
sub
mov
xchg
ja
xchg
in
pop
or
add
leave
movsl
stos
mov
mov
stc
adc
in
test
fsubrp
jge
sub
push
xchg
inc
test
sbb
mov
pop
jo
pop
movsl
xorl
push
mov
or
dec
xchg
sbb
mov
sahf
mov
testl
cmpsl
in
aas
js
insl
jae
add
xchg
and
sub
shll
dec
sub
xchg
mov
cmc
gs
scas
mov
or
stos
and
movb
aas
and
sbb
outsb
fbld
sbb
pop
add
mov
test
xor
sti
dec
cmp
roll
pop
dec
push
lcall
sarl
push
sbbl
push
jg
negl
mov
fnstenv
inc
repnz
negb
rclb
idivb
idivl
cmp
ret
push
addr16
repz
pop
pop
repz
lcall
pop
fstl
popf
push
mov
add
dec
jns
test
mov
cmp
mov
cwtl
dec
sbb
sbb
inc
pusha
gs
add
dec
movsb
pop
imul
cs
fidivrs
andb
rcrl
aas
mov
pop
sbb
sti
xchg
shrb
mov
add
out
pop
and
xchg
fisttpll
add
cmp
push
aam
mov
outsl
inc
jmp
rclb
jo
dec
rclb
loop
cmp
cmp
adc
adc
mov
incb
sbb
push
sbb
or
mov
mov
mov
or
imul
jne
cmp
push
sbb
outsl
pop
inc
loope
dec
and
cltd
lret
jmp
jecxz
stc
iret
adc
mov
dec
mov
push
inc
sbb
clc
mov
sub
daa
add
adc
mov
sub
cmp
jno
pop
test
adc
in
mov
cli
push
xchg
lret
inc
inc
pop
pop
cmc
je
rol
dec
or
icebp
jle
cmp
dec
int
cmc
add
cmp
fmuls
or
mov
loopne
add
loopne
lods
push
shlb
xor
cmc
mov
jge
fistps
rcrb
dec
jg
lea
add
pop
mov
jno
sbb
shl
pushl
push
cs
movsb
push
inc
cltd
cmp
mov
dec
loope
mov
into
js
inc
mov
jg
ljmp
icebp
mov
xor
faddl
lret
fs
pop
adc
push
sub
ret
orl
loopne
hlt
push
mov
inc
flds
arpl
mov
das
mov
aad
and
int3
xor
jp
xchg
xchg
jno
cmp
mov
push
add
cwtl
rolb
adc
movsl
mov
add
xchg
rcr
pop
dec
hlt
loopne
and
mov
cs
ss
fisttpll
lock
arpl
mov
jg
jp
jl
push
adc
inc
ret
lret
outsb
pop
inc
outsb
ret
arpl
pop
or
mov
out
inc
pop
jns
sub
lds
xchg
mov
je
addr16
mov
outsb
jg
data16
cmpsb
js
inc
pusha
cld
adc
mov
mov
jo
mov
adc
inc
loop
pop
movsb
cs
aaa
rolb
cli
fdivp
in
xor
test
push
or
fldenv
ss
pop
push
jns
pop
in
adc
mov
mov
test
mov
mov
mov
jae
dec
xchg
and
or
fisubl
sub
xor
add
or
ret
pop
inc
sahf
lahf
inc
sub
orb
mov
and
and
cmp
mov
push
ret
xchg
les
ljmp
or
mov
das
lret
xchg
imul
data16
push
decb
out
ret
lods
sub
xor
sbb
adc
hlt
in
es
iret
jle
mov
movsl
or
add
inc
push
sub
mov
int
cli
scas
lds
sbb
pop
fisttps
dec
fs
mov
enter
and
mov
pop
mov
nop
adc
cmp
sahf
and
xchg
cmp
add
es
xchg
addr16
and
test
adc
mov
push
push
xchg
jnp
cwtl
dec
nop
push
aam
incb
mov
jp
rolb
cwtl
mov
and
in
and
lock
cmp
enter
sbb
dec
call
out
mov
inc
inc
sbb
jg
shlb
pop
xchg
sahf
and
jge
lahf
ret
mov
push
aas
and
mov
sahf
mov
rcrb
jno
push
adc
mov
sub
sub
test
outsb
pop
shr
lock
dec
jle
mov
enter
data16
loop
and
rcll
dec
xchg
aam
inc
test
push
push
lods
lock
xorb
clc
enter
lods
xchg
addl
adc
sub
push
push
or
jg
and
mov
andl
icebp
mov
xor
push
xor
xor
jno
push
leave
sub
mov
repz
shr
add
aas
sub
subb
mov
je
gs
fsubrp
call
fisubl
out
inc
ret
int3
pop
pop
ds
ds
sbb
addl
lods
lret
inc
lock
pushf
das
iret
or
gs
mov
mov
loopne
daa
mov
mov
xchg
push
inc
loopne
cli
cmp
push
or
sti
xor
or
testl
call
inc
in
test
imul
push
fld
jle
push
cmp
popa
imul
xchg
lret
or
daa
sbb
or
ja
jle
lds
pop
or
mov
inc
ljmp
adc
out
idivl
fstps
insb
sbb
ja
sub
push
add
gs
push
and
faddp
adc
into
mov
rcl
mov
test
out
jno
push
mov
lock
xor
or
pop
jns
cld
mov
jns
xor
xchg
inc
outsl
nop
jnp
cs
mov
push
in
push
mov
std
lret
testl
pop
insb
inc
push
std
ss
enter
cld
aam
imul
gs
gs
dec
xor
sbb
bound
pop
push
pusha
hlt
out
add
sahf
sbb
mov
mov
mov
cmc
push
clc
inc
push
pushf
lock
ja
std
lea
addr16
mov
pop
ja
sbb
shlb
sahf
inc
std
jmp
cmpsb
push
fs
in
sti
add
out
pop
push
pop
jmp
pop
xor
adc
pusha
push
sti
mov
pop
sti
cwtl
repz
repnz
test
dec
adc
fwait
into
inc
popa
rorl
repnz
dec
xchg
call
push
xor
lds
and
jp
mov
leave
inc
inc
fstl
jb
jmp
rorl
cmc
out
roll
jbe
adc
push
mov
push
lret
mov
neg
subl
ret
fnsave
inc
repz
int
mov
hlt
sub
xor
dec
scas
jle
sarl
sbb
rclb
add
add
push
jnp
ds
movsl
or
mov
rcrb
ljmp
pop
push
mov
sbb
lret
push
or
je
jne
xor
push
jbe
fs
addr16
scas
xlat
sbb
mov
mov
xchg
xlat
out
mov
xchg
add
or
mov
orl
test
and
lods
jne
sub
push
int
loopne
out
test
scas
addb
imul
mulb
es
in
add
add
or
xchg
mov
lret
dec
jecxz
ja
or
jge
mov
push
cmc
pop
filds
loope
jae
in
cmpsb
in
adc
adc
mov
xchg
mov
jbe
movsl
mov
cmpsb
inc
or
sub
adc
lret
cs
sbb
icebp
lcall
int
jae
loope
mov
call
addr16
test
mov
bnd
push
push
lret
loop
xchg
insl
xchg
icebp
dec
xor
fbstp
out
mov
push
sbb
fisubs
das
gs
add
adc
jo
lcall
pop
sub
data16
xchg
add
movsb
push
pop
pop
cmp
repz
mov
dec
icebp
xorl
lret
sbb
shll
mov
pop
add
test
in
or
mov
push
xor
xor
rcrb
popa
aaa
shll
insl
push
stos
push
ljmp
adc
mov
pop
pusha
cli
divb
and
mov
data16
pop
mov
mov
testb
inc
das
popf
mov
lcall
dec
ret
jmp
cmp
fs
enter
push
dec
jnp
jl
cltd
dec
out
in
rolb
fistpll
dec
xor
push
pop
addb
jb
mov
adcb
rcll
mov
adc
push
mov
lea
dec
pop
adc
les
push
in
pop
mov
sub
enter
and
les
cmp
into
xor
and
xor
and
mov
mov
shrl
mov
sub
out
daa
nop
sahf
add
and
negb
ret
xor
call
adc
ret
fs
notb
jns
xorb
int
das
sbb
popf
stos
dec
pushf
adc
scas
shlb
xchg
mov
dec
and
jp
sarb
cmp
mov
mov
sbb
mov
and
jo
pop
sahf
movsb
fcomip
cmp
outsl
iret
pop
nop
clc
les
push
out
inc
enter
jnp
ret
cltd
jecxz
bnd
dec
mov
sbb
sbb
sub
mov
push
inc
scas
inc
add
cmc
arpl
insb
sti
in
mov
andl
jnp
push
inc
mov
mov
push
clc
sub
adc
stos
jo
ss
mov
loope
ds
jp
popf
add
jb
adc
addb
lods
sbb
jno
insl
or
mov
cmp
or
fldcw
inc
clc
xchg
mov
add
jp
out
rcll
xor
out
cmp
test
pop
lods
xchg
push
cmpl
pushf
in
scas
fidivrs
ds
test
pop
mov
add
sub
mov
jecxz
lahf
call
out
stos
and
gs
jecxz
jp
jns
xor
leave
aaa
jnp
dec
aam
mov
mov
xor
or
push
xor
sbb
cld
and
aas
or
nop
push
movsl
dec
test
xor
lds
lret
scas
je
nop
sub
loope
cmp
mov
in
push
push
add
pop
cmpsb
jo
inc
aam
movsb
jg
cmp
cltd
cmpsl
je
push
out
lcallw
loopne
popa
rolb
int
movsb
pop
stos
xchg
dec
pop
adc
mul
cmp
into
pusha
aad
xchg
push
mov
aaa
jns
xor
push
sbb
jae
test
xchg
fisttps
mov
cs
test
xor
loop
fst
dec
sub
jns
pusha
stc
sub
mov
mov
xor
pop
stos
hlt
nop
movl
int3
inc
xchg
dec
adc
cmp
mov
dec
push
dec
scas
xor
test
xchg
jbe
out
adc
lods
sub
ds
jo
lds
dec
cmp
fisubrl
jno
outsb
nop
popf
or
push
mov
mov
dec
jb
dec
push
pop
stc
inc
cmp
in
movsb
in
push
jle
inc
dec
insl
mov
arpl
cmp
or
inc
dec
add
cmp
add
sbb
xchg
adc
aad
add
pop
not
push
fldl
dec
pop
sqrtps
enter
loop
push
rcll
and
inc
cwtl
aaa
ror
fwait
clc
adc
jl
fldcw
sub
ss
lret
sbb
or
sbb
daa
push
stos
rorl
in
idivl
movsb
mov
leave
lcall
cmc
div
divb
clc
lret
xlat
arpl
loopne
js
inc
in
or
dec
shrl
jb
imul
dec
lock
mov
into
cwtl
jo
inc
cwtl
pop
test
jns
cmpsl
loope
sarb
mov
cmp
dec
and
fwait
push
cltd
insb
jl
jmp
cmc
out
popa
and
test
lods
lcall
sbb
test
and
dec
in
pop
ja
mov
jb
mov
fucomi
xor
mov
sbb
and
mov
cmp
jg
push
jecxz
imul
lock
outsb
push
jp
or
xor
in
add
inc
xor
adc
mov
push
aas
adc
mov
pop
les
jnp
mov
xor
pop
mov
aam
test
insl
sbb
sti
ret
out
pop
stc
cmp
sub
and
push
jle
fcomps
xlat
sahf
rcrb
rol
jns
mov
scas
fdivrp
jecxz
data16
clc
add
sub
dec
push
leave
xor
inc
sarl
xor
sbb
mov
insl
in
jle
cmp
sub
out
sarb
push
pop
cmp
xchg
mov
aam
xchg
rolb
popf
loop
in
stos
inc
stos
jg
sbb
mov
push
scas
outsl
inc
cwtl
stos
jle
inc
clc
jno
aad
push
push
mov
rolb
stc
cmpsl
mov
stos
jae
jbe
out
enter
lock
mov
imul
xor
pop
call
cmc
sub
xchg
mov
or
cmpsl
jae
enter
mov
or
mov
icebp
and
inc
jnp
dec
lahf
pop
lret
pop
inc
fldenv
xor
mov
adc
jo
jmp
std
add
test
push
xchg
mov
xor
and
or
outsl
mov
mov
clc
adc
xchg
xlat
shlb
push
mov
cmp
cmp
inc
fucom
rcll
mov
sbb
dec
push
aad
stos
pop
push
inc
in
loopne
pop
dec
movl
lods
pushf
clc
bound
insl
pop
sbb
lods
mov
mov
cmp
out
jecxz
mov
loopne
mov
xchg
add
jecxz
cwtl
jnp
cmpb
aas
popa
repnz
lahf
mov
cs
xchg
cmp
push
push
cmp
ljmp
sahf
stos
push
cmpsl
rclb
out
xchg
adc
inc
fsubr
cld
fidivs
adc
pop
and
and
in
push
rcr
cmp
bnd
fs
fidivrs
outsl
adc
fidivrs
pop
cmpsb
arpl
faddl
decl
push
xor
jno
mov
jle
mov
mov
js
or
cld
cli
insl
das
xlat
fs
out
add
adc
movsb
or
or
repz
xor
xor
push
mov
out
es
inc
out
call
push
mov
push
insl
scas
nop
test
xchg
loopne
push
inc
xchg
icebp
add
fnstsw
cltd
ds
fidivrs
cmpl
sbb
lret
jno
inc
mov
das
sahf
ret
jb
shrb
push
dec
xor
out
push
push
push
sbb
pop
add
jne
out
jge
add
cmp
jecxz
pop
ljmp
es
dec
mov
adc
test
mov
push
scas
outsl
enter
adc
push
mov
sub
push
or
jp
ljmp
xor
xor
mov
or
fdivrs
cltd
xchg
insb
mov
sub
jb
mov
sbb
mov
sbb
fildl
mov
in
cmp
loopne
mov
mov
jecxz
pop
out
fsubrs
mov
movsb
jle
scas
lock
test
daa
jl
fldenv
push
aaa
push
shll
jl
lods
push
lods
out
ret
loopne
sbb
sub
sbb
scas
mov
and
dec
mov
lret
xchg
mov
cmp
xchg
rorl
mov
sub
sbb
test
testb
lock
mov
push
mov
cmp
jnp
cwtl
cmp
push
dec
jb
adc
je
test
jge
adc
dec
xor
fldcw
dec
cmpl
lahf
cmp
sub
cmp
subb
jnp
pop
fmul
jle
popf
mov
mov
rcr
sbb
mov
xchg
leave
lock
cmp
xor
xorb
pop
lods
cmp
mov
xor
aam
clc
es
mov
dec
add
jae
in
jae
div
adc
inc
inc
adc
shl
aaa
data16
push
xchg
inc
cld
cmp
cmp
jns
lds
mov
sarb
test
jmp
insl
inc
lret
bound
js
adc
xor
enter
ljmp
mov
xorl
les
clc
filds
negb
out
fwait
inc
pop
mov
inc
or
adc
and
jmp
in
dec
mov
sbb
pop
dec
xchg
out
loope
adc
jno
lahf
arpl
int3
mov
je
insl
cmp
cltd
xchg
push
cmp
add
js
cmpsb
mov
mov
cmp
cli
test
fistl
ret
inc
les
movsl
jne
jns
xor
imul
clc
jge
mov
test
mov
in
sub
mov
mov
mov
push
dec
or
test
cwtl
fmull
movsb
shl
cmpsb
aam
repz
add
filds
out
or
out
push
or
ss
aas
sahf
aad
add
xor
insb
rcll
jne
adc
xchg
jecxz
lds
or
aad
push
aam
out
sub
add
mov
xlat
adc
push
cltd
hlt
pop
push
test
mov
aas
inc
movsb
mov
xchg
dec
dec
lahf
push
iret
inc
int3
es
pop
mov
xchg
add
fstp
leave
rclb
pop
fcompl
sbb
mov
pop
sbb
leave
in
pop
sbb
loop
ficompl
pusha
mov
jns
lcall
pop
and
mov
cmp
lcall
mov
imull
mov
xchg
and
mov
das
pusha
call
jmp
test
js
movsl
jnp
loope
cmp
or
sub
fwait
mov
test
cmc
xor
mov
add
adc
jo
popf
insb
jl
aaa
into
xchg
test
mov
clc
scas
jbe
dec
inc
pop
adc
mov
es
sub
cmp
stos
loopne
and
bound
aas
jmp
jbe
jo
ret
push
cmpsl
mov
push
stos
mov
ds
push
mov
xlat
int
adc
dec
sub
jae
push
loope
or
mov
int3
nop
adc
aaa
rcrl
adc
stc
xor
pop
mov
inc
sbb
adc
dec
leave
bound
add
add
mov
mov
repnz
sub
mov
push
xchg
adcl
inc
aaa
lods
sub
mov
push
outsl
imul
neg
mov
cmp
jg
mov
in
stos
shr
and
adc
mov
add
push
xchg
adc
sub
push
dec
std
fisubl
sub
cli
mov
jl
movsl
push
mov
icebp
outsl
and
ljmp
push
cltd
mov
enter
insl
repz
mov
mov
mov
addb
aam
jmp
jne
bnd
ret
in
inc
sub
fcompl
mov
mov
clc
seto
mov
orl
das
cmp
out
shrb
loopne
mov
inc
scas
divl
fwait
jp
int3
jl
rcll
negl
cmpsl
daa
aam
sahf
loope
xor
cmpsb
ds
push
pop
add
inc
in
xchg
call
mov
cmpsb
or
jecxz
mov
in
xchg
lods
mov
in
fistpl
arpl
sub
inc
mov
pop
out
push
call
fcompl
rclb
cmpsl
push
aad
pushf
mov
mov
lea
mul
mov
pop
inc
push
xchg
fsubp
pusha
ret
pop
mov
xor
std
jg
test
cmpsb
jne
sub
lret
push
xchg
fsts
roll
push
mov
movsl
pop
mov
mov
in
pushf
mov
clc
sarl
and
push
mov
imul
xor
insb
push
repnz
cmpl
xchg
add
pop
repz
mov
inc
fistps
jg
mov
clc
mov
mull
fdivrl
cld
int3
mov
data16
dec
outsl
xor
fildll
sbb
pop
cli
sbb
xchg
arpl
ja
int3
jnp
imul
mov
loop
stos
icebp
repz
mov
dec
mov
outsl
testl
andb
mov
xchg
cld
lea
jne
andl
pop
xchg
aam
int3
call
push
mov
xor
mov
outsl
out
inc
mov
xor
clc
or
add
out
adc
repnz
ss
xor
jb
cmp
enter
mov
imul
lods
scas
sbb
dec
ds
fwait
pushf
mov
aam
xchg
mov
jo
mov
xchg
ret
and
js
mov
dec
jmp
out
sbb
insl
or
rolb
xor
in
lock
or
inc
popa
sub
ljmp
pop
lods
jne
repnz
sahf
sti
std
cmpl
fstl
push
adc
movsl
stc
mov
jmp
test
push
adc
inc
das
in
aad
invd
cmp
mov
push
xor
xchg
push
xchg
es
aad
pop
mov
mov
test
jle
jp
mov
jbe
push
out
push
push
xor
in
xor
not
lds
setne
stc
ret
insl
gs
dec
jb
je
xchg
xor
or
inc
adc
and
cltd
mov
jae
cmpsb
pushf
mov
xor
cmpl
fidivrs
lods
xor
pop
add
ds
and
cmpsl
xorl
sub
cltd
divb
enter
push
push
icebp
rcrl
les
aam
push
cld
int
icebp
gs
inc
lods
xchg
icebp
mov
cmp
pop
std
mov
push
mov
jmp
mov
insl
sbbb
mov
mov
out
inc
mov
lcall
or
xchg
sbb
movsb
pop
mov
pop
out
mov
mov
imulb
fildl
dec
jg
xchg
push
adc
cmp
mov
sbb
dec
cmp
rcr
loop
cltd
out
leave
sbb
xchg
mov
loope
nop
push
cmc
sub
sarl
cmc
xor
mov
jbe
push
pop
push
sub
pop
pushl
cld
xchg
add
sbb
into
or
popa
test
dec
pop
jne
jmp
mov
loope
ljmp
in
aas
inc
jno
shll
out
in
push
addb
push
test
and
cld
inc
aad
scas
stc
in
push
loop
jecxz
sbb
pusha
mov
push
inc
nop
inc
loop
test
pop
jmp
cmpsl
mov
mov
das
push
xor
pop
jle
arpl
push
loopne
rclb
cld
out
xchg
mov
ss
int
pop
sbb
inc
pop
mov
js
pushf
rcrl
inc
test
fwait
lret
pop
ja
or
int
clc
fsubs
popf
in
dec
mov
fidivs
sub
das
mov
test
pop
adc
mov
outsb
mov
out
mov
fstpl
adc
out
jge
setp
lock
and
jne
adc
es
or
and
movsl
imul
cld
aaa
movsl
pop
arpl
pop
adc
popa
push
daa
gs
mov
fcoms
xchg
jmp
push
sbb
dec
icebp
pushf
dec
add
add
sbb
ja
ja
pop
cmp
ljmp
push
sarl
or
add
pop
xchg
and
dec
loope
divb
daa
lret
mov
jbe
repnz
pop
loop
cmp
les
lods
lret
aas
scas
roll
or
repz
ficoms
cmpb
iret
mov
and
out
sbb
mov
rcrl
jecxz
cmp
ja
xchg
enter
cmp
sub
insl
jae
fs
je
jns
mov
push
repz
enter
cmp
push
mov
pusha
add
dec
mov
inc
jne
pop
and
and
mov
repnz
jle
xchg
dec
cmp
cmp
loop
pop
mov
shll
aaa
and
xor
es
daa
filds
push
pushf
jp
lds
jl
mov
jg
pcmpeqb
sbb
xor
jns
daa
lds
sbb
dec
jbe
add
xor
lea
adc
pushl
push
je
sarb
testb
sbb
insb
cmp
add
cwtl
xchg
dec
ljmp
jl
into
add
and
cmp
rcrb
sub
mov
jbe
data16
push
xchg
adc
stos
fs
inc
ds
repnz
adc
popa
or
and
dec
jne
lret
pop
cs
es
xchg
vmulps
cmp
test
and
adc
mov
in
fdivp
aam
test
dec
cmpsb
addb
outsl
iret
push
mov
sub
mov
fcom
push
fs
shl
jb
fs
pop
or
lds
rcrl
ja
std
add
and
dec
in
out
bound
cs
xchg
xchg
das
rcll
mov
gs
mov
adc
jae
test
push
pushf
loopne
cwtl
xchg
in
pop
fidivrl
mov
adc
cmp
or
or
out
lret
fldl
push
and
aad
out
mulb
out
sbb
dec
push
pushf
and
pop
push
stos
dec
and
dec
pop
xchg
into
mov
inc
inc
jg
pusha
mov
sbb
leave
pop
jge
add
jl
add
mul
or
push
push
aad
sbb
fmulp
pushl
inc
popf
xchg
add
cs
sahf
mov
and
test
imulb
xchg
in
sbb
enter
ret
mov
rorb
xchg
xor
orb
or
das
add
push
mulb
dec
sbb
fs
push
out
jl
dec
mov
fsubr
mov
cs
mov
repz
ss
pop
stc
xor
scas
lret
mov
xor
push
inc
inc
or
ja
adc
push
incl
dec
cmc
aad
sbb
jg
out
lcall
pop
adc
lods
and
fisubrl
pop
xchg
ds
ret
notb
and
repz
xchg
mov
mov
cmp
test
mov
cmp
je
sub
pop
arpl
inc
pop
pusha
scas
inc
push
jmp
xorb
mov
outsb
pop
repnz
cs
mov
fwait
repz
cld
ss
sbb
push
in
fcomip
into
cmp
arpl
push
stc
push
jns
mov
js
je
fistps
push
sahf
ret
jge
or
jns
in
sahf
pop
shrb
push
aam
rcrl
pop
cwtl
sbb
pusha
mov
mov
sti
jbe
mov
dec
dec
or
mov
jecxz
lcall
jmp
lds
int
frstor
cs
jmp
shl
inc
cld
xchg
mov
out
inc
enter
sub
push
pop
add
xchg
stc
call
sahf
cmp
dec
imul
sbb
shlb
inc
rcrl
add
jo
push
xor
scas
movsb
test
mov
dec
mov
sub
ds
adc
xchg
sbb
repnz
dec
popf
sahf
sub
mov
sub
mov
cmpsl
inc
test
lock
ds
outsb
fmull
sti
xor
int
xchg
inc
pushf
aad
mov
data16
pop
sahf
rolb
stos
and
test
insl
push
rcll
adc
sahf
and
mov
sbb
and
ss
or
jo
insb
into
mulb
xchg
aas
or
and
and
enter
mov
cmpsl
mov
pop
mov
jecxz
jbe
jecxz
mov
add
lea
test
sbb
repz
adc
adc
cli
ja
ljmp
jmp
daa
inc
in
filds
push
cmp
inc
push
pop
jne
jge
jae
cmp
arpl
in
sahf
dec
js
les
and
das
aaa
shll
dec
xchg
mov
xchg
ret
push
dec
mov
fisubrl
pop
arpl
inc
loop
adc
or
mov
mov
aam
fidivs
inc
jl
bound
pop
sub
dec
movsl
mov
lds
jns
shlb
test
push
enter
scas
movsl
or
sti
and
js
xor
cmpsb
cmpsl
dec
mov
in
sub
rcll
mov
stos
movsb
push
lods
push
fcoms
pop
fadd
lahf
data16
add
mov
adcb
cltd
sbb
filds
mov
and
and
cwtl
jae
loopne
and
and
movsb
fdivrs
cltd
mov
inc
xchg
cltd
aam
or
test
mov
out
in
jmp
movsb
pop
movsb
lea
repnz
mov
mov
adc
add
xor
mov
iret
or
sbb
jge
stos
fisubrs
mov
lock
mov
mov
mov
cmp
add
pop
inc
lds
jns
mov
in
and
mov
or
das
arpl
xchg
mov
pop
or
dec
sub
arpl
fsubrs
addr16
repnz
add
push
and
mov
dec
cmp
mov
divb
mov
loop
cmpsl
movsb
adc
roll
repnz
rcrl
mov
pop
add
incb
nop
leave
psubd
cmp
data16
xor
enter
xchg
shlb
mov
sbb
call
inc
into
xchg
mov
jge
fwait
mov
mov
and
stc
lods
lcall
lret
sar
inc
clc
mov
addb
andb
mov
sbb
sub
int3
gs
cmpsl
jb
sub
enter
sbb
xchg
push
and
cmp
pop
fmull
mov
outsl
rcr
pop
fs
mov
cmp
out
xchg
les
js
ret
pop
inc
in
mov
cld
or
or
pop
call
dec
xor
pop
arpl
sub
or
rcrl
orb
xchg
in
sbb
mov
mov
lock
push
mov
sahf
ret
dec
in
lret
ret
out
dec
jb
rcl
xor
shr
add
daa
and
sahf
iret
arpl
pop
scas
lcall
ret
popa
mov
adc
jae
data16
enter
ds
mov
push
jo
or
fnstcw
xor
aas
add
jno
jl
imul
clc
sahf
push
mov
out
stos
fadds
pop
add
test
aaa
mov
js
mov
mov
int3
xchg
in
dec
fbstp
inc
leave
mov
push
sbb
leave
data16
scas
mov
or
insb
ja
out
ffree
push
aam
xor
rcll
sbb
and
testb
in
pusha
add
sbb
jne
ret
xchg
and
jecxz
lds
cmp
cmp
enter
xchg
sbb
shll
push
mov
iret
test
je
xchg
push
js
popa
sub
jle
lret
outsb
dec
rorl
shlb
inc
lods
inc
icebp
sbb
out
xchg
add
fbld
mov
and
push
cmp
fwait
mov
orl
pop
dec
mov
in
ds
push
mov
les
sbb
adc
pushf
cmp
fsubr
mov
inc
mov
adcb
rcr
clc
mov
jl
jnp
lods
into
and
dec
lret
rcll
ffree
lcall
push
pop
mov
dec
mov
push
dec
xor
neg
mov
pop
int3
repz
fiadds
rorb
in
push
imul
inc
adc
andl
insl
ja
xlat
fisubl
pop
scas
jmp
mov
adc
in
jl
fdivl
xchg
pop
addr16
jae
mov
popa
xor
out
imul
mov
leave
sbb
shrl
aad
les
clc
cmpsl
pmuludq
adc
test
out
push
test
iret
xor
lcall
movsb
gs
cmp
fmul
push
insl
sub
rclb
adc
rorb
out
pop
stos
cmpsb
stos
roll
push
outsl
stos
or
nop
jecxz
test
fidivrl
push
aas
cmp
jge
push
xor
lret
mov
mov
push
cmp
aas
stc
sub
jmp
out
scas
jnp
jo
push
jp
daa
test
ja
das
push
cltd
fisttps
sub
arpl
scas
int
or
push
dec
enter
ds
mov
adc
mov
insb
push
aam
cmp
call
loope
xor
push
xlat
xchg
imul
pusha
add
fiaddl
shl
inc
xchg
mov
pop
dec
das
popf
mov
and
adc
xor
stos
cmp
dec
fcoml
or
mov
pop
xchg
and
ds
mov
mov
cmpsl
xchg
mov
jle
in
rorb
mov
pop
hlt
cmpl
cmc
sarb
stos
fs
push
testb
push
cltd
add
in
lret
push
xor
and
in
pop
adc
cmpb
cmp
mov
lods
mov
lea
mov
sbb
int
xorb
inc
dec
or
dec
fs
push
adc
lret
dec
outsb
inc
repnz
int3
test
fwait
sbb
fwait
sbbb
xor
in
xchg
test
iret
push
dec
leave
add
xlat
mov
add
pop
popf
push
sub
and
inc
addb
out
inc
iret
ror
shr
pop
xor
mov
test
js
mov
xor
pop
mov
mov
adc
fcompl
mov
add
mov
and
mov
data16
push
loope
jb
sbb
arpl
and
insb
xchg
mov
fwait
enter
mov
xor
push
add
loop
sub
pop
es
xlat
outsl
mov
push
ret
add
fsubrl
pop
data16
cmp
xadd
sub
pushf
cmp
insl
and
xor
aas
lds
stos
push
rorb
out
and
pop
lods
mov
pop
xchg
or
mov
cmc
dec
mov
push
movsb
dec
call
pop
clc
mov
jmp
pop
jo
jb
jmp
aad
mov
adc
es
les
xchg
cmpsl
xor
inc
pushf
dec
inc
jge
jle
jecxz
adc
pop
imulb
call
fidivrs
out
dec
fnstenv
and
xchg
add
mov
sub
sahf
mov
sub
popa
push
fstpt
sub
into
push
dec
lds
lea
mov
and
mov
decb
fisubrs
adc
mov
jmp
rorb
shlb
shrl
xchg
repz
and
mov
sub
frstor
or
out
inc
mov
dec
mov
in
mov
push
fsubp
pop
jns
pop
or
xor
rolb
push
out
call
sub
xor
cli
cld
sub
lods
add
mov
es
loop
data16
mov
dec
or
insl
loop
fs
rcll
pop
sbb
adc
hlt
cmpsl
mov
push
xchg
popa
daa
cltd
xor
mov
repz
not
and
jge
xor
lcall
lock
jne
mov
or
mov
daa
movsl
arpl
addr16
jl
or
cmp
or
mov
pop
arpl
dec
test
mov
dec
test
jmp
xchg
jae
dec
mov
or
pop
gs
and
insl
mov
inc
ficompl
ds
dec
test
cltd
mov
loopne
jle
data16
mov
mov
callw
sbb
inc
subl
sbb
rorl
call
mov
lret
mov
add
add
sub
orb
sub
les
xor
repnz
pop
add
mov
lods
sbb
xor
hlt
cmp
icebp
jbe
popa
sub
andl
cwtl
jmp
push
outsb
mov
sub
jb
mov
xchg
std
push
jge
iret
out
adc
cmp
getsec
daa
mov
pushf
and
out
xchg
add
sar
loop
fcmovnb
mov
push
xchg
fidivl
jge
mov
mov
out
sbbb
pop
test
out
sti
dec
xor
fstpt
sbb
mov
or
repnz
ss
xchg
orl
cmc
cmpsl
dec
inc
popf
mov
cltd
jbe
mov
test
js
xchg
mov
push
inc
imull
add
mov
cmp
xor
repz
add
test
cmp
scas
mov
repnz
and
test
cltd
adc
lods
stos
fwait
in
jnp
jl
cmp
xchg
call
repz
pushl
les
mov
push
les
mov
out
rcrb
fiadds
pop
int3
cwtl
pop
lcall
call
cmpb
loopne
mov
push
add
fnstcw
insb
jecxz
push
es
adc
mov
jno
push
jecxz
mov
mov
add
dec
psubd
aaa
mov
dec
adc
mov
mov
push
push
movsl
jo
cmpsb
shlb
xor
xchg
mov
xor
pop
sbb
inc
inc
jae
clc
popa
pop
stos
xchg
fnstenv
push
mov
ljmp
push
xor
lods
dec
jns
sub
out
and
or
daa
cmp
scas
idivb
stc
and
inc
mov
je
xor
jp
cmpsl
mov
sahf
add
jns
fidivl
pop
mov
mov
cmpsl
dec
push
cmp
sub
hlt
aaa
inc
lods
aad
push
mov
clc
cmp
or
push
popa
daa
adcb
jle
jnp
int3
add
inc
andb
in
jecxz
mov
in
push
sub
lret
mov
jmp
lcall
xchg
stc
xlat
popa
adc
lods
mov
dec
xor
cwtl
mov
adcl
lret
cmp
jbe
ret
bound
and
mov
pmullw
sub
sbb
jo
fst
stc
jns
fmulp
out
xchg
pop
pop
stc
pop
es
sub
fbstp
ja
ret
adc
or
cmp
adc
pushf
or
sub
jae
cmp
mov
jg
or
pusha
sub
aam
jmp
fnclex
je
fmul
es
in
fwait
and
mov
loopne
lock
cli
dec
test
sbb
push
xor
sub
xor
mov
fs
dec
push
add
cmc
movsl
and
xlat
jle
mov
loop
jp
out
xchg
inc
in
mov
ljmp
pusha
inc
or
add
sbb
push
sub
and
mov
fisttpl
push
loopne
cltd
add
push
push
xchg
jp
push
adc
add
add
jl
jbe
mov
incl
inc
call
aaa
xchg
inc
loope
inc
jmp
sub
mov
insb
shlb
ret
xchg
xorl
cltd
push
lock
mov
xchg
inc
add
js
negl
inc
popf
push
imul
mov
roll
cli
mov
sahf
cmp
aam
sti
and
inc
xchg
out
fdiv
adc
sub
jbe
les
inc
jmp
adc
mov
movsb
fnsave
imulb
cld
and
add
jmp
pop
filds
dec
lea
pop
jbe
jo
jae
leave
mov
jle
xlat
mov
jl
punpcklwd
fwait
mov
add
mov
test
ror
push
nop
daa
loop
push
dec
push
js
pop
fcoms
xor
fildl
mov
dec
jns
xor
push
daa
cwtl
enter
inc
dec
sarl
mov
sub
stos
fs
cli
cmp
or
jae
dec
push
mov
dec
mov
mov
and
add
mov
inc
imul
push
out
ja
or
outsl
xor
adc
xor
jmp
test
mov
pusha
add
push
cmovs
xorl
int3
add
dec
int
arpl
xor
jb
into
lret
inc
daa
jbe
lret
out
mov
or
mov
test
insl
mov
cmpsb
sub
or
add
out
ljmp
mov
push
rcr
inc
mov
fildll
pop
push
rclb
sbb
fdiv
xchg
or
repnz
jl
pop
loop
test
mov
fdiv
push
sahf
lods
cmpsl
push
inc
test
out
cwtl
xchg
mov
adc
movsl
sbb
outsb
mov
pop
mov
sbb
inc
inc
lcall
inc
in
xchg
mov
or
pushf
xchg
dec
sub
ret
ljmp
lret
adc
mov
ljmp
pop
dec
push
aas
adcl
subl
aas
seta
dec
out
xor
jbe
daa
inc
leave
fiaddl
xchg
into
or
icebp
jg
leave
add
rcl
pop
mov
shll
mov
imul
int3
out
sub
jbe
pushf
clc
cltd
loope
xchg
rcll
jnp
pop
lcall
xor
popf
mov
mov
in
insl
jnp
dec
cmp
jbe
xchg
and
ss
jp
fstpl
xchg
out
push
xchg
push
cmpsb
add
lahf
shll
mov
add
data16
adc
stc
add
loope
push
push
lcall
cmp
fidivl
add
or
call
sar
mov
and
or
cmp
aaa
in
aad
imul
sbb
xor
push
das
pop
clc
inc
mov
mov
ret
add
push
jl
and
xchg
imul
mov
ja
sub
jae
or
nop
lock
lock
daa
in
pop
arpl
sbb
add
in
sub
mov
stos
jmp
or
or
mov
dec
mov
lods
insl
leave
mov
imul
pop
lret
xchg
pop
sbb
into
es
fld
add
test
push
xchg
je
dec
inc
dec
xlat
adc
mov
pop
and
mov
ficompl
daa
cmp
push
pop
shlb
in
lock
mov
jne
es
iret
decb
addb
xlat
scas
inc
in
jo
push
int3
sbb
jb
lods
push
sarb
sub
push
mov
fs
out
and
dec
lods
push
nop
loop
lret
cmpsb
inc
iret
jns
test
sahf
xchg
or
inc
rcll
fimull
imul
sbb
insb
push
gs
push
mov
addr16
push
cmp
ljmp
test
mov
das
push
push
sahf
dec
pushf
sbb
xchg
xchg
jns
push
xor
insb
cmp
mov
fisubrs
or
add
and
movsb
and
hlt
movsl
jmp
jmp
mov
testb
inc
jno
adc
xor
aas
fdivrl
mov
out
std
sub
imul
cmpb
pop
pop
nop
push
mov
sub
push
nop
lcall
pop
dec
xchg
scas
ret
aad
cmpsl
cltd
cld
fsubrp
xlat
jmp
sub
push
jne
add
arpl
cmpsl
push
xor
fnsave
aas
xchg
jno
inc
sub
xchg
stc
mov
sub
xchg
mov
mov
test
mov
dec
pop
cmp
inc
xchg
inc
movsb
jo
cmpsl
mov
test
xor
test
lock
int
fists
data16
pop
or
sub
mov
push
pop
sti
lea
and
add
imul
pop
sahf
aam
xchg
xor
bound
lret
fxch
xor
push
and
mov
jnp
push
adc
adc
test
dec
inc
mov
cmc
adc
scas
mov
xor
mov
outsl
inc
pop
cs
or
cmpsb
mov
add
sbb
mov
inc
cltd
jo
lods
pop
in
stc
mov
sbb
mov
mov
inc
fldl
clc
inc
adc
dec
scas
mov
jge
inc
aam
fcomps
sbb
fwait
sub
mov
jo
scas
pop
repz
aam
das
leave
pop
inc
or
mov
mov
mov
imul
shl
ret
lock
mov
ror
lods
rclb
and
pop
mov
out
dec
xor
fsub
les
bound
lock
test
cld
or
push
mov
inc
xor
pop
mov
xchg
daa
loop
je
xlat
and
outsl
xor
ss
pusha
mov
pop
cltd
push
adc
sub
mov
jns
pop
jno
repz
jne
cli
mov
aaa
adc
in
xchg
inc
je
mov
scas
cmpb
icebp
jecxz
fisubrs
jge
cmp
adc
sbb
cmp
or
mov
loopne
mov
cmpsb
ss
rcl
out
data16
in
aaa
imul
fsts
jl
into
mov
jne
cwtl
sbb
dec
arpl
pushf
cmp
pop
mov
pop
xchg
in
icebp
inc
addl
dec
sbbl
jno
cmp
gs
push
mov
jp
push
data16
fadds
add
sub
scas
add
pop
mov
sub
out
mov
int3
jne
xchg
mov
mov
inc
lods
inc
mov
xor
mov
inc
std
cmp
andb
lret
stos
clc
adc
jns
mov
xor
mov
cmp
cmp
or
jns
sahf
into
arpl
mov
dec
mov
lahf
add
pop
adc
clc
adc
movsb
out
mov
pop
push
lret
jns
jb
mov
mov
dec
iret
sub
jne,pt
inc
jnp
je
cli
push
fistl
mov
push
adc
cmp
lock
mov
sub
lret
in
inc
xor
loope
pop
push
je
imul
scas
inc
pop
adc
out
fst
fs
mov
fwait
mov
fucomi
push
push
sub
out
iret
test
ljmp
int3
repnz
cmp
mov
ret
push
out
push
pop
ja
inc
out
fcmovnu
lahf
ret
loop
push
or
sub
and
adc
leave
shlb
push
xor
cltd
fdivr
mov
testl
rorl
movsl
cmpsl
push
aas
add
lcall
xor
cmp
call
mov
ss
jecxz
in
jge
add
mull
imulb
xor
mov
and
les
dec
xchg
add
sti
or
pop
cmp
push
mov
xor
push
movsb
mov
iret
ss
loope
mov
jae
incl
push
mov
movsb
adc
jb
repz
lcall
fwait
pop
jle
inc
and
xor
loope
push
dec
aam
inc
jno
and
add
or
sub
sbb
stos
mov
push
fwait
and
pop
cmpsl
dec
mov
mov
in
pop
test
idivb
push
pop
data16
or
jmp
lock
subl
and
mov
fidivrs
mov
xchg
xchg
mov
pop
adc
mov
push
cmp
ret
js
scas
mov
ret
mov
loopne
les
mov
jb
stos
sarb
lret
jb
sub
and
repnz
add
add
cs
lahf
adc
call
push
enter
aas
mov
mov
leave
push
cs
sahf
xchg
and
test
ror
xchg
dec
repz
inc
xchg
adc
iret
sub
jp
adc
and
mov
dec
stc
pop
clc
add
pop
and
cmp
lcall
stc
or
inc
jne
leave
dec
rclb
xor
or
push
inc
dec
xlat
test
cmp
adc
outsb
dec
xchg
pushf
stos
std
fbstp
testl
xchg
jae
es
xor
js
sub
repz
jecxz
dec
sbb
jp
xor
mov
in
xor
mov
insl
push
cmpsb
mov
cld
out
pop
test
aad
adc
outsl
in
pop
call
gs
mov
xor
fdivrp
ficomps
sub
jg
pop
ficoml
push
sub
out
fsubrp
std
add
pop
xor
fidivrl
addl
incl
negl
scas
imul
out
js
fisubl
fwait
addr16
xchg
push
call
andb
sbbb
push
sbb
jnp
mov
push
call
rcrb
repnz
into
decl
scas
clc
clc
test
sbb
push
lods
fistl
insl
sub
shr
lds
fmuls
cmpsb
or
daa
in
fimuls
mov
jbe,pt
popa
aaa
out
lcall
adc
in
negb
adc
pop
jnp
push
movsl
stos
ljmp
pmullw
mov
and
sub
add
mov
pop
pop
js
mov
mov
xchg
popa
mov
inc
jmp
push
popa
push
cs
mov
sahf
push
mov
jns,pn
mov
ret
test
and
xchg
iret
or
lret
mov
and
sahf
mov
sbb
lods
lret
data16
xchg
popf
hlt
insb
ret
mov
rorl
pop
dec
jge
subb
push
fwait
into
jns
pop
dec
cmpl
outsl
lahf
push
test
enter
call
ret
push
pop
sub
test
lods
lea
adc
push
fmull
outsb
fucomip
inc
mov
stos
jbe
stc
push
negl
dec
adc
pop
lret
cmp
mov
push
lea
fistpll
xchg
xchg
or
test
jo
jns
outsl
or
aam
add
ljmp
icebp
gs
je
add
mov
mov
xor
pop
xchg
add
cmc
xor
mov
jp
bound
imul
jmp
mov
push
addr16
jb
adc
std
cmp
sbb
jl
push
mov
ja
sbbb
in
ds
fwait
push
adc
divl
out
push
test
jne
jl
mov
das
cmp
jp
popa
xchg
imul
cld
push
and
in
dec
clc
rorl
push
mov
fnstcw
in
in
popl
adc
cmpl
rolb
sbb
loopne
mov
shlb
pop
sbb
push
cmp
ljmp
sbb
jbe
push
mov
outsl
sahf
daa
mov
mov
inc
pop
call
lahf
stos
xor
insl
nop
loopnew
pushf
dec
in
jae
jg
sti
repz
pop
sbb
into
cmp
sub
cwtl
std
and
mov
cmp
inc
jnp
or
ret
loopne
push
xchg
xchg
sti
hlt
movsl
push
push
xchg
mov
adc
jne
and
test
cmpsb
jns
inc
adc
gs
inc
ss
jmp
movsb
adc
mov
push
aas
aam
dec
out
icebp
xor
ljmp
xor
dec
rcll
outsb
adcl
aam
test
clc
add
aas
mov
mov
pop
aad
inc
mov
outsl
or
lds
fmull
cmp
jnp
dec
pop
mov
pop
jns
xor
loope
jno
jle
mov
jl
fldt
roll
iret
add
mov
mov
into
stos
adc
mov
dec
dec
scas
adc
aas
cmpps
sar
fstpt
stos
mov
loopne
imul
jge
xor
outsb
aad
adc
jp
jp
sbb
jne
push
js
jb
jle
popf
jle
bsr
inc
inc
insb
xchg
cli
pop
int
je
lds
pop
cmp
mov
xor
push
mov
scas
sbb
push
cmpsl
loope
pop
and
or
ss
stos
ja
xchg
adc
jno
sbb
out
sub
and
outsl
lea
int
jl
cmp
in
fsubrs
mov
dec
jns
imulb
xor
sub
repz
cmp
lods
mov
jmp
mov
fsubrl
cltd
sub
mov
pushf
adc
scas
repnz
out
rcrb
mov
adc
fdivrs
clc
mov
ljmp
dec
push
icebp
lds
sar
lret
stos
xor
out
shrb
push
jbe
in
movsb
add
fistpl
lret
xchg
xchg
jns
cmp
dec
dec
dec
mov
pop
xchg
inc
sub
data16
push
ror
icebp
pusha
add
inc
mov
in
test
xor
xchg
or
cmpsl
fs
cltd
cmp
es
ljmp
xlat
mov
lock
std
lcall
and
insl
cltd
jg
pop
sub
int3
sti
das
andb
or
rcl
adcl
and
popw
or
and
test
das
dec
and
mov
pusha
push
adc
mov
mov
mov
clc
xchg
shrl
arpl
sub
fs
out
dec
call
mov
xor
les
jno
orl
int
xor
sbb
cmp
int3
pop
lock
cs
add
xchg
imul
adc
mov
fldcw
push
xchg
mov
jle
dec
sbb
mov
int3
into
stos
shrl
aam
cmp
test
movsl
and
pop
inc
pop
scas
jmp
adc
add
cmp
inc
push
push
mov
jb
out
sub
push
mov
sbbl
xor
jp
in
and
lods
adc
and
add
push
xor
sbb
pop
sbb
ss
dec
xor
test
adc
and
mov
pop
out
mov
popa
icebp
call
pop
ja
pop
mov
sub
jge
inc
test
fiaddl
mov
mov
lea
jns
xchg
out
fnstcw
and
cmp
pop
js
inc
adc
jle
adc
cmpsl
cmp
imulb
fs
xor
sub
ret
mov
jge
inc
push
mov
add
pushf
mov
jae
push
inc
lret
dec
or
mov
push
push
add
mov
adc
inc
or
cmp
adc
rcrl
xor
add
enter
push
inc
sbb
cmp
fistpll
cmp
movsb
sub
js
push
and
adc
xor
fistl
cmp
cmp
cli
jo
and
xor
jns
pop
mov
add
xor
popa
setb
out
pop
mov
lods
nop
mov
leave
mov
idivb
jle
ss
popa
js
subb
sub
in
aaa
push
and
lds
jp
jb
inc
test
and
jle
pop
cmp
mov
jp
mov
adc
add
sarb
xchg
mov
lods
and
in
das
in
push
in
jmp
int3
sbb
hlt
nop
out
pop
and
test
xchg
stos
add
adc
cmp
or
mov
pusha
inc
add
mov
imul
mov
sub
fdivl
arpl
dec
lock
mov
mov
lea
pop
jg
or
lock
adc
in
nop
loope
push
loopne
ss
add
cmp
test
aaa
test
lret
mov
push
sub
xor
mov
add
mov
pop
loop
ljmp
aad
pop
out
in
out
jmp
mov
sar
and
add
gs
inc
adc
out
insl
sahf
sti
aam
loop
mov
repnz
inc
adcb
jne
popa
je
ja
adc
cmp
daa
stos
cmp
mov
fistpl
dec
sbb
mov
xlat
outsl
fyl2xp1
dec
sbb
les
lods
mov
mov
jb
dec
unpckhps
xor
ret
jb
lds
lahf
xchg
xchg
and
ljmp
rcrl
insb
loope
mov
call
orb
mov
push
stos
loopne
xor
or
ret
push
push
dec
mov
fs
add
dec
out
je
lahf
bnd
jecxz
pop
lcall
or
addr16
jae
inc
es
dec
push
fwait
sbb
mov
ret
adc
mov
adc
repnz
pop
dec
fwait
sbb
pop
mov
pop
enter
imul
pop
mov
es
push
push
inc
sti
cmp
sub
fwait
cwtl
mov
xchg
push
dec
jo
in
cli
scas
inc
mov
insb
incb
sub
cmpb
sbb
dec
ja
push
rorl
leave
out
xor
adc
and
push
neg
sub
inc
add
or
xchg
jb
and
aaa
dec
push
adc
stos
inc
jns
ja
sti
push
stos
addr16
popa
cwtl
adc
mov
lea
popf
cltd
cs
sub
push
sbb
mov
test
dec
push
push
ja
shll
push
repz
sbb
mov
jnp
mov
mov
mov
sub
add
pop
lcall
test
jmp
sbb
jl
insl
lock
push
push
lret
imul
add
testl
mov
lahf
repz
ror
push
xchg
jp
insb
xor
xor
fs
push
or
xchg
and
jnp
popa
mov
mov
inc
xchg
fwait
test
dec
cltd
adc
clc
mov
out
dec
or
push
xchg
daa
stos
inc
dec
fmull
mov
fsubs
pop
test
jnp
sbb
or
mov
lcall
fistpl
or
xchg
lock
xorb
jnp
pop
lea
or
dec
fsubl
ds
icebp
lret
pop
mov
movsb
daa
xor
cltd
cmp
xchg
scas
sti
inc
scas
mov
fistl
jg
or
pop
push
sbb
sub
flds
sbb
xchg
jne
mov
push
das
and
cwtl
cmc
cmp
pop
cmp
les
mov
jno
dec
popf
lea
push
pop
rcrl
xchg
nop
lods
and
sbb
mov
leave
pop
fnstenv
lcall
dec
adc
sbb
lock
jmp
xchg
sbb
mov
das
push
lods
mov
xchg
loopne
std
and
sbb
dec
js
cwtl
fsts
pop
adc
repnz
mov
int
jbe
hlt
push
lock
test
nop
mov
mov
jmp
les
sbb
sub
pop
insl
jl
fiaddl
push
std
sbb
and
aam
shrb
xchg
cmp
out
mov
xor
sub
or
clc
stos
push
les
mov
xor
icebp
pusha
hlt
or
jnp
popf
jle
sub
subb
or
mov
leave
scas
cmp
sub
out
mov
cmp
stos
jecxz
lcall
cmp
in
hlt
rcrl
fistpll
loope
imul
lea
test
cmpsl
in
mov
xchg
and
stos
fwait
loope
bound
test
push
test
and
cmpsb
push
jle
mov
adc
jecxz
enter
sbb
imul
sub
push
mov
adc
pop
add
lahf
fbstp
in
ficoml
jl
icebp
pusha
sub
sahf
ret
fwait
mov
aaa
fcmovb
add
call
adcl
pop
pop
imul
add
jo
in
xchg
add
adc
lret
jnp
mov
dec
mov
out
dec
data16
sbb
aaa
push
aam
jne
mov
push
imul
dec
fidivrl
scas
out
inc
sub
xchg
imul
subb
sbb
insl
in
ljmp
out
fwait
and
and
push
daa
dec
adc
push
pop
int3
sbb
es
cmc
or
inc
fisubs
sub
negl
push
popf
add
loopew
clc
xor
xchg
call
shll
in
mov
test
test
adc
rcrl
push
pop
test
cli
push
scas
daa
sbb
xchg
xchg
ret
loope
push
add
popa
add
loop
inc
cwtl
mulb
pop
out
rcrb
test
mov
mov
out
mov
iret
shl
jb
les
push
bound
xor
add
test
adc
sbb
ja
push
ds
mov
add
aam
sar
jge
cmp
xchg
outsb
jp
mov
pop
addr16
frstor
dec
add
push
stos
mov
mov
mov
mov
xchg
lret
stc
jb
push
adc
push
shrl
mov
daa
cmp
jns
fdivr
scas
mov
mov
test
sub
lods
insb
sbb
mov
movsl
push
inc
pop
push
mov
xchg
test
xor
inc
repnz
lret
dec
add
jae
std
add
pop
dec
cmp
cwtl
xor
push
ss
jne
mov
sahf
jp
jno
mov
xchg
inc
dec
add
jp
movsb
xchg
out
bswap
ret
xorl
pushf
push
push
push
jo
sar
push
mov
es
adc
in
clc
ror
call
jae
les
sbb
push
mov
push
negl
aad
sub
repnz
mov
pop
mov
outsb
push
cltd
push
ja
pop
fistpll
pop
add
aas
jbe
jno
xor
imul
pop
das
jmp
xchg
call
jp
repnz
rorb
dec
cmp
mov
movsb
loopne
push
jmp
xor
outsl
repnz
fldenv
push
cld
add
rol
sbb
push
mov
inc
jl
xchg
insb
jmp
dec
xchg
bound
lret
push
jo
rcrb
dec
push
sub
cmc
sub
xchg
dec
and
mov
das
stos
xlat
sub
dec
jns
fcompl
xor
and
in
xchg
test
dec
sub
xor
mov
adc
jl
mov
lret
jl
hlt
add
mov
dec
or
jne
xchg
sub
jo
xchg
pusha
and
or
adc
pushf
fwait
xchg
fnstenv
jnp
jb
test
mov
or
pop
scas
push
nop
insl
js
dec
pop
or
jmp
jge
arpl
push
xor
aad
adc
mov
adc
aas
add
and
xchg
cld
dec
out
pop
in
mov
ret
dec
adc
push
aas
push
test
xchg
movl
mov
mov
sbb
pop
repnz
jns
xchg
cs
cmp
scas
cwtl
pop
lret
pusha
rcll
fdivl
les
mov
in
lods
cs
jo
xor
movsl
scas
xchg
xlat
outsl
mov
cld
ret
mov
mov
test
scas
push
mov
popf
adc
add
outsl
inc
xor
aas
jecxz
mov
mov
mov
icebp
adc
aam
pop
sub
test
pop
push
adc
mov
jae
or
sub
or
cwtl
and
ja
dec
pop
xor
sub
aas
pop
repnz
sahf
loop
adc
push
loop
dec
scas
fstps
fdivrp
inc
push
test
jg
mov
std
jno
cli
loope
sahf
push
in
ja
inc
mov
jb
test
stos
adc
adc
daa
sahf
add
fstpl
das
inc
adc
pop
gs
mov
lds
add
jbe
pushf
pop
sub
jno
jno
outsb
sbb
cmp
fnstcw
push
fdivrl
mov
dec
das
clc
mov
push
test
mov
lock
push
dec
xchg
pop
dec
push
addr16
adc
jl
dec
xlat
push
sbb
in
mov
or
fidivrs
and
loopne
icebp
sub
lock
cmpb
and
or
and
mov
fistpll
sahf
mov
roll
cs
jae
xchg
mov
int
cmpsb
sub
mov
movsb
cmp
dec
ret
mov
mov
icebp
cs
xchg
scas
push
sti
mov
andl
push
jae
inc
int
adcl
scas
gs
mov
mov
fdivrs
das
pop
lcall
outsb
je
sbb
stos
jo
mov
sub
push
sub
jge
fidivs
iret
insl
scas
inc
lret
in
aam
xchg
lods
int3
sbb
int3
pop
lcall
jmp
int3
sub
aam
add
lods
xor
adc
jnp
xchg
ljmp
dec
jno
cmc
mov
cld
inc
push
mov
inc
cmpsl
dec
jbe
jmp
outsb
movsb
fs
inc
push
pop
movb
push
rol
push
pop
lcall
jbe
repnz
push
ficoms
sahf
not
cmp
pushf
cmp
movsl
ret
test
cltd
mov
push
push
outsl
mov
sbb
leave
pop
ja
inc
xchg
cmpl
fisttpll
loopne
sub
in
aas
jae
fbld
adc
mov
lcall
sbb
mov
mov
xor
outsl
push
inc
aam
notb
sub
divb
mov
push
push
dec
iret
cmpb
jno
aad
jne
jno
dec
jns
sti
jmp
cmp
notb
outsl
push
jns
inc
mov
mov
nop
cld
or
stc
sub
adc
xchg
pop
jns
sbb
xchg
out
mov
ja
insl
fimull
in
push
out
fs
xchg
movsb
jecxz
in
stos
mov
mov
gs
sub
and
ja
xor
and
lods
cmc
jmp
jecxz
jnp
and
xchg
sbb
and
repnz
aam
inc
push
out
dec
xchg
inc
sahf
mov
ljmp
negw
adc
jbe
into
xchg
clc
imul
add
or
add
jno
icebp
pop
dec
cmp
ret
lahf
int3
inc
in
sbbl
mov
xchg
cmp
push
and
add
scas
ret
or
or
lcall
pusha
or
pop
insl
jbe
jge
fildll
push
movsl
roll
and
cltd
mov
adc
outsb
pop
xchg
add
jo
and
icebp
mov
cmp
call
aam
cmp
insl
jae
add
retw
dec
inc
pop
bound
mov
xor
dec
jg
jo
add
in
cmpsb
test
or
xchg
sbb
pop
add
data16
jo
xchg
into
sbb
sbb
lcall
or
test
mov
sbb
jno
sti
xor
jo
mov
xor
and
jae
add
mov
mov
shr
adc
xchg
lods
pop
out
in
pop
rclb
jle
bound
loope
xchg
int
pop
sbb
pop
mov
sbb
pop
aad
xchg
lret
test
mov
cltd
stos
out
ja
aam
gs
add
in
or
push
lcall
lock
leave
adc
sub
fwait
jne
sbb
scas
pop
pop
ret
es
in
in
mov
cli
and
into
imul
push
push
mov
bound
dec
out
ja
pop
dec
daa
mov
cmp
mov
adc
outsl
jmp
js
test
movsl
add
push
xchg
jp
dec
fmull
aas
stc
add
cmpsl
shrl
mov
loopne
jge
add
lds
mov
jno
pop
fstl
loopne
sub
in
loop
sahf
pusha
add
or
fwait
adc
outsl
sbb
mov
fcomps
stos
inc
add
inc
aam
aad
sahf
push
std
std
adc
lea
in
sub
loope
mov
mov
outsb
loope
mov
xorb
scas
pop
push
sub
icebp
pop
fidivl
mov
std
cmpb
xor
imul
fxch
xchg
shlb
pushf
jg
sub
cmp
lods
jecxz
jl
jmp
jnp
mov
adcb
dec
int3
jp
je
rorl
aad
pavgb
mov
sub
loop
roll
or
das
mov
inc
cmp
mov
icebp
jb
mov
mov
mov
and
je
cwtl
repz
les
mov
scas
jecxz
xor
dec
es
dec
xlat
adc
mov
cmp
jecxz
ljmp
cmp
pusha
addr16
mov
pop
push
popf
lahf
aam
in
inc
cmp
test
push
mov
sub
xchg
int3
lret
sbb
dec
add
sbb
je
cwtd
and
shrb
int
int
add
loope
mov
xor
pop
mov
out
movsl
movsb
loope
pop
sbb
ret
sub
sub
daa
icebp
repnz
xor
ror
aaa
in
or
ret
into
nop
xchg
scas
loope
cmc
jbe
loop
mov
cmpsl
add
lea
cmp
movsl
dec
mov
loop
mov
aam
cwtl
xor
xchg
push
out
bound
and
pop
adc
call
xor
je
aaa
lds
outsl
push
or
arpl
sbb
fisubl
dec
add
cmpsb
mov
test
pop
xchg
orb
sahf
push
push
test
fidivl
out
mov
or
inc
ss
int3
data16
aad
adc
mov
jne
out
das
mov
lcall
mov
jns
sbb
mov
push
mov
xchg
out
jge
jge
notb
int3
mov
sti
cmp
xor
cmp
dec
pop
sbb
jnp
push
ficoml
movsb
sub
ret
inc
jo
fcomp
fst
or
icebp
das
outsb
ljmp
mov
mov
mov
sub
push
pop
pop
addr16
into
movsb
sbb
mov
cs
sub
pushf
mov
cmp
je
or
mov
lret
inc
jae
jmp
gs
adc
inc
addr16
gs
xchg
jne
add
addr16
push
xchg
adc
lret
pop
sbbl
sub
and
jb
pop
push
std
jo
cmp
mov
sarl
xchg
push
fadd
mov
dec
xchg
push
and
jns
pop
sub
in
fucomip
push
jns
xchg
dec
push
pop
ds
add
insl
mov
fdivs
mov
ljmp
jmp
ficoms
mov
fwait
loopne
outsb
cmpsl
dec
cmpsl
sbb
aam
int
mov
ljmp
cmp
add
pop
test
mov
adc
cmp
mov
dec
pop
inc
inc
or
sbb
pop
mov
mov
nop
ret
les
xor
pop
pop
or
scas
jbe
frstor
dec
pop
mov
shrb
and
je
pop
push
push
add
mov
cmpsl
aam
cmp
ret
adc
mov
pop
ret
loop
dec
addr16
or
sbb
dec
aad
repnz
fbstp
int3
test
lods
sahf
stos
mov
jbe
inc
ficoms
inc
mov
lock
mov
jo
std
sub
jno
cmp
psrlq
aad
mov
sbb
jmp
jo
sahf
cmp
mov
out
dec
rcrb
in
xor
mov
sbb
mov
or
cmc
test
mov
mov
dec
jns
rol
ret
inc
cmc
mov
mov
popa
nop
aas
add
out
jp
and
mov
jae
mov
lea
sbb
jns
out
jae
ss
jae
rcl
add
adc
movsl
adcb
sbb
addr16
cmc
insl
sub
and
mov
mov
dec
iret
clc
pusha
dec
and
repnz
lock
cmpsl
loope
inc
cmc
inc
mov
and
add
dec
sbb
sti
and
sbb
test
jb
cmp
andb
in
sete
hlt
fists
in
cmpsl
pop
in
fiadds
pop
int
leave
push
in
repnz
scas
sub
nop
pop
fs
stc
xchg
test
insl
bnd
outsb
aam
popa
xacquire
les
pop
mov
sbb
mov
mov
or
inc
pop
dec
and
movsl
xchg
mov
incl
in
jmp
add
repnz
loope
xchg
subb
ret
sub
daa
test
add
test
stos
popl
iret
xchg
inc
sub
jp
fs
dec
js
subb
ljmp
jno
adc
mov
jae
nop
lret
out
movsb
popa
sub
stc
movsb
in
mov
lahf
xchg
mov
mov
fcompl
mov
add
cld
mov
mov
sub
dec
adc
pop
inc
lea
ret
cmc
mov
inc
cmp
mov
push
insl
pop
daa
and
test
addr16
dec
sub
push
sub
jle
xchg
insb
es
pop
jnp
fisttpll
lret
dec
jecxz
movsl
test
incl
aad
inc
jmp
push
nop
dec
popf
lods
rcrl
adc
push
imul
fisttps
call
xchg
xor
cltd
jb
cwtl
test
pop
add
add
jmp
cmp
lret
adc
or
stc
sub
scas
push
mov
mov
add
inc
iret
cmpsb
sub
mov
in
lods
nop
jb
pop
fstps
inc
leave
imul
add
andl
gs
sti
repz
push
cs
mov
outsl
mov
jmp
push
repnz
clc
cmp
or
mov
iret
xadd
mov
sub
cmpsb
lock
or
or
inc
pop
in
repnz
aad
sbb
or
lcall
add
adc
rcrb
jno
lods
add
jbe
lock
jns
call
jnp
or
inc
popf
out
inc
insb
imull
xchg
lcall
cmp
mov
inc
and
test
or
imul
pop
mov
cmp
and
dec
or
sbbb
dec
inc
jno
xor
imul
insl
or
aaa
inc
cmpsl
repnz
lcall
rcrb
iret
stos
xchg
rcll
daa
dec
int3
out
or
pusha
xor
push
push
mov
jg
jge
xor
rorl
dec
test
daa
xor
mov
xchg
push
xchg
inc
mov
cwtl
call
push
nop
aas
or
mov
xlat
lahf
in
dec
iret
jnp
add
dec
sbb
jno
xor
mov
es
decb
sbbl
cli
xchg
mov
sbb
popl
dec
or
pop
and
dec
mov
jge
sahf
cmp
sub
lods
int3
mov
dec
xor
adc
jle
sub
push
mov
pop
cltd
lahf
xlat
adc
subl
sub
sbb
push
jne
aam
mov
bound
mov
es
cmp
mov
pop
sahf
je
fucomip
inc
xor
push
gs
mov
hlt
add
std
aaa
popa
enter
mov
fbld
leave
test
inc
iret
or
jno
arpl
inc
mov
nop
cmp
rcrb
in
mov
cmp
stc
xlat
shlb
inc
mov
mov
mov
cmc
add
testl
or
aam
xor
dec
shr
jl
cmpsb
add
or
lahf
jp
js
add
lock
test
add
testb
sbb
mov
outsb
pop
lcall
orl
andl
movsb
in
insl
adc
repnz
into
mov
aaa
jg
stos
inc
test
daa
faddl
mov
jg
incl
mov
ja
out
in
add
rclb
xor
push
sbb
aas
sub
cmpsl
pop
mov
mov
jge
daa
sub
jp
dec
addl
jne
test
cmp
cli
sub
sub
and
insl
dec
addr16
pop
outsl
mov
idivl
cmp
cmp
imull
cmp
test
aam
cmp
int3
mov
pop
dec
hlt
mov
jns
mov
js
faddl
iret
rcll
sbb
mov
mov
mov
movb
mov
data16
and
xchg
push
dec
bound
pop
or
sbb
pop
fstl
mov
bnd
and
or
xor
cmpsl
test
add
jmp
push
pop
je
pop
xchg
adcl
or
and
push
xor
jge
or
jo
scas
mov
ret
mov
dec
jns
push
sbb
clc
stos
add
out
jb
aad
inc
rep
cmp
mov
pop
out
clc
add
pop
lcall
aad
orb
test
lds
movsl
gs
fiaddl
aam
sbb
jnp
jmp
out
push
and
xchg
add
roll
pop
lea
repz
inc
ds
shrb
nop
fiadds
mov
in
sub
cwtl
jae
lods
cli
inc
jl
fcoml
out
nop
cwtl
jg
cmp
subb
mov
adc
mov
jl
inc
cmpsb
mov
pusha
pushf
add
aad
dec
arpl
stos
iret
inc
and
jg
es
sbb
jns
clc
icebp
and
outsb
fldcw
inc
lahf
xor
into
xor
sbb
stos
push
mov
sbb
push
test
mov
imul
icebp
neg
rcrl
inc
mov
and
in
cltd
loopne
push
cmpsl
mov
push
ss
andl
xchg
xchg
xchg
insb
jge
sbbb
mull
cwtl
data16
xor
dec
lods
push
andl
dec
xor
test
in
out
xchg
std
jae
cltd
into
mov
leave
leave
fwait
inc
xor
xchg
pop
cmpl
push
pop
cld
sbb
rep
xchg
or
fdivrs
dec
sub
jp
mov
pop
idivb
xor
mov
sbb
inc
pop
setne
xlat
inc
fdivs
mov
add
fld
imul
cmc
sbb
call
leave
xor
insl
data16
imul
out
inc
movsb
fsubl
xchg
scas
out
sub
in
mov
repnz
loopne
xchg
iret
jo
dec
sbb
mov
fistpl
mov
jb
mov
xor
fisubrl
mov
pushf
inc
pop
lods
mov
xor
pushf
lahf
mov
adc
aaa
and
pop
cltd
bound
ja
xchg
jae
push
jg
mov
cs
mov
fisubrl
movsb
test
fs
push
pushf
pop
movsb
aad
mov
pop
in
inc
lea
mov
add
pop
cmp
mov
jnp
cld
mov
add
inc
or
nop
or
push
sbb
loope
shlb
add
sti
xor
xchg
roll
idivl
dec
out
push
inc
jp
sub
in
or
push
rcll
hlt
ss
stos
push
lcall
pop
add
inc
push
jae
popf
scas
or
mov
push
push
out
mov
les
addb
and
orl
xchg
popa
or
int
mov
jg
xchg
out
sub
shlb
shl
data16
or
imul
cmp
jge
js
sbb
movsb
dec
jg
cmp
fs
push
xor
push
loope
xchg
and
fbstp
pop
xchg
jnp
ret
dec
fsubl
xor
mov
aam
cmp
xchg
xor
into
imul
popa
adc
sbb
push
nop
sbb
insl
inc
and
dec
in
inc
pushf
xchg
pusha
inc
cmp
push
adc
sbb
aam
mov
pushf
les
xor
or
add
sbb
pop
jmp
lods
nop
fldl
mov
mov
and
test
fldenv
into
dec
icebp
pop
jg
repz
push
aaa
hlt
pop
push
adc
lds
jno
xor
jno
lds
popf
repnz
cld
aam
mov
mov
sub
jo
in
in
push
mov
outsl
bound
mov
or
movb
repz
in
mov
outsl
adc
xchg
pop
movsb
xor
or
loopne
cwtl
test
mov
push
jb
sbb
notb
setno
not
inc
dec
or
pop
jge
pushf
push
outsl
je
ja
dec
inc
cli
sbb
xchg
mov
xchg
add
popa
shl
cmp
or
mov
pusha
in
rol
js
add
je
movsb
mov
adc
fucomp
or
imul
test
movsb
fcmovb
push
and
ja
in
ljmp
cmp
jnp
jns
xchg
dec
push
fstpt
ficoms
mov
cmp
dec
shll
das
icebp
xor
pop
insb
stos
adc
and
pushf
mov
add
adc
push
pop
pusha
xor
sbb
mov
ss
sub
pop
pop
jmp
cmpsl
lcall
and
and
mov
test
dec
xor
cmpsl
sbb
ljmp
mov
push
and
lea
das
aad
jmp
push
pop
ja
and
out
mov
std
mov
push
fwait
jge
mov
inc
clc
mov
or
mov
int
sbb
add
insb
inc
pushf
cli
loopne
fcmovnbe
push
xor
out
mov
out
int3
int
nop
mov
aaa
lret
lret
xor
bnd
cmpsl
sub
xchg
scas
or
dec
mov
pop
stos
nop
stc
add
cmpsb
lahf
inc
mov
add
ss
mov
sub
and
cmp
and
inc
jnp
mov
cmc
rorl
sub
jmp
repz
mov
pop
aad
cmp
scas
pop
pop
xchg
cmp
int
jnp
inc
jg
add
jecxz
jmp
and
cli
fmull
ja
sub
faddl
or
data16
cmpl
push
jo
js
pusha
mov
mov
cmc
decl
in
mov
cmpsl
sbb
idiv
pop
imull
shlb
mov
xchg
or
ret
cmc
mov
mov
or
xor
pop
test
data16
lahf
pop
mov
inc
or
or
mov
jne
inc
scas
pop
jmp
in
and
xlat
pop
test
xlat
xor
leave
cmpsb
loop
stc
lret
scas
fimuls
insb
inc
pop
shll
push
mov
push
mov
xchg
inc
sub
int
mov
inc
aas
std
xor
outsl
test
push
fbstp
pop
push
inc
dec
push
fdivr
ljmp
mov
test
xor
sbb
mov
es
pop
mov
jge
dec
stos
in
fs
xlat
fwait
xor
lods
test
outsl
mov
fnstenv
and
mov
int3
cltd
mov
push
mov
pop
push
xchg
mov
add
or
jbe
cli
or
dec
popa
mov
add
push
movsb
push
andl
sbb
dec
imul
xor
adc
and
and
popf
ljmp
xchg
fsubrl
pop
dec
inc
pushf
sub
cmpl
cld
jae
inc
xchg
xor
push
xchg
pusha
fwait
shll
cli
jl
cli
push
ja
sub
and
dec
xchg
xchg
out
push
adc
in
push
xorb
in
mov
pop
mov
pop
rolb
bound
cli
dec
mov
je
bound
icebp
dec
clc
sub
mov
arpl
push
stc
aas
aas
test
mov
fmuls
sbb
sub
cld
cmp
mov
jl
loop
fwait
imul
testb
pop
sub
call
push
mov
test
jl
dec
popl
adc
xsavec
dec
pop
inc
or
popf
sahf
les
xchg
add
cmp
jl
mov
jb
addr16
cwtl
shlb
pop
in
test
cmp
xchg
add
pusha
jp
mov
sub
test
or
sbb
imul
test
js
subl
je
das
pop
mov
jmp
xor
push
pop
repnz
dec
sbb
adc
and
data16
subb
in
insl
inc
addl
and
jmp
adcl
daa
or
out
jl
das
pop
mov
adcl
int
aaa
fisttpll
stos
cmp
cwtl
std
sub
push
clc
in
arpl
divb
mov
ret
adc
daa
mov
adc
sbb
in
ss
mov
sbb
and
sbb
push
or
fs
sub
push
out
sbb
inc
inc
clc
or
jg
jnp
jbe
gs
push
push
pop
pop
push
dec
insb
sbb
xchg
xlat
mov
out
rorl
mov
in
rorl
cmp
fisttpl
cmpsb
and
jp
push
pop
aaa
in
xchg
inc
lock
adc
ss
push
dec
cli
pop
push
or
int3
mov
fcomps
insb
repz
aaa
push
adc
decl
inc
leave
push
movsl
push
inc
sbb
or
fldl
loope
stos
jno
xchg
mov
cmpsl
pop
jns
pop
cmc
pushf
and
sub
pop
and
dec
mov
les
gs
push
clc
ljmp
fmul
mov
movsb
jo
daa
comiss
cmp
les
xchg
in
cmp
shrl
push
jp
mov
outsb
xchg
insl
cmpsl
cmp
xor
cmp
mov
std
dec
jnp
outsl
dec
leave
xchg
mov
adc
repnz
push
imul
in
dec
push
fistl
fidivrl
cltd
inc
fdivrs
dec
gs
mov
jmp
jmp
pop
mov
pop
fbld
fcomip
jle
or
mov
jp
cld
mov
mov
cld
xor
out
pop
imul
cwtl
insl
stos
mov
shlb
mov
out
ljmp
adc
mov
inc
pop
jno
out
daa
popa
pop
lcall
cmp
jge
test
js
xchg
jbe
daa
call
ja
daa
scas
les
incl
push
xchg
inc
imul
loop
outsl
gs
dec
repz
notb
rcl
pop
jmp
js
jecxz
add
pop
lahf
dec
int3
outsl
aaa
inc
data16
pop
pop
add
ret
cltd
int
dec
adc
pop
inc
mov
cmp
aam
mov
xchg
jns
lock
add
pop
dec
push
pushf
pusha
add
jne
mov
dec
mov
bound
stc
mov
push
ret
sub
call
xor
nop
ret
in
mov
out
push
pop
in
jno
mov
mov
in
ss
rcrb
jno
orb
imul
out
aad
or
add
lahf
mov
and
jg
and
mov
mov
ret
cmp
xlat
xchg
cld
leave
bnd
xchg
or
jle
adc
push
vmovmskps
and
and
addl
mov
jmp
cmp
or
adc
mov
pop
cli
sbb
mov
sub
cli
fcmove
les
xchg
cmpsl
rcrl
push
dec
loop
adc
gs
movsb
imul
inc
push
adc
mov
push
pusha
scas
or
add
in
mov
sub
add
inc
pop
mov
stos
test
in
les
jmp
sbb
mov
pop
into
mov
xchg
sbbb
es
fwait
sbb
test
sub
xchg
loop
xorl
jmp
and
lods
es
xor
sub
adc
dec
push
les
test
test
test
fwait
or
push
loopne
mov
notl
insl
mov
ret
shlb
pop
jne
mov
or
cld
imul
dec
adc
push
mov
cli
pop
shll
repz
movsb
lcall
in
pop
jno
lret
loopne
and
cli
sbb
pop
adc
jae
jo
pusha
sbb
andl
and
test
and
pop
int3
and
dec
jns
add
rolb
xor
sbb
sti
std
dec
mov
mov
cmp
inc
movsl
lods
push
arpl
leave
sbb
mov
pop
movsb
jne
loopne
mov
dec
push
inc
int
sar
stos
jb
stos
push
xchg
jo
dec
movlps
pop
fbld
pop
fisttpll
mov
imul
in
outsl
jbe
shr
jae
loope
shrb
xchg
lock
loopne
pop
aam
repnz
pop
orb
xor
mov
fucom
push
jae
idivb
and
inc
aaa
lcall
adc
aam
je
rol
push
jle
scas
add
push
adc
mov
mov
add
xor
adc
or
inc
mov
or
mov
or
gs
insl
out
insb
mov
pop
xchg
jnp
fs
sub
aaa
sbbl
cwtl
dec
xlat
mov
hlt
jae
scas
mov
inc
sub
or
mov
cmpsl
add
adc
cmp
ret
dec
aaa
int3
mov
sub
movsb
mov
rolb
and
cmpsl
mov
gs
movsb
adc
outsb
mov
into
pop
push
jecxz
sub
insb
fisubrs
movsb
test
adc
push
xorb
cmp
sub
jbe
fiadds
or
dec
xlat
sahf
and
int
sti
icebp
aam
int
push
xchg
inc
movsl
and
loopne
imul
pop
mov
into
fdiv
hlt
ljmp
into
mov
and
cltd
in
add
mov
shl
dec
cmp
cmp
xchg
rcll
push
pop
cmp
pop
gs
int3
fisttpll
adcl
jmp
xlat
cltd
shll
jle
sarl
jae
and
mov
xor
lahf
jno
leave
sbb
jb
stos
loop
dec
outsl
mov
pop
mov
sarl
fs
jg
daa
sahf
out
push
bound
mov
xchg
imul
inc
mov
push
mov
push
pop
pop
out
or
xchg
adc
cmp
dec
sbb
xchg
push
dec
mov
idivl
xchg
dec
sarl
rcll
loop
jp
roll
loop
mov
cmpsl
push
inc
loope
sbb
add
sub
or
push
jo
ljmp
inc
push
or
xor
pop
outsl
dec
mov
loope
adc
inc
jb
cld
add
shll
adc
mov
in
push
fisttps
or
inc
or
test
daa
mov
dec
and
xlat
js
lret
mov
xlat
into
pop
and
incl
imul
and
loope
xor
xor
xor
mov
stos
inc
mov
push
clc
ror
push
arpl
lods
xchg
cmp
inc
mov
pop
ljmp
sub
push
clc
loop
jbe
cmp
stc
shll
mov
jge
mov
pop
test
adc
stos
lea
repz
and
repz
jecxz
mov
les
in
dec
mov
outsl
int3
outsl
out
dec
pop
pop
cmpsb
std
and
xchg
std
stos
mov
mov
xchg
mov
dec
or
xchg
leave
jne
sub
jge
pop
xchg
push
in
or
or
aas
mov
pop
jp
cs
aaa
mov
adc
xor
movsb
adc
xlat
xchg
fidivs
xchg
xor
xor
data16
mov
repz
test
rep
mov
ret
mov
int
clc
aad
push
mov
mov
fwait
out
out
loop
testb
xor
jbe
mov
jmp
fisubrs
jge
fdivrp
lock
add
mov
inc
mov
cli
fldt
mov
xchg
inc
cld
and
cltd
mov
xchg
fists
fwait
mov
mov
cmp
xchg
insb
rcll
bound
mov
in
pop
sbb
es
fcoms
adc
xchg
scas
mov
int
inc
sub
imul
push
arpl
xchg
in
sub
and
mov
mov
pop
adc
out
dec
adc
fidivs
sub
mov
jecxz
adc
loopne
mov
push
je
push
std
nop
ss
cmp
ds
mov
inc
out
jmp
dec
jp
cmp
aaa
jp
xor
mov
adcb
lahf
testb
push
mov
sarb
dec
psrlw
jge
outsb
mov
xchg
pop
push
cmpsl
xor
xor
dec
adc
mov
mov
mov
mov
add
jmp
mov
repnz
cmpsb
push
push
sbb
mov
xor
lods
sti
aaa
icebp
sub
jecxz
mov
ss
aam
cld
std
sbb
daa
add
push
push
jo
adc
shrb
or
inc
ret
push
stos
push
es
dec
sbb
sub
jp
xchg
stos
mov
icebp
shll
rcl
and
sbb
and
pop
jge
xchg
adc
mov
mov
xor
mov
rorl
sbb
pop
jbe
adc
test
push
cmp
xor
cltd
push
add
mov
dec
or
imul
outsb
popf
sbb
aas
lods
js
enter
adc
fs
and
je
loop
mov
cmp
sarl
add
or
lods
inc
mov
mov
adc
mov
lahf
jae
loope
ss
xchg
lret
rorl
dec
loop
lret
ret
mov
fadds
jns
sarl
or
mov
dec
es
mov
imul
add
xchg
idivb
rclb
inc
or
xchg
adc
loop
lret
ljmp
rcrl
addr16
adc
ja
xchg
stc
je
rorl
and
inc
cmp
js
push
mov
stos
addr16
pop
sti
inc
mov
out
in
incl
mov
lret
ljmp
out
sub
push
push
lcall
adc
sub
getsec
es
hlt
sub
dec
dec
or
mov
hlt
inc
and
cld
xor
xor
jae
add
or
shr
das
test
das
push
or
inc
retw
cmp
leave
xchg
adc
jmp
pop
lcall
or
dec
in
add
fcoml
jmp
xor
xchg
add
cmp
jae
out
jae
jp
pop
inc
rcrb
jbe
loope
dec
push
jb
aad
inc
xor
lret
push
pop
and
cmp
or
xlat
xor
or
popf
jl
xor
dec
inc
out
sub
imul
sub
jb
mov
js
xlat
cmp
imul
bt
dec
push
je
test
pop
xor
dec
mov
leave
neg
mov
dec
add
repnz
inc
mov
test
mov
lea
mov
and
pop
insl
sub
push
xchg
mov
in
mov
adc
shll
push
dec
out
and
cmp
mov
push
fwait
dec
xor
or
jae
mov
mov
lock
incl
arpl
cwtl
call
jge
call
shrl
inc
inc
pop
pop
scas
pop
addr16
sti
ds
mov
jge
insb
adc
pop
in
add
leave
sbb
test
dec
gs
jno
les
cmp
cli
add
pop
inc
push
sub
shl
sbb
jge
aas
cld
outsl
neg
fisubl
xchg
rol
push
or
jp
mov
and
inc
addr16
inc
test
add
incb
out
jmp
jns
pop
fistps
fwait
push
jmp
mov
addr16
ljmp
cmp
xor
sbb
insb
call
inc
fadds
jl
mov
jo
jecxz
ljmp
iret
mov
int
jge
pop
push
adcl
and
sbb
cmp
sbb
mov
sub
xchg
dec
das
and
loope
mov
xchg
negl
lcall
sarb
loope
push
push
das
sub
mov
push
and
sub
cmpsb
arpl
add
and
rcl
xchg
jle
push
mov
pop
cltd
push
push
ret
in
push
xor
fmuls
push
lcall
cmc
sahf
jle
fs
jns
add
cmp
popf
xlat
jg
mov
movl
add
out
test
adc
sarl
cmp
mov
jecxz
pop
ret
inc
ss
sub
aas
jbe
repz
adc
pop
inc
aam
icebp
frstor
xchg
dec
sub
jecxz
jbe
sbb
cltd
pslld
ljmp
or
outsb
lods
mov
pop
sub
or
cwtl
in
sub
frstor
cltd
out
mov
aas
out
cmp
int
xchg
lods
loope
fiaddl
ret
jle
pop
dec
repnz
movsl
es
jns
repnz
shlb
shrb
inc
push
adc
or
test
lahf
sbb
je
and
mov
add
cmp
loopne
hlt
sbb
test
mov
sub
mov
das
cwtl
je
or
inc
mov
jp
data16
fcomps
sbb
xchg
xchg
sbb
sub
push
pop
sub
jl
lds
cmc
and
push
pushl
dec
repz
mov
sbb
insb
clc
mov
jecxz
push
in
adc
iret
repz
out
popf
cltd
jns
fildl
push
cs
lock
das
sub
push
arpl
or
popa
fwait
lret
bound
cltd
inc
xor
cmc
pop
insl
sbb
leave
test
and
enter
int3
fmul
xchg
mov
xor
fcoml
ret
push
xor
rcll
sub
test
adc
das
fimuls
inc
in
fisttpl
cmp
into
out
lret
in
and
dec
lea
xorb
mov
in
shll
adc
sbb
jecxz
fadds
cmp
add
xor
fldenv
insl
adc
mov
inc
cmp
mov
shl
pusha
mov
jmp
inc
out
lods
xorl
fistps
and
adc
popf
imull
movsl
cmp
adc
push
arpl
pop
add
pop
add
push
mov
dec
popa
clc
les
xchg
paddq
fwait
xor
pushf
ja
push
cmc
test
lds
adc
sub
dec
or
sub
jb
push
clc
mov
in
mov
outsb
push
cmp
add
jb
lahf
hlt
lcall
cmp
cwtl
xchg
aad
arpl
rcll
mov
repz
dec
mov
inc
out
fnstenv
bnd
or
int3
xchg
mov
loop
rolb
inc
cmp
clc
xchg
push
sbb
incb
push
adc
xor
sbb
mov
push
add
or
push
int
adc
loope
loopne
scas
push
sub
push
dec
mov
std
adc
bound
std
outsb
xor
add
or
cmp
jns
repz
ljmpw
repnz
lahf
pop
hlt
in
push
xlat
popa
push
lcall
mov
cmp
mov
pushf
jo
cmp
mov
mov
xor
fs
jl
loope
psrlq
sub
stos
sbb
aaa
push
lods
cmc
addr16
inc
out
mov
lds
in
cli
jno
icebp
xchg
mov
sbb
das
jo
cmpb
push
push
inc
jbe
mov
xchg
jp
mov
lret
xchg
push
mov
pop
jnp
cltd
bound
xchg
stos
mov
ret
jns
scas
mov
subb
inc
in
inc
bnd
lock
repnz
sub
mov
or
leave
shrl
std
push
popa
movsb
out
jns
out
enter
mov
lods
xor
fs
pushf
and
xor
popa
hlt
icebp
mov
mov
aad
sbb
iret
repnz
es
xchg
adc
fcompl
repnz
xchg
hlt
out
xor
pop
mov
inc
xchg
cmp
clc
sub
push
movsl
scas
pop
jecxz
repz
shl
data16
insb
dec
cwtl
ficompl
xchg
mov
pop
sub
xchg
adc
ror
sahf
scas
icebp
hlt
idivl
in
mov
jbe
pop
je
orb
int
iret
cmp
cld
cmp
std
jo
cmp
inc
push
and
pop
cmp
fidivrs
cld
dec
lret
mov
dec
push
cmp
cmp
add
mov
mov
push
movsb
jg
push
mov
ljmp
ret
mov
roll
xchg
and
cmpsl
mov
dec
popf
repz
pushf
xchg
sub
jb
jbe
xchg
stos
test
ljmp
ds
out
adc
ja
gs
adc
js
adc
stc
loope
lret
mov
push
xor
rorb
mov
in
cli
leave
loopne
xor
sahf
jb
daa
pop
adc
mov
shlb
js
pop
leave
outsl
mov
push
mov
cmp
cmp
push
inc
adc
xchg
scas
dec
xor
je
inc
push
or
in
jns
ljmp
jmp
dec
xorb
push
mov
xchg
adc
xor
push
jne
test
aad
loopne
stos
xchg
xchg
push
insl
dec
jg
sbb
adc
and
fmulp
cmp
sub
fistpl
sbb
mov
pop
movsl
icebp
or
addl
les
popf
pop
fisttpll
or
leave
mov
daa
aad
imul
pop
je
movsb
pop
aad
dec
mov
pop
roll
sbb
testl
in
out
mov
mov
jmp
cwtl
imul
bswap
inc
sub
pop
ret
enter
das
pop
fldcw
xchg
mov
push
lahf
ret
iret
fs
daa
iret
cmpsb
fcom
in
jnp
xlat
repz
test
mov
sbb
aad
add
mov
lods
repnz
inc
scas
rcll
adc
jo
lock
std
or
or
xchg
imul
cmp
orl
rorb
cmp
mov
pop
insb
js
test
xor
imul
fwait
jo
andb
xor
or
inc
lock
lods
test
cld
fdivs
sub
push
or
lock
mov
adc
cli
mov
xchg
pusha
stos
lods
pop
or
loop
jl
mov
mulb
sbbl
pop
mov
adc
xor
sti
xor
jbe
jl
cmpsb
jnp
xchg
mov
push
jl
ret
pushf
fisubl
xchg
dec
in
loopne
inc
dec
sbbb
add
sbb
jnp
movsb
mov
mov
in
add
arpl
cwtl
sbb
inc
or
into
push
int
push
sbb
cmp
cltd
jae
sbb
iret
sub
sub
pop
gs
inc
pop
mov
repz
dec
xor
test
stos
pop
lds
mov
inc
push
cmpsl
js
out
mov
fbstp
imul
pusha
shr
sti
movsb
mov
movsb
inc
cmp
mov
mov
xchg
in
lret
pop
or
lea
jp
and
andb
dec
push
mov
or
push
mov
test
dec
aaa
xchg
adc
fmull
mov
cmp
sbb
out
cs
mov
imul
pop
pop
aad
enter
and
xchg
mov
fstpt
subl
stc
mov
pusha
or
js
outsb
push
inc
mov
andb
push
ds
rorl
in
ja
imul
mov
int
dec
hlt
adc
andb
push
xchg
aaa
es
iret
dec
stc
pop
adc
sub
sub
call
jle
mov
push
or
lea
add
and
inc
aas
jge
fistl
movsl
dec
inc
lret
inc
fst
xchg
sarl
fiadds
int
jbe
push
push
fdivrl
mov
rclb
sbb
lret
inc
rolb
fdivs
or
jg
stc
mov
dec
dec
pop
addl
dec
sub
neg
sbb
adc
mov
sahf
mov
xlat
cmp
pop
add
clc
cmc
popa
adc
sahf
outsl
mov
sbb
cmp
cli
xchg
fs
aam
xor
mov
jo
sub
shrb
jp
popa
jecxz
leave
mov
dec
mov
pop
cmp
pop
shll
mov
aad
push
mov
ds
das
pop
cmpsb
out
sahf
mov
sub
stos
leave
cmpsb
mov
add
out
inc
push
std
xchg
fdivrp
add
test
imul
mov
sbb
notb
adc
test
ljmp
lret
xchg
mov
or
insb
cmpl
sub
jge
popa
sbb
lret
les
sbb
adc
xor
inc
aam
mov
mov
in
dec
jnp
stos
pop
or
pop
sub
ja
nop
and
in
jns
dec
sub
sub
add
cwtl
scas
jle
repnz
pop
and
adc
xlat
adc
sti
andb
push
push
out
xchg
dec
adc
xchg
sub
test
mov
add
and
mov
ret
sub
jmp
lods
push
lahf
pop
xor
insb
rcll
add
dec
aad
movsb
push
xor
and
cmpsb
hlt
data16
lahf
movsl
cmp
lret
xchg
or
outsb
je
arpl
enter
jecxz
mov
lods
daa
dec
int
cli
enter
call
sub
add
push
and
arpl
into
les
fs
jmp
scas
dec
out
mov
or
lcall
int
fcmovu
inc
fsubrp
aam
sbb
adc
or
imul
rcrl
cld
pop
or
pop
add
jns
push
icebp
and
jbe
mov
pop
and
add
bound
movsb
pop
ljmp
pop
je
aaa
es
inc
pop
sahf
cld
sbb
mov
jecxz
push
mov
adc
in
dec
pushf
or
and
shrb
mov
xor
lea
rcrb
push
pop
pop
dec
dec
cltd
jmp
sahf
xchg
mov
inc
mov
and
data16
or
mov
popf
jg
mov
or
mov
mov
jg
mov
xchg
cwtl
push
push
mov
in
aad
addr16
fdivrp
dec
xchg
push
pop
and
dec
push
cmp
sub
lods
sub
stos
insl
pop
std
int
pop
data16
cld
push
add
mov
aad
inc
ljmp
push
pop
sbb
or
mov
imul
mov
jne
and
lahf
push
fisubrs
push
fcomps
movsb
lods
jnp
xchg
flds
jo
sbb
cmpsb
out
aas
pop
testb
xor
fistps
dec
out
jle
test
pop
jg
add
stos
in
imull
rorl
jecxz
xchg
fucom
test
js
cli
pop
lds
mov
mov
test
fwait
and
inc
and
dec
inc
aam
repz
lock
add
fs
cld
mov
sarl
mov
inc
pop
push
dec
sbb
out
lcall
push
mov
pop
int
sub
adc
cwtl
popf
fistpl
imul
stos
xchg
divl
sub
jmp
sbb
jl
mov
pushl
lcall
stos
ss
ret
sahf
or
fadds
add
lea
sub
mov
cmpsl
aad
cmpsl
xor
or
fwait
addr16
mov
in
loop
aad
lods
les
sub
add
movsb
lcall
push
stc
jnp
inc
popf
xor
push
pop
mov
xor
out
mov
jns
dec
gs
lock
imul
out
repnz
adc
inc
and
jl
mov
clc
push
loopne
xlat
dec
fs
iret
xchg
les
ja
xchg
dec
mov
mov
and
xchg
cmc
rcrl
test
shrl
fwait
repnz
ret
ja
push
incb
in
or
adc
push
rclb
pop
jns
inc
fdivrs
pop
push
subl
mov
and
daa
jge
mov
mov
mov
mov
lods
or
cmp
cs
and
cmp
cli
sbbl
or
xchg
jg
inc
movsl
adc
nop
add
lock
xchg
fwait
add
aam
dec
iret
je
or
xor
clc
adc
add
push
das
push
es
test
aas
jmp
repnz
xor
aad
sbb
xor
dec
test
popf
shl
test
ja
addr16
jg
cmc
outsb
shr
and
xor
or
cltd
mov
xor
push
mov
lret
outsb
jo
addl
cmp
pop
sub
data16
mov
inc
popa
or
data16
cmp
fiaddl
mov
adc
out
cmpsb
adc
fstpl
sub
icebp
dec
xchg
fbld
xchg
push
jmp
filds
in
pop
fildll
hlt
loop
add
pop
std
rol
test
lret
xor
cltd
and
adc
add
mov
out
adc
clc
pushf
insl
fwait
jo
pop
cmc
xor
jg
repz
movsl
and
push
or
pop
xor
pusha
in
aad
popf
testl
jns
mov
xchg
push
and
jbe
dec
mov
mov
lcall
lea
sbb
aad
mov
repz
arpl
out
sbb
adc
pop
jbe
inc
lock
jb
and
push
lea
jb
xor
scas
adc
inc
add
mov
inc
dec
pop
out
mov
xor
lods
dec
and
mov
cmc
xor
les
sub
xchg
into
mov
add
outsb
sub
sbb
xor
outsb
aaa
inc
ss
jl
in
push
xor
stos
movsl
adcl
pop
ret
repnz
shr
xchg
or
pop
outsl
lret
and
popa
push
movsl
and
cmp
out
add
mov
dec
fidivl
hlt
mov
cli
sbb
repz
popf
scas
cmp
clc
test
lods
stc
jbe
dec
xchg
xchg
nop
and
cmpsb
sub
mov
mov
or
mov
mov
and
xor
mov
fstl
adc
sub
xor
sbb
gs
jmp
popf
xor
ss
lock
fidivrs
cld
jnp
and
sbb
andl
pop
xor
dec
loope
mov
addl
pop
jnp
cmp
pop
movsl
js
adcb
scas
or
aad
sub
dec
js
adc
mov
int3
gs
leave
test
sub
dec
sub
inc
setno
and
fidivrl
pop
jns
bound
mov
push
out
adc
jmp
cmpsb
pop
cli
sbb
movsb
addr16
inc
lea
cmc
out
cmpsl
fimuls
cmc
and
push
mov
int
push
mov
inc
and
rcl
loope
aaa
adc
aad
xchg
and
jno
ja
xchg
xchg
jecxz
xchg
jmp
scas
cmp
push
pop
sti
mov
sub
in
pusha
sub
je
insb
test
mov
or
rorl
sahf
cmp
imul
pminub
mov
or
ljmp
jg
popa
or
push
mov
out
dec
pop
xor
jmp
decb
push
fidivl
fisubl
xor
inc
aaa
fistl
fnstsw
xor
jbe
ljmp
das
add
sbb
mov
lods
push
dec
xor
fnclex
ss
dec
jmp
lock
mov
xchg
adc
add
push
and
cmp
ds
ret
sbbb
sbb
lcall
shll
cmp
test
lea
add
rcr
fisubrs
stos
repnz
dec
pop
add
adc
daa
push
rcrb
andb
mov
lcall
push
adc
pop
jbe
jbe
add
jno
sbb
inc
and
testb
inc
dec
stos
testb
stos
pop
icebp
imul
fisubl
enter
in
stos
pop
es
nop
hlt
jns
in
sbb
mov
cwtl
jmp
and
scas
sti
aad
js
mov
xchg
int
mov
and
in
pop
std
dec
imul
and
xor
dec
int
scas
negb
cmp
sbb
or
push
jle
movsl
stos
mov
lods
cmp
xor
roll
in
aad
movsl
dec
jb
xor
lock
in
fwait
inc
idiv
mov
pop
rorb
sub
scas
mov
repnz
adc
push
jg
scas
rolb
xlat
ja
or
jg
pop
lret
pop
in
in
cmc
lds
in
adc
jecxz
lods
inc
push
out
sub
sub
xchg
cmp
or
mov
dec
ret
jp
pop
fsts
xor
fsubs
out
out
cld
call
adc
mov
lock
adc
insl
pop
lods
cmp
xlat
popa
das
or
xor
sar
cltd
mov
in
sbb
jnp
aaa
pushl
pusha
mov
add
pop
or
xor
xchg
pop
sbb
gs
orl
jns
mov
repnz
daa
outsb
notl
push
push
mov
cmpl
popf
es
test
inc
sub
lcall
pushf
xchg
jb
jecxz
dec
xchg
mov
stos
outsb
popa
or
cmpsb
fcomps
enter
pop
cs
sar
les
outsl
out
push
movb
mov
out
shlb
out
or
mov
mov
es
arpl
divl
sub
cmp
xchg
insb
nop
pushf
das
outsl
sbb
push
jg
gs
ja
sub
cmp
jnp
cs
cwtl
cmp
cmp
cmc
lods
hlt
mov
sbb
xor
aaa
mov
xchg
les
popa
inc
sub
hlt
mov
xchg
loop
add
lahf
inc
rolb
imull
push
hlt
test
push
rcll
pop
lahf
or
inc
lock
jnp
xor
mov
pop
jg
push
call
pop
leave
notb
push
popf
mov
pop
jmp
gs
mov
sub
push
pop
inc
in
pop
pushf
stos
je
inc
dec
stos
addr16
mov
dec
dec
lret
cltd
mov
push
movsl
xor
testl
mov
jmp
clc
lea
call
js
adc
test
loopne
cvtpi2ps
push
xchg
sub
orb
movsl
out
js
call
or
xchg
xchg
sbb
rol
loop
pop
xor
es
sub
dec
mov
jge
fists
mov
gs
push
lcall
lods
mov
add
pop
push
and
push
cmp
xchg
shlb
or
jg
fsub
or
sub
cmp
addr16
pop
out
shll
popl
mov
std
dec
icebp
outsb
rorl
adc
stos
pop
xor
fcomps
movsl
and
enter
rcrb
rcl
inc
cmp
xchg
inc
adc
sub
jb
pop
into
shl
out
arpl
clc
loope
push
sti
repnz
aad
xor
lret
repz
inc
addr16
cmpsb
mov
push
mov
inc
imul
test
arpl
lods
or
xchg
jl
pop
push
lea
jnp
inc
stos
fildll
mov
lds
push
or
cmpsl
call
cmp
rclb
cmp
add
aaa
icebp
xchg
sbb
mov
push
adc
lret
icebp
jnp
lret
and
ret
std
stos
add
aaa
xchg
sub
lret
sbb
lea
in
mov
xlat
mov
enter
mov
push
mov
imul
sahf
addb
mov
repz
xor
adc
hlt
cli
test
imul
sahf
aaa
ficompl
mov
cli
sti
movsl
inc
repz
add
mov
push
inc
jmp
adc
inc
sarl
sbb
insb
inc
ret
jne
das
jmp
lods
enter
movsb
mov
fneni(8087
test
arpl
add
out
test
out
and
into
fdivs
sbb
sbb
fs
pop
dec
mov
out
pop
cmovns
loop
xchg
jae
lods
into
out
push
lahf
sub
and
ja
add
xchg
sub
cmp
dec
mov
push
sub
and
addr16
xchg
outsl
scas
adc
addb
lods
enter
mov
xchg
cmp
pop
les
push
mov
test
hlt
adc
dec
push
rcr
roll
mov
mov
adc
jmp
add
js
movsl
into
dec
or
out
ret
mov
pop
sbb
mov
pusha
ret
shrl
cs
out
rcl
add
lds
xor
mov
xchg
aad
test
push
lods
jb
lea
nop
sub
jae
test
leave
stc
ss
mov
xor
push
adcb
xor
dec
pop
ficomps
rol
aam
ds
xchg
in
sub
sbb
cmpsl
mov
add
roll
inc
mov
pop
test
sub
jns
mov
int3
adc
fsubl
icebp
loopne
mov
jns
sbb
mov
popf
jle
outsb
movsb
mov
ljmp
fistpll
subb
xlat
cmc
and
addr16
pop
xor
out
sahf
add
xor
mov
jo
adc
push
xor
jbe
push
daa
shlb
out
int
pop
mov
mov
in
mov
incb
sbb
divl
xor
jge
mov
or
es
adcb
mov
pop
addr16
stc
in
cmp
gs
ds
movsb
fcmovu
das
pop
sub
pop
lods
xor
mov
fnstcw
cld
sbb
add
xchg
add
psubd
jl
mov
dec
or
int3
lahf
mov
pop
loopne
xor
lcall
daa
cmp
xor
or
std
test
lock
arpl
scas
mov
adc
js
mov
mov
sbb
jmp
decb
fidivs
cmpsl
push
xchg
sub
cmpsl
sub
cmpsl
or
test
dec
sub
test
cmp
pop
aad
jp
inc
mov
sbb
jl
lret
in
add
rcrl
roll
inc
xor
icebp
mov
mov
cmp
dec
mov
pop
lret
or
shll
cmpsl
sbb
les
leave
jno
test
pop
nop
adc
push
popa
sbb
notl
xor
push
push
push
xchg
dec
fldt
cmp
mov
mov
gs
or
adc
and
out
stos
xorb
sbb
pop
adc
adc
popa
insl
mov
js
enterw
pop
sbb
mov
mov
jmp
popa
sti
jp
xor
cltd
sahf
out
dec
mov
mov
or
sbb
out
cmp
xchg
aad
popa
mov
std
ja
test
push
sub
iret
shl
es
mov
fisubs
aas
mov
push
shl
dec
pop
mov
cs
fldcw
outsl
out
fmulp
out
xor
jp
mov
mov
xor
jnp
push
mov
cmp
inc
adc
loope
mov
test
sub
mov
xor
inc
jmp
hlt
nop
push
fdiv
ljmp
lcall
bound
outsb
pop
adc
jmp
push
xchg
lods
push
xchg
test
popf
iret
or
jecxz
inc
nop
add
jg
sub
xchg
paddsw
sahf
fsubrl
xor
dec
xor
push
out
scas
and
pop
push
clc
addl
and
out
stos
andb
lods
pop
pop
xor
dec
sti
jl
inc
movl
hlt
int
sub
xor
pop
test
pop
jl
outsb
test
out
mov
hlt
jae
stos
stos
pusha
pushf
mov
test
jle
pusha
stc
cld
dec
ret
lea
jae
or
inc
in
stc
outsl
jmp
lahf
popa
lds
in
orl
xchg
scas
sub
imul
cmpsb
cli
mov
xor
cmpsb
dec
dec
imul
dec
popf
jmp
add
sub
cmc
push
sti
xor
mov
adc
adcl
xchg
add
pop
imul
ficomps
pop
push
pop
fimuls
inc
imul
jle
sub
pop
sbb
inc
popa
cmp
push
lret
cli
cmpsb
jg
jns
inc
icebp
adc
and
fpatan
xchg
mov
mov
push
push
mov
fucomi
lret
dec
push
mov
sbb
shl
inc
cmc
sti
add
dec
sti
dec
sbb
xchg
aam
data16
xchg
fistpl
cmp
ret
cmpsb
or
jmp
pop
in
jne
call
or
pop
push
xor
outsl
dec
jg
sbb
lock
aam
add
push
xchg
test
shlb
jb,pt
sub
mov
xor
pop
cmc
test
add
scas
es
add
sub
mov
cmp
or
aam
enter
ja
sarl
pop
cmp
dec
jns
loop
mov
inc
adc
in
lret
inc
xlat
add
es
scas
add
push
pusha
add
jecxz
icebp
xchg
sub
cmp
cmp
push
or
loopne
std
inc
fisubrl
leave
xor
fs
xchg
sub
mov
sbb
cs
pop
loop
xchg
mov
in
icebp
push
cmc
popa
shll
fdivrs
std
add
jnp
mov
mov
add
mov
push
jl
push
scas
in
push
mov
inc
pop
andb
add
xchg
and
jo
in
xchg
ja
and
ffree
adc
inc
mov
xor
in
leave
sub
cmpsb
loopne
inc
cmp
sbb
ja
sbb
sub
out
xchg
lods
mov
pop
push
loopne
lds
js
and
mov
adcl
cltd
mov
mov
push
push
or
jmp
rolb
jnp
icebp
push
xchg
ret
push
dec
in
rcll
outsb
mov
outsl
int3
pusha
adc
mov
dec
xchg
pop
jge
jge
movsl
sub
stc
adc
lcall
in
adc
mov
pop
sbb
sub
or
pop
pushf
lea
in
sub
xchg
dec
int
je
push
jg
repz
out
dec
lock
adc
jb
and
inc
pop
paddusb
dec
sbb
fdiv
aad
call
lock
push
fldenv
cli
jmp
fadds
xchg
push
jo
lret
push
or
and
push
lods
test
pop
test
lods
int
mov
sbb
aas
imul
dec
sub
mov
lock
jmp
inc
rcll
cmpsb
lock
dec
push
lea
dec
and
cmpsb
ret
push
sbb
std
or
or
xor
stos
xchg
jge
mov
fdivrs
shll
out
adc
loopne
enter
outsb
imul
mov
idiv
pop
in
idiv
add
pop
or
and
cli
loope
dec
xchg
test
push
xchg
fmulp
jne
addr16
inc
inc
arpl
lods
sbb
sub
pop
pop
addl
add
es
add
mov
loope
sub
pop
ds
inc
jno
lods
adc
out
int3
xor
pop
jmp
cmp
fldl
inc
xchg
pop
sub
mov
call
dec
xchg
ja
arpl
pop
and
push
push
xor
push
and
test
push
adc
xchg
fiaddl
push
popa
adc
sub
fbstp
pop
les
inc
rclb
test
push
clc
cltd
jecxz
shl
clc
call
je
cs
std
mov
adc
jnp
xorl
add
or
mov
cmp
fldenv
sahf
jns
leave
lret
add
jae
push
sbb
in
popa
push
sbb
ret
mov
jmp
xor
sub
mov
or
sti
shrb
or
push
push
push
jmp
leave
mov
loop
cltd
popf
cmp
and
leave
sahf
jno
or
xchg
fimuls
insl
loope
adc
test
jle
fs
xchg
mov
xor
imul
push
inc
cmp
and
adc
add
cmpb
in
mov
mov
arpl
mov
sbb
icebp
dec
jge,pt
push
sbb
pushf
cltd
js
test
pop
cmpsl
sti
inc
mov
mov
push
jnp
rorb
int3
mov
nop
and
mov
aad
movsl
xlat
cmpsl
negl
sub
jne
pop
shrl
jmp
imul
ja
sub
call
in
mov
push
imul
outsl
sbb
lock
or
sti
sub
icebp
pop
xchg
sbb
orb
cli
je
gs
bound
dec
inc
mov
jle
incb
cmp
dec
pop
int
xor
xor
sahf
pop
sti
es
je
mul
adc
sbb
roll
shll
loop
inc
cmp
push
push
subl
test
add
xchg
mov
cld
add
dec
pop
xor
shrl
inc
add
cmc
aam
gs
mov
repz
loopne
incb
stos
rcll
pop
jo
mov
xor
jecxz
pop
xchg
cmpsb
mov
xor
xchg
sub
cli
outsl
mov
lock
popa
daa
into
mov
mov
mov
sbb
adc
sub
xor
mov
push
sub
cmp
and
mov
add
test
pop
or
lahf
mov
push
sahf
xor
sbb
jl
pusha
scas
adc
in
rol
fistpl
jecxz
mov
movsl
cmc
test
mov
rol
hlt
sarb
dec
stos
imull
xor
push
jmp
in
lods
add
mov
adc
sbb
pop
pop
mulb
mov
mov
xor
loop
js
es
dec
dec
inc
xchg
stc
and
gs
out
adc
aaa
pop
sub
ja
sbb
ret
pop
gs
cmpsl
cmp
adc
out
pushl
ds
inc
dec
fnsave
std
je
push
xchg
icebp
arpl
dec
lahf
rdpmc
and
into
js
cld
xor
dec
mov
mov
imul
pop
dec
adc
je
adc
inc
fidivs
sub
pop
cmc
jo
ja
out
mov
rorl
movsl
cmp
fs
jbe
sbb
icebp
jbe
hlt
lret
ficoml
push
pop
dec
push
mov
hlt
push
xlat
lret
jecxz
test
mov
xchg
inc
call
daa
or
xor
shrl
insl
push
mov
int
hlt
add
dec
add
aaa
inc
enter
mov
test
lahf
ret
mov
mov
lahf
push
iret
sbb
and
pop
repz
outsl
stos
and
hlt
mov
idiv
outsl
add
and
pop
inc
scas
xchg
mov
mov
cmp
stos
adc
lret
or
in
or
sub
stos
lahf
ret
sbb
and
push
jb
jo
xchg
jne
shr
out
mov
repnz
mov
nop
jecxz
push
arpl
push
push
push
add
and
add
repz
xchg
stos
or
mov
cmp
arpl
rorl
xchg
mov
sbbb
dec
or
lock
in
imul
adc
sbb
pusha
adc
dec
mov
inc
imul
cltd
xchg
mov
test
scas
pop
sbb
imul
sbb
mov
leave
out
out
fwait
inc
inc
fstpl
cmp
iret
and
or
mov
movsl
xor
adc
mov
push
adc
sbb
test
pushf
push
push
mov
sub
out
lret
pushf
outsl
test
push
dec
dec
xor
out
pop
push
xchg
push
ss
adc
sahf
fistps
mov
xor
or
sbb
test
rcr
shlb
mov
loopne
cmp
arpl
mov
jg
jecxz
xchg
js
in
dec
das
daa
stc
sbb
mov
outsb
and
jge
cmp
jb
popf
idivb
mov
pop
xchg
mov
mov
and
jmp
xchg
out
pop
and
fists
add
aad
ja
sbb
jne
repz
sti
cmp
or
inc
call
cmp
and
dec
jb
int3
scas
test
pusha
addl
pop
sbb
popa
dec
hlt
xor
mov
xor
hlt
push
push
lret
lahf
movsb
mov
stos
xor
ret
sbb
aam
shll
push
cmpsl
js
mov
es
imul
cmovbe
fs
push
jmp
test
inc
xor
addl
add
repz
int3
sbb
mov
andb
ror
movsl
adc
jmp
das
sbb
out
push
add
sti
pop
cli
xchg
lock
jae
mov
mov
fs
inc
dec
das
out
pushl
test
cwtl
add
stc
add
push
mov
sbb
and
pop
push
ss
pop
cs
pop
jns
test
cli
push
enter
sub
pop
insl
fs
xor
push
jle
stos
call
std
subl
cli
loopne
or
fisttpl
dec
mov
add
mov
jno
pop
mov
ss
lock
push
xor
cmp
mov
mov
push
push
pop
mov
leave
add
pop
jae
mov
and
inc
xor
subl
or
add
jp
int3
test
test
jnp
xchg
and
je
or
mov
cmp
insl
rolb
and
stos
xor
jmp
and
in
loop
sbb
and
insl
addb
pop
mov
ret
mov
pop
icebp
scas
cld
lret
subl
int
shrl
jns
sti
cli
cmpl
adc
stc
push
mov
inc
mov
out
pop
sti
movsl
call
test
add
push
sub
and
aas
pushf
fwait
sub
jae
sysenter
xchg
int3
in
insl
cmpsl
pop
cmpsl
sub
dec
xchg
dec
jl
sbb
sub
jl
inc
lea
xchg
popa
jae
stc
stos
outsb
jmp
rcr
mov
cmpsl
cmpsl
outsb
and
into
dec
jno
push
sbb
movsl
ds
call
fxch
push
iret
inc
mov
adc
xor
sub
push
mov
popf
icebp
inc
call
adc
push
into
fiaddl
stos
cmc
mov
push
faddl
and
xchg
mov
outsb
xor
mov
or
pop
ds
rcrl
add
xchg
fdivrl
testb
std
pop
ret
fcoms
or
scas
mov
mov
lds
int
sbb
cmp
mov
mov
into
imul
ja
fstps
add
jae
fld
inc
jl
push
rol
jle
pmuludq
ss
lds
iret
ljmp
sahf
dec
sub
imul
pop
stos
out
bound
into
xlat
push
mov
frstor
pop
fcmovne
ret
dec
jnp
movsb
mov
ss
cmpsl
mov
arpl
inc
xor
imul
cmp
push
mov
xchg
cmp
xchg
cwtl
cmp
in
mov
fs
imul
or
popa
sub
fwait
adc
xchg
mov
xor
rcrl
in
mov
arpl
fists
cmp
das
push
fistpl
lods
cs
mov
fcmovnbe
pop
xor
mov
inc
fiadds
cltd
pusha
xchg
pop
test
adc
adc
push
xor
mov
mov
or
imull
mov
lret
xlat
loop
xor
shrl
inc
enter
les
adc
xor
out
mov
pop
cmp
lds
fbstp
sar
fidivl
imul
outsb
mov
movb
sbb
in
push
mov
push
mov
inc
cmp
imul
cld
cmc
dec
mov
lds
pusha
pop
xchg
mov
mov
insb
ss
adc
call
fs
cmp
stos
jno
or
rep
fwait
jecxz
dec
lods
mov
lods
rcll
loop
push
pop
pusha
or
cmp
cmp
clc
cmp
lods
clc
push
sub
push
fidivl
inc
sub
inc
pop
mov
in
jle
fwait
or
jns
leave
out
movsl
dec
lods
xor
divl
dec
pop
es
int3
inc
es
ret
pop
mov
sbb
lcall
mov
cmpsl
out
adc
xor
sbb
mov
xchg
mov
mov
xchg
arpl
mov
shrl
sarl
xchg
lock
inc
dec
js
mov
movsl
mov
pop
lahf
add
cwtl
cmp
ljmp
xor
pop
dec
data16
je
scas
push
xor
fs
pop
dec
fs
inc
xor
cmpsl
fst
mov
lods
or
insb
jo
push
mov
cmp
call
or
push
cmc
movsb
cmp
fstpl
scas
fdivr
sbbl
out
hlt
sub
scas
jae
pop
fwait
lods
insl
jp
mov
fdivl
es
ljmp
popf
iret
xchg
sti
push
testl
leave
xchg
ds
jle
add
ds
flds
adc
dec
int3
inc
xor
sub
or
xchg
dec
dec
lods
stc
int3
mov
in
mov
out
stc
dec
lret
cmpsl
jg
or
cwtl
movsb
dec
jmp
push
std
mov
ss
jle
mov
test
xor
outsb
push
push
mov
push
and
in
hlt
insb
lea
out
jg
rcr
nop
pop
outsl
mov
xchg
jecxz
xorl
jecxz
mov
insl
sub
jns
push
pop
out
and
mov
xor
jmp
neg
xchg
push
pushf
ret
mov
jle
jecxz
jno
pushf
ret
jle
mov
std
arpl
adc
inc
stos
xchg
mov
cwtl
sub
push
roll
insl
bound
sbb
or
mov
pop
pop
and
jle
cmc
xor
fst
push
cltd
lods
and
xor
and
xor
bound
shlb
xchg
insb
mov
lahf
push
dec
mov
cmp
clc
dec
cmc
pop
adc
add
xchg
pushf
or
out
lahf
push
dec
in
inc
mov
repz
les
ret
outsl
les
je
fcomps
push
cli
dec
cmp
aad
xor
pop
addr16
pop
mov
or
cmp
loope
mov
iret
xor
mov
out
push
punpcklbw
push
pusha
gs
pop
rcl
mov
imulb
leave
lock
adc
ljmp
sbb
lret
sbb
fcmove
pop
ds
mov
pop
sbb
leave
xor
or
push
imul
aas
stos
ss
cmpsb
fsubrl
test
cmp
adc
mov
xchg
sub
ret
cmp
aam
rclb
sbb
push
push
or
cmp
xchg
testl
out
jge
clc
clc
sub
mov
fisttpl
test
in
gs
lock
xsaves
pop
lea
or
mov
out
jns
sbb
xor
shlb
dec
in
and
lods
lods
faddl
int3
sarb
arpl
push
cmp
loopne
xor
ret
ds
js
mov
psraw
xchg
jae
jnp
out
leave
xchg
sbb
mov
orb
xor
inc
mov
and
jecxz
push
dec
call
ret
or
jbe
xor
data16
outsl
adc
loop
rcrl
mov
jne
mov
cmc
aaa
fstpt
dec
adc
xchg
ret
add
dec
pop
or
flds
add
es
inc
pop
mov
pop
mov
clc
out
imul
adc
adc
test
sub
fcomp
mov
xor
push
into
or
push
stc
jnp
cmc
lret
ret
loop
out
cli
fsubrl
rcr
inc
mov
out
mov
scas
clc
hlt
adc
pushf
call
push
je
movsb
adc
add
pop
popa
dec
cltd
gs
rcrb
mov
ret
lods
aam
xchg
das
imul
cmp
mov
mov
in
xor
pop
jge
lret
inc
or
dec
mov
mov
add
push
mov
cmp
xchg
pop
pop
xlat
addr16
xlat
or
shr
test
adc
cld
mov
cwtl
ret
xor
mov
or
sub
inc
xchg
push
lahf
shlb
mov
push
push
mov
mov
push
fsubl
test
fcomi
inc
and
add
mov
and
gs
jo
shrl
insl
and
cmc
jg
repz
and
movsl
xchg
int3
pop
mov
adc
add
xchg
pop
std
dec
sub
jp
ja
fistpll
pop
xchg
adc
dec
sti
push
adc
jl
test
jecxz
jg
push
push
sbb
pop
out
cmc
shl
ret
rcll
mov
insl
jnp
inc
sub
cmp
fnstcw
and
xchg
push
nop
subb
mov
add
stos
jae
in
jb
insb
scas
mov
mov
inc
repnz
ljmp
dec
cmc
cmp
mov
ret
xor
fistpll
push
adc
dec
fiaddl
push
adc
adc
jae
jp
and
imul
lock
repnz
xor
jae
shr
mov
push
jbe
stc
sahf
jge
mov
loop
push
shrl
fcmovu
cmp
push
adc
fucomi
pop
lret
ret
jmp
call
xchg
jp
mov
ljmp
bound
ret
sbb
cmpsb
xor
mov
shrl
push
jecxz
sbb
mov
xchg
pop
sahf
movsl
fldenv
mov
pop
mov
cld
sub
fstps
out
mov
cmp
dec
pop
imul
ja
mov
dec
push
lds
adc
insl
push
mov
sub
mov
mov
jmp
or
aad
jecxz
xchg
into
and
jae
jge
scas
in
out
nop
fldt
mov
call
movsl
insl
mov
add
xchg
test
xchg
mov
outsb
stos
ja
and
sbb
or
jnp
movsb
insb
popa
add
cmp
movsl
inc
push
mov
and
test
push
test
mov
scas
shl
add
std
inc
cmp
add
int
dec
into
les
addb
dec
ret
mov
mov
push
gs
stos
push
fdivrl
xor
test
cmp
jp
sub
push
mov
mov
dec
sbb
cmpb
cwtl
xor
xor
adc
push
rcll
lahf
repnz
adc
dec
cmp
mov
popf
push
push
rcll
test
dec
test
pop
cmpl
aas
frstor
out
hlt
mov
fldl
jp
jo
mov
pushf
dec
xor
fmul
mov
mov
lahf
adc
std
cmc
test
dec
cmp
jg
and
pop
add
and
mov
fcomi
iret
fs
std
cmpb
cmc
into
xchg
pop
mov
jle
jo
jb
mov
inc
or
add
inc
add
fstpl
fimull
jbe
add
adc
int
add
sti
daa
xchg
adc
lcall
adc
pop
sarl
subl
cmc
adc
les
sub
dec
std
mov
shlb
rcl
mov
push
arpl
sub
gs
cmp
inc
cmp
cmp
pop
jo
fldcw
or
lcall
inc
fbld
mov
data16
sbb
cli
orl
cmp
outsb
pushl
mov
mov
or
fdivrl
adc
jp
aas
iret
in
faddp
mov
std
mov
data16
iret
outsl
add
add
jo
jle
mov
je
out
fldt
xor
fs
push
mov
mov
mov
adc
stc
cmc
push
pop
mull
subl
pop
add
mov
add
not
nop
imul
mov
xor
cmp
shrl
cmp
icebp
lds
sub
and
shll
mov
jo
cmc
hlt
xor
aas
dec
xchg
push
pop
push
sub
push
add
insl
mul
arpl
sarl
das
sub
inc
pop
xor
out
dec
negl
das
in
jae
popa
fiadds
add
scas
repnz
les
cld
rol
mov
or
sarb
repnz
rcll
mov
jl
mov
ret
sbbl
adc
enter
incl
pop
dec
adc
aam
fldl
jo
jne
mov
jge
stos
mov
xchg
adc
cmpb
das
xchg
into
movl
cmpsb
dec
ret
adc
sub
jp
fcmovnbe
rolb
jns
mov
sbb
xchg
lea
mov
push
aad
rorb
cs
aaa
pop
jp
aas
xchg
jmp
pop
xchg
arpl
mov
jmp
in
mov
loope
loope
jo
mov
imul
aad
dec
mov
mov
mov
sti
and
in
daa
repnz
inc
fs
add
push
push
xor
inc
ja
xlat
dec
paddb
inc
and
icebp
sbb
aaa
out
jb
inc
cmpsb
sbbb
pop
pop
int
sub
mov
rclb
xor
and
stc
mov
xor
sub
ret
and
mov
lock
insb
adc
scas
add
xlat
popa
jne
sub
fdivrs
xor
sbb
xchg
xchg
aaa
into
mov
cmpsl
inc
lret
scas
mov
das
jo
dec
and
inc
jns
repz
xchg
mov
dec
idivl
lret
jne
jae
stc
jp
jns
mov
sub
jne
add
imul
testb
nop
fcoml
push
jmp
gs
addb
scas
or
loope
push
dec
add
adc
xchg
sbb
jmp
jae
add
dec
jno
pop
xchg
mov
add
jmp
lds
rcrb
rorl
mov
jecxz
std
lret
das
dec
pop
scas
mov
imul
insb
push
sbb
mov
add
jp
sub
lahf
test
xchg
adc
repz
dec
shlb
xor
jns
push
dec
dec
mov
lock
jmp
and
es
pop
and
push
ret
pop
cmp
push
arpl
sbb
fdivrs
pop
jmp
cs
xor
xor
inc
out
in
insl
inc
int3
in
push
mov
xor
std
mov
in
ss
mov
iret
mov
or
rolb
outsl
inc
pop
in
or
jecxz
gs
sbb
mov
lcall
subb
ss
gs
in
cmp
fisttpl
push
clc
in
mov
inc
push
fisttps
mov
xchg
adcb
sbb
icebp
js
leave
adc
and
arpl
and
jge
and
and
sub
xchg
and
dec
stc
sub
subl
in
mov
nop
dec
add
mov
fnstenv
cld
mov
cmp
sbb
inc
push
das
in
ljmp
cmp
pop
sti
xchg
push
push
push
add
xchg
imul
mov
leave
subl
hlt
mov
jbe
push
jmp
mov
ss
andl
repnz
and
push
push
xor
dec
aas
out
sub
pop
cmc
fnstsw
out
inc
in
adc
xor
hlt
jg
lret
lds
cwtl
mov
mov
dec
call
and
pop
addb
dec
enter
push
jbe
push
cltd
test
push
cltd
and
cwtl
shrl
xchg
adc
insl
and
push
adc
mov
jbe
mov
mov
and
mov
cltd
js
fs
inc
clc
push
test
push
nop
xor
stc
ja
inc
mov
or
aaa
leave
shll
and
jge
arpl
or
jp
rclb
push
inc
repz
pop
inc
xor
lds
test
dec
out
xchg
inc
mov
jo
inc
iret
movb
paddw
iret
mov
mov
push
sbb
xor
inc
out
sti
xchg
xor
pop
mov
pop
mov
popa
mov
fwait
cmp
pusha
mov
lret
inc
adc
inc
adc
ds
and
pusha
inc
sub
push
in
xor
es
xor
inc
fisubrs
push
cltd
cmpsb
dec
faddp
repz
push
test
mov
sbb
negb
mov
sbb
sbb
and
fisubrl
ficoms
cltd
jo
mov
loopne
stc
cld
lret
pop
out
push
xchg
imul
adc
cmp
idiv
js
in
ljmp
pop
in
mov
in
sbb
adc
push
lock
sbb
cwtl
inc
jno
jns
push
or
mov
icebp
lods
jbe
cmp
push
std
xlat
clc
rcl
dec
sub
gs
xchg
jp
mov
push
pop
shrl
xor
sub
mov
out
into
pop
hlt
and
adc
cmc
and
daa
add
movsb
add
in
test
aaa
adc
cmp
pop
popf
out
fs
xchg
les
mov
and
cltd
xor
jo
push
fnstenv
out
inc
mul
mov
shlb
int3
test
lahf
cld
push
fwait
pusha
scas
pushf
lahf
outsl
mov
popa
dec
adc
and
push
cmpsl
jae
aas
xchg
test
jno
sub
out
mov
dec
pop
mov
bound
add
cwtl
pop
mov
sub
pusha
sbb
fisubrl
movsl
lahf
jge
call
mov
fnsave
fstpt
sbb
sub
or
push
push
jbe
mov
adc
jb
jns
or
push
call
pop
or
loopne
xor
aas
ja
jnp
xchg
enter
fdivrl
dec
xchg
push
push
inc
dec
ljmp
ljmp
enter
mov
in
int
dec
test
pop
sbb
inc
jge
cmp
adc
lock
adc
cmpl
xor
mov
mov
or
pop
cmp
push
sbb
jo
movsl
xor
push
jecxz
cmp
xchg
add
aas
and
add
jmp
dec
sbb
push
popf
scas
push
scas
out
push
aam
cmp
gs
loopne
inc
lret
imul
mov
sbb
jge
insl
shlb
adc
flds
sqrtps
out
push
jp
sarb
jge
pop
dec
push
adc
or
lods
enter
int
xchg
sahf
dec
ljmp
arpl
dec
push
inc
gs
out
out
mov
mov
popa
jno
push
add
pop
cmp
xor
mov
xchg
je
shll
dec
insl
jg
out
out
and
cltd
cld
call
je
shlb
mov
xorl
push
mov
xlat
mov
mov
fiadds
mov
aam
imul
jge
adc
mov
imul
std
pop
fstpt
mov
out
roll
pushf
sub
daa
mov
arpl
clc
sub
sbb
mov
fldl
push
test
jl
push
jmp
mov
lea
add
popf
sbb
pusha
dec
arpl
xlat
popf
js
outsb
mov
xchg
into
push
fwait
loop
pushf
add
xchg
les
pop
imul
sbbb
ficoms
lock
xor
xor
and
shrl
cltd
outsb
lds
es
push
lods
mov
or
inc
pop
sbb
and
in
jo
inc
mov
outsl
or
mov
lock
sti
xchg
nopl
adc
outsb
fisubrl
lahf
push
mov
pop
cmpsb
pop
rcr
xor
or
mov
je
pop
arpl
test
fcompl
mov
outsb
sbb
in
jp
ret
push
popa
push
loope
es
das
xchg
pop
xchg
pusha
les
lahf
enter
mov
fisubs
adc
cwtl
shrl
jns
dec
mov
sbb
loopne
ret
sub
shll
xchg
or
test
inc
int3
insl
idiv
mov
movsb
lret
int
mov
fwait
xor
add
jecxz
inc
cmpsb
ljmp
ja
add
push
push
mov
orb
push
cmpb
push
xor
adc
scas
adc
pop
ds
push
pop
adc
push
fs
pop
cmc
out
cmp
outsl
mov
lcall
lds
sbb
in
xor
lds
cmpsl
loopne
adc
mov
in
cmpsl
xor
aad
mov
mov
jae
aam
insl
pushf
dec
insl
fistpll
jle
imul
mov
test
inc
nop
pop
into
int
cltd
ss
jecxz
clc
dec
in
pop
in
nop
pop
sub
jmp
jns
push
add
pop
cmc
dec
or
and
pop
pop
sub
ljmp
xchg
xchg
jecxz
ljmp
xchg
fs
push
and
inc
in
subps
cwtl
mov
mov
sbb
pop
fmuls
xor
jno
adc
cmp
sbb
shrb
mov
inc
xor
add
rcll
inc
ret
mov
or
out
in
add
xorb
sub
fisttpl
aad
xchg
pop
cmp
mov
pop
icebp
pop
sbb
iret
lahf
sub
orl
mov
jno
addr16
push
xchg
loopne
sahf
add
mov
cmp
push
adc
rcrb
ds
scas
es
ds
mov
aam
xchg
lret
dec
rcrb
sub
or
jnp
xor
jp
rclb
jecxz
into
rep
mov
cmp
pop
add
xor
aas
jbe
clc
sub
and
push
or
xor
mov
cmp
lods
mov
sub
pop
adc
repnz
nop
push
mov
xchg
or
stc
rcll
bound
inc
push
imul
enter
lahf
xchg
fistpl
out
stos
aaa
jno
mov
scas
jle
aas
push
clc
test
xchg
iret
mov
or
repz
mov
or
push
addl
ss
inc
xchg
rclb
lret
push
ret
inc
push
jne
incb
cwtl
cmp
add
dec
out
jbe
loope
in
cmp
adc
jp
repnz
jmp
sti
mov
pop
stc
pop
or
mov
push
push
dec
ret
mov
outsb
scas
push
mov
mov
add
mov
sbb
pop
in
fildl
dec
dec
jae
and
fistpll
lock
add
push
pop
dec
xlat
pop
add
mov
shll
cld
adc
inc
sbbb
xchg
enter
and
lcall
clc
push
jno
arpl
push
cmpsl
lock
dec
mov
mov
mov
cwtl
pop
or
ja
add
add
mov
cmp
call
xor
xchg
push
fbld
xor
daa
xor
sbb
lods
in
ret
or
aad
and
mov
dec
xchg
sub
add
mov
mov
add
cmp
ret
and
in
cwtl
xchg
lret
xchg
push
faddl
add
sbb
inc
icebp
and
add
add
pop
sbb
jecxz
sbb
ret
xlat
or
cli
push
sub
divb
jns
call
or
js
jns
les
sbbb
hlt
call
xchg
and
aam
aad
jno
jecxz
std
clc
mov
xchg
jmp
lods
ret
inc
jbe
jns
stos
add
jge
jg
int3
sbb
sbb
jae
pop
aad
lret
cmpsl
roll
hlt
pop
sbbb
lret
imul
sbbb
xchg
out
jmp
dec
push
lock
outsb
out
hlt
int
xchg
jo
repz
dec
ss
xor
cmp
iret
fisubrs
insl
adc
fsubl
mov
jp
mov
ds
mov
or
inc
and
or
jle
adc
jno
popf
add
pop
sahf
adc
and
jle
cmp
pop
xchg
mov
hlt
sbb
xchg
call
faddl
sbb
cmpl
popa
rcll
aas
lcall
aad
mov
pop
int
mov
mov
push
add
inc
pop
jge
lods
cwtl
icebp
add
aas
rorl
idivb
nop
dec
mov
or
pop
call
dec
insl
imul
push
shll
add
sbb
cmc
mov
sbb
or
loop
lahf
imul
mov
inc
into
or
clc
inc
dec
int
cmp
and
add
push
dec
shl
wbinvd
cmpsl
adc
out
add
mov
pop
jle
jecxz
pop
stc
lds
loope
in
mov
bswap
aas
push
inc
and
jns
out
sbbl
je
pop
dec
aaa
or
pop
aad
jb
pop
out
mov
jg
loope
jae
dec
mov
imul
jb
mov
les
xlat
popf
mov
dec
js
clc
clc
jae
inc
test
add
adc
jno
fildl
jae
push
pusha
mov
jmp
xchg
pop
cmp
repz
mov
ljmp
test
loope
fbstp
xchg
je
lret
xor
sarb
std
inc
mov
inc
cmpsb
dec
adc
jno
repnz
push
jnp
push
movsl
lcall
inc
sahf
inc
jne
lret
sbb
inc
lods
xor
bound
mull
inc
iret
jbe
cmp
fdivl
add
js
jno
dec
add
clc
jne
in
in
out
mov
imul
sbb
lock
inc
sub
push
stos
inc
pop
mov
mov
fnstenv
push
es
or
dec
aaa
inc
dec
add
pop
fdivrs
add
data16
jno
mov
jnp
xchg
push
sbb
inc
jne
mov
fs
repnz
inc
jae
pop
daa
stc
or
cli
dec
hlt
ds
fnstenv
fidivs
mov
or
movsb
sub
stos
test
rcrb
lahf
test
hlt
test
out
stos
fwait
out
stos
adc
enter
aas
insl
fcoml
cmp
and
push
pop
sbb
mov
stos
stos
mov
into
lret
sub
aam
bound
push
pop
jp
xchg
cli
and
bound
sub
mov
mov
lods
mov
inc
sti
outsb
jg
scas
jns
xor
add
imul
sbb
ret
popa
out
cltd
add
cmp
add
xor
and
jmp
add
pop
xchg
out
sarl
lcall
mov
and
lcall
in
das
cltd
sub
insl
jecxz
sub
xor
lea
pop
push
pop
aad
sbb
or
jl
mov
cmc
mov
xlat
and
aam
xchg
out
adc
test
pop
xlat
mov
mov
sub
pop
jnp
ljmp
outsl
adc
push
push
cwtl
mov
movsl
fiaddl
or
dec
pop
nop
out
into
adc
xor
pop
pop
jecxz
or
pop
dec
js
sti
cmp
push
rol
cld
mov
cmp
outsb
icebp
mov
pusha
test
inc
push
mov
sub
jg
addb
or
ljmp
int3
add
jns
mov
es
and
add
sahf
bnd
mov
shrb
js,pt
mov
ret
sti
cmp
pop
mov
mov
cmpsb
add
push
and
ljmp
aas
mov
add
add
push
mov
jo
stc
dec
push
adc
pusha
pop
filds
mov
sbb
xchg
imulb
outsb
outsb
mov
sub
ja
movl
loope
movsb
push
das
popf
jge
scas
rcr
js
movsb
clc
jbe
mov
insb
popa
popf
cmp
adc
ja
adc
xor
inc
sbb
imul
xor
mov
hlt
adc
and
jmp
sub
mov
adc
jne
push
inc
mov
inc
into
mov
and
inc
xor
imul
ret
xor
adc
mov
insl
loopne
or
inc
xor
sub
ret
lods
stos
out
ret
cmp
lret
lods
mov
aas
cmp
inc
ffreep
jnp
jle
rcl
pop
adc
adc
sub
lahf
fcmove
les
fbstp
add
or
scas
add
stos
mov
pusha
popl
mov
in
hlt
stos
fcomps
test
insb
subb
mov
push
sbb
xchg
dec
mov
cld
cltd
sub
pop
addr16
enter
xor
add
pop
testb
dec
cmp
insb
js
xor
push
jmp
xor
sub
inc
fs
mov
mov
inc
jb
enter
rcl
push
dec
sub
pop
xor
add
clc
out
cmp
ss
dec
in
mov
andl
adc
clc
xor
into
sbb
adc
rol
xor
push
les
pop
movsl
sub
mov
js
out
daa
lcall
push
ss
xor
jle
pop
dec
xor
std
into
fs
adcb
popf
mov
xor
outsl
dec
jbe
inc
popf
pop
gs
fadds
pop
out
nop
xchg
into
mov
out
pop
cmp
jne
push
dec
lock
mov
dec
hlt
out
ljmp
jno
sbb
dec
pop
loope
js
ret
fs
lea
dec
cs
in
mov
inc
nop
out
xchg
or
pop
pop
adc
es
mov
into
adc
in
add
jl
jae
push
mov
push
int3
xchg
outsb
sub
stos
sbb
insl
xor
imul
xchg
dec
ja
cmpsb
adc
jo
pop
dec
fadd
xchg
lahf
push
arpl
or
jno
mov
jb
and
mov
inc
test
cwtl
aad
mov
or
adc
sbb
int3
mov
sbb
and
dec
hlt
pop
in
and
ja
xlat
mov
push
sbb
outsb
nop
xchg
lahf
mov
xchg
js
and
std
mov
xor
mull
inc
push
outsl
flds
and
movsl
xchg
lahf
xor
out
and
push
xchg
insl
jne
mov
fisttps
fisubs
pushf
ret
xchg
sahf
dec
jbe
sub
or
pusha
mov
cmp
out
adc
repnz
shlb
insb
int
inc
xchg
pushf
jbe
jno
add
push
sbb
cmc
sbb
push
adc
aaa
popf
sbb
stos
es
pop
int
scas
mov
popa
push
sub
daa
aam
mov
jmp
pop
adc
cmpsl
jb
jne,pt
in
sahf
loop
and
jmp
mov
imul
stos
ljmp
cli
cltd
and
jmp
adc
fstl
inc
mov
cmp
mov
pop
mov
adc
dec
imul
cmovs
cli
loopne
xchg
int3
or
xor
pop
push
push
xor
xorl
jb
xchg
xor
imul
jo
mov
repz
sub
repz
movsb
stos
push
jb
stos
rcrl
pop
xchg
mov
jae
enter
or
and
loopne
pop
scas
je
mov
daa
dec
mov
enter
dec
xchg
sbb
pusha
dec
adc
icebp
out
test
fsts
scas
add
push
repnz
cld
out
inc
or
outsl
fsts
push
sub
icebp
mov
sbb
js
add
hlt
add
ja
lret
jp
lret
mov
subb
xor
push
jo
xchg
scas
inc
mov
out
or
shll
sbb
lods
das
pop
loop
mov
in
push
pushf
inc
push
aad
mov
xchg
mov
jb
mov
xchg
sbbb
sub
hlt
jb
in
inc
les
shl
aam
sti
jmp
into
mov
or
mov
into
mov
in
bound
add
xor
fmull
into
mov
cmc
test
icebp
lret
repz
daa
cltd
jle
inc
push
jl
rol
mov
gs
ja
jecxz
inc
insb
cmp
inc
push
and
stos
movsl
rolb
cmp
lds
pop
pushf
cmpsl
pop
push
mov
sbb
jae
adc
sub
test
repnz
ficoms
arpl
lahf
add
xchg
lcall
adc
nop
mov
xor
inc
mov
cvttps2pi
dec
pop
dec
ret
push
call
insb
or
and
cmpsb
sub
or
pop
sbb
test
sbbb
mov
ret
ja
adc
out
rclb
bound
jmp
ss
test
stc
les
notb
jmp
mov
mov
push
ja
loop
mov
jl
in
ret
cmp
iret
dec
or
mov
xchg
and
lea
cmpsl
jecxz
std
dec
int
popf
imul
xor
xchg
cmp
mov
call
sbb
cmp
pop
int3
jbe
add
adc
int3
inc
and
cld
sbb
or
or
and
insb
dec
stos
or
test
xchg
ja
repnz
sub
sbb
mov
mov
imul
pop
push
aas
iret
cmp
in
xlat
push
in
loop
mov
sahf
lock
mov
out
pop
ja
jle
in
out
adc
pop
int3
add
lcall
sbb
test
cmpsl
cs
setge
xchg
and
inc
cld
push
dec
scas
xor
lods
jae
aam
add
jae
aam
cmp
ja
adc
stos
lods
xlat
ss
lahf
and
sarb
xchg
pop
push
mov
push
or
push
bound
sbb
outsl
in
loope
lods
inc
mov
roll
imul
sub
gs
outsl
lahf
testb
xchg
adc
mov
pop
add
add
add
jne
movb
and
adc
outsl
pop
addr16
cwtl
adc
call
stos
sub
stc
sbb
daa
sub
push
hlt
inc
xchg
aam
psubsb
inc
scas
sbb
rcr
outsl
pusha
adc
and
add
jnp
test
stc
cs
negl
dec
setle
push
dec
xchg
aas
jae
and
ret
in
sub
add
shlb
mov
pop
fisubrs
and
aad
cld
rcrb
mov
lcall
and
pop
push
dec
fwait
xchg
jle
sbb
mov
push
call
add
mov
jnp
push
les
call
and
out
jmp
mov
aas
fistl
add
lock
ds
xor
in
add
ja
insl
push
sahf
pop
pop
push
mov
cld
push
aam
adc
daa
popf
inc
in
add
adcl
aas
jns
aas
push
ljmp
lods
push
dec
in
jae
pop
pop
loopne
aaa
test
jge
xchg
mov
xor
push
cmc
and
out
mov
mov
arpl
and
push
clc
xor
and
ds
jnp
or
mov
dec
jp
clc
js
das
sbb
xor
stos
jnp
adc
adc
dec
loop
xor
aaa
push
dec
rcl
and
push
cli
frstor
das
lea
add
pop
sbb
iret
add
and
loop
data16
in
cli
imul
and
sub
lods
in
cli
adc
xor
stc
push
sub
jle
clc
lods
mov
and
imul
mov
xor
adc
add
pop
test
aam
sbb
pop
mov
xchg
das
jne
add
sub
fnstcw
and
js
in
int3
cmp
dec
cwtl
addl
and
mov
int
push
jle
fistps
mov
addb
movsl
jge
xchg
inc
mov
andb
out
hlt
dec
ljmp
das
andl
imul
rol
adc
mov
popf
adc
dec
scas
sub
jle
xchg
les
mov
cmp
and
sub
mov
push
push
mov
sbb
enter
nop
cmp
sbb
addr16
js
fldt
mov
popf
movl
imul
pop
repnz
xchg
adc
xlat
cli
dec
loopne
adc
shl
rcr
popa
mov
pop
ljmp
rol
out
adc
mov
mov
pop
sub
and
inc
xchg
adc
or
pop
push
jle
adc
jecxz
cmp
test
ja
and
jnp
push
out
insb
lcall
and
push
lret
dec
or
lret
mov
mov
jbe
mov
aam
mov
adc
cmc
and
pop
roll
xchg
cld
inc
mov
jno
ljmp
inc
cmp
jns
add
and
fldenv
sbb
cmp
jge
aad
leave
dec
mov
imul
adc
cli
jns
adc
xlat
xor
adc
jl
xlat
jmp
scas
sub
and
mov
popf
outsb
int
mov
push
cmp
and
xchg
fsts
fs
xor
enter
inc
stos
negl
dec
stc
imul
pop
inc
das
jae
cmpsb
inc
stc
inc
sbb
adc
mov
in
add
gs
mov
shll
repz
mov
repz
sub
sub
ss
mov
sub
push
loop
lods
pop
or
inc
inc
lods
int3
dec
pop
cs
fldt
cmp
ret
jae
push
or
mov
pop
in
test
jne
xchg
outsl
hlt
out
daa
nop
inc
es
negl
add
aam
inc
mov
sti
stos
mov
cs
push
ja
loopne
sub
out
js
push
or
sti
outsb
push
and
xchg
out
lds
adc
mov
testb
fdivrs
cltd
lahf
sbb
inc
sub
pop
cltd
je
enter
xchg
jne
dec
mov
push
das
lods
aam
inc
pop
cmp
rcrb
pop
or
mov
jge
mov
aaa
mov
pop
jecxz
pop
ret
outsb
and
xchg
mul
jl
add
rcr
inc
mov
fistps
ja
add
sbb
push
mov
clc
in
sub
ds
cmpsl
fiadds
sbb
and
in
cltd
out
mov
xor
scas
xchg
aaa
cmp
cli
cmp
jb
in
mov
lods
push
mov
mov
push
mov
jg
int3
shlb
mov
loopne
js
xchg
dec
ret
pop
sub
out
mov
push
call
lds
adc
dec
xor
xlat
cmpsb
sub
outsl
mov
in
movsl
rcl
daa
push
push
jecxz
push
cmpsl
arpl
outsl
pop
out
pop
test
pop
out
lret
push
fldenv
or
and
stc
xlat
daa
jle
mov
push
stos
dec
inc
mov
cmp
mov
inc
mov
add
pushf
orb
out
mov
popf
mov
or
rorl
imul
iret
mov
or
into
mov
adc
mov
in
in
pop
and
addr16
fisubrl
insb
movsb
shl
test
inc
aad
adc
xchg
lock
test
jae
pop
mov
ljmp
aaa
stos
cltd
je
icebp
mov
pop
push
arpl
addr16
jo
adc
movaps
nop
adcb
mov
sbb
aam
adc
push
and
mov
inc
xchg
mov
pushl
or
loop
push
pop
sti
je
xlat
xchg
add
mov
sub
pop
cmp
mov
idivl
sub
jmp
imul
pop
mov
mov
add
mull
fnstsw
fidivrl
lret
push
in
sub
into
pop
aas
push
push
aaa
outsb
mov
push
shl
das
fs
fstpl
xchg
cltd
int3
orl
dec
repnz
jmp
gs
push
mov
daa
inc
inc
rcrl
int
xchg
jle
bound
pushf
fimull
add
add
dec
sbb
nop
push
bound
xchg
leave
push
scas
mov
ret
aad
xor
add
scas
pusha
push
adc
xchg
cld
dec
mov
adc
lock
push
sub
jp
lahf
pop
icebp
inc
sbb
aas
sub
stc
add
and
push
fiaddl
repnz
inc
pop
mov
andl
mov
dec
xor
or
mov
and
cmp
adc
in
nop
enter
fcoml
mov
imul
mov
dec
stos
dec
mov
subl
cltd
ja
data16
lods
and
and
mov
add
sbb
inc
inc
inc
sub
bound
mov
adc
mul
movsl
scas
cld
mov
inc
fcomp
jl
negb
mov
test
jl
lcall
lea
pop
cltd
ret
add
push
aas
gs
cmp
xor
or
jae
xlat
or
arpl
inc
xchg
cmc
mov
loopne
sahf
or
pop
jmp
popa
inc
stc
lods
lock
js
loopne
mov
insb
adc
lock
call
pop
cmpsb
or
mov
in
xchg
push
data16
aaa
pop
or
and
sbb
stos
mull
mov
dec
jno
mov
add
push
jle
lods
inc
xor
and
mov
insb
test
test
and
int3
and
push
stos
ds
daa
adc
or
mov
push
dec
sar
idivl
pop
pop
test
ss
adc
cmp
add
dec
dec
iret
add
mov
jae
push
popf
push
push
out
push
or
xchg
jge
gs
imul
arpl
add
and
orl
rorb
pushf
aas
mov
loopne
leave
add
adc
pushf
jbe
dec
inc
xchg
xchg
dec
xor
xchg
popa
sbb
xchg
pusha
add
mov
or
clc
hlt
mov
jmp
repz
mov
xchg
sahf
cmp
insl
into
jmp
sbb
cmp
lods
sub
rorb
mov
jae
xchg
rorb
mov
ljmp
jno
mov
lock
push
xchg
mov
in
mov
add
inc
das
enter
or
fbld
in
icebp
cmp
mov
xor
jnp
inc
mov
shrd
xchg
mov
mov
insl
cmpsl
mov
dec
repnz
sub
xor
fwait
les
dec
pushf
lods
stos
jmp
push
scas
cltd
das
jns
pop
movsb
mov
test
popf
fbld
inc
or
sbb
xor
mov
iret
mov
dec
push
add
cwtl
dec
mov
sbb
adc
adc
or
mov
xchg
inc
xor
xor
jg
xor
enter
pushf
sbb
loopne
pop
inc
or
jmp
cmp
aad
insl
inc
imul
cmp
push
out
pop
into
sbb
icebp
and
arpl
sarl
outsb
mov
or
jne
out
and
inc
popa
test
ret
enter
div
std
lahf
mov
jmp
jo
cli
dec
jo
mov
inc
or
jnp
sbb
xchg
pop
leave
ret
into
xchg
aaa
adc
adc
adc
cmp
aas
jg
mov
into
repnz
sarb
sub
in
pop
mov
cmpsl
pop
mov
mov
pop
xlat
insb
jns
or
test
sarb
lock
inc
cmpsb
in
adc
jg
testl
or
push
popf
mov
ficoml
push
leave
push
hlt
mov
mov
fs
inc
call
enter
xchg
push
int3
es
mov
xchg
stc
xchg
mov
popa
andb
loopne
movsl
cmp
int3
mov
aad
fldt
fs
jl
push
or
insl
inc
iret
push
fsub
inc
mov
mov
and
jns
mov
mov
mov
sbb
lahf
sub
imul
cltd
jbe
jbe
mov
adc
inc
lret
inc
mov
adc
sbb
mov
in
mov
je
xchg
aas
pop
lods
and
lret
mov
call
pop
lcall
push
push
stos
add
mov
mov
dec
lret
pop
or
lret
in
xchg
and
loop
adc
mov
or
or
cmpsl
xchg
jmp
or
inc
cmc
paddusw
mov
popf
xor
cmp
push
into
and
imul
push
scas
iret
sahf
je
mov
add
inc
jno
push
lea
sbb
push
xlat
pop
adc
enter
jge
jl
push
das
scas
idivb
push
out
xchg
xor
push
loope
outsl
dec
stos
inc
cmp
inc
sbb
mov
ret
xor
sbb
adc
lods
xchg
jl
cs
int
pop
push
sbb
xchg
inc
mov
mov
mov
or
jns
les
dec
stos
sbb
inc
add
nop
stos
mov
data16
insb
fxch
dec
ss
pop
je
lods
mov
arpl
adcb
shll
nop
subb
and
push
xor
push
sbb
push
cmpsb
xchg
xchg
std
xlat
jge
arpl
stc
mov
in
add
fs
daa
mov
lods
pop
aam
into
cmp
dec
mov
dec
jmp
and
xchg
lret
mov
sbb
dec
sti
xor
push
jno
repnz
jo
inc
hlt
outsl
dec
daa
cmc
aam
fucomip
mov
or
mov
jb
mov
mov
ja
xchg
rcl
jns
cli
xchg
inc
mov
mov
repnz
sub
sbb
rclb
test
or
inc
cmp
add
jl
subl
dec
and
sbb
jl
fwait
ljmp
test
cmc
adc
sub
out
mov
add
aam
sub
jne
pushf
dec
fcomip
sbb
aaa
mov
icebp
pop
popf
lods
icebp
notl
jnp
repnz
jmp
sub
aas
decb
mov
fwait
pop
xchg
jmp
or
dec
in
push
push
rol
xchg
mov
inc
xchg
inc
in
jl
xchg
pop
pop
pop
adc
push
mov
out
and
sbb
popa
repz
adc
xor
inc
lcall
inc
divl
dec
mov
test
xchg
cmpsb
in
jle
adc
mov
mov
sbb
pushf
mov
fmulp
and
enter
mov
outsb
push
rclb
mov
sbb
push
out
cmpb
xchg
outsl
inc
push
mov
mov
rcll
repnz
sti
sub
stos
stos
mov
xchg
inc
mov
fisttpll
lcall
cmp
jne
cld
sbb
mov
outsb
push
xchg
out
push
rep
cmp
cli
cltd
add
xchg
inc
std
fwait
inc
mov
inc
int
cmc
dec
push
push
lds
dec
sbb
mov
cmp
cli
cld
sub
jnp
mov
fwait
bound
lods
sbb
inc
cmc
fsts
fnstenv
sub
add
data16
lock
push
and
loopne
inc
sub
insl
adc
into
xchg
loop
mov
adc
lcall
jo
cmp
outsb
div
mov
imul
scas
or
lahf
sub
in
mov
test
fwait
xor
xchg
mov
mov
stc
pop
out
sbb
stos
cmp
mov
push
gs
pop
testb
in
aas
pop
mov
and
ja
stos
ds
adc
movsb
aaa
add
data16
arpl
ljmp
shll
scas
pop
jg
and
adc
test
fimuls
jle
inc
cmpsl
jno
lret
jae
xor
inc
mov
xor
push
test
push
js
inc
xor
rol
pop
mov
adc
xor
add
sub
fstpl
dec
mov
push
test
stc
shl
pmuludq
cmpsb
xchg
popa
mov
mov
std
push
movsb
in
adc
int
rolb
cmp
xor
shll
filds
shlb
xchg
mov
inc
rclb
shrb
into
call
cltd
dec
fmulp
mov
xor
ret
jb
sub
enter
insb
dec
adc
cmp
jg
mov
pop
mov
inc
inc
xor
mov
lods
mov
call
add
incb
ret
mov
cmc
xchg
cmpsb
mov
push
xchg
outsl
and
jle
mov
gs
dec
mov
dec
mov
sahf
js
sahf
pop
push
push
push
aam
scas
jne
add
push
pop
mov
mov
inc
xchg
and
je
push
shrb
mov
xchg
shlb
out
int
jb
int3
jge
jle
and
incl
scas
stos
sub
enter
mov
and
mov
mov
add
insl
daa
int3
aad
jge
cmpb
ljmp
arpl
mov
xor
pusha
push
mov
cmp
and
divb
or
pop
mov
adc
jle
cmp
daa
add
pop
jp
bound
jmp
pushf
je
mov
jle
rorb
cmpsl
sarl
push
into
and
hlt
lods
adc
jmp
adc
sbb
sbb
cld
mov
fs
cmp
or
sbb
jle
and
or
pop
push
es
add
mov
lock
imul
mov
in
add
test
imul
push
mov
pop
idivl
push
pusha
xor
push
in
lcall
stos
push
dec
push
or
adc
jns
ret
test
push
cwtl
fs
cmp
and
cs
cmp
push
and
ss
jl
push
mov
adc
jecxz
lcall
idivb
lock
ret
mov
lret
pop
xor
movsl
test
lahf
test
mov
mov
mov
jnp
sub
inc
and
sub
push
aam
dec
xchg
je
cmpsl
shr
jmp
outsl
pop
sbb
xor
shl
in
mov
sbb
mov
dec
sarl
push
lds
xlat
push
adc
push
daa
pop
enter
fcoml
jle
lret
imull
and
dec
jl
iret
in
fiadds
in
mov
sub
rcr
mov
lods
cli
sahf
lds
adc
and
xchg
repnz
or
add
aas
cmpl
lahf
or
aam
flds
mov
dec
and
aaa
les
dec
insb
shrl
inc
add
pop
shrl
push
adc
arpl
inc
mov
inc
fiaddl
pop
mov
push
sbbl
test
and
jle
cmp
push
into
or
cmp
enter
cmpsl
inc
pop
mov
cmp
test
inc
addr16
and
sbb
sub
or
mov
push
mulb
jmp
add
mov
pop
cmp
ljmp
adc
xchg
fstpt
xchg
leave
mov
cmp
add
in
push
ds
aas
mov
mov
cmpsb
pop
fwait
mov
pop
testl
mov
rolb
jnp
cmp
cmp
subb
enter
sub
jp
lret
roll
add
mov
mov
sub
mov
lret
or
dec
xor
movsl
enter
mov
hlt
loopne
sbb
lods
cmp
dec
iret
sarb
iret
cmpsb
or
or
mov
mov
push
inc
data16
loope
adc
ds
in
pop
fidivl
add
icebp
push
sub
adc
lea
xor
pop
repz
pop
inc
pop
adc
lret
js
jbe
pop
jae
aam
movsb
pop
fsts
stos
out
adc
gs
loopne
or
in
push
xor
sbb
out
pop
bnd
sbb
je
fistps
movb
push
hlt
icebp
mov
and
xor
pop
xor
popf
div
xorb
mov
adcb
clc
ljmp
mov
mov
hlt
cmp
ret
cmpsl
xlat
sbb
jmp
xchg
bnd
frndint
jmp
loop
mov
push
pop
mov
mov
sarb
test
sub
loop
imul
push
cltd
adc
cmp
add
mov
mov
in
aaa
push
mov
lret
daa
sub
pop
sub
mov
cmp
gs
lcall
push
sar
xchg
das
movsl
cmpsb
mov
push
out
call
mov
lret
add
cwtl
push
xchg
lds
bound
xchg
pop
imul
pop
jmp
insl
push
push
sub
es
call
les
dec
mov
nop
pop
mov
enter
into
cmp
in
add
sbb
lret
lods
addr16
stc
imul
daa
fdivl
sarl
enter
pop
jmp
sbb
push
xchg
mov
outsl
fcoms
push
sti
xchg
cwtl
cltd
cmp
out
and
fisttpll
cmp
cs
cmovl
lret
test
fists
mov
or
xor
nop
fistps
mov
mov
in
popf
rcll
lds
sbb
push
test
mov
fsubl
mov
arpl
jbe
js
ja
sbb
and
sbb
aaa
pop
ss
mov
mov
fistpll
or
hlt
mov
inc
jecxz
sti
test
cmp
inc
fs
pop
js
stos
ret
daa
dec
dec
add
cmp
xlat
xor
mov
lret
pop
test
cmp
sbb
dec
in
subb
inc
inc
jmp
test
adcl
jb
test
add
loop
mov
or
sbb
les
ret
je
test
mov
sub
mov
push
into
je
and
out
jmp
je
outsb
adc
dec
lods
insb
imul
bound
jne
in
loopne
sub
cld
mov
rcrl
mov
and
ffreep
add
and
sarb
inc
fwait
add
cmc
mov
mov
idivl
xlat
ss
lods
sbb
imul
jae
mov
dec
jbe
and
in
xor
enter
popa
in
fs
cmp
test
mov
andl
fdiv
add
incl
dec
sbb
sbb
cmp
push
mov
jno
jbe
jl
xor
inc
clc
mov
adc
into
lret
test
sti
stos
sahf
jb
push
scas
cmp
outsb
loop
into
js
pop
lea
adc
pushf
jmp
je
and
leave
cmp
xchg
dec
inc
cmp
les
std
cmp
mov
mov
dec
fnsave
or
inc
mov
pushf
xchg
mov
or
scas
pop
in
orb
lods
stos
add
ja
and
int
cld
insb
adcb
dec
xorl
lods
mov
ja
js
fs
repz
les
cltd
sbb
clc
jo
and
lret
mov
cwtl
mov
clc
sbb
jns
sub
cmp
push
and
jne
mov
ja
xchg
test
mov
mov
sahf
dec
dec
inc
xor
sbb
sub
mov
mov
xor
and
lcall
jle
add
inc
loopne
cs
mov
jp
decl
mov
testl
or
sbb
pop
sub
sub
sbb
pop
xchg
scas
pop
scas
pushf
sbb
inc
jmp
xchg
push
into
test
outsl
int
fcoml
mov
xor
xchg
arpl
icebp
mov
popf
in
mov
sti
cmp
pop
das
cmp
mov
outsl
cmp
mov
mov
push
mov
test
push
popf
xor
xor
cmc
add
test
mov
inc
push
push
cmp
icebp
aad
push
int
sti
hlt
icebp
mov
js
and
jne
arpl
leave
pusha
cli
push
in
or
adc
paddusb
stos
clc
rcll
lds
cmpsl
ljmp
xor
negb
dec
adc
push
and
out
enter
fdivl
pop
push
add
xchg
mov
inc
xchg
out
push
addr16
dec
jbe
add
insl
push
out
test
les
popf
xchg
dec
or
cmpsb
adc
daa
and
cli
push
add
jg
jns
repnz
out
lcall
test
xor
aad
test
or
mov
xor
lret
add
imul
pop
aam
lds
adc
xchg
imul
loop
rep
mov
or
sbb
ljmp
scas
dec
incb
jno
push
mov
fdecstp
sbb
shl
and
ret
ret
sarl
pop
out
clc
sbb
mov
adc
imulb
data16
test
jno
pusha
iret
cmc
xchg
sar
out
fdivl
sarb
jge
or
mov
add
gs
mov
push
pop
adc
adc
xchg
jnp
jns
popa
adc
aaa
fbld
and
inc
sub
in
inc
xchg
fsubl
xchg
mov
dec
or
jmp
mov
das
xchg
add
sbb
push
test
dec
sti
dec
mov
les
jae
je
leave
mov
lea
adc
cmp
jmp
cmc
roll
jle
testb
in
mov
decl
sbb
adc
loop
sbb
test
push
sub
push
sbb
push
mov
loop
std
fidivl
jae
fstpl
add
leave
mov
mov
push
pop
inc
jecxz
cmp
das
pop
add
sub
adc
fsubl
mov
ret
pop
cmp
push
and
cmp
jmp
aad
mov
fistps
imul
ss
testb
aam
mov
xchg
or
inc
sub
mov
lret
inc
mov
pop
ss
popf
adc
ss
xchg
mov
bound
test
jmp
jg
nop
mov
lcall
call
fildl
leave
or
out
es
in
inc
xor
jl
push
mov
cmpsb
mulb
test
icebp
and
or
outsl
das
test
jo
jmp
lret
cmpb
mov
lret
dec
jmp
lods
jecxz
out
out
push
pop
push
push
imul
dec
mov
adcl
mov
aad
scas
into
cmp
xchg
in
sub
lahf
lods
lcall
xchg
adc
dec
dec
sbb
pop
fcompl
or
insb
mov
popa
aam
jp
add
shlb
lcall
or
fiaddl
add
popf
ja
or
mov
scas
push
dec
ljmp
repz
xor
xchg
cmp
leave
push
flds
cmpsl
fdivrp
and
lea
jmp
xchg
hlt
mov
fisttpll
dec
mov
push
fs
int3
add
in
fwait
xchg
inc
xlat
test
adc
cmp
test
popl
leave
mov
cmp
pop
xor
mov
mov
test
call
inc
xor
or
je
in
imul
push
xor
dec
test
add
pop
testb
cmp
popf
fisubrs
enter
fdiv
mov
test
cmpsb
xor
xchg
cmc
inc
sbb
movsl
in
push
adc
das
fistl
jmp
repz
xor
jnp
jb
stos
pop
fcoms
dec
popf
scas
xchg
cmpsl
and
cmp
pop
jp
sbb
or
pop
stc
sub
jo
and
es
mov
insb
lret
insb
leave
subb
mov
cmpsl
add
xor
push
lcall
icebp
dec
xchg
addr16
inc
pop
mov
stc
icebp
mov
adc
imul
sub
inc
bound
sbb
xor
push
xchg
out
mov
cmpsb
and
xchg
cmpsl
mov
cld
push
loop
lcall
dec
add
or
test
mov
pop
imul
cmpsl
jns
jp
mov
ffree
jb,pn
jno
call
pop
rep
mov
gs
in
popa
insl
mov
jmp
mov
mov
xchg
sub
jnp
call
jge
int3
int3
stos
dec
push
add
inc
js
or
push
es
cltd
call
xor
add
lods
test
sti
ja
mov
repz
xor
sahf
test
xchg
sahf
push
and
pop
cmpsb
mov
adc
inc
cmp
in
fbld
or
jg
cwtl
jmp
ret
int3
xorb
scas
movb
stc
cmp
out
mov
lahf
mov
push
das
mov
mov
cltd
cmc
cmp
ret
fisubrl
adc
enter
jmp
in
mov
loopne
ret
ljmp
sub
add
and
lock
or
mov
xor
jmp
mov
mov
pop
stos
or
cmpsl
adc
mov
ret
imul
push
mov
testl
in
xchg
filds
push
push
imul
out
cli
xor
mov
push
mov
in
add
xchg
xchg
std
mov
jns
outsl
xchg
mov
mov
add
lret
lods
daa
daa
xor
fisubl
mov
pop
pop
xor
jae
bound
sbb
stos
mulb
lods
ss
push
mov
testb
arpl
sub
mov
mov
leave
cmp
ss
mov
inc
cmp
add
xorl
jl
push
rcr
sti
mov
imul
fiadds
mov
and
inc
popa
mov
cli
xor
lret
inc
add
adc
push
jb
vfmadd213pd
cmp
mov
pop
xchg
inc
push
jl
mov
aam
outsb
into
xor
test
in
sub
dec
hlt
enter
sub
push
mov
insb
pop
das
ljmp
xchg
popa
cwtl
jnp
xor
out
les
insl
mov
add
xchg
adc
cmp
and
pop
pop
jno
je
inc
orl
shrl
add
cmp
iret
xchg
or
add
cli
sbb
jmp
loopne
call
out
lahf
aam
cmpsl
lahf
adc
inc
insb
push
push
jmp
loopne
insl
loope
lds
mov
mov
xchg
je
fisttpl
jb
insl
push
cmp
mov
test
pop
xor
xorb
jecxz
imul
cmp
testl
std
adc
dec
and
leave
fldenv
popa
adc
mov
out
out
cli
aaa
repz
ret
mov
mov
sbb
in
fistpl
aam
incb
sbb
or
push
jg
push
push
les
fidivrl
push
adc
leave
repnz
mov
pop
jne
dec
push
stos
fisttpll
mov
rorb
push
or
push
ret
dec
and
sahf
xlat
cwtl
out
or
sub
fisubrs
popf
pop
aad
sbb
stos
add
in
jno
push
outsb
mov
das
and
nop
outsb
bound
popw
aad
jnp
add
push
out
test
inc
hlt
mov
aas
add
pop
xorl
sbb
mov
lods
nop
ret
cmp
mov
cld
add
cltd
push
arpl
jb
out
aad
cltd
pop
sbb
push
sub
dec
jp
push
test
je
adc
jns
cmp
cwtl
idivl
push
dec
or
and
mov
mov
pop
lods
add
in
add
adc
aad
push
mov
push
and
pusha
aad
pop
push
lea
aas
into
cli
mov
mov
scas
int3
pop
sub
inc
stos
pop
out
and
xor
arpl
shl
pop
insl
mov
sub
test
pusha
add
ss
es
adcb
lea
out
test
cmp
push
pop
cld
mov
fadds
xor
pop
aad
mov
scas
inc
inc
mov
pop
bound
mov
add
jge
xchg
es
repnz
fldt
in
inc
xchg
inc
sub
sbb
dec
mov
pop
cmp
dec
xor
loopne
or
xchg
cld
rcrl
and
inc
mov
mov
cmp
outsl
mov
adc
cmpsl
fs
popa
std
xchg
jno,pt
stc
dec
cmp
icebp
jg
or
stos
pop
sub
push
cmpsb
rcr
mov
leave
imul
sahf
dec
jns
xchg
pop
xorl
add
shr
add
push
loope
jno
and
clc
in
inc
inc
sbb
pop
adc
pop
pop
xor
out
daa
das
stos
std
or
push
ljmp
and
insl
mov
fldenv
sub
jb
ljmp
sti
arpl
or
je
mull
xchg
add
hlt
adc
pop
repnz
lret
dec
jns
push
pop
or
aad
ss
iret
mov
xor
jmp
fdivrl
enter
faddl
fimull
cmp
out
sub
fdiv
inc
adcl
xor
subl
mov
mov
pop
popa
stos
outsl
xor
jge
pop
push
jne
xor
pop
add
push
push
or
test
pop
sbb
fsubr
scas
xor
push
loopne
pop
jle
iret
lret
loope
movsb
mov
inc
mov
jnp
int
jl
xchg
and
popa
add
addr16
and
cmp
imul
sbb
js
test
sbb
jnp
jb
das
in
outsb
mov
push
jge
bound
mov
ss
and
mov
fdivrs
into
or
cs
fwait
test
xorb
int
in
mov
jmp
lods
lret
daa
test
insl
xlat
incl
int3
scas
jno
fmull
pushl
mov
out
dec
cmc
bound
lods
mov
lea
aas
out
cmp
push
sbb
pop
fmuls
ss
mov
or
dec
int
stos
repz
adc
jbe
mov
fcmove
jp
sub
xlat
add
pop
or
subl
pop
cmp
adc
mov
outsb
sbb
es
dec
sbb
dec
jb
int
std
repnz
adc
sbb
test
shlb
lcall
and
adc
pop
inc
pcmpeqw
sub
fildl
pop
inc
or
pop
lahf
out
cmpsl
sahf
sbb
fcoms
pop
ja
les
xchg
add
rcr
or
adc
mov
shl
cmp
rcr
or
ja
gs
gs
xor
fwait
jp
mov
xlat
mov
stc
ljmp
sub
push
mov
fsubrs
pop
pop
lds
sub
add
lret
lahf
or
cmpl
addr16
push
and
adc
fsubl
or
pop
rcr
jp
pop
add
enter
adc
aam
dec
pop
outsb
or
es
mov
stos
adc
xor
pushf
or
aas
std
mov
sahf
jbe
xorl
out
pop
pop
std
xchg
and
xor
xchg
pop
inc
adc
std
iret
cmp
sbbb
shrb
xlat
mov
cs
mov
pop
xor
mov
aam
lods
adc
cmp
imul
pop
clc
insl
jmp
insl
or
pop
inc
cmp
pushf
xor
xchg
aaa
cmp
push
cmp
pop
sub
pop
mov
pushl
lods
cltd
stc
lods
or
popf
cmp
inc
in
cmp
sarb
xor
add
push
push
inc
shl
jecxz
pusha
lcall
dec
jp
test
and
stc
xchg
lods
pop
stc
icebp
fistl
sub
shlb
loopne
xor
xor
loopne
jbe
add
insb
pushl
int
push
xchg
push
sub
out
sub
sub
scas
xorl
push
out
push
sbb
rcl
push
sbb
xor
in
pop
stos
shr
or
jae
loop
mov
inc
pop
mov
shrb
nop
and
loopne
xor
lea
mov
insb
or
ror
aas
nop
sahf
mov
mov
call
fsubl
scas
mov
or
dec
out
xor
in
lock
ficoms
sbb
dec
out
enter
adc
mov
dec
aad
arpl
mov
sbb
es
out
and
or
lock
movsl
mov
insl
mov
or
icebp
stos
xchg
add
pop
vpsrlq
pop
mov
sbb
mov
jae
dec
xor
popa
sub
mov
or
insl
std
inc
test
je
outsl
gs
popa
add
inc
sahf
mov
or
xchg
add
outsb
xor
in
movsl
mov
add
or
xor
lds
and
iret
cmp
inc
imul
mov
int3
adc
mov
xchg
lods
repz
gs
sub
cs
jmp
mov
xchg
popa
mov
into
adc
mov
sub
fmuls
repnz
lret
dec
dec
add
and
inc
ja
sbb
js
fstpl
and
xchg
cmp
stc
mov
cmp
call
movsb
jb
and
and
repz
call
sbb
xor
mov
pop
pop
in
sub
xchg
inc
dec
mov
xchg
aad
stos
and
fistps
jne
cwtl
xchg
or
mov
mov
cwtl
clc
sub
inc
movsl
pop
fadd
sbb
mov
jno
add
sub
xor
xchg
icebp
test
cmp
jg
sbb
jge
cmpsb
clc
adc
aaa
or
mov
mov
bound
jno
test
hlt
loope
jp
rorl
outsb
push
mov
xor
xor
in
test
inc
je
pop
adc
addl
fldl
movsb
cmpsb
mov
cmp
sbb
sub
icebp
and
inc
bound
jge
lahf
loopne
out
push
ficoml
push
lea
leave
daa
daa
loope
inc
pusha
adc
xorb
xor
gs
stos
jno
out
cld
cmp
sbb
and
adcb
out
lods
jl
sar
push
mov
dec
call
sub
jg
stos
pop
in
ja
push
or
icebp
mov
stos
test
scas
cmc
fsts
push
push
mov
push
out
sub
cmpsl
push
and
loope
ja
cmpsl
jl
cld
leave
and
pop
sbb
add
aaa
push
sbb
mov
dec
push
adcl
pop
jle
js
scas
std
or
push
not
cmp
jb
inc
push
dec
ret
dec
fwait
and
mov
xor
mov
sub
inc
xchg
lret
mov
and
lahf
inc
mov
in
out
clc
out
fdivrl
lods
dec
outsb
pop
sub
mov
movsl
test
mov
out
sbbb
xchg
adc
test
jns
lock
push
mov
subb
jmp
outsb
loopne
shll
inc
in
cmp
xor
fs
jmp
sbb
fsts
in
xorl
loopne
sbb
dec
push
mov
mov
das
jo
xor
icebp
out
sbb
cmpb
shrl
sub
mov
dec
les
xchg
mov
push
imul
cs
xchg
dec
pop
es
fnsave
loop
jl
ds
cld
inc
sbb
sbb
sahf
test
cmovo
dec
clc
fs
push
xor
sbb
or
loopne
or
pop
imul
subb
mov
cli
push
xchg
je
xor
movsl
xchg
pushf
pop
pop
mov
clc
fsubl
sub
dec
xchg
xor
or
xor
test
movsb
pop
push
aas
shr
or
inc
stos
sbb
push
mov
cmp
adc
ljmp
xor
fsubrl
cmp
xchg
mov
push
xlat
fists
cmp
inc
rcrl
adc
imul
sbb
pop
repnz
sub
not
pop
addr16
aam
or
push
sub
mov
adc
mov
cmp
in
imul
pop
push
mov
push
xchg
cmpsb
call
xor
outsl
sbb
cmp
movb
pop
out
mov
push
sbb
mov
cwtl
ljmp
pushf
mov
enter
std
rolb
ror
pop
xchg
hlt
xchg
cltd
out
mov
xchg
call
pop
jmp
stos
and
inc
add
das
enter
cli
add
or
xchg
in
clc
sahf
jno
cmp
stc
shl
pop
inc
bound
cwtl
mov
inc
jg
lret
pop
push
cs
sbb
mov
xchg
mov
sti
and
mov
in
mov
cmc
scas
mov
push
add
push
enter
test
xor
lret
jecxz
test
adc
pop
loopne
pop
jo
jle
pop
cld
incl
sbb
ja
pop
push
aad
push
pop
scas
arpl
jle
stos
mov
push
fdivl
and
repnz
dec
xor
jecxz
das
and
inc
cmp
dec
and
out
push
pop
jns
fs
mov
xor
mov
mov
xor
push
iret
ret
movsb
stos
test
xorl
gs
adc
xchg
mov
out
sbb
mov
es
xor
test
or
or
loope
call
clc
jge
pop
add
fcoml
bound
mov
andl
out
fldenv
dec
repz
push
or
popf
in
mov
mov
sub
fwait
out
or
jg,pn
scas
push
inc
popf
mov
pop
dec
mov
in
arpl
inc
inc
adc
maskmovq
divl
data16
cld
fisubrl
xor
push
data16
mov
insl
rcr
cwtl
cmp
lret
add
addr16
dec
cs
jge
or
and
push
push
mov
das
xchg
jle
push
or
cmp
cmp
jne
cmc
ss
in
jle
xchg
inc
push
fistl
xorb
insb
mov
add
inc
mov
push
cmp
call
call
stos
fwait
gs
and
lods
jb
pop
outsb
inc
arpl
push
add
and
pop
dec
in
pop
push
xor
pop
add
cmpsb
push
xchg
dec
shll
adc
add
js
pushf
daa
lods
orb
stos
mov
movsl
test
lea
or
stos
sub
cld
cmpsl
jl
xchg
fstpl
xchg
dec
je
into
push
and
or
ucomiss
lods
add
into
loop
es
daa
jge
adc
jge
out
jno
lahf
xchg
in
pushf
aad
xor
mov
jno
cmp
jmp
in
fadd
or
out
lods
nop
mov
xchg
mov
mov
in
std
andb
dec
jns
aas
ljmp
sarb
jp
mov
mov
xchg
inc
popa
dec
jns
lret
sbbl
js
ja
adc
rcrl
mov
nop
sub
or
outsb
cmpsb
xlat
fnstsw
or
test
into
hlt
ficomps
mov
shlb
pop
fcoms
in
xor
pop
pop
loop
nop
das
add
inc
or
rclb
cmpsl
in
and
scas
and
and
mov
scas
bound
jmp
or
aas
mov
lock
outsl
lea
cmp
ljmp
js
pop
decl
add
scas
aaa
dec
pop
lret
pusha
sti
jmp
pop
mov
loope
faddl
loopne
iret
or
std
adc
outsl
aam
fsubl
outsb
stc
leave
xchg
dec
aam
xchg
das
imul
sbb
xchg
mov
mov
dec
ret
dec
test
mov
in
ljmp
mov
sbb
ljmp
dec
mov
or
je
mov
dec
bound
rsm
cmpl
mov
mov
jnp
sahf
outsl
enter
cld
fldt
es
lcall
jno
loop
mov
int
mov
push
sub
mov
mov
hlt
int
and
lea
fistpl
push
adc
cltd
jmp
lret
sub
repz
push
call
jle
ret
or
loop
or
out
mov
inc
test
data16
or
ret
pusha
mov
daa
mov
pop
repnz
push
iret
mov
push
incl
out
push
aad
lret
inc
out
jo
inc
fnstcw
rcrl
mov
mov
js
sub
aam
stos
loopne
adc
test
mov
stc
jo
push
sbb
inc
dec
push
pop
sub
add
mov
sbb
mov
pop
ficompl
out
add
sub
xor
imul
pusha
inc
cmp
es
jecxz
js
mov
cmp
rol
hlt
sub
imul
mov
pop
outsb
mov
cmpsb
push
mov
loopne
inc
sbb
cwtl
xchg
xchg
cmpsl
push
dec
ret
fbld
jge
jge
add
test
xor
inc
aas
mov
and
cmc
test
mov
push
jecxz
sub
inc
addr16
test
and
adcl
movsb
cmp
rorl
dec
imul
xor
fidivrs
lea
and
movsb
xchg
mov
imul
xor
and
adc
cmp
rol
lds
jg
sub
js
scas
stc
add
xorl
mov
or
cmpb
repnz
mov
xchg
movsl
mov
repnz
pop
mov
cwtl
push
push
mov
into
scas
inc
sub
subl
idiv
iret
mov
test
mov
in
dec
repnz
xor
pop
sti
sbb
add
das
cmp
inc
xor
jge
std
xchg
jle
sub
push
cs
lahf
jecxz
push
int
adc
lods
mov
mov
xorl
movsb
cmp
xchg
mov
repz
dec
cmp
lahf
idivb
xor
pop
dec
pop
sub
mov
lret
push
daa
xlat
or
push
mov
xor
test
scas
fwait
add
addr16
popf
fistpll
mov
dec
push
cmp
sub
je
xchg
xor
mov
divb
ds
pop
in
sbbl
int3
sub
mov
mov
adc
and
push
subb
add
bound
jge
pop
inc
cmp
int
dec
mov
add
dec
xor
add
xchg
pop
or
xchg
daa
push
int3
pop
mov
mov
and
aam
pop
leave
mov
jp
sar
add
xor
sar
test
pop
mov
inc
addr16
dec
jb
shll
orb
jmp
enter
je
push
fcomps
cmpsb
nop
push
inc
mov
aaa
aam
cmp
inc
cs
call
mov
fidivs
test
xchg
xchg
jmp
push
pop
nop
push
std
or
xor
ja
adc
push
jns
sti
idivl
push
out
and
cmpsl
xchg
mov
push
nop
mov
mov
stos
sub
lea
jns
add
add
push
jle
and
mov
fmul
mov
popa
dec
mov
add
ja
mov
stos
xchg
mov
pop
sub
mov
add
sti
repz
js
and
vcvtdq2pd
add
lods
arpl
xchg
jl
lret
je
ret
daa
jge,pn
push
bound
ja
mov
imul
adc
je
adc
movsl
sub
jg
push
push
pushf
ret
xor
je
pop
add
push
outsb
or
imul
xor
jo
lods
adc
cmp
sbb
fimuls
dec
mov
inc
in
js
lahf
push
push
cli
aaa
loope
add
leave
or
pop
out
cmp
popf
aas
push
imul
push
xchg
sti
and
ret
ret
stos
js
cmpsb
dec
daa
or
xchg
and
fidivrl
and
or
pop
xchg
xchg
dec
ror
movsb
add
xchg
addl
scas
dec
pop
lods
inc
inc
out
stos
jns
je
mov
and
loopne
pop
or
fisttpl
sub
lret
int
mov
jle
cltd
cmp
fs
outsl
clc
ja
jmp
push
dec
test
jge
pop
in
cmp
pop
icebp
in
jmp
int
push
push
jns
pop
sbb
dec
inc
dec
jg
mov
decl
in
lods
and
mov
int3
cmp
fisubl
into
pusha
pushf
ja
mov
jns
daa
and
stos
jae
pop
xchg
scas
das
stos
or
push
daa
pop
xor
dec
xor
add
out
mov
addl
xor
jge
std
fstl
iret
loop
movsl
adc
clc
out
test
jmp
imul
cmpsl
or
scas
cmp
push
pop
xchg
decl
sub
pop
jbe
scas
cmpsb
xor
sbb
mov
shlb
addb
sbb
stos
cmpb
cmp
std
xchg
les
fnstsw
aas
mov
add
int3
in
aaa
dec
fadds
hlt
popa
in
imul
pop
push
adc
mov
pop
and
sarl
mov
lcall
pop
in
cmp
sti
cwtl
pop
or
aam
icebp
pusha
xor
cmp
stc
js
push
das
jae
or
and
xor
aaa
inc
mov
mov
mov
leave
fcoml
push
aad
out
repnz
std
dec
in
and
lret
andb
icebp
jg
mov
repnz
int
inc
inc
repnz
adc
sub
test
jae
das
mull
push
sbb
jns
fldl
pop
push
mov
stc
dec
mov
mov
mov
sbb
or
fwait
pop
jmp
mov
stos
and
sahf
scas
lods
or
into
or
lds
mov
push
jo
not
dec
mov
xorl
arpl
add
xor
pop
das
dec
fisubs
adc
or
fiaddl
inc
cmp
jp
xchg
inc
mov
lds
jo
push
mov
adc
xchg
cmp
push
pop
test
in
ret
ds
dec
imul
in
sbb
clc
nop
fwait
int3
mov
cli
sarl
mov
mov
outsl
imul
sbb
dec
inc
pop
popa
popa
daa
es
iret
lods
push
pop
sbb
inc
push
xorl
out
arpl
icebp
es
dec
mov
andl
js
sub
lea
mov
push
inc
and
push
add
xor
ret
xor
lods
roll
jecxz
cmp
jo
xor
scas
repnz
inc
das
lods
inc
and
in
mov
sti
sub
adc
lods
in
sahf
mov
mov
daa
stos
out
pop
sbb
cld
data16
pop
aad
flds
fstpt
pop
cwtl
push
sbb
sbb
xchg
or
pop
sahf
fstpt
mov
fbstp
fistpll
ja
pop
ret
lahf
mov
hlt
sbb
cmp
icebp
adc
pop
je
sub
dec
and
data16
into
das
out
es
sub
cmp
dec
ss
fbstp
mov
xor
fstp
jl
push
xchg
fmuls
jecxz
xchg
int3
pop
xor
cs
push
pusha
jmp
sbb
add
push
jo
adc
int3
nop
idivb
cmp
pop
fcmovnu
mov
ss
in
es
fistps
xlat
aad
decl
sub
shrl
mov
test
lcall
fwait
in
xor
lods
inc
push
jbe
cmp
and
xchg
sbbl
jne
das
inc
hlt
cmp
ret
movsb
mov
ljmp
jg
dec
fwait
aas
xchg
mov
add
shrd
imul
adc
sbb
jg
xchg
adc
das
lods
jg
dec
movsb
cmp
ljmp
roll
aas
pop
xchg
lahf
pop
xchg
xchg
into
clc
sahf
mov
dec
mov
data16
mov
insl
push
or
std
xchg
dec
movsl
mov
mov
add
or
pop
mov
xor
adc
push
aam
ret
pop
fldt
xlat
jnp
mov
adc
je
push
fisubl
jle
cmp
lcall
xchg
jne
je
cmp
pushf
shl
inc
dec
pop
inc
add
jle
sub
cmp
cmp
data16
add
sbb
iret
mov
jo
dec
loop
xor
pop
adc
push
mov
loope
sbb
push
repz
sahf
cwtl
loop
cmpl
mov
fcmove
inc
js
sub
jle
aam
enter
lret
rcrb
loopne
sbb
cltd
pop
mov
cmp
clc
stos
sahf
xor
push
nop
pop
lcall
jns
ja
movsb
pop
inc
insb
jnp
sar
mov
xor
outsl
cltd
lds
pop
xor
mov
test
or
cmpsl
nop
stos
aad
xor
loop
sbb
fldenv
jg
xor
data16
pop
push
or
gs
inc
dec
test
dec
push
xor
lods
mov
out
push
popa
jns
push
sarl
data16
pop
pop
fildl
add
mov
insl
sti
fcmovnu
sub
cmp
sub
jnp
mov
mov
sbb
arpl
ds
shrb
ret
push
dec
inc
push
mov
xchg
sahf
push
loopne
push
push
mov
sarb
jmp
insb
adc
sarl
or
cli
and
jp
mov
lds
adc
pop
out
mov
neg
or
or
push
scas
pop
testb
pop
xlat
fists
data16
push
stc
ja
idivl
scas
das
xor
cld
inc
push
xor
cmpsb
loopne
mov
lahf
add
mov
sahf
mov
or
hlt
js
push
lret
mov
orl
in
pop
cld
add
stos
jmp
cmp
or
lea
jmp
ljmp
mov
fimull
out
inc
pop
mov
stos
movsb
lret
test
mov
das
mov
andb
cltd
push
xchg
cmp
xchg
insl
mov
jecxz
sbb
mov
add
push
je
xor
rcrb
sub
in
jle
negl
nop
xlat
jp
mov
push
hlt
loop
sahf
imul
andl
mov
xchg
and
and
outsb
cltd
out
imul
sbb
xchg
ret
mov
stos
push
lret
fisubs
push
bound
mov
push
inc
aaa
lahf
adc
shrl
pop
imul
test
cmpsl
add
or
add
ljmp
or
fwait
call
mov
ss
int
cmpsb
adcb
xchg
inc
adc
inc
lods
push
dec
mov
idivl
xlat
push
lods
xchg
ret
jbe
xor
pop
repz
mov
sti
add
jmp
in
sub
popf
adc
push
adc
loope
jg
out
xchg
mov
bound
and
out
pusha
movsl
aam
cmp
test
add
dec
ljmp
and
cwtl
fiaddl
addl
orl
jge
pop
dec
cmp
add
sbb
aad
sbb
lods
aaa
movsl
push
xchg
sbb
jns
cwtl
xrelease
lahf
es
add
mulb
out
in
xchg
jecxz
jb
or
mov
pusha
push
xchg
mov
add
aam
bound
in
fldcw
mov
cmpl
std
inc
mov
cmpsl
inc
loopne
or
mov
stos
aad
cltd
shll
hlt
cmp
mov
fcmovnb
mov
xchg
jae
mov
pushf
lret
dec
cmc
sbb
lds
popf
stos
sbb
adc
and
orps
dec
pop
jl
inc
dec
mov
je
call
cmp
add
xchg
lret
mov
in
pop
sbb
push
push
cli
jbe
pop
sbb
shlb
arpl
or
lock
push
push
mov
inc
adc
aad
mov
add
inc
sub
jle
jmp
pop
bound
or
movsl
and
imull
mov
filds
jmp
sarl
fisubrs
in
cld
icebp
or
inc
incb
sbb
push
notb
xor
xor
mov
sub
and
ret
mov
and
lcall
mov
shl
mov
adc
lods
rclb
xor
xor
divl
inc
dec
adc
xchg
mov
pop
ret
outsb
cmpsb
jg
jp
cwtl
sbb
xchg
pop
mov
or
icebp
push
mov
jl
or
es
push
push
dec
dec
mov
lds
adc
in
aam
aam
sub
lcall
xlat
jp
and
andl
sbb
cmp
out
mov
movsl
and
adc
xchg
arpl
cmc
call
adc
push
sbb
rol
push
cmp
sarl
jo
jae
xchg
lcall
pop
into
mov
or
popf
mov
mov
push
and
subl
aaa
mulb
bound
xor
aas
punpckhdq
jb
pop
sub
lcall
inc
cltd
addr16
stos
add
dec
mov
push
pop
xor
xor
push
cmp
mov
mov
cmp
test
lods
dec
sbb
push
daa
dec
add
rcrb
mov
push
js
sarb
aaa
fstpt
jmp
xlat
or
inc
mov
loope
rolb
pop
and
fimuls
push
cwtl
incl
and
shl
cmpsl
fidivs
into
push
or
popa
mov
inc
je
sub
and
daa
xchg
cmpsb
cmp
insb
std
or
mov
ljmp
mov
pop
mov
mov
mov
dec
pop
adc
imul
loope
ss
les
inc
xchg
not
aam
hlt
insl
fiadds
ja
iret
lods
push
data16
add
mov
xchg
xchg
in
int3
xchg
test
mov
push
pop
xchg
mov
in
pop
fsubrl
cltd
sub
lea
mov
cs
adc
dec
xor
cmpsl
push
rcrl
fs
pusha
mov
pop
add
mov
adc
mov
rorb
lahf
and
mov
mov
push
ret
pushf
push
lock
lret
mov
pop
pop
xchg
push
and
testl
mov
out
jg
jno
les
sub
sub
sub
cmpsl
ljmp
push
sbb
mov
sbb
inc
mov
dec
leave
cmp
leave
int3
lods
fbstp
js
push
or
or
lret
mov
pop
aas
jno
int3
xor
int
dec
pop
je
into
ret
test
addb
mov
jns
inc
movsl
xchg
xchg
jo
aas
xchg
ret
pop
aaa
mov
cmpsl
pop
xor
repz
shll
testl
in
out
jb
push
popa
jl
jge
mov
sbb
pop
mov
inc
or
pop
jb
cmp
iret
in
mov
hlt
xchg
fcomps
mov
mov
push
pop
movsb
in
jne
mov
xchg
jbe
jae
ja
js
andb
jge
fstps
subb
enter
inc
add
int
enter
jp
rol
cmpsb
push
jp
test
pusha
js
sbb
mov
dec
ljmp
mov
lock
into
jecxz
icebp
fsub
jns
into
cli
add
je
mov
inc
insb
xchg
jb
jo
xlat
xchg
test
das
jmp
mov
xchg
xchg
call
ljmp
cmp
mov
mov
test
sbb
sub
xchg
mov
ljmp
jecxz
stos
push
push
gs
int
pop
pop
or
sub
aam
and
and
jns
push
mov
mov
push
inc
inc
dec
or
ret
mov
sub
dec
jne
lock
pop
add
add
add
push
add
stc
jl
inc
mov
scas
jmp
fwait
xchg
mov
or
mov
push
adc
pinsrw
int
and
xor
mov
gs
sbb
fadd
pop
push
add
cmpb
imul
sub
aam
mov
sub
or
je
mov
mov
push
push
jle
imul
movsl
arpl
out
jo
or
sti
or
and
fiaddl
enter
cld
push
inc
jl
icebp
jp
dec
cwtl
clc
mov
jle
cwtd
pushf
pop
ss
test
test
inc
add
xchg
lret
sub
lcall
outsl
cmp
push
cmp
adc
jp
pop
or
push
and
or
xor
imul
sbb
adc
jb
shl
aam
inc
gs
lods
ja
rclb
aam
testl
stc
jb
pushf
enter
test
jb
xor
loope
adc
call
imul
bound
pop
dec
jmp
jl
xchg
and
pop
lods
push
xchg
or
adc
dec
sub
jge
cmp
aad
inc
subl
cs
insb
andl
sub
jg
stos
jno
pop
bound
push
mov
xor
fisubs
cmp
sub
je
jmp
push
stos
or
xor
bswap
jmp
js
or
pop
scas
addl
sahf
sub
mov
cmp
fistl
sahf
inc
push
lahf
xchg
in
adc
inc
lds
push
jne
fstps
mov
mov
jp
jge
ret
test
daa
decl
lods
aad
daa
inc
daa
push
xlat
sbb
lds
jmp
dec
and
insl
imul
mov
and
shr
push
loop
test
dec
pop
add
and
dec
ja
sbb
dec
sbb
js
pop
xchg
cli
ffree
xor
xchg
xchg
adc
mov
pop
leave
inc
call
mov
inc
add
out
and
inc
stos
inc
testb
xor
hlt
loopne
jge
aad
std
mov
adc
cwtl
das
dec
xor
popf
pushf
clc
xor
or
mov
decb
mov
jp
adcl
add
xor
data16
mov
mov
add
hlt
icebp
ljmp
pushf
lcall
in
mov
mul
adc
repnz
inc
pop
test
inc
mov
loopne
filds
fidivs
dec
int
cmpsl
jecxz
int3
adc
imul
fcoms
addl
cmp
cmp
lret
push
jb
or
nop
cmpsb
cmp
add
adc
and
cmp
rcll
andl
and
sbb
insl
cmp
mov
or
inc
or
fnstsw
int
push
jle
fstpl
es
inc
pop
jno
xchg
mov
in
popf
daa
aad
stos
aam
lods
mov
dec
stc
cs
xor
incl
mov
xlat
jge
xor
insb
cmc
jbe
inc
adc
shlb
ret
add
clc
in
mov
jp
in
push
mov
shr
jge
add
mov
add
xor
push
loop
adc
out
dec
sar
cmp
or
mov
and
push
lds
mov
jae
ss
add
add
fnstcw
add
push
cs
test
xlat
sti
incb
inc
aas
nop
popa
ret
rorl
int
jo
call
fwait
push
daa
xchg
ja
scas
mov
pop
stos
dec
cmp
cwtl
stc
push
inc
sti
sbb
cmp
cld
fnsetpm(287
ret
outsb
insb
and
xchg
pop
jp
int
mov
mov
add
ret
lea
pop
dec
jbe
mov
lcall
add
imull
movsb
mov
adcb
xchg
mov
mov
jbe
xor
test
inc
add
mov
cmp
xchg
dec
nop
or
out
sti
add
sub
mov
sub
rcr
test
out
aaa
leave
insl
out
jle
out
xlat
inc
popf
stos
ljmp
sub
hlt
push
mov
and
movsl
jle
daa
sahf
pop
inc
fidivl
into
or
movsb
aad
jl
adc
and
add
jecxz
repz
jle
mov
cmp
iret
mov
mov
orb
aam
jae
jo
xor
fldz
out
sbb
sub
ss
clc
push
loop
fistpll
mov
ds
push
mov
rorb
mov
fs
nop
scas
outsl
cmpsl
xor
mov
fmul
loopne
es
sahf
jmp
sahf
push
lods
mov
cmp
jmp
and
into
xchg
pop
aas
fildll
sbb
mov
mov
inc
addr16
push
add
cmp
mov
sbb
adc
test
cmp
mov
ljmp
scas
push
adc
sub
ret
imul
mov
sub
pop
out
bound
xor
icebp
or
or
mull
stos
stc
frstor
subl
lods
js
mov
test
nop
mov
pushf
and
or
repz
mov
fs
sub
mov
iret
adc
push
movsb
xor
std
int
test
addl
and
xchg
scas
das
mov
inc
dec
nop
outsb
push
test
aad
or
sub
jnp
jno
sub
sbb
sub
pusha
scas
adcl
in
jg
push
mov
je
sarl
adc
or
sub
mov
push
movsb
jmp
xor
iret
pushw
mov
dec
mov
jmp
das
jge
cmpsb
mov
call
loopne
add
fs
xor
mov
out
jg
jp
pushf
push
dec
aaa
out
ret
cmp
cmc
and
cld
scas
fdivs
out
lahf
jb
lahf
mov
ret
xor
xchg
std
ret
repz
mov
dec
fldt
dec
rorb
push
cmp
cmpsb
fdivrs
jno
add
cmp
mov
mov
mov
adc
mov
test
jne
les
int3
push
enter
insl
cmc
push
cmc
cmpsl
mov
and
adc
out
ds
aam
mov
in
pop
dec
in
xor
popf
ret
inc
les
test
mov
sub
mov
enter
jg
mov
int3
inc
cmp
adc
xchg
xor
daa
pusha
call
dec
sbb
lds
std
push
mov
sbb
imul
stc
sub
inc
push
mov
cs
cmc
or
mov
shr
mov
add
mov
sti
or
jbe
and
adc
mov
sbb
xchg
and
xor
dec
pop
incb
daa
shlb
insb
rcll
lods
scas
adc
data16
cmc
sbb
jle
icebp
inc
sbb
push
in
or
int
notl
aam
push
insb
ja
dec
data16
pop
or
aaa
cli
cli
mov
loop
out
mov
adc
and
jge
jb
bound
xchg
fwait
aaa
dec
negb
fsubrs
add
int
push
adc
dec
clc
ds
in
aas
mov
dec
or
push
adc
das
imul
pop
ljmp
and
pop
cmp
sbb
inc
in
out
dec
int
xchg
mov
inc
push
xchg
jecxz
pop
adc
sub
pop
pop
dec
outsb
sbb
push
daa
dec
outsb
or
mov
mov
or
aas
pushf
sahf
jo
enter
mov
cmp
call
scas
push
loop
jg
clc
cmp
mov
jp
ret
cmc
popa
xchg
dec
cmp
ret
jmp
cmpsb
push
test
leave
lods
out
inc
fcoms
data16
popf
ficomps
xor
arpl
subb
cmpsl
mov
mov
lahf
xchg
fs
push
ret
mov
es
cmpsl
mov
jp
or
jecxz
imul
or
outsl
inc
xor
inc
adc
mov
scas
xor
fisubl
dec
cmp
in
sbb
lods
lods
inc
nop
test
arpl
or
movsl
cmp
xchg
test
je
mov
in
stos
add
xlat
cs
lock
or
int3
mov
cs
je
leave
cmpsb
jle
adc
inc
jle
xor
mov
aaa
aas
jns
int
dec
arpl
bound
mov
mov
out
aad
fistpl
pop
out
cli
pop
std
jge
xor
mov
mov
cld
adc
outsb
data16
push
pop
clc
adc
dec
sub
or
adc
test
shll
cmc
cmp
cmc
out
lods
mov
dec
push
sahf
aas
daa
lods
test
mov
or
insl
inc
mov
mov
dec
out
mov
dec
iret
lcall
jno
mov
std
lds
out
pop
shrb
sbb
cmp
adc
sub
test
test
cwtl
pop
cs
mov
std
pushf
movsbl
inc
inc
xchg
jp
sub
adc
fwait
xor
xchg
pop
sub
test
shrl
adc
cli
or
movsl
push
xchg
mov
sub
dec
test
sbb
js
jmp
xchg
movsl
adc
xchg
std
cmp
roll
push
mov
pusha
fsubrs
jbe
outsl
iret
jle
lcall
out
pusha
adc
jle
dec
lods
ret
mov
jnp
aam
fnstsw
enter
ljmp
inc
xchg
push
mov
in
cs
cli
pop
mov
sti
mov
enter
pop
cmp
mov
cmp
cmp
jl
jo
push
int
xor
xchg
mov
and
adc
out
pop
aam
fcmovbe
lock
push
lds
mov
or
or
mov
xchg
jae
mov
lea
xor
add
fmuls
pop
sub
xchg
int
fidivs
mov
xchg
insl
out
mov
mov
fiaddl
dec
es
inc
sub
xchg
scas
cwtl
mov
shrl
sti
lcall
sbb
mov
and
ret
pop
dec
daa
addr16
pop
mov
outsb
fldcw
aaa
sbb
dec
leave
and
iret
ret
push
scas
mov
gs
fsubrl
es
mov
fcompl
pusha
mov
dec
notl
xlat
mov
loopne
pop
daa
add
fdivl
in
test
cmc
imul
adc
ss
or
out
outsl
mov
and
aas
pusha
daa
jbe
cmpsb
or
push
jo,pt
jb
dec
cltd
dec
stos
icebp
pop
pop
mov
scas
add
adc
push
test
into
xchg
lock
scas
mov
int
and
mov
xor
out
jg
add
mov
sbb
mulb
xchg
sbb
jp
test
cmpb
out
sbb
divb
scas
inc
aas
mov
cltd
fildl
adcb
mov
add
jl
fwait
and
pop
mov
insb
adc
in
fs
cmp
sbb
sbb
xor
sub
fstpt
cld
gs
aam
imul
outsb
movb
test
mov
nop
test
loope
aaa
cld
mov
lcall
xchg
int3
pshufw
das
inc
in
inc
out
insl
es
repz
repz
xchg
lods
mov
roll
cmp
or
xchg
cld
adc
jno
dec
int3
test
imul
push
xchg
loopne
dec
push
leave
and
and
inc
xor
xchg
hlt
int
cs
sbb
add
enter
sbb
cmpsb
and
insl
inc
xchg
ret
lds
fucomip
hlt
fucom
jmp
mov
adc
jnp
and
mov
pusha
fstcw
cmp
addr16
ret
dec
xor
data16
xor
pop
xchg
test
adc
ficoml
sub
jmp
mov
imulb
jg
dec
jns
push
adc
dec
shrb
xchg
mov
mov
movsb
faddp
pop
sbb
jo
sub
mov
sbb
mov
pop
ret
daa
fsubrs
xchg
in
mov
adc
mov
push
aaa
lock
aas
repz
stc
sti
adc
hlt
roll
sub
cmp
xchg
fists
orl
cld
push
cmpsb
enter
scas
sub
mov
pop
pop
inc
jns
cli
push
repz
fs
jae
adc
fwait
mov
gs
aad
mov
aam
sub
mov
mov
bound
pop
loop
cmpsl
push
dec
cmp
mov
scas
insb
mov
icebp
and
cmpsb
aaa
dec
sbb
and
lret
inc
mov
sub
daa
mov
sbb
push
push
mov
int3
ret
pop
nop
push
adc
mov
das
lds
lock
loop
inc
cmp
inc
push
dec
insl
dec
xchg
outsb
stos
mov
mov
push
pop
cltd
xor
popa
popa
lea
mov
mov
mov
lods
lock
adc
addr16
mov
fsubl
sbb
sbb
imul
outsb
cmpsl
mov
xlat
ja
mov
mov
sub
mov
stos
inc
push
in
je
mov
lods
jae
push
out
out
int
cltd
enter
in
popf
add
gs
std
cmp
mov
xchg
decl
mul
pop
cmp
mov
sub
add
xlat
xor
mov
xor
dec
push
adc
inc
loop
push
shll
mov
in
xor
adc
stos
sahf
pop
imul
fildl
mov
xorl
xchg
pop
sbb
jo
add
cltd
adc
push
aas
xchg
and
jle
cs
repz
adc
out
inc
pop
add
dec
mov
xchg
fsin
sbb
in
and
sub
loop
aam
test
lods
ret
int
xchg
push
test
and
and
in
loop
mov
and
pop
mov
mov
shrb
mov
mov
test
in
pop
xor
stos
scas
fsubl
mov
cs
xor
jno
ret
dec
in
scas
lahf
dec
xchg
test
push
ljmp
daa
mov
clc
ss
insb
imul
mov
stc
dec
shl
call
pxor
pushl
sub
cmpsl
dec
and
pop
mov
mov
mov
jp
pusha
call
in
mov
mov
add
outsl
jecxz
adc
es
fwait
mov
das
subb
data16
jecxz
jecxz
pusha
pop
mov
insb
jg
inc
inc
mov
sub
stos
xor
nop
sbb
fimuls
sahf
mov
xlat
loop
into
pop
jb
int3
inc
data16
popa
scas
test
shrl
stos
jp
and
adc
into
out
dec
jns
push
add
cmp
jmp
jo
sbb
sahf
into
push
lods
andl
add
clc
mov
daa
stc
fcompl
add
out
cmc
sub
inc
sub
rcr
jo
clc
loop
fs
inc
out
dec
mov
xchg
pop
out
test
repz
mov
mov
insw
ss
pop
adc
enter
arpl
es
push
pop
and
fdiv
xchg
sahf
pop
mov
ret
mov
repnz
pop
push
popa
movsb
adc
scas
daa
dec
test
mov
sub
nop
jns
xor
scas
das
mov
loop
mov
es
cltd
inc
call
inc
dec
dec
mov
sbbb
dec
popf
popf
sbb
insb
test
pop
add
sub
int3
sbb
imul
mov
in
leave
loop
lods
loop
ret
aad
fsubp
cmp
inc
xor
sti
jp
inc
data16
addps
hlt
cltd
cwtl
mov
mov
insl
mov
adc
sbb
fs
xor
leave
jnp
jmp
pop
cwtl
inc
roll
xchg
repnz
cmpsb
dec
add
fmull
jecxz
insb
xchg
xchg
jnp
shrl
jae
and
rcll
or
mov
push
inc
mov
cwtl
inc
cwtl
insl
sub
mov
add
dec
popf
in
imul
call
jno
sahf
add
or
mov
xlat
jg
jp
data16
or
xchg
mov
icebp
xorl
inc
push
xor
ret
out
pusha
inc
cmp
pop
loop
fldenv
nop
es
shlb
arpl
add
insb
mov
int
pop
mov
test
das
out
pop
dec
std
mov
jp
push
cld
xor
sahf
loopne
test
mov
cli
sti
or
adc
lahf
insl
pop
and
xor
pop
sub
test
add
pop
adc
ja
fidivl
mov
bound
int3
pop
and
subl
lahf
mov
dec
icebp
inc
shll
fimuls
gs
sbb
sti
hlt
sub
sbb
enter
jb
lcall
gs
push
sbb
out
mull
ja
jae
out
shr
aad
cmp
xor
fnstenv
sbb
outsb
lods
sbb
inc
loop
cltd
pop
cmc
sbbb
call
cmp
orb
rcr
aad
pop
pop
dec
xor
xchg
dec
jbe
ja
loop
addl
lods
movsb
mov
cmp
lock
je
lahf
out
jns
dec
mov
mov
fldl
jg
scas
sbb
sbb
mov
sub
jg
aam
sbbb
mov
pop
cld
std
push
xchg
outsb
xchg
decl
adc
flds
jmp
pushf
ljmp
jno
inc
in
roll
mov
lcall
je
add
loope
mov
out
mov
inc
popa
jp
mov
test
bound
push
xchg
hlt
stc
xor
push
repnz
inc
pop
cmc
sub
cmpsb
add
outsl
jp
jne
aas
daa
mov
lds
hlt
popf
jo
cli
jae
leave
test
rclb
std
icebp
cmp
ss
sub
out
adc
clc
cmpsb
inc
icebp
adc
or
fnstsw
lret
mov
andb
or
mov
and
pop
cmpsb
dec
out
lock
pop
push
insb
cmp
out
or
mov
inc
into
jne
mov
sarb
mov
aas
fs
mov
orl
ret
popa
inc
lret
popf
es
add
push
pop
aam
cltd
push
fs
adc
jnp
sub
inc
lahf
jmp
mov
or
arpl
jmp
sbb
enter
popf
xchg
ret
aas
dec
std
fisttps
mov
pop
dec
xlat
mov
xor
cmp
cmp
mov
push
and
adc
test
ret
in
in
pop
push
imul
sbb
jo
mov
adc
movb
jge
jmp
cltd
ret
pop
sub
fwait
pop
add
ja
and
lods
mov
fs
leave
rclb
sbb
xchg
fdiv
cmpsl
jmp
jge
lods
adc
nop
dec
iret
or
or
and
or
movsl
ret
inc
fistps
sarb
es
mov
adc
test
es
loope
movsl
jge
push
adcb
push
and
sub
xchg
push
sbb
out
add
add
int3
int
pop
je
test
xchg
sarl
pop
mov
mov
mov
jg
mov
aas
push
movsb
lods
adcb
popfw
pop
mov
jecxz
push
mov
xchg
into
mov
xlat
or
xor
xchg
push
bound
mov
lcall
xchg
fwait
adc
add
pop
mov
out
test
inc
adcb
push
mov
xor
adc
mov
xchg
pop
dec
test
lahf
ret
lret
add
rolb
pop
mov
ret
outsl
sbb
fldcw
jae
out
or
push
sbb
mov
dec
rclb
adc
sbb
icebp
xchg
jg
inc
sti
sarl
or
adc
addr16
ret
fmuls
aam
repnz
pop
pop
imul
movsb
into
inc
or
pop
inc
push
sbb
outsl
loop
popf
stc
adc
shll
sahf
jecxz
pop
dec
fs
push
fs
pop
jge
cmp
lahf
addr16
xchg
fwait
mov
xor
mov
push
mov
mov
rcl
mov
jnp
call
test
idivl
dec
hlt
sahf
movsb
mov
and
in
scas
sti
int3
jmp
cwtl
cmp
dec
stos
pop
jae
cltd
repz
xor
imul
ss
inc
and
loope
push
popf
lret
loopne
sub
cmp
adc
outsb
or
jns
add
stc
mov
jae
lds
xchg
or
and
dec
cmp
xchg
mov
add
jl
lcall
lods
cwtl
imul
sub
out
inc
or
stos
mov
cmp
cmpsl
imul
pusha
sbb
lods
or
dec
stos
fcmovbe
push
pop
dec
mov
lret
popf
dec
leave
cli
fs
call
arpl
ds
inc
xor
push
js
push
shlb
inc
jmp
daa
nop
add
or
ss
icebp
mov
test
push
arpl
pusha
ljmp
cmp
lcall
inc
cmp
popf
mov
push
sub
pop
or
scas
lods
xorps
movsl
lock
push
cmp
and
outsl
jp
pop
arpl
mov
and
sbb
mov
add
mov
add
clc
sarb
stos
jb
std
bound
int3
out
enter
sbb
jge
sbb
xor
ss
cltd
out
or
mov
fildll
enter
adc
inc
inc
jp
xor
in
or
jl
mov
ffree
rclb
mov
fistpl
push
mov
sbb
gs
in
mov
outsb
mov
je
aas
push
cmp
inc
sahf
adc
dec
roll
push
dec
dec
add
and
xchg
stc
leave
adc
inc
jge
mov
xchg
in
js
jb
dec
cwtl
sub
pusha
pop
mov
mov
adc
or
inc
out
inc
jp
push
repnz
arpl
adcb
lock
lret
and
cld
dec
aam
aad
sub
dec
push
push
jecxz
and
fnsave
lahf
fisubl
pop
cmp
cs
sti
push
mov
and
pop
xor
dec
fs
fadd
jne
loope
mov
push
addb
xor
xor
clc
jb
iret
mov
sbb
push
jno
cmp
push
cmp
pop
jmp
mov
je
pop
out
sub
sub
and
dec
ret
dec
dec
test
repz
sub
fld
and
data16
or
adc
jmp
mov
lcall
add
xor
jns
jp
adc
fdivrs
inc
ss
or
leave
sti
test
rcr
lahf
cld
movsb
iret
repnz
and
lret
sub
jb
lock
ds
out
add
inc
lea
les
mov
in
imull
test
lea
rolb
lea
push
push
or
add
imul
mov
lock
mov
andl
out
popf
insl
test
xchg
and
pop
ja
pop
sub
dec
mov
inc
or
aas
add
mov
inc
mov
bound
ss
cmp
sub
inc
or
sti
pandn
out
call
cmp
or
fdiv
out
enter
scas
xchg
cmp
fdivrs
jge
dec
add
stc
inc
push
cmp
gs
mov
mov
and
je
add
lds
xlat
cmp
les
enter
ret
das
or
push
push
dec
dec
xchg
int
xchg
aad
and
sarb
inc
ljmp
mov
dec
lea
mov
pop
xchg
mov
xor
popf
sbb
jge
or
mull
dec
sahf
sub
dec
into
mov
into
dec
je
pop
cs
lods
popa
xchg
int3
mov
adc
cmp
push
fildl
cmc
mov
pop
cs
lret
cmp
cmp
sub
mov
fsts
push
jg
cmp
cmp
fiadds
and
push
movsl
push
fistpl
sbb
pop
xchg
clc
aas
shlb
stos
shrb
jl
inc
pop
in
add
pushf
subb
cltd
and
dec
mov
mov
xor
lahf
pop
push
xor
int3
scas
jnp
mov
addb
repz
js
and
mov
lret
inc
movsbl
cs
stos
sub
push
dec
cli
sub
adc
jnp
dec
stc
mov
scas
jle
push
loop
stos
dec
jmp
mov
dec
xor
mov
cmpsb
sub
xlat
or
fistpl
bound
push
push
neg
jns
sbb
push
inc
pusha
mov
mov
fs
aad
ja
movsb
pushf
js
pinsrw
mov
xor
xor
xor
mov
mov
cmpsb
cmpsb
or
add
into
and
jae
lds
and
sbb
xor
ret
mov
test
or
pop
es
divb
dec
cmp
out
mov
inc
stos
push
xlat
inc
sahf
cmp
pop
mov
jl
aaa
and
jecxz
jge
push
imul
movsl
andl
sub
in
xchg
xor
adc
mov
adc
xchg
cmc
pop
cs
int3
push
pop
in
mov
mov
dec
cmc
or
aas
hlt
popf
testl
divl
mov
mov
push
inc
call
lret
outsl
fcoms
or
jl
pop
jo
mul
repz
incb
cmp
loope
jge
es
mov
mov
and
fucomip
sbb
and
adc
jo
lret
xchg
popf
push
mov
insl
cmpsl
fwait
jge
add
scas
std
or
and
cmc
adc
ss
sbb
lret
outsl
adc
stos
stos
shll
cmp
out
incl
sbb
sbb
cmp
inc
rolb
les
mov
xor
fisttps
repz
sti
pop
push
or
por
outsb
or
rcrl
fistpll
adc
int3
dec
xorb
jne
sub
mov
shll
mov
loope
lret
cmp
sarb
daa
loope
pop
xchg
jns
push
add
add
jecxz
icebp
or
xchg
cltd
arpl
mov
xor
loopne
in
test
js
jbe
pop
xchg
stos
xchg
movsl
jb
pop
lcall
das
pop
push
test
xor
cmovno
push
cmp
jmp
xchg
cmpsb
adc
insb
mov
in
xchg
inc
daa
push
stc
add
adc
enter
leave
lods
jns
add
rcrl
jns
sbb
sbb
adcl
pushf
lahf
fdivrs
pushf
lock
shll
pop
push
rorb
push
int
pop
repz
mov
mov
into
mov
push
mov
sbb
sub
lea
dec
mov
sti
daa
stos
add
outsb
scas
in
adc
cmp
lock
xchg
and
mov
insl
jnp
cmp
insb
aaa
ret
lea
cli
xor
je,pn
je
pusha
sbb
cwtl
push
js
mov
push
mov
dec
sub
fbstp
addr16
mull
scas
mov
dec
adc
cld
mov
rcll
sahf
pop
pop
scas
mov
and
cmp
inc
stos
popa
lcall
popf
in
mov
loop
mov
push
mov
inc
test
and
and
push
aad
loope
jno
and
mov
insl
adc
pop
push
lret
les
inc
mov
mov
pop
add
iret
lret
push
pushf
jge
stos
xchg
loop
xchg
xor
ficoml
js
or
gs
cli
lods
fstps
inc
fistpll
xchg
add
jne
jmp
mov
push
mov
imul
cmp
dec
or
sub
fisttpll
jb
cltd
dec
cld
xchg
xchg
push
jne
iret
lret
pop
scas
add
imul
inc
addl
and
mov
push
add
mov
fistps
test
cwtl
jbe
lods
pop
incl
mov
repz
dec
cmp
outsb
jg
xor
or
inc
mov
jb
mov
in
std
enter
dec
adc
outsb
out
cmp
and
sbb
xchg
adc
mov
or
jno
cwtl
icebp
sbb
test
fs
rclb
popf
and
xor
iretw
push
jl
or
dec
leave
inc
clc
mov
sbb
mov
jmp
push
lods
jbe
decb
add
mov
lahf
push
pop
cmpsb
jp
xchg
push
cmp
scas
das
in
jg
adc
or
ljmp
sub
out
jne
movsl
mov
daa
mov
xchg
dec
pop
subb
in
xor
test
jle
icebp
pop
into
mov
jle
daa
sub
pop
inc
inc
xchg
pushf
mov
xlat
xchg
and
clc
pop
adcl
xchg
pop
test
inc
inc
dec
pop
stos
lea
out
pusha
ret
fidivrs
push
dec
mov
push
dec
push
cmpsl
push
jne
in
pop
mov
fistps
xchg
push
xchg
push
mov
pop
dec
mov
pop
mov
rclb
jle
das
jg
fiaddl
push
leave
and
in
xor
imul
inc
out
cmp
in
ja
push
in
pop
stos
test
push
in
mov
xor
xchg
lods
jns
dec
push
mov
test
pop
ret
nop
ss
xchg
dec
pop
push
pop
bnd
dec
repz
cld
outsb
cmp
fbld
xor
loop
push
ficoms
ficoms
lods
pop
ds
jbe
fcmovnu
jne
mulb
cltd
pop
scas
imul
cmp
xlat
scas
icebp
mov
arpl
pop
mov
jno
xlat
mov
lock
divb
call
in
rorl
and
push
pop
dec
jae
and
orl
mov
xor
repnz
mov
ret
add
imull
jl
jmp
xchg
out
loop
insb
out
mov
enter
fldenv
imul
mov
jne
and
fnstsw
adc
rorb
add
jle
faddl
test
inc
into
in
dec
aas
cmp
or
fndisi(8087
fdivl
sub
loop
fs
push
es
icebp
ja
cmpsb
imul
pop
fdiv
adc
inc
insb
mov
lods
or
addl
andb
adc
jle
aam
fldl
idiv
inc
ret
js
jp
inc
jl
cwtl
lods
jle
or
inc
or
je
pusha
xchg
stos
fildl
dec
fsubl
jnp
sub
jg
and
sbb
stc
mov
imul
lods
fidivrs
xor
xchg
scas
shrl
cmp
nopl
in
xchg
jmp
cmp
xchg
push
sbb
sbb
aas
addr16
imul
jg
push
dec
xchg
inc
fcmovb
adc
push
scas
sahf
cmpsb
jp
and
push
or
or
lret
sbb
push
inc
nop
xchg
sahf
jg
dec
sbb
gs
test
aam
dec
or
lcall
rolb
bound
fistl
repz
push
outsl
enter
push
pop
mov
pop
sub
xor
inc
and
fwait
loop
pop
push
xlat
mov
pop
ret
mov
mov
cmpsb
and
test
fiaddl
and
pushf
and
fsubrs
xor
pop
adc
es
call
aaa
xchg
sbb
inc
ja
cmp
fmul
or
jae
aam
jmp
movsl
movsb
loopne
xorl
aas
push
daa
and
or
stos
imul
push
fwait
loopne
add
xor
xor
icebp
dec
add
imul
adc
idivb
test
ja
inc
xchg
rorb
loope
pop
stc
inc
mov
std
stc
outsl
scas
ja
lahf
sbb
adc
jp
dec
loopne
and
adc
inc
imul
pop
mov
loopne
fstpl
or
cmp
xchg
cmp
das
and
in
push
jl
pop
outsb
or
clc
loop
mov
jbe
int
test
jns
aaa
push
xlat
addr16
daa
jge
arpl
call
mov
push
popf
xchg
movsb
scas
aad
daa
faddl
xor
mov
bound
jb
pushf
fwait
mov
testb
or
push
jp
ficompl
jg
inc
gs
push
pushw
shl
pop
jecxz
xchg
cmpsb
dec
mov
sbb
fucomi
sbb
stos
out
sub
mov
xchg
xchg
leave
loopne
pcmpgtb
aas
pop
fwait
mov
xchg
popl
xchg
inc
iret
imull
outsl
insb
or
mov
add
or
mov
inc
mov
pop
and
inc
mov
xor
xorb
out
je
outsb
fstpl
or
dec
pop
orb
cmc
shlb
repnz
int
imul
xchg
jnp
lods
fisubl
xor
dec
mov
mov
add
fisttps
or
scas
pop
out
mov
push
cmpsl
ljmp
std
arpl
stos
mov
arpl
call
and
loop
jns
or
test
dec
mov
sbb
pop
lret
dec
mov
inc
inc
cmpsl
in
outsl
call
or
jecxz
jnp
shlb
sub
dec
xor
jnp
mov
addb
into
sub
sub
mov
jo
mov
sub
mov
ljmp
jp
lds
mov
out
xor
es
flds
cmpsb
fld
or
int3
mov
fsubrl
rol
cmp
test
ret
shr
pop
cmp
rcr
push
inc
clc
lods
insb
inc
sbb
sub
inc
pop
stos
and
inc
sub
ret
scas
jp
mov
fmull
or
lods
out
add
sub
lret
xchg
push
rol
sbb
pop
arpl
jb
mov
xor
inc
js
scas
jge
fisubrl
fidivs
stos
imul
cmpb
daa
push
mov
fadd
xchg
cmp
imul
out
or
out
mov
outsb
shlb
lea
sbbl
add
xor
daa
sub
mov
push
mov
lret
shl
fmull
jmp
or
test
mov
lret
adc
scas
in
addr16
mov
dec
mov
mov
fsubs
add
pusha
imul
xor
test
mov
or
cmp
test
lret
mov
aam
mov
push
cs
dec
add
clc
mov
or
ret
xchg
or
dec
mov
adc
imul
lock
loop
pop
push
and
cmp
cmc
rorb
cmp
lds
ds
loopne
xchg
out
inc
mov
xor
mov
pop
addr16
lods
lcall
adc
pop
test
mov
jo
mov
xor
imul
cli
scas
das
cmpsb
and
sbb
ret
fldcw
jo
leave
cmp
mov
pop
jnp
xor
push
mov
xor
jge
es
aam
pop
aam
cmc
mov
rcl
sub
and
push
fwait
push
imul
mov
sub
or
cltd
mov
sub
xor
cmp
scas
adc
ret
jl
add
mov
in
test
sahf
shlb
sahf
inc
ljmp
lods
pop
loopne
cs
add
sbb
bound
cli
test
andl
enter
cli
inc
jne
sub
or
or
pop
pop
cmpl
pop
sub
enter
in
mov
enterw
add
out
jp
mulb
lret
in
lahf
jle
sbb
dec
pop
ds
sub
mov
out
xorb
inc
insl
test
inc
insb
mov
nop
xchg
pop
jle
xchg
lret
mov
das
mov
fcmovnb
lods
test
add
movsb
int
int3
out
mov
movsb
xchg
and
xor
xchg
push
popf
sbb
js
xor
fstp
cmpsl
push
add
call
ss
mov
cmp
out
sbb
arpl
jnp
sub
cmp
jne
and
xchg
sub
pushf
loope
cld
inc
xchg
xchg
pusha
pop
mov
repz
sahf
mov
mov
loop
jmp
xchg
mov
ret
mov
jmp
inc
sbb
idivl
mov
outsl
inc
repz
jo
mov
test
or
jmp
dec
hlt
incb
push
int
outsb
and
movsl
or
add
int
cmp
sbb
xchg
and
shll
cmp
cmp
jne
mov
movsb
ljmp
lahf
push
or
sbb
mov
push
repz
sbb
lcall
sbb
pushf
jge
sbbl
push
pop
leave
outsb
jge
adc
mov
loop
jnp
cmpsl
cmc
loop
repz
jmp
aaa
cmp
insb
jge
iret
xchg
int3
out
cmpb
or
addr16
mov
mov
mov
into
in
fimull
in
and
fcompp
xor
std
insl
adc
shrb
std
cmpsl
jne
cwtl
mov
fimull
pop
pop
mov
ficomps
rol
in
mov
push
das
rol
into
adc
sub
pop
fildl
fistl
popf
mov
jbe
jge
adc
int
jae
insl
inc
mov
or
cmp
jecxz
push
adc
dec
dec
or
add
insl
insb
enter
push
ds
loopne
adc
fsubs
gs
mov
push
loope
xor
mov
mov
daa
inc
or
daa
adc
nop
jno
mov
mov
dec
rorl
push
add
sbb
lea
mov
sub
push
xor
pop
mov
xor
js
xchg
lds
mov
sbb
inc
shlb
mov
add
xor
cmp
aaa
cmp
fidivs
loope
pop
rorb
jl
mov
shlb
mov
push
mov
mov
aam
xchg
aam
inc
lds
jp
or
testl
xor
xchg
push
test
pop
jae
inc
and
cmp
xchg
inc
add
xor
stc
addr16
mov
inc
shlb
add
cli
mov
pop
jp
divl
mov
mov
add
cmp
xor
mov
out
cmpsb
cmpsl
sub
push
aaa
ftst
jbe
clc
cmpsl
xlat
insb
xchg
pop
pop
in
inc
mov
loop
push
int3
jb
fsubs
push
add
cmp
jmp
dec
xor
in
adc
test
dec
xchg
add
out
ja
negl
xchg
es
inc
cmc
push
inc
sti
jp
sbb
push
addl
scas
xor
inc
pop
fisttpll
js
add
xor
dec
in
jns
outsb
loope
aad
sbb
loopne
mov
movsb
sub
into
jg
pushf
mov
lock
imul
push
rorb
cmpsb
cltd
fstps
sub
andl
not
dec
popa
out
and
xchg
bound
sbb
mov
mov
cmp
push
and
xor
icebp
or
out
xorl
adc
into
mov
jmp
test
push
test
pushf
and
push
ds
and
jae
or
push
xchg
sbb
dec
jecxz
mov
std
or
mov
movsl
das
pop
add
cmp
adc
scas
cmp
adc
repnz
hlt
sbb
gs
xchg
mov
dec
fwait
bound
dec
lods
mov
call
hlt
loope
xor
or
or
push
xchg
mov
and
sbb
imul
add
adc
jae
pop
xor
ljmp
stos
in
dec
jbe
fidivrl
cmp
insl
or
xlat
es
jb
dec
movsb
inc
mov
ret
js
test
jle
arpl
xor
in
out
loop
dec
jne
mov
push
adc
mov
mov
push
cmp
mulps
in
xor
jne
inc
lret
cltd
or
retw
fs
bound
call
or
xchg
shr
mov
imul
mov
inc
push
out
jmp
mov
dec
push
mov
push
cmp
mov
test
fisubrl
daa
or
lret
and
loop
and
mov
fdivrl
or
dec
xor
jno
and
cltd
aam
jnp
test
adc
mov
xchg
xor
and
cmp
lret
push
popf
cwtl
pop
int
hlt
lds
fsts
inc
sahf
fistpll
mov
add
mov
or
push
lahf
dec
addr16
cmpsl
stos
inc
sbb
int3
cmp
xchg
cmpsb
loop
stc
daa
pop
mov
cmp
and
test
mov
cmp
sbb
in
mov
imul
inc
lods
inc
pop
in
adc
mov
repz
xlat
inc
xchg
fisubrl
jbe
outsb
pop
jns
add
jns
loope
sub
loope
out
mov
mov
add
ja
cmc
dec
shrl
mov
lret
add
pop
sbb
je
scas
dec
lret
jnp
sub
arpl
idivb
mov
das
cwtl
mov
pushf
jo
jge
nop
iret
inc
pop
into
sti
dec
push
cmp
mov
movl
mov
aas
subl
push
in
sub
and
sbb
aad
addr16
repz
push
fdivl
jns
jbe
mov
jbe
dec
xchg
subl
icebp
loope
adc
int3
mov
adc
roll
stos
pop
adc
push
imul
mov
nop
in
fwait
mov
sub
ss
jnp
loopne
pop
idiv
insb
jecxz
pop
xlat
or
test
sbbb
inc
xchg
mov
jecxz
enter
scas
and
repnz
rorl
fisubrl
out
jecxz
mov
xlat
mov
push
cmp
sti
mov
jp
fcompl
ret
iret
push
loop
jbe
and
addl
cmp
mov
fdivrl
shr
inc
push
adc
push
adc
or
test
cmp
sbb
test
mov
fmull
push
sarb
test
and
stos
push
pop
nop
test
ret
and
xor
cmpsb
shlb
fwait
adc
pop
xor
or
lret
subl
hlt
or
dec
and
ja
ljmp
or
dec
pop
int3
and
iret
push
fimuls
sti
adc
xchg
arpl
je
int3
xchg
scas
cmp
cmp
mov
xchg
mov
xchg
rcll
shll
aas
xlat
xor
push
out
and
adc
lret
stos
lock
push
jle
lcall
jb
iret
repz
sbb
sahf
pop
insb
mov
add
jb
xchg
and
cld
sub
mov
jl
out
sub
bswap
pop
lahf
lret
mov
or
movsl
test
adc
or
or
repnz
popf
push
push
dec
jo
xchg
push
inc
or
sahf
aad
sti
xlat
gs
cmp
or
lock
lods
pop
cmp
in
movsb
ljmp
xor
add
xchg
push
pop
jg
test
xor
scas
jle
imul
pusha
adc
pushf
jge
sbb
mov
sbb
leave
xor
rorl
lock
dec
aad
sbb
inc
cmp
aad
adc
push
je
lahf
ds
cs
popa
sub
jne
jb
push
mov
mov
jge
add
and
dec
xchg
in
xchg
repnz
dec
fidivl
mov
les
cmp
fmuls
mov
in
inc
cld
fisubl
mov
dec
xor
cmc
sub
push
or
sbb
mov
lret
popa
pop
inc
mov
mov
pop
lret
inc
orb
add
ljmp
cmp
push
xchg
ss
and
shl
dec
pop
dec
lock
loope
pushf
loopne
ret
inc
in
adc
pop
and
outsl
mov
out
lds
pop
sub
mov
pop
jl
iret
je
jge
push
cmc
mov
mov
aam
xchg
jge
mov
pushf
adc
call
insl
test
fstl
je
jbe
dec
xchg
xor
and
ficompl
cmpsb
repz
lea
mov
and
data16
ret
lret
scas
dec
sbb
fistps
mov
xor
cwtl
aas
pop
lcall
repnz
imul
imul
sbbl
testl
push
jb
mov
pop
xchg
inc
inc
add
subl
jno
stc
mov
xlat
shr
mov
push
aas
fs
lods
out
icebp
pop
mov
cmp
fwait
jmp
fistpll
mov
jmp
push
pop
cmp
not
clc
dec
adc
pop
xchg
ss
fistl
jnp
mov
pop
out
pop
mov
fs
add
pop
clc
sbb
push
daa
xor
mov
mov
xchg
fldl
jae
movsl
mov
or
pop
outsl
xchg
xchg
fs
adc
sbb
jl
or
repz
daa
enter
fistpl
add
ret
jne
into
shll
pop
mov
xor
rcl
test
xchg
jo
aas
adc
xor
push
mov
lea
pop
ret
arpl
iret
mov
push
sbb
arpl
ror
xor
fs
fistps
xchg
stos
mov
mov
insl
icebp
insl
aam
cmp
xor
and
int3
mov
lods
int
cmp
mov
inc
jns
daa
andl
push
mov
mov
pop
ja
pop
jno
pop
mov
pop
cmpsb
xor
push
and
nop
mov
fisubl
imulb
lret
negb
xor
push
push
jge
movsl
sub
cmp
ljmp
shr
icebp
shlb
test
test
pop
test
mov
arpl
xchg
fucomp
fldenv
stc
xchg
ficoms
outsb
ljmp
adc
jl
test
jbe
arpl
pop
jmp
shll
iret
insb
xchg
mov
fimull
in
arpl
mov
push
adc
icebp
shlb
xchg
push
xchg
jb
xor
cltd
jae
std
or
popa
dec
popf
cmp
iret
inc
mov
cmc
mov
mov
pop
mov
aas
data16
or
ds
aaa
out
sbb
aaa
sti
push
and
push
dec
mov
inc
incl
mov
notb
test
inc
clc
ja
call
mov
repnz
jp
dec
sub
stos
mov
dec
adc
std
pop
cmpsl
xchg
pop
test
outsl
imul
pop
rcrb
cld
xor
cmp
popf
fists
in
sti
xchg
add
jae
stos
stos
sarl
cmpsb
hlt
sbb
jmp
paddusw
cmp
lret
orl
sbb
add
add
scas
jmp
sarl
jae
push
daa
adc
mov
or
push
inc
ret
fldcw
adc
into
pop
addb
fwait
adc
rcrl
sbb
in
aaa
movsb
push
repnz
mov
or
addr16
imul
jns
sahf
insb
mov
sbb
incl
popa
push
lock
push
add
lock
or
mov
ds
mov
mov
sub
icebp
fdivrs
and
mov
iret
or
adc
into
cmp
mov
or
xchg
mov
ret
sub
test
ljmp
inc
mov
adc
addr16
adc
add
push
jmp
or
iret
sahf
ret
outsl
adc
ja
jmp
arpl
jl
pop
add
add
cmp
cld
fistpll
sub
jl
inc
mov
jge
int3
movl
inc
dec
xor
inc
pop
in
std
xor
aad
sub
decl
xchg
das
fiaddl
clc
sahf
shll
pop
leave
loopne
jb
stc
fs
fsubs
mov
pop
mov
movsb
test
and
and
jg
sbb
jp
dec
jg
dec
test
xchg
shrl
ret
push
flds
inc
and
cli
jmp
aam
or
xchg
adc
push
ljmp
int
insb
dec
jl
sbbb
fimuls
dec
inc
aam
je
adc
mov
mov
inc
xchg
pop
push
stos
mov
dec
fs
cmpsl
dec
bound
fimull
testb
enter
das
pop
mov
data16
subb
aam
ret
push
inc
or
dec
inc
pop
sub
gs
push
xchg
lods
imul
roll
lock
mov
enter
or
mov
sub
pop
into
insl
mov
imul
sbb
les
ss
stos
hlt
xchg
shrl
push
not
mov
sub
insb
inc
cmp
popf
jo
repz
and
dec
sbb
mov
mov
inc
adc
dec
add
jle
dec
fcomi
push
fdivs
cmp
mov
mov
loopne
inc
roll
sub
es
repnz
imul
mov
pop
pop
stos
fisubrs
push
fiadds
adc
in
pushf
sahf
mov
test
out
mov
mov
std
jp
enter
inc
mov
lcall
leave
inc
imull
scas
and
or
addr16
ljmp
js
xor
out
jle
lcall
xchg
cmpsl
lds
and
push
push
mov
in
cmp
stos
mov
inc
cmp
cmpb
aas
out
jge
xor
dec
xchg
mov
jne
fidivrs
fisubrl
pop
addr16
push
bound
stos
mov
jp
push
addr16
jmp
arpl
test
inc
or
add
xor
int3
ret
mov
jo
pop
out
loopne
fimuls
gs
mov
pop
call
inc
test
inc
pop
movsw
outsb
pop
int3
mov
fldenv
std
cmp
sbb
push
outsb
arpl
add
stc
sub
sub
into
addr16
jne
inc
test
loope
sbb
inc
sbb
jle
push
in
pop
scas
lret
jmp
aas
jp
xchg
shll
xchg
jo
cs
rclb
adc
out
mov
test
inc
inc
add
popa
push
call
popf
test
push
in
cmc
and
mov
cmp
jae
movhps
popa
movsb
push
xchg
roll
out
fimull
ss
and
xchg
add
jns
inc
cmpsb
xor
das
jge
xchg
nop
out
adc
cmp
cmpsb
pop
imul
fs
xor
pop
xor
adc
fstpl
pop
dec
pushf
xchg
mov
adc
adc
xor
sahf
cmpsl
sti
data16
sbbl
mov
ljmp
out
adc
pop
sbb
sbb
out
insl
jl
int3
push
fdivs
and
invd
cltd
cmp
mov
dec
jmp
jp
iret
in
daa
and
lea
ja
sbb
jge
in
aas
sub
or
mov
mov
or
jb
and
nop
inc
aam
push
lods
sahf
xor
sbb
ds
out
inc
lods
push
test
xorl
rolb
xchg
add
cmpsb
cmp
add
dec
ret
xor
loop
sbb
imul
clc
mov
sub
mov
out
and
xchg
fisttpl
loope
test
jg
pop
xchg
sar
stc
jge
popf
frstor
mov
pop
xchg
add
mov
ljmp
ret
or
mov
ffree
test
aam
je
dec
mov
enter
push
and
rcll
pop
mov
ljmp
push
pop
sub
scas
aad
jmp
pop
sub
out
jle
js
push
mov
lea
in
int
sub
dec
sbbl
ret
movsl
cmp
mov
mov
out
xchg
fcoml
ficoml
lods
jmp
add
arpl
rorb
cmp
jns
mov
enter
cmpsb
loopne
mov
jle
or
inc
or
sbb
leave
xor
lcall
fldt
cmp
out
stos
int3
or
inc
or
fs
pop
mov
outsb
and
inc
lock
mov
and
cmp
test
dec
xor
lock
pop
fistpl
in
arpl
or
jnp
xor
scas
mov
cli
mov
mov
and
and
push
cld
sbbl
outsb
pushf
sbb
lds
adc
jo
sub
dec
cmpsb
sbb
aad
insb
mov
in
mov
cmp
xor
movsl
mov
loop
sti
imul
xor
and
negl
adc
out
or
xor
outsl
pop
std
adc
lods
inc
inc
cmp
xchg
jo
push
pop
or
add
push
sbb
dec
lds
mov
push
mov
sub
inc
jns
or
inc
sub
pushf
rolb
mov
scas
jl
rcll
stos
mov
movntq
dec
sub
pop
gs
inc
pop
adc
mov
sar
inc
ficoms
mov
mov
mov
cmpsb
and
cli
loop
xchg
ja
push
test
inc
movsb
dec
mov
lock
cmc
xchg
xchg
shlb
cltd
addr16
sub
push
mov
jnp
inc
cs
insl
inc
push
cmovp
cmpsb
stos
inc
or
cmpsb
mov
mov
inc
iret
pushf
jns
idiv
cmc
cmp
gs
pop
cmp
sub
enter
loopne
fiaddl
push
repnz
gs
cld
frstor
jo
sub
jo
dec
enter
outsl
pop
pop
dec
cmp
mov
xchg
sub
jae
sub
xlat
aad
mov
dec
inc
jae
dec
jo
les
outsl
xchg
or
sarl
mov
push
lods
out
mov
out
push
ds
and
call
outsb
lods
inc
mov
sub
rcrl
rcr
mov
xchg
add
add
mov
adc
bound
push
inc
jge
test
cmp
or
rorl
rcr
out
jp
shl
imul
pushf
cmp
mov
add
cmpps
cmp
jecxz
insb
xor
xchg
movsl
cmp
std
mov
mov
daa
xchg
inc
pop
xor
and
call
pop
leave
and
clc
lea
scas
mov
mov
cmp
std
push
and
adc
and
xchg
push
sub
data16
ss
jp
pcmpeqb
dec
mov
jnp
aaa
jle
sub
push
or
and
ret
cmp
or
fidivs
cmpsb
xchg
add
jne
push
dec
mov
jnp
loop
pop
outsb
pop
insb
cmpsl
dec
cwtl
das
xchg
jl
pop
adc
repnz
xor
mov
int3
dec
jmp
dec
adc
add
adc
mov
xchg
jmp
dec
out
rcll
call
dec
scas
inc
inc
lods
pop
jo
cmp
cmp
push
sbb
xor
inc
sbb
leave
mov
inc
sub
sbb
adc
xor
xchg
add
inc
jb
mov
xor
testl
cwtl
fistps
sbb
nop
add
repz
popf
gs
pop
outsb
xchg
or
mov
sub
inc
loop
push
das
cmp
adc
popf
es
sub
mov
and
push
aaa
adc
lcall
or
lret
inc
or
jmp
and
mov
movsl
sarb
cmc
pop
push
add
cld
push
aaa
xchg
into
add
rcrl
sbb
cmp
xchg
pop
push
enter
call
clc
inc
cmp
push
sbb
lods
add
add
lock
add
jle
sub
lret
jle
outsl
xor
jns
inc
test
or
mov
jmp
mov
or
cmp
jae
jae
mov
repnz
movsb
fdivr
arpl
imul
mov
outsl
pop
lcall
lds
ja
pop
faddl
mov
pop
mov
test
idivb
mov
ss
orb
add
cmpsl
mov
arpl
jle
out
lods
int3
mov
loop
mov
xchg
pop
cmpsb
stos
loop
les
mov
and
cvtps2pi
push
inc
xor
sub
jl
jmp
mov
push
mov
leave
enter
pop
addb
mov
mov
fisttpl
jb
xchg
push
cmp
xor
sub
fldcw
and
xchg
xor
sbb
loop
pop
mov
or
loopne
dec
cmp
cli
subl
inc
loop
imul
icebp
sbb
jo
sbb
inc
shlb
pusha
cmp
and
pop
ret
clc
adc
sub
shrb
xchg
enter
or
lods
pop
shll
dec
pop
popa
or
lds
pop
ljmp
and
add
add
cltd
cmp
sub
xchg
pop
jnp
nop
outsb
je
jp
jae
pop
sahf
mov
shrl
test
xchg
sbb
rcr
sahf
mov
sbb
loop
push
inc
or
stos
fadd
test
xchg
sti
xchg
add
xchg
xor
ss
and
pop
mov
in
adc
jne
addr16
hlt
or
dec
sbb
insb
cmpsb
icebp
cmp
bound
and
or
testl
orl
dec
ds
daa
in
push
mov
sub
pop
stc
cmpsl
xor
fisubrs
xor
mov
or
mov
movsb
sahf
push
outsl
sarb
xor
pop
adc
or
inc
lret
std
hlt
adc
ljmp
xor
jo
call
call
pop
xchg
adc
sub
push
cmpsb
xchg
fimull
inc
xor
fisubrl
mov
dec
das
jbe
lcall
popf
and
push
fcompl
aaa
lret
pop
jb
or
mov
push
imul
or
push
or
cli
mov
inc
inc
ss
out
xor
xlat
push
or
test
push
cmp
pop
jecxz
mov
push
push
jmp
lds
rorl
sbb
cmp
mov
cmp
shrl
es
ljmp
mov
mov
pop
lds
jecxz
out
dec
mov
adc
fistpl
inc
mov
pop
or
cmpsb
inc
bound
add
sahf
xchg
lods
pop
cmc
call
pop
sahf
mov
lahf
or
test
gs
shrl
fnsave
adc
cli
addr16
fistps
out
sbb
or
jle
jno
sbb
sarl
iret
sbb
pop
insl
loopne
cs
out
lcall
shrb
jb
push
sub
pop
adc
push
nopl
bound
ret
mov
in
icebp
fldl
mov
push
shl
and
push
out
push
mov
int3
pushf
dec
pop
push
repnz
bound
pop
add
iret
dec
mov
fwait
xor
into
jecxz
xor
pop
or
fldl
and
in
pop
movsl
loopne
fs
mov
ret
add
popa
sbb
dec
in
ja
aas
jl
std
shlb
fnstenv
in
and
dec
push
adc
cltd
and
mov
adc
xor
jp
cmp
in
cld
sub
fs
int
sub
jp
sub
fstl
add
sub
mov
jg
mov
sub
sbb
hlt
xor
jge
pusha
adc
fscale
dec
fs
insl
push
sbb
dec
into
xrelease
xor
test
pop
pop
mov
dec
mov
adc
aaa
int3
mov
xchg
xchg
int
xor
ds
push
jp
pop
rorb
mov
add
test
jbe
call
sarl
xchg
xchg
adc
in
pop
in
hlt
fsubrl
leave
scas
popa
xlat
test
lds
xchg
rcrb
lahf
and
cmpsb
into
out
aam
cs
ds
fcoms
or
xor
jl
pop
or
lret
inc
pushf
push
leave
xchg
or
inc
xchg
jp
std
mov
fcmovu
les
scas
fcomi
adc
mov
adc
cmp
mov
ret
sub
outsb
or
je
xor
push
or
fwait
ret
pop
in
ja
hlt
das
adc
aad
mov
fsubrs
jns
jo
or
nop
mov
add
hlt
sub
ja
stos
shr
mov
pop
rorb
out
sub
outsb
sbb
popf
or
mov
jo
cmc
jmp
ds
std
adc
and
stc
xchg
lahf
movsb
rcrb
outsb
inc
jmp
in
rcrb
andb
jp
cltd
aaa
movsl
add
or
pop
je
pop
sbb
pop
xchg
insb
ret
fmulp
les
daa
mov
sub
jecxz
push
aam
out
mov
pop
addr16
cmpsb
and
jnp
and
adc
push
jmp
fmull
repz
cltd
repnz
lahf
mov
jnp
dec
jno
test
push
jle
lods
out
inc
pop
or
or
pop
pop
out
mov
push
adc
ret
and
pusha
cwtl
or
negb
push
lret
xor
daa
sub
push
je
pop
cltd
or
add
mov
pop
out
add
out
jns
inc
add
mov
cmp
cwtl
stc
movsl
jbe
xchg
fwait
sbb
out
les
int
adc
push
mulb
test
dec
sahf
mov
add
lods
nop
das
sti
and
in
out
cmp
lds
pop
inc
into
add
add
lahf
jmp
stos
inc
mov
repz
lret
insl
in
jns
inc
in
pop
test
and
in
pusha
repnz
jno
sub
dec
push
mov
jo
ja
inc
and
into
xchg
and
jno
sub
dec
aad
add
xchg
sbb
ds
lods
ja
jmp
clc
movsb
or
xlat
xor
adc
push
xchg
stc
fidivl
shl
test
popf
or
push
jmp
or
lock
mov
push
scas
stos
xchg
mov
addr16
int
adcb
ficoml
daa
push
leave
push
insb
or
dec
daa
adcb
cmp
mov
pop
inc
inc
mov
outsb
dec
jbe
movsl
adc
inc
dec
sbb
lret
cmp
leave
cld
sti
les
mov
imul
push
and
clc
leave
xchg
inc
out
pop
mov
pop
int
data16
mov
xchg
pop
push
dec
mov
popa
xchg
sbb
mov
dec
fld
pop
adc
imul
incl
inc
or
popf
inc
add
dec
push
rcl
repnz
jge
cs
adc
arpl
cld
lea
cmp
pop
mov
out
adc
insb
in
loop
cmpsl
push
std
sarl
rorl
jno
lods
test
push
mov
or
dec
xchg
jb
hlt
out
stos
cmp
js
movsl
sbb
jle
repz
jl
mov
and
and
push
jno
xchg
mov
pushw
push
sbb
shlb
fs
cmpsb
jecxz
push
imul
jp
lods
pop
stos
lret
adc
mov
and
stos
sbb
jg
hlt
jmp
add
cs
les
fisttpll
data16
push
pop
in
mov
pop
cmpsl
loop
into
mov
nop
push
fidivrl
aas
es
or
mov
imul
int
andl
shll
inc
icebp
mov
pop
and
lret
lret
fmul
or
xchg
inc
int
aad
xor
cmp
jno
pop
mov
pop
js
inc
in
mov
mov
and
faddl
sbb
popl
add
cmpl
aas
ss
int3
push
pop
shlb
pop
push
stc
xchg
out
scas
test
cmpb
xor
adc
inc
int3
shlb
sbb
shl
ds
mov
aad
cmp
dec
or
jnp
adc
notb
fs
loope
mov
mov
mov
enter
push
xlat
mov
xor
dec
rcr
ret
insb
das
test
cwtl
add
pushl
jmp
aam
pop
sti
or
imul
jmp
xchg
pop
push
data16
rcll
imul
mov
xor
jae
das
cmc
jno
and
pop
mov
and
mov
mov
inc
jl
outsb
out
adc
or
lahf
push
cmpsb
imul
faddl
movsb
mov
mov
testl
lret
mov
adc
xorb
fcoml
enter
pop
push
xor
fwait
sbb
push
pop
dec
sub
mov
movsl
sub
or
mov
hlt
xlat
pushf
sbb
inc
push
cmp
mov
jl
cmp
cmp
shlb
xor
test
jge
outsb
pop
jns
add
pop
int
sete
dec
cmc
push
fwait
push
adc
mov
andb
sub
jl
sahf
icebp
ds
ret
aaa
xchg
iret
int
into
stos
arpl
lcall
aaa
in
and
mov
in
int
out
xchg
cmc
sbb
xchg
add
out
imul
dec
dec
inc
cld
stos
imul
and
pop
jl
pop
ficomps
jle
pop
aad
ljmp
jle
mov
jmp
xchg
testl
pushf
les
mov
push
add
dec
pusha
nop
push
lea
sbb
xlat
xor
incl
push
add
dec
pop
fisttpll
jbe
dec
enter
xor
mov
insl
stos
in
pop
dec
daa
dec
pop
add
and
int
push
and
sbb
fwait
add
cmpsb
jbe
fsubrs
xchg
shl
and
pop
mov
sbb
push
xchg
cmp
xrelease
rcr
mov
out
rorl
mov
pop
xchg
cmp
arpl
jg
push
mov
in
repz
movsl
loope,pt
dec
adc
mov
and
rolb
or
cmpsl
push
jae
scas
and
mov
and
test
pop
xchg
adc
cmp
cld
mov
or
shll
lds
mov
pinsrw
mov
rcll
in
dec
mov
add
popa
mov
mov
sbb
mov
cmp
add
cmp
cmp
je
loope
xor
cld
pop
mov
call
sbb
jecxz
rorb
adc
ja
iret
dec
int3
stos
lock
push
inc
mov
jecxz
pusha
mov
scas
dec
sbb
fildll
fptan
aaa
or
push
adc
jnp
cmp
add
imul
enter
adcl
sbb
shll
pop
add
lcall
push
int3
mov
dec
push
shll
mov
add
sbb
call
jnp
add
or
and
inc
mov
push
fs
lock
mov
andb
xchg
jns
jg
sbb
pop
ds
call
adc
jnp
mov
push
in
mov
bound
pop
sub
sub
xchg
les
push
iret
cmpsb
mov
aas
lret
fsubrl
ret
cmpsb
jb
xor
lods
fsubrs
aad
popf
mov
xor
push
in
adc
cwtl
fcoml
mov
jg
js
leave
pop
clc
repnz
inc
pop
lock
das
push
jle
pop
push
xchg
pop
pop
cli
jg
add
add
sbb
sbb
add
ret
pop
adc
aam
sbb
sbb
sbb
aaa
out
cmp
icebp
push
xor
outsb
insb
push
or
push
mov
inc
cmpsl
pop
pop
repnz
in
lods
bound
rolb
add
mov
fwait
mov
inc
test
into
stos
xchg
push
push
lock
call
adc
js
pushf
lock
insb
gs
cmp
arpl
loope
sarl
ljmp
dec
or
mov
popf
cmc
mov
sbb
or
cltd
fwait
sub
xchg
cmp
stos
and
mov
dec
adc
or
mov
inc
push
mov
fldt
xchg
loopne
repnz
mov
sub
lahf
xchg
mov
xchg
cmp
mov
pop
test
out
js
into
divl
sbb
call
aas
std
or
ljmp
mov
movsb
push
aaa
into
dec
lcall
mov
pop
mov
mov
sub
or
mov
nop
lahf
dec
mov
subb
int
sub
sub
push
mov
dec
push
xchg
inc
std
jle
addl
and
or
add
std
pop
sbb
repz
cltd
jo
xor
jno
pop
mov
lds
repnz
in
xchg
outsb
loope
lods
or
inc
mov
sahf
clc
cwtl
mov
fistps
xorl
enter
xchg
cmp
sub
sbb
jb
xor
lcall
les
jo
xlat
mov
xor
popa
adc
mov
out
sbb
push
cmc
aaa
xor
jp
adc
xlat
aad
mov
enter
jbe
inc
pop
lcall
cmpsb
in
inc
sbb
popf
push
or
out
and
sti
test
fsubrl
inc
daa
ljmp
or
std
arpl
outsb
and
rcrl
loop
push
cli
mov
ret
mov
imul
jmp
popa
arpl
xchg
jp
xchg
inc
aaa
mov
bound
cmp
cmp
jae
aas
and
fadds
std
jl
push
jb
insl
fdivrs
adc
stos
int
cmc
jg
ljmp
stc
pop
fsubs
arpl
jns
jp
push
out
data16
cld
mov
sbb
mov
mov
test
dec
mov
add
rclb
cs
data16
fistpll
jne
shlb
ljmp
bound
cmc
push
jne
ficoml
mov
xchg
aaa
jle
mov
and
daa
push
inc
cmp
loope
pop
insl
stos
push
lret
fiadds
fiadds
add
push
pop
push
scas
or
push
repz
mov
jmp
sub
pop
rcr
xchg
lods
mov
pusha
ljmp
sete
pop
mov
andl
dec
loop
gs
ds
inc
cmpsb
movsb
push
enter
pop
mov
insb
mov
aam
sbb
and
fisttpll
popa
sbb
inc
test
and
and
fdivr
cmp
xor
sbb
out
add
jle
andb
mov
and
mov
test
xor
testb
sarl
adc
test
js
test
enter
out
and
adc
popf
mov
sahf
xor
scas
repnz
mov
sbb
cmp
xchg
mov
xor
or
pop
dec
inc
fisttps
xchg
cmpsb
xchg
or
mov
bswap
jge
sbb
mov
push
dec
mov
js
mov
test
jo
xchg
jno
jbe
and
push
andl
js
dec
adc
jne
lret
movsb
iret
leave
decb
fildll
cmpb
add
hlt
cli
stos
dec
les
loop
in
adc
push
mov
jno
sub
push
xchg
mov
sbb
pop
mov
rorb
pushf
pop
mov
sub
jmp
sub
pop
cmp
xchg
das
scas
mov
pop
ret
mov
push
js
xor
push
pop
mov
cld
popa
cmp
repnz
dec
je
lret
dec
aad
xor
fwait
movsb
stc
cltd
sbb
scas
dec
cmc
cmp
push
iret
xlat
nop
cmc
lods
sub
jmp
jge
scas
cwtl
jmp
mov
push
cmp
push
icebp
test
in
insl
js
push
cmpsb
int3
xor
sub
mov
xchg
in
inc
push
cmp
push
pop
jge
cmp
adc
fldt
lock
arpl
and
cs
and
int
loopne
dec
sbb
jns
jle
inc
jnp
ror
pop
insb
mov
fsubp
gs
or
mov
sti
xor
mov
push
adc
push
or
push
lds
ret
mov
orb
adc
and
repnz
aas
xchg
sbbl
adc
jge
scas
dec
out
cmpsb
push
and
add
dec
loop
scas
push
xlat
stos
addr16
js
xchg
dec
or
mov
leave
mov
mov
or
sub
std
xor
mov
xchg
inc
push
ljmp
sbb
cmp
add
dec
ds
enter
or
es
mov
scas
pop
imul
pusha
in
jmp
mov
mov
aad
dec
mov
aas
cli
sbb
inc
fmull
ds
std
es
pushl
jno
in
jne
scas
aad
jle
imul
dec
cmp
dec
bound
mov
shll
fwait
cmp
mov
jo
mov
push
dec
adc
stc
add
in
pop
xchg
add
ret
sub
mov
cli
leave
in
out
pop
stos
pop
aaa
cmpsl
ficompl
jl
jns
fsubrl
popa
jbe
leave
adc
mov
mov
inc
pusha
adc
add
jge
push
jle
pop
pusha
push
mov
ljmp
adc
mov
sbb
in
cmp
andb
cltd
xor
add
add
cmp
push
jne
mov
pushf
cmpsl
out
fstl
scas
clc
add
rcl
jns
jle
fs
arpl
add
je
xchg
ja
cmp
rolb
test
hlt
stc
mov
dec
dec
ds
loopne
mov
stos
and
cs
leave
inc
xor
xchg
cmp
adc
test
push
mov
fstpl
mov
add
xchg
lea
cmc
jns
mov
jbe
int3
bound
and
in
xchg
pop
push
mov
int
cli
xchg
add
cwtl
sub
inc
adcb
push
nop
push
enter
mov
jg
mov
sub
mov
mov
xchg
test
jecxz
xchg
test
jno
adc
sbb
or
dec
cli
les
scas
rolb
movsb
ds
sbb
mov
jmp
push
or
mov
xor
jno
test
bnd
loope
add
sbb
enter
movhps
mov
loopne
leave
jno
push
xor
jle
adc
out
ljmp
jo
or
mov
cmp
scas
ja
pop
xorb
mov
inc
cmp
iret
test
lods
mov
pushf
insl
rolb
cmp
int3
push
mov
add
push
sarb
and
daa
push
fisubl
adc
mov
lds
out
mov
sbb
jmp
scas
bound
mov
mov
sbb
inc
pusha
icebp
dec
lcall
sbb
mov
xchg
push
adc
push
arpl
ret
push
xchg
cmpsl
fbstp
mov
mov
mov
stos
inc
or
and
fs
lods
xchg
xchg
xchg
aas
mov
rclb
jle
jnp
sub
push
fistpll
inc
mov
ss
ret
pop
lock
jg
adc
lock
and
mov
mov
inc
repnz
pop
push
fcomp
add
adc
push
jnp
cmc
fildl
jno
je
push
cli
pop
imulb
jge
xchg
xchg
rorb
jnp
cli
out
mov
cltd
jbe
iret
jo
mov
sbb
out
jbe
cwtl
pop
je
scas
sahf
test
xchg
add
leave
pusha
jmp
sbb
xor
pop
cmp
jne
xchg
mov
add
das
andb
pop
test
sti
dec
push
movsl
inc
xor
out
mov
mov
mov
add
xchg
jae
xchg
xchg
js
or
lea
jbe
stos
push
sbb
sbb
push
inc
pushf
push
sbb
sub
push
je
call
sbb
dec
mov
loop
ret
xor
enter
dec
inc
pop
jp
es
pop
mov
lcall
and
sbb
sbb
sub
mov
push
inc
in
cmp
in
inc
andl
test
xchg
push
or
hlt
cmp
push
push
mov
aam
addl
dec
and
fistl
insb
sbb
cmp
outsb
or
es
cmp
cld
jl
outsl
mov
jecxz
inc
mov
push
dec
sahf
sub
stos
sub
sbb
mov
push
xchg
cs
fldl
pop
loope
xchg
add
pop
mov
int3
dec
in
xchg
std
mov
notl
movsb
cltd
mov
data16
loopne
mov
les
out
movsb
stos
or
dec
out
push
sub
cmp
adc
outsb
cmpsl
shlb
adc
jp
into
dec
js
push
dec
inc
or
and
push
mov
dec
inc
jecxz
mov
dec
pop
int3
popa
into
cmp
xchg
aaa
pop
or
insb
inc
xchg
inc
ret
mov
dec
and
popf
add
loope
jl
jne
cmp
sbb
cli
sbb
inc
jae
addr16
fld
iret
jns
mov
cmp
filds
hlt
sbb
cli
cwtl
incl
pop
orb
cld
outsl
push
fcmovne
cmp
lcall
pop
and
mov
pusha
mov
in
mov
in
mov
stos
jb
xor
lds
nop
adc
pusha
sbb
mov
sub
inc
xlat
sbb
push
mov
data16
inc
adc
lods
or
fstps
sub
or
adc
in
iret
xchg
nop
dec
xor
and
pop
mov
pop
jp
sti
dec
mov
notl
jo
jne
cmp
dec
xor
sub
push
je
lods
fisubrl
loope
loopne
mov
jge
rcl
jb
orb
lods
ficompl
imul
cld
shll
or
mov
sbb
mov
fsub
mov
sbb
add
mov
dec
add
cld
es
add
inc
mov
push
rorb
mov
lcall
imul
int
jle
ss
addb
xor
xchg
mov
les
or
les
enter
lods
mov
dec
push
jmp
bound
pop
adc
xchg
fadds
shrl
mov
ljmp
xor
sbb
rol
jp
lahf
xchg
jnp
push
outsb
lock
push
and
push
push
mov
lods
testb
jns
cmpsb
rol
xchg
pop
pop
and
insb
cmc
gs
push
fwait
inc
lods
loop
jne
xchg
dec
cwtl
cltd
jle
cmp
ret
in
nop
shrb
out
pop
mov
jp
xor
imul
xor
push
sar
jecxz
cld
sub
mov
jle
or
ds
push
arpl
in
imulb
adc
mov
inc
lods
ret
mov
add
sbb
mov
test
pop
jmp
mov
inc
sub
sbb
addr16
shrl
xchg
add
cmp
pusha
jns
fwait
mov
jg
repnz
sarl
cwtl
and
push
sub
pop
push
out
popf
push
cmp
fsubrs
dec
adc
mov
orb
scas
mov
lret
cwtl
push
pop
add
mov
dec
lea
pop
sub
cmovbe
in
cmpsl
sti
clc
cmc
dec
fdivrl
cmp
mov
sub
mov
or
gs
push
adc
pop
push
ffreep
sbbb
push
repz
sub
sub
xchg
in
xchg
sub
repnz
xchg
pop
pop
jg
inc
lods
in
movsl
insl
flds
mov
fidivrl
and
adc
shlb
ss
ss
add
out
xchg
push
jbe
push
add
fldt
enter
adc
mov
scas
addr16
adc
xchg
ret
pop
sbb
jbe
dec
ror
pop
inc
loopne
mov
cwtl
sub
stos
mov
pop
dec
movsb
mov
mov
push
mov
stc
mov
cmp
lret
sub
daa
push
iret
xor
shlb
or
in
xlat
push
or
sarl
and
popa
jecxz
stos
lock
fnstsw
inc
pop
or
mov
test
mov
sbb
xor
jne
iret
or
push
ret
insb
int3
lahf
scas
jb
test
pop
xor
or
mov
movsb
loope
mov
pop
cmp
lods
jp
test
inc
js
cmp
xchg
adc
test
std
mov
sbb
push
jmp
rorl
jne
mov
mov
xchg
cmp
ret
cltd
insb
cmp
lods
jb
jp
retw
nop
stos
nop
pop
mov
sar
mov
xchg
mov
fwait
ror
inc
jnp
xchg
in
xor
scas
nop
sarl
mov
jbe
movsl
inc
insl
xchg
loop
pop
leave
inc
pop
add
out
fiaddl
aad
xor
pop
sub
pop
cmpsl
jle
repz
mov
sbbl
xor
jbe
push
cmp
jge
cmc
imul
lret
pop
fsubrs
enter
rol
add
cmp
jns
mov
insl
pop
loopne
inc
sub
dec
sub
arpl
mov
xchg
inc
test
divb
mov
push
mov
imul
push
add
mov
or
inc
pushf
out
test
ljmp
pop
rolb
lret
filds
leave
push
cli
rcr
fs
imul
dec
ret
sti
outsl
fnstenv
outsb
fisubs
lds
sub
rolb
xchg
outsl
jecxz
xor
outsl
push
add
mov
scas
daa
jnp
dec
inc
cmp
shlb
out
xchg
and
sub
test
fwait
inc
sbb
push
lcall
add
sub
lds
mov
push
shll
dec
movsb
jno
lods
lock
sub
shll
jp
negl
add
cmp
inc
pushf
fadd
js
jp
xor
add
mov
movsb
add
aaa
das
mov
test
out
shrb
sbb
cld
ficompl
mov
lret
sub
and
fcmovne
stc
sub
imul
xor
cwtl
sti
adc
mov
mov
outsl
stos
inc
sbb
js
lea
stc
testl
dec
cmp
mov
push
mov
loop
loope
mov
sahf
push
jae
scas
and
sar
movsl
or
mov
in
inc
mov
push
lret
icebp
movzww
lock
pop
sub
push
lahf
out
push
and
xchg
popa
or
out
iret
test
in
cmp
sub
clc
cs
mov
jp
in
mov
aad
cwtl
xor
shlb
outsl
mov
aaa
pop
ja
iret
loopne
sbbl
sub
in
jnp
or
xchg
jbe
jp
sbb
push
je
mov
mov
hlt
data16
or
pop
jo
and
pushf
add
imul
jne
or
dec
cmp
xorb
inc
xor
pop
ds
insb
jmp
mov
fiadds
imul
jle
fs
pop
out
bound
lcall
pop
sub
movsb
xor
add
fsub
push
mov
imulb
negl
test
iret
imul
daa
jbe
lret
jl
xor
dec
flds
ljmp
jno
xchg
inc
push
add
sti
test
mov
out
cld
repnz
call
sbb
arpl
or
rol
mov
ret
adc
mov
inc
add
mov
test
cli
inc
cmc
adc
arpl
out
inc
aam
lahf
xchg
xor
repnz
lahf
shl
out
mov
fdivrs
xor
add
jbe
push
xchg
nop
jl
xchg
adc
xchg
push
and
xor
repz
subb
adc
add
sbb
lcall
sbb
lock
stc
and
push
enter
sahf
rclb
sub
push
cli
popa
mov
mov
shl
out
push
lahf
sahf
or
lods
cs
push
xlat
dec
mov
jmp
mov
mov
pmaxsw
std
in
ds
aaa
pop
scas
pop
ficoml
inc
scas
sbb
dec
bound
xchg
insb
mov
movsl
iret
fmul
mov
leave
fldcw
add
pushf
jle
jge
or
or
pop
ljmp
test
scas
jne
adc
jbe
rcr
sti
xchg
stos
cmpl
sbb
cmc
xorl
mov
xor
shl
fldenv
push
sub
inc
xor
pop
les
mov
test
and
cmp
das
outsb
aaa
mov
shlb
xchg
xor
mov
addr16
pop
movsl
jg
cmp
cmp
push
outsb
or
lds
ret
mov
enter
insb
mov
sub
inc
sub
in
gs
add
mov
xlat
push
jge
gs
arpl
xchg
out
push
sub
mov
or
lds
pusha
dec
push
mov
xchg
pushf
mov
cli
lahf
cld
or
loopne,pt
negl
mov
call
add
andl
pop
push
sbb
mov
pop
and
in
push
icebp
pop
pop
popa
dec
push
je
push
and
mov
pusha
mov
or
les
imul
movb
ficoml
dec
outsb
mov
loope
mov
adc
jmp
xor
cmp
mov
es
mov
xchg
xchg
inc
out
inc
iret
mov
jg
mov
mov
inc
sub
add
or
push
sub
cwtl
ljmp
outsb
mov
test
fdivrp
mov
dec
mov
pop
fwait
push
imul
pop
out
lahf
sbb
jge
mov
sbb
dec
jae
popf
pushl
xor
fnstenv
rolb
xchg
pop
push
cli
add
in
mov
sub
push
or
loop
aaa
jno
and
xor
xchg
mov
out
push
test
jno
mov
pop
mov
out
mov
stos
inc
pop
mov
push
imul
imul
push
lea
adc
inc
sahf
mov
adc
add
mov
sub
cmp
lret
dec
aad
test
test
hlt
or
add
lahf
iret
or
aaa
leave
dec
xlat
jge
push
loopne
inc
popl
add
adc
stos
mov
jle
inc
lea
pop
mov
orb
cmc
pusha
rcrb
jb
les
scas
mov
scas
es
dec
sub
int
lret
cli
mov
stos
push
les
xchg
clc
repz
outsb
in
hlt
jno
fdivl
xchg
rorb
inc
lods
lcall
loope
jmp
pop
push
cmpsl
mov
pop
out
loop
lds
iret
loopne
jl
sahf
dec
shrl
xchg
or
shrl
mov
push
push
in
sti
outsl
jbe
sti
cmp
gs
dec
jae
jecxz
jl
mov
adc
sarl
cmp
mov
mov
mov
or
mov
adc
and
aad
mov
xor
add
jnp
fdivrs
xorb
or
lds
fs
dec
call
push
xor
fnsave
in
xchg
fidivrl
sub
test
test
mov
ret
mov
scas
cmp
sub
pop
jp
jae
mov
inc
repnz
dec
pop
adc
jp
mov
pusha
ss
aaa
es
mov
mov
jg
adc
out
sahf
xor
mov
jle
movsb
mov
stos
inc
nop
pop
mov
or
push
pop
pop
dec
mov
push
out
push
lcall
sbb
mov
xchg
rol
jl
jbe
jmp
adc
mov
movsb
push
push
lret
pop
jecxz
xchg
adc
fdivrl
sbb
es
xchg
mov
or
cmpsl
mov
fisttpll
fs
fwait
push
subl
jl
jmp
or
jle
mov
mov
enter
in
mov
cli
sub
or
jmp
je
jne
into
xchg
jmp
xchg
test
dec
mov
in
mov
nop
fcmovnbe
psubusb
jle
mov
push
push
mov
xchg
cltd
jb
xchg
jl
add
shl
fildl
andb
or
js
clc
xchg
adcb
jp
out
hlt
adc
mov
xchg
dec
imulb
sbb
and
in
add
adcb
mov
mov
dec
int
dec
mov
xabort
in
and
xchg
add
and
lahf
xchg
adc
pop
out
test
hlt
xlat
inc
out
jmp
cs
pop
aaa
xchg
xor
and
enter
sub
icebp
push
mov
jae
mov
pop
enter
jmp
enter
loopne
ja
mov
xor
pushf
cmc
and
aas
scas
nop
arpl
inc
mov
sbb
mov
add
shl
out
xor
addr16
push
jns
out
lods
stos
aas
push
adc
jmp
adc
xchg
mov
dec
gs
push
sub
dec
ljmp
push
and
test
xchg
mov
mov
stos
ljmp
lods
or
int3
sbb
clc
jle
inc
xchg
scas
adc
lea
les
push
inc
cmc
mov
jno
and
sbb
mov
sar
outsb
xor
aam
iret
push
flds
shr
sbb
mov
test
mov
rcll
movb
add
test
popf
and
loope
mov
push
lods
adc
stos
pusha
adcb
out
lcall
sbb
jo
lcall
sub
outsb
or
sub
sub
mov
inc
enter
fnstsw
data16
lods
inc
negb
dec
adc
insb
dec
sbb
push
jb
aad
add
int3
js
hlt
daa
addr16
cmpl
mov
fisubl
cmpsb
adc
cmp
add
cld
sahf
xchg
jb
and
cmpsb
imul
mov
xchg
xchg
lods
cmp
insl
push
ja
mov
movsl
mov
aaa
xchg
lea
jge
jnp
test
xlat
xchg
andl
xor
mov
lcall
pop
sbb
add
mov
cltd
jns
or
je
in
adc
fdivrp
arpl
movsb
cmp
outsl
xchg
lret
add
inc
loop
test
test
or
aad
out
sbb
cltd
jecxz
outsl
mov
aad
mov
or
mov
mov
cmpsb
popa
inc
fimuls
cmp
test
sub
sub
mov
roll
sti
or
addr16
pop
sbb
push
fisubrl
and
call
jecxz
adc
je
xor
pop
add
cli
pop
imul
movsb
leave
addl
dec
enter
out
pop
dec
cmp
adc
aam
dec
scas
insl
jnp
jmp
mov
cmp
ffreep
or
imul
fcoml
push
cmpsb
icebp
sub
icebp
push
test
les
cltd
dec
mov
lods
mov
popa
leave
add
pop
cmp
dec
cmc
int3
test
jno
stos
sub
lcall
or
jle
xor
pop
pop
dec
inc
push
mov
ror
lock
and
fdivs
push
pop
jo
cmc
test
mov
inc
test
test
and
xrelease
pop
push
mov
mov
test
dec
jb
mov
mov
lds
testl
insl
push
je
push
pop
adc
xor
sbb
aaa
mov
mov
inc
xchg
lea
cmc
sbb
lock
jne
cmp
sbb
subl
pushf
scas
stos
gs
pop
insl
jbe
push
mov
dec
pop
pop
xchg
mov
pop
cwtl
cmc
sub
in
les
add
add
adc
jns
mov
pop
jne
sbb
adc
mov
ret
loopne
jne
fcompl
pop
in
orb
lock
rolb
xlat
int3
ljmp
mov
mov
mov
and
insb
sub
lock
lock
mov
and
js
sbb
pop
push
xor
sub
pusha
sbb
xchg
lds
mov
mov
out
imul
and
sahf
xor
pop
gs
dec
stos
pop
fdivr
shl
fs
mov
mov
cltd
cmp
outsb
dec
and
xchg
inc
inc
daa
cmp
mov
les
fbstp
or
and
jl
lds
mov
das
outsb
xor
jg
fwait
outsb
mov
outsb
and
mov
lcall
cli
mov
mov
lock
sub
fwait
jno
sub
loop
in
xchg
lret
or
pop
lods
aad
enter
sbb
push
mulb
lcall
fstpl
or
dec
int3
mov
mov
aas
les
das
adc
xlat
scas
cmpl
int3
mov
add
cld
movsl
mov
pusha
xchg
mov
lods
loope
mov
shll
mov
adc
pop
pop
bound
mov
push
sub
mov
add
pop
test
les
dec
lret
sbb
bound
push
mov
sbb
sbb
in
xchg
lock
push
dec
fists
dec
mov
ljmp
xchg
repnz
filds
enter
sbbl
sti
jns
jle
sub
cmp
adc
iret
dec
cs
fcmovu
movsl
mov
adc
ljmp
daa
in
inc
jg
mov
lods
pop
mov
cld
cmp
sbb
push
fisttps
push
ja
xor
dec
lahf
cmp
jb
stc
or
sahf
fisubl
fistpl
mov
add
out
adc
cld
shlb
ror
cmpb
sbb
sub
fsubr
mov
push
icebp
and
jecxz
lock
sub
loope
cmc
into
dec
xor
add
pop
sub
sbb
inc
lods
addr16
pop
adc
popf
inc
dec
or
in
mov
lahf
loopne
xor
fisubs
mull
mulb
jne
push
sbb
mov
xchg
inc
sbb
push
dec
sub
jne
or
push
add
sbb
fwait
adc
and
xor
mov
mov
add
jge
ror
dec
je
stc
popa
or
jmp
addb
cld
push
pop
in
mov
mov
jo
jb
add
sti
mov
lcall
dec
fidivrl
sbb
aaa
pushf
gs
mov
imul
xchg
aam
inc
std
xchg
sbb
pop
sti
jmp
sbb
adc
hlt
movsl
jne
pop
in
jb
push
add
dec
or
cwtl
test
sbb
jne
or
test
imul
mov
aad
sbb
add
mov
repz
fisubl
jne
mov
sub
popf
xor
pop
pop
cmp
sub
adcl
outsb
in
pushf
pushf
mov
lods
push
ret
hlt
mov
dec
fstpl
dec
lcall
mov
adc
inc
lea
fbstp
cmpl
inc
jne
mov
dec
ficoml
aas
popf
jb
addr16
jle
into
movq
aaa
adcb
andl
or
adc
jecxz
testl
inc
es
xchg
xchg
hlt
jo
xchg
int3
push
cmpsl
iret
jmp
jae
je
xor
adc
or
cmp
mov
inc
xor
ss
push
xchg
ret
pop
jle
ss
push
inc
sbb
lret
or
arpl
popa
xchg
hlt
cltd
cmp
mov
out
cmp
mov
in
xchg
addr16
push
pushf
leave
dec
pushf
call
jno
xchg
aad
dec
mov
xchg
nop
popa
les
pop
out
xor
pop
mov
add
mov
sbb
dec
xchg
sbb
cltd
loop
lock
mov
mov
mov
jne
jno
daa
stos
movsl
xchg
ret
loopne
sbb
je
cmp
sub
data16
mov
sub
aaa
mov
ds
mov
pop
into
fs
and
push
push
pop
hlt
leave
add
lock
inc
arpl
imul
sbb
cmp
add
aaa
in
inc
cmp
in
mov
mov
push
adc
fwait
or
xchg
call
outsl
inc
pop
popa
sbb
out
jno
iret
pop
gs
xchg
mov
imull
or
sbb
mov
push
aam
mov
ds
push
iret
cmpsl
xchg
shlb
push
into
mov
xchg
pop
stos
subb
shr
cmp
orl
bound
jg
adc
ljmp
or
shrl
loopne
js
rcrl
outsb
mov
clc
dec
subb
cwtl
mov
sahf
test
xchg
fcoms
das
cmp
fsubs
push
adc
jmp
in
and
cmp
mov
fstl
das
jmp
insb
add
cmp
test
jb
xchg
pop
mov
test
into
pop
test
dec
iret
jnp
push
je
insl
pusha
or
insl
jns
jbe
add
mov
clc
pop
pusha
dec
jge
cmp
fsubrp
xor
test
pop
aaa
jae
mov
adc
xchg
xchg
stos
std
jnp
jae
sbb
inc
les
ja
gs
sub
leave
lods
fstl
mov
jne
jne
xchg
cmp
nop
fnstsw
inc
inc
xchg
clc
sbb
cs
sti
or
aam
cli
mov
xchg
adc
sub
sub
lahf
popa
in
pushf
jo
movsl
mov
cmp
je
cmp
adcb
inc
or
pop
iret
add
int
xor
lods
popa
ret
jne
insl
fists
lods
jmp
add
insl
cltd
scas
movsb
std
cmp
xor
and
pop
adc
jbe
mov
pop
xchg
jle
xchg
push
mov
fsub
mov
or
ds
arpl
gs
popl
fcomps
sub
cmp
jge
mov
xor
mov
xchg
addl
sbb
shr
jnp
into
fwait
pop
mov
test
inc
lcall
xchg
xor
mov
addr16
cmp
in
into
lret
scas
stos
lods
mov
aaa
fisttpl
cmp
push
fcompl
sbb
popf
mov
or
imul
cmp
outsl
dec
mov
xor
cmp
repnz
movsb
add
or
cmp
xchg
shr
cmpsl
outsb
lds
stos
jno
clc
mov
adcl
cmp
arpl
sub
jbe
push
inc
jno
add
add
rcrb
iret
in
cmpsb
aas
shlb
mov
stos
test
mov
xor
sahf
gs
push
fsubs
fcmovne
xor
insl
iret
sbb
jg
xchg
repnz
lods
cmp
inc
or
ret
and
xor
jp
ret
sub
mov
fs
inc
xchg
aas
call
dec
xchg
dec
add
xchg
repnz
push
les
loope
fistpll
xchg
jp
in
jecxz
or
aad
add
int3
cmpsl
mov
dec
aam
sub
cmp
mov
cld
sahf
stos
jne
dec
pop
cwtl
jp
repz
sbb
les
pop
daa
loop
aad
mov
out
pop
inc
mov
insl
and
dec
jb
sub
movsl
pop
push
or
pop
es
outsb
push
insl
fnstsw
pushf
add
mov
pushf
sbb
out
pushf
jbe
stos
cmc
je
xchg
cmpsb
repz
fcoms
mov
sti
js
mov
jmp
das
adc
ffree
test
pop
push
mov
ret
rol
js
jae
lahf
push
or
mov
add
push
fisubs
insb
xchg
and
hlt
sbb
mov
xlat
cmc
lcall
lea
push
out
mov
adc
fsubr
push
rol
sub
out
jbe
pop
stos
pop
cmp
dec
sbbl
and
rcl
les
ja
pushl
out
xchg
adc
cltd
add
cmp
insb
std
adc
pop
sub
mov
push
lock
imul
movsl
leave
pushl
ficoms
cwtl
mov
cltd
into
push
jmp
adc
in
fisubrs
lock
fildll
gs
inc
inc
pop
cmpsb
push
movsl
shr
sbbl
xorb
or
test
lods
mov
add
sub
xor
test
repz
dec
daa
out
repnz
mov
xchg
xchg
fwait
add
mov
mull
shll
call
repnz
in
cld
lret
in
mov
pop
in
cmc
and
int3
loopne
dec
xchg
push
sar
add
push
sbb
addr16
in
js
jmp
sbb
add
adc
mov
mov
lock
rcll
lcall
jno
pop
add
mov
movl
js
sbb
dec
jbe
sbb
push
enter
xchg
add
jnp
aam
mov
inc
jge
cmp
mov
fistl
bound
insl
aam
leave
mov
repnz
out
in
mov
sub
faddl
test
out
dec
and
outsl
inc
outsb
sarl
stc
sbb
add
xor
lea
fsubp
sub
mov
pop
std
dec
add
es
lret
mov
out
sub
test
sub
out
lahf
outsl
insb
xor
or
or
ret
ljmp
test
mov
add
pusha
cltd
icebp
out
lods
or
cmpb
cmpsl
test
pop
add
pushf
xor
pushf
sub
xchg
jle
into
dec
fisubl
push
push
pop
sub
mov
sbb
mov
ljmp
fwait
jp
adc
repz
sbb
subl
and
aaa
dec
jp
movhps
mov
cmpsb
sarb
stos
push
sbb
sbbl
push
pop
iret
and
pop
xor
jmp
jg
out
lret
add
cmp
fdivr
push
or
pop
dec
mov
out
ret
mov
aaa
push
arpl
jns
add
scas
cmp
out
in
sub
and
dec
ret
nop
adc
mov
add
mov
stos
xchg
fwait
pop
add
xchg
cmp
enter
iret
shlb
negl
push
stos
jno
out
jns
out
mov
ja
push
test
mov
lds
test
dec
mov
daa
xchg
pop
hlt
data16
cmp
out
shll
jmp
pop
cmpl
inc
stos
dec
enter
push
xlat
fs
stos
ljmp
dec
ret
dec
dec
cmpsb
push
lea
hlt
sbb
stos
mov
aas
std
adc
mov
sub
pop
popf
mov
fisubs
ret
stos
xchg
jg
sbb
adcb
lret
and
lock
cmpsb
xchg
int
pop
cli
or
push
xlat
inc
pop
std
repz
int3
dec
outsl
hlt
sub
lret
in
add
js
or
mov
out
sbb
xchg
into
rcl
jne
lds
or
rorb
cmp
sub
imul
adc
js
data16
xchg
into
shll
and
inc
push
mov
adc
mov
mov
add
or
pop
jno
jecxz
adc
xor
push
test
in
mov
shll
popf
fsubs
jecxz
popf
xor
test
jb
push
clc
sbb
cmp
sub
xchg
sbb
cmp
pop
cmpsb
hlt
sbb
jmp
push
pushf
jmp
repz
stos
mov
mov
std
popf
mov
sti
fistl
mov
xchg
pop
jno
roll
inc
add
mov
movsl
lcall
sub
iret
push
ds
in
sti
mov
dec
and
aam
mov
jp
sbb
enter
mov
push
pop
in
dec
jecxz
inc
inc
jb
cmp
outsb
popf
xchg
jmp
dec
dec
dec
fisttpl
int3
outsb
aam
addl
je
sbb
mov
outsl
loop
mov
add
cmp
mov
add
repz
inc
leave
jmp
decl
jge
aaa
rcrb
movsl
loope
mov
data16
mov
push
scas
sbb
pushf
pop
jmp
lds
fwait
xor
xchg
sbb
loop
mov
add
cmp
call
mov
lcall
jmp
and
push
push
and
mov
mov
call
push
dec
sbb
subl
jmp
xchg
mov
jle
lret
cmp
aaa
dec
jnp
cltd
and
sbbl
add
sbb
and
outsl
scas
mov
cwtl
xor
cmpxchg
sbb
cld
loopne
outsl
pop
outsb
je
push
jmp
or
or
mov
sbb
fdecstp
push
xchg
inc
imull
ror
xor
test
push
test
or
add
cmpsl
cmp
adc
sbb
fs
inc
test
pop
fldl
sbb
adc
push
adc
jp
repz
mov
aaa
pop
in
fcomps
sub
shlb
add
xor
mov
mov
inc
mov
sbb
dec
fidivs
push
cmp
jno
fisttpl
push
xor
jg
lcall
mov
daa
cmp
pop
or
sub
rolb
lcall
int3
cmp
jno
mov
fisubl
mov
outsl
cmc
shlb
cmpps
out
es
es
mov
int3
int
outsl
pop
mov
in
push
ficoms
ds
fidivl
fwait
sbb
xbegin
mov
mov
inc
push
mov
rcll
mov
jl
data16
fldl
xor
xchg
aaa
jg
sub
xchg
pop
cmp
std
lret
push
cmp
movsl
xchg
adc
and
ret
cmpb
icebp
test
in
xor
adc
xor
sub
icebp
test
lcall
pop
fisttpll
push
insl
fs
loop
aaa
fbstp
inc
roll
sarl
aaa
ljmp
xchg
xor
iret
test
jne
sahf
xor
cli
and
rorl
or
lret
xchg
xchg
jns
rcrb
ds
xlat
std
shl
and
jg
and
shrb
sub
loopne
xchg
pop
xchg
mov
adc
cmpb
push
andb
imul
mov
sub
sub
fwait
andb
aad
xchg
movl
mov
ficompl
pop
jg
pop
xchg
jbe
jo,pn
imul
aas
gs
xchg
mov
xorl
call
mov
pop
pop
popa
jle
aam
inc
out
mov
jg
leave
in
andb
and
sbb
in
lahf
mov
stos
cli
flds
jo
mov
lea
jne
push
add
mov
dec
sahf
mov
aaa
test
test
cmp
into
popa
shll
mov
xor
cmp
mov
mov
insb
adc
std
movl
popf
or
pop
jge
cwtl
clc
pushf
fadd
or
ds
icebp
xchg
ret
clc
or
or
add
pop
scas
std
pop
sbb
sbb
jne
mov
aad
sti
jg
xchg
inc
mov
mov
popf
adc
dec
push
out
adc
lret
sbb
and
add
arpl
jl
out
iret
lsl
pushf
mov
pop
mov
rcll
sbb
mov
jns
outsb
jae
std
jg
push
test
in
inc
sbb
xchg
mov
push
mov
xchg
mov
xor
add
sub
adc
pop
xchg
sub
cmp
xchg
push
into
cmpsb
cltd
aas
imul
imul
pop
fucomip
dec
add
inc
in
add
jbe
inc
sbb
sub
out
cmp
cmp
xchg
jmp
ret
cwtl
pop
sti
ret
out
and
xchg
divb
mov
adc
jg
lcall
push
mulb
mov
stos
push
push
xor
scas
sbb
push
mov
mov
adc
jmp
fsubl
out
inc
add
sbb
jmp
int3
pushf
jb
jle
shl
rclb
sahf
dec
push
mov
push
or
inc
inc
cltd
push
mov
mov
cmpsb
jecxz
pop
jno
push
push
xor
sbb
pusha
test
sub
out
in
sub
sub
mov
sbbl
sti
cmc
bnd
in
popa
dec
vpcmpgtw
nop
pop
pop
or
popf
dec
sar
jb
jmp
jnp
mov
enter
test
xchg
xchg
into
jb
aas
xchg
iret
pop
test
cmp
loope
adc
push
shll
dec
xor
shlb
mov
sub
xorb
add
xor
cmp
ss
jecxz
push
mov
cmp
out
fwait
ret
cwtl
cwtl
jns
jnp
icebp
sbb
jl
loop
push
sbb
fstpl
add
jle
inc
shlb
adc
loopne
shl
loopne
push
jnp
dec
andl
pop
setns
cmpb
mov
incl
sub
add
out
mov
pop
and
cmpsl
sbb
sbb
daa
xchg
pop
shlb
cmp
stos
arpl
mov
outsl
test
sub
sbb
mov
movsl
lock
adc
jns
fcmovnb
cmp
adc
mov
pop
leave
hlt
fisubs
sbbb
or
test
loop
pop
out
or
and
cmpsl
nop
adc
repz
test
sbb
movsb
jno
pop
daa
aam
lret
notb
fisubrs
sti
test
pop
pop
sbb
movsl
sub
fcom
sub
jnp
lcall
addr16
bound
lcall
adc
and
dec
lret
out
inc
fsub
rcll
stos
outsl
test
cld
or
repz
fsubs
mov
mov
jb
popf
mov
int3
pop
ret
push
ror
out
pop
popf
mov
gs
cmp
scas
mov
aaa
xor
xchg
dec
sub
sbb
jo
sbb
in
into
aaa
pop
pop
mov
mov
mov
js
push
jo
insb
and
sbbl
cmc
outsb
and
clc
popf
out
mov
clc
mov
xor
mov
mov
test
and
fstps
xor
adc
lret
notb
or
fs
pusha
ja
repz
ljmp
aad
sarl
mov
jl
adc
notb
inc
pop
lock
and
nop
or
das
rol
dec
xchg
add
testl
jae
or
cmp
shl
and
ficoml
or
push
cli
inc
cmp
jp
jmp
inc
sbb
and
mov
mov
and
cmp
xchg
mov
inc
es
or
sbb
mov
jnp
sub
xor
mov
lret
fsts
cs
int
add
lods
lock
ficompl
xchg
imul
mov
pop
rcll
xchg
movsl
sbb
jns
dec
ss
shrb
out
pushl
scas
jnp
mov
scas
xor
int
sbb
xchg
pusha
fisubl
xor
fidivrl
xchg
les
pop
inc
sub
inc
fsubl
sahf
sbb
movsb
fstp
and
mov
push
mov
loopne
push
mov
test
mov
les
hlt
or
flds
and
ja
movsl
add
psrad
or
xchg
sbb
bound
insb
and
cli
sub
inc
out
xor
insl
out
ret
fidivrs
adc
sbb
and
jg
insl
fwait
lahf
sub
sub
mov
dec
pop
aaa
inc
sub
jne
stos
leave
lods
jne
pop
in
lret
shrl
jb
cli
imul
popa
icebp
popf
ja
orl
xlat
scas
and
pop
jp
jg
repnz
in
and
jmp
dec
push
fadd
jne
adc
negl
cmp
cwtl
data16
lea
add
test
lret
aaa
ror
mov
ret
pop
pop
lcall
mov
ficomps
mov
mov
jno
xor
jb
sbb
js
daa
lcall
sti
fucomip
pop
mov
jl
out
icebp
inc
add
sbb
idivb
dec
and
std
pushf
dec
enter
xor
xchg
scas
mov
sbb
in
mov
cmpsl
add
jmp
out
in
adc
and
xchg
lods
pop
mov
fmull
mov
add
out
insb
in
fldl
mov
movsb
rcl
repnz
test
adc
sub
cmp
arpl
imul
out
cmp
push
jne
in
rolb
inc
mov
rolb
fidivs
lea
cld
fstps
pop
dec
popf
hlt
dec
mov
test
push
dec
sets
fsubrl
sub
sbb
dec
mov
dec
insl
aaa
and
mov
dec
inc
in
sbb
push
rcrl
in
dec
loope
test
jp
in
popf
subl
out
dec
dec
cmpsb
ja
fmul
ljmp
push
add
xchg
stc
mov
int3
repz
adc
mov
push
or
das
pop
cmpl
shl
lret
sahf
out
int
pop
sbb
pop
in
clc
inc
and
mov
xlat
jbe
sbb
xchg
iret
inc
xor
inc
call
shr
aaa
mov
test
cmp
mov
cmp
fcompl
push
daa
add
inc
mov
xchg
jae
xchg
cmpsl
cmp
xor
pop
lea
inc
cld
or
lcall
jo
sbb
in
pop
call
sub
in
lret
inc
mov
aaa
lret
pop
mov
aad
mov
adc
hlt
mov
inc
fcomi
push
pop
mov
cli
call
fildl
repz
add
call
jp
insl
sarl
jae
push
xor
jb
xchg
ret
outsl
xchg
insb
push
call
or
jmp
xchg
loopne
pushf
ljmp
inc
mov
pop
push
popa
xchg
push
push
sbb
mov
add
xchg
fwait
xchg
into
int3
sbb
arpl
push
adc
ret
mov
aam
popa
xor
ja
adc
out
mov
scas
or
cltd
jbe
jns
lret
daa
push
repz
int3
mov
push
cmp
lea
mov
cmc
clc
inc
adc
pop
or
lcall
sbbb
dec
test
xchg
fisttpll
push
leave
shll
mov
ret
fidivs
adc
push
push
adc
mov
out
int3
jl
test
push
das
shlb
inc
aaa
shr
je
in
sbb
cwtl
andl
pop
and
or
mov
imul
xor
rol
xrelease
lret
outsb
mov
aas
mov
test
divb
shrb
mov
xchg
push
in
push
call
and
or
inc
int3
jns
sub
pop
pop
sbb
pop
mov
sti
ficoms
adc
push
pop
aam
jl
jbe
mov
jp
data16
jmp
into
in
outsb
pop
or
inc
pop
mov
mov
mov
out
sub
fwait
push
xor
js
andl
cld
enter
mov
repnz
iret
ficoms
jb
xorb
int3
jge
notl
mov
jge
lods
mov
mov
das
push
pop
jnp
mov
call
and
mov
jmp
rcll
push
add
scas
std
jmp
add
neg
jmp
repz
mov
jno
iret
adc
inc
jns
pop
iret
gs
jmp
inc
push
jns
movsb
push
adc
pushl
adc
mov
xchg
repnz
mov
test
add
sub
mov
scas
gs
sbb
lods
jecxz
xchg
fldenv
and
test
mov
in
or
inc
pop
lea
add
jl
cmp
fwait
stos
xchg
roll
fmull
lods
pop
gs
test
aas
sub
fisttpll
clc
pmulhuw
mov
daa
mov
add
jecxz
jge
pop
cmpsl
mov
adc
xor
add
xchg
jne
cmp
rcrb
and
sub
divb
flds
scas
mov
loope
outsl
ret
xor
sbb
out
cmp
out
xchg
aad
mov
call
imul
jmp
cld
iret
rcrb
in
pop
aad
popf
or
cld
enter
inc
fistpll
je
push
pop
pop
xchg
xlat
mov
ss
shll
sub
push
mov
and
mov
mov
push
dec
sbb
add
jl
push
shll
mov
sti
pop
xchg
ret
icebp
sbb
xchg
lods
cmpsl
movsb
mov
or
dec
dec
rclb
bnd
xchg
push
add
cltd
movsl
mov
fs
cld
out
and
push
mov
dec
or
push
jo
lcall
cmp
jo
es
sub
adc
sub
pop
orl
adc
bound
and
push
test
xor
mov
cld
sbb
mov
adc
adc
aad
xorl
inc
ljmp
call
pop
cltd
xchg
cmp
jl
mov
push
inc
dec
mov
in
lock
lock
sub
sbb
or
ror
daa
push
insl
std
andw
ss
stos
mov
and
dec
dec
and
sub
in
orl
sbb
pop
sbb
add
push
jmp
or
fsubrs
stos
clc
dec
adcb
ret
pop
lahf
xor
adcb
jnp
sub
cmp
push
aad
push
ret
inc
pop
aad
pop
fidivrl
or
add
jo
cmp
repz
stos
mov
sub
movsb
shlb
leave
stc
xchg
mov
xchg
icebp
and
in
push
arpl
mov
xchg
sub
dec
inc
mov
or
pop
sub
dec
dec
insl
imul
sbb
pop
in
mov
pop
mov
xlat
roll
sbb
mov
insl
test
push
std
test
mov
dec
adc
sub
addr16
in
icebp
jno
adc
sub
jg
sbb
adc
push
pop
cmpb
mov
adc
adc
imul
mov
and
add
jp
and
pop
jo
fdivr
fs
push
jmp
jge
fmuls
faddl
divl
mov
movsbl
pop
jp
aaa
enter
xchg
xor
ror
call
fisubs
sub
xchg
xchg
adc
imul
push
mov
jecxz
mov
into
aad
movsb
negl
sub
ljmp
push
in
cmp
icebp
mov
out
mov
adc
pop
cmpsb
lcall
and
test
mov
nop
push
pop
inc
add
xchg
out
and
mov
jg
scas
in
xchg
rolb
cmpsl
mov
lock
dec
pop
mov
push
push
test
cmp
cmp
inc
test
cmp
add
mov
dec
mov
test
std
das
adc
cmp
pop
lea
xlat
add
pushf
sub
sar
mov
ljmp
push
cmp
dec
shrl
or
shll
inc
outsb
cmp
fs
xor
jle
mov
lahf
popa
inc
push
push
sub
adc
mov
pop
inc
pop
shll
sub
mov
mov
sbb
repz
std
cs
pop
rcrb
popa
jbe
push
lcall
outsl
mov
bound
lds
jp
adc
les
mov
jae
cmpsl
xor
or
or
adc
pop
lock
popa
xor
fwait
cmp
inc
iret
mov
pusha
fldenv
mov
push
jge
ret
adc
test
cmpsl
sbb
mov
push
outsl
aam
push
int3
push
stc
push
in
and
sub
dec
pop
es
leave
add
in
lods
icebp
jl
in
dec
jae
scas
sbb
pop
cwtl
mov
xchg
push
jno
jo
sahf
push
push
xchg
xchg
loop
movsl
fs
dec
push
mov
out
inc
aaa
loop
lock
jge
lods
rclb
in
iret
inc
mov
or
lock
pop
sti
fs
lea
adc
jp
in
sub
dec
test
dec
pop
dec
xor
mov
ja
fiadds
xchg
cs
nop
jno
ret
lea
pop
sub
daa
dec
push
into
cmp
in
xchg
sub
jmp
sub
inc
pop
lods
fwait
bound
lock
imul
cmp
sub
ja
in
inc
push
jns
daa
scas
pop
adc
adc
jne
mov
in
rcll
mov
push
pop
fwait
mov
xor
cmp
popf
xchg
daa
xlat
lods
ret
jo
lock
imul
xlat
in
push
dec
ret
outsl
dec
cmp
sub
dec
mov
fmull
cld
push
fs
enter
shrb
and
pusha
into
sti
fisubl
or
dec
iret
mov
sbbl
pop
addr16
stos
dec
xchg
fdiv
inc
aad
inc
mov
sbb
and
cmpsb
mov
add
out
push
std
mov
call
mov
mov
cli
enter
xor
xchg
dec
jns
scas
scas
push
mov
push
sbb
mov
ret
mov
push
mov
adc
inc
dec
dec
inc
aad
pop
mov
pop
cmc
loopne
imul
nop
cmc
divb
mov
sbb
mov
xchg
pop
mov
inc
sbb
jp
clc
adc
jecxz
call
loopne
sbb
dec
xor
push
test
stos
sbb
xchg
pushf
cltd
int
xchg
stos
popa
cmc
mov
rolb
sbb
adc
fcomps
lea
mov
out
mov
jl
push
sarl
inc
mov
stos
fidivl
into
cs
es
loop
sbb
pop
fsubrl
cwtl
add
mov
and
jo
jne
cmpsl
dec
add
std
pop
xor
sub
mov
fmuls
jno
mov
sbb
xchg
push
loopne
push
ja
sbb
add
lock
pop
stos
mov
out
pop
in
enter
mov
lahf
cmp
add
and
pushf
mov
lods
pop
insl
mov
push
fistpll
push
scas
out
scas
out
adc
aaa
pop
scas
xchg
push
cltd
popl
aaa
out
sahf
jnp
sbb
jge
movsl
xchg
lods
adc
or
xchg
int3
addl
or
dec
sbb
fdivrl
cwtl
fs
sbb
rcrb
pop
mov
test
rolb
pop
repnz
call
cld
xor
cld
mov
shrb
mov
lahf
icebp
and
push
iret
jbe
ja
jp
ljmp
mov
out
adc
inc
pop
cmc
sub
aaa
in
adc
jae
inc
xchg
test
mov
rcrl
popa
sub
adc
int
je
push
jae
jmp
dec
or
divl
insb
call
popa
jns
push
inc
mov
and
inc
push
sub
lcall
mov
push
jp
adc
jl
mov
pushf
add
sub
pop
push
notb
push
jb
cmpsb
mov
shr
mov
xor
or
test
es
in
push
enter
cmpl
mov
xchg
cmp
and
xchg
sbb
jno
movsb
cltd
inc
and
cmpsb
call
jmp
imul
lock
test
mov
xchg
mov
xor
mov
aam
daa
jg
stc
insb
inc
jmp
jle
fs
dec
xchg
std
scas
lock
pop
jae
lret
imul
test
mov
shrb
inc
lock
jecxz
or
mov
mov
rcr
inc
in
add
in
pop
fldcw
xor
inc
mov
les
mov
cmp
ss
push
dec
or
sahf
insb
jb
fcmovbe
pop
dec
xchg
jnp
dec
jmp
dec
ret
ret
xor
bound
and
pop
sub
adc
and
lds
test
orl
lods
jp
adc
inc
mov
add
jmp
cld
arpl
sub
ret
cmp
jbe
mov
sub
cmp
push
mov
repz
sti
dec
movsl
mov
imul
mov
repnz
xchg
pop
jge
fcoms
add
xor
data16
sbb
mov
mov
xchg
bound
loopne
loopne
jmp
xchg
aaa
mov
scas
jns
popf
outsb
pop
aaa
jl
mov
das
pushf
punpckldq
dec
xchg
aad
sub
or
and
mov
sti
gs
addr16
lock
test
inc
sti
mov
xor
out
in
cmp
test
aaa
xor
jl
mov
lods
int3
mov
xchg
and
dec
xor
pop
sahf
loop
test
cld
shlb
gs
push
fwait
pop
stos
dec
loope
ds
cs
int
dec
jmp
ja
fisubs
test
mov
int
push
xor
xchg
mov
das
or
testb
mov
add
pusha
mov
xchg
xchg
mov
les
add
xchg
insl
sub
sbb
dec
xor
mov
aad
mov
in
cltd
jg
mov
xorb
mov
gs
lods
cmpsb
xor
or
cmp
popf
arpl
repz
stos
cmc
xchg
sub
mov
cmp
stos
arpl
fwait
sbb
orl
mov
xor
shrl
cmp
dec
fstpt
jmp
insb
sbb
adc
jae
out
add
mov
dec
movsb
or
fwait
imul
stos
fnstsw
xor
fildl
push
push
imul
cmp
movl
imul
pop
add
js
cmc
push
repz
lret
push
mov
xchg
add
addl
sti
movsl
mov
mov
xchg
aas
mov
sub
or
outsb
popf
xchg
dec
pop
aas
cmp
js
cld
fs
mov
ret
add
movsl
clc
mov
push
nop
das
andl
testl
jns
add
sub
sub
xchg
scas
sub
xor
test
test
fisubrl
xchg
stc
ljmp
sbb
sbb
out
sbb
cmp
xchg
jne
xor
popa
xor
into
ret
inc
subl
aas
out
andl
fnstcw
and
div
jmp
push
mull
gs
inc
sbb
into
cmp
cmp
or
xchg
test
push
loop
pop
in
add
sub
sub
in
dec
lret
in
test
xor
cmpsb
add
adc
sub
mov
push
push
pop
aaa
fsubrs
sbb
push
and
push
cmp
and
dec
jns
cmc
insb
incl
fistpll
add
fstpt
ja
rcl
mov
xchg
bnd
inc
in
and
mov
cmp
add
push
mov
mov
int3
xchg
rcrb
mov
popa
cmc
addl
in
stos
test
dec
inc
mov
cli
aam
add
pop
cwtl
nop
push
inc
out
divl
in
fsubrs
enter
adc
mov
xor
arpl
mov
mov
pop
int
inc
cmc
xchg
jl
loop
xchg
orl
scas
out
and
or
jbe
or
mov
insb
loop
fcomip
jl
lea
jbe
jne
repnz
hlt
je
stos
fiaddl
arpl
sub
test
dec
idivb
adc
cmpsb
pop
add
inc
jb
sub
out
arpl
stos
jmp
lret
and
push
movsb
bnd
jne
mov
enter
add
dec
or
pop
push
xchg
stos
push
xlat
clc
out
sub
pop
scas
xchg
adc
rol
jno
aas
add
in
mov
jo
sub
arpl
sbb
pop
out
notl
movsl
inc
sti
jmp
mov
xor
jns
jno
out
les
adc
mov
sub
mov
cwtl
cld
clc
sub
push
outsb
mov
mov
out
fst
fs
fwait
pop
repnz
push
fsubr
cmp
scas
lds
arpl
mov
cltd
sbb
mov
mov
or
push
sub
loope
pop
filds
sbb
pushf
mov
fcmovu
mov
and
xor
sub
gs
cltd
xlat
xor
cmp
mov
mulb
and
call
lahf
das
outsl
dec
call
int3
jb
cmp
ss
call
arpl
sub
xchg
int
repnz
sti
jg
in
pusha
pop
add
enter
ret
cmpsb
popa
fwait
add
cmp
sbbb
enter
xchg
inc
jg
mov
mov
mov
dec
subb
sub
loop
mov
jmp
mov
pop
mov
jo
mulb
sub
jae
mov
add
mov
pop
pop
xor
popa
pop
add
xor
pusha
pop
loope
mov
jmp
fcomps
pusha
cmp
in
adc
cmp
xor
fwait
mov
push
outsl
in
add
xchg
sarl
push
push
cs
imul
jge
sub
dec
popa
cmp
add
push
les
add
cmp
xchg
cwtl
in
cmp
fsts
mov
arpl
mov
or
mov
in
cwtl
dec
cmp
aas
lods
xchg
in
push
sbb
add
push
pop
pop
adcl
mov
sub
test
push
mull
repz
dec
test
aas
repnz
cmp
pop
outsl
xor
stos
or
daa
jg
stos
xchg
cmpsl
imul
cli
divl
jno
lods
out
cmp
mov
lret
ret
out
stos
jmp
and
lds
xor
jne,pt
inc
loopne
lea
lret
scas
sbb
mov
push
sbb
mov
adc
hlt
cmp
push
jge
push
sbb
and
add
mov
jns
divl
sbb
rcll
xor
cmp
mov
inc
xchg
or
mov
pop
mov
dec
or
imul
jne
imul
jnp
xor
out
mov
mov
bound
mov
dec
adc
mov
sub
xchg
jmp
jmp
mov
add
jmp
hlt
dec
in
mov
in
popf
imul
aad
sbb
cmc
mov
xor
sub
or
out
fs
sbb
add
push
out
pop
jne
in
std
inc
adc
inc
dec
sub
int
xchg
pop
mov
sub
mov
out
mov
rcrw
scas
test
mov
cmp
movsb
pushf
mov
jnp
sub
loopne
cmp
mov
or
pop
pop
xchg
nop
inc
outsb
fcomi
iret
insb
daa
pop
fmuls
data16
push
insb
pushf
ljmp
lock
or
std
in
pop
mov
ds
clc
ljmp
insb
pop
mov
dec
ja
push
push
xchg
xor
cmp
cld
mov
pop
mov
popf
maxps
pop
adc
inc
fldcw
xchg
loop
push
and
mov
clc
jne
jb
jne
mov
fdivrl
subb
xorl
xlat
in
aaa
unpcklps
subl
stc
or
jl
adc
xor
and
sbb
and
jae
dec
dec
mov
jg
mov
push
sbb
sbb
adc
andl
xor
jp
pop
call
fcmovnu
adc
or
and
subb
pushl
dec
lret
jecxz
in
rcrl
loop
cmp
xor
cltd
mov
je
int3
jl
mov
lock
in
sbb
inc
jp
mov
int
js
jge
inc
lods
out
shrl
mov
test
lahf
inc
rclb
outsb
xchg
cld
mov
ret
shll
push
popa
dec
or
shll
mov
mov
mov
cmpsb
mov
lcall
stos
push
sub
inc
push
xchg
dec
inc
inc
adc
add
dec
ds
push
sbb
jb
or
sti
sub
xor
jl
sti
inc
les
pop
and
dec
inc
test
lcall
push
lock
sbb
sub
es
jb
jb
test
sahf
mov
xchg
idiv
and
push
fcoml
nop
psrad
fstp
inc
sub
mov
aaa
push
les
dec
test
mov
cmpsl
inc
js
test
dec
mov
add
ja
push
cmp
scas
cmp
das
cmpsb
and
add
out
jle
or
outsb
stos
outsl
popf
xchg
loopne
mov
outsb
mov
and
add
push
dec
pop
repnz
shlb
fidivrs
pop
push
sbb
rorb
mov
stos
nop
mov
push
rcl
add
shlb
aaa
mov
pop
fsubl
into
lods
push
jbe
adc
sti
shll
dec
rcrl
lods
pop
cmp
mov
mov
shlb
test
adc
shl
push
pop
iret
push
inc
popl
pusha
xor
mov
inc
sbb
cmp
ffreep
lahf
lds
js
icebp
xlat
fisttpl
lea
mov
inc
mov
ds
out
pop
imul
jge
jle,pt
icebp
cmp
icebp
aas
inc
lods
mov
mov
jb
dec
pop
mov
dec
mov
add
imul
sub
les
bound
add
adc
stos
mov
inc
mov
pop
lods
adc
sub
lea
rcrl
jns
and
xchg
jae
jb
and
sahf
xor
imul
iret
xor
jl
mov
andl
sub
mov
test
mov
dec
jge
icebp
jmp
dec
loope
std
ret
ss
cltd
push
push
adc
icebp
jbe
insl
daa
pop
adc
xchg
outsl
xchg
call
out
orl
clc
ja
pop
cmp
test
sbb
mov
aad
clc
inc
xchg
sub
pop
rcrb
xor
das
xchg
call
cmp
roll
pop
punpcklbw
jno
sub
dec
pop
mov
xchg
mov
or
cmp
mov
sub
jae
fidivrs
fcoms
scas
in
jge
dec
inc
cmp
fs
xchg
ds
pop
pushf
ljmp
xchg
xor
cmpsl
cli
movsb
push
mov
push
sbb
aad
icebp
pop
sub
or
pop
cltd
push
test
addr16
or
lock
sbb
es
sub
addb
push
call
rcrb
push
mov
dec
outsb
stos
insb
mov
int
int3
adc
loop
sub
loop
adcb
jbe
mov
jmp
imul
testl
pop
js
sbb
bound
push
sbb
pop
sub
mull
ret
xchg
pop
decb
add
mov
or
in
and
or
cmpsb
pop
sub
or
adc
rolb
stos
push
sub
sbb
ret
hlt
mov
outsb
xchg
out
aad
xchg
jge
enter
je
cltd
movsb
jnp
int3
repz
mov
sbb
and
pop
cli
daa
pop
sti
inc
mov
in
shlb
mov
or
dec
push
jb
xor
push
inc
lods
in
clc
aam
ss
loop
insl
xchg
daa
mov
push
cmpsb
sbb
jnp
inc
mov
mov
aaa
daa
dec
scas
adc
je
jge
mov
addr16
and
iret
adc
fbstp
aas
sbb
mov
or
sbb
mov
jl
mov
imul
mov
dec
cli
in
push
inc
cmp
pop
jno
stc
mov
push
lret
out
dec
and
inc
pop
xchg
mov
pusha
std
cmpsb
je
mov
mov
and
push
rol
and
fdivs
mov
pushw
movsl
mov
sbb
cmc
inc
stos
cmp
cmp
push
addr16
pop
dec
xor
add
sbb
std
cmp
xchg
iret
nop
jle
sbb
lea
mov
insl
icebp
jnp
ret
mov
aas
out
cmp
xor
ret
loopne
sub
dec
mov
into
push
xchg
int
out
or
aam
int
in
mov
push
sbbl
sub
adcl
xchg
mov
xor
ja
push
stos
nop
addb
divl
add
insl
push
or
data16
aam
out
cld
mov
or
mov
push
mov
pop
aaa
and
sbb
adc
cwtl
push
sbb
mov
rorl
std
mov
push
mov
popa
dec
aad
add
js
cltd
dec
shlb
mov
pop
aad
add
jns
insb
pop
mov
jl
testb
mov
adcb
xchg
cli
xchg
test
fsts
in
test
dec
inc
popf
fisttpll
mov
and
ljmp
hlt
int3
cs
cmpsb
push
and
test
push
test
mov
mov
push
push
adc
cmp
add
inc
das
adc
lods
pop
pop
cmp
rcrl
mov
push
add
inc
pop
add
push
xchg
testb
mov
inc
add
pop
adc
push
add
jo
sbb
rcrb
adc
pop
push
lock
stos
cmp
rcr
stc
push
mov
xor
xchg
shll
ljmp
repnz
ljmp
pop
fsubrs
bound
stc
fdivr
inc
xor
push
adc
push
aam
sub
jne
dec
pushf
inc
loope
sub
xor
adc
push
filds
fnstenv
rorl
pop
dec
push
jle
push
loope
jecxz
ror
lcall
cltd
lods
lods
aad
jb
sbb
xor
mov
xchg
dec
sub
cmc
test
push
pop
fstpt
jns
out
lahf
xorb
sahf
xchg
cwtl
or
popf
mov
jne
add
gs
jge
and
sub
dec
mov
ss
and
mov
pop
rcl
movsl
xorl
lret
and
or
push
repnz
testb
dec
loope
xchg
mov
adc
jmp
faddl
push
jne
movhps
pushf
xchg
icebp
pop
cltd
scas
and
sarb
lahf
push
mov
mov
je
fcoms
sub
push
jge
add
add
aaa
sbbl
sbb
sti
sahf
data16
or
in
ret
and
jmp
mov
aam
ja
les
imul
and
cmp
loop
pop
sub
aaa
repnz
les
mov
xchg
ss
les
jecxz
cmp
sub
popf
add
aam
mov
cvtdq2ps
es
fiaddl
fs
cmpsb
and
add
fstp
insb
pop
ret
jae
bound
fsubs
add
jl
pop
fcos
lret
call
xchg
iret
out
sti
adc
iret
dec
dec
mov
sbb
insb
jg
stos
sbbb
and
or
popf
dec
cmp
lea
test
les
pop
popf
scas
aam
lds
stc
pusha
mov
jns
adc
and
nop
add
push
decb
daa
push
xchg
cmc
pop
xor
ds
pushf
shlb
insl
inc
cmp
hlt
inc
shrb
or
or
outsb
pop
adc
and
mov
rcll
movsb
repnz
jns
arpl
jl
clc
jg
cmpsb
fidivl
push
pop
dec
icebp
flds
dec
fwait
mov
andb
adc
out
xlat
cmp
jg
ljmp
out
cwtl
cmp
je
int
repz
cwtl
js
lcall
std
inc
aaa
cmp
movsl
inc
xchg
sub
jp
inc
arpl
stos
xchg
cmpsb
sbb
jl
bound
loope
data16
test
stc
mov
xor
inc
sub
fwait
ret
mov
lcall
mov
cmpsl
jmp
shrl
stos
hlt
push
inc
cmc
cli
inc
jnp
lods
in
fisubrs
sub
and
arpl
and
push
xchg
movsl
add
int3
xor
lods
mov
pop
loope
push
sub
arpl
pop
mov
xor
hlt
and
push
call
push
dec
jp
adc
rorl
and
mov
add
out
push
mov
outsl
call
test
es
leave
add
cmp
repz
leave
push
cmp
mov
or
and
cmp
aad
cmp
lret
fisubrs
or
pushf
xchg
pop
jnp
xor
mov
fsub
sub
push
pushf
sub
flds
xchg
mov
xchg
adc
jecxz
lcall
add
sub
das
mov
popa
push
cmc
pop
push
add
lock
jl
or
push
les
mov
lcall
push
sub
add
dec
xlat
adc
inc
mov
cli
and
mov
neg
sbb
adc
jo
icebp
jle
lahf
fcom
int
lea
xchg
jp
les
in
vprotd
xchg
shll
adc
sbb
or
mov
out
add
xor
mov
mov
push
xchg
addr16
inc
or
arpl
add
sbb
hlt
outsb
mov
addr16
rolb
mov
push
mov
in
inc
mov
cltd
aam
jae
cmp
add
dec
insb
inc
add
fldl
lea
aaa
sub
dec
pop
dec
jmp
mov
cmp
pushf
xorl
test
inc
jge
cmp
sbb
lea
mov
test
je
rcrl
cmp
lea
int
lret
dec
roll
add
pop
aad
push
rclb
add
pop
lds
xor
cli
out
xchg
pop
testb
inc
lahf
adc
std
in
jg
rolb
lcall
aas
aad
sub
mov
jecxz
adc
jecxz
loopne
push
xchg
xchg
test
pop
push
xor
jmp
lahf
ds
mov
ds
sub
cmp
adc
jbe
out
xchg
dec
rcl
dec
insl
xchg
pusha
xchg
push
stos
jmp
push
xlat
push
bound
es
xor
pop
xor
dec
popl
mov
imul
pop
ret
xchg
retw
mov
test
loopne
leave
xchg
fisttps
sbb
not
arpl
cmp
popa
inc
incw
in
in
adc
adc
jae
popa
mov
cmpsl
out
add
add
mov
sbb
repnz
or
imul
jp
sbb
arpl
out
ret
mov
pop
jne
jns
shrb
mov
xor
lds
pop
xchg
rclb
dec
sbb
aas
mov
stos
lods
mov
loopne
fisubs
push
imull
out
ss
jge
adc
xor
xor
orb
pop
mov
cmp
mov
inc
mov
pop
jne
pop
push
sti
addl
mov
out
cmp
sub
push
mov
mov
mov
loop
xor
inc
xchg
fwait
ja
sarl
inc
int
mov
add
data16
and
mov
xor
lcall
dec
cmp
push
push
and
pop
adc
push
push
jae
into
in
cmp
jmp
pop
jno
push
nop
ja
sbb
jp
dec
shll
sub
and
in
pushf
xor
adc
test
and
in
sub
rcrb
and
movsl
js
in
add
fstpl
imul
jne
push
mov
popa
sbb
xor
sarb
lret
es
xlat
xchg
sub
lds
dec
aaa
push
cmp
xor
fldt
aad
into
mov
cmp
cmpsb
popf
xor
or
adc
cmpsb
das
in
inc
das
mov
push
adc
and
fwait
ret
in
sub
add
push
ljmp
decl
pusha
lds
fisubrl
std
stos
into
in
sbb
xchg
imul
add
decb
or
jmp
lret
out
cltd
mov
pop
std
xchg
push
adc
jo
and
push
mov
lcall
dec
es
xor
pop
cld
push
inc
or
mov
push
cs
mov
pop
mov
fisttpll
inc
cltd
les
sbb
sti
rcll
aad
cmpsl
jge
insb
sbb
and
mov
add
test
xchg
or
push
push
fistpll
stos
cwtl
pop
sti
jmp
or
cli
sub
xchg
movsb
je
imul
jl
dec
les
jecxz
out
sub
jb
sub
inc
lahf
mov
ficompl
xor
out
or
call
mov
dec
and
xchg
lods
repz
repz
push
push
and
sub
pop
jns
stos
push
aad
outsb
mov
loopne
mov
roll
arpl
push
mov
push
or
jnp
inc
out
outsl
rcrb
adc
movsl
jecxz
or
dec
jnp
cmp
dec
insb
mov
jl
and
mov
push
cmp
arpl
repnz
ds
hlt
mov
mov
mov
loopne
in
test
loope
xchg
xchg
cmpsb
xor
jecxz
xchg
mov
mov
fbld
xchg
and
out
push
mov
out
cmpsb
lds
mov
jb
push
jnp
test
loop
mov
add
dec
sub
frstor
enter
push
sbb
repz
js
in
fmull
push
ja
jg
repnz
pop
mov
jns
xchg
loopne
sarb
xchg
push
push
cmp
mov
pop
sarb
lahf
dec
rcrb
xchg
lods
inc
in
sbb
fistpll
scas
xchg
loope
popa
aad
lock
mov
xor
pop
pop
mov
or
xor
cwtl
rcrb
cmp
ja
mov
pop
enter
roll
test
clc
xchg
orb
out
jnp
cs
or
inc
jp
cld
mov
psrlq
out
mov
or
adc
adc
outsb
lret
jp
mov
pop
shrl
and
cmpsb
aas
jl
arpl
and
cmp
or
mov
mov
jo
sbb
sub
out
or
dec
pop
jp
call
xor
mov
push
dec
jb
mov
arpl
in
jno
stc
inc
push
sarl
shll
adc
into
jl
out
lods
sbb
jle
lcall
xor
rcll
mov
mov
xor
icebp
and
fs
imul
jbe
or
mov
lock
sbb
test
sbb
xchg
jle
jp
and
sbb
les
add
enter
and
js
xor
cmp
mov
jne
int
push
jmp
repnz
rclb
lretw
cli
and
xor
mov
jns
cmp
data16
add
cltd
xchg
cmp
loop
clc
imul
jbe
xchg
out
loope
mov
cmp
fs
pop
push
cs
idivl
add
xchg
scas
dec
addr16
aas
mov
sbb
dec
cmp
pop
mov
xor
xchg
in
mov
lods
push
test
sti
dec
daa
or
or
and
jae
sub
shlb
clc
outsl
mov
mov
cmp
push
sub
std
int
addr16
daa
pop
cltd
cli
je
fs
mov
out
out
lds
lock
mov
mov
loope
popf
mov
js
jnp
jg
sub
cmp
sbb
inc
sti
sub
orl
xchg
into
add
loope
pop
js
and
xor
push
dec
incb
and
fcomps
aam
out
rcll
dec
popf
mov
pop
js
jg
mov
ss
cmc
mov
sub
push
iret
mov
rcrb
push
int3
fistps
stos
push
jle
stos
lahf
movsl
pushf
insb
sbb
iret
pop
clc
sub
fwait
xor
push
jns
jecxz
mov
inc
js
nop
negl
jl
and
hlt
and
or
inc
cli
inc
adc
out
out
jmp
xor
cs
inc
push
movsl
mov
sub
loope
test
pushf
sbb
popa
mov
pop
loope
push
xor
xchg
aaa
cltd
std
in
push
shlb
pusha
test
and
lea
mov
dec
mov
and
dec
or
in
call
movsl
cmp
push
mov
sub
sbb
test
xchg
jnp
dec
shlb
jl
dec
je
movsl
adc
fwait
notl
int
icebp
popa
pop
sti
sub
xor
lcall
jne,pt
popa
cmp
mov
and
jbe
jne
xchg
adc
fsubl
test
xor
dec
inc
jecxz
mull
jno
mov
repz
mov
sbb
add
mov
icebp
mov
clc
jno
sbb
mov
in
dec
mov
stc
jmp
sbb
loopne
jne
push
jle
dec
fdivp
ret
mov
sub
in
dec
repz
jb
iret
cli
dec
loope
stc
je
adc
add
push
jg
jns
mov
xbegin
out
das
adc
mov
mov
adc
scas
xor
xor
sub
mov
cmp
push
add
mov
xchg
cmp
jp
xor
data16
cmp
test
and
push
push
rclb
push
push
aas
jp
ret
xchg
mov
mov
lret
inc
push
cmpsl
lcall
mov
into
setl
lcall
push
xchg
hlt
push
and
decb
rorl
cmc
xor
fidivl
adc
push
faddl
out
popf
test
add
dec
out
xchg
add
fildll
and
pop
adc
loop
in
lret
push
jp
mov
push
pop
jecxz
jge
inc
mov
insb
movsb
sbbl
add
fiaddl
mov
mov
jmp
pop
cmpsl
add
dec
mov
or
icebp
sub
imul
adcl
mov
add
faddl
arpl
out
aaa
mov
ret
cmp
mov
cld
sub
loop
in
pop
cli
sbb
jp
inc
std
outsl
clc
arpl
mov
out
lret
cmc
test
dec
fidivrl
sbb
lcall
sub
pop
out
inc
shlb
ret
mov
loope
rcr
pop
addr16
cltd
rcl
scas
push
push
inc
inc
inc
mov
shr
jecxz
int
sbb
aas
pop
inc
cmp
cli
aam
mov
dec
in
mov
sahf
xchg
sbb
rclb
imul
outsl
cmp
xchg
sub
pop
add
pop
int3
ret
xor
mov
dec
xchg
add
hlt
cmpsl
insb
push
xor
rolb
cmpsb
mov
pushf
jae
in
mov
mov
jbe
mov
inc
insb
cmp
xor
loopne
push
int
mov
push
jbe
jge
jbe
stc
out
in
jl
aas
aas
pop
sbb
xor
mov
out
test
mov
lods
popf
insl
sarl
jg
lds
stc
sbb
pop
test
mov
add
sub
jle
ret
inc
pop
inc
cld
testb
and
push
mov
ret
mov
cli
inc
pushw
sbb
jbe
icebp
aas
fldl
xchg
lcall
cmpsl
jmp
sbbb
sub
popa
inc
and
stos
cltd
and
mov
repz
push
jle
xor
mov
push
testb
pcmpgtb
adc
imul
sbb
fucomi
inc
fdivrs
arpl
testl
adc
jbe
add
shll
fistpll
push
popf
and
testl
or
cmp
sti
xchg
arpl
adc
lods
push
data16
push
int3
pop
cmpsl
mov
cli
add
ds
test
mov
arpl
cs
mov
ret
shlb
sti
push
dec
lock
sahf
inc
pusha
xor
adc
jns
pop
sub
pop
jle
popf
dec
bound
and
shll
sbb
dec
mov
add
stos
xlat
mov
jg
xlat
stc
imul
jo
mov
bound
pop
cmpl
or
gs
push
lahf
adc
jb
xchg
pop
cmp
inc
fimull
sub
jne
daa
mov
mov
pop
sbb
mov
lahf
scas
movsb
mov
cld
mov
xchg
bound
les
jp
mov
mov
jecxz
jg
adc
mov
dec
adc
js
sbb
lock
push
push
sub
pop
fnstsw
xchg
pop
cwtl
int3
fdiv
int3
mov
push
out
pop
cmpsl
xor
clc
jb
push
mov
adc
jne
cmp
pushf
ret
dec
mov
jg
js,pn
pop
pop
jmp
push
mov
aad
je
pusha
xor
jge
xchg
pop
imul
dec
scas
daa
frstpm(287
or
mov
fstps
por
mov
add
dec
dec
mulb
pop
arpl
cmp
dec
loop
sbb
xor
scas
mov
sub
cmp
lock
ficoml
jmp
jno
rcll
aas
add
dec
lret
idiv
les
adc
mov
xlat
ret
dec
jns
daa
fisubl
imul
mov
inc
sub
sub
xor
fisubl
insb
sub
mov
mov
les
xchg
bound
ret
int
jle
ljmp
pop
ljmp
lods
cmp
daa
mov
push
cmp
cs
insb
fnstenv
jo
xor
sahf
jno
pusha
sub
lea
push
in
jae
jmp
test
adc
mov
ds
cli
mov
decb
mov
mov
mov
push
cld
scas
adc
test
hlt
cs
push
cmpsb
xchg
lea
or
mov
add
or
xchg
lret
clc
stc
repz
xlat
mov
jmp
clc
sub
and
repnz
xor
shll
cmp
add
mov
rolb
shll
and
jmp
lret
out
je
popf
idiv
enter
lahf
xor
sub
push
add
jecxz
lock
add
call
pusha
int
mov
outsb
fildll
and
rcrl
or
das
pop
imulb
jmp
frstor
add
cmpsb
dec
pop
in
sbb
or
pop
and
fsubs
mov
xchg
push
lcall
mov
jnp
xchg
cmpsl
inc
xchg
xchg
lret
push
push
push
aam
cmp
sti
adc
dec
sub
xchg
xor
dec
cmp
adc
add
or
sub
fsubrl
sbb
aad
sbb
xor
sub
mov
stos
shl
inc
sub
cld
sbb
jmp
push
cli
fwait
push
jne
mov
pop
in
in
jg
dec
data16
mov
dec
sub
push
sar
mov
movsl
data16
test
mov
cmp
cmp
fildl
out
sbb
mov
adc
stc
jns
cltd
cli
andl
push
cmp
adc
shr
das
bnd
add
add
adc
int
cmp
jns
fnsave
idiv
leave
fnstenv
pop
cli
pop
jno
xchg
sub
or
repnz
and
arpl
push
or
imul
xchg
fcompl
mov
cmp
bound
xchg
cmp
out
cltd
adc
sub
pop
scas
test
lahf
ds
cmpsb
xchg
pop
mov
lret
cmp
push
and
lret
push
addl
sarb
add
dec
subb
out
mov
sbb
sub
mov
pop
jecxz
icebp
pmulhw
dec
cmpsb
mov
fnstsw
pushf
idiv
aam
mov
add
testb
and
sbb
cmpsb
push
mov
pushf
jns
push
fsubs
mov
sahf
or
adc
hlt
and
dec
mov
xchg
insl
psllw
sbb
mov
pop
test
lock
push
pusha
adc
shl
xchg
icebp
arpl
jge
cmp
cltd
jno
dec
add
xor
ror
mov
push
sub
mov
cli
xchg
in
xchg
movsl
xchg
fmulp
popf
and
cmpsl
andb
jbe
popf
mov
enter
dec
lcall
xor
cmp
dec
mov
leave
bound
jmp
in
mov
outsb
shl
je
xchg
add
decb
dec
sub
cltd
cld
inc
stc
leave
jo
bound
mov
dec
and
mov
mov
sbb
xchg
inc
adc
inc
jnp
mov
gs
cltd
cmp
fwait
xor
std
scas
sbbb
out
add
inc
test
and
xchg
andb
xchg
sub
pushf
popf
stos
adc
jl
cmp
ficompl
cmp
add
jmp
pop
aam
push
divb
jnp
int3
mov
movsl
ljmp
xchg
pushf
out
out
mov
jae
sbb
add
xor
jns
pop
adc
push
out
jbe
add
and
jns
xchg
pop
xorb
movsb
stos
pop
dec
sahf
pushw
inc
mov
sbb
sbb
jns
ljmp
aad
cld
imull
daa
fisttpll
jecxz
cld
xor
mov
sti
mov
dec
inc
rep
loop
gs
ss
jl
lock
stc
dec
xchg
daa
cmp
incl
cmp
xor
adc
mov
mov
inc
lea
xchg
idiv
mov
std
fwait
out
mov
xchg
cmc
xchg
mov
cmp
xlat
inc
das
mov
xchg
adc
xchg
cmpsl
add
lahf
es
push
gs
mov
hlt
clc
lcall
rcrb
loop
push
loopne
cmpsl
sbb
xchg
popf
mov
pop
xchg
cmp
imul
dec
sbb
mov
roll
xchg
daa
stos
dec
lods
imul
rorl
jno
lods
sti
cmpl
subb
sahf
mov
mov
push
jecxz
push
adc
test
jmp
popf
fcompl
imul
xor
xchg
mov
lret
clc
adc
test
jecxz
mov
and
or
aaa
or
or
clc
sub
adc
add
dec
pop
and
inc
or
shrb
inc
std
jb
mov
cwtl
add
in
push
jge
or
push
jl
test
lcall
sbb
sbb
push
pusha
add
cmp
add
inc
aaa
dec
adc
and
and
mov
or
nop
rol
add
inc
jne
aad
pushf
push
cmovg
add
mov
shlb
inc
jg
jmp
xorb
enter
sub
lea
sbb
pop
pop
cmp
xor
adc
into
lods
jo
adc
stos
shlb
fidivl
mov
enter
mov
insl
cmp
cmpsb
ja
mov
fisubrl
movsb
inc
ja
fcompl
lcall
or
inc
stos
test
out
lock
jp
dec
push
adc
repz
fdivrs
in
in
std
iret
cmp
outsl
sarb
mov
gs
es
ds
roll
popf
subb
ds
in
xchg
test
mov
and
imul
add
aad
aam
mov
inc
inc
or
jne
fsubs
mov
push
mov
mov
cwtl
and
sbb
test
mov
pop
push
push
pop
jnp
shl
pop
dec
shrl
pop
dec
xor
cmc
xchg
or
cmp
lods
out
mov
add
sub
sub
mull
add
add
stos
adc
mov
pop
fwait
sbb
sub
jo
or
push
call
stc
sub
xlat
pop
cs
dec
pand
mov
lret
pop
and
or
daa
int
movaps
sub
ffree
enter
mov
pop
imul
notl
dec
fstps
std
pop
sbb
sub
arpl
jmp
xor
cmp
data16
xor
lods
out
and
push
mov
mov
dec
adc
push
ja
and
fs
stos
push
mov
insb
sub
scas
popf
dec
cld
jns
cmp
sbb
mov
mov
mov
mov
xchg
jns
outsl
adc
dec
sbb
sbb
adc
in
int3
sbb
test
jno
scas
scas
mov
fbld
call
mov
shll
push
jle,pn
mov
out
or
lcall
push
cltd
push
lds
je
stc
icebp
call
mov
gs
inc
shll
popa
mov
xchg
xchg
mov
cmpsl
scas
lock
outsb
jnp
push
gs
xorb
test
push
roll
outsl
pop
pop
or
lods
push
dec
sbb
xchg
jle
rorl
lahf
cwtl
fs
incl
xchg
movsb
lahf
push
jmp
pop
xchg
mov
shrb
faddl
and
push
add
or
adcl
xchg
pop
and
xor
mov
push
out
jge
sbb
stos
xchg
sub
add
pop
cli
and
incb
dec
jnp
fsts
sbb
nop
inc
dec
movb
insl
add
mov
add
das
add
out
xchg
dec
adc
popf
xchg
jae
jecxz
dec
xchg
out
scas
pop
lods
fidivrl
movsw
jp
mov
lcall
pop
mov
bound
insl
xchg
jp
inc
mov
mov
sbb
push
sub
or
mov
jae
adc
in
xchg
or
lret
cmc
shrl
lock
mov
cmp
mov
sbb
and
loop
inc
push
xor
fidivl
aad
jg
adc
mov
sub
dec
call
dec
and
lahf
push
in
xchg
or
or
inc
subb
cmp
and
mov
leave
stc
inc
or
xchg
add
mov
mov
add
lods
mov
popf
xchg
fcom
cltd
and
cmp
es
inc
jo
jmp
mov
cld
or
inc
jg
xor
pusha
ret
xchg
mov
lcall
dec
mov
cmp
and
cli
mov
mov
sub
andl
inc
pop
pop
sbb
mov
ja
ror
cmp
add
push
or
or
mov
sbb
mov
pop
popf
nop
dec
and
faddp
loope
fcom
pop
xor
jne
sub
and
aas
or
lock
inc
jo
xlat
int3
stos
xchg
jle
imul
mov
insl
mov
xor
mov
shll
add
add
mov
pop
fnstenv
pop
into
and
shll
xchg
lret
jne
mov
mov
frstor
sub
mov
sbb
mov
aaa
xchg
ss
push
faddl
loopne
ds
pop
cwtl
rcll
sub
notl
lahf
sub
xor
aad
pop
xor
xchg
mov
mov
mov
aas
imul
mov
dec
rorb
addr16
pop
mov
repnz
aaa
adc
into
test
sub
pusha
xor
cwtl
es
lea
imul
lods
push
outsl
testl
mov
jbe
loopne
das
sar
xchg
mov
add
lcall
cmc
sub
mov
jns
xor
mov
inc
fwait
imul
cmpsb
jnp
lcall
mov
xor
fstps
cli
jmp
or
lahf
pop
in
cld
loopne,pt
and
pusha
jnp
in
xchg
out
or
outsb
sbb
movsl
mov
inc
and
jmp
push
lret
cmpsb
xchg
dec
fistps
das
hlt
xchg
shll
and
mov
inc
cmp
aad
pop
mov
xor
mov
xor
in
sub
xor
inc
sub
pusha
movsb
add
repz
inc
dec
sub
cmp
add
xor
movsl
dec
aam
mov
push
outsb
sub
imul
sub
push
or
sub
or
xchg
mov
sbb
jns
shl
xor
lds
xchg
mov
adc
xchg
data16
repnz
arpl
scas
dec
mov
mov
test
lret
jo
incl
clc
movsb
iret
or
data16
push
out
or
test
or
in
clc
insb
inc
adc
fisttps
mov
push
loope
mov
shlb
gs
dec
fs
mov
jg
cmp
lds
xchg
sbb
sub
mov
ds
mov
out
and
mov
shll
push
std
test
cmp
bound
jecxz
push
and
or
lods
fisttpll
pop
clc
sub
push
jmp
pushf
sub
repz
adc
nop
sub
popf
out
inc
jns
and
or
ficoml
fistpl
test
push
mov
sbb
or
or
icebp
les
loope
js
cs
inc
pop
int
mov
cmp
scas
jmp
xor
pusha
out
add
jns
rcll
rclb
add
movsl
gs
popf
cltd
cmp
std
inc
mov
cmc
test
loopne
daa
aas
scas
dec
cltd
pop
int3
push
mov
lods
stc
shlb
mov
xchg
jno
xor
mov
test
add
ret
outsl
popf
int
sahf
xchg
push
pushf
sub
cmp
mov
bound
mov
xor
fsubl
add
pop
movsl
inc
lods
jg
gs
rorb
call
stos
mov
jae
sbb
outsb
xchg
xchg
xor
insl
jmp
jle
sub
cmp
inc
jns
popf
xchg
repz
mov
fxch
xor
add
icebp
sub
pop
js
ljmp
lock
fadds
lea
out
pop
lock
rcrl
addr16
or
add
xchg
sbb
outsl
push
jne
aaa
mov
fs
mov
jno
pop
popa
mov
xchg
mov
daa
ja
cs
imul
lea
adc
xchg
or
add
dec
incb
push
push
jns
add
in
clc
fcom
inc
and
xlat
inc
ret
shlb
push
dec
int
cmpsl
je
or
jno
xor
pop
or
in
adc
adc
ficomps
xorl
lods
aad
fstpl
fmul
cmp
dec
bound
adc
jp
int
mov
cmpsl
aam
mov
mov
jge
adc
cs
cmp
call
fcmove
imul
or
test
mov
mov
or
lret
aaa
fwait
mov
mov
push
es
adc
and
les
movsl
test
xlat
mov
inc
jb
outsl
or
xor
out
xchg
inc
and
add
icebp
shl
add
cmp
pop
pavgb
xchg
or
call
sub
xorl
and
cli
ds
add
roll
jbe
and
clc
out
xor
inc
xchg
call
dec
aam
push
push
and
ret
scas
scas
repz
or
aas
fmull
movsb
insl
lods
add
fidivl
ja
pop
js
dec
adc
jecxz
in
inc
les
push
cltd
jbe
sub
inc
popf
cmp
inc
dec
notl
adc
pop
addl
adc
lea
pop
into
xchg
add
dec
adc
lds
mov
jge
mov
lods
mov
jecxz
mov
stos
xchg
pop
adc
mov
xchg
xchg
out
enter
sbb
dec
add
pop
call
aaa
shrb
or
xchg
jbe
mov
shlb
sbb
out
cld
adcb
jne
cmp
mov
sbb
or
aad
push
adc
add
pop
cld
xchg
xor
xor
pop
sahf
insl
mov
adcb
and
scas
adc
bound
pop
pop
ret
xchg
outsl
add
lea
or
test
jbe
adc
aaa
insl
ret
cmpsl
sub
jne
repnz
xchg
incl
call
scas
shrl
mov
xor
call
pop
add
pop
mov
adc
xor
push
lret
lret
jmp
frstor
and
lods
cltd
xchg
sbb
sahf
or
sbb
mov
lea
test
lods
fisttpl
ss
div
push
sbb
lods
or
lcall
lcall
int3
rcr
in
xchg
mov
jle
xchg
cmp
push
mov
mov
mov
int
lret
je
mov
decl
push
or
xor
dec
push
inc
popa
jge
inc
mov
call
stos
pop
push
andl
popf
cmp
inc
adc
test
xchg
push
and
mov
or
mov
mov
jne
push
or
lahf
in
mov
iret
pop
repnz
aaa
mov
mov
cmp
je
xchg
adc
scas
enter
fldl
insl
adc
mov
notl
push
xchg
cmp
or
jns
aas
xchg
adc
and
sti
dec
pop
add
outsb
incl
jnp
pop
inc
sbb
popa
xor
insl
call
out
daa
shrb
pop
psrld
inc
jecxz
es
inc
fldenv
pushf
inc
mov
scas
and
push
mov
pop
jbe
push
mov
gs
div
or
lods
pushf
sbb
pop
incb
aas
scas
jns
ja
push
cli
dec
mov
fcompl
repz
movsb
sti
out
ret
pop
xchg
out
leave
ds
mov
adc
pop
out
fbstp
pop
std
in
mov
lahf
inc
fisttps
fcmovnu
adc
scas
inc
mov
mov
jnp
push
pusha
int3
dec
xchg
int
mov
xchg
flds
in
and
xor
and
inc
mov
jns
in
ret
aaa
xlat
jae
lret
inc
mov
int3
cmp
lods
mov
add
jp
jb
stos
and
enter
cmpsb
mov
push
cmp
add
repz
pop
outsb
jecxz
jnp
xchg
dec
xchg
sbb
rcrb
push
gs
or
jo
and
dec
scas
push
jmp
adc
xor
ja
push
fiaddl
xlat
cltd
dec
insl
leave
mov
xchg
push
mov
cmp
fcoms
jg
xor
in
outsb
fldcw
adc
idivb
fs
push
lods
adc
ljmp
lret
sub
mov
jge
sahf
pusha
mov
pop
out
xchg
xchg
mov
cmpsl
leave
ret
mov
push
movl
xchg
sub
repnz
in
rorl
into
stc
mov
mov
or
int3
mov
jmp
mov
cvtpi2ps
imul
adc
jp
inc
sti
hlt
mov
mov
outsb
clc
sbb
repnz
out
ds
push
cmpsl
iret
and
ja
pop
cmp
cld
add
pop
push
fs
push
bound
xchg
pop
aad
xchg
inc
nop
xchg
and
scas
jbe
xor
sar
jl
out
fsubr
cmp
xchg
movsl
sbb
mov
int
arpl
lcall
push
test
fs
mov
pop
into
out
sub
jne
cmp
pop
test
int3
mov
pop
addr16
push
ds
sahf
push
enter
shrl
scas
cmp
sbb
mov
mov
testb
adcb
cmp
movsl
popf
and
loope
dec
cmp
bound
arpl
loop
xor
jecxz
xor
or
dec
push
inc
mov
xlat
pop
filds
cmpsl
je
shlb
enter
pop
sti
aam
or
sbb
cmp
inc
pop
sbb
loope
sub
mov
sbb
sbb
xchg
mov
inc
push
sub
ss
sbb
and
pop
jne
mov
or
pop
mov
xor
xor
data16
pop
pop
clc
dec
arpl
adc
mov
cmp
adc
push
cld
mov
xchg
add
mov
push
xor
mov
inc
inc
mov
dec
add
lret
repz
dec
pushl
call
inc
je
adc
mov
addr16
sub
in
lods
subl
and
cmova
iret
adc
cmpsl
xor
loope
xlat
loopne
or
xor
repnz
ret
stc
sbb
mov
lret
es
inc
cmp
mov
cwtl
repnz
fucomp
cmpsb
fisttpll
jp
push
jae
clc
or
std
movb
cmp
stos
jecxz
sub
xor
jnp
jns
popa
pop
or
jg
es
aam
js,pt
fwait
cmp
divl
in
mov
orl
mov
xor
xor
xlat
testl
fcmovu
pop
loop
ret
jns
fstpt
and
fiadds
pop
sbb
mov
pop
loopne
push
cmpsb
std
push
fwait
mov
cmp
sub
std
cmp
ret
stos
push
out
jae
addr16
jge
lret
pop
lcall
push
pop
cmpb
mov
inc
pop
loop
movsl
sub
lock
add
mov
mov
lahf
jle
xor
faddp
fistps
mov
mov
adc
cmp
loop
ljmp
push
mov
je
xor
jle
xchg
shll
mov
in
mov
fnstenv
cmpsb
imul
pop
xchg
divl
cmpl
mov
push
pusha
dec
gs
insl
push
ja
ror
add
mov
pcmpeqb
int
sbb
push
and
cmpsl
jl
sub
lds
out
test
mov
dec
stos
fisttps
cmp
icebp
into
mov
jae
call
sbb
sub
stos
icebp
adc
sti
cwtl
mov
pop
jbe
jge
add
push
push
lods
or
dec
jmp
je,pn
das
stos
push
test
xor
cmc
xchg
dec
cmpsl
stc
decl
jnp
inc
sbb
and
cmp
xchg
jno
loopne
push
addr16
jl
push
jge
stos
sub
pop
mov
cltd
dec
inc
es
addr16
jne
pop
stos
icebp
dec
inc
push
cltd
mov
mov
arpl
daa
add
fidivrs
xor
sub
mov
rorl
mov
adc
jae
mov
inc
push
js
imul
and
cs
mov
lea
jno
test
cmpsl
dec
lcall
ret
mov
out
jo
mov
sahf
leave
mov
aam
and
fdiv
inc
xchg
xor
dec
and
pminub
mov
push
in
jne
inc
sbb
and
pop
je
add
xchg
mov
outsb
repz
xor
mov
arpl
idivb
addb
add
lret
imul
rol
imul
loop
push
push
mov
decl
mov
decb
out
sub
dec
ljmp
and
xchg
repz
xchg
sbb
add
sahf
lret
insb
fsubrp
test
mov
add
pop
test
popl
xor
addl
shrb
imul
sub
mov
jno
stos
inc
pop
xchg
sbb
in
test
jl
lea
int3
pushf
xor
in
or
into
dec
ss
bound
mov
movsl
sbb
jge
pop
cmp
jb
repz
test
xor
pop
hlt
adcb
mov
xchg
push
addl
out
push
ret
xor
jp
out
xchg
aad
jg
add
add
mov
in
insl
and
leave
adc
aas
lret
sbb
adc
mov
push
loopne
into
cltd
pop
inc
push
xchg
ds
sti
xchg
xor
inc
repz
sti
xchg
push
popa
jg
adc
es
repz
dec
je
mov
push
js
dec
not
mov
fildll
dec
push
insl
shlb
sahf
rcrb
sub
push
ljmp
insl
adc
fsubr
mov
dec
ret
lods
aad
out
xchg
jmp
aam
nop
sub
jg
mov
mov
jmp
mov
scas
mov
mov
cwtl
js
jb
mov
cmp
push
adc
rcrl
inc
movsl
in
or
lret
int
rorb
loopne
and
dec
inc
sub
jp
fisttps
inc
aam
rolb
and
ljmp
mov
jns
push
mov
mov
test
rolb
mov
and
mov
sbb
cld
mov
stc
inc
out
add
ret
mov
mov
iret
push
sbb
loopne
mov
or
jecxz,pn
es
sub
jo
es
add
mov
jnp
sahf
sar
shll
mov
push
jg
out
mov
dec
sbb
pop
and
push
add
scas
push
jne
pop
dec
xchg
out
push
pop
repnz
xchg
aam
fwait
outsb
js
xchg
orl
ja
xchg
pop
jae
out
jae
cmp
inc
ret
mov
cltd
or
into
pop
cltd
cmp
int
lahf
shrb
xchg
roll
xchg
jmp
std
pop
cwtl
lret
push
lcall
xchg
sub
fisttps
lcall
insb
xor
pop
and
push
nop
sbb
push
mov
push
xor
adc
lcall
and
aaa
sbb
mov
xchg
je
inc
and
popa
sbb
arpl
cmp
lret
mov
daa
mov
mov
xchg
xchg
lret
mov
pusha
ja
mov
cwtl
push
mov
dec
repz
pop
gs
cmp
cmp
cltd
or
jle
xorl
mov
rcll
sub
push
bound
lock
mov
cmc
clc
int3
xchg
jmp
pop
push
dec
and
sub
je
sahf
add
sahf
in
dec
js
mov
je
xchg
pop
dec
cmp
pop
push
notb
js
xchg
mov
inc
pop
add
in
cmp
push
or
sub
loopne
mov
cmp
adc
insb
sub
sbb
push
fstpt
fld1
jae
sti
xor
adc
inc
and
dec
sbb
int3
lock
dec
outsl
gs
push
cs
pop
mov
dec
icebp
push
pop
add
push
fwait
gs
not
stos
xchg
jge
iret
enter
xchg
push
mov
or
in
pop
mov
aaa
xchg
sbb
sbb
shrb
lcall
shlb
cmpsl
add
or
jne
dec
je
std
loop
jnp
loop
sar
out
dec
cmp
mov
jle
or
subb
or
mov
hlt
lret
sbb
dec
outsb
xor
push
das
dec
push
enter
sbb
leave
sub
and
imul
push
mov
lea
idivb
or
fwait
mov
push
inc
jns
inc
mov
and
mov
js
push
out
insb
dec
xor
je
sbb
out
data16
cs
loope
nop
sahf
sahf
push
mov
in
jle
cltd
mov
mov
xor
les
pop
adcb
movsl
add
push
decl
jb
iret
jb
in
leave
jmp
fwait
mov
cmpsb
pushf
out
aam
mov
aam
movsl
es
insl
fnstsw
flds
xchg
add
cltd
nop
ss
dec
into
aad
pop
pop
push
mov
dec
xlat
cmpsb
add
cmp
fisttpll
lcall
rol
out
jmp
popf
sti
incb
sbb
push
popf
cmpsb
fbstp
hlt
cmp
mov
lds
xor
mulb
cmpsl
sbb
icebp
sbb
xlat
loop
int3
pop
cmp
sti
repnz
lahf
push
popf
mov
ja
rcll
push
pop
daa
dec
test
cmp
ret
rolb
jne
movsl
dec
xchg
sbb
push
mov
xchg
push
lods
ret
out
and
mov
mov
pop
xchg
cli
int
ret
in
and
push
les
popa
push
add
test
ds
pop
sub
dec
imul
int3
push
xchg
fistl
sti
jo
xchg
jns
jmp
fldl
rorb
sub
mov
inc
sub
not
icebp
adc
adc
mov
std
xchg
iret
std
adc
dec
int3
aaa
std
mov
push
movsl
pop
xchg
fs
les
mov
dec
int
jp
pop
mov
jge
sbb
decb
scas
mov
aaa
mov
xchg
xchg
push
ss
jle
and
sahf
js
pop
and
daa
xchg
js
fstpl
inc
and
mov
adc
js
ss
jns
movsl
push
pop
repz
aam
inc
pop
aam
xor
adc
cmpb
test
fdivl
iret
jl
int
fnstcw
ja
sbbb
adc
leave
repnz
shrl
fs
int
inc
sti
add
fwait
clc
cmpsb
dec
mov
lahf
cmp
pop
xor
mov
test
imul
stos
les
push
cmpb
jae
lods
jl
dec
std
lcall
lea
lods
call
inc
mov
xor
add
xor
hlt
xchg
call
loopne
int
mov
mov
imul
mov
adc
mov
cmc
or
push
inc
mov
je
loop
sbb
dec
gs
adc
sub
sub
jecxz
cli
mov
pop
lods
xchg
add
mov
mov
inc
jmp
or
xor
aaa
dec
dec
lods
rorb
jmp
xorb
adc
mov
jae
cmpsl
pop
pop
add
adc
cld
mov
jmp
je
rcrl
pop
test
stos
jge
mov
lods
enter
adc
push
fidivl
jmp
adc
enter
sti
bound
mov
rorl
insb
lret
movsl
and
xor
in
imul
or
jae
mov
loope
es
jmp
rcrl
subb
dec
push
fwait
lods
add
gs
pop
ljmp
mov
outsl
xchg
sub
repz
movsl
inc
and
dec
mov
mov
repnz
mov
adc
or
xchg
mov
ljmp
fstps
jmp
icebp
lahf
int3
push
inc
inc
fadd
xchg
xchg
mov
and
fcompl
inc
push
xchg
scas
inc
mov
sbb
cmp
ds
imul
mov
pushf
movsb
addb
and
aad
dec
pop
leave
mov
adc
scas
and
sub
pusha
outsl
test
push
outsb
jo
jne
popf
ja
je
fcmovne
jle
cs
js
dec
cmp
xor
ret
mov
push
icebp
fldt
ret
and
cmp
ss
loope
inc
mov
inc
mov
rclb
test
mov
dec
div
stos
push
mov
in
lret
in
mov
cld
inc
jecxz
movsl
adc
imul
xor
loop
add
jge
cmpb
in
test
jb
ss
inc
mov
and
pusha
cmp
fucom
jnp
inc
dec
adc
fimuls
xchg
andl
jg
push
push
cmp
xor
mov
add
mov
pop
mov
inc
push
nop
xchg
into
fs
xor
test
push
mov
mov
jae
ficomps
inc
inc
and
jnp
pop
mov
mov
ds
jnp
and
cmp
scas
into
movsl
aas
mov
call
imul
jecxz
imul
fucomp
pop
fisubrs
loopne
je
push
sbb
mov
xchg
mov
sbb
xor
shll
fld
jae
out
in
pusha
add
push
mulb
mov
aad
jmp
pshufw
mov
cld
test
pusha
iret
sti
add
push
inc
out
pop
fnstcw
js
sarb
dec
and
notl
in
leave
ljmp
and
adc
shr
imul
xor
and
idiv
inc
jns
inc
inc
test
push
mov
loopne
mov
or
popa
mov
test
jg
inc
enter
push
cmp
mov
movsb
jl
pop
mov
nop
push
xchg
sub
mov
adc
xor
mov
pushf
cmp
pop
in
push
arpl
mov
sbb
in
popa
lods
mov
in
mov
adc
adc
test
test
dec
jge
in
decb
sarb
popfw
pop
shrb
push
int
es
sbb
mov
and
popa
pop
push
aas
fcmovb
repnz
xchg
stos
adc
inc
mov
mov
xchg
lcall
sbb
fstps
pushf
and
sub
push
pop
pop
pop
dec
push
add
das
nop
mov
mov
nop
and
pop
jle
mov
xor
pop
arpl
mov
cwtl
dec
out
adc
jae
xlat
stos
push
and
lcall
lods
mov
rcll
stos
pusha
call
and
imul
mov
dec
popf
inc
fisttpll
sbb
in
movsb
adc
shrb
jne
cmp
shlb
xchg
ljmp
dec
cmp
es
pop
rolb
cwtl
das
clc
subb
addb
out
cmp
es
aas
add
call
mov
push
jnp
push
shlb
roll
xchg
inc
mov
shrb
mov
rcrl
dec
dec
jle
clc
cmp
shl
pop
jge
mov
jo
lods
push
loop
jns
pushf
test
outsl
scas
imul
fs
popa
aad
rcll
cmc
aam
out
and
pop
jb
int
repz
mov
arpl
push
inc
xor
mov
fmuls
mov
cld
xor
sub
sbb
xor
mov
lret
stc
mov
push
movsb
mov
jne
fmul
ret
call
jecxz
sbb
mov
xchg
out
pop
lret
inc
inc
push
cltd
inc
aad
ja
ds
cwtl
roll
pop
fdivs
aad
push
mov
jle
mov
stc
adc
pop
fidivs
lods
lcall
mov
enter
fcoml
add
jno
ss
pop
and
jns,pt
js
lret
dec
or
pop
mov
ret
gs
mov
scas
stos
lret
js
jne
push
dec
sub
sti
lcall
lret
in
jge
push
adc
or
jne
add
pop
cli
jge
push
addl
pushf
in
jno
adc
push
fistpl
push
add
dec
xchg
or
push
addl
stc
jl
sbb
arpl
mov
scas
test
das
insb
xchg
mov
sbb
pop
inc
and
sbb
mov
lcall
xchg
add
out
xor
ja
stc
cmovb
call
xchg
test
mov
mov
pop
mov
mov
mov
dec
mov
sub
push
xlat
jb
rcrl
cltd
imul
sbbb
aas
xor
cmp
sub
loope
cmp
inc
xchg
loope
jne
clc
xor
add
jnp
sub
out
sarb
mov
mov
rcll
js
test
outsl
loopne
sub
lods
lahf
lahf
xchg
call
sub
or
dec
lods
mov
mov
xchg
int3
cmp
cmpsb
push
pop
insb
mov
je
mov
arpl
mull
das
cli
mov
mov
andl
es
pop
add
push
cli
std
push
mov
daa
jge
popf
jns
pop
inc
lods
out
mov
and
insl
jmp
divl
sbb
sbb
mov
inc
cmp
mov
fdivrs
data16
xor
out
fwait
pop
scas
movsb
pop
mov
push
mov
addr16
or
mov
orb
rcrl
in
add
es
js
stc
mov
cmp
mov
push
pusha
adc
cmp
inc
xchg
scas
jecxz,pt
and
and
std
push
sbb
bound
xchg
out
sarb
sbb
mov
jecxz
outsl
testb
incl
mov
mov
int
mov
ds
rorb
in
mov
repnz
icebp
repz
push
fwait
jo
or
mov
clc
in
clc
mov
out
mov
in
mov
inc
add
xchg
push
mov
insb
xchg
push
adc
sti
jg
xor
inc
push
sarb
cmp
insb
dec
out
xor
leave
and
fidivs
mov
mov
dec
pop
imull
insl
repz
xchg
and
lret
and
fildll
cmpl
xorb
lret
inc
add
in
pop
cld
push
push
bound
nop
in
imul
cmpsb
mov
test
pop
dec
popa
mov
cmpsb
mov
movsb
cmpsl
mov
inc
test
inc
cmp
jnp
into
mov
pop
lahf
out
movsl
cmp
jl
lret
lahf
xchg
ret
lock
push
mov
mov
ficomps
les
mov
inc
push
stc
outsb
stos
out
pop
add
push
pop
jmp
and
mov
imul
cmp
mov
add
adc
mov
mov
in
jns
popa
roll
pop
jns
adc
mov
dec
shlb
pop
or
shl
xor
cmpsl
cmpsl
mov
mov
jne
int3
fdivl
insb
lcall
stos
sbb
push
cli
fdivs
and
repz
cmc
lock
pop
xchg
pop
dec
je
dec
jle
movsb
xchg
movsb
adc
or
pop
stc
push
sub
cmp
or
mov
sbb
mov
fisttps
clc
test
cmp
cmp
xor
mov
xchg
or
ret
dec
call
mov
lods
pusha
xor
mov
sub
xor
pop
cmpsb
sahf
mov
enter
gs
cmpsl
push
mov
fisttpl
push
ret
pop
dec
ljmp
loope
out
push
xchg
les
mov
or
push
xor
mov
cmpsl
outsb
cmpsb
mov
xchg
or
pop
xor
adc
ds
das
sbb
mov
aad
sub
sub
mov
sarl
inc
sub
aaa
mov
aaa
mov
and
inc
aas
mov
mov
std
mov
cmp
cmc
ds
pop
push
pop
inc
xor
jb
imul
icebp
int
inc
scas
outsl
lahf
xor
sahf
xor
sarb
inc
inc
test
jns
push
mov
xor
jnp
inc
pop
in
icebp
int3
cmp
aam
sbb
xchg
mov
es
or
ret
bound
sbb
daa
sti
inc
cmpsl
xchg
adc
pushf
ret
push
pop
outsb
fcomi
idivb
mov
push
jno
xchg
add
xor
sti
jae
ficomps
daa
stos
aam
mov
xor
sub
or
ja
adc
mov
cmp
cld
out
adc
popa
scas
mov
leave
xor
int3
repz
cld
and
jae
stos
and
inc
xor
xlat
aad
ljmp
jnp
insl
push
mov
cmp
jmp
mov
cmp
or
scas
pop
nopl
cltd
jb
mov
push
xchg
inc
sub
in
lahf
dec
jne
test
jle
jb
out
dec
les
mov
adc
xchg
or
inc
mov
call
xchg
adc
cmp
xchg
filds
jg
hlt
rol
lret
jge
jg
jbe
fsubrs
lret
mov
add
rorl
andb
add
ret
rcrl
or
testb
xchg
pop
jno
subl
sub
jb
lret
addr16
movsb
pop
lahf
repz
ret
mov
mov
push
or
dec
xchg
cltd
mov
dec
sbb
push
sbb
xor
push
data16
add
mov
scas
adc
int3
sahf
ret
jno
xor
mov
cmp
ret
dec
xor
and
mov
jecxz
div
push
in
pop
cwtl
shr
pop
dec
xchg
pop
movsb
cld
mov
insb
test
popa
fnstsw
cmp
adc
dec
or
push
jb
daa
mov
sub
in
loope
ret
add
add
dec
mov
mov
sahf
imul
in
ss
lods
scas
cmpsb
mov
sbb
push
mov
jle
or
loopne
dec
dec
fdivs
add
or
test
or
inc
and
repz
cltd
adcl
mov
xchg
mov
ficoml
jae
je
inc
movsb
out
js
scas
and
out
cmp
mov
and
mov
cmc
insb
add
xchg
test
push
xchg
push
fcoml
pop
in
xchg
xchg
test
sub
sub
pop
xor
mov
loope
sbb
lahf
orl
stos
sti
push
es
inc
shll
add
jle
out
stos
rclb
lods
lods
scas
jg
movl
loop
idivl
xor
cmp
or
pushf
mov
stc
and
out
fwait
mov
aam
or
inc
jno
pop
adc
adc
cli
shrl
lret
cmc
ljmp
jg
std
repz
call
xor
mov
dec
or
fucom
call
dec
sahf
fisubrl
loop
dec
imul
divl
inc
push
push
sub
mov
inc
or
sarb
jns
jb
inc
inc
out
shll
addr16
mov
bound
xchg
jmp
xchg
or
lods
xchg
and
pusha
mov
jbe
andl
roll
loope
mov
gs
cmc
jo
cmc
jns
fwait
jns
cli
xchg
aas
ret
lret
mov
lcall
mov
mov
test
push
mov
addl
add
leave
mov
sub
fs
test
repz
sub
cmp
cmp
jnp
cltd
lahf
stc
movb
xor
insb
mov
or
fists
xor
adc
inc
lock
shrl
mov
sub
add
filds
lods
ret
or
inc
sub
inc
pushf
stos
sbb
loopne
cmp
or
pop
mov
cmp
sar
cmp
das
inc
sbb
iret
pop
jnp
lret
popa
jnp
mov
in
ljmp
push
rol
jns
pop
in
sbb
cs
jno
loope
rcl
push
insb
push
inc
aas
sbb
and
jo
ret
dec
jo
je
dec
aas
adc
jge
xchg
gs
mov
inc
push
ljmp
leave
pop
or
shll
mov
dec
fwait
stc
dec
pusha
pop
and
and
push
lods
enter
mov
sbb
pusha
shll
nop
xchg
mov
inc
stos
stos
push
mov
pop
pop
push
mov
push
mov
adc
mov
lret
push
push
loope
xchg
ja
lds
xor
push
sub
sti
add
or
adc
pusha
inc
sbb
call
or
and
aam
pop
call
add
inc
mov
cmp
mov
mov
ljmp
daa
xchg
jae
inc
and
lea
sbb
idivl
loopne
xlat
or
pop
add
pop
aad
rcr
and
sub
push
scas
in
adc
popl
xchg
add
sbb
or
xor
idivl
adc
inc
xchg
lock
mov
dec
pop
test
cmpsl
cmp
sbb
jle
cmc
fisttpll
xor
pop
imul
mov
sub
int3
xchg
sub
mov
or
cmc
adc
imul
mov
jae
or
shl
in
iret
cld
addr16
sub
cmp
ret
mov
ljmp
xchg
mov
adc
xchg
pop
mov
mov
jecxz
std
lret
inc
fs
rorl
mov
mov
mov
and
xchg
sti
ss
add
mov
mov
sbb
or
mov
inc
pop
mov
sub
ljmp
pop
inc
lock
dec
stos
ljmp
leave
jge
cmpsb
dec
or
ds
pop
addr16
lret
pop
push
icebp
cmp
fidivrl
lret
insl
inc
pusha
cld
sbb
jge
and
dec
shlb
movsb
loop
test
shrl
mov
inc
xor
lods
pop
lcall
movsb
mov
stos
or
je
push
das
or
add
pop
and
test
lods
jne
and
mov
test
in
imul
out
dec
inc
loop
mov
sub
mov
pop
mov
mov
cmp
lret
nop
arpl
adc
xchg
push
lahf
int
fwait
mov
pop
inc
lret
fbstp
aam
inc
xchg
int3
jmp
mov
testl
aam
daa
mov
push
mov
ret
out
flds
rorb
mov
mov
dec
cmp
rol
xor
push
push
pop
repnz
sbb
cmpsl
mov
sbb
jecxz
xchg
stos
test
mov
sub
jl
ljmp
pop
out
sub
mov
xchg
or
pop
bound
fists
aaa
push
outsb
into
inc
jl
sub
lock
mov
hlt
adc
gs
cmp
add
push
stc
inc
dec
and
call
cmp
stos
push
jp
sub
mov
lcall
je
out
sbb
cmpl
pop
push
xchg
add
xor
and
mov
leave
sahf
cmp
or
jns
test
hlt
int3
push
push
mov
jo
pusha
jg
mov
add
sbb
add
nop
addr16
divb
xchg
cmpsl
sbb
push
in
jp
pop
subl
mov
movsl
pop
pop
pop
xor
cmp
sub
dec
push
and
lods
xlat
push
xchg
dec
imul
jns
sbb
arpl
pop
push
cmp
aas
bound
pop
mov
pop
cli
xchg
push
cli
mov
mov
das
fptan
sbb
inc
cmp
fwait
adc
ret
roll
test
movsl
fisubs
pop
pop
or
sbb
mov
hlt
dec
in
pop
cwtl
xor
rolb
push
push
in
xor
sbb
cs
imul
mov
mov
std
inc
repz
cmp
mov
mov
sbb
pop
sbb
push
lock
jbe
aas
lods
out
sar
adc
iret
je
push
cltd
daa
push
clc
sbb
inc
int
loope
loopne
clc
out
imul
adc
jp
push
and
adc
ss
pop
lock
fbstp
pop
sti
mov
push
das
icebp
adc
cmc
sub
cmp
arpl
xor
shl
pop
add
mov
dec
shll
mov
jns
lds
sbb
lret
bound
orb
push
push
int3
popa
inc
or
out
fucomip
outsb
jle
cmpsb
dec
jecxz
xor
push
outsl
fldenv
pop
lods
in
or
push
mov
lcall
rcrl
adc
add
pop
pushf
add
pop
pmulhuw
pop
push
push
testl
lret
pop
das
jp
xchg
pop
xlat
mov
cmp
mov
imul
adcb
cld
push
adc
jne
stc
jp
sbb
and
mov
imul
shlb
arpl
scas
andb
les
jecxz
movsb
cltd
cmpsb
mov
push
int
stos
out
jb
popa
push
xchg
ss
pop
fdivrl
push
mov
leave
insl
pop
cmc
jp
xchg
xchg
mov
test
and
mov
push
inc
mov
jns
stc
fsts
lret
stos
dec
cmpsb
add
sbb
cld
cmp
mov
insl
insb
and
mov
pop
mov
fs
shll
xchg
sub
cmp
push
push
sti
dec
jne
pop
cmpsb
iret
or
rcr
lcall
xchg
lret
jae
mov
in
imul
mov
loop
fwait
movsb
jle
ficoms
nop
or
sbb
jae
int
aas
stc
test
mov
jns
xor
sbb
das
subps
and
jo
lret
outsl
jne
lret
or
push
jne
in
push
push
and
jmp
lret
into
dec
pop
cmp
std
jg
and
adc
je
push
mov
outsl
xor
pop
jae
xchg
and
mov
or
ds
xchg
inc
iret
movsl
mov
xchg
cmp
inc
shl
inc
xor
mov
pop
mov
xor
push
pusha
mov
sbb
test
clc
xchg
repnz
int3
push
fsubp
aas
jns
imul
jo
pop
daa
cwtl
pop
add
rol
mov
pop
iret
sub
pop
int
cs
das
je
inc
mov
xchg
into
test
dec
movsb
mov
pushf
push
or
bound
or
dec
push
xchg
pop
mov
dec
mov
imul
xor
repnz
inc
push
dec
dec
repnz
movsl
adc
mov
clc
push
ret
pop
xor
fcomi
pop
jecxz
bound
and
mov
rcrb
jno
sahf
cltd
jno
pop
xor
out
sbb
pusha
arpl
scas
sub
mov
mov
in
hlt
cltd
and
js
ja
stos
cltd
ljmp
outsb
roll
and
fwait
jle
int3
inc
aas
test
popf
or
inc
loop
mov
inc
fmull
sbb
inc
in
or
or
and
mov
ljmp
insl
call
jg
lcall
pop
lds
inc
pop
fidivl
xlat
leave
fs
mov
aas
jnp
leave
scas
and
jle
fidivs
movsb
movb
sub
movsb
fsubs
arpl
push
mov
test
daa
cmp
lods
cmc
push
pop
sub
int
subl
cmp
ret
jbe
in
xchg
adc
or
in
mov
cs
sub
cmp
pop
dec
flds
xchg
je
testl
push
dec
inc
adc
pop
ret
fisubrl
scas
hlt
adc
fildll
aaa
orb
pop
loop
jno
and
rolb
jmp
mov
mov
nop
fs
pop
shr
aaa
and
mov
movsb
jno
dec
arpl
dec
push
inc
mov
xchg
pop
aaa
popa
es
ret
cmp
mov
or
sti
dec
and
adcl
jle
in
ljmp
xor
test
inc
leave
push
push
inc
sub
xor
xor
mov
subl
sub
ret
pushf
loopne
jo
inc
adc
lods
jae
scas
pop
arpl
fidivrl
mov
adc
adc
sysenter
push
push
push
mov
sbb
addr16
mov
je
shll
aad
dec
pop
fcom
adc
sbb
in
sub
push
lods
lds
add
sub
popa
insl
jp
ror
xchg
and
jecxz
movsb
dec
or
stc
cmpl
sti
lods
scas
sbb
std
push
arpl
cmc
gs
push
inc
mov
mov
fnstsw
push
sub
fmull
dec
cmpsl
and
mov
mov
xchg
daa
cmp
add
mov
inc
jmp
scas
dec
mov
mov
ficompl
inc
test
pop
ljmp
in
fwait
dec
test
sub
pop
mov
das
mov
testb
pusha
mov
out
into
push
xchg
add
lret
xor
pop
cld
mov
nop
js
push
iret
out
popa
ss
and
sbb
jp
aaa
cmp
stos
or
sarb
add
sub
xchg
mov
fistpl
add
or
notl
sub
into
scas
int
aad
xor
int
xlat
cld
test
push
test
push
aas
mov
cwtl
mov
test
xchg
lret
push
xchg
push
insb
dec
mov
xchg
hlt
xlat
pop
das
gs
scas
loope
outsl
dec
das
mov
orb
xlat
pop
insl
cld
sub
iret
push
gs
push
push
sarb
sbb
push
jg
jg
push
inc
jns
adc
xor
push
cli
sub
scas
sahf
jle
mov
insb
push
jecxz
sub
xchg
push
insb
mov
and
in
mov
imul
loop
add
in
les
xor
dec
jp
xlat
mov
mov
lcall
dec
rorl
in
repnz
pop
mov
push
push
lods
mov
popf
fists
pushf
mov
pop
cmp
call
lea
mov
fstpt
mov
loope
pop
shl
cmp
int3
jae
sub
push
adc
int3
pushf
xlat
mov
into
push
push
lret
shlb
inc
and
cmp
push
xchg
ljmp
shr
aam
xchg
jg
lea
mov
push
clc
inc
fists
popa
jns
sbbl
enter
cltd
insl
aas
pushf
inc
mov
adc
sbb
push
xor
stos
das
mov
call
pop
arpl
ds
xchg
inc
sbb
std
jo
loope
std
sub
mov
push
dec
std
adc
clc
loop
inc
sub
fcompl
xor
xchg
cmpsb
and
fcmovu
test
dec
aam
jmp
dec
pop
or
jecxz
popf
xor
inc
fmuls
jp
sbb
pop
std
cmp
insl
popf
movsl
xchg
adc
sbb
std
pop
bound
mov
cmp
push
popaw
mov
pop
ja
jecxz
lea
das
jae
in
and
bound
call
inc
push
xor
cmp
ja
mov
xor
and
jp
dec
insl
shlb
lods
add
cmp
mov
movsb
mov
push
aaa
lock
lods
daa
iret
push
push
and
hlt
loop
and
int3
mov
bound
mov
outsb
jecxz
test
jle
mov
jns
xor
gs
fdivs
arpl
pop
ss
xchg
sti
mov
cmc
xchg
xlat
mov
jecxz
mov
scas
inc
jb
movsb
rclb
nop
inc
and
push
bound
insl
shl
or
lahf
push
loop
sub
mov
in
inc
jae
cltd
dec
add
sbb
or
jmp
aas
dec
inc
cmp
sub
push
rclb
jp
sbb
mov
sti
mov
cld
loopne
scas
clc
mov
adc
jne
call
bnd
data16
add
notl
loope
xchg
xor
es
cltd
stc
leave
lret
jns
aad
pop
ret
sbb
orl
pop
adc
dec
aas
aas
ffreep
into
hlt
into
inc
cltd
sub
mov
mov
sbb
stc
inc
fistpl
call
int
cmp
jecxz
ret
sti
xchg
xor
cmpsb
or
lret
push
or
or
scas
add
dec
lods
adc
push
int
fimull
pop
mov
insl
lret
cwtl
rclb
roll
push
ja
mov
loope
cmpsb
js
and
pop
std
add
scas
push
cmp
cmp
mov
push
inc
xor
cmp
aaa
test
add
out
jge
ja
xchg
push
popf
divb
pop
and
in
xchg
call
push
aad
inc
subl
out
push
out
sbb
xchg
in
dec
push
mov
cmc
cmpsl
or
mov
cld
xchg
mov
mov
cld
sbb
push
mov
loope
dec
xchg
push
fisttps
fdivs
mov
pushf
pushf
pop
dec
lcall
mov
xor
xor
sub
aam
adc
push
cmp
sbb
xchg
int
nop
gs
push
mov
sbb
bnd
ret
daa
orl
push
test
pushl
add
ret
call
test
push
push
push
add
xor
dec
mov
pushf
rcll
inc
insb
sbbl
movsb
push
xorb
fwait
cwtl
jmp
mov
gs
add
sub
mov
sahf
and
std
sub
aam
jge
adc
jb
jno
dec
pusha
sub
ret
test
and
dec
adc
jle
ja
lock
lahf
and
mov
push
stc
fdiv
xor
lret
stc
mov
xor
xchg
inc
add
repnz
mov
sub
test
fs
fwait
in
call
imul
mov
pop
xchg
push
sub
push
orb
dec
rolb
mov
in
add
xchg
ljmp
sbb
push
sub
stos
std
nop
js
mov
dec
leave
adc
mov
lds
rcll
cmp
lods
je
and
je
pop
pop
das
inc
and
aas
pop
fbstp
das
bnd
mov
out
mov
out
xchg
insl
jp
jns
test
jbe,pn
adc
into
jo
cmp
stos
and
mov
shll
daa
sarb
mov
xchg
repz
dec
mov
mov
jbe
mov
repz
sti
lds
rcrb
and
add
push
jg
mov
and
xor
jo
and
inc
xor
mov
enter
test
mov
fcmovu
cmpsb
decb
adc
dec
push
jmp
cmp
sbb
out
out
test
mov
xchg
add
mov
dec
lahf
mov
push
sbbl
inc
xchg
lcall
pop
iret
insb
push
add
cltd
pusha
cs
test
cwtl
addr16
testl
dec
ljmp
mov
adc
xchg
cmpsl
movsb
ret
jge
in
leave
inc
pop
pop
dec
or
outsb
jnp
xchg
and
test
pop
mov
ficompl
lret
daa
inc
lahf
mov
lcall
arpl
bnd
or
in
setne
rolb
es
sbb
cs
pop
and
mov
cmpsl
xor
and
sti
dec
jbe
out
jne
inc
std
imul
pop
mov
mov
lea
pushf
out
std
pop
in
in
inc
mov
and
adc
enter
push
xchg
movb
int
movsb
dec
jbe
add
pop
jne
data16
lret
ss
insb
sbb
enter
sbb
mov
test
mov
push
inc
inc
mov
mov
std
pop
scas
push
ja,pt
xor
adcb
add
lea
mov
hlt
negb
ficompl
out
shr
outsl
sbb
testl
xchg
orl
jnp
push
fnstenv
rcll
ret
adc
jp
push
jae
int
imul
dec
inc
lds
scas
jne
xlat
aaa
jge
pop
fdivrs
push
mov
jl
mov
xor
shlb
sub
fadds
outsb
adc
dec
adc
scas
test
nop
jle
xchg
scas
pop
xor
mov
mov
cltd
popa
jbe
pusha
xchg
mov
xchg
dec
cmp
add
add
sub
push
aaa
scas
int3
mov
ja
adc
loopne
pop
xor
in
fs
sbb
pop
cmpl
lods
cmpl
dec
push
pop
fiaddl
in
adc
xor
out
cmp
mov
xorb
shrl
hlt
outsl
stc
mov
dec
or
mov
push
or
jle
mov
testb
std
fbld
sbb
and
pushf
out
test
pop
in
js
push
daa
jns
in
and
xchg
movsl
or
call
stos
enter
insb
fwait
lods
pop
dec
fldl
adc
pusha
xchg
inc
mov
mov
sbb
leave
lds
mov
stos
jge
rcll
adc
popf
mov
jb
sub
cmp
pop
lahf
shrl
mov
inc
dec
fistpll
push
jge
jmp
inc
ja
mov
loopne
ja
add
into
xchg
in
and
lds
or
mov
fildl
das
sbb
fsts
cltd
ret
mov
loope
bound
outsl
xor
dec
es
push
sbb
cli
pop
pop
mov
fsubl
inc
or
bound
dec
scas
in
mulb
stos
pop
push
sbb
popa
jmp
xorb
aam
jae
and
cmp
lret
mov
mov
bnd
repz
jg
adc
dec
ja
mov
xor
pop
xchg
jl
mov
sub
xor
sbbb
push
cmp
pop
insl
push
adc
ljmp
shlb
out
ret
mov
jle
mov
pop
xor
push
lds
daa
data16
lock
inc
scas
cs
cmp
mov
je
scas
xchg
xlat
add
arpl
mov
inc
pop
enter
sbb
xor
test
cmpsl
ror
sti
jnp
pop
add
add
mov
lcall
stos
dec
pop
cmp
daa
pop
imul
rcll
iret
aad
movsb
ret
jb
cmc
out
xchg
jbe
jl
dec
ds
fwait
mov
lret
test
mov
jns
add
inc
clc
mov
mov
inc
dec
arpl
push
or
pop
in
sbb
inc
out
sbb
sub
or
adc
inc
push
mov
repz
pop
mov
sub
push
loop
outsl
inc
sar
sbb
sbb
mov
sbb
icebp
outsb
jge
jno
jno
mov
mov
xchg
sti
pop
and
dec
dec
adcb
sti
adc
addr16
or
dec
add
xchg
ss
sbb
arpl
insl
xchg
es
icebp
inc
cmp
cmp
mov
push
loopne
add
inc
jmp
cmc
mov
icebp
cmc
jno
nop
aaa
aas
pop
pop
inc
and
lods
stos
adc
mov
stos
fidivs
jecxz
mov
fistps
insl
hlt
je
test
stos
sub
adc
fdivr
mov
js
adc
ret
test
dec
push
int3
divl
dec
push
imul
js
cmp
add
adc
daa
std
mov
cmpsl
jp
push
jne
cmp
dec
add
insb
adc
adc
adc
push
adc
fiaddl
inc
cmp
mov
cwtl
mov
jo
out
ss
sub
enter
push
mov
fimull
cmpsb
mov
leave
jo
les
jo
insl
outsb
lods
xchg
not
dec
into
in
ljmp
or
sub
jmp
jo
inc
outsb
dec
inc
cmpsb
jecxz
push
mov
cli
pop
lret
lods
xor
xor
mov
insb
xchg
and
xchg
xorl
inc
sub
or
push
inc
lret
fimuls
add
loopne
sub
sti
test
faddl
into
jno
adc
into
out
push
push
sbb
sbb
std
push
cmpl
mov
jp
cmpsb
in
inc
adc
mov
mov
pusha
loop
fmuls
xor
pop
imul
adc
cmp
movl
sbb
cmp
inc
insl
scas
xchg
cli
rorl
repnz
js
adc
test
iret
call
sub
jle
ja
outsb
add
pop
fldt
loop
sbb
push
xchg
xor
mov
jb
cmpsb
negb
lods
xor
out
cmp
sbb
inc
xchg
lods
add
test
push
ret
lret
mov
pusha
mov
and
cmp
dec
adc
and
shlb
mov
xor
sar
inc
jb
push
pushf
push
lret
dec
inc
xor
movsl
insl
push
stos
sbb
rcrb
or
and
leave
pop
pop
mov
lret
mov
adc
push
xor
dec
inc
pushf
jns
test
or
sub
mov
mov
lcall
jle
fildll
data16
push
or
in
mov
xchg
outsb
cs
ret
push
xchg
int
incl
mov
imul
sub
movsb
push
icebp
imul
cmp
movsl
dec
and
fbld
and
pop
xor
pop
pushf
imul
test
add
adc
and
dec
pusha
imul
nop
out
push
add
fdivs
insb
je
inc
xor
pop
std
psubd
incl
pop
mov
fsubl
mov
fisubl
arpl
inc
pusha
jb
daa
cs
inc
mov
mov
scas
jns
pop
cwtl
xchg
mov
sub
xchg
cltd
xchg
mov
icebp
cmp
test
or
add
mov
ljmp
pop
jnp
add
add
ss
add
mov
out
mov
mov
pop
scas
lods
sub
xchg
jecxz
jno
icebp
out
adc
sbb
sti
sub
jl
or
xlat
cmc
sbb
pushf
dec
jb
jle
mov
mov
inc
xor
jge
cmpsl
mov
or
cmpl
pop
int
sub
stos
mov
push
sahf
cmc
cld
sub
xchg
ds
ficomps
mov
aaa
cmp
pop
cmp
mov
rclb
into
lock
push
mov
mov
lea
lds
shrb
fsub
js
push
lret
dec
mov
test
or
add
enter
ret
inc
andb
mov
jle
pop
push
xor
pop
xor
jl
nopl
stos
dec
pop
dec
sub
sub
jl
mov
mov
jno
fcompl
fsubrs
inc
dec
cmp
loopne
push
scas
scas
loop
lret
mov
mov
cmpsl
ret
jnp
test
stc
mov
js
test
fidivrl
ficompl
cld
mov
loopne
lds
sbb
idivl
std
push
hlt
push
in
adc
cmp
ja
mov
arpl
lock
movsb
std
lds
testb
mov
outsb
cmp
out
imul
mov
cs
lahf
fs
das
jns
int3
xor
repnz
jns
movsb
cltd
and
or
stos
int
jnp
cwtl
incl
jl
gs
or
xor
test
inc
adc
xor
add
jbe
jnp
push
and
inc
call
push
push
subb
cmp
mov
pop
mov
dec
inc
xor
shll
mov
add
mov
nop
sbb
mov
loopne
scas
pop
sub
cmp
xor
mov
push
push
mov
or
call
dec
mov
je
push
pop
insb
dec
mov
adc
inc
sbb
sub
or
rcrl
es
jne
pop
mov
fists
imul
jns
rcrb
cmp
in
dec
repnz
add
stc
gs
mov
lock
adc
push
jmp
jno
lcall
loope
inc
mov
and
aad
xor
cmc
jb
adc
jecxz
pop
inc
data16
dec
fistpl
and
addr16
movsb
dec
sbb
rclb
jae
xor
mov
movsl
pop
mov
inc
cli
out
or
sub
xlat
sub
popl
loopne
fidivs
sbb
sub
ficomps
int
sahf
sub
lds
ds
mov
mov
rcrb
fs
sbb
test
inc
or
decl
in
cmpsb
cmp
cmp
mov
push
and
xchg
adc
stos
outsl
sahf
add
sbbl
les
push
dec
fidivs
rcr
add
fnstsw
cmpsb
arpl
jle
aaa
or
outsb
lret
mov
test
ficomps
rclb
xor
and
or
fcomps
xchg
xchg
push
imul
mov
test
repz
adc
mov
inc
aas
imul
in
inc
mov
orl
mov
call
and
mov
mov
cmp
sahf
and
inc
lock
mov
lea
mov
into
or
adc
inc
pop
lock
scas
mov
pusha
mov
lods
mov
out
mov
mov
int
scas
mov
mov
or
movsb
icebp
jbe
inc
test
pop
sub
enter
cmp
cmp
inc
xchg
or
jae
xchg
cmp
sbb
mov
adc
push
daa
cmp
aas
adc
sbb
mov
out
or
mov
cwtl
push
testl
aas
sbb
ss
ret
lds
out
pop
ljmp
ss
pop
add
stos
xlat
adc
pop
sub
add
and
dec
cmpsb
std
and
inc
push
sbb
mov
mov
daa
mov
repz
int
sbb
mov
mov
cmc
jle
clc
cltd
ljmp
out
push
hlt
sbb
fs
je
add
sbb
jecxz
mov
stc
mov
dec
cmc
loop
ret
cld
inc
hlt
in
outsb
jmp
mov
lock
sti
or
xchg
out
test
sar
lahf
jl
inc
movsl
dec
ljmp
cmp
hlt
std
adc
dec
jp
cmp
loop
mov
cmc
lret
inc
lret
cmp
xorl
sub
mov
inc
mov
mov
aas
jg
aad
dec
dec
addr16
testl
pop
fmull
cmp
push
ret
inc
aaa
jmp
stos
cmp
dec
fdivrs
xchg
insb
pop
fstpt
cs
imulb
push
fsubl
repnz
xchg
and
inc
sub
jecxz
or
pop
add
roll
adc
fimull
xchg
pop
dec
xchg
xchg
arpl
ljmp
aad
pusha
xchg
sbb
movsl
jl
or
rcll
add
in
out
jb
and
mov
flds
fdivrs
jb
jnp
xchg
sub
or
dec
push
lods
outsl
mov
xchg
mov
out
fsubrl
lods
adc
cmp
mov
gs
jp
jg
in
dec
fdivp
aas
mov
push
cmp
sbb
cmp
lret
or
leave
insb
push
repnz
push
std
fsubrs
cmp
push
roll
call
lea
mov
loop
das
sbb
pop
xor
xor
cmp
fnstsw
add
icebp
and
jbe
lock
outsl
adcb
fmuls
ret
jp
in
and
jae
mov
pusha
pop
pusha
and
mov
mov
rcrl
adcl
or
outsb
out
xchg
adc
scas
add
lock
jmp
cld
sub
outsb
jbe
mov
mov
int3
fsubrl
aad
jb
jp
loope
add
xorb
xchg
adc
cltd
emms
xchg
sti
nop
push
add
or
icebp
push
cmpsb
xor
aaa
adc
sub
mov
sub
cld
jns
sbb
push
push
push
in
jb
ret
sahf
ds
and
xchg
lods
test
dec
jle
mov
xor
sub
and
push
cli
xor
in
into
fisttpl
out
clc
insb
sbb
or
push
and
ret
ja
scas
or
in
cmpl
loopne
mov
clc
fbstp
int3
sub
add
js
xor
loope
bound
fwait
pop
sbb
imul
inc
dec
in
lret
dec
lret
into
test
dec
lods
xchg
lea
leave
inc
sbb
mov
push
pop
ror
xlat
sub
cmpl
push
cmp
inc
or
xor
in
xor
inc
adc
pop
sub
aaa
rorl
lret
in
lahf
ja
dec
cltd
mov
scas
mov
sub
sbb
nop
mov
mov
ja
push
scas
call
fisubl
ljmp
sub
cld
imul
inc
xlat
int
xor
test
pop
loop
cmp
pop
add
mov
cwtl
negb
fidivrs
mov
hlt
insb
add
push
xchg
dec
ror
sbb
xor
jp
xchg
cmp
or
aas
or
cmp
nopl
mov
sbb
dec
sub
adc
movb
xor
mov
hlt
mov
ja
dec
sahf
daa
shrl
xlat
pop
lods
sub
cld
je
adc
add
cmpsb
cmpsl
aaa
rcrl
orb
jb
cmp
fs
dec
mov
adc
cmp
sub
xchg
pop
hlt
or
xchg
xchg
iret
xor
sub
mov
jbe
pop
ja
repnz
push
sbb
enter
cmp
in
movb
cwtl
sbb
inc
testl
ja
test
adcb
jno
or
jecxz
mov
daa
fildl
das
push
stc
cmpsb
inc
mov
sbb
xchg
lcall
push
mov
aad
insl
sbb
in
rorl
cmp
mov
cmpsl
lret
pop
add
sbb
inc
inc
and
addr16
sbb
cmpsl
fwait
mov
nop
test
add
stos
add
int3
in
pop
sub
cld
jecxz
js
xchg
fsubrl
aaa
xor
fwait
or
sub
mov
mov
sarl
rol
pushf
repnz
xlat
cltd
push
iret
mov
lret
rcll
adc
test
out
clc
insb
sbb
bound
mov
push
and
cwtl
or
inc
pop
cwtl
xlat
addb
mov
dec
fsubrl
pop
mov
mov
push
fldt
outsl
shrl
xadd
lods
rolb
mov
lahf
jo
in
dec
pusha
adc
dec
adcl
push
jno
fcoml
mov
insb
dec
add
mov
ljmp
dec
pop
push
cmpsb
in
test
push
xchg
xchg
push
sti
cli
add
out
dec
daa
jecxz
adc
add
into
sub
push
loopne
jae
mov
jle
and
adc
daa
xchg
jbe
xchg
pop
gs
out
jne
and
aaa
push
lret
fs
mov
divb
push
dec
mov
jp
push
jp
in
in
aaa
push
stc
call
push
notl
xor
hlt
outsl
ret
sti
and
jo
nop
cld
xlat
jo
les
int
repz
or
sub
dec
xchg
pop
inc
lods
std
std
sarl
rcrl
xor
add
xchg
sbb
push
call
lock
mov
mov
sbb
mov
pop
jg
add
addr16
ja
out
push
loop
pop
fnstcw
lea
adc
dec
dec
and
cli
addr16
ret
repnz
add
addr16
cld
cmpsb
xchg
cli
push
jb
leave
jno
xchg
aam
cmp
cmc
outsl
int
roll
ss
sahf
lock
sub
push
dec
add
mov
mov
mov
mov
dec
xchg
cmp
xchg
mov
pop
scas
mov
sahf
fnstenv
mov
addl
or
lret
jge
jle
push
lock
add
lock
xor
xchg
push
or
dec
lods
xchg
or
sbb
xchg
push
sarb
xor
inc
inc
or
jg
testl
into
ljmp
std
push
push
movsb
xorb
sbb
pop
add
jno
mov
stc
sbb
ret
insl
in
cltd
mov
cmpsb
les
cli
repnz
mov
scas
mov
pusha
sbb
xchg
jecxz
push
add
inc
xor
leave
negl
lea
outsl
fs
shr
sub
inc
shlb
adc
dec
sub
das
rcrl
aam
push
jp
xor
dec
sahf
xchg
fwait
cltd
cmc
sbb
imul
lods
push
loopne
andl
mov
rorb
and
fwait
mov
dec
outsb
jg
adc
cmc
xlat
stos
mov
mov
cwtl
loopne
nop
andb
and
cmp
in
xlat
aas
add
cmpsb
jle
dec
sahf
in
pushf
jl
enter
insl
cli
test
outsl
stos
into
cmpsl
sub
mov
mov
jo
out
cmp
sub
push
ret
push
dec
add
stc
hlt
pop
pushf
loopne
pop
jo
ss
subl
out
inc
es
mov
lret
cmc
inc
ret
hlt
out
mov
fwait
in
jle
mov
lods
xchg
sti
mov
inc
jns
jb
clc
jg
sub
pop
scas
pop
fistl
mov
out
sub
or
call
in
lret
xor
mov
clc
pop
movsl
jge
imulb
dec
fidivs
xor
lahf
cmp
jae
xor
outsl
adc
mov
jle
in
test
orb
or
add
sub
arpl
add
dec
adc
rorb
jo
movl
das
mov
inc
xor
inc
jg
rolb
push
ljmp
add
mov
lds
dec
aad
xorl
pop
mov
int
out
xor
adc
cltd
leave
cmp
pop
mov
aad
add
lock
inc
dec
mov
mov
xchg
sub
or
lcall
aas
roll
mov
jnp
lret
or
jp
pop
lock
adc
push
cmpsb
ss
push
nop
fsubrp
imul
xor
jno
and
jecxz
ret
push
sahf
bound
sub
pop
mov
mov
aas
jbe
mov
cmpsl
pslld
testb
pusha
add
add
adc
popf
loop
xchg
pop
lods
mov
cltd
mov
adc
adc
pop
ja
xor
imul
mov
mov
mov
das
lcall
add
incb
pop
xchg
popa
dec
mov
popl
cli
jge
pop
push
int
in
pop
dec
cmp
cmc
or
dec
push
add
push
sub
adc
enter
testl
inc
shlb
jo
loop
or
fdivp
test
xor
push
scas
loop
and
mov
dec
pop
loop
push
sarl
lcall
out
icebp
jno
jbe
xchg
or
jno
mov
mov
lds
cmp
pop
sarb
or
jne
rcrl
adc
push
sbb
mov
inc
push
ficoml
jne
jmp
pop
inc
addr16
arpl
fistpll
ss
pop
fisttps
push
sub
jl
fs
clc
pop
dec
inc
ja
mov
push
sub
push
xchg
adc
icebp
jp
jb
std
cmp
push
out
mov
or
mov
lret
jbe
call
cltd
stc
sbb
je
icebp
es
mov
or
dec
cmc
cmp
clc
into
jbe
int3
push
test
pop
pop
std
pusha
out
test
fisubrl
mov
int3
es
lock
inc
adc
dec
imul
add
pop
ficomps
pusha
adc
inc
aas
popa
repnz
jno
jle
push
dec
add
lretw
jb
icebp
xor
out
push
jae
or
mov
and
lret
sub
icebp
fidivl
mov
rcr
test
push
leave
mov
or
loop
ja
pop
in
stos
cli
sahf
sub
cld
xchg
jb
add
add
mov
lock
addr16
jbe
fstl
es
cmpb
and
dec
ja
sbb
scas
mov
cmp
push
adc
sahf
imull
loope
push
imul
dec
or
repnz
and
xor
push
mov
lods
in
and
repz
subl
jg
jge
ljmp
dec
sub
add
addr16
sub
sbb
push
push
pop
fstpl
adcb
or
push
sub
mov
cltd
sub
xlat
add
push
stc
add
xchg
out
js
insb
aaa
mov
cmc
shll
loope
xchg
jnp
ss
dec
sub
fiadds
iret
stc
into
mov
mov
mov
sar
fldt
imul
inc
add
mov
insb
scas
and
jmp
adc
cmp
clc
pushf
movsb
push
jmp
sub
adc
lret
adc
ljmp
xchg
adc
jbe
inc
pop
dec
pop
xor
sub
outsb
xchg
aad
jae
xchg
loop
dec
mov
fimull
or
shrl
je
ret
jge
xor
inc
mov
out
outsl
mov
cltd
lahf
cmpsb
sbb
jns
movsb
sbb
pop
xchg
test
cltd
xchg
cmpsl
push
hlt
gs
adc
push
dec
push
adcb
push
scas
push
ror
lods
enter
xor
push
mov
addl
jp
push
mov
hlt
cwtl
insb
and
xor
mov
pop
mov
sbb
test
pusha
nop
mov
out
inc
addr16
test
mov
out
lock
lods
mov
out
negl
dec
enter
mov
jns
jle
dec
sub
ljmp
es
pop
mov
dec
dec
jno
or
in
and
icebp
fidivl
dec
je
xor
add
pop
icebp
xchg
lret
adc
xchg
xor
xchg
das
cltd
jl
dec
fcoml
mov
cltd
ds
pop
adc
dec
test
pop
gs
jno
push
in
enter
jg
and
mov
jge
fdivs
in
cmp
lret
cmp
test
fs
xchg
jmp
insb
add
and
mov
mov
lea
ret
lods
sbbb
loopne
mov
add
scas
pushf
das
xchg
lahf
lret
test
mov
int
add
push
ret
rorl
push
pop
mov
or
cmp
xchg
test
mov
int
lods
dec
nop
sub
adc
mov
jle
jecxz
outsl
dec
leave
mov
cmp
repz
mov
int3
push
arpl
incl
ret
imul
sbb
adc
test
or
mov
mov
xchg
mov
shll
cltd
cmpsl
aad
xchg
fstpt
add
mov
rcrb
icebp
sbb
arpl
pop
vmwrite
xchg
adc
int
add
mov
cltd
xchg
mov
and
cmc
mov
pushf
data16
jecxz
popf
ss
dec
hlt
pusha
shl
jae
stos
fcmovnu
pop
movsb
lahf
inc
fisttpl
sbb
push
bound
jecxz
xor
imul
out
mov
decl
sbb
aad
adc
aas
pop
inc
std
cs
sub
or
nop
mov
sub
popf
call
and
adc
sahf
sahf
out
mov
inc
xchg
stc
gs
pushf
mov
mov
daa
mov
jns
in
jne
or
ret
loope
cmp
lea
push
push
pop
dec
sbb
outsb
push
daa
inc
les
cld
test
and
out
adc
add
jge
push
cmpsl
iret
fsubrl
leave
mov
out
mov
cmc
pop
mov
ret
jle
pop
jmp
or
lock
inc
scas
xchg
js
and
ds
push
mov
leave
js
mov
and
addb
faddl
xchg
stc
bound
popa
jecxz
cmp
jp
pop
cmp
inc
jp
sti
sbb
inc
jno
mov
loop
mov
outsb
xchg
outsl
adc
ficompl
in
pop
mov
jbe
adc
adc
adc
cmp
aaa
bound
popf
shll
repz
jo
mov
sahf
jbe
xor
nop
xchg
or
jle
mov
in
sub
mov
and
mov
cwtl
xchg
sub
or
std
push
pop
ret
sub
fidivs
decb
push
sbb
imul
scas
roll
mov
inc
mov
andl
test
jns
sbb
cli
fildll
xchg
cmp
enter
mov
jecxz
insb
mov
shll
stos
outsl
add
cltd
into
mov
es
nop
push
xchg
inc
sbb
divl
insl
jle
push
xor
cmp
sub
dec
mov
imul
cmp
pop
fimuls
mov
dec
inc
shrl
fwait
cmc
pushaw
out
out
popf
mov
loop
das
outsb
sub
pop
or
lcall
enter
int
ja
or
in
cmpsb
sub
test
fdivrs
test
sbb
adc
rorl
popf
xorb
jg
mov
cmpsb
mov
inc
ds
push
imul
adc
ret
xlat
sahf
xor
es
fsts
sub
ss
cs
jae
sub
mov
in
and
test
ss
gs
cltd
mov
pop
push
push
or
push
push
and
mov
cld
mov
test
pushf
pop
cs
mov
loope
imul
push
dec
or
xor
sahf
outsb
cli
jmp
das
xor
daa
mov
movsl
dec
xorl
or
and
jbe
imul
gs
xchg
push
mov
sub
push
sub
cmpsl
jmp
adc
mov
mov
jno
imul
scas
fistl
fstps
out
ss
pop
push
dec
dec
movsb
orb
add
rcrb
mov
fwait
push
mov
cmp
aad
test
mov
inc
jg
out
outsb
cmpb
les
or
outsl
stos
testb
adc
clc
scas
jmp
repz
arpl
cmp
fdivrl
add
cli
mov
ficomps
xor
push
les
push
outsl
out
dec
fsts
and
movsl
push
and
mov
fcmovne
and
inc
sbb
push
jmp
rcrb
ss
adc
mov
ret
aas
push
mov
je
mov
mov
ss
ja
sbb
add
xlat
hlt
and
cmp
mov
sbb
mov
rorb
add
dec
in
sbb
adc
xor
jnp
lahf
jne
call
or
add
push
xor
lea
mov
scas
pop
insb
mov
iret
stos
out
outsb
add
fildl
pop
shrb
lods
inc
cs
pusha
jbe
pop
and
je
sub
jmp
cmp
and
aas
fisubl
and
inc
or
mov
pop
fisttpl
add
adc
pop
imul
cmpl
rcrl
push
repnz
repz
mov
cmp
ss
ds
aaa
dec
sbb
addr16
bound
mov
add
loopne
js
cmp
lcall
test
ficomps
test
clc
mov
push
lret
sbb
pop
mov
adcl
out
sub
stos
enter
out
mov
cli
add
mov
pop
out
pusha
add
cmp
ljmp
cmpsl
insl
mov
cmp
jge
pop
mov
sub
and
fiaddl
xchg
pop
push
shlb
inc
movsb
leave
pop
aam
jbe
aad
inc
cmp
and
sbb
cs
insl
cli
adc
mov
mov
lock
test
jb
loopne
dec
push
insb
dec
push
in
pop
arpl
in
stos
xor
xorb
stos
xor
out
cmp
es
mov
cmp
lods
pop
mov
jns
pop
adc
int
xchg
push
int3
xchg
mov
dec
jl
xchg
cmp
push
mov
cli
adc
loop
cmp
dec
dec
mov
jo
nop
mov
sub
fdivrl
outsb
in
lock
mov
cmp
aaa
inc
inc
imul
addr16
mov
xchg
pop
inc
je
incb
cmp
ffreep
fs
imul
mov
mov
fsubs
and
je
rclb
sub
repnz
cmp
movsl
jmp
gs
div
cmp
adc
pop
sahf
jbe
inc
lods
add
rclb
push
lea
mov
jle
dec
in
mov
into
dec
push
jno
lret
int
call
sbb
cmp
shl
sub
sub
inc
out
ss
in
jns
test
hlt
mov
xor
test
sbb
enter
out
dec
mov
insl
jmp
push
aad
imul
dec
shlb
sub
ret
pop
xor
add
bound
adc
xor
xchg
sbb
xor
sbb
cmp
dec
fildll
scas
sti
push
into
fsubs
push
mov
cmp
push
or
or
test
outsl
ret
shrb
fcmovnbe
imul
mov
sub
sbbb
clc
xchg
divl
leave
lahf
sbb
push
adc
arpl
ja
xor
movd
adc
cmpsl
js
int
add
dec
pop
inc
mov
add
and
fstl
xchg
mov
out
pop
iret
xchg
sub
shll
imul
mov
jecxz
loop
daa
sub
js
xlat
divb
mov
sti
dec
xchg
mov
jl
sub
data16
cmp
imul
shrb
xchg
mov
lods
movaps
repz
es
mov
popf
dec
loopne
scas
hlt
data16
or
xchg
sbb
jne
in
nop
orl
iret
imul
ss
fisubrl
add
in
adc
jmp
fidivl
mov
xor
mov
cmp
xlat
inc
mov
mov
xlat
in
lds
xor
pop
jb
mov
nop
in
mov
mov
ret
outsl
imul
mov
lcall
xchg
mov
cmpsb
icebp
sbbb
and
data16
nop
popa
jnp
lds
adc
leave
mov
fists
pusha
mov
add
dec
push
fistl
add
jne
pop
es
fs
in
pop
sub
ljmp
daa
adcb
scas
mov
out
adc
rol
and
ljmp
mov
sub
pop
cmp
xor
xchg
fmul
and
cmpl
push
sahf
std
aaa
in
fsts
adc
mov
xor
gs
out
fsubr
mov
mov
and
repnz
rcll
mov
mov
pop
out
and
jns
je
aaa
orps
mov
int3
out
lret
imul
out
inc
pop
fadds
lods
mov
rol
or
push
mov
jo
adc
push
cmp
adc
mov
iret
push
sub
test
es
inc
cmp
fisttpll
mov
cmp
adc
mov
cli
mov
sbb
xor
fimull
pop
sub
stos
jo
or
inc
lahf
cwtl
or
sub
ret
pushf
leave
aad
js
icebp
mov
hlt
lahf
sar
in
movsb
mov
pop
fmuls
rolb
mov
sub
filds
sahf
mov
mov
xorb
push
shr
xchg
dec
xor
pop
lods
data16
mov
inc
daa
out
testl
mov
mov
add
and
lds
jbe
push
and
dec
shr
fldcw
pop
pop
pop
cmpsb
fdivl
jp
mov
popf
mov
add
movsb
pop
adc
or
jno
mov
jae
sahf
arpl
push
jb
jle
and
std
pop
mov
ljmp
cmp
outsb
jmp
adc
dec
icebp
xor
shlb
cmp
cmp
clc
mov
adc
fsubs
loope
iret
dec
jb
shr
sub
loope
lahf
inc
lods
sbb
mov
addb
arpl
mov
push
add
clc
pop
xchg
sub
mov
fnstsw
in
movb
inc
add
fucomi
or
xchg
nop
push
xchg
cmp
stos
clc
ds
call
mov
dec
js
jb
jns
icebp
inc
mov
je
lds
test
stc
cltd
mov
inc
lahf
popf
test
add
mov
mov
out
add
hlt
cwtl
test
mov
out
loopne
adc
push
sub
inc
mov
mov
xlat
lods
inc
or
xchg
adc
inc
popa
mov
dec
sahf
add
jl,pt
push
ljmp
aad
inc
ret
jbe
ja
pop
pop
pop
loope
add
push
pop
ds
addr16
push
daa
movsl
push
dec
jl
sub
cmp
sahf
push
ja
lods
xor
test
mov
cmp
mov
test
push
mov
jp
mov
sbb
jb
stos
mov
sbb
sbb
incl
cmpsl
repz
into
jmp
push
xchg
xchg
loope
mov
in
jnp
jno
loop
push
adc
xchg
movsl
sbb
xchg
or
call
or
mov
adc
fdiv
sbb
adc
add
daa
xchg
testl
cltd
push
mov
int3
mov
pop
xchg
dec
sbb
outsb
jnp
adc
flds
xor
ss
scas
sarl
divb
xor
inc
test
mov
icebp
dec
int
cmp
sbb
inc
ficomps
adc
lock
test
and
cmp
xor
mov
add
mov
js
sbb
lahf
sub
push
cmp
loop
cmpb
sub
jno
fdivp
pop
jae
js
xor
rolb
push
andb
bound
ror
out
pop
adc
pop
test
sbb
cmc
pop
ret
aad
mov
lods
testl
movsb
outsl
fs
sbb
mov
inc
sbb
mov
and
movsl
xor
lret
cltd
cmp
test
das
xor
xor
fiadds
data16
testl
cmp
and
jns
aaa
pop
sub
jge
dec
in
shrb
jb
pop
push
cmp
stos
mov
or
test
ds
pushf
mov
pop
cmp
cmp
imul
adc
pop
mov
in
shlb
cmpsb
sub
addb
and
aam
cmp
in
cmc
push
shrb
cmp
xor
push
dec
ror
fsts
xchg
xor
sbbl
sarb
sahf
mov
aad
adc
outsb
jae
in
pushf
aas
or
cmpsb
out
neg
mov
push
es
arpl
or
pop
cli
sub
int
int3
push
push
xchg
adcl
xchg
fistpl
and
push
das
cmpsl
xchg
mov
and
xor
mov
lahf
sbb
mov
int
xchg
add
jne
lods
out
pop
shlb
mov
pop
aas
lods
jp
lcall
out
xchg
shl
repnz
test
cmpsl
or
lahf
jge
jmp
push
fildll
cld
lcall
ret
push
jmp
lods
cwtl
cli
sbb
pop
popa
inc
sbb
or
ljmp
adc
stos
mov
aaa
xchg
or
xchg
jo
push
dec
xchg
mov
ret
jae
dec
xor
je
lcall
xor
dec
mov
arpl
mov
sub
sbb
movsb
add
dec
mov
nop
jb
scas
xor
pop
add
test
dec
adc
fstl
ljmp
jno
cmpsl
jo
mov
in
mov
push
les
mov
sub
add
repnz
movsl
inc
mov
adc
inc
xchg
out
mov
mov
sbb
sarl
test
ja
push
dec
ljmp
fwait
mov
cltd
cwtl
mov
out
dec
adcb
pop
es
dec
pop
xchg
adc
inc
mov
add
xchg
dec
pop
xor
jo
xchg
cmp
stc
xlat
sub
sti
mov
ja
sbb
jo
rorl
push
mov
jecxz
lcall
sub
or
pusha
shlb
dec
sub
push
sub
add
sub
inc
xor
adc
cmp
mov
jo
lock
add
repnz
mov
xlat
sbb
pop
xchg
pop
outsl
sahf
xchg
xor
xor
push
pop
add
stc
scas
lret
icebp
call
popa
jne
das
cmp
adc
mov
ficompl
dec
push
jmp
xchg
add
cs
fcoml
push
inc
frstor
lock
pop
icebp
cs
mov
scas
or
rcrl
sub
imul
pop
inc
mov
bound
notl
pop
pop
lods
shll
lret
add
in
pusha
push
dec
aaa
mov
stos
imul
sahf
mov
test
push
imul
test
outsb
jp
fcomps
sub
adc
fisubs
sbb
xor
cmp
add
adc
imul
stos
or
jb
cmp
push
test
sub
sub
add
and
jle
jl
xchg
pop
cli
and
jo
js
add
dec
mov
push
test
cmp
cmp
adc
xchg
cmp
mov
push
or
ja
jle
xorl
mov
inc
sbb
xchg
test
movsl
adc
adc
jno
popf
sub
jae
sub
sbb
add
scas
cwtl
jmp
pushf
add
mov
inc
cmpsl
loope
xor
fists
fidivrs
loopne
push
dec
push
test
fistpl
js
mov
bt
jo
sub
mov
imul
mov
das
mov
cwtl
mov
sub
pop
mov
mov
sub
rcrb
or
pushf
lret
aas
xchg
pop
jmp
je
shlb
push
js
sub
test
cmp
popf
scas
inc
fcmovbe
or
adc
inc
iret
mov
in
mov
fwait
cmp
test
repz
dec
movsb
and
jb
insl
inc
mov
mov
cmp
jae
mov
daa
jecxz
xor
lcall
mov
jbe
nop
jecxz
imul
mov
add
mov
fiadds
in
lock
mov
insb
sbb
mov
ljmp
mov
imul
or
add
pop
rolb
aad
mov
out
mov
popa
test
or
cmpsl
lock
dec
ljmp
or
imul
xchg
lret
out
lods
sub
inc
sarl
dec
inc
int3
adc
dec
cmp
cltd
imul
xchg
sbb
clc
in
cli
cli
sub
add
and
jge
adc
inc
dec
addr16
sbb
sbb
les
orb
and
or
pop
cwtl
out
adc
mov
add
repnz
insb
inc
add
xor
lock
rolb
les
test
dec
in
pop
incl
lods
icebp
gs
adc
dec
dec
aad
jae
subb
mov
push
xor
lds
adc
rol
jae
push
xchg
xorb
imul
lahf
outsb
and
add
mov
sbb
adc
xchg
int
adc
sbb
cmpsb
inc
cwtl
adc
or
sub
cltd
fldenv
fisubrl
loop
push
inc
jge
xchg
cltd
movsb
and
sbb
shlb
jmp
xchg
lret
xor
mov
pop
cmc
mov
adc
int
push
inc
lods
adc
lods
jecxz
icebp
repnz
adc
sahf
xor
xor
cmpsl
int3
sbb
add
dec
sub
lcall
xchg
jbe
cmp
cmp
xlat
movsb
gs
test
sub
dec
dec
cwtl
xchg
cmp
mov
bound
aam
mov
mov
gs
imul
add
jnp
jp
jp
popf
das
pop
insl
inc
and
nop
gs
fs
fwait
notl
aas
mov
in
mov
mov
push
xchg
in
mov
rcrb
aas
jo
dec
dec
pop
xchg
mov
loop
lcall
dec
or
mov
lds
pop
pop
daa
mov
loopne
inc
filds
stc
loopne
xchg
sub
scas
cmp
sbb
xor
sub
inc
out
cmpl
es
adc
mov
gs
pop
data16
mov
dec
cmp
test
inc
mov
mov
repz
pop
mov
es
and
mov
xchg
imul
lahf
mov
mov
incb
or
test
jle
mov
hlt
inc
and
test
xor
jecxz
push
cmp
out
scas
dec
add
jge
mov
inc
inc
lods
es
xlat
cli
and
adc
bound
out
mov
scas
jne
scas
push
mov
mov
jbe
xchg
lret
mov
mov
data16
out
in
jecxz
and
push
clc
and
fdivs
setns
xor
rcrb
xor
inc
scas
push
dec
push
adc
inc
loopne
or
and
xor
push
ss
jnp
sub
sub
xchg
pop
fsubrs
inc
divb
dec
rcrl
pop
jmp
insb
fbld
outsb
jmp
xchg
sub
or
daa
adc
ljmp
orb
ffree
cmc
rcrl
repnz
into
cltd
sbb
mov
roll
dec
xor
push
xor
scas
call
addl
cmpb
jmp
push
cmc
sarl
sub
movsl
fwait
sub
adc
out
das
shrb
pop
or
adc
lret
and
mov
jmp
xchg
push
lret
jo
mov
loope
repnz
push
cli
les
out
movsb
fcomp
ficomps
xchg
pop
insl
ficoml
pop
out
mov
lcall
sbb
mov
into
das
mov
inc
pop
sub
test
and
and
dec
mov
out
int3
lods
insl
xchg
jb
movsl
iret
rol
dec
mov
fwait
dec
inc
and
sub
je
rclb
push
das
lret
shrl
pop
movsl
lahf
cmpl
xor
pop
cmp
popf
or
push
ficompl
repnz
push
add
push
mov
aaa
xor
pushf
fisttpll
test
lret
lret
fwait
push
icebp
lcall
int
lcall
inc
jp
popa
add
pop
cli
and
fs
jbe
lods
cmpsb
lahf
push
ror
movsb
call
ret
xor
lret
into
aad
push
stos
lea
popf
inc
in
jb
repnz
push
or
cmp
push
inc
cmp
or
cmp
and
bound
out
arpl
mov
adc
xor
aam
test
mov
cmp
idivb
pushf
sub
aad
add
int3
cmp
clc
in
lea
loope
jl
sbb
imul
pop
ss
xor
movsb
or
or
lcall
shll
adc
jmp
cmp
cmp
inc
mov
xchg
pop
nop
xchg
mov
pop
mov
adc
cmp
push
adc
jmp
sti
sbbl
and
in
mov
loopne
push
mov
inc
push
xchg
add
adc
fwait
aas
cmp
xchg
outsl
jb
pop
rcl
add
les
addl
popa
dec
inc
int3
cmp
fsts
sbb
rolb
les
mov
into
inc
dec
mov
mov
inc
jecxz
jmp
adc
ss
sbb
aam
mov
movsb
mov
xor
and
lods
jno
insl
cs
sbb
sub
test
pop
jl
pop
cltd
mov
insb
je
pusha
clc
mov
xchg
push
adc
in
adc
gs
sbb
sbb
cmp
jecxz
std
cmp
mov
dec
movsb
aas
shlb
mov
pusha
or
mov
lret
xor
cmpsl
stc
cmp
out
mov
xor
push
xchg
sub
inc
add
jecxz
jmp
mov
sbb
mov
and
ss
xchg
sub
pop
jge
fsubl
je
in
push
out
movsb
movsl
out
dec
cmp
jae
movsb
loope
push
sbb
mov
xlat
mulb
inc
movsl
xchg
pop
or
test
push
sbb
out
and
and
xchg
popf
inc
lret
mov
jno
or
sub
test
add
rcrl
aad
sbb
or
inc
adc
orb
mov
xchg
dec
pop
lcall
daa
outsl
les
pop
xor
cmp
ficoms
mov
ret
in
in
push
out
stos
pop
popa
add
jb
cmp
mov
lock
cld
add
in
dec
inc
mov
imulb
inc
fcomps
sar
dec
outsb
fwait
xchg
into
cmpsl
lds
testb
pop
rclb
xor
pop
add
sahf
enter
insl
icebp
pop
inc
movsl
mov
xor
repnz
sub
push
ljmp
in
cld
xor
bound
arpl
jb
mov
push
dec
sbb
dec
idivb
xor
je
sbb
mov
xchg
mov
mov
adc
pop
and
jbe
bound
das
fildll
mov
lret
push
ja
pop
or
sbb
fwait
and
adc
pop
push
hlt
inc
fsts
mov
fs
jns
xchg
sbb
push
pop
cmc
icebp
pop
mov
ret
xor
add
xor
or
push
arpl
cs
mov
jbe
movsb
mov
and
and
sub
fwait
pop
sbb
ret
xchg
sub
pop
xor
mov
mov
and
xor
xchg
pop
adc
movsl
cmp
lods
xchg
leave
jp
daa
adc
cld
fdivrl
loop
pusha
xchg
xchg
cwtl
leave
mov
rolb
or
popa
add
sub
mov
mov
push
into
adc
xchg
dec
int3
push
imul
push
cmp
lret
and
dec
push
mov
jle
lahf
xor
insl
stos
lods
fisubs
mov
ret
pop
imul
xchg
mov
std
test
xchg
ds
into
xchg
jmp
jp
add
xchg
push
ja
cmp
cwtl
push
push
cltd
or
scas
sbb
push
gs
inc
adc
lods
fwait
add
push
pop
insl
inc
jne
xor
xor
cmp
mov
lock
rorb
loope
jns
leave
xchg
movsb
mov
outsl
mov
imul
hlt
mov
mov
lock
cmp
mov
mov
push
mov
lret
xchg
push
xor
addr16
shl
inc
mov
adc
add
xchg
paddw
jge
dec
or
arpl
mov
stos
test
in
or
mov
aam
adc
pop
bound
je
mov
mov
clc
pop
imul
lock
les
fdivrp
push
push
in
adcl
inc
je
les
dec
sarl
push
adc
xor
jp
sbb
cmpsb
dec
ret
sbb
xor
jb
add
les
test
mov
mov
insb
cmp
cmc
pop
mov
cli
mov
add
mov
push
xor
addl
dec
sub
sbb
sub
test
jl
lcall
pop
sbbl
pop
inc
mov
hlt
jno
jnp
neg
stos
adc
mov
lds
data16
in
cld
cmp
mov
mov
mov
cmc
mov
xchg
inc
out
test
iret
sub
ss
rcll
jbe
push
icebp
enter
adc
mov
jno
into
mov
sub
adc
sbb
adc
cmc
lcall
push
cmpl
cli
fnstcw
push
imul
inc
inc
cmp
xchg
sbb
add
jecxz
test
adc
xor
fsubrl
sbb
mov
jl
lcall
cmp
push
dec
neg
cli
and
ficomps
push
lds
inc
out
orb
push
inc
push
cltd
test
imulb
mov
mov
dec
je
and
sbb
pushf
and
adc
icebp
adc
lods
cmp
fmul
inc
cmpsl
hlt
scas
push
cli
rolb
in
mov
cmpsb
int
xchg
xlat
cmp
push
movsb
pop
cmpsl
rol
into
aad
les
je
and
jb
mov
into
mov
iret
ss
ret
fmull
loope
jbe
mov
movsl
push
xrelease
xor
push
pop
add
inc
mov
mov
cmc
out
out
dec
pusha
scas
mov
push
dec
leave
pop
icebp
cmp
gs
mov
shll
outsb
ss
test
leave
imul
in
fwait
test
xchg
pop
adc
fwait
dec
mov
scas
neg
lcall
push
mov
clc
mov
pop
pusha
mov
ss
daa
aaa
scas
cmp
in
sbb
aad
lret
les
push
pop
or
mov
mov
push
jns
rorl
jmp
insl
mov
mov
fs
test
mov
sbb
and
mov
and
adc
pop
sub
mov
mov
jns
daa
push
stos
cmpsb
pop
mov
mov
jmp
pushf
nop
icebp
sahf
xchg
mov
push
mov
fisttpl
lock
mov
push
mov
scas
clc
and
mov
lahf
fstpt
mov
xchg
aad
lret
mov
test
jb
pop
cltd
push
push
cmp
sbb
push
lret
jo
and
sti
sub
aam
mov
mov
stc
mov
lods
stc
bound
adc
jb
fistpl
mov
fs
int3
push
mov
mov
push
imul
cltd
outsl
arpl
xorps
into
out
js
cmpsb
xor
pop
push
pop
sbb
push
add
inc
and
fcoms
push
fsubp
dec
cmpsb
cmp
adc
adc
insl
or
push
aas
xchg
jmp
decb
call
push
aad
test
xorl
je
jp
in
xor
leave
mov
ret
pop
into
pop
mov
jle
xchg
mov
daa
and
sub
add
imulb
cmpsb
jge
xchg
mov
mov
and
or
add
fsubl
mov
icebp
and
cmp
das
shll
std
orl
adc
pop
inc
cmp
push
cmp
xchg
dec
or
dec
fld
pop
push
stos
je
test
xorb
xlat
adc
loop
pop
jns
mov
pushf
dec
stos
int3
call
jle
cld
push
xchg
push
pop
sbb
pop
sti
xor
push
enter
outsl
inc
pop
int
add
pop
call
ficoml
lret
in
sub
and
lods
mov
xchg
lcall
mov
je
jecxz
fstps
sub
push
mov
in
sbb
orl
ret
fdivrs
sub
repz
jnp
or
pop
cltd
or
icebp
lods
jbe
icebp
cmpsb
pushf
bound
dec
std
repz
mov
pop
inc
sub
jg
add
in
jnp
sti
ret
adc
dec
ds
dec
ljmp
in
adc
js
sbb
fldl
iret
andb
or
xchg
push
repnz
iret
scas
into
fs
jae
fdivrl
sbb
lods
imul
pop
fmuls
repnz
fwait
adc
adcl
jg
xorb
cmp
sti
pop
rcrl
sub
mov
push
lods
hlt
sahf
adc
cmp
mov
mov
cmp
sub
pusha
push
mov
mov
xchg
xor
fs
mov
repnz
int
dec
fsts
adc
hlt
dec
mov
mov
inc
adc
push
dec
sbb
in
xchg
test
adc
fstpl
in
gs
int3
hlt
leave
fisubrl
repnz
scas
jle
pusha
pop
mov
add
dec
dec
clc
popf
sbb
and
into
stc
xor
lods
loope,pt
lea
jmp
pop
sti
inc
mov
fisubrl
shlb
sub
ss
jae
or
aas
nop
mov
cmp
xor
test
push
popa
out
mov
mov
in
pop
mov
xor
xchg
subb
movb
sub
cmpsl
gs
mov
dec
dec
icebp
lahf
mov
pop
pop
js
movsb
sbb
aas
in
jb
std
mov
add
popf
push
test
insl
shlb
mov
push
orl
fimuls
mov
mov
mov
or
mov
aas
mov
int3
or
xchg
mov
mov
mov
adc
add
push
daa
cmp
jnp
add
sbb
jmp
xchg
push
adc
sub
mov
sub
dec
mov
subb
into
jns
lods
lret
mov
xor
mov
and
call
data16
add
and
ss
add
cmp
xor
lret
cmp
int3
iret
add
scas
push
dec
jmp
enter
cmp
or
les
shll
cmpsb
jnp
jecxz
mov
and
inc
out
clc
jne
les
mov
xchg
push
sub
rorb
push
mov
mov
mov
aaa
lcall
mov
daa
imul
jbe
scas
insb
stos
cmpsb
loop
add
popa
insl
xchg
mov
add
inc
jle
popa
in
pushf
mov
nop
pop
inc
std
daa
adc
pop
or
adc
pop
notl
jge
inc
ja
das
shl
mov
icebp
loopne
cmp
adc
cmovae
xor
xor
or
sub
mov
pop
jge
insb
mov
pop
mov
push
fcomi
jne
negb
add
daa
cs
hlt
popf
lds
les
je
and
xchg
mov
xor
jge
clc
dec
jb
pop
js
mov
pop
ret
lahf
movb
add
xor
scas
jo
int3
cmpsl
mov
icebp
or
rorl
mov
daa
jb
pop
jle
adc
xor
xor
addl
pop
push
and
mov
push
icebp
fistpll
dec
mov
lods
pop
mov
and
push
sub
add
sbb
xor
pop
cmp
add
mov
out
aaa
mov
mov
int3
inc
cmp
dec
or
mov
jb
push
push
out
and
mov
and
push
cld
sahf
fsts
or
cmc
cmp
push
xchg
jnp
rcrl
jnp
inc
xchg
clc
fdivrl
inc
jo
shrb
push
mov
pop
into
adc
mov
jae
fidivs
dec
clc
xchg
dec
repnz
movsl
fbld
mov
xlat
inc
add
cmp
out
pop
test
pushf
add
mov
aam
push
add
adc
inc
popa
cs
testl
imul
dec
jns
sub
add
xchg
lods
filds
pop
shrl
push
xor
push
into
scas
dec
dec
int
rcll
shll
scas
aam
outsb
dec
fucomi
and
stos
sub
fdivs
push
dec
mov
dec
or
push
push
stc
xor
enter
rorb
imulb
sbb
sub
cmc
cmp
cmpb
dec
fnsave
outsl
pop
stos
loop
cmp
dec
add
in
pop
pop
fs
call
les
insl
and
mov
xchg
je
jge
test
fdivr
fadd
add
imul
add
stc
push
leave
sarb
pop
mov
adc
xor
cmp
xchg
jp
test
mov
fdivrl
mov
out
adc
es
rcr
adc
aas
ja
lcall
dec
sahf
cli
jge
out
sbb
lret
push
aas
lods
ret
leave
clc
mov
outsl
bound
lret
aaa
mov
in
lret
add
xor
iret
idivl
shlb
insl
mov
mov
repz
xorl
cs
shlb
stos
jne
icebp
or
nop
lods
movl
xor
add
cli
flds
mov
xor
sub
fists
repnz
shll
xchg
mov
sbb
jecxz
xchg
dec
aaa
in
jp
mov
jnp
mov
nopl
test
push
sbb
pop
test
leave
mov
das
cmc
xlat
int
jns
or
mov
pop
lret
sbb
mov
scas
enter
dec
sbb
cmp
je
cmp
sbb
stc
sbb
outsb
fidivs
stos
into
rclb
sbb
xor
ljmp
int
shrl
push
fwait
popf
in
mov
xor
mov
add
push
aas
ret
out
pusha
rclb
mov
sub
fwait
sbb
or
and
jno
mov
add
mov
cli
jb
ss
aam
cmp
sar
xorb
out
mov
ret
jae
sbb
addl
ret
lahf
lahf
test
insb
imul
aam
mov
mov
das
and
jae
adcl
out
mov
gs
popa
pop
cli
adc
sbb
and
cmpsl
ja
imul
movntps
outsl
mov
cli
mov
out
push
mov
push
es
xchg
jecxz
mov
lahf
bound
xchg
mov
je
push
fnstenv
and
test
pusha
jne
mov
leave
xchg
outsb
jp
outsb
stc
xchg
dec
pushf
sbb
aad
adc
addb
arpl
int
fwait
insb
das
fucomp
add
or
insb
mov
cwtl
or
add
ds
js
cmp
add
lods
mov
jl
lret
lea
lcall
data16
jecxz
imul
les
jno
and
fsts
lods
sbb
fnstcw
push
fildl
repnz
mov
xchg
fistps
mov
stc
das
pop
cmp
fiaddl
push
ret
ljmp
loopne
add
xor
cmp
xchg
imul
pop
test
sub
cli
pop
mov
or
ds
push
mov
lds
sbb
xlat
or
inc
adc
insl
mov
test
adc
add
mov
movsb
xchg
xchg
fiadds
test
sub
xchg
pop
push
lret
adc
sbb
arpl
cmpsb
test
call
aas
shl
add
sahf
pop
sub
push
outsb
or
subb
xchg
sahf
pop
sub
or
push
sub
addr16
sbb
or
push
aaa
push
ret
js
push
ljmp
xchg
aaa
sub
addr16
popa
pop
or
mov
mov
test
movsb
xchg
lods
pushf
ja
mov
xor
mov
mov
insb
jp
push
pop
test
sub
or
jne
mov
lret
subb
xor
pop
notl
push
push
or
bound
push
jle
or
je
negb
and
pushf
loope
in
leave
fcoml
clc
addl
cmc
shll
popa
cwtl
xchg
mov
xor
loopne
push
dec
loopne
and
scas
jae
loope
add
pop
imulb
sti
mov
xchg
inc
or
stos
xchg
dec
iret
jne
xchg
aas
mov
repnz
fcoml
enter
push
add
insb
ljmp
testl
cld
cmp
mov
pop
mov
test
mov
push
clc
test
scas
jle
mov
dec
mov
dec
loop
xor
lods
or
fmull
mov
sbb
lock
xor
pop
das
into
test
push
loopne
fdivrl
in
jmp
push
jo
insl
mov
push
std
bswap
scas
cmpsb
dec
and
sub
xchg
xchg
mov
push
jb
sub
popa
test
in
mov
inc
test
push
sub
scas
xchg
add
mov
shlb
addr16
mov
pop
fbstp
mov
jns
jb
in
sbb
iret
jmp
subb
mov
scas
dec
sub
insl
mov
and
mov
mov
xor
xchg
inc
cmp
inc
scas
xor
add
test
mov
lahf
mov
js
loop
mov
pop
sar
cli
inc
xchg
xchg
lret
in
popa
outsb
cld
pop
lcall
add
pop
xchg
lret
adc
mov
inc
sbb
jp
mov
cmpsb
mov
adc
push
adcb
mov
pop
sahf
sub
dec
sbb
jns
cmpsl
lds
mov
stc
fisubrl
rcrl
call
xor
pushf
bound
fwait
cmpl
push
test
enter
cli
mov
mov
cmpsb
jmp
jno
pop
push
imul
fidivs
sahf
mov
fldt
xchg
dec
loopne
push
xor
in
jl
repnz
add
cmp
mov
jp
cmp
mov
in
lods
in
les
jbe
jmp
imul
push
sar
pop
data16
setae
pop
or
mov
scas
dec
mov
lahf
xor
rolb
call
popa
fadds
ds
enter
pop
ret
std
je
loopne
sbb
xchg
push
sub
and
sub
xorl
cmp
mov
pop
roll
cmp
cmc
mov
push
nop
dec
inc
ret
mov
adc
std
std
pop
xor
push
in
add
pop
mov
jbe
loope
lret
push
mov
cld
push
sub
cmp
fiadds
loop
movsl
nop
or
jne
xor
mov
rcrb
mov
insl
mov
xor
jg
push
loop
sbb
test
enter
push
repnz
cmp
or
pop
pop
fisttps
rorb
xor
pop
and
scas
jle
mov
cmpsl
cltd
bnd
fsts
inc
sub
scas
out
cmp
pop
lock
sbb
in
das
lods
ret
jmp
jno
lahf
cmpsl
jnp
pop
add
repz
xlat
scas
inc
in
ficoms
push
jbe
notl
decb
jb
dec
jl
rolb
out
mov
push
and
sbb
sub
xlat
jnp
jbe
jecxz
jne
pop
int3
sbb
cmpsl
dec
lcall
mov
roll
cmc
ja
mov
dec
mov
ret
jge
lods
mov
lret
cli
out
jnp
jae
into
mov
adc
cmc
ljmp
cmp
test
lds
scas
jge
fs
mov
lcall
and
push
jo
cs
push
add
sub
test
negl
cmc
in
adc
sub
and
adc
enter
inc
push
lahf
pop
test
subl
adc
xorl
leave
rorb
in
push
adc
sbb
imul
or
test
imulb
xchg
add
pushf
add
sbb
rcl
push
leave
lret
push
jno
rorb
sahf
adcb
jle
adc
mov
lea
outsb
test
nop
movsb
mov
bound
push
mov
in
int3
mov
cmp
out
les
xor
xor
or
push
push
scas
ljmp
inc
fwait
mov
loope
and
cmp
jbe
add
outsl
xchg
jmp
inc
out
add
mov
jnp
jne
addr16
sbb
in
cltd
fistps
es
sub
xlat
push
daa
bound
in
aam
out
hlt
test
dec
popa
push
pop
sbb
push
xor
pop
loope
lret
mov
push
xchg
add
dec
push
lods
rorl
jmp
sbb
shrb
clc
mov
inc
movsl
jp
xor
xacquire
or
mov
fisubs
fstpl
popa
inc
or
ljmp
mov
mov
stos
call
add
push
xchg
dec
sub
ja
xor
mov
fidivs
aad
pop
or
cmc
aam
fiadds
push
out
iret
inc
mov
int
gs
ljmp
mov
mov
sbb
pop
test
out
in
sbb
cld
xchg
ja
inc
dec
std
cli
cli
stc
or
pop
scas
or
sbb
popf
sahf
xchg
icebp
imul
stos
sub
js
and
orb
nop
pushf
push
dec
subl
lret
push
sarb
pop
stos
cmpsb
sub
add
imul
in
cmp
movups
xor
in
mov
push
push
cmpsl
jne
iret
mov
push
mov
jg
ljmp
xchg
jge
lea
vmovaps
jbe
jae
mov
scas
inc
loope
xor
push
sarl
lcall
cwtl
and
mov
iret
cmp
imul
mov
loope
cs
push
shr
pop
lcall
cwtl
outsl
push
cmc
cmpsb
loop
pop
cmp
mov
cli
inc
sbb
sahf
ljmp
fiadds
sahf
ljmp
dec
or
ret
daa
adc
push
and
gs
pop
test
jl
add
leave
out
push
add
cmpsb
sub
pop
mov
mov
repnz
sub
incl
sarl
dec
cmp
iret
dec
outsl
rcll
call
gs
pop
cli
mov
insb
xor
and
hlt
inc
insl
aas
adc
cmp
int3
dec
popa
xor
cwtl
fdivl
pop
inc
sbb
push
adc
movsl
mov
fdivrs
sahf
lcall
push
mov
ret
inc
shlb
lea
xchg
movsb
loop
arpl
or
daa
repnz
or
jmp
mov
inc
sbb
fscale
test
popa
cmpsb
lods
jo
adc
out
aam
adc
mov
jo
pop
xor
jbe
add
add
lods
jl
mov
push
dec
pop
rol
test
add
lds
sbb
xor
push
inc
jae
scas
jae
in
outsb
aad
cmp
mov
add
inc
mov
mov
out
lret
xchg
cmpsl
mov
inc
and
cmpsb
xor
jl
pop
jl
mov
int3
insb
push
jge
mov
addr16
xor
sub
scas
loop
mov
inc
pop
fwait
arpl
pusha
jo
fidivs
lret
xchg
dec
xor
ljmp
sub
push
mov
dec
cwtl
push
or
lret
lcall
xor
dec
pop
pop
adc
jg
or
sub
subb
dec
xlat
bound
add
mov
or
and
aas
jp
mov
mov
jg
jecxz
mov
dec
repnz
and
mov
fs
ljmp
enter
repz
dec
mov
sub
loopne
notb
insl
xchg
and
movsb
dec
daa
jg
inc
movsl
test
inc
cmp
and
js
mov
pop
adc
adc
or
mov
out
dec
jmp
jp
cmp
jns
test
cmpsb
dec
pop
mov
insl
pop
incl
mulb
xorb
mov
adcl
loop
mov
or
inc
push
adc
ret
ret
pop
inc
iret
fistpll
lock
pop
out
or
dec
aas
test
mov
mov
pop
or
xchg
or
neg
stos
pop
jb
push
pop
xchg
or
mov
cld
or
mov
sti
push
mov
mov
call
xor
pop
inc
das
push
mov
and
pop
cld
in
xor
mov
add
ds
es
outsb
aad
sub
mov
pop
in
jns
lock
rolb
inc
clc
ja
push
dec
mov
cmp
sbb
inc
mov
jecxz
cmp
scas
pop
gs
or
mov
push
or
bound
rorl
cmp
dec
mov
xchg
mov
push
ja
sbb
je
mov
adc
fists
jmp
mov
enter
mov
add
pop
mov
xor
jmp
mov
dec
sub
sub
or
mov
jecxz
imul
adc
test
sbb
popa
mov
ror
mull
adc
push
cmp
mov
adcb
mov
ud2
dec
mov
aam
jnp
mov
outsl
pop
popa
dec
adc
movntps
sbb
pushf
or
pop
jge
cmpsb
and
inc
jecxz
lret
jp
sbb
xchg
jne
sub
lock
pop
stos
mov
aas
jbe
clc
mov
cwtl
in
inc
aas
sbb
mov
xor
and
outsl
sarb
dec
in
xlat
nop
push
dec
inc
mov
ret
jl
stos
xchg
not
push
xor
mov
jns
pop
shrl
mul
pop
or
mov
mov
outsl
mov
fists
jb
popf
adc
or
mov
sub
pop
lret
dec
scas
push
jmp
sahf
test
push
test
roll
loop
pop
int
pop
std
or
mov
xor
daa
data16
dec
int3
addb
insb
inc
pop
repnz
int
adc
sarl
outsb
dec
cmpsl
aas
and
pusha
enter
jmp
aad
sarb
xor
mov
pushf
sahf
mov
or
sbb
cmp
pop
mov
aaa
add
out
fcoml
icebp
push
imul
add
test
inc
test
mov
sar
loope
dec
inc
xor
cmp
test
and
add
aad
loop
push
data16
into
pop
add
dec
test
jp
xor
repz
push
xor
dec
and
test
cltd
sarl
mov
js
mov
popa
stc
pop
adc
cld
adc
cmpsl
push
jmp
nop
push
mov
mov
shr
add
jp
cltd
and
dec
jb
lea
dec
cltd
adc
mov
xor
push
dec
pop
add
dec
cmp
fstps
push
sti
jg
adc
int
adc
addr16
fists
or
cmp
push
mov
insb
rcrl
xchg
fistpll
rorb
ret
mov
scas
mov
je
jle
dec
inc
pop
ja
dec
and
in
pop
mov
cmp
jmp
in
das
addr16
inc
cmp
sbb
fmuls
fsubl
pop
jae
mov
iret
push
push
sbb
mov
adc
jmp
add
mov
aad
repnz
mov
xor
out
jecxz
mov
cwtl
iret
jae
sbb
and
imul
popa
jnp
and
lret
jl
and
popa
into
xchg
int3
out
jnp
cmp
or
xor
xor
xchg
cmp
add
ss
jno
jmp
dec
inc
mov
lods
sub
clc
loop
or
inc
push
popa
or
mov
mov
mov
sbb
shll
sub
enter
lea
popf
sbb
fdiv
loopne
fs
sbb
lds
psubsb
loopne
mov
cmp
iret
inc
out
sub
mov
cs
outsb
sbb
aaa
xlat
fimull
scas
mov
in
xor
jae
and
sub
out
ljmp
mov
nop
test
add
mov
mov
dec
mov
into
xchg
add
scas
cmp
jno
popf
je
push
pop
lea
xchg
test
mov
cli
mov
shrb
mov
int3
sbb
inc
cltd
adc
test
pop
cmp
or
sub
lods
push
in
imulb
shrb
gs
int
arpl
xchg
cltd
mov
out
push
iret
les
insb
mov
hlt
in
stos
loopne
addr16
mov
sub
fnstcw
or
out
sub
push
xlat
call
ficomps
add
push
dec
test
scas
jle
jge,pn
dec
clc
and
rcrb
jo
hlt
adcb
lds
insb
aaa
in
icebp
je
sub
dec
jo
jmp
mul
ret
test
jo
movsb
flds
push
sbb
testl
data16
push
jnp
sbb
in
jae
fs
push
lahf
jmp
adc
cs
mov
push
iret
aam
scas
lret
call
xlat
mov
andb
cs
push
pop
or
loop
movsb
rolb
mov
enter
stos
outsl
mov
cmp
mov
xor
dec
xchg
dec
add
xor
jp
in
rol
sub
dec
mov
cmp
pop
faddl
xorl
fistps
sbb
negl
ss
orl
dec
add
xchg
pop
fs
cld
adc
pop
jmp
and
xchg
mov
stc
jl
adc
leave
cmp
fisttpl
cmp
pop
cmp
andb
lcall
test
xchg
add
inc
mov
cmp
fadds
push
lods
sbb
mov
dec
imul
cli
mov
test
jno
enter
mov
loope
sahf
push
int3
test
ret
jnp
shl
test
xlat
push
in
push
fildl
imul
cmpsb
popf
ret
xor
insl
xchg
aaa
mov
mov
repnz
call
add
jae
inc
push
jo
sbb
push
lods
jnp
push
add
rorb
and
push
aaa
mov
push
mov
inc
int
pop
cmp
push
ss
pop
scas
xchg
dec
cltd
cld
xor
xchg
jno
pop
dec
dec
push
mov
shl
lahf
aas
push
adc
or
pushf
scas
or
mov
adc
jns
mov
cmc
mov
jmp
cwtl
ffreep
out
xor
adc
inc
inc
int
xor
je
loopne
cmp
rolb
jno
call
scas
mov
sahf
inc
das
pop
cwtl
ja
pop
inc
fisttpl
pop
push
notl
scas
push
jl
arpl
repnz
and
and
cmpsl
adc
mov
add
jo
push
lret
pop
jnp
inc
dec
lret
sub
aas
scas
repz
das
add
scas
jbe
lret
xor
jae
mov
loope
sbb
cmp
daa
scas
fisubl
shrl
shll
add
push
sahf
cli
in
dec
push
pop
mov
aas
int3
mov
xor
stc
sbb
and
push
mov
cmp
adc
lea
inc
jne
dec
or
in
xor
xor
addb
pop
fsubs
into
insb
hlt
sub
inc
xor
sbb
cli
in
xchg
push
ljmp
lods
add
cmp
out
jnp
push
out
inc
hlt
aad
dec
in
sbb
jne
xchg
cli
lods
addr16
dec
inc
iret
mov
aas
cmp
mov
xchg
out
sti
jns
xor
cmp
pop
jnp
aad
xchg
jmp
iret
imull
sbb
xchg
jae
add
jns
dec
xchg
aaa
pushf
cmp
sbb
jnp
mov
dec
fiaddl
pusha
jne
in
subb
pop
sub
xorb
ret
aas
fstl
xchg
nop
mov
push
sub
mov
xor
mov
mov
jl
test
push
mov
mov
incb
or
sub
xchg
mov
cld
ja
pop
pop
adc
cwtl
inc
mov
push
ret
jne
jle
call
cmpsb
jle
mov
pop
dec
xor
testl
and
out
add
push
dec
vandps
lods
mov
mov
icebp
cs
leave
or
shr
push
pop
push
inc
xchg
cmp
popf
loop
rol
push
and
jge
fs
add
dec
icebp
stos
xchg
movb
notb
jo
pop
sbb
out
shl
inc
dec
stos
mov
mov
mov
add
or
mov
sub
out
mov
mov
sti
and
pop
dec
stos
pop
lds
imulb
outsl
addr16
bound
pop
je
fs
xchg
out
sub
or
jno
and
es
xor
jno
and
add
inc
sub
insl
cs
mov
mov
jae
mov
jne
out
inc
jecxz
fwait
icebp
mov
outsb
pop
xchg
fwait
or
in
in
int
cmp
dec
sbb
push
loop
inc
add
add
cmpsl
xor
pop
push
pop
dec
xchg
ljmp
xor
lods
jecxz
mov
pop
jmp
aam
pop
cmp
fwait
mov
out
shrl
adc
pop
lahf
fstpt
and
lods
fisubrl
add
stos
insb
mov
push
into
pop
sti
daa
pop
popf
insl
push
xchg
out
in
mov
xlat
sbb
sbb
dec
mov
pop
push
lea
pop
std
daa
adcl
shrb
and
jno
jne
fidivs
jp
sub
fstpt
fidivs
cmp
fsubrp
adcb
xchg
lds
sar
dec
sbb
lcall
dec
xor
data16
fstps
inc
mov
stc
lret
sbb
lea
clc
outsl
push
inc
cmp
js
adc
sahf
jbe
sbb
mov
iret
add
loopne
lcall
sub
sub
sub
cmp
inc
xor
sbb
lcall
insl
mov
mov
outsl
imul
adc
cli
or
cmp
pusha
into
dec
iret
in
arpl
ss
popf
call
pop
adc
mov
sbb
sti
dec
sbb
fwait
int
push
test
mov
mov
push
aam
mov
jecxz
mov
outsb
ss
in
rep
inc
fidivs
lahf
addb
xchg
pop
mov
dec
mov
and
roll
sub
insb
mov
icebp
bound
xchg
inc
leave
xor
inc
xchg
add
lods
mov
ljmp
mov
xchg
movl
pushf
outsl
addr16
sub
dec
call
mov
stos
ja
sbbl
mov
rclb
and
imul
mov
sbb
sub
ja
pushf
cmpb
push
xchg
mov
bound
js
xchg
addl
mov
pop
pop
test
orb
sbb
jmp
dec
sbb
sarb
orb
popf
ds
in
pop
lahf
aaa
mull
xchg
fidivrs
xchg
scas
mov
sub
cmpsb
sbb
sub
and
fadds
mull
inc
cmpsl
clc
mov
les
cmp
cs
sahf
push
and
movsl
cmp
pop
das
xchg
ret
test
inc
xchg
xchg
cmp
mov
adc
clc
cmpsb
inc
inc
sbb
ret
and
cli
insb
ret
mov
popa
mov
ss
nop
xlat
adc
push
mov
and
repnz
ret
pop
loope
repnz
mov
stos
arpl
sub
adc
push
push
mov
loopne
popf
loop
dec
loop
push
add
daa
bound
pop
in
loope
insb
cltd
mov
iret
imul
jo
dec
push
sbb
xchg
ljmp
int3
pop
adc
inc
pop
loopne
and
fildl
add
cmp
jg
cltd
pop
jle
enter
adc
jmp
mov
mov
dec
push
rolb
insb
or
lods
lods
rorl
push
or
loopne
sar
fs
adc
lcall
inc
cmp
jg
gs
lret
pop
push
js
repz
inc
push
jne
test
xchg
test
sub
call
call
imul
and
cli
mov
hlt
idivl
stc
syscall
aam
add
and
call
fidivrl
or
xor
popf
pushf
in
repnz
mov
push
hlt
icebp
test
push
scas
popf
stc
and
incl
cmp
arpl
xchg
mov
test
xlat
dec
dec
cmc
scas
loope
sub
ja
enter
test
out
xchg
mov
lret
addr16
mov
push
stos
icebp
in
fisubl
lcall
or
xor
lods
inc
out
cld
cmc
arpl
shlb
adc
push
sbb
inc
pop
mov
mov
pop
adc
jg
push
xor
mov
push
mov
xchg
and
bound
adcb
lea
mov
bswap
xor
aas
jno
pusha
in
jns
das
jg
add
push
sti
inc
ret
loope
hlt
out
push
test
in
je
hlt
dec
lret
lock
mov
rorb
js
nop
mov
pop
mov
adc
add
jnp
xor
in
movsb
mov
sub
pop
add
and
push
cli
cmpsb
popf
lahf
fistpl
sbb
or
add
dec
popa
mov
jmp
adc
push
fcompl
ret
mov
sbb
xor
push
mov
not
push
cmp
and
mov
call
xchg
xor
adc
shlb
inc
cmpsb
insb
inc
push
jb
pusha
add
out
sbb
mov
sub
xchg
or
push
pop
xor
mov
mov
inc
jge
rorl
fsubr
sbb
push
jnp
mov
dec
xchg
int
fcmovnbe
inc
pop
or
out
adc
inc
shrl
out
mov
push
outsl
or
fmuls
inc
and
movsb
inc
scas
xorb
leave
icebp
xchg
pop
inc
nop
add
fistpll
shrl
lock
mov
out
pop
mov
enter
pushf
jecxz
pop
xchg
cmp
test
test
repz
inc
iret
std
mov
popl
mov
aas
lea
lds
cmpsb
pop
pushf
lods
das
mov
mov
mov
xor
or
bound
and
adc
rcrb
test
lea
imul
testb
push
jle
mov
sbb
xlat
ds
and
daa
jmp
push
fisttps
pop
lods
lret
repnz
fmuls
xor
in
lea
inc
rcl
ds
mov
sub
cmc
or
mov
sub
pop
mov
test
sahf
imul
rcrl
mov
xchg
int
inc
aas
leave
scas
aam
dec
push
sbbb
inc
int3
lods
mov
fcomps
negl
imul
cmp
sbb
xchg
cmp
push
pushf
sub
neg
mov
sbb
or
cmove
xor
es
or
mov
mov
fcompl
sbb
dec
adc
sbb
inc
mul
in
pop
xchg
lcall
divl
jno
dec
jne
mov
jg
xor
and
dec
scas
mov
push
std
mov
xor
adcb
popf
ljmp
aas
push
push
bound
pop
lret
xchg
andl
adc
and
dec
sub
mov
test
push
mov
lret
fsubrs
mov
fadds
gs
xchg
pop
loopne
or
insb
xchg
sub
scas
dec
leave
ret
mov
stos
shrl
imul
movl
jns
imul
sub
cmp
pop
mov
ret
cmp
lahf
insl
mov
test
ret
push
xchg
push
inc
cmp
dec
add
in
pop
imulb
push
adc
dec
ja
mov
leave
cwtl
pop
ret
aas
lcall
test
xchg
adc
sbb
pop
and
cs
xor
jne
lds
dec
fwait
in
adc
clc
xchg
int3
adc
data16
sbb
pop
add
mul
mov
jbe
mov
xor
dec
mull
enter
stos
sbb
dec
cmc
cmp
inc
jns
mov
aas
push
ljmp
sarl
lods
sti
outsl
inc
mov
int3
aas
mov
add
ficomps
in
icebp
pop
push
cmpsl
ret
cs
rol
jae
mov
fmull
cwtl
and
cmp
jbe
shlb
mov
scas
cmp
mov
cmp
nop
out
sub
adc
mov
nop
leave
pop
test
mov
fiadds
sahf
push
ret
and
cmp
cmp
jmp
dec
icebp
inc
jp
loope
push
js
mov
mov
pop
dec
fiaddl
int3
pop
or
clc
ja
cmpb
sub
or
lcall
fadds
pop
adc
aad
sahf
dec
xor
jmp
rol
int3
add
fiaddl
test
insl
loope
lods
mov
dec
bswap
inc
jb
leave
iret
mov
sbb
xchg
lock
leave
sub
test
fsts
push
adc
ret
mov
test
mov
mov
outsb
scas
sub
pop
inc
in
ja
sub
in
sub
mov
xlat
fistl
out
sar
shl
hlt
ds
lahf
mov
jne
ficomps
and
cmp
jl
mov
loope
xchg
sti
test
test
das
mov
test
mov
int3
jae
lods
test
mov
movsb
dec
sbb
inc
and
push
mov
mov
inc
repnz
addr16
popf
out
xchg
sbb
stos
shrb
das
xchg
xchg
sbb
iret
and
daa
xor
sub
push
dec
xchg
and
lcall
pop
pushf
inc
sub
add
and
cmpsb
dec
sbb
dec
jecxz
fmulp
mov
por
pusha
mov
or
jecxz
repz
sahf
mov
add
imul
push
addr16
out
out
rcll
lock
dec
pop
ljmp
mov
pop
mov
iret
xchg
and
loope
adc
jns
dec
xchg
popa
test
mov
cmp
sbb
in
outsl
lods
ffreep
add
rol
jo
xchg
adc
or
mov
and
dec
add
cmp
mov
mov
les
mov
cmp
ret
cmp
add
outsb
mov
mov
xorl
or
jmp
testb
mov
cmpsl
jmp
add
mov
fcmovne
or
into
and
mov
lret
mov
sub
ljmp
add
fidivs
push
or
xchg
into
xlat
adc
imul
aad
out
aad
cmc
and
jbe
movsl
loopne
fdivl
push
into
inc
mov
aas
leave
pop
ja
sbb
or
xor
mov
stos
adc
jl
clc
stos
adc
mov
cs
sbb
cs
lds
pop
dec
inc
scas
and
and
mov
add
sbb
repnz
fstl
and
or
das
inc
gs
mov
test
adc
adc
or
dec
fcoml
sbb
pop
push
pop
mov
orl
arpl
repnz
mov
jno
popa
dec
push
adc
add
add
jmp
cmp
aas
mov
or
jo
mov
mov
test
ja
xor
stc
adc
adc
ja
ficoml
mov
cmpsb
adc
sub
jne
lock
mov
mov
shr
adcl
sub
mov
in
cmp
and
pop
ds
es
adc
out
lahf
xchg
outsb
sbb
ja
pop
pusha
fcmovbe
in
cmpsl
inc
fwait
jb
pop
mov
in
lret
mov
nop
xchg
mov
xchg
push
imul
mov
sar
jl
pop
lret
arpl
push
out
aam
mov
and
mov
shl
mov
dec
idivl
in
mov
out
out
dec
inc
mov
cmc
sub
sub
lret
mov
or
into
add
shl
mov
movsb
push
jbe
mov
pop
xchg
mov
lock
sub
sbb
rcr
inc
add
ss
jae
outsl
or
mov
inc
in
xor
jne
test
add
mov
dec
insl
xchg
out
loope
adcl
loope
out
jmp
cs
cmp
call
faddp
and
pop
cmpsl
test
mov
push
sub
out
and
adc
mov
stc
mov
fidivs
xchg
cmpsl
xchg
mov
xchg
outsl
xchg
dec
imul
mov
mov
inc
shlb
icebp
in
out
mov
add
mov
jns
cmpb
ss
clc
or
jmp
mov
sbb
test
in
jne
pop
aas
unpcklps
pop
jmp
xchg
jae
jle
xlat
sbb
mov
jo
out
flds
cld
cmp
push
pop
mov
lods
das
pop
in
mov
inc
aam
filds
cld
dec
ret
cmpl
or
ret
push
xor
js
cmpsb
punpcklbw
jns
inc
pop
mov
imul
or
aaa
mov
maskmovq
testl
xchg
lcall
pop
cmp
sbb
cmc
add
mov
pop
fwait
jno
jno
inc
or
sbb
add
mov
notl
enter
inc
out
pop
imull
mov
leave
daa
cmp
pop
adc
sarl
lock
lds
enter
fs
pop
mov
add
stos
sbb
cmpsb
jne
pop
in
or
call
inc
dec
fldl
or
loop
popa
xchg
xor
int3
push
ss
decb
fistps
test
and
mov
sbb
xchg
add
xor
icebp
aaa
sbb
or
adc
test
and
push
pop
or
fsub
ret
aam
mov
push
movsb
insb
push
cmp
test
mov
mov
cmpsl
push
push
call
mov
adc
orb
imul
and
dec
mov
sbb
jl
ds
adc
mov
bound
adc
xor
adc
push
mov
inc
ds
adc
mov
mov
sub
jns
mov
xchg
xchg
rcl
mov
roll
outsb
addl
addr16
jno
and
inc
jge
es
ds
ss
and
pop
cld
aad
ficomps
jo
mov
jo
push
in
push
daa
loope
pop
out
fs
dec
adc
insl
lds
add
mov
xor
loopne
push
fmulp
fmuls
lret
inc
cs
pop
jae
mov
cmpsl
dec
pop
adc
addb
pop
repz
movsl
push
ss
nop
xor
mov
outsl
inc
rolb
sub
rcrb
or
stc
fadds
pop
sbb
gs
das
push
sbb
arpl
sub
lds
dec
add
adc
or
adc
cld
mov
mov
dec
sbb
das
cs
fsubrl
sbb
and
and
sub
dec
xchg
add
scas
lods
int
fildl
in
lahf
xchg
pop
or
xchg
or
stc
insl
nopl
push
and
test
add
outsl
sbbb
sub
lods
repnz
sbb
test
rcr
sti
xchg
out
xchg
aas
inc
test
inc
call
mov
adcl
mov
mov
rol
push
std
and
insb
push
and
add
dec
lret
out
ret
scas
aas
int
lea
mov
xor
mov
pop
and
in
dec
lahf
shl
insb
inc
in
xchg
xchg
scas
push
stos
lret
pop
mov
cmp
mov
mov
ficomps
push
mov
or
lds
and
pushf
jle
loope
xchg
ficompl
pop
lods
scas
clc
dec
adc
lods
mov
ljmp
stos
mov
pinsrw
push
mov
push
add
lret
rcrb
cmpsb
cmp
xor
sbbb
in
mov
test
insl
orb
stos
arpl
xor
cmp
fisttpll
sbb
or
cli
adc
out
mov
fistpl
sbb
cmc
or
or
insb
repnz
fmulp
push
cmpsb
or
mov
add
push
int
xchg
test
sbb
push
sub
jnp
fs
adc
push
inc
test
pop
mov
mov
and
bound
dec
ljmp
adc
movsl
dec
inc
daa
jns
insl
stos
test
out
cmp
mov
ror
in
test
and
fwait
xor
ds
or
lds
into
pop
or
cli
daa
sbb
imul
push
ljmp
inc
pop
xchg
push
lcall
lods
xor
push
faddl
and
dec
psubsw
int3
jne
fs
lods
xlat
out
lds
je
push
sbb
ret
jmp
sub
popa
stos
xchg
test
pushf
dec
xor
or
or
int
test
fcmovu
daa
pushf
out
scas
dec
out
mov
mov
lds
loope
push
jmp
lcall
pop
sub
lock
add
ljmp
sbb
orb
and
xor
cmpsb
outsl
xchg
pop
xlat
pop
add
sti
enter
cld
ret
push
pushl
xor
imul
pop
xlat
pop
out
sbb
inc
dec
xchg
rcrb
lods
lret
hlt
lret
inc
push
pop
add
insb
mov
mov
xchg
pop
outsl
out
in
push
adc
cmp
imul
pop
stc
mov
push
aam
mov
push
or
ds
inc
cli
je
pop
sbb
inc
inc
xlat
pushf
cltd
jnp
nop
lret
mov
fwait
push
xor
lds
dec
sub
mov
fcoml
push
lahf
lahf
inc
leave
sub
xor
add
jle
dec
jge
pusha
les
ret
scas
in
sbb
or
adc
lahf
ja
mov
inc
insl
cmp
mov
mov
insl
popa
test
dec
in
ret
shrl
add
int3
negb
test
mov
jnp
mov
xchg
test
mov
xchg
icebp
push
notl
jo
cmp
add
mov
xchg
mov
imul
mov
jo
or
sbb
xchg
ljmp
daa
xlat
dec
addb
sub
xor
es
jge
rorl
in
inc
hlt
int3
jecxz
in
pop
out
enter
mov
ljmp
lods
inc
sahf
in
or
mov
lods
xlat
out
mov
xor
dec
pop
popa
xor
or
hlt
pop
sub
jo
arpl
jmp
fwait
les
inc
push
mov
mov
dec
mov
add
pop
imul
and
scas
fistpll
std
push
push
or
sub
pop
icebp
mov
out
outsb
cmp
push
sti
and
jnp
mov
outsl
push
add
jo
push
jecxz
adc
sub
xchg
mov
push
push
jo
movsb
inc
data16
dec
jns
or
mov
iret
bound
and
sbb
mov
ret
lret
mov
imul
ret
push
fcoml
ret
jle
ja
inc
xlat
sbb
mov
fbstp
icebp
mov
cmpsb
mov
jle
imul
faddl
inc
ds
push
inc
das
outsb
xor
arpl
call
stos
and
ljmp
pushf
sub
mov
insl
icebp
jnp
pusha
fmulp
sub
icebp
orl
fs
fwait
std
or
push
push
and
or
cmpsl
je
inc
pop
jb
inc
movsb
enter
inc
lahf
cld
insb
mov
daa
les
in
and
mov
xor
nop
inc
mov
movsb
or
jmp
loope
pcmpeqd
xor
cmp
cmp
dec
pop
lahf
mov
loop
sbb
xor
mov
hlt
inc
in
push
lcall
adc
pop
jbe
jmp
loop
cmpsb
insb
mov
std
mov
data16
or
jecxz
lods
pop
jb
jg
lds
mov
ljmp
cwtl
xor
fs
in
jl
adc
cmp
jne
push
cld
or
scas
xchg
ss
leave
xchg
mov
out
outsl
ret
cmp
out
mov
or
cmp
mov
xor
lock
loope
out
test
iret
lods
test
call
sbb
cld
hlt
rclb
pusha
hlt
addl
xchg
push
sub
mov
mov
out
mov
pop
stos
mov
mov
popf
push
clc
sbb
push
movl
cmpsl
leave
pop
in
addb
or
leave
in
xor
inc
gs
repz
shl
xor
mov
adc
out
adc
popf
push
sbb
add
jmp
push
outsb
and
pop
outsl
rcrl
out
in
sub
jg
adc
jge
sub
hlt
icebp
sbb
mov
adcb
jl
mov
push
and
jl
dec
push
push
enter
pop
xor
shlb
fildll
dec
mov
jmp
roll
cs
enter
pop
mov
sub
loopne
xchg
lea
hlt
negl
xchg
ret
sub
fs
cs
das
xchg
or
jmp
outsl
movsb
fcoml
ljmp
cmp
pushf
sbb
push
adc
push
stos
adc
adc
xor
cmp
and
orl
push
jno
pop
ds
jae
push
mov
mov
cmpsl
adc
mov
adc
iret
xor
hlt
clc
mov
xor
imul
roll
das
add
fdivrl
repz
dec
xor
aaa
xchg
aad
ja
pop
xchg
inc
aam
or
je
mov
daa
mov
and
js
test
xchg
push
xchg
push
fimuls
or
mov
inc
sub
xchg
lret
ja
cmpsb
mov
add
fildll
jno
jp
inc
shrl
movsl
add
adc
mov
jmp
and
sbb
add
adc
xchg
cs
popf
fimull
subl
fstps
sub
popa
fstps
icebp
out
imul
mov
mov
xchg
out
nop
in
add
bound
fs
mov
fwait
and
ljmp
add
loopne
xor
and
mov
bound
mov
test
xor
dec
aaa
repnz
aam
roll
xchg
or
or
or
rorb
pop
std
sbbb
lds
pop
jle
sarb
dec
imul
mov
andl
std
outsb
in
arpl
scas
jno
lret
xchg
xorl
and
dec
push
outsb
out
push
or
movsl
push
pop
inc
repz
cmpsb
or
jo
fidivrs
and
loope
lods
ds
aam
arpl
pushaw
popf
enter
cmp
pop
mov
jb
xor
xor
inc
int
fimull
push
jo
int3
ror
in
push
hlt
inc
shlb
sbb
repz
std
int
test
scas
mov
imul
dec
or
loop
cli
xor
pop
mov
out
adc
mov
add
jb
loop
outsb
xorb
mov
ja
mov
cmp
inc
mov
lret
pushl
nop
lea
ret
dec
xchg
aas
mov
xor
das
clc
inc
je
pop
in
testb
xchg
int
daa
ljmp
mov
jge
ret
dec
cmpsl
or
and
jp
push
je
jo
sar
loop
and
int
call
and
shrb
or
jno
movsb
rolb
test
jmp
cli
xor
in
lds
popa
inc
cld
mov
xchg
pop
cmpsb
fcmovne
sti
or
xchg
fimull
mov
xchg
out
rol
or
mov
dec
jno
mov
rcr
test
fstl
push
and
shrl
gs
adc
les
push
inc
push
sahf
sbbb
movsl
adc
sahf
mov
dec
cwtl
sbb
pop
outsb
mov
aad
push
sar
jo
mov
dec
shrb
adc
xor
adc
jle
orb
push
cld
mov
sbb
cmp
cli
jo
mov
fimuls
jg
mov
jecxz
mov
pop
ljmp
dec
inc
sbb
cmc
addr16
ret
jecxz
das
cltd
inc
mov
mov
and
mov
pop
cs
nop
cmp
add
pop
sub
jo
dec
notl
dec
ds
into
adc
leave
andnps
jae
cmp
mov
mov
pop
imulb
jge
fidivs
or
fbstp
into
mov
bound
insl
pop
dec
imul
cld
dec
lds
insl
loopne
lret
in
fs
or
std
mov
cmpsl
dec
add
cmp
in
pop
cmp
jbe
inc
push
cmp
sbb
pmuludq
push
ja
inc
xchg
mov
movsb
clc
fdivrs
mov
ret
inc
in
push
inc
dec
fsubr
xchg
cld
sub
shlb
pop
mov
test
clc
mov
add
data16
mov
dec
cmpsb
xchg
stos
cli
in
bound
es
adc
shlb
jecxz
adc
mov
loopne
cmc
mov
movsl
jbe
loope
pop
cmp
out
dec
add
sbb
cmp
xchg
outsb
pop
ja
mov
loop
sub
push
dec
lock
inc
test
push
add
ja
or
jb
xchg
mov
jp
cmp
mov
mov
and
lahf
add
xlat
aaa
lds
lods
jo,pn
or
cwtl
test
xchg
sbb
mov
jns
loopne
or
test
fstp
sub
mov
jbe
call
loope
nop
imul
pop
mov
jae
push
or
call
sbb
fstpt
cmpb
jmp
mov
adc
add
push
xchg
dec
fstpl
ret
loopne
sbb
lods
lods
lea
bound
and
daa
mov
xchg
xchg
inc
mov
inc
xlat
sti
xchg
xchg
lds
dec
xor
cmp
sarb
add
ds
mov
and
mov
jge
dec
imul
jle
sbbb
leave
push
and
into
pop
mov
xor
repnz
xchg
or
cmp
add
mov
jbe
movsl
imul
push
push
adc
test
adc
pop
rol
mov
addl
nop
add
repnz
inc
or
push
shl
push
cmpsb
push
cmp
test
mov
push
sbb
repnz
xor
int3
je
inc
je
pushf
lcall
dec
jne
js
fwait
xchg
fstpl
test
xor
or
lds
or
push
pop
xchg
loope
or
pop
loop
sub
sub
push
xor
push
in
mov
mov
sbb
add
or
fisubrs
test
fidivrs
push
push
fstpl
jmp
xchg
push
jns
daa
inc
jecxz
sbb
and
dec
or
leave
test
out
iret
xchg
les
adc
ds
push
fcompl
cmp
adc
mov
cmp
ds
add
mov
cmp
sub
mov
and
adc
sbb
sbb
jnp
pop
jl,pt
pop
mov
xor
jne
lahf
push
cli
add
test
repnz
push
das
adc
fnstcw
mov
arpl
mov
pop
xor
adc
orl
pushf
call
inc
ret
and
je
jmp
mov
loopne
add
cmpsb
aas
out
cs
xor
pop
cmp
add
inc
sub
xor
call
dec
ret
inc
in
sbb
dec
xlat
imul
push
inc
add
cmp
mov
add
call
mov
mov
add
je
mov
lret
in
or
fcoml
xor
pop
rcr
add
or
ror
mov
testb
adc
xchg
fidivs
cmp
mov
xchg
fld
inc
outsb
jnp
or
sub
xchg
pop
inc
mov
jb
jl
ljmp
add
xchg
mov
jge
push
pop
btr
dec
aam
jae
mov
lcall
or
out
xchg
iret
dec
jp
lahf
inc
imul
dec
inc
outsb
mov
jg
mov
and
hlt
sub
shll
test
test
mov
aad
mov
inc
xchg
fists
adc
xchg
mov
lds
neg
mov
xor
bound
sbb
adc
pop
ds
and
add
pop
scas
shld
xor
xor
sahf
mov
and
in
cmp
inc
out
xor
dec
sub
dec
cmp
mov
and
xor
xor
cmp
adc
je
pop
xchg
adc
push
pop
test
mov
rcl
push
das
popf
sbb
inc
jg
out
sbb
ret
enter
push
sub
and
inc
int
jmp
xor
xor
and
scas
je
test
xchg
fdivrl
jns
sbb
push
dec
sub
pop
jno
mov
pop
pop
mov
jecxz
inc
mov
mov
es
ret
jge
xchg
clc
mov
cmp
jbe
sti
push
jge
push
add
imul
lret
cmp
test
inc
clc
gs
int3
pushf
and
push
and
jmp
pop
icebp
fistpl
mov
rcll
cmp
xchg
in
in
and
mov
fs
push
mov
fcom
and
daa
out
cwtl
dec
or
scas
xchg
into
push
xchg
mov
mov
sbb
adc
jmp
push
mov
dec
pop
mov
lahf
push
and
mov
sbb
cmp
in
roll
out
mov
addr16
movsl
mov
pop
sbb
push
fmull
sbb
mov
addr16
mov
xor
sub
ret
mov
cmp
fidivs
js
lea
sub
xor
das
jge
popa
loope
nop
mov
jns
adc
sbb
stc
cmpsb
test
sarb
pop
das
push
imul
testb
sbb
sub
mov
push
xchg
into
jb
movsl
ret
jae
adc
jg
fprem
jns
mov
mov
aad
add
test
daa
sbb
jno
aaa
dec
popf
jb
sbb
mov
cmp
pop
jp
push
insb
rcll
test
fcom
xchg
cwtl
stos
push
in
pop
or
xor
adc
and
inc
adc
in
daa
add
insl
mov
insl
lods
xchg
inc
pop
push
icebp
sbb
daa
xor
mov
imul
out
mov
push
push
sub
mov
xchg
mov
xor
orl
push
in
scas
loopne
sub
into
xor
push
fidivrs
iret
xchg
xchg
jl
xor
cltd
aas
lock
js
movsl
mov
jl
aad
nop
xchg
adc
lea
adc
sbb
iret
add
push
repz
mov
test
fwait
popl
in
sti
popa
shl
mull
xchg
rcrb
add
jbe
dec
pushf
inc
cld
je
adc
jecxz
gs
cmc
adc
les
popa
xchg
jl
mov
and
dec
sub
sbb
out
jne
call
out
push
push
dec
jmp
dec
dec
push
ljmp
xchg
dec
subl
xchg
jg
and
pop
subl
and
ja
into
ret
fstpl
xchg
adc
push
and
cld
ja
fbld
xchg
lret
pop
xchg
push
icebp
mov
dec
pusha
lcall
loop
inc
mov
mov
pusha
sub
lods
leave
fidivrs
xor
dec
push
clc
dec
mov
test
fdiv
imul
ds
loop
dec
push
lcall
imul
dec
adc
add
nop
cmpsb
jnp
lods
xchg
movsl
push
adc
xlat
icebp
jmp
or
outsl
outsb
fbstp
sbb
sub
xor
mov
add
add
inc
cmpsl
sub
stc
icebp
mov
mov
cwtl
ret
popf
arpl
insl
addr16
out
cmpb
add
add
jb
mov
jae
inc
add
push
inc
out
mov
jle
adc
daa
fs
or
add
aad
jb
das
xchg
dec
mov
push
mov
mov
cwtl
insl
mul
xchg
sbb
cld
mov
inc
or
fst
or
jno
or
or
mov
pushf
mov
sarl
icebp
in
rcr
jmp
mov
int
movsb
pop
pop
scas
incl
mov
mov
xchg
call
popa
dec
push
mov
je,pn
andl
int
jnp
xor
add
pop
pusha
cmpl
xlat
lahf
dec
ljmp
int3
mov
stos
dec
aam
mov
ja
jmp
mov
jb
ds
aas
rolb
push
xlat
sub
loop
out
daa
add
xchg
dec
sub
sbb
and
lret
jb
push
lds
mov
lea
dec
cli
cmpsb
mov
inc
fdivs
push
xchg
xchg
jbe
mov
push
insb
xchg
or
sbb
call
daa
mov
and
mov
inc
les
and
lds
cmp
jmp
aam
xchg
inc
lods
lea
dec
push
xchg
das
call
out
jmp
cmp
stc
xchg
lcall
dec
jle
mov
mov
mov
outsb
sbb
movsb
movsl
lods
jmp
out
jmp
push
cmp
pop
insb
lods
xchg
jo
adc
xchg
dec
sbb
cwtl
ret
xchg
pop
cmp
aaa
mov
jno
enter
das
test
shll
mov
fidivrl
jl
popf
push
nop
mov
cmp
push
mov
push
mov
sub
push
jns
test
xor
cmpsl
inc
decb
adc
mov
inc
imul
or
xchg
or
loopne
lret
add
mov
aaa
out
add
jmp
jnp
mov
out
push
mov
lahf
rol
inc
ret
jb
xor
inc
imul
xrelease
ja
inc
dec
mov
in
xor
cmp
pop
ljmp
stc
ret
shr
cmc
inc
imul
aad
data16
and
or
lds
adc
or
inc
in
push
iret
and
inc
es
cmp
jb
mov
and
imul
rcl
adc
xor
adc
sahf
sbb
push
push
xor
mov
pusha
jb
xor
cmp
pushf
sbb
out
xor
arpl
cltd
xlat
insb
test
and
dec
mov
sbb
repnz
xchg
ficoml
jmp
out
pop
cmp
out
jbe
xorb
pop
sub
jle
mov
sub
push
nop
fsub
mov
or
ftst
jo
pop
test
cmp
push
aam
in
push
adc
and
popf
dec
fldt
popf
mov
in
and
rolb
in
mov
xchg
fnstsw
shr
xchg
mov
out
mov
inc
pop
mov
aaa
xchg
rcl
pop
sar
mov
sbb
adc
aad
outsl
in
andb
clc
add
dec
or
pushf
shlb
mov
call
mov
push
rcrl
loop
cmp
sahf
xchg
cmpsb
dec
pop
dec
in
sarl
scas
mov
inc
rcr
or
cmp
movsl
inc
testb
cs
jecxz
in
outsl
inc
mov
add
sub
cmp
cs
mov
xchg
dec
out
push
adc
mov
fdivs
jo
sbb
xchg
rorb
sub
addr16
clc
sbb
add
out
cmp
pop
push
sti
xor
movsb
imul
pushf
and
lahf
lahf
test
dec
in
repz
nop
sub
jge
test
and
mov
aam
int
pop
sub
push
mov
dec
mov
cmp
sbb
loop
ret
popa
add
and
sub
jmp
and
add
loope
aas
inc
fisubs
xor
loope
mov
int3
shll
cmp
mov
mov
and
add
and
xchg
mov
jns
pop
fistpll
fsubl
pop
pop
pop
pop
dec
popa
add
aas
xchg
push
in
mov
bound
loope
xor
je
aaa
adc
in
daa
rolb
pandn
dec
divb
or
xchg
mov
sahf
cmp
ror
int3
and
add
sub
hlt
mov
fidivrl
inc
push
inc
pop
in
pusha
leave
pop
xor
mov
fcomp
and
jl
jmp
sti
lahf
test
cs
xlat
mov
sbb
lret
out
mov
in
adc
mov
ds
mov
cmp
xor
mov
push
xchg
sbb
push
insb
fidivrs
dec
bound
sbb
mov
outsb
sub
mov
call
es
cmpsb
pop
int3
xor
fmulp
outsl
dec
add
dec
mov
cmpsb
rol
inc
scas
sub
test
sub
cmp
aaa
or
out
insl
data16
xor
popa
jno
repz
sbb
dec
pop
and
popa
push
popa
or
scas
daa
sub
stos
inc
inc
or
popf
dec
mov
xchg
aad
shll
push
and
lahf
mov
xlat
data16
pop
cmovno
fdivrl
mov
fisubl
in
xchg
arpl
subb
sub
xor
int3
inc
add
icebp
lret
fwait
ss
push
mov
cmp
lret
outsl
sub
push
pop
xchg
push
in
jno
mov
inc
add
mov
roll
mov
or
sub
cmpsl
or
adc
shlb
movsb
jb
push
xchg
repnz
popf
addr16
push
sub
enter
sbb
mov
jb
jg
or
rol
adc
in
test
test
in
movsl
stos
fcom
cwtl
dec
ret
xchg
or
cmp
xchg
lret
ds
outsb
cmp
fsubs
xchg
xor
sahf
mov
or
lea
enter
rorl
cmp
or
seto
pop
inc
lret
sub
popf
inc
fildl
inc
adc
xchg
ret
jns
in
clc
repnz
iret
cmp
arpl
sbb
lret
xor
push
ret
or
dec
mov
add
pop
popa
lret
outsb
and
add
xchg
fimuls
mov
cli
testl
sub
mov
adc
mov
mov
cmpsb
or
cmp
or
aas
loop
and
aad
sbb
mov
add
jecxz
out
mov
mov
lret
lret
fcomip
out
test
add
xor
in
fdivr
das
or
xchg
scas
cmp
jg
cmp
mov
dec
jp
lods
fisubs
push
cmp
cmp
inc
ja
jge
pop
push
sbb
test
mov
jl
sbb
dec
dec
pop
or
xchg
add
jne
out
ret
xor
push
sbb
pop
rcll
lret
xchg
test
sbb
rclb
neg
mov
out
insb
or
push
ja
mov
dec
cmp
loop
dec
mov
out
mov
push
jae
sti
movsl
lea
bound
jno
inc
xor
call
mov
cltd
mov
aad
push
lret
or
inc
leave
jp
in
xor
in
mov
push
mov
mov
xchg
and
add
les
or
push
arpl
jb
mov
cmc
fwait
xor
cmp
mov
lret
leave
testb
ret
mov
popa
add
xorl
jecxz
inc
push
mov
ss
outsl
xorb
mov
test
jnp
pop
dec
cmpsl
into
xchg
ljmp
xor
rcrb
call
pop
cld
cmpsb
mov
loop
inc
test
push
sahf
xchg
and
and
std
mov
les
push
lods
lds
dec
cmp
lock
out
loop
scas
cld
add
xchg
jmp
out
in
jge
xor
popa
scas
mov
es
stos
daa
jbe
ljmp
das
js
in
test
das
les
mov
bound
mov
jne
loop
clc
push
ja
and
or
dec
lods
js
dec
es
das
scas
mov
out
lret
popf
rolb
mov
mov
add
ret
jl
mov
movsl
out
and
shl
xor
iret
test
xchg
addr16
jecxz
and
in
xchg
xchg
inc
push
pop
mov
ficompl
aad
mov
lods
pop
mov
aad
xor
inc
nop
punpcklbw
insl
dec
or
movsb
adc
in
jbe
in
hlt
fwait
in
rorl
ret
or
pop
daa
lds
mov
jmp
les
jmp
test
add
insl
mov
adc
mov
subl
push
ja
push
loopne
mov
sbb
out
sub
jp
sbb
daa
sti
jnp
or
dec
lahf
loop
lahf
jne
dec
pusha
jl
scas
subb
in
and
dec
mov
icebp
jnp
sub
cmp
xor
addr16
xor
cmpsb
loope
mov
jmp
dec
cld
mov
xchg
lock
mov
lods
add
add
int3
pusha
cmpsb
sbb
mov
test
jge
mov
adc
sbbb
cmp
outsb
test
mov
je
aas
sbb
lods
fs
jg
push
pop
mov
lret
insl
sub
call
cmpl
jnp
push
push
cmp
mov
inc
adc
inc
out
push
and
aam
pop
mov
icebp
or
dec
jbe
mov
outsl
cs
fistl
sbb
lea
mov
pop
jbe
adc
imul
pop
push
push
cwtl
fucomp
jne
pop
jno
daa
ss
out
out
rcrl
add
mov
out
test
pop
aad
testb
xorl
add
cmp
pop
push
xchg
mov
or
xor
call
inc
out
push
call
mov
ljmp
into
or
or
sbb
jb
and
outsb
inc
ficompl
mov
iret
push
push
rcrl
push
int
repnz
rclb
or
inc
xchg
int3
sub
fisubl
sub
dec
xor
add
arpl
loope
das
xchg
pop
icebp
cs
jnp
jl
mov
adc
outsl
mov
mov
xchg
jns
dec
int
xchg
gs
ret
adc
das
stos
and
cld
es
cmp
adc
js
and
int
pushw
leave
xchg
mov
shlb
mov
call
adcb
mov
xchg
adc
sbb
jp
lods
cmpsl
xchg
adc
fnstcw
sbb
push
inc
xchg
lret
jo
repnz
test
and
popf
jo
mov
cmpsb
jp
xchg
shll
sub
in
pop
int3
lea
xchg
stos
xchg
cmpb
mov
stos
lock
push
fildl
ret
mov
iret
dec
in
sbb
sub
out
addr16
hlt
add
xchg
loop
xor
sbb
cmpl
push
ds
inc
sbb
imul
sbb
mov
xchg
mov
addr16
mov
mov
lods
daa
jecxz
ret
out
jp
mov
xchg
push
mov
xor
xor
xor
cltd
jbe
out
adcb
add
js
jecxz
jg
mov
pushf
jl
cli
lahf
les
adc
jns
dec
ja
int
push
sub
push
cmp
sub
into
je
cltd
mov
mov
mov
xor
dec
pop
ret
jo
lahf
jnp
lret
out
ljmp
stc
and
mov
in
dec
add
sbb
jmp
xchg
jl
lret
xchg
xor
pop
dec
cmp
ljmp
rcrl
gs
loope
andb
into
push
inc
add
push
call
push
pop
scas
xchg
pop
dec
inc
adc
and
push
push
fsubrl
push
pop
fwait
push
mov
push
sub
fwait
loop
or
adc
pusha
mov
or
xchg
ret
les
jnp
xor
inc
insl
sbb
stc
pop
ja
and
push
aas
icebp
iret
notb
sbb
dec
lret
popf
shr
jnp
lock
pop
adc
es
pushf
pop
pushf
jg
aaa
pop
pop
lods
popa
data16
cmp
xchg
fidivs
xlat
xadd
popf
dec
arpl
jmp
mov
xor
lods
push
xor
repz
pushf
hlt
into
rcrl
or
push
iret
cmc
test
popa
push
inc
icebp
in
shrl
push
push
into
in
sub
dec
in
test
cmp
std
jns
dec
aaa
mov
rcrb
add
outsb
cmpsb
int3
aad
and
lock
cmpb
movsl
lods
out
sub
xchg
cltd
ljmp
adc
or
adc
lock
push
xor
rclb
jmp
je
sub
push
push
roll
fadds
aas
shlb
push
pop
jns
cld
outsb
ret
fldenv
dec
rclb
adc
ror
int
cmpsl
xor
scas
lods
lods
aaa
adc
or
push
mov
mov
xor
rclb
mov
and
orl
mov
cwtl
fs
fisttpl
out
mov
mov
dec
xchg
xor
push
cs
aad
insb
adc
std
add
pop
add
pop
mov
out
sbb
cli
aad
pushf
clc
mov
mov
in
pop
lcall
mulb
xchg
sbb
inc
or
je
lock
dec
fmuls
cmc
adc
push
stos
mov
xchg
imul
cmp
movsb
nop
mov
out
dec
sub
lret
cmp
inc
mov
int3
andnps
lcall
pop
xchg
or
jnp
jnp
les
sub
cmp
clc
push
dec
lods
cmc
dec
icebp
imul
mov
bnd
mov
push
push
mov
int
cmp
ret
pop
js
lcall
in
clc
movsb
pop
nop
sub
mov
fwait
xor
xchg
mov
add
inc
mov
xchg
into
xchg
out
int3
test
mov
xchg
ret
shll
jecxz
jg
add
cmp
push
cmpsl
pop
or
mov
mov
test
cmp
inc
or
ja
lret
jbe
inc
xchg
mov
in
or
repz
cmc
push
mov
xor
mov
aaa
pop
cmpsl
mov
idivb
out
jmp
outsb
and
cmp
jle
jg
cli
fildll
insl
mov
in
in
and
imul
push
sbb
divb
fidivs
inc
dec
iret
dec
dec
shrb
lock
fwait
test
cli
inc
mov
and
fildl
mov
mov
push
imul
jae
mov
rolb
adc
pop
rorb
icebp
mov
xchg
sub
lcall
xchg
jmp
sahf
enter
les
dec
add
ja
aaa
shll
testb
xchg
fdivrp
xchg
mov
ljmp
ret
mov
adc
lcall
mov
testb
fwait
and
loope
cmpsb
lea
push
jl
mov
fisubrl
fstps
hlt
scas
imul
shrb
mov
inc
xchg
add
ds
jp
inc
mov
pop
push
mov
add
add
or
fnsave
nop
stos
enter
into
cmova
iret
stos
pop
insb
inc
pop
jnp
popa
sbb
mov
push
negb
dec
mov
jns
pushf
popaw
xchg
or
inc
mov
das
push
pop
or
mov
pop
int3
mov
scas
cmp
dec
pop
xchg
aam
lods
mov
sarl
sub
lods
shlb
ja
sbb
push
lods
stos
movsb
add
xchg
test
dec
inc
xor
sub
and
loope
push
mov
mov
mov
push
xor
outsl
mov
adc
add
loop
jns
xchg
hlt
pop
testb
pushf
sub
and
xlat
xchg
cmp
icebp
shll
sarb
push
cmc
jecxz
lods
nop/reserved
xlat
stos
lock
out
jmp
in
or
lods
bound
stc
pop
ljmp
shr
push
inc
and
adcb
aad
js
push
xchg
adc
sbb
lret
je
sbb
jl
and
fbld
shll
push
stos
clc
pushf
and
jo
and
mov
pop
cs
jle
push
xor
dec
movsl
rolb
nop
sbb
cmp
xorb
mov
pandn
fldt
pop
cmpsl
dec
sub
lods
outsl
jmp
inc
cmp
xor
out
std
jmp
dec
xchg
xor
lock
push
in
jb
and
xor
adc
sub
movsb
and
bound
push
pop
repnz
clc
call
fidivs
lret
hlt
mov
cli
jmp
cmp
mov
pop
cld
inc
cmp
mov
mov
lahf
xor
fdiv
sahf
cwtl
jne
add
nop
push
mov
in
fisubrl
pop
dec
ljmp
stc
and
jl
arpl
jno
pushw
in
pop
cmp
test
pop
jl
std
mov
jp
cmc
mov
cmp
out
ret
lods
cmp
xor
dec
rclb
divb
lahf
jl
pop
decl
ficomps
mov
adc
rorb
call
add
mov
nop
xor
xlat
xchg
ret
jp
xchg
pushf
iret
push
dec
sahf
dec
jp
or
jno
jne
bound
push
shl
stc
shll
ret
cmp
adc
jne
jbe
and
dec
inc
bound
int3
push
out
in
leave
sbb
inc
pop
sub
inc
mov
xor
mov
push
ljmp
adc
pop
xchg
gs
push
ret
call
incb
mov
test
mov
scas
cmpsl
jae
and
cmp
mov
dec
push
fwait
out
sbb
scas
adc
or
xor
jno
lret
mov
mov
imul
insl
inc
pop
inc
push
mov
cmp
sbbb
shl
aam
mov
mov
mov
repz
jl
daa
decb
mov
aad
pushf
iret
mov
rcr
and
fistps
pop
adc
in
test
rclb
inc
xorl
das
xchg
xlat
movsb
cwtl
fiaddl
popf
in
ja,pn
bnd
sbb
xor
outsb
ret
adc
cmpsb
stc
leave
xlat
cmp
jmp
dec
js
push
xchg
or
jb
cwtl
movsl
add
mov
and
ret
sbb
mov
dec
adc
lds
mov
jg
add
call
pop
xor
xor
out
xchg
movl
inc
xor
inc
dec
insb
xor
ffreep
mov
movsl
jno
mov
pop
ja
sar
iret
jecxz
cmp
dec
cld
std
aaa
scas
sbb
sub
rcr
aas
dec
mov
cld
push
fidivrl
gs
pop
outsl
sub
mov
adc
mov
sub
pop
cmp
xchg
inc
inc
imul
or
pop
pop
movsl
fucomip
jno
sub
and
jp
dec
ss
push
xchg
pop
mov
inc
jecxz
sbb
lret
jle
lea
out
shrb
mov
inc
outsb
inc
lods
aad
ss
pop
xchg
scas
out
cmp
test
insb
test
mov
jno
dec
std
xchg
gs
cmpsb
mov
cmpsb
mov
xor
fdiv
sub
mov
jp
mov
push
pop
test
jp
mov
or
cs
xchg
jns
mov
out
call
add
aas
int3
sbb
shll
repz
stos
divl
popf
test
xor
jge
pop
inc
xchg
xor
lods
push
pop
movsb
mov
mov
lods
pop
sub
dec
stos
out
jnp
cltd
loope
pop
sarl
data16
mov
fisubs
loopne
stc
sub
inc
loopne
leave
push
pusha
out
outsl
hlt
lods
ja
imul
jo
adc
bound
fsts
xor
push
jo
loopne
stc
test
ss
jmpw
lret
clc
ret
popf
in
add
mov
adc
ror
push
mov
loope
mov
addr16
xchg
mov
shrb
dec
in
aaa
cmp
loope
jo
push
popa
sbbb
pop
xor
pop
movsb
inc
ficoml
into
daa
sub
or
pop
add
dec
jns
in
lret
pushf
gs
aam
cmp
stos
lock
dec
inc
fs
pop
insb
and
adc
jecxz
lahf
mov
stc
sub
xchg
lock
add
in
and
jbe
xor
sahf
repnz
dec
leave
or
stos
sarb
out
push
push
dec
in
push
push
out
imul
mov
inc
inc
lea
fisttpl
adc
or
notl
xor
pop
mov
out
aam
xchg
pop
sbb
push
pop
lods
dec
jbe
inc
fisttps
xchg
jae
in
repz
test
test
clc
loopne
mov
ficoms
cmpb
sub
mov
xor
push
pop
or
and
sbb
adc
imul
mov
andb
jns
mov
cmp
push
das
cmc
stc
pop
adc
dec
mov
stos
push
push
cmp
inc
mov
aaa
popa
cli
scas
sbb
daa
test
jge
jmp
imul
sete
int
aaa
push
in
pusha
add
mov
mov
sbb
jb
lds
imulb
loop
cwtl
ret
or
jns
or
sbb
pusha
fwait
cmp
dec
mov
mov
lcall
aas
dec
fistpll
fisubl
pushf
push
arpl
pusha
les
pop
aas
fiadds
mov
add
loop
inc
sbb
decb
xor
sub
js
xor
sub
ficompl
cltd
mov
orl
pusha
movsl
sahf
insl
cmp
mov
inc
xor
aas
imul
mov
sbb
sub
ffreep
fistpll
adc
loop
mov
jl
pop
jecxz
in
sub
mov
mov
inc
cmp
outsl
es
mov
imul
std
xchg
fistl
or
jecxz
imul
jmp
lret
scas
push
add
inc
aam
pusha
int3
iret
xlat
inc
sbb
sub
adc
pop
roll
xor
icebp
ja
or
sbb
ja
in
dec
jno
and
sub
test
lock
dec
arpl
mov
push
pop
xchg
sub
inc
push
roll
push
cmp
and
js
sahf
das
inc
xchg
mov
insl
cwtl
lods
sbb
adc
xor
pop
sub
pushl
andb
ja
adc
pop
push
stos
push
aaa
dec
in
jno
add
xor
cmp
mov
jl
inc
or
popa
fsubl
cmp
cmp
adc
lret
jne
cmp
stc
aaa
test
jp
test
inc
dec
xor
mov
in
gs
imulb
cmp
adc
adc
push
sbb
sub
aad
jg
and
jb
loopne
lds
mov
sub
stc
inc
add
ljmp
mov
xor
sbb
rclb
js
xchg
cmp
movzbl
repz
and
mov
pop
neg
imul
mov
xchg
repz
pop
rcr
call
xor
jl
out
rcr
psubsw
icebp
mov
loopew
dec
jle
adc
inc
std
in
popf
fmul
jne
add
fstpl
stos
shl
shlb
out
push
push
dec
add
mov
lret
mov
push
push
push
rorb
xorl
inc
add
popf
xchg
sub
lock
bound
ret
sbb
cmp
add
fcomp
sub
and
cs
fiadds
ror
clc
mov
inc
mov
in
popf
xchg
daa
cwtl
jnp
jnp
sbbb
aas
mov
ja
sbb
in
shll
fwait
lret
aam
cli
pop
leave
jl
hlt
icebp
xor
adc
mov
jno
repz
jp
ja
loopne
xchg
mov
and
iret
imul
jl
xchg
lds
push
xchg
cld
mov
fcomps
xchg
stc
lahf
mov
cmp
or
in
or
mov
mov
cltd
fsub
cmp
std
inc
imul
or
push
fucomip
pop
xor
jg
sahf
mov
stos
and
pop
mov
push
sub
es
out
push
xchg
mov
add
jo
jnp
jb
mov
stos
jb
sbb
xor
push
mov
mov
push
sbb
and
pop
int
fucomip
hlt
gs
out
or
push
xor
stos
jg
jns
aam
gs
lret
je
icebp
xchg
cmp
xchg
scas
repz
ret
xorb
pop
fxch
ficomps
mov
popa
jae
xor
fisttpl
addl
out
mov
pop
mov
jo
mov
mov
mov
repnz
sahf
faddp
sub
and
add
lock
mov
inc
out
mov
mov
lret
aad
fst
outsb
pop
shrl
push
or
jo
fwait
sub
inc
jecxz
sub
dec
and
jl
pop
bnd
add
xchg
xchg
test
xchg
and
pop
movl
or
cmp
dec
std
stos
or
xchg
lods
add
ret
mov
test
jp
mov
jno
aaa
sbb
jae
sbb
test
add
mov
shll
mov
sbb
xchg
sub
pop
cmp
clc
jp
adc
mov
pop
add
mov
jg
xchg
shl
push
add
xchg
inc
daa
cmpsb
scas
dec
sbb
dec
fidivrs
jne
dec
testb
jle
dec
lods
stc
cmp
fisubl
jp
adc
add
xor
aaa
sub
sbb
addr16
dec
aad
mov
loope
fwait
inc
adc
xchg
and
popa
pusha
out
mov
outsl
pusha
loope
push
insl
loopne
frstor
add
testl
dec
out
sbb
and
add
pop
orb
repnz
lds
mov
repz
adc
mov
shll
imul
xor
adc
das
movsb
out
fs
cmp
mov
ljmp
jge
lret
adc
pop
pop
jae
push
mov
movsl
cs
sub
mov
mov
iret
jge
dec
scas
notl
les
outsl
je
jno
scas
xchg
jns
pop
js
fbstp
sbb
inc
and
rclb
das
dec
jb
lret
lret
cmp
aaa
mov
pop
add
ds
xor
dec
and
mov
ja
adc
lock
xchg
push
les
loop
es
xor
hlt
hlt
dec
xchg
push
sub
shrb
jle
hlt
pop
pop
pop
jp
xchg
pop
test
aas
scas
inc
cmp
jecxz
cwtl
pop
mov
cmp
push
lds
jg
jmp
les
push
out
or
xchg
faddl
rclb
scas
fldt
adc
pop
xor
sub
idivl
call
cmp
test
sub
fisubs
jnp
sbb
jo
inc
mov
aam
sahf
inc
jl
cli
or
inc
dec
pop
in
add
cltd
mov
pop
fimuls
fdivr
sbb
int3
jg
mov
xchg
pop
ds
ss
movsl
adc
fisubrl
push
sub
xor
cmp
mov
in
adc
scas
adc
jp
adc
pop
cmp
inc
pusha
inc
mov
mov
popa
sub
in
and
repnz
rclb
dec
gs
in
sti
sub
jne
add
call
xchg
mov
jb
lcall
mov
jbe
dec
std
cwtl
cmpb
stos
dec
ljmp
ficomps
sar
clc
es
sbbl
xor
mov
or
push
xchg
pop
adc
js
inc
mov
hlt
punpckhwd
addr16
adc
or
cmp
cld
lcall
sbb
jb
pop
nop
push
add
cmpb
jecxz
fsubs
std
fstl
bound
cmpsb
add
xchg
addr16
mov
out
aas
mov
ljmp
imul
jae
adc
inc
mov
in
xchg
mov
mov
out
jg
in
cmc
adc
mov
aad
fldl
inc
adc
xchg
push
aaa
xchg
cmp
pop
mov
sub
mov
jb
ljmp
and
fwait
je
push
rcrl
ret
jl
mov
mov
inc
test
out
push
test
cmpsl
add
mov
arpl
cmpsl
jns
push
fistps
insl
lcall
int
mov
xchg
fs
ljmp
cmc
lea
jne
pop
add
mov
push
jle
fisubl
lock
mov
add
mov
movsl
cmp
or
add
mov
and
push
sbb
mov
cmp
ss
dec
sarb
jno
rcll
out
sbb
jno
mov
sbb
repnz
or
add
adc
ljmp
divb
rcll
enter
add
xlat
adc
insb
push
sub
ret
movl
and
dec
xor
pop
add
ljmp
mov
pop
jge
cmp
sub
aad
xor
xor
rorb
mov
int
nop
out
cmp
std
sarl
jp
std
cmp
pop
cmp
lahf
mov
ret
sbb
jbe
xor
pop
pop
push
addr16
out
cmpl
stos
jmp
jb
leave
pop
sub
mov
bnd
mov
dec
xchg
subb
in
aaa
test
lock
cmpb
jne
xor
bound
add
in
in
xchg
mov
dec
lcall
dec
nop
test
xor
jecxz
pop
mov
cmp
pop
jge
gs
or
sbb
inc
loopne
dec
pop
xchg
sbb
test
push
adc
add
and
mov
inc
push
xor
in
sbb
in
lock
add
call
sbb
cmp
mov
hlt
es
das
cmp
leave
push
subps
lret
xchg
add
xor
out
cmpsb
enter
hlt
mov
push
lahf
mov
xchg
pop
test
or
pop
push
mov
ljmp
imul
into
dec
in
fcmovu
in
clc
adc
in
sbb
push
enter
adc
xor
arpl
andb
out
pop
mov
mov
ljmp
je
add
mov
mov
mov
shl
shlb
int3
lret
push
mov
fsts
pop
je
mov
icebp
nop
mov
insl
enter
push
push
aaa
cmpsb
cmpsl
ljmp
repnz
fldcw
mov
lcall
in
pop
pop
out
jb
mov
jl
scas
push
leave
dec
lock
out
ds
and
pop
and
push
mov
in
push
pop
scas
xchg
push
fldenv
xor
movsb
mov
sbb
aad
xor
sbb
enter
in
mov
arpl
rol
xchg
rcr
pop
inc
dec
clc
dec
aam
lahf
sbb
sub
fstl
sub
arpl
rorb
xor
aam
xor
jecxz
out
out
xchg
jmp
fsubrs
add
fcompl
jae
and
sbb
daa
jmp
out
sti
sbb
push
loope
mov
pushf
cld
jbe
movsl
js
jb
adc
movsb
scas
mov
lret
pop
mov
mov
lret
push
xor
into
and
movsb
xlat
mov
cmp
mov
add
pusha
pushf
jp
push
jnp
add
and
lock
cmp
mov
ja
outsl
inc
fdivrs
jg
or
cli
cmp
bnd
push
pusha
rcll
cmp
push
dec
cli
jbe
iret
les
bound
ss
dec
int3
cld
xor
stc
js
pop
pusha
xor
xor
out
dec
mov
in
ljmp
out
cwtl
add
dec
outsw
sub
xchg
cld
ret
push
inc
fcomip
adc
pop
cmp
jae
call
sahf
adc
inc
mov
push
push
mov
in
push
fldcw
fwait
lea
cmp
test
scas
dec
sbb
or
lcall
sub
xor
movl
into
call
call
lret
inc
mov
add
pop
iret
mov
and
sahf
jecxz
cs
call
rorb
jae
mov
mov
push
mov
es
std
xor
int
inc
xor
mov
cmpsb
shll
imul
mov
cmp
mov
out
fisubrl
mov
push
into
andl
pop
hlt
sbb
xchg
outsb
push
pop
ja
pop
fidivrl
fwait
dec
push
int3
add
lahf
pop
jo
push
in
mov
xchg
jl
imul
cwtl
push
cmp
repz
xchg
in
stc
scas
add
sbb
mov
inc
jae
sbb
and
adc
bound
push
adc
cwtl
lret
mov
pop
enter
pop
add
cmp
pop
sbb
imul
jns
out
push
sub
fcoml
test
leave
mov
fs
dec
push
testl
orb
popa
and
jl
inc
push
push
cmp
xlat
je
dec
mov
adc
push
pop
ljmp
jp
aam
mov
push
enter
pop
pop
mov
std
cs
mov
pop
mov
push
cmp
jne
mov
fwait
dec
mov
adc
cmpsb
mov
movsl
xchg
lods
cmp
mov
cmpsl
cmpsl
test
aam
repz
das
fisttps
mov
ret
add
cmp
dec
dec
pushf
inc
fst
test
fs
mov
sub
mov
stos
shlb
in
fcompl
out
jb
and
movsl
sub
stos
stos
mov
jb
xor
jbe
sub
xor
cwtl
mov
pop
jo
icebp
push
insl
call
shlb
jno
aad
and
pop
mov
xchg
jp
and
js
sarl
cmp
push
pop
dec
mov
addl
xchg
aam
imulb
sbb
pop
jl
cmpsb
jmp
xorl
mov
inc
mov
mov
das
sbb
arpl
sbb
inc
inc
enter
aad
pop
js
js
mov
and
cwtl
out
mov
pop
jo
or
mov
call
lcall
das
add
inc
pop
and
in
gs
repz
cmpl
testl
gs
push
fnstenv
sbb
in
ljmp
mov
lcall
test
jbe
jb
imul
fstpt
popf
pop
mov
stc
sbb
jns
imul
sub
out
stos
inc
xor
stos
mov
inc
and
push
mov
pop
xchg
pop
or
add
xorl
lret
mov
jp
pop
or
popa
or
sarl
subl
in
jnp
cmc
loopne
fistps
stos
decb
in
fwait
mov
insb
cmpsl
jmp
sub
xchg
out
cmp
mov
or
cmp
inc
nop
sub
inc
and
fsubs
in
mov
xchg
pop
sbb
push
leave
lds
or
add
lea
sbb
leave
cmp
pop
cmp
pop
xor
in
comiss
pop
sti
cmpsb
or
add
sbb
sbb
aaa
das
jno
xor
fwait
mov
dec
test
pushf
out
adc
lcall
add
ret
push
mov
sub
adc
sub
imul
cmpsb
test
jecxz
or
fwait
and
inc
outsl
rcr
es
inc
sbb
daa
shrl
inc
in
push
cmc
cwtl
frstor
push
out
sarb
add
sbb
das
mov
push
lods
loopne
stc
cwtl
push
cli
hlt
jae
js
test
or
out
mov
bound
push
jg
int
stos
cmp
mov
or
pusha
stos
jp
cltd
cmp
mov
cmp
andl
fnstenv
subb
pop
ss
jnp
dec
and
mov
inc
incb
inc
out
jecxz
fcomip
push
mov
mov
fucomp
sbb
xorb
cmp
je
test
repz
jno
mov
adc
or
or
dec
popa
cmp
in
xchg
inc
scas
pop
dec
movsb
jns
xchg
idivl
sbbl
jge
push
fdivs
and
fcom
jbe
dec
mov
push
shll
aam
lea
lods
adc
test
xlat
xchg
dec
in
push
cs
jns
cmp
and
inc
inc
or
test
sbb
pop
sub
jno
or
popa
add
lret
lcall
nop
test
gs
mov
mov
fstp
pop
xchg
stc
inc
sub
enter
pop
neg
sbb
sti
mov
cmp
pop
je
sbb
enterw
mov
movsl
push
cli
jb
cmp
mov
push
adc
push
clc
jae
dec
add
mov
jnp
sti
fnstcw
adc
hlt
xchg
sub
push
cs
xor
or
movsl
daa
and
fdivrl
mov
xor
mov
or
shlb
push
cmp
adc
push
add
jmp
and
ret
dec
mov
adc
dec
sbb
test
hlt
cli
pop
lcall
aad
mov
lret
adc
pop
mov
notl
das
lcall
hlt
adc
out
dec
lock
ret
and
out
mov
sub
imul
xchg
pop
sti
pop
fucom
jmp
jo
adc
pop
mov
or
sar
mov
dec
pop
mov
mulb
fsubrl
imul
or
mov
rcrb
adc
pop
adc
push
xchg
enter
mov
mov
lcall
mov
pop
xor
sbb
mov
inc
dec
jnp
push
idivb
scas
call
ret
and
push
negl
les
scas
lcall
mov
je
stos
jecxz
xchg
out
add
test
jl
inc
mov
and
pop
fdivrp
push
or
add
jl
mov
sbb
shrb
clc
cld
or
imul
jg
cmpsl
add
stc
cmp
fisttpl
aas
mov
fucomp
test
out
inc
jle
leave
jge
lods
pop
sahf
and
cwtl
and
test
inc
ja
pop
test
sub
test
cmp
nop
insb
jge
pushf
loop
mov
aad
ret
pop
mov
aam
stos
out
jb
jnp
enter
lret
xor
daa
pop
bnd
mov
ret
xor
mov
icebp
sbb
sbb
repz
in
xchg
pop
xchg
jle
in
or
popf
shll
popa
sahf
pop
mov
mov
data16
movsl
outsl
aaa
inc
or
sub
cmpl
pop
or
loope
out
push
imul
fists
push
sbb
push
test
cltd
out
inc
fisttpll
push
add
scas
in
outsb
mov
and
stos
leave
cmp
shlb
sbb
inc
flds
cmp
roll
sub
pusha
sbbl
mov
loop
mov
adc
xchg
push
pushf
mov
orb
sbb
push
ficompl
sahf
dec
mov
jg
inc
pop
push
lcall
ja
imul
or
lods
jae
sub
negl
lret
arpl
lods
lods
test
mov
adc
inc
and
xchg
pop
call
loop
dec
xor
and
pop
lea
dec
movlps
fldenv
sub
andl
cmp
cld
jo
test
xchg
dec
enter
inc
nop
imul
jmp
fisttpl
out
push
adc
or
pop
add
xor
int3
sti
stos
and
sub
cmp
cmp
inc
xor
popa
dec
ja
repnz
mov
insb
pop
cmp
push
jno
aas
ljmp
pusha
adc
push
sahf
ss
jle
decb
and
mov
inc
cmp
movsl
xlat
es
mov
loopne
ja
mov
pop
or
inc
repnz
in
mov
test
push
or
rcl
test
sub
add
div
cwtl
arpl
dec
test
sbb
mov
sbb
inc
repnz
stc
jns
adc
mov
pop
push
xlat
insl
rdtsc
fiaddl
mov
test
int
mov
or
pop
dec
add
scas
sti
ret
adc
dec
sbb
stc
lds
sub
daa
xor
loop
lret
mov
push
loop
push
pop
pop
cmp
pop
sbb
xchg
das
inc
aas
pop
scas
mov
pop
addl
imul
jne
arpl
jmp
mov
ss
int3
jnp
inc
xchg
mov
sub
ret
jl
arpl
fstl
push
lods
push
jns
cs
sbb
imulb
iret
pop
mov
and
fcomps
sub
inc
fld
repnz
shrb
jp
push
xchg
sahf
xor
leave
dec
jns
std
mov
pop
out
outsb
imul
addb
jecxz
int3
adc
push
push
sub
dec
jnp
scas
sub
in
popf
hlt
and
xor
adc
mov
fnstsw
pop
push
or
es
pusha
aam
and
mov
fcmovnbe
repz
repz
test
je
xor
or
dec
fisubs
jmp
mov
loopne
stos
xor
jns
in
dec
sub
je
fs
aam
adc
xchg
cltd
inc
pushl
pop
ret
addl
push
sub
repnz
cmpsl
xlat
mov
push
push
sub
movsl
mov
pop
mov
mov
scas
dec
fldt
int3
repz
rolb
aaa
inc
inc
loope
in
fwait
mov
add
mov
or
pop
inc
mov
mov
sbb
lret
out
pop
mov
push
jne
sub
stos
ss
sbb
mov
scas
ret
push
test
outsl
mov
and
jmp
lock
cltd
inc
jno
test
mov
sub
mov
rolb
ror
loop
cwtl
or
out
mov
jecxz
mov
add
push
and
mov
inc
pop
xchg
mov
movsb
cwtl
jg
fldenv
loope
cmpsb
mov
std
add
repz
xchg
jecxz
fildl
rcr
std
loopne
and
pop
inc
add
dec
sub
pop
push
add
sbb
ucomiss
stos
dec
pop
test
negb
int3
repz
mul
jne
and
push
jmp
adc
xlat
dec
jl
lea
add
sub
push
fiaddl
js
dec
int
pop
fnstsw
in
sbb
daa
jnp
adc
xchg
and
inc
sbb
in
loopne
push
add
out
cmp
adc
add
push
pusha
xchg
int
jae
movsb
jnp
or
jmp
inc
sub
orb
dec
sti
cld
cmc
out
pop
pop
mov
pop
gs
pop
test
outsl
bound
xor
aas
into
xchg
sbb
and
xor
lcall
lds
jnp
adc
je
lods
scas
jp
sbb
cmpsb
and
jnp
inc
pop
sbb
xchg
jne
lods
cmc
fs
push
xchg
push
sub
test
lock
out
adc
jbe
mov
fisubrs
mov
dec
jae
ljmp
ja
mov
in
mov
and
cltd
out
imul
mov
lods
clc
inc
xchg
lods
out
or
mov
push
nop
xchg
mov
adc
sbb
mov
pop
mov
in
icebp
jnp
pop
and
out
std
lods
pop
dec
sub
mov
hlt
jmp
std
dec
jns
jl
call
jnp
xor
cmp
in
xchg
mov
lods
pop
imul
pop
push
sbb
push
outsb
lods
cwtl
jp
cli
mov
cmp
call
pop
rcrl
cmc
xor
mulb
test
lods
add
cmpsl
outsb
add
cmp
push
imul
sub
xchg
stos
int3
push
rorb
xlat
repnz
test
lret
pop
sahf
inc
sub
movsb
mov
mov
mov
sub
addr16
mov
mov
and
idivl
fidivrs
jns
add
jle
lea
inc
bound
inc
sbb
mov
sub
mov
push
shrl
jne
adc
jg
xchg
popf
pop
xor
das
aam
repz
cmpsb
lods
fs
dec
jae
pop
cmp
icebp
in
adc
or
or
mov
cli
and
orl
or
xor
pusha
dec
or
je
iret
stc
sbb
xchg
jecxz
pushf
mov
fs
add
testl
sarl
xchg
addb
dec
push
jle
sub
jmp
insb
sbb
je
call
lahf
add
pusha
push
mov
insb
adc
cmpb
test
inc
cmp
ja
aaa
dec
outsl
inc
ljmp
shlb
lea
xor
xchg
in
and
int
ja
adc
into
ds
sbb
pusha
js
cmc
adc
jnp
xchg
mov
pusha
mov
jge
or
or
outsl
xchg
aas
mov
and
fsub
cmp
movsl
lods
mov
cwtl
imulb
popl
fstp
dec
jo
outsl
and
das
test
movl
enter
cmp
out
jmp
lret
faddp
cld
popf
push
das
sbb
jmp
mov
or
in
dec
imul
push
jne
movsl
dec
or
loope
rcrb
push
cltd
data16
add
and
popa
jecxz
lods
jnp
mov
repnz
jnp
sbbl
fstl
pop
mov
mov
nop
cmpsl
push
lock
push
fstps
adc
stc
push
mov
test
sbb
in
jb
and
aas
aaa
xchg
mov
sub
mov
int3
sbb
push
inc
popa
insl
cmp
add
idiv
sbb
dec
add
inc
mov
mov
aad
sub
xchg
popf
jecxz
addl
sub
out
fs
dec
dec
mov
mov
roll
stc
das
and
xchg
jg
nop
adc
scas
sub
adc
lods
pop
pop
push
push
xchg
scas
loop
fisubl
sbbl
pop
int
leave
clc
stos
sbb
ja
gs
dec
add
icebp
ss
or
fidivs
ret
push
mov
jnp
dec
fiaddl
imul
mov
or
les
jne
pop
push
rorb
lcall
test
ds
cli
fs
mov
and
cmpsb
cltd
sub
add
aas
cmpsb
into
mov
in
xchg
add
or
jbe
insb
adc
xor
mov
fs
push
and
adc
lcall
pop
cmc
jge
mov
xchg
in
insl
push
cmp
and
or
mov
xchg
ljmp
pushf
xchg
or
xchg
and
mov
mov
push
pop
and
test
mov
repnz
inc
gs
jle
and
arpl
stos
adc
loopne
in
jae
sbb
inc
cmc
cmp
ljmp
ja
loope
mov
adc
lods
jecxz
repnz
scas
lods
xchg
movl
xor
aam
fimull
push
mov
lods
arpl
ljmp
insl
push
stc
mov
add
xchg
outsb
mov
daa
xchg
in
aaa
push
sub
aad
rcrl
xor
pop
enter
jl
cwtl
mov
adc
fmul
mov
xchg
ss
inc
xorb
mov
popf
pop
std
push
add
gs
dec
and
in
popa
cmp
dec
mov
iret
or
inc
jnp
mov
sbb
movsb
adc
mov
cmp
dec
out
fnsave
dec
mov
inc
cmp
jg
stos
inc
pop
xchg
sub
xchg
loopne
loope
pusha
imul
cmp
xor
test
push
and
es
mov
jmp
jnp
in
lds
arpl
xchg
push
cmp
cli
xor
dec
mov
dec
test
dec
cmp
ret
lock
cmp
scas
test
and
cmp
xchg
fiaddl
call
lock
aam
jno
lds
ds
mov
xor
adc
orb
psrad
sbb
jae
sbb
jg
loop
pop
jecxz
dec
jmp
call
jb
imul
adcl
outsl
sub
dec
in
mov
cmp
adc
fistpll
insl
out
xchg
jmp
jo
add
add
mov
inc
push
leave
add
rcll
movsb
popa
pop
pop
jl
push
roll
shrl
add
lock
cli
jl
ljmp
enter
or
mov
cmp
adc
out
notl
sub
lods
mov
jl
loopne
xchg
ljmp
fldcw
imul
dec
shll
enter
js
jmp
xchg
add
mov
das
push
fcoml
daa
mov
xor
lahf
add
sbb
mov
fwait
cmp
subb
add
lods
sub
mov
lods
mov
frstor
in
mov
and
fcom
push
lahf
dec
call
clc
out
jo
out
and
or
jbe
push
sbbb
xchg
loop
jb
sbb
pop
sbb
push
xorl
xchg
xor
stos
xlat
jne
and
sbb
loop
inc
jne
jmp
add
push
fidivl
mov
ja
adc
pop
popf
movsl
xchg
stos
pop
rcr
out
sub
mov
js
lahf
cld
mov
jno
dec
pop
pusha
cmc
adc
out
aaa
mov
jge
insb
fistps
subb
ja
mov
jno
jp
and
test
mov
lods
fstl
js
das
outsl
jns
cli
push
cli
pop
mov
lods
add
bound
sub
lods
push
fdiv
push
add
or
mov
adc
rol
inc
adc
mov
pop
push
nop
push
push
popf
jns
adc
scas
mov
lret
insb
xchg
lcall
xchg
out
jno
cwtl
mov
mov
sbb
mov
test
sahf
push
xor
sub
mov
cmp
or
sbb
sub
sub
pop
add
dec
int3
push
outsb
cltd
sub
adc
pop
ljmp
lock
lods
and
inc
fistpll
out
and
mov
ficoml
pop
xchg
mov
clc
push
mov
and
iret
push
and
lcall
idivb
les
daa
jnp
adc
sbb
insl
fdivrs
inc
push
mov
push
into
mov
push
and
adc
cmp
pop
shll
mov
dec
adc
out
xchg
add
add
nop
dec
js
insb
pop
and
jbe
add
add
fs
sbb
ud1
je
mov
sti
testb
and
mov
sbb
push
and
arpl
cmp
mov
lahf
fsubrs
mov
sarb
sub
xchg
lea
mov
xor
inc
out
or
inc
pop
sub
add
addr16
xchg
adc
js
add
and
sbb
enter
push
mov
xchg
jle
push
in
xor
mov
and
xlat
add
div
cmp
arpl
or
adc
popa
insl
ret
xchg
xor
mov
or
jnp
mov
testb
or
jnp
cli
stos
fcmovu
dec
aam
inc
insb
adc
adc
dec
daa
mov
sti
outsl
jnp
test
adcb
pop
stos
imul
jns
jae
jae
xchg
inc
pop
push
shlb
ja
stos
pop
aas
scas
sub
pop
paddusb
xchg
xchg
aas
jne
lcall
test
int3
jb
pushf
xor
outsb
data16
bound
push
or
jl
sub
push
repz
fwait
push
adc
jge
pop
fmuls
sti
roll
scas
and
or
push
ja
and
mov
iret
test
jge
sbb
js
sub
adc
push
in
dec
std
jl
dec
iret
cmp
pop
pop
je
aam
pop
jnp
sub
jmp
inc
dec
mov
sub
add
sub
jmp
or
lret
ljmp
dec
icebp
mov
pop
xchg
jb
mov
sahf
push
outsl
sbb
daa
negb
cmpsl
cmp
lahf
xlat
jecxz
outsl
xchg
je
dec
mov
cs
add
rcl
mov
arpl
and
cmc
xchg
sarb
std
mov
testl
repz
pop
add
jmp
push
dec
incl
push
push
loope
xchg
sahf
fistpl
mov
clc
movsl
out
adc
dec
mov
cmpsb
mov
mov
fmuls
scas
inc
add
mov
lcall
pop
ret
gs
jno
add
mov
roll
add
sti
sub
pushl
fs
or
or
push
pop
xlat
push
jmp
add
pop
icebp
mov
fucomp
fwait
inc
push
daa
imul
or
inc
inc
push
mov
fistl
ret
pop
jne
mov
xchg
mov
cmp
xor
es
shlb
mov
xor
cmp
pushf
and
dec
push
movsl
sbb
add
mov
or
add
lds
mov
pushf
inc
xlat
mov
inc
int3
pop
in
fsub
test
xor
inc
sbb
nop
sbbb
shlb
mov
fwait
das
lods
clc
repnz
dec
les
or
enter
jnp
xchg
out
jp
arpl
test
cmp
loop
dec
jns
or
push
mov
push
cld
pop
je
pop
call
test
dec
dec
push
mov
push
out
cmp
dec
jg
adc
loop
cli
jge
pop
add
ret
mov
movsb
xchg
outsl
cltd
repz
adc
and
fbld
pop
sti
icebp
add
imul
mov
mov
pop
mov
sub
lds
fisubs
out
scas
push
cmp
imul
xor
mov
or
sbbl
lcall
xor
or
sub
or
push
sti
sbb
jns
jge
sub
xchg
aam
sbb
or
sbb
in
lea
lret
mov
std
shll
add
sub
xchg
leave
sbb
insb
mov
inc
xlat
and
lods
rcll
repnz
add
jnp
jbe
sahf
mov
or
add
in
mov
shlb
push
call
es
adc
cmpsb
push
jb
stos
pop
push
sbb
fildll
cld
into
add
aas
daa
repz
mov
and
jge
xchg
inc
cmp
add
ss
mov
rorl
or
pop
iret
inc
xchg
mov
arpl
xor
jno
adc
xor
pop
clc
aad
arpl
and
imul
xor
add
jge
push
push
sti
add
sbb
mov
fstpl
shr
and
les
loop
xor
push
sbb
push
decl
or
and
sub
mov
fstps
shll
pop
sub
cwtl
lcall
les
mov
inc
cmp
jne
popa
mov
cmp
call
xchg
pop
lahf
xor
mov
jmp
xor
sub
cmc
aaa
lcall
push
sub
jbe
mov
or
push
cmp
mov
dec
sti
sahf
mov
mov
into
std
repnz
add
repz
ficomps
jbe
mov
pop
int
mov
rcl
push
mov
inc
dec
pop
enter
loopne
pop
ds
sub
xchg
imul
sbb
xor
dec
cwtl
fbstp
cmp
repnz
je
push
push
mov
pusha
nop
clc
aam
pop
mov
loopne
lea
aaa
ljmp
xchg
or
pusha
fwait
in
test
xor
lahf
or
jg
data16
sti
xchg
loop
mov
int
subb
scas
jmp
pop
in
adc
mov
push
and
jg
arpl
in
push
lcall
jl
in
loop
std
jl
inc
push
iret
pushf
iret
fisttpll
mov
fcomps
add
adc
inc
add
inc
rclb
les
add
add
popa
into
cs
idivb
fisubl
mov
sbb
int
fnstcw
cwtl
lret
std
sub
cmp
pop
lret
push
leave
rcll
pop
out
hlt
popa
fisubrl
sbb
shll
xchg
pop
das
pop
stos
jecxz
jnp
ret
jns
push
mov
fbstp
daa
cmp
sahf
mov
iret
cltd
pop
sub
cmp
aam
in
pop
pop
out
inc
pop
inc
icebp
xor
cli
fcmovbe
sub
sbb
sub
inc
jmp
jl
int
cli
dec
jecxz
sbb
mov
adc
shll
sbbb
pop
xchg
and
hlt
pop
mov
add
jne
aad
mov
mov
add
mov
imul
daa
test
push
insl
adc
add
cmpsb
addb
add
or
insb
cmc
jmp
add
outsb
test
and
mov
lods
mov
in
sahf
xchg
and
mov
data16
mov
es
popl
rclb
outsl
outsb
push
xchg
xchg
lret
into
in
popf
jle
mov
inc
pop
jnp
in
stos
mov
push
push
mov
xchg
test
in
out
mov
sub
push
loope
sub
hlt
out
mov
nop
cmp
sub
stc
aaa
lcall
fstpt
sub
sub
js
or
je
inc
pop
xor
mov
mov
or
je
idiv
je
mov
daa
inc
mov
test
loopne
sbb
xchg
xlat
aad
pop
adcl
push
adc
out
outsb
lret
lods
scas
std
push
mov
das
fs
cmpsb
test
and
nop
pusha
ds
dec
sbb
ljmp
mov
scas
cli
xor
fnsave
add
jo
pop
shl
mov
mov
mov
loope
mov
lret
cmp
andb
sahf
fldenv
hlt
push
iret
cmp
jo
sarl
jo
out
sub
inc
scas
int3
cmc
out
idivb
push
fwait
cmpsb
xchg
xor
or
jo
mov
call
mov
mov
dec
subps
int
out
mov
sbb
out
clc
adc
jae
test
je
incl
cwtl
inc
pop
xor
je
lea
pop
cld
ret
arpl
icebp
sbb
sbb
add
rorb
cwtl
sti
adc
jmp
push
pop
negl
sub
cmp
inc
jge
adc
int3
xor
aaa
mov
xor
jle
xor
xchg
mov
sub
add
add
jne
leave
xor
or
dec
repz
or
int3
push
mov
jl
cmp
in
cs
lret
jne
pop
popa
das
dec
jge
mov
fnstenv
outsl
fbld
and
mov
mov
imul
shlb
rorb
jl
xchg
shl
aas
cs
imul
scas
sub
and
int
mov
sahf
dec
addl
dec
clc
lahf
mov
sub
sbb
sub
mov
inc
frstor
mov
inc
insl
dec
cld
pop
mov
leave
sbb
cwtl
jnp
jb
rcrl
insl
leave
mov
cwtl
dec
js
pop
daa
shll
pop
sub
mov
lahf
xchg
and
inc
repnz
xchg
ljmp
inc
imul
scas
pop
mov
xchg
enter
outsb
sbb
insb
dec
hlt
and
loope
sub
insb
lahf
mov
pop
push
cltd
cmpsl
iret
mov
inc
lock
outsl
mov
in
pop
cmpsl
lret
das
mov
push
jne
pop
cmc
inc
mov
mov
add
push
rol
out
idivl
pop
adc
sbb
inc
push
xchg
pusha
popf
loopne
push
repz
dec
movq
divb
ss
mov
adc
xchg
dec
std
es
gs
outsb
aam
mov
lea
les
lock
ds
jb
mov
mov
lods
clc
xor
adc
jbe
call
push
inc
or
lret
jnp
cmp
push
mov
and
adc
push
cmp
pop
lahf
pop
fcompl
lods
ds
out
cmp
adc
sbb
into
lods
xor
outsl
dec
out
push
pop
jnp
mov
or
xchg
jo
mov
push
fiadds
into
ror
fistpll
cmp
mov
add
test
mov
in
mov
mul
cmpsb
xchg
int
add
test
sbb
push
and
inc
or
dec
jae
outsb
sub
clc
lock
iret
mov
mov
fs
push
gs
insb
in
fisubrs
or
pop
in
insb
lret
mov
aad
inc
insl
jb
les
sahf
stc
adc
rcrb
and
jnp
out
inc
add
mov
les
rolb
cmp
data16
pop
imul
loop
sub
push
cmpsb
jo
cmp
into
xor
ret
mov
nop
out
cltd
dec
das
movsl
arpl
inc
xlat
or
out
add
mov
jmp
mov
xor
pop
arpl
pusha
fdiv
cmc
call
lods
sub
fldcw
jbe
pusha
xchg
jne
daa
imul
aas
stc
icebp
pop
popa
fdivl
outsl
popa
jns
and
jo
or
push
mov
xor
dec
xor
arpl
outsb
ss
adc
subb
push
cmp
and
cmc
push
xchg
jo
jecxz
mov
jbe
cmpsb
mov
xor
dec
sub
mov
jo
dec
xor
xor
and
xlat
into
clc
push
mov
inc
hlt
pop
pop
pushf
aaa
daa
push
insl
jae
adc
inc
movsl
sbb
push
sbbb
cmpsb
scas
fimuls
leave
xor
pop
ljmp
shrl
imul
mov
xchg
mov
push
dec
jmp
rcrl
mov
roll
js
push
fcomi
fsubl
leave
xchg
lods
inc
aas
mov
loope
aam
mov
mov
and
sbb
xchg
xor
push
dec
xor
sbb
mov
insb
jnp
xor
pop
mov
adc
inc
xor
pop
dec
xchg
ja
movsb
das
jae
sti
adc
cld
or
scas
jmp
gs
or
xor
cmp
cmpsl
test
sub
enter
fstpt
dec
mov
lods
in
shl
repnz
scas
mov
push
push
push
xchg
mov
fcoms
or
mov
sbb
pop
cmc
xor
sbb
adc
mov
add
jecxz
das
in
adc
ret
pop
adc
mov
add
jl
js
jle
cmp
mov
adc
xor
mov
add
mov
fcomps
inc
pusha
scas
ljmp
sub
pop
xor
int
and
call
repz
out
test
and
jbe
inc
imul
add
test
lret
push
out
outsl
cld
clc
shrb
mov
or
pop
pop
mov
sbb
lret
mull
push
xchg
lods
sbb
pusha
push
jp
popf
mov
aad
fdivr
cltd
daa
mov
push
lods
and
out
shrb
jecxz
push
in
test
mov
push
jo
jnp
popf
out
popa
orl
mov
mov
or
add
push
rcl
aam
test
testl
fsubr
inc
ret
jbe
jmp
cmpsl
dec
xlat
sub
movsl
jle
testb
adc
rcl
aam
daa
imul
push
test
ret
xor
les
lret
cwtl
in
lret
pop
mov
and
or
icebp
outsb
lret
adc
loopne
mov
dec
cmp
les
or
push
ret
repnz
popf
in
or
ss
pop
lds
inc
cmpsl
fidivs
sbb
jg
or
mov
inc
mov
mov
mov
xor
repz
dec
das
mov
data16
push
xchg
scas
pop
or
mov
cltd
int3
mov
pop
sahf
mov
dec
filds
add
in
sub
cmp
push
nop
push
pop
sbb
popa
inc
imul
mul
push
dec
call
jb
add
fistl
stos
imul
pop
loopne
mov
jae
mov
mov
insl
mov
js
lcall
imul
adc
in
cltd
sub
loope
gs
and
and
push
add
xor
pop
jne
jecxz
jne
out
inc
loopne
inc
add
shrb
dec
jecxz
mov
lea
loopne
stc
sbbl
popa
pop
pop
icebp
in
out
push
aad
mov
jo
mov
fadds
in
daa
xor
dec
pop
pop
inc
ja
jecxz
adc
push
push
xor
pop
out
add
sahf
mov
mov
scas
jp
cwtl
mov
cmpsb
and
xchg
cmp
jns
sahf
sbb
out
sub
pop
mov
movsb
push
cmp
lock
and
fs
pop
mov
in
addr16
push
dec
hlt
pop
cmpl
scas
cmp
mov
inc
pop
sub
xchg
push
es
adc
inc
inc
movsl
dec
mov
inc
cmpb
addl
xor
push
subb
lret
je
cltd
cmpsb
xor
lea
mov
imul
aad
orl
test
sub
andb
xor
mov
leave
das
les
test
mov
repnz
add
mov
mov
leave
push
hlt
lret
jno
lret
xchg
mov
jle
punpckhwd
ret
adc
jmp
rorl
push
insb
and
mov
pusha
jmp
stos
mov
ret
arpl
xchg
mov
fdivl
xor
fcomps
mov
lods
jg
mull
in
cmc
push
in
jb
xchg
movsb
pop
and
inc
stc
adc
xorl
mov
lds
cmp
outsb
mov
test
inc
out
xor
leave
out
sub
cmp
sbbl
test
shrl
nop
add
cmp
ret
gs
and
shl
push
mov
ret
lret
push
js
sahf
add
mov
ljmp
adc
out
xor
xchg
scas
in
inc
sub
mov
test
addr16
push
rcrb
or
dec
dec
insb
inc
lcall
ljmp
mov
insb
lods
or
inc
cld
mov
jecxz
fimull
sarb
aam
divl
inc
imul
pusha
push
sti
popf
pop
push
pop
cld
add
ret
popf
cmpsb
mov
push
pop
icebp
in
bound
adc
fidivs
dec
push
enter
stc
and
mov
out
xlat
jnp
push
pop
fiadds
push
test
fs
mull
push
cmp
jmp
inc
jns
mov
psrlq
inc
dec
lock
ss
fsubrl
int
aas
mov
fdivrp
sti
fistps
pop
sub
mov
xlat
outsb
push
dec
cmp
xchg
jbe
dec
insb
lods
mov
addb
sub
add
jp
outsb
adc
jo
sub
inc
lcall
jp
sbb
sub
leave
mov
popf
jmp
stos
or
push
push
pop
jge
int
pop
mov
inc
scas
out
mov
outsb
adc
mov
in
mov
sahf
in
lret
jecxz
push
je
ror
dec
cmp
jg
popf
and
xor
lods
mov
or
iret
aaa
inc
mov
xchg
repnz
fistps
mov
mov
mov
sub
in
mov
andl
push
cmc
jbe
leave
mov
xor
dec
inc
pop
stc
push
std
push
inc
jle
les
shr
xlat
cmp
lret
adc
inc
pushf
out
out
mov
ds
cmp
sub
gs
stc
lock
stc
jg
leave
stos
xchg
ds
loope
xchg
sub
cmpsl
push
scas
jns
push
int3
aaa
cmp
pop
dec
lds
xchg
sbb
fwait
daa
imul
pushf
jnp
push
adc
fnstsw
in
sbb
jmp
das
lret
inc
inc
test
test
mov
loope
push
bound
add
xchg
fistpl
mov
int
movb
xlat
xor
imul
popf
adc
pop
dec
pop
out
cmp
cmp
cld
imul
xchg
out
push
mov
lods
sbb
or
je
cmp
inc
movsb
nop
add
jbe
dec
push
jne
mov
imul
fnstsw
jp
les
inc
pop
pop
add
sub
roll
mov
dec
pop
ror
addr16
cmp
pop
push
push
sub
jb
pop
push
sbb
sbb
add
lods
dec
fimuls
lods
test
aam
outsb
cmpsl
xchg
mov
loop
ljmp
mov
inc
fstp
pop
fimuls
inc
mov
xchg
xor
fsubrl
ds
cmpsb
fimuls
dec
inc
in
pop
sub
push
dec
es
push
aas
mov
ss
lahf
mov
or
scas
stc
mov
jl
sbb
lcall
aam
and
and
pushf
out
mov
jge
and
cs
mov
pop
call
nop
dec
and
sub
xor
repnz
test
mov
nop
mov
out
gs
ret
sti
mov
jge
xchg
into
push
pop
or
lock
fcomip
ss
rcll
mov
sub
popa
dec
xchg
arpl
fbstp
or
es
mov
push
mov
ja
mov
mov
jnp
mov
mov
sbb
int3
aas
fwait
mov
sub
outsl
sub
mov
stos
cmp
pop
add
iret
xchg
aaa
pop
mov
rorl
sub
pop
icebp
outsb
adc
or
sbb
sbbl
lahf
or
inc
pop
add
or
sub
sbb
out
pushw
ja
and
iret
jbe
outsl
pop
movsb
sbb
xor
xchg
and
cmpsb
fdivrl
popa
mov
sti
orl
daa
mov
out
mov
clc
fwait
cmp
in
inc
xchg
fistpl
sbb
pop
cmp
fdivr
pop
xchg
and
test
test
inc
inc
jo
lea
loopne
ficompl
xchg
lcall
adc
or
jmp
xor
out
mov
mov
adc
mov
cmp
lods
icebp
sub
sbb
out
adc
int
mov
imul
lds
aas
outsl
mov
cmp
xchg
fmuls
or
xlat
inc
fistpl
data16
push
mov
icebp
cmp
fisubrs
daa
test
aaa
mov
insl
or
cmc
sti
mov
call
and
inc
enter
fcmovbe
sbb
dec
or
adc
push
out
sti
jg
out
int
jnp
sub
or
outsb
gs
jecxz
push
aad
adc
out
dec
and
dec
and
dec
mov
fwait
and
es
add
xorb
xchg
stc
test
pop
orb
in
mov
mov
aam
lods
pop
add
ss
aam
inc
lods
mov
mov
lret
xchg
or
mov
mov
pop
adc
fsubs
xor
xchg
mov
pmuludq
jb
push
inc
sub
pop
ds
dec
pop
add
jmp
out
lahf
roll
xor
jnp
mov
inc
cli
xor
jae
outsl
push
pop
adc
addl
data16
dec
and
and
and
div
mov
or
pop
mov
sarl
inc
mov
dec
iret
jmp
rcr
and
push
pop
adc
dec
rcl
rclb
jge
fs
into
inc
mov
jle
inc
mov
mov
mov
hlt
rcr
mov
mov
mov
inc
mov
icebp
arpl
ja
push
outsb
sub
and
incb
and
rcll
push
sbb
test
fbld
popf
mov
sbb
out
jbe
dec
mov
hlt
mov
iret
arpl
int3
stos
push
ss
mov
aas
popf
sbbl
aas
je
insb
insl
cmp
push
fisubrl
inc
movb
xchg
outsb
repnz
shl
ljmp
fstl
sbb
mov
xchg
in
lret
mov
lods
nop
cmc
push
jno
stos
orl
jns
jp
xor
mov
jb
adc
push
daa
and
leave
lods
xor
push
mov
dec
sbb
inc
lds
jp
pop
mov
clc
roll
sbb
js
jnp
ss
sbb
fldt
cmpsb
or
xor
outsb
pop
lods
rorl
dec
xchg
ljmp
and
dec
into
push
enter
lods
jl
sub
cmp
adc
xchg
pop
inc
hlt
loopne
clc
and
rolb
mov
jl
adc
stc
mov
out
loop
jne
mov
std
fmul
jo
adc
repnz
fwait
push
mov
cmp
jmp
xorb
xchg
cmpsb
sbb
adc
sub
mov
mov
inc
fidivs
and
and
inc
adc
fstps
test
in
jecxz
testb
pop
loopne
repnz
and
test
push
ret
fcmovnbe
or
movsb
mov
push
js
ja
sub
pop
psubq
pop
ljmp
in
sarl
ja
inc
nopl
pop
or
sahf
adc
push
cmp
xor
icebp
xchg
sbb
and
mov
jnp
jb
mov
into
sahf
imul
rcrb
in
sti
js
cmc
das
mov
inc
dec
and
or
clc
popf
dec
xchg
sahf
jns
out
std
push
and
sbb
and
push
push
cmpl
shr
jg
push
sbb
jo
mov
ret
fdivr
loope
lret
ja
push
subl
bound
inc
mov
add
ret
push
lods
call
ret
pop
in
jae
adc
add
lea
cmpsb
and
into
fdivs
jae
repnz
lock
or
daa
add
js
flds
adc
aaa
inc
xlat
jne
and
xor
xor
into
popa
fs
sbb
lahf
jp
fidivrs
hlt
pop
cltd
outsb
cwtl
pushfw
mov
pushf
ja
cmp
imul
ret
outsb
jb
rclb
or
mov
xor
out
stos
ljmp
xchg
js
xor
loop
cmp
xchg
push
mov
outsb
notb
jle
call
enter
aas
aad
xlat
xchg
push
into
jae
sub
mov
int
sub
pop
in
outsl
xchg
inc
mov
sbb
xor
and
adc
and
adc
lret
pop
add
sub
out
dec
sbb
popf
mul
rclb
pop
in
sub
jle
das
pushl
repz
dec
iret
dec
sub
outsb
out
lcall
pop
lret
dec
mov
js
sbb
into
add
addb
shlb
arpl
mov
and
cmp
cmp
xchg
fildll
inc
xchg
xlat
shl
fcomip
out
mov
or
push
mov
sti
mov
or
outsb
rcrl
xchg
ljmp
pop
sbb
sub
subb
in
ficoms
dec
xchg
xor
xchg
push
mov
por
aam
ret
adc
loopne
popl
test
outsl
pop
addr16
fisubrs
jno
or
dec
push
sbb
or
out
xchg
push
repnz
cmp
out
or
xor
int
repnz
fdivrs
xchg
shlb
out
inc
xor
dec
and
mov
mov
jb
jge
mov
out
xchg
mov
push
lret
fsts
dec
pop
xor
lods
inc
xor
or
test
or
imul
add
fcom
mov
movsb
outsb
mov
rcrb
sarl
rorl
push
popf
jns
mov
shll
cltd
lcall
call
clc
xor
mov
fbld
fldl
xchg
test
mov
dec
bound
outsl
xchg
fisubrl
das
push
test
cmp
add
gs
xchg
in
xchg
sub
lret
cmp
xor
sub
loop
fbld
jmp
stos
inc
les
movsl
pop
out
leave
mov
add
hlt
sahf
fdivl
cs
push
pop
sub
mov
in
pushf
orb
test
stc
sub
mov
adcl
fdivrs
pop
xchg
out
fcmovu
insl
es
test
psrlq
cmp
lock
sub
mov
xchg
lret
sub
xor
repnz
xor
push
push
mov
xor
adc
xor
push
ljmp
aas
or
and
out
push
or
sahf
inc
sbb
imul
or
jl
outsb
mov
inc
push
sti
mov
dec
dec
sub
in
inc
inc
sub
push
pop
mov
push
inc
in
rclb
dec
sub
sar
sbb
movsb
adc
adc
aas
aaa
cmpsl
repnz
inc
jne
jno
lcall
test
sahf
cmpsl
mov
cwtl
jo
int
and
inc
mov
aas
out
dec
mov
mov
leave
mov
mov
sbb
bound
jecxz
ljmp
cmp
sub
decl
sub
mov
inc
test
test
in
add
insb
fsubrp
call
aas
pop
push
sbb
mov
jb
out
jle
xor
pop
xor
mov
push
dec
popa
fcmovbe
and
or
dec
data16
mov
loop
cmp
dec
nop
dec
ljmp
popa
in
ss
fidivrl
cmpsb
addr16
or
sub
adc
jb
add
cmp
popf
hlt
cli
pop
out
jne
mov
ja
mov
sbb
cmp
dec
int3
daa
or
ss
test
jno
loope
adc
push
lret
adc
mov
pop
add
dec
in
sbb
scas
ret
ret
mov
lea
jns
or
adc
jle
dec
add
jecxz
bswap
in
sarl
mov
mov
jo
push
repnz
insl
mov
addr16
or
imul
out
or
fcoms
pop
sbb
shll
stc
int
popf
xchg
pop
sbb
pushf
or
stc
and
js
sbb
or
sahf
lock
stos
es
cltd
cmp
push
je
dec
dec
sbb
cwtl
test
mov
jmp
pop
subl
inc
lock
push
out
shll
mull
and
repz
in
scas
sub
icebp
adc
ds
iret
in
inc
pandn
or
rolb
int
dec
jmp
push
cwtl
xchg
inc
lret
and
mov
rcr
aam
jge
dec
stos
pop
jp
sub
cmp
xchg
popf
loopne
inc
mov
popa
in
pushf
mov
mov
push
stos
daa
sub
push
inc
in
dec
mov
shrb
and
and
cmp
cmp
lock
sub
mov
mov
or
les
cs
call
stc
or
jle
in
lods
int3
ja
pop
test
xchg
inc
stos
out
in
cmp
faddl
mov
lea
imul
lock
orb
sbb
mov
sub
lret
xchg
cli
inc
leave
pop
mov
mov
rclb
push
test
dec
shl
mov
clc
jle
iret
sbb
fstps
sbb
fstl
into
sbb
dec
dec
push
rcrl
test
or
mov
shrl
in
push
gs
leave
or
test
icebp
mov
dec
movsb
popf
test
int3
dec
push
sbb
repnz
inc
add
xor
test
sbb
das
xor
push
add
insl
loopne
adc
cmc
lods
ja
mull
add
jbe
push
lcall
jbe
jno
stc
cmp
loope
inc
popf
test
pop
iret
mov
test
ss
es
aaa
push
aas
imul
cmc
ljmp
fistpll
pop
jge
scas
xlat
sti
mov
ss
push
jg
in
mov
addr16
push
out
xchg
out
jo
pop
mov
xchg
inc
push
jnp
stc
jne
ljmp
fisubl
mov
inc
fidivl
dec
aad
mov
inc
mov
stos
jp
lret
adc
dec
jo
stos
fldl
bound
gs
call
stc
xchg
sbb
mov
xchg
aas
mov
fbstp
scas
push
add
mov
jae
arpl
mov
ss
mov
mov
sub
repnz
xor
or
mov
lret
dec
cs
cwtl
or
aad
jg
push
lret
sub
and
and
adc
lret
int3
mov
sbb
scas
dec
fbld
ss
rorl
mov
pop
out
outsl
sub
cltd
sub
lahf
inc
mov
dec
cmp
jg
mov
mov
cmc
pop
jno
imul
dec
hlt
fwait
test
out
mov
xchg
push
adc
out
jp
cs
inc
mov
stos
sti
test
mov
aam
push
and
inc
adc
pusha
mov
cltd
test
adc
inc
test
mov
popf
adc
ffree
scas
cmp
fsubs
mov
icebp
and
sbb
fisttpll
hlt
jecxz
fisttpl
dec
or
int3
imul
cmp
xchg
pop
fsts
dec
sub
andl
in
pop
sub
imul
mov
cmp
ret
mov
cmp
pop
jecxz
cmpsb
sub
and
push
mov
sbb
pop
push
xor
or
fs
out
mov
aas
and
and
add
lahf
sbb
sbb
adcl
movsb
testb
stos
mov
mov
sbb
push
add
aaa
xchg
sbb
adcb
mov
loop
xchg
xor
std
mov
jmp
imul
cmp
test
jp
ljmp
es
dec
cmp
shrl
repnz
adc
repz
and
clc
fisttpll
inc
add
mull
xchg
es
ss
xor
adc
xor
icebp
lea
stc
mov
ds
cmp
mov
sbb
xor
mov
sti
repnz
cwtl
bound
pop
inc
aad
cld
jmp
mov
aaa
lods
hlt
mov
lds
xchg
cmpsb
inc
mov
and
fwait
dec
addl
mov
inc
clc
loope
xchg
cmp
movb
pop
dec
fmuls
xor
mov
mov
mov
mov
mov
push
sti
mov
mov
pop
insb
idivl
adc
lock
sub
sbb
iret
and
xchg
or
arpl
and
push
scas
push
jo
sbb
push
xchg
icebp
cmp
lahf
ljmp
insl
mov
mov
sti
outsl
mov
insb
dec
lcall
lret
sbb
loope
fisubrs
jg
push
xchg
push
push
mov
add
outsl
dec
pop
or
cld
inc
cmp
not
cwtl
xchg
or
mov
inc
lret
cwtl
adc
cmpsl
add
test
dec
pop
cmc
aaa
int3
pop
stc
push
shrb
scas
ja
mov
xchg
xor
or
xchg
mov
xchg
jbe
inc
lods
cld
scas
ret
mov
xor
mov
mov
push
mov
xchg
gs
in
push
fwait
cltd
neg
in
mov
add
aad
xchg
sbb
movsb
push
add
shrl
xchg
add
scas
pop
cmp
and
fisubl
push
mov
push
mov
scas
xchg
mov
imul
and
dec
imul
and
int3
fdivrl
imul
imul
adc
ja
dec
mov
cmp
inc
scas
fisubrl
stos
push
mov
adc
sbb
aam
scas
test
ret
fcmovnbe
pop
push
mov
arpl
mov
cmp
xor
lods
xchg
adc
pop
adc
repz
or
jne
cmp
or
sub
loop
adc
in
adc
jno
push
aaa
mov
xchg
rorl
jmp
sub
and
adc
push
add
setno
pop
icebp
and
fistpl
aas
lods
adc
mov
mov
leave
adcl
sbb
repnz
fstpt
sbb
loopne
enter
bound
fcomi
sub
cmc
inc
xor
push
mov
pop
mov
pop
fwait
pop
push
add
lcall
xor
in
pop
ja
pop
mov
iret
inc
xor
xor
jno
mov
fbld
xchg
daa
shlb
mov
shr
or
frstor
push
cli
hlt
and
insb
lea
xchg
jbe
dec
inc
xor
pop
icebp
and
adc
dec
hlt
scas
out
cwtl
sbb
out
jno
jnp
sbb
jbe
scas
not
cltd
lcall
iret
xor
orl
jmp
sub
insb
aam
cli
in
mov
cmp
cmp
lods
insb
xchg
jle
pusha
mov
cwtl
outsb
pop
jae,pt
nop
lods
bound
or
fnstsw
sub
test
loope
or
xor
sub
inc
ja
sub
adc
sub
fcoml
cmpsl
sbb
cs
shlb
orl
xchg
push
cld
dec
gs
pop
mov
mov
mov
lods
mov
sbb
xor
scas
adc
inc
or
cli
push
dec
push
push
sub
movsl
xor
mov
lret
sub
fistl
es
insl
mov
loop
jg
int
ss
dec
mov
fisttpl
cmp
mov
sub
mov
and
lods
stos
fadd
xor
clc
aas
adc
std
scas
imul
ret
insl
leave
mov
rcr
mov
mov
test
shl
mov
push
mov
mov
lahf
cwtl
cmp
leave
jmp
pushf
cmpsw
mov
xor
repz
mov
push
pop
repz
sbb
rcll
into
pop
repz
cmpsb
push
dec
fidivrl
cmp
inc
leave
mov
sub
leave
clc
dec
lret
or
xchg
xchg
inc
push
mov
out
adc
dec
int
mov
mov
clc
cmp
sbb
leave
or
or
jmp
adc
sub
out
clc
mov
mov
cmp
out
push
lret
loop
aad
fldt
xchg
into
scas
sub
adcl
inc
in
mov
xchg
jle
out
pop
aaa
lods
cmp
cmp
test
test
icebp
cmpsb
aas
mov
push
xor
enter
inc
test
cmpsl
push
js
adc
ret
and
push
jns
cmpl
loope
loopne
xor
std
rcll
push
add
xchg
jb
ja
cmp
pop
ja
pop
add
cltd
and
mov
cmp
mov
fisubl
push
xchg
cld
mov
je
mov
sti
icebp
in
pop
sahf
xlat
test
dec
add
push
mov
test
sub
or
aas
aas
outsl
cmp
outsl
mov
jl
dec
fsubl
aaa
rclb
cmp
dec
jne
cwtl
aad
or
mov
cmp
adc
and
mulb
out
lock
std
sbbb
fs
mov
push
jl
into
movsb
xor
push
rcrb
dec
push
fldt
mov
xchg
or
mov
pop
enter
xor
faddp
cmc
bound
iret
push
push
negl
fiaddl
andb
mov
push
and
push
or
fbstp
inc
in
aad
jbe
cmc
rorb
pop
sub
mov
divb
or
pop
add
push
rcr
cltd
mov
adc
enter
cmpsl
sub
pop
sub
imul
and
insl
pop
fcomps
cmpsb
xor
xlat
jbe
jo
fdivs
lods
lret
xchg
cmp
or
xor
clc
pop
mov
and
out
xlat
xor
push
push
push
and
sbb
xchg
xor
in
push
inc
sub
fcom
jae
xor
insb
ret
cld
rsqrtps
popa
decl
xchg
cmp
jns
mov
push
mov
xchg
xor
and
out
mov
pushl
jp
jo
inc
cmpsl
lock
loopne
dec
and
dec
mov
insb
stos
notl
cld
push
out
fsubr
das
lods
test
imul
pop
mov
sbb
ds
cmp
pop
rclb
xor
pop
sbb
std
cwtl
sbb
cli
popa
cld
fstl
mov
ja
aam
jns
outsb
cli
cmp
bound
ret
add
int
jo
xor
xchg
lcall
jmp
cmpsb
jecxz
push
xchg
pop
cmp
test
adc
mov
test
pop
icebp
shrb
xlat
add
lret
add
sarl
sbb
fsubl
jle
mov
stos
mov
movsl
pop
ja
push
pusha
filds
aaa
in
lds
add
fistpl
imul
mov
xchg
outsb
mov
sub
mov
xchg
sub
pushl
adc
mov
mov
jae
xchg
sub
aaa
jb
mov
test
faddl
js
inc
push
mov
enter
rcrb
push
pop
gs
pop
fsts
cmc
dec
push
sbb
imul
pop
stos
out
notb
ret
enter
lods
xchg
or
jl
and
jnp
icebp
lds
imul
xlat
jae
push
jle
clc
add
jbe
jb
inc
sub
pop
lds
jecxz
into
inc
or
in
pop
pop
daa
ja
lcall
xor
ret
xchg
adc
fistpll
push
sahf
in
gs
addr16
dec
rcrb
inc
inc
pop
pop
sysenter
cmp
pop
adc
adc
mov
and
aaa
add
mov
sub
sbb
in
xor
or
jecxz
cmp
xchg
xchg
loop
mov
add
mov
pusha
test
ror
mov
lcall
je
mov
xor
leave
int
and
addr16
mov
call
call
add
mov
lds
bound
sub
sahf
push
cmp
cmc
or
mov
add
dec
add
mov
dec
sbb
ret
jb
fidivrl
lret
movsb
pop
popa
xchg
rclb
xchg
pushf
fdivrs
clc
inc
xchg
jmp
insl
test
mull
and
subl
fistpll
pop
loop
aaa
push
sub
icebp
cmc
subl
sbb
mov
fistpl
imull
add
sbb
inc
rcll
add
jnp
xchg
adc
fs
mov
idiv
cld
push
jg
mov
inc
mov
cmp
sti
dec
leave
icebp
sub
dec
imul
pushf
inc
fdivrl
push
jo
jg
std
adc
pop
hlt
adc
mov
repnz
cltd
loope
sti
imul
mov
cmp
loope
stos
insl
sbb
or
xchg
outsl
je
ds
or
mov
mov
insl
xchg
xor
xchg
aas
or
shrl
pop
jmp
into
movsl
inc
xchg
mov
cmp
or
fdivp
fsubs
cwtl
imul
dec
inc
push
lahf
bound
ja
sub
stos
xchg
or
scas
test
jne
or
xor
aam
lahf
cmp
int
mov
ret
push
pop
push
jb
dec
jne
imul
imull
into
lahf
lret
int3
pop
jl
mov
pop
dec
pop
pop
inc
jp
loope
push
aam
jae
addr16
cmp
fs
xor
pusha
mov
out
inc
fdiv
loope
sti
mov
jle
fnstsw
lock
cmc
push
ds
mull
push
dec
clc
or
push
jmp
rorb
xorl
or
xor
push
mov
aam
mov
add
lods
lea
mov
out
ja
mov
cwtl
jmp
lock
adc
add
ds
or
sub
jne
cmp
push
adc
in
cmpsb
in
stos
mov
cs
arpl
cmp
push
movsb
test
adc
jl
scas
dec
mov
sarb
cmp
sbb
sub
dec
test
sub
aam
lds
lds
in
stos
dec
mov
push
jle
push
pop
lock
rorl
pop
push
mov
mov
outsl
jecxz
and
push
loop
push
shlb
inc
push
pop
mov
ds
mov
inc
jns
sub
fdivrs
repz
pop
fildl
sub
cmpsb
ret
nop
lods
shl
packsswb
or
mov
test
add
add
mov
pusha
rorb
jecxz
sbb
add
movsl
aas
popa
xchg
int
repz
mov
ret
mov
sub
je
sbb
pop
ljmp
pop
fcmovb
loop
inc
or
mov
mov
ret
or
mov
pop
push
mov
inc
repnz
test
out
test
jle
add
xchg
xchg
ljmp
jbe
push
insl
rcl
xor
inc
mov
outsb
scas
add
xchg
cmc
add
xchg
ds
xchg
and
xchg
ss
scas
jae
out
pop
ljmp
dec
add
mov
rolb
sbb
or
adc
jno
in
jb
jge
push
daa
loope
out
pop
bound
ds
jp
push
lods
dec
inc
add
rorb
dec
das
loopne
mov
or
or
mov
push
sub
std
jae
pushf
jle
inc
inc
lcall
adc
inc
popa
ds
leave
popl
aaa
xchg
popa
sbb
iret
cwtl
movb
inc
cs
imul
movsl
add
sbb
mov
cltd
ljmp
or
insl
add
in
mov
ljmp
je
or
nop
dec
push
sbb
pop
sbb
insb
adc
lods
jle
data16
or
jl
test
push
pushf
ds
sahf
push
js
xchg
xor
daa
inc
test
stos
mov
xchg
lods
filds
mov
fisttpl
jb
filds
mov
mov
cmp
sahf
add
jb
out
pop
xor
arpl
lock
xchg
inc
adc
xchg
testb
jno
inc
test
xor
jecxz
ljmp
out
xor
push
jle
lahf
aad
xor
lods
xchg
cmp
mov
shll
cmpsl
or
and
adc
inc
iret
cmp
daa
movw
fdivrl
mov
jecxz
xor
cmpsl
and
adc
and
cmp
adc
insl
pop
push
sub
leave
test
vmovaps
add
inc
fidivl
out
cmp
test
dec
loopne
loop
lds
sbb
clc
ljmp
or
dec
jl
flds
pusha
inc
sbb
ss
pop
lods
inc
cmp
xor
jne
lea
scas
jo
int
daa
insl
stc
cmp
jo
fstl
push
sar
adc
stos
lcall
outsb
dec
xor
dec
call
mov
pusha
int3
adc
neg
add
push
pop
imul
add
roll
pop
mov
out
cmp
movl
lahf
pop
add
mov
sub
iret
sbb
ss
and
daa
inc
adc
jp
in
je
imull
mov
movsb
push
add
jg
lret
or
cmp
add
pop
pusha
cwtl
cmp
add
mov
jmp
mov
out
inc
fstpt
pop
or
popa
cmp
in
pushf
mov
cmp
clc
pop
mov
bswap
mov
xchg
sub
push
lret
sub
adc
pop
loopne
insb
cld
hlt
out
and
repz
test
sbb
fnstcw
mov
enter
popf
xchg
cld
dec
inc
adc
lret
mov
jecxz
fisttpl
xchg
xchg
pop
xor
movsl
stc
mov
shr
fstl
xor
scas
sbb
xchg
test
leave
les
and
cli
jb
push
data16
in
xor
ret
adc
sub
mov
jbe
fs
sub
push
jg
lahf
fucomi
mov
out
imul
dec
sub
outsl
dec
jmp
push
and
sbb
cmp
xchg
adc
add
and
das
jmp
insl
test
pop
movsb
cs
xchg
cld
andl
push
push
iret
out
adcb
or
insl
dec
jo
sub
adc
inc
adc
out
icebp
cmp
pushf
xor
les
xchg
or
aas
pop
stos
or
dec
and
lahf
shrl
loop
lds
push
popf
mov
stos
add
mov
add
mov
or
inc
fistl
scas
mov
hlt
cmpsb
pusha
clc
cmp
xchg
cli
jb
movsl
decl
fsubl
out
popa
adc
imul
in
stos
leave
and
cmp
xchg
clc
pop
pop
add
mov
and
mov
jecxz
xlat
add
into
inc
loopne
fistpl
test
dec
or
bound
sbb
repz
add
mov
imul
lahf
roll
xor
mov
pinsrw
into
test
jle
out
lcall
cmp
adc
cli
ss
or
popa
pop
fmuls
pop
ds
sbb
add
ja
cld
add
cmpsl
call
push
inc
les
push
pop
xlat
mov
ret
pop
imul
adc
inc
aas
sbb
mov
adc
out
pop
out
sbb
push
lock
in
jle
lods
add
inc
adc
xlat
fstpt
test
adc
jle
cmp
movsl
test
mov
ficomps
push
iret
lahf
lods
jle
lock
fnsave
cmpb
xor
or
shl
sub
out
fwait
lret
sub
push
push
in
popa
outsb
push
xchg
mov
dec
sub
or
push
pushf
pop
cli
jmp
and
bound
push
mov
add
add
shrl
cmc
push
stc
andb
popf
sar
sub
cmc
cmp
pop
ret
mov
outsl
mov
stos
mov
jne
jge
outsl
xor
js
mov
fidivl
inc
push
inc
dec
ja
fwait
xorb
fcomps
cltd
dec
mov
lods
aad
movsb
or
arpl
cmp
push
out
xchg
movsb
sbb
dec
in
and
sub
popf
dec
mov
shrb
lret
lcall
fs
push
sbb
sti
sti
lret
testl
adc
bound
or
pop
shrb
jle
cmpsl
mov
fstl
loopne
test
cmc
sbb
hlt
pop
fsubs
repz
iret
movsl
ret
in
jnp
imul
dec
cmp
dec
xor
es
jno
xchg
push
rcrw
cld
jp
xchg
loop
pop
dec
inc
dec
insb
aam
xchg
inc
test
popa
sbb
rcl
xchg
xchg
notl
push
add
movsl
rorl
sub
pop
sub
lahf
pop
out
xor
jecxz
iret
dec
mov
xchg
test
mov
xor
outsb
cmp
std
cli
shrb
jecxz
push
imul
jae
sub
mov
push
pop
sbb
shll
test
xchg
dec
fdiv
add
sbb
in
dec
xchg
les
ds
insb
or
mov
pop
ret
lods
cli
lock
pop
jb
fstpl
imul
mov
ret
jl
push
fdiv
cmpsb
out
or
iret
aas
fs
add
sbb
cmc
jl
sub
mov
and
imul
icebp
in
jl
sub
inc
dec
fs
push
push
nop
arpl
sbb
subl
and
aaa
addr16
add
call
xor
shll
mov
idivb
out
dec
and
lret
rcrl
dec
popa
mov
xchg
jmp
and
fistps
dec
popf
and
leave
add
push
and
ret
sub
cmc
push
pop
push
pop
and
push
int3
jns
mov
mov
xchg
and
and
cmp
neg
sub
dec
outsb
dec
push
out
fwait
lcall
test
in
ss
or
subb
notl
pop
xchg
outsl
inc
jns
in
pop
into
pop
adcl
adcb
xchg
or
sub
jecxz
mov
shll
push
in
xor
inc
lret
addb
clc
mov
or
in
xchg
cmpsl
repnz
xchg
push
inc
loope
outsl
mov
incb
sub
push
inc
jge
mov
mov
stc
movsl
mulb
aas
pusha
pop
adc
movsl
call
aas
push
inc
stc
lahf
inc
data16
jo
popa
and
lret
stos
scas
lock
imul
lods
mov
js
jb
movsl
daa
push
inc
cmp
je
pop
int
ja
fwait
pop
mov
cmpsb
and
mov
or
add
hlt
test
push
mov
stc
shl
sbb
cmovs
js
pusha
jbe
lret
out
jns
xchg
or
or
and
into
shlb
gs
mov
lret
push
in
jb
imul
jbe
std
sbb
mov
mov
mov
fnstenv
xchg
leave
dec
push
pop
xchg
shlb
xor
push
mov
test
pop
xor
or
mov
mov
xchg
fidivl
pop
jmp
mov
inc
xchg
sbb
mov
arpl
into
in
mov
push
mov
or
dec
mov
sub
adc
jecxz
popf
ficompl
ss
dec
sahf
inc
jecxz
xchg
repnz
xchg
inc
push
leave
push
pushf
cmpsl
push
cmp
pop
ljmp
aas
lret
dec
adc
sahf
dec
out
fistps
imul
clc
or
and
gs
jecxz
fchs
lahf
pop
xlat
xchg
popf
jg
lahf
in
inc
mov
inc
and
aam
ss
and
nop
int
inc
add
call
rcl
xor
aaa
cli
and
jmp
sbb
fidivrs
lods
add
inc
lahf
aaa
mov
cmc
sarl
idivb
sar
sbb
and
aas
pop
adc
pop
jae
adc
and
and
or
sbbb
leave
jp
pop
xchg
mov
daa
mov
lea
dec
dec
lea
mov
cli
imul
xchg
xor
pop
call
fs
ret
mov
sarb
xlat
iret
inc
data16
pop
dec
xor
imul
pop
lods
fiaddl
cli
out
daa
jl
mov
mov
cmp
sbb
fwait
je
lret
rep
dec
arpl
jecxz
testl
pop
xor
mov
adc
sub
outsl
movsb
gs
hlt
mov
pop
mov
sbb
mov
hlt
jnp
imul
jp
add
cmp
scas
enter
ljmp
or
pop
add
xorl
sbb
sub
negl
test
fcoms
repz
shll
outsl
mov
push
test
sbb
push
jle
ljmp
out
rorl
pop
fimuls
in
in
pop
or
gs
mov
aam
dec
mov
mov
bound
adc
shl
mov
insl
xchg
jbe
aam
jo
adc
xchg
inc
dec
pop
xor
jecxz
jno
mov
leave
rorl
into
mov
jmp
pop
jge
lock
call
sub
dec
xchg
xor
fsubrs
fldt
sbb
inc
jp
jmp
cmp
repz
cli
lods
icebp
js
es
js
push
adc
xor
push
repnz
inc
movb
icebp
into
cs
pop
repnz
out
ds
cmp
jmp
mov
pop
dec
and
ret
fsts
pop
clc
adc
push
jno
add
into
das
mov
add
and
mov
inc
mov
xchg
int
mov
stc
dec
dec
sub
outsb
cmp
jo
in
cmp
jge
ds
ljmp
sub
lcall
lcall
jle
loope
loope
and
sti
jb
notb
mov
in
movsb
mov
aaa
cltd
mov
jnp
cmp
mov
in
mov
negb
jns
mov
xchg
jne
fs
mov
mov
fldenv
aam
xchg
adc
ds
shll
sbb
in
dec
pop
push
dec
add
enter
fisttps
dec
and
pop
pop
inc
mov
sub
cmp
test
jecxz
cmp
pushf
xor
inc
sub
cmp
mov
xchg
or
mov
pop
cmc
push
push
loope
fcompl
mov
pop
xchg
ret
xlat
filds
adc
add
adc
pop
aaa
jo
mov
rorl
and
sub
emms
arpl
jl
insb
sub
lods
prefetchnta
push
test
cs
les
sub
mov
adc
cmp
inc
daa
push
ds
sub
pop
orl
adc
icebp
push
xchg
ljmp
xor
shl
mov
int3
jns
aaa
or
pop
gs
mov
ljmp
and
pop
or
stos
ljmp
cmp
stos
movsl
jmp
sahf
ljmp
jge
mov
subb
fildll
cmpsl
pop
bound
cli
or
mov
fnstenv
jno
ficoms
loopne
lods
cmpsl
fwait
enter
inc
mov
pop
call
pop
das
int3
push
scas
icebp
and
aas
clc
xchg
sbb
jb
mov
loopne
jmp
data16
mov
sbbl
jl
dec
jo
lea
mulb
pop
sahf
push
cmpsb
sub
xor
add
fisubl
push
dec
xchg
mov
pop
pop
ret
xor
ja
xlat
imul
or
push
jp
mov
fs
xchg
outsl
sbb
cmp
andl
notb
in
jno
mov
in
add
mov
inc
sub
lods
pushf
add
push
frstor
insl
cmpsb
mov
xchg
pop
ds
push
jmp
dec
negl
orb
repnz
mov
mov
lods
xlat
addr16
cmp
adc
or
mov
jg
jle
popa
or
mov
jp
stos
pop
jecxz
inc
lret
nop
lret
jnp
int
pusha
test
mov
adc
shl
sub
mov
jecxz
cwtl
ret
or
lahf
mov
xor
pop
in
popa
fimuls
fsubrl
and
fwait
sbb
sbb
sbb
sahf
fldcw
rol
adc
mov
aad
mov
lock
cwtl
clc
mov
mov
ret
push
aad
sub
outsb
mov
push
fistps
divl
fildll
pushf
enter
pop
pop
js
fidivl
ss
push
mov
jns
ds
jl
pop
mov
or
mov
add
aaa
rorl
cmp
aam
mov
dec
push
fdivs
xor
or
cmpsb
leave
mov
push
add
inc
pusha
inc
mov
xor
push
into
pop
add
inc
push
mov
or
dec
xor
mov
addr16
xchg
movl
enter
les
movsl
orl
in
and
sahf
pop
hlt
cmpsl
fcoms
jnp
jge
repnz
sbb
fldl
jge
push
mov
lods
iret
lds
in
fcmovnbe
mov
outsb
jg
dec
imul
jno
mov
fs
sub
das
or
jbe
pop
int3
xchg
push
cmpl
dec
daa
test
or
out
jge
stos
dec
push
lcall
cld
sbb
pop
loopne
dec
sbbl
pop
adc
adc
dec
add
push
push
sahf
inc
ret
insb
cmp
pushf
inc
ficompl
push
lods
pop
or
cmp
push
outsl
inc
add
mov
jg
std
out
pop
jp
jmp
outsl
out
scas
aam
rcl
mov
inc
pop
ss
cld
mov
dec
outsb
sbb
enter
pop
lods
mov
inc
mov
in
inc
sub
mov
shll
in
es
xor
push
add
aad
mov
stos
sbb
sarb
or
inc
push
dec
ret
xchg
fldt
mov
daa
mov
test
ret
xchg
and
cmpsb
pop
mov
jmp
xor
push
ret
std
ja
dec
flds
push
push
lock
and
jmp
sbb
aas
adc
mov
adc
mov
imul
jp
cmp
dec
and
ret
xor
adc
loopne
jle
outsb
sub
xchg
xchg
jmp
jl
or
cmpsb
out
push
scas
in
aas
pop
mov
sbb
aam
lret
js
imul
mov
mov
sti
and
or
xchg
fistpll
movsl
lock
jg
ret
dec
aam
arpl
mov
stos
or
lret
insl
mov
jbe
jge
push
test
xor
push
jbe
out
test
pop
add
movsb
push
pushf
lret
loopne
iret
dec
pop
push
mov
cli
cmp
scas
inc
shlb
xchg
mov
leave
or
dec
iret
outsl
adc
call
shrb
sbb
rorl
mov
push
ljmp
ss
and
mov
and
xor
push
xor
addr16
test
pop
mov
pop
sbb
pusha
mov
aam
xchg
out
mov
xchg
lret
cmp
mov
fxch
add
movsb
and
cmp
xchg
mov
mov
cmpsl
add
cmc
insb
mov
lcall
jae
cltd
mov
add
xor
push
add
loope
pop
lret
sbb
mov
and
and
popl
lock
mov
add
jbe
movsb
xchg
addr16
and
xchg
mov
aas
gs
ficoml
jo
xchg
mov
mov
mov
in
cmp
xor
mov
mov
adc
aam
bound
loopne
xchg
movsl
mov
jb
jno
add
mov
mov
repnz
jecxz
sti
mov
dec
dec
popf
xchg
pop
add
mov
cs
or
add
rcl
int3
mov
or
cmp
dec
lock
repnz
push
pop
pop
dec
jne
jns
pop
pop
push
cltd
pusha
leave
fiaddl
adc
xlat
adc
dec
sbb
fs
sub
and
subb
inc
xorl
inc
push
or
out
pop
adcb
xchg
stos
dec
lea
cwtl
jge
or
nop
rorl
xchg
mov
aad
jae
inc
js
mov
cmp
bound
lret
xor
les
test
scas
mov
sub
cld
iretw
add
dec
push
rcrl
decb
lods
sbb
je
dec
inc
sbb
lret
into
scas
dec
ret
pop
into
daa
jecxz
das
bound
xor
dec
jbe
push
add
mov
repnz
addr16
je
int
push
sbb
pop
cli
adc
inc
outsl
cmpsb
movsl
sbb
scas
je
or
jbe
lock
leave
ss
sub
scas
jp
add
xchg
sbb
mov
mov
fadds
jo
sti
inc
mov
push
mov
xor
in
test
or
pop
dec
cmc
imulb
fcmovnbe
mov
push
or
xchg
pop
movsl
pop
insb
sbb
fdivr
add
pop
and
leave
outsl
add
push
insl
stc
and
arpl
cmp
sbb
xlat
enter
add
hlt
insl
mov
notb
ret
xchg
mov
rcr
pop
mov
mov
lea
setno
pop
mov
jle
sbb
cmp
xor
add
jle
mov
jl
cmp
lds
rorb
iret
stc
jae
sub
push
out
push
push
arpl
mov
and
movsb
sub
or
inc
mov
xor
xchg
popa
loope
aaa
out
aas
add
sub
dec
adc
rol
cltd
xchg
sub
addb
cld
sar
mov
add
aas
xchg
fcomi
sub
hlt
inc
stos
sti
xlat
cld
test
sub
mov
rorl
in
cld
sub
out
inc
cmp
inc
das
inc
mov
xchg
jle
inc
fs
call
jg
add
movsb
jbe
sbb
inc
jp
addr16
mov
and
mov
bound
or
lods
adc
push
pop
dec
cmp
jbe
mov
pop
iret
sub
xchg
xrelease
mov
mov
adc
adc
inc
add
fcomps
dec
sub
mov
dec
movsb
loop
int3
jno
fldl
cmp
sahf
shl
pop
and
mov
sub
sbb
cwtl
sub
fdivrs
mov
xlat
lcall
pushf
inc
cmovge
mov
mov
fcompl
decb
popa
xchg
lret
xchg
imul
push
xor
dec
jge
jb
jb
andb
inc
aaa
iret
pushf
fs
dec
rol
out
sbb
mov
jle
mov
repnz
dec
jmp
push
dec
outsb
push
push
cmp
and
push
and
add
test
push
out
iret
pushf
xor
jno
stos
dec
clc
jne
and
leave
leave
sarl
xorb
xchg
sti
pop
lcall
mov
std
popa
leave
mov
or
inc
mov
sub
dec
jns
add
push
jno
outsl
cmp
pop
sbb
in
pop
insl
dec
add
pop
mov
pop
cld
and
std
sub
orl
xor
sub
daa
cwtl
loopne
and
fcomip
into
mov
or
mov
xchg
mov
ss
fwait
out
mov
cwtl
jg
adcb
cwtl
xor
cmp
clc
call
rcrb
mov
mov
mov
movsb
aaa
pop
repz
cmp
adc
sti
in
jbe
mov
pop
xchg
rcrl
push
mov
outsl
nop
push
popf
jo
inc
nop
xchg
sbb
mov
jl
xor
sub
pop
pop
into
add
shlb
sub
sub
fnstcw
mov
fimull
shrb
mov
push
mov
fwait
jae
or
mov
cmp
pop
and
cmpb
sbb
dec
mov
rclb
mov
or
cmp
mov
or
mov
fidivrs
imul
add
mov
sbb
ss
out
cmpsb
and
mov
insl
sub
lret
mov
and
hlt
lret
dec
xor
xchg
cmpsl
cmp
xchg
mov
push
into
dec
nop
mov
cltd
pop
maskmovq
testl
pushf
es
mov
aam
test
inc
int3
out
push
fcompl
fldl
sbb
out
pop
adc
sahf
push
scas
dec
pop
inc
adc
repz
push
cmpl
cmc
stc
pop
mov
xchg
mov
cmp
loope
incb
dec
jl
loopne
xchg
scas
scas
push
and
sti
mov
into
pop
movsb
mov
cmc
mov
sub
mov
imul
aas
into
sarb
sbb
mov
ja
std
inc
mov
mov
mov
aam
mov
daa
sti
xchg
mov
leave
adc
sbb
mov
xor
pop
mov
mov
inc
test
repz
pop
cmp
dec
hlt
pop
iret
mov
or
sbb
pop
aam
cmp
lcall
lods
mov
mov
inc
nop
push
cmp
stc
adc
push
imul
dec
inc
repz
mov
jbe
jns
out
test
mov
dec
aas
xchg
clc
pop
jmp
lods
cltd
jecxz
adc
mov
lahf
insl
shlb
xchg
mov
sahf
pop
mov
mov
sub
xor
xchg
mov
mov
push
in
push
ret
mov
ds
out
movsl
nop
cs
loop
in
sub
inc
push
mov
mov
inc
and
jns
inc
lret
mov
xlat
mov
mov
ja
push
arpl
ss
leave
mov
lret
sbb
dec
add
std
sbb
mov
dec
es
mov
adc
enter
lock
icebp
dec
into
orl
mov
add
ret
lods
inc
pop
dec
cmp
mov
inc
xor
andl
mov
xor
lea
mov
testb
lds
push
adc
xor
jb
test
pop
sub
fidivrl
sti
sub
jg
sub
cmp
lock
test
adc
jmp
pop
fxch
jge
stos
sub
popa
mov
xchg
and
fisubl
adc
fnstcw
xorl
push
jp
dec
jp
jnp
xor
jg,pn
fisubs
pushf
inc
ja
jle
mov
rcrb
xchg
ret
dec
add
bswap
pop
movsl
imul
outsb
sbb
add
adc
into
cld
es
cli
in
sbb
das
mov
mov
pop
js
xchg
fsubrp
mov
xchg
or
int
mov
jb
mov
sub
or
les
cltd
lahf
xor
xchg
pop
add
ret
cltd
xchg
aaa
sub
int3
insl
inc
mov
mov
inc
jno
pushf
xchg
jecxz
gs
rcrl
dec
hlt
dec
mov
inc
jne
push
repnz
sbb
inc
jecxz
ret
scas
xor
cmpsl
fs
shl
gs
std
cmpb
inc
ss
pop
pop
xchg
lods
sbb
push
or
inc
mov
mov
mov
mov
jge
xchg
xchg
hlt
sbb
cmp
hlt
jle
or
clc
out
int3
add
and
shlb
mov
rol
sar
lock
push
stos
add
imul
loope
jmp
mov
xchg
shrb
pop
insl
sub
fsubs
sub
push
push
test
push
fcom
xor
enter
xor
add
inc
in
cmp
popf
mov
shll
ljmp
mov
cmp
adc
xchg
and
xchg
ds
jae
pop
outsb
imul
push
xchg
push
pop
in
sub
push
subl
ljmp
aam
sbb
or
arpl
cmc
mov
xor
push
xor
jge
rcrl
cltd
outsl
mov
fwait
jae
sahf
cmpb
mov
cmpl
jp
cmp
rorl
jae
mov
or
sbb
mov
inc
inc
gs
ret
add
je
jnp
les
mov
stos
xorl
pop
mov
int3
imul
mov
mov
dec
js
test
icebp
shlb
in
cwtl
pop
iret
mov
popa
sahf
inc
mov
jno
mov
test
sbb
and
popl
dec
mov
cld
scas
or
dec
pop
mulb
sar
divl
pop
pop
insb
mov
push
sbb
mov
jnp
hlt
mov
pop
aam
out
mov
cmc
aam
pop
sub
mov
dec
and
in
pop
loopne
adc
and
loope
cmp
stos
xchg
xor
pop
xchg
out
pop
add
cs
cmp
inc
sbb
fidivs
lret
mov
imul
lds
das
or
inc
dec
and
clc
push
sbb
jmp
xlat
mov
mov
cmp
mov
xor
xchg
gs
dec
or
push
adc
imul
and
and
add
jmp
xor
sub
mov
mov
jl
fldl2e
jle
lret
repnz
adc
sarb
xor
loopne
pop
stos
xlat
pop
and
mov
das
adc
pusha
sub
push
icebp
lods
sqrtps
dec
cmc
or
or
dec
test
cmp
fwait
lcall
mov
hlt
jge,pt
cmpsb
rorl
imul
cmp
int
loopne
shl
mov
push
push
fimuls
dec
fucom
andb
jns
cmp
xchg
xchg
fs
mov
aam
sub
jmp
pop
mov
cmp
fadds
repz
test
push
mov
cmpb
fwait
push
dec
mov
insb
push
jmp
int
mov
sbb
push
pop
xorb
jae
inc
insb
xchg
mov
mov
or
push
clc
repz
dec
fsubrs
sbb
inc
or
push
sti
fcmovb
testb
add
sbb
pop
jecxz
dec
xor
out
and
or
lahf
sub
ror
subb
mov
cmp
push
movsb
pop
cmp
cmp
iret
add
ljmp
in
cmp
ljmp
mov
push
jo
aaa
fidivs
ja
jb
mov
xchg
jle
addl
mov
mov
inc
sti
into
push
rcrb
jp
repnz
mov
fstps
sub
xor
vpacksswb
loopne
out
mov
aad
loopne
outsb
je
adc
mov
sbb
pop
lea
ret
push
cli
cwtl
adc
fsubrs
fnstenv
les
or
lock
pushf
or
xor
call
push
stos
mov
mov
adc
inc
jp
adc
sub
mov
dec
xchg
hlt
sbb
dec
mov
xchg
repnz
jmp
xor
push
sub
pop
clc
pushl
aam
push
imul
pop
push
fldenv
loope
aad
add
xor
or
mov
repz
outsb
jl
fmull
jl
stos
scas
imul
dec
xchg
int
mov
cmp
jnp
stc
sbb
pusha
adc
fnstcw
mov
sbb
sub
lock
xchg
std
sub
mov
xor
mov
out
sbb
pop
push
lahf
xlat
xor
dec
fdivrl
pop
rol
aaa
jp
dec
mov
test
adc
incl
cld
jnp
xchg
add
xor
mov
add
icebp
dec
int3
xchg
jns
xchg
cs
cmp
jmp
jmp
insl
lret
cld
mov
xchg
push
push
adc
mov
sarb
cmpsl
or
pusha
sbb
scas
push
in
je
jp
addr16
sbb
movsb
lret
pop
loopne
into
lret
into
xor
jns
push
pop
shl
jb
cld
push
push
jecxz
pushw
cmp
mov
mov
insl
aaa
or
adc
jecxz
out
cmpsl
fstl
mov
in
dec
mov
inc
frstor
lods
push
pop
les
pop
fists
or
add
pop
cmpsb
xchg
or
sub
lret
sub
cmp
cs
jl
inc
mov
and
test
mov
mov
dec
btr
int
adc
and
bound
add
in
mov
mov
mov
std
mov
jecxz
xchg
inc
loopne
lds
add
jecxz
sub
lock
sub
dec
pop
hlt
ror
adc
daa
xchg
pop
sahf
and
into
jbe
add
clc
out
lds
iret
stc
dec
mov
sub
mov
or
popa
xchg
mov
in
dec
gs
out
inc
nop
or
add
mov
leave
xor
or
inc
es
jg
dec
xchg
into
test
ret
sahf
scas
pop
out
adc
movsl
outsl
imul
test
cmp
ds
dec
mov
mov
jne
push
sbbl
mov
mov
mov
push
cwtl
and
repz
mov
icebp
mov
out
repz
decb
inc
push
dec
mov
pop
sub
mov
lock
cmp
add
test
add
adc
sbb
inc
cli
xor
xchg
dec
incl
loop
loope
int
ret
xlat
push
xchg
in
in
cmp
jns
paddb
xor
ss
cmp
cmp
inc
hlt
sub
mov
or
and
aas
lds
xchg
push
mov
cmpsl
fsubrl
test
mov
push
and
push
leave
xor
xor
dec
inc
push
or
test
xor
push
lret
xor
out
sbb
dec
mov
insl
fistps
xor
and
loop
jge
cmp
push
mov
adc
mov
xchg
sbb
rcll
rep
mov
fidivrl
sub
mov
int
pop
mov
minps
subb
xchg
push
sub
in
out
test
in
out
outsb
inc
push
outsb
insl
jbe
jae
dec
test
push
xchg
or
cmp
mov
dec
jb
cld
les
or
in
dec
cld
mov
sub
mov
cli
lods
lahf
xchg
push
rcl
mov
out
ret
les
mov
cmp
or
mov
out
sbb
push
out
sbb
sarb
lret
ret
jmp
lcall
and
or
jmp
push
push
sub
int3
pop
int3
sub
adc
cmp
dec
jge
icebp
push
daa
jg
sub
and
jl
cmp
icebp
sub
lret
pop
or
mov
adcl
push
xor
cmp
xchg
test
dec
xor
lcall
repnz
mov
ss
rcll
push
push
lret
jle
mov
sbb
pop
jl
aas
jnp
je
ret
fldl
jmp
jbe
imul
cmp
push
mov
dec
mov
lret
sub
xor
add
jecxz
pop
xor
dec
movsl
fsub
mov
pop
mov
xchg
add
xor
xlat
inc
shlw
cld
sti
iret
pop
mov
lret
mov
xlat
andb
insb
mov
lods
xchg
int3
adc
sub
loope
ret
mov
pop
lods
inc
idivl
je
mov
xchg
adc
mov
je
push
mov
shrl
lahf
arpl
add
pop
leave
stos
pop
inc
lods
aas
mov
lods
aas
movsb
in
cwtl
mov
int3
xor
jno
pop
xor
cli
xor
cmpsb
imul
decb
sub
push
stos
popf
sbb
mov
outsb
out
push
cmpb
add
jns
or
dec
sbb
add
test
andl
mov
xchg
stc
sbb
xchg
sbb
or
js
popa
sbb
or
pop
push
out
cmp
pop
and
xor
xlat
push
adc
dec
icebp
jl
das
adc
pop
and
lods
mov
test
push
in
dec
shll
pop
sbb
mov
mov
lret
sub
lea
fdivs
pminub
jne
mov
mov
fidivs
int
cmp
or
bound
mov
mov
mov
jle
loope
xchg
sub
sub
into
fucomi
gs
push
negl
call
outsb
jge
fildl
andl
pop
ljmp
ret
jg
xchg
mov
and
cwtl
test
imul
repnz
sbb
jmp
dec
fisubrs
jg
xor
lea
out
push
cmp
mov
push
daa
xor
dec
sbb
in
push
and
cmp
xor
cmp
xor
sbb
out
mov
jno
call
xor
ret
xor
imul
xchg
fmulp
hlt
sub
ds
int
aad
adc
push
cmpsb
iret
mov
jb
sub
pop
loop
out
and
test
inc
xchg
fisttpl
imul
std
pop
ss
xchg
mov
add
mov
repnz
xlat
mov
inc
daa
icebp
aaa
xor
loop
loop
pop
and
popa
xchg
ljmp
repnz
popf
mov
cmp
push
jle
lret
inc
cwtl
hlt
xor
xor
push
xor
xor
arpl
test
lahf
mov
mov
addl
lds
add
in
cld
or
loop
xchg
cld
sbb
scas
inc
cmp
popa
stc
inc
push
pop
sbb
push
je
cld
in
dec
mov
inc
mov
test
outsl
test
jb
pop
push
fwait
mov
xor
cs
cs
lea
aam
cltd
mov
imul
fists
adc
or
mov
in
push
std
adc
push
fistps
loope
sub
and
mov
jle
fcomip
es
push
mov
test
push
sbb
xor
fdivrl
sbb
or
xchg
add
pop
jmp
flds
call
or
movsb
stos
mov
pop
mov
out
aam
push
shl
jne
nop
sub
mov
and
xchg
mov
sub
arpl
sbb
xchg
fwait
sbb
adc
push
outsl
push
push
sbb
loop
xchg
imul
xchg
adc
out
fists
sbb
and
xchg
mov
cmp
jecxz
sbb
mov
mov
shll
dec
mov
out
sti
ret
rcrb
pop
mov
rcrb
ljmp
add
add
cmp
loope
push
lcall
je
mov
or
inc
sbb
popf
sub
pop
icebp
in
or
insb
cli
fwait
shl
aaa
into
dec
lods
sets
xchg
mov
movsb
jmp
xor
ret
mov
fwait
add
pop
stos
lcall
cmp
or
jno
or
into
fdivrp
mov
inc
push
int3
mov
pushf
add
inc
lds
jg
or
sbb
jp
sub
jne
or
mov
shll
pop
stc
popf
out
cmp
cmp
mov
xor
mov
jne,pn
lret
mov
push
daa
dec
cmp
inc
add
ret
inc
lret
jl
cs
test
xor
cli
jnp
pusha
xchg
mov
mov
lea
jbe
in
sub
pop
lcall
xchg
and
into
xlat
dec
pusha
inc
scas
or
xor
out
sahf
or
mov
je
dec
mov
aad
mov
dec
jp
mov
adc
pushf
jecxz
xchg
cwtl
fcoms
jl
dec
iret
sub
xor
stos
push
adc
push
shrb
stos
pop
cmpsl
pushf
sbb
mov
xchg
bound
xchg
mov
pop
mov
or
cmp
icebp
and
cli
das
aaa
pop
scas
lret
mov
fwait
aas
xchg
dec
out
sub
adc
add
fs
mov
lret
pop
es
inc
mov
call
bound
or
inc
cmp
cmp
jns
fcmovnb
cmc
and
dec
mov
or
mov
hlt
mov
jl
adc
in
xor
jle
lret
sbb
adc
stos
sub
mov
sarl
push
sbb
jle
and
push
inc
sbb
inc
push
outsb
fs
mov
mov
int3
jmp
inc
cmp
sbb
bswap
test
popf
xor
push
scas
jnp
add
fidivs
cmpsl
aad
fidivrs
mov
notb
test
fstps
scas
jg
mov
in
test
mov
mov
cs
xor
or
fistpl
ret
lret
arpl
adc
xor
xor
test
mov
mov
push
pusha
jne
sbb
jne
mov
mov
js
jle
sub
arpl
push
mov
jge
popa
jo
out
inc
pop
add
push
dec
jne
inc
test
xchg
add
mov
lock
inc
or
nop
mov
push
subb
daa
adc
push
sti
dec
es
adc
cmp
dec
inc
repz
push
dec
scas
into
ja
pop
sbb
pop
jns
movlps
shlb
out
ss
sub
mov
push
cmpsl
pop
pop
jbe
stos
mov
jge
mov
pop
adc
inc
ficoms
ret
ret
and
adc
in
pop
sub
clc
arpl
scas
and
aas
daa
mov
in
les
icebp
cmpl
enter
out
lahf
rcrb
xchg
push
out
or
stos
mov
xchg
jmp
pusha
frstor
setge
xchg
stc
mov
cmpsb
ret
leave
fisubrl
mov
imul
xchg
sub
inc
ja
xchg
add
fisttpll
pop
pop
or
cmp
adc
adc
cmp
ljmp
stos
leave
clc
clc
pop
mov
fs
imul
fisubrs
mov
test
int
mov
call
cli
decb
movsb
jmp
inc
fcomi
sahf
icebp
ss
aam
sub
stc
lret
sub
dec
bound
inc
das
ss
push
popf
dec
out
fmul
mov
mov
xchg
fwait
jp
lods
daa
push
pop
stc
ss
scas
out
orl
or
jb
ret
adc
out
push
mov
xchg
dec
dec
bound
dec
mov
movsl
movsb
aam
mov
push
mov
cli
loopne
mov
mov
stc
mov
addr16
rclb
sysret
jo
hlt
adc
sbb
inc
lret
pop
xor
aam
fisubs
repz
pop
jecxz
dec
cld
sub
add
jo
pop
add
mov
movsb
push
dec
push
push
fmul
bound
test
movsl
loope
cltd
ja
mov
sti
mov
icebp
mov
sbb
nop
and
and
sub
lret
or
int3
loope
jbe
int
push
mov
scas
sbb
cld
ret
jle
inc
xor
cs
inc
int3
add
stc
sbb
lods
add
jg
add
push
or
sbb
or
js
lahf
dec
iret
inc
aas
pop
mov
rcrb
jp
xor
adc
sbb
adc
repnz
hlt
pop
jmp
repz
outsb
cli
push
sub
xlat
jl
xor
scas
push
test
add
cmp
add
testb
cmpsb
incb
repnz
inc
xor
in
test
jge
outsb
dec
push
fmul
rcll
jbe
shl
jne
cmp
stos
sub
lcall
mov
dec
bound
mov
stc
sub
pop
bound
mov
dec
jmp
cld
cmp
test
repz
cli
shl
fwait
mov
fs
adc
movsb
sub
sbb
mov
scas
fmul
loope
sahf
insb
sbb
sub
out
sbbl
and
dec
shrb
and
cli
xchg
js
inc
stc
clc
mov
push
repz
test
xchg
sahf
in
or
sub
adc
ret
lsl
push
addr16
pop
mov
out
dec
bound
cmpsl
or
push
add
cmpsb
push
leave
adc
arpl
mov
add
pop
jo
ds
ficoml
enter
and
pop
cmp
dec
gs
rol
mov
and
test
add
jp
sbb
and
mov
fwait
cli
and
push
sub
mov
ja
pop
pushf
rclb
dec
cmc
cmp
pop
andl
add
clc
repz
mov
gs
dec
sub
shrb
and
int
lcall
pop
das
or
push
into
cmp
js
jg
xlat
dec
rcl
push
xchg
fs
mov
sbb
push
jnp
cltd
jo
mov
call
adc
rolb
dec
cmp
cmp
pop
dec
jns
repnz
stos
and
mov
jnp
cld
dec
sti
and
fdivrs
mov
jnp
inc
inc
cmp
std
cmpsl
mov
or
dec
jecxz
out
cmp
cltd
push
inc
imul
fs
shrb
push
fiaddl
pop
inc
mov
stos
movsb
pop
pop
ja
cmp
addps
push
or
inc
mov
xor
int
cmpsb
stos
xor
pop
adc
add
fstpt
push
xorl
inc
mov
add
inc
mov
push
dec
test
je
enter
cs
xchg
xor
fimuls
dec
loopne
repnz
pushf
lock
insl
inc
dec
aam
xor
mov
fisubl
inc
cwtl
mov
testb
fnstcw
addb
jae
sub
sbb
xor
mov
mov
fwait
daa
jg
dec
mov
adc
dec
cmp
or
in
add
mov
xor
cmp
push
xor
add
repz
jne
jmp
push
mov
mov
notb
pop
mov
push
mov
pushf
cmp
mov
movsl
pop
push
lret
push
jnp
or
test
rorb
mov
xchg
shl
pop
hlt
mov
jecxz
xor
loop
rcll
lds
push
sbb
addr16
daa
or
loope
sub
mov
lods
dec
loope
xchg
cmp
clc
aad
addb
in
adc
mov
push
mov
cmp
jb
push
out
inc
xor
mov
rcrl
decb
lea
add
or
push
sbb
js
lret
push
xchg
fwait
cmp
xchg
mov
sub
outsl
adc
inc
dec
lahf
sbb
std
repnz
mov
mov
sahf
pushl
jle
cmp
outsb
xchg
fsubs
clc
nop
imul
cli
outsb
inc
in
pusha
mov
iret
out
dec
cli
ss
ljmp
cmp
mov
clc
sub
inc
int
xchg
out
imulb
cmp
jecxz
pop
jo
dec
mov
sbbl
xor
incl
push
jge
mov
mov
sub
mov
les
popa
ds
js
ljmpw
iret
test
push
cmp
out
jns
xchg
negb
mov
xchg
xchg
push
sbb
jl
fiadds
outsl
xor
inc
jl
push
add
push
or
add
scas
mov
mov
clc
push
mov
sti
jmp
add
in
and
insl
lods
lock
negb
outsl
outsl
imul
lea
xor
add
pusha
imul
push
cmp
adcl
add
insl
jl
into
into
dec
mov
ret
bound
daa
sub
bnd
dec
pop
stos
pop
inc
cmp
or
jns
xchg
mov
push
stc
ss
cli
xchg
xchg
sub
push
aaa
push
sahf
mov
pop
or
popf
orb
xchg
inc
faddl
and
cmp
aad
jo
xlat
jb
add
shlb
test
push
cld
jmp
pop
dec
out
jo
outsl
out
pusha
pop
cltd
popa
push
in
pop
pop
and
in
inc
jnp
xchg
xor
xlat
lret
movsl
mov
aad
jnp
repz
sahf
jg
and
and
int
in
fisttpll
or
cmc
loop
pushf
pushf
cmpsb
dec
pop
gs
ficomps
mov
mov
rcll
test
aad
cmc
andb
dec
scas
xor
subl
and
into
or
cmpsl
addl
jae
cli
stos
inc
aaa
imul
aas
sbb
mov
xlat
iret
add
in
cwtl
lahf
int
test
sbb
add
jge
add
mov
add
sub
std
imul
aam
jnp
ffree
lret
dec
outsl
xchg
push
mov
push
jo
sub
je
pop
inc
ja
push
mov
adc
mov
lods
pop
fisubrl
sbb
clc
out
shrl
sub
pushf
ret
and
jge
loopne
jne
cmc
aaa
stos
lods
adc
mov
add
aad
lds
cwtl
sti
int3
fnstcw
ffreep
sbb
icebp
inc
jno
push
xor
mov
test
mov
les
xor
push
adc
enter
cmp
jno
rcll
xor
dec
cmpsb
and
in
pop
xchg
push
lret
push
mov
je
sub
lock
movsb
sbb
lahf
je
icebp
inc
addr16
fsub
js
daa
mov
pop
mov
jl
jmp
xchg
pop
add
xchg
or
push
out
pop
and
clc
int
jbe
add
mov
push
int
jo
test
mov
xchg
cmp
xor
dec
mov
cmc
or
mov
shrl
xchg
xchg
loop
mov
popf
inc
or
dec
or
ss
and
loopne
mov
dec
xor
shll
xchg
paddsb
jb
in
dec
insl
mov
cmc
sysret
cmp
sbb
lahf
jne
in
jae
xchg
int3
sbb
lods
jbe
and
js
jg
adc
mov
fistpll
dec
fcomp
xor
xor
push
dec
sti
into
mov
or
or
movsl
cs
xchg
rol
cmp
int
mov
shlb
mov
fdivl
dec
loopne
fcompl
or
cmpsl
in
movsb
jmp
adc
mov
clc
sub
out
mov
xchg
xchg
cmpb
add
jns
fcom
mov
test
or
xchg
mov
addr16
shll
les
dec
sbb
inc
nop
scas
int
cltd
push
flds
jne
data16
and
jge
xchg
add
out
aaa
push
loopne
sub
add
xchg
add
cmpsb
stos
jecxz
push
pop
leave
mov
sub
out
dec
test
xor
adcb
test
pop
jmp
or
mov
or
sbb
cwtl
or
dec
mov
add
mov
int3
pop
and
xchg
jge
xor
lea
push
jl
daa
cmpsb
movsb
xchg
xor
nop
or
mov
cmpsl
pop
mov
test
sbb
add
out
cwtl
fs
loope
dec
daa
jb
push
mov
std
es
inc
pop
mov
cli
sub
mov
sbb
jbe
cs
out
in
mov
pop
and
inc
shlb
lods
push
frstor
add
test
push
pop
nop
aaa
in
rclb
push
cmp
es
stos
divl
dec
ret
xchg
mov
jmp
lret
iret
fdivr
push
sbb
dec
push
mov
sub
add
mov
ja
sbb
mov
inc
sbb
int3
mov
cmpsb
xor
lcall
aad
xchg
jg
mov
imul
ss
mov
pop
sbb
xchg
pop
int
cmp
popf
jle
inc
hlt
fs
or
loope
dec
add
pop
dec
sub
fsub
xor
testl
movsb
nop
mov
push
pop
xor
insb
jne
repz
cmp
add
push
ficoms
ret
test
jl
rol
push
inc
stos
test
fstps
ret
lcall
dec
xchg
cpuid
add
jecxz
fnstcw
jp
pop
idivb
mov
lods
mov
sbb
stos
das
loop
in
jle
cmp
ret
icebp
dec
push
pop
mov
sub
outsl
mov
testl
outsl
ss
in
lret
mov
xorb
pop
push
inc
jne
out
jns
sbb
rorb
jae
ja
cmpsb
enter
or
mov
jle
xchg
loope
cli
jl
repnz
loopne
cmp
jns
and
and
aad
mov
popa
push
xchg
rcrl
pop
rorb
leave
icebp
insl
ret
addr16
hlt
inc
iret
add
loope
cmc
insb
mov
pusha
pusha
inc
aad
pop
das
cmp
jle
pop
cmp
mov
fnsave
icebp
lea
inc
jbe
pop
adc
in
mov
adc
cmp
lds
and
mov
mov
push
and
and
push
mov
cli
cmc
cmp
xchg
aad
ds
sbb
cs
setle
lods
rcrb
fcmove
mov
xchg
xor
mov
mov
pop
add
movsl
lea
addr16
inc
mov
pop
dec
outsl
jbe
add
inc
stos
int
test
push
cmp
push
push
sub
js
fnstsw
push
or
cmp
cwtl
and
cmp
outsl
mov
and
in
ljmp
inc
jne
cmp
je
jae
aaa
add
and
jge
push
xlat
leave
pop
and
jbe
cwtl
outsb
mov
xchg
xchg
add
dec
sub
xlat
notb
pop
dec
dec
xor
sti
xor
mov
jns
xchg
mov
sbb
sahf
cmp
ljmp
sbb
adc
out
dec
sti
cld
xor
inc
sub
or
xchg
jns
cmp
shlb
xor
and
pop
int
or
sbb
pop
lock
shlb
test
arpl
paddd
cltd
and
cmp
pop
sub
pusha
sti
pop
sbb
mov
and
add
cmp
or
jge
jmp
pop
fiadds
in
aas
mov
sti
insl
mov
xchg
xor
das
mov
push
adc
mov
outsb
mov
cmpsl
and
xor
jp
stc
mov
out
pushw
mov
adc
rcrb
arpl
push
ljmp
sbb
mov
mov
xor
dec
inc
mov
adc
aam
arpl
imul
fidivrs
lods
andb
cmpsb
mov
jmp
icebp
xchg
hlt
stos
lock
pop
xlat
in
jle
cmpsb
fisttpll
adc
xchg
mov
in
and
sub
mov
xchg
cwtl
sub
fcmovnb
imul
push
pop
arpl
pushl
adc
out
lds
sti
sbb
add
inc
adc
sbb
dec
push
mov
lock
sahf
sbb
jnp
loope
lods
jp
subl
or
jno
sbb
insl
xchg
je
mov
inc
out
lahf
inc
addb
sub
popf
hlt
inc
and
into
dec
imul
push
fmul
ret
dec
sbb
inc
fstp
jns
push
push
and
push
dec
dec
adc
fwait
add
adc
into
xchg
ss
jecxz
les
lods
outsb
sub
ret
xor
sub
mov
mov
mov
mov
pop
cmp
xor
inc
shlb
jmp
sub
jecxz
xchg
cmp
mov
or
dec
lock
cmpsl
jns
or
sub
loop
adc
sub
mov
divb
xchg
pop
add
into
cmp
mov
lcall
add
xor
test
in
mov
push
js
mov
lds
and
add
lock
mov
subl
in
jle
cli
mov
imul
in
movsl
ficoml
test
repnz
push
xchg
mov
add
cmp
fdivrp
movsl
xlat
jbe
popf
sub
fmulp
xor
jle
loopne
leave
ficomps
mov
dec
add
imul
lahf
imul
mov
sub
sbb
or
in
dec
lea
dec
addl
mov
popa
pop
xchg
push
in
lcall
sahf
add
and
in
xlat
dec
aaa
jg
pusha
xchg
sub
sbb
push
mov
push
or
sub
jecxz
popa
adc
inc
inc
popf
pop
repz
roll
sbb
mov
dec
inc
ljmp
imul
movsb
jae
jno
sbb
jmp
jo
popw
mov
test
xchg
scas
mov
and
hlt
xlat
sub
insl
fmuls
jmp
or
loope
out
dec
repnz
adc
add
and
int3
mull
inc
mov
and
pushf
mov
and
les
dec
xor
pcmpeqd
js
add
test
cwtl
jecxz
push
sti
xor
jae
pop
sub
and
cmpsb
xchg
jmp
jnp
lea
insl
pop
jns
and
insl
cmpsl
cli
and
adc
test
bnd
mov
mov
rcrl
jmp
xlat
xor
subb
fistl
out
pop
dec
jp
push
add
divb
mov
or
data16
inc
push
or
pop
popa
push
das
xor
mov
jg
cmpsb
outsl
notl
add
sbb
jmp
sahf
xor
lahf
mov
addr16
push
jae
aas
lcall
xorl
je
or
in
xor
push
mov
add
jo
rolb
inc
jne
lahf
fsubrp
fsubl
cwtl
loopne
in
leave
jno
pushf
xchg
adc
jbe
gs
push
les
or
ss
pop
adcb
movsb
push
jno
sbb
jge
fisttpll
sub
cltd
jmp
adc
xchg
outsl
iret
cmp
fucom
push
mov
stos
insb
fisubl
shl
add
xorb
jl
or
sahf
loopne
call
and
adc
pop
jnp
int
mov
adc
ljmp
pop
sarb
xor
xchg
sub
in
les
mov
dec
xchg
mov
loop
add
movsb
pushf
and
sbb
xchg
out
xchg
std
and
pop
and
repnz
out
inc
jb
sub
sbb
push
mov
rcrl
xor
dec
sub
out
test
add
in
nop
jnp
or
cmpsb
xchg
into
add
shlb
add
gs
pop
cli
stos
in
jge
add
xor
das
pop
ss
jb
aas
jmp
and
orl
sahf
scas
and
mov
out
imul
outsb
in
in
and
cmpsb
arpl
ficompl
mov
adc
scas
push
push
mov
and
xor
lret
mov
cmpb
dec
jmp
push
cmpsb
enter
sub
dec
push
xchg
mov
dec
dec
xor
test
lds
sbb
mov
arpl
add
lret
push
adc
loop
lret
hlt
pop
cwtl
sub
pop
das
sbb
imul
std
faddl
dec
aad
repz
pop
cmp
adc
cld
mov
cmp
dec
loop
gs
pop
loop
fidivl
jl
push
push
shl
imul
mov
mov
jge
pop
or
cmp
sub
mov
in
add
sub
insl
jo
sarb
stos
jle
ret
int3
test
sbb
mov
movsb
dec
inc
and
shrb
jmp
xchg
mov
dec
jmp
nop
xor
sub
pop
jae
cmp
xchg
daa
pop
add
mov
or
jecxz
loope
into
mov
popa
xchg
mov
pop
adc
adc
outsl
push
add
xor
pop
add
jmp
push
mov
test
mov
mov
popa
xor
mov
pop
fdivrl
xlat
daa
enter
cmp
cli
out
pop
or
pop
or
sub
mov
in
xchg
fiaddl
daa
mov
sti
out
iret
fldcw
test
sub
inc
add
xchg
jmp
fs
cmp
xor
sbb
or
push
mov
int
cld
jb
aas
aas
testl
jbe
fcom
cld
pop
testl
cmpsb
in
das
mov
fiadds
loope
pusha
adc
pusha
es
testl
lret
cmp
cmc
sbb
lcall
les
dec
push
adc
nop
jnp
jg
int
push
in
mov
into
jmp
out
xchg
daa
lds
in
paddsb
pop
mov
jle
pop
outsl
lds
into
or
andl
out
push
inc
pop
movsb
inc
xor
rcll
push
insl
gs
into
mov
dec
add
xchg
add
call
cwtd
dec
fsubrs
imul
inc
push
add
pop
inc
push
lods
sbb
pop
dec
or
dec
enter
inc
push
pop
mov
and
inc
mov
jmp
xchg
shrb
push
or
mov
xor
push
aad
pop
outsb
daa
insl
sbb
mov
lret
xlat
movsb
inc
aas
les
popa
imulb
cltd
dec
dec
mov
push
das
mov
into
mov
scas
add
xchg
sub
subb
xor
xlat
mov
mov
and
cmp
imul
cltd
aam
ret
mov
and
pop
cmc
adc
inc
cmp
sub
repnz
cmpsl
pop
sbb
dec
aam
lret
push
pushf
scas
jge
mov
fs
ss
scas
xor
jae
or
inc
arpl
jmp
cmp
int
cli
aad
mov
adc
push
stc
inc
test
cltd
aad
ljmp
push
movsb
pop
lock
in
lds
xor
ret
push
popf
std
pop
ret
fadd
out
add
repz
mov
sub
push
data16
xchg
clc
pop
xlat
mul
cmpl
or
or
and
ds
loopne
adc
outsb
or
mov
push
out
xor
popa
or
shlb
rclb
xlat
test
dec
mov
dec
sbb
push
pop
mov
push
movsl
push
push
std
jns
sbb
andb
rolb
inc
xor
repz
or
in
sub
cld
outsl
add
jno
cmpsl
push
push
jne
mov
dec
pop
out
mov
sub
fs
mov
sbb
xor
sub
ss
hlt
inc
dec
inc
xor
xor
cmpsb
call
mov
jmp
mov
push
cmp
enter
aad
aad
cmpsb
push
and
scas
fisubs
jp
stos
sbb
sub
sbb
or
movsb
les
sbb
xor
cmp
xchg
pushf
adc
nop
inc
mov
xchg
dec
push
popf
aad
dec
decb
dec
mov
xor
adc
lea
rcr
adc
lods
aad
repz
popf
inc
jne
or
test
push
xorl
jl
pusha
sub
add
pusha
scas
fsubs
fiadds
push
jne
dec
jns
xchg
popf
mov
jp
mov
add
pusha
cmc
sbb
lock
in
xchg
pop
dec
enter
cmp
add
or
rolb
jp
jge
jp
and
gs
pushf
sub
xchg
in
aas
lret
fisubrl
push
push
or
mov
xchg
push
jmp
aaa
cmpsl
push
out
mov
and
ret
add
pop
aas
icebp
sbb
data16
lea
ret
mov
mov
sub
mov
dec
les
in
mov
inc
lret
dec
daa
xor
sub
pop
in
adc
or
repz
jno
in
cli
shlb
sub
mov
in
mov
out
push
iret
mov
xchg
addl
loope
loop
jle
or
xchg
push
push
fistpll
cmp
call
xor
movl
out
sbb
pop
dec
push
arpl
mov
pop
lods
dec
or
insl
sub
cld
cmp
addr16
and
dec
scas
inc
xor
adc
pop
mov
mov
dec
cmpsb
les
mov
add
jb
das
push
jns
cmp
int3
jecxz
mov
mov
pop
mov
push
je
ds
lret
test
jmp
xchg
pop
xor
int
js
jmp
out
aad
in
ret
inc
inc
xchg
lods
je
shr
inc
out
and
xchg
push
cmp
dec
in
cwtl
and
negl
mov
mov
lcall
movl
repz
fists
inc
into
or
popa
add
inc
sbb
cli
pusha
mov
xchg
mov
xor
call
jo
cwtl
mov
mov
mov
mov
into
ret
dec
push
aad
jnp
add
fisttpll
xchg
lret
sbb
mov
jne
sar
inc
cltd
xchg
mov
sub
rcrb
repz
adc
lea
loope
mov
add
or
sbb
cli
add
outsl
pop
mov
push
cld
aam
cmpsl
add
movb
outsb
add
loop
fdivs
sub
sub
leave
aaa
inc
sub
mov
cmpsl
mul
sahf
vandps
pusha
rcl
pop
leave
loope
cmp
mulb
in
dec
adc
inc
loopne
mov
mov
fs
or
xor
push
mov
cmp
mov
fbstp
push
imul
loopne
pop
sub
or
stos
test
fdivs
in
cmpl
das
dec
in
sub
lods
sbb
dec
jno
sbb
lret
lods
mov
icebp
hlt
lds
pop
rcll
inc
out
jmp
mov
les
or
or
jp
mov
and
pop
stos
or
fs
data16
ss
mov
orb
sarb
jle
in
inc
scas
sbb
sub
and
les
loop
or
mov
cwtl
ret
add
sti
es
decb
or
mov
dec
loopne
push
mov
xchg
xor
inc
test
xchg
fmull
mov
sbbb
sbb
jmp
pop
jmp
xchg
dec
std
adc
dec
mov
xor
xchg
mov
out
pop
mov
mov
dec
mov
jp
aad
das
push
aam
lds
fdivrs
and
add
jno
fst
xor
jp
xor
repz
loop
ljmp
call
mov
outsb
mov
mov
rcrl
push
mov
jp
xchg
mov
add
iret
push
mov
clc
stc
clc
cpuid
test
pop
inc
inc
aam
xor
and
xchg
jne
aad
or
adc
jecxz
add
aam
mov
hlt
rcl
lret
or
xor
je
into
sub
iret
xor
outsl
cmc
repnz
mov
enter
cmp
mov
push
mov
sbb
push
inc
jns
movsl
scas
mov
aas
pop
jle
ja
dec
mov
iret
movsl
lcall
inc
addl
inc
add
cmpsl
pop
and
mov
repnz
jns
mov
outsl
out
add
sarl
movl
dec
insb
dec
and
nop
and
jle
jg
bound
mov
cld
jno
sbb
mov
ds
push
movsb
fldt
adc
js
mov
and
mov
push
xchg
sti
sub
pop
lods
daa
repz
lahf
iret
mov
ss
jge
mov
movsl
cli
adc
add
int
and
xchg
xchg
repnz
add
mov
cmc
leave
iret
xor
scas
fidivl
and
stc
xchg
pop
outsb
cwtl
push
jg
fmul
inc
or
pop
adc
sbb
xchg
mov
mov
add
lds
pop
insl
es
loope
xchg
lahf
bound
lds
jo
rcrl
xchg
xchg
into
jbe
dec
jle
sahf
mov
xchg
inc
mov
or
imul
pop
aaa
addr16
fcomps
and
fldenv
inc
pushf
dec
cmc
and
add
sbb
xor
push
mov
jmp
loope
das
jo
imul
adc
push
inc
adc
adc
mov
sti
sbb
and
pop
fcmove
add
mov
pop
dec
and
sti
outsb
pop
subb
mov
test
and
fstpt
sub
adc
sbb
mov
inc
lret
pop
aaa
pop
data16
mov
mov
je
jnp
into
mov
fstpl
scas
sub
cmp
jnp
loop
mov
mov
je
sbbb
das
xchg
dec
sbb
jb
fbstp
cmp
shrb
outsw
ljmp
pop
pop
sahf
pop
icebp
lock
sbb
hlt
lret
lds
in
test
mov
add
lods
xchg
test
dec
fidivrl
std
imul
mov
sbbb
inc
and
movsl
pusha
jmp
xchg
adc
into
xor
test
sub
jne
nop
mov
or
pop
jmp
aaa
clc
dec
cmp
ret
sbb
xchg
test
lds
packssdw
fidivrs
cli
dec
ss
adc
pop
dec
mov
out
sbb
addr16
cmc
sar
std
stos
xchg
movsl
cli
adcl
sub
adc
sbb
cmpsl
mov
push
insb
loopne
sub
xor
shrl
xchg
imul
cs
movsl
rorb
mov
cmpsl
filds
sbb
and
inc
mov
test
nop
sbb
add
mulb
dec
jle
sahf
out
div
dec
fimuls
cmp
push
sub
scas
pop
or
test
cwtl
add
test
popa
dec
sub
lahf
mov
cli
mov
and
lret
push
lea
mov
fcompl
lea
push
mov
pusha
jne
jecxz
adc
adc
popf
sti
fnstenv
outsb
push
inc
les
jl
mov
cmpsl
pushf
ret
es
and
gs
push
shrb
pop
xor
fwait
inc
test
cmp
mov
sbb
or
push
jl
sbb
push
cld
jg
jle
or
test
cmp
dec
cltd
mov
cmp
jg
aas
inc
jns
sar
jns
adcb
sbb
imul
jbe
mov
cmp
pop
fstl
push
repz
lahf
pop
pop
ret
mov
inc
or
arpl
int
das
imul
dec
dec
test
pop
cwtl
dec
clc
push
xchg
pop
fwait
xchg
cld
fdivrs
add
data16
sub
testb
lcall
mov
scas
aaa
pop
inc
test
pusha
xor
addb
mov
sarl
in
cld
mov
loop
xchg
jge
sub
les
push
lds
xlat
stos
sbb
push
inc
lods
cmp
notb
or
xor
cmp
cmp
cmpsl
pop
lcall
push
and
push
dec
aad
mov
mov
push
and
aad
mov
aam
push
add
xorl
adc
in
push
fists
jb
sbb
mov
or
pop
stos
arpl
xchg
loop
mov
push
dec
clc
dec
nop
mov
iret
pop
lahf
insb
add
cmp
cmc
fsts
jb
outsb
lods
adc
add
xor
pop
jmp
inc
ljmp
push
push
test
mov
xor
bndldx
sub
fwait
inc
jae
add
or
ss
add
adc
bound
and
js
cmp
fldcw
cltd
cmp
adc
rol
ficompl
js
cmpsl
xchg
rorl
mov
cmpsb
test
inc
fwait
ret
and
pop
xchg
scas
das
cmp
and
inc
rcr
inc
xchg
lret
push
testb
cli
mov
aaa
je
sub
jp
lcall
sbb
ds
mov
mov
add
pop
inc
dec
push
mov
push
cld
xor
mov
pop
xchg
push
lds
mov
sub
push
sub
cs
adc
sbb
mov
sub
add
sub
xchg
je
mov
scas
mov
sbb
add
xchg
adc
fsts
aas
fnstcw
fadds
dec
inc
repz
leave
sub
insb
sub
dec
add
xchg
iret
pop
mov
push
lret
into
sti
and
add
ret
sbb
aad
aam
mov
mov
gs
jb
adcb
sar
xor
cmc
jmp
jg
inc
sub
fucomi
sbb
dec
cwtl
xor
data16
push
sub
adc
xor
pop
xchg
xchg
add
dec
div
xchg
mov
mov
pushf
lcall
and
std
pop
imul
sahf
ss
adc
jl
push
sbb
out
aas
pop
les
les
sbb
fmuls
push
stos
fdivrl
mov
mov
sub
push
sbb
or
test
push
test
pop
inc
fwait
int3
xor
sbb
inc
dec
sbb
adc
fimull
push
insl
sub
imul
jmp
jl
lods
cs
pop
xlat
mov
pushf
mov
fisttpl
pusha
push
mov
push
or
mov
adc
out
or
aam
sub
sub
scas
loope
mov
jns
and
lret
mov
xchg
repz
popa
faddl
jge
jl
cmp
mov
add
sbb
or
cltd
int3
jno
ret
push
or
lahf
imul
jb
lea
and
cmp
into
cmc
sub
and
cmc
push
lret
and
or
adc
dec
arpl
loope,pt
cmp
rcr
push
mov
shr
in
inc
and
add
xchg
jl
popa
cmp
enter
jbe
or
lods
call
ss
movsl
add
xchg
xchg
jns
repnz
or
aas
sbb
xchg
and
mov
dec
into
jb
aaa
aaa
sbb
sub
aas
jb
sbb
mov
loop
push
cli
inc
xchg
and
fwait
sbb
div
jle
dec
pop
jle
mov
insl
loope
xchg
lea
mov
lret
sbbb
ljmp
pop
jns
outsl
aad
fsubrl
dec
dec
dec
jmp
loope
loop
lock
mov
inc
dec
daa
sbb
pusha
clc
lahf
add
shl
dec
aaa
idiv
test
or
mov
inc
js
jns
das
insb
cmpsb
adc
push
dec
inc
mov
dec
sub
dec
into
stos
les
push
outsl
int
mov
dec
neg
sub
xchg
lods
xor
mov
jno
shrb
cmpsl
jno
sbb
xor
aaa
int3
sbb
xor
nop
inc
adc
int
fstpt
fdivl
sub
push
pop
inc
xchg
and
sub
and
jns
mov
mov
outsb
test
inc
mov
lahf
dec
imul
adc
ret
hlt
pop
mov
push
dec
shl
fucomi
insb
cmpb
sbb
dec
negl
lods
aaa
or
jbe
fidivrl
lock
pop
daa
je
xchg
popf
icebp
or
sti
push
mov
cmc
std
jns
aad
mov
mov
xchg
mov
inc
mov
add
and
in
xor
dec
pop
in
push
cltd
dec
lret
sub
out
lahf
and
and
push
pop
and
and
outsl
mov
cmp
loope
rcr
lock
add
xor
sbb
xlat
dec
out
popf
bound
rolb
mov
dec
inc
arpl
rolb
xorb
imul
and
and
xchg
ljmp
xchg
inc
xor
cmpsl
jge
xchg
loope
ja
xor
ja
scas
mov
mov
mov
filds
push
jge
push
cmp
xchg
aaa
mov
pop
push
inc
fdivrs
mov
enter
jle
aad
adc
dec
hlt
xchg
dec
add
fcmovnu
push
stos
popa
mov
int3
xchg
mov
gs
add
arpl
imul
jp
ljmp
cli
mov
scas
mov
test
popf
stc
xchg
xor
lods
repnz
push
or
insb
lret
rcl
in
xchg
mov
cmc
ffreep
mov
jnp
lea
dec
jae
mov
out
cld
add
xchg
xor
mov
adc
jne
stos
inc
mov
or
stc
push
and
pop
in
sarb
xorb
das
mov
in
cmp
xor
xchg
imul
or
out
sbb
dec
cmp
fcmove
xor
push
ret
stc
pop
aam
movsb
lock
insl
sarl
pop
dec
cs
xchg
sub
ss
int
outsb
mov
arpl
js
push
xchg
bound
in
mov
imull
arpl
pusha
sub
sub
add
sbb
adc
and
repz
xchg
loop
lahf
out
xor
int3
jp
hlt
negb
cmc
pusha
mov
and
ja
loope
jmp
push
subl
sub
and
mov
leave
test
cmpsb
or
cmp
and
stos
insl
rclb
lret
cmc
add
fcoms
aaa
and
sbb
add
sbb
adc
movsb
aad
cli
sbb
arpl
in
leave
xchg
mov
repz
into
mov
and
xchg
loope
fimuls
jg
aaa
in
or
cld
or
add
shlb
ss
add
call
mov
dec
jge,pt
sbb
xor
inc
sub
or
in
int3
mov
or
lcall
cld
lods
aam
cmpsb
and
out
or
inc
insb
cli
adc
pop
pop
xchg
pop
arpl
sub
cmp
jns
insl
mov
repz
lea
mov
or
mov
mov
push
fimuls
mov
push
push
lret
pusha
clc
push
cli
popa
xchg
adc
dec
mov
mov
jg
imul
jmp
loopne
out
push
roll
loop
jmp
jo
fadd
push
mov
nop
sbb
mov
dec
icebp
sbb
adc
jbe
in
adc
push
inc
dec
xor
sbb
mov
adc
mov
or
outsb
xchg
fildll
jp
lret
jp
test
push
addr16
xchg
mov
pop
pop
das
testb
and
int3
shl
sahf
add
mov
and
mov
and
fidivs
test
ror
mov
cmpsl
es
xor
cltd
mov
mov
fdivrl
mov
mov
dec
popf
lods
jno
ret
pop
mov
add
loop
rorb
popf
test
loop
mov
test
ss
jo
or
aad
mov
int
scas
mov
test
ficoms
fstpl
adc
xchg
or
scas
bound
dec
in
daa
mov
inc
out
mov
fs
cmp
or
dec
pop
stos
mov
addb
mov
xor
cwtl
sbb
nop
add
push
pop
pop
int3
push
jbe
mov
or
adc
repnz
outsb
int
mov
xor
xchg
gs
jp
add
mov
mov
insl
iret
push
loop
jno
push
mov
sahf
inc
pop
inc
aas
clc
insb
rorl
jmp
pop
xchg
pop
inc
daa
popf
je
push
int
mov
fs
dec
adc
push
aam
insl
outsl
or
fnstenv
adc
adc
ljmp
adc
popf
add
sti
sti
negb
ss
sbb
inc
arpl
xlat
les
nop
mov
add
inc
sub
test
popa
fiaddl
pop
cli
pop
aam
jge
push
sbb
push
sub
out
vphsubbw
cmp
inc
sub
adc
rolb
ret
pop
pop
pop
sbb
imul
ds
xor
sbb
push
rcl
sub
sub
cmp
sbb
xor
inc
mov
push
outsb
pop
inc
mov
push
jecxz
enter
inc
sbb
rcrl
add
push
cmp
mov
mov
dec
inc
or
shll
inc
lcall
cmpsl
mov
sbb
lds
out
adc
cwtl
test
dec
mov
stc
push
insb
inc
pop
add
ret
mov
ret
xchg
sub
pusha
std
stos
or
pop
outsb
xchg
sub
and
pop
dec
cs
sbb
adc
dec
push
clc
jg
jmp
fldt
sub
jl
mov
shll
pushf
ss
fstp
daa
arpl
ret
jbe
dec
daa
mov
mov
in
movsl
addl
sti
mov
pop
aad
mov
cmp
jnp
xchg
nop
arpl
outsl
test
jl,pt
adc
aam
sbbl
cmp
scas
mov
aad
mov
cmpl
lcall
jmp
jne
push
add
addr16
mov
xchg
adc
std
and
adc
dec
iret
cld
xchg
xorb
fisttps
insl
push
jae
sbb
lods
sbb
mov
mov
push
jno
popf
sti
mov
push
bound
inc
push
xchg
sbbl
xchg
sar
cwtl
test
fincstp
jl
sbb
sub
lods
in
insl
dec
sti
mov
in
xchg
sbb
aad
addb
adc
aas
jno
cltd
jbe
xchg
fwait
cmp
in
xchg
and
mov
pop
sbb
mov
lock
jge
aad
call
out
lcall
mov
dec
mov
or
cld
ret
andb
mov
adc
push
addr16
and
sub
lods
repz
dec
or
test
pop
xchg
inc
adc
adc
jl
rcll
out
xor
push
and
xor
mov
mov
jnp
or
cmpsl
or
aaa
xchg
pop
lahf
sub
int
cmp
pop
or
pop
jnp
pop
add
aad
dec
mov
add
jl
and
push
pop
mov
out
int3
shr
cmp
xor
cmp
push
inc
lds
sub
xlat
stos
in
mov
dec
shlb
and
mov
jle
adc
aam
xor
test
mov
sub
dec
push
sbb
jo,pt
adc
dec
fadd
bound
lret
fildl
add
mov
mov
outsl
mov
lock
mov
hlt
rorl
and
fucomip
mov
jnp
popa
mov
test
fsts
lcall
loope
repz
mov
jp
in
ret
dec
adc
pop
jns
dec
jl
out
decl
add
das
test
and
xchg
xchg
pop
idiv
dec
mov
jno
xchg
insb
imul
shlb
fbld
pop
push
adc
dec
aad
mov
adc
xchg
ret
pop
lock
pop
lock
ds
or
adc
sbb
imul
and
jbe
sbb
jb
addr16
sbb
fsts
movsl
mov
xchg
xor
icebp
cmpsb
test
push
dec
scas
pop
cmp
imull
mov
cltd
popl
push
cwtl
pop
pop
mov
add
mov
and
pushf
movsl
mov
push
pusha
mov
dec
imul
jle
push
ds
je
cltd
xchg
mov
popf
jl
loopne
push
shl
push
xchg
in
or
jg
test
xor
loop
pop
sbb
sbb
sahf
cmp
loopne
pop
push
into
mov
js
test
and
leave
addr16
inc
push
mov
in
and
in
outsl
pop
xor
fld
fs
push
gs
fdivr
icebp
mov
subl
cmp
ss
push
shlb
popa
dec
shl
sbb
cmpl
sbb
leave
dec
mov
aam
loop
les
es
jo
dec
dec
sti
lock
lret
int3
dec
leave
orb
xchg
int
dec
sarl
das
cli
lret
mov
gs
mov
inc
in
js
adc
push
nop
sahf
outsl
scas
mov
insb
sub
adc
cmp
addr16
pusha
mov
dec
mulb
inc
inc
hlt
idivb
icebp
mov
shll
in
mov
push
jp
add
jo
movsl
scas
push
or
jo
xlat
xchg
fxch
mov
sbb
dec
xor
jg
fprem
mov
nop
cmpsl
cmp
movsb
roll
nop
and
or
sub
add
fimull
mov
das
mov
lahf
jge
test
push
or
ret
jp
pop
inc
fsubp
aam
mov
inc
adc
dec
les
push
jg
cld
loope
add
repnz
mov
mov
jl
fsubrl
fnstenv
in
add
out
fcomip
push
sbb
cmp
cmpl
push
frstor
movl
xor
inc
jle
leave
xor
shll
inc
mov
aad
sbbl
cmc
aas
stos
test
insb
cwtl
cmp
divl
mov
je
cmp
add
pop
jbe,pn
mov
bound
push
xor
xchg
in
jle
jl
addr16
or
lock
test
adc
lods
xor
call
pop
nop
or
adc
and
fcomps
cmpsb
jns
and
bound
mov
pop
popf
data16
loop
arpl
mov
xchg
add
test
inc
in
mov
mov
or
das
pop
cs
lds
out
inc
jge
int3
xchg
popf
and
int
sub
push
test
mov
mov
jle
jb
jno
ds
ss
jno
test
push
testl
div
ljmp
in
sub
idivl
imul
sbb
jmp
xchg
pop
ds
dec
int
add
cmp
testb
lcall
data16
sub
test
je
aam
lret
xchg
lea
inc
sub
daa
push
js
dec
shlb
cltd
push
das
inc
imul
push
lds
lods
add
sub
sbb
sbb
sub
in
addr16
fadd
lret
mov
xchg
cmp
and
jg
aas
mov
jo
imull
aam
adc
inc
mov
cld
push
cmpsl
sarl
je
mov
sahf
lret
jmp
mov
cmpsl
enter
mov
mov
push
and
xchg
fdivrl
add
pop
adc
mov
push
mov
add
out
cs
fs
mov
push
pop
scas
repz
stos
ss
lods
loope
xchg
push
repz
inc
mov
call
push
loope
out
jno
xor
stos
ficoms
mov
imul
daa
mov
and
add
insl
push
pop
push
push
sbb
push
test
pusha
add
out
mov
out
xor
jno
push
pop
and
mov
imul
sbb
mov
push
push
cmpsb
pop
fidivl
pop
ja
sarb
addr16
cmp
jmp
mov
mov
pusha
dec
jmp
adcl
cmp
mov
fisttps
das
rol
cmp
cmc
xlat
sbb
and
jmp
lahf
mov
mov
dec
mov
jg
mulb
stos
jne
dec
xchg
mov
mov
xor
mov
fwait
mov
adc
insl
test
out
and
sub
and
bound
sbb
insl
xor
jno
insb
aam
mov
lds
test
pop
stos
mov
xchg
mov
xchg
in
insb
js
ficomps
fs
push
cmc
test
test
adc
jno
adc
mov
ss
imul
xchg
jns
loope
aaa
aad
sub
push
xchg
daa
rclb
outsl
cmp
jge
mov
repnz
pshufw
xchg
test
adc
pop
and
hlt
test
xorb
ljmp
mov
gs
aas
iret
dec
dec
xor
js
push
adc
add
daa
jge
jmp
adc
ds
add
push
mov
or
and
jecxz
gs
movsb
sub
mov
sub
jge
aas
xchg
out
test
jb
daa
fisttps
enter
lds
insb
je
mov
in
jl
leave
insb
mov
stos
or
stc
inc
pop
xchg
lretw
icebp
jb
mov
inc
stos
adc
and
test
arpl
adc
xchg
lods
loopne
jl
sub
cmpsb
mov
cmc
push
xor
jge
pusha
and
pop
mov
xchg
fsubrl
out
cmp
rcr
cmp
loope
shrl
fsts
test
shld
mov
jb
cmpsb
push
outsb
xchg
cmc
and
out
lds
lods
pop
aas
icebp
repz
sahf
pop
test
sbb
jae
pop
lea
jp
jo
scas
out
std
js
mov
pop
ret
in
cld
jmp
push
lret
test
in
adc
nop
repz
movsb
addr16
ss
mov
cmp
fisubrl
dec
int
lahf
fucomp
insb
movsb
xor
rcll
inc
orb
sahf
lret
mov
stc
push
xor
mov
loop
sub
out
jo
lcall
jecxz
mov
dec
repnz
and
lret
repnz
jo
std
dec
xor
loop
jecxz
stos
fisubs
iret
or
popa
dec
mov
dec
int3
divb
cmc
std
mov
fists
insb
xor
int3
xor
fcmove
dec
fs
cmp
jmp
mov
fwait
leave
pop
cmp
mov
ret
xchg
je
pop
stc
add
pop
xchg
sub
push
dec
call
adc
mov
shll
flds
mov
sarb
xchg
shll
inc
mov
sarb
int
pop
inc
push
jl
ds
stos
cmp
or
pusha
sarl
shrl
inc
aad
inc
adc
mov
es
daa
pop
mov
hlt
adc
data16
test
jns
icebp
fucomip
mov
xchg
xchg
iret
push
mov
mov
int3
or
or
and
aad
fisttpl
cwtl
and
cmc
mov
mov
les
mov
xchg
mov
sub
int3
mov
and
out
add
fnstenv
sbb
cmc
repz
test
dec
jne
xor
add
daa
jne
sbb
iret
pop
test
cmp
xlat
mov
adc
mov
faddl
jno
lods
jg
out
pop
add
push
out
pop
dec
outsl
adc
dec
sti
daa
jne
enter
into
ss
pop
shll
push
fdivs
pop
fs
roll
stos
xor
pop
cld
scas
inc
adc
xlat
jmp
or
mov
aam
xchg
or
lock
movsb
xchg
pushf
fdivl
dec
test
mov
popl
fisttps
xor
inc
pop
pop
inc
stc
dec
bound
mov
push
bound
rorb
insb
cmovne
xor
pusha
sbb
adc
xchg
dec
xchg
call
pop
jge
add
mov
out
jle
es
fcomi
inc
xchg
or
push
add
fisttpl
mov
mov
inc
scas
imul
shll
daa
icebp
nop
add
out
mov
or
insb
push
test
sub
xor
add
inc
movsl
int3
out
rolb
push
cmp
lods
mov
inc
cmp
adc
std
push
subps
lds
ret
inc
dec
dec
adc
jno
adc
mov
cmp
push
mov
lcall
popf
dec
ror
jne
sub
or
in
and
xchg
inc
sar
or
push
outsb
and
push
mov
test
sarl
jns
inc
push
push
pop
shlb
shl
and
clc
inc
pop
jnp
inc
int3
pop
jbe
enter
cmpsl
ror
cmp
sti
iret
mov
je
repnz
add
inc
outsb
add
sti
push
xchg
roll
cmc
or
in
lret
mov
aas
je
adc
dec
ja
stos
or
cmp
arpl
hlt
clc
xchg
mov
xchg
out
pop
add
xchg
push
pop
add
pushf
sub
loope
or
pop
mov
movsb
add
or
loop
fidivrl
shll
ret
inc
push
inc
mov
adc
imul
mov
int
cli
sub
sbb
or
mov
mov
call
lock
lods
fstl
mov
pop
mov
adc
shl
cmc
lahf
pop
in
clc
adc
xor
testb
sub
inc
imul
popf
xchg
mov
movsb
inc
dec
add
jg
hlt
fcoms
ss
movsb
mov
out
cmp
xchg
mov
sub
xchg
cmpl
pop
roll
jmp
inc
push
je
cmc
push
cltd
and
scas
jae
mov
inc
sbb
xchg
out
je
lea
dec
sbb
inc
aas
es
pop
xor
jo
pop
call
test
xchg
test
je
pop
clc
push
push
pop
mov
xchg
mov
dec
mov
mov
cs
lock
cmove
test
mov
jae
pop
fnsave
loopne
cld
xor
xchg
stos
or
inc
decl
call
call
lret
add
or
xor
out
inc
insb
mov
push
int3
sbb
inc
adc
cli
xchg
and
dec
lret
mov
hlt
push
xor
add
inc
add
rolb
cmp
test
mov
and
lock
rcll
int3
xchg
xchg
pop
add
mov
es
popa
pop
add
jecxz
xor
lret
push
push
lcall
lea
mov
in
sbb
or
popf
stc
cmp
in
adc
dec
rcrl
aad
outsb
scas
jbe
cmc
jbe
jg
mov
mov
lret
sbb
leave
jle
adc
into
push
adc
pop
push
add
int
ret
lods
mov
pop
daa
jmp
push
push
sbb
iret
pop
mov
cmp
rcll
scas
cli
stos
enter
cld
or
inc
jbe
movsl
adc
lcall
lea
push
outsl
lahf
fstp
jecxz
out
aam
lods
fnstenv
ljmp
stc
push
in
dec
imul
imulb
mov
call
dec
add
sbb
fcompl
or
or
fbstp
jmp
jae
pop
in
lahf
out
test
push
inc
jecxz
and
dec
add
xor
mov
push
cld
push
push
hlt
add
cs
dec
pop
sbb
mov
fwait
push
add
add
loop
add
add
sbb
mov
jae
lahf
loopne
sub
test
das
cs
mov
xor
inc
xchg
testb
push
testl
jmp
fdivrs
sub
cmpsl
sahf
inc
cmp
out
or
sbbl
hlt
mov
jo
test
stos
dec
icebp
stos
into
mov
in
cmp
ss
inc
dec
push
mov
jmp
ret
imulb
mov
cmpsl
add
adc
inc
orb
icebp
jb
jp
insl
mov
into
lods
sub
push
or
sbb
mov
and
lret
cli
out
pop
mull
into
cmp
dec
push
shll
ret
inc
aaa
or
sub
jl
insb
insb
movsb
sahf
clc
fs
and
pop
shl
jb
jg
in
inc
nop
or
ja
cmc
xor
add
xchg
sub
mov
jne
movsb
jnp
clc
repnz
xor
xchg
jge
fsubr
in
test
and
mov
das
mov
fldt
cmc
add
sbb
aad
or
adc
aaa
test
out
cmp
ret
fisubl
roll
in
xor
xor
das
cmp
and
cld
ret
dec
call
mov
das
jp
test
push
lahf
imul
mov
movsb
xor
push
jmp
and
pop
in
or
rorb
stos
mov
pop
insb
cmp
adcb
subb
push
inc
adc
incl
pop
clc
fisubrs
outsb
sub
js
or
jo
mov
in
add
fbld
pmuludq
std
mov
nop
scas
js
jecxz
daa
pop
pop
inc
adcl
leave
add
or
scas
sbb
push
mov
cmp
ljmp
add
pop
inc
out
or
push
les
aas
out
adc
xchg
in
mov
lcall
push
jge
push
push
inc
in
lock
add
sbbb
hlt
xchg
push
addr16
mov
push
mov
push
mov
jl
mov
add
hlt
cmp
add
jl
stos
pop
mov
shr
mulb
push
aas
js
cmp
dec
pop
or
mov
daa
push
and
fisttpll
cmp
arpl
repnz
cmpsb
das
les
push
push
and
jnp
cmp
dec
gs
test
jne
and
movsl
insb
les
sarb
mov
repz
outsl
decb
sbb
mov
dec
arpl
iret
int
add
jp
shl
js
push
jp
add
sub
dec
push
jnp
fs
xor
xchg
sub
lret
mov
imul
es
push
and
movsb
fnstsw
cmpl
sti
out
sub
ja
int3
test
andl
int
fucomip
xchg
test
mov
movsb
and
stos
cmp
push
cmpsl
pop
cmp
adc
es
pop
xchg
inc
mov
aaa
aaa
rcll
jns
xor
mov
notl
lods
sub
int3
jnp
shlb
jmp
or
sub
jae
pop
xchg
push
js
mov
jnp
lock
mov
dec
push
push
sahf
mov
outsl
test
fistpll
popf
xor
inc
push
insb
insb
pusha
lods
or
movsl
cmp
inc
jno
mov
sahf
adc
andnps
ret
pop
dec
loop
test
pop
inc
dec
dec
jae
mov
pop
add
ror
pop
imul
pop
xchg
shrl
mov
mov
int
in
mov
in
mov
push
lret
add
mov
test
in
out
sub
jae
cwtl
int
xor
mov
in
xchg
jle
cs
test
pop
inc
jne
jno
in
outsb
jecxz
ljmp
mov
and
test
push
add
movsl
xchg
scas
popf
push
mov
sub
mov
mov
cmpsb
and
and
imul
push
in
cmp
ret
inc
xorb
hlt
mov
jae
testl
nop
and
jg
fs
int3
sbb
jmp
sar
sti
push
lods
xor
fisttps
push
dec
pop
je
ret
mov
mov
ret
and
outsb
jmp
iret
sbb
cmp
stos
mov
cmpsl
mov
ja
popf
adc
mov
dec
dec
inc
repz
into
mov
dec
xchg
cld
scas
aas
mov
loop
mov
dec
out
mov
xchg
jp
xchg
test
testl
or
push
fcoml
xor
call
ja
movsl
push
repz
xchg
xor
test
sti
xchg
adc
gs
cltd
cmp
or
pop
xchg
fdivrl
rorb
fs
mov
pop
or
add
sub
add
mov
pushf
fxch
mov
mov
out
in
jb
insl
ja
xlat
jb
lea
sub
xchg
sub
push
lahf
cmpsl
inc
push
jo,pn
inc
jnp
ret
xchg
adc
cmpsl
add
pop
sbb
adc
cwtl
add
mov
inc
and
ss
bound
cld
pavgw
dec
inc
fsubrp
sub
mov
rorl
cmp
dec
dec
movsl
jo
sbb
enter
add
cmp
sub
inc
cmp
push
arpl
sub
mov
pusha
dec
jle
xchg
lea
cmp
inc
mov
push
iret
es
xchg
xor
int3
out
jecxz
inc
mov
ljmp
or
cmpsb
inc
or
test
clc
subl
sub
pop
pop
pusha
divl
mov
jne
in
cmp
js
out
jle
push
pop
adc
leave
movsb
sub
xchg
mov
add
bound
sbb
rorb
inc
jns
xchg
pop
fdivrs
mov
ret
int
icebp
pop
popa
sub
lret
xchg
inc
fildll
mov
dec
cli
outsl
mov
imul
movsb
pop
dec
sbb
bt
or
jo
push
je
inc
mov
mov
mov
in
or
mov
or
lahf
test
sub
inc
mov
lods
ljmp
popa
into
movl
filds
and
cmp
rclb
adc
cltd
mov
jl
pop
lcall
lods
test
pushf
out
mov
into
fwait
jne
jae
xchg
aam
inc
cmp
jle
mov
daa
lcall
sub
enter
adc
add
leave
xorl
divl
sbb
cmp
mov
or
mov
leave
xchg
out
nop
jge
test
arpl
stc
pop
stos
mov
add
dec
not
fcomps
loopne
or
dec
mov
enter
mov
cmpsb
in
movsl
push
sub
movsb
enter
jo
mov
push
mov
sub
add
repz
jecxz
adc
add
xchg
dec
loop
xchg
mov
cli
jae
jp
call
sub
push
sub
mov
test
xchg
push
mov
test
popa
aas
test
xor
mov
mov
lods
gs
es
xchg
and
outsb
pop
fnstcw
push
out
pop
iret
xchg
and
sbb
mov
je
insl
push
shrb
mov
and
jns
cwtl
aad
cmpsl
sbb
bnd
sub
sub
cmpsb
test
pop
leave
pop
sub
xchg
fildll
add
adc
xor
mov
and
imul
mov
sbb
push
arpl
ss
and
jmp
repz
sbb
punpckhbw
imul
ds
and
xchg
je
dec
hlt
leave
imulb
or
inc
xchg
shrl
sub
into
ja
push
mov
lods
daa
mov
push
cmp
dec
clc
lcall
sbb
mov
test
pop
mov
sub
les
cs
test
push
sti
std
jb
dec
in
dec
mov
inc
xchg
pushf
movsl
push
mov
cltd
mov
into
popw
mov
cmp
mov
sub
in
scas
in
jp
nop
pop
shlb
cmp
mov
in
inc
jb
and
lods
cmp
xchg
xchg
shrl
sbb
or
shlb
mov
lret
mov
arpl
cmc
cmp
mov
sub
dec
adc
lcall
std
pushf
sub
je
jge
mov
and
ljmp
rcrl
and
fwait
decl
xchg
mov
ficomps
call
jmp
test
je
cld
cmp
ljmp
cmp
jbe
mov
mov
shl
fxch
cmp
mov
mov
add
mov
shlb
push
outsl
adc
repnz
fs
mov
lret
and
fisttpl
mov
mov
insb
push
mov
mov
push
or
jne
addr16
inc
repnz
cmpsb
or
push
cmpl
cmp
ficompl
cmp
jp
movsb
rclb
movsb
call
push
movsb
add
rcll
xlat
test
push
mov
adc
insb
stos
movsl
gs
outsb
lds
and
es
add
popf
test
fwait
cwtl
adc
mov
dec
mov
ja
cmp
lock
jb
popa
push
push
rolb
data16
and
jb
cmp
cld
sbb
pop
dec
rcll
fnstcw
push
inc
dec
or
fcompl
inc
pop
add
scas
loope
lea
fildll
jo
scas
aas
cmp
pusha
jp
and
sbbb
les
add
leave
xchg
loop
fnstsw
cmpsl
lds
fsubrs
adc
mov
ja
jmp
jmp
leave
cmp
or
sti
inc
xchg
dec
sub
sbb
cmp
sarl
pusha
idivl
mov
jns
scas
pop
testb
jmp
iret
jnp
xchg
pop
test
adc
sahf
xor
mov
jmp
movq
lahf
out
lds
xchg
dec
mov
inc
mov
mov
cmp
ror
push
and
ret
and
or
mov
incb
jle
gs
sub
cs
xchg
jecxz
mov
pop
outsb
xchg
and
push
mov
cmp
sbb
mov
cmp
pop
sbbl
test
out
fisubl
and
xchg
mov
push
inc
sbb
loop
mov
jp
aaa
push
cmpb
mov
or
daa
and
out
scas
loope
mov
dec
pop
daa
call
fnstenv
xchg
pop
mov
push
adc
pop
dec
leave
add
sahf
pop
or
sbb
call
imul
sbbl
xchg
addr16
adc
nop
sub
lret
push
lret
xchg
mov
sbb
push
jnp
lds
repnz
add
sub
mov
xchg
jnp
out
inc
dec
fimull
cmp
mov
addr16
test
loopne
jnp
inc
mov
mov
roll
cmpsb
out
stos
mov
jae
inc
inc
mov
negb
pop
ficoms
outsb
adc
sahf
pop
jmp
push
sar
jb
add
xor
faddl
mov
mov
jae
test
mov
aad
inc
popa
xor
mov
sub
sub
shr
fsubrs
sbb
popf
imulb
adc
cltd
repnz
loopne
outsl
or
out
imul
pushf
pop
nop
das
inc
in
xchg
fucomi
mov
fildl
repnz
push
mov
mov
dec
outsb
mov
popa
test
add
push
mov
push
or
movl
and
mov
pop
fldl
mov
mov
je
lret
mov
mov
ret
push
sti
jl
ja
ror
dec
inc
out
andb
adc
fisubl
int
into
inc
xchg
mov
mov
xor
in
dec
in
leave
out
mov
jmp
jmp
adc
daa
mov
cmp
push
cmp
arpl
test
dec
dec
pusha
inc
push
sbb
insb
loopne
sub
outsb
or
adc
inc
jmp
test
push
xor
xchg
andnps
gs
or
pop
orl
in
xchg
mov
xchg
pushf
lea
daa
fcoms
lcall
xchg
in
dec
pop
jl
xchg
out
sub
dec
push
and
push
add
int3
mov
jns
dec
fs
int3
int
dec
cmc
and
stos
test
incl
mov
and
cwtl
stc
pusha
jns
jae
pop
add
scas
sub
arpl
test
pushl
into
pop
or
sti
out
xor
shll
mov
cmp
cltd
and
and
pop
ja
sahf
push
inc
daa
mov
pop
jmp
pop
xor
shll
lock
test
pusha
aam
push
cmpsl
or
mov
pop
push
xchg
add
aas
add
icebp
sbb
in
aam
nop
sub
popl
cmp
push
rol
and
aas
add
lahf
fimull
pop
xchg
movsl
cmp
dec
je
xchg
lcall
in
push
loope
xlat
insl
loopne
xchg
fs
fwait
cmpsb
jg
lret
push
std
mov
movsb
or
xchg
inc
fcom
inc
aas
test
nop
push
mov
imul
push
push
sti
jle
outsl
add
popf
imul
xchg
fdivr
sbb
outsb
in
sub
ss
mov
call
mov
iret
fldcw
or
and
push
mov
dec
push
mov
ret
int
aam
je
xchg
xchg
adc
out
xor
add
inc
xchg
inc
cmp
lret
dec
fwait
sub
jns
xchg
dec
outsb
aad
shlb
cmpsb
cmpsl
or
xchg
add
xchg
jle
dec
xchg
pop
pop
add
popf
add
xor
xchg
mov
negb
jecxz
jmp
shl
cltd
test
ret
cmp
pop
xor
aas
stc
push
leave
pop
pop
fwait
cmc
lcall
or
movsl
lods
loopne
pop
or
jo
fisubrl
jo
xlat
cmpsl
icebp
add
in
pop
jge
sub
je
mov
xchg
mov
mov
js
jo
push
stc
lahf
mov
dec
nop
or
std
mov
cmp
and
imul
push
sub
scas
sub
jae
mov
push
sub
mov
sbb
inc
xor
fmull
jo
in
mov
icebp
adc
lods
movsl
xchg
ds
lods
sbb
call
imul
add
push
inc
xchg
xor
dec
imul
jg
and
cmp
add
std
sub
fldenv
adc
mov
cmpsl
call
in
push
and
js
lret
cmp
cmp
iret
mov
sub
cmp
dec
cld
push
inc
aam
pop
mov
push
out
sbb
in
addr16
into
hlt
dec
cmc
mov
frstor
xchg
cmp
and
cmp
cltd
shrl
jmpw
rorb
jne
mov
ja
rclb
pop
shlb
add
cmpsb
jo
push
sub
arpl
lcall
cltd
in
sbb
iret
imul
dec
push
sbb
ret
fcmovnu
outsl
jo
xlat
cmp
nop
mov
test
xchg
in
adc
sub
addl
in
aam
pop
and
int
jae
fsubs
dec
mov
movsl
fdiv
jb
insl
cmp
lcall
sti
je
outsl
test
cmp
xor
add
ret
push
cmp
repz
jns
push
movsb
cmp
mov
cs
mov
je
test
mov
fnstenv
xor
movsl
stos
inc
sub
sbb
lea
cmp
loop
pop
aam
cmp
sahf
dec
addr16
test
imul
subl
enter
cmp
mov
pop
or
repz
das
aad
loopne
fsub
cld
mov
ds
xor
adc
scas
jg
arpl
outsb
rcrl
rorb
lods
pop
cld
mov
pop
lock
mov
in
dec
mov
adc
adc
xor
pop
arpl
ss
int
mov
fisubs
dec
daa
inc
stc
ret
test
into
jns
sbb
push
sub
into
sub
mov
clc
fst
lea
mov
sub
lods
sub
xchg
jge
mov
xchg
push
aas
mov
js
push
es
ret
mov
roll
xor
jae
xor
inc
shrl
dec
mov
movsb
inc
mov
adc
leave
push
add
fwait
loop
stc
jmp
mov
movzwl
and
push
inc
scas
stos
sarl
clc
rcrb
pop
mov
data16
dec
jae
xor
ljmp
aad
loop
mov
and
dec
divl
mov
sbb
mov
inc
mov
fcmovnu
pop
push
jg
repnz
jns
jo
push
jne
testb
push
sub
test
ja
aad
mov
jnp
add
jne
ljmp
sub
shl
mov
xor
jmp
sar
sti
int
sbbb
or
pop
and
dec
je
data16
cmpsl
jle
pop
dec
push
lea
je
out
xchg
outsl
pusha
pop
and
xorl
mov
push
sub
xor
test
sbb
ja
push
insl
fiaddl
jb
ds
ret
sub
pop
cmp
ret
jmp
dec
imul
jge
jae
mov
sbb
lods
jge
ds
pop
iret
push
and
sbb
pop
fiadds
iret
jno
jle
jge
mov
sti
addb
or
push
jmp
fnstenv
jg
mov
pop
push
je
pop
pop
jecxz
lret
xchg
pop
cmp
mov
sbb
call
mov
or
pop
arpl
pop
in
gs
sub
data16
jne
pushl
fwait
xor
jae
hlt
jge
inc
int3
inc
ja,pt
pop
cltd
les
stos
dec
sbb
bound
inc
sub
out
pop
lret
add
fadds
or
jecxz
xchg
adc
es
insb
out
xlat
inc
dec
inc
les
out
dec
mov
xor
out
into
push
cmp
out
cltd
xor
jo
gs
movsb
xchg
push
jecxz
daa
outsl
mov
je
adc
pop
lods
stos
outsl
mov
icebp
std
popa
sti
push
mov
push
push
push
adc
mov
mov
jecxz
in
mov
push
test
sub
pop
cmpsl
lcall
jbe
pop
add
lahf
shlb
lcall
rolb
nop
dec
sub
movsl
roll
dec
mov
xchg
sub
cli
insl
fidivs
dec
jbe,pn
mov
fcompl
es
movsl
ret
outsl
cmp
test
push
aaa
and
dec
sbb
mov
dec
daa
adcb
or
call
call
dec
mov
mov
repnz
scas
xchg
cwtl
loopne
cmpsl
fstl
pop
dec
pop
xor
std
mov
mov
xchg
sbb
xchg
or
jns
dec
pop
mov
mov
jge
xchg
sarl
jp
mov
sbb
cli
add
data16
out
imul
shlb
jne
xor
inc
flds
test
cmp
aam
decl
jl
jb
arpl
adc
push
mov
cmpsl
and
test
pop
add
jge
mov
sbb
pop
mov
xchg
mov
addr16
add
add
jp
ja
lds
fcomip
fcoml
shlb
mov
cmp
idivb
fs
inc
lods
inc
leave
std
fmuls
ret
ds
insb
leave
sarl
mov
mov
dec
mov
ss
in
sbb
jle
popf
fs
nop
fwait
xor
mov
ds
cmc
fmulp
cmp
je
jne
jns
dec
loop
mov
push
fdivrs
push
mov
sbb
xchg
cmpsl
jl
xchg
hlt
jns
mov
push
jae
push
jno
sbb
jmp
nop
push
pushl
shlb
dec
mov
mov
jmp
lock
xorb
mov
movsl
test
adc
insl
popf
cmp
aaa
rol
loop
inc
cmp
fstpt
mov
es
xor
rolb
dec
into
mov
ret
or
jmp
pop
jg
jns
call
dec
test
pop
cltd
shll
or
mov
jmp
ffreep
or
std
mov
out
dec
mov
sub
sarb
iret
xchg
dec
rcrb
pushf
and
stos
int3
fwait
shrb
scas
mov
sub
mov
cmp
hlt
repz
hlt
xlat
frstor
mov
pop
insb
lds
lcall
xchg
lds
inc
cwtl
mov
and
sbb
idivb
adc
jp
xor
sub
test
and
sub
mov
shrb
inc
test
add
fmull
nop
inc
cmp
dec
sbb
jns
mov
cmp
sub
je
out
and
mov
mov
orl
xor
jmp
mov
jle
sbb
cmpsl
loopne
out
mov
stc
mov
stos
lods
int3
adc
ret
jae
rclb
sti
ret
sbb
ficoms
pop
sbb
jmp
inc
or
push
adcb
movsl
hlt
dec
mov
les
in
fcompl
xor
xchg
loope
cli
mov
and
scas
addr16
jge
fwait
cmpsl
push
sbb
sbb
gs
loop
cs
mov
push
pushl
xor
into
mov
jno
ss
fildl
js
je
aad
jg
xor
mov
or
mov
pop
or
push
or
sub
xchg
dec
xor
lret
fistl
add
and
mov
imul
push
cmp
jge
jne
add
or
cmpsb
push
arpl
psrlq
push
mov
mov
dec
roll
bts
xchg
nop
stos
lahf
rol
push
and
push
test
std
lock
xchg
push
sbb
lods
mov
loopne
aas
pop
dec
jge
push
add
dec
jns
mov
cmpb
idivl
jp
loopne
mov
sub
cmp
clc
mov
mov
xchg
hlt
repz
jns
fnstcw
cli
mov
or
dec
aaa
nop
xor
cld
push
adc
sub
inc
mov
decb
cltd
xor
js
loop
sarb
testb
rcrb
add
cmp
movsl
fsubrs
movsl
test
xor
subl
cmp
popa
sub
push
mov
jno
cmp
xor
movl
jo
pop
fisubrs
add
lods
cli
and
inc
clts
push
stos
mov
stos
and
jnp
cmp
jns
xchg
mov
ds
sub
pop
and
mov
lret
sbb
pop
sub
cmpsl
xchg
ljmp
sub
adc
cmp
ss
popf
add
insb
lcall
addr16
lahf
call
scas
jmp
push
xchg
fst
je
pop
ss
push
or
in
aad
sti
xor
gs
mov
mov
outsl
sahf
into
insb
xchg
repnz
xchg
mov
jnp
lea
lock
mov
add
test
cmc
sbb
adc
hlt
adc
cmp
dec
mov
jae
daa
push
ret
pop
mov
and
shrl
out
xor
sub
jbe
dec
inc
cmp
stos
mov
fisubrs
sub
rcrb
enter
scas
pop
or
es
inc
xor
imul
fcmovbe
mov
inc
pusha
and
sbb
sti
lret
nop
outsl
push
lods
mov
jae
sbb
loop
pop
mov
jg
into
movsb
jo
mov
sti
test
mov
adc
add
xchg
cmp
lods
cmp
stos
std
and
adc
ret
inc
cmp
xchg
jge
ja
sub
mov
and
cmpsb
or
leave
popa
pop
jge
out
mov
les
mov
jecxz
add
mov
sbb
sbb
enter
push
mov
mov
fcompl
cli
pop
jne
push
add
sbb
cmp
cmp
sbb
test
xchg
stos
push
jp,pn
mov
pop
pushf
loop
loope
dec
mov
jg
lret
shll
lahf
add
cmp
subl
fwait
xchg
fst
pop
iret
push
cmc
xchg
cmpsl
cltd
mov
push
and
arpl
imulb
xchg
sbb
popf
dec
jmp
out
jne
pop
add
adc
rcrl
cld
sub
adc
pop
mov
mov
push
nop
mov
or
fs
shlb
clc
mov
shlb
pop
test
arpl
mov
adc
fisttpll
mov
arpl
sub
add
jno
mov
xchg
orl
jnp
fistl
mov
xchg
cwtl
leave
cmp
xchg
cmp
mov
je
gs
or
lods
stos
push
sbb
jge
lret
nop
arpl
in
jae
js
jl
cli
addl
gs
or
scas
out
movlps
jns
inc
sub
ficompl
loop
nop
aaa
or
aam
push
repnz
jl
in
out
mov
or
add
int
pop
je
lret
mov
and
rcl
dec
xlat
sub
lods
push
push
dec
stos
sub
pop
dec
out
push
out
lods
pop
push
out
fstp
mov
stc
dec
inc
sahf
fs
xchg
or
pushf
movsb
xchg
insl
addl
mov
mov
adc
dec
roll
add
jmp
push
mov
and
out
mov
insl
divb
mov
jb
out
add
rorl
aam
loopne
xchg
and
sbb
mov
nop
push
orb
inc
inc
ds
adc
rclb
ret
repz
sbb
push
pop
out
push
push
cli
test
cmp
jne
lcall
or
outsb
mov
mov
mov
push
adc
inc
mov
imul
and
enter
cmp
filds
aas
stos
push
sti
jmp
adc
lret
mov
test
rep
and
movsb
stos
shlb
push
mov
jl
pop
cmp
pop
or
jnp
fmull
fisubs
mov
out
xchg
cmp
pop
inc
mov
push
pop
adc
ds
lods
jbe
cmp
sbb
imul
sbb
out
mov
jecxz
sbb
aad
nop
mov
shll
ja
ljmp
orl
repnz
xchg
cmp
jge
xor
pop
mov
fisubrl
cli
and
dec
out
lcall
sahf
subl
mov
xchg
sub
divb
lock
lcall
jb
icebp
pop
in
icebp
test
dec
dec
insb
or
xor
shrb
lcall
jl
jg
push
cmp
lock
sbb
inc
loop
rol
mov
xlat
push
dec
mov
mov
push
cmpsb
mov
addb
test
jnp
mov
in
xchg
dec
icebp
js
cmc
jae
fucom
jg
pushf
jl
push
fcmovnbe
xor
mov
int3
dec
mov
loopne
cmp
rorb
fwait
popa
pop
cmp
scas
or
pop
mov
pop
mov
ret
bound
je
or
dec
jle
imul
mov
fistps
cmpsb
inc
fldenv
dec
xchg
jno
fnstcw
push
mov
jae
add
pop
jg
loope
in
aaa
out
xor
and
and
jg
push
and
rclb
outsl
xor
in
inc
dec
jg
dec
add
les
dec
sub
fbld
mov
ljmp
jbe
pusha
xlat
fcompl
out
sti
fs
popa
adc
cmp
out
fisttpl
repnz
fcompp
and
std
mov
mov
lods
mov
fs
lds
push
xor
or
cld
test
shlb
orl
xor
arpl
push
mov
jo
ljmp
jb
test
jecxz
lahf
sub
mov
lret
push
icebp
push
dec
lret
sti
into
out
repnz
mov
push
dec
inc
sub
cmp
mov
dec
cmpb
insl
adc
in
cli
adc
inc
sub
sub
and
lahf
sbb
pop
push
out
ljmp
ficompl
sahf
sbb
shr
xchg
jl
adc
fcmovnb
inc
add
fiaddl
cmp
fisttpl
loopne
pop
mov
add
call
imul
iret
sahf
fcomps
sbb
ja
push
fdivrs
mov
stc
aad
repz
lret
arpl
jbe
mov
cmp
sbb
push
and
out
mov
mov
jge
add
das
mov
ffree
aam
std
inc
xlat
adc
out
outsb
fcomi
or
mov
jbe
mov
out
pop
int3
mov
jno
sub
sub
ljmp
jbe
lock
jno
push
shrb
lret
fwait
jl
pushf
lock
jmp
movsb
dec
jmp
adc
lea
cld
addr16
cmp
dec
dec
or
cld
jmp
test
out
fstpt
sti
xlat
cld
subl
arpl
sahf
hlt
xor
cmp
shrb
push
mov
xlat
lock
jae
mov
dec
xchg
mov
gs
mov
lea
mov
sub
sahf
mov
lahf
movzbl
pop
mov
mov
push
sbb
aam
outsl
cmp
rorl
xchg
push
jmp
je
sahf
gs
mov
clc
and
stos
jo
xchg
lock
xchg
aad
cmp
clc
dec
shlb
dec
and
mov
xchg
jg
in
mov
pusha
les
xchg
sbb
std
push
add
test
addr16
rolb
insb
jo
jnp
movsb
add
jle
mov
sarl
scas
daa
xchg
jle
pop
jb
xor
test
mov
aad
int3
mov
ds
mov
sub
mov
stc
cmp
mov
adc
adc
xlat
lret
imul
enter
mov
mov
jbe
push
fstp
mov
cmp
cmp
mov
inc
lock
cmp
popa
and
pop
shrl
repnz
mov
mov
add
testb
stc
loop
dec
jmp
repnz
lods
jns
sbb
aaa
lock
fists
push
add
int3
mov
lret
xchg
loop
push
rcrb
jg
dec
dec
fnstenv
rcll
dec
popf
pushf
mov
std
jne
mov
into
scas
ljmp
fildl
jb
mov
dec
lock
pop
fsubl
lcall
std
pusha
cmp
lret
sbb
je
test
imul
bound
fsubs
dec
cmp
mov
xor
out
jg
pushf
std
repz
push
pop
insb
into
fbld
lods
sub
mov
inc
test
std
test
push
cmpsl
mov
aam
xor
and
xor
mov
fsubr
add
xchg
sbb
insl
mov
or
test
adc
cld
xor
xchg
js
mul
sub
lods
pop
sbb
adcb
vmwrite
cmp
gs
push
xlat
dec
lds
jbe
inc
cwtl
sbb
rcr
and
das
and
jge
xchg
rol
jge
and
xor
and
jbe
rclb
andl
out
mov
adcl
data16
shl
cmp
cmp
fbstp
add
adcb
sbb
sti
or
test
sub
adc
pop
inc
mov
aas
test
inc
pop
inc
sub
mov
ret
pop
pop
add
sub
mov
cld
mov
inc
flds
lods
adc
notb
push
aaa
and
mov
imulb
xchg
jno
adc
push
cli
movsl
vhsubps
daa
xchg
mov
shrl
shr
pop
add
pop
stc
icebp
and
fldt
roll
pop
or
jns
leave
sbb
lods
cmc
add
ss
scas
movups
call
pop
mov
stos
pop
repz
sub
in
fwait
adc
lds
repz
hlt
stos
xlat
cmp
jecxz
ds
idivb
fwait
jmp
sbbb
out
inc
icebp
mov
loopne
sbb
repz
mov
pop
fldl
negb
or
mov
xor
insb
jns
xor
xchg
pop
fidivrs
jo
pop
imulb
inc
fs
ret
and
lds
add
jne
add
jno
icebp
jp
lahf
cmp
jmp
outsb
xor
lcall
push
jmp
push
js
jns
packsswb
lcall
mov
xchg
push
or
addb
push
mov
fdivrl
addr16
cmp
xor
mov
adc
adc
mov
add
mov
mov
jecxz
xchg
mov
sub
addl
push
mov
pop
adc
or
loop
repz
scas
js
sbb
mov
test
fwait
psraw
cli
scas
push
mov
mov
ljmp
arpl
arpl
mov
jo
bound
in
daa
xchg
das
xchg
das
outsl
xor
dec
sub
xchg
cmp
cmpsb
lret
dec
xchg
lret
clc
lcall
sbb
mov
idiv
outsb
loope
fsubrs
pop
lods
mov
orl
jmp
xor
pop
in
sbb
sub
enter
mov
test
ficoml
inc
loope
inc
adc
lahf
cmpb
sbb
pop
mov
stc
and
inc
mov
xchg
lcall
xchg
aam
in
movsb
sub
add
push
push
stc
bound
imul
pop
insb
mov
cltd
pop
sbb
idivb
ljmp
sbb
out
fidivs
fsubs
xor
sub
xchg
xor
or
jmp
add
out
push
cmpsb
push
push
mov
cmpsl
jno
mov
mov
hlt
out
out
popf
mov
data16
sbb
pop
ret
push
cmc
mov
les
xchg
insb
or
push
or
stc
addr16
jecxz
push
stos
xchg
jmp
ss
fdivl
mov
push
popa
nop
in
xor
sbb
push
jnp
cmpsl
stos
pop
int
cwtl
sti
bound
lds
std
xchg
dec
out
cwtl
out
cmp
ljmp
mov
inc
scas
mov
nop
cld
fnstenv
arpl
xor
pop
ds
mov
dec
xchg
lahf
in
cli
arpl
in
stos
ljmp
lock
fstl
dec
add
gs
add
cs
pushf
sti
fs
stos
mov
leave
mov
jne
fs
pop
cs
rorb
dec
push
in
lds
pop
insb
fptan
test
sbb
jb
andl
std
push
icebp
dec
pop
add
cwtl
pop
test
sub
loop
jne
mov
mov
xchg
lock
push
jae
add
jecxz
jecxz
aam
outsl
xor
xor
test
pop
mov
mov
in
roll
scas
mov
jbe
cwtl
push
jl
lret
out
pop
sbb
jb
cmp
int
lea
rcrl
aas
inc
aad
mov
and
xlat
sbb
aam
adc
mov
add
call
les
fildl
enter
and
outsb
fdivs
out
in
sub
and
inc
xor
xlat
push
and
and
add
loope
mov
mov
jecxz
sub
repz
pop
addr16
les
sarl
iret
rcrb
add
mov
mov
shlb
mov
test
ret
sub
xchg
xor
jne
pop
pop
inc
into
push
adc
gs
cmp
or
jmp
aas
ret
push
mov
or
sar
inc
and
pop
out
jecxz
fs
lds
iret
xor
mov
scas
push
into
sub
js
hlt
mov
pop
jecxz
xchg
sbb
xchg
adc
lahf
xchg
mov
sub
test
jl
or
dec
or
es
or
adc
add
mov
lret
pop
cmc
jbe
push
out
mov
jnp
adc
mulb
cmp
fwait
dec
cmp
movsl
inc
mov
xlat
xchg
rolb
add
or
inc
mov
mov
sub
inc
xchg
pop
cs
incl
cmp
scas
in
mov
fnstenv
xchg
rcl
push
jmp
xor
fldt
lods
in
hlt
push
sbb
pop
fimull
enter
mov
jmp
mov
ret
out
loopne
dec
xchg
mov
bound
push
and
hlt
bound
cs
cmp
cs
das
jns
cmp
add
out
clc
stc
jg
adc
push
dec
push
decb
je
pop
cmpsb
or
dec
rcr
leave
dec
jbe
push
sbb
mov
ja
pop
sbb
add
mov
inc
lret
lods
jl
cmp
add
cmp
addr16
pop
jg
pop
mov
lds
or
xor
inc
jae
neg
jnp
jmp
loop
mov
inc
xor
xchg
jg
sbb
mov
adc
push
xchg
pushf
inc
and
inc
lods
je
fisubl
sarb
jl
outsb
mov
pushf
pop
popf
jge
mov
jmp
mov
xchg
inc
aas
cmpsl
adc
stc
push
aad
inc
in
addb
and
push
std
mov
gs
pop
lock
inc
dec
int
xor
cmpsb
rcl
and
jo
jle
inc
sbb
mov
imul
lods
mov
pop
mov
jbe
cmp
add
mov
ss
call
jp
out
adc
xchg
mov
mov
jle
push
add
fisubrs
xchg
out
into
cmc
mov
jg
cmp
lods
push
scas
mov
outsl
push
pop
nop
test
inc
cmc
sub
lds
fdivs
std
aaa
xor
or
mov
stos
and
sbb
xor
std
into
es
push
fists
mov
cld
dec
mov
and
out
test
cmp
out
jne
loope
or
mov
enter
sbb
mov
insb
lcall
cmp
sahf
cmc
scas
outsl
scas
push
sub
outsb
imul
not
imul
sub
ret
negb
fcmovbe
add
and
sub
or
jmp
lcall
stc
andb
xor
or
and
push
movsl
loope
mov
adc
and
shll
xchg
div
lods
dec
mov
mov
out
push
or
xchg
mov
fimull
and
cmc
push
or
mov
les
add
mov
stc
roll
and
popf
jmp
pop
das
xchg
int
mov
cmp
inc
out
or
ds
jmp
movsb
sbb
cltd
ljmp
jns
adc
sub
and
push
cmpsl
subb
add
loopne
dec
shrb
sub
mov
adc
out
xchg
mov
xor
in
std
mov
jl
xchg
negb
and
push
ret
sub
mov
cwtl
inc
jle
mov
mov
push
jne
sbb
movsl
stc
add
or
nop
enter
hlt
aas
imul
outsb
aam
mov
mov
addr16
loopne
and
addb
xor
pop
cltd
xchg
cmp
scas
lcall
cmp
and
xchg
mov
int
cmp
popf
movsl
mov
outsl
xchg
mov
filds
adc
ljmp
jl
pop
and
addr16
pop
cmp
pop
pop
std
outsl
mov
mov
pop
or
lret
nop
xchg
fbld
or
sub
mov
lods
mov
std
pop
mov
or
xchg
pusha
std
imul
xchg
jge
movsb
shll
data16
cmp
and
aam
sarl
ret
rcll
out
fisttps
ficoml
mov
in
int3
gs
dec
jp
into
inc
mov
mov
hlt
mov
in
mov
insl
loopne
add
inc
add
cmp
pop
pop
push
add
movsl
mov
lret
leave
mov
int
mov
daa
addr16
mov
mov
mov
jo
pop
push
cmpsl
push
cmp
fs
shll
jle
sbb
aad
pop
inc
mov
xlat
andb
ss
arpl
cmc
dec
push
mov
cltd
cs
dec
fsubrs
outsb
pop
fdivrs
scas
insl
mov
jae
ficoml
xlat
adc
adc
aam
pop
mov
push
xchg
js
xor
push
test
out
stos
sbb
add
ljmp
sub
and
enter
inc
adcl
out
daa
sbb
hlt
stos
cwtl
icebp
pop
shlb
mov
adc
bound
adc
mov
daa
or
mov
repnz
or
jnp
repnz
fiaddl
in
xchg
push
aas
stc
fistps
pop
in
add
fisttps
pusha
aaa
imul
data16
dec
repz
and
scas
clc
xorl
mov
adc
inc
dec
inc
mov
lods
ret
jnp
fstl
lods
repnz
cld
enter
ss
shrb
jo
jp
xlat
jno
or
sar
jge
adc
lret
out
dec
or
lcall
movsb
movsb
aaa
mov
sbb
ja
pusha
inc
fwait
mov
jmp
roll
out
es
cld
sub
addr16
or
lretw
push
jl
stc
out
arpl
testl
pop
daa
sbb
pop
dec
mov
and
mov
cmp
mov
fs
jmp
xchg
flds
mov
jae
pusha
js
test
jge
int3
xchg
and
in
cmp
outsl
or
jno
push
cs
outsl
pop
jmp
mov
insl
dec
lock
push
nop
shll
and
insl
or
in
jns
out
in
push
jmp
cmp
mov
pop
mov
cmp
sbb
push
cmp
std
into
mov
fidivrs
lret
add
data16
cwtl
out
lods
push
insb
mov
inc
or
sbb
xor
cmp
out
std
xchg
cmp
enter
jl
jo
out
scas
rol
mov
or
mov
lods
mov
dec
sub
xor
mov
inc
inc
push
call
enter
movsl
aad
sub
loop
jmp
jp
imul
cmpsb
sub
popf
mov
cld
jge
push
mov
loop
push
pop
out
push
jae
or
jo
loope
add
ret
iret
inc
xor
test
shll
cmp
and
adc
lea
cmp
cmp
int3
rclb
sub
test
insl
int3
scas
mov
push
shll
cmp
test
xchg
out
pop
scas
mov
lretw
mov
sti
cwtl
mov
fwait
push
jnp
dec
jmp
add
repnz
subb
arpl
mov
cmp
ljmp
ds
loop
mov
ljmp
add
in
pop
push
cmpsl
aam
and
test
fldt
sub
mov
std
cvtps2pi
mov
gs
ja
sub
inc
pop
ds
scas
pop
or
or
int3
mov
sub
inc
sbb
rclb
cmpb
mov
imul
dec
popa
jp
jo
mov
inc
and
rcrl
or
dec
pop
pop
fdivl
inc
je
or
fs
jg
test
loope
cmc
popl
aad
adc
adc
dec
packssdw
xchg
cmp
jnp
roll
enter
xchg
mov
les
mov
test
ds
mov
push
dec
xchg
cs
test
xchg
jb
mov
or
inc
and
idivl
adcb
cld
mov
dec
push
jns
xchg
mov
add
pop
clc
insb
in
sti
mov
outsb
je
jae
inc
dec
jl
and
lods
mov
mov
xchg
inc
loope
and
and
inc
jae
mov
or
dec
loop
aad
jne
jecxz
testl
loopne
int3
icebp
add
ss
int3
xchg
mov
and
xchg
dec
fistpl
test
hlt
and
pop
fsubrs
in
or
push
push
push
es
adc
push
dec
xchg
mov
sub
jb
or
jbe
cmpsb
dec
jbe
inc
jbe
fldt
sahf
mov
mov
ds
stos
or
hlt
cmpb
push
cltd
xchg
lret
and
ror
data16
jge
mov
adc
pop
xchg
aaa
push
pop
push
cld
mov
inc
adc
jg
lcall
add
lods
in
enter
fisttps
cmc
in
and
rcrb
stc
push
data16
dec
xor
arpl
shl
pop
inc
lret
push
xchg
cmpl
dec
xchg
push
aad
outsb
pop
lds
fwait
and
push
mov
lcall
inc
out
pop
dec
stc
les
push
dec
push
aas
in
inc
inc
push
loop
call
cmp
cmp
bound
push
insb
icebp
dec
js
mov
push
repz
jle
pop
pop
dec
sbb
xchg
mov
mov
fidivs
lock
cmp
xor
mov
sub
shll
sbb
adc
into
jae
cmp
ret
mov
hlt
mov
add
pusha
popa
mov
jbe
sub
stos
in
add
lods
push
or
cs
cli
ficoml
lcall
mov
js
into
jmp
mov
fidivl
pop
neg
xorl
xchg
decb
jecxz
into
mov
icebp
hlt
push
arpl
bound
xlat
or
fs
aam
sbb
push
push
aad
mov
sub
je
out
test
and
shll
jmp
xchg
push
mov
cs
cmp
filds
mov
xor
jno
mov
movsl
sub
and
jbe
mov
loope
loopne
sub
rorb
cld
iret
add
jl
xlat
push
xlat
inc
mov
mov
rolb
shrl
xor
and
ja
pop
mov
in
or
lcall
and
jle
cmp
fisttpll
ljmp
or
add
inc
jo
call
ret
rclb
jp
xchg
sub
icebp
jo
push
sbb
cmc
adc
insb
cld
ss
sbb
dec
insb
jecxz
add
lock
sub
movsl
xchg
inc
lahf
push
dec
jp
leave
pop
mov
mov
and
add
sbb
sbb
fdivrl
mov
cs
cs
push
jp,pt
xchg
fcompl
jp
or
out
int3
sbb
xchg
inc
sub
push
loop
add
fsubr
inc
push
pushf
dec
push
jnp
ja
mov
pop
sti
jl
mov
cmp
aaa
mov
sub
cmp
dec
enter
sub
xor
adc
jbe
inc
mov
cmp
pop
or
andl
repz
int3
sub
push
push
loopne
xorl
add
lret
xchg
lods
sub
mov
cmp
jns
mov
inc
inc
pushl
sub
gs
cmc
jle
fucomp
cmp
and
test
mov
mov
mov
cld
movsb
arpl
mov
cmp
lds
fdiv
out
mov
or
in
enter
xlat
lcall
je
pop
mov
mov
stos
and
fsubrs
testb
nop
mov
jp
xor
int
js
loopne
jae
mov
cmp
and
sub
push
xchg
dec
inc
ret
insb
std
xor
xchg
push
sub
ljmp
out
jns
scas
inc
je
inc
int3
loope
jp
je
dec
pop
push
push
or
sbb
adc
mov
loop,pn
xor
dec
mov
pop
fs
push
push
stos
imul
je
int3
push
mov
push
call
pop
mov
aas
lods
out
or
outsb
mov
push
mov
pushf
push
aaa
shlb
int
dec
mov
imul
cld
mov
mov
pusha
cli
add
dec
lods
mov
cmpsl
mov
std
call
or
sub
cli
addr16
or
cs
scas
rorl
mov
cwtl
pop
nop
jmp
push
add
push
pushf
xor
int3
lret
test
arpl
jle
pop
cmpsl
mov
out
je
ja
std
jmp
fwait
iret
dec
loopne
xchg
sbb
pushl
adc
rcll
outsb
imul
insl
mov
push
shll
mov
ret
mov
sub
in
std
leave
and
and
cmp
inc
lock
push
jnp
push
je
pushw
mov
add
or
in
mov
nop
mov
push
sub
inc
mov
vandps
adc
jb
stos
sub
push
sbb
jno
movsl
test
dec
outsl
add
pushf
add
mov
add
sti
sub
pusha
dec
push
jle
pop
rol
sbb
or
nop
fildll
pop
and
repz
sub
jl
xor
in
fs
xchg
rcll
rcrb
mov
cli
test
data16
dec
insb
push
cmpsb
js
mov
stos
lahf
inc
aad
and
shlb
push
cwtl
adc
mov
ds
hlt
mov
dec
repz
xchg
push
xchg
jnp
pop
xchg
jbe
or
out
xchg
or
sub
xor
adc
mov
sbb
cmc
ds
mov
or
ja
push
xchg
dec
in
dec
repnz
test
jae
sbb
sub
bound
sbb
sub
xor
daa
movsb
movb
daa
fcoml
or
jns
fisttpl
sti
jle
mov
dec
in
push
les
loope
pop
nop
mov
test
pusha
cwtl
popf
daa
fidivs
cmp
jle
sbb
and
adc
clc
scas
shll
cltd
out
xchg
xlat
cmp
xchg
add
xchg
cs
adc
std
ds
sbb
pop
aam
and
ret
mov
and
aaa
outsl
pop
mov
or
test
aas
popl
push
or
pop
punpcklbw
test
stc
cmc
imul
adc
xor
and
add
xlat
popa
insb
or
repnz
dec
fstpl
cld
push
sub
push
shrb
cmp
mov
or
mov
jl
inc
or
xor
das
leave
jmp
mov
addr16
inc
addb
inc
int3
icebp
inc
orl
xchg
cmpsb
mov
and
push
or
pop
flds
jno
mov
out
rcll
mov
insl
ret
adc
int
adc
int3
int3
mov
test
rclb
je
xchg
rcll
xchg
xorb
enter
fdivl
push
icebp
repnz
mov
push
adcl
mov
xor
pop
jae
sbb
push
push
xor
cmp
fwait
pop
mov
mov
stos
sahf
orl
andl
addr16
clc
testb
inc
mov
cltd
ret
mov
fsts
lds
loopne
xchg
mov
enter
mov
xor
clc
fistps
jmp
add
add
lock
iret
fstps
pop
mov
movsb
sub
sbb
dec
xchg
movl
pusha
gs
iret
jne
add
repz
xchg
mov
lahf
xor
or
insb
ljmp
scas
mov
stos
sub
out
adc
sbb
cwtl
movsb
in
insb
cli
in
and
addr16
popa
adc
add
inc
out
push
hlt
xchg
jmp
icebp
test
pop
adc
bound
ds
xchg
cmp
dec
mov
sarb
jecxz
aad
inc
lcall
repnz
orb
push
mov
loop
sar
jl
loop
aad
js
inc
adc
stc
xchg
rcll
jno
dec
jmp
daa
insl
mov
dec
repz
xchg
js
and
pop
out
mov
test
scas
inc
push
ret
push
lock
cs
pop
mov
inc
loop
add
push
mov
sahf
jge
test
pop
rolb
fiaddl
add
jl
push
add
xor
xchg
inc
cmpsl
pusha
test
hlt
sub
sbb
cli
into
adc
jg
mov
sahf
hlt
shl
fisttps
loop
aas
test
xchg
dec
sbb
add
sub
hlt
pop
sbb
cmp
pop
xor
stc
lcall
mov
aas
call
pop
lods
in
repz
cli
sti
lock
aas
sub
inc
mov
fcmove
clc
cmp
movsb
sbb
repz
mov
lret
ja
xchg
loop
pop
pop
sbb
and
stos
test
add
mov
lahf
sti
rcl
xchg
ja
mov
push
repnz
clc
xor
mov
movsb
daa
fwait
dec
enter
mov
xor
mov
push
cmp
insb
int
mov
sbb
iret
out
xor
xor
into
cmpb
divb
sub
and
fsubr
inc
jb
xor
push
popa
stos
pop
xor
push
ret
cmp
stos
addr16
cmp
lret
sahf
jl
shrb
pop
sti
test
mov
mov
cmp
jg
or
movsl
aam
mov
movsl
mov
mov
xchg
pop
push
movsb
adc
push
push
dec
xchg
lods
sub
or
push
aas
cltd
mov
and
ljmp
sbb
and
mov
adc
cltd
movsb
int
out
fxtract
pop
xchg
mov
add
sub
cmpsb
or
bound
insl
enter
je
fisttpll
lahf
mov
cmp
xor
sbb
rorl
aad
xchg
sbb
jecxz
xchg
push
cmp
push
movsb
enter
aad
fs
push
adc
mov
push
in
push
jmp
ss
sahf
mov
mov
xchg
pop
outsb
imul
dec
dec
inc
and
into
pop
aas
xchg
xor
xchg
into
push
inc
mov
pop
out
xor
fadds
das
cmp
jp
shll
jno
sbb
outsl
pop
or
daa
daa
iret
xor
jle
xchg
pop
jae
push
sub
fsubrl
mov
push
push
lds
ret
inc
mov
loopne
fidivrs
dec
repz
mov
movl
in
dec
sub
mov
mov
lock
mov
fdivl
test
mov
sbb
fucomp
mov
sti
in
or
sbb
adc
inc
lds
mov
add
idiv
in
ret
test
jle
mov
cltd
push
jmp
push
sbb
jbe
jle
sbb
dec
mov
out
test
jecxz
xor
mov
je
mov
iret
adc
arpl
xorl
js
push
repnz
sub
div
and
stc
or
adc
leave
pop
insb
ret
xlat
pusha
movsbl
cmpsl
add
pop
enter
test
mov
mov
testb
sbb
into
inc
cwtl
sbb
movsl
adc
enter
jge
jecxz
xorb
pop
lock
in
lret
hlt
movsb
fisttps
pop
xchg
enter
lcall
push
push
add
mov
add
sub
push
repz
pop
xchg
sub
mov
mov
mov
idivb
mov
leave
add
add
sbb
dec
mov
cli
repnz
push
pop
sub
mov
jl
bound
and
cmpsl
inc
inc
sbb
mov
xchg
xchg
jae
jl
and
adc
stos
outsb
cmp
ret
jecxz
aam
sahf
sbb
xchg
gs
push
push
and
xchg
jb
and
pop
cmp
test
xchg
mov
mov
and
out
movsl
je
dec
sbb
adc
mov
xor
loop
add
subl
jb
je
push
inc
adc
scas
xchg
roll
in
xchg
mov
mov
add
ja
or
fdivl
xchg
sbb
sub
mov
add
cmp
pushf
idivb
sbb
scas
lahf
pop
insb
pushf
sub
cmp
mov
int
add
mov
fs
enter
icebp
and
dec
sbbb
test
dec
ljmp
sub
or
cmp
mov
nop
repz
pushf
push
fisubl
jmp
pop
add
in
lods
fwait
push
jae
dec
sbb
je
lcall
int
lret
xchg
cmpsl
and
mov
xor
ret
lea
shrl
cmc
fs
jbe
sub
stos
jmp
aas
cld
mov
and
jmp
pusha
rolb
fs
fisttpl
lea
out
jnp
cmpsb
cld
dec
icebp
gs
mov
mov
pop
sub
sub
scas
xchg
std
fsubs
sbb
pop
jnp
lea
stos
jle
das
outsl
iret
adc
sbb
rcll
sbb
dec
jns
add
xchg
andl
es
push
int3
inc
cmpsl
push
inc
push
push
jp
fstps
mov
loope
mov
push
aaa
mov
aas
dec
scas
lahf
or
mov
add
in
mov
and
push
pop
mov
sbbl
push
and
jne
mov
sbbb
jae
cltd
sub
push
mov
dec
mov
adc
out
cmp
lahf
fisubl
test
sti
push
addr16
mov
outsl
mov
inc
cmp
mov
cmpb
clc
icebp
loopne
inc
cmc
add
dec
cmp
mov
push
mov
mov
in
mov
and
mov
sub
arpl
pop
sbb
sbb
cld
test
mov
stos
sbb
sub
mov
dec
mov
push
jge
clc
test
pop
mov
mov
jo
rcrb
sbb
dec
push
aam
mov
jmp
cli
test
sbb
mov
test
loopne
xlat
xorb
lahf
imul
xchg
pop
pop
repnz
push
lret
and
je
push
scas
es
lret
and
push
and
loop
fwait
std
adc
jg
int3
sub
loope
mov
mulb
ja
ljmp
xchg
add
imul
dec
ljmp
xchg
scas
loopne
mov
stc
stos
in
test
cld
leave
iret
cmpsb
fbstp
or
push
add
fstpt
dec
mov
mov
push
xor
inc
dec
sti
loopne
pop
pop
cmp
inc
sub
movsb
sbb
das
rorl
das
jo
call
into
cmpsb
pop
arpl
ja
ret
stc
sub
jmp
aam
mov
sbb
sub
in
xchg
cmpsl
je
push
mov
lret
push
add
lods
dec
rolb
in
add
cmpsl
jmp
and
or
nop
fistps
or
fsubrl
jmp
cmp
add
inc
mov
pop
mov
adc
pop
jae,pn
cmc
pop
cli
sbb
aas
cmp
fistl
jecxz
jl
fs
rcr
and
or
push
push
pushf
and
xchg
mov
into
xchg
jno
jle
fsubr
pop
lods
cli
mov
test
fcomip
je
stos
xchg
aas
or
inc
xchg
push
je
inc
arpl
inc
adc
dec
aas
jp
out
adc
sub
xor
or
sub
fisubl
cli
push
ds
movsl
pop
stc
mov
pop
into
sti
test
mov
push
loopne
outsl
push
imul
xchg
push
fisubrs
xor
and
aad
mov
dec
hlt
loopne
fstp
test
rcrl
scas
cmp
dec
fbstp
test
jns
push
push
mov
ja
out
xor
xchg
icebp
jg
inc
pop
repnz
xor
dec
pusha
pop
inc
pop
rcll
mov
xchg
mov
lods
jp
cmpsb
andl
pop
inc
popa
push
adc
mov
pop
popa
jbe
push
mov
cmpsl
xor
pushf
std
popf
push
dec
leave
or
add
stc
lods
add
stos
xor
mov
imul
cmp
cmp
xor
sub
mov
inc
hlt
mov
adc
int3
cs
jns
fadds
stos
cld
outsb
dec
cmp
mov
fadd
sub
stos
scas
push
add
dec
cmp
divl
jmp
ret
or
jecxz
jl
insl
xor
cwtl
data16
les
lret
out
pop
pop
adc
mov
lods
stc
mov
int
pop
mov
aaa
pop
call
pop
ljmp
fisubs
cmpsb
jns
xor
shll
out
xor
outsl
jl
jns
jmp
mov
mov
lock
lock
xchg
lea
add
icebp
hlt
or
ret
loopne
mov
cli
mov
je
jl
test
lea
notb
aaa
mov
scas
arpl
add
pop
xlat
sub
adc
mov
rep
xlat
inc
das
stos
and
mov
sarl
xchg
jbe
and
negb
mov
push
ret
jae
outsl
add
test
push
adc
jmp
mov
popf
test
add
mov
mov
addr16
mov
sbb
nop
in
xacquire
nop
xor
mov
adc
push
movsb
add
fstl
xor
in
outsl
or
or
xchg
int
mov
xchg
test
in
jbe
pop
aas
outsl
push
sub
and
sahf
pop
lods
test
add
pusha
mov
push
jmp
shlb
scas
arpl
jb
dec
fwait
mov
enter
mov
lea
sbb
je
fstpl
ja
push
cmpsb
mov
mov
sbb
mov
xchg
and
js
scas
xchg
cmp
imul
adc
iret
pop
sub
inc
fisubrs
push
das
pop
mov
push
repnz
sub
icebp
jne
into
ds
mov
fidivs
inc
mov
mov
jmp
aaa
pop
push
fcmovnbe
sbb
pop
adc
repz
cmp
lds
cmp
cmp
outsb
lds
rorb
mov
fidivs
cmp
cmp
jmp
jne
mov
inc
insl
sbb
mov
push
sbb
push
mov
mov
xor
rcrb
cwtl
cmpsl
xchg
jae
ds
jmp
push
cld
daa
mov
bound
sub
fcmovb
sub
test
xchg
scas
xchg
jnp
clc
mov
enter
test
rolb
jmp
sbb
inc
clc
xchg
adc
mov
daa
sbbl
out
push
addr16
les
jmp
push
mov
mov
in
cmc
outsb
cli
sbb
pop
movsb
and
ljmp
cmp
loope
mov
adc
decb
hlt
and
loopne
xor
adc
mov
jp
and
push
ljmp
jb
or
xor
pop
cmp
lock
lret
jmp
adc
loopne
icebp
xchg
adcb
pop
mov
repnz
std
test
loope
mov
mov
into
cmp
xchg
xchg
ja
pop
icebp
popf
stc
jno
jne
jnp
adc
pop
push
loop
dec
adc
cli
mov
scas
push
sub
sub
inc
shlb
movsb
and
test
cmp
aaa
insb
movsl
jmp
xchg
mov
sbb
popf
xor
sbb
out
js
les
mov
and
mov
negl
jecxz
sub
sti
add
rcrl
pop
fsts
mov
mov
rorb
test
pop
sbb
aam
mov
pop
loope
or
sbb
sub
push
push
mov
cltd
popa
push
lock
mov
fdivrl
mov
stos
sti
mov
fsubrl
cmc
lods
push
cwtl
sub
iret
jb
ficoml
push
add
sub
xchg
push
cmp
cli
inc
mov
push
jo
mov
imul
mov
xchg
iret
jno
into
ds
mov
dec
dec
lock
xchg
push
fwait
cwtl
xchg
xor
arpl
push
mov
rcl
stc
add
aaa
cmp
and
fiaddl
jo
divb
hlt
cmpsb
cs
lret
dec
xor
inc
cmp
out
repnz
aam
rcrl
push
inc
popf
rcrl
sahf
fcompl
pop
loopne
sahf
test
add
mov
or
xchg
dec
ret
sbb
and
gs
idivb
ljmp
adcb
push
or
pop
in
or
sub
mov
test
jnp
ds
sub
fs
out
adc
fnstenv
out
cli
scas
movsl
xchg
std
mov
jmp
dec
adc
cmpsl
inc
or
xchg
push
dec
jge
push
push
es
aad
outsl
je
and
mov
jle
pushf
cmpl
mov
mov
movsl
or
nop
cmpsb
repz
add
jne
div
sbb
or
mov
std
div
or
pushf
lods
xchg
repz
bnd
cmp
in
jle
testb
fwait
mov
test
sbb
sbb
repnz
dec
push
mov
mov
popa
pop
and
push
push
or
xor
out
xor
or
lahf
sub
js
cld
aam
repz
pop
es
xchg
and
jno
test
stos
push
adc
push
pop
imul
shrb
cmp
mov
cli
mov
jg
std
or
in
push
add
jns
imul
idivb
mov
insl
cmp
jo
repz
cmp
mov
aaa
adc
into
fstp
unpcklps
in
mov
cmpsl
xchg
std
loop
insb
jge
inc
lahf
cmc
mov
inc
xchg
pop
fnstcw
cmp
push
inc
mov
cmp
cmpb
add
pop
subl
outsl
add
rorl
pushf
fwait
mov
pop
pop
rcr
and
cmp
fldln2
dec
mov
mov
mov
leave
lds
push
jl
subl
mov
test
fistl
ret
and
xor
stos
jecxz
imul
push
xchg
inc
jno
mov
es
daa
cmp
fcoml
lret
insb
scas
push
lods
sbb
mull
inc
in
adc
test
fldcw
or
ret
imul
xor
xor
jecxz
add
ret
jns
xchg
in
xor
xchg
test
mov
pop
fildll
pusha
add
xor
je
mov
lock
mov
test
mov
jg
push
push
pop
sbbl
mov
test
rol
xor
cmp
cmpsl
lds
mov
lret
inc
subl
repnz
stc
test
in
lret
or
inc
ljmp
push
and
cmp
pop
jl
int3
lret
pop
push
adc
sub
jbe
mov
pushf
inc
andb
jp
push
movsb
dec
inc
out
sub
sarb
jnp
stc
jb
pop
imul
loope
lahf
pop
out
jmp
inc
push
das
pop
jb
sub
popa
push
add
push
mov
in
push
inc
testb
pop
adc
jp
mov
inc
hlt
ret
daa
add
sub
or
or
sbb
cltd
test
jnp
cmp
xchg
mov
inc
scas
cmp
dec
mov
add
inc
insl
cmp
pop
dec
xchg
mov
pop
pop
jg
lahf
adc
add
mov
int
jge
dec
jo
xchg
pop
inc
ja
pushf
pop
mov
clc
in
mov
cwtl
xor
jmp
hlt
sbb
mov
inc
dec
or
and
ds
sahf
xchg
repnz
pop
xlat
aaa
stc
lods
ret
mov
mov
cmpsb
push
xor
mov
movsb
sar
fst
test
and
add
lret
mov
mov
aam
cmp
leave
jns
inc
sbb
in
jl
lods
js
sub
sbb
out
lahf
outsl
push
xchg
icebp
test
cltd
mov
fstps
xor
mov
pop
sbb
test
call
xor
adc
mov
in
leave
cmp
mov
lea
pop
xchg
jle
sahf
pop
sub
adc
and
mov
fs
cmp
bound
mov
pop
fst
cltd
insb
int3
fdivs
test
mov
mov
dec
popf
jmp
in
leave
mov
jo
test
add
xchg
aad
pop
aaa
jns
pop
imull
and
daa
bound
aaa
xor
jg
mov
dec
fidivs
outsl
jp
or
insb
adc
xchg
lret
xchg
gs
dec
test
mov
daa
out
ret
xor
addr16
pusha
push
jns
xchg
and
test
hlt
xor
push
aad
push
data16
outsl
pusha
cmp
mov
adc
rolb
or
adcb
jge
ds
cmp
rorb
loop
lods
jle
pop
pop
pop
call
sub
out
xchg
or
mov
jecxz
rcrl
out
jne
and
incb
jno
pop
xor
test
push
adc
mov
sub
fdivl
inc
addl
mov
pop
mov
xlat
enter
push
loop
scas
mov
xchg
xacquire
xor
mov
outsl
lds
jnp,pn
lds
insb
test
or
call
aas
stos
insl
mov
mov
int3
xchg
xchg
dec
loope
push
mov
scas
sahf
inc
test
jae
outsb
pop
lcall
test
adc
xchg
dec
stc
jno
negl
mov
sbb
push
jl
aaa
enter
xchg
jle
test
test
jns
in
jp
mov
iret
imulb
dec
ja
loope
fsubrl
jns
cmpsb
sbb
dec
out
daa
mov
fisubrl
sub
insb
mulb
aam
fisttpl
xorl
rcrl
mov
add
mov
or
jbe
ret
pop
lahf
mov
pop
cmp
idiv
xor
mov
xchg
mov
dec
push
jge
mov
scas
mull
mov
int
les
ds
mov
cmp
jne
push
sub
cmp
insb
jl
dec
fcoms
insb
xchg
cs
xchg
adc
cwtl
les
cld
dec
mov
or
pop
sub
mov
outsl
in
iret
rolb
dec
or
sbb
test
mov
movsb
push
inc
mov
jno
pop
fidivrs
fstpl
jne
fwait
xlat
adc
les
add
scas
addr16
ret
and
mov
or
mov
jo
addb
cmp
pusha
cmp
in
or
mov
out
mulb
in
cmp
xchg
jl
sbb
scas
mov
and
mov
hlt
cmp
inc
xlat
jno
in
push
popf
js
fldenv
mov
adc
xorl
inc
mov
pop
mov
mov
mov
jo
pop
cmp
inc
ss
imul
movsb
nop
inc
mov
std
mov
add
notb
push
cmc
adc
xor
add
in
jge
inc
pop
pop
call
cmc
ja
or
pop
mov
outsb
div
jnp
mov
xlat
or
lods
daa
cmc
cmp
mov
dec
imulb
push
js
lret
jns
stos
nop
lods
inc
test
not
mov
inc
les
adc
xlat
aam
pop
sbb
mov
lret
pop
dec
ds
imulb
dec
lock
aaa
loop
cmc
jbe
lock
js
movsb
loopne
notrack
ret
repz
out
push
pop
sub
rcll
inc
mov
dec
sbbb
daa
insl
arpl
adc
cmp
aas
pop
mov
mov
popf
push
in
mov
ljmp
push
lret
nop
hlt
les
lea
push
icebp
dec
test
sbb
pop
pop
sbb
inc
loop
nop
and
cmp
data16
js
aas
add
push
loop
and
stos
push
dec
cmp
cmp
aaa
mov
mov
inc
cmp
xor
pop
lock
rcrb
out
mov
xchg
inc
push
push
adc
fwait
mov
xor
add
xor
fsubs
mov
xchg
cmp
dec
mov
je
gs
dec
push
pop
adc
lds
pop
xchg
imul
jne
in
stos
sahf
lods
add
dec
int
subl
xchg
push
sub
mov
push
adc
sti
les
jp
shll
dec
and
sub
pusha
sahf
je
pusha
pop
jl
pusha
int3
fs
into
add
int3
cwtl
xchg
in
leave
and
pop
mov
mov
sbb
stos
cmp
movsb
inc
mov
into
scas
cld
test
dec
inc
adcl
test
cmp
jg
lods
cs
std
dec
call
imul
dec
insl
jle
push
inc
mov
mov
jb
and
cmpl
mov
shlb
imul
pusha
rcr
and
push
mov
mov
loope
das
repz
cmpsl
cmpsb
push
data16
jg
fcmovnu
push
dec
imul
mov
das
mov
fnstcw
pop
or
out
sbb
into
sub
ret
ficoml
into
add
or
test
dec
scas
lret
lods
lahf
popa
ljmp
out
ficomps
out
fsubs
xchg
and
cli
dec
adc
mov
mov
jnp,pn
sbb
adc
fs
cwtl
into
pop
lock
repz
std
out
les
add
lea
movsb
fdivl
pop
aam
pop
cwtl
ret
mov
pusha
arpl
mov
cmp
adc
hlt
mov
rcll
mov
daa
cmp
cmp
xchg
enter
decl
or
xchg
cmp
mov
sti
pusha
lcall
out
das
lcall
xor
mov
arpl
data16
lret
fs
das
inc
xchg
test
cwtl
add
and
mov
nop
dec
sahf
dec
mov
in
inc
cld
xor
pop
xlat
imul
add
lock
pop
sub
popf
xlat
sub
inc
jl
pusha
xlat
jmp
pop
pop
inc
inc
int3
inc
rcrb
js
lea
shr
arpl
xor
mov
lret
std
sbb
inc
and
mov
cli
gs
and
mov
pop
incb
mov
push
movq
fistps
mov
stos
nop
ja
sbb
mov
mov
inc
inc
test
or
jo
dec
clc
dec
jns
mov
rcrl
rol
and
push
cmp
dec
dec
sub
imul
sub
mov
xor
movsl
andl
inc
push
pusha
das
push
cli
and
loope
cmp
inc
sbb
movsb
loop
push
lods
push
push
jno
aad
cmpsb
or
mov
push
leave
out
stc
push
xor
add
jb
pop
and
xor
loop
mov
pop
mov
xchg
lods
ror
add
mov
out
rcl
out
mov
pop
cs
loopne
out
stos
scas
adc
or
movsl
push
fstpl
outsl
popf
jmp
jecxz
outsb
into
mov
cld
roll
xor
dec
sbb
pop
mov
loopne
imull
iret
fbld
jnp
cli
inc
adc
fiaddl
iret
push
xchg
jae
fmull
xchg
xchg
or
fnsave
ficoms
add
cmc
jp
xchg
stos
sub
sbb
xchg
in
pop
vmovdqu
subl
cmpsl
js
push
es
test
and
fdiv
enter
sub
insl
lret
and
mov
arpl
dec
in
fbstp
mov
xchg
les
mov
cmp
and
fldt
xchg
xor
imul
pushf
inc
xor
sub
sarl
or
cmpsb
or
push
add
push
enter
shll
sub
loop
inc
and
inc
mov
push
fbld
pop
sbb
mov
std
mov
and
fcomp
dec
xchg
idivl
div
mov
or
or
inc
popa
scas
push
jecxz
push
addr16
in
jbe
cli
adc
outsb
call
inc
mov
dec
adc
lock
mov
sbb
inc
es
sbb
xor
sbb
cmp
jmp
jo
add
mov
addr16
icebp
dec
cs
inc
bound
jb
arpl
loopne
incl
xchg
cmp
loope
lock
sub
push
jns
ds
out
mov
add
das
ret
push
jnp
push
jmp
or
xlat
or
xchg
xchg
dec
jnp
pop
push
movsl
cs
test
cbtw
mov
xchg
mov
push
inc
sbb
xchg
jecxz
sbb
push
push
push
cs
sub
jmp
sbb
andb
call
dec
addr16
jmp
xchg
mov
or
pop
mov
cmp
add
push
popf
jno
mov
inc
test
jle
jmp
sar
and
adc
and
jl
push
fsub
add
xchg
add
push
test
lret
xchg
jmp
pop
pop
shlb
andps
inc
scas
mov
fsubp
jp
xor
imul
dec
sbb
push
push
lods
xchg
bswap
jp
and
jbe
push
cwtl
and
repz
sub
fcoml
fnstcw
pop
push
fsubrl
in
or
sub
lcall
cmp
loop
add
mov
nop
xchg
out
jecxz
loope
ljmp
jle
adc
aas
imul
pop
repz
jmp
pop
fistpll
faddp
mov
mov
adc
mov
in
cltd
cmp
int3
mov
scas
stc
scas
imul
repz
push
movsb
add
push
jmp
arpl
fwait
dec
xchg
pop
pushf
imul
sbb
mov
movsl
movsl
jp
inc
rclb
mov
test
leave
clc
bound
inc
bound
add
jmp
repz
inc
add
dec
cmovno
xchg
les
cmpsl
mov
adc
dec
fisttpll
nop
outsl
out
loope
lahf
pand
and
sbb
subl
test
add
cmp
test
cmp
stc
jmp
xor
mov
sub
jmp
lods
inc
mov
xor
jne
mov
arpl
and
in
jnp
lock
or
or
fucomp
std
dec
inc
shrl
pop
cmp
sbb
mov
filds
push
or
in
cmpsb
mov
add
adc
js
jle
fldl
leave
sbb
movsb
pop
and
or
leave
daa
cmpsb
xor
sbb
sub
xor
je,pt
pop
add
jp
add
jns
div
fidivrl
or
in
in
inc
sbb
idivb
inc
sti
pop
xchg
fistps
popf
fldcw
fisttpll
push
jmp
jmp
rcrl
lahf
and
cmp
dec
push
cmc
cmp
mov
mov
enter
and
mov
xor
mov
lds
sbb
scas
sub
imul
adc
jge
repz
push
out
sarb
movsl
sbb
mov
ffree
xor
xchg
jp
inc
jo
popf
mov
push
and
ljmp
sarb
inc
sub
inc
fisubs
aas
out
fsts
popa
hlt
inc
jl
into
add
movb
fsubrl
push
push
xor
in
pop
push
lock
adc
cs
mov
inc
rcrb
jnp
cmpsb
imul
lods
jnp
jbe
and
xor
dec
je
movsl
jp
add
pop
popf
xor
adc
adc
movsb
jno
loopne
test
rcrb
fsubs
dec
cwtl
test
cs
rol
jg
pop
sub
dec
icebp
xor
sub
addr16
cmp
cmp
cld
pop
aaa
jg
in
test
in
jno
pop
iret
sahf
and
out
fsubrs
add
push
mov
int3
pop
in
daa
mov
pop
ss
mov
mov
cld
shl
push
cmp
sbb
gs
mov
xchg
or
adcl
fs
xchg
popa
cli
cwtl
les
jmp
lret
cmp
fildl
dec
xchg
lcall
shl
sub
int3
imul
orl
loopne
out
xor
shll
or
loope
outsl
imul
mov
and
push
adcl
or
lcall
repz
mov
faddl
or
push
add
mov
je
mov
xchg
mov
insl
cmp
push
cmp
push
mov
or
lds
push
xchg
jno
iret
mov
push
lods
leave
adc
test
rcrb
popf
sarb
xchg
cld
jnp
jbe
loopne
mov
push
test
mov
lcall
xchg
sti
mov
int3
and
fisubl
and
outsl
out
inc
enter
aas
pop
insb
rcrl
push
ds
test
fsubr
mov
pushf
aad
int3
cmovns
icebp
bound
je
mulb
sub
and
hlt
mov
push
sbb
fisubrs
ss
jae
jecxz
sti
fwait
cmpsl
mov
add
orl
and
or
sbbl
mov
xchg
pop
ss
pusha
lds
imul
aaa
mov
xor
lcall
jo
or
rol
into
xchg
inc
shlb
int
push
pusha
pop
xor
push
add
xlat
mov
bound
in
push
test
rorl
pop
lcall
cli
push
sub
mov
movsb
or
ret
xchg
andl
cwtl
lret
data16
pop
mov
popf
pusha
shrl
lods
incb
enter
aas
test
shr
xlat
add
xchg
push
popf
xor
ja
cltd
sti
cmp
add
imul
push
and
scas
fwait
test
scas
filds
data16
xor
int3
xor
push
insl
adc
xlat
jns
mov
adc
dec
aam
lods
int
sbb
movsb
jg
mov
lods
sub
adc
inc
cli
repz
mov
lods
mov
sub
push
and
cltd
dec
mov
cmp
movsb
pop
ds
scas
push
scas
fwait
xchg
xchg
push
stos
pop
add
repnz
das
int3
and
pushf
push
ret
sub
data16
loop
imul
xchg
into
cwtl
xchg
call
daa
or
xchg
sub
outsl
repz
mov
test
sbb
icebp
pop
cmc
jl
mov
pop
enter
adc
xlat
and
outsb
aaa
jne
test
push
lods
loope
js
sbb
push
cmc
in
cmpsb
mov
push
xchg
mov
lea
mulb
mov
cli
jge
outsb
add
inc
popa
xor
or
push
jnp
sub
in
test
loope
add
mov
push
fadds
sbb
scas
add
pop
inc
cmp
cmp
dec
fcomps
leave
fwait
cmp
sbb
sbb
shr
lea
mov
jecxz
sti
mov
pop
aam
push
cmp
ret
ret
and
andl
mov
pop
cmc
and
inc
lret
jle
fisttpll
leave
stos
out
std
mov
shlb
push
fisubs
out
in
mov
push
xor
jmp
mov
out
shll
and
add
add
mov
pop
lods
test
push
jae
xchg
ss
inc
cld
sti
bound
xchg
jmp
in
sysret
mov
leave
push
in
pop
int3
aas
loop
arpl
rclb
icebp
imul
ficoml
repz
push
jno
push
mov
xchg
jno
or
cmp
mov
xlat
outsb
stos
movsl
cmp
cmpsl
or
mov
fists
mov
jb
sub
clc
movsb
and
cld
js
outsb
imul
outsb
data16
loopne
aam
subl
jnp
out
push
add
add
xlat
adc
push
push
sti
popf
loope
iret
dec
int3
push
fdivs
adc
xor
push
xor
out
inc
mov
js
inc
out
fdivs
jle
lea
shrb
or
popf
and
push
sbb
popa
dec
int
shlb
jecxz
cld
insl
xchg
lahf
jecxz
pop
or
ljmp
mov
pop
inc
sub
dec
xor
sbb
pushf
popf
cmpsb
xchg
sar
adc
stos
push
lds
or
sbb
sbb
test
push
test
dec
mov
imul
test
jp
jnp
andl
adc
mov
pop
setns
sub
je
das
inc
adc
stos
and
pop
lds
fildll
xchg
xlat
jb
out
mov
mov
mov
lds
cmc
and
sarb
pavgw
stos
in
lcall
subl
mov
xchg
stc
pop
dec
jb
fcomps
in
dec
push
jecxz
lock
int
adc
aas
outsl
mov
cmc
xor
icebp
and
int3
ss
popa
and
inc
cwtl
fs
push
rolb
das
pop
dec
scas
subb
imul
add
aaa
or
inc
mov
imul
ja
pop
push
mov
nop
loopne
mov
xchg
xor
dec
cmpsl
cmpsl
sbb
xchg
mov
imul
pop
sub
icebp
stos
and
cmp
jecxz
xchg
aaa
pop
out
push
xor
push
loop
ljmp
call
mov
in
mov
cmp
nop
dec
and
hlt
sub
je
clc
or
cmp
hlt
pop
arpl
mov
adc
xlat
push
push
fwait
imul
inc
cmp
push
mov
rcr
xchg
out
jne
sbb
cmpsl
insb
mov
stc
or
push
lret
shl
int
rcl
push
fbld
push
mov
sub
cmp
cld
mov
mov
sbb
test
push
mov
ja
add
js
inc
cs
mov
rcrb
or
cli
or
pusha
mov
rcrb
loope
lock
sbb
and
xorb
and
xchg
sbb
das
orl
and
cltd
mov
rcl
cwtl
mov
push
cli
pop
adc
sbb
push
in
repnz
mov
xlat
ja
or
bound
lods
jb
iret
testb
popf
cmp
sbb
and
cli
sbbb
imul
xchg
out
or
in
sbb
nop
mov
pop
dec
jno
dec
add
sbb
test
pop
adc
cli
cmpl
adc
dec
jb
xlat
mov
and
add
adc
add
adc
mov
mov
jmp
aam
xor
stos
inc
jl
cmp
xor
mov
jne
add
fcoms
xor
add
das
aas
addr16
lret
stos
les
push
shlb
jbe
popa
lret
scas
je
sbb
mov
bswap
dec
bnd
movsl
jle
cmpsb
cmp
and
jno
je
dec
adc
cwtl
push
repnz
xchg
add
inc
mov
test
jnp
int3
std
test
call
inc
lret
xchg
mov
dec
adc
and
push
loop
iret
cmp
nop
adc
sub
push
shlb
aas
sub
adc
and
lret
mov
scas
test
mov
sub
daa
xor
nop
jecxz
sub
push
imul
fsubrl
add
push
mov
mov
cwtl
das
sbbl
stc
insb
sti
adc
xchg
nop
mov
in
add
jg
jno
sub
gs
xor
mov
xor
xor
in
stos
dec
in
cmpsl
in
cs
xor
sbb
and
jmp
aas
or
leave
jmp
push
clc
cwtl
ffree
test
adc
xchg
pop
scas
test
pop
in
test
es
jge
test
adc
add
xchg
repz
cmc
fsts
repz
xor
dec
or
and
mov
cmp
mov
sti
xor
aad
mov
xchg
lds
or
call
push
sahf
jmp
mov
cwtl
jle
call
jns
push
pop
pusha
pop
imul
pop
loop
adc
xchg
out
xchg
xor
sbb
out
test
dec
shlb
int3
push
lahf
jle
sub
and
aam
push
repz
fwait
pop
int
mov
jmp
xchg
dec
mov
insb
fdivrl
insl
add
mov
outsl
enter
scas
cmp
jge
push
dec
out
or
sbb
add
pop
mov
aaa
mov
sbb
mov
push
jnp
loop
or
cmpsb
inc
out
iret
add
and
mov
imul
or
mov
adc
faddl
mov
push
xor
mov
fsubrl
xchg
mov
lret
adc
popa
jbe
adc
inc
sar
pushf
mov
mov
cmc
je
xchg
scas
shll
and
push
pop
mov
shrl
xlat
aad
xorl
scas
or
and
fsub
sarl
outsl
pop
pop
ja
push
push
dec
xor
pop
test
push
pop
jle
push
xorl
lods
mov
test
sbb
or
pushf
mov
jae
cmp
sti
sbb
sbb
push
cli
lcall
xchg
push
es
adc
test
mov
push
insl
mov
mov
dec
push
xor
test
cmpsl
fistpl
add
outsl
imulb
sbb
stc
gs
sahf
push
dec
cli
mov
js
addr16
clc
inc
jnp
jp
push
add
mov
loopne
cld
fsubrs
jo
lds
pushf
adc
xlat
popa
add
in
jne
xorl
adc
dec
push
xchg
push
xor
popf
decb
icebp
lret
xor
mov
push
rolb
sahf
push
dec
pop
movsb
inc
call
arpl
rcll
addl
push
fs
repz
sbb
dec
bound
or
mov
add
xchg
and
mov
mov
mov
jge
xchg
filds
and
mov
loop
pop
sbbb
fadd
xor
adc
repz
je
cmp
les
in
sti
pop
fldcw
dec
insb
pop
and
mov
or
movsb
add
sub
push
into
sub
lods
sub
bound
jmp
in
dec
pusha
xchg
call
insl
test
adc
inc
arpl
shlb
mov
rcl
add
testl
dec
bound
sub
popf
aas
push
add
dec
test
lea
mov
jne
push
jns
clc
inc
pop
dec
sub
ret
aas
lahf
ljmp
leave
inc
add
ja
stc
mov
pop
mov
jg
jg
push
mov
dec
lret
sub
movl
jecxz
and
push
rcrl
or
lods
and
adc
mov
mov
sahf
dec
xor
test
mov
divl
sub
mov
xchg
pop
movsb
shlb
loopne
sti
xlat
mov
xor
mov
mov
push
std
sub
ja
addr16
pop
std
ja
repz
outsb
es
out
outsl
data16
das
dec
sbb
pop
pushf
xor
inc
aas
mov
push
adc
and
fsubrs
mov
ficomps
sub
imul
gs
out
mov
pop
enter
xchg
dec
pop
and
fwait
mov
sbb
and
loopne
mov
out
loop
icebp
and
xchg
push
and
lods
jne
inc
cmovge
pop
ss
xchg
mov
mov
sub
ja
lods
mov
or
in
fiadds
inc
insb
aaa
fsub
fs
sbb
mov
ret
and
call
mov
ss
inc
sbb
mov
shl
sarb
mov
jl
orl
add
inc
fwait
or
leave
pop
cmp
or
dec
mov
sub
clc
mov
adc
jae
pop
mov
jo
shl
or
mov
add
and
jecxz
fstps
sub
stc
pop
push
jmp
pop
cmp
in
mov
push
jecxz
jmp
insl
ficompl
or
xchg
fidivl
pop
xchg
add
insl
js
jns
xchg
test
fwait
add
jmp
push
in
cmp
in
push
fcoms
dec
test
fdivr
fs
mov
ret
ret
pop
jmp
xchg
stos
sbb
arpl
sbb
cwtl
and
mov
jb
pop
out
out
fldt
adc
fimuls
loop
insb
add
mov
mov
and
dec
push
jae
mov
or
xchg
dec
pop
push
mov
sub
sbb
xchg
lcall
enter
ror
sbb
popa
lcall
inc
jp
insb
mov
and
aas
cld
mov
cmp
push
mov
sbb
push
loop
dec
ss
lds
shlb
rcr
sbb
es
lahf
out
in
mov
fstpt
repz
inc
fcmovne
insb
stos
dec
sub
and
xchg
mov
push
loope
lds
add
stos
pop
jge
push
cmp
cmpsl
lock
popf
push
jno
mov
inc
adc
adc
sbb
dec
cmp
xor
lcall
popa
pop
lock
mov
ret
ds
stc
lods
fistl
rol
push
mov
xor
mov
cltd
loope
xor
cs
test
mov
xchg
pushf
inc
jmp
in
add
sbb
call
lret
mov
adc
mov
cmpsl
pop
add
dec
sub
leave
js
inc
popa
into
nop
inc
je
dec
movsb
aaa
sbb
stos
movsb
ficomps
inc
pop
cmpps
adc
jecxz
pop
jmp
loop
scas
push
das
shll
mov
popf
xor
adc
lock
mov
push
lahf
ljmp
andb
outsl
and
xchg
mov
sub
divb
mov
push
stc
jl
repz
ja
fwait
movsl
pextrw
jmp
inc
xor
xor
cmpsb
adc
aas
cs
lcall
loopne
jb
xor
cltd
mov
mov
mov
icebp
es
mov
cs
and
mov
pop
pop
jb
pop
cmp
imul
fidivs
inc
pop
shlb
mov
sub
xor
clc
arpl
and
enter
or
scas
or
push
repz
pop
in
sbb
mov
lret
in
adc
inc
int3
pop
popa
mov
dec
xchg
lret
aas
gs
mov
mov
sub
lds
mov
inc
add
fistps
pop
mov
push
adc
dec
xor
out
pop
jae
cmp
out
mov
cmc
add
push
repz
psllq
scas
outsl
mov
iret
ret
es
cs
test
or
cmpsl
stos
pop
fsubs
adc
shlb
out
clc
mov
cmp
pusha
std
imul
shll
cmp
mov
dec
cmpsb
je
je
nop
jl
add
das
dec
lods
mov
inc
jle
push
lock
pop
gs
not
in
gs
clc
stos
ja
mov
inc
add
push
push
rorb
int
pop
push
pop
leave
or
adc
scas
test
enter
loopne
flds
or
pop
jb
int3
xchg
imul
jae
ljmp
or
push
out
inc
cld
or
dec
dec
xor
sub
shlb
pop
mov
and
sub
std
sti
sahf
ss
scas
int3
lods
fdivrp
xchg
fwait
mov
dec
test
test
rorb
sub
in
sub
aam
inc
enter
pushf
or
fdivl
xor
stos
or
jmp
insb
xor
hlt
push
pop
clc
sti
dec
lds
mov
jle
inc
sarb
mov
loopne
jmp
vminps
into
shrb
add
xchg
fwait
xchg
lret
add
pop
in
xchg
pusha
cmp
add
cmc
xchg
mov
cmp
leave
das
dec
fisubrs
xchg
enter
call
mov
loope
mov
lret
add
lret
pop
cmpsb
pop
das
xor
loope
cli
pop
or
jmp
cmpsl
dec
aam
fwait
loop
sbb
movsl
inc
jno
sub
and
adc
push
and
imul
popa
jp
dec
or
or
js
fwait
sar
leave
pop
js
in
mov
or
mov
sbb
cmp
adc
ss
insb
les
jb
test
sbb
out
in
or
mov
mov
jl
xor
sub
xchg
xchg
aas
pop
lock
ja
imul
test
popa
inc
daa
enter
sbb
mov
sets
movsl
incl
push
test
outsl
sub
cmpsl
mov
mov
cmp
shrd
jb
mov
dec
dec
cmc
jno
cmpsb
pushf
call
dec
aas
or
mov
mov
and
inc
sub
out
test
sbb
movsb
push
leave
xlat
cmp
jb
xchg
enter
enter
dec
push
std
mov
int3
xchg
sti
push
sub
daa
adc
pop
or
iret
data16
ss
xor
hlt
cmp
push
push
xor
add
push
push
jb
cmp
push
sub
adc
xor
xor
push
lret
dec
insb
mov
subl
cwtl
sbb
jbe
movsl
xchg
pop
cld
int
cli
adcl
mov
subl
cmp
dec
aam
mov
leave
pop
push
push
aaa
jecxz
sbbl
shrl
jb
loope
out
into
jp
sub
jb
fisubrs
iret
fmull
jns
sub
les
aad
scas
fs
pop
adc
movsb
inc
jp
aam
jnp
add
aas
in
mov
lret
icebp
xchg
push
xchg
cmpb
mov
sahf
xor
int3
fmull
roll
inc
and
jbe
loop
mov
push
fldl
push
jo
push
andl
adc
jp
imul
xchg
fcmovbe
cvtsi2sdl
fstp
mov
cmp
in
popf
add
ret
je
leave
xchg
aaa
sub
sub
aam
jno
sahf
and
es
xchg
fdivrl
sbb
or
mov
test
fbld
jb
sbb
mov
or
arpl
mov
xchg
and
xor
into
ret
out
push
stc
and
xchg
jns
pop
call
imul
stos
pop
arpl
test
repnz
pop
mov
test
je
stc
notl
or
loopne
mov
loop
xchg
cwtl
dec
dec
loopne
daa
hlt
std
fmull
sub
sub
js
jae
jns
mov
repz
ds
push
adc
sbbb
adc
add
mov
xchg
ret
movsb
jae
adc
pop
or
xchg
adc
add
sub
sbb
jae
arpl
xor
mov
test
cmp
xor
and
sbb
popf
add
repnz
mov
jns
jne
cmp
add
push
aam
fwait
rcll
adc
mov
arpl
jge
test
lcall
das
inc
mov
jle
fistpl
adcl
stos
call
sbb
or
sbb
mov
int3
dec
push
in
stos
ja
cwtl
mov
filds
lahf
jg
cmp
push
shll
lea
in
lret
das
pusha
loope
rcr
lods
loop
jp
clc
mov
bound
xor
mov
shl
je
dec
jnp
addr16
repz
jo
push
in
je
insl
pusha
mov
lret
sti
hlt
adc
sti
or
jmp
dec
pop
lods
jb
add
push
xchg
mulb
adc
or
daa
mov
inc
mov
adc
dec
gs
mov
sti
test
je
cmp
popa
mov
test
mov
dec
movsb
ljmp
mov
dec
out
push
pushl
cmpsb
jne
in
adc
pop
adc
mov
dec
call
pop
push
xchg
add
mov
mov
lods
popf
add
mov
rcrl
leave
mov
xor
inc
imul
lahf
fs
mov
jle
and
mov
bound
div
jecxz
test
fdiv
or
cmp
or
inc
int3
lds
mov
daa
test
jl
cwtl
pop
jp
aas
and
and
sti
aas
sahf
push
xor
leave
movsl
push
xchg
fistps
pop
aas
add
push
ret
leave
or
dec
out
mov
into
inc
orl
aas
cmp
mov
movsl
xchg
cmpsb
adc
in
stc
push
xor
nop
inc
scas
stos
mov
iret
inc
sbb
cli
mov
push
dec
sub
cmpl
in
inc
sbb
fimull
xchg
mov
mov
sub
fisubl
sub
push
xchg
mov
mov
ret
in
mov
test
subb
lock
imul
inc
movsl
dec
mov
ret
mov
lret
pop
sbb
and
inc
mov
loope
adc
orb
sub
mov
inc
jb
add
fcmovnbe
jp
xlat
and
lock
dec
nop
enter
mov
sahf
pop
mov
cmpl
sub
and
cltd
mov
mov
loopne
mov
stos
addr16
js
sarb
add
mov
loop
popa
cmp
or
or
cmp
pop
punpckldq
mov
or
cmc
pop
stos
cmc
idivb
inc
inc
push
cmc
call
dec
xor
xchg
std
cmp
pop
rcll
pop
subb
adcb
or
jmp
adc
int
jp
mov
dec
mov
mov
movb
cmp
xor
xor
leave
cwtl
stos
pop
daa
mov
dec
dec
pop
jmp
je
pop
push
inc
push
fildll
inc
jae
cmp
mov
or
xor
mov
push
clc
shll
xchg
cld
pop
pop
daa
mov
jno
out
sbb
xchg
ret
xchg
lods
push
test
lods
stc
fadd
pop
fcoml
lods
jnp
je
popa
pop
mov
push
pop
mov
insb
stos
inc
sub
repnz
sub
push
xor
sbb
lea
mov
les
adcl
pop
and
sub
hlt
dec
in
insl
or
sub
mov
lret
mov
fistl
and
lahf
stos
cmp
jo
and
bound
scas
adc
mov
jo
push
add
je
scas
mov
pop
insb
imul
inc
es
lret
push
xchg
sub
fiaddl
or
mov
fmuls
fcoml
jne
pop
test
stos
xor
add
jb
dec
stos
ds
mov
pop
je
xor
mov
fimuls
jge
sti
mov
pop
inc
mov
ds
pop
xchg
mov
mov
in
std
push
mov
xchg
loop
aas
and
pop
mov
fdivs
pop
dec
mov
pop
cwtl
bts
jo
mov
stc
les
movsb
or
lcall
mov
out
imul
mov
stc
sub
ror
fmuls
cwtl
and
adc
adc
outsb
and
adc
int
insb
pop
insl
lret
sti
out
mov
shlb
cltd
cmc
fisttps
jbe
mov
je
add
ss
pop
inc
jbe
test
xchg
ss
mov
es
out
mov
xchg
add
mov
mov
sbb
shll
repz
cmc
addr16
enter
call
cltd
aam
shrl
xchg
mov
xchg
jmp
outsb
cmpsl
mov
ja
xchg
mov
jnp
cmp
call
sub
sub
push
push
mov
add
and
xchg
or
mov
out
hlt
mov
rcrl
daa
cmp
lods
addl
cmp
mov
or
scas
aad
andb
push
rcl
cld
pop
or
sub
les
add
dec
pop
or
shrl
push
fldt
insl
frstor
fxch
jno
aad
pop
adc
lods
repnz
loop
cld
aam
cmp
adc
and
pusha
inc
outsb
xchg
xor
sub
push
xor
cmpsb
popf
fildl
cmp
pop
icebp
mov
push
push
nop
add
adc
lret
inc
lret
add
inc
sbb
sbb
adc
pop
mov
loopne
xlat
xchg
xchg
popa
call
and
jae
dec
outsb
adc
sbb
pop
inc
inc
imul
adc
insb
fsts
imul
in
pop
inc
lds
lret
xor
jecxz
jo
aas
push
pop
inc
nopl
stc
mov
adc
fistps
mov
jle
iret
stos
lcall
int
mov
lock
pop
mov
sbb
pushf
xor
mov
hlt
dec
into
incl
fldt
repnz
popa
test
xor
cli
aas
pusha
sub
inc
push
mov
xchg
into
mov
lea
sub
dec
xor
xchg
push
cmpl
mulb
adc
and
cli
jle
sahf
or
push
repnz
inc
gs
cli
cmp
adcb
ljmp
inc
push
bound
mov
hlt
dec
clc
sbb
pop
sbb
outsl
mov
stos
out
pop
add
in
leave
pusha
adc
mov
pop
fdivs
push
mov
fldcw
fisubrl
jecxz
cmpl
gs
sbb
inc
cs
xor
push
pushf
fwait
inc
mov
cmp
add
adc
and
add
outsl
enter
insb
mov
jnp
add
mov
cltd
sarb
out
in
rcrb
and
add
in
popa
jno
aam
dec
inc
iret
sti
jmp
popf
add
jmp
pop
lcall
and
mov
pop
fdivrs
inc
jecxz
and
test
icebp
shlb
push
enter
pushf
sub
add
sahf
and
lret
jnp
loop
loopnew
cli
mov
sub
test
addr16
xor
cmc
in
into
cmc
fldl
stos
push
cmp
cs
cmpb
or
sti
sbb
push
pop
pop
dec
jge
mov
sub
adc
xor
movsl
dec
sbb
scas
cltd
sub
xchg
dec
imul
sbb
nop
icebp
bound
mov
jp
cmp
int
loopne
or
data16
mov
cmc
xor
arpl
xor
pusha
push
xchg
das
mov
xchg
or
push
popf
cmp
jge
cmp
fwait
in
and
pop
mov
mov
and
je
xchg
cmpsl
lods
dec
pop
mov
mov
sti
daa
iret
jb
pop
mov
fmuls
mov
push
xchg
inc
rorb
xchg
leave
push
sbb
test
or
dec
jge
jge
xchg
pushl
testb
mov
mov
insb
lock
fisubl
lahf
pop
add
stos
aaa
mov
push
jne
inc
iret
mov
xlat
lds
mov
jmp
gs
dec
cmp
icebp
lcall
not
pop
fimull
and
loop
mov
sti
clc
shrb
in
mov
sbb
pop
mov
out
test
stos
adc
sbb
jnp
xchg
push
fs
js
sub
jno
sti
and
outsb
out
das
mov
lea
cmp
and
xchg
sub
pop
and
mov
push
adc
xor
movl
pop
mov
adc
jns
mov
lcall
ljmp
dec
xchg
jecxz
lods
scas
or
stc
ds
add
adc
mov
addr16
mov
mov
stc
mov
pop
pop
pop
xchg
xor
or
jbe
fdivs
test
jmp
dec
shrb
mov
pop
xchg
out
or
adc
pop
jns
push
push
in
pop
dec
dec
in
insb
add
inc
jbe
dec
loop
pop
jg
push
mov
popf
mov
out
mov
test
icebp
rolb
push
in
mov
ficoms
cmp
iret
mov
neg
pop
fisubrl
push
stos
inc
pop
jne
inc
ja
loope
jge
jns
cmp
lcall
jmp
into
adc
jnp
repnz
adc
popf
clc
inc
add
jae
add
adc
jae
scas
sbb
xchg
inc
hlt
sub
imul
adc
ljmp
nop
frndint
aas
xlat
add
mov
pushf
push
rol
ret
xor
inc
lret
adc
mov
xchg
loope
fistpll
push
cmpl
pop
mov
cli
jl
mov
in
out
ret
xlat
pop
movsb
lret
pop
lds
rorl
push
inc
inc
mov
push
int3
sti
imul
adc
jae
iret
xchg
sti
gs
into
mov
cmp
mov
popf
xor
loopne
fcomp
dec
adc
call
or
aas
pop
mov
adc
or
scas
adc
and
adc
loopne
cmc
gs
xchg
mov
jmp
loope
xchg
fldt
fstpt
es
jecxz
call
mov
lea
xorl
pop
pop
xor
inc
icebp
leave
jl
jle
sbb
mov
outsl
es
pop
xor
xlat
sarb
or
aaa
mov
sbb
xchg
push
adc
pop
sub
or
scas
adc
jp
rol
fs
icebp
arpl
fcomi
insb
shrb
iret
xchg
adc
enter
mov
les
jge
mov
jb
pusha
pop
dec
jo
mov
sbb
jl
ds
push
jb
cmc
inc
scas
sub
mov
imul
cmp
dec
fldl
cmp
push
int
sbb
inc
daa
cmp
cld
lret
adc
mov
sub
and
cmp
pop
inc
xchg
mov
idivb
jecxz
pop
pop
sub
xor
pop
movsb
xor
push
push
clc
or
dec
xchg
fildll
loop
inc
add
clc
aad
movsl
lds
cli
ds
and
andl
enter
jp
xor
lcall
movsl
cmpl
and
pop
popf
mov
frstor
fimuls
faddp
data16
lahf
dec
push
or
hlt
cmp
in
push
push
shlb
fdiv
out
jl
push
pop
ret
mov
lock
fnstcw
or
mov
iret
cmc
mov
stos
std
dec
or
out
cwtl
mov
jmp
sub
pop
xor
xchg
cmp
leave
lods
pop
or
test
enter
jb
inc
test
cmp
add
fld
movsb
mov
mov
and
and
adc
int
add
mov
xchg
mov
xchg
add
xor
pop
insb
dec
mov
sub
mov
neg
push
dec
inc
mov
xor
out
aaa
push
lea
int
loopne
xchg
xlat
sbb
jne
dec
ficoml
dec
scas
call
cmp
or
loop
push
or
jo
imul
sub
push
das
sub
cmpsl
xor
test
jmp
pop
xchg
repnz
add
cmc
insl
add
push
add
jns
icebp
xchg
inc
repz
dec
mov
jecxz
out
push
adc
xor
ljmp
add
lds
xlat
xlat
cwtl
cmp
lret
je
repnz
sub
lcall
jns
push
adc
insb
xchg
or
dec
ljmp
frstor
aas
out
jbe
loope
mov
insb
loope
leave
outsb
scas
pop
gs
fbstp
test
pop
pop
andl
cld
pop
cwtl
int
adc
std
push
fcomps
clc
repnz
js
fdivl
mov
ja
inc
inc
pop
movsb
hlt
icebp
pop
push
stos
sbb
mov
in
loope
mov
es
or
mov
movsl
inc
dec
jae
mov
outsl
xlat
imul
mov
xchg
xchg
sub
cli
mov
add
push
sbb
or
shr
lock
popf
shll
dec
or
int
cwtl
mov
sbb
lcall
mov
repz
jge
mov
fstps
or
je
fisubl
and
cmp
test
inc
push
sub
out
mov
add
xchg
xor
pop
jns
test
mov
adc
xchg
jp
pop
xor
les
notl
nop
loopne
test
in
or
roll
mov
jl
adc
mov
mov
ljmp
clc
divb
incb
into
gs
mov
mov
std
cmp
xchg
pop
sbb
dec
sbb
push
and
sub
and
lds
dec
mov
data16
sub
and
out
dec
inc
cld
repz
push
call
adc
lods
xor
ficomps
into
sbb
push
xor
sbb
or
in
and
jle
mov
psllq
fildl
push
or
mov
jl
test
stos
movl
pop
je
jge
iret
rcrl
in
and
add
scas
or
mov
inc
jae
xchg
lret
mov
adcb
cs
cmpsl
mov
pop
bound
mov
inc
inc
add
jns
cmove
push
xor
shlb
and
cmp
dec
jbe
add
jno
scas
xchg
mov
popa
mov
push
dec
outsl
mov
dec
leave
push
and
in
cmp
jnp
add
jne
aaa
fsubrs
mov
pop
fs
repnz
pop
push
dec
rclb
lds
shll
mov
mov
adc
sbb
mov
adc
insb
jno
and
cmp
dec
mov
jno
aaa
sbb
inc
push
call
pop
inc
inc
mov
pop
fiaddl
dec
cmp
fnstenv
dec
fsubs
repz
gs
and
jne
fildl
leave
fsubl
inc
sbb
fstpl
fists
jg
xchg
aas
sub
dec
add
or
or
jecxz
push
and
mov
mov
rclb
lods
lods
mov
lahf
das
aas
popf
stc
adc
nop
inc
out
subl
repz
or
pop
mov
or
jge
pop
xchg
sub
mov
imul
lods
loope
lcall
std
pop
jle
push
repnz
iret
cmp
mov
mov
sub
les
xchg
and
and
sub
dec
pushf
xchg
mov
ja
and
fistpll
lcall
bnd
ss
cli
jp
aas
decl
bnd
push
cltd
push
ja
cli
pop
inc
mov
loopne
push
xor
add
mov
pop
jne
outsl
mov
fisttpll
sahf
mov
scas
sbb
int3
lock
jmp
or
and
in
das
hlt
aaa
push
mov
mov
lods
pop
sub
mov
test
scas
sub
dec
lcall
or
sarl
cld
fdivl
out
jnp
stc
lea
pop
mov
xchg
cmp
ret
lcall
sub
xor
cwtl
lcall
imul
push
sahf
shll
mov
dec
mov
out
mov
dec
fimull
inc
ret
ljmp
jmp
mov
sbb
pop
mov
or
inc
push
out
nop
mov
pop
ljmp
popl
lock
daa
inc
push
stc
test
xor
jge
fistps
call
jmp
rcll
sbb
les
fmull
push
rclb
mov
insb
loope
mov
dec
fcom
sub
popl
lods
mov
movsl
roll
icebp
insb
stos
dec
and
add
and
mov
sbb
les
and
in
add
ret
pop
mov
insb
test
int3
xlat
imul
iret
aaa
or
les
dec
hlt
inc
daa
into
inc
fdivrs
data16
int3
pop
mov
ljmp
inc
sub
nop
stos
iret
jg
pop
push
lock
dec
mov
loopne
out
pop
mov
out
mov
mov
dec
imul
and
jo
iret
hlt
loopne
negb
sub
add
nop
pop
inc
inc
cli
sub
leave
add
add
sbb
mov
movsb
scas
sub
and
stos
dec
int
mov
mov
leave
in
and
jo
xchg
inc
push
ror
sub
dec
mov
sbb
sub
fsubr
stos
test
lea
out
mov
into
int3
push
sbb
in
imul
jl
sub
lcall
sbb
cmpl
jns
rcrl
iret
in
mov
jecxz
je
lods
stos
jns
fsubs
shrb
push
mov
mov
jno
loopne
sbb
sarl
or
dec
mov
cmp
mov
and
jg
int3
je
jl
pop
aas
out
addr16
fisttps
mov
cli
xchg
cld
cmpl
adc
roll
test
inc
movsl
aas
add
idivl
fnop
enter
popf
sub
imul
addr16
dec
mov
and
leave
push
dec
and
ja
out
pusha
adcb
jb
mov
sub
and
es
testl
cmp
daa
push
xchg
jae
subl
jmp
fiaddl
push
loope
lods
mov
fsubrp
mov
cltd
fnstcw
in
jge
rcrb
adc
push
js
add
mov
rcrb
cmpb
addb
pushf
scas
mov
filds
dec
out
clc
cmp
lcall
mov
sbb
outsl
cmp
pop
push
gs
mov
pop
xor
pop
fsubl
jae
pusha
dec
punpckhbw
push
test
nop
aas
scas
push
mov
add
filds
stc
xchg
pushf
mov
mul
xlat
jbe
jb
push
sti
and
pop
mov
push
repz
sbb
into
or
add
icebp
lods
and
cld
xor
add
sbb
test
out
in
pop
mov
stos
cs
pop
test
pop
adc
addl
test
sbb
aad
mov
cld
xchg
jp
lret
leave
xorl
rcr
cld
les
rcr
fisubrs
out
out
pusha
mov
inc
inc
and
gs
sub
aaa
scas
fistps
call
subl
lcall
and
mov
or
fucomi
inc
imul
push
inc
jb
ljmp
push
lret
insb
push
cmp
call
sub
pop
dec
ljmp
mov
nop
cmp
push
xor
into
loop
sub
lret
mov
sub
cmp
mov
fisubl
jge
je
cmpsb
add
imul
add
loopne
xor
push
loop
and
fs
mov
mov
pop
dec
xchg
les
andl
sub
push
fimull
loop
sub
cmp
sbb
imul
dec
not
jle
mov
cmpsl
pop
std
ret
clc
mov
pop
stos
cld
rcl
push
aam
mov
popa
xor
jbe
repz
push
and
xchg
loope
pop
aaa
enter
cmpsb
cmc
fwait
pop
inc
or
jecxz
loope
cld
xchg
pop
movsl
add
notl
xor
ret
pop
jnp
cmp
jno
negb
test
enter
mov
pusha
cli
lds
mov
mov
jg
test
pop
fcompl
xchg
push
xchg
rolb
hlt
jp
cltd
mov
js
jo
xor
es
int3
mul
lret
cli
and
mov
data16
jbe
fdivs
lock
mov
outsl
jle
lods
mov
mov
rclb
mulb
ffree
xlat
sbb
push
mov
cwtl
dec
or
test
in
mov
fs
mov
movsb
sti
lods
mov
aam
xchg
test
dec
sub
rclb
mov
and
pop
inc
add
pusha
test
cmc
cs
jecxz
xor
jle
ret
arpl
jg
fcompl
es
fisttps
ljmp
and
lahf
sbbb
aaa
sub
int
iret
test
mov
push
inc
aaa
fucom
ror
mov
ljmp
xchg
es
mov
sbb
mov
movsb
xchg
loopne
pushl
sub
cmpl
stos
sbb
stos
jns
and
fiaddl
mov
movsb
loopne
push
orl
fdivs
ljmp
jnp
or
lods
imul
lret
mov
inc
stos
lods
mov
xor
xchg
mov
pop
push
sbb
push
into
out
out
aad
ffreep
cmp
or
xor
out
xchg
insb
adc
jno
fsubp
lret
call
jnp
out
repz
and
clc
arpl
or
fdivrl
flds
test
sub
pop
jo
inc
dec
add
repnz
push
shll
sub
mov
test
pop
repnz
mov
and
pop
inc
fwait
lret
gs
sahf
stos
dec
addb
popf
lret
pop
decl
icebp
sbb
add
mov
jecxz
pop
lea
les
dec
xchg
test
or
inc
mov
scas
mov
jns
sahf
mov
mov
in
js
inc
stc
arpl
insb
mov
dec
icebp
cs
sti
pop
dec
cmpsb
jne
decb
mov
cmp
mov
lods
sbb
ja
shrb
dec
dec
mov
call
and
dec
xor
sub
pop
mov
in
xchg
mov
or
push
sbbb
inc
dec
fsubrl
and
shl
idivb
inc
insb
add
rolb
clc
movsl
roll
sbb
sub
int
push
adc
cmpsl
ljmp
mov
scas
mov
cmp
and
test
roll
adc
dec
add
sbb
es
pop
ss
ds
dec
test
pop
cld
clc
sub
sbb
sub
or
fistps
arpl
mov
pusha
jnp
mov
mov
lea
addr16
dec
push
mov
jmp
xor
fnsave
adc
out
mov
in
xor
xor
jmp
jmp
loop
pop
sub
mov
loope
add
ss
movsb
adc
jne
dec
test
pop
xor
dec
icebp
jo
je
mov
insl
insl
dec
lods
pop
adc
jp
mov
pop
push
or
daa
cmp
xchg
sub
jle
es
addb
mov
ja
stc
aad
adc
cmpsb
fmull
enter
xor
shrl
xchg
mov
hlt
in
sbb
sti
sbb
repz
fistpll
sti
rcll
mov
jcxz
in
leave
insb
xlat
mov
mov
lea
xor
push
aam
and
movsl
cmp
out
stos
movsl
push
sar
xchg
mov
daa
and
test
daa
loope
dec
cmp
xchg
adc
lea
mov
cmpsl
stc
mov
mov
lret
add
push
xor
cmp
push
test
mov
push
jns
xchg
mov
add
stos
dec
xor
inc
xchg
sahf
cli
pop
xchg
add
cmp
ds
fcoml
lret
int
insb
gs
fs
mov
push
mov
clc
daa
push
dec
sbb
mov
sub
adc
rorl
dec
or
shrb
push
insb
inc
push
hlt
in
push
xchg
or
js
pop
cmp
or
movsl
jl
cs
push
icebp
cmp
jge
xor
jo
or
push
cs
add
jp
sbb
sub
iret
lret
push
movsl
pop
sbb
rclb
or
out
ljmp
rcll
nop
rcrb
and
ds
jecxz
jae
pop
sub
sub
adc
fcmovne
mov
mov
xlat
jle
adc
and
bnd
jae
lods
jbe
outsb
xchg
mov
inc
cmp
mov
xor
push
mov
je
repnz
jns
fistpl
pop
loope
repz
xor
gs
or
test
addl
enter
jne
cs
shll
imul
mov
fcmovu
mov
xchg
xchg
incl
jmp
fs
mov
enter
push
fnstenv
and
lods
sbb
rol
cli
mov
daa
enter
frstor
or
push
out
push
lea
xor
cmp
lods
mov
push
icebp
or
mov
mov
rorb
cwtl
xchg
mov
cmpsl
out
outsl
bound
orl
lret
in
lahf
jbe
mov
xchg
push
insl
in
inc
or
sub
stos
enter
mov
inc
flds
out
and
rcr
sarb
sbb
mov
loop
ss
out
loop
xchg
sbb
mov
aaa
adc
cs
inc
push
add
add
out
nop
into
push
push
addl
mov
fsubrl
scas
out
test
std
cltd
insl
or
sub
fstl
or
push
lds
arpl
lea
cmp
std
jno
insb
aad
inc
movl
in
lds
je
jo
or
data16
mov
and
mov
adc
call
and
or
out
pop
pop
lock
repz
mov
sbb
mov
inc
inc
pop
daa
cmpsb
stos
nop
and
outsl
dec
sahf
jmp
jae
cmpsl
lods
push
sahf
cmpsl
xor
mov
sub
dec
cmpsb
jae
das
imul
pop
push
int
cmc
sub
leave
inc
mov
je
lock
push
das
movsb
or
dec
imul
popf
push
lret
out
cmpsl
sti
ss
int
clc
xchg
add
cmp
adcl
popf
push
and
jns
lret
xor
inc
xchg
out
rcrl
stc
xchg
xchg
int
out
sub
push
mov
fdivrl
push
hlt
scas
outsl
out
aad
pop
sbb
mov
ss
fildll
push
jb
pushf
sbb
scas
gs
inc
rcl
shlb
lods
xor
addb
cmp
sahf
sub
rclb
and
mov
scas
int3
xlat
and
gs
mov
stos
iret
in
xor
dec
jge
into
mov
stos
or
loop
mov
push
push
sbb
mov
or
fisttps
stos
push
mov
mov
lea
ret
xor
imul
loope
movb
cmp
test
mov
cmp
stc
push
loopne
es
adc
jns
scas
vmread
mov
outsl
pusha
or
call
mov
mov
mov
cmp
and
lcall
pop
std
and
leave
pushf
xchg
add
pop
iret
cltd
icebp
pop
mov
mov
dec
scas
inc
push
adc
mov
popf
rorb
jle
jo
jnp
adc
das
subl
inc
insl
push
lods
mov
arpl
shll
inc
arpl
arpl
sar
dec
in
clc
dec
lods
adc
fdivl
add
cmpsl
jne
pusha
cmp
adc
imul
sarb
cltd
scas
cs
or
xor
fcmovb
dec
pop
sbb
pop
movsl
jmp
jne
mov
pop
das
and
xlat
push
cmpsl
mov
out
pop
push
call
sbb
jo
push
mov
jmp
je
loope
mov
bound
outsl
jnp
ret
aad
rcrl
fildl
pop
dec
jb
mov
ficomps
or
rcl
das
in
fwait
lcall
dec
pop
pop
nop
out
ss
ss
and
inc
pop
nop
sub
mov
mov
cmp
bound
test
insb
outsb
in
sti
insl
outsl
mov
icebp
push
jo
imul
dec
dec
shl
shlb
sub
int3
incb
push
notb
or
out
xchg
je
fdivrl
test
and
xlat
sti
rorb
sub
push
movsl
int3
xlat
repz
sbb
mov
xor
push
adc
lea
mov
inc
jbe
pop
mov
sub
mov
sbb
sub
in
ret
lcall
mov
jl
fwait
scas
pop
int3
xor
jmp
mov
dec
leave
lea
sbb
shlb
pop
das
movsb
mov
pop
repz
sti
xchg
push
movsb
leave
inc
movsl
sbb
and
cmp
inc
sahf
jmp
add
push
push
xchg
arpl
push
adc
pop
mov
mov
notl
push
push
lock
int
sub
mov
xlat
rcrl
sbb
fwait
stos
or
mov
icebp
test
int
jge
xchg
xchg
ret
cltd
cld
pop
in
push
scas
xchg
stc
or
movsl
test
repz
fsubp
mov
mov
icebp
jecxz
mov
jp
sbb
fs
cmp
adc
test
pop
sub
adc
pop
insl
mov
fs
popf
enter
rcll
add
mov
stos
mov
cmp
dec
lea
jmp
fwait
inc
add
push
mov
pop
xchg
test
sahf
outsb
les
scas
mov
fcmovb
or
fs
xchg
xchg
jae
mov
push
push
in
jb
mov
ror
daa
lock
lahf
fldenv
fisttpll
imul
push
hlt
cmp
int
pop
xlat
fwait
loopne
shl
shlb
xor
pop
sub
and
add
dec
scas
movsl
add
cli
loopne
dec
popa
push
subl
jne
fwait
dec
call
mov
cmp
jae
sub
cmc
xor
aaa
aas
mov
xchg
push
int3
clc
pop
cmpsb
lea
test
mov
int3
cmpsl
ret
adc
pop
fistps
push
jnp
xchg
inc
mov
decl
dec
orl
xchg
inc
movsl
mov
and
xchg
cmp
das
xlat
push
mov
out
shll
icebp
or
fisubs
add
cmp
inc
xchg
pop
pop
jl
xchg
sub
cmp
or
pop
push
scas
xor
or
insb
jmp
xchg
xor
pop
jns
mov
in
rcll
push
andb
add
lds
and
xchg
repz
stos
in
gs
mov
mov
inc
jae
sahf
jb
xchg
pop
mov
jnp
and
adc
sub
mov
sbb
mov
loopne
xchg
pusha
xchg
sti
leave
xlat
cli
std
sahf
jl
jge
rorl
fdivl
fwait
dec
fdivrl
cmc
pusha
adc
xchg
je
pop
jmp
stc
sub
pop
rolb
pop
pop
ds
inc
aam
or
adc
inc
jecxz
mov
add
mov
repnz
popf
divb
les
mov
loope
sbb
pop
sti
adc
pusha
jno
movsl
mov
mov
xchg
push
jl
test
mov
js
cld
not
divb
or
mov
or
loope
loopne
wrmsr
xchg
scas
pop
mov
xor
push
std
pop
sub
inc
outsb
lret
push
jl
mov
inc
xor
and
jecxz
inc
rol
dec
lods
mov
repz
push
xchg
out
jbe
es
sahf
cs
lret
ficoml
and
pusha
jb
es
cmp
sub
xor
jbe
mov
enter
std
cmc
cmp
pop
dec
xchg
sbb
sub
scas
lods
add
push
xchg
push
aad
push
or
xor
mov
outsb
insl
in
fst
sbb
xchg
xor
pop
add
lahf
mov
push
dec
dec
dec
adc
hlt
jae
rsm
lock
mov
stos
jae
mov
add
aad
sub
test
ljmp
mov
add
rclb
or
sbb
or
roll
bound
test
push
fs
push
add
shrd
jle
push
add
outsl
arpl
stos
fsts
into
bound
adc
pop
adc
flds
adc
xor
add
scas
into
andl
jle
inc
andb
inc
fs
fwait
subb
gs
ljmp
pop
in
sbb
lret
sbb
in
rcr
and
mov
int3
xor
pop
push
push
outsb
xor
xor
mov
out
mov
push
dec
mov
fcoms
push
mov
sbb
das
push
aas
xchg
cltd
mov
cmp
jle
or
out
inc
loopne
jo
xor
movsb
arpl
jecxz
in
adc
idivb
mov
dec
or
xchg
lods
push
lock
jo
cmpsl
lods
scas
fwait
lcall
jae
aad
cmp
out
xchg
fdivp
mov
push
insl
push
pop
dec
dec
sbb
add
jl
mov
test
mov
pop
shrd
clc
pop
addr16
fs
push
repz
xor
shrb
fs
fisubrs
inc
inc
and
sbbl
call
mov
inc
std
pop
das
mov
xor
push
inc
mull
shrl
jge
mov
mov
xor
push
cltd
add
cmp
fs
loop
jne
pop
adc
mov
jns
or
and
sub
mov
adc
or
into
nop
imul
inc
mov
and
int
inc
mov
inc
sahf
cmpsl
adc
popw
cmp
daa
pushf
dec
cmp
jecxz
pop
call
insl
and
dec
cmp
and
push
lahf
icebp
cmp
mov
bound
sbb
mov
xchg
mov
pop
xor
cmp
or
sub
cmp
ljmp
mov
jmp
mov
pop
aas
ret
mov
daa
ss
adc
clc
jae
sub
xor
insb
not
sbb
daa
sbb
jns
inc
xor
mov
call
mov
xchg
loopne
or
repz
sbbl
jmp
mov
or
add
ds
mov
sub
int
fldcw
dec
test
mov
and
sub
pop
sbb
push
test
and
divl
push
sub
jb
cmp
pop
inc
mov
or
fidivrl
cmp
out
bound
dec
mov
cmp
rcll
dec
je
cmp
out
sub
mov
scas
mov
inc
test
mov
jae
mov
fbstp
sub
dec
xlat
outsb
lea
add
call
mov
xchg
inc
adc
movsb
pop
mov
iret
or
pushl
mull
lret
test
sbb
dec
push
or
pop
xor
push
jns
test
cmp
pop
xchg
cs
xor
sahf
push
adc
lock
mov
xchg
and
mov
sub
out
and
mov
jbe
sbb
adc
movsl
sbb
insb
jp
xchg
adc
mov
and
lahf
sub
mov
std
adc
les
in
loop
and
mov
ja
lahf
lods
rorb
sbb
addr16
mov
aam
and
mov
xchg
xacquire
jg
cmp
add
or
cld
push
sti
push
cmpsl
sbb
loope
cs
in
mov
mov
jnp
std
push
pop
lcall
pop
adc
cli
arpl
inc
es
fnsave
repnz
idiv
mov
inc
mov
add
pop
aas
movsb
mov
lret
stos
push
jbe
mov
cmp
dec
jle
mov
sbb
imul
adc
jge
mov
inc
mov
sbb
dec
xchg
pushf
int
and
jo
add
and
mov
popf
add
xchg
popf
inc
mov
xchg
lcall
repz
pop
mov
sbb
and
negl
scas
adc
push
or
lret
cmp
aad
pop
xlat
inc
push
add
test
addr16
scas
mov
cltd
fcmovnu
inc
cmp
sbb
add
add
test
inc
sbb
add
jg
andl
or
jno
cli
mov
not
mov
iret
xor
mov
jp
cwtl
cs
int
sub
xchg
xor
nop
movsb
dec
sbb
push
in
mov
ss
std
cltd
or
div
aam
mov
cmp
das
and
push
jp
push
jno
mov
xor
cltd
lock
and
idivl
add
adc
inc
mov
pop
push
or
out
out
inc
jns
ss
cmc
negl
mov
rorb
push
das
pusha
ret
jnp
cmp
clc
push
in
dec
sub
out
dec
inc
cli
and
push
sbb
push
cltd
sub
push
shlb
push
mov
push
in
es
fistps
xchg
cmp
sub
mov
or
add
cmpsb
cmp
adc
xor
pop
and
cwtl
jle
sbbl
std
je
sbb
cmpsb
fdivrs
adc
dec
jmp
cmp
add
jb
addb
lea
movsb
xchg
rcll
push
aad
js
lret
jecxz
push
cmc
loope
push
cs
mov
xchg
cmp
js
je
aaa
cltd
shlb
les
jno
pop
add
stos
jb
jg
push
xor
ds
lods
test
shll
adc
pushf
mov
adc
or
mov
lcall
lahf
jnp
and
mov
jns
ds
mov
pusha
dec
mov
mov
sbb
shlb
cmp
notb
mov
dec
xchg
movsl
fimull
les
lcall
add
cmp
and
cmc
adc
in
in
sub
pushf
sbb
mov
pop
ja
cmp
addl
jno
dec
rcrl
push
int3
adc
dec
sbb
call
xchg
or
addr16
pop
shrl
xor
add
sbb
cs
xor
aad
into
pop
arpl
sbb
push
lds
push
aad
dec
shll
and
inc
cmc
stos
push
outsb
mov
fldl
ljmp
scas
add
add
mov
pushf
leave
sahf
mov
adc
js
sub
sub
adc
xchg
add
rorl
fidivs
xor
cmp
icebp
test
shlb
push
loop
push
xchg
mov
mul
xchg
sbb
fstl
fs
or
fs
insb
popa
pop
out
sbb
xor
cltd
mov
fldenv
cltd
fwait
cmp
add
sbb
xchg
mov
adc
xor
stos
push
mov
out
push
mov
bound
loope
sbb
mov
xchg
fiaddl
sub
subb
mov
cli
ret
btr
push
fucom
jp
pop
mov
sti
push
arpl
cltd
fldt
adc
testl
cmp
xchg
sahf
mov
clc
in
push
pop
pusha
mov
sbb
push
push
cmp
and
scas
data16
into
jbe
les
loopne
cmpsl
ds
xchg
pop
sbb
adc
aad
rolb
sbb
ret
clc
rorl
dec
ss
mov
fildll
inc
mov
in
jle
push
mov
fistpl
or
xor
mov
pop
popf
mov
adc
xor
mov
cmp
adc
enter
mov
pop
jnp
sub
lods
imul
loop
enter
sbb
xchg
out
sbb
icebp
add
mov
mov
dec
xchg
add
das
paddw
stos
les
sub
test
orl
cmp
mov
inc
daa
ret
xorl
adc
es
dec
stos
inc
xor
pop
fisubrl
sbb
enter
push
mov
mov
jecxz
out
sub
push
mov
xchg
push
push
cs
inc
push
std
xchg
fisttps
dec
xorl
add
inc
cwtl
sub
lret
sbb
xor
aam
out
pop
insb
jne
lea
fimuls
pop
std
mov
loope
lock
loop
dec
cld
jnp
iret
mov
push
xor
dec
push
inc
mov
jne
sar
icebp
sarb
int3
or
add
in
xchg
aam
pop
mov
fsub
sbb
sub
mov
push
xchg
arpl
jno
int3
aad
rcll
je
or
xchg
xor
fidivl
icebp
ja
xchg
outsb
je
dec
jle
jmp
sti
sbb
inc
dec
xor
mov
adc
dec
movsl
jno
mov
xchg
mov
mov
mov
mov
sbb
std
mov
cli
mov
movsl
lds
push
cli
mov
lock
roll
push
lret
xchg
xor
push
mov
fistpll
sbb
repz
in
dec
fdivs
inc
jb
push
loope
fcmovbe
mov
xor
push
and
adc
mov
jmp
xor
jbe
repnz
inc
mov
arpl
or
call
jmp
mov
mov
jg
ss
jno
into
popf
mov
push
xor
loopne
adc
adc
lock
mov
push
in
movups
sub
cmpsb
push
mov
push
xchg
xchg
cli
mov
test
sbb
jle
push
ja
and
mov
inc
ljmp
and
mov
imul
push
popl
mov
sbb
repz
lods
hlt
jp
pop
xchg
lds
or
push
adc
and
cmp
ds
lahf
inc
adc
xchg
testb
sub
inc
xor
lods
ja
test
scas
enter
test
aad
setno
mov
nop
inc
imul
mov
mov
sub
mov
push
sbb
outsl
mov
outsb
push
inc
jp
cmp
mov
add
pop
nop
andl
push
mov
lock
pop
adc
jle
pop
adc
es
inc
or
and
fbld
in
or
insl
mov
loop
mov
loopne
jp
dec
cmpl
xor
mov
mov
adc
out
and
xchg
dec
mov
cltd
push
xor
inc
sub
xlat
jno
pusha
mov
jo
ret
push
int3
jmp
mov
cmc
in
dec
fwait
in
cwtl
out
pop
and
sub
sbbb
jge
imul
inc
push
xchg
mov
cs
adc
outsb
inc
xor
xor
xchg
gs
iret
enter
mov
test
dec
jp
aam
outsb
sbb
mov
out
add
mov
or
xchg
jb
fistpll
adc
fimull
push
mov
add
int
sti
rcll
mov
and
sub
je
or
xor
sti
lret
ss
sbb
jmp
mov
decb
ret
lock
and
mov
lcall
jge
fisttpll
mov
mov
mov
push
or
sbb
push
xor
and
sbb
add
test
push
imul
aam
out
or
xor
jne
jb
adc
into
push
lret
ljmp
mov
xchg
scas
jne
insb
lret
data16
jne
test
cli
jo
into
enter
js
jbe
ret
mov
decb
shll
adc
mov
sbb
stos
jo
hlt
aaa
int
jg
fwait
and
fldenv
dec
cmp
push
out
arpl
pushf
std
imul
pop
xor
inc
jp
loope
and
lea
mov
xor
sbb
and
stc
out
xlat
dec
mov
out
xorb
das
dec
ffree
sub
shr
sahf
test
pop
sub
sub
das
negb
ds
lods
cmp
xor
clc
add
inc
and
loop
mov
cmp
outsl
cmp
scas
xchg
dec
push
rorb
mov
cmpsb
jge
pop
mov
and
push
adc
sbb
jbe
aaa
xor
sbb
push
push
sbb
push
movsl
push
ja
xchg
out
dec
add
push
out
dec
inc
lcall
data16
cmp
or
aam
ss
and
in
dec
wbinvd
lcall
jge
fwait
jmp
fstpl
mov
inc
add
sub
pop
daa
adc
bnd
inc
lret
ja
daa
addr16
pop
xlat
and
jle
out
stos
inc
js
pop
adc
iret
imul
int
mov
dec
sbb
pusha
xchg
pop
test
mov
icebp
movsl
imul
cmp
or
or
mov
cltd
das
add
rcl
push
cmp
scas
add
movsl
cmp
mov
push
mov
jl
pop
fwait
daa
nop
stos
adcb
cmp
dec
aad
sbbl
stos
push
xchg
sbb
in
aas
xor
shll
pop
push
lods
inc
pushf
aas
ja
scas
lret
addr16
lea
aas
leave
movsb
push
cmp
and
call
dec
mov
mov
out
fisubs
lahf
orb
stos
xor
cmp
adc
inc
adc
adc
xchg
and
fwait
inc
sub
out
mov
mov
xor
call
and
daa
add
loop
jmp
aad
scas
cmc
inc
psraw
adc
xchg
inc
movsl
push
fdivrl
mov
dec
fdivrs
cmp
mov
or
ftst
pusha
jl
call
sarl
in
movsl
les
dec
ds
jle
jbe
fists
aaa
push
mov
sub
fsubl
es
mov
adc
mov
fcomps
pusha
into
or
add
cwtl
jp
enter
mov
sbb
repnz
insb
lods
loop
loope
mov
lods
outsl
enter
int
rcrb
bound
imul
xchg
mov
fdivs
dec
jp
outsb
jbe
je
es
lock
sbb
and
jno
mov
jns
add
xor
cmp
sub
dec
into
pop
lcall
adc
fdivr
mov
jg
pushf
ds
jae
movl
mov
mov
subb
xor
sbb
mull
cmp
mov
mov
scas
dec
pop
push
das
shlb
lcall
add
in
leave
movsl
addl
stos
mov
shll
call
repz
call
xchg
mov
push
cli
scas
int3
add
nop
sbb
jg
dec
pop
data16
lahf
inc
fiaddl
mov
sub
xchg
jge
cmp
repz
ja
std
testb
addr16
pop
fnstsw
and
inc
cmpsb
xchg
mov
pop
xchg
and
sarl
cmpsl
jo
or
add
mov
jp
inc
push
pushl
arpl
and
pop
mov
fwait
adc
dec
jl
mov
mov
pop
add
inc
lahf
jl
xor
push
out
jl
cmp
scas
and
outsl
mov
mov
pusha
insb
outsl
idiv
xchg
push
enter
cmpl
movsb
sbb
add
push
inc
js
sbb
loopne
rcrl
cld
push
dec
ljmp
pop
insl
pushf
aas
ja
inc
cld
mov
or
sub
mov
imul
adcl
dec
jo
and
shl
cli
xchg
test
out
or
push
dec
cltd
inc
xor
aad
sub
mov
mov
jbe
sarl
test
fld
push
out
adc
mov
out
push
jle
leave
in
push
fildl
clc
rcrl
push
or
sti
mov
cmp
mov
cmp
adc
add
fs
insl
into
stos
shll
bound
add
out
mov
es
dec
jb
out
mov
lea
insb
testl
ljmp
lahf
xor
out
xchg
inc
fwait
xor
push
addr16
sahf
cli
fsubrs
cmpsb
notb
sbb
add
fwait
inc
sbbb
loop
inc
mov
dec
push
lock
cmp
sti
jecxz
mov
cmc
rcrl
cmc
cltd
lcall
xor
push
ljmp
mov
xor
dec
or
in
jecxz
sbb
or
mov
push
lret
into
stc
or
call
jmp
pushf
jmp
scas
cmp
lcall
or
add
repz
mov
into
popf
mov
push
cs
jle
jne
inc
jo
pusha
ret
dec
jle
call
stos
lock
push
mov
xor
cwtl
es
adc
test
or
mov
ret
lret
int3
mov
sbb
out
out
int
or
cmp
adc
add
cs
mov
jg
stos
and
pop
movsb
insb
cld
lahf
aam
lds
ss
lods
outsl
in
vpandn
inc
push
sub
adc
mov
jl
xchg
sbb
mov
rcrb
es
lods
inc
cmpsl
mov
lcall
fwait
scas
xchg
ret
jb
scas
or
xchg
push
push
lahf
cld
or
adc
test
cmp
or
inc
jnp
lods
jnp
mov
popf
adc
cwtl
subl
sub
xorl
les
hlt
inc
mov
mov
mov
jns
add
fildl
mov
in
arpl
cmp
xchg
xor
xor
jg
mov
fnstcw
ret
daa
xor
xor
sbb
int3
jl
jae
stos
insl
lahf
add
scas
mov
roll
pop
push
mov
add
dec
enter
add
in
mov
lcall
mov
adc
add
add
push
cmp
ja
scas
sub
mov
mov
outsl
div
loop
rcll
mov
push
into
xor
add
sbb
sbb
adc
insl
mov
adc
loope
fsubr
jnp
and
insl
fbstp
insl
call
pop
push
xchg
add
imul
pop
inc
mov
je
cwtl
pop
xchg
sub
ret
ss
fsubp
jg
adc
and
inc
inc
fs
out
jp
repz
mov
or
push
cmp
sbb
xchg
iret
jno
push
xor
out
mov
mov
pop
sub
push
lods
js
icebp
pop
pop
outsl
mov
mov
jle
sbb
lds
add
or
sub
mov
xchg
imul
aaa
pop
iret
cwtl
outsb
es
xchg
push
xlat
cmp
jmp
ss
outsb
jmp
jae
insb
lret
incl
clc
mov
inc
je
push
mov
std
sbb
adc
aad
and
xchg
add
fsubl
sbbl
jge
xchg
xchg
out
divb
jle
insb
mov
and
sahf
mov
or
cmp
add
rclb
fsubrp
mov
test
pop
je
push
jbe
out
mov
pop
arpl
pop
out
lods
test
call
movsb
adc
jb
test
int3
inc
push
movsb
mov
jne
jle
inc
xchg
movsb
xchg
js
mov
into
out
push
lods
xchg
repz
pop
mov
repz
jo
or
subb
push
pop
std
subl
in
fistpll
test
rcrb
mov
stos
sbb
xchg
enter
stos
rol
leave
negl
add
cmpsb
adc
shl
cmp
pusha
outsl
daa
mov
push
shrl
or
loopne
inc
push
xor
cmc
push
lahf
xchg
enter
andb
loopne
sbb
xchg
ret
clc
mov
sbb
inc
in
das
inc
jae
cmp
add
adc
lds
cmpsb
adc
sbb
call
mov
cwtl
inc
in
push
fldcw
jle
xlat
xchg
loope
cli
push
mov
push
fistpll
mov
sahf
popa
and
sub
mov
sub
cmpsb
xor
xor
sbb
insl
mov
enter
mov
mov
lahf
add
aaa
adc
adc
shll
lret
hlt
subl
push
push
test
xchg
popf
dec
int3
push
or
movsl
mov
cmp
adcl
dec
or
sub
xlat
insb
in
ficoms
lret
fsincos
popa
iret
fiadds
mov
xchg
jl
fs
mov
push
or
xchg
inc
sar
cmp
int3
pop
xchg
test
out
inc
xchg
dec
jo
cmp
jp
sti
mov
or
pop
std
jns
jo
pop
or
lcall
lahf
icebp
dec
jne
or
stc
gs
dec
in
sub
or
decl
adc
cmp
ljmp
int
inc
rol
ds
xchg
push
ret
mov
addr16
jg
lret
xchg
dec
lahf
sbb
cmp
push
daa
fcmovu
pusha
cld
movsb
stos
mov
stos
push
enter
jae,pt
or
xchg
xlat
nop
dec
mov
es
stos
sbb
add
add
sub
stos
jg
dec
clc
push
jnp
dec
pop
bt
mov
aaa
push
gs
and
xor
ret
ja
and
ja
and
mov
jns
shrl
or
mov
add
sbb
and
xor
adc
adc
aad
inc
lahf
jnp
mov
rorl
sbb
and
aaa
mov
mov
outsb
cmp
add
mov
mov
in
popf
push
std
out
std
pop
cmpsb
arpl
push
mov
mov
sub
jno
sbb
repnz
sub
xor
iret
jne
add
rorb
sbb
scas
lcall
inc
sti
push
lods
dec
mov
iret
fdivrl
idivb
or
mov
ss
scas
std
sub
xchg
or
out
sbbl
sub
sbb
or
jne
pop
in
pop
mov
imul
pop
sti
and
mov
lcall
fcoms
cmpl
xchg
push
push
out
fsts
jmp
fidivs
cmp
and
or
xchg
movsl
mov
insl
xchg
lahf
mov
pusha
xchg
scas
hlt
paddq
dec
push
jecxz
xor
movzbl
outsb
adc
xor
in
jns
add
ss
adc
xchg
adcb
add
aaa
push
push
sbb
rorl
in
xor
gs
int
insl
mov
mov
add
push
push
and
sarb
mov
dec
dec
mov
jnp
pop
ficoms
push
loope
cmpsb
ss
je
mov
inc
stc
or
popf
mulb
les
cmp
jns
mov
mov
dec
movsb
lahf
in
shrb
sbb
int
adc
dec
mov
movsb
mov
adc
in
jg
outsb
loopne
lock
imul
xchg
cmp
mov
outsl
test
ja
les
cmc
adc
dec
xor
jb
in
jg
std
cmp
push
insb
xchg
stos
das
gs
cmp
sbb
stos
xchg
rcll
in
repnz
punpckhbw
xor
jp
mov
into
scas
jge
and
cwtl
adcb
gs
sub
popa
outsb
fnstcw
data16
sub
inc
add
movsl
mov
inc
les
xor
outsb
int
dec
dec
jae
jns
mov
aad
lret
out
dec
jg
adc
adc
cmp
enter
inc
std
and
mov
idiv
jbe
in
out
rcl
xchg
ffree
inc
fisubrl
xchg
repnz
or
imul
mov
lods
ret
pop
adc
or
mov
cmp
dec
dec
lods
loop
mov
loop
and
addr16
fdivs
jecxz
mov
mov
in
jbe
insb
out
into
addb
add
cmc
sbb
frstor
rcrl
inc
divb
mov
insb
bound
and
sub
pop
das
shll
fldl
mov
pop
popf
out
shlb
cmp
inc
movsl
lret
pop
aam
leave
es
andb
mov
xchg
add
int
in
pop
mov
and
mov
sahf
mov
inc
leave
sub
mov
into
dec
loop
push
jae
push
in
or
push
movsl
mov
xchg
cld
popa
movsl
loopne
dec
andl
jg
xchg
jno
push
jb
sarb
or
dec
fbld
add
daa
es
inc
js
fnstcw
pop
outsl
ret
sbb
mov
xchg
lcall
jne
sub
pushf
into
xchg
out
add
stos
into
popf
mov
movsb
mov
mov
and
das
push
std
pushw
pushf
xor
aaa
ljmp
push
cmp
cwtl
mov
in
shll
jg
sbbl
jge
jle
gs
outsl
adc
or
pop
out
andb
dec
push
and
lods
test
outsl
push
xorl
push
or
adc
sub
cmp
push
push
sbb
sub
je
rcrl
mov
ljmp
cs
test
mov
add
xlat
xor
aad
in
or
dec
clc
mov
je
das
inc
xor
outsb
add
xchg
push
jbe
lret
dec
mov
mov
outsl
dec
adc
dec
mov
gs
dec
in
int3
xchg
shr
call
scas
repnz
or
mov
sub
lret
jb
push
mov
repnz
push
mov
rcrb
sbb
loopne
outsb
cs
dec
push
jb
lea
pop
pop
inc
sbb
insl
test
mov
popf
inc
dec
vxorps
sub
clc
sub
ljmp
loopne
adc
cs
xor
arpl
leave
inc
dec
sti
fcomps
icebp
rcrb
pusha
and
out
sahf
add
and
mov
mov
lcall
push
mov
mov
mov
sub
fcompp
pop
sbb
xchg
stc
jecxz,pn
js
mulb
leave
or
shlb
cs
in
fwait
inc
testl
jns
cmp
inc
jle
pop
sub
in
stc
lret
mov
das
cmpsb
sbb
jns
mov
xor
or
add
add
or
aas
mov
and
insl
cmp
cmp
lea
or
test
int
cs
adc
jge
dec
sbb
adc
lcall
fcomps
dec
mov
cmp
ljmp
arpl
loop
std
in
lahf
jno
cltd
and
je
sub
add
call
mov
mov
rcrl
pop
pop
sub
mov
jmp
int3
nop
cmp
dec
jno
push
enter
push
xor
cli
xchg
sbb
and
jb
sbb
mov
dec
jp
push
push
out
sbb
xor
test
sub
jnp
sub
insb
xchg
push
cmpsb
nop
test
mov
jg
lock
lcall
or
push
and
mov
int
int3
outsb
ret
dec
je
out
inc
scas
cmc
adc
xor
out
dec
test
sti
pop
inc
xor
popa
es
es
mov
mov
pop
inc
jl
inc
movl
push
insb
dec
aaa
shlb
xorb
and
jl
int
push
xor
test
push
cmp
popl
push
mov
dec
int3
mov
lock
sbbl
outsl
mov
mov
das
mov
test
les
push
int3
movsb
mov
dec
jge
mov
stos
clc
inc
adc
js
daa
fcompl
fwait
lods
xor
xor
dec
movsb
inc
lods
ret
cmp
sub
cmp
rclb
sub
pop
mov
scas
hlt
or
or
mov
pop
xchg
daa
popa
enter
jb
and
pusha
xchg
and
test
xchg
mov
into
pop
mov
ja
or
inc
dec
adc
mov
movsb
test
cmp
inc
xor
mov
or
das
shll
insl
popa
push
loop
mov
test
pop
dec
jp
or
or
icebp
out
test
fbld
xor
imul
adc
mul
dec
cmp
inc
outsb
ficomps
sbb
mov
outsb
mov
in
popf
iret
xchg
lea
js
daa
fdivrs
pop
and
dec
xchg
adcl
cmp
mov
imul
mov
icebp
xchg
insl
push
enter
iret
clc
dec
shl
and
testb
out
fnop
cltd
mov
and
add
int
xchg
lfs
test
test
dec
sar
push
xor
jp
sbb
and
inc
mov
mov
xchg
rorb
sarb
fst
mov
fimuls
xchg
jmp
or
inc
and
inc
and
push
test
xchg
inc
push
in
mov
imul
sbb
iret
push
lock
xchg
xor
sub
addb
gs
shll
repnz
fcomps
jmp
fisttpl
mov
lods
lret
nop
jecxz
fwait
sbb
test
dec
popf
inc
mov
ja
dec
mov
aaa
xchg
xor
adc
addl
xchg
lds
pop
mov
inc
outsl
mov
pop
cmp
insb
push
push
inc
roll
jecxz
xchg
shlb
push
out
das
mov
mov
lret
ret
test
cmp
sub
pop
xor
xor
mov
sahf
sbb
std
repnz
sub
mov
dec
jge
jb
sbb
dec
repnz
lds
std
inc
pop
sti
add
cmp
mov
out
inc
mov
inc
mov
iret
xor
xorl
xchg
xlat
or
clc
fbld
cmp
mov
push
jbe
and
iret
mov
arpl
movsb
orb
mov
int
mov
cmp
add
lahf
xchg
das
pop
add
push
push
je
push
repnz
dec
scas
out
ds
out
out
sbb
ret
outsb
gs
sahf
inc
adc
jne
movsl
xchg
xor
and
xchg
sbbl
jno
test
push
and
mov
adc
ficompl
movsb
sub
xchg
xchg
out
fdivrp
icebp
inc
cltd
mov
std
das
lods
cld
addr16
mov
sub
mov
pop
cmp
mov
push
arpl
xchg
add
outsl
loop
or
xor
enter
repz
mov
scas
add
sahf
xchg
mov
xor
stos
and
xchg
aam
int
cmpsb
push
mov
arpl
push
mov
subb
sbb
pop
mov
xor
mov
sub
sbb
mov
imul
mov
inc
aaa
mov
inc
fsubl
loopne
shlb
pop
cmc
add
daa
xlat
into
cmpl
pop
mov
pop
xchg
xor
cmp
bound
mov
mov
leave
mov
gs
imul
or
popf
pop
adc
sbb
and
iret
gs
lock
xchg
bswap
enterw
adc
jne
out
xor
add
dec
jnp
jb
mov
out
jo
cwtl
sbb
hlt
fistpl
and
pop
pop
imul
rol
cmp
aas
cmp
je
xlat
mov
cli
fildl
lock
fldl
dec
jno
mov
mov
les
push
cmc
add
sub
in
in
popa
ret
je
mov
in
mov
faddp
mov
loopne
xchg
add
nop
mov
js
cmp
xchg
imul
stos
adc
push
mov
xchg
lret
fs
aad
cmpb
lods
sbb
lret
mov
adc
int
cmp
dec
cmp
das
sahf
xorl
mov
and
mov
scas
cmp
cwtl
or
inc
inc
xchg
nop
jns
subb
cmp
cmp
outsl
hlt
shl
adc
or
mov
jle
xor
cmp
mov
scas
js
aaa
fucom
add
sahf
and
sahf
cmpsb
jno
sub
bound
movsl
lcall
out
lahf
int
mov
loopw
loope
pop
cmpsl
mov
ficomps
push
sub
lret
int
mov
or
add
lret
jmp
push
dec
fs
mov
cs
es
xchg
sbb
cmp
mov
and
dec
leave
fstl
push
pop
push
rcrb
arpl
mov
xor
movsl
scas
sub
das
fcmovb
or
cltd
pop
sub
jecxz
ffree
aaa
cmp
aas
add
cmpsb
push
cwtl
test
sub
jg
xor
jp
sub
mov
xor
mov
fistl
movsb
test
or
or
jl
into
fs
mov
mov
out
in
and
or
mov
mov
jmp
xor
add
sti
inc
pop
sub
jmp
andl
loopne
int
push
hlt
push
mov
jg
sbb
pusha
dec
mov
daa
out
mov
inc
jecxz
mov
jo
aaa
in
testl
popa
addr16
insl
xchg
cmp
adc
or
icebp
cmc
mov
xor
cli
clc
xor
jmp
jno
jne
pop
jo
cmc
jge
lock
sahf
in
or
out
xchg
popf
xchg
mov
in
inc
je
out
test
scas
pop
dec
and
xchg
inc
dec
addr16
inc
mov
sahf
xor
sarb
nop
mov
aam
sbb
xchg
xor
mov
pop
push
push
test
push
inc
pop
pop
or
sub
push
cltd
ljmp
sbb
mov
in
js
sub
shr
or
sti
sar
or
enter
inc
gs
repz
adc
jns
push
iret
mov
mov
push
ret
out
adc
mov
test
pop
in
loop
add
jbe
pusha
popf
pop
arpl
mov
notl
out
scas
shlb
xor
fsubl
popf
add
or
es
stos
jmp
inc
xorb
sbb
xchg
fidivrl
mov
aaa
adc
pusha
jg
in
aad
mov
xor
fnstsw
scas
pop
ljmp
cmc
nop
dec
mov
inc
divl
popa
shll
sahf
decl
icebp
xchg
mov
mov
push
cmp
and
jle
mov
inc
out
mov
sub
data16
lret
mov
mov
sbb
mov
ret
outsl
and
rcrl
sub
cli
xor
sbb
out
int
mov
adcb
mov
ljmp
scas
decb
movsb
hlt
sub
movsb
pop
xor
push
ss
shlb
fldt
adc
int
das
mov
and
lock
lret
jns
mov
aad
dec
xchg
pop
ds
inc
fwait
sbb
xchg
mov
ljmp
inc
mov
js
jns
int
les
aad
call
mov
lret
arpl
mov
cs
xchg
dec
pop
pop
inc
ret
in
repnz
adc
call
in
cmpsl
das
sahf
fiadds
test
mov
mov
inc
mov
dec
mov
test
dec
mov
mov
xor
mov
or
ret
gs
or
lods
dec
xchg
jp
jge
das
mov
cmp
hlt
inc
adc
ret
adc
add
sar
test
sub
rorb
or
sub
inc
mov
pop
dec
ret
dec
mov
and
sbb
mov
pusha
in
outsl
dec
mov
ljmp
mov
mov
inc
cs
mov
sti
clc
jecxz
xchg
popf
xchg
lods
mov
nop
shll
sub
mov
push
pushf
dec
lea
dec
cmp
mov
mov
lock
sti
lahf
mov
popa
popa
sub
mov
outsl
arpl
jae
mov
xor
or
clc
ljmp
jnp
repz
dec
mov
jle
sahf
cmp
push
mov
gs
mov
orl
stos
jg
dec
ja
mov
mov
push
inc
adc
les
dec
call
jbe
mov
shr
js
inc
in
inc
xchg
stos
push
test
rcrl
and
adc
jo
and
mov
aad
out
cmp
out
adc
fmulp
stc
sub
aaa
mov
addr16
push
sbb
push
jl
lods
lea
and
ja
ds
jnp
and
icebp
jo
sahf
jp
outsb
inc
in
cmp
push
lods
into
outsl
inc
cmp
test
push
jb
std
jp
vmovd
xor
lods
mov
dec
repnz
mov
sub
negb
cmp
les
jb
sub
aad
sti
negl
cmp
xchg
movnti
push
dec
mov
cltd
mov
movsl
ds
and
and
les
loopne
clc
inc
test
sub
mov
lret
dec
int3
pop
add
push
aas
fldenv
add
jnp
sub
in
mov
cltd
jge
mov
scas
scas
js
jbe
fildl
xorb
add
mov
repz
mov
mov
jno
mulb
out
pop
andl
dec
orb
out
loope
mov
dec
pop
sti
pop
push
lret
xor
sbb
fucom
pusha
xor
shlb
pop
pop
movl
jg
std
mov
cmc
popa
mov
add
test
push
add
fwait
sub
inc
arpl
cs
cmp
ss
insb
lahf
aas
cmp
fwait
add
test
mov
dec
mov
inc
mov
mov
repz
dec
rcrl
jp
sbb
push
das
add
pushf
jg
mov
imul
lods
or
sbb
sub
push
push
or
push
cld
dec
shr
sbb
and
fwait
cmp
repnz
fistpl
xor
jns
push
pop
xor
inc
mov
or
dec
sub
pop
sbb
sbb
mov
loop
shrl
mov
sbb
das
rcrb
popf
jg
outsb
sbb
mov
leave
push
psubsw
jae
xor
fiadds
cmpsl
mulb
insb
pop
add
in
adc
pop
xchg
rcrb
pop
ss
inc
pop
inc
popf
xor
std
jp
push
jg
outsb
adc
or
mov
and
pop
or
stos
imul
sti
cwtl
cmp
push
aaa
sbb
test
mov
iret
xchg
pop
sbb
rcll
pop
mov
dec
pop
mov
inc
ljmp
cmpsb
daa
lea
ljmp
push
shll
lods
add
popl
loopne
ss
js
cmpsb
lret
adc
pop
add
lret
out
loope
nop
push
shrl
mov
js
mov
xchg
mov
hlt
jge
addr16
adc
sbb
xchg
push
insb
repnz
das
inc
pop
mov
jno
shrl
leave
ret
xchg
addb
loope
mov
jecxz
int3
jmp
push
sbb
fs
setg
pop
or
shlb
mov
xor
out
orb
xor
xor
pop
gs
push
filds
sbb
add
jnp
xchg
lahf
test
movb
jle
loope
xchg
ljmp
ja
rorl
jb
pop
adc
sub
fmul
mov
mov
jp
inc
int
cmp
cld
mov
test
jmp
iret
sti
fbld
jnp
das
cmpsb
lods
inc
mov
ljmp
pop
push
btr
and
push
sti
outsl
leave
push
andl
xchg
and
dec
mov
pop
or
call
sub
dec
call
xor
out
pop
cs
pop
push
push
lea
gs
and
push
and
mov
js
lea
movsb
and
jno
iret
sbb
and
jo
jbe
push
std
sub
xor
int
aaa
add
das
cs
and
jge
mov
mov
in
sub
mov
test
iret
or
inc
pushf
movsl
xchg
icebp
fidivrs
std
push
lcall
mov
fsts
stc
sub
sahf
mov
pop
push
in
mov
or
nop
add
stos
iret
sahf
cmovns
mov
movsl
jmp
jns
rorl
rcrl
or
leave
push
mov
cmp
fsubrs
nop
dec
rclb
add
adcb
pop
test
sbb
mov
in
xchg
add
dec
pop
mov
clc
sub
push
popf
stos
sar
dec
cmp
push
sahf
cmp
repz
lods
in
cltd
scas
dec
int3
or
repz
ss
push
outsb
mov
les
out
sbb
jmp
xchg
dec
bound
push
lods
cmpl
mov
mov
test
and
and
mov
mov
xor
shrb
shlb
mov
add
xor
mov
jo
inc
pop
jne
inc
aad
sbb
jo
adc
shll
cmpsb
pop
in
mov
mov
imul
stos
push
repz
jl
leave
test
jp
jl
push
adc
clc
mov
dec
sub
xor
xlat
cmpb
lods
adc
ret
mov
xor
out
push
sbb
push
lds
or
popf
pop
das
add
mov
cmp
ja
jp
push
test
fstp
xchg
jg
or
leave
inc
cld
sti
cmp
dec
pop
pusha
push
push
je
jmp
dec
pushf
fdivr
xchg
jmp
mov
jmp
xchg
lea
push
clc
hlt
scas
in
cmp
cmpsl
pop
pop
or
test
push
sub
push
mov
sub
clc
mov
cmpsb
in
sti
jecxz
aaa
icebp
mov
das
cli
ja
lcall
push
cmpsl
or
outsb
cld
dec
xorb
lods
sbb
xor
gs
or
js
lahf
insb
sbb
pop
xor
pop
mov
roll
ja
pop
imul
sahf
and
push
imul
aas
adc
rclb
cltd
mov
mov
sti
adc
sahf
push
test
mov
fidivs
out
pop
aad
lcall
sub
clc
lea
out
lahf
mov
movsl
int3
xchg
data16
mov
sbb
stos
jg
stos
mov
push
movsl
mov
mov
cs
leave
mov
fsubp
int
loop
lahf
aam
xor
call
xor
dec
inc
hlt
fwait
add
fdivs
jns
mov
mov
repz
mov
pop
imul
das
nop
loope
mov
loop
dec
push
lret
test
push
hlt
jo
sub
push
call
inc
add
or
push
int3
cmp
pop
je
movsb
rorl
sahf
pop
jo
in
js
lds
inc
stos
pop
fcoml
push
scas
imul
mov
inc
push
fsubr
sbbb
pop
loope
mov
leave
mov
push
sub
rcl
cmp
mov
mov
lods
popa
nop
inc
pop
shlb
push
jle
movsl
leave
lock
sub
push
rcrb
setnp
push
jns
pop
cs
lea
clts
popf
leave
scas
loope
pop
push
das
mov
clc
outsl
mov
daa
testb
jle
cmp
sbb
jae
mov
in
test
sub
jbe
dec
push
popf
xor
xchg
xchg
and
mov
add
nop
inc
das
mov
sub
hlt
lret
in
and
pop
dec
sub
pop
cmp
inc
pop
sbb
xchg
imul
push
jge
push
xor
jle
aas
adc
mov
in
sbb
test
mov
lods
pop
cmc
inc
jp
cmp
out
sub
sbbl
in
and
pop
ljmp
ds
out
sbb
add
inc
data16
cmc
sahf
into
ret
sbb
data16
cmp
fmulp
xor
es
scas
mov
fcoms
mov
cmp
cmpsl
add
sub
push
mov
aam
jbe
stos
subb
shll
jne
cmp
mov
and
xchg
arpl
xchg
sbb
sahf
or
jae
xlat
rclb
or
push
and
add
out
cmp
stc
call
fcomp
movsb
scas
jbe
mov
add
push
add
or
stos
sahf
das
xor
mov
sbb
mov
add
push
inc
adc
dec
or
xchg
cltd
lcall
add
fcmovu
xor
dec
jl
cmpsb
xor
xchg
jmp
dec
sbb
shll
aam
push
pop
pop
int
imulb
bound
rorb
int
xchg
jo
jg
cld
popf
cmpsb
movsl
and
jbe
divb
cltd
add
lret
int3
jmp
dec
xorl
pop
jnp
scas
push
repz
pop
jb
xlat
xor
and
scas
scas
dec
xchg
popf
sub
xchg
and
mov
js
and
jae
bound
sub
jb
lods
js
xor
dec
adc
or
pop
xchg
push
push
and
stos
clc
mov
out
cmpsl
xor
xor
outsl
xorb
cmp
daa
repnz
xchg
pop
into
stos
push
out
scas
adc
mov
mov
ret
mov
aad
sub
cmp
cmp
cs
rorl
add
aad
mov
jae
mov
aad
dec
add
rcrl
sbb
jae
shrl
dec
mov
jmp
std
xchg
add
lods
ficoml
pop
adc
jg
sbb
fistps
jae
and
xchg
mov
xor
loop
adc
lcall
mov
dec
adc
xchg
add
adc
cwtl
clc
xor
nop
movsb
aam
push
aad
sbb
adc
iret
les
push
jo
or
daa
xor
pop
iret
dec
dec
jae
adc
les
pop
ror
sbb
iret
jnp
fwait
daa
jo
int3
ljmp
out
mov
xchg
popa
mov
mov
fwait
cmp
and
ds
out
mov
cmp
xchg
or
and
fldt
mov
into
mov
sbb
mov
pop
xor
adc
sub
or
filds
cmp
mov
pushf
cld
fnstsw
scas
xchg
or
call
mov
insl
cmp
out
jmp
adc
push
rclb
lcall
sbb
mov
or
test
cmp
cltd
test
ret
or
scas
cwtl
mov
dec
fmull
dec
mov
out
test
adc
adc
aas
imul
adc
push
mov
out
cmpsl
scas
mov
or
dec
or
xor
insl
pop
shlb
pop
cmp
push
xchg
cmpsl
out
sub
imul
xor
popa
adc
fdivl
xchg
sti
cli
jecxz
xchg
lods
pop
sahf
shr
add
int
les
jp
inc
pusha
lcall
cwtl
push
scas
lods
cmpsl
cvtps2pi
hlt
mov
and
ds
jnp
dec
push
mov
adc
mov
mov
mov
lock
push
and
push
fs
adc
mov
fs
jp
and
pop
jb
mov
sub
sbb
lahf
in
shlb
jge
xlat
inc
mov
inc
xor
cltd
or
sbb
xor
push
cli
mov
daa
inc
jecxz
mov
and
js
cmp
loop
mov
cwtl
mov
test
mov
sub
loop
lea
test
outsl
arpl
mov
jp
sub
dec
loopne
dec
jl
mov
dec
xor
sahf
sti
outsl
sahf
insl
sbb
sti
xchg
orb
push
xor
rdmsr
mov
rolb
das
push
jnp
pop
stc
sbb
movsb
or
leave
jae
mov
or
cmpsb
add
hlt
scas
mov
and
idiv
divl
xchg
xor
movsb
lds
andl
push
adc
fwait
add
popf
mov
andb
call
aam
xlat
fsubr
inc
hlt
and
ljmp
jmp
inc
mov
mov
jl
ja
rol
lahf
push
add
inc
adc
and
imul
fisubs
xor
jne
dec
inc
and
in
stos
js
scas
jmp
test
in
pop
in
push
xchg
mov
ja
movsl
cmpsl
insb
inc
aaa
inc
xchg
test
cmc
jnp
push
jae
sbb
out
jecxz
cmp
xor
xchg
int3
cli
xlat
xor
xchg
sbb
aad
add
xor
add
xchg
cmpsb
mov
cwtl
rclb
xchg
inc
and
aam
pop
cmp
jp
jb
ja
xor
mov
inc
adc
je
xchg
add
clc
sbb
hlt
push
push
cltd
dec
mov
or
scas
xchg
cmp
push
mov
adc
addr16
orb
sub
dec
out
movl
sbb
into
mov
xor
pop
sbb
testb
mov
pushf
xchg
pop
loop
popf
out
ja
bound
pop
push
movsl
xchg
pop
jo
mov
pop
iret
sub
mov
imul
sub
jp
lods
or
std
pop
outsb
in
scas
jnp,pn
xchg
jns
jle
std
mov
fbstp
dec
dec
inc
rol
mov
and
or
mov
sub
in
gs
mov
jb
fldlg2
push
stos
cmp
les
stc
cmp
mov
pop
cwtl
out
pop
push
out
pop
rcll
fwait
and
sbb
mov
iret
inc
pop
sub
shrl
loopne
jae
fs
adc
movsl
sarl
int
in
xchg
sbb
lock
hlt
sbb
hlt
enter
jbe
add
and
iret
ds
mov
hlt
popa
rdmsr
push
stos
aas
loop
fs
stos
aam
mov
mov
jno
insb
sub
ds
mov
cmpl
inc
jmp
mov
inc
dec
loopne
es
fdivr
bound
je
lahf
cli
sbb
bound
mov
mov
cmpsl
pop
insl
sbb
addr16
imul
inc
adc
in
les
inc
xchg
in
in
sbb
xor
leave
jno
jnp
adc
mov
cmp
shrb
xorl
imul
call
lcall
xchg
movsb
lds
sbb
pop
nop
int3
call
pop
dec
pop
scas
xor
push
xor
push
xchg
pop
gs
adc
pop
adc
das
or
aad
addb
arpl
pushf
mov
mov
cli
cli
cmp
fstl
mov
lock
jg
adc
sbb
rorl
imulb
repz
push
pusha
mov
frstor
xchg
jp
xor
in
or
add
andl
or
pushf
dec
sub
ljmp
inc
stc
mov
cmpsl
lods
shrl
pop
daa
mov
cmp
cmp
xchg
adc
xchg
xchg
adc
test
sti
jne
std
mov
cs
inc
jnp
add
xchg
mov
mov
lret
pop
xchg
test
rcrb
adc
xchg
in
push
int3
add
xchg
cli
addl
and
fs
fsubrl
dec
popa
pusha
jge
in
aam
mull
flds
jae
ret
adc
insb
sbb
jns
dec
outsb
aas
jl
int3
push
xlat
jl
test
dec
add
stos
sbb
or
add
dec
cmc
popa
push
int
mov
ds
cmp
mov
out
fwait
icebp
push
test
stos
cmc
push
fsts
sbb
mov
or
mov
push
test
sbb
inc
icebp
cmp
pusha
inc
jge
and
fmull
jne
icebp
add
adc
pop
shll
mov
mov
cmp
int
xchg
add
leave
rclb
fwait
out
clc
aad
jge
add
xchg
and
mov
into
dec
loope
pusha
cmpsl
or
js
jno
insb
push
mov
xor
fst
outsl
or
hlt
push
mov
fwait
sbb
dec
jo
sbb
call
in
dec
mov
rolb
add
jb
hlt
data16
nop
dec
jmp
stos
pushf
or
je
mov
loopne
jp
mov
or
push
push
sub
adc
pop
or
orb
cld
js
mov
inc
adc
stos
and
push
xor
loope
pusha
sbb
inc
aas
cmp
adc
es
pop
mov
movsb
mov
rolb
cmp
mov
lock
or
lods
add
and
mov
movsb
mov
inc
sbb
jge
mov
dec
pushf
dec
push
aad
pop
into
sub
mov
aad
jne
loopne
mov
popf
call
jle
xchg
das
outsl
lds
mov
cmp
fsubrs
jge
nop
add
jp
add
fldcw
dec
or
push
cltd
test
sarb
add
andb
call
dec
adc
test
and
and
sub
in
in
icebp
inc
mov
xchg
cmp
je
add
mov
lock
sub
push
repnz
sti
and
movsb
adc
nop
fs
dec
out
fwait
sub
ret
sub
lea
sub
out
push
in
sti
xchg
js
mov
sbb
inc
inc
out
ljmp
cmpsl
data16
fidivl
add
insb
es
cmpsb
or
pusha
stos
push
mov
and
jae
mov
clc
mov
loop
dec
hlt
stc
and
and
pop
cwtl
pop
dec
dec
lahf
add
insl
out
push
popf
sub
xlat
fiadds
lret
add
inc
cmp
push
hlt
adc
cli
lahf
sbb
inc
cld
mov
adc
xchg
lret
and
mov
cmp
add
mov
mov
or
pop
repz
dec
pop
rorl
and
dec
shlb
lock
leave
cmpsb
aaa
stos
das
stc
or
or
dec
pop
xchg
stos
or
xchg
jnp
out
xchg
inc
lock
xor
ss
ficoms
and
jb
in
repnz
imul
ljmp
loop
test
pop
cmp
mov
ret
gs
movsb
fisubrs
test
cld
cs
pop
das
mov
and
cmpsb
cltd
je
mov
pop
fidivl
mov
pop
xchg
call
ss
dec
mov
push
mov
fiaddl
fsubrs
scas
inc
je
cwtl
mov
add
mov
rcr
int
mov
js
push
sbb
lahf
imul
sbb
xlat
push
lea
add
jg
adc
movsl
gs
movsl
pusha
jp
mov
loope
out
xchg
leave
mov
sahf
jns
jns
pop
inc
or
lods
fs
pop
ds
test
jp
jbe
or
test
fs
fiadds
mov
das
bound
cmpsb
out
outsb
mov
ljmp
insl
gs
mov
mov
push
outsl
clc
popa
xlat
pop
and
jle
add
mov
jno
imul
loop
xor
iret
pop
xlat
dec
or
rcl
push
mov
aaa
dec
pop
jecxz
xchg
mov
pop
mov
popaw
mov
ficomps
adc
push
jbe
cmp
push
sub
ret
popf
pushw
pop
iret
andb
dec
lds
add
pusha
call
adc
outsl
movsb
lea
push
fsubrs
stc
lfs
dec
inc
jo
inc
sub
or
lcall
lcall
rcl
xchg
dec
mov
sbb
and
and
imul
push
fmull
add
push
dec
mov
mov
sub
lret
jecxz
cmp
fdivr
cmc
ret
pop
cmp
cmp
and
and
pushf
mov
andb
mov
add
xchg
std
xchg
xchg
fsts
addb
data16
jne
push
or
in
rorb
jecxz
and
jno
xor
cwtl
into
push
jbe
pop
add
jnp
jo
mov
push
xor
adcb
adc
add
cmp
cmp
imul
dec
cmp
bnd
mov
ss
mov
bound
out
daa
xchg
test
sti
clc
cmp
xchg
jbe
mov
adc
rolb
push
into
std
mov
cmpsb
cmp
sbb
and
lahf
mov
sbb
or
icebp
mov
insb
imul
jbe
push
cmpsb
jmp
cmp
ss
jne
pop
push
push
dec
push
xor
mov
add
mov
mov
mov
lds
inc
jns
outsb
je
sbb
xor
in
stos
mov
dec
mov
push
stc
subl
rcrl
loop
pop
inc
shll
mov
mov
fs
inc
arpl
sarb
jecxz
lock
shrb
pop
pop
mov
mov
cmp
jecxz
and
xor
inc
push
scas
mov
add
cli
pop
pop
adcb
popa
es
enter
sbb
clc
xchg
jmp
jnp
add
jns
aad
dec
xchg
jae
sbb
adc
out
and
push
fcmovne
hlt
jle
sbb
hlt
mov
sbb
inc
cli
bound
ja
bound
jl
sub
cwtl
dec
stos
xor
outsl
out
cmc
xlat
iret
or
scas
outsl
mov
push
pop
icebp
je
pop
mov
out
mov
pusha
push
or
negl
and
fwait
mov
lods
ret
adc
xchg
jmp
push
jecxz
cmp
cli
mov
es
or
aad
dec
movsl
inc
add
push
cmp
mov
incb
push
lcall
and
mov
sub
mov
sbb
out
sbb
cmp
cmpsl
mov
stos
mov
adc
or
push
sarb
lds
jae
mov
inc
test
ljmp
mov
push
xchg
cwtl
ljmp
lret
xchg
pop
sub
pop
add
sbb
xchg
cmp
dec
adc
mov
repnz
fmuls
adc
inc
jnp
xor
das
mov
pop
ret
inc
arpl
shufps
in
out
pop
ficompl
bound
or
xchg
gs
shlb
das
cmc
push
arpl
int3
popa
and
rcr
sahf
das
es
add
xchg
in
mov
or
sub
into
mov
pop
clc
jmp
out
mov
test
imull
mov
hlt
push
int
js
add
vsqrtss
mov
xor
std
pop
mov
into
aaa
ficompl
xchg
cli
dec
fsubr
int3
and
outsb
call
mov
rcll
nop
jge
mov
cmc
arpl
fisttpl
mov
cli
sarb
ret
popa
jnp
jecxz
dec
push
ss
push
scas
inc
int
xchg
scas
mov
or
cmpsb
clc
call
mov
aaa
xchg
and
or
loope
or
mov
fwait
cmp
xchg
addl
jns
pop
jmp
popa
cmpsb
aas
or
in
pop
in
inc
pushf
lret
loope
push
or
jg
cmp
sbb
push
je
stc
clc
lret
sub
cmp
pop
jbe
push
sti
inc
adc
aad
push
hlt
sbb
out
push
dec
sarb
adc
imul
cmp
pushf
mov
jne
xor
pop
push
ljmp
mov
adc
or
pop
pop
ds
sub
aad
hlt
pop
xchg
mov
sbb
into
jecxz
pop
in
inc
popf
and
imul
sub
lea
movsb
sbb
push
push
cmp
jg
jge
and
pop
aaa
lds
stos
sarl
cmc
nop
insl
and
xor
test
xchg
mov
int3
or
cmp
fwait
movsb
jmp
movl
aas
fdivl
push
or
pop
sub
mov
mov
fstpt
in
fnstsw
xlat
fcoml
lret
daa
popa
pushf
inc
or
shlb
test
jae
xor
out
mov
mov
pop
mov
aad
dec
imul
adc
rcl
loop
push
xchg
aam
add
push
or
xchg
adc
jmp
ja
push
imull
push
imul
mov
xor
dec
sahf
arpl
push
xor
orb
jnp
pop
sub
mov
dec
cmp
movsl
ljmp
dec
clc
test
movsl
cwtl
repz
mov
jg
inc
pop
sbb
mov
xchg
nop
mov
repnz
arpl
test
push
enter
sub
rcrb
pop
cld
cmp
dec
push
ret
inc
xor
cltd
leave
cmpsb
sbb
jae
daa
cmp
xlat
add
mov
push
adc
test
push
fistps
xlat
inc
rcl
fiaddl
lahf
mov
scas
cmp
stos
test
jae
mov
pusha
orl
insb
mov
fdivr
mov
lcall
inc
negb
jne
xchg
jmp
jb
pop
push
mov
xchg
adc
sbb
pop
mov
add
ds
inc
pop
enter
int
push
jg,pt
shrl
std
pop
roll
inc
gs
cmp
adc
loopne
sbb
scas
mov
or
cli
inc
mov
repnz
jmp
rcll
nop
jae
jl
jno
nop
jmp
adc
into
mov
mov
stc
push
dec
jp
mov
mov
mov
leave
seta
fsts
insl
movsb
push
mov
jmp
hlt
jae
shl
add
sbb
mov
lds
in
out
or
jmp
into
in
sbb
xchg
jb
mov
lods
mov
fsubl
inc
in
mov
hlt
js
cmpsb
mov
push
jmp
mov
jg
cmp
jns
push
sub
repz
mov
std
mov
or
cmpsl
iret
sub
mov
pusha
sub
fistpl
add
push
fisubs
lods
test
push
push
data16
dec
mov
ds
push
mov
leave
inc
cmp
cs
in
fs
icebp
movsb
cmpsl
cmp
mov
xor
ffreep
into
ficoms
adc
adc
push
or
adc
sahf
les
mov
outsb
rcl
stos
add
push
jmp
push
jle
push
cmp
mov
fstps
rolb
test
bound
lcall
push
in
mov
pop
add
bound
xor
push
cmp
outsb
mov
xchg
es
ss
test
cmc
ja
mov
in
mov
add
cld
nop
mov
add
xchg
sbb
les
xchg
xor
out
mov
mov
mov
rclb
orl
in
int3
call
jo
sbb
adc
xor
mov
or
add
push
cli
sub
shlb
dec
iret
ss
repnz
xor
cld
adc
ret
xchg
mov
push
stc
xlat
out
dec
lods
add
sbb
cs
push
aam
or
test
incl
push
rolb
cli
insl
andl
jb
xorb
cs
enter
mov
ftst
cmp
pop
adc
xchg
aaa
dec
movsl
ret
dec
sub
sbb
sbb
cmc
pop
add
mov
jno
mov
add
mov
pop
adc
sub
aaa
xchg
rorl
cmp
add
cmovnp
mov
jecxz
jg
pop
arpl
adc
out
xchg
out
xchg
inc
sub
outsb
mov
xor
call
jne
dec
imul
pop
pop
outsb
pop
repnz
fcomps
push
pushf
daa
push
in
dec
inc
or
int
jle
repnz
cmpsb
sbb
sub
sbb
fldenv
imul
mov
ret
sbb
cmp
call
sbb
lds
test
push
and
mov
jbe
mov
push
mov
xor
and
fwait
dec
popa
int
outsl
cmp
or
aam
cmp
push
call
lea
mov
fwait
sbb
xchg
out
in
jge
sbb
mov
out
add
fdivrl
flds
jmp
cld
push
iret
sub
mov
fwait
push
dec
mov
push
fldcw
movsb
mov
popa
loop
mov
repz
out
outsb
sub
aaa
insl
mov
mov
insl
push
adc
imul
push
lods
ds
sbb
outsl
data16
hlt
mov
jg
inc
mov
dec
fstl
fs
addb
cwtl
or
ret
aad
jbe
addr16
pop
insl
ss
push
xchg
mov
pop
jno,pt
xchg
jecxz
cs
jmp
jmp
mov
sub
jp
imul
xchg
lahf
sub
outsl
les
push
daa
scas
adc
divb
mov
aam
mov
aam
xchg
sub
rorl
sahf
pop
xchg
push
aaa
out
cmp
sub
mov
rcll
cwtl
mov
jns
ljmp
jge
fstps
xor
mov
mov
stc
xor
dec
sti
push
mov
mov
or
xor
stos
dec
sub
sti
inc
jle
pop
inc
jl
push
mov
dec
mov
cltd
lahf
mov
cwtl
inc
pushf
sbb
fisubrl
and
cmp
int3
fmull
adc
dec
cmpsl
xchg
pop
push
jno
mulb
mov
push
jae
lcall
ljmp
mov
pop
mov
movsb
les
int
xor
in
push
mov
jno
push
and
insl
push
fidivs
sub
jns
in
scas
sub
aad
mov
iret
pushl
sbb
xchg
fs
mov
jp
pop
es
stos
stc
imul
dec
decl
stos
jecxz
adc
dec
pop
jge
push
cltd
mov
pop
mov
xchg
addr16
or
xor
mov
arpl
ret
and
add
imul
jns
sbb
and
push
push
xlat
pop
or
jp
xchg
push
call
push
gs
dec
xor
mov
out
loope
inc
push
pop
pop
or
sub
mov
dec
fwait
mov
lret
pop
xchg
jno
cltd
inc
daa
and
cltd
xchg
dec
add
ljmp
dec
subl
sbb
lods
push
orl
shll
adc
pop
lock
cltd
fisubrs
addr16
mov
ss
pop
adc
arpl
mov
jo
sub
in
and
jle
out
jnp
fiadds
fucomp
mov
xchg
xchg
test
mov
or
fs
jne
mov
xlat
fcompl
into
fnstsw
sbb
dec
mov
jno
mov
gs
dec
cmpsl
es
sbb
inc
jle
xchg
fstpt
inc
clc
push
out
push
in
xchg
shll
stos
popa
call
adc
movsb
push
jecxz
inc
pop
js
fcmovnb
xlat
stos
inc
out
ja
test
imul
shll
mov
push
ljmp
push
cmp
dec
iret
sti
lahf
das
loop
insl
testl
divb
and
mov
and
mov
xor
hlt
enter
ficoms
mov
into
outsb
mov
xchg
inc
sbb
jne
sub
sbb
cmpsl
lea
sub
and
fdivr
imul
dec
outsl
jl
jg
push
ss
push
push
add
mov
aam
movsb
jnp
in
int
xchg
icebp
sar
or
addr16
jae
pop
cmp
push
aad
jnp
aaa
mov
stc
xchg
lret
add
in
lods
jmp
fnstenv
or
inc
movsl
out
mov
xor
ss
repnz
out
pop
jne
icebp
scas
es
pop
sub
js
mov
sbb
sub
arpl
xor
pop
dec
jmp
fistl
cwtl
lock
push
lahf
or
push
imul
push
call
stc
mov
aad
bound
push
out
cmpsb
jae
jns
pop
icebp
xor
rorl
movsl
cld
call
add
jge
pop
dec
mov
sbb
dec
xor
lods
in
iret
roll
mov
xor
sbb
out
ret
out
in
sbb
mov
inc
out
aad
ljmp
pop
fisttpl
out
cmp
fistpl
sbb
icebp
outsl
and
push
sbb
or
xor
pop
xor
mov
lods
ficompl
inc
mov
pop
mov
cmp
jnp
repz
push
mov
gs
insb
xchg
mov
or
aaa
push
dec
pop
cmp
sahf
cmc
jl
dec
add
dec
push
in
xor
hlt
xchg
aaa
dec
popf
add
aad
sbb
fisubrs
pushf
dec
stos
xor
fidivrs
pop
pop
xchg
cmp
das
jae
cs
pop
std
or
cmpsb
rcrb
outsl
xchg
in
or
xchg
push
lea
xchg
adc
sbbb
rcr
popa
xchg
cmp
aam
or
mov
aad
loopne
inc
cmpsl
rol
into
aaa
lret
jle
push
aas
or
lahf
jnp
mov
hlt
ljmp
push
stc
sbb
out
inc
push
imul
mov
negb
jnp
bswap
push
ja
mov
insb
fidivrl
ret
and
mov
das
orb
mov
push
pop
mov
or
ret
lock
jp
popf
xchg
xlat
clc
fistpl
push
pusha
pop
and
add
mov
add
pushf
iret
inc
push
dec
inc
faddl
pop
repz
mov
xor
leave
mov
addr16
mov
cs
and
pop
cmp
clc
mov
in
ss
aam
fsubl
test
outsb
mov
and
cli
rcrb
into
xchg
dec
int
insb
adc
ss
lea
mov
push
mov
ds
push
cmp
imul
repz
bound
add
ja
cmp
es
fldenv
push
je
sarb
jno
pop
sub
jmp
sbb
jl
sarl
xor
in
in
lret
popa
les
outsb
jne
or
lahf
sbb
and
clc
pop
cmp
push
sbb
ja
add
sti
aas
push
shl
int
arpl
or
mov
jb
adc
addl
adc
xchg
push
js
dec
in
shrl
daa
sbb
push
push
rcll
dec
fucomi
in
jb
fwait
fs
jno
data16
lahf
mov
out
mov
lret
push
mov
aas
cmc
dec
xchg
cmp
xchg
inc
addr16
sub
cmc
es
insb
aad
mov
orb
ret
inc
cmpsb
mov
out
popf
roll
outsb
mov
aad
or
outsl
ljmp
jp
mov
divb
cmp
aas
or
or
dec
cmp
data16
sti
cwtl
fimull
mov
inc
sub
sub
fwait
cmp
pusha
les
xorl
mov
jne
pop
loop
mov
push
mov
push
shrl
mov
jmp
sbb
dec
imul
pop
imulb
push
leave
xor
les
or
test
mov
inc
cld
jnp
xor
js
adc
xor
or
lea
push
mov
incb
ljmp
cmp
lea
mov
xchg
cwtl
lcall
xor
cmp
and
popf
lahf
out
pop
mov
js
mov
loopne
add
rorb
sti
mov
mov
mov
and
sub
push
cltd
inc
or
ja
clc
outsb
jo
mov
mov
mov
push
std
push
mov
fisubl
test
jp
and
xlat
dec
push
push
jecxz
lods
cmp
mov
jp
xor
xor
lret
xor
sbb
dec
mov
nop
mov
test
xlat
es
dec
inc
inc
rorl
out
cmpsb
gs
push
mov
pop
mov
cmp
pop
std
xchg
mov
or
inc
sub
sbb
fdiv
push
icebp
cmc
push
pop
fs
sub
push
cmp
add
xchg
push
jmp
push
xacquire
aam
fidivl
aad
je
jl
lahf
out
sbb
icebp
mov
mov
mov
mov
push
outsl
sti
xor
lock
xor
ss
jnp
push
dec
addr16
hlt
scas
push
aas
inc
outsl
mov
out
sbb
mov
xor
lret
mov
aas
cmp
inc
je
or
gs
mov
scas
cwtl
pop
std
aam
adc
sarl
dec
dec
gs
in
popf
and
fwait
orb
in
aad
jmp
shr
adc
and
sub
mov
repnz
jecxz
mov
xor
cmp
loopne
mov
notb
mov
movsb
cwtl
jne
xchg
jecxz
lea
dec
xor
inc
mov
loopne
sbb
jp
and
push
and
pushf
cld
enter
and
cltd
or
shrl
adc
xchg
pop
jbe
into
mov
rol
mov
add
cld
jle
mov
mov
arpl
jge
push
lcall
mov
test
xchg
jnp
or
aam
fldcw
enter
add
insl
add
lods
xchg
lock
xchg
hlt
ds
pop
jns
mov
cmpsb
jg
out
popf
aaa
xchg
push
push
push
sbbl
flds
loop
stos
mov
push
sbb
add
cmp
xor
test
push
pop
sahf
test
cs
gs
jmp
rcrl
dec
xorl
pop
dec
add
int
pop
hlt
xchg
push
push
js
jno
movsb
mov
mov
or
das
sub
outsl
xchg
sub
push
adc
and
clc
daa
int3
mov
dec
stc
dec
inc
jo
js
sbb
imul
pop
aas
bound
imul
push
add
scas
cmp
repnz
in
and
cmc
leave
push
movlps
es
out
mov
pop
cld
fidivs
pop
dec
adc
jno
push
and
cmpsb
adc
or
xor
sbb
sbb
aaa
das
xlat
jmp
inc
gs
cli
in
aam
outsl
cld
xor
cmp
pop
ret
inc
xor
inc
cltd
adc
xor
repnz
cmp
mov
jmp
je
out
cmpb
jne
adc
sbb
and
jmp
insl
pop
out
inc
xchg
pop
in
dec
cmp
push
mov
fstpl
je
pushf
pop
pop
jle
jmp
jge
ds
push
or
je
loope
sti
push
dec
je
ret
xor
rorl
sub
dec
mov
jge
sbb
es
sub
sub
cmp
adc
push
inc
or
push
fisubl
movl
dec
xchg
mov
dec
jle
in
push
dec
sbb
ret
sbb
packssdw
push
mov
popl
in
iret
add
dec
clc
repz
mov
and
scas
pop
gs
das
and
xor
mov
cs
iret
inc
lret
adc
or
ret
popf
adc
and
and
test
mov
and
fs
adc
adc
mov
seta
cli
xchg
mov
pop
mov
aaa
sbb
fisttps
add
imull
sub
and
mov
jo
imul
mov
mov
rol
push
xor
push
adc
dec
int
mov
cmc
sub
mov
ds
xchg
sbb
bound
push
fnstsw
jns
ret
sub
cmc
icebp
push
leave
or
stos
lahf
xor
push
cmp
out
push
repz
add
test
orl
mov
or
jbe
mov
int
movsl
jl
add
xlat
popf
or
jno
adc
push
sahf
aas
pop
ficoms
lret
mov
mov
in
jmp
mov
and
xchg
mov
in
daa
pop
stos
pop
lahf
les
bound
popf
cmp
loopne
insl
pop
dec
mov
test
stc
push
int
sahf
sbb
scas
mov
xor
adc
and
xor
push
cld
add
xchg
sub
mov
out
adc
fs
fisubs
std
mov
int3
or
shrl
leave
mov
push
dec
loop
sub
xor
cmp
push
dec
xor
pop
arpl
adc
jae
xorb
aaa
movb
aaa
dec
cmp
fisttpl
add
mov
insl
stos
jg
pop
push
lret
add
inc
out
std
ja
xor
subl
mov
lock
xor
shl
loop
dec
scas
pop
scas
xor
scas
repnz
jnp
or
dec
add
and
repz
mov
popa
xchg
jg
imul
mov
cmc
jae
mov
lods
gs
mov
push
lds
fmul
insb
arpl
add
push
imul
fiaddl
hlt
jecxz
jbe
inc
pop
push
movsb
push
add
test
lahf
ja
inc
mov
push
xor
in
xchg
fs
out
adc
jge
out
push
add
or
int
or
nop
pushl
pop
pop
nop
jns
dec
mov
pop
mov
cs
lods
push
push
pop
arpl
cmp
dec
fs
add
cltd
inc
inc
jne
insl
lret
pop
push
repz
fiadds
shrl
out
idivb
out
cmp
xchg
inc
cmpsl
push
iret
out
sub
push
punpcklwd
jae
dec
push
sub
incl
scas
out
dec
das
popa
xchg
dec
or
imul
jmp
xchg
dec
fisubrs
cmp
inc
ret
xchg
andl
pushf
out
add
jle
and
push
out
cs
mov
inc
out
add
pop
pop
xchg
subl
xchg
pop
test
jo
adc
mov
xor
sti
mov
dec
fdivs
cmp
push
mov
jp
add
pop
out
xlat
aas
lds
sub
lea
add
cmpsb
inc
ljmp
jnp
loopne
and
jg
jo
or
mov
cmp
movsl
outsb
stos
mov
adc
lods
dec
dec
adc
jb
pushl
jno
mov
sub
push
cmp
cmp
addr16
jo
mov
mov
negl
cwtl
push
es
jbe
adc
mov
push
aas
cli
mov
les
xchg
inc
ja
and
mov
jb
and
fsubr
dec
push
add
imul
dec
jnp
and
pop
mov
fsts
stos
xor
jae
push
jl
mov
push
js
push
scas
xlat
cmp
ds
xor
dec
and
sbb
inc
xchg
xor
jge
sub
lcall
push
subb
xchg
dec
jae
adc
sbb
dec
mov
lea
je
gs
mov
jbe
cmp
aas
mov
sbb
out
mov
imul
xchg
sbb
hlt
addr16
nop
ljmp
int
int
adc
mov
xor
aaa
add
rol
shrl
lods
or
or
mov
jl
movsl
lods
hlt
out
std
xor
pop
push
lret
in
and
inc
add
in
jg
ret
mov
andb
pop
js
mov
mov
add
and
sbb
nop
adc
popf
sbb
xor
push
repnz
jle
xchg
lock
sbb
jecxz
lds
mov
inc
pop
fwait
pop
cmc
dec
jle
js
adc
arpl
push
stos
mov
imulb
pop
push
inc
jnp
push
and
loop
fdivrl
into
imul
jno
sbb
repnz
lcall
or
cmp
out
shrl
jl
push
cmp
cmp
dec
test
adc
out
jnp
aad
dec
ss
mov
andb
stc
xchg
call
push
enter
sti
dec
pop
popa
dec
sub
lret
push
pop
mov
lahf
js
out
dec
mov
mov
cmp
fwait
dec
idivb
out
cmp
int
dec
or
fwait
jne
jo
xor
aad
xor
pop
and
rorl
aas
jp
lods
and
scas
jecxz
add
cs
pop
mov
lods
ljmp
lea
dec
int3
outsb
shll
aas
cmc
addb
xchg
test
pop
mov
outsb
push
xchg
cwtl
mov
in
das
ja
mov
mov
xor
test
into
shll
in
sbb
sbb
arpl
mov
and
jae
lahf
fwait
push
arpl
je
lret
fs
dec
andl
dec
mov
mov
std
mov
fnstcw
jns
mov
sti
xchg
iret
sub
es
mov
mov
mov
out
out
mov
outsl
test
and
mov
rcl
pop
repnz
cmp
bnd
push
pop
cli
and
pop
cmpsb
pushf
pop
jns
hlt
mov
int3
clc
pop
lret
movswl
jmp
mov
int3
cs
test
enter
pop
fwait
inc
xchg
or
test
mov
mov
in
cmp
rclb
adc
mov
mov
lea
adcb
and
xchg
repnz
cmp
shlb
icebp
movsb
xchg
cmp
mov
jmp
shlb
outsb
movsl
ret
or
adc
sbb
sti
jb
xchg
test
frstor
fstl
mov
inc
das
jmp
data16
adc
imul
xchg
rcrb
dec
sbb
js
out
pusha
nop
sbbl
dec
lock
or
out
push
cmp
adc
inc
lock
add
fs
insl
inc
bound
inc
cwtl
divb
sub
cs
lods
movsl
popf
xor
cmpsl
sub
mov
or
je
popa
insb
xchg
or
pushf
xchg
in
and
sbb
sub
push
cmpsb
push
lea
rcrl
sbb
inc
jp
out
rolb
dec
jne
psraw
lcall
pop
or
stos
pop
pop
sub
mov
test
mov
lock
je
and
shlb
push
pop
jo
xor
fiaddl
gs
stos
sub
and
xchg
or
daa
xor
loopne
orb
subl
and
jmp
xchg
fcos
sbbl
notl
bound
addr16
add
pop
sbb
inc
push
pop
es
popf
icebp
sub
fbld
scas
xor
mov
jnp
pop
push
subb
lret
sbb
dec
inc
imull
push
cltd
icebp
push
jp
jnp
push
ret
xor
mov
je
popa
sub
sub
jge
mov
into
dec
fsubrl
jle
cmp
adc
push
or
add
pop
sub
add
fnstcw
addr16
push
jecxz
fnstenv
cmp
ret
xor
or
lret
jl
add
cmp
xchg
mov
shl
mov
dec
aam
jle
xchg
addr16
adc
mov
sbb
jle
mov
out
cmc
std
jne
push
movsb
dec
push
or
or
ds
divb
ja
inc
sub
test
mov
daa
pop
popa
rolb
enter
shl
bound
push
cmpsl
add
std
ret
lock
pop
push
pop
mov
imul
out
pop
add
sbbb
xchg
push
inc
aad
adc
add
out
std
gs
jle
aas
mov
repz
scas
nop
andl
xor
notl
hlt
lret
cmpsl
xchg
mov
mov
popa
adc
nop
int
popa
ss
daa
loop
rcrb
pop
ret
fadds
pcmpeqw
out
jbe
das
sub
rol
shl
push
subb
and
pop
or
pop
mov
ja
shrl
inc
inc
jns
cli
out
test
and
test
stos
lret
fidivl
ds
and
fcompl
mov
pop
sbb
add
scas
mov
dec
fcmovnu
cwtl
cmp
movsl
insl
mov
cmp
pop
ficoml
sbb
jb
jno
pop
data16
ror
dec
fsubs
mov
nop
sbb
popa
ljmp
addl
and
ds
dec
cld
inc
icebp
jbe
fisttps
mov
in
out
sti
or
add
loope
loopne
int3
test
inc
stc
stos
clc
sti
xchg
pop
dec
add
ficompl
mov
cld
mov
pop
mov
outsl
mov
cld
jle
imul
jecxz
mov
jg
add
jle
lods
mov
or
jmp
adc
data16
shlb
xchg
stos
sarl
test
leave
lret
pusha
cmp
aas
sbb
sbb
sub
jbe
out
xchg
cwtl
jns
fwait
movsl
xchg
cld
cld
fcompl
and
cmp
lods
aad
or
fldl
or
inc
jmp
xchg
and
lret
ret
insl
test
lea
sti
lock
pop
mov
jno
insl
scas
xchg
and
xor
inc
loop
jnp
repnz
loope
mov
mov
sub
cli
repz
js
inc
lods
ja
xor
adc
dec
cmp
push
icebp
jae
cmc
loop
and
and
in
sub
les
sahf
je
mov
lahf
loopne
orl
inc
pop
lock
inc
fs
imul
push
sarb
pop
add
insl
cmp
lret
roll
test
jecxz
ja
inc
ss
lcall
jg
sub
inc
push
fimull
cmp
cmp
dec
xchg
outsb
mov
mov
cmp
nop
push
push
pop
xchg
decl
or
movsl
out
lahf
fs
adc
and
stos
out
lds
pusha
push
test
add
ss
test
ret
lret
int
xor
into
mov
test
cmp
push
mov
jg
insb
imul
xchg
xchg
pop
in
add
jecxz
lcall
stos
inc
enter
loopne
lock
add
push
add
js
cmp
test
dec
mov
sahf
add
cltd
outsl
sti
shrl
mov
insb
mov
sub
and
cmp
sbb
mov
mov
mov
jo
mov
pop
sbb
cmc
out
adc
lret
into
push
dec
mov
insb
repz
adc
sub
movsb
mov
pop
jmp
jecxz
cmp
int3
cmp
aas
ss
sub
fdivs
and
push
shr
xlat
fbld
cld
and
push
cld
lods
cmp
movlps
sahf
sbb
sub
or
xor
cmpsl
xor
mov
or
les
fiadds
popa
or
jge
mov
popf
mov
imul
mov
mov
outsl
orl
repnz
sbb
femms
push
mov
sar
rorb
lds
test
jae
adc
std
sbb
cmpsl
lods
fidivl
inc
and
cmpsl
ds
add
movsb
andb
cli
clc
sub
cli
mov
imul
xlat
add
jns
fidivrs
cmpsb
xchg
push
das
xor
or
add
test
fldenv
sbb
mov
mov
or
sub
xchg
mov
sbb
ret
mov
adc
fildl
push
mov
ret
mov
xchg
in
ret
adc
inc
xchg
aad
pop
lcall
xchg
push
pusha
mov
xor
lods
ret
aam
arpl
mov
fmull
jmp
sarl
inc
call
or
lcall
sub
sbb
subb
push
daa
or
imul
cwtl
fcmovbe
sub
xchg
popa
xchg
ss
mov
jbe
cmp
mov
push
pop
in
pop
iret
push
fs
dec
aam
data16
inc
jp
adc
mov
lcall
loop
shl
inc
cwtl
xlat
dec
in
fs
push
loope
mov
inc
pop
or
cmp
mov
fucomi
insb
lods
aam
cmc
jae
inc
std
ss
ret
fldt
dec
jmp
adc
ss
into
pop
jge
xchg
ja
sub
pop
mov
sbb
push
lea
insb
testl
aaa
lods
jno
roll
xchg
in
xchg
pop
je
add
xchg
pop
mov
jns
sbb
popf
sbbl
pop
lret
sbb
in
adc
add
inc
nop
mov
or
jl
repnz
orb
mov
push
jge
mov
push
dec
scas
insb
mov
adcl
dec
pop
xchg
cld
jo
insl
adc
cmp
scas
inc
cmc
cmpsl
subb
or
enter
cltd
enter
cmp
add
out
pop
mov
mov
pop
bound
sub
sub
call
in
loop
mov
and
rcll
inc
repnz
sbb
hlt
adc
jno
je
push
mov
sbbb
mov
lcall
adc
sub
std
mov
lock
jl
int
mov
inc
popf
idiv
push
inc
pop
dec
dec
xrelease
xor
leave
xchg
test
lcall
add
xchg
lret
and
xor
mov
xchg
in
pop
sbb
test
sti
pop
iret
dec
mov
popa
leave
test
movsl
cmp
addr16
iret
jge
inc
sbb
dec
add
das
call
mov
cwtl
and
dec
cli
bound
xchg
addr16
xchg
mov
dec
imul
mov
nop
test
je
xor
add
sar
pop
sub
andb
test
cltd
pop
push
movsl
mov
loope
inc
mov
mov
mov
ss
loope
add
push
add
enter
cmpsl
outsb
xor
out
jb
sub
loopne
out
or
pop
cwtl
mov
inc
jns
inc
xchg
loope
adc
mov
push
incb
shlb
mov
mov
cmc
mov
stos
iret
mov
cmp
in
sub
mov
outsl
aas
cwtl
and
rorl
in
add
js
sbbl
outsb
pusha
adc
inc
push
or
mov
aaa
adc
pop
dec
lahf
js
jno
or
out
add
outsl
imul
jmp
rcrl
inc
sbb
add
std
mov
ficompl
ds
mov
push
movsl
xor
fmuls
dec
repz
clc
inc
mov
fcompl
jno
fdivrl
jl
mov
pop
imul
leave
ja
imul
cmp
mov
xacquire
cwtl
jmp
daa
sub
idivl
and
imul
adc
add
notb
or
insl
adc
add
fldl
dec
pop
pop
ds
push
enter
sti
fwait
adc
xchg
imul
mov
mov
and
push
push
rorl
xchg
cli
sbb
fbld
loop
push
out
dec
arpl
pop
aam
or
ret
fistpl
cmp
arpl
sub
mov
les
sarl
lea
faddl
pop
in
popa
repz
pop
icebp
insb
in
cs
fcmovb
jns
jno
in
cmp
insb
mov
cli
dec
xor
ficompl
sub
mov
sub
sbb
dec
or
push
cs
int
mull
or
push
sub
sbb
mov
stc
mov
mov
pop
or
and
pusha
mov
jno
lret
push
add
dec
cmp
jb
aas
lock
pop
push
mov
or
bound
push
je
xlat
sub
imul
dec
mov
fidivrl
or
es
icebp
xor
add
dec
shlb
or
out
push
or
imul
mov
xchg
mov
stos
add
push
sarl
pop
xor
dec
lods
ror
jge
push
fucompp
dec
add
cmp
inc
mov
xchg
nop
aam
outsb
mul
es
add
stos
std
jo
add
mov
cmpsb
lret
and
in
into
cmp
lahf
imul
sbb
add
and
fidivrs
adc
fcmovb
mov
push
fnstcw
and
cld
mov
xchg
add
idivl
xchg
push
xor
loopne
arpl
xchg
mov
xchg
icebp
jge
lcall
repz
mov
pusha
and
mov
cmpsl
mov
stos
ja
data16
mov
sub
mov
sub
mov
scas
rcll
mov
sahf
in
mov
adc
nop
mov
adc
insl
cmp
mov
pop
and
xchg
jne
add
ds
xchg
sti
jnp
xchg
ds
push
pushf
cmp
or
mov
cld
xchg
xor
or
mov
or
out
ss
or
or
clc
adc
mov
pop
lret
loopne
xchg
fmuls
pop
scas
popf
xacquire
jne
into
mov
mov
inc
fwait
bound
fwait
pop
mov
stc
dec
call
xor
sub
pop
jnp
repz
and
jg
in
imul
sbb
loopne
lock
movsl
dec
add
repz
int3
mov
cmp
jbe
ror
cmpsl
add
add
out
xchg
pop
out
push
popf
nop
cmp
cwtl
iret
jmp
xchg
cld
push
frstor
pop
orl
mov
push
push
mov
jmp
mov
cmp
push
adc
jbe
sub
dec
sbb
nop
call
jae
pop
cwtl
jb
mov
clc
and
sbbl
and
or
xchg
nop
mov
mov
outsb
call
jne
ret
lret
lahf
sbb
fcomi
cmpsl
push
outsl
mov
add
int
sub
jnp
sbb
rcr
lret
inc
test
inc
inc
xor
nop
inc
or
in
inc
sbb
mov
sbb
cmp
xor
xor
fstpt
jnp
in
xchg
je
jge
mov
pop
and
mov
out
sbb
add
lahf
sti
cmp
stos
ficoml
mov
and
les
and
lret
pop
lahf
out
setp
in
rcrb
pop
rorb
xor
and
andl
or
mov
push
xchg
out
or
nop
adc
inc
cmp
hlt
pop
push
das
ss
lret
adc
mov
ds
pushf
stc
push
call
mov
loope
outsb
loope
roll
mov
adc
inc
cmc
mov
push
jae
push
jl
sbb
mov
cmp
lock
lret
fistpl
stos
es
adc
ret
pop
nop
add
jle
in
and
fistl
fisttpll
push
inc
mov
stos
pop
xor
add
push
imul
insb
aas
dec
dec
imul
ret
mov
cmp
stc
mov
int
stos
ret
sbb
das
xchg
das
aad
loope
fwait
and
aas
fmull
sbb
fiaddl
mov
ret
sbb
lods
push
fwait
dec
or
cmp
push
push
shlb
push
movsb
jo
jp
xchg
cmp
lds
rcll
fldl
aaa
dec
and
popa
mov
aas
mov
jb
and
aad
and
cmc
jmp
daa
addr16
ficoml
mov
dec
leave
sub
push
push
fwait
mov
test
les
stos
inc
push
xor
inc
cs
enter
les
pop
xchg
pushf
mov
xlat
outsl
add
insb
inc
jmp
inc
mov
fidivs
test
movsb
fsubrs
lock
mov
loopne
dec
test
call
rol
lods
mov
fdivr
dec
xchg
insl
movsl
aad
ficoms
dec
adc
lods
ret
sbb
cmp
lea
sbb
mov
adc
jmp
cmp
cmpl
cmpsl
pop
mov
imull
mov
repnz
or
mov
jle
scas
negb
gs
jne
mov
mov
rolb
jmp
cmpsb
je
xor
xor
sbb
or
xchg
test
jnp
xchg
ret
add
push
adc
mov
loop
push
push
fwait
scas
lock
xchg
sub
ljmp
mov
push
sbb
stc
pop
jecxz
xorl
and
orl
sub
jae
movsb
rcrl
xor
sbb
lahf
push
call
and
xchg
rcrb
push
jns
adc
push
out
mov
ret
mov
xchg
add
es
and
and
int
ss
insl
adc
test
mov
daa
out
mov
cmp
dec
dec
xchg
jbe
add
cltd
shll
push
data16
push
mov
jb
imul
inc
jmp
jns
pop
js
xor
out
adc
sub
push
fstps
inc
hlt
add
xchg
mov
sub
sub
stos
pop
or
stos
test
inc
xor
ror
fidivrs
insb
mov
push
lret
pop
lods
mov
and
pop
fiadds
pop
out
enter
shrb
fmull
pop
movsb
dec
dec
adc
out
int3
inc
lock
add
call
pop
repz
pop
mov
cwtl
mov
mov
cmc
mov
jmp
dec
in
mov
aas
loop
in
pop
inc
xchg
lret
and
or
fildll
push
jns
mov
test
hlt
sub
scas
in
movb
cmpsl
xlat
mov
les
add
push
mov
mov
and
xor
or
xlat
dec
inc
push
add
in
cmpsb
mov
aaa
xchg
lds
in
jnp
loop
cmpsl
mov
push
mov
inc
sub
test
mov
jge
inc
cmp
xor
shlb
push
or
adc
xchg
cmc
xor
sub
adc
push
out
jecxz
stos
xchg
fcoms
outsl
into
aaa
jle
lds
popf
sub
inc
jns
mov
dec
xchg
add
out
fbld
cmp
into
fisttpll
sti
aam
int
repz
mov
xor
ljmp
aaa
mov
mov
sub
mov
rorb
ficoml
push
dec
sbb
rcrl
sub
mov
aas
jne
add
and
dec
stos
inc
jb
sbb
sub
ja
sub
sbb
and
cmpsl
add
lahf
daa
int
icebp
sbb
push
shl
int3
jmp
js
out
or
nop
or
xor
dec
notw
xchg
test
sbb
push
jmp
jae
repnz
jnp
f2xm1
adc
repnz
jae
daa
pop
xchg
aad
lods
xchg
pop
push
aaa
sti
ds
imul
mov
sub
dec
jecxz
loope
dec
loop
lcall
pop
jns
mov
aad
add
pop
mov
sub
mov
ss
mov
add
outsb
cmp
lods
xor
fiadds
stc
das
push
jne
pop
mov
cmp
popa
mov
mov
mov
dec
ljmp
gs
icebp
iret
adc
push
push
test
icebp
fucomp
pop
pop
adc
sti
roll
mov
daa
push
fs
pop
fs
repnz
add
cmp
scas
test
adc
aam
lahf
fadd
stos
movsb
pop
scas
push
mov
scas
mov
dec
movsb
test
adc
adc
icebp
lea
pop
mov
jae
loopne
roll
sbb
mov
mov
and
jnp
lods
orb
cmp
idivl
add
adc
jp
test
push
sub
ret
cmp
pop
jo
add
mov
ret
lods
sbb
push
mov
sub
and
pop
adc
sub
sub
pop
cld
sysret
fsubp
in
mov
xor
pop
mov
xchg
int3
cs
sbb
ret
inc
adc
mov
push
and
jmp
ja
arpl
aas
sub
dec
call
and
cmpsb
inc
roll
and
sub
hlt
mov
mov
cs
cld
mov
loope
lcall
loope
lods
sbb
aaa
imul
loopne
test
divb
pop
repnz
jae
test
negl
jp
divl
dec
das
pop
int
push
push
add
xor
in
dec
clc
adc
inc
sub
inc
cmpsl
int3
cmp
add
sahf
dec
nop
in
jge
mov
dec
jg
bound
cmp
loopne
jb
pushf
fxch
lcall
ljmp
dec
add
ret
insl
test
add
out
or
lahf
movlps
sti
int
test
add
int3
adc
mov
icebp
insl
adcl
call
jae
cmp
lret
cld
rcrl
and
mov
das
xor
and
shl
mov
sub
add
xchg
enter
fcomps
jo
das
xchg
mov
shrb
mov
aad
pop
out
loopne
leave
push
mov
and
ret
push
jno
ljmp
cmp
pop
pusha
loope
ret
xor
out
mov
push
adc
rolb
mov
leave
or
nop
flds
push
out
insl
and
fcompl
dec
pop
sub
mov
bound
pop
adc
sti
into
test
dec
dec
or
iret
and
mov
shrb
inc
xor
stos
sub
jle
push
js
xchg
jae
imulb
mov
xor
nop
movb
aas
into
push
ljmp
xor
mov
cs
call
adc
test
bound
xchg
and
or
push
notb
push
inc
sbb
and
xlat
xor
push
pop
repz
fwait
cmpsb
xor
jne
movsb
inc
jg
lcall
lock
out
xchg
dec
push
add
insb
sub
fsubrl
sbb
lods
xchg
jp
xchg
leave
cmp
inc
mov
dec
test
add
les
lcall
jnp
pop
or
push
lret
iret
fstpl
jnp
sbb
stc
jmp
repz
std
mov
push
pop
stos
sbb
rcl
ss
push
movsb
pushf
pop
add
nop
mov
mov
jns
imul
jb
lcall
aas
outsb
clc
push
test
test
cld
jp
add
enter
push
jmp
pop
sub
adc
sbb
jg
out
jnp
mov
movsb
mov
adc
or
xlat
sub
stos
insl
mov
shll
movsb
sub
pop
scas
pop
mov
rorl
jmp
pusha
mov
stos
or
call
cmp
or
jecxz
mov
pop
pop
jo
xorl
xlat
sbb
pushf
push
mov
daa
ficompl
inc
cmp
or
aaa
mov
xchg
or
xor
lcall
mov
out
jg
cmp
cmp
movb
sbb
int
xorb
mov
cwtl
and
dec
out
xchg
test
cltd
and
dec
aas
adc
subps
and
add
jmp
and
jb
pop
jmp
sub
inc
aam
cmp
adc
cs
cmpsb
sub
call
mov
outsb
popa
mov
inc
in
nop
repz
lcall
repz
hlt
dec
lret
add
rcll
jo
call
cmp
rcl
pop
mov
jmp
sub
in
push
loop
push
xlat
stos
insb
rcll
int3
int
fwait
mov
mov
jns
aad
notl
dec
notb
nop
adc
loope
xchg
dec
cld
aad
neg
inc
repz
ss
push
jns
mov
push
add
adc
push
out
xchg
sbb
xchg
scas
mov
push
ret
addb
clc
mov
jbe
in
fadds
les
je
or
fistps
lock
ss
les
pop
cmp
ret
mov
and
in
mov
test
dec
sbb
dec
arpl
xchg
fmul
inc
cmpsl
adc
pop
inc
test
inc
xor
lcall
ffreep
sti
push
addl
jge
push
mov
arpl
or
or
insb
or
push
gs
aam
sbb
in
js
mov
pop
jno
adc
popa
mov
adc
xchg
cmc
mov
in
dec
lcall
in
sbbl
sub
lods
je
imul
gs
jno
mov
cltd
pop
clc
cld
pop
fcmovnbe
mov
out
loop
cmc
jmp
push
les
mov
mov
mov
orb
fstl
mov
and
icebp
arpl
dec
push
adc
shlw
inc
leave
into
ret
aad
outsl
test
out
push
test
jns
inc
mov
and
iret
and
in
js
fwait
mov
cwtl
lods
ljmp
loope
lock
sbb
jnp
lret
add
dec
lds
sbb
inc
xchg
lret
or
sub
xlat
out
sti
js
and
adc
jg
mov
jne
fsts
test
pop
dec
inc
adc
popa
mov
pushf
pusha
sub
roll
xor
lahf
shlb
das
jp
arpl
inc
loopne
sti
mov
mov
sbb
push
add
dec
xchg
sbb
test
addb
xchg
mov
je
push
adc
ja
sub
int3
sbb
sub
inc
test
xchg
iret
mov
push
jge
jp
mov
xchg
cwtl
outsb
and
lret
mov
sti
xor
das
les
sahf
jne
fmulp
pushf
push
push
shl
dec
adc
pop
cwtl
sarb
sbb
adc
test
push
fmull
or
int
out
leave
adc
mov
repnz
popf
pop
fwait
xchg
std
push
jbe
out
loopne
xor
popa
cmpsl
test
xor
call
lock
divl
jae
inc
std
sub
rcrb
gs
out
mov
mov
mov
mov
and
adc
push
scas
mov
jne
stc
cmpsl
mov
fwait
stos
sub
lods
test
adc
push
aaa
cmp
popa
icebp
mov
mov
fisttps
pop
and
add
mov
inc
mov
leave
xor
dec
pushf
int3
cmp
xor
jmp
sar
jmp
subb
cld
and
and
in
push
inc
mov
jne
sti
xchg
nop
xchg
cmp
jno
and
lcall
push
out
fldcw
jle
add
and
cmp
cmpsb
sub
jmp
adc
xchg
test
test
lea
dec
add
add
mov
add
stos
xchg
sbb
fs
inc
jmp
inc
loopne
insb
jae
mov
xor
dec
imul
cwtl
in
inc
inc
mov
ret
shrl
aad
rorb
cmp
sub
lcall
sar
incb
dec
xchg
or
jne
or
sbb
sub
dec
cmp
jg
xchg
inc
lret
cli
and
jp
push
cmpb
lds
xor
jp
scas
jae
fidivrl
sub
inc
syscall
fwait
lcall
cmpsb
aaa
mov
div
enter
push
leave
test
iret
mov
mov
lret
xor
mov
out
rclb
lods
leave
adc
push
sbb
inc
push
ja
inc
lret
mov
roll
daa
gs
sub
mov
mov
lret
inc
stos
jnp
mov
push
cmp
xor
iret
imul
test
in
imul
int3
out
mov
mov
add
and
mov
cmp
sahf
call
or
lods
adc
sbbb
jo
mov
mov
add
cmp
xchg
iret
mov
xchg
loope
outsb
fnstcw
call
outsl
out
mov
fldcw
adc
push
add
jmp
jbe
cmp
push
arpl
scas
lret
ljmp
popf
stc
xchg
lcall
pop
lahf
and
cmp
push
lcall
call
repz
xchg
pop
dec
out
xchg
mov
popf
lcall
add
push
or
xchg
adc
test
test
push
xchg
hlt
add
jnp
xlat
mov
mov
and
cmpsl
xor
jae
pop
inc
xor
cmp
and
jmp
jns
mov
adc
push
iret
lea
or
dec
cmp
test
mov
or
push
mov
out
fcmovnb
pop
repz
popf
lret
imul
mov
testl
dec
mov
push
cwtl
lock
or
xor
mov
mov
frstor
mov
cmp
pop
mov
dec
pop
enter
mov
js
jbe
inc
mov
mov
jne
xchg
lahf
adc
nop
loopne
mov
mov
daa
arpl
rolb
ret
ret
test
mov
aad
lahf
call
push
mov
mov
pop
lcall
ret
scas
add
xor
aam
push
lahf
xlat
push
jge
sti
in
loopne
or
mov
sbb
mov
pop
xor
cmp
ja
in
movsl
sbb
inc
mov
jno
cmp
cld
int
std
rorl
cmp
in
push
xchg
loopne
or
cwtl
bound
sub
pop
inc
pop
daa
xchg
jl
mov
xchg
ljmp
test
aad
test
pop
outsl
into
or
mov
and
sbb
jp
daa
pushf
mov
push
sahf
out
jb
xor
pop
push
daa
imul
cmpsl
jle
xchg
leave
popa
xchg
out
adc
cmp
dec
xor
dec
in
cld
sbb
mov
insb
jns
int
aas
test
adc
sbb
jp
stos
mov
lret
jb
je
jnp
or
out
pop
mov
test
ret
inc
movsl
leave
push
fldt
out
aas
test
insb
mov
dec
movb
fsubrl
cli
cmp
dec
xchg
or
pushf
stc
outsb
adc
je
xor
fs
push
jns
ficoml
xorb
and
enter
adc
add
movsb
inc
les
or
lret
arpl
push
push
xor
xor
dec
rolb
xorl
mov
mov
movsbl
sub
aaa
cwtl
imul
je
jne
xor
xorl
pop
xor
outsl
dec
jne
adc
mov
mov
xor
pop
mov
fsubrl
call
or
mov
cmc
mov
repnz
testb
cmpsl
loope
add
push
mov
mov
out
test
push
fs
push
nop
cmp
sub
cmc
and
pop
addr16
roll
js
push
mov
cmp
jl
pop
jbe
mov
lods
loop
cltd
lret
mov
iret
test
addr16
or
out
jmp
mov
adc
repnz
adc
pop
inc
in
xor
xchg
push
fistps
jg
pop
hlt
out
xor
xor
ss
adc
mov
mov
lds
push
add
jl
lods
or
scas
aas
xor
sbb
inc
out
in
pop
and
jecxz
pop
das
outsb
mov
jbe
pop
xor
jmp
jg
sbb
add
mov
test
mov
lds
out
cmc
sub
inc
xlat
stos
pusha
jbe
je
test
sub
mov
xlat
out
mov
pop
scas
mov
imul
xor
mov
mov
add
popa
leave
aad
das
cs
mov
adc
cs
sbb
addr16
jmp
es
je
insl
outsl
add
xchg
mov
sar
add
ret
int3
jo
push
dec
movsl
cmpsb
and
jns
bnd
jns
push
xchg
bound
in
ljmp
pop
xchg
adc
sahf
or
inc
xchg
pop
movsb
jg
jnp
jp
dec
cmpsb
xor
push
mov
negb
outsb
call
cmp
das
pop
pop
shr
jg
lods
cmpsb
mov
test
xchg
iret
in
mov
jns
adc
pop
xor
and
pop
stos
aas
push
push
ret
and
sbb
movsb
and
mov
mov
sbb
sbb
stos
lock
fwait
mov
inc
xchg
data16
and
mov
pop
shrb
mov
nop
mov
or
mov
mov
pop
out
shll
lds
sbb
jg
xchg
cwtl
inc
dec
pusha
loop
sub
push
lahf
xor
movl
in
dec
dec
xchg
cwtl
fistps
loopne
enter
lret
ret
adc
cs
subl
push
js
push
nop
ficoms
or
inc
mov
imul
pop
test
adc
fs
retw
lahf
cmc
roll
adc
sbb
adc
adcl
xchg
lods
inc
push
add
mov
add
fbstp
repz
aam
xor
repz
jg
dec
adc
push
adc
cmp
add
inc
leave
mov
pop
add
push
nop
aas
or
cmc
sub
and
sti
lea
ja
imull
adc
inc
icebp
inc
mov
adc
aas
push
push
add
jmp
cmp
orl
xor
jo
sbb
mov
fiaddl
stc
arpl
push
push
mov
ss
mov
in
adc
mov
mov
mull
jecxz
das
push
test
add
scas
sbb
adc
cld
push
jb
lcall
xchg
out
jae
int
inc
jge
popa
jbe
popf
sbb
mov
stos
repnz
lahf
insl
mov
rcrl
in
enter
test
or
out
or
movb
aaa
inc
mov
cmp
mov
imul
pop
aaa
dec
or
jnp,pn
ss
mov
movsl
test
mov
stos
push
js
mov
test
scas
in
push
cmpsl
pushf
repz
lea
cmp
jnp
add
lcall
inc
sub
lea
lea
jp
push
or
cltd
mov
fldt
fists
mov
ds
adc
pop
cmp
pop
lods
dec
mov
sub
les
xor
cmp
pop
test
jnp
xor
xchg
pusha
dec
inc
ret
outsl
mov
pushf
or
push
cmovp
or
pop
lahf
xchg
shr
aas
add
aam
rorb
fists
xorl
add
movsl
jecxz
les
add
aam
pop
and
ljmp
inc
pop
xlat
adc
es
pop
jg
cmp
imul
mov
lret
fimuls
es
cmp
jl
and
mov
subb
aas
mov
and
jg
in
nop
xor
cmp
test
mov
push
jge
jne
adc
jnp
les
mov
push
add
test
test
mov
inc
sar
pop
push
clc
xor
push
xchg
scas
or
mov
mov
mov
aaa
mov
addr16
fsubrl
notb
mov
push
int3
lahf
mov
int3
add
mov
sete
adc
stos
fucompp
xlat
push
jle
lods
mov
aaa
lds
sub
mov
fidivs
cmpsb
sbb
cmp
pop
xor
mov
aaa
cmpsb
pop
aaa
mov
xor
icebp
aas
sbb
hlt
push
jge
ficoml
in
test
fsubs
cmp
jmp
push
pop
sub
xchg
rolb
adc
mov
mov
test
cmpsb
pushf
scas
jp
loope
sbb
cld
xchg
mov
aaa
pop
lods
cmp
xchg
aad
lahf
sub
je
push
inc
xchg
outsb
mov
in
mov
pusha
jecxz
std
xchg
inc
or
lds
jle
push
cs
push
sub
inc
in
xchg
mov
sub
and
cmp
push
shrb
fcomps
pop
movsl
jno
jae
mov
jae
xchg
mov
hlt
in
add
insl
in
jo
cmp
xor
cmp
mov
rcrb
adc
scas
mov
xchg
jmp
mov
push
cwtl
pusha
add
cmp
jno
std
dec
fsubs
test
fnstcw
sahf
addr16
or
out
cmpsb
push
mov
pop
test
cmp
lods
sub
adc
int
push
jle
sbbb
mov
cmp
mov
sub
rorb
dec
lods
shrl
pushf
std
repz
pop
mov
dec
inc
xor
inc
dec
jmp
and
int3
mov
test
ja
dec
mov
cmp
test
jmp
cld
mov
hlt
shll
dec
mov
mov
stc
movsl
testb
mov
push
nop
test
lods
je
sbb
sub
dec
scas
push
adc
faddl
dec
push
cmp
add
sahf
ret
lods
inc
lock
movsl
lea
fildll
rep
xor
push
test
mov
out
test
push
leave
movsb
lret
mov
lahf
rolb
xor
xor
mov
out
or
mov
out
sbb
sub
shlb
adc
adc
fldenv
jl
dec
mov
cmp
xor
stos
notl
fisttps
mull
xchg
jge
icebp
leave
jmp
pop
pusha
xor
aaa
sub
shll
mov
push
pushf
pop
lds
ljmp
out
ds
pop
mov
or
mov
jp
out
mov
mov
push
test
push
mov
and
sub
add
jmp
add
jp
js
stc
inc
fcmovnu
dec
repnz
repz
in
xchg
into
inc
push
loop
jns
xchg
inc
imul
lods
aad
jne
adc
add
pop
loopne
mov
xchg
sbb
pop
imulb
push
mov
test
xor
rcl
loope
inc
cmp
subb
insl
call
out
fcmovnu
adc
stos
jae
xlat
test
adc
out
imul
jbe
lret
movsb
test
ds
and
mov
push
cmpl
call
sbb
aad
cmp
and
addr16
es
fildl
or
pop
cmpsl
xlat
cmp
or
pop
mov
shl
lret
mov
xor
enter
or
movsl
cltd
jo
addr16
andb
cs
pop
ret
xor
dec
xor
adc
clc
loop
je
or
jmp
scas
xchg
mov
shl
ret
clc
into
lock
push
jno
mov
arpl
js
sbb
sbb
mov
mov
fs
call
or
repnz
add
or
cmp
push
xchg
cmp
add
iret
or
out
dec
mull
sbb
lock
sbb
sbb
mov
sbb
or
xor
outsl
fistpl
dec
dec
loop
in
stos
mov
fstpt
movsl
sbb
cli
enter
cwtl
add
fiaddl
rcrb
repnz
ret
or
push
gs
shll
repz
in
mov
idivl
in
add
mov
and
fsubrl
mov
lea
fxtract
or
out
cmc
out
sti
mov
xor
xchg
sahf
das
cs
fstps
add
sahf
insb
cmp
repz
je
into
popa
sbb
in
and
mov
xor
rorb
sbb
repz
ljmp
cmp
xchg
xchg
or
ss
mov
or
in
xor
sbb
jle
and
add
mov
cltd
test
ljmp
shl
push
mov
sbb
mov
sahf
pop
subb
and
pop
push
and
mov
movsl
mov
mov
std
push
push
sbb
pushf
inc
cmpsl
mov
cwtl
add
fcoml
dec
lds
xchg
xor
lods
negb
jp
movsl
lahf
dec
test
push
dec
cs
xchg
mov
shrb
inc
xor
sti
mov
mov
cmc
test
xchg
imul
mov
push
shl
sub
mov
mov
imul
sub
xor
mov
jo
xchg
mov
push
push
je
test
imul
arpl
aas
decb
adc
xchg
xor
or
aaa
std
decb
adcl
push
sbb
daa
cli
or
testl
mov
std
push
and
enter
pop
cmp
inc
in
adc
pop
jne
sahf
lea
sbb
fdivs
lods
dec
loope
je
pop
adc
xor
rorl
dec
mov
sub
and
mov
push
test
lods
push
std
inc
xor
cmp
adc
jne
pusha
jmp
outsb
dec
cld
dec
sahf
pop
push
bound
add
sbb
mov
aad
mov
in
inc
pop
and
dec
adc
add
mov
adc
icebp
lret
mov
mov
insb
xlat
lds
mov
sub
idivb
dec
rolb
push
sbb
add
inc
rclb
ljmp
add
pop
out
mov
xchg
jmp
aas
xchg
dec
jge
pop
cltd
xchg
and
repz
and
popf
stos
pop
jnp
adc
icebp
push
cwtl
pop
sub
mov
jmp
xchg
jne
lds
xchg
fs
or
xchg
sub
cmp
mov
adc
xor
xor
and
mov
rorl
insl
out
jp
lock
jmp
outsl
dec
das
fldenv
mov
flds
sbb
fcmovne
or
mov
push
jmp
xor
sarl
daa
fisubrl
rcrb
inc
jne
arpl
mov
mov
pop
nop
sbb
ror
les
dec
icebp
xlat
ds
ljmp
jne
shll
out
push
sub
cwtl
fimull
and
cmpb
cmp
sub
pushf
add
pushf
sti
outsb
and
das
out
test
or
cld
xor
adc
adc
in
jp
xor
ret
clc
jp
dec
dec
sbb
inc
pop
xchg
push
and
jp
jle
ss
outsl
mov
out
mull
sbb
mov
jbe
sub
cwtl
sti
and
dec
sbb
rcrl
jae
lods
subl
incb
push
dec
xor
fdivrp
or
mov
ds
or
push
mov
cli
push
cltd
mov
pushf
adc
xchg
test
xor
imul
bound
adc
out
inc
mov
das
daa
add
fidivl
sbb
test
xor
movsl
xchg
jae
scas
mov
sbb
mov
ret
icebp
int3
pusha
pop
lret
mov
shrb
mov
call
negb
push
sbb
cmp
out
repnz
test
ja
leave
int3
in
fldenv
and
fcom
lret
cmp
jecxz
ret
loope
cs
mov
pop
es
aaa
mov
push
push
sbb
inc
stos
mov
pop
mov
loopne
pop
inc
mov
into
sbb
cmpsb
loop
mov
pop
pop
sbb
pop
sub
std
rclb
insl
scas
addl
and
jmp
decb
add
jp
ja
fs
int
lret
push
cwtl
jb
stc
cmpl
pushf
add
ret
adc
pop
xchg
dec
ljmp
xchg
rclb
into
pop
in
mov
and
sbb
jp
xor
ret
pop
in
std
addr16
adc
cmpsl
ljmp
xchg
mov
mull
ljmp
stos
out
fs
pop
ss
icebp
jmp
fstl
fldenv
fmulp
icebp
or
jmp
push
cmp
inc
movsl
sub
repnz
fidivl
xlat
push
addr16
xor
jg
pop
jle
negl
je
mov
jne
test
or
xor
addb
stos
mov
xlat
ja
push
add
jns
sub
fmull
adc
sub
fidivs
xor
pop
add
sbb
mov
fildl
or
fsts
ret
sbb
outsb
iret
pop
or
sbb
retw
in
into
sahf
fistpl
mov
daa
daa
mov
mov
adc
imul
and
test
js
lds
cmc
popf
xchg
jg
imul
stc
sbb
mov
insb
pusha
pop
scas
xor
xchg
mov
out
inc
out
test
xchg
inc
and
mov
bound
pusha
mov
push
outsb
jg
lea
sbb
push
push
push
pop
das
ficomps
aas
sbb
stc
imul
leave
add
loopne
jbe
xor
dec
mov
lock
seta
pop
lods
out
imul
lcall
mov
and
push
fstpl
add
mov
mov
test
adc
daa
pop
rcl
pop
jecxz
and
loop
ds
xor
mov
pop
stc
mov
mov
pusha
mov
mov
push
addr16
push
rcr
fbld
outsb
xlat
imul
sbb
test
mov
mov
sbb
and
movsb
aad
pusha
cmp
fdivrp
iret
lret
pop
and
mov
mov
xchg
shl
mov
subb
test
std
dec
push
mov
int3
and
mov
aam
mov
xchg
jns
int
mov
or
aam
inc
and
iret
mov
clc
cld
mov
lds
push
into
test
loopne
cmp
push
sti
sbb
test
inc
pop
and
mov
cmpb
fwait
pop
sub
mov
arpl
fcom
sbb
cli
inc
add
mov
adc
aas
dec
xor
fildll
mov
stc
popf
pop
jg
push
andl
cli
and
jle
cmp
ret
jp
ljmp
mulb
jae
loope
mov
movsb
push
movsb
mov
testl
pop
imul
mov
sbb
test
dec
push
adc
test
cmpsl
fistpll
or
flds
mov
ss
jle
push
orl
pop
in
and
mov
lods
aam
adc
rcrb
fstps
cmp
sub
ljmp
jle
popf
ret
jl
mov
lret
sbb
out
push
or
mov
jge
pop
stos
sbb
cmc
ja
or
jle
sub
rcll
stc
xchg
loope
mov
shl
mov
lret
sahf
xor
out
or
and
rorl
xor
push
mov
js
test
adc
pop
movsl
cld
pop
movl
or
fisubl
and
add
and
lock
lcall
jo
pop
push
ljmp
mov
add
ja
or
stc
mov
cmc
pop
ds
fwait
in
vpmacsdd
mov
addr16
out
mov
mov
and
jl
jl
or
fstpl
out
mov
jecxz
rcl
dec
sub
jb
in
inc
repz
sub
addb
sbb
icebp
jno
adc
call
add
xor
lea
pop
lea
push
dec
ret
mov
mov
fbstp
sub
cmc
add
and
push
jne
out
cld
std
sbb
pop
jne,pn
add
xor
sbb
dec
xor
cmpsl
jg
adcb
sarl
ljmp
jb
nop
xor
pop
rorb
test
test
mov
push
popf
mov
or
xor
mov
into
jge
adc
sbb
dec
ret
xchg
push
inc
or
movsl
setbe
dec
pop
ret
ret
xorb
sbb
sbb
jecxz
cmp
lea
cmp
jno
repnz
jle
call
add
aam
mov
and
pop
xchg
mov
push
shll
sbb
fildll
icebp
xchg
test
shrb
pop
hlt
cmp
mov
pop
outsb
dec
mov
lcall
jl
fucomip
andl
lock
dec
xchg
or
andb
dec
inc
cwtl
sbb
push
xor
xor
ljmp
icebp
ja
arpl
daa
ljmp
adc
mov
sub
push
jl
mov
inc
jecxz
sub
xor
pop
xchg
ret
jl
jmp
lret
mov
lret
icebp
or
fwait
in
xchg
cmp
jbe
xlat
cmpsb
fdivl
out
mov
or
fldl
pmulhuw
dec
adc
insb
sbb
xchg
cmp
aas
fisttpll
adc
push
add
nop
in
repz
enter
xchg
inc
in
xor
and
das
and
repnz
jae
ss
add
xchg
xor
adc
aam
sub
adc
enter
cwtl
xor
mov
pop
cmpsl
test
sti
fadds
bnd
int3
xchg
mov
or
xor
dec
nop
xor
popf
sbb
inc
leave
cmp
shlb
into
stos
inc
sti
mov
mov
dec
outsb
lock
mov
test
cmp
test
shll
and
mov
add
jmp
cltd
sub
mov
cmp
jg
out
or
cmp
sub
jbe
mov
sbb
and
je
pop
scas
inc
adc
repnz
fs
push
repz
shl
sbb
sub
sbb
push
and
xchg
mov
and
repnz
fmul
mov
jp
dec
hlt
ss
xchg
dec
pop
jno
fbld
hlt
mov
test
jmp
pusha
mov
jl
mov
or
and
ss
ljmp
icebp
cmp
xchg
jns
pushf
xchg
popl
add
mov
and
xor
repnz
sti
outsl
xchg
mov
testb
vpshab
mov
lret
and
lret
lea
pop
ljmp
loope
push
stos
sbb
pushf
int3
out
loope
jge
frstor
inc
sub
movl
cmc
inc
mov
xor
aas
pop
inc
scas
nop
mov
and
decl
sub
ret
dec
pop
insb
sahf
mov
cmp
jne
jmp
movsb
into
inc
testl
rorb
iret
dec
insl
jp
jg
mov
mov
xchg
je
cmpb
test
sub
xor
jp
jl
imul
jg
jmp
push
lret
fisubrl
cmp
push
sub
leave
cmp
les
sbb
or
cmp
mov
jbe
mull
inc
sub
cmpl
mov
stc
fcomi
loop
mov
and
sbb
xchg
mov
cli
mov
loop
test
push
lods
testb
imul
shl
hlt
sub
mov
dec
xchg
dec
dec
addr16
jge
inc
shll
xchg
in
and
repz
dec
pushf
addr16
or
xor
leave
je
repz
inc
stos
clc
or
popa
jl
mov
push
mov
movsb
cmp
enter
js
xchg
aad
push
jecxz
pusha
clc
xchg
or
push
je
popa
dec
inc
cmp
out
movsl
mov
push
test
inc
test
add
mov
stos
lods
mov
xor
and
jnp
or
adc
mov
adc
loope
rclb
mov
sub
sub
out
lock
bound
addr16
mov
cld
push
pop
clc
cmpsb
jp
icebp
adc
fldenv
mov
mov
pop
lcall
out
sub
in
dec
in
inc
int
in
jmp
repnz
mov
push
fwait
inc
jbe
jnp
ret
inc
pop
or
or
js
pushf
sbb
mov
cmp
cmpsl
dec
inc
rorl
add
test
daa
or
sbb
popf
repz
sbb
inc
loope
jmp
dec
xchg
pop
add
sbb
shrl
xor
js
lds
fwait
add
add
neg
stc
pop
pop
dec
lcall
and
xchg
sbb
jle
mov
adc
jecxz
sbb
xchg
dec
cwtl
pop
cmp
push
cmp
fwait
mov
les
cmp
mov
enter
jo
std
adc
js
out
xor
bound
xchg
ret
in
xor
cmp
and
cmp
stos
cmp
push
fdivrs
cmpsl
mov
adc
cwtl
insl
cld
ret
pusha
cmp
in
mov
fcmovu
test
loopne
hlt
push
rcrl
imul
imul
rclb
sub
js
adc
fnstsw
adc
jmp
xor
mov
mov
jg
adc
lcall
test
push
daa
or
xchg
aad
loop
jle
mov
lock
jge
push
mov
push
pop
in
sub
sub
testb
cmpsb
bound
pop
push
jb
ja
jnp
adc
int3
lcall
out
add
mov
ss
icebp
fildl
xor
xchg
mov
cltd
mov
addr16
out
mov
aaa
popf
outsb
std
add
fiaddl
pop
aam
int3
ja
adc
xchg
jo
push
pop
xlat
mov
popa
mov
mov
adc
call
aad
loope
mov
addr16
ljmp
dec
push
data16
cmp
pop
scas
pop
es
lods
fs
mov
mov
bound
or
lret
ss
jnp
popw
iret
test
ja
jns
es
fcom
xchg
ja
and
push
push
add
lea
into
cmp
sub
das
add
leave
sahf
stos
fnsave
jno
test
add
lods
mov
clc
in
jp
rolb
xchg
pop
add
into
pusha
and
mov
sub
adc
xchg
inc
mov
sbb
mov
int3
or
movsb
xchg
arpl
push
xchg
insb
fisubl
sbb
lods
push
push
push
fisubs
lods
les
sub
out
in
sbb
lahf
shll
fisttpl
sbb
mov
fldcw
pop
cltd
in
jae
arpl
dec
lahf
jns
hlt
cmc
jns
jecxz
aad
lahf
sub
rorl
and
mov
xchg
rclb
add
and
sub
sub
adc
aaa
xor
xor
xlat
pop
addr16
ja
pop
hlt
and
dec
testb
and
xor
sub
imul
btr
mov
and
and
popf
fsubr
rcll
add
iret
fs
mov
pop
push
sub
pslld
negb
sarl
shll
xchg
mov
sub
pop
jno
add
pop
cmc
das
int3
repnz
or
and
mov
jecxz
dec
push
mov
out
shl
jle
mov
sub
fists
mov
mov
dec
js
xor
aas
scas
insl
loope
push
jl
jge
insb
mov
cmp
mov
or
dec
bound
adc
xchg
les
aad
inc
mov
adc
loopne
xor
arpl
dec
lea
lea
jle
push
push
and
ficompl
repnz
rclb
xchg
and
jmp
cmpsb
mov
add
dec
mov
mov
mov
loop
sub
lods
fisubs
js
test
cs
jno
int
mov
out
sti
ret
fbld
push
push
jp
pop
data16
fadds
sub
loopne
mov
push
fwait
adc
dec
sbb
add
jbe
jg
cs
adc
loop
mov
dec
stc
je
add
mov
out
lods
adc
mov
mov
jbe
dec
test
inc
stos
bound
cld
stos
cmp
into
jnp
pop
pop
cs
ret
out
jae
xchg
adc
mov
push
inc
scas
push
inc
sub
aam
pop
cs
xor
cmc
cmp
inc
mov
scas
testb
push
je
imul
repnz
popa
outsb
and
add
lds
decl
repnz
or
movsl
inc
out
cmp
hlt
mov
cs
test
imul
push
dec
mov
clc
jge
xchg
mov
mov
mov
bound
and
and
loopne
cmp
aad
inc
pop
adc
or
test
jp
add
fildl
test
leave
mov
in
shl
ret
lds
sbb
dec
cmp
int
leave
enter
mov
cmp
dec
icebp
adc
mov
sbb
xchg
aam
gs
fstps
and
mov
xlat
or
arpl
fiaddl
fwait
sysret
xorb
mov
insl
sarl
sti
rorb
mov
inc
lock
mov
aam
or
or
mov
inc
pushf
in
and
add
sub
addr16
loope
cmc
outsb
xchg
push
sub
mov
loop
or
sub
mov
xorps
lret
fdivp
jae
fstl
pop
rcl
rolb
or
sbb
add
pop
popf
loopne
test
cli
pushf
or
push
jle
lret
xchg
sub
adc
xlat
or
mov
cmp
daa
jbe
inc
nop
out
inc
or
adc
push
push
ror
out
mov
fimuls
push
mov
jae
stos
out
pop
pop
sarl
mov
clc
jae
xchg
jbe
xor
add
out
int3
cltd
dec
lcall
jo
ffree
sub
cmp
dec
std
xchg
sub
mov
xchg
sahf
cs
jne
jo
lods
lret
ret
cmp
add
xlat
bnd
or
rcrb
pop
or
sarl
ja
pop
lahf
xor
mov
mov
ss
xor
push
rcrb
dec
test
es
lea
cmp
push
jge
stos
arpl
push
xlat
sbb
xlat
jbe
pop
mov
mov
dec
sahf
and
jecxz
xchg
inc
xorb
mov
insb
jns
sti
mov
fdivrl
gs
ret
and
scas
cmp
adc
mov
in
or
inc
inc
xchg
push
pop
and
pop
fstpt
jo
sbb
shrb
or
imul
sbb
xor
fdivrs
mov
arpl
shll
jno
cmpsb
aaa
adc
mov
xor
push
sbb
test
and
jo
outsb
xor
adc
jp
adc
filds
dec
xchg
bound
mov
bound
push
and
aam
sub
in
arpl
jo
cld
or
mulb
nop
in
mov
xor
test
jnp
icebp
movsb
sub
xor
mov
stos
xor
mov
aam
test
aam
cmp
ret
stos
ds
aas
mov
notl
cmp
jns
mov
push
adc
mov
stos
les
stos
xor
aas
pop
push
xor
lret
leave
popf
inc
scas
push
and
shrl
test
std
scas
loope
test
ffree
sbb
in
adc
fiaddl
xor
repz
cmp
int
int3
out
scas
mov
mov
pop
cmpsl
cmpsb
xchg
or
cmc
pop
or
mov
shl
pop
les
pusha
inc
sub
inc
mov
sbb
mov
push
testl
xchg
mov
pop
out
cmpsl
push
pop
jg
lods
adc
xchg
cmp
imul
and
ljmp
jmp
sbb
fildll
or
sbbl
stos
pop
mov
outsl
in
int3
add
mov
xor
push
sub
pop
jb
mov
gs
scas
repz
in
and
out
dec
inc
inc
repnz
sub
mov
pop
sub
sub
movsl
test
in
mov
dec
fisubrs
adc
hlt
jne
cmp
es
or
adc
push
stos
sahf
dec
pop
sbb
nop
mov
jbe
fldcw
lret
loope
cld
movb
decb
int
xchg
into
and
subb
dec
and
xor
loop
jg
out
dec
fstpl
in
push
cmp
xchg
jno
ds
xor
cs
into
loope
cmp
xlat
cmpsb
and
mov
stos
shll
sub
aaa
shlb
pop
sub
rcrb
pop
pop
mov
into
lcall
test
imul
ror
dec
mov
ret
dec
xor
jg
popf
adc
pop
clc
cs
mov
movsl
inc
xchg
int
lcall
fisubrs
and
lcall
pop
inc
mov
cmp
fldcw
je
lods
inc
xor
in
stos
js
mov
addr16
xlat
outsb
les
jp
outsb
out
inc
popa
fsubs
popl
int
cmp
or
nop
fistps
push
add
jle
and
lock
cmp
std
jmp
loop
push
dec
dec
in
mov
fsubr
mov
mov
daa
fdivrl
enter
movsb
xorl
push
pop
mov
pop
mov
out
jbe
push
jo
gs
das
stc
fnstenv
mov
iret
fmull
repnz
hlt
pop
pop
jae
imul
pop
imul
scas
outsb
jge
imul
psubsw
mov
jg
mov
adc
cmp
js
fdivrl
mov
int
jb
imul
fiadds
ljmp
or
enter
sbb
mov
lods
nop
or
jl
das
outsl
jns
dec
ja
popa
loope
cld
and
je
sahf
scas
fldl
or
sub
pop
pop
lods
add
push
aaa
pop
cmp
jno
xchg
lds
pop
push
fcomps
ss
in
jge
je
mov
xchg
push
jp
inc
jb
andb
gs
cmp
sahf
pop
decl
sub
or
in
sub
es
xlat
int3
sahf
insl
test
mov
pop
out
adc
stc
test
pop
mov
or
lock
fidivl
add
outsb
in
jmp
dec
pushf
popf
dec
pop
lea
jae
push
leave
and
fisubl
ljmp
push
jae
repnz
addr16
data16
mov
push
pop
adc
adc
and
or
sbb
and
mov
jae
aas
shrl
lock
into
push
jle
lahf
sbb
insl
xchg
dec
push
push
adc
cmpsb
xchg
addr16
int3
mov
shll
mov
and
push
sub
or
push
lahf
xchg
mov
adc
mov
mov
push
mov
sbb
mov
sahf
fbstp
xchg
and
mov
sub
in
pushf
gs
enter
xchg
imul
mov
inc
xchg
pushf
aas
adc
pop
lret
xchg
or
insl
jl
ljmp
stos
cmp
xchg
std
cmc
xor
mov
mov
dec
and
out
xor
bound
addr16
push
xchg
xor
shll
popf
inc
test
xchg
pushf
pop
fldcw
jo
add
jg
cs
mov
loope
call
cmc
add
push
addr16
call
pop
or
and
pusha
xor
inc
loop
leave
cwtl
pop
lret
cmp
dec
and
xor
sbb
xor
or
in
cmp
daa
dec
outsl
mov
jecxz
sub
xchg
fldcw
push
jns
cmp
mov
mov
aas
push
shlb
jno
xchg
in
cwtl
test
sub
enter
ret
out
sti
sbb
adc
out
xchg
xlat
stos
push
sahf
dec
int3
push
add
aam
sub
mov
out
enter
sub
adc
push
mov
fsub
in
jns
fstp
inc
aas
ffreep
mov
roll
movsl
rorb
mov
push
lret
fisttpll
rcll
fs
jns
icebp
andb
outsl
bnd
loopne
sbb
out
mov
mov
scas
insl
insl
imul
lds
pop
xchg
test
inc
jno
outsl
lods
and
add
pop
xchg
lods
sub
xchg
or
popf
dec
mov
push
xchg
ret
inc
test
ljmp
or
icebp
sbb
pop
flds
jb
mov
xor
out
jmp
into
fcmovbe
sub
jb
clc
pop
mov
mov
int
pusha
inc
sub
cmp
loopne
imul
fs
mov
xchg
and
leave
inc
push
bound
js
mov
cmpsl
cmp
xchg
sbb
decb
ss
mov
loopne
movl
and
fsubs
popa
cmp
mov
xorl
xchg
dec
imul
jle
dec
pop
nop
scas
in
lods
mov
rcr
int3
fs
jne
cmp
push
cwtl
mov
pop
cmp
xchg
lcall
inc
jb
mov
mov
jecxz
dec
pop
push
jl
pop
push
mov
cmc
fidivs
xor
push
mov
push
leave
hlt
out
xor
sub
out
mov
xor
insl
and
pop
repnz
jo
pop
sub
test
and
aaa
sbb
xor
out
or
mov
ds
pop
fsubs
xor
pop
aam
mov
fdivrl
dec
xchg
pop
imul
inc
mov
mov
mov
inc
loope
test
mov
push
push
pop
xlat
jno
pop
xor
or
stc
jp
mov
rcrl
dec
daa
lock
add
mov
sbb
cmp
pushf
mov
movsl
negl
cld
cmp
sbb
jns
outsb
test
jecxz
ss
sub
pop
push
jmp
xor
aam
in
in
adc
xlat
push
fwait
out
imul
sub
jns
fwait
push
test
add
out
dec
dec
mov
sub
mov
jmp
push
in
lret
jnp
add
cmp
repnz
and
lcall
test
jo
cmp
inc
cmp
pop
fwait
lret
or
popf
jge
call
mov
add
orb
dec
ja
push
out
mov
in
push
add
loop
addr16
jle
data16
testl
cmp
int
push
dec
fsubr
mov
dec
data16
jle
jle
ret
test
or
jbe
stc
lret
insb
pop
and
mov
sub
jo
pusha
jbe
pop
jle
xor
in
cld
das
dec
inc
test
fiadds
ret
sbb
sarl
movsb
leave
fisttps
test
jne
push
aam
dec
mov
rcrb
rolb
cli
test
pop
jns
mov
dec
xor
sub
pusha
dec
aad
ja
fsubl
jo
inc
sbb
cltd
dec
sbb
sub
or
cmp
dec
lea
mov
and
sub
test
push
fcom
cmpsb
lds
insl
nop
fists
addl
xchg
xor
jae
into
adc
pop
jmp
sub
hlt
enter
sub
pop
pop
xchg
pop
xchg
cmp
outsb
xor
data16
pop
rorb
and
js
mov
inc
mov
ret
cmp
sub
cltd
shrl
inc
xchg
fsubrl
out
dec
sub
mov
mov
stos
inc
push
pop
pop
pushf
jl
cmc
dec
cmp
sarb
loop
shrb
cmp
jg
imulb
das
dec
stos
into
aas
lcall
xchg
push
jl
xchg
inc
out
sbb
dec
push
mov
lods
mov
mov
cmp
and
ret
dec
test
xlat
notl
fwait
inc
dec
loopne
sub
popa
jb
ss
sub
test
mov
and
hlt
inc
inc
ja
xor
out
loop
daa
adc
push
xor
cmpb
mov
stos
mov
jg
test
mov
mov
pop
outsb
xchg
jle
cmp
mov
aam
jb
scas
push
pop
fbstp
cmp
movsb
sub
std
call
and
fst
push
dec
xor
mov
pop
xchg
sbb
mov
faddl
cmpsl
fistl
push
mov
aad
sti
arpl
inc
mov
fldcw
test
icebp
sbb
fisttpl
mov
fdiv
xchg
mov
cmpb
inc
mov
mov
cwtl
out
pushf
pushf
or
xchg
push
push
jl
cmp
test
nop
cmp
mov
pop
jmp
sub
dec
mov
into
enter
jle
dec
lods
inc
push
lods
push
movsl
and
outsl
jecxz
push
mov
imul
sub
cmpsl
xor
data16
aaa
sub
roll
shrb
sbb
and
cli
push
jge
sbb
xchg
or
rcrb
sbb
or
aad
mov
mov
test
mov
mov
xor
aas
insl
push
in
xchg
push
out
lahf
movsb
pop
sbb
jecxz
in
adc
pop
aad
xlat
pop
int3
cwtl
cmp
dec
mov
push
mov
rcrb
das
inc
fcoml
xor
lds
pushf
mov
lcall
inc
and
cmp
subl
pop
inc
jo
xor
mov
xchg
std
jns
dec
push
mov
mov
popa
sub
icebp
sarl
es
jbe
add
aas
sub
imul
clc
cmc
mov
lret
iret
scas
push
sub
lret
mov
xchg
sbb
xchg
jno
cld
dec
push
sub
je
dec
xor
fisttpll
lods
jno
repz
mov
sbb
out
jb
adc
lea
out
lods
pop
xchg
in
sub
outsl
mov
js
push
js
stc
inc
lret
push
jg
cmp
inc
popf
ss
mov
xchg
inc
insb
loopne
mov
adc
jnp
or
mov
mov
jae
cmp
dec
jp
jo
test
cmpsb
mov
enter
cld
inc
rcll
cs
clc
and
leave
mov
jno
sbb
inc
xor
fsubr
push
rol
lods
adc
mov
and
int
sbb
and
add
rclb
pop
mov
sub
pop
or
jecxz
dec
push
cli
inc
bound
inc
in
push
enter
mov
dec
jg
out
push
xchg
movsl
jb
xor
in
pop
push
repnz
shrb
aad
aam
mov
cmp
or
add
incl
call
fsubp
xchg
cmpl
jno
mov
xchg
dec
dec
push
push
dec
fimull
mov
dec
mov
dec
pop
lock
jo
mov
or
sub
inc
mov
insb
mov
pop
lods
xchg
cltd
mov
cltd
ficompl
imul
dec
xor
pusha
js
mov
inc
jno
dec
into
xor
ljmp
pushl
into
xchg
adc
outsb
jp
jbe
fs
add
dec
or
daa
loop
mov
shll
fsqrt
lds
je
shlb
pop
dec
or
sbb
popf
inc
stos
xcrypt-cfb
cmpsl
mov
cmp
jae
xabort
xor
cmp
and
in
rcll
das
pop
daa
inc
mov
adc
sub
loopne
jbe
inc
sbb
popf
ds
pop
sbb
repnz
js
cmp
jle
inc
jmp
sub
push
inc
push
cld
mov
dec
add
and
dec
mov
xor
inc
sub
dec
sbb
das
ja
negb
outsl
and
xchg
je
inc
mov
push
lar
in
dec
xchg
mov
push
and
xchg
xchg
inc
and
jg
cs
sbb
add
xor
add
sub
add
pop
outsl
fwait
aaa
sbb
lcall
dec
rcrb
vmovntps
loop
push
jno
fsubl
jmp
mov
adc
scas
add
enter
lods
mov
jmp
sub
add
aas
cmp
inc
mov
mov
rcrl
aaa
mov
cmp
xchg
xchg
xor
int
inc
test
lods
cld
push
sbb
pop
sub
push
mov
fcmovu
pop
sub
cs
mov
mul
pop
sbb
pop
aaa
pusha
lcall
lods
shll
pop
xchg
fisubrs
push
xlat
icebp
out
cmc
push
xor
sbb
ret
add
sub
jp
dec
mov
mov
sahf
lock
mov
in
in
fwait
gs
mov
aam
push
mov
xor
inc
adc
jp
ret
cmp
or
fadds
xchg
add
adc
mov
sbb
lds
inc
test
lahf
cmp
mov
jecxz
adcb
mov
xchg
inc
pop
cltd
cmp
pop
mov
inc
lcall
fstps
jl
loope
jg
test
inc
and
loopne
jecxz
xchg
into
int
mov
sarl
nop
xor
and
lahf
xlat
dec
out
jns
in
or
jnp
icebp
sarl
sbb
dec
sub
mov
cltd
jbe
xor
add
enter
pusha
xor
movsl
mov
into
sub
mov
mov
pop
cmp
nop
sarl
adc
sub
pushf
xor
sub
push
mov
pop
inc
mov
xchg
dec
add
or
lret
cld
les
scas
mov
inc
out
mov
xchg
inc
lds
adc
cmp
cmp
std
jmp
ljmp
push
outsb
roll
sbb
mov
ds
fildl
mov
xchg
jecxz
or
xchg
gs
jb
shrl
and
add
inc
xor
shl
cmpsl
fdivl
test
pop
movsb
sub
adcl
mov
imul
adc
or
fcomps
cltd
sti
push
pop
inc
pop
test
add
push
stc
call
shll
shlb
movsb
sub
filds
mov
lods
rcrb
movsl
xchg
call
xchg
daa
shl
push
sub
xchg
mov
dec
xor
iret
mov
mov
jne
sbb
es
sub
dec
cltd
in
cmp
inc
push
push
cmp
mov
test
xchg
pop
adcb
sti
fwait
dec
mov
iret
test
fisubl
nop
dec
es
jnp
mov
sub
sbbl
call
loope
clc
aad
call
sub
xor
sub
test
dec
leave
jp
xchg
fstl
fs
or
jp
and
mov
dec
dec
ja
aad
and
aad
and
adcl
push
int
loopne
and
lods
xchg
sarl
mov
das
popa
mov
xchg
sarl
sub
in
outsl
insl
add
mov
jb
repz
push
inc
sbb
movsl
test
and
iret
data16
imul
push
sti
insb
sbb
push
jbe
mov
xchg
fsubl
sarl
rolb
pop
ljmp
mov
mov
cltd
pusha
loop
adc
jno
mov
push
imul
sbb
imul
push
adc
fcoml
fdivr
xchg
popa
sub
sahf
jp
pop
and
mov
idiv
repnz
int3
dec
jmp
jle
shl
cmpsl
push
insl
dec
rclb
or
ss
dec
cmpb
clc
outsb
add
repz
in
lods
add
dec
jl
and
cmc
push
xchg
adc
imul
js
fs
outsb
sbb
insl
push
push
int
pushl
jae
sub
test
lret
movb
sbbl
or
and
sbb
hlt
sbb
fnsave
loope
ret
pop
insb
jg
push
imul
out
jnp
cmp
adc
add
inc
inc
nop
test
mov
pop
or
inc
fisubrl
insb
cmp
inc
nop
sub
lea
lock
mov
movsb
faddl
ss
pusha
mov
sti
es
shll
mov
mov
or
jae
push
or
insl
mov
idivl
inc
fdivrl
and
sti
jbe
mov
insl
cs
jo
jp
lcall
lods
push
outsl
cli
ljmp
xor
lock
adc
mov
das
xor
xchg
loop
ret
cmp
push
jle
out
add
sbb
int
leave
xor
or
or
dec
das
inc
stos
xchg
icebp
add
dec
adc
jp
test
push
xor
popl
mov
jns
dec
xor
bnd
and
push
and
out
push
hlt
push
add
and
inc
lret
mov
hlt
jp
sub
lock
loop
lock
mov
fs
inc
adc
add
rcrb
bound
int
clc
dec
and
xor
xchg
mov
mov
into
andb
repz
inc
fstpt
add
aas
add
adc
popa
mov
cld
mov
push
push
sahf
push
lods
inc
repnz
data16
pop
icebp
and
cwtl
lods
xchg
dec
mov
shll
pop
scas
mov
jo
ret
and
imul
xlat
movsl
dec
pusha
mov
inc
xor
lock
xchg
jl
xchg
sbb
lret
aaa
push
out
pop
or
push
dec
mov
or
jbe
lds
sbb
pop
imul
dec
movsb
mov
lock
frstor
scas
jl
fwait
inc
dec
fwait
inc
dec
or
movsb
sub
add
cmpsb
mov
and
xchg
inc
cltd
int3
jo
pop
sub
dec
jp
rorl
lret
adcb
int3
ds
cmpsb
xor
lret
jnp
enter
cmc
call
fucomip
xchg
outsl
lods
sub
jp
aaa
adc
sub
push
fldcw
xchg
sub
repz
cli
jbe
je
mov
and
ss
lret
or
sbb
popf
xlat
jle
in
pop
fsubrs
xor
bound
dec
jns
shll
cli
paddw
out
addr16
mov
insb
stos
mov
pop
xchg
add
pop
mov
adc
sub
add
mov
dec
cs
insl
xchg
xchg
inc
sarb
add
or
add
sub
push
or
dec
jl
or
testl
mull
adc
or
fbld
hlt
fcompl
inc
imul
cld
test
add
jb
mov
mov
pop
loopne
sbb
lods
lret
push
mov
sbb
jl
pop
dec
mov
lahf
sti
jns
and
push
mov
leave
divl
shll
cmp
or
call
xor
out
das
clc
test
inc
pusha
or
out
fadd
cltd
add
pop
adc
mov
test
arpl
dec
loop
push
cmc
rorl
lods
xchg
fstpt
add
clc
ficomps
push
add
or
cmp
add
jne
mov
inc
pop
adc
sbb
dec
ljmp
aam
mov
and
add
xchg
sub
push
or
lock
gs
adc
jle
or
push
loopne
push
mov
out
addr16
jle
jecxz
sub
sub
out
sub
jnp
mov
ja
test
jmp
pushf
pop
out
in
add
mov
jmp
pushw
clc
pop
pop
cmp
dec
push
pop
cmp
outsl
sbb
xchg
jmp
inc
aaa
or
mov
decb
imul
xor
insb
es
xchg
sub
xchg
cwtl
rorl
hlt
add
xchg
in
adc
xchg
jg
sub
mov
xor
ret
inc
jns
lcall
add
out
fs
roll
mov
or
repnz
and
adc
les
mov
jg
cltd
test
nop
in
jl
out
pusha
pop
test
jo
pop
andb
and
mov
loopne
movsl
stc
pop
push
idivl
jl
mov
ret
imul
add
and
mov
mov
cld
push
sbbw
divb
scas
stc
inc
out
dec
mov
sub
out
sub
add
ss
je
push
mov
mov
sbb
fisttpll
test
xor
push
pop
repz
je
hlt
mov
loopne
dec
aam
adc
push
or
lret
inc
push
stc
dec
push
arpl
jmp
inc
or
xchg
dec
adc
outsl
jo
cmp
push
and
imul
mov
mov
inc
sub
mov
mov
mov
or
mov
repz
mov
scas
mul
stos
call
jo
mov
sahf
mov
call
mov
mov
xlat
sarl
pushf
mov
std
in
lret
and
loope
pop
mov
pop
mov
popl
aas
cmp
sub
jmp
aaa
jecxz
test
cwtl
clc
andb
js
pop
sbb
lods
xor
sub
insl
scas
mov
push
dec
mov
aad
xchg
jle
adc
inc
cs
jmp
mov
icebp
mov
dec
scas
jb
jmp
je
mov
mov
enter
sub
clc
rcr
stos
loope
add
shl
mov
stc
pushf
xchg
sub
fdivs
lods
add
testb
xchg
imul
ljmp
xchg
dec
cltd
cmp
pop
or
loope
sub
xor
inc
push
leave
mov
test
es
loope
xchg
out
ss
iret
jno
jb
popf
movsl
mov
fcmovbe
scas
inc
pop
mov
push
add
ret
dec
mov
mov
lock
lods
ds
push
cmpsl
outsl
ret
sbb
mov
jge
dec
das
pop
mov
jmp
out
mov
sbb
shlb
push
addb
jbe
or
or
enter
xor
sub
dec
mov
iret
int3
mov
mull
pop
cmc
out
dec
jg
xchg
inc
mov
sub
cmp
fdivs
mov
sbb
and
jmp
sub
push
das
add
mov
xlat
sbb
ret
and
jp
fcoml
imul
in
loop
mov
dec
dec
cs
inc
jne
shlb
xlat
jge
test
sti
cmpsb
mov
inc
adc
lods
in
les
lods
push
outsb
push
and
push
xor
in
leave
xor
scas
cmc
les
leave
aaa
ljmp
int
adc
mull
mov
popf
shr
out
jp
loop
mov
mov
sti
dec
into
jb
add
fnstcw
push
icebp
loopne
xor
xchg
pop
xor
mov
pop
call
jl
fsubr
push
lahf
lds
jbe
inc
add
out
mov
leave
mov
nop
lret
add
scas
cld
sbb
sbb
loop
xchg
mov
mov
test
adcb
inc
add
stos
xchg
mov
fneni(8087
jbe
rcr
lret
call
jp
aad
jo
mov
std
and
pop
push
cmc
mov
and
fisubs
dec
push
xchg
scas
mov
rcr
enter
orb
mov
std
lret
stos
cwtl
xchg
mov
pop
sub
dec
adc
sub
cmp
std
fdivs
out
call
test
cmpl
data16
out
push
js
xchg
cmp
mov
xorl
xchg
mov
jg
sbb
xor
adc
sub
jne
add
int3
aad
add
divl
xor
in
jmp
scas
gs
aaa
js
add
jne
push
es
arpl
sahf
sbb
repnz
arpl
in
dec
fs
inc
insl
scas
sti
or
ljmp
push
sti
xor
xlat
das
test
pop
popa
mov
dec
mov
cs
imul
mov
cltd
xlat
lcall
test
and
insb
dec
cltd
add
ljmp
test
jo
clc
test
lock
push
mov
popl
dec
push
adc
add
negl
or
sti
rcll
cmovge
dec
fwait
xor
push
dec
mov
dec
mov
cmpsl
insl
sbb
sub
into
cmp
into
mov
push
ss
dec
mov
sahf
mov
xchg
jmp
add
push
cli
arpl
sarb
lods
adc
add
mov
jge
mov
sbb
adc
push
loope
cmp
fwait
imulb
inc
aad
jae
aad
insl
push
jb
push
mov
pop
mov
test
mov
push
pushf
insl
into
or
mov
shlb
xchg
mov
mov
xor
jge
mov
test
mov
pop
lea
fnstsw
pop
xlat
push
adc
pop
dec
popa
scas
mov
push
xor
jp
movsl
das
mov
and
push
mov
out
loopne
scas
lahf
fcmove
pop
lea
inc
pushf
cmp
ss
gs
test
xor
cltd
add
lods
add
push
idivb
out
inc
xor
pop
ja
xchg
xchg
pop
aad
scas
cmpsl
ds
not
imulb
sarl
pushf
mov
jns
xor
jmp
xchg
nop
dec
push
in
sub
repz
adc
insb
popl
rclb
jb
repz
ret
iret
xchg
mov
out
fs
push
fxam
into
roll
dec
xchg
cmpsb
js
cmpsb
dec
lods
mov
iret
mov
push
jmp
adc
and
cmpsb
pop
xchg
xor
in
scas
push
roll
xor
push
loopne
sub
mov
mov
fidivrl
je
mov
dec
lock
dec
into
das
xchg
sub
dec
daa
lods
gs
fcomps
dec
cmp
pusha
repz
divb
dec
inc
dec
push
adc
cmpsb
subb
daa
iret
mov
jns
clc
or
cmp
andb
in
xchg
push
push
cmp
idivl
lcall
mov
sbb
push
dec
push
adc
lcall
cltd
scas
or
push
cmp
xor
and
xor
sbb
je
adc
jl
xchg
cmpsb
xor
push
ss
cmp
fmuls
sbbb
movsb
xchg
dec
lret
sti
ret
mov
dec
cwtl
lret
bound
lret
jne
sbb
jb
adc
je
bound
add
inc
not
in
dec
xchg
xor
xchg
mov
mov
imul
testl
stc
ljmp
jg
cli
movsl
cmp
js
inc
insb
mov
push
push
aad
push
bound
mov
push
push
out
fucomi
movsb
add
pop
mov
aaa
incl
or
imul
mov
mov
xchg
add
push
cs
arpl
in
cmp
sbb
lahf
cmp
push
jmp
jge
pop
jo
and
sub
add
fsubs
sbbl
sbbb
imul
sub
push
jl
mov
and
mov
sub
lods
jge
mov
and
fsubrs
ja
mov
mov
inc
sbb
inc
sti
ficoms
loop
fldenv
fidivs
jnp
fisubl
or
bound
outsl
or
push
jnp
pushf
add
or
loope
dec
mov
inc
gs
setl
bound
sub
shlb
adc
sub
stos
adc
fnsave
jecxz
int
data16
pop
jge
jbe
scas
in
ja
ljmp
lds
xor
call
hlt
sbb
push
push
mov
sbb
stos
data16
mov
inc
xchg
arpl
movsb
jae
sbb
or
inc
add
push
test
bound
test
push
mov
pop
fldcw
push
mov
or
xchg
add
mov
or
add
imull
bound
clc
popf
adc
xchg
push
or
rcll
out
cs
adc
or
sub
push
stos
and
cmp
cwtl
in
jmp
rol
dec
cmp
negb
inc
mov
pop
sbb
enter
jg
mov
sahf
xlat
mov
jno
jecxz
jg
add
sub
stos
lahf
stc
inc
fists
sbb
enter
rcrb
push
xor
mov
out
xor
ret
sub
xor
sub
sub
dec
pop
push
loop
or
es
insb
jne
cld
loope
in
push
mov
movsb
clc
insb
inc
push
je
std
or
adc
mov
sub
sub
sub
and
jmp
xchg
push
addr16
cmp
lcall
jl
movb
or
outsb
mov
pop
fs
push
add
adcl
sbb
in
push
sub
lret
aam
shll
pop
mov
and
or
pop
add
sbb
adc
dec
popf
sbb
xor
xchg
jge
ja
mov
adc
dec
and
adc
mov
movsl
dec
xchg
cmp
fstps
xor
popf
xchg
xchg
loope
inc
sbb
cmp
and
xchg
pop
roll
push
add
sub
repz
push
arpl
pop
rorb
add
xchg
cmp
aas
xchg
sahf
jne
loope
mov
lods
rolb
dec
cmpsl
fldt
mov
rolb
mov
push
fcomps
jle
mov
in
adc
xchg
or
sahf
inc
aas
leave
mov
stos
pop
sub
xorl
jbe
mov
pop
out
adc
inc
inc
cld
daa
push
pop
jno
sub
lea
push
mov
in
adc
mov
push
cwtl
icebp
stos
outsb
sub
pop
jne
out
jno
jecxz
out
insl
std
in
inc
stc
mov
inc
out
and
into
js
add
inc
in
xor
xchg
jp
jp
xchg
sub
scas
dec
loope
inc
fbld
dec
dec
stos
and
cmpsl
or
shl
outsl
daa
gs
jbe
push
xor
jmp
adcl
adc
out
dec
lahf
sub
cmpsl
dec
sub
je
jbe
adc
sub
and
cli
sub
xchg
imul
mov
adc
dec
mov
dec
mov
inc
add
cmp
push
addr16
cmc
push
imul
and
inc
clc
sbb
or
mov
in
xchg
jmp
xchg
cwtl
repnz
dec
dec
add
and
mov
sarl
mov
jmp
lock
and
cmc
adc
push
mov
ljmp
mul
subl
add
imul
lahf
test
mov
mulb
adc
je
mov
lea
cmp
and
repz
xchg
sysexit
fbstp
outsl
mov
stos
int
nop
negl
cmp
mov
out
fwait
outsb
shlb
mov
dec
jb
rorl
jg
adc
inc
out
mov
ljmp
xchg
movsb
imul
cld
outsl
push
test
stc
inc
mov
mov
aas
jmp
cmp
jnp
js
imul
aam
in
cld
nop
jo,pt
imul
jno
ds
lds
int
inc
adc
ljmp
test
sti
jecxz
inc
xor
pusha
rol
or
mov
inc
cmp
jmp
inc
std
pushf
and
setne
scas
test
aaa
mov
xor
jo
or
loopne
sbb
sbb
cmp
xor
sahf
shrb
icebp
sub
cmp
dec
pop
jecxz
outsl
cmp
test
clc
outsl
push
fs
jp
xor
adc
cmp
fidivrs
andb
mov
cmp
pusha
sti
inc
in
add
or
lods
add
sbb
test
inc
arpl
lods
test
xchg
xchg
nop
shl
push
repz
adc
lock
loopne
push
cmpsl
mov
test
cmc
cmp
lret
popa
gs
sub
in
mov
xchg
int
xor
xchg
push
cs
jmp
sarb
lds
cwtl
les
pop
mov
rcr
sub
sub
mov
dec
testl
sbb
jns
xorb
repz
cmpsl
cmp
ljmp
push
cs
test
gs
push
pop
bound
daa
adc
sub
jg
ljmp
push
xchg
dec
add
cmp
cmp
push
pop
mov
mov
outsl
or
test
in
notl
pop
xchg
inc
pop
mov
sub
pushf
jge
jns
push
cld
dec
nop
dec
lock
push
aaa
andb
loopne
popa
or
sub
push
xor
fidivl
push
dec
mov
lret
dec
pop
jg
scas
leave
jno
and
dec
xor
sub
lds
adc
sub
call
es
loop
daa
mov
gs
dec
mov
scas
lods
mov
aaa
test
or
push
ss
mov
ret
jbe
jo
addb
lret
enter
mov
stos
or
aad
incl
sbb
sbb
cmc
cmp
and
jp
cmpsl
or
fidivrl
sbb
jns
mov
xchg
or
ljmp
in
cmp
sbb
pop
xchg
sub
sarb
adc
cmp
sbb
ficoml
daa
add
in
imul
jp
and
sbb
mov
fsubrl
cmc
mov
xchg
push
mov
mov
and
pusha
add
jns
mov
std
xor
inc
arpl
cmp
pusha
jb
ljmp
xchg
jl
push
cmpsb
adc
mov
loope
test
icebp
jl
int3
jne
insl
adc
clc
out
add
xchg
jle
call
lock
mov
orl
jg
inc
adc
cli
mov
cltd
push
lret
sub
test
imul
add
xor
lret
adc
pop
sarl
or
xchg
and
dec
jp
push
mov
inc
xchg
test
sbb
and
mov
adc
jne
sub
xchg
in
sahf
js
loop
sub
fstl
insb
jmp
pop
and
mov
fdivrl
and
pushf
int3
or
pop
inc
icebp
flds
dec
insb
lea
sti
cltd
sbb
into
xchg
fwait
pushl
ljmp
movsl
dec
iret
hlt
movsb
adc
adc
aam
sahf
adc
adc
sub
mov
test
out
mov
xchg
out
sbb
outsl
mov
in
int
mov
vmaxss
test
mov
popa
scas
push
incl
popf
dec
nop
addl
hlt
or
cmc
nop
dec
repnz
jmp
mov
cli
out
push
push
mov
xor
push
jmp
xchg
insl
stc
adc
sbb
daa
into
add
cmp
rcl
push
test
push
mov
out
loop
and
mov
arpl
jnp
in
lods
shll
and
andl
psubd
jge
xor
pop
or
or
pop
mov
lea
cmp
fbstp
inc
xchg
jl
leave
js
lea
inc
repnz
lea
outsl
sbb
dec
repnz
xor
aas
add
sbb
outsb
mov
inc
inc
cld
and
and
movsb
fwait
push
out
enter
enter
jo
xchg
cwtl
pop
adc
or
pusha
or
sarl
or
fwait
out
push
cmp
and
dec
jl
push
andl
pop
pop
xlat
aam
hlt
lods
repnz
adc
outsl
dec
pop
nop
shl
lods
pop
fbstp
shll
xchg
cli
lret
and
das
iret
pop
cs
sti
dec
fisubrl
and
ret
dec
jnp
dec
ss
inc
ljmp
mov
jl
xchg
dec
xchg
lgs
and
or
or
push
test
into
notl
adc
repz
les
pop
xchg
cmp
xor
push
add
pushf
mov
pop
dec
inc
jmp
clc
sub
mov
mov
push
mov
push
mov
jnp
loopne
cmp
push
xchg
das
or
mov
les
mov
jl
jl
pop
sbb
hlt
imul
out
lcall
or
pop
sbb
lahf
adc
ja
mov
insl
xchg
outsb
push
push
xor
loopne
xchg
loop
sbb
popf
pop
and
push
push
decl
add
add
pop
nop
cmp
dec
icebp
mov
jl
push
mov
xor
xchg
insl
mov
lret
cmp
pop
xor
inc
xchg
mov
xchg
or
xchg
push
pusha
pushf
int
xchg
inc
mov
push
sub
loopne
xor
xor
dec
aaa
out
sub
mov
lea
insb
or
sbb
dec
and
imul
out
inc
dec
add
outsl
mov
les
bound
push
shlb
movsl
jl
pop
sub
sub
pop
out
mov
sbb
mov
inc
std
std
sahf
lock
inc
mov
cmp
mov
or
cli
leave
movsb
xchg
jp
leave
or
adc
or
jle
mov
repz
out
movsl
xor
je
cmpsb
cld
aas
xor
adc
sub
push
dec
test
sub
or
mov
addl
push
or
call
imul
fs
hlt
flds
mov
cltd
push
fwait
or
mov
orb
sti
bound
rorl
mov
sbb
popf
mov
inc
icebp
in
cmp
pusha
jbe
sub
fbstp
sub
jg
mov
int
and
sub
pop
jo
aam
dec
mov
fadds
mov
in
pop
test
pop
shlb
hlt
mov
mov
das
cwtl
in
and
or
shrb
rep
cmp
fsts
icebp
sbb
aad
or
sahf
pushf
pusha
adc
in
push
push
cmp
std
add
scas
loopne
xor
insl
loop,pn
aaa
mov
and
repnz
in
out
mov
cmp
jg
push
adc
iret
ret
iret
and
push
iret
dec
adc
lea
jae
mov
pop
sahf
and
ljmp
dec
add
dec
inc
aad
mov
aas
adc
pop
pop
pop
inc
int3
test
jns
and
inc
xor
mov
imul
outsb
xchg
pop
mov
add
pushf
sbb
adc
jns
sub
inc
dec
jo
pop
push
mov
lds
jg
mov
stc
ret
mov
adc
mov
mov
fcompl
jge
nop
scas
aad
mov
sub
jns
or
sbbl
add
or
sub
shl
xor
in
sbb
scas
push
mov
pop
loope
mov
cmc
or
and
jns
cmp
and
fwait
jo
push
cmpsl
in
and
inc
mov
sbb
jne
sahf
adcl
enter
imul
push
cmpsb
jle
cmp
sbb
dec
push
ret
and
lahf
clc
jl
ret
arpl
lcall
lahf
stos
jmp
push
call
jl
popf
sarl
lods
lea
fwait
aam
adc
stos
push
js
dec
jbe
add
inc
cmp
add
lahf
popa
cld
xchg
mov
leave
sbb
rcrb
stos
loope
cmp
mov
mov
ficompl
bound
clc
push
inc
push
push
cmpsl
notl
nop
out
nop
add
nop
leave
push
xor
cwtl
pop
mov
ror
shlb
mov
fcmovb
sub
cwtl
jmp
jne
mov
xlat
wbinvd
cmp
inc
out
fadds
jae
jmp
and
popa
incl
push
inc
push
ret
jmp
cmc
in
vpmacsdd
push
test
ljmp
pop
cwtl
mov
adc
dec
pop
sub
dec
pusha
push
push
jo
sar
jp
cmc
pushl
mov
fwait
div
lock
shr
negb
jne
je
adc
fld
gs
inc
jecxz
jo
cmpsb
fsts
sbb
mov
test
ds
into
xchg
sbb
std
andl
in
fmuls
loopne
xor
ficoms
pop
dec
in
into
sbb
lods
and
dec
lret
cwtl
mov
or
mov
das
in
pop
mov
jns
jo
inc
outsb
lods
mov
mov
inc
adc
out
push
fsub
std
repnz
call
out
push
xlat
inc
mov
mov
sti
leave
jg
pop
stos
and
push
adc
das
aas
popf
jl
mov
push
sbb
clc
cmpb
sbb
mov
popa
repnz
xchg
dec
in
fwait
sub
mov
cmpsl
jne
sub
mov
mov
clc
jge
mov
psrld
imul
stc
pushf
pop
imul
cmp
cmpsl
test
add
push
insl
pop
ret
and
mov
mov
mov
jmp
dec
sub
movsb
paddsw
iret
mov
xchg
out
lods
pop
mov
insb
pop
loopne
loop
fucomp
arpl
lods
pop
mov
jecxz
jg
int3
adcl
pop
inc
les
nop
loope
sar
shlb
inc
cwtl
ret
mov
jnp
aam
xor
jmp
xchg
push
fsubp
adc
sub
dec
cmpsb
std
aad
push
fwait
loop
cs
sub
push
mov
push
sub
dec
int3
add
cmc
mov
push
enter
push
leave
inc
movsl
pop
xchg
imul
adc
aam
pop
cmp
lds
sub
rcll
xchg
ret
aas
xchg
sbb
inc
pop
hlt
pop
mov
add
push
testl
fcoms
xor
sub
cs
cmp
andps
inc
cwtl
ljmp
popf
xor
nop
inc
icebp
push
repz
imul
fnsave
push
mov
sub
pusha
fisubl
jb
inc
mov
jp
xchg
test
cwtl
sub
out
insb
fcmovu
push
mov
jge
in
adc
mov
xchg
lods
jmp
lock
js
cmp
jne
ljmp
lods
shll
aad
test
inc
dec
mov
test
out
dec
inc
gs
or
sub
inc
push
jge
out
dec
mov
dec
ret
ja
xchg
cld
shlb
adcl
mov
xchg
pop
mov
xchg
icebp
lods
xchg
mov
pop
push
adc
pop
ds
clc
xchg
int
push
xchg
push
dec
mov
out
push
int3
pop
cmp
add
iret
out
jns
mov
mov
push
movb
add
cmpsb
inc
in
pop
adc
outsl
add
sub
ja
cmpsl
sub
push
mov
inc
xchg
and
or
out
andb
rorl
xor
mov
sub
cli
popa
mov
call
ret
lahf
jle
pop
pusha
or
out
jge
mov
add
sbb
lods
popa
clc
sbb
mov
mov
mov
mov
shl
add
movsb
pop
push
sub
lods
jge
add
dec
rorb
inc
lea
jne
jb
add
mov
addr16
mov
cmpl
shrl
inc
mov
xor
sahf
sub
mov
xor
inc
mov
xor
mov
or
fwait
std
push
int
lret
sub
jmp
lods
push
xchg
lcall
cmp
adc
xrelease
fists
jns
ret
pushf
jbe
out
add
lret
outsl
inc
jno
iret
shl
pop
adc
xlat
mov
mov
js
pop
in
push
dec
lods
rorl
push
cmp
icebp
add
mov
xor
push
pushf
fcomps
jle
jmp
sarl
cmc
dec
data16
incl
test
sahf
addb
mov
xor
popf
in
adc
or
inc
push
ja
mov
arpl
in
inc
sub
push
aam
repnz
xor
and
or
sbb
lcall
imul
xor
mov
out
pushf
inc
fcomps
stc
out
cmc
pop
jae
sbb
into
das
das
push
dec
jmp
imul
popf
jecxz
xlat
pop
push
add
enter
repnz
mov
push
les
and
arpl
les
xchg
cld
cmp
int3
cmpsl
in
ret
xor
push
std
out
and
adc
ds
xchg
and
inc
arpl
inc
cli
ficoms
sarb
ds
mov
push
and
fcompl
pop
push
mov
xor
inc
pop
ret
ret
es
xchg
xchg
sbb
bound
sbb
shl
icebp
xchg
sub
or
insb
sub
aam
inc
push
mov
ds
loopne
loope
inc
fdivr
add
and
mov
cmpsb
hlt
lret
jg
in
adc
sub
dec
mov
icebp
movsl
das
das
inc
mov
stos
out
in
mov
mov
shrl
jmp
or
cmp
sbb
test
mov
test
mov
sbb
imul
test
repnz
movsl
cmp
pop
lret
xlat
data16
push
push
adc
mov
jnp
dec
add
adc
scas
idivb
shll
or
xchg
ds
mov
insl
mov
add
cli
stos
shrl
push
xor
or
or
test
mov
fxch
loope
out
loopne
lea
rcll
cmc
push
mov
mov
sti
cmpsb
imul
inc
loope
xchg
cmp
sar
lock
repz
call
insb
in
stos
and
xor
cmp
pop
cld
mov
mov
cmc
mov
insb
mov
addb
fyl2x
mov
add
cmp
jg
test
cmp
sbb
jecxz
in
addb
pop
out
mov
fwait
cmp
pop
push
loopne
jns
cmp
cld
loop
and
pop
mov
dec
add
push
and
xchg
mov
adcl
jge
repz
gs
cmp
fistpl
xor
dec
cmpsb
or
sbb
ds
mov
sbb
mov
std
arpl
inc
push
loope
push
nop
mov
sub
mov
jbe
imul
pop
jnp
jno
xchg
dec
fcompl
bnd
push
add
out
or
xor
mov
mov
push
js
mov
arpl
rcr
sarl
fs
and
xchg
xor
and
es
mov
out
scas
scas
sarl
jmp
mov
cmpsb
sub
mov
repnz
mov
inc
outsb
add
pusha
movsb
add
jbe
jb
ret
fmull
dec
fcmove
scas
js
push
sidtl
in
shl
xchg
das
dec
mov
and
mov
adc
xchg
fadds
jne
jne
das
fidivs
push
pop
add
jmp
or
cmp
loope
out
repz
jae
xchg
or
jl
movsl
jl
pop
or
imul
or
mov
daa
sbbb
iret
loope
pop
or
dec
push
dec
ljmp
test
out
push
lods
loopne
mov
ret
lods
mov
jp
repz
outsl
jno
ds
mov
out
dec
lea
dec
add
mov
push
cwtl
in
push
aas
mov
pop
in
pop
dec
insb
dec
popa
and
cmp
adc
inc
outsl
push
sti
cld
test
nop
clc
cli
sbb
in
je
data16
jne
push
xchg
repz
ucomiss
scas
icebp
sub
xor
add
jge
xchg
add
xchg
xor
fidivl
pop
or
lods
dec
jge
subl
out
add
dec
aad
add
sub
mov
jmp
sahf
aam
adc
arpl
cmp
or
in
fildl
int3
lcall
mov
push
pusha
cmp
fisubrl
and
mov
xchg
dec
pop
cmp
push
gs
gs
adc
xchg
cmp
in
jno
inc
shlb
pop
and
arpl
push
jns
mov
sub
fldenv
cwtl
or
faddl
outsb
push
test
cmp
jae
push
sub
sbb
jne
pcmpeqd
push
push
ret
cmp
xchg
add
data16
outsl
cmp
and
sbb
mov
aas
repz
pop
outsb
bound
outsb
inc
repnz
sub
add
aam
mov
jnp
xor
stos
ret
push
fs
jmp
daa
enter
cltd
inc
add
adc
pop
cwtl
mov
jno
mov
mov
test
iret
fistl
fisubrl
xor
rclb
jmp
push
loopne
movsb
push
mov
dec
je
push
das
add
pop
stos
fcoml
mov
push
push
add
data16
add
shr
xchg
in
cmp
clc
into
pop
into
adc
ret
cmp
jmp
in
cmp
push
adc
stos
or
and
shr
sti
lcall
jb
mov
shll
push
lret
cmp
jmp
mov
es
lods
cmp
mov
jne
imul
sub
xchg
cld
std
lea
pop
or
mov
test
inc
cs
sub
mov
fimull
adc
gs
mov
pop
cli
cmp
dec
mov
test
inc
xchg
adc
and
dec
sbb
fwait
in
movsb
stc
aad
cltd
jg
push
jae
fistpl
jp
sbb
clc
inc
sub
mov
pop
addl
push
sar
mov
sbb
dec
clc
mov
mov
dec
jb
or
mov
push
xor
mov
pushf
pop
mov
cltd
lods
dec
mov
loop
leave
in
mov
idivb
jg
popf
addr16
cltd
lahf
into
testl
mov
orb
mov
jmp
shr
mov
ret
mov
stos
testl
xchg
sahf
add
mov
xlat
inc
leave
adc
pop
or
stos
cld
add
pop
imul
shlb
popf
mov
inc
mov
jecxz
fstpt
jle
test
adc
inc
push
es
pop
ss
sbb
and
mov
lock
push
push
gs
or
ljmp
shr
or
cmpsb
mov
mov
jecxz
out
cmp
in
mov
dec
push
test
pop
dec
mov
pop
mov
std
imul
jge
stos
adc
lock
iret
cmp
cmp
sbb
jne
push
dec
mov
insl
aas
out
jns
dec
stos
jge
pop
or
dec
dec
pop
fnstenv
adc
sbb
pop
je
push
xchg
les
inc
enter
or
dec
mov
dec
imul
test
mov
xor
cli
and
inc
xchg
inc
dec
mov
or
jg
cmp
adc
test
fwait
je
xor
mov
shr
cmp
sbb
and
or
xchg
dec
rclb
adc
and
push
inc
loopne
mov
cmp
jne
mov
cmp
ss
sbb
flds
mov
mov
and
aaa
daa
imul
cmp
call
in
pop
adc
lea
add
fldt
add
cwtl
data16
shlb
adc
roll
cmc
in
aaa
sbb
cmc
and
adc
sbb
or
sbb
and
pop
push
adc
dec
mov
fwait
mov
cmp
mov
mov
in
pop
or
pusha
mov
cmp
cmpsb
fistl
inc
mov
insb
mov
cmp
push
xor
mov
nop
lea
jecxz
xor
mov
mov
mov
out
mov
mov
and
mov
lret
mov
test
push
mov
sbb
xor
mov
push
mov
fprem1
sub
in
arpl
fimull
clc
adc
mov
sbb
mov
mov
inc
mov
mov
jmp
repnz
lock
pushf
pop
push
imul
jo
leave
pop
jbe
xchg
jae
xor
out
aas
lds
icebp
cmc
xor
incb
add
and
dec
and
adc
mov
lret
ljmp
mov
orl
rcl
fs
xor
cmp
aaa
xchg
call
out
mov
cli
pop
popf
fs
jecxz
adc
xor
adc
cld
ja
or
sub
ljmp
pop
movsl
dec
out
in
pop
add
lods
push
pop
cmp
sub
cld
inc
loopne
into
arpl
dec
out
dec
adc
ds
push
pop
mov
cld
inc
pop
sub
aaa
xlat
adc
mov
popa
and
jnp
cltd
add
xchg
rcrl
testl
xchg
leave
dec
outsb
loope
lret
mov
adc
dec
sub
sbb
popa
and
sub
jle
jns
std
repz
icebp
and
mov
jmp
imul
add
inc
fcmovb
or
subl
loope
xchg
dec
inc
xchg
jns
insb
mov
lret
cmpb
lods
adc
jns
sub
adc
aad
push
pavgw
jg
mov
mov
loope
push
or
mov
or
adc
repnz
sbb
fimull
rcrb
flds
aas
push
sub
rol
fsubp
stos
cmc
dec
or
lea
fidivrl
inc
mov
jae
pop
les
in
mov
mov
lret
push
pusha
sub
adc
test
negl
inc
js
jmp
jp
jno
test
or
mov
dec
xchg
inc
inc
and
enter
or
ljmp
mov
mov
xor
dec
cwtl
imul
bound
dec
js
cmp
ret
xor
mov
fcmovnb
push
mov
pop
fcomps
arpl
lea
mov
call
sarb
repnz
mov
lahf
pushf
aad
xorl
out
sahf
dec
test
or
pop
pushl
mov
cs
repz
mov
ljmp
xor
xor
or
loop
mov
pop
aad
inc
pop
cmp
dec
push
inc
ja
dec
mov
xchg
or
jge
daa
imul
adc
cwtl
mov
ja
sti
inc
cltd
mov
sti
rcrb
cs
cmp
add
mov
popf
stc
mov
sub
lds
or
pusha
mov
lret
ss
call
scas
pop
in
mov
xor
mov
cs
repz
mov
out
enter
rol
movsl
mov
or
add
mov
xchg
inc
fildll
std
aad
cmp
jns
jbe
es
repz
pop
mov
call
jp
sbb
jae
daa
in
shrb
xchg
rorl
sub
test
clc
mov
jae
ror
in
adc
scas
sarb
int
imul
push
jns
inc
daa
or
ljmp
or
jle
mov
xorb
int3
jp
inc
mov
sub
sub
rcl
rol
stc
test
addr16
dec
jns
loopne
mov
add
mov
hlt
out
cmp
out
jle
dec
rcrb
sahf
and
adc
ja
jo
aaa
xchg
jl
xor
sti
mov
push
dec
adc
sbbl
mov
or
into
cmc
mov
lcall
daa
inc
sub
lock
movsl
push
sub
push
cmpsl
push
inc
inc
push
sub
sahf
stc
cwtl
cmp
push
aaa
lcall
cs
sbb
mov
scas
out
fdivr
scas
mov
and
dec
dec
stos
lds
repnz
cwtl
xchg
add
shll
shr
movsb
xchg
repz
inc
in
sahf
lds
fidivrl
mov
add
fistl
push
mov
sbb
lcall
iret
add
push
jns
lret
pop
shrb
adc
mov
dec
pop
cwtl
fidivs
mov
push
lahf
or
adc
outsl
push
pop
jns
xor
dec
add
imul
mov
xlat
std
jmp
inc
roll
arpl
xchg
jae
test
xchg
les
adc
xchg
add
add
cmp
inc
pop
scas
cmpsl
adc
jno
mov
inc
add
lods
jmp
shl
lods
repz
shrl
mov
and
in
popa
cmp
adc
jmp
stos
hlt
aad
shlb
jg
mov
fwait
adc
stos
mov
stos
pop
and
xor
pop
jno
into
in
or
inc
xlat
fnstenv
xchg
fistps
nop
xchg
and
dec
push
xchg
mov
push
adc
xchg
xchg
adc
lcall
cmpsl
xchg
int3
fwait
pop
je
cld
lahf
call
push
shufps
push
sbb
lahf
adc
xor
dec
les
mov
sarl
add
cmp
jno
loopne
sti
jle
adc
xlat
movsb
sbbl
pop
dec
repz
adc
cmc
addr16
fisttpl
jg
xor
inc
pop
adc
adc
or
lock
xor
insb
sbb
imull
cmp
fisubs
jb
int3
cmp
and
sub
push
mov
dec
push
cmp
outsl
mov
in
ret
adc
movsl
push
ss
inc
dec
inc
sbb
and
lods
call
jge
enter
popf
mov
test
dec
loopne
or
out
int3
mov
ret
jae
sbb
bound
jg
mov
pop
cmp
adc
dec
pop
jg
jo
fimull
fwait
or
frstor
ja
outsb
dec
sarb
jne
xorb
in
push
inc
xchg
ss
xchg
cmp
xor
push
add
jae
cltd
or
inc
scas
ljmp
push
dec
jno
sbb
int
inc
mov
test
mov
loope
adc
pop
cmp
xchg
add
lods
cmp
sub
stc
cld
cmpsb
fchs
xchg
sbb
movsb
stc
cmpsl
mov
lods
movsl
or
mov
mov
inc
bnd
cli
xchg
xchg
push
popa
lods
sub
lods
cmpsb
stc
stc
test
sub
sub
push
jg
xor
pop
lea
cmp
cmpsb
inc
mov
shl
inc
rcrb
jb
mov
push
jg
sub
cmpsl
push
aaa
int
inc
pushf
and
and
mov
push
push
ss
lods
nop
cmp
aas
jl
repz
shll
dec
outsb
xchg
xchg
imul
sub
pop
dec
es
out
fidivs
fmull
xor
movsb
pop
shlb
mov
stc
mov
scas
movsb
cmp
fnsave
dec
and
popa
ja
test
fistpl
ja
scas
aaa
imul
xchg
imul
ljmp
ret
std
lret
repnz
pushf
out
jns
dec
scas
push
adc
in
lcall
sub
mov
xchg
roll
call
mov
ljmpw
stos
mov
mov
jmp
shl
mov
pop
andl
scas
daa
notb
pop
pop
das
pop
sahf
xor
adc
push
loop
mov
ds
clc
cwtl
sbb
and
cmpsb
jb
fmuls
adc
add
pop
fsts
and
out
in
fs
adc
push
pop
push
addr16
out
ficompl
in
mov
popa
sub
lcall
push
push
bound
cwtl
adc
jo
imul
popa
pop
repnz
sub
mov
push
aas
jo
aam
dec
ljmp
xchg
cmp
decl
push
inc
mov
xchg
inc
fwait
adc
jnp
cmp
mov
inc
les
xlat
push
add
pop
lods
les
std
enter
xor
add
xchg
pop
sahf
lcall
leave
push
mov
imul
cmp
repnz
mov
lock
cmp
dec
sbb
popa
xor
loop
add
bound
inc
jmp
aad
lods
push
mov
mov
scas
cwtl
pop
movsb
or
inc
lret
lds
adc
push
dec
fcmovnb
xor
dec
andb
xlat
fwait
mov
pop
adc
ficoml
pop
jg
inc
inc
ficoms
dec
xchg
push
orl
inc
jg
testl
icebp
pop
lcall
fwait
mov
gs
pop
push
dec
shrl
add
push
popa
insl
shrl
push
bound
aas
jne
loop
adc
fmul
out
cmp
push
mov
jg
shrd
mov
fs
test
call
fldt
ds
lods
lods
inc
ja
push
scas
aaa
adc
inc
inc
dec
insl
out
cli
fcompl
test
ret
pop
std
rcrb
push
xchg
call
lret
dec
sbb
or
push
int3
shl
inc
and
and
mov
add
mul
hlt
insl
loope
sbb
iret
sbb
pop
mov
test
aas
add
xchg
mov
stos
xchg
adc
dec
inc
loope
andl
and
in
add
sub
sub
and
mov
mov
int3
adc
ret
out
or
push
xor
mov
outsl
dec
mov
add
sbb
out
scas
aas
inc
dec
loopne
sbb
insb
adc
mov
inc
mov
scas
lret
sub
rcrb
out
imul
arpl
sbbb
aad
pop
scas
adcl
or
push
outsb
xchg
es
sub
xchg
gs
add
and
cmp
adc
ljmp
mov
in
popf
jne
or
mov
push
sbb
push
dec
rcrb
out
inc
jae
cwtl
push
push
pop
pop
les
pop
push
enter
je
xchg
mov
mov
push
popf
call
cmp
ret
dec
xchg
sub
cmp
sahf
stc
cmpsl
les
adc
mulb
adcb
mov
hlt
lcall
add
xchg
hlt
andl
ja
sub
xor
imul
xchg
js
dec
dec
js
insl
dec
cltd
shlb
pushf
outsl
arpl
cmpsb
xor
mov
cmp
sbb
pushf
scas
shrb
or
inc
adc
shlb
shrb
pop
clc
lods
lret
fstp
or
mov
hlt
or
lea
daa
push
cmp
hlt
push
sub
scas
ds
cmp
xchg
xor
inc
or
add
shll
das
jg
bound
dec
mov
imul
mov
daa
roll
jns
inc
testl
add
push
and
aas
in
xchg
and
mov
mov
mov
pusha
gs
fildll
add
nop
mov
cwtl
add
loope
rcr
enter
cmp
pop
dec
mov
pop
mov
int3
ds
inc
pop
es
mov
cmp
rorb
inc
mov
fcmove
xlat
loope
push
repnz
push
movl
daa
xchg
sbb
cmpsl
outsb
mov
shlb
jo
and
and
jae
xchg
push
inc
cmp
outsb
rorb
nop
rcrl
sahf
iret
aad
xchg
adc
out
hlt
mov
pusha
xorl
in
mov
leave
lcall
mov
and
cmpsl
push
and
xchg
push
out
jecxz
xor
insb
and
movsl
stos
icebp
inc
sar
enter
and
inc
cld
clc
frstor
repz
push
and
mov
stos
fstl
jmp
add
scas
inc
or
jmp
and
popf
add
pop
enter
aas
cmc
xchg
xchg
mov
mov
lock
dec
movsl
jmp
mov
test
pushf
inc
push
ret
dec
es
in
nop
clc
xchg
and
pop
and
xchg
std
ss
sbb
jl
aam
cmpsb
mov
xchg
mov
push
pop
xchg
inc
orps
push
loopne
inc
inc
cmp
push
mov
cmp
in
or
jecxz
and
in
ret
xchg
mov
xchg
xchg
mov
repnz
mov
das
mov
jp
mov
cltd
fdivp
xchg
test
jne
pop
test
ljmp
rorl
inc
ret
fs
sub
scas
mov
int
or
inc
lock
inc
mov
add
mov
mov
jp
fisttpll
mov
mov
xchg
sub
pop
lcall
mov
bswap
icebp
lahf
into
push
mov
jo
and
and
cmp
test
jge
leave
mov
ja
inc
fistl
dec
lcall
inc
sti
ror
adc
mov
jp
push
jo
sub
fwait
xchg
mov
gs
sti
sbb
xchg
inc
add
jns
inc
js
jns
sbb
and
xchg
push
push
and
mov
in
cltd
mov
mov
dec
push
fcoml
fwait
movsb
dec
lods
cmp
dec
cmp
bound
movsl
mov
mov
pushf
out
xchg
mov
loope
sbb
dec
fists
loopne
sbb
insl
adc
aad
xchg
dec
and
jbe
pushf
test
mov
mov
sub
dec
sbbl
lret
add
gs
mov
jnp
xor
xor
test
rcrl
dec
data16
jp
add
mov
xchg
adc
cmovge
sti
outsl
roll
xorb
push
push
jb
cli
add
leave
loop
pop
dec
ficomps
insl
out
ror
aas
push
ja
dec
rcrb
sbb
push
in
mov
adc
add
mov
jecxz
inc
pop
hlt
ret
xor
xor
sbb
adc
jmp
lods
sbb
xor
fldcw
mov
pop
and
push
int
mov
mov
xor
mov
mov
aam
adc
mov
hlt
pop
cmp
lods
push
mov
and
inc
loope
xchg
and
jle
stos
test
cld
aam
mov
xor
inc
cli
sbb
push
xchg
mov
je
mov
aad
sarl
ljmp
out
pop
mov
mov
mov
push
mov
jne
sbb
sbb
cwtl
dec
lods
dec
loop
mov
adc
xlat
repnz
arpl
sbb
out
cmp
ljmp
adc
divl
pop
pop
enter
mov
or
push
dec
inc
add
stos
or
stos
std
mov
sbb
dec
mov
inc
cmpsl
push
stos
inc
bound
push
xor
and
mov
mov
jmp
mov
aam
xchg
divl
pop
xchg
test
lcall
jnp
icebp
arpl
pushf
xchg
out
cmc
testb
sbb
add
pop
and
imul
jo
or
hlt
or
push
ds
dec
and
xor
mov
jbe
cmp
push
jmp
mov
mov
arpl
cmp
ret
pop
lods
sub
sti
cmp
mov
xchg
or
stos
aas
insl
xor
cmc
mov
pop
ss
repnz
je
pop
sbb
mov
jbe
mov
push
loope
insl
fdivs
call
add
aas
movsb
mov
add
out
daa
jns
data16
sbb
stos
iret
cs
das
hlt
or
inc
es
not
sbb
or
enter
push
cmpsl
dec
dec
iret
add
lret
inc
push
dec
dec
mov
aad
stos
mov
inc
js
jbe
pop
adc
pop
pop
cs
rcr
jmp
loop
idiv
cmp
push
adc
pop
dec
cs
fdivl
sbb
sub
clc
stos
les
push
dec
push
ret
dec
test
cmpl
arpl
mov
into
js
repnz
cmpsb
and
or
leave
adc
pop
iret
pusha
xor
sbb
adc
or
mov
sub
js
xchg
lock
sbb
dec
ja
jo
cltd
dec
insl
arpl
stos
xchg
adc
sahf
insb
insl
jmp
scas
hlt
lcall
mov
mov
insl
add
and
addr16
jns
pop
add
xor
xchg
jb
mov
lret
lret
clc
dec
adc
xor
cmp
sbb
je
loopne
call
outsl
push
je
imul
shrl
dec
jae
cmp
mov
lds
or
mov
xchg
jo
lret
xchg
push
adc
adc
outsl
or
mov
push
xchg
movl
mov
test
pop
popf
cmp
lahf
pushf
adc
mov
mov
mov
imul
test
mov
sub
push
jl
inc
jno
ret
dec
pop
out
sub
dec
jl
ljmp
lret
ljmp
insb
dec
outsl
outsb
pop
mov
fdivrs
aam
mov
dec
lods
sub
fdivp
xor
xchg
fwait
push
rcll
cmp
ja
ds
addr16
mov
rcrb
je
or
add
loop
fcmovnbe
rolb
jb
je
pop
scas
xor
addr16
sub
adc
xchg
mov
repz
lods
sbb
cld
lods
xchg
jb
or
mov
mov
inc
inc
je
js
xor
pop
lock
jmp
adc
fimuls
ds
int3
cli
add
push
mov
adc
and
adc
hlt
inc
cmp
mov
dec
add
xchg
push
lock
mov
add
and
inc
or
or
in
idivb
mov
cltd
iret
jg
rolb
orb
sbb
mov
sar
jns
std
mov
fcmovnu
mov
in
fmull
jmp
and
rolb
lock
cmp
xor
test
mov
mov
sahf
sbb
mov
push
dec
les
fadds
aam
pop
add
rclb
dec
gs
mov
in
rcrl
cmp
jbe
xor
sub
xchg
mov
or
mov
div
mov
mov
cld
jbe
ja
add
jns
cmp
jmp
push
xor
mov
jnp
mov
jmp
adc
das
test
dec
mov
popf
add
push
xor
aad
jo
fadd
and
lods
adc
add
inc
sub
jne
cmc
mov
lods
test
xor
pop
jns
add
sbb
aam
inc
sub
aad
dec
mov
aam
xor
fdivrl
fisubrl
mov
push
and
movsl
aaa
sbb
push
xchg
cmp
into
in
inc
pushf
xchg
bound
fwait
pop
lods
mov
inc
repz
stos
addb
xor
mov
sub
pop
jl
imul
add
stos
shrb
inc
jecxz
in
test
cmpsb
jne
pop
rorl
in
xchg
adc
cltd
jns
gs
xchg
mov
xchg
cmp
test
loop
adc
push
stos
stos
es
test
lahf
jns
sbb
ret
andb
mov
aas
shlb
lcall
adc
mov
xchg
add
inc
lea
std
popa
xchg
fdiv
mov
mov
lea
ja
mov
push
ja
push
add
mov
fwait
push
jo
sub
dec
out
insl
sub
jp
mov
mov
ud0
cmpsl
add
inc
sarb
test
mov
xor
jo
insl
int
push
ds
loope
or
jg
adc
scas
out
movsl
out
js
adc
js
dec
or
stc
push
mov
dec
sarb
sbb
pop
repz
inc
push
push
leave
add
cmpsl
mov
fimull
push
js
cli
test
jge
in
stos
adc
xchg
pop
and
fmull
jmp
aas
insl
js
pop
xorl
jmp
lahf
push
iret
push
pop
and
rorb
cmpsb
push
lods
mov
sbb
repz
fmul
sbb
add
ds
je
jge
pop
xor
push
or
dec
fnstsw
aad
jp
in
lock
inc
xchg
jne
mov
adc
or
and
shrb
xor
mov
mov
push
push
imul
out
dec
sbb
movsb
ret
add
mov
or
adc
outsl
inc
out
ljmp
jne
mov
mov
fidivrl
dec
test
shll
sbb
mov
mov
mov
sbb
loopne
fmuls
mov
outsl
mov
add
dec
stos
lahf
push
test
fildll
jmp
aam
jno
add
sub
or
jl
jge
lret
movsb
xor
mov
mov
bound
mov
nop
out
dec
mov
lahf
ret
mov
incl
jmp
mov
std
push
repnz
add
sbb
mov
push
ret
mov
aad
ror
ret
pop
and
pop
and
add
sub
xchg
call
daa
jle
pop
xchg
icebp
add
iret
or
movsb
gs
iret
aas
mov
std
out
sahf
jno
mov
add
mov
add
addr16
cmp
fists
jnp
adc
lahf
or
xor
and
sbb
mov
push
pop
mov
hlt
mov
ljmp
xchg
mov
fcomi
les
cmp
pop
push
addl
mov
lret
das
pop
je
ror
mov
les
add
lea
sti
popf
je
in
aam
and
dec
cmp
ss
mov
insb
outsl
lcall
repnz
hlt
scas
push
push
btr
in
xor
mov
and
gs
lods
andb
popf
hlt
repz
mov
mov
in
xchg
inc
mov
fcmovnbe
icebp
cmpsb
lods
scas
xor
cmc
inc
negl
lret
push
or
mov
js
pop
je
sub
imul
andl
adc
or
pusha
adc
mov
adc
movsb
push
jecxz
mov
loop
push
fcmovnbe
daa
iret
outsl
add
test
sub
std
lods
mov
mov
icebp
popf
sahf
and
xchg
cmpsl
les
mov
and
xchg
movsb
dec
jnp
mov
loopne
dec
sbb
daa
push
dec
ja
or
shr
test
jns
add
mov
pop
jl
clc
lea
sbb
pop
test
mov
and
add
outsb
adc
lods
and
out
push
adc
daa
out
insb
clc
je
call
rclb
hlt
inc
dec
out
aad
xchg
sub
push
xchg
mov
cld
jmp
add
dec
add
sbb
in
ret
jp
mov
cmpsb
negl
dec
mov
jo
mov
sub
movl
imul
push
mov
pop
or
in
xor
jns
mov
lahf
xchg
pop
xor
lds
rcrb
xchg
pop
insb
cmp
ljmp
rolb
mov
lret
sbb
orb
mov
nop
mov
jl
jg
fistl
lcall
mov
hlt
test
sub
and
mov
add
cmc
xor
pop
test
hlt
les
leave
xchg
cwtl
in
pop
test
inc
cmpsb
movsb
jecxz
cmpb
sbb
push
pusha
arpl
mov
insl
dec
addr16
daa
add
jbe
icebp
xor
cld
xchg
sbb
pop
mov
cmc
sub
sub
pop
push
dec
daa
pop
andb
cmp
mov
les
and
out
rorb
sti
sub
out
or
sti
xlat
imul
mov
dec
push
cmpb
adc
xchg
xor
stos
rclb
ljmp
sub
aas
mov
sbb
imul
cli
in
sarb
inc
inc
inc
in
and
in
scas
subl
mov
sub
sbbl
enter
inc
xor
mov
push
jp
insl
sub
paddsb
add
imul
imul
jne
and
hlt
fnstenv
mov
les
mov
dec
jae
lret
movsl
lea
or
jl
cmpb
xor
mov
aas
push
pop
adc
dec
xor
adc
into
insb
js
push
rcrb
fidivs
jbe
xchg
lret
shl
pop
out
push
mov
and
shrl
sbb
aad
bound
pop
shrb
int3
call
jecxz
push
mov
repz
jp
ret
mov
mov
lcall
stc
sub
orb
fldenv
and
cmp
dec
jo
out
cld
les
sbb
sub
cmpsb
jno
cmpsb
movsb
inc
stos
pop
xchg
stos
mov
ret
sub
jmp
jo
push
sub
ja
ja
push
adc
mov
mov
xchg
fwait
or
jle
pushf
jb
push
mov
hlt
mov
mov
loope
ret
sub
aam
jnp
sub
test
pop
and
movsl
push
mov
mov
ret
daa
add
lcall
decl
sbb
mov
dec
std
push
shr
dec
cli
or
sub
or
das
add
push
cmpsb
jp
insb
mov
push
aas
pop
lret
and
popa
xor
insl
xor
xor
loopne
call
pushf
mov
add
mov
inc
sub
push
xchg
push
push
pop
loope
xchg
and
out
cmp
fldl
sbb
mov
lea
ficoml
movsb
xchg
adc
inc
les
dec
pop
mov
xchg
jns
lret
sub
ljmp
xchg
push
or
pop
xchg
ds
add
cmp
cmp
cmp
int3
out
out
insb
xlat
push
popa
clc
loopne
push
sub
insl
loopne
jae
or
sbb
les
jle
sbb
std
or
lock
out
out
lods
out
stc
call
mov
push
dec
jl
scas
sbb
and
mov
and
fisttpl
mov
movsb
mov
jns
out
add
mov
xor
cmpsl
cmp
add
sbbb
adc
cmpsl
adc
movsl
lods
js
sbb
xchg
lret
aam
push
aad
ljmp
push
pop
icebp
and
mov
pushf
or
add
jns
adc
push
ds
fwait
jae
imul
in
cltd
scas
cltd
test
iret
sub
mov
mov
out
ret
lds
mov
and
frstor
mov
cli
mov
cli
movsb
aaa
mov
inc
xor
inc
out
les
dec
inc
cld
repnz
lods
jecxz
dec
ret
lds
shrl
cmp
out
pop
cltd
sbb
jle
shll
ja
xchg
aas
scas
lock
sub
cmp
dec
push
pushf
mov
mov
movsb
outsl
add
sub
stos
or
mov
call
fwait
mov
addr16
inc
mov
neg
stos
mov
shll
mov
dec
sahf
xchg
push
cmp
jae
cmp
iret
jecxz
add
mov
cmc
dec
fdivs
bound
out
outsb
mov
loopne
pop
jle
xchg
mov
pop
mov
test
gs
mov
mov
sahf
or
push
jmp
push
xlat
cmpsl
jmp
imul
jns
rcr
cmpb
js
jp
fwait
leave
mov
lods
cs
and
sbb
fsubr
insb
ficoms
or
loope
notb
in
pop
push
inc
mov
jns
inc
cltd
or
cmpsl
and
shll
pop
mov
aam
sub
xor
fsub
nop
jp
cmp
xchg
jb
xchg
pop
imul
adc
xchg
jae
mov
jno
add
pop
scas
fisttpl
and
adc
fldcw
call
jbe
lret
xor
xor
sub
aaa
icebp
pop
sahf
jo
xor
jge
testb
sub
inc
xlat
adcl
and
mov
ljmp
mov
dec
popl
es
cmp
jb
jl
stos
je
pushl
pusha
fcompl
loope
clc
push
int3
push
xor
mov
pop
sbb
test
jns
outsb
popf
daa
jle
mov
dec
jle
push
movsl
and
repnz
aad
mov
mov
mov
fcmovnu
xchg
pop
add
repnz
jmp
ret
push
addr16
out
sbb
add
xor
in
push
cmp
dec
cmp
or
aas
xor
leave
and
fbld
xlat
pusha
jb
mov
dec
in
ror
pop
mov
loopne
lds
adc
inc
insb
jns
sbb
cmp
cmp
cmp
fisubl
insb
pop
add
pop
inc
inc
push
jp
scas
and
mov
insb
cmp
add
ljmp
jmp
jae
or
in
mov
mov
mov
jae
data16
mov
repnz
js
ret
adc
ljmp
and
and
je
add
mov
lea
pop
mov
xor
cld
push
adc
and
mov
mov
cs
call
popa
test
and
js
imul
or
and
mov
pusha
int
mov
pop
jbe
pop
push
push
mov
scas
adc
icebp
and
in
aad
js
jnp
push
sbb
fisubrl
popf
stc
push
sahf
lcall
cmc
cli
rorl
mov
jle
xor
xlat
das
scas
pop
sub
sti
cmpsl
jno
xchg
sub
out
les
dec
inc
unpcklps
xor
rcr
inc
in
lds
call
inc
pop
shrb
aas
pop
ret
mov
fstps
pop
jle
sbb
fsubp
lcall
shll
cmpsl
xchg
inc
xchg
sahf
or
add
fldt
jle
fsts
pop
shll
sbb
and
ja
cmpsl
and
inc
icebp
cltd
pusha
jge
stos
xor
xchg
jmp
pop
inc
mov
pop
js
mov
cmpsb
in
inc
dec
jns
pop
xor
shlb
enter
push
shl
jp
push
cmp
push
mov
inc
and
xorl
add
sub
mov
push
ss
mov
lret
pminsw
fstl
mov
mov
mov
imul
xor
jl
pop
mov
loope
fistpl
sbb
jp
sbb
sbb
fwait
es
jmp
in
decb
out
mov
les
pushf
mov
sub
pop
sbb
icebp
push
xlat
sbb
sbb
sbb
testl
pop
adc
pop
push
sbb
sti
fnstcw
jo
enter
lret
sarl
lret
sub
xchg
insl
inc
lret
fimuls
adc
sbb
mov
sbb
push
aas
ljmp
fwait
sahf
insb
pop
jle
lahf
inc
xor
fs
dec
addr16
mov
mov
lcall
dec
sar
inc
jns
repnz
es
es
cmpsb
sbb
xor
and
lcall
and
movsb
xchg
push
lods
mov
mov
push
inc
movsl
sbb
push
cmp
cs
sbb
dec
cmp
lods
dec
jle
out
xchg
aas
mov
stos
fadds
push
cltd
pop
add
cmp
cmpb
lock
loopne
jo
sbb
into
cmp
lret
sub
sub
les
pop
nop
addr16
aam
jp
xchg
les
cltd
xchg
mov
idivl
repz
cs
stc
mov
xor
gs
push
fiadds
sti
sbb
xchg
out
xchg
stos
or
jne
cld
pop
shrb
cmp
or
fimuls
outsb
jbe
push
xchg
aaa
adc
rcr
negl
xchg
mov
xchg
sarl
ret
add
fld
shr
add
sub
or
dec
bound
xchg
dec
test
adc
in
pop
or
or
out
mov
inc
shlb
mov
stc
mov
mov
loop
pusha
lcall
mov
mov
and
daa
push
les
mov
ret
jbe
fmull
ja
inc
cwtl
loop
mov
fdiv
adc
and
or
pop
movsb
or
inc
and
rcrb
push
sbb
out
push
mov
mov
or
jns
call
js,pt
and
lret
inc
ljmp
pusha
mov
xor
add
mov
sti
aam
notb
dec
cmc
mull
scas
push
into
cmp
xor
sub
inc
pop
loop
mov
in
inc
inc
ficoml
pop
arpl
dec
leave
xchg
shlb
xor
leave
or
enter
adc
mov
out
mov
enter
mov
cmpsl
cmp
mov
push
cmp
or
add
dec
into
jmp
insb
dec
or
popa
scas
lods
into
push
mov
test
xor
stc
jp
mov
jns
shl
lock
xor
adc
mov
insl
xchg
test
loopne
add
mov
rcr
loop
adc
addr16
fldenv
orl
or
cltd
push
xchg
imul
pusha
mov
xor
inc
adc
pop
mov
ds
inc
xchg
xchg
test
mov
mov
or
pop
pop
jmp
sub
mov
push
sarb
insl
or
int
sti
lret
negl
test
dec
jo
or
or
lock
call
inc
clc
sbb
in
int3
lea
dec
add
fs
push
out
sbb
gs
mov
sti
call
cmpsb
push
pop
fwait
loop
xor
hlt
and
out
bound
into
add
pushf
packsswb
add
test
mov
sub
mov
test
in
mov
bound
scas
int3
cmpsb
pushf
pop
jg
cmpb
repnz
mov
sbb
and
pop
dec
mov
incb
dec
lods
loopne
movl
dec
test
test
lahf
stc
cmpsb
dec
add
sub
pop
adc
jg
imul
adc
inc
aad
test
pop
das
std
add
mov
mov
xchg
adc
dec
bound
iret
cmc
mov
imul
xchg
sub
lahf
inc
sub
adc
icebp
mov
aam
cmpsb
sbb
stos
cltd
je
mov
xchg
insb
lcall
sbb
ror
das
cmp
loope
cmp
and
xor
adc
test
imul
mov
out
push
xchg
subl
jno
fldt
add
adc
data16
inc
mov
mov
aam
lods
and
xor
pusha
dec
fisubrl
ret
push
adc
cmpsl
mov
ja
mov
xor
into
sbbb
inc
jo
lea
fwait
push
lret
cmpsl
loopne
dec
sub
cmp
insb
or
aam
movsl
ret
sbb
repnz
jno
dec
addr16
dec
int
cmp
fneni(8087
subb
inc
insl
inc
rclb
lea
push
int3
add
cmp
xchg
xchg
mov
push
mov
inc
mov
push
ljmp
out
in
sbbl
add
mov
cwtl
sub
popa
adc
ret
out
daa
or
push
js
aad
es
mov
insl
sbb
dec
pop
xchg
shlb
popf
inc
xchg
pop
loopne
inc
arpl
repz
sub
jae
cmp
pop
pop
ja
fisubrs
push
sbb
in
xchg
arpl
mov
cmpsb
pop
roll
mov
mov
jne
fildl
iret
repnz
pop
fwait
icebp
stos
jmp
rcrl
or
cmp
ja
add
jle
mov
mov
inc
imul
adc
in
mov
dec
lcall
orb
dec
sbb
mov
rolb
mov
popf
pop
scas
xor
repz
jo
pop
jecxz
xor
push
pop
cmp
mov
mov
iret
adc
and
in
jbe
fcoml
jl
rcll
xorl
xor
imul
psubq
outsl
stos
xchg
cmp
lds
lods
movsl
sub
sti
and
into
xchg
sbb
leave
hlt
jne
push
stos
mov
inc
pusha
mov
into
xchg
ktestb
mov
push
pusha
data16
inc
fs
xor
lahf
pusha
mov
cmpsl
xchg
repz
sarl
loope
sub
and
xlat
push
rcl
loop
cmp
push
mov
cmp
jmp
out
mov
push
test
sbb
in
adc
cmp
sub
test
outsb
fcomps
adc
lahf
mov
jns
stos
aas
int
pop
mov
push
add
mov
shrl
add
pushf
add
orb
sarb
out
jl
fstp
int
jae
mov
aaa
mov
in
outsb
fldenv
out
ljmp
ds
push
or
inc
rcrb
jle
out
loopne
jl
mov
loopne
inc
dec
push
ds
cmp
ljmp
out
sbb
xchg
xchg
ret
sti
and
sub
or
adc
mov
mov
jb
pop
push
clc
in
ror
lods
bnd
int
data16
movsl
mov
cmp
rcrb
lods
push
dec
enter
sbb
les
incl
sbb
shlb
xchg
nop
inc
sahf
mov
inc
mov
pop
jnp
aad
vmovaps
loop
mov
idiv
scas
mov
popf
shll
lock
jge
adc
inc
mov
push
sarl
jg
bound
cmp
std
adc
cltd
sbb
mov
nop
repnz
sbb
ljmp
in
push
cmpsb
testb
lret
ljmp
dec
xchg
jae
enter
and
jno
lds
sbb
out
xchg
jp
outsl
mov
mov
negb
sub
fmul
nop
inc
popa
pushf
rcrl
gs
int3
mov
lret
mov
inc
popf
mov
push
lret
push
mov
sbb
ret
out
mov
sbb
leave
pop
mov
adc
mov
cmp
add
div
or
shr
sbb
pop
or
pop
mov
fisttpll
cmp
cs
cmp
dec
out
js
push
dec
dec
ds
cli
loope
rorb
mov
fwait
dec
sbb
and
pushf
ret
or
xchg
pop
pop
xor
and
aas
add
daa
inc
adc
mov
loop
push
push
ret
mov
xchg
dec
jle
push
push
adc
mov
sbb
aam
out
mov
sbb
xchg
jno
xchg
mov
insb
cmp
mov
ds
xchg
sbb
mov
repnz
sar
fcoml
stc
push
or
lds
dec
inc
xor
idivb
sub
or
add
or
scas
cs
jle
addl
pop
push
out
cmp
fmuls
jge
mov
pop
jns
and
insb
sbb
cmpsl
inc
xor
and
jo
outsl
xchg
lahf
out
inc
mov
rcrb
mov
jbe
mov
nop
out
xchg
cmpb
fcomp
inc
inc
push
decl
xchg
or
or
push
sub
and
mov
push
rcll
xor
call
mov
test
dec
sbb
fcmovu
cmp
cmp
push
pop
dec
xchg
jmp
xchg
jp
das
inc
call
mov
adc
sbb
adc
or
in
test
repnz
pusha
jmp
das
sahf
pop
jbe
cmp
xchg
loope
push
mov
cld
sahf
or
int3
and
fsubs
fildll
lock
dec
pop
mov
lcall
imul
or
mov
push
mov
xor
call
sti
inc
add
xchg
int3
push
cltd
jns
or
xchg
inc
adc
and
jb
andb
sbb
filds
xor
xlat
sbb
data16
data16
out
fs
mov
outsb
dec
mov
lea
pop
std
mov
jns
pop
arpl
push
repz
xchg
mov
mov
call
mov
mov
and
mov
dec
cmpsb
mov
xchg
sub
pop
lea
les
push
sub
outsl
push
cmc
mov
mov
or
shl
inc
xor
push
clc
aam
and
dec
push
push
ffree
stos
xor
jg
push
sub
jnp
xchg
inc
push
inc
lods
pop
imull
adc
repz
cmpsl
loope
es
nop
adc
jnp
jmp
clts
addr16
push
cmpl
adc
fstps
inc
adc
and
fstpl
and
jae
dec
pop
xor
push
data16
fs
jmp
pavgw
test
xor
test
dec
and
push
sub
es
aaa
mov
mov
lret
dec
lds
xlat
sbb
call
cmc
jg
aad
or
imul
es
xchg
mov
dec
divl
popa
inc
psubw
sub
xor
mov
inc
movsl
out
test
nop
xchg
stc
pop
std
sub
aas
dec
cmp
mov
inc
mov
repnz
idivl
lea
mov
and
inc
add
jg
stos
xchg
ja
nop
ja
stc
lods
push
aaa
decl
movsb
lock
inc
add
dec
ss
mov
jne
arpl
les
and
mov
xor
cs
inc
push
pop
lret
pop
add
in
xchg
jl
fcomps
cmp
cmpsl
hlt
add
arpl
repz
mov
aas
rcl
std
pop
mov
fbstp
or
aaa
lahf
sbb
xchg
rclb
adc
jge
popa
xchg
adc
dec
movsl
cmp
outsl
neg
fnstcw
cmp
pop
leave
jecxz
lcall
cmpsl
mov
mov
push
inc
cmp
rolb
xor
in
loop
push
dec
aam
dec
js
pop
xchg
xchg
sbb
jb
insb
add
adc
pop
lret
decb
pop
or
mov
insl
sbb
dec
mov
fwait
test
imul
and
test
mov
xor
pop
mov
cmp
and
fsubs
jmp
xchg
push
aam
mov
mov
test
outsb
int3
jp
orb
inc
xlat
lods
xor
push
jle
loopne
ss
jp
dec
dec
cmpsl
fildl
es
or
mov
daa
ficoms
mov
std
sbb
lcall
pop
data16
insl
lea
lods
in
sub
jg
jge
ja
add
test
mov
sub
pop
xchg
xchg
ror
popl
mov
out
arpl
cs
int
cmc
or
jbe
mov
jmp
inc
jmp
lock
fdivp
lods
insb
cmpsb
add
dec
inc
ret
cmpl
sub
xchg
lock
and
sbb
call
fcoms
ss
inc
xchg
iret
pop
or
mov
cmp
scas
lahf
lret
xchg
xchg
cltd
lret
js
push
mov
insl
pop
mov
or
or
cmp
shlb
xor
loop
push
call
sti
add
pop
scas
inc
mov
push
cld
cmc
lock
dec
push
sub
ds
test
bnd
and
adc
and
ficomps
fs
movsb
push
loop
and
loop
lods
mov
js
add
mov
add
mov
xchg
pop
les
ss
sub
jle
mov
xchg
imul
in
push
mov
shl
aam
call
pop
jb
mov
mov
stos
jbe
pop
aaa
imul
sti
stc
gs
lods
fadds
xor
rclb
adc
inc
insl
push
push
inc
movsl
mov
pop
xchg
lea
mov
frstor
mov
je
adc
mov
mov
and
push
xchg
push
or
mov
jmp
cs
cmp
mov
jecxz
jo
fnstcw
dec
jnp
pop
enter
mov
shl
push
cltd
sbbb
lcall
fistps
push
data16
int
push
xchg
mulb
adcb
aad
rolb
mov
decb
imul
fcos
pop
or
inc
pop
push
cmp
jb
daa
enter
aaa
bound
je
lahf
dec
arpl
mov
fs
test
add
lock
mov
cmp
adc
insb
mov
cmp
cmpsl
and
in
jno
xor
scas
inc
int3
mov
popf
adc
pop
arpl
jle,pt
stos
imul
pop
pop
jmp
into
xchg
mov
push
jmp
fsubr
outsl
dec
ds
hlt
sub
in
mov
sub
clc
mov
jae
adc
jmp
mov
and
lea
dec
aaa
and
add
imul
mov
sub
push
push
addr16
idiv
cmpsl
outsb
lret
mov
out
ficoml
pusha
and
flds
pop
dec
les
stc
mov
in
int
arpl
pop
mov
std
lahf
outsb
push
inc
fdivs
das
fmul
jg
xchg
and
adc
and
jge
cwtl
cmpsl
out
xlat
jb
jo
loop
loopne
push
pop
xchg
insb
repnz
in
push
stc
fsubrl
in
outsw
or
loopne
jnp
dec
inc
mov
add
aas
sub
dec
sub
or
icebp
dec
adc
sbb
dec
hlt
push
inc
iret
push
insl
lret
mov
sbb
mov
lds
jbe
adc
push
mov
or
cmp
aam
inc
ja
or
sub
stc
insl
roll
pop
adc
xlat
jl
cmp
daa
test
dec
xor
mov
shll
shl
je
cmpsl
mov
or
or
dec
pop
out
ret
bound
adc
adc
xchg
pop
push
imul
in
push
orb
xchg
insl
out
push
roll
ja
sbb
movsl
scas
in
gs
inc
cld
add
jg
inc
or
jl
fcompl
inc
mov
scas
push
repnz
pop
dec
xchg
mov
inc
push
cwtl
testl
cmpsb
jae
inc
xchg
ud1
icebp
ljmp
pop
jmp
enter
xchg
jl
gs
push
mov
xor
or
leave
dec
sbb
pop
lret
jle
adc
sbb
pop
ds
and
popf
enter
xor
inc
mov
mov
fisubl
aam
mov
imul
enter
scas
pop
xchg
push
push
mov
adc
sub
cmpsl
mov
add
inc
push
and
in
dec
xorl
cmp
and
in
lcall
jmp
cmc
mov
sbb
mov
jmp
jo
stc
jg
repnz
bound
cltd
popa
xchg
test
mov
mov
mov
xor
pop
fs
and
or
scas
and
ret
or
sti
sub
addr16
mov
inc
dec
test
inc
movsl
xchg
adc
lods
dec
pop
mov
ljmp
inc
mov
push
jmp
xor
xchg
outsl
sub
jecxz
xor
push
push
and
arpl
in
outsl
lret
jmp
xchg
aaa
mov
dec
sub
sub
xor
orl
call
shll
cmp
mov
xor
gs
je
adc
mov
loop
pop
imul
adc
and
fs
xor
and
decl
aas
out
xchg
stc
insl
out
jne
mov
mov
std
test
sub
leave
sahf
jnp
xor
adc
loop
out
rcl
adc
xchg
cmc
dec
ror
in
jp
cmp
mov
mov
xor
out
mov
pop
fstl
jge
dec
dec
mov
jne
mov
push
std
jmp
in
sbb
cmp
sti
xor
mov
das
lds
and
jg
sub
std
cld
add
loope
gs
xor
mov
sub
aad
negb
push
adc
jp
xchg
inc
xchg
icebp
sub
sbb
repz
adc
into
jge
adc
mov
pop
arpl
negl
cmp
cmp
adc
jle
pop
xchg
sbb
sub
or
pop
cmp
push
xchg
nop
aam
cli
cmp
pop
mov
ja
outsl
inc
pop
adc
scas
lret
aas
xchg
jp
popa
lods
fisttpl
ret
fisubrs
cmpsl
into
aad
pop
and
iret
aaa
out
xor
aaa
loopne
xorl
push
inc
dec
rcrb
mov
cmp
and
push
sub
sub
aaa
dec
sti
dec
mov
jmp
sarl
mov
mov
neg
pushf
inc
repnz
ret
inc
fdivrl
jecxz
dec
push
loope
mov
jp
dec
pop
xchg
inc
mov
shrb
outsl
jns
xchg
mov
adc
rolb
sbb
sub
dec
aad
loope
adc
xor
popf
xchg
pop
pop
add
lods
dec
adc
jnp
pop
addl
mov
jns
les
out
shrl
pop
pop
jb
jg
sbb
out
lea
xchg
push
xchg
inc
ficomps
orb
lahf
pusha
bound
mov
mov
pop
icebp
push
jecxz
sbb
fwait
add
add
bound
xchg
pop
sub
pop
adc
mov
outsb
leave
jmp
xchg
push
fisubrs
test
xor
mov
dec
out
adc
pushf
sbb
popa
adc
mov
xchg
add
cmp
push
subl
and
leave
jbe
sub
cmp
add
addl
mov
fs
je
mov
mov
repnz
lret
jle
outsb
add
les
mov
adc
mov
jl
push
gs
sub
rorb
jl
arpl
popa
jno
xor
cltd
popl
cmp
inc
mov
adc
mov
cld
cltd
xchg
sbbl
or
fimuls
push
lret
pop
jnp
xchg
fsubrl
mov
pop
push
mov
in
xchg
jo
pop
movsl
shll
pusha
push
mov
out
sub
lea
pop
xchg
pop
sub
pusha
addr16
inc
mov
scas
daa
xor
cmp
rolb
rcll
push
inc
aam
std
add
ret
lock
mov
mov
inc
js
push
cmp
push
add
sub
dec
shlb
pop
pop
lock
lods
push
popa
lret
cmp
in
scas
lret
mov
jecxz
inc
mov
adc
xor
push
xchg
imulb
push
push
sahf
pop
add
adc
sarl
jb
or
loope
mov
xor
loop
dec
xchg
mov
xlat
rcrb
div
mov
in
push
fstpt
xchg
mov
rcrl
cmp
cltd
pop
push
iret
je
mov
or
mov
sbb
push
sahf
mov
pop
les
out
lea
xchg
add
cmpsb
xchg
pop
jecxz
or
jb
xor
inc
call
sbb
pop
jbe
imul
test
es
test
jo
and
inc
outsb
loope
pop
pop
mov
test
xchg
mov
inc
jo
add
xchg
mov
or
out
test
scas
sarb
push
data16
gs
xchg
sbb
lret
and
and
stc
push
outsb
ret
enter
lock
jg
lods
jno
movsb
push
or
xchg
push
or
sahf
cmc
sub
decl
mov
outsl
lahf
xor
push
jne
gs
sub
xchg
cmpsl
pop
xchg
jns
mov
sub
mov
mulb
jl
or
movsl
ljmp
pop
cmc
inc
out
cltd
jge
lods
pop
and
insb
sub
fidivl
gs
inc
mov
fdivr
lcall
pop
dec
xor
lret
aam
fildl
mov
jno
je
pop
or
add
clc
pop
xchg
dec
shl
push
int
cs
pop
loope
mov
out
pusha
stos
cmpsl
dec
lret
push
dec
fwait
out
push
and
subl
sub
and
lahf
add
adc
cld
in
bnd
fwait
adc
push
ljmp
pop
iret
enter
add
sbb
std
shlb
rol
or
rorl
dec
outsb
or
inc
in
into
mov
fwait
push
aad
xchg
fistps
sbb
insb
mov
xor
and
jbe
movsl
mov
adc
in
roll
call
push
sub
lcall
ljmp
inc
insb
flds
xor
or
rolb
jmp
add
shll
mov
dec
inc
or
or
pop
xor
sub
sbb
rdtsc
pop
lret
pcmpeqd
andb
gs
xor
scas
std
add
push
pop
mov
negb
les
in
fmull
mov
jae
inc
lahf
scas
cli
cmp
pop
lret
data16
push
mov
ja
adc
insb
sbb
lahf
adc
popa
test
mov
inc
cmpsb
mov
pop
cmp
sbb
sub
xor
fs
enter
jnp
xor
sub
add
aaa
test
fisttpll
mov
jg
and
arpl
xchg
mov
sub
sub
cmc
mov
clc
xchg
push
dec
or
int
stos
cmpl
test
aas
icebp
adc
pop
shrl
mov
cmpsl
addr16
imul
xchg
mov
ljmp
lcall
mov
mov
and
stos
or
and
mov
mov
icebp
ss
push
imul
mov
or
jecxz
loopne
out
push
cmp
xor
adc
dec
jl
mov
push
mov
push
inc
sbb
dec
stos
pop
pop
in
jge
lret
push
leave
loop
dec
push
inc
mov
insb
dec
rolb
addb
add
mov
mov
ret
lods
push
pop
out
xabort
imul
add
sub
jmp
xchg
adc
mov
adc
pop
mov
push
mov
test
sub
xchg
xor
paddsw
inc
or
cmpsb
cltd
lods
add
out
push
mov
cmp
test
pop
loope
arpl
mov
shll
jl
andl
addr16
xchg
cmp
jne
jno
inc
jecxz
and
cmc
test
loop
xchg
in
loope
call
out
jnp
stos
mov
mov
aad
dec
lcall
dec
leave
mov
jmp
push
mov
insl
push
aaa
in
mov
addb
in
sbb
mov
pop
adc
jmp
push
mov
xchg
shll
mov
inc
out
jno
jg
dec
gs
movsb
pop
out
jbe
test
pop
pop
xchg
sahf
ret
outsl
stos
mov
xchg
and
push
mov
cli
inc
out
ret
mov
or
aaa
mov
hlt
xchg
adcb
bound
lahf
pop
mov
xchg
sti
and
test
das
xor
and
xchg
pop
pusha
pop
jbe
ficompl
pop
loope
cwtl
dec
test
incl
cmp
in
add
pop
sub
fistpl
cltd
stc
repz
jcxz
jns
sub
or
insl
icebp
aaa
add
pop
jecxz
popa
int3
jae
cltd
imul
xchg
add
test
jle
es
in
pop
and
add
sbbb
lret
cld
xchg
xchg
dec
insl
pop
mov
leave
das
sbb
mov
andb
inc
or
and
or
pop
mov
push
adc
sbb
out
pusha
pop
loopne
popa
fistpll
mov
and
fldenv
fadd
mov
pop
out
sbb
pop
shrl
add
fisttpll
nop
inc
mov
and
dec
imul
jns
pop
lock
pusha
test
rorl
and
mov
scas
push
cli
jb
out
fisubl
aad
into
pop
fs
xchg
push
dec
out
jp
xchg
jle
in
ret
sub
stos
inc
test
int3
sti
out
int3
cmp
mov
mov
pop
loopne
sub
xor
cmp
loopne
sbb
push
lods
push
mov
rolb
ret
sti
lret
and
mov
xchg
and
pop
outsb
sbbb
jecxz
mov
cmp
inc
sbb
push
jl
push
xlat
xchg
pop
push
pop
push
pop
adc
lahf
fmul
mov
ficoms
pushf
jmp
lods
add
add
jo
or
pop
mull
inc
adc
xchg
orl
dec
mov
mov
push
jb
mov
lahf
sbb
lahf
xchg
dec
jb
enter
stos
mov
fidivrl
mov
stc
xor
iret
xchg
call
inc
jae
inc
lock
and
std
cwtl
add
push
cmp
fiadds
fistpll
xchg
cmc
movsl
scas
mov
sti
adc
lods
dec
push
sbb
sahf
add
jbe
f2xm1
bound
fcomi
or
xor
jmp
jo
std
pop
mov
into
mov
popa
cmpsb
outsb
inc
fimuls
xchg
int
pop
das
xor
ficoml
mov
je
xor
mov
push
sub
nop
test
dec
lds
imul
jecxz
jo
arpl
clc
adc
xchg
lcall
sbbb
aas
dec
pop
mov
lock
outsl
xchg
and
movsb
sub
xor
arpl
cmpsb
adc
fsubrs
stos
xor
dec
xchg
jg
adc
mov
jge
mov
xlat
xor
mov
fs
mov
or
sub
sbb
xlat
rorl
aad
mov
std
pop
mov
push
adc
sbb
xor
pushf
mov
mov
adc
jno
cmpb
gs
push
gs
mov
xor
fimull
cs
lret
imul
mov
int3
sbb
pop
fs
jbe
fcomps
insl
push
inc
mov
rcrl
pushf
scas
stos
jne
cmp
dec
cltd
ror
test
ljmp
xlat
rcrb
sub
sub
sbb
addr16
ja
int
aaa
sahf
subb
pop
inc
mov
data16
dec
sar
scas
loop
push
or
loopne
loopne
jl
jbe
scas
ficompl
pop
lcall
arpl
or
shl
jnp
rol
or
or
outsb
add
xlat
repnz
adc
and
push
cld
insb
pop
push
ficomps
mov
pop
push
aaa
push
dec
push
dec
xor
inc
inc
test
or
jae
mov
jmp
scas
pop
or
jno
xor
dec
mov
popl
dec
pushf
iret
sbbl
in
cmpsl
mov
repz
sub
fsubl
inc
int
pop
push
mov
xor
jae
adc
lods
fmuls
mov
mov
xchg
cmp
pop
or
pop
lret
subl
jbe
enter
adc
sti
mov
mov
add
mov
addr16
cmc
fwait
jb
fistpll
stc
pop
stos
xchg
push
push
push
into
jg
mov
movsl
inc
inc
sub
sub
or
call
and
xor
out
cmp
push
pop
mov
pop
add
in
mov
fidivrs
sbb
add
mov
sub
jbe
push
pop
fnstsw
test
sbb
sub
ds
sub
test
mov
rclb
sub
push
int
arpl
mov
push
xchg
sti
and
out
shr
mov
aas
cmp
or
pusha
nop
add
into
cmpsb
push
push
jnp
ljmp
mov
pop
outsb
call
int3
xor
fstps
mov
inc
mov
test
loope
xchg
pop
dec
aas
insl
adcb
leavew
push
fidivrs
lcall
ss
stos
pop
aas
mov
scas
pop
cmpsl
push
jl
movsl
into
mov
std
rorl
fisubl
lret
push
js
ja
ss
loop
aam
iret
aaa
xchg
push
mov
movsl
sbb
pop
mov
subl
ds
mov
pop
jnp
mov
mov
mov
mov
push
or
push
jnp
cli
pop
lea
sti
cltd
push
or
push
mov
les
mov
mov
lock
or
pop
cmp
mov
sub
xor
and
jae
inc
push
fwait
dec
jne
int
cmp
mov
fdivr
mov
and
sbb
inc
pop
subl
dec
scas
sub
lods
add
lods
fidivrs
sahf
sub
push
cmp
faddl
xchg
outsb
adc
aad
mov
mov
mov
xor
mov
sbb
adc
std
or
cs
loopne
xchg
das
push
mov
add
nop
dec
test
xchg
mov
adc
sbb
dec
decb
jo
mov
inc
pusha
pop
sbb
mov
xchg
dec
pop
or
testl
pop
hlt
inc
fcomip
outsb
dec
cmp
dec
ror
xlat
xchg
sbb
inc
mov
fiadds
inc
or
jne
pop
cmpsl
mov
inc
daa
addr16
insb
mov
jecxz
pop
adcl
mov
fnstsw
sti
dec
jns
test
aaa
andb
mov
dec
jle
int3
or
mov
dec
pop
orb
loopne
jbe
pushf
pop
xchg
adc
push
push
aam
xchg
push
repz
repz
imul
mov
test
sbb
xor
std
movsb
cmp
arpl
mov
mov
inc
add
sarb
jecxz
call
andb
cltd
pop
or
pop
mov
dec
imul
mov
mov
enter
cltd
iret
outsl
rcll
and
adc
mov
xchg
shl
mov
sbb
scas
ss
push
jg
cmp
sub
stc
jge
cmpb
cmpsb
enter
adc
cmc
lahf
ja
ljmp
mov
adc
xor
pop
stos
cmp
gs
loopne
ficoml
jle
mov
jmp
xchg
xchg
jae
fs
lahf
or
pushf
test
ss
ret
aam
lods
cmp
sbb
adc
jge
lods
mov
and
movsb
movsb
test
or
pop
or
movsl
in
cwtl
ljmp
cltd
enter
addb
sar
cmc
or
test
push
movsl
pop
jle
je
arpl
hlt
xchg
test
outsb
and
or
int3
mov
scas
cmpsl
cmp
and
pop
icebp
pop
cmp
jge
xchg
es
into
shr
fcomps
xor
mov
push
rcrl
cmc
repz
push
imul
pop
push
xchg
test
fsubl
push
xchg
push
mov
adc
xor
jno
and
push
jb
lret
fidivrs
push
xor
insb
and
popl
rcrb
sbb
and
iret
pop
cmp
mov
es
mov
adc
bound
mov
cmpsl
add
mov
push
cld
hlt
nop
mov
lods
sarl
pop
sti
xchg
xchg
leave
xor
rol
pop
xor
lods
data16
mov
pop
stos
enter
lock
rcrl
and
mov
repz
and
inc
addr16
and
dec
in
imul
incl
push
lret
dec
addb
out
and
dec
seta
addb
hlt
ret
push
clc
push
xor
stos
lods
iret
xor
fmul
stos
and
sbb
sub
popa
mov
and
cmp
cwtl
inc
popf
aad
lods
js
jp
cltd
sbb
pop
stos
push
cli
in
lcall
rcrb
sbb
push
pusha
sti
dec
mov
and
xchg
mov
mov
shrl
cltd
adc
fildll
cs
sub
repz
mov
int3
or
aad
testl
mov
mov
pusha
jno
pop
ljmp
xchg
jb
shrl
mov
push
mov
xchg
xor
xchg
inc
in
pop
ja
xchg
mov
test
add
loopne
stc
fiadds
test
sbb
or
push
push
xor
imul
das
pop
repnz
inc
movb
mov
lret
pop
xchg
gs
dec
lods
das
dec
out
pop
popfw
xor
icebp
mov
cs
dec
pushf
push
test
imul
sub
cltd
mov
lahf
rep
test
loopne
sbb
insl
push
pop
add
stc
lods
sub
xor
sbb
mov
mov
int3
rol
mov
cmpsb
lods
push
lret
mov
lods
pushf
push
sub
out
les
shlb
outsb
ficoms
repz
aad
out
int
loope
orl
mov
stos
fdivs
fwait
popa
inc
sub
mov
adc
jecxz
or
insb
outsl
imul
cmp
popf
inc
out
pop
repnz
or
sti
out
pop
push
xchg
mov
lcall
mov
outsb
push
out
js
rclb
lds
sbb
mov
ss
mov
icebp
mov
sub
lea
int
dec
shl
and
or
les
div
pop
jp
push
xlat
movsl
cmp
sub
jg
or
ss
mov
jecxz
lret
aam
leave
jmp
mov
adc
xchg
add
lea
cmp
out
xlat
adc
fs
pop
xchg
add
div
rolb
out
jp
pushf
test
sbbl
test
sarb
rclb
sarl
pop
loop
jecxz
repnz
dec
add
adc
sub
push
hlt
mov
push
lds
xor
and
xor
mov
mov
int3
inc
mov
pop
ds
and
js
jo
mov
popa
jne
out
jbe,pn
test
mov
mov
mov
add
inc
pop
test
cmp
fsts
dec
and
sbb
and
clc
cmpsl
movsl
ja
out
sub
jg
xor
push
xchg
adc
inc
sub
mov
add
cmp
jecxz
sbb
stos
arpl
inc
dec
test
pop
adc
pop
cmp
movsb
sbb
test
cli
inc
testb
inc
xchg
add
sub
sar
out
xchg
stc
push
inc
dec
lods
xor
xchg
inc
xchg
imull
out
js
insl
push
and
mov
in
inc
vpavgw
fwait
xchg
sti
mov
mov
xor
clc
mov
jo
adc
jb
mov
mov
nop
cmp
dec
loopne
pop
stc
sysenter
lods
xor
mov
dec
mov
lcall
test
popa
fsubl
iret
sbbl
add
das
addr16
mov
nop
aaa
mov
dec
xor
subb
mov
pop
js
bound
rorl
sbb
pop
jo
jo
jnp
adc
cwtl
pop
jmp
ss
int
cmp
aas
or
rcll
jmp
push
inc
mov
sahf
add
cld
and
lahf
fildll
push
push
ret
arpl
pop
inc
jbe
add
mov
xchg
xor
adc
cmc
or
ss
mov
adc
rcrl
and
inc
and
sbb
and
nop
fimuls
popf
mov
dec
inc
or
leave
fcompl
rcll
cmpsl
sti
dec
mov
fnsave
inc
pop
insl
xor
in
push
lods
adc
xchg
insl
or
icebp
adc
in
xor
lea
gs
popa
test
frstor
mov
pop
dec
mov
cmp
loopne
xlat
push
leave
and
into
sub
add
gs
adc
push
insl
ljmp
jnp
cmpsb
pop
mov
lock
lahf
pop
jbe
mov
lret
fsubrp
xor
sub
sbb
pop
xlat
in
mov
mov
popf
arpl
pop
mov
sbb
cld
or
jp
adc
cmpl
lret
mov
fnstsw
dec
mov
repz
roll
pop
into
ret
lods
adc
jbe
and
out
push
inc
jae
pop
jp
mov
mov
sbb
sbb
cmpsl
inc
aas
mov
push
xchg
xchg
div
mov
or
inc
in
in
fdiv
cmpb
test
mov
stc
pop
ja
aas
in
mov
pop
andl
out
mov
or
sti
popa
test
and
cmp
sub
aaa
cmpsl
cs
sub
imul
stos
sub
dec
leave
jnp
mov
imul
out
pop
int
int
sub
pop
jnp
dec
stos
fcomps
mov
or
and
lcall
push
hlt
mov
or
fcmovnu
sbb
js
loopne
and
pop
insb
test
loopne
push
push
sbb
jns
jns
inc
fdivl
adc
push
or
lock
xlat
jmp
mov
add
mov
test
je
mov
jg
in
in
mov
lcall
mov
sarb
test
jge
cwtl
clc
in
cmp
movsl
out
loop
and
in
lock
sub
test
es
pop
adc
jle
push
jns
or
shll
rol
outsb
add
subl
pop
sti
stos
mov
inc
mov
lods
call
repz
inc
aad
lcall
popl
dec
repz
pop
fs
push
icebp
jmp
or
repnz
fldenv
cli
or
movsb
mov
cli
ss
int3
and
test
rcl
or
jb
lret
and
sbb
sub
sub
cmp
push
subb
fcompl
jle
sbb
out
lods
int3
push
mov
mov
pop
aam
outsl
dec
lea
icebp
cmpsb
aas
cmp
icebp
cmpsl
add
xor
mov
es
shll
cmp
add
ja
fwait
addr16
in
stos
sbb
into
push
and
jno
add
dec
xchg
decb
dec
push
sub
shrb
pop
mov
mov
cmp
jp
rclb
add
add
rorl
mov
inc
sbb
sti
cmp
je
and
std
or
aam
sub
adc
and
push
and
pusha
jl
mov
into
sub
sub
adc
mov
scas
or
shlb
shrb
jb
add
das
jnp
gs
and
dec
scas
xor
push
inc
repnz
js
divb
in
mov
enter
add
out
shlb
call
push
xchg
cmp
adc
inc
mov
pop
out
cmp
insl
dec
jns
fcmovne
addb
xchg
int3
push
nop
inc
mov
lds
int
xor
sub
push
int3
add
pop
popa
in
and
xor
xchg
lds
lret
es
sarb
add
enter
lret
movsb
js
nop
pusha
dec
xchg
fucomip
aas
adc
add
in
pop
pop
testb
mov
sub
push
mov
stc
loop
or
mov
or
xchg
cs
sub
push
and
xor
inc
and
jmp
sub
ror
jo
pop
mov
and
int3
fsts
scas
sub
cs
sub
pop
add
push
leave
or
inc
sbb
jne
and
or
or
fcomip
sti
int3
and
xchg
clc
arpl
or
stc
in
popf
leave
mov
mov
daa
out
xchg
rcrl
movsl
sbb
xchg
stc
ljmp
dec
xor
mov
xor
addr16
movsl
rcll
sbb
bound
jp
xor
pushf
push
ret
and
mov
adc
lea
jle
and
mov
and
sub
mov
and
mov
movsl
cmc
fimull
out
add
jg
pusha
loope
push
inc
jns
cmpb
sub
mov
ret
ds
mov
adc
sbb
push
cmpsb
or
add
jecxz
add
pushf
xor
xor
inc
dec
outsl
inc
mov
test
and
pop
movsb
sub
or
cld
pop
xchg
jne
test
mov
or
jmp
inc
pushf
daa
cmp
dec
jnp
add
or
jmp
sub
dec
fmul
pop
pop
jae
adc
stos
jmp
aas
insl
push
push
flds
into
sahf
inc
ret
lcall
cmp
mov
fstpt
mov
scas
out
add
daa
inc
xchg
not
lea
push
dec
mov
xchg
out
jle
sahf
xchg
and
mov
scas
jmp
mov
sbbl
mov
xorl
mull
push
mov
mov
mov
out
adc
stos
movsl
sbb
pop
xor
inc
sub
lock
lahf
mov
adc
lcall
jno
mov
dec
nop
mov
mov
roll
jnp
pop
or
pop
fistpll
test
jmp
xor
aas
insb
adc
xor
aam
test
jecxz
fistpl
inc
pop
mov
xchg
ret
inc
ret
or
pop
and
push
stc
scas
mov
repz
daa
mov
scas
fsts
hlt
mov
pop
lods
je
icebp
ja
daa
cmp
pop
push
push
fisubs
fldenv
inc
daa
mov
jp
inc
xor
repnz
push
inc
mov
lods
int
lahf
push
push
dec
decl
xor
push
or
mov
sahf
mov
aas
ja
cmc
cs
mov
fidivs
add
enter
in
mov
pop
sarb
cmp
movl
dec
sahf
sub
mov
shlb
jge
push
sbb
cmp
ljmp
dec
arpl
cmp
inc
out
movsl
push
adc
test
mov
jno
stos
test
pop
adc
hlt
das
clc
daa
cmp
pop
in
add
mov
mov
lret
jmp
arpl
lcall
or
mov
jb
dec
add
lret
and
sbbl
pop
adc
int
fimuls
mov
mov
cmp
movsb
iret
inc
mov
cli
xor
sahf
xchg
shl
fadd
gs
subl
jge
addl
leave
mov
shrl
push
add
mov
adcl
sbb
and
dec
popf
push
add
jb
pop
pop
push
roll
test
xchg
pcmpeqw
and
and
inc
xchg
mov
popf
mov
cmp
adc
sbbl
push
cmc
je
and
adc
fdivrl
je
daa
idivl
pop
mov
adc
mov
xchg
push
add
fidivrl
roll
push
xchg
out
xchg
pop
mov
mov
lods
cli
sbb
xchg
fwait
pusha
popf
jg
aad
je
iret
push
daa
ja
lea
add
dec
ret
cwtl
cli
adcl
pop
inc
sub
jne
inc
cld
je
jne
xchg
popa
pop
loop
imul
cwtl
aaa
ss
cltd
push
xlat
enter
lret
sub
jo
dec
addr16
rol
mov
scas
dec
and
in
fnstsw
test
test
fimull
out
fwait
and
add
mov
das
bound
bswap
lahf
mov
adcl
int
mov
fsubl
mov
sub
sahf
sbb
or
movsb
stos
adc
xor
pop
add
adc
sub
mov
mov
jecxz
jns
sub
mov
push
cmp
xchg
cs
jns
pop
jno
inc
jg
lods
out
dec
mov
arpl
int
repz
imul
pop
add
ds
adc
and
xor
add
or
js
sbb
sbbb
mov
mov
add
les
bound
lcall
cmpsb
int
jle
sub
pop
mov
push
andb
cmp
xchg
fs
and
jne
shlb
pop
xchg
jo
mov
xlat
add
push
cmpsl
and
mov
xor
sub
xor
dec
add
ljmp
dec
mov
pop
test
in
fsts
int3
push
test
add
js
inc
imul
sbb
push
scas
push
dec
pusha
mov
out
xchg
pusha
cmp
cli
mov
popa
mov
jo
dec
push
mov
sub
je
aas
scas
cmp
inc
pop
jp
sub
mov
dec
loopne
dec
cmp
in
cmp
bound
mov
adc
xchg
mov
and
lcall
sbb
bound
dec
cltd
push
lds
aad
push
loop
dec
cltd
test
pop
pop
out
cmpsb
cmpsb
insb
pop
out
repnz
cmp
fidivl
pop
pusha
sub
mov
cld
test
mov
sahf
mov
adcl
ds
ret
dec
fs
mov
jne
lcall
xchg
fiadds
push
dec
ret
roll
addl
mov
sbb
push
std
test
outsb
idivl
loope
push
push
push
ja
cmc
mov
in
sti
mov
mov
inc
lods
fs
imul
mov
add
dec
shll
add
gs
inc
decl
cmp
cmp
jle
in
mov
add
fwait
cmp
jecxz
push
push
repz
out
leave
or
adc
and
das
popa
and
dec
sub
or
adc
ljmp
popa
hlt
das
int
add
cltd
fimull
fldenv
mov
fnstcw
lcall
sbb
test
jns
fcmovbe
rol
mov
or
subb
mov
inc
cld
pushf
xchg
insb
sbb
fstl
inc
cwtl
xor
cmp
jp
or
movsl
inc
mov
pop
cmp
jp
sub
sahf
xor
imul
dec
aaa
out
mov
inc
or
sub
fnsave
pop
dec
jnp
and
into
cwtl
mov
or
adc
pop
add
push
mov
pop
pushf
inc
loop
mov
bound
clc
or
movsb
xor
lea
xchg
addr16
xor
pop
push
inc
or
add
mov
lds
xchg
jmp
std
add
mov
out
test
popa
sbb
dec
js
loopne
adc
pop
in
adc
push
je
pop
jecxz
and
orb
in
mov
or
mov
outsb
rorb
and
mov
jecxz
inc
inc
adc
mov
je
stos
sbb
dec
ss
dec
adc
dec
mov
jg
xlat
insl
sub
dec
clc
push
mov
or
jb
adc
es
and
cmp
out
jno
jnp
xor
mov
pop
out
lea
push
inc
pop
add
add
or
insl
cmp
aam
sub
aas
xor
add
inc
xchg
test
pop
pop
adc
fidivrl
mov
out
test
mov
cmp
frstor
adc
pop
pop
int
xor
xchg
ja
dec
mov
in
sub
and
ljmp
arpl
add
shr
pop
mov
into
pop
pop
not
xor
test
loopne
loope
and
popa
sbb
ljmp
inc
test
mov
mov
mov
stos
iret
imul
test
rcll
ja
push
adc
repnz
push
movq
inc
call
jmp
jl
insb
jb
xor
push
cli
iret
scas
loope
mov
push
cmpsl
cmp
ffree
arpl
pop
mov
and
mov
orb
in
stc
je
fisubl
pop
push
jns
fsubrs
mov
pop
les
pop
in
mov
jmp
dec
in
pause
stos
call
loope
inc
jmp
xor
call
dec
lock
adc
test
sub
shll
test
mov
jno
cld
adc
lea
pushf
scas
gs
xor
ss
mov
lcall
dec
inc
popa
push
pop
test
in
ja
popa
push
ret
or
lret
insl
and
push
lods
or
icebp
negb
pop
hlt
mov
or
insb
mov
shr
inc
dec
je
inc
jb
mov
mov
xlat
mulb
jns
out
mov
shl
mov
jo
sub
daa
stc
mov
xchg
cmp
jno
add
enter
aad
fcoms
clc
adc
ljmp
push
mov
cwtl
outsb
jno
sbb
jo
sbb
push
lock
push
sti
fcompl
icebp
lds
loopne
jmp
rolb
in
stc
pop
popf
push
jb
pusha
incb
mov
adc
loopne
jo
imul
jb
fcomps
mov
hlt
add
sbb
push
add
je
and
cmpsb
lods
into
sbb
mov
call
out
xchg
std
xor
pop
in
and
outsl
out
lods
lea
std
xchg
lds
jmp
nop
inc
pop
ds
loopne
sbb
jecxz
std
push
aam
mov
ret
sub
ror
ja
xor
inc
shlb
push
xor
push
cmp
push
subb
xchg
mov
push
sbb
aaa
or
out
mov
cmp
xchg
cmpsb
rol
push
or
in
or
xchg
cli
rol
xchg
test
loop
sub
call
sbb
push
pop
jno
andl
sbbb
jae
dec
enter
push
jmp
pusha
test
into
mov
test
inc
or
cmc
and
push
sub
or
jnp
fisubs
cmpsl
cmpsb
xor
xchg
sbb
rolb
adc
mov
push
sub
adc
movsb
pop
or
xchg
inc
aaa
in
sbbb
out
and
sub
push
xor
scas
in
mov
inc
fldl
in
and
mov
dec
enter
addl
dec
mov
adc
cmp
dec
push
dec
push
movzwl
and
and
and
and
pop
jns
outsl
push
js
sbb
mov
lahf
lret
cmc
push
leave
push
test
mov
mov
cmp
pop
add
cmp
push
push
mov
arpl
shll
push
cmp
fsubl
ss
inc
lods
mov
mov
push
mov
jno
std
mov
stc
movl
shrb
test
cwtl
adc
fdivs
mov
sbb
into
insl
dec
in
sbb
add
test
add
roll
add
adc
lcall
and
push
push
sbb
mov
outsb
rolb
outsb
mov
pop
sub
and
sbb
les
int
cwtl
inc
in
and
int
testl
push
shr
cmp
inc
sbb
jmp
xor
or
jg
cmp
and
adc
das
ljmp
dec
les
lcall
push
addl
or
fldl
and
lahf
dec
or
shl
test
movsl
dec
push
jge
mov
adc
sahf
pushf
mov
cwtl
cld
outsl
fs
pop
das
fcoms
inc
lods
mov
scas
bswap
push
pop
fcomps
jne
mov
popf
pusha
notb
mov
std
add
mov
fcomip
xchg
jne
or
cmp
inc
lds
out
cmpl
stc
push
pop
mov
out
xor
sub
outsl
sub
mov
aaa
lahf
xchg
inc
cmp
lcall
enter
xor
add
add
dec
adcb
pop
xchg
sub
les
out
xchg
in
mov
dec
or
hlt
lods
cwtl
mov
mov
pop
cmp
int
mov
mov
sbb
es
dec
call
fucomp
dec
and
sub
mov
add
add
cvtpi2ps
pop
testb
rcrl
icebp
leave
imul
lea
push
xchg
pop
lock
addr16
sahf
push
xchg
push
sahf
mov
es
sub
and
shr
sahf
insl
call
xor
outsl
imul
dec
inc
mov
ret
add
sar
mov
popw
mov
mov
dec
jmp
fidivl
sub
repz
cmp
push
das
and
aad
push
push
and
mov
sub
jmp
mov
les
call
xchg
add
mov
icebp
in
inc
cmp
push
clc
pop
movsl
mov
cltd
rorb
xor
rcrl
mov
ret
aad
sub
cltd
lods
push
out
add
xor
jle
sub
add
fisubs
or
and
xchg
addr16
iret
repz
mov
stc
or
cmc
ja
cwtl
xchg
jp
sub
xor
scas
push
lret
repz
jmp
jmp
fsubrs
test
test
jp
test
lret
rcr
lock
ret
aas
test
cmp
stc
jecxz
or
out
dec
shrl
push
scas
fsub
arpl
add
cmp
shll
or
repz
push
add
shlb
out
dec
fsubr
andl
adc
xlat
insb
xchg
cwtl
leave
rol
add
cmp
mov
in
hlt
add
or
sbb
xor
dec
dec
mov
push
in
adc
pusha
dec
jbe
ljmp
fs
inc
adc
pop
out
js
mov
mov
sbb
mov
imul
xchg
mov
push
cltd
arpl
sti
dec
and
jns
pusha
mov
lret
cmp
pop
dec
mov
in
xchg
and
xchg
js
mov
ja
pop
mov
push
dec
mov
adc
jecxz
rcrb
cmp
loope
icebp
jae
repz
aaa
negl
dec
sbb
lcall
push
and
jle
dec
imul
cmc
ljmp
cld
inc
ss
popa
mov
cwtl
inc
pop
stos
lds
outsb
fs
sbb
xor
xchg
ss
ret
and
xchg
adc
cmp
bswap
mov
in
jns
cld
fcom
mov
and
in
icebp
or
pop
sbb
stc
and
sti
mov
mov
cmp
dec
or
sub
sbb
mov
pop
push
xchg
bound
mov
push
sysenter
mov
sub
gs
or
mov
cmpsb
movsb
test
out
mov
lods
sbb
popf
mov
jb
inc
in
clc
cmp
fdivs
mov
or
mov
mov
pop
js
mov
pop
mov
xchg
xchg
dec
adc
and
test
xor
out
fnstcw
scas
lcall
inc
xchg
dec
fcoml
push
cmpsl
cmpsl
xor
push
dec
mov
imul
bound
dec
xchg
sbb
fsts
lret
jle
inc
jecxz
js
push
icebp
xchg
ljmp
adc
sarb
insl
sub
nop
daa
out
pushf
push
pusha
out
cmp
roll
push
push
les
aad
mull
inc
adcl
push
lcall
cs
idivl
daa
fildl
les
cmp
movl
out
and
int3
loop
mov
test
inc
insl
gs
mov
adc
popa
mov
sub
jo
add
sbb
lret
stc
dec
jne
push
scas
pop
addr16
mov
inc
pop
pop
stos
nop
rep
loop
and
or
insl
push
js
inc
sbb
adc
push
orb
mov
lea
enter
aam
push
push
mov
cmp
test
xchg
test
and
push
stc
adc
sbb
std
ficompl
add
and
add
sbb
push
sbb
jecxz
cld
insb
lcall
dec
out
hlt
insb
out
daa
mov
sub
inc
adc
icebp
xchg
inc
loope
clc
dec
faddl
mov
ljmp
mov
pushf
mov
push
in
cmp
sbb
cltd
stos
bound
mov
push
or
adc
ds
jl
adc
mov
xor
inc
stos
mov
mov
fisubrl
pop
adc
lods
xchg
xor
adc
inc
cmp
mov
sub
jae
or
fsubrs
lret
nop
cmp
and
adc
jnp
test
lret
pushf
out
cwtl
and
dec
sbb
mov
in
setne
in
xor
repnz
mov
xor
fistl
cmp
jnp
jns
push
mov
sbb
cltd
insb
outsb
mov
cmp
sahf
add
pushf
push
std
add
mov
pop
out
ret
jb
mov
push
loopne
adc
call
int3
ret
push
inc
push
push
mov
pusha
je
addr16
addb
test
mov
jge
mov
pop
xchg
orl
nop
mov
inc
shlb
test
xchg
in
xlat
or
addl
mov
aam
jg
sub
and
adc
rorb
sti
pop
mov
add
mov
lea
jae
mov
cli
popa
into
mov
inc
or
and
adc
aaa
mov
dec
inc
repz
outsl
push
add
jmp
push
outsl
jmp
xchg
cmp
jae
jecxz
push
jp
xchg
fstpl
ret
mov
or
dec
inc
push
and
or
mov
sub
lods
push
mov
jno
scas
add
mov
jecxz
aam
test
hlt
pop
push
hlt
cmp
inc
xor
loop
or
pop
dec
into
xlat
in
movsl
rcrb
xor
aam
mov
push
push
pop
jno
adc
test
jae
push
dec
fstpt
fs
or
and
xchg
jns
test
dec
mov
xchg
testl
rcrl
pop
xchg
out
push
cmpsb
sbb
mov
into
add
sub
inc
sarb
sub
jg
out
jnp
add
jns
mov
dec
in
xor
int3
jg
mov
adc
adc
mov
sbb
mov
cs
ret
cmpsb
in
dec
rclb
sbbb
cmpsl
cmpl
shl
inc
jno
lcall
add
sub
shl
sbb
in
push
jecxz
fsubrs
jo
mov
bnd
int3
loope
fadds
cmp
sbb
add
loope
out
cmp
mov
rclb
imul
sub
push
movsb
jo
push
xor
lods
inc
push
inc
or
cmpsl
int
je
in
push
mov
shr
nop
insl
das
xchg
mov
inc
sahf
shrl
shl
jecxz
xchg
push
mov
stos
js
lret
out
push
add
test
adc
jg
decb
xor
jno
call
ja
loop
mov
jo
shlb
notl
lock
mov
dec
jne
sarl
mov
sub
in
or
xchg
push
negl
pop
or
lods
fcmovbe
sbb
into
push
ret
stos
imul
mov
jmp
ja
sbb
mov
lea
cld
xchg
push
pop
or
stc
push
fisubl
ret
out
test
insb
dec
jo
xchg
push
in
sar
add
lds
sub
jno
push
pop
addr16
cltd
idivb
outsb
in
cmp
shll
cmp
mov
push
scas
shlb
jp
repnz
scas
mov
cld
pop
addr16
cli
dec
scas
out
dec
pop
sahf
popf
push
mov
add
inc
popf
insb
cli
adc
inc
fsubs
in
dec
mov
fistps
test
lods
sbb
pusha
in
inc
add
stc
ja
ja
xchg
adc
cmp
movsb
lahf
adc
push
in
xchg
xchg
push
and
xlat
add
jp
stos
js
jo
lahf
mov
sahf
test
into
mov
or
or
mov
or
rorl
sub
sbb
push
or
insb
scas
xor
pop
adc
ds
adc
inc
mov
push
les
test
cmp
cmpsb
and
xchg
pushf
xchg
xchg
das
stos
sub
add
adcb
cmovb
std
push
mov
jmp
pop
ds
cmp
fsts
jmp
jae
mov
add
mov
sub
dec
or
stos
mov
insb
enter
fnstsw
js
daa
or
inc
mov
movb
sbb
adc
adc
xor
pop
pop
add
jno
mov
cmpsl
xchg
xor
fstps
hlt
pusha
out
xchg
xor
xorb
enter
xchg
rolb
mov
jae
inc
mov
ret
hlt
sbb
lds
adc
inc
les
mov
mov
mov
out
fisubs
mov
adc
cmc
jmp
push
lahf
fidivl
in
xchg
inc
jp
icebp
test
das
lds
fadd
mov
mov
sbb
pushw
out
leave
adc
ja
add
jmp
lret
mov
adc
xchg
mov
in
cmpsb
inc
xor
shlb
imul
push
insl
popa
adc
fsubp
popw
sbb
xlat
test
lahf
negl
sbb
test
call
push
subl
fidivrl
push
ud0
mov
xor
push
ljmp
push
jo
int3
addl
and
shl
icebp
or
out
loope
pusha
jae
scas
sub
pop
push
imul
push
aam
das
aaa
jmp
adcl
idivb
mov
cs
imul
pop
and
lea
ffreep
ret
std
pushf
insb
adc
mov
movsb
mov
and
sub
es
jae
push
and
inc
sbb
int
lcall
iret
sbb
inc
daa
pop
pusha
mov
ret
outsl
mov
push
mov
sub
ret
and
pop
and
cmp
sarl
xor
loope
insl
lock
and
sub
rcl
inc
movsl
mov
les
aam
add
or
dec
jo
sahf
mov
test
mov
xorb
in
mov
and
fmul
sbb
insb
xchg
icebp
popa
in
mov
cmp
mov
subl
sub
out
push
pop
cli
jge
call
in
or
in
mov
lcall
in
icebp
cli
je
jne
push
shll
sarl
sti
xchg
imul
pop
aad
jle
daa
adc
sbbl
mov
lret
xchg
jnp
or
test
jae
push
fstps
mull
pushw
insb
sbb
push
cmc
lods
and
mov
jle
cmp
fs
mov
pushf
hlt
mov
js
xchg
repnz
lcall
cmpsb
and
jmp
mov
enter
push
ret
add
les
stos
xorl
jne
into
sub
imul
aam
xor
into
jl
test
mov
and
aam
xorb
ret
out
scas
jge
test
enter
lcall
jecxz
xchg
mov
inc
stos
gs
sbb
movsl
sahf
sbb
rcr
push
popa
sbb
stc
fidivs
lds
into
cmp
xor
xchg
xor
xchg
inc
pop
xor
mov
xor
or
xchg
repz
addr16
bound
push
orl
push
xchg
cmpb
adc
sub
cmpsb
lcall
or
call
sub
mov
sub
rorb
popa
sub
pop
jo
or
mov
addr16
cmp
mov
sub
out
sarb
xchg
mov
jecxz
cs
jge
and
repz
iret
shl
ffree
mov
bound
xchg
sub
cmp
mov
cmpsl
das
or
mov
inc
out
repnz
jmp
ss
pop
jle
shl
jbe
movsl
jbe
mov
jge
push
aaa
xchg
loop
leave
pop
rolb
fldl
jge
repz
and
les
lcall
sbb
pop
cmpsl
and
aas
adc
imul
jmp
lcall
mov
xchg
add
hlt
stc
inc
jo
push
mov
inc
psubusw
push
daa
jl
sbb
ds
or
dec
int
adc
iret
out
outsb
mov
xchg
jle
push
lods
xor
cmp
cmpsb
leave
sahf
sub
xor
fldcw
in
xchg
mov
push
repnz
jno
stos
int3
dec
mov
xchg
cwtl
fisttpll
push
cmp
add
mov
fisttpll
scas
or
rcrb
aaa
sub
pop
mov
daa
dec
insb
add
push
ss
notb
test
jo
push
cmp
int3
inc
adc
pop
fnstcw
xchg
in
jle
inc
or
add
mov
scas
js
jge
loopne
lea
rcrl
aam
dec
push
mov
pop
push
cmp
push
xor
jb
mov
jl
enter
add
push
fwait
cld
push
and
jp
pop
nop
fdivrp
repz
cmp
in
loope
shlb
jp
pop
loop
push
mov
xchg
lea
mov
add
test
in
and
test
mov
std
rclb
daa
imul
cwtl
xor
pop
out
aaa
dec
push
inc
xor
fcmovnbe
test
fwait
jae
sub
popa
and
stos
loop
int
sbb
stc
sahf
sbb
push
push
inc
sub
lods
in
push
xchg
pop
cmp
int3
dec
jge
sub
adc
dec
mov
int3
adc
das
push
sar
mov
dec
pushf
daa
fs
in
daa
and
mov
stos
les
stos
call
sub
xor
push
or
andb
lret
lods
push
mov
sub
lock
imul
xor
push
pop
or
pop
addr16
xor
gs
sti
push
adc
stc
cli
sbb
enter
roll
int3
call
push
test
add
cmc
popa
cld
cmp
dec
push
loope
sub
stos
pop
cwtl
mov
negb
pop
push
push
jmp
pop
enter
xchg
dec
lahf
cmp
jae
mov
ds
pop
adcl
jle
mov
push
pop
popl
sbb
cmp
pop
ss
cmp
push
dec
out
sbb
sub
sub
xchg
cmp
mov
push
aam
imul
addl
jge
xor
lods
inc
sub
push
fs
sahf
mov
lret
sub
lods
push
flds
jae
mov
pop
in
adc
out
mov
pop
xchg
mov
pop
lock
jo
pop
lret
jle
mov
int3
pushf
shlb
xlat
loop
adc
xchg
call
movl
negl
dec
rcrb
into
mov
ret
mov
cmp
lahf
iret
push
mov
fbld
loopne
test
test
xor
in
aam
inc
lods
mov
daa
add
fyl2xp1
add
sub
scas
jp
mov
xchg
mov
adc
popf
or
sbb
shrl
jnp
icebp
mov
mov
movsb
int3
sub
adc
lods
push
adc
sub
xlat
mov
movsb
inc
out
mov
mov
mov
scas
test
inc
cmp
mov
ss
fdivs
rcrl
into
cmp
stos
push
sti
xchg
nop
sti
pop
notl
mov
xchg
jb
int3
scas
fldcw
mov
inc
pushf
xorl
dec
xchg
mov
xor
je
xchg
lock
cld
inc
adc
cmpb
aam
lock
neg
xchg
cmp
pop
jg
ja
cmpl
mov
and
jp
and
arpl
sub
fisubrs
push
mov
xor
imul
repnz
aad
mov
add
lret
loopne
add
pushf
cmp
or
add
imul
jmp
mov
outsb
jg
push
daa
jnp
or
cmp
adc
xchg
and
shrb
xchg
mov
mov
dec
popf
mov
es
mov
fistps
and
push
es
and
push
iret
sbb
aaa
xlat
hlt
dec
in
fs
mov
test
dec
aaa
popf
test
les
out
and
fstps
or
mov
arpl
pushf
dec
and
cltd
mov
add
xor
sub
jl
push
cmpsb
or
mov
and
cmp
or
shlb
pop
xor
pop
out
jae
and
pop
out
out
stos
repz
or
adc
lret
and
out
movsl
pop
loope
and
std
mov
xchg
push
rolb
jns
cmp
mov
sbb
mov
clc
pop
sbb
lcall
push
test
popf
in
enter
data16
sbb
adc
pop
mov
in
fimuls
je
xchg
in
jp
aad
mov
cmpl
sbb
jmp
pop
cmp
mov
push
sbb
xor
stc
inc
jno
mov
cs
mov
cmp
adc
push
loopne
or
cs
add
cld
int
hlt
int
inc
xlat
sarb
roll
in
xchg
cmp
aad
mov
add
aam
inc
add
aad
jl
mov
repz
pminsw
rcll
sub
imul
cwtl
mov
mov
aad
aaa
out
fwait
jae
jp
push
imulb
lods
hlt
daa
or
jbe
stos
mov
xchg
and
xlat
sbbl
cltd
dec
sahf
dec
sti
arpl
test
mov
inc
inc
fstps
int
mov
xor
fbstp
insb
lods
dec
xor
psadbw
xlat
std
sbb
int3
jo
sbb
cmp
out
add
inc
jns
push
lock
fcomip
das
xchg
ljmp
push
inc
mov
pop
in
rcl
xchg
add
pusha
enter
clc
mov
dec
sub
shrl
jb
xor
repnz
mov
jmp
imul
xor
shrl
inc
mov
xor
mov
inc
bound
mov
addl
push
mov
pop
scas
mov
xor
fisttpl
fsubrs
xchg
mov
push
in
inc
in
dec
jnp
stc
je
push
dec
shld
fimuls
cmc
rorb
ret
sbb
lock
jg
pop
adc
xor
push
mov
cld
sub
jmp
cmp
sbb
test
popf
and
adc
inc
add
sub
add
mov
fsincos
test
jg
dec
nop
outsb
inc
pusha
scas
lods
xchg
add
jg
lea
and
fcmovnbe
nop
das
mov
xchg
mov
jbe
rcrl
je
mov
push
sbb
repnz
stos
xchg
aaa
fldl
adc
mov
mov
lods
stc
cmp
add
stos
xor
mov
adc
repz
cmp
dec
or
mov
push
mov
lahf
sbb
xor
mov
movsb
test
inc
test
rolb
roll
mov
gs
ja
add
xchg
push
les
loope
out
mov
cwtl
pop
cmc
push
xchg
push
icebp
movsl
lods
std
xor
mov
pushf
ds
pop
mov
mov
mov
lahf
jl
pop
mov
or
mov
cmp
inc
in
xor
sahf
outsb
jp
xor
ret
ud1
mov
fistps
iret
gs
dec
push
mov
cmp
mov
jne
xor
test
adc
cmp
push
cmpsb
pusha
mov
push
inc
addr16
xchg
loopne
sbb
mov
mov
cmp
jnp
pop
xor
jmp
stos
mov
mov
inc
iret
movsb
sti
jg
mov
pop
lcall
adc
daa
pop
fldt
lds
fmull
out
imulb
dec
popf
adc
sub
mov
adc
jmp
movsb
inc
test
mov
jl
adc
mov
fucomi
in
lret
mov
imul
push
xor
mov
dec
cmpsb
sub
push
mov
jecxz
cmp
test
inc
mov
in
fistpl
data16
in
fcmovu
mov
scas
sbb
les
jmp
cmp
lcall
rolb
inc
lahf
jo
jno
cwtl
pop
lods
aas
xchg
sar
add
sbb
int3
aaa
test
push
sahf
push
jmp
xchg
shlb
xor
xlat
test
adc
jge
pop
lcall
popa
lds
in
and
enter
pusha
repz
insl
testl
mov
sahf
xchg
pop
push
popw
ds
test
ds
push
sbb
outsb
out
jae
fstpl
adc
pusha
scas
mov
es
out
imul
mov
inc
inc
sub
repnz
ret
enter
int
lahf
xor
sub
cmpsb
cld
movsb
mov
mov
jmp
and
mov
xchg
sub
stos
aas
ja
ss
movsb
cli
mov
push
mov
popa
ja
sbb
or
mov
sbbl
int
adc
dec
enter
cmpsb
mov
scas
iret
mov
fcmovnbe
ds
icebp
push
icebp
mov
push
and
xchg
adcl
fs
popf
sbb
clc
mov
pop
jl
push
push
adc
mov
jecxz
ud0
sarl
or
inc
cmp
mov
lahf
add
sub
fdivs
inc
adc
push
dec
outsl
push
aam
fisubrl
jl
stos
push
sub
sti
xor
daa
sarl
push
jle
add
adc
xor
arpl
sbb
jp
clc
xor
sti
fcmovnu
cmc
lds
cmp
push
add
add
pop
jl
mov
aad
push
mov
adc
jle
cmp
jae
or
pop
push
pop
sbb
nop
pop
inc
cmpsb
adc
pop
arpl
pause
sbb
push
cmc
test
aam
sbb
mov
xchg
lock
adc
jg
mov
mov
decb
pop
sub
and
sahf
pop
lds
in
or
sub
mov
inc
enter
movsl
mov
repz
push
sub
scas
mov
fsubrp
pop
adc
cmpsl
cmp
test
cmp
fwait
fwait
push
and
loope
xchg
add
xor
mov
shl
fisubrl
aam
inc
sub
hlt
icebp
pop
sbb
ss
xchg
adc
sub
lcall
mov
mov
sub
push
jo
pop
mov
lods
xchg
fbld
jnp
popf
or
cmpsb
mov
rorl
push
xlat
ret
jle
pop
cli
sbb
cmp
jno
jns
test
in
pop
scas
test
loope
xchg
int3
test
adc
or
pop
pop
stc
xchg
aaa
sbb
xor
sub
hlt
mov
stc
adc
jo
mov
dec
es
roll
dec
arpl
xor
test
push
push
inc
jge
insb
push
aad
imul
pop
cmp
imul
in
jo
sbb
ljmp
stos
aaa
pop
mov
adc
and
push
fxtract
jnp
and
sub
fxch
aas
sbb
mov
cmpsl
aas
jmp
add
aad
insl
enter
sbb
pushf
xchg
cmp
ret
ja
ljmp
call
add
imul
out
shll
mov
and
cmc
push
push
dec
cmpsl
iret
fnsave
mov
xchg
bound
aas
xchg
fisubrs
xchg
mov
lea
shl
lret
aas
dec
xchg
xor
xchg
lods
xor
loopne
movsb
in
push
bound
mov
pop
push
cmc
xchg
das
cmp
xor
pop
mov
lcall
cmpsl
inc
cmp
push
push
add
fldcw
sarb
shlb
xor
sub
lret
jno
cmpsb
xor
repz
jle
ds
or
and
aas
xchg
jno
lahf
mov
sub
mov
shlb
sbb
adc
pop
loop
pop
ds
push
leave
jb,pt
push
mov
loopne
cli
jne
pop
imul
mov
jb
pop
js
pop
mov
ror
adc
fnstcw
push
aas
push
or
push
cmp
cmp
mov
cmc
mov
gs
xor
sub
pop
jmp
enter
fisttps
xor
add
push
pop
jo
loop
das
popf
in
scas
xor
or
std
or
pop
xchg
inc
sub
in
pop
jnp
xor
testb
xor
inc
mov
and
push
je
daa
hlt
jae
int3
lods
call
repz
pusha
addl
rcl
pop
ljmp
aam
mov
hlt
pop
jl
sbb
xchg
inc
mov
pop
std
and
dec
arpl
and
stc
repz
iret
sbb
leave
xchg
dec
addr16
scas
inc
mov
mov
cmc
rcll
mov
and
scas
ret
sbb
imul
loopne
call
push
pop
inc
gs
test
mov
pop
sbb
xchg
add
gs
xchg
xchg
imul
mov
jmp
cmp
mov
push
in
std
jno
pop
sbb
xchg
cmp
mov
cmc
jae
int
mov
popf
xchg
jnp
int
jmp
es
cmp
in
pop
clc
mov
imul
stos
shrl
adc
xlat
dec
cmp
insb
pushf
nop
cmpsl
cli
jbe
or
jle
daa
sti
les
inc
lcall
insl
cmp
dec
aaa
ficoms
fistl
mov
iret
aam
xchg
inc
cmp
imul
adc
dec
out
clc
jmp
je
jecxz
out
pop
cmpsl
movsb
push
lods
mov
outsb
outsl
add
sub
out
testb
aas
cwtl
gs
add
add
or
icebp
les
test
cmp
out
insb
mov
or
adc
xchg
inc
movb
pop
xor
push
mov
cmp
jnp
or
es
inc
push
roll
outsb
lret
pop
mov
fadds
aam
fcmovnu
scas
leave
cs
push
popl
or
fcmovbe
inc
jmp
pop
sub
into
in
cmp
fwait
int
xor
jne
pop
bswap
dec
push
pop
das
xchg
dec
test
into
shr
dec
jno
mov
insb
push
ss
cmc
sbb
jno
sbb
fsts
pop
jae
xchg
inc
lock
xlat
icebp
gs
jne
cwtl
in
rorl
ss
inc
xlat
movsb
faddl
mov
ja
cltd
xchg
jecxz
inc
lods
adc
imul
divl
push
inc
iret
mov
lods
in
xor
adc
sti
adc
into
hlt
int3
xor
dec
xor
fistpl
jecxz
scas
pop
mov
in
nop
push
inc
jo
std
cmp
lock
stc
mov
pop
ljmp
mov
into
or
ss
adc
lcall
jne
stos
int
psubsw
xor
js
stc
jecxz
lods
ljmp
les
push
ficompl
jo
ret
jle
cpuid
call
lcall
cwtl
sbb
push
mov
outsl
adc
pop
bound
sahf
not
adc
or
jae
sbb
jge
push
mov
sbbl
mov
addr16
dec
adc
mov
adc
fldl2t
daa
pop
mov
xchg
mov
ret
push
or
rorb
xor
sbb
bswap
xchg
enter
loope
add
inc
cltd
cwtl
adc
cmpb
mov
xor
pop
push
lea
lret
xchg
push
sub
and
cld
aas
pop
pop
push
aad
scas
add
je
cmp
jl
mov
cmp
inc
fistpl
inc
xchg
push
dec
fdivr
ret
out
push
or
rol
push
pop
dec
xor
loop
ljmp
push
inc
add
sbb
stos
aad
pop
lahf
cltd
push
cld
cpuid
inc
dec
out
lcall
sbb
and
daa
test
mov
movsb
dec
lds
popa
ffree
adc
adc
ja
out
call
adc
out
sub
cmc
insb
pushf
xor
jo
out
call
fimull
mov
xchg
jecxz
push
and
cwtl
adc
pop
pop
jmp
cmp
xchg
leave
mov
test
in
mov
fimuls
xchg
mov
jnp
mov
mov
and
dec
in
outsl
dec
push
inc
mov
fnstenv
dec
fwait
test
lret
cmp
call
cs
stc
testb
shrl
xor
pushf
in
sahf
pop
pusha
lock
jnp
call
out
clc
or
or
jecxz
sub
cmp
arpl
mov
and
jbe
jp
movsl
sbb
adc
pop
inc
and
lahf
dec
fs
dec
mov
mov
fdivrs
dec
jge
push
or
or
jo
mov
mov
aaa
addr16
add
js
in
xchg
test
ljmp
lock
push
je
sbb
mov
jmp
or
xlat
push
push
dec
arpl
inc
xor
jno
mov
mov
xchg
cmp
adc
jae
jp
push
or
sbb
movb
mov
adc
jmp
nop
in
dec
das
fistps
push
sti
and
mov
insl
sbb
adc
sbb
pop
cmpsb
sbb
mov
adc
fisubl
mov
and
inc
out
fidivs
aas
inc
loopne
cs
int
es
cwtl
scas
mov
imul
popa
inc
cmp
push
loopne
mov
stos
or
mov
aas
pop
rcr
xor
int3
data16
aad
sti
aaa
in
dec
inc
mov
and
or
jle
mov
adc
mov
push
test
mov
inc
mov
jecxz
mov
fistpll
mov
scas
xchg
psrad
inc
adc
cmp
adc
adc
lods
mov
test
mov
jno
push
adc
and
pop
or
cmc
inc
cmp
arpl
pushf
cmpb
es
jle
mov
movsl
loopne
stc
mov
pop
add
push
push
test
repz
jo
testl
push
fs
cltd
int3
mov
cmpl
jne
imul
fisubrl
icebp
mov
outsl
jg
push
xchg
ds
jne
inc
ret
icebp
call
fxch
push
fsub
mov
aas
xchg
jl
aaa
dec
sti
mov
insl
fnstenv
mov
sub
sbb
cltd
push
adc
pushf
stos
pop
adc
cmp
xor
adc
mov
js
imul
in
mov
dec
iret
iret
inc
shrl
imul
inc
push
adc
fcmovnbe
insb
and
sbb
sub
cli
push
aaa
arpl
mov
ja
cld
fcomps
jne
dec
add
and
xchg
insl
push
shr
xor
lock
shr
inc
jns
rolb
xlat
pop
adc
xor
in
nop
sbb
inc
imul
dec
out
popf
add
push
lret
stc
loopne
jns
addr16
push
mov
sarb
pop
ja
sub
pop
out
push
inc
sub
and
js
cmp
and
or
xor
insl
xchg
aad
fldenv
fs
pop
sub
fcoml
shrb
mov
faddl
jns
ret
or
test
cmp
loope,pt
popf
add
mov
arpl
fwait
mov
aas
sub
aas
movsb
int
int3
cmpsl
jecxz
adc
dec
pop
mov
movsb
sbb
dec
adc
or
xchg
cmp
pop
dec
loope
insl
rolb
lret
out
xchg
shrb
out
sub
stos
dec
aad
popa
out
inc
in
lds
jae
das
sub
outsb
or
hlt
mov
ljmp
out
mov
push
mov
lds
mov
inc
cmp
cltd
ljmp
sahf
movsl
jbe
jno
in
xlat
bound
xor
cltd
jno
clc
ss
sub
sbb
sti
pop
imul
cmc
sub
mov
push
loope
inc
sahf
pop
stos
and
adcb
add
dec
sbb
dec
push
and
data16
mov
lahf
push
popf
push
stos
aad
and
xchg
pushf
cmp
lock
jl
shll
sub
adc
jmp
inc
rclb
pop
pop
js
rorl
movsb
je
ds
sub
sub
outsb
sahf
or
rclb
into
fsubs
jle
hlt
rcrl
adc
out
or
aaa
or
mov
scas
scas
add
push
hlt
mov
repz
lcall
or
lahf
aam
sub
shll
push
inc
out
inc
ja
out
fwait
ljmp
jbe
out
mov
fimull
jecxz
mov
rcr
call
data16
je
mov
arpl
mov
dec
repnz
push
imul
arpl
repnz
add
shlb
jecxz
mov
dec
or
sub
pushf
push
es
stc
mov
sbbl
push
pop
incb
je
call
and
fistl
cmp
fdivrl
dec
cmp
daa
jns
push
pop
inc
sub
or
scas
mov
fs
xchg
insl
in
arpl
mov
xor
fs
and
daa
push
xor
mov
or
sub
xor
lret
cmp
ds
and
or
scas
lods
mov
and
push
in
jge
movswl
mov
mov
adc
sahf
xor
jbe
test
dec
into
jb
ja
pop
mov
mov
test
test
jl
or
pushf
icebp
and
mov
jp
call
ja
test
jnp
jmp
mov
xchg
jl
in
pop
mov
mov
fbld
push
mov
ret
push
xchg
inc
push
stos
mov
jo
jno
push
cmp
xchg
lods
mov
in
or
push
lcall
out
leave
inc
push
cmp
lea
jno
add
gs
decb
push
repz
mov
aaa
jl
push
mov
cmp
add
daa
lock
jns
testl
mov
repz
test
inc
cmp
rorb
inc
and
xchg
inc
push
lds
mov
inc
leave
pusha
pop
int3
loop
hlt
movsb
cltd
inc
shll
mov
cmpsb
push
and
ja
sbb
dec
jl
jne
mov
push
mov
xor
in
dec
mov
test
es
addr16
in
sahf
inc
stos
adc
das
pop
inc
inc
adc
outsb
out
cmc
dec
add
cmp
push
and
xchg
push
mov
pop
dec
push
mov
cmp
mov
add
jae
or
fnsave
arpl
jnp
popf
int
sarl
push
stos
push
jecxz
mov
jl
pop
push
and
add
test
sbb
imulb
lods
xor
cmpsl
int
sub
nop
push
jle
data16
into
cmc
sub
scas
mov
inc
pusha
mov
pop
pop
mov
aad
js
lds
jecxz
repz
adc
or
push
and
mov
mov
jae
outsl
orb
roll
push
or
pushf
in
inc
lea
push
jp
mov
imul
pop
icebp
cld
xchg
adcl
fbstp
into
jecxz
pop
leave
inc
push
dec
push
sti
loopne
popf
call
out
pop
and
adc
pusha
push
cmp
hlt
call
leave
dec
ja
setns
ss
lret
mov
or
mov
ja
out
pop
jo
sbb
data16
in
hlt
and
aad
mov
aaa
int
jecxz
or
xchg
pop
push
xchg
push
inc
mov
test
xlat
adc
pop
lahf
xchg
cltd
jbe
or
mov
fdivrs
push
dec
outsl
loopne
add
xchg
add
call
cltd
lea
push
mov
cmp
daa
loope
lea
adc
scas
adc
sti
out
sub
das
adc
call
insl
pusha
cli
int3
aad
push
xor
jo
test
push
cwtl
inc
and
frstor
fmul
sbb
cmpsl
mov
sub
rcll
pop
test
dec
jg
aas
mov
cmpsb
sub
push
and
enter
ljmp
cld
fwait
cmp
mov
pop
imul
jp
add
arpl
popf
push
mov
xor
xchg
loop
push
or
fadd
and
push
sub
ss
cltd
push
cmp
xchg
push
fsub
fstps
dec
jge
stos
pop
in
adc
insl
xor
lds
mov
sbb
and
shlb
xor
lret
cmp
xor
sarl
mov
inc
or
fldl
stc
icebp
testb
test
int3
cmp
pop
jnp
movsl
pop
pop
mov
xchg
ret
mov
test
lcall
andl
nop
in
mov
dec
adc
fldenv
mov
xlat
adc
rclb
in
and
loop
push
iret
sbb
cmp
out
sub
sarl
and
push
mov
cmp
outsl
mov
add
shll
push
imul
aam
test
push
cld
dec
repz
inc
mov
cmp
or
add
lret
lret
iret
xchg
cli
xor
cmp
stos
out
shlb
icebp
fisttpl
push
js
push
outsb
inc
xorb
fildl
mov
adc
cmp
mov
xchg
xchg
test
mov
lret
aaa
push
repz
in
stc
scas
sub
daa
jnp
rolb
adc
inc
int
jg
xchg
movsl
stc
int3
push
ljmp
out
add
jbe
pop
push
cld
mov
xor
sbb
mov
mov
sbb
add
push
adc
add
mov
aam
lahf
jg
lret
arpl
mov
mov
ja
mov
jae
movsb
and
std
imul
and
fisttpll
nop
lahf
rcl
add
shrb
xchg
pop
dec
aad
xor
xor
arpl
mov
inc
cmp
ror
cmp
ss
jg
popf
push
cmp
mov
enter
mov
cmp
clc
add
jb
and
adcb
fs
test
sbb
inc
xor
lea
dec
movsl
fstpt
rcrb
lea
fnstsw
mov
js
xor
rcr
clc
sbb
jno
es
cmp
mov
jb
lock
int3
dec
push
dec
es
mov
mov
stos
leave
lock
add
outsl
cwtl
mov
dec
jo
loope
iret
jbe
loope
push
icebp
mov
inc
mov
jecxz
inc
in
popf
cmp
ds
adc
ja
cmp
cmp
inc
aad
sbb
popa
insl
adc
ret
sbb
dec
fwait
and
mov
mov
in
or
loop
cmpsl
cmp
fldt
dec
pop
fistpll
imul
sbb
ret
cmovbe
add
xor
or
fldcw
or
popf
mov
and
dec
shll
dec
xor
push
leave
jecxz
xchg
push
sub
aas
push
inc
sahf
add
sbb
dec
push
jnp
mov
jecxz
js
jg
test
pop
push
jge
shll
into
add
pop
ljmp
lods
add
xchg
xchg
addr16
jbe
mov
pop
fsubs
dec
xor
mov
aas
add
les
inc
je
mov
mov
xchg
ljmp
mov
push
pusha
cmpsb
sub
enter
push
pusha
mov
mov
mov
std
nopl
adc
cmp
data16
fiaddl
add
jmp
jmp
pop
cmovp
inc
testl
popf
jp
movsb
or
data16
add
faddp
xchg
cld
lea
popf
sbb
in
outsl
mov
mull
inc
call
loope
and
jo
sahf
push
lahf
getsec
xor
mov
and
jle
ss
mov
xchg
jmp
ret
lock
pop
aad
subl
loop
ret
aas
test
push
mov
jp
cltd
pop
cwtl
sub
pop
cmc
lods
pop
push
fsubrl
dec
push
incb
out
pop
cmp
dec
jle
jno
xchg
cmpsb
sub
mov
cmp
rclb
shlb
int
push
jb
in
push
cmp
leave
sub
xchg
fildll
insl
push
sub
out
pop
scas
lods
fisubs
stos
jno
dec
jg
add
cld
adc
push
mov
mov
sbb
jmp
dec
sub
inc
cwtl
xchg
or
inc
push
cs
mov
sbb
les
adc
mov
shl
loop
scas
mov
add
cmpl
enter
mov
mov
xor
les
fwait
xchg
pop
lds
sub
xor
daa
push
cmp
mov
ss
pop
mov
sti
add
mov
and
loope
inc
xchg
sbb
push
mov
ret
jp
adc
sbb
leave
out
xlat
inc
jg
push
inc
call
xor
arpl
adc
aas
pop
fucom
push
mov
mov
cmc
mov
stos
xchg
ret
sub
sub
fidivrs
mov
pop
sbb
bswap
nop
lods
mov
stc
aam
push
loop
notl
mov
stc
and
fidivrs
je
lds
or
cmp
jnp
and
pop
loop
aas
test
add
pop
aad
mov
push
mov
icebp
jb
out
jb
cmp
lock
inc
xchg
jnp
icebp
cwtl
clc
add
jmp
dec
xchg
adc
imul
add
rorl
sbb
lahf
sub
fstpt
cmp
cmpsb
xchg
jbe
pop
aad
mov
xchg
imul
shl
nop
cmp
mov
popf
cmp
add
push
or
jg
push
mov
bound
sub
cmp
dec
aas
icebp
aaa
insb
adc
pop
sahf
push
sbbb
xlat
add
xchg
loope
dec
sub
mov
add
adc
and
jno
inc
mov
enter
xor
xchg
test
int3
mov
das
inc
sbb
pop
cmp
inc
sbb
aam
out
lret
fstpl
ss
in
adc
sti
jno
jmp
out
outsb
and
jo
mov
movsb
pop
in
in
inc
cs
mov
sub
ds
cli
cmp
call
mov
sbb
pop
mov
dec
dec
enter
fdivrs
andb
mov
mov
in
int3
jne
jae
sub
imul
xor
pop
ficoms
dec
dec
xchg
dec
enter
jmp
dec
xchg
lock
pop
out
sbb
add
dec
lahf
sub
inc
outsw
ja
push
mov
mov
loopne
sbb
add
fiaddl
and
cwtl
les
adc
into
scas
mov
xor
xchg
mov
lahf
repz
aas
repnz
iret
pop
in
mov
es
shll
stc
fidivrs
jg
sbb
shl
popa
cmpsl
sbb
mov
mov
cld
pop
add
cmp
rcr
outsb
jb
jecxz
mov
outsb
cmp
jg
add
cmp
rcll
stos
cs
loopne
xchg
rorb
shll
iret
adc
mov
dec
jge
mov
aam
mov
dec
lods
mov
mov
mov
mov
stos
sub
add
cwtl
mov
repz
jnp
or
dec
in
repz
and
gs
mov
add
mov
sar
xor
mov
xor
xchg
loopne
nop
mov
pop
popl
push
mov
mov
jg
call
not
test
jmp
cmp
mov
and
test
adc
mov
movsl
pop
mov
lcall
ss
shll
test
int3
pop
xchg
notb
ret
pop
mov
or
nop
repnz
or
loope
inc
mov
push
mov
lock
sub
lea
push
jg
lea
loopne
lock
pushl
and
mov
hlt
and
push
xchg
mov
push
pop
sub
mov
repz
mov
mov
daa
mov
fldt
call
fisubl
arpl
push
xchg
jne
shr
or
push
or
cmpsl
push
mov
xchg
pop
xchg
aam
dec
ja
xchg
mov
in
into
jge
fmull
sbb
lea
jb
dec
add
lret
sbb
imul
sbb
lods
aad
jp
das
xchg
cli
loope
and
pop
out
add
or
fs
xchg
hlt
insl
dec
jae
jge
sbb
data16
jb
sbb
es
mov
mov
loopne
push
jecxz
aas
or
fsubr
sub
aam
jnp
ret
popa
push
rcl
lock
es
out
or
mov
sbb
insl
rcll
mov
sub
and
mov
dec
mov
movsb
mov
xor
dec
cmc
xchg
loop
movsl
inc
jne
sahf
lcall
insb
iret
mov
sbb
clc
movsl
mov
dec
test
out
shlb
shrl
push
mov
imul
negb
ret
dec
rcl
into
sti
jnp
cmp
xchg
aam
out
or
mov
mov
fstpt
xchg
pop
in
stc
adc
pop
pop
scas
jo
shrl
cmp
fldl
imul
jns
inc
shll
jg
xchg
push
roll
lcall
lds
into
push
adc
loop
loop
sarl
out
mov
cmp
push
mov
jo
xor
lea
stos
jbe
popa
je
or
andb
push
cmpl
fstpl
int3
xor
aam
out
fistl
cmpsl
and
cli
rcll
sub
test
mov
imul
cmc
in
outsb
jae
mov
sub
xor
mov
or
inc
or
orb
aas
rcll
sub
inc
ss
fstl
mov
out
sbb
fwait
std
inc
popf
jns
outsl
inc
jae
hlt
jno
and
ret
mov
xchg
xor
mov
add
mov
push
xchg
iret
or
xor
cmp
test
cmpsb
stos
pop
ret
jge
cltd
and
stc
xstore-rng
cmpsl
push
fldl
adc
mov
imul
xchg
push
add
mov
push
cmp
ja
je
dec
cmc
sbb
ja
jo
xchg
push
mov
imul
shll
xor
sub
dec
js
and
rcl
xchg
lret
mov
and
mov
inc
cmpsl
cmp
add
inc
xlat
lret
inc
aam
icebp
leave
inc
fdivr
test
xchg
cmp
inc
ret
es
add
test
cli
mov
jg
daa
lods
pop
loopne
mov
fnstenv
data16
rep
mov
lds
daa
jg
test
mov
ficompl
cmp
mov
cwtl
mov
aas
orl
or
sbb
addr16
lea
pop
into
inc
sub
clc
sarb
js
test
jl
sbb
jae
sub
cmovae
jno
fdivrs
mov
mov
mov
jge,pn
cmp
mov
shll
inc
mov
adc
mov
jae
dec
adc
adc
mov
xchg
fstpt
pusha
push
movsl
cmp
ja
test
in
and
stos
sbb
out
rolb
dec
mov
or
xchg
imull
imul
movb
scas
mov
sbb
es
pushf
xchg
sub
mov
push
jno
push
add
aas
inc
mov
jns
call
jg
jle
push
arpl
xlat
dec
cltd
sub
int
xchg
inc
cmpsb
mov
or
pop
fucomip
mov
cmp
cmpsb
arpl
xor
insb
cli
mov
mov
cmpsb
shlb
mov
cmp
pop
pop
push
xorb
loop
inc
add
adc
out
imul
jle
push
jmp
cltd
fistpll
jb
push
shl
notl
add
inc
mov
shrl
cmp
adc
cmp
jg
lahf
hlt
vpunpcklwd
mov
jbe
pop
xchg
data16
dec
decb
cwtl
push
adcb
sub
ds
mov
aas
mov
push
jo
pop
or
xchg
mov
ljmp
out
mov
fiadds
hlt
leave
push
jb
cmpb
loopne
push
sbbl
test
enter
and
sub
iret
jge
fwait
pusha
push
jns
cmp
cmp
push
mov
inc
sub
je
push
adc
cltd
cmpsb
mov
clc
ret
jp
clc
cli
or
test
lsl
loop
loope
mov
mov
int3
jp
inc
insl
inc
scas
test
mov
scas
aad
jmp
ds
rcll
sub
pop
jecxz
pop
shrb
inc
movsl
fsubl
add
adc
in
enter
dec
js
sub
sbb
aad
cwtl
ror
cmc
pop
mov
jp
dec
mov
ficompl
rorb
fmull
aas
aad
jecxz
pop
dec
test
inc
sbb
je
leave
xor
and
and
xchg
sub
sub
int3
adc
lods
cmpsb
scas
add
adc
add
sbb
sub
daa
mov
push
xchg
adcl
mov
cmp
cmc
mov
and
shrb
push
pop
add
leave
jmp
lahf
xor
adc
or
jae
int
ja
mov
and
push
and
repz
jae
pushf
jae
into
out
jl
ss
mov
mov
sub
mov
sub
bound
into
test
mov
and
cmp
lret
xchg
rolb
adc
push
pop
mov
arpl
xlat
jno
adc
subb
sub
roll
xchg
or
xor
mov
pop
sbb
or
inc
cmp
sub
cli
jnp
mov
or
cltd
movsb
adc
popa
ja
jnp
sahf
add
jbe
mov
sub
or
jae
divl
and
int
jmp
or
sbb
stos
xchg
ret
dec
mov
jmp
xchg
mov
dec
test
mov
insb
push
push
mov
aaa
sub
loop
adc
sbb
cmc
cli
sub
or
mov
lods
xchg
sti
sbb
jmp
add
xchg
mov
mov
cmp
pop
or
dec
pop
push
xor
push
adc
mov
cmp
lods
add
sub
cmc
rcr
pop
inc
mov
fcompl
pop
sub
push
dec
stc
mov
inc
out
xrelease
stos
sbb
outsb
clc
stc
sbb
xor
xchg
dec
sub
and
jo
leave
cmp
mov
in
das
pop
fcomip
xorps
mulb
xor
aad
pop
inc
pop
out
xchg
sbb
or
jbe
push
test
pop
pop
and
xor
jo
inc
movsl
mov
imul
jb
sub
mov
dec
and
in
sbb
cmp
add
pop
xlat
sbb
dec
pop
cltd
iret
fnstsw
xchg
aad
pop
and
dec
test
rcrb
push
rcrl
cld
xchg
mov
add
xorl
bound
stos
xor
sbbb
pop
xchg
cmp
sbbl
es
push
sub
lret
adc
cwtl
in
clc
test
dec
pop
and
dec
jbe
adc
jb
idiv
cmpsl
cli
addl
xchg
call
sub
arpl
xor
mov
shrl
dec
and
sub
lock
imul
mov
mov
pop
push
jbe
fldl2e
jl
inc
mov
sub
repz
mov
aam
xchg
loope
mov
dec
sbb
xchg
jecxz
mov
xor
fwait
and
add
sub
xchg
fxtract
pop
mov
pop
add
pop
aam
not
sbb
cwtl
out
cmp
gs
ficoml
fs
pop
mov
fdivs
repnz
push
pop
cmp
xchg
sub
ljmp
push
in
or
pop
push
into
pop
xchg
mov
lock
out
jb
sarb
outsl
adc
stc
test
sbb
scas
int
or
hlt
das
repnz
test
lods
pushf
decb
inc
push
cmp
xchg
ds
and
or
jge
in
sbb
mov
mov
xor
adc
xor
add
mov
fdivrs
js
aas
or
lea
xchg
pop
loopne
sub
ds
insb
push
sbb
sbb
mov
sbb
mov
jbe
lods
dec
pushf
pushf
dec
cmp
bound
xor
dec
pop
mov
dec
rcrl
jmp
test
cltd
add
int3
js
xchg
push
and
mov
mov
lea
aas
daa
push
lods
and
leave
pusha
sub
or
push
cmp
dec
push
and
pop
sub
pop
mov
addr16
test
sbb
dec
je
aam
leave
mov
loopne
push
subb
push
out
icebp
push
scas
add
and
out
cmp
mov
mov
sbb
push
inc
sub
adc
add
and
lahf
mov
mov
shlb
adc
mov
pop
lret
ja
or
sti
xor
loopne
mov
add
in
aaa
test
inc
push
jl
fwait
mov
mov
xorl
and
push
dec
in
mov
xchg
flds
add
mov
addr16
mov
in
sub
ja
xchg
and
jmp
cli
push
cmp
xor
aam
aaa
mov
shll
xor
sub
roll
mov
mov
push
mov
mov
push
js
mov
or
mov
push
in
and
mov
and
aaa
imul
pop
xchg
sub
dec
paddd
ja
adc
cmp
sbb
dec
mov
testl
push
movsl
outsb
mov
pop
mov
shrb
mov
rolb
js
icebp
dec
outsl
cli
into
aad
out
push
insb
std
arpl
movsl
lret
jbe
std
flds
data16
ss
mov
jae
inc
jl
dec
stos
cs
int3
imul
daa
adc
mov
push
push
cs
pop
cmp
dec
mov
mov
push
jns
xor
jecxz
jno
std
mov
aad
subl
iret
insl
dec
es
scas
mov
push
add
xor
adc
pop
mov
iret
shlb
and
fisubl
out
push
inc
cmpb
cmp
aaa
pop
jnp
nop
adc
adc
test
or
inc
add
mov
aad
cmpsl
repnz
cltd
faddl
adc
xchg
mov
fwait
les
fucom
cltd
pop
and
rclb
pop
int3
push
push
popf
mov
pop
push
lock
lds
push
adc
lahf
push
dec
lahf
push
insl
loope
sbbb
pop
dec
inc
sar
pop
inc
lods
dec
cmp
call
pop
inc
adc
leave
cwtl
idivl
xchg
shr
xor
pop
js,pt
push
lret
gs
decl
mov
insl
fldl
pop
xor
adc
or
fwait
add
xchg
das
jge
andb
mov
test
push
push
xchg
mov
push
jge
or
cmp
or
pusha
shrl
int3
add
rcll
lock
jno
popa
pop
jmp
aas
pushf
into
xchg
fs
and
aaa
xor
jecxz
ss
les
xor
inc
or
jecxz
cld
decb
sub
shl
jl
mov
js
ja
sti
cli
xor
sbb
push
sbb
add
pop
or
pushw
shlb
jl
mov
sbb
mov
inc
das
insl
shlb
mov
pusha
add
mov
hlt
addb
cli
mov
popf
repz
dec
and
mov
jecxz
mov
jne
dec
mov
decl
lods
insb
sbb
xorb
inc
mov
leave
fimuls
dec
xor
test
out
jno
inc
insl
xor
in
inc
sub
inc
arpl
fsubl
lds
cmpsl
rolb
dec
call
dec
jp
cli
cmp
ret
mov
insl
cltd
jno
movsl
negb
inc
jmp
jnp
and
mov
ljmp
mov
es
lea
lahf
sbb
in
jb
mov
iret
or
add
dec
js
push
dec
sbb
aam
out
or
inc
ss
jge
repz
mov
inc
nop
and
xchg
mov
cmpsl
dec
add
ficoml
and
and
out
jg
imul
mov
jns
test
jae
cmp
sub
inc
pop
outsb
rol
movsb
xor
rcr
mov
iret
rorl
xchg
icebp
aam
filds
movsl
sbbb
mov
ret
lods
aam
add
mov
adc
sbb
ret
scas
insb
in
add
out
rcll
lret
jecxz
cmp
adc
ljmp
lret
dec
mov
aam
ret
inc
xor
pop
gs
test
lods
ds
lods
xchg
mov
mov
aaa
dec
out
push
push
pop
clc
pop
subb
mov
cmp
dec
cmp
pop
sub
push
mov
push
daa
daa
dec
inc
mov
lcall
pop
into
pop
icebp
push
lods
adc
jns
push
cmp
adc
lods
push
fidivrl
dec
dec
dec
popf
arpl
sbb
test
cli
jle
mov
test
lds
add
xchg
pushf
test
enter
call
fdivl
mov
and
clc
or
mov
cmpsl
xchg
outsl
insb
aad
shr
imul
mov
enter
sbb
sub
pop
pop
test
sti
adc
mov
cltd
push
jmp
das
jecxz
xlat
adc
mulb
pop
iret
xchg
cmc
sub
adc
sub
out
mov
cmpsl
out
hlt
push
popw
add
xor
pop
fwait
inc
push
scas
mov
sbb
dec
inc
or
fwait
out
iret
sub
idivb
in
adc
xchg
mov
adc
push
push
daa
leave
sub
jle
mov
arpl
stc
push
imul
sbb
int
xor
cmpsl
sub
mov
xchg
popf
repz
aaa
xor
icebp
mov
push
repz
mov
push
xlat
aas
decl
or
js
aas
mov
test
jnp
push
xor
shlb
sarb
fcomps
fbld
imul
lcall
adc
adc
jnp
cmp
lods
dec
cmpsl
in
cwtl
mov
lret
leave
add
cwtl
adc
insl
push
lock
outsb
jecxz
push
out
pop
mov
push
cmp
inc
jmp
aam
repnz
xor
mov
ja
sahf
adc
cmpsb
je
mov
inc
icebp
pop
ss
sbb
cmpsb
int3
cmc
data16
outsl
out
scas
pop
inc
xor
sbb
ret
in
lock
lock
mov
les
sub
cltd
pop
mov
mov
dec
and
cmp
enter
in
pop
jbe
xor
pop
bound
xchg
fdivl
cmc
cltd
mov
jl
sbb
sti
pushl
cmc
add
mov
xchg
int3
push
cwtl
jecxz
or
mov
sub
xchg
fmul
pop
add
fsubrs
sub
icebp
push
inc
aaa
outsb
loopne
adc
jno
gs
test
inc
dec
inc
repz
nop
jecxz
mov
dec
mov
adc
jb
ljmp
mov
mov
or
adc
mov
mov
or
mov
ss
rcrb
or
inc
push
lret
pop
rclb
loopne
and
fisubrs
rcl
push
xchg
adc
rcrl
outsb
out
jns
xchg
mov
data16
imul
sbb
jae
and
xor
sbb
inc
or
les
aas
test
andl
sbb
xor
fildl
xchg
aad
mov
mov
push
push
fistpl
jp
mov
xchg
add
cs
xchg
push
xchg
jg
sti
insl
mov
cltd
jnp
xor
int3
out
bound
sub
and
leave
mov
loope
sbb
push
insl
test
xor
or
add
push
fs
mov
pusha
adc
call
inc
push
mov
in
mov
or
icebp
data16
fcomi
int
inc
loope
cmpsb
jg
pop
xchg
xchg
outsl
in
test
fnstcw
or
sub
jb
mov
loopne
outsl
push
or
lock
sbb
mov
pop
push
jmp
mov
lret
dec
cmpsb
xor
mov
pop
inc
mov
or
scas
mov
dec
incb
vpsraw
cmc
or
andb
push
xor
dec
cmpsl
jnp
mov
pusha
sbb
rcll
pop
pop
and
push
fmuls
mov
or
xor
sbb
mov
xor
dec
inc
sti
pop
or
bound
xchg
aad
xor
xchg
sbbb
mov
lock
lds
and
daa
adc
and
mov
and
cltd
sahf
mov
lods
rcr
ret
xlat
cmc
or
mov
and
push
insl
push
mov
xchg
add
pop
cmp
dec
pop
lods
dec
inc
cmp
mov
fldenv
rcrl
push
pop
notb
test
lret
stos
insb
imul
out
xchg
sbb
imul
push
test
je
aam
ja
subb
xorb
lods
test
mov
roll
xorb
pop
jle
cmp
leave
movsb
push
jp
gs
pusha
and
fstl
jle
xchg
sbb
shrl
sub
rolb
aas
lret
cli
xchg
in
loope
dec
fldenv
ljmp
fcompl
mov
sbb
adc
sbb
xor
hlt
mov
lret
push
test
inc
stos
sub
sub
mov
test
les
xchg
mov
shl
pop
jg
leave
jp
lahf
sub
nop
add
aam
cli
data16
adc
jl
sbb
fadds
lret
push
mov
cmpsb
pop
and
dec
adc
cmp
lock
pop
gs
inc
mov
and
mov
fidivrl
test
adc
cli
stc
sbb
popf
cwtl
add
push
mov
adc
lea
mov
adcb
push
sarl
and
mov
jo
fbld
subb
pop
pop
sub
sbb
ficompl
xor
push
mov
loopne
mov
insl
cmp
and
push
iret
add
lret
mov
adc
inc
shl
dec
xor
jge
mov
mov
mov
jno
jns
data16
push
fidivrs
and
push
lret
mov
rclb
popa
loop
scas
adc
idiv
fimull
nop
mov
enter
push
data16
ret
popa
negb
testb
or
mov
mov
rolb
xor
xor
stos
mov
jb
xchg
scas
dec
dec
sub
outsl
insb
and
xlat
clc
sti
daa
das
mov
bound
scas
xor
inc
insb
mov
dec
shll
pop
shrl
jnp
pop
les
scas
push
rorl
inc
jg
js
mov
cmp
outsl
cmp
fmull
fwait
pop
mov
lea
and
arpl
mov
scas
mov
out
dec
inc
popl
cmp
or
in
in
cmp
and
in
pop
pop
rol
pushf
inc
div
and
loope
jb
jg
loop
sahf
mov
sti
dec
and
pop
adc
nop
daa
mov
in
mov
scas
rcrl
int3
lock
js
sbb
mov
test
cmc
inc
loope
popf
inc
pop
push
xchg
and
aam
mov
sub
call
inc
add
pushf
xchg
pop
imull
or
mov
jmp
xlat
pop
aad
adc
xchg
int3
stos
mov
imul
imul
idivl
jle
ret
ss
outsb
pop
jnp
inc
sub
push
stos
test
dec
scas
outsl
jp
sbb
repnz
push
xor
fsub
xchg
dec
jno
dec
lcall
sbb
jecxz
cmp
cmp
xchg
out
in
dec
int3
out
lods
test
lods
fisttps
movsb
xchg
scas
mov
ret
inc
pop
xor
rclb
dec
push
push
fwait
punpckhwd
pop
or
inc
gs
mov
dec
in
in
adc
test
xor
push
adc
call
cmp
fdivr
dec
push
push
mov
cwtl
jbe
clc
ds
jns
ljmp
cmpsl
xor
popf
xchg
bound
loop
ret
jno
sub
lret
cld
adc
arpl
sbb
rorl
inc
sti
mov
push
mov
inc
fisubrs
jg
cmpsb
rcrl
push
mov
insl
mov
adcl
shlb
iret
out
mov
mov
sbb
sub
cld
call
pushw
pop
test
inc
repz
gs
xlat
and
sub
cltd
roll
fldcw
xchg
inc
xor
fidivs
sbb
out
push
add
cmc
incl
jns
inc
xchg
push
divb
mov
nop
pop
out
push
cli
mov
jb
pop
push
out
dec
and
mov
test
mov
cmp
inc
mov
fldl2t
jnp
js
xor
insb
fwait
sbb
mov
xor
pop
outsb
clc
jb
add
pusha
cld
hlt
nop
xchg
pop
inc
sbb
and
mov
inc
push
dec
push
push
xacquire
adc
fdivl
mov
js
aam
push
pop
fcomp
je
jp
cltd
sub
mov
popa
sbb
popf
test
cmp
or
jmp
and
imul
mov
cmp
mov
sbb
jb
inc
jecxz
jns
int3
inc
mov
pop
lahf
int
mov
repnz
hlt
push
cmp
call
lret
aam
pop
jo
add
and
or
cmp
push
sbb
and
testb
lock
jb
popf
cli
mov
jmp
call
popa
test
ljmp
pop
int
or
out
pop
adc
cld
lods
jae
mov
lods
rol
mov
out
push
add
fisttpl
push
dec
add
sub
pop
hlt
bnd
aam
pop
jo
mov
pusha
cs
aas
xor
or
sub
or
test
idiv
xchg
in
adc
xlat
lahf
cmp
shlb
inc
fwait
in
popa
cmp
stos
movsb
test
loope
sub
jbe
out
outsb
inc
cmp
daa
enter
jo
add
lret
jecxz
lods
add
cmc
pop
and
out
gs
cmp
rcrb
and
dec
or
xchg
add
lods
pop
sbb
xor
out
jl
mov
jo
loope
xadd
dec
fninit
jl
or
xor
jb
jl
arpl
fcoms
lret
push
and
ljmp
lahf
mov
out
sbb
push
adc
daa
fisttpl
sub
or
adc
mov
jmp
orb
push
ja
adc
or
cmpsl
std
push
push
mov
dec
add
push
rorb
mov
sbb
ljmp
imul
loopne
imul
pop
stos
xchg
xchg
and
jp
adc
mov
jne,pt
add
sub
jl
jp
fdivs
or
mov
scas
scas
mov
jo
xor
xchg
les
mov
and
jge
js
push
push
push
pop
cmp
loop
jmp
movsb
adc
les
mov
or
subb
or
loop
iret
add
dec
imul
inc
insl
idivb
jnp
mov
inc
mov
hlt
cmp
mov
or
gs
or
pop
pop
insb
push
xor
lcall
jns
sti
mov
sti
or
push
add
push
aaa
sbb
popf
inc
hlt
or
repz
filds
xchg
cmp
inc
xchg
cli
cmp
add
out
fucomi
or
int3
sub
cli
mov
out
mov
test
lea
sbb
add
xchg
sub
sbb
mov
and
xchg
xor
clc
or
je
fadd
rcll
dec
cld
cmp
push
aaa
adc
call
lds
orb
aad
add
adc
sbb
dec
push
push
cs
pop
in
adc
jns
mov
push
add
inc
cmpsl
push
js
xchg
and
in
ret
dec
inc
insb
fldenv
enter
outsl
enter
cltd
out
das
inc
add
int
and
test
in
jge
mov
sub
push
xor
jmp
shlb
fdivrl
cmp
fisubrs
pushf
xorl
bound
imul
mov
mov
jb
fldt
add
sub
push
add
mov
fstpt
out
out
movb
mov
adc
or
rorb
dec
dec
dec
jae
mov
inc
push
inc
mov
mov
jb
dec
mov
gs
jns
adc
mov
xchg
mulb
cmp
dec
aas
lds
and
push
lret
fcomip
mov
insb
lds
ficompl
add
pop
cmpsl
pop
dec
out
lea
inc
lds
clc
pusha
dec
pop
push
push
lahf
sub
push
sbb
dec
mov
cmp
sti
fidivs
inc
pusha
mov
xchg
rorb
rorl
hlt
ret
les
or
imul
sti
rorl
dec
push
std
xor
jmp
push
pop
in
cmp
dec
scas
push
mov
push
shl
mov
js
jle
ficoms
test
cmpsl
push
cmpl
jns
inc
jno
push
es
sbb
inc
cmp
cwtl
mov
mov
movsb
mov
xchg
out
cmp
mov
sbb
mov
cmc
xchg
or
adc
lcall
jno
mov
push
dec
push
pop
xor
call
sti
mov
and
push
sbbl
addr16
aad
movsl
fcomp
ret
xor
test
in
inc
pop
xorl
jmp
imul
mov
mov
repnz
gs
outsb
push
imulb
sbb
mov
push
das
ret
insb
mov
testb
sbbl
daa
mov
scas
int3
xlat
sub
jae
daa
mov
sub
aaa
jge
xchg
lea
je
cmc
ja
lock
and
and
inc
jl
adc
cmp
imul
xchg
leave
cli
fildll
dec
ja
mov
fwait
sbb
jmp
add
cltd
ljmp
repnz
add
sub
jg
push
inc
in
add
inc
andb
in
fstpl
je
popa
push
enter
pushf
lock
add
inc
sub
daa
jno
lahf
mov
lock
rcr
adc
ss
xchg
xor
call
xchg
xor
pop
mov
sbb
mulb
or
cmp
in
cmp
xchg
stos
xchg
dec
mov
jecxz
jecxz
loop
mov
into
jle
dec
cmp
xor
inc
lods
cmpsb
roll
jmp
xchg
cmp
pushfw
mov
push
or
loop
sbb
adc
dec
sti
sbbl
bound
mov
js
xor
pop
mov
cltd
repz
add
jns
lea
lret
loopne
mov
loope
inc
mov
mov
lret
mov
jmp
fists
std
inc
adc
or
mov
fwait
shr
fs
es
mov
mov
and
aaa
lods
loopne
mov
popf
aad
repnz
pop
pop
fldl
dec
cmp
lds
fs
cltd
inc
out
or
adc
std
fyl2xp1
add
pop
in
pop
jmp
sarl
and
mov
loopne
mov
mov
mov
mov
mov
adcb
int3
pop
out
mov
cmp
into
cmp
int3
and
mov
mov
fsubl
ljmp
xor
cmp
adc
sub
and
rclb
es
scas
inc
jae
push
adc
inc
cmp
flds
enter
push
dec
fcmovne
or
cmp
push
andl
aas
jecxz
push
pop
xchg
cli
mov
pop
ss
dec
cli
rcll
cmpsb
iret
inc
mov
cmp
fstl
add
push
int3
mov
or
xchg
inc
inc
push
xchg
pop
es
dec
jbe
aas
push
xor
push
adc
mov
jo
fs
xor
into
fisttpl
orl
cmp
lret
cmp
sbb
sbb
cs
loope
fwait
sahf
and
in
notb
jno
unpcklps
add
mov
mov
stos
fcoms
or
xchg
dec
jns
sub
and
stc
int3
out
aas
mov
aad
sub
dec
es
lds
or
or
or
inc
sti
xor
and
addr16
loopne
and
in
add
fcoml
adc
adc
inc
xchg
add
pop
gs
inc
xchg
inc
and
sub
add
aas
movsb
mov
in
jl
stos
sub
fwait
and
add
xor
push
jae
int3
mov
in
and
in
pusha
pop
ljmp
cld
sahf
mov
or
adc
jp
into
mov
inc
dec
cltd
sbb
adc
or
pop
cmc
or
inc
sbb
out
xor
sub
mov
mov
sarl
push
icebp
cld
lret
inc
into
xchg
shrl
sbb
xchg
pop
cwtl
and
jge
pop
test
out
mov
clc
loopne
push
movsl
xor
arpl
inc
dec
push
or
adc
inc
cmp
lret
push
jl
inc
sti
roll
cmp
inc
adc
and
stos
sbb
test
mov
test
cmp
mov
sbb
push
xor
jecxz
cmpsb
in
imul
inc
insl
mov
or
pop
push
cmpl
test
inc
sub
xchg
dec
rorl
adc
xor
xchg
stc
in
test
and
data16
pop
push
incb
sub
ret
sti
add
dec
mov
lret
mov
dec
xchg
cli
nop
mov
mov
mov
aam
fsubs
mov
jnp
scas
sub
mov
add
and
ds
dec
mov
aas
cltd
aas
xchg
sub
std
xchg
dec
aad
dec
in
mov
pop
fdivrl
int3
lcall
mov
jne
xchg
push
icebp
lahf
iret
cmpsl
mov
pop
cmp
repnz
sub
pop
xchg
mov
xchg
cli
insb
test
dec
ss
mov
stc
test
jmp
in
mov
pop
mov
hlt
daa
push
int3
lea
data16
std
ficompl
outsl
xchg
js
jnp
add
push
jne
add
push
adc
or
adc
aam
addr16
lods
in
sbb
sbb
mov
je
mov
ret
testb
jl
jae
test
pop
inc
ljmp
mov
scas
jl
cmpl
push
std
push
lea
xchg
fsincos
inc
mov
mov
xchg
pop
dec
or
inc
fcompl
dec
dec
jecxz
cmpsb
orl
cli
push
stc
push
xlat
and
sbb
mov
insl
mov
out
sahf
jecxz
xlat
jae
jns
xor
push
cmp
push
rcll
imul
test
add
test
jo
enter
scas
dec
adc
cwtl
push
inc
push
mov
repnz
inc
arpl
stc
dec
sbb
push
fsubrs
pusha
xchg
and
cmc
jb
cmp
lret
andl
sbb
fdivrs
repnz
or
and
fidivs
cmpsb
mov
mov
jge
hlt
cmp
daa
inc
bound
mov
adc
jmp
push
cmp
fwait
xor
popa
dec
inc
pop
mov
es
add
in
adc
es
push
aas
pop
ds
xchg
movsl
scas
mov
inc
mov
add
dec
mov
rcrb
adc
inc
jecxz
push
inc
daa
in
scas
push
or
jnp
cmpsl
mov
stos
sub
sbb
loop
adc
adc
repnz
out
iret
dec
cltd
bound
pop
cli
in
jne
xchg
cld
fldl
icebp
repnz
lret
aas
inc
sti
call
sahf
mov
leave
popf
lret
pop
and
loopne
adc
adc
sbb
iret
dec
dec
dec
or
aam
mov
pop
fisttpll
push
add
push
jecxz
rol
mov
cmp
push
faddl
and
icebp
in
lea
or
xchg
ljmp
test
cmc
loope
inc
xchg
xor
jle
push
ja
insb
xchg
je
cs
das
lock
in
jle
fwait
cmp
test
and
ret
hlt
popa
insl
hlt
pop
stc
filds
cmpsl
dec
inc
ds
mov
lock
mov
pop
int3
lret
sahf
nop
add
mov
lds
ret
adc
pop
imul
add
out
sbb
fs
test
push
cmp
and
lretw
xchg
jmp
xor
lods
clc
jae
mov
lret
add
push
icebp
pop
push
mov
mov
mov
ljmp
mov
push
inc
dec
cltd
fs
xchg
mov
pop
mov
fisttpll
das
cmc
mov
xorb
in
xchg
into
pop
mov
loopne
aad
or
push
out
test
jmp
push
mov
mov
or
fimuls
push
jmp
add
add
mov
outsb
sbb
push
scas
aas
ljmp
mov
int3
in
adc
ss
xchg
fstpl
pop
lods
movsb
and
fs
inc
les
add
loop
push
xchg
add
popa
adc
iret
addr16
pop
movsb
hlt
mov
mov
mov
push
push
push
sub
adc
push
inc
xchg
dec
sbb
fadds
test
nop
aad
insl
dec
or
imul
fwait
movsl
mov
ret
xlat
adc
dec
sbb
xchg
loope
movsl
add
xchg
in
pop
call
into
push
test
mov
popa
mov
mov
push
int3
mov
jl
jb
sub
jmp
out
push
addr16
pop
pushf
mov
cwtl
fidivrl
cmpb
sub
mov
cltd
pop
inc
pushf
lret
xchg
jle
mov
mov
in
icebp
sbb
ret
imul
mov
mov
mov
cmp
cmp
mov
cmc
pop
mov
scas
jmp
rolb
mov
pop
inc
sbb
mov
iret
mov
mov
xchg
jns
lahf
mov
push
dec
jl
hlt
mov
popa
rcrb
ret
mov
test
pop
jae
enter
dec
mov
sub
adc
stos
dec
cwtl
lret
mov
ljmp
sahf
fldt
mov
pop
jle
jno
ds
pop
in
jle
inc
xor
push
pop
scas
sarb
dec
sti
js
in
jb
cli
xchg
jmp
mov
or
orb
add
sarl
or
xor
or
cmc
outsb
cmp
scas
inc
push
push
xor
outsl
nop
jmp
clc
stc
sbb
sub
pop
aam
in
cmp
cwtl
enter
sbb
sub
cmpsl
repnz
test
out
lret
sub
pop
leave
dec
push
pop
insl
jmp
pop
xchg
int
lods
jb
fcmovu
jo
sbb
or
fwait
leave
stos
jle
or
aam
sbb
cmpsl
clc
cmp
aas
wbinvd
xchg
cmpsl
loope
pop
fmuls
sub
mov
sti
push
popa
or
ds
add
mov
out
out
push
scas
cld
in
pop
test
mov
addb
dec
cmp
inc
xchg
pop
insb
mov
push
xchg
sarb
and
jmp
jae
ljmp
jbe
mov
adc
sarb
and
and
into
testb
mov
outsl
dec
xchg
call
inc
lret
cltd
sbb
xor
xchg
data16
lods
repnz
inc
iret
lods
std
out
xor
outsl
test
or
adc
sti
flds
loope
rcll
xchg
sub
rcll
dec
adc
imul
fdivl
adc
out
ljmp
mov
adc
cld
ror
mov
cmp
cmp
daa
jl
test
mov
js
pop
lret
jp
push
out
stos
xchg
lods
or
add
mov
fwait
push
adc
lock
mov
je
pusha
mov
loop
push
ret
or
xchg
dec
cmp
xor
sub
mov
push
rol
movsl
fisubl
mov
add
subb
pop
pop
inc
inc
ret
mov
dec
lret
add
xor
mov
pushf
mov
test
sub
push
dec
aaa
push
jg
ss
add
mov
in
adc
inc
dec
dec
xorl
mov
inc
lock
cmp
pop
xor
adc
mov
frstor
icebp
dec
mov
jo
or
mov
out
xchg
jmp
xchg
or
mov
cmpsl
fsubl
mov
inc
in
pop
cmpsb
out
hlt
inc
and
pop
dec
icebp
xchg
sub
sbb
in
mov
mov
cs
test
cmp
leave
dec
jmp
sbb
jno
mov
push
cmpb
pop
clc
push
ret
aaa
adc
pop
cmp
fwait
repz
mov
movsl
rol
mov
and
addr16
fsubp
xor
xchg
xchg
scas
push
mov
daa
mov
mov
lret
cmc
sbb
add
add
inc
cmp
les
in
pop
mov
mov
jmp
jp
pushf
sub
les
mov
jmp
or
push
mov
dec
dec
adc
in
cwtl
xor
mov
dec
push
xchg
repz
push
mov
or
test
movsl
push
jns
lods
jae
jg
or
fisubrl
mov
pop
cmp
faddp
or
cltd
mov
dec
mov
mov
mov
inc
shl
repnz
cmp
adc
test
jb
dec
lret
fisubrl
pusha
inc
jo
cmp
fscale
mov
push
mov
fstpt
imul
or
cmpl
adc
iret
into
cmp
mov
lods
mov
push
push
fidivrl
dec
cmp
mov
insl
mov
ja
and
pushf
fcoml
add
xor
and
jp
cmpsl
out
add
gs
scas
xchg
adc
sarb
mov
adc
dec
lods
mov
adc
ficoms
xchg
push
push
mov
dec
aas
loope
fstpt
inc
in
faddl
mov
std
lods
in
je
inc
cmpsl
dec
aad
push
adc
addb
enter
xchg
mov
push
jne
pushf
xor
pop
push
fiadds
mov
inc
iret
imul
mov
lods
and
lea
cmp
dec
mov
test
push
ds
lea
push
insl
cld
test
ret
movsl
pop
movsl
lret
cwtl
orb
push
mov
mov
adc
adc
pop
cmp
jb
push
pop
leave
call
push
fsubp
xor
fcmovnbe
adc
dec
fimuls
bound
cmp
jno
stc
or
mov
out
es
cmp
hlt
es
loopne
loope
jo
icebp
inc
shlb
adc
inc
fs
fdivrs
add
popa
push
cmp
mov
lcall
ja
hlt
xchg
push
xchg
xor
loope
dec
and
jb
fwait
mov
jmp
adc
add
fs
cmp
push
adc
sub
add
or
sarl
adc
test
jecxz
test
mov
sbb
insl
dec
mov
ljmp
pushf
cmpl
jae
data16
imul
mov
mov
mov
outsb
cmp
inc
sbb
sbb
fcmove
aad
jno
or
sbb
rcll
in
xchg
dec
hlt
dec
xchg
pusha
imul
push
add
cmp
jns
es
fidivl
xchg
lods
xchg
ss
scas
mov
push
pop
gs
pop
add
sub
jp
mov
mov
jp
jg
shlb
stos
out
mov
imul
or
sbb
ljmp
repz
push
test
adc
dec
xor
mov
shrl
ja
or
inc
idiv
pop
movsb
aam
outsb
js
mov
sbb
hlt
or
or
jmp
and
loop
jnp
push
loopne
add
jp
push
add
xchg
stc
and
push
mov
and
sbb
cmp
inc
or
hlt
testl
jecxz
hlt
xchg
inc
lock
sarb
or
mov
push
adc
push
or
dec
iret
pop
gs
xchg
outsl
cmp
iret
enter
pop
jne
jo
rol
xchg
das
stc
cli
mov
push
xchg
outsb
dec
add
idiv
xor
cmp
seto
lods
jne
add
lret
jns
fsubrs
xor
mov
dec
xchg
dec
clc
push
loop
xchg
and
loop
insl
mov
cmc
xchg
jno
jne
aam
clc
insl
xchg
mov
push
cli
jb
std
push
sub
je
lret
cmp
dec
push
popf
dec
mov
xchg
jb
cwtl
outsb
scas
pop
xor
mov
cmp
ficomps
sub
cmp
in
push
test
es
and
cmpsb
add
imul
sbb
sbb
addr16
repnz
nop
xchg
jl
push
xor
xchg
insb
inc
les
push
xor
xchg
jno
sbb
dec
repz
xorb
mov
das
inc
or
faddl
pop
imul
dec
repnz
mov
aad
lods
call
and
popf
addb
sbb
sub
push
mov
jo
fmull
outsl
cmpsl
pop
xchg
repz
cmpsl
mov
repz
jmp
sub
or
pop
mov
dec
cld
add
pop
xchg
pop
ss
dec
mov
imul
mov
popf
xor
aad
rcl
fcomps
adc
into
add
mov
arpl
and
movsb
mov
popa
push
adc
mov
push
adc
jo
jne
mov
daa
in
xor
aad
clc
cmp
enter
jns
mov
mulb
fsub
jge
sub
subb
add
ja
ret
pop
mov
stc
leave
pop
add
dec
test
jno
jle
out
les
inc
daa
add
mov
inc
sub
ja
inc
dec
jmp
mov
add
movsb
lret
repnz
xor
ljmp
inc
scas
test
pop
lods
cmp
push
sub
sbb
out
mov
int3
lea
push
push
mov
xor
xchg
es
pushf
aad
and
mov
pop
lea
mov
rcll
and
xchg
rcll
cmp
pop
ja
mov
fnstcw
test
int
call
cmpsl
add
jp
push
cmp
add
push
in
popf
fildll
inc
cs
inc
dec
xchg
mov
jnp
lock
cmp
scas
add
adc
dec
data16
jb
ffreep
fdiv
and
pop
pop
bound
mov
jo
mov
int
movsl
fwait
cmc
gs
aas
mov
sahf
clc
insl
xchg
out
cmp
push
inc
jge
pop
pop
pop
and
into
mov
push
add
cmp
sbb
add
and
cwtl
fnstenv
sub
fcmovne
in
jns
in
lock
sarb
lods
test
inc
inc
das
fwait
pop
mov
hlt
mov
xor
dec
xchg
jb
dec
fsubr
popa
sub
jecxz
popf
pop
jns
shl
inc
cmp
insb
gs
mov
push
fwait
pushf
mov
mov
es
gs
push
sub
mov
lcall
cmp
lods
xor
fdivr
hlt
lcall
jge
or
inc
and
ret
adc
movb
add
mov
out
fs
jge
scas
in
xchg
shll
shll
xchg
stos
fucomip
sbb
xchg
gs
adc
sbb
in
aas
inc
pop
and
cmp
cmp
xchg
jno
cmp
jl
pop
mov
jno
rcll
fsubrs
mov
cmp
aam
xchg
mov
xor
sbb
add
loope
or
and
stos
imul
and
adc
aas
dec
adc
imul
int
outsl
mov
inc
clc
jg
lods
pop
pop
and
cmp
mov
test
pop
adc
shl
add
add
imul
out
dec
stc
dec
mov
mov
div
stos
fimull
call
mov
addr16
loopne
out
dec
jne
rcrl
push
push
cli
mov
daa
mov
cwtl
fwait
imul
xor
jbe
int
sbb
jmp
push
js
xchg
in
lahf
fimuls
adc
mov
xor
imul
gs
inc
clc
es
test
fisttpll
in
mov
push
xlat
mov
dec
jg
xor
fsubr
xchg
loope
xor
lds
mov
push
lods
cmpl
mov
lcall
repnz
shrb
les
lret
out
xor
xchg
sub
xor
jmp
add
add
mov
or
mov
cwtl
adc
out
out
push
sub
xor
dec
push
inc
sbb
arpl
aaa
xchg
sarl
stos
roll
ret
dec
push
dec
test
shlb
int3
cmp
xchg
sbb
int
loop
or
adc
jmp
rclb
mov
aas
jle
cmp
out
xor
pminub
lret
push
jae
ret
mov
mov
pop
xor
scas
mulb
repnz
or
adc
mov
mov
or
mov
out
mov
pusha
mov
mov
test
push
adc
js
pop
cmp
outsb
loop
jp
je
jno
cmpsl
jmp
mov
adc
das
jp
add
jmp
jp
inc
sbb
cmp
and
arpl
and
mov
pushf
loopne
pop
in
aam
ficompl
xor
mov
leave
lcall
or
push
movsb
or
insl
gs
les
inc
in
fsubrl
sub
mov
inc
jl
and
xor
fldt
sbb
das
cmpsb
fistpll
fidivl
lods
pop
ds
fcomps
cmp
mov
cmp
jg
push
cwtl
fidivl
fistl
insl
subb
pop
dec
nop
mov
add
or
pop
pop
rorl
or
jecxz
pop
add
cmc
jecxz
dec
shll
movsb
in
adc
push
nop
jp
jecxz
mov
xlat
push
stc
mov
jbe
fiaddl
add
sub
ret
or
in
xor
pop
stos
adcl
mov
push
sbb
push
stos
jl
ret
in
sbb
aam
fmulp
cmp
fwait
aas
or
inc
bound
pop
inc
pop
in
mov
add
jno
cmp
aad
push
popa
out
cltd
xchg
cvtps2pd
sbb
ss
inc
aad
adc
lcall
pop
es
mov
pushf
cmp
out
mov
cmp
mov
mov
in
cmp
les
imul
enter
adc
sbb
stos
jb
jle
bound
rcll
adc
cmc
mov
mov
push
push
jge
add
iret
pop
test
cmp
cmp
cld
jae
fisubl
cmc
add
notl
push
out
aaa
fwait
sub
jo
push
gs
mov
clc
es
jp
rcrb
inc
movsb
cmp
dec
push
mov
lcall
sbb
pop
test
sbbl
mov
cli
sbb
std
push
add
lcall
loopne
push
xor
cmp
xor
pushf
xlat
pop
mov
pop
cmp
rorl
or
inc
sub
push
mov
fmuls
and
insb
push
xchg
sub
int
jmp
scas
add
jg
adc
js
jecxz
adc
enter
sub
lods
add
movsl
daa
aas
dec
add
inc
mov
fwait
insb
mov
inc
test
sbb
aas
imul
movb
mov
and
lds
bound
xchg
pop
add
pop
adc
xor
dec
push
lret
sub
fidivrs
jl
cmp
cmpl
cltd
lock
jo
shlb
mov
notl
fcoml
jle
popa
fisttps
sbb
movsl
jecxz
push
sti
stos
insl
xor
lret
add
lcall
scas
lods
mov
jnp
cld
mov
xchg
sti
sbbb
les
test
jnp
cmc
addl
pmullw
inc
jbe
xchg
out
rcr
mov
push
dec
gs
cs
inc
xchg
inc
sbb
push
xchg
adc
cltd
div
out
jmp
je
leave
cs
adc
pop
sub
mov
and
out
cmpsl
sbb
loopne
xchg
mov
xchg
fsubr
jge
shr
rclb
xor
xchg
ds
jecxz
sbb
mov
in
push
lods
xlat
lock
or
push
sub
lcall
inc
mov
loope
ror
mov
xor
and
mov
insl
mov
movsb
adc
imul
mov
push
sub
pop
lock
inc
sub
mov
and
outsl
xchg
daa
movsb
loop
lods
fisttpl
and
das
cmpsb
and
out
push
pusha
sbb
or
test
das
into
les
add
sub
sub
xchg
xchg
mov
addr16
xchg
mov
dec
mov
iret
mov
inc
cmp
mov
insl
mov
cli
cmp
mov
or
and
or
or
mov
xchg
fyl2xp1
fists
mov
jg
ss
lret
popf
and
adc
push
mov
sbb
push
jae
test
ljmp
or
cmpl
lcall
jo
stos
aam
loop
ja
cmp
sub
jo
mov
pushf
or
push
sti
mov
test
sbb
fwait
mov
jb
faddl
adc
jmp
xchg
rep
fs
mov
adc
push
cmp
aas
mov
jo
lcall
leave
and
ja
lds
mov
jle
aas
pop
sbb
and
sub
mov
sub
repz
mov
incb
pusha
cltd
adc
fildl
push
loope
mov
adc
gs
sub
adc
jne
mov
leave
dec
jne
sbb
mov
sub
in
mov
dec
rolb
mov
pop
fcomp
mov
sub
jbe
movsbl
mov
and
popa
lds
cmp
hlt
mov
push
test
mov
cltd
mov
and
cmp
fucomi
sub
push
sbb
mov
andl
mov
add
lods
out
and
lahf
or
xor
mov
shll
mov
jne
or
imulb
scas
prefetcht2
push
jg
dec
or
iret
mov
rcrb
std
das
add
out
outsl
stos
daa
push
adc
fucomp
dec
xor
popa
cmp
lock
lods
cmp
or
push
int3
out
insl
cmc
jg
in
or
lods
out
mov
pop
movsb
ja
in
adc
in
push
pop
lahf
stos
push
add
dec
out
test
mov
push
mulb
je
arpl
xchg
jle
dec
lea
adc
cmp
xor
cwtl
iret
jne
push
sti
lods
mov
shlb
mov
mov
shrb
dec
adc
enter
mov
add
adc
stos
dec
ds
dec
add
int
fstl
xlat
cmp
stos
int
and
clc
cli
adc
cmp
xlat
jb
icebp
push
mov
add
bound
pop
je
imul
dec
cmpsl
push
jmp
xor
mov
les
jp
into
sub
aas
pop
cli
outsl
sbb
jmp
into
jb
pop
sbb
jns
fdivs
cld
xor
pop
cmpsl
scas
imul
jne
sbb
jae
pop
fbld
jecxz
push
adc
cmpsb
push
sub
mov
sub
out
out
cs
mov
cmpsb
test
test
outsl
imul
aam
pop
cmp
es
dec
movsb
xor
je
lock
sbbl
add
jge
rcrb
ret
inc
inc
ficompl
pop
jb
lret
adc
push
scas
and
sub
push
pop
push
test
test
dec
push
cmpsl
leave
movb
fs
sbb
jmp
and
out
in
pop
mov
fs
nop
push
xor
fnsave
xchg
and
xchg
arpl
jnp
push
mov
pop
pop
fisubrl
loopnew
mov
xchg
sub
xchg
sbb
adc
mov
push
jl
lret
fwait
pop
fisubs
stos
test
cmp
jmp
insb
inc
lds
fcom
xchg
pop
scas
add
and
mov
das
dec
xchg
cli
push
jge
add
into
cli
xor
imul
push
in
pop
push
adc
sbb
jp
ljmp
sub
insb
pop
daa
jno
aam
push
mov
mov
push
enter
cltd
repnz
gs
enter
cmpsl
dec
adc
loopne
lds
push
dec
mov
ret
mov
pushf
sub
sbb
mul
xchg
adc
in
andl
fwait
mov
sub
repnz
testl
sbb
sbb
negb
or
icebp
cmp
cmpsl
push
ja
xor
dec
negb
lea
cmp
inc
add
in
testl
pusha
cmpsl
lds
push
jp
sbb
adc
inc
push
fimuls
and
sarb
scas
mov
cmp
jge
movsb
sbb
push
test
rclb
mov
jle
push
scas
mov
clc
in
addr16
adc
sub
loopne
popf
je
outsb
mov
inc
and
fcmovbe
inc
shll
xlat
inc
pop
repz
dec
and
sbb
hlt
sub
and
pushf
inc
loopne
mov
and
nop
stos
push
mov
jb
push
ret
push
or
mov
and
pop
jge
or
int
push
aaa
xchg
ljmp
sti
push
nop
pushf
stos
xchg
sub
fs
jo
add
cwtl
into
ljmp
and
ljmp
mov
xor
lods
fs
cld
iret
jmp
out
leave
stos
cmp
xchg
dec
ficompl
out
lret
xor
les
mov
cltd
daa
aad
sub
fadd
test
call
fdivr
jmp
and
jecxz
mov
gs
add
or
out
mov
fadds
rcr
data16
arpl
out
scas
xchg
pop
adc
mov
push
js
cltd
stos
icebp
xor
mov
aas
mov
fs
addl
ret
pop
push
mov
test
xchg
in
mov
data16
ss
add
dec
mov
mov
xchg
sbb
lahf
push
fst
pop
test
fdivl
ret
push
push
sbb
dec
or
mov
dec
mov
push
outsb
in
or
or
loopne
jp
xor
shlb
lret
leave
lock
and
mov
sub
add
xchg
adc
andl
aad
cld
stos
insb
xor
adc
inc
cmp
cmp
inc
xchg
mov
test
mov
lock
or
xchg
inc
cmp
negb
push
pop
adc
or
pushf
adc
addr16
out
xor
mov
add
jle
inc
insl
xchg
push
mov
std
pop
push
inc
imul
fs
inc
dec
aas
hlt
sbb
fwait
std
fiadds
and
mov
sbb
mov
call
rol
movsb
jmp
pop
lret
pop
add
sbb
out
xchg
mov
clc
ds
push
mov
ja
test
ljmp
fisubl
xlat
daa
mov
lcall
stc
cmp
and
dec
inc
fs
mov
dec
inc
in
test
icebp
pop
or
push
jl
adc
xchg
cmpb
orb
xchg
negb
push
and
inc
xchg
mov
xchg
mov
xchg
pop
inc
iret
pop
sti
loopne
jns
fisttpl
sbb
dec
into
sarl
gs
jge
lock
or
push
inc
fs
pop
pop
mov
xchg
sbb
mov
cmpsl
adc
in
pop
rol
in
xor
cmc
add
or
pop
in
gs
or
and
bound
xchg
arpl
popf
and
xchg
fwait
and
xchg
test
mov
sub
cmp
pop
popa
std
xor
cmpsl
bound
rol
push
pop
adc
sub
loop
pop
mov
les
xor
imul
sub
add
call
out
stos
sti
push
pop
cmp
jl
orl
cs
pusha
fsubrs
and
push
push
bound
add
jbe
scas
pop
xor
xor
xchg
mov
push
ds
imul
pop
sbb
sbb
out
imul
sub
mov
xorb
cmp
sbb
lds
repnz
pop
out
sbb
add
xchg
push
xor
arpl
cmp
adc
sbb
cmpb
lds
fwait
jno
insb
int3
mov
dec
lret
pop
mov
je
in
hlt
and
imul
int
jbe
or
pop
pop
xor
int3
mov
fstpl
jmp
and
xor
ss
dec
xlat
clc
fwait
mov
dec
jl
xchg
cmpsl
inc
mov
stc
xchg
inc
sbb
fimull
lcall
lea
mov
add
js
mov
mov
pop
push
mov
jne
hlt
in
sbb
out
data16
adc
je
jl
pop
xlat
mov
scas
inc
sbb
stos
rcrl
psubsw
hlt
or
push
jns
lods
jae
adc
sti
shlb
inc
enter
xchg
loop
inc
or
xor
popf
cmp
jne
push
mov
jo
sbb
mov
cmp
out
pusha
push
hlt
sbb
mov
or
pop
xlat
out
or
out
inc
jns
sbb
add
out
cmpsb
addb
push
pop
sbb
inc
inc
test
les
outsb
sti
push
cli
add
cwtl
add
mov
jns
mov
into
ljmp
mov
push
daa
insb
inc
mov
cmp
push
mov
aaa
repnz
testl
fildll
arpl
xor
push
inc
push
jb
mov
cmp
sahf
jnp
ffreep
jb
daa
push
movsl
sbb
dec
in
sahf
xchg
inc
pop
into
inc
jle
movsl
mov
fisubl
jbe
pop
fnstcw
call
loope
mov
mov
lret
mov
in
cltd
enter
out
pop
js
cli
push
jmp
in
xchg
xlat
repnz
xchg
les
or
addl
jbe
sub
inc
and
jle
loopne
paddq
pop
push
add
adcl
fldt
shlb
leave
clc
add
je
or
lcall
cmp
add
jge
inc
pop
bsr
mov
sub
mov
rcl
push
lahf
or
and
jge
das
pop
pop
in
mov
insb
daa
xor
mov
mov
mov
mov
ljmp
sahf
int3
aam
imul
loope
out
mov
ds
popa
mov
shlb
sub
inc
push
fs
lds
adc
ljmp
push
gs
das
mov
stos
jb
rcl
xchg
cld
daa
into
mov
xchg
mov
repz
xor
adc
or
dec
push
lock
mov
mov
dec
adc
jbe
inc
dec
or
iret
add
add
data16
jl
pop
leave
mov
pop
pop
inc
cmp
xor
popf
mov
mov
pop
aam
mov
lea
outsb
or
cmp
inc
sub
rorl
iret
imul
push
shll
repz
fbstp
dec
leave
cmpsl
push
sub
popa
pop
loopne
setbe
jecxz
gs
mov
jp
pushf
sbb
fsub
dec
inc
pusha
hlt
push
and
rorb
cmp
xor
shrl
sub
in
jle
pushl
int3
pop
fcmovb
dec
sbb
loop
xchg
ret
cmpsl
shll
xchg
repz
shlb
push
mov
jp
jno
push
pop
xor
loopne
sarl
mov
jle
fbstp
pop
js
sbb
les
sarl
pop
out
xchg
pop
mov
dec
popf
mov
adc
xchg
insl
arpl
call
sbbl
lret
test
insl
nop
loopne
nop
xor
mov
cmp
bound
push
test
push
inc
movsb
hlt
lcall
outsl
lods
or
loope
gs
ds
cs
sub
fisttpll
mov
push
sbb
xchg
lock
mov
and
testl
cmpsb
insb
hlt
das
test
aad
xor
insb
in
mov
fwait
push
adc
push
mov
mov
xchg
and
xor
sbb
in
daa
xchg
lahf
arpl
out
mov
and
xor
pop
les
and
inc
hlt
and
cmpsl
push
aaa
jmp
jne
ljmp
add
jno
cwtl
dec
std
push
imul
adc
or
fstps
out
roll
cwtl
popl
or
xlat
or
das
pop
mov
das
inc
pop
les
stos
jg
sarl
imull
ljmp
xchg
push
les
negb
fsubrl
shrb
cmpsl
fucom
lock
scas
pop
lea
sub
out
dec
push
bound
aam
cltd
cmp
fisubl
sub
add
icebp
scas
dec
inc
push
cmpsb
rclb
jb
sbbl
lahf
fs
cmp
je
fstpl
xchg
jbe
or
aas
movsbl
stos
mul
add
add
rcll
jmp
xrelease
add
xor
stc
nop
pop
pop
xchg
fcomps
call
aad
xchg
xor
xchg
mov
out
pop
push
cli
sub
inc
and
lret
pop
jecxz
outsl
pop
daa
das
out
incl
xor
inc
sub
xchg
cmp
add
add
les
lods
sub
enter
mov
mov
das
popf
inc
stc
rol
testb
ds
add
mov
mov
std
dec
sub
cmp
dec
clc
jmp
shlb
xchg
aad
and
negl
pushf
movsl
mov
adc
mov
es
cmp
frstor
jg
mov
or
jg
mov
xchg
dec
jecxz
inc
xor
fsub
out
dec
mov
mov
or
stc
mov
push
dec
aaa
push
jecxz
cmp
lods
add
mov
inc
test
sbb
pop
mov
cwtl
push
jecxz
add
jo
adc
or
xchg
adc
loope
add
jmp
sbbb
stos
mov
outsb
jns
shll
mov
out
stos
ljmp
mov
mov
in
add
mov
popf
and
mov
inc
push
pop
movsl
pop
xchg
push
jecxz
ds
rcl
jg
pushf
jno
je
mov
mov
adc
stos
push
and
movl
jmp
push
fstps
data16
sbb
jbe
out
repz
push
xchg
cmp
or
and
xor
aaa
add
pop
sub
sti
add
jmp
out
rcll
dec
testl
jg
jae
fcmovnu
mov
loopne
imul
or
ljmp
jmp
addb
or
push
sbb
pop
xchg
in
mov
jge,pt
xor
add
frstor
add
pop
pop
xchg
stc
rclb
cmp
cld
sar
mov
dec
add
mov
mov
sbb
mov
sub
jns
lea
adc
movb
icebp
daa
cmp
mov
idivl
pusha
and
out
pop
cltd
push
mov
pop
xchg
mov
mov
int3
dec
inc
jge
std
fwait
testl
pop
pop
xchg
jecxz
cmp
cmp
push
mov
push
sbb
mov
mov
jae
stc
out
mov
cltd
add
pop
out
int3
cmp
adc
scas
fidivrs
xor
fcomps
pushf
ret
int
loopne
sbb
xchg
pop
out
pop
notl
push
mov
inc
add
cmpsl
mov
mov
cli
repnz
leave
push
loop
inc
add
cmpb
mov
pop
sub
xchg
adc
lahf
jp
ss
push
aas
mov
test
out
mov
out
fistl
mov
push
jl
push
in
inc
push
mov
sahf
pusha
arpl
bound
shll
and
lret
jmp
mov
mov
dec
out
jle
jmp
lods
pop
push
in
push
popa
shlb
or
insl
mov
movb
lret
jl
in
push
fucom
push
in
or
shrl
jmp
push
jb
lahf
adc
or
push
jmp
pop
fcompl
pop
out
adcb
push
cs
sub
push
pop
jl
dec
mov
cmp
push
das
jmp
lods
and
mov
xor
insl
std
lds
mov
xor
imul
scas
sub
sbb
rcl
lea
pop
test
mov
mov
adc
push
xor
sbb
sbb
lret
clc
pop
cmp
cmp
xchg
call
sahf
mov
icebp
cmp
cmc
push
sub
sbb
lds
and
je
jecxz
xor
mov
lea
aas
push
dec
or
cltd
mov
inc
nop
cmpb
dec
xchg
xchg
add
inc
cmpl
jno
test
mov
dec
ja
xchg
cmpsb
gs
jb
and
sbb
clc
rorb
imul
push
aaa
lea
mov
jmp
sbb
or
xor
popf
leave
mov
pop
or
dec
mov
cmp
sbb
js
mov
out
testl
add
xchg
pop
int
push
add
jge
fildl
fcompl
adc
test
and
lods
aam
mov
xorb
add
pop
sub
lcall
out
xchg
mov
adc
test
pop
sub
mov
pusha
add
push
xchg
and
test
jnp
testl
fcomip
rclb
jno
int3
stos
push
mov
mov
shlb
mov
sahf
lock
push
dec
das
jno
xchg
insl
lret
fisttpl
int3
out
push
mov
daa
into
sbb
mov
jnp
add
insl
mov
sub
push
xchg
push
subb
fistps
inc
sub
xor
inc
mov
cmpsl
adc
xchg
jno
push
leave
pop
popa
shlb
shrb
cmp
repz
ljmp
mov
push
adc
adc
push
sahf
out
subl
sbb
test
mov
add
cs
lret
in
out
and
inc
aam
cltd
or
pop
xchg
lock
cmpxchg
test
xchg
cmp
mov
add
lcall
scas
cld
sti
repnz
call
fistl
sarb
mov
fs
mov
mov
cwtl
cmp
inc
mov
in
mull
arpl
cld
adcl
pop
cmpsb
mov
mull
fiaddl
xor
push
hlt
outsb
xchg
mov
rcl
pop
mov
pop
dec
fdivrp
lret
mov
xchg
jl
loopne,pt
xor
dec
push
add
rclb
sub
cwtl
stc
fwait
xchg
cmp
mov
xor
jo
out
xchg
lahf
pop
pop
add
data16
adc
mov
movsb
pop
sbb
std
xor
mov
out
push
repz
jl
sbb
mov
jge
mov
out
push
xlat
cmp
fwait
stos
lods
or
imul
movsb
outsl
xchg
push
xchg
clc
add
jnp
adc
pop
pop
rolb
divl
mov
hlt
gs
cld
xlat
xchg
mov
inc
loope
push
jbe
pop
or
daa
mov
lods
adc
aam
sub
ficomps
ret
repnz
push
mov
outsl
jne
xor
xchg
cld
cmpsb
dec
popa
leave
rclb
fisttpl
das
test
rorl
hlt
ret
int
test
xchg
popf
xchg
test
jmp
shl
sbb
rcl
mov
adc
cmp
loope
pop
in
lock
mov
adcb
popf
and
bnd
pop
inc
add
mov
jno
stos
add
insb
add
pop
loope
int3
popa
repnz
pop
out
adc
fsubr
jge
push
push
cmp
fiaddl
scas
lret
addl
ljmp
pop
rcr
inc
mov
movsb
jnp
mov
pop
outsl
add
fs
pop
push
mov
mov
je
add
jns
ja
rolb
jmp
nop
mov
inc
jno
cwtl
test
sbb
dec
sub
in
jp
cwtl
shlb
mov
mov
imul
stos
movsb
dec
mov
and
jae
xor
test
pushf
or
les
gs
dec
jmp
cmp
lahf
jmp
hlt
inc
inc
pop
lds
push
shlb
dec
lods
pop
shll
adc
mov
hlt
sub
imul
fisttps
into
cmp
and
mov
ds
add
push
sbb
shll
loop
sbb
adc
mov
mov
loop
fisttpll
cmp
push
dec
inc
jp
mov
repnz
inc
loopne
mov
jns
out
add
mov
lcall
pop
jge
enter
gs
test
push
xchg
sub
cmp
xchg
scas
cmp
sub
pop
insl
iret
mov
lret
movsb
adc
lahf
dec
sub
cld
mov
and
mov
andps
jbe
adc
leave
lock
sub
divl
and
dec
inc
adc
jbe
xor
out
pop
pop
xchg
mov
mov
mov
imul
hlt
cmp
pop
xor
inc
test
mulb
ja
inc
sbb
pop
add
jae
push
sbb
jne
pop
nop
into
cmp
sbb
pop
imul
andb
js
roll
jge
add
in
enter
mov
mov
inc
stos
jecxz
add
or
test
lret
fildll
in
fs
pusha
xchg
mov
mov
sbb
sub
rol
popf
sbb
mov
xor
pop
xor
mov
fisubrs
adc
xchg
push
stos
test
pop
jmp
test
sub
add
movsb
sub
mov
jbe
pop
fisubrs
pop
adc
test
lock
adc
mov
sahf
mov
aaa
cmp
pusha
popl
push
aas
xor
xchg
inc
jp
inc
dec
pop
lahf
mov
pop
jnp
mov
lods
pop
add
cmp
mulb
adc
or
dec
sbb
stc
mov
fadds
das
mov
into
adcb
fnsave
mov
mov
scas
ret
nop
jne
xchg
sti
das
cwtl
sub
mov
cmp
pusha
dec
jae
dec
ss
enter
repnz
out
xchg
stos
xlat
mov
mov
pop
inc
sbbl
push
fwait
pop
rol
and
cwtl
mov
mov
cmc
add
mov
bnd
add
les
jg
inc
outsb
mov
pop
jcxz
cwtl
ja
sbb
dec
lods
push
call
lcall
hlt
dec
out
fidivs
shl
sub
jno
cwtl
jmp
mov
fsubrs
int
jecxz
jge
int
out
xchg
mov
cmp
out
add
pop
xchg
insb
xchg
ljmp
mov
cmc
lahf
sub
sbb
popa
fdivp
cmpsb
outsl
cmp
and
call
fs
mov
sbb
fnstcw
jne
cltd
insb
inc
int
pop
lcall
jne
cwtl
mov
js
or
dec
aad
repnz
stos
mov
lea
dec
in
add
mov
dec
jge
popa
inc
in
xchg
loope
pop
jne
add
and
aad
or
repnz
push
in
pusha
je
cld
out
subb
imul
dec
mov
cmp
dec
test
jae
inc
inc
enter
or
and
jbe
pushf
test
je
rcrb
and
pusha
and
or
fdiv
mov
jle
cmpsb
sub
fsubl
push
lock
addr16
outsl
xchg
faddp
das
out
pop
or
xchg
or
idivl
sbb
or
test
jecxz
scas
adc
push
mov
repnz
cmp
jmp
cli
mov
mov
fldcw
mov
and
and
das
cmpsl
mov
xor
movsb
call
movsl
add
xorb
mov
pop
jecxz
dec
out
fsubrs
je
jne
sbb
notl
and
or
sbb
mov
xorl
mov
cmp
stos
enter
sahf
fistpll
loope
push
ret
adc
in
outsl
mov
fnstsw
pop
sbb
adc
jne
clc
addr16
lea
stos
aad
das
or
lods
dec
adc
scas
daa
inc
xor
test
cmp
inc
orl
bound
sub
pop
pop
and
pop
xlat
pop
or
add
xchg
jp
call
sbbb
xchg
sbb
push
jnp
dec
dec
adc
jge
sbb
idivl
mov
mov
cmpsl
xchg
popa
pop
mov
data16
sub
dec
pop
sbb
loope
adc
mov
lret
cli
mov
add
sahf
push
sti
add
jecxz
xor
cmpsl
daa
mov
hlt
sahf
add
pop
in
mov
lea
je
dec
inc
je
scas
std
flds
pop
dec
cwtl
scas
movsl
testb
rclb
and
in
cwtl
pop
shl
dec
jnp
fs
out
inc
sub
cmp
sbb
push
aam
sbb
or
inc
adc
rorb
dec
je
mov
std
mov
das
pop
sbb
iret
xchg
jmp
push
pop
xor
pop
incb
mov
lahf
rcrb
add
iret
and
jae
aas
xchg
xchg
sahf
loop
test
loop
add
jmp
dec
arpl
fistpll
xor
mov
hlt
test
adc
test
adc
cmp
and
inc
js
loope
aaa
jae
lds
cmp
outsb
in
insb
ljmp
adc
jne
lock
fiaddl
sbbl
sub
jge
cmp
in
add
pop
xchg
cmp
in
and
mov
fadds
sbb
mov
cltd
jno
push
test
sub
and
out
ret
xchg
fstl
mov
sub
xchg
jns
push
leave
xor
adc
and
cltd
push
js
aad
inc
push
hlt
jne
pop
mov
loop
sub
xchg
daa
rol
aam
stos
insb
movsb
cmp
pop
call
cs
stc
add
iret
adc
cmpsb
jae
shr
mov
aad
scas
test
xor
test
loopne
notl
out
enter
aad
pop
xchg
adc
sub
sbb
sbb
mov
dec
ss
loop
scas
dec
out
les
addr16
xor
sbb
sbb
sbb
sub
hlt
mov
sub
shlb
or
pop
fisttpll
mov
pop
sub
shl
and
add
pop
xchg
test
sbb
and
test
or
sub
mov
pop
out
pop
sub
sub
jne
idivl
dec
ja
fsts
imul
fwait
jg
lret
inc
sub
push
mov
or
pop
je
adc
mov
aas
xchg
les
cmpsl
imul
je
stos
aaa
xor
out
hlt
jecxz
icebp
jecxz
inc
mov
or
sub
pop
add
stos
lods
push
pop
pop
into
negb
outsb
mov
mov
ds
inc
ror
repnz
add
cmp
and
push
lock
mov
fstl
push
jne
push
and
add
jb
in
popa
movsb
icebp
sub
out
mov
xor
mov
push
or
fs
das
add
nop
lret
enter
loop
fnstcw
stos
mov
out
test
loope,pt
xlat
pusha
add
out
mov
xchg
lods
loope
push
ds
add
mov
inc
mov
decl
pop
nop
fdivrl
sahf
inc
scas
loop
rolb
lds
insl
xor
shl
scas
mov
add
mov
inc
add
std
lea
pop
movsl
xor
mov
add
nop
or
test
shlb
rcl
insb
call
andl
add
xchg
jbe
popf
pop
dec
repnz
pop
mov
push
xchg
xor
sub
ljmp
sbb
jle
nop
dec
clc
mov
repz
fucomi
push
adc
pop
pop
sub
or
test
sbb
negl
out
jp
mov
lods
pop
ljmp
mov
push
in
adc
ret
or
cmp
inc
out
push
xor
jle
repz
push
ret
mov
les
bound
lods
sti
movsb
sub
bound
nop
lea
and
jl
lds
mov
pushl
push
mov
pop
dec
adc
popa
inc
dec
fcmovne
lock
or
push
scas
sbb
or
repz
dec
in
addr16
lods
add
pop
or
or
aas
ret
inc
je
mov
loope
xor
or
std
push
add
xorl
push
jmp
jge
adcl
sahf
mov
push
cmpsb
lfs
xchg
mov
and
or
scas
into
std
jae
notl
fs
push
pop
mov
cld
dec
stc
sbb
les
mov
dec
repz
sbb
dec
cmpsl
mov
sub
movsl
pop
mov
mov
adc
pop
lahf
loop
push
sub
subps
sub
in
lret
out
mov
addr16
push
mov
ja
add
daa
ja
lcall
movsl
cltd
jp
jl
sub
adc
pop
je
push
lock
insl
test
arpl
fwait
jmp
xchg
jb
in
out
ds
mov
pop
pop
sub
inc
cltd
dec
inc
imul
daa
push
adc
stos
jg
dec
mov
insb
mov
dec
inc
ja
test
repnz
and
test
dec
push
lock
rep
repnz
adc
arpl
xchg
cs
scas
xchg
xorb
fdiv
nop
jnp
push
nop
fmulp
xchg
bound
push
and
ret
decb
pop
stc
test
sbb
sbb
lret
out
aas
mov
call
loopne
mov
and
arpl
repnz
pushf
cmp
and
jno
mov
es
mov
out
jp
xchg
lret
popf
pop
movsl
mulb
or
xor
jno
fmull
sub
and
xlat
dec
rcrb
cmp
jo
lock
cmp
sbb
outsw
push
xchg
cld
fnstcw
inc
pushf
and
rcll
jge
fadd
push
cmp
icebp
imul
mov
ret
and
inc
inc
jmp
jb
dec
adc
adcb
repnz
xchg
ret
outsl
mov
js,pn
jo
pop
das
sti
pop
shrb
jle
cmpsb
stos
adcb
sbb
mov
push
dec
in
dec
scas
sub
mov
push
aad
cmp
push
and
mov
std
push
push
fwait
cmp
jge
lret
sar
repz
out
sbb
call
repnz
dec
fcompl
push
pop
jge
call
lea
int3
out
cwtl
outsl
sahf
in
jmp
mov
xchg
test
sbb
ljmp
into
jnp
inc
xchg
xchg
dec
pop
inc
outsb
adc
push
cmp
xchg
mov
cltd
jp
lea
das
sbb
test
mov
stc
sbb
inc
shl
adc
mov
xchg
sbb
pop
rcl
xorl
push
sbb
shr
mov
fs
imul
pushf
roll
fbstp
xchg
add
std
inc
cmpsb
xchg
mov
xchg
mov
test
pop
mov
sbb
push
testb
xor
js
cli
and
dec
test
push
test
push
push
jle
push
pop
sub
lahf
addr16
outsl
jno
icebp
push
xchg
mov
pop
sbb
xchg
and
mov
xchg
jnp
mov
xor
sub
mov
cltd
cld
test
xor
cs
out
pop
ficoms
sub
xchg
inc
pextrw
movsb
sub
sub
xor
mov
cmpsb
rol
add
movsb
add
pause
jmp
aas
sub
jae
jmp
rclb
out
aas
leave
pop
into
sub
cmp
xchg
enter
mov
mov
dec
roll
jecxz
bnd
or
jno
mov
in
nop
push
mov
vmwrite
and
sbbb
jg
dec
rolb
and
push
jns
pop
adc
jo
adc
adc
and
inc
and
cmpsb
xchg
scas
inc
or
into
pop
jmp
push
push
adc
add
jp
loope
enter
mov
ss
xchg
rorb
add
inc
test
enter
bound
add
xor
inc
leave
imul
imul
mov
cld
mov
aaa
cmp
sub
or
inc
jae
ret
inc
add
lahf
sbb
jecxz
dec
stos
leave
jg
adc
mov
fcmovnbe
push
inc
cmp
cmp
pop
insl
fistl
xor
aas
adc
fldenv
sub
mov
ljmp
mov
push
sub
out
inc
rorl
cmp
scas
add
je
rcl
adc
in
mov
xor
cmp
es
in
out
lahf
jg
insl
andl
dec
mov
fabs
sbb
inc
lcall
in
std
out
and
pop
icebp
test
push
out
push
sarb
pop
popf
pandn
jmp
mov
daa
adc
cli
push
dec
cld
inc
xor
and
adc
pusha
gs
pop
mov
ftst
xlat
js
je
fs
icebp
adc
push
stos
fbld
inc
ficomps
dec
stos
push
and
lods
push
mov
push
jmp
sub
incl
sub
xor
addb
int
inc
cmp
fnstenv
jmp
wbinvd
fucomi
mov
sbb
push
xchg
sbb
cmpsl
add
mov
imul
mov
mov
xchg
lret
inc
dec
fists
sub
add
pop
jb
xlat
ficoml
inc
in
sbb
cld
push
pop
shlb
and
adc
sbbl
aas
jnp
lret
cmpsb
stc
imul
cmc
call
pop
mov
scas
jg
lret
sbb
and
test
mov
xor
mov
jmp
cltd
mov
and
and
mov
xacquire
mov
lods
add
lea
mov
insb
imul
out
das
mov
imul
sarb
inc
arpl
out
lods
js
lret
ret
shll
or
stc
sbb
sub
daa
dec
xor
hlt
jp
push
adc
mov
stos
ror
out
jo
aad
xchg
cvtdq2ps
mov
iret
mov
out
xchg
sub
jle
cld
rorb
test
push
sub
jbe
or
imul
jg,pt
es
mov
mov
cmpsl
mov
and
repz
dec
loope,pn
pushf
mov
dec
push
pop
inc
fwait
out
lods
fcoms
nop
xor
inc
sbb
inc
sbb
daa
add
cmp
cltd
call
loop
fisubrs
movsl
pop
inc
aad
rcll
adc
int
test
enter
movsb
mov
mov
adc
or
xchg
xor
mul
jns
mov
out
arpl
mov
pusha
cmp
xor
cmp
gs
outsb
xchg
dec
inc
outsl
fstl
pop
lahf
arpl
call
pop
fsubr
popa
add
out
fcomi
jecxz
pop
mov
clc
mov
jg
xlat
into
test
test
aam
lods
mov
xchg
outsb
ds
mov
add
jge
jo
pop
add
mov
mov
cmp
and
xor
jg
adc
mov
pop
sti
repnz
stos
out
inc
adc
clc
ret
ds
inc
int3
cltd
in
or
sahf
cmc
fsubs
shl
movb
push
add
sbb
xchg
or
in
repz
fimull
jge
adc
imul
mov
pop
shrb
fidivs
clc
jb
add
add
into
sahf
test
jmp
test
jo
dec
mov
lret
pop
xchg
enter
add
dec
lods
fwait
mov
push
adc
rcrb
out
xchg
push
jg
push
stos
lods
xchg
sbb
jo,pt
ficoms
adc
ss
mov
push
rorl
cmp
icebp
test
xchg
jge
test
fbld
leave
andl
mov
push
stc
mov
nop
dec
or
or
cmpsb
mov
and
subb
rorb
clc
and
sub
rcll
mov
lock
mov
sub
mov
add
xor
mov
popf
jg
inc
push
jbe
sbb
fsts
addb
or
pop
cmp
pop
push
lret
test
std
adc
inc
insl
pop
in
fsubrl
insl
cwtl
adc
xor
pusha
xchg
dec
stos
ss
sbb
xor
xor
orb
and
jp
or
xchg
out
fcmovb
adc
addl
arpl
rorl
inc
inc
pop
mov
in
dec
mov
fdivp
mov
and
lret
xchg
sti
jle
lahf
pushf
adc
mov
mov
sbb
xlat
cmp
add
mov
jno
imul
cmp
aad
inc
xchg
subb
cmp
adcb
push
dec
aad
mul
mov
out
cmpsb
outsl
push
loop
lock
lret
stos
mov
cmp
clc
jmp
xchg
test
sbb
test
or
xchg
pop
loop
movsl
pop
test
into
or
adc
xchg
fdivrl
cmpsl
stos
push
add
pop
cmp
lahf
mov
bound
dec
gs
jno
outsl
add
ss
and
adc
sbb
sub
dec
ljmp
ret
xor
xchg
lahf
imul
fists
cmp
fisttps
jno
test
xchg
sbb
lock
inc
push
mov
lock
lds
mov
lret
mov
sub
sub
push
ret
dec
jae
push
fadds
inc
aaa
into
sbb
push
fdivrs
push
xorb
jae
cwtl
cmc
xor
pop
rolb
cs
and
out
bound
jp
daa
xor
inc
mov
jg
and
mov
imul
incl
cmp
sbb
dec
xor
dec
mov
push
sub
dec
fdivrl
fadds
cmpsl
inc
daa
imul
inc
cmp
add
pop
mov
pushf
ret
mov
jbe
shlb
data16
insb
in
jae
mov
pop
and
xchg
cmp
rcrb
cmpl
cmp
fisubl
rcll
adc
push
sub
lods
push
test
push
add
inc
or
lcall
jne
and
mov
mov
adc
sbb
ret
push
or
das
ljmp
cmp
pushf
push
aad
loop
mov
pop
inc
ret
fbld
xchg
cmc
xor
pop
mov
pop
pop
cmpsl
sti
cmp
shlb
repnz
cmpsb
fnsetpm(287
mov
test
movsb
pop
xor
jno
loop
push
jns
scas
mov
fistps
ret
jg
out
pop
mov
in
ret
xchg
or
xchg
cmp
lret
inc
aam
loop
jae
aaa
rcll
xor
mov
icebp
pusha
cmp
jg
cmp
stc
test
loopne
in
mov
popf
sbb
popa
jmp
dec
decl
xchg
pop
push
and
js
cmp
push
mov
xchg
jns
or
mov
dec
insl
inc
dec
xor
repz
sbb
add
cs
or
imul
push
in
mov
mov
dec
add
cmp
inc
inc
sbb
test
sub
pop
mov
fwait
mov
imul
push
and
and
mov
shlb
out
outsb
mov
xchg
lods
cmpsl
flds
inc
mov
xchg
mov
jp
fstpl
imul
xor
test
push
cmpsl
sbb
sub
sbb
xlat
jp
xchg
dec
and
and
iret
daa
dec
add
fs
mov
sar
test
adc
stos
sbb
sub
notb
mov
scas
pop
pop
jo
xor
mov
in
push
sub
ljmp
fmuls
push
sbb
stos
shlb
jne
cmp
sub
and
cld
out
in
shrb
dec
arpl
xchg
aad
xchg
arpl
sub
push
jge
ret
in
or
mov
mov
add
push
push
cltd
cmc
cmp
xchg
call
int
imul
jns
xchg
mov
push
rcll
mov
ret
ret
fldt
add
into
mov
mov
outsb
rcll
subb
mov
test
enter
es
or
daa
loope
xor
cmp
sbb
add
jl
scas
push
bound
cmp
das
mov
stc
push
int3
mov
xlat
test
int3
push
insb
addr16
xchg
cmp
pop
aas
cmp
xchg
pop
xor
dec
fisubl
or
repz
out
mov
xchg
mov
add
ds
fs
jns
les
test
xchg
dec
mov
scas
mov
lock
mov
sbb
inc
mov
dec
bound
pop
cmp
cmp
jge
push
in
push
xchg
loop
inc
or
mov
mov
add
orb
in
shlb
jb
dec
xchg
fildll
xchg
inc
mov
loopne
js
movsl
jnp
lds
jne
inc
mov
insl
jp
push
add
lahf
xchg
test
and
inc
filds
sbb
dec
mov
push
pop
xchg
popf
adc
add
fdivl
lret
and
fidivl
arpl
test
dec
push
sub
lahf
inc
sbb
pop
mov
inc
xlat
orl
and
int
mov
push
jno
sub
xchg
mov
adcb
cmpsb
jg
xor
sbb
sti
mov
push
and
inc
lock
sahf
jmp
push
cmc
push
repz
pusha
mov
fisubrl
cmpb
scas
or
jecxz
fistpll
pop
aaa
dec
push
dec
je
cltd
xchg
mov
pop
cmp
mov
or
pop
std
mov
xchg
push
flds
sub
repz
popa
push
pop
hlt
dec
dec
movsb
and
stos
pop
mov
xchg
dec
ds
outsb
mov
mov
mov
push
fnstenv
dec
push
pop
leave
mov
jb
jno
es
sbb
push
fisubl
lds
addl
sarl
sahf
mov
pusha
pop
loopne
adc
aas
in
stos
in
arpl
ljmp
xorb
inc
jb
lret
adc
pop
mov
xchg
push
lret
jle
sahf
cmp
ret
clc
mov
or
add
or
shl
mov
lret
sbb
xor
push
inc
arpl
jle
nop
cld
cmp
adc
dec
and
ss
inc
mov
dec
push
mov
push
dec
or
adc
jmp
add
lcall
cld
pop
xchg
mov
stc
jns
xor
fisttps
hlt
in
int3
inc
xor
push
mov
inc
das
xor
or
xchg
pop
push
out
pop
inc
lds
into
inc
xchg
into
andb
inc
lea
adc
xor
push
cmp
outsl
subl
mov
in
out
test
hlt
enter
sbb
out
sub
mov
mov
push
ds
jb
mov
cltd
mov
fs
or
leave
fildl
lock
fcmovne
into
mov
dec
xlat
cmp
pop
lock
sbb
mov
dec
add
sbb
test
loop
adc
mov
mov
jmp
xchg
add
fsubrl
ss
sahf
out
xchg
jmp
test
xchg
lock
mov
idivb
fcomi
loope
lret
sbbb
outsb
cmp
xor
divb
aas
out
ljmp
cli
in
je
inc
mov
xchg
ja
dec
and
cmp
lock
loopne
xchg
push
mov
dec
pop
xor
sbb
sbb
inc
xchg
ret
out
divb
ljmp
jl
roll
lods
sar
sub
cmp
xchg
pop
dec
add
mov
cmp
mov
repnz
ss
int
xorb
jecxz
daa
test
adc
insb
mov
cmc
daa
cmp
popf
dec
adc
mov
or
and
fnstenv
xor
cwtl
jno
xchg
jp
data16
test
inc
js
cltd
adc
add
stos
jno
xchg
adc
je
pop
xor
jb
and
aam
xchg
lea
or
mov
cmp
adc
jo
and
mov
sahf
jl
adc
dec
mov
ja
adc
mov
daa
ret
fldl
inc
mov
or
xchg
cmp
cwtl
call
bound
jne
aaa
add
call
cmp
movsl
xchg
sub
mov
mov
fxch
stos
sub
cmp
push
mov
enter
mov
out
cli
leave
jo
ret
sbb
daa
xor
pop
push
out
daa
mov
test
addl
je
stc
and
add
mov
xchg
cmc
loopne
xor
popf
popa
or
sbb
jno
lods
cmpsl
xchg
iret
es
rorb
mov
loopne
dec
call
das
aaa
add
repz
bound
push
out
inc
mov
fnstsw
push
and
ljmp
scas
ret
cmp
stos
or
and
fdivl
shll
jnp
adc
in
adc
xchg
es
cmp
add
mov
adc
fidivrl
and
dec
imul
pop
out
dec
jo
lahf
fdiv
add
insl
loopne
xlat
addr16
in
mov
lahf
push
jo
mov
push
leave
xchg
leave
sahf
insl
std
icebp
mov
and
lret
jge
sbb
inc
pop
cmp
push
fists
and
mulb
lea
push
pop
push
stos
xor
test
xor
loopne
aam
xchg
mov
into
mov
xor
insb
insb
jbe
pushf
pop
ss
sbb
not
ljmp
mov
add
or
jns
das
dec
push
outsb
fucomip
add
loop
and
test
adc
and
in
adc
xlat
mov
aam
sbb
call
cmp
ss
mov
inc
push
shlb
cmp
or
sub
mov
jo
xor
stc
movsb
pop
dec
pop
cmc
in
sub
pop
fwait
and
stc
sti
xchg
pop
clc
lock
push
fmul
aas
mov
lods
rclb
cmp
dec
cmp
loopne
pop
ret
inc
sti
call
dec
mov
jns
jo
jae
or
std
adc
xchg
ds
aad
sbb
push
mov
stos
outsb
jg
jmp
test
pop
cmp
jo
push
maskmovq
imull
jns
pop
je
repz
cmp
mov
inc
imul
adc
lcall
ds
dec
mov
inc
pxor
insl
cmp
std
arpl
repz
cltd
int
push
subb
andl
scas
mov
loopne
mov
jmp
pop
dec
arpl
sbb
cld
outsl
push
mov
sbb
in
sbb
jno
test
and
cmp
mov
js
inc
mov
push
dec
pop
pop
test
inc
cmpl
push
cmp
sub
pop
lret
cmp
dec
fwait
ret
hlt
push
rcrl
jle
imul
or
dec
mov
pop
cmp
scas
jl
loop
addr16
loope
xchg
mov
ja
or
fcmove
js
mov
jmp
sbbb
cmp
negl
or
mov
mov
mov
sbb
xchg
lods
cmp
fistl
loopne
cld
iret
sub
stos
mov
out
test
dec
xchg
jb
mov
push
mov
mov
mov
mov
dec
int
sbb
adc
mov
das
dec
cmp
jnp
adc
adc
inc
pusha
mov
cmc
shll
jmp
sbb
push
movsl
dec
mov
stos
adc
bound
enter
sub
int3
mov
push
sub
ja
mov
and
loopne
mov
hlt
xchg
add
fstl
lea
mov
xchg
push
arpl
xchg
add
cmp
fwait
aad
dec
sub
imul
and
jecxz
cmp
popa
inc
repnz
pushw
fidivrs
xor
rorl
out
pop
cmpsl
sub
cltd
mov
aad
push
rorb
inc
fidivrl
or
bound
lea
cmp
mov
inc
pop
fiaddl
lret
push
imul
mov
xchg
lcall
clc
pusha
jo
dec
cmp
pop
cmp
lods
imul
add
jne
and
scas
call
subb
mov
aam
dec
loopne
or
jno
lret
xchg
add
or
mov
mov
leave
push
mov
scas
shlb
orb
in
sub
add
and
jno
cmc
idivb
add
mov
and
bound
repnz
rol
imul
and
mov
outsl
sbb
stos
div
mov
jle
and
scas
idivl
addl
pusha
pop
aaa
xchg
aas
lret
add
or
sbb
xorl
leave
mov
imulb
lret
cli
imul
popf
adc
call
sbbb
adc
adc
sub
cmp
inc
jmp
cmpsb
jb
test
sbbb
test
nop
shll
in
xor
dec
div
mov
mov
arpl
cmp
mov
mov
fisubl
mov
scas
jge
and
add
and
test
cmp
push
xor
inc
data16
push
sarb
divb
sti
pop
jge
mov
out
rcrl
mov
mov
and
ja
inc
push
push
inc
bound
std
dec
push
call
loop
leave
xor
xchg
out
insl
inc
mov
sbb
adc
js
aaa
inc
push
fcmovbe
jno
rcrb
or
xchg
hlt
rorb
or
jne
loopne
iret
xchg
push
in
ret
xchg
lods
rorb
sub
add
and
adc
push
mov
outsb
clc
repz
cs
daa
in
xor
xchg
jne
xchg
jl
mov
in
xchg
outsb
dec
enter
mov
icebp
mov
or
lock
mov
mov
inc
out
and
adc
sub
and
bound
sbb
jno
mov
xor
cmpsb
mov
pop
sub
push
or
stos
shlb
pop
push
in
ret
insl
fiadds
sub
adc
fmulp
adc
inc
shll
cmp
dec
add
push
scas
fwait
mov
mov
repz
jbe
pop
test
mov
xor
call
clc
inc
mov
dec
shrb
xchg
lock
mov
lret
mov
arpl
les
pop
hlt
fisubrl
push
xchg
xchg
mov
test
mov
mov
adc
mov
mov
stos
std
mov
sub
xor
not
imul
lret
lahf
imul
enter
or
lahf
daa
aaa
and
test
shlb
loope
aad
sub
push
jl
pop
jo
arpl
fucomi
pop
int3
test
inc
mov
jmp
mov
in
test
insb
stos
jb
or
mov
iret
in
mov
outsl
ljmp
adc
jl
cs
or
fidivl
jmp
loope
iret
test
push
clc
les
ja
cwtl
imulb
in
mov
jl
mov
pop
or
or
cmpsl
xchg
clc
pop
ficomps
fidivrl
bnd
cwtl
xor
cwtl
cltd
call
cli
gs
idivl
bound
mov
enter
sub
insb
and
jno
fbstp
sub
add
jg
jae
and
dec
pop
loope
inc
fidivrs
xchg
mov
push
out
sub
mov
mov
inc
cltd
or
xor
push
sbb
cmpsb
out
lcall
call
cmc
cld
daa
or
in
xchg
lods
andb
dec
inc
and
in
inc
or
clc
adc
ds
inc
mov
dec
sahf
je
jl
sbb
jmp
fwait
adc
mov
mov
pop
adc
sbb
xchg
sub
les
insl
orb
add
mov
sbb
or
outsl
mov
stos
les
insb
and
pusha
arpl
jbe
push
mov
and
xor
daa
loopne
int3
jno
jle
div
mov
xchg
push
cmpsb
sbb
pop
rcrl
repz
aam
mov
repnz
jle
outsl
cmp
jle
mov
scas
pop
inc
push
xchg
push
stos
cmp
ds
mov
aas
mov
fcmove
mov
xchg
and
decl
cwtl
or
fs
push
mov
shll
mov
jnp
push
iret
mov
mov
fwait
test
lea
jmp
scas
dec
loope
setl
pusha
push
les
mov
sub
aas
inc
dec
pusha
in
jae
sbb
call
cmp
out
mov
cmp
test
mov
add
mov
sub
icebp
lcall
xor
and
scas
sub
cmp
xor
rcll
adc
test
fbstp
icebp
leave
inc
or
mov
pushf
pop
test
jno
mov
subb
lret
mov
mov
fidivrl
ja
inc
cmpsl
ss
leave
push
mov
xchg
xchg
fcompl
sub
cmp
or
cmp
sbb
sti
mov
ret
sbb
icebp
decb
sub
lahf
ucomiss
cmc
and
repnz
shl
stos
mov
pusha
aam
push
sti
pop
or
dec
insl
inc
cmp
jge
cmp
add
ret
cmp
jp
lret
jae
mov
loop
sbb
shlb
mov
jno
pusha
mov
jle
dec
fwait
dec
cmpsb
fdivl
dec
out
out
insb
aam
andb
mov
sbb
add
sbb
xor
int3
inc
shrb
std
jbe
add
loope
add
je
test
mov
cli
sbb
rolb
xchg
push
subb
out
lcall
mov
push
inc
std
shll
inc
xchg
ja
jae
sbbl
jp
jl
add
mov
outsl
imul
sub
jbe
push
mov
pop
xchg
mov
dec
mov
int3
leave
fs
xchg
test
xor
out
cs
xchg
push
out
push
int
mov
popa
push
fmull
bound
dec
inc
pusha
pop
cld
mov
lcall
push
mov
dec
loopne
jmp
sbb
rolb
in
sarl
xor
dec
stc
repnz
call
enter
iret
jecxz
cmp
icebp
shlb
mov
mov
mov
or
out
hlt
jp
fldt
call
fmull
fsub
pop
test
out
jge
in
adc
push
jge
cmp
sbb
push
nop
shrb
pop
dec
out
xchg
push
int3
xor
sbb
mov
xchg
add
shll
jns
inc
push
daa
movsl
cmp
push
imul
xchg
mov
mov
adc
jbe
fadd
gs
aad
xchg
or
pop
lcall
not
out
adc
sub
push
popa
add
fisttpll
mov
push
sub
or
mov
rorb
or
inc
cmp
jo
int
sbb
addr16
jg
jo
pop
iret
add
outsl
adc
pusha
sub
lret
push
jecxz
inc
hlt
inc
adc
xchg
pop
pop
out
out
repz
repz
cmp
lcall
fstp
add
out
or
cwtl
mov
cwtl
xor
lcall
jb
mov
lock
repz
popf
mov
orb
dec
clc
mov
inc
outsb
movsb
notl
popf
xor
jno
lods
cmpsb
ficoms
adc
lds
xor
mov
mov
iret
cs
cmpsl
rcrb
sub
in
jg
leave
out
xchg
fxch
lahf
and
mov
jg
sub
and
sbb
push
sbb
lea
pop
mov
leave
dec
add
dec
shrl
stos
sub
das
cmp
mov
pop
xor
fs
mov
cmpsb
test
pushf
mov
aam
xor
iret
mov
shll
jg
pushf
and
cmp
arpl
ficoml
rol
pop
sbb
jecxz
popf
loop
sub
aas
xorl
leave
mov
in
add
stos
les
mov
inc
fsts
cmpb
das
fsubrl
mov
push
cwtl
outsl
or
jno
jno
rolb
cmp
sub
mov
psubusw
cmc
mov
jl
pop
in
and
sbb
mov
xor
mov
mov
stos
or
xor
dec
cmp
push
mov
shr
push
in
push
nop
xchg
cmpsb
mov
idivl
adc
loop
repz
and
imul
cmp
pop
sub
sub
int
daa
outsl
jg
hlt
pushf
not
mov
daa
xor
cmp
sar
mov
pop
inc
mov
dec
imul
push
idivl
pop
cmp
inc
stc
out
dec
adc
cli
lods
mov
aas
or
insl
mov
inc
cs
inc
and
je
mov
adc
xor
push
inc
xor
adc
or
ljmp
stc
jle
mov
lds
and
aam
sbb
cltd
mov
arpl
or
mov
das
cmp
ret
cs
test
xor
xchg
pop
in
sahf
loope
aas
adc
and
stc
or
inc
or
js
pop
repnz
test
lock
shrb
rclb
or
sub
xor
sub
test
test
sahf
push
outsb
fcmovne
mov
and
mov
cmp
insl
mov
add
scas
jae
stc
insl
idivl
sbb
dec
or
dec
sti
xor
add
int3
add
icebp
pushf
mov
and
inc
xorb
loope
scas
push
pop
shr
stc
or
mov
ret
jmp
ljmp
dec
add
test
loope
jbe
mov
aad
push
and
out
dec
imul
inc
mov
shll
add
xor
mov
in
or
cmpsl
bound
mov
mov
mov
in
push
dec
sub
or
adc
dec
pop
add
xchg
mov
add
and
lcall
sub
fidivl
orb
js
jmp
lods
loopne
push
mov
out
dec
add
sbb
jle
fildl
mov
pushf
sbb
scas
arpl
pop
sbb
or
stc
add
lds
subl
mov
push
stos
arpl
add
inc
insl
popf
or
insl
jle
xor
inc
out
adc
jnp
pop
sti
dec
or
addr16
outsl
divb
test
sar
out
cmpsb
lods
xor
xor
fcompl
or
dec
mov
fstpl
movsb
inc
fistpll
push
sbb
rcr
cmc
stc
add
pop
jmp
or
sub
xor
shll
popa
jae
lcall
push
mov
out
xchg
xor
pop
xchg
aaa
add
clc
je
js
fcmovbe
or
dec
fwait
movsb
jns
inc
shr
cmpsb
repz
jo
mov
cmp
std
xor
into
dec
fxch
movsl
inc
xchg
pop
jo
add
push
out
mov
adc
cwtl
jnp
subb
ret
insb
insb
inc
xchg
aad
imul
cli
jecxz
pop
lea
lret
mov
sbb
push
sti
lock
mov
stc
sub
pop
fldenv
hlt
jnp
lret
testl
jo
je
sbb
arpl
jmp
fildl
sbb
flds
sbb
mov
mov
ret
push
leave
call
push
mov
push
int
enter
lods
movsl
jo
hlt
cmp
sbb
mov
mov
and
ljmp
testb
dec
sti
mov
or
push
push
lods
mov
pop
jns
cmp
adc
test
and
or
and
ret
inc
out
shll
inc
add
sub
js
jb
ss
push
xchg
fld
cltd
fldt
stos
or
fbld
jne
sar
xlat
mov
cmp
adc
roll
lcall
mov
mov
pushf
adcl
repnz
xor
xchg
fisttpll
cmpsl
cli
mov
aas
test
daa
jb
je
repnz
mov
movsl
push
add
jecxz
leave
push
outsl
in
sbb
push
cmp
sbb
jge
stos
and
mov
and
ljmp
lods
fwait
inc
fsubrs
pop
adc
in
add
push
pop
aaa
in
pop
scas
sbbl
inc
mov
push
sub
or
mov
jae
lret
fwait
jo
and
loopne
test
cmc
fadds
inc
inc
mov
mov
add
push
pop
dec
aaa
ds
addr16
push
xchg
movsl
inc
jno
ja
roll
das
test
and
insb
lock
xchg
shlb
sti
cmp
adc
hlt
mov
xor
fnstsw
in
cld
cmp
ficompl
hlt
out
fidivl
aam
outsl
sub
pop
cli
and
push
mov
or
mov
adc
mov
or
data16
jmp
cld
sub
lea
rorb
inc
push
add
sbb
shll
or
leave
mov
sahf
and
ljmp
dec
rcrl
outsb
pop
inc
test
cmp
sbb
rorb
loop
push
mov
lahf
push
bound
mov
fsubrl
fs
dec
xor
adc
cmpl
dec
subl
and
fstpl
sti
ret
lds
ja
xor
dec
cwtl
lods
iret
int
xchg
adc
test
inc
xor
jbe
cmp
jle
inc
std
je
cld
popf
scas
inc
sub
pop
out
mov
adc
add
into
jne
faddl
je
cltd
inc
sbb
xor
or
rorl
push
adc
sub
rcrl
inc
jnp
lret
pop
mov
mov
hlt
daa
data16
push
adc
dec
xlat
sbb
xchg
mov
pusha
push
shl
movsb
cli
dec
pushf
and
enter
jo
add
pop
mov
lea
nop
jl
add
imul
inc
mov
xor
aam
aam
test
mov
sar
ds
shlb
mov
shll
mov
lods
sbb
in
js
xor
xchg
aas
mov
push
aam
jl
in
lods
mov
cmp
mov
push
jecxz
repz
dec
loop
xchg
dec
arpl
cltd
test
mov
push
cmpl
hlt
clc
rorb
iret
insl
jmp
je
aad
aad
inc
xchg
lahf
push
inc
aaa
outsb
testl
outsb
aaa
es
fsubp
orl
jae
loopne
cmp
mov
jnp
enter
in
cmp
loope
stc
mov
dec
push
inc
iret
jae
mov
push
js
cltd
subl
lods
addb
popf
cmp
mov
mov
fwait
jecxz
imul
test
or
sbbl
lock
inc
mov
pop
push
mov
cs
pop
mov
aaa
dec
mov
lods
sub
adcb
mov
loope
fists
xchg
adc
dec
into
icebp
push
xchg
dec
lret
add
jno
mov
push
push
outsb
jle
pop
lods
dec
out
mov
and
ds
mov
dec
jecxz
or
std
pushf
jbe
mov
mov
push
insb
aad
outsl
inc
push
sbb
dec
add
jmp
insl
inc
jle
cld
and
pop
and
sbbl
and
shlb
pop
mov
in
scas
loop
stos
pop
shlb
mov
leave
addr16
push
js
or
scas
jmp
inc
sbb
lock
rcll
enter
lcall
jle
inc
dec
jbe
hlt
aaa
mov
movsl
loope
push
pop
fs
out
out
cmpsb
mov
jno
outsl
mov
pop
inc
test
test
jge
ds
inc
orb
jecxz
or
mov
push
and
inc
clc
fld
pop
ss
xor
repnz
adc
es
sub
push
iret
xchg
push
xchg
or
movsl
xchg
adc
pop
rcrl
aam
adc
cmp
dec
cmc
mov
scas
ficompl
into
sbb
in
sbb
bound
out
ljmp
or
add
test
jge
in
or
sub
inc
fwait
sbb
mov
cs
imul
insb
mov
push
in
push
mov
nop
sub
lea
hlt
xchg
loopne
push
adc
cmc
repnz
inc
sub
js
rolb
in
pop
cwtl
daa
jmp
in
in
fnstenv
xor
xlat
xchg
mov
lahf
add
xchg
out
inc
push
cmp
mov
ja
mov
jmp
loopne
push
jbe
mov
pop
mov
test
iret
add
sub
jnp
test
mov
pop
mov
xchg
sub
mov
movsl
pop
jle
dec
call
mov
sub
inc
lds
inc
test
test
shll
inc
sub
mov
sbb
cmp
stc
aad
fdivs
pop
fldenv
std
inc
sarb
mov
icebp
adc
dec
or
loop
movsl
push
test
push
pop
dec
mov
xor
pop
dec
stos
inc
add
add
lret
cmc
mov
js
cmp
add
jb
cmp
lret
imul
fidivl
rorb
fists
xchg
jns
inc
adc
sub
jns
cmp
inc
cmp
fidivrs
push
lods
dec
adc
jg
je
lea
mov
push
cwtl
enter
fsubs
fsubrl
scas
adc
push
push
imul
and
cmp
and
les
push
or
xchg
adc
xchg
push
jge
rclb
inc
aaa
jno
inc
aad
sub
mov
aaa
jae
pushf
add
test
je
mov
fmul
popa
in
bound
push
cwtl
pop
push
push
ret
loopne
sub
icebp
and
and
es
pop
icebp
and
in
or
push
popf
adc
mov
sti
arpl
xchg
movsl
stc
repz
js
cli
nop
or
xor
cmp
pop
mov
aam
mov
mov
pop
ja
in
sub
fcmovnu
pop
inc
xchg
or
xchg
popa
aaa
xor
lods
out
pop
mov
aas
dec
fistps
push
and
cmp
dec
insl
out
call
cs
lret
mov
movb
js
leave
rcll
ja
leave
aad
out
loop
fdivr
cltd
mov
mov
fisubl
lahf
gs
push
lret
rol
adc
and
mov
lea
insl
insb
ds
lcall
xlat
fidivl
enter
pop
arpl
mov
cmpsl
test
ret
pushf
cs
shlb
stos
push
jne
popf
lcall
popf
lods
push
dec
in
scas
and
gs
or
sub
shll
or
scas
push
xchg
lret
bound
jle
test
outsb
mov
push
ja
mov
mov
jnp
cmp
dec
mov
popa
out
popa
cmpsl
stos
notb
pop
jg
xor
lods
or
inc
test
adc
repz
jo
cmp
mov
aad
andl
shll
cmc
pop
out
lea
or
outsl
mov
out
add
push
fisubrs
popf
fisubs
pushf
fldcw
jne
mov
lock
fistps
sub
fwait
push
adc
cmpsl
cmp
jo
leave
push
hlt
cmp
es
sub
cld
subb
and
sub
adc
mov
je
enter
push
insb
mov
dec
aas
sahf
cmp
or
pop
add
int3
xchg
dec
gs
adc
add
dec
scas
mov
sbb
adc
hlt
dec
insl
shrb
mov
xor
sbbl
sub
into
mov
cli
mov
cmp
jnp
test
into
pushl
incl
test
mov
and
ret
mov
or
xchg
insb
sub
popa
jae
jmp
div
mov
fcompl
negb
nop
jo
divb
jle
imul
cli
in
iret
jns
lret
pop
fcoml
repnz
fnstcw
pop
jne
stos
jno
adc
sub
inc
dec
scas
sbb
negb
push
es
ja
jg
into
lock
scas
mov
mov
or
mov
jb
mov
lahf
daa
cwtl
rcrb
adc
rcrb
sahf
sbb
lret
mov
out
sbb
outsb
ficompl
inc
cwtl
inc
lods
in
xchg
jle
mov
add
fstp
sarb
dec
into
lock
and
pop
aaa
lods
lods
cmpsl
dec
or
pop
pop
popa
xor
stc
roll
fcompl
inc
test
cs
mov
dec
dec
add
cmp
sub
es
adc
stos
mov
cmp
push
xchg
sub
inc
pop
and
xchg
mov
lcall
jge
sbb
sub
pop
jl
fsts
lret
shrl
popa
sahf
hlt
or
test
mov
sti
repz
sbb
mov
mov
mov
xor
mov
xor
lahf
shl
rorl
xor
enter
loop
push
push
mov
pop
dec
dec
js
stos
std
jp
mov
mov
mov
jae
sbb
jbe
sub
subb
ds
loopne
push
pop
jge
stos
and
ror
addl
jp
add
lea
inc
push
pop
mov
mov
mov
mov
sbb
adc
xchg
mov
mov
pop
push
aam
repz
or
test
push
fsts
mov
push
mov
jno
cwtl
jmp
cmp
movsl
dec
cmp
shl
and
push
or
push
xlat
dec
cs
mov
pop
aaa
dec
sub
jp
inc
out
mov
xchg
sbbl
insb
jecxz
in
adc
push
les
inc
dec
lcall
mov
xchg
out
hlt
scas
aad
mov
pop
adc
cmp
jg
sbb
mov
cmp
push
clc
adc
js
ja
jno
push
xchg
dec
es
jbe
pop
jae
jmp
lahf
jl
mov
ret
push
dec
mov
fwait
mov
lahf
fstpt
and
dec
xchg
fcomp
jnp
rcll
cld
sbb
cs
xor
scas
scas
add
fs
xor
or
push
insl
aam
fcomp
jns
mov
add
fstpl
daa
das
or
xchg
pushf
lahf
cmp
mov
imull
mov
pushf
mov
aaa
or
outsb
shlb
jle
sub
mov
les
mov
arpl
das
xlat
int3
jns
xchg
insl
push
inc
mov
mov
add
dec
shr
mov
mov
jmp
daa
dec
or
cmp
in
pop
xchg
mov
ja
xor
xorl
loopne
movsl
cli
adc
sbb
or
sub
jnp
cli
imul
fwait
push
fwait
and
adc
jge
jns
xor
push
push
jge
dec
cmp
mov
mov
out
loope
mov
push
mov
xchg
in
dec
les
mov
xor
push
dec
out
xchg
xchg
lahf
mov
add
repnz
jno
xlat
adc
pusha
inc
xchg
jae
add
lret
mov
testl
rorl
inc
out
inc
sub
bound
jle
inc
sbb
sbb
inc
pusha
jns
andb
xchg
sti
enter
mov
cmpsl
mov
out
and
fs
sti
jne
cmc
push
add
sbb
add
lcall
cmp
xor
mov
or
push
ret
cltd
ljmp
mov
notb
test
in
aas
cs
xor
push
rcrb
jle
test
shl
xor
fwait
pushf
fidivrs
mov
sub
push
jb
je
ja
lahf
ret
xchg
inc
decl
sbb
int
les
sub
cmp
stos
dec
pop
jmp
cmc
mov
push
ret
pop
mov
sub
mov
pushf
rcr
stos
stos
jmp
sti
mov
inc
into
mov
mov
sbb
lds
adc
mov
xchg
jl
or
arpl
mov
rorb
fwait
inc
jnp
not
push
outsl
dec
je
lea
int
jne
mov
lcall
hlt
clc
or
xor
popa
ret
adc
jge
pop
add
test
push
xchg
outsl
dec
sbb
cmp
bound
aam
sbb
pop
daa
int3
inc
in
notb
xor
je
ss
sbb
shrb
in
addr16
push
ret
pop
sub
scas
pop
pop
outsb
leave
sarb
sub
cld
sbb
cli
xchg
setno
fs
xchg
pop
mov
or
inc
clc
xchg
cmpsb
lret
icebp
mov
shr
jno
cmp
xor
sbb
mov
arpl
jno
fists
insb
adc
fwait
stos
rcrb
mov
nop
pusha
dec
sub
sbbl
or
fadds
xor
dec
loop
in
add
leave
sub
out
adcb
jge
adc
nop
loopne
push
jmp
ficomps
test
inc
addr16
dec
sbb
lock
test
ret
xor
push
xchg
mov
xor
pop
sub
aad
and
mov
ffree
repz
les
in
xor
inc
dec
loopne
dec
sbb
or
sti
push
mov
pop
mov
sbb
cmp
sbb
ret
leave
push
iret
outsl
mov
rclb
add
shlb
aas
or
stc
jl
mov
int
push
mov
aaa
decb
ficoms
sub
popa
cmp
mov
inc
das
jl
frstor
js
push
jns
dec
xlat
pop
rclb
cmp
rorl
pushf
enter
loopne
int3
std
xchg
sbb
sar
outsb
sub
mov
lock
push
sbbl
and
loop
push
inc
rcrl
xchg
int
and
push
sti
icebp
imulb
lret
dec
dec
int3
cli
mov
shr
sbb
int
mov
dec
insl
push
arpl
jne
mov
xor
pop
jne
and
out
roll
das
fcompl
in
loop
mov
sub
jp
sbb
push
pop
daa
push
and
jo
ss
add
insl
jmp
icebp
loope
mov
sub
frstor
jg
rorl
inc
sbb
mov
je
xchg
scas
lods
push
ffreep
sarl
mov
jmp
aas
xchg
sub
movsl
dec
pop
xor
lret
scas
iret
sbb
mov
jle
mov
sub
xchg
mov
push
imul
push
sub
loop
pushf
jno
jb
xor
outsb
push
and
sbbl
aad
jne
call
es
add
aad
and
push
stos
dec
jbe
mov
ja
movl
cld
sub
sub
cld
clc
in
scas
loope
jo
fsubrs
nop
pop
pop
pop
rol
xor
add
mov
fmuls
dec
cmp
div
xchg
pusha
arpl
cmp
jecxz
sbb
mov
jo
or
cmp
adc
aas
jno
daa
movsb
fidivl
cwtl
adc
aam
adc
outsb
mov
mov
push
cmc
pushf
xchg
and
testl
xor
iret
mov
stc
loopne
inc
and
dec
clc
sbb
jp
dec
jl
or
aam
xchg
dec
mov
stc
push
aam
mov
popa
xchg
hlt
lahf
add
cltd
scas
dec
sub
pop
bound
and
int
enter
mov
adc
gs
or
adc
stos
and
sub
cli
test
in
sub
in
or
sub
data16
push
push
sub
or
sub
int3
idivb
cmp
sub
or
shll
lcall
sbb
or
xchg
test
or
fwait
lock
xor
test
ret
push
add
or
or
cmp
xchg
and
xor
fistps
scas
pop
fsubrs
or
inc
shrl
jl
sub
test
mov
inc
add
mov
movl
cmp
fisttpl
mov
mov
shll
inc
xlat
sbb
sub
or
push
add
jbe
and
xor
dec
loopne
and
pop
jae
sbb
or
ret
call
mov
lret
adc
orb
arpl
mov
push
aad
or
int3
sbb
mov
sahf
adc
addr16
mov
cmpsl
mov
andb
loop
sub
outsb
rcr
fstl
fisubrl
jle
jle
in
in
or
sbb
push
xchg
shrb
inc
dec
pop
pop
adc
lock
fwait
in
mov
sbb
ja
arpl
and
cmp
movsb
pop
push
pop
leave
push
incb
bound
movsl
test
and
dec
sbb
pop
insb
out
sbb
and
daa
cwtl
dec
js
add
and
add
pusha
inc
clc
mov
xorb
setge
nop
lds
jo
adc
jl
xchg
jle
dec
dec
mov
cmp
pop
testb
popa
pusha
cmp
bound
or
push
daa
dec
in
xor
dec
sbb
jo
fdivrl
xchg
sub
mov
scas
pop
mov
outsb
stos
and
mov
dec
outsl
out
cs
pop
jnp
loope
std
cmc
rorl
jae
jnp
mov
rolb
or
in
or
aam
aad
in
and
cmp
dec
xor
fwait
cmp
pushf
cmc
jb
adc
je
pop
arpl
add
dec
in
jle
inc
jno
mov
leave
cmp
mov
mov
scas
jge
jl
idivl
out
push
xchg
repnz
int
aad
mov
mov
mov
iret
adc
iret
in
inc
dec
jmp
add
popa
jne
cwtl
pop
scas
outsl
repnz
ret
inc
adc
dec
aam
lods
clc
inc
jae
push
adc
js
ljmp
js
popa
hlt
adc
int
stos
dec
rcll
jbe
adc
jns
pop
sbb
and
movsl
adc
mov
adc
test
enter
test
push
push
cmpsb
xchg
or
movsb
mov
sbb
popa
xlat
sbb
mov
incl
add
fldt
xor
push
mov
insb
mov
pop
push
icebp
int
ret
cmp
pop
out
sub
jmp
pushf
test
jb
lods
cmp
mov
adc
sbb
dec
roll
sub
loopne
mov
xor
sbb
push
mov
cmp
lock
repnz
push
cmpb
shlb
pop
push
xchg
test
sub
mov
inc
mov
test
hlt
clc
push
pop
and
inc
jae
sti
cmp
stos
jmp
jl
jne
outsl
in
fistps
lds
sub
lods
loopne
int
enter
pop
test
lds
fwait
mov
jmp
fcompl
push
or
add
fmull
pop
add
jnp
pusha
xorb
jo
mov
xor
sahf
push
push
mov
insb
adc
push
test
arpl
and
xchg
lret
lahf
and
outsl
add
pop
ja
jbe
sti
add
jno
lahf
xchg
jbe
or
adc
ret
out
pop
sti
jmp
iret
jno
xor
rclb
inc
xor
jp
xchg
in
pop
add
sub
shrb
cmp
push
shlb
sbb
gs
cmp
les
dec
scas
lea
aas
scas
jle
lods
negw
inc
or
push
jle
int3
movsl
push
xchg
inc
xorb
pop
filds
jmp
hlt
aas
std
mov
iret
mov
in
sbb
cld
jno
mov
mov
mov
pushf
iret
add
xlat
push
hlt
and
pop
ljmp
out
sahf
mov
push
out
lret
mov
jecxz
xor
int3
mov
mov
or
push
jo
pushf
jecxz
fistl
push
lods
popa
les
jo
jb
or
ret
test
jne
inc
mov
or
cmp
mov
and
sbb
dec
lods
bound
sbb
dec
fldl2t
jmp
dec
sbb
add
mov
fldl
jg
in
xchg
or
loope
push
cmp
bound
mov
cltd
ss
mov
out
mov
ret
fldt
sarl
mov
lahf
pop
test
jl
xchg
negl
sbb
imul
or
push
jno
pop
outsb
push
popf
sub
idiv
mov
push
orl
repz
hlt
xor
std
loope
jbe
xor
insb
mov
outsl
subb
push
call
cmpsl
cmp
aad
jne
int
xchg
mov
test
in
std
dec
pop
and
adc
xchg
add
fsubrp
cmpsb
rorl
movsb
adc
pslld
jae
wrmsr
push
and
sbb
inc
and
push
mov
adc
xchg
mov
pmovmskb
adc
cmp
cmp
xchg
jmp
lret
mov
shll
movsl
sub
fcmove
cld
in
dec
lock
or
push
aas
je
mov
out
sarb
mov
inc
jl
xor
inc
push
push
xchg
cmp
sub
jbe
repz
xlat
int3
mov
pop
mov
and
fdivs
hlt
sbb
hlt
lock
lds
sbbl
nop
lds
jb
in
imul
cmc
je
mov
test
repz
inc
push
in
push
loopne
dec
sub
insb
pop
or
mov
lods
cs
push
test
push
outsl
decl
pop
cmp
loopne
call
add
inc
cli
add
jl
and
aas
je
cmp
sbb
movsl
mov
mov
inc
jb
fmull
pop
mov
in
jle
jg
sti
push
test
sbb
enter
out
notl
scas
xlat
cmpsb
mov
ss
inc
nop
lock
jmp
movsl
mov
pop
loope
pop
sub
popa
popa
lcall
add
xor
push
rcr
xor
fisttpl
or
lods
xchg
sbb
shl
xor
aas
inc
sbbb
in
cmpb
outsl
pop
sbb
icebp
rorl
mov
jg
sbb
test
sub
fiadds
sbb
adc
inc
or
stos
mov
jnp
xchg
bound
in
adcb
cmp
cli
lods
int3
pop
int
incb
pop
and
movsb
lret
cwtl
jmp
inc
push
sub
stos
fs
pop
aad
jae
push
aas
test
lock
fsubrl
rcll
in
hlt
sub
cltd
cmp
sbb
jnp
imul
lret
xchg
pop
stos
cmpsb
sbb
xchg
push
push
fnsave
call
js
in
cmp
and
rcl
dec
adc
push
xchg
or
adc
insl
push
push
js
jbe
imul
in
es
lds
mov
add
jbe
and
rol
pop
cmp
sbb
pop
mov
repz
jl
or
fisubrs
push
sbb
mov
pop
sbbb
push
sbb
lods
cwtl
mov
cmp
mov
lds
xor
int3
cltd
xor
jae
jne
nop
dec
stc
pushf
loope
add
lea
jp
mov
jne
dec
popa
pushl
push
pop
push
xchg
test
dec
cld
mov
imul
int
inc
in
aaa
dec
jno
int3
push
jmp
loopne
add
loope
inc
shr
popf
int3
neg
movsl
xchg
into
dec
lods
dec
sub
cmp
add
les
fiadds
dec
pop
nop
dec
add
les
push
jge
stos
gs
push
andl
and
fimull
cmpsb
sub
ret
jb
mov
mov
push
mov
push
aaa
mov
jbe
sbb
pop
aas
push
daa
xchg
mov
cwtl
xchg
or
fistpll
mov
add
add
iret
cltd
and
ja
enter
js
mov
add
mov
add
pop
stos
sub
mov
addr16
ja
inc
inc
mov
insb
andb
jb
hlt
cltd
adc
aas
fdivr
pop
cmc
jmp
push
insb
enter
loope
lret
add
outsl
jne
dec
mov
pop
gs
xchg
pushw
inc
lcall
pop
mov
test
mov
pop
xor
hlt
daa
popa
add
loope
test
cmc
xchg
mov
xchg
call
xchg
jp
cwtl
ret
jns
cld
jp
pop
inc
push
mov
mov
push
sbb
ret
mov
mov
mov
hlt
lret
xor
cmp
fs
popa
and
mov
sti
inc
adc
mov
push
xchg
jecxz
push
ret
dec
xor
rcll
movl
sbb
jmp
cmpsl
je
std
inc
nop
cld
inc
test
sub
sbb
js
test
pushf
adcl
adc
rcll
popf
insl
xor
xchg
lock
push
add
inc
pop
or
jp
aad
push
js
mov
inc
mov
xchg
mov
mov
jle
aas
outsl
sbb
sub
jbe
dec
cmp
add
xchg
je
mov
repnz
pop
mov
jo
test
cmpsb
ficoml
push
or
data16
repz
sbb
std
xchg
in
outsb
add
and
push
inc
mov
bound
les
std
dec
jge
sub
in
stos
inc
adc
mov
rolb
mov
insl
in
sbb
mov
push
adc
jae
mov
int3
incb
mov
das
push
ja
call
mov
rorl
lock
xchg
mov
pusha
dec
repnz
mov
clc
loop
test
mov
jp
sbb
sbb
or
ss
inc
call
add
dec
cltd
pop
shll
and
sub
daa
cmpsb
add
push
lcall
pop
repz
dec
aad
and
cli
sub
jle
mov
push
adc
jnp
scas
out
lret
adc
add
jmp
adc
sbbb
leave
lods
mov
xor
pop
int
clc
lock
cmp
jno
mov
scas
inc
cmp
inc
dec
mov
orl
das
adc
xchg
das
repz
mov
je
cmp
lods
xor
add
jbe
test
mov
aaa
aam
sub
push
in
out
mul
repnz
mov
aas
pop
mov
imul
movsl
add
repz
divb
adc
dec
lods
adc
cmp
or
push
sbb
push
xor
adc
mov
lods
inc
dec
lock
mov
sbb
mov
orb
fsubrl
inc
push
dec
mov
lock
data16
jmp
dec
mov
jge
clc
mov
lcall
push
int
mov
xchg
cltd
adc
pop
outsb
fst
xor
inc
cwtl
mov
outsl
fstpt
dec
jmp
ret
lret
and
mov
jp
mov
inc
stos
mov
aaa
xor
sbb
xchg
mov
imul
adc
or
jns
xor
mov
or
adc
push
mov
jmp
pop
mov
jecxz
gs
jo
cmc
sbb
push
xchg
xor
rolb
add
ret
stos
mov
stc
jmp
out
mov
icebp
stos
popa
xlat
mov
xlat
add
cmpsl
or
or
push
outsl
sbb
xor
out
adc
push
xchg
sub
ja
loope
fistpl
cld
sbb
std
lds
fs
or
popl
sbbb
cltd
loop
mov
and
aas
loop
ds
shlb
sbb
lea
xor
dec
das
jmp
sub
std
xchg
pop
dec
cmpb
adc
dec
stos
mov
dec
pop
add
arpl
pop
xchg
leave
leave
adc
insl
xchg
test
push
mov
add
or
shr
int
fcompl
jle
ret
pusha
sbb
sbb
rorb
movsb
or
xchg
push
addr16
mov
mov
arpl
stc
sbb
lcall
fs
jno
test
fucomp
lods
arpl
sbb
mov
pusha
jne
in
into
dec
xor
mov
pusha
mov
pop
inc
pop
lret
lret
adc
xlat
pop
mov
rolb
scas
pop
enter
stos
xchg
dec
rolb
in
mov
outsb
data16
inc
subb
xchg
stos
xor
addr16
add
lcall
or
jl
inc
aas
dec
mov
stc
sbb
push
dec
pop
push
sub
testl
stc
sbb
and
lods
pop
fwait
jne
int
push
cwtl
imul
mov
js
xor
pop
mov
xchg
cmp
cmpsb
add
dec
mov
dec
std
imul
imul
cmp
mov
sub
cwtl
xlat
lods
enter
lds
sbb
stos
adc
and
mov
iret
jle
dec
xor
pop
cli
leave
lahf
sti
mov
pop
lret
lods
xchg
cmpsb
jecxz
inc
int3
mov
adc
mov
and
push
push
cmp
jmp
fildll
push
nop
movntps
adc
int3
adc
dec
xor
pushf
outsb
jmp
mov
loopne
mov
outsl
jge
bound
jecxz
dec
dec
adc
pop
sub
lds
aad
jae
pushf
shlb
aad
sti
jne
push
fildll
or
cmp
jae
jle
or
jae
cld
ds
and
xchg
mov
sub
movsb
mov
pop
or
sbb
lods
push
out
mov
add
inc
out
mov
ret
fidivrl
inc
xorl
inc
cmp
and
jno
fistps
idivb
cmp
xor
les
mov
and
xchg
cmpsl
cmpsb
ffree
cs
mov
repz
js
jbe
cmpsb
xchg
aad
jg
je
shlb
push
pop
dec
orl
stos
xchg
sarb
fdivs
cli
inc
and
xchg
fmull
inc
xor
les
sub
jns
xor
mov
mov
jbe
test
jno
cmp
pop
mov
mov
add
sbb
cmp
inc
inc
adc
movsl
pop
jmp
xlat
jmp
sarl
das
xor
jb
pop
aaa
sahf
mov
cmp
push
data16
dec
out
fs
cli
mov
loopne
jmp
jnp
mov
ss
jnp
cmpsb
add
cmp
dec
inc
sbb
pushl
call
adc
pop
cmp
lds
insl
sti
push
or
stc
cmp
sub
imul
lcall
pop
fld
add
sbb
test
xchg
scas
sahf
xchg
fs
mov
adc
jb
stos
mov
negb
cwtl
mov
mov
call
dec
push
icebp
sub
mov
std
inc
divl
stos
aam
mov
pop
rorb
std
cs
loop
push
or
test
adc
jge
imul
sub
mov
aam
jmp
stc
fcomip
es
or
cmp
mov
jl
mov
cwtl
and
cmpb
dec
ljmp
add
pusha
rcrl
inc
mov
shlb
sti
dec
bound
jbe
or
pop
popa
sbb
mov
stos
jle
mov
xor
cmpsl
aaa
or
inc
inc
je
mov
inc
cmpsb
ss
lods
out
test
xchg
cmpsl
into
loopne
sbb
cmp
lret
jl
into
repz
sub
dec
dec
stc
aaa
movl
sub
adc
and
test
fsubrs
std
mov
and
je
mov
mov
mov
mov
mov
xor
pushf
testb
test
lods
les
xor
or
in
mov
mov
push
lea
xchg
shll
adc
jle
insb
mov
int3
aad
mov
js
out
lcall
xor
jno
push
mov
daa
sbb
pop
mov
and
sbb
loope
aad
jg
pop
push
mov
loope
ret
lock
movsl
sub
out
pop
fcomps
and
loope
enter
cli
xchg
int3
dec
jg
imul
insl
fdivp
jg
sysenter
outsb
push
mov
in
cmp
push
inc
ret
or
inc
stos
sarb
les
lcall
mov
in
gs
or
test
dec
mov
jns
pusha
push
into
addl
jp
das
sbb
incb
fiadds
lret
in
adc
and
in
inc
divb
jns
jns
cmp
adc
aad
cmp
shrl
or
mov
movl
insb
pop
or
dec
push
clc
jg
jl
fwait
lret
jb
jecxz
xor
ljmp
cmp
stc
mov
sub
pushf
pop
enter
lock
or
push
lods
xor
in
sbb
and
sbb
test
mov
scas
sub
lcall
call
test
jp
cmp
test
xchg
or
dec
sbb
jbe
pop
xor
mov
push
jno
pushf
adc
pop
scas
jg
cmc
lea
daa
cmpl
pop
xchg
and
leave
mov
daa
repz
mov
mov
shlb
dec
cli
divb
dec
sahf
test
je
idivl
push
jle
inc
icebp
jb
mov
dec
stos
push
push
clc
lods
das
xchg
sbb
or
xchg
out
mov
in
enter
pusha
xchg
ret
leave
lea
mov
lcall
jge
xchg
pushf
push
rcrl
idivl
add
ja
jecxz
mov
stos
or
jmp
pop
pop
popf
jg
mov
push
inc
mov
and
fucom
lods
iret
pop
xor
jmp
xchg
call
into
dec
and
adc
lods
push
pop
aam
into
test
lds
mov
adc
lret
pop
call
dec
cmp
rolb
xor
mov
movsb
mov
pop
popf
cmp
adc
int
movsb
push
stos
icebp
add
lahf
mov
je
or
push
or
shr
pushf
fwait
or
repz
sarb
xlat
clc
orl
loopne
mov
clc
xchg
inc
push
aaa
hlt
mov
inc
dec
int
les
jge
out
iret
imul
sarl
inc
xchg
lods
or
cmp
sub
jp
fldenv
adc
inc
pop
cmc
fsubs
dec
xchg
rol
xchg
add
out
mov
jmp
lock
cmp
xchg
xchg
in
pop
aas
in
push
mov
mov
pop
mov
sbb
xchg
push
mov
add
and
loope
push
fiadds
push
mov
xor
cmpsl
xlat
icebp
push
ds
xor
mov
sbb
xor
hlt
imul
testl
movsl
outsb
cmpsl
mov
das
mov
aaa
mov
ret
sbb
xor
sub
das
cmp
jle
fmul
adc
es
insb
daa
mov
pop
in
and
xchg
nop
fnstcw
inc
cmc
lahf
lret
and
popf
cmpl
push
pop
jp
loop
int3
xchg
mov
loope
call
cmpb
or
push
int
cld
mov
push
cli
std
sbb
mov
decb
repz
hlt
dec
xchg
nop
mov
sbb
sbb
pop
add
adc
dec
mov
jge
insl
loopne
xchg
adc
pop
cmp
push
xchg
adc
aaa
inc
ficoms
les
movsb
mov
cmp
adcl
xor
jne
jno
fsubr
cld
icebp
dec
jmp
push
pop
les
push
icebp
test
data16
add
orb
loop
in
push
pop
add
xchg
test
lret
mov
add
in
xor
adc
call
scas
repnz
fwait
mov
ja
dec
rclb
dec
icebp
mov
and
xchg
shll
push
gs
ljmp
dec
push
or
stos
hlt
dec
mov
xor
jb
sahf
jno
lock
mov
push
sub
jb
lock
fsubrl
mov
gs
fisttpll
cmp
jns
out
or
std
or
mov
inc
xor
int3
ficomps
fs
add
push
jle
mov
inc
lods
and
adc
jno
jno
jg
mov
and
dec
sti
test
push
mov
popl
push
popf
test
mov
rolb
stos
in
jo
mov
mov
xor
sarl
mov
sbb
adc
popf
lret
lods
adc
cmpsb
sbb
or
arpl
mov
out
addl
dec
xchg
push
xchg
pop
das
pop
popf
cmp
aaa
aad
movsb
mov
test
sbb
inc
xchg
jne
or
or
cmp
sbb
call
dec
sub
xor
sub
and
add
sbb
hlt
fnsave
push
and
pop
dec
xchg
adc
aas
mov
mov
adc
mov
hlt
jl
mov
icebp
cmp
pop
outsl
jbe
mov
mov
out
cmpsb
mov
push
push
test
cmc
rclb
adc
popl
dec
cmc
sbbb
sub
lcall
sbb
add
mov
in
sti
mov
xor
rol
dec
enter
pop
push
imul
leave
jbe
scas
mov
ret
xchg
mov
xor
mov
xchg
dec
arpl
inc
outsb
lret
stc
pop
mov
mov
test
scas
fs
movsb
mov
mov
movsb
pop
cmpsb
mov
or
test
fbld
cli
pushf
int
sub
sbb
in
test
in
pop
or
nop
push
subl
movsb
imul
push
cmpsb
in
jg
loope
add
not
shlb
xchg
sbb
std
outsl
cli
cmp
call
mov
sahf
mov
movsb
test
dec
xchg
adcl
arpl
sub
stos
lret
mov
iret
imul
pop
in
cmpsl
cs
or
mov
test
fnstenv
cmpsb
cmc
mov
test
push
test
scas
push
and
fs
dec
adc
aam
push
dec
jno
fidivrl
pop
push
pop
pop
data16
xor
and
repz
out
pop
cmp
xor
mov
mov
dec
call
xlat
lahf
pushf
adc
push
dec
sbb
xchg
lret
imul
xor
mov
jbe
jno
sahf
popf
cmpsl
js
xor
stc
or
mov
mov
in
aaa
sbb
mov
adc
jg
mov
icebp
mov
dec
sub
ret
pushf
mov
bswap
inc
loopne
lock
adc
daa
mov
outsb
fsub
nop
jno
dec
jns
mov
test
aad
mov
jnp
cwtl
add
push
sti
mov
or
bnd
jb
xlat
test
inc
lret
push
or
sub
adc
or
fwait
ficomps
jecxz
add
cmovp
or
inc
sub
push
daa
mov
call
push
inc
dec
mov
test
add
xor
add
push
pop
fnsave
cmp
aad
sub
inc
pop
or
inc
jbe
or
outsl
mov
bound
or
mov
jae
pop
sub
test
and
or
insl
andl
xor
dec
and
dec
inc
lahf
mov
sar
or
repnz
mov
push
mov
cmp
and
or
std
push
in
mov
pushf
shlb
ret
stos
or
mov
xchg
push
or
pop
nop
js
incl
imul
cmp
repnz
mov
push
mov
cmpsb
or
enter
adcb
mov
cltd
mov
cmp
jg
jnp
inc
xchg
xchg
das
test
stos
aad
and
jo
loopne
mov
addr16
jbe
out
push
xchg
cmpsb
push
mov
xchg
push
xlat
mov
jmp
stos
xchg
push
jns
inc
pusha
xchg
jns
cwtl
push
cld
out
jb
sub
ret
jno
pop
inc
mov
arpl
xor
in
jl
stc
jb
inc
cmc
imul
stc
rcll
gs
xor
xor
dec
push
stc
or
pop
popa
int
aas
inc
adc
mov
push
push
xor
add
adc
xchg
lea
enter
jae
ljmp
inc
jnp
jb
mov
sub
in
aam
mov
jmp
scas
dec
aam
jne
cmp
mov
xor
cmp
stos
xor
add
mov
imul
mov
mov
hlt
jb
arpl
fmull
andb
xchg
cmp
in
adc
arpl
aam
rcrb
cs
lret
lahf
in
enter
das
imul
test
stos
iret
rcrl
cmpsb
fdecstp
insb
dec
cmpsb
lcall
xor
adc
repnz
aad
mov
cmpsb
mov
cmp
pop
pop
lret
hlt
mov
inc
sbb
add
jne
lock
jmp
mov
daa
xor
int
adc
dec
inc
cmc
out
roll
mov
fbld
movups
pop
fisubrs
jnp
test
add
out
enter
ret
and
nop
outsb
mov
clc
pop
imul
sub
dec
mov
mov
adc
stc
lods
and
add
jl
repz
jne
movsb
and
test
xchg
aad
jae
inc
jle
fs
jns
and
cld
adc
dec
lret
mov
adcl
push
das
fidivl
pop
pop
addr16
es
push
testl
pop
stc
repz
aaa
dec
jno
sub
hlt
mov
sbb
out
and
fimuls
sbb
outsl
adcb
mov
dec
push
shrb
das
popa
and
gs
inc
push
mov
push
and
out
xor
fdivrl
xor
in
cmpsb
xlat
pop
pop
icebp
xor
push
int3
pop
std
ret
pop
sub
dec
add
cmp
shlb
push
ja
adc
dec
xchg
gs
es
cmp
std
lods
push
divb
jecxz
pop
iret
movsb
and
lock
inc
or
push
in
push
cmp
sbb
out
cli
inc
push
add
jp
testb
add
mov
jnp
test
insb
fcmovnb
jmp
out
sti
cmp
sub
xor
lods
dec
test
daa
dec
lock
lods
mulb
dec
nop
stc
pop
sub
add
out
jmp
aaa
mov
adc
inc
mov
bound
mov
cmp
fidivrs
pop
pop
mov
addr16
lret
pop
or
xor
lds
xchg
push
inc
pop
jnp
pop
jo
sub
jb
and
test
jl
xor
shr
dec
dec
sti
mov
dec
sub
mov
int
je
jbe
cld
adc
xlat
cmpl
rorb
insb
loopne
andb
subl
inc
std
xchg
loop
pop
in
jb
jmp
lcall
sbb
pop
aaa
jle
sti
or
pop
lods
mov
pop
and
push
out
daa
jp
mov
or
popf
add
jle
pop
sub
arpl
aaa
inc
scas
jns
neg
or
aaa
out
daa
dec
xorl
cmc
sub
xchg
pop
fsts
or
mov
insl
jo
mov
ret
jle
pop
insb
sbb
out
push
std
adc
negb
insb
fwait
shlb
shlb
repz
jg
jne
mov
in
test
adc
sbb
out
pushf
sbb
push
data16
lea
xchg
mov
pusha
push
and
push
inc
int
xchg
mov
insl
cmpl
xchg
ret
xor
push
pop
xor
in
xchg
fiaddl
mov
int3
daa
xchg
xor
jo
mov
repnz
push
outsb
arpl
in
lea
mov
sub
mov
pop
in
cmpsb
inc
mov
jmp
popa
stc
xchg
jle
pop
imul
jbe
pop
adc
sarb
loop
cmc
call
add
xchg
xchg
gs
mov
add
sti
mov
scas
adc
jmp
jg
jl
outsb
inc
popf
dec
mov
mov
adc
dec
add
fucom
lahf
xor
jns
psraw
xor
mov
mov
ljmp
sub
in
cmp
dec
cmpsb
mov
pop
lret
sub
sub
jno
dec
pop
inc
incb
mov
repnz
lods
pop
orl
sbb
jle
xchg
dec
enter
and
sub
inc
jmp
test
shll
cmp
cltd
out
sbb
stos
dec
mov
in
clc
or
mov
add
cmp
popa
sub
sbb
xor
xor
push
xor
sbb
pop
in
repz
mov
and
mov
gs
rcrl
mov
movlps
mov
xor
into
pop
and
inc
mov
fistps
inc
fisttpll
subps
js
movsb
add
xchg
dec
mov
insb
push
inc
enter
fwait
add
pop
ljmp
xor
dec
jl
or
push
loopne
mov
mov
in
inc
push
mov
mov
push
push
mov
dec
pop
mov
and
xor
mov
cwtl
sub
xlat
fstps
iret
mov
jle
xchg
dec
lds
repz
or
push
aaa
mov
pop
iret
scas
daa
add
push
xchg
push
mov
lea
loop
in
cs
jmp
pop
lock
mov
mov
jmp
pop
dec
xor
js
push
mov
adc
jbe
mov
daa
xchg
dec
lea
cmp
loop
adc
mov
les
push
cli
sub
add
mov
mov
and
popa
mov
outsb
int3
adc
pop
dec
icebp
mov
out
pslld
mov
cmp
bound
xchg
add
xchg
leave
psubusw
add
mov
shlb
insl
sarl
fisubs
sub
jp
mov
repnz
fbstp
and
sub
loop
dec
push
lods
push
jp
pop
insb
adc
std
pop
xchg
int
data16
cmp
scas
mov
sarb
jb
icebp
pop
mov
dec
or
imul
imul
mov
mov
xlat
popa
cld
aas
dec
mov
scas
popa
pop
stos
sarl
cmp
xorb
stos
pop
mov
aas
inc
pushf
pop
mov
test
pop
push
imul
lahf
pop
fs
testb
lcall
rcrb
pop
mov
fcompl
cld
fwait
jle
pop
out
sbb
pushf
ficompl
mov
xor
mov
shlb
xchg
cmp
cmp
jecxz
ljmp
xchg
pop
push
aas
dec
inc
inc
imul
adc
lret
lret
out
add
sbb
ja
nop
and
je
adcl
inc
dec
jne
ja
jl
add
in
xor
les
cmp
loop
data16
pop
loop
cmp
nop
ljmp
mov
repnz
lret
stos
sub
inc
mov
lds
int
pop
movsl
xor
cmp
push
rol
or
adc
loop
jbe
xor
sub
cmc
inc
push
inc
pop
out
shr
test
std
sti
fdiv
fldcw
xchg
stc
mov
loop
cli
test
mov
jnp
je
jle
sbb
leave
and
mov
imul
or
xchg
dec
xchg
pop
shrl
roll
mov
mov
hlt
ds
iret
push
imull
in
jae
je
dec
mov
pop
push
and
push
out
fldt
or
test
hlt
aad
pop
jae
inc
cli
push
std
mov
add
sahf
jmp
ds
sti
out
cmp
sti
cmc
data16
stos
mov
fistl
hlt
pop
sar
imul
loope
lahf
cli
mov
xor
dec
and
adc
sbb
lahf
push
fcompl
push
lahf
pop
in
jae
test
iret
xchg
xchg
jne
gs
into
push
mov
adc
adc
xorb
dec
jb
gs
inc
fnstenv
mov
shl
sbb
dec
imul
or
in
lods
das
xor
mov
inc
mov
jne
in
rcr
sub
into
rcl
lock
ficoml
pop
pop
or
mov
hlt
push
pop
xchg
ljmp
in
inc
xchg
je
stos
xor
pop
push
pop
test
lea
jb
testl
jecxz
inc
cmp
push
sarb
lret
pop
sahf
dec
pop
rol
xor
push
cmp
dec
push
cltd
sarb
in
xchg
rcrb
out
int3
popa
cmp
ret
and
xchg
test
repnz
and
push
outsl
bound
jae
jne
or
leave
scas
mov
or
test
xor
andb
sub
loop
and
xor
add
hlt
mov
aaa
mov
jge
inc
jne
std
dec
xlat
adc
fsubr
lcall
fadds
mov
and
cs
xor
lock
daa
and
mov
inc
div
mov
sbb
movsb
pop
orb
ss
shl
imul
inc
cmp
lret
pop
lcall
mov
pop
inc
sbb
int3
lock
insl
out
add
repz
add
test
cmc
jae
cld
mov
js
push
int3
jo
xor
loopne
ss
orl
das
out
mov
mov
jo
pop
xor
pop
loope
lret
stos
lods
push
arpl
ret
popa
ror
dec
out
test
jp
jle
lea
sbb
imulb
imul
add
or
or
in
out
inc
cmp
movsb
mov
inc
ret
push
sbb
loope
pop
negl
mov
fidivrl
inc
push
loop
jo
loopne
fisttpl
jmp
xchg
cltd
add
ja
sub
imul
popf
aas
icebp
out
and
fistpl
pop
jbe
and
mov
xlat
sub
push
and
loopne
xor
psllq
fadds
push
hlt
and
gs
xchg
gs
inc
fcom
std
das
lahf
sbb
andb
in
pop
hlt
jns
pushf
push
sti
repnz
lahf
jge
out
sahf
add
mov
mull
and
xchg
jp
xchg
call
mov
add
lea
jmp
add
fadds
xchg
not
gs
jg
sbb
jg
in
xor
and
push
dec
gs
sbb
mov
push
mov
adc
sbb
or
scas
pop
outsl
test
xchg
test
sub
cmp
mov
cltd
inc
mov
and
cwtl
xor
ss
jns
sub
iret
test
hlt
ret
dec
sub
cmp
xor
ret
xchg
mov
rcl
ss
sub
pop
dec
xor
je
mov
mov
daa
mov
subb
sahf
sbb
ja
and
and
or
pop
aam
inc
cs
icebp
push
xchg
int
ficompl
xor
inc
mov
push
adc
inc
dec
push
outsb
or
jns
mov
jnp
int3
push
pop
aad
sbb
sahf
decb
and
xchg
pop
cmp
les
cwtl
ljmp
inc
mov
aad
sti
lret
std
xchg
je
xchg
repz
dec
stos
in
insb
icebp
aam
imul
test
aas
fs
icebp
ss
in
loop
std
push
adc
lds
xor
fistpl
xor
imul
out
sbb
jbe
sbb
jl
clc
hlt
mov
in
addr16
mov
add
push
cmp
add
loop
jne
push
test
pop
adc
divl
push
sub
or
in
or
pop
mov
daa
insl
add
and
mov
in
mov
jbe
stos
jns
repnz
or
test
push
enter
ret
outsb
sbb
sbb
nop
adc
or
jno
rolb
cli
insb
sar
lahf
test
imul
push
fdivp
rorb
mov
out
scas
dec
test
call
imul
inc
mov
jg
test
fnstcw
push
int
xlat
and
fbstp
icebp
ret
out
test
sub
outsb
mov
arpl
adc
push
mov
add
movsb
push
data16
jno
sbb
imulb
cmp
xchg
inc
arpl
and
cmp
cmpsb
xchg
mov
inc
ds
jp
mov
sub
sub
mov
dec
pusha
in
gs
aaa
or
push
mov
or
int3
bound
movsl
mov
lock
xlat
xchg
xlat
movb
mov
out
mov
sbb
push
mov
xchg
test
mov
ja
out
sub
ss
addr16
fisubrs
jge
sub
hlt
test
push
data16
xchg
inc
cli
jnp
fs
pop
pop
shll
fst
xchg
mov
pop
lcall
arpl
push
imul
lods
insb
push
xchg
aas
adc
sub
sbb
xlat
test
addl
add
mov
enter
xchg
aad
and
int
outsl
push
xor
arpl
jo
cmpsb
push
je
loopew
jne
inc
paddw
sub
xchg
cmpsl
enter
hlt
xchg
iret
fmul
mov
int3
ret
repnz
jg
cs
and
cs
movsl
clc
pop
cltd
cmp
push
and
out
repz
pushf
and
and
sbb
or
cltd
ret
insb
or
mov
les
scas
sub
cld
push
xor
mov
subb
xchg
xor
ret
ja
mov
mov
or
adcb
cwtl
iret
sbbb
jo
shl
adc
xchg
sbb
test
adcl
lods
dec
cs
cs
fnsave
pop
cmp
popa
insb
cmp
pop
loop
idivl
pop
ds
xor
pop
mov
cmp
mov
shlb
cmpsl
cmp
jne
sbb
mov
mov
arpl
inc
leave
dec
andb
jae
sbb
outsl
cmpl
les
mov
sahf
and
xchg
imul
sbb
inc
in
or
subb
pop
pop
xor
stc
cmp
lds
dec
adc
mov
repnz
add
test
pop
add
sub
sbb
insl
jns
xchg
cmp
push
add
push
mov
repz
sbb
cli
dec
mov
dec
or
adc
xchg
out
pop
out
sarb
stos
pop
jl
xor
xchg
inc
jnp
fs
pop
or
in
cmp
outsb
xor
nop
fs
fnstsw
mov
mov
lods
and
fsts
pusha
sti
pop
sub
dec
cmpsb
jle
cli
decl
out
ja
in
test
fxch
stc
lret
push
cli
xor
push
into
repz
inc
cmp
mov
lahf
fcmovnbe
shrb
mov
xchg
addr16
jo
xchg
pop
aad
imul
pop
inc
or
jl
cmp
sub
pop
stc
cmpsl
outsb
jecxz
stos
jl
xor
fs
cs
push
jge
jp
fdivr
jle
mov
fwait
xchg
adc
imul
scas
daa
push
imul
sub
mov
xchg
add
jge
mov
or
mov
sub
aam
xchg
lods
xor
ss
sbb
repz
cmp
xchg
xchg
xchg
push
inc
inc
stos
cmpsl
sbb
add
or
clc
jg
mov
das
loopne
lahf
cwtl
push
mov
shrl
add
pop
mov
hlt
insl
mov
mov
pushf
aas
cs
lds
adc
and
push
fcompl
addl
jnp
fsubp
lea
dec
pop
add
subl
stos
xor
and
dec
fiaddl
movsb
outsl
pop
insb
lods
fidivs
jae
mov
and
call
sarb
pop
jb
pop
sbb
pop
push
xor
pop
pop
lahf
out
and
xor
pop
mov
lret
xchg
in
pop
dec
push
ljmp
mov
xchg
repnz
lahf
xlat
cmp
pusha
ret
jecxz
lahf
iret
add
stos
dec
loopne
jmp
sub
inc
rcll
cmpsl
fwait
insb
pop
lret
push
lahf
cmc
sub
rcrl
or
mov
cmp
mov
jg
add
lock
mov
enter
in
pop
mov
popa
adc
dec
jnp
and
scas
nop
or
test
std
aaa
add
out
fwait
bnd
mov
push
push
mov
pop
ds
stc
mov
xchg
jbe
jbe
fcmovb
push
mov
and
cmp
cs
in
ss
xchg
mov
mov
je
imul
sub
clc
js
or
hlt
xchg
sub
int3
aaa
pop
xor
data16
pop
add
jecxz
in
xchg
sub
je
and
push
aas
fists
lock
inc
loopne
loope
fs
mov
mov
insl
popa
push
dec
popa
cltd
xorl
and
inc
dec
add
mov
stos
jo
pop
loop
jo
add
and
or
and
mov
sub
sbbb
fisttpll
das
popf
cmp
adc
arpl
test
mov
aas
adc
mov
call
or
cmp
pop
into
test
sub
fwait
shlb
mov
mov
into
cmp
jecxz
cmpsb
lcall
push
sbb
jno
pop
dec
jnp
cmp
incl
xchg
add
pop
mov
mov
fmull
add
xor
test
jg
sbb
sub
dec
jns
addr16
cmp
add
and
mov
loopne
scas
jne
rcrl
inc
or
sbb
addr16
fistps
sub
sbb
jno
and
jp
mov
mov
rcl
sbb
dec
pop
imul
mov
sahf
dec
mov
lods
aad
outsb
fcmovnb
cmpsl
add
jle
jmp
nop
mov
or
aam
dec
lahf
pmaxsw
orb
sbb
mov
in
icebp
scas
ret
and
mov
leave
xchg
push
outsb
loope
pop
xorb
and
add
into
insb
cmp
push
mulb
lea
sbb
or
imul
xor
cmp
pop
mov
addr16
inc
dec
mov
sbb
jne
shll
lds
cmpl
jnp
push
inc
pop
dec
sbb
test
es
sub
and
aad
aas
pop
aaa
mov
ret
aaa
push
adcl
mov
imul
push
adc
inc
jne
cmp
movsb
out
sbb
ss
xor
add
and
adc
and
mov
adc
cmpsb
push
dec
clc
xchg
ds
ret
pop
and
add
or
mov
divb
jge
rcrl
clc
cmp
shlb
imul
jmp
pop
cmp
xor
popf
iret
sub
les
fld1
leave
xor
add
inc
faddl
ror
enter
lds
in
adc
iret
sub
mov
fisttpll
into
pop
push
add
pop
lcall
fcmovne
jecxz
lcall
stc
repnz
pop
scas
cs
into
addb
insb
xchg
rcl
add
jg
shlb
mov
sbb
test
pusha
xchg
mov
pop
xlat
xorl
andl
imul
or
pop
push
int
call
xchg
rcll
xor
insb
dec
adc
stc
lods
and
cmp
push
inc
and
and
sub
test
mov
mov
imul
push
popa
mov
popa
push
mov
add
rorl
push
dec
leave
push
mov
fildll
lcall
mov
ss
sub
dec
or
mov
sub
cmp
sbb
inc
cmp
dec
mov
dec
dec
jecxz
mov
cmp
sahf
sbb
xchg
cmp
sub
mov
mov
adc
adc
mov
fldt
jnp
arpl
daa
faddl
test
pop
add
stos
fcompl
sti
xlat
ljmp
inc
pop
push
jmp
test
pushf
push
push
sahf
or
mov
rcr
mov
sub
in
mov
mov
cmp
add
inc
sbb
repnz
xchg
add
mov
lcall
shl
mov
roll
ret
inc
bound
inc
xchg
push
addr16
push
insb
cwtl
push
sub
fimuls
xlat
add
mov
cmpsb
pop
dec
xchg
je
push
call
negb
adc
adc
in
xor
loop
subl
insl
out
sub
rolb
jg
push
xchg
loope
lock
or
pop
xor
jnp
mov
jae
les
and
cwtl
aad
sub
ret
add
lock
repnz
jmp
mov
jl
mov
mov
ja
les
add
lret
mov
loope
pop
xor
outsl
sub
insl
addr16
out
mov
aaa
cmp
orl
in
mov
add
aas
xchg
call
sar
repnz
jns
out
jg
mov
mov
cltd
mov
push
sub
inc
cli
lea
jl
ret
pop
push
fistpll
inc
cmove
dec
cld
push
add
mov
push
test
cli
je
jle
stos
pop
jo
fnsave
and
inc
fidivs
sbb
scas
xadd
ljmp
jo
and
stos
mov
mov
mov
ja
pop
inc
and
popa
call
mov
decl
mov
ljmp
shl
sahf
mov
aaa
insl
adc
lahf
clc
pop
and
mov
aad
in
pop
mov
jecxz
jnp
jl
push
pusha
das
repnz
push
nop
gs
sub
outsb
xchg
loop
or
pop
into
int3
dec
mov
mull
into
or
addr16
in
push
scas
aaa
inc
or
aas
mov
mov
scas
jecxz
dec
adc
in
mov
ja
push
mov
filds
cs
loope
xor
out
les
pop
outsl
mov
mov
fadd
fwait
aam
sti
cli
dec
xchg
sbb
dec
adc
jmp
fwait
out
sbb
mov
mov
jge
pop
jnp
adc
jae
stc
rclb
ficoml
imul
hlt
into
mov
aam
cmc
add
cltd
mov
mov
sbb
jae
push
mov
sub
inc
imul
pop
jp
bound
sub
fdivl
add
lret
enter
lea
out
cmp
scas
sbb
cld
repz
fwait
mov
shll
jl
dec
pop
fdivrl
jecxz
nop
ja
sub
cwtl
add
cli
test
hlt
movsl
call
xlat
nop
adc
dec
cltd
movsl
add
in
push
ja
out
inc
fcoms
daa
add
rcrl
stos
fcomps
sub
push
mov
in
out
shlb
or
lret
mov
mov
das
lcall
shll
pop
repz
inc
in
push
pushf
dec
pop
push
and
cmc
loop
ret
sub
jbe
adc
mov
sbb
ret
xor
jno
addr16
cs
shlb
mov
dec
lret
pushf
lret
in
test
in
push
dec
push
add
or
icebp
popa
roll
adcl
mov
pop
jmp
test
shrl
push
xor
xor
outsl
andl
shr
stos
push
ret
ljmp
xor
out
xor
dec
lods
cmp
xor
decb
xchg
xor
mov
mov
leave
push
cmpsl
cmp
aaa
frstor
xor
shr
push
push
outsl
jge
ss
out
mov
sahf
mov
inc
outsb
movsb
xlat
arpl
fmuls
lahf
pusha
sbb
ret
enter
int
cld
and
sbb
mov
sbb
je
cmp
xchg
adcl
insl
inc
fadds
xor
sub
jge
and
xorl
add
stc
xor
imul
and
push
mov
and
das
mov
add
loopnew
xlat
xchg
cli
mov
out
mov
cli
cmp
pusha
scas
sbb
shrl
ljmp
icebp
cmp
cmp
push
sbbb
pop
ljmp
jo
push
inc
or
or
lds
cmp
sbb
fs
pop
dec
pop
xchg
mov
shlb
mov
mov
jne
pop
sbb
enter
and
mov
stos
jnp
test
leave
jle
add
push
xor
push
sahf
mov
dec
push
enter
fidivl
mov
enter
mov
insb
dec
mov
adc
push
sahf
loope
sub
cmp
roll
jl
int3
push
or
out
xchg
dec
pop
lea
pushf
cmp
lds
test
fistl
mov
mov
and
xchg
test
mov
out
dec
iret
loopne
les
sub
ja
sarl
shll
xchg
fldl
adc
and
nop
in
xor
xlat
ljmp
pop
out
sub
xor
add
js
out
jl
pop
rcr
inc
mov
xchg
bound
cmp
mov
dec
pop
sbb
xchg
sbb
scas
lods
sub
sub
cmp
adc
xchg
pop
pop
jno
cld
fcmovb
into
insb
add
iret
lret
dec
mov
inc
loop
sub
nop
jns
jbe
push
aam
nop
xchg
mov
add
push
scas
add
lret
mov
push
in
mov
clc
cmpsb
int3
push
clc
push
call
sarb
addb
mov
shlb
mov
and
test
adc
sbb
mov
cvtps2pd
or
push
cmp
dec
fsubl
dec
test
imul
mov
mov
icebp
xchg
or
xlat
out
lcall
sub
stc
pop
sahf
mov
int
jecxz
or
jnp
or
lea
aaa
out
mov
push
and
test
out
mov
shll
xchg
ds
pop
js
jmp
in
and
loope
enter
pop
add
shlb
lock
jo
jne
lods
addr16
adc
jnp
ds
je
out
cmpsl
mul
xchg
inc
xchg
popa
mov
jno
mov
call
cwtl
repz
pop
xchg
sub
lret
insl
cmpsb
or
adc
mov
mov
rclb
and
sub
and
mov
or
cwtl
sbb
cld
adc
rcr
sub
out
in
adc
mov
xchg
mov
ret
push
fdivl
cli
mov
jnp
rcrb
dec
enter
jle
test
add
push
ljmp
add
dec
and
jne
je
adc
inc
enter
cmp
test
pop
xchg
push
out
imul
sbb
insb
xchg
aad
pop
ds
cli
popf
dec
ljmp
div
push
mov
dec
cmp
test
lahf
jg
std
jmp
inc
loop
xchg
int
in
js
sub
movsb
fists
add
and
push
adc
aam
sbb
sbb
cs
movsl
ret
cmc
fwait
stos
or
into
xlat
insb
call
lods
pushf
dec
andl
xlat
lods
push
loop
lods
jbe
cmpsl
loope
test
inc
paddsb
pop
movb
ret
loopne
mov
std
dec
mov
jmp
add
xchg
mov
pop
int3
lret
adc
test
mov
arpl
mov
sbb
dec
stos
loop
fsubrp
xlat
xchg
lods
setbe
loop
xchg
mov
fs
pop
clc
and
iret
xchg
call
add
popf
mov
xor
fmuls
ja
lret
lock
cli
mov
es
sub
xor
jp
mov
jg
out
rcll
scas
out
pop
test
cltd
add
cmp
int
sbb
lret
insl
test
mov
or
xchg
out
fcomps
mov
adc
sbb
mov
jmp
pop
xor
sbb
lret
cmpsl
add
movsb
mov
out
jbe
sub
loopne
adc
jbe
test
jecxz
mov
pop
cli
dec
data16
mov
daa
xchg
int3
cltd
or
dec
add
mov
stos
inc
rcrb
rol
push
xor
cmp
push
insl
mov
int
xchg
stos
outsb
jbe
lret
iret
lcall
loop
and
ja
jns
scas
jno
fs
add
inc
daa
aas
cld
pop
pop
push
mov
lods
loop
lret
sti
dec
out
pop
dec
mov
mov
dec
data16
push
in
cwtl
loop
scas
test
cmp
add
add
mov
mov
pop
and
mov
test
xchg
mov
dec
xchg
lcall
jle
or
or
pop
and
outsl
cmp
in
cmpsl
lcall
ja
stc
sahf
dec
jo
fiaddl
mov
call
imul
add
sub
pop
and
mov
test
and
push
fnstsw
mov
or
fcoms
cltd
fidivrs
shlb
pop
pushf
xor
call
andl
popf
sub
sub
and
inc
xchg
nop
lds
push
fldenv
pop
add
pop
stc
int3
out
push
jnp
push
das
insb
push
mov
push
cld
cmpsl
adc
les
and
insl
inc
insb
lahf
sbb
jae
test
aam
dec
cmpsl
cmc
sbb
sar
test
cmp
je
sub
pop
jo
xchg
sub
push
fcoms
adc
jge
imul
add
sub
gs
and
push
jl
sub
rcll
mov
dec
sbb
sub
mov
xor
xchg
adc
mov
repz
sub
mov
movb
icebp
mov
xchg
mov
orb
bound
dec
mov
call
sub
jne
popf
fimull
daa
mov
push
addr16
cld
or
jle
push
and
stos
jbe
mov
lret
jg
mov
push
idivb
or
dec
fiadds
push
sbb
dec
push
dec
shl
sub
loopne
divl
dec
mov
in
xor
xor
xchg
insb
pop
cmpsl
mov
push
push
ss
pop
sbb
mov
pushl
sti
and
mov
lock
sub
js
inc
mov
adc
add
cmp
idivb
clc
std
pop
loopne
incb
push
lahf
mov
xchg
jne
ficompl
push
fstl
out
popa
stc
das
sti
pop
dec
push
fsub
ds
daa
decb
xchg
xchg
fnstcw
mov
mov
insb
fidivrl
lret
or
test
adc
ret
cmpsl
dec
in
jno
push
pop
inc
cltd
jl
and
sub
in
pop
jg
add
xchg
push
int
sbb
je
mov
sub
out
roll
adcb
xchg
mov
sbb
mov
inc
jmp
cmp
push
add
bound
fwait
pop
das
cltd
push
inc
mov
jne
push
mov
lahf
xchg
in
test
daa
cmp
ljmp
hlt
leave
cmp
ficompl
xchg
and
insl
lock
repz
stc
ss
out
cmpl
push
cmp
push
jb
cmc
mov
adc
pop
or
xchg
rclb
mov
cmp
mov
hlt
ljmp
pop
in
fsubrs
xchg
scas
fdivr
popa
fildll
loopne
out
push
push
ja
in
test
xchg
mov
or
mov
and
dec
fdivrl
mov
loop
sub
xchg
adc
xchg
cmc
out
movsl
xchg
cmp
jb
call
pop
aam
popf
lods
or
ss
enter
pop
out
jp
xchg
fsts
mov
mov
les
xor
ljmp
fs
aam
mov
mov
pop
sbb
add
inc
clc
cmpsl
mov
arpl
pop
outsb
gs
ret
callw
cmp
aas
mov
mov
outsb
push
push
repnz
fistpl
inc
sub
imul
pop
dec
jecxz
cmp
addl
fcmovb
sub
loopne
or
jnp
jmp
jecxz
enter
push
sub
orl
decb
imul
adc
xchg
push
mov
fadd
ss
xlat
push
sbb
sub
mov
jo
popf
arpl
pop
push
insb
arpl
xchg
outsl
mov
stc
test
or
subl
mov
insl
lret
jne
push
jmp
mov
aam
adc
test
xor
mov
sarb
pop
scas
arpl
xor
aaa
cltd
out
arpl
pop
insl
loope
add
out
adc
sbb
cld
mov
mov
xchg
pusha
dec
out
iret
or
cmc
sbb
sub
dec
mov
dec
adc
inc
cli
lea
inc
cmpl
xchg
jl
iret
scas
push
push
gs
add
leave
mov
pop
mov
pop
in
mov
jns
outsb
stc
xchg
test
and
mov
scas
inc
adc
cmp
inc
mov
daa
test
outsb
repnz
mov
push
mov
enter
mov
dec
arpl
dec
jmp
mov
in
inc
icebp
jl
pop
fs
shl
js
push
adcl
xchg
adc
aad
roll
cmp
call
loop
test
sbb
stos
or
mov
push
jns
popa
lock
rclb
xchg
add
test
jg
jle
fs
ficoml
mov
jnp
or
out
das
mov
push
test
mov
mov
aad
cmp
xor
aaa
enter
pop
enter
and
repnz
push
xchg
lods
insl
pop
sbb
push
std
cwtl
jl
lret
push
xor
and
cmp
jp
mov
leave
mov
pop
fbld
jle
test
fisubs
pop
stos
mov
jmp
cli
xor
out
pop
and
jb
frstor
inc
xor
mov
lock
shlb
push
test
lods
sbb
test
popf
daa
jbe
popa
out
mov
dec
inc
jle
in
aam
xchg
sar
rolb
xchg
push
negl
pop
cmp
jl
jg
test
popa
pop
je
lret
mov
in
repz
sbb
popf
cmp
ja
pop
fmul
int
aaa
mov
cltd
cmp
pop
jo
jne
lods
inc
mov
xchg
inc
int3
pop
orb
dec
mov
adc
or
adc
sub
daa
mov
pop
test
add
jb
ja
mov
cli
out
leave
jmp
pop
add
jns
cmp
and
into
lods
test
sub
add
xchg
mov
jl
mov
addr16
or
inc
xchg
xchg
sbb
clc
lods
push
loopne
mov
dec
add
fldenv
lock
add
add
rclb
push
sbbl
push
mov
add
mov
mov
fs
ret
leave
aad
aaa
aad
jp
out
aad
imul
push
sub
push
rep
mov
pop
mov
xorl
pushf
jmp
mov
sub
leave
cltd
pop
test
rol
pop
cmp
in
and
mov
inc
fiadds
push
cmpl
mov
fsts
cmpsl
push
jno
and
and
pusha
rcl
and
popf
fildl
push
jns
and
inc
jne
sub
pop
icebp
jge
pushf
dec
xchg
in
push
lahf
cmp
or
filds
jnp
adc
sub
xorb
xor
push
repz
lock
aad
sahf
ljmp
pop
mov
out
test
mov
or
push
push
add
push
aaa
push
insl
andb
out
in
notb
aaa
mov
clc
sbbb
popf
jno
cmp
lcall
mov
lret
or
inc
adc
jg
add
lret
loopne
ss
jp
jl
mov
and
mov
mov
nop
fnstcw
int3
test
les
add
and
and
xor
repnz
ficoms
lret
cwtl
jno
inc
sbb
cmpsb
add
loope
je
cmp
jmp
ja
dec
mov
imul
stc
std
pop
pop
cli
movsb
shlb
cltd
mov
jo
iret
decl
adc
xor
outsb
push
iret
and
popa
jge
jmp
bound
dec
cmp
into
cmp
iret
adc
sub
hlt
mov
push
iret
adc
mov
add
add
jl
sbb
enter
fisubrs
mov
add
jbe
or
data16
jae
xchg
jne
outsb
mov
ret
adc
scas
addl
daa
outsb
add
ss
cmc
xor
rorl
and
rcr
dec
mov
cs
sbb
adc
pop
sub
xor
adc
or
outsl
sbb
orl
out
push
leave
movsl
aaa
fisttpl
sub
mov
xchg
xchg
mov
push
fidivs
jle
pop
mov
mov
les
or
jae
xor
movl
adc
and
mov
outsl
cmp
lret
fsubrl
outsl
loop
stos
jg
cli
in
lock
mov
jge
ja
and
cmovb
adc
xchg
divl
push
aam
pop
pop
or
sub
loop
andb
cmpsl
insl
hlt
mov
push
sub
pop
cmp
fnstsw
push
or
mulb
cmp
push
and
addr16
into
jle
push
loopne
testl
jne
movsb
pop
scas
call
jecxz
loop
aam
cwtl
push
iret
cmp
add
into
jae
cmp
mov
stos
xlat
sbb
xchg
mov
cmp
stos
and
jg
cltd
mov
or
cmp
mov
repz
in
loope
ret
push
nop
and
adc
xchg
sbb
adc
js
push
enter
push
add
test
adc
dec
cmc
jecxz
test
andl
xchg
cltd
xchg
cwtl
test
cs
push
adc
cltd
dec
sub
fs
mov
xchg
pop
push
nop
push
push
sbb
sub
cltd
and
cmpl
xchg
in
jne
pop
and
es
dec
push
pusha
scas
push
sti
jae
out
dec
imul
lods
rorb
repz
sub
out
stos
jp
push
cwtl
adc
decl
imul
mov
push
scas
adc
imul
xchg
loop
cmp
inc
pop
js
mov
sbb
or
fs
sbb
or
scas
mov
into
pop
jb
cmp
addl
inc
xchg
dec
loopne
mov
aad
cmp
stos
and
xor
mov
stc
inc
shlb
or
push
xorl
movsl
leave
inc
outsb
push
out
mov
ljmp
xor
loope
imul
sbb
push
inc
push
imul
loop
push
aas
or
loopne
test
sub
adc
std
cmc
push
call
dec
arpl
lock
sahf
mov
cmp
adc
cmpsb
test
sub
psubusb
dec
out
mov
cs
cmp
pop
jmp
mov
stos
bnd
clc
movsl
push
in
mov
dec
add
mov
fs
cltd
jo
mov
pop
in
lods
movsb
lret
fwait
xor
rcll
test
lret
in
les
or
mov
xor
adc
cli
inc
or
ret
or
mov
jg
mov
in
movsl
mov
push
pop
inc
mov
adc
jb
loop
ret
ret
or
test
xlat
inc
mov
les
xor
sbb
mov
mov
adc
popf
sbb
aad
mov
sub
adc
call
fnstcw
leave
jb
mov
lcall
in
push
imul
movsl
rcl
outsl
lods
push
pusha
xchg
lods
add
insl
push
jecxz
ficoml
sbb
ds
and
pushf
repz
outsl
xorl
lret
cmpsb
pop
mov
ret
arpl
test
xchg
popa
jno
sbb
push
scas
test
ss
jno
insl
testl
jmp
lea
cmpsb
inc
lock
inc
mov
inc
nop
data16
xchg
mov
push
int
mov
lods
out
repnz
cmpsb
insl
pop
push
scas
and
lods
push
dec
pop
sbb
sub
stos
es
movsb
mov
cmpsl
cmp
bound
mov
nop
cmp
sub
pop
sub
and
mov
sbb
icebp
lods
test
ds
cmp
sti
sti
in
orb
mov
add
inc
or
mov
fisttps
push
test
xchg
dec
es
mov
clc
es
idivb
nop
add
ret
lret
jecxz
je
add
xchg
sub
and
jb
cmp
cmp
ljmp
daa
xchg
int
mov
jae
cli
loope
push
mov
ret
pop
xlat
repz
add
stc
mov
dec
adc
lcall
sti
ret
das
push
add
jecxz
cmp
push
dec
push
mov
mov
xlat
lret
mov
add
mov
sbb
je
data16
jge
mov
das
sbb
pop
add
sbb
xchg
lods
lret
or
cvtdq2ps
or
mov
out
mov
cs
repnz
sti
mov
push
loop
lods
xchg
in
mov
lcall
ror
jp
jp
mov
push
pop
pop
pop
cmpsl
sahf
cmp
fnstsw
jg
dec
xor
outsb
pop
js
fs
arpl
fisttpl
add
mov
gs
push
dec
bound
fwait
das
inc
jg
pop
femms
addr16
adc
lods
aam
push
cmp
sub
cwtl
imul
test
lods
adc
adc
pop
nop
int3
jbe
cld
mov
xchg
loop
shrb
adc
mov
add
jno
inc
stos
sbb
pop
rcrl
add
in
fcompl
repz
sub
push
or
stos
mov
repz
push
xor
push
cs
arpl
in
rolb
div
outsl
adc
in
out
or
sti
or
pop
sub
cmp
outsb
imul
js
dec
enter
push
push
mov
push
sub
cmp
arpl
sbb
leave
inc
and
sbb
push
mull
int3
push
sbb
nop
pop
xor
jle
xchg
pop
push
pop
mov
stos
xor
ret
mov
ds
leave
sti
pop
fwait
mov
mov
pop
sbb
inc
pop
clc
hlt
sub
js
inc
ja
jb
xor
leave
in
out
xchg
mov
loop
loopne
mov
std
shrb
mov
mov
sbb
outsl
dec
dec
or
loope
pushl
mov
clc
cmpsl
xlat
inc
imulb
and
fldenv
jle
popa
inc
jne
pcmpgtb
adc
shlb
jbe
push
dec
xor
andl
mov
mov
fdivp
fistl
addr16
mov
jns
inc
jbe
enter
cmp
fdivrs
out
pushf
test
inc
call
movsl
clc
fmulp
into
sub
in
or
cs
rolb
mov
xchg
popl
dec
mov
xor
xchg
in
pop
inc
inc
mov
insb
shrl
jl
ja
pop
in
sbb
adc
scas
jb
bound
aam
xchg
ficoms
lock
jb
sbb
dec
popf
sbb
clc
jle
std
mov
das
aas
mov
int
pop
aaa
adc
imul
jmp
inc
sahf
sbb
cmc
pop
sbb
out
mov
repnz
sub
xor
addr16
jno
or
test
andb
les
lcall
pop
mov
rcll
int
adc
aas
mov
mov
stos
sbb
mov
ret
pop
stc
sbb
enter
test
mov
cmpl
lahf
and
jno
xchg
in
add
negl
xchg
icebp
ds
jno
les
and
int3
faddl
jns
cmp
les
or
aad
in
movsb
jg
loope
cltd
flds
loopne
jnp
or
sub
mov
mov
fwait
icebp
jecxz
div
lea
in
test
lock
js
mov
mov
repz
notl
ret
xchg
mov
dec
pop
push
add
sbb
lods
pop
ret
adc
xor
inc
mov
mov
add
jns
ja
cli
std
pop
add
aaa
pop
in
leave
sub
adc
mov
cmpl
fimuls
punpckhdq
push
movsl
hlt
adc
js
fiadds
stc
addr16
cmp
mov
stc
pushf
loopne
xchg
fidivs
aam
mov
xchg
sbb
imul
jmp
inc
data16
mov
lahf
imul
iret
test
rcrl
push
lock
jae
out
mov
cltd
push
repnz
jp
mov
jg
das
mov
adc
arpl
jbe
fisttpl
add
out
mov
mov
mov
mov
mov
bound
fnsave
jne
dec
popf
lds
dec
cmp
mov
das
add
ror
out
cmp
xchg
int
sbb
mov
xchg
jmp
out
xchg
cmpsb
pop
rorl
inc
jnp
stc
adc
scas
xchg
test
movsl
and
and
cmp
pop
inc
jge
mov
or
enter
and
push
cmp
xchg
cmpsl
sub
sbb
push
out
mov
int3
mov
not
in
popa
xchg
loop
cmp
mov
lock
fsubl
mov
out
pop
lods
add
outsb
or
add
push
imul
mov
xchg
pop
mov
sub
adc
addr16
mov
in
inc
xchg
in
inc
aaa
testl
sbb
pop
or
adc
sub
shr
aas
dec
sarl
or
sub
ret
xchg
stc
mov
sub
mov
jle
popf
push
pusha
jl
pop
pop
lea
jns
in
cmpsb
inc
inc
imul
pop
xchg
and
sbb
adc
lret
movb
cmp
ja
cli
xor
sbb
mov
mov
and
or
dec
addr16
xchg
mov
mov
mov
jno
pop
popl
mov
pushl
imul
outsb
jg
arpl
clc
pushf
add
add
add
mov
testb
sub
pop
and
repnz
cli
xlat
lds
gs
or
pop
xchg
mov
daa
loope
aas
ret
push
movsb
or
and
push
outsb
xlat
pop
jns
imul
dec
mov
nop
arpl
sbb
repnz
fbstp
fisttpl
xlat
pop
jo
stc
int
std
or
icebp
dec
push
dec
mov
sbb
pop
push
push
sub
aas
lock
lds
adc
push
movsb
iret
ret
push
fnstsw
or
inc
shl
rclb
pop
sbb
sub
adc
sub
inc
cmp
push
pop
and
leave
push
push
xor
sbb
and
pop
push
cmp
out
scas
mov
ja
insb
xor
mov
inc
mov
adcl
jnp
faddp
insl
je
out
leave
mov
out
daa
add
out
test
pop
or
sub
fs
inc
lock
fstpt
or
cltd
pop
ss
pop
add
and
mov
adc
pop
jecxz
test
xchg
imul
es
and
xchg
lock
nop
dec
fildl
xchg
bound
lds
cli
and
out
fsts
push
dec
lds
sbb
stos
lahf
sbb
call
inc
popf
mov
dec
or
dec
jb
rcrl
xchg
outsl
jbe
ret
add
outsl
sahf
dec
icebp
xor
clc
insb
jle
adcb
ds
daa
push
test
les
jp
popf
add
cmp
sub
in
cmp
and
xchg
mov
fninit
jne
lods
pushf
fdivs
fdiv
xlat
lcall
arpl
xchg
jmp
ja
and
in
jns
xor
sub
and
mov
cwtl
push
sub
jmp
adc
loopne
pop
pop
lock
std
popf
inc
jmp
aaa
xor
push
mov
hlt
jb
add
pop
and
lock
push
pop
pusha
xchg
push
mov
lds
inc
cmp
xchg
pop
cmpsb
and
nop
xchg
mov
and
pop
test
test
adc
jg
insb
pop
das
mov
jbe
ljmp
rcrl
dec
jns
mov
or
fcoms
push
xor
sub
sbb
pop
xorl
ficoms
and
mov
je
loope
rclb
bound
loope
xor
jmp
pop
mov
or
sbb
js
fwait
mov
xchg
mov
int
xor
cmc
mov
xchg
mov
pop
jmp
stos
inc
xor
mov
out
sub
mov
push
and
push
aaa
in
int3
push
add
cmp
pop
or
add
mov
push
repnz
arpl
xchg
mov
in
cmpsb
int
cmc
or
push
or
divb
push
dec
mov
pushl
lea
adc
mov
mov
addr16
and
cli
in
and
xor
jecxz
and
xor
gs
add
scas
and
into
in
push
add
push
xlat
add
jb
aam
xor
add
pop
clc
push
rorb
pmaxub
cmc
mov
aam
dec
inc
out
adc
pushf
cld
jl
daa
sub
addb
xor
jb
lahf
jo
xchg
xchg
mov
in
sbb
adc
out
pop
inc
cwtl
mov
pop
aam
fcomps
pop
bound
ja
lcall
incb
mov
add
lahf
neg
push
lcall
sub
adc
jecxz
fistps
fisttps
std
sti
xchg
lret
andl
sbb
negb
or
cmp
mov
xor
xchg
test
das
or
push
stos
pop
leave
xorl
pushf
test
pop
sbb
sbb
ret
sti
out
stos
xchg
lahf
clc
fdivr
fldt
adc
pop
push
adc
test
mov
adc
push
cmp
mov
test
das
fldl
dec
mov
sub
xchg
inc
out
bound
sbb
cli
inc
dec
mov
pushf
fs
inc
mov
xchg
push
xlat
inc
sbb
cmpl
packsswb
fwait
insl
add
aad
ss
xor
bound
les
add
popa
push
adc
ffreep
lcall
inc
adc
shl
adc
mov
insb
push
icebp
aas
pop
fs
pop
adc
pusha
and
movsb
or
frstor
xchg
mov
fsubp
cmp
sub
sub
sbb
insl
data16
dec
and
lret
add
jl
xlat
jno
cmc
int3
lea
dec
cli
fwait
call
cmp
lods
xchg
sub
or
mov
fisttps
sub
sbb
mov
push
mov
xchg
clc
fists
sbb
push
sbb
add
jge
sbb
xor
push
and
fists
in
stos
aam
div
fiadds
into
cs
test
popa
fmuls
cmp
cmp
sahf
les
add
ret
sti
scas
jl
add
dec
and
dec
pop
pop
add
pusha
sti
push
stos
iret
cwtl
nop
cmc
mov
xchg
mov
pop
push
adc
mov
or
shll
test
xchg
push
push
popf
pop
add
mov
ret
sbb
pop
jns
nop
xor
xor
ljmp
and
sar
cltd
out
and
fnstcw
inc
inc
mov
jl
repz
mov
mov
arpl
or
push
xor
mov
xor
jg
aam
js
ss
cmp
outsb
push
sub
mov
shl
test
int3
adc
cli
mov
push
lcall
js,pn
cld
lods
popf
loope
add
push
mov
dec
sub
mov
mov
pop
lock
out
cmc
or
xchg
aaa
jno
ljmp
and
mov
pop
lahf
jmp
arpl
sbb
pusha
cmp
push
dec
inc
cmpsl
adc
dec
outsb
scas
aaa
stc
inc
cmpsb
addl
fidivl
xchg
sbb
inc
ja
dec
lock
lds
or
inc
mov
dec
mov
or
das
out
pop
arpl
mov
dec
packssdw
xchg
cld
xor
and
jne
adc
imul
sarb
icebp
mov
jo
notl
sbb
stos
or
lcall
mov
inc
cmpl
aaa
mov
fmuls
adc
inc
adc
out
and
inc
loop
jno
sbb
jnp
cli
push
or
divb
clc
jl
or
mov
mov
inc
jecxz
clc
lcall
dec
or
jge
mov
add
sbbl
sbb
sahf
inc
jge
and
jne
add
pop
cmp
dec
sub
push
fistl
sbb
mov
cmp
shl
jbe
mov
mov
gs
test
pop
outsl
stos
xor
mov
sub
in
aas
add
aam
sbb
icebp
inc
ret
lods
decb
sbb
loop
loopne
inc
jmp
push
mov
rcrb
adc
in
out
sub
xor
insb
push
stos
popa
rclb
xor
jne
mov
jl
dec
fiaddl
adc
mov
lahf
out
addr16
mov
repz
xchg
jae
xchg
rcrb
xchg
jle
jnp
xchg
neg
testb
jb
xor
cmp
push
dec
cwtl
mov
pop
jne
in
subb
dec
xor
cmc
pop
push
xor
sbb
cmpsl
rep
addr16
mov
dec
sahf
cld
icebp
loope
rcr
xchg
push
test
cmp
shrl
sbb
fstl
mov
and
jle
je
adc
mov
sbb
inc
push
push
int3
cmpl
push
ja
pop
ja
jp
dec
flds
jge
das
mov
and
inc
and
xor
aam
push
push
fwait
jne
movl
push
xchg
out
imul
popl
fwait
cli
mov
sbb
mov
push
sbb
xchg
push
or
dec
sub
pushf
or
inc
adc
xorl
lahf
outsl
inc
dec
xor
cmp
lods
shlb
lret
xchg
fs
and
shrb
scas
lret
call
inc
leave
xchg
pop
fwait
xchg
sub
iret
sbb
lcall
popf
pop
sbb
pop
push
btr
movsb
inc
mov
add
xor
or
or
ljmp
in
xor
inc
and
test
sbb
addr16
fwait
pop
popf
sbb
push
je
pop
fidivl
popl
mov
das
cmp
sub
repz
fildl
nop
jmp
subl
mov
push
xchg
push
push
fwait
jecxz
ret
cmp
xchg
sub
mov
xor
leave
sbb
lcall
or
sub
stc
call
adc
rcrl
sti
or
cmp
inc
aas
mov
addr16
adc
pop
mov
btr
sub
shrb
push
lcall
jge
sbb
pop
fisttps
mov
pop
out
add
mov
mov
mov
insl
clc
or
into
stos
sub
xlat
je
adcl
imul
or
mov
cmp
cld
jno
adc
in
nop
icebp
loope
jnp
dec
sub
push
add
pop
xchg
shrb
mov
mov
cwtl
mov
mov
sbb
sahf
inc
dec
xor
cmpsb
fiadds
bnd
sbb
add
adc
push
or
stos
das
repz
and
aam
cmp
add
shll
jl
jle
mov
repnz
shlb
fcmovnu
std
in
mov
dec
ljmp
dec
imul
jge
es
inc
push
outsb
mov
fmulp
lret
aad
xlat
test
and
mov
sub
sbb
mov
xorb
int
dec
mov
mov
and
sbb
xchg
cwtl
jne
mov
mov
inc
fidivs
sbb
jns
out
or
lcall
mov
inc
sub
push
and
ljmp
or
jnp
add
dec
add
adc
inc
shlb
and
testl
fldcw
jnp
xchg
cwtl
jle
jnp
xor
xchg
mov
mov
sbb
cli
push
cwtl
cwtl
mov
pop
lret
sub
cltd
loop
mov
pop
out
inc
std
icebp
dec
inc
dec
mov
and
es
xor
clc
cmp
in
sar
iret
ds
cltd
push
imul
and
scas
je
ja
xchg
xchg
xchg
fdivrs
ljmp
out
in
push
fldl
mov
dec
fcmovnbe
jo
mov
mov
mov
call
call
jecxz
mov
push
sti
mov
xor
in
test
into
andps
pop
xor
ffree
fistpl
orb
ficomps
lea
inc
xchg
mov
xchg
clc
dec
jmp
xchg
push
xchg
pusha
xchg
je
ja
icebp
sbb
inc
push
xchg
jnp
sbb
sbb
mov
push
or
rcll
or
subl
andl
in
jge
in
jne
in
dec
or
lods
jg
shlb
lret
shlb
push
add
out
sbb
add
inc
pop
fsts
mov
ljmp
mov
int
jge
in
imul
loop
xchg
hlt
call
xchg
jno
xor
js
sbb
insl
test
rolb
and
lds
rcr
lret
pop
mov
sbb
jmp
shl
push
out
out
imul
rcrl
in
dec
push
jb
jne
mov
lret
mov
cmpsb
arpl
cld
inc
pop
dec
out
cmp
xor
outsl
inc
into
jmp
push
pop
fcos
mov
mov
cmpsb
stos
pop
ret
clc
js
push
mov
std
loope
arpl
scas
es
scas
mov
xchg
xchg
pop
pop
xor
lods
xchg
ja
jae
dec
push
aad
xchg
or
cmp
sbb
xchg
pop
filds
and
mov
imul
lock
hlt
push
push
mov
call
jmp
xchg
test
pop
adc
push
push
dec
cmp
and
xor
pop
jno
push
pop
sub
cmp
fstps
inc
mov
cmp
sbb
cltd
sbb
stos
xor
insb
pushf
adc
mov
add
clc
in
pop
test
inc
loope
jo
dec
add
lock
mov
sbb
ror
cmp
jbe
mov
aas
ljmp
push
std
ja
mov
mov
cmp
addr16
mov
adc
sar
stc
ds
push
jg
aam
sti
pop
nop
dec
mov
inc
adcb
pusha
je
lret
mov
push
fstpt
iret
aad
cmp
fisubl
xor
ds
outsl
cltd
pop
stc
add
andl
js
popa
decb
inc
ljmp
and
and
call
xlat
push
enter
mov
jo
jl
jmp
fistpll
xor
pusha
ds
and
cmp
mov
adcl
xor
inc
mov
ljmp
cmc
popa
pop
cltd
ja
in
add
ja
pop
in
sbb
lds
sti
out
sub
lret
cmp
jle
dec
mov
pop
xchg
and
ss
jns
inc
push
je
pusha
lret
mov
mov
sbb
fs
mov
mov
jmp
in
push
xchg
pop
std
xor
add
dec
out
dec
sub
mov
adc
ss
add
mov
add
or
inc
cmp
and
push
or
xchg
inc
aam
cmp
lret
or
mov
rorl
lea
push
fnsave
jae
xchg
arpl
aas
aam
jo
or
lods
cmp
int3
mov
cmp
sub
cmp
aad
inc
or
mov
testl
aad
mov
xchg
ja
pop
dec
les
or
cmpsl
adc
adc
bound
and
leave
sub
sbb
repz
movsl
popf
inc
repnz
and
add
aas
cli
rclb
push
cmp
ss
scas
xchg
mov
lds
mov
lods
cmp
jecxz
ficomps
push
js
call
repz
jbe
out
adc
inc
push
es
testb
ljmp
rolb
mov
mov
int
push
jecxz
and
dec
lods
stc
pusha
sbb
push
jle
inc
adc
cmp
dec
cwtl
xor
jg
pusha
mov
xor
ljmp
xchg
aam
or
pusha
xchg
cmpsb
jns
loope
inc
push
pop
jge
add
insl
cmp
sub
orl
repz
xor
out
mov
mov
rcr
in
out
in
test
lahf
push
and
or
insb
pop
mov
sub
outsl
ja
pop
mov
fidivrl
test
jp
in
icebp
jns
rorl
cld
push
and
jg
aad
jmp
aaa
add
xchg
dec
out
repz
out
mov
dec
or
and
cmp
stc
mov
push
imul
mov
les
out
rclb
pop
dec
add
sbb
out
adc
shll
shlb
mov
stos
cwtl
dec
fsubr
jo
repnz
sbb
testb
sbb
ljmp
cmp
xor
das
add
mov
jb
cltd
ds
cmp
sbb
dec
out
xor
clc
inc
pop
insl
out
in
mov
outsl
repnz
sahf
shll
add
push
dec
push
inc
lock
in
in
fst
xlat
or
sbb
dec
insl
es
inc
sbb
popl
fldl
rcll
cmp
scas
fcompl
xor
ret
nop
outsl
push
sbbb
mov
or
mov
add
fs
mov
fwait
inc
loopne
std
loop
mov
xor
gs
ja
out
sbb
dec
push
cmp
aaa
inc
xor
add
lods
dec
insb
pop
lcall
repnz
mov
das
imul
addl
movsl
das
ss
fucom
mov
enter
mov
xor
cmp
ret
jo
xchg
outsb
cmpsb
fstl
xchg
cmpsl
sahf
sbb
xor
cwtl
and
cld
xchg
out
in
sarb
mov
xor
scas
cwtl
dec
adc
inc
jge
jmp
adc
sbb
jle
lods
sbb
out
mov
jnp
popa
clc
push
lods
call
push
insb
adc
cmp
jg
hlt
rep
cld
inc
imul
out
std
jae
adc
sub
dec
rclb
sbb
les
repnz
out
mov
mov
dec
daa
xchg
jno
jo
xchg
jae
pop
loope
push
pop
clc
sbb
mov
shrl
add
pop
imul
push
push
add
js
pop
inc
gs
lret
into
sub
cmpsl
add
hlt
pop
shrl
cs
sahf
rolb
mov
in
movsb
jne
add
shrb
jmp
shlb
push
fisubrl
xchg
mov
test
shlb
mov
dec
lcall
aam
out
mov
dec
aam
xchg
rcll
dec
mov
jg
pop
xor
jo
nop
out
pop
mov
mov
stos
and
jae
jg
xchg
aas
adc
repnz
negl
mov
cwtl
ss
out
cmpsl
shrl
lods
leave
ret
les
rcl
test
pop
movsl
or
mov
shll
pop
outsl
sbb
jb
add
push
in
es
jbe
fcompl
lcall
push
xor
push
clc
add
jns
push
out
sbb
notb
imul
push
xchg
mov
inc
loope
add
xor
lods
ljmp
shlw
ds
jecxz
pop
aad
jne
push
jns
daa
or
pop
or
and
enter
add
in
and
call
jmp
mov
stc
nop
sub
dec
jp
roll
pop
mov
xchg
rorb
in
lahf
inc
stos
mov
inc
or
jmp
mov
jecxz
adc
ss
gs
mov
cmp
movsb
ja
cmp
dec
mov
ret
roll
in
mov
pop
stos
xor
rcll
pushf
add
xor
adc
adc
xchg
ret
sbb
or
dec
lret
jo
xor
lds
adc
lcall
or
mov
cmpb
out
push
fs
sbb
lds
stos
jl
push
fisttpll
sub
dec
andb
xchg
cmp
nop
or
mov
push
fsubs
orl
outsb
push
dec
std
into
movb
sbbb
or
mov
fmul
mov
mov
outsl
in
cwtl
push
cmp
ret
xchg
jne
fldt
cmp
push
shll
scas
inc
xchg
es
mov
inc
or
cltd
hlt
dec
mov
add
xchg
jns
sbb
mov
push
dec
push
push
call
sbb
mov
fcoml
pop
mov
xchg
pushf
jle
mov
fnstsw
push
ljmp
stos
pop
push
aaa
ljmp
mov
popf
in
fwait
mov
hlt
lock
jae
lods
dec
and
movsl
into
dec
mov
or
push
fstpl
sub
mov
repz
nop
inc
rol
cltd
jae
push
popf
ja
in
push
fisubrl
mov
js
outsb
pop
mov
test
bound
fdivs
stos
mov
call
mov
aas
xor
ljmp
cmp
cwtl
add
pop
mov
dec
in
fwait
orb
movsl
fs
and
adc
lods
mov
cmp
std
stc
mov
jnp
or
pop
pop
outsl
lods
decl
jmp
icebp
xchg
cmpsb
mov
jne
dec
flds
xchg
imul
iret
jno
adc
sbb
lcall
inc
fsubs
sub
leave
orb
xor
jl
jbe
jns
jge
mov
mov
adc
and
lea
or
mov
add
mov
cmp
xor
popa
mov
cmp
enter
in
mov
fldt
loop
cmpsb
jne
ret
ret
mov
pop
ss
int3
sub
es
xchg
mov
mov
mov
shll
push
jns
adc
dec
xchg
inc
xor
dec
jmp
adc
sti
sbb
mov
sbb
and
outsl
das
lcall
jle
in
into
inc
jp
subb
aaa
fidivrl
fcom
cmp
loop
lcall
pushf
decb
subb
out
lcall
push
mov
cmp
pop
or
mov
loopne
movsl
cmpsb
aaa
sbb
leave
lds
rcrb
jp
rcr
sub
jb
sub
add
jmp
mov
rolb
pop
addr16
aaa
and
insl
push
aas
outsl
mov
lahf
sbb
dec
cmp
and
add
xchg
dec
fildll
arpl
popa
aad
mull
es
xchg
enter
adc
sub
mov
call
xchg
jg
push
pop
jl
or
push
rorb
ljmp
mov
in
and
mov
aaa
mov
lret
repz
ds
test
inc
cmp
jb
mov
xchg
iret
shlb
int3
mov
mov
shlb
into
adc
or
jge
sub
js
or
add
icebp
cmp
push
mov
ja
imul
cltd
scas
daa
sub
jmp
js
loope
adc
and
out
leave
es
sbb
frstor
add
inc
pop
inc
loopne
adc
out
xchg
xchg
mov
xor
pop
pop
or
hlt
inc
fcmovb
xchg
fwait
loopne
dec
cld
sar
shlb
and
mov
imul
xor
lods
inc
xchg
imul
inc
lahf
in
dec
add
fxch
dec
gs
cli
sub
lcall
lods
stos
mov
xor
pop
hlt
inc
daa
xor
jb
cmp
add
test
push
inc
jo
out
imul
stc
aas
inc
jne
ret
push
insl
push
xchg
mov
aam
cmp
ja
push
sarb
je
add
lds
push
movsb
dec
test
stc
aas
push
lret
flds
lds
hlt
adc
mov
ljmp
es
ljmp
mov
xchg
jo
mov
push
mov
movsb
out
push
fwait
cmp
std
cli
mov
fimuls
addl
or
pop
xor
stc
fstpl
lods
pop
mov
mov
negl
repnz
lcall
fbstp
stos
add
mov
fsubr
pop
jo
dec
out
cmp
pop
aaa
addl
lods
das
clc
repnz
test
cmp
std
jle
js
mulb
mov
cmp
test
stos
rcl
add
xor
sahf
loop
and
shrb
addb
ds
movsb
mov
mov
inc
cmp
inc
add
add
pop
inc
jp
iret
or
lods
adc
ret
or
ljmp
add
or
pusha
dec
cmp
xor
icebp
inc
sub
dec
pop
hlt
push
popf
and
and
lods
xor
pop
int3
lcall
jl
js
pop
pop
push
adc
xchg
sub
pusha
mov
mov
mov
cmpsb
gs
lret
fsubs
inc
popa
sar
xor
mov
je
mov
mov
aam
in
push
inc
stos
mov
mov
ljmp
xchg
test
mov
jge
push
mov
pusha
lcall
jns
xor
aaa
sub
arpl
stos
sbb
and
mov
xchg
xchg
xchg
push
sarl
ja
cmp
or
jp
decl
daa
pop
flds
cmc
push
dec
inc
add
inc
pop
daa
jnp
rcl
pop
push
jecxz
cmp
dec
int
mov
mov
stos
inc
sbb
bound
sbb
data16
loop
fucom
jle
and
movsb
sub
mov
pop
dec
pop
loop
push
fld
inc
hlt
sti
adc
mov
outsl
rorl
xchg
ret
ss
pop
lahf
push
push
fmull
and
test
xor
push
adc
lock
add
std
iret
stos
subl
outsb
stos
je
daa
inc
pop
or
add
arpl
in
mov
jge
in
and
pop
sbb
mov
std
adc
test
movsb
mov
mov
fldt
cs
xor
arpl
out
jbe
sub
ficompl
dec
adc
jo
int
rorb
dec
sub
adc
adc
sub
pop
fisubrs
or
sbb
jb
or
js
mov
or
shll
int3
add
icebp
or
mov
pop
ja
sti
js
sbb
shll
push
mov
jp
jae
gs
movsb
dec
ret
inc
jns
jmp
fadds
dec
arpl
jecxz
or
xchg
mov
jb
push
inc
inc
rcrl
pop
outsb
es
nop
add
cmp
sbb
adcb
and
mov
rolb
repz
cli
pop
lea
jecxz
add
js
dec
fdivrs
push
gs
fldcw
rcrb
pop
jns
jnp
mov
mov
pop
aam
pop
pop
mov
xchg
mov
dec
pop
loop
pusha
imul
out
fcomip
or
cli
jae
nop
jl
or
lods
test
lods
mov
lods
ljmp
and
jecxz
xor
sbb
inc
cltd
inc
clc
jl
mov
cltd
cmp
arpl
mov
push
push
sti
in
jnp
sub
icebp
cs
mov
into
inc
adc
nop
sub
adc
dec
cltd
pop
or
jmp
lock
int
pop
aad
cmp
cmpsl
out
mov
jae
cmovae
gs
mov
dec
xor
xchg
inc
cltd
lods
and
test
add
imull
movsl
mov
pop
cltd
cmp
adc
sarl
xor
mov
add
lds
hlt
sbb
rolb
add
inc
aam
adcb
sub
push
pop
jle
xchg
std
jo
movsb
flds
shrb
xor
sbb
xchg
push
imul
xchg
adc
outsl
mov
cmc
test
sub
sbb
adc
jnp
push
stos
adc
cmpsl
pop
lds
add
sahf
mov
pop
sub
dec
iret
fimull
mov
stos
adc
sbb
ljmp
sbb
pusha
push
adc
push
mov
movsb
cmpsl
or
pop
aam
mov
bound
sub
popf
insb
je
xchg
rolb
xor
lods
and
pop
or
shr
test
push
lcall
push
sub
inc
dec
dec
jge
repnz
xchg
imulb
adc
mov
xlat
mov
xor
inc
out
aad
mov
je
stos
xor
dec
adc
adc
add
setnp
and
shlb
push
aas
sbb
stos
ret
inc
icebp
test
jmp
imul
push
test
mov
push
add
push
mov
adc
out
sarl
xchg
call
xor
cmp
jo
jnp
dec
mov
gs
lahf
lods
enter
or
xchg
imul
jno
jp
bound
iret
cmc
lea
pop
adc
test
mov
jmp
scas
xchg
lcall
mov
jle
sbb
arpl
mov
cmp
cmp
adc
cs
out
push
lods
sub
andb
inc
xchg
repz
push
pop
cmp
cld
kaddw
adc
mov
aad
stos
xor
in
jnp
das
shll
or
inc
inc
lods
sarl
std
xor
or
lahf
call
xchg
inc
ds
inc
nop
add
ret
mov
cmpsb
lcall
sub
xor
imul
xchg
xchg
xor
jns
fs
xor
xchg
jae
push
scas
aas
push
sahf
dec
and
ljmp
ficompl
and
sbb
bound
xlat
xchg
outsl
ds
and
stos
and
xchg
jmp
adc
add
jb
das
aad
cmp
jl
jmp
cli
add
lea
cmp
pop
xchg
test
loopne
or
in
pop
daa
std
lahf
jae
cmc
js
mov
scas
bound
xorl
int3
inc
test
pop
mov
mov
rcr
dec
inc
popa
dec
sbb
rcll
mov
loopne
inc
xchg
lahf
sbb
jno
adc
call
cli
cmp
sub
push
jge
inc
imul
bound
push
cmp
and
pop
bound
test
xchg
repnz
insl
sar
mov
push
gs
push
rcrb
xchg
dec
push
mulb
lret
pop
xchg
lock
sti
mov
or
cmp
std
stos
mov
sub
jecxz
xor
shll
inc
xchg
xchg
xor
pop
pop
shl
arpl
out
xlat
subl
lds
pop
push
cmp
jae
ret
and
int
adc
cmp
subb
les
mov
xor
mov
jg
decb
mov
imul
subl
ret
adc
sbb
xor
jl
out
loope
scas
je
and
imul
movhps
out
leave
dec
sub
dec
and
movsl
cli
nop
ljmp
testl
dec
cmp
orl
faddp
inc
les
cmp
sub
cwtl
dec
cmpsb
dec
lds
dec
loop
cld
dec
cmpsl
outsb
and
mov
mov
sbb
mov
nop
lret
and
jae
jge
pop
sbbb
mov
and
and
fistpll
sub
push
inc
shl
insb
cmp
xchg
adc
jecxz
and
inc
sbb
dec
pushw
clc
jl
stos
lds
mov
jmp
jmp
inc
xchg
or
adc
mov
xor
in
cmp
jnp
mov
aad
mov
aas
sub
repnz
ja
jp
clc
mov
adc
push
insb
dec
mov
xor
sub
mov
mov
in
nop
int3
jbe
mov
lods
pop
mov
mov
adc
fisttpl
sub
ljmp
les
out
push
sub
jns
insb
test
add
push
jbe
pop
out
cs
adc
xor
call
and
scas
mov
fistpll
sub
cmp
push
orl
xchg
inc
les
vcvtpd2psx
imull
xchg
adc
push
mov
mov
outsl
cmp
insl
sbb
mov
ds
mov
mov
mull
mov
add
adc
jg
add
outsb
daa
cmp
cmp
push
sti
divb
fnstenv
lret
cmp
add
out
incl
cltd
jecxz
jge
adc
push
sub
fadds
cmc
test
rclb
dec
addr16
push
daa
lea
fwait
movb
jno
mov
insl
and
loope
in
fisubrs
stc
push
lods
push
rolb
outsl
cmp
enter
xchg
rclb
sbb
xchg
mov
outsb
insb
cs
mov
xchg
cmpsb
mov
mov
fcmovne
jbe
roll
sbb
jle
mov
and
int
aaa
test
lds
xchg
or
ljmp
cli
cwtl
adc
sbb
sub
push
aas
out
stc
pop
dec
mov
dec
or
mov
pop
aaa
push
adc
and
jne
mov
cmp
sub
cmp
popf
clc
out
movsl
adc
ss
jmp
adc
jmp
push
insl
dec
fcomps
pop
dec
and
dec
int
sub
cmpsl
and
push
shll
cmpl
pop
push
xchg
pop
mov
sub
sub
cmova
adc
out
xor
mov
pop
lret
push
stos
call
jl
or
inc
sub
ljmp
jae
dec
jle
ds
jb
inc
xorl
rcll
add
lret
adc
cmp
arpl
xor
xchg
xchg
cmc
ss
inc
imul
mov
cmpsb
mov
lods
push
add
dec
jecxz
cmp
or
adc
lret
mov
das
or
out
loop
repnz
push
pop
dec
enter
mov
xor
fnstcw
ret
out
xor
ss
lods
stc
add
fwait
popa
pop
mov
cmp
or
pop
inc
cs
inc
or
pop
int
cmp
movsb
sub
js
pop
repnz
mov
pop
stos
sub
adc
push
faddl
mov
pop
inc
xor
fwait
add
sub
pop
or
orb
leave
test
incl
dec
xor
mov
lret
pop
xchg
pop
mov
cmc
std
orps
sbb
mov
fdivs
inc
mov
mov
mov
mov
lea
loop
xor
mov
jge
add
repz
cli
sbb
out
mov
push
sahf
cwtl
mov
cmpsb
into
outsb
sti
dec
loopne
ds
scas
scas
mov
int
cmp
jg
in
ss
loop
jno
f2xm1
or
repz
sahf
xchg
das
xor
xor
mov
in
aas
cmp
mov
scas
jne
movsb
div
iret
loope
sbb
enter
mov
xor
les
icebp
cmpsb
sub
push
sub
mov
fadds
and
jge
movsl
aaa
stc
adcb
adc
fwait
jne
ficoml
mov
sbb
inc
js
sbbb
sbbb
ljmp
inc
push
mov
push
lret
cltd
out
jecxz
addb
daa
in
nop
sbb
add
inc
lods
into
imulb
mov
hlt
mov
fsubrs
sub
icebp
div
mov
and
push
divl
adc
mov
sarb
jg
test
in
sub
int
mov
ss
stc
sbb
je
ljmp
push
pusha
push
test
test
insb
jne
mov
fwait
movsb
xorb
xor
sub
inc
bound
xchg
add
mov
adc
cltd
jg
jmp
cwtl
or
repnz
xor
push
pusha
enter
dec
bound
std
jne
test
out
inc
mov
ror
jecxz
or
xchg
inc
mov
lcall
cmc
dec
push
pop
sub
pop
xor
and
lock
pushf
mov
clc
inc
popa
cmpsl
loopne
js
xchg
xor
arpl
push
out
pop
cmp
scas
push
ficompl
int3
jp
dec
lods
ffree
xor
pop
adc
mov
adc
adc
les
xor
das
movsb
cwtl
sbb
imul
iret
cmpsl
sub
test
icebp
in
xor
mov
adc
insl
sbb
pop
sbbl
pop
fistpll
sbb
lea
inc
xchg
and
pop
pop
pusha
pop
bound
jae
je
mov
sbb
clc
and
mov
ja
inc
jnp
pop
sbb
push
dec
inc
aas
jbe
aad
pop
inc
inc
push
jecxz
sub
xor
ljmp
cmp
cmp
inc
mov
loope
mov
scas
mov
jp
insb
scas
out
fldl
bound
fimuls
xchg
jg
idivb
xor
inc
in
inc
sbb
ljmp
xchg
cltd
xchg
popw
jl
nop
cli
sub
push
jg
or
clc
jb
cwtl
fmul
push
adc
lea
jno
int3
outsb
jge
cwtl
dec
lods
rorl
das
mov
repz
xchg
dec
dec
ret
pop
imul
fisttpl
sub
fwait
mov
and
into
in
xor
in
jecxz
and
jb
or
xchg
push
jns
cmc
out
ret
insb
out
push
lods
inc
adc
ror
push
daa
pop
add
cltd
push
mov
orl
jnp
jle
mov
mov
imul
stos
test
or
fdivrs
xlat
push
jle
and
xor
jbe
adc
mov
cwtl
xlat
orl
jge
fsubrs
cld
hlt
pop
cmc
push
push
xlat
or
mov
pop
mov
ficoml
jbe
sti
out
cmp
call
insb
pop
loope
scas
lret
ljmp
xor
ljmp
mov
fstpl
sbb
or
pop
jnp
jae
lcall
and
popf
rcrl
test
ljmp
in
inc
pop
dec
imul
bound
dec
jmp
inc
insl
dec
clc
rclb
add
jge
lret
mov
xchg
dec
jnp
lcall
cmp
push
rolb
jg
xchg
xchg
xor
outsl
ret
mov
sbb
je
push
xchg
xor
add
mov
aad
jns,pn
clc
ss
leave
outsl
int3
inc
add
stos
pop
scas
push
rcrb
movsb
mov
and
pop
mov
sbb
dec
pop
cmpb
lea
imul
das
or
movsl
or
dec
cld
pop
sbb
lea
incb
xorl
dec
push
sbb
mov
pop
insb
lea
xor
or
mov
pop
arpl
cwtl
mov
lods
mov
mov
adc
ljmp
out
cmp
xchg
enter
push
inc
jo
cmp
hlt
test
ss
inc
jbe
out
or
icebp
jmp
orb
cmp
mov
mov
addr16
sbbl
movsl
out
jp
cmp
and
loopne
mov
sahf
jle
pop
jl
repz
sub
rclb
das
ds
call
mov
fs
iret
jnp
and
subl
cmc
out
jmp
dec
mov
sbb
pop
lcall
in
push
icebp
or
repnz
jno
sub
sub
xlat
in
pop
call
add
fnsave
add
sub
test
outsb
stc
movsb
lods
mov
sub
mov
jl
xor
or
movsl
sbb
jo
mov
pop
test
inc
pop
outsl
cmp
and
push
jne
push
push
aam
xchg
and
test
adc
sahf
notb
out
push
shrb
lods
fs
fwait
cs
jbe
xchg
push
pop
xor
inc
pop
mov
loop
xchg
and
cmp
rolb
mov
xchg
sbb
or
pop
mov
ds
jmp
aam
jnp
call
inc
dec
inc
jb
mov
lock
jno
aas
mov
sbb
add
addr16
and
test
push
bound
or
mov
lcall
test
cmp
mov
std
aad
mov
imul
sbb
dec
test
add
aam
lcall
xor
aaa
insl
ds
xor
xchg
fwait
mov
rorb
sub
test
lods
sub
iret
ss
adcb
mov
push
loope
inc
js
jno
jne
shl
loopne
fsubr
ss
mov
xor
and
in
inc
jnp
mov
dec
cld
rolb
jne
les
pushf
sub
shll
fistpl
int
scas
push
ret
jns
fs
call
pusha
mov
cmp
xor
jno
js
bound
cmpsb
and
cmc
mov
and
add
inc
pop
aam
xchg
dec
jne
sbb
adc
pop
xor
in
xchg
ja
mov
xor
xor
sub
push
jle
xlat
dec
lock
mov
add
sbb
pop
push
aas
mov
pop
cmp
ds
jnp
data16
outsb
sbb
out
in
cmp
mov
dec
push
add
xor
imulb
test
mov
ss
mov
movsl
bound
sbb
jae
addr16
mov
roll
mov
mov
push
pusha
sub
xor
repz
les
sti
push
cmc
pushf
xchg
stc
cmpsb
and
jb
loopne
push
arpl
pop
jp
out
fildll
mov
addb
xchg
arpl
lods
dec
pop
cmpsl
cmpsb
aas
lret
or
clc
jae
push
int3
ds
rolb
scas
ret
pop
push
push
inc
je
adc
mov
push
int3
and
xor
pop
jge
and
fcoml
movsb
rorl
push
enter
cwtl
add
sti
bound
in
rcll
xor
cli
and
popa
jno
aad
movsb
les
cwtl
xchg
lret
orb
xchg
dec
sub
pop
mov
loope
jmp
sbb
adc
mov
rcrl
mov
adc
ljmp
sbb
mov
cmp
ds
loop
xor
mov
shl
in
gs
mov
popf
jno
xchg
iret
or
lcall
ret
push
or
mov
xchg
and
pop
std
gs
mov
subb
mov
inc
add
nop
mov
pushl
pop
gs
sbb
out
jp
clc
test
pop
mov
xor
mov
rorb
add
aam
mov
mov
js
push
int
xchg
inc
pusha
inc
dec
mov
lds
mov
sub
movsb
clc
mov
xlat
dec
push
jae
or
ret
jae
push
ret
ds
movsl
ror
ds
xchg
shr
insb
mov
dec
mov
mov
sbbb
rcr
add
pop
filds
xlat
mov
pop
cld
mov
cwtl
cwtl
or
sti
scas
filds
cmpsb
mull
mov
popa
pop
fdivp
cmp
add
lods
imul
cmc
mov
cltd
inc
in
test
pop
dec
xchg
repz
xor
lock
rorb
fs
testb
push
inc
lcall
adc
enter
inc
cmpsb
add
bound
pushf
adc
jge
and
fisubrl
mov
std
xor
addl
xchg
outsb
scas
fisubs
in
popf
cmp
xchg
movsl
cmpsb
xchg
das
lcall
push
ret
mov
sub
aad
cmp
sbb
xchg
add
fnstsw
push
push
xchg
popf
push
xor
rclb
cwtl
orl
xchg
lea
mov
mov
cmp
jp
lret
sbb
ror
jno
cmpsl
mov
inc
sbb
in
sub
and
cmc
arpl
mov
dec
push
xor
cmp
out
jecxz
dec
rcrl
iret
sbbb
rorl
outsb
sarb
jmp
dec
ja
push
icebp
int3
cmp
scas
xchg
pusha
daa
cmp
jmp
aad
push
mov
lock
mov
shl
or
lods
sbb
jo
sub
sbb
sub
fisttps
or
inc
test
jo
test
jno
popa
or
cmp
sub
test
inc
add
sbb
or
outsb
pop
int
mov
or
sbb
mov
push
inc
xchg
jmp
push
sbb
insb
add
insl
jmp
sub
aad
sbb
mov
push
scas
dec
mov
lret
pop
addr16
mov
fs
mov
adc
xor
shr
sub
pop
outsb
inc
add
in
lcall
sbb
jecxz
arpl
mov
inc
xchg
push
sbb
lahf
stos
ficompl
clc
das
pop
xchg
jns
xchg
mov
lahf
ljmp
pop
sahf
mov
rcll
outsl
rcrb
cli
push
cmp
les
sbb
add
clc
lcall
std
loope
xor
cli
xor
push
fsubrl
sbb
iret
xchg
jns
lea
mov
dec
pop
ss
lcall
std
mov
mov
cmp
repnz
xchg
stos
std
push
jl
pop
cmp
pop
mov
mov
mov
ss
aaa
jle
pop
inc
push
lock
jecxz
cmp
rol
cld
test
sub
dec
jecxz
stc
cmp
test
sbb
mov
imul
push
pop
xchg
sub
insb
mov
jmp
ss
lds
data16
setns
dec
mov
xlat
mov
add
faddp
iret
mov
xor
push
sbb
push
out
or
out
mov
xchg
outsl
ficompl
jmp
imul
mov
add
or
or
stos
mov
fldcw
sub
mov
sbb
ja
bound
sub
imul
push
mov
pop
aad
inc
arpl
call
jne
dec
push
pop
push
push
inc
imul
xor
xchg
jmp
mov
ret
cmp
and
push
pop
shlb
into
sbb
inc
or
loopne
xor
mov
icebp
iret
add
ss
mov
loop
repz
sub
xlat
imull
jo
jmp
arpl
pop
xor
sbb
mov
pop
out
stos
shr
adcl
dec
add
in
scas
loop
pop
cmp
jl
adc
divl
cmp
std
add
inc
roll
add
insb
shlb
fstpt
cld
inc
mov
aad
mov
mov
and
sti
lods
data16
ret
cld
addr16
and
mov
xchg
add
lods
push
mov
mov
inc
push
fisubs
push
cmpsb
pop
or
push
xchg
insb
mov
arpl
stc
add
and
jge
and
scas
pop
loope
jbe
dec
jns
pop
push
jg
das
mov
out
cmp
pop
sub
and
cmc
adc
pop
mov
shll
test
shlb
in
add
mov
mov
enter
dec
ja
ret
lret
fcoml
mov
cli
jne
lods
mov
add
mov
jle
mov
sbb
lea
cmpsb
add
add
ret
and
pop
inc
aaa
inc
out
int3
add
mov
xor
hlt
fcmovnb
dec
fdivs
inc
xor
loopne
add
fprem1
test
pop
xlat
jns
mov
pop
pop
or
xor
cmpsb
fistl
shl
lds
cwtl
lods
lret
js
push
cwtl
jmp
addr16
mov
mov
fwait
and
popf
outsl
xor
movsb
out
scas
into
xlat
repz
fiadds
sub
push
xchg
movsw
mov
in
pop
aas
pop
mov
mov
xorb
mov
pop
cmpsb
shr
push
mov
ret
xlat
test
loopne
sub
imul
adc
loopne
loop
push
sahf
sti
cmp
inc
out
cmp
add
fucom
imul
pusha
iret
js
push
out
add
stc
fs
adc
pushf
and
mov
dec
xlat
pushf
aas
mov
pop
fcmovb
fistps
inc
int3
and
add
mov
cmpsb
scas
daa
sbb
out
data16
lods
fmul
sti
jle
call
cwtl
ljmp
pop
into
adc
dec
cs
mov
bound
sub
in
insb
sbb
scas
mov
fwait
arpl
mov
jg
dec
mov
adc
mov
and
rol
mov
mov
push
xor
xchg
in
out
loope
dec
ss
bound
sti
mov
aas
push
sbb
in
or
push
dec
pop
inc
jne
repnz
jo
jmp
xchg
lret
pop
int3
pop
adc
add
xchg
jecxz
jne
xor
inc
cwtl
mov
in
mov
mov
jecxz
cs
jbe
xchg
dec
pop
sub
sbb
xchg
sbb
or
adc
leave
add
popa
pmaxub
scas
mov
xchg
fisubrs
inc
push
xor
ja
mov
loop
imul
sbb
inc
mov
mov
jle
je
and
jns
xlat
cmp
mov
aad
fs
call
inc
movsl
aaa
push
xchg
sub
imul
insb
sti
popa
loopne
xchg
loope
push
cmp
push
pushl
push
cmp
cwtl
xchg
jecxz
ljmp
insl
je
ds
ret
leave
inc
iret
sub
ljmp
add
test
fbstp
cmp
push
adc
into
paddq
in
aaa
dec
or
mov
mov
lcall
push
aad
xor
inc
bound
adc
jl
push
js
mov
cltd
out
xchg
mov
addr16
jle
inc
push
lock
push
dec
iret
std
push
gs
pop
into
cmp
add
insl
ret
sahf
lods
pop
neg
pop
outsl
cmp
adc
aad
cmp
pushf
dec
pop
scas
mov
xor
cli
cmp
adcb
lods
or
ret
pop
out
cmp
adc
in
stc
pop
push
dec
cltd
inc
stos
test
push
or
jo
adc
push
adc
icebp
add
cmp
push
ret
inc
cld
jno
ljmp
xchg
pop
dec
sub
imul
and
dec
xchg
in
push
rcll
testl
jmp
pop
xchg
mov
pusha
cmpsl
and
call
insb
lock
stos
leave
out
mov
jns
enter
xchg
sbb
loope
cld
mov
sub
xchg
xchg
xchg
repz
sub
inc
shl
mov
test
dec
and
and
jecxz
dec
cmp
mov
insl
push
lock
enter
cwtl
push
aam
pop
ja
es
mov
sub
ja
loopne
fs
xchg
cmp
sub
mov
jl
pop
ret
repnz
mov
jb
mov
out
divl
inc
testl
mov
orb
icebp
das
inc
pop
lret
mov
cs
int3
pop
inc
mov
adc
std
sbb
movsl
inc
cmp
shlb
and
ret
dec
arpl
scas
fstpl
push
std
iret
pop
cmp
jp
stos
mov
ficomps
sub
arpl
in
into
cmc
jnp
add
shlb
icebp
enter
jbe
dec
dec
enter
in
stos
and
sbbb
addb
cmpsb
cmp
pusha
test
in
cmpsb
mov
test
or
mov
rcrb
insb
insl
int3
xor
loope
mov
arpl
dec
cwtl
lds
cmc
pop
push
or
addr16
aad
lcall
rolb
mov
xchg
in
mov
xlat
mov
inc
adc
imul
push
xchg
testl
cmp
jnp
add
push
adc
push
or
add
les
lret
cmp
jnp
push
testb
lds
add
out
dec
mov
and
or
into
push
fstp
out
out
test
inc
lret
cmp
dec
xchg
jmp
mov
fwait
test
dec
repnz
add
mov
mov
js
mov
sub
adc
das
cmpsl
sbb
push
or
and
addr16
in
xchg
mov
inc
sub
lds
mov
cmpsl
mov
movsb
add
mov
inc
je
shr
iret
mov
in
insb
movb
pusha
aaa
jo
mov
repnz
or
jp
cmp
outsl
aaa
sub
sub
andl
pop
int
sbb
mov
notb
mov
addr16
movsb
sub
dec
inc
fcmovb
sahf
push
hlt
jns
pop
cmp
ret
outsl
cmp
fistl
sbb
push
inc
fwait
leave
mov
cld
lcall
push
jns
aas
in
xorl
sub
jnp
in
pusha
lea
adc
and
scas
push
cmpl
jg
ljmp
call
adc
fbstp
mov
into
add
cmpsb
mov
push
in
adc
jns
gs
lock
jne
bound
cmp
inc
cmpl
inc
xchg
jp
sbb
popf
add
xlat
xchg
sub
add
mov
dec
cmp
les
dec
pop
xlat
out
add
push
addl
movsb
fisubrs
in
mov
sbb
lret
and
or
inc
aas
das
jge
mov
stc
mov
gs
in
lret
aam
add
into
push
inc
stos
cmp
testb
fmul
mov
inc
std
stos
stc
push
and
jno
lcall
inc
mov
mov
push
add
test
xchg
inc
push
out
sbb
mov
adc
outsb
jbe
stc
jmp
outsb
sbb
push
push
xlat
movsl
test
pop
ja
aad
mov
mov
adc
lds
push
jmp
push
in
es
loop
outsb
cmc
sarb
mov
sbb
shrl
sub
sbb
fcoms
cwtl
and
testb
cli
mov
sub
in
push
pop
fisubrs
lea
outsl
icebp
adc
cmp
cs
jmp
ja
jb
dec
sbb
inc
fsubrs
pop
pusha
sbb
dec
call
call
out
nop
inc
hlt
lret
mov
jge
cmpsb
cmp
pop
arpl
mov
jo
mov
pop
push
sub
jecxz
cs
das
pop
dec
mov
pop
adc
xor
mov
sub
sub
add
jns
mov
insl
push
push
jge
push
pop
in
divb
mov
outsl
push
decb
shl
mov
pusha
xchg
insb
sti
loope
lea
out
mov
data16
ss
add
add
cmpsl
mov
push
lea
imul
nop
mov
mov
not
shll
pop
dec
shrb
imul
fs
and
repz
push
mov
mov
outsb
aam
data16
pusha
mov
mov
imul
scas
cmp
jo
addr16
lcall
fs
negl
cli
rolb
pop
loope
lcall
data16
mov
or
xor
mov
inc
imul
sub
daa
mov
in
push
sti
shlb
jmp
sti
and
stc
ljmp
add
cmpl
gs
push
cmpxchg
dec
loopne
mov
je
popa
mov
adc
std
xchg
popfw
mov
fidivrs
lret
or
jmp
push
adc
cmc
sub
jne
orl
pop
mov
pop
jo
mov
jg
stc
jne
or
sub
push
push
out
or
div
cmpsb
sub
push
in
sbb
test
or
je
enter
push
repz
fnstsw
cmp
lahf
dec
nop
popa
inc
mov
mov
sarb
or
ljmp
imul
outsl
inc
out
and
dec
mov
lea
and
and
cmp
xchg
xor
lods
jbe
fistl
pop
movsb
mov
sbb
push
adc
data16
call
cmp
mov
cmpsb
inc
scas
sarl
pop
jmp
mov
mov
out
loope
jno
popa
jg
sub
push
lcall
insb
mov
xor
jne
xchg
xchg
or
sub
out
bound
cltd
inc
scas
lea
push
aas
mov
jle
dec
sub
aad
or
mov
lods
ljmp
outsb
jae
cltd
push
sbb
add
xchg
aas
subps
jg
movsb
daa
mov
adc
fdiv
shl
enter
lea
pop
stos
cmc
xchg
ljmp
sbb
call
aaa
movl
fidivrl
inc
movsb
jmp
xor
shll
dec
inc
pushf
mov
push
cmpsb
mov
sbb
push
mov
sub
aad
or
jo
xor
xchg
nopl
in
je
mov
out
mov
divb
outsl
mov
lods
negb
sbb
and
movsb
dec
popa
jmp
frstor
cmpsb
loope
out
dec
cltd
imul
xchg
rcll
push
fdivrs
popa
xor
xor
sbb
in
sub
repnz
mov
mov
add
cmp
or
aad
mov
imul
incb
iret
jbe
lds
movsl
mov
fistpl
aad
pop
add
dec
js
mov
cltd
mov
fcomps
push
and
in
inc
mov
xor
sub
js
stos
inc
xor
movl
fwait
mov
sub
xchg
shlb
scas
pop
xchg
stos
xchg
bnd
mov
scas
cmp
lds
lret
mov
adc
dec
push
add
jbe
je
fistpl
fdivrl
add
das
xor
aam
sub
sbb
icebp
xor
mov
xchg
xor
lret
dec
mov
xchg
dec
sahf
lea
insl
int3
std
adc
cmp
scas
fbld
lret
push
lods
lock
pop
aaa
fcoms
sbb
test
hlt
sub
roll
out
dec
lods
mov
int
pop
cmp
xchg
or
lock
mov
xchg
in
mov
loopne
hlt
clc
lock
popa
idivb
lret
int3
sub
inc
ja
cld
xor
xchg
loope
xchg
xor
in
inc
pushf
ret
int
push
inc
sub
sub
scas
mov
out
fwait
xor
rorl
scas
hlt
jns
pop
int3
cmp
das
jl
out
sub
pop
or
shlb
mov
cli
dec
mov
and
or
inc
jb
mov
pop
inc
sbb
dec
cmpb
xchg
jnp
prefetch
or
fistpll
inc
sbb
int
sub
and
mov
mov
in
hlt
std
inc
jecxz
mov
mov
shrb
adc
push
ret
sub
dec
jl
aam
cli
mov
dec
lahf
push
dec
test
mov
enter
movsb
or
clc
push
xchg
sahf
sub
cwtl
dec
sbb
jno
hlt
test
mov
mov
or
loopne
mov
repz
scas
xor
stos
in
mov
or
mov
push
bound
jnp
and
fnstenv
fwait
inc
sbb
cmpsl
cmpsl
jnp
stc
push
insl
data16
call
cwtl
dec
mov
test
test
pop
adc
mov
popf
xchg
fistps
jle
mov
mov
mov
cmp
ret
lcall
popf
rclb
movsl
nop
dec
sbb
mov
in
xor
xchg
inc
pop
test
dec
rorb
or
into
pop
jmp
imul
loopne
insb
add
fs
sbb
inc
ficoml
push
movsl
lods
mov
inc
fisttps
bound
adc
adc
jb
mov
xchg
adc
sbb
mov
and
cmpsl
cmpsl
test
xchg
cltd
dec
fidivs
add
repnz
cmpsl
imul
cmp
popl
add
xor
or
movsl
jecxz
test
inc
lret
jge
xchg
jle,pn
cmp
scas
iret
in
rorb
add
or
push
and
shll
test
jae
adc
sbb
scas
inc
scas
mov
jg
jbe
les
xchg
lret
mulb
lods
es
mov
and
mov
fists
xor
adc
dec
inc
in
test
rcr
subb
push
xor
mov
popa
mov
and
inc
xlat
mov
repz
out
xor
insl
sbb
xor
dec
je
inc
fstps
loop
add
in
out
clc
push
push
xor
dec
mov
xchg
bound
das
pusha
out
pop
mov
jp
xchg
jae
roll
pop
or
push
in
ljmp
fnstenv
mov
test
insl
push
mov
out
jp
add
and
inc
push
push
inc
pop
test
out
loope
adc
daa
add
cmp
loop
jns
lcall
xchg
xchg
inc
inc
xchg
bound
sub
outsb
inc
cld
lahf
repz
lcall
push
xchg
sub
xor
push
fwait
xor
imul
jne
xor
sbb
mov
sbb
inc
dec
cmpsb
mov
aaa
repz
inc
pop
out
ret
in
ds
das
pop
xchg
les
gs
xchg
and
movsb
insb
rclb
mov
push
ss
es
lods
lods
arpl
fs
icebp
fsubs
aaa
pop
js
xchg
inc
fildl
sbb
les
loope
xchg
rcl
hlt
jbe
push
cs
xchg
fcmovb
dec
cmp
and
xadd
pusha
add
aaa
xchg
push
adc
arpl
push
push
es
mov
mov
xor
in
loope,pn
mov
cmc
jmp
sub
mov
jnp
inc
icebp
jecxz
push
repnz
mov
dec
adc
xor
pop
in
or
add
mov
dec
jne
dec
dec
iret
or
bnd
jmp
adc
pop
jns
push
sbb
mov
push
dec
movsl
rcrb
sbb
mov
inc
nop
icebp
pop
xchg
mov
es
sub
ja
add
ret
repnz
fistpll
cmp
jp
fsubs
jne
push
add
cmpb
mov
hlt
in
sbb
mov
ljmp
add
mov
shll
xor
arpl
inc
push
push
lahf
arpl
xorb
arpl
orb
adc
in
lds
stos
jge
rclb
fdivs
fldl2e
xor
ja
add
ja
xor
mov
pop
xor
jmp
mov
int
popf
xlat
ss
push
fdivrl
pop
aaa
pop
cmp
dec
leave
and
jecxz
sti
xor
test
jmp
or
xchg
or
pusha
hlt
test
push
cmp
sub
sbb
aad
je
pop
push
movsb
jo
pusha
aad
int3
and
push
sub
dec
enter
mov
or
pop
adc
sub
mov
jne
imul
mov
fimuls
sarl
loopne
pop
ret
into
cmp
push
sub
sbb
cmp
stos
or
or
lods
imul
aas
push
push
sbb
bound
jmp
leave
pop
xor
or
lea
scas
stc
stos
mov
xor
or
mov
add
aas
ljmp
pop
repz
imul
loope
ja
and
ja
pop
rcr
pop
pop
ficompl
cmpsb
push
je
jge
leave
cmc
mov
mov
and
sarb
arpl
fucomi
fwait
sub
rol
cwtl
out
push
popf
dec
sarb
sub
bound
xchg
cmp
xchg
mov
jo
js
add
stos
push
mov
fisubs
sub
xor
cmc
mov
pusha
push
mov
ds
movsl
jp
sub
pop
lea
push
std
stos
push
movsl
lret
into
pop
mov
inc
jle,pt
inc
fldt
ret
mov
push
mov
test
stc
adc
xor
inc
pop
jl
mov
scas
sbb
push
xchg
and
repz
out
das
ret
mov
xor
insb
push
fldt
cld
push
pop
xor
inc
dec
mov
outsl
xorb
data16
pop
mov
or
sbb
push
divb
shrl
test
stos
enter
pop
into
sbb
jo
xor
imul
xchg
adc
cmpsb
test
jecxz
out
lock
or
js
dec
push
into
stos
xor
shll
lods
loopne
xor
pop
jmp
xor
or
mov
sub
aad
xor
pop
pushf
xor
and
dec
xor
xchg
imul
out
inc
push
or
jmp
es
cmp
mov
pop
nop
fwait
inc
push
mov
adc
adcl
sbb
push
js
jge
ficomps
cld
imul
scas
xchg
in
enter
mov
cmpsb
mov
mov
rcl
sahf
call
inc
or
mov
pop
jge
mov
in
adc
negl
pushw
push
orl
mov
push
aaa
cli
cltd
jl
rorl
int3
mov
mov
inc
sarl
in
or
lds
pop
daa
cwtl
data16
adc
out
jae
stos
xchg
adc
push
xlat
pop
xchg
or
push
in
rol
xor
mov
xor
out
pop
or
in
mov
jg
mov
sbb
or
pop
lcall
popa
ja
xlat
cli
or
pop
cmp
mov
dec
sbb
mov
imul
mov
enter
in
mov
jle
pushl
in
shll
push
push
sbb
cmp
mov
adc
cmp
inc
jl
nop
or
in
sub
add
sahf
mov
pushf
lret
jb
test
jnp
ret
gs
or
bound
adc
call
nop
adc
pop
add
cmp
sahf
jae
jmp
cmc
mov
push
push
xchg
inc
pop
jae
push
fildll
lcall
enter
add
scas
add
and
ljmp
xor
xchg
xchg
xchg
movsb
jb
mov
nop
or
dec
inc
in
fwait
int3
pushf
sub
xor
lcall
frndint
adcb
pop
pop
cwtl
push
aam
scas
push
push
daa
or
push
ja
push
test
les
pop
pop
rcrl
cmp
mov
ss
jno
out
lahf
dec
hlt
repz
std
dec
xor
dec
sti
shrl
pusha
mov
data16
mov
xchg
cmp
icebp
ret
adc
in
enter
loope
aam
xchg
mov
in
or
lock
push
jnp
in
mov
push
mov
push
mov
jo
movsb
xor
das
push
mov
rolb
hlt
test
sbb
ret
rcrb
js
pop
push
lds
icebp
push
pop
imul
xor
mov
cmpsb
inc
jl
cwtl
jnp
dec
dec
int
jmp
cmp
or
lds
add
add
pop
mov
mov
pop
pop
sub
xlat
mov
cmc
push
mov
ficompl
aad
lods
lcall
lahf
xor
jno
add
cmp
jae
stc
mov
mov
test
dec
daa
pusha
dec
outsb
aad
mov
cmp
push
lods
imul
pop
ret
lds
mov
push
add
mov
call
out
divl
push
lret
and
js
push
les
mov
sub
mov
adc
jno
out
fcmovbe
popf
out
mov
and
dec
cmc
mov
jg
arpl
jns
fisubs
or
mov
rclb
dec
xor
in
push
scas
cwtl
es
pop
lods
push
cmp
mov
xchg
pushl
sbb
test
stos
mov
lahf
das
sti
mov
dec
adc
xchg
jl
sub
test
or
fsubs
adc
push
jle
dec
jno
dec
mov
sbb
aaa
out
mov
mov
cmp
inc
sti
call
es
dec
scas
lret
pop
push
repnz
pop
daa
aaa
ljmp
xor
mov
pop
push
or
mov
jns
push
popa
add
in
int3
xor
imul
stos
ljmp
add
inc
jnp
pop
repnz
clc
scas
aaa
inc
push
andb
daa
jno
test
test
or
lods
movsl
pop
lret
and
nop
fcompl
test
dec
xchg
and
pop
shlb
xor
xor
popa
int3
fistps
out
sub
clc
mov
pop
lock
mov
pop
pop
mov
xchg
sti
movsl
add
push
shrb
imul
stc
icebp
clc
dec
inc
mov
pop
daa
fstpl
ficoms
mov
pop
mov
loopne
sti
out
out
push
clc
cmpb
in
mov
mov
stos
mov
fistpl
imul
lahf
mov
cs
stos
jmp
int
ret
pop
sub
adc
les
adc
out
clc
cmp
cmp
jl
data16
inc
xor
outsl
aam
dec
mov
add
mov
push
jge
xor
in
pop
push
and
aam
das
mov
enter
subb
rorl
popf
add
call
fnstsw
stos
sbb
sbb
in
ud1
xor
imul
mov
lahf
inc
cmp
xlat
fcmovnb
iret
cwtl
gs
mov
mov
test
adc
fildl
and
das
xor
gs
lods
xor
adc
sub
in
fists
test
inc
mov
stos
popa
lahf
sub
in
xorl
push
mov
or
pop
mov
dec
fdivl
in
or
sbbb
ljmp
and
pop
mov
dec
cmp
mov
shlb
jmp
imul
js
push
loopne
addr16
and
mov
lods
inc
in
gs
jecxz
lods
mov
sbb
outsb
xor
fldt
dec
push
mov
loopne
mov
imul
cs
add
outsl
loope
or
adc
sti
inc
mov
lcall
fimuls
loope
js
lock
inc
lret
or
and
out
dec
fucomi
push
into
icebp
jge
lea
mov
push
mov
stc
loope
gs
fists
pop
icebp
or
ja
popa
sub
push
pop
mov
inc
in
fsubs
sub
pusha
push
lods
pop
les
and
sbb
lcall
add
daa
or
mov
test
sbb
dec
in
fdiv
push
sub
jp
int3
mov
push
adc
xchg
pushf
sbb
cmc
fistl
cltd
push
loop
sub
and
jnp
mov
xor
mov
ds
repnz
push
cmp
daa
inc
inc
dec
shl
int3
fdivs
and
mov
push
ss
lret
je
or
add
insb
mov
jo
popa
sahf
jae
int3
xor
inc
jnp
jns
push
cmpl
imul
jg
adc
push
jno
sub
ljmp
idivl
int3
sbb
fldenv
testb
mov
mov
lods
sub
aad
jecxz
mov
iret
or
or
out
ret
stos
xchg
xor
dec
jecxz
inc
mov
mov
push
cmp
lods
inc
push
xor
in
add
add
mov
mov
les
dec
stos
add
add
xor
and
xor
jne
jmp
add
jo
xchg
cld
push
lock
cli
inc
fmuls
movsb
pop
fucomi
nop
flds
pop
ds
adc
jmp
out
and
add
dec
dec
jmp
sbb
scas
pop
adc
cli
cli
dec
mov
or
jp
mov
or
mov
out
xor
lret
in
repnz
pop
xchg
mov
cmc
jl
mov
sbb
pop
popf
aam
lock
and
or
jb
mov
lcall
call
stc
jle
lret
mov
jmp
cmp
lret
inc
mov
push
mov
xchg
aaa
and
stos
dec
push
cmpsb
xchg
rcr
test
jg
jle
add
mov
ja
xchg
adc
mov
push
sub
inc
xchg
adcb
push
jne
push
mov
popa
sub
jb
adc
div
adc
sarw
mov
jg
inc
add
out
and
mov
jge
mov
or
fsubl
int3
and
movd
lea
fidivrl
cli
cli
cmpsl
dec
test
in
jp
ret
js
sub
out
fwait
out
pop
iret
mov
pop
fstl
loop
push
cmp
and
dec
cltd
push
sub
div
pusha
jbe
jbe
fildl
mov
das
push
xor
push
fiadds
rorb
scas
std
add
push
inc
pop
xchg
mov
int
xor
mov
pop
sub
decl
xchg
jo
sub
movsl
xchg
imul
push
test
imul
nop
fildl
jbe
mov
xor
mov
and
bound
repz
xorb
xchg
add
push
push
push
hlt
mov
outsb
mov
stc
mov
fidivrs
out
jg
push
stos
mov
mull
addl
repz
mov
mov
dec
rcrl
sarl
xchg
cmpsl
push
scas
mov
jo
mov
inc
sbb
stos
or
or
mov
xorb
jecxz
or
rorl
adc
or
shlb
frstor
repnz
std
cld
xchg
sahf
icebp
and
in
mov
fs
fisttpl
sbb
in
ret
lods
push
mov
dec
fimuls
push
adc
movsl
sarb
in
jnp
fsts
pop
into
or
mov
xor
hlt
or
outsb
fdivrp
add
xchg
push
int
dec
sbb
push
pop
incl
int3
pop
sti
ljmp
outsl
mov
mov
xor
mov
mov
mov
xor
jo
lcall
xchg
cmc
cltd
sub
inc
jnp
xchg
repnz
out
fistps
xchg
sub
xchg
mov
rcrl
push
popf
inc
cmp
push
push
cmpsb
sbb
stc
fs
imul
jbe
lahf
push
jl
lret
jns
sub
in
fsubl
mov
fsubrl
pusha
cmp
ss
fistpl
jbe
inc
movsl
in
mov
mov
out
rcrb
or
inc
mov
ror
jl
bound
cmpsb
bound
int
std
cmp
cmp
mov
out
or
sub
inc
repnz
lods
push
mov
mov
jg
fisttpll
add
test
ret
cmp
shlb
mov
cmp
xor
or
xor
sub
mov
add
mov
repnz
test
fdivl
repnz
cmp
stc
push
in
cwtl
add
jecxz
out
dec
pop
adc
xor
fdivs
mov
cwtl
inc
sbb
xchg
inc
lods
lods
dec
mov
xor
icebp
adc
mov
subb
out
mov
and
inc
in
mov
or
insb
int
fisttps
lret
mov
outsl
cld
int3
xchg
jno
inc
adc
jnp
sarl
cltd
mov
cmp
and
loopne
adc
pop
mov
ljmp
dec
sub
inc
mov
cmp
lock
mov
xchg
sbb
mov
mov
cmp
or
xchg
pop
loopne
test
leave
xchg
mov
sub
mov
hlt
sub
mov
addr16
ja
js
sub
sti
lea
lods
in
jmp
out
and
xchg
push
pop
dec
sbb
pop
in
pusha
pop
mov
hlt
xchg
and
js
and
mov
lret
scas
add
xchg
jb
mov
pop
xor
dec
pop
adc
test
push
xchg
xchg
nop
addr16
mov
aas
lock
cld
movsb
js
les
movsl
gs
lea
ret
fs
popf
cmp
cmp
adc
inc
sbb
cmpsb
pop
and
into
sbb
inc
or
in
mov
dec
and
test
sbb
popa
nop
sahf
push
jnp
fldcw
mov
push
mov
sti
pop
lock
or
jbe
mov
sbb
gs
xchg
int3
incl
xchg
repnz
cmp
arpl
sbb
sub
not
push
cltd
mov
lds
adc
jle
adc
movsl
push
jnp
dec
dec
xchg
pop
das
mov
outsb
inc
leave
iret
or
arpl
int3
pop
mov
jae
gs
adc
mov
scas
adc
mov
int3
fs
clc
mov
aas
adc
add
sub
mov
adc
fs
push
mov
and
int3
pop
fmull
loop
test
das
movsb
es
jae
xchg
and
lret
test
xor
movsb
push
and
pop
xchg
push
xor
jne
jbe
sahf
ljmp
das
mov
jnp
fs
into
dec
fsubs
sub
stc
stos
ljmp
jne
xorb
pop
xorl
or
popa
mov
int
and
mov
xchg
js
daa
inc
cmpsb
dec
aas
sub
fistl
mov
mov
loopne
and
pop
mov
scas
cmpsb
outsl
out
inc
and
jge
xchg
rcrl
inc
sub
dec
cwtl
out
inc
dec
adc
xor
dec
mov
enter
pop
dec
repnz
mov
xor
jae
lahf
push
aaa
mov
jne
popa
pop
roll
movsl
mov
popf
sub
mov
and
pop
test
iret
push
mov
pusha
xchg
insl
mov
push
push
insb
mov
mov
sahf
cmp
inc
call
fwait
stos
mov
test
sti
scas
xchg
popa
sar
bound
xor
into
cs
fcoms
outsb
int3
push
movsb
jb
leave
jl
push
int3
cmpsb
inc
xchg
in
pslld
mov
cmp
test
lret
es
sti
leave
push
fisttpll
sbb
cmc
push
xchg
mov
or
pop
out
inc
in
sarl
shrl
dec
xor
in
mov
sti
push
aam
cmp
or
jbe
xor
cmp
test
pop
lcall
ja
dec
into
xchg
mov
stc
jmp
xor
push
dec
in
test
cmp
xor
jb
jmp
mov
imul
lds
negb
mov
je
addb
push
mov
out
mov
mov
sbb
mov
mov
shlb
hlt
test
into
pop
or
in
int
mov
inc
aas
nop
and
and
mov
cmpb
mov
inc
test
xchg
add
cmp
mov
outsl
aad
stos
loope
sbb
cmp
pop
insb
lock
dec
lcall
arpl
mov
negb
mov
subb
insb
lds
iret
lret
es
divl
adc
gs
push
rcrb
and
shrb
mov
jbe
lods
inc
pusha
repnz
popl
scas
and
adc
lock
test
adcb
cs
adc
mov
ds
popf
push
push
lahf
sbb
or
cmp
pop
sti
jecxz
adc
mov
mov
stc
pop
cmpsl
sti
aam
jp
imul
adc
mov
xlat
aad
iret
push
cmc
and
mov
dec
jbe
bound
and
pop
lret
dec
fsubp
mov
out
sub
ds
call
aad
sbb
cmc
xor
mov
cld
cmp
or
xchg
addb
xor
pop
mov
inc
test
jnp
popa
sbb
push
pop
pop
xchg
inc
sub
or
lods
leave
scas
mov
xchg
call
xor
push
pop
pushf
leave
pop
repnz
mov
push
jmp
add
or
adc
add
aaa
outsl
lcall
mov
mov
mov
push
xor
sbb
fstpl
jl
xchg
test
shrb
dec
fsubl
subl
std
int3
pop
pop
jb
aam
cmpl
cmc
inc
loopne
xchg
pop
daa
shll
rclb
mov
fcoms
sub
loopne
ds
out
movsb
popl
fs
sahf
sub
jne
pop
ret
lcall
push
insb
ffreep
adc
sbb
test
fidivrl
push
lock
sti
imul
and
xor
and
mov
sti
les
jg
addr16
leave
jecxz
adc
pop
push
lods
dec
ja
inc
fwait
push
lcall
mov
into
pusha
enter
fimull
fimuls
clc
mov
mov
gs
stc
and
and
cmp
jo
add
mov
ror
xor
xchg
fnstsw
sub
in
imul
mov
mov
xlat
jg
adc
cmp
jb
test
sub
push
test
and
fidivrl
out
sub
int
lods
imul
pop
pop
jecxz
lahf
xor
pop
pusha
addb
xchg
imul
or
add
jmp
pop
inc
xor
dec
sub
adc
orl
iret
inc
jl
mov
mov
stos
cmp
pop
and
inc
adc
mov
insb
mov
lds
fisubrl
dec
aaa
pop
mov
mov
divl
mov
cmpsb
rorl
ret
je
hlt
sbb
outsl
je
pop
mov
clc
push
in
pop
iret
jae
push
out
fiaddl
dec
test
xor
lret
sub
xchg
adc
roll
sbb
jecxz
sbb
popa
mov
popa
push
mov
dec
inc
or
adc
std
rolb
shl
out
jb
cmc
in
mov
loope
insl
fnstcw
mov
sbb
outsl
out
and
adc
iret
xor
adc
les
imul
js
fnstcw
jmp
lods
lcall
mov
pop
test
adc
cs
lcall
movsb
rol
or
movsb
xor
aas
imulb
or
push
mov
stos
mov
fisttps
xor
stos
test
cmpsl
insb
cwtl
rcll
movsb
adc
repnz
insl
dec
sub
inc
ret
push
push
mov
sbb
adcl
xchg
adcb
dec
movsb
cli
push
adcl
sub
loope
xchg
inc
add
cmp
std
mov
ja
mov
add
adc
fstps
repz
mov
out
mov
nop
lock
test
les
daa
jle
mov
pusha
inc
xchg
nop
xchg
mov
fs
insb
loope
insb
outsb
pop
jmp
push
arpl
mov
cmp
and
pop
sarb
sub
cmp
stos
cmp
mov
jg
add
xor
fadds
sbb
dec
mov
jmp
aas
lret
push
cmpb
stc
sub
cltd
add
sbb
pushf
gs
push
sbb
cmp
mov
pop
jmp
pop
mov
mov
inc
adc
outsb
sub
jo
and
xor
sbb
add
jae
bound
ret
dec
icebp
andl
imul
mov
or
cmp
ret
repz
imul
out
and
insb
stos
in
jl
icebp
ja
cmpsl
cwtl
loope
xor
sub
sbb
dec
repnz
mov
dec
jle
movb
and
and
loope
stc
push
mov
jnp
mov
inc
pop
mov
stos
mov
xor
cltd
dec
inc
sub
jle
cmp
out
xchg
xchg
mov
inc
daa
ja
ror
cmp
cmp
add
xchg
pushf
mov
loope
fwait
inc
cmp
cld
adc
test
add
popf
sarb
jp
or
xchg
pop
push
xchg
xchg
xor
std
loopne
push
jne
pop
jge
loope
loopne
test
pop
dec
push
incl
xor
sub
add
sarb
in
mov
mov
idivb
sahf
fsub
dec
std
pushf
jl
popa
nop
lea
aas
and
mov
cli
mov
call
movsl
loopne
inc
lock
mov
cmp
mov
push
sub
jl
cwtl
cwtl
imul
popf
jecxz
xchg
pop
dec
shll
jae
or
and
cltd
jmp
inc
push
inc
push
and
adc
push
addr16
mov
xchg
in
scas
bound
rol
test
in
rcll
adc
inc
inc
ficoms
cmp
cmp
sub
push
push
and
adc
stos
sahf
lret
out
ss
add
mov
loop
in
shl
lods
insl
test
sbb
pavgw
inc
popf
pop
movsb
mov
cmpsb
and
sbbb
mov
test
ret
push
or
dec
xchg
mov
sahf
out
mov
bound
mov
test
jae
pusha
push
imul
add
jp
mov
jo
sar
and
test
nop
jnp
adc
int3
aam
jge
xchg
add
mov
or
sub
cli
lock
sarl
mov
xchg
repz
mov
mov
sub
les
sbb
sub
xchg
xor
ja
fcmovne
cmpsl
push
push
ss
mov
imul
push
mov
jmp
jae
cltd
jl
jp
pop
adc
ret
xchg
loopne
pop
cmp
ss
ljmp
pop
cmp
mov
ficomps
dec
push
jbe
mov
cld
jge
insl
sub
mov
fisttpl
cmp
or
cmp
sti
dec
sbb
adc
dec
out
out
sub
dec
imul
add
fcmovnu
sub
mov
dec
addr16
xchg
mov
pop
out
imulb
ficoms
xchg
je
cmp
inc
xor
push
gs
pop
clc
pusha
sub
cmp
jne
scas
das
push
popf
outsb
xlat
scas
cmpsb
pop
pop
jl
and
scas
daa
dec
xor
push
aad
xor
xor
mov
frstor
push
xchg
jl
repnz
push
loope
sbb
cmp
and
sarb
cltd
rorb
lods
mov
xor
or
sbb
add
je
bound
mov
lea
jg
and
lret
int
dec
lock
stos
lret
rorl
pop
aam
pop
testb
xor
push
push
loop
cli
testb
in
mov
out
inc
mov
aam
and
lea
jl
andl
mov
fdivs
cmpsl
rcrl
push
mov
das
dec
jp
sbb
cmpsb
mov
mov
or
push
pop
clc
stc
mov
dec
push
push
push
lahf
insl
lcall
lds
scas
loope
mov
imul
xchg
jo
cmpl
and
mov
sbb
sbb
dec
les
jmp
jno
test
push
imul
fisubl
or
mov
leave
mov
into
clc
lods
stos
fdiv
push
outsb
lahf
gs
fsincos
mov
popa
push
ja
rcrl
shrl
subb
inc
repnz
in
cmp
or
mov
fcompl
inc
das
and
mov
call
mov
outsb
enter
inc
insb
sub
jo
daa
repz
adc
shll
or
cs
pop
bound
lods
dec
sbb
adc
dec
xor
mov
lcall
jns
push
and
loop
sbb
jnp
sbb
ret
fwait
adc
testl
xor
lahf
loop
mov
cmp
mov
icebp
jle
push
mov
jb
push
fwait
push
into
out
xor
imul
mov
pushf
sbb
hlt
adc
mov
icebp
les
xchg
les
adc
dec
pop
or
cmpsl
aad
xor
cmp
xor
stos
jne
jae
sbb
out
outsl
out
clc
xchg
cltd
and
mov
add
enterw
insl
mov
sbb
aam
bound
iret
outsb
push
aaa
and
or
js
pushf
fsubrl
inc
add
aam
lods
rorb
cmp
inc
push
push
lret
dec
loop
mov
and
mov
enter
stc
adc
lcall
popa
mov
fcmovnbe
lea
adc
pusha
orb
mov
adc
mov
loopne
mov
fiaddl
xchg
popa
arpl
cmp
fidivrs
add
stos
jnp
mov
outsb
cmp
loop
addr16
sub
or
dec
mov
pop
outsl
pop
decb
lock
sbbb
mulb
js
pop
enter
xchg
pop
ljmp
lret
pop
mov
and
mov
adc
rorl
mov
mov
pop
shrl
fdivrl
es
fsubrl
rol
push
pop
call
repnz
scas
fucomi
sbb
jl
jge
and
adc
rcrl
push
cli
inc
das
inc
cmp
mov
mov
mov
sbb
enter
jb
daa
jnp
jecxz
push
test
jb
stos
rcll
enter
orb
lds
sbb
mov
ficompl
cmp
fs
out
cltd
jle
stos
movsb
inc
out
jp
lods
fstl
aad
scas
pushf
in
inc
iret
lock
fsub
fwait
xchg
cmp
push
xchg
xchg
cwtl
out
icebp
repnz
sbb
addb
popf
orl
mov
pop
xlat
fisubrs
dec
loop
mov
sub
lods
subb
std
add
fistpl
add
mov
pop
cmp
cltd
scas
lcall
jno
adc
add
and
sub
stc
sar
jo
stos
push
aad
mov
pop
movsl
adc
mov
push
rol
pop
lods
out
pop
lahf
aam
int
hlt
lds
rol
dec
inc
popf
lcall
pop
dec
ljmp
nop
pop
cwtl
add
scas
inc
fs
add
aam
imul
adc
fistps
sbb
fcoms
lret
push
dec
in
loop
sarl
jnp
test
iret
mov
hlt
mov
aam
shld
es
outsb
cmp
adc
cmpsb
inc
lea
mov
jbe
in
or
mov
push
rolb
nop
cld
xor
clc
add
pop
mov
imul
inc
movsb
movsb
fs
push
sub
arpl
je
shll
push
fs
lret
dec
mov
xchg
mov
outsb
sub
clc
ja
adc
push
pop
jnp
push
add
or
dec
jnp
pushf
adc
push
es
xchg
loop
in
xor
lock
out
fs
movsb
imul
xchg
add
fs
and
insl
hlt
inc
inc
outsl
adc
push
jnp
shufps
fldl
cmp
xchg
popl
daa
push
loope
push
or
lods
shrb
jnp
test
in
std
pop
xchg
sti
mov
enterw
js
dec
mov
mov
jns
mov
or
and
aaa
addr16
out
std
fsubrs
out
adc
adc
mov
divl
inc
popl
mov
mov
in
mov
sbbb
aas
mov
jno
ret
ljmp
inc
cmpsb
sub
xlat
jge
or
or
adc
pand
push
subl
cld
int
test
testb
add
enter
pop
and
xchg
inc
or
fsubrl
and
pop
adc
mov
shl
cmp
or
sub
ds
inc
dec
insb
sarl
xchg
hlt
xchg
inc
orb
mov
adc
popa
outsl
loopne
mov
dec
jle
cmp
jns
fisttpl
mov
outsl
cmc
jo
lahf
jnp
and
mov
ljmp
lcall
and
or
mov
cmpl
aam
das
mov
mov
stc
loop
or
mov
mov
jbe
xlat
jge
faddl
jae
sarb
lds
cli
leave
push
pop
xor
addb
movsb
xor
sbb
sbb
dec
add
sbb
scas
enter
mov
loop
sbb
add
add
in
fmuls
mov
xchg
inc
aaa
test
dec
cmp
jmp
into
mov
adc
push
dec
mov
dec
lret
sub
jbe
lret
lcall
outsl
inc
adc
sbb
daa
cltd
push
and
out
insl
jg
in
xor
push
test
movsb
std
mov
jno
and
add
lea
xchg
in
lcall
jge
mov
fdiv
sub
or
loopne
cmpsl
sbb
call
mov
mov
cmpsb
pop
lret
hlt
mov
push
pop
mov
mov
cmp
and
jg
dec
xchg
dec
jbe
dec
adc
mov
pusha
inc
mov
mov
mov
inc
inc
lret
mov
jmp
push
push
lods
inc
dec
data16
or
or
je
fs
push
fmull
ja
mov
add
jb
sbb
dec
daa
mov
incb
pop
xor
jl
mov
or
popa
add
jl,pt
push
sbb
jg
cmp
push
pop
sbb
xlat
add
cmpsl
add
cmpsb
lcall
mov
inc
dec
fstl
imul
into
repnz
pop
pop
insb
clc
fs
sbb
adc
dec
jle
or
jmp
mov
in
mov
iret
in
mov
pusha
inc
rcl
ja
stos
out
cld
jnp
xchg
subb
xor
sub
xchg
cmp
popa
inc
xchg
out
pop
jl
ljmp
lret
movsl
in
xor
nop
call
push
inc
aas
xor
lods
jle
dec
and
pop
mov
mov
addr16
daa
sbb
mov
xchg
inc
xchg
lods
mov
leave
jo
or
cld
mov
shrl
push
push
xor
jle
movsl
sbb
add
pop
es
push
xchg
and
ss
arpl
pop
addr16
out
mov
movsl
js
add
jne
mulb
out
pop
fdivrl
mov
imul
lds
ret
and
mov
sub
add
xorl
mov
pop
ljmp
mov
push
adc
bound
jecxz
add
lea
ja
xor
cmp
icebp
add
in
popa
fisubrl
imull
aaa
outsb
imul
jnp
filds
or
mov
xchg
jns
adc
lret
test
sti
xchg
adc
jl
adc
rol
sahf
aad
mov
rcll
es
dec
mov
adc
test
cmc
enter
rorb
dec
inc
jecxz
sub
cmp
pushf
dec
mov
leave
outsb
test
movsl
aad
mov
pop
jge
stc
aaa
fistl
cmp
roll
aaa
pop
data16
insb
jl
dec
test
add
sbb
inc
lahf
loop
mov
scas
arpl
mov
test
clc
loopne
push
sbb
dec
xor
cmp
lods
pop
icebp
test
or
rol
rol
orl
in
xor
ja
pop
xchg
and
mov
sbb
dec
cmp
jae
and
enter
jecxz
sbb
je
pop
mov
rolb
sub
or
pop
pushf
pop
xor
int
push
and
push
negb
mov
lahf
fs
mov
dec
orb
sbb
std
xchg
int3
das
cmp
jbe
push
jle
arpl
xor
xlat
xchg
sub
xor
loop
sbb
fdivs
lods
mov
loop
js
inc
pusha
inc
xor
in
rolb
hlt
out
dec
leave
rcrl
pop
out
xchg
ret
mov
cli
jnp
mov
ret
pop
sbb
in
lds
out
popa
les
rcrb
and
pop
icebp
call
adc
push
leave
les
fxch
or
and
dec
into
pop
jnp
or
insl
movsl
leave
adc
in
or
leave
mov
rcr
rclb
out
inc
loopne
mov
add
loope
iret
adc
mov
fdiv
pop
pushf
xor
out
shl
push
xor
outsb
xor
in
mov
jno
push
xchg
fbstp
inc
cmpsb
lret
scas
and
cs
lods
lcall
dec
pop
aam
mov
jns
mov
lcall
xchg
push
pop
pop
leave
push
mov
jl
cld
or
mov
mov
aaa
call
cmpsl
rcrb
andb
outsb
xor
cmpsb
enter
ret
repnz
fisubrl
cmpsb
lahf
addr16
cltd
jnp
icebp
jnp
bound
pop
mov
push
sahf
fs
das
jb
mov
lret
fdiv
out
ret
stos
mov
cltd
jmp
call
fwait
and
xchg
jae
mov
add
into
inc
mov
cld
in
jp
adc
push
jbe
insl
dec
movsb
cmp
mov
jbe
xchg
inc
cmp
lahf
lods
push
and
es
xor
je
jae
add
scas
and
mov
mov
sbb
sbb
xchg
pop
lret
mov
dec
repnz
push
jo
jge
iret
addr16
call
or
xor
xchg
push
xchg
jmp
in
aaa
jae
jo
xor
mov
pop
mov
sub
loopnew
outsl
adc
imul
xchg
cld
pop
stc
insb
mov
mov
imul
push
and
xor
inc
sub
stc
in
jno
push
aas
and
push
leave
sub
pop
setnp
ror
sub
sbb
call
orb
mov
add
out
pop
int3
cmovns
or
in
iret
adc
push
ret
addr16
icebp
insl
jmp
repz
dec
dec
jl
or
add
jg
std
cs
mov
xlat
js
pop
mov
dec
pop
fwait
xor
sub
inc
pop
cwtl
xor
ss
mov
into
or
cld
daa
js
jo
out
mov
das
scas
out
add
mov
pushf
hlt
imul
stc
clc
out
xchg
loopne
mov
pop
leave
dec
mov
out
fsubl
js
lret
fwait
push
aam
push
mov
xchg
loopne
sub
sub
and
aam
cmp
mov
in
push
sub
sub
movsb
sbb
lea
insb
mov
std
es
or
adc
cmc
imul
loope
and
jle
add
aam
lods
pop
fimull
or
cmp
fldt
xchg
adc
loope
adc
repz
and
push
lcall
add
repnz
sub
mov
into
das
test
arpl
ja
push
pop
insl
mov
dec
adc
into
pop
repz
push
scas
push
insl
adc
pop
aaa
fimull
push
sbb
popf
pop
mov
or
pop
xor
scas
push
sbb
cld
cld
or
std
leave
gs
cmp
ljmp
test
fnstsw
sbb
mov
sti
loope
jns
enter
enter
push
sbb
lea
sub
scas
mov
and
loopne
cmp
adcb
repz
push
xchg
jb
inc
addr16
add
inc
or
dec
sarb
in
test
test
sbb
xor
test
stos
fsub
ds
sbb
mov
mov
movaps
or
sub
adc
jne
sub
enter
loope
mov
ljmp
cmp
adc
jo
or
ljmp
adc
cld
dec
adc
loop
push
push
push
sub
notb
jmp
xor
fnsave
xchg
dec
push
cmp
adc
adcl
fidivrs
hlt
pop
js
add
cld
jo,pn
jnp
ret
insl
pop
inc
aaa
aas
cli
pop
pop
xchg
mov
imul
not
out
fnstcw
arpl
imul
ret
push
ret
arpl
scas
sub
dec
cmp
xchg
hlt
jns
stc
inc
cmp
jns
sbb
cmp
lret
cwtl
add
std
daa
lret
aad
cmp
jle
adcl
xchg
xor
sub
cs
mov
sbb
sbb
adc
ret
inc
fdiv
push
jl
mov
pop
sub
dec
xor
adc
aad
mov
sbb
into
fsubs
ljmp
cmovb
xor
test
xchg
insb
push
sbb
mov
loopne
test
sub
subb
mov
js
adc
movsl
mov
lods
xorl
push
leave
setge
mov
xor
xor
jbe
add
inc
jne
ljmp
fsubl
adcb
inc
sti
scas
mov
jp
xchg
dec
lcall
cld
in
std
pop
ljmp
cwtl
sub
inc
addl
insb
sahf
mov
mov
mov
btr
and
xor
ficoms
push
dec
dec
sbb
inc
xchg
aaa
push
mov
xchg
dec
pusha
insl
insl
es
dec
sbb
xor
inc
enter
mov
popf
jmp
sbb
sahf
in
xor
inc
dec
add
adc
cs
sbbl
xor
mov
repnz
lret
sbb
sbb
vaddps
inc
popa
jge
dec
in
adc
inc
repz
cld
push
cmc
xchg
js
cld
es
dec
cli
loopne
cmpsl
adc
mov
out
pop
xchg
mov
mov
cmpl
jge
in
jmp
adc
nop
les
mov
int
push
imul
xor
push
jl
call
pushf
insb
in
jmp
jnp
or
dec
xor
out
cli
xlat
repnz
outsb
into
or
js
push
pushf
sbb
es
mov
mov
jae
add
mov
mov
sub
mov
scas
inc
aad
aaa
push
pop
fdivrl
and
loopne
cli
lahf
xor
stc
lock
jne
in
pop
in
sahf
inc
rcll
sarl
arpl
test
out
testb
push
push
pop
test
movsl
fnstcw
jns
push
xlat
sub
push
xor
jecxz
jne
aad
gs
mov
jmp
jmp
popf
repz
mov
cmp
push
cmp
pop
push
sbb
mov
cmp
adc
pop
xchg
fcmovu
inc
push
test
lock
xchg
ss
shlb
adc
fidivs
sti
adc
arpl
push
enter
shrb
sub
jns
push
inc
scas
lretw
push
sub
ficompl
lods
pop
jne
test
lds
mov
daa
les
mov
sbb
mov
mov
sbb
push
push
cld
iret
cwtl
mov
faddl
mov
sbb
or
pop
dec
daa
jmp
sahf
fimull
cmpsl
push
xchg
aas
add
cmp
sbb
call
push
push
ret
dec
pop
adc
movsl
or
mov
mov
jl
inc
pushf
cmp
cmp
pop
outsb
inc
mov
js
push
xchg
fnstcw
fdivl
cmpsb
aaa
push
adc
sbb
dec
fisttpl
sub
out
cld
cwtl
je
push
cmc
in
fdivrs
clc
and
mov
jb
lods
cmp
fwait
jecxz
jns
sbb
call
scas
push
push
int
out
jne
daa
frstor
sbb
mov
jge
lcall
in
dec
xchg
call
out
aam
pop
scas
rolb
call
cli
ficoms
je
sbb
cli
dec
xor
mov
data16
adc
inc
ficoml
pop
cmc
out
sub
add
lret
dec
dec
or
dec
jecxz
dec
jl
psrlw
lods
mov
movsb
push
jmp
add
dec
and
movsb
xchg
jge
insb
push
arpl
clc
adc
pop
inc
jne
outsl
cmpsb
sub
insl
and
pop
pop
mov
cmp
ds
mov
push
jmp
stos
sub
pop
lods
xor
cli
out
sbb
inc
adc
sub
dec
gs
das
mov
je
bnd
cwtl
cld
imul
adc
and
lea
and
mov
sbb
aam
subl
gs
mov
add
aam
and
inc
cmpsl
sbb
pop
lcall
ret
gs
movsb
jbe
jnp
add
sub
std
mov
sub
test
push
imul
dec
xor
pop
inc
in
jp
adc
jae
xchg
stos
popf
shrl
xor
ljmp
stc
in
rcr
into
outsl
fwait
ret
sub
add
aaa
faddl
pop
ljmp
aam
xor
rolb
stos
mov
pop
xor
mov
repnz
mov
lds
inc
fisubl
xchg
or
in
popa
cltd
dec
dec
xchg
mov
out
ljmp
stos
cmp
mov
lods
testb
fwait
adc
insl
addr16
int3
or
imul
shl
repnz
iret
cmc
je
inc
popl
movsb
mov
lea
cltd
mov
xchg
loopne
ja
cmc
out
jae
outsl
out
aaa
aas
lret
inc
std
fadds
sbb
jp
add
pop
sub
and
rclb
cltd
or
cld
mov
push
mov
cmpsb
sub
sahf
mov
push
jmp
clc
push
adc
push
pop
lret
addl
jle
and
xchg
dec
insb
mov
push
pop
ljmp
inc
sbb
daa
inc
insb
movsl
inc
fldenv
add
sbb
in
addb
xchg
mov
and
imul
sub
stos
arpl
xor
adc
jecxz
or
sbb
cltd
jne
ds
xor
outsb
sub
imul
addr16
out
je
xchg
sub
and
mov
bound
aas
hlt
cmp
icebp
inc
sar
jae
int3
xchg
xchg
jmp
pop
pop
enter
repnz
jp
or
fs
orb
mov
fisttps
lcall
adc
push
clc
or
mov
stos
cmp
dec
enter
call
sahf
lods
je
cld
cwtl
out
push
shlb
leave
pop
insb
insl
jns
or
add
loopne
lods
fildll
mov
sbb
lods
loop
inc
adc
adc
int3
sub
outsl
popa
xchg
into
lea
sbb
add
push
loopne
mov
dec
addr16
icebp
dec
or
push
lret
sbb
lock
frstor
into
sbb
bound
adc
xor
les
lods
insl
insl
fdivl
loope
inc
xchg
ret
and
rcll
pop
lods
call
mov
fbstp
pop
in
or
or
xor
xchg
and
scas
lcall
or
es
lods
cld
adc
mov
sbb
lods
int
xchg
xchg
lret
test
movsb
arpl
dec
adc
lods
mov
mov
aad
loope
or
mov
arpl
mov
inc
ret
push
inc
loope
mov
jecxz
push
mov
fwait
out
cmp
in
out
xor
in
push
pop
das
lahf
fidivrl
mov
les
js
shrb
sub
xor
cltd
cmp
pop
lock
lcall
lahf
rcrl
inc
shl
in
lcall
lcall
pop
hlt
mov
cmpsl
sub
gs
inc
stos
das
push
and
mov
mov
shrl
movsl
hlt
sbb
test
ja
xchg
push
adc
xlat
sti
in
cli
fisubrs
cwtl
je
lret
fwait
inc
and
push
or
xorb
hlt
repnz
cli
imul
arpl
jne
push
sbb
out
sub
pop
ficomps
xchg
inc
test
fstpl
jnp
loope
ds
scas
arpl
shl
adc
sbb
and
insl
adc
ljmp
mov
mov
mov
std
and
mov
popa
cmp
add
xchg
jnp
sahf
pusha
bound
pop
push
push
lret
dec
adc
ret
scas
fstpt
and
fcmovne
loop
fstpt
lret
jg
and
ja
out
xor
cs
orb
sub
xlat
push
in
pushf
add
sbb
subb
pop
inc
pop
loop
addl
clc
mov
jno
xchg
push
push
mov
inc
stos
add
rolb
jo
cmovl
mov
repz
ret
mov
stc
ds
mov
xchg
push
aaa
pop
xor
lcall
int3
mov
adc
in
loope
add
add
mov
mov
dec
push
pop
sti
bound
cli
loopne
push
sbb
mov
pop
sub
lcall
aas
fwait
les
daa
push
icebp
or
in
mov
aad
jecxz
dec
lret
or
fcmovnb
xor
mul
jae
jp
lds
inc
fisttps
and
das
adcb
out
fisubs
pop
add
out
enter
or
mov
sbb
dec
jle
outsb
aaa
xor
lds
dec
loopne
xchg
add
adc
mov
sub
xlat
in
popf
js
xor
cmp
or
sub
inc
ds
or
sub
inc
rorl
mov
int
lock
mov
mov
mov
jp
idivl
pop
and
sub
js
pop
pop
add
cmp
fiaddl
push
mov
dec
outsb
sub
shll
sub
sub
mov
xor
xor
repz
push
mov
mov
mov
int
cmp
jae
std
pop
push
xchg
dec
fs
sub
out
daa
pop
movb
pop
jb
push
dec
cmp
loop
xchg
xchg
dec
inc
je
adc
ds
push
push
sub
pop
add
imul
xchg
xchg
aas
aad
jle
cs
aad
pop
subl
loop
dec
push
subw
inc
add
lods
iret
outsl
ja
xchg
add
push
movsb
mov
cmp
jns
xor
mov
fs
pop
scas
imul
inc
js
push
hlt
les
xlat
js
jae
mov
insb
adc
lret
add
ret
push
mov
pop
lock
popf
repz
pushf
popl
mov
sbb
or
loop
test
rclb
into
cmp
jb
es
add
lcall
xchg
int
mov
dec
push
pop
sbb
xor
xchg
ss
inc
push
sbb
xchg
inc
sbb
and
sub
testb
test
mov
mov
insl
in
mov
pop
in
iret
fimull
cwtl
add
jmp
lret
andl
cmp
fstl
xchg
xchg
or
shll
mov
mov
sub
sub
js
xor
inc
daa
ficoml
lret
and
addr16
jle
push
mov
or
mov
pop
addl
fmuls
lock
push
mov
xor
xchg
jne
out
shlb
add
xchg
sbb
imul
adc
dec
xlat
push
add
ret
testb
sar
sbb
and
cmpsl
adc
add
dec
lods
stos
stos
rcrl
and
push
mov
and
out
xlat
mov
fisubl
jg
pop
movsb
pop
lea
add
subb
pop
lea
notb
xchg
xchg
sub
popa
push
push
test
cld
jp
test
adc
jae
adc
pop
popf
sub
mov
sub
xchg
idiv
jg
and
pop
xor
leave
stc
out
pop
dec
cmp
js
cmc
notl
cmp
dec
push
xchg
mov
mov
inc
push
test
inc
leave
cmp
out
fisubrs
or
stos
rol
lcall
pop
stos
inc
rep
mov
sub
lea
sar
fsubr
mov
adc
xchg
pop
dec
negl
popa
and
or
mov
popf
repnz
inc
std
rcl
cltd
arpl
shrb
imul
pop
cltd
adc
push
adc
jae
add
roll
or
mov
mov
out
xor
push
stos
mov
push
inc
scas
push
rcrl
movsl
scas
repnz
mov
cmp
adcb
in
sub
and
ljmp
mov
faddl
xor
adc
cmc
mov
or
insl
inc
or
mov
fisubrl
js
lret
sbb
nop
and
cmpsb
and
mov
push
decl
push
sbb
loop
adc
popw
inc
inc
imul
sbb
and
mov
inc
gs
dec
adc
jmp
xor
jbe
fsubr
nop
filds
hlt
lret
movsb
iret
sbb
lahf
out
jge
ret
fnstcw
call
mov
call
ficoms
clc
dec
jg
adc
popf
sbb
cltd
movsl
cmp
xor
int
nop
aam
mov
dec
loope
pop
hlt
dec
lea
xchg
mov
sbb
push
pop
outsl
adc
sbb
je
repnz
test
popa
xchg
movsl
mov
das
insb
call
xchg
int
sbb
adc
aas
sub
add
dec
push
in
movsl
and
ret
mov
ds
jl
or
test
sub
mov
xor
adc
mov
sbb
cltd
xor
out
daa
xlat
int
ret
mov
inc
dec
mov
add
jns
arpl
mov
cmpb
adc
popf
aaa
dec
out
lock
pop
dec
shll
mov
inc
mov
outsl
fcoml
nop
dec
imul
jbe
mov
xchg
out
xchg
xchg
xchg
clc
inc
mov
mov
push
and
daa
daa
fwait
iret
fwait
stos
dec
cmpsl
adc
xchg
jno
dec
push
sbb
mov
adc
adc
sbbl
cmp
inc
sbb
or
mov
xor
xchg
add
mov
dec
pop
sbb
movsl
cld
out
jns
mov
jbe
inc
ja
leave
and
or
adc
push
fidivl
scas
jns
test
and
insb
jae
jle
imul
stos
inc
aaa
test
test
cmp
cmpsb
pop
and
or
mov
push
test
mov
movsb
sbb
mov
ja
push
js
sbb
stc
in
inc
xchg
loope
jo
mov
dec
adc
or
in
mov
std
imul
clc
mov
mov
or
jb
mov
lods
xor
outsl
push
or
mov
flds
pop
ljmp
inc
lods
imul
loope
xchg
adc
xchg
adcb
mov
mov
in
pop
outsl
mov
sbb
lock
iret
push
lret
fs
fwait
jle
push
inc
mov
scas
jo
sbb
iret
inc
sbb
pusha
push
jmp
or
shll
cmp
inc
loope
push
and
mov
ret
push
pop
test
jg
sbb
pop
aad
cwtl
gs
stos
adc
mov
pop
aaa
cmp
lahf
jge
lret
movsb
rcll
mov
push
xor
test
clc
movsl
mov
mov
sarl
add
mov
dec
or
sub
test
or
outsb
shrb
push
test
pop
shlb
lret
jl
adc
add
or
mov
or
push
loop
mov
adc
mov
dec
or
das
mov
mov
push
mov
in
es
pusha
cmpsl
fistpll
xchg
pop
mov
push
push
xor
xchg
divl
pop
pop
and
cmp
movsl
or
clc
fldcw
and
fiadds
mov
mov
aam
xor
jle
jnp
or
push
movsl
lret
pop
xor
test
fstpt
loope
jno
jge
mov
cmp
ret
inc
push
jo
push
ja
xchg
mov
popa
cmpb
jno
jns
adc
fmull
dec
add
mov
insb
idivb
adc
xor
and
or
negb
popa
mov
inc
pop
push
push
jge
das
cltd
pop
inc
lret
push
fbstp
shlb
test
xchg
jb
jo
insb
sub
mov
pause
cli
movsl
jo
sub
out
cmp
adc
jnp
dec
and
into
mov
lcall
insb
divl
jae
dec
xchg
mov
inc
push
add
mov
aam
mov
ja
fisubrs
mov
mov
mov
and
push
shl
or
dec
push
mov
les
seto
and
jns
mov
in
int
xchg
sub
pop
mov
sahf
xchg
jae
aas
addl
sti
sbb
pop
fwait
data16
add
add
inc
mov
sbb
sub
push
sbb
sbb
jae
lock
cmp
lret
shll
int3
and
js
pop
pusha
pusha
xchg
leave
test
pcmpeqb
cmp
lds
inc
dec
mov
je
pop
jo
sarb
mov
aad
add
cmp
test
dec
dec
stos
cmp
je
inc
mov
sub
push
rclb
ljmp
pop
sub
mov
clc
dec
in
aaa
jne
outsb
rol
lahf
fidivrl
dec
gs
inc
gs
push
stos
and
shl
mov
and
mov
aaa
sbb
insb
lods
dec
pop
dec
int
jl
sub
jae
jecxz
lods
and
fwait
cmp
add
int3
cld
insl
jae
jne
shrl
mov
sahf
dec
jl
orl
bnd
mov
jg
shll
inc
push
scas
in
cltd
shrl
mov
enter
or
ret
subb
lods
lcall
scas
fisubs
add
shll
push
xchg
movsl
mov
pop
sub
test
pop
cmpsl
push
shrl
mov
int3
stc
lds
or
out
sub
stc
icebp
mov
repnz
cltd
pop
shlb
movsb
mov
cmp
inc
aaa
push
movsl
sbb
xchg
test
ja
jle
jp
pop
xchg
adc
xchg
orl
push
das
pcmpgtd
xor
pop
or
jle
xor
outsb
movsb
mov
push
jmp
mov
sub
jbe
mov
mov
insl
mov
sub
fsub
mov
xor
or
and
dec
and
lret
stc
inc
dec
xlat
lcall
adc
ja
movsb
idiv
xor
mov
push
cmpl
loope
mov
int
gs
sbb
cmp
lds
sbb
or
dec
push
xor
arpl
add
push
mov
js
push
lock
ffree
inc
push
xchg
dec
add
cmp
mov
lds
and
test
les
push
insb
outsl
push
mov
or
mov
iret
cmp
mov
xor
xlat
push
icebp
cs
sub
lock
and
cmp
pop
dec
popf
sub
mov
jo
std
testb
ret
clc
mov
arpl
adc
jg
stos
mov
xchg
mov
mov
std
jge
outsb
lea
adc
enter
inc
inc
repz
jbe
loopne
out
insl
xchg
add
ljmp
cltd
jnp
fdivr
jne
mov
jmp
inc
cmp
mov
es
scas
lret
jae
mov
sub
or
mov
mov
movsl
fstpt
cmpsb
dec
cltd
xor
mov
mov
mov
rolb
inc
int3
xchg
out
pop
xchg
or
dec
pop
jo
mov
jno
jo
rcl
lahf
std
and
scas
adc
sub
mov
push
pop
inc
sub
lock
push
or
adc
shlb
jbe
in
pusha
pop
mov
xor
or
xchg
fnstsw
int3
cmp
pusha
mov
xor
inc
cmp
imul
mov
xor
insb
in
addr16
sbb
stc
mov
lods
out
lods
xchg
xor
jo
es
loope
scas
out
pushf
popf
stc
lock
shr
jecxz
mov
gs
lcall
popa
dec
mov
sub
andb
addb
cmpsl
mov
or
push
enter
fldenv
mov
imul
cmpsb
pop
cmpsb
push
push
mov
shrl
xor
pop
pop
sbb
jb
mov
or
xchg
adc
mov
mov
mov
icebp
jmp
jae
xchg
pop
shrb
sbb
add
mov
dec
stc
push
cmpsl
push
inc
lcall
testl
decl
insl
jl
shlb
daa
loope
out
cmp
pop
dec
outsl
mov
das
stc
xchg
xor
insl
dec
cmp
in
push
shll
popa
mov
sub
nop
pop
lret
xchg
mov
cmp
adc
out
and
xchg
and
jns
jg
ret
cmpsb
out
pusha
jbe
sub
out
sub
mov
xor
mov
push
sbb
cs
cmp
insl
jns
jno
xchg
dec
in
xchg
pop
push
adc
jnp
jnp
iret
cmp
cmpsl
jg
xor
mov
adc
sbb
ja,pt
xor
jb
mov
ds
dec
jnp
cs
fcmovnu
jle
out
ljmp
xchg
scas
xchg
iret
inc
subb
mov
out
mov
xchg
inc
int
ret
dec
push
mov
cmp
icebp
lret
xor
mov
push
jae
sti
or
test
sbb
scas
lock
popf
dec
pop
jp
loope
mov
je
rcl
dec
testb
cmc
clc
jno
push
je
xor
movsb
inc
shrb
lods
fs
xchg
movsb
rcr
shl
xchg
movsb
out
mov
or
push
sahf
and
aaa
jle
dec
in
movsb
xchg
addb
xchg
or
mov
add
pop
in
ljmp
dec
loop
mov
rcl
test
push
fs
insb
jp
or
and
add
hlt
loopne
je
mov
cmp
xor
ret
bound
int3
int3
fdivrs
test
push
js,pt
lods
rcr
pop
pop
cli
push
mov
loop
ja
jb
cmpsl
cmpsl
cltd
mov
int
and
insb
inc
idivb
mov
iret
and
ja
adc
imul
jnp
push
sub
movsl
mov
push
mov
xchg
loope
inc
bnd
push
in
mov
add
fcompl
lret
pop
cmp
lcall
jle
mov
scas
jmp
or
push
ds
imul
out
ret
pop
mov
ficoml
out
out
mulb
mov
pop
pop
cmp
push
aad
mov
xor
sub
clc
add
mov
lock
cmp
cmpsl
adc
push
push
jnp
das
cltd
lods
push
mov
dec
xchg
xor
lea
add
cmpb
sarl
adc
jmp
pop
add
inc
test
clc
clc
enter
fildl
mov
mov
aas
push
push
sar
pop
fucomi
mov
lock
test
in
enter
cld
outsl
pcmpeqb
lods
and
movsl
xchg
mov
xor
xor
add
das
cmp
xchg
push
in
fbld
es
fisttpl
xor
lret
xor
insb
dec
mov
pop
cs
mov
daa
outsl
hlt
add
lcall
icebp
inc
inc
jp
mov
and
push
outsb
dec
push
sub
js
divb
and
shll
mov
mov
adc
fsubrs
fs
imul
imul
in
nop
stc
mov
add
sbb
dec
fnsave
adc
test
popa
stos
sbbb
pop
stos
cmp
imul
add
pop
lret
add
dec
lahf
cmp
mov
sbb
or
sub
pop
sar
mov
pop
mov
mov
negl
xlat
push
jae
fildl
push
popa
inc
jne
mov
sarb
test
xchg
xor
imul
dec
xchg
cmp
pop
adc
mov
clc
push
daa
inc
jnp
dec
mov
repnz
lock
test
pop
mov
jnp
subb
jne
lcall
rcrb
push
mov
mov
and
test
cltd
test
mov
dec
cmp
jecxz
adc
jg
sub
cmp
adc
insb
push
push
fsubl
push
test
push
add
pushl
negb
jno
dec
sar
in
xor
int3
jge
jns
test
mov
imul
adc
lods
mov
fbstp
dec
loop
ret
cmpsl
adc
adc
jge
sbb
sbb
cs
add
test
pop
je
cs
jae
sub
mov
hlt
ljmp
xor
lods
es
xchg
idivb
push
data16
jo
xchg
stc
fucomip
imul
sbb
pop
jge
lock
test
call
push
mov
rorb
jb
notb
mov
rorl
pushf
add
mov
or
inc
repnz
cmc
loope
ror
sti
mov
popf
xchg
repz
jne
sub
pop
mov
cmpsl
pop
jl
notl
pop
cmc
mov
or
imul
sbb
das
cmpl
pop
repnz
movb
pop
imul
mov
jge
jl
popa
xor
jo
fnstsw
lds
inc
mov
ret
lea
lret
fwait
or
jle
push
xor
repnz
fwait
mulb
popl
mov
cli
lods
cltd
fisubrs
jo
pusha
call
jecxz
pop
jmp
leave
mov
mov
scas
fwait
dec
or
add
sub
subb
xchg
jge
sub
dec
inc
or
stc
or
lcall
int3
lret
inc
repnz
push
call
imul
pushw
lcall
ja
xchg
push
dec
and
in
jp
push
cmp
xor
xchg
push
je
adc
push
pop
cmp
pop
orl
ds
add
sti
mov
and
cmp
and
cmp
dec
mov
push
jbe
fbstp
test
test
ljmp
stos
adc
dec
xchg
xor
out
lcall
out
mov
pop
in
sbb
xchg
xchg
shll
inc
fcompl
pop
std
mov
repnz
xlat
out
in
insb
out
pop
pusha
out
in
and
push
out
sar
aam
insl
inc
es
xor
cmp
push
push
sub
out
mov
or
cld
into
xchg
push
and
sub
dec
ficomps
cmp
out
and
cmp
dec
xor
inc
sub
addr16
cmc
in
xchg
aam
mov
push
lods
setg
jo
dec
jecxz
cld
insl
xchg
inc
sub
mov
cmc
bnd
sbb
mov
cmp
mov
sub
sub
or
cmp
clc
divb
xor
aad
sbb
mov
stos
mov
cltd
mov
into
divb
cmp
dec
pop
shl
mov
push
leave
pop
out
das
mov
stc
iret
sti
fldenv
mov
hlt
mov
in
and
dec
adc
addb
test
jno
pop
cld
add
mov
aaa
shl
fnstsw
sub
cmp
fs
sbb
in
lea
les
or
ds
sbb
push
lods
adc
movsb
mov
inc
cld
sbb
nop
xchg
mov
pop
notl
push
in
push
mov
ja
out
frstor
lret
dec
xor
lods
enter
adc
jnp
into
dec
push
push
and
xor
mov
mov
sub
pusha
cmc
rolb
sti
shll
mov
mov
xchg
pop
pop
push
dec
mov
xchg
lret
xchg
push
cs
xor
push
test
fs
sub
xor
dec
push
std
das
xor
out
lock
sti
push
popf
imul
sub
cli
adc
or
jnp
pop
xchg
hlt
push
mov
xchg
mov
push
idiv
dec
or
aas
xchg
repnz
mov
ss
lcall
push
adc
mov
popf
mov
adc
xor
push
leavew
imul
es
mov
pop
shl
lret
in
mov
fdivrl
mov
sbb
dec
xchg
mov
test
sub
jne
aam
lret
out
cmp
mov
out
lret
outsb
ss
xor
inc
lret
in
dec
outsb
adc
push
hlt
out
ljmp
outsl
jns
cltd
dec
jl
adc
out
test
mov
cltd
sbb
and
mov
fwait
addr16
jle
cmpsl
mov
xchg
sbb
in
push
mov
mov
enter
sar
inc
lds
cltd
nop
movsb
inc
fistps
lcall
roll
jo
pop
mov
push
or
push
fldenv
cmp
and
std
add
xchg
pop
ret
push
cmp
jp
cmp
dec
out
mov
sub
pop
or
inc
ja
pusha
insl
mov
femms
mov
add
mov
jno
testl
sbb
enter
mov
mov
lock
sub
mov
mov
push
mov
inc
aas
test
je
mov
movsb
mov
std
mov
ds
and
jbe
dec
mov
cmp
push
enter
push
adcl
int3
inc
mov
mov
dec
add
imul
dec
lock
or
fdivrp
adc
arpl
jno
lea
cmp
in
inc
lock
das
xchg
test
idivl
mov
xor
inc
xchg
sbb
and
cwtl
pop
ljmp
add
push
outsl
push
add
cltd
mov
dec
cmp
clc
movsl
add
dec
out
xor
cmpsb
loopne
mov
js
jns
lods
std
cmp
ficoml
pop
mov
push
cmp
loopne
push
push
ss
xor
and
mov
testb
jge
xor
dec
jno
sub
pop
jp
mov
sbb
and
ss
pop
scas
xor
cwtl
add
repz
jp
jae
and
dec
mov
add
loopne
lahf
add
jns
add
mov
shrb
mov
out
cmc
mov
sub
test
cmovae
scas
xlat
adc
inc
out
out
sbb
mov
fmul
inc
add
and
add
movsl
sub
or
shll
imul
mov
mov
mov
or
popa
add
hlt
pop
lret
dec
imul
xor
cmp
adc
jg
stos
je
fnstenv
in
sbb
jns
jae
dec
ja
adc
insb
sbb
xchg
cmpsl
lods
lret
xchg
pop
jno
imul
or
push
mov
clc
int3
repz
cmp
dec
arpl
xchg
adc
lret
mov
shrl
or
dec
sub
ficompl
add
data16
xchg
jle
jae
add
inc
data16
test
fidivrs
mov
shlb
jl
lret
scas
mov
pop
sub
mov
fld
std
icebp
mov
mov
xor
xor
outsl
repz
xor
cmp
je
inc
adc
push
xchg
dec
das
loope
xor
inc
jmp
cmp
and
mov
sbb
cmp
pop
dec
dec
iret
cmpxchg
mov
sbb
imul
outsb
push
imul
dec
inc
stos
pusha
cld
mov
adcb
pop
subb
push
lret
sbb
push
jmp
mov
jnp
xchg
cwtl
sbbb
or
divl
cs
sar
cmpsb
in
cmp
enter
push
xchg
jmp
mov
mov
cmp
cmp
mov
sti
jno
popf
test
unpckhps
ret
out
enter
nop
mov
ljmp
dec
xchg
pop
mov
ret
inc
test
push
loopne
xchg
mov
dec
jmp
jno
pushf
mov
fs
cli
or
push
repz
testl
mov
mov
mov
daa
xchg
xchg
push
gs
mov
pop
mov
adc
int
mov
lret
dec
sub
adcb
cld
ret
sbb
push
negb
insl
nop
or
adc
std
mov
dec
mov
icebp
lcall
cmc
xchg
dec
loop
sub
push
jne
gs
cli
in
imul
or
inc
movsb
jbe
movsb
push
in
add
pop
sahf
movsl
es
jb
lcall
out
lods
mov
test
xor
xchg
sub
and
xchg
sbb
arpl
out
push
ret
ja
jecxz
jb
mov
sbb
out
adc
enter
loope
sbb
jno
filds
dec
loop
outsb
inc
mov
mov
jmp
pop
jmp
dec
roll
xor
repnz
pop
pop
nop
cli
mov
mov
mov
jbe
sbb
sbb
mov
cmp
jl
fs
lcall
adc
ljmp
cmpl
test
fsubs
sub
push
into
lods
andb
je
and
cmp
inc
dec
jecxz
addl
ja
jbe
xlat
jl
in
ds
jge
std
enter
pop
das
sbb
arpl
jns
loopne
out
push
mov
arpl
sbb
add
sbb
call
repz
push
outsl
or
xchg
fimull
jae
scas
mov
lahf
popw
ret
mov
xor
xchg
loopne
mov
add
std
daa
jno
inc
gs
shr
or
insb
mov
cmp
mov
sbbb
stos
shrb
or
dec
adc
cmc
cmp
div
sbbl
sbb
mov
rolb
and
adc
or
push
arpl
adcb
xor
cmpsb
pop
cmc
cmp
repnz
cmpsl
xor
mov
jl
xchg
and
add
shlb
jb
leave
es
lahf
fisubl
mov
push
xlat
ret
xor
aas
fsubl
mov
and
xchg
fwait
inc
nop
call
adc
test
dec
lret
cmp
fcomp
mov
pop
lods
mov
stos
pop
xor
xchg
ljmp
dec
inc
into
cmpsb
in
icebp
hlt
adc
pop
das
movsl
or
enter
lea
xor
sbb
enter
rcl
mov
push
push
lret
or
fwait
mov
push
fs
int
arpl
repz
jb
xchg
mov
and
bound
cld
cli
stos
or
mov
arpl
pop
mov
or
aad
into
aas
in
dec
inc
lods
adc
stc
xchg
pop
test
mov
fcomi
sbbl
jns
scas
rcll
pop
aaa
pop
in
xchg
negl
pop
adc
fucomp
inc
pusha
adc
xchg
cs
test
xor
js
xor
lret
jns
push
pop
mov
nop
in
bound
push
pop
jle
pop
and
test
adc
lock
xchg
or
lret
jae
popf
cmp
push
shlb
rclb
cmpsb
dec
aam
xchg
loope
test
test
shl
inc
stos
cld
gs
adc
aas
xchg
addr16
stos
test
in
mov
stos
lock
and
xchg
sar
jmp
mov
fisttpl
data16
pop
jle
ss
cmpsl
xchg
dec
inc
sbb
daa
lods
aad
shll
sbb
cmpsl
ja
icebp
inc
int3
bound
pushf
std
jns
mov
mov
test
dec
mov
sbb
cmp
pop
xchg
xchg
rcrb
adc
pop
lods
mov
cld
adc
sti
ss
mov
test
jo
pop
pushf
xchg
stc
fwait
fs
les
cmpsl
mov
std
sub
je
inc
lret
mov
outsb
sbb
xor
leave
movl
sti
lds
scas
orb
dec
mov
loopne
push
sbb
stos
and
and
cmc
cmp
shl
mov
adc
das
mov
fstl
shll
cmp
out
ja
cmp
fimuls
jbe
dec
cmp
call
outsl
mov
lahf
xor
divb
mov
into
inc
jecxz
and
push
pop
into
cmp
lahf
and
push
loope
or
jp
mov
xchg
loopne
jne
dec
fistpll
ja
iret
sahf
xchg
or
outsb
sarl
sub
rcrb
test
push
pop
sbb
jecxz
int
mov
aad
pop
leave
addr16
and
insb
pop
hlt
or
loopne
inc
cmpsl
call
sbb
mov
cmp
pop
jp
inc
gs
cld
pop
xchg
mull
push
mov
adc
pop
test
mov
and
cmpsl
push
jns
xorb
pop
push
out
mov
xor
mov
cmp
gs
out
push
add
in
jns
xchg
mov
js
jno
lcall
and
lret
sub
imul
test
or
imul
push
push
xor
push
cmp
stc
test
enter
inc
pop
fidivrl
inc
in
imul
pop
lods
mov
hlt
adc
xchg
pop
sahf
sbb
adc
notb
jae
jl
jg
arpl
loop
lea
hlt
push
sub
cmp
xchg
rorl
xor
cmovno
test
mov
xchg
fists
sub
pusha
test
imul
dec
xor
push
pop
and
outsl
sbb
add
addr16
jno
das
push
int3
out
popa
dec
fildll
fsubl
mov
or
in
nop
icebp
jb
stc
push
sub
insl
sub
pop
push
mov
inc
add
jne
lcall
dec
jmp
sbb
pop
ret
add
popa
lea
aaa
xor
sarl
inc
adc
inc
and
imul
mov
retw
cmpsl
out
jnp
pushf
test
mov
inc
xchg
or
imul
addl
xchg
lds
setb
lods
outsb
fisubrs
mov
scas
jge
imul
aad
and
push
jnp
adc
mov
arpl
sub
pop
cmpsb
pop
lock
cmp
mov
loopne
test
inc
jle
adc
mov
dec
fwait
les
and
sub
mov
das
and
sbb
fimuls
add
xor
int
push
cmp
pop
cmpb
dec
in
imul
cwtl
cmp
jl
mov
jmp
mov
out
cmp
hlt
xorb
addl
push
dec
push
rol
cmpsb
and
arpl
rcrl
popa
out
mov
cmc
scas
neg
movsb
cmpsl
mov
mov
add
out
pop
mov
ss
dec
mov
xchg
loop
movsb
pop
hlt
xchg
es
daa
xor
shll
pop
push
push
push
es
out
out
pusha
cmpsl
cmp
je
js
jg
outsb
and
push
sub
test
push
ret
fs
mov
sub
jl
mov
insb
mov
jns
lock
jle
psubusw
out
push
shl
iret
and
push
sub
es
pop
pusha
mov
out
sbb
mov
cmp
jne
or
push
fidivrs
or
mov
sbb
ljmp
xchg
adcl
sbb
jp
xor
test
xor
out
pusha
ss
in
mov
mov
pop
mov
mov
push
mov
int3
repnz
testb
push
cmp
pusha
xor
pop
out
add
nop
xchg
lret
nop
popa
fwait
loop
sub
das
or
ds
mov
stos
ficoms
fiaddl
inc
mov
or
adc
out
dec
notl
movsl
push
sub
filds
mov
jno
jne
loopne
fwait
cmp
mov
add
jl,pn
add
ds
adc
dec
stc
ficompl
jno
fsubrs
add
add
inc
adc
call
mov
lret
in
pop
mov
fnstenv
mov
stc
mov
inc
imul
xchg
outsb
imul
cmc
lock
mov
cmp
ficomps
adc
je
adc
xchg
mov
mov
xor
test
and
xchg
xor
xchg
jo
push
mov
popf
es
mov
mov
leave
mov
sbb
xchg
mov
sub
or
scas
adc
shl
outsb
addr16
rclb
imull
jb
pop
inc
ss
les
or
sti
pop
std
ljmp
and
inc
add
pop
mov
dec
js
fisubl
inc
repnz
icebp
mov
sbb
icebp
push
sub
mov
or
sbb
mov
and
jbe
push
cmp
push
cld
jae
add
subb
dec
lock
les
cwtl
adc
and
int3
ja
mov
cmc
pop
fcomps
jnp
rorl
push
sub
lods
or
inc
lds
test
sbb
in
mov
shlb
loopne
mov
pop
mov
stos
dec
push
lods
aad
inc
arpl
cmpb
or
adc
pop
dec
pop
xchg
pop
push
fdivr
out
repnz
cmp
add
and
loopne
stos
cs
testl
xchg
sysexit
adc
loopne
or
inc
add
lea
jecxz
cld
add
adc
sti
shl
mov
icebp
in
jl
aas
aaa
addl
test
inc
in
lods
out
mov
xchg
mov
stos
subl
aad
ficompl
fcmovnu
and
jg
cs
movsl
push
mov
and
loope
addr16
fisubl
jecxz
test
add
ja
pushf
dec
adc
and
adc
jnp
stos
fisttps
aaa
imul
movsl
frstor
or
loopne
lret
ds
out
ss
push
push
in
jge
pop
cmp
nop
mulb
pop
inc
jae
jl
mov
jecxz
jb
mov
inc
insl
incl
sahf
imul
sbb
jecxz
xchg
inc
xor
adc
lret
imul
lock
inc
out
add
adc
xlat
dec
sbb
adc
cmp
mulb
fs
ret
fildl
stos
jge
lret
loopne
xor
adcb
inc
outsb
push
fbstp
dec
dec
xor
out
jmp
jne
inc
div
mov
jp
fimuls
das
bound
mov
fildll
push
cs
add
add
or
and
pop
inc
push
xor
insb
mov
or
lods
decb
mov
in
add
adc
mov
cmp
pop
ja
loop
or
xchg
mov
fistpll
jne
ja
mov
inc
addr16
dec
xchg
push
mov
stos
inc
lret
mov
bt
mov
mov
mov
mov
inc
pop
xchg
mov
add
mov
jmp
or
fs
bound
cld
sub
insl
xchg
or
sub
mov
jnp
sub
or
fwait
inc
jo
and
rorb
jmp
push
ss
add
sub
stos
icebp
dec
in
lcall
add
call
outsb
push
out
clc
mov
into
sti
pop
add
adc
sub
pop
roll
adc
mov
cmp
pop
xchg
sbb
push
cltd
call
and
mov
mov
mov
push
mov
inc
xchg
cmp
jo
imul
sub
lcall
rolb
mov
jge
clc
cmp
adc
jo
imul
jo
jle
xor
aaa
scas
adc
add
fcoml
dec
test
add
stos
es
imul
jns
mov
inc
fcmovb
arpl
scas
mov
ljmp
pop
and
cwtl
sub
roll
insl
in
fucom
in
adc
test
xchg
fldt
mov
jo
jb
sub
pop
mov
mov
in
sbb
or
inc
inc
jle
cmp
addr16
pop
dec
jns
icebp
les
mov
sub
popa
pusha
fidivrs
out
adc
out
push
movsb
jnp
mov
mov
xor
jmp
jmp
or
sub
popf
cs
xor
jge
dec
enter
out
jecxz
xchg
xor
jns
mov
shlb
das
jae
sub
or
or
sub
lods
and
sti
pushl
pop
add
shll
cltd
or
dec
in
in
jecxz
js
lret
mov
mov
sbb
lea
and
mov
sbb
imul
dec
xchg
and
ss
nop
pop
xor
mov
lcall
mov
test
xchg
stos
icebp
sub
stos
fwait
sbb
xor
jmp
test
nop
add
ret
cmp
inc
push
or
push
pop
jl
and
sub
ret
orb
push
shll
in
jmp
aas
mov
out
mov
xchg
cltd
sbb
aas
pop
inc
push
push
cwtl
repnz
fdivs
lock
jmp
push
out
jl
pusha
sbb
inc
mov
jecxz
lret
gs
cmpb
mov
adc
jmp
mov
xor
and
gs
bound
and
int3
call
lds
je
jbe
int
or
ss
push
out
mov
xchg
pop
popf
movsl
neg
xchg
in
insb
les
div
push
xchg
nop
je
mov
popa
popf
ljmp
fucomp
inc
dec
xor
mov
mov
jno
shl
lea
sub
cmp
sbb
fidivs
push
lcall
push
xchg
inc
movsl
inc
repz
mov
aam
dec
push
inc
xor
cmp
jne,pn
or
not
fdivrp
daa
add
mov
cmp
add
shlb
or
fstpt
in
dec
push
mov
das
out
pusha
sub
cmp
aas
ret
sbb
dec
mov
dec
lea
int
mov
jno
pop
xor
sbb
fmuls
push
jo
hlt
push
cwtl
nop
dec
outsl
test
pusha
jecxz
out
adc
xor
ds
sbb
ja
loopne
out
call
lret
fsubrs
faddl
fldenv
int
fdivrp
cs
sbb
stos
hlt
sbb
cmp
nopl
leave
adc
xchg
lahf
fistl
mov
ret
jo
push
xchg
dec
cmp
int
or
sub
pushl
imul
sbb
hlt
ret
fnstcw
cltd
cwtl
pop
inc
loop
lret
fdivrp
aad
pop
gs
jnp
cli
inc
jns
pushf
adc
lods
cmp
pop
mov
ret
jae
dec
xchg
jl
lea
mov
out
hlt
out
adc
shl
mov
movsl
jae
fnstenv
mov
dec
cs
js
lock
lods
fcoml
adcl
adc
pop
fdivs
inc
cmp
jae
movsl
sbbb
lret
jl
push
push
push
inc
incb
mov
ffree
sub
and
mov
xor
and
jb
test
testb
or
rcr
pop
dec
mov
jns
bound
adc
imul
out
outsb
xchg
scas
divb
imul
negb
data16
xor
jecxz
sbb
repz
or
aas
mov
sub
xchg
cmp
xor
jb
or
out
xor
pop
leave
mov
test
loope
cmpsl
inc
leave
out
fisubl
push
ljmp
rorb
jle
into
xorl
scas
ljmp
sub
lock
or
mov
in
jns
mov
push
out
nop
mov
cmp
or
gs
dec
inc
mov
cmpsb
pop
test
dec
mov
cmp
movsl
shll
dec
mov
xor
dec
cmp
xchg
into
push
jle
jmp
gs
mov
scas
push
sbb
mov
push
pop
mov
and
cli
jmp
pop
repz
mov
cmpsb
repnz
pop
movsl
out
lds
or
daa
enter
and
and
jg
push
adc
shl
int
stc
shll
sub
adc
sbb
push
pop
jl
mov
mov
cmpsl
repz
fwait
repnz
xor
adc
inc
xchg
shrb
fwait
xlat
stc
fsts
icebp
rorl
out
cmc
out
adc
cld
aad
jp
gs
mov
sbb
in
lcall
inc
sub
mov
push
adcb
cmp
jp
adc
fcoml
xchg
mov
add
imul
imul
aad
inc
mov
push
loope
jg
test
mov
jle
jmp
xchg
xchg
daa
out
hlt
scas
pop
push
jecxz
and
lods
mov
xchg
aam
mov
shrb
push
add
push
decl
jge
cmpsb
out
or
sub
xchg
icebp
int3
push
jne
fldt
cmpsl
pcmpgtw
mov
ja
maskmovq
sbb
pop
mov
sbb
ja
aam
js
push
lods
add
pop
cmp
ret
add
and
push
xor
pop
mov
jno
inc
inc
xchg
outsb
xchg
inc
js
scas
int3
sub
push
xorb
cs
mov
aas
notl
jmp
mull
ret
push
jbe
adc
mov
mov
subl
insb
sar
mov
aas
jg
int
inc
cmp
mov
jge
push
ljmp
roll
fwait
mov
jae
aam
sbb
movsb
xchg
sub
movsl
xor
test
nop
arpl
dec
imul
cmp
repz
mov
jo
movb
inc
sbb
pop
push
push
mov
cmc
push
test
filds
jle
test
cwtl
sub
jp
sbb
out
dec
hlt
push
or
or
mov
sub
inc
fdivl
leave
call
roll
test
xchg
aaa
gs
scas
scas
sub
xchg
outsl
daa
inc
scas
enter
pop
pop
sub
or
lcall
mov
inc
xchg
inc
adc
imul
in
lahf
lahf
lock
popf
inc
adc
ds
test
frstor
push
int
negb
lret
add
push
pop
popa
push
xor
jne
bound
dec
cli
push
into
bound
enter
mov
shll
mov
xor
movsb
or
inc
cmp
fsubrl
sub
mov
mov
xchg
mov
inc
adc
jg
dec
and
dec
test
loopne
jo
cld
inc
inc
insb
add
sbb
xlat
lock
pop
popf
icebp
test
mov
sbb
outsb
jle
xor
int3
icebp
push
xor
sbb
stos
cmp
cld
in
inc
rorb
mov
outsb
loop
repnz
ficomps
fisttpll
sbb
lret
and
jecxz
test
int3
aas
push
mov
xlat
daa
inc
xor
lcall
jp
clc
test
push
or
test
pushf
sub
add
dec
out
imul
push
popa
pusha
mov
mov
out
orb
dec
loope
icebp
sbb
testb
movsb
repnz
das
cmp
test
mov
cmp
push
test
push
jg
sbb
xor
addb
add
inc
mov
rcrb
bndldx
sarl
enter
or
adc
loop
idivl
dec
xor
xchg
stc
lods
cmp
ffreep
gs
lret
into
xor
push
hlt
addr16
pop
pop
out
int3
push
and
movsl
dec
push
push
sub
jl
fnsave
test
pop
int3
stos
and
aaa
dec
call
push
movsl
xor
inc
outsb
pop
lds
xlat
call
push
inc
cmp
test
add
leave
mov
xor
mov
popa
inc
in
repnz
and
addr16
mov
adc
and
xchg
clc
lahf
cli
cmpsb
or
dec
mov
or
mov
xor
pop
pushf
out
outsb
sub
daa
fcmovu
arpl
sbb
pop
pop
inc
push
inc
stos
das
shrb
filds
sub
fidivrs
dec
faddl
out
popa
push
fs
sub
xchg
std
int3
xchg
pop
aam
cli
lret
sub
push
cltd
mov
lea
lahf
inc
inc
jnp
cwtl
sub
and
add
fs
jle
out
out
std
movsl
fwait
xlat
mov
inc
push
movsl
icebp
test
imul
mov
dec
sar
adc
sahf
inc
loope
mov
mov
test
repnz
mov
fcmovnb
mov
mov
inc
add
pusha
jae
xor
sub
sbb
hlt
add
stc
jge
xchg
cli
xchg
mov
and
xor
cmpsl
xchg
xchg
stos
pop
daa
scas
cmp
dec
aad
mov
fmull
xor
sbb
imul
sub
cmp
dec
inc
push
inc
xchg
movsb
out
inc
sub
out
insl
or
mov
inc
sbb
imul
sub
mov
or
dec
mov
mov
add
push
movsl
sub
push
cs
xchg
stos
negl
xchg
mov
jmp
cs
mov
test
push
fdivs
pop
in
int3
scas
adc
push
xorl
stos
je
das
cmp
jns
jle
sahf
pop
jg
xchg
mov
sbb
lea
lret
sbb
mov
lret
lods
mov
pusha
sub
cmpl
js
push
mov
shlb
pusha
ss
mov
jne
xchg
repz
mov
mov
test
pop
cmpl
ret
mov
and
jns
int
ljmp
add
add
je
lods
cmpsb
pop
mov
inc
insl
cli
lds
mov
cmpsb
mulb
sub
repz
loope
in
and
pop
pop
push
stos
pop
push
sbb
je
rcrb
ljmp
inc
adc
iret
orb
jle
jo
pop
mov
mov
inc
lcall
jl
imul
test
xor
into
mov
mov
or
ret
jle
mull
cltd
out
pop
add
hlt
bound
pushl
hlt
or
sarb
inc
sbb
dec
mov
cmp
lahf
sub
mov
pusha
add
pop
jnp
aam
fisubrs
sbb
mulb
lahf
daa
stc
mov
sub
outsl
scas
inc
mov
or
or
add
push
enter
fs
xchg
sub
xchg
fdivr
movsb
inc
jo
dec
cwtl
fsubr
sub
data16
imul
lret
and
rcrb
adc
dec
jg
rcrb
scas
loope
cwtl
mov
ja
jl
lcall
inc
push
int
push
outsb
jne
enter
popa
jbe
imul
sub
xchg
rolb
fwait
imul
sti
inc
popa
pusha
leave
sub
jno
std
daa
jb
outsl
sub
xchg
std
fistpll
sarl
lods
adc
and
je
jne
xor
push
lds
mov
out
mov
aad
xchg
enter
mov
loope
and
and
jmp
pop
aaa
test
jb
sub
lock
cli
mov
imul
add
out
ljmp
push
popf
call
mov
outsb
out
mov
push
jmp
adc
shl
xorb
jno
xchg
xchg
xchg
imul
pop
call
dec
sbb
mov
cmp
pushf
es
dec
lds
imul
fucom
sahf
testl
xchg
xchg
cmpsb
xchg
popf
lods
jp
in
loop
fstpl
push
testl
mov
call
ljmp
cmp
mov
adc
mov
divl
and
sti
outsb
sbb
inc
and
mov
lahf
shlb
ja
sarl
or
lret
clc
add
mov
xor
xchg
std
sti
adc
repz
push
sbb
mov
push
nop
push
adc
cli
push
imul
shlb
les
jb
or
xor
adcl
adc
push
insb
enter
pushf
sar
mov
outsl
xor
inc
leave
xchg
sarl
jmp
popf
pop
xor
dec
pop
mov
add
inc
xorl
aaa
test
pop
jmp
mov
xor
lock
test
pop
inc
stc
xchg
les
mov
je
push
mov
adc
outsb
jle
loopne
arpl
sbb
push
mov
jnp
into
mov
mov
push
lods
push
dec
jge
xlat
lret
and
mov
mov
loope
out
cmp
mov
ret
gs
sahf
decb
mov
add
sbb
xchg
add
mov
sub
pop
pushf
in
jecxz
inc
xor
xor
addr16
dec
mov
jne
cmpsl
mov
mov
test
fwait
es
outsl
jg
imul
dec
nop
lods
icebp
sub
inc
mov
aaa
jae
sarb
imul
orb
int3
mov
mov
mov
xchg
xor
int
xor
std
int
push
popa
xor
orb
into
imul
out
mov
loopne
jge
pop
sub
imul
daa
jb
popf
imul
push
mov
pop
adc
incb
add
cmc
or
std
icebp
shll
movsb
xchg
cmp
or
sahf
js
pop
scas
adc
xchg
clc
mov
and
fidivrl
inc
xchg
adc
lret
jg
cmpsb
push
data16
jmp
xchg
into
pop
xchg
push
adc
pop
adc
push
or
out
out
les
es
mov
and
dec
push
pop
jle
scas
addb
push
add
xchg
sbb
xchg
adc
stos
pop
adc
and
jbe
es
sub
jg
aam
add
push
aaa
sub
dec
pop
lcall
cmp
dec
mov
and
push
lds
push
or
mov
bound
and
out
lret
push
ds
nop
in
je
sub
sub
repnz
sub
cmp
adc
jno
push
sub
enter
pop
cmp
loop
push
in
jp
repz
cs
xchg
xor
shll
jle
xchg
push
ljmp
mov
shrl
sub
and
xor
fs
push
adc
mov
lds
or
cmp
push
stos
and
inc
mov
fnstsw
outsb
push
cmp
xor
scas
mov
cmp
ljmp
sub
adc
clc
ret
mov
pop
pushl
pop
insl
loopne
repnz
jo
xchg
in
xchg
shrb
popf
mov
in
cli
int
cmp
xor
inc
cmpsl
ficoms
jb
aam
into
pop
outsl
pop
push
push
pop
add
rcll
lahf
aaa
test
push
fldpi
aaa
mov
mov
push
loopne
jp
inc
outsl
insb
pop
cmc
insl
mov
pop
pushw
mov
and
xorl
stos
or
addr16
and
xchg
sti
mov
test
mov
or
lea
sub
mov
xchg
dec
fwait
mov
sbb
mov
sub
enter
mov
lods
inc
adc
lret
addr16
jb
cld
mov
sbb
pop
mov
inc
je
pop
lret
outsl
xchg
cmpsl
cmp
call
lock
inc
rcr
xor
loopne
es
pop
mov
das
or
jmp
aad
lret
inc
fcoms
sbb
inc
mov
dec
cmp
mov
in
shll
push
jns
xor
mov
enter
push
xchg
lock
lahf
inc
lods
or
sbb
stos
sbb
cmpsb
andl
or
iret
and
sub
dec
mov
loop
sti
dec
repnz
mov
out
fiadds
insl
pop
mov
mov
sbb
fbld
bound
xor
xorb
xor
jecxz
leave
pushf
pop
add
jne
cmp
scas
adc
cwtl
cmpsb
mov
or
fcompp
lock
in
nop
aam
adc
push
je
ret
jle
sahf
adc
lods
sub
hlt
pop
aad
dec
adc
ret
data16
movsl
mov
jmp
sbb
icebp
cli
sbb
xchg
push
push
mov
push
pop
imul
cmp
inc
rcll
mov
ja
mov
leave
mov
dec
fcomps
iret
jp
jae
test
fs
mov
ret
test
sub
lods
mov
pop
and
sbb
es
in
lahf
icebp
pushf
push
pop
cmp
hlt
pop
gs
dec
mov
mov
out
jl
dec
dec
adcb
subb
sub
aam
jecxz
xchg
xchg
jp
add
jb
dec
stos
inc
aam
sub
std
adc
push
sbb
push
addr16
add
pop
pop
test
pop
or
es
stos
xlat
mov
jmp
add
mov
shll
push
xlat
int
xor
sub
and
pushf
sbb
roll
movsb
and
mov
mov
cmpsl
adc
pop
sub
jbe
repnz
mov
or
dec
jno
add
mov
xor
mov
push
scas
es
and
or
cmpsl
xchg
aaa
add
add
in
jge
pushf
xchg
push
mov
sub
inc
pop
loopne
dec
dec
or
cs
idivb
xor
loop
ss
cwtl
cli
in
stc
mov
movsl
rorl
mov
ss
mov
or
mov
shrb
lret
fisttpll
fdivl
sub
mov
pop
mov
fsub
out
push
add
hlt
cmc
or
pop
push
cwtl
cwtl
push
rcrl
and
fwait
sbb
sub
mov
adc
loopne
jb
daa
insb
push
mov
imulb
cmp
clc
dec
push
and
repz
add
mov
fdivrs
mov
aad
aaa
addr16
ljmp
add
dec
lcall
add
jo
mov
cmp
das
add
shll
mov
push
mov
inc
jp
mov
jmp
cs
fs
dec
fwait
pop
lcall
stos
sarl
mov
pop
test
mov
cs
and
mov
pusha
nop
js
inc
dec
pop
xor
or
pop
addr16
mov
jno
je
test
inc
decl
call
adc
pop
mov
and
or
shll
xchg
shlb
nop
outsl
rcrl
xor
adc
xchg
dec
gs
inc
adc
stc
cmp
pop
push
mov
mov
fildl
dec
jbe
mov
cmpsl
add
les
pop
and
mov
or
sub
xchg
stos
pop
aad
in
adc
cltd
scas
jg
or
mov
mov
or
xchg
mov
mov
xchg
insb
ficoml
lret
pop
sbb
je
out
test
pop
push
mov
xchg
cmp
sbb
mov
sbb
les
lods
or
add
lcall
ret
cmc
lds
xchg
cltd
xor
dec
jno
pop
repz
les
cmp
sbb
stos
mov
rcrl
enter
jbe
outsl
push
dec
loop
mov
in
mov
jge,pt
push
dec
cmpsl
adc
lahf
dec
and
in
sub
add
jno
or
jns
out
fwait
dec
jno
cmp
nop
lods
and
sbb
mov
rolb
inc
insb
in
add
aaa
xor
mov
mulb
sub
call
ds
push
insb
pop
out
sbb
add
xchg
jmp
jmp
mov
loop
in
mov
mov
xchg
pusha
stc
inc
mov
jle
orb
ljmp
stos
in
arpl
add
inc
adc
jle
shl
and
maskmovq
divl
or
push
cmp
xchg
inc
mov
sub
mov
mov
lret
jb
push
addr16
jp
imul
and
sub
icebp
dec
mov
adc
or
sti
popf
loopne
add
fisttpl
push
arpl
jne
jmp
inc
jne
dec
cmc
sti
add
and
or
sub
xchg
in
outsb
dec
push
pop
ja
pop
in
popf
jl
sbb
ds
push
inc
out
int3
push
ffree
inc
push
xchg
cmc
jno
data16
bound
sub
fbstp
out
xchg
icebp
pop
mov
xor
inc
and
dec
gs
daa
xor
cwtl
iret
inc
xor
div
imul
jns
cmp
cmp
cli
add
mov
pusha
in
fnstsw
inc
and
repz
lcall
sahf
test
and
sbb
repnz
mov
jp
lock
insb
xchg
push
sub
call
dec
outsb
xchg
ss
daa
addr16
pusha
mov
xor
mov
gs
imul
pushf
lock
lods
xlat
adc
daa
sbb
fs
cmp
fucomp
jp
call
rcll
outsb
and
fwait
outsb
dec
cmp
hlt
aam
xchg
fists
loope
out
add
adc
cli
lahf
repnz
xor
push
mov
decl
ds
stos
cmpsb
sahf
inc
std
test
sub
and
pushf
fldl
add
imul
int
fst
in
lret
push
push
pop
pushf
dec
icebp
fsubs
adc
lock
fsubrs
das
loop
jp
cmp
adc
repnz
inc
jns
es
fdivrs
and
push
add
sub
fwait
insl
pop
inc
out
divl
popa
call
inc
mov
add
loop,pt
push
ja
dec
jb
push
push
add
adc
jne
xchg
hlt
cmpsl
or
sbb
scas
sti
repz
dec
jnp
ficoms
ret
push
gs
push
cltd
sarb
xor
dec
push
jg
mov
out
mull
repz
mov
cmc
push
pop
fstpl
loopne
push
push
sbb
add
in
sub
or
fistpll
pop
sbbl
fisubrl
sbb
sbb
inc
pop
jl
cmp
cld
and
ljmp
call
and
stc
out
and
data16
out
xor
inc
lret
pop
or
mov
in
shl
les
cs
call
sub
repz
push
add
leave
ss
jns
sbb
pop
clc
cmp
or
jle
cmpsb
int
adcl
adc
ror
lea
dec
in
push
mov
sub
push
int
daa
jecxz
lock
scas
mov
mov
sub
mov
or
adc
lahf
imul
stos
rorl
lock
or
cmp
and
inc
movsb
add
pop
sbb
je
push
jecxz
mov
push
arpl
or
mov
out
add
sbb
mov
in
int
xchg
out
out
cmpl
adc
jno
mov
jno
mov
adc
or
das
push
mov
pop
test
jb
xlat
bound
out
dec
div
scas
insb
popf
pop
stos
ss
ret
repz
mov
mov
pop
dec
faddp
cmp
pop
addr16
jne
jl
sub
sahf
lret
out
pop
fmull
pop
fsubs
lods
xchg
test
sub
jl
roll
fsubrl
into
dec
es
adc
popl
sbb
jb
jae
jmp
sub
sub
push
in
fsubl
push
fsts
xor
xchg
je
jecxz
or
mov
je
jae
cltd
lret
inc
push
mov
and
mov
xchg
fdivrp
rorb
sbb
subl
jb
mov
or
mov
mov
dec
sbb
mov
xchg
pusha
test
loope
in
or
jbe
ffree
lock
in
xchg
test
cmp
or
pop
push
jae
sahf
sahf
int
sbb
xor
push
cmpsb
push
in
cltd
dec
lret
fimuls
adc
adcl
and
bound
and
mov
loopne
xor
js
sub
out
enter
in
fs
insb
repz
addb
cmc
cmpsl
aaa
aas
movsb
fs
jp
cmc
cmp
push
mov
das
out
push
ret
mov
mov
pop
add
xchg
add
je
mov
fdivs
shll
out
sahf
sub
dec
fmull
popa
sbb
lret
cmp
testl
mov
and
aad
std
sbb
jae
bswap
and
dec
jo,pt
test
loop
mov
and
subl
les
sub
dec
in
das
push
mov
out
sub
hlt
push
rcr
mov
xchg
cmp
roll
push
adc
js
dec
repnz
adc
xchg
cwtl
sub
scas
mov
ret
push
lahf
sbb
or
adc
out
das
dec
shrl
ja
push
pop
cmp
stos
push
ja
jae
jecxz
dec
push
insl
xor
mov
mov
pusha
das
in
or
mov
fdivs
std
or
dec
loopne
mov
roll
dec
push
fldlg2
les
xchg
cmp
xchg
popa
leave
stos
sbb
pop
or
sbb
call
ret
jb
das
lods
in
mov
ja
dec
mov
push
mov
inc
out
shlb
mov
sti
iret
jmp
psubusb
shll
fildll
sbb
pop
add
push
movsl
shll
pop
cmp
jg
in
or
iret
or
cmp
addr16
and
jb
out
inc
sub
pushf
sub
pop
arpl
loop
pop
insl
sub
push
addl
jg
sbb
adc
sahf
aam
imul
loop
cwtl
fcomi
mov
lahf
imul
sbb
sub
mov
pop
pop
dec
lods
in
mov
paddd
dec
aam
or
scas
jge
scas
out
mov
stos
repz
loope
scas
outsb
and
pop
sub
es
stos
mov
fisttpll
stos
cmp
jge
inc
push
fucomi
lcall
adc
ljmp
push
aaa
data16
pop
loop
or
ret
cmp
mov
mov
sub
mov
mov
iret
insb
pop
out
int
add
sub
pop
adc
ljmp
fildl
popf
loope
popf
popf
in
out
jo
icebp
and
push
push
aas
pop
sub
mov
pop
iret
sbb
insl
mov
mov
mov
xchg
iret
xchg
mov
dec
push
lea
imul
popa
mov
xchg
test
lret
sub
push
and
or
popf
mov
jge
push
pop
jmp
and
jp
lcall
inc
test
rorb
lahf
xorl
inc
fs
pop
xor
adc
std
cmp
push
add
hlt
add
and
inc
push
fistl
xchg
imul
lahf
xchg
or
push
mov
jno
ja
hlt
lcall
std
mov
popf
and
je
adc
push
cmp
jmp
repnz
sti
mov
add
xchg
mov
mov
fnop
mov
in
mov
aad
dec
sbb
pop
loop
int
test
ljmp
mov
lds
jne
pop
repnz
frstor
or
cltd
sbb
jnp
xchg
or
jmp
repnz
ret
and
test
test
mov
push
dec
cmp
push
sbb
dec
xchg
mov
invd
mov
mov
addl
daa
add
push
mov
ljmp
inc
daa
pop
out
pushf
incl
dec
orb
ret
imul
jg
in
hlt
jae
adc
push
xchg
mov
push
add
jno
clc
push
mov
out
gs
loop
fwait
fwait
lret
lds
std
jns
or
push
sub
cmp
jl
mov
xor
mov
ss
cs
sbb
movsl
pop
sti
dec
sbb
jo
xor
loope
aaa
fs
aas
xchg
stos
inc
mov
adc
mov
mull
and
jns
mov
pop
pop
aas
pop
xor
mov
mov
jge
test
jmp
lods
mov
cli
sub
jne
pop
or
cmp
shl
mov
lahf
lahf
pop
out
inc
push
ljmp
sub
ljmp
pop
pmaxub
dec
cmc
sbb
sub
outsl
idivl
xchg
sti
jb
dec
and
aaa
mov
ljmp
dec
and
jp
imulb
notl
hlt
into
mov
mov
dec
push
fstpt
xor
stos
pop
cmp
mov
push
sbb
push
shll
cmpsb
idivl
push
addr16
or
push
mov
inc
bound
pop
aam
dec
push
out
orl
daa
mov
out
cmp
out
aas
jns
dec
addb
mov
sahf
xor
cmp
shrl
addr16
fiaddl
popl
sub
cli
les
push
addr16
subb
mov
xchg
mov
lret
inc
fiadds
lahf
add
int3
push
cmc
dec
inc
and
and
icebp
adc
insb
lahf
sub
daa
cltd
fadd
pop
pop
pop
lods
jno
xchg
fwait
pop
es
lret
iret
xor
imul
sahf
mov
sub
mov
jns
jo
cmp
loopne
cmp
popa
adc
inc
in
cltd
jecxz,pn
in
fwait
add
loop
mov
cld
sub
push
jns
in
and
icebp
js
jb
push
fadd
xor
inc
cmpb
sub
dec
adc
scas
or
ljmp
shl
shl
roll
xor
push
in
rcll
push
jl
lahf
xor
mov
jo
pop
mov
in
dec
sbb
icebp
xchg
scas
inc
leave
sub
jns
mov
dec
or
dec
les
mov
mov
xchg
pusha
mov
pop
push
push
nop
inc
dec
sarl
rorl
insb
or
sbb
push
jp
mov
ret
cmp
loop
and
sbb
mov
dec
cmc
push
test
adc
in
sbb
inc
rolb
fisttpl
ljmp
cmp
xor
in
jle
and
ficoml
mov
adc
gs
cmpsb
dec
sbb
inc
cli
push
or
ret
sahf
test
mov
mov
in
and
stc
fwait
cltd
dec
ret
mov
incl
aaa
mov
int
dec
data16
mov
jmp
add
xchg
js
mov
mov
cs
push
enter
std
je
pop
xor
pop
adc
jbe
xlat
push
sbb
mov
out
imulb
mov
xchg
xorl
dec
neg
xor
fcmovbe
jmp
and
aam
xchg
adc
mov
fucomi
data16
mov
inc
pop
mov
movsl
push
rcr
pop
leave
lret
or
mov
inc
sbb
icebp
dec
outsb
mov
in
dec
aam
mov
lods
push
adc
jno
ds
inc
inc
xchg
mov
mov
cwtl
subl
pop
pop
jmp
mov
dec
jecxz
fcompl
xchg
and
adc
mov
jbe
fldl
es
std
cmpsl
imul
stos
jecxz
mov
jne
and
mov
xor
cmp
lret
add
leave
sub
lret
and
add
mov
ja
sbb
rcll
aas
insb
fs
push
push
or
add
dec
and
testl
add
sar
leave
sahf
imul
dec
push
int
or
fidivs
add
outsb
stos
enter
mov
cli
repnz
insl
add
sahf
mov
je
ds
cmp
jp
pop
adcb
dec
jo
jns
icebp
les
sub
cmp
sub
lods
push
jbe
jae
out
andb
push
movsb
xchg
lahf
inc
fucomi
mov
addr16
loopne
xor
pop
jno
or
pcmpgtw
jb
icebp
mov
xor
cmpsl
mov
fdivrs
and
lahf
jp
xchg
push
cmc
pop
xor
in
sub
daa
aam
and
xrelease
cmp
leave
adc
jbe
shlb
imul
in
adc
sbb
add
sub
sti
xchg
sar
subb
sbb
lahf
scas
mov
or
cld
dec
in
inc
add
sub
arpl
xor
mov
dec
and
xchg
stc
fidivs
push
push
stos
dec
lcall
shll
push
xchg
jb
inc
cld
and
xor
mov
mov
fwait
and
mov
xchg
adcl
mov
test
std
push
push
clc
xchg
fs
sbbb
out
and
sahf
pushf
sbb
mov
or
pop
add
lret
sub
fs
mov
lods
out
pushf
cmp
lret
dec
cwtl
adc
mov
jb,pt
mov
imul
add
inc
imul
sub
jne
dec
ljmp
sbb
les
push
lea
jbe
movsl
jl
cmc
pushf
sub
shll
mov
sub
loopne
movsl
es
add
xchg
sub
mov
push
jno
int3
call
imul
mov
mov
push
ret
xor
dec
dec
jmp
adc
leave
pop
test
sbb
popa
mov
mov
xchg
xchg
mov
cmp
mov
sub
sbb
push
ret
sub
aam
adc
rorl
cmp
inc
pop
cmp
sub
test
int3
lahf
aaa
repz
push
or
mov
gs
mov
xchg
clc
mov
iret
pushw
out
cmpsb
push
test
out
les
mov
repnz
inc
cld
imul
xor
cmp
repnz
fimuls
sbb
adc
aas
gs
add
sbb
and
xchg
dec
mov
mov
push
bound
mov
cmpb
push
sbb
jecxz
inc
and
ret
cmp
adc
sub
adc
dec
inc
je
lret
adc
jmp
adc
jno
insl
scas
pop
add
sub
or
stc
das
in
sub
pop
stc
cmp
inc
inc
stos
rcrb
mov
and
es
adc
push
cmc
mov
mov
xchg
mov
inc
jle
jmp
cmp
mov
cmp
inc
rcll
mov
cmc
push
out
repz
movsl
imul
push
xchg
jle
cmp
cwtl
jb
cmp
push
shlb
fs
jns
and
fsubp
test
inc
and
subb
xor
push
add
mov
push
lret
shll
jge
push
sbb
clc
out
xchg
pop
jno
xor
les
cmc
rclb
and
imul
jge
enter
push
dec
dec
outsl
push
lods
dec
xor
mov
push
and
outsb
dec
sbb
loop
popa
call
sbbb
fadd
jg
mov
cli
lock
xchg
ljmp
stos
push
les
jle
rcrb
mov
jno
mov
mov
ds
into
iret
leave
xchg
outsl
fcompl
cwtl
sahf
inc
sbb
inc
dec
je
mov
dec
outsb
mov
mov
inc
ror
xor
jno,pt
sub
push
lock
sbb
sti
pop
out
gs
arpl
pop
pop
mov
mov
flds
cmp
ss
push
cmpsb
add
gs
sub
fsubs
idiv
jnp
sub
leave
repnz
push
xor
cmp
sbb
fdivp
cmpsl
adc
cs
add
lock
loopne
sub
cmp
add
or
or
mov
dec
div
mov
cld
jb
pop
add
loop
movsl
mov
ficoml
dec
mov
enter
cmp
mov
rclb
in
mov
stos
fucomip
mov
shrl
in
add
xchg
push
add
xor
sub
mov
negb
jp
adc
lods
ja
pop
ret
ss
xorb
push
aad
or
xchg
lods
call
adc
sbb
push
sub
dec
push
pusha
insb
adc
jnp
mov
sbb
rclb
js
dec
sub
mov
hlt
sbb
cmp
mov
jle
cmp
xchg
mov
imul
cmp
scas
push
movb
cld
lods
jo
sub
and
push
xchg
inc
or
mov
pop
imul
push
cli
push
imul
pop
idiv
nop
xor
jecxz
test
outsl
test
loopne
mov
out
push
outsb
xor
xchg
imul
jmp
pusha
xor
sub
adc
pop
add
lds
cs
xchg
or
sahf
mov
cs
pop
add
mov
mov
sahf
addr16
mov
inc
or
test
cmp
xchg
mov
into
add
and
ja
int
imul
aam
lahf
cld
test
aad
pop
into
mov
int3
cltd
fcmovu
lods
aaa
push
pop
out
insl
or
cmp
mov
pop
arpl
pop
pop
stos
cmc
cmpsl
xor
loop
shlb
popa
jno
jge
sbb
mov
cmpb
and
fxch
iret
mov
cmp
and
pusha
leave
in
pop
cmp
push
mov
push
pushf
sbb
mov
cwtl
xor
sbb
in
es
call
test
jb
mov
sub
or
rcrb
aam
pop
out
je
and
fiaddl
ljmp
paddsw
std
clc
movsl
mov
mov
mov
jmp
dec
and
cli
pop
jno
push
xor
dec
fwait
sbb
adc
je
push
sbb
movsl
and
mov
sbb
es
sbb
pop
mov
je
mov
dec
test
add
push
es
lret
jecxz
mov
cmovns
push
hlt
std
bound
loope
jmp
in
dec
xor
repz
loop
xlat
cld
push
shrb
js
xor
roll
stos
jno
jae
adc
pushl
int3
xor
insl
iret
cmpsb
loopne
lds
mov
jg
mov
xchg
fwait
push
xchg
jle
push
cmpsb
jns
mov
mov
inc
outsl
test
sahf
mov
pop
cmp
test
xchg
mov
inc
scas
out
push
and
cmp
lcall
mov
xchg
cwtl
sub
pop
xchg
mov
les
jns
test
test
mov
or
das
jg
imul
cmp
sahf
xor
adc
fbld
cmp
shll
xor
pop
mov
ror
lahf
bound
ljmp
in
add
mov
lret
pop
pop
mov
scas
inc
sub
adc
repnz
ljmp
jbe
ss
mov
mov
cmp
hlt
push
push
inc
fdivl
addl
sahf
push
mov
mov
push
cvttps2pi
test
jg
xchg
lods
out
xchg
out
fcoml
aaa
dec
mov
clc
aas
and
xor
xor
push
mov
dec
add
jae
push
inc
lock
mov
lret
mov
in
imul
loop
aad
lahf
lahf
dec
call
insb
pushf
out
dec
test
cli
imul
out
lret
pop
ljmp
es
sbbl
sti
jnp
xchg
cs
les
xchg
jae
mov
aaa
data16
mov
xor
push
rcrb
push
negl
push
decl
popa
cmp
rclb
lods
fcmovne
cwtl
lcall
rol
mov
jne
jecxz
push
pop
sub
mov
rcr
jg
xlat
or
xor
mov
out
fdiv
jnp
iret
test
sub
jp
pushf
out
inc
push
loop
inc
inc
clc
dec
push
mov
fcompl
sub
imul
pop
lds
adc
jbe
std
mov
push
jnp
idivl
pop
aam
mov
sub
je
sahf
ret
aas
lea
in
jae
gs
push
lret
push
jecxz
ja
xorb
xchg
mov
out
mov
or
jp
push
cmp
sub
lcall
pop
lahf
xchg
imul
xor
enter
pop
pop
add
popf
and
jge
insb
inc
lret
xchg
mov
and
jle
pop
std
xlat
sub
mov
test
xchg
xorb
fstpt
mov
or
outsl
cmp
loope
jns
mov
pop
or
and
inc
das
push
das
ret
adc
fwait
cmp
push
or
or
int3
das
sbb
jnp
or
sub
aas
sub
pop
pop
enter
adc
aad
sub
hlt
or
inc
icebp
jge
ret
and
pop
or
dec
dec
inc
incl
cld
pushf
ja
adcb
inc
test
popa
fsubs
cltd
jnp
xor
jo
or
cmpsl
hlt
scas
push
adc
inc
mov
fs
mov
mov
add
add
mov
adc
xchg
enter
push
jbe
dec
add
insb
idivb
xor
lds
lds
fcomps
pushf
aaa
movsl
xchg
lods
mov
mov
xchg
push
and
pop
jl
arpl
and
lods
out
sbbl
or
ja
inc
jne
pop
cmp
xchg
in
test
sub
dec
into
xchg
fnsave
loop
shll
push
xor
mov
push
ret
test
ljmp
add
xor
xor
stos
shll
movsl
and
mov
les
insl
imul
pop
mov
inc
jge
ret
and
and
mov
out
daa
pop
outsb
stc
and
add
or
enter
in
iret
das
and
xlat
adc
js
and
loop
mov
das
lret
xchg
sbb
xchg
aam
inc
mov
shr
dec
pop
popa
aaa
push
cmp
faddp
icebp
cmpsl
dec
in
jle
lods
inc
cmp
std
cmp
push
dec
nop
cs
ljmp
shrl
in
mov
cmp
sbb
push
pop
call
ds
jecxz
andl
xor
out
and
xchg
jmp
lock
rcll
mov
adcb
aaa
lahf
test
stos
in
pop
fcoml
les
int3
jp
es
xlat
jp
add
mov
shll
out
enter
iret
sahf
pop
scas
nop
in
enter
int3
test
inc
ds
sbb
pushf
jge
and
std
or
test
adc
out
cmc
xlat
lods
adcl
lea
jae
outsl
ds
js
in
hlt
or
pusha
leave
mov
mov
ja
adc
adc
scas
mov
mov
aam
fwait
add
in
jne
sub
adc
ljmp
bound
sbb
iret
mov
inc
pop
jmp
into
mov
lea
jnp
sbb
sbb
stos
sub
cmp
and
or
inc
addr16
js
leave
jle
es
mov
ljmp
icebp
dec
or
aad
aad
out
addr16
or
sbb
pusha
lahf
movlps
jbe
mov
js
sbb
ljmp
fiaddl
mov
test
cmp
andl
jnp
lret
and
sub
mov
pop
stos
bound
adc
addr16
das
lcall
cld
inc
scas
rorb
dec
sbb
cmpsb
sbb
jp
movsb
cmp
adc
insb
cld
es
adc
xor
ret
sbbb
sahf
mov
dec
dec
fisttpll
inc
cmp
cld
inc
xor
add
jne
or
subb
aaa
test
jmp
inc
or
sahf
sbb
in
es
xchg
jnp
arpl
push
add
adc
jno
jae
lds
cld
ds
inc
fwait
outsl
inc
movsb
ss
sub
fmuls
cmc
ret
jmp
clc
adc
sarl
pop
lock
lret
pop
mov
fs
jl
pop
xor
fwait
popa
adc
add
mov
stos
jp
cmpsb
aaa
mov
loop
data16
enter
ds
lcall
or
mov
out
xchg
sub
xchg
jb
out
das
out
ss
shll
push
test
in
jecxz
outsb
mov
jns
cmp
or
pop
lahf
jp
inc
mov
or
cwtl
orb
cmp
lcall
imul
push
sub
sbb
mov
shll
lods
cmpsl
clc
jo
insl
std
test
bound
mov
jb
repz
bound
ds
add
mov
dec
aad
mov
leave
dec
pop
push
adc
pop
cli
cltd
jno
imul
pushf
lret
fistpl
mov
mov
adc
cltd
push
lret
mov
das
pop
or
orb
mov
hlt
mov
jbe
cmpl
rolb
fldt
adcb
add
lea
mov
gs
jp
sbb
dec
jbe
push
ret
and
sbb
imul
sti
lahf
or
or
sar
fmull
es
call
and
sub
aam
or
cld
mov
mov
fcmovnb
xor
ret
mov
insl
aas
cmpsl
in
mov
inc
cld
rcrl
or
cltd
fcomps
fsubs
mov
aam
xor
shr
clc
mov
in
xor
jbe
jge
push
cmpsl
rorl
inc
add
icebp
pop
icebp
xor
xchg
inc
cltd
add
fdivp
push
or
mov
outsb
jbe
in
pop
stos
xchg
pop
or
jno
jecxz
xor
mov
jne
mov
push
dec
stc
lahf
mov
arpl
sub
gs
mov
jle
rcrb
test
cltd
shrl
pop
stos
cmp
add
dec
adc
in
jmp
lods
adc
or
cmp
mov
lods
dec
mov
dec
sub
or
in
cltd
or
incl
mov
cltd
aas
xchg
stc
clc
daa
mov
movb
lahf
xchg
in
xor
push
fwait
ja
jne,pt
add
sbb
scas
sub
sbb
out
movsl
sbb
cmp
aam
das
fs
ja
cltd
rcrl
or
movb
loop
lret
mov
aas
ja
into
stos
xchg
inc
loopne
out
je
add
data16
xchg
pmaxub
cmp
cmc
push
jg
pop
out
sub
lahf
out
in
pop
adc
sub
jns
imul
stos
jae
cmpl
adc
dec
add
sbb
rolb
and
mov
xchg
outsb
pusha
cmpsl
mov
in
inc
mov
pop
cwtl
aad
divb
test
into
sub
push
xor
push
imul
cmpsb
adcb
inc
mov
inc
fwait
jo
test
jl
push
movsb
and
cmpsl
icebp
mov
sub
iret
repz
mov
add
outsl
cli
ljmp
imul
jp
sarl
mov
dec
inc
adc
lcall
pop
jns
pushf
push
xchg
xchg
repnz
std
add
in
rcl
push
mov
xchg
mov
jae
in
test
out
testl
imul
andl
mov
movsb
or
adc
xor
jno
movsl
loope,pn
gs
not
cmpsl
ret
cld
jne
imul
ret
lea
push
lods
mov
addr16
push
jg
push
fnstsw
inc
sbb
fsubp
mov
adc
aam
sbb
fsts
fisubl
jg
jge
imul
mov
add
sbb
fcoms
incb
inc
lea
pop
mov
in
lods
adc
mov
sub
sbb
mov
ljmp
inc
out
xor
test
lods
add
mov
and
dec
lock
dec
xchg
ds
in
pop
notl
and
dec
dec
out
sbb
pop
push
orl
lret
negb
lahf
notb
ja
pop
scas
in
adc
stos
xchg
push
inc
iret
data16
pop
ja
rclb
mov
sbb
sub
lcall
cwtl
bnd
cmc
lcall
lret
cmpsl
cltd
sbb
mov
dec
dec
das
pop
cld
nop
add
roll
mov
lods
inc
arpl
iret
lcall
dec
or
jnp
lcall
in
out
int3
shrl
test
push
xor
nop
cs
out
and
dec
fmull
or
sti
push
mov
xlat
pop
stos
cmp
ja
jl
aaa
into
pusha
mov
ja
icebp
in
in
jmp
xor
ljmp
dec
adc
daa
xchg
std
adc
mov
push
jne
rorb
bound
push
xor
cwtl
fiadds
push
jbe
test
add
sbbb
repnz
cmpb
pop
jmp
cmp
pop
movl
pop
dec
fmul
push
mov
outsl
scas
push
xchg
aad
and
pop
cs
mov
pop
ljmp
out
loopne
push
fldcw
pop
jecxz
lret
and
sahf
jo
or
bswap
loope
mov
dec
sbb
dec
test
and
scas
add
scas
cmp
adc
jp
pop
ret
mov
sbb
jbe
mov
xchg
dec
add
add
ret
push
mov
jbe
or
cwtl
push
enter
jmp
test
ficompl
cmc
adc
push
mov
pop
cmp
addb
rorl
jae
movsb
or
sub
ret
mov
call
gs
push
push
test
jb
adc
push
push
or
repz
mov
jns
dec
pop
lods
adc
jne
inc
addl
xorl
in
mov
cltd
inc
daa
mov
js
xor
jmp
dec
xchg
xor
insl
jecxz
outsb
adcb
loop
shlb
stos
fists
into
das
cmp
cwtl
std
or
adc
in
outsl
lods
jl
fstps
fisttpl
and
sbb
sbb
jg
sarb
repnz
test
jge
cmp
pusha
mov
shrb
sbb
jecxz
mov
inc
add
and
je
faddp
xor
std
jne
or
xchg
out
jo
test
cmpsb
or
ljmp
in
add
int3
mov
adc
push
mov
fstl
add
dec
xor
arpl
mov
jne
cmpsb
sbb
dec
add
add
sbb
add
or
pushf
cmp
lods
xchg
mov
push
je
std
dec
cmpsb
and
add
shlb
inc
icebp
push
or
sbb
je
mov
add
subl
cmp
pop
cwtl
sahf
lods
pusha
xor
sbb
shrl
xchg
xchg
and
fdivl
xchg
mov
jle
aaa
xchg
push
fisubrl
mov
lcall
xabort
clc
in
lahf
pushf
adc
jno
in
mov
pop
pusha
aas
dec
and
vpextrw
lds
outsb
or
lods
bound
ficompl
or
mov
ret
lock
lret
pop
movsb
leave
push
lret
js
decl
pop
xchg
xchg
adc
xchg
pop
xlat
add
inc
dec
push
cmp
out
push
cmp
or
fsubs
mov
iret
arpl
fcmovu
fdivr
push
push
das
lret
addr16
adc
adc
jge
adc
lret
cmp
xchg
lret
jnp
icebp
adc
jge
xchg
mov
lea
lea
fsubrl
insl
mov
sbb
mov
js
das
push
lahf
fmul
ja
fmuls
dec
shrl
sbb
jo
push
pushf
xchg
adc
cmp
inc
dec
leave
xlat
dec
faddl
push
leave
enter
push
cmpsb
jl
jns
test
or
and
cs
mov
popf
jl
stos
jmp
sbb
rorb
in
cli
pop
jae
and
repz
push
loope
lds
and
adc
mov
stc
stos
xlat
and
jp
pop
cmp
jle
jge
sbb
xchg
scas
sti
mov
lret
mov
xchg
cmp
dec
std
mov
xchg
shlb
fistpll
xchg
cmp
pop
and
fwait
enter
dec
repnz
mov
mov
jle
push
test
in
mov
hlt
call
dec
repnz
sub
lds
mov
cltd
iret
adc
xor
add
jb
iret
dec
mov
or
inc
sbb
shlb
sub
lcall
dec
dec
fisubl
lods
pop
ljmp
aad
xchg
cmp
cmp
daa
sbb
shrb
fdivp
xchg
and
cli
mov
and
mov
adc
and
icebp
cmpsb
pop
sub
jl
in
sbb
inc
mov
xchg
xor
jl
dec
cli
ds
pop
popa
or
cmpsl
int3
push
test
std
mov
loope
fdivrs
push
pop
out
add
lret
cmpsb
pop
xor
sbb
in
lar
subl
add
pop
mull
ljmp
in
in
lds
roll
xor
xor
pop
inc
mov
xchg
mov
fwait
dec
mov
xor
sub
ret
dec
cmp
push
push
fwait
clc
adc
out
pushf
popf
dec
xchg
jbe
and
shrl
push
or
in
or
gs
sub
arpl
fs
inc
mov
int
or
mov
in
mov
sub
mov
mov
lods
pop
mov
les
and
es
adc
popf
fwait
cmpsl
mov
sbb
or
jns
inc
jb
out
fstpt
push
add
dec
adc
mov
icebp
data16
push
ret
push
in
push
or
ficompl
test
xchg
add
ret
adc
cmpsl
fwait
add
fisubs
out
shrb
mov
or
in
or
jne
fistpll
sahf
mov
pop
sbb
mov
shrl
ffreep
cwtl
jae
xlat
sub
sub
mov
mov
adc
cmp
push
push
insb
shrb
std
cmp
and
lahf
dec
lock
stos
xlat
sub
jmp
xor
insb
movb
add
pop
pop
shll
fistl
sti
test
aad
inc
jo
mov
dec
movsbl
imul
iret
in
stc
popa
push
int3
arpl
ja
adc
fistpl
lret
push
icebp
loope
cmpsb
mov
in
stos
call
pop
xchg
pop
mov
dec
xor
in
lea
lods
mov
sbb
jmp
xchg
das
lods
mov
xchg
or
inc
adc
lds
mov
scas
push
dec
inc
repnz
insl
std
lods
jbe
add
fs
hlt
sbb
dec
cmp
aad
xor
out
outsb
sub
lcall
and
dec
sub
icebp
fimuls
pusha
icebp
ja
push
jge
or
decb
mov
mov
mov
adc
aas
mov
sti
bound
ljmp
js
aad
cmpsb
mov
stos
and
xlat
rorl
mov
in
jno
testl
and
jle
mov
jns
icebp
loopne
loop
and
adc
mov
call
inc
cmp
lahf
mov
test
rcll
sti
jecxz
xchg
cltd
jae
adc
xor
hlt
xor
xor
and
sub
lds
test
jno
sub
jns
adc
add
sbb
pop
in
adc
xchg
adc
jns
sbb
cltd
mov
mov
and
and
pop
adc
in
in
mov
push
push
jge
out
sub
sbb
push
jbe
xor
ja
add
xchg
jae
mov
dec
lods
loopne
das
cmp
sahf
inc
fnstenv
out
pop
push
sbb
aaa
inc
shlb
sahf
sbb
shll
dec
stos
mov
dec
xor
pushf
out
dec
sub
stc
outsl
mov
cs
outsl
ret
les
and
loop
insl
mov
mov
fdivrl
xor
sar
push
fdivrl
sbb
sub
sub
and
dec
scas
scas
fcoms
loopne
sbb
movsl
push
je
pop
test
pusha
bound
shr
jmp
push
add
pusha
shl
push
xchg
loop
sahf
xor
out
js
loope
inc
cmp
test
daa
xor
push
fnstenv
mov
jnp
dec
sbbl
jb
into
mov
loop
lea
mov
cs
cmp
push
sbb
pop
mov
mov
jne
jl
mov
jnp
popa
sahf
fbld
ja
je
push
dec
pop
loop
shrl
push
movsl
xchg
jg
fld
ja
cmpsl
insb
pop
inc
xchg
scas
push
mov
jmp
mov
add
and
push
les
sti
add
ss
cltd
push
cmc
cmpsl
jge
pop
add
popf
sub
pop
xchg
shlb
xchg
mov
out
inc
push
je
and
push
sbb
sti
jp
clts
mov
dec
lods
test
add
dec
adc
int3
cmpsb
inc
dec
mov
add
mov
mov
ds
cs
lret
stos
xchg
out
or
loope
hlt
arpl
mov
rorl
xchg
outsl
lar
int
pop
bound
rorb
fucomp
mov
add
xor
dec
fstl
and
cmpsb
aad
sbb
mov
je
or
inc
pop
cmp
hlt
sbb
aad
jb
shlb
and
pop
mov
clc
jg
cmp
pop
aas
int
inc
xchg
mov
mov
pop
mov
dec
mov
stos
mov
push
push
or
pop
fnstenv
les
insl
mov
mov
and
in
aaa
sub
sbb
les
mov
cli
repnz
jne
rol
rorl
pop
loopne
push
xchg
test
adc
cmp
stc
pop
cmp
out
cmp
push
loopne
inc
cmp
push
cmpsb
inc
sti
ficoms
and
lods
adc
sub
xchg
scas
mov
jbe
xor
and
movsl
repnz
fcomps
mov
scas
mov
hlt
fwait
stos
sub
mov
xor
adc
sbb
int
push
lock
push
mov
stc
sub
pop
mov
lret
mov
std
ficoms
sub
addb
jne
mov
daa
add
divb
jg
dec
pop
mul
xchg
ffreep
pop
js
pop
cs
adc
mov
repz
loope
xchg
and
bound
addl
fwait
loop
mov
pushf
cmpsb
lcall
mov
movsb
or
inc
aas
sub
enter
das
stos
jecxz
xchg
sbb
lcall
add
test
lods
jae
dec
fwait
adc
push
ret
ds
xchg
in
sub
cmc
fdiv
xchg
or
cmp
xchg
adc
int
imul
sub
fld
sbb
lahf
das
nop
mov
movsl
jmp
popa
scas
movsl
pop
jno
fisttps
or
jge
pop
mov
fildl
loop
and
leave
outsl
mov
ret
dec
jo
or
loopne
testb
cmpsl
sub
pusha
mov
sbb
fwait
mov
fs
dec
push
fstpl
xchg
pop
dec
fdivl
fidivl
scas
out
mov
js
push
hlt
popa
inc
pop
cmp
mov
dec
pop
jne
movsl
lods
mov
push
mov
cmp
dec
ja
cmp
insl
pop
cwtl
dec
add
jb
xor
push
movb
push
insl
adc
xlat
pusha
cmpsl
pop
test
jecxz
enter
mov
xor
pusha
popa
xchg
cmpsb
enter
in
incb
repz
and
aaa
inc
xlat
mov
shl
mov
leave
pop
xchg
fisttps
adc
idivb
int
inc
cwtl
aam
nop
insl
sbb
sbb
mov
stc
decb
lret
pop
adc
hlt
xor
sbbl
or
into
das
test
sbb
test
add
mov
pop
adc
lcall
out
jb
lods
dec
sti
in
push
adc
cmpsl
aad
mov
inc
sub
imul
push
loopne
ja
or
pop
xor
mov
js
sub
cmp
or
dec
sbb
sbb
fwait
or
sti
mov
add
cmc
aaa
jecxz
add
cmp
repz
std
xchg
lock
imul
mov
push
xchg
mov
dec
mov
and
dec
add
sub
push
jb
jbe
test
and
mov
jecxz
out
arpl
pop
gs
das
out
rolb
jo
test
call
push
pop
adc
insb
movsb
jae
or
sub
pop
lret
xchg
pushf
js
sbbb
idivl
pop
inc
mov
out
idivb
add
fsts
mov
or
dec
leave
loope
xorl
imul
ret
push
lret
jp
xchg
int3
call
and
arpl
loop
popa
cmpl
mov
lret
loope
push
test
adc
leave
loop
sbb
aaa
and
lods
repz
jnp
ror
mov
cmp
mov
filds
aad
sarb
lcall
mov
dec
fildll
clc
cmpsl
lcall
and
icebp
out
push
adc
pop
out
inc
jne
adc
sbb
cwtl
add
push
pushf
aas
femms
and
push
aad
xchg
cmp
pop
mov
clc
nop
fwait
mov
mov
stos
inc
shrl
fbstp
add
outsb
inc
daa
insl
out
test
pop
jae
mov
sub
shr
pop
movsl
sbb
sub
cwtl
test
rorb
or
inc
stos
mov
movsb
leave
fnstcw
push
in
add
rcrl
mov
test
mov
inc
push
mov
fisttpll
sub
mov
adc
or
xor
pop
movsl
dec
imull
jno
lock
mov
dec
mov
int
mov
addr16
int
clc
mov
xor
aas
mov
ret
xor
lcall
push
xor
jle
bound
mov
mov
and
lods
push
out
test
or
lea
cltd
aad
dec
das
lret
test
adc
adc
frstpm(287
cmp
notl
mov
mov
push
enter
dec
xchg
shr
xor
jp
xor
call
mov
sbb
xchg
cmp
pop
out
mov
xor
jno
mov
lret
ret
bound
cld
loop
out
jp
xor
lea
inc
lahf
pop
roll
xor
pushf
rol
push
rcll
inc
mov
mov
jl
ljmp
xchg
fst
add
arpl
movsl
iret
pop
sbb
inc
outsl
xor
and
lahf
inc
ret
cld
sbbl
idivb
cltd
test
mov
add
loope
decl
notb
fisttps
adcl
es
xor
mov
es
mov
mull
ret
jl
into
cmp
icebp
push
in
js
ret
inc
in
ret
push
hlt
mov
or
mov
xchg
xlat
cmpsl
mov
mov
sbb
cwtl
outsl
mov
fwait
adc
ds
jo
sbb
push
mov
mov
pushf
xchg
xor
jle
jl
out
mov
sub
adc
js
xchg
out
or
sbb
push
mov
rcl
pushl
into
faddl
add
pop
imul
xchg
bnd
sahf
or
lret
sub
push
add
lods
or
xor
pop
pop
and
push
cmc
xchg
out
mov
cmp
sbb
fwait
inc
test
add
cmpsb
sti
mov
scas
cmp
cmpsb
ficompl
xchg
pop
sbb
mov
movsl
pop
xor
mov
xor
push
stc
pop
negb
roll
push
cmp
stos
fnsave
std
pop
ret
nop
test
mov
inc
sbb
repnz
in
xchg
or
ds
xor
fs
aas
shrl
test
pusha
mov
xor
jmp
cli
lock
jne
icebp
in
pop
ret
icebp
cli
fisttpl
sbb
out
mov
mov
or
pop
jns
xchg
int3
out
iret
mov
xchg
out
mov
and
ljmp
repnz
jl
iret
inc
cmpl
pusha
add
clc
mov
test
shlb
jnp
loop
cmp
cs
sub
sub
and
mov
and
cmpsl
and
orb
or
sahf
xor
jno
fnsave
cmp
pop
mov
inc
mov
jmp
push
dec
aas
dec
divb
push
push
lahf
add
xchg
roll
inc
cmpsb
loope
adc
int
xchg
pop
mov
nop
xor
inc
pop
push
pop
and
mov
mov
insl
jne
bound
adc
add
mov
arpl
xorl
cmp
lahf
and
inc
push
mov
sbb
sbb
ja
cld
cmpsl
repz
loopne
add
out
lahf
in
ror
scas
mov
shlb
icebp
bnd
into
cli
imul
mov
ret
popa
xor
xchg
repz
inc
pushf
in
scas
mov
dec
push
insl
push
in
dec
fdivrs
addr16
ficoml
and
and
sub
pop
inc
push
rclb
dec
call
pop
sahf
and
inc
xchg
dec
les
xor
cld
mov
out
sub
xor
jno,pn
add
andl
repnz
pop
fwait
cwtl
iret
xchg
js
jle
mov
mov
add
ja
repz
cmp
jbe
arpl
pop
popa
adc
or
or
mov
sub
hlt
cltd
jmp
add
xor
jle
js
movsb
cli
or
cli
mov
aam
xchg
pop
loop
sbb
ds
les
rol
stos
xchg
out
sub
sbb
sub
cmpsl
mov
call
fsubp
ds
arpl
push
xlat
or
push
insb
sub
and
dec
in
mov
outsb
jge
jnp
cmc
xchg
jl
mov
pop
adc
jo
push
dec
loop
push
ret
cwtl
jb,pn
sarb
dec
insb
xchg
add
push
or
test
movsl
outsb
sbb
lods
outsl
aas
xchg
push
sbb
cld
les
sbb
out
stc
pushf
ds
sub
inc
and
sub
leave
mov
repz
inc
push
add
rorl
or
test
rclb
xor
mov
fstl
rcrb
inc
adc
xorl
xor
adc
int3
fsubl
repz
push
mov
sub
ja
lea
outsb
fidivrl
fidivrl
jle
jmp
push
aam
sub
mov
adc
rcr
out
sbb
pop
out
cmp
fnstsw
mov
leave
jecxz
jge
hlt
pusha
pusha
dec
popa
pop
xor
repnz
fadd
cs
cmpsl
or
fcoml
dec
mov
push
push
sbb
bound
lahf
xchg
inc
imul
adcl
lahf
mov
dec
movsb
retw
jge
imul
pop
jns
or
sahf
stc
jnp
mov
jo
or
sbb
popa
rolb
sarl
ljmp
mov
enter
les
mov
lcall
lods
lds
sar
xlat
or
dec
int3
in
add
pushf
nopl
cmp
sub
ret
pop
pop
sbb
cmpsb
mov
pushl
dec
cmp
cld
and
clc
dec
lds
popf
cli
fmuls
mov
pop
push
pusha
xorb
jo
sub
push
stc
hlt
jns
bound
cli
arpl
stos
pop
fimuls
push
fisttpl
add
pop
jmp
sahf
call
mov
loop
push
sub
outsl
and
ja
mov
stc
pop
in
idiv
and
jns
in
ljmp
adc
add
aam
ret
test
inc
cs
mov
mov
notb
xor
mov
jg
negl
jp
popa
cmp
or
add
daa
mov
into
or
xchg
fs
in
das
mov
outsb
adc
adc
rol
mov
ja
and
xor
test
outsb
push
int
pusha
aad
or
mov
push
cmp
stos
mov
arpl
adc
popf
jb
lret
xor
mov
fidivs
sub
enter
mov
sbb
push
mov
inc
add
bound
notb
xlat
pop
pop
xchg
lods
push
popa
add
sbbl
xor
jg
sbb
mov
dec
stos
jp
mov
push
repnz
inc
stos
loope
int
mov
lcall
pop
inc
lds
push
xchg
in
in
mov
fstp
adc
call
jge
lock
and
negb
xor
or
fs
or
aaa
adc
add
fcoms
lds
cli
dec
jo
jnp
cmpsb
xor
ss
add
and
shll
cmpsl
and
xor
dec
fldcw
pop
or
fldcw
mov
ljmp
jge
addr16
sub
xchg
cmp
jmp
inc
inc
in
in
pop
shll
sbb
push
jo
pop
outsl
adc
mov
cmpsl
xor
scas
nop
inc
fidivrs
mov
popf
outsl
mov
push
jns
out
cld
dec
es
mov
jb
and
pop
call
rcrl
sbb
xchg
push
dec
and
out
ja
dec
ret
mov
pop
fadd
or
pop
pop
push
notl
bnd
xchg
fcmovbe
ret
fwait
or
stos
arpl
jo
xor
jns
shrl
cmc
paddw
sbb
mov
in
movsb
xor
dec
je
or
sarl
or
fisttps
or
mov
arpl
or
movsb
call
or
xchg
or
and
nop
dec
xchg
mov
bound
lock
and
test
arpl
inc
jp
sub
incl
arpl
imul
mov
adc
out
jae
aam
outsb
add
cmp
mov
les
das
aas
iret
ja
inc
cmp
notb
dec
mov
adc
pop
dec
movsb
jae
loop
insb
xor
mov
jns
sub
xchg
xor
jb
mov
dec
negb
out
mov
ret
fstps
cli
roll
sub
in
mov
xor
leave
shlb
pop
testl
mov
inc
mov
jb
mov
push
cmp
ficomps
fsubrp
or
sub
lods
push
ja
ret
gs
cmp
inc
add
cmpsb
sub
add
mov
aad
or
stc
notl
jns
and
adc
addb
jns
lret
stos
inc
rcr
cmp
cltd
mov
std
push
call
daa
or
mov
inc
add
pop
out
enter
loope
pop
icebp
jnp
ja
daa
in
and
fsubr
inc
faddl
push
push
jnp
fdivrs
inc
push
inc
int
pop
imul
push
mov
ja
or
inc
push
movsl
jo
dec
mov
test
clc
cmc
push
mov
mov
jo
fiadds
test
out
popf
add
cmc
sub
sbb
mov
xor
jno
fstps
xlat
jbe,pn
mov
fldcw
push
cmpsl
push
or
xchg
subl
mov
aam
ja
push
das
mov
inc
inc
mov
mov
dec
xor
mov
pusha
sub
mov
sbb
in
lcall
inc
sbb
rolb
and
add
sahf
ljmp
loope
push
push
pop
jecxz
mov
psraw
sbb
scas
push
adc
mull
loope
mov
hlt
in
mov
addl
dec
mov
mov
xor
add
push
pop
jecxz
or
fisttpl
bound
loop
imul
push
movsl
ljmp
fucom
xchg
mov
pop
jp
int3
ret
inc
sub
pop
into
inc
test
jnp
aad
shlb
test
jae
inc
incb
aad
lahf
shll
xchg
loope
mov
push
insb
xchg
xor
notb
ret
imul
lods
in
bnd
lret
mov
mov
dec
mov
and
push
pop
ss
cmp
int3
jnp
in
adc
jno
enter
stc
out
sub
push
mov
mov
aas
mov
mov
cmc
les
and
push
sti
xlat
dec
loope
mov
mov
jbe
mov
push
push
xchg
cmp
mov
hlt
cmp
jbe
mov
push
and
dec
inc
xchg
int3
xor
push
sub
dec
test
or
cmp
dec
add
ljmp
add
add
or
pop
ss
sub
xor
sub
xor
sbb
arpl
sub
cwtl
pop
data16
clc
movsb
iret
out
out
inc
xor
xor
in
inc
imul
mov
icebp
mov
inc
mull
out
pop
mov
pop
push
jns
test
jne
repnz
cmpl
xchg
add
sub
and
adc
inc
mov
mov
push
jbe
xor
xchg
fdivrp
es
les
xchg
pop
add
and
xchg
std
aaa
subb
mov
dec
pop
cmp
nop
pop
pop
hlt
fsub
add
add
aaa
jae
hlt
mov
xchg
jecxz
xchg
push
mov
and
push
push
inc
jns
je
inc
add
or
sbb
sub
stos
and
jbe
pop
mov
cmp
mov
jle
push
xor
gs
adc
mov
call
sysexit
mov
cmpsl
jb
into
mov
sahf
cli
xor
out
mov
imul
xlat
xor
repnz
push
cmp
pop
mov
mov
push
adc
std
push
fcmovne
aaa
sbb
jmp
arpl
es
aaa
dec
jae
add
aad
sub
imul
sub
adc
hlt
jmp
cmp
idivl
cmpsb
push
cmp
ljmp
movsl
jns
inc
and
sub
fnstsw
xchg
ss
push
out
xor
inc
jg
mov
arpl
mov
jge
test
jbe
jge,pn
or
adc
jl
int3
sbb
call
out
cmp
add
clc
into
gs
add
add
insl
push
cli
repz
mov
stos
cmp
lret
xchg
ret
push
and
pop
jnp
shrb
pop
arpl
repnz
or
insl
outsl
pop
ret
cwtl
movsb
popa
push
mov
insb
pop
cmp
cmp
xor
bound
add
int3
es
cmp
jo
test
mov
jg
lcall
cmpsl
sbb
mov
push
mov
sar
mov
xor
lock
jge
dec
add
jne
imul
xchg
pushf
add
lods
subl
adc
pop
out
mov
ret
lcall
jb
sbb
adc
idivb
inc
push
jge
add
and
add
mov
xor
lahf
push
mov
cmp
inc
jno
arpl
das
mov
ret
sub
adc
adc
sub
out
xorb
jno
arpl
jge
push
add
into
and
jg
mov
or
ds
lods
mov
shll
sti
mov
mov
stos
pop
pop
push
mov
loope
xor
inc
jmp
mov
lahf
lcall
pusha
int3
push
dec
scas
add
cwtl
mov
jg
pop
cwtl
aaa
mov
and
or
iret
fildll
xor
popa
pop
loopne
cmpsl
lds
lret
setbe
jns
dec
mov
gs
sbb
sub
pop
mov
pushl
loop
xor
or
rcrb
push
xor
jbe
ret
or
leave
imul
mov
subb
shlb
push
out
xchg
fidivrl
negb
mov
fisubl
daa
fwait
imull
mov
push
jmp
add
inc
bound
shll
fnstenv
pop
or
dec
lea
mov
mov
test
mov
mov
push
mov
orl
jo
push
mov
push
mov
cmc
ret
xchg
js
dec
jo
andb
fsts
inc
xchg
enterw
pop
imul
sub
adc
add
pop
outsl
cmp
ret
dec
aad
push
pushf
xor
ja
cwtl
mov
sbb
outsl
dec
and
pop
sbb
mov
pop
ss
sbb
pop
movsb
mov
adc
lods
mov
fwait
aam
iret
jnp
out
fs
dec
es
gs
sub
inc
fidivl
push
lcall
inc
pop
push
rolb
xchg
push
cmp
fwait
sti
dec
cmp
insb
ret
stos
repz
call
pop
in
sub
movsl
jno
orb
jne
or
jg
insb
push
add
or
aam
pusha
sub
jmp
jb
jge
adcl
insl
mov
int3
inc
faddl
cmp
cmpsl
pop
testl
mov
push
out
xchg
or
sbb
xchg
push
shr
and
sbb
fmull
filds
loop
and
add
into
leave
mov
and
scas
ss
iret
mov
loope
inc
dec
mov
sub
jne
insl
je
xor
push
jnp
addr16
call
xchg
xorb
sti
sbb
jge
dec
cli
jmp
push
xor
mov
xchg
in
fisubrs
mov
cld
and
sbb
lcall
mov
dec
outsb
xor
aas
fs
out
xor
ja
pushf
jnp
fs
fsubl
add
iret
pop
divl
mov
cmp
jne
mov
sbb
scas
in
xor
mov
cld
cmpsb
or
jle
xchg
out
push
pop
jge
push
inc
jecxz
push
in
xchg
popf
cwtl
cmpsb
aam
adc
fsubp
push
mov
pop
sti
cmpsb
aaa
mov
or
inc
sbb
push
int3
sbb
pushf
mov
and
into
std
cmp
adc
js
sub
mov
data16
lret
lahf
shlb
xchg
dec
std
adc
pop
push
sub
subl
cltd
jecxz
mov
inc
lds
pop
ja
imul
and
sbb
pop
add
or
jle
clc
enter
imul
outsb
enter
xchg
ret
stos
or
pusha
cltd
add
scas
push
scas
incb
push
fistpl
xor
in
outsl
je
and
sub
add
push
dec
test
push
cmp
xor
scas
jmp
inc
and
pop
cmp
adc
outsb
aam
mov
add
dec
pushw
pusha
fwait
les
fmull
or
and
xchg
inc
sub
jl
push
push
mov
cmp
dec
or
xor
or
push
arpl
cmc
roll
fs
sub
out
xlat
xor
lods
outsl
add
arpl
mov
mul
mov
cmp
jge
daa
or
mov
sbb
push
add
mov
in
push
jnp
cvttps2pi
pop
fsts
rcr
sbb
repz
into
arpl
mov
or
jg
mov
insb
xorl
call
dec
xchg
adc
pop
movsb
cmp
dec
adc
sahf
repnz
cmp
subb
inc
sahf
dec
pop
sbb
xchg
xor
push
lahf
lods
push
loop
ret
rcll
outsb
mov
pushl
add
ja
nop
mov
dec
ret
in
sbb
lds
add
je
and
pop
cmp
into
in
and
cmp
ja
and
xchg
icebp
outsb
enter
lret
test
das
fmuls
xor
shll
inc
aam
cld
sbb
dec
ljmp
and
or
iret
mov
push
jb
rclb
cltd
pop
pusha
out
mov
dec
dec
int
jp
mov
cs
loope
cmpsl
mov
and
dec
mov
fisubrl
lds
push
das
jecxz
repnz
sbb
js
movsb
and
into
mov
popf
cli
mov
jecxz
scas
bound
aaa
iret
cli
or
outsb
xlat
loopne
and
cli
loopne
repz
aas
icebp
mov
lods
xchg
or
jno
push
adc
aad
jmp
fisubrs
jge
out
pop
sbb
iret
mov
ds
sbb
push
mov
mov
xor
xorb
dec
roll
sbb
sbb
out
cmp
in
lcall
pop
mov
lods
mov
pop
pushf
inc
in
lods
mov
mov
push
jnp
leave
nop
push
xchg
mov
jns
jl
movsb
std
and
lods
adc
jne
cmpsb
mov
aaa
mov
sbb
push
add
into
lock
pmullw
mov
cmp
sub
push
icebp
aam
sub
rcl
pop
aas
xchg
inc
sub
mov
lods
clc
or
jmp
inc
xor
lcall
in
pusha
or
xor
dec
dec
int
clc
ss
cmp
jnp
movsb
jle
mov
pop
push
arpl
adc
jecxz
nop
stc
inc
xchg
cmp
sub
out
mov
xchg
fbld
pusha
incb
leave
dec
aas
ffree
and
and
dec
jae
test
scas
popa
add
or
mov
lret
pop
ret
mov
arpl
scas
sub
dec
clc
inc
leave
mov
mov
loopne
sbb
cmp
mov
test
push
and
jmp
push
and
lret
mov
push
sbb
jl
fistps
dec
cmc
mov
jno
or
scas
std
loopne
int3
mov
ja
and
push
xor
push
sar
shll
dec
addr16
test
pop
loope
xchg
adc
jns
and
pop
jns
loop
cmp
outsl
pop
and
xchg
insb
cmp
mov
sbb
xchg
cltd
add
ss
lea
sbb
insb
pop
inc
inc
mov
std
ret
roll
out
xlat
into
out
adc
xchg
pop
int
push
insb
shlb
insl
mov
mov
lods
aas
les
adc
adc
scas
stos
decb
pop
testl
ficoms
repz
mov
pop
add
or
push
clc
dec
pop
sbb
repnz
je
aam
inc
dec
das
out
mov
test
int
xchg
stos
xchg
aaa
dec
jge
mov
stos
add
xchg
popl
jmp
pop
mov
jmp
and
dec
pusha
lock
jmp
aaa
mov
fcmovnu
jecxz
fnstsw
aas
fs
popf
popa
lods
adc
cmpb
aad
add
aad
loopne
lock
shll
int
inc
scas
rcl
sub
aam
and
and
adc
mov
cmp
jp
adc
negb
push
pop
fs
enter
mov
fisttpll
adc
dec
mov
jnp
sbb
xor
icebp
dec
or
ja
jmp
call
mov
cmpsb
add
imul
adc
mov
inc
fdivrl
mov
cli
js
jbe
es
push
ja
push
push
orl
in
lcall
mov
scas
imul
pop
cltd
arpl
add
mov
loopne
sbbb
lret
inc
out
cmc
sub
cli
jns
das
scas
arpl
jmp
cmc
push
mov
enter
scas
cltd
mov
cltd
mov
in
aad
mov
xchg
je
xchg
and
lock
inc
sub
adc
xchg
loopne
rol
lret
inc
out
loope
aas
cli
inc
lock
jbe
pushf
xchg
add
enter
aad
jo
bound
xchg
in
sti
stos
jno
mov
push
lret
jecxz
xor
pop
dec
sub
aad
scas
push
add
xchg
icebp
xor
shll
push
outsl
es
mov
mov
push
jp
xor
in
push
aas
inc
pop
out
dec
mov
sub
les
xchg
jno
jbe
dec
jmp
jg
outsl
stc
mov
call
jae
ret
das
pop
xchg
inc
dec
sti
fisubs
mov
ja
add
jg
ja
mov
push
xchg
xchg
movsl
push
cmpsb
scas
inc
add
dec
push
push
sbb
mov
add
or
lret
push
xor
add
inc
sahf
movsl
adc
lcall
adc
cs
cltd
les
add
sbb
enter
int3
dec
dec
out
fidivrl
cld
lea
lock
add
jbe
movsb
js
movsb
mov
mov
inc
xor
loope
adc
cmp
pop
jmp
push
mov
push
inc
xor
pop
and
xor
leave
mov
jno
mov
jle
add
cmpsl
lods
pop
mov
xchg
push
imul
jecxz
and
mov
les
adc
cwtl
xlat
sbb
loopne
fiadds
pop
stc
xor
sbb
push
push
jl
pop
or
cwtl
xor
lock
xchg
ss
mov
enter
xlat
imul
and
test
push
xchg
jnp
rorb
sti
push
mov
mov
dec
or
shll
fimull
addb
xor
pop
mov
icebp
clc
mov
push
mov
push
pop
clc
xor
push
shrb
mov
test
dec
scas
dec
lcall
xor
adc
add
repnz
lods
mov
stos
jg
push
push
ljmp
data16
mov
inc
daa
movsl
hlt
push
sahf
jns
mov
les
cmp
mov
daa
shrb
mov
mov
lret
mov
fstpl
push
mov
fnstcw
cwtl
jle
mov
es
lods
or
stos
fwait
jne
stos
mov
neg
in
inc
ljmp
jle
repz
mov
lds
mov
mov
mov
push
ret
scas
and
testb
movsl
mov
sub
sub
adc
add
addps
popf
adc
inc
sbbl
gs
and
stos
in
add
imul
inc
andb
js
insb
ret
fwait
jns
push
ljmp
or
sub
sbb
xchg
in
pop
sub
icebp
xor
insb
lret
add
addps
xchg
fidivrl
dec
adcl
xchg
pusha
in
clc
int
fcom
inc
ror
xchg
inc
orb
pop
out
mov
adc
subl
movsb
pop
insb
xchg
or
fwait
repnz
shlb
mov
imul
sbb
ljmp
ficomps
push
pop
push
push
cmp
movl
les
rcll
pop
mov
nop
mov
lock
sbb
jl
dec
mov
dec
loopne
push
fwait
mov
bound
push
outsb
push
pop
sub
int
ret
push
fs
push
push
mov
push
out
fst
in
cmp
je
xchg
mov
dec
mov
ss
mov
inc
stos
dec
sub
ja
mov
sbb
inc
sarl
loopne
sub
cmc
cmp
cmp
and
out
jl
outsb
fnstenv
cwtl
lods
inc
ljmp
cli
inc
pop
sbb
pop
test
add
inc
sub
lods
pop
rcl
or
testb
fucomi
data16
inc
inc
subl
jl
rcr
movsb
dec
inc
jp
fisubl
test
inc
scas
repz
ffree
push
out
ss
mov
ret
xor
jmp
mov
jne
xor
shll
lds
xchg
cmpsb
xchg
jae
mov
ljmp
mov
xchg
sbb
mov
in
enter
dec
sahf
pop
mov
rclb
imul
jl
rorl
mov
pop
push
popf
adc
aaa
in
das
cmpb
or
jne
pop
mov
or
sbb
cld
fildl
std
push
mov
or
xor
rcrb
dec
xchg
out
addr16
aad
in
and
pop
jl
jb
xchg
repz
fisubrl
out
dec
xor
sub
jne
sbb
add
mov
fs
lds
icebp
icebp
in
nop
add
mov
lods
mov
test
call
adc
jg
out
push
pop
mov
push
or
push
sub
inc
xor
inc
mov
insb
mov
jae
mov
push
mov
sub
movsl
pop
std
cmp
movsl
ss
out
sbb
push
push
arpl
jl
pop
movsl
imul
dec
cmp
pusha
fimuls
dec
js
mov
clc
in
sbb
pusha
jb
sbb
inc
pop
fs
mov
push
popa
imul
cltd
in
stos
test
jbe
rolb
add
cmc
pop
xchg
test
aaa
pop
dec
rep
repnz
clc
mov
repz
std
sbb
clc
pop
lods
mov
int3
inc
in
pop
jl
sbb
cwtl
in
jle
mov
cmc
push
fdivrp
dec
or
sub
pop
shl
mov
xchg
pop
mov
imul
lcall
scas
dec
test
xor
dec
cmc
int3
inc
mov
mov
add
das
repz
dec
inc
adc
dec
stc
je
push
out
scas
dec
lret
pop
fwait
movsl
mov
fisubrl
iret
xor
and
xor
push
or
mov
bound
cs
jg
mov
fstpt
movb
push
cmp
push
insl
imulb
sahf
cmp
in
pop
ja
in
jecxz
push
push
fstl
jmp
sbb
add
mov
call
test
loop
mov
pop
push
cmp
popa
adc
adc
test
jp
in
ljmp
nop
or
shlb
lahf
pop
inc
inc
ret
mov
ret
push
aas
subl
cmp
pop
mov
stc
inc
sbb
push
xchg
jnp
pop
mov
sbb
xorb
clc
push
dec
stc
jmp
adc
in
pop
jnp
and
in
stos
xchg
pusha
fisubl
mov
fisubs
push
mov
adc
test
pushl
stc
push
mov
pushf
nop
mov
cmp
inc
mov
push
loope
add
pop
jno
fwait
into
pusha
fisttps
cmpsb
jge
in
testb
out
addr16
addr16
fcmovu
add
int
mov
fmuls
test
sbb
enter
mov
pop
stos
dec
sbb
dec
mov
push
psadbw
gs
mov
add
insb
cwtl
es
mov
push
adc
mov
and
leave
fwait
loop
cmpsb
cmp
inc
or
sar
jge
mov
jmp
iret
ds
jl
cltd
cmp
xor
dec
cmp
pusha
dec
inc
jecxz
aam
and
imul
mov
or
insb
mov
out
mulps
clc
scas
xchg
ss
fistpl
sbbb
push
dec
out
ret
or
lahf
adc
shll
mov
sub
add
jnp
mov
int3
ja
ljmp
dec
outsl
addr16
adc
movsb
dec
stos
mov
pop
test
jo
sbb
and
push
jb
inc
jno
push
mov
sub
xor
xchg
mov
arpl
rcrl
mov
adc
adc
ja
jno
cli
mov
or
es
cmpsb
hlt
jl
fimull
cltd
call
gs
mov
dec
jmp
jge
incl
sub
sahf
rolb
push
add
jbe
mov
pop
mov
push
pop
mov
les
jl
push
jno
and
rorb
fucomp
cmp
xchg
lds
fnstsw
cmpsb
adc
fmuls
cltd
dec
jecxz
mov
popa
pop
dec
out
sbb
sub
cmpsl
ds
test
mov
nop
movsb
dec
add
pusha
push
cmpsl
mov
movsl
test
neg
push
cmp
lods
mov
loopne
xchg
fwait
mov
pop
mov
stc
mov
out
inc
inc
push
xor
xor
movsl
mov
scas
add
es
pop
lahf
dec
xlat
dec
popf
lods
or
lret
mov
sarl
jg
es
rep
pop
pop
mov
and
mov
in
xor
mov
and
mov
or
incl
lret
push
xchg
xor
jg
mov
sbb
ljmp
xchg
mov
add
push
and
cmp
mov
xor
stos
or
insl
cmp
xchg
sbb
in
fs
cli
sti
or
lret
xorl
jle
sub
outsl
lahf
push
inc
stos
cmp
cwtl
push
in
test
add
cld
mov
xchg
and
scas
sarl
or
fs
jg
cld
pop
rcrl
fimuls
xchg
jae
mov
notb
clc
in
test
push
jb
bound
sahf
rolb
mov
hlt
xor
cmp
and
insl
sub
mov
or
cmp
fstl
pop
insl
dec
repnz
stos
fstpt
test
mov
lcall
mov
or
and
or
pusha
mov
cmc
test
lea
sahf
rclb
or
dec
xchg
in
fwait
stos
push
add
xlat
out
xor
xchg
pop
cli
repz
xchg
sub
mov
adc
hlt
mov
xchg
fistpll
mov
scas
in
inc
lods
icebp
iret
ljmp
outsl
test
push
mov
jecxz
pop
jg
insl
loop
mov
mov
dec
ret
popa
mov
fldl
adc
retw
fstpt
sbb
pop
or
inc
icebp
insb
repnz
pop
mov
push
scas
shll
xor
add
arpl
mov
mov
xor
and
test
daa
inc
jg
in
cmp
stc
loop
cwtl
sbb
push
nop
jbe
mov
inc
pop
std
pop
aad
jno
xor
or
add
sbb
cli
cmp
rcrb
cwtl
cld
scas
je
inc
test
pop
negl
fwait
lods
pop
mov
bound
cmp
sub
ljmp
pop
inc
and
aaa
pop
cmp
lret
into
arpl
jle
loope
adc
and
xor
jl
addr16
lods
mov
test
mov
test
xlat
jp
decl
ljmp
shld
push
inc
and
lds
mov
sbb
sub
pop
xchg
loopne
pop
aam
imul
mov
push
jns
pop
les
mov
push
mov
sub
nop
mov
mov
inc
lea
xchg
push
out
cmp
ret
sarb
rorl
jl
sub
cmp
insb
sub
xor
mov
sbb
xchg
adc
rorl
ja
fnstsw
cmp
push
cmp
js
cmp
adc
sar
cmp
push
sub
cmp
addr16
push
jbe,pt
jns
cltd
or
push
sub
adc
psadbw
sub
mov
pusha
or
and
out
xchg
int
adc
sbb
mov
lahf
dec
lock
jbe
stos
out
cmpl
gs
lds
fs
test
xchg
inc
xor
std
adc
jmp
dec
sbb
add
jo
scas
orl
xlat
jmp
sub
adc
aad
pop
test
mov
add
arpl
mov
add
pop
add
test
nop
jle
mov
or
jnp
cmp
pop
dec
push
cvtdq2ps
push
add
mov
adc
arpl
sub
dec
movsb
push
mov
insb
inc
mov
icebp
roll
cmp
loopne
mov
in
je,pn
hlt
mov
or
jb
push
dec
add
push
adc
pop
loope
outsb
adc
ja,pt
lds
insl
mov
jno
lret
ret
push
sub
inc
outsb
inc
clc
lods
sub
sub
dec
mov
nop
push
mov
int3
dec
cld
xchg
dec
lcall
push
in
mov
dec
int3
cmc
bound
aad
jnp
cmpsl
sbb
pop
cwtl
cmp
stc
push
testl
or
cmpsl
pop
aad
push
pop
xorb
push
push
jl
les
dec
push
into
mov
imul
cmp
inc
loop
add
pop
jb
xor
roll
iret
adc
std
and
cmpsb
xor
adc
dec
or
sbb
push
lret
scas
cmp
addr16
xor
bound
imul
lea
loopne
inc
jb,pn
into
mov
std
cli
pop
or
push
rol
xchg
adc
imul
js
cld
push
je
pop
fxch
fs
sub
cmc
adc
scas
loopne
insl
fimull
mov
enter
daa
inc
rolb
lret
fistps
push
push
inc
xchg
aaa
mov
cld
xchg
icebp
mov
mov
add
sub
rcll
jle
fldcw
adc
xor
or
fcmovne
mov
shl
lds
sbb
dec
dec
cmp
adc
adc
jmp
jne
daa
lcall
push
mov
negb
dec
cs
xchg
adc
fucomp
out
add
or
mov
mov
orl
sbbb
out
inc
push
push
iret
jg
icebp
rcrl
mov
fisttpll
pop
je
mov
mov
jmp
fwait
jmp
and
adc
push
cli
xor
stc
imul
rcrb
xchg
fnstenv
loop
mov
lahf
push
aad
xlat
and
xchg
sub
sbb
jnp
sbb
loopne
ljmp
stos
mov
xbegin
mov
pop
jb
aas
mov
add
inc
insb
cmp
movsb
in
inc
arpl
es
out
sahf
mov
xchg
hlt
sbb
mov
imul
xor
sbb
cli
jg
insb
shlb
insb
jbe
xor
xor
jge
and
out
stos
sub
and
pop
cmp
jnp
sti
push
in
sbb
push
insl
insb
nop
push
add
xlat
mov
cmp
adc
adc
cmp
inc
jb
es
mov
lock
push
sahf
nop
lds
sbb
mov
mov
cmp
mull
fdivs
aad
push
sub
dec
cmc
movsl
lret
pop
cli
ja
mov
cmp
fstpl
dec
mov
jb
cs
stc
cli
mov
lods
mov
adc
push
std
fadd
das
lds
fadds
test
or
mov
cmpsl
addl
inc
test
or
sbb
add
jns
mov
f2xm1
jle
iret
stc
aas
jle
adc
int3
cmp
dec
push
hlt
icebp
inc
scas
xchg
mov
sub
add
cmpsb
out
or
dec
jmp
test
loope
jge
dec
in
fwait
dec
cmp
cmp
inc
das
inc
add
mov
adc
xchg
fldl
cmc
push
mov
movl
lret
mov
mov
pop
pushf
lea
push
mov
push
addb
in
pop
cmp
lcall
lods
xlat
ja
mov
outsb
fsubs
flds
or
cmpsl
and
and
mov
out
jecxz
adc
lcall
popa
add
imul
js
pop
adc
lods
push
inc
jp
push
mov
xor
mov
rcl
mov
dec
test
push
pusha
mov
loop
cli
popa
inc
sbb
and
push
sahf
pop
mov
mov
loop
xchg
call
pop
dec
jp
mov
inc
addb
ret
jg
mov
mov
add
imul
mov
push
lods
repz
dec
lret
jmp
pop
repz
sbb
icebp
pushl
or
xor
outsl
sbb
mov
mov
or
pop
lods
jnp
dec
sahf
mov
shlb
inc
jl
out
call
mov
mov
into
stos
insb
xchg
jb
or
gs
out
leave
push
add
out
pop
pop
gs
pop
aaa
das
lret
jno
jp
inc
out
cli
jno
mov
and
jns
or
and
je
insl
jmp
push
movsb
out
cli
ret
push
mov
jge
pop
mov
xchg
dec
cmc
mov
lds
push
cmp
arpl
and
mov
dec
loopne
pop
aas
popf
sub
addr16
cli
pop
pop
gs
mov
jnp
or
pop
mov
popa
jmp
popf
hlt
aaa
lods
in
mov
test
add
or
jb
hlt
daa
ret
add
rorb
enter
nop
and
add
aad
add
mov
add
xlat
or
out
inc
add
cld
pop
or
bound
jmp
jbe
and
mov
and
mov
out
adc
pop
call
mulb
push
fwait
sbb
and
mov
jnp
icebp
loope
inc
pop
and
ss
cmp
dec
xchg
mov
mov
pop
mov
or
idivl
add
scas
xorl
popf
and
xchg
hlt
lock
dec
inc
cmc
add
jecxz
das
mov
and
sbb
test
and
push
in
call
push
test
repz
mov
fs
fiadds
jns
jp
sbb
mov
mov
fs
loop
in
cmp
mov
dec
xor
mov
pop
std
mov
adc
out
jnp,pt
push
cli
sbb
and
add
cld
test
lea
lcall
sub
mov
aaa
cmp
cmpsb
add
popf
es
adc
cmp
rorl
out
dec
bound
testl
cmp
sbb
shll
push
push
je
sub
testl
and
cmpsl
out
inc
mov
jle
mov
aaa
ret
fdiv
and
mov
es
xchg
mov
push
popa
dec
push
hlt
mov
cmp
aam
adc
mov
movsl
hlt
jne
das
scas
mov
vmread
std
rcll
mov
fsub
mov
inc
ret
call
adc
int
in
inc
xchg
in
mov
imul
je
sbb
imul
pop
sbb
mov
fisttps
les
xchg
loope
add
or
mov
mov
mov
test
inc
fdivs
mov
sbb
dec
push
das
repz
scas
cmpl
popl
loope
inc
push
pop
mov
cmp
jne
fsub
mov
js
pop
in
dec
or
ret
in
pop
add
push
dec
arpl
lret
dec
push
add
es
mov
cmpsl
inc
popf
stos
adc
loope
aad
xor
adc
aas
jmp
sti
imul
std
push
addr16
fistl
in
inc
mov
and
cmp
shrl
mov
and
and
shll
inc
push
pop
push
cmp
mov
movsl
in
ja
xchg
cmc
xor
lods
inc
pop
mov
xchg
dec
insl
popa
and
andb
jnp
gs
and
pop
pop
cld
outsb
add
imul
ss
xchg
mov
fimuls
cld
pop
movsl
xor
aas
xchg
or
mov
call
pop
aad
sbb
stos
test
enter
js
dec
ja
vrcpss
in
xor
jae
aam
cmp
lcall
mov
adc
sbb
fwait
push
call
add
sbb
fsubp
cld
dec
add
push
test
ret
imul
inc
nop
pmullw
ljmp
xchg
push
inc
shll
mov
jo
nop
fwait
leave
gs
lods
in
out
add
jg
scas
je
insb
jnp
mov
jbe
iret
jge
or
movsb
jb
and
jl
cltd
mov
push
inc
jnp
push
mov
sahf
insl
leave
jb
aaa
xchg
es
aas
push
sahf
fistpl
loope
rclb
xchg
push
or
pop
ficomps
dec
std
cmpsb
sub
in
xlat
jno
popf
sub
dec
js
test
cld
cmp
jp
aas
pop
ljmp
in
jb
cli
out
mov
xor
mov
inc
shlb
pushf
lea
push
out
pop
sub
cmc
push
xor
adc
inc
movsl
in
xchg
addr16
mov
insl
sub
fisttpl
xlat
add
push
gs
call
jge
ret
aaa
ret
mov
loop
pop
xchg
mov
mov
add
push
sbb
into
das
es
or
icebp
mov
mov
mov
xchg
cli
xor
arpl
sbb
pop
fiadds
call
in
pushf
add
std
addr16
jae
test
pop
mull
je
or
mov
dec
mov
push
cltd
lcall
pop
out
adc
in
xchg
in
aaa
mov
out
dec
sbb
sbb
pop
inc
int
inc
xabort
sti
mul
cltd
rcrl
or
jle
outsl
mov
push
xorl
in
dec
pop
mov
sub
les
inc
mov
jo
cltd
xchg
sub
roll
and
jp
push
xor
mov
inc
stos
mov
pop
iret
push
xor
ret
jb
stos
cmp
fucom
sbb
sub
push
adc
adc
lock
mov
mov
pop
cli
es
pop
into
cmp
cmpsl
cmp
xor
stos
sbb
jmp
pushf
int
fs
lods
test
sub
sub
push
push
stos
scas
in
into
decl
fldl
roll
sbb
loopne
mov
sar
xor
repnz
cli
adc
jecxz
mov
mov
mov
lds
cmc
mov
push
stc
inc
mov
popf
xorl
sub
aaa
jbe
testb
cmpsl
movsb
std
movsl
popa
sub
mov
pop
xchg
sbb
out
xchg
inc
nop
imul
cmp
cmp
jo
int3
rclb
cmp
mov
pop
cmpsl
cmp
ret
inc
icebp
insl
pop
jnp
or
and
in
ret
xor
iret
lods
js
push
loope
cmp
sbb
movl
imul
sub
roll
mov
stos
addr16
adc
repnz
xchg
nop
jne
dec
mov
lahf
xchg
movsb
inc
pop
xchg
xchg
ret
fstps
pop
cltd
int3
in
push
cmp
and
inc
xlat
dec
cmp
stos
out
pushf
sahf
pop
xchg
ret
cwtl
mov
mov
fwait
pop
mov
adc
fs
leave
pop
jge
outsl
jns
jge
cld
pusha
push
lods
clc
mov
daa
clc
sub
dec
mov
mov
or
and
nop
jecxz
dec
mov
jo
setbe
and
xlat
lcall
sub
and
push
mov
jmp
lret
jae
dec
lret
xor
push
adc
mov
jl
or
dec
add
or
inc
mov
jno
jne
inc
repz
iret
push
fwait
or
lds
ljmp
dec
iret
insl
mov
adc
push
or
clc
bound
mov
call
sbb
or
cld
in
in
push
push
test
subl
rcrb
fxch
adc
pop
adc
test
ret
push
leave
or
addr16
inc
lret
into
ljmp
xor
push
push
mov
lret
test
xor
pop
xchg
cmc
lea
push
into
or
dec
jmp
stos
xlat
dec
mov
xchg
out
jns
cmpsl
push
fucom
mov
pop
lock
setl
fistps
sti
repnz
bnd
mov
cmpsl
mov
call
adc
add
and
stos
cs
stos
aas
jns
je
enter
push
std
dec
inc
xlat
adc
cmc
lea
stc
jne
push
inc
lds
je
cmp
mov
sbb
xchg
mov
mov
cmpsb
js
pop
outsb
int
sbb
out
ljmp
jp
add
dec
mov
push
push
sbb
inc
pop
pop
lret
adc
jns
push
in
out
jnp
insb
rclb
sarl
cmpsb
lret
shll
xor
cmp
stc
push
xor
xor
sbb
les
and
fwait
add
icebp
adc
call
pop
mov
fwait
xchg
ret
outsb
xchg
sbb
repnz
pop
fidivs
aaa
adc
jno
xor
cmp
mov
scas
daa
mov
leave
cmp
loopne
test
cli
mov
cmp
fldenv
sub
cmp
std
arpl
cmp
dec
fistpll
outsb
aas
notb
mov
inc
mov
in
rclb
dec
or
mov
iret
mov
cld
fimull
pop
fistpll
xor
pop
incb
pop
loop
negl
in
jmp
dec
out
xchg
test
cwtl
jo
xchg
mov
dec
mov
test
dec
add
push
push
stos
les
sahf
dec
xchg
add
int3
jmp
jl
mov
inc
fdivl
xchg
lea
insb
adc
sub
out
xchg
enter
bound
or
loopne
cltd
vpextrw
lds
and
lods
aam
in
add
fisttps
adc
out
ljmp
xchg
cmp
xchg
push
xchg
pop
lret
xchg
int3
cld
stos
clc
adc
pop
push
fistl
sbb
sub
or
adc
inc
outsb
iret
test
push
sub
cmp
add
mov
lret
xchg
cmp
adc
dec
or
shll
jno
pop
rcrl
lret
pushf
dec
mov
and
jl
jl
cltd
fsubr
add
rcl
inc
ljmp
sahf
jge
popa
outsb
jle
push
push
int3
stos
sahf
sub
lret
cmc
sub
jl
cli
mov
pop
decb
push
mov
xchg
cli
xlat
arpl
pop
cmpl
aad
pop
xor
xorb
out
stc
dec
int
js
mov
pop
shlb
adc
cs
mov
pop
mov
jge
sub
call
sub
addb
and
sbb
popf
push
jnp
shr
ljmp
imul
es
outsb
pop
pop
imul
pop
push
push
outsl
mov
sub
dec
movsl
ja
scas
mov
xchg
stos
aad
sub
lods
jbe
mov
inc
aaa
gs
jno
bound
lea
push
fwait
mov
fildll
pushl
pop
scas
into
adc
add
mov
jmp
call
lret
insb
int
and
mov
jae
test
andb
or
mov
fstl
and
jns
mov
mov
in
pop
push
pop
cwtl
push
stos
sbb
mov
mov
fisubrl
std
test
jp
add
xor
sub
mov
rclb
out
mov
iret
aam
lods
stos
adc
sbb
push
ss
movsb
jo
add
dec
jmp
fwait
cwtl
clc
mov
movsl
addr16
jne
adc
xor
push
pop
adc
sbb
test
jno
pop
push
hlt
push
and
test
outsb
mov
and
jg
aad
cmpsb
fwait
add
shlb
addr16
sbb
jmp
lret
es
sub
mov
mov
push
push
add
inc
je
inc
out
push
inc
xor
out
popf
movb
sub
nop
loop
pop
mov
stos
push
jbe
pop
jl
ret
cmp
sbb
es
jecxz
jno
out
clc
lods
int
jbe
cmc
gs
push
cltd
jo
scas
xor
push
xor
shrl
icebp
mov
pop
sahf
out
sub
inc
ljmp
xchg
mov
rorl
jg
scas
jmp
mov
jae
aam
mov
lods
and
lock
dec
jge
sub
cmpb
ljmp
in
sub
insl
push
lods
or
orb
push
pop
add
pop
andb
xor
fdivrl
sub
int3
data16
repnz
push
pop
fisubrl
sub
xor
arpl
xchg
dec
cmp
cmp
cmp
mov
dec
inc
mov
sbb
fisubrs
lahf
add
out
xor
mov
int
mov
push
sbb
cmpl
mov
in
lea
fidivrl
mov
es
cmc
cmpsb
adc
push
daa
jo
ret
add
xchg
jl
or
or
cmp
adc
hlt
pushf
das
cs
repz
rcrl
inc
push
sub
sbb
lds
cmp
or
mov
cli
ljmp
into
nop
mov
fwait
xchg
stos
sahf
xor
inc
push
loope
sub
inc
inc
inc
in
shrb
subl
es
addb
imul
lds
or
sbb
lds
roll
loop
push
sub
das
test
stc
je
cmp
int
add
jmp
in
icebp
ss
bound
icebp
sbb
jae
add
dec
and
lcall
lds
out
dec
jnp
mov
cli
aad
add
sbb
pushl
cwtl
sub
mov
add
xchg
data16
repz
lahf
dec
pop
iret
rorb
xchg
int3
cmp
add
fisubs
aad
addr16
sbb
scas
xor
jnp
push
jle
bound
push
sub
lods
sarb
sbb
es
js
popf
jmp
mov
jns
sbbb
sbb
lods
push
add
sub
add
in
int
ret
aas
out
mov
popf
inc
lods
scas
cmpsl
pop
and
and
or
icebp
call
bound
loopne
xchg
loop
sub
dec
jmp
jg
sbb
sbb
loope
addb
stos
pusha
fstpl
lret
ds
loopne
mov
or
test
ss
out
sub
mov
dec
jae
sub
sub
push
roll
push
xor
mov
into
mov
ss
fiaddl
daa
scas
ficoml
adc
sbb
pop
mov
mov
xchg
xchg
mov
xlat
pushf
and
out
inc
add
cmp
into
fdivp
adc
lret
push
jnp
xchg
iret
cmc
inc
leave
fidivl
sub
add
mov
and
int
lods
cmp
lods
jmp
mov
xor
cmp
movsb
cmp
rorb
xchg
testl
and
lret
scas
jo
test
sbbl
aad
gs
mov
jae
sti
mov
mov
aad
push
fidivs
repz
push
das
inc
inc
out
and
mov
adc
orl
xchg
ja
ljmp
je
inc
loop
lcall
jo
scas
jno
push
and
mov
dec
cltd
xor
xchg
push
stos
sti
icebp
or
pop
shll
inc
jge
mov
repnz
sub
pusha
aad
mov
xchg
bound
dec
jo
fmuls
sti
mov
test
lcall
or
clc
lock
xchg
mov
cmpsb
fwait
hlt
push
push
or
push
or
rol
jecxz
adc
iret
dec
or
xor
pop
test
jmp
cld
adc
fcmovbe
push
std
into
test
or
mov
sbb
push
in
dec
and
add
dec
fadd
pop
push
sbb
dec
mov
cmp
loop
xchg
jb
pop
adc
in
dec
loope
xchg
divl
add
push
fisubl
into
ja
add
popa
jp
arpl
call
adc
xchg
mov
push
push
pushf
jnp
mov
sbb
xchg
xchg
ds
push
cmp
insl
xor
pop
outsb
hlt
ds
cmp
sbb
xchg
clc
mov
pop
cmp
cli
lret
loop
lahf
push
mov
push
mov
sahf
lds
push
mov
push
daa
imul
stc
clc
or
ds
out
jne
xchg
bound
pop
hlt
add
mov
jns
sbb
jae
mov
adc
add
pop
jbe
jmp
cmp
or
addl
jnp
insl
jmp
pusha
lahf
xor
jb
lock
pop
add
sahf
cmp
add
std
call
sbb
pop
es
jp
pop
cmpsb
cld
maxps
mov
fidivs
je
fmull
test
stc
rcrb
pop
cmp
xchg
in
xchg
out
add
add
jmp
scas
test
sbb
or
push
movl
jge
fsubr
and
cmp
push
loopne
stc
dec
jae
and
cmp
popa
jg
push
add
je
shll
inc
sub
push
mov
stc
xchg
mov
notb
rolb
sahf
sbb
gs
enter
jp
jle
mov
adc
daa
add
ja
aaa
ja
call
jae
jg
lea
pop
jb
xchg
pop
mov
fs
pop
push
cmpsb
mov
std
dec
xchg
sub
mov
push
bound
sub
add
and
aas
imul
add
or
xor
or
jns
cmpsb
jno
push
enter
lret
mov
cmc
adc
pop
jnp
es
into
jmp
add
xor
fld
or
push
into
inc
sbb
and
shll
lahf
pop
cmp
sub
mov
xor
mov
jp
pop
outsl
mov
adc
loope
push
jg
int
inc
adc
out
aad
stos
inc
outsl
mov
stos
mov
sbb
loope
xor
shl
mov
push
jl
jno
call
and
lods
mov
and
fwait
push
jle
mov
sti
outsb
push
je
cmp
mov
cmp
xorps
enter
mov
iret
popa
call
dec
add
mov
inc
cltd
xchg
jge
mov
jmp
mov
cmc
int3
add
pop
xor
pop
aad
aad
pop
negb
imul
pop
inc
out
lahf
mov
and
lods
test
adc
mov
repnz
data16
and
sub
or
ds
loopne
mov
add
jle
push
jne
mov
xchg
icebp
xor
aaa
mov
insl
sbb
add
pop
cmp
xchg
cwtl
xchg
pop
popf
mov
add
jp
mov
pushf
add
cmp
divl
inc
add
loop
cmp
push
lods
enter
dec
ret
jg
lret
or
loopne
push
cmp
cmp
xlat
mov
mov
imul
xor
jnp
fistl
xor
jmp
loope
mov
out
mov
xchg
mov
stos
fiaddl
sub
notl
xchg
sub
call
push
int3
out
xor
leave
mov
push
inc
daa
pop
or
sbb
test
mov
fnstcw
jle
mov
iret
loop
push
fnstsw
call
dec
dec
add
dec
mov
inc
stos
fidivs
and
leave
mov
push
pusha
repz
inc
sti
dec
adc
or
call
repz
cmp
mov
sti
rorb
dec
mov
lock
cmpsl
push
jecxz
mov
jns
pop
add
mov
jge
inc
stc
das
xchg
push
jle
mov
pushf
daa
xchg
push
xchg
adc
test
mov
pusha
xor
fs
jns
xchg
sub
bound
outsl
enter
leave
mov
loope,pn
mov
bound
sbb
pop
faddl
or
out
mov
hlt
inc
es
or
push
cld
shll
insb
push
add
loop
jmp
lods
xchg
or
xchg
scas
push
cltd
mov
int3
fwait
mov
fsubr
fsubrs
mov
lods
push
push
out
stos
mov
pop
xor
xor
cwtl
sti
int
sub
outsl
pop
in
and
rcrb
rcll
xchg
cmp
jbe
mov
or
test
ss
and
add
outsl
add
push
mov
sub
xchg
add
in
ret
sbb
sub
stc
jmp
movsl
push
sbb
dec
stos
jno
shl
test
loope
push
loope
add
inc
jmp
push
fistpl
faddl
xor
adc
das
out
push
push
sbb
or
call
add
sbb
push
push
orl
pop
hlt
and
push
leave
lds
lahf
mov
hlt
cwtl
int3
mov
jnp
lods
fwait
sbb
ds
cmpsb
rol
psrlw
lcall
sahf
pop
adc
and
mov
icebp
sbb
xor
or
call
cmpsb
mov
xchg
mov
into
daa
push
jae
mov
sbb
arpl
inc
in
les
inc
scas
mov
pop
call
scas
bound
xchg
out
sbb
stos
aaa
mov
test
leave
pop
dec
insl
or
pop
adc
xchg
dec
cmpsl
mov
sub
mov
mov
jle
daa
daa
lea
cmp
push
lds
enter
ja
loop
stos
mov
cs
sbb
adc
popa
lock
xor
pop
ja
lods
scas
repnz
xor
or
dec
movsb
mov
movsb
mov
jg
data16
push
in
mov
add
push
and
scas
rcr
xchg
and
jno
push
inc
pop
test
add
jmp
lcall
imul
xchg
out
in
popf
xchg
in
or
jno
or
jge
out
jo
pop
sbb
and
push
outsb
or
ret
ja
xchg
push
icebp
lret
mov
mov
cmpsl
inc
jp
repz
leave
in
add
mov
jae
mov
testl
ljmp
ljmp
xchg
frstor
xchg
cld
mov
mov
adc
notb
dec
mov
jecxz
aaa
fdiv
shlb
dec
lret
lock
lods
cmp
push
outsl
mov
cltd
stos
cmp
aas
mov
sbb
dec
aas
jmp
adc
ja
dec
popf
clc
xchg
xchg
sarb
sub
inc
jbe
xchg
push
daa
push
push
sub
or
imull
scas
test
ljmp
cmc
lret
loopne
sub
aad
push
sub
cwtl
into
jne
in
sbb
mov
jl
jcxz
jp
mov
js
dec
hlt
fsubp
adc
fwait
lcall
loope
fwait
inc
call
out
jge
lahf
xchg
adcb
jns
sbb
test
mov
bound
and
jnp
cmp
dec
add
mov
test
mov
shr
cmp
mov
push
call
lock
mov
or
mov
mov
idiv
divps
ficoms
inc
jbe
dec
add
outsb
inc
pop
mov
cwtl
dec
jne
and
xor
or
test
lcall
xchg
jp
dec
fisubl
cli
xchg
loopne
fisubrl
cwtl
xor
lods
push
push
or
andb
pop
pop
mov
clc
jl
xchg
inc
dec
sbbl
push
push
inc
dec
xchg
xlat
inc
icebp
mov
mov
lcall
push
or
jae
jns
outsl
pop
pop
gs
mov
aas
sbbl
neg
stos
mov
mov
fcmovb
dec
sbbl
pop
adc
insw
xchg
scas
imull
rcrb
fadd
sbb
repz
lods
aad
out
mov
inc
pop
mov
rclb
jnp
mov
insb
cwtl
pop
inc
inc
sbb
lods
jecxz
push
jbe
cmpl
mov
cli
div
fnstcw
shl
cmpsb
pop
mov
push
cs
add
fdivl
mov
stos
insl
hlt
cltd
cmp
cs
fldt
mov
push
ret
cmp
call
push
test
mov
jmp
mov
xor
in
clc
xor
pop
xor
dec
push
int3
decb
arpl
sub
in
cmp
ret
cmp
adc
stos
out
and
cwtl
fadds
mov
movsb
jae
or
mov
leave
xchg
push
jo
fisttps
nop
ret
mov
pop
insl
jns,pn
cmpb
cld
pop
add
lock
mov
pop
and
cmpsl
push
sahf
std
xor
mov
sti
mov
adc
sub
xchg
lret
and
das
pop
sub
dec
movsl
out
xchg
scas
dec
jo
outsb
in
mov
lahf
imulb
clc
inc
cs
movsb
sub
lods
test
xchg
mov
cmc
lahf
push
add
stos
lods
fwait
mov
in
in
ror
add
push
pop
inc
mov
xor
xchg
xchg
into
pop
ds
push
xchg
xor
sbb
dec
xlat
mov
sub
das
sub
std
mov
pop
or
inc
lea
pop
push
add
addr16
sub
push
mov
lcall
out
pop
leave
inc
aad
jge
iret
push
push
sub
sbb
aas
dec
xchg
pop
mov
pop
adc
pusha
sbb
loope
sub
test
les
jmp
pushf
loop
scas
mov
jno
sbb
mov
inc
mov
aaa
sub
loopne,pt
mov
xchg
xor
adc
xchg
cmp
sar
cmp
lcall
and
mov
push
inc
sub
adc
cmp
loop
xchg
and
popa
push
insl
mov
icebp
jecxz
shl
pop
test
idivb
fmulp
xchg
lods
and
push
jl
leave
out
jecxz
aaa
push
in
fidivl
cwtl
add
popf
inc
dec
sbb
hlt
cmp
cmp
aas
mov
inc
or
iret
hlt
or
sbb
adc
rolb
mov
test
xchg
outsb
movsb
pop
lcall
fisubrl
push
jecxz
pusha
mov
mov
adc
idivb
idivl
lock
mov
and
push
jle
push
push
and
das
cmp
imul
rcrl
push
movsb
orl
or
sub
clc
sub
cmpsl
inc
push
xlat
dec
jg
jl
ret
arpl
fwait
decb
push
mov
dec
sub
cwtl
add
mov
dec
push
ljmp
in
aad
inc
adc
cmpsl
roll
mov
mov
sub
push
outsb
or
clc
xor
lret
pop
push
movsl
idivb
push
stos
cltd
push
outsb
outsb
repnz
mov
pusha
test
push
xor
mov
sub
pop
cmpsl
dec
mov
pop
xchg
xor
ja
inc
or
fnstsw
mov
xchg
daa
cmp
push
add
shll
pop
dec
cvtps2pd
push
and
mov
data16
add
inc
sub
das
mov
mov
mov
rolb
mov
cld
xchg
and
inc
jb
cmp
jge
lods
jo
cmpsb
ret
test
fistps
jae
or
in
add
fiadds
ss
subb
jno
mov
imul
inc
data16
call
push
daa
and
addr16
mov
mov
push
push
push
mov
push
test
lock
cltd
incb
data16
cmp
aas
mov
dec
and
ljmp
mov
loop,pt
test
lret
mov
xor
xor
push
fisubs
into
popa
add
aam
jg
addl
and
cmp
or
mov
and
ds
imul
incb
mov
xor
out
and
stos
add
pusha
stc
mov
sbbb
and
or
and
loopne
xor
jle
pop
sub
fwait
xchg
push
movsl
jae
test
pop
stos
rolb
cmp
ljmp
push
rol
cmp
fdivl
push
dec
or
push
xchg
mov
mov
jb
add
sub
jnp
xchg
mov
xchg
mov
jmp
scas
mov
push
mov
dec
mov
push
xor
daa
std
cmpl
addl
mov
vpunpckhdq
ret
xor
mov
out
mov
repz
je
add
outsb
sbb
mov
icebp
lcall
or
xchg
mov
adc
fs
inc
mov
xchg
stos
jae
jp
dec
lcall
and
or
sub
pop
loopne
adc
sbb
push
mov
aad
jl
sbb
dec
xchg
sub
or
dec
adc
sbb
js
dec
cmp
cmpsb
aam
add
lds
std
ret
or
jo
mov
pop
sub
mulb
insb
mov
outsb
xchg
loopne
inc
fnstsw
pusha
mov
pop
xchg
mov
push
daa
adc
inc
repz
shr
mov
mov
jmp
nop
andb
lret
loopne
xchg
xlat
sub
pop
nop
ds
aas
cmp
test
movsl
pop
inc
rcll
xchg
cwtl
loop
jmp
stc
les
imul
push
lcall
clc
sub
int
jl
xchg
jp
cltd
fcmovb
das
add
stos
das
gs
dec
xchg
dec
mov
imul
mov
xlat
shrb
insb
jp
sbb
cwtl
lods
lret
outsl
or
inc
or
sbb
arpl
je
or
pushf
leave
aaa
test
aad
inc
add
testl
daa
roll
cmp
lods
cmp
call
push
push
mov
shll
lea
insb
mov
or
out
repz
or
xchg
data16
subb
data16
push
adc
sub
pushf
push
pop
or
or
mov
xchg
lds
out
or
cld
test
push
les
cmpsb
sahf
mov
mov
loop
push
movsl
ret
js
mov
lods
push
jg
and
in
xchg
int3
jmp
dec
add
out
aas
jp
sahf
hlt
adc
cmpsl
mov
mov
shr
addr16
int
add
mov
pop
inc
push
mov
scas
and
into
push
xor
iret
xor
test
arpl
dec
aaa
mov
xor
and
xor
mov
movsl
mov
push
imul
sti
ret
mov
insb
divl
les
imul
rcr
mov
sbb
cld
jnp
sbb
adc
xor
sbb
repnz
mov
shrl
test
dec
and
xchg
fildll
int
lahf
pop
out
aam
push
mov
pop
xor
rolb
mov
push
mov
add
shlb
jmp
inc
cmc
cmc
in
or
pop
rcl
lret
push
in
sbb
mov
ret
pop
mov
inc
jbe
mov
jp
in
leave
aad
push
jecxz
jge
or
sbb
insb
popa
insb
mov
jge
frstor
je
mov
xor
xchg
lock
xor
int
int
sti
adc
in
cmpsl
sub
hlt
pop
lret
jle
aas
enter
add
and
in
dec
mov
testb
das
incl
lds
mov
je
insb
mov
mov
mov
mov
clc
test
stos
imul
pop
dec
sbb
adc
sbb
pusha
fs
sbb
sarb
mov
cmp
inc
mov
xor
dec
dec
es
inc
cltd
leave
mull
fistpll
inc
aas
pop
cmp
adc
das
xor
icebp
dec
clc
ss
pop
cli
in
ret
daa
shl
mov
xchg
call
inc
and
loopne
xchg
popa
jmp
and
sub
cld
push
loope
cld
push
and
lret
inc
push
ficoml
stos
mov
daa
into
and
daa
cs
inc
jbe
sbb
xchg
push
pop
mov
movsb
inc
adc
clc
and
or
or
mov
icebp
xchg
dec
cmpsb
out
faddl
stc
cld
mov
xchg
test
fs
cmp
pop
icebp
adc
mov
lods
aam
and
ficompl
lahf
adc
iret
xchg
adc
sbb
dec
jno
mov
jle
mov
sbb
lds
and
xchg
push
loope
pop
and
aaa
fwait
js
int
adc
mov
mov
loop
push
and
ret
mov
testb
adc
lods
fists
sbb
out
dec
shr
jle
and
pop
pop
mov
js
pushf
mov
mov
mov
jns
gs
inc
nop
ss
mov
fdivr
les
cmpsl
push
cmp
mov
sub
jle
mov
sbb
sahf
jns
pop
cmp
pop
fldenv
cmpsb
mov
into
imul
lds
das
jl
js
sbb
lret
or
dec
testl
cmpsb
mov
cmp
movsb
ds
inc
sbb
mov
loopne,pt
in
cwtl
movsl
xchg
adc
sub
push
add
push
pop
mov
pop
sti
ret
cmp
mov
xlat
movsb
sub
mov
jge
fildll
jmp
mov
and
mov
pop
push
test
pop
inc
test
jmp
cmc
adc
cmp
repnz
dec
shll
xlat
out
sbb
fcoml
mov
repnz
leave
pop
cmpsl
jns
into
mov
push
loope
into
inc
imul
or
pop
xor
mov
xor
pop
fsubp
pop
rcrl
outsl
insb
inc
push
js
repnz
lcall
into
inc
call
in
call
call
cmpsb
test
leave
mov
and
aas
mov
test
xchg
mov
xor
adc
mov
aam
jae
jns
or
mov
mov
sbb
movl
xchg
dec
out
call
mov
jnp
shll
repnz
dec
xchg
out
push
sub
stc
js
and
or
jno
jmp
out
lret
jl
movb
jnp
int3
jno
lea
add
outsb
mov
pop
insb
dec
rcr
testb
ret
outsb
xor
and
xchg
pop
sub
and
lea
dec
push
jnp
sub
adc
jg
daa
cmpsb
sbb
inc
cmpsl
iret
inc
aad
push
cmpsb
fadd
fnop
movl
mov
into
jb
sub
inc
inc
outsb
daa
je
clc
sub
lret
stos
mov
xor
fnsave
int3
sub
and
mov
push
scas
pusha
xor
xlat
pop
sbbl
and
aas
mov
xor
inc
les
int3
imul
pop
movb
nop
sub
and
movsl
cmp
jecxz
lock
adc
jno
hlt
test
andb
in
movsl
aad
cwtl
jno
andb
call
xchg
pop
jno
sti
iret
inc
lods
jbe
cld
pop
lods
or
mov
retw
pop
shlb
jmp
and
pop
pop
icebp
push
and
xor
pop
mov
mov
xor
dec
testb
push
push
push
ljmp
inc
aas
inc
push
cmpl
fsubrs
cmp
shll
jno
sbb
imul
xchg
jns
fwait
out
mov
dec
inc
and
cmpsl
dec
notl
cmp
icebp
sahf
std
cmc
imul
push
ja
sbb
lods
scas
daa
pop
imul
int
sarl
xchg
sub
cmp
jmp
and
push
cmp
push
and
aaa
pop
ret
lret
or
push
push
call
leave
or
mov
lds
mov
insl
dec
les
fdivl
shll
jg
mov
psubusw
daa
test
adc
cmpsl
dec
push
ffree
add
fadd
pop
sub
mov
pop
lock
mov
mov
sahf
pop
dec
xor
fdivl
jns
mov
pop
mov
icebp
mov
cmp
push
lea
and
sub
add
sbb
and
and
shrb
jecxz
push
cwtl
cmp
pop
mov
mov
sbb
mov
xchg
sub
enter
into
popf
ja
fcoml
popf
dec
loopew
push
push
repnz
fwait
dec
test
cmp
test
in
daa
out
popa
into
in
icebp
icebp
or
and
sub
mov
dec
outsl
cmc
aam
xchg
icebp
fcompp
es
push
rsm
lea
dec
aam
movsb
adc
dec
ret
call
cmp
mov
add
fs
push
adc
pop
adc
movsl
inc
xor
fldt
stc
xchg
or
insl
inc
and
daa
dec
das
sub
add
and
jl
sub
sbb
insb
push
sti
in
cmp
cmp
cmc
fwait
pop
addr16
mov
mov
fisubrs
test
repz
pop
and
pop
fs
lds
xlat
mov
push
adc
dec
pop
les
add
jbe
xchg
fldl
jmp
pop
sbb
cld
inc
fs
adc
lock
sbb
cmp
push
mov
mov
cmp
test
leave
pushf
and
das
mov
lea
or
mov
mov
testb
mov
orb
andb
dec
and
popa
aaa
cmp
sbb
mov
outsb
je
shlb
pop
jg
lret
and
pushf
sbb
lret
movsb
iret
stos
hlt
xor
adc
test
pop
sbb
lock
jge
adc
test
dec
mov
mov
cltd
js
and
loope
xlat
jnp
and
cmp
cmpsb
or
xchg
push
lods
dec
adc
stos
cmp
fldlg2
inc
mov
add
jmp
pop
xchg
imul
stos
xchg
mov
fmull
jecxz
dec
sub
hlt
insb
fistl
or
bound
clc
xchg
scas
stc
les
mov
ss
loope
test
sbb
mov
bound
mov
or
xor
push
push
inc
out
repnz
inc
push
nop
ja
cmp
and
jg
mov
out
sbb
retw
shlb
call
inc
dec
pushf
jnp
inc
icebp
jle
cwtl
scas
or
mov
cltd
xor
xor
cltd
insl
push
add
add
mov
and
push
ds
popa
lret
pop
mov
and
xchg
xor
insb
insl
loop
ljmp
mov
pop
ret
inc
cmp
cmp
mov
pandn
xchg
outsb
push
pop
arpl
icebp
loopne,pn
sarl
mov
cld
pop
jns
shlb
and
lods
sbb
add
cmp
sub
imul
je
inc
neg
daa
mov
mov
stc
xchg
push
xor
leave
push
mov
adc
icebp
xor
mov
xor
push
repnz
push
jb
out
test
xor
push
jbe
jmp
pop
insb
dec
xchg
or
lds
fsubrs
xlat
sub
and
sub
sbb
mov
int
in
sahf
cmp
sbb
xor
xchg
add
push
mov
pop
popa
imul
cmp
sbb
xchg
shr
mov
lods
inc
jb
cltd
and
stc
outsl
sbb
mov
mov
jae
pop
jle
aaa
insb
jge
out
sbb
outsl
pop
lret
xor
xchg
and
xchg
daa
rcrl
out
testl
outsb
repz
test
pop
cld
jno
fs
enter
cs
inc
push
inc
data16
repnz
xchg
sbb
std
test
loope
jno
rorb
aad
dec
testb
imul
pop
mov
jmp
xor
sub
push
in
cmp
mov
mov
lods
arpl
lock
push
mov
sub
stc
xchg
dec
stos
adc
sub
nop
shlb
xor
xchg
scas
inc
pop
push
and
lods
xchg
in
lahf
xlat
push
jb
jmp
leave
imul
inc
xor
out
xor
mov
xor
dec
push
outsl
lods
mov
and
shrl
jge,pt
and
pushf
pop
mov
xchg
sub
push
dec
test
sbb
or
push
jns
mov
or
push
sbb
push
adc
push
sbb
enter
xor
outsl
testb
cmp
push
jb
adc
cmp
call
push
aaa
pop
inc
xor
adc
insb
fndisi(8087
jg
mov
cmp
fnstsw
unpcklps
je
inc
pop
dec
adc
sub
in
xor
dec
and
mov
lret
pop
sti
jle
fmul
push
push
mov
mov
sbb
inc
pop
jg
push
add
cmp
xor
add
lcall
add
mov
lret
push
add
xchg
in
xor
add
adc
mov
cmpsb
push
push
faddl
dec
leave
cmp
mov
and
stc
sti
daa
or
repz
mov
pop
pusha
ljmp
test
inc
aam
test
mov
sub
xor
or
lods
push
outsb
jecxz
pop
sub
mov
nop
divl
ficompl
arpl
cmp
scas
testl
ljmp
ja
jo
cld
ljmpw
jbe
jecxz
push
pushf
mov
mov
ljmp
cmp
incl
jne
sahf
stc
push
mov
cmpsl
out
or
push
pop
cmc
std
push
sbb
ret
aaa
ds
mov
sbb
pop
xchg
ds
ret
push
pop
popf
aad
fsubr
cmp
adc
jns
push
jbe
adcb
push
sub
and
fadd
icebp
jp
add
loope
leave
pop
mov
and
and
ret
mov
sbb
loope
jmp
test
jp
mov
sbb
cmp
pop
jns
imul
lods
xchg
mov
pop
outsl
jbe
cmp
loopne
rcll
mov
decl
sub
rcl
ss
add
inc
cmpsl
cmpl
out
lcall
inc
roll
mov
mov
dec
and
cwtl
push
dec
cmc
pop
fucom
mov
and
les
addr16
popf
xchg
mov
fs
xchg
cwtl
bound
addr16
out
pop
loop
jle
dec
hlt
stos
ljmp
cmpsb
sbb
ja
mov
in
push
push
bnd
pop
mov
outsl
sub
dec
sub
sbb
aaa
sub
repnz
ljmp
xchg
sub
mov
shl
pop
inc
push
pusha
fnstenv
push
out
icebp
sbb
lahf
ds
mov
lock
imul
sub
lods
cwtl
lcall
in
mov
push
test
fisubrl
xchg
push
into
xchg
jae
cmp
push
mov
aaa
test
movsb
subb
das
cltd
das
inc
bsf
sbb
inc
sahf
sarl
icebp
xchg
xchg
fs
outsb
xor
adc
loope
pop
and
ret
test
and
out
or
dec
jmp
push
movsl
movsl
subl
pop
fs
pop
nop
xor
divl
and
ja
popf
sub
or
lcall
jo
loop
popf
pop
push
lret
lods
sti
or
stos
jmp
dec
add
out
inc
test
mov
iret
jecxz
cmc
pop
mov
test
pop
lds
pop
testb
out
mov
lods
mov
test
add
je
sbb
lds
in
and
int
movl
lcall
adc
push
rol
xor
lds
lret
push
pop
stos
hlt
ret
push
mov
fldt
sahf
xchg
mov
psllw
adcb
xor
mov
in
and
fmull
push
stc
pop
xchg
in
or
xchg
repnz
stc
mov
lea
inc
test
add
pop
lea
shlb
sahf
or
pop
fstpl
xor
out
aas
mov
jae
scas
pop
jns
mov
addr16
xchg
fnstsw
pusha
scas
and
mov
pop
shl
push
pusha
and
inc
xchg
rcll
xchg
lds
scas
enter
add
aas
add
or
sbb
and
das
testl
call
test
add
ljmp
and
insb
pusha
mov
hlt
movsb
or
xchg
jg
adc
stos
inc
imul
dec
mov
divl
daa
push
out
xchg
pop
lods
test
test
jg
xchg
bound
icebp
andl
lods
sub
scas
sbb
push
sbb
xchg
xchg
sbb
test
sti
pop
mov
push
xor
mov
stos
pushf
dec
in
or
gs
jnp
jle
sbb
xchg
nop
int3
insb
call
aaa
pop
es
mov
cmc
mov
push
pop
jg
sbb
jge
dec
icebp
mov
mov
lret
scas
imul
js
mov
cmpsl
rcll
cmp
sub
mov
and
cmpsb
rorb
or
dec
jge
jnp
aas
outsb
inc
nop
outsb
jno
ret
push
cmp
and
std
mov
sbb
adc
or
in
inc
mov
inc
sti
push
lods
je
jl
and
lea
out
fs
insl
test
mov
add
aaa
loopne
inc
scas
sub
shll
insl
and
repz
jb
popf
orl
or
xor
mov
xchg
adc
js
adc
jne
mov
fisubrs
adc
xchg
inc
push
out
in
jnp
scas
shrb
push
ja
mov
pusha
lret
and
dec
std
push
nop
cmpsl
xchg
mov
jbe
sbb
mov
mov
sub
sbb
stos
lea
in
dec
inc
mov
fnstsw
dec
daa
push
out
jo
int
adc
mov
inc
sub
out
repnz
jmp
ds
mov
rcrb
cwtl
mov
cmpsl
imul
push
bound
cwtl
xchg
mov
dec
xchg
mov
lds
push
rorb
out
push
sbb
add
jns
lock
lods
sub
adc
lds
pop
push
bound
push
add
sub
and
addb
push
inc
sub
mov
and
popa
bound
adc
mov
sub
movsl
shll
mov
sub
push
pop
dec
addb
or
pop
data16
xchg
cwtl
push
repz
lock
imul
fcoml
inc
cs
addr16
out
jb
sub
dec
sub
insl
hlt
or
ret
sbb
stc
mov
mov
push
lea
out
ja
sbb
xor
xor
es
scas
in
mov
jbe
imul
out
insl
clc
in
push
cmp
inc
add
test
jae
ffreep
ss
cltd
shrl
mov
sbb
mov
add
mov
and
es
fidivrs
push
sti
call
mov
ja
jno
repz
outsl
sub
xchg
cmp
mov
xchg
push
int
mov
scas
xor
cmp
jmp
jmp
add
sub
cmc
dec
inc
cwtl
loop
and
stos
push
out
inc
and
xor
push
gs
arpl
in
mov
fcmovnb
ret
out
lock
push
xchg
mov
cmp
sub
cld
test
mov
jmp
xor
int3
cmp
stos
sahf
add
mov
sbb
arpl
xor
stc
movsb
arpl
mov
inc
sbb
andb
adc
loopne
mov
xor
lahf
movsb
cmp
jge
daa
or
mov
cmc
fadds
cmp
loope
jp
or
xor
lods
cmc
xor
mov
fwait
testl
sub
addr16
and
mov
xchg
shl
fdivl
pop
lea
jg
push
adc
rcrl
aad
lds
adcl
dec
push
jg
and
cmp
es
lea
mov
in
enter
jle
dec
push
leave
ljmp
out
out
sub
iret
lock
fldt
jg
mov
mov
add
pop
jp
mov
jle
xchg
inc
xor
aam
mov
cld
aaa
insl
sub
lods
ret
adc
fwait
repnz
data16
jbe
fsub
les
pop
movsb
loopne
mov
dec
xchg
fidivs
insb
xchg
push
jae
inc
jne
shr
mov
push
das
jne
mov
negl
sub
or
in
or
addl
add
mov
mov
sbb
sub
std
pop
and
and
sti
cmc
add
shl
push
push
mov
popa
add
cmpsl
fcmovnbe
xor
loope
or
fistpl
add
cmc
bound
mov
into
inc
scas
xchg
pushl
sub
es
mov
cmp
dec
mov
sub
out
inc
dec
jge
daa
inc
pop
lret
out
test
mov
push
cmp
scas
leave
inc
dec
inc
loopne
je
xor
cld
xchg
shlb
push
imul
jb
fwait
in
inc
bound
pop
out
popa
stos
dec
or
addr16
inc
pop
xor
pop
ffree
sub
fbstp
push
push
push
test
pop
push
fsubr
add
xchg
js
push
jecxz
arpl
push
inc
xchg
lea
lahf
sbb
rcl
sub
adc
loope
movsl
pop
addr16
and
push
inc
push
cmp
data16
xchg
xor
xlat
push
or
inc
shll
cld
daa
dec
jmp
jne
push
fs
fdivrs
ret
shlb
xchg
clc
and
fs
fiaddl
sbb
repz
sbb
xchg
and
in
fists
stos
aam
ljmp
sbb
jp
or
cwtl
sbb
and
xchg
test
imul
aaa
jb
cmpsb
push
push
or
push
popf
push
test
dec
sub
inc
pop
cmp
add
xor
adc
push
fdivrs
push
xchg
or
mov
sbb
pop
xor
repnz
pop
adc
and
ss
scas
fcmovnu
rcrl
xor
imul
out
and
bound
cmp
std
mov
mov
push
fs
jg
or
cmpsl
mov
or
lea
das
hlt
lods
push
and
xchg
sar
or
fs
xchg
inc
enter
add
and
mov
xorb
mull
shrl
jle
iret
lcall
jp
or
mov
push
les
addr16
mov
push
lret
jl
mov
loop
adc
mov
clc
push
movsb
dec
hlt
call
negb
jo
push
jp
in
adc
daa
lahf
in
dec
test
pop
scas
jecxz
inc
push
fisttpl
out
xor
call
leave
loop
lods
inc
popa
xor
mov
cli
stc
gs
add
and
xor
hlt
insl
pop
pusha
xchg
repz
or
ljmp
sub
outsl
ret
notb
mov
dec
clc
pushf
stc
jne
xchg
shlb
loope
hlt
notl
push
push
adc
xchg
mov
cmp
xchg
aas
xor
jno
xchg
push
or
adc
ds
push
stos
mov
jp
add
popa
adc
pop
mov
adc
shl
cmp
ret
lss
sbb
inc
fnsave
cmp
ficompl
in
push
bound
jb
pop
sti
stos
mov
mov
je
pop
or
out
dec
mov
hlt
xchg
das
mov
sub
push
nop
cmpsb
arpl
or
mov
mov
lahf
jo
repnz
ds
push
imul
mov
rcr
push
mov
inc
dec
outsl
test
push
pop
pop
pop
shll
jnp
pop
sbb
scas
mov
insb
mov
xor
rcrl
nop
gs
xor
fwait
rcrl
push
push
mov
push
cmp
loop
xor
aas
pop
sbb
insb
addr16
test
inc
cltd
stos
cmp
dec
inc
imul
aaa
std
les
outsl
jo
loop
ss
pop
fistpll
cmp
outsb
data16
daa
mov
repz
add
mov
mov
adc
push
sub
addr16
adc
pop
or
push
lret
jae
sbb
jmp
gs
call
cwtl
cltd
cmc
sbb
insb
cmp
xlat
test
cmpsb
out
xlat
frstor
dec
jle
dec
cli
sti
fsubrl
sbb
pop
pushf
lcall
incb
sub
sub
jg
mov
scas
cld
out
push
popf
xor
mov
clc
bound
mov
and
loopne
int
inc
and
orl
testl
mov
add
clc
dec
jecxz
stos
xchg
jl
xor
jmp
or
aam
pop
gs
jae
inc
popa
inc
push
ljmp
sbb
shl
dec
mov
ret
jnp
stc
popa
shll
mov
adc
push
rolb
mov
sbb
push
lret
mov
in
cmpsb
xor
shrl
inc
or
pusha
dec
push
je
push
repnz
imul
sub
js
jns
push
fbstp
mov
inc
shrb
and
cmc
test
jo
cmpb
inc
push
pop
shl
pop
fs
or
pusha
jmp
out
mov
stos
nop
fidivrl
pusha
lcall
push
aam
insb
add
pop
add
and
mov
mov
lock
xor
fwait
leave
add
or
xor
out
xorl
sub
out
cwtl
sti
pop
push
mov
adc
stos
jns
ja
not
xor
ret
inc
cltd
pusha
nop
inc
cmp
cs
cmp
sbb
dec
jle
cmp
das
mov
and
cs
fbstp
ljmp
mov
lahf
shlb
je
das
xchg
test
pop
mov
xor
mov
lret
sub
inc
and
xchg
nop
inc
movsl
rolb
ss
fldenv
push
jo
inc
mov
in
mov
hlt
xor
push
jle
mov
stos
push
xor
shll
ljmp
pop
or
mov
cli
loop
std
cli
loopne
or
xchg
call
mov
or
cmp
out
mov
mov
fmull
adc
xor
imul
inc
stos
xor
stos
arpl
and
out
push
les
inc
fs
xor
and
xor
idivl
ljmp
fildll
addr16
fadd
rorl
mov
adc
sbbl
jae
inc
jg
das
push
sub
fcompl
lock
insl
cmp
es
cs
adcl
pop
repnz
dec
or
adc
add
rcr
pop
nop
sti
inc
cmpb
push
adc
in
pop
cltd
jge
xor
movsl
mov
cmp
ficompl
leave
add
sqrtps
mov
add
dec
mov
in
aaa
out
pop
mov
mov
in
adc
je
in
aas
hlt
inc
sub
lods
in
jno
mov
test
inc
pushl
and
addr16
cli
js
ss
aas
jno
and
cmpsl
fisubl
scas
dec
jne
ret
mov
inc
pop
mov
out
aaa
es
cmp
cli
pushf
sub
fwait
xchg
mov
sbb
pop
jo
jae
test
loop
sbb
mov
mov
fwait
shrl
push
xchg
and
lret
sbb
xchg
push
aas
jg
addr16
sbb
loopne
paddb
nop
jle
sub
les
add
xchg
shlb
cmp
xchg
mov
mov
mov
cmc
aad
inc
cmp
add
std
pop
lods
out
cmpsb
mov
push
ja
add
mov
xor
loopne
popf
rorl
xchg
lods
jecxz
subl
xor
push
sbb
xorl
pop
adc
xor
fistpll
pushl
mov
daa
fisttpl
lods
ret
adc
lsl
xorb
cltd
xchg
mov
femms
mov
cmc
loope
rcrl
fstpt
inc
loopne
mov
inc
nop
fs
xchg
sbb
mov
out
sahf
js
push
jnp
dec
pop
xchg
cmp
inc
xchg
fstpl
adc
or
repnz
shrl
push
xchg
insl
repz
cmp
mov
sub
pop
test
out
add
sbb
inc
test
dec
adc
inc
pop
mov
mov
sahf
cmp
and
out
add
jge
nop
dec
mov
cli
sbb
addb
xor
inc
daa
cmp
inc
in
fisttpl
mov
cmp
push
ficomps
dec
xor
orl
outsb
mov
fs
add
lahf
push
roll
dec
xor
stos
sbb
jmp
xchg
mov
sbb
lahf
mulb
popf
mov
into
inc
hlt
inc
sbb
pop
iret
shr
and
pop
jp
iret
arpl
or
xor
ficoms
jno
mov
out
loop
fcomp
movsb
dec
loope
mov
js
and
loop
mov
stc
dec
xchg
addl
int
inc
xor
sub
sub
andl
inc
pop
mov
loopne
inc
adc
sarb
fists
in
mov
jns
and
jge
jo
push
aad
mov
mov
aam
ja
sahf
jb
mov
test
in
mov
add
xchg
pop
inc
jno
in
and
popa
das
enter
data16
add
pop
xchg
jnp
adc
jl
fbld
movsb
sbb
jo
popf
lods
cmp
arpl
sbb
xchg
jecxz
iret
mov
sub
daa
push
adc
nop
andl
fstpl
or
add
xor
shlb
mov
inc
push
sub
popa
clc
push
loop
std
shlb
lods
adc
cld
nop
out
add
cmp
dec
fmuls
dec
mov
push
pop
dec
mov
xor
push
pop
adc
or
repnz
fbstp
cmp
mov
adc
dec
cltd
int
imul
test
hlt
inc
int
out
mov
movsb
ss
push
sub
or
jecxz
shrb
ljmp
lds
xor
add
clc
dec
negl
jae
mov
inc
andl
fdivrl
dec
jge
dec
add
in
pop
inc
dec
orb
in
mov
xor
and
outsl
sub
sbbl
leave
and
popf
dec
adc
mov
scas
inc
xor
cmp
lods
and
and
mov
sub
rolb
pushl
pop
stc
cmpl
sahf
adc
xor
add
es
push
dec
out
imul
xchg
and
rcrl
imul
cmp
dec
add
pop
dec
shrl
push
pop
push
test
xorl
iret
sbb
popf
adc
adc
popf
lods
andl
xlat
jae
jmp
mov
scas
shrb
ficompl
mov
scas
movsb
loope
sbb
sbb
mov
jne
data16
sbbb
mov
jle
pop
pushf
mov
loopne
ret
test
sti
add
je
insl
data16
idivl
dec
jae
sub
sbb
push
sbb
dec
int
push
daa
xor
and
dec
inc
jno
sti
std
clc
iret
and
push
daa
cmp
movsl
sub
mul
test
sub
out
or
pop
pop
jmp
lds
mov
ds
xor
call
xchg
imul
pop
mov
mov
pop
popa
mov
pop
fisubrs
xchg
adc
cmp
insl
xchg
xor
pop
ss
or
cltd
or
xchg
shrb
adc
jno
add
xchg
andb
ss
iret
and
je
and
lods
jb
lahf
and
xor
push
sub
push
test
cmp
imul
setae
and
sbb
cmpsl
or
push
cmp
bnd
sbb
add
data16
cmpsl
outsl
movsl
pop
cltd
sti
inc
sbb
or
pop
adc
add
inc
ret
pushf
sub
movl
xor
push
xchg
out
fidivrs
adc
out
lock
out
xchg
mov
pop
ljmp
ljmp
xchg
inc
cli
pop
mov
ret
add
add
dec
add
imul
orl
mov
out
roll
push
in
sub
cmp
movsl
and
sub
push
add
jb
or
flds
inc
adc
pop
sub
xchg
fmull
mov
stos
mov
mov
rcrl
shlb
dec
stos
mov
and
lock
call
inc
or
aas
test
rcl
add
adc
rorl
jmp
fimull
sbb
push
pop
pop
test
inc
xchg
sub
mov
loop
aaa
jmp
add
out
test
insl
push
outsl
add
das
call
cs
mov
aam
aam
hlt
popf
ss
or
enter
fwait
sub
movsl
jb
mov
mov
cmp
dec
jp
adc
sub
jb
pop
repz
cmc
jno
mov
mov
cmp
and
test
movsl
in
repz
imul
adc
xlat
or
imul
pop
xor
xor
arpl
cli
inc
fldt
xor
clc
jmp
fisubl
jo
sbb
lods
fimull
insl
jb
xchg
and
sbb
iret
push
stos
js
adc
divl
stos
jo
sbb
xchg
mov
cmp
sub
adc
loop
cmpb
fisubs
scas
push
insl
out
loope
cltd
xchg
sahf
cmp
cmpsl
and
icebp
mov
jne
aad
pop
lds
xor
mov
fs
fwait
xchg
je
adc
xor
mov
out
xchg
mov
movsb
adc
incb
sub
cmpb
pop
aam
pusha
dec
xor
add
jbe
cmpsl
cmc
cs
std
mov
lcall
xchg
rorb
mov
test
fistl
or
mov
add
mov
mov
mov
sbb
fisttpl
push
cld
cs
and
adc
stc
mov
pop
out
enter
cmpsl
add
adc
cmc
or
xchg
mov
dec
in
mov
je
push
and
push
outsl
add
int3
mov
orb
cmpb
sub
gs
cmpsl
adc
jle
nop
xchg
inc
iret
pop
dec
lea
or
jo
xchg
add
cmp
gs
xchg
push
xchg
pusha
inc
test
repz
in
pushf
movsl
lahf
add
adc
mov
mov
adc
mov
and
inc
sub
rorb
insl
inc
outsb
movsl
sub
sbb
lds
mov
push
cmc
ret
xchg
jne
add
xor
add
push
mov
test
cmpsl
mov
pop
mov
sbb
jns
out
add
or
xchg
idivb
cmp
xor
movsb
cwtl
mov
scas
outsl
imulb
mov
int3
aas
cmp
add
add
push
sbb
bnd
loopne
fwait
sub
cld
mov
mov
adc
add
push
int
sbb
or
loop
in
mov
inc
and
sub
jbe
sub
inc
sbb
xchg
fnstcw
outsb
or
sub
fwait
mov
push
test
ficomps
js
and
xor
inc
pop
fdivrl
insl
imul
ret
call
sbb
leave
pop
sub
in
adc
and
outsl
xor
in
jp
cmp
es
aas
sbb
aam
jo
mov
fiaddl
icebp
lret
jp
fcmovnu
pop
outsl
rcll
add
adc
mov
inc
mov
out
sub
xor
adc
out
xor
cmp
in
push
and
cmc
sub
jmp
dec
or
fsubrl
ret
or
sub
neg
dec
ljmp
inc
stos
jnp
repnz
push
adc
push
stos
aaa
adcl
pop
xchg
and
pop
out
mov
and
iret
inc
jne
xlat
inc
mov
cmpsb
jge
lods
dec
pop
inc
nop
test
leave
pop
insb
in
push
mov
test
mov
aas
scas
fsubrp
jnp
jae
test
pop
xchg
aad
xchg
sbb
inc
pop
mov
add
pop
call
add
subb
data16
push
jp
and
xchg
pop
jne
pop
cmp
popf
ret
xchg
jg
sub
and
jp
stos
jmp
sub
sar
ja
dec
insl
push
add
pop
lcall
push
inc
fwait
or
cli
subb
out
dec
js
sbb
mov
cmpsb
loop
movsb
inc
stos
insl
pop
mov
jge
je
dec
adc
mov
loopne
pop
jle
sbb
pushf
cli
bnd
out
pop
sbb
mov
cli
outsb
cmp
cmpsb
stc
popa
sahf
or
sbb
aad
insl
imul
in
xor
jb
fs
and
cmc
movsl
std
pushl
xchg
in
jg
cmpl
dec
jp
sub
fprem
or
and
imul
js
test
ljmp
das
out
push
sub
xchg
cmp
outsl
sbb
dec
loopne
dec
ficoms
ja
out
in
mov
fscale
dec
repz
dec
inc
movsl
push
icebp
ja
sti
arpl
cltd
cmpsl
shld
cs
aaa
stc
fldcw
lea
jmp
push
cmp
stos
xchg
or
adc
mov
insb
push
inc
mov
dec
jb
or
inc
aas
jbe
cli
xchg
test
pop
sub
mov
imul
jbe
out
pop
push
lds
mov
cmp
or
pop
pop
js
sub
sahf
push
cmp
push
mov
and
test
mov
pushf
mov
jmp
jae
daa
adc
mov
sub
imul
mov
sbb
xor
xorl
sbb
add
pop
jle
jnp
sub
mov
push
je
mov
mov
mov
loop
fbld
jecxz
inc
and
sub
jmp
out
push
lock
pop
addr16
mov
aad
dec
decl
aad
push
lret
sbb
test
mov
test
int
jnp
aas
rclb
icebp
ja
mov
in
xchg
mov
cmp
mov
stos
lods
into
xchg
add
cmp
mov
jp
cmpsl
pusha
pop
sub
xchg
fs
xor
shl
mov
rcll
mov
adc
jbe
xchg
xchg
cwtl
pop
rclb
js
loop
movsb
inc
adc
ret
cmpsl
repz
fs
push
push
enter
push
xorl
in
dec
imul
lock
inc
pop
movsb
popf
in
jb
xchg
insl
pop
jbe
in
xchg
push
popa
fnstsw
scas
stos
add
nop
mov
lock
cmp
xchg
fisubl
addr16
xchg
push
lds
jmp
scas
mov
subb
out
pop
popa
cld
lcall
into
dec
shlb
mov
xor
bound
cmp
cmpsl
push
jnp
push
out
lcall
cmp
lcall
lea
or
mov
sub
jge
push
and
aam
xlat
adc
std
aam
pop
in
sub
ja
xor
jp
sar
cs
pop
fwait
neg
or
cmpsl
fdiv
sub
rol
mov
jne
xchg
sti
cmc
andb
cli
test
dec
push
jns
jg
push
or
test
ljmp
or
repnz
push
inc
test
subb
jb
sbb
outsl
xor
xor
lea
cmp
in
cmp
outsl
aas
fisubs
dec
divb
mov
loop
inc
inc
mov
fiadds
cmp
pushf
mov
mov
enter
xchg
jnp
cmp
mov
cwtl
push
pop
lcall
subb
fnstcw
out
jnp
xor
inc
fsubrs
mov
inc
and
and
and
stos
outsl
jne
mov
vmread
lds
stc
cmp
icebp
dec
and
pushf
ds
pop
pop
xlat
cmp
cs
int3
icebp
fmull
insb
adc
mov
lahf
insb
push
sbb
das
inc
pop
push
out
xor
nop
sbb
push
insb
imul
cmp
pop
pop
mov
into
out
roll
adc
ds
or
and
sti
hlt
test
in
out
out
dec
push
ljmp
mov
xchg
push
xchg
orl
fildl
mov
cmp
cs
sbb
and
mov
mov
cli
jb
sub
inc
jmp
sbb
jae
dec
out
cld
push
mov
shl
ror
enter
les
lods
xor
jg
icebp
sahf
pop
push
mov
movsl
mov
xor
mov
cmp
sbb
bound
pop
mov
xchg
outsl
mov
out
popf
mov
jae
inc
loopne
movsb
fldenv
hlt
push
ret
and
fstps
enter
out
sbb
jae
in
pushf
test
xor
dec
jg
push
inc
xor
addb
std
xor
xchg
insb
mov
in
aam
lret
adc
mov
jne
push
das
add
dec
stos
ljmp
cwtl
addr16
scas
pop
pop
hlt
dec
addr16
mov
out
or
xlat
test
lea
mov
test
cmpsl
scas
jge
mov
sub
xchg
jnp
push
lret
clc
rcll
ss
mov
outsb
cltd
mov
push
push
inc
int3
test
cmpl
inc
js
lea
sub
cltd
pop
roll
pusha
dec
push
les
push
aaa
cmpsb
and
mov
or
dec
outsb
test
mov
imul
aad
push
adc
pop
mov
insl
mov
iret
mov
in
mov
sarl
fwait
insb
inc
pushf
andl
popa
cmpsb
loope
fucomi
rolb
vmovhps
lret
jne
xchg
sub
sub
cltd
out
test
dec
dec
cmp
push
and
mov
in
pop
cmp
mov
dec
int
out
rcrb
push
xchg
adc
or
loopne
or
push
cmp
or
test
call
outsl
cmpsb
flds
add
js
jge
push
jne
sbb
lods
add
incb
pop
cmp
in
sub
mov
cmp
mov
leave
or
push
mov
and
imul
cmp
jl
out
pop
sarb
push
ja
std
inc
mov
shll
or
mov
add
pop
div
push
jb
sti
std
out
fldt
xrelease
out
std
jmp
cmp
inc
adc
add
inc
iret
sarb
dec
jge
jb
xchg
push
jp
jno
sub
mov
fcmovb
shll
add
das
sahf
pop
clc
ror
pop
sbb
jae
loopne
bound
dec
lret
pop
fwait
xor
sbb
bound
clc
loope
sahf
in
jl
sbb
int3
mov
xor
push
xchg
mov
pop
pop
sbb
adc
inc
xor
pop
in
mov
jle
push
popf
mov
hlt
sub
fsin
test
lock
push
rorb
es
and
pusha
jnp
neg
cld
addr16
push
shrb
adc
ljmp
cmp
xor
je
test
pop
sub
scas
testl
into
iret
jmp
std
push
ss
mov
enter
test
popf
xor
cmpsb
push
pop
xchg
mov
jb
xchg
xor
outsb
inc
mov
sub
cmp
push
dec
es
imul
clc
insl
rol
in
faddp
inc
xor
ret
pop
ds
out
fists
jno
mov
out
jl
adc
cs
mov
add
loope
test
sarl
sub
jge
fnstsw
mov
pop
loopne
pop
and
and
cmpsl
aas
or
arpl
fnstcw
scas
mov
jp
shlb
cmp
xchg
mulb
xchg
outsb
shrb
fisubrs
sub
popa
ficompl
cltd
pop
rorb
pop
jmp
push
push
pop
test
pushf
dec
inc
std
or
add
lods
push
jo
into
stc
out
adc
gs
sub
in
cmp
add
jnp
cmp
aad
pop
jb
add
mov
jl
pop
mov
roll
test
scas
add
aam
push
insb
mov
arpl
shll
cmp
int3
scas
ds
aad
or
scas
ret
jmp
mov
jg
mov
dec
push
in
sub
xor
mov
xchg
or
adc
lret
mov
dec
push
mov
ds
cld
jne
ja
call
push
cmpsb
xor
popf
cmp
inc
test
ds
out
pop
mov
arpl
test
out
or
lods
fcompl
fmuls
inc
cmpsb
lea
xchg
std
push
ret
andb
aas
sbb
mov
mov
adc
push
ds
js
ficoml
daa
mov
mov
icebp
mov
and
add
ljmp
outsl
pop
push
stos
dec
js
or
push
push
xor
jo
aas
sbb
pop
repnz
scas
mov
pop
ss
xchg
push
xor
iret
sub
aaa
mov
add
lods
pop
out
int3
movsl
pusha
int3
and
fmulp
add
jo
inc
mov
adc
ds
fdivl
pop
mov
xor
lahf
xchg
dec
cld
movsb
mov
hlt
xchg
ljmp
jbe
xchg
mov
imul
sub
loop
lahf
call
sub
scas
call
in
xchg
cmp
jo
aaa
jl
xor
in
xchg
xchg
and
add
cmpl
add
popf
les
jns
sub
leave
gs
in
and
aad
mov
mov
loopne
sub
mov
push
xlat
lea
and
sub
rolb
push
mov
push
call
jmp
jb
inc
cmc
xor
mov
dec
test
sub
int3
mov
jg
sub
inc
scas
pop
inc
inc
xchg
dec
shll
jge
push
js
stos
or
and
cmpsb
cmc
in
ret
ja
cld
sub
aaa
shl
adc
cltd
mov
sahf
jb
and
jno
jle
mov
mov
mov
outsl
inc
push
dec
push
add
or
mov
xchg
mov
or
jmp
fistps
add
xor
dec
dec
jp
scas
inc
ss
lret
sub
and
movsl
xchg
mov
mul
loop
icebp
mov
push
rclb
sub
aam
add
pushf
pop
int3
shlb
cmp
jo
xor
or
ret
sarl
xchg
xchg
inc
xchg
repz
mov
mov
sti
cmp
sub
es
xor
xchg
imulb
inc
jae
out
insl
cmc
lods
test
stc
ret
movsl
jg
les
loopne
inc
mov
les
mov
mov
lds
jne
pop
in
cmp
mov
mov
call
xor
outsb
cmp
adc
dec
inc
aaa
mov
pop
notb
pop
xchg
adc
out
test
mov
fnstsw
stos
and
and
xchg
inc
dec
repnz
rclb
adc
and
fildll
mov
xor
inc
lea
les
sub
movsl
xor
sbb
inc
insb
daa
xor
inc
stc
sbb
mov
inc
test
aam
adc
inc
sti
mov
mov
cs
ret
and
fcompl
push
ljmpw
pop
push
sbbl
dec
test
inc
inc
loop
jne
aam
xchg
mov
fsubrs
sub
inc
adcl
test
mov
dec
mov
outsl
lahf
mov
shrb
mov
lock
mov
mov
inc
xchg
arpl
xchg
xor
ds
cwtl
and
adc
xchg
enter
test
jge
sti
and
add
xchg
inc
fsubs
sbb
and
jno
dec
pop
aam
mov
mov
mov
mov
fs
pusha
dec
mov
fstl
lahf
in
add
cmp
cmp
pop
cld
jnp
aam
cmp
shll
out
mov
hlt
inc
sbb
pop
sarb
mov
mov
bound
add
fcoms
int3
test
xor
shlb
call
jnp
fidivs
aas
aaa
arpl
jl
test
or
cld
decb
es
insb
pop
int
jne
ja
sahf
dec
or
xacquire
lds
jecxz
jle
cmp
in
out
je
sahf
repz
in
lret
icebp
xor
scas
push
mov
pop
cmp
out
adc
jl
or
das
stos
xchg
test
dec
and
les
or
pusha
gs
sub
popf
int
dec
jbe
popl
std
mov
jnp
jb
sbb
sub
aaa
aam
idivb
mov
std
xor
fdivrs
out
gs
es
cmp
sbb
push
push
scas
mov
sbb
pusha
hlt
push
inc
and
in
icebp
sub
std
in
cld
dec
fcmovb
xor
mov
adc
xchg
js
sbb
lret
jno
cltd
dec
push
add
int3
cwtl
test
orl
inc
mov
aas
mov
adc
inc
shr
lea
mov
xchg
push
lods
mov
xchg
rcrb
mov
arpl
aam
xor
fwait
adc
or
xor
and
jp
loop
cmc
xchg
aaa
in
stos
sub
lock
stc
cmp
leave
cmpsl
sbb
inc
sbb
push
pop
xchg
mov
js
pop
shlb
cmpsb
push
cmp
cmp
push
pop
inc
aad
mov
xor
ja
insl
int
mov
test
dec
xor
push
incl
xor
iret
cmp
adc
add
or
repz
std
jb
divl
icebp
pop
leave
out
adc
sbb
aad
push
jae
insb
mov
in
jecxz
aaa
pop
adc
add
in
jne
inc
xchg
std
mov
negb
inc
ljmp
leave
pusha
push
stos
push
adc
and
sbb
mov
sbb
adc
jecxz
test
xchg
mov
jg
inc
pushf
inc
test
xchg
sub
mov
fwait
insl
lahf
mov
add
push
mov
pop
sbb
inc
push
insl
sub
js
fistps
out
dec
into
aas
xchg
out
xchg
mov
inc
xchg
imul
sub
xchg
xorb
shl
orb
jge
sbb
mov
mov
and
pop
je
pop
and
push
lods
enter
ror
xchg
stc
outsl
dec
rclb
add
xchg
aad
cmpsl
push
mov
aad
push
push
push
fnstsw
dec
pop
add
je
cmpsb
cmp
mov
and
cld
jnp
sti
int3
pop
push
aad
and
bnd
push
mov
xchg
mov
inc
scas
sbb
das
idivb
test
push
mov
pop
sub
leave
pop
aad
leave
or
mov
lds
les
in
pusha
cmp
out
popa
xchg
leave
call
fidivl
loop
cmp
loopne
outsb
repz
xlat
idivl
stos
outsl
jbe
and
jae
xor
std
dec
pop
mov
fwait
sbb
pushf
lcall
mov
shrl
cmp
aas
dec
add
lahf
stos
into
lcall
negl
das
or
sub
mov
jb
roll
adc
push
cs
push
mov
sbb
rolb
cmc
mov
je
lock
xor
jle
nop
sbb
lret
push
pop
in
push
add
or
js
xor
or
inc
arpl
xor
les
push
mov
dec
clc
es
lret
xor
aaa
nop
xchg
movsb
or
jbe
icebp
gs
push
leave
pop
fsubrl
rcll
sub
repz
imul
xor
adc
insb
pop
lock
loopne
push
jmp
adc
mov
jns
push
or
lcall
mov
mov
orl
cld
outsl
pop
xor
ljmp
je
dec
jb
sahf
mov
lahf
inc
xor
fsubs
or
sbb
outsl
mov
inc
pop
xchg
inc
fmull
test
test
jnp
mov
push
in
pmulhw
lods
cmc
xchg
pop
add
cld
xor
push
popf
rcl
pop
fwait
outsb
daa
pop
dec
leave
jmp
mov
adc
je
insl
repnz
shll
xor
push
push
push
cmp
stos
sbb
push
adc
mov
movsb
inc
insb
push
test
cs
sar
fnstenv
push
sbb
push
dec
and
sbb
xchg
inc
jmp
xchg
pop
cmp
cli
lds
mov
xchg
cmpsl
push
pop
sub
sub
inc
xchg
movsb
jle
ss
shlb
jmp
test
mov
stc
in
cmp
cwtl
sarb
dec
mov
imul
test
hlt
sahf
pop
lea
push
mov
pop
sbb
mov
jne
pop
fidivrs
lret
stc
in
sbb
sbb
cmc
or
icebp
sbb
sti
push
lock
js
xor
lea
or
ds
ljmp
xchg
jae
push
gs
stos
imul
sub
mov
pop
sbb
cmp
mov
xor
ss
xor
push
jle
push
xor
sbb
cwtl
dec
sbb
cmp
push
das
movsb
int
lock
fwait
bnd
mov
inc
cltd
out
addr16
in
sbb
popa
dec
fidivs
or
jo
jmp
adcl
push
jno
lds
repz
adc
xor
lock
mov
mov
jmp
inc
cmp
push
aas
lahf
push
xor
das
add
cmp
push
sub
ret
cltd
jns
xchg
imul
xchg
and
jmp
xchg
gs
in
lret
push
pop
mov
into
xor
nop
inc
lods
pop
gs
dec
xchg
add
add
rcrb
jbe
sub
cmp
mov
mov
jp
push
pop
or
je
and
inc
div
xchg
cmp
negb
sub
adc
dec
or
mov
push
jns
adc
jp
scas
pop
adcb
inc
mov
daa
call
pop
adc
arpl
lock
out
sub
adc
xchg
int3
mov
lret
outsl
mov
cs
push
adc
pop
int
fs
in
icebp
jne
je
xchg
repz
or
popa
jae
mov
cwtl
xchg
lcall
sub
adc
pushf
ds
into
shlb
and
lahf
inc
into
sahf
ljmp
mov
cmp
xor
pop
shrl
and
push
rcr
imul
loop
repnz
jb
jne
dec
js
subb
aas
jns
idiv
adc
repz
rol
aaa
scas
dec
push
pusha
jne
xchg
pop
bound
ficoms
cli
cs
push
mov
mulb
mov
xchg
ret
inc
inc
sbb
icebp
add
sbb
and
sub
insl
fisubrl
iret
mov
rcrl
inc
add
inc
loope
fisttpll
outsl
idivb
in
je
add
lods
dec
lret
inc
cli
push
add
jnp
outsl
mov
push
push
mov
or
ficoml
xor
addl
dec
cmp
outsb
leave
lea
out
outsl
cmp
sahf
int
xchg
or
rorl
pop
push
mov
lea
mov
test
insb
sub
push
inc
xor
sti
sub
adc
stos
aas
add
cli
test
cmp
and
push
adc
ret
jl
in
push
dec
fisubs
xchg
cmpsl
sbb
sbb
push
push
dec
imul
jbe
or
inc
sub
jb
leave
insl
out
push
and
inc
sbb
xor
in
shll
xor
xor
push
iret
mov
inc
add
test
and
pop
mov
xchg
aam
push
or
sub
cmp
sbb
jo
testl
adc
repz
mov
repz
or
add
inc
clc
mov
jp
push
pop
sbb
jno
xchg
and
das
lods
mov
mov
imul
pop
cmp
mov
rorb
and
in
push
ret
jmp
ljmp
pop
inc
fcmovnb
xchg
int
mov
mov
sti
pop
mov
daa
xor
int3
lret
mov
es
cli
lcall
repnz
cmp
add
xor
lods
dec
jmp
inc
mov
xchg
add
subb
mov
ja
movsb
inc
sub
push
dec
mov
mov
sub
test
dec
mov
add
addr16
jb
xchg
adc
repz
in
xor
inc
xchg
test
dec
rcrl
xor
jmp
jecxz
shlb
cli
int3
jne
fcmovbe
cmp
adc
js
jae
sub
sar
cltd
in
xor
test
insl
sub
ljmp
push
sti
inc
cmp
test
outsl
jg
rolb
mov
jb
cli
xor
lock
popf
jl
out
xchg
jno
jne
jmp
add
dec
sbb
in
fdivrl
icebp
push
shlb
js
loope
jne
jb
or
mulb
adc
mov
sub
subl
out
call
push
add
add
push
inc
jl
mov
ret
jns
sub
mov
cs
xchg
es
add
in
push
cmc
inc
stos
mov
scas
daa
enter
es
inc
test
add
pop
adc
xchg
jmp
jmp
jmp
subb
mov
sti
stos
fidivs
stc
bound
inc
into
add
enter
cs
push
sub
hlt
loop
push
test
in
das
pushf
imul
inc
inc
outsl
imul
mov
xchg
loope
clc
cmpsl
cwtl
pop
jno
sub
pop
leave
sub
cmp
insb
and
mov
mov
and
sub
mov
int3
cli
in
cs
adc
cmp
inc
clc
xor
lock
in
flds
mov
xlat
jg
leave
mov
jg
and
js
stos
repz
pop
push
and
jle
xchg
leave
lods
fs
fidivl
out
hlt
pop
out
xorl
iret
and
mov
mov
lods
mov
gs
xchg
lret
rorb
dec
jge
cld
xor
dec
xor
adc
mov
and
ljmp
jno
mov
mov
mov
push
fnstsw
fdivs
or
xchg
stos
aaa
jae
sub
xlat
imul
test
push
mov
mov
aam
mov
rcrl
push
aas
into
push
sbb
test
shll
into
cli
dec
lret
lahf
or
adc
int
xchg
rorl
jns
mov
adc
enter
lcall
insl
js
mov
cwtl
pop
aas
out
pop
icebp
jmp
and
roll
push
fstl
bound
ljmp
sbb
mov
icebp
ror
xchg
sbb
jno
inc
iret
mov
out
shll
bound
jge
faddl
leave
pop
fwait
and
jo
icebp
cmc
cltd
cmpsb
les
in
notl
mov
insb
test
ljmp
xor
xor
mov
mov
cmp
cmc
inc
sbb
arpl
std
sahf
loope
xor
inc
sbbb
mov
ss
dec
adc
imulb
arpl
dec
mov
imul
pop
xchg
jne
xchg
add
jg
cmc
iret
leave
push
and
add
movsl
pop
mov
add
sub
mov
call
inc
roll
mov
iret
or
mov
mov
ret
mov
movsb
jmp
xchg
call
xchg
pop
in
add
jp
dec
ret
or
cwtl
mov
mov
add
cwtl
call
and
pop
jmp
or
mov
xor
loope
push
dec
in
aaa
jbe
and
test
call
push
mov
cmpsl
xchg
jp
xor
ss
fwait
add
aam
xor
sbb
lret
jp
inc
testl
add
xor
mov
mov
std
sbb
push
jg
fldenv
xchg
sbb
sub
jl
imul
xor
add
repz
mov
in
push
fnstsw
scas
mov
sub
cmc
es
mov
add
xchg
mov
movsl
mov
lea
icebp
cmp
cmp
popf
lret
stos
outsb
mov
push
jge
cmp
roll
scas
adc
jnp
mov
mov
adc
js
out
cwtl
cli
aam
mov
jg
mov
or
xchg
mov
xor
inc
inc
jp
negb
pop
mov
int
fadds
insl
movsl
js
sbb
dec
and
inc
pop
adcl
mov
mov
xor
fcompl
push
sbb
cmp
icebp
sarl
cmp
lret
scas
mov
and
xchg
popf
test
movsl
xchg
cmpsl
fs
xchg
lret
or
pop
xchg
je
sub
mov
fisubrl
sbbb
popa
loopne
mov
scas
mov
nop
out
les
ret
stos
fcoml
insl
mov
cmpsl
in
jle
aam
and
push
shl
push
int3
sbb
fnstcw
mov
push
push
mov
sbb
mov
stos
xchg
outsl
cmpl
push
movl
mov
fs
lods
push
imul
test
xchg
daa
or
sbb
sbb
outsl
mov
lods
in
fmuls
subb
sbb
clc
and
inc
dec
or
out
xlat
stos
stos
or
adc
je
sub
adcb
mov
jnp
std
mov
push
mov
sub
push
dec
sbb
ds
mov
movsl
and
enter
adc
dec
or
and
add
test
ret
jb
pop
dec
cli
sahf
ret
dec
dec
or
sbb
test
dec
and
dec
push
std
add
leave
decl
push
adc
and
jmp
leave
je
stos
insl
test
cmp
add
ss
es
roll
out
out
dec
sub
mov
sbb
jecxz
subl
sub
fwait
cs
mov
or
cmp
arpl
or
fbstp
es
xchg
mov
or
jo
out
and
pop
out
out
stos
fistl
shrb
jo
in
cmp
ss
and
repz
mov
xor
shl
das
loope
inc
out
inc
rcrb
mov
mov
stos
jae
icebp
daa
mov
js
iret
add
or
adc
imul
loope
sub
push
jmp
shll
pop
mov
mov
fs
in
outsl
je
popf
add
lret
sub
and
jle
cmp
pop
xor
mov
dec
fisubl
xor
xchg
ret
in
lods
cmp
aad
fcompl
dec
das
andl
mov
insb
repz
add
cs
scas
pop
jmp
sbb
in
sub
jmp
cmp
xorb
sti
sbb
gs
inc
loop
mov
fsubr
adc
push
xchg
mov
mov
imull
ret
stc
sbb
loop
loop
loope
sub
ja
int
cwtl
clc
dec
lcall
lds
test
es
mov
mov
aam
addr16
stos
sbb
iret
pushaw
and
mov
cmc
push
das
loope
out
test
fs
xchg
push
pop
or
mov
add
lea
xchg
push
fildl
xchg
ret
cld
adc
xor
jb
push
fcmovbe
outsl
sub
sahf
xor
ret
adc
jl
mov
or
xchg
sbb
inc
fidivrl
inc
sarb
xchg
push
rclb
mov
popa
insb
xchg
movsb
push
loope
mov
enter
adc
adc
aas
jl
cwtl
or
scas
enter
gs
cltd
out
add
fidivs
push
xor
push
movsb
inc
das
test
dec
inc
dec
lahf
imulb
fbld
inc
mov
or
mov
or
mov
sahf
data16
jne
cmp
mov
mov
xchg
insb
xorb
and
in
xor
mov
sbb
sahf
xchg
dec
shrb
stc
push
adc
lods
scas
jo
in
adc
js
jns
sbb
mov
mov
lock
mov
or
sbb
js
loope
in
sub
and
ret
dec
xor
shll
mov
push
je
fcmovnb
fcmovnbe
sarl
sbb
vandnps
push
int
jg
in
inc
stos
add
xor
stc
mov
jns
rcrl
mov
stc
mov
daa
aaa
jge
jg
stos
jp
loopne
xor
test
and
xchg
shr
cltd
jecxz
negl
push
cwtl
jmp
sahf
jp
cmp
adc
mov
fwait
push
sbb
jnp
adc
fdivs
and
in
mov
sti
cmpsl
stos
js
cmp
xchg
jp
je
mov
pop
jg
push
cmp
push
pushf
xchg
cli
inc
push
ds
iret
cmp
aam
push
daa
jecxz
mov
and
pop
mov
mov
xor
fldln2
jae
gs
test
out
add
mov
sti
dec
xor
fisubrs
pop
aam
roll
ljmp
insb
push
jmp
mov
jns
mov
pusha
xlat
lock
lea
mov
mov
and
push
jo
inc
rclb
fcomip
sub
stos
push
mov
push
das
xor
repnz
pop
fld
fdivp
sub
xchg
push
sub
les
call
insb
dec
mov
cmp
shll
or
sbb
shll
imul
sbb
mov
sbb
cmp
adc
fisubs
shll
and
add
stos
imul
repz
lcall
fisubl
out
lea
sub
lds
add
cmp
xchg
sub
or
sub
inc
jp
pop
sub
icebp
daa
and
repz
mov
inc
adc
ljmp
inc
lret
into
dec
mov
cmc
xchg
sub
sbb
movsl
adc
arpl
xchg
xlat
popa
ja
imul
ret
scas
mov
mov
ficoms
push
jbe
outsb
mov
mov
jb
loop
pusha
xchg
cmp
mov
adc
mov
mov
aad
scas
pop
sahf
xor
les
pop
pop
iret
pop
sbb
scas
push
or
or
sbb
mov
mov
enter
jne
shlb
jge
xchg
je
insl
or
mov
push
daa
cmp
cli
adc
popf
xchg
mov
cmp
sbb
and
mov
cmpsl
in
jle
inc
sub
xchg
addb
dec
decl
scas
subl
inc
dec
dec
and
test
popf
cltd
dec
mov
cmp
jmp
mov
jecxz
test
jmp
ds
test
clc
test
clc
mov
cltd
repnz
sbb
arpl
in
cmpsl
cmp
mov
pop
dec
rclb
les
add
out
cmpsb
dec
inc
fidivrl
daa
mov
xchg
or
mov
and
dec
imul
mov
xchg
repnz
cltd
xor
loopne
hlt
xchg
xchg
jle
cltd
outsl
mov
mov
loopne
mov
loopne
jnp
pushf
fldcw
mov
leave
pusha
mov
out
mov
mov
testb
lock
pop
inc
adc
or
pusha
sbb
xchg
xor
pop
clc
lods
pop
mov
mov
sbb
stc
inc
faddp
and
xor
sub
into
or
sbbb
adc
mov
cmp
sbb
aaa
ret
inc
insb
repz
push
out
test
dec
imul
enter
loope
pop
cmpsl
int
ret
shl
and
jno
mov
in
fnstenv
lods
ficomps
jmp
dec
sub
call
pop
in
test
jge
icebp
out
out
dec
sahf
xchg
repz
scas
sarl
adc
mov
iret
mov
and
xor
jo
lods
outsb
adc
xchg
data16
mov
cmp
push
add
sub
xchg
test
jmp
outsl
and
dec
in
inc
dec
fbstp
add
xor
xlat
inc
inc
arpl
or
jne
jnp
mov
mov
inc
jb
push
addr16
sbb
xchg
lea
lea
loopne
jns
or
xlat
ja
jg
pop
cmpsl
iret
push
hlt
out
sbb
inc
cmp
call
jnp
adc
inc
inc
nop
jp
xchg
das
dec
mov
mov
and
shr
test
or
sbb
sub
in
int
mov
cmp
mov
outsl
pusha
dec
and
test
js
cwtl
sbb
sbb
push
adc
mov
push
sbb
cmpsb
lods
sub
and
popa
mov
loopne
push
sahf
and
arpl
cli
sub
pop
mov
arpl
fnstsw
adc
repz
ret
sbb
jb
aad
fnstsw
mov
sub
shl
repnz
cmp
outsl
dec
xor
sbb
and
or
mov
sarb
sbb
inc
rorb
stc
mov
jle
in
loope
das
mov
scas
add
in
je
clc
and
xchg
pop
repnz
push
inc
cmp
lods
push
gs
rorl
inc
jle
cmpl
insl
pop
les
adc
mov
dec
pop
inc
rcll
sti
outsb
xor
je
or
mov
jmp
subb
adc
test
pushl
jo
mov
xchg
cltd
mov
mov
bound
stos
nop
push
ja
jmp
mov
inc
fildl
fs
inc
push
jg
int
push
nop
and
outsb
lahf
aad
aaa
cmp
cmp
loopne
adc
jo
inc
or
in
xor
dec
xchg
cwtl
icebp
test
movsl
enter
sub
jo
sbb
dec
mov
ja
push
dec
hlt
sbb
ja
sbb
popf
jae
mov
and
insb
and
lret
mov
xor
xchg
mov
mov
sub
jp
popa
cmp
fnstcw
jmp
add
mov
out
jo
add
mov
xor
xchg
addr16
outsl
out
ret
mov
xchg
daa
or
mov
xor
or
lods
push
bound
lahf
adc
pop
xchg
test
gs
and
fcoml
lahf
fwait
cmc
pop
dec
out
cmp
jp
ss
leave
jno
jns
popf
shl
cmpsl
loopne
clc
jge
sub
cwtl
push
mov
mov
xor
dec
stc
add
push
xchg
fsubrl
imul
imul
mov
push
adcl
cmp
lcall
outsb
mov
jae
pusha
bound
mov
cmpsl
xlat
xchg
inc
jns
dec
fstp
pop
jnp
and
subl
inc
add
ss
inc
sahf
add
stc
xor
mov
fcomps
cmp
mov
adc
inc
dec
inc
cmc
cmp
pusha
xchg
test
cmp
add
sahf
not
aad
add
xlat
idiv
push
push
dec
lods
adc
movlps
cmpsb
out
repz
and
and
mov
mov
imul
and
mov
popf
push
rorl
outsl
pop
scas
daa
test
fistps
mov
sub
lds
mov
aam
adc
aaa
lret
mov
sbb
lret
loopne
leave
lret
imul
shr
dec
jmp
loopne
pop
ljmp
cltd
add
aad
sub
cmp
stos
inc
pop
lods
add
mov
pusha
xor
and
icebp
popf
sahf
loop
mov
sti
test
fcompl
pop
mov
mov
and
push
pop
xor
mov
fisubs
adc
jp
add
subb
in
jge
or
mov
add
into
xlat
in
fsub
out
inc
adc
out
nop
jnp
jmp
mov
xor
push
mov
sahf
mov
popa
add
jecxz
inc
pop
rcll
ljmp
push
mov
xor
out
roll
xor
xor
adc
jbe
outsb
divb
pushaw
mov
or
cmp
or
retw
aas
mov
arpl
lock
movsb
movsl
or
ss
pop
loopne
nop
cld
cmp
adc
push
dec
insl
mov
jecxz
clc
nop
sub
aad
leave
aas
leave
or
sub
cmp
cmp
mov
pop
mov
mov
push
add
lret
inc
bound
scas
in
dec
mov
mov
pop
cltd
jg
out
sbb
ret
pop
insb
dec
les
cmp
jle
mov
std
fs
ret
dec
xchg
mov
fwait
cmp
push
test
mov
mov
outsb
and
mov
mov
jp
mov
sbb
or
daa
pop
test
movsl
pop
dec
test
mov
sbb
dec
lret
push
aam
ljmp
lret
shl
les
daa
arpl
add
jl
out
les
pop
nop
jp
xchg
std
push
cmp
xchg
divl
mov
cmp
jmp
gs
cmpsl
cli
adc
arpl
jns
in
aam
scas
jecxz
jno
movsl
movsl
aaa
and
push
add
icebp
imul
std
clc
bound
call
sbb
pop
dec
stos
shl
mov
es
in
cmpsl
insb
mov
arpl
or
and
addb
aaa
cmpsb
mov
mov
lock
push
pop
test
mov
les
jecxz
dec
xchg
mov
inc
mov
cmp
out
adc
jno
jecxz
test
xchg
add
ljmp
popf
pop
inc
sub
sbb
loopne
syscall
stos
mov
push
jne
leave
push
shll
sub
mov
or
jbe
arpl
icebp
cmp
imulb
inc
bound
incb
jns
inc
jo
dec
cltd
xlat
jbe
dec
es
stc
rorb
pop
outsb
cmp
push
fldcw
inc
mov
cmc
stos
cltd
adcl
mov
or
jecxz
fdivr
sub
rcll
mov
jle
lcall
xor
or
dec
pop
xchg
push
aas
sub
imul
gs
scas
fwait
fwait
aad
and
dec
scas
sbb
enter
sti
cmp
int3
sarl
cmpsb
bound
dec
push
dec
cmc
xchg
out
mov
pop
mov
sbb
hlt
sub
cmp
loopne
sbb
loop
mov
adcl
ss
mov
orl
in
mov
sahf
shrl
inc
pop
jo
jbe
pushf
cld
mov
cs
mov
sub
adc
rolb
into
mov
mov
sub
mov
cmp
mov
push
loop
lock
xor
add
inc
scas
add
add
loopne
mov
aam
push
rorb
cmpsl
mov
cmp
aas
faddp
jno
in
loopne
pusha
mov
movl
add
inc
scas
movb
fs
add
jp
mov
pushf
mov
xlat
ja
repz
sbb
and
ss
xchg
movsb
popf
js
and
mov
inc
loop
lock
xorl
push
shl
dec
rcl
test
sub
out
int3
jno
movsl
shl
test
int3
sub
fs
and
xchg
add
out
out
pop
add
fs
xor
sub
inc
xor
mov
pop
idivl
imul
fstpt
cmp
cld
jecxz
test
je
push
dec
dec
push
out
pop
in
out
mov
cmp
loop
jle
int3
stc
jb
pop
sub
pminub
mov
or
push
or
std
test
add
sahf
add
mov
loopne
aaa
arpl
pop
mov
xor
sbb
push
aam
pop
jns
push
lds
sbb
and
add
lret
mov
jo
addr16
jecxz
jns
jmp
mov
pop
mov
mov
mov
sub
pusha
cltd
adc
push
mov
dec
or
movsl
enter
and
loope
xchg
xor
sbb
fcoml
sbb
push
pop
daa
cmp
dec
push
jb
fnstsw
cwtl
push
dec
dec
loopne
adc
adc
jns
faddl
add
inc
jge
sbb
mov
lcall
mov
mov
push
sar
leave
push
inc
push
push
sbb
test
pop
rorb
add
pop
push
fucomi
ljmp
lods
xor
nop
cmp
out
push
inc
mov
bound
ret
adc
push
push
pop
shlb
adc
sbb
pop
dec
add
outsl
add
jp
call
pushf
js
xorl
pop
jmp
jl
in
xlat
fnstcw
movsb
pop
jnp
fldt
ds
or
stc
mov
fidivl
or
in
stos
push
subb
ret
xor
sub
xchg
mov
mov
inc
insl
add
or
cld
cmp
push
sub
shl
lret
mov
loopne
pusha
xchg
xor
mov
mov
push
sbb
and
pandn
in
inc
cmp
cwtl
leave
xchg
mulb
push
dec
mov
mov
shrl
adc
sub
cmp
and
jge
or
data16
push
popf
push
adc
jge
xchg
test
push
pop
push
repz
lock
dec
mov
in
fs
jge
shl
loop
ds
sbb
cmp
dec
xlat
cwtl
and
pop
test
rclb
stc
mov
adc
popa
ficompl
dec
mov
xchg
enter
std
out
into
sbb
das
mov
pop
fisubrl
mov
jno
jns
in
mov
push
les
clc
repz
mov
sahf
mov
icebp
lods
es
pop
movb
xor
push
aaa
pushf
jmp
testb
or
xchg
shrl
add
and
pop
mov
cwtl
push
xor
sub
cmp
cld
and
mov
cs
cmp
fsubr
rorl
shll
dec
orl
add
push
push
inc
insb
leave
mov
imul
mov
gs
mov
insl
mov
iret
xchg
sub
sbb
ds
xor
fidivs
mov
mov
xchg
xchg
pop
xlat
xor
mov
into
arpl
add
lock
js
outsl
xor
stos
dec
xor
mov
pop
sub
sbb
adc
adc
dec
das
mov
inc
push
cmpsb
push
cltd
cmp
cmp
dec
mov
scas
pop
test
movsb
or
lahf
aas
rdtsc
movsl
xchg
pop
pop
add
movsb
dec
test
mov
stos
jae
mov
xchg
or
insb
jmp
imul
dec
pop
jne
pop
adc
mov
mov
movsb
and
pop
das
xor
xor
adc
cld
clc
scas
std
inc
mov
aas
mov
dec
out
push
lcall
subb
fcompl
js
rcll
popa
aam
insl
les
dec
in
push
sub
inc
push
inc
lock
fldcw
dec
xor
dec
mov
in
mov
sahf
popa
xchg
inc
test
scas
aaa
sbb
xchg
fcmove
pop
fwait
cwtl
rcll
fisubrs
icebp
xchg
sub
jae
mov
int3
mov
aaa
cmc
sub
mov
loop
pop
dec
sbb
mov
push
and
sub
movsb
addr16
sti
pop
xchg
stos
stc
int
and
ljmp
mov
cli
arpl
dec
out
in
inc
jp
movsb
sahf
mov
xlat
lods
xor
lahf
xchg
sbb
imul
adc
cwtl
sub
jns
lds
std
arpl
xchg
in
inc
shrl
jo
mov
imul
xchg
ss
sbb
rcl
or
dec
sub
sub
in
in
imul
add
pop
mov
dec
mov
out
xchg
aas
int3
xchg
xlat
sbb
outsl
inc
push
cmp
mov
int3
stc
aas
fistpl
int
dec
cli
les
mov
fisttpl
lcall
mov
fbstp
pop
repnz
inc
xchg
sub
popa
push
sub
or
rep
in
in
pop
int
insb
inc
and
cmp
jle
adc
or
pop
pop
lds
adc
insb
and
ja
cmp
mov
xchg
jmp
add
dec
outsb
sbb
mov
inc
push
decl
or
xor
cmp
ss
cmp
jo
repnz
pop
sbb
xchg
mov
fimull
xor
xor
jo
xor
imul
fsubrs
push
xchg
in
mov
add
out
mov
add
cld
mov
pop
sbb
mov
or
adc
jg
sub
pushf
and
das
cs
fs
inc
jne
push
mov
pushf
ljmp
ds
adc
js
or
push
int
jge
mov
add
iret
in
or
and
movsb
pop
dec
add
pop
add
sbb
jecxz
lds
stos
push
or
repnz
and
mov
jle
mov
adc
clc
mov
insb
add
je
pop
mov
outsb
xorl
mov
add
addb
aam
nop
xor
cmp
add
jge
mov
and
cmpsl
cmp
push
insb
pop
fs
xor
jbe
and
popa
jle
mov
and
sub
lock
popf
mov
pusha
in
in
cmp
xchg
clc
test
pop
out
mov
jp
and
adc
dec
sub
fdivrs
loop
cld
imul
cmp
cmp
js
jnp
cli
unpcklps
jns
xor
loopne
xchg
push
jmp
inc
jns
aas
pop
iret
mov
add
dec
outsb
jns
addr16
xor
fcmovu
mov
pop
sbb
lods
sub
xchg
cmp
aad
xchg
and
iret
push
test
mov
outsb
mov
cltd
bound
sbb
cmp
movsb
mov
jo
push
daa
xor
push
push
pushf
xlat
xchg
jmp
mov
mov
sub
mov
xchg
ds
inc
data16
notb
lods
orb
mov
addr16
and
xor
inc
mov
nop
addb
cmp
mov
cmp
mov
pop
dec
push
scas
imul
divb
xchg
pusha
bound
shrb
adc
push
roll
pop
lds
pop
mov
in
fimull
out
mov
inc
ja
jmp
insb
xor
mov
xor
js
pop
iret
iret
stos
es
xchg
jecxz
jne
test
iret
into
mov
sbb
cmp
les
pop
mov
mov
mov
out
push
xorl
jg
pushf
and
adc
ss
ds
or
push
add
scas
xchg
shrb
pop
and
mov
ret
out
or
jge
and
dec
fdivs
xor
and
jmp
es
test
aam
cmp
nop
dec
mov
movsb
adc
jb
inc
fldcw
iret
lods
stos
dec
aaa
out
add
xchg
in
dec
push
repnz
in
mov
push
mov
movl
mov
int3
push
jbe
mov
ss
xchg
lods
cmpsb
push
ror
xor
das
stos
sahf
inc
daa
xor
out
fld
xor
jno
mov
sbb
fisubrs
sub
inc
xor
pop
aam
mov
pusha
push
aam
pop
lcall
pop
mov
scas
dec
mov
sti
jp
ljmp
cmp
push
jmp
push
shl
lret
add
lock
sub
fs
pop
xchg
jno
out
mov
and
or
fs
outsb
test
inc
xor
ficompl
roll
push
push
outsb
inc
mull
cmp
cmp
adc
in
or
lcall
in
dec
add
add
cmp
xchg
pop
inc
push
push
mov
xor
add
or
and
or
cmpsl
cld
xchg
outsb
jno
xchg
xor
js
or
fildl
test
clc
shlb
in
add
xchg
push
mov
into
cmp
jle
inc
ljmp
inc
cmp
fiaddl
rorb
leave
or
into
cmpsl
mov
and
sbb
mov
xchg
inc
lods
sub
lret
jmp
cmpsl
xchg
nop
push
or
adc
push
adc
cmp
xor
or
mov
rcrl
jp
jns
movsl
lods
mov
sti
repz
jge
sbb
inc
js
pop
and
push
pushf
nop
fmull
or
and
dec
scas
sbb
and
inc
iret
es
icebp
ljmp
mov
repz
iret
imul
movsl
int
and
jno
dec
xchg
lret
ds
or
cmpsb
push
mov
sarl
testb
mov
push
int3
add
movb
inc
push
mov
pop
lahf
fdivrl
xor
scas
fcomi
ja
or
add
sub
bound
aad
push
cld
push
out
insl
xchg
mov
pop
jmp
movsb
mov
pop
push
enter
int
dec
or
jge
out
inc
push
rorb
push
inc
add
cmp
cmp
sbb
aaa
pop
and
gs
push
sbbl
ficoms
mov
sub
test
imul
ds
loopne
data16
push
dec
xchg
xchg
js
cmp
jnp
insb
sub
mov
lock
xchg
cld
xor
mov
jle
mov
jmp
loopne
sub
fcoms
out
xchg
lahf
cmc
and
mov
inc
jmp
mov
repz
jne
rorl
sbb
add
iret
jmp
sbb
mov
vmwrite
and
cwtl
in
imul
push
jo
pusha
sub
andl
cmpsb
xor
pop
add
mov
jg
or
lcall
loopne
int
add
out
inc
sbb
jns
lods
in
xorb
imul
jnp
cmpl
xor
into
cld
std
std
inc
dec
fwait
imul
inc
push
arpl
adc
lds
fxch
inc
xchg
pop
popf
xorl
std
mov
lock
jne
outsl
dec
test
aad
push
jb
out
pop
jl
xchg
popa
dec
pop
mov
lods
mov
or
pop
lods
and
sub
inc
push
lret
iret
not
push
cli
xchg
into
jmp
mov
sti
mov
jecxz,pt
dec
and
inc
cs
pop
ss
out
insb
pop
xor
in
shr
sub
adc
adc
pop
mov
pop
mov
insb
ret
xor
std
mov
rorb
into
test
mov
sbb
shll
and
push
fucomi
lcall
das
gs
jbe
test
mov
jmp
cmp
dec
jg
mov
jmp
ljmp
int3
sub
insb
jp
fsub
mov
dec
dec
sbb
std
push
pop
cmp
insb
add
jge
jp
addb
push
adcl
movsb
shll
int3
xor
movsl
or
dec
test
in
out
nop
xchg
outsb
bound
xlat
std
sahf
in
inc
push
int3
enter
mov
fisubl
fsubrl
lret
push
sub
push
mov
sub
aam
push
fsub
dec
fadds
pusha
cmp
and
push
out
xchg
adc
mov
lods
pop
mov
xchg
sti
mov
test
int3
push
mov
or
testl
mov
fwait
mov
lods
cmp
sub
mov
lret
das
pop
pop
ss
pop
lock
sbb
mov
mov
mov
nop
pop
popa
mov
pop
notb
dec
lods
mov
push
jne
pusha
sub
shrl
pop
les
and
daa
sbb
ficoms
nopl
and
push
jb
test
and
and
add
push
testb
mov
fstpt
xchg
cmp
or
repnz
push
xchg
or
addr16
repnz
push
add
leave
inc
or
xor
add
movb
add
das
les
jnp
mov
ss
rorb
jp
pop
sahf
insl
insb
test
adc
fdivl
testb
popf
repz
jae
data16
xchg
inc
nop
fwait
push
jb
pushf
test
or
and
pusha
sbb
pop
imul
cmp
ljmp
cmp
dec
pusha
clc
pop
call
and
aaa
push
rdmsr
mov
push
and
test
adc
pop
cwtl
das
lock
cmp
daa
jns
mov
sub
stc
push
lcall
pop
xor
repnz
mov
jnp
or
mov
cmp
cltd
mov
aam
push
fbld
jns
in
clc
int
add
hlt
lcall
xchg
ljmp
sbb
data16
lret
adcl
mov
scas
bound
jbe
push
loope
jne
xor
lret
mov
out
sub
clc
push
xadd
pop
fisttpll
enter
xor
or
cltd
arpl
add
dec
xchg
jbe
xor
lcall
cmpsb
push
add
inc
pop
out
sbb
push
fdivs
imul
data16
cmpsb
arpl
fucomi
mov
pushf
cmp
mov
pushf
push
in
sbb
pop
push
pop
jle
out
push
add
xchg
or
clc
es
in
adc
push
insl
pop
sbb
push
xor
inc
push
insl
jmp
cmp
adc
lret
pop
xor
shlb
dec
push
sub
fsubrs
mov
insb
add
push
jp
or
ja
test
cmp
repnz
ljmp
push
out
shr
add
cwtl
mov
jo
adc
push
or
negb
xor
outsb
lahf
rolb
sbb
or
xchg
lret
mov
add
sub
negb
shlb
add
and
sub
arpl
test
sti
les
sbb
xor
xlat
pop
stc
jg
push
sbb
cmp
subl
movsb
test
jg
in
pop
daa
jmp
test
daa
icebp
ret
scas
mov
xlat
pop
iret
bound
pop
lret
cwtl
pusha
lods
test
dec
movsl
inc
mov
adc
jecxz
adc
xor
pop
js
outsb
mov
xchg
inc
or
fs
cmp
inc
sbb
test
or
in
mov
push
cmc
out
test
dec
fmul
loope
jo
and
jmp
das
push
mov
adc
sbb
pop
iret
dec
sbb
movsl
cmp
popa
inc
and
mov
push
cmp
aad
adc
jo
push
push
repnz
scas
push
fimuls
dec
jl
mov
push
xchg
stos
push
test
lret
xlat
ja
int
inc
movsl
shrl
test
mov
outsb
cmpsb
imul
dec
lods
movsb
les
test
fsubp
fsubrs
in
das
and
xchg
push
imul
ss
mov
mov
mov
cmpsl
pop
out
adc
xor
add
dec
test
lret
cld
icebp
mov
xor
stos
mov
adc
mov
jns
dec
mov
std
xchg
adc
popa
test
sti
jle
mov
inc
xor
imul
mov
movsb
aaa
sahf
gs
sti
add
negb
shrb
adc
loopne
push
mov
das
sar
sub
out
pusha
loopne
mov
sbb
call
jmp
cmp
test
outsb
lock
inc
fucomp
addl
shr
jl
test
out
jl
fs
fdivl
jmp
sub
cmp
mov
or
cwtl
cmp
mov
sub
roll
shll
jl
add
and
jne
mov
ficomps
fwait
jmp
xor
lcall
gs
iret
mov
or
mov
jb
pop
sub
lret
dec
shll
arpl
in
inc
cmp
xchg
outsb
adc
pushl
call
bound
test
scas
cld
add
xchg
call
add
push
sbb
popf
out
xchg
lock
sbb
int3
popf
push
cs
push
pop
repnz
and
xchg
popf
repz
int
arpl
andl
cmp
xlat
or
pop
jae
pushf
outsb
xor
push
nop
std
inc
js
push
mov
push
mov
push
filds
gs
inc
orl
in
xchg
adc
rcr
movsb
lcall
leave
int
ss
mov
filds
sahf
inc
lret
xor
add
jp
cld
testb
mov
fdivl
test
xor
cltd
lahf
mov
addr16
xor
jge
xor
sbb
mov
ficoms
jge
lods
cmc
jge
int
pop
fwait
movsl
shl
in
jne
fmuls
inc
sbb
dec
test
popa
xor
pushf
std
push
add
and
fnstcw
movsb
movsb
jae
mov
inc
ds
ret
fmuls
and
fistl
dec
mov
jb
jp
lret
rclb
ficoml
inc
jl
fcmovu
push
sarb
sar
xor
inc
ds
mov
jl
push
out
inc
push
leave
les
jg
popa
xor
mov
push
or
les
add
pop
sub
dec
adc
jmp
xor
mov
adc
mov
push
xor
push
dec
stc
or
shl
jo
pop
push
sbb
sahf
and
mov
in
addb
mov
sti
stos
jl
add
aaa
lods
mov
repz
add
out
sbb
or
push
or
push
dec
push
push
adc
push
imul
rorl
jns
std
fists
out
pop
cmc
ljmp
mov
stc
lahf
xchg
imul
sbb
push
nop
fwait
jl
lds
add
sub
dec
jecxz
dec
mov
daa
aam
addr16
jg
mov
mov
out
sbb
xlat
add
imul
jmp
shrl
popa
xchg
xchg
call
cmp
push
cld
mov
jg
lds
and
jle
in
push
adc
es
or
inc
jae
jae
mov
lods
mov
aas
push
jo
sub
jno
leave
mov
cltd
andl
dec
jae
pop
cmpsl
push
jecxz
fsubs
arpl
lock
mov
or
das
fwait
mov
jmp
mov
loop
imul
jne
sbb
add
pop
shll
inc
pushf
lds
jno
leave
push
inc
cmpsb
loop
mov
fldt
pop
je
cmc
adc
xchg
mov
das
dec
push
adc
inc
js
jmp
mov
hlt
call
sub
sub
cltd
stos
sub
movsb
sbb
mov
cli
sbb
out
and
inc
fists
sbb
and
mov
push
inc
aaa
dec
pop
mov
movsl
scas
je
cmc
sbb
jl
sbb
inc
outsl
dec
cmp
mov
ja
rorb
icebp
inc
shlb
mov
cwtl
addr16
outsb
loop
jbe
adc
mov
out
imull
jo
scas
xor
lret
sub
mov
popf
sbb
iret
push
jo
call
loopne
push
fsubr
fwait
testb
outsb
fadd
call
sbb
xchg
cli
cmp
mov
xorl
pop
add
mov
in
out
jmp
sub
inc
mov
adc
sbb
repnz
pop
xchg
repnz
dec
cmp
inc
pusha
or
mov
sub
mov
add
insb
in
loopne
aad
push
xor
cmp
popf
sub
xchg
mov
subl
lods
dec
mov
sbb
in
jno
out
xor
pop
fldcw
sub
add
into
clc
inc
and
pushf
sub
jg
push
clc
data16
sub
inc
ds
negb
out
lods
out
into
jnp
in
scas
cmp
outsb
ds
adc
cmpsl
cmpsl
adc
or
pop
cmpsl
xchg
call
decb
lret
sbb
cmpsb
sti
rclb
mov
aad
outsb
or
sub
jnp
push
clc
repnz
daa
inc
loopne
inc
mov
pop
fcmove
fiaddl
jbe
call
add
aad
hlt
mov
push
cmc
mov
jp
mov
je
mov
mov
lods
hlt
shrb
mov
lds
pop
sub
stos
mov
shl
mov
sub
mov
jae
cmp
mov
ljmp
xchg
jae
mov
mov
inc
jnp
xorl
inc
imul
jge
xlat
xlat
xchg
outsb
add
test
xchg
pop
mov
inc
jl
pop
imul
lret
lahf
mov
push
daa
mov
mov
outsl
mov
mov
sub
mov
pop
mov
mov
pop
stos
add
add
push
or
cmp
mov
mov
aad
cmpsb
test
mov
xlat
xor
fdiv
sub
popa
jp
or
iret
clc
jno
mov
mov
or
fstpt
into
cld
xchg
shrb
xchg
shrb
shll
addr16
addl
or
jae
jae
cmpsb
mov
jnp
pop
jg
dec
in
inc
mov
mov
jmp
mov
mov
pop
lret
or
int
push
or
add
mov
xchg
cs
movsb
rcll
leave
cmp
lods
pop
dec
push
mov
xor
sbb
fldenv
add
fwait
rcr
mov
xchg
roll
add
add
das
sbb
loop
adc
out
push
inc
mov
and
xor
push
inc
mov
or
inc
clc
fwait
adc
sub
pop
adc
gs
in
lret
ljmp
testl
add
fadds
and
imul
js
stos
and
mov
pop
pop
mov
scas
cmp
dec
or
addb
sbb
lcall
push
stc
add
sub
sti
and
mov
mov
inc
jge
popf
bnd
inc
insl
pop
mov
pop
mov
xchg
in
mov
mov
retw
in
mov
jmp
xor
add
or
pop
outsl
mov
and
push
leave
sbb
pop
xchg
aad
in
add
nop
pop
mov
test
int3
dec
pop
lock
sbb
jp
std
pop
into
xor
push
pop
daa
js
mov
scas
sbb
mov
lahf
es
mov
sub
xchg
push
adc
dec
fs
test
mov
or
aaa
add
pop
push
pop
sbb
cmpsb
ss
mov
lods
mov
dec
ret
inc
jae
jo
test
lea
jbe
fmuls
subb
push
sbb
rcrl
pop
lcall
clc
mov
mov
push
insl
add
push
call
gs
mov
mov
sarb
pop
int
andb
dec
mov
outsb
insb
push
in
andb
int3
push
mov
lock
cwtl
lfs
xor
cmp
xchg
jnp
int
fld
gs
daa
dec
dec
and
sub
jae
dec
fdivrp
dec
rorl
aam
mov
jo
mov
jecxz
pushf
int3
ret
jl,pt
jecxz
addr16
aas
or
push
mov
jecxz
fldl
push
and
push
jae
outsl
scas
arpl
or
daa
jnp
fwait
push
loope
jl
cmp
adc
je
mov
int3
mov
mov
imul
lfs
fisttps
insb
popl
mov
push
jae
ljmp
orb
pop
dec
pop
inc
test
xor
jae
jo
xchg
out
popa
push
jl
sbb
pop
mov
or
add
jl
mov
and
pop
xor
adc
lahf
mov
rcl
add
xchg
addl
icebp
xchg
idivb
arpl
test
mov
into
ss
push
ds
adc
lock
jne
push
stos
adc
movsl
jle
adc
xorb
imul
xchg
imul
stc
out
or
call
xchg
sbb
loopne
pop
push
pop
aas
pop
fnsave
mov
nop
sbb
hlt
dec
je
push
imul
imul
cmp
lock
test
mov
jg
sub
call
or
shlb
jo
andb
ds
cmp
inc
sub
cmp
push
cmc
sub
pop
je
pop
adc
cmp
mov
insl
test
es
in
je
cmc
cmp
mov
mov
push
push
insb
xchg
sub
stc
jmp
cmp
ret
and
xchg
dec
jg
sub
movsl
and
cltd
popa
mov
fs
int
lea
lcall
cmp
mov
imul
push
cs
mov
sub
jae
mov
fiadds
dec
mov
dec
lds
sub
mov
loope
xchg
scas
mov
jmp
and
cmp
sbb
faddl
cmp
insl
dec
shr
cmpsl
lods
shll
pop
xor
je
jb
and
daa
mov
pop
add
test
test
jle
inc
adc
sbb
data16
mov
sub
movsb
cmp
mov
jnp
jns
lret
cmp
mov
popfw
lods
sarl
pop
pop
out
push
xchg
mov
std
jb
sbb
aaa
sub
test
sar
push
lods
scas
mov
in
pop
inc
sahf
add
mov
loope
push
insl
scas
mov
dec
jns
mov
les
inc
jle
xchg
sbb
pop
popf
in
lea
icebp
packsswb
or
cmp
ffreep
push
adc
pop
aad
xchg
xor
out
sbb
mov
inc
lret
dec
push
mov
aaa
mov
sbb
inc
loop
dec
and
jecxz
stos
pop
in
dec
lahf
dec
lret
rcrl
int
dec
in
loope
jo
dec
mov
outsb
test
test
cmp
into
jp
jg
imul
ja
lahf
mov
jne
orl
add
sbb
inc
aaa
xor
mov
inc
and
mov
js
pop
cs
ss
mov
dec
sub
daa
push
adc
xorl
pop
rorb
mov
jns
lcall
fs
popa
jl
loop
pop
sub
pop
bound
mov
push
js
xchg
cmc
inc
mov
adc
insb
loop
mov
sub
shr
bound
fs
xchg
and
pop
pop
cmp
out
adc
hlt
adc
sbb
ja
jl
gs
and
xchg
jge
mov
clc
fistl
cld
dec
ja
cmp
cmp
mov
std
test
mov
inc
fsub
es
sbb
sbb
mov
sbb
add
mov
jg
imul
test
pop
mov
mov
shrl
cmp
mov
stc
out
jmp
pop
cmp
pop
mov
stc
subl
adc
pop
push
test
lods
arpl
pop
orl
out
mov
xlat
mov
stc
loopne
push
xor
pop
pop
jbe
cs
shll
sbb
mov
and
sub
push
mov
mov
nop
popf
jae
dec
mov
shr
lret
ja
mov
imul
out
test
fs
push
lods
pop
flds
mulb
rol
in
aad
inc
and
jmp
std
push
add
cld
lock
daa
xchg
mov
jo
xchg
mov
sahf
loopne
aad
jg
mov
push
push
mov
popf
fldt
in
sub
dec
fwait
in
xorb
xchg
das
fidivl
fcmovb
pop
ret
add
stos
in
pop
xor
push
xchg
enter
sub
ret
and
mov
or
mov
push
or
push
mov
and
xor
fisubrl
lods
add
mov
aam
mov
adc
jge
cmp
cmc
and
test
fsts
in
ljmp
into
jg
inc
inc
and
cltd
xchg
xor
insb
popa
xchg
jb
ss
sub
loop,pn
jnp
add
or
daa
sub
scas
and
jne
addr16
lret
add
pop
sbb
or
shlb
pop
cmc
in
jecxz
push
leave
cwtl
shll
pop
cmp
adc
js
cmpsb
push
push
mov
pushf
scas
jno
xchg
int3
rorl
xchg
and
lret
outsb
mov
ss
dec
and
mov
xchg
clc
lods
jle
aaa
sahf
dec
ljmp
cmp
lds
mov
faddp
cmp
fimuls
es
adc
mov
scas
mov
mov
mull
cmp
cmpsb
cmp
sarb
lods
cmp
popa
in
inc
mov
fwait
cmc
pop
inc
paddq
sbb
jge
popa
sbb
les
lds
sbb
jp
icebp
cmp
sub
cmpsb
inc
mov
push
rclb
inc
int
js
pushf
mov
mov
aad
sub
xchg
add
push
lret
test
mov
test
test
scas
pop
stc
pop
push
stos
xor
je
jbe
jns
cli
outsb
leave
push
ss
add
mov
mov
inc
in
jge
aam
mov
aaa
push
gs
ss
mov
stc
and
xor
popa
jmp
ja
sub
cltd
leave
pop
aad
jnp
fisubl
addr16
mov
jg
mov
mov
and
and
jns
lret
xlat
das
cmpsb
outsl
inc
sub
cmp
or
fstpl
inc
repnz
inc
mov
dec
xor
fwait
outsb
jl
mov
cmp
lods
pop
popf
xchg
jl
inc
aas
in
int3
dec
fisttps
ficomps
xchg
xchg
or
test
fiadds
scas
ficoms
lods
push
jp
clc
cltd
loop
adc
adc
mov
or
push
js
mov
cmp
dec
dec
mov
das
xor
or
mov
jno
dec
loope
mov
push
das
dec
movsl
dec
and
in
and
jne
int3
sbb
cmc
lahf
les
adc
push
cli
sbb
pop
mov
mov
mov
rol
adc
aas
push
jbe
xchg
test
mov
xchg
adc
jnp
ja
jmp
std
pusha
xchg
pop
in
insl
out
jg
jle
sub
mov
adc
cwtl
mov
sbb
mov
loop
fiadds
int
in
push
cmp
stc
pop
mov
mov
enter
outsb
xchg
je
ja
fsubrl
cltd
aam
sbb
mov
inc
idivb
les
popf
add
lret
mov
mov
mov
into
ja
jns
cmpsl
fdivr
mov
in
mov
dec
popa
lods
mov
outsb
mov
and
fildll
inc
fstpl
cmp
imul
ja
mov
nop
in
mov
sbb
fs
jle
fisubrl
jg
mov
sarb
cwtl
fidivrs
arpl
stos
addb
ds
es
out
out
imul
add
inc
jecxz
je
call
sbbl
lods
movsl
add
inc
popa
pop
push
loopne
jo
in
cwtl
push
mov
aaa
stos
xchg
push
inc
adcl
add
jge
push
repnz
dec
lahf
out
lret
adc
aaa
or
inc
rclb
mov
out
xchg
sub
imul
gs
dec
mov
scas
sbb
lods
in
int
sbbb
xlat
daa
lods
xor
jge
mov
xchg
pop
in
es
out
pop
in
push
pushf
sub
xor
pop
pusha
pop
nop
xchg
jno
add
shrb
ss
ss
xorl
xor
jecxz
and
jno,pt
cmp
fstpl
inc
sti
lea
mov
mov
mov
cli
mov
ret
push
nop
nop
mov
jp
jns
inc
sarb
inc
adcb
arpl
and
inc
jg
mov
in
add
adc
imull
repz
xchg
es
cltd
into
pusha
popa
push
cmpsb
test
add
mov
and
mov
mov
cmp
mov
push
xchg
xchg
dec
sti
xlat
lcall
rclb
push
xchg
jl
pop
or
jne
cmp
and
insb
in
adc
ret
push
loopne
sub
adc
adc
lret
jl
add
pop
imul
ja
mov
test
xor
mov
mov
and
fucom
outsb
cmpsb
lods
loop
mov
push
push
lret
icebp
call
shl
add
and
pop
mov
in
sub
mov
and
fs
cmp
lea
xchg
sub
ljmp
repnz
inc
sbb
into
rclb
push
adc
gs
push
add
mov
or
aas
cmp
psubusb
xor
hlt
jne
insb
push
mov
sub
loop
sahf
xor
sbb
add
js
sbb
scas
pop
jp
outsb
loopne
popa
dec
sbb
or
sub
push
jl
lods
je
popf
cld
arpl
pop
adc
jb
jbe
cltd
dec
mov
fadd
lahf
lret
out
lret
out
push
call
mov
xor
cmp
shlb
push
mov
xchg
xor
nop
or
pop
mov
xchg
add
pop
cmp
out
cmp
jnp
in
inc
inc
push
inc
push
jmp
xor
xor
daa
push
or
mov
sbbb
aaa
sbb
sub
stc
test
mov
mov
xchg
and
pop
cmpsb
xchg
and
fimull
add
pop
rcr
sub
outsl
iret
iret
and
mov
and
cmc
in
int
fadd
add
and
push
inc
xchg
mov
mov
mov
push
ret
fmull
addr16
repz
sub
into
hlt
sbbb
inc
jle
push
jae
push
mov
mov
jl
jnp
jmp
mov
add
out
scas
cli
pop
mov
push
popf
mov
sbb
mov
les
xor
test
or
push
sub
mov
jl
mov
mov
cmpsb
pop
popf
in
push
mov
push
out
data16
sbb
pop
push
pushl
adc
push
jp
add
xor
nop
xchg
sbb
push
testl
xor
rcrl
xchg
out
mov
dec
icebp
in
nop
jecxz
jbe
adc
or
jmp
cmp
data16
scas
out
jno
arpl
in
inc
fstpl
push
or
std
mov
std
push
daa
cwtl
push
mov
mov
xor
sbb
pop
xlat
mov
sub
mov
loope
aas
mov
mov
dec
mov
sub
fsubrs
bswap
in
cmp
mov
pop
push
mov
in
push
ljmp
mov
rolb
or
fucompp
idivb
es
or
sub
frstor
pop
mov
iret
outsb
pop
jo
dec
mov
xor
sqrtps
xlat
stc
pop
jae
dec
nop
gs
inc
decl
mov
jecxz
push
icebp
pop
mov
notb
rclb
push
inc
xchg
mov
js
sub
negl
sbb
out
lods
loop
cmp
and
xlat
mov
jo
push
cmp
jae
cld
xchg
push
cs
dec
hlt
jno
or
cltd
mov
pop
push
cmp
xchg
shll
dec
nop
sub
mov
mov
jmp
mov
jno
js
cmp
fsts
data16
sbb
imul
mov
jmp
idivb
lods
add
insl
or
cltd
mov
movsb
lods
cmpsl
popf
cmp
in
pushf
xchg
les
stos
cmp
rcrb
test
inc
cltd
add
or
sbb
ljmp
sub
imul
push
lea
outsb
inc
mov
jno
adc
xchg
lea
add
push
int3
jo
std
dec
xor
push
idivl
mov
or
pushf
in
adc
push
pop
and
push
in
sbb
lods
xor
sbb
and
aas
jp
mov
add
popf
aas
mov
pop
pop
pusha
add
ficomps
xchg
mov
jns
mov
rorb
add
pop
sbbb
push
xor
cmc
xchg
jecxz
shl
pop
and
int3
fwait
mov
sub
fisttps
sbb
sti
fstl
xchg
sbb
adc
not
pushf
xchg
inc
aas
ret
dec
data16
jle
jb
mov
mov
or
xchg
sbb
pop
out
and
mov
inc
sub
iret
lret
out
push
push
lret
dec
xchg
scas
mov
inc
cld
pop
dec
push
mov
es
rolb
orl
test
ds
fdivr
out
sbb
push
incb
mov
and
sbb
in
clc
leave
mov
inc
pop
add
subb
jl
mov
pop
xor
xlat
in
out
dec
mov
and
dec
aam
in
in
push
imul
inc
mov
add
sti
xchg
clc
inc
adc
fcmovne
xchg
fimuls
out
adc
push
mov
aad
dec
outsl
adc
js
nop
sbb
fisubrl
jbe
inc
and
lss
sub
mov
mov
jo
loopne
mov
rcll
negb
lcall
jno
icebp
mov
or
add
ds
cltd
mov
outsl
inc
in
push
sbb
adc
std
ja
repnz
jo
js
in
loopne
dec
movsl
imul
ss
inc
scas
push
sbb
out
push
out
dec
mov
shrb
or
lea
das
pop
mov
fcoms
xorb
cmp
mov
cmpsl
cs
repnz
dec
push
jle
aas
fidivs
xchg
popa
cmp
push
jmp
ja
inc
cmp
rcrl
aad
cmp
sub
and
sbb
out
dec
or
xor
test
push
or
pop
push
xchg
mov
lea
push
ret
ljmp
in
rorb
stos
ficomps
xchg
inc
push
loopne
mov
imul
pop
xor
mov
js
rclb
sub
dec
pop
push
xchg
es
add
pop
push
pop
xchg
jge
cmpl
cmp
das
pop
adc
pop
jge
shl
repnz
pop
push
lods
dec
jne
or
in
sbb
xchg
into
xchg
sbb
or
ja
mov
out
scas
cltd
mov
ljmp
adc
mov
fistpl
aaa
cmpb
inc
jecxz
faddl
push
fnstenv
inc
gs
cmp
fildll
test
icebp
sarl
in
fcoms
mov
aas
movsl
rcll
pop
mov
cmp
rclb
dec
mov
in
dec
outsb
cmp
imul
mov
mov
in
and
add
mov
xor
add
mov
in
jle
sub
mov
dec
lret
fmuls
call
ljmp
or
mov
jae
dec
push
lahf
jl
hlt
jle
cmp
stos
out
cmp
and
out
jmp
dec
aad
lret
insl
xor
es
ret
in
adc
lcall
pusha
movsl
jmp
cmp
aam
and
or
jmp
clc
push
inc
sti
aaa
cwtl
pop
subb
js
pop
int3
outsl
dec
out
xchg
cmp
jg
push
les
rcl
sbb
pop
out
in
lret
pop
jo
sub
sbb
or
sar
mov
inc
and
lock
pop
std
popf
clc
cmc
or
push
pop
mov
fdivs
pop
xchg
nop
sub
out
or
or
lods
cs
xchg
arpl
testl
out
mov
push
xor
ljmp
xor
xlat
mov
jge
add
xlat
push
jecxz
sbb
mulw
lea
dec
cltd
test
call
xchg
add
xor
jp
aad
pushf
stc
enter
daa
inc
gs
cmp
into
and
sbb
stos
decl
mov
jb
dec
jne
ret
clc
sub
test
mov
ret
lods
and
sbb
es
leave
jmp
push
fsubs
jbe
add
dec
mov
jmp
inc
shrb
or
imul
dec
and
popa
test
push
outsl
jo
push
scas
pop
test
push
or
nop
test
ret
rclb
test
shrl
iret
sbb
dec
jp
push
mov
sub
xor
clc
lock
out
jg
repnz
xor
adc
pusha
jmp
inc
fmuls
jp
cmp
mov
mov
xchg
xor
inc
cmpsb
mov
pop
fistpl
pop
xchg
daa
pop
push
nop
mov
adc
movsb
and
ficomps
lcall
gs
xlat
push
push
sub
shll
inc
nop
mov
xlat
add
xchg
xchg
daa
and
addr16
mov
call
testl
call
cmp
xadd
mov
movsb
repz
test
and
test
mov
sub
orb
push
les
pop
cmc
sahf
xchg
rolb
cwtl
jae
scas
andl
pop
cmpsl
movsl
dec
jae
into
fisttpll
pop
notb
cmpsl
call
mov
adc
ret
xchg
pushf
dec
or
dec
pop
cmpsb
inc
sub
nop
mov
cmp
adcb
push
clc
aaa
loope
dec
ret
aad
pop
push
dec
jnp
cmp
lahf
push
iret
sub
in
sub
add
mov
dec
inc
sub
nop
push
push
in
mov
jbe
dec
inc
dec
sbb
hlt
mov
xchg
fisubl
adc
inc
lds
lcall
test
pop
sbb
push
jge
push
sahf
dec
pop
mov
int
sub
repnz
lret
sbb
sub
outsl
es
mov
dec
or
xor
add
mov
mov
inc
mov
or
mov
scas
mov
and
jecxz
out
mov
dec
in
xor
mov
out
popa
and
into
mov
sub
sahf
sbbl
lret
lea
int
into
int3
inc
test
sbb
sub
lcall
ss
fisubrs
mov
inc
in
fcomps
fnsave
xchg
shll
jl
push
adc
decl
cmpsb
xchg
adc
pop
popf
cmpsb
inc
push
fwait
daa
ljmp
imul
inc
out
js
sbb
adc
inc
or
mov
and
test
mov
jbe
push
cli
aas
mov
outsl
ja
rolb
sub
cmp
add
ss
sbb
subb
aas
orb
int3
xor
adc
pushf
in
jmp
xchg
js
movsl
or
testl
dec
movsb
or
das
push
clc
xor
aad
imul
xchg
loopne
cmpsl
xor
cltd
addr16
add
mov
or
add
xorb
push
sbb
cld
stos
popf
dec
mov
xchg
andb
ds
stc
mov
xchg
push
call
rcll
aas
sbb
cmpsb
js
add
and
insb
dec
pushl
push
push
in
test
adc
cld
aam
lcall
loopne
mov
mov
mov
movsb
jge
outsb
pop
and
rorb
loope
add
lods
push
jge
fdiv
mov
jp
dec
inc
outsl
pop
popf
stos
data16
jne
in
sub
and
in
into
rcrb
bound
inc
insb
test
loope
out
enter
aad
ds
lahf
bound
ret
inc
bound
pop
shll
aaa
test
aam
ret
jbe
fwait
mov
sbb
or
cmp
shlb
outsl
mov
xchg
test
andb
test
gs
mov
push
fwait
sbb
cs
shll
mov
out
push
sti
icebp
xchg
add
mov
inc
lea
mov
gs
inc
ror
mov
cld
adc
jae
xor
cmp
push
jbe
mov
and
aaa
inc
lahf
daa
jmp
loope
fsubs
inc
aad
xchg
xchg
mov
push
lcall
stc
xchg
push
mov
xor
pop
dec
pop
adc
aam
push
dec
mov
push
dec
pop
jmp
pop
mov
mov
movsb
xchg
pop
inc
fsubl
aaa
test
setb
pop
hlt
cmp
xchg
or
enter
daa
or
push
xchg
sub
stc
jp
cmp
mov
int3
lahf
je
sbb
outsb
out
xchg
push
fwait
push
mov
sub
out
pop
outsl
ljmp
xlat
fisttpl
push
jb
add
pop
nop
ja
lret
ss
vxorps
jne
adc
fnstsw
pop
jae
lahf
xor
enter
pop
jecxz
pop
shlb
xchg
jae
push
pushf
pop
aas
pop
sub
hlt
cld
and
and
xchg
cmp
mov
push
xor
rorl
jge
pop
das
scas
mov
mov
pop
sub
xor
lock
add
popf
sbb
pusha
push
pop
or
ja
int3
or
cmp
push
data16
jne
data16
pop
nop
jmp
or
iret
clc
push
push
out
insl
jge
jl
push
xchg
mov
xor
out
or
test
xchg
rcrl
inc
sbb
outsb
call
dec
lds
es
lahf
mov
loop
mov
cmpl
cld
call
xchg
jno
pop
ja
lods
or
sbb
shl
adc
imul
daa
cli
icebp
jno
pusha
push
sub
xlat
cmc
adc
repnz
in
jg
sbb
mov
cmp
stos
lods
icebp
lods
mov
orb
push
out
scas
inc
bound
dec
dec
jge
movsb
je
jb
add
mov
or
arpl
add
jno
adc
push
sub
sahf
lds
mov
xchg
sti
push
cmp
call
cli
push
lods
lods
in
aad
sahf
jae
adc
test
sub
dec
std
in
negl
outsl
mov
imul
cmp
dec
sub
and
out
mov
xor
dec
ret
sbb
inc
xchg
popa
inc
outsl
sbb
fadds
fs
sar
push
out
cmp
pop
push
push
cmc
scas
mov
lods
int3
into
pop
mov
mov
enter
mov
xor
enter
adc
out
mov
popf
jno,pn
mov
ret
stos
mov
add
lcall
push
mov
or
mov
insb
jno,pn
adc
jns
cltd
jae
les
inc
and
negb
stos
jnp
fldt
cmp
jne
sub
aaa
lret
mov
cmp
sarb
lock
das
leave
adc
sub
xor
xchg
lea
mov
add
push
jmp
jle
or
xchg
push
jl
lods
popf
jmp
mov
pop
sub
lea
adc
inc
lods
daa
sub
xor
scas
sbb
or
popf
xchg
fldl
pop
cmpsl
and
arpl
xlat
pop
dec
mov
int3
insb
adc
dec
cmp
loop
arpl
ja
sub
push
shlb
mov
xor
sbb
add
data16
mov
cwtl
xchg
jl
cs
mov
push
jmp
sbb
dec
inc
jmp
ljmp
and
cmp
mov
in
cwtl
xchg
mov
clc
std
jns
xchg
sbb
cmpsl
sbb
rclb
bound
rolb
mov
ljmp
rorl
or
adc
bound
xor
popa
sahf
sbb
push
fwait
jmp
pop
stos
nop
or
jg
jne
pop
mov
gs
in
add
sahf
test
cli
out
pop
test
das
cmc
push
fists
cmp
clc
cmp
cmp
inc
gs
idivb
mov
dec
mov
xchg
hlt
push
lock
pop
inc
cmpsb
hlt
jmp
sub
fadds
divb
jecxz
dec
xchg
sbb
notl
repnz
clc
jns
rorb
mov
jecxz
xor
and
pop
jae
mov
imul
push
mov
xrelease
cmp
das
push
mov
adc
stos
cmpsb
pop
in
push
je
jnp
les
subl
je
cltd
mov
xchg
dec
jbe
std
cmp
sahf
popa
mov
inc
lock
inc
add
push
test
lock
in
jl
adc
or
jl
addl
push
ljmp
mov
test
jnp
xor
test
ljmp
aad
inc
jmp
faddl
fisttpl
loope
mov
iret
popa
mov
xor
mov
push
data16
and
int
fwait
test
sbb
les
movq
fisubs
jo
repz
test
daa
fcoml
cs
pop
push
jmp
in
out
pushf
js
mov
xor
push
push
inc
cmpsb
mov
cs
lret
out
repz
adc
sub
fstpl
punpckldq
std
fstl
imul
jbe
pop
out
sti
pop
repz
add
lock
mov
stos
sbb
pop
ficoms
dec
addr16
ljmp
ljmp
fcoml
xchg
jle
pop
cwtl
arpl
sbb
inc
andb
sbb
int3
sbb
pop
lock
mov
imul
jno
mov
lahf
sbb
stos
add
lods
mov
jle
hlt
subl
adc
leave
icebp
aaa
adc
in
scas
and
lcall
push
pop
cmpb
push
test
addl
repnz
mov
mov
add
cmp
or
out
sbb
test
mov
dec
imul
jg
ljmp
shlb
fsubl
jle
xchg
mov
fiaddl
rcrb
addl
pop
and
shll
pusha
or
adc
jge
fistl
jbe
lods
loop
test
testb
add
iret
jnp
fsts
cld
mov
enter
sti
dec
jnp
js
or
pop
aas
rcll
lahf
mov
mov
cwtl
inc
mov
insl
dec
or
mov
sahf
inc
js
int3
or
ret
mov
push
sub
sti
jae
and
int3
cmp
nop
shlb
addr16
and
lea
shll
out
mov
movsb
mov
xchg
addr16
fisubl
je
cmpsl
add
scas
stos
lret
ss
dec
ret
gs
pusha
mov
adc
je
fnop
fldl
mov
int3
mov
mov
jg
sbb
orl
int
inc
imul
jle
orl
push
push
adc
fstpl
mov
pop
shll
nop
popa
test
movsl
mov
mov
clc
mov
adc
scas
pop
cmpsl
gs
push
pop
fsubr
and
fwait
loopne
into
push
push
pop
lds
add
rclb
sbb
aad
je
pop
enter
pop
lahf
inc
mov
sbb
mov
cmp
mov
das
mov
mov
out
xlat
stos
or
cwtl
and
pusha
ror
int
mov
loope
je
bound
lret
insb
je
shlb
insb
push
lret
cwtl
dec
push
ret
sbb
test
into
addr16
jmp
mov
out
mov
test
in
aad
stos
xchg
test
int3
xor
sbb
or
das
mov
repnz
pop
mov
pop
fwait
fwait
les
mov
xchg
daa
and
int
push
addl
xchg
dec
aaa
xchg
mov
adc
add
jmp
sbb
sbb
adc
pop
push
test
mov
loopne
js
div
adc
add
fmuls
adc
mov
mov
dec
push
pop
push
ret
out
cmp
cld
xchg
dec
negb
push
bound
add
add
mov
repz
aas
jnp
mov
aad
cmp
xchg
cmp
fwait
int3
fcoms
mov
sarl
or
into
cwtl
sub
sti
aam
popa
push
dec
dec
or
push
lcall
rcr
enter
add
int3
jge
mov
outsb
xchg
fsubrp
and
out
fstpt
shlb
mov
push
insb
xor
icebp
cltd
push
loop
and
stos
enter
ljmp
xchg
inc
xchg
shll
ficoml
sar
mov
adc
or
aad
cmp
sahf
imul
inc
jae
cwtl
ja
pushf
iret
repnz
repz
fcmovnb
adc
test
mov
mov
movsb
push
int
negl
or
xchg
jp
sub
movsl
testl
adc
mov
jp
push
add
or
fsubl
into
lods
pop
mov
jp
movsb
incb
dec
dec
cwtl
pop
mov
sub
fstl
int3
pop
das
rol
jg
push
out
out
sub
pop
pushf
jle
xor
popa
pop
xchg
call
fsub
jge
scas
mov
push
cwtl
lahf
dec
dec
jle
iret
sub
pop
imul
mov
xlat
jb
clc
jo
test
loopne,pn
mov
adc
inc
mov
and
push
and
jmp
dec
mov
jecxz
dec
push
add
lret
xchg
rcrl
mov
call
inc
or
outsl
push
sub
shlb
add
repz
sbbl
xchg
lret
lret
fnsave
lcall
loope
push
shrb
jmp
jle
mov
out
adc
sub
das
inc
mov
adc
movsb
sbb
pushl
add
mov
xchg
xchg
arpl
push
ljmp
mov
jl
in
add
rorb
aaa
sahf
das
inc
psrlq
fsts
dec
data16
push
pop
icebp
rcrl
xor
push
pop
negb
test
pusha
arpl
sbb
mov
int
cmp
or
popa
xchg
aas
jl
xchg
aaa
ss
push
ret
insl
js
cmc
inc
lret
mov
lret
enter
sub
faddl
cmp
xchg
jnp
lahf
test
flds
adc
mov
sti
ljmp
mov
xchg
mov
inc
cmp
pusha
js
cmovle
xor
loope
shrb
fldt
cltd
das
ja
hlt
mov
pop
mov
xor
outsb
mov
jge
sbb
cmp
dec
or
cmp
or
shrl
cmp
adc
pop
lahf
or
jae
lret
aam
mov
sub
xchg
scas
push
push
fwait
xchg
loop
adc
fistpll
add
sarb
iret
lea
ds
sbb
mov
dec
ja
mov
push
icebp
fldl
stc
in
xchg
fisubrl
inc
cmp
sub
and
pop
cmp
cmp
xor
jl
sbb
test
mov
filds
adc
addr16
stos
aad
and
sti
int3
insb
imul
cli
dec
pop
mov
sti
pop
loopne
push
sbb
add
pop
outsl
lds
xchg
cltd
pop
ljmp
jge
popa
jl
test
jecxz
cmp
pop
pop
jg
jg
cs
push
aad
pop
leave
inc
push
and
cmp
lods
imulb
pop
pop
xor
adc
lcall
lret
je
xchg
xchg
mov
je
xor
xchg
inc
fst
repz
sbb
lea
js
xchg
int3
dec
jae
cltd
lods
addr16
insl
sub
mov
xor
push
out
mov
cmp
jnp
pop
cmp
jne
outsb
loop
rcl
out
imul
addr16
nop
outsl
and
adc
and
repnz
ffree
es
fldl
cmc
jae
push
push
pop
add
or
icebp
sbb
adcb
fstps
es
and
es
mov
sbb
push
cmp
int3
pop
daa
adc
xorb
test
xchg
and
add
icebp
stos
lret
xchg
lea
jno
sub
or
push
add
xchg
adc
adc
xchg
cmc
jbe
cmpsl
icebp
dec
testb
add
sbbb
xorb
std
push
sub
jle
cmpsb
gs
loop
xchg
ss
ficompl
mov
or
add
adc
xlat
mov
testb
mov
bound
push
dec
xchg
jno
xor
push
sub
xchg
call
fmuls
je
mov
loope
flds
rorb
pop
movsl
imul
cwtl
loope
sub
mov
mov
hlt
xchg
jae
or
insb
in
in
jge
or
xchg
rolb
mov
push
rolb
xlat
push
cmpsb
popa
aad
in
inc
pop
inc
adc
pusha
movsb
rol
std
popa
or
jae
inc
loope
pop
mov
add
loope
push
sbbl
and
push
outsb
pop
in
inc
push
fwait
jns
bound
push
fs
add
inc
lret
dec
imul
pop
mov
sub
adc
lods
xchg
xchg
fs
test
xchg
inc
lret
pop
fiaddl
jnp
sbb
popa
or
push
in
test
and
dec
jge
aad
dec
xlat
jbe
mov
enter
cld
je
pop
push
xchg
mov
dec
arpl
cltd
lcall
insb
mov
and
adc
sahf
cs
shll
mov
into
imul
mov
mov
mov
mov
mov
dec
cmc
sbb
push
xchg
mov
xchg
adc
adc
cmp
jecxz
aas
sbb
push
cmp
shrl
out
ja
xchg
icebp
lods
dec
gs
mov
xor
push
push
ds
out
mov
xchg
lret
or
cmp
mov
pop
and
jae
bound
xchg
ret
adc
mov
orb
jge
push
xor
xor
shlb
pusha
mov
mulb
gs
push
int
in
mov
int3
jmp
adc
nop
add
adc
aas
mov
loopne
mov
in
popa
pop
out
fiadds
in
sub
add
add
popa
sbb
adc
xchg
mov
hlt
or
xor
adc
iret
imul
or
push
push
xchg
push
test
jle
filds
push
dec
sbb
gs
or
sbb
loop
insl
xor
stos
cwtl
sahf
mull
push
cmpsb
jecxz
push
out
incb
inc
inc
aad
or
les
cli
dec
sbb
aas
push
into
cmc
jle
fucomi
out
sbb
test
out
insb
and
sbb
pop
sbb
fmull
jo
xor
add
rdtsc
or
std
sbb
lods
adcl
and
ret
stc
mov
dec
jl
je
dec
cli
std
stc
add
lds
sbb
or
sub
icebp
push
in
in
pop
push
cli
mov
std
cmp
fstps
dec
xchg
xlat
scas
mov
push
enter
lods
in
adc
jle
std
gs
stos
movsl
fnsave
int3
mov
icebp
clc
pop
cmpsl
je
add
mov
xor
in
adc
sbb
roll
lret
test
mov
xchg
inc
out
xchg
jb
mov
dec
insb
daa
fdivp
or
pop
leave
pushf
outsb
notb
mov
mov
insb
mov
dec
xchg
aad
sub
inc
mov
inc
cmp
push
cmp
mov
popa
aaa
inc
jp
add
and
mov
xor
cmp
jmp
aas
out
mov
xchg
pop
push
push
mov
sub
mov
push
into
jmp
mov
fldcw
xchg
fiaddl
jnp
inc
adc
jp
lock
mov
xor
movsl
lock
cs
lds
xor
mov
cmc
addb
ds
hlt
push
or
ss
cs
mov
or
gs
push
fidivl
cmp
pop
lret
pop
mov
ja
mov
lahf
adc
ja
xlat
pop
loopne
sub
popf
notl
out
in
lods
movsb
aaa
mov
mov
test
aam
jne
aas
xchg
lret
jo
test
jp
es
pop
adc
fisubl
sub
icebp
ja
jmp
jl
enter
imul
inc
sub
call
sarb
es
inc
sub
bound
outsl
dec
loop
idiv
cmp
dec
sbb
inc
lret
adc
jmp
sbbl
adc
add
das
push
aas
or
xchg
stos
popf
jge
fcoms
mov
andl
icebp
mov
loopne
shr
sbb
test
scas
out
lret
jge
adc
loope
and
ljmp
jb
insl
ficoml
mov
xchg
dec
sbb
push
xor
addr16
sbb
pop
stos
mov
bound
inc
sbb
rdtsc
xor
mov
lret
adc
mov
dec
adc
in
add
ret
fldenv
push
and
xchg
pop
test
dec
and
inc
adc
push
aaa
adc
push
push
sub
imul
mov
movsl
xor
push
sub
push
cltd
outsl
insb
or
inc
aaa
insl
imul
fsubp
orb
aad
cvtdq2ps
shlb
popa
or
xchg
lods
mov
cmp
ds
das
mov
inc
jmp
in
ret
jbe
leave
cmp
popa
arpl
ljmp
dec
jg
mov
ljmp
sub
mov
inc
in
mov
cmp
xlat
rorb
shrb
insb
xor
and
adc
push
out
or
sub
mov
leave
and
sarb
jg
loop
and
dec
mov
loop
mull
repnz
lret
int
lods
jecxz
jo
fdivrs
mov
lret
push
sbb
xor
sub
cmpsl
scas
imul
aad
and
jecxz
push
xchg
aad
mov
sbb
cwtl
sub
adc
sub
dec
addr16
jbe
xlat
iret
stos
addr16
lret
adc
dec
xlat
in
imul
xorl
imul
rcll
push
cld
nop
mov
aaa
sbbb
stc
jp
inc
xchg
leave
aad
mov
cmp
sbb
dec
mov
dec
or
and
cmp
mov
or
insb
or
fistpll
lahf
cmp
mov
adc
pop
rcrb
loope
inc
les
push
cmp
aad
sub
loope
add
std
pop
pop
or
adcb
shlb
jnp
inc
es
add
test
movb
inc
in
push
enter
aam
inc
lods
push
sbb
sbbb
in
int3
jge
sti
inc
dec
adc
mov
or
loopne
cwtl
cltd
cmp
leave
sbb
das
pop
shll
xor
jle
ja
jg
cs
pop
pop
lea
aaa
and
icebp
sbb
or
clc
mov
sub
daa
jle
in
scas
subb
loop
bnd
mov
insb
mov
jle
lcall
sub
cmc
dec
loope
dec
gs
aas
xorl
bound
and
lcall
mov
and
mov
xchg
lahf
int3
xor
xchg
pop
mov
dec
jne
fdiv
popa
jnp
xchg
dec
into
cltd
pop
ret
lahf
push
fidivl
hlt
lea
loop
fs
mov
pop
or
push
cltd
outsl
jl
nop
rorb
out
inc
mov
cmp
dec
nop
iret
fwait
cs
int
sbb
mov
add
jns
xor
pop
xchg
sbb
dec
cmova
add
push
mov
and
pusha
sbbb
mov
xchg
cwtl
rcrb
cwtl
inc
push
mov
mov
jae
pop
xchg
mov
popa
repnz
mov
stc
add
and
fwait
mov
mov
enter
aas
cld
dec
inc
imul
in
push
pop
jle
stc
jl
imul
sbb
lcall
nop
repnz
leave
shrb
bound
fdivl
in
insl
mov
js
cli
lods
imul
mov
fidivrs
xor
pop
xchg
outsl
out
cli
xchg
mov
pusha
and
dec
daa
pop
lcall
pop
and
pop
cltd
push
pop
mov
inc
pop
cmp
cmp
lds
scas
mov
insb
push
jp
and
pop
aad
cmp
scas
cmp
mov
aad
push
or
and
imull
mov
leave
push
aas
sbb
adc
jmp
pop
pop
adc
dec
enter
insl
mov
xchg
clc
mov
jle
cmc
lret
or
popa
push
push
cmpb
lods
lock
lea
test
mov
pop
das
stc
data16
push
xor
js
pusha
sahf
lds
icebp
xor
pop
mov
dec
roll
lret
mov
cmp
int3
aam
js
fidivl
ds
sub
stc
lea
int3
cmp
dec
clc
outsl
insl
mov
adc
adc
adc
out
dec
movsl
ret
cmc
aam
sbb
mov
mov
mov
xor
dec
lds
xor
mov
adc
push
insb
sub
jb
adc
stos
idivl
fwait
mov
add
mov
pcmpeqd
cs
sbb
inc
adc
cmp
outsb
mov
ja
orb
cmp
cmpb
sarb
mov
iret
mov
mov
aaa
xchg
jp
xchg
mov
and
inc
in
mov
or
adc
mov
inc
mov
cmp
out
mov
sbb
or
push
popf
cmpsl
mov
mov
imul
mov
fldl
sub
popa
fimull
dec
adc
outsl
or
sub
push
enter
add
ret
add
mov
mov
stos
cmpsl
mov
je
rcll
scas
std
test
xor
loop
bound
adc
test
ret
push
push
mov
dec
add
aas
loop
nop
xchg
enter
mov
sbb
and
jb
adc
sti
cli
mov
cli
nop
or
sub
dec
adc
xor
insb
mov
ss
repnz
sbb
jg
orl
iret
jmp
add
nop
push
cmp
ja
scas
pop
mov
mov
inc
mov
add
gs
xor
daa
sub
jb
clc
inc
xor
adc
xor
imul
es
xor
jg
imul
mov
rcrb
fdivrl
cmp
cmp
popf
push
popf
push
insl
mov
fsub
aad
das
jno
andl
push
rcll
jno
dec
cld
add
push
hlt
loope
push
out
ret
pop
dec
adc
pop
insl
inc
xchg
cs
lret
add
insb
daa
push
cmp
mov
cltd
mov
inc
push
xor
ret
test
in
add
push
sub
fwait
push
mov
and
pop
xchg
jns
mov
mov
loope
data16
nop
leave
test
inc
add
outsb
cs
outsl
xchg
add
cli
inc
ja
cmp
lret
inc
aam
jbe
push
inc
lcall
cltd
push
jg
pushf
jg
scas
or
insl
mov
test
pop
xchg
arpl
push
xor
arpl
and
dec
mov
das
sahf
enter
fucomip
in
js
xor
pop
cmc
xor
sbb
aas
icebp
xor
adc
lret
dec
out
adc
das
and
lcall
mov
data16
xor
ljmp
addr16
mov
insb
imul
xchg
jno
popa
ss
mov
xchg
lds
mov
push
ljmp
pop
sub
daa
aaa
jae
cmp
nop
xlat
and
push
mov
mov
mov
push
mov
sub
pop
or
sub
mov
add
scas
cmp
mov
bswap
mov
push
fnstcw
decl
int
jno
fcmovbe
rcr
mov
dec
cmp
scas
fs
les
insb
aad
movsl
lret
insb
or
pusha
sub
lret
dec
sub
in
cmp
and
xchg
lcall
mov
adc
mov
sub
sbb
jo
jne
or
and
add
sub
les
nop
fwait
inc
push
icebp
mov
cmpsl
sti
sub
push
dec
or
adc
movsb
jmp
lahf
adc
int3
mov
cmpsb
jns
cwtl
fs
icebp
movsb
and
push
cs
mov
nop
add
movsb
push
mov
jle
push
ret
mov
leave
inc
outsb
ret
sahf
pop
mov
jo
xchg
push
fistpl
bnd
in
enter
aad
ret
loopne
popa
fisubrl
xchg
out
adc
sbb
mov
stos
and
outsl
icebp
mov
rorl
arpl
jle
insl
and
lcall
dec
sub
push
add
jns
or
jnp
xlat
sub
xchg
adc
pop
push
stos
cmpsl
push
nop
adc
jecxz
dec
mulb
pop
add
repnz
xchg
mov
insb
or
xchg
orl
popf
push
pop
popf
test
das
xchg
dec
xor
loopne
adc
fwait
out
stc
ss
repz
inc
repz
sub
cmpsl
inc
loop
mov
call
aad
iret
push
mov
pop
shll
mov
arpl
dec
ljmp
xor
es
mov
jle
in
pushf
mov
in
fidivrs
lret
fildll
hlt
push
fadd
imul
xchg
mov
mov
into
std
mov
pop
push
jmp
xchg
outsl
xacquire
or
inc
sbb
push
dec
repz
xor
jge
sahf
scas
push
ja
aaa
sbb
lods
add
call
pusha
int3
test
xchg
andb
sbb
fnstsw
xchg
scas
xor
test
iret
xor
cmpsb
push
dec
sbb
mov
cli
jne
pop
rcll
in
or
sub
adc
adc
mov
ret
cs
xor
or
jne
mov
inc
push
xchg
mov
jns
cmp
stc
mov
jnp
jp
xor
or
shrb
popw
lahf
pop
push
xchg
in
mov
fidivs
or
loop
bound
pusha
pop
pop
adc
imul
mov
mov
add
jae
cmp
ret
lahf
adc
rcrb
lods
icebp
dec
popa
std
jp
cmp
xorl
jmp
adc
lock
push
pop
mov
push
and
fldt
push
ja
inc
pcmpeqd
rcr
and
sarl
mov
and
dec
and
xchg
mov
adc
xor
das
or
jecxz
mov
fwait
vdivsd
xchg
pop
pop
pushf
push
xor
rorl
lods
sbb
incl
jae
cltd
repz
pushf
xchg
lret
pop
mov
push
cmpsb
pop
cmp
or
xchg
jg
enter
ljmp
aaa
icebp
push
adc
add
out
mov
roll
and
cltd
inc
adc
fwait
in
shrl
jne
add
les
sub
in
and
mov
out
imul
lret
mov
sahf
mov
out
lods
mov
cld
mov
stos
pop
xchg
sbb
jecxz
out
inc
lret
jg
push
push
ja
cmc
xchg
dec
jb
inc
sbb
enter
pop
xchg
aad
leave
repnz
adc
and
inc
xor
dec
mov
shrl
mov
sub
adc
imul
lret
out
dec
lods
jmp
loope
xor
mov
addr16
adc
jb
inc
daa
jo
jbe
xchg
je
loopne
vorps
sbb
sub
mov
aas
mul
jmp
inc
orb
mov
lea
cltd
pop
jle
push
add
fucomi
aaa
mov
scas
ret
push
popa
push
and
gs
rorl
gs
sub
lods
mov
cmp
sbb
fnstsw
mov
iret
enter
xor
enter
jg
dec
cmpsb
sti
loop
pop
js
orb
stos
cli
push
repnz
mov
dec
pop
rolb
mov
xchg
dec
mov
fisubrl
xchg
shrb
stc
pop
mov
add
arpl
jl
push
ja
or
in
inc
je
xor
mov
lret
add
dec
fisubs
add
jle
xchg
xor
mov
mov
adc
pop
mov
and
hlt
fs
inc
cs
sbbb
mov
mov
pop
das
lret
pop
mov
adc
xor
pop
or
lea
rcrb
nop
sbb
ret
scas
imull
xchg
push
icebp
or
repnz
repz
imul
imul
repnz
mov
or
mov
pop
mov
mov
mov
mov
xlat
test
mov
mov
add
xchg
pop
jecxz
lcall
fcomi
jl
pop
or
push
sub
das
mov
ficoml
push
and
pop
and
js
test
xor
scas
mov
push
sbb
loop
jae
and
inc
sub
imul
inc
into
fnstenv
pop
add
loop
mov
mov
daa
mov
cmpsl
or
xchg
lret
stc
dec
fwait
lahf
mov
fwait
pop
jno
push
push
dec
enter
ror
aad
adcl
and
sbb
cmp
xchg
loopne
dec
into
flds
jle
clc
frstor
addr16
jg
js
ret
xor
lahf
pop
clc
dec
and
cmp
and
cmp
mov
jae
cmpsb
test
add
xchg
pop
repnz
pop
repz
adc
mov
adc
lahf
clc
dec
test
hlt
movsb
pop
adc
in
mov
int3
mov
pusha
mov
loop
cmp
jl
xchg
add
cmp
ret
lret
jbe
sarl
jecxz
icebp
or
ja
add
jo
loope
adc
or
test
xor
mov
push
pop
cld
es
out
test
cmp
sbb
psllw
pslld
fists
xchg
stos
lcall
push
das
push
fsts
inc
mov
stos
stc
pop
imulb
int3
mov
adc
mov
movsb
int3
inc
mov
mov
leave
cmpsl
jg
xchg
mov
cli
mov
cltd
xor
cmp
out
mov
pushl
mov
loope
mov
clc
stos
fsubrl
inc
xchg
cmc
mov
popf
fsubp
in
fs
mov
pop
fstpt
shrl
dec
push
dec
sbb
clc
inc
shlb
xchg
mov
icebp
in
cwtl
or
into
sub
inc
sbb
or
bound
inc
sahf
xorb
adc
inc
xchg
iret
pop
inc
and
xor
adc
scas
cmp
mov
or
cmp
ljmp
cmp
testl
orb
popf
imul
jb
dec
int
pop
jecxz,pt
adc
xor
fists
push
dec
sub
lret
sub
stos
inc
and
push
rcrb
test
inc
aad
push
adc
mov
push
in
iret
fwait
cmpl
xchg
lock
lahf
ss
leave
add
addr16
add
data16
inc
mov
mov
mov
rol
mov
add
test
lods
jg
adc
loope
repz
mov
push
push
mov
and
and
popf
pop
xchg
pushl
and
xlat
jmp
popa
bound
cmc
lea
add
mov
and
jle
in
xchg
dec
or
sbb
jle
ljmp
mov
cmpsb
cwtl
sbb
arpl
les
xor
out
mov
fdivrp
clc
dec
jno,pt
ja
ret
les
lea
mulb
out
rorb
mov
dec
rolb
insb
ds
ja
mov
loopne
sbb
int3
mov
adcl
pop
and
mov
divl
mov
aam
mov
leave
jo
hlt
fisubl
leave
push
nop
ret
fs
cmp
cmpsl
xchg
out
pop
dec
aas
or
jl
call
or
icebp
sbb
or
xor
mov
or
inc
stc
adcb
mov
inc
bound
mov
mov
sbb
mov
xor
xchg
test
adc
sbb
adc
fistps
mov
cwtl
cmp
ljmp
in
fnstcw
mov
lret
inc
jp
out
and
das
push
mov
dec
shl
jecxz
setne
and
sub
mov
sarl
stos
xor
out
loope
add
insb
js
stos
int
cli
add
sub
adc
jg
add
lods
fisubs
mov
xchg
push
mov
adc
jle
fisubrs
mov
push
aad
pop
popa
bound
dec
ja
testb
pop
jmp
pop
pop
inc
andb
hlt
fwait
ret
lahf
movsl
sbb
or
cmp
fstpl
cld
clc
pop
xor
bound
in
icebp
mov
and
pop
push
fmuls
push
pushf
push
sarl
insl
or
data16
add
into
gs
adc
inc
out
xchg
shlb
xor
mov
js
pop
fisubs
xor
add
movsb
adc
push
roll
mov
scas
xor
and
cmpb
mov
mov
sub
jns
pusha
popa
pop
in
mov
lock
jnp
jne
test
test
xor
movsl
jbe
fs
cli
inc
mov
xor
pop
test
xchg
dec
dec
clc
pop
push
lds
mov
mov
iret
in
aaa
rcrl
pop
cmp
sbb
pop
and
push
addr16
roll
jno
sbb
pop
pusha
jb
outsl
movsl
fisttpll
xor
inc
mov
in
dec
pop
or
mov
cmp
or
je
test
jecxz
or
xchg
ret
mov
pop
fwait
adc
or
ds
mov
fs
out
pop
add
push
cmp
mov
les
mov
push
jne
test
aam
inc
sbb
cmp
pop
mov
cmp
mov
and
in
or
out
pusha
add
jecxz
cld
inc
test
in
js
mov
rclb
jle
orb
xorb
and
js
add
mov
lds
outsb
jo
inc
jmp
out
fnsave
in
pop
inc
jl
mov
inc
gs
mov
lret
in
mov
ja
ret
scas
loope
ret
inc
js
ret
xchg
cmp
xchg
test
rcrb
cmpb
sbb
in
dec
int
leave
mov
inc
push
movsl
shrl
outsl
sub
sub
or
pop
xor
adc
or
stc
lea
movsb
iret
mov
popa
shll
ja
sbb
jge
add
dec
add
push
adc
scas
div
add
into
cmp
int3
mov
movsl
sub
lods
lods
scas
xchg
jbe
mov
shrb
pop
popf
fdivrp
imul
inc
mov
mov
clc
ret
cmp
cmc
icebp
dec
xor
out
jo
push
into
and
or
leave
sub
mov
pushw
push
out
inc
push
mov
push
ljmp
adc
add
out
into
push
fisubl
mov
push
xchg
repnz
nop
dec
icebp
movsb
mov
xor
in
sub
add
int
push
sub
fisubl
insl
fidivrs
jmp
fdiv
sbb
cld
mov
iret
leave
cli
stos
inc
or
mov
mov
aaa
insl
cmp
cmc
pop
cmp
pop
shlb
out
mov
xchg
adc
pop
jg
sub
addb
rorl
mov
push
stos
add
jl
and
inc
pop
scas
gs
fstl
and
enter
xor
out
push
xor
fisubl
jns
xchg
out
icebp
mov
and
repz
mov
movsl
in
xor
into
mov
mov
and
arpl
orb
jo
dec
clc
test
sbb
mov
add
xchg
push
idivb
dec
mov
dec
adc
mov
test
mov
add
dec
rol
mov
push
and
sbb
inc
bound
xor
or
mov
pusha
shrl
test
jmp
test
sbb
fisubl
xchg
mov
fstpt
cmp
hlt
out
mov
mov
ror
add
addr16
int
xchg
jg
in
push
pop
mov
mov
call
mov
mov
push
add
jb
jno
xor
out
lcall
cli
iret
repnz
outsb
xchg
jne
pop
scas
or
aam
xchg
and
add
orb
and
das
adc
fprem
aas
movl
mov
lods
add
mov
push
int3
pop
mov
mov
mov
insb
ljmp
fistps
add
mov
jle
push
mov
inc
in
pop
repnz
lret
cmp
into
arpl
in
adc
adc
xor
xchg
fsts
bound
rolb
out
imul
aaa
add
sub
sbb
push
lea
loopne
fs
jnp
lret
aad
std
out
add
repnz
and
lods
push
sbb
mov
inc
jle
loopne
mov
pop
xchg
out
xor
cmc
rorb
lock
in
sbb
adc
leave
sub
pusha
xchg
and
sbb
and
lret
xchg
shll
mov
je
xchg
loopne
and
and
pop
out
sub
jge
jns
lock
ja
inc
into
lret
push
cmp
aad
cmp
pop
dec
xor
sub
adc
cmp
std
pop
jl
fidivrl
addb
cld
test
xchg
cmp
ja
mov
sbb
mov
xor
movsb
mov
nop
cmp
or
jmp
subb
cmpsl
lea
xor
adc
in
cmp
jg
jge
cli
pop
js
xchg
int
pop
sbb
lock
in
into
mov
imul
pop
mov
xor
mov
out
lock
jb
jbe
sahf
mov
or
adc
rcl
pushf
sbb
push
loope
notl
adc
fs
out
sbb
dec
or
pop
sahf
sub
dec
lock
sub
lock
sub
push
xor
leave
add
clc
mov
outsl
lret
divb
adc
movsb
sbb
add
cmpsb
inc
fistps
jmp
fbld
mov
pop
mov
cltd
mov
repnz
loop
mov
adc
mov
xorb
mov
pop
xlat
fiadds
mov
inc
inc
outsb
sbb
enter
jle
fistpl
jl
dec
sub
jle
cmp
outsl
test
popa
dec
xorl
cmp
sub
dec
mov
mov
xor
xchg
fisubrl
in
and
shl
xchg
popa
arpl
pop
sub
lret
xor
test
cmp
rorw
test
adc
outsl
mov
mov
sub
jo
pop
mov
nop
andb
addr16
push
jp
push
mull
outsb
fs
clc
roll
ss
cmp
dec
repnz
pop
js
into
mov
pop
subl
mov
inc
mov
cmp
cwtl
mov
pop
stos
jp
mov
lea
mov
stc
dec
add
adc
inc
test
insb
inc
out
imul
mov
mov
andl
lret
push
mov
dec
xor
push
mov
test
shl
push
clc
xor
std
movsl
xor
imul
pop
jae
es
mov
data16
sub
cmc
sbb
jb
xchg
pop
into
jne
mov
int3
cwtl
nop
sub
pop
pop
jmp
test
lds
add
fadd
decb
inc
cmc
sbb
sub
cmp
inc
jns
xor
pop
cmp
mov
jl
push
add
push
inc
adc
adc
enter
cmp
sbb
ljmp
sbb
pop
cwtl
mov
fnstenv
cmp
mov
cmp
add
adc
and
xor
xlat
cmpsb
mov
fnsave
lea
outsl
gs
enter
sub
out
out
mov
icebp
fwait
call
dec
fisttps
aaa
mov
int
push
cmp
neg
cmp
jmp
xchg
mov
ret
movsl
inc
ficoms
pop
pop
push
cwtl
inc
mov
xlat
cmpsl
cmp
call
jne
mov
lea
push
cli
add
outsb
arpl
adc
popa
test
imul
stos
fimull
cwtl
outsl
lock
mov
or
repz
jo
push
xchg
loopne
mov
fmul
mov
adc
xchg
adc
aas
nop
lods
inc
xchg
lods
lods
and
push
xchg
jb
jl
lahf
xchg
fdivr
test
xchg
fwait
lret
lock
mov
movsb
mov
xor
sub
out
or
add
jno
mov
push
adc
push
mov
ror
ret
test
add
xor
insb
adc
popf
or
iret
jmp
cmp
xchg
or
cli
in
adcb
adc
loopw
lods
pop
cmpsb
mov
pop
fdivs
xchg
aad
dec
fnstcw
mov
add
sub
out
test
or
movsl
xor
cmp
jecxz
mov
inc
and
das
lea
fbstp
ss
push
mov
adc
movsb
adc
aam
outsb
aam
mov
sbb
jne
imul
mov
scas
xchg
sub
xor
xor
push
or
push
and
cmp
out
push
gs
mov
call
sub
xchg
rorb
pop
adc
popf
pop
xchg
jg
jne
dec
jmp
fucomip
lock
das
jl
insl
daa
dec
jae
mov
adc
adc
xchg
push
test
mov
or
in
xchg
stos
cmpsl
aam
jbe
lea
cmp
sub
loopne
or
in
push
divps
jmp
std
outsl
jns
adc
idiv
arpl
adc
dec
jne
mov
or
fsubr
xor
scas
jno
xchg
jle
js
sar
inc
daa
test
pop
jmp
clc
mov
inc
sbb
jp
adc
or
xor
mov
push
mov
lcall
decb
inc
inc
repnz
imul
mov
lods
ds
lcall
call
push
cli
aas
subl
and
mov
bound
adc
xor
xor
and
sahf
test
push
fisttpll
or
mov
inc
mov
mov
out
subl
cld
fildll
lcall
push
push
and
push
jecxz
push
inc
shr
adc
in
xchg
push
sbb
dec
in
test
push
fisttpll
or
movsl
push
jge
mov
push
xchg
cmpsb
mov
data16
push
ret
int
rol
stos
clc
in
inc
jecxz
rol
cmp
mov
in
push
cmc
repz
stos
cmpsb
pop
lods
mov
fucomi
cmp
add
shrl
jmp
pop
cmpsb
xchg
stos
mov
pop
mov
inc
push
daa
ret
sbb
test
loop
push
jge
cltd
and
mov
mov
add
push
stos
or
movsb
mov
sbb
pop
add
out
or
scas
inc
push
cmp
and
lea
insl
mull
cmp
pop
inc
lcall
mov
xchg
mov
dec
dec
insb
shll
arpl
into
repnz
jge
dec
mov
xorb
pop
aam
lods
loop
hlt
sub
xchg
jne
bound
in
adc
shll
mov
cli
xor
int
daa
out
aam
cmp
dec
lods
fcmovu
repnz
pop
add
iret
in
lcall
push
fwait
xor
push
sahf
movsl
call
mov
in
adc
mov
aam
and
cwtl
xor
mov
sub
imul
cmp
inc
cmpl
or
push
mov
ret
in
nop
dec
fcoml
sbb
in
cmp
jo
jge
in
xchg
lds
sbb
sbb
movsl
inc
test
mov
pop
push
iret
pop
aaa
decb
test
rol
sub
shrb
loope
rclb
fdivrs
popf
jle
outsb
inc
jecxz,pn
add
mov
inc
fistps
popa
popa
adc
and
push
shll
dec
jno
je
mov
fisttps
adc
fisttps
out
pushl
rclb
and
in
scas
add
push
addr16
mov
cmpsl
push
push
jnp
xor
and
push
stos
lods
jl
stos
push
sub
inc
mov
test
hlt
test
inc
xor
ffreep
pop
hlt
inc
loopne
jnp
push
adc
mov
dec
jne
xchg
push
lods
sarb
jecxz
sarl
mov
xor
cmp
loope
jmp
arpl
test
adc
aam
std
dec
hlt
imul
xor
mov
popl
or
es
movsb
or
dec
int
inc
push
into
fstps
pop
mov
push
and
dec
mov
icebp
dec
jmp
xor
jno
bound
mov
in
xchg
cmpsl
inc
lods
scas
mov
jl
jne
sbb
out
stos
dec
repnz
subl
pop
in
loop
jo
sub
jp
fs
xor
push
es
mov
pop
mov
jnp
mov
push
sbb
xor
inc
les
mov
stc
daa
mov
jge
cmc
jle
cmp
test
cmp
ss
out
aas
push
cld
test
push
and
bound
sahf
jbe
mov
xor
pop
mov
cld
scas
ds
insl
pop
inc
imul
push
cmp
mov
inc
loope
mov
pusha
int
cmp
movl
push
out
shl
inc
add
stc
shl
lea
sub
stos
mov
movsl
mov
adc
adc
xor
fnop
cmp
pop
pop
inc
adcb
sbb
jmp
fiaddl
movsb
fsubs
mov
pop
in
cmp
adc
or
out
mov
in
rcl
mov
test
pusha
inc
in
inc
jp
cld
mov
xchg
jo
addb
adc
insb
adcb
in
lods
push
xor
cwtl
in
icebp
bound
inc
mov
inc
into
lahf
mov
xor
or
mov
mov
es
rcl
xor
or
and
out
cmpsl
rcll
adc
dec
dec
je
in
fwait
jnp
lahf
inc
cmp
js
shrb
and
out
pop
xchg
jno
and
cli
lret
std
daa
out
outsl
mov
pop
mov
addr16
mov
add
mov
sub
cltd
xor
mov
cmp
cwtl
dec
pop
dec
cmp
lods
jnp
pop
out
cmpsb
fadd
ret
lea
into
inc
fs
sbb
cmp
aam
or
pop
cmp
mov
xor
ret
stos
jg
and
movsb
cmp
pop
popf
test
aad
mov
mov
ss
sub
push
inc
or
in
mov
pop
jno
push
push
imul
je
dec
fs
cld
orb
xor
mov
or
in
xor
out
inc
sti
mov
xchg
cmovnp
push
insl
scas
sbb
movsl
inc
enter
cmp
inc
jg
sbb
or
adc
adc
push
push
pop
jnp
xchg
xchg
aas
aaa
mov
jne
test
popf
cs
iret
dec
dec
push
movsl
dec
or
ret
add
inc
das
js
bound
cmpsb
lds
lds
pop
inc
leave
cwtl
js
mov
stos
xor
adc
xchg
pop
movsb
shrb
dec
lea
push
adc
jmp
adc
fcmovb
lods
add
gs
stos
adc
mov
mov
mov
in
push
movsb
mov
popa
push
sbb
inc
cmp
mov
stos
std
pop
push
inc
add
cmp
xor
cmpsb
xchg
xchg
fs
sub
jl
shl
mov
stc
push
push
std
pop
mov
push
repnz
ficoml
and
sbbl
mov
cmp
hlt
ljmp
xchg
mov
ss
mov
ljmp
pminsw
mov
add
mov
adc
fimull
cmp
lret
scas
rclb
scas
fwait
paddsw
rorl
test
dec
sub
fimull
mov
sub
push
clc
or
adc
xchg
or
stc
int
ja
testb
rcrb
shr
shrb
shl
ds
ds
mov
xor
xchg
movsb
xor
shlb
push
cmp
jo
mov
lock
hlt
pop
std
jno
nop
test
ljmp
mov
sbb
dec
dec
push
xchg
lods
mov
shlb
or
outsl
outsl
enter
mov
dec
push
and
mov
out
jge
push
rcrb
ret
les
lods
scas
sub
mov
sbb
xor
lret
add
mov
push
pop
sahf
pop
loop
out
lods
mov
push
pop
jno
scas
sub
sub
pop
fdivl
sub
mov
lret
fwait
pop
jne
xor
and
inc
pop
sub
adc
mov
mov
mov
pop
insb
dec
syscall
push
hlt
fiadds
xchg
andb
lret
jge
mov
data16
adc
fnsave
pop
adc
call
arpl
mov
inc
fiaddl
mov
sub
mov
xchg
dec
ja
addb
jae
pop
ds
lret
sub
in
pop
xor
gs
mov
cmp
add
xor
sbb
mov
popa
mov
bound
shl
adc
mov
dec
pop
in
push
xchg
inc
pop
cli
in
daa
lea
ljmp
mov
inc
mov
sti
xor
in
ljmp
dec
sbb
add
jae
push
js
pusha
inc
aam
lret
cmp
lret
enter
fldenv
scas
push
xor
xor
sbb
rol
pusha
inc
sahf
lea
mov
fdivr
xchg
xor
mov
loop
add
mov
pop
loope
test
shll
mov
into
jge
test
in
mov
repnz
adc
push
clc
mov
fwait
stos
fwait
dec
shlb
and
repz
mov
cmp
repnz
jmp
in
xchg
sub
dec
pop
jg
adc
sub
loopne
adc
ror
lcall
lahf
jae
sbb
adc
fisubl
add
add
mov
fiaddl
mov
xchg
push
in
das
ret
sti
add
cli
sbb
stos
add
call
or
pop
hlt
push
inc
dec
lahf
mov
popa
sbb
dec
pop
arpl
cmpsl
inc
add
push
es
fs
cmp
lods
gs
clc
leave
push
push
mov
jb
inc
add
int3
pusha
mov
mov
and
sbb
test
test
ljmp
mov
aad
out
xor
xor
push
imul
iret
std
insl
inc
cmp
inc
jo
in
xorl
push
or
ficomps
dec
pop
test
dec
push
inc
aaa
sub
sahf
lahf
out
push
jl
les
jge
mov
int
clc
sbb
scas
addr16
arpl
xchg
test
decl
sub
inc
lds
mov
sub
test
jns
mov
xor
cmc
bound
test
sbb
lock
mov
mov
fstpl
sub
std
aaa
dec
and
or
fistpl
outsb
ss
xor
jns
enter
pop
lret
fnstcw
mov
shll
cmp
addr16
out
cmp
fsubrl
jle
aad
or
inc
mov
loop
mov
mov
inc
test
test
adc
mov
add
dec
addr16
sub
push
jle
add
jnp
sub
stos
adc
cmp
mov
xlat
mov
lret
mov
popa
dec
fildl
in
pop
movsb
and
push
rorl
in
mov
or
loope
mov
leave
mov
xchg
add
pop
loope
mov
pop
mov
out
add
jb
pop
sbb
push
sahf
jns
fstl
sub
hlt
inc
jge
lret
pop
add
enter
pop
rol
jne
das
mov
xchg
sbb
sub
mov
movb
jnp
mov
jle
imulb
mov
pop
push
xor
or
mov
inc
push
xchg
addr16
es
rcll
popa
aam
mov
call
popf
enter
mov
jp
cwtl
fldt
or
jmp
icebp
clc
pop
mov
shrb
or
cmpsl
xlat
subl
cwtl
xchg
pop
sbb
mov
jp
repz
arpl
add
jl
je
sar
andl
adc
mov
imul
addb
lea
ss
fwait
xchg
add
sti
cmp
in
jmp
aam
in
dec
fcomp
loope
mov
xor
lock
push
jns
scas
aad
lds
push
jle
out
js
shll
inc
mov
jecxz
mov
xor
adc
fisttpl
shll
xor
negl
dec
shll
push
scas
cs
addb
ret
mov
fsubrl
loopne
std
int3
jg
aas
mov
fimuls
xor
jne
push
cmp
push
sub
cld
daa
int3
leave
aaa
mov
jl
fadds
test
adcb
xchg
jmp
es
cmc
inc
mov
stos
repz
popa
int
jge
sti
sarb
addr16
mov
push
inc
repz
xchg
add
fsubrl
lcall
sbb
mov
stc
xor
mov
in
in
push
stos
adc
jns
inc
dec
adc
mov
push
jb
add
aam
cmpsb
rol
cli
jl
test
daa
aaa
ret
push
xchg
and
pop
inc
jl
rclb
rcrb
jp,pt
out
ds
jle
dec
mov
je
mov
xchg
pop
or
xor
scas
xor
out
outsl
ds
dec
sub
inc
adc
lret
adc
jmp
lret
inc
xchg
fwait
imul
pusha
or
out
xchg
mov
mov
adc
stc
rcll
orl
pop
stc
mov
es
std
jae
out
jbe
adc
lea
scas
push
imul
sahf
pop
xchg
push
inc
jo
sub
cmp
aas
pop
rcl
mov
and
or
std
adc
push
push
ret
jns
das
mov
push
sub
sub
lods
inc
cld
dec
sbb
popa
fistl
loopne
xor
adc
in
mov
mov
cmp
jns
hlt
jb
loopne
sub
xor
jge
jecxz
add
push
fbstp
mov
pop
ja
fisubl
add
sahf
push
scas
mov
popa
dec
punpcklwd
lret
hlt
sub
bound
xchg
imul
test
ret
adc
arpl
inc
iret
into
xchg
test
add
popa
out
push
jnp
out
or
inc
arpl
mov
adc
rcrl
sbb
mull
enter
or
dec
popf
jnp
fmull
cltd
iret
push
cmp
movb
push
imul
jo
mov
aad
lods
roll
lret
sbb
out
dec
sub
adc
movsb
sub
icebp
xchg
gs
mov
notb
push
cmp
cmp
and
and
enter
sahf
mov
je
bound
add
sub
mov
jns
das
bound
test
addr16
repz
aad
jmp
cmp
lahf
mov
popa
pop
xor
fs
int3
fistpll
pop
jmp
push
mov
adc
mov
and
mov
mov
adc
loopne
jmp
in
ja
mov
shll
mov
sub
test
pop
mov
in
out
shlb
cs
cmp
stc
fldenv
fisubl
mov
cmpsb
fldl
gs
mov
adc
mov
inc
pop
scas
popa
inc
shrl
and
push
inc
or
cs
dec
inc
scas
popf
xor
mov
lods
dec
roll
popf
dec
dec
dec
push
cmp
mov
xchg
push
cs
cmp
pop
adc
and
rclb
sbb
xor
sub
pop
jle
jge
test
inc
push
clc
outsl
lods
jg
lret
adc
rorb
mov
xor
daa
inc
sbb
add
xor
mov
cld
imul
mov
adc
div
imul
sbb
mov
mov
stc
rcrl
movsb
test
jmp
hlt
mov
and
jno
mov
shr
repnz
sbb
sub
jle
pop
iret
xchg
push
aad
aas
push
hlt
mov
pop
les
or
loopne
adc
pop
enter
or
cmc
lahf
aaa
jg
lods
icebp
jg
jp
xlat
sti
fwait
cwtl
rcll
sub
addr16
mov
mov
mov
icebp
ret
fs
push
mull
pop
dec
xlat
into
add
fisubs
push
jle
jbe
lea
add
sbb
push
out
ds
sub
cmp
sbb
mov
pushf
je
xchg
inc
fisubs
movsb
std
cmp
mov
xor
in
inc
xchg
fistl
push
in
rolb
mov
addl
mov
push
xor
and
mov
pop
sahf
pop
imul
fnstenv
lea
ret
data16
cmp
fcoml
jp
add
mov
jno
jmp
mov
cmpsb
in
cmp
leave
fld
jecxz
xchg
outsl
adc
jbe
mov
hlt
xchg
std
push
fwait
cmp
mov
std
test
pop
jmp
push
setbe
fcomip
jecxz
jno
xor
jne
jbe
clc
dec
xor
jo
test
ret
es
enter
mov
mov
xchg
mov
out
popa
js
ds
std
dec
cmp
je
jb
jo
cmp
xor
or
push
mov
sbb
and
notl
stc
push
sub
test
das
stos
orb
fst
rolb
jge
sub
notb
adc
sbb
arpl
push
aad
jecxz
aas
mov
iret
sub
sub
lock
or
xchg
popf
push
pushf
add
mov
gs
pop
xchg
fmulp
jbe
repnz
and
sahf
mov
in
cli
pop
hlt
imul
icebp
jg
es
jne
xor
hlt
adc
push
cmp
imul
nop
roll
mov
cmpsb
adc
std
lret
repnz
inc
mov
and
adc
dec
xor
adc
test
cmp
mov
fcmovu
xor
inc
cmp
ja
outsl
inc
dec
jno
repz
cmp
add
popf
adc
shl
pop
adc
cmc
scas
fnsave
push
mov
orb
xor
mov
adc
mov
or
cmp
push
add
mov
test
pop
stos
dec
je
mov
div
in
std
push
pusha
push
mov
mov
test
fnstenv
mov
in
imul
cmc
xchg
arpl
iret
ret
les
mov
inc
cmp
mov
or
sarl
ret
sbb
pop
mov
pusha
addl
adc
daa
das
inc
into
sbb
dec
dec
test
inc
add
aaa
fldenv
std
pop
xlat
outsl
decl
inc
outsl
loopne
test
popf
loopne
test
loop
push
jmp
mov
jl
xchg
clc
sbb
fcmovb
cwtl
cs
mov
loop
lods
sub
sahf
mov
jl
subb
lock
ja
cs
mov
inc
pop
dec
movsl
stos
mov
mov
rolb
or
add
pop
and
mov
call
sub
fistps
cli
loopne
jb
push
bound
cmpsl
sub
nop
mov
mov
insb
es
mov
sbb
std
or
das
lods
arpl
sub
bound
lahf
dec
cmp
cs
pop
jg
dec
dec
fistpll
fwait
push
stos
outsl
cmp
jnp
stos
xchg
cmpsl
out
lea
push
mov
das
or
and
cmc
pop
rcll
outsl
jno
sbb
lcall
dec
pusha
lock
jb
add
popa
adc
xchg
mov
out
or
scas
xor
sub
shl
adc
stos
inc
movsl
ljmp
inc
insl
push
jns
cmpsb
sbb
cmp
push
xchg
xor
cs
dec
addr16
data16
sarb
jg
pop
jge
inc
out
icebp
pop
aas
push
inc
cmp
push
nop
repz
cmp
mov
mov
mov
rcrb
adc
clc
jmp
mov
aam
daa
mov
add
rol
arpl
test
sbb
adc
xchg
and
outsl
es
mov
repnz
mov
lcall
shr
iret
aas
mov
cmpsb
or
xchg
cmc
test
push
ja
shrb
popf
pop
xor
inc
pop
pop
stos
icebp
clc
xor
imul
pop
xor
xor
ret
inc
mov
or
je
add
dec
inc
stc
andl
pop
in
sbb
adc
jmp
cmpsb
pop
daa
ljmp
insb
adc
sub
or
push
jae
pop
hlt
jbe
xor
dec
scas
mov
push
sbb
push
out
adcl
sub
mov
js
filds
dec
sub
jb
popa
sub
into
lds
daa
daa
push
shufps
xchg
into
fs
dec
cmp
inc
loop
nop
or
iret
xchg
and
add
mov
xchg
fsqrt
fsubrl
jae
mov
xchg
push
mov
push
xchg
or
xchg
cltd
jp
push
dec
fsts
pop
aam
jb
push
add
adc
lds
and
in
dec
inc
cmpsb
jg
mov
cmpsb
and
cmpl
stos
sbbb
ljmp
lcall
adc
ds
jecxz
arpl
push
rorl
pop
mov
sub
fldcw
jb
ja
je
cmp
adc
mov
jo
outsb
shlb
jbe
push
lcall
cltd
filds
and
decb
rorb
ret
popf
xor
xchg
mov
pop
mov
subl
repz
mov
fadd
add
mov
jg
stos
inc
nop
adc
pop
aam
fnclex
pushl
xor
mov
lds
bound
scas
pop
mov
cli
push
insb
dec
cmp
push
cmp
cmpsb
mov
mov
stos
pop
sub
push
push
inc
into
inc
cmp
or
mov
push
je
add
pusha
jbe
inc
mov
insb
mov
xor
cmp
pop
mov
push
loop
cmpsl
lahf
popf
push
scas
andb
xchg
dec
fstps
js
dec
xor
cmp
data16
aam
pushf
jg,pt
out
fisttps
sub
push
pop
test
xchg
jp
and
repz
mov
push
ficoms
jp
sub
jnp
addr16
or
in
xchg
aad
xor
xlat
xchg
ret
hlt
mov
loope
insb
add
mov
pop
sahf
in
fs
inc
leave
pop
lret
mov
dec
insl
cmc
adc
fptan
add
hlt
fcompl
jmp
sub
and
int3
jl
adc
rorl
push
pop
push
aam
pop
jmp
cmp
test
addr16
mov
pushf
fldt
dec
mov
dec
mov
cmp
test
mov
sar
data16
out
lods
divb
mov
jno
pop
fidivl
pop
cltd
mov
xor
movsl
xor
cld
test
push
ja
stc
jbe
out
mov
jo
inc
fdivp
mov
testl
in
add
jg
inc
push
and
jg
sahf
clc
fwait
mov
dec
xchg
pop
adc
add
outsl
mov
xor
adc
xchg
cmp
cmp
sbb
call
sbb
icebp
fiaddl
mov
inc
xchg
mov
jecxz
cmp
cmp
mov
dec
std
add
adc
lret
loope
out
int3
sahf
out
idivl
fidivrs
mov
mov
addb
jl
adc
out
hlt
push
insb
into
xlat
les
push
roll
test
dec
pop
nop
imulb
sarl
jno
ja
xchg
cmc
pop
icebp
push
ljmp
ret
mov
lea
xchg
sub
les
sbb
pop
stc
stos
test
out
push
sub
lods
lret
hlt
pop
sbb
xchg
push
mov
or
jno
movsb
fldcw
int
cli
inc
stos
ja
sarl
jns
jmp
stos
mov
lds
clc
nop
jae
mov
or
mov
shrl
sub
dec
inc
and
lahf
pop
out
jne
mov
bnd
out
xchg
jno
bound
dec
xorl
sub
scas
nop
mov
out
mov
stos
pop
jb
sub
cltd
sbb
loop
ret
xor
mov
nop
push
pop
es
imul
xlat
cltd
cltd
dec
test
jnp
push
jecxz
sbb
fisubs
and
test
push
syscall
sub
stos
cmpsb
mov
cmp
faddl
popa
jg
mov
out
sahf
xchg
in
mov
test
mov
stc
mov
lahf
shlb
jnp
inc
lds
lea
inc
popf
inc
mov
shr
mov
pop
arpl
and
xchg
fnsave
je
aam
xchg
movsl
fxam
or
lock
cwtl
xchg
clc
jl
mov
jbe
push
gs
adc
fcoms
xchg
inc
mov
jg
andl
mov
push
stos
int3
in
lahf
mov
add
xor
imul
jbe
stos
dec
and
insl
mov
mov
mov
xchg
aam
outsb
lcall
insb
xchg
cmp
bound
xchg
lea
push
inc
iretw
inc
aam
cmpsl
sub
mov
bound
in
pop
in
gs
ror
in
push
imul
cmpsl
push
mov
jge
lock
mov
iret
or
push
sub
stos
sbb
mov
xchg
fs
data16
xor
andb
mov
cmp
lcall
cmpsl
icebp
arpl
outsb
arpl
subb
xor
stos
fbstp
rorb
sub
pusha
aas
mov
popa
test
and
int3
jo
jae
fisubs
aad
fmull
pop
fs
push
test
mov
insb
fsubs
jae
ret
pop
push
mov
out
int3
push
mov
sbb
aam
push
jbe
jo
dec
scas
fadd
test
xchg
std
push
iret
outsb
iret
lret
pop
dec
cld
sti
int
pusha
repnz
jg
nop
out
mov
test
pop
mov
xchg
fdivp
add
dec
pop
lock
imul
test
popa
sub
mov
into
adc
or
clts
sahf
jbe
and
sub
lods
xchg
dec
call
std
pop
push
call
jnp
ds
dec
sbb
popa
in
or
mov
pop
repnz
cmp
xchg
mov
fs
repz
push
outsl
or
repz
cltd
push
or
mov
sbb
sub
xor
mov
fdivrp
inc
lahf
xor
addr16
dec
fildl
push
hlt
test
adc
xlat
divb
fiaddl
ljmp
and
dec
or
pop
rcrb
icebp
or
outsl
sbb
int
push
push
and
push
pusha
rorb
imul
insb
push
push
xchg
sub
stos
cmovb
outsb
jb
addb
mov
into
insb
stos
jp
out
std
test
mov
dec
mov
aas
pop
mov
lret
xchg
and
jecxz
ljmp
xchg
mov
xchg
mov
push
or
andl
adcb
dec
notb
sub
xchg
lcall
icebp
push
push
scas
cmp
cmc
sbb
add
fwait
sbb
dec
mov
xor
movsb
cmp
ja
cmp
das
mov
cmp
adc
mov
xchg
jmp
pop
sahf
outsl
cmpsb
mov
add
mov
sub
sub
lods
sahf
cmp
aas
ja
ret
push
les
cmp
call
cmp
pextrw
push
mov
test
jae
xchg
dec
sub
sub
mov
leave
dec
stos
std
sbb
das
jp
out
push
lcall
scas
and
mov
mov
lret
inc
lret
roll
loopne
mov
call
jp
repnz
movsl
es
inc
inc
stos
inc
dec
mov
movsl
dec
push
cmp
scas
js
out
das
mov
movsb
dec
addr16
frstor
in
out
in
cmpl
sub
imul
dec
es
push
ss
ficomps
dec
add
sub
data16
jb
jl
or
in
shll
push
mov
aad
sub
int
ds
shlb
out
cmp
int3
rol
sbb
pop
and
pop
adcb
mov
in
cltd
push
add
push
mov
aam
ret
or
fldl
xchg
clc
movsb
pop
add
dec
push
push
ret
mov
std
push
jge
cs
nop
stos
fbstp
mov
pop
inc
movsb
push
adc
xor
dec
sbb
pop
ds
pop
loopne
sub
jecxz
test
insb
das
push
push
pop
out
lcall
xchg
std
or
pop
xchg
aaa
shll
pop
pop
lcall
jae
cmpsl
inc
sbb
mov
dec
add
inc
outsl
inc
daa
in
mov
add
lcall
push
loope
loope
lods
mov
fldenv
mov
pop
push
lock
xchg
inc
test
jnp
mov
pop
insl
into
jb,pn
push
movl
xchg
xchg
imul
push
out
sbbl
stos
aaa
or
push
cmc
shrl
jmp
addl
xchg
push
ja
ret
setp
cmpsb
adc
popf
fimull
in
lock
xchg
pusha
cli
into
push
fcomps
loopne
mov
jp
mov
add
jns
sub
data16
fidivl
mov
xor
push
cli
mov
jge
pop
push
cli
cmpsb
int
push
push
jecxz
mov
repnz
dec
xchg
mov
push
xchg
stos
fcompl
ret
xor
pop
cmpsl
push
xchg
dec
mov
int
in
add
mov
sbb
cmp
ror
sahf
repz
jecxz
repz
fs
fnstsw
clc
sub
icebp
dec
out
adc
add
rcrl
mov
xlat
loop
push
jnp
or
loopne
push
mov
dec
andb
inc
dec
pop
hlt
lahf
outsl
pop
adc
mov
dec
mov
arpl
xor
lock
addr16
mov
pusha
ret
outsl
push
or
push
jg
lahf
dec
mov
movsl
fisubrs
insb
dec
cmc
aad
popf
sub
add
and
xchg
pusha
and
insl
jbe
jns
pop
in
mov
test
mov
or
fcompl
mov
cmpsb
nop
xor
dec
leave
inc
push
mov
xor
leave
and
ret
mov
mov
mov
or
push
add
mov
inc
mov
pop
clc
inc
js
jnp
frstor
dec
pushf
in
or
adc
dec
fwait
sub
add
mov
jb
xchg
mov
mov
xchg
bound
fsubr
stc
xor
mov
or
pop
inc
movl
sti
pushf
outsb
stos
dec
into
jae
pop
pop
es
fs
mov
jge
xchg
xchg
lea
adc
cmp
adc
fwait
inc
sub
add
jl
lea
fildll
enter
lahf
dec
pop
orps
xchg
ss
push
aam
sti
insb
push
in
loope
mov
mov
sbb
and
pop
aam
add
jne
data16
out
add
sarl
ja
jmp
add
pop
clc
nop
in
xchg
xchg
in
mov
mov
pop
dec
inc
jecxz
pop
and
lea
test
fs
fs
hlt
js
jp
pop
mov
orb
mov
popa
pop
gs
insl
mov
mov
mov
rcrl
out
xchg
push
push
ret
mov
inc
nop
cmpsl
mov
popl
sub
mov
lea
stos
push
or
inc
lods
sbb
cmp
imul
bound
imul
adc
push
repz
or
or
mov
sub
lcall
push
jg
outsb
sub
mov
loopne
sub
dec
subb
pop
or
movsl
mov
jmp
push
push
pop
test
scas
hlt
sub
mov
sub
or
sub
xchg
and
or
sbb
pop
xchg
fnstcw
filds
sbb
je
fcomps
insl
enter
inc
xor
out
sub
cli
fsts
imul
fs
cmpsb
jno
push
hlt
js
jno
pop
arpl
mov
cmp
or
pop
pop
popa
lods
cmp
scas
test
pop
sbb
adcl
lcall
push
xchg
jne
jg
sbb
jb
mov
lahf
adc
xlat
mov
insb
imull
xlat
lods
cmp
pop
xor
and
sub
adc
cmp
pushl
add
cmp
ja
xchg
rclb
inc
jle
addr16
push
repnz
xchg
mov
js
or
xchg
movsl
xchg
inc
data16
xor
jmp
test
jns
and
daa
mov
imul
sti
pop
cmpsb
adcl
xor
sub
mov
sub
and
dec
aam
into
cmp
push
xchg
rcrb
hlt
fsubrs
sub
movsb
push
lock
add
cmp
pop
and
jno
loop
outsl
and
add
ja
cmp
idivl
jp
mov
lea
insb
adcl
mov
in
xorb
in
xchg
dec
xor
xor
pop
dec
mov
jb
adc
aas
push
xlat
test
push
jge
inc
sub
push
rcll
out
test
cwtl
lret
or
inc
stc
enter
xchg
repz
mov
dec
add
xchg
imul
test
jp
xchg
popa
test
fwait
std
sub
mov
pop
dec
je
xchg
mov
insl
mov
pop
sub
fnstenv
loopne
clc
daa
fcmovne
mov
pop
popa
pop
sbb
stos
mov
test
xor
and
test
lods
cmp
mov
lods
pop
ret
sub
les
xchg
jle
imul
xchg
das
lahf
or
incl
imul
xlat
hlt
test
shlb
inc
stc
insb
jge
inc
lods
push
cmp
adc
jle
test
shll
int3
mov
je
pop
add
xor
aam
and
pop
and
mov
push
jno
xor
bound
xor
jge
push
inc
xor
jg
adc
cmp
sbb
loopne
dec
loopne
jnp
add
xor
rcrl
mov
mov
cmp
dec
gs
sub
xchg
inc
orl
pusha
icebp
cmp
cmp
jle
push
fmuls
add
or
jbe
sub
lds
or
inc
shll
fmull
mov
not
mov
aaa
cmp
xchg
mov
pop
or
xchg
int3
dec
mov
fincstp
push
push
into
fs
lock
ja
dec
ret
in
sbb
loope
movb
pop
add
or
into
cmp
push
cmp
imul
jmp
mov
xchg
dec
add
or
outsl
mov
pop
pop
cmp
mov
sbb
sbb
js
cmp
xlat
push
imul
in
movsl
adc
cwtl
not
push
or
jb
adc
mov
ret
push
negw
cmp
call
mov
insl
lahf
test
mov
xchg
push
push
sbb
data16
leave
imull
sbb
sbb
cld
push
add
cs
sub
adc
notb
repnz
mul
mov
mov
mov
or
mov
outsb
fisttps
popa
and
in
rclb
pop
adc
mov
push
add
inc
out
adc
ficoms
test
xabort
or
cmp
xor
xlat
mov
repnz
lock
jle
push
in
test
xchg
mov
das
cli
sub
adc
push
pop
aad
scas
cmp
testb
call
pop
mov
xchg
jae
popa
cli
sbb
push
or
pop
test
inc
mov
and
add
and
adc
jp
xor
xlat
dec
cmp
in
cwtl
outsb
loope
test
pusha
cmp
data16
mov
jmp
xchg
in
std
sahf
cld
ss
sub
pop
and
sub
adc
mov
dec
sbb
in
xrelease
mov
mov
ret
idivb
xchg
stos
adc
dec
loopne
notl
out
push
xchg
cmp
out
pop
int3
pusha
ss
scas
add
insb
pop
jecxz
mov
mov
mov
sub
push
mov
popf
sbb
cmpsl
mov
xor
push
loopne
shrl
inc
cmp
fs
ret
outsb
add
stos
ljmp
pop
push
xchg
in
cwtl
xor
lea
jge
xor
dec
cld
xlat
ljmp
jge
or
push
das
popf
sbb
and
mov
xchg
xchg
and
fidivrs
inc
mov
push
xlat
pop
test
jp
ljmp
lret
cmc
cwtl
fucom
cltd
mov
in
jle
xchg
inc
xor
sub
dec
jne
dec
test
dec
std
xchg
sbb
push
addr16
idivl
filds
repnz
hlt
mov
nop
rcll
enter
jge
cltd
mov
fstl
cmpsl
jno
mov
loopne
gs
addl
pop
scas
and
jge
test
jp
sti
rolb
aam
sti
cmp
mov
outsl
stc
daa
sti
sti
mov
xchg
xchg
mov
pushf
or
insl
fstpt
lret
sub
inc
xchg
jle
jmp
sbb
cmp
push
xchg
sbb
adc
pop
scas
mov
dec
mov
adc
lods
nop
or
fimull
outsb
xchg
fs
xlat
mov
pop
das
mov
imul
sub
iret
sub
and
jns
xchg
jge
es
pop
push
addr16
sbb
stos
iret
in
ss
pop
lds
out
lea
fs
and
xor
push
cmp
jae
movsb
fildll
test
in
je
push
and
stc
dec
jo
ss
test
or
adc
pop
mov
cltd
aam
pop
fsubs
test
mov
pop
inc
inc
push
xor
call
dec
bnd
sbb
incl
test
mov
test
mov
das
jo
push
cmp
ja
or
mov
inc
insl
push
push
pop
movsb
push
dec
mov
test
and
outsl
jb
lcall
lock
dec
arpl
loop
jl
jb,pn
lret
mov
clc
lcall
sarl
cmp
sub
insl
ret
lret
mov
incl
or
sub
push
fsubl
insl
pop
push
ror
adc
xor
lds
nop
loope
sub
aad
mov
push
xchg
jno
subb
lock
js
add
enter
arpl
inc
xchg
cmpsb
pop
int3
jnp
sbb
cli
and
fwait
add
xor
dec
xchg
xlat
fnstenv
push
addr16
movsb
pop
jne
imul
push
std
mov
js
sbb
lods
adc
inc
lcall
popf
pop
jge
stos
clc
nop
push
push
stc
sub
sbb
lret
inc
daa
in
jle
sub
jnp
and
loopne
scas
fists
or
xor
in
mov
dec
arpl
fsubrs
test
push
xlat
cwtl
mov
mov
push
sarl
or
lahf
insb
sbb
das
stos
push
xor
inc
movsl
test
add
push
in
loopne
xchg
cmpsb
jmp
adc
ds
cmp
jo
xchg
test
lds
syscall
rcll
adc
jle
bound
jmp
xchg
aam
rclb
mov
pop
push
xchg
mov
mov
mov
xchg
addr16
iret
cmp
xlat
sub
dec
ds
adc
ljmp
push
mov
pop
jnp
jge
ja
loop
xor
mov
test
das
es
sbb
call
and
jnp
dec
clc
mov
inc
addr16
sbb
test
inc
sbb
and
add
cmp
cmp
mov
inc
movsl
sarb
lds
or
aas
imul
mov
js
mov
mov
pusha
xchg
mov
mov
pusha
lcall
test
ss
daa
cmp
mov
push
ljmp
shrb
rcrl
push
pusha
aas
mov
push
fcmovu
call
testl
push
andl
and
xor
push
adc
jl
popa
iret
sub
lahf
dec
mov
jle
sbb
push
adc
mov
mov
enter
jmp
ljmp
in
pop
adc
mov
mov
jmp
mov
int3
add
in
rep
push
or
inc
or
push
mov
stos
and
imul
into
xchg
dec
popf
adc
jne
cmp
dec
jmp
sahf
stc
or
push
cmp
ds
shll
push
mov
jbe
push
or
add
lds
xchg
test
fwait
and
ja
roll
jb
and
pop
lret
loope
xchg
stos
pop
adc
xchg
insb
bound
fadds
jae
add
pop
mov
cmp
inc
lock
cwtl
lock
push
adc
mov
dec
out
adc
dec
sti
insl
out
ja
push
add
std
inc
rcll
popf
inc
clc
out
andl
and
jb
xor
inc
fisttps
push
dec
dec
xchg
or
mov
repnz
stos
push
mov
dec
out
mov
xor
outsl
xchg
add
bound
std
fldt
xor
inc
lret
addr16
repnz
repnz
pop
push
sbb
xchg
xchg
and
insl
lds
pop
mov
fwait
jecxz
mov
lahf
test
push
pushf
ret
push
ss
lcall
mov
add
test
sub
movsl
popf
popf
ljmp
arpl
mov
test
push
sti
mov
push
cli
stc
mov
jecxz
repnz
or
fnsave
loop
fildll
out
push
outsl
xchg
and
dec
loopne
adc
mov
sub
jle
pop
clc
shr
in
sbb
mov
xchg
pop
push
inc
mov
cmp
cmp
cli
fildl
das
pop
inc
aas
mov
xor
dec
add
scas
pop
add
imul
sub
push
pop
js
lret
push
sbb
idivb
movsl
hlt
bound
movsb
andl
mov
xor
xchg
cmp
aaa
test
push
push
fsubrs
dec
fisubs
fbld
xor
mov
xor
insb
ja
and
insb
gs
test
mov
mov
adc
hlt
adc
mov
push
aas
or
jl
add
lret
mov
push
fistl
les
mov
xchg
lods
gs
test
or
stos
lcall
call
cmpl
cmp
push
cmp
ds
lcall
pop
xchg
or
push
sbb
lret
fisubl
ds
cld
jbe
mov
or
cli
sbbl
call
sbb
add
jmp
inc
or
hlt
aas
aaa
insl
dec
inc
int3
lahf
mov
scas
and
inc
sub
hlt
pop
xlat
mov
push
and
pop
test
icebp
or
cmp
mov
push
adc
lcall
mov
push
shll
mov
sub
or
cmpsl
jns
sub
subb
mov
lahf
shlb
cs
aad
mov
dec
stc
aas
cmpsb
nop
xor
lret
xchg
cmp
mov
cmc
lcall
dec
inc
pop
sbb
or
mov
jl
imul
xchg
scas
jbe
jb
mov
sbbl
add
mov
in
cmp
xorl
mov
jne
cmpsb
lret
push
das
mov
push
and
xchg
divb
je
into
jmp
outsb
adc
dec
lods
and
sub
push
cltd
push
xchg
and
pop
adc
jns
movsl
and
xchg
jmp
sbb
cltd
cmpsl
add
dec
ja
push
in
stos
inc
jecxz
or
cs
loop
and
cmp
je
and
imull
pop
mov
dec
cmpsl
sub
push
test
mov
lods
xor
push
jg
sbb
pop
inc
push
add
sub
mov
sbb
and
outsb
adc
cmpsb
and
cmpsl
daa
push
pop
mov
mov
inc
das
divb
adc
push
mov
lock
jne
je
add
sahf
fwait
lods
lcall
jbe
icebp
push
push
pop
aaa
or
ret
jne
jnp
insb
out
into
mov
dec
stc
mov
sarb
mov
push
pop
or
lds
cmp
mov
jns
aaa
xchg
dec
add
gs
lcall
repz
xchg
xchg
add
jge
adc
lea
enter
arpl
adc
sbb
cmp
xchg
stos
sub
movsl
or
xchg
fcmovnu
add
call
rorb
sub
sti
dec
mov
dec
xchg
jle
sub
gs
and
xchg
push
call
fiaddl
adc
addr16
pop
inc
jge
cmp
pop
jae
sbb
scas
arpl
stc
dec
arpl
adc
cmp
mov
aaa
aad
decb
jge
adc
inc
or
push
insw
outsb
aas
push
adc
popa
jle
enter
mov
imul
test
xor
mov
sub
test
les
aam
sbb
or
cmp
mov
push
jg
in
imul
or
dec
sub
jnp
and
cmpsl
inc
stos
outsb
aad
sub
cmpsb
test
movsl
mov
push
push
add
mov
jge
dec
rolb
test
fisubs
testb
push
sub
add
gs
dec
xor
push
sbb
inc
aas
imul
mov
fs
mov
pop
mov
dec
cmc
push
es
pop
dec
or
push
mov
jno
or
push
out
ss
movsb
sub
movsl
dec
mov
pop
imull
ffreep
mov
push
das
insl
shlb
push
sbb
cmpsl
int3
pop
iret
icebp
xor
pop
xchg
mov
out
pop
mov
adc
jbe
punpcklwd
sub
mov
mov
mov
jl,pn
cld
add
jnp
stc
popf
adc
aam
mov
jmp
push
sub
test
fbld
push
shrb
out
inc
lods
adc
mov
fwait
push
jb
les
dec
adcl
cld
jo
dec
inc
pop
dec
ljmp
popa
add
adc
cli
stos
ret
or
das
cli
sbb
xchg
ret
mov
insb
or
cmp
clc
inc
xor
push
es
in
sbb
or
push
sbb
test
xchg
jb
push
ljmp
push
or
mov
xchg
aaa
movsb
stc
mov
in
enter
xchg
pop
cmp
aam
pop
lcall
lea
and
outsb
xor
push
outsl
mov
ds
mov
jbe
add
repz
add
sub
pop
out
outsl
jecxz
lods
sar
fisttps
ret
adc
jmp
cli
pop
mov
outsl
movsb
mov
add
out
movsb
movsl
stos
out
std
andb
and
pushf
loope
jl
sbb
arpl
mov
repz
cmc
movsl
lock
aad
sti
test
mov
push
les
cli
mov
fldl
hlt
js
stos
cmc
lret
pushf
push
mov
ja
ret
divb
and
pop
add
jl
cmp
mov
test
add
cmpsb
fs
push
sub
cmc
repnz
cmp
add
jne
aas
sub
mov
sbb
dec
adc
lret
pop
je
ds
mov
push
push
mov
test
mov
das
and
int3
aas
pop
mov
outsb
xorb
lods
shlb
stos
mov
push
cmp
dec
xor
cltd
pop
ret
gs
ficompl
int
sbb
and
fcmovnu
pop
les
lret
jle
mov
cmp
add
mov
pop
iret
mov
fistpll
loop
rorb
mov
jge
lret
int3
push
adc
into
or
jecxz
adc
mov
pop
jge
jno
mov
xor
lods
jmp
fs
xor
mov
adc
or
daa
cwtl
mov
dec
stos
fimuls
dec
or
pop
iret
sahf
cwtl
nop
dec
push
dec
xorb
fucom
mov
lret
adc
xchg
sbb
inc
and
jns
cmp
ret
lcall
xor
sub
mov
push
jge
enter
sub
js
daa
inc
loopne
mov
lods
push
sub
repz
mov
inc
popa
pop
test
inc
divb
jmp
sahf
jmp
mov
xchg
movsb
xchg
sahf
cmp
mov
mov
mov
cmc
andl
stc
fwait
sub
adc
mov
scas
sbb
push
movl
fwait
cmp
push
pop
push
aad
sbb
pushf
mov
cmc
jge
addr16
ficompl
mov
loopne
ljmp
mov
push
mov
inc
cmpb
mov
mov
cmp
jle
gs
shrb
fwait
jle
cld
or
je
cmovge
pop
negb
inc
popf
gs
push
add
addr16
xchg
xor
fcmovu
sub
shrb
cmp
dec
adc
cmpsb
pop
adc
stc
int
aad
adc
popf
sbb
inc
dec
stos
or
mov
jmp
adc
sar
push
data16
mov
orl
popa
ljmp
insl
jmp
cmp
xchg
arpl
mov
inc
xlat
or
lea
sbb
sbb
aad
xor
sahf
jl
sub
fs
and
push
lods
test
jmp
jge
andl
inc
into
mov
dec
fistps
cmp
aam
xor
xchg
pop
insl
iret
add
cmp
ss
fstp
jmp
mov
pop
negl
pop
cmp
dec
xchg
arpl
xlat
lret
orl
adc
cltd
push
bound
in
push
in
pop
xchg
dec
stos
xlat
ret
mov
mov
xor
sbb
nop
xor
dec
inc
or
daa
adc
xchg
shlb
mov
inc
xchg
sub
cmp
mov
mov
or
popf
pusha
or
insb
stos
adc
insl
adc
popf
in
pop
int3
pop
fcmovne
add
shl
mov
or
mov
mov
jbe
push
mov
outsl
dec
dec
cmp
inc
into
add
mov
cld
sbb
mov
repnz
inc
sbb
das
fidivrs
inc
jb
insb
sub
adc
sub
lret
or
fsubrp
js
gs
mov
insb
sbbl
lret
inc
popa
scas
fcompl
push
mov
inc
imul
jp
aaa
push
and
stc
pop
cli
sub
mov
add
sub
xchg
adc
hlt
add
adc
das
inc
push
xchg
push
lock
push
mov
mov
rcll
cmpb
lret
std
out
mov
call
enter
mov
cltd
sbb
xchg
loope
in
mov
cmp
lahf
jne
ret
or
insb
leave
add
xor
push
lods
sti
push
pop
cmp
orl
xor
movsl
fimull
jb
addr16
xor
ret
and
fwait
aas
lahf
pusha
xchg
mov
cmpsl
jno
int3
cli
rcrl
pop
scas
adcl
push
mov
mov
adc
mov
push
xchg
fstl
icebp
pushf
fidivrl
add
insb
add
cmp
or
lahf
mov
mov
lea
shlb
lret
sub
dec
cmpsl
mov
add
jne
scas
jae
cltd
fildll
pop
sbb
outsl
or
gs
xor
sahf
in
icebp
xor
out
push
aas
ret
out
fucomp
pop
pop
aad
push
mov
adc
jl
in
adc
ret
jb
jae
add
adc
mov
add
sbbl
out
aaa
dec
arpl
xor
aam
enter
cmpb
mov
push
and
insb
inc
fstpt
ljmp
aas
lods
push
mov
stos
movsl
xor
ss
mov
push
bnd
jnp
mov
jno
inc
stos
mov
insl
xchg
mov
cltd
inc
arpl
mov
pop
enter
pop
pop
pop
lock
outsb
sar
cmpsb
hlt
hlt
insb
mov
xchg
xor
xchg
mov
sti
aad
shlb
ficoml
push
sub
push
push
xchg
or
adc
bnd
fistps
roll
pop
jecxz
xor
jae
push
repnz
clc
test
jl
push
std
push
int
fisubs
mov
repz
daa
ljmp
sub
add
insb
std
out
les
jecxz
inc
and
addl
stc
in
sbb
out
mov
aas
pop
dec
and
ret
push
push
inc
xlat
rorb
fimull
cmp
pop
and
in
and
push
adc
dec
cmpl
das
pop
adc
cs
mov
insl
lret
addb
jmp
inc
gs
repnz
out
lahf
xchg
icebp
cmc
sbbl
bound
mov
xchg
in
insl
stos
xor
int3
cmp
sahf
data16
xor
and
sub
sub
or
push
add
mov
stos
aas
addr16
adc
xor
lret
mov
add
fcom
adc
pop
in
in
mov
mov
jecxz
loop
daa
pop
sbb
add
pop
mov
lea
mov
and
mov
pop
adc
pop
push
push
cmp
xchg
xchg
mov
push
add
sarl
sarb
push
mov
adc
mov
mov
hlt
in
clc
pushf
repnz
or
in
iret
mov
popf
jnp
popf
adc
int3
add
dec
iret
mov
test
mov
inc
push
or
inc
and
sahf
aaa
js
xchg
movsl
inc
jo
xor
xor
dec
pop
popf
inc
pop
int
loope
test
aas
cli
daa
mov
fistpl
cmc
sub
fs
mov
fiadds
sbb
cmp
add
fmul
loope
sbb
pop
stos
stos
sub
push
fnsave
xlat
mov
daa
add
call
dec
das
mov
push
movl
fldl
bound
aas
cltd
scas
je
add
je
xlat
jg
mov
test
movsl
jge
or
push
jecxz
hlt
out
push
mov
adc
rcll
adc
mov
sbb
jmp
xlat
inc
cmc
push
dec
bound
pop
push
push
sub
mov
inc
push
sub
dec
pop
cmp
out
stos
inc
pop
or
ljmp
fs
clc
cmpsl
mov
xor
leave
out
ss
test
cmpsl
xchg
push
or
mov
subl
cmp
fisubl
cmc
mov
imul
cld
cmc
icebp
add
sub
mov
jg
cmp
xchg
xchg
jbe
mov
mov
btcl
push
add
xlat
jmp
adcl
xor
sub
popa
mov
cmp
stc
mov
lahf
daa
jne
xchg
sahf
cs
popa
xor
insl
xlat
popa
adc
adc
xor
ret
push
add
mov
shll
in
insl
scas
loopne
dec
dec
ja
jmp
add
sbb
test
push
insl
mov
mov
jnp
stos
arpl
mov
push
sbb
sub
or
leave
sbb
in
or
mov
lods
mov
fisttps
fs
or
mov
pop
sub
sbb
mov
xor
jle
pop
inc
psllq
add
lcall
repz
mov
es
inc
adc
or
into
mov
cmp
xor
add
int3
mov
loope
mov
loopne
xor
or
adc
cltd
test
add
sti
sbb
sahf
cmc
sub
dec
mov
mov
out
int3
sbb
mov
dec
fisubrl
jge
jne
dec
xchg
test
es
iret
loop
pop
mov
jge
mov
or
arpl
dec
enter
mov
pop
iret
aaa
lret
jg
xchg
adc
cmp
push
mov
adc
orl
adc
adc
cwtl
in
imul
mov
sub
jbe
test
or
out
daa
cmp
addr16
sbb
cli
adc
push
mov
jns
loope
or
sub
mov
movsl
xchg
xchg
mov
jge
popa
sub
mov
push
mov
mov
lds
mov
sbb
js
in
add
xor
pop
cmp
cwtl
push
and
adc
aaa
aas
ljmp
mov
scas
push
test
sbb
pop
push
pop
loope
outsl
dec
mov
xchg
mov
pop
mov
pop
and
jb
and
sub
out
pop
sub
xor
aas
nop
cmp
lds
fidivl
adc
packssdw
lock
in
addl
ljmp
movsb
sbb
lahf
hlt
xchg
loopne
iret
out
stos
xor
push
leave
lret
cmp
sbb
xorb
jmp
cwtl
popf
xchg
or
xlat
aam
add
mov
ja
jns
xchg
shl
cmc
pop
in
mov
sti
out
sub
and
mov
mov
push
or
sbb
ss
and
frstor
repnz
or
rcl
jl
dec
in
stos
mov
leave
inc
movsl
scas
and
sub
in
xchg
divl
jae
in
scas
cmc
push
fstps
xchg
loop
or
adc
dec
xchg
lahf
lea
stos
shlb
inc
out
push
inc
mov
ja
jb
test
sbb
pop
pop
sub
mov
mov
mov
push
pushf
cmp
int3
add
push
mov
push
pop
imul
jb
or
inc
test
push
call
sbb
imul
aaa
inc
mov
ret
mov
mov
pop
sbb
mov
mov
dec
mov
push
jbe
leave
adc
in
int3
mov
aam
mov
and
cwtl
or
pop
sbb
mov
fistl
cmc
in
pop
xor
pop
mov
outsb
xlat
jno
xor
mov
test
jns
dec
add
and
add
js
or
insl
rolb
cmp
lret
data16
sbbb
push
push
fildll
push
cmp
jnp
leave
dec
test
into
pop
testb
mov
test
push
mov
or
xor
andb
xchg
icebp
sbb
xlat
xchg
rcrl
or
pop
pop
pop
xchg
sub
lods
cmp
test
imul
outsl
leave
addr16
leave
les
sbb
js
mov
mov
xor
cmp
push
and
lods
lock
dec
xchg
popa
pop
aam
and
cmpsl
sub
mov
inc
in
push
fnstenv
sub
in
dec
pop
data16
and
mov
adc
cld
jecxz
out
notl
aam
loope
fistpll
pop
sub
sub
mov
mov
jnp
pop
aaa
add
leave
lods
sub
stc
ja
jns
negb
in
psrld
pop
mov
imul
bound
in
mov
cmpsl
in
push
add
mov
data16
sbb
test
adc
and
add
pop
sbb
ret
enter
fcoms
clc
xchg
jae
sbb
cs
jae
jp
idivl
add
pop
xor
mov
sbb
xchg
out
out
xchg
cmp
stos
mov
xchg
jecxz
cmp
dec
xchg
imul
jne
shl
mov
je
iret
into
pop
push
xchg
lcall
cmpsb
test
pop
mov
jmp
add
ljmp
sarl
add
dec
jmp
stos
xor
mov
xchg
into
into
jo
jge
ret
imul
sbb
xor
sub
push
jmp
cmc
in
cs
lcall
adc
bound
pop
sbb
enter
inc
jae
test
mov
cmp
into
xabort
mov
pop
out
mov
test
add
push
jle
bound
inc
mov
adc
rcl
push
icebp
cmpsb
inc
jg
bound
mov
and
xchg
call
lods
mov
scas
fstp
stos
mov
mov
cmp
pop
inc
cmp
in
and
repnz
movsl
rolb
jns
jns
add
inc
call
test
pop
jae
sbb
rorb
xor
shlb
lods
fwait
call
jae
mov
xchg
cmc
xor
dec
mov
dec
outsb
add
mov
imul
sti
test
das
jmp
out
cli
dec
xor
test
or
rolb
mov
mov
add
push
or
push
insl
sub
inc
adc
rcrb
lea
jo
pop
jp
loop
pop
out
or
or
sti
scas
bound
mov
arpl
or
push
scas
fwait
mov
outsb
clc
mov
dec
fldcw
outsl
sub
cmp
jecxz
imul
push
push
leave
insl
aas
aaa
shrl
dec
xor
inc
xor
popf
sbb
in
loopne
mov
sbb
jmp
mov
xor
mov
add
lds
adc
notb
jne
into
mov
inc
inc
lock
test
push
sub
mov
xor
test
sbbl
int3
cld
inc
jne
dec
arpl
pushf
shr
sub
jmp
and
movsb
pop
and
in
jle
pop
jmp
jbe
jecxz
nop
popf
loope
adc
lock
sbb
lods
mov
mov
hlt
addr16
add
or
xchg
push
les
lahf
or
jb
cli
in
pop
jb
into
mov
mov
enter
mov
lcall
aad
mov
xchg
lcall
mov
dec
inc
subb
jo
fwait
xchg
std
push
mov
xor
or
mov
push
or
int
cltd
stos
mov
pusha
out
adc
jp
shl
mov
xor
sub
test
ss
in
rcrb
mov
iret
mov
fldcw
push
mov
mov
and
aaa
aad
sub
pop
lret
lret
cmp
mov
xchg
lods
sahf
mov
les
adc
cli
xor
in
push
clc
pop
mov
rorl
ret
mov
mov
mov
movsl
dec
inc
leave
mov
push
jb
jae
and
pop
sbb
dec
or
push
jle
sbb
in
pop
or
cwtl
xor
pop
xor
and
pushf
pop
cld
iret
sbb
xorl
cs
sbb
or
ret
out
xchg
pop
push
scas
test
mov
adc
mov
sub
sbb
mov
add
sbb
xchg
arpl
sahf
add
stos
pop
fsubl
lds
scas
mov
adcl
inc
movsb
popa
subb
into
fidivl
popa
fistpll
inc
jp
cmpsl
jle
sub
dec
stos
xchg
fdivrs
repnz
mov
push
mov
jecxz
or
cmp
mov
out
ret
icebp
push
jp
or
cltd
pop
call
push
enter
push
add
repnz
or
cld
add
testl
xor
jle
xchg
push
sbb
cmp
hlt
xchg
int
call
sahf
sbb
push
push
fistpll
xor
inc
mov
repz
cwtl
ficoms
mov
dec
pop
fsubs
fcmovu
cmp
lea
in
aam
lock
jmp
sarl
mov
jl
sub
dec
and
scas
push
movsl
mov
bound
rclb
sub
aad
cmc
xchg
adc
inc
mov
cmp
insb
sbb
jmp
rcr
scas
sub
and
or
jg
movsb
ret
mov
daa
sub
into
xchg
or
ja
faddp
in
out
sub
fwait
cli
push
nop
es
gs
push
adc
lret
in
and
divb
sub
pop
popf
jno
sbb
fnstenv
pop
xchg
add
movsl
jnp
xor
sub
sbb
sub
pop
lret
adc
aad
and
mov
out
xor
loopne
push
pop
pop
sbb
or
or
jl
outsl
xlat
fcoms
xchg
loope
aad
imul
and
jg
sahf
push
enter
pop
sub
inc
mov
sbb
mov
mov
mov
data16
outsb
add
pop
stc
push
cmpsb
dec
cmp
mov
jmp
mov
push
mov
in
inc
or
cmp
cld
addl
push
mov
pop
mov
ret
out
jne
mov
sub
divl
mov
mov
ret
mov
or
stos
push
fcomi
inc
add
les
ja
xchg
mov
mov
movsb
dec
sbb
pop
mov
arpl
jne
adc
jl
cwtl
aas
jae
popa
cmc
int3
mov
push
test
cmpsb
add
sti
enter
adc
jle
dec
jp
scas
jmp
repnz
stos
dec
xorb
in
xor
add
pop
movsl
addr16
mov
xor
data16
xchg
stos
incb
inc
inc
xor
jo
in
mov
std
lahf
clc
aas
imul
adc
push
loop
xchg
lcall
jmp
js
jb
jns
pop
push
inc
dec
scas
in
cld
add
shll
out
imul
xorb
add
xchg
out
mov
scas
xchg
in
sbb
cld
sahf
or
cmp
repz
sub
fidivs
xchg
addr16
data16
inc
and
popf
and
adc
xchg
push
rcrb
xchg
cmc
out
ficomps
pop
or
push
mov
fwait
jb
jb
xor
sarb
xchg
jp
mov
push
pop
stos
sti
jg
leave
insl
xchg
mov
add
test
mov
shlb
out
fisubl
push
fs
hlt
dec
and
jno
popl
mov
mov
push
loope
leave
jne
push
hlt
xchg
pop
faddp
mov
aas
testl
icebp
testb
leave
jmp
leave
in
add
outsb
das
and
popf
sti
jae
xor
push
mov
stos
lds
dec
adc
jg
and
iret
fsubrl
out
popa
mov
or
mov
xchg
fmull
fndisi(8087
shlb
mov
fisubs
sahf
pop
shlb
mov
cmpb
fs
and
fdivp
daa
xchg
jae
out
mov
mov
lods
add
fcmovne
jge
mov
jo
push
push
out
sub
jg
or
mov
js,pn
mov
mov
add
mov
repnz
pop
adc
gs
popf
stos
sti
int
gs
mov
push
mov
xor
xchg
push
jge
adc
repz
popl
mov
imul
cmp
dec
loopne
sbb
fmuls
in
stos
jns
inc
es
mov
push
aas
pop
das
sbb
lods
dec
fcmovnbe
mov
push
pushf
push
jnp
mov
add
scas
divb
inc
dec
stos
icebp
mov
andb
cmp
push
dec
shlb
push
gs
jnp
arpl
sbb
and
mov
sahf
push
push
shll
inc
js
mov
or
jle
mov
sbb
mov
sbb
or
xchg
imul
xor
test
arpl
stc
mov
jp
push
jbe
pop
dec
mov
or
cmp
mov
xchg
ret
add
js
movsb
pop
jmp
les
ljmp
addb
pop
push
and
sbb
jp
fsubs
movsb
out
jne
jbe
fisttpl
dec
mov
mov
aaa
scas
das
sbb
into
inc
popf
subl
lods
ljmp
push
sahf
lock
sub
js
fcmovbe
adc
xchg
aad
xchg
ja
sub
mov
scas
push
outsb
fucomi
jne
mov
lcall
jne
add
push
ret
in
imul
cmp
movsb
aas
jo
cmp
js
repnz
subb
and
xchg
repz
push
push
inc
sub
and
outsb
pop
mov
cwtl
imul
scas
loop
mov
call
cmp
add
out
lcall
adc
fisttpl
jmp
sub
pop
out
in
dec
xlat
adc
push
pushf
push
in
movsl
or
leave
loop
jp
xor
xor
lcall
or
push
movsl
dec
das
inc
mov
cmp
mov
add
xchg
lahf
lret
pushf
ret
dec
dec
lods
sarl
cmp
jae
push
xor
testl
push
pop
orb
loop
jno
and
fldl
pushf
inc
aam
stc
jb
mov
mov
pop
adc
xor
sub
mov
push
jl
int3
in
pop
sub
repz
jb
rolb
adcl
add
stos
ja
jo
lahf
ss
mov
stc
cmp
jno
mov
mov
push
mov
notb
xor
pop
lods
xchg
pop
inc
int3
mov
fwait
jae
ret
je
mov
fldenv
aas
insl
cwtl
test
xlat
popf
and
dec
int3
xlat
mov
inc
push
les
add
out
mov
and
cld
shrb
xchg
lcall
jp
mov
fisttpll
scas
jge
into
adc
lds
ja
lahf
scas
inc
push
xchg
test
jnp
mull
cltd
cmp
fwait
jp
xchg
add
sbb
int
dec
sub
xor
test
movsb
jmp
lods
dec
mov
lea
cs
ret
iret
movsb
adc
pop
fsubs
mov
cmc
inc
xchg
sbb
mov
mov
mov
addb
push
pop
popf
lcall
aas
push
flds
adc
inc
addr16
xchg
and
jae
stc
adc
aas
ret
pop
jo
lret
mov
jecxz
inc
scas
inc
inc
inc
pop
ficompl
inc
inc
outsb
mov
xor
hlt
rcl
outsl
xor
test
sub
jns
inc
loop
lahf
lds
out
imul
mov
mov
and
fists
pop
pop
pop
lahf
sub
sarl
push
in
pop
xor
adc
or
add
dec
js
loope
adc
loope
data16
fwait
in
testl
cwtl
rcl
cmp
push
xchg
inc
jg
repz
cltd
int3
fsubr
sbb
mov
dec
sbbb
jbe
pop
dec
popa
stos
fsub
mov
int3
es
and
sbb
lcall
fisttps
movsl
add
inc
jns
insb
xor
jmp
sub
xor
jmp
out
iret
lock
and
insl
js
dec
sti
inc
testb
dec
aad
pop
dec
inc
xor
and
pushl
movsl
inc
loopne
out
cmp
pushf
dec
out
push
push
dec
cmp
cmpsb
pop
pcmpeqw
xor
mov
xchg
dec
lret
mov
add
jmp
xchg
into
push
push
sbb
mov
arpl
stos
stos
jg
push
fcomps
out
hlt
dec
repz
sub
pop
or
sub
mov
dec
cmp
rorl
mov
idiv
mov
cli
leave
fldenv
or
in
aad
das
jmp
xor
jle
stos
out
daa
mov
xor
scas
dec
gs
mov
or
mov
xor
dec
jnp
pop
inc
jl
cmpsl
sbb
stos
fs
scas
push
add
aaa
mov
insb
and
push
testl
and
imull
repnz
out
faddl
hlt
mov
fcoms
mov
cmp
add
and
inc
into
mul
mov
mov
aam
jecxz
sbb
mov
enter
enter
psubsb
clc
into
cltd
mov
es
popa
cli
adc
jecxz
jecxz
dec
lret
sub
inc
xlat
or
lret
in
mov
mov
mov
test
push
aaa
lcall
xor
push
jno
mov
loopnew
dec
dec
xor
fs
lcall
fsubp
dec
push
cwtl
cmc
dec
out
mov
add
popf
pop
xchg
inc
in
dec
pushf
cld
lahf
push
outsl
out
ss
out
mov
jl
scas
outsb
xchg
stos
xchg
jae
fidivrl
roll
mov
jo
cmpsl
push
test
out
gs
icebp
mov
mov
mov
or
out
push
xlat
jne
jnp
insl
push
fs
fiaddl
adc
fadd
loope
std
cli
push
adc
add
faddp
jo
std
jge
inc
add
pop
mov
in
push
sti
jb
xchg
adc
sbb
lcall
shrl
fcomps
xorl
lret
cmp
decb
sbb
inc
jne
mov
push
jmp
inc
sbb
inc
jg
out
mov
xchg
push
aad
mov
push
inc
add
les
sbb
aas
call
sahf
xlat
outsb
ljmp
movl
xchg
cltd
loopne
pop
pusha
push
or
fmull
and
cmp
clc
pop
imul
push
xchg
push
jnp
adc
sub
orb
mov
xchg
insl
jmp
adc
in
stos
in
rcl
popf
rclb
cmc
xlat
lods
pop
fldt
inc
fldt
xor
rclb
xor
jbe
or
lods
cltd
jno
aaa
ljmp
ja
inc
rcr
es
int
pop
and
cmp
sbb
jno
das
pop
add
mov
push
adc
pop
push
fdiv
xorl
rcl
xor
lahf
sbb
push
test
rolb
jg
es
addl
insl
cmp
stos
inc
and
sbb
bound
data16
addl
shl
aad
test
push
mov
ret
mov
pop
out
cmpsb
aam
sub
test
inc
pop
lock
inc
lcall
sub
stc
jecxz
aaa
cltd
std
jle
push
jb
scas
mov
sti
cmp
pop
test
fldl
sbb
stos
lds
pop
popf
pop
iret
or
out
imulb
cmpb
mov
adc
movsb
rcll
repnz
nop
xor
fnstenv
pusha
cmp
cld
add
inc
mov
mov
sbb
sbb
cmp
lea
and
lret
fisubrs
outsb
pop
pop
dec
outsb
sub
in
pop
sub
jge
mov
imul
push
insb
lea
push
cmp
mov
ja
push
and
and
cld
rcll
add
sbb
dec
js
push
cmp
or
repnz
iret
fldenv
or
mov
fnstcw
jo
sbb
adc
call
xor
push
cmpsb
sub
ret
add
push
jle
repz
or
pop
adc
jnp
in
dec
sub
lods
rorl
rcll
imul
xchg
cmp
sub
xor
xchg
xlat
xchg
scas
cmp
sbb
xlat
sub
mov
scas
fdivs
sbb
jns
xor
fcompl
cli
mov
int
xorl
test
mov
dec
out
scas
mov
outsl
fwait
lcall
sub
xchg
sbb
cmp
js
mov
xchg
lahf
xchg
adc
push
notb
das
sti
xchg
xchg
mov
rclb
dec
or
leave
dec
fimuls
in
stc
jno
xchg
pop
mov
call
out
fisubl
xor
stos
fmul
mov
cmp
stos
xor
arpl
cwtl
jge
dec
ja
ret
cmp
push
dec
fldl
push
push
mov
push
and
xchg
lahf
pop
mov
adc
and
jbe
or
adc
out
inc
push
mov
sub
outsb
mov
fucomip
shr
ror
dec
dec
bound
mov
sahf
out
pop
mov
adc
mov
ret
push
das
lret
enter
test
div
jg
cltd
in
nop
adc
mov
adc
mov
jae
jmp
in
aam
mov
outsb
imul
cmp
in
sarb
xchg
sub
test
adc
push
xchg
mov
xchg
pop
icebp
mov
sbb
mulb
add
sbb
sbb
loop
cli
inc
jecxz
popf
lea
mov
pop
fisttps
sti
xchg
push
pushf
leave
push
adc
add
mov
icebp
mov
sbb
rep
rolb
sbb
aaa
cmpsl
lret
sub
in
or
and
push
jp
scas
lcall
mov
rorl
or
daa
dec
cmp
incb
rcrb
es
cli
push
add
xchg
lcall
inc
inc
dec
or
push
iret
mov
mov
mov
mov
push
xlat
xor
cmp
jnp
lds
or
aas
xchg
scas
lock
mov
add
arpl
cs
mov
scas
aas
sub
aad
bound
push
adc
ja
inc
orb
popfw
pop
ljmp
sub
fimull
fs
jmp
dec
push
push
enter
test
addr16
mov
jo
jl
xor
cmp
repz
xlat
push
lret
mov
fs
jo
out
fs
push
fwait
jb
sbb
add
clc
add
push
inc
popa
movsl
lea
sub
in
push
xlat
mov
scas
mov
sbb
mov
xor
adc
cs
inc
aam
sbb
cmp
push
push
repnz
and
or
mov
and
add
inc
mov
push
lods
sar
lea
xchg
divl
arpl
jg
xchg
in
and
xor
pop
cmp
jo
sti
mov
fisubrs
subb
dec
arpl
sub
mov
jo
das
inc
mov
jle
mov
aaa
sbb
cmp
fsub
pop
push
mov
mov
cwtl
stc
insl
pop
clc
cltd
jo
jns
sbb
shrl
pop
xor
mov
mov
out
dec
dec
jmp
loop
out
stos
pop
xchg
or
lods
out
push
push
stos
cmpsl
lods
push
inc
clc
mov
movsl
adc
pop
in
gs
pusha
ret
cmpl
sbb
enter
aaa
jae
push
xchg
mov
sub
leave
outsb
xor
scas
je
cltd
push
jnp
outsl
sbb
cmp
lret
mov
adc
sti
mov
dec
pop
into
mov
ror
test
jns
jae
mov
rcl
and
sbb
sub
inc
pop
xor
xor
iret
dec
jo
inc
mov
sub
lahf
cmp
orl
je
jo
fisttpll
loop
cs
lea
cmp
icebp
int3
dec
arpl
out
pop
xchg
call
pop
inc
negl
repz
and
clc
outsb
jnp
je
rcll
fwait
dec
insl
ljmp
popf
mov
cmp
lea
movsb
imul
int
mov
scas
leave
rol
xchg
sbb
jno
in
or
pop
xlat
push
fwait
notl
jns
das
stc
cmp
aam
sub
adc
mov
rcl
lods
lods
adc
clc
rcr
sahf
clc
sbb
lret
lcall
fcompl
outsl
mov
movsb
ljmp
xchg
insl
fstl
sub
add
jge
jecxz
pop
cmp
clc
nop
inc
xchg
out
imul
jge
push
mov
jne
mov
daa
test
sub
ret
cmpsb
and
movsl
jecxz
jp
stos
adc
lcall
and
mov
popf
ds
and
fadds
and
adc
mov
jns
or
and
les
shlb
sbb
mov
inc
sti
mov
loope
test
pop
xchg
push
neg
sbb
cmpsl
mov
sti
push
jcxz
xor
mov
fnsave
daa
pushf
push
sbb
mov
nop
pop
adc
jmp
xor
insb
clc
pop
mov
mov
sbb
cli
lea
pop
sub
pop
andl
inc
mov
push
mov
xlat
or
add
loopne
xchg
test
push
fwait
cmp
movsl
and
mov
xor
inc
mov
lock
jg
int3
sbb
push
cmpsl
ja
and
push
inc
sbb
push
pop
jno
adc
mov
testl
jae
cmp
sub
or
test
out
or
mov
call
out
sbb
ljmp
rcl
pop
call
ja
shrl
add
xchg
pop
in
arpl
mov
adc
clc
pusha
in
jns
jnp
pop
ja
or
shll
fcompl
pop
pop
push
mov
inc
lahf
xchg
adc
dec
xchg
mov
xchg
sub
popa
ror
pop
js
jnp
out
fiadds
xor
or
or
lret
cmp
and
push
fdivr
aad
xor
xchg
fsubrs
adc
pop
fnstcw
testb
cmp
or
sbb
fildll
stos
xor
fadds
aam
stc
xchg
cmc
mov
jmp
test
jmp
mov
jmp
mov
or
push
rcll
push
pop
loope
fisubrl
and
dec
push
push
xchg
int
sahf
mov
aad
push
stos
push
ret
fs
cmp
cmp
insl
jb
aam
scas
adc
dec
icebp
mov
add
cmc
push
out
mov
pop
xlat
add
popa
ret
lea
xor
test
adc
mov
mov
call
inc
jns
test
push
sub
repz
into
push
inc
bound
mov
and
pop
aas
loope
fcoml
cmp
push
in
sbb
lea
cli
cmpsl
or
das
xor
fwait
popa
imul
mov
mov
xor
jo
lods
inc
sub
sbb
fwait
outsb
jno
jp
or
pop
push
lock
sbb
mov
and
fwait
into
add
pop
pushf
int
or
push
xor
or
dec
adc
mov
mov
jno
cmp
jne
mov
pop
sbb
add
cld
lret
sbb
fwait
daa
add
sub
gs
aaa
out
jg
mov
dec
leave
or
popa
outsl
jbe
jle
mov
in
dec
mov
test
addr16
xor
cmc
xchg
loope
mov
xchg
fisubrl
cmp
adc
in
mov
mov
push
icebp
cmp
scas
jle
outsb
in
inc
std
jne
inc
popf
or
dec
rolb
mov
or
aas
fmuls
mov
pop
ret
lods
push
mov
xchg
rcrl
mov
push
pop
jg
mov
sub
jecxz
mov
cmp
or
and
sbb
repnz
test
mov
mov
pushf
xor
jne
shll
outsb
jecxz
outsb
imul
mov
cmp
add
cld
cmp
stc
sbb
xchg
out
xor
mov
xchg
in
pop
js
or
fs
mov
jl
dec
lcall
fidivl
lcall
push
add
into
dec
cs
sbb
scas
cld
mov
mov
fimuls
dec
loop
and
sarb
out
cld
xor
movsl
clc
add
and
adc
sub
and
std
push
test
scas
xor
das
xchg
add
add
inc
jp
cmpsl
add
daa
add
xchg
cmp
push
insl
add
imul
fs
aaa
dec
in
popf
mov
stos
mov
inc
mull
add
xor
nop
push
popf
jae
pop
fdiv
out
xlat
pop
in
push
sahf
les
in
or
fistl
add
scas
sbb
scas
jno
and
jecxz
add
pop
sbb
mov
xor
push
lcall
mov
cmpsl
fisttps
jl
je
dec
bound
jle
int3
insl
and
cmp
nop
pop
inc
add
insl
mov
movsb
cmp
addb
nop
sbbb
jmp
inc
lret
cwtl
jno
movsb
inc
stc
sbb
xor
mov
mov
lcall
stos
pushf
repz
cltd
das
inc
arpl
adc
hlt
dec
mov
inc
lea
test
push
hlt
lea
adc
sahf
xchg
jg
imul
xchg
lret
rorb
mov
cli
pop
xchg
push
pop
lds
inc
lods
mov
rolb
or
fiaddl
lret
pop
pop
imul
fwait
daa
jnp
jnp
mov
adc
mov
or
gs
lods
lds
mov
cmp
xchg
fdivs
adc
lret
inc
test
nop
negl
test
xchg
cmpsb
mov
inc
mov
ja
shl
dec
ret
push
jl
pop
mov
stc
mov
fcoms
pop
call
adc
loop
frndint
add
mov
aaa
xor
rclb
mov
mov
jecxz
push
sbb
test
arpl
or
xlat
stc
inc
mov
pop
pop
mov
adc
dec
ror
xor
cmp
pop
cmp
xchg
and
movsl
cmpsl
scas
add
lcall
jge
movsb
cld
dec
push
push
popa
xchg
jg
cmpsl
xor
jmp
push
dec
lahf
sbb
push
rep
xchg
xchg
dec
ficoms
fldl
int3
push
mov
mov
cmp
jmp
ljmp
sub
jne
ret
cmp
insb
sbb
imul
or
xchg
idivl
in
movsb
mov
shrl
mov
pop
xchg
xchg
divl
pushf
stc
and
fwait
stc
and
mov
adc
pop
sbb
pop
push
mov
mov
pop
leave
into
sub
add
sbb
sahf
aad
and
xchg
and
and
sahf
cmp
call
cmp
jmp
pop
or
pushf
nop
icebp
psrld
jecxz
test
out
icebp
repnz
mov
stc
jle
rolb
sahf
adc
or
mov
pushf
push
fcompl
push
movsb
adc
mov
xor
sbb
fsubl
xchg
insb
dec
daa
sub
xchg
je
test
les
push
addl
imul
ret
mov
push
inc
cmp
push
mov
jne
dec
push
xor
les
scas
sub
pusha
jns
es
jns
or
cmpsl
shr
inc
shrb
iret
cmp
pop
xor
dec
xor
in
mov
xchg
aas
pop
fxch
das
xor
imul
aam
cmp
shl
lret
in
and
and
lock
sarl
adc
sub
lods
daa
imul
or
loop
das
push
mov
jbe
push
psadbw
out
shl
jno
test
sbb
stos
dec
sub
sbb
inc
dec
clc
or
inc
inc
enter
pop
mov
cmp
ret
jge
into
inc
loop
int
sub
into
rolb
pop
outsb
cli
fsubs
call
jbe
push
imul
and
repz
mov
clc
sbb
mov
stos
cmp
cmp
enter
hlt
mov
cltd
mov
das
add
xor
mov
cmpsb
push
xchg
loope
mov
mov
loop
daa
popf
xor
push
roll
sub
lds
xchg
sbb
andl
in
scas
popf
xlat
mov
lcall
xchg
das
lods
es
out
cmp
hlt
movsb
sarb
orl
dec
push
cld
addr16
sub
pop
and
push
fisubrl
iret
sti
adc
in
jnp
jno
pop
xchg
aam
mov
mov
hlt
in
lods
sbb
lret
mov
mov
push
loopne
sub
cmpxchg
cmpsb
fucom
inc
fnstenv
shl
jp
cmp
xor
jmp
xor
push
adc
je
fs
call
mov
cmc
or
icebp
ss
sub
inc
sbb
xor
add
sub
push
inc
mov
dec
lods
test
imul
aad
sbb
fistpl
sbb
arpl
orl
fbld
adc
lods
jne
lcall
movsl
mov
push
pusha
pop
sti
in
andl
rcll
insl
out
mov
pop
and
fs
lcall
adc
andb
and
push
pop
js
mov
cld
add
pop
push
mov
and
push
aas
in
dec
test
pusha
sub
inc
xor
push
dec
pop
ficoms
lcall
jmp
unpckhps
mov
movsb
mov
in
sub
icebp
fsts
add
in
cmc
int
push
out
jecxz
ja
xchg
outsl
lock
mov
ret
push
retw
jecxz
mov
lds
sub
movl
dec
adc
mov
fcompl
sub
jns
inc
ret
pop
mov
inc
dec
pop
xchg
cwtl
int
mov
sahf
pop
sarl
sbb
out
aad
mov
mov
mov
popa
lahf
lret
lea
mov
xchg
jnp
sbb
test
repnz
shlb
loope
add
jo
sbb
push
out
andb
fiaddl
sahf
add
js
stc
push
popa
in
cmc
adc
mov
and
pop
mov
mov
nop
inc
mov
inc
shlb
mov
cmp
pop
push
and
xchg
push
in
ret
cwtl
shl
xchg
addr16
push
outsl
clc
mov
dec
and
inc
add
and
and
jnp
jne
mov
lods
add
scas
rcl
jnp
nop
addb
inc
mov
imul
ljmp
fadds
in
mov
jo
mov
fmuls
mov
jg
push
adc
adc
into
cmp
xorb
daa
cltd
fildl
push
adc
lods
nop
dec
pop
or
cmp
sub
insl
push
outsb
shll
mov
test
xchg
cmp
sub
cmp
aam
dec
and
inc
lahf
jne
repz
cmp
fstpl
xor
int3
push
mov
mov
mov
and
xor
ficoms
into
xchg
or
imul
sub
gs
mov
jge
jecxz
jecxz
add
mov
dec
rcrb
mov
jo
fstpt
adc
insb
fists
xlat
or
iret
jecxz
xor
cmc
nop
in
cmpsb
imul
sar
cs
call
out
ffreep
sub
fstl
aad
fs
dec
mov
inc
daa
js
sbb
jmp
sbb
popa
sbb
call
sub
and
stos
lahf
cmp
mov
push
jle
mov
mov
mull
lods
or
inc
inc
cli
sub
xor
xor
call
rorb
cmp
out
mov
and
ds
inc
jb
faddl
cmp
repz
test
or
daa
dec
addr16
push
stos
daa
rolb
je
repz
dec
lret
bound
push
xor
xchg
sbb
dec
push
mov
clc
and
std
jbe
xlat
stos
mov
pop
xchg
and
pop
jmp
jne
int3
fs
sbb
inc
fimuls
jge
mov
cmp
mov
scas
or
mov
popf
repnz
mov
push
mov
sbb
push
stos
jp
cwtl
dec
lods
or
repnz
mov
repz
jmp
inc
xchg
pop
out
pop
rolb
shlb
push
fimuls
aas
add
icebp
jl
les
sbb
dec
out
push
insl
es
dec
arpl
fsubrp
insb
insb
or
out
ja
popf
dec
dec
dec
pop
cmc
cmp
in
stos
xor
push
mov
fcomps
push
shlb
mov
dec
inc
pusha
cmc
jmp
or
popa
sub
adc
or
push
sub
xor
or
cmp
lahf
sti
adc
jno
xchg
mov
sub
xchg
xor
lret
adc
rcll
xchg
mov
adc
xor
clc
and
std
mov
loopne
push
jae
pop
xlat
mov
addr16
in
call
fcomps
mov
sbb
add
sub
or
mov
xchg
arpl
test
call
lret
or
sbb
push
inc
push
negl
dec
test
xchg
push
hlt
and
mov
dec
mov
jl
js
call
outsl
bound
inc
test
xchg
outsb
inc
add
cmp
sti
mov
adc
imul
push
sbb
or
lods
jp
adcb
les
push
pop
dec
adc
pusha
jg
jb
fisttpll
dec
inc
stos
fstpt
bound
pop
xor
xor
shll
sti
push
mov
ds
xchg
push
inc
enter
mov
ret
shl
movsl
and
les
clc
push
pop
mov
shll
dec
movsl
dec
mov
out
push
psllw
push
cltd
xchg
fsubl
adc
int3
inc
fsubrs
fidivrs
cmpsl
ret
or
or
sbb
xchg
jb
fsubr
push
enter
shlb
out
pop
pushf
sahf
test
in
inc
or
dec
or
pop
out
lret
sub
ja
in
mov
xchg
stos
arpl
jb
or
mov
mov
mov
inc
sahf
daa
mov
dec
lahf
cmp
lea
int
mov
push
or
adc
fstl
fwait
es
sbb
rorb
or
icebp
pop
jp
test
insl
dec
enter
jp
outsb
jae
fsts
xchg
outsb
addr16
lock
cs
adc
adc
loope
xchg
inc
adc
xchg
xchg
jo
int
xor
fdivr
inc
or
cmpsl
cmp
jne
das
mov
jb
push
outsb
cmp
sub
or
cltd
pop
push
mov
jns
roll
and
add
lods
fstps
jbe
hlt
adc
lret
jp
clc
mov
push
sub
aam
fcoms
daa
push
ret
xchg
jbe
pop
mov
sub
push
sbb
push
cmp
mov
sbb
test
push
pushf
jp
inc
xor
push
ret
mov
ds
cmp
sbb
jmp
ljmp
loop
cmp
push
inc
sub
adc
xor
cmp
pop
fidivl
inc
xor
mov
dec
clc
int3
scas
stos
stc
pushf
fildl
je
push
mov
xchg
lods
in
sbb
or
lret
movsl
xchg
out
fistpl
ljmp
inc
mov
loopne
test
rclb
pusha
cmp
add
repz
stc
aam
push
inc
xlat
adc
push
jns
mov
mov
out
cmp
fnstcw
inc
or
fimull
mov
imul
test
prefetcht1
dec
xchg
int
sahf
frstor
ljmp
lret
in
stos
sub
ja
sarl
mov
sub
jmp
xchg
pop
enter
push
and
dec
mov
arpl
push
jge
cmp
xor
jle
pop
mov
call
pusha
lods
sub
outsb
xchg
push
jl
mov
in
decb
dec
clc
mov
mov
lock
push
mov
std
dec
and
pop
jbe
jnp
pushl
cmp
int3
xlat
and
vpaddusb
ss
ret
stc
mov
into
push
rcr
ss
ljmp
and
or
aas
call
setbe
mov
shl
push
jg
imul
cmp
lcall
pusha
xchg
jmp
gs
stos
jne
test
mov
xchg
ja
pop
fdiv
cmp
cmp
lret
or
mov
or
negb
lds
stos
cmp
inc
cld
lea
gs
movsl
test
or
inc
gs
popf
push
push
adc
test
inc
outsl
inc
mov
test
or
xchg
iret
mov
or
dec
loopne
movsl
jb
add
mov
rcrl
jp
sub
repz
add
push
mov
shl
int
es
mov
test
sahf
iret
xchg
in
fstpl
xor
add
fcomps
arpl
adc
mov
out
dec
jmp
xor
or
neg
dec
mov
cmp
in
or
fiaddl
ss
and
push
jae
or
mov
mov
push
fnstsw
data16
stc
inc
imul
mov
sahf
data16
inc
sub
xchg
xchg
lea
sahf
xor
mov
pop
push
popa
xor
cmc
pop
shrl
lahf
mov
add
das
jp
sbbb
retw
jl
jmp
adc
mov
mov
cmp
xchg
or
cwtl
aas
shr
push
or
jno
mov
mov
mov
mov
jle
add
insb
dec
ja
enter
adc
fildll
popa
sbb
and
xor
cmp
jb
scas
stc
jo
fildl
sbb
jno
push
stc
arpl
dec
incb
add
xlat
dec
or
hlt
icebp
adc
jg
mov
loope
fisubs
push
adc
test
jo
sub
movsb
sub
mov
add
je
push
sbb
outsl
sbb
sbb
jge
int
jnp
pop
pop
pop
or
hlt
and
mov
in
popa
iret
cmpsl
xchg
xchg
roll
mov
xor
and
pop
out
jp
fildl
std
jp
cmp
dec
outsb
addr16
or
hlt
in
mov
bnd
dec
pop
int3
or
add
push
idiv
push
mov
add
sbb
mov
not
mov
idiv
push
xchg
mov
inc
movsl
push
sub
jle
nop
inc
mov
mov
cmp
push
inc
mov
xchg
xchg
pop
dec
and
stos
jp
in
iret
sbb
js
fwait
xchg
inc
in
jmp
mov
inc
mov
lods
lods
push
push
jp
dec
mov
mov
ja
das
out
jmp
call
gs
call
xchg
adc
jle
mov
mov
xor
cltd
push
dec
cmp
or
add
push
push
dec
jmp
jp
mov
mov
loope
pop
loope
xchg
dec
daa
cmc
xor
mov
out
lods
ror
pop
sbb
adc
gs
lds
shll
sub
fninit
test
mov
popl
pop
dec
negb
mov
lahf
xor
inc
cmp
popf
push
lahf
aaa
stos
dec
push
dec
xchg
cmp
pop
es
call
gs
stos
int3
xchg
test
dec
mov
outsb
xchg
push
xorl
lret
nop
movsb
fwait
and
or
sub
and
adc
push
add
mov
sbbb
out
or
xor
mov
jne
mov
mov
adc
cltd
jbe
popf
lret
mov
push
mov
in
pop
shlb
cmc
movb
sti
dec
jmp
outsl
stos
in
das
push
sbb
loopne
aas
sub
xor
jp
inc
sbb
xchg
je
jno
pop
cmc
pop
mov
push
nop
pushf
mov
in
adc
pusha
cmpb
xor
mov
mov
iret
or
inc
cmp
in
xchg
cltd
mov
into
insb
xor
stc
jnp
and
pop
jle
mov
inc
adc
stos
add
sub
pop
pop
out
inc
sbb
int3
push
shll
mov
pop
xchg
notb
adc
and
dec
ja
int3
dec
or
mov
mov
pop
jno
jb
jp
es
test
mov
rol
xchg
push
cmp
pop
cmpsb
int3
es
mov
mov
sbb
cltd
mov
cmp
std
lret
push
xchg
mov
mov
fcoms
jmp
dec
mov
xor
and
roll
popf
stos
lea
aas
leave
dec
inc
rcl
pop
arpl
add
sub
or
jmp
push
lahf
jmp
sub
cmp
add
xor
fbld
cmp
xchg
cmp
aam
shlb
sub
cmpl
sub
outsb
inc
pusha
sbb
adc
insb
xor
jno
jbe
lods
repz
xor
sbb
fsubr
insl
testb
inc
mov
insb
mov
mov
adc
jo
push
xor
pushl
sbb
mov
subl
dec
mov
pop
and
cltd
lret
mov
push
mov
shl
insb
xchg
add
jl
cmpsb
dec
mov
inc
testb
aam
or
in
jbe
jno
popa
cwtl
ss
mov
rorl
es
jo
fdivrp
mov
sbb
and
sbb
inc
jmp
stos
leave
stos
sbb
addl
pushf
pop
aam
loope
jge
or
mov
sub
and
movsb
in
mov
jge
aam
push
sarl
cld
nop
mov
mov
stc
or
inc
mov
fsts
mov
je
sbb
inc
push
push
adc
jmp
sbb
lock
repnz
adc
pop
mov
movsl
out
rcll
cmpsl
movb
fcmovb
dec
pop
ja
incb
jns
fistps
mov
jne
cmp
cmp
xor
dec
imul
mov
inc
mov
mov
aas
push
dec
std
xor
mov
loopne
inc
js
mov
mov
xchg
imul
push
flds
jge
rclb
fnstsw
dec
add
jo
mov
xor
and
jbe
inc
cmp
mov
testb
xchg
arpl
lods
in
jbe
test
icebp
mov
ja
jecxz
xor
inc
dec
or
ret
cmp
jnp
and
jno
loop
cmp
mov
push
pop
sbb
mull
addr16
cmp
push
fisttps
inc
pop
icebp
pxor
punpckhdq
or
stos
cmpsb
mov
and
inc
loop
scas
fwait
jg
mov
adc
pop
sub
mov
fisubrs
adc
fadd
push
sti
aaa
sub
mov
jge
xchg
jg
and
mov
and
xchg
sub
repnz
push
test
into
mov
in
xor
xlat
pop
xor
mov
subb
push
test
test
outsb
cs
nop
add
push
xchg
sbb
mov
inc
jne
cmc
outsb
sbb
aas
pop
pop
cmp
sub
dec
and
mov
loop
sbb
mov
mov
shr
and
jge
dec
stos
add
xor
jp
push
xorb
pop
subl
mov
dec
repnz
das
iret
cmc
mov
pop
adc
fidivl
in
jae
sbb
imul
lret
mov
add
inc
out
sahf
sbb
cmc
loopne
aaa
aad
ljmp
scas
xlat
test
aad
data16
dec
add
pop
sub
sbb
ds
push
fs
xor
pop
subb
loopne
test
xchg
icebp
mov
dec
mov
clc
clc
and
push
and
add
jmp
lret
les
out
ficoms
pop
shrd
pushf
push
rcrb
stos
mov
adc
sub
push
scas
bound
jbe
inc
in
or
mov
test
inc
mov
scas
hlt
test
adc
cmpsl
push
xorb
or
sbb
dec
push
adc
dec
and
dec
fs
popa
ret
cmp
ficompl
add
std
jnp
adc
sub
out
push
icebp
cs
inc
gs
jge
pop
xchg
jge
mov
and
arpl
clc
inc
jmp
jmp
push
fs
in
lea
pop
adc
xchg
adc
sbb
call
xchg
xchg
test
call
iret
aaa
mov
dec
insb
or
lock
test
mov
add
sbb
scas
or
gs
mov
out
repnz
push
cmpb
jbe
xchg
fisubrl
xchg
int3
scas
sti
divl
sbb
xor
push
cmp
loopne
sub
neg
leave
pop
pop
jmp
xor
cmp
sub
aas
test
das
pusha
mov
mov
adc
lahf
les
sub
sub
int3
xor
pop
mov
lss
push
flds
sahf
pop
jmp
cld
xchg
adc
mov
repnz
jmp
pop
clc
pop
inc
mov
cmp
mov
cmp
into
push
loopne
xlat
xor
xorb
or
outsb
and
pop
mov
divl
pop
push
repnz
sub
jae
dec
add
push
es
inc
lcall
inc
sub
pop
insb
fiadds
lock
pop
js
insl
and
mov
addr16
inc
inc
icebp
pop
bound
mov
aad
or
dec
mov
mov
jns
pop
ja
dec
leave
sub
rcll
sbb
arpl
sbb
mov
cmc
test
sti
or
es
stos
fwait
repnz
es
test
fistpl
mov
xor
in
mov
sbb
int3
jmp
out
mov
mov
jle
dec
cmc
fcomps
xchg
ret
pusha
inc
stos
pop
das
repnz
adc
xchg
nop
rcl
sub
ror
cmp
andl
inc
xor
loop
imul
xchg
add
pop
jmp
xchg
xchg
into
int
cmp
mov
add
fxch
jecxz
rcrl
ret
sub
pushl
jo
or
add
and
push
aam
pushf
fnstsw
sub
lods
pop
mov
rolb
xor
pop
cmpsb
iret
mov
xlat
and
rclb
int3
stos
mov
cs
dec
or
into
xor
pop
mov
repnz
popf
mov
pop
mov
mov
sbb
and
imul
mov
sub
cmp
inc
popf
jno
mov
mov
and
js
adc
add
negb
pop
mov
mov
daa
out
add
dec
adc
js
sbb
shlb
adc
push
mov
aam
cld
xchg
inc
ret
xchg
lea
add
xchg
adc
push
push
shrl
je
inc
pop
cmp
adc
mov
lods
xchg
cmp
subl
les
inc
add
cltd
adc
fcomps
std
call
pop
adc
outsl
dec
or
fidivs
inc
pop
jne
and
jno
pushf
sub
inc
xor
out
mov
inc
sbb
dec
mov
or
invlpga
sbb
hlt
xchg
cmp
mov
lea
cmp
in
pusha
push
xchg
mov
xor
cmp
fnstcw
sub
or
add
repz
cmp
or
js
dec
jb
adc
outsl
adc
sbb
push
dec
adc
jecxz
pushf
int3
in
call
stc
imul
pop
mov
arpl
hlt
sti
dec
dec
incl
mov
push
repnz
sti
std
mov
cmc
in
icebp
hlt
popa
adc
loope
nop
sub
jp
and
fsubl
add
mov
sbb
stc
gs
add
adcl
jle
inc
and
mov
push
in
das
xor
bound
push
push
push
cs
sbb
jbe
pop
xor
xchg
cmpsb
addr16
and
arpl
xor
mov
ss
lcall
xor
adc
inc
repnz
or
pop
mov
mov
add
insb
packsswb
outsl
pop
mov
fistps
out
bound
push
popf
aaa
inc
inc
in
xchg
in
jg
xor
mulb
adc
clc
loop
push
add
stc
jmp
test
add
scas
sub
test
clc
xor
arpl
lods
dec
cs
xor
jl
pushf
pop
js
int3
sbb
sub
sub
das
dec
cld
scas
dec
aas
ss
test
rcll
pop
repz
dec
adc
or
jl
jmp
inc
arpl
push
repnz
les
loopne
pushf
scas
ljmp
jae
scas
jbe
lods
std
fwait
cwtl
imul
add
mov
and
dec
cwtl
and
cmp
or
push
add
sub
imul
sub
pop
dec
outsb
out
popf
mov
movsb
jecxz
and
ljmp
inc
orb
out
mov
cmpsb
adc
jmp
fisubrl
arpl
mov
jnp
mov
xchg
jmp
mov
mov
mov
xchg
push
cwtl
movsl
loope
loope
cld
mov
lock
pop
lahf
test
mov
adc
in
add
outsl
push
shll
push
lods
lahf
xor
inc
rcr
fwait
cmp
cld
push
sub
add
stos
or
cmpsb
and
push
sub
and
sbb
pushf
mov
into
lret
and
pushl
mov
arpl
cltd
test
or
aas
jmp
and
clc
pop
push
out
push
adc
mov
lock
scas
stos
add
cmpsb
adc
mov
aad
xchg
frstor
repz
ficoml
push
aad
dec
push
popf
addr16
cmp
insl
outsb
call
and
data16
es
lock
imul
imul
mov
jge
jno
les
outsl
xchg
divb
iret
xchg
fisubrs
jl
imul
imul
sbb
icebp
jb
adc
jae
lcall
sub
outsl
xlat
lcall
cwtl
cmp
imul
outsl
rorb
lcall
adc
mov
in
outsl
cltd
ss
lret
xlat
arpl
cmc
mov
sbb
in
xor
test
sbb
add
mov
sbb
fidivrl
mov
add
adc
lea
sbb
ljmp
mov
push
icebp
aaa
shll
fucomp
inc
push
mov
pop
mov
cmc
fsub
add
xchg
pop
int
jle
int3
mov
or
fisubl
sarl
maxps
xchg
xchg
or
pop
sbb
imul
imul
dec
jle
jbe
mov
pop
dec
je
fsts
mov
xchg
stc
xor
or
loope
mov
js
mov
bnd
jg
pop
mov
insb
imul
int
lock
xchg
cmp
rol
stc
lahf
leave
lock
jo
aas
xchg
xor
aam
mov
outsb
sub
add
xlat
xor
mov
inc
mov
mov
in
cmpsb
leave
bound
adc
shll
popa
cmpsl
pop
mov
or
ficomps
xchg
loopne
or
inc
and
dec
pusha
das
pop
popa
jmp
sbb
or
sub
and
pushf
xor
fsubp
out
pop
nop
xor
mov
pusha
push
sahf
or
leave
inc
sub
xor
inc
lcall
adc
xlat
pusha
clc
out
and
mov
or
and
mov
push
jmp
sub
adc
aas
mov
mov
ficompl
int3
ficoml
mov
push
inc
xchg
loop
sub
cmp
mov
mov
imul
sub
jge
or
ficoml
jns
sbb
mov
pop
xchg
push
sub
or
nop
push
sub
call
sub
fstps
and
or
xchg
jno
mov
loope
stos
add
aaa
and
outsb
cmp
xchg
push
mov
stc
push
popf
in
cs
and
inc
mov
in
cs
push
in
mov
or
jecxz
add
outsl
sbb
xlat
mov
and
mov
std
mov
das
xlat
sub
dec
adc
mov
in
lahf
push
mov
jnp
and
pop
fucomi
dec
dec
mull
test
mov
aam
cmp
fdivrl
or
outsl
cmpsl
sahf
cmpsb
add
roll
stos
xchg
sub
ss
push
fwait
lcall
xchg
pop
movsl
jmp
fidivs
fcoml
and
sarl
sub
out
xchg
pushf
stos
test
iret
xlat
push
negb
jecxz
popa
fisubl
add
push
dec
xor
mov
mov
popa
clc
popf
pop
shr
in
jns
jbe
and
imul
shlb
aam
adc
push
pushf
inc
push
bound
xchg
push
adc
xor
dec
imul
mov
mov
in
add
mov
and
loope
and
sbb
imul
sub
data16
pop
push
adc
or
pop
imul
nop
inc
and
sub
mov
xor
push
add
insl
mov
mov
sub
out
xor
add
jno
jmp
inc
push
inc
imul
idivl
mov
gs
pop
pop
mov
enter
or
and
jns
cmp
pop
push
lcall
outsl
out
inc
pop
shll
push
inc
lahf
push
sub
cmp
mov
and
jecxz
lcall
lock
lret
inc
pop
dec
test
arpl
out
sahf
add
xchg
std
mov
jmp
fucom
push
mov
xor
enter
dec
mov
hlt
leave
pop
cmp
mov
fwait
dec
sbb
lahf
subl
mov
sub
ja
popl
mov
mov
pop
mov
gs
pop
lcall
cld
lea
mov
adc
sub
dec
je
fs
add
insl
jo
sub
push
shrb
and
mov
push
repz
fwait
push
lret
in
jmp
sbb
dec
push
ja
cld
lea
inc
push
mov
jbe
movsl
addr16
mov
lea
push
rep
dec
push
sbb
add
daa
jg
inc
sbb
jg
es
fldt
leave
lods
sbb
in
divl
lods
sbb
push
iret
push
gs
jge
xor
sbbl
pusha
aad
inc
arpl
sbb
push
jge
negb
mov
or
mov
sub
mov
hlt
repnz
imul
fisubl
mov
mov
xchg
xor
fiaddl
and
or
in
mov
roll
pusha
xchg
or
cmpsb
lods
ljmp
cmp
xchg
or
pop
mov
sbb
adcl
cmpsb
jno
fisubl
cmp
arpl
pushaw
cmp
sub
stc
daa
sbb
outsb
js
jb
cmpsb
xchg
add
in
out
push
test
dec
lock
mov
sub
fcom
dec
xchg
and
rcrb
sbb
divb
pop
push
push
add
jl
push
hlt
jns
lret
dec
cmp
cmpsl
cld
test
ret
mov
ret
fists
push
mov
nop
addr16
mov
repz
lret
cmpsb
jne
lds
inc
roll
aam
lods
mov
adc
scas
fs
pushf
jmp
pop
rcrb
movsl
inc
fistl
jb
xor
inc
adc
das
inc
jo
sbb
clc
cmp
xor
out
cmp
call
daa
inc
in
mov
push
dec
in
subl
frstor
cwtl
push
add
jmp
adc
test
ss
mov
cmp
inc
push
cwtl
push
outsl
fsubl
jp
mov
scas
aad
sub
adc
sbb
jbe
leave
fisubrs
or
jno
adc
inc
pop
les
int
xchg
hlt
jae
jns
dec
fwait
call
imul
dec
push
jmp
xor
neg
in
out
cmp
aam
jp
pop
and
es
pushf
jb
mov
mov
jb
fldcw
es
fwait
inc
pop
aas
lahf
mov
jo
call
or
in
mov
lock
xchg
scas
and
xor
in
sub
stos
or
sub
stos
or
or
out
repz
push
jp
fadd
and
fwait
int3
lahf
inc
mov
into
pushf
aam
push
jo
fldl
xchg
mov
push
inc
mov
add
or
js
push
mov
mov
mov
jl
stc
outsl
cmp
lds
fwait
dec
out
jmp
pop
ja
and
mov
ja
call
in
imul
adc
push
in
decl
dec
xchg
add
mov
xchg
stos
push
pop
dec
or
in
inc
mov
sbb
pop
mov
adc
jg
sbb
cwtl
lret
aad
sbbb
fnsave
mov
jecxz
push
fcompl
sub
in
mov
lods
mov
les
jae
jno
or
addl
or
daa
push
dec
push
mov
fistpl
inc
mov
bound
cwtl
pop
adc
push
ficoml
movaps
xor
adc
mov
push
pop
orl
int
inc
test
addr16
push
idivl
sbb
out
dec
movsb
sbb
fimuls
sbb
lret
push
jecxz
imul
dec
dec
ja
les
pushl
pop
lret
in
es
stc
pop
mov
inc
fisttps
push
pop
cs
out
mov
cmp
aad
dec
stc
cmpsl
jbe
es
xchg
xchg
adc
aas
outsl
dec
call
psadbw
xor
out
movsb
aad
fidivrs
inc
mov
scas
stos
jbe
ret
lahf
mov
daa
sbb
jnp
push
std
mov
pop
leave
add
add
xchg
test
fs
loope
bound
add
sbb
cmc
push
and
dec
cmp
cmp
stos
sbb
mov
int
daa
outsl
dec
fcmovb
xchg
clc
xor
loop
xchg
loopne
xor
sahf
inc
mov
repz
sbb
push
push
or
and
pop
cli
test
adc
mov
xchg
or
sbbl
rclb
lret
jp
bound
lahf
cmp
bound
pusha
mov
fcmovbe
and
das
clc
xlat
frstor
test
adc
xor
dec
push
xor
movl
sub
leave
or
add
adc
push
push
pusha
sbb
sub
cld
mov
mov
pop
pusha
sub
or
lcall
ja
pop
sbb
leave
jp
in
push
mov
dec
scas
add
mov
out
jle
dec
xor
sub
and
out
test
movsb
mov
mov
dec
xor
int
adc
imul
jae
filds
sbb
das
adc
fnstcw
in
add
or
fisttpll
add
fildll
and
fidivl
insl
mov
jno
stos
xchg
push
es
loop
ret
in
xor
jne
inc
xor
jns
int3
xor
sub
rorw
mov
xor
iret
lods
mov
es
push
pop
loopne
cmp
xchg
loop
icebp
sbb
mov
sarl
cwtl
movsb
lret
test
jns
fadds
arpl
mov
mov
add
push
ja
aad
aad
sub
cmpsl
jge
cltd
inc
cmp
and
push
js,pn
fldenv
sbb
arpl
rol
jecxz
sti
adc
push
cmc
bound
mov
cmp
lcall
popl
icebp
xor
jp
xor
inc
inc
bound
dec
xor
cmc
std
gs
hlt
cmpsl
inc
lret
out
stos
ja
pop
loop
imul
jge
out
adc
or
push
jb
ljmp
jmp
imull
in
daa
test
mov
dec
pop
popf
jae
cltd
inc
imul
xor
movaps
ja
scas
std
inc
shr
nop
lret
int
or
mov
push
mov
outsb
lock
adc
lret
stos
lods
adc
test
pop
inc
jne
cs
je
xor
pop
mov
push
add
adc
cs
stos
xor
xchg
arpl
jle
or
movsb
insb
imul
cmp
testl
lea
mov
orl
ljmp
scas
fs
inc
and
inc
push
popa
mov
scas
negl
aas
scas
adc
sub
pop
jp
daa
fisttpll
adc
mov
cmp
jo
lock
push
popa
ja
fwait
jl
ja
je
or
icebp
ftst
xor
xor
push
std
jo
cwtl
xchg
enter
stos
sbb
pop
and
ffreep
insb
inc
sbbl
popf
jg
enter
cmpb
pop
adc
xchg
fsubp
ja
adc
cld
scas
adc
aas
push
add
jno
add
aam
xchg
hlt
test
bound
adc
fsubrs
lods
nop
sbb
stc
pop
jp
xor
push
gs
out
stc
mov
hlt
mov
je
cmc
mov
arpl
pop
pushf
js
popf
cmpsl
cld
mov
pop
aam
lea
cmp
out
mov
ja
nop
loope
pop
add
xor
std
int
arpl
cmp
or
jmp
shl
pop
outsl
adcl
mov
sbb
or
mov
mov
and
pop
or
lods
cmc
xlat
adc
dec
outsl
pop
jp
out
inc
cmc
out
adc
mov
out
cmp
rcrl
leave
mov
mov
xchg
stc
imul
dec
aas
pop
mov
cmc
test
mov
add
mov
cmp
adc
mov
shl
xor
fists
dec
inc
arpl
enter
jno
int
out
in
ret
inc
and
imul
mov
dec
lret
push
mov
jo
adc
mov
dec
lret
call
in
and
mov
inc
mov
mov
add
repz
lcall
xchg
pop
inc
lahf
jbe
pop
and
xor
sub
pop
pop
imul
cmpsb
add
int3
stc
cmc
idivb
ds
jge
mov
dec
gs
xlat
pop
aam
add
rcrb
or
fisubl
mov
mov
cmp
push
sbb
cmp
pop
movsl
sbb
mov
jno
push
movsl
lods
out
or
xchg
stos
in
daa
lods
aad
xlat
or
inc
cmpsl
xchg
cmp
xor
cmp
movsb
lea
xchg
stos
sarl
jmp
ja
rclb
insb
in
aas
pop
push
daa
mov
or
stc
adc
push
aam
stos
stos
push
jno
cmpsb
mov
lock
jecxz
xchg
sub
out
mov
mov
and
mov
mov
xchg
push
pop
lret
xor
inc
fcoml
cltd
xor
or
pop
jae
add
push
ss
pusha
inc
cmp
cltd
int
or
sbb
push
outsb
fdivr
ljmp
add
and
ret
sahf
dec
jge
push
xor
xchg
aaa
out
sbb
out
leave
jns
int
lea
and
dec
pop
fcmovnu
cs
and
add
loope
sub
insb
ljmp
in
dec
cmc
mov
mov
mov
mov
cli
int
test
out
jb
jbe
inc
cmc
jno
mov
rol
xchg
push
in
test
repz
aas
jae
xchg
push
dec
test
xlat
jg
or
rolb
mov
adc
cmp
cmp
out
or
das
jp
push
jns
mov
rcll
lock
jmp
jbe
insl
movsl
xor
cmp
mov
inc
pushf
mov
adc
jbe
mov
lret
imul
mov
inc
pop
mov
adc
loope
lock
scas
jno
movsl
test
pusha
and
cmp
idivb
popf
mov
es
jp
in
mov
out
cmp
in
loope
shlb
fdivr
leave
cltd
fisubrs
sub
adc
loop
ficoml
adc
shll
bound
and
inc
enter
cmp
cmp
add
cltd
scas
lcall
decb
cmp
jbe
dec
push
jnp
ss
push
dec
pop
inc
xchg
pushf
mov
push
test
push
mov
lods
insl
mov
add
ret
pop
mov
fildll
pop
in
jns
dec
sub
and
ja
lahf
das
jnp
or
dec
push
xchg
aad
cmpsl
dec
xor
aas
sub
fsubrs
pusha
imul
popf
andb
call
pusha
push
test
inc
test
lahf
xchg
insl
xor
es
int3
cmp
stc
dec
xchg
fwait
push
lret
inc
and
adc
add
or
jmp
sbbl
inc
jp
in
inc
dec
push
lock
jmp
push
and
fwait
push
lcall
sbb
inc
jbe
mov
popf
xchg
cs
mov
mov
loopne
clc
jecxz
fs
stos
mov
dec
jge
jp
jl
pop
lds
lds
cmp
lods
push
pop
push
push
add
ds
cmp
sub
js
pop
xor
push
dec
and
test
cltd
and
loopne
cmp
and
hlt
mov
mov
xor
sbbl
or
aaa
notl
xchg
mov
sahf
or
insb
mov
call
mov
fs
jp
test
jb
bnd
fimull
push
loopne
push
hlt
daa
cmp
ret
fists
cmp
nop
xor
stos
movsl
xlat
sbb
push
and
cmp
loopne
cmp
daa
lret
into
ret
fnsave
js
ljmp
sbbl
aad
iret
push
push
sarl
in
inc
add
and
inc
jmp
pop
mov
mov
stos
pusha
sub
insl
push
mov
or
cltd
jle
mov
xor
add
fsubs
adc
jmp
rcrb
shl
fcomp
jb
mov
adc
outsb
jae
movsl
push
mov
arpl
cmp
adc
jns
inc
or
repnz
cld
das
or
ja
sarb
cmpsl
xchg
in
inc
cmp
into
js
inc
stc
cmp
das
mov
or
inc
fcompl
testl
sarl
testl
mov
xor
lahf
scas
push
sbbb
mov
incl
jbe
fs
repnz
mov
jg
push
xchg
push
and
add
sub
adc
lods
test
sub
mov
lret
dec
cmpsb
ss
in
mov
xchg
es
jge
enter
shrb
mov
rcrl
pop
cmp
and
or
jns
in
cs
inc
sbb
fisubl
xchg
adc
lea
std
rcll
lret
dec
mov
jl
inc
int
bound
mulb
mov
push
inc
or
jp
loop
arpl
pop
ss
push
dec
aaa
loope
mov
mov
insb
popa
rcl
ljmp
xchg
sbb
sub
hlt
mov
cld
test
dec
sub
aaa
mov
xchg
aas
sahf
jo
fcomp
lret
jno
andb
mov
mov
mov
insl
push
and
pop
mov
push
mov
arpl
imul
jne
xchg
push
inc
movsb
adc
sti
roll
cli
xchg
dec
cld
int
mov
in
sub
scas
jmp
adc
jo
in
insl
add
xor
mov
mov
jecxz
xor
icebp
insl
shrl
xlat
adc
jp
jg
cmpsb
int
xor
and
pop
xchg
aas
das
fldt
add
add
aam
and
sub
icebp
js
fistpl
int3
dec
lods
stos
xor
cld
daa
addr16
xchg
rcll
add
in
cmc
jle
sbb
xchg
push
cmpsb
popf
push
dec
aad
jbe
sub
pop
cli
xchg
fidivrl
and
push
outsb
iret
jno
fdivrs
test
in
xor
add
repz
inc
popa
adc
ficoms
inc
add
inc
adc
jl
inc
imul
xchg
data16
sub
stc
test
mov
insl
aas
lds
or
jge
insb
push
sti
aam
jno
push
pop
jge
test
cmp
xchg
out
lock
or
test
mov
nop
cmc
lock
mov
out
jns
stos
mov
mov
in
test
inc
test
push
push
rcrb
addr16
xchg
adc
roll
pop
dec
xor
add
jb
inc
cmp
orl
add
lds
mov
xor
adc
idivl
inc
in
and
mov
xchg
cltd
cmp
or
xchg
push
hlt
xchg
fisubrs
leave
jns
shlb
decl
xor
jecxz
jo
js
mov
stos
mov
rclb
xchg
jno
js
jbe
lods
lds
dec
jl
mov
xchg
cmp
int3
or
lods
lret
push
dec
lds
sahf
punpckhwd
shll
sub
outsl
cmpsl
imul
add
cmp
inc
cltd
dec
jl
inc
mov
or
ret
xor
std
leave
pop
sub
adc
lds
inc
xor
cltd
or
outsb
mov
jbe
mov
stc
ret
inc
cwtl
and
test
mov
mov
push
mov
and
sbbb
leave
xor
xchg
jl
lret
or
imul
sub
jp
cmovno
std
jl
pop
clc
push
cmp
mov
lret
or
jb
inc
rcl
iret
dec
clc
mov
pop
std
hlt
jmp
out
sub
std
movsb
push
dec
mov
xor
sub
div
iret
stc
inc
xorl
adc
push
ret
insl
inc
ss
adc
fwait
dec
adc
ja
push
sbb
sub
sahf
inc
fldt
inc
adc
sub
inc
pusha
mov
orb
std
test
movsl
mov
and
dec
add
sarb
mov
push
aad
mov
xchg
movb
stc
out
xchg
repz
mov
dec
stos
mov
das
call
scas
mov
shlb
push
out
add
divl
or
loope
es
fidivl
push
sbb
js
cwtl
mov
leave
insl
mov
and
lock
add
pop
mov
jmp
jecxz
mov
cmpsl
dec
cmpsb
jmp
mov
xchg
jmp
pop
js
mov
jp
dec
mov
jg
bound
mov
dec
das
adc
adc
sbb
push
sar
fstpl
jns
mov
jge
mov
mov
js
sbb
sbb
xchg
jmp
fwait
jle
imul
push
jg
scas
cld
add
cli
xchg
push
test
ljmp
ljmp
pop
cmp
icebp
shll
mov
test
adcl
negb
out
push
lahf
repnz
push
adc
imul
lret
out
and
adc
movsb
pop
pushf
hlt
xlat
and
sub
aas
mov
cld
add
mov
mov
or
add
shr
insl
xor
lcall
sub
daa
loope
mov
pop
push
clc
and
pop
dec
out
jno
insb
test
hlt
std
sti
pop
lret
sub
ljmp
out
xor
sub
cmp
or
adc
push
jne
cmpsl
sub
ds
mov
sbb
pop
xchg
adc
and
push
cwtl
clc
push
adc
and
or
push
fmuls
cmc
je
mov
sub
jbe
cmpsb
dec
adc
lds
sub
mov
pop
lcall
push
sbb
loop
testl
sbbb
dec
lea
add
out
cwtl
mov
mov
mov
gs
xchg
dec
and
and
xchg
pop
add
adc
dec
mov
cmp
mov
or
adc
mov
mov
aaa
adc
test
ds
dec
repnz
inc
adc
pop
cs
mov
or
xor
gs
sbb
xor
inc
push
into
fwait
shlb
inc
subb
clc
aad
jb
mov
ret
scas
lret
push
pop
xor
imul
aas
dec
jae
imul
lds
and
xor
popf
inc
xor
adc
outsb
dec
ret
aaa
sbbl
lret
sub
fimuls
adc
rorl
popa
push
and
adc
mov
daa
subb
pushf
xchg
fldenv
enter
cmpsl
and
inc
ficomps
mov
push
inc
clc
and
ret
mov
ja
scas
imul
inc
fimull
aas
dec
jnp
dec
stos
xor
mov
ror
cwtl
test
enter
jne
ljmp
shll
adc
test
lods
iret
fstp
shrb
add
xchg
jl
fstp
pop
mov
add
pop
loopne
icebp
loope
stos
mov
adc
mov
or
rorl
ss
push
cmp
clc
insb
loopne
mov
add
ret
sar
cltd
sbb
xor
push
jp
xlat
jbe
lret
xor
rcrl
ljmp
push
out
or
jbe
mov
mov
sbb
mov
sub
push
popf
jb
ja
lahf
jbe
fisttps
test
cmpl
add
cltd
sub
je
sbb
mov
aad
icebp
or
jecxz
mov
jmp
jae
xchg
inc
jl
sbb
push
daa
xor
adc
jno
stc
pop
insb
xor
push
sub
mov
movl
cltd
sub
sub
sub
clc
stos
pop
fs
aaa
iret
fwait
test
mov
pop
nop
jo
push
mov
jo
ljmp
sti
xchg
cmp
mov
mov
jne
aas
stos
movd
sub
outsl
cld
std
lahf
sahf
por
scas
stos
ret
jae
mov
jle,pn
cs
xlat
inc
call
jo
push
lock
lahf
dec
sbb
lret
enter
dec
mov
aam
dec
lret
in
pop
cld
push
mov
add
lds
inc
hlt
sub
mov
sub
repnz
jb
ljmp
in
adc
push
lahf
mov
scas
cwtl
dec
les
arpl
xchg
rcr
jno
out
shr
les
outsb
push
mov
mov
nop
mov
subl
aaa
cwtl
pushf
lds
lock
xchg
ds
dec
std
or
add
push
push
cmp
loope
push
iret
into
popf
rorb
mov
sbb
mov
push
push
adc
xlat
ljmp
mov
dec
je,pt
adc
xchg
mov
iret
cmp
jle
in
and
inc
jno
sbb
ret
jl
icebp
push
out
jecxz
push
pandn
xor
test
cmp
jne
inc
inc
out
sbb
out
dec
scas
mov
mov
xchg
fdivs
rcrl
sub
int
into
xchg
mov
sarl
jnp
ret
addr16
mov
das
fimuls
adc
xchg
jge
inc
jecxz
aad
or
je
add
adc
push
aad
cmp
test
ret
out
push
inc
out
sub
jae
cmc
leave
jmp
cmp
xchg
popf
adc
pusha
pusha
aam
sub
xchg
jne
cmp
das
dec
and
dec
inc
movsb
adc
jne
adc
or
cs
and
push
stc
or
dec
inc
scas
int
and
mulb
into
mov
add
jns
pop
mov
js
mov
push
push
sub
dec
mov
jle
mov
popa
movsb
popf
mov
jo
cmp
shll
subb
add
mov
jns
pop
loope
pop
mov
mov
rcrb
cmp
outsb
ret
mov
adc
push
dec
pop
xchg
sub
dec
test
rorb
sbb
sub
pusha
jmp
adc
scas
mov
filds
adc
int
fisttpl
pop
or
jnp
add
andl
ret
sbb
ja
cltd
add
dec
add
psubsb
xchg
push
add
xchg
jne
pop
pop
mov
out
cmc
arpl
dec
fadds
push
dec
push
mov
std
pop
mov
pop
mov
sbb
xchg
repnz
mov
dec
adc
lcall
fcomip
and
mov
sub
xlat
inc
lock
aas
ret
lret
mov
mov
sbbb
lret
jns
ds
lea
fistpll
fsubrl
fldenv
jno
jp
roll
mov
add
fidivs
notb
cs
xchg
lahf
in
xchg
adc
and
lret
sub
fs
mov
jno
clc
out
fwait
outsl
int3
fisubrs
sub
xchg
jno
and
sbb
insl
jnp
mov
mov
fmulp
sub
pop
mov
lock
rorb
jg
movsl
int
icebp
jns
frstor
rcll
iret
or
xchg
dec
cs
mov
jmp
sbbb
mov
loope
mul
clc
mov
mov
mov
xor
outsl
inc
mov
add
loope
push
frstor
jns
js
into
jp
and
out
xorb
fcoms
push
clc
mov
ljmp
lds
xlat
idivl
push
pop
xor
push
pop
mov
sbb
test
ret
mov
ficoms
je
cmp
xchg
out
cwtd
add
inc
xor
mov
pusha
loope
jecxz
loopne
movsb
fwait
jae
mov
pop
adc
adc
push
ret
mov
loope
pusha
sbb
stc
je
mov
xlat
sbb
and
inc
mov
inc
pop
mov
dec
and
cs
test
out
jge
mov
loop
sub
jl
sub
xchg
jbe
mov
out
push
mov
lock
inc
mov
mov
sti
mov
dec
pop
add
mov
rol
popf
pop
scas
push
sub
sub
pop
inc
in
inc
ret
popf
jge
jge
inc
adc
insb
xchg
push
movsl
ljmp
stos
fwait
and
les
addl
icebp
cmpsl
adc
mov
xlat
pop
fdivl
mov
rol
sbb
pop
faddp
add
arpl
dec
add
pop
nop
aaa
inc
adc
adc
cmpsb
dec
sti
mov
into
push
lahf
mov
inc
fdiv
sub
and
and
ret
aaa
xor
scas
cs
xchg
xchg
ret
and
lods
xchg
aaa
dec
push
inc
and
imul
mov
out
test
aad
or
dec
lds
cli
mov
aad
test
mov
adc
repnz
movsb
jp
psubw
cli
fistpll
xor
loope
mov
in
add
jns
inc
loopne
pop
decl
cwtl
out
mov
lahf
test
fsubrs
jno
add
cs
cld
push
cmp
js
inc
sbb
and
gs
orb
pop
mov
sub
js
lods
xchg
sbb
cltd
dec
pop
mov
cmp
or
in
shll
lods
xchg
loopne
inc
xor
adc
or
pop
dec
push
push
das
inc
ret
daa
les
sub
lret
vmread
in
outsb
aam
sbb
jmp
jns
insl
xchg
insb
sbb
shrl
xor
xchg
and
pop
repz
pusha
adc
sub
pop
xor
sub
iret
lahf
add
std
mov
out
fimuls
aam
hlt
mov
xchg
mov
jb
pop
and
xchg
xor
sub
sbb
fistl
ljmp
dec
jle
test
cmp
orb
icebp
arpl
mov
into
inc
dec
data16
mov
ds
pop
je
and
pop
xchg
popf
mov
push
mov
loope
loope
loopne
mov
mov
push
jge
enter
shl
add
or
bound
lock
pusha
cmc
shlb
xlat
sbb
jb
test
cld
loop
movups
sub
repz
shlb
adc
pushf
rcll
jg
dec
pop
jl
out
out
mov
jns
jbe
das
lret
rol
push
outsl
dec
dec
jnp
icebp
xchg
mov
cmp
popf
pop
int3
insl
repz
jge
cmp
inc
outsb
add
dec
xchg
out
lods
adc
icebp
push
lods
out
cmp
sub
pop
enter
dec
mov
push
dec
pop
int
pop
jno
cwtl
in
mov
ss
mov
jae
adc
jns
dec
mov
adc
push
pop
lret
sbb
xchg
rolb
mov
ret
dec
cmpsl
inc
in
inc
sbb
sbb
lcall
js
push
push
jb
lea
fimuls
sub
cmp
dec
scas
and
popw
das
pop
inc
mov
enter
pop
orb
orb
fwait
popf
bound
lcall
rcl
push
jbe
ret
mov
setp
jl
add
loop
in
jecxz
jecxz
xchg
pop
inc
inc
loopne
inc
inc
in
pop
jne
nop
mov
in
and
push
inc
ret
neg
xor
sbb
jle
es
mov
mov
sbbb
mov
sub
adc
std
pcmpgtd
sub
inc
lods
or
xor
and
adc
pop
or
cmp
lds
aam
cs
pop
sbb
test
inc
xchg
add
xorb
inc
mov
out
sub
pop
lret
rcll
in
ss
imul
dec
nop
jmp
jl
push
jmp
enter
std
out
jb
int3
iret
mov
ds
jb
mov
add
rorl
inc
cmp
cmc
xor
stos
cwtl
add
sub
sub
add
ret
or
xor
jge
call
adc
popa
ja
sahf
mov
in
es
rorl
pop
cmp
test
fstpl
push
out
jno
insb
sbb
or
adc
jmp
icebp
mov
xchg
sti
leave
jecxz
xor
push
bound
or
in
popf
push
out
das
aad
and
push
rcll
sbb
rol
adc
lcall
mov
and
push
adc
push
lods
pop
fidivl
jb
mov
fisttps
adcb
fcoml
std
or
jne
cmp
add
jl
inc
lods
cmp
dec
cmpb
pop
jnp
jae
aad
clc
inc
insl
dec
ret
ja
cmp
mov
dec
int3
sub
xlat
insb
mov
fildl
cmpsb
ja
add
sub
cltd
jmp
out
jg
cld
or
stc
pop
jne
push
mov
xchg
xlat
aaa
inc
mov
dec
movsb
insb
push
leave
cmp
sbb
xor
bound
fwait
aas
mov
sub
push
ret
fcompl
xchg
jne
movsl
sbb
cmp
adc
lods
movsb
adc
jp
sub
sub
mov
repnz
pop
sbb
out
jno
mov
loope
cmp
mov
test
jo
xor
push
arpl
mov
cmpl
pop
dec
add
jb
and
cltd
jb
sub
in
mov
in
xchg
and
push
idivb
out
fisttps
out
lahf
pop
loope
aaa
aad
aaa
xchg
or
push
add
xchg
or
sahf
inc
ljmp
xor
les
addr16
dec
fs
push
sub
mov
repnz
fstps
or
xorl
outsb
and
push
xchg
repz
enter
xchg
inc
inc
pop
lret
add
iret
add
adc
dec
fmul
mov
xlat
dec
insl
jns
mov
or
push
adc
movsb
repnz
daa
imulb
or
lock
xchg
rcll
xor
mov
mov
sbb
jecxz
sub
xchg
mov
subl
lcall
clc
dec
int3
sbb
push
ss
rcrb
cwtl
adc
add
lds
sbb
mul
cmpps
and
mov
mov
insb
xchg
lock
stc
or
pushf
fxch
and
inc
aad
pop
clc
mov
int
dec
cmp
dec
or
dec
jecxz
mov
jle
mov
repnz
idivb
idivl
jg
pop
xchg
fists
rcrb
or
push
fcompl
push
push
sub
fcoms
sbb
repz
mov
push
pusha
or
test
mov
pop
xchg
data16
jge
cmovbe
cmp
int3
xor
sub
es
fucomip
mov
push
mov
or
imul
adcl
pop
insl
dec
and
scas
jb
rdtsc
or
insl
mov
rorb
out
in
jl
inc
sbb
loopne
sbb
dec
sbb
test
mov
and
sahf
lahf
add
or
sbb
imul
sbb
dec
cmp
scas
ficomps
fdivl
sbb
fs
mov
scas
inc
insb
idiv
outsl
movsb
inc
add
push
jg
fstps
sub
push
in
shr
dec
punpcklwd
jp
mov
aam
je
leave
or
enter
cmp
push
or
jl
jge
mov
pop
mov
push
and
mov
push
adc
ljmp
pop
cmpsl
push
sti
mov
test
push
hlt
or
jno
push
or
add
mov
lcall
and
aaa
xor
mov
pop
fisubl
sub
stc
sub
push
add
inc
sbb
xchg
xchg
lea
mov
outsl
je
cmpsl
gs
jae
sbb
and
sub
stos
cmp
test
cltd
lods
jmp
push
cmp
or
dec
movsl
ret
xchg
lods
add
jl
xlat
inc
dec
add
sarl
or
movsl
sbb
std
mov
clc
sbb
adc
ret
lahf
testb
jg
enter
push
cs
dec
dec
cli
test
cmc
mov
movb
gs
shrb
pushf
gs
lret
clc
xor
js
sub
jecxz
fstl
and
arpl
insl
scas
outsb
bswap
push
lahf
jmp
mov
push
js
pop
sbb
jmp
sub
int
mov
jno
sub
rorb
cmp
mov
jb
cmp
or
jl
sub
dec
jbe
lods
pusha
icebp
shlb
outsb
sti
notb
mov
in
test
movlps
pop
push
lea
ret
pop
sbb
sti
cmovl
pop
lcall
loop
scas
test
pop
dec
es
ljmp
mov
movsl
fsub
adc
ja
call
bound
inc
lock
xchg
xor
ret
and
mov
nop
jae
add
mov
cmp
sub
pushf
loope
add
jle
daa
push
mov
int
loop
xchg
dec
jge
xchg
sub
add
sub
or
push
mov
fists
roll
sti
pop
add
in
repz
mov
pop
jb
push
sarl
xchg
pop
mov
test
enter
adc
loopne
into
jg
mov
insl
push
repnz
adc
int3
mov
mov
in
sub
or
ret
shlb
mov
mov
daa
int3
xchg
popf
jbe
int3
jmp
xor
xchg
sbb
int3
lods
xchg
lods
cmc
push
push
dec
loope
addr16
jnp
mov
out
nop
pop
ret
in
clc
aas
mulb
mov
push
outsb
test
sti
xor
sub
jle
pop
das
pop
jae
xor
pop
std
lds
xchg
pusha
lret
ror
mov
aad
addr16
out
imul
or
add
les
faddp
int3
xchg
mov
aas
xor
stos
loop
rcrl
add
loope
stc
and
xchg
fbld
dec
mov
movsl
clc
jnp
leave
jo
and
popa
or
shl
sbb
rcr
out
js
stos
popf
push
ficoml
imul
xchg
and
roll
loope
xor
jb
mov
addr16
mov
mov
cs
out
jmp
aad
dec
cli
xlat
pop
aaa
or
and
fsubl
out
lcall
pop
mov
sub
add
push
shlb
mov
rorl
aam
jo
mov
sti
push
xor
cmp
jge
sub
es
pop
mov
sbb
lods
and
std
and
sub
and
daa
sbb
mov
pop
outsl
jno
ljmp
mov
ret
ds
fs
pop
or
jb
jg
mov
push
js
loopne
fwait
mov
fsts
push
jp
shll
lods
mov
and
stc
popa
mul
icebp
inc
shlb
lahf
cltd
sub
popf
inc
stc
test
insl
cmpsl
push
dec
mov
dec
loope
fcomp
push
cld
ljmp
mov
and
mov
pop
mov
push
enter
addb
jmp
pop
jo
flds
scas
negl
cs
dec
inc
dec
adc
daa
movsl
insb
dec
or
xchg
adc
sbb
bound
sub
cltd
cli
mov
mov
xor
push
inc
pop
stos
lods
movsb
push
mov
insb
fnstenv
mov
xchg
ljmp
jmp
in
inc
enter
inc
dec
pop
sub
cmp
sub
cmp
fwait
pop
lds
hlt
xlat
shll
clc
addr16
jecxz
fwait
cwtl
lcall
pop
inc
xchg
repz
inc
cmp
cmc
iret
aaa
mov
das
aas
aaa
loope
cmp
pop
cli
rcll
add
mov
mov
lods
xlat
addb
gs
jo
jecxz
mov
sub
dec
xor
out
aam
aas
cltd
mov
xchg
cli
fisubrs
pop
jmp
ret
jbe
es
sub
addr16
in
xor
push
push
xor
loop
loope
scas
je
add
dec
add
push
push
sahf
adc
mov
add
cs
mov
addl
dec
hlt
outsb
jg
push
sarl
fisttpll
jecxz
test
dec
subl
jnp
xchg
lds
fdivrl
mul
shll
out
xchg
hlt
push
or
lods
jno
inc
ret
sbb
ret
mov
insb
idiv
xchg
in
jb
xchg
pop
push
push
cmc
gs
jae
jecxz
sub
inc
lock
nop
add
pushf
pop
dec
mov
iret
insb
jecxz
data16
mov
dec
int
mov
jecxz
and
xor
jns
ss
inc
out
cmp
xlat
fs
pop
bound
xor
sbb
outsl
or
cwtl
mov
lea
dec
inc
arpl
ja
fsts
xor
test
mov
popf
cmp
fnstcw
ret
js
dec
push
and
pop
cli
gs
mov
mov
pushf
imul
sbb
sub
sahf
scas
and
mov
int3
into
aas
aam
jae
imul
sub
imul
lock
push
cwtl
adc
xor
adc
sbb
xchg
pusha
cli
imulb
xchg
lods
push
out
jnp
popf
cmc
and
xchg
xlat
or
mov
and
popa
int
xor
loope
icebp
loope,pt
loop
in
xor
mov
dec
cmp
jge
inc
xchg
adc
sti
dec
xor
mov
scas
es
fnstenv
mov
or
pop
ljmp
sbb
xchg
push
mov
fldenv
leave
or
rolb
mov
sahf
mov
pop
cmp
mov
jns
inc
jecxz
mov
shll
je
mov
add
cmp
lds
daa
pop
je
adc
shll
pop
pop
out
iret
pop
fcmovnb
testl
lds
push
mov
sahf
aad
in
jp
mov
out
dec
mov
mov
xchg
jmp
mov
fcomp
mov
sbb
test
das
mov
mov
mov
mov
fsubl
stos
jo
dec
wbinvd
lods
pop
inc
sahf
pop
in
adc
mov
in
incl
pop
cmp
ds
cmp
xor
mov
and
dec
int3
jmp
popa
mov
cs
rolb
js
xchg
call
cmpsb
cltd
aas
lret
inc
or
cmp
ss
and
pushf
or
push
ds
lods
lods
sbb
mov
add
test
and
pop
push
movsb
insb
or
aas
jns
iret
lcall
sub
rcll
daa
clc
mov
adc
shrl
insb
cmp
sbb
mov
leave
ds
push
ds
mov
cmp
movsb
xchg
and
xor
cwtl
push
mov
out
pop
mov
icebp
jmp
das
aad
xchg
jb
repz
sbb
sbb
outsb
fisubl
pusha
test
sub
jbe
mov
in
xchg
cwtl
fxch
int3
sahf
push
out
pop
adc
xchg
lea
sub
scas
enter
xchg
or
fcompl
ret
cltd
lahf
xchg
mov
test
out
dec
pop
jl
mov
js
mov
sbb
daa
mov
int3
xor
xchg
or
xor
add
sub
pusha
outsb
mov
gs
ss
jae
std
sub
daa
in
lahf
repz
mov
add
dec
insl
movsb
loop
mov
fldcw
cmp
call
and
rolb
out
lcall
adc
or
jmp
sti
jae,pt
addr16
test
mov
sbb
jbe
jno
dec
imul
pop
out
dec
clts
rcl
and
cmp
es
adc
loop
mov
xchg
xchg
pusha
dec
icebp
loope
cmp
imul
ds
mov
push
cmpsl
push
inc
cld
fwait
jns
addr16
xor
pop
rcr
or
cli
pop
test
dec
pop
mov
mov
xor
jp
or
imul
inc
lcall
push
xchg
or
sarl
je
out
testb
gs
jae,pn
jle
ds
inc
dec
insl
lahf
ja
inc
or
clc
loop
dec
addl
jle
mov
jmp
insb
cmpsl
in
pop
movsb
xor
lahf
mov
hlt
out
mov
or
and
loop
lods
adc
xor
cmp
xor
or
lds
push
mov
sub
mov
pop
adc
push
inc
ja
and
repz
mov
xchg
push
sarb
test
pop
pop
and
in
repz
cltd
mov
out
stc
xchg
sbb
push
push
test
outsb
ljmp
rolb
cmc
stos
sbb
shl
negb
outsb
mov
xchg
push
lock
mov
jmp
pop
xchg
cwtl
mov
or
cli
jge
add
dec
sub
fwait
dec
mov
mov
popf
push
push
or
and
mov
adc
mov
test
dec
inc
aam
icebp
sub
int
mov
add
aad
shl
mov
jnp
jne
cld
adc
sbb
push
jecxz
inc
stos
mov
push
inc
fdivrs
mul
mov
mov
or
rorl
test
xor
sar
push
jo
mov
or
dec
aam
xchg
mov
mov
xor
inc
and
jb
scas
jns
out
inc
mov
inc
test
push
mov
jb
sub
rol
inc
jnp
cmp
cld
in
test
das
jae
je
es
scas
dec
aad
icebp
mov
lock
push
shll
inc
jb
mov
in
stc
out
into
jp
icebp
movb
xchg
push
mov
je
or
adc
stos
lds
fnsave
mov
adc
pop
ret
mov
cmp
lods
xor
add
push
shrl
sbbl
mov
push
and
adc
es
xchg
mov
or
sub
dec
xchg
repz
iret
stos
daa
mov
sub
test
int
loopne
cli
ficomps
divb
lcall
cmpsb
stos
sub
inc
notb
mov
dec
das
rol
xchg
pop
daa
push
pushf
mov
lret
ret
inc
xchg
stc
into
cmp
sub
arpl
xchg
and
mov
dec
push
lods
adc
and
hlt
out
sub
push
repnz
lahf
xor
test
push
into
loopne
call
pop
pushf
insb
jae
xor
notb
jae
shll
mov
cld
ret
pop
sbb
adcb
xchg
enter
aaa
and
das
ja
ret
cld
jg
jecxz
jo
cmpsb
incl
jns
sbb
sub
faddl
mov
in
mov
push
dec
cmpsl
push
je
sbb
push
adc
adc
dec
mov
lds
dec
mov
push
xor
add
out
lods
xor
fisubl
out
test
test
notl
sarl
js
pop
out
inc
out
add
pop
xor
xor
sti
jbe
icebp
pop
stos
add
jmp
aad
jno
in
mov
sub
nop
cltd
popf
test
insl
or
xor
jl
ret
mov
xor
das
in
mov
popf
popa
enter
ljmp
cs
inc
mov
stc
pop
pushf
dec
add
inc
inc
test
xor
xlat
push
or
xor
jl
into
sarb
jmp
lds
or
insb
adc
add
je
adc
cwtl
out
jecxz
xchg
bound
or
rorb
mov
insl
jno
xor
subl
mov
and
mov
push
add
xor
cmp
adc
pop
dec
inc
outsb
rcpps
jne
inc
dec
push
repz
push
fiaddl
sbb
jns
sub
and
iret
fmull
push
and
notb
loop
push
sub
xor
inc
jbe
arpl
es
fdivl
scas
cwtl
stos
js
and
mov
jmp
jbe
jo
sbb
inc
xor
mov
adc
cmpsl
adc
dec
in
and
mov
gs
ja
out
rolb
sub
xchg
bound
stc
cmp
fldl
js
int
packuswb
out
xlat
ja
jnp
cmp
icebp
and
mov
and
arpl
adc
pop
push
ss
aas
cmp
mov
add
mov
les
lods
fisttpl
aam
sbb
seto
repz
dec
lock
inc
sbb
shlb
mov
out
fstpl
sub
rcrb
fildll
jg
sahf
std
fs
pop
movsl
orb
adc
push
hlt
lahf
in
jl
xor
call
daa
mov
lret
inc
jae
sbb
cmp
or
cmp
inc
or
jp
hlt
stos
mov
and
test
aas
jae
push
inc
les
mov
mov
sbb
jmp
cwtl
sub
aam
jmp
hlt
lret
inc
sbb
add
mov
loop
out
lock
jb
jmp
nop
das
pop
xor
fdivrs
pop
mov
icebp
and
xor
xor
fadd
aas
ret
sbb
lcall
add
and
mov
dec
nop
mov
xor
push
sbb
sbb
cmp
sub
jno
cld
mov
and
ja
fs
scas
cmpsb
jae
jp
mov
ja
mov
jne
add
scas
mov
pop
mov
xchg
addr16
push
dec
lcall
movsl
push
aad
test
push
cli
outsl
and
jmp
aam
mov
popf
cmp
clc
lcall
push
cld
in
insb
rcl
add
sub
sub
xlat
jle
dec
add
mov
pop
push
outsl
aaa
mov
ds
inc
mov
shlb
int
cld
sub
in
sti
adc
pop
mov
mov
xchg
jo
mov
aaa
jge
push
cmp
pop
mov
jnp
and
ds
loopne
cli
jle,pn
int3
rcpps
xchg
mov
test
lcall
cs
filds
mov
inc
mov
fmull
dec
or
and
jmp
into
pusha
cmpsb
or
arpl
rcll
test
push
das
ljmp
ds
js
rclb
out
repnz
enter
cli
out
push
jo
inc
out
xor
in
outsl
aad
sti
imul
cmp
jno
pop
stos
adc
pop
adc
pusha
stos
pop
cs
mov
add
int
aas
movl
adc
and
clc
cmp
icebp
ficompl
icebp
jecxz
or
inc
mov
cmp
mov
fwait
cwtl
sahf
aaa
sti
mov
dec
in
push
push
ljmp
or
push
out
subb
scas
mov
dec
cwtl
mov
es
inc
ss
jo
mov
and
sti
scas
jg
mov
jnp
cli
add
add
and
mov
cmp
lock
stc
push
ljmp
mov
lock
mov
pop
mov
adc
xchg
xor
loope
push
sar
fwait
lea
sahf
xchg
sbb
cmp
cltd
test
test
hlt
js
mov
lret
sbbb
out
stc
fimull
imul
ds
int
push
in
mov
mov
lock
aam
push
dec
mov
scas
dec
xchg
outsb
xchg
jge
sbb
jmp
mov
scas
jb
mov
push
testl
pop
mov
xbegin
imul
xchg
inc
pop
dec
ret
xor
mov
std
cmpsb
negl
or
inc
dec
xlat
xchg
xor
sub
ja
cmp
pop
xlat
adc
inc
pop
sti
addl
push
mov
int3
mov
adc
outsl
hlt
cmpsl
xchg
and
push
sub
or
inc
dec
mov
and
push
inc
filds
cmpsb
cld
mov
jecxz
shlb
in
ret
inc
jp
xlat
andl
enter
push
mov
inc
pop
sbb
fistpll
mov
pushf
fwait
push
cmp
push
or
scas
loope
cmpsb
sub
pop
scas
dec
jle
adc
test
arpl
lret
aas
and
mov
jg
sbb
sub
sub
mov
cmp
mov
xchg
scas
movsb
outsb
pop
mov
sbb
cmp
add
mov
cmp
fdivr
repz
jecxz
mov
cmc
rorb
sbb
xchg
xchg
ljmp
or
into
inc
lret
push
mov
cs
and
addr16
pop
cltd
repz
jge
out
xchg
pop
popa
jae
mov
roll
cmpsb
cmp
and
test
out
pop
push
xor
shll
int3
ret
push
sahf
xor
mov
add
xchg
dec
ja
test
std
or
cmp
dec
mov
adc
mov
mov
lret
pop
jle
inc
stos
aam
test
sub
add
pop
cmc
scas
jae
jnp
fcmovbe
mov
pushl
sbb
mov
mov
js
push
lret
pop
push
sar
and
cmp
jle
into
dec
cmp
dec
in
push
lret
aad
repnz
cmp
xor
or
add
je
mov
imul
imull
inc
sbb
test
sbb
mov
mov
mul
shrb
into
out
mov
loopne
xlat
es
xchg
cmpsb
jno
adc
and
insl
sbb
mov
jno
jb
insl
repz
push
adc
pusha
inc
icebp
je
add
pop
ret
cmp
dec
xchg
out
fsubrs
leave
lods
test
addr16
jnp
aam
cmp
mov
arpl
aas
mov
insl
das
cmp
or
sub
cmp
mov
or
jl
test
shrl
aad
leave
loope
adc
arpl
sahf
aas
mov
dec
gs
lea
nop
cwtl
mov
jbe
adc
fwait
sahf
sub
fnstcw
rorb
dec
aam
cmp
xlat
or
cs
lret
int
jae
adc
sbb
add
mov
int3
roll
in
sti
xchg
aam
and
nop
sbbl
shrb
adc
mov
push
adc
pusha
pop
outsl
insl
push
mov
test
xor
mov
sarl
test
jl
push
das
call
or
aas
adc
mov
xchg
or
int
sbb
mov
popa
push
sbb
fadd
data16
cltd
sub
popa
xchg
mov
adc
imul
mov
inc
cmp
int3
lock
jmp
ss
mov
roll
sub
mov
pop
cs
movlps
xor
movsb
inc
sub
addl
jge
mov
mov
cmpsb
jecxz
push
hlt
ret
mov
mov
imul
sbb
int
imul
cs
lock
jne
movsb
fs
gs
mov
adc
cmp
es
fsub
adc
dec
stos
xor
stos
xor
mov
jbe
insb
sarb
sub
sub
xor
lret
int3
sub
je
pop
stos
sub
shr
sbb
xchg
cmp
popl
inc
jmp
jns
out
je
test
or
test
lret
mov
incl
mov
rorb
stos
inc
mov
push
outsl
jne
fdivp
mov
dec
mov
or
adc
mov
dec
adc
jbe
pmulhuw
mov
mov
add
rolb
cmpsl
das
sub
mov
bound
xor
stos
or
test
leave
or
jo
stos
and
mov
ret
std
mov
mov
rcrl
scas
mov
inc
xor
push
jge
stos
add
mov
roll
shl
sub
mov
les
std
in
cmpb
adc
fs
outsb
ret
es
sub
adc
sbb
dec
xor
push
lods
loope
pushf
inc
mov
xchg
cltd
fbstp
push
adc
call
push
icebp
xchg
push
call
lods
insl
data16
ret
shr
movsl
xchg
lahf
cmp
dec
lret
ret
fs
xor
pop
jg
cld
mov
popf
inc
mov
push
xlat
xchg
cli
shll
dec
sub
mov
sbb
inc
dec
sbb
mov
scas
subb
in
push
fisttpll
imul
imul
lcall
js
push
push
mov
lods
lea
mov
sbb
pop
repnz
push
iret
aad
sbb
mov
stc
rolb
mov
pop
dec
pop
sub
lds
push
jns
jp
pop
or
cmp
ret
mov
cmp
mov
xchg
or
cltd
setge
and
adc
scas
mov
lods
pop
in
xlat
jmp
xorb
or
rorb
lcall
ret
xlat
cmp
jmp
mov
gs
movsl
mov
mov
mov
clc
cld
jmp
bound
dec
ret
fdivs
add
sub
adc
les
jae
mov
out
jne
jb
pop
sbb
adc
cmc
shlb
in
adc
rolb
sub
ds
into
arpl
frstor
out
rep
or
fucomip
mov
push
adc
xor
lret
pop
mov
lret
shl
ficoml
aad
dec
dec
adc
mov
adc
or
fisubrl
jo
lret
lea
or
pop
xchg
xorb
jg
scas
mov
insl
mov
jbe
test
cs
add
jnp
ss
pushl
xchg
stos
or
ja
and
repnz
idivl
xlat
cmp
jno
pop
mov
mov
jo
push
or
cmp
cmp
addl
cmp
test
shlb
sahf
lods
insl
jae
mov
cs
sbb
icebp
movsb
jbe
dec
push
mov
mov
stos
xchg
daa
popa
or
dec
out
cmp
xor
test
cli
sbb
jnp
inc
pop
pop
or
mov
push
dec
add
mov
stos
pop
iret
xlat
mov
add
insb
inc
or
jg
lret
gs
xchg
push
xchg
rclb
push
sbb
aad
add
xchg
dec
into
xchg
inc
push
jbe
mov
push
mov
roll
cld
xorl
or
out
fsubl
mov
sbb
lcall
sbb
arpl
add
mov
into
rorb
shrb
lds
pop
cmp
jle
pop
dec
scas
sbbl
jns
jle
in
fisubl
addl
cmp
pop
sbb
mov
les
aad
cmp
sarl
pop
int3
in
mov
lea
scas
jg
inc
fcom
add
pop
and
push
mov
jecxz
pop
push
incl
cmp
jbe
jo
andb
scas
mov
test
out
loop
in
pop
lret
cmc
cmp
mov
lret
fwait
push
ljmp
iret
xchg
inc
mov
mov
mov
je
xor
jle
xor
and
sbb
out
mov
mov
popf
or
pop
mov
aam
cmc
add
mov
xchg
jp
fcoms
ljmp
mov
xchg
jecxz
push
popf
push
arpl
mov
cmp
xchg
xor
push
add
push
cmpsb
cmp
ljmp
jnp
rcrl
das
cmp
xlat
sbb
js
or
shl
aaa
and
mov
mov
jne
std
xchg
mov
lret
push
loope
movsl
push
orb
decb
mov
and
sub
fldenv
jl,pt
cld
sbb
enter
sahf
repnz
rolb
cld
enter
pushf
fs
jno
mov
je
mov
scas
mov
adc
add
jmp
imul
push
out
cmpsb
mov
mov
repnz
xlat
mov
and
out
rol
xchg
mov
sbb
fldcw
and
fdiv
inc
mov
ss
cmp
add
enter
into
es
mov
fwait
cmpsl
cmp
cmp
jp
or
faddp
mov
xorl
xor
sbb
daa
jae
pop
insl
push
test
mov
xchg
test
and
fcomps
xorb
push
imul
ljmp
test
xor
sub
test
mov
add
scas
cmp
mov
adc
aaa
xchg
mov
add
lods
xor
xor
test
dec
sub
dec
push
mov
add
mov
imul
and
lret
gs
inc
int3
out
sbb
add
pop
or
outsb
nop
add
cmp
sysret
negl
mov
push
loopne
fwait
push
cs
outsb
outsb
pop
fwait
out
out
inc
popa
mov
leave
call
mov
adc
mov
js
adc
jno
in
and
inc
adcl
movsl
ljmp
loop
or
inc
ficoms
dec
mov
fcmove
js
push
sbb
lret
push
dec
mov
inc
dec
pushl
fcomps
lahf
and
mov
outsl
and
adc
loop
loope
das
fld
fldcw
pusha
int
inc
sub
fisttpl
shlb
jb
lds
and
cwtl
stos
jb
jle
mov
stos
jg
shl
les
xor
push
test
testb
and
pop
fs
test
into
mov
ss
and
out
add
dec
inc
jle
cltd
cli
xor
jns
jb
mov
mov
cltd
in
mov
jle
rorb
xlat
daa
outsl
mov
push
cmp
clc
mov
jnp
sub
cmpsl
daa
aaa
dec
push
jns
adc
or
int3
sub
jge
xchg
xchg
out
and
out
mov
push
loope,pt
and
in
imul
add
rolb
jbe
aam
cmp
sub
loop
or
ss
jne
xor
sub
sub
data16
es
jbe
adc
push
into
pop
cmp
xchg
dec
mov
outsb
dec
int
inc
mov
mov
adc
loopne
cmpsb
push
inc
cli
dec
inc
mov
loopne
pop
cltd
mov
js
inc
int3
mov
jle
sbb
mov
inc
cmpsl
fdivr
push
pop
push
imulb
sbb
pop
cwtl
shll
movsb
mov
jl
movsl
xor
or
adc
lret
movsl
mov
cwtl
adc
in
outsb
lds
popf
or
lret
aad
jbe
push
jno
fstpt
das
mov
jnp
imul
in
dec
add
scas
mov
or
mov
or
mov
push
mov
lcall
xor
je
test
rorb
mov
das
repnz
pushf
mov
mov
mov
mov
jb
xchg
cwtl
sub
xor
or
jo
or
adc
xlat
mov
or
je
imul
xor
je
ljmp
fadds
xchg
mov
daa
xor
in
cmc
lea
sub
fadd
push
mov
aam
rcl
xchg
jmp
sub
mov
insl
fwait
sub
mov
in
adc
cs
inc
ja
lret
pop
sub
pop
jle
pop
aaa
leave
jmp
cmp
loope
sbb
pop
dec
inc
pop
xor
push
add
sahf
pop
pushw
xor
mov
xchg
fisttpl
pushf
pop
pop
add
add
fisttps
aad
mov
jae
mov
push
and
sbb
pop
push
mov
iret
movsb
dec
out
xor
inc
fsub
popf
lea
scas
mov
xchg
sti
dec
addr16
xchg
imul
fstp
fs
xor
xchg
aad
lds
sahf
and
es
add
and
cli
cmp
fsubrl
es
pop
cmc
bound
sub
test
scas
xchg
int3
addb
adc
aad
in
mov
or
cmp
subb
ljmp
imul
pop
clc
xlat
mov
test
out
test
pop
xchg
stc
push
push
push
sti
sub
out
bound
pop
mov
xchg
add
sub
cltd
jecxz
aaa
shl
sub
push
loop
lret
xor
xor
cmp
push
roll
and
hlt
xchg
mov
jb
pop
xchg
xlat
dec
in
add
bound
in
test
les
add
jns
xlat
into
sub
sbb
and
xchg
popf
xchg
test
xchg
mov
or
inc
lea
add
std
xor
into
sbb
call
xor
mov
pusha
lcall
jle
mov
pusha
push
cmp
sub
sbb
sti
icebp
and
out
cmpsb
xchg
push
cmc
outsl
sub
cmp
fiaddl
sbb
enter
mov
jl
sbb
popa
sub
iret
stos
xchg
inc
ds
push
mov
push
stos
test
ficoms
fdivp
imul
mov
adc
roll
dec
stc
jecxz
mov
shr
sbb
mov
push
pop
xchg
pop
insl
sub
sti
ss
scas
int3
fnstenv
dec
cmp
popa
jg
mov
xor
call
popl
xchg
test
adc
cmpsl
out
lret
mov
inc
xor
scas
cs
out
or
mov
xchg
dec
imulb
jmp
in
lods
or
in
push
push
pop
push
sub
or
bound
sbb
lret
dec
xchg
cwtl
xchg
jge
push
test
dec
xor
lcall
int
lahf
xlat
mov
mov
inc
sbb
sbb
push
lret
xchg
mov
and
sub
cwtl
add
jg
in
lods
push
lds
mov
and
lea
outsl
ss
jb
test
dec
out
fldenv
loop
test
pop
fdivr
clc
iret
fucomip
aad
out
pop
nop
pop
movsb
insl
outsb
fwait
int
cmp
xchg
fdivrs
dec
fwait
jmp
das
inc
icebp
aas
loopne
pop
movsl
out
sbb
iret
push
push
cmc
fst
pop
int
fs
cld
dec
in
int3
adc
daa
test
sti
jb
xchg
jmp
xchg
dec
inc
cmp
movsl
pop
dec
mov
dec
xor
sbb
das
dec
pop
and
test
and
sahf
cmp
sbb
pop
popa
lods
jne
mov
cltd
jne
mov
nop
adc
xchg
ret
pminub
mov
paddd
sbb
aad
add
sarl
cmp
negb
inc
idivl
inc
out
or
in
mov
mov
xchg
pusha
sbb
fwait
and
cmp
xchg
or
push
sbb
xor
sub
pop
rolb
xchg
fldt
xor
pop
addl
stc
je
xchg
mov
mov
stos
or
loop
xor
out
sahf
nop
shlb
lock
das
and
cs
iret
jp
push
es
xchg
aas
aaa
lods
or
pop
inc
sbb
mov
xchg
or
stos
imul
imul
rorb
icebp
insl
sbb
testb
inc
pop
lcall
add
pop
mul
inc
subb
push
dec
fs
hlt
out
cmp
mov
lahf
jl
lea
cmpsl
xchg
inc
and
push
stos
ficomps
xchg
icebp
psllw
stos
test
fcompl
popf
stos
pushl
es
fmull
lcall
into
shrl
push
lahf
fwait
mov
ss
mov
mov
xchg
mov
mov
adc
cmp
clc
mov
xchg
adc
enter
pop
cld
outsb
xor
stc
adc
in
shll
les
hlt
push
jnp
lea
out
push
cs
add
in
jecxz
popf
fsubrs
add
enter
sbb
cmp
cmc
lret
mov
mov
adc
outsb
int3
mov
pop
inc
xor
ds
in
movsl
mov
aad
movsl
cmp
into
and
dec
cs
enter
popa
out
xchg
push
mov
sub
adc
push
xchg
orb
out
aam
add
aam
mov
dec
jns
pop
mov
mov
push
add
xchg
add
dec
clc
cs
loope
pop
outsl
xorl
lahf
push
scas
and
or
frstor
mov
adc
jle
sbb
sub
push
adc
mov
psubsw
js
mov
leave
mov
jbe
mov
fwait
cmp
in
mov
mov
ret
inc
jbe
mov
in
shr
lret
jno
ret
sub
or
or
adc
mov
cli
push
mov
mov
xchg
mov
mov
clc
fs
fs
in
sbb
push
shll
and
xor
push
mov
inc
mov
popf
imul
inc
xlat
mov
xchg
add
xor
mov
in
and
pop
cmpsb
gs
push
test
loopne
adc
xchg
decl
lret
int
cmp
cmpsb
or
jecxz
jp
mov
push
fcomp
outsb
lods
repz
adc
lret
push
mov
lock
sbb
scas
mov
or
addr16
mov
sbbl
mov
push
push
jmp
jo
or
inc
test
mov
cmpsb
fnstenv
or
cmp
orl
out
pop
daa
bound
jge
popa
push
pop
fs
push
scas
pop
inc
mov
lods
add
xchg
add
adc
jns
xchg
clc
sub
mov
push
test
jo
js
sbb
test
cmpsl
mov
push
es
dec
jne
cmp
in
ret
daa
insb
cvtps2pi
pushf
bound
pop
aad
out
adc
pop
mov
in
movsb
cltd
imul
dec
in
pop
data16
shlb
mov
pop
mov
add
mov
iret
pop
cmpsl
int
fcoml
mov
movsb
dec
stos
push
xchg
mov
and
aaa
xor
xor
fisubs
hlt
scas
push
lcall
add
lret
mov
rorl
mov
test
ficoml
push
adc
cs
pop
mov
test
nop
scas
xchg
inc
pop
movsb
pop
xchg
mov
gs
and
aad
mov
cmpsl
xchg
jb
lea
faddp
mov
cmp
pusha
jp
inc
idiv
mov
icebp
and
ljmp
push
sbb
dec
fwait
ljmp
jg
jo
aaa
das
cwtl
bound
das
cmp
cld
lahf
pop
dec
cmp
inc
cmp
test
sub
les
mov
jg
lock
movntq
and
imulb
mov
int
add
cmpsl
sahf
mov
shll
ss
adc
adc
in
pop
test
cli
jb
cltd
daa
dec
imul
mov
and
sbb
push
adc
sub
sbb
fistl
jecxz
js
cmp
nop
icebp
cmp
imul
popa
adc
out
test
xor
stos
std
lahf
cmpsb
mov
sbb
adc
push
xchg
int
imull
cwtl
loop
decl
or
cmp
push
es
data16
cmc
xchg
xlat
mov
mov
into
test
add
inc
lea
in
cmp
sbb
std
jb
rdtsc
jle
out
imul
aad
inc
jle
inc
xor
xor
outsb
pop
int
into
lret
push
notl
sbb
clc
repz
dec
loope
dec
sub
cs
mov
inc
pop
adc
mov
daa
iret
into
mov
loope,pn
ljmp
call
xor
ret
inc
scas
imul
sbb
or
mov
test
mov
xlat
cmp
out
subb
push
ds
and
ds
rclb
je
call
cs
sub
jecxz
mov
xchg
mov
xor
rcrb
movb
ficoms
jnp
mov
sbb
jne
cmp
push
and
pop
push
lods
nop
xor
popa
fdivs
add
shrb
call
and
or
daa
add
mov
dec
pop
pop
in
lea
lds
inc
insl
or
jp
movl
mov
mov
test
rolb
inc
cmp
fsubs
scas
cmpsb
imul
imul
sbb
inc
inc
cmp
test
popf
sbb
jge
xor
out
inc
push
arpl
mov
shrb
or
sarl
xchg
rolb
sbb
xorb
in
ljmp
mov
fbld
cltd
sti
cwtl
xchg
out
nopl
bndstx
mov
lock
orl
aas
imul
lods
aam
fstl
cmp
adc
jae
xchg
jge
aam
daa
mov
push
jle
mov
add
sub
xor
xchg
pusha
lretw
xchg
mov
pop
aad
aaa
jge
mov
in
xor
sbb
jle
xor
mov
js
xor
cli
daa
pop
int
out
orps
notb
sub
sbb
loop
and
aas
push
or
rcrl
xor
adc
loop
loope
fnstsw
inc
cmpsl
out
cwtl
and
sbb
repnz
movsl
aaa
inc
mov
adc
outsl
and
adc
scas
push
push
mov
js
jp
dec
add
xor
cmpsl
xor
lahf
addl
push
sbb
jmp
test
ljmp
mov
mov
out
sub
in
data16
in
test
jge
sub
jle
mov
stc
xchg
dec
out
sub
pop
pushf
je
in
faddl
add
mov
and
std
lods
frstor
into
shr
movzbl
mov
push
dec
sub
push
mov
push
mov
test
push
cmpsb
ret
mov
or
xor
stos
dec
popa
enter
pushf
test
mov
adc
mov
xchg
xchg
test
cmp
sub
divb
dec
dec
and
push
sbb
adcl
clc
mov
arpl
popa
cmp
sbb
or
rclb
mov
aad
or
sbb
fld1
pusha
sub
pop
imul
pop
or
fistpll
repz
imul
dec
je
jecxz
or
jnp
loope
ret
es
push
add
jge
sbb
rcll
xor
out
test
sti
mov
imul
push
push
cmpb
jno
pop
data16
or
and
add
jne
add
leave
test
xchg
sub
jnp
adc
insl
inc
mov
aaa
cmpsl
movsb
add
ret
pop
cmpsb
sbb
call
movups
and
add
mov
into
xchg
xchg
push
in
aaa
ljmp
inc
mov
adc
ljmp
daa
sbb
inc
and
adc
cmp
xchg
rclb
rcr
inc
pop
and
call
daa
cltd
data16
xor
jl
aam
addr16
and
ss
inc
pushf
lods
inc
mov
lds
mov
push
lock
jno
sub
dec
lcall
push
out
ret
mov
xor
cmpsb
fimull
sti
mov
mov
ljmp
into
sbb
mov
aaa
and
push
das
cltd
ljmp
mov
dec
std
xor
or
js
add
pop
nop
xchg
add
loop
adc
dec
mov
adc
dec
sub
and
leave
sbbb
and
shr
hlt
mov
lcall
xchg
and
push
lock
aas
mov
decb
test
or
call
ja
icebp
sub
lahf
push
mov
mov
mov
push
jbe
movsb
jge
mov
xor
jecxz
dec
popa
fistpll
bnd
mov
filds
cmp
cmp
repnz
push
jl
mov
adc
movsb
repnz
rcl
dec
ss
int3
pushf
cmp
push
repz
call
cmc
rcl
xor
cmp
inc
mov
pop
add
mov
pushf
and
sbb
xchg
je
sub
or
or
jp
arpl
test
push
gs
xchg
xor
jb
cmp
inc
mov
xchg
dec
sub
mov
cmpsl
cmp
jno
pop
cmp
sbb
mov
fildll
in
jb
xor
cmp
add
cmp
sub
dec
daa
hlt
rcrl
push
stos
and
pusha
jns
add
pop
add
outsb
pop
mov
or
sub
cli
ficoml
lods
out
std
out
jae
dec
sbb
jb
inc
sarb
sbb
stc
lods
repz
mov
push
and
push
loope
ss
aas
mov
les
lods
cmpsb
aaa
fistps
mov
add
mov
and
aas
je
xorb
pop
adc
loop
jnp
sbb
rcll
out
push
xlat
dec
and
jge
mov
mov
mov
add
add
jns
mov
subb
popa
lcall
adc
xchg
sbb
mov
in
sub
sub
and
cmp
out
jb
mov
jg
add
lret
or
sbbb
push
adc
je
inc
js
or
and
pop
arpl
dec
push
adc
int
lods
stc
xlat
xchg
push
outsb
fiadds
mov
or
xor
movsl
outsl
inc
cmp
aaa
cwtl
mov
jmp
inc
jbe
adc
xor
ja
mov
stos
daa
pop
out
hlt
jg
pushf
cwtl
cmp
and
mov
cmpsl
scas
ds
fcmovnbe
cmpsb
pop
mov
or
pop
inc
or
insl
rcll
mov
mov
imul
insb
lods
inc
gs
push
and
cld
and
repnz
fcoms
adc
jnp
roll
es
fdiv
push
test
cmpb
pop
push
lock
adc
test
int
dec
out
cltd
cmp
test
mov
pop
pushf
or
mov
mov
or
xchg
ljmp
pop
dec
aaa
pop
cltd
and
sub
mov
push
shlb
pop
add
cmpsb
cmpl
outsb
sub
inc
mov
push
push
addr16
cmc
out
popa
mov
sub
and
mov
pop
xor
mov
es
inc
out
jnp
lret
or
and
leave
mov
repz
js
aas
jbe
xor
pushf
mov
jp
push
jo
aad
mov
inc
cmpsb
lods
out
lods
push
mov
roll
cld
inc
enter
iret
jnp
inc
mov
inc
adc
push
ja
push
mov
and
mov
adc
iret
lods
adc
pop
out
test
dec
sub
pusha
lock
push
mov
cmp
add
lcall
pop
aam
inc
inc
fsub
cmp
xchg
repz
scas
in
les
add
insb
in
lret
lods
lea
xchg
insb
out
call
fwait
inc
in
movsb
sub
cmpsl
jg
push
mov
mov
icebp
mov
sub
cltd
iret
ret
xlat
adc
or
testb
ja
mov
xor
and
insb
and
mov
lock
and
add
cmp
xchg
pop
cmpsl
jnp
xchg
push
out
add
cmpsl
in
test
jecxz
aaa
adc
stos
in
sbb
pop
xchg
add
fidivrs
inc
and
popa
stc
lret
mov
lods
mov
clc
fldt
or
mov
out
ljmp
inc
xor
lds
pop
cmpsb
add
push
pop
jecxz
loopne
jp
inc
xchg
aaa
fdivrl
push
sarb
stos
fsubs
addr16
dec
xlat
aad
stos
arpl
and
mov
stos
test
sub
sbb
bound
mov
sbb
cmp
and
jecxz
or
inc
shll
mov
dec
push
cmp
adc
or
insl
iret
sti
mov
jo
out
pop
sbb
cmpsl
cmpsb
push
fs
xor
das
std
ret
pop
xchg
fwait
mov
cmp
mov
cmpsb
mov
aas
orl
rcrl
loopne
leave
lock
arpl
pop
rol
ja
fiadds
push
test
das
cs
xchg
icebp
add
mov
dec
add
add
mul
sbb
clc
rcrb
adc
and
ret
xchg
test
in
pop
sbb
mov
iret
cmp
xchg
pop
imul
or
xor
shrl
gs
add
movsl
inc
rorb
cmpsl
dec
sbb
fnsave
mov
jne
sbb
loope
shr
jg
sti
cmp
into
cmpsb
pop
jl
push
in
mov
in
fwait
xor
mov
inc
in
xor
scas
stos
test
sub
into
xchg
imul
xchg
rorl
imul
jl
jno
bound
andb
lods
xchg
cs
orb
xchg
cld
pop
jo
mov
rclb
out
pop
xor
stc
ja
shrb
pop
pop
xchg
aaa
mov
push
fs
jecxz
inc
mov
inc
pop
jecxz
enter
sub
test
inc
lods
xchg
cmp
inc
mov
cld
push
and
jno
imul
xchg
mov
sbb
enter
add
or
out
lret
pop
sahf
jbe
cmp
adc
in
jmp
cmc
cld
sub
push
fptan
add
dec
testl
ljmp
in
gs
popa
jno
mov
mov
sub
inc
sub
into
fistpl
out
movsb
dec
mov
in
stos
push
lds
mov
xchg
rcr
and
push
sar
insb
fmul
pop
dec
jbe
jbe
idivl
fcompl
icebp
push
js
outsl
cli
test
jo
xchg
addr16
lret
mov
pop
aam
jns
imul
std
imul
cmp
push
cmpsb
or
sbb
loope
pop
cmp
push
stc
andl
enter
pop
xchg
add
out
outsl
ljmp
movb
jns
or
out
rcrb
gs
jbe
icebp
test
stc
pop
clc
leave
jecxz
inc
and
inc
mov
loop
xchg
fcomp
imul
adc
mov
dec
fs
pusha
stc
divb
jae
sbb
aas
mov
pushf
addr16
imul
jnp
mov
inc
and
xor
shll
notb
bound
stc
fmul
cmp
pop
rolb
in
loop
cmp
adc
int3
enter
rclb
push
sub
sub
mov
xor
fwait
push
inc
popf
and
jns
clc
lea
loopne
out
scas
inc
int3
pop
push
mov
jmp
jecxz
imul
fdivr
rcll
pop
or
loope
repnz
stos
inc
dec
ficomps
cld
cmp
enter
aam
xor
pop
das
mov
mov
adc
inc
outsb
fbld
andb
das
and
es
push
addl
mov
pop
or
push
jbe
test
dec
scas
mov
ret
cmp
out
aas
jmp
ljmp
sub
fstpl
mov
pop
lock
jle
push
cmp
ret
mov
xchg
dec
mov
jo
add
and
mov
xlat
js
jge
mov
xor
pop
mov
mov
jo
les
sbb
fldenv
adc
sbb
loope
dec
push
cmp
into
js
and
int3
mov
mov
addr16
inc
cmpsb
and
jl
movsb
lahf
xor
in
and
inc
fwait
jns
inc
jp
sbb
mov
je
dec
inc
push
lock
xchg
mov
daa
scas
push
jle
out
in
loope
sbb
out
mov
loopne
inc
insl
fwait
jns
test
or
inc
sbb
repz
push
jb
pushf
dec
inc
and
sbb
lfs
add
out
pop
aas
xchg
mov
mov
ljmp
cmpsb
pushw
or
and
bound
dec
jecxz
pop
sub
outsl
sub
or
fmul
cmp
add
mov
and
sub
mov
sbb
popa
lfs
pop
insb
in
mov
dec
push
inc
clc
push
and
decb
stc
insl
cmpsl
ret
jb
lret
cmp
rcrl
test
xchg
repnz
iret
test
call
adc
lcall
mov
jp
rorl
or
or
aaa
adc
pop
pop
jno
pushf
mov
nop
sbb
sub
sub
and
ss
sbb
fcomps
iret
ds
test
gs
and
cmp
pop
or
sub
daa
stos
idivl
ja
cmc
pop
cmpb
sarl
stos
lret
add
sbb
sbb
add
ds
lret
dec
xchg
pop
push
fdivrs
mov
mov
jo
ss
insl
cmp
or
rcl
loope
int
fstl
cmp
jne
adc
out
xchg
cmp
and
mov
fcmovbe
ss
or
repz
test
push
js
xchg
sti
cmp
ffree
jle
cld
aad
mov
add
jp
or
jnp
out
and
xor
sahf
stc
aam
sbb
pop
xchg
xor
fs
pop
inc
les
mov
pop
mov
jp
mov
and
or
data16
shrb
shll
or
cwtl
addb
add
rclb
out
notb
sub
mov
xor
or
jns
lods
jae
mov
sbb
mov
jle
push
aaa
cmpsb
mov
add
pop
pop
xor
sti
outsb
cmc
loop
cmp
mov
fbld
xorl
mov
or
popf
in
inc
mov
rcll
dec
mov
aaa
xchg
inc
shrl
push
inc
or
cmp
mov
mov
xchg
cli
push
dec
add
ja
jl
std
mov
jmp
daa
xor
in
jns
lret
nop
cmp
dec
sub
test
mov
out
mov
mov
repnz
mov
cmp
inc
aam
mov
inc
xlat
fwait
cmp
std
test
imul
or
cmp
mov
sub
and
jmp
mov
jbe
push
inc
cmpsb
push
insl
sub
ja
jg
dec
movsb
or
or
xor
stos
mov
repz
adc
jnp
pop
popf
ret
push
imul
insl
iret
stos
jmp
repz
call
cmp
dec
cwtl
mov
add
xor
rcll
push
xchg
mov
push
mov
insb
mov
cmp
xchg
push
inc
jl
bnd
sbb
lea
leave
pop
les
cltd
cwtl
loop
push
pop
dec
rcrb
cmpsl
mov
mov
cmpsb
xor
mov
dec
add
fsubl
mov
mov
adc
push
mov
gs
inc
out
dec
ds
mov
mov
pop
in
testb
idivl
ss
lahf
ds
or
mov
aaa
lds
cltd
outsb
sbb
insl
imul
xchg
das
lds
mov
add
int
jg
jne
sub
push
aaa
add
and
cmp
adc
mov
rorl
push
dec
inc
stos
xchg
ret
insb
cltd
jmp
mov
sub
mov
lods
fmull
fwait
fwait
sbb
mov
out
mov
sub
mov
out
mov
cmc
es
push
in
cs
xlat
ret
inc
and
ret
mov
in
in
jl
lods
add
je
sbb
add
mov
adc
out
pop
stc
jb
int3
push
js
adc
mov
and
jge
jl
hlt
add
jno
jp
and
sti
lret
xchg
mov
addr16
jge
and
aad
ficompl
jl
mov
lods
out
xchg
mov
jno
nop
sub
jb
out
xchg
scas
jp
lods
flds
add
lds
add
add
fdiv
aad
pop
jae
mov
mov
cli
dec
lea
push
imul
jae
inc
mov
pop
xlat
or
or
lds
push
test
mov
lret
cmp
lret
sub
lret
sbb
in
push
bound
push
lds
popf
adc
and
mov
cmp
bound
imul
pop
mov
cmpsl
out
lea
sub
outsl
iret
inc
xchg
or
push
push
out
lahf
imul
stos
jecxz
pop
xchg
cmp
movsl
sbbb
into
jb
push
xchg
mov
lds
sub
aaa
lods
jg
je
mov
sbb
mov
out
rcl
push
ja
mov
stos
daa
frstor
movsl
sbb
rcl
in
mov
add
fcmovnu
cmp
hlt
jb
movsb
scas
mov
jne
push
popa
inc
sbb
lods
fs
xchg
in
push
jecxz,pn
xchg
in
or
push
dec
pop
gs
call
not
mov
sub
mov
mov
je
and
mov
mov
adc
mov
sbb
jae
pop
xor
test
sbb
mov
fisubrl
ret
sbb
sub
push
sti
sti
movsb
and
mov
subl
sbb
stos
or
sbb
push
jb
push
add
pop
lahf
sbb
mov
xchg
outsb
inc
inc
in
xor
jmp
add
test
int
pop
mov
nop
jno
and
subb
loope
in
nop
test
and
je
add
inc
jle
in
scas
scas
jb
xchg
fbstp
out
mov
ds
nop
inc
sti
xchg
dec
movsb
sub
out
inc
adc
jbe
sti
int
cmp
test
mov
in
add
lcall
enter
out
mov
xchg
push
rcll
stos
shl
arpl
scas
push
cld
push
into
movsb
imul
outsl
dec
pop
jg
inc
sbb
mov
imulb
push
pop
cmp
pop
ja
pusha
out
xchg
into
push
scas
gs
je
jnp
xchg
xchg
mov
pop
in
mov
or
or
inc
lods
and
add
mov
loop
in
jo
mov
inc
add
dec
movsb
scas
lcall
addr16
stos
jmp
mov
sbb
mov
cltd
push
mov
std
dec
enter
cmp
imul
mov
mov
dec
mov
movsl
sbb
addb
inc
aaa
pop
pushf
jae
jl
pop
sub
test
sahf
xchg
sbb
pop
insb
push
mov
pop
inc
int
fucomip
imul
dec
pop
adc
scas
add
sbb
sub
xchg
int3
test
lcall
sub
jmp
mov
in
or
jecxz
insb
mov
call
into
pop
icebp
push
out
mov
scas
ljmp
out
je
stos
imul
sub
push
call
scas
inc
imul
inc
jmp
popf
pusha
add
fadd
sahf
adc
clc
js
xchg
add
pop
adc
rolb
inc
add
dec
enter
push
cmpsl
scas
mov
jbe
pop
repz
call
dec
stc
xor
das
aam
dec
and
cltd
jb
out
outsb
bound
mov
ljmp
call
gs
loope
inc
lret
iret
add
jge
loopne
mov
faddl
cmc
cmp
cmp
add
mov
stos
cmp
adcl
inc
xlat
ret
pop
lds
fwait
cwtl
sbb
ja
dec
fdivl
leave
addr16
rolb
stos
fisubs
les
out
sub
jno
sbb
repz
clc
rcr
sub
sti
xchg
stc
ficoms
jp
sbb
pop
pop
xchg
mov
sbb
mov
mov
lock
sub
xor
pop
inc
dec
adcl
fwait
push
neg
fisubrl
add
and
and
mov
stos
out
fwait
inc
call
pushf
fldenv
cmp
pop
outsl
or
iret
loope
jbe
cmp
sub
mov
loope
inc
or
in
sar
fs
sub
mov
popf
das
lret
frstor
cli
pop
push
push
inc
mov
in
or
mov
lods
xor
sbb
mov
or
adc
scas
cmp
movsl
popf
mov
mov
xchg
xor
js
dec
enter
push
out
notl
imul
insb
sub
mov
cmp
mov
int3
sub
imull
in
xlat
jp
push
je
and
pusha
pop
sbb
adc
movsb
js
cmp
jne
inc
sub
nop
cs
mov
pop
push
mov
and
dec
and
or
icebp
push
mov
push
push
repnz
push
cli
sub
xor
ds
jns
inc
jne
sbb
dec
stos
inc
and
sar
push
or
test
jne
aad
loop
lods
out
push
add
mov
lea
fldcw
jbe
sbb
enter
ret
jns
or
mov
loope
orb
xorl
stc
dec
dec
shll
mov
ret
pop
rolb
lret
in
test
mov
ret
std
pop
rcl
cwtl
nop
mov
inc
test
dec
pop
push
repz
adc
in
jmp
mov
in
push
dec
inc
and
mov
adc
adc
push
add
cmpsb
cwtl
adc
jmp
call
ss
aam
jmp
lea
lods
push
mov
ffreep
pusha
sbb
movsl
dec
add
xchg
mov
fbstp
inc
add
ljmp
dec
xor
push
repnz
and
mov
or
lret
stos
in
sahf
or
cmp
jb
std
cmpsl
mov
loop
add
shlb
shrb
mov
out
inc
and
or
add
sti
popf
push
insl
das
not
rcr
mov
pop
cmp
mov
xchg
mov
pushf
stos
jmp
xor
mov
dec
loope
in
mov
int
testb
adc
shlb
dec
jae
jp
frstor
jns
cmpsb
popa
xchg
push
pusha
insl
addb
xchg
icebp
fcmovu
xor
pop
mov
or
pop
jmp
nop
mov
jle
insl
push
push
push
sub
push
hlt
lds
mov
leave
dec
and
fbld
dec
xor
bound
pop
sub
mov
movsl
push
sub
xor
sar
addb
fmull
dec
sbb
lret
mov
test
dec
adc
inc
pop
stc
mov
cmpsb
xor
add
dec
ror
ds
nop
js
das
pop
loop
leave
sbb
jmp
xchg
scas
mov
dec
mov
lods
dec
xor
jp
out
add
xchg
lret
in
pusha
test
cmp
neg
cmp
push
and
rcll
mov
lcall
inc
dec
jle
and
sbb
and
cmp
mov
xor
pop
add
jbe
in
mov
jmp
nop
sahf
gs
js
repnz
or
cmp
push
pop
pop
aad
nop
sbb
sti
mov
sahf
push
sub
mov
inc
inc
xlat
push
or
test
pop
xchg
loope
push
in
push
rorb
pop
popa
push
lcall
xor
outsb
cwtl
mov
aad
sub
push
fs
ja
xchg
mov
test
mov
arpl
lock
lret
stc
mov
mov
test
fimull
cmp
push
mov
xchg
insb
das
shll
cmp
shlb
ror
and
sub
or
inc
popf
test
or
mov
repz
xchg
testl
pop
stc
sbb
adcb
fnstsw
push
lods
das
mov
pop
mov
dec
sub
jg
inc
int3
mov
test
mov
jbe
jmp
sarb
loop
push
dec
in
popa
sbb
test
and
in
stc
jecxz
lock
inc
xchg
fimuls
cmp
xchg
sub
pop
inc
inc
loope
fiadds
loop
rorl
adc
je
cld
sub
adc
sub
adc
icebp
push
add
inc
dec
dec
addr16
inc
movsl
jg
push
adc
aas
cmpsl
outsl
inc
out
sub
jmp
mov
inc
imul
pop
cs
lods
dec
test
sub
sahf
sbb
cmp
imul
inc
pop
mov
cltd
iret
outsl
jle
inc
xor
in
mov
ja
jo
cld
dec
mov
pop
adc
mov
push
pop
pop
sub
fisubrl
sahf
xchg
cmpl
ret
ss
push
cmp
test
mov
dec
and
mov
jmp
repz
lret
mov
sbb
jle
cmp
nop
sub
subl
mov
and
push
and
pop
out
xor
aad
dec
xchg
sbb
stos
push
sbb
scas
add
pop
std
mov
imul
js
stc
ljmp
nop
leave
sub
mov
sbb
loopne
jle
scas
fisubl
sub
daa
cmp
int
lret
xchg
in
lret
xchg
inc
call
scas
ja
and
cld
pushl
dec
sub
pop
and
add
pop
into
pop
rcr
mov
mov
pop
cmpl
pusha
xchg
test
xor
inc
pop
push
test
pop
out
leave
xor
dec
push
dec
pushf
fisubrs
push
push
mov
adc
sti
aam
mov
jecxz
andb
pushf
shrb
mov
fwait
mov
add
icebp
cltd
stos
data16
cmp
or
mov
arpl
in
cmc
lcall
imul
sti
les
in
xor
into
xchg
je
sub
rol
push
enter
and
xlat
dec
scas
push
mov
imul
arpl
and
filds
fiaddl
mov
mov
movl
xchg
xor
bound
mov
jmp
clc
mov
inc
nop
in
sbb
arpl
add
lahf
out
inc
shl
cmp
fwait
jns
je
pusha
or
xor
mov
cmp
add
ficompl
and
stos
lret
mov
inc
test
int
insl
adc
dec
rcl
gs
adc
insl
cmp
loope
movsb
out
sbb
sub
and
roll
les
test
lds
sub
mov
jno
mov
cld
jmp
xchg
mov
daa
sub
rcrl
xchg
lea
and
mov
mov
add
rorl
mov
cwtl
xchg
mov
jecxz
adc
push
test
popa
hlt
mov
bound
icebp
pop
xor
into
mov
out
inc
xchg
dec
sti
mov
cld
cmpsl
shlb
push
fs
xchg
pop
popf
and
faddp
adc
push
cld
sub
aad
std
jno
js
or
into
xor
mov
shl
sub
jmp
es
iret
mov
rcrl
aas
insl
mov
pop
inc
push
jle
call
sbb
jne
lea
in
jp
es
mov
add
stos
mov
dec
enter
jmp
notl
mov
mov
xchg
add
mov
push
push
and
gs
adc
scas
cmp
mov
adc
loop
or
xchg
outsl
sub
mov
mov
sti
dec
inc
or
shl
mov
adc
inc
jle
mov
xchg
xor
fstps
movsl
dec
cmp
lock
arpl
jb
mov
adc
cmp
les
or
sub
xlat
push
add
inc
mov
mov
xchg
fmuls
dec
mov
push
xor
jnp
jge
mul
addps
mov
ja
vmovshdup
lods
stc
jns
loopne
sbb
and
cli
pop
repnz
and
inc
xchg
sub
sahf
mov
adc
jecxz
xchg
dec
pop
int
pop
test
ljmp
test
dec
jo
inc
mov
sub
test
push
mov
mov
push
mov
adc
jle
push
loop
xlat
lcall
int
testl
push
rcl
and
push
cmpsb
js
lahf
mov
sub
adc
popa
sub
mov
mov
stc
sarb
push
data16
dec
rorl
fstl
jg
xor
pop
sbb
out
cmp
popa
dec
push
out
mov
popl
xor
pop
iret
xchg
testl
pop
aad
inc
test
inc
lcall
movsb
jmp
lret
fildl
xchg
inc
add
stc
mov
pop
add
lods
xor
pop
imul
fcmovnu
fwait
dec
in
jb
scas
mov
push
push
push
sahf
mov
push
fdivl
hlt
xor
jno
repz
imul
out
jmp
or
fadds
cld
mov
lods
in
sbb
cmp
dec
push
pop
push
xor
aaa
ss
sub
shrl
or
div
out
rcl
repnz
pop
sub
dec
int3
jmp
repnz
pop
stos
dec
add
shll
mov
test
lret
xor
aas
lahf
cmc
or
sar
test
jo
imul
arpl
in
dec
xchg
mov
cmpb
xlat
mov
and
pop
cmpsl
lret
xchg
aad
mov
mov
pop
sbb
pop
mov
iret
cmpsl
call
adc
add
pop
and
inc
into
cmp
lods
mov
ja
xchg
shll
clc
int3
cmpsb
fucomp
pop
jns
cmpsb
pop
pop
mov
lret
fsubrs
es
ja
sub
jbe
mov
je
mov
bound
jo
xchg
or
dec
outsb
mov
fimull
xor
fsub
mov
mov
mov
int
jl
cwtl
cmpsl
jmp
cmp
aam
jmp
stc
dec
jo
repnz
icebp
cltd
pop
or
sahf
mov
mov
dec
pop
out
repz
fcomps
scas
jl
cmp
js
push
ja
mov
jns
mov
out
ror
lahf
mov
sbb
das
push
popf
pop
fisubrl
movl
test
ja
mov
pop
xor
mov
movsb
testl
lds
int
jmp
sub
fdivp
adc
iret
add
pop
icebp
in
mulps
xor
or
ret
xchg
out
or
lds
push
xor
cwtl
rcrl
sbbl
jecxz
into
insb
adc
ret
lea
sti
nop
int
jnp
mov
push
sti
pop
jbe
and
je
push
mov
mov
bound
xchg
push
hlt
pop
dec
jle
add
in
aam
int
push
stos
das
jmp
incb
stc
fsubrs
mov
pop
aas
lahf
xor
mov
cmp
repz
cmp
add
bnd
push
cmp
call
adc
out
mov
mov
add
mov
cmp
cltd
data16
sbb
cmc
in
xchg
and
mov
xor
pop
insb
cs
std
sarb
adc
mov
mov
call
push
repnz
jno
fisubs
xchg
fdivs
rorb
enter
mov
jne
iret
dec
xchg
popf
mov
push
out
insl
jecxz
aam
adc
push
iret
test
sbb
out
mov
inc
dec
mov
mov
mov
je
and
mov
ret
inc
repz
sub
test
push
push
or
movsl
and
addr16
andl
cmc
xlat
push
test
mov
jg
pop
addl
cli
mov
mov
xor
xchg
popf
cmp
or
jmp
fwait
ds
mov
adc
test
inc
shrb
jns
cmc
jb
scas
or
pop
repz
cwtl
loope
mov
xor
jp
stos
xor
icebp
icebp
push
dec
add
push
push
push
mov
inc
xor
add
fs
dec
out
out
pop
adc
mov
jns
out
cmc
mov
clc
fiaddl
mov
push
mov
cli
inc
imul
insb
jmp
clc
push
cmp
and
outsl
sbb
mov
daa
test
test
mov
cmpsl
fsubrp
data16
pop
mov
in
xchg
inc
mov
sti
jbe
mov
fdivrp
daa
loope
std
jmp
enter
int3
or
jo
je
dec
and
out
imul
or
add
sbb
dec
push
cmp
test
xchg
push
inc
cmpsl
lret
cmpsb
pop
outsl
sbb
add
inc
inc
jb
add
cli
je
sub
sbb
int3
call
or
ja
cli
std
iret
sbb
or
psadbw
scas
int3
movsb
add
test
cmp
std
sbb
adc
cmp
mov
lret
and
popf
and
test
push
lahf
icebp
or
popf
xor
sbb
cmp
cmp
add
mov
add
inc
push
fcmove
sbbl
pushf
das
or
mov
mov
fcomi
lret
call
push
leave
cmp
jp
jmp
scas
xchg
xchg
and
pop
add
bound
and
sbb
daa
or
enter
mov
bound
aam
dec
push
adc
inc
ds
nop
movsl
or
add
mov
xor
adc
fs
sub
cli
rcrb
rcr
dec
mov
push
push
xor
movsb
mov
push
lods
insb
cmp
jno
idivl
push
repz
sahf
ds
outsb
and
fisttps
sbb
gs
add
je
clc
call
dec
scas
push
xchg
pop
xor
adc
andb
nop
mov
inc
std
pop
mov
xor
jle
dec
imul
dec
je
bnd
mov
in
sbbb
adc
mov
xor
xchg
or
xor
push
push
rcll
inc
notb
cmc
jle
ficompl
cmp
incb
ror
inc
and
cwtl
lds
orb
push
inc
mov
jl
mov
sub
scas
loopne
fildl
cs
in
pop
cmc
enter
movsb
push
inc
xor
lahf
imul
aam
push
addr16
mov
out
xchg
xlat
mov
push
sub
fs
mov
addl
lock
je
dec
xor
lock
jp
jle
inc
pop
xor
shl
jge
pusha
jns
mov
mov
xor
mov
adc
mov
mov
xchg
jge
fwait
insl
lods
inc
hlt
sub
jae
jnp
test
inc
xchg
stos
jg
mov
test
addr16
out
push
mov
add
inc
push
pop
sbb
les
xchg
xchg
push
mov
insb
pop
mov
sbb
or
fisttpll
push
int
rolb
mov
jae
dec
movsl
push
cltd
rcll
daa
sbb
fisubl
jecxz
insl
ljmp
jle
icebp
fdivs
lds
jp
loope
loop
mov
add
cmp
cs
mov
adc
jge
aaa
push
test
aam
pushf
pushf
movsl
mov
fstl
jae
and
es
jo
add
push
or
mov
sub
test
push
push
mov
mov
test
cld
rclb
sub
test
mov
mov
pop
arpl
jne
mov
adc
pop
push
jg
jns
or
dec
das
out
adc
shrb
xchg
in
frstor
sbb
add
fnstsw
test
cmp
lds
dec
and
or
inc
fiadds
mov
mov
test
test
dec
dec
outsb
mov
add
je
add
push
sub
push
les
mov
int
ds
int
xor
jle
lret
jb
sub
push
std
inc
divl
xor
or
mov
add
jle
jnp
lret
adc
mov
jl
dec
dec
popa
mov
pop
jne,pt
sub
push
push
inc
fistps
push
inc
sahf
pop
jo
and
aad
sbb
xchg
pop
into
fwait
pop
enter
insb
icebp
jb
ret
push
sub
lea
dec
mov
adc
imul
repnz
and
cwtl
leave
repz
repz
std
inc
push
addb
ds
inc
xchg
ljmp
mov
dec
mov
mov
loopne
mov
pop
inc
hlt
outsl
inc
adc
xor
xchg
in
push
jae
std
mov
in
cld
in
cmp
mov
pop
jo
mov
fmull
xor
decb
sbb
fwait
scas
into
cli
rcrl
mov
sbb
add
pop
jo
push
iret
les
or
dec
scas
sbb
in
data16
mov
push
movb
xlat
in
mov
push
fdivrs
jne
mov
pop
aaa
aam
rolb
sub
sub
xchg
movsb
outsl
mov
cltd
mov
dec
mov
in
outsl
inc
or
scas
xor
lret
cmp
jecxz
inc
mov
in
ja
mov
mov
out
test
pop
shr
xor
out
arpl
dec
lds
jo
or
pop
push
popa
jnp
inc
aam
dec
or
js
xchg
arpl
push
rol
and
mov
fsub
movsl
push
sub
jg
adc
lds
jp
push
sbb
rcll
out
lahf
jmp
adc
les
jge
dec
xchg
adc
mov
jl
inc
and
jae
nop
sbb
int
call
jp
cmc
addl
cmp
inc
cmp
xchg
pop
push
popf
add
fcmovbe
inc
xor
ds
lea
pop
sbb
add
outsl
jnp
int3
inc
jecxz
pop
insl
lods
mov
jp
fucom
fsubl
cwtl
ror
cli
fnstcw
scas
bound
push
mov
jp
push
jbe
sbb
adc
add
roll
mov
jnp
jb
inc
gs
jg
mov
jmp
rolb
lods
cmp
fwait
sub
scas
dec
ja
jge
cs
nop
sub
decl
inc
dec
into
add
push
or
mov
insl
leave
mov
sub
sbbb
bnd
jne
aas
mov
lcall
mov
repz
xchg
mov
enter
and
mov
mov
inc
sbb
cmp
imul
or
sub
test
out
cmp
call
jmp
imul
dec
adc
mov
out
pop
add
sub
rcrb
cwtl
stos
loopne
negb
and
sbb
daa
lahf
or
lret
lock
push
aaa
add
fs
xchg
dec
inc
cmp
mov
cmp
sti
jns
push
out
jne
or
mov
lods
int
or
mov
test
ss
xchg
and
sbb
push
jmp
in
cmpsl
push
and
push
sub
or
xorb
sub
mov
mov
loopne
cmpsb
push
out
sub
jle
stc
fcompl
idivl
sbb
les
out
mov
dec
xlat
push
cli
ja
adc
cmc
jecxz
xor
fisttpl
and
aam
pop
pop
mov
jo
dec
cld
push
movsl
jno
mov
mov
outsb
cmp
lods
cmpsl
bound
in
cmp
mov
jmp
in
lcall
insl
or
pushf
sahf
cwtl
or
push
mov
test
loopne
and
sub
and
sub
xchg
adc
shr
popa
dec
push
movsl
cs
nop
shll
sbb
sub
popa
add
mov
push
push
push
sub
cld
mov
xchg
ret
dec
dec
sub
mov
ljmp
ja
pop
cmp
fstl
ljmp
sbbb
stc
in
push
mov
jge
js
mov
je
cli
cmpb
out
dec
xor
and
push
fmuls
out
aaa
ret
cmp
popa
xchg
sbb
jo
jne
div
out
xlat
inc
mov
mov
adc
jl
gs
adc
cmp
bswap
repz
inc
fwait
sub
notb
mov
xchg
push
les
in
mov
xchg
sub
shlb
adc
xchg
repnz
data16
repnz
inc
lret
scas
stc
pop
mov
xchg
mov
push
mov
imul
cmp
mov
mov
adc
loopne
lods
clc
loop
jmp
cmp
movsb
mov
aad
xor
push
mov
lret
pusha
sbb
mov
jl
add
push
loopne
loope
adc
das
push
mov
stc
imul
int3
push
dec
fsts
jae
mov
pop
dec
aaa
ret
mov
loope
imul
subl
add
pop
data16
fdiv
and
xor
and
mov
std
adc
lods
inc
fidivl
or
inc
sbb
sbb
ficoml
sub
sub
sub
and
inc
or
pop
jge
push
fidivs
lock
in
xor
iret
shll
ret
inc
out
mov
mov
aas
movsl
fwait
fwait
mov
cmp
push
add
mov
push
inc
push
stc
mov
and
pushf
je
aad
xor
add
mov
or
idivb
xor
or
inc
push
add
add
aam
pop
inc
mov
icebp
sub
and
jp
inc
outsl
sar
pop
dec
jb
jge
loope
mov
and
inc
loope
lret
push
cmpsb
dec
scas
icebp
cli
dec
push
gs
lret
jg
sub
cli
in
movsb
sub
cltd
sbb
daa
imul
adc
push
sub
xor
pop
dec
mov
iret
lods
push
roll
xor
js
dec
rcrb
sti
out
rorb
inc
aaa
imul
sbbb
lds
sbbl
or
push
into
add
pop
iret
imul
fxch
andb
lds
add
mov
xchg
mov
cli
stos
rcr
adc
mov
mov
mov
movsl
in
testb
pop
aaa
and
add
mov
mov
xor
xchg
jg
cmp
fnstsw
in
inc
add
popf
pop
flds
mov
and
nop
push
dec
mov
push
mov
std
adc
in
adc
jg
xchg
mov
adcl
xor
lcall
xchg
and
cmpsb
stos
clc
add
out
pusha
mov
insb
ljmp
adc
inc
lea
mov
aad
mov
lret
enter
rclb
sbbb
sarl
int3
mov
rorb
repz
push
inc
outsb
pop
sbb
inc
xor
jnp
outsl
pusha
and
int
push
lcall
notl
fstpt
fs
cli
pop
cmovne
push
aaa
in
mov
mov
movsb
ljmp
in
pop
mov
lds
popa
jl
and
lcall
cmp
ret
unpckhps
sub
mov
bound
inc
ds
es
inc
ljmp
dec
jb
daa
insl
mov
fsubrl
cmp
cmp
mov
jecxz
pmulhw
repz
add
jo
sub
popa
push
jle
jb
pop
shrl
pop
mov
pop
add
pop
imul
jbe
mov
and
ret
and
int3
or
adc
inc
pusha
not
cli
add
loope
adc
pop
xchg
jo
mov
and
ljmp
or
cmp
jnp
push
sub
pusha
mov
gs
pusha
mov
cld
sbb
cmpsb
cmp
and
ljmp
ja
and
mov
push
jg
fwait
addl
popa
ficompl
fwait
lcall
mov
nop
jae
adc
loopne
jne
jns
dec
adcb
adc
cld
dec
test
std
lds
ror
shl
xor
cmpsl
popa
inc
xor
scas
icebp
dec
std
and
cld
jb
out
sbbl
xor
and
testb
out
roll
addr16
cmp
sbb
dec
xor
jo
pop
in
addl
pop
scas
repnz
cmpsb
sbb
aad
sub
inc
adc
and
loope
mov
data16
dec
inc
pop
ja
jg
lods
mov
cld
xchg
pop
shl
sarl
cmp
cwtl
push
fiadds
inc
and
mov
add
popa
rcr
lahf
pop
es
rolb
lret
push
mov
jmp
stos
fdiv
rorb
xchg
fidivl
and
mov
test
mov
xchg
fisubrs
mov
push
pop
lret
enter
mov
imul
jbe
mov
not
cmpsl
jb
shrb
and
sub
pop
push
mov
sbb
arpl
popf
mov
lds
lock
es
lret
fwait
movsb
mov
sbb
bound
add
hlt
pusha
popf
lret
xchg
xlat
cmc
pop
cmp
lods
pop
sub
mov
xor
push
adc
adc
push
xor
mov
jge
test
dec
jnp
mov
call
test
pop
inc
add
inc
std
lock
addr16
adc
int
add
jne
sti
xchg
das
pop
mov
fwait
mov
xchg
repnz
xchg
icebp
xor
imul
imul
mov
mov
movsl
hlt
sub
dec
inc
ret
lret
dec
outsb
push
add
aaa
push
adc
cmp
inc
pop
push
or
aaa
cmpsl
dec
xchg
xchg
int
jae
mov
jecxz
std
or
dec
ja
sub
and
and
mov
xchg
int
out
mov
push
mov
test
roll
inc
mov
cld
mov
mov
filds
cs
mov
insl
push
jns
daa
mov
mov
out
cmp
mov
ret
sar
inc
xor
xchg
jns
scas
jmp
fdivp
xor
nop
inc
jp
or
loope
push
rorl
cli
mov
leave
shll
mov
mov
arpl
lds
mov
and
jecxz
div
in
fwait
xlat
pop
cmp
push
aas
jle
fld
popf
mov
stc
out
xchg
xchg
testl
outsb
mov
adc
into
fildll
mov
xchg
fdivs
fwait
ds
lret
xchg
and
ret
mov
pop
stos
cld
test
and
frstor
popf
imul
fmuls
adc
sti
pop
xchg
dec
jne
adc
sub
mov
daa
sti
inc
rolb
jns
enter
mov
sub
adc
jmp
fcmovnu
loopne
test
cmp
frstor
dec
push
jge
cli
sub
hlt
icebp
cmpsl
movsl
push
ds
sbb
mov
adc
popa
mov
lea
lock
xor
shlb
dec
hlt
cli
inc
mov
cs
jmp
adc
push
mov
push
shrb
pop
jne
stos
call
dec
push
scas
or
iret
fsub
lcall
in
out
loope
pop
push
and
cld
cltd
push
pop
dec
mov
in
and
xchg
adc
cmp
xor
pop
jnp
pop
xor
in
inc
push
dec
jl
mov
xchg
add
jo
popa
pop
aaa
scas
je
lahf
shlb
push
jge
pop
cmp
sub
aam
stc
jmp
mov
xor
cmp
rorl
xor
inc
rclb
mov
add
inc
rclb
cmp
mov
pop
arpl
clc
ss
out
rorl
add
cld
sahf
inc
mov
jno
pop
popa
stc
idiv
dec
jp
xor
test
loope
lock
stc
loope
sub
insl
push
cmc
sbb
sar
and
mov
pop
cli
out
idiv
mov
pop
push
aad
clc
rol
mov
pop
jecxz
fdivl
lea
sbbb
subl
jle
jl
pop
arpl
inc
testl
pop
push
fst
fisttpll
insb
cwtl
lea
sub
lock
sub
mov
jbe
sub
or
call
pop
cmp
mov
push
cs
sub
or
iret
jg
push
dec
loope
sub
or
mov
popa
lods
xchg
das
fiadds
in
xchg
add
jl
mov
pop
cmp
sti
mov
enter
popf
jg
nop
add
imul
cmp
sbb
mov
in
shl
movsl
test
mov
mov
lahf
jne
inc
cmpb
pop
dec
dec
add
sti
push
fldenv
or
std
pop
mov
je
adc
les
cmp
stos
mov
test
cmc
sub
adc
flds
shll
incb
sbb
loope
sti
and
mov
fbstp
nop
hlt
les
mov
lret
aas
pop
add
inc
and
cmp
in
js
inc
and
adc
aas
js
push
add
addr16
lock
jne
sub
jecxz
imull
cwtl
jnp
xchg
adc
leave
jbe
push
xor
jno
mov
int3
test
pop
pusha
stos
mov
push
xor
push
xor
jp
pop
push
stc
fnclex
mov
pop
cli
jne
cmc
cmp
or
sbb
mov
in
mov
and
out
adc
push
xchg
loop
addr16
sub
imul
mov
into
push
dec
dec
push
jae
inc
lcall
or
push
or
aas
push
shrb
sbb
loop
lret
lds
ja
jle
push
cmpsb
sub
xchg
jle
dec
je
and
popa
push
stos
push
ret
jge
stos
pushf
icebp
mov
jo
sbb
scas
jne
mov
mov
fnstenv
pop
push
sub
add
mov
orl
popa
ljmp
addr16
push
into
jle
push
adc
testl
mov
popa
xor
scas
cs
add
xor
adc
shll
scas
mov
fldt
pop
sahf
mov
aad
nop
adc
movsl
mov
in
test
lahf
popa
adc
test
andb
int3
aas
pop
enter
rolb
push
jmp
sbb
addb
shl
int3
xchg
repz
xchg
loope
in
daa
sbb
fnsave
shlb
repnz
pop
call
jmp
mov
aaa
jecxz
rcl
pop
xchg
ror
sub
ss
and
daa
sar
mov
rol
sub
enter
mov
popa
repnz
fcmovb
incl
loop
mov
adc
out
xchg
mov
inc
xchg
mul
rcr
imul
jecxz
pop
gs
and
push
xchg
out
lods
xor
push
jp
add
push
jb
inc
fwait
stos
popa
sbb
adcb
fs
push
cs
rorb
cpuid
mov
shl
int3
xchg
inc
add
pushf
xchg
popl
cld
pop
inc
divl
repnz
adc
dec
iret
loopne
jecxz
mov
mov
adc
ret
mov
xchg
dec
fstpl
mov
mov
adc
outsl
fistpl
mov
push
ret
dec
out
pop
nop
imul
xchg
ret
push
out
and
mov
test
push
repnz
das
mov
push
mov
jns
lcall
and
loope
push
sarl
mov
xor
aaa
daa
lds
xchg
jge
sbb
insb
mov
sbb
mov
movsb
daa
gs
fs
push
rcr
ret
xchg
cmp
xorb
fbstp
mov
aaa
jo
stos
or
arpl
dec
jmp
mov
sub
or
sti
mov
rcrl
shrl
iret
je
jle
dec
clc
inc
mov
aam
mov
aad
stos
push
adc
fwait
cmp
add
pop
sbb
lret
pop
pushf
jmp
int
fildl
adcl
into
fmull
aas
pop
mov
in
daa
cmp
pop
xchg
daa
ljmp
mov
arpl
ja
shll
mov
adc
mov
sbb
mov
mov
jno
sub
push
daa
add
hlt
mov
jmp
push
add
rolb
andb
add
jae
sub
out
test
xchg
shrl
adc
popa
mov
jno
lret
hlt
pop
cmc
adc
stos
fdivl
sbb
jb
into
jb
adc
inc
ss
and
mov
and
and
hlt
pop
xchg
jb
xchg
jno
xor
mov
mov
or
add
das
ss
loopne
in
xchg
and
xor
out
jmp
mov
pop
add
sbb
mov
jg
jbe
outsl
push
add
push
insb
rorb
jno
or
sub
adc
insb
es
inc
lods
jmp
sub
int3
pop
mov
aaa
movsl
fistpl
pusha
mov
hlt
adc
mov
cmpsl
dec
jmp
adc
and
iret
push
lods
or
push
std
mov
cmp
push
ljmp
inc
outsb
cmp
jp
fildll
subb
lea
inc
adc
sahf
imul
jnp
or
or
scas
adcb
inc
mov
mov
stos
xchg
lret
out
add
push
jecxz
jge
jmp
xchg
rolb
psraw
push
push
ror
jne
xchg
mov
fnstcw
mov
add
in
dec
adc
adc
pushf
xchg
fsqrt
ja
add
jnp
rcrl
xchg
loop
mov
pop
out
stc
and
outsl
and
xchg
aaa
pop
push
sub
inc
mov
repz
mov
xor
int3
insl
and
push
aas
dec
push
mov
insb
iret
mov
inc
xor
mov
and
push
and
cli
cmpsl
add
lods
pop
pop
mov
mov
icebp
in
jb
repnz
btrl
je
fwait
out
das
mov
pop
nop
jmp
out
sbb
mov
into
inc
sub
cmp
cld
jg
lea
insl
pop
in
sahf
in
pop
dec
or
jns
loopne
call
jnp
add
jne
loopne
cltd
mov
loope
scas
jg
pop
icebp
cmpsl
inc
xor
cmpsb
xchg
jmp
int3
push
sbb
or
xchg
or
lret
sbbb
pop
mov
ss
repz
add
data16
inc
inc
xor
jo
clc
imul
cmc
fsubs
ds
das
enter
xorl
mov
mov
inc
inc
jae
xlat
ja
adc
fcoml
push
add
loopne
sub
stos
fdivrl
mov
in
adc
lret
pop
aad
scas
ss
or
or
jae
mov
cmp
in
imul
sbb
movsl
sub
cs
scas
xchg
pop
xchg
in
xchg
jecxz
das
or
cltd
stos
adc
dec
jle,pt
ret
sbb
sub
sti
add
repnz
or
lods
out
mov
lea
daa
jne
mov
xchg
pmaddwd
aaa
std
out
mov
movsl
in
sbb
sub
jmp
adc
adc
jp
mov
iret
icebp
add
stc
dec
jb
jbe
mov
lret
testl
mov
add
loopne
sbbb
cmp
lods
xor
inc
push
es
cmp
mov
jne
jno
mov
sahf
ss
imul
ret
pushf
cmpsl
movsb
inc
or
test
mov
mov
out
inc
push
mov
inc
jle
mov
and
mov
mov
je
mov
pop
xchg
into
sub
xchg
mov
fiadds
or
aas
xchg
pop
cltd
ficompl
mov
js
push
push
pop
testl
imul
sarl
jae
inc
int3
sbb
repz
into
stc
roll
mov
rorb
aam
fildl
inc
jbe
xchg
ds
adc
or
test
sbb
push
dec
imul
out
je
mov
test
js
repnz
icebp
fs
xchg
add
sub
cld
js
icebp
push
adc
out
push
lcall
xchg
jmp
je
mov
sbb
imul
in
test
daa
jecxz
js
add
jmp
iret
rcrb
pop
xor
jge
jnp
jg
stos
cmp
out
popf
sahf
add
jg
or
or
mov
adc
pop
lea
mov
xor
aam
mov
lock
leave
mov
xchg
clc
loop
pop
je
pop
shr
dec
add
mov
push
outsl
jno
mov
enter
push
ffree
push
cmp
or
xchg
sbb
jl
test
std
lods
inc
lret
jmp
out
or
push
lds
push
jmp
stos
xchg
xor
mov
jecxz
cmp
cmp
loope
jnp
js
mov
fdivrs
sub
sub
lock
orb
mov
test
arpl
pop
sub
xchg
leave
stos
stos
push
or
mov
mov
push
mov
push
dec
and
stos
lcall
clc
mov
jbe
int3
jo
push
adc
inc
cmp
andb
mov
test
les
mov
or
dec
lods
cs
loop
mov
add
idiv
add
into
mov
in
xor
xchg
inc
pop
mov
in
mov
leave
adc
lcall
aas
lock
add
mov
cmpsl
mov
data16
rorb
and
sub
repnz
movsb
lods
and
push
add
dec
add
addr16
sub
aad
add
mov
cld
hlt
pop
fisttpll
mov
or
adc
sub
addr16
mov
xchg
push
test
add
ret
jmp
dec
notb
cmp
and
bound
adc
add
ret
stos
fidivrs
imul
nop
lahf
ja
rorl
les
lret
jnp
lahf
js
dec
push
sbb
mov
outsl
enter
adc
lcall
pop
loop
dec
sbbl
popa
xor
sarl
xlat
lods
mov
outsl
mov
and
mov
nop
jge
shl
xchg
pop
push
xchg
stc
mov
push
out
mov
xlat
dec
inc
inc
mov
lahf
adc
mov
inc
jmp
inc
xchg
pusha
push
add
pop
arpl
adc
or
je
and
das
mov
sbb
jo
fcompl
les
ficomps
adc
js
pushf
or
popf
rcrl
sub
fstpl
mov
mov
insb
int3
mov
aam
inc
or
jne
add
jmp
jae
mov
mov
sbb
mov
enter
inc
push
xor
and
std
dec
mov
cmc
or
in
xchg
in
scas
es
xchg
ret
jno
inc
xchg
xchg
ficompl
mov
fcmovne
xor
aaa
mov
dec
mov
sub
mov
js
mov
mov
xchg
sbb
pop
mov
xor
cltd
pop
mov
pop
lds
pop
cltd
jmp
mov
add
and
and
mov
outsl
push
mov
cmpb
ret
clc
and
pop
push
sub
sub
xor
seta
cmpsb
jecxz
adc
jle
fwait
sub
xor
push
int3
arpl
mov
int
lds
or
stc
ror
fbstp
add
lods
xchg
inc
xchg
jno
push
sarb
cmpsb
pop
loope
mov
xchg
lods
jmp
insl
into
cld
shll
inc
jle
xor
xor
and
xchg
xlat
jnp
test
test
imul
pop
jne
pop
xor
mov
mov
mov
mov
pop
dec
xor
int3
mov
xchg
xorb
call
js
or
pop
xor
setb
lods
cmp
shlb
movsb
jns
mov
sub
pop
or
mov
aas
dec
mov
pop
dec
pop
jne
pop
xor
pusha
pop
lods
or
fimull
sbb
std
mov
sbb
jb
ret
in
leave
pusha
sub
cwtl
aaa
daa
xchg
inc
popa
lds
cmp
pop
sahf
in
adc
outsb
xchg
rcr
test
lds
sbb
add
xchg
pop
add
movsb
add
shlb
or
jae
xchg
sahf
lcall
push
test
dec
das
roll
add
push
in
push
mov
movsl
pop
dec
mov
xor
pop
or
sarb
insb
sub
xchg
shlb
rclb
pop
mov
clc
jb
sti
push
insl
adc
roll
scas
or
out
sti
add
fisttpl
mov
mov
arpl
or
jbe
enter
imul
mov
or
fsts
popa
sbb
push
sub
fiadds
pop
jecxz
jnp
lock
dec
cmc
jecxz
pop
pusha
mov
outsl
dec
std
ret
ror
inc
sub
idiv
outsb
sub
and
insl
jo
filds
movl
xor
loop
cli
dec
or
mov
enter
mov
out
mov
pop
mov
test
cmc
popf
mov
cmp
lods
arpl
jne,pt
mov
je
pushf
add
xor
arpl
insl
push
lcall
mov
test
mov
inc
cmp
sbb
or
xchg
shl
mov
cmpb
or
push
int3
sbb
sbb
mov
ficompl
or
imul
aam
or
divl
sbb
enter
aas
testl
xchg
mov
cs
push
test
dec
arpl
sub
mov
movsl
aad
sahf
mov
bound
mov
lods
mov
mov
pop
sub
mov
call
add
pop
outsb
adc
lds
sbb
int
inc
xchg
ss
call
pop
add
jbe
xor
mov
jne
movsl
loope
lret
pushf
je
and
mov
rcrl
inc
mov
lods
js
add
cmp
test
mov
cltd
es
jb
mov
xor
jns
push
addr16
jmp
lret
ds
push
pop
in
and
cs
in
cmpsl
fists
sub
push
add
pop
andb
outsb
mov
dec
shrb
je
push
mov
pop
sbbl
in
jmp
lea
inc
lcall
jb
scas
rcrb
jbe
mov
inc
rep
jl
jge
int
movsb
cmp
cmovbe
nop
aam
inc
clc
mov
pop
enter
dec
sbb
mov
dec
mov
jae
sub
cmp
push
out
xchg
dec
sub
jnp
inc
push
dec
push
pop
data16
and
sbb
inc
add
mov
inc
in
stc
aam
ret
neg
and
in
jp
fadds
cmp
popfw
out
inc
insl
add
push
ss
rorb
xlat
je
sub
sub
popa
lahf
pop
push
mov
outsl
daa
icebp
add
mov
pop
jb
xchg
js
jno
sti
jge
add
daa
jmp
out
mov
repz
xor
flds
push
xor
stos
fdivrs
out
lock
ja
nop
cmp
pop
daa
jbe
mov
lods
arpl
lods
xchg
cli
pop
xor
add
jbe
dec
pop
pop
das
roll
cs
mov
xchg
sub
stc
add
pushf
jmp
jno
lea
outsl
pop
xchg
jmp
push
inc
pop
popa
sbb
xor
dec
jecxz
sub
push
and
xchg
pop
pop
aaa
loopne
ficomps
jg
fs
inc
sub
push
shr
lret
pop
imul
fcmovbe
or
push
push
lods
and
enter
dec
mov
loop
or
xor
sbb
leave
adc
jns
movsl
stos
jb
faddp
jecxz
jmp
into
adc
lea
jne
fs
into
pop
fnstcw
push
push
lods
or
sbb
add
xchg
cld
pop
mov
out
arpl
fistpll
fstpt
mov
in
mov
push
mov
test
jmp
adc
clc
fidivrs
popa
pop
mov
notb
test
sbb
mov
jl
fdivl
testb
adcb
add
cltd
mov
lock
sbb
cmp
cmp
pop
fwait
xchg
pop
outsb
fisttps
fsubrs
adc
shrl
sbb
movsl
jns
repz
mulb
imul
add
enter
mov
repnz
inc
inc
in
rorl
std
pop
cwtl
xchg
ret
mov
push
mul
into
cld
in
push
das
push
push
fimuls
xor
and
add
popa
push
mov
xchg
adc
push
dec
test
add
sub
lea
jne
sub
mov
mov
cmp
sub
sar
in
dec
scas
push
pop
fbld
outsb
push
and
fistps
sub
xchg
lret
push
mov
fnsave
xlat
cmpsb
rcrl
mov
cld
stos
mov
out
xchg
adc
sub
insb
sbb
fs
mov
sti
in
xchg
ljmp
pop
mov
bound
mov
gs
or
dec
jge
jmp
rorb
scas
mov
bound
icebp
and
fcomps
and
dec
fdivl
jns
inc
xor
ljmp
mov
or
shl
int
fwait
mov
addb
jmp
pop
sub
scas
aad
mov
fdivl
add
lea
cmp
test
push
mov
xor
add
enter
mov
stos
cmpsb
sub
cmp
cwtl
arpl
mov
test
push
stos
ret
cmp
mov
adc
jo
loope
insl
std
ret
jae
in
filds
das
movsb
pop
sbb
jg
or
add
repnz
xchg
sub
scas
fisubrs
stos
dec
popa
xchg
iret
nop
shl
jae
cmc
jb
sub
sbb
orb
jae
xor
pop
fcmovu
adc
call
fisttpl
aad
rcrl
pop
mov
cld
or
inc
jl
inc
divb
pop
push
xchg
cmp
shl
inc
mov
leave
add
cmc
js
xlat
add
mov
push
sub
xchg
lock
es
xchg
pop
xchg
loope
sahf
or
sub
mov
clc
inc
xor
and
cmc
cmp
jno
jae
shll
add
push
push
cs
bound
add
aaa
inc
pushl
mov
fcmove
pushf
add
fs
lahf
sub
adc
scas
rolb
hlt
int
sbb
adcl
ret
xor
mov
sbb
jmp
sahf
outsb
add
mov
xor
fnsave
mov
jne
push
gs
hlt
fistpll
sbb
sub
stos
jo
jns
arpl
sub
insl
repnz
jge
sbb
bound
rol
aam
hlt
jb
fadd
and
cmc
adc
push
mov
inc
mov
leave
xlat
cltd
call
cmp
stos
scas
cmp
push
enter
fisubrl
addr16
jecxz
xor
inc
fdivrl
or
xchg
cmpsl
movsl
bound
sti
push
and
ffree
mov
push
adc
mov
jne
nop
adc
lcall
and
aad
scas
xor
scas
or
hlt
test
cmp
stos
rcrb
xor
jle
in
cmp
pusha
outsl
xchg
mov
loope,pt
je
xchg
jl
jmp
test
or
cmpsb
call
outsl
dec
pop
aaa
pop
jge
sbb
gs
mov
mov
call
orl
movb
jne
lret
sub
test
aaa
pop
ret
out
ja
xor
js
mov
xor
dec
mov
pop
xchg
jbe
jnp
adc
movsl
mov
es
mov
inc
mov
outsl
inc
mov
xchg
pop
into
test
fcomi
jl
loop
xchg
outsb
jmp
in
push
push
orl
popa
rol
cli
popa
sbb
test
pop
out
add
inc
movsl
mov
sahf
push
shlb
add
je
sbb
jb
jns
lea
jmp
or
push
sbb
pop
out
leave
pop
or
leave
je
in
leave
push
and
inc
push
sar
es
stc
jb
lea
and
loop
fdivl
idivb
loop
xor
sbb
pop
push
mov
add
sub
mov
loopnew
popa
cmp
sahf
push
add
dec
mov
shlb
in
xor
mov
adc
or
adc
call
leave
icebp
pusha
xor
mov
push
ret
mov
je
mov
sub
and
out
rcrb
jl
pop
dec
pusha
movsl
mov
cmp
xlat
cmpsl
xor
sub
and
pop
mov
jnp
adc
cwtl
arpl
in
or
std
push
int
push
mov
insb
xchg
stos
insb
adc
loop
pop
std
jnp
addr16
clc
mov
xor
dec
lcall
notl
ss
xchg
mov
cmp
stc
nop
out
movsb
rcrl
fisttpll
xchg
adc
cmp
mov
pop
push
scas
push
je
and
xor
cli
das
sub
xchg
inc
scas
jmp
and
adcb
movsl
pop
or
mov
push
mov
mov
pop
or
popa
dec
sahf
pop
inc
in
cmc
xor
mov
and
es
iret
sub
loopne
stos
rclb
xor
xor
inc
shl
lods
das
sbb
insl
pop
push
fsts
popf
and
pushf
cltd
adc
pop
outsl
xor
aaa
jb
pop
sbb
nop
leave
pushf
daa
loope
and
jns
push
mov
xchg
and
push
cli
cld
jo
in
into
hlt
push
jno
add
sub
lods
mov
add
sub
push
cmc
sbb
shll
or
ret
cli
pop
call
stos
pop
testb
adc
mov
rcl
out
sbb
inc
mov
out
std
mov
inc
jecxz
out
push
mov
fcmovnu
jl
mov
mov
fcmovnb
or
rolb
insl
ret
popa
and
lods
data16
jl
fcomps
fbstp
push
mov
xor
adc
xor
outsb
xchg
hlt
add
push
push
inc
adc
sub
jl
orl
push
enter
mov
js
enter
pop
sub
add
pop
cmp
test
outsl
pusha
mov
fcmovnb
xchg
rclb
mov
faddp
dec
xchg
push
dec
arpl
fs
fildl
leave
and
popf
sbb
or
ret
push
es
movsl
cmp
sbb
cmp
ljmp
jno
jmp
mov
jl
fdivrs
mov
sar
lds
in
stos
push
push
or
pushf
and
pop
pop
or
mov
insb
jp
mov
aas
add
inc
add
out
xor
leave
mov
sub
popf
or
inc
and
stos
rcrb
popa
adc
sbb
mov
xor
push
mov
jae
loop
out
fs
nop
inc
aam
ja
adc
mov
xor
dec
xor
push
insb
xchg
insl
push
inc
movb
mov
jno
mov
lods
push
mov
js
jecxz
int
mov
cmc
xor
cmp
movsl
sbb
mov
and
daa
dec
mov
jmp
mov
dec
call
das
sub
cltd
mov
popa
adc
dec
nop
fdivr
dec
out
sti
push
mov
in
jno,pt
and
test
push
fs
leave
and
data16
enter
cwtl
ss
jae
cmpsl
push
rcrb
sub
fnstsw
loopne
cmp
mov
xchg
jno
inc
clc
sub
call
push
sub
add
dec
cmp
imul
stos
test
stos
loopne,pn
leave
jl
je
enter
sbb
xchg
cltd
mov
loope
lret
divl
jb
shrb
outsl
mov
jne
pop
jnp
inc
mov
mov
cwtl
adc
les
jb
shlw
lahf
xor
enter
cmpsb
and
fs
in
loope
xor
into
clc
int3
or
fwait
sub
fcom
dec
dec
or
imul
xor
dec
loope
scas
nopl
shrl
fdivrs
sbb
mull
xchg
std
sbb
ss
inc
mov
ret
fldenv
push
push
in
dec
nop
mov
jns
test
call
inc
into
mov
dec
cmp
fdivrl
inc
pop
fbstp
jecxz
gs
adc
add
loop
cmpsb
xchg
sub
xchg
repz
fnstenv
mov
sahf
pop
sub
aam
inc
out
cmp
mov
xor
mov
xor
mov
mov
lret
inc
xlat
xchg
inc
icebp
mov
mov
enter
repz
mov
int
out
fs
test
cmc
out
adc
ficompl
outsl
dec
cmp
ss
jns
sub
jl
xchg
xchg
insb
mov
lahf
pushf
dec
jns
pop
push
bsr
movsb
adc
call
imul
jne
in
mov
mov
sub
int3
pop
ret
mov
ljmp
dec
pop
mov
cld
pop
xchg
add
pusha
mov
mov
stos
pop
adc
push
lods
fwait
loope
pop
xchg
jns
fdivrs
int3
insb
movsl
addr16
imul
lret
dec
add
mov
cmp
pop
vmulsd
push
push
inc
dec
mov
xchg
jle
icebp
xchg
xor
lcall
jbe
inc
pop
cmpl
imul
fisttpl
mov
dec
xor
outsl
cli
jne
or
in
nop
add
mov
inc
cld
test
add
adc
cmpsl
mov
jp
and
jecxz
inc
icebp
nop
mov
push
jmp
je
mov
sbb
stos
imul
pop
cmpsb
mov
sub
shlb
push
stc
sub
mov
xchg
stos
cmpsl
mov
add
jl
push
call
mov
insl
sbb
push
and
pop
xor
es
addr16
int
mov
nop
mov
nop
add
daa
cmovae
push
xchg
dec
scas
leave
pusha
mov
inc
jae
pushf
pop
adc
cmp
into
shrl
loopne
cltd
sahf
icebp
scas
mov
sub
fsubrs
dec
or
jg
or
mov
inc
mov
push
mov
bound
arpl
dec
hlt
and
sbb
mov
pop
scas
xor
sbb
or
mov
lods
mov
scas
dec
jge
mov
rcll
push
in
shll
loope
dec
xchg
shrb
fwait
les
xor
add
xor
js
rcr
push
enter
push
out
ja
cmp
fidivl
inc
in
and
stos
jbe
mov
dec
lock
outsl
sub
dec
jns
rdtsc
adc
or
hlt
dec
sarl
sbb
xlat
pusha
pusha
push
mov
and
jl
adc
xor
in
outsb
rcrl
inc
sbb
push
add
add
leave
and
and
add
cmp
insl
stos
in
dec
addl
es
das
fs
mov
sbb
pop
jbe
das
lods
add
and
repnz
dec
cmp
xchg
jp
sbb
ljmp
mov
jb
pop
cltd
sarb
mov
sarb
jecxz
aad
into
scas
pop
mov
or
pusha
sti
cld
shll
mov
jbe
sbb
jp
sbb
xor
in
lods
ret
out
cwtl
and
lods
inc
push
or
jp
jae
xor
push
xor
repnz
movsb
aaa
xchg
inc
and
xchg
jmp
ljmp
sbb
loope
adc
inc
int3
das
add
mov
imul
lods
sbb
mov
mov
fstps
in
inc
fistps
cltd
sbb
out
aad
shl
sahf
mov
sbb
in
pop
xchg
pop
sub
imul
or
out
mov
dec
das
dec
adc
aad
pop
pusha
mov
rorl
shl
add
dec
cltd
aad
fwait
outsl
xor
in
clc
jmp
jo
popa
dec
test
sarl
pop
pop
dec
adc
jnp
xchg
add
loop
bound
inc
xor
out
jae
xchg
div
lods
mov
bt
sub
dec
rcll
aam
out
push
repz
adc
and
xchg
mov
sarl
adc
lods
imul
or
mov
xchg
pushf
daa
xchg
xchg
je
nop
in
cmp
adc
dec
mov
mov
push
push
inc
pop
icebp
lds
xchg
jbe
jbe
inc
cwtl
popa
dec
adc
push
dec
sbb
mov
cli
sbb
xor
imul
pop
icebp
bound
into
out
sub
insl
in
hlt
mov
ljmp
push
cltd
sbb
dec
cmpsl
jp
inc
inc
repz
popa
push
push
mov
scas
cmp
sti
fs
adc
mov
jbe
mov
sub
addr16
mulb
pop
cmpsb
gs
cmp
je
jp
pop
cmpsl
iret
mov
push
insl
xor
and
jno
aam
sarb
jge,pt
mov
aam
outsb
loop
push
aam
imul
hlt
jnp
imul
push
pusha
das
imulb
lods
jb
jns
fnstsw
mov
les
pop
lea
or
stos
push
aas
cwtl
mov
leave
jno
mov
shlb
enter
mov
lcall
sbb
int
push
jmp
in
mov
out
jg
mov
iret
add
fwait
mov
in
and
inc
xchg
push
ds
in
ret
mov
xchg
icebp
mov
cmpsb
add
xor
mov
lock
repnz
sbb
cltd
sbb
sub
ret
js
imul
lret
frstor
inc
mov
or
fdiv
xor
sub
shlb
cli
xchg
add
push
mov
loop
pop
adc
pop
and
hlt
leave
lods
fadds
xor
pushf
jmp
sti
jb
push
lahf
push
and
xor
mov
jns
fistps
xchg
push
jge
daa
daa
add
pop
fiaddl
xchg
insb
inc
int
mov
push
push
lods
or
fidivl
mov
aad
gs
je
cwtl
xchg
lds
loopne
push
addr16
push
jg
popf
adc
xchg
movsb
push
jo
lods
loopne
and
test
sti
push
push
hlt
push
fnsave
xlat
lea
cli
and
out
fistpll
sub
cmp
pop
cmpsl
scas
in
lods
mov
mov
js
mov
call
cmp
inc
mov
push
sbb
lock
adc
xchg
jbe
out
in
in
xor
mov
ficoms
gs
cli
cltd
inc
cmc
cld
lcall
jns
mov
push
adc
push
sahf
pop
jmp
stc
inc
repnz
push
rolb
push
ss
sub
add
inc
xlat
cmp
mov
insl
adc
sarb
and
jnp
fwait
mov
js
mov
test
sub
mov
sub
xor
lcall
in
inc
ss
rcrb
pop
in
fidivrl
sub
mov
add
ds
mov
mov
dec
lods
int
cmp
and
imul
xchg
inc
scas
or
and
dec
call
cmp
ds
xor
xchg
push
filds
cmp
jle
insl
pusha
xchg
push
adc
cwtl
ret
inc
aad
dec
xlat
pop
pop
out
pop
pushf
xchg
sbb
fnstcw
jbe
and
mov
jae
lods
lahf
ljmpw
insb
mov
shll
pop
pop
fildl
mov
xchg
jno
push
repz
push
jae
inc
xchg
clc
xor
test
push
xchg
shr
jns
rcrb
or
push
vmread
xor
rol
cmp
cmpsb
bnd
jnp
and
add
out
fs
repz
push
dec
push
scas
aam
jbe
push
inc
loop
push
jae
movsb
xchg
ja
orl
push
mov
pop
sub
frstor
mov
movsb
or
push
gs
loopne
dec
push
mov
push
mov
sub
or
add
cmpb
push
dec
mov
lret
ret
jno
cmp
add
jp
inc
lret
fists
xor
push
data16
mov
loopne
call
xor
xor
xchg
call
addr16
xor
xchg
test
and
cltd
jl
fs
call
sbb
xchg
ror
pop
das
sbb
pop
jle
mov
loope
fwait
jo
pushf
or
std
and
lret
arpl
lods
mov
sbb
insb
sarb
das
mov
iret
inc
bound
movsb
mov
xchg
lcall
int
bound
pop
gs
in
jnp
addr16
shr
iret
pushf
fildl
cli
aas
or
loope
addr16
dec
inc
decb
mov
hlt
pop
pusha
lahf
jo
lods
jp
jmp
pop
adc
jl
sti
adc
dec
add
shlb
mov
cmp
mov
or
outsb
dec
xlat
icebp
mov
sbb
mov
pop
testl
pop
adc
and
mov
pop
add
jmp
mov
push
mov
leave
or
or
dec
js
gs
decl
push
add
xchg
pop
out
or
rcll
mov
sub
into
adc
mov
testb
inc
dec
aad
lds
xchg
fsubl
sub
int
fxam
popa
movsl
push
rcrb
stc
push
pop
mov
push
push
and
lahf
push
imul
or
pop
pop
js
cmpb
mov
jbe
inc
sbb
mov
jo
daa
sub
fwait
imul
mov
jo
lahf
es
into
jl
jecxz
cltd
mov
std
jbe
jle
imul
mov
movsb
xorl
push
popf
jmp
lret
sub
push
out
inc
add
xchg
mov
dec
xor
pop
sub
iret
mov
mov
xor
sbb
out
loop
call
out
jge
es
in
jae
or
xor
ret
movsb
adc
cs
movsl
pop
pop
clc
cltd
inc
jl
xor
cmp
inc
cltd
out
sbb
fildll
add
pop
inc
loope
push
jo
or
push
insl
imulb
mov
aad
adc
inc
ret
ss
scas
add
lcall
mov
aas
jno
sbb
pop
loope
int
sub
ljmp
out
cltd
clc
push
cs
xchg
loop
mov
pop
cltd
cltd
adc
rolb
dec
orb
insb
jno
adc
fldz
fistps
mov
mov
test
faddl
mov
mov
out
out
mov
sub
adc
xor
orl
inc
stos
imulb
int
xchg
sahf
adc
mov
lods
les
ret
sahf
mov
call
bnd
loop
push
int
int3
sbb
or
roll
ss
mov
mov
mov
cmp
mov
jnp
arpl
pop
mov
xor
outsl
push
popf
add
xchg
mov
xchg
outsb
add
inc
sub
jecxz
fadds
fs
jns
fst
scas
out
mov
adc
xor
inc
sbb
and
mov
inc
and
cmc
sbb
lcall
rorb
sbbl
mov
dec
xchg
pop
push
mov
hlt
push
mov
or
leave
mov
inc
lds
aaa
sub
jno
adcl
scas
int
pop
or
test
pop
divl
aaa
pusha
shr
mov
xchg
pop
inc
sub
js
push
and
mov
dec
push
and
sahf
fcomps
mov
popf
xchg
jecxz
inc
mov
pusha
daa
push
cli
and
push
jg
in
sbb
sahf
scas
inc
push
es
bound
mov
clc
movsl
in
push
out
into
sahf
jo
mov
inc
adc
pop
test
leave
leave
xor
lret
or
lret
mov
inc
arpl
pushl
stos
popa
movsl
and
xor
test
lahf
push
jmp
std
adc
out
add
stos
cli
clc
les
jns
jp
rorb
aad
cwtl
cmc
shll
shll
sub
jle
inc
lret
sti
cs
push
xchg
cltd
imul
cmp
scas
cmc
cltd
or
xorl
fstps
dec
movsl
subb
mov
pop
out
stos
sbb
or
aaa
mov
test
pop
xchg
xor
jbe
sub
push
popf
out
leave
movb
addb
cwtl
ja
mov
icebp
repnz
pop
push
add
mov
cld
mov
push
movsb
pop
outsb
lock
sar
sub
imulb
xchg
sbb
jecxz
imul
insb
data16
xchg
adc
add
push
sbb
stos
push
scas
ss
adc
cmpsl
data16
pop
dec
hlt
fadd
push
call
loopne
and
aaa
notb
ret
scas
std
xorb
cmp
xchg
or
xor
jmp
jno
inc
push
subb
jae
pop
repz
pop
ss
cmp
jecxz
into
jl
testl
dec
and
je
xchg
inc
inc
dec
lret
xchg
and
jp
or
loopne
cmp
push
cltd
or
lods
clc
mov
out
adc
lcall
and
nop
in
push
or
push
xchg
pop
pop
aad
daa
dec
pop
dec
mov
push
jnp
mov
insb
cmp
and
pop
xchg
daa
inc
cmp
dec
xor
jmp
in
sbb
movlhps
cmc
sahf
cmpsb
xor
xlat
lock
cld
sbb
mov
test
fsubs
loopne
push
adc
or
dec
jg
cwtl
push
xchg
inc
sub
sbb
xchg
xor
push
or
mov
jmp
mov
mov
xor
lock
mov
adc
movsl
pop
mov
sbb
jecxz
shl
out
inc
cltd
xor
xrelease
mov
fldpi
sub
sub
and
pushf
cmp
loope
fistps
lret
dec
lret
xchg
push
mov
adc
iret
mov
jae
imul
cld
jmp
mov
mov
pop
sbb
sub
cmp
sarl
push
out
mov
fmuls
xchg
jp
outsb
xchg
int
fadds
dec
test
ret
or
pop
les
pop
out
sbb
adc
fisttps
popf
xchg
or
clc
pop
xor
enter
xor
test
and
scas
or
jno
mov
leave
sub
adc
movsl
and
mov
bound
sub
iret
sti
or
orb
outsb
add
mov
cltd
push
pop
jg
lock
jecxz
mov
movsl
dec
sub
popa
ja
pop
out
das
push
mov
xor
in
insl
fistpll
xchg
add
pop
pop
leave
mov
or
fidivl
xor
mov
out
xchg
dec
sub
dec
mov
mov
push
shll
and
popf
and
sbb
inc
dec
xor
push
jbe
lods
lea
dec
into
sbb
insl
add
mov
lds
mov
push
pop
lods
rclb
dec
or
xlat
xchg
out
push
movsl
push
ret
stos
mov
cli
inc
mov
jae
jmp
inc
in
insb
adc
mov
mov
test
mov
mov
push
sub
adc
push
mov
mov
in
xchg
sbb
call
and
and
mov
test
pop
sub
rorb
mov
scas
cmp
rorb
cli
out
mov
pop
jp
call
add
push
subb
hlt
jecxz
xlat
lahf
xchg
out
dec
pop
xor
ja
push
xchg
mov
add
fstp
xor
xchg
sbb
cmpsl
fsubrs
mov
cmp
mov
std
cmp
jno
ficomps
mov
sub
in
das
xlat
test
in
pop
test
and
sbb
aad
hlt
arpl
iret
mov
push
ror
cmp
pusha
iret
xor
enter
pop
inc
imul
sbb
jns
add
pusha
gs
add
popf
dec
jnp
mov
cmp
cmp
in
movsb
xchg
mov
je
fnstenv
nop
and
cmp
cmp
mov
fisubrl
cmpsb
xor
movl
mov
popf
clc
xchg
ucomiss
and
fadd
movsb
mov
inc
xchg
test
xchg
add
sbb
or
xchg
mov
mov
shrb
push
adc
cli
add
dec
push
movsl
aaa
cmp
and
jne
ja
mov
inc
xchg
cmp
mov
out
stos
sbb
cli
cmp
mov
jp
imul
mov
repz
sarb
jo
jl
je
jp
add
insl
test
push
fcoml
movsb
nopl
insb
inc
ss
jnp
xor
in
or
dec
inc
bound
and
popf
int
rcl
jl
push
push
pushf
pop
and
dec
call
jno
negb
ljmp
arpl
lods
stos
inc
fs
sbb
roll
mov
jno
mov
xchg
inc
push
sti
ss
or
insb
cmp
dec
stos
sbb
jo
mov
pop
insl
xor
outsl
or
je
pusha
mov
and
push
test
loopne
pop
pop
and
je
inc
lret
mov
dec
pop
test
fsubs
fwait
dec
jp
bound
sub
std
test
pop
pop
and
xchg
aaa
mov
scas
daa
mov
xor
jp
jae
or
arpl
fwait
sar
lods
aad
sahf
pop
inc
outsb
xchg
sarb
js
jno
adc
aaa
cli
cli
inc
sbb
loope
jo
cmc
jb
insl
stos
negb
mov
rclb
jg
inc
in
es
mov
xor
loopne
or
cmpsb
xchg
add
dec
mov
cmp
push
je
daa
nop
jl
push
jl
xchg
out
movsb
imul
insb
ljmp
or
sub
mov
push
fadds
sahf
test
dec
mov
mov
gs
sbb
cmp
ss
push
sarl
xor
mov
loop
fistl
js
inc
inc
push
inc
jg
cmp
sbb
into
jp
fstpl
dec
cli
ret
or
adcb
mov
push
and
sbb
shrb
cmpsl
mov
negl
fwait
adc
cs
popf
sub
cmpsb
jg
xchg
pop
push
jnp
inc
out
imul
cmp
push
mov
and
aam
mov
ja
mov
in
jno
pop
movsb
in
jae
sub
les
dec
jmp
ja
mov
jmp
pop
loop
push
bound
add
cmp
cwtl
inc
jnp
in
aas
dec
cld
clc
push
push
enter
dec
dec
in
fs
dec
inc
cs
add
subb
decb
cmc
pop
sbb
in
pusha
sub
mov
add
adc
stos
xor
xor
popf
cwtl
ds
int
fdivrl
mov
scas
sub
mov
inc
mov
loope
xchg
lcall
lcall
xor
movsb
out
popa
test
mov
xchg
ret
sub
inc
inc
repnz
pushf
pusha
movsb
mov
cmp
push
lret
loop
mov
fmull
cmp
sub
rcl
and
sti
popf
pop
ljmp
dec
push
inc
arpl
movsl
outsl
sbb
xor
add
and
push
in
jne
fmull
test
arpl
xchg
lock
mov
or
add
gs
loope
jl
cmpsl
sarl
pushf
xchg
or
je
les
sbb
int
pop
shlb
pop
iret
mov
jnp
aam
jns
dec
std
add
mov
fstpl
cmp
pop
ljmp
ds
sbb
mov
cmpsl
aad
sti
jle
aaa
push
addr16
xor
push
sub
cld
pop
imul
insl
adc
cmc
xor
or
or
xorb
test
pop
adc
cmp
in
add
test
fs
mov
mov
xchg
adc
insb
stc
outsb
rorl
testb
fisttpll
dec
mov
loopne
sahf
xchg
dec
ja
aam
mov
xchg
fldt
js
push
dec
bound
dec
inc
stos
xor
mov
mov
mov
xchg
icebp
out
pop
mov
adc
js
cmp
jb
leave
shlb
xorb
xchg
out
and
jge
test
and
cmp
fidivs
inc
cwtl
jne
sub
push
jp
popa
adcb
dec
sbb
sbb
push
xchg
add
sub
mov
test
add
xor
sbb
movsb
pop
adc
jne
push
push
inc
add
inc
jp
mov
add
sbb
pop
jnp
dec
or
xlat
mov
xchg
mov
leave
xchg
adcl
and
jne
aaa
sub
lds
iret
sub
hlt
icebp
jne
aas
out
leave
scas
mov
testl
cmpsl
imull
in
inc
and
addr16
or
lds
lret
es
loopne
adc
bound
adc
xor
xchg
pop
test
stc
dec
ficoms
movq
pop
frstor
in
rolb
jmp
into
jae
movsb
pop
arpl
test
mov
sbb
push
fdivl
mov
sbb
adc
jle
fimull
jecxz
adc
pop
in
adc
outsb
imul
pop
mov
xor
push
cmp
xchg
and
inc
lods
arpl
bound
loop
jmp
sub
and
xor
lods
in
imul
add
mov
pop
jo
lahf
push
adc
jnp
add
test
nop
icebp
lahf
add
in
add
out
mov
es
and
rcll
lea
shl
out
pop
ror
ljmp
lcall
push
movsb
imul
ret
and
iret
sub
int3
sbb
out
sbb
int
ds
dec
jne
sarl
fldt
pushf
test
mov
pop
and
mov
jo
jne
xchg
addb
pop
lret
pop
jmp
hlt
lcall
mov
adc
sti
sub
mov
cs
dec
ds
xor
pop
fmuls
and
jmp
pop
and
insb
je
bound
fwait
xchg
xchg
hlt
mov
call
adc
out
movsl
out
in
jae
mov
cmp
ret
aaa
jbe
in
cwtl
jae
pop
mov
or
das
pop
cmp
jnp
and
cld
add
adc
dec
leave
cmp
mov
js
jae
stos
adc
jae
push
das
xor
push
fsubrs
popf
jno
mov
rorb
mov
inc
ret
test
mov
rcrl
xchg
lea
adcl
iret
in
cmp
mov
jns
shl
decl
mov
scas
mov
imulb
dec
in
pop
jbe
add
mov
dec
mov
or
stos
mov
int
inc
xchg
push
lret
adc
push
icebp
push
pop
inc
jp
jo
adc
push
inc
mov
sbb
push
jnp
loopne
orl
push
cmp
rcll
sub
imul
test
aad
test
xor
adcl
push
sbb
or
adc
or
jp
jne
loope
inc
inc
sbb
adc
jle
xor
dec
push
je
inc
push
aad
inc
xor
out
dec
lcall
add
pop
sahf
ds
cmp
xchg
adc
or
addr16
push
cmp
mov
leave
jo
xchg
lods
push
push
inc
adc
lods
leave
inc
dec
push
jl
orl
pushf
lock
idivl
and
cmp
jl
gs
ret
popa
inc
ja
lcall
mov
jnp
sub
inc
xor
adc
sbb
sub
dec
movsb
addl
aam
pop
test
xchg
test
shrb
mov
inc
inc
movsb
lods
push
mov
les
bound
shr
sub
imul
sub
jae
pop
sub
mov
adc
xor
cmpsl
push
sbb
mov
xor
mov
add
mov
cmp
lock
dec
mov
xchg
push
xor
push
jp
xchg
or
roll
cmpsl
out
inc
in
and
fwait
lcall
mov
fdivrs
cmpsl
and
sti
ret
jno
stos
sbb
cmpsb
pushf
in
jg
mov
mov
and
movsl
dec
sub
adc
fdivrs
cmc
dec
push
fstpl
push
inc
repz
out
arpl
jnp
pop
xchg
xchg
or
sub
hlt
popa
pop
mov
add
mov
mov
push
sbb
lcall
gs
cli
sub
sbb
jbe
and
and
and
dec
sbb
jg
or
xlat
test
adc
sahf
mov
lret
into
cmp
xchg
mov
pop
cmp
sub
sbb
add
f2xm1
cld
and
and
inc
mov
or
cmp
das
ret
sub
pushf
sahf
sti
fisubrl
sbb
cld
in
stos
pop
push
in
xchg
fcmovnu
lret
sub
or
int3
add
daa
jecxz
xchg
pop
ja,pn
cmp
pushf
je
mov
adc
idivl
mov
lret
test
cli
test
add
sbb
loope
xor
pop
or
add
pop
popl
lods
cli
xchg
popf
subb
push
xor
test
push
fdivrl
jne
lahf
push
mov
mov
jo
mov
and
xchg
sbb
stc
push
icebp
out
jno
inc
fstl
adc
adc
daa
and
shrl
sahf
dec
xor
stc
scas
popa
push
fnstcw
in
rorb
sub
es
aaa
add
jge
and
test
loopne
mov
jno
xchg
push
cmp
adc
mov
xlat
fistpl
xchg
sub
push
jo
xchg
mov
inc
inc
fildll
sub
clc
insl
lret
outsl
cmpsl
iret
xchg
js
lcall
rclb
push
mov
xor
mov
rcrl
mov
sbb
leave
add
dec
jb
aas
movsb
sahf
cmpsl
xlat
aad
add
mov
dec
es
and
sub
call
sub
pop
mov
jns
mov
jns
xchg
orb
pop
mov
pop
std
lahf
or
repz
sub
push
aas
ss
insb
repz
lea
pop
fistps
inc
sbb
fsts
cld
xor
xchg
fcmove
jbe
dec
xor
data16
fs
outsl
repz
into
outsl
in
jo
scas
mov
ficoms
inc
jo
pusha
lock
add
cwtl
pop
push
je
ficomps
push
adc
jnp
cmc
pop
cld
fxtract
cmp
fwait
sbb
movsb
lret
cmpsb
xor
scas
enter
out
push
jnp
mov
sbb
cltd
push
lahf
cmpsl
lret
lret
mov
sub
xor
out
pop
jnp
jnp
loop
push
and
cmpb
je
cmp
jns
add
cmp
xchg
mov
mov
sub
daa
or
into
scas
cmp
xor
mov
gs
mov
out
cmp
mov
outsb
or
dec
imul
cmpsb
ljmp
aas
push
mov
push
dec
or
addb
pop
lods
clc
hlt
in
fldcw
inc
xchg
inc
mov
adc
xchg
in
dec
es
std
bound
aad
adc
stos
dec
cmp
lock
sub
mov
loop
lcall
test
sbb
dec
sub
inc
pop
or
stos
pop
rcrl
jbe
mov
xchg
xlat
cmpsl
out
adc
pusha
sub
das
out
addr16
ret
jnp
addr16
test
mov
push
data16
sub
lret
push
dec
and
adc
push
jns
mov
out
adc
cmp
xchg
movsb
fstpt
lret
mov
ja
sarb
cltd
and
sub
sub
nop
out
adc
loopne
lods
xor
push
or
fistps
pop
in
cmp
cmp
cmp
add
repz
es
mov
fldl
sub
cmp
inc
scas
dec
popf
imul
je
mov
shl
jg
add
call
loop
ja
xor
outsl
mov
jno
cmpsl
rcrw
pop
add
shrl
negb
mov
add
fidivs
fsubrp
test
lock
push
iret
xchg
mov
mov
out
fs
lahf
and
xchg
sbb
mov
mov
or
bound
int
adc
hlt
leave
dec
pop
loopne
push
dec
push
cmp
scas
scas
jno
addr16
scas
rdtsc
clc
sub
inc
dec
mov
mov
push
jl
xchg
ret
pop
sbb
add
in
mov
inc
stc
xor
add
adc
sti
outsl
xor
jnp
ds
je
add
mov
test
std
adc
jecxz
mov
in
xchg
cmp
jmp
test
and
ret
sbb
popa
pop
stos
mov
sbb
iret
out
ja
sbb
xchg
orl
lods
adc
and
pushf
sub
fwait
bound
mov
mov
rcrl
test
xlat
and
jg
movsl
popa
xor
add
push
std
xor
mov
mov
jnp
xchg
sbb
inc
ds
imul
pop
icebp
and
xchg
push
mov
sbbl
push
sub
sbb
sub
inc
in
popa
ss
push
pop
cmc
test
test
or
lret
ds
jecxz
imul
outsb
push
dec
dec
adc
jnp
mov
dec
jae
add
dec
sbb
xchg
xlat
or
dec
mov
cs
aad
mov
je
or
in
fld
loope
mov
movsb
sbb
aas
lcall
in
add
daa
inc
repnz
ret
cmp
xor
test
lret
outsb
ret
jecxz
push
aaa
jecxz
push
dec
test
adc
cmp
sub
xchg
add
test
pop
sub
cmp
lock
fldcw
fbld
xor
ja
push
shll
in
imul
and
inc
push
mov
push
sarb
xorl
mov
mov
mov
inc
into
rorb
xor
mov
and
aad
cwtl
ret
jns
test
sub
lea
adcl
push
jnp
add
addb
filds
jbe
movsl
inc
and
mov
mov
pop
ror
mov
lea
outsb
mov
jns
fwait
sub
xor
ljmp
or
cmp
push
repnz
jecxz
pop
pushf
ljmp
shll
or
repz
sbb
lcall
xchg
inc
popa
stos
xchg
loop
rolb
dec
mov
shlb
inc
ljmp
arpl
ret
cli
pop
pop
movsb
jg
mov
mov
int
dec
dec
mov
fnstenv
mov
jge
nop
mov
lea
ds
and
repz
jne
dec
jge
loop
cld
lcall
in
push
or
popa
stos
dec
fwait
pop
fwait
das
inc
push
addl
je
flds
ret
adcl
mov
in
test
cmp
aad
notl
cmpsb
sub
xchg
sbb
out
pop
inc
push
dec
push
dec
dec
xor
sub
nop
pop
js
or
mov
rolb
xchg
fmull
jmp
das
mov
clc
cmpsl
push
into
inc
adc
fsubrl
loope
mov
icebp
arpl
adc
dec
cmp
dec
sti
imull
pop
repz
pop
in
cmp
or
xchg
sub
imul
sub
aas
mov
cwtl
add
or
arpl
in
adc
scas
loop
jne
lds
add
lcall
adc
dec
fstp
dec
in
adc
pop
cmp
call
mov
dec
xchg
mov
out
and
mov
cld
fmull
sub
xor
cmovae
je
cmp
pop
or
mov
cmc
fcomps
bound
jns
mov
popa
cwtl
sub
cld
leave
movb
cltd
and
xchg
out
and
mov
add
add
cmp
mov
mov
dec
pop
mov
mov
orb
sub
mov
ret
aas
sub
cmp
or
fwait
in
xchg
inc
test
and
repnz
mov
aaa
pop
in
test
adc
das
dec
mov
xor
push
adc
incl
ljmp
mov
xchg
ret
std
aaa
or
sub
dec
mov
rolb
rolb
sub
out
add
je
dec
movsl
dec
xchg
push
jp
xlat
mov
roll
jmp
cmpb
shll
lahf
sub
clc
xchg
pop
leave
popa
cmpsl
pusha
ret
in
sbb
stos
mov
inc
mov
jo
mov
mov
testl
pop
sahf
add
jp
inc
lahf
aam
push
jle
adc
pop
ja
mov
xchg
out
icebp
xor
movsl
xor
cmpsb
or
xchg
pop
call
cmpsb
push
jp
sub
popf
cmp
adc
insb
arpl
cmp
cmp
outsb
mov
cmp
xor
mov
and
sub
test
sub
dec
fiadds
pop
xchg
sbb
nop
repz
push
cmp
movsl
sti
es
fstpt
stos
add
shrb
jne
jmp
imul
insb
push
addr16
call
dec
insl
or
cld
xchg
jnp
xchg
ja
mov
neg
inc
mov
push
lcall
pop
mov
push
stc
and
adc
and
aaa
ret
mov
out
fsts
mov
ds
mov
stos
mov
mov
lret
pop
xlat
in
inc
rolb
pop
sbb
xchg
addr16
mov
sub
lcall
or
idivb
push
mov
insb
cmp
scas
lock
push
cwtl
rcr
mov
mov
cs
sub
pop
jb
jnp
sbb
mov
iret
xor
daa
call
or
test
cmp
in
test
out
adc
inc
push
jae
mov
enter
nop
clc
inc
movsb
jg
lret
or
pop
enter
leave
gs
rcrb
push
mov
jmp
stos
add
sbb
dec
cmp
loopne
test
jno
jo
push
jle
lcall
stos
dec
push
jecxz
daa
aaa
lods
lock
push
lcall
cmp
inc
ficomps
cs
imul
mov
and
loop
xchg
add
call
adc
xor
loopne
lea
addb
ret
xor
mov
les
cli
out
scas
sub
decl
cmp
mov
sub
pmaxsw
pushf
pop
rolb
push
nop
push
nop
adc
fwait
xor
lret
subb
pushf
leave
push
push
cli
lret
or
stos
mov
jmp
fimuls
jns
out
test
into
and
and
pop
js
jmp
and
pop
test
jp
pop
loope
adc
pop
xor
push
mov
arpl
xsavec
int
mov
cmp
or
sar
and
icebp
repz
adcl
das
inc
in
sbb
add
sbb
mov
jmp
popa
xor
ret
mov
and
icebp
sbb
sbb
adcl
testb
sbb
mov
add
mov
icebp
and
daa
push
mov
lahf
addr16
or
sbb
testb
pusha
gs
icebp
pop
cmp
fdivrl
divb
aad
jle
rcrl
rcrb
add
xchg
push
dec
mov
push
inc
cmpsb
jg
dec
jno
xchg
call
inc
mov
jge
push
frstor
inc
push
ret
fwait
xchg
mov
outsl
jge
mov
cli
jno
xchg
inc
adc
es
xor
mov
mov
xchg
je
mov
jg
mov
inc
dec
dec
mov
inc
cltd
and
data16
mov
xor
sub
lahf
xor
arpl
jno
inc
jbe
push
lret
fnstenv
cmp
hlt
loopne
fstl
clc
clc
jl
or
cmp
jmp
xlat
push
mov
les
mov
imul
daa
lret
cmpsb
adcl
push
pop
xchg
push
stos
jno
dec
les
mov
sarb
xor
add
jge
push
imul
icebp
test
cmpsl
cli
rcll
cs
xor
adc
enter
push
jo
cmc
add
insb
xchg
movsl
xchg
into
insb
rcrl
out
ret
call
push
cmp
jl
sbb
or
inc
push
mov
dec
gs
sub
push
fcompl
sub
shlb
hlt
mov
cwtl
or
dec
fdivs
and
jae
fildll
ja
mov
mov
sub
mov
or
inc
clc
fnsave
pop
hlt
insl
enter
aas
out
in
and
push
fidivl
add
enter
and
jo
xchg
ret
jmp
mov
lahf
xor
aad
into
ja
repz
rorb
ret
in
push
fstpl
jns
popa
ja
lock
scas
sbb
pusha
shll
mov
add
rorl
repnz
dec
push
fwait
shl
jo
xor
or
lods
jl
mov
pushf
mov
mov
add
xchg
push
ss
rcrl
int3
movsb
insb
dec
xor
or
mov
icebp
pop
sarb
popa
inc
repz
adc
cltd
pop
int
bound
add
xor
sar
adc
sti
in
and
or
pop
push
xor
jb
and
sti
cli
dec
add
lcall
fists
clc
fldcw
sbb
xor
jp
lret
and
sti
jbe
rolb
pop
inc
add
inc
in
mov
push
aaa
ud2
mov
stos
inc
sbb
mov
pusha
cmp
fldt
repz
aas
adc
sbb
ja
inc
andb
pushf
mov
dec
test
pop
inc
sti
or
test
dec
mov
mov
xchg
mov
sbb
sub
pusha
jmp
cmpsb
test
loop
push
mov
and
mov
cltd
int3
mov
pop
and
jge
or
xchg
aad
add
or
push
cmp
and
cmp
cmp
or
in
push
mov
dec
mov
push
jl
mov
mul
adc
add
dec
loopne
mov
in
out
sbb
jbe
jno
mull
mov
jecxz
jnp
jae
rcl
jbe
and
inc
jp
dec
jno
adc
xor
sub
xor
test
dec
mov
int
cwtl
xor
lods
sub
dec
mov
sub
sti
sub
or
fs
rorb
out
mull
adc
mov
mov
pop
daa
cmp
test
jns
pop
inc
lock
or
int3
pop
pop
adc
int3
push
subl
mov
cmp
jg
stos
xchg
loop
addr16
and
adc
adc
das
mov
or
add
movsl
inc
push
adc
adc
stc
sub
dec
xor
outsb
sub
push
sub
pop
adc
sub
jecxz
aas
jg
jnp
add
jp
push
dec
cmpsb
arpl
pop
mov
jp
bound
int3
gs
aad
xlat
leave
mov
mov
jp
xchg
add
xchg
xor
arpl
or
call
loop
mov
inc
cmc
jge
push
push
xorl
mov
push
dec
and
ror
pop
testl
xchg
and
pop
pop
jecxz
out
pop
in
adc
pusha
xchg
mov
fxch
test
insb
stc
cmp
clc
inc
loope
and
aas
add
loop
mov
faddl
push
jge
mov
sbb
mov
in
mov
jnp
incb
scas
push
fdivl
jle
lds
lods
or
shll
adc
mov
xchg
push
or
out
icebp
add
fs
gs
push
pop
das
ljmp
mov
int3
or
outsb
je
and
lea
adc
lahf
dec
imul
xchg
sbb
stc
mov
fstpl
or
outsb
aaa
pop
and
mov
add
sub
rcr
test
xchg
test
mov
mov
shlb
adc
rorb
in
or
lds
fwait
sub
call
fldenv
cld
sub
out
in
incb
push
fsubrs
pop
pop
mov
jecxz
loope
jno
dec
cpuid
mov
shll
sub
stos
pop
add
pusha
popf
cli
jle
mov
aas
ja
mov
push
iret
jno
daa
push
xor
jge
dec
or
xchg
jle
or
xor
push
push
pop
lcall
je
movsl
lahf
je
mov
inc
push
adc
sbb
movsb
jecxz
decb
jp
cmp
add
add
pop
loopne
stc
shl
xchg
sbb
inc
cmpsb
sub
mov
jg
xchg
fs
xchg
adc
xchg
frstor
pop
cld
imul
lahf
cmp
pop
ja
or
les
xlat
sub
bswap
enter
push
mov
arpl
mov
loop
inc
out
push
cmp
pop
das
push
fwait
bound
mov
hlt
mov
fldl
sbb
sub
xchg
scas
sti
mov
or
and
pop
add
icebp
cmc
fcompl
js
cld
outsb
mov
jle
dec
sbb
sbb
popf
adc
inc
dec
mov
add
fs
andl
xchg
push
push
fs
mov
aaa
mov
pop
xchg
push
xchg
std
stos
mov
jl
mov
sub
mov
cltd
pop
xchg
pop
pusha
sub
jle
mov
loop
sahf
test
pop
call
lret
or
push
sbb
sbb
in
mov
movsb
jns
jg
cmpsb
pop
push
mov
pop
jle
fst
mov
mov
mov
sbb
pop
mov
xchg
push
add
and
jg
sub
xor
aas
push
mov
lcall
dec
lds
mov
mov
xchg
mov
enter
js
sub
pushf
sub
addr16
cld
sbb
icebp
iret
shll
inc
or
sti
cmpsb
fldt
and
mov
insb
adc
pop
mov
jnp
in
popa
loop
mov
mull
mov
rolb
cwtl
cwtl
sbb
or
push
fwait
mov
pop
fs
movsb
movsb
fldenv
sbb
push
xchg
mov
fwait
rcll
fcmovu
inc
mov
and
pusha
pop
scas
test
push
mov
pushf
cmp
push
xor
dec
push
lret
dec
fs
jmp
inc
rcl
cmp
cmpsl
stos
mov
or
mov
out
ja
pop
or
cli
pushf
pop
xchg
push
mov
adc
add
and
mov
cmovnp
icebp
pop
and
jecxz
push
mov
cmp
sub
fidivl
ja
arpl
test
loop
sub
cmp
insb
lods
scas
out
xchg
or
sub
repnz
add
es
push
or
jo
lods
sub
push
out
and
xlat
mov
mov
divb
lret
push
add
mov
cmp
cmpsb
sbb
fsubrs
sbb
jmp
jb
adc
jmp
mov
hlt
mov
pop
shl
test
xchg
insl
test
sbb
add
movsb
xchg
dec
popf
xchg
cmc
push
xor
xchg
orl
fistpll
sub
popf
pop
add
in
cs
ds
or
stos
and
push
mov
jns
lret
jg
pop
xlat
push
xchg
andl
mov
inc
mov
jl
fs
sbb
sub
loopne
ds
xchg
mov
lock
je
and
dec
rcll
xor
cmp
jnp
ljmp
jnp
icebp
dec
int3
xor
movsb
xchg
fdivs
mov
sti
jb
in
cmp
dec
jmp
inc
movsb
lcall
lock
sbb
stos
jno
int3
lahf
fimuls
pop
cmp
sbb
mov
cmpsl
or
daa
sub
mov
adc
jl
pop
dec
pusha
pushf
mov
pop
mov
ret
xor
imul
cwtl
incb
mov
sbb
cwtl
data16
insb
cmp
or
gs
xchg
push
rcrl
imul
aaa
push
jg
jbe
add
int3
das
mov
test
movsl
leave
xor
out
mov
iret
xor
std
adc
fsubrp
divb
clc
or
jp
popa
movb
cmp
sub
mov
inc
loop
sar
int
ss
lds
mov
loope
fs
loop
dec
testl
testl
lds
nop
add
dec
pushf
rol
sub
mov
movsl
mov
push
in
cmp
imul
xlat
xchg
and
dec
adc
jg
lret
fimull
jae
mov
sbb
jb
or
stos
sub
cmp
cwtl
sub
mov
rclb
popf
ret
filds
mov
rol
out
outsl
mov
js
fisubrs
add
in
pop
cmp
jmp
adc
cmp
mov
dec
push
push
cld
setno
jno
inc
ss
lret
in
aad
cmc
jns
lret
dec
pop
mov
pop
or
pop
nop
inc
fldcw
mov
lret
mov
mov
dec
fsubrl
add
enter
mov
pusha
dec
mov
sub
pop
test
movsb
ja
pop
pop
inc
cmp
xor
mov
cmp
ds
scas
inc
in
lods
ja
dec
testb
jl
cmp
mov
and
push
sbb
mov
pop
cwtl
mov
roll
fisttpll
pop
lahf
sub
fildll
insl
inc
jno
cwtl
mov
popa
xchg
popf
arpl
orl
cltd
push
push
rcll
jno
add
loopne
into
mov
adc
cmc
leave
ds
push
sbb
pop
jns
push
test
inc
ficompl
add
stc
cli
fsubp
push
fstps
xchg
pop
xor
xchg
fadds
fisubs
call
jg
lret
cltd
gs
sub
jo
mov
xchg
test
loop
push
shlb
mov
xchg
cmpsb
mov
xchg
insb
scas
xorl
cmp
scas
cmpsl
dec
adc
add
cmp
or
fimull
fcmovnb
xchg
dec
add
add
aam
jecxz
jns
shlb
aas
lock
push
xchg
mov
sub
cld
test
sbb
shlb
mov
je
hlt
pop
push
mov
iret
repnz
lret
dec
and
dec
jle
pslld
popa
call
mov
adc
out
lock
shl
mov
rcrl
loop
push
and
adc
lret
lock
rol
nop
lahf
lock
lock
fistpll
ffreep
mov
xchg
ljmp
js
in
or
shl
adc
cltd
sbb
outsb
repnz
fsubrs
ret
xchg
fs
cli
cwtl
dec
inc
movsl
mov
push
mov
fcomps
js
adc
or
xor
dec
test
jae
popa
test
popa
mov
cmp
jg
roll
adc
in
mov
in
adc
cmp
insl
incl
mov
push
es
or
sub
repz
addr16
pop
ret
or
adc
sub
and
jmp
xchg
xor
es
inc
mov
inc
into
add
dec
in
push
sub
roll
sbb
pop
inc
xchg
mov
ret
loope
pop
jmp
xchg
add
inc
xchg
aad
jg
lock
ret
insb
cs
cld
inc
jnp
jge
dec
jle
jnp
int3
inc
gs
imul
pop
pop
inc
add
clc
xorb
pop
push
sub
mov
std
push
cmp
cmp
movsb
test
mov
push
clc
test
loope
divl
mov
rol
in
test
jns
add
inc
in
sarl
adc
cmpsb
cmp
push
push
push
cmc
jno
mov
cmp
jb
xchg
sbb
je
stos
insl
pushf
cmp
lcall
xchg
xorb
cltd
shrb
fdivrs
mov
fmull
das
in
cmpl
lds
add
push
fdivs
xchg
imull
mov
and
push
push
or
sub
cmp
inc
xchg
or
lea
lahf
adc
xlat
data16
out
xor
mov
pop
bsf
dec
mov
mov
fdivrp
lahf
and
mov
xchg
and
leave
les
mov
sub
jle
test
cmp
add
ss
loope
sti
push
adc
aam
xchg
lcall
adc
fwait
rcrl
mov
mov
sub
xchg
test
mov
cmpsb
mov
mov
out
mov
test
fstpt
orl
stc
mov
xor
mov
sbb
pop
pop
stc
aas
mov
ds
call
negb
and
int
inc
idivb
rcl
sbb
dec
in
and
xor
pop
fisubrs
mov
add
pavgb
pop
jp
call
add
aaa
movsb
fstl
je
stc
movsb
sub
fs
icebp
dec
mov
call
pop
push
mov
shl
xchg
inc
sbb
push
jle
cmc
pop
popf
mov
push
pushf
and
fistpll
add
mov
stos
mov
push
xchg
xchg
jb
sti
push
xorb
or
and
frstor
icebp
cmp
sbb
dec
xlat
xchg
mov
call
insl
push
mov
mov
bound
push
jae
lret
test
jb
scas
cmp
es
lods
cmp
pop
xor
js
pop
mov
fcoms
fsubl
js
push
mov
cmp
dec
pushf
xor
mov
rcrb
andb
mov
mov
mov
aas
pop
fcmovne
test
xchg
adc
pop
and
out
mov
and
imull
scas
aas
int
sub
in
ja
dec
xchg
mov
in
movsb
aam
mov
or
jne
push
cmp
mov
and
mov
cli
addr16
in
popf
dec
inc
loop
shlb
adc
pop
sub
test
aas
xlat
inc
int
xchg
jecxz
stos
cli
jl
jle
jae
not
lret
scas
frstor
test
mov
and
mov
dec
outsl
imul
mov
mov
dec
sti
aam
mov
sbb
loopne
mov
cmp
leave
out
daa
pop
lock
rclb
out
pop
insl
xor
mov
stos
mov
loop
xchg
loopne
aad
lds
dec
adc
add
pop
cs
dec
dec
push
adc
inc
dec
imull
mov
xchg
out
lea
jno
pop
rclb
sbb
fcompl
inc
sub
cltd
call
dec
mov
sub
adc
bswap
pop
out
or
sub
lds
pop
mov
mov
mov
dec
pushf
mov
pusha
iret
test
push
ljmp
pop
call
mov
pop
das
inc
lcall
popa
jecxz
jb
pop
test
test
loop
dec
ficomps
xchg
dec
nop
pop
aaa
cmp
adc
mov
cmpsl
xchg
sbb
xchg
imul
rclb
pop
sub
pop
and
sub
fnstcw
lret
movsb
jl
or
xor
sub
sahf
out
jb
inc
pop
xor
sti
mov
mov
jb
xor
pop
sbb
mov
lcall
and
push
outsb
mov
imul
pushf
loope
xchg
pop
xor
int
add
out
jmp
push
xor
rol
lcall
xchg
aam
movsb
insl
sbb
or
fildl
xchg
adc
cmp
dec
mov
sbb
jae
pop
fistpll
push
mov
push
pop
insb
lods
dec
outsb
and
dec
xor
sbb
add
aaa
movsl
add
push
dec
jne
pusha
xor
in
aaa
add
aam
out
ljmp
jae
scas
lret
mov
ficomps
add
inc
push
or
mov
xchg
fnsave
xchg
sub
les
add
jl
push
iret
ljmp
adc
pop
mov
mov
es
lods
sahf
les
mov
lock
mov
or
jbe
int
dec
inc
jb
fisubrl
shl
push
ret
aam
add
pop
movb
dec
enter
insl
data16
shlb
cmp
mov
stos
and
pop
cmc
icebp
int3
jbe
or
pop
inc
jns
sub
ljmp
in
pushf
clc
jae
mov
add
movsb
xor
pop
push
dec
sar
inc
lds
jmp
outsl
pusha
enter
test
dec
fwait
mov
mov
lret
in
nop
and
inc
xlat
jp
jb
cmp
and
adc
pop
push
or
rol
jecxz
cmp
xlat
imull
test
loop
sub
jne
hlt
or
stos
jmp
sbb
aam
xor
pusha
jne
sbb
jle
jp
inc
cmc
mov
and
fisttpll
jl
cwtl
stc
jg
scas
pop
and
stc
into
lods
pop
adc
stos
call
add
mov
je
popa
outsb
mov
dec
or
insb
sub
xchg
mov
out
or
jp
jl
xor
into
test
js
xchg
adc
popa
mov
and
mov
icebp
loop
mov
out
add
int
sarb
add
mov
mov
roll
mov
jbe
mov
push
cld
fwait
or
sbb
nop
call
push
inc
add
pop
pop
add
pop
icebp
mov
jle
dec
mov
xor
into
hlt
ljmp
ret
mov
imul
push
mov
sbb
push
cmpsb
icebp
push
mov
dec
rcll
test
aas
scas
jne
rorl
jne
cmp
fldcw
rorb
xchg
pushf
int
addr16
mov
addr16
inc
inc
mov
out
pushf
outsl
bound
mov
nop
fisubs
xor
push
mov
dec
mov
es
dec
lcall
xor
pop
clc
pop
arpl
cmp
mov
std
pop
fnstcw
dec
rorl
lods
movsb
fxch
cli
notb
ret
shll
push
aad
inc
and
inc
popf
outsb
aad
cmp
test
fyl2xp1
aam
leave
mov
stc
adc
sbb
push
ret
sbb
or
jmp
lds
xor
test
push
and
mov
lods
repz
cwtl
or
inc
mov
mov
mov
xchg
repnz
cmp
mov
dec
lock
xor
add
adc
repnz
clc
arpl
pop
stc
pusha
pop
out
cli
adc
nop
mov
out
sbb
add
dec
pushw
push
pusha
movsb
mov
test
insb
sahf
add
ss
jns
sbb
mov
cmp
mov
clc
aad
jo
sub
adc
inc
or
in
out
inc
xor
std
jg
pop
jae
xor
mov
into
inc
rorl
add
loope
xor
sbb
mov
dec
mov
mull
push
jge
ljmp
testb
rorb
add
mov
ja
adc
in
ljmp
push
xchg
and
icebp
dec
rcll
sbb
add
dec
aam
icebp
inc
mov
xorb
nop
pop
mov
leave
popa
push
movsb
popf
sub
test
test
dec
add
mov
xor
push
orl
les
imulb
jecxz
lcall
add
fisubrl
cmpsb
incl
sub
clc
add
mov
imul
jg
lret
repz
addr16
pop
ss
pushl
subb
insl
and
and
xchg
mov
dec
pop
push
test
inc
adc
push
dec
int3
inc
loop
ljmp
ljmp
movsl
cwtl
out
inc
cmp
ficompl
pop
jge
fcoms
xchg
or
push
inc
rorl
cmp
scas
jge
inc
jne
out
and
cmp
test
mov
jmp
and
cmp
xor
jne
jge
pop
mov
inc
loope
add
mov
dec
sbb
and
out
sbb
daa
in
jnp
mov
push
sub
loop
popa
mov
xchg
mov
mov
loop
ss
movsb
xlat
dec
loope
lea
adc
and
sub
aaa
lea
inc
out
sbb
push
rcll
je
sbb
es
xchg
ret
mov
addr16
jae
mov
fnstenv
icebp
pop
xchg
cld
outsb
adc
loopne
out
cltd
mov
je
jp
inc
jae
cmp
xor
test
or
jge
test
out
jb
xor
dec
mov
mov
je
dec
push
pop
test
std
leave
mov
pop
and
add
idivb
xchg
sbb
xor
push
inc
mov
mov
sahf
repz
outsb
jae
ficoml
int
push
add
sbb
jl
popf
pop
mov
xchg
aam
in
sub
int3
jmp
sub
dec
in
enter
xchg
ficoms
mov
fdivl
mov
pop
pusha
and
cmp
push
daa
push
pop
push
and
es
int3
cmpsb
imul
xchg
ljmp
nop
daa
call
int
mov
mov
hlt
push
xor
imul
inc
mov
fmulp
mov
push
fsubrs
and
bnd
cld
jae
fldt
mov
xchg
ss
ret
roll
dec
mov
or
scas
add
pop
mov
inc
push
jge
ja
paddd
call
or
loopne
jnp
and
mov
icebp
xchg
and
push
jg
lcall
push
mov
pop
inc
pop
fisubs
fadd
xchg
xchg
loopne
mov
and
daa
out
mov
mov
icebp
into
mov
sbb
mov
cltd
sub
jb
jne
xchg
jge
jnp
add
in
adc
fiaddl
adc
inc
inc
adcl
in
jb
mov
dec
das
adc
inc
xchg
pop
lcall
int
test
ror
dec
mov
cli
inc
xlat
les
stos
dec
iret
js
out
stos
or
and
lret
arpl
gs
add
adc
movsl
xchg
js
jl
cmc
xor
mov
add
popa
and
or
aam
adc
inc
xchg
mov
leave
cmc
lahf
scas
adc
fiadds
jl
push
xor
jbe
sahf
pop
inc
jbe
imul
jbe
ljmp
jecxz
jecxz
cwtl
mov
cmp
bound
rcrb
mov
mov
add
outsl
arpl
mov
mov
jecxz
rep
adc
mov
dec
or
push
mov
arpl
cmp
aam
mov
mov
and
rcr
insl
cmpsl
pop
stc
ss
xchg
dec
ja
or
xor
jg
inc
shrl
loop
dec
inc
jg
dec
cmp
push
adc
cli
jae
js
sti
pop
mov
movsb
fistpll
fidivrs
scas
fsubr
loope
xchg
push
add
mov
ja
mov
mov
roll
std
xor
test
mov
pextrw
mov
push
dec
pop
sti
and
jbe
clc
repz
cmp
mov
repz
mov
test
into
mov
fldt
pop
cmp
test
ljmp
fimuls
sbb
jmp
mov
push
xchg
ds
cwtl
mov
sub
es
push
mov
pop
or
incl
mov
jb
pushl
repnz
jno
cmp
jl
jbe
mov
imul
loope
cmp
inc
shlb
push
ret
add
ss
cmp
pop
int
add
sub
pop
adc
stc
mov
push
lcall
adc
cmpsl
enter
fcmovb
bound
mov
mov
test
jl
mov
or
and
push
fcompp
shll
push
das
pushf
fisttpll
inc
sub
lea
cwtl
mov
aaa
jle
daa
fimull
xchg
outsb
inc
mov
in
lret
dec
push
rcrl
pushf
jmp
mov
in
jle
mov
xchg
clc
fidivs
xchg
push
les
mov
xchg
pusha
add
fcompp
addr16
xchg
pop
shr
add
imul
dec
dec
cltd
aaa
aad
pop
scas
xlat
roll
jo
jnp
fcoml
xor
das
rcll
insb
les
sub
stc
dec
nop
jb
mulb
fsave
fisubs
cmc
ljmp
mov
mov
scas
or
rol
sbb
je
pushf
repnz
je
pop
je
incb
lds
push
shlb
test
int
add
push
js
lcall
mov
cmp
mov
xor
leave
mov
push
dec
xor
and
add
fldenv
data16
xor
rcll
ljmp
flds
push
rcrl
add
in
shl
sbb
mov
repz
mov
inc
or
mov
lret
incl
push
dec
rol
jmp
sub
push
stc
insl
in
push
mov
mov
adc
daa
mov
dec
push
lcall
add
movsl
fldenv
push
insl
pop
incl
inc
ret
dec
inc
jp
loop
sub
adc
jle
sbb
mov
enter
das
cmpsl
fisttps
push
mov
out
push
jno
pushf
in
scas
enter
shlb
notl
hlt
lods
and
cld
sti
mov
fisttpll
rolb
repnz
lcall
imul
imul
sahf
lret
pushf
std
iret
jecxz
inc
insl
nop
mov
sbb
cmc
sbb
in
push
mov
lcall
popa
inc
ljmp
mov
jne
add
out
pop
bswap
aam
jae
in
clc
mov
into
repnz
cmp
stc
ret
sbb
cmp
dec
stc
jecxz
lret
aas
shr
icebp
pop
es
cmp
lods
dec
pop
or
jl
loop
mov
pop
push
push
jnp
mov
fs
and
dec
xor
dec
or
cli
imul
cmovl
test
mov
sub
pop
inc
fnstcw
ficompl
push
outsl
xchg
aaa
cmpsb
shll
xchg
cmp
mov
sub
push
adc
or
mov
sarl
dec
lea
test
icebp
mov
push
shrl
mov
mov
push
outsb
xor
lods
jb
mov
xchg
js
ficoms
cmpsl
pop
fidivrl
cmp
jmp
push
negl
push
push
lods
test
dec
insb
mov
hlt
pop
jge
aaa
movsb
push
inc
cmpsb
pop
and
mov
mov
fidivl
sub
movsl
shll
pop
push
jecxz
mov
cmpsl
sbb
mov
insb
lds
mov
xchg
cld
stos
push
stos
jl
sub
aas
add
adc
and
mov
xchg
aam
inc
cli
xlat
jb
sahf
push
inc
dec
jge
popl
out
in
and
fnstcw
lds
aaa
movsl
mov
in
sub
sbb
mov
sbb
cmpsb
sub
xor
pop
rclb
mov
or
mov
shll
jns
adc
pop
in
addl
sub
pushf
dec
xor
movsl
inc
adc
shl
leave
gs
pop
fstpl
inc
push
add
jns
cmp
repnz
adc
jl
negb
das
dec
repnz
andb
out
pop
sbb
cs
das
mov
mov
or
cs
enter
xchg
mov
jl
adc
lods
push
dec
insl
jb
bound
int
xor
inc
xor
xchg
out
pop
add
movsl
cmc
dec
lahf
das
xor
jmp
repz
push
cmpsb
clc
cmp
jo
out
xlat
xchg
and
sub
xlat
or
les
push
stc
imul
subl
pop
xlat
sub
mov
fcoml
jb
sub
jecxz
enter
xor
roll
test
sub
je,pn
add
mov
pop
int3
and
arpl
lahf
and
inc
sub
inc
js
insb
jo
ffree
lea
xor
push
popl
sbb
sub
lcall
lahf
mov
insb
mov
in
xchg
cmp
lcall
aas
movl
xchg
lods
pop
cmp
inc
jp
mov
shrl
cmp
pop
lods
mov
stos
jge
shr
sbb
fcomps
gs
lahf
inc
fnstcw
mov
xchg
test
or
jmp
loopne
ret
push
push
pop
sahf
pushf
adcb
ret
out
stc
mov
sbb
jmp
pandn
or
gs
and
fs
icebp
loopne
inc
mov
sahf
mov
mov
fwait
or
mov
in
inc
aas
push
mov
mov
cmp
ja
lret
and
pop
xchg
stos
pop
cmc
pop
in
sub
test
cmp
or
addr16
testb
pop
add
inc
call
dec
std
in
push
pop
xor
add
hlt
pop
out
mov
mov
jg
add
xor
pushf
adc
mov
cwtl
ds
rsm
ret
sti
push
jbe
and
jno
fistl
mov
cwtl
sbb
mov
pop
mov
xchg
rol
hlt
push
mov
lahf
mov
mov
test
inc
iret
inc
and
loope
insl
jne
add
shl
imul
inc
jnp
repnz
imulb
inc
add
jmp
lcall
inc
dec
or
inc
cmpsb
frndint
sub
jl
lea
dec
scas
bound
imul
in
das
sub
add
popf
cmpsb
jb
ret
movsl
icebp
xor
sar
fs
push
mov
jno
lahf
ljmp
fstps
out
fiaddl
pop
adc
in
push
dec
pushf
cmpsb
xchg
adc
icebp
xchg
xlat
push
dec
imul
mov
mov
addb
push
decb
mov
mov
rep
dec
aas
and
imul
addr16
popa
cmpsb
sbb
add
das
xchg
enter
fsubl
into
mov
daa
or
ds
or
or
rcl
inc
push
out
leave
mov
mov
adc
pop
jnp
add
pop
in
xchg
arpl
imul
imul
cmp
jbe
mov
mov
shlb
push
push
dec
pushf
xchg
lret
and
in
or
jb
repnz
sub
push
inc
ret
pop
mov
sbb
push
fistps
pop
je
outsb
sub
movsb
jge
xchg
push
iret
pop
push
inc
out
lods
sub
in
mov
cmp
xlat
stc
aad
test
inc
mov
inc
fs
push
int
mov
ja
mov
ds
dec
in
adc
inc
aas
test
gs
cmp
mov
inc
jno
push
sbb
dec
push
adc
mov
in
and
mov
out
add
xchg
test
addr16
sub
jb
daa
adc
xchg
clc
push
popf
mov
dec
sbb
rcll
pop
aas
mov
repnz
das
aas
mov
in
hlt
add
mov
test
fdivs
sbb
das
inc
lock
stc
add
out
leave
sub
inc
pop
ljmp
shll
icebp
cmpb
push
push
loopne
popf
jl
andl
out
lcall
sub
sub
add
mov
push
jmp
aam
push
sub
mov
daa
sbbl
add
mov
push
addb
sbb
jle
sbb
sub
and
in
out
jle
pop
push
xchg
adc
push
shlb
add
repnz
cwtl
push
lods
stos
xchg
stos
icebp
outsl
push
es
cmp
lock
aas
mov
fcomi
aaa
js
inc
mov
faddp
pop
gs
or
or
scas
dec
in
rolb
es
mov
std
lods
xchg
pop
xor
mov
mov
mov
clc
leave
addb
out
xchg
stos
adc
cmpsl
or
pop
xor
inc
xor
dec
es
mov
leave
inc
jmp
sti
test
in
lahf
pop
rcrb
in
out
ja
das
mov
mov
pop
add
sbb
movsb
add
pushf
mov
cmpsl
inc
pop
cmp
fwait
and
cmp
nop
clc
push
dec
mov
fildl
enter
mov
arpl
mov
sub
fs
mov
lret
add
sub
arpl
mov
rclb
sbb
ss
insl
sbb
push
cmp
test
mov
push
sbb
mov
mov
cs
dec
nop
xchg
and
jnp
stos
push
dec
push
push
cmp
jns
adc
les
sbb
jmp
call
push
sub
movsb
out
sub
mov
jb
mov
push
inc
in
jno
imul
sbb
xchg
int
aas
cmpsl
js
dec
fisttpl
or
inc
hlt
and
xor
test
popf
xchg
mov
mov
xchg
aam
fwait
fwait
jecxz
lahf
movsb
push
clc
cmpsb
mov
je
loop
sbb
push
mov
jno
add
adc
sarb
xchg
jge
xchg
pop
mov
push
sub
pop
pop
and
mov
cwtl
add
jno
xchg
mov
insl
sub
repnz
inc
dec
jg
sbb
mov
pop
push
fistps
imul
lcall
push
jns
dec
je
lock
adc
mov
jnp
nop
testb
push
xchg
scas
loope
or
loop
push
xchg
sbb
enter
and
cli
pusha
push
dec
push
add
cmp
dec
or
mov
lret
jp
lods
aas
ja
scas
pop
test
add
pop
jge
int
rorl
mov
es
mov
popa
pushf
xor
test
sbb
lret
adc
mov
or
stc
push
mov
test
ljmp
fucom
cmpsb
aaa
ds
cltd
jecxz
js
dec
and
imul
push
add
dec
and
jg
cmp
sbb
dec
sbb
jmp
out
sub
sub
out
pop
imul
std
sub
ret
and
inc
cwtl
fcomp
cmp
jno
mov
xchg
fwait
or
push
mov
sbb
lea
mov
subb
shll
ret
mov
out
push
jg
push
push
mov
or
loope
dec
cmp
test
cmp
mov
lock
push
out
lret
adc
add
jl
cmp
inc
dec
lock
push
int3
lret
jbe
push
out
sub
lds
fbld
clc
test
jle
xlat
repnz
dec
adc
call
jo
or
xlat
arpl
mov
or
pop
test
bound
pop
and
push
iret
dec
leave
mull
cmc
ds
inc
fs
in
aam
xor
repz
test
fwait
mov
aaa
repz
xchg
and
add
fchs
dec
xor
repz
loopne
sti
push
ret
popf
repz
cmp
adc
repnz
mov
pop
cs
sub
xor
sub
mov
enter
je
mov
cwtl
inc
scas
sbbl
pop
popf
test
add
ret
adc
xor
mov
lock
in
stc
addb
fidivl
stc
loope
and
daa
test
fwait
int3
mov
rorl
add
fs
pusha
fimuls
adc
ljmp
fcomps
mov
dec
cmpsb
and
fdivrs
scas
and
jge
sbb
in
xchg
aas
orb
push
inc
dec
jp
push
cmp
lds
fs
fadds
dec
addl
pushf
sub
lods
frstor
jbe
add
xchg
mov
lds
mov
or
jb
push
clc
add
shll
mov
xor
mov
ja
mov
cs
arpl
mov
cli
inc
jns
lcall
in
hlt
push
push
inc
shrl
add
pavgw
mov
mov
cltd
stos
scas
subb
xor
cmpsl
mov
sbbb
adc
sbb
push
fs
jbe
mov
inc
test
mov
mov
mov
mov
loope
lahf
test
mov
sarb
stc
pusha
and
adc
addr16
mov
or
lea
sub
pop
push
mov
mov
lcall
xchg
push
cwtl
inc
add
dec
mov
jg
xor
dec
xor
add
or
inc
nop
cwtl
sub
stos
adc
mov
lcall
mov
inc
int3
xchg
negl
ret
pop
int3
les
jmp
scas
data16
adc
dec
sahf
inc
dec
xor
popl
jle
in
push
repz
lea
cmp
scas
jne
xor
cmp
sub
add
jmp
addr16
insl
notb
push
cmpl
jmp
es
jb
or
or
push
pop
pop
jae
sbb
pop
pop
mov
inc
jmp
xor
mov
mov
add
sub
fsub
fstl
lahf
clc
xchg
push
inc
jge
enter
inc
xchg
dec
adc
test
repz
or
pop
add
sbb
cmp
adc
inc
cmp
sbb
out
pop
and
mov
sbb
cmc
and
shl
pop
mov
push
add
les
or
idiv
push
push
pop
ja
scas
adc
xor
push
adc
sub
sahf
int
in
jmp
and
imul
dec
xor
repnz
cmpsb
dec
add
dec
adc
aam
pop
out
adc
mov
dec
jbe
dec
mov
xchg
mov
jb
mov
sbb
bound
cmpsl
std
xor
xchg
out
add
sti
dec
movsl
aas
cltd
sahf
push
add
or
sub
in
push
push
and
dec
fnsave
adc
jbe
sbbb
and
mov
pop
cmp
int3
mov
iret
lret
ljmp
sbb
ja
push
and
jl
fwait
push
stc
jp
add
xor
adc
jbe
cmp
mov
xor
and
mov
bnd
xchg
or
aas
in
sti
mov
insl
fcompl
ss
mov
lret
inc
cmc
dec
out
mov
jl
and
lods
mov
jns
sti
pop
out
jmp
adc
push
sub
mov
les
jo
mov
scas
fsubrl
bound
push
mov
xorl
fdiv
jbe
mov
lcall
sub
bound
add
dec
mov
leave
add
shrb
sbb
mov
xchg
lahf
mov
dec
mov
cmp
xchg
sub
push
into
shlb
fildll
sbbl
mov
pop
sub
iret
incb
pop
push
or
pop
enter
jnp
and
jl
divb
dec
test
test
mov
sbb
mov
or
mov
divl
fsubr
and
icebp
sahf
cmp
pop
jle
mov
and
scas
mov
and
aas
cld
sbb
cmp
cmpsl
pop
add
aaa
dec
nop
mov
ds
fcoms
stc
sub
in
cmp
daa
push
mov
push
mov
xor
imul
daa
mov
std
movsb
mov
je
clc
into
adcl
add
inc
mov
push
lret
ficoms
cmp
fldenv
in
aad
inc
xchg
ljmp
pop
or
mov
out
repnz
and
std
jl
rclb
hlt
mov
test
mov
xchg
cld
or
cmpb
inc
fdivl
xlat
inc
ret
dec
popa
call
xchg
jne
mov
mov
repz
push
fidivrs
insb
out
jg
cmpsl
pop
es
xlat
cmp
movsb
sarb
loop
dec
cmpsl
mov
push
sbb
adc
mov
ljmp
mov
dec
mov
cmp
std
es
outsb
add
imul
xor
popa
inc
push
mov
mov
or
pop
mov
mov
rcr
loop
out
inc
push
lahf
cmc
cmp
int
in
shr
pop
fwait
fs
loop
push
add
xor
mov
fdivp
push
mov
je
pop
dec
adc
into
and
xchg
mov
sub
mull
add
mov
push
or
cmp
sub
dec
adc
xchg
test
xchg
mov
imul
xchg
xlat
stc
in
shlb
dec
aad
ret
pop
out
xor
add
into
fsubrp
arpl
xchg
scas
js
mov
int
notb
arpl
push
push
pop
push
ja
cmp
scas
push
push
cmc
bnd
cmp
pushw
rcll
add
mov
in
ffree
jp
loop
outsl
mov
outsl
in
aaa
les
jae
ljmp
jbe
jne
sbb
call
hlt
call
cmp
call
jp
adc
jne
push
shll
pusha
and
push
push
int
movsb
jne
jbe
or
bnd
jl
out
dec
lods
lret
icebp
push
cmpb
adc
ret
jb
push
inc
jae
scas
xchg
outsl
push
out
ret
mov
les
xor
lret
pusha
mov
iret
in
arpl
jg
xchg
cmp
paddsb
jle
ss
jle
sub
cmc
cmpsl
hlt
in
ja,pn
jb
push
xchg
inc
sahf
iret
pop
in
das
fs
mov
adc
pop
cltd
sbb
or
mov
in
and
mov
ja
push
jbe
dec
test
xchg
dec
in
sbb
and
jl
loopne
call
cmpsb
decl
jmp
outsl
ficompl
or
add
and
icebp
outsl
push
pop
fwait
pop
push
je
ss
shl
es
or
or
mov
xlat
mov
push
add
jge
imul
mov
cmp
and
lds
pop
sub
daa
push
mov
ljmp
xchg
push
mov
pop
das
popa
scas
rclb
js
insb
stos
sahf
push
jecxz
push
mov
push
imul
or
inc
xchg
ja
inc
ss
pop
xor
pushf
fimuls
fcomp
dec
pusha
dec
cmp
lretw
cmp
stc
nop
ret
mov
jbe
add
je
leave
push
orl
fstpl
mov
imull
or
int3
pop
icebp
sub
mov
ja
add
push
leave
es
mov
push
inc
and
sbb
inc
cmp
repnz
push
cmc
add
js
xor
scas
sub
daa
lock
xor
pushf
mov
xchg
inc
movsb
push
adc
xchg
cmp
loope
out
sbb
mov
sti
leave
jns
add
push
call
popl
sub
xchg
push
mov
loop
cli
jge
dec
bound
outsl
pop
mov
and
pop
xor
jg
pop
pusha
lea
idiv
data16
push
sub
push
das
and
add
sub
push
xlat
cmp
push
sbb
sub
stos
xchg
add
xor
push
mov
fsubl
mov
push
push
sub
shl
mov
ror
jo
dec
cmpsl
bound
in
push
sbb
adc
xlat
out
jb
mov
addb
and
mov
loopne
and
push
outsb
pop
insb
xchg
outsl
fxch
idivb
popf
sub
daa
xchg
pop
fisubrl
mov
cmpsb
in
pop
hlt
sub
sub
pop
rclb
push
pushf
xor
icebp
jmp
in
repz
inc
pusha
jb
mov
stos
dec
sar
mov
push
aas
lods
inc
jge
adc
inc
jno
aaa
inc
in
mov
movsl
dec
loope
mov
dec
das
pop
add
aaa
pushf
out
out
dec
mov
dec
enter
ds
outsl
aas
or
mov
insl
addb
push
lods
call
and
stc
into
fadd
test
in
imul
call
xchg
xchg
push
gs
es
adc
mov
sbb
cmp
xchg
stos
sub
test
cmp
es
dec
lahf
push
stc
mov
inc
call
lock
test
sub
fucompp
sbb
mov
repz
aam
movsl
sbb
xlat
sahf
xchg
js
insb
inc
pop
and
xchg
fldl
push
dec
lods
in
inc
inc
movsl
call
imul
pushf
and
into
incl
mov
jl
sti
lahf
inc
mov
mov
negl
mov
add
jnp
std
fdivs
rcr
xlat
mov
cmp
cmp
push
mov
sub
iret
jnp
push
roll
and
pop
jl
scas
aam
mov
scas
imul
lods
ret
mov
push
xchg
stos
mov
jmp
fidivrl
mov
jg
inc
repnz
fdivr
stos
xchg
add
jb
add
sub
sbb
dec
add
inc
dec
mov
sub
sbb
jge
adc
mov
or
cmp
cld
add
push
hlt
clc
dec
aad
clc
mov
push
fwait
adc
cmc
test
mov
std
out
shl
ds
fnsetpm(287
fildll
fcmovu
rol
pusha
movsl
fisttpll
inc
in
stos
pop
mov
ja
cmp
jg
add
mov
push
outsb
mov
mulb
addl
push
mov
or
int
lock
fwait
jl
jp
xchg
int
ficoms
and
daa
mov
int
fstpt
jp
test
scas
sbb
jge
out
adcb
jge
es
pusha
or
pop
mov
shrl
push
jl
je
repnz
fcmovnbe
cs
cmp
rcrb
repz
jbe
repnz
in
je
icebp
jns
scas
add
cs
mov
call
jge
icebp
dec
cmpsb
std
sub
mov
rorb
in
xor
jecxz
xchg
stos
pop
data16
mov
add
outsl
fsub
mov
jecxz
xor
pop
sub
add
and
sub
push
mov
in
pusha
or
add
inc
adc
mov
mov
inc
imul
mov
pop
fs
xchg
les
dec
or
lods
jae
lea
pop
and
ss
outsl
clc
add
shrl
les
xchg
push
xor
js
ret
dec
lds
xor
xchg
sti
mov
jge
in
dec
push
pop
loope
imul
lcall
jl
xchg
sbb
jl
adc
mov
jae
mov
jmp
xchg
cmc
pop
ljmp
jae
ret
mov
sbb
push
add
into
loope
push
pop
push
lods
ljmp
and
mov
sub
aaa
je
sbb
lds
sti
pop
inc
lcall
scas
je
jae
jo
mov
out
inc
mov
and
lods
pop
pop
xchg
mov
mov
push
popf
add
pop
cmc
mov
nop
call
push
mov
adc
inc
js
lcall
scas
push
xchg
sub
imul
imul
cmp
mov
rorb
xor
add
orb
test
mov
push
xchg
movl
in
lods
hlt
in
push
jp
and
fs
in
mov
inc
loope
in
fisttpl
mov
jmp
outsl
sbb
mov
movsb
sbb
adcb
push
pop
jp
sub
push
imul
xchg
xchg
cmp
xor
scas
into
aad
or
ss
js
test
dec
pop
mov
push
and
cltd
add
inc
shlb
dec
xchg
add
insb
fists
testl
fs
and
pop
push
xchg
xlat
mov
mov
inc
xchg
aad
xchg
sti
pop
dec
and
cld
xorl
xor
mov
mov
sbb
pop
idivb
adc
fwait
in
jns
sarb
rcr
fsts
mov
test
out
pop
fwait
push
inc
pop
xchg
xchg
xchg
sub
insb
mov
std
imul
hlt
pop
mov
inc
jp
xor
mov
das
sub
mov
scas
xchg
mov
cmp
popa
fbstp
jns
push
xor
cmc
mov
pop
aam
movsl
dec
and
scas
push
cmp
mov
adc
data16
lea
mov
nop
mov
add
xrelease
jno
ss
fbstp
mov
int3
lret
adc
mov
or
ret
jns
std
fwait
sub
mov
call
jmp
mov
dec
mov
mov
fnsave
lock
add
or
mov
lods
xchg
or
jge
icebp
in
mov
fldl
cmp
addr16
pop
adc
dec
pusha
fisubrs
fsub
outsl
lea
mov
dec
sub
aam
add
mov
cld
inc
rorb
mov
icebp
cmc
daa
adc
fiadds
fstl
lahf
pusha
adc
mov
mov
outsl
inc
lahf
lods
jg
decl
or
andl
mov
mov
push
cli
mov
cmc
ja
sbbb
mov
mov
lods
js
jmp
cli
iret
sbb
fimuls
ja
jnp
insl
dec
out
ret
mov
scas
test
adcb
lea
test
xchg
jno
jge
sarb
int
cmp
adc
arpl
jp
testl
packsswb
xchg
push
or
insl
push
js
dec
loopne
ret
dec
jbe
loopne
repz
inc
mov
and
fldt
push
jo
std
push
cmp
leave
mov
dec
or
int3
or
test
lods
mov
sub
mov
and
inc
lock
sub
cmp
push
loop
adc
adc
sub
into
or
mov
inc
lret
mov
pop
repnz
rorb
out
shrl
sbbb
cmp
rcl
jae
push
pop
adc
cmp
nop
sahf
out
inc
out
mov
fisubl
imul
mov
push
jle
jo
bound
push
xchg
stc
pop
cmpsl
ss
xchg
inc
mov
stos
mov
jge
arpl
dec
pop
test
pop
fisttps
jns
cwtl
addr16
mov
imul
jne
into
xor
repnz
and
inc
aam
jnp
cltd
out
fadds
pop
ss
sahf
pusha
lcall
and
dec
daa
pop
sbb
fidivs
dec
or
xlat
mov
outsb
lret
jbe
sahf
loopne
mov
popf
inc
test
loope
and
fwait
add
jmp
les
sbb
lock
or
pop
add
lods
mov
imul
pusha
push
es
or
cmp
mov
sbb
mov
mov
dec
and
addb
std
test
dec
push
xchg
pshufw
repz
mov
sahf
test
add
out
dec
dec
dec
mov
push
mov
push
mov
fwait
outsb
jnp
sbb
repz
loop
mov
jg
mov
mov
mov
fldlg2
sub
jmp
jl
sbb
and
mov
sahf
mov
out
les
xor
cmp
ficompl
mov
xchg
in
ret
add
jb
cmp
hlt
outsl
mov
inc
clc
iret
push
cli
hlt
aam
addr16
std
cmp
xchg
loopne
push
sub
loope
inc
pop
mov
adc
and
rorl
or
cs
repnz
xor
push
sub
inc
daa
bound
movsl
lods
jb
shl
sub
into
test
push
jmp
dec
andb
ds
test
inc
and
and
jno
lds
cmpsl
sti
cltd
sbb
ja
and
stos
sub
clc
cmp
das
jecxz
cld
mov
fwait
pop
dec
jmp
cli
mov
popa
mov
fldt
data16
sarb
adc
mov
je
and
fmuls
mov
dec
sub
fadds
pop
cmpsb
in
jg
mov
push
mov
xor
scas
mov
out
add
jnp
sbb
movsb
ret
adc
cmp
jbe
loopne
mov
inc
push
ficoml
cmp
mov
inc
xchg
icebp
addb
cs
movsl
jno
mov
add
mov
movsb
notb
sbb
xor
fidivrs
test
xor
sti
xor
fidivl
xchg
xor
outsb
loop
ja
add
or
mov
pop
iret
pop
lea
xor
sub
dec
bound
and
popa
sub
mov
out
xchg
mov
cmp
push
cltd
fsubs
rol
movsb
mov
inc
out
ljmp
mov
or
lret
jnp
arpl
in
lods
loop
int
and
out
sub
inc
lods
leave
push
imul
mov
nop
cld
xchg
pop
repz
testl
dec
pop
jnp
test
mov
dec
inc
inc
or
nop
pop
lret
data16
add
mulb
mov
scas
sub
addr16
dec
sahf
mov
mov
cmp
mov
notl
adc
push
mov
and
sub
out
call
out
adc
pushf
mov
repnz
jb
aad
test
adc
std
xchg
and
popf
xor
push
and
inc
inc
mov
add
mov
arpl
adc
in
daa
inc
mov
inc
jb
rorb
push
stos
stc
sbb
adc
pop
stos
pushf
sub
cmp
test
inc
xchg
sbb
lret
repz
cltd
push
cmc
xchg
push
cmp
adc
cmp
sub
mov
lcall
filds
insl
mov
subl
imul
sahf
jnp
cmp
test
andb
sub
mov
test
sub
mov
xor
fs
push
fidivs
enter
mov
sub
jmp
add
lcall
jb
mov
nop
aam
scas
cmpl
mov
jmp
imul
xchg
cmp
xchg
nop
xchg
sbbl
call
push
dec
xchg
mov
out
jl
mov
aam
dec
int
popf
and
scas
mov
notb
pop
xor
add
stos
sub
mov
mov
push
jno
shlb
lock
movzbl
xor
pop
popf
pop
sub
imul
scas
dec
out
in
jno
outsb
inc
in
data16
push
dec
and
push
dec
inc
cmp
sbb
inc
pop
push
daa
clc
inc
sbb
push
rcrb
cmp
xorl
inc
push
jl
pop
hlt
xchg
and
testl
andb
mov
sub
das
jp
rorl
dec
daa
stos
jno
inc
sarl
push
push
loop
sub
mov
cmp
sub
ffree
sti
xor
add
pop
push
xchg
dec
in
dec
mov
addr16
aas
pushf
inc
pop
and
xor
adc
pop
cld
inc
xchg
pop
loope
popf
pop
mov
pop
adc
jmp
add
mov
sub
push
mul
outsb
mov
hlt
xchg
add
adc
inc
mov
pop
sub
idivb
bound
jnp
bound
sbb
mov
push
movsl
outsb
mov
or
push
stos
stos
fadds
jmp
inc
jo
out
jle
imul
jne
imul
push
xchg
aas
pop
lret
mov
mov
mov
sub
pop
pop
xorl
iret
mov
xchg
adc
pop
lret
lds
ficomps
add
inc
dec
fsubrs
pop
sbb
jmp
cmpsl
adc
mov
out
fstpt
gs
vhsubps
cli
mov
add
or
inc
mov
xchg
repz
outsb
push
inc
pop
mov
lea
xlat
sub
aad
jb
jle
sub
ja
sti
sarl
insb
imul
cmp
cmp
int
cli
push
cmpb
mov
dec
hlt
lea
fnstcw
out
push
out
push
inc
push
in
inc
and
pop
inc
push
es
or
testl
gs
mov
pop
sub
inc
jle
push
push
push
pop
stc
push
inc
sub
sarl
fisubrl
and
bound
aaa
insb
inc
sbb
dec
dec
lcall
cltd
lock
cltd
test
adc
popf
fnstsw
outsb
subl
std
push
cmp
js
lret
jnp
push
popf
mov
cmp
and
rcrl
les
push
adc
xor
jbe
loopne
into
gs
outsb
jno
pop
mov
out
fnstenv
jp
mov
dec
cmp
imul
es
xchg
xchg
enter
leave
out
popf
mov
cmp
sbb
ret
xor
dec
inc
pop
dec
ja
xor
in
imul
pop
jl
pop
sbb
in
cmpsb
arpl
mov
mov
pop
repz
cmp
xchg
jns
xchg
std
jmp
mov
mov
xor
bound
or
xchg
repnz
sub
push
ja
std
add
sub
rcll
cmp
xor
push
jbe
mov
std
loopne
push
loop
imul
xor
pop
pusha
cltd
push
lret
or
pop
mov
mov
jns
inc
add
add
cmpsl
lahf
xor
mov
inc
and
add
addl
je
jle
daa
not
push
lahf
or
lcall
aaa
dec
adc
mov
push
xor
xchg
lret
pop
jg
pusha
xor
jmp
dec
repnz
jne
test
xor
ret
xchg
aaa
rcrl
jp
cmp
sti
roll
js
mov
pop
xchg
dec
insl
mov
push
dec
shll
add
fmull
mov
cs
xor
mov
and
subb
stos
pop
cmp
push
inc
and
iret
addl
loope
andl
pop
test
or
fcmovbe
sbb
fstl
cld
cld
out
xchg
mov
cltd
sbb
aam
pop
icebp
dec
out
aam
imul
and
aaa
ret
pop
push
jp
aas
xchg
stc
inc
xchg
lret
xor
sbbl
pop
mov
and
fs
popf
lea
pop
ret
and
add
enter
or
lods
lea
mov
adcb
or
cmp
jno
fstp
fisubrs
and
mov
sbb
push
mov
sbb
andl
test
fdivr
push
in
xor
mov
jbe
adcl
mov
push
and
inc
ffreep
stos
outsb
xchg
push
dec
iret
insl
cld
arpl
pop
test
push
jns
mov
jl
hlt
pop
push
lret
push
push
cmp
mov
xor
fadd
popf
jne
jns
adc
loope
int3
fdivrl
icebp
xacquire
test
imul
scas
cmpsl
xchg
add
int3
fbstp
push
out
push
mov
mov
rolb
fsubrl
dec
xorb
loope
mov
fsts
pop
pop
cli
adc
sbb
mov
push
fcoml
scas
out
test
mov
ror
mov
mov
cs
es
cwtl
outsl
jo
ret
mov
push
jp
leave
ds
mov
xorb
and
add
push
sbb
pop
push
xlat
dec
outsl
push
add
je
push
inc
adc
fldenv
and
sarl
jmp
cmpsb
scas
in
inc
int3
out
mov
clc
movsl
test
int3
mov
aam
pop
dec
dec
inc
mov
lret
inc
nop
test
or
scas
sahf
lea
jge
cmp
cmpsb
jge
pop
pop
sbbl
cwtl
sbb
adc
in
and
loopne
fxch
cmc
popa
dec
sbb
mov
ljmp
pop
out
xchg
mov
push
scas
pop
paddusw
ds
xchg
imul
dec
out
sbb
and
fsts
sbb
mov
mov
dec
rcr
mov
and
mov
and
mov
sub
std
or
cltd
push
test
mov
rorl
loope
test
push
daa
add
bound
pop
mov
xchg
xlat
aad
bound
mov
or
pop
icebp
pop
mov
xor
mov
mov
test
negb
lods
stos
jnp
jae
mov
mov
stos
sbb
shll
push
mov
addr16
add
fadds
aam
cmpl
int
cltd
pop
int
out
cmp
jns
aas
or
push
mov
inc
les
sbb
add
cmp
or
std
mov
out
rclb
sub
clc
mov
jecxz
hlt
out
mov
and
add
aas
mov
xor
clc
add
xchg
sub
call
cltd
mov
neg
mov
inc
sarl
rcrb
insl
std
enter
push
movsb
dec
cmp
lock
jb
sbb
mov
sbb
push
mov
push
add
jno
std
xor
subb
fcompl
jb
fcompl
pop
fs
sub
call
cmp
xchg
jae
cmp
movsl
fs
mov
out
mov
xlat
outsl
int
pop
pop
mov
jle
add
dec
out
ja
out
sbb
and
push
sbb
inc
pop
in
push
ds
push
add
pop
mov
js
ds
bound
ljmp
inc
outsb
loop
pop
xchg
jg
sti
out
decb
and
sbb
jmp
mov
cmp
mov
jmp
jle
fmul
and
cmp
in
pop
inc
push
xor
pop
hlt
pop
and
mov
jg
push
loop
sub
adc
and
popa
stc
push
or
push
or
pushf
fiadds
bnd
sub
int
sub
xlat
mov
cmpsl
lahf
arpl
add
mov
scas
test
std
mov
jnp
rcll
adc
out
sub
into
les
or
iret
push
cmp
mov
in
mov
in
mov
push
inc
inc
pop
lret
push
adc
bound
hlt
xchg
js
jb
out
lret
add
sbb
mov
sub
nop
imul
fidivrl
dec
nop
sub
scas
sbb
jne
xchg
pop
fdiv
js
sub
aam
xchg
push
push
arpl
shll
cwtl
and
cs
rorb
inc
cmpsb
mov
sub
mov
cli
adc
movsl
and
jne
adc
sbb
hlt
sti
fdivr
push
ja
stos
jne
andl
adc
or
cmp
vzeroall
push
aaa
call
leave
and
aam
fidivrl
mov
xchg
sti
out
push
call
test
jmp
int
test
pop
std
shrl
xchg
ljmp
in
aas
out
out
push
ljmp
and
cmpb
ret
fsubs
pop
dec
and
ja
std
dec
cld
shl
inc
mov
out
pop
ljmp
inc
mov
xchg
pop
stos
movsb
ret
gs
lahf
scas
sub
cmc
and
decb
in
in
dec
js
lret
xchg
jg
sar
adc
sub
es
xor
cmp
xchg
and
mov
jo
adc
pop
mov
push
mov
push
movsl
out
loope
in
lock
testl
dec
cmp
cmpsb
cmp
jo
add
movsb
repz
xchg
mov
adc
xor
cmp
push
adc
add
lock
call
or
cmp
sbb
xchg
xchg
cmp
or
push
cmpsb
sub
stos
jnp
jbe
stc
iret
pushf
xchg
pushf
inc
mov
test
repnz
mov
adc
das
outsl
xor
es
cmpsb
adc
cmpsl
mov
loope
inc
xor
pop
pop
lods
mov
push
sti
inc
xchg
in
sbb
dec
cli
mov
pop
stos
test
pop
push
push
pop
pop
lret
sti
sbb
sti
test
rorb
xchg
cmp
mov
push
inc
mov
out
xchg
xchg
int3
add
stos
jo
inc
imul
mov
adc
cmp
pop
cmp
jnp
and
faddl
xchg
jmp
add
xor
jmp
push
sbb
adc
js
push
push
and
leave
scas
inc
sbbl
call
dec
and
adc
xchg
nop
shlb
push
sub
adc
test
sbb
je
movsl
cmp
add
loop
lcall
sub
jmp
xchg
sbb
insb
cltd
or
lahf
xchg
xchg
xchg
mov
mulb
jp
mov
sahf
mov
xchg
jmp
mov
dec
addr16
aas
add
xchg
inc
and
fwait
mov
inc
cmp
mov
cli
stos
stos
stos
push
pusha
mov
pusha
inc
shl
add
pop
or
call
or
dec
push
insl
fdivs
fs
and
add
cmp
daa
bound
fbld
insb
and
into
add
sub
mov
imul
or
lcall
lcall
xor
aam
or
insl
insb
inc
and
dec
inc
sbb
test
out
adc
inc
pop
push
loopne
les
test
push
or
xchg
xchg
xchg
fsub
pop
adc
inc
fsts
mov
cld
push
inc
test
or
xchg
adc
sub
dec
outsb
adc
ljmp
and
daa
pop
push
lds
ja
les
jle
mov
jnp
nop
cmp
jnp
adc
push
nop
mov
pop
in
stos
fsubrl
mov
rorl
shl
or
adc
xor
iret
mov
ficoms
bound
add
jg
pushf
xor
sar
pop
sahf
sbbb
daa
out
sub
arpl
stos
in
add
inc
jmp
cmpsb
add
jg
adc
sub
aas
jne
xlat
mov
lods
xor
jmp
out
inc
push
test
add
fs
aad
movb
pop
mov
adc
add
mov
pop
dec
repnz
inc
jno
mov
mov
jp
and
lea
inc
mov
mov
sub
or
mov
cmp
jecxz
mov
jmp
mov
cmp
dec
sbb
dec
cmp
enter
pop
push
movsl
jmp
lahf
adc
aas
dec
adc
jae
and
lahf
adc
inc
jae
loopne
pop
sarb
sub
pop
mov
cmp
jecxz
lds
lds
mov
fidivrl
mov
insb
mov
insb
inc
push
fiaddl
outsl
sbb
xor
or
leave
adc
jecxz
jo
xlat
inc
xchg
clc
sub
and
add
int3
jno
ret
jne
lock
jo
jle
lods
fcomps
mov
adc
jno
ret
pusha
pop
out
loop
xchg
pusha
dec
ret
sub
out
mulb
and
mov
dec
sbb
scas
cltd
test
jne
into
insb
mov
or
cmp
popf
fidivrs
out
lahf
sub
xchg
cmpsb
jp
sbb
mov
dec
iret
rol
pop
pop
adc
add
dec
cli
rcrb
sub
mov
out
mov
je
or
xor
pusha
sub
imul
ljmp
xchg
xor
xor
aas
adc
movsb
lret
and
push
add
xchg
adc
loope
jle
mov
or
dec
cltd
jno
movsl
ss
mov
sbb
cltd
aad
pop
dec
jmp
mov
les
sbb
shrl
fsub
enter
dec
out
stos
push
mov
inc
jl
test
add
add
sub
adc
pop
test
clc
inc
stos
fidivl
outsb
setg
test
mov
xchg
xchg
sti
jge
in
enter
or
adc
sti
push
fildll
stc
adc
xor
pop
jmp
leave
gs
xchg
xlat
mov
lods
xlat
pop
or
xor
out
xchg
add
insb
leave
xor
notl
push
roll
xor
adcl
fcoms
stc
sub
mov
mov
or
insb
cs
inc
push
lea
jle
jmp
jb
fidivrs
mull
andl
pop
mov
cmp
jmp
push
dec
fidivs
push
cltd
dec
mov
sbb
adcl
mov
add
pusha
xchg
or
lods
shll
xor
xchg
lret
incb
push
inc
mov
xor
ds
jecxz
sbb
mov
xchg
mov
push
out
repnz
inc
gs
dec
lret
pop
jmp
mov
lea
in
repz
sbb
cmp
hlt
repz
adc
mov
cmpsl
jno,pn
mov
mov
cmp
xchg
mov
cs
push
aas
xchg
jno
pop
lods
adc
out
mov
fwait
pop
ljmp
inc
sub
cld
or
push
pop
pop
mov
push
jmp
xor
stos
add
xor
mov
dec
outsb
mov
pop
aad
push
popf
icebp
imul
in
or
mov
adc
mov
mov
ljmp
test
pop
sbb
adc
sbb
sub
xchg
push
lods
mov
movsl
rcr
add
cltd
xchg
or
into
add
or
mov
outsl
incl
xor
xor
push
sub
sbb
enter
push
sub
ret
arpl
pop
xlat
lea
cmpb
adc
and
add
add
add
mov
mov
inc
push
sub
mov
iret
mov
mov
adc
pushl
popa
xlat
mov
cmp
dec
out
xchg
sti
xor
or
lcall
jmp
push
jg
mov
icebp
test
jge
rorl
inc
lret
and
out
sbb
out
pop
test
mov
ljmp
rolb
movsb
push
mov
das
fildll
mov
outsl
xor
out
mov
mov
push
sbbb
mov
jno
loop
jle
jmp
inc
into
mov
dec
xchg
mov
and
and
xchg
xchg
roll
mov
mov
das
or
push
push
cmp
fldenv
ds
in
cmpsb
aad
adc
mov
mov
insl
dec
rorl
testb
mov
gs
bound
pop
mov
push
iret
outsl
pop
test
aam
mov
je
mov
mov
pop
daa
adc
pop
dec
cmp
mov
push
out
mov
lret
aas
sub
sahf
lods
shrb
lret
mov
ror
rorb
and
int3
shlb
sbb
rcll
jbe
mov
sysexit
test
inc
push
push
xorb
insb
or
jmp
mov
jnp
xor
stos
lret
movsl
jae
js
rolb
mov
aam
jl
add
gs
jle
imul
in
test
pop
jno
jge
fdivrp
cmpsl
sub
shrl
mov
popa
loop
push
pop
dec
mov
jnp
jnp
pop
pop
mov
int
xchg
lods
loopne
popf
pop
or
lock
cli
push
clc
stos
test
rcrl
sarl
popf
inc
jb,pn
xchg
mov
insb
addr16
out
adc
adc
xchg
xchg
cmp
rcr
ret
sahf
imul
sbb
push
jbe
push
inc
pusha
lcall
int
idivl
dec
dec
mov
arpl
adc
aam
sub
insb
sbb
std
outsb
mov
pushf
movsb
adc
nop
mov
bound
mov
fistpll
push
iret
pop
je
xor
jbe
dec
cmp
filds
ret
jl
mov
and
mov
add
inc
xchg
mov
push
clc
add
inc
fistpll
jb
cmp
sub
gs
jae
xchg
lahf
push
pop
jmp
mov
xchg
adc
lock
pop
enter
fidivrs
cwtl
add
push
pop
cmp
out
jb
lret
cwtl
and
into
cmp
cli
lret
xchg
addb
lods
jmp
xor
les
mov
int3
mov
cld
cmp
jae
das
mov
out
sub
or
rorl
mov
stos
pop
add
mov
sbb
mov
test
into
sub
sbb
push
cmpsl
and
leave
repnz
rcll
add
sub
jb,pn
stos
enter
and
and
rcrl
inc
pushf
jge
sub
jae
pop
jg
pop
mov
js
out
sti
inc
pop
dec
stc
js
add
ljmp
fimuls
lcall
xor
out
xchg
loope
pushf
pop
lret
sub
fsub
inc
adc
mov
inc
hlt
ret
or
outsl
testb
pop
loop
pop
inc
rcrb
mov
sti
push
or
testb
dec
xor
out
ljmp
inc
test
shlb
pop
lds
jl
cmp
jno
sub
dec
cmp
stos
mov
lcall
push
push
shl
ss
fistps
pop
add
lods
adc
sbb
mov
jp
gs
cmp
add
sub
add
add
cmp
mov
sbb
xchg
mov
outsb
dec
pop
dec
inc
popa
push
jae
pusha
xorb
xor
aaa
xchg
pop
popf
stos
imul
xchg
xchg
mov
xor
imull
loop
das
mov
dec
cmpsb
jnp
adc
aaa
and
and
stos
in
loopne
insl
addr16
xchg
sub
pusha
add
jne
mov
std
or
cs
push
jge
in
icebp
adcb
imul
add
lahf
icebp
scas
std
mov
inc
mov
outsb
cld
sub
filds
mul
scas
mull
xchg
mov
cli
push
iret
mov
xchg
add
mov
fwait
sbb
popf
lds
test
adc
xor
mov
sbb
adcl
fiadds
jp
inc
notl
xchg
lret
es
mov
pop
je
jge
call
lret
jnp
mov
js
mov
jmp
mov
lcallw
ror
mov
push
mov
lret
insl
sub
jecxz
bnd
call
cmp
js
xchg
cld
inc
loop
cmp
mov
loop
push
aam
mov
addb
pop
or
movsl
cmc
pop
jo
jno
adc
imul
adc
gs
push
push
arpl
mov
lods
testl
into
repnz
xor
xchg
je
gs
xor
and
ds
sub
and
iret
shll
mov
loope
scas
subb
cli
push
lea
insl
enter
out
addr16
leave
cmc
in
cwtl
loopne
in
xchg
loopne
xor
rcr
stos
aam
mov
jns
cwtl
push
push
jecxz
dec
mov
xchg
xor
int3
add
mov
stos
and
call
pop
dec
mov
sti
enter
movsl
loop
push
sbbb
sub
mov
in
in
inc
arpl
adc
lret
jne
push
in
jnp
sbb
dec
stc
mov
or
inc
jb
cmc
loop
cld
out
jmp
test
and
loopne
pop
mov
cltd
cld
insb
adc
xlat
lds
scas
pop
ljmp
cmp
mov
cmp
mov
movsb
jns
push
and
sahf
inc
shrb
push
ficompl
aas
add
push
je
andl
dec
mov
adc
lret
add
xchg
xor
sbb
in
lods
fs
cltd
mov
jne
imul
xor
bound
imul
les
dec
orb
mov
sbb
out
and
fcoms
in
xlat
jge
nop
add
ss
xor
inc
mov
out
es
mov
cli
push
enter
mov
iret
and
movsb
mov
add
and
mov
aam
arpl
in
outsl
push
inc
mov
push
dec
in
shlb
sbb
stc
ja
push
dec
sbb
and
cwtl
mov
sbb
gs
jl
mov
jno
lea
rcl
psrad
cmp
fstl
mov
je
je
imul
pusha
ds
aam
mov
mov
mov
mov
or
xchg
mov
fidivrl
xor
cmpsl
out
in
xor
sbb
add
test
shl
inc
lds
test
push
shll
loop
fisubl
pop
jp
das
je
decb
pop
mov
in
loope
lock
inc
xchg
inc
je
imul
lret
cli
push
gs
dec
loope
push
stc
cmp
sbb
outsl
std
adc
mov
mov
xchg
aas
push
push
xchg
lcall
mov
stos
inc
imul
stc
repnz
mov
fs
inc
mov
shlb
iret
mov
xor
push
cmpsl
bound
test
and
lret
xchg
aad
inc
ss
in
add
push
jmp
ljmp
push
rorl
cmp
adc
mov
stos
aas
aam
rolb
xchg
test
add
or
data16
add
lahf
orl
xchg
mov
inc
cld
mov
in
pop
and
je
jecxz
cmp
push
mov
add
dec
pop
inc
or
out
nop
mov
rcr
lahf
cltd
push
icebp
bound
fdivl
xchg
jno
aam
fimuls
shrl
push
xchg
inc
xor
bound
mov
enter
xor
xchg
stc
ret
decl
enter
dec
mov
mov
dec
pop
xor
adcl
mov
stc
inc
clc
mov
ss
std
push
imul
jno
pop
push
fcomi
mov
movsb
mov
fistpll
shlb
cmpsb
insb
push
inc
and
push
imul
stos
ss
arpl
aaa
imul
cmpsl
in
mov
dec
in
sub
arpl
jmp
enter
call
jg
mov
lods
in
pop
stos
fidivs
mov
popa
add
jbe
or
dec
sbb
subb
cld
fadds
cltd
sub
mov
mov
xchg
ret
out
negl
icebp
repz
in
ja
sbbb
in
adc
cmp
or
inc
enter
mov
jecxz
mov
repnz
data16
push
pop
inc
xor
iret
and
sub
lods
out
enter
cmp
sub
aaa
xchg
leave
xor
bound
test
imul
lods
aaa
popf
mov
push
cwtl
insl
lock
loopne
pop
and
xlat
inc
push
icebp
movsb
imul
notb
fnstenv
out
ss
and
loope
dec
and
push
in
or
mov
inc
fwait
imul
nop
mov
mov
lea
pop
fwait
cmp
pop
sub
push
push
sbb
push
mov
loope
push
test
jmp
xchg
or
es
jp
aam
or
in
daa
popf
mov
add
filds
dec
mov
ljmp
and
out
xor
dec
icebp
movsl
mov
jb
adc
into
popa
sete
js
push
and
test
inc
sub
lock
jmp
int
loope
jp
mov
movsl
cmp
sbb
loop
mov
addl
dec
sub
ret
sbb
fs
push
jb
inc
and
cmp
dec
sahf
ret
mov
cmp
push
fucomi
mov
jge
pop
and
xchg
and
rorb
push
das
mov
push
add
lods
inc
rcrb
cltd
jmp
push
and
les
enter
add
fcoms
sbbl
sbb
shll
std
and
lret
int
pusha
rolb
xlat
or
mov
aam
std
stc
data16
sti
sar
loop
add
adc
insb
out
cmc
dec
loop
cmp
and
jle
xchg
loope
sbb
xor
mov
mov
nop
ficompl
pop
sbb
or
enter
andl
mov
pop
adc
inc
out
fsubp
arpl
mulb
inc
adc
loop
nop
and
movsl
outsl
idiv
dec
clc
mov
scas
push
and
or
das
adc
mov
mov
push
jo
sbb
loop
mov
rcll
stos
cmp
lret
repz
lods
mov
mov
frstor
aas
add
js
pusha
out
adc
cli
clc
jecxz
test
add
icebp
fmull
shlb
popa
inc
and
fiaddl
sarb
xchg
cmp
rcr
sbb
and
and
fbstp
dec
mov
lods
ret
adc
ljmp
dec
sub
xor
test
call
shlb
and
push
decb
lcall
insl
push
ror
sbb
dec
jno
inc
add
mov
or
xlat
mov
rcll
std
pop
mov
sub
push
int
outsl
addl
mov
js
push
lods
int
mov
in
jmp
arpl
scas
xor
dec
xor
push
rclb
stos
cwtl
cmp
and
cmp
dec
in
pop
popa
stos
fwait
popa
push
push
and
sbb
daa
outsl
fistps
shr
mov
shlb
dec
ss
loop
mov
mov
fs
mov
hlt
add
pop
mulb
adc
inc
imul
add
insl
jmp
or
scas
ja
jne
popa
in
adc
cli
js
je
jmp
mov
xlat
and
mov
insb
clc
push
lret
sbb
cmp
inc
sbb
sub
pop
je
jb
or
xor
cmp
mov
push
rclb
test
push
dec
stos
imul
inc
rep
ret
rorl
repz
adc
and
clc
add
push
in
mov
sub
ja
lods
pushf
pop
push
xor
addr16
mov
mov
mov
pop
shlb
or
or
sub
xchg
jle
xchg
ss
mov
sub
adc
sbb
addb
or
in
mov
inc
cwtl
ds
jp
dec
loop
test
push
dec
dec
stos
outsl
fs
dec
loopne
call
add
xchg
dec
pop
xor
push
in
movb
es
into
push
comiss
rcll
lcall
pop
or
sub
push
push
daa
ror
aad
add
lods
push
jmp
jl
push
stc
stos
and
mov
dec
sbb
dec
jbe
pop
pop
sub
shll
cwtl
ret
ds
repnz
shlb
adc
lcall
loop
and
mov
cmp
sub
mov
jno
jl
aas
cld
addl
int3
cmc
std
les
int
dec
stc
aad
add
sbb
das
push
pop
fwait
pop
pop
xor
rorl
int3
mov
insl
repnz
xchg
pop
dec
mov
mov
loop
insl
inc
loope
rcr
int
mov
cld
je
sti
aam
cs
minps
and
xor
cs
ja
add
xor
push
sti
sbb
sbb
cmp
into
aas
pop
sbb
pop
jle
cmpsb
mov
sti
mov
outsb
enter
mull
fldcw
dec
popa
adc
hlt
or
xchg
pop
nop
arpl
mov
sarb
stos
and
xchg
filds
call
jl
or
xor
les
popf
push
aam
mov
push
idivl
test
push
or
xor
or
dec
sbb
lock
lea
mov
sub
sbb
stos
push
scas
push
push
es
subb
leave
lcall
popa
or
mul
insb
cld
jns
lea
rclb
jae
shrl
scas
out
mov
call
pop
pop
lahf
fs
ljmp
hlt
dec
mov
pop
push
or
loopne
je
xorb
add
shll
jno
cld
sub
add
or
adc
ret
rcr
cmp
cmp
push
pushf
cmpsb
and
neg
mov
fcoml
xor
adc
enter
cwtl
adc
sub
call
xchg
stos
pop
hlt
jb
loopne
push
xor
lock
arpl
lods
mov
jp
mov
cmp
pop
lds
call
push
push
push
lret
sti
aad
mov
mov
cmp
jb
fidivs
jno
shll
xchg
repz
cltd
jle
pop
push
loopne
dec
dec
mov
shrb
ret
mov
lods
idivb
mov
in
mov
test
bound
push
shlb
cmp
push
inc
aas
pop
cmpl
xchg
cmp
dec
mov
jmp
addb
je
ficomps
imul
cmpb
mov
sbb
mov
sbbb
mov
mov
scas
cmpsb
mov
imul
int3
xor
adc
jp
popl
pop
fisttps
mov
aam
sbbb
sbb
orl
bound
cmp
sbb
jnp
xchg
inc
adc
jg
out
scas
arpl
dec
mov
test
xor
dec
push
or
and
cld
cmp
dec
and
js
out
adcb
sbb
add
shrl
fdivrl
imul
sbb
sti
loope
rclb
lea
dec
inc
cld
lret
pop
xchg
mov
cmpsl
pushf
into
cmc
xchg
jne
rorl
jmp
sub
cmpl
mov
cmp
jae
lahf
sub
jbe
push
mov
outsb
inc
or
pop
lock
cmp
or
insl
cmp
inc
lcall
xchg
mov
cli
inc
stos
dec
in
pushf
out
leave
ss
rcrl
or
inc
cmpb
mov
out
dec
xlat
jge
outsl
test
mov
shll
arpl
arpl
aad
and
es
adc
test
rcl
add
pop
jp
loopne
xlat
and
movsl
and
xchg
shll
fimuls
into
movsl
sbb
repz
lods
mov
and
mov
xor
lret
push
pop
cld
jbe
ret
cmc
adcl
pop
mov
lds
test
leave
jmp
or
ret
jno
or
dec
in
xor
test
test
jae
out
in
mov
sbb
bound
cmp
ja
imulb
xchg
sub
sbb
fmuls
je
mov
sarb
movsb
jp
xchg
lcall
jb
pop
daa
add
icebp
ret
jg
std
mov
push
inc
sbb
push
or
jle
jnp
loopne
popa
mov
sbb
push
adcb
sub
mov
popa
dec
adc
cmp
mov
sbb
aad
fistl
rcll
mov
jl
adc
sar
pop
and
mov
and
xchg
andl
and
push
data16
imul
mov
pusha
xchg
dec
or
test
in
idiv
es
out
ljmp
mov
lret
inc
leave
out
and
es
repnz
push
cmp
cmp
xor
cmp
iret
pop
dec
out
jo
cmpsb
dec
loopne
mov
pusha
jecxz
mov
gs
or
push
pop
lods
mov
xchg
xcrypt-ctr
cmpsl
pop
mov
mov
mov
iret
repz
leave
dec
leave
inc
jecxz
jae
mov
cmp
xchg
adc
mov
pop
test
add
add
loope
pop
nop
popa
outsb
orl
test
lret
sbb
enter
insl
andb
push
scas
add
or
mov
dec
iret
pop
xor
scas
cmp
mov
cmpsb
popf
pop
dec
sub
repnz
mov
bound
arpl
adc
test
and
and
mov
jno
fcoms
insb
sbb
pmulhuw
int
lds
cwtl
pushf
out
pop
xor
push
lahf
inc
inc
out
frstor
fisubl
stc
mov
adc
mov
inc
fs
imul
pop
cmp
scas
adcb
jbe
cwtl
pop
in
ret
loope
int
cmc
in
sbb
loop
xchg
cltd
iret
mov
icebp
xlat
sub
pusha
aam
dec
imul
push
or
lcall
movsb
pop
add
lret
fimull
loope
sbb
cld
loopne
ret
pop
lods
lds
cmp
aaa
pop
cld
fcom
mov
mov
insl
fdivrs
and
adc
pop
decl
jmp
pop
icebp
fwait
inc
sub
inc
push
ja
jmp
cmp
pop
mov
sbb
and
inc
push
addb
sbb
fmul
inc
sbb
fists
int3
add
fcmovu
imul
mov
hlt
cmp
jl
and
repnz
jne
addl
mov
int
scas
cmp
faddl
pop
xchg
push
add
fiaddl
jp
fsubr
loop
imul
subb
push
arpl
ror
mov
daa
dec
xor
cli
cmp
sub
pop
pop
ficomps
mov
mov
mov
idivb
es
loope
daa
inc
cmp
adc
outsb
mov
cmp
aas
data16
in
std
negl
mov
cs
xchg
jb
rcrb
ljmp
fstpt
push
lods
aam
pop
mov
sbb
into
je
sbb
lods
cmp
loopne
adc
cld
fwait
imul
dec
fistl
mov
gs
in
mov
sarl
test
pop
jnp
in
pop
cltd
or
push
into
inc
sub
and
sub
lahf
das
dec
mov
shll
pushf
out
cmpsl
stos
shr
jl
add
jl
lcall
xchg
or
aaa
lods
sub
cmp
push
or
dec
adc
jbe
inc
lods
mov
nop
pop
arpl
enter
bound
adc
inc
mov
cmp
mov
int
push
pop
cmc
insb
rcll
cmp
dec
std
cmpsb
icebp
cmp
fcmovnbe
mov
cmove
xchg
mov
icebp
inc
and
mov
out
inc
adc
test
mov
insb
movsb
cs
push
pop
xor
icebp
andl
into
jecxz
push
dec
xchg
lea
daa
adc
add
or
xchg
lock
jmp
push
jbe
icebp
push
je
cmp
fsub
adc
sub
sarl
mov
js
in
mov
jp
sub
push
fildl
jo
and
sbb
aam
call
mov
sbb
repnz
adc
sbb
incb
jae,pt
push
mov
push
test
imul
mov
loopne
sub
je
mov
or
fldenv
leave
les
sub
incb
stc
jns
hlt
pop
outsl
mov
inc
das
shl
pop
jno
pop
lock
lret
add
pop
inc
cmp
pcmpgtd
add
lret
sarl
adc
inc
or
shrl
mov
test
jne
jmp
add
mov
jno
ja
pop
jp
xchg
mov
int3
pop
jo
and
jge
stos
xchg
push
xor
mov
nop
popa
dec
or
sbb
scas
imul
mov
aam
ljmp
jg
inc
or
mov
add
sub
stc
mov
and
subb
fcmovb
jne
sub
mov
js
mov
in
inc
jecxz
sti
inc
fucom
cmp
xor
mov
out
jnp
out
sbb
sub
fmuls
imul
leave
clc
ja
test
arpl
jnp
xor
outsb
cmpsl
fwait
xchg
mov
xor
scas
mov
out
leave
lods
adc
dec
out
icebp
dec
mov
test
adc
rcr
shl
cmp
pop
inc
jmp
into
std
inc
out
mov
or
out
call
mov
mov
sub
es
sub
scas
xor
mov
mov
add
mov
push
ja
mov
stos
xchg
xchg
hlt
ljmp
stc
insb
cltd
jmp
cmp
fwait
mov
ret
addr16
sbb
mov
test
outsl
scas
pushl
sti
stos
pop
cs
mov
es
mov
jb
inc
cmp
or
inc
lds
out
cmp
nop
test
mov
push
add
or
sbb
add
ret
subl
lock
jnp
push
sti
adc
icebp
pusha
js
sub
enter
and
lcall
push
js
rclb
sbb
adc
xchg
js
aas
lods
pop
gs
and
stc
adc
adc
jge
jge
mov
cmp
in
dec
mov
cwtl
dec
fwait
push
cmp
add
clc
and
out
lds
push
pop
data16
jo
xchg
mov
lsl
xor
jns
inc
stos
cltd
pop
fadd
enter
insl
cld
popw
loope
and
jmp
paddb
lock
cmc
gs
insl
push
push
aam
movsb
imul
ss
aad
xor
jge
mov
sbb
jg
pop
pop
insb
stos
popa
adc
push
jmp
add
idivb
pop
sbb
pop
inc
add
mov
cmc
pop
dec
addr16
bound
clc
loop
and
or
inc
sbbl
imulb
jns
test
iret
mov
jmp
cmp
fnstcw
mov
fdivrl
sbb
mov
push
adc
and
les
fimull
in
inc
shr
lahf
outsb
das
xchg
jo
mov
nop
arpl
or
push
cmpsl
scas
aad
ja
push
call
jg
mov
mulb
sub
mov
ss
pop
loopne
es
fwait
mov
cli
jp
enter
loopne
push
enter
dec
loopne,pn
movsl
test
mov
jg
and
fbld
dec
and
filds
xor
push
call
sub
mov
cmc
lcall
call
mov
mov
cmp
imul
pop
fiadds
rcrl
cmpl
cli
repnz
inc
xchg
push
repz
ja
xchg
movsb
mov
dec
add
mov
jae
xchg
or
push
sub
daa
mov
in
out
and
pop
pop
dec
xchg
mov
inc
pop
insb
outsl
and
aas
mov
lcall
add
bswap
mov
push
mov
sarl
in
dec
aaa
inc
cmp
stc
mov
outsl
pop
and
pop
aad
dec
dec
sub
fldl
rclb
mov
out
jo
popf
test
ffree
mov
je
mov
jno
in
adc
hlt
sub
add
ja
xor
cld
pop
lds
xor
stos
div
cmp
push
test
loope
pop
ret
mov
xor
test
rolb
ljmp
pop
cs
xlat
dec
lds
xor
lds
push
in
imull
sub
aam
movsb
call
dec
jmp
in
sbb
or
fst
cltd
adc
popf
jmp
push
push
push
adc
sbb
mov
outsb
push
cmp
dec
mov
adc
out
mov
movsb
pop
inc
hlt
fimull
xchg
in
sbb
scas
mov
aam
push
and
push
adc
jbe
xlat
movsl
out
pop
dec
push
fs
mov
je
sub
and
adc
fwait
mov
inc
or
out
push
fidivl
fdivrs
ret
adc
repz
cmc
mov
sbb
jl
filds
bound
xchg
add
addr16
and
xchg
inc
loop
rcrl
mov
fwait
pop
jae
jnp
sub
mov
cli
aas
bound
into
adc
fimuls
jecxz
inc
in
mov
dec
pop
xchg
adc
push
mov
mov
scas
inc
sbb
outsb
pushf
jle
pop
xor
inc
ret
adc
sbb
mov
int3
js
imul
push
pop
gs
and
fsubs
mov
mov
hlt
lret
cltd
or
and
fs
stos
jecxz
pop
icebp
iret
aas
in
pop
orb
scas
lret
imul
sub
icebp
fistps
shl
movsl
dec
fildl
or
cwtl
pop
rcrl
xlat
xlat
stos
mov
xlat
loop
jne
xchg
mov
ret
xorb
push
cltd
pop
inc
and
mov
jno
sahf
or
lods
nop
adc
adc
out
add
mov
stc
cmp
cmp
push
mov
aad
add
xchg
or
aaa
mov
out
dec
sti
pop
out
jmp
pop
sarb
dec
dec
ss
mov
inc
movsl
out
push
push
lret
mov
mov
or
or
inc
into
jmp
xor
jp
pop
shlb
fcmovnu
mov
scas
dec
sbb
es
rorb
loopne
sub
push
cmp
fadds
lds
rclb
cs
daa
sub
sbb
pop
jge
jno
xchg
ffree
push
cmp
jns
push
xor
adc
fcoms
push
pop
es
cli
roll
outsl
imul
outsb
icebp
dec
jae
fwait
mov
aas
cmpsb
ja
gs
jae
subb
mov
fcmovu
andb
ret
sbb
cli
je
mov
es
fldcw
ficoml
jbe
sbb
mov
xchg
test
in
iret
in
inc
jnp
sub
pop
cmpsl
sub
aam
inc
mov
xor
rcrl
scas
fstpt
cmp
lahf
repnz
push
imul
and
data16
lcall
xchg
lret
inc
stc
sbb
out
or
das
dec
sbbb
fistpll
push
imul
popf
sbb
push
and
in
cld
and
lcall
mov
outsb
adc
aam
add
cwtl
lahf
or
cli
jo
nop
mov
dec
mulb
dec
dec
pusha
adc
out
or
xchg
dec
dec
inc
scas
jne
inc
jl
in
subl
adc
xor
push
adc
addr16
pushf
decl
dec
push
sub
int
pop
cmpb
cld
ja
dec
ja
hlt
pop
pop
faddp
sub
dec
inc
mov
xchg
outsb
jge
or
int
add
jl
fwait
out
fimull
subb
xchg
inc
scas
pop
test
in
xor
cmp
mov
sbbl
iret
or
cltd
ss
inc
xor
adc
mov
dec
push
inc
sbb
mov
mov
xchg
pop
push
dec
jbe
add
sarb
mov
adc
mov
in
lret
std
mov
xor
faddl
dec
test
clc
ret
clc
or
push
mov
leave
dec
push
stos
stc
jo
stos
call
ds
adc
ljmp
dec
dec
sub
out
inc
pop
mov
std
pop
movsb
mov
jmp
fcmovu
inc
ret
cmpsb
cmp
movl
or
xchg
out
xor
pop
sub
cmp
and
xchg
out
dec
cmp
cmp
fsts
mov
gs
push
mov
ret
loopne
push
xor
aaa
imul
xchg
scas
int
bound
ret
jno
fldt
sub
mov
jno
adc
arpl
mov
sbb
imul
xchg
movsb
dec
ljmp
pop
loop
gs
loop
negb
jmp
cmp
shr
addb
pop
es
inc
push
cmpps
imulb
push
xor
mov
movsl
iret
ror
cmp
mov
cmc
sub
push
mov
call
pop
in
or
pop
insl
xor
outsl
test
mov
jp
sbbl
clc
pop
jo
add
repz
or
mov
dec
adc
sub
insb
js
jp
aam
sarl
imul
dec
repz
stos
mov
mov
push
cmp
mov
mov
jns
lock
xlat
cld
mov
dec
gs
pop
push
stos
test
jo
sar
addr16
sbb
dec
add
add
inc
or
les
jp
mov
dec
hlt
xor
ljmp
adc
nop
aad
cmp
ss
sbb
dec
and
dec
pop
dec
movsl
rorb
lahf
test
jle
subb
and
mov
and
cmp
and
lods
call
inc
leave
xor
popf
push
mov
in
mov
lods
int
inc
mov
stos
jnp
xor
movsl
add
xchg
repz
push
xor
mov
leave
sub
in
mov
jg
popf
ret
xorb
movsl
sbb
push
pusha
xor
jbe
into
xchg
cld
xchg
outsl
jns
fwait
lods
mov
dec
out
jnp
xor
adc
mov
test
addr16
mov
lods
xchg
push
fwait
shlb
xor
ret
jo
loopne
xchg
sub
outsl
inc
mov
out
xor
jns
dec
nop
loopne
hlt
fisubrs
or
pop
mov
std
xor
cld
test
pop
enter
icebp
xor
push
cmp
test
add
xchg
fstpl
and
add
mov
loop
shrb
sub
frstor
jmp
cmp
sarl
outsb
sub
add
ss
sbbw
cltd
shrl
dec
sbb
ljmp
dec
lods
mov
xlat
fldenv
inc
insb
mov
out
cltd
rol
dec
xor
push
arpl
add
add
or
test
xchg
sbb
ret
inc
adc
mov
test
lret
xchg
add
aam
inc
push
popa
mov
pop
push
es
sahf
test
push
lds
pop
ficomps
shll
push
or
loope
aas
lahf
adc
andb
sub
stos
pushf
sbb
int3
ja
pop
nop
lahf
lahf
push
repnz
or
sbb
pushf
pop
inc
sub
into
sub
clc
sbb
jmp
xchg
je
aas
mov
pop
jne
popw
pop
or
sbb
lcall
and
and
or
and
pop
daa
pop
loopne
in
test
sahf
xchg
ja
cmp
aam
sub
lret
scas
jle
test
pop
adc
inc
or
iret
mov
xor
in
mov
repnz
dec
das
ljmp
sbb
cmp
aad
sbb
pop
pop
imull
dec
ds
int
xor
ljmp
out
pushf
enter
xor
dec
fstl
std
mov
movsl
sub
xchg
sub
jno
pop
dec
and
popa
pop
in
mov
lea
js
andl
rolb
mov
fidivs
lcall
lods
xor
aad
xchg
inc
or
gs
jg
pop
jp
das
psubusb
cltd
pop
pop
and
pop
cmp
push
daa
xchg
dec
mov
push
stc
sub
loopne
dec
xchg
mov
popa
cmc
push
sub
push
outsl
loopne
inc
sbb
push
mov
jno
pop
add
mov
add
pushf
pop
mov
movsbl
sbb
fcomps
add
xchg
stos
pop
insl
pop
sbb
scas
pusha
adc
into
add
mov
pop
jg
data16
jbe
sub
jecxz
push
xor
mov
movsl
inc
dec
add
ss
test
xchg
or
pop
cmp
jmp
shlb
mov
xchg
mov
mov
inc
mov
jge
sub
push
and
push
mov
ss
jo
out
dec
notb
aas
scas
rcl
mov
std
mov
jnp
test
stc
scas
outsb
stos
xchg
inc
gs
in
inc
out
inc
xchg
dec
insl
inc
jl
clc
push
cmpb
pop
pop
mov
mov
cltd
xor
inc
jbe
and
daa
inc
sub
or
xchg
scas
sub
leave
cmp
push
mov
test
imul
addr16
dec
inc
rcrl
xchg
je
imul
and
div
sbb
rcr
popf
icebp
mov
es
mov
scas
lea
push
out
dec
andl
push
pop
cmc
gs
mov
out
push
cmp
jecxz
gs
jbe
stos
int3
ret
scas
adc
int
and
cmp
nop
js
xchg
sbb
mov
mov
push
fucomp
fstpt
xchg
cmc
push
cmp
mov
sbb
or
jge
add
xor
inc
test
adc
xchg
mov
or
popf
shrb
insb
xchg
mov
dec
enter
cmpsl
pop
mov
push
dec
jg
xor
dec
mov
inc
dec
fisttpl
icebp
xchg
push
pop
jp
sub
sub
jp
incl
xlat
dec
test
cmpsl
add
repnz
out
cmpb
sub
adc
mov
stos
dec
dec
stos
les
pop
aad
das
push
xchg
lret
nop
add
insl
pop
imul
sub
sub
adcb
call
jns
push
push
push
mov
push
arpl
out
loopne
jb
mov
or
ja
sti
nop
mov
fcomps
push
out
pop
jle
dec
sub
lods
pop
or
lret
cwtl
ljmp
xchg
ljmp
push
lea
es
shrb
mov
arpl
inc
sahf
add
push
lret
and
loop
repnz
pop
jb
ret
sbb
inc
stos
xchg
adcb
inc
sub
sbb
jo
cmc
dec
mov
mov
enter
into
mov
inc
jne
ss
or
push
jb
xor
jl
test
push
push
lahf
mov
inc
lds
adc
loop
push
mov
jae
sbb
fmul
ja
cmpb
in
dec
cli
outsb
mov
lods
shlb
mov
xorl
rcr
lods
pop
jle
roll
cmpsl
fwait
adc
movsl
movsb
or
aas
mov
jl
jne
pop
xchg
test
repz
es
fdivr
jbe
xor
mov
shll
sub
dec
out
gs
xor
mov
arpl
xchg
lret
xor
mov
xchg
into
dec
ss
adc
adc
test
push
cltd
lea
or
stos
jb
stc
into
sti
push
insb
push
xchg
and
in
test
popf
mov
fwait
add
and
cli
test
inc
push
and
jge
mov
dec
test
mov
jns
enter
jnp
sar
dec
fs
aad
push
repnz
sub
ret
sub
lods
xchg
inc
imul
xchg
aad
inc
sub
insl
adc
int3
push
cmc
mov
idiv
cmpsl
aaa
je
lods
or
fsub
es
ret
scas
push
ret
mov
outsb
push
mov
in
out
push
lahf
pusha
es
inc
fs
jo
js
fcmovne
inc
or
es
sahf
lods
push
lock
popw
test
pop
cmp
test
shll
cmpsl
cmpb
add
call
push
outsl
xchg
icebp
rep
ds
or
inc
sbb
pop
cmp
and
push
je
in
jbe
sbb
iret
jmp
push
into
test
xchg
sbb
or
or
das
mov
dec
cltd
jmp
mov
daa
test
jae
outsb
dec
push
lahf
into
xchg
xorl
adc
and
sbb
clc
pop
addr16
mov
iret
iret
iret
sahf
leave
push
add
aad
jecxz
lahf
cltd
mov
push
loope
mov
inc
bound
setne
outsb
xchg
mov
pop
ret
into
scas
shll
mov
jns
sbb
xor
jne
ret
dec
aam
js,pt
int
cltd
rcrb
or
and
aam
aaa
cmp
dec
cs
dec
out
mov
xchg
subl
in
out
sbb
xor
mov
mov
lcall
insl
lds
imul
out
enter
mov
inc
mov
rcrb
pop
sbb
mov
lret
inc
add
lods
sub
lock
fildll
inc
mov
adc
sbb
xchg
in
dec
int3
daa
cmp
fs
jne
or
add
test
lds
insl
stc
cmpb
xchg
mov
lea
dec
adc
pop
sub
sub
clc
inc
addr16
or
lret
stos
addr16
cmp
lret
das
jnp
jl
inc
and
adc
loop
mov
cmc
rcll
std
imul
nop
mov
out
shl
test
cmp
repz
pop
lahf
pop
les
xor
cmp
loope
in
xchg
add
jno
mov
or
and
inc
movsb
jl
adc
adc
cwtl
out
cwtl
jecxz
add
mov
into
cmp
or
sbb
sbb
mov
test
mov
jns
std
loop
loop
inc
push
pop
sarb
in
ret
jg
push
xor
in
dec
dec
and
pop
stos
aad
popa
ret
mov
insl
ret
aad
mov
dec
test
cltd
jns
mov
mov
push
adc
xchg
fsts
movups
mov
sub
sbb
int
les
loopne
sub
push
xor
mov
xchg
mov
jg
arpl
mov
sbb
fisubrl
sbb
adc
jae
mov
mov
fnstcw
jne
mov
mov
repz
lcall
pop
loopne
push
rorl
out
popa
daa
int3
mov
jbe
add
pop
in
xor
add
adc
dec
je
jb
aam
cltd
das
rclb
icebp
xchg
mov
add
shrb
js
les
cld
push
sub
sub
pop
push
repz
adc
shl
or
dec
adc
lock
sub
ds
sub
fdivrl
cmp
movb
adc
cltd
dec
aaa
cwtl
push
mov
addr16
stos
mov
jne
xchg
pop
mov
mov
daa
add
xchg
or
inc
sbb
daa
xchg
pushf
ss
or
lods
popa
les
int3
aaa
dec
lock
and
pop
lds
mov
lcall
mov
pusha
fs
mov
sub
rorl
mov
je
mov
pop
adc
test
inc
test
scas
and
sahf
inc
fisubrl
jecxz
ss
add
xchg
pop
cli
repz
dec
ja
adc
repnz
mov
mov
add
mov
bound
jecxz
xchg
repnz
aam
sar
imul
lds
push
push
shll
pop
or
fdivrl
mov
add
cmc
popl
lret
dec
fs
or
addb
inc
sub
arpl
jge
mov
test
out
mov
xchg
mov
mov
mov
and
mov
jo
push
push
repz
xchg
push
out
push
js
jge
pop
mov
fistpll
mov
sbb
lods
xchg
adc
pop
push
mov
mov
aas
dec
call
jle
in
add
inc
mov
test
sub
dec
and
push
je
shrl
add
sub
inc
or
sub
adc
jns
add
mov
popf
xor
into
push
movsl
add
mov
test
shlw
adc
icebp
lahf
cmp
daa
scas
mov
fsubs
mulb
inc
jbe
scas
adc
push
mov
adc
fwait
pop
sarw
push
loopne
mov
jb
xor
scas
mov
xor
into
jp
mov
ret
icebp
or
shl
mov
dec
mov
scas
sahf
xor
jmp
push
dec
cmp
mov
int
cli
mov
jae
xor
movsb
mov
ds
cwtl
mov
pop
sub
mov
mov
xor
and
pop
ror
and
inc
sub
notl
push
stc
scas
jle
sub
and
cld
adc
mov
mov
xchg
xchg
shrb
sub
and
pop
push
and
test
es
lret
cltd
out
mov
jns
xor
xchg
dec
sbb
push
mov
shlb
cs
pop
xchg
loopne
sbb
mov
or
add
icebp
adcl
hlt
divb
fisubrl
push
xor
mov
mov
stos
je
in
inc
and
push
mov
pop
sbb
in
push
les
movsb
push
inc
sub
mov
test
mov
jmp
adc
inc
sbb
mov
jle
sahf
addr16
add
pop
mov
sbb
add
outsl
dec
lods
dec
es
ret
push
jno
outsb
pop
cmp
gs
incb
addb
dec
out
mov
push
xchg
lods
mov
in
adc
nop
es
and
ds
cmp
repz
aad
mov
pusha
idivl
and
rcrb
jnp
mov
adc
imul
lret
or
jns
data16
in
fidivs
add
int3
and
mov
mov
lcall
lock
push
jge
lret
dec
inc
jne
xchg
cmpsb
dec
adc
lock
lods
pop
or
and
inc
les
flds
scas
pop
aaa
inc
sub
ss
mov
ja
inc
sub
imul
adc
cmpl
mov
jns
je
mov
popf
xor
adc
jmp
iret
hlt
jp
mov
mov
inc
xchg
in
sti
add
and
roll
movsb
movsl
mov
pop
add
je
lret
dec
or
rorb
mov
pop
popf
pushf
pop
or
addr16
inc
in
mov
fucomip
sub
es
inc
inc
add
xchg
movsb
sbb
push
xchg
xlat
dec
push
sub
jns
rcll
out
pop
mov
sahf
int
jmp
push
push
jg
test
dec
test
out
cwtl
inc
je
dec
and
lcall
mov
stos
lret
or
add
mov
pop
je
mov
jnp
cmpsb
outsl
push
lods
inc
mov
cmp
loope
cli
insb
imul
sbb
push
xor
fisttpll
je
fnstenv
iret
or
pusha
dec
es
ja
jbe
sub
mov
push
xchg
inc
ret
push
dec
mov
jmp
mov
ret
aaa
js
xchg
adc
cli
pop
cwtl
dec
jns
icebp
movsl
sbb
and
xadd
xchg
dec
mov
dec
iret
arpl
add
cltd
xchg
ja
xchg
push
xchg
inc
mov
icebp
jno
dec
and
imul
jl
or
dec
jp
repz
bound
jb
popf
mov
pop
stos
fists
out
hlt
xchg
pusha
add
jo
jle
push
mul
fsubp
addb
pop
pop
or
leave
xor
xchg
test
push
jge
fwait
mov
cmp
insb
xlat
jns
jg
into
xor
xor
repz
imul
fnstenv
or
push
mov
cmovg
cmp
aas
push
int
mov
adc
test
lock
push
add
add
mov
idivb
testl
ja
std
push
shrl
fdivrs
icebp
pop
orl
outsl
repnz
and
popa
jne
push
cmpsb
icebp
pop
fiadds
out
cwtl
and
and
sub
insb
xor
stos
mov
cmp
mov
mov
jno
dec
pusha
sub
mov
push
nop
in
push
xchg
outsl
mov
lods
fcom
or
cmpsb
lcall
ss
sbb
xchg
repz
jl
lods
mov
iret
aas
les
jno
cmc
fisubl
fcomps
push
shll
and
lea
sbb
gs
fsub
jg
shll
scas
jns
loope
inc
or
jne
lret
inc
call
sub
mov
xchg
jge
adc
cltd
jle
test
jp
pop
dec
fldl
push
sub
adc
jge
or
pushf
xchg
fmuls
inc
sub
fists
fisubs
roll
gs
lcall
inc
enter
mov
fldt
test
and
stos
sbb
lods
xlat
xchg
push
stos
sub
and
les
mov
enter
xchg
fdiv
add
jl
addl
in
sub
mov
jge
lea
inc
jge
xchg
jp
dec
sbb
mov
push
mov
xchg
iret
pusha
adc
shll
add
push
test
shlb
dec
test
and
in
outsb
test
adc
or
dec
icebp
rcrb
jne
mov
push
sub
and
sub
cmp
xor
lret
loopne
or
sbb
jne
test
addl
mov
dec
inc
pusha
mov
and
in
aaa
mov
and
mov
aaa
pop
rorl
int3
sahf
jbe
daa
sub
mov
mov
xor
cltd
ret
and
and
and
scas
xchg
sub
mov
jb
sub
rorl
inc
mov
lock
roll
pusha
ja
jb
enter
add
jmp
leave
sub
mov
bnd
enter
push
stos
rorb
iret
inc
push
dec
pop
pushf
add
pusha
push
pop
pop
loope
arpl
jne
jge
add
sbb
or
fstp
sub
mov
iret
insl
loope
or
loope
sub
scas
fwait
mov
dec
lds
out
or
add
push
add
mov
int
mov
mov
int
cmp
cmp
push
mov
aad
push
xor
mov
xchg
hlt
aas
cmp
out
cmp
xor
pop
jae
in
mov
adc
sbbb
adc
mull
repz
popa
aaa
sub
outsl
pop
and
addl
js
push
rdmsr
addr16
lahf
cmp
addr16
adc
mov
pop
hlt
or
sbb
scas
ljmp
or
dec
adc
mov
int3
or
pusha
fdivr
push
dec
ret
out
cmpsl
outsb
in
add
arpl
mov
or
in
jo
hlt
xor
sbb
fdivr
dec
xor
lret
pop
push
or
cmp
push
hlt
sub
pop
add
pop
sbb
sbb
pop
inc
enter
mov
aas
lods
dec
xchg
mov
mov
ds
leave
and
or
pop
in
inc
add
enter
xchg
popa
rcrl
dec
and
xor
fldl
mov
pop
pop
push
fldl
add
cs
mov
mov
test
add
sub
sbb
pop
sub
out
mov
pop
stos
notl
test
mov
cmp
shrl
pushf
sti
push
aas
addr16
inc
bound
mov
and
mov
and
cli
and
lods
lods
lock
shl
sbb
xchg
test
xchg
test
dec
add
add
aam
outsl
sub
push
jle
jle
or
into
xchg
scas
push
test
xlat
push
xchg
iret
in
loope
mov
push
mov
test
idivl
cmp
loope
push
std
dec
stos
inc
addr16
insl
push
mov
jl
mov
jl
fists
into
add
scas
jnp
cmpsb
pusha
lea
fisubrs
xchg
pushl
ds
js
push
pop
lods
movsl
fs
jno
fidivrl
in
inc
sub
xor
dec
and
ljmp
sbbl
js
pop
out
test
arpl
jmp
lds
je
dec
jae
testb
xchg
cmp
cld
es
mov
test
and
mov
sbb
or
pop
int3
and
jmp
sbb
mov
cmp
pop
sahf
cli
lea
mov
push
xchg
int3
jae
xchg
js
aaa
jbe
inc
jb
sbb
iret
aad
xlat
hlt
pop
jns
push
cwtl
arpl
bound
mov
stc
jmp
add
cli
dec
ss
inc
xor
or
rcrb
mov
xchg
inc
sarl
lcall
das
nop
fwait
jae
cmpsl
dec
rcr
test
mov
xchg
cli
lret
mov
cmp
pop
or
pusha
aam
push
xor
inc
scas
add
mov
lret
std
cmpsl
outsw
test
or
sbb
jle
add
cltd
aam
mov
sub
mov
jo
mov
ja
leave
xchg
mov
lock
sbb
iret
push
in
dec
or
ret
cmc
test
xor
fbstp
dec
sub
jecxz
aad
fldl
ds
mov
jge
sub
int3
ret
mov
jo
mov
or
and
ffreep
cmp
mov
jle
shll
pop
rcr
icebp
addr16
out
fisubl
xor
xor
mov
pop
inc
subl
fwait
imul
sbb
sub
jge
sub
insb
icebp
mov
mov
ret
repnz
push
pusha
xchg
pop
stos
repz
mov
xor
sub
pop
in
push
xor
aaa
testl
xchg
adc
aas
mov
scas
cmc
test
std
scas
push
std
imul
cmpl
outsl
lret
ljmp
lcall
add
xchg
mov
notl
out
loope
xchg
jecxz
ljmp
xchg
inc
mov
int3
push
adc
nop
push
sbb
or
enter
loop
rolb
roll
sbb
shl
jbe
xchg
flds
and
out
andl
bound
jge
adc
adc
cmpsl
mov
aad
fsubrl
push
lods
xchg
jle
insl
call
fisubs
lret
jl
push
mov
cltd
fs
add
or
bound
mov
lock
xorb
adc
mov
adc
push
mov
mov
or
sbb
bound
and
pushf
dec
pop
aad
scas
add
push
icebp
add
jp
pop
shl
add
jb
xchg
stc
mov
or
inc
cmp
in
xchg
and
out
dec
xchg
int
in
sbb
stos
dec
xchg
lret
orb
js
add
dec
aaa
es
loopne
xor
xchg
lret
icebp
xor
push
jnp
sub
mov
sbb
addr16
xchg
pop
aaa
sbb
sbb
or
test
cmp
mov
cmp
mov
cli
inc
mov
and
fnstenv
pop
and
xchg
push
xchg
xchg
rorb
jg
addr16
iret
movb
repz
fisubs
xchg
fstl
cmpsl
xchg
rep
sti
mov
loope
mov
pop
cmp
xchg
push
sub
sbb
bound
sub
and
out
mov
jnp
mov
sub
lds
pop
or
or
mov
mov
jb
jae
inc
dec
movsb
es
jns
pop
repnz
xchg
add
push
pop
mul
outsb
je
rcrb
and
adc
or
fcmovbe
aad
sbb
into
mov
xchg
mov
dec
xchg
sti
scas
int
mov
mov
das
hlt
xchg
sahf
add
jge
inc
jbe
stc
jge
xor
and
gs
push
pop
adc
inc
shll
xor
push
ss
dec
lcall
mov
add
jo
and
fistps
adc
out
in
add
loope
rcrl
addr16
pop
jno
xchg
push
and
or
mov
push
pop
pop
divl
rolb
out
scas
mov
push
push
std
out
iret
jne
outsl
adc
sbb
cmpsl
movsl
int
out
xchg
movsb
faddl
lods
or
pavgw
xchg
imul
in
lds
sub
int3
gs
xlat
notl
aad
jg
dec
jp
je
in
mov
sti
sub
and
rcll
dec
lods
mov
push
ret
cltd
int
call
cli
pop
aam
fucom
and
pop
adc
pop
and
jmp
out
lds
popa
inc
js
cmp
arpl
cmpsb
cltd
sub
pusha
movsl
repnz
pop
leave
mov
sub
lods
sub
mov
insl
cld
pop
imul
and
aam
in
push
nop
aaa
sub
insl
out
push
sbb
xor
fsubl
cmp
fcomps
inc
sarb
push
inc
dec
sub
cltd
dec
push
or
mov
pop
inc
xchg
mov
ja
mov
cld
add
push
jg
in
fs
sbb
add
xchg
xchg
orb
push
xlat
test
push
adc
insb
dec
idiv
inc
les
aaa
mov
fsubs
out
xor
sub
push
lret
sub
bound
imul
xchg
sub
and
lods
popf
ds
mov
push
jmp
jg
mov
lahf
xchg
inc
aad
push
push
or
fsub
xorl
stc
shll
sbb
lret
mov
mov
mov
enter
push
and
ret
push
addb
push
and
push
xchg
lea
int
clc
and
cmp
pusha
pusha
push
loope
xchg
inc
mov
scas
pop
es
sbb
nop
jge
lcall
pop
pop
pop
adc
lds
add
mov
push
pop
mov
xor
sbb
adc
inc
int3
jbe
xorb
pop
sub
sub
idiv
pop
sbb
pop
xchg
stos
out
popf
mov
xchg
inc
mov
fcomps
imul
inc
pop
xor
jl
mov
adc
inc
adc
fcomps
movsl
out
sub
mov
sbb
sahf
or
insl
or
cmpb
inc
push
outsl
mov
clc
stos
mov
stc
mov
dec
push
inc
push
hlt
pop
iret
add
push
jnp
add
xchg
std
sub
sub
scas
ljmp
lods
testb
sbb
rclb
adc
imul
icebp
lahf
pop
ret
lods
or
jns
cmp
sbb
add
sahf
push
lcall
pop
fadds
dec
xor
mov
test
pop
jg
out
lds
or
sub
jae
imul
dec
out
je
incb
sub
sarl
inc
jb
push
movsl
mov
je
cmp
mov
and
popfw
fistl
popa
stos
jmp
cltd
arpl
stos
insb
popf
dec
adcl
cmp
les
arpl
popf
inc
jge
and
in
fcmovne
stc
add
fdivl
xchg
je
sbb
outsb
cmp
loope
push
inc
cmp
insb
test
sbb
loop
mov
lods
mov
adc
cli
xchg
jb
cmp
mov
xchg
in
ss
sti
test
std
jmp
xchg
sub
and
idivb
filds
stc
fld
subb
pop
sub
and
lods
icebp
stc
cmpsl
or
pop
loope
mov
push
fisubl
loopne
das
ret
xchg
outsl
sub
aad
push
int3
rcll
scas
pop
setl
dec
nop
imull
sbb
or
dec
pop
mov
ljmp
mov
cmp
mov
sbbl
lret
adc
loope
mov
lahf
arpl
rcll
icebp
pop
in
xor
fidivrs
in
xor
lock
movsl
push
repnz
into
add
cmpsb
shrl
cmp
or
call
popa
add
add
push
sti
mov
ret
sbb
pop
xchg
push
cld
lds
and
test
in
sarl
dec
jp
and
or
test
or
fwait
push
pop
sub
jae
lods
mov
xchg
sbb
test
push
push
cltd
lock
arpl
stc
or
fsubs
frstor
aas
xorb
sub
popf
dec
add
cmp
xchg
icebp
into
ja
or
imul
cmp
inc
pop
mov
scas
jnp
mov
out
dec
dec
mov
mov
push
lods
jg
wbinvd
push
pop
sub
xor
arpl
std
sub
in
pushl
repnz
jl
adc
or
movsl
divb
sbb
push
fistpl
addr16
imul
xchg
ficoms
insl
push
mov
lock
es
inc
shll
in
pop
scas
sub
in
jo
dec
insl
jno
imul
int
lret
faddl
xchg
sbb
cmp
in
shll
inc
pushf
mov
jge
iret
or
bound
leave
ljmp
xchg
adc
push
fnstcw
out
addps
pop
sub
loope
cmp
jne
xchg
and
jo
sti
ja
push
adc
ja
cmc
or
addr16
push
jnp
xchg
mov
adc
push
call
fs
push
and
pop
andb
sub
dec
xchg
jbe
pop
in
sub
mov
and
outsl
movsb
mov
or
cmc
mov
or
repnz
add
mov
in
sub
das
cmpsb
in
jg
je
insl
xor
std
hlt
jp
jnp
shrb
call
cmc
mov
lahf
lods
xchg
or
out
mov
pop
inc
sti
jg
lock
je
jmp
lock
and
inc
and
lret
and
cmp
icebp
gs
clc
add
cmp
out
cltd
roll
popf
sbb
mov
mov
lahf
cwtl
push
rclb
mov
lahf
stos
xchg
xchg
inc
hlt
dec
ds
outsl
mov
imul
xor
inc
out
out
popa
adc
fldt
lret
jne
mov
sub
fwait
push
sub
pop
lahf
repz
movsb
inc
shl
psrld
and
int3
mov
adc
xchg
push
test
add
pop
repnz
in
jge
insl
lods
push
dec
outsb
imul
cmpl
iret
mov
push
in
and
cwtl
mov
jecxz
jbe
xor
fisttpll
mov
sbb
fildl
mov
lods
sbb
aam
aaa
mov
push
jg
cmp
cmp
aad
xchg
std
call
rolb
repz
es
sbb
in
jae
adc
in
add
cmp
fs
out
mov
jb
or
xchg
fdivs
push
pop
push
adc
scas
test
data16
push
adc
sbb
pusha
jne
and
mov
pop
js
imul
fdivrl
dec
xor
movl
cmp
and
xor
mov
push
out
jo
sub
and
jae
lret
into
push
jnp
inc
popa
push
cmp
fisttpll
rclb
jmp
push
push
mov
rorl
fwait
cli
mov
adc
jle
and
scas
push
xor
stos
cmp
push
xchg
xchg
push
bound
stc
test
sub
xchg
and
shr
jbe
pop
test
cmpsb
test
push
and
xchg
int3
mov
sub
pop
or
adc
repnz
scas
shlb
cmpsb
pop
jp
sbb
mull
aad
int
cli
push
sub
jns
and
xchg
sbb
out
xor
inc
mov
mov
xchg
jae,pt
bound
mov
sbb
sbb
xor
and
push
leave
enter
in
cmp
or
and
pop
mov
iret
loop
outsl
movsb
arpl
jnp
aad
ds
cld
sti
movsl
jns
jae
inc
pop
adc
icebp
lock
sbb
insl
insb
arpl
pop
jb
jl
dec
iret
or
in
dec
aam
test
fs
push
inc
in
fstpt
sbb
sbb
stos
push
test
mov
in
mov
sbb
xchg
inc
or
cltd
or
or
push
iret
mov
xchg
fwait
or
addr16
ror
lret
adc
clc
cltd
push
roll
jo
fisttps
push
stc
sub
das
fs
movsb
adc
int
push
fcompl
mov
ret
test
sub
popf
ljmp
inc
jl
fcomps
loop
inc
das
test
ja
fdivrl
not
and
es
push
mov
inc
fisttpl
mov
repnz
or
xchg
xchg
dec
adcl
jmp
sub
cld
and
or
pop
push
je
push
test
ret
std
mov
add
outsl
push
xchg
push
out
mov
adc
sbbb
jmp
dec
loop
cltd
and
mov
scas
fcmovnu
ljmp
sbb
jmp
fisubl
mov
dec
dec
jmp
rclb
and
sub
cmp
arpl
mov
outsb
scas
fmull
mov
mov
mov
fmuls
inc
scas
pop
adc
cmp
xor
loopne
into
jns
iret
add
sbb
insl
iret
dec
push
jmp
and
cmp
add
mov
out
testl
ljmp
std
loopne
push
push
shll
mov
adc
loope
pop
xor
lret
inc
icebp
jecxz
push
mov
scas
mov
fwait
mov
sbb
sbb
xor
xorb
dec
xor
test
sbb
ja
pop
aam
pop
jb
lahf
loope
xchg
mov
and
hlt
xchg
std
mov
pop
add
movsl
xchg
pop
and
mov
cmp
and
ret
and
dec
push
sbb
mov
aaa
fisttpll
and
pop
test
mov
push
loopne
xchg
je
xchg
call
pop
adc
outsb
xor
repz
das
testl
add
rcl
movsb
jl
stos
mov
xchg
sbb
cmp
aam
movsb
test
sbb
or
xchg
push
sub
in
decb
xchg
xchg
cmp
xorb
lcall
adc
dec
stos
mov
jae
aas
mov
pop
pop
mov
jge
repz
sbb
sbb
lret
cmp
jge
jae
mov
mov
mov
fs
mov
xor
fcmovnb
add
call
jno
dec
cmp
lcall
push
clc
das
jb
add
adc
push
rclb
adc
test
in
in
pop
mov
inc
cmp
mov
std
cmp
cwtl
out
das
inc
push
jecxz
xchg
repnz
jg
pop
push
lods
xchg
push
pop
cmp
sbb
out
jmp
frstor
leave
mov
jno
dec
sub
in
adc
adc
loopne
data16
imul
push
cmp
bound
test
jle
lods
adc
cmp
xor
aaa
mov
inc
pop
pusha
add
and
lods
xor
or
add
cmpsl
jae
mov
loop
in
pusha
ret
push
jns
sti
push
mov
data16
lcall
xchg
pop
clc
fwait
inc
xor
xor
mov
pop
adc
jb
mov
sbbl
ret
cmp
bound
imul
icebp
js
js
stc
aas
into
sub
mov
cmp
pop
and
and
push
mov
jnp
and
jl
and
mov
outsb
pop
arpl
addb
hlt
je
xorl
xchg
sbb
sti
mov
adc
xor
dec
and
shll
pop
das
mov
rolb
jne
jae
arpl
mov
imul
push
cwtl
fcomps
cmp
lock
cmpsl
dec
add
scas
inc
sub
cmp
inc
adc
decb
pop
int
movsl
and
add
xor
aam
cmpsl
mov
dec
sub
mov
add
lock
scas
pusha
aad
pop
pop
das
mov
lea
pusha
int3
sbb
call
adc
dec
movsb
or
push
inc
mov
sbb
mov
xchg
xchg
cli
testb
mov
roll
mov
mov
ffreep
xchg
stc
es
jae
insb
shl
js
inc
push
and
sub
fsubl
push
mov
mov
cmp
in
movsb
sbb
mov
lret
cmpsb
sbb
or
pop
mov
inc
aaa
xchg
add
ret
lods
adc
je
adc
jbe
xchg
xchg
pusha
jg
mov
int3
aas
jo
pop
in
lea
push
pop
mov
sahf
sub
and
icebp
dec
lahf
and
dec
push
mov
call
inc
jp
xchg
fsubs
jecxz
in
imul
push
bound
daa
jl
hlt
mov
pop
data16
sub
inc
xchg
aas
stos
mov
mov
xcrypt-cbc
adc
fiadds
pop
or
xchg
jo
mov
add
mov
ljmp
or
or
fnstsw
and
lret
mov
int
fistpll
ss
mov
loope
aas
mov
into
gs
loope
mov
movsl
ljmp
xor
xchg
add
inc
jno
xor
dec
inc
inc
lock
stos
xor
in
and
rolb
jns
adc
fnstsw
push
je
xchg
jae
ja
ret
lods
or
pop
sbbl
jp
sti
adc
or
xchg
mov
jg
inc
arpl
gs
repnz
pop
cmp
dec
int3
insb
outsl
cld
loop
mov
mov
pop
jp
fisubrs
dec
or
test
adc
clc
out
adc
inc
rcl
shl
adc
adc
mov
inc
fidivl
lahf
sub
and
cmp
adc
dec
scas
aam
cmpsb
cli
cmp
mov
test
sub
int
mov
lea
push
in
inc
cmpsb
pop
xchg
xlat
push
push
cwtl
sbbb
mov
inc
jecxz
call
fisubl
cld
cmp
sub
inc
push
shrb
mov
ss
mov
mov
jbe
test
out
mov
pop
enter
jno
sbbb
xchg
lcall
insb
pop
pop
mov
es
in
inc
sbbl
push
lea
pxor
ffree
inc
pop
lds
mov
jmp
xchg
jnp
arpl
sbbb
das
jmp
and
fistl
rcll
cmp
and
add
sub
mov
and
mov
mov
pop
sub
push
push
dec
test
mov
cmp
iret
fmul
adc
insl
and
sahf
mov
and
or
and
mov
inc
int
adc
loope
movsl
jecxz
mov
adc
mov
fucom
xchg
int
popf
std
sbb
vcvttsd2si
mov
mov
jle
imul
and
mov
int3
mov
mov
das
sti
icebp
int3
outsb
scas
lods
repnz
push
xchg
out
mov
xor
icebp
out
pop
jb
xor
ffree
cld
loope
add
in
xchg
xchg
pop
push
popa
bound
popl
mov
pop
dec
inc
pushf
fnstcw
dec
mov
dec
aam
and
sbb
adcl
cli
or
bound
decl
add
cmp
sub
out
mov
je
inc
adc
or
inc
cmp
cmc
mov
popf
mov
shll
das
push
fstl
int3
cmp
cmpsb
dec
call
and
into
fidivl
rorl
xor
dec
int3
das
adc
outsl
leave
stc
ss
mov
push
stos
data16
loope
pushf
add
jae
pop
mov
aas
xchg
mov
frstor
das
xor
ljmp
mov
push
mov
lods
imul
in
int3
into
das
ja
mov
in
test
mov
lods
jne
aas
fmull
sub
pop
xchg
sub
in
push
xor
jae
loop
add
cltd
data16
lahf
mov
imul
jne
mov
stc
popf
or
pop
sbb
movsl
push
lahf
pop
sbb
mov
flds
fidivrs
dec
push
jg
dec
adc
jp
cwtl
daa
xor
pop
push
pop
adc
lahf
dec
push
arpl
and
cmpsl
fbstp
das
sbb
test
ja
mov
inc
mov
stos
dec
sub
mov
mov
std
and
mov
out
in
js
and
loop
jmp
jge
inc
inc
xor
sbb
mov
xchg
orl
add
xchg
cmpsl
xor
aas
ljmp
push
test
rclb
insl
xor
dec
insl
sbb
sbb
rcrl
sub
sbb
pusha
mov
std
pop
inc
pop
lods
and
add
xchg
jo
pop
or
cmp
jge
cld
mov
std
mov
cmpsl
test
cwtl
dec
jle
xor
out
fistpl
or
xchg
pushf
hlt
push
repnz
xchg
fdivs
inc
shlb
sets
add
iret
push
test
or
and
test
inc
fwait
adc
mov
movsl
add
jl
les
std
push
mov
jbe
jle
dec
mov
mov
sbb
rorb
aaa
lock
in
inc
jl
into
lret
lahf
lods
das
add
ss
lea
or
push
sub
cwtl
sbb
push
cwtl
dec
jnp
gs
mov
mov
inc
rcrb
js
add
insl
adc
leave
dec
jecxz
push
mov
and
mov
cmp
popf
sti
xchg
xor
lds
arpl
pop
pop
or
cmp
notb
mov
inc
xchg
enter
dec
repnz
cmp
je
sbb
out
pop
xchg
push
ja
cmp
mov
repnz
push
mov
divl
into
sbb
sub
jae
je
inc
dec
add
in
fwait
inc
aam
jle
lods
es
bound
dec
js
cli
xor
out
fs
pop
enter
jmp
loop
pop
aam
pop
xchg
jns
repz
aam
roll
xchg
lret
add
stos
lea
jno
loope
int3
sbbl
cmp
and
jb
test
jmp
mov
mov
sbb
repnz
xchg
add
aaa
adcb
fiaddl
push
push
dec
in
insb
int3
dec
cmc
jb
cmp
push
fldcw
shlb
and
das
inc
das
inc
in
pop
mov
mov
sbb
ret
outsl
test
mov
xor
cli
adc
mulb
fimull
jle
push
fnstenv
mov
cmp
cli
push
mov
fisubrl
pop
in
test
sbb
and
lds
push
mov
repz
mov
mov
lret
loop
lcall
dec
aas
mov
mov
fidivrs
mov
jb
xchg
out
ror
add
dec
cwtl
dec
mov
ljmp
add
sbb
into
cmp
lret
popa
sbb
xchg
mov
loopne
and
jp
pusha
shlb
mov
add
mov
mov
and
aas
fwait
lret
les
push
gs
scas
sarb
sub
rcr
push
movsb
mov
adc
repnz
or
push
or
inc
mov
mov
adc
fmul
push
jnp
popa
and
jmp
mov
js
pop
add
and
orb
xor
pop
xchg
cmp
add
inc
jns
push
sub
cmpsl
lea
jmp
xchg
rolb
aas
push
sub
and
or
sahf
mov
dec
adc
ljmp
ds
add
mov
mov
push
mov
sbb
dec
in
out
push
clc
pusha
sbb
adc
inc
add
cmp
test
jmp
push
dec
stc
insb
clc
sbb
jo
rcll
xor
xchg
xchg
mov
xlat
pusha
jnp
add
mov
add
fmull
ret
jno
in
sbb
in
scas
jmp
or
pop
out
enter
xchg
stos
dec
fs
lret
dec
and
lock
jl
cmc
push
aaa
ja
fs
add
insl
jecxz
outsl
jmp
fdivrl
cld
pushf
pop
sbb
inc
push
movsb
lods
mov
sub
cmc
jno
test
icebp
xchg
push
sub
and
iret
xchg
fldl
sbb
or
pop
and
push
aad
dec
lea
jbe
cwtl
ficomps
cmpsl
sub
sub
dec
pop
ret
cmp
leave
push
pop
repz
iret
je
dec
lahf
pop
aaa
hlt
mov
repnz
jo
sahf
mov
pusha
cmp
sbb
adc
push
int3
xchg
dec
dec
das
dec
fsubs
stos
sbb
jae
int3
dec
bound
pop
or
fldt
dec
sub
sub
std
cmpsl
cmpsb
xchg
fwait
test
mov
cmp
fchs
loopne
ret
mov
push
xchg
data16
push
xor
inc
mov
pop
out
jecxz
jns
push
repnz
mov
stos
mov
cli
das
mov
cmp
pop
gs
cli
sar
stos
lea
sub
daa
loope
lods
or
popa
or
lods
stc
aam
cmpsb
scas
jne
pop
jle
mov
aaa
sub
sbbl
and
sahf
mov
cmp
sub
push
pop
pop
les
pushf
insl
mov
in
adc
mov
inc
mov
xor
mov
xor
mov
mov
jbe
push
and
cwtl
push
outsl
push
xorl
xorl
sub
mov
pushf
pop
je
andl
mov
dec
cmpsb
cmp
lret
jp
sub
xor
gs
pop
lods
mov
inc
pop
sub
add
xchg
cmpsb
in
pop
addb
adc
lds
pop
cmp
sbb
add
cmovo
pop
jecxz
xor
fsubs
lret
add
push
sti
fs
mov
dec
inc
xor
xchg
xor
filds
arpl
rcrb
jle
loope
push
xchg
sub
sbb
inc
cld
mov
jb
movsl
outsb
sbb
jl
jb
fs
icebp
sbb
push
fwait
push
mov
sbb
int
push
mov
clc
xchg
in
in
lahf
pop
gs
xor
add
mov
fcoml
adc
adc
jl
push
cmpsl
dec
inc
cld
aaa
inc
jmp
popf
movsl
test
fwait
add
lret
aas
test
push
gs
adc
sbbl
cmp
mov
mov
negl
cmc
jmp
sti
loop
daa
push
movsb
test
out
mov
jns
les
sti
cmp
les
mov
adc
iret
neg
not
cmpsl
dec
xor
dec
fsts
addl
jl
pop
push
lcall
mov
add
mov
inc
xor
add
je
jmp
and
sub
push
ljmp
pushf
test
or
loope
adc
sub
pop
inc
jg
bound
sbb
and
mov
les
xchg
or
ds
pushf
adc
cs
data16
sbb
cmpsb
dec
scas
and
xor
mov
in
pusha
xchg
inc
adc
int3
and
jno
cli
fidivrl
daa
add
xor
xchg
pop
insb
pop
mov
inc
push
push
and
adc
cwtl
fwait
sub
fsubrl
and
sbb
mov
lods
js
and
jge
pop
cmc
cmp
sbbb
fwait
mov
mov
pop
repnz
into
ljmp
mov
pop
jne
rcl
dec
dec
sub
outsb
data16
mov
movsb
je
mov
insl
imul
movsl
loop
cwtl
cli
inc
sbb
outsl
sub
jne
roll
shlb
fcmove
mov
cld
loop
lret
lods
pop
neg
xchg
add
pushl
daa
mov
pop
dec
outsl
mov
std
mov
sbb
push
cli
inc
fldenv
sbb
sub
repnz
pop
out
ret
mov
aad
int
mov
pop
xchg
xchg
ss
mov
mov
sub
cmp
pop
clc
bound
cmpsl
and
dec
inc
mov
ds
gs
cwtl
inc
jne
mov
xchg
lods
int
lods
cmc
shr
xor
push
mov
mov
fldcw
mov
and
aas
call
int
xor
xor
fnstcw
ss
inc
mov
and
mov
aas
adc
add
pmaxub
adc
mov
incb
pop
adc
aam
insb
jmp
rolb
enter
push
sub
dec
mov
sub
jo
sub
sub
movsb
in
mov
movsl
fists
xor
inc
jmp
daa
rcrb
dec
imul
sub
add
xor
sbb
cmp
imul
out
iret
jnp
jg
cmp
jns,pn
jmp
mov
stc
sub
mov
push
je
je
sub
lcall
xchg
repz
js
pop
xchg
jp
jg
fs
in
xor
je
xchg
test
outsb
mov
call
das
xchg
repz
xor
ljmp
push
aas
js
lock
negb
ret
cmc
jecxz
das
shl
mov
pop
sbb
jg
fdivrl
mov
pop
lcall
push
jae
mov
sub
xor
push
pop
sub
pushf
add
dec
sarl
test
lds
sahf
cmpl
mov
fdivr
dec
pop
lret
aas
sbb
cmpsb
and
aad
or
mov
cwtl
sub
or
mov
cmp
xor
stos
xor
cmp
aad
dec
cmp
adc
xchg
fwait
sub
pop
or
jae
popf
push
pop
cmc
insb
lds
iret
mov
push
dec
push
call
sbb
call
or
mov
or
mov
scas
int
xchg
mov
and
pop
inc
mov
jne
mov
xor
aam
cltd
xorl
adc
scas
sahf
adc
adc
out
enter
das
mov
xor
jecxz
or
lret
insb
or
dec
mov
or
adc
cld
mov
int3
lods
push
pop
lds
inc
fwait
and
xchg
lahf
jge
popa
jno
mov
popa
subb
jns
icebp
ret
pop
sub
lock
jne
rolb
call
aas
out
and
xchg
aas
mov
push
repz
das
or
test
push
sub
sbbb
and
lods
jmp
lahf
xchg
fnsave
es
jbe
fldl
pop
xor
les
xchg
adcl
or
in
pushf
mov
or
xor
mov
fidivrs
bnd
dec
adc
test
stos
sub
sbb
and
sbb
cmpsb
test
fnstsw
mov
ljmp
roll
push
dec
xchg
cs
jp
mov
loopne
xor
test
xchg
push
jg
dec
mov
add
cwtl
lahf
mov
cmc
lods
jg
out
shlb
aam
pop
mov
adcb
jae
mov
cmp
xor
dec
dec
jmp
pop
xor
std
adc
pop
mov
shlb
jp
adc
std
xor
lret
lods
pop
stc
sti
adc
popf
xor
stos
nop
test
jecxz
mov
in
iret
out
outsl
aam
sbb
inc
shl
insl
mov
sub
mov
push
jo
in
ljmp
mov
mov
into
pop
add
ret
sbb
rorb
out
inc
arpl
je
ds
or
divl
insb
adc
cmpsl
test
aad
dec
push
hlt
jae
xchg
addr16
sbb
ja
jb
iret
cmpsl
pop
pushf
aaa
movsl
push
out
mov
fistl
je
adc
jmp
xchg
fidivl
sub
and
dec
jp
repz
adc
and
and
pop
pop
insl
push
mov
add
imul
push
push
ret
cld
imul
pusha
push
cmp
repnz
xchg
jmp
sub
and
jbe
cli
imull
push
popa
xor
dec
inc
pop
jo
lds
daa
outsl
out
dec
test
sub
xlat
jne
test
out
add
js
cmp
addr16
bound
int
cmp
xor
sub
pop
popa
repz
pop
mov
fwait
gs
sub
mov
sub
or
mov
and
mov
into
je
pop
std
mov
test
mov
jl
insb
add
xchg
cltd
xchg
mov
rcr
fcoms
repz
repz
cmp
jbe
call
gs
adc
ja
mov
and
adc
ret
sub
cmpl
push
js
imul
sub
mov
xchg
cld
xor
push
inc
mov
inc
and
das
xchg
mov
icebp
lea
fwait
mov
stos
mul
xchg
cmp
notb
repnz
les
out
jbe
mov
xchg
xor
and
inc
test
push
jne
popa
out
into
mov
sub
push
add
and
fisttpll
lds
es
cmc
and
ror
and
sti
or
test
adc
pop
fcomps
cmp
jg
sub
lea
pop
repnz
or
enter
add
call
out
aaa
inc
aad
lods
lods
jecxz
pushf
sub
mov
into
cmp
fcom
pop
lret
lcall
jnp
push
shll
cmp
int3
in
sarb
fdivrp
mov
pop
and
mov
ror
pop
in
and
jg
dec
jge
aam
sti
xchg
ja
popf
xchg
push
pushf
xchg
dec
xchg
addr16
pop
cmp
icebp
and
mov
stc
cmp
jne
pusha
outsl
xchg
add
cltd
xchg
insb
inc
push
mov
or
repnz
dec
clc
adc
xchg
rolb
ja
pop
xchg
push
jb
cld
add
les
scas
shr
ret
imul
and
leave
add
xor
mov
movl
mov
pop
std
cmp
cmpsl
mov
outsl
lahf
xlat
shll
lods
dec
adc
cmpsl
mov
pop
sahf
pop
stc
mov
sub
push
jo
pop
mov
add
lds
and
and
stc
push
adc
shr
mov
loope
ret
add
push
fnstsw
scas
jno
and
scas
cs
call
pop
and
or
jge
mov
xchg
inc
orl
fimuls
popf
mov
in
mov
mov
dec
mov
std
test
je
push
add
add
jb
arpl
loope
ljmp
clc
test
pop
test
jg
loop
dec
mov
sahf
and
dec
movsb
ljmp
mov
gs
inc
jne
adc
cmp
add
mov
sbb
adc
xlat
push
jmp
cmp
xor
movsb
jbe
bound
sub
fisttpll
sbb
fadds
pusha
popa
jmp
inc
movsb
mov
pusha
test
idiv
out
cs
scas
mov
insb
push
xor
push
push
sbb
lcall
ds
orl
jbe
mov
xchg
jb
push
mov
shr
mov
lret
mov
pop
int3
jnp
fwait
arpl
movsl
add
jecxz
adc
jo
scas
fists
test
xchg
lock
inc
pop
pop
movsl
stos
xor
adc
insb
shrl
push
popa
xor
inc
push
pushf
imul
shlb
jns
lock
filds
add
adc
mov
andl
lcall
out
popf
xchg
push
lds
jo
xor
das
mov
dec
and
push
scas
ficoml
rorl
hlt
xor
adc
mov
jl
sbb
push
push
test
int3
out
es
addr16
xchg
adc
adc
mov
jp
sub
call
or
xchg
aad
mov
nop
sub
les
mov
addr16
dec
cmpsb
push
out
inc
daa
sar
adcl
jae
addb
and
and
add
push
pushf
hlt
inc
test
rep
mov
xchg
jp
inc
fs
repnz
popl
cmp
out
leave
add
adc
pop
xorb
cmp
jg
and
shrl
or
pop
jno
mov
repnz
aas
jno
sub
mov
add
adc
mov
lods
fdivrl
and
jecxz
mov
jle
or
sub
mov
dec
neg
cld
andb
ds
ret
jbe
stos
jae
cmp
xor
mov
dec
shlb
xor
xor
mull
testl
sub
cmc
test
and
arpl
sbb
iret
shrb
out
push
shrb
loopne
rcl
dec
mov
sbb
jo
stos
jne
pop
sub
outsb
dec
lock
jp
scas
arpl
sub
and
dec
orl
loope
scas
imul
into
dec
pop
scas
das
mov
and
int3
xor
jbe
cltd
daa
or
mov
lret
outsb
jl
dec
mov
xlat
in
stos
cmp
and
lock
test
dec
adc
jmp
call
mov
roll
jle
lods
sub
pop
and
fidivrl
sbb
insl
push
pop
pop
rcrl
fistpl
push
mov
inc
pop
sub
daa
and
jle
jbe
sub
dec
cmp
jo
xlat
repnz
leave
mov
jne
mov
mov
roll
daa
lret
movsb
cwtl
mov
mov
mov
subb
xlat
sub
enter
pushf
ficomps
add
rorl
gs
fwait
in
inc
jb
or
sbb
push
and
ljmp
cmp
and
stos
mov
cld
adc
xchg
or
out
and
or
xchg
or
push
outsl
out
nop
icebp
test
sub
push
mov
rolb
jnp
test
inc
lret
imul
clc
ds
jecxz
icebp
iret
sbb
dec
pop
push
and
subb
xor
pop
test
popa
into
inc
mov
or
or
sbb
inc
fs
pop
mov
cwtl
ss
sub
in
push
rclb
sbb
pop
jmp
mov
xchg
cmpsb
nop
cmp
sbb
iret
pop
ja
push
push
jp
mov
jge
mov
jp
lret
mov
cmpsl
out
mov
jge
rolb
cltd
std
push
iret
ljmp
push
xor
add
jb
shl
int
pusha
out
in
sbb
lret
sti
je
sub
aam
hlt
push
or
sub
mov
dec
xor
jp
xchg
inc
movsb
lock
dec
mov
xchg
sub
inc
fcmovbe
gs
pop
enter
add
test
sub
mov
mov
iret
adc
push
mov
into
mov
pop
or
ss
fnstenv
push
mov
cmpsl
sbb
subl
in
mov
aad
nop
cmp
arpl
sbb
aam
call
pushf
jnp
add
push
rclb
out
add
xchg
fisubs
mov
cltd
xorl
int
pop
pop
push
bound
aad
push
and
inc
pcmpgtd
push
sbb
andl
cmp
sub
cmpsl
ss
out
jns
fidivrl
sub
cld
pusha
mov
mov
or
loope
scas
mov
sbb
dec
into
ja
dec
call
and
lock
sub
add
sub
jns
scas
lret
push
push
inc
inc
fcmove
add
cltd
mov
decb
mov
loope
cltd
in
jno
dec
jge
mov
aaa
mov
pop
idivb
push
push
jnp
mov
cmp
push
mov
mov
pop
sahf
dec
jnp
cmp
addb
adc
sub
rcrb
mov
mov
leave
fimull
pop
push
push
fildl
mov
fucomi
mov
out
or
stc
sub
sbb
sbb
loop
jp
and
mov
or
test
lds
test
dec
sti
sub
mov
sbb
inc
mov
jnp
int
pop
jb
outsl
and
sub
adc
push
data16
xor
popa
pop
inc
mov
xor
cmpsb
movsl
jbe
pusha
mov
cwtl
dec
daa
aad
mov
pop
es
daa
in
ret
fwait
ret
and
shlb
mov
pusha
or
add
push
jecxz
cmc
push
test
stc
pop
mov
jae
ret
mov
jge
adc
cmp
aaa
rcrb
sbb
je
stc
sbb
icebp
mov
cmp
loop
add
scas
loope
jecxz
mov
dec
pop
clc
sbb
mov
fdivrs
xchg
jo
mov
sub
test
push
jl
imul
int
std
out
adc
push
or
xchg
sbb
push
es
ljmp
mov
pop
sar
xor
mov
mov
nop
sti
imul
aaa
mov
jnp
adc
jne
adc
clc
test
dec
inc
mov
xchg
js
gs
stc
or
mov
into
shl
push
push
loopne
adc
mov
xchg
or
fnsave
imul
daa
sahf
mov
mov
mov
addr16
fwait
pop
mov
aaa
cmp
jb
xor
lods
cli
loope
cmp
push
push
fisubl
mov
gs
inc
inc
xchg
imull
mov
and
push
in
sbb
mov
out
xor
dec
pop
dec
incb
push
test
jl
lds
adc
push
pop
adc
mov
jle
hlt
jp
insl
insb
shrb
scas
jmp
pop
push
movsb
inc
int3
cmp
xor
dec
dec
mov
push
lods
rol
jb
or
cli
sub
clc
or
scas
dec
scas
xchg
cmp
cmc
xchg
inc
rcrl
mov
test
adc
adc
jno
jp
daa
cs
pop
daa
inc
sub
sub
cmc
fildl
lea
repz
xchg
jle
xor
adc
sub
stc
xchg
push
mov
test
mov
xor
jg
cmp
sub
pop
outsb
repz
lea
out
fs
divb
pop
dec
mov
rclb
mov
xor
leave
adc
mov
or
addb
xor
mov
cld
lods
test
adcb
inc
and
mov
imul
mov
lods
xchg
xchg
or
sbb
mull
add
inc
in
rorb
adc
mov
xchg
lods
cld
jge
leave
xlat
shlb
fadds
in
fwait
pop
push
or
add
in
lahf
adc
push
rsm
or
test
clc
jecxz
int3
icebp
call
sub
cmp
mov
lret
icebp
or
add
arpl
iret
aad
int
sbb
fimuls
sahf
roll
mov
mov
loopne
ret
iret
push
jecxz
in
dec
mov
xor
lea
jp
fiadds
les
lcall
insb
adc
xchg
xor
repz
inc
mov
scas
sahf
shlb
xor
push
cs
mov
aam
rcrl
mov
mov
loop
jb
or
clc
mov
std
adc
xor
ret
les
test
scas
cmc
js
pop
sbb
out
nop
and
pop
dec
cmp
loop
rorl
adc
es
dec
sbb
fwait
out
out
rcl
test
clc
popa
mov
int3
jle
mov
push
ficompl
fists
pop
mov
mov
xchg
stos
mov
mov
xchg
stos
mov
mov
pop
cmp
xor
xchg
mov
test
dec
and
pop
inc
repnz
aas
fsubp
jae
aad
dec
rorb
inc
jnp
sub
mov
lcall
push
dec
call
pop
add
test
mov
pop
mov
jle
notl
and
jp
sub
enter
aaa
outsb
xchg
in
stos
sti
cs
cmpsb
pop
cmp
push
das
test
gs
inc
sub
fistl
cmpsl
push
push
mov
cmp
jl
jle
ss
cmp
push
js
sbb
fnstcw
sub
es
dec
inc
lods
dec
push
xor
mov
and
mov
sub
icebp
jle
mov
js
das
xchg
outsb
add
enter
cmpsl
fbstp
repz
std
sahf
fisttpll
movsl
das
outsl
je
lea
xchg
or
mov
jno
mov
sub
adc
sub
cmp
repnz
scas
filds
lea
push
mov
fimuls
jge
lods
mov
dec
movsl
jae
jl
ret
sbb
fsubs
es
jge
push
adc
adc
pop
add
nop
mov
sarb
into
insl
fwait
jg
pop
jo
xchg
scas
fisttpl
push
inc
imul
add
push
repz
movsb
xor
adc
fimull
test
clc
stc
sbb
in
lret
mov
jmp
dec
mov
je
cmpsb
jne
rorl
clc
xchg
xchg
ds
js
sub
mov
add
xorl
in
sahf
arpl
mov
xchg
push
addl
cmp
pop
sarb
xchg
pop
pushl
xor
and
and
xorl
and
lods
inc
push
dec
movsl
sbb
inc
and
inc
adc
aaa
and
movd
cld
mov
pop
dec
inc
xchg
xchg
ficompl
sahf
scas
les
decb
cmp
lods
in
push
or
icebp
mov
sar
lret
mov
and
mov
lea
adc
leave
mov
sti
ds
jo
and
mov
hlt
cmp
pop
clc
xchg
or
cs
movsb
aam
orb
and
jp
fisttps
inc
sub
sbb
data16
or
pop
inc
or
sub
aam
jns
inc
je
add
in
iret
jge
mov
or
icebp
cmova
push
lcall
cli
mov
cmp
jp
mov
adc
test
movsl
cmp
ljmp
mov
fdivl
or
xor
mov
cmp
lahf
aad
fnstsw
ljmp
lock
mov
or
in
dec
in
fnstsw
bound
cli
gs
scas
cmp
lahf
inc
dec
cmp
rorl
dec
cmp
pop
lret
jecxz
push
mov
adc
insb
and
cmp
mov
and
add
sbbl
cmpsl
stos
int
ds
pop
jno
sub
das
ret
cmc
dec
pop
into
test
mov
xchg
sti
test
clc
sub
loopne
inc
fldt
sbb
inc
mov
adc
push
jmp
dec
cli
jns
movsb
insb
das
sbb
jmp
xchg
fmull
mov
insl
mov
sti
sub
hlt
push
aaa
outsb
jo
add
jp
je
push
aam
xlat
loop
jge
out
cmp
sahf
jno
xor
in
out
daa
adc
mov
or
add
lods
jle
jno
enter
pop
js
notb
fsubp
mov
mov
iret
stos
popf
pop
cli
into
lea
add
or
mov
pusha
popa
fsubr
repz
ret
pop
mov
sbb
push
sbb
jnp
jne
cmp
xor
mov
mov
loopne
xchg
and
xorl
cld
sub
cs
sbb
ljmp
cwtl
dec
into
adc
pusha
das
xchg
dec
outsl
aam
mov
cmp
aad
pusha
sub
pushf
jle
das
in
and
jb
bnd
ficoml
sub
mov
ja
test
jmp
mov
add
sti
cmpsb
mov
divb
inc
jge
adc
repz
lods
jo
scas
outsl
lods
push
xor
push
scas
outsl
jecxz
inc
cmp
inc
testl
popf
mov
scas
adc
dec
adc
std
in
mov
sub
fisubrs
popa
es
mov
call
jecxz
sbb
mov
dec
ficomps
rorl
insb
pop
rclb
arpl
stos
repz
in
lea
loop
dec
cmp
daa
xor
and
sahf
mov
imul
push
clc
jbe
in
push
ficompl
inc
aam
and
test
enter
in
in
xchg
loope
lret
cmp
das
in
fs
lahf
xchg
out
jbe
mov
mov
sti
shrb
fisubs
xchg
push
stc
adc
lret
xor
sbb
clc
nop
mov
xchg
clc
or
inc
xlat
enter
jecxz
ret
xchg
aad
rcrb
notl
pop
jmp
addr16
sub
inc
daa
in
in
jle
mov
mov
and
rorl
in
jbe
out
cwtl
pop
arpl
test
test
pop
out
mov
into
int
sbb
iret
outsb
add
lods
sbb
push
xchg
jp
cmpsb
daa
jg
out
mov
inc
push
push
cmp
and
cmpsl
cmp
pop
les
xchg
cmpsl
push
cs
adc
sub
out
repnz
pop
test
push
popa
bound
outsb
imul
inc
test
sub
pop
imul
and
loope
inc
inc
and
xor
push
adc
add
lods
rcrb
mov
mov
add
mov
fs
inc
lds
mov
sti
dec
pop
fisubs
dec
adc
rcll
mov
addr16
imul
popa
dec
cli
adc
mov
jecxz
or
popa
xchg
add
or
push
mov
xor
popf
stos
xor
adc
add
inc
mov
call
mov
push
sbb
adc
arpl
out
out
add
in
aas
and
xchg
movsl
fwait
stos
sub
sbb
add
push
popf
lret
arpl
or
mov
lcall
pushl
ficomps
aaa
jecxz
and
stos
insb
sub
pop
pop
add
scas
mov
adc
je
fcomps
push
dec
test
mov
push
bound
addr16
rorl
idiv
and
inc
daa
movsl
mov
lahf
fs
out
stos
mov
or
fimuls
cld
ss
daa
hlt
fistpl
cwtl
addr16
mov
iret
iret
mov
sub
mov
imul
push
mov
push
sub
sbb
cmp
popf
add
inc
stos
stos
ss
test
xchg
pop
add
sub
in
push
pop
inc
xor
lock
push
into
movb
mov
jle
xor
in
test
pmullw
int
jae
xor
mov
push
xchg
or
insb
xlat
loope
dec
ret
add
sub
jl
lret
lret
dec
pop
fiadds
push
cmpsb
add
das
pop
lcall
inc
into
dec
cld
nop
push
fcoms
sbb
cmpsl
les
dec
lock
jg
test
cmpsb
sub
xor
movsb
arpl
xchg
cmpsl
push
inc
insb
xor
into
out
pop
in
add
rcrb
mov
and
repnz
pop
xor
daa
and
add
sti
push
jne
push
stos
mov
stos
rclb
les
inc
push
fptan
movsb
xchg
mov
mov
test
mov
xor
test
inc
pop
adcb
push
push
ljmp
push
jbe
adc
out
push
leave
cltd
jae
cli
ret
sbb
dec
mov
mov
jg
scas
or
dec
enter
movsl
iret
or
mov
mov
leave
adc
lret
mov
mov
in
sbb
cmp
scas
arpl
inc
mov
mov
jb
mov
jno
push
jb
xchg
rcrb
popf
cmp
inc
cld
xor
pop
pop
push
leave
inc
outsl
int3
in
push
movl
insl
lcall
adc
jne
repnz
out
mov
pop
dec
sbb
jle
adc
add
popf
add
adc
mov
pop
outsb
dec
add
xor
movsb
aas
jne
pop
out
test
leave
xor
mov
jae
lahf
fsubs
add
mov
notl
sbb
aam
nop
pop
cmp
mov
ljmp
pop
push
sahf
jecxz
mov
or
add
pop
pop
je
sub
jb
aad
leave
jl
dec
dec
or
add
mov
xor
jns
add
stos
mov
popf
dec
and
xlat
cmpsb
lret
xchg
into
pop
xor
in
paddb
loopne
int3
rol
pop
mov
test
push
adc
ds
int3
das
sub
sbb
jne
xchg
imul
ljmp
push
les
adc
fcoml
adc
dec
ficompl
int3
add
mov
pop
cld
push
mov
sti
dec
jo
in
cli
ja
dec
hlt
push
jl
pushf
and
dec
sub
push
out
rcll
pop
orb
jae
mov
iret
mov
repz
ret
stos
std
loop
adc
shlb
and
and
shr
or
rorb
pop
mov
stc
add
sbb
cmp
pop
push
jmp
push
call
mov
jge
into
imulb
pushl
out
in
cltd
dec
mov
jp
cmc
cwtl
mov
cld
fisttpll
and
push
imul
mov
push
js
inc
aam
push
inc
pop
ret
cltd
mov
test
mov
movsl
mov
push
loop
mov
jo
es
xor
pop
xchg
insb
daa
int
lea
push
mov
sub
dec
and
addr16
adc
jo
jg
aad
cmp
imul
mov
dec
add
or
jmp
dec
dec
inc
or
pop
fwait
mov
movsb
test
outsb
xchg
fwait
fwait
test
mov
pop
jmp
ljmp
cwtl
repz
jp
mov
mov
xchg
mov
and
mov
cmpsb
push
lcall
loope
test
and
xchg
in
lds
les
sub
mov
loop
sbb
loope
xchg
adc
jnp
das
cmp
pop
lods
popf
test
jns
mov
jl
mov
and
pop
shlb
sub
mov
lahf
pop
ljmp
idivl
pop
jmp
pop
add
cmp
push
pusha
push
mov
adc
subl
rorl
call
pop
cmpsl
ljmp
shl
loopne
sahf
sti
bound
fstpt
push
shrl
dec
xlat
lret
cmp
or
out
inc
sti
mov
add
stos
fdivrs
jp
cmpsl
movsb
shl
mov
sar
add
push
jp
in
pop
aam
fwait
lret
cmpsb
push
mov
xchg
cmp
lock
dec
inc
mov
mov
test
mov
ret
vmread
movsb
push
icebp
aas
outsb
add
jmp
mov
mov
ss
aad
adc
aaa
inc
cmp
ja
add
arpl
int
or
cmp
sar
insb
mov
leave
lcall
inc
leave
mov
xor
sbb
xor
dec
dec
idivb
ret
mov
jl
dec
leave
xchg
stos
add
addb
lea
and
jle
xor
xchg
push
push
mov
mov
cmp
cmp
in
xor
or
jg
and
cli
pop
push
negb
ficoml
aam
rcrl
call
xor
sbb
or
int
stos
inc
push
push
cwtl
test
outsb
inc
mov
xchg
int3
movl
mov
add
xor
dec
ret
std
mov
cmp
jbe
xlat
jmp
push
sbb
rolb
mov
inc
rcr
sbb
mov
sub
out
sahf
clc
lret
push
insb
stc
inc
int3
sbb
push
dec
dec
mov
test
sub
add
leave
add
outsb
xchg
push
in
les
xor
test
jg
push
lds
mov
lea
mov
outsl
pushf
adc
or
inc
leave
in
out
mov
xor
lock
mov
jl
js
mov
ljmp
push
nop
inc
inc
push
testl
jp
movsb
or
xchg
xor
jne
pop
or
bound
mov
or
add
and
cmp
maxps
jle
pop
push
mov
xchg
aad
stos
cmp
mov
loopne
bound
add
shl
imul
xor
std
fnstcw
insl
pop
push
adcl
and
hlt
sub
mov
shll
push
pop
jge
sbb
int
inc
inc
pop
sbb
jae
test
push
add
inc
pushf
pop
aas
push
lds
and
cmp
pop
lock
jp
pop
fsubs
sbb
xchg
fdivrp
repnz
aam
inc
scas
adcb
mov
add
fsts
sahf
fdivrs
pop
cmp
cmp
xchg
loope
push
fdivr
shll
and
sub
out
mov
nop
mov
sti
fiadds
mov
loopne
cmp
sbb
sbb
add
cmpsl
xchg
inc
pop
popa
inc
push
fistps
jmp
imul
jg
push
mov
cmp
popa
das
cmp
call
push
loop
loop
repz
fs
scas
out
shlb
pop
inc
lods
push
jae
mov
sarl
jae
mov
mov
sbb
xchg
mov
out
outsb
addb
push
push
jns
push
sub
mov
imul
pop
stos
xchg
or
sbb
adc
jbe
adcl
xor
xor
jnp
fistps
mov
and
or
insl
jbe
rcr
sub
lock
mov
or
je
das
and
lods
lods
mov
sub
ret
mov
dec
xacquire
dec
lds
pushf
cmpsl
nop
add
pop
dec
jb
mov
es
cwtl
push
fmull
adc
cmp
sub
sub
xor
xchg
mov
push
repnz
jno
dec
rorl
movb
inc
lds
or
loopne
sarb
mov
inc
and
adcl
jle
in
add
inc
push
ljmp
add
xchg
pop
sbb
mov
add
mov
cmp
fldl
paddusb
out
jge
push
push
imul
aaa
cld
dec
inc
jp
scas
jmp
daa
and
int
call
cwtl
cmpsb
cli
popa
mov
vpmovsqd
xor
movsb
sub
pop
sub
cwtl
adc
pop
addb
lret
jne
inc
jp
cwtl
inc
cltd
std
daa
xor
fmull
xor
aam
jmp
push
adc
shlb
mov
repnz
clc
test
cmpsb
shlb
stc
enter
push
stc
inc
jmp
mov
outsb
mov
aas
insl
dec
leave
cmp
fildll
jge
xor
stc
add
movsl
std
lods
pop
xchg
add
rcrl
xor
push
cmpsb
add
loop
mov
dec
in
push
movsb
push
sahf
inc
mov
push
pop
push
push
xlat
lods
adc
or
xchg
sbb
jae
rorb
arpl
int
mov
movsl
xchg
sub
xor
mov
xchg
fildl
cmp
ds
iret
pop
into
inc
insl
mov
out
insb
lock
push
push
xchg
cld
dec
lods
out
les
popf
pop
sti
aas
adc
jno
cmpsl
das
cmp
cld
arpl
int
jne
fmull
mov
fwait
mov
sahf
ror
aam
add
mov
pop
jae
and
scas
jg
fadds
mov
leave
test
push
xor
push
and
jae
out
je
in
shrl
push
add
dec
sbb
insl
mov
dec
push
pop
insl
mov
push
mov
movsl
push
aad
jb
repnz
inc
mov
cmp
add
fwait
adc
out
popf
stos
test
inc
leave
mov
push
sub
mov
xor
jmp
xchg
pop
in
rorb
imul
add
inc
pop
popf
orl
push
lret
in
add
sahf
xor
mov
and
call
inc
mov
cmc
mov
push
add
push
in
push
adcl
adc
pop
rclb
lods
fsubp
clc
push
or
and
inc
add
out
mov
or
jns
ret
adc
and
push
inc
adc
push
cmp
leave
and
mov
iret
push
mov
push
mov
inc
mov
in
scas
jp
sub
pop
mov
ljmp
xor
call
adc
add
mov
jmp
fldenv
xorb
push
ss
sbbl
jnp,pt
or
mov
mov
les
mov
xlat
rorl
lock
push
cmp
push
nop
mov
mov
gs
pop
mov
shl
sbb
and
lock
xor
pop
out
testl
das
xchg
lahf
or
xor
and
ds
cmp
out
rcll
imul
sbb
adc
mov
jnp
mov
mov
inc
push
in
pop
xor
ljmp
movsl
divl
jmp
sub
daa
sbb
popa
repnz
lea
lret
cmc
sub
aaa
ljmp
aad
pop
xchg
and
pop
hlt
push
insb
fldl
jge
mov
hlt
or
cmpsb
setbe
imul
cmpsb
daa
and
popa
and
fmull
add
xor
jne
divl
shll
dec
daa
aas
stos
xchg
cmpsb
adc
out
inc
int
xchg
jbe
jge
or
mov
repnz
sbb
push
cmpsb
hlt
mov
aaa
filds
inc
sbb
lret
pop
ljmp
outsl
pop
jns
outsb
jbe
or
pop
and
add
iret
ret
mov
lret
xor
xor
jecxz
xchg
rcrl
jp
and
jge
jbe
lcall
xor
xchg
sbbb
pop
jb
ja
dec
int3
arpl
loope
jg
imul
jae,pn
arpl
or
push
les
mov
into
mov
std
mov
xlat
test
out
mov
push
movsb
xorb
dec
mov
dec
test
ljmp
xchg
or
int
dec
jg
es
movsb
adc
les
or
sbb
cmp
sbb
sbb
adc
sub
pop
pop
mov
cli
mov
pop
pop
or
sbb
into
mov
les
cmpb
jecxz
push
xor
xchg
insl
stc
sti
rolb
cs
addr16
repz
push
mov
sub
sti
imul
mov
dec
test
cmpsl
push
or
sti
mov
adc
out
mov
test
inc
push
imul
out
push
or
mov
pop
stc
je
jmp
hlt
or
sbb
xchg
popf
pop
ret
push
mov
pusha
xchg
and
dec
fidivrs
hlt
sub
mov
bound
int
test
insb
xor
or
int
out
fsts
mov
in
push
dec
push
pop
or
fwait
xchg
xlat
aas
xchg
mov
pop
subl
push
adcb
arpl
mov
add
cld
xchg
int
sbb
or
xor
push
mov
fsubl
fldl
dec
mov
mov
mov
out
addps
das
and
cmp
xchg
mov
outsl
frstor
jnp
cmp
pop
jl
int3
or
fldcw
cmpb
dec
adc
mov
in
shlb
jl
mov
lret
out
jo
or
sahf
xchg
fnop
inc
inc
imul
pop
aam
xchg
mov
or
aas
add
shrl
inc
shlb
cmpl
mov
pop
mov
or
dec
xor
xchg
mov
jno
addr16
push
ja
mov
mov
mov
pusha
stos
dec
sbb
push
jmp
stos
ret
repz
addr16
shll
popa
popa
lds
xchg
jbe
lds
rolb
xor
fildll
sub
jle
pop
in
stc
sbb
mov
xchg
mov
jns
bound
mov
mov
pop
xchg
inc
hlt
std
xchg
lods
fimuls
xchg
in
imul
lods
pop
mov
mov
dec
or
add
pop
add
pop
jb
lods
push
adc
into
xchg
subb
pop
loop
mov
out
insl
mov
mov
mull
mov
xor
adc
xor
and
mov
scas
mov
insl
das
lret
movsl
test
rorb
and
cmp
mov
sbb
sarb
push
insl
xor
into
cmpsb
xchg
jmp
jae
sbb
out
scas
and
cmc
in
movsl
cwtl
dec
cmc
pop
xchg
in
mov
xlat
test
lcall
inc
loope
sub
sahf
into
fstl
mov
ss
das
dec
leave
lods
xchg
mov
or
xchg
cmpsb
int
xchg
stos
insl
push
sub
mov
scas
add
dec
mov
adc
jle
outsb
mov
repnz
or
sub
js
sti
sbb
test
sahf
pop
or
out
xor
lock
enter
int
xchg
gs
jae
imul
pop
pop
fmuls
arpl
dec
mov
cs
iret
dec
ss
lds
lea
sub
cmp
aaa
xor
add
pop
jmp
and
jle
inc
loop
leave
mov
dec
test
out
push
out
shlb
cmp
mov
outsl
fcmovb
aam
adc
rcll
fs
popa
je
cwtl
cwtl
mov
dec
aaa
mov
sbb
cltd
arpl
cli
sub
xchg
std
xchg
mov
push
repz
push
push
xchg
xchg
vpmaxsw
jb
repz
fisubl
and
push
xchg
sbb
mov
iret
sbbb
inc
mov
dec
cmp
fiaddl
pop
out
insl
mov
mov
push
pop
stc
icebp
and
sub
add
xor
pop
aam
xchg
pusha
hlt
push
or
adc
cmp
fwait
in
push
xlat
jo
test
sub
mov
daa
mov
sahf
aaa
inc
pop
daa
test
stos
xchg
aam
aas
pop
pushf
jmp
add
inc
jns
bound
sub
jns
push
push
lods
mov
lret
pop
ret
out
pop
fld
icebp
pop
aaa
int
dec
call
or
dec
insl
iret
les
mov
add
jne
xor
mov
rolb
mov
lret
clc
jne
pop
insb
insb
sub
mov
pushf
cmp
and
lret
rcll
xor
jle
fstps
sub
outsb
pop
sbb
add
lcall
add
aam
push
push
xchg
mov
mov
in
shlb
fs
dec
pop
mov
adc
repnz
xchg
pop
std
lahf
pusha
cmpsl
push
les
pop
repz
cmp
cmp
xchg
adc
mov
into
scas
dec
inc
rcll
dec
mov
test
jne
popl
xchg
dec
inc
fs
cmp
and
sbb
repnz
xor
ret
inc
aam
mov
imull
sub
inc
scas
sbb
pushf
adc
dec
mov
xchg
or
mov
push
dec
cmp
sbb
sbb
bound
nop
repnz
mov
gs
sub
jecxz
cmp
mov
out
pmaddwd
and
pop
mov
jnp
insb
int
lret
mov
scas
and
or
scas
adc
mov
test
add
cmp
dec
mov
push
popf
daa
insl
lahf
cmp
movsb
xor
push
ret
out
test
cmp
jns,pt
jmp
pusha
mov
cmp
push
cs
add
pusha
addr16
and
xor
or
cmp
pop
sub
add
inc
gs
call
scas
cmp
fisttpl
jge
xchg
pusha
scas
icebp
in
pop
and
sub
shrb
sbb
daa
fdecstp
sub
icebp
inc
push
dec
inc
addr16
mov
dec
sub
xchg
aam
jge
adc
jg
stos
out
out
adc
add
pusha
js
ds
inc
xchg
enter
or
aam
cmp
jmp
inc
pop
dec
push
test
sbb
fisttpll
xchg
test
mov
imul
stc
lods
movsb
stos
in
dec
outsb
inc
ja
scas
jns
jp
mov
push
lahf
sub
pop
insl
fsts
in
and
arpl
or
jns
pop
adc
mov
push
ss
xchg
or
mov
in
jmp
lret
sbb
sub
aam
cmp
cmp
pushf
notb
lcall
or
sub
stos
mov
pusha
rcrl
xchg
fisubs
rclb
fmull
and
fdivrl
lods
cld
in
insl
call
pop
mov
lock
pop
sub
scas
mov
in
sub
iret
jns
jp
xchg
fs
sub
and
jge
push
sbb
mov
sbb
int3
out
add
daa
imul
sub
call
jnp
ja
dec
inc
dec
cmp
aad
push
fs
cmpsl
shlb
jg
fdivrs
xchg
add
sbbb
clc
test
push
ljmp
adc
mov
divb
cmpb
xor
inc
or
jp
mov
pushf
testl
call
outsl
movb
std
or
in
stos
ja
loop
jne
jmp
mov
ret
and
les
das
jge
dec
cwtl
xor
push
mov
arpl
jp
xchg
jl
add
xchg
xor
pop
xchg
dec
xchg
inc
push
mov
add
cmp
and
fsubrs
xor
mov
loope,pt
mov
outsl
sti
fnstsw
adc
call
pusha
add
jno
lahf
jle
popf
mov
inc
clc
imul
repnz
cmp
popf
rorl
xor
ds
pop
mov
pop
stos
mov
cmp
cmp
add
out
mov
pop
int3
popa
imul
or
imul
cld
sbb
mov
or
xchg
clc
popf
clc
int
and
shlb
enter
xchg
lea
jno
xor
jge
scas
inc
inc
jbe
sub
ja
test
xor
adc
enter
pusha
jns
xchg
and
lock
sub
lods
arpl
or
pusha
test
mov
adc
pop
cmp
cmp
mov
xor
aad
inc
xor
call
iret
jb
aaa
cmpsb
adc
mov
dec
push
xor
incl
fstpt
imull
sahf
add
in
or
cmc
push
loopne
push
lret
lds
mov
jo
movsb
and
shrb
xor
mov
dec
fs
icebp
fildl
cbtw
sahf
outsb
mov
xlat
xchg
mov
lods
negl
mov
sbb
loope
sbb
mov
push
or
pop
arpl
in
xchg
dec
and
popf
push
xor
jne
out
stos
test
cmp
int3
ret
stc
lods
inc
jl
xchg
clc
mov
imul
xor
pop
jb
dec
cmp
add
cs
add
fsts
mov
dec
sarl
push
mov
enter
add
push
cmp
fs
push
cmp
add
and
mov
jno
jbe
repnz
test
arpl
xchg
pop
mov
pop
mov
mov
gs
pop
out
js
mov
inc
inc
xchg
dec
pusha
push
in
mov
lds
addl
int3
cli
jbe
add
stos
leave
movb
jnp
xchg
movl
xchg
jbe
aad
es
push
lea
push
ror
dec
test
inc
adc
leave
in
push
dec
jle
mov
in
cmp
adc
xchg
fs
orb
pop
mov
jmp
or
xchg
call
hlt
add
ljmp
daa
fstpl
jns
cmpsl
pop
push
inc
mov
and
add
dec
popf
fcmovnbe
or
pop
bnd
sarl
fsubrs
pushf
leave
cld
js
add
cmp
xlat
outsb
stos
icebp
sub
fidivl
jmp
fcoms
sti
negl
rol
jge
adc
adc
pop
dec
add
xchg
stos
sbb
outsb
jns
and
es
mov
cmp
jle
jbe
test
jg
pop
int
fistl
mov
sbb
mov
loop
ret
out
out
xchg
mov
sbb
mov
gs
sbb
sub
cmc
xor
xchg
jne
sarb
lahf
pop
sub
sub
jbe
clc
xchg
add
add
cmpsl
popf
daa
pop
sarb
or
jle
fsubp
ror
nop
pop
lods
lret
jge
or
cmpb
loopne
fisttpl
mov
imul
aaa
mov
stc
rolb
mov
pop
xchg
test
outsl
push
or
stos
subl
or
fwait
ja
and
es
sub
mull
lock
and
push
push
sub
jl
int
or
movsb
xchg
or
shrb
je
mov
aam
scas
xor
sti
push
or
or
xchg
pop
cmc
xchg
inc
addr16
les
ja
pop
mov
mov
pop
pop
push
adc
pushf
and
idivl
sbb
fwait
mov
or
icebp
push
mov
xor
sbb
daa
pop
loope
cwtl
pop
mov
scas
cmp
cmp
popf
mov
test
in
mov
sub
stos
dec
inc
repz
push
lcall
test
sbb
lds
rclb
xchg
cmpsl
mov
mov
out
sub
bound
push
ss
mov
dec
adcb
dec
shl
sub
mov
loope
cs
scas
stos
dec
sbb
fadds
mov
add
pop
ret
add
in
cmp
cmp
scas
cmp
push
notl
or
lods
or
jge
sub
loop
in
push
sbb
cwtl
dec
shrw
fmuls
add
mov
mov
cmc
jg
enter
mov
fwait
mov
mov
sti
es
push
sbbl
movsb
cli
push
xlat
mov
mov
rolb
notb
mov
outsb
ret
daa
adc
xor
dec
aas
lods
inc
sub
pop
mov
cs
data16
ficompl
mov
pop
inc
inc
add
xor
or
fldcw
mov
inc
popl
cli
push
arpl
and
inc
xchg
lret
in
fyl2xp1
jo
xchg
xchg
mov
xchg
inc
or
jne
test
mov
mov
cmpsl
into
push
adc
shr
mov
jmp
xor
mov
push
add
or
enter
out
data16
mov
shrd
clc
mov
iret
mov
pop
lock
enter
sbb
test
addb
call
paddw
sar
pop
dec
and
imul
xchg
fmuls
and
adc
mov
lea
mov
call
xlat
mov
sbb
popf
lcall
xlat
mov
adc
idiv
jbe
jge
jle
mov
out
xlat
adc
push
stos
or
sub
xlat
mov
das
ljmp
mov
push
les
in
push
sbb
dec
subb
sub
mov
inc
rolb
loop
mov
in
hlt
es
inc
lods
mov
rcll
add
push
xor
cmp
cs
addr16
and
push
or
push
addr16
cs
and
mov
cmp
iret
and
scas
mov
and
popa
inc
cmp
rcrb
and
fidivrs
jecxz
out
stos
je
lret
rcrb
pop
cld
xchg
add
cmp
pop
ret
mov
mov
or
ljmp
xor
nop
ret
pushf
jnp
shrb
xor
outsb
leave
inc
jb
fmuls
push
xchg
jb
or
mov
nop
stos
cmp
adc
jne
dec
out
push
adc
lods
mov
inc
mov
insl
ret
xor
xchg
jne
lods
daa
adc
ja
xor
dec
add
out
jge
push
adc
faddp
jp
and
and
mov
mov
cmp
roll
xchg
movsl
dec
xor
jl
aad
or
xor
lea
out
pop
fstps
pop
repnz
aam
jmp
gs
inc
jl
sbb
outsb
fsubl
addb
fistps
dec
xchg
xlat
imul
jno
cwtl
test
and
int
xor
out
andb
cmpsl
in
cmp
fwait
pop
dec
xchg
sub
jns
jmp
int3
push
dec
int3
jge
or
or
inc
test
dec
icebp
in
cwtl
cmpsb
mov
iretw
inc
loopne
aam
cmp
xchg
insb
sbb
cwtl
or
das
rcll
pop
out
xchg
pop
push
mov
fildl
and
cwtl
cmp
pop
gs
fistpl
aas
test
push
xor
sti
sti
enter
hlt
push
pushf
nop
stos
or
fisubl
push
cwtl
mov
push
sub
push
and
push
dec
xchg
xor
sbb
in
into
pop
cwtl
sbb
shrl
movsb
arpl
movsb
rolb
orl
inc
mov
sbb
pusha
sub
sbb
jmp
pop
in
cld
int
iret
adc
sbb
repz
mov
sahf
cwtl
xor
sub
add
push
xchg
or
xor
dec
xor
adc
iret
lds
fs
aam
scas
icebp
cwtl
push
add
das
sarl
cmc
cmpsl
mov
bnd
loope
xchg
push
jmp
out
cmc
pop
xchg
outsb
push
mov
push
lea
daa
push
xor
jbe
test
pop
cmp
rclb
pop
xor
lods
jne
pusha
rdpmc
das
jne
dec
pop
fsubs
lcall
cmp
repnz
inc
and
mov
lods
int
xchg
ljmp
pop
mov
shlb
inc
lods
pop
xchg
sub
jg
jbe
popf
adc
mov
push
sub
dec
pop
or
mov
push
or
lea
sub
push
lahf
repz
inc
or
cld
adc
adc
leave
pop
movsl
add
sbb
es
les
adc
rcl
sub
stc
cwtl
gs
out
shl
mov
or
inc
sbb
adc
ret
iret
test
xchg
jge
jae
jle
insb
sub
dec
sbb
push
imul
out
test
push
call
and
int
fsubl
pusha
sbb
push
sete
adc
xor
push
cmp
inc
adc
jp
pushf
addr16
popl
out
sub
or
pop
gs
mov
add
imul
enter
inc
mov
sub
push
inc
cmpsb
or
pop
dec
jns
jmp
loopne
imul
test
sub
outsl
repnz
pop
test
inc
xchg
imul
cmp
push
inc
xor
mov
sbb
pop
and
sbb
jno
ss
loope
loop
add
ret
lcall
in
pop
mov
xchg
pop
inc
int
sub
or
sub
lret
stc
pop
pop
scas
pop
jl
xor
lahf
dec
ret
mov
adc
add
xchg
adc
stos
lock
cmp
icebp
or
mov
in
and
ljmp
test
push
pop
pop
sub
inc
fmuls
xor
rorb
dec
cmpsb
xor
data16
outsb
lds
or
jmp
out
adc
loop
in
xchg
repnz
jecxz
add
xor
lods
fwait
mov
test
addr16
add
insb
gs
cmpsl
in
mov
jg
test
popf
gs
mov
test
jno
mov
cmp
ss
call
sar
insb
xchg
movsl
sarl
jmp
sahf
shl
pop
xor
push
sub
cmp
jl
adc
inc
pushf
in
addr16
adc
sub
pop
call
lods
jbe
pusha
incl
shll
ss
out
test
shll
sub
popf
repz
shll
jl
out
es
mov
xor
cmc
ljmp
nop
es
leave
adc
mov
cmc
lods
data16
adc
test
cmp
xchg
sbb
jno
and
adc
sarb
and
andb
mov
sti
cwtl
xor
inc
fnstcw
adc
rclb
and
jb
dec
dec
xchg
push
sbb
mov
inc
mov
mov
push
xchg
inc
aad
xchg
in
dec
in
push
out
mov
lods
pop
jne
xlat
cwtl
dec
lret
mov
test
and
test
push
stc
pushf
push
js
xor
mov
adc
je
icebp
inc
daa
push
mov
mov
push
mov
push
push
push
mov
dec
inc
sub
pop
stc
dec
dec
cmp
fucomip
jb
ret
jb
cmpsl
mov
stos
call
mov
insb
jg
lcall
jl
mov
cmp
or
mov
sbb
movsb
xor
aaa
lds
xchg
push
cmp
outsb
ss
and
ret
fucomip
mov
ret
and
add
stos
outsb
and
insb
outsb
xchg
and
aam
sub
xor
stc
and
dec
jmp
or
lods
out
jmp
insl
cld
js
repz
inc
xchg
subps
jne
test
lret
fnstenv
jne
pop
push
xchg
aaa
push
stos
mov
loope
inc
jle
int3
sahf
mov
add
push
fisubl
jecxz
push
mov
std
mov
sbb
xor
mov
rcrb
std
cmp
adc
sbb
mov
mov
aad
dec
dec
ficoml
shrb
mov
cs
arpl
shl
add
inc
adc
sub
sub
test
repnz
mov
jp
sbbl
mov
loope
xor
rcrb
sub
cmp
mov
push
lds
push
sbb
jo
mov
stos
ret
xlat
sub
stos
jbe
out
or
pop
cmp
test
int3
lret
mov
push
outsl
loope
clc
lcall
insl
add
sbb
jmp
jle
dec
lret
cmp
int
add
mov
cld
xor
mov
mov
dec
divl
adc
jno
pop
ljmp
ds
push
push
enter
stc
fnsave
or
push
cmp
sub
inc
test
pop
inc
jno
aaa
or
cld
add
push
lock
and
mov
xchg
xor
lahf
mov
fwait
adc
push
cmpsb
cli
sbb
mov
std
add
cli
in
stc
pushf
cmp
push
aas
xchg
xchg
por
iret
inc
cltd
jmp
cltd
addb
push
pop
sbb
xchg
inc
out
or
jecxz
lahf
lds
outsl
pop
jg
insb
mov
in
xchg
mov
outsb
subb
add
adc
xchg
clc
lods
mov
sbbb
cmp
lcall
fucomi
testl
fbld
inc
adc
lds
jo
pop
aas
add
fimull
sarl
mov
push
jecxz
arpl
or
hlt
sub
cwtl
aaa
clc
dec
dec
clc
jnp
inc
inc
arpl
inc
int
inc
add
outsl
jp
jle
bound
or
ds
les
fcoms
into
or
dec
icebp
gs
sub
dec
or
fcomps
push
mov
addr16
outsl
fwait
aad
lcall
and
xchg
clc
inc
jge
out
cs
sub
lea
mov
mov
inc
mov
inc
mov
fs
les
push
movsl
jne
fistpl
mov
mov
out
jno
pop
add
mov
arpl
adc
xor
repnz
shl
push
sbb
std
dec
add
les
xchg
mov
dec
ficoml
cmc
push
mov
call
mov
fcoml
sbb
pop
shrl
jb
adc
xor
js
and
movsl
scas
dec
and
dec
lret
mov
push
sbb
repz
rcl
pop
jnp
inc
out
jnp
ret
sub
mov
xchg
xor
arpl
leave
out
pushf
popl
daa
mov
hlt
adc
xchg
cltd
ss
cmp
imul
lahf
test
sarb
repnz
xor
out
xchg
or
faddl
shlb
and
cmp
push
dec
cmp
rcrl
in
jmp
sbb
sahf
pop
jb
clc
mov
data16
inc
aaa
cmp
test
jmp
cmp
pop
sub
push
lcall
cs
jp
cmpl
pop
cmp
into
andb
cwtl
sahf
fisttps
jl
stos
dec
dec
sbb
and
push
fnsave
into
into
sub
xor
dec
mov
xchg
outsb
lcall
mov
call
ss
sbb
ficompl
mov
inc
pcmpeqb
in
rorb
lahf
test
loope
lcall
insl
jb
inc
or
fidivrl
pop
mov
or
xchg
cmp
mov
negb
fwait
sbb
adc
add
fwait
inc
add
test
cs
scas
xchg
inc
addr16
je
sub
xor
pusha
add
popf
dec
sbb
fisubl
inc
dec
imul
lods
and
mov
push
mov
jbe
mov
jmp
inc
pop
push
and
sbbb
ds
or
out
sub
xchg
mov
test
andl
jp
jl
cmp
xchg
addr16
icebp
insb
das
ret
sbb
jnp
nop
adc
add
fbstp
loopne
fiaddl
sub
and
mul
pushl
sub
cmc
fidivrs
xchg
jae
ds
sub
stc
lcall
shl
movsl
stc
xchg
popf
push
ljmp
testl
push
call
ffree
jle
loop
int3
xchg
pop
mov
sbb
test
leave
adc
pop
imulb
lret
fwait
scas
xor
leave
pop
movsl
xlat
out
insl
in
mov
cmc
stc
sbbb
xchg
mov
fwait
clc
adc
or
enter
mov
aad
sbb
mov
fcompl
xor
xchg
loop
mov
sub
mov
pop
push
pop
imul
lock
out
mov
pop
iret
in
addr16
push
jae
mov
rorb
xor
jbe
fdivrs
pop
mov
in
js
aaa
pop
test
je
pop
shlb
ja
adc
mov
jae
xchg
push
cmp
sub
jno
fucom
sti
out
jnp
popa
iret
stos
mov
mov
xchg
inc
mov
cmp
push
popa
mov
mov
sbb
jae
ljmp
mov
adc
push
sarb
cmpsl
clc
lock
add
std
shrb
mov
jmp
xlat
or
idivl
push
test
push
jno
mov
mov
jb
dec
mov
jno
sub
pop
push
insw
xchg
in
test
add
jmp
dec
addr16
or
adc
loope
addl
cs
rorl
or
inc
aas
add
mov
je
ljmp
sub
je
roll
pop
into
lahf
push
icebp
pop
decb
cmp
mov
shll
arpl
jge
or
xor
and
mov
lcall
iret
push
mov
fisubrs
sub
stc
cli
pop
cli
mov
inc
mov
push
add
pop
xor
cmpsb
insb
mov
inc
and
mov
sahf
xchg
dec
aas
adc
mov
mov
enter
xchg
push
sarb
xchg
or
mov
adcl
jb
daa
sub
shll
cmc
sbb
mov
sub
shl
xlat
lods
add
pop
dec
cld
mov
ljmp
inc
mov
push
outsl
ror
sbb
loopne
adc
lods
cmp
cmp
ret
imul
lock
call
mov
lret
lcall
or
and
mov
popa
jnp
stos
or
inc
shrb
fsubr
out
call
in
arpl
or
mov
sub
mov
xchg
fadds
insb
and
dec
les
cwtl
pop
rcrb
pusha
pop
push
inc
rol
andl
pop
scas
leave
add
dec
insl
push
flds
push
decb
pop
rclb
dec
jnp
popf
jecxz
js
push
dec
mov
sub
out
jmp
loopne
or
addb
inc
xchg
imul
test
cmpsl
pop
jp
add
xchg
daa
cmpsl
xor
jecxz
sti
arpl
sbb
adc
add
mov
inc
xlat
jne
ret
push
ds
loop
cmpsb
faddl
icebp
cmpsl
jb
xlat
xchg
in
sub
cs
push
fwait
movsb
dec
adc
lcall
mov
or
aas
fxsave
js
out
mov
rolb
jae
mov
and
push
or
cmp
into
int
mov
icebp
xor
add
fildll
addr16
pusha
test
push
arpl
popf
lahf
and
int3
mov
and
aad
or
pop
jl
int
dec
jbe
outsl
mov
bound
insb
ljmp
xor
sub
shlb
mov
lds
pop
scas
and
dec
es
mov
fstp
idivb
xchg
into
add
lods
test
testb
mov
repz
ret
mov
inc
out
mov
or
enter
scas
ss
stc
adc
out
push
push
xchg
aam
mull
mov
cmp
outsb
mov
fisubl
mov
sub
loopne
lds
jo
jle
insl
stc
mov
xchg
into
data16
pusha
imul
push
mov
fcompl
in
popa
and
mov
hlt
jo
push
or
cmc
pop
fdivr
movsl
mov
mov
dec
pop
jns
jmp
cmpsb
out
ss
inc
mov
loopne
rcrb
lock
and
rcr
in
push
ror
push
shr
fsts
nop
sbb
aas
xchg
sub
push
jg
cli
sub
in
cmp
push
mov
add
mov
adc
dec
inc
mov
mov
mov
sbb
inc
mov
imul
cmp
stos
dec
mov
mov
adc
mov
out
hlt
call
mov
mov
sub
andb
add
out
and
loope
adc
and
fwait
jmp
outsb
movsb
shll
fstl
std
fadd
inc
push
adc
sbb
je
test
cwtl
arpl
repnz
push
fisttps
je
push
sub
jno
movsb
enter
daa
rclb
push
push
loope
inc
sbb
adc
mov
data16
lea
in
mov
jns
gs
inc
sbb
in
mov
xchg
xor
ds
cltd
cs
lods
test
mov
mov
xorb
add
inc
mov
mov
dec
push
mov
pop
js
lods
movsl
inc
pop
out
out
push
sub
push
in
sbb
pop
sbb
cmp
adc
out
outsb
mov
std
les
dec
dec
add
out
jbe
das
movsl
xchg
and
xor
xchg
add
add
mov
fdivp
mov
loope
flds
hlt
mov
jl
xchg
xchg
or
ret
cmp
dec
lods
insl
les
xchg
pop
jle
scas
cmp
rcll
xchg
jnp
aas
dec
pop
rcrb
mov
jb
jnp
jmp
repnz
jnp
jo
xor
cmp
mov
gs
mov
out
insb
in
cld
add
sbb
dec
mov
pop
cs
je
jmp
shlb
ds
stos
lret
leave
push
xchg
addr16
dec
mov
mov
mov
push
mov
sub
pop
clc
pop
and
sbb
xor
repz
add
jo
fwait
in
int3
xor
xor
or
aaa
aaa
push
fxch
mov
adc
xlat
pop
push
pop
sti
into
cmp
test
jne
mov
cmp
into
stc
iret
cltd
xchg
mov
aam
mov
dec
push
push
in
and
and
add
mov
mov
test
cld
xchg
pop
mov
add
stc
in
mov
dec
xchg
xchg
std
lea
dec
sub
jno
andl
mov
pop
rcll
fnstcw
cmpsb
jmp
movsb
arpl
jbe
cltd
insb
sub
xor
push
jns
roll
out
cli
in
push
lods
cmp
rorl
stos
mov
sub
add
mov
push
popf
pop
arpl
and
pop
mov
jnp
loop
xor
jg
cmp
inc
mov
and
push
inc
dec
ja
icebp
lcall
adc
sub
and
insb
mov
ss
mov
sub
mov
adc
push
sub
and
adc
push
cmc
inc
or
and
mov
cmp
mov
icebp
icebp
ja
dec
outsb
sbb
and
cmp
and
out
test
jecxz
lahf
add
outsl
sub
push
jnp
mov
in
shlb
or
andb
vorps
cwtl
sbb
jnp
xchg
xchg
daa
add
push
stc
arpl
insl
push
mov
bound
cld
test
jg
jb
sub
in
or
bound
aad
or
inc
lea
adc
or
dec
push
outsb
mov
clc
adc
adcb
fs
in
outsb
lret
cwtl
aad
loope
mov
in
xchg
aas
cmp
inc
into
out
nop
test
in
cwtl
mov
push
orb
stc
push
std
mov
push
adc
out
sub
inc
pop
or
stos
cmp
pop
shrl
lret
xor
sub
or
add
jo
es
mov
subl
jns
dec
iret
jmp
jecxz
cmpsb
jb
mov
mov
xchg
mov
fcmovnb
es
iret
and
imul
lcall
jg
mov
data16
cmpsl
inc
adc
or
mov
jo
sbb
rclb
mov
or
xchg
pusha
out
rcrb
jnp
mov
leave
or
dec
cld
and
loopne
xchg
jnp
int3
sub
pop
clc
adc
out
leave
imul
enter
lods
movsb
fcoms
adc
cmpsb
push
popa
lods
jp
ljmp
pushf
and
iret
test
insb
push
mov
dec
mov
or
ljmp
jb
ficomps
dec
mov
push
inc
xchg
lea
push
popa
or
clc
inc
add
jge
fbld
add
ficoml
xor
or
jge
mov
add
jns
out
orl
xchg
xchg
fs
mov
insb
sbb
std
adc
cmc
into
fwait
mov
jo
push
push
jl
mov
add
jg
jl
xorb
imul
fadds
mov
iret
mov
jle
shlb
fdivrl
jmp
arpl
adc
xor
mov
xchg
adc
call
outsb
sub
mov
dec
je
in
out
cli
insb
xchg
stos
loope
add
dec
shll
xlat
pop
xlat
jp
sbb
mov
mov
pop
jb
push
or
dec
ret
cmp
xor
mov
cmpsl
mov
out
adc
inc
sub
mov
dec
jae
int
pusha
xor
lret
xchg
mov
fcom
inc
nop
jbe
mov
in
dec
and
faddl
popa
sbb
das
lods
cmc
inc
pop
cmpsb
movsb
test
lods
pop
stc
rep
dec
jl
hlt
ret
mov
push
add
mov
in
xor
inc
and
add
inc
mov
cmp
ljmp
shr
popf
jnp
das
adc
in
mov
xchg
adc
pop
movsl
push
int3
in
pop
or
sbb
cs
ss
or
pop
into
imul
mov
call
adc
and
jb
mov
insl
dec
out
loopne
cltd
scas
lret
shl
sub
mov
mov
push
add
or
and
cld
mov
andl
sub
mov
xor
cwtl
vmovaps
jp
fucomp
repnz
and
cmp
mov
and
fnstsw
shrl
movsb
push
cmp
dec
inc
xchg
adc
int
repz
or
rclb
push
scas
xchg
lds
mov
aas
leave
add
sub
ljmp
sbb
add
xor
aad
push
cmpsw
dec
jne
adc
mov
gs
stc
fisttpl
lret
push
imul
out
rcl
push
xchg
and
inc
inc
gs
lods
in
jmp
aam
and
es
push
mov
movsl
adc
mov
aad
mov
and
push
cmp
xchg
push
inc
mov
sub
sarb
xchg
lret
add
add
addr16
lea
dec
andb
imul
fidivs
sbb
and
or
loop
dec
xor
lea
mov
aas
mov
fcoml
jecxz
fsubrs
jne
ss
and
out
cwtl
xor
fs
inc
incb
call
faddp
jns
adc
sub
push
rclb
cmp
dec
stc
ja
subl
jecxz
ss
fcoml
adc
int
pop
outsl
xorl
push
and
stc
scas
ret
ret
cmp
xchg
cli
ficoms
pop
cmp
fs
and
lcall
lret
lret
mov
mov
jnp
movsl
mov
push
clc
cld
inc
xor
sub
fwait
enter
mov
lret
jns
mov
add
insb
pop
jecxz
scas
out
outsb
xlat
cs
cmp
je
mov
mov
mov
mov
inc
xor
sbb
popf
ja
push
jbe
cmp
or
pop
hlt
dec
mov
jb,pt
or
loop
sbb
push
loopne
sbb
pop
leave
sbb
jb
in
std
sub
mov
addl
xchg
lds
dec
rcrl
and
rcll
pop
mov
push
xchg
xchg
not
inc
repz
das
xorb
scas
aam
or
fadd
je
rorl
ja
dec
add
test
sbb
rcrl
pop
inc
out
push
loope
fcomps
xchg
push
out
pop
adc
fs
mov
xor
cmc
fnstenv
jnp
shrl
rolb
out
fistps
pop
lahf
fldl
cmp
mov
mov
xlat
sub
dec
mov
int
push
ret
pop
out
mov
mov
sbb
shlb
add
mov
jno
push
loope
ret
xchg
add
push
mov
int
xchg
and
xlat
cmp
pop
ja
adc
repz
jg
in
pop
adcl
ds
enter
out
negl
and
std
cmp
ljmp
and
ret
cmp
push
xor
das
xchg
cwtl
xchg
imul
jl
and
cli
cmp
mov
push
movb
call
ja
addr16
push
popl
sti
xlat
fmul
arpl
clc
pop
jle
fisubs
cmc
aad
loopne
sahf
push
aad
nop
pop
lea
outsb
enter
add
sub
xchg
dec
jae
xchg
mov
icebp
jmp
push
minps
add
push
leave
mov
in
ljmp
jb
sbb
mov
shll
es
mov
scas
enter
or
pop
sub
cmp
mov
int3
mov
sbbl
inc
push
dec
pop
push
cld
xor
scas
mov
push
mov
nop
jb
mov
out
jnp
mov
int
jae
or
out
outsl
xchg
into
fldt
dec
cltd
add
sub
or
jo
out
mov
out
sbb
pushf
and
xchg
test
test
sbb
and
outsl
dec
adc
ret
mov
push
mov
sbb
sub
mov
pop
lret
ret
pop
nop
xchg
sahf
pop
aas
jnp
jnp
dec
icebp
inc
xor
adc
mov
mov
jge
stos
adc
scas
jmp
cmp
pop
data16
pop
xchg
popf
push
cmp
dec
mulb
push
bound
push
fs
sbb
pop
addr16
mov
or
mov
mov
mov
jo
nop
jmp
filds
jmp
out
and
je
pop
in
jge
test
jp
in
mov
scas
or
and
hlt
pop
aaa
into
push
vpcmpgtd
xchg
jo
mov
mov
test
out
iret
jg
int
pop
pop
test
add
xchg
jbe
xchg
mov
out
aad
cmp
scas
int3
mov
push
sub
scas
xor
cmp
jno
mov
lea
ret
xor
mov
jecxz
popf
sub
or
mov
adc
cmp
xchg
add
mov
jp
cmp
in
test
imul
pop
stos
stc
sbb
lahf
data16
adc
and
pop
popa
and
mov
and
xor
sub
jle
divl
push
sbb
adc
dec
pop
lds
cmpsl
lods
and
and
and
out
mov
dec
cmp
push
push
and
mov
imulb
push
arpl
mov
fcomps
jmp
push
cmpsb
jo
je
insb
bound
jg
push
sbb
sub
mov
jle
inc
mov
add
dec
pusha
ja
push
daa
cwtd
repz
neg
or
pusha
add
gs
jge
dec
xchg
xchg
or
dec
jb
push
add
sahf
cmp
scas
or
and
cs
or
cld
cmc
push
outsb
das
fbld
mov
xor
aad
add
or
add
sbb
movsl
pop
mov
and
jnp
xor
fmuls
mov
dec
scas
pop
test
int3
movsl
or
and
mov
or
sub
inc
rorl
movsl
fs
or
mov
mov
cmp
add
pusha
aam
cwtl
aam
xchg
push
sbb
add
fidivrl
xor
or
nop
xchg
ja
fs
scas
ljmp
nop
sbb
fisttps
sbb
test
pushf
inc
les
cmp
mov
push
mov
int
lods
mov
cli
js
cwtl
dec
fstl
xchg
xchg
inc
pushf
aas
in
out
adc
pusha
mov
pop
add
sub
pop
ret
xchg
icebp
andb
fidivs
pop
scas
ret
popf
cs
adc
lret
inc
add
mov
mov
xor
xchg
inc
or
cwtl
pusha
sarl
add
cmp
fwait
adc
ror
mov
int
push
loopne
repz
mov
mulb
into
jg
movsl
jns
add
gs
push
les
pushf
and
pushf
jmp
rclb
or
iret
rcr
xor
and
inc
cmpsb
dec
pop
and
test
pushf
add
bound
push
jne
daa
sahf
leave
imul
add
mov
adc
sbb
mov
sbb
sti
lcall
sahf
test
js
insb
cmpsb
sbb
push
daa
inc
inc
pop
and
sub
cmp
jno
imul
jecxz
inc
mov
sub
clc
fld
add
pop
dec
xor
out
jno
sahf
sbb
sub
decb
adc
into
pop
xor
repnz
mov
out
and
push
iret
dec
repnz
jmp
xchg
movsl
negb
popa
imul
sbb
and
push
cltd
insb
inc
dec
sbb
xchg
clc
pop
pushf
std
std
xlat
sub
mov
and
mov
xchg
sub
lds
sub
cwtl
mov
outsl
cmp
rcl
cmpsb
cmp
push
add
push
cmp
sbb
subl
icebp
mov
lods
sbb
aad
loop
repz
mov
push
add
adc
in
call
adc
sbb
mov
adc
jge
or
leave
mov
pop
repz
and
test
pop
negb
jmp
xchg
inc
repnz
fcompl
and
into
inc
mul
divl
enter
and
imul
jae
sub
mul
loope
pop
std
sub
test
cmc
pop
xor
hlt
sub
das
ds
mov
mov
dec
xor
push
outsb
out
mov
cmpsl
lret
push
push
add
test
ds
fstl
out
movsb
bound
out
lret
pusha
mov
push
in
pop
mov
push
icebp
aam
fisubrl
aam
inc
xor
popa
or
cmp
mov
mov
push
ret
sahf
or
sub
ljmp
adc
sysenter
arpl
outsb
push
push
popf
sar
test
test
mov
lcall
adc
divl
fistpl
call
rorl
push
or
dec
xchg
cmc
inc
dec
push
pusha
jge
notl
inc
jns
inc
mov
imul
jns
xlat
out
test
mov
gs
jno
jns
cli
xchg
xorb
lock
sbb
jae
or
int3
cmc
les
push
jl
shl
in
je,pt
je
or
je
sbb
imul
out
loopne
ficompl
xchg
xor
aam
lcall
and
and
adc
sti
cmp
xchg
faddl
arpl
inc
fnstenv
fs
mov
adc
add
mov
cmp
cli
xchg
fdiv
out
jno
inc
lahf
add
pop
add
xchg
dec
and
sub
xchg
repz
lahf
pop
push
shll
pop
mov
add
mov
pop
jbe
jg
data16
sahf
repnz
gs
jmp
out
mov
xor
sbb
add
rorb
push
int3
mov
inc
loopne
fs
mov
clc
mov
mov
push
test
mov
test
sbb
sbb
outsl
or
ds
cli
cmpsl
xor
xorl
cmp
jnp
flds
xor
repnz
jns
sbb
dec
pop
xor
pop
mov
insl
pop
cmp
je
mov
loop
ret
rcrl
dec
lret
pop
repnz
push
jo
sbb
movsb
mov
cld
sub
xchg
test
out
jp
pop
add
shr
inc
jl
loopne
lret
push
jnp
imul
xchg
mov
aad
jg
idivb
adc
pusha
sub
es
dec
les
or
cmpsb
add
or
cld
lcall
mov
adc
gs
inc
scas
js
lahf
sub
mov
outsl
mov
shr
pop
cmp
fsub
jb
jmp
mov
and
jae
data16
dec
add
call
out
pop
jno
aaa
xor
mov
outsb
lahf
ja
arpl
sti
adc
mov
sbb
repz
xor
ret
push
mov
adcb
imul
ficoms
xchg
push
pusha
loopne,pn
ds
mov
pop
testb
adc
dec
scas
hlt
mov
mov
je
addr16
mov
add
ror
pop
imul
cmpsb
sub
inc
mov
sbb
xchg
mov
inc
add
lahf
jmp
jnp
or
push
or
and
mov
and
ljmp
shr
or
sub
cs
rol
mov
pop
cmpsl
js
xlat
pop
pop
and
sub
rorb
mov
out
in
sub
lahf
push
dec
ficomps
rcrb
and
push
mov
xorb
mov
lods
rcr
iret
out
out
dec
rol
mov
icebp
loope
leave
fmuls
pop
movsl
push
fs
es
inc
xchg
add
rcll
cmpsb
decb
or
fisubs
and
out
lahf
sbb
mov
incb
pop
or
test
mov
xchg
push
inc
adc
adc
addb
and
ret
add
fldenv
inc
adc
push
or
mov
lods
stos
leave
jp
and
jge
and
add
cli
pop
rolb
mov
lahf
in
jg
inc
inc
sub
shlb
dec
fwait
cwtl
xchg
xlat
ja
cmpsl
out
adc
cmp
jmp
and
xchg
daa
ss
cmp
push
test
roll
filds
mov
ret
cmp
lahf
cmp
xchg
movsb
mov
fisttps
cs
mov
pop
push
cli
js
push
push
int
rol
add
aad
add
jo
popf
in
imul
lock
or
push
or
push
sub
nop
and
jp
or
test
imul
and
pop
xchg
stc
mov
adc
xchg
jo
js
mov
out
into
insb
lds
sarb
testb
in
popa
sub
cmp
cmp
dec
jo
cmpsl
into
jbe
repnz
sub
and
call
jl
sub
and
lcall
ss
mov
pop
fstps
cmc
adc
mov
stos
mov
jbe
leave
push
out
gs
dec
dec
fadd
icebp
cmp
scas
cs
mov
cmp
inc
push
das
lea
and
out
ret
jecxz
mov
fsubs
mov
sub
cmp
clc
daa
jp
in
push
cmp
push
arpl
imull
or
mov
xor
push
dec
cmp
cli
adc
sbb
rclb
sti
xchg
xchg
lock
mov
inc
addr16
or
xor
sub
adc
mov
inc
jnp
cmc
vcvtss2si
push
xlat
fimull
push
xlat
out
push
ficompl
cmp
xchg
mov
in
loop
inc
mov
mov
imul
push
pusha
jbe
repz
insl
sub
test
sahf
adc
inc
mov
lret
clc
or
and
inc
lcall
xor
and
adc
cmp
addr16
xlat
and
fldcw
and
or
roll
iret
orb
test
sarb
adcb
cmp
leave
push
stos
fnstenv
xchg
push
or
mov
test
jmp
sbb
xchg
lret
out
push
jle
mov
add
loope
movsl
jl
fcmovne
aaa
mov
lret
adc
sbb
sub
pop
repz
sbb
testb
xlat
xor
lcall
pop
and
cmp
add
xlat
scas
xchg
out
sub
mov
into
testl
fcmovnu
xchg
pop
push
cmp
xchg
adc
movsl
lcall
rcrl
lods
inc
xchg
add
xor
mov
ret
cmpsb
xchg
jae
sti
cmc
in
loop
js
cmp
sbb
repz
xlat
ljmp
dec
stc
outsb
and
fs
pusha
loop
outsl
mov
xchg
lcall
pop
add
loop
das
rclb
sbbl
xorl
mov
test
and
mov
sub
inc
jmp
jae
stos
xchg
addr16
movsl
cmp
test
push
cmp
fsub
mov
add
jmp
adc
popf
lock
pop
push
nop
imul
and
sub
xchg
jmp
loopne
add
cld
inc
lret
add
int3
insl
ljmp
mov
ljmp
cmp
scas
insb
push
aaa
test
sub
out
leave
xchg
jl
data16
inc
ds
pop
jge
adc
or
leave
xchg
jbe
xchg
add
inc
cmp
sbb
xor
in
push
or
mov
mov
jge
int3
dec
adc
test
fcmovne
xchg
sti
xchg
mov
dec
iret
xchg
in
int
scas
fsubrl
cmp
mov
cld
fstpt
xchg
xchg
and
push
pop
jmp
mov
or
fiaddl
inc
sbb
sbb
mov
aas
test
cmc
sbb
imul
sub
fbstp
scas
call
inc
jmp
inc
out
adc
int
int
inc
outsb
mov
adc
jge
fdivrs
inc
neg
test
aaa
jl
jb
dec
shr
and
sbb
mov
push
outsl
insl
fxtract
sbb
sub
pop
pushf
xchg
arpl
sub
jle
outsb
aaa
ds
aas
roll
cld
mov
mov
call
imul
dec
enter
jg
xchg
sbb
dec
outsl
lds
not
cmpsl
mov
add
cmp
imul
popa
mov
sbb
inc
pop
enter
jmp
sbb
or
sbbb
jp
aam
mov
jmp
icebp
mov
test
loope
add
and
sbb
dec
cmp
push
xchg
xchg
lds
in
xchg
dec
fmull
mov
mov
sub
mov
mov
dec
mov
sbb
push
inc
jg
push
push
mov
sub
jb
cmp
dec
jbe
pop
xor
pop
movsb
stos
sahf
cmp
inc
or
dec
xchg
je
adc
and
pop
push
mov
adcl
outsl
pushf
or
push
cmp
inc
outsb
insb
mov
sub
gs
call
mov
pop
push
jge
push
pop
fdivl
pop
fs
adc
xor
sbb
and
mov
cmp
fidivrl
xor
jg
test
outsb
push
cmp
mov
jno
pusha
out
push
sbb
out
in
repz
idiv
repz
cli
or
sub
sub
out
xchg
clc
jnp
adc
dec
in
outsb
pop
jp
sbb
adc
lock
stos
test
hlt
inc
xor
ret
test
jno
stos
xchg
xchg
jl
cmovns
cmpsl
aas
test
push
cmpsl
fbstp
sbb
aas
subl
call
je
xlat
jne
add
dec
cld
cli
popf
and
inc
stos
pop
fimuls
mov
xchg
cmp
divb
push
xor
pop
arpl
cld
mov
test
ret
cmp
or
ret
movsl
mov
out
icebp
arpl
adc
shl
je
jle
fnsave
sub
xchg
or
xchg
daa
jae
vcmpps
xchg
and
inc
pop
das
cwtl
daa
fmul
mov
fwait
ja
repnz
mov
sbb
jp
sti
mov
jecxz
mov
mov
icebp
mov
iret
cmp
es
add
rcl
enter
xor
out
cmpsb
adc
cld
sti
jo
arpl
jmp
inc
mov
das
lret
int
nop
cmp
test
pop
mov
mov
loop
sub
mov
std
leave
pop
inc
jl
rcr
jne
jmp
orl
test
jg
adc
je
idiv
and
sbb
or
je
and
or
mov
inc
das
adc
sub
ret
sub
test
pop
push
sub
ret
ljmp
scas
inc
aad
lds
stc
add
mov
int3
idivl
ror
insb
cmp
pop
inc
pop
repnz
insl
imul
jno
jbe
out
lock
aam
sbb
sbb
dec
fs
jae
test
xchg
push
jle
sbb
sbb
mov
cmpsl
sub
cmpsl
xchg
imul
lret
cmp
adc
push
loopne
shl
aad
cmp
cs
clc
iret
mov
jbe
lods
sub
clc
shlb
cli
push
jecxz
xor
fwait
loope
into
insl
mov
adc
das
loope
mov
sub
add
lods
push
adc
movb
mov
cmp
lods
xchg
sti
pop
or
sbb
ja
das
xchg
pushf
mov
jmp
stos
sahf
xchg
jbe
int
xchg
mov
mov
pop
pop
add
push
cld
pushf
movsb
mov
loop
movl
sbb
loope
sub
sbb
enter
daa
sbb
into
es
rorb
div
fbstp
sbb
ja
xchg
xor
lods
add
cmc
fidivrs
push
pop
add
leave
mov
pop
cmp
adc
inc
pop
pop
jnp
mov
cmc
dec
mov
jae,pt
dec
push
push
jmp
aad
pop
xor
in
cmp
jae
add
fdivrl
xorl
jae
or
xor
loopne
cmpsl
mov
xor
es
xchg
int
pop
pop
pop
add
xlat
data16
leave
imul
fidivrl
cmpsb
data16
dec
rcll
push
scas
test
es
sarb
test
bound
jae
repnz
testb
lea
repz
loop
adc
mov
xchg
mov
inc
xor
loopne
sub
js
inc
notl
xchg
adc
mov
mov
jmp
ficoms
repnz
cmpsl
cmp
je
jecxz
sbb
jnp
cmp
adc
aad
adc
jb
fs
imul
add
xor
pop
adc
fists
jnp
stc
fcoms
mov
add
add
mov
jae
enter
jno
cltd
mov
inc
les
ljmp
sub
pop
inc
adcb
sub
lock
sub
std
push
mov
jne
xchg
push
xor
movsb
cmpsl
inc
push
pmaxsw
movsl
push
test
add
into
adc
hlt
in
mulb
inc
gs
loop
pop
pop
and
les
es
dec
pop
pop
dec
add
xchg
out
leave
dec
dec
cli
fsubs
push
cld
jnp
and
pop
dec
push
in
jge
and
cmp
mov
ljmp
jne
lock
dec
cld
sbb
mov
lahf
sub
push
ja
cwtl
test
inc
jp
dec
add
mov
sub
shr
dec
sti
jb
xchg
mov
fmul
imulb
adc
loope
xor
xchg
ret
adc
lea
xchg
fstpt
mov
dec
fsubs
and
out
call
lea
out
xlat
movsb
adc
jmp
mov
lock
and
cmp
mov
push
mov
mov
xor
cmp
mov
and
pop
sahf
push
mov
orl
ljmp
and
mov
mov
fwait
clc
enter
sub
and
fs
fiadds
and
sub
xor
cs
in
rolb
xchg
adc
mov
fwait
cmp
es
xchg
repz
dec
sub
sub
test
cmp
or
add
imul
repz
or
mov
popa
mov
out
insb
bound
div
mov
cmp
push
jb,pn
pop
xchg
subb
outsl
add
je
mov
aas
dec
and
mov
hlt
loope
add
xor
and
mov
sbb
dec
push
mov
les
imul
cmp
mov
not
pop
mov
testb
adcb
scas
fimuls
mov
orb
out
cli
inc
adc
mov
loope
repz
sbb
push
sbb
cmpsl
cwtl
pop
xor
or
ja
adc
inc
mov
inc
inc
dec
enter
lock
xorb
inc
add
push
repnz
xor
xor
popa
popa
mov
dec
iret
push
or
mov
ljmp
push
insb
add
mov
dec
fcmovnbe
dec
add
in
ja
inc
addb
pop
mov
xchg
push
push
in
xchg
sbbl
dec
mov
daa
mull
inc
mov
add
lahf
sbb
fdiv
jecxz
sub
cmpb
push
lahf
test
add
cltd
mov
bound
mov
movsl
mov
ficompl
or
jge
pop
adc
lock
jno
add
cli
push
inc
pusha
cwtl
dec
es
xor
lcall
xchg
xor
cmp
int3
xchg
mov
push
and
jne
push
jl
and
lods
and
lret
mov
pop
ds
out
pop
je
orb
mov
cmp
xor
xchg
and
push
fisubl
sbb
sub
push
mov
std
xor
mov
incl
pop
push
adc
jl
pop
dec
cmp
loope
dec
adc
and
push
addr16
or
pop
or
adc
pop
mov
imul
cs
jns
mov
into
jecxz
pop
movsb
rol
jo
push
enter
mov
nop
and
enter
xor
neg
addb
call
data16
scas
ds
mov
in
and
gs
xor
shrl
mov
std
sbb
adc
pop
sbb
flds
fxch
aad
cmp
rcrb
push
jo
sub
or
dec
pop
ljmp
lretw
js
jo
xor
pop
rcl
and
dec
daa
xor
push
in
lahf
fnstenv
mov
cwtl
out
lea
aaa
lea
pop
lods
daa
jbe
daa
jnp
inc
addl
pop
dec
cld
ficompl
stos
in
lods
xchg
imul
imul
mov
js
adc
loop
int
mov
clc
inc
cmpsl
cmp
insl
scas
push
sahf
dec
inc
or
mov
sub
sbb
clc
stc
mov
sbb
cmp
es
dec
lea
mov
movsl
arpl
push
das
push
js
aaa
sbb
mov
inc
js
cltd
adc
cmp
pop
jbe
sub
out
pop
adc
mov
push
mull
iret
push
fisubs
lods
into
nop
add
popa
popa
pop
or
imul
sub
popa
mov
sahf
in
dec
xchg
cmpsl
call
and
sbb
and
xchg
imul
rorb
ljmp
xchg
lret
mov
incl
and
stos
mov
inc
sub
aas
pop
cmc
jl
inc
int3
popf
inc
jp
sarl
sub
lea
xchg
iret
mov
sbb
and
jl
fcomps
les
into
stc
into
xor
fwait
add
out
shrb
orb
pop
mov
pop
mov
test
mov
xor
popa
inc
cmp
mov
fildl
inc
fldt
call
or
add
push
mov
mov
movhps
gs
push
and
fists
gs
inc
add
lret
adc
aad
mov
jbe
push
jnp
dec
inc
andl
dec
clc
jae
inc
xor
loopne
jb
inc
add
out
loope
inc
dec
xchg
aam
push
test
jp,pn
mov
cmp
or
add
popa
sub
lcall
jne
or
repz
imulb
inc
add
call
inc
add
and
ret
sub
popa
scas
add
movsb
push
xchg
jb
out
jb
mov
xor
lahf
push
add
mov
mov
cmpl
inc
mov
xor
add
mov
mov
jmp
js
mov
add
ja
dec
xor
xchg
push
ds
scas
cmp
mov
addr16
shr
adc
jmp
lcall
incb
dec
mov
xchg
push
mov
sub
aaa
mov
dec
xor
push
pop
loope
nop
mov
cmp
adc
stc
imul
dec
xchg
dec
mov
dec
and
icebp
mov
inc
push
mov
aaa
xchg
adc
cmp
nop
dec
addr16
sti
xchg
mov
testb
pop
lahf
fmulp
push
xchg
dec
dec
ja
pushf
shlb
adc
jnp
and
arpl
mov
and
scas
xor
jge
cltd
aaa
pop
not
outsb
sub
mov
mov
stos
cmp
or
xchg
sbb
inc
jae
inc
xor
adc
test
pand
sub
lea
dec
imul
out
rcrl
sbb
pop
mov
shr
push
shrl
pusha
out
testl
aam
push
mov
jecxz
aad
cmp
and
jg
mov
ffreep
in
pushf
jb
call
movsb
fldt
gs
das
stos
or
bound
push
push
pop
fisubrl
cmp
dec
dec
jl
fwait
adc
cwtl
sahf
mov
and
sbb
add
ret
pop
xchg
movsb
mov
push
push
xchg
pop
jge
pop
or
jnp
pop
xor
xor
mov
inc
lcall
std
aam
jo
idiv
and
xor
js
mov
in
pop
pop
fildl
sub
in
inc
add
pop
aam
outsb
mov
lock
adc
pop
test
test
mov
dec
adc
jmp
rcll
into
pop
jmp
pop
jge
negl
adc
inc
xor
gs
sahf
dec
push
push
xlat
je
inc
jmp
sbb
push
faddl
fists
mov
sahf
stc
mov
mov
repz
pop
sub
mov
push
push
inc
inc
push
sub
jo
ffreep
addr16
xchg
andb
xlat
mov
mov
cmc
mov
push
movsb
pop
test
lahf
jp
cltd
lcall
xor
cltd
xchg
pop
push
enter
loopne
mov
dec
inc
out
adc
mov
sti
cmp
or
sti
lcall
mov
inc
add
cmpsl
cmp
nop
fmuls
movsb
cmp
and
sti
or
imul
lods
arpl
push
shrb
ljmp
ficoms
jb
stc
sti
das
lds
lcall
ja
roll
ja
outsl
mov
mov
cmp
push
ja
dec
jmp
js
push
pusha
adc
and
imul
xchg
adc
pop
cmp
out
add
and
mov
fbld
lret
sahf
mov
jnp
ret
sbb
test
cli
and
cmp
fisubrl
mov
push
inc
imul
mov
and
pop
and
test
ja
nop
movsl
ja
sub
enter
jp
cwtl
clc
push
in
jl
dec
shrb
xchg
cmpsb
xor
push
dec
call
or
outsb
lock
or
jo
int3
gs
fs
jle
loop
call
dec
pop
push
jmp
cmp
arpl
inc
add
test
int3
jae
mov
fldl
xor
or
movsl
std
and
outsl
jge
pushl
dec
pop
or
xchg
int3
jmp
dec
inc
sbb
addr16
mov
in
jbe
dec
dec
sahf
push
cli
sahf
scas
mov
ret
loop
cld
mov
fcomi
inc
pusha
xchg
sbb
jns
dec
dec
out
imul
pop
imul
push
aad
xlat
pushf
or
movsl
mov
ret
xor
xlat
jge
hlt
clc
test
test
pop
push
sti
stos
and
enter
xor
jmp
scas
inc
jnp
add
adc
loop
pop
xor
sbb
or
icebp
shl
adc
mov
cmpsl
mov
pop
cmpsl
jb
cltd
inc
stc
pop
xor
pop
std
pop
repz
xor
jle
cmp
push
stos
adc
xchg
add
mov
jne
xchg
sahf
xchg
lea
mov
in
fwait
mov
popf
sub
push
orl
add
andl
fs
subl
pop
dec
or
add
and
out
cmc
sbb
and
inc
shrb
subb
push
jae
repz
jo
test
sbb
mov
jnp
ljmp
inc
sahf
rorl
int3
mov
push
push
cmp
mov
mov
and
and
loop
push
sbb
bound
sti
cs
mull
in
pop
lds
push
adc
movsb
dec
stos
mov
push
ret
lcall
call
mov
loop
fs
js
mov
sbb
data16
loopne
push
pop
scas
icebp
aam
xor
cwtl
cmpl
popf
and
inc
xor
mov
mov
fisubrl
stos
pop
cmp
lret
js
test
sbb
adc
push
mov
push
jae
fstl
pop
cmp
sbb
aam
and
cmp
sub
add
mov
and
mov
mov
stos
cltd
mov
inc
popa
and
cmp
ja
fwait
xchg
icebp
aaa
xorl
dec
bound
repz
fidivl
or
insl
inc
icebp
lret
xchg
inc
outsl
mov
or
iret
push
add
inc
test
add
out
outsl
lahf
lret
sbb
aaa
ror
or
mov
mov
or
xor
mov
xchg
add
xchg
xor
lret
or
lock
dec
lea
xor
stc
in
pop
dec
jo
sbb
loopne
test
mov
push
imul
clc
aad
fcmovb
pop
inc
add
es
ds
enter
in
scas
add
outsb
pop
cmpb
mov
aaa
dec
mov
scas
rcll
movsl
sbb
mov
mov
fadds
mov
sub
and
and
mov
js
icebp
pop
add
ja
jbe
sbb
jns
jae
cmp
xor
inc
xchg
leave
ss
push
xor
jae
add
aam
std
jge
orb
lahf
and
ret
jbe
pop
dec
f2xm1
fstl
inc
out
and
ret
jmp
push
xchg
xchg
lcall
fsubrs
jp
dec
pop
push
cmp
pushf
lods
out
or
js
mov
mov
add
push
or
dec
pop
add
xor
or
jbe
popa
sbb
out
dec
or
jns
sbb
xchg
hlt
xchg
clc
xchg
add
adc
jp
stos
decb
mov
pop
adc
sti
in
popa
xchg
or
mov
les
or
and
xchg
xchg
dec
jge
sub
scas
das
jmp
jmp
loop
sbb
hlt
and
hlt
mov
jno
imul
rcrb
inc
stc
adc
pop
xor
pop
add
and
test
push
fildl
inc
lret
push
push
pop
fildll
fisubrs
push
in
cmp
jmp
xlat
jmp
mov
andl
int
iret
int3
arpl
xchg
push
mov
and
mov
jecxz
mov
or
bnd
add
push
ror
pop
shlb
pusha
arpl
sbb
adc
and
cmp
sub
jecxz
xchg
cmp
dec
inc
jecxz
dec
xlat
outsl
pop
or
sbb
ss
imul
loopne
push
flds
push
fwait
cmp
enter
xchg
and
daa
loope
ret
aaa
lds
xchg
out
adc
sub
mov
mov
xchg
out
addr16
mov
fldenv
jbe
cmp
mov
les
lock
and
mov
push
jecxz
cmp
faddl
out
adc
pop
jmp
mov
rclb
inc
loopne
cmp
movsb
pop
pop
dec
xlat
test
add
pop
das
lahf
in
xchg
xor
mov
adc
and
fwait
aam
movsl
mov
pop
or
xor
js
inc
xchg
std
lock
into
mov
in
cmpsl
mov
xchg
and
mov
pushf
push
sub
lret
xorb
movsl
test
and
xchg
loope
mov
mov
int3
xlat
sti
daa
lret
push
sub
mov
mov
push
or
roll
insb
lret
int
in
pop
push
jae
sub
inc
outsl
cmp
mov
adc
cmp
movsb
mov
adc
or
mov
loopne
pop
movsl
pop
jb
repnz
call
out
mov
fcmove
jmp
xor
fisubrl
mov
sub
xchg
aam
int
movsb
pop
enter
lcall
sub
fldenv
cwtl
pop
bound
js
addr16
sbb
sub
xor
popa
mov
sub
js
sbb
jno
jmp
stc
sub
test
gs
stos
mov
roll
xchg
imul
jae
xchg
mov
sahf
in
mov
jg
xlat
pop
push
sub
cmpsl
adc
clc
pop
test
or
mov
pushf
or
pop
xorb
lds
in
js
dec
push
test
jns
xorb
cmp
and
pop
movsb
ljmp
and
or
jl
aaa
test
std
dec
in
xchg
fstps
xchg
jl
andl
cmp
addb
push
jb
enter
cmp
xchg
lods
sub
mov
hlt
jbe
mov
outsl
sbb
lock
stc
ret
dec
push
outsl
andnps
xchg
xor
xchg
loope
xor
push
sub
jle
mov
push
xchg
movsb
mov
sbb
cmp
shrl
inc
jl
jge
add
or
xor
ror
ss
ss
jns
jbe
std
mov
sbbl
mov
in
popa
insb
popa
pop
pop
jbe
xchg
orb
idivl
xor
sbb
push
insl
dec
and
fisubrs
mov
inc
lea
mov
call
inc
sbb
cli
test
push
dec
mov
mov
sub
add
setno
mov
pop
incb
sbb
pop
adcb
inc
jae
sub
shrb
jle
pop
sub
push
pop
movsb
ja
sbb
and
fldt
cs
pushf
or
test
lods
push
fiaddl
stc
pop
in
xchg
les
xchg
cmp
jae
movsl
test
cmpsl
inc
scas
call
jecxz,pn
pushf
inc
cs
test
leave
repz
and
jp
jecxz
xchg
leave
jns
fbstp
push
fcmovnu
jno
int
pop
iret
xchg
aam
fs
cwtl
aad
inc
iret
sub
fwait
mov
fidivrl
push
scas
add
enter
dec
cmp
mov
shrl
sbb
pop
mov
in
iret
enter
lcall
push
bswap
adc
dec
pop
xor
mulb
or
add
jp
hlt
cmc
cmp
xor
out
xchg
jne
xchg
jl
je
iret
subl
cld
adc
mov
fcmovnbe
test
fldt
popa
aaa
bound
in
aas
lcall
out
or
mov
es
test
test
adc
jmp
cmp
jl
add
ljmp
xor
lea
out
jp
incb
imul
add
xchg
outsl
cmp
faddl
outsl
and
push
dec
rcll
inc
mov
mov
xchg
cli
xor
inc
xor
ljmp
adc
imul
adc
dec
jbe
int3
sar
inc
inc
inc
shlb
mov
fdivl
scas
dec
xchg
inc
inc
push
rclb
std
pop
imul
les
sub
cmp
hlt
lcall
inc
sub
test
sub
push
mov
mov
pop
pop
fisttpll
push
data16
dec
adcl
fsubl
in
sub
lods
jl
jmp
inc
sbb
pop
aas
cwtl
scas
lods
mov
inc
push
repnz
js
and
xor
insb
fwait
addl
adc
into
cmp
je
mov
mov
jp
xchg
mov
das
sub
pop
fdivrl
push
mov
xor
out
add
aaa
add
out
lret
fsubl
and
inc
roll
lcall
cmp
lea
xlat
add
xchg
sub
mov
lea
add
loopne
adc
jbe
mov
sub
imul
pop
mov
cmpb
dec
and
ret
dec
mov
and
loope
repz
push
in
push
or
sub
mov
dec
cmpsb
pop
ja
div
jns
cmp
mov
aaa
pushf
fnstsw
dec
inc
fwait
cmc
jns
lret
jmp
mov
adc
inc
xchg
rcll
or
mov
fbstp
and
inc
mov
jl
jb
and
into
sti
repz
xor
mov
mov
in
fisubrs
out
mov
fadds
pop
fdivs
cmc
testb
dec
loopne
ds
scas
fsubrl
stos
sub
lret
cli
out
or
lods
mov
negb
aam
adc
pop
mov
lods
dec
xor
repnz
jp
test
sbbl
sbb
adc
pushf
sbb
sub
mov
lods
imul
test
loopne
mov
lahf
mov
jl
cmpsl
xchg
inc
nop
and
push
pusha
fwait
push
or
mov
fldl
xor
into
inc
ffree
push
jb
mov
mov
add
push
pop
les
test
int
sbb
mov
jne
and
and
cmpsl
or
movq
pop
sbb
add
adc
jp
xor
inc
icebp
mov
lods
push
push
sub
js
xchg
fidivrl
cmpsl
lret
mov
jnp
fwait
xor
movsb
mov
sub
inc
mov
add
pop
lcall
call
dec
stos
iret
mov
pop
daa
loope
sahf
les
faddl
or
sbb
lret
leave
xchg
jg
cmpsl
sbb
or
pop
inc
adc
mov
stos
shrl
mov
dec
out
adc
test
lock
pop
stos
xchg
sbb
mov
jmp
xlat
cwtl
inc
aam
ret
mov
in
push
mov
ja
test
in
mov
cmp
stos
lcall
mov
push
push
stos
popf
hlt
int3
fnstcw
sub
xorb
dec
and
ss
or
cmpsl
pop
mov
ljmp
sahf
add
adc
pop
mov
xor
mov
test
adc
xchg
enter
xchg
sub
fiadds
mov
xor
lock
inc
jb
nop
fwait
and
xor
push
cli
mov
cltd
or
ret
mov
ja
xor
adc
adc
nop
loop
dec
gs
scas
shlb
out
addr16
fsub
jmp
fwait
daa
add
int3
scas
push
pop
dec
cltd
bound
lcall
rcrb
scas
mov
sub
push
pusha
out
inc
pop
jecxz
push
test
imul
sahf
js
test
bswap
jmp
push
adc
popf
arpl
jbe
cmpsl
add
pop
repz
inc
fcoml
shl
jo
shr
aad
sarl
mov
add
xchg
adc
lods
jns
mov
add
add
add
stos
clc
test
ficoml
pusha
pop
pop
cmp
xor
and
dec
movsl
shrb
add
pusha
scas
xchg
mov
push
xor
jp
in
pop
out
mov
test
push
int
shr
jl
adc
out
and
cs
mov
pop
mov
addr16
mov
xchg
mov
jge
mov
adc
ss
arpl
push
sub
jp,pt
cmpsb
rorb
cld
jb
popf
mov
arpl
sub
popf
out
sbb
jo
jp
pop
mov
sub
dec
push
cs
xor
mull
incl
push
cmp
cltd
mov
pop
jg
push
xor
nop
test
lods
and
or
cmc
inc
inc
pop
jo
xor
mov
xor
xchg
ja
cmp
xor
xchg
and
dec
jno
ret
mov
jne
arpl
jge
push
fcoml
push
dec
fdivrl
add
faddl
cmp
mov
inc
loopnew
xchg
dec
inc
and
cmp
sbb
or
jmp
cmp
jle
dec
mov
outsl
mov
in
xchg
cmp
pusha
out
js
movsb
mov
sub
adc
xchg
lock
xchg
mov
rcrb
xlat
mov
cmp
scas
pop
daa
es
sbb
push
inc
add
lods
push
test
xchg
push
push
subb
and
test
inc
pop
addr16
inc
jns
xor
leave
leave
stos
add
push
mov
fidivrs
fxch
aad
rcrb
fs
mov
insb
cmpsl
inc
lea
add
mov
or
dec
adc
mov
les
jno
fs
push
movsl
ja
pop
inc
insl
cmpsb
xchg
mov
xor
je
jmp
push
xor
or
add
pop
bnd
lret
push
fiadds
and
lods
ficoms
popf
jge
loopne
rolb
popf
out
xor
loope
xlat
subb
sub
xor
out
jb
xor
pop
mov
push
jl
sahf
fwait
std
pushf
stos
mov
inc
clc
fwait
inc
imul
inc
test
cmp
pushf
add
xor
cmpsb
test
cmpsb
ficompl
movsl
mov
xchg
push
fnstsw
jbe
mov
int3
jne
jns
cmpsl
outsb
jle
xor
mov
aad
pusha
xor
push
or
cmp
mov
cmp
pop
lds
adcl
adc
cmc
fsubp
dec
pop
clc
subb
mov
pop
jl
out
lds
pushf
clc
mov
and
sbb
xchg
mov
mov
lret
sub
sahf
popa
cmp
loop
mov
testl
cmpl
cmp
inc
and
test
jnp
fisubl
mov
daa
pop
adc
out
dec
into
dec
push
add
movsb
inc
pop
xchg
jg
test
popa
dec
jge
jg
leave
mov
xchg
push
inc
jg
movsl
fiaddl
xor
push
jmp
cmpb
mov
test
dec
imul
out
jp
pop
xchg
mov
sbbb
aaa
repnz
test
xchg
adc
inc
imul
cwtd
mov
nop
mov
cwtl
and
arpl
fnstsw
inc
addr16
les
push
in
fisubs
sub
out
push
inc
sub
cmp
sarl
pop
adc
pop
je
mov
sti
hlt
mov
cs
and
inc
pop
test
fildl
shlb
int3
in
jbe
ljmp
dec
fidivl
les
je
pop
rcr
xchg
stc
mov
int
subb
inc
pushf
incb
sub
pop
or
subl
pop
push
push
mov
inc
repnz
cmp
or
xchg
lods
aaa
mov
shrb
mov
sbb
inc
cwtl
mov
jg
xchg
cmc
sub
sbb
sub
ret
and
mov
sbb
idivl
sti
and
xor
dec
cmpsl
xchg
data16
aad
into
in
or
out
mov
fcoml
inc
pop
insl
repz
push
loop
jbe
cltd
in
dec
into
test
movntps
jecxz
add
mov
inc
jae
pop
orps
mov
adc
add
andb
js
gs
jbe
push
adc
mov
sub
push
icebp
mov
add
or
sub
icebp
std
dec
mov
ja
sbb
xor
and
dec
scas
dec
sahf
sub
or
mov
add
ret
jae
and
lret
jae
mov
push
pop
fwait
push
sub
in
aas
rorl
out
push
push
pop
fsubp
pop
aas
mov
and
pop
scas
pop
int3
out
dec
shll
dec
push
cmpsl
sarl
mov
into
sbb
jno
add
xchg
popf
cs
sarl
pop
or
inc
mov
loopne
cmp
xchg
loopne
hlt
xor
dec
sbb
int
lds
loopne
stos
es
divl
repz
sbb
cmpsb
das
test
ror
add
jns
popf
movsb
movsb
push
daa
fistpll
jbe
shll
pop
add
sbb
xchg
shll
and
icebp
popf
jg
lahf
test
adc
cmpsb
mov
fwait
stos
out
das
dec
mov
and
or
pop
fcoms
test
lock
cmpsl
clc
push
jecxz
jne
sub
adcb
jp
leave
ret
cmpl
and
ljmp
or
test
popa
outsl
cwtl
sbb
xchg
push
ljmp
in
xor
or
lahf
data16
sbb
pushf
adc
dec
jae
out
dec
test
xchg
leave
cmpsl
scas
pop
stos
dec
mov
add
icebp
sub
aad
test
sbb
mov
sub
mov
movsl
and
mov
test
ret
sbb
addr16
shlb
push
or
dec
daa
dec
or
mov
add
dec
lock
stc
jo
mov
hlt
in
inc
xchg
nop
or
pop
xchg
loop
inc
ss
out
jno
scas
insl
call
and
push
push
insb
xor
fucomip
cwtl
mov
xchg
or
jne
pusha
sbb
stos
nop
pcmpeqb
cmp
lock
inc
cmp
je
jae
lods
jne
xor
dec
and
mov
fnsave
push
cmp
stos
mov
subl
xchg
sub
or
jecxz
mov
flds
push
xchg
out
and
aaa
aaa
ret
cmpb
addr16
cmc
push
leave
jl
dec
cltd
stos
add
mov
movsl
and
xchg
add
mov
aam
jbe
cmpb
aad
cltd
ljmp
pop
sub
data16
pop
sub
repz
lods
mov
mov
cmp
mov
lods
xchg
add
push
jge
sub
fs
and
add
pushf
cmc
call
outsl
cmp
addb
iret
jnp
xchg
inc
repz
mov
sbb
aam
mov
sub
or
lock
ja
or
jns
lea
and
mov
dec
in
mov
push
daa
insl
nop
shrw
or
xchg
inc
movsl
inc
std
pop
cli
aam
mov
inc
dec
and
pop
push
fsts
imul
add
mov
outsb
and
sub
jno
movsb
flds
push
pop
push
sub
mov
or
sub
mov
mov
iret
jnp
test
loope
and
jno
sub
ljmp
fistpl
icebp
jae
jae
lahf
stos
sub
in
pop
xor
xchg
xchg
or
cmpb
dec
cltd
jno
lock
xchg
movl
push
inc
xchg
pop
mov
aad
pop
xor
jnp
dec
jo
inc
scas
push
in
push
das
jg
int3
test
stos
cltd
nop
andb
jge
push
je
cmp
call
stos
dec
in
xchg
lahf
push
mov
scas
scas
pop
xchg
stc
mov
dec
or
jns
cltd
icebp
test
insb
iret
xor
inc
xor
push
sti
cltd
call
inc
fcoml
mov
jecxz
test
xchg
ljmp
mov
dec
push
rcl
sub
cmc
imul
jmp
sbb
fistps
pushf
cmpsb
insb
cmc
mov
or
adc
andl
xlat
mov
jg
hlt
es
aaa
dec
or
jb
push
test
mov
stos
xchg
jg
inc
call
movsl
stc
add
xor
mov
push
inc
pushf
jge
rcll
orl
add
imul
sarl
jge
mov
push
add
dec
pop
cmp
xchg
push
rcll
and
or
xor
adc
push
inc
fiadds
mov
popf
mov
xor
cmp
cmp
pop
mov
aas
adc
test
rclb
jl
adc
push
je
test
out
or
call
pop
imul
inc
inc
hlt
test
or
mov
cmp
getsec
and
in
popf
or
add
test
cs
stos
sar
mov
sub
xchg
fmull
jle
sbb
cmc
es
xchg
test
add
pop
jno
inc
fsubs
or
mov
aad
adc
mov
lahf
loope
jo
mov
and
enter
add
pushf
imul
cwtl
repnz
pop
adc
frstpm(287
sbb
jl
stos
xchg
jnp
stos
xor
ja
test
xor
mov
jecxz
dec
andb
rcrb
cmc
stos
in
scas
sub
mov
jmp
jno
stc
pop
xchg
movsl
adc
jbe
push
or
sbb
arpl
repnz
repz
adc
pop
loope
out
ficoml
xchg
mov
dec
pop
cmp
and
lahf
negl
push
jg
cmp
mov
jb
loop
mov
sbb
or
scas
pop
arpl
pusha
cmpsl
loopne
jne
inc
jl
lock
jns
iret
icebp
ret
and
push
jecxz
hlt
sbb
jnp
xlat
xor
stos
pop
xchg
das
les
dec
test
sbb
jge
sahf
iret
xchg
out
jp
adc
scas
xor
sbb
xor
or
cmpsl
jns
pop
pop
mov
cmp
or
ror
dec
popa
xchg
mov
fwait
shufps
and
xor
adc
mov
mov
and
cmpsl
cld
sub
or
mov
ljmp
add
push
inc
outsl
nop
or
flds
outsl
sbb
stos
jnp
adc
push
dec
fistpl
push
insb
ret
cwtl
cmp
cmpb
adc
int
je
aam
je
mov
lea
and
jno
lods
push
xor
fsubrs
or
lods
add
push
mov
xchg
lods
into
lcall
ret
aad
xor
add
rorb
pop
jl
call
mov
inc
sbb
or
ljmp
jne
fsubrl
xchg
add
cli
lds
ljmp
sbb
and
sbb
rcll
je
push
pop
in
cmp
fcoml
outsb
enter
inc
outsb
leave
jo
sub
cwtl
movsl
lret
adc
test
push
mov
int
push
and
js
repz
aaa
leave
loopne
mov
cwtl
and
pop
or
insb
sub
out
pop
add
loopne
mov
cld
push
cmp
mov
lock
push
push
scas
xchg
mov
and
dec
outsb
xchg
bound
out
jecxz
scas
icebp
push
jo
inc
sub
sub
imul
xor
mov
repnz
lret
mov
outsb
mov
mov
sahf
pop
lds
pop
xor
dec
adc
fld
je
dec
mov
xor
xchg
sub
clc
pop
bound
inc
ret
stos
pusha
insl
push
jmp
and
cmp
sub
jne
pop
std
pusha
push
xchg
or
and
add
nop
jg
push
test
aas
push
repz
jne
inc
pop
jnp
shll
cmp
daa
shlb
mov
enter
and
clc
push
pop
inc
out
pop
test
jnp
lahf
inc
rcll
aam
sub
mov
jb
test
mov
cmp
lret
pop
pop
xor
sbb
aad
aaa
sub
pop
hlt
pop
add
mov
jecxz
popf
cmp
nop
lock
xor
xchg
push
jmp
cmp
test
xor
lods
dec
sub
pop
or
cmp
testb
cmp
das
cmp
sti
test
mov
mov
aas
mov
test
lock
jle
out
imul
imul
mov
int
leave
rorb
es
addr16
xchg
rorl
aas
pop
into
or
inc
adc
cli
mov
sti
test
inc
jmp
push
das
ja
cmpsb
cmp
push
sub
out
pop
adc
daa
out
mov
or
sub
sbb
pop
mov
jg
and
inc
aad
cmp
lea
cmp
push
pop
sbb
cmpsb
pop
movl
lds
fldz
mov
cmpsl
fiaddl
or
push
jo
pop
add
add
clc
ss
es
lahf
stos
daa
sbb
cli
and
and
adcl
or
xchg
lds
jle
inc
aam
loop
xor
inc
push
test
and
pop
push
mov
les
jle
popa
lock
sbb
sub
push
stos
xchg
imul
insb
mov
das
and
aas
in
adc
mov
pop
or
add
mov
sbb
pop
pop
test
push
push
cltd
jecxz
pop
movsl
in
xor
cmp
add
pop
sbb
jnp
insl
sti
add
and
dec
mov
lock
and
in
xchg
test
xchg
inc
mov
pop
mov
test
aas
add
push
push
test
inc
jne
movl
jmp
bound
cwtl
jae
out
pushf
push
mov
ss
mov
pop
mov
dec
mov
or
mov
aaa
mov
pop
sub
mov
jp
lods
push
xor
and
popa
xchg
or
leave
scas
int3
dec
aaa
or
int3
ljmp
add
and
cmp
mov
aad
ret
adc
or
fisubrl
add
sub
pushf
cmp
lods
dec
xchg
cmpb
adc
xor
sub
adc
pop
pop
push
mov
aam
mov
insb
movsb
subl
lcall
inc
sbb
mov
nop
out
mov
bound
push
mull
repz
test
nop
int3
pop
sbb
aaa
mov
out
cmp
in
mov
cmc
cmp
cmc
filds
mov
insl
dec
jle
inc
sbb
fwait
jne
loope
scas
aas
js
mov
push
sbb
xor
push
cli
and
pop
movd
and
in
sbb
jmp
lea
mov
outsb
stc
iret
inc
dec
lret
dec
daa
xchg
mov
cmp
or
mov
stos
and
data16
xchg
xor
fiaddl
outsl
sub
sti
pop
sahf
out
dec
xchg
fsub
popa
mov
imul
enter
int
in
out
stos
popa
sub
aaa
fnsave
push
add
std
call
rcll
mov
imul
jp
out
lahf
imul
loope
mov
push
daa
xchg
add
dec
pop
aad
gs
or
arpl
lret
pusha
test
bound
scas
ss
cmp
shrl
sti
mov
jae
sub
pop
pop
dec
dec
dec
push
scas
jo
pop
xchg
add
into
lahf
in
mov
idivb
xchg
sbb
arpl
in
ret
int3
push
es
mov
test
xchg
js
mov
imul
xchg
inc
add
out
sbb
xchg
pop
inc
jmp
out
pop
mov
out
push
pop
mov
pop
inc
stc
inc
lahf
jp
es
jl
mov
add
push
jb
push
dec
ja
lret
adcl
and
aaa
adc
in
outsb
sub
mov
lea
mov
push
jp
xor
push
addb
mov
adc
imul
addr16
jns
out
or
mov
add
sti
jmp
popf
or
jecxz
jp
mov
cli
jns
repz
shrl
ret
imul
xlat
inc
inc
fdivs
xchg
jae
or
adc
ret
or
pop
sub
sub
jge
mov
or
in
cs
xchg
lods
mov
pop
iret
jg
mov
xchg
inc
js
jae
cwtl
mov
daa
arpl
lock
sub
mov
or
sub
aam
inc
adc
notb
repz
push
popf
mov
bound
push
mov
jbe
cwtl
repnz
xor
addb
mov
push
add
aaa
nop
dec
testb
jbe
pop
aas
dec
mov
bound
add
and
pop
fcoml
push
jb
pusha
xor
xchg
push
outsb
lods
mov
clc
sarb
lods
sub
push
inc
xor
sbb
dec
xchg
pushl
fs
stos
mov
mov
jne
or
daa
pop
jb
repnz
out
fistpll
mov
pop
inc
out
sub
call
adc
ret
in
add
xchg
stos
std
out
nop
add
push
or
xor
addr16
lds
adc
sub
lret
scas
adc
dec
cmp
dec
arpl
pop
fdiv
sbb
ss
adc
push
popa
xchg
fwait
inc
mull
cli
cld
and
pop
inc
out
arpl
cltd
lcall
jbe
lahf
scas
into
jae
aam
sbb
or
xor
or
int3
xchg
xor
sbb
loope
push
xlat
call
inc
insb
loope
sub
mov
mov
mov
push
gs
mov
lret
leave
dec
test
cs
call
pop
xchg
cmc
insb
lods
fstpt
data16
jno
popa
push
mov
sbb
out
push
jb
lods
fisubs
movsl
jb
js
rclb
mov
cmpsl
popf
test
dec
cli
or
add
movsb
test
es
xor
mov
lods
xor
iret
int3
push
xor
arpl
loope
or
outsl
aad
mov
fsubp
push
cltd
dec
enter
mov
or
xor
sbb
pop
jb
das
sbb
push
daa
cli
inc
cmp
cmp
or
fsubp
out
insl
xor
xor
adc
lret
add
adc
adc
addl
jne
push
jbe
add
mov
pusha
cwtl
mov
gs
cmp
pusha
pop
int
lock
xor
cmp
sub
push
cmp
movsl
add
imul
int
andb
jp
dec
xchg
pop
enter
rcl
dec
xchg
and
and
pushf
and
mov
out
adc
push
mov
cld
mov
lret
jae
mov
sbbb
and
hlt
fwait
je
outsl
js
inc
stos
inc
roll
lret
pusha
sub
push
or
orb
sbb
ss
mov
idiv
cmova
adc
js
stc
dec
xchg
or
lods
sbbl
stos
and
mov
or
ret
pop
inc
cmp
insb
fsts
bnd
hlt
pop
sahf
xor
insb
outsl
push
dec
jae
inc
xchg
in
repnz
mov
push
inc
std
das
sub
loope
shr
iret
test
or
jle
lods
sbb
lods
std
lock
pop
adcb
into
sbb
mov
js
addb
xchg
and
mov
mov
sbbb
jbe
fistpl
mov
iret
sub
daa
scas
push
add
xchg
sbb
mov
stos
test
pop
and
mov
leave
rclb
imul
mov
out
or
outsb
or
inc
stos
sbb
lret
add
daa
icebp
adc
ljmp
cmp
int3
insl
and
xchg
sbb
xor
fs
repnz
mov
in
add
push
stos
pop
adc
cli
shl
xchg
cmp
jae
push
lods
or
stos
es
lret
jp
scas
xchg
outsl
lret
movl
test
adc
fisubl
ds
daa
into
hlt
pop
push
inc
lret
loope
fsubrl
lahf
add
ss
insl
inc
popf
test
lds
sbb
jmp
in
or
dec
lods
shlb
iret
dec
aad
mov
xchg
jmp
mov
pop
cmp
add
jp
hlt
fwait
sbb
mov
or
mov
out
cld
dec
je
jae
sub
cmp
shl
cld
cs
bound
or
cmp
es
sahf
sub
outsb
xchg
cmpsb
mov
mov
adc
call
lret
jo
pop
cmpsb
leave
scas
loopne
or
push
repnz
jns
and
jle
xor
xor
decl
popa
mov
sub
pushf
pop
aam
jb
scas
scas
rcr
pop
repz
ss
pop
xchg
movsl
mov
xor
xchg
xor
mov
push
daa
xchg
sbb
gs
fisubrs
sbb
andb
mov
dec
cmc
ds
clc
mov
jne
push
jmp
lcall
pop
push
out
sti
xor
movsl
loopne
lods
lahf
ljmp
or
popf
cmp
mov
cmpsb
iret
inc
out
sub
jb
dec
mov
fstpl
inc
lods
sub
das
cmpsl
inc
dec
test
fistps
sub
or
mov
aad
pop
push
aam
inc
jle
push
imul
sbb
or
push
jg
fdivs
jp
cmp
dec
sub
and
mov
xchg
jmp
call
cmp
cltd
sarb
out
pop
push
cmpl
mov
out
push
lret
adc
jecxz
push
aam
sbb
mov
cmp
inc
pop
mov
sbb
ficomps
adc
mov
sub
std
pop
push
lret
out
inc
sbb
mov
ja
jb
jecxz
icebp
hlt
fwait
gs
div
xor
xor
push
leave
push
and
hlt
jle
mov
xchg
xchg
stos
sub
dec
and
cmp
mov
in
sub
lret
xor
add
add
pop
mov
jg
dec
jle
sbb
fcoml
sti
in
xlat
xor
fldt
lret
addb
or
jmp
push
dec
xor
mov
xchg
adc
lcall
push
mull
shl
lods
mov
rclb
ret
popf
sbb
int3
subb
lds
rcll
push
jnp
fwait
lahf
push
fsubl
pop
pop
jbe
or
mov
dec
add
cltd
mov
lods
cmp
aam
mov
jb
std
add
imul
push
pop
clc
cmp
mov
shrl
subb
inc
inc
xchg
pop
or
fisttps
cmp
imul
dec
xchg
dec
push
xchg
sub
out
into
jg
notl
aaa
out
fcmovu
jns
call
daa
lret
xorb
movsb
mov
inc
jge
cwtl
inc
aad
data16
or
pop
jmp
jae
lock
inc
int3
or
pop
sbb
mov
mov
mov
stos
mov
imul
lret
xchg
push
jl
and
scas
fcompl
je
dec
push
repnz
jno
stos
test
sbb
imul
rcll
mov
xor
cmpsb
cmpsl
push
mov
out
adc
repz
cmpsl
push
sub
dec
enter
ljmp
and
out
hlt
mov
jp
fnsave
mov
rorb
mov
aam
cmpsb
pop
lock
and
sbb
cmpsl
rep
out
jl
dec
fsubrs
cs
dec
aad
popa
ret
inc
daa
mov
sbb
cmp
xchg
and
cltd
add
xchg
lea
test
inc
add
mov
or
pop
insb
out
dec
stos
out
pusha
stc
push
imul
inc
push
xor
andb
cmp
inc
fstpl
cmc
call
push
inc
inc
inc
xchg
pop
lcall
aad
sbb
adc
and
imul
ss
in
loop
pop
dec
scas
mov
mov
in
mov
cmp
mov
mov
cmp
cmpl
cmp
fs
adc
or
lcall
mov
inc
imul
add
outsb
jp
cmp
mov
mov
jge
cli
and
out
arpl
cmpsl
xlat
imul
push
xor
jae
xchg
jge
push
into
mov
inc
insl
adc
push
adc
jg
inc
ret
stc
pop
cmova
lcall
pop
pushf
mov
push
or
scas
idivb
rcll
sbbb
mov
rclb
lods
xor
daa
mov
clc
inc
loopne
jge
dec
mov
test
psllq
inc
push
xchg
pop
cmpsb
xchg
gs
stos
sbb
stos
mull
js
loopne
dec
mov
inc
xchg
mov
iret
push
pushf
or
inc
xor
inc
jns
lret
jne
pop
insb
pop
xor
and
lods
ljmp
cmp
mov
pop
and
stos
lds
jno
dec
sbb
jg
jo
dec
insb
xor
or
test
or
cmp
xchg
ret
mov
fcoms
je
cld
push
adc
or
stc
cld
xor
lods
sbb
jmp
jae
mov
mov
ljmp
mov
mov
sarl
nop
loope
std
add
dec
outsl
jp
stos
mov
add
pop
jnp
pushf
hlt
adc
adc
xchg
test
jo
inc
icebp
addb
addr16
outsl
jecxz
jl
cs
cmp
add
out
xchg
popf
ret
add
gs
mov
inc
mov
xchg
mov
add
fnsave
into
rorb
dec
int3
rolb
aam
outsl
xchg
sbb
dec
lcall
mov
mov
cwtl
imul
cmpsl
sub
and
adc
mov
or
dec
vandnpd
xor
inc
pop
cli
dec
adc
imul
lret
mov
or
or
jmp
mov
out
pop
or
leave
or
dec
xchg
inc
xchg
or
push
mov
les
mov
ja
sar
fisttpl
scas
add
je
add
xchg
int3
pop
nop
dec
rcll
shlb
pop
inc
pusha
mov
orl
jbe
in
ja
test
ret
andb
xor
addl
sbbb
jnp
pop
jmp
pop
in
icebp
rcl
sbb
mov
std
xor
mov
es
ljmp
and
jl
call
push
dec
or
test
mov
in
fsubl
aaa
mov
xchg
ret
out
mov
xor
fwait
cld
icebp
rorb
rorb
psrlq
dec
stos
pop
pop
mov
in
outsl
rcrb
mulps
xchg
dec
pop
cmp
pop
pop
xchg
inc
fucom
pop
loop
inc
movsl
jl
adc
enter
push
lcall
push
lcall
jmp
pop
fstpt
xchg
in
stc
pop
xchg
sarl
daa
and
pop
popf
sub
sti
aas
pop
mov
jo
sub
adc
or
mov
mov
shrb
insb
mov
inc
inc
arpl
xor
jae
sub
pop
xor
in
pop
cmp
jmp
pop
repz
aam
iret
shlb
test
rcrb
mov
adc
aas
and
es
mov
movzwl
ljmp
in
inc
and
lahf
icebp
jge
clc
mov
subb
es
mov
pop
clc
dec
push
fstps
outsb
nop
ja
xchg
pop
xchg
cltd
repnz
push
mov
leave
mov
stos
lret
dec
lahf
xchg
inc
push
sbb
movsl
push
dec
pop
insl
orb
inc
sti
xchg
clc
mov
dec
dec
dec
stc
jne
cmp
sub
cmp
int3
jecxz
fnstenv
das
push
sub
popf
sub
clc
les
cmp
mov
adc
insb
cmpsl
sub
jmp
add
sbb
sarb
add
test
ret
hlt
push
std
testl
ja
add
xchg
cmp
ljmp
enter
cmp
lds
push
sbb
jmp
repnz
lcall
dec
mov
inc
lods
gs
xor
in
push
in
mov
xchg
lods
inc
sbb
xor
enter
lret
in
ds
fisubs
aaa
jl
leave
scas
loope
add
mov
fisubrs
pop
nop
scas
jne
hlt
mov
repz
and
cmp
orb
mov
sub
dec
jg
lret
cmp
push
xchg
jns
mov
repnz
inc
cmpsl
lds
fcom
push
ret
mov
jecxz
pop
popa
push
add
sbb
mov
dec
pop
rcrl
jnp
hlt
sbb
jb
pop
dec
mov
ret
mov
xchg
inc
mov
lret
inc
shll
xchg
or
movsl
int
cmp
jns
and
sub
out
cli
fwait
push
sbb
mov
out
mov
insl
int
cmp
push
loope
cmp
test
dec
mov
mov
inc
ret
addl
and
jo
mov
repz
push
insl
sub
mov
fs
ret
mov
adc
dec
push
jl
stos
sbb
dec
loopne
imul
popa
jg
xchg
outsb
rcll
jmp
leave
sbb
xchg
pop
dec
or
xorb
stos
add
mov
and
stos
dec
imulb
test
dec
bound
jae
pop
shlb
aas
jmp
hlt
mov
cld
adc
and
lods
hlt
cmpsl
sub
and
push
mov
sub
dec
bound
call
dec
mov
xchg
or
clc
jo
ss
shrl
int3
mov
inc
sub
mov
shlb
je
jge
or
dec
pop
in
bound
je
cmc
mov
cmp
mov
xor
pop
insl
cmpsb
lods
sbb
mov
cmpsl
xor
sarl
into
mov
fdivrp
xchg
aam
lods
repnz
sbbb
enter
push
xchg
iret
push
bound
cmp
mov
pop
sub
je
mov
leave
cmpsb
lahf
adc
mov
ljmp
and
fs
mov
jp
cli
or
push
insl
shrb
insl
je
pop
loop
lahf
jb
or
and
gs
fldt
lea
mov
bound
aad
sbb
in
std
out
fsubl
dec
dec
popf
sub
scas
mov
or
push
fbld
imul
dec
cmp
mov
push
add
mov
push
repz
fs
hlt
dec
sbb
cmpsl
and
cmpsl
push
enter
xor
sub
mov
iret
jmp
pop
xor
imul
outsl
das
mov
imul
imul
add
and
add
mov
sub
stc
or
mov
fstl
in
push
ret
jl
jl
mov
push
ror
sub
jl
add
push
and
jl
cmpsl
push
lret
out
addr16
mov
adc
mov
add
out
movsb
hlt
cld
gs
popf
hlt
add
cmpsb
jne
pop
and
mov
jle
pop
push
int
push
popf
adc
inc
shll
mov
adc
or
mov
adc
mov
pop
addr16
mov
push
test
mov
int
and
mov
push
push
fdivrs
xchg
mov
and
icebp
fcmovne
sahf
push
loope
sbbb
xchg
insb
xchg
enter
mov
or
xchg
dec
decl
cmp
pop
imul
xchg
mov
sbb
push
pop
dec
ret
in
xchg
orb
sub
inc
xchg
inc
pop
fstpt
mov
mov
xor
add
jecxz
jecxz
inc
mov
push
add
pop
cmp
test
push
fld
add
ds
shl
push
loop
lahf
cmpsb
testl
and
jbe
sahf
lea
mov
lds
sub
push
insb
sbb
idivb
cmp
shrl
and
int
lds
negl
mov
xchg
mov
mov
nop
jge
pop
aas
test
and
je
movsl
aaa
xchg
nop
addr16
rorb
cs
push
fnstcw
and
and
mov
enter
push
adc
inc
lock
sbb
bound
aaa
jmp
dec
pusha
xchg
push
cmpsl
inc
sahf
js
pusha
repnz
je
in
pop
in
inc
xchg
icebp
subl
pop
outsl
ljmp
mov
inc
jl
xor
fcom
xlat
add
subb
fcompl
push
ret
aam
cmpsb
push
mov
imul
xor
or
xchg
rcll
xchg
pop
int
js
orb
repz
mov
mov
int3
ss
mov
fwait
push
lods
out
sbb
imul
sbb
insl
xorl
outsl
movsl
push
faddl
aam
and
push
es
je
mov
aas
call
pusha
test
fs
or
jecxz
popa
adc
in
mov
fbstp
adc
std
imul
and
add
inc
icebp
lcall
imul
test
or
push
or
xchg
ljmp
and
sbb
mov
into
add
xor
mov
push
push
cmc
lods
dec
sub
iret
das
mov
clc
mov
fwait
push
cmpsb
sbb
pushf
and
sub
adc
out
mov
adc
or
xor
xchg
into
xor
jecxz
cmc
cmp
jp
mov
lds
ret
aas
mov
fwait
lods
andl
pop
mov
enter
push
fnstcw
test
lahf
xor
stos
cmp
push
icebp
push
lods
pusha
pop
nop
sti
sbb
mov
cmp
lcall
push
and
outsb
mull
mov
icebp
int
push
dec
sbb
cmp
jg
mov
adc
mov
aad
insb
movzbl
mov
in
out
mov
cmp
dec
into
mov
fstpt
insb
out
pop
sub
aaa
jnp
lds
cwtl
clc
xchg
dec
inc
repz
fsts
movl
adc
fwait
rorb
dec
pop
imul
cmp
repnz
jecxz
unpckhps
adc
or
jle
es
sub
mov
xchg
ja
mov
inc
sbb
cwtl
lds
pushf
dec
into
add
sub
andb
divl
mov
ret
arpl
xchg
cmp
aad
jns
dec
inc
rcll
xchg
imul
dec
adc
push
in
sbb
push
jno
push
mov
pushl
cld
jb
mov
or
shll
cs
push
cmp
movsb
xchg
lahf
leave
jg
or
sarb
adc
dec
ret
cmp
cmp
sahf
jle
add
cld
pcmpgtd
sbb
mov
push
inc
xor
or
aad
mov
mov
add
push
lock
xor
push
rcrb
push
mov
sahf
out
cmpsb
stos
cld
mov
jno
mov
add
jbe
adc
cmpb
in
push
test
pop
das
lds
xchg
push
jne
gs
inc
and
das
fisttps
in
cmp
out
cs
dec
lods
xor
and
lret
xchg
jbe
scas
loopne
pop
adc
cld
xor
int3
movsl
add
in
out
aaa
mov
or
outsb
loopne
dec
fistpl
xlat
xor
fdecstp
mov
sbb
cmp
insb
mov
loop
jns
sbb
pop
jo
xchg
fisttpl
xchg
shll
jnp
pushf
cmp
hlt
adc
add
fcmovu
mov
xor
dec
add
mov
pop
sub
jge
insl
js
les
rcl
in
xor
lcall
inc
pop
rcll
jge
loop
ja
adc
bound
aam
dec
jne
mov
pop
cmp
je
mov
mov
sbb
cld
arpl
mov
fldl
dec
dec
ja
rorl
ret
imul
setb
int
mov
jno
int
mov
sub
cltd
mov
push
pop
sub
call
mov
idivb
gs
or
xchg
sbb
and
inc
xchg
mov
jle
mov
and
cmp
clc
fimull
add
inc
cmp
pop
or
loop
movsl
loop
push
sbb
je
dec
xchg
int3
jecxz
lods
jmp
jmp
pop
stos
sbb
aaa
lea
or
call
and
push
sahf
outsl
adc
scas
or
pushf
test
test
dec
add
std
in
push
das
pop
lea
push
dec
ret
mov
inc
mov
insl
outsl
push
fiaddl
dec
xchg
enter
test
push
out
push
insb
std
mov
movsl
std
data16
xchg
sbb
stos
mov
pop
pushf
jae
xlat
mov
push
xchg
fadd
jno
addr16
imul
fstps
and
pop
cmp
flds
sub
outsb
fwait
pop
or
shrl
add
lcall
cli
push
xchg
imul
inc
aam
dec
mov
imulb
mov
xchg
ss
stc
out
in
fidivrs
mov
inc
mov
scas
or
or
inc
xchg
cmpsb
cli
lock
adc
sbb
lcall
adc
iret
add
test
ss
lea
test
adcb
sub
pushf
sub
jl
movsb
cs
pop
les
cmp
cmp
addb
mov
sub
cmp
adc
sahf
int
jno
jae
pusha
xchg
xor
pop
fmuls
add
jne
int
sub
push
pop
mov
adc
or
mov
adc
out
pop
cmp
je
lret
add
or
std
and
pushf
pop
xor
or
sub
and
test
rolb
mov
insl
mov
movsl
inc
mov
pop
out
push
add
int
test
jmp
sbb
and
jo
cmp
lds
xor
scas
jne
push
adcl
cmpsl
add
sub
lret
aad
aam
scas
pusha
imul
xor
mov
es
stos
fbstp
cwtl
mov
dec
push
cli
xchg
insl
dec
pushf
mov
jg
aam
sub
jg
ss
xchg
mov
mov
movsl
imul
sbb
xchg
inc
push
inc
in
in
setp
sbb
sbbb
inc
fisttpl
and
push
ror
rol
ss
or
add
fisttpl
xor
and
add
xchg
add
pop
pusha
pop
jg
repz
rcrl
mov
rcrb
les
add
add
js
inc
cmp
or
add
xchg
xchg
imul
xor
shll
or
dec
mov
push
or
jecxz
lods
mov
loopne
fadd
push
mov
pushw
push
mov
sbb
arpl
sbb
cmpsb
movsb
aas
add
xchg
mov
cmp
jno
sub
xor
or
jbe
ret
or
test
repnz
cmpsb
pop
lods
jbe
pop
mov
sbbl
xchg
ds
rcrb
in
mov
loope
iret
loope
lcall
mov
push
fildl
sub
sbb
add
cwtl
mov
faddl
pop
and
mov
mov
lret
jp
int3
push
push
nop
adc
lcall
xor
mulb
xchg
inc
mov
lret
dec
add
mov
add
mov
cmpsb
inc
xchg
inc
xor
out
ljmp
pop
jp
mov
mov
jo
sub
push
cmp
adc
stc
xchg
js
movsb
imul
mov
mov
je
test
push
repz
fsubrs
pop
xor
test
jo
cmpb
xchg
lds
mov
xor
jge
clc
lret
int
out
inc
inc
xor
jmp
adc
or
lods
pop
data16
inc
add
insb
std
xchg
adc
xor
or
jns
sub
mov
xor
adc
push
push
and
outsl
add
mov
sbb
in
push
or
outsl
add
xor
jge
fcmovne
adc
mov
lds
cmp
je
pop
or
mov
sub
mov
add
jns
imul
mov
sar
stc
cmp
hlt
out
cmp
mov
fldt
scas
ja
fiadds
fstp
das
out
jno
in
out
xchg
mov
or
and
test
jno
lret
mov
add
je
or
inc
fistl
mov
loope
in
pushf
jno
or
and
pop
sbb
xlat
cli
sbb
jnp
sbb
lock
std
mov
fwait
or
push
cmp
outsb
lock
lahf
call
aaa
fiadds
clc
sub
adc
arpl
rorb
push
and
scas
sub
jo
int3
xor
pop
sbb
movsb
fisttpll
out
jge
loope
pop
push
pop
sbb
jb
cmpsb
xchg
test
jle
call
out
jno
mov
push
mov
cmp
sbb
loope
sbb
xor
jbe
std
dec
dec
push
and
daa
pop
dec
pop
push
mov
repz
jns
and
pop
inc
cmp
addr16
inc
jns
loop
jnp
ljmp
js
int3
inc
fimuls
push
mov
fwait
sahf
xor
jno
jmp
pop
aam
lods
mov
lock
insl
mov
lret
cmp
scas
inc
js
mov
out
pop
dec
cmp
daa
inc
decl
call
bound
lea
mov
lods
mov
ret
sbb
out
and
int
xchg
loop
sbb
mov
or
cmc
mov
jbe
adc
mov
jg
aaa
add
test
lret
push
sub
xchg
dec
and
push
lds
mov
into
arpl
xchg
fwait
insl
adc
mov
push
mov
jmp
arpl
test
ret
pop
cmp
insb
out
mov
lods
jle
aad
or
scas
mov
inc
rorb
adc
mov
jne
mov
repnz
loope
movsl
in
mov
jo
lds
gs
ss
or
lret
outsb
jg
sbb
aad
pop
int3
xor
add
cmp
test
xlat
mov
arpl
pshufw
mov
aam
dec
or
pop
call
addr16
mov
xor
mov
sub
pop
subl
cmp
fsubs
in
sbb
sar
cmp
ds
or
into
jmp
inc
mov
paddd
xchg
xchg
ss
push
movsb
js
cmpsl
mov
out
dec
mulb
stos
fmuls
aad
stc
fstp
xchg
push
mov
fcmovu
fimuls
cwtl
pop
or
inc
dec
xchg
cmp
lock
jl
test
sbb
bound
push
jp
pop
test
and
mov
dec
or
xchg
xchg
out
idiv
pop
or
je
sub
xchg
not
jle
je
rcrb
push
and
fwait
test
and
mov
jns
std
mov
iret
xor
jmp
lret
mov
xchg
mov
sub
roll
cmpsb
pop
jecxz
pop
adc
sbb
test
dec
mov
es
push
jp
movsl
or
or
sub
mov
dec
icebp
in
pop
js
cmp
add
inc
xor
clc
or
pop
movsl
jp
pusha
sbb
dec
cmp
mov
lret
pop
pop
dec
dec
mov
jg
aaa
shlb
mov
insl
leave
ja
cld
jg
jo
shlb
fnstcw
jns
out
dec
mov
lahf
aad
ds
in
rorl
xor
jns
cmp
mov
mov
fisttps
mov
ds
xchg
push
sbb
and
mov
shrl
lret
aad
sub
ss
stos
mov
push
ljmp
jbe
jb
push
test
mov
push
xor
mov
je
loope
cmp
xor
roll
or
add
dec
cmp
pop
cli
sbb
push
ret
push
icebp
jge
insb
aaa
add
ljmp
mov
inc
jle
dec
jo
in
nop
leave
adc
xchg
pop
int3
pop
xchg
daa
cmp
mov
pop
push
xlat
mov
aam
fldl
xor
mov
jmp
je
cwtl
jg
jb
add
cmovp
adc
ret
cltd
and
mov
cltd
test
add
jl
or
sbb
addb
mov
adc
sub
pop
adc
lcall
dec
repz
adc
insb
mov
mov
inc
hlt
sbbb
cltd
and
mov
xchg
add
ret
hlt
mov
or
push
lcall
ljmp
out
xor
adc
loopne
call
jnp
outsl
faddl
add
popf
int
aas
push
cli
add
and
xchg
mov
push
roll
add
idiv
xor
fwait
xchg
push
arpl
jns
xor
inc
fdivr
loop
cmp
xor
adc
jl,pn
clc
xlat
aad
sti
push
push
push
cmp
and
pop
sub
out
pop
mov
xor
sbb
pushf
cmp
xchg
fcmovu
mov
cmp
loop
jg
clc
xlat
adc
loop
add
out
push
test
or
mov
loopne
pop
icebp
outsl
xchg
ret
jle
and
xchg
das
das
lds
insl
xchg
fidivrl
push
adc
lret
insl
push
icebp
add
jle
push
mov
adc
pop
cmc
or
cld
jmp
sbb
ljmp
cltd
or
xchg
mov
mov
fisubs
insb
pop
scas
push
push
push
jge
addl
cmp
mov
fmuls
mov
fstl
insb
mov
sub
mov
jb
mov
and
imul
fsubs
loop
test
cld
lret
adc
inc
call
mov
scas
xchg
pop
clc
jl
cmp
lahf
add
rorb
dec
fbstp
dec
mov
fists
push
jne
add
mov
jp
mov
xor
sti
or
std
lods
adc
mov
lahf
outsb
cs
jbe
cmp
xor
stos
lock
or
clc
mov
rol
dec
or
out
adc
mov
jle
pop
mov
mov
jns
mov
lods
das
pop
inc
xchg
roll
daa
shlb
aas
fs
repnz
mov
icebp
cmp
xlat
pop
int3
pop
adc
repz
xor
push
pop
in
dec
sbb
inc
dec
mov
mov
mov
dec
push
xchg
sbb
mov
add
scas
jg
push
hlt
gs
pusha
jno
outsl
stc
insl
adc
test
mov
lcall
in
stos
gs
sub
popf
scas
mov
adc
lret
dec
dec
mov
dec
insb
fiaddl
inc
fnstsw
inc
dec
add
mov
pop
mov
mov
xorb
mov
adc
sub
rorl
xchg
insl
sub
cmp
ret
dec
jmp
push
clc
inc
xchg
je
jecxz
pop
dec
xor
lods
loope
sahf
imul
mov
push
mov
fcoms
mov
and
lods
dec
lret
push
mov
lret
dec
xor
insb
gs
incl
add
jae
push
stc
sti
add
stc
aam
mov
ret
fsubrl
pushf
inc
icebp
push
sub
xchg
icebp
fsubrs
in
mov
enter
pop
dec
ret
sbb
int3
push
mov
lahf
xchg
add
mov
incb
sbb
jle
hlt
mov
mov
loopne
jmp
outsl
inc
cmc
mov
push
test
push
stc
scas
and
sub
mov
push
pop
push
jmp
cwtl
nop
lods
rcl
mov
clc
mov
or
push
jge
add
insl
clc
mov
jl
cmpsl
inc
mov
dec
bound
fcoms
mov
jmp
pop
jnp
stos
das
imulb
lock
pop
arpl
lret
addr16
xchg
jns
jge
xchg
dec
and
movsl
fcomps
pop
inc
sub
sbb
or
jecxz
loop
rol
jge
ja
jae
pop
movsb
mov
mov
ja
xor
mov
mov
insb
xor
or
into
test
movsb
jge
jmp
xchg
cwtl
xor
or
int
and
insl
push
dec
ds
mov
movsl
ret
pop
stc
int3
mov
mov
push
sti
lahf
hlt
ljmp
out
jnp
sub
xchg
int
adc
repz
lcall
sbb
push
xchg
rcll
dec
cmpsl
jno
mov
lods
add
nop
mov
lock
add
movsb
mov
scas
cmp
adc
ret
pop
pop
push
inc
cmp
xor
xor
mov
mov
cmp
inc
and
and
pusha
out
aad
xor
cmp
subl
jne
mov
aam
std
in
mov
pop
fwait
cmp
pop
out
mov
insb
out
fwait
shll
sub
ljmp
dec
inc
aas
ljmp
insb
or
mov
mov
pop
jp
mov
roll
sbb
add
enter
mov
lods
into
shrl
imul
inc
shrb
daa
pushf
cmpsl
jmp
jp
stc
movsl
and
aam
ss
icebp
push
fdivs
mov
xor
cs
in
dec
ja
inc
jns
push
orb
repz
sahf
inc
test
mov
inc
pop
addb
push
push
mov
and
push
dec
adc
mov
push
je
xor
dec
repz
test
ror
mov
fildll
mov
test
out
ja
daa
inc
jno
push
push
aaa
add
popa
mov
adc
and
xor
xor
xchg
js
jne
mov
or
jns
push
add
mov
loope
pop
das
push
xor
popa
sub
dec
or
push
int
mov
pop
imul
mov
mov
add
push
mov
or
lods
shlb
addl
ss
adcl
mov
dec
scas
or
imulb
test
std
test
sbb
xorb
or
sub
gs
jnp
das
xchg
daa
std
test
and
iret
imul
stc
jg
mov
rcl
pusha
insl
hlt
xchg
test
xchg
push
pop
adc
xchg
push
repz
repz
or
mov
or
bound
sbb
xor
sarl
sbb
jb
inc
bound
pushf
jbe
cmp
mov
xchg
imul
xor
dec
scas
cmp
xchg
cmp
push
pop
test
test
daa
mov
aad
pusha
or
xor
orl
xor
mov
or
push
imull
sub
int3
sub
aas
xor
out
cmp
ror
out
movsb
and
and
sub
fdivp
mov
add
sahf
ja
insb
sbb
pop
xchg
add
outsb
xchg
inc
push
outsl
jns
js
xchg
in
xor
pop
es
xor
mov
lods
sti
pushf
xor
mov
stos
mov
xchg
xor
inc
dec
fstps
adc
cmp
pop
inc
sub
cmp
inc
out
and
das
lds
xchg
cmp
inc
sub
lret
mov
es
testl
mov
xor
or
dec
lcall
jle
into
int
mov
xchg
push
roll
inc
in
adc
popf
inc
subb
rol
dec
popa
in
pop
xor
xchg
jb
test
aad
cmpsl
cmp
push
ljmp
aam
aad
rol
jns
aas
xor
and
mov
or
push
push
push
lea
les
push
pop
sub
das
cs
repz
hlt
sub
xor
outsl
lahf
adc
pusha
imul
push
jl
loope
out
pop
jbe
inc
fucomi
jne
add
das
psraw
mov
mov
add
jl
and
mov
mov
mov
into
cmp
push
mov
arpl
mov
into
faddl
sbb
lcall
xchg
pushf
fs
lea
push
and
jb
fcoml
imul
vcvtss2si
adc
and
arpl
xor
ss
rorl
add
lods
mov
sub
jle
inc
xchg
stos
jno
rorl
dec
pop
icebp
mov
stos
jl
sbb
xor
add
mov
jo
cmp
imul
addl
xorl
xchg
adc
mov
stc
fstpt
xchg
sub
sub
loope
test
xorb
add
and
mov
mov
adc
enter
cmpsl
and
and
push
sbb
fadds
sub
addl
mov
fidivs
cmp
xor
adc
sub
mov
push
jg
xchg
mov
arpl
push
push
testb
pop
cmp
jmp
adc
push
lret
aaa
lcall
icebp
pushf
mov
jecxz
mov
cmp
sub
movsl
jmp
data16
fsubs
xor
mov
icebp
mov
verw
mov
shl
inc
shl
std
movsl
fcomps
push
stos
mov
loopne
add
popa
add
lea
mov
and
cmc
in
jp
and
push
xchg
es
add
lock
rcrl
hlt
fsubrl
push
mov
xlat
ret
mov
repnz
mov
je
push
mov
mov
xchg
xor
xchg
xchg
out
xchg
add
lcall
mov
lret
in
stos
push
stos
fcompl
sbb
fwait
add
int
pop
loopne
mov
cmpsl
stos
mov
pop
push
pop
push
movsl
out
pop
mov
cs
xor
imul
add
lea
dec
sub
lods
lahf
fidivrl
popa
inc
push
mov
lea
mov
scas
hlt
add
sarb
mov
cmc
test
lret
sti
add
cmp
sbb
push
fsubrs
and
dec
lods
mov
jb
sub
ljmp
nop
dec
outsl
incb
icebp
xchg
iret
or
cltd
push
nop
inc
aam
mov
pushf
icebp
jmp
add
push
dec
mov
mov
test
subb
inc
jne
mov
dec
in
addr16
mov
xor
push
rcr
jno
inc
sub
mov
mov
out
daa
push
fsub
ret
cmpsl
int3
lret
xor
std
dec
outsb
lock
pusha
fnstcw
sub
inc
xor
xchg
inc
setae
mov
cwtl
vmread
lock
sbb
bound
adc
cmp
jp
out
scas
xor
or
inc
push
hlt
mov
bound
ss
scas
int
shlb
es
addr16
cmp
ret
ja
lret
xlat
cmp
fdivrl
orl
add
xor
xchg
sub
addr16
rcl
jmp
and
bound
cmp
and
pop
sahf
cltd
mov
inc
ret
insl
sub
loop
out
ljmp
hlt
push
fwait
adc
les
pushf
aad
add
cmc
andl
xor
in
test
inc
push
loopne
ss
sub
fstpt
sub
in
inc
lar
imul
pop
fimuls
popf
inc
stos
xor
mov
lahf
jecxz
les
mov
inc
inc
inc
imul
not
cmp
repz
push
xchg
ret
pop
cmp
jnp
fnstenv
cli
add
mov
dec
and
mov
js
mov
xor
or
mov
test
cmovns
cmp
dec
xchg
movsl
shll
decb
sbbl
and
cmp
and
xor
fsts
lcall
lea
cld
les
dec
pop
out
inc
fucom
sbbb
test
in
pop
push
xchg
and
and
sbb
mov
stos
xadd
lahf
inc
sub
cmp
mov
enter
mov
lock
fwait
ret
lret
jo
shrl
fimuls
incl
xor
iret
cld
push
pop
pop
jbe
sbb
jnp
cs
jg
add
add
pop
mov
cs
pop
rol
movsb
out
mov
test
test
loop
sub
nop
adc
loop
push
ror
clc
sub
mov
lret
dec
int
pop
sbb
xor
xor
pushf
xchg
insl
xchg
jmp
outsb
sub
je
push
out
xor
mulw
pop
pop
push
and
mov
imul
and
mov
and
add
mov
arpl
outsb
das
cmp
ret
or
sahf
mov
aad
mov
movsb
jge
mov
mov
lock
xor
fnsave
icebp
loope
jle
dec
int
cmp
mov
mov
push
add
nop
push
shlb
clc
cmp
mov
test
das
and
mov
and
test
dec
pop
fnsave
je
aas
lret
mov
leave
jl
cs
pop
stc
cli
mov
in
pop
adc
movsl
stos
adc
mov
test
jl
cmp
sahf
shlb
out
sub
roll
in
cmp
cmp
lds
lret
clc
add
and
hlt
adc
dec
aas
loop
insb
in
in
sbb
and
mov
fstpl
push
into
mov
pushf
push
jg
stos
add
or
gs
mov
arpl
stos
jae
aad
ljmp
getsec
dec
in
clc
xacquire
call
mov
fcmovne
lret
jbe
ja
sbb
stos
popf
mov
sub
popa
shrl
or
fcomps
cmp
fstpt
out
test
add
hlt
or
rol
test
adcl
adc
and
push
in
xor
mov
lea
sbb
or
cmp
dec
adc
cwtl
bound
mov
push
inc
cmp
push
outsb
push
xchg
adc
add
loopne
ret
mov
jne
mov
xchg
fidivs
cld
pop
or
incl
fwait
add
mov
lret
imul
pop
cmp
rolb
inc
dec
inc
cmp
insb
cmpsl
movsb
push
outsl
jae
mov
ss
add
xchg
add
and
sbb
es
dec
push
push
push
mov
orl
fldl
mov
cmp
idivb
inc
pop
and
sbb
jbe
ss
pop
test
sbb
stc
mov
jb
push
jns
ja
inc
dec
out
ficoms
bound
popf
cli
mov
jecxz
mov
ljmp
flds
loopne
mov
inc
jmp
adc
mov
mov
sar
insl
test
pop
rclb
xchg
out
xlat
popf
push
insl
jbe
enter
cmp
insb
adc
stos
inc
jo
dec
sub
adc
xchg
dec
jne
sub
movsbl
je
cld
sbb
jecxz
imul
cmpsb
fisubl
cmp
mov
sbb
and
push
xor
std
jl
flds
mov
lret
ret
fwait
lods
fstps
mov
pop
adc
add
jnp
fwait
push
sti
out
js
jo
xchg
push
mov
add
scas
cs
dec
and
mov
into
xchg
push
jae
add
test
xchg
repnz
sbbl
rclb
shl
mov
jg
pop
inc
jp
shlb
dec
mov
lahf
or
pop
lret
sub
loop
cmp
cmpsb
fwait
pop
mov
adc
xor
decl
sub
dec
adc
dec
cltd
pop
cmp
in
stos
push
movsb
cli
les
cmp
jb
dec
add
mov
insl
int
insb
mov
scas
call
lea
jmp
idivl
lock
cmpsl
repz
dec
out
adc
rolb
sbb
stc
cmp
rorb
lret
repz
in
cmc
add
and
mov
ss
cmc
inc
and
sbb
sub
jnp
loopne
xlat
mov
mov
push
inc
jno
fs
cmp
pop
fisubl
mov
cmp
shlb
ljmp
adc
fwait
xchg
repz
jo
fmuls
xor
rorb
pop
jnp
into
xchg
xor
out
in
cmp
pop
lret
mov
frstor
add
add
cmp
setbe
cmpsb
pop
pop
add
pop
lods
mov
pusha
fwait
push
push
mov
or
mov
movsl
mov
xor
nop
sbb
leave
imul
and
sub
inc
push
loopne
jae
fmuls
shll
test
dec
scas
sub
shll
mov
xchg
insb
popf
ficomps
push
sbb
pop
rcrb
cmpsl
ljmp
repz
xchg
rorb
fstps
jno
test
mov
add
cmp
ja
xor
cwtl
add
mov
mov
lods
mov
int3
bound
cli
loopne
inc
add
cmp
sub
dec
mov
jo
cmpsb
dec
adc
fxch
lods
jmp
and
xchg
imul
cmp
subl
outsb
fisubrl
push
and
and
jl
rcrb
aad
inc
xchg
in
pop
inc
andb
in
fsts
cmp
ret
inc
mov
in
pop
cld
test
pop
les
or
in
out
movsb
mov
fdivrl
les
push
aas
push
mov
gs
jl
ret
mov
stos
mov
xchg
mov
xlat
xor
stos
out
ret
shll
int3
sbb
jge
xor
and
inc
pop
ret
aad
aas
imul
pop
inc
pop
jns
jns
arpl
fdivl
fwait
scas
hlt
sbb
xor
shrl
jo
pushf
sbb
sub
or
testb
addr16
adc
test
jns,pn
scas
inc
inc
jmp
repnz
xchg
push
je
movsb
rcrb
xor
inc
ret
pop
sarb
cmp
dec
xchg
inc
adc
adc
or
inc
sbb
jb
inc
sbb
ret
loop
cmp
jl
mov
cmpsl
addl
int
jb
sbb
std
jb
push
xor
bound
jno
js
clc
cli
inc
jg
push
lds
mov
mov
mov
mov
test
jb
in
mov
mov
in
imull
int
jo
bound
das
flds
push
xchg
pop
push
jle
movsb
xchg
stc
dec
jnp
fldcw
lods
fadd
sbb
shrb
scas
xor
mov
aam
xor
dec
inc
sub
lret
clc
or
add
cmp
xchg
pop
adc
xchg
mov
add
test
sbb
push
jbe
push
stc
pushf
and
call
cmp
push
adc
fs
ds
hlt
adc
enter
fwait
js
jno
xchg
sti
sti
cmp
out
lret
mov
out
cmpb
pop
mov
addr16
pushf
sbbb
mov
ret
mov
jl
popf
mov
adc
xlat
lods
ret
mov
into
movsb
movsl
jno
scas
bound
push
movsb
cmp
lock
xchg
ficompl
cmpsw
lods
add
jl
xor
aaa
or
fistl
and
mov
test
popa
cmc
sbb
sub
push
sbb
sub
mov
fmull
in
add
clc
xor
push
stc
mov
xchg
xchg
rcrl
xor
mov
fistpll
mov
adc
rcrb
daa
out
shll
push
ficoml
out
mov
lret
add
outsb
test
or
addr16
sbb
xor
jmp
lea
and
lds
pop
jb
repz
pusha
divb
push
sub
repnz
mov
fadds
mov
call
mov
popf
ret
jl
xchg
add
mov
sbb
or
jae
aaa
xchg
adc
jno
call
std
jb
mov
and
js
dec
mov
testl
and
dec
mov
in
aas
xchg
inc
lahf
outsb
cmp
sub
test
xchg
loope
mov
nop
das
lahf
aam
mov
loope
js
popa
fidivrl
pop
xlat
aad
testl
int
popa
cs
shll
cmpsl
cmpsl
js
lds
xchg
dec
push
xchg
outsb
xchg
jmp
xchg
daa
jbe
icebp
out
sub
or
iret
xchg
jmp
sbb
xchg
int
into
mov
mov
icebp
cmpsb
jle
jle
mov
fisttps
mov
mov
cmp
and
inc
mov
mov
in
push
jmp
xor
sti
xor
shl
add
ret
sub
push
xor
sub
out
push
sarl
sub
inc
jbe
inc
fneni(8087
xchg
jp
mov
icebp
daa
sbb
fdivrs
loopne
movsb
mov
dec
mov
jo
sub
into
fdiv
jne
dec
and
es
dec
xor
neg
cmp
gs
pop
popa
mov
dec
push
and
outsl
xchg
cmp
out
mov
scas
hlt
cmp
fisubrl
pop
cmp
out
xchg
aaa
jne
out
push
mov
push
outsb
fcomps
jecxz
div
hlt
cmp
out
shll
clc
adc
shr
je
xchg
push
cmp
in
xor
push
mov
test
and
pop
mov
das
aaa
aaa
and
fwait
cmpxchg
mov
notl
mov
xor
sbb
lods
cmp
cmp
or
xchg
scas
mov
idivb
fsubrs
aad
nop
das
mov
int
fidivrs
sarb
stos
jne
loope
mov
int
es
cli
xor
lahf
rclb
mov
mov
cmp
jecxz
xor
cmc
mov
out
inc
insl
jne
dec
mov
hlt
or
or
ss
inc
jnp
lods
popf
and
lds
cld
imul
rcll
std
cld
mov
jp
pop
jp
jbe
in
aam
xlat
cmp
xchg
mov
imul
hlt
andl
jbe
push
scas
les
pop
jmp
std
jo
fildll
out
aam
xchg
xchg
inc
mov
aaa
mov
dec
dec
cltd
cltd
xchg
and
aam
fwait
sbb
jne
xor
xor
fs
or
sti
push
push
ret
xchg
mov
dec
in
mov
mov
pop
imul
cltd
out
mov
sbb
fsubrl
arpl
inc
pop
in
ror
jl
cli
data16
andb
loope
xor
xchg
add
inc
fadds
jnp
dec
das
je
ss
mov
and
push
movsb
cmp
add
ds
scas
xchg
movsb
dec
inc
cld
inc
imul
pop
je
hlt
pop
test
lods
push
dec
and
push
and
xor
mov
mov
push
data16
jmp
ja
insb
lahf
dec
loope
mov
cmp
fiaddl
pop
push
into
xchg
sub
cmp
insb
adc
sahf
mov
add
or
adc
dec
imul
test
in
icebp
scas
mov
cmc
inc
sub
cltd
in
and
pop
jb
or
clc
aam
mov
int
cmp
flds
fiaddl
fimuls
pop
imul
sbb
lods
sbb
dec
cmpsb
outsl
pop
xor
inc
leave
lods
pop
les
mov
add
into
xor
in
sti
mov
inc
inc
arpl
cmp
push
xor
push
push
xchg
sub
inc
movl
mov
aam
sub
dec
sarl
ss
xchg
lods
xchg
cmp
orl
inc
inc
es
or
ss
lods
fists
stos
sub
push
mov
sahf
pop
fcomps
test
vphaddwq
jecxz
icebp
xor
and
cmp
dec
ret
fisttps
dec
jg
daa
fnsave
pusha
mov
xchg
mov
out
jbe
shr
addr16
push
mov
push
inc
stos
or
or
mov
andb
adc
pop
stos
nop
push
mov
ds
ljmp
ja
ss
xor
xchg
scas
pop
hlt
in
sub
and
imul
int3
fistl
lea
insb
pop
add
jnp
or
jmp
mov
sub
sbb
ds
ret
stc
insl
inc
sub
dec
xchg
dec
mov
pop
call
mov
repnz
dec
lret
mov
sub
mov
mov
repz
test
lcall
push
dec
stos
sbb
adc
mov
stos
mov
fwait
loope
mov
push
mov
xchg
push
push
roll
ljmp
jo
in
sbb
cmp
pushf
js
sub
sbb
mov
mov
xchg
and
mov
dec
inc
cmp
pop
rcrl
call
and
loopne
cmc
pushf
aas
xchg
cld
je
cmp
adc
and
sti
std
mov
mov
testb
js
xor
stc
cs
ficoml
push
mov
ljmp
jmp
insl
out
outsb
movl
addr16
pop
mov
mov
sub
sub
call
sbb
fmull
cld
add
push
inc
fcmovnbe
add
adc
push
stc
sub
repz
sbb
jecxz
mov
pop
pop
push
xchg
add
stc
mov
add
mov
xor
mov
scas
cwtl
pop
inc
jns
dec
lods
jne
mov
out
sahf
in
sahf
iret
and
iret
or
sarb
sub
dec
hlt
lds
sysenter
aad
jne
pop
adc
jge
fiaddl
popf
in
out
daa
ret
mov
cs
ss
fcoml
cmp
ret
repnz
in
or
stos
mulb
mov
test
ss
fwait
or
xor
mov
hlt
lock
arpl
out
lret
pop
stos
mov
pop
dec
jns
lahf
lods
mov
jg
adc
scas
movsb
sbb
andl
and
aad
pop
aam
jne
mov
imul
add
lds
cmp
js
outsl
into
imul
es
stos
loop
cltd
sbbl
or
repz
jge
testl
dec
inc
negb
jno
inc
aad
std
fsubs
jb
add
push
jnp
loop
ljmp
je
out
xchg
xor
jge
sbb
lock
adc
imul
inc
fwait
divl
int3
icebp
xor
mov
scas
pop
add
or
jmp
rcrb
lahf
mov
mov
inc
mov
subl
cmp
sbb
xchg
shl
stos
iret
fidivrl
out
xlat
call
mov
jle
and
lea
push
add
dec
movsb
cmp
icebp
aad
pop
add
jecxz
or
pop
pushf
mov
movsl
jg
nop
jle
dec
scas
inc
je
inc
daa
sbb
sbb
aam
call
xchg
push
stos
into
pop
push
cmpsb
fisubrl
cwtl
lret
mov
or
sub
pop
mov
in
cmpsb
jp
mov
in
ljmp
int
movsl
push
push
insl
dec
mov
inc
pop
rolb
xchg
fldl
or
mov
jmp
imul
xchg
pop
mov
pop
stos
push
pop
insb
outsl
scas
jno
pop
in
xor
and
push
xchg
add
shrb
add
es
adc
ja
mov
aas
in
add
xlat
imul
jno
lahf
jo
test
out
pop
inc
sbb
das
cmpsb
in
jle
ljmp
mov
loope
jmp
cli
std
popf
push
or
pop
inc
jns
mov
jmp
lock
cmpsl
sbb
pop
mov
mov
push
pop
in
adc
aaa
scas
pop
add
js
xchg
or
ja
dec
xchg
lret
mov
lret
out
lods
pop
xchg
sbb
push
loope
push
sub
arpl
or
movsb
fildll
xchg
clc
push
ror
xchg
add
decb
aam
dec
push
push
cmp
mov
push
dec
add
sbb
add
add
mov
jle
popa
mov
mov
cmpsb
out
push
mov
sbb
fisttpll
mulb
xchg
arpl
test
mov
lahf
out
andb
xchg
ret
cmc
pop
mov
xor
lock
and
xor
sti
xor
inc
inc
jp
mov
push
jae
cmp
pusha
cs
mov
xor
push
xchg
popf
call
les
adc
popa
arpl
mov
add
data16
dec
loopne
lods
mov
mov
mov
inc
loop
ret
hlt
xchg
push
shll
adc
sbb
and
lahf
sbb
aad
push
scas
push
test
jle
jmp
jmp
mov
mov
ljmp
xor
mov
fistpl
or
pop
or
xchg
int
mov
jle
and
push
push
loop
gs
orb
xor
je
outsb
rclb
jge
les
mov
cmc
out
cmp
jg
cmp
test
gs
jmp
lods
fs
cmpb
jnp
jbe
jp
cmpb
rorl
addb
out
int3
shll
scas
lret
lock
mov
movsb
dec
scas
adc
push
cmp
inc
dec
pop
push
adc
ret
push
adc
jp
lret
addb
or
dec
xor
sub
test
jnp
sbbb
popa
jnp
push
mov
xchg
ljmp
xor
mov
ret
cmp
mov
xor
clc
in
xchg
cli
inc
adc
mov
imul
push
push
addr16
jns
leave
fsub
daa
scas
mov
push
lret
push
dec
jne
adc
push
sub
int3
xchg
in
adc
adcb
xchg
dec
js
mov
xor
aam
in
push
sahf
repz
stos
push
cmc
dec
shrb
popa
nop
mov
push
ljmp
arpl
add
push
add
mov
and
jns
cwtl
sub
repnz
shr
and
sbb
sbb
out
pop
cltd
xchg
mov
in
jns
ret
jbe
mov
add
mov
data16
imul
mov
out
xchg
mov
es
test
imul
insb
dec
cs
sbb
int3
cmpsl
loope,pt
clc
into
pop
divb
popf
jnp
cli
call
dec
dec
xchg
cltd
loopne
push
fcmovb
fldcw
push
mov
imul
jmp
xchg
int3
shll
out
cwtl
sub
cli
arpl
jecxz
sbb
and
lret
mov
pop
clc
sbbl
and
pusha
xor
js
cmpsl
mov
xchg
cmp
rcr
push
or
test
divb
je
imul
dec
movsb
addr16
aas
push
cmp
jno
inc
ss
rclb
fnstsw
xchg
xor
xor
aas
fdivr
aaa
inc
and
mov
lret
jne
popf
xchg
cmp
pop
sbb
rcrb
push
mov
xchg
imull
dec
das
les
iret
adc
sahf
jo
xor
push
in
xor
xor
jp
lods
test
mov
sbb
lods
scas
xchg
scas
jl
hlt
push
jne
xchg
cltd
and
enter
pushf
in
jo
sub
imul
in
add
mov
cmpb
dec
rorl
xchg
xchg
mov
psubb
lret
fabs
xor
enter
out
jp
scas
je
sbbl
dec
ret
fwait
sub
push
aam
and
xor
xchg
dec
popa
fnstenv
repnz
std
pop
adc
roll
test
xor
xlat
cmp
and
nop
jp
add
sub
add
fistl
inc
jp
repz
jp
loop
in
sub
rcrb
adc
adc
stc
mov
in
std
inc
ret
pop
cmpsb
mov
ljmp
arpl
ss
xchg
out
inc
repz
and
in
add
dec
mov
adc
inc
mov
dec
shrl
xor
aas
std
cmpsb
arpl
filds
test
loopne
insb
mov
pop
jmp
dec
sbb
aaa
xchg
jnp
movsb
xor
movsb
das
aam
cmp
mov
xchg
lahf
mov
inc
cmp
jmp
loop
sub
adc
and
fidivl
cmp
and
ds
jmp
adc
push
test
in
push
dec
pop
add
incb
sbb
popa
scas
lahf
movsb
nop
pop
dec
mov
push
jg
mov
daa
mov
xor
mov
xchg
sbb
adc
sub
aas
shlb
scas
pop
xlat
pop
add
inc
xchg
pop
lcall
ss
lea
push
dec
dec
addb
mov
fwait
adc
mov
adc
cmp
mov
test
inc
dec
mov
adc
jle
pop
subl
or
and
loopne
jne
sbb
ret
cmpsb
xchg
and
imul
std
in
pop
xchg
das
jbe
jbe
roll
jbe
push
arpl
popa
jae
rcrl
push
test
popf
cld
fiaddl
mov
push
sub
dec
addr16
daa
jp
push
sub
pop
cmp
jp
or
jne
sub
mov
or
gs
xchg
push
or
cmp
fcom
xlat
xchg
mov
shl
nop
iret
inc
mov
pop
loop
push
les
jecxz
xor
jmp
mov
push
sub
mov
dec
mov
les
cmp
cmc
inc
dec
mov
sub
jnp
xchg
jmp
xchg
dec
adc
cmc
dec
cmp
pop
enter
inc
xlat
je
jle
in
loope
mov
xchg
xchg
ds
mov
mov
lods
jnp
or
andb
test
lahf
pop
iret
mov
gs
add
cmp
or
cmp
pop
ret
in
lahf
jbe
daa
imul
dec
or
std
jg
stos
jl
imul
test
test
out
sub
fisubrl
inc
dec
das
push
gs
cmpl
push
movl
mov
xchg
mov
pop
mov
mov
mov
les
inc
out
lds
fistps
call
daa
in
lock
arpl
sub
push
imul
adc
or
mov
inc
ss
out
data16
ret
movsl
or
jbe
fwait
xor
into
or
jg
insb
mov
cli
pop
and
lahf
sub
push
lret
dec
push
ja
add
jmp
sbb
pusha
dec
movsl
loopne
hlt
push
jge
pop
push
in
jmp
cwtl
andl
jp
shll
lcall
pusha
data16
dec
mov
cmp
xchg
or
inc
adc
sbb
gs
faddl
pop
dec
jle
jmp
insl
dec
sbbl
mov
outsl
mov
push
lock
pop
pop
stos
mov
dec
mov
sahf
mov
cmp
adc
or
mov
sbb
sti
insb
xor
jne,pt
icebp
jnp
and
mov
mov
fcoml
cmp
and
pop
testb
push
xor
rorl
add
std
mov
popf
adc
adc
jb
into
vaddsd
add
sarl
mov
aas
mov
pop
test
lahf
mov
popa
imul
insb
xor
mov
xchg
shl
aad
stc
sbb
popa
xor
mov
pop
out
add
loop
stos
jecxz
addr16
call
jbe
cltd
cltd
ss
push
push
xor
fdivrs
push
jp
lcall
test
add
lcall
or
fwait
jecxz
mov
lcall
inc
movsb
add
mov
mov
cmpb
jbe
mov
loopne
xchg
or
or
sbb
mov
add
mov
lds
mov
les
push
xchg
lret
jg
mov
sbb
mov
inc
int3
outsl
aam
mov
faddl
insb
mov
mov
mov
movsl
add
jg
push
xor
or
mov
mov
mov
and
addr16
arpl
lock
stos
cmp
and
cltd
int
idivl
add
pushf
stc
cmp
out
pushf
xchg
jecxz
in
out
mov
loope
out
mov
push
insb
push
push
iret
jg
cmp
sub
testl
ret
rol
ficoms
inc
lock
cmp
cwtl
in
rcl
js
rcrl
mov
scas
lahf
shlb
aam
mov
xchg
sub
dec
gs
push
fildll
in
cmc
dec
mov
shrl
xor
mov
jecxz
mov
je
les
mov
cmc
lea
and
lods
inc
push
ds
fisttps
bound
adc
inc
jnp
sbb
mov
in
in
scas
xor
sbb
ret
sub
fisttpll
popf
and
jl
lods
lds
andb
push
test
add
orb
notb
rolb
sbb
xchg
add
cmp
cmpsb
cmp
insb
lea
lahf
lahf
popl
ja
cmp
rcrb
adc
je
adcb
rcrl
fadds
fmull
fsubs
sbb
lcall
pop
pushf
nop
and
jae
inc
out
repz
mov
pop
inc
shll
mov
pop
repnz
jp
cmpsb
sub
stc
inc
push
popf
aaa
pop
inc
sbb
pop
sti
shl
cwtl
shrl
aaa
mov
add
dec
cltd
iret
insl
add
jbe
jne
js
and
out
ja
cmp
aad
jp
scas
out
mov
lods
add
pushf
movsb
das
pop
out
fmuls
js
leave
enter
add
je
and
mov
mov
stos
push
shl
jno
xchg
insb
das
fcoml
dec
jb
hlt
push
xchg
les
arpl
mov
pop
loopne
cmpsl
cmpsl
mov
lock
nop
lss
jle
ret
push
xchg
outsb
cmp
fiaddl
xchg
cmp
xor
add
ficomps
push
lea
arpl
inc
pop
mov
loope
sti
dec
js
call
dec
sahf
fstpt
jecxz
jne
and
xor
loopne
clc
lahf
add
std
adc
loop
cli
sti
leave
fstl
jnp
sub
das
push
cwtl
cmp
adc
pop
push
adc
cli
mov
mov
orb
lret
xor
mov
jo
and
cmp
lods
or
outsb
push
pop
and
jmp
out
mov
adc
mov
stc
dec
push
ret
sbb
or
sahf
enter
ljmp
adc
fwait
mov
cmp
mov
hlt
mov
inc
fnstcw
push
cli
js
mov
inc
sub
xchg
inc
lods
jecxz
pop
into
popa
divb
mov
mov
adc
or
repz
sbb
fmul
les
out
push
lds
lret
adc
fwait
repz
loop
sub
scas
or
sbb
ss
mov
out
push
dec
lods
add
rol
push
add
push
ss
in
out
push
xchg
imul
sbb
stos
pop
movsl
std
imul
add
mov
or
lcall
xchg
hlt
loopne
das
iret
push
stos
fldl
dec
sub
rorl
and
sarb
mov
lods
loopne
mov
sbb
repz
or
xchg
lock
arpl
sub
cmp
mov
int
out
sub
jno
cli
mov
jnp
xchg
or
stc
enter
push
dec
mov
pop
repnz
adc
das
adc
subb
sti
mov
mov
and
daa
mov
hlt
cwtl
mov
xor
pop
popf
test
cld
push
jmp
pop
sub
test
pop
movsl
mov
xchg
mov
or
mov
mov
mov
and
add
push
inc
das
mov
fmuls
adc
leave
xor
call
cmp
mov
arpl
pop
ljmp
push
xchg
std
lret
or
in
movsb
adc
into
xor
movsl
rorb
movsl
lahf
pop
jmp
sar
or
stos
dec
lds
xor
out
pop
ss
rcr
cmp
add
lods
or
xor
dec
mov
rcl
pop
pop
dec
shlb
outsb
xor
sub
mov
gs
sub
push
mov
mov
outsl
mov
jae
cltd
jne
jne
das
movsl
jne
jg
rcll
adcb
es
inc
adc
js
stos
push
cmp
pcmpeqd
shrd
shlb
ljmp
orl
push
jge
outsb
push
repnz
pusha
aas
cmpl
fsubl
loop
add
and
add
mov
cmp
cmpsb
mov
shr
sarb
loop
enter
adc
pop
or
into
push
sbbl
popa
hlt
test
addr16
xchg
repnz
cli
call
xor
xchg
fwait
pop
dec
stos
lahf
fidivl
pop
mov
mov
and
push
push
mov
into
lods
test
ljmp
xchg
in
push
decl
jns
sbb
mov
cmp
fstps
pop
and
mov
cli
sub
adc
pushf
rcrb
shl
add
ljmp
dec
mov
je
push
adc
daa
adc
bound
ja
fdivrs
inc
sbb
jns
cmp
ret
lock
add
in
jbe
fidivl
cmc
xchg
dec
mov
fdivrs
adc
mov
add
xor
andb
pop
pop
lods
sahf
mov
jns
pop
push
mov
pop
jmp
nop
cs
enter
cwtl
neg
les
adc
xor
dec
test
xor
repnz
sbb
mov
lods
lea
push
negb
mov
movntq
imul
xchg
push
push
and
inc
mov
cli
inc
jecxz
push
mov
es
cmp
stos
jle
inc
in
jge
pop
sbb
push
in
imul
dec
bswap
popf
testl
inc
ja
cmp
js
inc
fidivl
in
scas
loope
sbb
shl
mov
cli
jno
mov
fwait
xor
outsl
xor
or
inc
dec
aad
cmp
dec
sbbl
popf
addr16
popa
mov
pop
mov
test
gs
cmp
push
push
add
inc
or
fcompl
insl
dec
cli
or
bound
or
mov
dec
mov
xor
jg
lahf
mov
fcompl
out
dec
aaa
arpl
sub
mov
push
ret
push
iret
cmp
xchg
cmp
in
rol
in
lret
dec
ja
hlt
rcll
std
fildl
xor
add
cmpsb
or
xor
mov
sbb
movsb
inc
shlb
leave
pop
insb
imul
sub
inc
pop
test
lods
les
cmc
cmp
lahf
into
mov
lods
mov
arpl
xchg
scas
jp
and
shll
inc
sahf
add
mov
xor
mov
js
sbb
iret
pushf
bound
cmp
dec
adc
sbb
cmp
stc
jae
lea
je
pusha
xchg
xor
aaa
test
movlps
pop
iret
movsb
adc
bound
mov
jmp
cmp
fdivrs
jp
and
cmp
xchg
popa
fistps
inc
scas
icebp
je
cmp
sub
lods
mov
iret
or
cli
xadd
adc
repz
orl
mov
sbb
cwtl
pop
pushf
and
sbb
push
jae
or
push
or
sub
out
or
iret
addr16
or
pop
insl
in
push
or
out
pop
enter
or
loop
push
mov
pop
pop
pop
loopne
fwait
inc
add
xchg
dec
inc
xchg
mov
aas
cmp
lods
dec
fcmovnb
jo
outsb
lahf
push
xchg
xor
adc
mov
and
outsb
int3
add
insl
pushf
dec
xor
hlt
rolb
lods
fstpl
stc
ret
insl
iret
push
test
shr
xchg
cmpsb
aaa
fnstcw
ds
dec
or
cmp
lcall
fcmovu
div
cmp
dec
sub
mov
xchg
cmp
jbe
lret
lret
mov
popf
ret
jnp
addr16
fs
jae
movsb
sbb
dec
lock
enter
and
inc
or
mov
ds
enter
daa
mulb
std
push
sub
aas
arpl
pop
cs
aaa
pop
dec
pop
mov
insl
out
xlat
xchg
cltd
dec
ret
xchg
jge
cmp
inc
push
xchg
xchg
adc
jecxz
mov
daa
andb
pop
lods
xchg
or
lods
mov
jns
jno
lcall
pop
fdivl
adc
xchg
repnz
lods
aas
inc
push
xchg
imul
loop
lods
enter
fbld
dec
std
and
inc
fisttpl
mov
in
mov
push
xchg
lret
lods
sub
jmp
fcmovbe
inc
sub
mov
jns
adc
std
xchg
paddsw
mov
jg
jmp
and
decb
lds
mov
adc
push
mov
mov
sbb
aad
xor
mov
sbb
loopne
jl
inc
popf
jge
inc
ss
sub
push
pop
ficompl
cltd
pop
outsb
loope
outsl
out
sbb
add
xlat
xor
cmp
daa
cltd
adc
pusha
aaa
mov
add
lock
cmp
iret
push
and
add
xor
dec
stc
mov
inc
clc
inc
movsl
call
lret
adc
inc
insb
mov
inc
imul
shlb
dec
mov
negl
push
data16
das
add
mov
xchg
jae
lcall
addr16
mov
xor
outsl
repz
cmp
add
imul
xor
data16
xchg
or
jae
in
mov
andl
add
adc
cli
call
pop
out
xchg
push
aad
mov
inc
fmull
xchg
les
ret
jg
negb
mov
ror
xchg
cltd
popf
cmp
mov
lods
lock
in
inc
sub
shl
ficompl
dec
push
jo
lods
sarb
mov
jge
std
sub
jle,pt
outsl
mov
movsl
push
cs
adc
rclb
add
jbe
rolb
sub
and
pop
add
testb
es
push
mov
pop
movsl
add
mov
aad
aaa
sub
stc
sahf
je
pop
push
xor
leave
jg
xchg
xchg
pop
xor
sub
inc
push
xchg
mov
and
in
or
ret
adc
aaa
jmp
in
fcoms
xor
clc
sbb
pop
mov
sub
shlb
in
rcl
sbb
pop
loopne
mov
xor
fdivr
lods
dec
fisttpll
enter
or
inc
mov
cmp
lea
sub
push
adc
rolb
loopne
xchg
pushf
inc
pop
adc
and
das
iret
xchg
mov
test
insl
lret
or
sub
pop
ja
sarb
aad
call
pop
mov
pop
arpl
das
fsubrl
pop
cmp
scas
hlt
xor
add
xor
jb
adc
lret
jo
push
lea
ss
mov
dec
mov
cmp
shl
enter
dec
lret
pusha
pushf
mov
lcall
ja
push
jmp
mov
pop
movsb
xchg
lahf
or
dec
and
es
aam
add
mov
xchg
hlt
divb
adc
shrl
test
sub
loop
insb
xchg
inc
jmp
sbb
sbb
sub
push
jae
repnz
subb
or
mov
xchg
pop
push
mov
jo
sub
pop
dec
stos
inc
fs
fwait
mov
jns
jle
xchg
jnp
adcl
mov
push
out
cmpsl
xor
ds
sti
fidivrl
pop
cld
jbe
test
dec
adc
xchg
inc
pop
iret
cwtl
ja
shrl
cmc
cmp
mov
and
or
push
mov
fisubs
ficompl
xchg
and
jns
nop
push
enter
cltd
add
dec
jo,pt
sbb
aaa
pushf
mov
pop
cmp
fbstp
iret
xchg
bound
or
imul
jo
loope
inc
jmp
xorl
sub
jnp
sti
fs
mov
mov
scas
push
lods
std
jmp
les
inc
aad
or
mov
xchg
xlat
lea
cs
sti
adc
xor
jne
imul
in
data16
mov
xchg
mov
bound
dec
dec
dec
sti
cmpsl
cwtl
movsb
add
cmp
movsb
leave
into
fnstsw
adc
lret
lock
loop
dec
push
das
jno
jl
jae
dec
xchg
push
popf
xor
xchg
dec
pop
aas
sub
loopne
scas
lods
cmpsl
lods
into
scas
mov
lret
sbb
add
xor
lcall
jnp
dec
test
jbe
dec
mov
aam
or
movsb
hlt
or
inc
jno
pop
aam
imul
ljmp
fcmovbe
mov
and
jb
dec
push
decb
pushf
inc
mov
idivl
lret
xchg
mov
or
push
popf
xchg
sahf
pop
nop
sub
out
inc
lcall
into
adc
shlb
cwtl
mov
mov
adc
fsubrs
loop
mov
mov
rcl
cmc
add
bound
add
popa
loopne
aas
sbb
ss
adc
jle
stc
stc
and
dec
sub
cwtl
xor
sbb
stc
xchg
sbb
mov
and
daa
and
repz
cmpsl
out
and
mov
ljmp
lock
cwtl
movsb
jb
fs
stos
add
fistpl
lret
ficoms
nop
mov
jle
inc
push
pop
add
push
mov
xchg
movsb
adc
cltd
jnp
push
push
repz
dec
in
test
mov
repz
mov
icebp
shlb
adc
inc
adc
cmp
add
test
mov
cmpsl
xor
pop
shrl
int
sbb
add
scas
packuswb
dec
insl
mov
push
or
xor
movsl
into
xor
dec
adc
push
ret
cmp
push
or
daa
jne
in
sbb
mov
and
and
push
push
aam
idivl
push
push
ficoms
jl
test
pop
movsl
cmp
lods
mov
lret
das
mov
sub
jle
clc
cmp
jmp
pop
sub
xchg
mov
imul
add
push
adc
adc
mov
cld
cmpsb
sub
adc
ljmp
cmpsl
into
push
mov
mov
xchg
jae
mov
xor
ss
test
jne
sbb
adc
in
dec
mov
ds
decl
testb
or
cmp
mov
adc
fcmovnb
int
mov
pop
add
adc
ljmp
lcall
ja
xor
mov
int3
push
pop
sbb
jp
lock
dec
dec
jecxz
pusha
jnp
pop
pushf
out
cmp
or
sti
mov
pushf
add
lahf
add
cld
insb
dec
mov
xchg
sub
repz
pop
xchg
push
dec
into
mov
outsl
adc
pop
loopne
xchg
daa
cmp
push
push
jmp
push
fsubl
jb
xchg
aaa
mov
fnstcw
divl
push
shrb
pop
mov
mov
js
jb
mov
adc
mov
dec
movsl
dec
ret
popa
jae
call
hlt
adc
outsb
gs
es
rcr
int3
es
jmp
mov
test
imul
pop
mov
mov
fildl
shrl
cmp
loop
xchg
mov
cmp
ss
adc
sahf
dec
js
aas
leave
fdiv
dec
add
push
je
leave
xor
je
pop
push
std
mov
sti
call
lods
jle
lcall
inc
pusha
cmp
ja
or
lret
les
in
hlt
js
movsb
out
jecxz
xor
daa
xor
jge
mov
lcall
insb
xor
jo
gs
test
mov
pop
mov
and
inc
and
ljmp
fmul
call
addr16
push
repz
scas
scas
or
mov
jmp
xor
xlat
mov
aam
aaa
and
dec
sbb
sub
jns
mov
push
jmp
cltd
add
sbb
dec
jmp
fucomp
xchg
pusha
and
push
add
pop
jecxz
xchg
xor
ret
add
das
cmp
daa
lods
and
imul
sbb
in
dec
and
mov
sbb
jbe
stc
outsl
cmp
out
sbb
cmp
daa
push
xor
lret
clc
sbb
push
mov
out
popf
loopne
mov
pop
xchg
lock
roll
mov
lret
and
or
push
push
shlb
shll
fs
ljmp
xchg
das
in
insl
pop
fisttps
pop
insb
es
pause
mov
in
rcl
pop
lcall
sahf
pusha
adc
sbb
cmp
lahf
mov
cs
xor
xchg
add
lahf
inc
je
arpl
in
adc
xchg
adc
xchg
cmp
mov
dec
pushf
fs
sub
or
sahf
sub
inc
inc
and
mov
jmp
pop
dec
xor
dec
jg
enter
outsb
fsts
push
int
adc
mov
jnp
or
xchg
sar
or
inc
and
shrb
jne
jo
sbb
out
mov
inc
pop
xor
cmpsl
stos
mov
cmp
insl
popa
pop
ljmp
cltd
push
inc
outsb
pop
and
add
push
jg
fdiv
xorl
cmp
xchg
jp
jnp
test
fs
stos
push
fwait
fbstp
xchg
pop
xchg
mov
in
ss
aaa
xor
add
adc
add
add
push
mov
adc
push
rolb
push
fistl
rolb
adc
stc
add
int3
cmp
xor
repz
iret
cli
jge
sti
not
shll
sbb
jg
mov
mov
dec
es
mov
adc
into
mov
aad
cmp
aas
popa
add
push
mov
sub
xlat
sbb
pop
dec
insb
jbe
stos
jge
sub
mov
aad
push
das
subb
mov
inc
add
shlb
inc
and
loope
jp
loop
mov
in
and
mov
repz
sbb
mov
dec
cmp
xchg
mov
jmp
clc
xor
test
mov
push
sub
jecxz
mov
jle
in
sub
repnz
outsb
fs
ja
ret
push
adc
mov
mov
fstps
inc
lea
push
jp
cltd
jg
push
jae
push
push
mov
sub
std
sbb
and
lret
sbb
hlt
mov
inc
in
xor
xchg
in
dec
add
sbb
mov
clc
mov
fimull
xchg
shll
cltd
push
add
rcr
out
mov
sub
loope
jns
push
push
insb
inc
mov
out
dec
mov
rol
inc
mov
cs
das
movsl
add
sub
add
rorl
dec
lcall
outsb
add
icebp
lcall
cmp
add
inc
jl
adc
push
gs
jb
leave
je
pop
push
test
push
mov
lret
jle
xchg
lret
mov
pop
push
mov
mov
lahf
jo
test
pusha
jno
xlat
mov
nop
sbb
std
adc
mov
dec
ljmp
arpl
inc
sub
mov
sub
add
jecxz
nop
leave
insl
add
test
adc
xchg
cltd
cmpb
scas
or
jecxz
fdivp
and
test
js
aam
repz
or
mov
xchg
insb
jecxz
cmp
lret
push
outsb
and
push
stos
scas
hlt
pushl
and
jge
scas
stos
popf
movsb
xchg
jo
test
jl
insb
mov
jo
jno
dec
sub
push
cmp
cmpb
pushf
mov
jmp
jp
arpl
and
and
ret
inc
mov
aam
enter
arpl
sarl
or
ja
ljmp
pop
or
fcoms
dec
mov
jp
push
xor
adc
pushf
and
repnz
inc
pop
pop
data16
ret
test
movsb
pop
cmpsl
and
outsb
add
dec
push
test
push
sub
nop
mov
popl
ficompl
and
fs
outsl
dec
sub
pop
fsubrs
out
std
inc
popf
pop
lock
add
inc
add
aam
push
aaa
shll
ds
enter
fimuls
push
jmp
fucomp
mov
sbbb
out
loop
shrb
pop
fisttpl
mov
dec
sbb
xchg
or
sbb
movswl
dec
fistps
js
lock
cli
popa
call
lcall
scas
push
leave
push
push
pop
movsl
jb
scas
xlat
xchg
xchg
test
mov
xor
cmp
jmp
pop
and
pop
loopne
cmp
ss
inc
sar
jae
and
or
out
ret
ficompl
stos
push
and
js
cmp
outsb
jg
xor
lods
aaa
nop
insl
sti
jmp
push
repz
xchg
mov
jl
push
pop
ds
jb
jae
dec
cmp
sub
sub
sahf
cmp
repnz
mov
stos
lea
subb
push
fcoms
jg
lret
mov
pop
push
inc
mov
dec
xchg
mov
dec
and
or
xor
mov
cmp
mov
or
scas
xchg
in
test
sub
popa
lret
mov
mov
nop
loop
push
jae
sbb
insb
pop
mov
stos
pop
cwtl
testl
cmp
fdivrl
into
ret
aas
mov
xorl
mov
sbb
sub
xor
arpl
push
xor
mov
inc
inc
loopne
stos
insl
fwait
or
and
ror
inc
jne
imul
push
inc
xchg
sub
ljmp
mov
fsubrs
iret
arpl
mov
icebp
jg
aam
jecxz
roll
adc
jns
dec
mov
jmp
mov
push
or
ds
mov
out
pop
pop
test
cmp
cmp
mov
mov
arpl
mov
mov
popf
nop
mov
mov
push
push
add
repnz
mov
and
jg
shlb
sbb
sub
popf
jb
xor
cmp
stos
cltd
cli
testb
push
push
mov
sub
adc
sbb
inc
and
notl
sbb
mov
cmp
mov
xor
popa
sbb
sbb
and
clc
push
rolb
test
fiadds
addb
sub
pushf
push
scas
pop
adc
mov
andl
mov
push
xorb
test
pop
mov
mov
ss
mov
jmp
leave
sti
mov
out
adc
inc
add
xor
dec
cmpsb
xchg
xchg
jmp
in
jne
pop
es
rorl
stc
xchg
or
test
dec
mov
push
cmp
xchg
movsl
sbb
inc
dec
sub
call
jmp
mov
lcall
dec
insl
pop
mov
push
rcrb
mov
pop
and
add
js
dec
js
cmp
mov
or
dec
mov
add
jg
cpuid
nop
aad
fisubl
inc
push
les
dec
leave
xchg
sahf
xchg
lahf
pusha
fstl
cld
hlt
hlt
jns
adc
aad
lock
jle
inc
mov
sbb
pop
xchg
lea
lock
jle
or
cmp
subb
stos
push
sub
mov
test
dec
dec
push
sti
add
adc
out
dec
jnp
adc
jae
and
jo
and
cwtl
fsts
cmp
add
dec
mov
outsb
lret
inc
mov
addr16
cs
std
loop
cli
xchg
push
outsb
pop
dec
es
int
or
mov
add
mov
insb
or
mov
lret
aas
fcmovne
scas
hlt
cmp
imul
jl
lods
adc
test
dec
stos
jp
lcall
jae
ds
repnz
mov
iret
clc
inc
adc
sbb
mov
sub
or
cli
cmpsl
xor
dec
jbe
xchg
inc
lea
mov
out
pop
jns
add
mov
fcoms
add
xchg
mov
fs
loop
sub
push
pop
fdivrp
push
dec
outsb
insb
mov
ds
mov
mov
push
pusha
mov
mov
ljmp
gs
cli
and
dec
cmpl
xor
jo
inc
jne
push
xchg
adc
jae
pop
pop
das
shll
pusha
xchg
mov
jp
mov
sub
mov
sub
cs
and
pop
loopne
mov
gs
std
or
je
in
iret
cmp
mov
add
fidivl
pop
cmp
pop
loop
andnps
inc
outsb
and
fildll
xor
cmc
and
sbb
mov
cmp
jle
cld
dec
jg
or
rcll
in
test
fs
jnp
jecxz
adc
xor
test
pop
in
repz
inc
mov
xchg
push
aam
lahf
mov
ss
add
inc
push
ror
cld
pop
jl
mov
fistpl
aam
testl
cmp
popf
push
out
fisubs
insb
mov
mov
inc
out
or
sbb
mov
add
xchg
movsl
xchg
testb
dec
pop
cmpsl
push
adc
adc
jb
dec
and
mov
test
jg
xchg
popf
lahf
pushf
xchg
jge
jp
int
mov
fdivs
mov
xchg
sub
fsts
imul
sahf
xchg
mov
pop
mov
xchg
adcl
in
jge
imul
mov
push
cmc
pop
cltd
fstpl
fisubl
xchg
scas
test
dec
enter
sub
dec
arpl
xchg
sbb
cmp
dec
jnp
cmp
sbb
mov
push
lahf
cmpb
dec
add
push
pop
push
mul
icebp
xchg
pop
mov
and
pop
gs
pop
pminsw
xchg
ljmp
cld
hlt
bound
pushf
bswap
sti
sub
fistpl
cmp
xchg
and
mov
outsl
xchg
fistpl
shr
sbbl
notb
xor
xchg
gs
jp
sbb
scas
adc
repnz
push
sbb
add
aam
imul
cmp
ja
add
pop
dec
int
out
inc
in
enter
stos
arpl
ljmp
mov
cmp
or
bound
je
and
out
loopne
movsb
les
scas
incl
push
add
mov
ss
cmp
fs
dec
mov
cmpb
cmp
dec
sub
xor
sbb
xchg
jl
add
sbb
sub
push
mov
xchg
mov
sub
xchg
mov
jae
xorl
nop
mov
jmp
sarb
xchg
sbb
ss
push
imul
add
lods
mov
sbb
cmpsb
ret
lahf
int3
cmpsl
movsl
dec
inc
sub
inc
bound
cmc
rcr
mov
repz
pop
movsl
mov
pop
fdiv
popf
sarl
imul
add
mov
mov
call
sbb
push
mov
enter
pop
or
es
mov
dec
and
push
and
lret
push
lds
sub
xchg
and
adc
data16
push
sti
or
rclb
cmp
or
rorb
xchg
jno
outsb
sub
adc
stos
and
push
inc
cmpsl
lds
sti
adc
inc
scas
movsb
and
ret
add
xchg
adc
mov
popf
test
sub
lea
or
pop
mov
inc
and
aam
or
jmp
aam
pushf
dec
in
out
hlt
loop
arpl
push
mov
arpl
mov
cmp
js
push
pop
mov
sti
push
or
in
and
or
inc
xchg
dec
xchg
push
add
mov
add
sti
ds
fstpt
or
les
dec
xchg
add
enter
adc
addr16
shrb
dec
xchg
mov
mov
clc
pusha
or
movb
dec
iret
inc
or
xor
std
ds
push
add
xchg
sahf
dec
filds
sbb
movsl
mov
lcall
sarb
mov
xchg
mov
jle
mov
loop
jg
inc
in
dec
mov
ret
xchg
lock
mov
dec
aaa
cmp
jmp
jmp
cmp
and
adc
pop
bound
ss
jecxz
jg
and
aad
aaa
jmp
std
fidivs
aas
mov
fsub
pushf
mov
pop
int3
jl
inc
cmp
mov
dec
test
movsb
sub
push
and
insl
push
sbb
icebp
stos
jns
push
adc
jne
rcrb
cmpsl
mov
cmp
xor
pushf
or
or
cmpsb
inc
hlt
rolb
imul
dec
push
adc
imul
out
dec
sbb
push
mov
mov
xchg
mov
arpl
insl
out
and
inc
fldenv
add
or
add
xor
icebp
cs
iret
jns
cmp
or
jmp
leave
loopne
aaa
or
adc
fimuls
popf
mov
enter
push
mov
enter
xor
mov
adc
sarl
neg
cmp
jno
dec
rorb
pop
inc
iret
inc
jns
sbb
enter
insb
test
add
and
fdiv
bound
cs
std
je
mov
xlat
fwait
fstps
cmpb
sub
mov
dec
mov
sub
insb
cmp
sbb
repz
push
aas
in
mov
scas
roll
pop
push
or
cmp
insl
cmp
mov
jns
sbb
aas
inc
push
mov
sbb
jmp
mov
xchg
inc
inc
and
cmp
fwait
addb
shl
gs
sti
pop
add
jle
cmp
dec
ret
aad
pop
lods
push
adc
mov
roll
test
in
decb
jmp
pop
repnz
xchg
push
mov
inc
and
outsb
mov
sahf
shr
hlt
dec
xor
fwait
and
mov
in
adc
pop
xchg
lret
frstor
aam
xchg
dec
dec
loopne
scas
fmull
fdivr
mov
mov
mov
mov
xchg
mov
xchg
lods
push
xchg
sbb
mov
add
std
adc
cmc
sbb
ja
ds
dec
loop
stos
sbb
dec
or
xchg
push
xchg
adc
sub
stos
fwait
test
mov
push
dec
mov
sub
lcall
pop
in
jge
cmp
cld
int3
jae
out
pushf
pop
mov
xchg
mov
jnp
jle
mov
mov
ret
popa
loopne
mov
ret
mov
cli
xchg
lahf
pop
inc
xchg
xor
sub
sub
into
mov
jbe
sub
push
mov
aas
push
mov
femms
inc
cmp
shlb
int
xchg
add
aaa
push
pop
dec
push
xchg
jo
pop
jnp
mov
and
int
push
xor
mull
mov
shlb
movsb
dec
sbb
lds
xor
nop
gs
pop
out
and
and
int3
es
or
test
shr
jno
mov
jge
xchg
mov
divl
in
add
push
rorl
push
pushf
fld
dec
sarl
call
popf
dec
aas
add
out
xchg
dec
roll
jl
cwtl
shll
scas
pop
lock
inc
std
std
stos
loope
sbb
popl
imul
inc
jmp
mov
xor
insl
mov
jmp
xor
dec
mov
je
xchg
sti
pop
add
jecxz
xchg
xchg
outsb
test
je
adc
mov
push
xchg
sub
mov
mov
jg
lds
je
push
nop
dec
cmpl
sbb
xchg
mov
xor
popf
rclb
mov
mov
pushf
daa
adc
mov
loop
ret
cmp
outsl
adc
popa
push
cmp
jns
jge
dec
scas
js
inc
push
mov
cli
jbe
out
icebp
fwait
insl
in
out
test
xchg
int
sbb
out
icebp
pop
js
dec
seto
mov
adc
std
and
mov
mov
out
lcall
mov
xor
loop
data16
cmp
test
mov
sub
pop
fadds
pop
push
fidivrs
mov
cmp
std
test
fmul
insb
push
cld
xor
fsubrs
cmpsb
jnp
out
aaa
xchg
pop
fwait
clc
jo
loop
popa
stos
bound
xchg
stc
inc
mov
aam
mov
idivb
call
das
das
mov
adc
std
add
in
or
movsl
es
xor
stos
jns
lods
cmpsl
lods
mov
orl
movsb
add
mov
cld
cltd
jg
les
js
insb
mov
mov
xchg
jb
pusha
adcl
adc
xor
sbb
mov
cmc
into
test
divb
insb
lds
outsb
int3
mov
sbb
sbb
pop
ljmp
pop
push
mov
into
pusha
adcb
dec
aam
dec
fbld
mov
xchg
xchg
pop
push
cli
sti
ljmp
sub
cs
jecxz
mov
rorl
dec
lods
fcompl
xor
mov
fsubrs
mov
and
push
popa
mov
cmp
inc
cmp
mov
xchg
std
sahf
scas
repz
xor
jmp
inc
ffreep
sbb
daa
stos
jno
and
and
cmp
jle
aas
dec
sub
adc
movaps
pop
addb
mov
dec
pop
call
int3
cmp
scas
mov
stos
and
jecxz
sahf
push
sbb
push
mov
mov
push
xchg
push
fidivs
add
movsb
call
and
mov
dec
adc
pop
sub
pop
mov
aam
adc
call
outsl
jbe
and
gs
shlb
rol
cld
xchg
notl
repnz
jp
xor
lret
dec
repz
out
lods
dec
jne
bound
and
sahf
repz
inc
cltd
aaa
mov
add
push
and
ret
inc
sub
or
into
dec
pop
ss
mov
lds
and
add
jl
adc
xchg
push
push
loop
push
mov
icebp
cs
lods
sbb
call
adc
xchg
push
ror
mov
mov
leave
lret
xor
sub
rorb
js
not
das
les
push
or
push
cld
inc
or
push
adc
aas
scas
jle
and
lahf
lock
jo
and
jb
mov
popa
mov
mov
push
icebp
add
hlt
xor
sub
lods
imul
adcl
push
adc
inc
mov
pusha
mov
enter
pop
inc
in
push
xor
movsl
insb
ljmp
in
scas
pop
mov
adc
cli
sbb
scas
hlt
cmp
fs
sub
sub
mov
mov
psrad
out
scas
inc
shlb
sbb
sbb
lds
testl
add
pop
sbb
repz
mov
mov
mov
mov
xchg
jb
inc
cmc
enter
inc
dec
xorb
mov
das
call
or
mov
repz
and
lret
lcall
cmpsl
mov
cltd
aaa
lds
cli
call
jns
push
movsl
in
movsl
lods
mov
cmp
pop
test
call
addr16
sub
mov
xchg
aaa
int
fisubs
add
fs
or
loopne
or
jne
icebp
mov
pop
push
fwait
std
das
lock
int
hlt
xchg
pop
in
pusha
movsb
lahf
dec
pop
popa
loopne
xchg
ljmp
call
xchg
dec
ret
subl
mov
inc
xchg
sbb
mov
mov
mov
pop
pop
jp
cmp
imul
mov
in
sub
sbb
popa
add
popf
out
in
pop
jb
or
movsl
pushf
mov
add
push
fidivrs
or
mull
nop
mov
aas
out
dec
sbb
adcl
or
out
push
or
insb
inc
mov
call
jnp
pop
iret
aaa
mov
les
repnz
pop
ss
mov
pop
iret
icebp
repnz
inc
add
addr16
inc
hlt
pop
sbb
out
ret
and
or
pop
out
hlt
rolb
mov
or
ja
xor
mov
std
or
lret
shlb
daa
mov
popa
or
cmp
or
cs
in
pop
lds
pop
lods
mov
ret
inc
out
xorb
xchg
out
andb
mov
mov
or
icebp
gs
adcb
andl
imulb
xor
dec
sbb
test
es
mov
pop
lret
jmp
jmp
jmp
sub
in
and
xchg
xchg
cmp
mov
and
push
mov
sti
inc
mov
fstpt
mov
pop
outsb
adc
aad
mov
push
push
addr16
inc
mov
outsl
pop
xchg
xor
adc
scas
pop
das
mov
jns
xor
movl
fisubs
jno
or
aam
mov
pop
push
inc
pushf
adc
sbb
lahf
add
scas
xor
mov
mov
sub
mov
and
int
xchg
xor
and
ds
add
out
push
push
jo,pt
mov
and
int
mov
loop
adc
dec
call
cmpsl
or
loope
mov
pop
mov
fstpl
cltd
stc
fidivs
aad
push
add
in
stc
je
rclb
popa
negl
addr16
jno
iret
push
jnp
jno
ret
sub
adc
push
push
andl
nop
dec
pop
add
mov
aaa
xchg
add
iret
push
cmc
inc
mov
iret
jb
mov
leave
mov
add
jg
xchg
nop
scas
int3
sarl
lahf
sbb
mov
inc
jnp
mov
cld
sub
or
cmpsb
inc
sbb
mov
je
jno
sub
aas
out
dec
and
or
dec
mov
push
cmc
push
pop
xchg
adc
mov
repnz
jno
cld
jo
test
jl
loop
push
jge
sbb
cmp
jle
inc
scas
fcmovbe
das
mov
not
jne
loope
dec
inc
movsb
movsl
mov
push
push
and
mov
sti
pusha
adc
insb
cltd
cmc
mov
pop
clc
fstp
xchg
fiaddl
xchg
xor
mov
sti
push
enter
jnp
sti
inc
add
pop
testb
or
lahf
jne
and
xlat
cltd
enter
inc
dec
sub
lahf
pop
jne
xor
and
lock
bound
cmp
sub
pusha
inc
imul
jecxz
cmp
loop
sbb
lock
and
or
jb
add
sti
cltd
repnz
scas
fiaddl
test
push
adc
pop
je
mov
lods
into
mov
lcall
dec
sbb
sub
es
sub
cmpl
cmpsl
imul
push
inc
mov
jp
inc
adc
and
scas
mov
popf
sbb
lret
scas
push
cmp
xor
xor
push
pop
enter
les
inc
jbe
cmp
xor
ja
jmp
cmpsb
adc
outsb
in
mov
inc
add
cmpsb
cld
mov
mov
sub
popa
dec
pop
cmp
jb
ds
lea
inc
jnp
push
xchg
xchg
mov
shrb
dec
pop
jmp
sub
insl
movsb
mov
mov
pushf
dec
push
lods
loope
push
popl
dec
mov
sub
cwtl
scas
cwtl
adc
or
adc
push
ds
lds
out
pop
rdtsc
cmp
or
push
mov
jno
jno
jle
loope
xchg
int3
mov
xor
int
scas
shll
out
sbb
push
leave
xor
gs
outsl
xor
jo
pop
cmp
fcomps
or
adc
cmc
ljmp
adc
out
xchg
mov
and
inc
inc
push
das
push
push
cmp
push
push
mov
dec
cld
mov
cmc
jno
mov
loopne
pop
jmp
xchg
xor
lret
rolb
jb
int
add
xor
addr16
test
lods
test
pop
pop
xor
mov
neg
push
push
jle
jl
sub
out
jo
icebp
test
lret
add
cmp
mov
jns
sub
pop
push
pop
out
mov
lods
aam
adc
pop
jle
rcrl
and
xor
xchg
add
shlb
sarb
fbld
les
jae
adcl
lahf
es
xor
cwtl
xor
movsb
lds
enter
aaa
aam
xor
sahf
pop
mov
jno
scas
aaa
in
pop
jmp
out
lahf
cmp
lea
jle
cmp
and
jnp
mov
std
mov
xor
mov
sub
arpl
orb
fcomps
decl
imul
push
stos
sub
lds
std
cmp
jb
push
xchg
imul
push
push
jne
iret
iret
mov
addb
mov
adc
mov
je
data16
cmp
lcall
and
or
je
insl
popf
js
mov
pop
gs
ja
imul
cmc
and
out
sub
roll
sti
push
aaa
adc
adc
inc
xchg
push
out
jmp
dec
xlat
xchg
push
xchg
fisubrs
mov
outsl
incl
pop
adc
filds
xchg
push
out
and
cltd
loop
add
sbb
jge
adc
xchg
or
jno
sub
adc
adc
arpl
mov
or
loopne
int
nop
jge
ja
cmpb
out
cld
or
mov
pop
xchg
or
pop
cmp
test
pop
or
and
das
add
test
mov
jmp
aad
loopne
fidivrs
clc
push
inc
call
dec
mov
out
add
push
adc
loop
je
fmul
daa
mov
sbb
fdivl
in
or
loopne
mov
sub
mov
xor
sbb
push
cmc
and
ljmp
mov
lahf
out
add
push
int3
dec
dec
pop
cmp
xchg
inc
mov
xor
mov
fisubrs
int
or
cmpsl
push
mov
test
mov
pop
or
lret
outsl
dec
sbb
sub
ja
mov
scas
ficoml
ds
subb
jb
imul
jo
roll
shll
clc
xor
mov
mov
push
jg
add
imul
push
lcall
ljmp
or
cmpsb
aaa
inc
mov
xlat
scas
aad
push
mov
sub
and
mov
les
pop
mov
xchg
dec
mov
js
rcrb
mov
pop
movsb
and
cmpb
sbb
mov
cltd
clc
push
das
fmull
sbb
jo
add
cltd
add
sbb
test
xchg
test
test
xor
pop
cwtl
rcr
out
push
mov
xor
out
cwtl
loop
cmp
mov
pop
mov
pop
sub
imul
aam
xor
inc
ret
les
cmp
dec
lock
lds
andb
mov
cmp
into
shlb
movlps
jp
jmp
dec
pop
nop
insl
sbb
push
or
sti
mov
jae
into
bound
mov
pop
popf
faddl
cmpsl
adc
pop
jl
pop
mov
rcr
in
je
out
sbb
xchg
sub
popf
icebp
jecxz
lret
jmp
xchg
mov
popf
popa
data16
and
sbb
mov
cwtl
cmc
sahf
pop
push
mov
sbb
push
lods
popf
scas
sub
add
out
ds
jno
adc
inc
out
pop
cmp
insl
mov
jp
inc
jle
push
xchg
mov
xchg
cmpsl
ds
ljmp
test
cld
cld
insb
hlt
adc
cmp
ret
enter
adc
out
inc
sbb
mov
jecxz
sti
in
add
loop
popa
xor
jge
pushf
add
cwtl
or
sti
and
mov
add
push
xchg
mov
fnstcw
lds
mov
push
xchg
rcrl
push
int3
mov
sub
sbb
push
jl
xchg
cmp
push
mov
xchg
jl
cmc
out
sti
xor
pop
lcall
mov
popf
cmp
daa
cmp
adc
or
nop
sub
xor
ds
jg
pop
dec
adc
outsb
fsubr
fcom
pop
stos
adcb
lods
shl
jne
out
aaa
scas
jg
dec
xor
stos
sarb
fdivrl
inc
dec
orb
and
lea
pop
jg
inc
fimull
iret
inc
lahf
imul
push
or
jns
leave
and
std
cmc
sbb
das
mov
jecxz
stc
jb
push
aam
int
fisubs
andb
movsl
push
xchg
add
inc
mov
js
adc
repz
and
inc
loop
icebp
cs
fwait
or
mov
or
shl
jg
dec
pop
dec
dec
mov
loope
leave
lcall
mov
push
and
pop
inc
in
pop
test
hlt
les
das
pop
or
iret
cmp
lahf
fcompl
pop
xchg
je
xchg
push
ja
lcall
enter
mov
sbb
aad
stc
push
ja
hlt
inc
andb
in
or
fbld
rcrl
sbbl
imul
sbb
adc
adc
inc
loop
je
lret
cmp
imul
dec
ficoms
je
mov
addr16
and
fwait
std
faddl
pop
dec
popa
cwtl
add
xchg
push
test
push
xchg
jb
dec
push
push
je
int
cmpsl
push
loopne
and
lret
add
mov
insl
jge
xchg
lock
cwtl
ljmp
cmp
cmp
push
sti
cmp
push
mov
and
jge
idivl
add
and
arpl
xchg
fldenv
fidivl
setp
cli
test
cmp
lea
dec
dec
mov
insl
mov
addr16
push
mov
mov
cmp
roll
fwait
int3
jb
nop
push
sbb
inc
aad
jge
addb
jl
shrb
lcall
dec
lods
ss
adc
clc
sub
mov
bound
cmpsb
adc
jmp
gs
push
fstl
mov
jmp
decl
in
xchg
shlb
xchg
bound
lea
in
or
fisttpll
insl
rorb
jmp
fistpll
mov
jo
mov
enter
sub
data16
cmp
jmp
rolb
nop
fstpl
loopne
xchg
lret
jno
and
and
or
cmp
out
test
adc
mov
data16
loope
jb
jo
add
pop
xchg
insb
cmp
clc
jmp
adc
cmp
aaa
sahf
inc
loope
pop
ret
addr16
mov
call
mov
and
aas
or
insl
loopne
add
sahf
jge
add
nop
xchg
cmc
pop
int
fs
iret
sbb
add
sbb
push
adc
mov
mov
loop
sbb
pop
andb
frstor
pushf
aam
mov
xor
push
outsl
std
in
add
stos
or
xlat
adc
mov
ret
mov
stos
in
ds
stc
cmp
in
in
sti
jbe
mov
sub
call
push
jmp
xorb
mulps
scas
rcr
loope
jle
xchg
jo
in
push
ss
sub
outsb
jmp
or
in
imul
mov
adc
mov
out
fld
les
jecxz
xchg
add
mov
sub
inc
fmuls
pop
js
je
mov
arpl
les
xchg
adc
dec
cmp
sbb
and
xchg
stos
aas
jle
out
push
push
imul
cmp
mov
inc
jnp
sub
mov
adc
call
add
mulps
addr16
out
mov
iret
mov
dec
pop
jo
sub
pop
arpl
xchg
test
outsb
idiv
adc
dec
mov
enter
cmc
fwait
lds
pop
mov
outsl
data16
rol
jmp
loop
xchg
popa
dec
jb
test
out
mov
xor
outsl
sbb
and
xor
xchg
test
out
xchg
dec
mov
xchg
or
mov
xchg
push
imul
inc
mov
js
adcl
jge
push
ja
ss
and
xor
jl
fwait
mulb
jl
pop
xchg
lea
push
into
push
add
jno
mov
push
in
cld
xchg
or
inc
jle
mov
push
popl
notb
shlb
sub
sbb
push
sub
scas
pop
push
push
xor
xchg
mov
xchg
fs
add
cmp
mov
xor
rorl
in
dec
inc
cmp
add
dec
pop
mov
mov
fwait
pop
sbb
loope
mov
jae
ja
es
ja
int
push
jg
add
cmp
and
jb
xchg
jmp
xchg
sti
addr16
jb
add
mov
in
es
mov
imul
xchg
inc
loope
adcb
das
jae
push
pop
pusha
jo
rolb
pop
mov
negl
ret
dec
push
pushf
in
sbb
inc
xchg
out
sub
mov
je
jl
lret
subb
adc
mov
xchg
movsb
adc
mov
test
test
adc
clc
shlb
gs
out
shll
imul
jns
cmc
xor
and
mov
mov
mov
or
xchg
js
pop
adc
in
jecxz
jg
gs
xor
jmp
arpl
aas
mov
add
add
adc
aas
test
push
xorl
insl
lret
inc
xchg
call
faddl
cld
xchg
adc
insl
loop
cmp
das
mov
je
imul
pop
mov
mov
xlat
setno
xor
or
inc
xchg
jae
pushf
cs
andl
xor
push
ljmp
jg
in
sub
in
jg
push
inc
fucomi
popa
xorb
test
pop
hlt
ja
popf
inc
pop
pop
xor
xchg
lcall
popf
lods
dec
push
push
call
cmpsl
std
in
daa
or
pop
js
and
inc
in
mov
xor
mov
xor
fld
not
addb
sbb
adc
or
test
or
add
jp
out
pop
movsl
fcmovnb
cmp
add
push
movsl
fdivrs
orl
mov
test
cmp
inc
out
notb
xorl
arpl
icebp
mov
popf
scas
or
mov
pop
scas
mov
dec
sub
inc
rclb
clc
push
mov
cmp
sbb
push
xor
mov
iret
xchg
out
push
jne
fs
inc
cmpb
xor
es
les
jns
mov
pop
mov
or
outsl
sbbl
inc
mov
outsl
xchg
aad
fdivs
mov
int
or
pop
sub
adc
dec
icebp
lods
cli
inc
aaa
movsb
mov
sbb
stc
movsb
ret
sub
test
std
loop
or
add
or
sub
in
iret
outsb
push
push
cmpsb
cld
pusha
call
mov
or
das
add
bnd
out
sbb
push
les
lret
lods
cmp
addr16
push
out
mov
xor
adc
pusha
push
push
loop
jmp
dec
outsl
fstpl
cmp
dec
mov
ds
sbb
aad
cld
and
push
out
incl
mov
outsb
fcmovbe
shl
incb
rorl
and
add
int3
jo
cmpsl
mov
cmp
mov
mov
lds
out
xor
adc
lods
ljmp
stc
dec
dec
mov
loope
rcrb
loop
adc
and
push
jo
in
pop
push
iret
in
dec
shr
inc
ficoml
pop
arpl
sub
cwtl
and
jae
cmpl
xor
rcrl
rclb
push
mov
cmp
pop
xor
pop
mov
or
dec
pop
dec
adc
pop
xor
push
pop
mov
ja
mov
push
in
adc
mov
jne
sarb
sub
mov
pusha
shrb
or
outsb
pushf
loope
pushf
sbbb
jb
std
push
add
divb
cwtl
mov
add
pop
mov
cltd
popa
xchg
sarl
add
inc
cmp
pop
cli
mov
test
icebp
push
cs
inc
pop
insb
xchg
bound
sbb
jl
mov
xorb
push
pushf
xor
sbb
mov
gs
loope
aad
xchg
js
mov
pop
pusha
nop
push
dec
inc
sub
adc
mov
in
in
push
jo,pn
mov
aam
arpl
cwtl
sbb
and
into
ret
sahf
push
sti
mov
push
js
not
push
cld
jbe
mov
xchg
cld
repnz
sbb
jp
cmpl
fbstp
cltd
jge
ficoml
fcoms
jg
inc
ror
cwtd
cmp
and
mov
xchg
mov
cwtl
cmp
add
cmp
test
addr16
popa
lods
sahf
pop
hlt
adc
andb
pop
cmp
jmp
cltd
and
cld
flds
cli
fwait
add
mov
xlat
adcl
dec
push
out
loope
push
lods
xor
aad
push
pop
xchg
psubd
xlat
mov
popf
fimuls
xor
adc
dec
gs
mov
in
faddl
pop
mov
cmpsl
cld
jnp
fnstenv
loopne
cwtl
xchg
test
xor
adc
notl
pop
mov
mov
test
decl
xor
lods
out
jae
push
or
jnp
xor
lret
push
idivb
rcl
sub
mov
jo
pop
adc
pop
jmp
xchg
mov
fisttpll
dec
lock
add
push
loope
loop
jl
mov
gs
mov
movsl
xor
push
mov
mov
repz
aaa
cs
ret
sahf
mov
add
and
cmp
stos
bnd
ret
cmp
pop
ljmp
outsl
aas
xlat
aas
cld
into
loopne
jb
sarl
sbb
hlt
jg
call
push
jb
pop
mov
adc
push
jmp
aad
mov
cwtl
or
cmp
jp
inc
sbb
cmpsb
in
je
test
xchg
push
push
int
in
pop
ret
sub
clc
sbb
mov
test
cld
mov
iret
jno
mov
out
add
lahf
stc
xchg
stos
cmp
sub
or
std
outsl
push
popf
adc
jecxz
cmpl
or
add
adc
push
jns
jmp
push
cltd
mov
cltd
xchg
push
imul
xchg
jae
loope
cltd
pop
mov
sbb
push
sub
pop
fistpl
pop
inc
ds
push
adc
adc
mov
and
loopne
mov
dec
and
icebp
cmp
pop
jg
cltd
dec
push
xorl
sbb
repz
fwait
mov
popf
repz
lret
pushf
sbb
sbb
ljmp
jo
sub
enter
mov
push
dec
push
jne
pop
into
jbe
sub
and
lcall
int
daa
shl
fbstp
jns
sti
add
xor
inc
xchg
xor
jns
mov
stos
sbb
adc
add
push
cmp
ret
int
pop
lret
xor
call
js
sbb
and
filds
jne
add
pop
scas
enter
out
pop
inc
adc
and
test
push
in
fiaddl
mov
out
fsubl
add
mov
sbb
inc
cmp
negl
lret
js
mov
leave
not
int3
sbb
jnp
iret
lahf
xor
aad
pop
sub
jl
movsl
mov
jg
lds
adc
xchg
add
fs
jb
aas
nop
mull
in
jle
xor
inc
add
outsl
jae
les
mov
xlat
mov
aam
dec
popf
sahf
sub
sbb
aas
mov
inc
test
xlat
xor
push
in
jp
mov
repz
imul
call
call
xchg
lret
je
mov
sbb
out
lret
arpl
iret
inc
cmp
pop
adc
lcall
jmp
dec
mov
sbb
lcall
int
jno
addr16
iret
fildll
and
jo
cmpb
xor
jg
lods
dec
push
inc
inc
pop
or
stos
adc
mov
mov
xlat
mov
push
jmp
xchg
adc
daa
mov
jbe
jmp
stos
push
sub
jo
inc
call
fs
or
pop
test
pop
pop
mov
push
dec
dec
arpl
int3
movsl
dec
mov
loope
call
jmp
inc
adc
cwtl
sub
int3
out
fadds
pop
pop
mov
out
mov
jl
xchg
mov
das
dec
idivb
cld
jno
dec
jecxz
lods
or
cmc
int
ds
cld
xor
or
insb
or
pop
pop
adc
adc
cltd
mov
sahf
push
sub
ret
scas
std
sub
add
xor
enter
aad
lcall
mov
xor
push
xchg
cmp
pop
mov
ret
pop
adc
lods
mov
sbb
pop
mov
xor
mov
and
scas
mov
jns,pt
xchg
inc
fdivs
cmp
sbb
sub
mov
imull
and
and
test
inc
mov
dec
jns
add
mov
fldcw
mov
sbb
shrb
popa
sarb
add
add
xchg
inc
sbb
dec
adc
xchg
test
cld
sbb
scas
sub
movsl
xor
mov
xchg
lahf
xor
in
loop
mov
jl
popa
sbb
inc
cmpsb
imul
in
xor
push
push
enter
loop
push
mov
fnsave
or
mov
add
pusha
jge
lahf
in
into
sbb
bound
ljmp
add
pop
ljmp
cmp
dec
mov
xchg
or
pop
sbb
add
dec
insl
push
lret
jno
imul
cmp
dec
enter
cltd
sbb
lods
mov
arpl
dec
mov
ret
mov
sahf
outsl
cld
xchg
rcr
rorb
daa
testb
cmc
inc
and
inc
iret
ret
in
sub
icebp
adc
dec
inc
sarb
add
loopne
lea
in
mov
mov
push
ss
jb
and
aas
popa
mov
loopne
push
xor
dec
insl
mov
cld
and
mov
fistps
cmpl
testl
fstps
or
or
and
jae
dec
jbe
nopl
les
shlb
xor
bound
sbb
or
inc
mov
fwait
or
imul
cmp
dec
pop
xor
push
mov
xor
jg
std
mov
sbb
push
sbb
inc
sbb
or
xor
imul
popl
std
stos
jbe
fsubrs
gs
cmp
jg
add
out
mov
cmc
not
add
lods
mov
lds
push
mov
add
into
lahf
aas
lcall
xchg
arpl
cmpl
sbb
sbbl
aaa
cmp
jae
xchg
addb
push
adcl
inc
mov
sahf
js
push
jno,pn
and
or
or
push
mov
sbb
mov
fs
cmp
xchg
jp
leave
inc
lods
enter
pop
xchg
push
xchg
movsb
and
or
sub
inc
mov
fwait
ret
aad
xor
test
pop
and
sahf
sub
mov
imul
dec
sub
and
push
sub
mov
ja
mov
rcrb
cltd
gs
mov
or
xor
jg
in
pop
outsl
mov
cld
and
jbe
add
push
and
mov
push
add
rcll
dec
iret
insb
pop
inc
cmpsb
lods
enter
dec
cmp
aad
je
mov
lret
xor
xor
jp
push
xor
mov
cmpb
lea
shrl
pusha
xor
cwtl
ror
ret
push
jg
cmpsb
hlt
push
cmpsb
ljmp
ds
xchg
dec
inc
gs
cli
mov
jmp
sbb
xchg
adc
mov
test
ret
xchg
mov
pop
sub
shll
mov
cmp
repnz
cwtl
imulb
push
mov
sub
sbb
mov
sar
pop
mov
test
mov
adc
outsb
pop
pop
shl
mov
loop
data16
out
aaa
sbb
fs
popf
outsl
sub
aad
out
mov
ljmp
and
cmp
xlat
sub
stc
es
popf
or
push
push
jmp
mov
jbe
int3
mov
add
and
shlb
cmp
xchg
dec
outsb
les
lds
ss
orl
aam
lds
repnz
jae
and
movsl
cmp
insl
ss
jecxz
jb
clc
rcrb
or
fs
in
stos
ljmp
aaa
pop
push
fistl
arpl
xlat
add
sbb
test
stc
jnp
iret
ljmp
test
inc
aaa
xor
ret
jecxz
cwtl
pop
add
lea
ror
jg
push
sbbl
stos
jg
ljmp
lret
and
rolb
mov
lock
sahf
push
sbb
cmpsl
mov
mov
ljmp
dec
sbb
imul
test
jo
lret
out
mov
scas
or
orb
jno
js
js
mov
or
lahf
inc
jno
repz
stc
psrlw
nop
cmpl
cwtl
inc
addr16
mov
daa
cmp
add
sbb
in
rol
cmp
adc
pushf
stc
mov
popa
jo
and
jne
or
cmp
out
clc
sti
sarb
sub
jae
add
stc
test
jmp
loope
mov
fimuls
and
adc
loopne
jmp
mov
pop
jmp
out
std
add
sbb
insl
xchg
loope
lock
movsb
and
dec
adc
lcall
pusha
and
mov
hlt
test
cltd
enter
mov
sti
sub
les
or
in
and
fs
push
insb
xchg
jl
in
sbb
stc
xchg
add
mov
add
dec
fcomps
std
mov
fidivrl
push
ljmp
cmp
jo
xor
aas
loop
out
je
mov
lret
pop
sbb
ja
jmp
or
test
aad
inc
jmp
andb
inc
arpl
or
cli
mov
pusha
mov
mov
adc
rclb
clc
sbb
ss
push
cld
popf
fnstsw
imulb
lds
pop
jbe
std
sub
insl
push
lret
pop
jge
mov
enter
xor
cmc
ds
repz
lods
dec
jle
push
push
add
inc
dec
lahf
lret
dec
loope
aas
cmc
jg
push
sub
cmp
sbb
dec
iret
shrl
fs
sub
movsb
adc
or
cmpsl
pop
sbb
xchg
das
es
outsb
lret
int
sbb
enter
ja
inc
mov
and
enter
loopne
out
lret
xor
shrb
or
sti
xor
push
cmp
popf
push
cmp
jmp
sbb
fucomi
test
and
push
popf
adc
fnstcw
mov
in
dec
and
imul
mov
mov
mov
xchg
push
idivl
int3
stos
shrb
mov
fiaddl
lods
pop
dec
mov
jnp
mov
and
push
mov
insl
out
mov
stos
xchg
cmp
sub
subl
subl
pop
mov
cmpsl
pushf
jb
scas
test
add
xchg
aad
out
adc
lds
dec
loope
fidivl
jo
mov
aad
pop
popa
mov
mov
push
adc
mov
cltd
add
es
adc
inc
mov
pop
xor
push
cld
xchg
mov
sbb
xor
addb
mov
sbb
xorl
push
sub
adc
fcomip
fs
rol
xorb
ud1
fwait
in
sub
test
cmp
aas
xchg
ret
faddl
sbb
mov
roll
adc
shlb
rorl
sub
test
jge
and
sub
sbb
cmp
inc
mov
mov
xchg
mov
jmp
pop
adc
mov
xchg
adc
hlt
xor
push
push
jle
pop
movsl
ja
cmp
in
inc
mov
push
and
aam
or
sub
cmp
xchg
adc
enter
xchg
test
loope
xor
scas
dec
adc
popa
scas
sub
cmp
jnp
inc
clc
cmp
out
loopne
test
fldt
adc
mov
mov
lds
pop
xor
je
add
sub
popa
je
psraw
pop
retw
dec
push
sbb
mov
data16
cltd
sbb
mov
mov
out
sbb
xor
mov
cmpsl
pop
cmp
sbb
leave
fisttpll
icebp
sub
lcall
mov
adc
xchg
jmp
or
mov
lds
cmp
in
aad
cltd
pop
test
xchg
xchg
test
sbb
cwtl
mov
dec
pop
or
push
xor
add
sti
stos
inc
rcll
adc
out
dec
and
sub
test
xor
cmp
nop
jg
out
data16
push
sub
aas
adc
cmpsb
sub
mov
das
cmp
ss
push
jbe
xor
adc
mov
loope
pop
shlb
rcl
mov
pop
mov
mov
mov
pop
mov
scas
push
imul
pop
pop
je
fwait
dec
pop
sbb
pop
cmp
push
sub
cmp
mov
pop
fsubrs
dec
popf
mov
jne
mov
ja
sarl
dec
adc
push
repnz
std
jae
lcall
call
fs
sbb
popf
imulb
or
adc
pop
imul
int3
lods
popf
cli
cld
mov
push
lahf
jmp
xor
adc
or
enter
out
jns
pop
adc
pusha
scas
in
inc
sbb
frstpm(287
adc
stc
mov
cmp
aad
aam
enter
mov
sub
popf
xchg
cmpsl
enter
adc
xor
daa
jne
bound
or
mov
pop
mov
xchg
mov
inc
jb
mov
es
cli
mov
adc
xchg
je
ret
adc
push
xchg
addr16
insl
mov
incb
es
je
andb
les
or
popf
popf
pop
sbb
leave
mov
cmpsb
not
in
vpmovmskb
jo
cli
adc
or
add
int
dec
mov
das
popf
dec
sbb
lds
in
test
adc
iret
icebp
jl
mov
add
outsl
jecxz
arpl
loopne
sub
sahf
in
cmovge
or
in
adc
test
lock
xor
call
sbb
sub
adc
addr16
add
add
and
int3
das
std
or
mov
aad
or
adc
orb
insb
aas
pusha
adc
out
jnp
xor
ljmp
pushf
sbbl
dec
ds
or
and
xlat
sub
loopne
mov
jmp
mov
sub
xor
test
out
insb
das
aad
pop
dec
sbb
inc
lods
and
fucomp
loope
and
mov
xorb
or
rorl
ret
std
cmc
add
and
mov
daa
mov
jle
mov
icebp
into
dec
nop
mov
stos
out
ret
clc
cmc
addr16
xchg
sub
mov
and
jo
scas
pop
mov
dec
stos
mov
sbb
jp
push
aas
insb
push
aas
cld
cmpsl
cmp
push
in
nop
lods
push
adc
sub
and
imul
mov
mov
sub
sbb
push
xor
fists
or
leave
jae
and
mov
cvtpi2ps
pop
add
lcall
cmp
roll
lret
add
mov
fsubl
cld
out
pop
xor
popa
mov
rcl
lcall
xor
jno
mov
mov
out
push
outsl
inc
jns
mov
adc
lret
sbb
pop
pusha
enter
pop
test
mov
pushf
dec
sbb
addr16
shrb
and
dec
stos
push
clc
dec
pop
push
movsl
inc
fnstcw
test
nop
repnz
jmp
cmc
out
mov
addb
xlat
push
iret
push
xlat
aas
sti
add
jne
add
das
int3
jnp
sub
cld
push
sub
xchg
inc
and
clc
aaa
jnp
in
loopne
xchg
imul
jnp
adc
in
sbb
pop
xor
mov
loopne
std
add
dec
aam
mov
mov
xor
push
out
jno
lret
cmpsl
mov
jo
lods
xchg
mov
and
dec
popa
mov
inc
iret
jo
out
push
stc
or
xor
ds
clc
xchg
or
cmp
pop
mov
lcall
add
sub
pop
jb
or
cmp
aas
fisubl
adc
pop
adc
fmuls
push
neg
popa
mov
in
pop
or
mov
adc
fnstcw
cltd
cmpsb
pop
je
in
xchg
xor
dec
daa
mov
add
cmc
cltd
push
cmpsl
jg
out
pop
lock
mov
mov
popf
inc
popa
jge
pop
or
adc
inc
jno
xor
xchg
gs
push
xor
imul
dec
testl
std
add
test
pusha
or
pop
xchg
mov
mov
cltd
cltd
adcl
inc
fstpl
adc
jb
repnz
sti
testl
mov
stos
lahf
vmread
pop
cmp
addb
test
mov
repz
push
jecxz
data16
mov
outsl
fcmovnu
popa
psubusw
test
shlb
sarl
adc
mov
lods
aaa
js
inc
cmp
adc
jbe
sbb
out
inc
dec
nop
push
and
popf
ja
xorb
in
jnp
aaa
pushf
dec
out
sbb
pop
fcom
pop
arpl
pusha
int3
imul
mov
into
pop
xchg
scas
int3
aam
out
push
dec
pop
int3
pushl
shrl
in
xor
jg
jbe
pusha
adc
jb
mov
sti
enter
push
pop
mov
sub
lock
test
xchg
adc
xor
pop
dec
xor
lock
into
push
adc
scas
jl
lret
pop
hlt
nop
loopne
dec
mov
cmp
xchg
cmp
addr16
sub
push
jnp
leave
nop
sub
push
loop
aad
sbb
push
inc
in
mov
sahf
lcall
jecxz
sbbb
jb
sub
mov
es
bound
xchg
push
dec
mov
or
jo
aam
jp
mov
push
push
test
mov
movsl
es
mov
push
fdivs
sub
fimull
inc
mov
cwtl
jb
lahf
adc
mov
cli
sbbb
push
inc
jp
xchg
mov
pop
pushf
and
xchg
hlt
shrb
push
inc
xor
es
aaa
cltd
fmulp
inc
lahf
popf
lods
scas
xchg
in
lods
xor
lea
mov
push
cli
in
pop
cmp
imul
sbb
mov
pop
and
int
or
cmpsb
clc
les
xor
pusha
cli
cmp
xor
inc
inc
pusha
sarl
les
stc
popf
push
mov
jae
xchg
mov
arpl
bound
adc
out
mov
cmp
inc
inc
sub
pop
inc
pop
dec
add
aad
xor
mov
mov
cmp
repnz
mov
cmpsb
sbb
cli
jo
xchg
sub
aad
dec
rol
dec
cmp
mov
jl
push
shl
jl
xchg
and
ss
int
shrb
lahf
or
aaa
push
js
cmp
push
loope
xor
or
stos
jnp
mov
jecxz
mov
js
jne
push
std
or
mov
sub
inc
imulb
jmp
dec
mov
mov
mov
sbb
fisttpll
clc
in
cmp
sti
and
adc
insl
jp
das
lret
ds
xchg
jbe
imul
push
lret
add
jae
mov
lea
rol
iret
mov
jmp
pushf
jo
stos
xchg
cmp
in
pop
jg
push
push
xchg
aaa
or
and
scas
inc
and
cmp
std
aad
je
push
dec
aaa
es
mov
sub
fldt
jmp
inc
orl
mov
mov
iret
mov
lret
sbb
mov
das
push
xchg
pop
mov
mov
iret
jo
insl
cwtl
push
mov
sbb
inc
fsubs
popa
jl
hlt
mov
pop
dec
inc
enter
sbb
fcoms
xor
orb
lods
mov
roll
stos
xorl
xor
dec
mov
push
aaa
icebp
inc
fbstp
push
push
ret
mov
cmp
int3
stc
lret
mov
and
fcomip
mov
inc
xor
push
cmp
xchg
leave
cmp
hlt
xchg
aas
mov
adc
cmp
lock
xor
xor
out
pop
push
pop
and
std
mov
xchg
insb
dec
cli
mov
or
mov
test
cli
inc
jg
dec
icebp
sub
add
into
inc
jl
subl
subb
testb
scas
aam
adc
push
pop
std
imul
out
sbb
xchg
xchg
dec
and
movsl
mov
stc
repz
or
test
inc
fs
imul
mov
mov
jecxz
gs
aaa
adc
js
inc
daa
imul
data16
mov
jnp
mov
scas
fxch
ja
ljmp
lea
adc
fcomi
pop
rorb
add
dec
jo
in
xor
repz
movsl
ret
sub
repz
lds
pop
lock
lock
sub
int3
push
jbe
jne
test
aam
in
pop
les
hlt
icebp
adc
push
loop
ror
jmp
shll
or
add
push
ds
add
sbb
ret
adc
comiss
sbb
loope
pop
pop
xor
pop
or
imulb
mov
push
dec
outsl
adcl
jl
outsb
push
in
mov
xchg
add
xchg
lcall
jg
pop
xchg
pop
jbe
cmpsb
xor
add
addr16
shl
push
clc
add
push
cwtl
out
mov
aaa
movsb
scas
lret
mov
leave
jl
dec
lahf
pop
aas
dec
push
jl
in
out
pusha
mull
sub
jmp
push
push
punpcklbw
inc
or
cli
mov
mov
ds
leave
add
inc
aas
mov
cmpb
int3
cmpsl
sbb
or
fcoml
push
inc
jle
push
rorb
push
mov
jno
inc
xchg
nop
test
stos
insl
cmp
adc
pushf
sbb
insl
pop
dec
pop
mov
scas
push
adc
out
lcall
pushf
pop
es
inc
sub
xchg
pop
mov
push
popf
repz
and
jmp
cltd
mov
jo
pop
sub
adc
in
jecxz
lret
cmp
data16
mov
movsl
shrl
xor
jmp
jae
std
jbe
fnstcw
pop
push
repz
cmp
inc
mov
pop
mov
mov
lock
jb
xor
fs
fmuls
push
push
movsl
and
adc
dec
stc
sub
mov
pop
dec
mov
test
jecxz
pushf
mov
adc
mov
pop
gs
xor
dec
push
and
arpl
stos
xor
xchg
sahf
stos
or
adc
sbb
dec
sahf
das
out
xor
adc
inc
out
jbe
cmc
ret
jp
ret
rorb
jo
gs
or
jmp
decb
sbb
mov
jb
and
loopne
mov
dec
cmpsl
cmp
xor
mov
test
bound
mov
nop
decb
insb
and
inc
push
push
cmp
adc
mov
inc
xor
gs
movsb
enter
sbbb
cmp
mov
adc
mov
push
adc
stos
sti
arpl
cmp
or
jl
out
testl
cmp
outsl
jbe,pt
dec
push
inc
adc
xchg
das
out
xor
pop
jp
stos
insl
xorb
push
shll
call
mov
fildl
mov
lods
jg
sub
pop
ja
data16
xor
sahf
mov
inc
icebp
pop
mov
cmp
maskmovq
negl
lock
imul
xchg
inc
mov
sbb
shrl
push
push
in
jg
fdivs
push
aas
scas
iret
push
xchg
cmp
dec
dec
adc
inc
mov
xchg
insb
xchg
cmpb
out
cmc
lret
or
test
xor
adc
out
movsb
cs
ds
aaa
mov
lret
ficompl
xchg
cli
lds
inc
adc
mov
and
mov
fwait
gs
out
stc
icebp
adc
in
pop
sub
xor
or
sahf
in
push
shlb
in
mov
clc
cmp
jo
in
fisubrs
or
mov
cmp
or
scas
popf
xchg
test
pusha
movsb
and
pop
stos
test
enter
xchg
jecxz
test
ret
inc
adc
mov
xchg
mov
arpl
mov
js
test
xchg
stos
or
jo
push
dec
jno
add
mov
loop
scas
mov
jmp
shll
subl
and
jae
xchg
mov
mov
shll
fldenv
dec
test
roll
dec
jp
sub
ds
outsl
cmp
fstps
xor
movsb
pop
adc
cmp
pop
out
aas
iret
mov
xchg
or
js
lret
cmpsl
call
out
cmovbe
ds
mov
and
icebp
fstpl
pop
and
mov
xor
add
imul
jne
cmp
mov
push
xor
xorl
mov
out
stc
pop
std
outsb
enter
loopne
adc
xor
repnz
sbb
push
lock
aas
sbb
outsl
push
pop
nop
dec
imul
ja
imul
mov
add
and
add
cld
lock
mov
rcpps
popa
aam
sahf
popa
aad
addr16
mov
outsl
adc
pushf
ret
xlat
ds
into
pop
sbb
in
push
loopne
sti
addr16
fbld
jae
repz
push
out
sub
mov
sub
add
sub
jnp
pmaddwd
imul
loop
adc
cld
push
rcrl
and
cmp
xchg
sbb
aas
pop
sub
pop
pop
repnz
fs
xor
js
test
flds
add
lcall
inc
cmp
xchg
inc
sbb
imul
mov
dec
xor
jmp
popa
leave
dec
add
ljmp
mov
inc
and
xor
and
mov
hlt
dec
data16
push
sub
hlt
jae
sahf
jl
lret
mov
pop
push
leave
mov
fadds
int
arpl
test
mov
out
xor
xor
enter
pop
pusha
jne
pushw
mov
inc
dec
movsb
idivb
dec
cmc
icebp
adc
adcb
cmp
scas
jl
lock
pop
outsb
fmuls
icebp
xchg
cli
jg
push
aam
mov
push
sub
pusha
add
push
push
out
mov
repz
mov
mov
mov
add
and
mov
out
jle
sbb
shlb
push
and
push
adc
and
jnp
fisubrl
push
pop
or
jo
xchg
mov
and
fnstcw
mov
mov
lahf
jnp
and
cmp
cmpsl
mov
cmp
mov
mov
and
aad
push
jnp
sti
mov
add
loope
loop
mov
shrb
dec
clc
xchg
xchg
cmp
lahf
xchg
lock
add
div
les
mov
mov
jnp,pn
ss
sub
jl
ja
mov
add
mov
pushf
or
js
jecxz
push
cmpl
lods
jmp
es
ret
dec
cmc
cwtl
mov
adc
fwait
dec
ret
push
gs
dec
dec
sub
jg
push
ljmp
or
and
icebp
cwtl
les
pop
fdivrl
push
cwtl
lea
and
cmp
pop
xchg
clc
pushf
dec
cmp
mov
aaa
xor
lahf
andb
pusha
dec
negb
dec
xchg
push
pop
jnp
or
aaa
sbb
sbb
les
fnstsw
jmp
xor
xor
fs
xchg
xchg
sub
je
mov
adc
jg
push
call
leave
clc
ret
sbb
lret
mov
pop
loopne
bound
push
in
frndint
repz
cmp
ret
arpl
iret
pusha
loopne
and
xchg
cmpsl
mov
ss
mov
inc
mov
pop
leave
xchg
popf
rcr
jns
daa
sub
pop
xchg
in
shrb
outsb
sbb
mov
sub
fs
push
cmp
xchg
aaa
clc
in
jno
cs
jle
mov
jne
xchg
mov
mov
mov
pop
mov
cmp
je
pushf
pushf
popf
cmp
pop
dec
xchg
or
nop
dec
push
arpl
or
pop
popa
arpl
clc
arpl
or
xor
call
xor
bound
pop
dec
adc
cli
inc
int3
cmp
insb
cmp
xor
inc
sbb
push
mov
push
out
or
imul
fcoms
int
mov
add
aad
mov
xlat
cmp
fsts
xchg
fwait
clc
sub
out
cmc
rorb
jmp
sub
inc
aam
lret
loop
pop
jg
ret
pusha
sbb
or
jecxz
test
adc
arpl
adc
das
add
mov
cmp
mov
push
pop
inc
incl
roll
adc
add
imul
mov
fbld
inc
aas
xor
jp
jb
adc
stos
inc
and
iret
cltd
and
stos
inc
int
imul
push
lcall
push
iret
sub
into
test
push
adc
movsb
xchg
aas
mov
test
cmp
lret
jle
lods
xor
cmpsl
imul
sbb
lret
sbb
ja
cs
cltd
and
inc
popf
je
pop
push
xor
leave
dec
xor
adc
popa
mov
adc
mov
pop
mov
pop
aad
call
push
pop
imul
lret
pop
inc
ss
inc
packssdw
mov
pop
mov
decb
pop
test
push
sub
out
dec
adc
mov
mov
adc
mov
xchg
sub
imul
pushf
movsb
add
data16
les
jle
lret
sti
pop
fdivs
pop
fsubr
stos
push
pop
es
jecxz
add
xchg
adc
ljmp
call
xor
sub
mov
pop
pop
loope
sub
xchg
fistl
orl
jp
dec
xchg
adc
loop
insb
mov
outsl
test
pop
mov
mov
fildll
jp
inc
adc
mov
adc
push
jmp
loopne
push
or
outsb
cmpsb
imul
clc
stos
cltd
jbe
pop
mov
mov
rcl
push
rorb
cs
push
sahf
sbb
adc
inc
mov
test
shlb
mov
cmp
and
insl
jb
or
std
lea
xor
int3
add
js
push
xchg
push
jl
adc
rep
xchg
jb
or
aam
mov
sahf
lret
adc
push
loop
mov
mov
sub
int
xchg
cmp
push
xor
test
mov
pop
xor
dec
shl
xchg
loop
push
xor
or
pushf
mov
jne
cltd
loopne
mov
mov
mov
jo
shll
cmp
cmpsl
std
js
fcmovnbe
mov
xor
or
stos
and
pusha
and
cmp
rcrb
sti
enter
add
mov
xor
shll
in
mov
mov
jmp
insb
aam
gs
add
loope
add
lock
jns
dec
pop
aas
mov
nop
ss
xlat
dec
lahf
std
push
insl
sbb
jns
pop
imul
shll
andb
scas
dec
rolb
add
orb
adc
pop
outsl
aam
jecxz
mov
jge
lcall
add
push
mov
fisubl
into
dec
add
ss
in
xor
rcrb
dec
lcall
add
test
notb
test
outsl
test
xchg
movsl
adc
push
lcall
insb
loope
xor
dec
dec
ret
scas
mov
aas
in
dec
inc
jle
popf
mov
fdivr
test
mov
loop
add
pop
and
insl
pushf
dec
push
sti
jo
cli
xor
jmp
dec
push
cmp
mov
pop
xor
cs
sub
fisubrl
out
sbb
jbe
push
jb
inc
lds
xor
shlb
mov
jbe
pop
cmp
sti
repnz
clc
push
mov
xor
sahf
loope
mov
add
cmp
mov
jle
xchg
out
dec
push
fwait
scas
outsb
jmp
fwait
fs
and
shll
dec
mov
pushf
pop
sbb
repz
xor
pop
into
xchg
pop
jno
out
cltd
push
add
adc
dec
jp
into
scas
mov
adc
ficoms
ret
pop
push
mov
push
sub
push
inc
in
adc
lahf
fs
inc
xorl
subb
call
cmp
pop
popa
jg
lahf
xor
call
mov
mov
inc
repnz
imul
int3
in
and
enter
jmp
push
lret
das
jae
cmpsl
dec
lea
sbb
loope
mov
pop
call
insl
mov
call
add
inc
mov
mov
dec
lcall
shll
add
out
sbb
out
std
stos
lock
mov
sub
pop
and
xchg
ficomps
mov
sub
xchg
push
out
xchg
adc
lods
lods
inc
addr16
lret
arpl
mov
into
rcrl
mov
inc
sub
adc
xchg
dec
or
jno
out
dec
sbb
or
jl,pn
jns
and
and
imul
pushf
testb
sub
pop
aaa
cmp
stos
stos
jg
ret
jmp
shll
enter
test
add
xlat
cmpsl
ret
test
or
pop
outsb
repz
lea
sahf
fdivrl
jns
enter
testl
sti
incl
mov
into
push
pusha
xchg
push
cmpsl
movsb
rorb
testl
popa
mov
cmpsl
fistpll
dec
pop
in
sub
xchg
jns
cmp
sbb
mov
pop
sbb
mov
repnz
movsl
push
xor
mov
adc
sub
and
pushf
adc
stos
pushf
mov
push
mov
fdivp
sbb
jns
outsl
inc
adc
jae
dec
push
sub
cmp
ja
cli
cwtl
mov
je
bound
lcall
cmpb
xchg
mov
add
or
addr16
pop
xchg
sub
and
jb
out
xchg
xchg
push
mov
sbb
cmpsb
cwtl
aad
or
cld
das
jbe
shr
push
clc
mov
sbb
cs
repnz
sti
sbbb
push
hlt
es
pop
mov
stos
mov
fidivrs
pop
cmp
add
and
cmp
or
shrl
out
push
inc
jns
frstor
pop
adc
mov
sbbb
cs
xchg
test
cmpsl
dec
js
rol
mov
xlat
cmp
jecxz
and
jle
inc
mov
test
int
jg
dec
and
imul
sub
std
ja
jle
pop
mov
cld
inc
ss
pop
mov
jns
jnp
mov
andl
add
xchg
pop
mov
loopne
sarl
mov
cmp
jg
or
mov
test
cwtl
mov
adc
cmpsl
and
or
lahf
push
sbb
mov
adc
call
das
jb
sbb
test
xchg
andl
cld
mov
mov
jae
jg
fistl
inc
in
std
test
cmp
push
aam
sbb
rcr
jecxz
shlb
adc
xchg
jne
push
mov
imul
lret
sub
movsl
or
nop
sub
movsl
jl
or
adc
adc
and
shll
test
scas
inc
pop
cli
push
or
or
push
add
scas
popf
ja
pop
or
xor
rcrl
mov
pop
xor
popf
dec
movsb
nop
mov
pxor
lods
test
inc
loop
std
outsl
ljmp
jne
xchg
jl
or
mov
xchg
sbb
icebp
ret
xchg
sub
and
scas
dec
or
jnp
sub
mov
arpl
dec
fwait
loop
push
jg
movsl
lock
lret
data16
push
inc
jbe
ja
mov
idivl
pop
test
lcall
pusha
inc
scas
mov
sub
push
test
pushf
stc
push
into
push
data16
push
push
aaa
add
mov
cmp
xchg
inc
es
iret
fwait
inc
or
sti
test
push
outsl
mov
push
imul
push
add
jb
lock
fdivl
ja
push
aam
adc
cmp
in
pop
insl
scas
inc
int3
stc
das
test
sahf
cli
fdivs
push
jne
pop
push
jmp
cmpsb
mov
ret
and
fwait
xor
aaa
push
test
push
pop
js
add
cmp
lods
fs
push
f2xm1
sbb
inc
cmp
cmc
pop
lds
roll
mov
std
push
bound
jl
fs
xchg
mov
lods
jecxz,pn
inc
lea
or
add
fs
pop
lods
gs
sbb
push
add
shll
lret
jnp
mov
pop
cltd
pop
sahf
std
sub
xor
mov
mov
xchg
popf
outsl
mov
sti
inc
in
cmp
popf
lret
mov
push
rcrb
scas
les
and
lods
mov
jns
push
push
and
sub
imul
in
mov
icebp
lock
cmpsl
push
pop
imul
rcr
pusha
push
jb
jmp
xor
cmp
mov
adc
insb
hlt
adc
cld
jmp
push
adc
outsl
inc
mov
je
xchg
jae
test
lods
pushf
inc
in
inc
xchg
mov
dec
dec
or
dec
sub
fisttpl
cwtl
pop
sbb
or
or
andb
cmp
mov
stc
loopne
into
push
in
push
dec
ss
daa
sbb
lods
cmpsl
outsb
test
test
or
cld
insb
xchg
incl
xchg
out
sahf
lret
pop
sbb
jns
aaa
adc
lcall
ja
sti
sub
cwtl
mov
mov
mov
add
xlat
out
jle
push
pushf
and
fbld
fwait
inc
or
xchg
je
push
ror
xchg
fisubrl
add
ljmp
sub
dec
sub
dec
popa
adc
int
sub
adc
jecxz
mov
lcall
dec
jno
std
out
movsb
dec
fcompl
mov
pusha
movsl
lds
clc
loope
jge
inc
lock
lret
mov
xchg
jae
filds
xor
fisubrl
or
xor
rorb
xchg
xor
ror
mov
xorl
insb
mov
lods
pop
pop
xchg
adc
roll
in
imul
sbb
jle
cmp
push
sub
xchg
cs
xor
cmp
inc
xor
stc
cmp
mov
sbb
mov
push
jmp
out
or
aad
xchg
iret
push
mov
js
insl
pop
popf
mov
jne
or
loope
imul
jmp
cmpsb
ficoml
cmp
mov
cmp
jecxz
pop
pop
mov
movsl
jle
stc
pop
lret
insl
add
pushf
iret
mov
pop
mov
mov
aas
mov
sub
mov
cltd
std
push
sub
push
insl
mov
pop
and
fldt
jmp
sbb
fwait
jb
aas
push
lcall
inc
mov
mov
ror
adc
inc
mov
sbb
mov
inc
andb
xchg
mov
and
mov
and
rcll
mov
add
pop
sahf
or
lcall
add
ljmp
fdivrl
rep
xchg
jl
sahf
repz
mov
mov
jnp
les
xchg
orb
cs
mov
not
xor
pusha
icebp
scas
jl
mov
jl
mov
xchg
jmp
js
int
pop
mov
movsl
jne
scas
add
or
inc
ficompl
sub
enter
cmp
mov
iret
test
movsl
in
fucomip
clc
or
pop
cmp
shl
push
xchg
lock
ljmp
das
cmc
xchg
bound
push
or
sub
add
inc
fdivl
sub
jbe
clc
loop
lret
mov
popa
mov
add
xchg
leave
aas
aas
add
xchg
xchg
mov
mov
mov
imul
fisttpll
mulb
mov
push
fmulp
pop
push
xor
add
sahf
push
loope
mov
das
sbb
cld
rcrl
mov
push
sub
shrl
test
mov
adc
test
fwait
sub
pop
adcl
clc
add
xlat
mov
adc
dec
sbb
mov
fcompl
sub
pop
pop
cld
sbb
xchg
push
xchg
pop
xchg
and
push
sbb
jmp
jno
inc
jbe
mov
bound
stos
add
push
lea
sub
leave
sbb
int3
add
icebp
sub
adc
pop
mov
cld
xchg
addr16
adcl
add
xchg
jl
push
sbb
gs
mov
imul
ds
out
fxch
aam
xchg
dec
loopne
dec
movsl
jns
pop
aam
int3
mov
mov
or
pushf
mov
in
pop
cmp
cmp
ds
ljmp
xor
pop
lock
jnp
lods
leave
popf
mov
inc
cmp
insl
push
inc
jne
rorl
add
push
aaa
push
xchg
rcll
es
shrl
ss
mov
add
xor
out
das
xchg
cwtl
arpl
cmc
in
fcmovnbe
mov
call
sbb
dec
fisubrl
sub
xor
inc
sub
lcall
jg
movsl
test
fimuls
imul
out
inc
fwait
cld
and
adc
mov
dec
fwait
lret
sbb
js
fadds
add
xchg
push
jae
jle
inc
sbb
mov
sbb
fadd
in
stc
call
rcrb
push
popa
sbb
pop
mov
fwait
push
push
jae
dec
or
jne
or
movl
fisubl
mov
sub
or
adc
adc
insb
adc
jp
mov
dec
dec
mov
xor
and
jb
sti
push
test
sub
mov
push
sbb
sbb
mov
add
sub
jne
sti
imul
xchg
mov
mov
xchg
inc
push
push
mov
adc
jo
mov
arpl
out
mov
fcom
rol
test
cmc
pop
daa
daa
pop
lret
jmp
lods
jae
movsl
jnp
sub
and
iret
sahf
cli
xor
insl
jge
icebp
fstps
pop
mov
and
sahf
scas
addr16
out
mov
or
ljmp
push
adcb
sbb
outsl
es
rolb
int
fisttps
das
inc
imul
add
bnd
in
stos
pop
xchg
or
pop
pop
aas
lds
pop
outsl
jmp
mul
dec
sbb
and
cmc
roll
inc
inc
stos
rcl
cmp
lcall
push
dec
jb
aam
aas
fwait
ljmp
fldl
sti
mov
rorb
in
pop
stc
push
adc
push
sahf
push
dec
loope
pop
inc
xchg
xor
xor
or
hlt
fwait
pop
jae
and
adc
inc
cmp
xchg
loop
jge
jne
sub
sbb
dec
push
adc
js
push
inc
mov
lret
xor
mull
in
sahf
mov
inc
and
roll
mov
jb
mov
fcoml
mov
sahf
fwait
leave
sub
xchg
inc
addb
xor
push
outsl
mov
aam
fldcw
sbb
lret
cmc
sub
jge
push
pop
xlat
pop
mov
add
xchg
jmp
cmpsb
pop
mov
pop
push
loopne
cmp
test
rcl
addb
dec
insb
pop
dec
out
loopne
arpl
sbb
fimuls
push
lock
cltd
shrb
shll
adc
mov
iret
or
sbb
mov
lahf
push
sbb
ja
cmpsl
adc
xchg
sbb
loopne
and
push
imul
xchg
aad
int
xlat
pushf
repnz
mov
xlat
push
fiadds
cmp
and
ja
rolb
and
pop
xor
xchg
cld
pop
clc
xor
aas
ljmp
pop
lock
and
les
not
jne
mov
add
imul
in
movsl
sbb
mov
icebp
jb
sub
mov
lret
idivb
xor
fldt
jmp
mov
inc
pop
jne
or
negl
aam
push
cli
cmc
xchg
scas
aam
gs
ja
jnp
mov
jp
addr16
test
mov
mov
fsubr
out
sti
add
mov
inc
jo
mov
mov
adc
call
or
repz
call
inc
adc
sarl
sbb
std
ds
shl
push
rcll
mov
or
stos
jbe
lods
fdivrs
cwtl
add
insl
and
movsl
sarb
mov
dec
sub
sub
dec
nop
or
sub
dec
push
leave
les
add
inc
fisttpll
push
lods
repz
push
aam
adc
xchg
mov
in
adc
inc
adc
pusha
hlt
cmp
scas
cld
ds
push
mov
icebp
inc
movsb
pop
xorb
sub
sub
test
jae
adc
movsl
mov
aad
and
sub
mov
jmp
int3
test
ret
push
mov
cmp
in
das
loopne
out
popf
inc
enter
ljmp
cmp
les
jge
enter
outsb
inc
repz
pop
sahf
jne
lock
in
cmp
or
ss
push
cmp
dec
push
loop
pop
add
mov
mov
add
push
or
xchg
ja
pop
jb
je
leave
cmp
mov
ja
mov
mov
aam
ja
gs
adc
xchg
add
sub
mov
lods
mul
pop
xlat
and
dec
cmp
adc
mov
pop
push
and
into
cltd
xchg
push
xor
or
fisttpll
in
call
repz
mov
jae
push
das
in
dec
xchg
xchg
ret
out
ret
sbbl
mov
add
mov
adc
lret
rorb
mov
xchg
pushw
and
pop
xor
xor
lods
push
and
mov
and
je
push
mov
mov
push
and
int3
dec
xchg
dec
sbb
lcall
test
jg
push
out
fcompl
and
and
xor
subb
out
int3
mov
aaa
out
ss
xlat
cmp
shll
ret
shrl
pop
aas
xchg
nop
or
ss
jae
cmpsl
stc
add
sbb
lret
out
nop
sbb
or
aam
prefetcht0
movsl
inc
movsl
pop
dec
aad
pop
mov
adc
les
pcmpeqd
stos
test
pushfw
pop
inc
cmpsb
cmpsb
push
xchg
add
add
lea
int3
out
mov
outsb
in
xlat
stos
or
sbb
inc
pushf
jb
ficomps
mov
xbegin
adc
jg
inc
int3
push
por
jns
jecxz
filds
movsl
add
adc
fs
insb
loop
mov
lds
out
call
mov
call
jmp
or
lds
je
dec
sbb
dec
jl
sti
hlt
mov
dec
push
add
movb
ret
xchg
sbb
out
or
inc
mov
jle
sbbl
std
ds
mov
or
mov
repnz
push
mov
and
mov
dec
pop
je
lods
xlat
rolb
test
in
dec
dec
ret
dec
cmp
jae
pop
jne
shr
xor
cmp
lods
cld
call
xchg
lods
orb
test
hlt
jmp
test
adc
addr16
push
inc
lods
cwtl
mov
iret
cltd
mov
pushf
popa
cmp
mov
mov
add
lock
add
lea
test
pop
repz
je
push
subb
sbb
jbe
std
addr16
add
sub
clc
adc
fwait
mov
test
push
and
jns
dec
xor
mov
inc
jmp
jb
rorb
ss
imul
pop
enter
mov
adc
xor
mov
jge
pop
test
into
or
dec
pop
pop
mov
dec
imul
mov
push
or
imul
sub
jl
sbb
repz
xchg
jle
add
jmp
xchg
imull
pop
or
dec
bnd
sbb
or
pop
rep
stc
inc
push
jae
je
cltd
insl
adc
add
and
loope
push
adc
pop
hlt
jp
mov
adc
sub
pop
cs
fsubr
ret
jno
or
test
pop
sub
loopne
add
xchg
lret
fwait
stc
hlt
xchg
in
bound
xchg
dec
sub
jo
mov
mov
insl
inc
insb
push
out
jp
inc
adc
push
xchg
ret
add
cmp
lods
negb
jno
sub
sub
sahf
movsl
sarb
inc
cs
shr
xchg
pop
frstor
sbb
arpl
xor
jmp
dec
outsl
cmovbe
insb
enter
sbb
cmc
cmpsb
mov
lea
sub
clc
push
ss
sub
jmp
cltd
mov
push
cmc
adc
test
xchg
cmp
out
pop
out
xchg
ret
xchg
repz
test
or
inc
lcall
cmp
mov
cwtl
aaa
mov
jmp
adc
push
cmp
inc
pop
std
add
pop
in
or
cmc
insl
dec
sub
add
jge
jo
push
aam
out
in
popf
idivb
inc
shlb
scas
jge
and
sub
testl
lret
pop
jmp
adc
inc
rorl
adc
int
in
cmpsb
push
mov
or
mov
mov
movb
and
fnsave
or
lret
xchg
jecxz
adcl
add
lcall
add
fldl
ljmp
xor
jns
dec
xor
movsl
mov
pop
roll
push
pop
xchg
sub
cmp
lods
ljmp
fildll
ds
adcl
data16
daa
sub
pop
fnstcw
es
out
sub
imul
push
stc
mov
into
enter
push
fucomi
test
and
add
xor
divl
nop
loope
sbb
mov
mov
pop
xchg
cmp
scas
dec
xor
andl
mov
push
mov
lret
xor
dec
out
pop
xchg
xchg
out
int3
mov
mov
mov
xor
xor
add
xor
out
add
pop
mov
mov
adc
jecxz
fcomps
add
cwtl
ficoms
cli
sub
cmpsb
pop
mov
mov
adc
add
jo
mov
dec
jle
sub
dec
xor
or
mov
jb
rcl
or
stc
mov
adc
cmp
lds
lock
in
aam
cmpsl
mov
adc
dec
es
mov
sub
negl
lcall
xor
stos
lods
mov
ljmp
imul
vmwrite
adc
sbb
enter
inc
leave
cmpsl
xchg
xchg
dec
cmpsb
cmp
scas
jb
jecxz
adc
adc
rcrb
inc
insl
int3
xor
mov
add
imulb
icebp
mov
addr16
pop
outsl
in
scas
clc
cmp
shlb
push
sub
ja
xchg
xchg
and
in
cwtl
hlt
mov
mov
gs
outsb
push
sub
lods
push
xchg
negb
test
mov
add
push
mov
add
fwait
movsl
popf
mov
mov
mov
jo
mov
pushf
adc
adc
lcall
and
and
inc
fs
ljmp
popa
cmp
and
mov
dec
xchg
outsl
add
mov
decl
dec
repnz
fistps
mov
adc
adc
and
lock
int
lds
sarl
in
loope,pt
ret
pushf
mov
fdivrl
push
mov
lea
jnp
rol
push
pop
scas
fisubl
jnp
sbb
popf
fxch
cli
xlat
fsubs
add
sbb
mov
or
push
cmp
inc
cltd
mov
shrl
cmp
loopne
clc
and
ss
jnp
jle,pt
jge
inc
adc
int
mov
js
dec
inc
mull
loopne
dec
aaa
lds
iret
aad
lcall
jmp
movsl
push
add
int3
popa
ror
std
dec
pop
jnp
dec
or
jno
test
repz
stos
pop
sti
movsb
push
jns
push
iret
fimull
enter
jecxz
incl
mov
jbe
sbb
int3
sub
push
push
push
inc
pop
xor
cld
add
sub
mov
inc
es
xchg
pop
mov
call
movsl
xchg
adc
data16
mov
sbb
outsb
mov
mov
into
sbb
fimull
test
jp
jmp
int
cmp
bound
mov
loop
hlt
add
mov
mov
movsl
stos
aad
jmp
scas
pop
push
cli
jl
cmp
iret
inc
insb
lahf
add
sarl
dec
ret
pushf
mov
or
xchg
add
imul
lods
inc
out
xor
sub
imulb
jnp
mov
and
cmp
inc
arpl
orb
sbb
or
sub
popa
aas
lret
testl
or
les
sbb
lea
pop
ss
test
lret
negl
and
out
fninit
leave
lcall
call
movl
iret
andl
jbe
imul
adc
sbb
notb
bnd
in
xchg
into
mov
xor
mov
nop
cmc
ja
shl
popa
jae
imul
cmp
push
cltd
pop
sub
lds
int
add
fxch
jo
testb
sbb
mov
and
out
data16
cmp
push
push
sub
or
call
cli
jmp
and
mov
push
fs
test
pop
shll
sahf
sbb
stc
sti
xor
loope
imul
pushf
add
icebp
sub
push
cmp
inc
sti
jno
sub
std
push
negb
jle
mov
mov
int3
mov
fcomps
pop
mov
mov
aaa
mov
lret
or
arpl
ja
rorl
pusha
jne
ret
cs
out
test
dec
lret
gs
cltd
andl
das
shlb
push
notl
add
sub
jle
ret
and
xchg
dec
cld
mov
mov
and
jp
sbb
push
call
lea
jmp
jmp
ret
loopne
xlat
push
into
mov
dec
xchg
sub
push
ror
mov
mov
xchg
or
fsubrs
iret
jbe
mov
imul
cmpsb
in
jbe
inc
pusha
dec
addr16
into
push
fldt
jl
lds
bound
lock
pop
jbe
addb
dec
mov
xchg
fmulp
mov
pop
sub
inc
lcall
and
xchg
cmpsb
xorb
xor
jecxz
sbb
icebp
mov
scas
andl
ss
sarl
pop
stos
dec
pop
pop
adc
and
roll
nop
xor
idiv
cmpsb
jle
inc
leave
pop
and
adc
call
subb
bound
sbb
and
dec
fidivrs
stos
sub
cltd
rorl
in
xor
mov
mov
not
icebp
inc
das
and
mov
mov
loopne
adc
arpl
mov
fstl
jle
cld
jp
movsb
push
test
mov
push
test
push
jne
gs
mov
lock
cmp
sub
cmpsl
and
pushf
nop
aam
xor
nop
cs
cmp
je
shlb
dec
test
popf
xchg
adc
pop
popf
adc
shl
lret
pop
std
pop
popf
fidivs
push
subb
insb
aam
jl
loop
cmp
lcall
pop
or
push
insb
in
scas
xlat
xor
xchg
scas
pop
les
lret
xchg
inc
stos
scas
outsb
sub
cmc
les
cmp
mov
sbb
jg
push
shll
popa
pusha
pusha
mov
sarl
push
jb
or
std
xchg
lods
pushf
test
sbb
pushf
push
ljmp
mov
dec
push
cltd
jmp
bound
in
push
cmpsb
lock
add
aad
test
cmp
dec
xchg
xor
cmpsb
rcr
and
pop
xchg
dec
pop
out
push
int
mov
push
push
add
rep
cmpsb
mov
mov
or
and
into
cmpsb
xchg
dec
and
ljmp
rcrl
addr16
cld
jno
sbb
mov
sub
les
sub
aas
pop
cld
stos
and
xchg
or
test
xchg
add
or
push
stos
sbbb
insb
movsb
mov
pusha
cmp
aaa
dec
loopne
ja
cmp
les
mov
jmp
test
adc
imul
data16
out
adc
mov
inc
pop
xchg
cld
xchg
fwait
jle
pop
cld
push
jo
movsb
int3
inc
push
ret
scas
lahf
imull
push
push
dec
scas
or
aaa
aaa
fwait
sub
jp
fidivrs
dec
push
push
out
in
sub
dec
mov
shll
xor
cmp
imul
xchg
enter
lea
aad
jbe,pt
or
xor
lcall
push
negb
divl
push
int3
rcrb
vpunpcklbw
jo
aas
shlb
and
jae
inc
pop
lret
mov
in
sti
iret
addr16
in
or
cld
hlt
add
lcall
mov
mov
orl
or
pop
dec
enter
es
push
js
nop
arpl
jmp
mov
dec
fdivp
sbb
jno
enter
rorb
push
out
jb
pop
out
jp
lock
out
ja
xchg
ja
cmc
cmp
hlt
pop
cmc
test
mov
outsb
inc
or
psrlq
sub
inc
stos
fcomps
sbb
dec
sahf
scas
gs
or
jb
dec
lock
cmp
sbb
ds
dec
cltd
scas
pop
cmc
mov
xchg
loopne
push
mov
mov
lods
jbe
loope
in
daa
sbb
loopne
lods
insl
pusha
out
cmp
pop
rcr
pusha
sub
add
xchg
div
and
cmpsb
push
dec
test
dec
int3
movsl
mov
pop
inc
nop
cltd
or
insb
push
arpl
push
aam
mov
push
xchg
daa
dec
mov
lret
dec
pop
inc
xchg
sbb
mov
pushf
jmp
push
jmp
loop
fisttpl
mov
mov
xlat
xchg
cmp
pop
ljmp
rclb
in
push
fnstcw
rcll
jns
sbb
add
popf
push
and
xor
sub
mov
mov
adcl
cmp
out
xchg
jno
cli
xchg
jmp
mov
mov
mov
into
rcrb
movsb
mov
test
cld
sbb
cmp
testb
ljmp
cld
and
sbb
or
xor
adc
or
push
mov
dec
push
pop
sub
mov
xor
aad
and
xor
and
sub
out
xchg
fimull
jp
mov
xchg
mov
push
and
adcb
fstpl
xchg
mov
es
mov
mov
ret
xor
jl
mov
out
mov
in
pushf
rcrl
cld
in
mov
adc
adc
dec
mov
aaa
dec
pop
mov
mov
push
sbb
test
pop
mov
add
mov
cli
jae
cltd
dec
sbb
mov
mov
loope
cmpsb
enter
fcomps
adc
mov
test
add
add
mov
xchg
subl
add
int3
ficompl
loopne
jp
test
addb
lds
xchg
sbb
mov
int
jle
ror
lods
int
fmull
fists
insb
push
mov
ret
xchg
call
or
xchg
lahf
inc
cli
jg
push
mov
jmp
loope
repnz
int
ret
test
jp
ret
rorb
cmpsl
and
dec
or
int3
in
lods
push
inc
repnz
sti
jle
lea
sahf
popa
adc
push
loope
lret
div
xchg
sbb
iret
ds
scas
lret
jno
fisttpll
loopne
pop
sbb
stos
xor
jmp
cmp
scas
mov
jo
jne
pop
lds
test
cmp
jo
xchg
push
ds
jo
addr16
adcb
add
dec
xchg
dec
cmpb
mov
dec
and
lds
in
cmp
loopne
xchg
pop
mov
insl
or
shr
pop
add
xor
xchg
push
sbb
mov
adc
push
adc
adc
cltd
sbb
bnd
loop
pop
or
push
ljmp
les
bnd
add
flds
rcr
cmp
xchg
mov
sbb
out
std
mulb
push
neg
dec
xor
xchg
jp
ja
mov
jo
adc
sub
ret
test
mov
push
mov
inc
test
jecxz
ficoml
mov
int
jo
or
ds
inc
pop
testl
stos
xchg
lea
push
cmp
pop
js
insl
stc
pop
ds
test
cs
and
int
and
ret
adc
cmp
add
movl
pop
nop
push
mov
or
clc
fcmove
sbb
or
sbb
outsb
loopne
inc
call
sub
ljmp
cmc
xchg
or
cmc
sbb
lret
add
orl
into
iret
jo
jecxz
add
jp
pushf
stos
mov
mov
adc
jae
adc
arpl
daa
push
cmp
dec
imul
shlb
fdivp
inc
cli
sbb
pop
mov
ficoml
in
mov
jnp
pop
mov
mov
add
ja
sbb
jl
mov
add
mov
inc
adc
lods
mov
movsb
mov
push
rol
pop
pop
inc
jb
inc
fs
or
xchg
popa
cmc
xor
push
test
loope
loope
lock
insl
or
lods
test
and
stos
sti
xchg
out
xchg
mov
xor
add
mov
pop
cmp
bound
mov
sbb
fcmovb
stc
and
scas
imul
scas
pop
push
and
inc
insb
mov
arpl
mov
and
xchg
sbb
mov
sbb
and
cmc
cltd
mov
mov
ljmp
int3
push
mov
pop
std
iret
or
xchg
xchg
xor
das
test
imul
aad
sbbl
push
daa
mov
call
hlt
jae
jmp
cmpsb
rorb
addb
lcall
mov
shl
jns
aam
outsb
mov
xor
bound
sub
mov
xchg
lds
ret
mov
inc
outsb
arpl
sbb
sbb
add
push
push
lret
push
stos
pop
mov
xchg
pop
fisubs
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
pop
insb
xor
xchg
pop
add
and
pushf
movsl
mov
pop
and
add
adc
push
push
jmp
xchg
ror
into
out
cld
test
push
add
pop
pushl
mov
pop
mov
add
mov
add
call
cmp
dec
loope
hlt
sbb
testl
xlat
mov
mov
sub
xor
dec
and
sub
jne
movzwl
jmp
dec
mov
test
xor
adc
add
sbb
cli
stos
or
push
and
fstps
jg
lcall
in
add
push
dec
dec
outsl
jl
in
push
lock
jp
mov
ljmp
inc
mov
fs
push
pop
add
lcall
in
loope
or
pop
in
push
mov
push
loop
es
out
dec
call
or
std
mov
out
mov
dec
das
arpl
cmpsb
sub
es
xchg
jmp
jbe
xor
adc
dec
movb
sub
std
mov
cltd
movsb
add
repz
insb
inc
and
or
or
lahf
jns
mov
push
mov
pop
icebp
add
mov
inc
rorl
jmp
push
lcall
push
lcall
fs
insb
std
mov
insb
lock
insb
fimuls
add
jp
int3
data16
push
arpl
aad
push
cmp
mov
scas
jecxz
imul
jl
mov
adc
pop
fcomip
je
add
repz
out
scas
pand
sahf
mov
jmp
push
pop
adc
push
mov
repz
cmp
ficomps
sub
jecxz
int
test
jno
push
test
and
inc
rol
sub
jb
fildl
jbe
cmp
xchg
cld
div
xor
stos
or
mov
inc
xor
loopne
negb
pop
adc
push
pop
jno
xor
in
xchg
addr16
mov
xor
xor
adcl
nop
fldt
insb
scas
daa
loopne
xchg
adc
pop
out
xchg
jmp
sbb
adc
test
lock
subb
xchg
mov
jmp
mov
and
jno
in
xchg
jmp
xchg
sub
imul
in
xchg
ja
movsl
cmp
aaa
adc
add
pop
aam
xchg
je
cmp
ret
outsb
dec
cwtl
lahf
es
jmp
push
mov
in
imul
pushf
jbe
or
addr16
mov
dec
jbe
jmp
lcall
fs
shlb
or
lret
sbb
push
imul
dec
cmpsl
imul
bound
addr16
insl
add
sub
out
in
and
sahf
or
xchg
cmp
outsl
push
sub
push
sub
mov
jae
pop
rcll
sbb
xchg
bound
inc
cmp
sbb
push
jp
andl
pop
cli
inc
js
jnp
cmpsl
dec
xchg
repz
jp
cmp
pop
cli
mov
sbb
addr16
outsb
popa
ja
daa
xchg
jnp
and
sbb
sbb
call
xchg
popf
cmp
lahf
stc
push
das
pop
testb
inc
push
add
inc
xor
bound
pop
ja
repnz
sbb
inc
sbb
ds
xchg
cmp
dec
gs
cmp
sbb
roll
xchg
cmp
cltd
xor
ficomps
xchg
cmp
aam
inc
sub
inc
sbb
cmp
sbb
cmp
sbb
push
and
xor
xchg
fwait
insl
cmp
sbb
xor
inc
xchg
adc
outsl
sbb
ds
adc
xor
pop
mov
mov
rclb
cmp
pop
jb
pop
lahf
lock
bound
ret
lahf
inc
push
imul
inc
outsl
sbb
outsl
push
icebp
mov
fwait
inc
cmp
in
mov
xchg
cmp
pop
push
outsl
icebp
pop
mov
mov
gs
cmp
repnz
cmp
fadds
push
add
fsts
xchg
fwait
push
cmp
sbb
addb
mov
mov
add
jo
mov
sub
and
outsb
sbb
scas
xchg
cmp
xchg
cmp
pop
mov
ds
lret
aad
add
pop
sbb
sti
push
mov
lahf
jo
sarl
push
fisubrs
xchg
inc
mov
fwait
mov
jo
sarl
push
push
cmp
mov
or
sbb
dec
xchg
inc
mov
cmpsl
cld
push
sbb
loope
popf
xchg
nop
mov
add
pop
pop
sbb
dec
xchg
inc
mov
mov
sahf
add
pop
pop
sbb
dec
jge
addr16
mov
mov
fcoms
dec
in
add
fidivrs
mov
or
aaa
loopne
cltd
ljmp
or
sbb
data16
call
sbb
push
leave
pop
xchg
cmp
lcall
adc
dec
in
add
dec
insl
mov
ljmp
pop
jmp
and
xchg
lock
cmp
push
inc
fstl
rorb
daa
xchg
add
test
jmp
and
xor
add
in
adc
cli
cmp
sbb
jp
cmp
inc
inc
dec
aaa
inc
sbb
ds
jge
ss
jo
call
outsb
sbb
push
xchg
subb
add
rclb
fisubrl
xchg
add
nop
add
sbb
daa
out
cmp
dec
xchg
push
ja
pop
jecxz
cmp
sbb
lds
inc
cmpsb
xchg
pop
xchg
cmp
loope
mov
out
cmp
out
jg
cmpsb
ds
or
fistps
outsl
loope
test
fdivs
cmp
popf
sahf
cmp
pop
sbb
push
mov
xchg
jns
ljmp
or
adc
aas
sbb
repz
add
shr
stc
es
scas
mov
pop
sbb
push
mov
xchg
push
rol
inc
std
sbb
inc
sbb
inc
sbb
inc
sbb
inc
jae
addb
cmp
aam
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
stos
mov
jns
and
inc
mov
inc
in
sbb
adc
pop
push
jnp
or
push
ljmp
lds
adc
inc
jecxz
mov
pop
jbe
cmp
sbb
xchg
cmp
fisttps
icebp
out
enter
push
enter
cmpsl
ljmp
mov
test
xor
adc
mov
inc
shrl
lds
inc
and
stc
xchg
les
test
cmp
sbb
int3
jb
and
adc
lea
lcall
mov
pop
mov
or
pushf
mov
loop
cli
and
mov
sub
mov
loop
pop
adc
outsb
loop
and
pop
cmpb
ja
pop
adc
adc
mov
or
leave
enter
mov
decl
mov
and
pushf
div
stos
jne
push
inc
into
sbb
add
mov
in
adc
xchg
popf
xchg
pop
adcb
jo
push
push
je
xchg
xor
xchg
outsl
insl
imul
lahf
fwait
in
iret
sti
adc
test
lock
dec
aas
mov
dec
mov
stos
inc
nop
cmc
std
mov
fistpll
xlat
inc
jno
fimull
les
popa
jb
jecxz
sub
sbbb
lahf
xor
insl
leave
push
adc
and
sub
lret
out
mov
not
data16
in
sbb
jae
push
push
xchg
sub
cld
gs
cli
mov
and
jle
or
call
insb
dec
cli
xchg
mov
xchg
mov
or
or
xchg
inc
xor
push
xchg
xchg
mov
mov
inc
add
push
xor
xchg
push
mov
pop
xchg
xor
fisttpll
push
lret
inc
sbb
rcr
mov
jg
inc
mov
push
femms
dec
movsl
cli
xchg
gs
gs
insb
push
mov
pop
in
into
mov
mov
fucomi
std
jg
dec
jbe
sbb
xor
int
idivl
or
test
repnz
repnz
xor
pop
loop
fnstcw
jl
jle
push
fcoml
fildl
in
shl
rorl
daa
jmp
jb
addb
mov
pop
imul
stos
add
adc
incl
insb
sti
xor
pop
sub
mov
jns
pop
repz
cmp
push
jb
mov
xor
outsb
out
fidivrs
xchg
jbe
out
sbb
aas
ficomps
in
call
xor
and
mov
in
mov
stc
add
and
sahf
scas
xchg
imul
test
icebp
in
add
add
add
add
or
add
adc
in
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
or
hlt
jmp
add
in
or
push
in
or
or
or
pop
in
or
adc
or
popa
in
or
push
in
or
imul
add
sub
or
jno
or
aaa
in
or
jns
or
inc
in
or
sub
add
popa
fs
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
or
add
add
leave
in
or
add
add
fucomip
or
add
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
ret
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
rcrb
push
push
add
add
add
inc
repnz
adc
mov
and
xchg
stos
jno
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
dec
sub
mov
jp
aas
fsubr
inc
mov
fnclex
cmpl
pushf
xlat
std
push
fsubrl
cld
dec
lods
mov
mov
pop
mov
jb
flds
stos
inc
test
or
sub
xchg
sbb
dec
loope
aam
adc
pop
aas
jmp
out
aas
aad
mov
cmp
stos
imul
sbb
bound
and
out
sbb
or
in
leave
push
out
mov
mov
and
orl
cmp
inc
orw
cmp
dec
inc
fistps
fistps
push
xchg
and
js
cld
clc
in
cs
or
stos
ja
cmp
xor
cwtl
jge
xchg
jg
in
cmp
icebp
and
mov
adc
sbb
ficoms
mov
adc
mov
stc
stos
push
test
popf
data16
inc
xor
xchg
mov
mov
sbb
push
xlat
outsb
cmp
cmp
mov
pop
rcrb
sub
mov
aaa
cwtl
sbb
fisubrl
scas
and
cmp
or
mov
mov
dec
sub
sub
cli
mov
xchg
pop
push
cmp
mov
les
stc
jmp
jno
sub
dec
pop
out
cwtl
add
hlt
pop
push
addr16
es
mov
arpl
sub
cli
push
in
jl
imul
xor
lcall
iret
push
add
sbb
pop
andb
notb
adc
pushf
cmp
pop
bound
dec
mov
fldcw
dec
add
scas
and
jmp
movsl
sbb
mov
ja
jmp
bound
cmc
xchg
cmp
adc
repz
jae
cmpsl
test
popf
rolb
shll
cmpsl
sbb
sarb
or
dec
mov
jns
inc
je
lea
and
and
and
pop
dec
gs
mov
cmp
push
xadd
scas
push
ljmp
inc
xchg
fwait
stc
mov
into
or
mov
gs
in
sti
das
pop
xor
int
sub
dec
insl
stc
push
jno
pop
mov
gs
daa
cld
movsb
lcall
jb
mov
push
lods
pop
sar
mov
cld
mov
imul
cwtl
dec
cmc
int
cmp
push
mov
dec
push
hlt
inc
icebp
shrl
push
xlat
jb
inc
push
fidivs
aam
nop
out
mov
lea
nop
adc
pop
cs
inc
push
lea
push
adc
call
lret
xchg
push
sub
inc
leave
push
mov
adc
and
dec
and
xchg
iret
xchg
jecxz
popf
pop
adc
push
pop
cmp
sub
jo
out
dec
mov
mov
cmc
cmp
mov
pop
add
aad
sbb
mov
sti
jno
int3
in
xor
loop
rcll
or
jecxz
mov
test
sti
jbe
outsl
fstpt
imul
pop
mov
pop
sub
push
shll
fiadds
imul
sbb
and
js
xchg
aad
fwait
insl
cmp
sub
imul
xorl
je
cs
std
dec
pop
inc
nop
sbb
ja
lds
ja
push
shll
adc
jg
test
mov
test
mov
int3
xchg
js
mov
call
xorl
push
sub
bound
fmul
test
xorl
dec
insl
or
imul
and
adc
mov
out
scas
loopne
jge
pop
mov
inc
dec
test
lcall
inc
test
pushf
in
jne
xchg
mov
dec
jne
xor
sub
mov
push
jmp
pop
fldt
pop
xchg
xchg
push
icebp
out
jg
rcll
shlb
popa
cmpsb
sbb
sub
sub
loopne
hlt
xchg
mov
xor
scas
call
cmp
in
std
cmp
addr16
pop
jge
dec
mov
xchg
out
and
dec
adc
or
xchg
or
aaa
daa
mov
xlat
je
jae
insb
sub
scas
loopne
push
mov
clc
in
adc
or
imul
fwait
xchg
adc
cmc
xchg
cld
mov
jns
mov
insb
jg
xchg
jp
fmulp
lds
dec
push
jae
pop
cld
xor
xor
jo
or
popf
stc
mov
xchg
jl
insb
xchg
adc
hlt
pusha
addb
repnz
test
jle
sub
je
cltd
mov
aam
les
mov
sub
aaa
mov
inc
push
xchg
adc
xor
xchg
aam
repz
ja
loopne
pushf
in
orl
enter
repnz
and
fnstsw
test
mov
jmp
adc
jno
ds
clc
sub
and
mov
jg
cmp
gs
sti
ljmp
in
nop
pop
add
adc
out
int
xchg
mov
fstpt
mov
das
xor
js
sbb
mov
addb
sahf
jb
out
sub
or
lret
add
dec
insb
and
test
adc
ror
mov
ss
ret
pop
mov
push
je
fwait
enter
jb
les
cmc
sub
push
adc
test
or
add
inc
je
mov
mov
xchg
movsl
and
pushf
dec
push
sbb
cmpsb
push
add
ret
sub
int
mov
mov
mov
adc
fwait
xor
imul
mov
ja
pop
and
mov
lcall
cmpsl
fld
xlat
into
push
in
jmp
jne
dec
bound
adc
pop
faddl
in
in
or
test
pop
jle
dec
out
lcall
stc
leave
cltd
mov
enter
icebp
in
mov
les
or
mov
add
fs
mov
inc
mov
mov
pop
fidivrl
pusha
jno
imul
movsl
sub
inc
push
push
dec
stos
push
jo
mov
push
cmp
or
fildl
or
sub
popa
xor
sbb
cmp
es
push
mov
jo
inc
inc
jne
xchg
sbb
cmp
fcomps
adc
and
jne
inc
outsl
cmp
daa
scas
sbb
shrb
xlat
test
sub
lahf
add
lret
mov
push
adc
add
jp
out
movsl
pop
push
add
xor
stos
arpl
mov
push
pop
sbb
call
adcl
xchg
xchg
jmp
aaa
fstpl
or
dec
int
faddl
fistps
loopne
jno
adc
cmc
mov
sbb
or
lahf
sbb
jle
push
loop
dec
mov
mov
mov
add
sbb
faddp
stc
lds
rep
hlt
or
xchg
push
notb
inc
jmp
out
sbb
mov
sub
jbe
dec
inc
iret
adc
xchg
cld
inc
in
jmp
test
mov
or
lea
sbb
jae
add
cmpsl
ret
test
mov
nop
cmp
aaa
and
ret
rol
lock
stc
jne
mov
fstl
mov
push
add
mov
fimuls
mov
loope
cmp
out
jecxz
roll
bound
mov
gs
push
ss
cmpl
mov
icebp
lds
stc
ds
outsb
imul
adc
and
and
push
dec
loop
cmp
push
inc
daa
jmp
xchg
cmpsl
lods
scas
out
stos
add
test
xor
mov
add
push
cmp
cli
testl
adc
and
addr16
sub
fwait
in
push
jnp
popf
lods
popa
out
mov
and
mov
sub
adc
push
mov
incl
jne
mov
add
jge
dec
push
and
fldcw
mov
push
js
cmc
outsl
mov
cmp
scas
addb
rcr
sub
xchg
aas
mov
repz
push
das
pop
jmp
jecxz
orl
mov
ret
outsl
imul
es
jecxz
aad
rolb
sub
rolb
xchg
stos
in
sub
scas
xchg
notl
xchg
xchg
dec
outsl
addl
in
pop
and
adc
cmp
mov
notb
loope
enter
xchg
sahf
cld
lret
xchg
cmp
cmp
bound
adc
push
xchg
orb
mov
or
push
insb
insb
mov
pushf
jl
mov
push
push
or
push
push
lods
xchg
push
mov
lock
pusha
adc
int3
or
fwait
xchg
inc
test
es
pushf
xchg
imul
fs
xor
push
test
fisttpl
lret
pusha
inc
and
or
std
icebp
lea
mov
pop
ret
scas
push
shll
add
mov
out
push
xchg
cs
outsb
xchg
notb
or
xchg
dec
xchg
sbb
or
iret
stc
or
mov
inc
sbb
bswap
sub
xor
movsb
ret
dec
pushf
push
test
jge
aad
mov
lret
xlat
negb
mov
dec
pop
mov
jge
or
push
and
stos
mov
jl
jno
addr16
adc
cs
dec
cmp
lcall
pop
sub
cmp
lcall
adc
lods
cmpsl
mov
mov
lds
adc
push
or
push
mov
cmpsb
ffree
sub
inc
fs
aaa
mov
fsts
outsb
repnz
sbbl
dec
cli
sub
or
cmp
inc
popf
xchg
and
ret
rclb
repz
dec
stos
pop
mov
pop
call
and
inc
aaa
push
imul
push
ljmp
clc
pusha
test
arpl
adc
ret
ss
fsubl
in
icebp
gs
into
lock
repnz
cmp
add
cmpsl
das
or
jl
sub
mov
xor
sub
push
cltd
sub
or
test
mov
into
aad
inc
inc
popa
pusha
out
aad
mov
xlat
repz
in
add
xchg
push
cmp
jle
orl
stos
pop
inc
setg
jnp
xor
sbb
push
push
iret
inc
cmp
cmpsl
sbb
inc
or
stos
sub
sti
movsl
js
imul
jo
pop
daa
loopne
adc
icebp
jns
dec
lret
call
dec
push
sbb
loopne
insl
inc
mov
mov
jno
sahf
jmp
es
cmpsb
cmpsb
dec
insl
ret
cmp
jbe
cltd
aas
daa
pop
inc
fists
out
mov
fildl
jle
or
shrb
lcall
add
fcomps
pop
sahf
jbe
jmp
cli
out
scas
rorb
jnp
cmc
sub
mov
pop
cmpsl
sub
scas
dec
cs
out
mov
je
stos
enter
cmp
outsb
mov
mov
cmc
imul
test
pop
pop
out
ret
cmp
sbb
add
cwtl
inc
ljmp
dec
push
lods
jecxz
cli
aaa
and
and
dec
jbe
jp
ljmp
push
mov
adc
fdivl
cmp
jns
loope
cmp
add
fstp
fldcw
inc
or
mov
xor
pop
aam
mov
nop
cmc
sbb
sbb
adc
movsb
loope
dec
push
lds
lret
cmp
and
addr16
jp
out
xor
bound
mov
rol
push
cmp
andb
fsubrs
mov
or
mov
and
mov
inc
movsb
pop
sti
mov
ljmp
xor
imul
xchg
xchg
into
les
inc
mov
sbb
jge
pop
jbe
sbb
loopne
push
orb
adc
adcl
cltd
repnz
fbstp
stos
addl
xor
xor
add
lds
in
sbb
dec
mov
es
lahf
mov
mov
cli
es
ja
xchg
xor
pushf
push
shrl
jg
cmp
cmp
sbb
aam
push
into
ret
jb
xchg
stos
adc
dec
pop
sbb
adc
es
sbb
mov
shrb
dec
popw
enter
cld
stos
adc
outsb
cmp
inc
cltd
in
add
inc
sub
out
cwtl
adc
sbb
fiaddl
imul
stos
jl
test
and
hlt
outsl
leave
sbb
cmpsb
out
push
push
subl
push
jns
push
imul
outsl
and
mov
fmulp
dec
jns
pop
push
jecxz
popa
mov
mov
sub
fwait
adc
lods
jl
or
test
xor
fwait
cmp
adc
ds
xor
les
cmp
nop
cmpsl
mov
popf
push
xchg
inc
mov
push
xchg
mov
ja
jge
mov
shrb
adc
fsts
inc
loopne
mov
out
inc
jbe
imul
push
lods
addr16
mov
out
mov
push
sub
mov
jmp
push
fcmovnbe
fistps
in
mov
jbe
jae
sbb
stos
jo
push
and
inc
cs
xor
fstpt
popa
pop
int
ss
sarb
xchg
mov
mov
shlb
jns
push
cmc
je
mov
in
push
das
scas
nop
mov
repz
add
xchg
lcall
push
sbb
repnz
and
mov
dec
icebp
and
dec
pop
add
outsb
ds
aaa
lock
loope
pop
fwait
js
and
adc
pop
lmsw
push
jo
rclb
pop
add
enter
dec
mov
dec
aas
loope
mov
xchg
inc
or
dec
dec
lds
orl
ret
loope
les
push
xchg
sub
push
sarb
and
jp
cwtl
jbe
clc
lock
icebp
data16
test
sahf
test
cmp
push
jmp
push
mov
or
pop
lahf
pop
jo
loop
in
sbb
call
dec
in
test
mov
ja
rcl
imul
psubd
repnz
xor
pop
stos
int3
ja
les
jae
cwtl
out
mov
addr16
mov
mov
mov
jbe
lcall
pushf
push
icebp
push
xchg
add
mov
sbb
mov
push
mov
xor
into
pop
call
jle
repz
mov
lret
jmp
pop
xlat
xor
cltd
cmp
inc
mov
lock
cmpsl
push
adc
fstps
mov
push
mov
cld
pop
fnstcw
or
icebp
pop
cmp
roll
call
arpl
stos
adc
fwait
stos
xlat
mov
push
jnp
cs
add
decl
adc
adc
loope
lock
ss
hlt
push
push
mov
stos
icebp
dec
and
xchg
jae
daa
xchg
stc
lds
std
scas
in
sahf
push
das
out
aam
sub
inc
xchg
xor
dec
jns
shrb
inc
sub
in
mov
dec
cmp
outsb
sub
rolb
ret
lds
ficompl
out
inc
loopne
mov
lahf
stos
pop
xchg
loop
pop
enter
xor
cmp
pop
aaa
or
xor
cmp
das
aam
iret
mov
inc
orl
les
stos
insl
pushf
rclb
out
xor
push
mov
ret
sbb
in
xchg
mov
pop
loope
and
xchg
dec
mov
push
sahf
jbe
mov
ficomps
jp
out
push
pop
adc
mov
ds
out
pop
pop
test
xorb
and
push
pop
es
cli
mov
adc
shr
and
cmc
mov
divb
push
mov
nop
inc
and
adc
jae
sub
mov
pop
and
xchg
xchg
or
sarl
movsb
loope
stc
sarl
repnz
xor
sbb
scas
jge
scas
mov
or
xchg
jae
stos
rorl
in
out
ja
lds
dec
mov
je
stc
iret
jne
xor
jnp
adc
insl
pop
push
mov
push
ja
mov
jp
dec
pushf
sub
lret
sub
std
mov
test
cmpsb
cmp
imul
rcrb
stc
pop
cmp
stos
xor
jbe
cmp
adc
dec
fisubrs
into
jnp
sub
adc
sbb
fisubrs
inc
lret
cmova
pop
pop
mov
xchg
cmp
mov
sbb
imul
lods
sbb
nop
lea
popa
lea
mov
out
mov
sbb
add
pop
lahf
out
jno
shlb
andl
mov
pusha
fcoml
jne
cmp
mov
push
jne
out
sti
add
je
inc
lods
dec
out
mov
cmpsb
in
iret
pop
cmp
data16
add
mov
lret
mov
sahf
int
inc
jmp
sbb
ds
test
fwait
jle
stc
push
rolb
pop
jmpw
xor
repz
rcll
in
push
jno
cmp
xchg
scas
inc
pop
sub
sbb
pop
fxch
jp
jge
add
divl
scas
pushf
jecxz
clc
int3
addr16
cltd
or
int3
jge
outsl
gs
push
xchg
cltd
ficomps
in
jbe
xchg
inc
subl
add
xchg
push
fldl
jae
nop
pop
adc
sub
push
cld
dec
push
in
xlat
les
and
pop
mov
subb
in
inc
orl
mov
data16
xor
and
jl
mov
xchg
xchg
mov
jbe
xor
ret
xchg
or
jb
fs
cmovne
push
imul
adc
call
fistl
jae
sti
jnp
les
sbb
inc
inc
jno
repnz
xor
add
inc
das
test
clc
xlat
mov
pop
js
lods
mov
xchg
fsubrl
outsl
sbb
aaa
xchg
ljmp
les
pop
lahf
jbe
xor
lods
pop
aas
adc
pop
mov
cmpsl
imul
rcll
sbb
mov
mov
test
imul
inc
stc
pop
ss
loop
add
sub
xor
repnz
stos
lahf
adc
adcb
or
sub
sbb
push
in
add
push
xchg
push
sti
icebp
jl
pop
cmpsl
push
aaa
addr16
int
clc
nop
bound
aas
leave
pop
push
dec
push
mov
push
mov
dec
ljmp
dec
xor
stc
sub
pop
dec
or
jl
cmp
xchg
push
je
popf
mov
mov
xchg
xor
rorb
js
jo
insb
daa
mov
mov
iret
inc
ret
xchg
pop
pop
add
in
adc
icebp
call
cld
inc
pop
andl
mov
movsb
loope
shlb
jl
fucomp
rorl
scas
sbb
arpl
mov
pusha
cmp
in
push
test
xchg
cmpsl
mov
jg
push
mov
dec
int
icebp
les
cld
xchg
out
mov
xchg
sbb
movsb
mov
pop
cmp
imul
sarb
pusha
es
jo
popf
xchg
adc
shlb
adc
xchg
xor
lcall
ljmp
stos
mov
or
lock
sbb
fdivrs
jp
inc
cmpsb
int
cmp
adc
mov
dec
adc
mov
cltd
mov
loop
test
out
cltd
movsl
cmp
mov
add
dec
pop
xchg
nop
scas
lds
enter
enter
sub
ja
divl
cmp
mov
add
or
sub
push
inc
loop
jno
xorl
push
jp
jmp
aas
dec
movsl
cli
pushf
iret
adc
mov
jno
mov
out
pushf
xor
adc
icebp
addr16
mov
cmp
aad
xor
icebp
and
jno
in
cwtl
sahf
xchg
loope
daa
dec
jge
mov
mov
cwtl
cmpb
je
sti
in
inc
mov
adc
xchg
cmp
lcall
add
lods
jg
fsubrl
jge
out
pop
enter
jecxz
scas
xchg
iret
cmp
shlb
sahf
test
and
xchg
adc
rcrl
arpl
cmpsl
fdiv
addl
adc
stos
cmpsl
xor
stos
ficomps
nop
cmpsl
mov
jg
mov
loopne
aam
outsl
mov
jnp
divl
mov
mov
dec
jae
test
test
mov
mov
or
stos
loop
bound
dec
mov
ss
dec
or
cld
mov
sub
stc
mov
push
cmp
fnstenv
ret
jae
sbb
xor
lock
test
repnz
or
cmp
rclb
call
ret
or
inc
jns
enter
jno
cmpsl
sbb
add
cmc
and
mov
aam
mov
mov
or
adc
loopne
pop
outsl
pop
fistl
mov
jmp
push
inc
mov
pushf
js
cmpsl
lcall
xchg
xor
jae
sub
or
inc
mov
pop
or
and
push
cli
mov
or
cmp
hlt
mov
mov
jae
lods
nop
mov
insb
push
roll
in
mov
cld
sbb
fdivp
pop
icebp
icebp
lea
add
push
push
push
lcall
mov
sbb
loope
out
pop
cmp
cmp
mov
add
xor
jae
out
mov
lock
mov
out
mov
out
in
enter
sub
xchg
mov
ss
xchg
ficomps
xor
cs
mov
xchg
cmp
cmp
les
scas
enter
cwtl
incb
mov
xchg
cli
xchg
pop
test
dec
sub
or
pop
in
dec
imul
fadds
jo
fs
mov
dec
sbb
shl
pop
dec
flds
setg
push
xor
ror
jae
std
inc
pop
or
add
scas
pop
inc
dec
push
sbbb
pop
repz
movb
out
in
mov
add
jmp
dec
scas
mov
cmpl
in
mov
ljmp
push
fldt
mov
in
dec
jg
ficomps
in
xchg
cmp
xor
stos
fdivs
hlt
jo
xchg
aas
jp
mov
addr16
pop
dec
cmp
ret
clc
mov
rclb
sub
xchg
fwait
xchg
sbbl
sti
scas
aaa
imul
lds
test
test
cmp
or
jns
clc
icebp
roll
adc
lret
sbb
inc
daa
iret
mov
scas
cmpl
mov
push
std
inc
outsl
das
in
mov
je
mov
fsubrl
jb
sbb
jmp
mov
pop
add
or
and
outsb
add
notb
xlat
and
test
sbb
cli
leave
int
xor
jmp
cmp
xlat
std
orb
jnp
dec
neg
ljmp
mov
cmpsl
xchg
in
imul
add
std
push
aas
and
popf
cmp
mov
jo
dec
or
mov
lret
mov
xor
and
inc
cmp
sahf
mov
jmp
inc
stos
in
mov
loope
cmp
in
jo
mov
into
add
mov
test
stos
arpl
adc
das
mov
mov
inc
test
xlat
pop
inc
push
in
cmpsl
mov
push
mov
cmp
aaa
test
mov
orb
imul
lods
aaa
outsb
pop
pop
add
out
movsb
jmp
les
pop
lock
xchg
cmpsl
out
jae
int3
and
mov
xchg
mov
xchg
or
xchg
cltd
fs
iret
add
mov
fldenv
jne
call
mov
mov
pop
outsl
lahf
xchg
aas
rclb
push
xor
sbb
aaa
push
push
pop
ret
xor
loope
jo
outsb
dec
enter
loope
inc
adc
fucomip
in
ret
sbb
push
shrb
cmp
das
dec
mov
repz
jbe
stos
imul
scas
cmp
or
push
jns
mov
inc
or
hlt
jg
jno
int3
rclb
mov
xor
das
jmp
adc
xchg
dec
sub
xlat
jp
sub
ret
pop
push
inc
jle
or
push
add
call
pop
xchg
ret
add
imul
negb
ret
inc
jl
and
xchg
pop
push
mov
punpckldq
push
lahf
cmpsb
add
pop
ss
push
xchg
and
ja
sbb
je
add
aam
pop
lock
shlb
cld
mov
loop
jmp
pop
loope
repz
push
sub
push
jo
test
and
stos
mov
jo
xor
jp
cmp
add
aaa
and
xchg
push
out
in
pop
out
inc
mov
push
mov
dec
adc
mov
loop
pop
xor
rolb
xchg
add
leave
xor
pop
imul
adcl
das
mov
push
std
out
enter
sub
imul
ss
mov
adc
jne
pusha
jmp
or
sbb
push
inc
aaa
fwait
or
xor
sbb
leave
fadds
in
adc
dec
mov
jae
xchg
dec
in
and
roll
clc
subl
add
out
or
pop
jbe
fsubrl
adc
xchg
mov
xor
cmpsl
and
ficoml
out
out
jns
cmp
in
jl
loop
xchg
rolb
and
jo
dec
mov
and
ret
dec
in
test
addr16
pop
stos
and
jae
sub
jl
xlat
push
ss
mov
ljmp
xor
push
jns
je
fisttpl
mov
mov
loopne
call
mov
outsb
je
or
into
add
adc
dec
push
test
add
out
fisubrl
push
dec
popf
inc
icebp
cs
push
sbbb
fs
mov
pop
sbb
mov
jae
js
dec
jne
add
testl
loopne
rorl
inc
xchg
mul
insb
js
dec
addr16
jecxz
and
shl
xchg
andb
lds
pop
adc
and
xchg
fnsave
enter
inc
dec
mov
dec
bound
sbb
cwtl
cli
test
mov
push
ret
push
push
notb
jne
mov
add
push
jae
fidivrs
xor
test
addr16
ja
ja
sub
mov
xchg
sbb
out
cmp
outsl
lods
outsb
hlt
in
cmp
orl
aad
out
mov
bnd
mov
daa
pop
xor
jne
fstpt
into
inc
cli
and
scas
cmpsl
or
loopne
mov
addr16
movl
gs
jb
shr
or
stos
pop
es
sarl
jmp
sub
cmp
sbb
dec
mov
je
and
leave
inc
aaa
mov
sbb
pop
pop
mov
or
jle
dec
jno
mov
mov
cli
xlat
xor
dec
cwtl
xchg
call
pop
das
jae
icebp
add
dec
lret
or
fists
sub
inc
cmpsl
sbb
xchg
pop
dec
mov
mov
cmp
repz
adc
xor
pop
mov
mov
jecxz
test
mov
test
iret
sub
mov
icebp
aam
add
and
xchg
popf
ret
xor
bound
push
bound
mov
int
into
imul
mov
xchg
jns
mov
cmpsl
cmp
xor
push
ss
pop
jp
adc
popa
mov
out
cmp
push
cmovnp
sti
sub
adc
mov
repnz
in
out
outsl
in
insb
xor
mov
lcall
aad
pop
inc
adc
js
loopne
icebp
fsts
pop
dec
and
pop
jle
arpl
in
and
pop
push
xchg
cmp
cmp
cmp
loop
sub
xor
leave
insl
dec
push
inc
dec
mov
cmpl
loopne
fsubr
imul
push
fwait
icebp
pop
adc
cmpsl
pushf
insl
icebp
xorl
jecxz
fdiv
dec
cmpsl
fcoms
mov
fucom
fyl2x
push
cmp
jle
and
mulb
inc
mov
dec
pusha
sbb
cmp
divl
xchg
cmp
xor
cwtl
jb
and
pop
sarl
pop
psrlq
jmp
mov
pop
pushf
xchg
std
inc
dec
call
xchg
add
sub
movsb
xor
inc
pop
xor
clc
sbb
jmp
negl
mov
roll
mov
push
add
out
out
fstpt
popa
pop
stos
out
ss
pop
stos
repnz
rol
push
adc
add
fisttpll
fnstsw
jne
fimuls
mov
jp
imul
movsb
sbb
adc
ret
clc
loopne
test
or
jne
mov
in
cmpsb
cmp
bound
shll
inc
fldl
hlt
xchg
push
pop
add
xor
pop
pop
adc
movsb
mov
int
aam
mov
and
ss
adc
imul
pop
daa
jmp
and
inc
mov
fildll
push
fnstcw
mov
ret
mov
fwait
sub
adc
popa
pop
bound
cld
fmuls
pop
lcall
movsb
int
repnz
cmpsb
in
ret
push
jnp
inc
sbb
sub
jmp
mov
dec
dec
pushl
push
adc
scas
lds
pusha
dec
out
or
test
dec
inc
loop
jp
xchg
scas
out
sbb
fstl
fistps
xor
dec
out
mov
aaa
pop
mov
mov
aam
and
mov
cwtl
test
mov
clc
fstpl
jbe
lds
nop
testl
movsb
movsl
arpl
pop
mov
cs
xor
xchg
sbb
mov
xchg
cmp
mov
arpl
repnz
push
das
popf
out
fwait
in
cmp
cli
test
iret
adc
jnp
sbb
sub
dec
mov
xchg
adc
and
fcoml
lock
dec
xchg
jmp
mov
std
mov
mov
int
xchg
xor
mov
lea
outsl
xchg
out
dec
ljmp
out
pop
mov
imul
cmp
icebp
dec
cmp
dec
dec
fcmovu
pop
add
or
and
push
pop
and
add
sbb
jmp
add
mov
pop
mov
ds
testb
add
jns
and
sub
push
xchg
mov
and
mov
jbe
and
cli
push
bnd
data16
cmp
or
call
icebp
jmp
pop
sub
sbb
pop
mov
test
int3
scas
adc
sbbb
sub
movsl
ret
out
es
cmp
add
dec
mov
in
iret
mov
mov
push
xor
enter
adc
mov
ficomps
sub
mov
dec
inc
or
push
lret
dec
jae
sbbl
inc
add
fwait
test
scas
jbe
stc
mov
leave
mov
loope
push
test
jb
pop
push
ja
bnd
and
or
lods
pop
fmull
insb
mov
push
mov
cltd
sub
scas
mov
loop
xchg
xchg
and
and
fdivl
push
clc
pushf
xor
mov
inc
dec
adc
jle
into
add
int
rcrb
sbb
and
cli
dec
cld
xchg
aaa
cld
jge
ret
lahf
push
cld
sbb
out
imul
outsl
arpl
in
repnz
lcall
push
cmpsb
rclb
test
jnp
pop
daa
and
inc
mov
ds
xchg
or
xor
shrb
aad
call
jns
or
shl
imulb
adc
loopne
mov
sbb
and
fs
jbe
jno
in
shlb
fldcw
fwait
stc
int3
mov
dec
jnp
mov
into
jae
fs
cli
cli
jno
jecxz
inc
hlt
pop
mov
bound
cli
je
push
in
mov
call
stc
adc
scas
jecxz
add
and
repz
or
xor
xchg
inc
div
cmpsb
sub
addl
stos
cmp
lds
daa
std
jb
inc
push
fistps
jmp
inc
and
jae
insl
dec
stos
jle
popf
adc
enter
mov
scas
push
and
stc
imul
jle
lds
xor
bt
iret
sub
or
rclb
push
insb
ja
iret
jno
mov
inc
or
mov
xlat
aam
xor
cmpb
in
or
dec
ret
test
pop
mov
mov
imul
pop
lret
and
inc
addr16
out
pop
int
push
mov
sub
imul
les
test
mov
cmp
add
popf
mov
icebp
add
test
addr16
xchg
rcrb
iret
xor
aas
cmpsb
das
adc
popa
scas
addr16
daa
cmpsl
sub
mov
mov
mov
sbb
sub
mov
xor
aad
rcrl
lock
jo
mov
adc
push
push
jno
loop
sub
push
pop
and
testl
lods
adc
outsl
out
gs
mov
lea
xchg
add
add
add
jb
jno
mov
jo
into
stos
iret
inc
jns
mov
negb
push
mov
dec
iret
shll
bound
fistl
call
ret
aam
movsl
clc
jmp
int3
push
mov
adc
rolb
mov
mov
mov
mov
xor
cmc
jne
scas
dec
fcompl
pusha
and
adc
sbb
stos
adc
insb
pop
pop
push
mov
pop
addr16
xor
jnp
push
popf
out
icebp
and
mov
pop
in
jp
test
fwait
rorl
js
add
popf
pusha
inc
lahf
sub
aad
dec
or
mov
mov
imul
imul
dec
clc
push
aad
icebp
pop
dec
lds
add
icebp
xchg
das
dec
mov
sbb
leave
popl
xor
mov
sub
ret
daa
int3
outsb
dec
sub
or
addr16
test
loopne
push
in
xor
jmp
cmp
cmpsb
scas
lea
xchg
rolb
stc
sub
xor
mov
shlb
mov
and
cli
adc
xchg
pop
and
in
data16
xor
vunpcklps
in
mov
sbb
adc
xor
jno
pop
xchg
mov
cmp
dec
xor
stos
xor
dec
lcall
pop
jecxz
loope
push
xchg
mov
add
xchg
mov
cmp
sub
pusha
mov
dec
jp
call
inc
mov
call
push
xchg
pop
nop
jmp
iret
leave
add
pop
jnp
jae
stos
out
outsb
loop
aad
mov
outsl
mov
pushf
or
push
inc
jl
ja
jecxz
sub
xor
jecxz
add
push
scas
inc
mov
addl
adc
add
mov
push
pop
cmpsl
push
inc
mov
fisubrl
movsl
lea
push
fsubrl
lcall
in
adc
stos
lcall
xlat
xor
ds
in
and
mov
es
mov
lods
jmp
sti
aam
jns
stos
pop
pop
fmull
push
fildll
lahf
sub
xchg
mov
lods
cmpl
push
ss
repz
jno
fcmovbe
fiaddl
and
or
jl
jl
push
js
outsl
loope
mov
push
jmp
mov
add
das
push
push
xchg
jne
rorb
mov
mov
jnp
pop
and
push
sar
xchg
pop
movsb
sbb
pop
shl
int3
scas
dec
jmp
jae
pop
mov
add
insb
mov
stos
add
mov
divl
fsubrp
iret
mov
add
jb
dec
jge
add
ret
xor
out
outsl
mov
jns
movsl
mov
xchg
inc
imul
push
jge
mov
ret
cli
movsb
xor
adc
imul
cld
dec
or
rclb
or
or
aad
jns
clc
mov
xchg
jne
xchg
mov
inc
ret
leave
xchg
add
out
sub
ret
and
out
inc
jp
movsl
nop
in
or
sbb
fs
std
je
ja
outsl
push
mov
pop
das
jge
cmp
xor
push
in
add
and
xchg
add
leave
inc
pop
mov
push
scas
roll
sbb
or
adc
inc
cmpsl
mov
push
xor
mov
dec
sbb
stos
lcall
call
pop
in
sar
or
jg
cmp
xlat
sub
pusha
inc
scas
add
add
imul
mov
push
testb
rcr
cmp
sub
push
in
jb
jmp
add
pop
pop
icebp
sub
mov
inc
and
test
dec
and
stos
jnp
sub
or
jae
inc
in
and
cmp
cld
daa
add
sbb
stos
jl
ficomps
les
mov
test
fcomps
iret
ljmp
es
mov
jne
dec
sbb
cmpsb
and
aad
cld
lods
out
jecxz
sub
imul
pop
jl
mov
dec
inc
mov
std
xchg
or
and
mov
outsl
jno
testb
shll
out
mov
lcall
roll
jae
adc
pop
lahf
je
pop
xor
xchg
movsb
outsb
cmpsl
xchg
pop
and
sar
aas
xorb
jp
adc
clc
fs
jno
xchg
andb
dec
aam
lret
fwait
jae
mov
das
add
mov
xchg
xor
fstps
jns
adc
insl
das
iret
push
sbbl
cltd
mov
push
cs
es
cmpsb
mov
pop
ss
lods
pusha
push
inc
pop
loope
lea
nop
adc
lret
jle
sub
and
rolb
dec
fmul
cli
xor
or
and
pop
xor
lret
sbb
mov
std
fists
cmp
int
clc
jmp
sti
xor
popf
into
push
movsb
gs
sub
aas
jle
out
lahf
popf
test
pop
call
lock
mov
xchg
xor
fiadds
popf
jmp
or
imulb
aas
cmpsb
or
div
mov
ds
push
or
ficompl
and
cli
aas
cmpsl
xchg
mov
imul
imul
sub
jmp
out
int3
xor
or
dec
imul
aas
add
mov
push
mov
in
xlat
or
cmp
push
inc
push
popf
add
mov
xchg
pop
aas
xor
aaa
xchg
pop
out
scas
inc
pop
sbbl
sub
mov
add
add
dec
andb
dec
lods
test
inc
repz
int
xlat
jbe
decl
mov
jo
popf
mov
es
mov
fisubs
das
int
sbb
out
dec
icebp
push
add
pop
and
pop
lock
out
notl
mov
cmp
jno,pt
mov
repz
mov
and
xchg
push
inc
into
sbb
cmpsb
adc
adc
cmp
icebp
sbb
rcrl
enter
mov
lea
iret
in
insl
stc
fs
mov
xchg
inc
and
outsb
cltd
or
fistpll
aam
push
jo
or
dec
sahf
insl
mov
loope,pn
pop
popa
mov
es
inc
out
out
sub
jo
cli
fildl
out
sub
cld
gs
xchg
add
push
mov
sbb
call
in
and
sbb
mov
adc
in
mov
push
dec
cmpsl
cmpsb
ss
inc
xchg
add
shlb
fwait
adc
mov
push
repnz
mov
aas
jp
loope
stos
mov
mov
push
xor
js
gs
or
leave
negb
shlb
mull
jmp
dec
push
add
int3
xchg
movsl
dec
outsb
pop
inc
ficoml
xchg
jno
pop
push
repnz
outsl
xchg
pop
stos
xchg
mov
stos
mov
andb
cs
imul
mov
test
push
inc
xchg
fmuls
dec
push
adc
out
hlt
xchg
inc
and
clc
into
nop
adcl
movb
loopne
aas
and
or
dec
int
leave
and
push
mov
sahf
mov
test
ljmp
scas
mov
mov
pushf
cmp
rolb
mov
mov
pop
ret
fdivrs
out
nop
gs
mov
roll
in
daa
lcall
push
hlt
insl
and
popa
sub
ficomps
push
jno
pop
mov
jo
sub
push
aam
inc
jge
inc
jp
movsl
movb
lcall
ret
stos
mov
xor
jg
dec
cld
test
sbb
cmpsl
dec
mov
cli
movsb
mov
stc
mov
mov
cld
dec
movsl
sub
sub
jp
push
incb
xchg
clc
movsb
pop
shll
in
sbb
loop
daa
or
inc
imul
lods
ret
hlt
jne
inc
mov
jg
xchg
repnz
imul
mov
lds
lods
cmpsl
or
pop
out
sarl
ret
inc
arpl
add
or
inc
add
push
sbb
and
cs
mov
and
xor
push
cwtl
insb
jae
adc
daa
lods
icebp
icebp
cmp
outsb
mov
shrb
sub
fimull
push
inc
scas
bound
fnstenv
adc
data16
cltd
or
out
dec
mov
jb
mov
fdivrl
lret
enter
leave
popa
push
jae
int3
in
daa
pop
negb
jecxz
xchg
xor
fcmove
pop
inc
xor
fistpl
or
add
jnp
int3
out
clc
mov
insl
lock
stc
mov
subb
inc
insl
lahf
push
inc
push
and
push
pushl
loop
mov
adc
lea
enter
push
in
aad
mov
rol
jbe
popf
or
mov
or
mov
stos
test
inc
lods
or
adc
push
mov
xor
mov
pop
inc
lcall
xchg
pop
in
fcomps
push
push
inc
inc
and
xor
jl
push
lods
mov
inc
adc
jg
sbb
mov
loop
out
add
cs
popa
fucomip
xlat
fcomps
and
xchg
mov
les
and
in
inc
adc
and
shrb
inc
xchg
cmp
pop
cmc
cli
ds
jecxz
popf
push
iret
sub
sbb
cmp
test
popf
enter
notb
dec
cmp
push
push
aas
inc
rolb
int
js
or
push
xlat
jnp
mov
data16
push
cmp
xor
dec
xchg
add
popf
es
inc
xchg
jp
sti
stos
outsl
fsts
cld
insl
adc
and
jle,pt
sbb
push
inc
inc
or
pop
lcall
pop
nop
and
inc
sbb
cltd
mov
push
pop
clc
daa
pop
push
call
aaa
inc
xor
sbb
addr16
cmp
pop
popa
adc
sub
adc
mov
xchg
push
add
sahf
ss
sbb
sub
aaa
mov
jo
shlb
lock
mov
xchg
jle
jg
mov
in
ret
push
mov
stos
and
fs
testl
push
loop
stos
adc
push
aas
inc
lahf
in
call
cmp
lcall
and
les
mov
enter
stos
inc
push
pusha
ja
in
popf
dec
cmp
lea
loop
push
ljmp
aad
maskmovq
idivl
test
and
dec
in
mov
inc
add
aas
mov
push
shl
imulb
inc
mov
xchg
jecxz
sti
repz
dec
jg
lahf
jp
xlat
movsl
movsb
jge
sbb
xor
mov
lea
sub
mov
push
movsb
inc
cs
pop
push
or
adcb
je
scas
cmp
or
inc
aam
sahf
xchg
pop
ret
push
xchg
out
or
add
and
push
push
call
dec
mov
mov
cmpsb
cltd
sbb
dec
pusha
imull
lea
xchg
and
push
test
rcrl
scas
or
jae
mov
leave
sub
es
test
lds
add
fwait
stos
mov
leave
mov
and
adc
sub
shl
and
aas
fistpll
pop
flds
jae
add
jmp
pop
rorb
adc
test
pop
cmp
jns
mov
mov
test
push
inc
popf
shl
xchg
push
and
or
jne
push
shll
push
mov
test
into
mov
loopne
mov
int3
dec
xor
jo
or
out
ljmp
add
xchg
mov
aaa
xor
lods
cld
cli
add
sub
insl
fdivs
sarl
fldt
cmp
mov
adc
enter
adc
iret
imul
fnstenv
scas
ret
jns
xchg
pushf
ss
jo
cld
jno
stc
shll
mov
lahf
push
negl
popa
pop
rcll
imul
mov
fstpl
aaa
adc
push
fbstp
sub
xchg
jg
stos
cmovne
mov
dec
insl
inc
push
pop
mov
mov
jb
insl
inc
cmpsb
pop
repz
xchg
xchg
push
mov
aad
mov
push
mov
aaa
cli
jbe
sbb
cmpsl
dec
sbb
shrb
cld
out
out
outsl
sahf
enter
imul
sbb
arpl
imul
adc
and
mov
xchg
fucomip
cs
dec
jo
sti
outsl
out
pop
repz
lods
jle
lods
mov
fwait
or
sbb
int3
jae
push
adc
cmp
sub
add
lds
and
sub
mov
movsl
dec
dec
and
xor
xlat
daa
imul
fcomi
mov
mov
lcall
mov
shr
ret
clc
jp
test
sub
xorl
insb
inc
pop
pop
daa
xor
popa
lods
mov
pushf
or
lahf
nop
jle
push
mov
mov
cmpsl
jae
insl
pop
out
mov
call
mov
cmp
push
jns
loop
push
fucomip
and
cmpsb
sbb
xchg
movsl
dec
push
push
sbb
mov
mov
push
cltd
xchg
xchg
mov
fsts
and
je
mov
sarb
xor
xchg
and
and
cli
adc
xor
mov
stc
fistpl
sbb
mov
xor
fimull
cmp
sbb
mov
es
test
or
mov
cmpsb
xchg
popa
mov
mov
push
ss
shll
adc
popf
aam
rcr
int3
cltd
test
dec
add
into
js
lods
dec
pop
call
dec
jmp
mov
adc
sbb
add
mov
push
test
adc
sub
jo
push
cmpsl
mov
sbb
pop
ret
cmp
jb
mov
adc
pop
push
sub
add
xchg
stos
test
inc
adc
lods
sti
cs
cwtd
inc
jl
adc
enter
ljmp
mov
adc
cmp
int
test
stos
enter
scas
inc
jbe
rcl
shll
outsl
leave
pop
and
stc
mov
dec
stos
cmp
jecxz
pop
frstor
clc
inc
imull
xor
sti
xchg
inc
sub
popf
dec
out
clc
pop
sbb
je
dec
sarl
cmp
xor
stc
test
dec
fidivs
fmulp
xchg
push
sbb
jno
dec
int3
enter
repz
mov
lods
pop
fdivr
xchg
test
push
cmp
cmpsb
imul
and
push
fidivrs
andps
inc
lret
pop
or
sti
repnz
loop
cmp
mov
cmp
fmull
cli
xchg
mov
out
ret
xchg
test
adc
adc
iret
pop
mov
iret
mov
cmp
jne
and
xor
cmp
mov
mov
lods
add
les
test
aas
add
imul
das
leave
and
arpl
out
in
jo
lcall
out
sbb
fldenv
xlat
daa
jae
pop
les
push
xor
jnp
inc
les
loope
js
inc
xchg
add
dec
mov
in
mov
loop
xchg
pusha
mov
mov
pop
icebp
scas
rcl
test
dec
sub
ljmp
dec
sbb
push
outsb
cli
icebp
push
and
dec
push
ss
outsb
loopne
rclb
lods
rol
mov
mov
test
jmp
in
rcll
dec
push
or
bnd
mov
hlt
or
jo
sbb
inc
stos
add
popa
lea
jmp
cld
pop
dec
cmpl
inc
sub
mov
jo
loope
cwtl
loop
pop
shll
aas
cli
sub
add
mov
inc
imul
das
jo
inc
mov
notl
rcr
loop
subb
push
pop
test
jg
daa
xchg
mov
xchg
pop
lock
cmc
int
mov
aad
movsl
ljmp
mov
pushf
adc
xchg
in
or
rcrb
xchg
pop
mov
into
aad
add
movsb
mov
jecxz
out
dec
in
repnz
int3
inc
xchg
add
ljmp
xchg
bound
or
pusha
test
lcall
lock
mov
xchg
into
in
cs
testb
pop
aad
pop
add
lock
repz
mov
sbb
out
mov
jae
adc
sbb
xchg
dec
addr16
call
mov
adc
clc
push
pop
lods
cs
roll
jl
mov
xor
pop
xor
cmc
mov
popf
setle
iret
dec
dec
lcall
cmp
jae
jbe
stos
and
cmp
xchg
push
sbb
imul
push
ret
dec
testb
fwait
movsb
out
jl
push
dec
xchg
into
xchg
lahf
push
push
xchg
testb
mov
push
push
stos
and
outsb
mov
adc
out
mov
dec
sub
inc
bsf
stos
push
jae
mov
aaa
xchg
dec
dec
xchg
xchg
add
sub
popa
cmp
mov
mov
hlt
fmuls
insl
stos
jo
jnp
clc
icebp
out
and
push
js
sahf
add
cwtl
adc
cmp
sbb
add
mov
negb
loope
sbb
sbb
xor
loope
xchg
cwtl
aaa
adc
movsb
jbe
inc
arpl
mov
pop
out
movsb
xor
sahf
mov
mov
mov
inc
test
add
xor
mov
loope
loop
sub
sbb
push
mov
pop
push
sub
lea
mov
in
sub
nop
scas
pusha
clc
ds
into
sti
or
xor
sub
inc
sahf
lods
jb
push
rcrb
and
out
dec
inc
das
pusha
push
pop
jne
sbb
xchg
xchg
lea
cmpsl
or
jns
mov
sarl
daa
in
fdivl
imul
sub
popa
cmp
and
pop
jno
jmp
lret
in
mov
sti
shll
lock
dec
inc
mov
lds
test
cmpsb
popf
popf
sub
pop
push
int
add
jne
or
sbb
or
lods
cmp
test
lea
call
cld
mov
inc
icebp
nop
push
stc
add
jmp
nop
hlt
mov
int3
fcompl
or
insb
jmp
dec
jns
lods
xor
sbb
stc
lahf
ljmp
add
ljmp
pop
sub
sbb
pop
and
mov
or
push
fbstp
push
je
inc
mov
inc
cmp
add
shlb
dec
call
and
xor
ss
pop
out
cmp
pop
or
xchg
dec
jae
push
ficoml
pop
inc
lods
ljmp
ja
mov
insl
ds
jne
fwait
leave
xchg
pop
mov
or
test
or
push
outsl
cmp
clc
popw
movb
jp
int
imul
mov
outsb
jg
loope
cmpsb
xchg
fidivrs
out
sub
or
sbb
and
sarb
frstor
test
std
cmpsb
ja
leave
lds
add
push
xor
xchg
pop
stos
jmp
shr
mov
bound
repz
out
xchg
dec
mov
mov
ret
xchg
mov
cmp
or
outsl
in
cld
add
ret
jns
cmp
pop
negb
ja
dec
int3
adc
sbb
sub
or
or
shrl
push
inc
out
jnp
sti
lods
mov
mov
dec
ret
vhsubpd
test
xor
shlb
xor
mov
inc
push
icebp
int
aaa
push
jmp
std
or
jl
sti
xorb
test
or
and
insb
es
jns
cmp
push
xchg
xchg
lods
dec
pop
pushf
mov
adc
sarl
jo
add
xor
cltd
aad
not
out
mov
mov
mov
push
inc
pusha
mov
add
mov
or
shrl
lcall
clc
push
ret
fiadds
cmc
mov
sbb
data16
pop
and
cli
mov
push
or
imul
mov
or
and
jne
popa
and
and
cmpl
xchg
subl
adcb
shrl
mov
jl
popa
or
cmpsl
mov
filds
cs
xor
inc
lods
scas
mov
aad
sub
loope
test
jns
shll
jge
cmpsl
in
idivb
mov
and
adc
adc
inc
cmp
pop
out
mov
fidivl
cmpsl
mov
jns
mov
xchg
sub
stos
sahf
imul
mov
mov
add
xchg
and
cltd
movsb
test
mov
mov
or
ficomps
ja
shrl
xor
and
or
cmp
cmp
call
daa
cltd
sub
xchg
in
shlb
leave
jno
addr16
cmp
push
mov
outsl
adc
mov
enter
push
iret
ret
and
sbb
iret
adc
xchg
jnp
adc
xor
mov
ljmp
lods
int
or
push
cmpsb
lahf
pop
xchg
faddl
fcoml
and
hlt
jl
out
shl
xchg
mov
cwtl
mov
push
xor
push
cmp
aam
insl
xchg
jns
setne
je
mov
int3
test
push
inc
addr16
sub
std
mov
or
or
mov
inc
and
repnz
dec
cmp
mov
push
adc
lcall
lahf
dec
add
loopne
xor
or
inc
xor
mov
mov
sbb
add
push
mov
mov
subl
aam
test
insb
push
into
pop
mov
lahf
pop
jg
leave
cmpsl
push
int
sub
mov
pop
cld
testb
fldt
repz
in
jl
jne
push
test
mov
fldcw
mov
mov
xor
data16
jge
push
in
fxch
negb
fsubrs
push
out
push
adcb
push
and
jbe
add
inc
mov
shrb
dec
mov
roll
push
jo
fbstp
mov
pop
divb
leave
and
sbb
jmp
cmp
and
xor
ljmp
stc
adc
adcl
dec
pusha
cmp
loopne
mov
out
insb
aam
cmp
cld
jmp
pop
push
jne
sbb
inc
xor
mov
div
pop
lods
sbb
inc
aam
cmpsl
xchg
lock
pushf
push
mov
push
aas
jo
inc
je
cmc
cmpl
or
arpl
inc
test
arpl
inc
es
das
in
scas
dec
inc
data16
sarl
mov
inc
and
jg
or
pop
int3
xchg
psubq
or
jp
sarb
icebp
ja
dec
or
add
movsl
out
push
cmp
pop
mov
xchg
push
dec
sub
mov
cmpb
jecxz
out
and
stos
mov
mov
imull
insl
mov
xchg
xorb
clc
add
arpl
cmp
mov
inc
or
mov
push
sbb
inc
testl
popf
and
adc
mov
pop
and
xlat
aaa
adc
pop
jno
jmp
icebp
je
fstps
fildll
xchg
fmuls
jmp
cs
call
xor
jmp
les
in
mov
push
inc
jns
out
and
lret
inc
jns
test
pop
inc
rolb
push
das
nop
imul
pop
imul
dec
add
or
inc
jnp
mov
enter
lods
xor
sahf
mov
icebp
mov
add
cmpsl
mov
mov
push
pop
mov
sbb
hlt
lret
dec
shrl
cmp
pop
jno
xor
jmp
lea
sbb
movsl
out
adc
aam
pop
jb
inc
adc
push
pop
cmc
aam
mov
inc
and
sbb
mov
jnp
add
mov
lret
popa
cmp
dec
pop
addr16
inc
cwtl
xchg
xor
inc
jnp
out
xchg
xchg
jmp
testb
pop
dec
jo
mov
or
test
jmp
jge
mov
imul
sahf
ficoml
lock
adc
dec
xchg
xchg
mov
fwait
cmp
test
and
xor
cmp
insl
fdivr
imul
mov
dec
pop
stos
outsb
jne
fs
fidivrl
push
movsl
insl
and
sarl
out
sub
mov
mov
inc
xchg
mov
xchg
sub
ss
mov
adc
out
jecxz
cmp
dec
inc
dec
jp
pop
pop
sbb
jmp
adc
lret
jnp
add
add
sub
pop
add
shlb
adc
pop
std
jecxz
clc
mov
ret
sbb
mov
sub
add
dec
sub
push
sub
hlt
ficoms
subl
das
jns
sbb
fbld
dec
and
movsb
mov
fisttps
out
sti
jge
clc
push
xchg
pop
loop
roll
cmc
ljmp
rcrl
push
das
jnp
mov
aam
sarb
inc
jne
pop
lret
adc
jle
outsb
jne
sti
stc
loope
fidivl
hlt
mov
mov
pop
aad
dec
mov
ss
out
cmpsb
push
push
sub
rcll
shrb
outsl
dec
dec
mov
iret
mov
xor
sub
mov
sbb
pop
rclb
and
fbld
adc
jl
jns
and
mov
sub
jl
insb
aam
popa
push
xchg
ja
xchg
les
pop
je
ds
iret
test
sahf
movsb
dec
mov
push
ret
inc
mov
ret
mov
inc
test
bnd
xor
mov
imull
dec
mov
test
xchg
in
notb
bound
inc
subl
dec
and
xlat
xchg
and
sbb
or
pop
inc
xchg
jb
cmp
jmp
stc
xor
mov
push
mov
xor
loopne
mov
dec
lret
xchg
push
pop
mov
repz
ficoml
push
daa
test
icebp
imul
adc
mov
movsb
ljmp
adc
add
adc
lods
or
sbb
mov
outsl
ja
jns
adc
jnp
cmc
inc
ljmp
jbe
adc
or
push
subb
jge
repnz
adc
adc
je
xchg
mov
fistl
jle
sti
sahf
jo
sti
adc
inc
push
add
xchg
dec
inc
clc
inc
ljmp
xor
out
add
xchg
dec
mov
mov
mov
push
adc
add
and
dec
shll
xor
mov
cmp
xchg
movsb
mov
adc
xor
jb
fnstcw
sbb
and
push
inc
mov
jb
dec
or
outsb
rcrb
and
mov
xchg
fmull
pop
loope
mov
adc
pop
mull
cmp
jne
and
dec
imul
data16
outsl
mov
mov
cltd
int
roll
in
adc
sbb
xor
pop
mov
mov
jmp
or
jl
ja
ja
dec
cmp
pop
imul
dec
add
mov
inc
sahf
fistpll
sbb
cmpb
call
mov
mov
mov
mov
push
punpckhbw
fiadds
jmp
mov
enter
xor
addb
subb
add
rol
std
hlt
out
cmp
test
mov
and
mov
mov
jp
mov
fsub
pop
pusha
scas
mov
mov
insb
adc
arpl
or
dec
ja
add
mov
aad
cmpsb
mov
pop
cmp
lret
and
inc
imull
push
dec
ds
mov
jle
add
cmpsb
jo
orl
loopne
push
outsl
lahf
sub
inc
dec
pushf
test
push
cmp
inc
or
dec
imul
lea
pushf
jno
lds
repnz
lret
jecxz
out
mov
jmp
inc
and
cmp
bound
call
mov
jns
xchg
adc
iret
scas
adc
mov
mov
lea
dec
inc
mov
xchg
call
mov
dec
insl
clc
mov
dec
push
cwtl
pop
add
and
sbb
xor
aad
cmp
mov
pop
jle
mov
xor
mov
mov
cmpsb
pop
test
inc
xchg
testl
push
xlat
jl
mov
push
shl
faddl
stos
lahf
hlt
aam
ss
or
dec
push
and
std
and
jp
outsl
jo
clc
jl
nop
lock
pop
or
in
pop
fdivrs
xchg
arpl
add
pop
loopne
stos
inc
jg
insb
cli
push
and
sub
xor
mov
push
in
sbb
and
ss
jne
push
sbb
aas
popf
insl
or
mov
movsl
inc
ficoml
and
scas
mov
mov
cwtl
push
ret
xchg
jmp
test
es
out
inc
std
fadds
fists
push
loope
sbb
enter
mov
sti
pop
xor
mov
mov
mov
mov
push
int
cwtl
jg
out
mov
addl
xchg
std
push
push
lock
jb
sarb
push
jnp
jo
lock
and
fiaddl
sbb
mov
cmp
push
orb
loopne
int3
in
in
mov
scas
pop
lahf
cmp
mov
in
jp
fstl
add
pushf
out
out
jle
cmp
out
arpl
xchg
xchg
das
pop
int3
stos
dec
mov
stos
xorb
jns
stc
and
lock
pop
fisttpl
aad
inc
leave
out
std
cmpsl
and
pushf
inc
lods
je
pop
add
cwtl
xlat
cmc
push
mov
dec
sbb
or
es
push
popa
lea
or
stc
adc
lds
mov
push
addl
imul
loope
sahf
dec
stc
add
inc
pop
cmc
iret
arpl
push
arpl
pop
xorb
ret
pop
das
push
out
ds
aas
sti
ds
or
cmpl
lock
dec
add
mov
in
sub
pop
pop
lods
mov
sub
lea
stos
shrb
into
push
loope
mov
push
xor
mov
popa
xor
sbb
push
outsl
sub
notb
test
xlat
arpl
xor
insb
mov
paddd
xor
xor
lds
out
xchg
lahf
jge
mov
mov
mov
fdivs
sbb
sar
aas
sbb
loopne
fcomip
out
in
icebp
movsb
aad
lds
loop
push
sub
pop
test
and
xor
loop
mov
mov
jo
jl
repnz
add
sbb
orl
out
div
jbe
arpl
lock
fildll
cmovns
or
in
pop
mov
adc
popa
and
ret
mov
mov
mov
hlt
stc
fcomps
lock
scas
mov
xchg
sub
in
ss
into
add
push
xchg
sub
push
imul
test
dec
and
jecxz
ljmp
rclb
and
rorb
lock
out
jge
loopne
call
cmpl
xor
roll
ss
mov
push
in
inc
mov
jle
or
sahf
cs
movsb
cmc
insb
testb
push
inc
pop
leave
add
mov
add
in
cmp
mov
lea
sar
ljmp
pop
mov
lea
push
fdivp
jnp
stos
mov
jns
mov
or
fwait
shlb
pop
or
mov
jns
pusha
clc
stos
lods
jbe
fistps
adc
mov
mov
test
cld
adc
jo
xchg
clc
aaa
pop
push
in
fadd
movb
xorl
dec
pop
movsb
and
mov
std
sbb
push
mov
cltd
fisttpl
into
inc
aaa
ja
movsl
push
add
nop
inc
dec
sbb
sbb
push
loop
xor
scas
sti
cmp
xor
loop
dec
adc
xchg
sbb
inc
xor
mov
neg
pop
popa
jns
shll
rorl
cmp
inc
or
push
sbb
scas
xor
lcall
push
dec
shrl
xor
mov
lea
andb
xor
dec
add
inc
or
add
inc
mov
pop
jo
push
push
cmp
xor
test
cmpsb
cmc
cmpsb
loop
lods
xlat
pop
outsl
repnz
xor
mov
mov
test
mov
aam
dec
stc
jecxz
sbb
xchg
inc
decl
outsb
repz
and
stc
imul
orl
out
adc
ds
icebp
lcall
sbb
or
repz
aam
inc
ja
dec
ds
xchg
mov
sbb
push
sbb
incb
jbe
sub
adc
rolb
test
jns
rol
lret
mov
sub
sbb
insl
sarb
dec
cld
adc
xlat
mov
pusha
arpl
inc
ficoml
push
addr16
jg
scas
adc
in
mov
mov
push
inc
movsb
movsl
adc
mov
add
loope
sub
loop
out
pop
aaa
inc
fs
push
in
ljmp
lds
xchg
arpl
stos
add
add
sub
mov
je
sub
sahf
mov
mov
sbb
push
or
popa
fcmovb
push
ret
mov
jmp
xchg
or
xor
push
xchg
out
add
cld
imul
push
pushf
mov
lret
inc
and
add
cmp
push
cmc
mov
jb
aas
push
and
movsb
xor
mov
popa
push
or
cmp
out
rcll
shlb
adc
ret
repnz
fs
nop
std
jo
fnstsw
jb
push
pop
movsb
pop
out
mov
sub
dec
mov
pop
fcmovne
xor
sub
xor
movsb
mov
mov
outsl
jl
jns
xchg
cli
mov
popa
arpl
cmc
and
push
aas
cmp
jecxz
or
dec
ret
xor
iret
aam
pop
aas
sub
fisttpl
cmp
push
int
popa
iret
or
mov
and
jg
and
insl
xchg
sub
adc
hlt
data16
iret
es
jl
loope
or
fwait
add
lds
inc
out
xchg
sti
cmp
adc
dec
lahf
outsb
popa
out
mov
fcomps
mov
in
adc
dec
cmp
fidivrl
rclb
dec
mov
jbe
movsl
in
pop
xlat
fisubrs
cmp
xchg
cld
or
dec
fcomi
fsubrl
notb
fsubr
xchg
sub
adc
in
cmp
adc
mov
jnp
cwtl
jmp
cmp
mov
mov
rol
mov
xchg
xlat
inc
sbb
cld
dec
mov
cmp
xor
xor
cltd
jg
jg
xchg
cmp
mov
adcl
push
push
aam
cmp
push
pop
xor
mov
mov
mov
jl
pop
ss
repz
xor
xchg
fidivrl
mov
xchg
ja
popf
jbe
sub
leave
push
add
ljmp
and
xor
add
mov
inc
in
stc
cmc
ds
js
dec
ljmp
cmp
jb
pop
fldt
loop
andl
push
imul
add
sbb
adc
jo
pop
xchg
mov
cmp
adc
mov
cmp
inc
sbb
jb
inc
lods
mov
pop
je
sub
loop
int3
pop
sbb
jg
dec
and
dec
mov
sub
cwtl
push
pop
cmp
cmp
and
pop
lds
add
jne
pop
cmp
push
lahf
lcall
fdiv
pop
mov
sbb
adc
notl
dec
loopne
xchg
fdivrs
movsl
stos
ucomiss
pop
leave
scas
sbb
mov
pop
fdivl
inc
and
daa
sbbb
lds
enter
dec
inc
dec
or
mov
imul
cli
lahf
out
daa
sbb
jmp
call
fimuls
cmp
sub
push
ja
mov
cld
clc
repnz
and
insb
push
sub
pop
or
lods
cmpsb
xor
pop
ret
pop
xchg
adc
sub
mov
add
out
fstpt
es
repz
cmp
lock
push
int
pop
sbb
mov
arpl
adc
sbb
imul
pushf
jbe
arpl
lret
cmp
push
test
pusha
cmovns
xor
andb
test
in
arpl
std
mov
sarl
loopnew
sbb
push
repz
loop
adc
stos
out
sub
out
and
sub
popf
push
mov
jecxz
dec
fistpll
dec
cmpsb
das
jmp
pop
inc
mov
cmpsb
push
sbb
lcall
pop
pop
sbb
xor
out
loope
pop
dec
adc
outsb
adc
dec
adc
inc
push
in
sub
inc
adc
and
and
rclb
shl
or
mov
xchg
out
cmp
xor
fwait
inc
and
or
xor
out
sbb
nop
and
or
out
mov
aad
pop
daa
adc
jns
leave
xor
je
mov
cld
insl
push
push
int
shlb
mov
pop
aam
pop
dec
out
and
pop
inc
daa
dec
jb
sbb
ds
imul
fstl
mov
inc
dec
popf
dec
push
push
js
in
repz
xor
stos
arpl
dec
ss
push
test
ljmp
arpl
adc
in
add
xchg
push
sub
jle
and
stos
sar
sbb
cmc
push
sub
push
lods
mov
sbb
pop
sub
pop
aam
in
shrl
inc
xchg
in
and
push
outsl
insb
inc
mov
into
xchg
roll
inc
cmp
roll
andl
dec
and
mov
or
lds
xlat
ret
fmull
xchg
pop
std
out
dec
leave
dec
cld
nop
and
xor
xor
leave
cmp
aas
jmp
scas
je
mov
cli
roll
adc
repnz
leave
dec
out
mulb
push
lods
inc
lcall
add
fwait
sub
add
dec
enter
or
in
mul
jle
ds
cmpsb
js
sbb
pop
loop
jmp
test
xchg
or
je
mov
xchg
ss
pop
cmc
dec
jnp
xorb
cmpsb
int3
pop
je
es
nop
adc
std
shlb
cs
pushf
jge
iret
or
shll
popf
and
mov
sbb
pop
push
lret
ss
jae
dec
das
pusha
jmp
stos
pop
lret
pusha
pop
xor
and
imulb
mov
icebp
mov
rcrb
loopne
mov
inc
sub
xchg
into
mov
mov
jbe
and
mov
insl
hlt
nop
test
shrb
sbb
mov
inc
sub
add
or
jae
int3
addr16
dec
movsl
jmp
mov
arpl
push
mov
adc
fs
icebp
shrb
mov
pop
mov
mov
or
inc
lret
jno
or
stos
cmp
sahf
adc
inc
mov
stc
daa
popa
dec
loopne
mov
cmp
pop
in
mov
fwait
outsl
mov
dec
iret
cmp
std
pop
jne
xchg
sub
dec
push
xchg
inc
fcomip
adc
cmp
imul
clc
popa
adc
pop
test
clc
push
mov
pop
xor
clc
js
cmpsb
das
inc
inc
inc
pop
jecxz
fcompl
jne
mov
loopne
cwtl
rcrb
add
push
cld
xchg
push
xor
xor
dec
mov
inc
pushf
jnp
push
les
mov
adc
add
out
icebp
xlat
inc
push
push
jo
add
shlb
aad
shlb
mov
jb
mov
pop
movsl
sar
xor
xchg
push
sub
repnz
mov
mov
jl
stos
xor
lahf
sub
pop
mov
mov
push
repz
je
cltd
mov
imul
outsl
mov
das
inc
addr16
pusha
sub
and
subb
mov
out
pop
dec
rcrb
and
ljmp
jmp
sbb
lahf
lret
cmp
icebp
addr16
rolb
and
sbb
jmp
pop
xchg
mov
cltd
loopne
add
mov
inc
xchg
dec
mov
pop
pop
in
push
xorb
sarl
xchg
in
mov
mov
je
xchg
inc
cld
pop
push
in
adc
aas
and
loop
jb
xchg
popf
mov
inc
test
popf
push
pusha
in
rorl
aaa
xchg
cmp
sbb
xchg
rcrb
add
mov
adc
stos
inc
add
popa
cmp
mov
test
in
fwait
mov
out
xchg
and
icebp
call
cmp
dec
jmp
insl
cmpsl
xchg
in
dec
aad
clc
xor
sbb
xchg
aad
inc
cwtd
push
sub
int3
cwtl
mov
or
stc
ja
mov
and
sahf
inc
negb
add
gs
mov
pop
mov
das
jl
lock
dec
movsb
es
jo
std
bound
cmp
and
jnp
cmp
inc
jmp
xchg
pop
mov
push
movsb
nop
fisttpl
loope
fdivrl
fwait
inc
out
inc
pusha
mov
fadd
jne
or
xchg
xchg
pop
adcl
jg
mov
cmp
or
add
outsb
rclb
xor
and
fs
sarl
fmulp
cmpsl
adc
sbb
addb
mov
mov
neg
fnstcw
fadd
mov
pop
mov
adc
jne
push
mov
pop
push
xchg
xor
aam
insb
jae
sbb
insl
fs
fwait
mov
jp
pusha
dec
aaa
jbe
sub
stos
mov
fimuls
jg
into
cld
sbb
js
mov
ret
fdiv
mov
sbb
xor
scas
rorl
out
add
pop
sti
jne
out
cli
rorl
repnz
into
sahf
xchg
scas
aas
mov
in
mov
push
andl
sub
mov
lock
push
or
jne
xlat
and
mov
adc
mov
cmpsb
sub
ja
pop
aad
adc
je
icebp
in
inc
dec
jnp
cli
push
jbe
xchg
adc
movsl
sub
mov
lahf
push
and
jg
es
xchg
sti
mov
adc
jo
insb
pop
sbb
inc
inc
shr
pop
xchg
insl
fbld
repnz
add
call
or
shlb
hlt
inc
rcr
xor
hlt
cltd
lcall
dec
adc
cld
das
push
push
fstl
bound
and
jle
sbb
push
aam
gs
pop
sub
mov
mov
adc
prefetch
dec
or
sub
lret
and
cmc
sti
sub
imul
adc
imul
jo
in
cmp
xorl
or
sub
pop
dec
iret
in
repz
sub
fidivl
jbe
or
aaa
inc
xorb
jmp
pop
imul
xchg
or
aas
jo
outsl
and
ljmp
aas
push
in
mov
rorl
or
mov
idivl
cmp
sbb
xchg
rolb
mov
xor
lds
addl
insl
lods
adc
push
fisttpl
pop
les
lods
sbb
enter
int
mov
mov
clc
mov
arpl
sbbl
imul
and
mov
inc
rol
pop
int3
jno
or
lahf
push
add
dec
adc
mov
mov
xor
scas
notl
adcl
pop
xchg
int3
jl
push
les
mov
jno
out
hlt
cwtl
push
xchg
adc
mov
arpl
xor
adc
mov
shl
mov
rolb
adc
mov
ret
mov
jl
jle
mov
call
test
and
cld
push
test
das
lcall
dec
add
fs
xchg
cmp
gs
cmc
movsl
add
dec
lods
test
hlt
int
test
lret
add
lret
xor
pop
mov
xchg
addr16
sub
sbb
and
mov
push
ja
xor
sbb
and
xchg
add
mov
fwait
push
push
insb
aam
push
cli
xlat
out
mov
jle
cmp
jns
mov
subb
adc
daa
fsubrl
xchg
loopne
push
sub
les
das
mov
call
mov
mov
add
add
pop
ss
sbb
jnp
sbb
push
inc
mov
xchg
fistpll
sbbl
lahf
ljmp
ds
sbb
clc
int3
jle
ljmp
mov
sub
sbb
dec
outsb
xchg
dec
mov
jo
xor
push
or
inc
pop
push
mov
or
inc
in
outsb
xchg
and
inc
sub
test
inc
xchg
xchg
mov
imul
xchg
stos
jns
in
js
sbb
mov
and
popa
mov
in
cmpsl
scas
mov
arpl
pusha
call
popa
loope
iret
push
inc
out
add
scas
stos
adc
add
xor
add
int
imul
lods
or
jge
in
sbb
jge
mov
push
pop
inc
loopne
xchg
sar
xor
mov
and
stos
test
bound
shll
inc
pop
cmc
mov
push
mov
inc
cmpsl
sti
cmp
in
aaa
bound
jmp
pop
adc
xchg
pop
mov
or
or
jmp
ret
push
push
stos
sbb
aad
adc
sbb
and
add
popa
mov
push
aas
lcall
xchg
jbe
push
cli
add
mov
cmp
mov
lods
pop
fiadds
mov
push
jo
fidivl
fbld
jb
int3
shlb
pop
push
cmp
addr16
cmpsb
push
mov
pusha
dec
dec
mov
pop
jmp
js
mov
loopne
lock
xchg
xor
push
xchg
mov
int3
xorb
and
cld
fidivrs
addr16
cmp
or
cmpb
mov
sti
add
adc
test
insb
sarl
cwtl
leave
enter
jns
mov
jnp
pushf
pop
jbe
pop
xor
in
and
rol
xor
xor
pop
mov
stos
ret
movlps
push
shlb
fnstenv
jbe
shrb
lret
imul
mov
cmp
mov
lret
insl
mov
iret
pop
lret
push
negl
call
in
lods
xor
sbb
mov
scas
jle
mov
and
jmp
fistps
inc
pusha
test
clc
cli
lret
jle
sub
and
sbb
les
stc
int
lret
sbb
dec
cltd
call
fcomi
int
in
lds
xchg
mov
cs
push
mov
adc
push
rcl
in
inc
and
insb
mov
es
lock
add
bound
and
fwait
jne
push
pop
sub
pop
dec
lds
fistps
imul
cltd
int
stos
cltd
test
in
fsubrs
inc
ds
divb
mov
jb
lds
lret
adc
fldt
sbb
xchg
mov
es
out
loop
js
push
js
scas
icebp
das
xor
mov
push
and
pop
inc
idivb
pusha
mov
inc
mov
sub
sarb
push
es
inc
nop
addb
xchg
lods
movsl
jp
in
out
pushf
cmp
or
pop
add
test
cli
jae
repz
mov
adc
cwtl
pop
das
and
pusha
inc
cwtl
add
movsb
xchg
adc
push
movsl
int3
pop
xchg
lret
pop
sub
add
cmp
dec
int3
cmp
into
ja
sarb
inc
cmp
mov
mov
cmp
lcall
ja
add
push
clc
lahf
daa
or
lds
or
stc
cmp
add
int3
add
lds
out
data16
inc
xor
jb
test
fldl
mov
mov
pop
fistl
js
xor
mov
ret
push
ja
push
mov
mov
lods
mov
and
cwtl
jo
mov
xchg
push
das
lahf
xchg
in
push
xchg
push
add
xor
or
cmp
lods
jne
pop
cmp
sub
fisubl
cld
xor
arpl
push
mov
sahf
jmp
jns
popf
fldt
subb
adc
fs
xorb
add
sbb
pop
aas
xor
add
xchg
pmuludq
sub
mov
adc
ret
daa
mov
xchg
sbb
mov
in
jne
shlb
or
jbe
mov
fsubl
pop
add
pushl
imul
mov
push
sub
nop
pop
push
test
lret
bnd
cli
aad
sub
add
jbe
xchg
loop
xor
stos
test
sbb
scas
mov
xchg
jmp
and
mov
mov
dec
cmp
inc
fsubrp
push
pushf
add
or
add
int3
add
addl
inc
call
sbb
push
add
pop
rcr
inc
pop
adc
in
int
arpl
aam
mov
xchg
popa
pop
aad
push
ss
out
mov
addb
into
or
or
add
pop
adc
popa
test
ja
mov
and
lea
dec
inc
test
jge
bound
pop
cmp
mov
ja
push
xchg
xchg
pop
cmpb
or
sbb
lret
sub
and
aad
rclb
push
mov
or
pop
outsb
in
pop
cmp
adc
push
add
sbb
jae
sbb
cld
test
adc
movb
sbbl
mov
out
int
movsb
mov
or
push
jge
mov
push
jns
js
leave
inc
ret
into
data16
mov
sbb
pushf
mov
mov
fbld
pop
lret
dec
movsb
mov
xor
rep
movsb
lds
adcl
hlt
fldenv
pop
mov
sbb
add
and
outsb
repnz
mov
xor
sub
fimull
mov
lock
int
imul
nop
mov
xor
mov
or
or
inc
xchg
out
mov
mull
push
cmpsb
cwtl
or
nop
test
test
pop
cmp
dec
lock
pop
mov
daa
mov
lea
pop
sbb
jb
mov
dec
or
mov
fldenv
jnp
test
jb
add
negb
jo
jg
stc
sbb
lock
fildl
sbb
mov
sbb
inc
push
push
imul
inc
pusha
add
not
mov
xor
jne
xchg
lock
dec
cltd
lahf
cmp
mov
and
out
jo
in
fimull
std
adc
js
adc
xor
test
rolb
push
test
and
sub
fcompl
adc
cwtl
pop
inc
movsl
sbb
fldl
adc
cmp
push
test
xchg
pop
add
push
dec
push
fs
flds
dec
mov
paddusb
sbb
ss
jns
sub
mov
leave
jmp
pop
fldz
xchg
bound
sbb
outsb
and
shr
sub
mov
xorb
loopne
add
push
jp
popa
push
xchg
push
addb
inc
popa
cmp
test
xchg
mov
mov
dec
lret
mov
fldl
scas
notb
cmpl
adc
cmp
sub
outsb
mov
inc
cwtl
subb
jl
dec
jb
fldcw
loopne
mov
dec
call
clc
adc
inc
inc
push
js
mov
pushf
and
sub
outsb
xchg
xchg
out
pop
sub
insb
inc
lahf
insl
push
shl
fadds
adc
stos
das
stos
pop
xlat
add
push
das
adc
dec
sbb
pop
popa
dec
pop
pop
lock
adc
sub
mov
js
lds
pushf
jns
hlt
adc
jo
mov
pop
les
out
or
inc
push
xorb
das
push
lods
dec
pop
fldcw
or
cmpsl
dec
fmuls
and
in
pcmpeqd
dec
pop
xor
popf
movsb
cmc
pop
shll
xchg
out
pop
ja
fcoms
mov
shlb
sahf
mov
frstor
jns
push
jbe
and
addr16
mov
inc
sbb
dec
jmp
scas
scas
sbb
mov
mov
adc
sbb
mov
ja
mov
dec
popa
out
lds
std
das
lods
cmp
fs
xchg
push
mov
cli
call
cli
divb
push
jge
pop
jl
dec
jle
sub
inc
xor
xor
lock
rolb
inc
dec
lret
aaa
leave
test
leave
fnstsw
jmp
scas
cld
xchg
rol
cmc
lods
sbbl
pop
lret
outsl
ss
dec
jl
les
cld
pushf
jbe
mov
pusha
rcrl
andl
inc
or
in
repz
insl
push
push
and
mov
mull
xchg
out
mov
xchg
inc
mov
es
data16
inc
inc
out
sub
jl
leave
outsb
jo
repnz
popl
call
imul
cmp
mov
in
or
cwtl
jge
in
pop
inc
jle
aam
or
mov
ret
repnz
enter
cmp
popf
shlb
lahf
push
sbb
mov
setg
add
jp
sub
and
pop
out
fsub
mov
inc
xchg
ret
xchg
cld
mov
xor
and
loopne
iret
add
jo
xchg
push
int3
xchg
dec
out
xchg
and
push
mov
stc
mov
sub
stos
push
add
push
mov
xor
xchg
mov
sub
add
and
mov
test
ss
clc
cmp
jno
xchg
jb
scas
nop
aaa
adc
mov
fs
fstpt
icebp
loope
pop
pop
arpl
pop
xlat
fbstp
fcomps
ret
in
clc
popf
leave
mov
adc
lea
dec
ret
xor
pop
push
mov
leave
jp
xchg
fstpt
outsl
and
push
adc
popa
bound
push
lcall
lret
rorl
and
xor
dec
mov
mov
pop
cmp
es
fidivl
pop
xor
cmc
sarb
iret
divl
sahf
and
lret
dec
call
dec
mov
add
loope
jo
sbb
aaa
call
outsb
sarb
out
lret
mov
mov
and
lock
in
fmuls
es
and
adc
outsb
push
xor
sbb
jmp
push
fidivrl
test
xchg
iret
mov
out
add
pushf
mov
mov
fiaddl
add
in
aaa
lods
test
pop
cltd
sub
mov
test
mov
aaa
jno
jl
call
ret
lds
or
leave
outsb
xchg
xchg
jo
fsubrl
mov
sub
test
fidivl
xchg
dec
or
ds
cs
push
and
in
ret
inc
js
xor
mov
je
aaa
mov
cmc
ret
cmpsl
or
fistpl
int3
cmp
sbb
push
lea
cmp
dec
out
mov
push
sbb
xlat
pop
in
mov
lret
mov
inc
ret
imul
and
cmpl
mov
orl
movsl
roll
adc
je
cmp
pop
mov
xchg
fsts
cli
xchg
idivb
dec
lahf
sbb
stos
and
push
xor
inc
insb
inc
push
pop
jbe
cs
ja
mov
lods
pop
pop
mov
adc
jbe
cld
mov
pop
out
pop
pusha
notb
mov
scas
call
out
rcrb
rcr
shlb
ret
cli
ds
sub
sbb
sbb
arpl
clc
scas
sti
or
imul
inc
sbb
cmp
arpl
cli
repnz
leave
jmp
ret
in
sbb
rcl
ljmp
ret
mov
aad
push
or
rorl
adc
mov
shlb
jge
mov
jne
jle
dec
jg
addr16
inc
jecxz
sub
jae
rcrl
jb
dec
leave
push
cmp
loope
rep
add
adc
xchg
test
out
jns
pop
shl
jmp
fisubs
in
jl
rorl
xchg
jmp
pop
es
adc
sahf
int
adcb
fbstp
add
sub
test
push
cmp
cli
ds
dec
dec
or
xchg
or
loopne
push
jno
outsl
inc
stc
jp
and
jle
pop
add
or
push
pop
shl
je
push
lea
nop
xlat
cmc
add
lcall
test
xlat
shlb
pop
out
and
aaa
push
out
xchg
addr16
popa
xorb
ret
jmp
dec
test
fiadds
pop
xor
stos
jne
in
xchg
mov
fs
scas
lea
fisubrl
ljmp
fs
mov
pop
outsl
icebp
xchg
push
pusha
jne
int
movsl
adc
mov
imul
mov
push
or
into
ret
xchg
cwtl
cmp
ror
nop
sub
enter
pusha
adc
add
scas
shll
mov
lea
mov
sub
enter
inc
loopne
adc
and
mov
cmp
fwait
int
lea
mov
mov
fwait
sub
sbb
idiv
or
nop
int
fcom
jg
out
or
lods
mov
inc
mov
fistps
cs
test
ret
fimuls
mov
outsl
ds
ret
test
pop
stos
ret
xchg
mov
inc
mov
pop
sbb
mov
gs
popa
std
test
cmp
cmp
inc
nop
sbb
adc
push
cmp
mov
sub
lret
lret
xlat
loop
push
jno
adc
lcall
sub
xchg
out
sub
cld
push
loop
push
xchg
lahf
mov
pop
frstor
jp
lret
pop
mov
jp
push
arpl
divb
subb
iret
fprem
movsl
pop
mov
fsubrs
lock
repz
les
inc
out
adc
or
pop
lret
cs
adc
xor
imul
dec
sbb
inc
aaa
clc
push
push
aas
or
aam
mov
push
cmp
inc
lods
sub
xchg
push
mov
inc
jae
lahf
cmp
jns
or
or
jge
or
inc
sbb
dec
pop
add
mov
lds
sbb
mov
es
mov
sub
mov
lea
test
and
dec
cmp
jecxz
sub
movsl
aas
cltd
flds
stos
jb
pop
lock
and
les
cltd
mov
push
fiadds
mov
js
lahf
and
mov
push
inc
std
add
pop
arpl
aam
sbb
loope
cmp
add
cmpl
inc
repz
roll
or
cmp
sub
dec
shr
ret
loopne
or
jb
sbb
dec
mov
mov
sbb
inc
data16
add
mov
add
pushf
mov
ja
je
pop
xor
push
sbb
pop
movsb
sbb
rcll
sbb
mov
xor
les
mov
sti
popa
pushf
bound
push
adc
mov
lcall
loop
outsl
scas
push
or
dec
movsl
or
shlb
pushf
out
jecxz
lock
mov
cmp
insl
das
roll
hlt
mov
sub
cmp
popf
es
test
mov
fs
fadd
pop
imul
or
xchg
fnstenv
pop
or
or
jnp
pusha
out
clc
cmp
jbe
and
xchg
jl
and
dec
or
arpl
sbb
shll
movsb
inc
int3
jae
lahf
aaa
mov
hlt
xor
in
sub
out
arpl
push
sub
in
scas
dec
or
jno
outsb
insb
xchg
in
fnstenv
in
push
test
sbb
scas
add
pushf
dec
push
xlat
or
push
mov
cltd
scas
dec
dec
mov
jne
pusha
pop
pusha
add
fwait
mull
es
mov
aam
xchg
fst
stos
outsl
xchg
aad
inc
js
xchg
mov
movsl
stos
pslld
pop
add
inc
add
pop
test
outsb
xor
lock
cli
or
pop
cli
push
gs
push
push
ret
test
mov
ljmp
pop
mov
enter
adc
sbb
jno
fstps
jecxz
adc
add
rcr
mov
mov
mov
sbb
sahf
mov
dec
sbb
outsl
dec
mov
int3
mov
outsl
jb
sub
outsb
out
add
aaa
jae
fisttpll
scas
neg
shlb
test
push
xor
xchg
jecxz
jnp
movsl
or
or
mov
sbb
add
pop
iret
es
xchg
insl
in
mov
cmp
inc
xchg
hlt
out
jns
dec
aam
cmpsb
scas
out
out
sbb
or
adc
aam
or
dec
inc
cli
cmp
cltd
mov
enter
xchg
jbe
pop
cmpsb
or
mov
daa
inc
aaa
mov
test
icebp
stc
in
cmp
inc
jecxz
lcall
fnstenv
mov
lret
popa
jg
pop
into
inc
cmc
lahf
leave
fmull
out
sarb
pop
loope
insb
xchg
sbb
mov
fs
jo
lret
pop
push
sbb
fisubrs
movsb
pop
insb
jmp
xchg
push
std
data16
mov
jns
mov
sti
mov
xchg
stos
mov
adc
in
xor
add
dec
jnp
rcll
mov
xchg
fsubrp
jecxz
test
cmp
dec
jb
bound
fisubs
inc
test
test
inc
lret
test
mov
fidivrl
dec
mov
xor
mov
sub
popa
fdivrl
xchg
ss
ror
rolb
pop
movsb
notb
jne
mov
mov
int
jmp
cmp
test
testl
jae
dec
pop
xor
mov
push
and
sti
imul
ja
lods
push
std
adc
out
fmuls
push
cmp
push
sub
and
outsb
insl
mov
repz
adc
xchg
gs
dec
mov
inc
adc
imul
ds
in
pop
lock
icebp
mov
adc
xor
stos
add
int
cmp
push
in
outsb
cmpsb
outsl
data16
mov
lcall
lahf
sbb
pop
xlat
test
dec
xchg
cmp
or
mov
or
imul
gs
pop
sbb
lcall
push
jbe
pushf
in
push
jp
repnz
inc
jg
pusha
mov
notb
cltd
and
mov
xchg
out
mov
fs
push
cmovo
push
mov
jno
cmp
andnps
adc
jns
pop
aas
pop
fimull
jae
es
xor
xor
jbe
dec
out
mov
movsl
lds
sti
and
cmp
and
andl
push
jge
sbb
jae
out
leave
sti
ret
shrl
pop
pop
xchg
inc
int3
mov
dec
bound
insb
jnp
mov
je
dec
add
cld
pushf
movsb
xchg
outsl
add
jae
and
push
leave
int3
push
cmpsb
jmp
push
negb
or
test
pop
movsl
movsb
stc
sbb
mov
aas
loopne
mov
inc
push
mov
mov
mov
rorb
mov
mov
or
pop
stos
dec
mov
dec
hlt
pop
fcmovnbe
mov
clc
data16
iret
pop
cs
test
jecxz
repnz
or
sub
xchg
sbb
jecxz
sub
sbb
push
outsb
mov
xor
or
in
sub
push
sbb
jg
lret
sbb
jno
lock
mov
inc
mov
leave
sbb
sub
pop
mov
xor
cmc
ret
mov
cwtl
in
dec
dec
scas
xchg
ret
jle
adc
cltd
pop
icebp
xchg
push
cmp
into
add
jge
mov
mov
jno
cld
xchg
outsb
arpl
pop
dec
inc
or
psrad
mov
loop
mov
je
rol
scas
and
je
movsb
les
dec
mov
std
out
xchg
in
sahf
je
sbb
lcall
and
jge
jne
repnz
enter
mov
push
out
loope
adc
je
xorl
add
and
and
das
cs
fnstcw
pop
sub
pop
add
rcrl
int3
dec
mov
mov
sub
dec
mov
inc
or
ja
add
out
imul
jmp
inc
sahf
lcall
pop
pop
cwtl
mov
sti
jmp
cs
pop
addl
out
daa
and
pop
repnz
or
cmp
mov
push
mov
cli
test
pop
mov
ljmp
dec
jns
inc
jp
scas
add
sti
cmp
add
cwtl
push
xchg
or
add
cmpb
push
addl
push
lea
add
imulb
push
sub
adc
add
shrl
es
call
nop
incb
sbb
ljmp
out
push
pusha
test
sub
ds
and
xchg
add
ret
lods
xchg
cwtl
dec
jmp
lods
rcrl
and
ret
shll
add
jb
xchg
xchg
repz
inc
inc
or
aaa
sub
jnp
jne
dec
pop
loopne
imul
pop
cmp
repnz
test
lret
cmpsl
jno,pt
dec
mov
imul
add
xchg
sbb
and
lcall
lods
movsb
jne
pop
lock
aad
and
push
jmp
xchg
ss
push
mov
adc
xchg
fcoms
and
xchg
push
jns
inc
and
push
insl
xchg
push
imull
xchg
js
sti
add
xchg
mov
cltd
dec
pop
cltd
sbb
cmp
out
ja
int3
sti
mov
or
or
aam
out
mov
addr16
mov
jbe
loope
mov
jae
mov
pushf
mov
and
cltd
jle
ds
ss
decl
not
xchg
mov
pop
ljmp
or
push
fs
xor
jbe
xchg
pop
cmp
jmp
outsl
lret
cs
inc
add
sahf
lods
aad
enter
sbb
sub
ds
insb
orb
bound
shlb
sbb
or
push
push
inc
push
imul
shlb
out
test
pusha
jnp
imul
js
fbld
mov
mov
inc
dec
out
or
pop
and
ja
paddusb
fimull
push
pushf
fdivs
lock
fstpt
outsl
int3
push
xor
push
add
rcll
mov
ds
andnps
or
inc
ret
add
jne
dec
pop
and
mov
push
xlat
js
cmp
sbb
cmp
cmp
pop
pop
insb
clc
stos
les
push
push
lea
inc
insl
mov
imul
fnsave
mov
movsb
dec
xorl
in
push
push
pop
dec
pop
data16
sub
sbb
sub
push
fldt
or
cs
cmc
fsubrs
add
test
lret
out
mov
fwait
dec
inc
in
and
sbb
insl
fsubl
cwtl
inc
mov
imul
std
lock
outsb
xchg
cmp
daa
sub
pop
test
sti
jo
adc
xchg
in
mov
pop
gs
pop
daa
outsb
sbb
fwait
push
sub
filds
jp
adc
mov
out
outsb
lea
bound
fucomi
mov
divl
into
dec
pop
jns
aas
insb
cld
daa
cmp
lret
aas
clc
fistl
jge
jecxz
arpl
xchg
adc
jb
lea
sub
cmc
cmp
sub
lds
add
adc
inc
pop
ljmp
xchg
inc
sbb
jmp
adc
push
pop
xor
out
mov
dec
leave
aam
movsl
in
jle
jne
pop
dec
cld
xor
xor
mov
xchg
out
lret
pop
jl
insl
ljmp
push
jp
xor
pop
ror
sahf
ret
lds
sub
and
push
pop
or
paddq
jns
pop
and
pop
inc
sub
loop
jle
imul
fldenv
outsb
mov
push
mov
idiv
xlat
or
xchg
enter
mov
incb
daa
push
xchg
xor
push
xor
dec
jl
push
or
ds
xchg
push
fstl
mov
cmp
std
arpl
andl
adc
adc
mov
popf
xchg
sub
movsl
or
mov
and
xchg
push
imul
stos
jae
stos
mov
and
in
ficompl
movsl
mov
pop
adc
inc
jbe
testb
cmp
rcr
movsl
stc
popa
mov
add
cli
in
icebp
dec
lock
test
das
fwait
mov
rcr
jl
xor
xor
mov
call
inc
mov
xchg
rcrl
scas
fidivs
or
jae
test
xchg
jmp
pop
std
adc
pop
popa
jmp
jecxz
push
aas
rolb
push
xchg
dec
pushf
popa
mov
dec
int
stc
push
sbb
lret
fmulp
fst
add
or
mov
sbb
and
loop
mov
and
push
dec
movb
mov
adc
out
inc
push
dec
xchg
std
out
or
addr16
cli
dec
mov
sub
and
cmpsb
pop
xor
xor
outsl
test
and
jp
mov
add
inc
pop
pushf
cmc
stc
inc
je
gs
loopne
push
jp
lods
jo
test
ret
adc
je
cmp
sbb
add
jbe
push
dec
ret
test
outsl
inc
out
push
pop
fwait
cmp
outsb
mov
inc
add
adc
or
inc
fldenv
mov
sub
ret
hlt
pop
mov
insl
into
cwtl
mov
mov
inc
dec
cmpsl
incb
adc
bound
gs
and
xchg
mov
fwait
leave
add
add
cld
andl
adc
cli
popa
insl
xor
call
repnz
xor
mov
cmpsb
stc
or
adc
and
mov
or
scas
fisttpl
sbbl
rolb
lret
into
inc
ja
or
insb
mov
rclb
and
icebp
stos
movsb
lret
sbbb
inc
nop
adc
xchg
pop
cs
in
jecxz
out
xchg
out
fdivrl
mov
loop
cwtl
mov
outsl
add
jle
mov
mov
in
stos
mov
aam
loope
push
das
xor
outsl
cmp
hlt
imul
rcll
mov
outsl
push
mov
or
fdivrl
mov
test
inc
mov
or
push
ljmp
daa
daa
imul
mov
add
pop
insb
sbb
js
jns
mov
adc
jo
inc
adc
sbb
decb
pop
lret
cmp
sub
jns
xchg
sbb
mov
daa
xchg
jbe
pop
in
add
mov
lods
xlat
mov
loopne
into
jae
call
mov
popf
mov
jae
jp
lods
push
addr16
pop
dec
cmp
jne
mov
ljmp
lock
outsl
and
mov
lods
mov
and
pop
fimull
lods
mov
lods
orb
push
pop
iret
push
mov
fldpi
clc
loope
jno
aad
gs
pop
jo
out
xor
rol
cmpsb
jbe
or
jno
adc
out
jns
outsl
aas
pop
in
xchg
push
shll
or
vmovd
stc
sahf
arpl
cmpps
jne
or
pusha
adc
jmp
fldcw
fsubs
jmp
leave
vmovq
pop
jne
sbb
insl
sbbb
push
add
mov
jne
ret
add
dec
mov
push
sub
stos
or
shll
stc
addr16
inc
negb
xchg
jecxz
mov
imul
cmpsl
pop
ret
push
dec
inc
jns
insl
pop
jge
std
inc
xchg
cli
mov
into
mov
imul
jno
xor
sbb
ret
adc
add
push
mov
fnstcw
lret
xchg
sbb
inc
lret
adc
mov
xor
cmp
aam
data16
insb
and
inc
pop
xor
mov
push
mov
pop
mov
lods
push
adc
clc
jge
adc
outsb
pop
mov
mov
pop
or
xchg
call
sbb
movsl
inc
and
loope
bound
jno
xor
or
sbb
loope
mov
in
push
mov
dec
lds
roll
dec
subb
lock
cld
lret
xor
data16
int
mov
and
push
mov
add
lahf
and
test
fdivrs
push
mov
cwtl
mov
and
and
and
mov
lret
loop
adc
and
mov
ja
inc
sub
sbb
pop
pop
cmc
xchg
stos
cmp
hlt
in
mov
repnz
aam
pop
sbb
andb
mov
jle
sub
lds
mov
mov
add
mov
push
push
lahf
fchs
rcrl
mov
pushf
jle
shlb
mov
inc
mov
loope
and
test
inc
xchg
jo
ffree
push
jmp
add
adc
stos
sub
in
xor
dec
push
mov
ja
ljmp
ret
adc
out
xor
int3
jb
lods
inc
jle
dec
dec
cmpl
or
adc
dec
out
mov
loope
movsb
dec
orb
cmp
stos
pop
add
in
hlt
mov
add
mov
mov
mov
inc
insl
out
rcrb
jno
push
xchg
mov
lret
je
push
rorl
fs
pushf
xor
push
adc
aaa
aaa
rcl
leave
dec
inc
jge
iret
hlt
cmpsb
push
test
aaa
mov
sub
out
pop
adc
push
cld
adc
pop
dec
jp
sbb
test
scas
add
inc
shll
mov
in
mov
inc
mov
and
mov
dec
into
std
push
jl
pop
ja
or
sar
pop
imul
inc
jl
push
xor
test
mov
fs
jmp
xlat
out
daa
cs
jo
mov
bound
scas
pop
inc
out
mov
sub
shl
jnp
add
ljmp
add
mov
cli
shll
pop
inc
jnp
cmp
lods
out
shr
dec
fdivrs
leave
or
rol
outsb
dec
jmp
ja
scas
in
push
mov
xorb
adc
mov
test
jmp
mov
fsts
icebp
add
and
xchg
loop
xchg
mov
aad
into
dec
lea
test
stos
lea
pop
cmp
push
adc
cmpsb
pop
adc
mov
mov
cmp
pop
test
sub
adc
into
loopne
sbbl
cwtl
add
fcomps
hlt
mov
inc
out
test
xchg
xchg
mov
fnstenv
js
mov
aam
jb
fcoml
nop
std
dec
out
mov
data16
mov
out
mov
xchg
xor
push
push
ja
mov
add
mov
xor
adc
in
and
push
xchg
adc
popa
stc
in
push
adc
sbb
scas
movsl
inc
xchg
xor
in
jl
cmpsl
lods
push
in
sbbb
xchg
fldt
ljmp
in
xlat
cmp
jnp
lods
xor
adc
xchg
xsha1
cmpsb
leave
push
movsl
or
adc
lcall
add
xor
jae
push
roll
jae
pop
and
jge
add
or
sbb
loope
pop
push
sbb
or
pop
push
mov
adc
pop
in
cmc
lcall
nop
pop
mov
das
repz
jns
pop
ljmp
rclb
cld
mov
jbe
xchg
sub
cmp
mov
dec
mov
fs
mov
pop
dec
mov
in
fidivs
addr16
or
ret
rcr
pop
aaa
cmp
bound
and
adc
jb
lcall
das
pop
jnp
adc
lds
adc
push
mov
insl
add
bound
ljmp
push
div
push
int
push
movsb
push
fstpt
jne
sbb
jecxz
xor
rcl
icebp
sub
jne
iret
loop
adc
shl
mov
test
bound
in
scas
mov
push
mov
icebp
hlt
dec
decb
out
inc
xor
imul
jno
sti
and
loope
imul
orb
imul
add
cmpsl
lds
mov
xchg
lea
push
inc
add
or
cs
xchg
cli
cltd
sub
ss
cmp
loop
gs
sbb
or
push
mov
mov
in
xchg
test
mulb
mov
jl
push
push
inc
std
sbb
sbb
aaa
jge
xchg
loopne
lret
dec
popf
add
fs
lods
mov
push
mov
sbbl
push
mov
mov
cld
arpl
xchg
divb
andl
inc
pop
xchg
es
out
es
add
outsb
sarl
inc
mov
xchg
jne
pop
fdiv
cmc
push
in
adc
ret
rcrb
sub
sti
ss
nop
and
imul
push
inc
js
mov
or
mov
inc
test
add
mov
dec
cs
push
imul
or
pop
int
push
rclb
mov
adc
jl
push
clc
mov
popfw
movsl
adc
sbb
cld
xchg
add
lock
xor
xor
jb
cmpsl
add
lock
ret
aas
jae
lret
mov
addr16
cmp
and
jmp
sub
or
mov
jbe
mov
mov
xchg
jne
adc
popw
inc
call
scas
ret
les
clc
xchg
inc
pop
je
into
addr16
inc
cli
push
cmp
lea
sub
xchg
mov
lods
testl
scas
and
jne
adcb
aad
out
push
pushf
mov
pop
cmp
mov
push
lods
outsl
sub
lock
xchg
clc
jnp
addr16
or
fisubrs
mov
sbb
sub
sub
inc
popa
mov
lret
outsb
lods
repz
int
jg
pop
sbbb
inc
movsl
cld
or
adc
rorl
dec
sub
mull
mov
int
adc
mov
ret
dec
int
sahf
mov
test
test
mov
adc
aad
pop
inc
ja
push
mov
repz
jnp
mov
hlt
mov
push
or
jmp
rcr
or
lods
sahf
adc
ds
xor
ss
data16
out
add
es
xor
aam
push
push
movsb
inc
dec
in
jle
or
adc
jno
xor
and
imul
adc
or
test
scas
sub
add
add
mov
inc
pop
lcall
cmc
ss
test
jne
xchg
addr16
mov
repz
cmpsl
push
cltd
ret
lahf
jae
mov
inc
xorl
imul
jo
and
cli
pop
sete
aas
insl
icebp
xor
jp
lods
dec
push
adc
repz
cs
jecxz
into
int3
xor
test
andb
jne
aaa
out
cmp
mov
shrb
pop
rolb
jbe
out
test
sbb
fiaddl
or
loopne
imull
jle
and
cmp
cli
cmp
aas
aad
dec
into
and
cmp
testb
aaa
xchg
movsb
push
push
scas
push
lcall
push
fisubrs
and
lahf
fwait
sbb
mov
xchg
jbe
das
inc
std
xchg
lea
pop
push
mov
fisubl
push
dec
rorl
insb
push
dec
std
xor
adc
cmp
adc
imul
inc
push
push
inc
sub
jl
push
mov
push
test
sahf
aad
rcl
rcrb
imul
cmpb
or
mov
sti
cmp
cmpsb
add
ljmp
loop
add
adc
xchg
fcompl
add
dec
rcr
repnz
mov
jge
popa
adc
push
lods
inc
cmp
mov
dec
and
int
repnz
and
ficompl
lock
xchg
inc
mov
adc
ljmp
and
sub
cmpsb
jmp
sub
loopne
mov
in
sbb
stc
jae
mov
repz
inc
scas
add
xchg
movsb
cmpsl
mov
scas
adc
add
int3
push
aad
popf
loopne
mov
jb
jecxz
es
inc
cmp
cmp
mov
sahf
data16
test
iret
xchg
pop
cld
cmp
sarl
jb
repnz
push
in
jp
imul
pusha
xchg
push
out
inc
add
pop
aas
cli
sarl
lret
mov
push
inc
lahf
stc
xchg
div
xor
lcall
pop
push
pop
sbb
xchg
xchg
inc
fbld
jb
push
mov
loopne
adc
dec
aam
xor
or
outsl
mov
or
mov
ja
or
rcrl
aam
xchg
pusha
icebp
dec
outsl
pop
xchg
xchg
pop
test
mov
sub
jmp
ja
push
sub
fcoml
push
lahf
scas
ja
dec
enter
ds
mov
test
in
xor
nop
test
lds
lods
popa
test
xor
pusha
fwait
or
xchg
jnp
pop
es
in
stc
or
cltd
and
ret
adc
xchg
or
int3
jns
mov
mul
je
shll
adc
popl
lds
lret
cmc
and
dec
pop
cli
xor
xchg
jns
fistpll
stos
test
lahf
cmpsl
adc
decl
fprem
out
ja
repz
pop
and
aas
jbe
add
adc
xchg
out
mov
xchg
xor
cmp
loope
pop
ret
addb
lods
std
or
add
test
and
outsb
jecxz
mov
adc
sbb
pop
cmpsb
pop
dec
into
stos
dec
mov
leave
sub
mov
push
push
rclb
bound
aaa
adc
xor
movsb
cmp
das
push
xor
push
adc
icebp
jnp
dec
xchg
ss
mov
xchg
popa
in
cmp
and
push
jmp
sub
or
and
inc
push
sub
jmp
mov
jb
mov
aad
fstl
lea
adc
imul
sbb
push
jmp
int3
hlt
mov
popf
fmuls
xor
push
xor
aam
lea
pop
sbb
les
stos
test
or
fcomip
mov
clc
scas
dec
les
aas
or
cmp
dec
adc
add
xchg
js
pusha
pop
pop
sar
push
sub
cmp
pop
pop
xor
dec
jmp
repz
and
jmp
sbb
cmp
or
mov
stos
out
push
stos
fstp
clc
mov
ljmp
ret
push
jbe
lcall
jno
adc
mov
aaa
fimuls
sub
ljmp
sbb
add
aad
sbb
bnd
push
sbb
lods
xor
mov
xorb
mov
add
imul
xchg
or
inc
xchg
repz
lods
cmp
cmp
jmp
pop
jno
push
scas
scas
mov
jle
repz
dec
insl
leave
out
repz
or
or
mov
lea
or
enter
cwtl
inc
sbbl
sbb
push
repnz
push
sub
lock
cli
or
fisttpl
jbe
sbb
jmp
cli
ss
adc
and
push
pop
cmp
mov
js
fwait
inc
sub
cltd
or
push
mov
and
mov
adc
jb
gs
out
mov
sarb
pushf
pop
js
or
jge
test
mov
add
jne
fcmovnb
mov
hlt
pop
pop
xor
xor
xlat
ds
dec
mov
xchg
adc
popf
in
dec
sub
mov
jmp
cwtl
lret
fisubs
xchg
xor
pop
mov
xchg
cmp
rolb
fsubrs
cmp
pop
or
rolb
mov
or
jp
cmp
mov
imull
inc
mov
sarl
mov
jp
outsb
mov
xchg
cmp
js
mov
push
ficomps
xchg
dec
push
mov
xchg
xchg
pand
and
sub
lods
call
adc
ss
lret
and
test
insb
enter
mov
movsb
lock
test
lahf
push
mov
dec
cmp
and
cmp
das
ret
les
into
push
fdivrs
int3
jb
dec
cmp
daa
lds
push
les
subb
xchg
xchg
lcall
pop
sbb
and
sub
lods
scas
pop
cmc
sub
out
add
cmpsb
push
mov
mov
mov
xchg
loopne
test
ja
cltd
cmp
jns
xchg
js
or
fisttpll
fstpl
imul
add
cmp
jge
xor
add
rcll
add
sbb
out
xchg
loop
in
xchg
mov
jb
pushf
aad
add
inc
repnz
in
adc
movl
sub
pop
add
add
add
aaa
cmc
or
cmpl
xor
fs
or
pop
or
cmpsl
cwtl
bound
cmp
sub
pop
lret
and
xchg
xchg
xchg
jp
xchg
and
mov
mov
xor
inc
mov
push
movl
push
test
jg
outsb
xor
pop
pop
fs
xor
adcl
test
cmc
dec
ljmp
sub
pop
scas
mov
sub
jge
fimuls
sbb
iret
lret
sub
xchg
jp
leave
mov
cmp
jmp
sub
repnz
and
cmp
mov
add
push
push
outsb
sbb
mov
sub
insl
sbb
psubusw
jno
lcall
sbb
inc
xor
mov
les
sub
dec
pop
hlt
cs
outsb
push
cmp
subl
xchg
pusha
pop
sbb
jns
imul
insb
mov
cs
push
push
and
movsb
cmp
in
icebp
mov
mov
add
icebp
mov
push
mov
aam
mov
popa
in
sbb
adc
inc
int3
imul
xchg
jno
test
cmp
fcomps
shlb
and
push
sbb
subl
mov
lock
push
cmp
fsubs
fsubl
sub
pop
dec
mov
mov
jmp
jne
sbb
aam
inc
outsb
and
jae
sub
pop
lds
loopne
out
inc
addr16
insl
jb
fisubs
shll
mov
aad
adc
into
pop
fcoml
lds
in
adcb
jae
clc
and
icebp
pop
les
push
fildl
pop
xor
add
sbb
in
js
xchg
dec
pop
jl
ja
pusha
lock
mov
sub
xor
imulb
or
lahf
mov
sbb
adc
test
mov
inc
xor
dec
jae
and
das
sbb
mov
leave
adc
mov
xchg
pop
int3
jns
dec
out
mov
gs
xor
sbb
sbb
cmp
leave
repz
xchg
pushf
in
sbb
xchg
inc
mov
xchg
andb
jbe,pn
xchg
pop
xlat
add
jecxz
mov
jle
cmpsb
fdivl
sarb
sbb
mov
cmp
jb
push
sbbb
shlb
int
jns
mov
daa
or
fs
cmp
push
xlat
test
test
addr16
lret
dec
sbb
sar
ss
in
test
faddp
xchg
sub
xchg
std
adc
cmp
push
inc
out
xor
mov
mov
nop
popa
xchg
fistpl
cmp
mov
mov
push
int3
insl
arpl
jecxz
cli
mov
add
inc
adc
pop
sbb
add
xchg
add
pop
out
popa
push
add
imul
jmp
loope
mov
inc
mov
xchg
test
aas
xor
nop
cmp
aaa
xchg
cmp
cmp
fdivl
inc
fwait
scas
sbb
add
dec
cmp
mov
stos
rcr
dec
addr16
imulb
sbbb
je
rcr
dec
rcll
pop
sahf
loopne
orb
dec
or
inc
inc
into
cmpsl
lods
xchg
adc
dec
in
loope
jnp
lret
mov
mov
xor
test
jno
jo
pop
mov
cmpsl
adc
mov
sbb
jno
scas
mov
inc
gs
inc
xor
test
jl
pop
adc
jbe
inc
rcr
pop
sbb
pop
pop
push
fildl
add
aam
scas
dec
cmp
mov
xor
push
push
sbb
or
sub
call
adc
sbb
cltd
sub
test
cltd
jl
lahf
outsl
std
push
push
sbbb
mov
ret
roll
lds
pushf
xchg
push
sbb
cs
lea
or
imul
push
xchg
pop
test
mov
cwtl
aas
lret
push
mov
jno
roll
jns
mov
lahf
mov
jp
jg
mov
xor
adc
push
mov
data16
stc
adc
test
mov
scas
ret
popf
lret
fidivrs
sahf
and
and
dec
adcl
pop
inc
mov
inc
into
pop
and
data16
js
cmc
pusha
push
xor
cld
push
hlt
sahf
fcomip
dec
sar
or
ja
mov
jae
mov
movsb
verr
ljmp
stos
psubb
xchg
dec
fwait
jnp
jmp
dec
push
daa
into
ljmp
cmp
bound
bound
xchg
add
push
or
add
enter
lret
cwtl
or
sarl
xchg
movsl
imul
bound
stc
repz
xor
stc
sahf
or
fisttpl
inc
in
outsl
popa
mov
repnz
mov
ja
movsb
imul
xchg
ret
lods
xor
jg
pop
cmc
add
insb
jg
subl
inc
pop
mov
push
sti
pop
movb
pop
pop
out
xchg
out
int
push
mov
cltd
lea
mov
adc
sbb
jl
push
das
jge
mov
or
mov
mov
test
pop
out
adc
lret
sub
sub
movb
lea
outsb
cld
add
jl
ret
mov
jg
popa
int3
push
adc
inc
fiadds
pop
orps
icebp
jg
or
and
cmp
mov
fs
add
test
mov
or
shlb
clc
rorb
and
mov
add
sbb
mov
dec
mov
jns
jmp
mov
test
push
dec
dec
test
pop
mov
sarb
xchg
lcall
aas
dec
jmp
mov
mov
popa
mov
xor
lock
std
jl
push
cld
jmp
out
or
addr16
mov
pop
insb
and
lea
jl
int3
dec
rdmsr
mov
cmp
sub
out
mov
and
pop
lret
xor
xchg
ficoml
inc
mov
test
or
adc
jl
repz
out
lret
scas
ret
inc
mov
xor
dec
je
aaa
cmovae
inc
popf
cmc
mov
xor
mov
idivb
loope
cmc
dec
jnp
lret
push
and
loope
and
insl
sbb
jecxz
mov
sub
xchg
mov
mov
pop
and
cwtl
cmp
roll
sbb
lret
inc
lods
push
mov
inc
mov
imul
outsb
push
cld
jbe
lret
pop
inc
fs
xchg
inc
imul
std
xchg
outsb
aaa
xchg
lret
and
sbb
into
xchg
imul
cwtl
mov
sbb
cwtl
lcall
jo
fidivl
fpatan
mov
adc
aaa
aad
push
add
dec
lock
sub
mov
es
dec
jne
mov
or
mov
std
xor
ja
cmp
in
fiaddl
scas
imul
ss
jmp
gs
std
xlat
push
mov
pop
addr16
inc
hlt
sarb
jecxz
mov
std
mov
jo
int3
mov
jo
je
int
pop
push
pop
je
ds
sahf
xchg
filds
push
sub
into
ret
push
add
sub
sub
lcall
std
xchg
add
inc
nop
stc
cmc
cmp
dec
andb
pxor
mov
das
mov
movl
adc
in
jbe
shrl
cwtl
adc
add
dec
jle
mov
popf
mov
mov
inc
loopne
mov
pop
cmpsb
mov
jno
push
xchg
and
out
loopne
xor
rorb
cltd
popf
mov
mov
divl
push
jmp
mov
jno
pop
push
add
add
shlb
pop
clc
adc
and
cmp
dec
lcall
sub
lock
push
inc
repnz
inc
fidivrs
push
jnp
lret
push
pop
fisttpll
push
add
sahf
jmp
fdivs
mov
mov
xchg
popa
push
xchg
fbld
cmp
out
out
out
xchg
push
sbb
test
in
cmp
hlt
addl
inc
cmp
mov
std
int
sbb
mov
sbb
adc
or
mov
jmp
adc
or
push
ja
dec
outsb
xchg
mov
cli
xchg
adc
and
aaa
cmp
and
dec
push
sub
mov
adc
pop
sub
ja
and
imul
adc
adc
adc
lds
add
mov
dec
test
dec
pop
mov
jge
jo
push
mov
xor
dec
ffree
jnp
push
cmp
rcrb
xchg
mov
ror
fs
mov
and
imul
dec
push
cmp
pop
xor
addps
sbb
mov
iret
gs
les
inc
fisubl
jl
add
mov
lds
push
cmp
shll
adc
sbb
test
lret
aaa
cmp
cs
cmpsl
sbb
sub
sahf
ds
xchg
sahf
pusha
push
sahf
inc
fistpll
jle
jle
jbe
out
and
jb
xor
sbb
xchg
cmp
and
jp
or
mov
jne,pt
lahf
push
xor
in
out
jns
xor
or
pop
iret
push
dec
or
xchg
call
inc
pop
inc
jl
mov
in
cmpsb
fisttpll
add
icebp
loope
imul
ret
test
pop
fldl
std
cmpsb
or
test
mov
fstpt
xchg
fptan
cmp
stc
outsl
add
in
xor
shlb
or
stos
fstps
or
push
repnz
jb
popf
je
sub
lods
cli
cmc
mov
mov
push
or
icebp
push
jb
mov
xor
inc
stos
adc
popf
jo
inc
pop
push
xchg
sti
shlb
push
xor
idivl
inc
cmpsl
sbb
push
insl
mov
pop
lods
mov
jns
clc
or
fdivs
jp
inc
jmp
dec
js
pop
stos
andb
repz
sbb
mov
cwtl
fs
dec
stos
test
and
roll
dec
lds
shlb
movsl
sbb
lods
jl
add
xor
jecxz
popa
fisttpl
shlb
int
hlt
adc
lahf
daa
mov
cmp
sahf
push
sbb
cld
xor
movzwl
bound
mov
das
xchg
add
stos
sbb
push
lret
insb
mov
xchg
cmp
adc
jmp
loop
fidivrs
mov
lods
stos
mov
pop
sub
or
divl
adc
push
mov
add
lea
mov
inc
rcrb
std
inc
pop
mov
mov
mov
jne
pop
lods
jp
mov
shlb
rorb
imul
mov
add
orb
test
mov
inc
pushf
and
or
inc
mov
mov
jnp
xor
inc
inc
orb
test
ret
mov
add
xor
xor
and
mov
imul
dec
inc
jnp
out
fldl
add
mov
sbb
aaa
add
pusha
outsl
inc
call
sub
rcll
pop
out
adc
cmp
fsubr
je
aad
test
outsl
sub
popa
out
out
mov
jle
mov
cmpl
or
and
repnz
rol
mov
dec
and
icebp
leave
ds
inc
adc
leave
cmp
aaa
add
cmpsb
dec
push
pop
outsl
into
je
in
xor
mov
add
imul
sbb
fistpll
mov
mov
mov
or
add
test
push
mov
pop
mov
mov
es
sub
jo
mov
lods
xlat
cmp
incl
mov
mov
lcall
add
pop
mov
lea
push
push
mov
xchg
fsubr
xchg
ftst
cmpb
jns
push
or
dec
sti
dec
xchg
jecxz
and
cmp
rep
mov
rorb
pushf
out
cmp
xlat
cmc
stc
ja
xchg
pop
or
jp
push
enter
les
mov
lea
add
in
push
ret
test
push
add
mov
movsl
fnstenv
or
lock
xlat
dec
xchg
sbb
push
xchg
add
fs
xchg
xabort
or
daa
addr16
mov
xchg
int
xchg
mov
loopne
xor
sbb
jle
xchg
imul
push
inc
rcr
shll
add
mov
dec
imul
ljmp
fwait
cmp
sub
dec
cmp
sti
push
pop
movl
les
cltd
imul
adc
inc
mov
lds
ljmp
push
mov
shl
pop
pusha
out
or
out
jns
sbb
lea
cmp
pop
or
mov
jb
sbb
out
mov
lds
aaa
aas
jo
mov
adc
cs
movsb
mov
cs
sub
xor
cmpl
aam
scas
push
std
adc
mov
add
cmp
mov
in
push
inc
dec
dec
cld
mov
in
dec
cltd
and
dec
mov
push
xchg
out
and
nop
dec
add
insb
jne
inc
iret
pop
leave
dec
jbe
sub
pushf
daa
clc
mov
sahf
mov
and
imul
scas
xor
sahf
inc
xlat
mov
aam
and
bound
pusha
mov
add
fistpll
dec
mov
repnz
gs
imul
in
dec
mov
xchg
dec
xor
mov
sti
xchg
orl
frstor
dec
int3
insb
push
insl
rcrb
lods
mov
lea
push
pop
sub
add
or
aam
arpl
inc
mov
int
loopne
pop
xlat
les
popf
inc
test
pusha
lret
aam
fwait
mov
xor
sub
mov
insl
lock
mov
lock
stos
or
inc
cmc
jne
jl
or
and
xchg
lea
sbb
into
mov
movsl
js
loope
mov
pop
cmp
dec
and
push
mov
cmpsl
fidivl
and
lods
in
inc
pop
subl
mov
mov
ret
push
jnp
mov
fcoms
sbb
hlt
popf
out
xchg
imul
adc
inc
xor
dec
cmp
or
test
shll
jle
aam
inc
lods
add
xchg
ret
and
jp
jecxz
mov
mov
sub
sub
in
les
cmp
daa
jns
xlat
scas
mov
lods
mov
mov
mov
and
and
stc
inc
sahf
xorb
repnz
pushl
cmp
lock
out
xor
jbe
sbb
stc
bound
mov
jmp
add
sub
xor
cmp
push
dec
adc
addb
push
out
ljmp
outsl
sub
in
in
mov
inc
rorb
inc
das
arpl
out
icebp
fbstp
jecxz
mov
andb
inc
cmp
out
lea
add
rorb
imulb
jle
mov
shr
cmp
and
popa
fidivrs
xchg
pop
xor
push
xor
pop
test
loopne
gs
add
ljmp
js
test
or
inc
leave
mov
mov
xchg
leave
dec
rcr
jbe
adcl
xor
add
aaa
mov
lds
pushf
mov
mov
aad
mov
sub
test
in
cmp
rcrl
xchg
cwtl
mov
dec
and
cs
mov
test
lret
jnp
into
or
das
loop
inc
inc
mov
ret
add
mov
cmp
shrb
jae
ja
cld
stc
shlb
inc
cmpsb
xchg
arpl
jnp
inc
fisttpl
cmp
xchg
negl
pop
jl
aaa
popf
push
mov
adc
sti
push
jmp
lret
adc
mov
fimull
les
insl
mov
cmp
and
mov
stos
ja
rcr
or
sub
les
xor
shll
push
push
je
mov
fistpl
xor
hlt
in
xchg
arpl
cmp
mov
shlb
jo
mov
mov
or
lods
jmp
xor
inc
mov
add
add
mov
dec
in
sbb
xor
test
mov
jl
cmp
lahf
sbb
fstpt
cmp
xor
sbb
sub
mov
mov
mov
mov
lcall
jb
jno
push
and
sti
iret
lock
add
cmp
mov
js
add
mov
mov
xchg
stc
xor
lret
and
mov
mov
outsl
jno
out
or
adcl
xchg
fidivrl
sbb
lods
pop
mov
sub
mov
insb
mov
push
lock
addr16
or
add
jnp
mov
std
and
and
aam
in
imul
sbb
iret
outsl
out
outsb
xor
and
enter
insb
push
aad
mov
dec
adc
lock
jecxz
inc
lret
xor
out
jne
mov
ja
add
add
dec
cmp
jns
js
out
mov
mov
call
jg
sub
xor
mov
repnz
out
sbb
mov
xchg
mov
bound
aaa
xor
and
test
adc
push
iret
sbb
lret
mov
std
std
or
cmpsb
lea
push
inc
pop
ja
lgs
fcomps
mov
mov
enter
enter
mov
push
mov
out
push
cmpsl
push
or
out
ljmp
mov
jg
add
rcrl
aad
push
fcmovnbe
lret
pop
sub
dec
bound
xchg
js
cmp
mov
loopne
lds
xchg
sub
push
loope
cs
lret
aam
cwtl
pop
mov
call
dec
mov
fs
add
mov
cmp
fcomp
sub
sub
sarl
push
sub
fsubrp
and
mov
adc
push
stos
imul
rclb
push
es
push
pop
dec
js
inc
jns
lods
sub
imul
clc
jnp
mov
and
pop
inc
scas
jno
aas
and
and
outsb
push
insl
aam
mov
dec
sarl
pop
dec
cmp
aas
cmp
scas
ja
xor
or
lret
pop
xchg
mov
push
incw
xor
fcomps
sbb
fisubs
xor
mov
xchg
enter
push
das
xchg
mov
es
lret
or
add
mov
cmpl
add
push
add
jnp
lods
rcl
aad
adc
and
mov
dec
repnz
aas
ja
dec
loope
jo
ljmp
inc
testl
fidivrs
fisubrl
sti
push
es
xchg
push
xchg
add
stos
jmp
mov
negb
or
insb
add
daa
outsb
xor
ret
call
xchg
ja
or
sbb
and
inc
popf
inc
and
jno
xor
pop
mov
dec
push
push
mov
insb
aad
das
jmp
adc
xlat
dec
rcll
rol
cmpsb
cmp
and
inc
cmp
das
xchg
sub
and
or
xchg
lock
sbb
test
mov
jo
outsl
mov
div
bnd
add
sbb
popf
sub
dec
cmpsb
in
jp
sbb
xor
and
dec
mov
add
mov
jecxz
push
pop
movsb
repnz
popa
mov
cmp
das
xor
test
jmp
dec
in
cli
sbb
decl
push
add
je
in
mov
ja
cmp
loop
or
je
mov
icebp
mov
lods
addr16
jnp
gs
mov
jg
fs
xor
sub
iret
push
aam
rcrb
insb
pop
dec
xchg
xor
push
cmp
pop
push
bnd
test
jge
nop
mov
addr16
xchg
incl
mov
shll
xchg
lahf
mov
push
mov
clc
dec
inc
dec
pop
dec
add
hlt
orl
adcl
call
push
lahf
jnp
cli
cmp
inc
inc
inc
sarl
fmull
loop
push
jecxz
and
fs
xor
fs
push
stos
dec
dec
in
imul
or
sub
shl
call
sbb
jmp
sbb
sbb
xchg
mov
jbe
movsl
filds
shlb
push
pop
mov
inc
mov
jl
adc
ljmp
mov
mov
mov
lock
mov
rcll
and
not
cmp
cmp
stc
imul
ret
jo
clc
mov
sbb
sub
dec
mov
sbb
add
mov
cmp
jb
sub
push
js
mov
or
in
fwait
mov
out
fidivl
xor
cmp
push
lds
cmp
loop
inc
loope
xchg
les
lods
inc
push
aad
aad
cli
add
fsubrl
push
popf
sub
mov
test
rclb
pop
call
incb
lds
mov
inc
je
arpl
es
call
add
es
sti
mull
mov
cwtl
mov
jmp
dec
pop
pusha
testb
fisubrl
pop
pop
push
ds
sbb
test
and
pop
imul
aaa
aas
insl
cmp
inc
cmovne
push
mov
scas
dec
mov
cs
push
xor
repz
and
sub
sahf
loope
mov
aam
adc
stc
lahf
loop
nop
outsl
mov
or
jb
clc
mov
push
movsl
mov
icebp
out
leave
arpl
loopne
mov
dec
orb
sbb
in
je
mov
dec
push
push
jg
insb
cmpsb
int3
js
inc
test
jnp
pop
arpl
ja
adc
mov
inc
notl
push
cmpsl
repnz
imul
mov
les
xor
into
or
lret
or
and
in
daa
sub
xlat
sub
testl
daa
bound
insb
xor
ss
lret
push
scas
push
xchg
and
dec
repz
mov
lods
xchg
in
add
outsb
push
mov
mov
lahf
xchg
les
ret
ss
inc
xchg
das
sub
mov
pop
jl
jne
or
sub
dec
sahf
repnz
pop
daa
imul
push
push
pop
pop
inc
out
std
or
loope
pop
dec
jge
xor
mov
xchg
xor
inc
addr16
inc
sarl
dec
jle
mov
push
in
rorb
and
repnz
shrl
enter
mov
pop
inc
xchg
jmp
fisttpll
or
push
mov
mov
scas
imul
in
mov
out
mov
pop
iret
push
sbb
repz
movsl
in
push
cmpsb
add
inc
fisttpll
subl
enter
cmpsb
cmp
cmp
pop
int3
sarl
popl
adc
fucom
jl
loop
sub
jne
jl
int
sbb
jnp
std
enter
cli
cli
fisttpll
push
sbb
pop
je
sub
or
testb
clc
je
cli
push
add
aad
out
jno
push
cs
in
inc
sbb
cmpsl
in
pop
xorb
ja
or
test
sbb
sub
jp
push
jbe
inc
pusha
into
out
dec
pop
fstps
and
invd
jg
xor
xorb
lret
insb
outsl
stos
fiaddl
inc
jae
mov
lds
add
mov
xlat
xchg
jne
orl
mov
or
jbe
push
fistpll
jp
test
dec
push
adc
cmp
pusha
dec
sbb
das
cld
push
push
and
clc
movsl
jbe
inc
dec
xor
divl
push
push
cmp
xchg
sub
int
xchg
loopne
jp
int
pushl
sub
sbb
test
mov
gs
gs
fiaddl
add
adc
mov
and
mov
outsl
jns
sar
add
push
outsb
enter
mov
jo
cli
mov
jmp
pop
imul
lods
xlat
adc
daa
push
lahf
das
sbb
sbb
jl
aad
dec
add
xchg
jge
dec
daa
xchg
xor
dec
in
leave
push
xor
sti
cmp
daa
adc
and
xchg
js
inc
lret
out
jl
pop
mov
mov
or
jle
roll
sbb
mov
cltd
repnz
pop
in
sbb
in
push
mov
mov
mov
nop
out
scas
push
out
pop
fcmovbe
mov
js
fcomps
or
jb
dec
jmp
pop
daa
xor
in
mov
or
repz
cltd
cmp
push
fmul
pop
test
xor
dec
sti
mov
xchg
xadd
gs
int
cmc
imul
icebp
daa
cmp
cmp
repz
adc
out
pop
sti
add
popa
cmp
cmp
shll
loopne
cs
ror
outsb
jo
mov
addr16
shlb
sub
daa
aad
sarb
add
shll
scas
sub
inc
inc
adc
xlat
icebp
ds
push
adc
inc
fadds
mov
clc
inc
lods
push
adc
pop
movsl
les
cwtl
jmp
pop
int
add
cmp
addr16
mov
fdivrs
enter
mov
cmp
inc
fcomps
scas
adc
outsb
les
and
std
mov
mov
int3
insl
mov
add
idiv
jmp
xor
in
call
ljmp
xor
ret
and
inc
xchg
mov
lods
cmp
mov
fisubl
and
sbb
adc
mov
popf
push
mov
fisubl
js
cltd
arpl
or
aad
test
lea
out
add
push
sbb
or
in
int
mov
adc
pusha
sub
cltd
xor
shr
stc
daa
cld
push
stos
push
hlt
shll
dec
data16
mov
sub
add
or
pop
fcmovnu
fwait
mov
lods
lret
pop
aaa
cli
fsubrs
ret
scas
mov
setne
ret
adc
int3
xchg
push
xchg
pop
sub
mov
js,pt
dec
jne
int
xchg
xchg
aam
jle
shr
leave
lods
mov
repnz
dec
dec
pop
push
and
cmp
jle
sbb
push
jecxz
add
sbb
pop
push
loope
aas
outsb
outsl
frstor
sub
aas
jge
movb
insb
xchg
mov
nop
push
push
adc
arpl
cmc
mov
sbb
mov
xchg
scas
pusha
int3
xchg
mov
or
add
jns
iret
xor
insl
icebp
data16
popa
xor
push
rcl
sub
jne
mov
xor
pop
enter
pop
mov
imul
fmull
mov
xor
or
jne
out
and
in
cli
stos
sbb
mov
shrl
decl
daa
cmc
pop
rorb
inc
cmpsl
pop
or
jns
mov
sarb
cmp
cmp
dec
int
cmp
push
sub
ja
mov
std
jnp
mov
lret
insb
push
jo
addr16
xor
mov
aad
lea
repz
movsb
call
leave
out
xchg
lods
xlat
mov
fwait
xchg
sub
mov
add
inc
cmp
jmp
inc
add
jge
adc
mov
and
push
pusha
push
shll
cmp
call
call
push
mov
shl
cmpb
int
add
icebp
pop
repz
mov
das
or
sub
ja
outsl
push
dec
xchg
incb
shll
stc
out
pop
inc
and
inc
lahf
fistl
push
sbb
xor
jg
and
push
test
in
stos
add
lds
or
in
mov
test
cmpsl
outsl
sub
jnp
test
pop
mov
jne
inc
xchg
mov
stos
inc
pop
fstpl
pop
imul
loope
mov
ljmp
stc
cld
js
sbb
xor
adcl
jmp
and
ror
sub
leave
adc
xor
mov
mov
mov
fcoml
scas
mov
not
cmp
jne
mov
fwait
stos
in
out
xlat
scas
cmp
bound
push
ret
mov
or
dec
mov
cmpsl
int3
pop
xor
jnp
notl
or
mov
jno
pop
call
cmp
stos
adc
popa
or
sub
gs
fcmovbe
inc
cmp
sub
xor
jp
mov
xchg
es
mov
and
inc
xor
shlb
rcrl
fists
loope
iret
push
negb
push
addr16
adc
sti
js
and
jmp
xor
stc
mov
mov
add
insb
cmp
push
dec
dec
mov
dec
int3
jp
mulb
jo
xchg
inc
mov
sub
imul
xchg
clc
xor
xor
test
xchg
inc
mov
push
rol
imul
arpl
sub
mov
bound
jmp
inc
jmp
jns
add
xchg
insb
mov
jecxz
mov
push
rol
rorb
ja
pop
sahf
call
movsb
dec
aad
rcl
mov
movsb
sahf
dec
mov
push
sbb
enter
push
dec
sbb
dec
loopne
push
and
inc
clc
and
ds
stos
movsb
add
sbb
lret
ljmp
popf
xchg
scas
mov
mov
je
lcall
aaa
xchg
xchg
lret
mov
inc
fildll
pop
out
dec
lret
out
and
shll
or
das
sbb
and
mov
or
xchg
ljmp
lods
ds
jmp
arpl
ja
mov
fs
inc
xchg
test
out
mov
jbe
dec
push
inc
lcall
mov
and
mov
xor
les
mov
xor
and
ret
repnz
dec
inc
sub
ret
icebp
lds
lods
test
xor
or
mov
es
addr16
lds
pop
push
rclb
push
shlb
mov
push
mov
cltd
hlt
loop
cwtl
pop
mov
aad
sub
mov
dec
xorl
ja
dec
cmpsl
test
ficompl
inc
mov
fst
and
imul
xchg
cmp
and
pop
push
xchg
cmp
das
sub
mov
fiadds
dec
lods
into
cmp
pop
test
add
xor
jb
inc
mov
pop
or
ds
addr16
jmp
push
mulb
mov
xchg
xchg
dec
xchg
fdivp
ret
lret
out
pop
sbb
cmpsl
sbb
add
and
xor
insl
test
jmp
xor
addl
lods
cld
xchg
sub
fidivrl
mov
dec
add
inc
sbb
pop
insl
div
mov
mov
xor
push
repz
js
test
sub
hlt
dec
push
cmp
xchg
sbb
lods
shr
mov
cmp
jbe
pushf
test
xlat
jmp
sbb
hlt
shr
das
or
sbb
imul
dec
dec
call
aam
dec
in
cmpsb
push
sub
movsl
stos
inc
andb
push
hlt
int
sbb
daa
mov
push
mov
int3
les
add
nop
stc
imul
adc
negl
sahf
add
fistl
inc
popf
cltd
mov
mov
xor
in
inc
jl
movaps
outsl
mov
lods
pop
lret
pop
jne
dec
sti
sbb
scas
sbb
pop
mov
dec
out
mov
jae
push
iret
in
cmp
icebp
lock
clc
cmc
jecxz
test
mov
cmc
and
out
push
mov
push
frstor
stc
fldcw
arpl
jae
fwait
insb
add
cmp
jle
and
fbld
cmpsl
shr
dec
aaa
push
push
popa
cltd
out
sub
xlat
jno
xor
mov
dec
das
add
into
mov
pushf
mov
and
push
add
cmc
pop
mov
jb
mov
pop
sub
lds
jnp
out
mov
add
mov
pop
dec
cmp
cmp
mov
push
push
mov
aad
jbe
in
cmp
cmpsb
jbe
enter
inc
pop
out
jp
sbb
or
pop
icebp
mov
jo
imulb
lock
inc
mov
add
mov
int3
xor
cmp
xchg
or
and
int3
xchg
addr16
das
push
inc
data16
popa
push
and
xchg
test
sub
fmul
popf
jbe
test
aad
or
jb
add
or
mov
xchg
pop
mov
popf
cs
jle
adc
cltd
popf
adc
pop
push
mov
fisttpll
lahf
add
les
push
sahf
cmp
popf
mov
fs
in
mov
mov
outsb
jmp
dec
add
jb
in
adc
adc
mov
aad
flds
andl
jmp
cld
mov
inc
add
xchg
xor
das
dec
xor
mov
sub
mov
iret
xor
sub
cwtl
int
iret
incl
sbbb
and
ret
psubw
mov
mov
or
push
sub
aad
lock
jmp
js
jp
push
andl
adc
imul
repnz
pushf
xor
mov
rorb
cs
out
sub
adc
push
sbb
dec
sbbl
mov
or
sbb
cmp
je
and
lock
outsl
dec
push
adc
push
sub
mov
sbb
lcall
and
jno
adc
sub
pop
adc
sbb
subl
cmp
sti
movsb
sbb
mov
adc
inc
sbb
loop
jno
cmp
xchg
les
fsubrs
adc
xor
fs
push
fcoms
pop
jns
push
xchg
iret
ljmp
addr16
sub
out
pop
push
jno
lcall
xchg
mov
add
dec
movb
cli
hlt
xor
jl
fwait
jl
inc
adc
inc
sbb
jno
test
jnp
lods
pop
scas
add
sub
and
and
or
repz
mov
sub
mov
popf
inc
popf
adc
dec
sub
insl
and
fstps
cmpsb
xchg
sbb
jecxz
and
mov
lret
and
loope
stc
sbb
leave
mov
xchg
pop
add
int3
cmp
pop
mov
adcb
jb
mov
cwtl
xor
jmp
add
mov
dec
dec
cmp
mov
in
adc
ds
mov
rolb
mov
pusha
sti
mov
push
imul
in
leave
ffreep
and
inc
lret
cwtl
sbb
js
cmp
adc
sub
js
in
sarb
sbb
inc
xor
enter
push
hlt
pushf
adc
and
mov
cmp
pop
movsb
aam
xor
ss
mov
and
ja
adc
add
sub
out
lahf
fisttpl
sarb
lahf
andl
mov
mov
mov
mov
adc
outsl
cmp
popf
sbb
out
dec
fisttps
shr
outsb
push
xor
fstpt
ret
push
repnz
or
adc
mov
adcb
pop
out
cld
cmpsb
lret
test
xchg
sub
cld
jo
stos
out
out
xchg
mov
push
mov
test
fimull
cld
js
xor
inc
xorl
or
sbb
cmp
lods
mov
shl
cmp
mov
sbb
pusha
xor
xor
pop
arpl
loop
test
lret
imul
cmp
into
gs
xchg
adc
ss
mov
pop
adc
clc
fmuls
fnstsw
fistl
push
pop
sub
fmull
and
stos
dec
dec
out
inc
scas
sub
inc
or
mov
adc
ja
xor
inc
or
or
sahf
push
imul
sbb
xchg
lock
icebp
iret
inc
jno
push
sub
jge
dec
ljmp
mov
mov
ljmp
scas
and
cmp
push
pop
jl
test
add
sbb
cmp
dec
mov
dec
and
ljmp
stos
outsb
bound
push
dec
aad
sub
push
mov
add
jnp
inc
mov
xchg
popl
push
aad
xchg
std
or
cwtl
push
vpunpcklwd
pushf
pushf
xchg
je
push
lret
lret
xor
sahf
mov
pop
orb
jg
enter
enter
out
adc
mov
aaa
js
inc
sub
mov
pop
xor
sbb
cmpsl
sbb
pop
lock
les
pop
or
aad
psllq
sbbl
ja
loope
mov
dec
add
xor
js
into
jge
hlt
jae
into
icebp
adc
xor
ss
xor
mov
cmp
and
call
dec
test
cmp
jbe
aaa
jo
cmpsb
dec
adc
pop
mov
in
cmpsl
adc
arpl
or
aad
imul
fidivrl
jg
dec
pop
addl
pop
imul
mov
outsl
cwtl
jnp
fcmovbe
inc
pop
leave
je
popf
jnp
push
loop
cmp
push
jns
pop
push
test
jno
jb
ds
js
test
test
dec
cmp
mov
add
pop
out
aad
test
dec
jmp
dec
inc
popa
push
jne
xorl
sub
cltd
or
ljmp
sbb
xchg
mov
dec
push
add
lcall
dec
outsl
fidivs
jae
test
in
repnz
dec
push
decl
mov
cmp
sahf
mov
sahf
add
stos
inc
mov
sub
jle
imul
sbb
fwait
imul
les
call
push
or
jb
idivb
int
pop
inc
cmp
std
add
push
jne
xor
in
or
inc
les
jp
movsl
jno
push
nop
leave
and
mov
leave
es
gs
rolb
les
stos
call
ficoml
loopnew
insw
mov
jp
or
mov
xchg
mov
mov
xchg
add
in
sbb
repz
gs
pop
adc
movsb
fildll
hlt
rorb
add
aaa
mov
ret
sub
jle
jne
lret
jp
sahf
andb
jge
push
adc
les
push
pusha
insb
aaa
aad
test
and
gs
in
adc
mov
aad
rcll
aad
ds
movsb
mov
test
nop
arpl
push
add
lods
movsb
mov
scas
add
or
popa
pop
inc
mov
and
cmc
stc
jg
mov
ret
and
pop
aaa
push
mov
mov
adc
mov
lock
mov
push
add
ret
fldcw
xor
loope
dec
idivl
aas
inc
jne
fcom
call
enter
loop
addr16
mov
sbb
sub
or
cmpsb
and
cmp
adc
hlt
xor
add
ljmp
push
mov
mov
sbb
sbb
or
es
cmp
test
scas
dec
push
cmc
loop
push
mov
fs
push
jae
das
jbe
dec
pop
cli
fcompl
inc
lahf
rcrl
inc
xor
sub
fbld
adc
dec
xor
mov
and
sbb
mov
or
mov
ja
enter
sub
push
or
cmp
xchg
ljmp
mov
sti
addr16
inc
pushf
sti
cmc
mov
xorb
add
arpl
cmp
jmp
sarb
lret
sub
es
mov
sub
push
inc
daa
clc
loop
jb
adc
dec
jl
call
xchg
ljmp
jecxz
test
rcrb
lds
mul
or
push
adc
sti
test
sub
mov
mov
test
inc
popa
lahf
push
jb
stos
push
xchg
pushw
cmp
repz
xor
mov
or
pop
push
int3
ds
mov
xchg
cmp
push
xor
mov
lea
sbb
jl
xchg
lds
or
hlt
pop
xor
addr16
je
dec
int
mov
int3
xor
dec
jo
shll
fiadds
jg
pusha
out
cmpsb
mov
xor
add
clc
or
loope
push
sbb
adc
nop
sbb
movnti
pop
pusha
pop
ds
bound
add
add
sahf
sahf
pushl
mov
mov
cmpsb
pop
test
dec
aaa
jp
mov
xor
ret
pop
mov
xchg
aad
push
scas
nop
loop
in
mov
std
pop
setb
daa
out
mov
mov
jmp
push
fdivr
popf
cmp
mov
movsb
test
and
jecxz
add
pop
xchg
cmp
sarl
jb
jnp
xorb
pop
pop
ret
mov
ja
lods
xchg
stos
lods
inc
ljmp
sub
cmp
aas
fwait
out
push
or
cmp
test
xchg
adc
lods
or
pushf
imul
and
push
nop
std
icebp
lea
pop
xchg
pusha
and
scas
and
inc
sbbl
sbb
sub
cmp
stos
pop
mov
add
xchg
enter
push
stos
mov
pop
sbb
fld
jmp
rol
push
je
andb
or
andl
pushf
sbb
and
mov
lock
mov
insl
and
adc
or
es
ror
and
js
in
mov
xlat
pop
nop
mov
ret
insl
imul
clc
ds
fistpl
outsb
mov
jbe
inc
and
pop
mov
in
test
ss
cmp
jbe
mov
jo
mov
xchg
sbb
cmp
inc
cmp
int
push
call
stc
insb
jg
or
push
xor
adc
jg
cmpsl
cmp
push
adcb
cmp
out
clc
je
jecxz
mov
dec
sub
out
aas
inc
pop
push
lods
in
in
fldenv
xor
aam
sti
cmpsl
pop
mov
jg
xchg
mov
jge
daa
push
inc
mov
icebp
and
mov
mov
test
xchg
call
loope
ljmp
outsb
roll
fidivrl
hlt
pop
jno
enter
mov
loop
pop
loopne
shl
sub
pop
mov
inc
or
insl
aad
dec
sbb
notl
xor
in
push
stos
repnz
pop
inc
adcl
mov
cmpsl
adc
leave
mov
sbb
pop
pop
adcb
pop
dec
stos
call
push
jmp
rcll
pop
sub
dec
cmp
add
xor
pop
pop
mov
lret
cld
xchg
push
mov
push
bound
mov
cmp
ret
cmc
icebp
pop
push
loop
ds
addl
cld
popf
xor
nop
mov
mov
test
cmp
shl
push
fwait
lods
aam
adc
loop
ret
fucomip
js
lret
movsb
scas
push
xchg
ret
xchg
ja
xchg
or
sbb
push
mov
dec
pushf
call
dec
xchg
dec
popa
imul
addl
adc
jns
sbb
nop
arpl
pop
ds
adc
into
adc
push
or
scas
sbb
into
adc
mov
mov
adc
ja
fst
jecxz
push
fmuls
add
cmp
mov
cmp
or
xchg
or
cmp
jl
and
clc
xor
jnp
hlt
repz
push
fwait
nop
std
xor
call
outsl
fcomi
cmovle
mov
dec
push
stos
in
dec
popa
jl
push
outsb
outsb
ficompl
cwtl
xlat
gs
dec
js
je,pt
popa
call
arpl
cmp
loopne
cmp
cwtl
jl
sarl
test
call
mov
and
pop
push
and
or
adc
add
mov
mov
and
ret
xchg
ret
test
daa
mov
fs
loope
aad
pop
xchg
lret
pop
jmp
dec
or
mov
mov
ss
jb
jno
pop
push
shr
sti
sub
aas
dec
jb
out
pop
xor
mov
aam
inc
dec
je
jl
xchg
je
jne
inc
jae
push
mov
call
outsb
jecxz
cld
xchg
test
mov
out
repz
jge
hlt
fisubrl
mov
push
fs
add
mov
push
push
mov
ljmp
pop
aaa
ret
jae
cltd
xorl
sahf
push
iret
or
in
ds
adcb
pop
test
iret
dec
movsl
ds
lds
xor
mov
add
inc
pop
mov
sub
sbb
jne
mov
jb
inc
mov
and
or
enter
dec
stc
fimull
int
pop
add
popa
mov
movsl
add
push
cmp
out
mov
xor
cmp
shlb
push
repz
fists
mov
outsl
aam
cmp
lcall
out
adc
xlat
loopne
push
pop
enter
fistl
cmpsb
mov
lods
nop
mov
std
add
mov
push
lods
push
mov
popa
cmp
dec
sahf
pop
rolb
jmp
insl
shrb
jne
jns
pop
add
repz
push
sub
or
out
add
sbb
or
pop
mov
int
sub
jge
pusha
test
ljmp
jmp
jnp
or
stos
cmp
jmp
lds
dec
xor
ds
imul
rcrb
das
push
loope
pop
das
mov
pusha
jb
cmpsb
aad
stc
ljmp
lds
pop
cwtl
jno
sub
add
rcrb
rorl
sbb
sub
jge
rcl
dec
nop
push
loope
lret
push
in
out
mov
jne
data16
mov
ret
mov
xor
cld
dec
push
das
sbb
test
xor
cltd
xchg
sti
imul
push
dec
imul
cmp
jo
inc
xor
jnp
sbb
sbb
out
rcll
test
mov
jl
jno
ss
rorb
adc
lea
popf
stc
popf
xchg
push
mov
rorb
dec
push
fisubrs
jnp,pt
packsswb
or
pop
pop
dec
in
sbb
popa
cs
sub
fs
xchg
lods
movsl
aam
xchg
cmp
out
xchg
dec
cs
ds
xor
lock
xor
pop
fisttps
pop
mov
or
mov
push
mov
sub
cmpsl
xor
ja
sub
outsb
frstor
test
sub
xchg
bnd
in
rcrb
and
lods
mov
in
icebp
int
push
xchg
mov
notb
lods
rcrb
test
adc
nop
pushf
dec
loop
push
sbb
stc
mov
fnstcw
sahf
nop
cmpsb
loopne
inc
push
mov
sbb
out
jge
lock
call
fnstcw
xchg
mov
pop
xchg
in
mov
xchg
jle
pop
mov
xor
hlt
lret
rorb
sub
fildl
sub
shl
cli
mov
mov
sahf
inc
adc
pop
cltd
pop
jg
stos
insb
or
xchg
daa
or
adc
dec
push
lock
pushf
or
out
cltd
pushf
bound
cmp
fistps
outsb
loopne
dec
dec
cmp
in
push
test
xchg
mov
inc
jge
pop
aad
ret
pop
xlat
pop
lret
cmp
jnp
inc
aas
mov
data16
ds
ds
xchg
or
dec
xchg
pusha
inc
aas
dec
sbb
xor
xor
push
and
fmuls
push
lods
push
popa
jno
cmp
pop
adc
icebp
movsl
aam
xor
jp
icebp
cltd
fstps
push
inc
enter
cmp
lds
pop
pusha
inc
sbb
sub
ret
pop
mov
fdivl
fs
inc
stos
sbb
xchg
jl
ja
clc
movsb
test
cmpsb
fnstcw
adc
aam
inc
out
ja
pop
fcompl
clc
push
dec
or
repz
pop
cmp
push
fmul
js
mov
xor
add
push
xor
xchg
ljmp
inc
inc
cld
inc
push
inc
mov
add
mov
scas
and
pusha
ror
push
insl
loop
fsubp
leave
jmp
popa
faddp
xchg
sbb
aad
sbb
cmp
out
push
and
lret
adc
dec
xchg
dec
inc
pop
cld
les
inc
xchg
xor
push
sub
gs
jecxz
loopne
iret
cmp
push
std
mov
xor
pop
and
popl
add
mov
push
loop
dec
mov
cwtl
fisttpll
rolb
loop
or
rcrl
xor
repz
into
fwait
or
mov
jo
fs
fwait
add
cmp
bound
jne
sub
dec
out
sub
xor
inc
pushf
xor
lcall
inc
adc
and
sub
xor
pop
sub
cltd
mov
jne
xchg
lods
sahf
pop
mov
mov
or
adc
outsb
jbe
xlat
mov
stos
ret
push
sub
fisubrs
mov
fidivrs
fidivl
and
loop
int3
dec
movl
fidivrs
into
and
xor
sbb
rcrb
add
hlt
das
xor
enter
add
mov
out
imul
ret
mov
or
push
fcomip
sbb
fisttps
jne
push
pop
and
movsb
mov
test
fldl
test
mov
or
xchg
adc
inc
imul
test
fsubrl
in
lret
jle
call
repz
xor
into
jmp
sub
fbld
es
mov
pop
push
aaa
mov
jl
push
inc
inc
pop
dec
and
dec
dec
cwtl
xor
mov
lea
add
ljmp
psrlq
jp
mov
cld
xor
ret
pop
outsb
sbb
xor
mov
mov
popa
cmpsl
andl
pop
pop
jbe
fcmovbe
mov
in
ret
idivl
adc
fsts
sub
je
sbb
insl
or
pop
mov
in
push
push
sub
imul
fnsave
js
fnstenv
pop
clc
push
xchg
adc
and
mov
cmp
aam
das
rcrl
movsl
fstpt
xchg
dec
icebp
movsb
shlb
js
dec
sub
in
or
loope
ror
sbb
mov
adc
cmp
and
ja
aad
aas
inc
mov
sbb
lcall
sbb
dec
jle
inc
hlt
ljmp
inc
divl
incb
xchg
cmpsl
jecxz
fildl
and
gs
cld
dec
stos
jne
lock
xlat
and
or
insl
pop
test
movb
xlat
mov
call
mov
push
adc
movsb
xchg
scas
out
push
iret
cmc
add
jo
inc
push
mov
fidivrs
loope
outsb
mov
jle
inc
dec
ret
mov
lret
push
inc
je
fldt
scas
arpl
inc
scas
mov
test
mov
xchg
test
or
cwtl
xchg
pop
out
inc
xchg
inc
cld
mov
fistpl
cmp
in
je
push
mov
insb
mov
and
cmp
scas
jnp
mov
dec
pushf
aaa
xor
or
inc
pop
mov
int3
and
bound
inc
dec
call
mov
pop
sbbl
cld
scas
mov
jno
inc
les
jbe
dec
pop
inc
inc
mov
xor
pop
test
mov
pop
jns
pop
sti
adcl
orl
push
sub
xchg
add
push
sahf
inc
or
aam
fcompl
adc
lahf
loopne
pop
cmp
out
hlt
adc
mov
movsb
stos
sarb
fwait
adc
lds
mov
sub
mov
push
mov
jecxz
repz
ret
sbb
popf
in
movsb
or
shll
add
pushf
mov
lcall
sub
repnz
sbb
ja
pop
leave
jecxz
test
gs
aam
sub
imul
scas
mov
popf
cli
dec
sbb
adc
aas
mov
mov
push
in
mov
mov
pop
jecxz
mov
jecxz
jo
jnp
ficomps
test
je
sti
test
es
or
out
sbb
inc
test
insb
repnz
fildl
adc
loope
push
int3
lret
jae
mov
push
pop
pop
sarb
sbb
inc
into
movsl
and
mov
outsl
dec
jae
push
lock
popa
jne
repnz
fldenv
test
xchg
cltd
add
cmpsl
xchg
mov
pop
dec
and
cmp
sbb
add
sbb
pusha
xchg
mov
lods
dec
pusha
leave
ljmp
cmpsl
mov
push
sub
push
push
pop
ret
int
test
xor
lret
xchg
push
outsl
xchg
pop
insb
fs
push
les
rorl
mov
int3
adc
mov
jmp
jge
movsl
pop
pop
mov
add
cmp
mov
push
pop
std
jp
jo
lds
xlat
push
mov
dec
push
cmp
js
test
or
pop
stc
adc
loop
call
sbb
and
add
sbb
jl
imul
les
cmp
pcmpeqd
es
mov
sub
stos
addb
mov
mov
adc
push
or
shlb
mov
mov
out
xor
sbb
scas
push
mov
push
add
imul
add
stos
jns
pop
pop
pop
add
push
cltd
dec
inc
cmp
inc
mov
and
aaa
sub
add
push
adcb
inc
arpl
bswap
pop
adc
push
lods
mov
ret
sub
and
enter
sub
test
dec
pusha
jecxz
popa
xchg
sahf
jb
adc
ljmp
or
andb
jno
test
xchg
dec
mov
xchg
out
lea
push
cmovs
out
push
cmpsl
mov
cs
adc
mov
lds
mov
jecxz
mov
xlat
mov
jnp
test
jbe
mov
pop
push
lahf
enter
jo
movsl
jno
arpl
xchg
xchg
mov
lds
popa
in
out
lcall
cli
and
mov
push
dec
mov
data16
pop
ss
fsubrs
mov
xchg
loope
sbb
dec
mov
mov
js
inc
and
call
push
sub
hlt
insb
cwtl
jne
push
xlat
push
jae
lock
inc
add
cmc
out
dec
and
rolb
xchg
mov
add
sub
xor
daa
mov
mov
cld
mov
test
shlb
outsb
out
pop
adcl
rolb
pop
sti
pop
mov
addr16
dec
adcb
ljmp
xchg
ret
pop
aam
xor
ret
inc
sub
push
pop
fldl
push
divb
popf
lea
dec
cld
ficompl
ret
lds
test
insl
rcrb
add
jge
inc
loopne
add
in
mov
ljmp
aad
ljmp
dec
leave
fidivs
cmpl
and
daa
insb
cvtps2pd
fidivrs
mov
jbe
jp
adcb
int3
sbb
push
ficoml
mov
js
xor
or
int
cmp
or
and
fwait
roll
or
in
lahf
leave
cld
lcall
ficoms
mov
popa
lret
and
sub
xchg
mov
fcomps
jge
pop
in
xchg
cmp
mov
scas
push
gs
je
shlb
les
inc
lods
mov
mov
aaa
int
mov
sub
adc
add
mov
enter
inc
shr
loopne
dec
inc
mov
sbb
inc
sbb
and
jns
mov
shll
ret
sbb
lret
push
cmp
out
push
jecxz
sub
push
push
cmc
lods
cltd
jb
das
arpl
mov
inc
mov
cmc
pop
scas
mov
adc
je
or
mov
ds
test
and
and
cmp
add
and
lret
das
jmp
sub
popl
or
xor
movsb
jl
mov
sbb
push
inc
adc
mov
xorl
dec
dec
repnz
ljmp
add
std
sbb
mov
inc
clc
mov
xorps
sub
inc
jne
lods
fisttps
or
stc
jo
xchg
cwtl
adcl
mov
imul
cmp
pushf
imul
adc
mov
ss
cmp
imul
inc
mov
inc
test
push
in
push
js
add
int3
xchg
std
mov
in
hlt
or
xchg
test
mov
jmp
add
xchg
and
mov
je
in
push
gs
and
jp
sahf
xchg
push
jae
jbe
je
xor
add
xchg
jne
cltd
sub
mov
push
movsl
negb
call
es
test
or
jge
test
mov
rorb
out
rcl
jmp
dec
inc
repnz
ja
sub
dec
or
sub
or
xchg
movl
push
jbe
push
cwtl
adcb
jg
sbb
imul
cmp
and
push
repnz
sub
sbb
sbb
testb
push
add
ja
cmp
xchg
call
aaa
daa
dec
cmp
adc
pop
adc
leave
sub
cmp
data16
mov
adc
adc
ret
icebp
andb
imul
pop
mov
dec
mov
ss
xchg
lock
stos
add
push
jecxz
jl
or
jl
xor
popf
xchg
inc
lret
xchg
sbb
bound
out
loope
mov
or
inc
mov
mov
mov
push
cltd
fld
inc
xor
dec
xchg
adc
test
push
add
test
push
mov
cwtl
ret
out
dec
loop
in
adc
add
jno
pop
das
jle
mov
mov
and
in
into
loope
jne
mov
xor
xchg
push
or
mov
jecxz
fnstenv
pop
lahf
or
jns
and
inc
xchg
or
shll
cmp
push
insb
ss
jb
pusha
xchg
sbb
idivb
jg
sub
jle
jle
cmp
adc
fwait
lret
sbb
mov
mov
pushf
inc
loop
cmp
lock
jae
sbb
ds
bound
mov
adc
cmpsl
enter
mov
mov
adc
rorb
push
jl
leave
lret
add
xlat
movsl
int
dec
push
mov
jbe
dec
test
loopne
movb
sarl
lcall
fisubs
dec
pop
jne
enter
push
mov
pushf
imul
mov
mov
movsl
mov
mov
jne
je
dec
dec
das
sbb
mov
mov
loop
fsubl
jae
psrld
mov
dec
and
adc
aaa
lds
fs
mov
xor
ss
jo,pn
sub
adc
in
and
notb
jnp
push
mov
insl
sub
iret
or
div
fcmovu
sarl
xorl
push
das
ret
xor
loope
repz
mov
imul
in
mov
scas
mov
mov
sub
popa
out
sbb
mov
imul
pop
leave
cmp
mov
ret
push
mov
sahf
bound
scas
mov
mov
pop
adc
sbb
pop
inc
aam
lods
test
sub
pop
jl
sbb
adcl
pop
mov
lcall
inc
loopne
or
in
dec
push
repz
repnz
repnz
inc
clc
ljmp
add
imul
add
sub
iret
cmp
sar
iret
inc
cmpsb
pop
stc
push
adcb
fcoms
nop
and
int3
das
incl
mov
mov
adc
rolb
test
add
cmp
cmp
imul
cmp
popf
shrl
repnz
add
jg
dec
inc
repnz
jp
mov
das
xchg
ss
xor
mov
and
sub
popa
push
or
xchg
addr16
mov
jb
cmpsl
flds
cltd
shlb
pop
repz
jne
ret
stos
or
in
inc
xchg
out
push
inc
pushf
add
pop
sub
ret
or
popf
sbb
pop
gs
mov
push
aam
fidivrs
clc
cmpsb
push
and
popa
push
push
push
fwait
js
cmpsb
cs
sub
sbb
popf
or
jo
xor
xchg
mov
ds
out
add
rclb
shll
sub
cmp
test
movsb
push
dec
or
push
xchg
dec
push
call
and
sbb
add
popf
aas
out
repz
outsb
add
repnz
push
lods
enter
std
cmp
xchg
inc
cmp
sub
inc
mov
pop
mov
scas
or
in
mov
jmp
hlt
arpl
imul
add
cld
shll
mov
sarb
jnp
jmp
cmpsb
xlat
jb
cli
xchg
mov
shlb
popl
pushf
and
nop
loop
cli
mov
aad
add
pop
cld
test
xor
jl
add
repz
test
xchg
rorb
inc
imul
dec
lods
aam
leave
imulb
mov
mov
mov
lcall
jecxz
mov
pusha
mov
xchg
xchg
xchg
adc
cmpsb
jb
xchg
sbb
sub
cmc
cmpb
fwait
adc
xor
jo
pushl
aad
inc
sti
xchg
loope
cmp
mov
jge
cmp
xchg
insl
sahf
sbb
push
add
adc
shlb
into
ss
sub
push
xchg
or
jae
mov
faddl
mov
jg
fldenv
dec
push
shll
sub
or
ficoml
xor
cmc
or
inc
out
rol
leave
xlat
mov
pop
outsl
push
jns
mov
adc
mov
sub
jle
jmp
fdivrs
inc
rolb
sub
fists
negl
outsl
inc
pop
fisubrs
test
out
mov
inc
or
fcmove
add
push
and
inc
inc
xor
aaa
adc
loop
ja
jle
cmpsl
jae
fsubl
push
aad
xlat
mov
scas
in
dec
je
test
rorb
enter
pop
in
jns
es
lds
jno
xor
pop
xchg
xor
cmp
dec
test
pop
mov
cli
insl
hlt
movsb
into
test
xchg
int
push
dec
jns
sub
xchg
sbb
fwait
dec
mov
jmp
cwtl
sbb
cmp
aad
stos
cltd
popa
fnstsw
jbe
push
jb
dec
movsb
jmp
fwait
push
fstl
test
push
push
inc
es
jecxz
sbbl
add
jns
arpl
pop
out
test
sbb
xlat
sub
mov
stos
jp
jp
pop
or
dec
gs
das
jne
fistpll
push
jns
cli
sahf
fstl
dec
mov
popf
inc
xchg
test
mov
divl
cmp
sbb
jns
mov
dec
stos
fwait
repnz
in
inc
push
add
repz
xchg
lea
mov
cltd
push
pop
adc
test
push
into
call
xchg
jo
roll
movsb
and
data16
mov
addr16
fcmovbe
sbb
sbb
mov
test
adc
loop
or
adc
data16
push
mov
test
test
repz
iret
jg
cmp
add
cmc
shlb
sbb
fwait
stc
test
jg
add
jg
adc
sub
add
pop
fucomi
rcr
or
push
dec
adc
ja
cmp
bound
jg
je
or
ss
xlat
inc
aad
test
lods
bound
xor
popf
push
inc
or
xor
mov
jle
inc
cmpsl
lcall
mov
ret
push
call
push
lea
mov
js
sbb
or
sbb
add
imul
jg
sbb
out
add
mov
dec
mov
icebp
dec
es
xchg
es
insb
fsubp
mov
rorl
fs
lea
adc
mov
jns
sub
pusha
adc
sub
adc
fcompl
popl
jle
fs
xor
pop
or
js
fnsave
mov
rcl
cmp
or
sub
mov
lods
lods
adc
push
das
popf
jne
push
mov
mov
and
insl
pop
ljmp
lds
arpl
jo
jg
mov
lret
cld
mov
inc
mov
sbb
jae
jo
xor
add
out
push
mov
sub
xlat
idivb
mov
leave
sub
or
outsl
aas
rep
cltd
subb
arpl
sbb
fstps
jg
mull
adc
imul
maskmovq
testl
push
xor
in
mov
sub
inc
lods
adc
add
je
lods
ljmp
pop
jo
lea
jp
movsb
mov
std
and
outsl
call
dec
loopne
rep
jecxz
rol
add
xlat
fldcw
jle
cmp
cmp
mov
bswap
jg
or
mov
hlt
inc
mov
incb
or
jecxz
xor
repnz
out
stos
inc
pop
pop
loopne
insl
push
ja
mov
or
xchg
pop
add
pop
sbb
add
push
jg
sub
out
sbb
inc
cli
sub
mov
jb
fcom
xchg
mov
and
ss
jg
push
mov
jmp
scas
xchg
stc
lds
insl
rcr
inc
mov
mov
fcomi
inc
testb
adc
sarb
cmp
xchg
inc
enter
xor
insl
popa
inc
jns
ret
and
das
insb
sahf
js
bound
jbe
aad
lods
xchg
jmp
xchg
push
les
or
mov
jge
push
push
aaa
pop
cmc
mov
sbb
add
sbb
shrl
and
xor
cli
sbb
ljmp
xchg
cwtl
xor
jl
iret
repnz
cltd
in
into
stc
xchg
addr16
jae
inc
mov
test
lcall
inc
and
mov
mov
loopne
mov
add
add
pop
sub
push
pop
pop
add
jge
mov
lods
fwait
mov
or
xchg
sbb
add
adc
loopne
lcall
jno
aas
pop
cmp
stos
sub
loopne
cwtl
orl
push
or
sub
xchg
movsl
mov
sbb
and
jmp
xchg
out
add
sub
fcmovnu
je
mov
insb
dec
jo
in
xchg
aad
movsb
cli
adcb
sub
sbb
in
leave
xchg
push
xchg
cmp
aad
sbb
aam
mov
iret
add
inc
inc
mov
xchg
mov
rcrl
ja
nop
out
sbb
add
mov
ret
cmpsl
mov
dec
jecxz
fidivrl
bound
fadds
jmp
xor
lods
xlat
mov
cs
test
in
rcrl
mov
inc
arpl
test
mov
lret
outsl
adc
push
mov
test
das
shlb
jbe
pop
cmpsl
jbe
movsb
lods
push
cs
mov
xchg
or
add
and
call
mov
cmpsb
sti
mov
test
cwtl
pop
sub
mulb
jb
push
ret
push
xor
shll
xorl
outsb
jbe
ret
xlat
nop
push
pusha
lea
jmp
outsl
inc
pop
das
cmc
pop
or
js
jne
mov
add
shll
sbb
sahf
mov
in
mov
dec
or
bound
jg
push
inc
xlat
xor
loope
xchg
or
mov
cwtl
loope
pop
xlat
scas
cs
mov
out
push
repz
iret
clc
mov
and
push
test
inc
lret
push
gs
cmp
dec
push
mov
pop
stos
mov
clc
lea
jl
inc
xor
mov
sub
lret
inc
movsl
sub
testb
rcrb
out
and
inc
in
xorb
ljmp
mov
xchg
lods
sub
sahf
faddp
or
repnz
xchg
bound
aam
mov
shrl
lcall
mov
loop
jmp
mov
loop
loope
popa
and
ret
and
mov
dec
inc
fidivs
jae
sub
add
out
pop
ret
adc
aaa
pop
es
inc
or
xlat
mov
mov
adc
int3
add
insl
fcom
movsl
xchg
or
sarl
push
insb
pusha
add
push
and
rcll
mov
js
cmp
sub
jecxz
dec
rclb
mov
mov
les
adc
nop
cs
adc
push
fiadds
cld
hlt
lds
xor
push
fidivrl
inc
out
push
sbb
inc
mov
call
jge
stos
sbb
stc
int
enter
xchg
sbb
int
pop
mov
es
lods
xchg
addr16
mov
mov
add
movsl
pop
fcompp
adc
fstpt
in
imull
pop
mov
mov
arpl
mov
nop
incl
rclb
jns
mov
lds
or
andb
in
movsb
cmpsl
das
mov
fwait
mov
enter
push
xchg
stos
and
inc
test
push
pusha
add
divb
ja
mov
outsb
gs
jae
xlat
out
inc
adc
mov
push
mov
arpl
or
xorl
xor
fiaddl
sbb
cwtl
ss
push
mov
pop
inc
jae
add
adc
fdivp
adc
jecxz
ja
or
jo
mov
scas
leave
jbe
mulps
jl
lods
mov
testb
xor
push
gs
jp
mov
lea
pop
cmp
out
imul
xchg
and
jp
cmp
mov
fcmovnu
aas
mov
aaa
jge
xchg
jno
push
mov
jae
jns
dec
xor
mov
pop
sbb
movsl
cmp
fidivs
ljmp
out
jbe
jne
sbb
popf
mov
mov
pop
mov
jne
hlt
push
int3
fidivrs
insb
cwtl
push
les
aas
sahf
out
outsl
lret
xor
pop
loop
pusha
xor
or
mov
cmpsb
subl
je
xchg
xor
sbb
movsl
dec
dec
push
add
movsl
insl
xchg
xchg
sbb
lea
inc
sub
jb
popf
cmpsl
out
jl
rclb
jne
sub
mov
push
aas
inc
mull
adc
jmp
dec
loop
popl
ret
out
cmp
ret
jl
pop
xchg
add
fisttpl
mov
adc
cltd
divb
fcomi
mov
insl
or
sahf
push
push
mov
or
sub
test
mov
jge
push
fsub
insb
push
movsl
js
and
inc
out
mov
test
insb
sub
mov
insb
call
hlt
xchg
out
stos
adc
xor
push
xchg
mov
rolb
or
cmc
arpl
pop
cmp
mov
or
aaa
push
push
adc
out
iret
mov
in
cli
loope
mov
sub
rol
pop
mov
cltd
frstor
outsl
sti
mov
sbb
testb
je
or
pop
negl
jecxz
push
mov
es
and
sbb
call
push
scas
cmp
lods
fstpt
lret
aam
mov
das
icebp
roll
fwait
std
cmpb
cmpsb
and
mov
jp
fidivrs
daa
ss
test
mov
cmp
cmpsl
pop
adc
and
out
inc
or
sbb
add
xadd
xor
cmp
xor
xor
inc
adc
pushf
subb
imul
mov
pop
into
xchg
mov
pop
popa
popa
xor
pop
lret
sub
pusha
mov
jnp
outsb
and
add
out
sti
add
popf
mov
sub
fsubrl
je
cli
data16
loope
dec
pop
sbb
sarl
insl
xchg
mov
cmp
int
jl
push
pop
push
scas
movsb
fiaddl
sahf
xor
push
ret
jg
movsb
add
mov
adc
or
shlb
mov
mov
out
push
xchg
ja
leave
jecxz
inc
pop
into
test
repz
test
loop
mov
out
je
hlt
mov
icebp
outsb
sub
add
xchg
cwtl
dec
lds
push
xor
mov
in
imul
inc
push
arpl
adc
js
test
addl
mov
jg
ja
out
mov
inc
jmp
jp
and
mov
jg
cmpsl
into
cli
pop
xlat
shrl
aas
movsb
xor
sbb
div
sbb
or
push
int
psubd
xor
js
add
push
out
jle
js
lods
nop
sub
gs
rcll
mov
cld
pop
testb
ficomps
popa
popf
inc
or
aaa
test
je
inc
pop
push
jg
outsb
inc
test
sbb
sbb
fldenv
push
or
cmp
sti
sub
and
mov
xor
or
cmp
shrb
pop
mov
imul
mov
add
dec
mov
push
inc
lahf
insb
arpl
fadd
mov
imul
ficoml
cs
aam
enter
add
andl
add
or
inc
cmp
fstl
aaa
fdivrs
adc
or
jmp
mov
call
mov
dec
jno
cmc
inc
jns
dec
jno
cmp
mov
xchg
sbb
jecxz
dec
in
lcall
xor
mov
fxtract
add
sahf
dec
push
vcvtpd2psx
cltd
dec
aaa
jmp
jle
push
fisubrl
jmp
add
mov
leave
push
mov
lahf
fisttpl
outsl
loope
mov
ret
adc
push
or
pop
sub
ljmp
mov
mov
pop
loopne
mov
jne
xor
and
xchg
push
in
mov
aaa
cmpsl
xchg
ja
dec
test
and
hlt
pop
repz
test
add
mov
or
jle
and
int
xor
xchg
sti
mov
insb
push
inc
mov
add
fs
dec
sub
jae
mov
popa
testb
jns
sub
xchg
cld
insb
and
sbbl
push
stos
pop
sar
insb
sbb
ret
cmp
cmp
or
hlt
outsl
cmp
jmp
aad
cmp
int3
addr16
adc
adc
xor
sbb
pop
jnp
orl
dec
frstor
arpl
ret
cmp
ljmp
scas
and
test
lret
mov
mov
xchg
fxch
scas
bound
jae
mov
mov
mov
movsb
xchg
rcrl
pop
mov
cmp
test
xor
push
scas
jnp
mov
leave
push
sub
outsb
ja
jmp
adc
inc
cmp
xchg
aam
xor
xchg
negb
xlat
nop
mov
aaa
push
cmp
std
pop
sbb
les
ret
cs
cs
iret
fsubrp
shlb
dec
test
lock
push
or
movsb
int3
push
push
inc
lds
je
jmp
arpl
mov
addr16
sti
cld
mov
jbe
leave
cmp
cld
jle
fdivrl
xorl
sub
push
mov
xchg
into
sbb
inc
mov
je
jge
jne
je
frstor
or
or
out
xchg
lods
push
pop
sbb
xchg
bound
scas
sarb
mov
in
push
mov
and
sub
subl
movsl
or
adc
arpl
int
pextrw
pop
into
es
inc
dec
xchg
lods
ret
std
addl
repnz
aas
arpl
jg
sahf
or
push
mov
push
lcall
jmp
xlat
adc
movsl
test
jnp
sbbl
or
and
loop
jp
testl
xor
add
mov
insl
repz
cmp
lret
iret
fsqrt
mov
jmp
test
cmp
xor
iret
iret
or
dec
stc
faddl
mov
dec
int
fs
aaa
cli
enter
cmp
or
push
dec
and
dec
xchg
out
pop
in
sub
mov
popf
loop
dec
adc
cmp
or
ja
inc
imull
lahf
shll
jg
or
out
stos
scas
outsb
sarb
outsb
stc
test
js
cld
loop
cmp
and
in
icebp
mul
orb
and
test
jp
or
jecxz
test
add
shll
stos
push
dec
cmpsl
cmp
or
jp
nop
jp
cmpsb
cmc
test
sub
xchg
addr16
sub
mov
fldcw
and
jl
jle
inc
push
mov
fwait
data16
jle
dec
cld
ss
pop
lds
and
dec
ret
mov
fisttpll
push
sub
push
jecxz
movsb
cmc
jnp
pop
push
aad
lret
fildll
and
sbbl
mov
xchg
ret
mov
jl
out
xor
adc
push
std
xchg
push
xchg
cwtl
enter
push
enter
sbb
xor
inc
leave
lret
dec
add
and
xchg
mov
dec
cmp
xchg
add
pushl
and
negl
cmpsb
shrl
imul
xor
movsb
pop
nop
push
nop
push
out
xor
ficoms
cmp
movsb
jae
in
push
imull
cmp
mov
or
out
ret
adc
and
fcmovnb
ja
cmp
je
data16
sarl
push
push
xor
mov
pop
mov
mov
add
js
fsubr
jecxz
stc
push
xor
rorb
adc
dec
out
cmc
leave
fisttps
mov
dec
lock
ss
out
fmuls
cld
loopne
lea
inc
ja
xchg
out
fldl
sbb
pop
idivl
rol
fwait
rorb
out
mov
int3
inc
sub
leave
test
aaa
jg
testl
adcb
inc
lds
stc
inc
lods
cltd
jmp
call
cmp
cmp
adc
inc
pop
lahf
push
xchg
insl
cltd
xchg
das
jnp
mov
cwtl
mov
ds
test
sub
pushf
or
jge
testb
sbb
and
adc
ja
inc
repnz
xchg
dec
cmpsb
std
pop
inc
sbb
or
ret
cltd
inc
xor
xor
mov
ret
adc
js
aas
aaa
popa
pop
xlat
sub
inc
scas
repz
iret
xlat
pop
mov
lods
pushl
xorl
mov
mov
adc
jmp
je
inc
daa
bound
inc
add
dec
push
add
je
push
mov
fdivrl
sbb
sub
jg
sub
cmpb
cmp
out
rcrb
mov
push
add
jl
fs
sbb
mov
sti
jnp
out
outsl
cmpb
xchg
gs
jne
xchg
push
rcr
shll
movsl
push
jmp
inc
sub
in
hlt
out
ds
testb
fidivrs
and
mov
xor
call
jbe
inc
xchg
addr16
loop
stos
pop
addl
jne
cmp
lds
rcll
and
out
fwait
adc
sbb
movsl
xor
push
rorb
mov
jb
cmp
xor
daa
adc
cli
cs
mov
xor
lea
cmc
loope
jge
cmc
nop
std
lods
mov
hlt
pop
push
lods
cltd
xchg
and
movsl
or
push
inc
pop
out
outsb
pop
in
subl
mov
out
outsb
or
idiv
push
pusha
test
mov
inc
jbe
sbb
sti
or
lods
mov
inc
cli
mov
dec
scas
inc
lock
and
ljmp
xor
mov
and
movsb
iret
jl
cmp
cs
in
jo
in
into
mov
push
pop
lods
and
and
outsl
add
enter
jns
mov
push
js
js
and
push
mov
pop
push
pushf
imul
punpckldq
pop
fsubrs
xchg
push
push
shrb
ja
and
popf
popf
jns
adc
dec
xchg
int3
pop
xor
nop
in
gs
inc
lret
pop
push
jg
lea
pop
add
pop
cmp
cmp
dec
inc
mov
push
addb
lcall
in
pop
inc
mov
sbb
mov
cmp
std
sub
cmp
daa
popl
inc
sbb
cmpsl
sub
test
lock
leave
mov
xchg
shl
sub
sbb
add
xor
jg
pop
jo
push
and
xor
dec
shll
mov
sbb
or
outsl
adc
xor
pusha
push
inc
sbb
je
test
push
jae
movsl
insb
cld
sub
and
jae
clc
push
mov
push
stos
pop
clc
mov
jae
dec
dec
mov
mov
sbb
jo
daa
out
stc
mov
xchg
and
outsb
or
ds
sarl
mov
sbb
push
stos
test
shll
shll
fwait
mov
add
loop
lcall
jne
sub
les
js
popa
mov
xor
pop
cld
add
sbb
stos
fs
lret
ret
roll
jp
jecxz
push
cmp
mov
js
ds
les
fmull
pushf
arpl
bound
pop
and
mov
cmp
mov
xor
lret
addr16
cs
daa
out
dec
test
mov
dec
test
add
mov
std
dec
sub
and
push
adc
ds
push
int
out
gs
into
add
xchg
adc
mov
popa
aas
test
stc
dec
outsb
arpl
push
aas
jecxz
ret
pop
int
jmp
push
pop
movsl
adc
jp
push
adc
adc
fcmovbe
out
sbb
orb
sarl
mov
and
repz
jne
cmp
stos
shll
pop
and
adc
int3
mov
incl
xor
inc
add
dec
lods
lret
icebp
imulb
outsl
push
cmpsl
aam
shrl
pop
pop
jae
leave
inc
loope
inc
mov
inc
jae
adc
push
dec
popa
subl
jmp
pop
push
repnz
adc
xor
loopne
jb
daa
mov
orb
out
push
and
pop
sbb
mov
out
xchg
dec
pop
pusha
data16
pop
mov
mov
push
sub
mov
dec
scas
mov
into
mov
int
or
in
mov
mov
sar
adc
test
push
jnp
mov
cmpsl
cmpsb
lret
push
sarl
fstpl
shlb
repz
and
fistl
xor
and
stos
ljmp
lret
js
pop
sbb
pop
pushf
jae
fs
sub
cltd
rcl
sbbb
ficompl
lock
addr16
sbb
or
jne
add
jo
outsl
jp
or
mov
into
popa
loope
pop
insl
jnp
ret
nop
lods
push
inc
dec
int3
dec
push
in
dec
inc
mov
pop
add
mov
popaw
sbb
mov
sti
aas
cld
push
jns
adc
push
and
jnp
out
mov
or
jb
or
stc
lods
and
inc
cmovl
movsb
out
clc
aam
push
mov
cmp
add
rcll
arpl
ret
ds
idiv
mov
mov
cs
inc
imul
xor
adc
ljmp
push
push
outsl
stc
or
sub
int
sarb
mov
stc
jb
bound
icebp
movsl
push
push
bound
jl
lret
mov
add
iret
fs
and
dec
call
fwait
xchg
mov
popf
sbb
loopne
mov
push
jo
fwait
mov
loope
ret
rcll
movsb
inc
xchg
addl
and
mov
lds
mov
xchg
sub
or
ss
dec
or
jl
push
adcl
cli
leave
cmp
or
sub
jecxz
cmp
pushf
lods
ds
sahf
sub
stos
mov
decb
out
push
das
call
xchg
ss
aas
sahf
sti
fcompl
push
and
mov
fwait
mov
sbb
rorl
fdivl
jp
sarl
push
cmp
mov
mov
insl
out
loope
lcall
aad
fnstcw
in
loopne
incb
cmp
lret
ficoml
mov
movb
adc
inc
mov
popf
mov
jno
sbb
add
inc
sahf
js
std
mov
fisubl
push
mov
je
hlt
push
fsqrt
push
mov
cmc
fists
andl
sub
mov
push
bound
es
dec
cmpsl
daa
inc
inc
push
test
inc
loopne
clc
in
leave
cmp
sbb
jmp
and
fcmovnbe
into
jbe
fadd
sbb
xchg
and
int3
lcall
xchg
rcrb
js
lret
push
sahf
popa
sbb
add
in
loope
enter
mov
or
aad
js
inc
push
jo
in
cs
arpl
bound
loopne
xlat
mov
shlb
pusha
ret
pop
cmp
jne
sub
cmc
mov
jp
addb
sbb
dec
lahf
or
push
je
in
aad
ret
xchg
cmp
sub
mov
movsl
xor
in
mov
sbb
xchg
cmp
mov
arpl
rcrb
jo
xlat
xor
sbb
sbb
dec
cmpsl
push
mov
cmp
dec
js
in
rcll
push
ficoms
mov
lods
mov
jmp
and
das
iret
rclb
pusha
push
and
insl
xchg
push
scas
xchg
sbb
jbe
and
roll
inc
out
js
arpl
das
sub
adc
mov
insb
in
in
push
pusha
rcrl
iret
scas
sahf
loop
ret
jecxz
jae
imul
mov
lds
adc
in
out
xchg
cmp
ret
test
xchg
fs
add
mov
cmp
mov
or
sahf
insb
movsb
movsl
mov
pop
ss
in
fldcw
decl
adc
mov
daa
xor
icebp
imul
test
push
jecxz
xchg
nop
or
sub
lock
inc
pop
cwtl
addr16
xchg
mov
inc
stos
ss
popa
inc
insl
sbb
sahf
jb
mov
out
adc
fwait
mov
in
out
mov
stos
bound
repz
fisubl
push
adc
call
fistl
stos
cli
add
addr16
ret
xor
pop
sbb
lahf
mov
pminsw
stc
mov
jp
adc
dec
add
jg
loope
shll
xorl
or
or
shll
pushf
sbb
jne
cmp
scas
ljmp
stos
adc
outsl
adc
test
jno
enter
cmp
das
dec
mov
lods
icebp
or
fmuls
out
pop
je
jo
loopne
sbb
jge
sbb
mov
leave
xor
dec
pusha
and
mov
int3
xor
xchg
and
popf
aas
xchg
push
rolb
adc
xchg
mov
insb
loopne
bound
dec
inc
dec
gs
ret
mov
sti
mov
scas
mov
popf
push
arpl
pop
mov
cmpsb
mov
pop
inc
lods
mov
ss
clc
ret
push
inc
push
push
pop
clc
sbb
fs
outsl
in
in
cmp
push
sti
pop
xchg
sbb
mov
lcall
call
arpl
and
arpl
sub
jp
add
orb
arpl
sti
mov
sub
aas
or
aas
pop
jae
sbb
sub
add
push
inc
loop
cmc
cmp
hlt
pop
dec
sub
dec
inc
push
popf
lock
mov
inc
stos
xchg
and
pop
sar
and
xchg
or
pop
aaa
jle
data16
xchg
mov
mov
stc
rcrb
adc
cld
push
imul
mov
sbb
shll
sbb
js
into
mov
xlat
mov
rcrb
jns
ret
test
scas
testb
mov
insb
sbb
int
jge
mov
sbb
jo
sahf
arpl
dec
and
cltd
add
and
inc
movsl
fisubl
fidivs
shll
subb
sbb
test
dec
sti
repz
xor
arpl
loop
inc
mov
iret
sub
mov
lock
inc
into
fbld
sub
cwtl
mov
cli
sub
sbb
add
daa
call
pop
movsb
push
mov
addr16
mov
sbb
jmp
mov
jmp
xor
mov
fstpl
fidivs
gs
inc
push
push
adc
enter
dec
test
cmp
ljmp
jmp
jmp
insl
jle
dec
fucomip
mov
outsl
mov
testb
outsb
xlat
adc
pop
dec
jb
xchg
lahf
sub
xor
jae
aas
mov
push
das
jne
movsl
insb
mov
and
xchg
out
adc
inc
mov
cmp
jo
fistpl
pusha
dec
adc
xlat
popf
pop
mov
stos
sub
movsb
out
bound
jmp
pop
outsl
outsl
repz
dec
mov
add
jns
adc
cmpsl
inc
xor
rolb
movsb
xchg
add
pop
push
mov
adc
popf
push
jno
repnz
xchg
sarb
insl
sbb
inc
orl
scas
popf
popf
cmc
mov
inc
inc
roll
cmp
xchg
hlt
stos
inc
ljmp
gs
stos
test
icebp
mov
test
daa
aam
aas
xor
sub
xor
and
fdivr
cwtl
sahf
mov
mov
popa
int3
jge
lods
add
mov
dec
fcmovne
push
jno
insb
in
and
in
adc
outsl
addr16
xorl
and
xor
xor
int
cltd
push
xor
xchg
cmc
lods
dec
mov
decl
lock
cld
lcall
inc
jmp
mov
or
rol
aad
loopne
test
push
lods
and
fs
or
int3
sahf
xchg
daa
or
stc
sti
and
or
ja
incl
fimull
loope
bound
mov
lea
movsl
subb
pop
mov
jg
ds
outsb
popf
in
es
lcall
sub
inc
dec
push
dec
jp
and
movsb
loop
mov
fwait
ret
jecxz
adcl
arpl
incl
ret
mov
pop
int3
movsl
push
fists
stc
add
movsl
ror
nop
inc
mov
mov
jbe
es
and
dec
ret
aaa
ss
movsl
or
jecxz
scas
js
imul
in
xchg
in
test
adcb
cmp
push
arpl
mull
fcmovbe
movsb
push
fxch
out
lods
ljmp
and
mov
in
jp
mov
loopne
inc
dec
inc
pushf
inc
xor
xor
inc
push
out
xor
out
clc
mov
leave
pusha
jne
jle
jp
es
mov
pop
push
push
mov
fsubrp
xor
ja
xchg
sahf
inc
push
xchg
xchg
cmp
xchg
xchg
fiadds
mov
fadds
fadd
or
jg
sbb
mov
add
bound
std
fmul
push
lcall
xor
mov
int3
xor
mov
pop
xchg
mov
sbb
dec
es
cmp
and
dec
gs
mov
adc
and
fldenv
pop
add
xchg
mov
adc
add
imul
jbe
imul
add
mov
in
push
mov
and
sbb
scas
jecxz
aad
pushf
jle
insl
dec
xor
loop
pop
aaa
sbb
sbbb
js
daa
mov
mov
movb
aas
dec
rorb
aad
adc
loop
mov
sbb
clc
aas
pusha
mov
pop
mov
mov
jge
outsl
jns
adc
jns
push
int
loope
mov
mov
mov
add
loop
dec
int
mov
mov
or
cmpl
dec
out
into
add
dec
es
fstps
pavgw
mov
add
scas
pusha
pushf
push
pushf
adc
sti
jno
xor
and
arpl
lahf
repz
and
sub
pop
pop
leave
insl
jge
push
jne
pop
xor
adc
in
cwtl
test
dec
jnp
fstpt
push
add
test
mov
adc
inc
jmp
add
jo
add
mov
lahf
xchg
mov
add
je
fdivp
push
sarl
sub
and
test
mov
adc
test
into
or
and
stc
mov
inc
adc
adc
dec
dec
mov
sub
add
mov
push
xchg
push
pop
sbb
push
dec
cli
test
mov
mov
lret
xchg
mov
shrb
lret
jecxz
aas
cmpsl
movb
jle
sub
adc
cs
add
sahf
shll
test
mov
mov
and
pop
dec
das
or
inc
pushf
stos
rcll
in
mov
into
add
int3
repnz
daa
lock
and
add
mov
popa
xorl
loope
in
mov
pop
xor
jl
push
xchg
cmpsl
rcl
jecxz
sbb
in
xor
xor
xor
mov
mov
cmp
imul
mov
notl
mov
push
daa
stos
and
arpl
mov
mov
lret
mov
cmp
xlat
sbb
mov
pop
mov
aam
xchg
imul
mov
adc
adc
xor
push
popa
out
mov
push
jp
jge
xor
loopne
mov
outsb
mov
out
and
inc
cmp
jbe
aad
hlt
fmuls
cmp
test
push
lods
cmp
enter
mov
out
jmp
aam
pop
push
and
mov
sahf
push
pop
in
xchg
cltd
jmp
xor
xlat
ss
xchg
decb
iret
push
scas
add
std
mov
or
std
testl
sub
cs
jmp
fwait
ret
and
mov
test
lods
push
daa
cmp
shrl
insb
mov
push
inc
push
popa
sarb
push
pop
mov
mov
mov
push
nop
xchg
mov
or
movsl
dec
mov
jnp
dec
cwtl
mov
cmp
pop
add
rclb
push
jbe
mov
dec
hlt
in
imulb
lahf
stos
arpl
gs
xchg
test
xchg
adc
or
icebp
cmp
sub
xchg
sahf
mov
cld
xor
inc
or
addr16
xchg
loope
cmp
data16
cmp
sbb
fwait
xor
mov
enter
testl
aam
int
mov
lods
mov
cli
repz
lds
sub
lods
xchg
jp
xchg
fstps
pop
sub
sbb
jne
aaa
mov
or
push
cltd
cmp
adc
imul
jmp
jg
inc
cli
ljmp
inc
fisttps
mov
fs
sbb
inc
xlat
and
cmp
roll
mov
enter
mov
fbstp
ret
cld
jae
frstor
or
fstpt
fs
jbe
and
je
aas
lds
imul
imul
sub
icebp
negl
push
mov
adc
sbb
add
ds
sbb
les
xchg
inc
and
inc
cli
sti
cmp
sub
push
push
fwait
sbb
and
daa
popfw
jbe
inc
or
rcrl
jne
call
ss
mov
or
enter
inc
and
or
xchg
adc
imul
jge
in
mov
xchg
test
and
dec
mov
mov
xor
cmp
lea
aam
xor
fcoms
pusha
lahf
fstl
mov
fmuls
xchg
jne
sbb
cmpsb
cmp
sub
sub
fwait
inc
cld
pop
sub
test
lcall
call
test
mov
icebp
daa
sbb
leave
xor
decb
push
mov
hlt
dec
ss
push
ret
xor
mov
out
call
push
std
cli
cmp
mov
jne
xchg
addr16
sar
aam
mov
jne
dec
ret
push
dec
leave
dec
loopne
xchg
clc
lahf
enter
and
out
lret
sub
add
push
dec
lcall
test
dec
icebp
dec
push
pop
mov
sub
scas
push
es
dec
push
sbb
sub
bound
sarl
sbb
icebp
adc
inc
xor
push
adc
jae
sub
and
push
pop
movl
push
cs
shlb
xchg
sub
dec
push
sub
int
push
nop
push
arpl
mov
flds
mov
push
stos
je
and
mov
movsb
dec
outsb
fndisi(8087
icebp
or
jge
imul
push
push
fistpll
testb
jnp
sub
inc
add
mov
ds
mov
aas
in
jge
je
dec
jo
xchg
mov
jmp
pop
jp
aam
pop
fwait
call
mov
and
mov
outsb
shlb
addl
ret
push
dec
adc
pop
or
out
pop
pop
lret
xchg
dec
lods
push
ja
xchg
in
in
fistl
and
jg
test
icebp
jbe
sbb
pusha
dec
pop
jmp
mov
xchg
and
or
or
dec
cwtl
fdivrs
mov
adc
pop
mov
mov
sbb
int
mov
mov
lods
xchg
dec
dec
insb
xor
enter
xchg
inc
mov
imul
push
xchg
shl
mov
jbe
and
fdivs
stos
and
mov
aam
xchg
inc
pop
mov
repz
loop
lahf
cs
mov
mov
mov
test
movsb
adc
xor
mov
push
sbb
bound
jecxz
std
shrb
mov
idivb
cld
or
popf
pop
fnstenv
lcall
enter
push
enter
push
mov
out
pop
test
sbb
pop
jl
fst
lock
leave
es
les
rclb
add
hlt
out
pop
stos
rcll
or
push
dec
xor
cmp
and
push
and
ja
xor
roll
je
shll
inc
xchg
push
cmpsb
dec
movsl
test
out
rorb
inc
add
jl
insl
push
push
adc
out
nop
inc
xor
mov
jns
mov
dec
xor
andl
mov
sar
sub
call
add
iret
dec
in
aam
xchg
mov
jge
movsl
push
addr16
cmp
outsb
add
xchg
adc
cmpsb
mov
int
dec
adc
pop
in
stc
sub
add
pop
xor
lods
push
xor
idivl
mov
out
jo
aad
inc
iret
push
pop
add
mov
or
sti
test
lret
es
dec
cmpl
xchg
push
fsubl
jno
jo
push
ja
jle
dec
stc
cmp
loopne
lock
ficomps
cmpsl
push
je
cmp
cltd
rcrb
mov
ret
mov
and
stos
adc
in
bound
pop
fiaddl
loop
aad
sbb
sbb
jns
in
fwait
sbb
cmp
jl
inc
push
mov
shlw
lcall
sub
cmpsb
fnstsw
divl
adc
loopne
imul
insb
data16
outsl
aas
mov
and
jge
jne
jecxz
pop
loope
xchg
cmp
sbb
ds
ljmp
in
lea
ja
cwtl
pushf
xchg
into
cmp
in
pop
shr
addb
stc
cmp
mov
aas
xor
jo
sbb
andl
sbb
cmp
jae
mov
xchg
jns
mov
push
jl
cmp
dec
pop
fsubs
fdivl
movsl
mov
out
push
sahf
je
test
fidivrs
shr
inc
pop
cwtl
or
outsl
scas
and
jo
lea
test
addl
stos
push
mov
lock
inc
mov
adc
int
loope
cmpsl
dec
mov
jmp
mov
repnz
add
daa
jo
ror
sub
idiv
sbb
cmp
and
mov
xchg
pop
mov
aas
loope
xor
mov
mov
adc
add
incb
hlt
jnp
add
stos
add
xor
lea
ja
loope
movsl
jge
push
in
cmp
fisttpll
repz
cwtl
dec
shr
ret
lahf
test
sti
je
cmpsb
fs
and
push
xchg
shll
xor
fmull
in
pop
push
pushf
and
push
mov
imul
ds
cmpsb
xchg
lods
xlat
jns
sbb
in
add
scas
mov
aam
repz
xchg
sbb
mov
jmp
add
jbe
dec
mov
fdivp
sbb
das
mov
jbe
mov
leave
xor
xlat
and
pop
push
rclb
movsb
sub
in
adc
mov
stos
inc
int
pop
scas
repz
fiaddl
lods
andb
mov
frstor
scas
adc
hlt
in
or
lds
js
out
or
cmpsb
xor
in
cmp
push
add
aas
lods
gs
dec
lds
jmp
jg
mov
pop
decb
nop
hlt
arpl
jmp
repnz
scas
es
cwtl
sub
jne
mov
adc
pop
addr16
mov
repz
dec
add
adc
insl
outsb
mov
mov
adc
inc
inc
xchg
sbb
mov
jp
mov
dec
jle
cmc
jae
mov
je
push
nop
pusha
in
jns
dec
cmpsb
sbb
and
std
cmp
xlat
xchg
add
loope
repz
jbe
daa
mov
cltd
fadds
add
mov
popf
push
lds
cs
cmp
and
dec
mov
lds
out
sbb
call
sahf
jno
flds
lret
push
mov
jge
je
mov
movb
push
mov
loopne
lock
and
ss
ds
jae
ds
and
loop
push
jnp
add
sbb
xchg
inc
addr16
hlt
movsb
jmp
cltd
mov
pop
inc
mov
jns
jne
jns
pop
jg
ss
push
xor
or
pop
mov
mov
int
cld
adc
imul
pop
out
int3
fidivrl
leave
sub
inc
dec
cmp
pop
jge
jno
imull
pop
mov
mov
mov
sbb
popa
in
fstpl
pop
loope
outsb
xor
pop
aad
stos
test
fwait
idivb
adc
mov
xorl
aam
cmc
ret
mov
mov
outsl
arpl
jbe
xor
or
loope
lcall
outsb
pop
xchg
add
mov
jmp
adc
imul
and
lcall
cmp
in
pop
and
push
lods
dec
mov
insl
in
sbb
push
dec
ffreep
into
loop
insb
dec
pop
es
sbb
and
test
lods
scas
and
mov
push
xchg
in
lcall
cmp
data16
pop
and
lods
xor
sub
xchg
sub
xchg
dec
int
fstps
rcll
sahf
add
jg
push
enter
mov
pop
cmp
mov
push
mov
inc
add
push
das
xchg
sahf
imul
mov
or
sbb
push
fstpl
clc
fwait
lret
ds
cli
push
mov
dec
cmp
mov
mov
mov
insl
dec
test
fcmovnbe
dec
xor
xchg
sbb
jg
rcll
jmp
adc
adc
out
aaa
imul
cmpb
xlat
in
mov
adc
xchg
lods
jne
pop
ljmp
mov
add
sbb
popf
push
mov
jmp
ljmp
sbb
je
lods
cmp
nop
jmp
imul
mov
add
outsl
push
push
fndisi(8087
data16
gs
rcll
jae
in
std
dec
mov
aad
mov
push
cld
mov
inc
sarl
and
rolb
inc
std
push
sarl
push
dec
mov
sub
adc
pop
inc
pop
loopne
test
mov
mov
and
mov
out
das
add
dec
adc
and
rcr
sbb
fists
fadds
adcl
xlat
mov
push
and
mov
mov
sub
xchg
xor
pop
jns
orb
out
push
jp
daa
hlt
aaa
sub
pop
lock
sub
sbb
pushf
mov
push
xchg
sbb
jecxz
adc
mov
iret
sets
xchg
xchg
outsb
mov
dec
pop
jae
cmp
cmpsb
je
sub
mov
nop
addl
jp
pop
dec
int
fdivrs
push
sahf
cmpb
add
add
jle
aad
push
mov
call
shll
pop
xor
cltd
int
mov
push
adc
popa
sbb
lock
inc
test
sub
scas
call
mov
cwtl
adc
out
cmc
cmp
outsb
inc
xchg
mov
test
stos
pop
fucomi
cmp
test
shlb
in
int3
jmp
cmp
sti
jo
cmpsl
pop
outsl
ret
jmp
mov
fidivrl
cld
bound
push
pop
mov
inc
jle
jae
mov
and
int3
addb
jge
clc
cld
jle
mov
adc
pop
dec
fsts
xor
jns
cmp
cwtl
popa
sarl
ds
std
mov
jg
push
and
js
orb
push
pop
push
repz
lea
jbe
xchg
aas
mov
jae
lds
enter
jo
cmp
mov
xchg
sub
inc
jb
in
and
dec
mov
mov
mov
fsts
fsubrl
aaa
addr16
jmp
pop
outsl
pop
ficomps
dec
jns
adc
loopne
mov
add
mov
fstps
jg
add
scas
fdiv
pop
lea
jne
iret
cmpsb
xchg
lret
push
imul
jnp
jl
jae
and
cmp
popa
mov
stos
rol
testl
roll
iret
lods
rcll
cmc
inc
mov
or
dec
mov
pusha
or
int3
daa
and
xchg
and
mov
movzbl
dec
sub
sub
cwtl
jl
sbb
popf
mov
mov
xchg
or
dec
cmp
imul
push
pop
test
addl
sub
add
mov
in
sub
arpl
add
outsb
sbb
sahf
int3
sub
sbb
mov
stos
push
dec
loope
dec
dec
xchg
cmp
mov
cltd
imul
mov
clc
out
sbb
pop
aas
in
fnstenv
ljmp
cmp
in
hlt
fbld
stos
mov
cltd
nop
movsl
popa
repz
add
push
xchg
jp
or
xor
push
rcl
shl
xchg
mov
xlat
cltd
sbb
and
xor
cmp
sahf
lods
mov
pop
adc
dec
cmp
push
mov
sarb
iret
rolb
ds
in
inc
aaa
adc
xor
stc
shr
xor
mov
and
out
add
jge
jecxz
cmpsl
inc
push
ficoml
sbb
add
xchg
aaa
cmp
inc
dec
addr16
inc
rcll
mov
stos
xlat
adc
mov
in
or
lods
in
adc
inc
push
mov
pop
popf
test
sbb
and
and
test
sti
insl
andl
cmp
fsubl
icebp
mov
xchg
and
lock
ljmp
xor
push
mov
es
pop
push
sti
sbb
fcmovb
mov
ljmp
fs
decb
and
xor
push
jp
mov
out
mov
mov
mov
mov
lret
inc
adc
xchg
adc
jne
sti
push
adc
and
fwait
push
scas
jns
adc
nop
sarb
push
fs
pushf
mov
add
adc
popa
andl
jecxz
push
mov
shll
dec
xor
sbb
add
aaa
jns
cmp
mov
sbb
jmp
cmc
ds
dec
xchg
xor
idivb
inc
out
push
leave
mov
das
sbb
hlt
stos
push
or
pop
xor
cmc
add
inc
adc
sub
jne
or
outsl
mov
adc
out
inc
add
ret
xorl
jle
mov
mov
cli
fwait
sub
push
sub
and
dec
or
add
mov
enter
jae
lods
inc
and
ret
jb
in
cli
les
xor
pop
push
sbb
in
dec
lock
int3
and
mov
cli
sbb
hlt
int3
pop
jecxz
sbb
sbb
lret
and
cmp
subl
scas
inc
mov
adc
std
jo
mov
sarb
sbb
push
cs
jl
rcr
testb
xchg
mov
or
jmp
arpl
sbb
mov
dec
in
stos
dec
inc
stos
dec
sti
inc
insl
loopne
outsb
fisubrs
movsl
pop
cltd
adc
fwait
sti
sbb
pop
add
sub
jnp
aam
xor
cmp
js
sahf
imul
addr16
sbb
sub
xchg
and
mov
xchg
mull
ret
jns
xchg
jnp
inc
pop
adc
dec
cmp
les
clc
inc
jbe
ljmp
xlat
dec
rorl
mov
push
movsl
mov
cmpsl
sbb
sbb
std
xchg
jns
std
and
adc
test
sub
xor
in
test
pop
test
add
xlat
test
lds
imul
sub
mov
and
addr16
daa
aad
jmp
ret
scas
or
mov
and
data16
dec
call
pop
ss
sub
movsb
sahf
js
test
mov
imul
sub
mov
popf
jp
mov
mov
add
dec
in
mov
rorl
add
push
inc
add
scas
clc
and
stos
fisubl
add
pop
mov
push
xchg
mov
cli
sti
jbe
pop
ret
sub
push
jbe
shl
pop
pop
adc
inc
jmp
push
sub
mov
hlt
mov
dec
outsb
jecxz
inc
int3
jo
inc
jb
out
or
ss
enter
ja
sarb
sti
mov
stos
pop
and
dec
dec
pusha
xor
data16
adc
adc
pop
stos
mov
scas
or
sbbl
arpl
xchg
adc
pop
std
push
inc
mov
imulb
pop
outsb
dec
les
mov
push
fwait
xor
jp
or
gs
mov
ret
lret
movsl
xchg
and
dec
fsubrl
sub
push
insb
jne
arpl
cmc
js
cmp
sbb
cli
dec
scas
or
jbe
jne
pop
cmp
jle
adc
leave
or
cwtl
adc
adc
lahf
or
fdivrl
sbb
add
loop
xchg
adc
mov
fsubrl
iret
iret
lock
cmp
inc
ljmp
test
mov
push
dec
pop
aam
jp
pop
jg
xchg
test
lock
fnstenv
push
scas
ret
cmp
jp
pop
pushf
xchg
pop
xchg
dec
mov
and
ret
int3
mov
jb
jae
clc
jl
call
sar
mov
fstpt
cld
add
jp
lret
xlat
dec
dec
sub
inc
push
mov
or
enter
jns
mov
int
xor
je
jge
add
and
push
pop
out
iret
lret
ret
pop
add
add
xchg
test
dec
sub
pop
jae
dec
sub
ret
loope
or
mov
aas
jmp
sbb
lret
cwtl
mov
mov
dec
push
aaa
sub
shlb
aaa
data16
dec
jns
sbb
push
add
xchg
pop
mov
xchg
mov
in
repz
mov
and
js
xor
rcll
sub
inc
xor
out
pushf
out
lret
outsl
dec
fistps
pop
icebp
mov
add
dec
hlt
jns
jo
dec
xchg
adc
inc
add
shlb
xor
cmp
xor
pop
dec
xor
xchg
push
and
mov
xchg
fwait
jae
mov
mov
mov
sbb
mov
sub
add
push
rolb
movsl
std
mov
mov
push
test
xchg
int
adc
cli
out
sti
je
mov
or
das
lret
std
bound
movsb
aam
xchg
inc
mov
add
clc
stos
dec
out
movsb
stc
xchg
iret
outsl
popa
dec
mov
daa
inc
cmp
fwait
mov
sbb
testl
mov
jecxz
pushf
inc
lds
fisttpll
sub
ds
enter
cmp
fwait
adc
call
inc
jne
jecxz
in
mov
adcl
int
dec
dec
jle
out
xor
dec
faddl
push
sarl
call
in
dec
adc
xchg
test
and
or
nop
or
xchg
mov
clc
outsb
mov
adc
scas
shll
inc
pop
sub
and
mov
popa
cwtl
pop
pop
ds
mov
ret
imul
sbb
aas
jl
test
shl
out
push
xlat
fs
pushf
mul
stos
cmpb
mov
lock
mov
popf
enter
push
xor
adc
sbb
out
orb
test
popa
mov
fisttpl
enter
mov
insb
xchg
daa
sbb
mov
push
add
adc
jp
inc
sbb
add
cli
sbbb
jp
cmp
fstp
and
sbb
add
mov
xchg
dec
xchg
inc
sub
popa
es
in
out
in
add
hlt
sub
sbb
out
fwait
push
cmp
dec
lock
jmp
int3
mov
ret
repz
insb
adc
dec
jnp
sub
jns
mov
stos
dec
test
scas
xlat
push
push
mov
js
push
ret
fidivs
leave
and
dec
dec
mov
repz
lock
lret
outsb
push
std
out
repz
xchg
sub
inc
push
mov
imul
pop
jns
aad
jno
inc
adc
mov
fcoml
add
mov
popf
xchg
sahf
daa
pop
push
outsb
xchg
dec
dec
sub
mov
xchg
insl
lods
shlb
or
xor
jle
push
xchg
mov
bound
jmp
in
icebp
push
cmc
mov
and
or
dec
and
movups
in
movsb
xorl
xchg
rorl
popf
xor
sbb
push
pop
enter
or
sub
fs
out
push
mov
pushl
jns
in
push
dec
int3
arpl
jecxz
push
xor
push
inc
and
mov
sbb
mov
xchg
inc
sub
hlt
pop
aas
jge
rcr
mov
xchg
pushl
cmp
pop
stc
push
shrl
movsl
push
mov
jg
jns
jmp
aam
cmp
loopne
lea
gs
stc
and
lock
lret
and
lahf
ljmp
daa
leave
mov
xchg
pop
cwtl
hlt
arpl
pop
pushf
mov
and
into
cmp
in
mov
adc
sub
xchg
sahf
jae
push
add
adc
and
daa
nop
and
jno
cs
adc
test
int
repz
scas
jecxz
les
mov
push
ret
jp
and
pop
shrl
push
jp
push
mov
push
dec
aad
mov
fs
pop
stos
fsubrl
push
cmpsb
andb
mov
mov
mov
mov
in
inc
test
mov
in
int3
out
lcall
dec
mov
inc
sti
and
push
loop
out
adc
std
femms
int
sbb
or
rcr
lret
xchg
popf
call
sbb
cmp
je
pop
push
dec
mov
lds
imul
or
test
enter
jmp
cwtl
mov
out
loope
push
js
cmp
mov
push
sub
inc
mov
sub
adc
enter
adc
xor
insl
inc
inc
xchg
push
shlb
lods
scas
fwait
adc
mov
jns
xor
mov
push
or
cmp
insl
or
add
adc
adc
push
or
inc
sarl
scas
out
mov
jp
pop
decl
sbb
lret
pop
sbb
pusha
incl
out
add
pop
cmc
cmpsl
ficomps
popf
aam
cmp
jo
mov
mov
icebp
nop
jns
scas
out
and
adc
jecxz
push
in
out
jo
sbbl
add
lahf
or
pop
pop
aad
mov
ja
popf
jl
test
sbb
fwait
cld
add
and
jo
movsl
dec
push
orl
sub
pop
jecxz
and
cmp
in
scas
jle
xchg
pop
inc
pop
mov
push
aam
jecxz
sbbb
cmp
aas
and
and
or
pop
sbb
cmp
adc
add
lcall
aaa
adc
sub
lock
daa
push
xor
gs
sub
mov
push
je
and
aas
cmp
sbb
push
test
fdivrs
scas
iret
xchg
jne
pop
pop
shll
push
push
or
je
sbb
out
sbb
pop
cld
push
dec
dec
js
pop
xchg
sbb
movsl
out
cltd
jmp
mov
jmp
adc
faddp
mov
jl
cltd
pop
jp
cwtl
mov
sbb
scas
insl
jl
push
repnz
and
je
ljmp
push
cmp
ljmp
aas
loop
push
mov
jmp
add
cs
push
xor
jg
ja
push
clc
lret
ret
lods
mov
xor
mov
rorl
out
mov
test
in
out
mov
cmp
enter
or
jmp
mov
dec
std
adcb
fsubrs
scas
xor
pushf
cli
xlat
or
xor
pop
movsl
gs
pop
lock
jnp
lcall
pop
addb
inc
add
jb
mov
fmull
aas
sub
lods
adc
leave
cwtl
sti
jns
xchg
les
and
std
clc
in
fisttpll
js
movsl
lods
mov
mov
xchg
mov
cmp
push
sbb
out
cs
pop
daa
test
sub
rcrl
mov
stc
xchg
push
sub
mov
add
in
movntq
out
ljmp
ficoms
int
dec
adc
pop
pop
push
cmp
mov
cmp
fcompl
rorl
nop
and
cmpsb
mov
adc
jne
fwait
outsl
inc
jmp
jp
pop
fisubrl
push
pushl
mov
neg
lcall
pop
popa
dec
in
sub
mov
mov
adc
inc
pop
mov
ret
subb
sbb
rcrl
test
push
mov
or
push
sahf
sbb
mov
sarb
mov
out
mov
call
pop
jne
ss
sub
cmp
push
add
iret
push
mov
cmp
scas
mov
jl
jl
xchg
rcrl
mov
outsl
stos
mov
cmp
mov
mov
hlt
sti
rcl
cs
cwtl
scas
aas
sbb
das
lods
mov
adc
lahf
loope
pop
fxch
popa
cmc
sub
cwtl
mov
adc
or
sbb
stos
pop
ja
fimuls
pop
mov
imulb
dec
ljmp
orl
or
iret
add
mov
push
rcrb
xorl
loop
dec
stos
nop
cmp
xchg
mov
sbb
mov
or
xor
sbbl
iret
inc
shlb
or
shl
lds
cmp
lods
inc
xchg
mov
icebp
or
decb
aas
push
or
stos
fildl
fbstp
lret
cltd
push
xchg
je
fists
dec
xor
in
pop
fistpll
insl
cld
movsb
mov
push
mov
xchg
iret
inc
outsl
or
jecxz
xchg
int
outsb
cmp
sub
xor
xor
imull
adc
cltd
pop
inc
icebp
mov
xor
mov
mov
and
aas
dec
and
repnz
sbb
call
inc
jge
inc
push
push
xchg
mov
mov
jp
cltd
inc
cwtl
dec
cmpsb
aad
push
sub
or
cmp
and
cld
rol
push
lahf
stos
gs
pop
or
and
nop
ss
rorb
xor
or
cmpsb
sub
inc
js
sahf
pushf
cmpsl
ljmp
jmp
popf
jns
insl
out
push
or
out
pop
data16
lock
test
imul
std
push
add
pop
xchg
push
jae
ds
mov
xchg
ja
js
xor
xchg
inc
sbb
aaa
cmp
iret
push
sub
aas
xchg
xbegin
out
ja
mov
inc
sbb
cltd
jecxz
pop
adc
push
dec
jae
pop
cltd
xor
aad
jno
cmp
lahf
inc
ret
push
shl
cmpsl
xor
int3
pop
xchg
mov
arpl
xchg
inc
test
pusha
and
lock
inc
mov
ret
loope
push
adc
pop
mov
mov
aad
and
in
pop
xchg
inc
xchg
fwait
rcrb
out
stc
sub
adc
stos
aad
ja
sub
test
push
loope
lret
subl
add
or
xor
bound
aaa
ss
rcl
pop
push
ss
xor
mov
gs
push
cmp
mov
cmpsl
test
xabort
or
push
ss
pop
sti
enter
repz
flds
imul
inc
insb
fnstcw
loope
push
push
ljmp
mov
mov
call
rclb
insb
test
repnz
jnp
pop
out
or
push
push
push
dec
mov
movsl
xor
inc
or
adc
and
xor
and
push
mov
roll
push
or
pop
repz
and
clc
scas
dec
insb
push
stos
and
mov
xor
cld
shll
jae
and
imul
xor
into
das
fstpt
enter
je
mov
cmc
xor
in
xchg
subb
aad
mov
mov
push
add
loopne
ds
cmp
int3
bound
test
mov
aas
jl
add
or
andl
sbbl
mov
idivb
sahf
gs
jmp
pushf
fnstenv
pusha
aaa
dec
loopne
cltd
mov
mov
roll
hlt
pop
pop
push
push
or
xor
into
mov
cs
or
cmp
pop
test
pop
loop
insb
lahf
shrl
or
in
loop
pop
push
pop
inc
notl
adc
ret
xchg
into
pop
fsubrl
test
fstpl
and
lds
mov
std
inc
jecxz
mov
sarb
ljmp
push
xchg
addr16
insb
pop
xor
xor
jmp
mov
out
add
cwtl
hlt
cli
sub
ss
lret
or
jae
aad
sub
jg
lock
cmp
int
cmc
aaa
fwait
or
mov
pop
jns
pop
ret
pop
aam
push
addb
mov
test
add
and
out
shrb
xchg
add
test
fcoms
xor
jl
rcl
add
cmp
stc
lods
test
sub
cwtl
popa
push
pusha
inc
ret
fs
sub
mov
adc
cmp
pop
shll
sahf
ret
es
div
xor
int3
add
pop
lods
sub
mov
cmp
push
cmpl
fmull
das
in
cwtl
xchg
cmp
movsl
xchg
in
fs
cmp
fwait
arpl
jo
test
test
addr16
xor
inc
imul
and
dec
test
dec
fs
xchg
and
sbb
cld
sub
lret
add
xor
out
iret
pop
mov
sub
loop
lods
sahf
arpl
leave
mov
repnz
outsb
mov
dec
icebp
adc
shrb
push
push
or
movsb
xor
jne
cmp
outsl
bound
add
xorl
es
adc
or
enter
iret
out
dec
and
data16
mov
push
ret
inc
inc
push
lahf
mov
jbe
ja
push
mov
outsb
in
shrb
loope
jecxz
pop
add
fimull
push
lods
sub
dec
push
filds
sbb
out
jae
mov
arpl
or
mov
std
scas
aas
rclb
in
cmp
xchg
push
sub
cmc
xor
pop
out
sbb
xor
sbb
insl
mov
or
pop
outsl
dec
mov
stc
mov
fstl
das
and
or
cmp
insb
and
mov
add
ljmp
adc
lods
and
cmp
mov
jmp
cs
test
loopne
shlb
cmp
arpl
push
cmp
mov
insb
mov
sbb
js
pushf
add
iret
fbld
push
sub
mov
rolb
ret
sti
mov
push
sub
inc
and
stos
incl
xchg
xor
pop
push
xchg
cmp
je
shrb
and
hlt
scas
adc
fmuls
test
cmc
pop
add
clc
mov
xchg
mov
push
cmp
mov
lds
movl
in
mov
clc
mov
add
push
sbb
sub
adc
mov
ja
test
pop
shl
sub
inc
loope
xchg
pusha
mov
mov
mov
icebp
or
mov
shl
mov
call
daa
fists
mov
and
inc
test
out
call
ljmp
and
xor
cmp
ret
mov
or
xchg
in
inc
cld
aas
lahf
cs
dec
rclb
xor
or
je
sbb
pop
das
push
arpl
cs
fs
pop
pop
cmp
ss
mov
mov
sbb
fwait
sub
mov
push
incb
mov
rcll
push
mov
loop
out
ret
xor
js
movsb
aad
xor
pop
dec
movsb
sub
lock
push
sbb
arpl
jecxz
and
adc
daa
rolb
add
out
aad
loopne
in
ret
mov
pop
imul
call
sti
cmpsb
out
sub
or
out
inc
mov
out
push
enter
inc
out
mov
cmpsl
leave
xlat
dec
push
mov
cmp
jne
jnp
test
push
ret
test
subb
lret
xor
ret
push
les
cwtl
call
inc
mov
nop
test
mov
xor
adc
push
adc
ret
jo
dec
mov
imul
mov
sub
scas
in
and
xchg
mov
adc
pop
popa
ljmp
mov
inc
or
psrlq
pop
xchg
mov
ja
adc
scas
shlb
add
ljmp
ret
mov
push
enter
nop
inc
popa
incl
imul
xchg
or
cli
mov
inc
or
xchg
push
out
inc
arpl
popa
sub
mov
mov
rcll
into
das
pop
push
mov
or
in
lods
or
xchg
clc
jne
andl
mov
mov
icebp
jns
into
in
pop
xor
inc
daa
rclb
pop
sub
sbb
js
addr16
pop
ja
ss
unpckhps
jge
mov
es
xchg
out
dec
push
repz
cmp
xlat
push
jg
mov
lea
dec
aad
mov
in
in
mov
imul
loope
cmc
adc
mov
inc
enter
adc
lea
xor
sub
shll
adc
or
jle
push
sarb
test
adc
cmp
xchg
popa
cmpsl
mov
xchg
jo
decl
pop
push
cld
push
fdivr
dec
sbb
cli
pop
mov
jnp
in
push
add
rcl
jecxz
mov
xor
inc
and
popa
pusha
jo
adc
roll
les
in
dec
dec
push
shrb
mov
push
mov
jb
ds
iret
cwtl
repnz
es
in
mov
sbbb
jo
and
ret
mov
mov
popa
add
aaa
cmpl
stos
aam
or
push
add
sub
mov
push
add
adc
sbb
push
xor
pop
adc
and
mov
add
sub
sub
imul
jle
mov
fcmovu
xchg
lods
push
enter
out
bound
gs
push
dec
mov
mov
or
and
inc
sti
cli
push
xchg
pop
movsb
add
cltd
scas
or
jo
jb
inc
ljmp
mov
xchg
aas
cmp
xorb
in
cwtl
cmp
inc
inc
pop
or
add
mov
leave
jecxz
bswap
pushf
popf
insl
sbb
dec
iret
pop
jmp
xchg
mov
jbe
xchg
outsl
out
lea
data16
stos
push
enter
and
xor
insb
sub
pop
call
xor
dec
mov
adc
data16
sub
mov
inc
jnp
jnp
add
inc
xor
lea
jne
fcomp
xchg
and
gs
es
pop
mov
jno
in
mov
add
adc
test
mov
pop
ret
push
ja
push
jbe
jl,pn
and
cmp
negb
aam
mov
js
jne
or
dec
cmp
ja
jp
sub
adc
lock
cmc
ja
adc
or
push
xchg
and
xchg
call
in
dec
push
cmc
mov
jo
popa
xor
nop
jecxz
and
pop
add
jo
inc
and
pop
les
add
ja
je
in
inc
cmpsl
in
and
lods
mov
jnp
cmpsl
and
adc
in
int
popa
mov
lcall
insl
sub
clc
fidivrs
jmp
jecxz
icebp
ds
pop
jle
jae
jnp
mov
sub
mov
in
je
bound
push
shlb
aad
jae
aas
adc
push
sub
jne
lea
mov
xchg
test
ds
fwait
mov
es
pop
popa
sub
inc
fs
decb
mov
subb
fcmovnu
leave
aad
cmp
sbb
aaa
dec
popf
adc
mov
push
lods
outsl
xchg
xchg
clc
mov
fidivl
cmp
push
push
mov
push
hlt
sub
out
imul
mov
inc
add
pop
das
mov
aaa
xor
sti
js
xorl
lcall
cs
dec
cs
push
popa
in
fcomi
ss
mov
xor
pusha
iret
lds
imul
enterw
mov
cmpsb
daa
cmpsb
jo
cmp
push
addb
inc
leave
and
inc
xchg
lock
pop
pop
call
in
lds
jnp
jbe
test
mov
sbbb
movsb
or
ss
frstor
fwait
mov
das
jp
int
aad
xlat
and
push
dec
or
xor
mov
movsl
xor
lret
and
out
loope
dec
cld
imul
sbb
fs
cmp
xor
sbb
inc
dec
daa
clc
adc
pop
sub
dec
pop
jecxz
ret
dec
lret
mov
pop
mov
mov
ret
push
ret
push
aas
sub
enter
sbb
mov
sbb
and
hlt
loop
pop
pop
clc
mov
mov
dec
dec
pop
in
lods
test
call
pop
mov
popf
and
and
push
xor
mov
arpl
push
lods
or
in
fwait
sub
mov
xor
dec
dec
mov
xchg
lea
lods
loopne
mov
enter
mov
shll
mov
scas
test
sbb
daa
pop
jne
jmp
xor
xchg
sub
mov
rolb
pop
or
jge
xor
add
mov
popf
sub
mov
jg
aas
in
pop
js
jae
cmp
mov
les
mov
push
call
loop
ret
cmc
pusha
inc
xorb
jl
icebp
popa
xor
dec
jne
xchg
movsb
andl
shll
cmpsl
jo
in
insb
int3
popf
sub
push
jnp
jmp
mov
mov
pop
inc
lret
push
rclb
lds
xchg
or
pop
repnz
dec
xor
imul
stos
aaa
jno
stc
je
adc
sub
cmp
cmp
and
sub
lret
and
into
or
test
adc
subl
inc
pushl
or
push
movsb
and
outsb
sarl
jae
xchg
scas
cmp
por
mov
jmp
shll
jmp
enter
mov
aad
jle
hlt
push
popa
inc
out
fstpl
addr16
mov
lods
adc
faddp
cmp
fldcw
pushl
cmp
sbb
pusha
mov
mov
mov
in
aad
mov
xchg
mov
sbb
dec
call
or
mov
inc
xchg
js
sub
mov
jbe
push
pop
adc
cmp
jne
roll
and
push
ja
jbe
push
sti
icebp
dec
stc
aad
push
push
out
mov
ss
jno
xor
and
sbb
fcmovbe
dec
dec
jge
pop
js
xchg
xchg
push
in
inc
fadds
sub
add
push
push
mov
nop
pop
stos
fadd
insl
fcompl
xor
jmp
xor
rorl
push
lds
push
mov
jmp
jo
addl
ds
repnz
aaa
pop
cli
cmp
jo
add
ljmp
hlt
in
or
data16
das
pop
mov
or
int
xor
xchg
jl
xor
movsb
pop
nop
ret
pop
adc
inc
cmp
lock
shlb
scas
sbb
push
xor
ret
scas
push
add
inc
hlt
cmc
lret
dec
pop
inc
pop
xchg
lret
push
mov
insl
ss
daa
mov
adc
add
mov
dec
pushf
mov
xchg
pop
bound
mov
push
mov
mov
xor
push
mov
daa
repz
into
idivl
les
pop
cmpsl
xor
shrl
push
mov
pop
lods
shlb
out
pop
sub
xor
dec
mov
inc
push
xor
cmp
mov
aad
add
ja
jp,pt
and
popf
fdivrs
sub
cmpb
xor
fstl
movsb
ficoms
sub
icebp
pushf
lahf
xchg
mov
into
dec
jmp
jne
mov
mov
adc
lock
add
addr16
sbb
xor
insb
dec
add
jbe
cmpsb
pop
hlt
lahf
fldenv
das
adcb
push
fcoml
inc
jns
add
mov
mov
jbe
cmp
sti
andl
andb
fsubl
fs
stos
rolb
cmp
xor
pop
add
data16
sub
in
cld
test
aas
test
sahf
inc
imul
out
lods
xor
scas
mov
adc
pop
cmpsl
int3
or
xchg
xchg
or
fcomps
shll
outsb
sub
ret
adc
hlt
inc
pop
filds
ret
sbb
pop
inc
ljmp
fs
xor
mov
rcll
dec
enter
cld
push
pop
pop
adc
xor
jo
scas
xorb
mov
cmp
je
add
or
jmp
add
enter
ss
into
test
push
iret
cmp
sbb
xorl
outsl
arpl
jnp
movsb
mov
inc
adc
outsb
mov
sub
jge
adc
loopne
ljmp
scas
push
mov
mov
xchg
mov
vmovdqu
js
dec
lahf
push
cmp
ret
dec
jnp
adc
pop
leave
xor
sbb
push
fwait
insb
cs
shlb
dec
lea
jb
jns
aaa
pop
iret
push
movsl
int
jecxz
loop
mov
fistpl
jb
imul
cmp
cmpl
dec
je
dec
sbb
insl
dec
adc
lock
dec
adc
jle
enter
pop
mov
jp
xchg
ss
loope
sbb
movsb
pusha
inc
mov
pop
xor
test
xor
cmpl
sub
jns
lret
inc
sub
shlb
push
std
ja
movsl
and
es
cmp
lods
jnp
insb
inc
ret
addl
xor
scas
or
push
mov
push
lds
push
sti
test
xor
xor
int3
xor
or
mov
les
test
cmp
dec
adc
pop
add
jge
shrb
rorb
mov
aam
jmp
std
test
xor
push
fidivl
aaa
bound
and
mov
out
test
fsubs
sub
mov
f2xm1
cmc
jae
pushf
xchg
inc
pushf
shll
subb
push
cmpsl
sbb
push
pop
mov
arpl
psllq
mov
adc
sbb
jp
mov
shll
adc
jmp
dec
push
loop
push
inc
and
push
repnz
mov
aas
and
hlt
mul
pop
xchg
incb
jp
push
cmc
pop
add
outsl
add
dec
data16
xchg
or
test
inc
inc
in
fistl
pop
ret
stos
jl
clc
xor
insl
cld
aas
inc
int
ss
daa
pushf
push
mov
andl
adc
test
or
lret
and
xlat
jl
inc
cmp
xchg
mov
push
movsb
inc
fcoml
dec
xchg
inc
pop
sbb
test
jp
jg
call
lods
ror
call
xchg
mov
jmp
fisttpl
cmp
test
xchg
sbb
mov
icebp
sbbl
int3
in
or
fcomip
xlat
test
jbe
push
pop
mov
loop
mov
mov
fwait
repz
pop
pop
jmp
jecxz
cltd
xchg
cmp
cmp
iret
shll
lea
test
pop
lret
mov
ret
mov
mov
fimuls
call
mov
pop
mov
xchg
aam
insl
out
enter
and
xlat
cmc
out
or
icebp
int3
jp
add
mov
inc
xchg
xchg
es
rclb
sbb
stos
jb
mov
xchg
clc
pop
xor
or
loopne
inc
fmuls
jns
xchg
movsl
jns
ss
mov
mov
cwtl
popf
mov
jp
lea
xchg
mov
das
dec
cs
clc
jae
inc
jns
cmpsb
cmpsb
shrb
sub
stos
shll
mov
movzbl
mov
int
rcll
cwtl
xchg
mov
sub
adc
sbb
lahf
arpl
or
push
adc
dec
push
and
inc
mov
repnz
jo
mov
rep
mov
and
push
xorb
icebp
frstor
cmp
push
cmpb
jg
push
jmp
stos
fwait
lea
mov
adc
dec
fstpl
cmp
mov
add
cmp
in
xor
int3
aam
lret
or
dec
xchg
jge
jae
test
cmp
mov
movsb
push
movzbl
mov
nop
das
notb
sbbl
sti
fstps
xor
xchg
or
xchg
addr16
ja
fsubrs
rol
out
dec
xor
stos
pusha
pop
cs
outsb
imul
scas
mov
clc
mov
movsl
cld
pop
inc
nop
mov
dec
sbb
jecxz
lock
mov
adc
ret
xor
add
sub
jae
and
movsb
sub
dec
imul
xchg
adc
dec
inc
cld
adc
add
fidivrl
mov
or
mov
jb
push
jae
inc
fucomi
dec
loop
push
jno
fcoml
push
fwait
jmp
jne
into
cmpsl
ret
pop
adc
push
cmc
call
jp
add
addr16
repnz
or
jbe
jge
mov
das
sub
pushf
fisubrs
jp
in
jae
gs
cmpsl
ljmp
arpl
mov
push
into
sbb
subl
add
mov
inc
fcmove
cmc
loope
stc
dec
popf
arpl
arpl
cld
cmpsl
push
jae
push
push
jns
mov
pop
enter
cmc
mov
or
es
in
lcall
pop
mov
shlb
dec
rol
mov
clc
repnz
cltd
test
std
mov
or
lods
xchg
push
xchg
insl
insb
jae
lea
xchg
jmp
sub
fistl
imul
movsb
clc
ds
pop
pop
sub
inc
call
out
mov
xchg
fs
pop
add
std
je
jp
jns
iret
in
sub
outsb
jp
movsb
ss
paddsw
jnp
cmpsl
lea
es
xor
xchg
jge
or
sub
dec
test
scas
cs
cmc
xchg
and
push
lds
fadds
mov
sub
xor
pop
xlat
mov
push
fcmovne
cs
js
sub
imul
iretw
ret
add
stos
stc
xchg
dec
adc
dec
push
pushf
ret
stos
les
adc
stc
push
insl
insl
xchg
lods
sti
lock
das
pop
fsubrl
add
adc
push
dec
in
pop
xchg
mov
ds
cmp
fsubs
adc
push
test
inc
mov
or
stos
fwait
inc
aad
adc
jbe
fwait
test
dec
repz
sbb
sub
sarb
popf
pop
rorl
cmpsl
and
or
shlb
adc
cmpb
js
outsl
fsubr
loope
add
lcall
movsb
jns
mov
inc
and
aam
xor
jecxz
sub
or
stos
adc
in
cmp
insb
add
sbb
rcll
pop
insl
int3
adc
sbb
mov
fwait
jmp
aam
pop
xchg
sbb
mov
push
roll
add
cmp
fwait
in
mov
mov
mov
imul
sub
mov
and
pop
int
nop
out
mov
je
lock
jae
mov
lods
scas
loope
fnstcw
fcmovnu
xor
rolb
xchg
pop
out
dec
insl
add
scas
mov
out
pushf
dec
bound
sub
jne
xor
cmpsb
push
mov
aaa
and
adc
push
stc
xor
inc
jg
push
xchg
stc
xor
or
jae
xlat
roll
dec
int
pushl
adc
inc
and
outsl
mov
decl
sub
insb
imul
ret
roll
add
cld
xor
jns
mov
add
shlb
or
jb
mov
push
adc
and
and
mov
pushf
and
test
je
mov
addr16
out
add
ja
lds
cmpsl
push
stc
out
shlb
movsb
ss
aaa
out
or
jb
sarl
ljmp
or
lods
rcll
pusha
lds
xor
mov
and
fidivrs
push
push
in
dec
jle
adc
scas
add
sahf
add
mov
cmp
and
dec
inc
fimuls
loope
daa
orl
push
sub
ret
lods
lods
mov
add
mov
dec
jnp
pushf
addr16
test
push
push
dec
add
and
inc
xchg
dec
push
mulb
adcl
adc
in
push
aas
out
lods
jp
xchg
ds
imul
pop
fldl
push
ljmp
out
inc
adc
jg
push
sub
dec
fisttpll
xchg
pop
cmp
in
xchg
mov
nop
mov
jnp
jp
inc
jo
test
in
cli
out
aaa
pushf
mov
adc
shrb
mov
cmp
jns
cmc
ss
hlt
xchg
sbb
lret
xlat
lods
push
or
pop
vrcpps
rorl
cmp
stos
xchg
xlat
repz
clc
aas
mov
adc
pop
push
xor
popa
push
sti
mov
pop
nop
pop
fdiv
xchg
inc
mov
ds
in
sbb
xchg
imul
mov
jmp
ljmp
or
ja
ljmp
inc
pop
int
sbb
repz
stos
sti
iret
push
mov
fst
dec
iret
inc
mov
dec
xchg
mov
add
or
inc
push
mov
in
xor
rol
clc
inc
test
jp
jg
or
xchg
xor
mov
incl
add
jae
lret
pop
pusha
aas
cmp
and
in
and
jno
jg
js
test
jbe
sbbl
pop
insl
xor
jl
xchg
lahf
out
mov
and
aad
leave
xchg
rorl
out
aam
sbb
cltd
test
mov
cs
pop
pop
pop
ja
rcll
iret
pop
mov
add
orb
fwait
popa
shrb
push
imul
cmp
roll
inc
xor
mov
test
fildll
or
cltd
jo,pn
xor
push
xor
dec
pop
dec
inc
mov
mov
adc
push
mov
mov
addb
mov
push
sbb
sub
std
fsubrl
add
cmp
enter
dec
jl
add
xor
sub
in
inc
xor
stos
test
dec
xchg
add
loopne
in
mov
mov
pop
dec
loope
inc
inc
jne
push
sub
pushf
xchg
and
or
jbe
xor
xchg
rcrl
jl
and
je
outsb
mov
pop
subl
xchg
popf
loop
sub
ret
jmp
lret
pop
decl
push
inc
jo
je
push
scas
jl
imul
push
inc
and
xchg
cltd
mov
outsb
pop
sbb
test
aas
mov
mov
cs
aas
inc
outsb
adc
fwait
push
pop
mov
test
push
out
mov
js
mov
jmp
js
or
pop
aad
iret
jg
pop
add
sub
out
push
aam
jne
and
adc
mov
in
push
and
ljmp
rol
popf
dec
cltd
loop
mov
in
pusha
sbb
jge
xlat
loop
push
mov
mov
icebp
fnstsw
xchg
ja
add
xchg
sub
inc
mov
xchg
outsb
push
roll
imul
icebp
test
loopne
push
mov
pop
mov
mov
loop
test
testl
mov
movsb
xchg
insb
add
jecxz
fwait
sub
push
out
dec
subb
pop
mov
fidivrs
cld
push
jp
dec
not
cmp
and
icebp
mov
jne
inc
int
fst
inc
stos
fnsave
shrb
pop
xor
fsubl
lahf
icebp
adc
adc
jg
lcall
shll
sbb
jge
subl
push
ret
bts
sarl
mov
fwait
hlt
jl
mov
mov
shll
push
aad
cmp
imull
ljmp
and
lea
dec
jl
lret
lret
sub
dec
leave
mov
and
xlat
fisttpll
popa
cs
xchg
imul
sub
fsubl
push
icebp
out
push
addr16
cmp
mov
jne
mov
rcrl
and
sub
int3
bnd
aaa
sbb
les
inc
aad
pop
fwait
imul
int3
mov
pop
sub
out
adc
daa
push
dec
daa
pop
call
inc
hlt
aas
xor
mov
mov
sahf
fs
test
in
in
test
pop
pop
xchg
sub
cli
fldcw
call
sarb
sbb
sub
dec
push
or
xlat
mov
neg
push
sub
and
movsb
orl
aam
xor
in
dec
rcrb
xchg
jl
sub
aad
jg
inc
pushf
mov
sub
mov
cmc
imul
mov
pusha
aad
adc
xor
dec
pop
sbb
insl
in
push
dec
mov
pushf
push
add
aas
cmp
mov
xor
dec
jne
imulb
stos
popa
aad
bound
fldcw
and
push
xchg
inc
insb
and
addr16
inc
mov
sub
or
xlat
adc
add
outsb
lahf
loopne
sbb
mov
popf
dec
sbb
push
pop
scas
or
loope
pop
adc
cs
sbb
lds
icebp
adc
add
add
add
xchg
xor
mov
xchg
and
push
stc
xchg
add
lock
stos
mov
fs
jae
loope
out
ficoml
sbb
xor
sub
cmpsb
sub
jnp
out
cld
movsb
xchg
push
insb
fs
aam
push
push
ret
call
cmp
inc
mull
shl
and
push
sbb
pusha
jmp
ljmp
inc
out
out
sub
in
shrb
lahf
fldt
cs
and
cmp
push
xor
and
fldenv
mov
or
das
ret
leave
negl
ret
inc
lea
insl
loopne
and
sub
les
repz
scas
dec
aam
inc
pushf
gs
ror
xlat
ret
dec
test
dec
cmpsl
shlb
in
mov
test
xchg
and
arpl
xchg
and
stos
dec
and
add
or
sbb
xlat
addb
jno
push
clc
out
xor
mov
aaa
jno
xor
add
mov
and
jle
ror
add
cmpsl
fcmovb
cmpb
call
ret
dec
stos
sub
out
es
sbb
push
cmp
sbb
ja
inc
mov
adc
push
sub
fidivs
push
fdivs
fistps
sub
cmp
dec
ficoms
fwait
cmp
jl
pop
rcrb
faddl
push
cmp
in
scas
xchg
adc
ret
fadd
push
fisttpll
shlb
add
and
inc
mov
test
mov
cmc
mov
push
mov
jmp
push
push
xchg
pop
or
scas
dec
xor
stc
daa
or
xchg
xchg
mov
inc
pushf
sti
daa
push
xchg
stos
inc
shll
inc
adc
ret
rol
int3
lret
jne
pop
xor
in
mov
jnp
inc
aas
pop
ds
pop
movsb
bound
xchg
loop
xor
ret
std
outsl
mov
pushf
fidivl
outsl
fs
xor
imul
push
xchg
adc
clc
int
mov
inc
ljmp
out
test
pop
repz
aad
sbb
sub
js
jle
or
sbb
in
popa
mov
inc
lds
decl
test
loope
sbb
cmp
ffree
mov
lret
inc
std
jl
dec
rcr
fcompl
push
daa
test
adc
cmp
pop
mov
lock
in
rcl
cli
pop
push
scas
pop
inc
sbb
push
jmp
push
jg
arpl
stos
adc
push
cmp
or
or
cmpsl
mov
call
sub
mov
orb
xchg
sub
pop
outsb
xchg
sbb
cs
enter
out
cltd
mov
xlat
mov
pop
xchg
add
lods
repz
idivl
mov
dec
push
sbb
or
xor
push
es
adc
xlat
mov
sbb
push
jp
mov
dec
xchg
fnstenv
xchg
lea
jnp
clc
cld
xlat
xchg
or
dec
push
imul
lahf
pop
cmp
inc
mov
mov
aad
fiaddl
popa
pop
mov
jge
dec
pop
fs
in
adc
scas
jl
popl
addr16
pushw
jmp
or
mov
xor
xchg
ret
cmp
test
nopl
aas
out
push
test
pop
fwait
or
add
xor
mov
les
pop
ljmp
mov
dec
xor
mov
fsts
mov
adc
inc
mov
sbb
es
or
mov
cmp
dec
jl
cltd
xlat
bound
addr16
inc
mov
mov
inc
xchg
mov
mov
xchg
cld
xchg
cli
ljmp
inc
fstpt
push
mov
int
clc
in
pop
dec
daa
mov
lock
mov
push
stos
in
lods
scas
test
test
outsl
sbb
mov
push
shl
add
out
rcrb
cmp
lods
jns
jae
fsubrp
mov
sbb
mov
jecxz
adc
test
lock
orl
lds
shll
cmp
sub
in
ljmp
sub
jb
inc
sub
and
dec
outsb
inc
cmp
lods
data16
jno
or
and
xor
mov
enter
in
dec
pop
loop
adc
cmp
repz
dec
sub
push
cmpsl
int
mov
movsl
pop
and
es
xor
push
insb
outsl
or
imul
or
push
add
adc
lods
cwtl
out
lahf
loop
bound
xchg
sbb
adc
cmc
ret
push
sub
loope
enter
testb
mov
sub
xor
mov
pop
mov
cmc
mov
or
push
lret
js
or
subb
lods
lret
pusha
dec
pop
jns
xchg
or
pop
inc
or
in
sbb
xchg
cltd
cmc
jns
push
fs
xchg
push
jl
xor
enter
lcall
dec
sti
in
lret
cltd
loopne
xchg
adc
movsb
mov
stos
sahf
les
inc
orb
fnstcw
incb
add
popa
mov
aas
inc
xlat
int3
jecxz
into
shl
pop
pop
mov
icebp
mov
cld
sub
shrb
pop
pop
push
mov
cmp
sub
loopne
rclb
mov
xchg
stc
insl
in
arpl
sub
xchg
mov
xchg
fsubrs
mov
gs
adc
dec
xlat
mov
lahf
push
xchg
cli
repz
xor
dec
sub
pop
arpl
and
adc
in
cmpsl
dec
sub
mov
in
sarl
ss
int
cmp
mov
fs
xchg
and
mov
pop
in
lcall
ret
and
xchg
inc
and
cmp
scas
lret
pop
dec
adc
push
notb
cmc
mov
shrb
mov
shlb
clc
mov
cld
push
mov
sbb
sti
mov
and
mov
cmp
dec
xor
aas
jp
imul
or
lods
dec
xchg
inc
push
sbb
fnsave
sbb
int
clc
enter
add
hlt
xchg
fadds
and
inc
ret
pushf
cmp
rcll
xchg
mov
out
add
insb
push
dec
addr16
cmp
adc
pop
loop
out
push
arpl
push
or
jmp
aam
sbb
mov
lea
sbb
jns
or
sti
lahf
rclb
dec
std
jb
dec
lretw
testb
neg
xchg
inc
out
inc
repz
repz
js
addl
les
push
lcall
sbb
popa
dec
shl
pop
cmp
mov
jne
js
jnp
cs
sbb
cmp
and
mov
ret
ljmp
pop
mov
inc
jmp
lea
enter
in
test
lods
lock
daa
dec
sub
mov
push
pop
add
or
xor
inc
cmp
popf
xchg
cmp
mov
decl
aas
call
lds
push
stos
sub
xchg
movswl
fcomip
lret
aas
icebp
cltd
pop
scas
clc
popl
orl
sarb
push
scas
pop
cwtl
pop
pop
repnz
mov
hlt
mov
cmp
cli
adc
test
sti
cmp
pop
cli
fcmovne
or
movsl
jmp
mov
in
repz
xor
mov
in
fdivr
mov
add
sbb
inc
add
ljmp
cmpsl
adc
dec
stos
neg
cld
loope
movsl
movsb
xchg
xor
and
sub
jb
jno
mov
sub
loopne
cmp
mov
imul
js
cmp
ss
nop
in
mov
cmp
outsb
jns
pop
outsb
pop
or
cmp
or
pop
in
jo
sbb
imul
sbb
adc
mov
inc
cmp
mov
or
mov
mov
frstor
sbb
in
daa
fwait
das
and
mov
sub
mov
icebp
cmc
mov
adc
pop
mov
inc
addr16
incb
pop
andl
push
lcall
lock
or
mov
pop
movl
cltd
daa
mov
imul
arpl
push
ds
movsl
jns
sahf
mov
xlat
xlat
mov
sbb
dec
push
mov
pushf
xchg
adc
jg
fidivl
adc
mov
sub
cmp
movsl
stos
pop
daa
cmovs
xor
negb
mov
xchg
imul
xlat
mov
adc
cli
or
jmp
fwait
mov
add
mov
jae
mov
push
xor
lds
and
pop
shrl
lock
xchg
or
ja
or
mov
xor
jp
mov
movsl
jo
gs
mov
fnop
xor
lcall
push
push
sub
adc
mov
stos
dec
sti
xchg
pop
inc
push
ret
add
out
push
shlb
inc
jno
iret
sbb
enter
dec
sbb
inc
push
mov
add
stos
fmull
mov
cmp
jmp
xchg
cmp
inc
xor
inc
jae
test
sbb
or
xchg
ljmp
sub
dec
shrb
adc
sahf
or
mov
pop
rclb
sbb
mov
js
push
sub
shlb
xor
popf
sub
into
aas
adc
xor
pop
push
jl
push
push
or
aam
fwait
mov
into
lret
and
mov
pop
jp
and
clc
mov
in
aaa
das
iret
push
mov
mov
dec
mov
sub
pop
repz
mov
lock
out
jb
mov
dec
xlat
mov
cmp
mov
jo
mov
pop
push
out
pop
xor
xchg
movsb
cli
adc
jmp
scas
jmp
pop
push
inc
mov
scas
std
int
inc
data16
pusha
inc
and
pop
std
xor
pop
jp,pt
adc
mov
inc
pop
aam
or
and
shrl
and
fs
xor
test
cli
xchg
lcall
cld
jne
out
mov
jecxz
add
jae
fstps
jo
sbb
mov
xor
push
pop
cs
push
mov
mov
insb
sbb
cmp
sbb
and
add
push
cmp
jno
xor
fs
or
mov
dec
cmp
lret
and
mov
aaa
data16
mov
and
in
and
call
orb
test
je
int3
ds
int3
lods
fistpl
jo
xchg
in
jbe
std
sbb
arpl
sbb
daa
or
jbe
rolb
icebp
les
fdivrp
lret
aad
out
ffree
jg
inc
pop
jecxz
cmpsl
sbb
xorb
shrb
andb
mov
push
xor
rolb
pop
or
jmp
xchg
ss
into
adc
icebp
pop
shlb
testb
test
fisttps
xor
or
jo
cmp
and
mov
sbb
push
push
inc
inc
aad
pop
sbb
sbb
cld
jmp
insb
daa
dec
aad
nop
and
and
add
scas
mov
mov
mov
insb
andb
fsubl
or
inc
dec
adc
cmp
jae
jo
or
leave
add
jg
push
sbb
jle
adc
lret
rcrl
pop
repnz
dec
xchg
adc
xor
sahf
xchg
xchg
insb
inc
push
sub
cmp
sti
outsl
ja
cmp
adcb
jae
insb
icebp
xchg
mov
call
je
xchg
addb
sti
iret
adc
loope
outsl
jg
cmp
and
shlb
cmp
pop
jge
ds
insb
cld
mov
mov
or
push
sbb
add
loope
loop
push
xchg
mov
pop
pop
mov
push
mov
addr16
add
jp
xchg
insb
dec
push
or
cmp
int
and
pop
sbb
cmp
dec
int3
add
inc
xchg
or
xchg
xor
fcompl
test
and
hlt
fistpl
std
or
mulb
xlat
add
iret
jbe
cs
jbe
pop
out
dec
bts
dec
sbbb
movsb
subb
dec
cmp
rorb
sub
lds
mov
gs
cmp
inc
hlt
mov
movsb
mov
add
mov
dec
xchg
push
inc
pushf
mov
loop
es
fmull
push
add
aas
and
adc
jecxz
mov
mov
std
or
mov
inc
adcb
insl
addr16
dec
dec
out
pop
lret
pop
mov
out
popa
data16
imul
jnp
sbb
sub
es
jp
ss
inc
sub
scas
loopne
fs
ret
fs
test
jbe
cmpsl
dec
popa
je
outsb
stc
push
rcl
cmp
mov
mov
and
bnd
inc
xchg
leave
or
movsb
lods
aas
mov
inc
fld
jle
rcr
out
les
jnp
inc
pop
subb
pop
cmp
adc
push
jno
mov
icebp
jp
add
loopne
fnsave
scas
btc
lea
push
lahf
cmp
enter
mov
cmp
pusha
xor
pop
dec
dec
andb
cli
sahf
jno
cmp
mov
cld
out
push
xchg
xchg
mov
xor
fldenv
clc
jnp
rorb
ljmp
sbb
negb
cmp
ss
popa
out
sahf
cs
mov
scas
adc
and
outsb
push
xor
call
sahf
jle
test
in
out
pusha
and
gs
stos
adc
loopne
jl
scas
xchg
in
ret
cmp
mov
test
out
int3
mov
push
stc
pusha
insb
dec
push
ds
shl
and
mov
adc
aad
adc
jae
jae
es
xor
pop
fucom
aam
mov
testl
scas
aam
adc
or
mov
aas
lods
inc
les
dec
nop
mov
nop
insb
in
inc
mulb
ret
hlt
repz
addl
fbstp
shlb
adc
aaa
iret
and
lods
out
popf
insl
or
int3
mov
sarl
lods
jl
sbb
ljmp
sbb
fs
add
xorb
repnz
imul
xor
jbe
adc
push
es
xlat
jae
mov
lods
test
scas
iret
sbb
sub
cmp
mov
mov
cltd
sub
icebp
stos
clc
rorl
es
insl
xchg
sahf
xlat
cmc
pop
inc
std
and
mov
addr16
int3
pop
inc
jns
mov
push
xor
sub
xor
jecxz
cmp
outsb
pop
push
cs
sbb
mov
ds
jo
std
fdivr
jns
xchg
fstpl
jge
dec
mov
cmpsb
jnp
lods
sbb
stc
icebp
push
lahf
lret
xchg
xchg
jge
lds
adc
mov
in
mov
divb
into
fwait
cmp
pushf
loopne
pop
pop
jp
jecxz
mov
sub
loope
sbb
lods
fwait
pop
insl
divl
mov
icebp
cmp
dec
daa
sahf
jns
bound
aam
push
xor
fldt
mov
adc
sub
bound
lock
or
xchg
pop
idiv
push
sbbl
mov
cmp
mov
xchg
fs
pop
inc
xchg
push
clc
add
out
lods
jae
stos
insb
inc
test
movsl
mov
fcoms
leave
jmp
call
icebp
out
cmp
xor
test
leave
sbb
out
stos
pop
aas
push
loopne
push
lock
push
pop
mov
mov
dec
fs
mov
pop
ret
test
repz
and
xor
gs
leave
jle
addr16
or
jp
addr16
lock
xor
rclb
mov
ret
mov
mov
jnp
ss
push
jge
sbb
jns
mov
add
push
test
iret
or
jmp
add
xchg
sbb
insl
pop
int3
pop
jnp
addr16
shll
inc
stc
push
and
frstor
cmp
xor
sahf
sub
movsb
mov
movsb
mov
mov
mov
outsb
fisubrl
jne
lret
inc
add
fwait
inc
xor
jp
xchg
lahf
and
loope
push
sbb
push
xchg
adc
mov
cmp
lea
xor
aaa
mov
pop
repnz
xor
je
push
imul
lock
push
sbb
sub
dec
mov
sbb
jno
js
jl
ret
lret
les
adc
xor
push
push
pop
int3
js
xchg
add
test
dec
jno
mov
fiadds
das
mov
in
jl
push
xchg
fcomi
or
xor
rolb
push
xchg
xchg
data16
popa
xchg
mov
stos
icebp
and
xor
iret
pusha
xor
sti
and
sub
imul
pop
in
dec
clc
jp
and
inc
test
out
popa
pop
or
adc
leave
or
sub
push
jnp
mov
js
jmp
enter
fistpll
jle
cmpsb
pop
fprem
mov
shll
push
fldenv
repnz
sub
lret
outsb
decb
sub
adc
es
cmp
mov
push
bound
xchg
jnp
cmpsb
mov
pushf
shll
lahf
xchg
or
lock
pop
insb
leave
fs
movsl
dec
ficomps
out
jb
xchg
pop
push
cld
pop
mov
jb
fistpl
inc
or
arpl
adc
cmp
rdmsr
mov
outsl
cmp
clc
add
push
lods
into
xchg
pop
mov
lods
xchg
sub
adcb
cmc
jae
gs
xchg
repnz
out
enter
pop
dec
cmpsb
loop
movsb
push
shlb
mov
movsl
xor
stc
std
inc
mov
xor
das
jp
jecxz
sub
in
jae
pop
or
movl
and
sub
sub
stos
int3
incl
and
sbb
aad
mulb
xor
cmp
aad
inc
mov
cld
orl
pop
es
test
xor
pop
sbb
iret
cwtl
lret
adc
adc
mov
pushf
adc
push
lret
fstl
lret
out
jl
mov
sar
test
cli
push
jns
inc
xor
pop
lea
pop
mov
aad
inc
cmp
add
xlat
xchg
arpl
lock
push
stos
int3
push
pop
push
mov
mov
ret
inc
enter
icebp
fnstsw
jge
jns
add
popf
subl
leave
ss
mov
int3
pop
out
fiadds
xor
adc
sbb
cs
dec
mov
stc
lret
pop
add
and
lret
jge
xchg
adc
dec
nop
push
bound
mov
int
jge
lods
inc
and
nop
fnstsw
and
sub
mov
dec
in
nop
fimuls
and
and
jb
xor
xchg
dec
stos
mov
inc
pop
fcoml
sub
sub
das
int3
push
negb
daa
mov
pxor
dec
jo
lahf
and
cmp
xorb
sbb
jb
xchg
mov
loopne
xor
xchg
and
cmp
das
outsl
adc
test
lods
dec
mov
and
cld
je
sub
shl
mov
loop
divb
mov
das
loope
mov
xchg
fs
pop
adc
mov
mov
pop
or
lret
aad
rclb
mov
xor
jb
cmpb
mov
mov
stc
jbe
mov
pop
lods
daa
and
pop
jns
jl
xchg
out
test
mov
cmp
cs
inc
cmpsl
leave
mov
movsl
mov
push
mov
xor
push
dec
mov
pop
mov
orl
push
mov
jg
mov
lods
ja
out
imul
xchg
gs
adc
pop
cltd
sbb
push
mov
mov
sbb
inc
pop
stos
mov
cmp
ror
call
and
jmp
scas
hlt
and
jno
mov
mov
mov
sarb
adcb
stos
sbb
sub
lods
stos
aaa
pop
and
cltd
insl
pop
cmp
and
and
cwtl
mov
cwtl
push
push
sub
mov
fmull
or
and
aas
out
xchg
inc
outsb
hlt
daa
inc
fnstcw
mov
in
and
flds
jp
jge
xchg
mov
push
fidivrl
ss
leave
push
mov
cmpsb
lods
cli
adc
pushf
add
jbe
pop
adc
xchg
out
imul
add
shlb
aaa
xor
les
daa
repnz
cmp
stos
sub
dec
enter
or
gs
jmp
inc
push
push
out
inc
mov
out
push
inc
inc
call
push
fcmovu
adc
popf
and
xorl
insb
cmc
push
and
add
imul
stc
aad
rclb
jbe
mov
addl
xchg
lods
sbb
inc
cmp
fiaddl
push
sbb
insb
clc
les
mov
mov
adc
lret
xlat
dec
js
fnsave
xor
lds
ret
fcoms
ss
pushf
mov
sbb
loop
stos
push
das
sub
std
push
test
lods
and
cmp
xlat
xor
inc
out
dec
adc
mov
mov
push
in
sbb
sqrtps
pop
stos
test
and
xchg
jl
jmp
xchg
mov
cmp
cmp
popf
jae
cwtl
cmp
xchg
adc
pop
mov
push
cmpsl
ja
jl
cmp
imul
ds
sbb
loopne
ljmp
add
aad
stos
fdivp
repnz
nop
cli
sbb
icebp
push
mov
call
sbb
inc
xchg
in
xchg
jb
add
mov
cltd
mov
adc
lock
mov
jns
or
mov
mov
mov
cmpsb
call
mov
lret
call
pop
mov
and
xor
bnd
dec
int3
out
es
shll
sbb
push
or
jae
xchg
testl
mov
adc
std
jecxz
pop
adc
xor
inc
jp
jle
and
imul
jo
pop
xchg
leave
sarb
jnp
stos
fistpll
xor
pop
sbbl
and
nop
mov
dec
adc
ds
scas
std
cmp
dec
clc
pop
outsl
jmp
adc
dec
leave
xor
rcl
dec
shl
cmp
out
mov
lock
xchg
outsl
cmp
je
call
mov
jg
mov
mov
pop
jns
enter
call
adc
enter
mov
stc
es
subb
xchg
lods
leave
outsl
dec
popf
inc
dec
sub
insl
push
add
fs
mov
add
jo
popf
jns
out
mov
xchg
fldl
xchg
xor
or
or
mov
dec
rcrb
imul
les
sti
inc
ss
dec
sahf
sub
jne
add
mov
inc
mov
andb
xchg
sub
das
jmp
add
dec
xchg
pushf
rolb
aaa
jge
clc
ljmp
xchg
cs
inc
cs
in
js
je
adc
call
inc
cmp
xchg
push
push
pop
in
inc
es
jl
addr16
and
or
push
sub
ss
adc
mov
addr16
fisubs
sub
repnz
and
jnp
je
mov
adc
jns
push
pop
in
ds
xchg
push
push
cwtl
sbb
adc
iret
and
sub
scas
add
or
out
dec
out
mov
mov
repz
xchg
enter
add
mov
and
adcl
or
xor
jo
cmpsb
add
lret
frstor
pusha
and
arpl
push
stc
xor
xor
inc
mov
dec
les
test
cmpb
sub
aad
pop
push
add
mov
jns
push
fdivr
bound
xchg
sbb
sub
test
lods
mov
add
lods
dec
sbb
std
data16
iret
sub
mov
mov
loope
out
addb
sub
fs
and
push
push
icebp
loop
push
ljmp
xor
cmp
xor
ljmp
xchg
int3
cmp
pop
nop
enter
scas
ja
xchg
mov
leave
cmp
in
mov
xchg
rcl
ret
xor
xor
jns
pusha
xchg
xchg
jb
imul
mov
incl
push
movsl
jns
dec
xor
imul
loope
aas
std
fdivp
sub
shlb
lret
shlb
mov
pop
xchg
cmpsl
inc
lret
inc
insb
jle
ss
inc
mov
arpl
lods
xor
cmc
cli
orb
pop
les
sub
push
imul
mov
cmp
cmc
inc
rol
loope
push
faddl
xchg
ffreep
xor
adc
lods
flds
xchg
scas
jnp
cmpsl
jecxz
cmp
lds
inc
ror
xchg
es
cmp
nop
add
push
push
icebp
mov
ret
pop
cmpsb
jmp
scas
xor
sub
push
les
xchg
pop
and
jbe
mov
jmp
lods
pop
clc
mov
ficomps
pop
jecxz
mov
or
jp
add
divl
add
fwait
cli
stc
pop
repz
push
aas
push
cld
cmpsb
and
pop
pop
test
xlat
push
mov
and
jo
push
inc
mov
adc
mov
ret
insb
sub
sbb
pop
stc
movsb
jb
push
and
mov
push
cld
arpl
mov
repnz
fildl
adc
cmp
pop
dec
lcall
add
pop
jnp
jmp
adc
dec
mov
pop
xchg
pop
jmp
pop
xlat
cmp
pop
add
addr16
or
pop
sbb
outsl
or
mov
push
cmpsb
adc
sub
mov
add
push
popf
loope
dec
shll
icebp
popa
test
or
call
mov
addb
fidivl
testl
add
dec
pop
cli
in
lods
arpl
sub
outsb
dec
insb
movsb
dec
sbb
bound
adc
lock
and
mov
xchg
imul
mov
xor
sub
movsb
js
mov
test
xor
mov
popa
fsts
xchg
or
out
divl
shlb
dec
sbb
ljmp
scas
imul
icebp
mov
cmpsb
jns
dec
sbb
into
xchg
adc
and
in
cmp
inc
cs
lret
clc
pop
add
shll
ja
pushf
roll
lods
jmp
push
add
sub
sbb
xchg
cli
std
sub
dec
cmpsb
scas
add
lahf
xchg
stc
cmp
push
idivb
loope
adc
push
dec
fwait
jmp
fiaddl
aad
jle
push
lea
mov
and
jmp
test
jno
inc
stos
lea
dec
xchg
lret
scas
repnz
mov
in
and
andb
mov
sub
cmc
xchg
sbb
les
test
cmpsb
mov
sbb
sbb
add
ds
push
pop
add
inc
add
jns
daa
adc
jg
rorb
cmp
mov
imul
movsl
ja
loopne
sbb
lcall
sub
adc
and
or
pop
pop
mov
sbb
jb
das
inc
xor
push
push
inc
mov
std
jb
cmc
or
jo
fidivs
in
sub
mov
jo
iret
test
mov
or
jp
sub
add
iret
js
ficompl
mov
add
push
outsb
lods
iret
lock
int3
fcoms
xor
roll
lahf
xchg
xor
and
adc
push
scas
push
cmp
mov
jno
addr16
lods
movl
js
push
mov
test
fidivrs
call
ror
pop
dec
shll
pop
shll
push
inc
fdiv
push
adc
or
les
mov
aad
jg
add
das
cmp
push
xchg
outsl
fdivrs
popf
popa
test
fistl
jecxz
popf
or
lds
xchg
xchg
add
sbb
loopne
cmc
dec
loope
dec
andl
sbb
cmc
sub
mov
push
lret
pop
sub
out
push
movl
xchg
sub
push
aam
push
repnz
mov
mov
dec
xor
jl
stc
cli
into
mov
inc
adc
das
or
dec
cmp
les
xlat
add
or
test
sub
fisttpll
add
testb
jne
stos
ret
inc
lods
vmovss
pop
sbb
xor
loopne
and
out
sub
imul
lcall
jae
mov
add
or
mul
add
or
xchg
imul
insb
jns
js
cmp
xor
mov
pop
jbe
clc
cmp
arpl
add
fcom
aad
pop
movsb
fcompl
pusha
mov
xchg
inc
mov
cmp
sahf
push
loopne
xor
imul
stc
sub
outsl
mov
jae
xchg
sub
daa
pusha
mov
jno
mov
imul
push
adc
push
ret
outsb
jbe
js
jl
ljmp
dec
cwtl
or
mov
or
rcrl
movsl
je
loop
xchg
in
push
mov
mov
push
mov
mov
loope
sub
dec
insb
or
iret
adc
sbb
dec
add
dec
pop
in
fstpl
sub
cs
imul
cwtl
xchg
arpl
xor
jl
fdivs
mov
js
xchg
lea
dec
aad
pop
mov
sbb
pop
jp
cmpsl
repz
int3
and
into
and
in
jb
or
addb
lret
aad
test
cli
jg
cmc
mov
mov
mov
push
hlt
jg,pt
sbb
dec
gs
jno
loop
jnp
sahf
idivl
lock
jl
clc
notb
gs
mov
xchg
jno
mov
inc
mov
mov
push
cld
add
dec
mov
push
jae
ss
push
xor
dec
dec
popa
push
xor
or
and
adc
mov
lahf
sub
or
in
pop
cwtl
aas
imul
jae
ret
stc
cmp
cmc
js
xchg
movsl
outsl
inc
ja
lret
dec
repnz
dec
pop
stos
push
js
mov
das
sbb
test
mov
cld
inc
add
insb
das
out
pop
cmp
pop
repz
jbe
jbe
ret
xchg
mov
sbb
ficoml
hlt
dec
dec
shrb
mov
pusha
xor
test
call
fwait
add
popa
xchg
xor
cltd
fsts
push
call
xor
mov
push
fldl
add
jle
nop
mov
sub
fists
xor
and
aas
fwait
mov
xor
cltd
cmc
push
or
fldt
cmovae
gs
sbb
jnp
js
jp
cmp
lods
xor
lahf
dec
fimuls
pop
popa
int
lods
das
insl
sti
inc
push
xor
enter
pop
jns
mov
push
out
pop
and
cmp
adc
imul
add
pop
dec
ja
cmpsb
lahf
ljmp
fdivrl
mov
enter
inc
push
out
test
or
loopne
test
sbbl
in
xorb
es
adc
pushf
dec
rcr
mov
pop
xchg
lretw
push
insl
pxor
cmpsb
sahf
pop
out
aad
jbe
orl
div
inc
or
push
repnz
stos
xor
in
cmp
add
cmp
xchg
outsb
mov
jle
popl
ss
jns
aam
xchg
push
aas
popa
sbb
scas
neg
std
add
cmpsl
test
ss
outsb
repz
ret
and
stos
test
cld
inc
subb
lret
mov
adc
inc
xchg
push
pop
loopne
pop
sub
push
adc
pop
shll
inc
inc
mov
push
or
loope
test
es
movsb
out
inc
ret
push
sub
xor
cli
shll
sbb
pop
lret
sbb
mov
mov
scas
dec
das
push
movsb
push
loope
xor
mov
jno
mov
test
stos
fwait
cld
ljmp
repnz
add
xchg
mov
stos
sub
jo
lods
xchg
insb
mov
rcl
mov
lods
push
mov
push
lods
xchg
lods
push
dec
imul
and
and
pop
ljmp
push
call
ds
lds
loope
cmp
and
test
push
fwait
mov
push
add
or
fistl
dec
sub
enter
out
daa
push
add
sub
xchg
jge
jmp
mov
xchg
pop
jnp
imul
cmc
pop
xchg
pop
movsl
aas
outsb
xchg
xchg
cmp
out
xchg
cmp
mov
outsl
icebp
in
inc
and
mov
clc
adcb
je
add
les
cltd
stos
jge
jle
inc
pop
aam
cmpsl
jl
enter
mov
mov
insb
mov
les
jbe
mov
movsb
lea
es
cmp
js
mov
je
repnz
cmp
loope
aad
sub
push
loopne
sbb
popf
cwtl
cmc
nop
cmp
in
mov
daa
lcall
mov
jecxz
xchg
std
sarl
outsl
pusha
mov
aas
imul
and
outsl
dec
out
cmp
sbb
sub
mov
or
xchg
push
sub
jnp
pop
mov
fwait
testb
and
adc
leave
mov
pop
mov
popa
cmp
xchg
loope
pusha
push
sbb
fdiv
xor
fimull
dec
xchg
inc
cmp
xchg
jle
cmp
std
sub
add
mov
dec
dec
pusha
cmpsb
cmp
int3
pop
rorl
dec
test
leave
adc
push
dec
pop
sub
addr16
sub
xchg
fdivrp
jmp
in
mov
and
jne
xchg
mov
adc
cmc
aad
bound
mov
jle
mov
mov
cld
lahf
cmp
fcmovnb
sti
jnp
das
test
repz
sbb
data16
pop
aas
hlt
les
sub
adc
lcall
stos
inc
and
xor
add
out
mov
sbb
dec
mov
inc
or
xor
adc
cmp
movsl
xchg
jnp
data16
xchg
sbb
pop
adc
es
push
cmpsb
push
sbb
xor
mov
lock
in
fcmove
repz
adc
scas
inc
es
mov
insl
je
aas
bound
pop
inc
out
pop
test
imul
mov
xchg
sbb
adc
mov
sub
int
and
clc
adcb
ret
or
add
mov
mov
imul
and
jne
dec
xor
xchg
into
inc
push
pop
aas
xor
xchg
ss
das
gs
pushf
xchg
arpl
inc
xor
fmull
stc
inc
aad
aas
cmp
xchg
fwait
scas
incb
in
mov
push
adcb
movsl
mov
rcl
inc
hlt
dec
lds
inc
xorl
int3
lods
les
or
jg
jle
pop
incb
cwtl
xchg
mov
fld
add
push
jo
outsl
cmpsl
and
scas
pop
sub
imul
mov
inc
sub
mov
notb
scas
jno
or
add
in
fmull
lahf
cmp
cltd
les
mov
or
fadd
push
int
inc
adc
nop
test
add
cmpsl
fdivs
mov
jb
pushfw
je
or
test
fcmovnb
jnp,pn
cmp
daa
lods
iret
mov
int3
and
popf
cmp
xchg
cs
mov
aad
out
jp
adc
stc
fwait
mov
jae
insb
addr16
mul
mov
and
movsl
sub
testl
bound
icebp
mov
shlb
inc
lea
das
gs
dec
xor
jnp
sbb
push
adc
jae
xor
out
out
sarl
cli
jno
xlat
xchg
repnz
jae
mov
in
ljmp
movsl
cmp
ss
push
in
dec
mov
push
pop
stos
mov
test
xchg
xor
arpl
ret
movsb
std
mov
call
std
aaa
idivb
sbb
shll
shl
arpl
inc
lods
push
sub
stos
cmp
fisubrs
lret
lods
repnz
mov
dec
sub
add
lcall
xlat
pop
js
xchg
sti
das
gs
lods
pop
ret
dec
ss
lcall
fistpl
sub
imul
jle
outsl
aaa
pop
js
inc
sahf
sahf
mov
jle
lea
mov
fimuls
pop
mov
imul
sbb
xlat
mov
out
loope
pushf
rorb
sbb
stc
out
rol
int3
and
mov
or
cli
xchg
insb
mov
pop
fadd
mov
jg
push
sub
fldcw
aad
scas
into
faddl
push
adc
inc
cmpsb
xor
and
mov
xor
aad
jno
pop
cmp
inc
mov
daa
or
or
cmp
icebp
clc
jnp
push
pop
push
and
sub
loope
das
clc
leave
test
imulb
dec
push
jge
movsb
arpl
shrl
imul
lods
dec
sub
out
push
jne
divl
mov
jnp
out
testl
mov
mov
adc
ljmp
mov
push
and
int3
fnsave
sarb
fimuls
and
jno
mov
out
jge
inc
rcll
push
std
loop
xchg
mov
arpl
popa
mov
daa
cmpsb
decl
jg
add
push
imul
test
into
inc
and
xchg
xor
mov
cwtl
scas
dec
sbb
sbb
push
inc
pop
xchg
stos
lods
adc
hlt
test
mov
jl
dec
dec
jp
xchg
xor
pop
pop
stc
cli
nop
dec
rclb
roll
test
xchg
and
push
sbb
sbbl
cwtl
das
dec
cld
push
xchg
and
pop
sbb
sub
orl
lcall
test
mov
std
inc
shlb
mov
jp
insl
mov
int
mov
lods
mov
test
add
cwtl
xor
je
int3
lahf
stos
push
into
shll
push
push
adc
fwait
pop
dec
test
and
popa
push
mov
mov
cmp
or
or
fidivrs
hlt
sbb
sub
cmp
in
cmp
stos
outsb
into
pop
or
ljmp
ficompl
dec
mov
call
cmp
jecxz
gs
ret
jo
mov
pop
push
stc
in
in
test
imul
dec
cmp
iret
dec
add
ja
icebp
mov
add
pop
sub
lods
fstpl
aas
leave
into
add
stos
aaa
jg
je
hlt
ljmp
cwtl
adc
push
adc
pushf
push
testb
cld
sub
clc
ret
fwait
mov
mov
adc
adc
js
xchg
and
ret
shl
ljmp
int
sub
cmp
pop
inc
and
or
addr16
sub
xchg
push
lock
stos
arpl
cmc
jmp
ljmp
push
inc
ret
push
addr16
or
cmc
jbe
adc
jl
repz
cmp
adc
xchg
loopne
and
push
dec
add
sub
cmpsb
dec
enter
ja
gs
scas
cld
icebp
std
fimull
pushf
vcomiss
test
pop
xor
ss
pop
leave
call
shlb
sbb
loop
or
and
add
inc
test
xchg
jbe
push
orl
xchg
jns
jge
aaa
dec
add
nop
ret
mov
iret
add
adc
cmp
aad
rcl
adc
or
es
or
std
push
aam
leave
lret
fwait
shll
movsb
inc
mov
movsb
push
testb
int
jecxz
out
rorb
adc
arpl
cmp
lret
cmp
inc
dec
push
insl
fs
pop
mov
or
add
loop
pop
lahf
xchg
mov
cmpsl
jo
test
aad
cld
mov
xor
push
cli
shl
popa
pop
lret
pop
mov
mov
dec
shll
lret
dec
mov
fsts
and
fs
gs
xor
xor
flds
sbb
cwtl
sbb
pusha
ss
jo
sti
jl
addl
call
data16
rcl
and
loope
scas
xchg
cli
xlat
jl
lods
xorb
mov
push
std
pop
xor
cmp
jnp
mov
jle
pop
lret
fwait
cmc
pop
push
xor
leave
xchg
pop
mov
ds
aaa
mov
arpl
xor
cmp
mov
test
add
xchg
pop
lods
mov
orps
pop
fnsave
notl
ja
imull
push
loope
in
jne
insl
popf
sub
std
std
enter
mov
imul
pop
pop
and
mov
mov
dec
pop
pop
mov
mov
or
jle
nop
adc
dec
xchg
int
pop
jo
out
scas
inc
jns
inc
mov
jae,pn
pop
xchg
ret
pop
pop
lret
sbb
shrl
es
data16
call
push
sbb
icebp
fwait
or
push
loope
dec
lret
dec
ss
xchg
sub
sub
test
dec
sub
jl
mov
rcrb
sti
movsb
pop
sbb
mov
seta
mov
jno,pt
ds
leave
inc
dec
jg
sbbl
ja
jnp
cmc
jp
jns
mov
jnp
mov
insb
dec
push
in
xor
pop
push
outsl
mov
bound
and
fs
fwait
jp
daa
adc
inc
aas
inc
push
aam
in
mov
sub
decl
jge
dec
dec
mov
js
dec
int
movsb
lods
ja
into
pop
inc
je
outsl
inc
fnstsw
push
mov
xchg
jb
xor
mov
mov
pop
fiaddl
xchg
push
sub
xor
mov
mov
les
mov
xchg
fistps
push
stc
iret
dec
sub
add
divl
xchg
and
sbb
sub
imul
inc
sti
movl
arpl
jmp
lea
mov
adc
cmp
mov
cs
outsb
aaa
cmp
push
fwait
popl
ljmp
mov
or
add
ds
scas
shlb
push
std
inc
test
jg
in
loop
out
in
pop
jo
sbb
inc
enter
mov
insl
imul
stos
mov
and
daa
pop
mov
pop
hlt
cwtl
popa
int3
and
flds
out
fimuls
outsl
cmp
cmpsl
lcall
lods
xchg
les
dec
fmull
mov
stc
inc
sti
cmp
sahf
mov
adc
sub
xchg
mov
cld
es
cmp
and
sahf
push
sub
fadds
cwtl
movsb
and
pop
popa
inc
cli
dec
lahf
lahf
in
jns
cld
scas
in
dec
out
push
mov
sahf
addl
lock
aaa
fcmovu
leave
lds
dec
or
xchg
arpl
xchg
xor
js
insb
mov
add
add
cmpsb
out
enter
mov
data16
jecxz
xlat
mov
pop
es
push
cmpsb
das
addr16
fwait
sbb
orps
inc
lret
xchg
xchg
fldt
out
rcr
movsl
out
enter
test
fwait
ljmp
movsl
lahf
cmp
leave
mov
insb
add
into
jge
push
xchg
repz
loopne
or
jge
jne
push
xor
push
mov
jmp
ss
faddp
dec
xchg
leave
push
push
data16
popa
movsb
xchg
fcomps
add
mov
lahf
sbb
mov
outsb
push
daa
lods
imulb
loopne
je
std
jecxz
sbb
std
lods
dec
nop
xchg
pop
pop
mov
inc
and
pop
data16
xor
outsl
inc
leave
test
daa
sbbb
cmpsb
cld
mov
ret
outsb
mov
aaa
and
lahf
mov
xchg
push
sub
xchg
xlat
outsb
scas
lock
shr
add
jle
fwait
sbb
add
fdivr
adc
jb
adc
mov
pop
push
pop
movsb
dec
xlat
stos
pop
arpl
punpckhwd
xchg
jns
xchg
dec
push
ret
stos
mov
mov
cltd
out
push
dec
xchg
into
stos
sbb
cmp
push
push
in
xor
sbb
popa
and
inc
mov
pop
dec
popa
ficomps
dec
test
inc
pop
lcall
scas
adcb
xor
pop
sbb
je
stc
jnp
cld
int3
popa
xor
or
dec
xor
mov
xchg
aas
pop
clc
cld
lcall
or
jns
push
push
sbb
mov
xor
das
lea
push
adc
inc
ret
into
scas
xchg
and
adc
movsl
xchg
mov
sahf
mov
jno
mov
adc
inc
shld
jbe
cmp
adc
mov
fadd
pop
wbinvd
mov
inc
add
push
xor
inc
mov
mov
jg
das
rol
cmpb
icebp
inc
add
jmp
scas
push
mov
pop
xchg
xchg
xor
stos
movsl
into
mov
fucomi
add
add
mov
dec
xchg
rol
mov
in
and
aad
leave
jae
aas
pop
call
ficomps
loop
mov
div
aad
fimull
xchg
sub
or
adc
cmp
xchg
inc
push
cmp
in
pop
adc
xchg
test
cmp
lock
pop
fiaddl
mov
adc
xor
lods
aad
jns
xor
and
xor
imul
in
pop
sbb
std
push
ljmp
add
imul
movsb
add
inc
lahf
stos
lret
icebp
cmp
pop
leave
inc
loope
repnz
mov
xchg
cmpsb
test
add
fs
jg
pop
or
mov
lods
mov
xchg
mov
ss
lret
fisttpl
rcrb
fiaddl
xor
xchg
cmp
jl
dec
ret
int
push
push
fcomps
invd
cld
adc
xor
jge
fildl
gs
xchg
outsb
outsb
mov
movsb
push
jnp
pop
mov
cmp
imul
cmpb
arpl
fimuls
jae
gs
std
in
fwait
xchg
jnp
pusha
add
pop
arpl
sbb
insl
mov
sti
mov
jns
bound
mov
mov
mov
ret
add
inc
jns
cmc
jns
mov
xchg
mov
outsl
addr16
insl
bound
out
addr16
fnstcw
mov
fsubrs
cs
pop
or
js
ja
cld
or
jns
mov
aaa
sbb
lock
lret
sbb
rcrb
lds
scas
mov
dec
pop
fcoml
ficomps
fcoms
repz
cld
jg
movsl
into
push
out
jo
inc
lcall
gs
lcall
push
out
int
popa
fs
sub
add
inc
imul
jmp
into
mov
jnp
adc
mov
jle
loopne
aad
and
xchg
inc
aaa
pop
xchg
pushf
shlb
jg
push
fcoml
push
pop
inc
push
into
shl
inc
insb
pop
cmp
out
sbb
sbb
mov
gs
movsl
adc
fcompp
mov
or
push
push
mov
dec
test
in
push
pop
dec
or
push
pusha
mov
push
loop
enter
sbb
or
mov
lret
dec
mov
aaa
mov
dec
xchg
arpl
push
or
clc
insl
loop
and
sub
jo
loop
ret
xchg
sub
fstps
call
ret
mov
addl
dec
hlt
enter
out
into
dec
xchg
fsubs
and
outsl
movsl
push
imulb
fists
rclb
das
push
ret
pushf
popa
ja
ss
arpl
jecxz
fs
adc
addr16
fwait
jp
jae
fnsave
xchg
orl
inc
divl
cld
outsb
xor
pop
mov
inc
lahf
pop
loope
inc
push
enter
iret
xor
addr16
mov
or
mov
mov
jo
sbb
xor
jne
cld
hlt
jge
iret
mov
out
xchg
sbb
sbb
bound
fsubs
inc
cs
lea
or
jp
js
stos
and
add
loope
inc
jb
dec
mov
cmp
or
sahf
push
mov
stc
mov
das
int3
mov
clc
cvtps2pd
enter
nop
icebp
test
mov
mov
cld
dec
xchg
dec
popa
and
dec
lds
pushl
jnp
cmp
mov
test
shll
jmp
mov
mov
iret
or
sbb
sub
cmpsb
cmp
pop
xchg
out
push
xchg
hlt
xor
mov
pop
or
aaa
mov
xor
ret
fcmove
mov
xchg
ret
mov
jb
test
jb
cmp
xlat
mov
push
iret
sub
lods
pop
sbb
int
adcb
aad
dec
shl
sti
jae
jns
aaa
stos
xchg
stc
xchg
mov
pop
hlt
call
mov
mov
icebp
daa
xchg
pop
stc
fnstcw
daa
add
xchg
push
or
push
hlt
adc
popf
popf
scas
clc
pop
arpl
fwait
das
call
enter
stc
hlt
sbb
dec
mov
inc
int
pusha
int3
sub
jns
sbb
ss
push
push
loopne
pusha
push
mov
mov
sub
aas
shrb
bnd
pop
aas
cmovno
push
jbe
pop
xchg
sub
add
jle
sub
rolb
mov
aam
popf
repnz
movsb
add
xchg
dec
jbe
xchg
push
stos
pcmpgtd
inc
mov
lahf
into
mov
push
scas
push
cmp
je
nop
data16
push
bound
cld
jecxz
add
mov
xchg
fnstsw
jecxz
dec
sbb
mov
pushf
je
fldcw
xchg
loope
cs
in
daa
sbb
add
and
repnz
in
xor
aas
shlb
mov
fistpl
imul
fnstenv
dec
cmp
cld
dec
sub
xor
fxch
cli
or
xchg
sub
push
pop
movsl
sub
or
jo
jle
mov
adc
jl
sbb
and
pop
jl
out
mov
test
push
cmp
xor
lods
test
outsl
xor
cmp
cs
mov
jmp
in
add
mov
mov
mov
jne
int3
xchg
cmc
push
jp
mov
sub
cmpsb
js
jle
dec
mov
or
loop
jae
sbb
imul
addr16
lret
jne
sbb
out
pop
sti
out
ja
pushf
addr16
jmp
leave
inc
push
mov
xor
cmp
xor
xlat
adcl
xchg
xchg
dec
fldcw
jbe
mov
hlt
icebp
or
je
das
stos
pop
adc
fdivp
outsb
jae
jae
std
sub
or
dec
loopne
cmpsl
cs
lahf
jne
sub
ds
or
add
or
jb
icebp
add
pop
es
jne
jl
arpl
push
mov
aaa
pop
mov
dec
push
and
movsb
fucomi
ret
xor
leave
inc
adc
push
sbb
out
ror
xchg
and
and
add
iret
nop
xor
scas
push
mov
shll
incb
inc
ret
pop
jno
in
push
in
pushf
xor
les
imul
lret
sti
mov
push
add
sub
and
lods
out
ja
pop
adcb
jle
xor
call
test
lret
stos
data16
pop
ja
popf
add
cld
test
arpl
or
mov
sub
sub
arpl
lret
add
rorl
fwait
aad
rcl
mov
ret
out
stos
push
xchg
mov
sub
jmp
jne
bound
imul
in
and
mov
mov
ja
cmp
fmull
imul
rorl
jecxz
arpl
out
insl
mov
mov
jnp
mov
mov
mov
pop
lret
dec
or
rcrb
stc
mull
pop
mov
mov
lcall
cmpsb
in
aaa
xchg
daa
mov
push
xor
repz
push
lock
cmc
sub
dec
add
pop
in
adc
xchg
mov
adc
fnstsw
mov
imul
std
pop
adc
or
mov
test
out
daa
call
outsl
pop
adc
pop
mov
imul
es
sbb
popa
cli
nop
hlt
call
mov
adc
mov
enter
or
adc
scas
xchg
jg
int
pminub
clc
mov
or
mov
fldcw
stos
mov
ja
or
and
int3
push
outsl
negb
lahf
pop
pop
inc
or
push
rorl
stc
mov
inc
jmp
sahf
outsl
pop
cmp
inc
addr16
dec
shll
cld
xchg
xor
sbb
out
hlt
gs
mov
or
mov
mov
ret
sti
fdivl
ja
out
mov
pop
jbe
lea
mov
test
mov
dec
arpl
insl
jns
adc
add
arpl
iret
push
mov
jne
aas
mov
pushf
fiaddl
sub
mov
adc
imul
adc
jmp
nop
push
mov
mov
mov
jecxz
data16
std
or
lret
jbe
lcall
cmp
xorl
popf
add
xor
or
sahf
cmp
push
xor
jno
movsl
dec
mov
scas
mov
dec
mov
clc
rclb
inc
sub
mov
mov
mov
dec
mov
mov
inc
ljmp
jle
jb
cmp
inc
mov
aas
xchg
out
jp
lea
scas
out
mov
sbb
insb
or
jle
mov
inc
stos
adc
stos
enter
xchg
popf
pop
scas
and
outsb
movsb
pop
stos
shll
call
sbbb
xor
mov
loopne
pop
cmpsb
and
xchg
mov
movsl
repnz
jl
or
pop
loopne
sub
int3
clc
roll
sbb
inc
fsubr
and
in
ja
inc
mov
sbbb
or
push
and
add
jecxz
xchg
push
scas
sub
sbb
sbb
rcl
shl
cwtl
mov
or
add
dec
mov
xchg
add
cmp
sahf
ds
leave
cmp
xor
jecxz
jb
mov
out
mov
mov
xchg
loop
or
cmpsl
xchg
imul
adc
in
mov
lret
icebp
cmp
pusha
scas
xlat
push
popf
adc
jbe
ss
repz
push
or
mov
pop
in
insb
fnstenv
pop
push
insl
push
lods
adc
popf
ret
jmp
sbb
push
sub
in
mov
mov
inc
sub
xchg
mov
rcll
into
push
pop
lock
shlb
test
hlt
call
sti
inc
outsb
mov
sarl
scas
int
nop
xor
inc
and
or
dec
enter
mov
nop
add
mov
mov
pop
outsl
arpl
pusha
push
std
jecxz
in
xchg
out
loope
inc
sbb
cmp
repz
push
inc
pop
pop
xchg
pop
into
lds
xchg
arpl
push
inc
lahf
and
sub
xor
and
fisttps
in
mov
sbb
or
leave
sub
xor
jns
add
or
lea
fwait
bound
or
dec
imul
rcrb
sbb
enter
int3
mov
imul
pusha
jbe
fistps
xor
outsb
jne
add
cmp
add
pop
mov
push
setl
scas
loop
leave
inc
mov
in
fisubs
or
fisttpll
jle
in
pop
fwait
lcall
stos
dec
xchg
cmp
push
aaa
test
test
sub
jecxz
pop
xor
inc
jbe
cmp
stc
mov
outsb
push
pop
or
shr
pushf
out
sbb
push
cmp
ja
sub
imulb
aad
add
sbbb
je
cmp
push
sub
lret
sbb
nop
popf
cmpsl
pop
popa
mov
ljmp
add
in
xchg
jp
jp
and
frstpm(287
mov
mov
and
sub
iret
add
fadds
bound
outsl
mov
aam
pand
jmp
mov
xchg
jo
movsl
lods
jnp
adc
mov
pop
out
cmp
in
in
or
sub
xlat
pop
jo
lahf
ds
clc
mov
aaa
cmp
mov
adc
jecxz
daa
push
mov
nop
js
shll
inc
mov
or
add
mov
cmp
je
sbb
lods
outsl
idivb
ret
xchg
insb
in
inc
sbb
fmuls
mov
ds
or
repnz
mov
das
add
jno
xchg
insl
das
mov
cmp
lock
add
cmp
push
fstl
dec
cmp
mov
sub
jmp
cmp
sub
adc
loop
mov
lret
jecxz
mov
sub
sbb
cli
jo
shl
js
xor
sub
jle
data16
inc
les
loope
call
lahf
lahf
test
lcall
in
adc
push
lahf
mov
add
movsl
lret
das
mov
inc
lock
shr
xchg
test
pop
test
ljmp
xchg
mov
or
std
adc
xchg
cltd
pop
lea
repz
shr
jns
cli
shrb
fwait
add
push
mov
sbb
or
add
daa
sbb
into
adc
inc
arpl
sub
push
mov
dec
jmp
dec
incb
xor
mov
adc
push
sahf
clc
pop
adc
push
pop
sbbl
adcb
fs
xchg
into
lahf
cltd
aad
xor
push
jle
ljmp
or
sbb
leave
call
and
add
clc
inc
sbb
cs
frstor
jl
push
mov
test
lret
pushf
sbb
in
mov
rcrb
js
in
dec
push
push
imul
fisubrs
bound
rcl
mov
addr16
imul
mov
test
pop
and
rol
mov
mov
outsb
inc
jnp
mul
jmp
mov
cltd
jb
pop
and
adc
xchg
cli
fstpt
popa
jae
mov
lds
lret
adc
mov
push
popa
mov
adcb
in
xor
rclb
icebp
clc
xchg
mov
adc
jne
aaa
xorb
pop
andl
add
addr16
xchg
sbb
lret
pop
push
clc
cwtl
rcrl
and
sub
in
test
test
xchg
div
mov
ret
jmp
jno
andl
shlb
jecxz
xchg
cmpsb
movsb
aad
movsl
stos
hlt
cmp
and
loopne
cmp
outsl
xchg
in
mov
adc
cwtl
or
mov
jmp
mov
in
test
aas
mov
fcmovu
add
in
jnp
call
movsl
xor
push
push
out
mov
imul
cld
or
inc
pop
mov
imul
mov
int
vmwrite
mov
insl
mov
cmp
xor
jmp
xchg
inc
mov
scas
cld
notb
gs
cld
movsb
mov
mov
xor
sbb
sub
mov
out
mov
in
lods
xor
js
and
mov
scas
paddsb
sbb
setl
jno
jne
jae
dec
add
push
inc
cwtl
xlat
push
push
adc
cmpsb
adcb
cmp
dec
cmp
lea
fwait
aam
loopne
test
out
hlt
jl
mov
insl
adc
push
std
inc
mov
or
test
lock
mov
dec
sbb
xchg
xchg
fdivs
iret
pop
mov
xor
inc
sbbl
adc
das
sbb
test
divb
mov
je
add
icebp
cmp
nop
cmp
ljmp
aaa
add
test
ret
fcompl
imul
xlat
pop
mov
adc
lods
test
push
jecxz
adc
mov
mov
adcb
hlt
cmp
sub
shll
adc
popa
add
xchg
add
ljmp
insl
cmp
sbb
out
enter
insl
and
fisubl
and
xchg
xor
mov
icebp
leave
and
mov
jb
movsb
dec
dec
scas
mov
in
mov
cltd
stos
mov
lds
ret
dec
shl
lds
push
pusha
pop
mov
pop
mov
sbb
jno
mov
jl
popa
stos
test
pop
cmpsl
into
mov
mov
cwtl
mov
fcomps
inc
push
cltd
shll
ja
cmpsb
cmp
test
mov
push
dec
mov
mov
mov
test
addb
dec
xor
jle
and
rorl
mov
push
call
out
inc
cmp
ret
inc
xor
sbb
cmc
sub
push
inc
addr16
add
mov
adc
mov
roll
call
xchg
inc
popl
push
inc
jg
pusha
jns
cli
arpl
cmp
popa
xlat
cmpsb
mov
add
add
loope
sti
sub
sarl
adc
loope
sbbb
aad
pop
or
aaa
loop
xlat
das
scas
jo
icebp
xor
pushf
cli
mov
imul
jg
outsl
loopne
adc
and
in
lods
and
imul
mov
dec
ds
push
xor
dec
rclb
mov
xor
push
cli
and
lcall
add
mov
xor
dec
shrl
mov
loope
dec
mov
push
movsl
cmpsl
out
cwtl
imul
push
sbb
adc
mov
lret
outsb
mov
sbb
cmp
mov
insl
jb
out
push
mov
test
mov
hlt
loop
repnz
pop
out
test
add
test
pop
jnp
push
daa
pop
adc
xchg
add
fdivp
cli
dec
mov
pusha
sbb
dec
cmc
adc
loopne
cmp
je
lret
jp
jg
divb
jmp
ret
andb
dec
ret
lret
sub
aas
or
lods
xchg
sub
or
decl
inc
lret
sbb
lods
inc
jae
xor
and
inc
ds
data16
enter
or
cli
lcall
mov
jmp
fmuls
imul
sub
ja
test
push
scas
dec
mov
stc
clc
das
in
add
call
mov
les
in
or
and
lahf
add
xchg
clc
arpl
mov
nop
shr
cmc
fildll
pushf
je
insb
sahf
lods
xor
fldenv
mov
add
push
and
jg
scas
xchg
pop
pop
in
hlt
pushf
pop
xchg
adc
dec
test
test
inc
stc
scas
bound
aad
fucomi
lahf
out
or
cltd
mov
mov
mull
xor
pop
cli
sub
xor
arpl
ffreep
and
xchg
sub
lods
out
mov
mov
aaa
outsl
fldcw
adc
jno
cmp
and
scas
mov
gs
rolb
in
mov
call
lret
std
mov
lcall
std
mov
fwait
addr16
aam
ljmp
sbb
and
cmp
push
xchg
sarb
mov
or
push
sub
outsb
cld
xor
addr16
mov
jne
movsb
rcrb
jg
cmp
sub
movsl
jp
in
mov
fcmovnbe
lretw
jecxz
jae
sbb
cmp
pop
cmc
mov
adc
cli
push
mov
lcall
or
movsb
call
mov
pop
sub
jp
xchg
sti
cmp
cmp
dec
repz
or
pop
cmp
cmp
cltd
xchg
mov
clc
ja
add
xchg
cltd
mov
pop
out
pop
inc
gs
inc
push
xor
xchg
inc
jns
lods
lret
jp
fsubl
loope
adc
mov
movsl
and
je
aam
mov
shll
fisttps
loop
pop
cmp
lahf
xor
dec
jl
sarl
jg
pushf
adc
cmpsl
dec
xchg
aad
in
cmpsb
push
mov
rcr
lret
xor
movl
fcomps
clc
mov
mov
loope
jne
pusha
sbb
lret
and
loop
in
dec
mov
mov
and
mov
pushf
sti
jnp
aas
pop
out
and
sti
lock
cmp
out
sbb
sbb
cmp
mov
xor
sarb
imul
pop
mov
mov
push
xchg
jne
push
cwtl
loope
out
mov
popf
mov
sbb
lcall
fsubs
and
push
xor
fildll
repz
push
push
or
sbb
dec
inc
or
mov
mov
jecxz
test
mov
cmp
rcrl
int3
lcall
mov
pop
daa
mov
inc
xchg
jp
mov
pop
push
pusha
out
data16
orl
movsl
aaa
sbb
inc
lahf
sub
test
sub
mov
aad
bound
xlat
jbe
sbb
ror
jmp
xor
adc
cmp
rol
loopne
cmpb
in
cmp
mov
lcall
pusha
xchg
aas
mov
and
xchg
add
fcmove
subl
jbe
fcmovb
push
jg
imul
cmp
mov
sbb
fwait
adc
shlb
mov
adc
and
cmc
mov
addl
push
rorl
test
push
faddl
sbb
dec
jle
push
leave
or
mov
xchg
or
add
pxor
jnp
push
and
push
adc
sbbl
push
xchg
aaa
xorl
push
push
std
loop
shl
mov
dec
and
out
scas
mov
jb
popf
pop
push
mov
fld
out
jb
xlat
scas
adc
add
pop
leave
inc
jno
pop
ljmp
outsb
cmp
push
test
clc
loopne
fcmovne
jg
jp
jne
in
mulb
xor
daa
lcall
jnp
pop
std
lods
mov
jae
and
jle
ljmp
dec
mov
sub
std
cmpsl
outsb
mov
mov
cmp
sub
adc
mov
adc
xor
lret
repnz
mov
je
bswap
jmp
stos
dec
enter
mov
loope
mov
leave
mov
lahf
clc
pop
daa
call
sbb
push
fdivrs
inc
sub
fwait
adc
add
cmp
std
leave
inc
adc
pop
inc
jns
ret
mov
pop
xor
lcall
mov
jnp
sbb
push
push
mov
mov
xorl
test
xchg
cmp
and
popl
aam
cs
cld
aam
push
mov
int
and
sub
in
loop
lods
sbbl
inc
cltd
iret
or
imul
inc
push
gs
jno
pusha
pop
add
popf
xchg
mov
test
mov
inc
nop
mov
pop
cltd
add
cltd
mov
mov
mov
leave
or
jo
mov
mov
inc
shll
pushf
push
popa
outsb
iret
dec
das
mov
sbbl
call
pusha
pop
pop
mov
addr16
cmp
inc
shll
inc
adc
and
push
das
hlt
test
lea
jns
rol
xchg
popf
lahf
mov
mov
push
inc
ja
icebp
cs
aam
test
push
cmp
cwtl
insl
int3
sbb
inc
daa
inc
scas
hlt
or
xor
in
or
cs
mov
xlat
sbb
nop
push
sub
mov
dec
sbb
mov
mov
xchg
cld
ss
test
xor
mov
leave
cmp
pop
sub
mov
rorb
cmp
inc
icebp
in
xchg
loop
cld
cld
loopne
jo
sbb
shrl
or
sarl
ret
lea
and
pop
sub
sbb
inc
mov
roll
mov
push
dec
mov
jbe
out
push
dec
sub
clc
dec
and
out
mov
inc
enter
add
pop
roll
clc
out
adc
xchg
ja
ds
xchg
shrl
outsb
cmp
cld
push
cmpsb
jg
cmp
mov
rcll
fsubl
jg
mov
je
xchg
jbe
out
inc
popf
mov
decl
push
rorb
call
sub
in
mov
in
jae
addr16
and
pop
mov
mov
push
fsubs
add
mov
or
ret
into
jmp
pusha
sbb
loop
pop
popf
pandn
sub
aam
jmp
adc
cwtl
cmp
das
rol
push
lds
lods
mov
mov
sub
pop
mov
iret
push
lea
jl
sbb
push
bound
fs
mov
mov
data16
je
ds
jmp
dec
sbb
mov
lcall
adc
xchg
adcl
je
mov
push
mov
pop
mov
in
insl
push
jecxz
adc
mov
mov
cmpsb
adc
dec
hlt
rcrb
jecxz
push
data16
sbb
xchg
dec
data16
push
ja
sub
filds
lock
int
repnz
orb
jge
outsb
or
aad
xchg
mov
and
mov
push
and
in
punpcklwd
daa
pop
lea
adc
lcall
inc
shr
xchg
sbb
mov
adc
mov
je
add
ret
jae
and
cmp
je
xor
jle
sahf
mov
or
cli
gs
leave
sub
ljmp
jle
notb
pop
xchg
jnp
mov
out
jge
and
roll
cmpsb
xchg
test
adc
mov
aas
pop
and
inc
jl
mov
mov
dec
jno
adc
int3
jl
jg
lock
scas
push
xchg
xchg
cmp
je
sbb
out
cwtl
sub
push
adc
das
mov
dec
daa
add
cs
js
out
sub
cmp
jno
xlat
test
jle
sub
xchg
sub
pop
pop
dec
xlat
jae
lahf
rcll
sahf
dec
rclb
cwtl
ret
pop
mov
daa
adc
idivb
inc
pop
jae
xchg
cli
cmpsl
es
jmp
push
enter
std
loopne
pushf
outsl
mov
lret
xchg
nop
and
mov
push
push
repz
xorl
push
inc
addr16
pop
or
mov
xor
fxch
xor
mov
and
sub
xor
push
inc
inc
xor
pop
in
aam
mov
mov
std
or
mov
xor
mov
push
fildll
sub
push
push
dec
xchg
in
into
subb
pop
sti
stc
js
lock
xchg
cmp
inc
fildl
sbb
lods
scas
daa
and
dec
pop
cs
inc
fwait
cmp
int3
inc
jle
adc
xchg
inc
adc
lock
push
inc
xchg
xlat
outsb
or
jge
cmp
cltd
xlat
ficompl
lcall
mov
mov
pop
and
add
insl
stc
and
sbb
cltd
push
fisubrl
pop
jbe
fcompl
add
pop
dec
mov
xchg
in
jp
push
mull
ja
loope
or
mov
sub
xchg
mov
inc
and
rcll
ljmp
xchg
jnp
lahf
jp
or
decb
cld
test
adc
jecxz
push
fwait
scas
xchg
test
add
xchg
mov
and
xor
andb
mov
addb
lahf
enter
cld
jno
dec
shr
imul
pop
jecxz
ja
dec
mov
leave
mov
repz
add
cld
mov
rcr
sub
out
lea
adc
cmp
mov
ljmp
andb
xchg
push
xor
movb
ja
xor
xor
les
add
mov
mov
test
insb
cmp
inc
pop
pop
ljmp
gs
push
dec
out
inc
scas
fdivrl
sti
cmp
in
push
mov
or
lods
lods
add
jge
sub
pop
mov
cmp
jne
aaa
add
fucomi
lods
cmp
idivb
cmc
and
movsb
dec
or
dec
pop
pop
sahf
les
orl
dec
in
cmpsb
lret
xchg
xchg
cmp
pusha
jnp
das
cmp
sbb
sub
inc
int3
iret
push
fldt
or
mov
inc
aas
mov
inc
pop
jno
js
mov
adc
mov
inc
push
enter
add
dec
pop
call
mov
fwait
mov
xchg
and
sbb
add
lahf
pusha
or
lods
cmc
test
fs
cmp
hlt
jle
shrb
push
roll
xchg
pop
dec
das
mov
out
or
mov
icebp
xchg
push
mov
pop
sti
add
aas
shlb
fidivl
pop
jnp
out
sbb
mov
or
xchg
jl
arpl
dec
rcrb
adc
mov
jl
inc
les
test
test
mov
test
fwait
adc
or
cwtl
in
addr16
pop
daa
and
out
xor
mov
pushf
out
out
in
dec
xchg
adc
cmpsb
and
shr
cmpsl
mov
and
mov
mov
lahf
dec
mov
test
sub
shll
adc
sahf
aaa
out
add
addr16
rcll
sarl
jmp
loop
movsl
cmp
sbb
sbb
push
or
mov
mov
into
das
add
pusha
cmp
sbbb
cmc
mov
push
movl
jns
rclb
sbb
mov
aas
aaa
xorb
adc
inc
je
popa
mov
or
mov
ficompl
lock
mov
ret
or
cmp
dec
std
and
dec
dec
ret
jae
fldcw
pop
pop
dec
imul
nop
mov
xchg
sbb
mov
out
xor
xchg
mov
movsl
or
xchg
add
mov
shrb
mov
pop
cli
inc
or
std
aam
aad
mov
adc
push
cmpsb
add
xchg
loop
scas
shrl
or
dec
inc
mov
jecxz
sub
inc
jle
mov
cmp
mov
jae
cwtl
cmp
add
push
call
pop
mov
aaa
cmp
loopne
fucom
ljmp
jnp
inc
pushf
sbb
enter
pop
or
sbb
lahf
push
or
jne
and
inc
std
fildl
jae
loopne
out
ljmp
mov
xor
adc
xor
mov
popa
jae
push
dec
neg
mov
ror
pop
push
cmp
inc
dec
mov
or
cwtl
pop
lret
fisubrl
scas
enter
cmp
dec
or
in
mov
pop
pop
pop
mov
dec
adc
data16
lret
cli
jmp
push
lods
test
movsb
mov
xchg
lods
mov
les
lahf
mov
incl
hlt
dec
pop
or
mov
nop
lods
xlat
push
xor
dec
push
adc
pop
test
push
push
lcallw
adc
xchg
cmpsl
lods
mov
mov
sbb
adc
std
ret
push
orb
xor
pop
mov
es
cmp
dec
ljmp
jb
push
and
fdivrl
std
mov
jae
addl
push
or
xor
mov
mov
enter
inc
push
push
adcl
mov
push
popf
inc
into
fsubs
imulb
cmp
orl
sti
enter
in
adc
iret
cmp
andl
mov
push
mov
scas
adc
pushf
std
shl
mov
in
sbb
rcrb
mov
pop
sub
je
stc
jl,pt
lahf
call
aas
adc
mov
popf
es
popf
iret
push
out
xchg
fwait
mov
and
mov
jg
inc
jp
mov
int3
dec
lods
fstp
cmp
pusha
adc
arpl
iret
inc
test
lods
mov
jnp
cmpl
pushf
popf
jne
stc
pop
mov
movsbl
stos
pop
imul
inc
aam
adc
mov
out
es
sti
push
insl
xchg
xchg
pop
ds
push
faddl
mov
das
jo
mov
scas
push
push
notb
xor
hlt
movsl
in
arpl
mov
fwait
cmpsb
xor
mov
push
neg
ret
inc
cmp
jne
inc
mov
pushl
and
sbb
xor
xor
fs
hlt
sbb
jae
imul
mov
add
ret
mov
cmp
adc
xchg
icebp
mov
test
adc
pop
inc
pop
adc
push
push
jmp
scas
adc
fwait
imul
cmp
shl
push
push
cmpsb
mov
andb
les
idivb
cmp
dec
adcl
lock
lcall
inc
clc
nop
jge
icebp
filds
dec
sahf
pop
in
mov
dec
out
inc
test
insb
in
mov
dec
call
inc
add
out
data16
pop
cmpsb
xchg
add
xchg
inc
pushf
test
or
iret
pop
addr16
mov
or
outsl
test
in
cltd
lods
daa
outsl
jo
fstcw
sbb
cmp
mov
in
sub
mov
repz
dec
leave
push
or
and
negb
inc
jmp
jno
push
adc
sub
mov
aas
in
loope
clc
iret
mov
xchg
xor
ds
movsb
test
mov
cmp
stos
fisubrl
push
mov
mov
mov
sbb
mov
dec
fimuls
lods
pusha
pop
inc
mov
arpl
sub
cmp
adc
sub
sub
mov
mov
sub
mov
jnp
enter
sarl
lds
outsb
jns
sti
aad
jg
jb
loopne
mov
insl
jb
repz
mov
cmpsl
dec
xor
scas
dec
push
lea
mov
in
sbb
lret
ret
stc
jo
or
aas
icebp
cmp
cltd
or
mov
subb
out
cwtl
xorb
stos
pop
sbb
push
inc
js
or
pop
adc
jge
add
adc
scas
call
cmp
xchg
fnstenv
pop
dec
pop
mov
stos
inc
add
enter
out
fwait
push
or
sbb
fisubs
cmp
ljmp
outsb
jnp
cmp
mov
pop
or
sub
adc
adc
jg
mov
lret
fwait
fdivrs
add
and
test
dec
movsl
ret
add
jns
sbb
sub
out
out
mov
sub
lods
lods
aas
lea
loope
adc
iret
repz
ss
fistpll
cwtl
jg
and
test
add
aam
data16
popf
mov
push
push
sub
pushf
in
lock
lcall
in
gs
sub
fxch
pop
inc
fmull
rcrl
dec
adc
or
loopne
cwtl
aam
cld
icebp
sbb
lds
mov
and
cmp
test
mov
jbe
xchg
lret
loopne
adc
or
and
pop
call
xor
push
imul
roll
sahf
mov
lock
jbe
int3
sbb
jecxz
sbb
int3
insb
cmp
cmp
lock
out
lods
add
add
or
insb
fbstp
xchg
mov
movsb
cmp
jmp
imul
shl
inc
js
and
outsl
sub
out
push
rorl
pop
aad
add
movsl
je
xchg
add
repnz
sahf
call
xor
sub
mov
ja
insl
fwait
pop
or
and
and
cs
icebp
xchg
push
in
stos
scas
sbb
mov
dec
into
lods
and
loop
xchg
sbb
scas
xor
mov
sub
cld
repz
mov
clc
xchg
inc
aas
sub
jb
cmpxchg
stos
xchg
imul
fcoml
test
es
mov
call
sbb
call
xor
int3
gs
mov
out
mov
mov
add
mov
fucom
or
adc
out
je
sub
arpl
inc
popa
arpl
add
pop
out
pop
mov
out
push
or
sbb
inc
jnp
cmp
mov
fdivs
xor
sub
jbe
pop
mov
jl
pop
std
stc
pop
mov
or
push
mov
pop
sbb
or
xor
sahf
int
lahf
cld
data16
imul
jns
sub
mov
pop
adc
jne
mov
out
les
loope
xchg
pop
mov
xor
pop
dec
mov
cmc
pop
or
in
in
roll
leave
pop
mov
stos
sub
pop
call
xor
pop
mov
push
cmpsl
ficomps
dec
cli
xor
cmp
pop
push
mov
mov
inc
inc
jge
adc
lea
lret
xor
fs
xchg
int
lahf
pop
stos
negl
push
jg
js
push
clc
fwait
dec
lcall
xor
and
daa
jmp
mov
or
test
mov
xchg
int3
cltd
and
or
adc
or
adc
mov
loope
push
jg
sbb
dec
nop
mov
cmp
mov
cmpsl
mov
sbb
icebp
inc
xchg
mov
mov
add
fwait
stos
or
or
loopne
xor
inc
test
xchg
fldl
loopne
sbb
jl
and
mov
push
xchg
rcl
mov
addr16
or
inc
cmp
out
push
test
push
es
mov
jmp
pushf
xor
stc
into
add
push
shrb
js
jno
adc
popa
shrl
lret
nop
cmp
imul
or
pop
test
loopne
out
int
shr
sub
push
jp
add
leave
cmp
pop
cmp
pop
xor
mov
pop
shl
pop
mov
xor
cli
inc
jle
add
dec
dec
or
mov
xor
notb
ror
sbb
mov
ja
lret
or
mov
jae
subl
filds
repz
mov
loope
jbe
mov
loop
repnz
mov
add
fucomi
mov
mov
adc
lock
fsubr
dec
pusha
add
mov
out
subl
into
push
push
jne
bound
fbld
imull
pop
aaa
pop
mov
pop
out
outsl
fisttpl
iret
sbb
jbe
mov
out
int3
mov
iret
js
cld
repz
lcall
xchg
jns
pop
pop
and
mov
or
sarl
mov
add
fs
sub
jne
pop
add
ret
ja
cmpsl
stos
cltd
xchg
push
pop
inc
jmp
popa
sub
inc
das
sbb
inc
cs
jo
ret
jl
fcomi
lock
jb
inc
dec
fists
cmpsb
movl
fcompl
in
mov
jo
add
mov
and
inc
cmpsl
test
aad
push
sarl
sub
nop
lods
nop
mov
jno
jle
pop
cmp
les
test
pop
and
and
and
sub
loop
std
add
rclb
jb
sub
xchg
ret
repnz
or
sub
jo
dec
shr
pop
mov
aaa
xor
sbb
cmpsb
leave
in
sahf
mov
out
cmc
pop
inc
dec
or
jmp
dec
or
sbb
out
mov
fwait
sub
add
cmp
shrb
into
mov
ret
pop
mov
fdivl
mov
addr16
adc
sbb
ss
fwait
jnp
push
sbb
movl
xchg
aad
in
mov
push
mov
les
push
jne
lahf
hlt
cmp
dec
insb
mov
in
pop
xchg
add
pushf
negl
pop
and
dec
cmp
or
xchg
fbld
mov
mov
cli
sub
jbe
hlt
fwait
sub
dec
sub
sbb
xchg
dec
jb
mov
jbe
and
cld
inc
js
dec
adc
lret
ja
shrb
dec
aaa
outsb
das
fdiv
loop
lcall
sub
mov
dec
lret
and
pop
icebp
sub
dec
pusha
and
mov
push
xlat
testb
mov
adc
dec
adc
mov
jecxz
scas
xchg
push
int
jp
xchg
jnp
mov
jae
jg
lods
mov
xor
dec
xchg
add
xchg
jbe
jne
and
jge
or
sbb
test
cmp
sbb
inc
mov
fists
aas
daa
push
xchg
adc
or
cmpsl
aas
bound
scas
xor
sahf
out
stos
inc
xorl
loopne
mov
jecxz
inc
loope
stc
ror
aam
and
sbbl
addps
and
dec
adc
in
xor
push
test
add
and
pop
es
lock
pop
or
inc
in
mov
cmc
ret
add
and
scas
adc
clc
bound
ret
jb
sti
push
js
inc
xor
add
sub
inc
mov
sti
popf
and
add
mov
mov
xor
lcall
lock
sbb
fwait
xor
pop
lods
out
out
test
cmp
push
mov
jno
popa
imul
push
cli
dec
rep
ja
ljmp
and
pop
movsl
fwait
inc
push
jl
mov
inc
push
ljmp
mov
stc
jge
aas
stc
jg
int
jnp
les
inc
mov
sub
sbb
stc
pusha
int
jns
aaa
sub
push
sbb
movsb
sub
rcrb
enter
pop
popa
pop
mov
mov
leave
mov
pop
test
int
sub
dec
xor
xchg
or
je
cmp
es
loopne
push
idivl
popa
orb
cltd
mov
mov
push
mov
xchg
out
loop
sub
inc
cmp
rcrl
icebp
cmpsb
push
aam
aam
pop
sub
mov
int
insl
inc
xchg
jno
pop
inc
imul
cmovo
rorl
mov
shrb
in
decl
into
cmp
dec
popa
and
sub
lods
pop
iret
xchg
rcll
stos
jecxz
les
outsb
cmpsl
adc
or
add
jp
js
aas
lods
rcll
push
aas
fcomp
jnp
pop
cli
inc
jecxz
lds
cmp
fs
sar
leave
out
sub
enter
add
dec
cltd
mov
js
add
dec
cmp
cmp
ret
pop
xchg
fs
sti
in
mov
mov
dec
pop
leave
aas
lret
push
test
outsl
stc
stos
fnstcw
test
xchg
xor
sub
ret
xor
daa
loop
cli
inc
cmp
fstl
lahf
mov
into
mov
fsubl
enter
lea
aad
movsb
out
adc
push
cmpsl
mov
int3
cli
iret
inc
mov
adc
inc
mov
insb
addr16
pop
mov
and
add
jnp
out
icebp
mov
movsb
push
fdivrp
sub
xchg
nop
imulb
cmpsl
inc
arpl
mov
pusha
sub
rcr
fdiv
sarl
arpl
push
mov
pop
add
sub
mov
sbb
push
mov
cmp
push
add
loope
jbe
dec
or
push
xchg
arpl
push
cmpsl
adc
push
xchg
stos
fwait
xor
rcll
bound
pop
mov
mov
fstp
xor
movsb
pop
push
movsb
loopne
dec
push
rorb
jbe
inc
insb
fdivrs
cmp
mov
lods
push
gs
repnz
mov
les
mov
hlt
cwtl
pop
test
incb
sub
pop
imul
xchg
push
lahf
xchg
mov
sti
addr16
ljmp
scas
int
sbb
mov
xchg
lret
pop
loope
or
jb
jnp
xchg
popf
sub
inc
dec
sbb
inc
mov
dec
adc
ret
add
in
push
add
insl
leave
ffree
enter
dec
lds
fisubrl
outsb
fs
es
sub
push
ret
popa
cmpl
add
js
mov
sbb
mov
dec
lods
dec
sbb
mov
cltd
inc
rcrb
sbb
or
and
loope
dec
mov
cs
shrb
cmp
or
mov
movsb
fnstsw
adc
out
adc
test
ja
and
xor
xorl
xchg
xlat
sub
pushf
enter
daa
insb
push
sbb
pop
lock
push
and
call
fdivr
dec
sarl
fildl
xchg
xor
lods
sub
popa
clc
es
sub
lods
in
lret
outsb
and
jbe
mov
push
inc
out
inc
and
outsb
dec
adc
sub
lea
int
pushf
sbb
push
addr16
mov
adc
mov
inc
pop
mov
jbe
cltd
pop
cmpsb
sub
mov
add
jp
sbb
and
popf
or
xlat
cmp
repz
rcrl
fisttpl
das
pusha
sbbl
mov
lcall
push
cmc
cltd
mov
sbb
inc
mov
jge
insl
test
sarb
sahf
fadds
pushf
fld
sub
outsl
ret
popf
fdivrl
or
gs
lds
insl
add
xchg
xchg
popf
or
ret
movsb
mov
xchg
dec
orb
rcrl
sbb
or
sbb
mov
dec
xchg
fs
call
shlb
jns
fcomip
add
xorb
call
cmp
lcall
jo
and
fwait
mov
jo
decb
loope
xchg
shrb
mov
test
jbe
sub
xchg
gs
inc
jp
sete
pop
push
fdivr
arpl
xorl
mov
xor
mov
out
adc
cmp
cs
bnd
and
dec
mov
dec
jne
dec
ffreep
leave
mov
jbe
sub
pop
popf
push
int3
push
test
xor
fsubl
arpl
mov
mulb
aad
lods
add
inc
loopne
ja
mov
lock
mov
in
cs
icebp
adc
cld
gs
scas
jo
lods
or
lods
push
mov
in
xchg
adc
mulb
or
movsl
loope
sbbl
in
jo
mov
leave
push
sub
inc
imul
jb
dec
sbbb
bound
loop
mov
jecxz
lods
js
mov
es
xchg
add
daa
sub
mov
mov
lcall
jecxz
mov
ljmp
push
jp
movsl
imul
iret
sbb
adc
pop
push
scas
pusha
xor
inc
stos
mov
mov
inc
test
aam
leave
std
bound
jge
rol
lret
scas
sub
test
mov
lods
xor
sahf
negb
xchg
jg
hlt
pop
aas
cmp
jno
xchg
or
jnp
rcr
xchg
pushl
pop
dec
stos
test
jge
or
cmpsl
lret
mov
mov
inc
gs
xchg
int
mov
lahf
xlat
sarb
sbb
jnp
sbb
sahf
or
mov
jno
push
in
insl
stc
add
sbb
dec
sub
out
mov
push
push
jo
int
ljmp
in
cmc
dec
movsl
outsb
test
outsl
das
cmp
sbb
xchg
push
cmpsl
xor
pop
mov
mov
scas
repnz
fdivrs
shlb
mov
xor
shl
iret
mov
mov
test
adc
in
jle
aaa
sbb
out
in
aaa
lahf
flds
repnz
mov
or
add
lock
push
xor
inc
mov
jb
push
adc
cmp
dec
nop
outsl
test
stos
test
arpl
mov
out
push
daa
add
jae
int
lcall
outsw
sar
xor
cmp
sarb
or
mov
mov
sub
mov
jb
enter
test
stc
fwait
add
xor
mov
and
mov
rolb
jmp
adc
sub
add
push
sar
push
popa
lret
ljmp
jle
or
or
push
mov
mov
daa
cmp
fsubrl
mov
xchg
les
push
lock
fdivrl
loopne
or
mov
dec
jecxz
cmpsl
fnsave
cmp
or
cmp
es
inc
cmpsb
int3
or
repnz
mov
jae
sub
insl
jmp
cli
in
ficoml
push
jbe
pop
push
sbb
and
mov
sub
push
pop
sub
jp
or
push
push
mov
sub
out
mov
cmpsb
mov
push
add
rsqrtps
pop
mov
sbb
add
xlat
pop
pop
mov
ss
fcoms
push
add
popa
emms
jno
pop
push
adc
leave
idivb
sbb
addr16
lret
sub
mov
daa
and
lret
insl
mov
scas
pop
out
push
rcrb
cli
jo
out
dec
insb
mov
inc
pop
iret
roll
subl
mov
ss
mov
xchg
fldt
jmp
push
sbb
dec
cmp
inc
ret
aaa
mov
dec
mov
out
sub
mov
push
sbb
fwait
lret
pusha
xchg
fnstenv
std
loop
sbb
jmp
cltd
sbb
sub
jl
cmp
xorb
pop
aad
mov
rclb
xchg
cmp
pushf
data16
add
addr16
sbb
aaa
pushf
cmp
out
test
call
fcoml
into
jmp
out
sub
imul
mov
sub
pop
cmp
and
int
movsl
fbstp
push
enter
divl
bound
jmp
xor
inc
into
dec
aas
pusha
ljmp
testl
insl
or
mov
xchg
push
hlt
in
dec
jnp
test
or
add
in
mov
sbb
sbb
fst
ror
cmp
hlt
mulb
ljmp
mov
mov
out
test
inc
mov
lea
cmp
xchg
xor
push
cmpsl
mov
cmpsb
and
mov
add
jno
lahf
cmp
mov
dec
rclb
sbb
popf
pop
sti
and
lcall
lcall
loopne
test
stc
js
cs
adc
fsubrs
and
dec
and
repz
cmp
fildl
add
or
pop
int
push
rolb
jmp
cli
lock
lahf
sub
jns
jp
test
hlt
lods
push
push
out
fisttpll
cmp
ret
add
enter
aad
push
mov
adc
or
jns
lea
stc
adc
pop
out
imul
fisttps
clc
push
xor
pop
xchg
push
rcr
jg
push
mov
movsl
stc
push
jo
mov
pusha
push
cs
or
int3
dec
stos
cmc
repnz
daa
scas
add
mov
insb
pop
fcmove
aad
das
sbb
add
or
cmpsb
stos
cmc
add
jo
mov
fucomi
and
add
adc
add
int
and
out
scas
mov
xor
xchg
xor
fwait
repz
pop
nop
push
push
mov
mov
jle
lahf
dec
lcall
dec
xchg
sbbb
lds
push
lods
sahf
mov
das
xor
jmp
inc
rol
cld
loopne
test
nop
or
inc
jns
push
sub
xchg
lcall
pop
stos
pop
adc
in
fwait
jge
imul
jo
int3
mov
mov
test
aad
mov
clc
lock
xchg
mull
cmpsl
xchg
movsl
inc
andl
in
cwtl
test
fldcw
add
lds
jae
inc
sbb
push
test
jge
cmpl
inc
mov
idivb
mov
mov
decl
jl
lret
bound
mov
xor
or
sbb
lret
jnp
stos
pop
andb
inc
lahf
sti
cmpsb
or
shl
cmp
sbb
sbb
insl
adc
sub
dec
jo
cmpsb
subl
push
pop
xchg
cmp
test
and
popf
into
rcl
rcl
push
outsb
rcr
stos
fwait
mov
xchg
fisubl
outsl
les
lds
cli
fnstsw
sub
repz
or
arpl
rcr
jne
xchg
in
fwait
stos
sub
shrl
mov
pop
mov
dec
insb
mov
xlat
mov
scas
orl
adc
dec
sbb
xor
clc
stos
repz
inc
jg
inc
out
xor
pop
cmp
outsb
or
rcr
iret
add
mov
scas
cmp
cmp
mov
lods
mov
push
cmp
adc
and
scas
pop
insb
or
mov
mov
inc
cmp
sub
popa
outsl
nop
pop
and
addr16
adc
pop
jp
aam
arpl
frstor
mulb
mov
js
xchg
repz
sbb
xchg
mov
inc
pop
pop
aas
and
popa
inc
pop
mov
sbb
movsb
mov
mov
xchg
or
movsb
dec
pop
cld
inc
lds
push
and
push
pop
lea
xor
or
jmp
add
rcr
repz
mov
jb
fs
orb
sbb
xchg
cwtl
das
add
adc
pop
mov
jnp
add
jnp
imull
sbb
sub
push
add
adc
push
jmp
push
mov
fsubs
sub
sti
xor
add
fimull
stos
push
cmpsl
mov
and
sarb
ds
add
addr16
push
mov
mov
xchg
add
jp
out
push
dec
int
fbld
data16
ja
pop
push
roll
sub
test
mov
or
loopne
mov
gs
aaa
cmp
ja
shrl
insb
mov
cwtl
mov
xor
jl
adc
sbb
jno
movsb
mov
mov
shrb
std
sbb
push
dec
add
fcom
sub
jle
pop
sub
or
sbb
in
pop
sub
sub
cmp
pop
mov
fcompl
pushf
mov
das
push
filds
ljmp
mov
adc
sar
imul
add
cmp
std
sub
dec
fisttps
cmpsb
mov
inc
hlt
les
mul
adc
pop
xchg
cmpl
test
dec
jnp
sub
mov
repz
inc
movsl
sub
inc
in
add
imul
gs
clc
imul
push
mov
cmc
mov
adc
or
fldcw
aam
jb
pushl
adc
pop
push
jle
jl
dec
sub
fwait
dec
cmp
sbb
aad
not
loope
mov
inc
pop
inc
xor
sub
sub
in
mov
xor
or
sub
ds
aad
cli
not
les
loop
adc
xchg
test
cld
sub
xor
or
sbb
js
or
xor
adc
jmp
mov
mov
jb
ret
int
ret
adc
cmpsb
cmpsl
or
adcb
mov
ret
mov
cmpsb
inc
adc
out
jmp
and
jb
andl
test
add
pop
dec
ss
mov
sub
push
call
sub
xchg
lea
je
test
stos
in
lcall
jle
xchg
pop
lods
push
sbb
arpl
xchg
jle
gs
subl
xor
shrl
out
mov
cmc
es
push
cltd
shll
fcompl
pop
or
int
pop
sub
mov
inc
sahf
and
add
xlat
out
push
mov
pop
jb
cmp
vunpckhpd
es
testb
dec
sub
into
and
xchg
mov
int
xchg
shrb
dec
mov
gs
add
dec
arpl
mov
sub
out
out
arpl
jno
push
jae
stos
push
cmpsb
hlt
in
lahf
in
iret
pop
shl
and
fbld
inc
jmp
sbb
mov
push
addr16
hlt
outsb
xchg
repz
pop
lock
out
les
pop
inc
test
and
pop
test
cmpsl
xchg
hlt
mov
or
loope
adc
hlt
xor
add
out
sbb
mov
sbb
and
inc
sbb
jge
shll
jne
add
ret
add
inc
mov
shll
push
loop
sbb
jmp
mov
int
mov
add
xchg
ficompl
adc
pop
sub
and
mov
or
hlt
loop
jns
push
add
cmpsl
or
pop
and
cmp
and
adc
addl
push
movsb
aaa
ljmp
xchg
xor
or
mov
jle
enter
mov
loope
add
stos
dec
shll
cmp
inc
xchg
push
call
adc
sti
push
mov
push
mov
inc
in
mov
inc
mov
imul
enter
out
mov
push
push
rorb
je
mov
sbb
shl
fisubs
int3
or
inc
sub
enter
lea
xor
inc
lea
scas
cwtl
mov
orl
add
pop
repz
les
or
xchg
push
jp,pt
addr16
testl
adc
push
push
and
jnp
push
loope
pop
sti
sbb
adc
push
insl
sbb
lret
mov
test
push
repnz
fs
cmpsb
stc
cmp
xchg
pop
mov
fwait
xlat
in
mov
pop
pop
sub
cmp
fnsave
push
hlt
pop
shrl
add
js
pushf
imul
lods
sbb
es
pushf
subb
fidivl
mov
cmp
or
out
inc
int
jl
push
sub
inc
mov
inc
popa
mov
std
insb
das
stc
icebp
das
das
mov
push
xchg
ja
movsb
pusha
xchg
fmull
repz
jge
daa
in
fnstenv
stos
outsl
dec
inc
jno
xor
mov
movsb
jns
ds
stc
and
mov
mov
lods
adc
pop
mov
shrl
mov
loope
xlat
std
stos
ret
fcomps
xchg
cmc
ds
out
inc
inc
mov
add
ret
mov
xchg
push
shlb
lods
das
add
jl
sub
lret
insb
popa
jmp
sti
movsb
cmp
or
cmpsl
int3
pop
jae
mov
int3
imul
sbb
pop
or
xor
outsb
mov
fdivrp
push
dec
ret
adc
arpl
and
loope
inc
jg
mov
and
test
or
sub
xchg
incl
fstl
xchg
jp
cmp
repnz
imul
mov
cmp
out
and
inc
push
flds
jp
sub
ja
scas
scas
mov
or
sti
loop
stc
or
pop
lock
call
jb
xchg
xchg
aam
int
std
loop
jmp
adcb
pop
sbb
inc
test
repz
imul
adc
movsl
xchg
mov
push
outsb
add
jmp
stc
outsl
fbstp
leave
clc
mov
sarl
cmp
insb
mov
fisttpl
call
inc
imul
daa
pop
or
iret
pop
hlt
xchg
mov
inc
push
ljmp
popa
cmp
sti
fcompl
imul
jmp
arpl
pop
and
mov
imul
call
push
fsubs
sbb
push
mov
cwtl
pop
jge
sbb
push
loope
call
fwait
jmp
mov
xor
sbb
repnz
add
pop
inc
jle
out
sti
and
mov
rcl
ljmp
jnp
jns
xlat
jmp
xchg
hlt
lods
lds
insl
lds
mov
adc
jo
in
sbb
lret
inc
inc
jns
mov
aad
in
sahf
inc
push
incb
test
outsl
fcompl
xorb
mov
add
add
in
dec
fidivrs
addr16
jecxz,pt
push
jno
fdivs
int3
pop
leave
xchg
and
shll
outsb
pop
push
dec
add
mov
dec
pop
cli
mov
cltd
ljmp
xchg
jne
mov
xor
ss
cltd
fisttps
cli
bound
jle
add
mov
repnz
fsts
dec
sub
icebp
sbb
in
dec
loope
push
add
add
lds
push
cmpsb
sbb
push
cmp
or
sbb
xor
jp
leave
mov
and
jns
imul
xchg
lret
jmp
lret
sti
sbb
adc
cmp
hlt
int3
push
add
fwait
mov
jmp
out
fwait
sbb
push
mov
inc
mov
mov
sub
cmc
push
push
lods
ror
xchg
shr
in
mov
jb
xchg
jg
cmp
cs
in
mov
xor
jl
mov
pop
lret
mov
xchg
ret
insb
cs
mov
jns
jmp
inc
mov
mov
jb
mov
pop
mov
mov
add
adc
les
int
sub
mov
loope
push
mov
push
dec
movsb
sbb
loop
std
shrb
push
insb
jge
in
adc
lods
shrb
popa
push
push
jl
cld
dec
cmc
jl
rorb
jle
or
xchg
inc
in
mov
mov
inc
aam
cmp
adcb
and
loopne
fildl
xor
jne
rolb
jge
push
adc
mov
outsb
push
jge
jmp
rcl
outsb
fstpl
jg
jl
lahf
xor
loopne
push
sbb
sbb
add
sbb
pop
adc
dec
arpl
std
push
lds
sbb
fcmovbe
lds
arpl
loope
and
popa
andl
push
adc
xor
push
cmp
jp
adc
adc
das
jl
pop
push
test
add
or
push
int3
mov
je
inc
sbbb
adc
and
push
dec
cmpsb
jge
lcall
in
popf
cmpsl
jmp
pop
mov
repz
ficomps
mov
fcoms
xchg
pop
sub
xchg
imul
mov
jp
enter
in
xchg
push
cld
sbb
lahf
rcrb
test
dec
mov
jl
mov
sub
imul
xor
cmp
xor
mov
inc
inc
sub
push
sbb
out
dec
aad
xchg
shll
pop
cli
movsl
icebp
and
popf
notl
adc
mov
imul
xor
jmp
jecxz
lock
inc
ss
push
mov
cwtl
xchg
adc
lods
sbb
and
xchg
das
jmp
jno
inc
cmp
pop
jecxz
mov
pop
outsb
sbb
test
dec
and
push
mov
add
add
in
mov
cmpsl
cli
jne
out
int3
jp
pop
pop
adc
sub
sub
mov
xor
xor
push
pop
scas
movsl
dec
sub
nop
adc
stc
fsubrp
std
mov
and
shrl
or
jno
into
xchg
into
mull
and
mov
je
fldcw
mov
ss
mov
push
cmp
lods
jmp
ljmp
cmp
loope
call
aaa
insb
les
frstor
cwtl
insl
pop
fbld
or
dec
outsl
and
sbb
mov
pusha
paddusw
push
lock
dec
push
cmpsl
jmp
push
ds
dec
mov
test
popa
hlt
pop
ds
mov
xchg
add
sub
aam
aaa
mov
jmp
push
sbb
add
pop
and
sbb
push
adcl
pop
les
xchg
and
inc
mov
inc
imul
mov
ret
adc
int3
dec
jge
push
fcom
cmp
mov
jo
jecxz
or
scas
inc
lret
fs
neg
mov
ljmp
roll
pop
cmp
or
mov
adc
fcomps
aam
arpl
adc
negb
mov
repz
cld
cwtl
pop
jbe
xchg
repnz
push
sub
dec
and
and
jecxz
xlat
mov
xchg
flds
inc
ljmp
sub
push
pop
inc
jge
adc
pop
sub
ljmp
fcompl
mov
lahf
ja
repz
loopne
sbb
pop
mov
aaa
mov
in
xchg
add
cmp
and
mov
sbb
popf
out
sarb
push
mov
bound
and
push
fwait
das
cmp
lock
out
adc
jmp
pop
xchg
dec
cld
ja
fmull
dec
data16
lea
out
mov
dec
test
call
pop
xor
adc
mov
push
test
das
je
mov
or
lock
mov
lods
xchg
xchg
jge
out
lea
cmpsb
clc
sub
gs
jmp
dec
or
pop
imul
add
in
test
add
sbb
push
push
mov
mov
push
loopne
push
mov
call
aaa
je
dec
push
loop
jp
mov
popa
mov
pop
outsb
mov
mov
sub
push
mov
xor
test
mov
pop
and
push
cmp
inc
pop
fs
push
mulb
cld
fsubs
sarl
in
push
lret
and
adc
adc
lcall
es
imul
mov
and
sbb
lods
cltd
jb
jle
xor
aad
insl
pop
mov
xor
dec
call
pop
mov
push
ds
and
xchg
cmp
xchg
insl
repnz
outsb
sbb
popl
imul
add
js
pop
aam
jae
js
loope
ficoml
stos
fistl
fidivl
push
movsb
cs
pop
insb
mov
push
or
sub
xor
or
push
sbbb
fdivs
iret
push
push
stos
mov
sub
inc
ljmp
mov
pop
int3
cld
loopne
jno
sbb
pop
lds
addr16
sub
push
push
or
mov
and
inc
out
cmp
mov
sti
in
mov
scas
adc
sub
jns
sbb
adc
aas
xchg
add
test
ret
call
icebp
cmp
jno
xlat
sub
xchg
int
dec
or
sub
pop
xchg
loopne
adc
in
pop
push
popa
lret
cmp
fidivrs
adc
addr16
sti
lret
cmpsb
sub
js
inc
cmpsl
xor
xor
xor
popf
mov
mov
ljmp
sub
andl
or
out
jp
scas
or
enter
daa
stc
es
sub
jo
xchg
pop
inc
mov
icebp
push
mov
fldt
mov
push
jp
sub
xchg
ficoml
add
stos
cli
sti
adc
scas
xchg
jo
adcl
push
cwtl
jae
sbb
fists
ljmp
cmp
test
rclb
xchg
lds
enter
add
jmp
and
mov
push
loop
std
adc
fwait
mulb
jg
mov
cmp
xor
rcrb
sbb
adc
jb
pop
push
jo
xchg
adc
fisubl
mov
inc
cld
jmp
je
mov
ret
adc
ficoms
adc
pop
cmp
or
mov
sub
inc
sahf
stos
or
int
push
xor
jl
dec
push
roll
jl
les
xchg
jae
sub
xchg
xchg
out
push
addr16
shll
xchg
pop
lcall
ja
push
jecxz
les
les
fildl
xorb
mov
popa
mov
rsm
push
enter
jmp
mov
mov
addr16
sbb
pop
bound
xchg
aaa
outsb
adc
iret
adc
fidivs
enter
and
lcall
insb
out
inc
add
in
or
mov
sbb
rcrl
cmp
add
sar
rorb
xorl
mov
sub
adc
outsl
lret
out
jle
pusha
pop
and
mov
push
fxch
jbe
adc
cwtl
in
xor
xor
inc
fsubrl
xorb
xor
mov
out
cld
rorb
ljmp
call
stos
mov
mov
dec
or
rolb
or
aas
sbb
sahf
fists
pop
shlb
cli
and
lret
jmp
cwtl
ss
sub
test
insb
inc
mov
outsb
cmp
cltd
adc
mov
dec
divl
into
lcall
fisubrs
lcall
push
mov
test
inc
in
add
movsl
int
xor
lret
pop
clc
das
lods
xchg
dec
cltd
xor
xchg
daa
sub
cmp
cmp
xlat
pop
xchg
sub
xor
dec
rolb
add
sub
sub
adc
repz
pop
addr16
popf
fstpl
stc
mov
mov
jg
mov
sti
xchg
adc
mov
in
xor
aaa
fldenv
data16
xor
mov
outsb
scas
mov
lahf
cwtl
fimull
dec
push
loopne
dec
push
cld
orl
in
lds
scas
adc
dec
push
aad
in
jb
dec
lea
ja
scas
mov
pop
jo
stc
jecxz
adc
fsubs
das
fnstsw
movsl
push
add
out
rorb
xchg
ficoml
xor
inc
mov
aaa
inc
cmp
ds
notb
nop
lds
rcll
mov
cli
aaa
cmpsb
or
and
lods
out
test
pop
add
and
pushf
sub
sub
sub
lcall
xchg
adc
or
push
xchg
mov
mov
adc
xchg
dec
movsl
roll
std
das
cmp
pop
ret
aas
pop
sarb
push
aam
cwtl
shll
int
push
mov
out
aam
pop
mov
jno
ret
sbb
jl
jp
pop
mov
out
cmp
sub
int3
inc
push
repz
emms
test
push
fsubl
mov
ss
xor
popa
xor
cmp
push
mov
fstpl
lret
jnp
out
mov
movsl
xor
pop
jns
stos
or
xchg
imul
jmp
lahf
aas
push
jne,pn
daa
mov
das
xchg
push
jp
mov
mov
sbb
cmp
outsb
xor
push
jne
adc
out
roll
js
dec
lahf
clc
cmp
pop
mov
xchg
or
lret
jmp
aam
jnp
sbb
add
idivb
mov
nop
scas
inc
inc
dec
or
pop
dec
repnz
lods
add
xsha1
cmpsb
imul
test
movb
bound
ss
enter
rcl
add
mov
inc
iret
scas
js
dec
les
jge
jo
test
pop
out
mov
xchg
add
push
jne
sub
push
shl
or
mov
inc
jns
inc
jl
shrl
pop
fiadds
clc
lock
sub
mov
pop
aas
sbb
loope
cmp
fwait
add
sbb
mov
dec
shlb
xchg
test
xor
sub
mov
imul
shll
mov
push
pop
cmpsl
inc
je
push
pop
enter
aad
inc
loope
pop
std
sub
lods
jno
test
jle
push
dec
dec
nop
dec
out
or
cs
mov
jmp
cli
sbb
js
out
push
xchg
sahf
push
and
sbb
cmc
adc
lret
pop
ret
out
out
pop
rolb
push
mov
loope
cli
jne
cmp
cmp
push
leave
mov
insl
ljmp
sub
pop
es
push
inc
inc
mov
out
cmc
lret
flds
out
pop
cwtl
xor
shlb
ljmp
clc
mov
mov
jmp
jge
pop
nop
xor
xor
cmc
dec
iret
dec
add
dec
mov
outsb
rclb
into
and
pop
push
sub
mov
push
mov
mov
xchg
fxch
lods
lods
testb
lcall
out
sub
add
sbbl
cmc
je
stos
ret
sbb
xchg
out
sub
or
fdivrl
pushl
popf
or
jno
jge
push
leave
sbb
xlat
hlt
mov
xchg
push
movsl
scas
dec
dec
pop
xorb
hlt
std
repz
enter
out
movsl
aam
xchg
pop
add
in
mov
jne
add
negb
and
sbb
push
mov
jbe
into
bound
icebp
adc
sbb
nop
jnp
imul
dec
cs
inc
sbb
mov
or
or
andl
xchg
xchg
mov
repnz
out
cmp
in
cld
mov
adc
call
ret
push
jno
cwtl
mov
push
gs
cmp
sub
mov
aas
mov
mov
inc
xchg
lock
push
add
test
mov
cwtl
stos
inc
mov
inc
xor
sub
jnp
je
sbb
lcall
cmp
arpl
mov
dec
aam
pop
pushf
loope
mov
xchg
mov
sti
movd
ficoms
xchg
imul
dec
lods
xor
fs
mov
mov
sti
jb
sbb
lods
mov
les
dec
out
jbe
push
mov
cmpsl
mov
add
dec
icebp
sbb
mov
mov
iret
push
jp
sbb
fwait
ds
inc
ret
icebp
jl
mov
clc
je
sub
jecxz
notb
inc
sub
jmp
imul
or
pop
gs
outsb
xchg
sub
xor
push
or
ss
sub
adcb
mov
cld
shl
fnstenv
dec
mov
mov
sub
aaa
cmpsb
fcmovnbe
ret
xorb
cmpsb
ljmp
stos
jno
and
sub
mov
fsubrl
push
pusha
sbb
push
and
dec
dec
leave
or
movsb
xchg
ficompl
fwait
ja
stos
hlt
xchg
mov
in
jnp
mov
mov
cmc
sahf
and
adc
mov
cmc
sbb
fldcw
pusha
adc
add
adc
dec
lods
negb
pusha
dec
imul
sub
lods
push
lahf
mov
out
xlat
vmovaps
mov
lcall
jp
addl
adc
lods
pop
test
mov
push
xor
dec
jae
pusha
sarb
pavgb
adc
mull
push
repz
ret
shrb
daa
inc
mov
call
hlt
scas
movsl
jl
repz
cmp
push
cmp
jno
xchg
add
dec
pop
pop
add
pop
push
adc
clc
cmc
pushf
int
pop
sbb
mov
add
pop
and
stos
mov
pop
sti
fwait
aam
ficomps
test
loopne
mov
sub
mov
xchg
xor
xchg
leave
cmc
lret
jno
fadd
push
pop
mov
insb
lock
mov
pop
hlt
xchg
fcomp
lock
mov
lret
push
inc
ds
popf
outsl
or
je
lret
stc
imul
loope
into
in
lea
insl
mov
pusha
jno
shrb
test
in
in
out
sub
loope
pop
dec
add
jg
inc
dec
pop
pop
pop
stos
out
mov
fs
push
test
jbe
cmp
ljmp
arpl
xor
test
xchg
dec
dec
or
popa
adc
jp
sub
jne
sbb
sub
leave
mov
cmc
incb
pop
push
and
push
mov
xchg
sub
fbld
lock
mov
enter
sub
or
int
pop
call
sbb
xchg
fdivl
mov
lods
mov
mov
xchg
or
jp
mov
ffree
dec
jnp
mov
mov
inc
nop
ret
insb
lret
inc
lret
or
push
shll
out
in
in
mov
fwait
mov
imull
jb
dec
mov
lds
jmp
or
aad
aad
adc
je
mov
js
add
hlt
lahf
in
out
sub
lods
stos
add
or
repz
gs
sti
sbb
inc
jle
test
imul
outsl
xor
insb
aas
pop
sbb
inc
test
cmp
inc
and
std
call
push
leave
cmp
push
mov
sti
sub
jno
in
and
jnp
outsl
das
or
jo
repz
int
and
popa
rolb
xchg
gs
xor
std
popf
or
aam
repnz
jmp
add
mov
movsb
fists
lock
xchg
cmp
dec
int
dec
das
test
gs
lock
or
add
pop
aaa
jbe
lds
lods
xor
lret
dec
and
xor
movsb
jnp
arpl
or
xor
mov
addr16
pop
lahf
dec
arpl
xchg
mov
sbb
mov
jp
in
push
mov
inc
pop
pop
mov
sarb
sahf
movsb
test
loop
inc
dec
jo
and
fistl
mov
mov
dec
mov
push
fwait
lea
dec
sub
dec
add
cmp
add
out
mov
repnz
cld
fcoms
icebp
jl
mov
bound
les
test
sub
sub
addr16
test
clc
sbb
rcll
addps
scas
je
imul
repnz
pop
xor
inc
jno
add
lock
mov
push
add
test
pop
jns
mov
out
cmp
and
int
in
sbb
mov
movsb
mov
cld
hlt
or
adc
addr16
mov
or
imul
adc
ret
and
xor
pop
xor
divl
and
adc
pop
mov
cmp
test
add
pop
shl
adc
pop
call
and
aaa
xor
movsb
xchg
xlat
push
cmc
stos
rorb
inc
test
pop
decl
shrb
xor
xchg
std
mov
lcall
mov
push
mov
mov
xor
negb
add
inc
pop
sbb
jb
dec
icebp
pusha
push
sarb
flds
fs
xchg
jae
pop
in
lds
push
js
push
mov
fisubs
jbe
pop
int3
mov
pop
scas
pop
jmp
pop
cmc
add
mov
stos
and
lcall
adc
xor
jb
add
mov
xchg
sub
movsb
push
mov
arpl
mov
shlb
mov
movsl
in
pop
rclb
jo
adc
dec
cmp
push
sub
push
es
jae
pop
or
mov
mov
pop
in
pop
adc
xor
fiaddl
jnp
inc
dec
pusha
mov
cmp
sub
xchg
xchg
mov
jb
popa
sarl
cmpsl
xchg
pushf
jno
pop
mov
nop
add
fwait
xor
dec
mov
arpl
je
loopne
shr
add
lea
mov
in
out
sahf
shrl
inc
push
cld
aam
sub
lock
pop
fldenv
mov
fsub
xchg
adc
subb
icebp
fidivrs
mov
or
inc
inc
je
movsl
mov
push
dec
aas
push
add
xchg
pop
and
xchg
mov
inc
mov
into
pop
and
rol
arpl
test
push
scas
rcl
ss
fidivl
xchg
cmp
mov
iret
enter
adc
jb
sub
push
lcall
daa
movsl
push
dec
xor
sahf
sar
sahf
sbbl
stos
aaa
popf
mov
cmp
fnstsw
xchg
out
mov
dec
popa
mov
roll
push
insb
dec
popa
out
sbbl
xchg
movsb
aas
aas
insb
bound
push
push
stos
dec
push
pop
shll
outsb
movsb
in
sbb
outsl
insl
mov
ret
fidivs
push
lods
mov
pop
adc
out
dec
outsb
and
daa
or
mov
inc
in
jl
shll
push
push
inc
sub
imul
fcmovu
and
int3
mov
add
stos
mov
js
mov
repnz
push
jne
dec
mov
mov
pop
mov
mov
mov
gs
xor
pop
xchg
pop
std
je
mov
xchg
add
push
jnp
cmp
xor
pop
xchg
and
repz
test
outsb
jno
xlat
mov
push
cmpsb
pop
les
shrb
pop
xchg
jg
pop
push
mov
iret
lret
dec
adc
sub
aam
inc
sub
inc
or
loope
fs
mov
dec
lock
sar
fwait
call
subb
hlt
xor
cld
cmp
mov
adc
jae
lahf
cli
faddl
adc
add
imul
sahf
std
cmpsl
stos
jmp
xchg
add
psubb
or
mov
shlb
sbb
mov
loopne
icebp
fisubrl
js
cmpsb
pop
inc
pop
insb
push
pop
fistpll
imul
sub
xchg
sub
out
lods
scas
and
sbb
repz
unpcklps
jne
push
scas
iret
lock
adc
or
shlb
outsl
xchg
cmp
in
call
mov
flds
outsb
mov
lock
or
cltd
dec
fcmovnb
movb
dec
xchg
fmull
pop
mov
xchg
scas
andb
dec
orl
addl
add
adc
lcall
adc
adc
sahf
daa
iret
mov
push
roll
pop
cmp
enter
mov
lahf
cli
lea
clc
adc
adc
lock
sbb
xlat
dec
gs
fwait
xorb
jge
sbb
pop
or
jne
jo
mov
repz
push
out
xor
mov
cmpsl
les
xchg
pop
imulb
push
fistl
cmp
aad
adc
adc
or
aad
cmpsl
loope
ss
sbb
hlt
mov
adc
movsl
sub
cwtl
fadds
and
cwtl
fnstsw
mov
and
lret
lock
dec
or
test
aas
fwait
cmpsl
xor
sbb
sahf
jecxz
fsubrp
sub
sbbl
mov
arpl
hlt
adc
fwait
pop
test
rcrl
lahf
xor
mov
and
decl
mov
rorb
cmp
and
stos
mov
rcrl
enter
dec
movsb
and
bound
and
pop
repnz
je
ficoms
push
enter
cld
imul
xchg
popa
cmp
cmp
mov
stos
loop
pop
or
mov
and
cld
lods
mov
mov
and
mov
dec
push
outsb
pushf
push
mov
lods
rclb
jae
jmp
mov
dec
in
in
jp
je
or
xchg
jge
test
push
add
xchg
dec
or
add
andl
sub
cmp
out
addl
jge
in
lcall
scas
dec
gs
or
insl
pop
mov
int3
je
jo
or
in
test
aad
jl
mov
mov
daa
outsl
scas
cmc
decl
xchg
stc
dec
inc
jmp
mov
imul
movsb
mov
icebp
bnd
mov
aas
outsb
hlt
lret
bound
lahf
andb
jns
andb
mov
sti
pushf
cmc
push
addr16
loopne
mov
ja,pn
jne
fcmovb
popw
mov
lret
divl
popa
sbb
and
inc
repnz
enter
mov
mov
add
mov
and
mov
rolb
inc
lcall
cs
mov
pushf
and
hlt
adc
jae
jecxz,pt
mov
ficompl
dec
sarb
sub
pop
xor
shl
add
sahf
leave
jb
fdivr
lcall
and
sub
je
xchg
mov
adcl
pop
in
loop
scas
hlt
repnz
mov
call
outsb
pop
call
lods
xchg
xor
mov
pushf
enter
mov
loopne
nop
mov
ss
shll
pop
out
mov
sub
dec
mov
adc
dec
mov
aam
xor
jmp
test
cmovs
test
enter
inc
sub
xchg
mov
xchg
rcr
inc
xchg
lods
aas
stos
stos
fistps
call
adc
stc
xchg
das
pop
mov
push
push
mov
jnp
scas
sbb
cmp
push
adc
sti
push
add
push
or
add
push
inc
mov
dec
pop
dec
dec
fld
out
out
nop
out
cld
or
mov
jae
lret
imul
inc
lods
fbld
in
popl
add
mov
ret
jg
sub
aaa
loopne
xor
dec
mul
pop
inc
xchg
imul
mov
aad
data16
sti
jl
dec
mov
in
adc
xor
insl
clc
mov
pop
lock
mov
insb
cs
pop
push
mov
jle
mov
or
sbb
fidivs
jne
mov
mov
fisttpll
gs
adc
pop
das
xlat
faddp
dec
icebp
ret
push
pop
jg
mov
lea
cmp
and
adcl
or
lea
mov
jecxz
jg
int
pop
arpl
in
jg
dec
cli
jno
shrb
fs
and
test
pop
add
fistpll
jne
mov
pop
or
cmp
sub
push
cmp
mov
xor
bts
imul
jg
scas
add
and
pop
jp
add
push
mov
mov
dec
dec
and
daa
mov
mov
xchg
jbe
sti
or
xchg
mov
jo
inc
test
ja
or
jbe
xchg
in
aaa
mul
cmpsl
sub
mov
cmpsl
inc
pusha
in
loopne
dec
push
repnz
xchg
cmp
mov
dec
jmp
mov
xchg
andl
mov
cltd
and
add
sub
cmpsl
sbb
mov
sbb
and
jp
insb
out
in
ljmp
push
hlt
rcrb
or
data16
mov
sbb
aaa
jl
pop
mov
cmp
push
lret
shlb
leave
dec
pop
sub
lds
xchg
push
xchg
pop
sub
xchg
mov
stc
mov
inc
xor
in
cmpsb
lods
xorb
push
sbb
adc
dec
out
adc
pop
or
xor
dec
aaa
inc
hlt
adc
pop
mov
and
cmpsl
sub
sub
sub
out
pop
js
pop
insb
fildl
cmp
adc
enter
add
in
pop
cmpsl
add
jecxz
or
mov
aam
sub
loope
std
data16
leave
adc
mov
mov
xor
test
jnp
jbe
out
and
cmpsl
in
rep
mov
leave
insl
pushf
jb
ds
jge
jo
popa
push
pslld
pop
jle
fisubrl
icebp
push
js
jne
ljmp
divb
fnstsw
je
jg
mov
popa
sub
and
cmp
xchg
fucomip
mov
push
mov
sbb
adc
or
mov
sub
int3
jno
std
repz
adc
add
pop
pop
lcall
lahf
fdivl
fistpl
push
jge
xor
sti
adc
out
sbb
shr
fnstcw
sarb
sbb
int
lods
inc
pusha
adc
js
loopne
fdivrs
cld
xadd
leave
into
insb
sbb
adc
into
xor
adc
xchg
pop
xchg
icebp
je
push
sub
repz
andb
sbb
notw
mov
cmc
hlt
dec
je
shrb
rcr
repnz
push
jmp
lock
data16
cmp
test
dec
adc
pop
xor
test
stc
fisubrs
push
mov
imul
push
mov
xor
ret
ja
hlt
push
push
xchg
pop
iret
int3
aam
push
dec
add
ja
dec
pop
addr16
push
cmpsl
je
jne
inc
aas
cmpsl
movsl
in
lea
or
imul
sbb
fs
jp
decl
xlat
jecxz
fst
insb
js
and
repz
push
cmp
test
js
xchg
pop
jbe
add
hlt
mov
aas
cmpsb
aad
sbb
ljmp
pushaw
pop
push
rep
or
xor
add
push
xchg
push
lret
jne
and
cmp
stc
push
gs
in
push
sub
repnz
cltd
ss
fdivl
stos
pop
xor
xlat
cmp
pop
cmp
mov
inc
orl
jae
cld
call
outsb
or
insb
xor
jle
xor
dec
mov
das
ljmp
ret
add
fisttps
add
andl
push
rcrl
pop
mov
jbe
in
xchg
lret
in
addb
or
mov
shl
test
negl
das
sbb
out
stc
ret
cld
test
dec
imul
das
jmp
push
sbb
dec
mov
jns
outsb
lods
mov
out
sbb
enter
sbb
xchg
lret
sub
jae
dec
xor
pusha
push
xor
cld
fidivrs
and
adc
mov
ret
jecxz
mov
push
cmp
les
push
pop
adcb
aas
mov
enter
or
out
pop
dec
xor
loope
or
cmp
adc
mov
lods
test
jp
jmp
cmp
mov
cmpsl
push
mov
hlt
call
or
or
es
lods
pop
loope
push
mov
sub
xchg
jge
insb
stc
ja
pop
cmpsl
cld
call
push
mov
fldenv
jl
or
jnp
and
aaa
ds
pushf
call
push
bound
lcall
insl
cmp
or
ds
or
addr16
push
adc
mov
fsubs
sbb
lea
dec
pop
pop
ret
icebp
fisubrl
cmp
clc
mov
fnstsw
test
fimull
pop
imulb
in
pushf
daa
mov
or
call
jmp
cltd
ret
mov
pop
add
and
mov
mov
lods
jne
je
xor
sbbl
sbb
sub
cwtl
inc
adc
push
pop
lea
xor
sahf
cmc
add
ds
std
pushf
dec
imul
inc
and
pop
sub
xorb
out
paddd
in
dec
mov
lds
data16
mov
pop
in
enter
mov
aam
pop
fsubrl
mov
fiaddl
sub
rorb
xor
lods
fbstp
out
movsl
test
cmp
xchg
in
popa
shl
cmp
mov
leave
mov
xchg
shr
std
enter
push
push
lods
imul
dec
fcoml
sarl
mov
push
clc
fwait
loop
push
fnstsw
out
push
xchg
mov
int3
adc
ds
xor
fst
dec
in
and
ss
dec
scas
clc
mov
push
psubsw
cmp
jb
sub
pop
arpl
or
adc
xlat
int
mov
std
mov
and
mov
imulb
cli
mov
mov
mov
mov
pop
inc
jnp
int3
popa
stos
or
and
xor
fmuls
addr16
inc
dec
adc
fwait
xor
dec
in
repnz
aad
add
push
test
pop
adc
adc
test
jb
mov
push
popa
push
add
fsubrs
cmp
add
add
insl
lahf
cmp
adc
sub
shlb
pop
push
js
mov
fsubs
push
ljmp
pop
cmp
mov
add
mov
cmp
push
fmuls
dec
inc
addb
fucomp
cmpsb
sbb
rolb
xor
test
xor
push
test
cld
xchg
dec
adc
xchg
sub
add
sbb
psrad
sbb
adc
test
jge
lea
scas
cmc
jmp
pop
mov
sub
sti
mov
rcrl
filds
add
pop
loopne
pop
icebp
addr16
cmpsl
pop
xchg
leave
rcrl
test
or
cs
ds
imul
sub
adc
sub
bound
pop
sub
and
stc
popa
ret
scas
lret
fsubs
mov
iret
sahf
and
xchg
xchg
stos
bound
jo
outsl
mov
arpl
add
push
inc
inc
mov
loop
in
pop
jg
jle
push
mov
sbb
scas
jns
loopne
shlb
xor
inc
hlt
test
cmp
out
mov
xor
and
sarl
mov
ret
clc
divl
test
popf
popf
in
mov
cwtl
mov
stos
hlt
push
pusha
repz
mov
inc
mov
test
push
mov
push
fld
mov
mov
test
test
add
lds
mov
inc
adc
mov
mov
pop
cmp
daa
xor
mov
and
mov
mov
and
test
repnz
dec
inc
push
mov
push
lds
mov
jmp
mov
dec
mov
lahf
mov
mov
popf
lea
fldcw
iret
cmpsl
fiaddl
iret
in
negb
xlat
insb
cmp
jns
sbb
inc
imul
push
xor
or
mov
pop
loopne
ds
hlt
cmp
imul
jmp
add
mov
dec
or
es
cmpsl
sbb
daa
shl
orb
and
sub
push
add
lods
rcll
mov
pop
xor
out
imul
lcall
ljmp
int3
mov
or
setle
enter
out
mov
mov
sbb
pop
jge
mov
addl
push
jno
inc
pop
aaa
xchg
stc
das
std
dec
xor
cld
push
subb
aas
shrl
jg
leave
dec
movsl
push
and
loop
mov
insb
jle,pn
pop
xlat
mov
mov
ret
pop
je
clc
mov
jecxz
inc
out
add
shll
pop
pop
repnz
lret
mov
incb
loop
aaa
jo
jns
inc
pushf
cli
icebp
and
inc
inc
sub
rorb
bound
out
and
push
mov
push
pminsw
push
pop
mov
xchg
mov
cmp
sub
rcrl
or
cmc
jmp
enter
jmp
cmp
cmpsb
rcrl
xor
push
lods
sub
mov
into
aam
jle
mov
cmp
mov
pop
adc
sub
mov
ss
cmpb
mov
and
xor
into
roll
test
mov
faddl
or
movsb
lods
add
mov
or
pop
leave
out
fisttpll
nop
arpl
xchg
mov
push
jp
or
scas
jb
xor
mov
dec
test
push
push
scas
jmp
mov
popa
aaa
loope
cli
das
pop
lods
jmp
les
dec
sbb
dec
sbb
mov
xchg
arpl
xor
inc
and
jecxz
or
nop
ret
xchg
in
shr
xor
sub
mov
shll
fidivl
roll
ja
les
dec
out
mov
ljmp
cwtl
add
dec
xchg
fmull
pop
adc
or
cmp
jecxz
sbb
cmp
xchg
imul
push
jmp
stc
das
xor
loop
xor
push
ljmp
and
rclb
fbld
push
notl
shrb
push
test
pop
inc
std
mov
outsb
mov
nop
lods
mov
jnp
ret
in
mov
stos
mov
pop
jne
inc
pop
lods
lea
or
mov
xor
popf
xchg
sub
jp
xchg
add
adc
lods
mov
loop
inc
test
shll
cwtl
fisubrl
add
sbb
jb
bound
push
pop
lahf
dec
jb
jmp
cmpsb
jae
pop
adc
stc
push
and
or
sub
cs
mov
xor
mov
cltd
lret
mov
pushf
mov
cs
mov
icebp
fdivrl
push
jae
lock
cmpsb
inc
test
add
out
into
jno
adc
xor
mov
jnp
fdivl
filds
fidivs
push
lret
scas
fsubrs
dec
push
mov
dec
sbb
sbb
inc
inc
push
xor
mov
sub
or
mov
out
sbb
fldenv
pop
inc
xor
sahf
sbbl
stos
test
sub
rorl
sub
mov
jecxz
xor
in
mov
lcall
jge
or
ficompl
pop
fildll
inc
pop
mov
cld
sub
jmp
inc
sbb
cmp
and
loopne
leave
js
jecxz
jp
or
stos
fsubrl
add
pop
mov
leave
cwtl
adc
or
or
push
mov
imul
bound
cmc
cmp
mov
mov
addr16
adc
cmp
jnp
sub
sub
mov
fldcw
mov
stos
sarb
ficoms
lock
out
loopne
add
adc
lahf
shrl
stos
movl
nop
sti
and
mov
popa
fldcw
ficoms
lods
mov
out
decb
inc
sbb
jae
xor
mov
in
int
int3
mov
arpl
add
sbb
ja
scas
popa
and
jle
addl
lahf
cmc
not
arpl
in
push
call
push
pushl
sub
or
out
or
pop
pop
pop
les
xchg
jbe
push
js
add
lods
mov
sub
pop
push
sbb
mov
imul
push
jecxz
xchg
dec
lds
and
mov
shr
push
mov
aaa
and
sbbb
dec
mov
mov
loopne
mov
pop
and
mov
out
mov
es
rep
add
cmp
pop
aas
adc
aam
cmp
push
in
in
and
shlb
test
dec
adc
xchg
mov
inc
push
addr16
inc
sbb
addl
mov
inc
xchg
adc
xchg
lock
sbb
push
inc
sbb
sbbl
sbb
lds
pop
jo
or
out
out
int3
add
or
iret
bound
adc
sbb
mov
inc
add
push
pop
repnz
jge
ficoms
sub
lods
out
push
push
jmp
xchg
scas
dec
ja
and
dec
rclb
and
popf
cmp
mov
ds
or
shl
not
xchg
mov
stos
xchg
ret
loopne
pop
les
push
jne
aaa
sbb
js
ljmp
dec
aad
pop
mov
cmp
ret
cmpsb
rorl
add
jge
clc
movsl
lea
xor
pop
fidivl
leave
pushf
mov
fprem
js
xor
xor
pop
dec
adc
pushf
sub
inc
imul
cmp
loop
mov
push
adc
sahf
stos
or
add
jne
add
in
stc
sub
rcrl
test
xor
sbb
mov
out
out
lds
mov
xor
mov
jl
xchg
xchg
in
lock
shrl
mov
mov
sbb
addr16
je
insl
adc
xchg
dec
ficompl
xchg
lods
mov
fisubs
inc
movsl
adc
inc
in
add
sub
call
jmp
push
test
rol
or
aad
aad
ret
pop
jne
dec
xor
cld
std
jne
xchg
jp
test
rorb
lcall
push
push
call
mov
xlat
sbb
pop
inc
negl
or
jmp
sbb
fcmovnb
jl
mov
imul
mov
int3
lock
xor
fs
shrb
mov
adc
add
in
dec
das
inc
add
dec
rorl
xlat
mov
add
jne
pusha
cmpb
sbb
test
sbb
cltd
cmp
pop
enter
cmpsb
inc
fisubrs
mov
dec
mov
xchg
inc
mov
setns
mov
sbb
xchg
mov
sub
aas
xor
or
inc
movsb
mov
pop
dec
es
pop
arpl
xchg
out
mov
sahf
inc
cmpl
ret
adc
or
das
test
mov
fdivrs
inc
add
scas
cli
popl
add
push
in
push
aam
jp
jns
out
inc
ds
subb
pop
dec
mov
leave
data16
sub
into
sbb
xchg
cmpsl
out
sbb
xchg
sbb
pushf
mov
dec
and
cmp
xchg
sbb
int3
loop
pushf
xchg
stc
cmpsb
sbb
sub
mov
aad
push
aas
cmp
dec
aad
sbb
ds
pop
or
push
fldl
xor
mov
mov
and
ficoms
popa
sub
push
and
aas
sbb
aad
mov
mov
jge
or
mov
pop
cmp
mov
shlb
aad
mov
fcmovbe
dec
icebp
xchg
mov
fs
push
mov
inc
fdivl
push
mov
sbb
cmp
or
jg
lods
cmp
mov
xchg
cmp
stc
out
cwtl
jle
pop
aam
mov
pop
pop
dec
cmpsl
or
mov
outsb
test
adc
inc
jne
jmp
popf
test
aas
repz
loopne
cmp
and
or
in
test
cmp
pop
or
xchg
into
imulb
addl
fstps
aas
xor
into
ffreep
mov
mov
cmp
pop
pushf
aam
inc
dec
jnp
xchg
mov
ds
inc
cmc
and
push
jp
ds
push
adc
dec
xor
jmp
scas
inc
and
sahf
ret
xor
mov
sub
out
cmp
jmp
and
clc
loope
cmp
dec
pop
cmpsb
test
test
cmpsl
mov
mov
shl
push
lods
int3
xchg
shlb
repnz
mov
lret
aas
cmpsb
ljmp
in
stos
das
and
inc
inc
pop
xchg
jo
cmpsl
leave
leave
mov
cmp
in
xor
les
scas
int
dec
in
adc
jnp
repz
add
call
data16
push
jge
adc
mov
sub
dec
xchg
pusha
gs
popa
ds
loope
add
jge
xorb
pusha
adcl
push
test
xor
jmp
outsb
movsb
jns
das
pop
push
sbb
sbb
push
xchg
mov
sbb
imul
inc
dec
ret
jge
mov
sbb
jnp
std
xchg
and
in
in
std
sub
cwtl
dec
imul
push
lea
icebp
mov
aas
sbb
push
or
xchg
push
imul
cmp
mov
lock
rclb
push
jmp
fbstp
mov
xchg
lea
sub
pop
cmpsb
js
sahf
mov
shrb
hlt
fistps
mov
jne
loopne
jae
aas
xor
enter
push
jne
add
mov
jnp
pmaxsw
iret
sub
hlt
in
test
cmp
inc
call
inc
xchg
sbb
call
xchg
data16
call
or
pop
dec
mov
test
in
xor
xor
cmp
mov
cs
adc
fiadds
lcall
mov
adcl
mov
jp
inc
gs
dec
fs
test
mov
gs
cs
mov
popf
sti
pop
stc
inc
les
shrl
push
popf
ds
test
arpl
rol
add
cmpb
mov
jbe
leave
aas
ss
cmp
sbb
xor
pop
cmp
pop
popa
in
jle
mov
or
mov
mov
orb
outsl
movsl
shll
jp
ds
or
dec
add
stos
xchg
mov
arpl
cld
mov
push
nop
cltd
repz
test
xchg
cli
ror
cs
mov
imul
imul
cmp
jmp
mov
divb
add
pop
mov
cwtl
xchg
mov
mov
mov
xlat
ret
push
sarl
dec
xchg
nop
adc
xorb
or
adcb
insl
pop
sarb
rcrb
pop
jbe
push
push
out
or
jmp
cmc
cs
mov
adc
xor
jg
dec
push
push
loopne
jno
insb
cmpsb
xor
xchg
inc
mov
out
jne
imul
xor
jge
sbb
xchg
push
rcll
mov
ret
pop
out
jl
jl
sbb
out
cltd
jne
lahf
push
loopne
add
jbe
sbb
mov
rcl
jp
add
push
xor
into
test
jbe
lret
rcll
fcomip
push
jno
fwait
inc
push
data16
xlat
dec
mov
ljmp
loope
arpl
cs
cwtl
mov
lods
cmpsb
imulb
sub
jmp
add
fldl
xchg
std
lret
call
popf
outsb
mov
sbb
add
int
int
stc
arpl
shll
out
nop
arpl
push
sub
stos
cltd
adc
rclb
ret
sbb
mov
or
pop
push
dec
popl
scas
push
aas
xor
movsl
pop
cli
push
in
into
cmp
jg
das
cmp
inc
aam
pop
xor
sub
inc
adc
push
adc
xchg
lret
shlb
insb
push
out
insb
mov
push
jg
out
mov
add
stc
jge
dec
fs
mov
jns
fidivs
mov
cwtl
int
cmp
pop
out
arpl
push
lret
cmpsl
loop
arpl
cwtl
lahf
adc
ficomps
ljmp
xorb
mov
sub
mov
xchg
hlt
loop
mov
sbb
cmp
cli
out
cmp
push
jns
mov
add
iret
sti
mov
fidivs
sub
lret
mov
mov
cwtl
fs
call
xchg
mov
mov
leave
push
leave
dec
or
icebp
mov
aad
mov
jp
jecxz
jno
and
adc
test
jecxz
into
push
rorl
dec
or
out
les
or
stos
dec
loope
rorl
les
push
jne
in
pop
sub
xor
dec
push
jo
jmp
fcomi
push
mov
push
vpsubusw
mov
nop
dec
insb
shll
rcrl
mov
or
cmpsl
repnz
push
jae
xchg
adc
popa
lret
cltd
adc
mov
inc
pop
mov
mov
pop
push
mov
lahf
and
out
inc
jnp
add
push
dec
icebp
outsb
xor
je
es
cmp
fdiv
and
cmp
push
loope
ljmp
xchg
sub
sbb
sbb
push
in
jbe
jle
ljmp
shll
or
xchg
aaa
popa
mov
shl
pop
sbb
and
inc
stos
sub
add
xor
call
movsb
test
int3
jae
jl
int3
shl
sbb
rcll
mov
gs
insl
psraw
or
int3
adc
gs
repz
adc
cmp
cli
push
push
xchg
loop
movsb
outsb
mov
lods
inc
push
clc
adc
pop
sarb
cmp
insb
pop
jnp
add
testb
fwait
sbb
adcl
ror
adc
sub
ret
bound
dec
dec
rorl
rcll
jae
fwait
jge
test
sarb
jo
dec
jnp
adc
es
cmp
mov
mov
ja
dec
jp
push
sub
outsb
ficomps
imul
gs
leave
push
push
sub
mov
clc
mov
les
popf
insb
in
xchg
mov
xchg
int3
mov
jb
push
sarl
xor
xor
mov
pop
iret
inc
adc
fcmovnb
repnz
movb
and
repz
or
fadds
inc
mov
test
cmc
push
ljmp
xor
fsubrl
sub
or
cmp
lods
fsub
shld
call
movsb
scas
orb
cmp
lcall
push
lret
shll
pop
dec
cld
cmp
inc
push
xor
scas
inc
lret
insl
je
jg
mov
loopne
dec
or
mov
adc
scas
sub
mov
roll
insl
cmp
ret
lock
mov
leave
mov
jmp
cwtl
out
mov
jne
mov
loop
mov
test
lret
sbb
in
cs
jne
pop
mov
shr
fs
mov
or
jecxz
mov
cmp
add
inc
or
hlt
das
dec
push
fisttps
fisttpl
adc
lret
pop
aaa
cmc
cmpsb
lods
out
stc
sti
jp
repnz
sti
fwait
es
xchg
scas
scas
loope
in
imul
fdivrs
pop
pusha
test
stos
xchg
adc
and
out
cwtl
adc
sti
xchg
test
nop
fistpll
je
and
stc
or
inc
mov
ja
mov
jns
xor
mov
sub
push
out
mulps
pop
mul
ss
jae
push
insl
pop
es
call
sbb
inc
mov
mov
imul
xor
outsb
outsb
jp
jbe
xor
hlt
jo
cli
cltd
arpl
xor
push
or
mov
lcall
idivb
push
add
orb
mov
shl
int3
enter
and
repnz
pop
pop
sti
mov
fnstsw
test
xor
jecxz
mov
and
lahf
jmp
mov
bound
sbb
push
inc
aam
push
imul
std
ljmp
xchg
sbb
fcmovu
push
les
pop
jbe
popf
dec
mov
push
aas
adc
xchg
mov
ret
loop
jne
clc
popa
insl
push
cli
stos
fs
adc
push
sub
das
hlt
xor
shll
jle
popa
mov
ljmp
aaa
int3
scas
in
xchg
inc
and
mov
rcrb
xchg
out
pop
cli
xchg
mov
setbe
jmp
lods
pushf
inc
xchg
loopne
xor
pop
pop
xchg
sub
mov
in
ret
jl
sbb
fisubl
lock
push
jns
cli
xchg
mov
push
jae
sti
jb
mov
jg
dec
add
into
adc
push
orl
shrl
mov
fs
popf
aas
jle
add
or
popf
mov
add
sbb
sar
lea
mov
shlb
add
test
adc
dec
cmp
mov
adc
dec
fcomip
loope
sbb
aad
inc
and
sub
jg
push
mov
jl
subb
sbb
fadd
lahf
arpl
test
xchg
pop
mov
out
pop
inc
cmpsb
arpl
das
popf
int3
xor
jg
cli
fwait
in
pop
jge
cwtl
inc
popf
pop
inc
in
mov
fidivrs
icebp
jp
in
mov
test
push
std
imul
adc
mov
sbb
int3
add
lret
xchg
out
jb
inc
sarb
into
xchg
outsl
and
lods
adc
in
outsl
and
bound
cmovs
mov
xor
mov
fucomi
mov
daa
inc
xchg
fucomip
mov
repnz
cmp
xchg
incb
jo
pop
int3
fcmovnu
lret
or
aam
sub
icebp
cmp
push
fists
push
mov
das
xor
or
mov
fisttpll
push
stos
in
mov
out
ja
and
lods
test
int3
mov
mov
subl
out
cmpsl
or
lahf
in
push
aaa
mov
mov
pop
std
in
lock
mov
ret
adc
popf
add
jne
inc
iret
xchg
push
lea
arpl
test
mov
out
jg
mov
cmp
jecxz
jo
out
and
fs
out
hlt
into
lahf
stos
test
cmpsl
ja
lcall
jp
roll
cmp
inc
int3
adc
xor
je
sbb
or
dec
jmp
mov
bound
cmp
pop
jae
test
mov
xchg
inc
insl
imul
or
popa
jge
push
push
test
int
push
fs
arpl
scas
xchg
pop
sub
into
or
push
mov
fst
pop
cmpsb
xor
dec
inc
loopne
inc
lea
out
mov
dec
dec
pushf
mov
and
inc
rorb
arpl
and
cld
repz
xchg
in
arpl
inc
push
int
jo
sub
daa
fwait
jo
xchg
adc
shl
jl
cltd
fildl
mov
jb
mull
mov
mov
scas
cmp
mov
adc
adc
xlat
clc
gs
inc
dec
repz
mov
mov
fwait
add
es
mov
sbbl
int
push
dec
add
daa
or
adc
add
xor
movsl
icebp
imul
dec
pusha
add
mov
cld
push
ret
sub
xchg
movsb
mov
or
addb
sub
add
pop
movsl
xchg
pop
jmp
jbe
adc
inc
xorl
popa
xor
out
mov
wrmsr
incb
mov
lods
cltd
leave
les
shl
xor
sahf
data16
fisttpll
insl
roll
mov
sbb
cmp
push
jnp
insb
sub
mov
mov
stos
add
fidivs
outsl
hlt
pop
data16
inc
mov
in
sbb
mov
fnstenv
in
rorb
push
pop
std
xor
adc
fcmovne
pop
fcompl
pop
dec
cmp
aam
xor
mov
ds
add
jae
fiaddl
dec
jo
mov
fiadds
pop
loopne
add
cltd
jne
outsl
dec
push
sbb
mov
sbb
int3
aad
or
out
lock
int3
jb
mov
adcb
mov
mov
push
pop
mov
sarb
aaa
inc
pop
sti
fmul
add
push
repnz
add
mov
adc
in
shlb
push
sbb
repnz
add
add
mov
cli
push
mov
arpl
iret
fwait
inc
jb
scas
stos
aam
pop
repnz
jecxz
mov
and
mov
mov
add
sbb
add
sbb
in
adc
jg
adc
sub
aad
in
sbb
aas
xor
lret
out
mov
cmp
inc
mov
xchg
xor
into
push
in
xchg
jns
gs
xor
push
jle
add
push
mov
push
imul
xlat
lds
xchg
mov
insb
stos
xchg
xor
sub
jmp
lods
movb
movsb
mov
pop
xchg
xlat
fistpll
and
mov
and
dec
pop
cmp
xor
dec
push
jmp
mov
js
cmp
lds
pop
in
int
xor
icebp
stos
pop
cli
cmp
cmp
sub
mov
dec
mov
adc
shll
cmpsl
pop
mov
ficompl
inc
arpl
add
cmc
xchg
cmp
push
pop
test
scas
out
iret
mov
stc
imul
aad
aam
lods
xchg
orb
imul
movsl
aam
test
lods
les
xor
loopne
loopne
or
dec
adc
xor
inc
pop
inc
outsl
adc
das
sbb
sub
mov
sti
cmp
mov
clc
mov
shll
jns
xor
pop
push
cmp
push
dec
push
fcmovnu
lods
orl
mov
mov
or
and
out
aaa
mov
jge
or
stos
das
push
call
mov
and
rcll
inc
clc
sbb
dec
out
mov
dec
fptan
adc
pushf
mov
ljmp
adc
iret
mov
not
add
mov
xchg
sub
push
mov
mov
jns
shrl
dec
les
mov
pop
in
stos
lods
out
jmp
fisubs
xor
pop
push
sahf
rorl
mov
fidivs
mov
xlat
inc
pop
push
rcrl
xchg
mov
movsb
cmp
cwtl
lods
sbb
ss
arpl
dec
or
mov
out
ss
out
out
sbb
dec
xchg
dec
bound
pushf
pop
mov
inc
cltd
jne
or
sbb
push
or
adc
add
pop
mov
xchg
shrl
pop
push
adc
mov
popf
test
push
cmpsl
ds
dec
dec
iret
ror
movsl
fcomps
pop
cmp
outsl
test
cmp
out
pop
push
mov
sbb
loopne
xchg
hlt
aaa
cmpsl
adc
sbb
sahf
mov
mov
mov
addr16
mov
cmp
lret
pop
lret
fcmovb
stos
or
add
out
sbb
out
fbld
fbld
xlat
sub
repnz
clc
rorb
mov
xchg
push
lret
adc
pusha
jae
mov
fisubrl
popf
mov
push
ret
sarl
lcall
push
jns
sub
xchg
scas
aad
stos
icebp
hlt
ja
add
sahf
test
das
ret
cmp
sub
in
pop
lret
sbb
or
fisubrs
and
mov
push
cmp
test
jl
add
lret
add
leave
cli
xor
xlat
xor
cmp
add
mov
ret
cld
jne
or
subl
inc
aad
adcb
mov
js
outsl
lea
std
arpl
out
mov
jb
add
pop
add
xchg
inc
ficoms
iret
mov
cld
dec
cmp
mov
jnp
mov
jne
inc
jle
int3
dec
push
inc
mov
xchg
mov
add
pop
mov
rcrb
mov
movsl
inc
push
mov
mov
jg
lods
jecxz
cli
popa
shrb
xchg
push
mov
lret
mov
sbb
icebp
dec
pop
outsl
leave
and
inc
sbb
sbb
rclb
cmp
mov
test
ljmp
inc
fmul
fdivrl
or
sbb
lods
dec
icebp
xchg
xchg
jge
shl
inc
sti
aaa
out
addr16
pop
lods
nop
cmp
stos
inc
jmp
fnstcw
cmp
popa
ja
aas
andb
aad
jge
adc
and
int
jle
or
leave
xlat
les
xor
dec
lret
lock
xlat
stc
cmp
add
jmp
xchg
cmp
popf
out
add
je
pop
and
lods
xor
ljmp
mov
fsubp
adc
mov
push
dec
loopne
mov
cmp
stc
or
jp
xchg
mov
insl
notl
jecxz
adc
mov
in
test
inc
mov
loopne
icebp
cld
add
stos
dec
loop
pop
aam
rcr
mov
xor
outsl
lods
mov
mov
add
pop
push
scas
mov
mov
call
popf
fsubrs
dec
test
sbb
jnp
inc
adc
jo
pop
mov
mov
sbb
test
pop
test
gs
aad
rol
test
jl
sub
xor
int3
mov
ss
inc
mov
mov
repz
dec
cli
cmp
and
lret
cmpsb
in
mov
rorb
inc
xor
lcall
dec
dec
xchg
push
dec
sbb
cmp
clc
daa
or
add
int
jno
leave
push
sti
xlat
test
inc
pop
sarb
adc
imul
enter
imul
in
cmp
mov
dec
mov
rol
hlt
mov
lods
dec
imul
adc
addr16
jno
mov
xor
ret
fs
pop
rcll
sti
push
cmpsb
inc
mov
sub
sub
mov
addr16
and
and
sub
shll
outsb
jp
icebp
mov
dec
push
or
adc
je
and
or
fiaddl
add
pop
xor
orl
mov
xchg
sarl
popf
scas
add
sub
sbb
stc
jge
or
adc
ja
cmp
sub
les
push
stos
cmc
ret
dec
pop
push
into
cmp
jae
sbb
cmp
sahf
fld
jbe
jnp
inc
jns
add
outsl
ja
mov
cmpl
shlb
in
pusha
loop
push
sub
outsb
push
jno
sub
lcall
xchg
es
hlt
sub
and
shll
adc
jle
push
push
inc
iret
leave
fists
scas
lcall
push
enter
in
push
xor
jns
pop
adc
xor
cmpsb
fdivr
and
add
jecxz
jb
out
nop
in
neg
mov
test
in
arpl
jl
mov
inc
add
sub
dec
imull
cmc
inc
inc
or
mov
sub
pop
in
lahf
das
and
clc
icebp
in
mov
and
imul
cmp
jg
in
lds
push
xchg
jmp
jle
test
lahf
dec
jnp
arpl
add
pop
jb
jne
cmpsl
push
sbb
jne
clc
out
cli
jo
mov
int
xchg
xchg
bound
cmpsb
fxam
cmpsb
xchg
cmp
cmp
out
test
and
xchg
xor
xchg
ljmp
cli
and
bound
ljmp
shrb
sbb
addb
add
jnp
sub
popa
lods
adc
add
mov
popfw
bound
mov
icebp
xlat
xchg
stos
into
inc
outsb
imul
rorl
pop
insl
pop
mov
js
clc
jp
cld
fmul
and
clc
lret
imul
inc
pop
fildl
dec
clc
cmp
adc
push
dec
rorl
inc
pop
insl
mov
std
push
leave
insw
aam
cwtl
xchg
imul
push
cltd
and
fcoml
int3
das
clc
add
jge
aas
sbb
movsl
pop
sahf
pop
xchg
pop
loopne
mov
pusha
fstps
jb
mov
out
mov
movsb
mov
cmp
xchg
addr16
inc
lds
sahf
xchg
xor
pop
xchg
push
fcoms
and
add
test
mov
jmp
ss
jae
xor
roll
mov
sti
stc
mov
mov
test
loopne
and
scas
ficoml
cltd
test
pop
mov
jno
into
shrl
jmp
pop
jae
dec
popa
outsl
jle
mov
push
lcall
xchg
imul
mov
into
sbb
sbb
clc
and
mov
xchg
rorb
rcll
mov
push
pop
std
test
scas
jp
push
das
xor
and
and
divl
ljmp
mov
sbb
push
scas
adc
repnz
push
xor
inc
seto
jbe
orb
mov
mov
sarl
pop
sub
scas
popf
jl
fsubrl
into
jmp
mov
call
cmp
mov
lods
add
jno
addb
or
add
fbstp
out
sbb
lret
out
dec
repnz
imul
add
or
stc
test
addr16
aas
jno
xchg
adc
push
mov
les
shll
sub
aas
out
push
movsl
jne
mov
test
and
dec
jp
mov
sub
rolb
mov
out
push
jmp
cmp
cltd
sub
cmp
in
mov
sub
or
add
lods
or
jns
mov
and
adc
mov
aaa
cmpsb
stos
jo
adc
jmp
cmp
push
cmpsb
mov
adc
dec
jmp
sub
fisubrs
xor
imull
sbb
mov
dec
cmp
xchg
in
push
orb
pop
mov
and
xchg
push
sbb
dec
push
dec
mov
movsb
add
inc
cs
push
repnz
or
push
and
ret
out
cmpsb
dec
ficompl
int3
fwait
mov
repnz
flds
and
loope
mov
orl
jne
fcoms
addb
and
js
bound
sbb
outsb
inc
movsl
rcl
cmp
adc
scas
aad
repz
das
xor
sub
loopne
in
mov
pop
cmpsb
xchg
mov
xor
xchg
stos
adc
mov
aam
lds
cli
nop
mov
loopne
mov
lods
push
in
pop
sub
pop
nop
or
xchg
xor
pop
fstpl
adc
scas
push
lock
mov
and
inc
mov
test
into
xchg
out
cld
push
vdivss
arpl
test
jg
inc
movb
test
sbb
loopne
rol
mov
loope
inc
and
lds
push
lea
pop
outsl
jecxz
fnstsw
push
lcall
jge
push
jp
sbb
clc
sti
pop
mov
pop
clc
lods
or
jle
and
arpl
stos
stos
xchg
int3
push
aad
cltd
sub
cltd
pop
push
sub
mov
sahf
bound
dec
dec
pop
mov
xlat
mov
inc
xor
je
clc
jo
and
pop
imulb
cmc
in
lcall
fisubrs
insl
out
cmp
pop
push
fbld
call
push
ljmp
daa
pop
xor
push
cmpsl
insb
mov
call
jmp
mov
mov
in
inc
adc
je
push
xor
movsb
fimuls
xor
add
mov
mov
push
stos
xchg
sub
sti
xchg
fadds
lock
sub
mov
jecxz
test
aaa
into
sub
ss
das
or
arpl
popa
jb
inc
cmp
hlt
inc
sbb
repz
mov
jae
jmp
loop
xchg
ss
popa
daa
cwtl
or
jg
xchg
adc
or
dec
mov
dec
loop
mov
xchg
push
les
pusha
inc
sbb
mov
cmp
loop
push
mov
popa
outsl
jnp
jb
js
imul
fcomps
mov
iret
dec
push
add
adc
fildll
mov
nop
pop
cmp
repnz
adc
movq
xor
scas
cmp
scas
push
pop
cmc
or
addr16
dec
lret
rcrb
mov
es
adc
inc
sub
fs
icebp
addb
jp
aaa
cmpb
dec
js
mov
xor
ja
xchg
stos
sbb
mov
jp
and
div
in
sbb
cmp
out
shrb
inc
pop
ds
push
xor
ficoml
int
ret
in
pushf
add
xor
imul
cltd
ljmp
mov
dec
adc
subb
pop
xchg
pushf
insb
pop
or
mov
or
sbb
insl
xchg
lods
sub
popf
aas
dec
pusha
push
ficoms
pop
mov
push
xlat
cmp
in
xchg
jp
jo
push
outsl
lock
adc
lret
mov
movsb
fwait
mov
arpl
jo
cmpsl
mov
mov
xor
mov
push
outsb
out
jle
jmp
divl
dec
mov
daa
aas
packsswb
ret
mov
cmp
xchg
add
fildl
cli
imul
shlb
cmc
jecxz
cld
jo
cli
out
pop
dec
cmp
ficomps
outsb
mov
scas
pop
mov
jp
leave
outsb
mov
neg
andl
les
cmpsb
push
mov
jp
mov
pop
inc
loope
sbb
xor
mov
xor
inc
or
int3
or
subb
aam
cmpb
jge
pop
sub
push
mov
sti
aad
seto
add
dec
pop
pop
mov
or
fsubrl
dec
sbb
test
inc
inc
adc
cmp
sti
xchg
pop
pop
lcall
fsubrs
mov
or
sahf
inc
jp
pop
outsb
scas
dec
push
xor
cmpsb
fs
addl
mov
xchg
mov
inc
loope
sbb
dec
push
into
bound
inc
pop
dec
push
dec
cmp
ds
mov
sbbb
dec
mov
decl
cmp
dec
ret
imul
add
jmp
ret
ret
cmp
xchg
orb
sub
aas
dec
add
jmp
cltd
lret
enter
insl
insb
cs
pop
ja
mov
test
push
ret
in
dec
xor
outsl
hlt
add
in
mov
ds
mov
movsb
push
dec
mov
xlat
stos
addr16
xchg
test
mov
or
or
jge
dec
fistpl
adc
pop
cli
pop
add
ret
movsl
ffree
sbbb
cmp
sbb
inc
pop
push
and
cltd
add
repnz
and
loopne
jp
sahf
and
rcrl
andb
mov
jae
test
xchg
hlt
inc
outsb
pop
movsl
sub
pop
push
shlb
js
stc
ja
and
repnz
mov
jae
mov
adc
mov
into
add
out
adc
stos
fs
aad
aas
ss
sbb
mov
out
push
scas
sar
scas
out
cmpsb
mov
and
xchg
jp
xchg
sarb
adc
scas
fisubl
nop
adc
scas
mov
lahf
outsl
mov
insl
lret
mov
xchg
cs
sub
imul
push
push
mov
sti
pop
mov
push
jne
add
sbb
aas
push
inc
sub
clc
outsb
adc
mov
sbb
push
test
push
mov
adcl
icebp
xor
shrd
cmp
and
leave
inc
ret
cmp
add
repz
sub
jnp
mov
push
dec
andl
and
fidivrs
insb
or
arpl
rcrl
jmp
and
or
leave
fmuls
cmp
out
fisttpl
repnz
mov
and
lock
add
adc
cmp
inc
imulb
add
fimuls
mov
rorl
fldcw
lods
nop
orl
and
or
insl
inc
and
incl
jle
pusha
out
cmp
popf
jge
dec
inc
fs
inc
mov
mov
jmp
jmp
cmp
setnp
sbb
xor
ja
cmp
add
mov
ret
jl
notl
mov
stos
ds
shll
mov
call
roll
pop
dec
imul
mov
mov
lcall
jecxz
fcomps
fisubrs
inc
cmp
clc
scas
or
stos
push
jo
mov
clc
ficomps
lcall
rcr
dec
mov
aad
jmp
in
fwait
jg
fidivl
clc
gs
xchg
push
mov
xchg
into
and
jmp
mov
pop
dec
test
xchg
insl
imul
addr16
or
stc
add
es
sbb
js
inc
adc
arpl
dec
sbb
roll
mov
lods
jbe
adc
or
cmpsb
sub
aas
mov
pop
mov
cmp
inc
cmp
fisttps
arpl
xor
inc
sub
jl
inc
mov
not
call
push
mov
xchg
push
stos
fstps
lods
enter
insl
into
imul
dec
out
hlt
iret
push
mov
scas
je
repz
mov
inc
fcmovnu
or
movsl
incl
lcall
mov
jno
or
cwtl
jbe
dec
rcrb
ret
fidivl
ret
adc
les
pop
lret
loope
inc
adc
out
popl
mov
sahf
ficoms
rclb
pop
push
repnz
repnz
in
sub
add
add
mov
out
aaa
lock
mov
jl
mov
loop
dec
and
pop
int
scas
xchg
mov
insb
inc
and
sahf
subb
in
or
ret
mov
fcmovnb
fistpll
addb
sbb
pop
dec
aas
push
icebp
mov
mov
or
out
or
mov
nop
lods
int3
fwait
mov
dec
pop
repnz
jmp
push
mov
aam
push
stc
out
stos
mov
aaa
cmp
inc
sahf
fsubs
and
shll
fstp
lret
mov
in
adc
orb
fwait
sbb
shrl
mov
and
lods
shrb
push
stos
hlt
mov
xor
xchg
mov
push
xchg
adc
pop
in
scas
lods
inc
repz
add
stos
pop
xchg
push
pusha
xlat
mov
roll
xor
adc
mov
ja
ja
xor
inc
push
sub
xchg
mov
xchg
ret
push
call
aad
xor
pop
adc
jg
push
mov
les
imul
pop
icebp
aam
shrb
adc
pop
out
inc
sarb
sub
adc
sbb
mov
outsb
cwtl
cmpsl
mov
lods
icebp
mov
sahf
addr16
mov
pop
sub
add
mov
out
adc
out
push
mov
sbb
pop
repz
adc
repz
addr16
xlat
inc
addr16
lret
cmp
add
dec
fcomip
iret
ret
lea
lahf
jecxz
or
pop
pop
lret
incl
mov
je
ds
ds
push
adc
and
mov
lret
in
push
popl
lea
and
in
adcl
mov
outsl
push
xor
sub
pmaddwd
aam
mov
arpl
lods
test
js
mov
call
sub
insl
sbb
pop
shlb
call
or
shl
js
jbe
mov
pop
xor
btrl
hlt
ss
cmc
lock
mov
jecxz
jl
iret
mov
mov
imull
jbe
sub
push
lods
inc
icebp
pop
adc
bound
roll
xor
push
mov
xchg
fdiv
adc
sbb
add
and
jmp
mov
fwait
icebp
test
lret
mov
pop
insl
lock
movsb
leave
push
lret
mov
and
or
test
fmul
or
jno
inc
aam
insb
add
outsb
cmp
jle
inc
out
xor
gs
push
movsb
and
repz
rorl
sbbl
inc
fninit
mov
fisubl
pop
lea
add
hlt
add
adcb
sti
xor
mov
stos
add
outsl
imulb
cmpl
movups
jno
xchg
mov
cmpb
shlb
mov
mov
loope
std
mov
add
out
mov
pop
addr16
push
ja
xor
scas
and
lods
js
sub
insb
or
into
cmp
push
dec
faddl
sub
stos
sbb
or
and
inc
xchg
mov
pop
cmc
inc
outsb
sbb
push
imul
sub
in
movsb
mov
xor
mov
lock
popf
loope
aas
lcall
repz
pop
jnp
jbe
pop
clc
inc
sub
xorl
ret
sahf
lds
xor
aaa
inc
int
dec
and
mov
int
sbbb
scas
mov
repnz
push
sbb
fwait
outsb
push
fildl
aas
cmp
lahf
mov
out
add
sub
ret
in
xor
out
lcall
jbe
xchg
jb
sub
shlb
pop
mov
xchg
mov
jg
cmp
mov
inc
jno
push
push
hlt
repz
insl
adc
dec
jmp
imul
fstps
ss
notb
mov
pop
cwtl
imul
scas
addr16
xchg
dec
cli
lds
ret
sti
jne
xchg
push
std
or
adc
or
loopne
lret
mov
and
gs
inc
loope
fnstcw
dec
sar
xchg
pusha
fs
cmpsl
scas
nop
push
dec
mov
fisubs
jge
pop
test
pop
jecxz
sub
sub
xchg
inc
inc
mov
imul
into
xor
ret
dec
and
cs
jg
jmp
je
sbb
mov
imul
and
add
ret
rorl
mov
ljmp
xor
in
divb
sbb
int
shlb
dec
decl
ja
xor
dec
push
cs
sub
sub
jnp
sbbb
mov
mov
jge
clc
shrb
and
xor
adc
push
mov
jp
lods
push
sahf
adc
imul
mov
test
test
mov
lds
sub
cmp
mov
mov
mov
shll
inc
add
xchg
out
lods
jmp
mov
stos
fdivrl
push
jne
mov
icebp
inc
dec
imul
mov
push
hlt
ret
sub
into
out
out
lahf
jmp
mov
add
mov
cmpsl
jne
cmp
sub
aad
push
mov
call
cmpl
mov
lods
sub
mov
add
push
sub
add
lock
cltd
jecxz
clc
sahf
insl
or
and
cmpsl
and
and
add
xchg
lcall
pop
sub
insl
mov
in
xchg
xchg
or
lock
leave
popf
inc
in
mov
pusha
test
rolb
ljmp
pop
or
cld
pop
lods
mov
add
sbb
sub
mov
fidivrl
je
adcb
add
ret
fs
cli
mov
js
fisttpll
rorl
loop
jge
push
lods
dec
jne
lahf
mov
mov
xlat
push
mov
pop
ret
add
fldcw
mov
or
sub
pop
xchg
popa
inc
lret
mov
or
adc
out
push
dec
sbb
clc
jle
add
shlb
and
das
mov
sbbl
int
js
ficomps
lods
mov
mov
leave
xchg
dec
xchg
sub
mov
add
sub
inc
imul
add
sbbl
ds
mov
shr
inc
pop
sub
roll
outsb
xchg
xor
push
mov
pop
clc
dec
jmp
adc
pop
pushf
mov
cmp
sbb
out
xor
rorl
dec
inc
data16
sub
ret
ss
sbb
adcl
jge
negb
lds
ljmp
sub
pop
movsl
add
orb
push
int
loop
shlb
repnz
xchg
imul
sbb
adc
mov
sahf
jbe
shl
xchg
mov
notb
shl
xchg
clc
ret
aaa
cmp
outsl
pop
pop
test
sbb
pusha
inc
or
lods
mov
std
sahf
aam
in
fcmovnbe
out
lahf
aaa
cmpb
push
mov
leave
and
mov
pop
jmp
and
in
xor
imul
int3
adc
fisubrl
lock
dec
mov
sub
nop
dec
jmp
mov
jp
dec
and
xchg
push
nop
leave
cmp
gs
jne
cld
imul
bound
loop
and
rcrb
loop
je
jmp
lcall
fs
mov
inc
pop
loopne
jl
shlb
fists
add
cmp
movsb
jge
loope
loopne
mov
and
xchg
jo
pushf
cmp
mov
jl
or
cmp
stc
jle
jg
xchg
xchg
or
fcoml
xorb
jmp
jo
stos
popa
dec
dec
out
pushf
popf
inc
jg
mov
xchg
dec
jg
xor
fwait
orb
push
insl
lret
stos
and
jne
fldenv
and
scas
xchg
add
cltd
mov
movsb
sbb
pop
adc
stos
loope
add
push
mov
in
les
mov
mov
xor
mov
jnp
loopne
repnz
in
mov
cli
lods
push
dec
cmp
ljmp
add
sbb
cmp
push
sbb
mov
mov
dec
xchg
aaa
or
insb
mov
outsb
xchg
or
mov
mov
aam
inc
mov
outsl
cmp
mov
rcl
movsb
mov
cli
fwait
xchg
mov
add
mov
pop
out
sbb
setp
bound
mov
int3
popa
cwtl
repnz
icebp
out
adc
jge
and
faddl
lods
aad
shll
mov
jg
mov
loope
out
je
lret
or
es
xchg
push
xor
sbb
leave
mov
xchg
movsl
mov
dec
pop
movsl
daa
sub
push
repnz
cli
mov
xchg
jg
ret
jbe
xchg
or
pushf
dec
dec
idiv
cmp
add
lods
mov
shr
mov
stc
dec
add
xlat
das
int3
andb
bnd
loope
out
and
ret
dec
ficoml
pop
out
aaa
js
mov
jecxz
icebp
push
fs
das
mov
arpl
inc
pop
adc
out
out
pusha
dec
sub
pop
stos
xor
push
fdivs
addr16
fstpl
mov
adc
aaa
cli
jle
cltd
adc
pop
mov
and
sub
add
xchg
and
or
add
cmpl
add
push
add
sti
loop
sbb
inc
divl
int3
or
adc
mov
ret
dec
pop
xchg
dec
mov
ret
movsb
mov
or
sbb
pop
and
sete
inc
sub
ds
jne
aam
xor
sar
test
inc
icebp
pusha
adc
dec
sbbl
push
popf
push
xchg
stc
push
ss
pop
xchg
ja
lods
sbb
jl
jmp
pop
gs
test
test
xor
adc
jns
test
xchg
loopne
dec
sbb
inc
mov
test
in
cmpsl
fwait
push
xor
stc
pop
shlb
test
and
shlb
out
mov
into
in
sub
loope
rorb
insb
lahf
mov
inc
test
push
in
mov
jmp
aam
movsl
pop
add
cmp
cmpsl
jle
lea
gs
ficoms
mov
mov
daa
lret
mov
xchg
mov
xor
insl
sub
adc
dec
ja
repz
mov
jmp
xchg
inc
inc
call
nop
xor
and
shlb
scas
dec
mov
lock
in
sarb
pop
pop
inc
add
jne
pop
push
push
cmp
mov
cmp
aad
aaa
insl
and
fxtract
jg
push
dec
cmp
sbb
mov
clc
mov
lret
pop
into
sbb
adc
loope
or
add
and
adc
ss
adc
iret
cs
out
mov
fbstp
push
or
push
addb
out
mov
ja
jmp
push
lcall
push
sbb
int3
iret
and
data16
ficompl
or
add
lods
rcr
dec
jecxz
rcr
aam
jmp
inc
pushl
jmp
push
mov
shlb
hlt
xor
mov
das
xor
ret
fists
cmc
cmpsl
jp
enter
pop
ret
inc
inc
push
xchg
dec
mov
shlb
push
push
push
dec
dec
jb
cmp
inc
lods
add
scas
or
xchg
add
sbb
iret
rcl
mov
mov
xor
ss
mov
test
ficoms
lcall
adcl
dec
fldcw
scas
xor
push
xlat
pop
lds
rcrl
lahf
cmp
pop
aaa
sahf
test
sub
sahf
fwait
stos
repz
in
mov
mov
push
int3
ret
mov
cmpsb
lods
or
loope
sub
je
lret
sub
sbbl
cmp
jp
fsts
ja
cs
popa
cmpl
pop
shrb
addr16
in
je
mov
push
mov
mov
add
addr16
xchg
push
jg
xor
push
movb
je
xor
mov
stos
mov
push
sub
pop
jb
bound
iret
or
pop
adc
out
jne
sti
mov
lret
frstor
pop
std
int
pop
adc
test
push
adc
movsl
push
cltd
and
test
pop
enter
loop
push
lock
and
hlt
push
cs
add
xchg
stc
sbb
jl
jo
sub
jne
int3
xor
push
inc
leave
in
cwtl
inc
repz
sbb
shl
mov
push
hlt
scas
mov
lock
or
pushf
add
setge
jne
into
out
lret
dec
out
mov
shrb
mov
mov
icebp
scas
pop
jmp
out
ljmp
xchg
cmp
add
push
stc
adc
inc
ss
xadd
mov
xlat
fistps
xchg
xchg
idivb
mov
adc
and
push
insl
stos
imul
mov
push
stc
xchg
and
xchg
pop
or
mov
aas
arpl
test
pop
fstl
mov
mov
lods
lea
jns
add
and
orb
mov
pop
popf
sbb
out
cmp
adc
hlt
inc
inc
xor
pusha
out
movsb
adc
test
mov
xchg
sub
sbb
shll
loope
lea
std
out
push
sbb
cld
inc
addr16
cld
mov
sbb
cmp
in
xchg
cmp
mov
xchg
scas
add
mov
pop
int
pop
push
cmp
mov
sub
sub
test
inc
adc
das
sbb
adc
pusha
jecxz
jg
lods
cmpl
fmuls
jnp
loop
outsb
int
xor
in
push
lcall
sbb
mov
pop
pop
sub
test
ret
loope
push
into
test
jb
fwait
mov
inc
int3
push
movsb
shrb
xor
add
add
ret
nop
test
add
jmp
pop
call
ss
repnz
mov
lret
adc
out
ret
push
jp
mov
movsb
mov
imul
mov
pop
scas
pop
cmp
push
xor
loop
popf
aaa
mov
push
sbb
insl
test
add
outsb
scas
push
jl
inc
xchg
mov
inc
inc
mov
sub
test
cmp
shrb
bound
mov
cltd
aas
pop
push
rcrb
cwtl
in
lahf
mov
shlb
cli
mov
hlt
mov
and
icebp
jne
or
fstps
add
mov
dec
mov
add
cmpsl
push
sub
and
pop
jne
mov
cmp
test
scas
pop
mov
sub
pop
inc
mov
sbb
jns
jnp
xsavec
stos
cld
fdiv
cmp
pop
das
test
lods
lahf
gs
shrb
nop
test
push
pop
push
mov
loopne
push
inc
lods
aad
fwait
into
mov
decl
loopne
in
loopne
cmpsl
insl
pop
testl
lea
xor
cmp
outsl
cmp
cwtl
dec
out
int3
pushf
xor
jne
jle
mull
jb
rcrl
ret
test
aad
xchg
inc
enter
in
jb
mov
add
jno
outsb
pop
sub
outsl
or
lea
mov
lock
cmp
fdivr
pop
cmp
cmp
xor
repnz
push
xchg
or
cmp
inc
insl
fldl
xchg
ret
sbb
es
push
inc
mov
arpl
push
sub
mov
push
mov
dec
xchg
cltd
mov
adc
sub
pusha
sbb
dec
imul
fisubrs
cmpsl
pop
fdivr
sti
fs
dec
jo
cmc
mov
jmp
stos
and
xchg
mov
jne
push
lret
mov
push
dec
repnz
add
repnz
cmp
add
ror
dec
xor
sbb
mov
or
out
mov
jns
leave
pop
mov
add
mov
fildll
lds
pop
cmp
je
push
and
daa
js
mov
jmp
xchg
loopne
inc
clc
ss
insl
push
ss
in
push
push
sti
fnstcw
pop
rcrb
decl
push
xchg
push
adc
test
aad
inc
shrb
mov
mov
int3
aaa
add
dec
or
outsb
ja
mov
int
loope
fsubrs
fistl
pushf
ss
dec
xchg
movsl
loop
lret
lret
loop
stc
idivl
data16
and
xchg
xlat
clc
jbe,pt
clc
shll
pop
dec
lods
in
dec
xlat
aam
pop
fwait
mov
mov
lret
cmpsb
mov
movsb
mov
sub
push
add
filds
xchg
inc
sub
jg
and
ss
pushf
add
add
leave
xchg
rcrl
mov
xorl
cli
fimull
popf
push
sub
inc
add
test
mov
jnp
cmp
stos
dec
cmp
cmp
les
sub
std
icebp
xor
xchg
les
pop
shr
cmc
jbe
insb
pop
shlb
push
hlt
icebp
push
adc
sbb
mov
cmp
jg
or
and
loop
adc
sarl
or
add
icebp
add
mov
jecxz
rcr
mov
hlt
imul
loopne
mov
int
pop
les
or
inc
ja
mov
in
jmp
sti
mov
cld
xchg
cwtl
sbb
les
call
aas
push
adc
adc
sub
or
imul
int3
insb
dec
lods
arpl
scas
xchg
xor
cli
lods
fcmovb
cmpsb
and
sub
jle
outsl
pop
mov
ss
mov
jl
push
aaa
loopne
cwtl
fwait
dec
jl
je
xor
cmp
loopne
pop
icebp
dec
dec
fsts
inc
dec
mov
aas
es
add
adc
fsubr
lret
outsl
add
mov
int
jns
lahf
test
sub
mov
mov
mov
into
jmp
sbb
mov
sbb
sbb
jmp
jae
push
fisttpl
and
push
cld
add
mov
je
xchg
aam
push
mov
inc
add
into
add
mov
fadd
mov
cmp
mov
mov
adc
daa
xlat
inc
cmpl
xor
xor
sbb
fstl
jbe
cmp
pop
push
adc
and
dec
addb
mov
push
and
and
int3
dec
mov
in
adc
inc
aam
rcr
icebp
movups
call
pop
pop
movsl
aad
hlt
sbb
insl
push
test
pop
insb
jle
pop
xchg
jl
data16
jae
mov
adc
jae
pop
test
mov
in
jne
ds
imul
cmpsl
lds
gs
cltd
push
cmp
xor
xchg
and
aaa
rep
jg
lock
fiadds
jge
push
mov
and
lahf
dec
pop
les
jecxz
push
dec
js
sysexit
or
scas
mov
dec
rcr
and
push
pushf
fldcw
mov
or
lahf
xorl
xchg
xor
sub
xchg
std
fbld
into
leave
test
jecxz
lret
jae
push
je
ret
cmp
pop
movsl
out
scas
mov
xchg
jg
aad
push
nop
xchg
aam
ds
cmpsb
cmp
test
jl
xchg
dec
cmc
fs
dec
int3
sti
in
lods
ficoml
pop
jb
mov
sub
divl
out
jno
idivl
in
sbb
lds
and
stos
movl
mov
push
sbb
push
pop
adc
pop
gs
mov
jo
pop
subl
rcr
cmp
xchg
out
mov
adc
ret
mov
jl
jge
data16
adc
aad
pop
mov
mov
gs
jb
push
out
push
imul
popf
insb
jo
mov
xchg
xor
movl
xchg
add
rorb
xchg
push
outsb
or
cs
in
mov
icebp
pop
dec
and
or
js
ljmp
push
jns
call
xchg
jbe
fcoml
aas
mov
add
lock
pop
jl
sbb
dec
or
lods
add
cltd
mov
insl
fisttpll
cmpsl
sub
adc
mov
cli
ljmp
test
pop
lret
jne
imul
aaa
xor
je
int
sub
cwtl
or
mov
push
mov
aam
icebp
out
mov
loope
cli
test
jp
adc
pop
mov
and
pop
int
inc
notb
sub
adc
mov
sub
popa
jg
loope
outsl
ja
adc
lahf
movsl
push
fisubs
adc
mov
sub
int
fs
fistl
cmc
fwait
outsb
mov
mov
and
cmc
test
adcb
xor
mov
clc
ja
pop
push
mov
fsubr
jb
and
mov
repnz
mov
test
or
inc
jle
inc
push
pop
cmpsb
iret
mov
cmp
push
mov
lds
xchg
dec
imull
outsb
dec
ljmp
lret
add
cld
outsb
bound
inc
subl
iret
cld
stc
xchg
push
dec
outsb
stc
int3
mov
in
test
loopne
jecxz
movsb
mov
mov
leave
or
mov
popa
out
mov
jmp
insb
lret
sub
sub
mov
roll
incl
and
adc
int3
xor
cmp
jg
das
xorl
mov
lods
iret
mov
push
std
mov
das
xchg
ja
pop
mov
scas
lods
cmp
into
loop
outsl
mov
stc
mov
addb
fdivrl
out
into
dec
adc
pop
fstpt
mov
movsl
int
call
rcrb
mov
jo
mov
pop
sbb
mov
lea
mov
leave
add
scas
mov
push
xchg
adc
add
push
outsb
and
and
jbe
sub
fmull
cmpsb
cwtl
dec
xchg
lods
stos
jl
sbb
je
mov
inc
sbb
pop
add
fdivr
jmp
test
movsl
fs
push
inc
iret
adc
call
shrl
in
dec
pop
mov
pop
into
sbb
loope
and
jnp
jle
pop
cmp
xor
mull
aaa
cmp
ds
push
adc
dec
es
rolb
add
push
in
jb
clc
adc
sub
out
and
sbb
lock
adc
inc
leave
jo
out
movsl
insb
xorl
mov
sub
or
pop
shrb
test
psubsw
pop
pxor
je
enter
data16
loope
lret
mov
scas
push
jg
pop
push
push
push
mov
inc
fdiv
ljmp
lea
mov
cmpsl
dec
data16
cltd
inc
vpaddsw
xor
cs
in
cmp
or
jno
xchg
cli
adc
sbb
mov
das
out
mov
popa
insl
xchg
jae
std
sahf
cmc
inc
mov
test
mov
das
jne
sbb
inc
push
sbb
mov
les
add
test
sahf
pop
xchg
scas
sub
xchg
or
xor
sub
cmp
mov
lods
shlb
sub
xchg
inc
adc
xlat
mov
jp
lret
imul
pop
into
sub
adc
push
sbb
lock
push
div
movsl
or
or
packssdw
sub
pop
lret
movsb
add
shrl
insl
jp
jmp
fisubrs
dec
mov
pop
inc
push
clc
mov
mov
add
daa
rcl
js
test
mov
mov
testl
sbb
jg
mov
rorl
push
push
sahf
push
cli
mov
push
pop
push
stc
fiaddl
hlt
pop
push
icebp
in
add
add
sbb
add
cs
inc
stos
jl
aad
mov
adc
jg
lret
shll
ds
shrb
orb
insl
jmp
in
jae
jns
jmp
shl
pusha
pop
icebp
mov
sbb
sbb
rorb
std
adc
push
int3
aas
inc
push
inc
subb
ret
xchg
mov
or
jno
shr
ret
sarl
cld
mov
xor
mov
mov
enter
clc
cmp
sahf
aad
mov
int
in
mov
mov
fdiv
data16
xchg
xchg
push
lret
sti
test
adc
push
sbb
add
mov
ret
jmp
jo
aaa
arpl
jle
push
hlt
shl
adc
push
push
movlps
inc
push
jns
inc
add
or
frstor
mov
adc
pop
mov
xchg
inc
xor
popa
call
sahf
ss
dec
repz
jne
iret
pushf
sbb
ja
push
fisttpll
mov
dec
into
aam
and
jp
jbe
mov
adc
dec
sbb
repnz
iret
test
inc
mov
insl
sbb
dec
rcrb
add
cmp
xchg
cmp
mov
test
push
pop
mov
movsb
mov
mov
adc
jmp
sbb
mov
sub
mov
jmp
cli
and
xorl
in
std
lcall
lea
push
mov
stos
icebp
fisubs
ss
dec
pop
push
nop
inc
mov
aad
mov
xor
arpl
mov
cmpsb
mov
int
xchg
lea
test
xchg
into
mov
mov
pop
or
push
inc
outsl
xchg
lock
or
rcrl
or
das
ds
stc
and
mov
orl
cmpl
adc
adc
cltd
mov
xor
adc
pop
in
lods
xor
nop
inc
xchg
xor
ret
mov
xchg
jecxz
filds
add
pop
adc
test
xchg
data16
xor
mov
dec
cmp
icebp
leave
outsb
pop
into
adc
loopne
mov
js
insl
fsubs
fildll
push
mul
jno
mov
les
fst
ret
lock
mov
insb
pop
mov
lods
push
and
xchg
scas
mov
mov
jge
cli
or
push
fwait
je
push
mov
add
and
pop
lea
push
aad
fidivl
sub
lahf
pop
and
cmp
cmp
mov
pop
cmp
mov
clc
outsb
or
sbb
popa
or
pushf
or
jbe
push
lea
je
sbb
iret
jecxz
mov
ljmp
or
pushf
outsb
mov
sbb
pop
xchg
iret
stos
xchg
pushf
xor
lcall
out
push
test
popa
clc
sub
jb
mov
call
aam
lds
in
pop
or
cwtl
sub
pop
ret
sub
in
in
mov
mov
sarb
shll
jnp
and
fwait
jnp
xchg
imul
sarl
cwtl
fmull
testl
sbb
inc
arpl
ret
cmp
xchg
repz
scas
dec
aam
cmp
xchg
cmp
lret
mov
mov
sahf
push
lock
movsl
cmpsl
out
aam
mov
lret
mov
push
dec
pop
negb
xchg
jae
aam
mov
and
les
jp
and
jb
and
out
lret
mov
and
mov
jg
negb
js
pop
fidivl
mov
rcl
js
insl
dec
adc
inc
pop
jecxz
hlt
movsl
lret
sbb
xchg
xchg
jns
push
adc
les
cmpb
sbb
scas
lods
add
push
frstor
xchg
rorb
out
push
sti
imul
lods
jo
xor
cmpsb
fucompp
inc
out
jo
mov
loopne
cltd
adc
aam
jne
dec
jl
mov
push
mov
fmuls
sbb
xchg
gs
push
lret
int3
shll
mov
or
and
adc
xchg
mov
out
sbb
pusha
outsb
out
sbb
xchg
and
dec
xorl
jecxz
out
xor
sub
inc
mov
hlt
pop
or
sub
rorl
arpl
nop
jo
push
inc
mov
in
jmp
push
aas
push
mov
clc
mov
sub
and
lcall
adc
xor
test
jl
dec
stos
mov
rcrl
jno
nop
cmpsl
xchg
pop
adc
xchg
jno
or
dec
daa
addr16
stos
std
sbb
lahf
repz
mov
bnd
stos
inc
push
xchg
test
jns
jne
cmp
lcall
or
idivb
add
jecxz
cmp
cmp
out
mov
lods
or
xor
cltd
ss
fisttpll
pop
xorb
shlb
xchg
and
mov
push
mov
push
mov
mov
cmp
hlt
cmp
addr16
mov
push
dec
xchg
sub
mov
or
test
sbb
and
stos
shrb
mov
incl
das
cmp
data16
jo
test
cmp
cmp
pop
cmp
xor
int3
andb
mov
outsl
push
das
enter
mov
faddp
jecxz
sub
out
sbb
mov
and
fmuls
push
shl
mov
test
pop
lcall
outsb
sub
imul
xor
ret
adc
mov
clc
fnstcw
mov
add
pop
jno
test
lea
test
daa
rorb
adc
xor
aad
ja
cwtl
add
add
xor
mov
repnz
dec
inc
hlt
fsubr
jns
repz
or
jne
sub
adc
jnp
out
mov
cmp
pop
add
fdivr
sbb
add
inc
sbb
push
mov
jne
loope
daa
mov
pop
xchg
orl
sbb
lock
mov
sub
loope
adc
sbb
stc
call
push
inc
lods
test
ret
inc
jo
inc
dec
adc
xchg
fdivrp
test
rcll
mov
sub
into
push
jge
adc
jl
push
mov
add
rol
inc
add
adc
add
fwait
jns
pushl
or
data16
test
xor
dec
rcl
std
mov
outsl
fisttps
popa
leave
mov
shrl
ja
rolb
xor
push
mov
sahf
cli
sahf
xchg
loope
inc
repnz
xchg
jns
pop
jmp
and
jmp
cmp
xchg
or
icebp
jmp
xcrypt-ofb
cmpsl
push
dec
out
adcl
ja
neg
ds
test
sti
xchg
cmp
jnp
sub
inc
sub
cs
cmp
cmpsb
mov
xchg
cmp
mov
xchg
push
lret
out
aam
test
dec
enter
push
mov
xchg
sbb
mov
sbb
lds
es
cwtl
pushf
cmp
or
cli
xchg
out
pop
rcrl
gs
jne
adc
out
mov
ret
sbb
add
gs
jmp
mov
fisttpll
or
mov
mov
dec
mov
xor
call
mov
insl
rcll
cmp
loop
pop
push
adc
pop
mov
push
pop
xchg
and
ljmp
pop
pop
cmpsl
sbb
inc
popa
adc
jns
nop
xchg
icebp
and
inc
imul
dec
ret
loope
dec
jnp
bound
je
ds
dec
nop
mov
and
stos
push
inc
jp
lret
jg
pop
mov
sbb
stos
stos
mov
pop
cwtl
movsb
dec
insl
cmpsl
fwait
push
and
lds
mov
mov
ds
push
lds
mov
arpl
jge
movsb
mov
inc
xor
aaa
and
xor
insb
cmc
adc
data16
clc
push
xchg
scas
xor
push
sarb
xchg
or
or
out
addr16
cmp
insl
scas
adc
and
pop
fcmovu
lea
inc
sub
sub
push
in
cmp
imul
mov
add
stos
push
sahf
mov
ret
mov
sub
adc
xchg
dec
adc
nop
lret
xlat
xor
popa
andb
jae
pop
xchg
repz
lahf
js
insb
arpl
test
mov
or
or
mov
ret
push
sub
push
int3
pushf
stos
jmp
jne
push
mov
lds
enter
xchg
xor
adc
xchg
mov
mov
mov
push
mov
and
test
or
cs
test
adc
jg
fcomp
inc
and
ljmp
xchg
inc
pop
divl
or
mov
das
mov
xchg
pop
popa
fisubrl
cs
popa
loopne
js
movsb
daa
mov
mov
scas
add
lea
jae
pop
sub
cli
lea
xchg
lods
sbb
push
mov
dec
add
jbe
dec
ret
mov
mov
cmp
jge
add
or
pop
shrl
fnsave
xchg
cmp
negl
dec
push
sub
inc
in
push
inc
movsl
inc
outsl
push
ljmp
ret
popa
stos
sub
pop
sbb
out
cmp
and
and
ret
mov
mov
subl
mov
and
ret
sub
sbb
in
adc
mov
xor
xchg
pop
jb
insb
pop
int
bound
mov
dec
rcrb
test
icebp
cmp
fnstcw
ficoms
test
es
dec
sbb
xor
add
into
pop
add
aaa
js
icebp
inc
jge
add
mov
js
sub
pop
ret
or
add
addb
and
jns
push
imul
mov
cmc
je
mov
adc
imul
scas
test
and
je
cwtl
test
imul
jl
mov
popf
and
clc
push
imul
pop
dec
dec
inc
mov
pop
sub
push
dec
mov
mov
and
adc
int3
jge
outsb
enter
sarl
cs
jp
in
dec
sub
ret
xlat
test
pop
cltd
ret
in
fstl
push
pusha
mov
hlt
pusha
inc
or
sub
inc
mov
sub
dec
jecxz
fcomi
jbe
mov
orl
sahf
std
in
faddl
insl
xor
cmpsb
adc
mov
rolb
pop
adc
mov
dec
aam
jmp
outsb
mov
sub
lock
in
dec
sub
loop
push
rclb
xchg
sub
imul
xchg
add
adc
inc
xchg
in
mov
jne
mov
stos
jp
xchg
popa
xor
pop
popa
or
mov
dec
cmp
mov
cmpl
loope
xchg
les
lea
outsl
scas
jle
mov
addl
and
fwait
insl
or
mov
jmp
or
inc
sbb
mov
pop
fsubrl
pusha
setno
push
push
jae
leave
push
sbb
mov
aad
adc
cltd
inc
fstps
mov
pop
or
xor
ja
lret
mov
notl
cmp
or
jge
sbb
cmp
mov
fdivrl
xor
mov
push
ret
push
mov
push
jne
xchg
and
frstor
pop
in
lods
je
inc
cmp
cmpsl
push
enter
mov
push
rcrb
popa
mov
jnp
mov
sub
xor
adc
out
js,pn
pop
sbb
stos
jne
jge
lods
pop
leave
cmc
lret
or
sti
sbb
dec
dec
mov
pusha
mov
and
sti
popf
scas
dec
stos
push
adc
movsl
mov
mov
xchg
push
sti
push
xchg
mov
mov
mov
mov
adc
ret
scas
and
aam
loop
push
imul
popl
or
or
out
add
push
in
fsts
pushf
pop
push
mov
addb
idivb
push
iret
adc
cmpsl
inc
add
xor
gs
out
and
gs
sysexit
fidivrl
mov
or
cs
test
dec
out
dec
loop
mov
mov
dec
or
frstor
jnp
xlat
inc
mov
sub
dec
mov
adc
call
inc
add
mulb
jae
or
inc
movsl
pop
sub
unpcklps
outsb
lods
pop
push
cs
aaa
pusha
fcomi
jbe
das
fdivl
imul
aad
dec
jecxz
cmp
adc
aaa
mov
mov
sbb
sub
jge
jge
stc
xchg
roll
lock
cmpsl
gs
adc
icebp
mov
sahf
enterw
flds
fists
mov
aad
lret
push
adc
pop
lret
fst
xor
xchg
sub
mov
lea
or
mov
repz
inc
cmp
int
xor
pop
or
clc
icebp
or
out
jp
add
jg
lahf
or
push
jmp
xchg
push
ja
push
dec
ret
xor
or
xchg
add
mov
push
lds
scas
sub
ret
pop
push
movsl
mov
out
shlb
xchg
jge
daa
in
adc
or
dec
push
pop
inc
pop
and
dec
inc
stos
les
mov
int
cmp
push
and
icebp
xchg
cmp
mov
popf
dec
mov
sbb
popa
enter
ret
iret
into
mov
in
mov
cmp
and
sbb
inc
jnp
out
push
cmp
call
inc
ret
lea
jb
sbb
pusha
ror
das
lcall
xor
add
xor
sahf
sub
inc
mov
ret
sahf
pop
push
sbb
cs
inc
adc
setnp
cmc
pop
and
into
mov
jae
push
and
lods
or
clc
in
lods
repz
xor
mov
pop
je
pusha
jno
out
out
icebp
mull
jle
or
inc
jno
pusha
xchg
aam
lret
repz
int3
std
sub
insl
mov
add
pop
repnz
mov
push
int3
pop
fwait
movsl
lods
scas
adc
jg
inc
dec
adc
les
mov
or
mov
push
pushf
notb
aad
cmp
movl
push
sub
jae
or
pushf
xor
xchg
xchg
lea
jae
cwtl
bound
mov
mov
in
dec
pop
mov
inc
jae
pushl
push
mov
nop
or
xor
iret
or
push
push
out
and
sub
loopne
sub
out
lret
movswl
rorb
sbb
lock
pop
scas
aaa
fsubrp
bnd
fsubrl
mov
ja
and
jbe
mov
pop
in
cmp
lods
pushf
adc
push
js
inc
cmpsb
push
inc
xchg
sbb
jns
stos
push
mov
dec
cmp
fs
jmp
or
rcrl
lret
add
cmp
jnp
jg
outsb
add
orl
sub
push
imulb
jne
stos
push
pop
sub
push
sar
lahf
pop
mov
push
xchg
xchg
cmp
sub
jb
mov
sahf
fistpll
adc
mov
test
imul
mov
lea
dec
push
xchg
add
cmp
movsb
bound
xchg
cs
scas
arpl
ret
and
in
sbbw
add
scas
repnz
sbb
xor
push
cmp
aaa
ret
adc
cltd
jne
mov
mov
inc
push
inc
leave
xor
pop
stos
ja
adc
bound
std
mov
pop
leave
lahf
rcll
fsubs
jg
call
lret
jp
mov
in
clc
mov
sbb
inc
out
popf
or
mov
icebp
pop
cmp
mov
icebp
pusha
call
aaa
fwait
and
mov
xor
fucomip
add
adc
mov
mov
xor
push
mov
outsl
divl
sahf
call
jecxz
push
lret
clc
ss
popf
clc
sub
and
add
pop
cmp
adc
adc
pop
sbb
rcr
jbe
pop
cmp
rorb
aaa
fs
insl
mov
add
lcall
punpcklwd
mov
jge
jmp
out
jne
dec
aam
jge
jecxz
popa
jle
mov
data16
mov
cld
mov
in
cmpsl
or
int
add
push
pop
dec
mov
insl
or
out
pop
movsb
jp
xchg
cmpb
xor
pusha
xchg
idiv
fisttpl
xorb
daa
jmp
das
test
sbbb
repz
pop
push
daa
adc
xacquire
cli
jbe
fisttpl
insl
add
or
add
pop
mov
rolb
adc
push
cmc
mov
std
pop
adcl
sub
rolb
xor
shll
lret
mov
jne
dec
pop
sti
sub
or
add
rclb
inc
pop
aad
xchg
cmp
mov
subl
negb
jns
ret
fldcw
or
mov
cmp
dec
insl
pop
dec
daa
bound
xchg
or
adc
adc
lods
xor
inc
inc
lahf
inc
bound
push
imul
push
cmc
sub
cmp
jl
pushw
repnz
loop
xor
sub
pop
pop
jae
cmpsl
mov
nop
cmp
push
and
aad
mov
xchg
mov
adc
jne
xchg
sahf
push
cmc
aad
cmp
mov
or
sub
cmp
pop
push
sti
aam
arpl
cmp
sub
stc
xor
mov
adc
mov
cmc
je
jp
pop
push
fstps
rsm
adc
icebp
or
jmp
sbb
lea
and
sbb
andl
push
xchg
popf
or
sub
std
mov
idivb
sbb
adc
jne
inc
ds
add
fadds
sbb
call
jmp
mov
xor
dec
xlat
call
adc
or
mov
mov
movsl
push
lahf
mov
xchg
dec
or
je
outsb
pop
cmp
popw
decb
xorl
out
lret
stos
ss
or
adc
addb
sub
cs
dec
adc
cli
pop
push
loopne
movsb
fdivrs
or
fnsave
mov
popa
inc
jmp
and
gs
sti
mov
jle
iret
cmp
add
lock
or
test
out
and
mov
lret
push
ficomps
jne
mov
mov
xchg
rcrl
aad
adc
imul
xor
pop
out
dec
rcrl
loopne
pop
xor
fpatan
pop
push
out
or
push
pop
xor
stc
sbb
and
loop
fidivl
arpl
shlb
add
jmp
xor
mov
xor
rcrl
push
hlt
int
in
psllq
jns
aad
cld
push
out
test
idivl
inc
ds
daa
ss
pop
and
sub
mov
xchg
sti
cmp
mov
xor
xchg
adc
arpl
pop
pushf
insl
mov
insb
ret
psubusb
jmp
out
sub
cmp
inc
xor
icebp
in
fmul
mov
repnz
adc
sub
dec
test
nop
cmp
xchg
xchg
shl
mov
jg
sbb
int3
imul
push
push
sub
inc
lret
roll
les
or
fstl
stc
and
test
jcxz
pop
adc
rcll
imul
mov
cld
fidivrl
pop
es
iret
filds
sbb
mov
add
push
popa
aad
sbb
sbb
mov
outsl
adcb
imul
stc
mov
add
sbb
lods
in
add
adc
or
xor
iret
adc
cmp
xchg
and
idiv
mov
jmp
inc
iret
xchg
rorl
jo
ret
in
xchg
jbe
xchg
repnz
pop
sub
enter
pushf
add
adc
insl
negb
sbb
call
lahf
and
andb
mov
ja
rol
int
arpl
icebp
push
fcompl
sub
in
out
stos
add
repz
scas
fmuls
jne
xchg
dec
cmc
push
stos
stos
bound
shll
outsb
mov
shl
jge
aad
out
gs
jp
in
xchg
mov
fsub
test
lea
ja
leave
push
cmp
mov
fucomip
jo
scas
or
dec
push
outsb
lock
shrb
addl
sub
insb
xchg
pop
jl
dec
dec
mov
nop
incl
insl
aam
push
or
mov
mov
adc
shr
mov
enter
aas
cmpsl
mov
add
into
xchg
ljmp
mov
jno
mov
jp
add
fs
mov
xchg
repz
inc
xor
loopne
sarl
sub
and
and
cmpb
ljmp
mov
mov
mov
sahf
jl
lahf
imul
mov
ret
dec
popa
lock
outsb
or
fldl
nop
push
ljmp
popa
cwtl
mov
inc
andl
jnp
lods
ret
lret
jp
outsb
in
adcl
xor
cmp
into
ret
xchg
sub
mov
in
outsl
and
mov
pop
in
mov
mov
arpl
dec
shlb
cld
push
mov
mov
push
loope
xchg
enter
sub
stc
fnsetpm(287
dec
leave
push
pop
stc
inc
pop
or
enter
sub
test
neg
jns
pop
xchg
sbb
push
ja
xor
aas
push
pop
cmp
movl
jbe
mov
and
push
push
pop
stos
fs
aad
push
aas
mov
sar
scas
pop
lock
hlt
cmp
sub
mov
sbb
or
jge
sbb
movsb
lahf
pushf
xchg
mov
dec
cmc
mov
jns
int3
jbe
shll
or
mov
xor
pop
sbb
sbbl
inc
arpl
xchg
ljmp
mov
leave
addl
mov
scas
sub
xchg
xchg
addr16
xchg
ret
mov
clc
into
and
xlat
sbb
mov
icebp
jae
pop
repnz
mov
push
add
fwait
add
gs
sarb
mov
sbb
test
enter
adc
jmp
call
cmp
and
mov
rolb
cmpsb
loop
mov
cli
mov
dec
and
out
bound
push
or
sti
push
jae
jg
pop
xchg
jae
sbb
sbb
adc
xchg
sub
in
dec
pop
add
and
addr16
rcrl
sub
cmp
fstl
pushf
xchg
fisubs
iret
inc
scas
inc
inc
fdivl
shlb
dec
mov
ret
adc
loope
dec
data16
aas
popa
pop
das
out
adc
fs
or
mov
xlat
cmpl
stc
xchg
out
shll
lock
mov
mov
pop
pusha
fisttpl
add
add
aad
cltd
push
mov
jae
inc
imul
mov
adc
and
and
test
dec
fildll
scas
out
fwait
cmp
je
xor
add
jae
mov
mov
mov
in
aad
ret
enter
stc
mov
cmpsl
fsts
fisubrl
arpl
cmpsb
inc
mov
push
je
mov
ja
add
cmc
popa
mov
jl
sbb
hlt
xor
xor
in
lods
lods
or
pushf
mov
stos
pop
xorb
aas
data16
xor
in
add
xor
mov
cmp
jp
in
lods
mov
jl
cmp
mov
and
dec
sbb
repz
cwtl
dec
imul
pop
xchg
test
inc
xor
add
jno
adc
gs
ret
jg
adc
adc
fldenv
jnp
jmp
inc
mov
addr16
dec
jp
mov
sti
pop
ja
mov
jg
ds
lock
add
inc
repnz
and
andb
int
es
inc
popf
push
test
xchg
or
xor
popa
cmp
mov
push
lret
xchg
movsl
or
out
inc
add
push
aaa
and
shll
es
rcl
data16
or
loop
inc
push
enter
xlat
je
lret
ljmp
push
iret
push
aas
rcr
orb
jl
sub
or
jo
mov
stos
fs
sbbb
jecxz
cs
iret
xchg
test
cmp
or
jb
jecxz
xor
into
cmc
addr16
xor
fs
sarb
adc
pop
ja
sbb
mov
xchg
mov
int3
mov
pop
xchg
mov
adc
lods
xchg
pushf
push
jno
mov
sbbl
mov
je
mov
scas
in
mov
mov
imul
cs
int3
jg
mov
xor
xlat
inc
fpatan
scas
cli
xchg
hlt
dec
pop
divl
mov
jns
bound
cs
notb
movsl
mov
cwtl
bswap
add
pop
iret
arpl
push
lret
mov
push
in
test
loope
test
jb
inc
es
mov
cmp
xchg
jbe
pop
sbb
cmpsb
movsl
ret
add
adc
imul
out
inc
js
shlb
inc
fldl
sbb
in
fmul
jno
gs
bound
mov
adc
out
mov
int3
test
sub
jae
xor
add
mov
and
icebp
and
loop
pop
popf
pusha
mov
jb
addr16
data16
push
imull
movl
bound
mov
and
mov
pop
sbb
push
sbb
cmpsl
adc
jecxz
iret
in
xor
sbb
pop
mov
xchg
add
flds
pop
dec
and
movsl
stc
lahf
mov
js
push
inc
mov
cs
mov
cwtl
add
movsl
stc
pop
fisubrl
nop
pop
es
and
sub
jmp
xor
je
jmp
pusha
mov
or
mov
sbb
push
add
mov
cmc
cmp
xor
cmpsb
xchg
aad
popf
cmpsb
scas
fbld
popf
push
or
js
test
fldenv
aaa
lods
sahf
in
push
subl
jnp
xlat
sbb
cmp
cli
test
push
push
xchg
pop
jg
and
jno
js
pop
adc
jl
hlt
or
sub
sub
rcr
nop
jle
mov
daa
fdivrl
sub
lods
mov
pushf
jns
adc
push
aas
insl
mov
or
dec
into
xchg
pop
out
dec
sbb
sbbb
in
inc
sub
lahf
sbb
jg
xlat
insl
or
loopne
sahf
pop
adc
adcl
or
int3
inc
lds
fdivs
scas
push
repnz
mov
mov
rorl
or
jmp
mov
cmp
popa
cmpsl
sub
mov
ret
fistpll
sbb
mov
mov
mov
push
test
cmp
ds
mov
inc
adc
imul
xor
mov
add
cwtl
xchg
sahf
pushf
lcall
mov
test
lahf
stc
out
repz
jae
add
movsl
xchg
movsb
jmp
sbb
xchg
mov
cmp
mov
loope
ret
mov
dec
jmp
mov
pop
daa
pop
inc
icebp
test
pop
and
sbb
ljmp
xchg
jge
rcll
aas
fneni(8087
mov
pop
in
popf
aaa
mov
mov
lahf
enter
pop
mov
dec
ret
sbb
lds
sbb
xlat
pop
xor
outsb
fnstsw
adc
pop
subb
icebp
cltd
fwait
inc
aam
rcl
cmp
jmp
test
dec
push
sbb
jb
mov
inc
sbb
pop
es
inc
cmp
xor
int3
js
pop
faddl
mov
and
xor
jg,pn
push
adc
dec
arpl
stos
rclb
cmp
push
fiaddl
jae
mov
fisubrl
mov
jecxz
cmp
dec
int3
arpl
insl
jae
addr16
push
mov
lret
fwait
cmpsl
and
and
pop
fdivrs
add
jns
lock
sbb
sub
cwtl
xchg
out
mov
cmp
inc
adc
mov
into
inc
pop
jns,pn
inc
add
xchg
dec
sub
jge
add
loope
shl
incl
or
sbb
daa
fsubrl
dec
cmp
into
add
xchg
mov
stos
cli
push
outsb
outsb
movb
mov
add
movsb
lods
in
pop
shlb
rdmsr
lock
xchg
cmp
mov
jg
or
rcrl
ret
jecxz
jnp
pop
lahf
adc
or
enter
clc
jp
ljmp
les
ja
ficompl
xchg
add
in
mov
mov
xchg
rol
aad
ljmp
jnp
stos
mov
cmp
in
dec
in
insb
test
and
mov
ret
xor
inc
ljmp
xchg
lods
add
inc
sub
nop
stos
inc
imul
mov
repz
xor
mov
jae
js
les
fiadds
in
xchg
mov
mov
or
push
pop
loopne
lods
jp
cli
mov
push
pop
lcall
std
dec
orb
cmp
daa
adc
decl
aam
imul
cltd
adc
and
xchg
or
lea
jge
insb
pop
inc
sbb
and
rcll
push
ret
and
add
sub
pop
push
xlat
and
pop
adc
and
mov
mov
int3
cmp
sbb
stos
push
mov
cltd
ss
ja
xor
xor
mov
push
ds
dec
sbbl
iret
leave
mov
cwtl
xor
jbe
pop
pop
cmpsl
xor
push
in
mov
and
loope
int
jg
sbb
or
jns
pop
sbb
or
outsl
filds
and
or
mov
or
es
pop
mull
or
mov
aad
xor
jne
out
clc
xor
out
repz
sbb
lods
cmovg
sbb
push
push
je
jg
mov
test
mov
in
inc
xor
int
loope
push
jge
sbb
sbb
es
and
add
imul
jmp
in
mov
sbb
mov
inc
dec
mov
std
les
xor
mov
data16
in
jp
jge
test
push
imul
and
jmp
push
add
dec
jo
mov
adc
leave
xchg
into
scas
push
divl
dec
pop
push
shll
xchg
bound
pop
mov
fsubrp
cmp
and
inc
ret
xlat
sub
inc
adc
xchg
push
out
out
cmp
popf
in
insb
xor
icebp
push
dec
or
cmp
dec
fisubrl
mov
push
mov
aaa
fistl
loope
mov
inc
std
popa
inc
inc
ja
popa
add
mov
push
enter
lret
add
xchg
push
aas
pop
andb
daa
jecxz
push
ret
fbstp
cmp
lahf
cvttps2pi
out
ljmp
in
mov
pop
add
xor
stos
push
ljmp
cltd
cmpsb
call
popa
jo
inc
mov
dec
in
mov
push
jle
jg
or
mov
cmpsb
out
dec
adc
pop
sahf
aaa
clc
shrl
xchg
sub
ja
js
int3
adc
mov
add
xor
scas
mov
lock
rorb
mov
idivl
imul
in
addb
push
scas
mov
std
loopne
outsb
out
mov
fs
dec
iret
cmpsl
or
call
insl
repnz
sbb
push
es
in
add
mov
push
fcomip
and
pop
sub
xor
clc
rcrb
ljmp
cltd
push
sub
xor
cmpsl
fucomip
push
lods
or
lods
test
cmpsb
push
scas
imul
popf
xchg
cltd
aad
jg
add
or
mov
push
mov
and
push
mov
mov
loopne
mov
or
in
add
xor
js
xor
sub
pop
dec
sub
ja
fldt
push
stos
lcall
sbb
push
lods
pop
mov
ja
adc
xor
mov
paddd
add
insl
pop
and
pop
stos
inc
stc
mov
ljmp
es
rcll
int
xor
adc
mov
daa
xchg
pop
ljmp
mov
sub
adc
jg
lods
or
or
jb
stos
arpl
xchg
lret
nop
pusha
jnp
push
jns
sbb
sbb
ds
inc
fdivl
andb
mov
mov
dec
mov
pop
aad
push
push
and
int3
xchg
inc
stos
fimull
mov
dec
mov
ljmp
or
out
mov
push
and
std
fwait
into
push
call
sbb
cmp
pop
push
pop
add
jae
mov
push
jb
cmp
dec
aas
addr16
sub
mov
xor
push
out
mov
adc
xchg
mov
arpl
fdivrs
inc
popa
inc
xor
push
shlb
inc
inc
pop
movsb
les
fcoml
cmp
ljmp
jb
mov
loope
push
adc
sbb
unpckhps
adc
es
fwait
dec
inc
fwait
push
sub
xchg
and
lcall
adc
inc
jg
xchg
xor
mov
insl
dec
lock
sbb
dec
stos
les
mov
inc
in
push
mov
and
mov
pushf
out
inc
jae
es
xchg
jmp
ljmp
fwait
sub
and
jle
mov
scas
or
mov
sbb
push
fnstenv
pop
imul
fildl
push
dec
inc
xor
and
inc
inc
mov
mov
jb
inc
outsl
imul
cmpsb
pop
fcoms
fadds
rorl
jae
fadds
ret
dec
jmp
jno
cmp
stc
mov
add
test
ret
or
sbb
cmp
lods
sbb
and
movl
xor
or
push
cmp
pushf
repnz
mov
mov
fbstp
jge
xchg
ss
inc
jnp
andb
popa
call
aam
cmc
pushf
int3
inc
pusha
jle
xchg
test
ficoml
lds
pop
cmpb
popa
inc
cmp
fimull
fs
xor
stos
es
shrb
pop
adc
xchg
xchg
inc
mov
sbb
mov
mov
out
add
out
sbb
int3
xor
rcrl
mov
pushf
inc
aam
jge
xchg
inc
pop
xchg
sahf
push
stc
and
xchg
adc
dec
insb
inc
jnp
mov
dec
cmp
ljmp
xchg
loope
pop
adc
sbb
imul
pop
scas
fadds
lea
push
mov
pop
arpl
lods
inc
mov
push
add
test
lret
or
sub
xor
daa
ja
ret
or
hlt
xor
sub
sub
andb
cmp
jmp
mov
testb
mov
jnp
jne
or
jnp
pop
inc
jmp
lods
mov
mov
cmc
inc
mov
jp
lret
add
mov
xchg
enter
cwtl
and
mov
inc
or
test
or
lahf
rcrb
cmp
out
push
xchg
pop
je
inc
pop
lcall
sbb
mov
inc
int3
or
jg
std
or
adc
sub
jns
ficompl
into
inc
push
fnsave
xlat
in
repz
mov
cmp
inc
xchg
push
inc
mov
adc
punpcklbw
loopne
popa
push
push
out
aas
mov
dec
outsb
and
inc
pusha
xchg
jae
push
dec
inc
xor
mov
or
outsl
and
gs
dec
and
and
fidivrl
mov
xchg
mov
or
aam
jg
cmpsb
push
stc
rcr
xchg
ja
push
shl
lds
xchg
imul
inc
into
mov
icebp
cmp
push
scas
in
jmp
ljmp
xor
add
sbb
mov
sbb
xor
push
mov
out
fisubrs
push
xadd
ss
sbb
outsb
in
inc
mov
aad
xor
enter
pop
cmp
clc
xor
movsb
push
in
xor
mov
sub
push
int
adcl
jno
pop
add
or
out
test
xchg
mov
cli
or
gs
xor
pop
ss
adc
push
or
out
and
push
inc
fcomip
repz
push
mov
sbbl
lock
enter
mov
outsb
icebp
outsl
push
repnz
mov
add
clc
sbb
call
cmp
out
shrb
xchg
or
iret
push
lods
xchg
scas
rcll
xor
cmp
inc
add
mov
inc
pop
je
sbb
inc
aaa
mov
cli
jae
cld
lahf
into
fwait
mov
fs
sub
xchg
sahf
pop
push
fwait
mov
dec
add
xchg
jbe
rclb
fidivs
out
mov
or
jb
incb
inc
jo
out
in
sub
cld
and
ret
mov
gs
fmull
push
rcll
and
cli
push
adc
popf
iret
jns
rclb
int
add
xchg
mov
popa
cli
xchg
cmp
jns
pop
dec
faddl
mov
ss
xor
push
cmp
sbb
ret
cli
daa
jl
add
ss
lea
movsb
jp
sub
pop
adc
push
cmp
xor
fsub
push
sub
sbb
xchg
or
sbb
push
dec
cmp
shr
sbb
lcall
loop
stos
xchg
movsl
mov
xor
aad
repz
xchg
cmp
dec
daa
xchg
es
cmp
cmp
xchg
pop
mov
aas
mov
test
jmp
out
push
in
fs
push
daa
js
insl
icebp
and
sbb
pop
int
sbb
push
outsl
pop
lret
jb
out
mov
lret
into
dec
out
push
add
movsb
pop
addr16
hlt
sub
inc
in
js
stc
xor
scas
dec
or
xchg
jno
jb
rclb
adc
addb
icebp
jb
addb
push
daa
inc
arpl
rcll
inc
pop
loop
sub
std
ror
out
subl
inc
ret
push
dec
push
mov
dec
aaa
arpl
std
push
sbb
mov
cmp
in
aas
jp
hlt
loop
pop
iret
jecxz
rcl
js
test
mov
fildll
sbb
push
xchg
mov
fstpt
sub
and
aam
pusha
scas
mov
adc
xchg
int3
orb
mov
test
xchg
cmp
add
dec
push
into
popf
daa
cmp
rcrb
add
popa
addr16
push
lcall
rcr
add
test
subl
push
mov
lret
xor
stc
add
pop
push
push
les
out
in
rolb
xchg
mov
les
add
fucomp
cmpl
dec
fsubrl
or
mov
stos
adc
xor
clc
push
sub
lcall
cmp
or
jno
add
lds
daa
lret
jne
test
test
push
dec
inc
inc
sbb
inc
incl
into
rorb
sti
mov
xchg
daa
mov
data16
lret
xor
dec
or
cwtl
pop
adc
imul
adc
enter
fidivs
sub
dec
stos
mov
negb
push
insl
jae
pop
add
jns
cli
jge
jl
cmc
ret
cmc
test
scas
push
int3
jmp
xchg
xorl
add
xchg
imul
rol
das
sbb
xchg
mov
push
xor
test
cmp
insl
bound
aad
scas
pop
push
ret
outsl
mov
xor
sahf
cltd
int
icebp
ljmp
dec
sbbl
mov
popf
in
or
adcb
xchg
sarb
mov
mov
mov
fistps
push
xchg
fwait
imul
mov
cwtl
pop
cmp
stc
test
and
jbe
imulb
loope
pop
dec
sti
sub
std
in
inc
or
cmp
mov
jge
ret
xor
push
xor
ret
mov
jbe
mov
aaa
push
sub
sar
xchg
rcll
adc
fbld
lods
jecxz
pop
lods
popf
js
cmp
loopne
jecxz
pop
jbe
pop
dec
lret
mov
xchg
test
js
xor
push
seta
push
std
cmp
jbe
mov
fdivrl
pop
cwtl
lcall
or
inc
pop
orl
and
into
int3
mov
ficoml
or
jbe
xchg
notl
mov
gs
mov
xchg
adc
pushf
mov
mov
cltd
mov
dec
push
fnstcw
add
popf
fsubrl
fistpll
xchg
jae
xchg
mov
out
in
orb
aad
outsl
cmpsb
out
lock
std
js
mov
cmpsb
mov
sarl
test
jge
adc
std
inc
sub
jle
ficomps
repz
stos
leave
addr16
pop
mov
jg
sbb
mov
rcll
mov
cmp
or
nop/reserved
pop
xor
dec
cltd
insl
cs
pop
inc
je
add
loop
mov
sbb
decl
dec
inc
adc
imul
mov
movsb
fbld
and
push
pop
rcr
mov
ss
mov
push
jb
inc
stc
or
fldl
lret
rcr
jecxz
cmp
inc
lahf
in
mov
mov
test
icebp
aaa
pusha
xchg
cmp
popa
shll
fs
jp
rcll
call
xchg
xchg
inc
outsl
ret
outsl
pop
sarl
std
jnp
mov
dec
mov
fchs
mov
mov
std
stos
leave
out
or
sub
xor
std
xor
fstl
cld
rorl
fidivl
xchg
xchg
xchg
cmpsl
ss
inc
sbb
fdivrs
jns
dec
stos
dec
pop
in
mov
cmp
cmpsl
add
pushf
push
xchg
xor
stos
mov
jno
lods
enter
mov
fucomp
or
in
call
adc
movsb
xchg
lret
bound
mov
stc
xlat
cmp
lret
into
out
push
in
scas
mov
mov
dec
inc
sub
cmpl
fstl
lret
sbb
mov
mov
call
jbe
out
icebp
push
gs
lods
mov
inc
adcb
and
call
mov
mov
push
lods
mov
in
sbb
cltd
jp
cmp
jnp
lods
and
jecxz
stos
ljmp
lods
les
sub
add
arpl
mov
cmc
sbb
dec
inc
ljmp
mov
dec
bound
jns
mov
xlat
mov
lcall
and
add
jb
pusha
jbe
dec
sarb
adc
or
pop
push
and
test
mov
cli
sahf
andb
sbb
and
mov
out
cs
adc
sbb
addb
data16
outsl
imul
stos
fcoml
jg
imul
add
add
jae
mov
xchg
mov
lods
jbe
sti
ljmp
mov
dec
popf
jg
push
cltd
es
rcrb
jp
inc
cmp
stc
cmpsl
jmp
outsb
ja
imul
jl
js
cmpb
pop
push
push
inc
cmp
adcb
inc
pop
and
in
testb
movsl
adc
mov
jne
pusha
xchg
xchg
jl
jae
movsb
je
xchg
sbb
mov
push
add
pop
out
rcr
mov
fldcw
hlt
sbb
cltd
xor
fadd
imul
iret
cmpsb
pop
pop
leave
and
aam
fwait
dec
or
sbb
push
lds
xor
in
imul
sahf
loop
mov
ficoms
and
pushf
push
in
cltd
inc
cmp
outsl
pop
sbb
mov
sub
add
jge
sbbb
insb
cwtl
outsb
jnp
fs
inc
add
mov
or
incb
pop
shll
imul
addl
mov
lods
xchg
inc
repnz
dec
mov
repz
pusha
push
pushf
xor
arpl
adc
mov
pop
mov
fdiv
ret
dec
cld
push
or
dec
dec
cmp
mov
sahf
out
sbb
je
push
outsb
lock
or
aad
pop
std
xlat
adc
pushf
and
sub
pop
mov
cs
std
xor
ret
mov
mov
jae
fldl
loopne
es
movsb
cmpsb
and
and
mov
sub
out
adc
inc
lods
testb
xchg
scas
lret
inc
xor
sarl
in
jg,pn
rcrb
cmp
and
mov
les
sbb
adc
dec
popa
lods
ss
stos
stc
pop
fistps
das
and
xchg
in
xlat
mov
push
add
jl
mov
imul
jae
pop
idiv
mov
add
jns
sub
pop
out
sub
adc
inc
aaa
movsl
sub
sbb
xlat
xchg
xchg
popf
or
mov
mov
xlat
add
mov
push
jne
adc
js
sbb
into
dec
push
mov
pop
lds
jae
jne
cmp
scas
mov
cmpsb
imul
jle
push
out
pop
cmpsb
shrb
adc
ja
mov
mov
in
test
dec
mov
mov
rolb
push
stos
into
cmp
mov
mov
cmp
add
test
inc
jns
pop
xchg
stos
shll
mov
cmp
pop
inc
sti
jp
test
arpl
pop
mov
push
adc
sbb
imul
xor
mov
popa
push
mov
dec
fsubr
sbb
sti
je
ret
pop
bound
sub
push
lret
mov
push
int3
jp
cld
add
mov
mov
add
add
mov
push
sbbl
sbb
mov
cs
mov
mov
mov
push
out
cmpsl
inc
cmpsl
jbe
mov
add
jge
lods
shl
jae
dec
mov
arpl
dec
dec
test
loope
sbb
aad
push
cmp
mov
inc
jecxz
outsb
or
aas
sbb
mov
xor
add
imul
dec
push
call
push
fs
jo
dec
pop
hlt
nop
nop
popf
pop
push
dec
jo
mov
pmaxub
fsubrp
ja
insb
push
fnsave
jmp
in
mov
sti
sbb
sub
sub
add
jmp
mov
in
mov
jp
push
cmp
in
ja
cwtl
roll
loope
mov
inc
loopne
push
xchg
push
test
lock
xchg
add
in
jns
sub
mov
jae
xor
mov
dec
inc
stc
jmp
leave
sub
movsb
cwtl
iret
mov
int
mov
mov
xchg
in
orb
xchg
cmp
notb
mov
add
fcoms
mov
scas
aad
or
pop
or
xor
mov
or
jmp
test
loop
test
fimuls
jmp
mov
pusha
pop
lods
lds
adc
aas
jbe
je
insl
fistl
lcall
daa
jnp
int3
push
xor
insb
mov
lds
xchg
int
stos
adc
sub
or
mov
sbb
add
enter
jle
push
or
into
aam
xchg
out
out
sub
adc
test
cmpsl
xchg
inc
add
es
sub
push
xor
clc
dec
clc
add
shll
adc
xor
test
xchg
cmp
sub
filds
mov
rcrb
add
cmp
in
lods
ret
and
imul
aam
sbb
sub
ljmp
jl
jb
sub
repnz
bound
xor
pop
pop
add
or
scas
mov
push
jmp
jb
mov
xchg
das
stc
xchg
mov
stos
mov
sbb
loopne
sub
xchg
sub
push
xchg
xor
fidivl
xor
test
gs
enter
out
movsb
in
dec
data16
xlat
xlat
xlat
jmp
sub
stos
jp
out
and
test
les
test
mov
push
add
jmp
jne
pop
push
fstpt
xlat
dec
cltd
pop
mov
les
pop
addb
insl
sahf
jbe
mov
jmp
pop
pop
subl
push
pop
push
push
in
lret
jnp
jo
or
inc
imul
loope
das
daa
push
add
std
mov
jecxz
stos
cmc
pop
push
imul
lret
repnz
scas
cs
mov
add
notl
mov
leave
sahf
loop
or
pop
bound
icebp
xor
enter
push
mov
pop
lret
nop
inc
sub
sbb
repnz
inc
inc
sub
fiaddl
xor
inc
test
mov
xchg
jo
and
pop
mov
aaa
lock
pop
es
es
fadd
pop
xchg
frstor
jp
push
sub
out
test
mov
dec
clc
or
lods
sub
cld
out
fsubs
dec
add
mov
shl
sbb
dec
popa
jp
adc
mov
mov
lret
push
ss
iret
daa
orl
shlb
nop
lea
sbbl
out
pop
loopne
adc
fwait
sarl
mov
mov
adc
sbb
cmp
mov
fldenv
mov
fisubrs
movsb
ror
xorb
sahf
mov
shr
push
push
jno
ret
mov
mov
xor
and
xlat
scas
cmp
in
dec
push
jp
mov
adc
std
insl
in
mov
sub
mov
jle
sarl
jg
popa
push
data16
scas
lea
lahf
or
mov
mov
mov
ficompl
aas
fiaddl
adc
lahf
push
out
adc
roll
in
sbb
inc
xor
in
xchg
push
mov
stc
popaw
mov
xor
and
jno
pop
or
jns
and
mov
xor
dec
sub
cltd
rcrb
jbe
repz
mov
int3
push
add
out
push
xchg
jmp
addb
test
popa
cmp
lock
lret
add
sbb
in
add
mov
xchg
outsl
jp
inc
cs
dec
cmc
adc
shll
mov
aaa
jp
sti
mov
outsb
lcall
inc
lcall
push
pop
aaa
add
fisttpll
shll
push
popa
fwait
add
sti
outsl
cs
xchg
lock
xchg
mov
xchg
ret
jb
inc
int
or
inc
pop
das
pop
aad
movsl
xchg
pop
les
adc
popa
jmp
test
sub
leave
jne
call
push
testl
jge
outsl
mov
cmpsb
add
icebp
lret
aam
pop
pop
mov
mov
jecxz
lret
mov
adc
pop
push
mov
sbb
or
lret
aam
je
stc
ljmp
insl
imul
rclb
cmp
mov
cmp
pop
and
xor
ss
xor
movsb
mov
add
lock
int3
out
mov
push
std
pop
mov
xchg
mov
mov
mov
jns
cmp
inc
push
sub
xor
mov
mov
loopne
xor
xchg
and
test
xor
inc
mov
add
pushf
mov
mov
imul
add
mov
pop
sub
and
add
jl
pusha
push
fmull
xchg
inc
xchg
enter
in
pop
mov
fwait
add
adc
dec
and
loop
lock
pop
sbb
xor
push
rorl
aas
xor
lods
in
imul
leave
iret
leave
outsb
add
mov
jmp
test
dec
je
mov
or
push
fildl
jecxz
dec
aaa
mulb
push
cmp
dec
test
dec
fstpl
xchg
test
test
mov
cmp
stos
in
andb
adc
js
int
cmp
xchg
in
sub
sahf
out
jecxz
movsb
fs
sub
or
mov
addb
jmp
push
pop
je
adcb
fs
push
mov
mov
int3
cltd
xchg
pop
repnz
outsb
fwait
je
aam
add
mov
aaa
test
mov
lods
std
inc
aam
popa
mov
insl
jmp
int
jmp
push
sar
fcmovb
and
push
jp
mov
aad
mov
cmp
arpl
xchg
fisttps
sbb
iret
push
dec
adc
mov
cwtl
les
adc
fisttpl
outsb
push
sub
fisttpll
xchg
pop
data16
mov
jae
stos
mov
in
dec
xor
dec
add
dec
stc
roll
push
leave
sbb
pop
test
pop
xlat
pop
cmp
ds
and
cmp
or
outsb
jo
cmp
jg
arpl
add
mov
aam
sti
pop
pop
clc
inc
cmp
aas
xchg
jp
and
push
iret
add
sbb
hlt
push
mov
iret
flds
in
ljmp
sti
arpl
stos
scas
jns
out
jle
push
scas
pop
popf
aaa
add
lret
andb
shrl
or
ds
mov
sbb
in
cmp
clc
inc
outsl
xorl
jae
sbb
and
inc
xchg
lret
add
clc
add
xor
es
mov
scas
sub
dec
test
jl
arpl
popl
outsb
dec
int3
mov
sar
negb
add
fsubrs
lods
xor
aaa
enter
lret
jge
cwtl
push
ljmp
adc
sub
jb
cmp
mov
sarb
pop
push
in
adc
mov
xchg
or
dec
imulb
nop
mov
xlat
outsl
add
fnsave
les
shll
enter
ja
outsb
cmpsb
mov
loop
push
push
fildl
fistpll
or
pop
mov
add
cmp
lds
mov
into
cmp
sbb
add
adc
cmp
lds
fisubrl
andb
mov
jbe
dec
imul
pusha
or
bound
adc
dec
push
inc
dec
pushf
insl
cmc
imul
sar
pushf
aad
xor
mov
loop
xchg
not
outsb
rolb
jns
and
jne
mov
insb
in
sbb
das
xchg
mov
xchg
lods
sub
pushf
shll
add
loope
loope
sub
jo
rcl
lea
dec
cli
movsb
dec
mov
cmp
ret
mov
mov
into
out
dec
fwait
pop
ljmp
pop
imul
or
mov
sub
lods
xchg
fucom
lds
lret
jg
adc
cld
mov
pushf
jns
or
adc
inc
or
add
jbe
sub
or
or
inc
mov
mov
push
leave
or
cltd
push
mov
daa
xchg
stos
mov
cmp
ret
push
add
lahf
leave
cli
cmc
test
hlt
push
pop
mov
dec
mov
pop
gs
test
push
or
rclb
xor
or
add
mov
inc
and
mov
xchg
sbb
js
adc
push
mov
sti
and
gs
lahf
shrl
ds
dec
sbb
and
and
repz
fisubrs
adcb
mov
cmp
jp
mov
and
jg
ja
ljmp
aam
dec
popa
rcrb
scas
fldt
js
mov
jmp
roll
movsb
scas
fwait
mov
minps
out
arpl
jmp
pop
stos
std
fwait
pop
add
fsub
add
xchg
jmp
sub
loopne
stos
nop
clc
test
cmc
add
pop
in
inc
add
mov
sub
sub
xchg
das
movsl
mov
outsl
aam
cwtl
call
neg
insl
sbbl
imul
decb
inc
pop
adc
fdivrs
adc
loope
out
push
pop
pop
cmp
jbe
leave
in
jg
iret
movsb
out
inc
lret
scas
jg
sub
xor
xor
fimuls
cmpsl
push
pop
aaa
lock
ja
mov
stos
push
or
lcall
insl
lds
jmp
fmuls
jle
or
and
sbb
popa
test
mov
outsb
icebp
sub
push
lret
cwtl
push
insl
xchg
fcoml
jae
push
lret
into
out
inc
data16
ret
inc
push
jb
lahf
int
fs
mov
mov
pop
subl
test
or
push
stos
mov
inc
push
xor
xchg
xor
popf
jns
out
adc
dec
jno
mov
mov
imul
jns
jnp
lds
jl
push
mov
scas
inc
aam
inc
jnp
pushf
lret
ss
jno
in
pop
mov
add
push
or
je
or
mov
mov
in
sub
cmp
arpl
lahf
sub
mov
xor
out
push
mov
out
popa
in
or
cmc
mov
sub
xlat
dec
lahf
cmc
inc
stc
dec
in
mov
aad
cltd
push
hlt
je
or
jns
imul
pushf
cmp
fucomi
ss
cmp
adcb
adc
pop
xorb
and
or
pop
pop
mov
call
nop
shl
std
pop
or
inc
mov
out
lahf
mov
addl
lret
and
outsl
pushl
popf
push
xchg
xor
incb
movsl
mov
xchg
mov
sub
inc
inc
cmp
and
out
insl
jle
and
mov
jge
sti
add
and
xchg
negb
inc
add
mov
dec
shrl
pop
dec
add
lcall
mov
jecxz
dec
into
inc
iret
sbb
xor
lcall
popa
push
sti
mov
xor
jmp
dec
jmp
pop
adc
pop
imul
imul
cltd
mov
xchg
pop
cs
aaa
mov
stos
fcoml
mov
sbb
push
je
mov
adc
jl
push
lods
in
mov
test
lds
push
sbb
xchg
and
mov
or
mov
stos
arpl
sti
jnp
xor
movsb
jae
mov
sbb
add
push
add
aam
cs
ret
mov
pusha
sbb
movsb
call
ret
or
and
mov
xor
cmpl
add
outsl
mov
adc
mov
dec
add
lds
xchg
jae
lret
and
mov
idiv
pop
push
shrb
shlb
xor
mov
xor
jb
jle
jle
aas
xchg
mov
into
mov
lcall
lods
push
cmp
cltd
in
pop
es
daa
loopne
dec
or
or
xchg
imul
sbb
jmp
jge
xor
fcompl
dec
sbb
mov
adc
aas
shll
xor
fldl
pop
sbb
lock
adc
dec
push
or
mov
jge
or
aam
sub
or
sub
or
push
pushf
lahf
cmp
jp
mov
xor
test
mov
outsb
mov
pop
xchg
jg
movsb
pop
and
push
or
aam
dec
in
shll
sahf
adc
jb
mov
sbb
enter
les
and
imul
xchg
xlat
jns
ss
dec
jae
and
data16
fldl
mov
pusha
sahf
cmp
pusha
mov
sti
sub
stos
and
mov
aaa
data16
int
jp
mov
jbe
call
dec
dec
add
mov
or
push
pushf
mov
cltd
sbb
sub
outsl
ret
leave
fs
ret
adc
mov
ja
mov
add
or
insl
jge
or
jmp
imulb
mov
fdivp
mov
adc
push
add
jmp
stc
adc
push
inc
jle
mov
stos
dec
mov
mov
xchg
jle
jecxz
shlb
test
cmpsb
test
add
inc
ljmp
or
fstpl
sar
stos
insl
cmpsb
and
jns
call
jle
jbe
lahf
and
or
fbstp
add
cmpsl
sbb
dec
mov
leave
or
xlat
mov
ds
nop
mov
pop
out
out
sbbl
filds
mov
cmp
movsb
push
xor
sub
push
cmp
xor
cmp
out
pop
push
xchg
pop
xchg
lcall
mov
xor
mov
das
xor
or
loop
xchg
dec
mov
test
clc
push
ss
pusha
xor
jne
dec
push
lods
push
xor
push
fisttpl
imulb
das
cmp
sub
jg
sbb
cmp
lock
mov
push
scas
push
loope
popl
test
adc
addb
push
sub
cmp
in
adc
imul
push
loop,pt
add
xchg
cmp
adc
sub
xchg
mov
mov
mov
dec
lds
inc
mov
in
adc
ret
mov
outsb
ja
push
sbb
les
ficompl
and
movsb
pop
insl
jmp
cmpsl
jne
mov
stos
cmp
ret
mov
cmc
push
fcmovbe
sbb
mov
xchg
and
sub
repnz
out
in
push
sbb
rorb
mov
dec
push
fdivr
in
mov
movsb
cwtl
sbb
addr16
pop
push
mov
loope
inc
dec
sbb
out
xchg
aad
inc
roll
inc
jl
mov
xchg
dec
add
xor
mov
mov
shl
ds
xchg
data16
shll
pushf
scas
adc
ljmp
scas
or
dec
fsubrl
mov
mov
pop
sti
or
cmp
pop
push
or
bound
pop
arpl
sub
fnstsw
pop
test
sbb
adc
jle
or
pop
pop
pop
jmp
jg
fidivrs
inc
and
sub
popa
popf
mov
popa
mov
aam
fmulp
inc
add
je
call
mov
cmovnp
push
sub
aaa
rcr
pushf
loopne
cli
inc
push
jmp
mov
jne
adc
inc
iret
adc
push
in
adc
push
in
push
and
das
add
sub
fwait
push
xor
xchg
mov
outsb
xchg
lods
or
in
outsl
mov
popf
mull
out
dec
push
pop
mov
insl
inc
cwtl
rclb
sti
inc
jmp
sbb
and
cmpb
adc
sub
pushf
and
jg
mov
mov
sub
adc
bound
dec
gs
adc
and
dec
pop
mov
sbbb
sub
into
fmul
pop
push
call
adc
push
into
cmpsl
sar
mov
fbstp
mov
add
sbb
sub
jecxz
aad
xlat
outsl
out
repz
inc
push
jnp
adc
adc
insb
add
dec
add
push
mov
jbe
imul
in
dec
adc
sbb
push
out
dec
mov
lea
add
xor
bnd
mov
pop
popf
das
test
out
cmpsl
pop
rclb
sub
xchg
and
mov
push
or
adc
jge
lock
icebp
xor
cmpxchg
idivl
mov
jecxz
lock
je
mov
xchg
aas
lcall
mov
jge
cltd
mov
mov
dec
cmc
sbb
stc
sub
hlt
enter
out
lea
dec
lock
jmp
push
js
cmp
std
and
adc
push
test
sub
sub
imulb
lock
test
ret
and
push
jge
push
pop
push
mov
clc
push
orl
add
xor
xlat
add
xor
pop
repnz
loope
sbb
or
adc
cmpsb
rorb
xchg
sub
mov
add
lea
pop
inc
test
test
ljmp
adc
insl
and
or
mov
inc
push
pop
nop
fdivs
and
push
jp
addl
shlb
lcall
push
cmp
mov
shll
lret
mull
add
out
std
adc
sub
lods
xchg
xchg
popf
xchg
mov
bound
insl
or
or
pop
inc
adc
mov
mov
call
cwtl
or
repnz
sub
dec
in
xchg
sbb
inc
sub
or
movsl
sbbb
mov
jmp
mov
in
shl
lods
stos
or
cld
sub
push
xchg
lods
jge
mov
add
dec
and
aas
fs
dec
mov
fidivl
dec
jbe
imul
outsb
sub
orb
filds
mov
pop
jno
jbe
lods
inc
lds
push
mov
sahf
pop
testl
adc
dec
gs
jb
jne
loope
mov
cmp
shl
and
pop
stos
rorb
jl
jl
jne
and
std
imul
push
sarl
aad
xor
stos
xchg
enter
jo
mov
xchg
add
jbe
movsb
adc
cli
xor
xchg
sub
rol
ja
outsl
inc
arpl
dec
cmc
mov
xor
test
fs
int3
xchg
lods
lods
push
adc
xchg
movntq
loopne
cmp
fs
test
cld
data16
enter
add
add
sub
pop
in
test
push
jo
sub
or
scas
lret
xor
mov
cmpsl
mov
push
int
cmp
mov
or
add
aaa
imul
je
dec
xchg
mov
jp,pn
sahf
xchg
or
icebp
pop
in
push
decb
and
loop
pop
dec
ljmp
clc
jle
aam
int3
dec
mov
test
stc
mov
push
sub
negl
push
inc
imul
in
xlat
outsl
add
jo
lret
dec
xorl
ja
sub
pop
adc
add
enter
pop
jo
sbb
or
jg
mov
and
mov
jne
sub
movsb
inc
cmpsb
dec
sub
repnz
jns
cmp
mov
adc
loopne
dec
bound
mov
imul
sbbb
jo
mov
lods
clc
add
rcll
adc
lret
imul
jno
add
sbb
jne
cli
jb
adc
fimull
scas
fiaddl
movsb
push
ja
into
pop
aam
lahf
xlat
sbb
dec
ficompl
adc
push
popf
add
es
leave
loopne
faddl
scas
sub
je
hlt
mov
sahf
mov
sbb
jb
pusha
and
sub
add
lret
int3
xchg
lods
sbb
call
sbb
or
lret
jl
adc
jbe
push
shlb
sub
mov
cmp
ja
mov
test
pop
pusha
ret
add
std
sahf
pusha
jl
gs
jp
inc
lcall
mov
jge
stos
dec
jp
and
clc
xchg
adc
push
out
or
jns
xchg
in
mov
decl
inc
loope
xchg
xlat
sahf
pop
mov
xchg
or
imull
test
pop
inc
cli
fistps
xchg
popf
dec
adc
lret
lods
js
adc
lret
out
add
push
pop
std
mov
add
adc
int
and
aad
mov
sbb
dec
push
outsl
pop
push
jp
je
dec
jo
bound
sbb
cmp
stc
inc
xor
sbb
lret
jne
fwait
sub
adc
fldenv
loopne
add
jp
add
aaa
cmp
shl
dec
mulb
pop
inc
outsb
push
test
xchg
int3
xor
cli
aas
repz
add
mov
sarl
icebp
mov
and
sbb
ret
add
lret
aaa
fs
or
mov
pop
mov
mov
xchg
jmp
sub
or
mov
lcall
inc
in
outsb
insb
or
outsb
jl
sub
and
rorb
iret
mov
fsub
shrb
cmc
cmp
das
add
shlb
cmpsb
rorb
sbb
sbb
popf
cmpsb
xlat
sbb
jo
or
jb
jl
icebp
mov
bound
rcl
jo
xor
aad
pop
dec
lds
in
pop
push
outsb
or
hlt
pop
jl
mov
insb
sub
xchg
fnstcw
stc
add
imul
mov
imul
jl
fwait
aas
jno
adc
add
int3
loop
jmp
outsl
scas
popa
mov
lods
in
push
cmp
and
xor
add
shll
add
dec
jbe
inc
ja
mov
mov
push
pop
lods
xor
push
lahf
xchg
push
or
ljmp
pop
imul
lds
adc
pusha
mov
push
aam
in
or
xchg
sub
sahf
out
xchg
mov
jle
in
test
cmp
sub
inc
sbb
pusha
jl
cmp
jnp
cmp
adc
cmp
adc
add
xchg
sub
lret
pushf
inc
pop
roll
popl
insl
test
xor
popa
xchg
in
pop
adc
negl
addr16
dec
sub
sbb
data16
subl
cmpsl
ret
or
jbe
mov
xchg
cmp
jae
rorl
std
in
push
stos
add
dec
dec
jnp
inc
adc
dec
add
pop
cmc
adc
mov
mov
pop
add
sub
and
and
leave
jecxz
lea
cmpsb
std
push
jne
or
lea
iret
inc
out
inc
insl
push
loope
cmpsl
xchg
jo
arpl
jnp
sti
cmpl
into
sbb
push
sahf
pop
int
dec
test
scas
and
dec
mov
or
test
xchg
push
adc
xor
shrb
bound
inc
push
jae
loope
cmp
dec
in
loopne
repnz
jle
std
mov
std
adc
insl
xchg
test
dec
mov
xchg
lea
shlb
scas
sbb
fidivrs
shrb
xchg
dec
daa
mov
das
mov
mov
fisubl
mov
iret
aas
orl
mov
sbb
stc
dec
pop
ret
jno
mov
cltd
test
int3
and
adc
inc
out
lods
xchg
movsl
hlt
mov
out
jbe
xchg
dec
test
pop
inc
cmp
insl
xchg
add
jecxz
pusha
jbe
lods
mov
repnz
inc
cmp
ret
xchg
insl
jne
clc
xor
int
pop
adc
out
mov
adc
sahf
or
or
out
adc
aas
int3
pop
lret
das
sub
push
cmp
lret
cmp
push
clc
push
dec
push
sbb
sub
popf
test
add
mov
lods
add
rcl
xchg
sbb
add
inc
jae
jae
push
icebp
jmp
push
jge
mov
xchg
insl
xor
dec
fisttpl
scas
mov
sahf
scas
les
adc
mov
test
js
push
aad
call
lret
mov
adc
in
icebp
cld
mov
xrelease
orb
sbb
and
sub
fistpl
inc
popf
push
movsb
dec
ja
iret
subl
lds
imul
and
imul
add
xchg
sbb
mov
insb
adc
pop
push
push
mov
mov
jno
push
jbe
and
or
ds
cmp
pop
xchg
into
push
mov
and
movsb
fldt
mov
movb
jns
add
push
testl
mov
mov
and
jo
test
adc
pop
sbb
sub
or
sbb
jle
sub
jl
adc
xor
sbb
aam
clc
xchg
pop
xor
adc
test
cmc
mov
cmp
jne
imul
data16
add
cmp
xlat
aad
mov
out
mov
neg
jge
xor
addb
xchg
inc
mov
in
or
cwtl
lret
sbb
inc
into
xchg
loopne
cwtl
addb
and
xor
nop
mov
inc
dec
fldcw
test
sbb
outsl
or
cmp
dec
outsl
mov
mov
movsb
pop
test
cs
cltd
pusha
pop
mov
mov
pop
or
mov
call
cmp
sti
and
cmp
xchg
dec
add
subb
idivl
xchg
sub
xor
inc
popa
pop
loopne
jl
push
and
push
xchg
ss
fwait
mov
aam
adc
aam
mov
ljmp
sub
sarl
int3
jg
fcompl
mov
mov
rolb
enter
int3
adc
out
js
pop
xchg
jmp
xchg
fisttps
shl
sbb
in
pop
fnstsw
mov
outsb
lods
sahf
xchg
add
repnz
xor
push
sahf
pusha
mov
scas
mov
fstl
lahf
mov
sbb
mov
or
sub
push
push
test
std
cmp
cltd
mov
test
pop
or
ds
vphsubdq
sbb
subb
and
fidivs
pusha
ficomps
iret
or
ret
data16
cmp
push
jb
stos
daa
dec
repz
and
popa
xchg
mov
out
and
inc
rcl
rolb
adc
in
add
imul
cmp
cmp
not
pop
stc
arpl
mov
rcr
out
sub
movsl
or
imul
mov
sbb
pop
xor
xchg
lods
loopne
inc
pop
daa
xchg
shlb
dec
insl
in
pop
popf
push
stos
lret
mov
aam
test
idiv
push
sbb
out
mov
fidivs
xor
xchg
xor
mov
xchg
rolb
je
jle
lret
xchg
hlt
iret
dec
adc
xchg
repz
in
jp
mov
xor
or
rol
sub
inc
inc
dec
outsb
in
rcrb
imul
movsl
lock
mov
fidivs
filds
ret
xchg
js
sahf
add
jl
jns
inc
jb
mov
and
and
mov
mov
add
andb
jns
dec
and
or
mov
sub
pushf
in
repz
test
shrl
mov
popa
and
adc
pop
rorl
pushl
orl
cmp
mov
js
jns
cmp
xor
add
stos
inc
or
sub
in
mov
jae
data16
ret
cmp
ret
fcmovbe
xchg
mov
ds
outsb
inc
scas
lahf
add
ret
bound
shlb
ret
cmpsb
sub
jp
lods
fldenv
ret
push
sti
jbe
js
jg
enter
test
sti
loopne
mov
aad
popf
aas
push
arpl
jge
fcoms
cwtl
testl
insb
mov
fstl
xchg
in
sub
je
add
cmpsb
rcrl
mov
test
repz
or
dec
pushf
cmp
add
inc
lret
pop
fs
sbb
mov
adc
test
stos
jbe
lret
in
hlt
add
jo
add
mov
dec
jno
ret
nop
fs
aam
jp
sub
ret
setp
int
sub
dec
call
xchg
cmp
das
pop
push
test
mov
loopne
xchg
stos
fstpl
popa
push
lods
mov
fwait
inc
fmull
movsl
adcb
jo
out
and
cli
cmp
pop
stos
dec
ja
sarl
sbb
or
ret
das
add
inc
dec
pusha
sbb
mov
sbb
pop
jbe
xor
ljmp
jl
mov
into
rcl
out
xor
shrb
or
mov
les
ret
inc
pushf
rcr
sbb
inc
fdivs
js
and
jge
rcr
jae,pt
sub
cli
sbb
ja
push
rclb
cmp
ja
pop
les
test
incl
repnz
mov
roll
je
scas
inc
mov
scas
xor
cmpsl
jp
movsb
mov
pop
fcomps
addr16
xchg
popf
fadd
cmp
rcrb
push
push
or
dec
lods
je
cli
aas
xchg
orb
cltd
mov
test
pop
mov
mov
sar
push
sub
addr16
jo
in
xlat
cwtl
cbtw
push
jge
stc
cmp
push
into
into
pop
outsl
mov
out
sub
inc
push
xchg
arpl
push
ret
dec
test
in
inc
shl
enter
cmp
pop
pop
in
pop
sbb
and
lds
vpsrlw
stc
cli
mov
cmp
imul
push
pop
jnp
sbb
outsb
mov
mov
outsb
loope
ljmp
insl
push
cld
adc
lock
adc
push
inc
xchg
cli
decb
shrl
pop
sti
mov
scas
sub
loop
in
mov
or
repnz
push
xchg
mov
lods
pusha
stos
iret
pop
inc
repnz
pop
mov
jnp
jns
js
lds
and
xchg
pop
mov
outsb
cmp
sti
mov
xor
inc
push
sbb
rclb
mov
pop
filds
mov
inc
adc
mov
xor
mov
std
mov
aas
call
js
sub
mov
mov
dec
fiaddl
jecxz
addr16
sub
ds
sub
jmp
or
fucomp
imull
cmpsb
jecxz
add
push
scas
js
rcrl
test
js
xor
test
je
xchg
dec
xor
jae
pminsw
push
mov
mov
loope
xchg
mov
or
in
xchg
ljmp
scas
in
adc
hlt
or
jo
cltd
inc
lods
pop
stos
xchg
jmp
mov
lahf
stos
loopne
push
add
or
push
inc
sar
push
pop
popf
pop
mov
aad
jmp
sub
xor
not
xor
outsb
stos
cmp
lods
shlb
repnz
jp
dec
lcall
mov
mov
xchg
inc
lods
cmp
cmp
mov
cmp
or
push
test
add
jmp
dec
dec
push
mov
adc
mov
les
cmp
outsb
imul
pop
or
mov
jo
mov
repnz
xor
and
sarl
cmp
je
es
fs
xchg
ja
dec
fdiv
mov
dec
dec
adc
test
mov
sub
mov
out
mov
lods
mov
nop
cmpsl
dec
sar
add
xlat
enter
and
or
cmp
mov
fisubrl
inc
ljmp
outsb
push
fbld
mov
pavgw
xchg
mov
add
mov
mov
in
mov
cmp
mov
mov
add
pop
mov
xchg
loop
inc
sar
andl
dec
test
rorb
pop
cmc
sub
push
xchg
inc
cmp
lods
jno
sbb
adc
stos
shrl
xchg
jl
pop
push
notl
adcb
cld
mov
pop
idivl
pop
cmp
jp
or
mov
shrl
lahf
adc
cmp
jecxz
sub
insb
aam
popf
mov
aaa
inc
int
add
push
sub
mov
inc
cmp
or
jb
fcoms
movsb
fistpl
ud0
insb
mov
cmpsl
pop
enter
push
sbbl
mov
shlb
js
lds
mov
scas
or
xchg
test
pushl
sbb
mov
jp
cld
xchg
repnz
sub
jle
push
mov
push
cmp
jl
mov
mov
inc
test
and
and
enter
fwait
mov
out
faddp
mov
xor
adc
push
pop
pop
aam
jecxz
daa
sub
mov
shlb
mov
imul
sti
das
fistl
cmp
jae
aad
mov
movl
xor
xchg
fisubrs
cmp
pop
ret
fsub
inc
xlat
popf
push
jp
call
jnp
mov
cli
arpl
in
xor
mov
cmp
test
andl
cmc
scas
xchg
and
lret
in
mov
adc
cld
iret
jle
test
adc
cmp
cmp
lret
jae
add
and
sbb
mov
pop
adc
mov
jl
jecxz
mov
xchg
lods
mov
fidivrl
mov
xlat
mov
cli
rcpps
insl
cltd
adc
test
and
jge
pop
dec
mov
dec
xor
sub
jno
es
adc
iret
add
jb
dec
mov
mov
cmpsl
jg
sbb
ror
adc
xor
rcll
mov
stc
dec
ret
sar
in
mov
iret
dec
xchg
xor
imul
pop
sbb
dec
mov
mov
jo
dec
xlat
mov
and
adc
sub
outsl
dec
dec
jno
aaa
xor
jae
lds
xchg
call
inc
jb
mov
push
popf
popl
pop
inc
in
jge
add
nop
jl
sub
cmpsb
add
mul
out
jge
jge
or
xchg
pop
xorl
in
sub
sbb
dec
repz
xchg
mov
repnz
test
jge
push
clc
sub
sarb
lods
mov
pop
sub
loop
std
nop
mov
ficomps
rcr
adc
dec
jle
push
ljmp
xchg
outsl
cwtl
call
insb
pop
cmp
sub
xlat
pop
out
fdivl
icebp
xor
mov
add
movsl
push
mov
cmp
daa
fidivrs
inc
mov
stos
sub
fsubs
or
pop
xchg
movsb
popf
cmpsb
arpl
out
int3
loope
jl
cld
add
out
adc
das
clc
mov
shll
mov
mov
and
das
lea
jb
mov
mov
das
inc
pushl
fildl
add
bound
insl
jnp
pop
dec
dec
inc
das
cwtl
fsubl
sbbl
enter
sbb
test
adcl
cmp
or
out
rcr
shrb
shr
jne,pn
xor
js
cmc
add
test
sti
adc
neg
testl
inc
jp
adc
movsl
popa
cmp
enter
mov
int3
push
sub
sub
cmp
in
fcmovne
pop
push
out
sbb
pop
or
in
add
loopne
push
or
mov
push
aas
inc
lods
into
push
dec
dec
mov
mov
push
mov
add
or
add
adc
push
sub
clc
out
and
cltd
push
lret
data16
mov
pop
cmp
sub
out
or
push
outsl
popa
mov
mov
icebp
jbe
sbb
xlat
popf
into
loope
xchg
lret
enter
out
mov
mov
js
cli
bound
or
cli
data16
pop
gs
ds
sahf
mov
shrd
outsb
daa
shll
enter
dec
daa
adc
hlt
pusha
xor
shll
fisubs
dec
push
inc
sahf
js
scas
push
popf
mov
rcrb
mov
pop
xor
loope
lahf
mov
cld
js
dec
xchg
out
mov
iret
or
add
out
outsl
sub
xor
jo
loope
in
outsl
bound
mov
pop
movsl
outsl
ror
push
sub
scas
dec
mov
sbb
movsb
ljmp
stos
mov
sub
ds
xchg
adc
pusha
mov
push
sbb
clc
inc
js
stos
or
ficoml
xchg
jae
mov
ds
data16
pusha
jne
fisubrl
mov
cwtl
test
jbe
mov
push
dec
xor
cmc
jbe
pop
push
icebp
sbb
ljmp
mov
ljmp
dec
rorb
inc
dec
xchg
xchg
xchg
std
mov
shr
int
xchg
aaa
fwait
cmp
push
push
scas
xchg
push
cmp
shll
pop
sahf
cmp
dec
je
daa
jecxz
cltd
test
in
jecxz
cmpsl
mov
in
ss
or
push
stos
or
adc
mov
push
int3
mov
insb
scas
fidivs
sar
test
xchg
pop
push
pushf
movsb
rclb
mov
rorl
scas
ss
or
icebp
mov
bound
xlat
xchg
ds
loopne
add
nop
mov
js
push
int
cmp
mov
add
ret
jae
mov
clc
push
subl
sbb
sbbb
xchg
cmp
or
sbb
in
add
mov
cmpsb
dec
ljmp
dec
insl
movsl
ds
js
inc
pop
xlat
mov
fidivs
out
addr16
stos
xchg
mov
sbb
cmpsb
leave
loop
xchg
add
aaa
dec
scas
adc
shll
add
dec
int
pop
in
push
adc
stos
push
sub
mov
mov
ds
sbb
jno
int3
mov
aas
dec
sub
jg
hlt
mov
aam
pop
adc
adc
das
mov
int
call
or
mov
jge
cmpsl
push
mov
sarl
mov
sub
sub
push
inc
mov
repnz
fsts
sbb
and
test
push
mov
ja
ret
adc
imul
jg
mov
or
cmc
push
push
xor
fsubr
jg
imul
mov
jle
jns
fdivrs
in
out
adc
cmpsl
mov
add
mov
fld
pushf
xor
pop
push
je
or
test
mov
aad
cmp
sbb
pop
and
shlb
sbb
jbe
rcrl
es
pop
aas
dec
jae
in
cmp
clc
rcrl
lock
mov
push
test
shlb
rcrb
incb
or
push
dec
in
das
add
mov
das
pop
fdivs
shlb
fcoml
aas
sub
or
cwtl
sbb
xor
jns
outsl
repz
cs
cmpsb
js
cmc
sub
or
xchg
inc
jne
dec
stc
aad
sbb
mov
add
lds
movsl
in
test
and
into
mov
popa
aas
sbb
jo
jp
into
cmpl
scas
scas
pop
ljmp
cltd
test
dec
rol
leave
and
loope
ds
rep
std
mov
adc
pop
mov
outsl
mov
loope
arpl
adc
lcall
jmp
js
ja
inc
jb
xor
sub
ret
lds
push
jae
in
mov
xchg
cmc
jle
jbe
mov
or
dec
add
cs
stc
imulb
sti
jle
jnp
testb
push
popf
subb
sub
inc
or
jae
hlt
and
mov
out
hlt
pushf
pop
or
outsb
mov
out
rorb
scas
xchg
xchg
popf
jmp
stos
scas
pusha
fiadds
cmp
mov
lods
pop
stos
push
add
inc
push
fucomip
push
enter
dec
arpl
sub
cld
or
xor
or
or
repnz
insl
enter
lcall
cmpsb
data16
mov
in
fldt
test
out
xor
add
xor
call
pop
mov
cmpsb
clc
gs
fcoms
testb
repnz
aam
sar
jmp
orb
aad
fdivl
pop
mov
js
imul
xchg
lcall
mov
in
push
mov
sub
dec
fstl
sub
mul
int
cmp
adc
dec
mov
or
in
xchg
ljmp
lods
mov
notb
jno
dec
leave
movsb
jno
jp
dec
adc
sub
mov
out
adc
xchg
pop
xor
sti
or
addb
and
icebp
movsl
cmp
pop
das
test
jg
ljmp
cmc
adc
push
mov
jb
nop
js
push
dec
mov
sub
add
adc
dec
ljmp
daa
nop
popa
int3
mov
and
mov
xchg
and
daa
mov
mov
iret
test
lock
cmpl
mov
orps
lods
sub
pop
jns
lds
leave
sahf
dec
test
and
fcomi
xor
sub
mov
or
pushf
data16
inc
leave
xchg
lret
xor
sub
sahf
adc
sub
imul
mov
gs
std
scas
and
stc
mov
sahf
lret
out
stos
jecxz
mov
lret
mov
jno
je
add
sti
mov
xor
dec
cmp
stc
loopne
or
shrl
rolb
enter
ret
push
and
gs
mov
sti
pop
adcb
and
test
scas
popf
test
xchg
xchg
push
shlb
rcll
mov
test
xor
adc
pop
loope
push
mov
jl
std
xchg
mov
mov
add
mov
clc
cmp
pop
cmp
test
popa
test
mov
push
fists
mov
pop
inc
test
aas
pop
rorb
sbb
xorb
mov
enter
mov
shlb
jne
xchg
adc
inc
inc
cltd
sbb
mov
cmp
in
mov
inc
pop
mov
pop
mov
clc
aas
cld
test
sub
rolb
popa
icebp
lock
cmp
xor
and
sub
adc
ss
lcall
rol
jno
inc
mov
cwtl
mov
decl
sti
or
lock
out
cltd
cltd
xchg
xchg
mov
hlt
or
xchg
mov
jecxz
pushw
sbb
out
cmp
addr16
or
ret
shrl
imul
cmp
cmp
jbe
cmpsb
jne
mov
dec
outsb
in
pusha
mov
rcrb
test
push
mov
or
push
dec
hlt
filds
mov
cmc
js
lds
mov
and
push
jmp
jnp
mov
push
mov
mov
out
xor
out
lcall
or
mov
lods
push
pop
push
shr
aam
adc
push
rcr
aam
add
push
mov
lds
sub
inc
and
add
scas
insl
push
out
cmp
inc
push
bound
xchg
cmp
xchg
in
sahf
addr16
sbb
pcmpgtd
mov
pop
or
int3
out
dec
test
fiadds
sahf
addr16
dec
inc
push
es
pop
incl
mov
or
scas
mov
cmp
cmpsl
ljmp
mov
adc
ds
adc
test
jae
or
and
fdivrs
or
pop
add
push
cld
mov
out
popa
xchg
pop
adc
dec
push
dec
or
sbb
mov
mov
call
pop
int
dec
jo
lret
das
pop
pop
jmp
fs
mov
insb
ret
xchg
jp
icebp
arpl
frstor
cwtl
pop
lahf
mov
aas
lods
js
sar
xor
xchg
mov
push
sub
jne
mov
daa
fsub
push
lds
dec
sub
and
orl
jle
leave
or
or
jnp
mov
out
clc
insb
lahf
imul
adc
mov
mov
loopne
sub
mov
inc
fnsave
setno
stos
jbe
xor
add
cmc
adc
cmpsb
movsl
out
rolb
loop
mov
push
mov
mov
pop
sti
movsl
test
add
cli
pop
int
sub
dec
testl
daa
cmp
sti
stc
scas
or
sub
mov
cmp
push
jle
ss
sub
int3
jl
js
test
out
xor
sbb
adc
fisttpll
scas
lods
jge
or
jne
fs
cwtl
fs
lea
or
fdivl
dec
push
testb
bound
inc
es
cmpl
inc
xchg
repnz
pusha
jp
add
ficompl
xor
and
testl
aaa
xchg
add
jo
lahf
and
mov
cli
popa
dec
in
inc
pushf
cld
popf
test
dec
mov
add
cld
pop
icebp
cmp
push
push
enter
shll
and
int
push
adc
dec
rol
ror
mov
lcall
rcll
or
cmp
cmpsl
aad
stos
aas
out
sub
arpl
add
adc
jne
mov
cmpsb
jmp
inc
aaa
jg
nop
rcl
inc
mov
and
pop
out
mov
rcl
pusha
call
and
cmpsl
int
test
in
cmp
sbb
lcall
lcall
outsb
mov
lcall
xchg
in
xorb
shll
mov
cmp
adc
jnp
push
jp
cli
arpl
bound
test
dec
push
cmp
mov
mov
cld
mov
test
dec
aas
mov
icebp
std
repnz
dec
aam
in
cmp
dec
sbb
pop
push
mov
repz
mulb
inc
sarl
enter
imul
xor
inc
push
xchg
out
aaa
mov
jecxz,pn
call
shl
pop
fwait
leave
push
or
mov
pushf
ds
stos
arpl
jl
ret
aam
lahf
sahf
test
sbb
cmpsb
movaps
fwait
xor
sbb
adc
xchg
icebp
dec
jmp
xchg
fwait
mov
and
dec
test
jne
adc
sub
repz
setbe
mov
sbb
mov
fisubl
jg
or
cmc
idiv
out
lret
stos
add
inc
cmpl
adc
stc
inc
jecxz
loopne
xchg
or
cbtw
popa
and
cmp
inc
out
push
ret
dec
fnstenv
inc
mov
je
ja
cmp
ja
frstor
xchg
dec
cltd
jge
xchg
and
jo
hlt
mov
pop
dec
aas
icebp
and
outsb
aam
xchg
inc
loope
dec
mov
js
fucom
shlb
xchg
jg
dec
rolb
ja
int
in
sub
loop
jns
sti
push
out
test
stc
add
jp
dec
sub
push
push
fwait
xlat
clc
or
in
pop
stc
addl
adc
pusha
xchg
mov
adc
rcll
pop
js
movsb
iret
bound
xchg
and
fucomip
pop
lods
mov
das
ja
std
lods
pushf
mov
push
data16
jmp
hlt
mov
sub
mov
xor
bound
xlat
ljmp
icebp
mov
icebp
or
lods
add
dec
sub
sub
push
sbb
xchg
mov
rorl
aam
in
dec
insl
out
addl
shrl
cwtl
daa
cmpsb
xor
pop
fucomip
adc
scas
lock
xor
xchg
mov
sbb
dec
sub
in
dec
arpl
mov
inc
icebp
inc
add
adc
sarb
movsb
jmp
push
test
adc
nop
popa
jg
xchg
sbb
pop
sub
mov
mov
dec
std
ret
xchg
cli
fildl
addr16
ret
pop
lret
loop
sbb
loopne
pop
add
mov
sti
and
jb
push
mov
push
ret
sub
or
mov
bound
mov
repz
push
aas
xor
push
jnp
add
and
out
insb
sbb
movsl
insb
and
mov
in
jecxz
lret
sbb
lcall
popf
sbb
and
cmc
mov
fs
inc
xchg
aam
std
add
fists
pushf
xor
and
pop
adc
hlt
adc
mov
xchg
xchg
jg
xchg
imul
push
push
inc
popa
push
mov
lods
mov
or
filds
pop
popa
test
and
shll
or
mov
fmull
out
dec
test
in
mov
dec
repnz
inc
jno
inc
cmpsb
xor
cld
iret
jle
lds
arpl
xchg
inc
xchg
and
sub
cmc
lahf
cwtl
sahf
mov
sub
mov
push
les
sbb
mov
push
inc
les
in
mov
fstpl
cmp
xchg
dec
out
jl
add
test
stos
adc
out
mov
sarl
dec
dec
ret
push
and
dec
add
sub
rcrl
inc
daa
add
fstpt
enter
or
mov
inc
xchg
dec
sub
add
fsubs
les
fwait
clc
dec
sbb
fildl
xlat
dec
lea
fbld
push
loope
sbb
stc
lar
iret
outsb
loopne
adc
push
insb
rorb
scas
andb
fbld
sbb
add
xor
fnsave
mov
ss
pop
dec
and
enter
lods
mov
push
out
test
push
cltd
insl
inc
pusha
scas
push
rorl
sbb
aaa
or
lods
or
xor
nop
je
inc
je
adc
mov
and
xchg
inc
sbb
jno
idivl
movsb
sub
xchg
xor
pop
xchg
push
mov
jo
or
jmp
daa
aas
jae
cmp
pop
test
cmp
inc
push
mov
pop
shlb
je
and
cmp
aaa
add
lds
mov
je
push
mov
mov
and
push
jo
jp
shll
js
dec
insl
filds
sub
mov
pop
lock
fdivr
cltd
bound
cltd
sbb
ja
xchg
loopne
sahf
fwait
push
cmp
pop
ja
jbe
mov
fiadds
inc
jae
pop
pop
adc
xor
jo
and
push
mov
adc
bound
jne
fs
ret
and
mov
repnz
out
mov
stos
icebp
imul
pop
rclb
cmp
test
xchg
test
js
negb
cmp
into
xor
mov
int
push
dec
cmp
inc
loopne
lret
mov
int3
xchg
stos
testl
lds
adc
pushf
aas
mov
loope
sbb
adc
xchg
or
pop
aaa
ret
jne
and
inc
mov
out
mov
push
push
scas
sub
xor
jns
inc
jl
pop
jl
gs
pop
hlt
cld
cwtl
jge
call
sub
xor
clc
fbld
dec
push
xchg
repz
push
stc
outsb
popf
sub
xor
pop
adcb
add
mov
add
lods
mov
xchg
xorl
in
inc
dec
xor
cmpsb
xchg
push
push
dec
mov
scas
incb
jae
adc
call
dec
add
or
mov
inc
iret
jecxz
stos
hlt
push
adc
sbb
mov
inc
xor
push
cmp
testl
xor
mov
push
int3
jbe
cwtl
pop
ftst
push
and
lret
jo
popf
pusha
fidivl
mov
fbld
xchg
and
cmp
dec
xorl
movsl
out
cli
andb
xchg
or
jle
jmp
int
push
push
icebp
jmp
adc
out
aaa
mov
mov
jmp
adc
fldenv
push
sub
roll
imul
cmp
js
stos
subl
enter
out
daa
push
test
or
imul
mov
cmp
push
pop
jp
fnsave
je
push
push
fninit
or
or
push
xchg
leave
fidivs
ss
aam
clc
repnz
fsubr
pop
test
aad
pusha
jmp
cwtl
sti
inc
cmpsl
mov
lods
gs
sbb
mov
mov
fcoms
sbb
adc
xchg
cwtl
fisubrl
xor
repz
adc
mov
xchg
cmp
ja
iret
dec
or
aad
leave
jecxz
ret
sbb
movsb
mov
pop
dec
jmp
pop
pop
mov
sub
shlb
mov
dec
xchg
icebp
ffree
out
out
dec
test
fstps
aad
mov
push
loop
sbbb
loopne
mov
pop
int3
cmp
jb
mov
mov
fiaddl
aas
sub
mov
nop
xchg
stc
mov
push
add
iret
sbb
decl
les
lret
mov
xchg
repz
mov
cmp
push
sahf
push
js
movsl
sti
or
adc
cmp
jnp
mov
ficomps
pop
into
fisttpll
rolb
or
push
mov
aam
insl
in
shrb
mov
insb
and
test
cmp
fsubs
xorb
push
adc
sub
pop
sub
jge
add
add
imul
lret
or
inc
push
or
out
push
mov
call
mov
fistpll
lahf
mov
clc
testb
dec
cmpl
cmp
scas
pmaxsw
xor
fsub
push
std
mov
sbbl
jge
mov
fucomip
ds
mov
or
xchg
sti
dec
jmp
adc
xor
push
mov
sahf
aaa
std
je
outsl
stos
xor
aas
clc
dec
and
sbb
push
dec
or
loop
cwtl
and
insb
mov
filds
mov
std
mov
lds
orl
sbb
cmp
mov
icebp
scas
mov
jmp
test
imul
shrb
je
ret
int
or
pusha
in
ja
outsl
out
sbb
jno
mov
adc
gs
arpl
cltd
push
jmp
cmpsl
jg
push
or
arpl
xchg
and
pop
stos
or
pop
lret
int3
pop
jb
mov
cs
push
xor
ret
inc
or
test
popf
pop
ja
leave
adc
ret
cwtl
pop
and
fstps
enter
adc
mov
mov
jne
xchg
shlb
cmp
pop
ja
push
or
shlb
fdivl
enter
js
decl
test
push
push
subl
orb
sub
fstpt
std
dec
adc
inc
pop
cmp
fists
outsl
aas
inc
icebp
loopne
enter
std
pop
xlat
test
and
adc
popf
mov
lahf
jg
pop
repnz
jp
in
pop
insb
stos
repz
mov
aam
scas
fdivs
popa
xor
out
mov
jg
lret
lahf
sbb
mov
jmp
xor
cmpsl
lds
jnp
sbb
pop
imul
rcll
mov
js
pop
mov
rcrl
xchg
dec
ror
xchg
or
push
or
test
es
jp
dec
mov
mov
pop
cmp
cmc
jmp
sub
ret
leave
inc
cmp
cs
mov
sbb
adc
leave
adc
and
sarl
mov
dec
jmp
insb
dec
push
loope
jne
test
cmpsb
dec
test
cmp
je
pop
jbe
pop
add
mov
stos
repz
cmp
mov
out
test
loope
sbbl
mov
sub
out
ret
jge
fildl
lcall
pop
cmp
cwtl
jl
lahf
xor
lods
push
movsl
repz
xor
aad
xor
dec
xor
shrb
jnp
std
mov
sbb
imul
cmpsb
lods
mov
movsl
adc
fistps
lods
cmp
movsl
in
sub
xor
sbb
out
fisubrl
xchg
dec
test
adc
shrb
cwtl
inc
sbbl
mov
cmp
insl
add
jle
sbb
mov
cmpsb
mov
mov
addr16
cld
pop
loop
and
lcall
js
xor
cli
enter
movsb
fisubrs
bts
aam
mov
jno
jae
jg
andb
adc
in
jno
insb
mov
xchg
jge
pop
js
dec
mov
mov
out
fcoml
in
roll
les
mov
roll
mov
xor
scas
icebp
mov
inc
or
scas
mov
test
scas
repz
cmp
and
xchg
mov
arpl
loopne
sub
pushf
cmpsl
or
sahf
adc
xchg
insb
adc
cmc
roll
cmc
pop
cmpsb
mov
ficomps
test
jns
aaa
jns
popf
lahf
mov
jno
adc
mov
rcrl
pop
or
lret
xor
es
push
test
xchg
mov
call
in
mov
enter
inc
ret
add
adc
inc
xor
cmpsl
lahf
idivl
push
cmc
mov
leave
insb
pop
jg
mov
shrl
adc
into
outsb
test
lds
scas
jp
or
outsl
jg
mov
push
push
insl
mov
mov
out
int3
out
adc
cmc
mov
mov
xchg
add
or
mov
ret
xchg
fcoml
int3
mov
sbb
fidivrl
push
incb
rcrb
and
stc
cs
in
rol
cmp
sub
das
popf
push
lock
cmp
cmpl
dec
fmull
popf
enter
cmp
nop
in
push
xchg
out
movsl
cmp
mov
mov
mov
lahf
jo
mov
mov
das
mov
sub
gs
addr16
loop
dec
test
insb
jl
mov
aaa
adc
out
mov
shll
push
sbb
xor
mov
mov
cmp
lds
and
rcr
fcmovu
inc
leave
inc
mov
push
or
ljmpw
repnz
cli
pop
popa
mov
popf
in
out
xchg
push
sti
pop
in
aad
cmpb
js
mov
pop
lock
mov
mov
sbb
pop
and
pop
cld
mov
imul
scas
xchg
sub
sahf
push
clc
iret
into
sahf
xor
push
pop
sub
out
jecxz
add
sbb
jmp
mov
adc
fbld
push
mov
add
imul
shl
jbe
iret
iret
jmp
nop
pop
jo
xor
xor
xchg
mov
lods
mov
lret
inc
push
mov
mov
call
ja
inc
or
push
jno
jnp
fstps
jno
mov
loop
insb
movsb
push
leave
mov
sub
jne
aas
adc
sbb
inc
dec
jle
arpl
cli
int3
push
js
out
rorl
jle
sbb
dec
dec
in
push
or
inc
in
lods
cmpsb
mov
pop
dec
mull
pop
data16
sahf
add
push
ret
fisubs
add
ret
out
cwtl
or
pop
fisttpl
clc
je
adc
push
ds
add
fbld
stos
push
fistl
loopne
sbb
pop
pop
xchg
dec
xchg
aaa
std
js
adc
mov
jbe
in
int
add
cmp
and
iret
cmp
add
xchg
jae
fbstp
cmpsl
sbb
shl
sahf
and
mov
mov
stos
add
dec
pop
push
psllq
lcall
cmp
pop
sub
add
lock
push
add
pop
addr16
aam
pop
dec
gs
inc
or
sub
shll
and
jns
cmpsl
aad
or
sub
cwtl
pop
out
les
mov
lds
cmpl
in
adc
out
sub
xor
adc
jb
addr16
pop
nop
and
aam
fsub
outsb
mov
jne
sub
pop
push
aaa
pop
xchg
or
sub
xchg
insl
dec
lods
cmc
js
stos
fists
add
rcll
scas
outsb
jg
or
outsl
lret
lret
rolb
push
call
mov
pop
mov
xlat
lods
lcall
imul
or
pop
jne
mov
mov
orl
mov
fisttpll
mov
xor
and
les
gs
dec
push
int3
inc
icebp
sub
push
dec
aaa
je
cmp
outsb
mov
jnp
jne
popa
inc
cmp
inc
repnz
popf
cli
sahf
shl
fdivl
pop
js
sarl
xchg
fdivs
adc
or
inc
fisubs
aam
jne
sub
inc
pushf
pushf
fsubs
mov
sbb
adc
pop
cmp
add
sbb
popa
mov
xchg
psubd
hlt
mov
stc
inc
and
mov
inc
jbe
xlat
mov
sbb
fiadds
imul
mov
xor
in
xchg
push
fs
and
repz
test
lds
ror
sub
test
repnz
lds
scas
ret
repnz
daa
lcall
mov
dec
push
cmp
mov
add
in
or
adc
mov
daa
jmp
push
je
mov
loop
jp
divl
push
xchg
dec
mov
pop
or
mov
mov
shlb
push
sub
cltd
out
aas
xor
push
mov
mulb
lea
loope
mov
dec
jae
das
movsl
xor
mov
push
in
and
je
lods
insb
mov
es
fadds
adc
ss
jl
mov
mov
inc
push
mov
sub
lock
xchg
pop
xor
ret
xchg
lret
add
les
inc
cli
mov
mov
mov
lcall
std
sub
js
ja
jl
hlt
js
jecxz
cli
ja
pusha
jae
jmp
add
data16
sbb
out
cli
dec
ret
add
dec
push
repz
shrb
dec
sub
sbb
leave
cmpl
mov
cmpsl
add
or
fimuls
jb
inc
sbb
mov
xor
mov
xchg
sbb
add
lahf
add
outsl
addl
jbe
inc
pushf
cmp
lock
pop
ffree
jp
xchg
mov
jl
jnp
icebp
mov
mov
and
mov
push
les
push
pop
sar
pop
inc
mov
xor
lret
lret
fistpll
rcrl
fldcw
js
movlps
imul
cmp
mov
cmp
push
pop
inc
jno
mov
push
int
lcall
lret
xor
dec
dec
adc
loope
mov
repz
xor
loope
mov
xchg
loop
jb
je
pop
jmp
enter
mov
fcoms
jl
enter
dec
fwait
add
dec
pusha
movl
leave
cmp
jg
push
push
xchg
dec
xor
mov
adc
in
adc
dec
test
fwait
add
and
mulb
pop
pop
bound
inc
cs
or
xchg
fsts
dec
mov
push
and
jno
cmp
fcompl
ja
mov
mov
mov
gs
adc
lret
ds
lret
js
push
or
mov
mov
push
mov
imul
popa
movsb
ljmp
ja
ljmp
pop
fldl
mov
shrl
lahf
gs
shlb
pop
scas
ja
mov
fstpl
dec
lcall
shrl
mov
out
pop
pop
mov
pop
cmp
lcall
scas
into
sub
fsubr
outsl
push
jecxz
insb
loope
mov
xor
cli
jbe
inc
push
inc
mov
movsl
lcall
push
sahf
sbb
or
xchg
out
repz
dec
mov
lret
dec
int3
adc
mov
ds
inc
or
jp
pop
jne
enter
cmpsb
mov
repnz
jns
xor
in
mov
sbb
push
push
clc
cmp
bound
mov
xchg
popf
pop
inc
cld
xor
xor
mov
mov
stc
insl
divl
das
push
ret
mov
cmc
mov
xchg
sar
or
cmc
addl
xchg
out
adc
cltd
loop
stos
pusha
add
mov
shr
cmp
fwait
push
loope
imul
mov
push
movsl
add
mov
stos
out
xchg
cmp
ret
movsl
fcmovne
ljmp
in
ljmp
mov
push
hlt
pop
enter
insb
nop
sub
clc
mov
dec
inc
cli
inc
and
insl
cmp
jb
enter
repnz
mov
sub
test
push
and
aas
or
sti
aaa
mov
rcrb
mov
test
pop
test
jl
pop
mov
cmp
iret
cli
scas
stc
xor
iret
lods
mov
mov
mov
shl
ds
arpl
push
into
cmp
icebp
loop
jecxz
cli
push
rcrl
mov
lea
xor
adc
popl
push
add
dec
xchg
sub
xor
sub
js
sti
xchg
jno
ficoms
add
imul
hlt
or
adc
mov
cli
mov
sbb
sbb
rcrl
xor
pop
mov
cmp
movsb
sar
inc
dec
adc
mov
pop
aas
lret
add
jle
hlt
mov
adc
rcr
xchg
jl
scas
mov
je
stos
fwait
dec
jp
push
cmp
jnp
dec
and
dec
pop
je
sub
jge
mov
jecxz
push
cmpsb
repnz
push
pop
or
sub
jnp
rcll
rclb
mov
adcb
call
mov
scas
xor
icebp
fnstcw
mov
popa
hlt
mov
lock
les
das
rcll
test
xor
sbb
dec
push
xchg
sbb
scas
loope
xor
adc
fadds
shl
dec
mov
or
lret
stos
mov
ljmp
sbb
outsl
in
adc
mov
fsubrs
xchg
mov
loop
jp
xor
decb
shl
out
and
lods
xlat
icebp
mov
filds
lahf
pop
cmp
cli
mov
sti
scas
ret
ja
mov
imul
lahf
scas
pop
mov
push
pop
sbb
js
inc
cwtl
jmp
sbb
adc
cs
sbb
iret
jle
pushf
mov
lock
lods
push
mov
jp
out
aad
mov
or
inc
mov
loop
cmp
lcall
insb
sysexit
ret
xor
out
fwait
cld
call
sahf
lods
mov
xor
adc
rolb
sbb
push
jae
cmpsl
lcall
pop
dec
xor
mov
push
push
adc
daa
call
and
mov
aad
mov
dec
xchg
imul
jp
dec
cmpsb
mov
ret
jo
fnstenv
jno
ret
ret
aam
jp
pop
pop
cli
xor
pushl
mov
std
cmp
and
dec
daa
pushf
out
xor
push
pop
xchg
xor
push
scas
in
xor
jge
sbb
sahf
loope
mov
fucomp
jne
and
dec
mov
sti
ret
pop
loop
stos
add
jge
xchg
into
push
fs
iret
in
or
lds
pop
cwtl
or
iret
mov
inc
rorl
dec
mov
subb
js
fbstp
jg
mov
dec
mov
or
adc
dec
cmpsb
lods
jge
jle
ljmp
jp
sbb
push
shlb
cmpsl
into
adc
jp
cwtl
lret
dec
push
aaa
fbld
add
lret
fisttps
jg
fisttps
aad
std
lods
cmpsl
fsubrs
and
mov
and
stos
in
aam
mov
mov
mov
lret
sbb
push
lret
insb
inc
dec
or
and
sub
adc
mov
jne
loopne
test
stos
inc
pop
in
mov
cs
push
xor
orb
orb
adc
out
mov
sti
imul
inc
sbb
adcl
jo
insb
ficompl
xchg
insl
or
or
fldl
mov
inc
cmp
shlb
cmp
lock
shrl
jge
push
fmull
cmpl
and
aam
sbb
xor
mov
pop
dec
xor
cli
stos
add
push
in
sti
enter
loope
pop
dec
fsubrl
shrb
imul
rcrb
pop
adc
scas
add
subb
inc
add
sub
mov
sahf
add
inc
and
push
xor
sub
rcr
fidivl
aad
imul
jns
xchg
xchg
lahf
decb
jae
cmc
clc
or
out
gs
in
sbb
xlat
cmp
xchg
shrl
mov
sahf
loope
jmp
jmp
jecxz
data16
adc
push
sub
fiaddl
mov
out
push
xchg
mov
mov
sbb
sbb
scas
mov
xchg
xchg
jb
push
mov
xor
stc
lea
jmp
and
jnp
mov
loopne
adc
out
pop
inc
stos
jmp
mov
pop
xchg
xor
ljmp
test
fisubl
int
aad
cmpsl
out
test
jmp
cld
out
or
lds
mov
lea
push
cmp
mov
sub
push
xchg
sbb
inc
popf
stc
pop
pop
xlat
outsl
and
out
call
add
push
and
shl
sub
adc
cmpl
sti
gs
mov
sub
cmp
fldt
or
ficoml
jmp
js
push
imul
mov
jmp
scas
jbe
es
or
pop
ljmp
insb
in
inc
lods
icebp
repz
aad
daa
popf
and
mov
outsl
clc
aad
mov
shrb
mov
jae
scas
in
rcrl
lret
cmpsl
inc
sbb
or
stc
inc
dec
int3
mov
lret
inc
push
test
push
gs
pusha
pop
xchg
or
xchg
mov
and
or
inc
daa
xor
fdivrs
les
divl
jl
sub
inc
pushf
daa
mov
dec
or
dec
lcall
fisubrs
shlb
inc
pop
add
clc
cli
test
xchg
and
mov
or
dec
faddl
inc
mov
into
mov
repnz
pop
inc
in
dec
push
push
lret
cld
dec
fwait
mov
imul
movsb
mov
insl
scas
pop
push
out
lods
pop
or
cltd
mov
notb
cs
movl
push
mov
decb
or
push
jle
xor
pop
jns
xor
out
sbb
fnstcw
push
cld
ficompl
insb
add
xchg
cmpsb
push
ret
aaa
hlt
add
or
push
cmp
insb
pop
in
push
jnp
xor
add
mov
adc
mov
mov
pop
shrl
jmp
shl
mov
or
or
jno
rorl
lea
adc
insl
jns
mov
pushf
mov
call
xor
data16
cmp
sbb
xor
add
add
or
ss
dec
stos
bound
imul
insb
xor
adc
inc
test
cs
lods
mov
xor
mov
in
push
repnz
pop
loope
xor
ljmp
dec
mov
test
adc
je
popf
inc
fistl
addr16
adc
mov
mov
stos
popa
outsl
sub
or
jge
xlat
pop
popf
enter
movsb
xchg
ds
lock
fmulp
stc
fisubl
mov
lea
dec
adc
movsl
jno
scas
add
dec
ret
ja
pop
fnstsw
fldt
sahf
dec
fneni(8087
push
fdivl
jnp
push
mov
ds
mov
push
into
js
add
or
push
jns
jge
testb
nop
mov
movsl
sub
cli
pusha
jge
sbb
test
xor
imul
je
pop
mov
dec
aad
dec
out
pop
push
movsl
mov
js
stos
xchg
cltd
lahf
jecxz
mov
mov
mov
int
mov
std
sbbl
test
cmp
inc
jl
push
lahf
inc
outsb
push
movsl
and
adc
jne
cltd
jne
adc
addr16
or
sub
lea
and
imul
push
and
push
lods
pop
call
pop
imul
mov
inc
inc
nop
notb
mov
add
and
popl
mov
mov
in
mov
add
mov
outsl
std
inc
lods
enter
xlat
dec
js
mov
mov
fadd
neg
into
loope
movsl
push
cmpsl
cmp
adcb
in
mov
inc
dec
and
pop
lahf
dec
mov
subl
xor
inc
lods
pop
ret
push
mov
cmp
outsl
sbb
sbb
stos
cmp
imul
fstpl
sbb
adc
pusha
sub
fldenv
loopne
xchg
push
sbb
push
jle
mov
fisttps
pop
push
lahf
and
jns
mov
popf
or
jne
daa
mov
mov
sbb
inc
push
adc
dec
dec
test
cmp
push
and
xor
mov
mov
inc
sbb
jo
push
cmpsb
jb
and
xor
sbb
icebp
arpl
std
dec
inc
mov
lea
mov
inc
jo
xchg
out
fisttpl
or
and
adc
dec
sub
movsb
xchg
sbb
nop
movsb
jo
sbb
test
lods
into
fisttps
js
aas
mov
ret
movaps
jg
xlat
lcall
aam
js
mov
movsl
add
idivb
xchg
or
jg
cmp
sub
call
int3
fwait
sub
dec
arpl
push
fdivl
data16
mov
mov
insb
clc
add
mov
rolb
negl
push
add
in
pop
add
loop
push
pop
mov
lret
push
lahf
jle
andb
fs
or
cmpsb
xchg
rcll
jmp
jl
pusha
dec
or
es
pop
xorl
pushf
inc
daa
push
outsl
dec
test
fisubrs
lea
andb
repz
outsl
push
mov
pop
xchg
outsl
xchg
push
dec
sti
jge
enter
fwait
call
push
js
push
pusha
test
mov
mov
dec
or
mov
xchg
jb
or
mov
std
adc
cmp
ret
insl
mov
dec
aam
dec
or
mov
mov
lods
push
cmp
or
cwtl
mov
mov
idivb
mov
adcb
popf
sub
mov
or
adc
into
pop
ficomps
inc
fidivs
inc
push
call
cwtl
cmc
das
mov
push
iret
xchg
adc
call
das
sbbb
outsb
lds
ret
lret
mov
cmp
push
fs
xor
ss
mov
fwait
cltd
insl
lds
imul
sub
xchg
xchg
or
sbb
mov
pushf
and
xchg
push
sti
inc
inc
or
clc
sahf
xchg
and
lret
call
mov
push
xchg
lds
dec
mov
shll
xchg
push
stos
pop
mov
mov
lds
notl
inc
jae
aad
sub
punpckhbw
cmc
dec
sub
or
int
hlt
adc
sub
xor
xchg
push
cs
lret
push
ret
outsl
mov
pop
and
adc
and
loopne
flds
mov
sbbl
dec
cmpsl
mov
pop
arpl
cwtl
popa
mov
mov
xchg
pop
jge
ret
test
jnp
mov
stos
sub
push
cmp
cmp
ficoms
xchg
enter
add
jge
cmpsb
nop
inc
arpl
es
in
scas
rolb
in
xorl
xor
in
mov
int3
loopne
mov
aaa
shll
mov
lods
aaa
aaa
scas
pop
xchg
xchg
loop
or
xor
add
or
outsl
mov
sbb
xchg
arpl
stc
xor
popf
and
push
mov
loope
scas
sbb
jmp
lahf
cld
outsl
pop
out
xchg
xchg
arpl
sub
mov
ja
mov
lret
js
jmp
push
mov
jecxz
lcall
xlat
lea
push
je
xlat
test
dec
add
daa
orb
test
jb
shlb
mov
out
jae
lret
je
mov
mov
loop
decb
movsl
dec
push
mov
fs
mov
add
push
jns
popa
cltd
pop
aam
xlat
pop
sbb
dec
push
inc
gs
pop
es
in
xchg
xor
cmp
lods
mov
mov
or
mov
mov
das
mov
insb
jmp
cld
pop
test
dec
aad
lods
lret
cld
pop
adc
lret
mov
scas
xor
rcll
xchg
xlat
dec
jl
jl
popf
add
aad
int3
arpl
in
jp
push
xchg
cmpl
lahf
cmp
in
out
ljmp
jno
dec
jb
pop
dec
popa
mov
xchg
jmp
push
frstor
xchg
inc
arpl
ja
jmp
push
gs
jbe
jecxz
adc
pop
jp
addr16
cmp
jns
jo
jecxz
nop
dec
addl
stc
jnp
mov
mov
clc
inc
xor
adc
popa
das
lds
cmpsb
sbb
fs
std
es
xchg
ljmp
cmp
out
clc
dec
iret
push
xchg
dec
xchg
into
std
int3
movsb
or
jl
push
loope
mov
dec
sub
xor
or
out
inc
call
test
dec
push
pop
inc
cmpl
dec
mov
int3
rclb
push
pop
adc
out
push
adcb
clc
lcall
fyl2x
cli
out
inc
movsb
aaa
arpl
jecxz
mov
popf
fisubrs
jp
jne
or
sub
cmp
mov
pop
jle
or
adc
mov
lret
cld
lret
push
ja
dec
add
movsb
test
out
push
cli
fadds
daa
iret
push
mov
push
lock
int
sahf
add
cs
add
lods
sbb
pop
shl
xchg
cmpsb
push
data16
sbb
jge
push
mov
pop
cmpsl
jo
hlt
fs
adc
cmp
hlt
xor
inc
int
inc
cmp
mov
lret
outsb
sub
in
or
js
lret
mov
and
in
stos
out
cmp
iret
push
or
leave
inc
push
sbb
mul
pop
cmpsl
cltd
xor
dec
pop
lret
cmp
nop
mov
clc
jmp
mov
pop
xlat
sbb
fwait
xor
xchg
mov
xor
imul
lods
adc
mov
lods
jp
push
cltd
cmp
jmp
jge
adc
cmpsl
popf
cmp
int
pop
push
xchg
ljmp
mov
adc
movsb
mov
inc
inc
repnz
gs
int3
sbb
lret
int
in
push
bound
add
lds
mov
sbb
pop
or
call
add
xchg
mov
adc
pop
add
sub
mov
lods
xchg
jl,pn
inc
jae
mov
cmp
cmc
shrl
fwait
jl
icebp
dec
add
mov
lea
outsl
stos
movsb
sti
jmp
fwait
enter
pop
xchg
sahf
mov
sub
scas
movsl
dec
add
fnstsw
mov
xchg
scas
mov
push
lods
mov
sub
out
cmpsl
data16
inc
shrb
lds
jl
addb
jns
aas
in
repnz
outsb
repnz
adc
loopne
mov
xor
mov
int3
int3
jmp
pusha
push
jge
add
xor
inc
faddl
nop
jmp
lret
jbe
lock
push
sahf
sub
rdmsr
jbe
xchg
add
push
cmp
insb
push
fcoml
adc
adc
sub
test
dec
pushf
popf
fucomi
dec
enter
jae
xlat
adc
xor
push
dec
push
push
jl
and
inc
pop
and
insl
int
push
in
pop
sarl
mov
push
adc
lea
cmpb
mov
fptan
stc
hlt
jae
insl
mov
and
pop
call
in
hlt
or
xchg
pop
adc
xor
push
mov
outsb
sar
lret
adc
cltd
dec
cltd
sbb
mov
lods
test
shl
xchg
mov
sbb
sti
imul
push
mov
repnz
mov
and
xchg
dec
adcl
adc
push
jnp
or
inc
or
xchg
mov
mov
pop
popf
cld
ljmp
push
mov
xor
out
int
stos
sub
and
pusha
jecxz
iret
or
mov
xor
sbb
mov
stc
and
loopne
jl
out
movsl
ret
dec
in
hlt
shr
mov
mov
or
pop
mov
mov
lret
add
or
adc
lods
in
ret
adc
mov
hlt
sub
data16
add
mov
dec
mov
fimull
es
bound
shll
mov
xchg
ret
mov
std
and
pop
aad
leave
sub
ljmp
bound
mov
lea
int
iret
rcrb
lods
sbb
sbb
adc
clc
movsl
push
jge
sub
lcall
pop
out
repz
adc
inc
mov
mov
sub
in
bound
test
xchg
xchg
dec
xchg
iret
mov
aaa
inc
xchg
lds
dec
jp
and
out
inc
setg
pop
in
aam
jl
push
ja
jbe
outsb
lds
hlt
test
fs
pop
mov
pop
mov
andl
dec
xor
xor
inc
pop
repnz
and
push
rcll
sub
and
shrl
lds
cltd
adc
dec
and
roll
loope
outsb
scas
inc
mov
in
vmread
pop
push
push
mov
daa
jns
imul
jnp
ds
mov
inc
cmp
mov
jle
xchg
fcmovne
clc
int3
ds
jno
jmp
dec
nop
pusha
lds
and
hlt
outsb
and
add
fiaddl
jmp
xchg
cltd
aam
and
leave
or
push
test
push
sbb
hlt
ret
inc
dec
subl
iret
lock
test
imul
icebp
adc
adc
lds
hlt
mov
mov
adc
mov
mov
jns
pop
lea
inc
push
addr16
testb
push
inc
cmpsl
arpl
aam
lods
inc
mov
mov
lds
loope
gs
inc
stos
inc
jp
ret
push
loop
xorb
mov
ret
and
ds
push
push
jle
push
aad
jecxz
movsl
mov
ret
sti
out
push
pop
outsb
sbb
aaa
ljmp
add
mov
mov
dec
xchg
stos
unpcklps
cs
subb
pop
and
insb
xchg
enter
aad
add
iret
pop
out
cmpsb
pop
sub
cmpl
dec
inc
xor
test
sub
push
adc
and
add
mov
icebp
push
push
push
pop
adc
in
out
xchg
repnz
mov
jbe
popa
aad
fsubrl
call
jecxz
mov
movsl
stc
cs
jg
mov
std
scas
test
push
jg
divb
cmpsb
add
mov
je
mov
or
or
xchg
fisubl
mov
stc
mov
adc
std
mov
int
sbb
pop
inc
addr16
pushf
mov
or
ret
shll
div
leave
sarl
cmp
mov
xchg
cmp
repz
pop
in
sbb
jmp
and
dec
aas
frstor
xor
rorb
xchg
mov
jbe
out
xlat
fldenv
imul
mov
aas
lahf
cmp
jle
push
sub
lds
inc
jo
jb
mov
pop
adc
mov
mov
andl
outsl
pop
ja
push
adc
jno
nop
mov
push
out
sub
rcrb
mov
xchg
xor
xorb
xchg
jge
push
pop
sbb
cwtl
fisubrs
mov
loop
xlat
test
or
dec
xchg
adcb
in
lcall
out
and
and
faddl
mov
das
shrl
jg
xchg
outsb
mov
mov
daa
in
arpl
popf
dec
xor
pop
mov
data16
icebp
mov
adc
stos
cli
mov
leave
dec
mov
or
and
test
add
out
pop
ljmp
inc
add
mov
jecxz
lock
inc
xchg
insb
jecxz
movsb
movb
push
sub
outsb
imul
add
adc
add
push
sti
sbb
sbb
fistps
pop
pushf
mov
mov
enter
addr16
out
pop
cmp
inc
rol
sbb
dec
add
mov
fwait
push
jle
sub
in
rcrl
jmp
call
push
dec
cmp
movsl
pop
sub
or
mov
stos
pushf
mov
add
mov
imul
push
and
dec
or
pop
gs
add
adc
repnz
jp
cld
adc
int
sbb
loope
test
inc
divl
adc
cmp
push
xor
mov
and
sub
lea
out
pop
push
jmp
js
into
sub
pop
sbb
hlt
das
mov
mov
js
ja
out
mov
in
aad
add
lret
adc
int3
jb
jecxz
out
into
pop
or
xchg
test
lcall
or
std
fidivl
sbb
incl
gs
gs
loopne
adc
lret
or
stos
stos
push
push
mov
inc
pop
xchg
mov
push
das
aad
enter
scas
and
mov
insb
aaa
sub
ja
xchg
gs
jnp
xor
mov
incb
out
pop
xchg
sti
idiv
xchg
js
cltd
je
cmpsb
sbbl
dec
outsl
pusha
push
mov
mov
push
aas
sub
out
jg
scas
inc
xchg
jae
fistps
pop
jp
mull
push
ret
imul
je
push
pop
lcall
mov
fcompl
outsl
push
ja
and
loopne
inc
xor
shll
mov
jnp
add
xchg
mov
xchg
sbb
test
fstpl
adc
in
cmp
mov
divl
gs
cmpsb
sub
out
dec
or
xchg
aad
mov
imul
imul
scas
mov
xor
call
lcall
pop
xor
jp,pt
xor
out
and
pop
lret
mov
xchg
mov
sbb
ds
ja
cmp
pop
xor
mov
push
ljmp
stos
cmp
stos
aaa
pop
cmpsb
pop
movsb
shll
cmpsl
mov
xchg
push
mov
sub
jmp
in
mov
shrl
aad
inc
cmp
mov
sbb
jl
inc
mov
push
leave
mov
in
jb
negb
sti
pop
addr16
xor
or
sti
jnp
and
mov
cmp
add
jns
mov
jge
adc
loop
sbb
scas
leave
inc
mov
xchg
mov
xlat
sub
es
or
cmp
cwtl
popf
push
and
imul
outsb
dec
sbb
dec
stos
shl
mov
addr16
movsb
mov
xlat
cmc
mov
enter
sub
cmp
xor
or
out
out
cmp
sbb
fdivr
mov
mov
cltd
ret
mov
mov
push
push
pop
inc
movsb
sub
pop
add
and
adc
cld
outsl
shrl
lcall
mov
inc
jb
sub
arpl
push
loopne
movsl
cld
inc
out
add
and
mov
pop
pop
mov
push
int3
shll
pop
cs
leave
in
add
sti
jecxz
test
test
cmpsl
ret
inc
pusha
sub
gs
dec
orps
fcoms
lret
in
fdivl
dec
mov
push
flds
sahf
mov
mov
movq
pop
mov
test
fisubl
inc
mov
test
sbb
insl
loopne
pmulhw
and
sub
fisubrs
rorl
adc
roll
mov
mov
inc
incb
ret
movsl
sarl
nop
cmp
jne
repnz
lock
pop
push
xchg
pop
pop
fcmovu
or
sarb
push
imulb
xchg
xchg
sub
push
inc
mov
push
push
fwait
pop
loope
ds
inc
addr16
or
cmpsl
aaa
push
es
inc
fadds
sub
testl
iret
add
cli
jmp
jmp
movsl
xor
in
xor
inc
aaa
cli
das
or
mov
pop
addb
or
aam
pop
rolb
outsl
mov
ret
inc
sub
sarl
movl
cmp
or
and
loope
mov
outsb
mov
mov
mov
loope
dec
sub
mov
jno
sarl
and
dec
pop
sbb
add
cmp
imul
sub
xor
cmc
test
insb
pop
push
mov
rclb
mov
daa
pop
cmp
mov
daa
lds
out
pop
sub
sbb
sbb
movsb
or
out
imul
or
pop
mov
inc
mov
rorb
dec
adc
sub
cmp
add
lcall
mov
jp
data16
or
cli
into
push
dec
gs
nop
mov
or
ss
push
cmpl
test
lcall
shrl
js
xlat
xor
sub
sub
inc
ja
cmpsl
insb
and
aaa
js
adc
or
lret
add
jnp
push
lahf
lods
dec
sbb
inc
xchg
push
dec
push
inc
popf
movsb
xchg
add
add
mov
cmc
lea
mov
je
add
pop
jg
out
int3
cmp
rolb
sbb
push
xchg
mov
mov
test
pusha
xor
lds
lret
sub
shrl
fs
test
pop
dec
stos
push
mov
test
push
sbb
sbb
in
add
cmp
and
into
cmp
fildll
cmc
dec
orl
imull
add
icebp
nop
int3
push
fdivrl
push
jle
mov
mov
push
mov
push
popl
aam
bound
xchg
push
or
inc
ss
cli
dec
jns
xlat
mov
lret
dec
xor
je
dec
pop
arpl
mov
ret
outsw
fdivl
jno
in
xchg
out
stos
out
push
jb
adc
mov
cmp
xlat
add
xchg
jg
pop
jg
imul
ljmp
es
sub
sbb
rcl
ficoml
rolb
adc
mov
pop
shrl
adc
scas
sti
fcoml
test
pop
std
jns
mov
dec
arpl
sub
mull
dec
xchg
adc
insb
test
imull
push
pop
cli
stos
arpl
adc
jo
and
dec
aas
jecxz
lahf
insl
xchg
rorl
in
push
push
mov
hlt
mov
cltd
sbb
fiaddl
repnz
jns
cmp
adc
sar
out
ljmp
cmc
sbb
stos
adc
dec
in
mov
notb
sub
push
rcll
sahf
pop
push
ret
cld
sbb
pop
in
push
scas
xchg
pop
adc
add
sub
into
scas
fcomps
and
data16
shr
mov
shl
iret
out
and
daa
loopne
dec
scas
inc
jmp
pop
push
call
repz
call
pop
int3
jnp
rol
push
mov
ret
test
adc
aaa
rcrb
mov
jno
add
and
add
push
dec
push
adc
xor
xchg
in
xchg
or
adcb
lea
mov
ss
inc
movsl
push
or
insb
aaa
mov
movsb
and
cmp
or
ret
call
push
fs
xchg
mov
cmp
add
jmp
dec
iret
js
inc
fimuls
lahf
push
les
in
pop
ret
jl
ljmp
sub
pop
inc
int3
dec
pop
sti
mov
add
outsl
dec
sub
pushf
mov
cwtl
daa
mov
test
inc
test
adc
aaa
data16
xchg
xchg
cmpsb
mov
sarb
pop
mulb
scas
ja
add
dec
into
insb
cmpsb
cmp
fsubl
jae
jnp
pop
filds
xor
push
aas
enter
iret
ds
rcll
dec
mov
mov
aas
dec
out
jo
dec
sbb
mov
jmp
call
mov
cltd
mov
mov
ficomps
add
sbb
pop
jnp
in
cli
fisttpl
ret
and
cmc
mov
fcmovnu
jno
push
sbb
mov
mov
mov
std
jbe
adc
mov
addr16
cli
fidivl
sub
pop
mov
stos
aaa
push
sub
paddw
fnsave
xchg
in
lret
fisubs
int
push
hlt
ljmp
js
mov
out
nop
fdivrl
and
cs
sbb
dec
rclb
dec
in
shll
xor
repnz
fistpll
add
ret
fidivrs
arpl
mov
out
cmp
push
in
sbb
scas
stos
cmpsl
push
subl
cmp
or
dec
call
inc
add
cld
inc
jb
and
mov
mov
movsb
std
ss
enter
mov
push
cld
jle
in
in
loopne
testb
cli
push
pop
sub
mov
mov
xchg
fldl
pop
inc
pop
outsb
lock
xchg
adc
popf
shll
dec
fwait
pop
ror
mov
mov
stos
mov
push
loopne
pop
fdivrl
pop
imul
in
mov
insl
cmp
lods
icebp
xchg
sbb
and
xor
push
movsl
fbstp
fnsave
out
jbe
add
mov
add
mov
sbb
pop
xchg
jp
sbb
xchg
pop
rcrl
bound
fmull
push
ljmp
mov
sub
push
jns
scas
fwait
daa
or
pop
ds
les
mov
movsb
push
iret
pop
pop
cli
pop
iret
inc
lock
mov
mov
in
imul
xchg
leave
xchg
cmp
or
repnz
jae
jo
out
xor
rorl
adc
push
in
and
pop
cmpsb
mov
pop
loop
in
scas
inc
or
jnp
nop
jne
test
xchg
mov
xchg
mov
aam
lods
and
mov
clts
in
inc
ds
bnd
jbe
xchg
aad
call
cmp
rorl
mov
popa
cs
rcrb
int
pop
ja
in
push
cmp
inc
pop
jle
dec
popa
lods
and
push
adc
popf
mov
mov
loope
inc
mov
xor
push
loop
aaa
arpl
sub
cmp
mov
movsl
sub
loop
sbb
mov
lods
cmpsl
rolb
and
push
les
push
xor
sbb
dec
addr16
pop
das
cs
or
faddl
adcb
pop
shrb
iret
sub
cmp
nop
xor
popf
push
inc
inc
adc
push
or
jge
fistpll
repnz
fadds
orb
cmc
and
fistpl
xor
aad
outsb
adc
cmovb
orl
adc
inc
cmpsl
jb
insl
push
mov
xchg
and
andb
push
ret
cli
lret
pop
mov
inc
mov
jbe
stos
repz
sbbb
hlt
adc
les
push
aaa
xor
lods
outsl
std
stos
pop
mov
mov
fstps
std
imul
jns
push
shr
mov
insl
in
push
cmpsl
pop
mov
inc
dec
mov
test
sbb
nop
mov
mov
sbb
lcall
out
inc
mov
lds
test
xchg
mov
movaps
test
in
lea
mov
xor
sbb
sub
jp,pt
ja
aas
leave
xor
jo
push
pop
lods
test
mov
repnz
or
sbb
cmp
inc
nop
cmp
pop
shll
jl
dec
fld
push
cmp
int3
push
push
add
mov
ret
ret
and
and
push
pop
mov
insl
jb
iret
inc
add
xor
and
mov
sub
inc
xchg
dec
jns
push
add
sahf
mov
leave
or
call
scas
std
cld
ja
es
mov
out
fidivrs
insb
xor
ja
and
stos
push
insl
bound
nop
jp
dec
loopne
mov
adc
or
push
sub
mov
sbb
fabs
jge
aam
lcall
in
shrb
repz
add
cmp
movb
ljmp
dec
xlat
dec
xlat
add
cwtl
pop
xor
push
mov
lahf
and
push
sbb
dec
push
das
xor
xor
jmp
pop
mov
popa
pop
jns
mov
popa
or
fsubl
hlt
ret
faddl
loopne
imul
sbb
call
pop
cmp
fistps
aam
mov
sbb
out
mov
out
stos
cwtl
sub
and
gs
shl
lret
faddp
push
divb
outsb
xchg
sub
scas
test
mov
fwait
xchg
xor
imul
sarb
aas
leave
push
pop
int3
ret
or
mov
test
es
jle
pop
scas
mov
or
jnp
lret
outsb
jmp
jo
pop
imul
bound
arpl
mov
lods
jno
test
cmp
or
pop
xlat
lock
arpl
pushf
lods
dec
test
sti
mov
push
movsl
inc
xchg
jb
jnp
jge
mov
mov
lret
pop
hlt
data16
or
lods
mov
ja
ds
push
jmp
xlat
and
rcrl
sbb
xor
fcompl
xor
movsl
inc
cwtl
adcb
aaa
mov
jae
test
inc
test
filds
sbb
inc
out
ds
cmp
enter
jle
and
push
js
inc
mov
clc
add
cltd
cmpsl
and
popf
jns
jns
jae
pop
clc
add
das
in
push
push
xor
inc
pop
xchg
cli
popa
popfw
rcl
aam
mov
add
add
lds
add
inc
imul
lods
clc
iret
cmpsb
xor
or
enter
sub
stos
xchg
jno
sbbb
outsb
adc
shll
xor
jmp
sbbb
sti
push
insl
ret
push
testb
out
lret
sahf
jno
lret
outsl
fstp
shll
mov
insl
les
cmp
andb
sub
cwtl
dec
cmp
mov
es
pop
mov
ss
inc
pop
std
lods
pop
and
cli
loope
outsb
data16
inc
das
pop
bound
push
insb
in
mov
test
std
leave
mov
add
add
push
sbb
testb
ret
xor
xlat
xchg
add
or
clc
pop
sbb
nop
dec
ficoml
das
fildl
adc
out
or
sahf
adc
sub
out
mov
int3
movsl
int3
xchg
out
inc
out
pusha
lahf
inc
mov
jns
fs
out
mov
push
btc
nop
in
sub
fwait
out
jmp
jns
inc
adc
je
outsl
lea
pushf
cmp
xchg
adc
ja
es
pop
jl
jns
loope
sbb
ds
pop
or
fstps
mov
ja
idivb
pop
push
mov
rcrl
stc
jne
adc
repnz
jg
mov
jle
jns
in
icebp
shrb
jns
push
sub
dec
ljmp
nop
bound
std
cmp
xchg
add
ficoml
or
js
out
lahf
push
lods
rcr
xchg
add
adc
testl
mov
mov
outsb
mov
inc
stos
xchg
arpl
and
popa
aaa
insb
jb
inc
aam
mov
cld
std
adc
lea
les
dec
lret
test
repnz
cmpsb
mov
lahf
inc
dec
inc
adc
test
faddp
pop
rolb
int3
pop
fstps
push
lret
mov
lcall
push
xchg
and
mov
jnp
negb
fisubs
push
ljmp
cmp
cmp
sub
int3
hlt
xchg
push
inc
ret
frstor
mov
out
mov
lock
in
lds
xor
negl
lods
pop
ret
filds
repnz
repnz
scas
cwtl
aas
xchg
movsl
out
jbe
outsb
push
es
xchg
and
fbld
jbe
jnp
rcl
out
addb
mov
pop
cltd
clc
pusha
jg
outsl
cmpsb
mov
mov
or
sub
mov
xlat
and
shr
ljmp
mov
test
sub
fsub
push
jns
mov
cmp
cmpsl
mov
xchg
enter
sarl
aad
mov
mov
inc
inc
lea
and
shll
loopne
xchg
inc
sub
mov
sub
mov
cmp
rcl
cmp
lcall
leave
iret
lods
imul
aam
out
xlat
mov
fnclex
gs
mov
outsb
adc
mov
add
movsl
lods
test
mov
aaa
xchg
fs
sbb
outsb
sbb
test
fsubr
lcall
dec
aas
int
mov
jno
clc
sub
aad
xor
movsl
dec
mov
nop
xor
mov
jb
.byte
ds
