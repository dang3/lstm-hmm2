add
add
or
add
sbb
add
jg,pn
cmp
add
add
add
add
add
adcb
add
jg,pn
cmp
add
add
add
add
add
add
add
mov
add
adc
add
jg,pn
cmp
add
add
add
add
add
add
add
shlb
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
int3
fnsave
outsb
gs
imul
xor
and
or
xchg
add
in
mov
test
movl
xchg
and
mov
aas
or
jg
xor
dec
cld
ret
repnz
scas
push
push
into
lret
jp
out
scas
dec
adc
nop
aad
mov
push
leave
inc
lods
pop
in
adc
mov
inc
mov
xchg
stc
cmc
sti
jbe
ljmp
mov
adc
inc
fadds
jno
fbld
xor
jb
xchg
fmull
and
xchg
movsl
loopne
mov
xor
inc
jl
xor
jne
cmp
lea
inc
cmp
xchg
add
ret
cmp
jle
sti
movsl
out
mov
and
pushf
adc
pop
pop
icebp
and
adc
cld
pop
popf
jge
add
ss
shrl
ss
mov
ds
jecxz
ja
lods
add
mov
sub
xchg
inc
sti
in
lock
sbb
dec
mov
std
cli
push
inc
mov
xchg
mov
in
cmp
loop
leave
hlt
mov
fs
adcl
daa
mov
push
jo
and
jg
pop
je
icebp
jne
or
test
in
push
fmul
outsb
in
jle,pt
aam
mov
push
pop
mov
sarb
jge
mov
push
and
fcomi
push
xchg
mov
sub
pop
xor
jne
fiadds
ss
mov
test
mov
sti
lock
in
call
adc
xor
push
dec
sbb
ds
or
dec
iret
scas
sbb
sub
mov
insl
in
imul
mov
xchg
jp
lret
pop
jae
mov
shlb
fwait
push
scas
inc
push
call
inc
lods
inc
and
insl
fwait
cli
inc
fcoms
notb
lret
aad
sbb
iret
in
mov
mov
je
pop
loop
aaa
std
cmp
mov
ficoms
jge
push
iret
and
iret
mov
ret
fnstenv
or
jmp
pop
push
mov
jl
psrld
pop
leave
mov
lcall
and
out
insl
ss
fwait
xor
inc
fcoms
mov
dec
mov
xchg
dec
aam
adc
jns
jg
xor
sub
aad
mov
cmp
fcmovnb
jbe
sbbl
repz
insb
fldenv
jecxz
mov
test
imul
cmpsb
mov
test
dec
mov
add
xor
or
decl
incl
out
rcrl
adc
mov
push
cmp
mov
xor
into
jecxz
jmp
mov
inc
pop
pop
ds
aam
push
repz
rcrb
ja
stc
lods
inc
or
dec
or
movsl
sbb
mov
out
push
imul
out
imul
iret
fs
ss
out
test
sbb
or
add
flds
ficomps
in
xor
mov
mov
pop
inc
xchg
cs
mov
dec
fsubrl
sti
jg
adc
cmpsl
push
xchg
lock
aam
push
jg
jg
push
ficoms
cmp
and
pop
cli
fstpl
add
in
dec
dec
jle
in
lahf
test
adc
mov
addl
insl
scas
push
jmp
mov
es
or
rcll
and
sub
sbb
loope
dec
mov
stos
jno
push
imul
nop
pop
in
mov
mov
mov
outsl
lret
jb
sub
jno
sub
in
call
jne
adc
mov
stos
lods
fists
pop
test
dec
call
xor
sub
mov
sub
xchg
sar
ja
in
mov
pop
addr16
push
xchg
push
cltd
sarb
add
push
mov
cmp
lret
test
add
das
lock
scas
pusha
pop
or
test
jbe
mov
lret
dec
cmp
push
and
sbb
stos
mov
mov
push
sub
mov
lock
js
xchg
scas
push
in
xchg
xchg
je
in
ljmp
jp
scas
sub
xorb
test
adc
arpl
scas
cmp
and
jmp
insb
nop
loopne
dec
fstpl
push
xor
fadds
push
stc
push
jne
sbb
xchg
shlb
push
add
sarb
scas
popa
call
lea
mov
pop
inc
dec
fnstsw
dec
pextrw
sbb
mov
test
mov
pushf
fistl
mov
daa
push
and
sbb
pop
xchg
mov
inc
lock
add
mov
pop
and
cwtl
jns
xor
cmp
mov
ss
jae
push
mov
test
xor
mov
iret
cmpsb
mov
mov
jne
fcomps
cmpsb
and
adc
dec
jb
icebp
in
fcomip
cmc
push
clc
pushf
and
fwait
and
divb
jp
push
dec
jmp
js
daa
or
lcall
jae
dec
sub
out
adc
dec
es
mov
cmp
je
and
push
mov
scas
xorl
leave
cwtl
fwait
stc
in
pop
xchg
push
push
pop
xchg
xor
in
fidivrl
xchg
leave
call
repnz
data16
jae
ss
or
mov
mov
cs
adc
nop
loope
xchg
daa
loopne
lds
dec
mov
adc
xor
inc
leave
shll
add
iret
lret
mov
outsb
jg
test
out
test
fcoml
jnp
and
cmp
sbb
pop
pop
mov
ljmp
or
sti
mov
add
jo
pop
mov
adc
pop
ja
mov
push
mov
mov
mov
addr16
mov
imul
dec
out
movlhps
je
sbb
jmp
mov
pop
mov
imul
pop
jnp
loope
sbb
adc
test
mov
out
mov
arpl
xor
fisubs
mov
stos
stc
jl
nop
stos
dec
repz
movsl
out
xchg
mov
scas
fnsave
and
push
xchg
mov
and
jge
pusha
or
mov
xor
add
nop
cmp
pop
xor
ljmp
stos
or
inc
loop
stc
enter
mov
or
lcall
cmc
dec
xchg
lret
inc
test
repnz
mov
push
cmp
inc
aaa
pop
pop
jmp
jp
fwait
xor
test
aas
mov
rclb
push
pop
je
popf
dec
cmp
pop
lcall
bnd
xchg
sub
cmpsl
inc
mov
enter
data16
scas
loopne
mov
or
dec
dec
push
add
das
sti
rorl
sub
repz
out
dec
fs
dec
mov
add
js
or
ror
movsl
insl
div
bound
xlat
sarl
sbb
jmp
leave
push
jnp
aad
mov
dec
mov
xchg
push
dec
nop
arpl
fdivr
pop
inc
mov
push
mov
incb
push
xchg
pusha
sbb
cmpsl
dec
xchg
or
push
test
or
xchg
push
in
mov
add
das
cmpsb
sbbb
or
jo
adc
mov
les
xchg
xchg
jp
ljmp
pop
mov
lret
pop
xor
and
push
js
push
loopne
in
mov
add
outsb
pop
xor
xor
inc
repz
dec
xor
test
mov
sbb
jae
outsl
daa
lret
scas
fnstenv
dec
jns
mov
lock
cmp
ret
cmp
aas
loope
je
in
add
mov
push
sub
les
fisubrs
push
push
push
pop
lret
ss
popf
jno
xchg
xchg
sbb
leave
mov
mov
push
test
out
testb
xor
mov
jl
cltd
sub
aad
arpl
aad
mov
mov
jns
jle
popa
adc
cmpsb
aaa
scas
push
xchg
push
in
push
test
push
cmpb
and
ret
fnstcw
lods
add
pop
movsb
inc
rorb
lcall
jnp
fcmovne
aaa
lods
js
jmp
pop
jnp
cmp
mov
xchg
outsl
cmp
dec
or
stos
jo
push
insb
mov
mov
push
cmpsb
popf
imul
sbb
xor
dec
xchg
fidivrs
mov
fwait
adc
enter
jne
add
scas
enter
fabs
scas
imul
push
pop
movsb
rorl
mov
and
xchg
scas
enter
mov
mov
mov
clc
lcall
inc
jle
sub
xchg
icebp
push
repnz
xor
scas
add
in
aas
lret
add
sbb
jo
xorl
or
dec
xchg
push
loope
test
les
dec
movsb
aam
sub
pop
lahf
cmp
dec
std
xchg
aas
xor
ja
push
imul
jbe
xor
cli
out
and
adc
dec
loope
jl
xchg
outsb
sbbb
dec
in
push
bswap
xchg
fs
rol
xchg
add
dec
out
adc
pop
ja
inc
rcr
andl
xchg
int3
xchg
add
mov
out
mov
cli
xor
mov
adcb
cmp
and
cmc
mov
clc
adc
jg
shl
test
xor
lock
dec
test
mov
test
cmpsl
cmp
cli
pusha
daa
data16
adc
mov
ss
mov
jae
shlb
adcl
add
out
stc
xor
push
cmpsb
adc
stc
xchg
ja
mov
jae
imulb
jnp
popf
scas
scas
mov
inc
mov
orb
push
pushf
sub
jne
dec
imul
ficomps
fistpll
jo
mov
lods
cli
pop
fucom
xchg
fxch
call
adc
addl
dec
into
push
xchg
loopne
push
cmpsb
fsubrl
xchg
ret
stos
mov
movsb
cld
inc
mov
sarb
add
scas
in
jne
jmp
cltd
outsb
or
push
cmp
dec
mov
lods
mov
cmp
jl
popa
cmp
sti
nop
pop
pop
pop
cmp
repnz
pop
cli
adc
rcr
adc
in
fcmovnu
jle
mov
add
mov
gs
daa
popa
ss
fmuls
lahf
xchg
scas
mov
or
negb
add
adc
repz
push
lea
pop
ljmp
insl
call
test
dec
mov
test
add
imul
int3
mov
stos
decb
jnp
rcrl
stos
mov
std
sub
jb
dec
pop
mov
jecxz
sbb
popa
fcompl
gs
mov
clc
lock
push
adc
loopne
scas
int3
loope
xor
xchg
cmp
xor
iret
mov
mov
inc
push
jle
mov
mov
inc
xchg
sub
cmp
hlt
jecxz
adc
test
cmpsl
mov
jae
xchg
pop
mov
fimull
rcll
clc
pop
out
cs
stc
cwtl
sbb
stc
xchg
push
ss
xor
sbb
fldcw
jb
stos
inc
jge
push
mov
scas
mov
cli
iret
push
adc
mov
cmp
jp
or
cmp
inc
cmc
dec
aaa
lcall
xorl
sbb
sbb
repz
ficoms
jg
negb
test
sbb
mov
shl
out
mov
push
ljmp
sbb
add
aas
fistpll
movsb
iret
dec
mov
push
stos
pop
icebp
sub
or
ljmp
out
or
add
addr16
push
repz
and
aam
xor
or
sahf
es
push
jne
push
das
jae
pop
push
jno
rcr
div
negb
mov
icebp
loope
loop
mov
divl
mov
hlt
cmp
push
js,pn
out
push
shll
bound
rol
inc
gs
pop
fisubs
fidivs
mov
loop
mov
test
sub
mov
daa
imul
pop
insl
cmp
cli
adc
inc
mov
test
outsl
mov
inc
dec
imul
mov
fisubl
cmp
mov
sub
sbbl
adc
mull
sbb
aas
pop
sahf
add
xor
pop
and
push
xchg
sahf
icebp
add
sbb
cltd
xor
xor
neg
leave
jae
xchg
inc
movsl
sub
mov
loopne
xor
ficoml
mov
xchg
push
aad
push
rcrb
or
rcrl
out
das
aam
cmp
shlb
popa
aas
xor
mov
fisttpl
insb
cmpb
cwtl
test
cmpsb
out
inc
xor
popf
inc
mov
arpl
mov
mov
lea
in
aas
in
add
or
mov
hlt
icebp
adcl
js
mov
mov
cmp
sbb
es
imul
jg
push
cltd
popa
inc
dec
xor
or
adc
cs
mov
cmc
icebp
xlat
sub
push
pop
pop
ja
pop
pop
xchg
push
cltd
mov
adc
stc
mov
iret
test
outsl
out
pop
movsl
subps
and
pop
lret
mov
or
fisubl
push
hlt
mov
push
mov
and
mov
andb
clc
and
jle
cld
xlat
mov
add
repz
xor
pop
mov
fidivrl
in
into
out
xchg
test
jge
lds
in
add
mov
mov
lret
cld
nop
mov
and
sub
jle
shr
incb
adc
mov
jnp
xchg
ljmp
xor
push
jmp
pusha
mov
cli
sbb
add
iret
cmpsl
fildl
mov
sub
jne
xlat
in
popf
std
mov
mov
pop
int3
xchg
mov
lret
adc
je
in
mov
in
sbb
popf
call
bound
jecxz
lcall
sar
cmc
mov
and
test
ja
add
std
icebp
addr16
cmc
cmpsl
inc
mov
insb
pop
dec
adc
pmaxsw
sbb
xchg
ss
adcl
ficompl
mov
popa
adc
mov
jb
cmpsl
inc
adc
in
mov
or
and
dec
pushf
push
lds
mov
scas
xchg
addl
add
push
inc
nop
sbb
insl
fs
mov
es
in
push
push
inc
ret
sbb
dec
pop
sbb
repnz
popf
mov
push
sbb
les
rcrb
dec
aas
mov
aad
loopne
fmull
movswl
dec
or
int3
std
insl
push
cltd
mov
insb
mov
test
adc
sbb
jne
and
xchg
std
aaa
mov
sbb
dec
adc
inc
sbb
faddl
or
stc
in
cmpsb
movsb
push
or
adc
sub
icebp
sub
out
jle
dec
insb
mov
das
inc
pushf
dec
sub
and
xor
ret
and
cltd
ret
mov
stos
adc
or
sbb
inc
sub
repnz
push
dec
int
add
jo
addr16
test
nop
jne
adc
mov
push
mov
cmc
icebp
loope
cmp
out
dec
dec
inc
mov
mov
and
aad
jnp
jl
mov
hlt
inc
aaa
in
frstor
into
fidivrl
push
mov
lcall
inc
adc
adc
in
imul
outsl
nop
std
mov
mov
dec
inc
jle
inc
or
and
push
mov
and
lds
das
xor
lods
xor
bnd
in
aaa
imul
dec
sbb
lret
int3
jnp
push
sbb
jb
or
cmpb
ljmp
ljmp
cmpsb
out
sub
push
pop
dec
or
jg
daa
sub
popf
push
xor
test
loop,pn
lods
mov
test
aam
lret
lods
fwait
gs
jecxz
adc
push
sbb
lods
push
add
dec
and
sbb
pop
ljmp
gs
jmp
mov
rorl
jmp
add
lock
add
mov
mov
ds
imul
xlat
jnp
push
negb
xor
sbb
and
outsl
das
pushf
xchg
mov
mov
pop
dec
pop
sub
or
jb
cmp
xor
adc
and
out
iret
fwait
es
mov
cmpsl
out
cli
ret
xor
sub
add
adc
xor
jg
sub
push
xchg
loop
inc
sbb
repnz
jne
mov
xchg
mov
lods
aad
lods
je
jmp
xchg
ljmp
mov
xor
movsl
pop
popa
mov
or
sub
aam
pop
lock
mov
add
in
and
mov
inc
outsb
mov
int
fidivs
xlat
es
mov
sbb
sub
adc
push
std
xchg
ret
inc
jae
mov
inc
jb
xor
in
fdivrs
xchg
data16
jle
push
sub
mov
dec
popf
rcl
push
loop
push
xchg
sbb
adc
mov
mov
fwait
push
popa
mov
dec
movhps
dec
and
pop
int
data16
cs
jae
imul
add
dec
mov
or
or
ds
jmp
bound
push
or
int
sub
mov
ret
lret
fdivp
inc
lcall
dec
out
mov
out
jge
jge
test
in
aam
rorl
test
test
lahf
out
loopne
add
ret
add
jo
scas
daa
push
sahf
add
inc
movsb
aaa
push
or
divl
es
leave
insl
jo
mov
icebp
mov
jnp
pop
mov
ficoms
push
popa
test
lods
dec
ljmp
cltd
adc
rclb
popf
out
jae
cmpsb
scas
fcmovne
push
fs
pop
cmp
cs
data16
sbb
in
andl
iret
outsb
les
stos
stc
test
inc
pusha
notb
sahf
lret
outsl
rorl
jno
or
arpl
leave
fisttpll
xlat
fimull
pop
dec
pop
xchg
scas
test
std
sub
cmp
add
scas
cmpb
add
mov
and
rcrl
fidivrl
push
stc
cmpsb
xor
push
xchg
inc
xchg
repnz
inc
lea
add
inc
stc
xor
sub
out
fnstsw
and
cmp
cmp
fdivp
sbb
je
xor
jo
je,pt
dec
xor
or
out
cmpsl
int
inc
std
inc
lret
adc
push
mov
adc
rcr
ret
adc
cmp
adc
mov
push
out
add
test
and
aaa
mov
je
sti
cld
sbb
fdivrs
fisubl
rclb
dec
iret
clc
enter
mov
dec
data16
bound
lds
sbb
jno
jae
fwait
jno
dec
jo
repnz
inc
outsb
andb
pop
xchg
mov
dec
int3
mov
in
test
pop
aas
mov
loop
pop
movsl
faddl
insb
mov
lret
push
jmp
inc
ds
mov
fxtract
xchg
enter
mov
inc
push
mov
mov
push
daa
sbb
lods
and
outsl
adc
pop
xchg
dec
adc
mov
mov
orl
aad
mov
xchg
movsl
pop
push
mov
shll
sub
fsubrl
lret
mov
aam
insl
icebp
push
adc
inc
sbb
jg
pop
loopne
rcr
sub
sbb
stc
xchg
int3
gs
daa
add
orl
adc
xchg
inc
shrb
adc
loope,pt
mov
jp
movsl
lds
or
scas
xor
pop
and
enter
into
cmp
jnp
ss
xor
fwait
adc
push
xchg
imul
or
out
cwtl
xchg
and
jmp
pop
xor
orl
push
and
ljmp
mov
test
push
das
cltd
rorl
mov
cmc
ret
subl
mov
sub
outsl
fcoml
and
movsl
icebp
adc
push
mov
jno
mov
aaa
and
cmc
out
fisubs
mov
push
inc
push
xchg
adc
xorl
testl
aad
xchg
xchg
add
ror
inc
and
pop
gs
imul
aad
push
push
das
pushf
arpl
dec
cmpsl
cwtl
in
inc
std
or
das
mov
negb
shr
pop
mov
cwtl
push
xor
push
ljmp
out
gs
in
mov
inc
jno
sub
shl
add
ret
jmp
inc
mov
pop
jo
dec
push
ja
es
popa
dec
add
je
dec
mov
frstor
cld
daa
inc
mov
dec
push
pop
push
mov
into
add
inc
sahf
arpl
mov
mov
rorl
loopne
addl
fdivrp
mov
push
add
jge
aas
mov
and
cmp
mov
inc
fwait
xor
cmp
and
add
mov
mov
pop
subb
les
test
push
push
xchg
inc
loopne
je
dec
in
ljmp
aad
inc
int3
popf
sbb
loopne
push
sbb
lret
je
repnz
aad
xchg
int
jl
dec
iret
xor
sarb
call
rol
cltd
es
inc
mov
inc
cmp
sub
mov
movsl
jl
popf
into
ret
ret
and
inc
and
rcrb
push
mov
push
movsl
xor
enter
lret
push
and
inc
gs
cmp
pusha
rcrl
cmp
addb
pop
gs
imul
xor
lods
imul
jmp
movsb
jle
xchg
xchg
mov
fs
push
dec
push
adc
pop
xlat
push
xor
pop
cwtl
dec
cmp
xor
mov
pop
imul
mov
shll
jle
pop
out
sub
pop
and
mov
inc
xchg
cmp
cwtl
adcb
leave
addb
mov
adc
cmp
cmpsl
loope
lods
and
pop
movsl
lods
cmpsb
lret
lds
les
data16
iret
daa
cs
ret
sbb
xor
push
ljmp
xchg
adc
sub
fdivrs
ds
popf
cmp
jb
es
inc
scas
dec
xchg
mov
scas
push
leave
jnp
sub
ds
mov
mov
dec
cmp
out
cmp
ss
lahf
pop
negl
lods
mov
ds
sub
call
fsub
mov
mov
js
xchg
aad
push
jb
sub
jl
sbb
lock
test
shll
ss
lods
loop
dec
mov
das
cmp
out
mov
push
neg
jg
pop
arpl
pushf
xchg
adc
in
adc
xor
dec
adc
repz
popa
leave
loope
shll
xor
mov
xchg
jo
notb
out
dec
fwait
adc
popa
cli
cmp
mov
mov
or
imul
dec
in
mov
sub
xchg
lcall
dec
stos
inc
inc
or
dec
and
push
mov
mov
and
jbe
pushf
mov
fadds
rclb
xchg
mov
pusha
xchg
push
imul
scas
xchg
ror
xchg
inc
or
in
mov
sbb
in
mov
out
mov
aam
sub
adc
das
clc
inc
or
aaa
rcrl
mov
pop
fdivr
push
sarb
vpmulhw
xchg
pop
sub
loop
mov
repz
int
cmc
lds
test
push
push
dec
or
jecxz
std
fsubp
xchg
les
imul
inc
shlb
in
stos
and
mov
and
mov
pop
pusha
data16
xchg
pop
dec
in
enter
dec
mov
xlat
jmp
xor
add
stc
pop
or
mov
icebp
or
add
es
outsl
push
leave
jae
test
push
lds
clc
dec
roll
outsl
movsb
lahf
lahf
scas
add
in
pop
int
cmp
adcb
push
jnp
cmp
cmc
mov
rorl
ds
out
pop
push
add
pop
and
add
scas
and
jb
lret
jmp
andb
pop
jae
xchg
cmp
outsb
das
push
xchg
inc
das
mov
jecxz
mov
xchg
cs
stc
aam
adc
fists
sahf
nop
sahf
pushf
push
in
out
fxch
ljmp
lock
jecxz
cmp
popf
filds
ljmp
push
in
mov
or
in
in
inc
mull
jo
lock
repz
int3
xor
mov
std
stos
negb
jbe
mov
stc
jmp
jns
pop
mov
add
and
sti
stc
add
lds
sbb
xlat
cmpl
mov
mov
cmc
xchg
push
sbb
les
push
dec
cmp
add
xchg
push
jnp
idiv
test
or
popl
jl
aam
or
or
push
sbb
lods
aad
loopne
stos
xchg
call
insb
dec
jns
jmp
push
pop
lret
in
inc
and
inc
inc
cvtpi2ps
inc
insb
clc
fisttpll
mov
inc
push
push
insl
mov
jne
mov
jl
daa
insl
mov
in
jns
lret
ja
cmpsl
inc
jb
dec
push
jl
je
in
js
sub
ficompl
insb
xchg
ret
negb
or
xor
in
popa
inc
mov
fsubrl
sub
rorb
mov
cmp
cmp
mov
movsl
cltd
cmc
sbb
gs
push
inc
inc
mov
sub
mov
sbbl
adc
icebp
lea
lret
inc
imul
sbb
movb
mov
les
mov
push
out
daa
ljmp
xchg
scas
mov
popf
cmp
insl
loop
into
adc
sbb
dec
imul
ret
iret
insl
pop
sbb
lea
lahf
repz
subb
outsl
jo
jne
adc
lahf
in
push
sbbl
jo
xchg
movsl
or
outsl
lock
xor
mov
xor
or
movsb
loopne
in
or
lret
cltd
popf
add
push
sti
mov
in
dec
xor
arpl
mov
mov
iret
loope
mov
push
sub
push
cld
mov
dec
xor
mov
cltd
push
imul
cmp
or
mov
and
fisubs
xchg
jo
pop
cmp
cli
ds
pop
jge
pushl
or
loopne
mov
rorl
dec
xchg
retw
adc
mov
bound
inc
cmpsb
push
push
cmp
enter
add
pop
or
fildll
jmp
xor
dec
xor
jae
pushf
jnp
mov
jns
lcall
mov
je
inc
les
out
daa
dec
sbb
loop
pop
in
cltd
iret
add
pop
sbb
sub
out
push
sub
or
loopne
leave
lea
jns
sub
cmp
push
sub
sbb
push
push
ljmp
xor
xor
das
in
jmp
mov
jne
adc
fstpl
or
or
clc
push
arpl
and
cs
movsl
mov
xchg
lcall
push
xor
adc
jmp
addl
sbb
fsubs
sub
sahf
push
in
fs
fcompl
mov
outsl
sbb
sarb
outsb
jl
xorl
out
push
movsb
mov
imul
lcall
mov
int
mov
cmpsb
cmpsb
gs
mov
push
mov
imul
mov
iret
pop
push
shrl
mov
ljmp
nop
scas
jns
lods
icebp
test
cmpsl
dec
or
lds
jb
paddusw
mov
popa
in
les
mov
jg
js
pop
lahf
insb
push
sti
push
mov
xor
and
loope
sub
rcr
or
cli
xchg
imul
enter
cmp
jb
sar
ja
sbb
cmp
jbe
sub
test
jae
jp
sub
adc
outsb
mov
data16
cmc
mov
xor
add
mov
mov
and
xor
scas
repnz
clc
cmp
loope
fistl
dec
xchg
add
aam
insl
sbb
aad
dec
sbb
and
ja
sahf
scas
insb
push
ret
mov
lea
sbb
loope
push
pop
push
pop
mov
and
lock
stos
scas
lock
imul
loopne
int
cmp
test
dec
stos
into
arpl
sub
push
lret
stos
rcr
lret
sbb
dec
xchg
sbb
pop
sbb
popf
and
sahf
aaa
xchg
adc
loop
sub
ret
cs
in
popa
inc
insl
imul
push
ret
inc
and
jg
dec
mov
pusha
adc
inc
dec
jp
mov
aas
cmc
push
je
movsb
mov
fwait
leave
pusha
testb
lahf
mov
and
sahf
mov
dec
xchg
addr16
xchg
dec
lds
adc
jle
cmpsl
xlat
imul
in
inc
in
es
mov
lds
xchg
cmp
mov
or
cmc
xchg
hlt
push
sahf
ja
mov
push
inc
pop
ja
inc
pop
les
pop
and
add
shld
scas
sbb
mov
and
push
add
imul
iret
pop
pop
add
and
fcmovu
jns
push
nop
sahf
insl
lock
mov
add
frstor
into
dec
push
mov
aam
std
mov
repz
ret
jl
mov
dec
hlt
sub
mov
mov
jne
es
daa
pusha
mov
aaa
pusha
pop
pop
pusha
add
incl
mov
sbb
pop
bound
stc
lods
sbb
pushf
or
test
sti
sbb
xor
push
or
loopne
and
stos
inc
push
pushf
mov
test
or
add
or
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
inc
add
add
add
add
add
add
add
