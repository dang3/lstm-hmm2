int3
add
xchg
or
repz
pop
lret
fs
push
jns
and
popa
mov
std
in
mov
fnsave
outsl
movsl
inc
imul
dec
arpl
inc
pop
mov
call
js
mov
out
leave
or
push
inc
cltd
jb
mov
sub
xchg
popa
xchg
cmp
data16
loopne
push
jb
in
push
xor
popa
mov
mov
jns
sub
add
dec
clc
push
lahf
pop
fdivl
jno
pushf
lods
ret
mov
fsub
adc
and
js
jnp
adc
nop
adc
ss
lret
fistl
and
push
ficomps
int
jg
mov
int
xor
mov
cmp
inc
xchg
xorl
roll
mov
sub
dec
and
lds
in
mov
xor
aaa
inc
and
sahf
dec
ljmp
add
mov
out
idiv
lods
xchg
cmp
lret
cmc
jp
call
out
push
xlat
or
out
leave
add
xchg
fldenv
clc
xchg
imul
push
xchg
fwait
xchg
nop
int3
pop
sub
dec
mov
and
push
clc
add
dec
push
test
xchg
sbb
ljmp
loop
inc
push
loopne
nop
jae
mov
sbb
jnp
add
fsubl
lret
mov
rorb
cwtl
xchg
aaa
in
ds
xchg
xchg
or
cmc
mov
cmp
negl
sub
inc
cmpsl
lcall
cmc
sub
bound
sub
leave
mov
cmpsb
fisttpl
sbb
scas
es
pop
repz
dec
xchg
xchg
insb
cmpsb
cmp
fmulp
jns
dec
cs
cli
insb
out
jnp
loope
fst
loope
mov
adc
scas
dec
jo
sbb
stos
ret
add
push
and
lods
cmp
pop
movsl
pop
push
insl
out
adcl
loope
mov
jnp
xchg
cli
add
lods
jle
jg
xor
out
inc
mov
xchg
icebp
out
push
add
jl
rcl
pop
ds
js
cltd
mov
rorl
or
mov
inc
shll
jbe
push
pop
sbb
mov
mov
insl
out
xor
dec
and
push
mov
cli
jg
jp
sub
mov
inc
sub
and
add
add
not
clc
call
lea
je
clc
pusha
add
movb
push
lea
jmp
push
jge
add
xchg
fwait
enter
jns
sub
mov
sub
outsl
pop
push
xchg
sub
push
mov
nop
cmp
pop
fnstcw
pop
outsl
data16
leave
or
or
sahf
add
add
push
ds
jno
dec
lea
pop
lds
add
rolb
inc
sub
add
add
pushf
movw
lea
call
pushf
bt
pushf
cmc
cmp
lea
jle
jae
clc
cmc
clc
cmp
call
call
pusha
sub
pusha
pushf
lea
jne
pusha
pushf
movw
push
lea
call
pushf
push
pusha
mov
lea
jmp
movl
mov
mov
lea
jmp
add
add
stc
cmp
jmp
jmp
inc
pop
jp
lds
pop
pop
daa
in
cli
xlat
stos
push
cmp
sub
ret
lods
not
pop
rcll
stos
push
jl
bound
push
mov
repz
jno
push
jge
rolb
sbb
dec
cmc
repnz
and
mov
mov
push
cmovb
pop
add
xor
stos
xor
insb
push
lds
sbb
push
add
and
pushf
pushf
cmp
stc
pushl
popl
call
xor
xchg
add
dec
movsb
pop
lds
pop
push
js
leave
adc
mov
cld
mov
push
andb
mov
jae
add
loopne
sahf
xbegin
xchg
mov
outsb
cmp
pop
add
into
addr16
nop
loopne
daa
rolb
mov
jp
mov
icebp
xchg
and
leave
jmp
add
aas
gs
mov
rcrb
arpl
test
push
cmpsb
jecxz
cmpsl
fnstenv
sbb
sbb
dec
gs
repnz
push
pop
fdivs
inc
jne
enter
push
lds
sbb
sbb
iret
ja
mov
incl
inc
or
cmp
mov
or
inc
repnz
int
out
rcrl
sbb
pop
test
sbb
out
sub
mov
xlat
xor
cmp
imul
mov
cli
xchg
std
jne
mov
and
push
xor
jno
cli
cmp
mov
adc
ret
loop
sub
xchg
movsl
adc
dec
icebp
data16
add
push
bound
or
out
jb
cmp
push
mov
lock
dec
outsb
arpl
xchg
jge
call
fwait
xchg
sbb
xor
out
ss
ret
lea
and
jae
inc
icebp
push
push
clc
pmaddwd
xor
sub
adc
push
dec
jae
xchg
mov
call
xchg
dec
xchg
sub
out
fs
push
mov
sub
lds
movsb
fwait
movsl
add
mov
inc
and
in
fnstenv
cmp
arpl
pushf
pavgw
repnz
and
and
pop
idivl
mov
aam
inc
dec
cmpsb
cltd
add
clc
pushf
jmp
lea
ja
stc
stc
bt
sub
jmp
call
lea
je
mov
push
pop
lea
pusha
movzwl
pushf
jmp
popf
mov
addl
mov
addl
test
rorl
mov
lea
addb
xchg
test
js
int3
jle
call
jmp
call
lea
jne
pusha
mov
pushf
push
lea
jmp
call
mov
xchg
int
fsubl
mov
pop
mov
in
xchg
inc
sbb
cmp
mov
mov
loop
xor
xchg
xchg
lods
sbb
pop
jl
movsb
mov
jmp
push
sub
inc
or
jge
sbb
test
mov
test
jmp
lea
jne
bts
push
shl
mov
stc
bt
call
out
testl
xchg
aaa
in
dec
push
mov
neg
mov
cmp
mov
orb
cmc
mov
imul
xchg
mov
mull
jb
jp
or
or
cmp
aam
sub
pop
xor
jp
jp
aam
jg
xor
nop
sub
out
lcall
adcb
in
mov
xchg
mov
into
inc
jmp
dec
mov
mov
push
xchg
jge
aas
add
dec
mov
dec
cmp
sub
call
cmp
xor
mov
pushf
cmp
call
fldenv
lahf
pop
rcrb
cmp
inc
mov
call
outsb
dec
lds
adc
sub
pop
xor
push
ljmp
cmp
into
out
pop
mov
bound
and
fs
aaa
enter
xchg
movq
and
lret
adc
aad
xchg
int
std
mov
mov
sub
or
xchg
pop
mov
and
notl
push
pushf
pop
not
call
mov
cld
push
adc
xor
add
add
pop
out
std
jae
pop
daa
ljmp
sarl
push
mov
sub
or
call
jae
stos
imul
out
inc
sbb
mov
mov
mov
or
adc
adc
loope
adc
daa
push
jbe
cld
ret
imul
jno
orl
dec
fbstp
xor
in
or
icebp
mov
shll
fistps
push
adc
dec
add
cld
mov
cmp
in
and
sets
add
setle
mov
pushf
call
adc
mov
btc
shld
pop
pop
mov
stc
jmp
testl
mov
lret
mov
inc
dec
xlat
sub
fadds
pop
add
pop
sbb
fsubrs
inc
xor
cmp
push
iret
jno
fwait
add
jl
lcall
test
rcrb
fadd
rorl
mov
pop
xchg
cli
cmp
jecxz
in
movb
movb
mov
lea
call
stc
stc
call
stc
not
cmc
pusha
add
clc
stc
shr
push
mov
lea
je
pushf
pushf
pushf
jmp
pusha
jmp
call
stc
cmp
xor
bt
bt
movw
call
push
dec
lea
jne
stc
cmc
rol
cmc
pusha
test
clc
sub
pusha
push
jmp
lea
je
pushf
movw
pushf
pusha
cmp
call
push
adc
pushl
pushf
lea
jmp
cmp
pusha
mov
call
jmp
cmp
test
cli
xor
push
arpl
decb
jp
jecxz
xchg
test
scas
fs
aam
mov
push
ljmp
add
insb
lods
ret
sti
leave
pop
mov
lds
mov
std
in
or
enter
add
adc
imull
push
icebp
push
imul
push
inc
lahf
call
cli
in
push
jecxz
pop
ds
inc
in
mov
out
xor
push
cli
mov
push
push
mov
popa
into
inc
or
mov
mov
cs
add
lea
push
aas
test
push
push
shr
jmp
insl
mov
or
cwtl
int3
in
add
push
add
adc
scas
sbb
push
loopne
inc
int3
popa
test
imul
xor
push
loope
insb
dec
aad
push
call
dec
lcall
mov
mov
ftst
mov
adc
lods
scas
adc
data16
sub
mov
jecxz
pop
and
in
pop
fstpt
cld
cld
sub
lds
clc
aad
dec
out
gs
jmp
mov
dec
mov
mov
lahf
pop
and
jne
aam
call
mov
dec
push
movsl
stc
mov
sbb
lahf
stos
fildll
lods
test
arpl
loope
jecxz
dec
call
sarl
outsl
lock
add
add
in
mov
mov
xchg
cld
jno
in
ja
or
or
xchg
jmp
jns
and
in
push
cmp
adc
aad
and
jle
bound
adc
push
cmp
mov
mov
in
add
pop
jl
mov
sbb
out
push
pop
cwtl
dec
es
jae
dec
mov
sub
out
cld
jmp
icebp
das
pop
dec
or
hlt
and
lret
dec
inc
mov
jmp
orb
movsb
push
bound
dec
test
loope
or
lea
mov
fmull
add
dec
dec
xor
enter
mov
lock
jne
std
daa
mov
fldenv
lock
xor
mov
popa
mov
mov
xchg
je
xchg
sahf
cli
stos
sbb
mov
loopne
mov
lds
or
xor
std
popa
aam
loopne
movsb
cld
jnp
std
test
inc
shll
int
insl
lea
jg
aam
cld
push
lods
fidivs
pop
dec
xor
and
adc
stc
fldl
in
popa
dec
push
cld
leave
in
jle
add
lods
jl
jmp
stos
push
movsb
jns
iret
movsl
leave
in
and
cmp
cmp
in
sti
sub
add
aad
mov
push
shll
lds
in
jl
fucomp
mov
lods
mov
int
pop
add
mov
loope
in
jmp
clc
sti
movsl
in
xchg
dec
inc
shl
push
cmp
inc
jmp
mov
pop
fsts
jns
sub
inc
in
push
fdivs
push
inc
dec
loope
cmp
jmp
xchg
fistl
fmull
mov
mov
cwtl
mov
dec
mov
mov
dec
movsb
or
dec
mov
push
dec
mov
mov
mov
sbb
jmp
mov
std
out
cld
sarl
aad
inc
jnp
mov
in
subl
push
int3
data16
push
int
mov
adc
fcomps
mov
cmp
fst
jecxz
lea
pop
test
mov
dec
push
nop
stos
lock
icebp
xor
mov
fidivs
jp
cld
popa
popa
cmp
lods
or
mov
ljmp
nop
mov
pop
adc
sbb
pop
stc
add
aam
in
loope
and
cmc
dec
loope
in
aam
and
pop
push
jge
int
cld
add
sub
stos
mov
mov
pop
shll
popa
sti
push
in
inc
mov
leave
loopne
adc
add
cld
mov
mov
in
aad
mov
gs
sub
std
mov
mov
rclb
pop
xchg
ss
outsl
dec
lods
xchg
in
mov
or
gs
inc
in
cmp
in
out
xchg
jl
test
or
popa
and
jns
push
sti
xor
gs
imul
sub
gs
xchg
aam
popf
in
mov
cmp
hlt
in
in
xchg
mov
lea
jmp
rorl
sub
jne
inc
adc
push
fldt
std
in
sub
dec
in
in
and
and
outsb
dec
dec
hlt
insl
and
inc
popf
fcmovnb
imul
std
dec
loope
jl
jmp
stc
pop
mov
aad
jmp
scas
jmp
mov
in
fwait
adc
shll
sbb
jmp
les
mov
mov
cltd
in
fstps
xor
xchg
mov
test
jecxz
mov
pop
aad
mov
jge
jne
ds
mov
fcmovnu
icebp
in
aam
rorl
popa
loope
cmp
rcr
rcr
jno
rol
shll
rorl
xlat
out
jns
cmp
jge
shrl
fcoml
rcl
jne
and
inc
jno
mov
shl
rcll
mov
dec
jmp
xor
imul
sub
rorl
xlat
mov
or
cmp
mov
out
loope
jge
sarl
shr
jns
sbb
mov
pop
mov
cli
cld
xchg
in
arpl
roll
loop
adc
movsb
loop
and
sub
rcr
stc
mov
fdiv
xlat
out
xor
mov
cli
int
out
andb
shll
sub
dec
sar
jno
and
mov
sub
sti
mov
dec
ret
mov
loopne
mov
loopne
cmp
shrl
mov
cli
out
lods
jl
out
lea
lock
aad
fs
aaa
mov
sti
ror
vhsubpd
sub
adc
shl
test
jmp
les
mov
icebp
push
outsl
rcll
add
out
cltd
ret
jecxz
rcl
xor
lods
es
mov
cld
jmp
dec
dec
xchg
fs
or
jle
inc
jl
jmp
dec
cs
out
or
sti
fsubrp
mov
jg
rcl
dec
cld
mov
jmp
or
lods
jmp
adc
aad
test
pop
mov
xchg
or
adc
lea
js
insl
cmp
shl
and
sbb
dec
sbb
or
test
mov
jge
imul
test
lahf
mov
in
icebp
and
lahf
dec
fstpl
push
adc
mov
sub
cmp
test
gs
int
ljmp
popa
movsl
xchg
sub
xor
popf
jo
mov
adc
mov
adc
stos
push
sbb
ljmp
scas
mov
addr16
mov
into
cmpsb
std
in
mov
add
aad
arpl
sub
sub
mov
lods
dec
ret
lods
stc
xor
mov
jge
in
fwait
jo
popa
outsb
mov
lds
jo
shll
or
cmpsl
fldcw
out
jo
fisttpll
int
stc
popf
dec
pop
jns
cmp
shll
mov
push
insb
sbb
cltd
sar
jo
fldcw
insl
std
dec
pop
popa
pop
mov
popa
mov
jns
dec
icebp
sub
jmp
xor
fcmovnbe
mov
mov
ja
aas
imul
sub
imul
in
rcrb
gs
std
sub
movsl
rcr
insl
lds
popf
std
mov
xorl
mov
xchg
popa
jne
and
aad
stc
fldenv
mov
nop
fsubrl
dec
sbb
or
aas
add
pop
rorb
sbb
lock
mov
fisubl
cmpsl
int3
mov
out
out
out
out
out
out
out
out
out
out
cltd
fstps
nop
lret
loope
dec
cltd
push
test
orl
ja
aad
aad
lcall
fwait
sub
xor
xchg
jb
stos
mov
fidivl
stc
mov
fnstsw
shrb
fcmovu
in
loope
mov
lea
jns
xchg
test
fucomi
aam
mov
push
jnp
in
ja
rcr
in
jg
and
fldcw
out
popf
out
mov
xor
stc
xchg
dec
cmp
orb
mov
xchg
in
lcall
mov
aad
gs
bound
clc
jo
loopne
mov
sub
sbb
je
cmp
movsl
mov
jp
aam
jl
push
mov
into
mov
sahf
shlb
out
in
mov
dec
fcmove
in
mov
mov
xchg
imul
lods
pushf
jge
dec
dec
dec
in
test
inc
jmp
aad
push
mov
add
lahf
lods
sbb
scas
movsb
dec
mov
orb
dec
fldz
popf
dec
jne
lds
xchg
or
loope
lods
sub
cld
or
call
sub
jne
icebp
movsb
scas
xchg
dec
fldcw
cmp
in
cmp
sti
test
xor
dec
jge
sub
in
jge
lock
mov
rcl
jle
nop
push
mov
in
mov
movsl
in
sub
jno
jb
in
push
fnstcw
mov
aad
cwtl
or
xchg
jmp
jmp
pop
test
loopne
jb
push
shll
adcl
js
stc
add
mov
mov
ret
popf
dec
scas
scas
dec
scas
loopne
mov
in
inc
imul
jne
mov
mov
dec
movsl
faddp
push
roll
mov
mov
cmp
mov
ficomps
mov
mov
in
cmp
xor
sub
test
jmp
or
stos
mov
push
lock
cmpsb
lds
outsb
xor
push
mov
adc
mov
in
mov
scas
int
push
loopne
ss
fdivs
ja
push
dec
mov
dec
pusha
push
push
test
mov
repnz
pop
and
mov
pusha
aaa
inc
pop
adc
cmp
push
stos
xchg
imul
mov
inc
adc
repz
xor
movsb
dec
sbb
xchg
pop
ret
xor
mov
test
scas
sbb
add
mov
test
bound
lods
imul
cmp
movsl
imul
popl
and
in
pop
aad
push
mov
push
mov
loopne
push
xor
lcall
xchg
movsb
jb
cmpb
xchg
leave
lds
mov
mov
jmp
mov
jmp
imul
in
movsl
lods
stos
nop
test
dec
or
aad
mov
or
cltd
popf
hlt
addl
sbb
test
lds
in
fidivs
call
jge
stc
arpl
shrl
or
lods
fstcw
loope
mov
fistps
jns
imul
mov
mov
mov
jg
movsb
daa
test
insl
icebp
daa
pop
push
std
inc
fwait
mov
in
jmp
dec
mov
mov
jl
jmp
dec
addl
out
mov
mov
aam
popa
mov
mov
shll
mov
pop
lds
mov
inc
sub
cltd
stos
stc
push
rcr
gs
mov
in
mov
mov
std
test
xchg
popa
add
fwait
std
sti
push
test
popa
lahf
cmpsb
in
push
dec
in
or
xorl
stos
lea
pop
jmp
loope
mov
inc
mov
or
sub
faddl
arpl
pop
pusha
push
stc
sub
data16
call
cmpl
repz
inc
repnz
or
mov
movsl
out
arpl
imul
cmp
jge
jno
sbb
xchg
sub
mov
call
mov
jp
popa
jns
gs
loop
stos
sbb
test
mov
mov
inc
std
pop
mov
lahf
insl
jmp
dec
lods
stc
sbb
add
push
mov
cltd
ret
out
push
sbb
int
sub
stc
jl
jg
jge
fnsave
inc
mov
std
push
add
mov
jns
out
inc
addl
xchg
ja,pn
push
mov
popa
cltd
cmp
lods
mov
jnp
ret
out
add
push
mov
or
nop
fildll
lods
mov
jne
inc
repz
jp
sbb
stos
cmpsl
mov
std
imul
dec
dec
pop
aam
scas
xchg
fnstcw
mov
jmp
clc
mov
fwait
insl
and
in
cwtl
jecxz
add
jns
adc
fxch
adc
popf
xchg
mov
jmp
dec
fisttpll
mov
sbb
push
ret
in
stos
xor
xlat
out
mov
fs
pop
cmc
pusha
insb
mov
in
std
xchg
pop
out
xchg
nop
xorb
lret
popa
mov
je
xchg
mov
jmp
push
fisttpll
mov
mov
jmp
test
popf
adc
lds
loop
sarl
jb
gs
fisttps
sbb
test
sbb
inc
in
adc
das
jecxz
ja
scas
sub
xlat
outsl
fisttpll
jmp
shll
jecxz
in
jg
xchg
adc
sub
out
pop
and
jg
jne
mov
imul
inc
outsl
sbb
popa
test
movsb
dec
jnp
in
sarl
int3
or
add
mov
idivb
mov
cmp
in
rcll
mov
or
mov
jmp
mov
mov
xchg
mov
jns
push
add
outsl
xchg
cmp
loopne
xchg
rorb
je
and
daa
mov
mov
add
dec
in
cmpsl
loope
xor
dec
aaa
movsb
pop
lock
out
icebp
lds
out
inc
out
ljmp
icebp
jl
inc
xchg
test
mov
sahf
dec
dec
or
aas
sub
test
adc
add
jno
out
js
mov
jae
xchg
inc
rcrb
adc
sub
ljmp
lock
and
or
pop
addb
fildl
pop
in
call
adc
lods
pop
insl
mov
push
jp
xchg
add
mov
test
fcmovnu
inc
mov
jnp
imul
xchg
test
adc
xlat
mov
outsl
jnp
popa
fwait
scas
sub
test
add
decb
shlb
rclb
fsubl
aad
incb
fnstcw
mov
sub
addr16
pop
ftst
sbb
adc
stos
jns
daa
cmpsl
mov
fucomip
mov
mov
mov
lcall
in
push
dec
movsb
cmp
loope
lods
roll
xchg
lahf
dec
dec
lret
sub
adc
aam
enter
mov
or
movsl
ss
inc
shrb
test
push
stos
mov
push
mov
lock
inc
jge
fsubrl
arpl
pop
cmp
fwait
push
or
decb
into
stos
jg
sbb
jp
sub
iret
fnstcw
mov
lcall
inc
popf
xor
mov
sahf
daa
jmp
movsl
jg
roll
insl
xor
mov
lods
mov
jmp
cwtl
cmp
or
pop
rolb
loop
cltd
lea
mov
rorl
xchg
sub
shr
jge
jg
test
jns
aas
dec
jns
jo
inc
mov
cmpsl
xor
jbe
push
xlat
xor
or
sub
push
add
jmp
add
stos
pop
dec
jmp
repnz
mov
in
jg
dec
adc
xchg
popf
and
lahf
xchg
jmp
xchg
mov
mov
adc
jmp
hlt
roll
mov
lahf
dec
popa
jae
shll
arpl
jbe
add
hlt
add
dec
push
mov
repnz
pusha
jg
lock
icebp
out
aam
inc
pop
jmp
out
xchg
loope
mov
pushf
or
leave
ljmp
jmp
cltd
fisubs
stc
push
mov
mov
mov
push
xchg
fsts
loopne
dec
or
popa
jmp
dec
loopne
xchg
mov
mov
ret
rclb
jl
fsubrl
mov
aad
push
sarl
jns
stc
pushf
lea
and
add
aaa
cwtl
mov
cs
rol
add
fsubp
mov
fstps
je
loope
mov
xchg
and
adcb
loopne
aad
xchg
adc
add
xchg
xlat
push
and
les
mov
mov
paddsw
mov
dec
xor
aaa
or
adc
aam
adc
loope
inc
mov
add
jns
push
andl
add
pusha
sub
push
fstpt
pusha
add
fs
loope
ffree
fildll
push
dec
test
arpl
insb
and
ret
adc
jns
cmc
and
int
cmp
pop
int
int
inc
pop
and
xchg
add
jno
cmp
daa
fstps
sub
mov
insl
inc
add
daa
rcrl
xchg
push
and
movsb
hlt
pusha
xchg
sub
and
cmp
movsl
test
mov
sub
sub
add
jno
mov
movsl
push
insl
jl
inc
push
jl
adc
mov
adc
mov
and
cmp
pop
aad
sbbl
aas
and
stc
dec
xor
loope
add
mov
aad
lods
popf
dec
aas
pop
hlt
xchg
add
vdivps
dec
ret
popa
mov
push
cmp
mov
std
cmp
mov
cmpsl
and
push
mov
popa
ret
and
fwait
aad
xchg
cs
xorb
fstl
push
mov
mov
pop
aam
pushf
lahf
daa
xchg
dec
enter
ret
adc
push
daa
loope
lds
les
inc
pop
cmp
lods
leave
sub
std
add
das
and
fsubr
dec
aad
dec
push
loope
or
and
aas
insl
push
cmp
adcl
popf
cmp
out
adc
xchg
insl
arpl
aam
inc
fbld
mov
pushf
mov
std
inc
test
rorl
stc
insb
std
cmp
subb
loope
jnp
sub
adc
inc
mov
inc
cmp
xchg
adc
shl
cmpl
leave
in
in
inc
sbb
das
push
cmp
xor
imul
loope
mov
movsl
cltd
aas
test
sub
fs
jmp
fnstenv
sub
sbb
mov
mov
and
loope
into
aad
or
lret
dec
adc
bound
lret
dec
cmp
aam
call
aam
jp
clc
sub
or
mov
aad
pop
mov
lea
enter
mov
popa
rorl
aam
pop
call
addr16
hlt
jae
push
dec
in
scas
pop
mov
cld
ret
push
mov
jno
in
in
mov
stos
out
stc
shll
in
loope
mov
lea
push
xor
add
sub
cmc
outsb
iret
sbb
cld
std
lock
mov
lea
imul
push
or
test
std
lock
data16
or
fs
dec
lock
xor
into
fsubs
inc
shlb
or
fimull
insb
jns
jecxz
mov
fs
cltd
aaa
in
out
mov
cmp
outsb
or
adc
sub
jbe
push
orb
jecxz
push
orl
add
mov
lock
loop
data16
jo
pavgb
jmp
subb
roll
jb
aas
movsl
out
mov
sti
inc
aad
loop
out
prefetchnta
aad
dec
jle
mov
mov
dec
pop
sbb
fyl2x
xor
mov
push
popa
out
cli
fcoms
or
data16
jo
cld
jecxz
jo
inc
xchg
sbb
lods
jno
or
push
insb
or
out
loopne
inc
adc
dec
std
in
setb
imul
rep
sti
jp
mov
stos
cmp
int
push
jle
out
pop
lods
mov
ljmp
out
addr16
data16
sub
xor
mull
mov
jge
inc
and
in
adc
ss
lea
aad
mov
mov
bound
out
out
jle
jo
aam
in
jbe
outsb
pop
addr16
inc
out
scas
mov
rorl
or
push
shll
cld
push
push
aad
imul
out
mov
or
loopw
jae
fildll
mov
pop
or
in
push
inc
aam
imul
or
push
mov
lea
jae
leave
les
shr
call
xor
aam
jle
in
icebp
mov
aam
dec
jp
sar
rorl
mov
lea
sahf
ljmp
adc
in
rcll
in
cmp
popf
add
lret
pop
mov
dec
xchg
leave
pop
out
xchg
pushf
les
shl
push
out
dec
out
fucom
fwait
outsb
call
nop
cmp
lock
mov
iret
lret
je
xchg
loope
lcall
or
or
imul
sbb
lea
mov
aad
out
test
pop
in
ljmp
std
push
pusha
leave
mov
shl
add
out
in
sub
loopne
rolb
hlt
sbb
or
fdivrs
or
jo
jle
sub
adc
imul
popa
in
pop
cmpsl
mov
into
mov
out
mov
pop
sbb
push
fstl
sbb
bound
push
mov
call
dec
clc
adcl
jb
insb
adc
sbb
dec
and
mov
outsb
adc
mov
dec
cmpsl
push
mov
insl
pop
push
mov
addr16
dec
mov
lcall
aam
fisttpl
xchg
rolb
push
adcb
jg
aam
push
mov
push
leave
rcrb
shll
jmp
in
movhps
and
jmp
shll
sub
inc
lret
sti
das
shll
in
pushl
dec
fidivl
fs
lahf
jne
fmuls
mov
leave
push
mov
out
cld
aam
mov
addr16
mov
out
aam
mov
push
pushf
addr16
cmp
sbb
aam
clc
leave
or
mov
fcompl
mov
or
jecxz
loope
xchg
mov
fcmovu
lret
arpl
inc
xlat
arpl
jmp
jecxz
and
addr16
cltd
inc
lret
jno
fs
cmpsl
inc
inc
xorb
push
out
cmc
hlt
scas
xor
data16
pavgw
sbb
ja
pusha
xchg
jecxz
arpl
stos
ror
js
lahf
cmc
enter
aam
aad
or
in
adc
mov
addr16
xlat
cmp
fs
lea
cmc
lods
in
sub
mov
cltd
das
in
push
or
mov
incb
sti
aam
arpl
sub
in
pop
xor
out
mov
inc
add
push
sbbb
aam
out
cmc
mov
lock
mov
push
fcmovnbe
mov
es
mov
sub
mov
repz
shll
aad
cs
scas
es
in
lret
cmc
in
and
cs
pop
mov
mov
mov
adc
inc
xchg
out
jb
cmc
jo
clc
scas
icebp
cmp
inc
aad
jmp
sar
outsb
or
movsb
std
lret
or
stc
out
call
mov
jo
in
repz
adc
cmc
jnp
add
in
jmp
cmp
ret
xchg
jnp
imul
xor
stc
mov
lock
movsb
in
fcomp
aam
jle
addr16
jle
addr16
or
jmp
out
cmp
jbe
aaa
sbb
data16
xchg
jle
inc
decb
cli
jmp
jp
or
dec
or
cli
popa
in
add
data16
in
in
outsb
out
fsubs
lea
mov
xor
scas
aam
jno
loopne
inc
mov
pinsrw
cmp
xchg
fcomp
push
jle
loop
ret
or
shl
cmp
nop
ret
mov
data16
push
inc
mov
dec
data16
and
bound
lock
push
sub
xchg
sti
cmp
and
cmp
mov
bound
xor
out
inc
addr16
std
mov
cld
bound
call
cmpsb
data16
mov
inc
out
fsubs
popa
imul
sti
xor
rorl
cmpsl
in
mov
sti
pop
les
ret
aam
movsl
adc
jecxz
pop
std
pusha
ss
fwait
les
cmp
jo
fcomps
xor
jmp
inc
sub
push
push
je
jle
cmp
xchg
push
pop
inc
std
push
repnz
mov
lods
or
dec
inc
push
es
pusha
xchg
add
inc
cmpsl
pop
stos
add
xchg
cltd
push
aam
mov
mov
mov
out
sbb
or
mov
add
jle
bound
into
pop
lds
outsl
or
push
push
push
insb
jge
rorb
or
or
out
popa
push
push
lea
cwtl
in
or
frstor
fcmovb
in
xlat
mov
xchg
out
je
lea
or
insl
stos
aam
out
push
mov
jmp
or
sti
jecxz
lea
mov
cmp
push
push
cmp
sbb
jb
rcr
inc
xchg
int
jp
jmp
push
mov
mov
lahf
loopne
call
pop
cmpl
aam
xor
sub
pusha
and
cmp
xor
daa
rorb
jmp
add
sti
out
jle
mov
lcall
adc
pop
rol
mov
push
int3
inc
out
jle
pinsrw
mov
push
cld
rorb
xor
push
push
and
in
je
mov
fwait
rorl
fsubl
cmp
bound
jg
mov
divb
ret
into
lock
and
cmpsb
cld
les
mov
shrl
mov
out
cmp
outsb
data16
sbb
hlt
data16
push
pusha
xor
fistpl
push
sbb
out
mov
aam
mov
movsb
xchg
loop
in
mov
or
outsl
xchg
jp
lahf
mov
test
xor
sbb
pusha
out
sbb
addr16
jo
adc
test
int
in
adc
es
mov
xor
jns
inc
sarl
or
xchg
push
mov
int
scas
adc
cmp
in
or
jno
sti
jl
mov
in
shl
repz
sbb
push
imul
pushf
sub
ds
pop
outsl
inc
add
pop
inc
out
xchg
rcll
out
and
dec
jnp
popf
mov
dec
mov
push
addr16
call
inc
xchg
push
cmp
sbb
out
pop
ret
xchg
lock
push
or
in
stc
and
adc
add
or
dec
aaa
add
pop
aam
lret
sub
into
cld
push
and
mov
adc
gs
push
into
push
shrl
stos
movsl
jbe
dec
sti
or
jecxz
cmp
and
adc
or
or
pop
mov
lock
mov
lock
add
cltd
push
or
lcall
xor
adc
addr16
in
pop
std
mov
test
rcr
inc
xor
cmpsl
addr16
mov
push
popa
sahf
or
dec
inc
cmc
mov
ss
push
and
pop
orl
psubb
gs
cmp
ja
push
addr16
paddb
jl
cltd
jle
jg
aas
mov
adc
dec
arpl
int
cmpsb
inc
jo
cs
dec
or
push
mov
adc
sub
loope
rorb
fbld
in
cmp
xor
in
in
call
push
popa
dec
insl
jmp
push
xor
ud0
cltd
out
sub
fistpl
pop
dec
loope
in
xchg
or
dec
popa
jns
pop
outsl
xchg
dec
mov
pop
out
pop
jno
pop
xlat
mov
cmpsl
and
addr16
lods
cmc
inc
in
pop
pop
aam
jo
insl
xchg
incb
repz
pop
sub
dec
push
rolb
out
mov
roll
ss
pop
pop
test
push
fs
dec
in
push
push
add
and
push
inc
ljmp
sub
out
movsb
mov
shlb
inc
ret
in
shrl
outsb
out
jo
aam
mov
ds
nop
push
decb
push
inc
or
jmp
in
add
fcmovb
xchg
or
out
fxch
cmp
hlt
adc
mov
sahf
hlt
sbb
jle
jae
xchg
jge
aaa
xchg
loop
cld
jle
lret
jl
xor
mov
rorb
jecxz
fmul
or
cmc
popaw
pop
or
sub
cld
mov
or
aad
aam
or
sbb
or
out
mov
popa
jo
lret
lea
jp
jo
adc
mov
jl
cmc
jp
jl
cmc
push
jp
or
leave
mov
lret
pop
and
hlt
into
stos
or
into
add
sub
into
lods
stos
push
or
or
fisttps
outsb
mov
jno
jo
arpl
loop
sbb
stc
mov
jo
in
sbb
loope
insb
icebp
or
out
loop
cmc
in
notl
aaa
cltd
sub
add
push
mov
not
jp
cltd
or
push
leave
or
or
push
cltd
sbb
mov
or
stos
adc
or
icebp
or
mov
loop
sbb
mov
cmc
aaa
sbb
cmpsl
xchg
loopne
insl
fsubr
sub
in
ljmp
movsb
mov
pop
jmp
in
loope
test
icebp
fwait
popa
cmp
mov
mov
leave
loop
pop
dec
int
or
nop
leave
loope
sub
and
or
adc
xchg
and
add
stos
sar
mull
loope
xchg
mov
jb
inc
lods
icebp
enter
xor
jmp
clc
cmp
lods
rcrl
lods
imul
lcall
or
movsb
in
xor
les
xchg
xor
mov
inc
icebp
enter
mov
jne
mov
xchg
mov
icebp
cli
or
jmp
ljmp
jp
stos
pop
hlt
imul
cli
xor
addr16
into
push
sub
int3
bound
enter
es
testl
loopne
cmc
orl
mov
in
in
cmc
ja
sub
mov
sbb
dec
and
into
cld
sub
jmp
cmc
insb
jl
fsub
lret
mov
dec
add
stc
in
int
aad
jns
lret
les
insb
std
sbb
popa
icebp
shll
push
fucomp
jnp
mov
jmp
jnp
fidivrs
loopne
stc
mov
stc
jbe
cltd
icebp
dec
or
mov
inc
stc
lods
jp
inc
cli
pop
stc
jns
loop
cmp
push
in
stc
jns
pop
in
bnd
stc
or
mov
aad
in
shl
out
mov
cmc
pop
jmp
inc
stc
repnz
adc
dec
fwait
mov
out
mov
and
cli
loope
loop
cld
vshufps
jecxz
dec
clc
jno
cli
dec
es
inc
aad
lods
mov
movsb
imul
bound
in
fmul
xor
ljmp
cmp
cmp
push
stc
and
cmc
stc
jbe
mov
mov
fldl
cli
jg
adc
inc
jmp
insb
leave
or
sub
int
jne
jp
push
out
jecxz
cmpsl
cmc
test
mov
in
mov
or
shll
ds
mov
cwtl
add
lock
rcl
sti
jne
mov
stc
mov
push
adc
aad
xchg
adc
hlt
xchg
mov
xor
mov
add
std
adc
popa
sbb
cs
rcr
popf
fnstenv
jle
jmp
daa
stc
xlat
enter
test
out
rcr
mov
and
daa
mov
mov
adc
in
and
jno
in
adcl
insb
inc
popa
ficomps
jno
adc
stc
xor
iret
mov
dec
std
fnstsw
loop
push
popa
and
ficompl
inc
nop
mov
mov
stc
mov
subb
fnstenv
cs
sbb
jae
inc
adc
cs
dec
sbb
pushf
dec
mov
ret
xor
out
mov
shrl
dec
mov
push
push
sbb
stc
rol
and
adc
test
sub
mov
sub
cmp
sub
cld
push
fistl
cld
adc
lods
mov
mov
and
inc
sub
insb
mov
cmp
test
xor
aaa
in
test
lret
xchg
in
in
jnp
fiaddl
and
fdivrl
fldt
mov
lea
and
das
jbe
mov
nop
in
mov
in
cmp
in
mov
faddp
shr
in
xor
frstor
add
das
mov
mov
fstp
test
mov
mov
mov
and
mov
xchg
test
add
aad
add
dec
lea
insl
mov
movsl
test
or
insl
int
bound
or
push
sbb
mov
push
test
fsts
int
in
insl
out
adc
daa
mov
inc
mov
xor
mov
pop
xchg
fldenv
lds
cmp
xchg
mov
mov
and
dec
andb
mov
mov
rcll
sub
sub
das
es
rorl
stos
sub
les
cs
dec
out
cmp
jmp
nop
ds
pop
xchg
xor
loope
loope
pushf
cmc
loope
xchg
shl
mov
stc
jecxz
rolb
mov
mov
scas
lods
nop
scas
call
xlat
inc
xchg
std
cwtl
xchg
stos
loope
test
fcomps
fists
xchg
xchg
cmpl
push
or
mov
dec
jmp
jo
dec
sar
mov
pop
xchg
in
ljmp
ret
movsb
jo
out
mov
lds
mov
ret
loope
scas
rorb
loope
mov
cwtl
pop
les
out
jmp
loopne
loopne
dec
lret
sti
dec
stc
shrl
fbstp
jge
pop
mov
mov
mov
fsubr
inc
push
sub
fucomi
dec
or
les
jmp
xor
jecxz
lock
out
in
shr
inc
xor
sti
ljmp
xchg
jg
sbb
sarl
pop
jmp
stc
cmp
sti
std
loopne
and
mov
and
outsl
xor
decb
pop
lock
jl
cmc
mov
shrl
out
into
call
in
push
out
lods
mov
and
icebp
pop
ljmp
lods
icebp
mov
pop
in
cmp
dec
fcomps
das
or
and
mov
call
pop
sub
sub
leave
xor
daa
mov
push
push
sub
stos
pop
notb
sahf
inc
sti
stc
adc
mov
cmp
xor
mov
mov
cs
fld
cmp
push
int
loopne
aad
test
add
dec
fcom
add
fwait
mov
gs
daa
xchg
and
and
insl
fists
dec
sbbl
mov
fwait
mov
jmp
lds
adc
shl
pop
cmp
sti
lea
mov
lcall
sub
loopne
mov
jl
daa
adc
insl
daa
imul
cld
cld
push
test
fmuls
in
jecxz
or
sbb
aam
aad
addr16
mov
out
xchg
sub
pop
cld
push
mov
loope
push
test
cmc
or
outsl
fnstsw
mov
cld
popf
nop
sti
fwait
or
xchg
insl
loopne
test
test
std
mov
lea
repnz
sbb
adcl
or
inc
jne
rolb
les
int
inc
xor
sub
addr16
pop
jg
push
aad
cmp
outsl
popf
mov
loope
mov
mov
arpl
std
pop
addr16
aad
outsl
xchg
xchg
jno
mov
mov
stc
cwtl
sti
les
jnp
mov
lea
movsb
idiv
and
sub
xchg
jae
pop
cmp
ret
fdivrs
ljmp
lods
in
cmc
mov
pop
aad
addr16
or
xchg
aas
std
std
cld
in
in
sti
in
cli
daa
mov
xlat
ljmp
movsl
in
cs
sub
out
xor
loopne
cmp
popf
int
lods
sti
xchg
out
jle
mov
movsl
add
cmp
lock
sbb
dec
push
popa
icebp
dec
or
add
or
hlt
jb
cmc
fadd
clc
mov
test
sbb
or
xor
mov
addr16
mov
cmpsl
sub
mov
xor
xchg
cmp
jno
mov
test
jno
dec
inc
stc
mov
pop
and
int
pushf
dec
add
leave
mulb
rorb
rcrb
icebp
jle
cmp
xor
leave
or
cmpsb
mov
in
mov
cmp
imul
mov
and
push
test
movsb
xchg
mov
mov
adc
mov
pop
imul
leave
ss
or
mov
or
lods
cld
sbb
xchg
pushf
dec
aad
jae
pushf
lahf
mov
mov
xorb
fsubrl
aas
mov
mov
stc
shrb
xchg
leave
xchg
xchg
aad
scas
mov
lret
popa
hlt
sarb
out
ss
nop
push
jmp
daa
mov
sub
leave
xchg
popf
mov
dec
mov
in
dec
cmp
cmp
imul
leave
pushf
mov
jne
out
mov
push
out
or
adc
mov
out
cld
cmp
movsl
add
and
xor
adc
dec
fnstenv
dec
lea
leave
ret
and
or
xor
mov
cmp
mov
mov
sub
cs
sarl
sub
adc
test
mov
mov
in
ret
popf
pusha
dec
out
lea
mov
std
adc
mov
movsl
mov
jno
mov
imul
and
dec
sti
int
jno
cmp
or
popf
insb
sub
insl
xor
and
stos
mov
and
stos
in
xor
adc
jp
fimull
out
inc
les
jmp
adc
mov
movl
push
dec
rcrb
shrl
cmc
mov
stc
aad
xchg
subl
dec
mov
enter
movsb
icebp
mov
mov
rclb
dec
cltd
sarb
mov
xchg
bound
jo
push
inc
imul
mov
std
pop
insb
jmp
mov
cmpl
push
jmp
sub
and
imul
cltd
iret
pushf
aad
out
les
enter
xchg
mov
mov
mov
pusha
insl
jge
lea
jns
enter
mov
bound
and
sbb
movsl
sub
cmp
inc
dec
in
add
mov
jge
rorb
jae
adc
lahf
ljmp
cld
mov
xor
mov
xchg
cmp
bound
adc
inc
mov
xor
insl
jle
lock
adc
add
mov
in
inc
test
enter
fsin
shl
dec
adc
aas
or
cmp
sub
and
jo
loopne
fmull
mov
and
int
cmp
xor
pop
xchg
jle
mov
xchg
cmp
mov
cmpsl
xor
sarl
sub
cltd
cmpsb
cwtl
cld
test
test
push
enter
ds
aad
push
lock
iret
mov
adc
adc
fmull
push
cli
enter
mov
dec
das
ja
mov
xor
movsb
shrl
mov
lcall
sbb
push
mov
test
cmp
cltd
aas
pushf
lock
rorl
mov
fidivl
mov
icebp
adc
and
pop
aas
xchg
xor
test
adc
in
rorb
jge
cmp
mov
and
pop
jge
adc
aad
addr16
pop
xor
sub
inc
movsl
adc
push
sti
add
adc
movsl
lea
pop
mov
in
in
xchg
popf
jecxz
and
and
out
sub
int
sub
lcall
or
nop
jp
call
and
outsb
loopne
inc
and
in
cs
int
and
sub
xchg
mov
stc
pop
xor
adc
xchg
cltd
rcrl
test
gs
add
scas
mov
adc
arpl
add
mov
stos
sub
inc
push
fldl
mov
dec
ret
in
and
jecxz
cmpsb
cmp
rorb
loope
mov
icebp
inc
es
mov
adc
add
out
jl
add
pushf
arpl
imul
pop
lea
adc
adc
sub
and
push
or
inc
test
in
movsb
cmp
test
xchg
mov
cltd
jge
insb
mov
filds
inc
in
fisttpll
cld
scas
in
outsb
xor
jge
or
cmp
fstl
scas
sub
dec
lds
cmp
mov
sbb
in
gs
sbb
sbb
xor
in
sbb
mov
cmp
mov
call
test
out
in
aas
pushf
jae
jne,pn
mov
pop
test
in
sub
movsb
in
mov
lea
int3
stc
mov
lea
push
sbb
sbbb
or
push
and
addr16
fisttpll
mov
adc
and
jmp
std
lds
jnp
std
fxam
cmpsb
call
hlt
cmpsl
outsb
jae
jbe
inc
cmpsl
std
aas
aam
xlat
lods
int
pop
inc
fisubl
aad
adc
aas
push
sub
ja
jno
lea
insl
adc
cld
aas
xchg
stc
mov
shll
xchg
push
sub
jge
xchg
fsubr
lock
sbbl
int3
in
ja
movsl
mov
mov
sbb
fyl2x
popf
mov
icebp
dec
adc
xor
pop
out
push
in
xor
sub
lea
fistpl
push
in
mov
fldl
fistl
cmp
push
lock
jbe
mov
lods
movsb
and
inc
int3
jns
sub
mov
leave
repnz
popa
movsl
mov
imul
adc
mov
lock
sub
mov
popf
lcall
pop
icebp
cmp
jnp
mov
mov
iret
cmpsl
xor
sub
xchg
insl
in
ds
fwait
insl
out
arpl
and
sbb
inc
push
mov
das
xchg
push
popa
mov
ds
push
adc
mov
rolb
push
stc
push
lcall
mov
xor
mov
mov
mov
add
les
sub
sbb
lds
mov
adc
out
xor
lds
sbbl
ds
and
xor
xor
mov
cmp
and
test
dec
lea
lock
gs
insl
mov
movsb
popa
mov
in
jge
loopne
insl
shlb
mov
lds
icebp
mov
jns
rclb
fstps
adc
lods
cmp
int
or
and
mov
cmp
jns
mov
cmp
jp
leave
cmpsl
loop
pop
arpl
adc
out
sub
cmc
dec
sub
jns
mov
adc
pop
movl
jmp
mov
cmp
pusha
pop
pop
out
and
enter
mov
inc
mov
mov
ss
out
cmp
mov
mov
xchg
sti
xchg
orl
add
dec
mov
mov
dec
gs
ljmp
or
das
mov
shrb
popa
pop
out
and
dec
into
arpl
adc
sub
push
mov
cmc
sti
cmp
lea
inc
out
xor
gs
stos
movsb
xor
xor
and
cmp
and
mov
jge
jle
jno
jbe
sarb
enter
leave
popa
and
shrl
and
mov
out
leave
mov
test
pop
mov
sub
shlb
xchg
jae
mov
jle
movsl
and
je
push
lock
in
sub
loop
dec
std
adc
mov
mov
aas
ret
xor
loopne
lea
mov
fstp
test
jmp
mov
in
sti
add
jnp
jnp
sbb
lds
inc
leave
pushf
flds
fisttps
jge
push
cltd
mov
icebp
jno
pop
xchg
cmp
adc
aam
clc
mov
pop
sbb
and
adc
imul
sbb
in
inc
inc
sbb
add
mov
scas
cltd
in
mov
and
daa
inc
sbb
jge
sbb
popf
aaa
test
mov
out
or
dec
sti
adc
je
das
push
loope
sub
std
xor
cmp
outsb
mov
cmp
fcmove
cld
jne
repnz
jmp
sbb
sarl
inc
out
test
ds
add
jnp
hlt
mov
out
jge
in
xchg
jns
push
dec
test
std
mov
imul
jno
sbb
adc
movsb
sub
in
mov
jnp
movsb
data16
cmp
insl
cmpsl
nop
imul
in
sbb
jg
out
dec
dec
mov
loope
fmulp
xor
ds
icebp
and
aam
inc
xor
in
gs
jnp
lods
add
and
sbb
lret
mov
shll
cmp
call
icebp
aas
pop
popf
jno
and
out
int
iret
push
mov
and
rolb
add
in
cmpsb
xchg
imul
in
lea
xchg
and
sti
mov
jmp
dec
inc
sbb
dec
dec
out
jl
and
push
jmp
mov
jecxz
mov
mov
scas
addr16
enter
fsubr
dec
xchg
shll
xchg
sub
push
jae
adc
imul
cltd
jecxz
mov
pop
mov
sar
fdivrs
in
imul
pop
mov
jge
cmpsb
adc
test
cltd
lds
in
decl
add
cmp
lock
lods
jl
push
sub
in
adc
pop
sub
adc
push
in
dec
test
aam
stos
frstor
mov
inc
jmp
pop
push
xor
xchg
popa
ffree
outsl
mov
cltd
adc
adc
sarb
sarl
cmp
mov
in
iret
dec
cwtl
push
inc
shr
jns
push
aam
int3
mov
icebp
jno
jae
fldt
and
std
mov
and
std
inc
sbb
xor
sub
adc
mov
out
mov
notl
aam
dec
stc
xor
xor
and
xor
movsb
and
enter
rcrl
mov
pop
jmp
and
cltd
imul
jno
xorl
cmpl
jns
stos
dec
inc
adc
xchg
int
jmp
dec
adcl
pop
xchg
inc
pop
push
push
icebp
inc
mov
sbb
andl
shll
loope
and
xor
in
and
in
or
jno
and
mov
insb
dec
cmp
pop
add
cmpsb
aad
dec
mov
pop
cmp
or
mov
mov
loopne
cmpsb
fs
fstpl
xchg
adc
jo
add
sti
push
out
das
rorl
popa
cs
shrb
lods
and
jl
cmp
mov
sub
pop
cmp
cmp
push
fdivs
jnp
sbb
les
insl
std
ffree
jnp
mov
ja
dec
push
ds
and
xor
mov
mov
cmp
in
cmp
movsb
aad
cmp
test
pop
push
stos
or
sub
dec
inc
cmp
out
fnstenv
leave
inc
arpl
movsb
fstps
mov
cmp
stos
es
popf
mov
lods
popa
xlat
fnstenv
pop
inc
jne
mov
cltd
mov
lods
inc
and
mov
cmp
pop
push
sbb
mov
cmp
jno
stos
add
aas
pop
andl
and
adc
jns
mov
pushf
movsl
in
xchg
movsb
scas
xchg
int3
shl
iret
scas
add
and
ret
std
sub
movsb
pop
lea
xchg
jmp
aas
jb
or
jnp
cmpsb
xor
in
test
aas
mov
inc
adc
pop
sub
lock
repz
adc
xor
int
out
cwtl
lds
mov
mov
in
add
cltd
dec
mov
iret
lods
stc
out
cmp
sarl
imul
mov
xor
jne
sub
inc
xchg
lock
popf
push
fcos
sub
or
mov
aas
leave
hlt
js
stos
leave
adc
rcr
and
cli
int
and
movsl
out
cmp
or
daa
shr
or
pushf
int
push
in
xor
sub
pop
jnp
inc
into
popf
adc
xorl
jnp
lea
xor
dec
mov
xor
adc
mov
insl
cmpsb
icebp
mov
gs
xor
mov
mov
jmp
push
mov
mov
stc
cmpsb
pop
sub
rcrb
test
arpl
ja
mov
mov
out
mov
int3
in
push
jbe
jne
dec
jbe
jmp
jae
and
mov
jno
js
dec
gs
shll
cs
lret
jns
test
xchg
push
sbb
sub
mov
cmpsb
cmc
or
or
adc
jno
jnp
iret
lret
ror
mov
dec
pop
xor
xchg
mov
cmp
pop
mov
cmp
aas
push
popa
aad
mov
sbb
dec
popa
pop
insb
loope
dec
pop
loope
mov
aas
inc
pop
repz
mull
movsl
fstl
adc
dec
xchg
sti
push
call
leave
cmp
mov
inc
icebp
and
int
pop
inc
mov
notb
xor
pop
mov
sbb
fwait
mov
pop
cmp
lds
aad
lea
push
cmp
push
lock
dec
cmp
rcrb
popf
movsl
sub
out
hlt
icebp
mov
jo
mov
icebp
mov
icebp
rclb
push
jge
cmc
sub
adc
or
mov
in
sub
xor
shll
push
jge
stc
test
and
mov
cmp
lea
lea
movsl
mov
or
mov
pushf
in
xor
in
xor
inc
pop
fcmovb
adc
mov
sub
int
jb
sti
pop
sub
andl
adcb
push
mov
pop
loope
xchg
cs
sar
mov
fwait
cltd
jne
dec
and
loope
add
push
sub
shrl
hlt
repz
cmc
or
testl
mov
dec
push
ljmp
notl
arpl
leave
cld
icebp
lret
add
stc
sbb
cli
or
int3
cmp
in
jmp
ljmp
jecxz
icebp
jp
ljmp
ror
das
push
into
clc
test
sub
pop
or
cli
mov
sub
adc
icebp
gs
mov
stc
add
clc
stc
ja
or
sbb
insb
push
leave
int3
cs
mov
dec
or
jb
or
icebp
mov
sbb
aad
popa
jmp
dec
test
jle
ljmp
add
sbb
or
pop
lret
stc
mov
cmc
pop
or
ret
in
xchg
enter
sbb
aas
subl
inc
adc
dec
jns
fisubrs
aas
xchg
int
xor
shlb
or
lods
cmp
int3
inc
loope
and
pusha
sub
in
leave
sub
sub
push
mov
lret
jo
cmc
cltd
addr16
push
xor
loope
mov
mov
in
jge
jle
pop
push
mov
leave
shl
ds
andl
sbb
outsb
dec
xchg
popa
int
add
and
jne
inc
lret
mov
jns
ja
fs
lods
sti
leave
imul
add
xchg
inc
push
mov
cmp
sbb
push
inc
push
and
mov
mov
mov
mov
xor
xchg
dec
xor
lret
cmpsb
cltd
sub
or
mov
sbb
xchg
jle
imul
dec
daa
fxch
lds
mov
inc
jge
add
mov
adc
cmp
inc
aam
jno
sub
test
cmp
push
inc
xchg
jnp
mov
test
dec
ret
jmp
in
insb
movsb
add
xchg
xchg
add
or
stos
test
cltd
daa
push
adc
mov
dec
addr16
sarl
pop
popa
ljmp
push
movsl
and
sbb
jge
adc
adc
popa
stos
and
loope
aas
xchg
std
aaa
jge
stos
dec
out
insb
sub
xor
int3
in
gs
aad
decl
cmpsb
adc
pushf
test
jmp
fnstcw
pop
or
movsb
fsts
cmp
loope
or
sbb
icebp
dec
xchg
mov
sub
push
xchg
add
and
rol
int
or
lock
jle
repz
add
xchg
and
cmp
dec
inc
aas
mov
dec
and
dec
mov
icebp
dec
test
adc
pushf
sahf
test
cltd
test
jge
mov
lret
jns
movsb
and
je,pt
sub
leave
xchg
fldcw
mov
sub
xchg
js
popf
pushf
jns
jo
sarb
xchg
in
stos
icebp
dec
arpl
in
addr16
jge
dec
and
cmp
sbb
xchg
xchg
xor
jo
imul
sti
or
sbb
jns
jnp
lods
mov
clc
pop
mov
mov
push
lret
test
in
and
dec
fisubrl
adc
out
stc
fisubrs
in
or
jnp
inc
loope
loope
mov
push
out
fdiv
sub
test
frstor
or
sub
mov
jge
imul
aas
les
ror
and
jmp
iret
mov
lods
xchg
add
pushf
dec
xor
sbb
pop
or
movsb
cmp
cmp
es
outsl
cmc
push
sub
cmp
mov
aad
movsb
dec
shr
and
out
xchg
sub
or
call
mov
dec
fstps
sub
xchg
daa
dec
mov
cmp
add
cmp
mov
cmc
sbb
xor
shlb
imul
ret
out
arpl
mov
xor
dec
sti
dec
add
stc
mov
subl
lds
fnstsw
in
and
sub
push
jmp
mov
loope
gs
and
inc
and
or
adc
jg
push
ja
or
mov
inc
or
stos
pop
mov
mov
aam
push
mov
lcall
add
add
aas
mov
mov
inc
sbb
adc
lods
aas
xchg
push
rolb
mov
out
je
push
inc
mov
inc
mov
mov
in
cmp
lea
pop
xor
jnp
movsl
mov
movsb
mov
dec
scas
pop
inc
or
sbb
std
lods
aad
jne
movsl
mov
fisubrl
xchg
adc
outsl
in
or
in
jmp
rcll
sti
addr16
xchg
lods
in
xor
xchg
call
out
adc
jne
shrb
lods
pushf
pushf
movsb
inc
jne
or
mov
popa
mov
jg
cmp
adc
jmp
scas
gs
hlt
xchg
mov
or
stos
or
ds
stos
inc
in
adc
aas
scas
xor
jnp
icebp
pop
lret
xchg
dec
cmpsb
push
in
ficompl
sbb
mov
jmp
dec
test
add
inc
pushf
and
dec
outsl
mov
pushf
mov
push
fstl
pop
vpaddq
pop
gs
frstor
sbb
cmpsb
jmp
mov
cwtl
insb
or
test
xchg
or
std
jnp
lea
int
jnp
jns
add
pop
cmovns
sbb
cmp
and
fidivrs
xchg
gs
pop
scas
popa
sbb
lret
jmp
gs
push
scas
jae
inc
inc
enter
icebp
jnp
mov
mov
dec
dec
je
loope
lods
inc
mov
lds
outsl
shrl
jns
push
inc
fdivrl
jge
mov
adc
test
icebp
xchg
dec
imul
in
adcl
mov
syscall
xor
lock
or
aam
test
lods
xor
out
lea
fistl
xor
popf
cmpsb
pusha
push
lret
cmpl
xor
mov
push
cltd
push
movsl
arpl
lea
adc
jns
nop
test
mov
outsl
imul
call
lods
lds
jmp
iret
lea
loop
push
cmp
and
movsb
out
adc
sbb
push
fs
imul
cwtl
or
push
out
shr
xchg
adc
cmpsb
adc
in
sub
jns
int
sarb
sub
in
adcl
stos
insl
sti
xchg
test
test
pop
stos
mov
icebp
fimull
mov
jns
pop
insl
in
insl
and
sbb
mov
mov
in
jns
xchg
int
add
jns
shl
fs
dec
in
mov
cmp
in
sub
jnp
adc
pop
adc
movsb
scas
cltd
push
mov
mov
mov
adc
mov
xchg
or
in
in
or
sbb
in
dec
pop
test
frstor
cmp
xor
in
cmp
leave
cmp
shlb
ds
mov
push
inc
push
cmp
insb
jnp
scas
int
arpl
dec
cmpsl
adc
cmpsb
lods
mov
rorb
jnp
or
pop
ds
in
xor
popf
rcl
xchg
mov
lods
cld
pop
mov
sub
cs
and
mov
loope
jbe
and
aad
mov
jp
sub
pop
test
fiaddl
inc
push
mov
or
popf
mov
push
dec
lock
lds
stc
popa
jno
jns
popl
push
jge
movsb
or
in
stos
jl
mov
iret
xchg
dec
test
imul
fiadds
pop
sub
sbb
aas
imul
push
add
stc
xchg
andl
test
iret
popf
xor
test
arpl
mov
iret
cmp
ret
inc
dec
push
jge
cmc
xor
mov
popa
mov
movsl
in
jnp
xchg
adc
xchg
in
adc
cmpsb
subl
add
add
or
mov
rorl
gs
aas
out
adc
adc
sub
stos
lret
in
bound
lret
jb
cwtl
jge
lea
cwtl
xlat
fcmovu
es
test
mov
xor
mov
xor
fs
lods
jp
jns
mov
cmp
and
mov
mull
clc
movsl
push
cld
or
push
jno
loopne
leave
in
mov
sbb
or
loopne
adc
aam
cld
lods
jno
sarb
or
jnp
jb
cmp
loope
daa
shll
jge
scas
mov
aad
std
shll
pop
mov
iret
jno
jmpw
int
cmp
push
addr16
cmp
out
or
push
and
cmp
dec
pop
jae
add
stc
cmp
cltd
adc
sub
movsl
mov
pcmpeqw
punpckhwd
stos
push
sub
ret
gs
decl
cmc
sbb
js
jno
and
cli
ds
mov
dec
leave
roll
enter
add
push
rcll
scas
popa
mov
jae
pop
cltd
shrl
lds
sub
xchg
add
mov
imul
movsb
xor
or
popf
scas
mov
jle
sahf
adc
out
mov
and
jns
jne
xlat
push
mov
cwtl
xor
movsl
xchg
fdivl
mov
mov
sbb
leave
push
xor
movsl
sub
xchg
int
fsubl
mov
sub
jge
aaa
cltd
and
inc
pop
mov
xor
jnp
sub
dec
mov
xchg
int
sbb
jnp
scas
test
jge
sti
ljmp
std
lea
test
and
shl
mov
sbb
and
ret
cmp
jle
add
mov
xchg
lcall
insb
fucomp
iret
sbb
mov
cwtl
cmp
les
fnstsw
fists
je
jle
cltd
gs
adc
pop
cmp
in
ret
fdivrs
cmp
and
ljmp
add
or
mov
and
mov
loopne
movsl
push
popf
or
jg
push
adc
pushf
mov
sti
mov
sub
lcall
cmp
in
or
inc
or
xor
xor
stos
mov
sub
dec
and
sub
cmp
stc
jmp
cli
dec
mov
cmpsl
add
jmp
into
fimuls
lock
or
orb
dec
iret
sbb
pop
ljmp
in
lock
xchg
inc
and
scas
adc
jo
ror
mov
out
jne
xor
mov
jecxz
daa
jns
loop
inc
add
xor
or
sub
cld
enter
mov
sub
sub
mov
and
loopne
mov
les
xlat
mov
mov
mov
cmpsb
loop
jns
cld
mov
call
fiaddl
fcompl
sub
inc
mov
mov
lds
mov
mov
lret
test
inc
decb
loop
mov
shl
push
aaa
cmp
xorl
fucomi
mov
fsub
cmp
jne
mov
push
sahf
inc
insl
cmpsl
in
mov
or
dec
lods
lcall
popf
into
sahf
mov
mov
sbb
and
cmp
jp
shr
xor
mov
les
imul
icebp
mov
push
inc
push
mov
and
out
fldl
negl
test
pushf
xchg
in
movsl
mov
loope
movsl
adc
enter
movsb
stos
dec
test
sbb
sub
or
movsl
inc
fimuls
in
add
and
out
adc
loopne
repnz
push
shll
pop
push
repnz
call
inc
stc
push
mov
loope
push
shl
in
fiadds
dec
jle
lea
js
mov
push
loope
int
dec
push
rorb
lret
fmull
pop
dec
xchg
in
dec
inc
fcomps
push
fisttpll
jbe
fwait
xchg
or
push
pop
add
in
and
mov
fmull
dec
mov
or
fisttpl
dec
out
mov
loopne
int3
stos
fwait
mov
cmp
loop
jnp
sbb
sar
pop
mov
out
dec
jle
lods
mov
mov
cmp
pop
or
push
mov
jge
jo
pusha
int
cmp
xor
adc
movq
mov
aas
das
pop
mov
xchg
orb
and
add
inc
xor
jge
mov
movsl
push
in
loopne
sti
lea
mov
jl
std
mov
mov
stos
mov
fwait
test
rorb
out
ror
mov
outsb
rorb
nop
sub
outsb
or
adc
pop
mov
add
push
movsb
lods
sub
xchg
hlt
std
xchg
inc
adc
div
in
lahf
rorb
test
adc
inc
ss
js
mov
push
push
imul
adc
jae
push
fisttps
bound
repnz
stos
mov
and
ljmp
mov
jo
aaa
pop
cwtl
push
mov
jb
adc
push
insl
mov
mov
lcall
out
inc
dec
inc
rcll
xchg
mov
adc
sbb
fdiv
addr16
dec
repnz
xchg
lds
mov
sub
es
add
xor
lcall
lods
cmp
ret
pop
cmp
adc
cmpsb
xchg
mov
jne
pop
test
repz
cmp
and
and
sub
add
cmp
mov
dec
adc
jbe
or
jae
fstps
lods
mov
in
add
icebp
movsb
jb
mov
mov
es
adc
sub
cwtl
out
xor
fadds
sub
inc
lods
cmp
xchg
outsb
loopne
and
fistpll
testl
aas
clc
fsubrs
movsb
mov
xchg
data16
xlat
and
push
out
dec
or
out
dec
idivl
outsb
xchg
out
sbb
adc
lahf
test
mov
push
sbb
jg
loopne
jp
mov
lret
inc
mov
dec
enter
pop
mov
dec
add
lret
pop
adc
lcall
xor
push
xor
cli
dec
into
and
lods
mulb
imul
call
dec
pop
and
scas
jb
xchg
mov
enter
inc
sbb
ss
aaa
inc
mov
push
std
adc
or
cmp
dec
jne
lods
adc
mov
shr
jnp
mov
dec
mov
cmpsl
or
mov
cmp
cmpsb
xchg
rorb
inc
movsl
add
mov
pushf
call
lret
rorb
scas
enter
mov
or
xchg
pop
outsl
mov
fdivl
scas
mov
mov
mov
or
dec
stc
push
fisttpll
lret
repz
add
aaa
and
jae
mov
mov
sbb
mov
clc
shr
popa
or
mov
mov
lods
jl
push
mov
adc
mov
out
nopl
in
pop
fwait
adc
aad
gs
leave
pop
or
push
mov
loope
cmp
jnp
xlat
dec
mov
mov
xor
pop
pop
mov
adc
iret
ja
push
or
xor
gs
inc
push
iret
sub
inc
rcrb
mov
sbb
add
mov
iret
mov
icebp
adc
repz
jg
xchg
mov
jb
add
imul
scas
mov
mov
add
imul
rcrl
push
inc
jno
add
or
lds
clc
sub
ljmp
push
jp
cwtl
out
add
mov
insb
hlt
loopne
mov
mov
pop
popf
sbb
and
and
mov
repz
cmp
out
xchg
gs
pop
out
out
xor
sub
bound
mov
push
add
push
adc
mov
mov
sbb
xchg
pushf
mov
stos
jecxz
xchg
inc
mov
or
popa
shll
mov
push
adc
cmp
dec
xorb
out
ficoml
xor
cmp
mov
mov
pop
push
cmc
jecxz
inc
adc
add
icebp
inc
jb
mov
push
jnp
mov
pop
aam
leave
fistpll
mov
add
sbb
pop
xchg
mov
sub
arpl
push
pop
xor
dec
inc
icebp
lock
pop
mov
dec
jbe
add
testl
push
les
mov
iret
mov
mov
cli
mov
adc
or
sub
pop
pop
fwait
movsb
bound
or
fdivr
or
ljmp
jne
ss
scas
cs
mov
pop
xor
negl
xor
or
and
push
js
into
add
sub
or
dec
das
mov
xor
int
sub
xlat
ror
push
ss
xchg
inc
adc
decl
loop
mov
in
and
push
out
inc
jb
dec
out
lods
fdivl
cmpsl
mov
and
mov
xlat
fnstcw
call
mov
cli
xchg
ret
rcrb
inc
and
cltd
adc
add
xor
add
out
js
add
ja
stos
push
push
mov
xchg
scas
xchg
aaa
add
mov
mov
pop
sbb
dec
mov
cmp
je
call
mov
scas
ja
adc
pop
mov
and
and
inc
js
mov
test
loop
cmp
add
mov
lret
mov
add
inc
jbe
mov
add
scas
movswl
mov
or
js
aas
pop
cmc
decb
and
xchg
mov
xor
cwtl
sub
mov
cmp
dec
mov
mov
into
push
mov
dec
add
gs
mov
xor
push
shlb
mov
adc
and
push
lds
xor
mov
mov
sbb
das
out
xchg
ror
push
and
cwtl
test
mov
cli
clc
push
scas
pushf
jg
loope
sbb
rcr
jnp,pn
dec
int
fwait
ret
repz
adc
cmp
shrb
mov
push
leave
cmp
mov
divl
mov
mov
cmpsl
mov
mov
mov
add
iret
fsubrl
mov
mov
and
jae
mov
pop
push
sahf
stc
mov
out
in
negl
cmp
jmp
push
mov
mov
arpl
leave
popf
dec
pop
outsb
xchg
add
out
xor
or
xchg
sbbb
inc
adc
fildl
rorl
iret
mov
sahf
addr16
lret
ljmp
fisttps
cli
aad
test
sub
xrelease
js
mov
fcomps
test
push
fwait
sub
mov
leave
sbb
jp
adc
mov
clc
pushf
jo
cs
fbstp
pop
sbb
add
xlat
sub
subl
sahf
ljmp
clc
xlat
mov
mov
into
notl
aad
inc
fmuls
hlt
fiaddl
jl
ret
cmp
or
in
mov
mov
daa
mov
cwtl
or
xor
mov
xchg
xchg
sub
outsl
mov
fisttps
arpl
sahf
sti
cmc
cmp
xor
or
loop
sbb
adc
jl
jae
mov
push
dec
enter
cmp
sbb
pusha
insl
jnp
ret
xor
xchg
push
mov
mov
data16
lret
sbb
xchg
nop
dec
faddp
cmpsb
lea
cmp
mov
aam
push
mov
out
and
cltd
dec
or
in
call
mov
push
movswl
mov
mov
std
jecxz
cmp
mov
sti
jecxz
call
add
stos
ficompl
outsl
fisttps
push
pop
fldt
xchg
mov
enter
icebp
aam
into
or
sub
out
xor
sbb
add
dec
lea
fisttps
in
sar
mov
mov
add
mov
jb
outsb
pusha
nop
repnz
fwait
lock
flds
cmp
or
stos
lcall
scas
push
jmp
fmull
mov
xchg
nop
scas
popf
mov
dec
clc
add
sbb
js
js
xor
je
imul
push
sti
in
mov
xchg
mov
inc
fwait
pop
mov
sbbb
lret
insb
sarb
lods
andb
mov
fwait
push
jge
aaa
and
enter
stc
sti
rorl
push
mov
out
mov
fwait
je
sar
lea
popf
xor
cmp
out
ss
imul
jge
movsl
xor
rcl
enter
jecxz
jae
sbb
add
cli
gs
loop
arpl
cmp
ficompl
inc
mov
out
stos
orb
jg
and
lret
dec
mov
cmpsl
add
out
cltd
mov
jle
mov
push
in
adc
sarl
pop
mov
in
testb
jge
dec
cld
mov
std
data16
mov
or
and
push
adc
dec
or
hlt
rol
fiaddl
xor
lret
and
nop
mov
cli
or
stos
push
xlat
push
mov
pusha
in
jecxz
cltd
jnp
mov
mov
push
loop
mov
rorl
mov
xchg
pop
scas
inc
mov
push
cltd
outsb
fdivrl
fldenv
lock
and
nop
popf
jmp
mov
mov
lods
loop
xchg
shrb
xor
mov
cli
cmpsl
mov
mov
ret
out
mov
mov
mov
jmp
aad
ficompl
fisubl
out
ds
fistl
cli
add
sub
scas
lods
cmpsl
jb
pop
xchg
pandn
outsb
sbb
mov
fdivrs
xor
pop
cltd
xchg
orb
mov
add
jno
adc
enter
sahf
je
cmp
out
ret
test
pop
adc
loop
nop
sahf
scas
jo
cmc
sti
arpl
stc
sti
lods
insb
dec
repnz
jno
mov
fnstcw
enter
push
inc
sbb
and
xor
mov
nop
adc
stc
stos
fldt
mov
ret
nop
nop
icebp
js
subb
jb
jmp
jmp
mov
fstp
sahf
mov
fildll
xchg
aad
fnstenv
mov
sbbl
cwtl
jo
add
cmp
out
fnsave
out
add
out
ljmp
shll
popf
nop
dec
jp
ljmp
mov
fwait
je
inc
dec
std
insl
xchg
das
pop
scas
movsb
clc
insl
rolb
movsl
lds
fsubrl
std
cmp
xor
jno
loopne
fcompp
popa
outsb
xchg
roll
enter
in
xchg
cmp
std
fwait
mov
cmp
hlt
nop
sbb
loope
inc
mov
fdivr
psubq
in
mov
or
in
ljmp
hlt
or
ret
gs
sub
mov
inc
addr16
jmp
dec
pop
dec
lds
xor
xchg
test
mov
push
xchg
mov
xor
test
ja
jae
out
fs
xchg
out
lcall
and
scas
movsl
pop
and
loop
fsts
xchg
or
scas
dec
dec
sbb
test
sbb
std
lods
scas
or
movsb
sbb
add
sahf
inc
sbb
pop
adc
mov
and
mov
jns
test
and
fiaddl
jo
in
pop
sbb
std
xchg
push
sarb
cmp
mov
nop
divl
pop
jecxz
cmp
pushl
pop
daa
sub
dec
nop
mov
lea
mov
xchg
punpckhwd
jecxz
mov
mov
mov
cmp
out
mov
aad
loop
mov
pusha
sub
imul
loop
int
fnstcw
aad
sub
pop
sub
cmp
out
sahf
neg
mov
inc
lock
mov
dec
mov
std
fstpt
loop
add
stos
sbb
rorb
mov
scas
sahf
lret
rorb
jle
pop
mov
cmp
loope
push
or
aam
jge
dec
mov
mov
sbb
cs
cmp
pusha
popf
addl
popa
push
inc
mov
and
add
les
fs
inc
xor
mov
hlt
ret
mov
xchg
orl
and
add
cmpsl
mov
or
pusha
dec
ret
lock
jl
fldt
std
int3
or
dec
loopne
mov
fisttpll
mov
jnp
shrb
pop
lret
mov
sahf
cmp
sub
dec
pop
jle
mov
mov
ret
mov
into
rol
dec
pop
stc
cmp
mov
aad
rcrb
jae
fbstp
ss
ret
add
pop
xchg
stos
inc
xor
mov
mov
popa
mov
pop
mov
inc
push
sahf
mov
push
pusha
ja
imul
push
stos
cli
fsts
pop
sbb
mov
inc
sub
mov
mov
lds
iret
or
inc
test
mov
jbe
mov
cmp
mov
cmp
aad
adc
add
sbb
in
les
xlat
mov
test
xchg
pop
mov
mov
loop
cmc
sub
hlt
into
mov
bound
out
push
cs
xchg
bound
cltd
and
mov
pusha
inc
mov
dec
sub
mov
adc
mov
and
mov
nop
push
jae
test
sbb
scas
mov
iret
popf
push
add
and
lcall
pop
mov
loop
mov
cmp
orb
imul
rcrb
mov
decb
fs
or
inc
fcomps
mov
outsb
icebp
mov
mov
popa
dec
inc
or
movsb
add
mov
outsb
jp
mov
fldcw
sti
lea
cli
pop
mov
sub
mov
cmp
shlb
pop
adc
jg
mov
in
fs
imul
sarl
and
mov
in
cmp
rorb
and
dec
xchg
ret
mov
aam
inc
repnz
nop
mov
ljmp
jecxz
jmp
imul
scas
negl
fistps
mov
push
and
inc
movsb
aaa
pop
loop
cmp
push
sar
loop
xor
mov
push
in
add
pop
arpl
cmp
bound
out
dec
xchg
loop
mov
mov
adc
pushf
dec
jle
mov
jge
cmc
inc
and
in
inc
cmp
or
push
cs
push
mov
gs
mov
fsubl
and
jbe
mov
adc
cmc
out
adc
orb
jg
ja
scas
test
pushf
push
stos
push
jne
inc
mov
iret
xor
xchg
popa
test
mov
fadds
mov
les
mov
mov
mov
cld
mov
mov
mov
outsb
push
pop
subb
rorl
std
fsts
movsb
xchg
hlt
mov
lret
mov
sbb
lcall
loop
repnz
push
xchg
mov
pop
inc
mov
push
and
out
mov
dec
jecxz
mov
push
pop
push
inc
int3
test
mov
ss
mov
xor
lret
jge
push
sti
cwtl
pop
push
push
in
sahf
and
mov
sbb
dec
sbb
mov
cltd
xlat
shrl
loopne
ja
push
cli
cli
mov
or
jge
or
shlb
test
sbb
push
xchg
jns
inc
xor
movsl
dec
daa
mov
sbbb
fidivrs
push
jmp
mov
in
jns
adc
and
cmp
mov
dec
mov
sti
sub
mov
mov
sub
stos
out
dec
xor
mov
stc
mov
and
xchg
sti
xchg
adc
pop
pop
sub
cmp
loopne
out
xor
lea
mov
xchg
stos
cmp
loopw
pop
out
leave
sub
adc
sub
add
push
pop
mov
push
fisubrs
aad
sub
inc
js
nop
sahf
loop
xchg
ror
xlat
pop
push
repz
inc
xor
jge
or
shll
scas
inc
add
mov
push
cmpsb
dec
inc
inc
xlat
jmp
mov
xchg
cmc
dec
rcrl
sub
push
mov
push
fwait
out
or
mov
sub
jbe
add
mov
push
sub
stc
js
mov
insb
add
jp
mov
shrl
mov
lods
push
or
sub
pop
imul
dec
fsts
pop
rorb
sub
movsb
psubsw
cmp
mov
out
push
shll
aam
mov
xor
int
ss
cmpsb
call
aam
bound
loop
or
fmuls
pushf
sub
mov
lret
fstpl
adc
divl
push
xchg
push
inc
test
and
and
jmp
mov
mov
jno
sbb
push
aam
sbb
cmp
out
outsb
pop
lds
es
ds
sub
bound
sbb
add
cmp
inc
mov
test
pushf
shrl
lock
fstpl
and
stc
cltd
or
decb
cld
xor
rcrl
add
cmp
mov
popf
mov
xchg
push
rclb
pusha
aad
ss
dec
cmpsb
jp
dec
movsl
xor
jno
mov
cli
les
test
dec
inc
cmp
icebp
fwait
push
mov
lock
cvtpi2ps
inc
adc
outsb
mov
sarb
or
outsl
xchg
jge
mov
in
sti
movsb
sub
das
aas
imul
jecxz
ljmp
ja
int
dec
sbb
fisubs
lds
fstpt
jns
aam
mov
sahf
gs
dec
add
push
add
jb
mov
shrb
add
sub
mov
adc
stos
popf
jmp
xlat
mov
repz
mov
insb
sahf
out
out
inc
repnz
imul
inc
adc
mov
ret
pop
jmp
test
sbb
lcall
lds
mov
cli
outsl
sti
jmp
out
dec
scas
bound
popa
popf
push
fmuls
xor
repz
mov
pop
sbbb
mov
addr16
mov
jo
mov
mov
cmp
inc
dec
mov
add
es
nop
add
lret
mov
test
sbb
call
cli
mov
dec
mov
sbb
add
sahf
cmp
xchg
clc
scas
aas
mov
fcomp
adc
cmp
test
push
dec
mov
mov
sbb
imul
out
pop
dec
in
mov
sarb
mov
mov
cmpb
mov
pop
mov
and
xchg
mov
shlb
sbb
lea
mov
cwtl
sbb
pop
mov
popf
pop
xchg
push
mov
xchg
arpl
mov
add
movsb
fisubrs
xchg
pop
loop
pop
stc
mov
mov
mov
cs
out
insl
test
aas
hlt
fiaddl
lods
xchg
fidivrs
mov
cld
and
mov
cmc
mov
jmp
xchg
dec
push
mov
sub
xor
cwtl
or
pop
inc
adc
push
ljmp
push
mov
lock
ficoml
scas
mov
mov
ljmp
test
pop
fildl
mov
shll
mov
icebp
mov
cmp
jne
sub
push
mov
aas
out
inc
dec
or
pop
out
push
xchg
lods
mov
sahf
rolb
xchg
paddb
loop
outsl
mov
stos
pushf
mov
cli
mov
lahf
jg
movsl
ljmp
into
jno
in
pop
loop
loop
int
cmpsb
faddl
movsb
mov
jne
push
jb
sbb
mov
scas
cmc
sub
pop
pop
push
loopne
imul
fistpll
xchg
test
pop
xlat
loop
lahf
ret
flds
fcomp
mov
and
sub
in
movsl
jb
mov
clc
jge
cs
mov
call
sub
adc
jns
push
sti
mov
or
sbb
aad
push
std
outsl
pop
dec
and
cmp
mov
add
sub
mov
pop
add
fcmovnu
add
lea
stos
aam
popl
cs
jnp
or
in
mov
xor
rcrb
notl
add
das
push
pop
out
es
mov
mov
insb
xchg
dec
int3
sbb
daa
or
lds
gs
aam
pop
mov
es
int3
mov
mov
out
add
popa
loop
and
fsubrs
mov
adc
lods
sti
cmc
and
inc
pop
sub
lret
mov
xorl
outsl
push
mov
pop
xlat
inc
in
mov
jg
sub
inc
cmp
mov
gs
add
or
mov
sub
jp
adc
mov
in
mov
jmp
pushf
mov
sbb
push
ret
mov
xchg
xchg
push
sub
das
fnstcw
jnp
adc
add
adc
mov
jecxz
insl
jl
daa
xchg
mov
in
fdivl
push
xlat
aad
dec
push
mov
inc
xorb
sub
popf
xor
push
cmovg
hlt
jnp
repnz
adc
mov
dec
jl
adc
int3
shlb
sbb
mov
insb
jnp
das
scas
in
shr
arpl
stos
aad
add
lea
mov
into
or
dec
jmp
xor
cmp
stos
or
or
dec
mov
push
mov
enter
pop
sub
mov
js
or
fimuls
loopne
pop
pop
mov
push
jmp
lcall
push
jae
in
mov
add
dec
sbb
out
cmp
push
pop
inc
push
dec
jle
into
aam
add
xchg
jle
cs
in
mov
jne
mov
mov
jg
push
jl
add
icebp
loope
cmc
mov
push
xchg
inc
jmp
mov
dec
mov
mov
jbe
in
iret
inc
mov
testb
sbb
mov
pop
ss
stos
hlt
jl
inc
popf
cli
mov
and
fwait
and
cmp
jle
sarl
xor
popf
xchg
les
mov
dec
mov
lcall
cmp
clc
dec
data16
call
pusha
test
rorb
or
mov
jns
ljmp
add
mov
and
or
push
outsb
jnp
ljmp
xor
mov
nopl
in
jge
mov
push
mov
push
add
mov
xchg
mov
ljmp
xchg
cs
cld
jg
arpl
mov
cmpsb
inc
sub
repnz
in
divb
lcall
mov
leave
nop
sahf
and
fsubrl
les
dec
in
jns
mov
jp
js
push
push
mov
cmp
xchg
cld
mov
stos
push
cmp
push
out
dec
inc
push
dec
test
push
aad
shll
pop
mov
mov
scas
dec
dec
lds
std
sbb
xor
sub
mov
scas
icebp
pop
insb
cmc
mov
sub
or
lcall
jp
sbb
call
cmpsl
repz
out
stos
into
pushf
roll
mov
dec
fmul
enter
jle
mov
das
movd
mov
popf
or
xchg
fadds
adc
ret
add
push
adc
jecxz
mov
pop
mov
xor
jns
mov
movsb
out
sbb
adc
and
push
cmp
push
test
xchg
sbb
leave
and
pusha
jle
dec
add
jo
jno
push
lret
loop
mov
fbstp
je
sub
bndstx
jo
push
or
mov
dec
out
jl
lds
in
dec
es
xor
sbb
sub
sbb
adc
adc
loopne
orb
xor
lds
xorb
lea
leave
push
jbe
push
add
or
dec
push
lret
test
mov
pop
mov
je
movsl
pop
cmp
ljmp
xchg
xor
out
cmpsl
xchg
loopne
push
enter
dec
addr16
mov
jle
push
inc
cmp
insl
cmp
out
mov
imul
mov
or
fs
mov
insl
or
or
insb
adc
sub
arpl
and
out
xchg
repnz
mov
push
rcr
push
and
and
push
mov
mov
and
adc
mov
sti
out
addr16
stos
xor
mov
aas
push
mov
andb
mov
inc
cld
ret
popa
jns
mov
xor
or
add
mov
cli
int3
jmp
mov
jg
aas
mov
je
mov
mov
dec
sarl
leave
mov
sbb
mov
pushf
jmp
and
adc
mov
mov
cmp
pushf
leave
jns
popa
dec
mov
and
mov
or
jmp
notl
cli
xor
pop
test
cmp
mov
mov
jp
inc
mov
inc
mov
test
mov
push
cmpsl
inc
inc
pop
add
add
mov
or
or
out
sub
xchg
icebp
push
push
push
sub
aad
mov
in
jp
loop
mov
sub
mov
in
dec
scas
ljmp
and
cmp
ret
cli
cmp
rorb
mov
movsl
pop
enter
mov
push
mov
ja
jmp
inc
fsubr
mov
rorl
mov
in
call
daa
mov
xor
sbb
mov
negb
mov
imul
mov
lcall
hlt
iret
push
push
dec
stos
and
cli
mov
and
movsb
mov
das
pop
pop
shr
ja
aaa
add
mov
lcall
cmpsl
icebp
mov
dec
loop
mov
adc
into
pop
push
movsl
jmp
mov
jge
mov
leave
imull
add
rcll
pop
fsubrs
enter
add
sbb
and
cltd
sbb
mov
mov
sbb
test
and
jle
jns
xor
cmp
push
mov
mov
rcr
dec
pop
scas
cld
hlt
in
jb
push
fildl
repz
dec
lds
mov
xchg
inc
popf
fs
mov
sub
cs
mov
fmuls
inc
repz
and
cmp
pop
js
jmp
push
sahf
and
int
data16
mov
push
sti
and
movl
sbbl
ja
stc
xchg
mov
xor
lcall
jl
gs
out
lret
imul
mov
jns
and
push
ljmp
pushf
shrb
sbb
fnstenv
adc
test
mov
mov
jge
adc
mov
cs
lahf
lcall
fstl
test
mov
out
add
push
jo
jnp
inc
rcrl
dec
dec
loope
and
movsl
xlat
jns
dec
mov
jl
int
jbe
dec
test
mov
push
sbb
lds
repnz
in
and
fldenv
mov
jbe
xrelease
aas
es
in
hlt
cli
cmp
in
adc
movntq
out
mov
mov
cli
lret
testb
sarl
mov
push
aas
push
mov
push
cmc
cld
js
cmp
pop
add
lcall
dec
and
sahf
mov
lret
ljmp
bound
dec
cmc
sub
dec
add
cmpsl
mov
or
cld
push
lods
bound
mov
jle
stc
in
jl
push
stos
or
mov
add
adc
out
in
add
dec
js
sbb
pop
mov
cmp
jb
mov
mov
popf
cli
or
std
mov
dec
sarl
fistl
push
pop
enter
jb
divl
into
les
outsb
test
push
loopne
sarl
int
das
test
or
pop
cmpb
dec
roll
repnz
xor
push
in
push
inc
sahf
mov
mov
data16
loope
mov
lods
sbb
pop
cmp
mov
int3
lods
scas
lds
mov
inc
mov
mov
xchg
sbb
cld
stc
dec
and
jo
std
and
je
dec
push
mov
outsl
dec
sahf
and
mov
fs
push
xor
mov
xchg
mov
cmp
xlat
adc
pop
or
mov
lds
fnstcw
pop
add
scas
or
mov
mov
sti
in
jmp
lcall
fistps
adcb
mulb
pop
add
cli
push
sbb
and
aas
sub
xor
dec
push
jl
cltd
and
mov
xorl
xchg
nop
arpl
mov
mov
imul
icebp
cli
test
aad
mov
fadds
cmpsl
hlt
xor
mov
rclw
mov
repz
cli
out
and
sbb
mov
mov
jb
pop
or
in
pop
repnz
jae
mov
sbb
jp
or
adc
dec
push
pop
jecxz
mov
mov
inc
shll
mov
popa
es
je
nop
xor
mov
mov
sbb
adc
test
loop
loop
mov
mov
scas
sti
std
push
pushf
mov
out
mov
int3
pop
dec
cs
jmp
add
cmp
jp
stc
popa
dec
out
mov
movsb
loop
mov
mov
mov
loop
lock
loop
mov
fidivl
nop
stc
dec
idiv
sbb
and
mov
add
ds
cmp
sbb
pop
cld
pop
je
insb
mov
jb
mov
lods
sarl
dec
cmovle
mov
jmp
mov
mov
test
cli
push
clc
orl
mov
inc
mov
pop
imul
lea
sti
lock
outsl
call
dec
testl
rol
flds
das
mov
ret
mov
popa
pushf
loope
ja
outsb
insl
lret
mov
shl
mov
sti
lea
shlb
lret
mov
hlt
sti
and
jo
mov
pop
out
fs
sti
loop
jge
dec
out
fldt
jne
xlat
stc
in
or
jmp
clc
ds
mov
loop
pop
ss
sbb
repz
repnz
mov
mov
ret
imulb
sti
stos
fldln2
out
in
pop
and
stos
and
bound
mov
sbb
popa
cli
sub
in
fsubr
mov
in
jl
and
xchg
pop
sbb
xor
xor
mov
mov
loope
mov
sahf
fwait
pop
sbb
pushf
lea
mov
mov
xchg
mov
mov
jmp
cmpsl
in
sub
cld
dec
test
out
aam
fbld
add
rcl
stc
sub
insl
in
cltd
adc
add
repz
jge
or
dec
in
jnp
push
cmp
aaa
xchg
mov
add
cmp
pop
mov
sbb
inc
adc
cmp
popf
sub
mov
jns
xor
xchg
sub
mov
cwtl
in
xor
int
inc
cmp
xor
mov
mov
stc
loope
sti
std
popf
dec
fdivl
or
jmp
loop
lahf
cmp
stc
pop
lret
jmp
sbb
loop
inc
out
pop
aas
mov
ret
insl
mov
adc
cmp
cmp
addr16
mov
sbb
subl
sub
adcl
cmp
fdiv
and
inc
xchg
xchg
push
stc
inc
push
jp
xchg
mov
mov
mov
mov
adc
fisubrl
mov
repnz
push
sub
xor
jnp
scas
int3
ret
sti
dec
std
mov
dec
vmwrite
insl
jae
sub
adc
push
rclb
xchg
lock
jno
and
xor
sub
dec
in
shl
ficomps
xor
out
in
mov
popf
inc
imul
lea
pop
cld
shl
loope
mov
or
call
test
lods
lret
nop
jno
dec
sahf
cld
shl
ret
lret
sbb
add
fisubs
mov
loope
cld
or
dec
jg
imul
mov
mov
aaa
xor
sbb
aam
jmp
sti
dec
aas
and
int
jbe
in
xchg
in
jg
lods
in
dec
shl
pop
pop
mov
fisttps
dec
xlat
mov
loopne
vpaddusw
mov
dec
jmp
cmp
dec
jle
pop
les
outsb
mov
pop
std
fnstsw
add
loopne
jo
dec
dec
dec
loope
mov
insl
mov
lea
hlt
ret
arpl
subl
mov
out
mov
sbb
mov
test
jmp
xor
sbb
fmuls
movlhps
stc
inc
cmp
test
mov
ret
inc
xchg
sbb
loope
popf
xchg
lds
mov
mov
push
repnz
adc
jecxz
mov
aad
std
cmpsl
pop
fmull
out
popf
jbe
nop
sar
out
mov
add
dec
gs
inc
sub
add
popa
and
cltd
jmp
test
lock
in
push
adc
cmpsl
movsb
lds
pop
movsl
sbb
pop
rolb
icebp
insl
lods
sarl
ficoms
test
insl
jle
dec
mov
aam
mov
inc
push
in
sti
pop
mov
mov
lea
fwait
popa
in
xor
into
shlb
push
pop
mov
loop
imulb
add
mov
push
adc
out
rcl
fs
test
jno
fists
rorb
dec
rcll
mov
test
dec
mov
in
xor
push
loope
cltd
icebp
pushf
test
stc
in
popa
aaa
push
add
enter
in
or
mov
out
mov
jbe
jbe
mov
subl
popa
and
sarl
and
and
sti
sbb
or
xor
ret
push
aad
mov
movsl
xchg
or
popl
repz
jo
ret
out
popf
mov
jns
cltd
ja
test
das
insb
xchg
fucomi
dec
pop
mov
ret
mov
jge
pop
fwait
gs
mov
cltd
dec
cltd
sbb
aam
call
cltd
in
mov
mov
in
sub
leave
aaa
dec
sbb
sbb
sarb
fs
jns
xor
ret
cmc
lea
xchg
and
dec
insl
test
fs
mov
sti
cltd
test
ficomps
iret
ret
xlat
jbe
jg
jae
dec
dec
jbe
jp
cmpsb
iret
cmc
and
loopne
cmp
cmp
inc
inc
out
lock
std
mov
cmp
adc
sarl
hlt
inc
dec
jne
loope
lret
add
xor
dec
in
xchg
jmp
pushf
and
xchg
pop
loope
aad
or
sub
mov
enter
mov
xbegin
pop
fcmovnu
mov
dec
pop
filds
stos
sarl
and
dec
int
aad
pop
cmpl
xchg
jl
xchg
jmp
dec
mov
and
out
sti
sub
or
sub
jno
popf
add
lods
jecxz
sbbl
movsb
nop
inc
loope
mov
je
sub
push
pop
std
in
in
fninit
js
rol
test
mov
dec
fwait
and
cld
fdivrl
out
add
insl
sub
jge
lds
jg
mov
out
inc
and
push
imul
jmp
out
jmp
andl
dec
and
in
pop
push
sar
push
scas
xchg
ret
pop
sahf
push
stos
sbb
call
das
inc
adc
dec
imull
mov
in
aas
in
sub
sbb
jl
add
mov
cmp
popf
adcl
test
imul
int
dec
jno
sbb
test
aad
dec
lea
sub
xchg
cmc
int
cmpsb
in
test
push
addr16
push
std
fs
lods
outsl
dec
lea
xchg
shlb
orl
rcrl
sub
mov
sub
lods
lahf
mov
mov
xlat
aad
push
ljmp
mov
incb
sarb
lahf
inc
out
sti
cld
fbld
mov
sahf
call
mov
push
pop
subl
xchg
pop
or
popa
mov
inc
add
arpl
mov
jno
popf
loop
pop
dec
lahf
ret
mov
dec
movsl
jmp
scas
xchg
sub
push
rcr
gs
loope
incl
push
neg
push
fisttpl
outsb
pushf
aad
mov
pop
ret
loopne
in
push
mov
jg
mov
pop
or
adc
sub
dec
arpl
shlb
mov
loope
push
cmp
lds
movsl
sti
mov
jl
fcmovnb
in
shr
and
mov
add
shlb
fisttpl
jnp
test
std
dec
loope
mov
fists
notb
or
neg
aad
mov
dec
mov
mov
mov
out
and
out
mov
rcl
cltd
mov
rcl
movsl
rorb
scas
int3
jne
xchg
in
stc
mov
xchg
jmp
mov
sbb
enter
mov
sbb
jmp
cmc
and
cmp
sub
into
cmp
mov
andb
fwait
and
stos
lods
xchg
sub
xor
enter
int3
jae
orb
lcall
dec
dec
in
test
mov
xor
cli
adc
cmp
jmp
and
jecxz
dec
movsb
push
stos
xchg
mov
cmpsb
ljmp
add
movsl
jnp
adc
fs
imul
hlt
fldt
adc
cmp
mov
insl
sub
sub
dec
movsl
jns
xchg
dec
incb
add
adc
mov
ds
mov
test
aam
mov
nop
xchg
iret
in
dec
and
lea
push
cld
fcoml
out
mov
fisubrl
stc
jl
mov
dec
mov
out
push
out
test
inc
jnp
fnsave
shufps
add
hlt
xchg
outsl
dec
adc
mov
add
stc
mov
mov
outsl
mov
jo
in
aam
popa
jge
int
mov
push
es
cwtl
pop
sub
leave
out
mov
in
fistl
in
mov
mov
or
es
out
cmpsb
push
fsubl
nop
add
sub
adc
lea
jle
call
outsl
nop
in
pop
dec
sar
pop
mov
cld
mov
stc
andl
filds
test
pop
cs
adc
pop
add
fwait
out
mov
fnsave
loop
fisubl
lds
mov
add
in
rcl
aad
scas
cmpsl
rcrl
and
imull
lock
and
mov
push
test
stc
jle
mov
test
xchg
loope
or
mov
out
sbb
inc
adc
iret
dec
aad
test
test
lods
pushf
cmp
orb
rol
ret
or
fisttpl
mov
dec
mov
outsl
sbb
pop
cmc
mov
jecxz
mov
fucomi
movsl
clc
ret
push
and
cmpsl
in
cld
out
add
lods
lock
bound
add
cmpsl
std
outsb
popa
aam
add
dec
mov
mov
jmp
lds
mov
lods
pop
xchg
arpl
xchg
stc
in
out
xlat
js
cmp
sbb
mov
sbb
jle
ja
stc
stc
dec
inc
out
dec
arpl
cli
shl
clc
in
or
in
jbe
in
test
sbb
iret
sub
aam
jno
das
jge
mov
insl
and
rcrl
sti
std
jge
adc
sbb
and
js
stos
push
or
fsubrs
sbb
scas
inc
ljmp
mull
jmp
stc
clc
loop
stos
sbb
fimull
pop
in
xchg
std
call
or
andl
cld
cmc
test
loop
mov
jae,pn
insl
insl
out
pushf
sub
lret
add
test
pop
clc
pop
sti
adc
cltd
std
insl
in
adc
mov
dec
mov
inc
xor
mov
imul
int
mov
call
fdivr
push
jno
int
negl
js
or
rcrl
gs
sub
add
dec
out
push
lods
in
imul
add
lods
loope
mov
shrl
stc
lret
mov
xchg
aad
lcall
jns
pop
sti
push
add
sarb
aad
mov
jge
in
in
sub
lcall
int
mov
icebp
lods
jo
jecxz
inc
orb
movsb
std
decl
movsl
insl
pop
decb
arpl
lret
xor
int
cmc
pop
xor
fmuls
in
jnp
sub
dec
cmp
sarl
fnstsw
pushf
dec
std
add
sub
mov
fisubrl
in
jg
jle
sub
int
shrl
loop
lods
popa
mov
loope
sub
inc
cmp
pop
pop
movsl
xlat
inc
lds
ret
xor
loop
sbbl
jae
inc
xor
loope
std
and
js
ds
and
aaa
xchg
loope
and
pop
or
out
jns
imul
ret
icebp
fcmovnb
add
xchg
aam
push
adc
and
dec
mov
xor
lret
xchg
cmp
into
iret
nop
xchg
adc
sbb
imul
hlt
mov
sbb
jns
leave
mov
cmp
cli
std
in
in
inc
jns
loopne
int
enter
outsb
push
lret
pop
sbb
cwtl
ret
test
testb
out
sti
dec
popf
sbb
dec
fists
cmpsl
pop
mov
fstps
out
roll
imul
dec
orb
push
jmp
out
enter
in
and
sbb
std
popa
addr16
cmc
mov
lock
push
popa
mov
sbbl
cwtl
jecxz
jge
std
jl
dec
idivb
jmp
xchg
rol
test
in
jnp
mov
jg
xchg
enter
adc
jae
pop
lods
mov
fldcw
dec
movsl
out
dec
rol
mov
stos
mov
fwait
inc
roll
mov
sar
outsl
sub
cltd
mov
xchg
outsb
cmp
jae
dec
push
jmp
addr16
dec
fstpt
jmp
arpl
fsubr
aad
inc
out
ret
jno
test
loop
in
xchg
shl
fbld
sbb
jo
mov
mov
pushf
mov
sbb
mov
stc
popl
jo
jns
inc
mov
and
and
dec
sbb
cmpsl
mov
or
out
or
cli
jns
dec
cld
popf
mov
popa
dec
lods
and
loope
je
loope
or
jecxz
pop
inc
jmp
out
movsl
dec
andl
or
sti
mov
sbb
xor
sti
loopne
pop
mov
scas
lea
mov
xor
shll
repnz
mov
dec
scas
push
jmp
jecxz
mov
fildll
xchg
dec
push
xor
sarl
std
pop
xchg
mov
loope
lea
and
mov
xchg
xchg
adc
mov
mov
push
mov
mov
sbb
sub
xor
sub
lea
out
mov
int
aad
cmp
pop
in
std
cmpsl
sub
cmp
push
dec
mov
iret
bound
jge
stc
cmc
pop
sbb
xor
sarb
jge
mov
mov
faddp
aad
adc
or
es
and
rcrb
test
mov
pop
loope
mov
pop
xlat
aam
stc
pop
push
aam
int3
sub
aam
sbb
xchg
scas
mov
mov
jno
ror
out
fnstsw
or
popf
push
shrl
cmovp
mov
in
dec
cmp
stos
mov
jb
add
popf
cltd
stos
pop
movsl
dec
xlat
push
mov
lods
sbb
out
mov
loope
pushf
pop
imull
movsl
jmp
push
pop
mov
sbb
adc
ss
xlat
out
int
roll
add
dec
shl
notb
test
lock
ja
movsl
ret
mov
jae
cmp
les
sub
int3
cmp
pop
lods
addr16
mov
add
and
jne
aam
mov
dec
xchg
cmpsb
out
popf
inc
jnp
xchg
sub
daa
xlat
cld
mov
ds
mov
rcrl
daa
xchg
push
mov
jge
mov
sarl
add
mov
mov
sbb
mov
jecxz
pushf
ja
cmpsl
adc
stos
jns
cmc
sbb
lods
cltd
decb
xor
xor
shlb
loope
test
cmc
jbe
call
out
jnp
mov
sub
push
inc
aam
in
sti
popf
in
dec
mov
mov
sbb
cs
add
lds
lret
inc
mov
sbb
dec
jl
mov
cmpsl
or
cmpsl
mov
pop
out
mov
add
ret
jecxz
pop
int
mov
jp
imul
cmp
out
xor
fcmovnbe
push
dec
loope
jl
lods
outsl
mov
and
test
dec
shrl
cld
mov
in
aad
arpl
in
dec
dec
inc
add
insl
inc
stc
mov
sarb
test
dec
popa
mov
cmp
pop
and
in
mov
lods
mov
dec
aad
in
dec
shlb
hlt
push
decl
test
add
push
ret
pop
jns
jmp
cmp
xlat
mov
imul
sbb
mov
dec
les
test
hlt
nop
mov
add
pop
out
in
ljmp
stos
add
out
mov
lahf
jl
add
jl
lods
mov
adc
loop
pop
aad
and
jmp
lahf
or
int
cltd
mov
aam
jmp
jb
push
cmp
mov
and
out
mov
ficomps
mov
dec
xchg
ficomps
mov
and
inc
and
insb
inc
mov
jle
sbb
cmc
movsw
mov
loop
ficomps
popf
inc
and
fisttpl
movsl
dec
or
pop
xchg
aam
pop
mov
mov
jmp
inc
push
mov
jae
rcrb
cs
inc
popa
sbb
rorb
jne
lods
sbb
xchg
sahf
pop
cltd
stc
sbb
jecxz
mov
in
aad
mov
mov
mov
dec
fistps
mov
or
testl
imul
cli
dec
inc
add
jle
or
sbb
sahf
push
rclb
shlb
xlat
seto
dec
sub
ja
add
mov
in
cmp
and
aad
push
loop
sti
xchg
and
bound
daa
cltd
fsubp
jge
pop
in
fmuls
cmp
in
push
mov
ja
xlat
cmp
clc
jecxz
pop
dec
loop
cmp
jns
rclb
in
popw
movsl
stos
pop
add
and
cld
dec
popa
or
pop
jae
pop
nop
scas
jno
mov
cwtl
test
and
push
aam
cltd
or
jne
push
add
dec
test
bound
jne
jmp
lods
adc
scas
loopne
cmpsl
dec
adc
movsl
lea
nop
mov
lods
xlat
push
in
pop
sbb
dec
dec
dec
ror
shll
in
aad
push
loope
jp
jg
sub
or
in
mov
mov
pop
pop
icebp
test
jo
pusha
cmpsb
out
cmpsl
in
jne
movsl
call
out
xor
out
stc
jbe
inc
fwait
mov
jecxz
in
out
jno
out
stc
dec
in
cld
push
in
push
dec
in
jge
orb
in
ljmp
mov
dec
stos
xchg
mov
push
sbb
jp
ja
shrl
push
cmp
lods
and
sub
mov
je
stos
push
xchg
imul
inc
aam
dec
xchg
pop
lods
add
negl
out
push
adc
jge
cmp
push
mov
mov
fstp
adc
pop
xor
inc
fs
aad
or
mov
mov
sub
mov
jns
mov
gs
punpckhbw
pop
lds
aad
cmp
in
jmp
inc
stc
xor
test
imul
outsb
in
adc
fnstcw
ficomps
inc
cmp
js
mov
scas
mov
out
mov
dec
jp
sbb
mov
sbb
and
push
std
rol
out
and
cmp
int
jmp
mov
cmp
add
mov
sub
jnp
xchg
call
imul
rol
mov
cmpsl
sti
xchg
sbb
jns
mov
divl
push
sar
std
lret
mov
insl
mov
pop
and
out
ja
xchg
and
push
jecxz
shrl
out
testl
out
fs
aam
mov
js
rol
test
notb
stc
mov
xorb
scas
mov
aas
sbb
mov
orl
or
xchg
ljmp
repz
test
in
push
jmp
jne
popa
out
xchg
fdivrl
stc
dec
mov
fsts
jmp
gs
lahf
loopne
adc
cli
fstpt
ja
xlat
subb
mov
pusha
out
ret
jo
stos
call
cmp
fsubr
cwtl
shll
cmc
fisubrs
or
dec
sub
or
push
mov
ret
lahf
ljmp
mov
pop
xchg
fstp
loope
les
cmpsl
fisttps
js
in
rclb
ret
pop
lret
push
jmp
push
aad
loop
lret
fcoml
repz
or
dec
test
je
xchg
lahf
ror
imul
dec
pop
lds
and
insl
rclb
dec
in
rorl
xchg
inc
je
inc
jge
sbb
dec
ja
xchg
inc
imul
dec
dec
icebp
xchg
dec
adc
jno
fs
insb
stc
mov
ret
sub
enter
jno
xchg
insl
adc
negb
out
icebp
mov
lods
sti
insl
cli
sbb
jns
in
pop
jns
mov
jmp
dec
xchg
mov
shrl
cli
loope
fistl
add
psubq
sti
dec
and
xor
dec
ficoms
fidivs
jmp
inc
push
push
jns
mov
jnp
push
insl
lea
cmp
rorb
fsubs
aam
inc
stc
outsl
in
pop
mov
aad
cmp
shlb
lea
jnp
or
cmc
jg
inc
icebp
xor
aaa
stc
sar
insl
mov
jbe
push
lea
push
ret
mov
pop
cmp
pop
or
mov
push
push
lods
fbstp
dec
jecxz
mov
ds
cld
adc
mov
mov
sub
icebp
je
out
push
in
push
sbb
popf
mov
mov
push
imul
cltd
pop
pop
roll
xchg
mov
clc
xchg
test
push
xchg
mov
sub
ret
mov
push
mov
push
adc
inc
mov
aad
out
mov
push
lods
xlat
xchg
dec
sbb
push
les
lcall
shl
mov
cmp
ljmp
lods
mov
movsl
out
jmp
mov
sbb
ss
mov
pop
mov
ret
clc
mov
aad
push
roll
cld
rol
std
sti
sbb
pop
in
rorl
and
arpl
movsl
mov
insb
push
xchg
ljmp
add
add
in
jo
in
out
in
dec
stc
xchg
add
jmp
dec
jmp
jmp
int
ja
shr
dec
stos
stc
clc
out
test
push
das
jns
jns
xchg
mov
pop
xor
int3
clc
dec
andl
xlat
lcall
mov
pushf
test
imul
dec
dec
pushf
push
ret
pop
bound
cmp
jns
out
mov
aam
jecxz
movsl
mov
jne
in
inc
xchg
jp
mov
jmp
stc
mov
jmp
jmp
mov
out
mov
in
adcl
icebp
xlat
popa
insb
int3
in
adc
inc
jmp
ljmp
mov
sbb
rolb
xchg
ret
call
mov
cmpsl
mov
insl
movsb
push
dec
and
sbb
in
pushf
or
push
fists
mov
js
lcall
rorb
in
cs
test
movsl
push
push
fiaddl
dec
lods
xchg
lods
movsl
mov
mov
mov
fildll
dec
xlat
mov
std
push
imul
addr16
cmpsl
sti
push
aad
mov
jge
inc
pop
lahf
and
roll
lcall
dec
int
dec
pop
lea
sbb
mov
mov
stc
mov
leave
xor
jle
stc
jns
in
mov
dec
cmp
in
sub
inc
dec
jp
mov
xor
std
addr16
stc
mov
push
or
mov
jmp
add
imul
mov
dec
fiadds
jo
js
dec
mov
test
inc
dec
ficoms
sbb
nop
push
inc
shll
inc
lods
mov
insl
rcrb
cmp
in
imul
cmp
sarb
xchg
xchg
push
std
push
mov
std
cmp
dec
loopne
aam
fisubl
std
pop
cmp
shrb
lods
stos
ss
adc
gs
call
into
loopne
iret
in
dec
aad
fldl
and
fisubrl
outsb
jno
leave
xchg
loopne
xor
and
test
add
das
ds
push
rol
pop
sub
lret
or
adc
je
xchg
mov
stc
loopne
ljmp
jno
pop
aad
lcall
mov
mov
call
and
in
cmpsb
jns
or
out
and
mov
cmc
rcrl
faddl
pop
test
pop
cmp
mov
mov
rcl
sub
nop
xchg
inc
gs
push
arpl
mov
cltd
lret
scas
stc
clc
mov
in
sbb
es
mov
stos
mov
fmull
jns
fwait
dec
mov
fldenv
cmpsl
ret
jmp
pop
rcrl
frstor
jl
dec
in
jmp
in
std
mov
fndisi(8087
lds
pop
inc
jmp
dec
jno
fs
rol
sbb
adc
xor
xchg
dec
mov
push
mov
bound
iret
xchg
mov
cmp
and
lock
enter
push
movsl
jg
pop
mov
cld
mov
sti
loope
call
dec
clc
jl
cld
cld
push
out
mov
lods
out
aam
mov
and
aam
in
in
sub
jo
dec
in
dec
test
das
sbb
push
cld
xchg
mov
push
push
jp
dec
in
aad
inc
into
dec
inc
add
repz
sub
sub
add
sub
das
xor
mov
or
in
jae
mov
xlat
lea
adc
in
in
dec
test
and
sbb
sbb
add
fimull
mov
orw
iret
xor
sub
data16
add
or
leave
cli
jo
xchg
leave
pop
vpshaw
xor
jns
stos
test
lahf
aas
mov
inc
mov
das
mov
mov
movl
call
iret
ljmp
or
sbb
fldcw
xchg
fcmovnu
adc
add
mov
mov
mov
cmpl
insb
mov
arpl
cwtl
dec
rclb
or
xchg
or
cmc
stc
cmp
pushf
xor
sub
cmc
jmp
mov
pushf
lea
jo
pushf
mov
movb
pushf
jmp
cmp
jmp
lods
lock
xchg
out
shlb
out
aam
add
fadd
push
mov
test
adc
jb
add
mov
mov
popf
gs
out
push
mov
jbe
cmp
mov
xchg
add
cmovg
add
out
adc
leave
sub
push
fldt
rorl
or
mov
das
cmp
adc
decl
mov
mov
dec
inc
aad
jne
inc
push
cmp
mov
cltd
fdivrp
ljmp
pop
pop
xor
xchg
cmpsb
xor
xlat
jno
pusha
mov
dec
add
cmp
aad
out
data16
idivb
inc
inc
loope
pop
aaa
andb
imul
cli
clc
jle
dec
fists
sub
push
pop
mov
adc
xchg
rorb
pop
pop
les
pop
add
lcall
dec
jge
and
iret
sub
push
arpl
ficoms
mov
movb
jmp
pushf
cmp
pusha
call
lea
jae
pushf
mov
pusha
lea
jmp
mov
clc
mov
pusha
clc
movb
mov
sar
btc
shl
mov
pushl
sub
call
lea
jne
cwtl
lea
movb
cwtl
cwtl
push
lea
push
mov
bswap
lea
call
mov
lea
ja
push
pushf
lea
jb
cmp
cmpb
call
pushl
rep
lea
movzbw
mov
movzbw
mov
pushf
lea
jmp
lea
lahf
bswap
movl
mov
push
lea
ja
jmp
lea
je
neg
and
add
bts
setb
shrd
bsr
mov
pusha
cmc
clc
add
clc
jmp
clc
push
clc
movzwl
add
add
bsf
mov
jle
pushf
add
test
test
pushf
mov
bt
mov
test
mov
pusha
push
push
lea
je
pushf
cmc
mov
add
push
clc
test
call
mov
pusha
lea
jmp
jmp
push
clc
test
pushf
call
repnz
aam
lds
sub
lea
pop
sub
test
adc
mov
lock
rclb
dec
adcb
jo
call
popf
sub
fwait
sbb
cmp
push
sbb
cmp
stos
xlat
mov
in
in
add
adc
adc
push
or
lea
jle
push
pushf
lea
je
movsbw
mov
bswap
not
lea
pushf
mov
pusha
movzbl
lea
pushl
popl
movsbl
pop
jmp
pushf
lea
jb
stc
cmp
cmp
pushf
call
add
pushf
stc
stc
movzwl
rol
ror
or
mov
movb
cmp
add
cmc
mov
test
test
pushf
pushl
test
jmp
pushf
stc
ror
clc
not
pusha
rol
stc
pushl
add
pushl
jmp
gs
fstps
push
mov
in
push
push
aas
cld
jne
jmp
xchg
xchg
hlt
push
sahf
repnz
jb
out
add
test
inc
pop
push
sti
xchg
imul
push
mov
call
iret
mov
add
cmp
add
jecxz
sbb
add
mov
add
or
add
dec
sbb
add
add
add
scas
push
jmp
sbb
popf
lds
mov
mov
punpckldq
ljmp
and
add
pop
arpl
repnz
das
sarb
lret
and
shrb
sub
shl
bound
mov
push
pop
sub
push
jp
dec
das
fdivp
sub
popf
mov
xchg
into
add
mov
stos
xchg
addr16
mov
push
aaa
push
andb
cwtl
mov
rclb
insl
push
jp
pop
loop
out
sbb
outsl
inc
out
dec
inc
xor
pop
out
adc
fbld
icebp
fbld
mov
and
jle
aaa
xor
shrd
xor
mov
pusha
mov
bt
and
jmp
sub
sahf
lds
sbb
insl
add
dec
jns
jle
out
test
dec
xchg
xchg
aas
xchg
pop
xor
or
xchg
idivb
mov
jne
lret
and
std
movsl
mov
adc
aas
cld
aaa
hlt
add
les
stc
sbb
add
jns
fwait
cmp
scas
rep
loope
mov
cmp
into
mov
les
mov
rclb
and
rcrb
sbbl
jmp
mov
movw
mov
lea
jne
push
mov
push
call
jmp
pushf
movl
push
pushf
mov
mov
lea
jmp
pushf
pusha
pushf
lea
jae
clc
cmp
jmp
test
xchg
jns
mov
mov
lret
jl
dec
lret
loopne
ljmp
in
sbb
mov
out
fwait
lcall
mov
add
stos
push
test
mov
call
dec
jp
arpl
push
es
push
popa
xchg
lea
and
imul
push
lock
jmp
lock
mov
cmp
mov
jle
mov
jmp
sti
out
stc
in
jb
and
mov
icebp
in
mov
mov
inc
loope
cli
mov
mov
mov
mov
rcll
mov
mov
jno
sub
jmp
test
popf
popa
cmc
in
cmc
push
lea
ss
leave
fwait
sahf
jnp
ror
add
xbegin
adc
test
mov
fld
dec
movsl
cs
xor
outsb
fwait
hlt
in
loope
subl
push
orl
aaa
imul
lods
xchg
jmp
dec
push
movsb
lahf
mov
repnz
popf
cs
xchg
push
popa
cld
pop
movsb
loope
cmp
mov
cmp
popa
loope
jge
add
popf
scas
push
cltd
jg
jbe
dec
cwtl
clc
pop
jge
or
aam
inc
bound
test
loope
stos
pusha
shll
mov
mov
shll
gs
andb
jl
add
mov
hlt
mov
movsl
int3
mov
in
xchg
inc
clc
sar
icebp
lods
mov
ror
pop
mov
leave
jnp
scas
stc
loope
xchg
or
rorl
sar
or
adc
aaa
addr16
ljmp
push
mov
out
les
mov
cld
aad
mov
dec
loop
jmp
loope
mov
shrb
insl
aam
in
cmovle
in
and
and
lods
xor
push
aam
in
cmovle
in
lea
adc
insl
lods
xchg
sbb
add
cmovle
in
xor
lods
dec
fstpt
cmovle
and
aam
in
cmovle
and
lods
fstp
pop
aam
in
cmovle
in
std
jns
and
lods
sub
push
aam
in
cmovle
cmpl
xchg
std
jecxz
add
add
movsb
mov
leave
lcall
xor
adc
je
in
adc
mov
fwait
sbb
mov
mov
mov
xor
test
mov
inc
lahf
sbb
insb
adc
repnz
iret
mov
dec
fimuls
xor
push
inc
or
popf
lods
je
dec
xchg
aad
mov
fwait
mov
and
xor
cmp
sub
add
aam
push
jo
mov
scas
fsubr
push
ret
enter
inc
stc
mov
dec
dec
dec
mov
xor
mov
lods
fiadds
mov
iret
sbb
fptan
xlat
pop
mov
mov
cld
cmpsl
jns
repz
bound
loop
jmp
jecxz
jns
add
adc
fsub
sar
push
movsl
mov
ljmp
sahf
lods
test
loope
push
addr16
sub
cltd
stc
sbb
inc
inc
loope
lods
and
and
fsubp
jno
ja
in
mov
xor
mov
jmp
sti
and
flds
test
cmp
shll
mov
lods
fdivrp
test
stos
sub
xor
aam
fstpt
or
loope
push
or
in
ljmp
or
and
test
in
mov
cld
jecxz
jecxz
rcrl
xchg
decl
rcll
sub
cltd
inc
popa
rolb
movsb
movsl
in
daa
in
arpl
mov
cmp
jge
xor
test
jl
lock
loop
call
loope
mov
sub
dec
negb
test
sbb
scas
les
xchg
lock
bound
mov
push
mov
mov
mov
clc
mov
rcll
fwait
ja
call
std
mov
add
andb
in
xchg
lods
fwait
call
stos
cmpsl
sbb
xchg
cmpsb
cld
orl
pop
cs
in
xor
sub
dec
dec
inc
cli
mov
stos
rorb
lea
movsl
in
adc
lds
in
dec
in
pop
lds
imul
sbb
cmp
xor
or
orl
sbb
pop
mov
xchg
pop
dec
inc
ret
dec
pop
fmul
inc
mov
lock
xor
cmp
mov
cmc
repz
pushf
inc
dec
mov
mov
test
test
scas
jmp
jmp
lods
test
mov
lcall
out
mov
pusha
mov
int
dec
in
and
mov
add
lock
cmp
xchg
jmp
popa
pop
out
lahf
pop
ret
push
leave
lods
insb
dec
cmp
adc
popf
mov
xor
aad
mov
fwait
test
lds
std
in
mov
in
mov
cmp
out
ret
jmp
adc
fldenv
sbb
stc
fs
popf
rorl
addr16
stos
stc
or
fcmove
sahf
sti
loope
in
nop
pop
sub
push
aad
xchg
popa
repnz
daa
cmpsl
addr16
cmp
popa
out
xchg
jae
xchg
mov
aad
mov
vpaddsw
in
shrl
stc
mov
cmc
adc
jns
filds
daa
stos
out
lahf
stos
lods
adc
xchg
fwait
stc
mov
je
stc
mov
and
jbe
test
jb
std
jno
test
out
scas
in
aad
aaa
arpl
cltd
aad
xchg
out
mov
dec
fwait
loop
mov
in
popf
xchg
std
cmpsl
push
dec
dec
nop
mov
pop
sbbb
popf
fst
cltd
mov
stc
add
addl
insb
jne
dec
cli
jne
mov
popf
dec
jb
les
nop
jb
jle
push
sub
fisubrs
nop
sbb
je
add
test
sbbl
lcall
jmp
xchg
jle
inc
xlat
mov
xor
mov
mov
loopne
imul
sbb
pushf
push
xchg
in
dec
sar
adc
cmc
jmp
dec
jns
pop
mov
cmpsb
xor
inc
movsl
mov
mov
cltd
movsl
push
push
aam
mov
add
fwait
jbe
lods
insb
les
shll
lds
test
icebp
stc
mov
cmc
jne
mov
mov
lea
and
xor
fldt
test
leave
mov
or
jecxz
in
js
mov
stos
loopne
jecxz
test
dec
loope
fdivrl
lcall
ljmp
insl
je
mov
or
mov
call
mov
orl
add
popa
cmp
inc
shlb
pop
shrl
mov
std
push
or
push
xorl
pop
mov
lea
mov
into
test
cmpsl
cmp
shrl
rorl
add
dec
call
cwtl
lret
or
inc
mov
std
fcmovbe
or
sub
dec
inc
loope
jmp
into
cli
push
sub
testl
xchg
mov
gs
and
scas
push
inc
push
mov
inc
jno
cmc
jns
andl
addr16
imul
mov
shrb
fildl
pop
inc
lds
pop
popa
mov
shrb
xor
mov
iret
std
js
xorl
enter
mov
cmp
jns
ficoms
mov
xor
jmp
je
shlb
aas
jl
ljmp
mov
fnstsw
addl
mov
rcll
aam
xlat
xor
mov
or
jo
jo
ds
movsl
mov
sarl
jmp
out
inc
mov
setbe
js
and
mov
or
jle
arpl
cmp
lods
fbld
cli
or
aam
add
fistpl
imul
mov
jo
je
data16
jge
mov
jle
arpl
fdivr
mov
in
jge
sbb
pushw
mov
lods
mov
xchg
dec
dec
jns
jns
mov
loope
pop
rorb
xchg
subb
push
pusha
jo
je
xlat
popa
aad
mov
inc
mov
xor
dec
cmp
dec
sub
fcoms
mov
stc
mov
and
fwait
cli
int
and
leave
nop
in
mov
and
loope
pop
and
gs
orl
fldenv
pop
mov
hlt
push
xchg
or
sahf
dec
xchg
shll
pusha
mov
arpl
push
xchg
cli
jle
fisttpl
popa
or
iret
cmp
ret
in
roll
pop
ds
imul
push
lock
mov
push
jnp
ds
cmpsl
dec
loope
adc
mov
pop
jbe
push
add
imul
stc
std
add
stc
xor
cmp
fwait
lcall
mov
fisttpll
inc
jno
xchg
int
and
inc
jl
loope
shll
xor
popf
jecxz
jge
xor
mov
test
xor
mov
sub
jns
ljmp
arpl
lret
loope
xchg
arpl
or
cld
dec
aas
movsl
dec
cltd
inc
data16
dec
xorl
decl
test
jle
movsl
push
neg
push
mov
lret
mov
pusha
fisubl
fistl
inc
sub
lea
aaa
dec
xor
movsl
add
fs
mov
xchg
inc
insb
jle
inc
and
jle
pop
fsubr
in
loope
cmpl
xor
jo
push
jo
in
into
sub
rcrl
xor
push
xchg
in
sbb
loop
stos
xchg
jl
lea
enter
xor
jo
mov
iret
test
addr16
into
das
idivl
cld
loope
in
leave
mov
sub
and
mov
or
js
fsubrs
pop
idivl
dec
push
mov
mov
dec
and
fldenv
xor
push
add
and
mov
push
rclb
les
cli
cmpsl
fucomp
fnstenv
dec
cltd
movsb
icebp
xchg
cltd
subl
out
mov
mov
sbb
jnp
mov
push
and
add
movsb
jne
aad
mov
jns
xor
in
fs
sti
and
adc
loope
jmp
dec
rcr
dec
sti
xchg
in
fwait
mov
dec
mov
pop
out
int
dec
aas
sub
pop
jl
in
dec
jmp
cld
push
jl
fimuls
xchg
popf
aam
stos
ja
in
dec
imul
jmp
dec
add
popa
fisubl
loope
jl
jmp
dec
movsl
xchg
fs
push
lods
scas
add
jmp
test
dec
jge
and
insl
jl
jmp
lods
lret
in
xchg
mov
mov
scas
lcall
sbb
cltd
popf
cmp
xchg
sbb
fidivrl
or
test
frstor
xor
ret
lahf
popf
push
sub
mov
daa
jmp
add
mov
fimuls
jnp
test
fldcw
adc
mov
sahf
mov
mov
testl
mov
or
mov
cmpsb
cmp
ret
mov
test
addb
push
dec
cmc
clc
xchg
lods
cmp
or
pushf
fwait
popf
pop
jmp
fwait
je
sbb
in
lods
scas
pop
push
add
mov
fwait
test
loopne
fildll
arpl
cltd
imul
outsb
cmpsl
sub
inc
mov
repz
stos
repz
fistps
fwait
add
jns
and
imul
mov
jnp
nop
sti
fdivr
nop
jno
mov
cltd
dec
mov
pop
inc
es
fisttps
cld
dec
dec
stc
shll
cltd
mov
sti
or
jns
dec
gs
faddl
and
pop
pusha
dec
inc
xchg
lds
inc
loope
rcrl
ljmp
sbb
pop
lea
fldcw
stc
jmp
in
rorl
aad
or
mov
add
mov
push
call
movsb
int3
mov
scas
call
cmp
jo
pop
cld
mov
lea
xor
sbb
orb
nop
inc
cmpsl
xchg
lcall
fidivrs
dec
stc
popf
mov
std
loope
std
mov
fsubl
mov
out
mov
fst
dec
insb
in
pop
movsb
insb
iret
lods
je
cmpsl
fidivrl
dec
pop
arpl
mov
jmp
test
jmp
in
sbb
or
push
pop
push
gs
pop
inc
nop
in
js
xlat
fisttpl
jl
jns
arpl
test
mov
std
mov
fadd
lds
cmp
outsl
mov
mov
sti
movsb
in
aad
fs
fcompp
mov
out
cmpsl
mov
xor
mov
test
sbb
mov
out
leave
insb
fisttps
dec
loop
mov
adc
sbb
call
xor
outsl
pop
lcall
pop
pop
jle
or
mov
dec
jp
dec
mov
dec
mov
fs
out
or
and
dec
lea
mov
dec
out
ror
mov
jp
loop
cltd
out
mov
jb
cld
js
inc
mov
cld
mov
out
mov
cltd
sub
add
roll
out
sar
and
ds
pop
dec
mov
mov
cmc
lds
mov
into
gs
stc
loope
or
mov
mov
inc
mov
dec
inc
jl
xor
loop
jg
sub
in
mov
cmp
cmc
mov
mov
std
pop
pusha
flds
xchg
mov
or
sub
loopne
subb
and
dec
stc
adc
out
out
lock
mov
jecxz
andl
mov
mov
out
cltd
les
xchg
cmpsl
ret
repnz
in
add
dec
sbb
sbb
cltd
push
lock
call
iret
mov
addr16
mov
cld
pop
cli
lea
movsl
inc
mov
xor
push
popl
lret
mov
les
popa
sahf
out
and
addb
and
mov
loope
test
adc
push
mov
mov
mov
xorl
int
cmp
sub
jno
or
cmp
xlat
jmp
dec
dec
mov
mov
in
aad
out
cmc
ss
add
adc
pop
fs
sti
push
in
addr16
scas
jmp
dec
fst
fs
jmp
xor
and
pop
dec
inc
push
fs
or
popf
mov
mov
fucomi
fs
loope
sbb
sub
xor
push
in
mov
xchg
dec
mov
std
jmp
xor
int
inc
dec
imul
xchg
mov
dec
jmp
adc
in
sti
iret
in
pop
mov
aam
cld
in
in
pop
cld
cmp
pop
mov
into
jmp
push
scas
sar
ftst
dec
mov
arpl
mov
lahf
xor
mov
push
jl
jmp
dec
daa
andl
jmp
iret
stc
mov
mov
mov
jno
pop
jg
inc
jmp
dec
cmp
fs
std
in
in
mov
mov
int3
or
push
jl
jmp
scas
dec
fdivrl
jne
jmp
in
test
jmp
dec
inc
cmc
dec
int3
sbb
cmp
jl
jmp
dec
arpl
fwait
cld
ret
lret
pop
lods
in
in
adc
jmp
dec
jge
fs
sti
test
pusha
jmp
fdivr
in
int
das
in
adc
fs
cltd
in
mov
jmp
dec
shl
dec
into
sbb
jl
cld
pop
jl
imul
dec
jne
and
xchg
jl
jmp
dec
fucomp
shll
adc
cld
add
lahf
mov
in
jl
jmp
dec
sti
lea
leave
or
sti
adc
and
jmp
dec
jge
fs
sti
lods
in
mov
jmp
dec
loope
dec
lret
cmp
jmp
dec
jnp
fs
scas
in
xchg
mov
fisttpll
xlat
fs
pop
aaa
mov
in
cmp
imul
fs
sti
xchg
in
mov
jmp
dec
xlat
sti
fs
cld
pop
cmp
lret
jl
jmp
dec
jns
fs
sti
scas
jmp
into
lea
in
or
stos
in
mov
jmp
jmp
adc
in
cmc
fmull
and
and
aad
in
push
les
and
fs
std
sti
mov
insl
fcmovnbe
in
in
cli
mov
decb
shll
insl
mov
lods
xor
outsb
mov
imul
fs
sti
jg
imul
aam
fldt
out
loop
dec
loope
in
mov
mov
lods
push
or
push
stc
test
xchg
cld
fnstsw
mov
in
stc
mov
sub
and
inc
fs
sti
jnp
popa
movsl
lods
jl
and
or
dec
aaa
cmp
sbb
mov
shll
mov
jno
paddsw
pop
jl
jmp
dec
sub
jmp
jl
jmp
dec
xchg
lods
fs
sti
or
jg
inc
jl
jmp
dec
and
fs
sbb
shll
mov
jne
jnp
outsl
mov
adc
in
sub
dec
mov
cmpsl
std
rorb
mov
mov
stc
loope
loope
in
fmulp
sub
add
cmp
cltd
lock
aad
sbb
loop
xchg
ret
repz
mov
jno
xchg
leave
js
fmulp
push
mov
xchg
out
cmpsl
cli
or
or
cld
iret
mov
fistpl
cli
psrlq
mov
mov
adc
push
cwtl
into
lret
jmp
sti
stc
in
cld
dec
enter
lahf
es
dec
out
pushf
inc
pop
loope
mov
xorl
int
imul
or
lahf
scas
and
adc
movsl
adc
movsl
sti
mov
or
jns
mov
insl
sbb
sub
jl
stos
loope
arpl
rorl
push
push
cmp
notl
jo
test
add
popf
cli
flds
xchg
data16
cmp
into
lret
std
mov
mov
fimuls
ja
fs
aad
data16
mov
mov
and
fnsave
mov
das
adc
out
movsl
mov
insl
dec
dec
or
popf
mov
insb
sub
add
xor
inc
add
fisubrs
mov
mov
xor
mov
add
nop
mov
aad
leave
sub
cmpsl
xchg
mov
out
push
cltd
dec
inc
dec
aas
jmp
stc
add
daa
jmp
aad
xchg
add
les
inc
or
test
mov
fadds
aad
in
stc
jne
sub
push
ret
mov
js
shr
aad
nop
mov
cmp
jo
or
repnz
fs
scas
add
scas
inc
jle
jecxz
and
xor
cld
loop
aad
push
pushf
in
push
js
aam
pop
fdivrl
rcll
inc
and
pop
ja
sub
insb
dec
mov
cmovle
test
mov
jp
ljmp
or
or
push
push
push
out
add
mov
cmpsl
cmp
mov
dec
xchg
mov
sbb
enter
push
push
push
dec
mov
data16
aaa
jmp
rorb
xchg
add
shl
fidivs
adc
jnp
fiadds
dec
push
in
ja
mov
clc
idivl
mov
fwait
in
fistpl
lea
outsl
ror
cmc
filds
enter
insl
cmpsb
sti
popl
ret
dec
rorl
jnp
mov
add
ret
aam
aam
nop
sti
sahf
in
or
rcl
lret
cld
cs
in
sbb
sbb
fucomi
pop
in
or
and
dec
sbb
fs
aaa
fsubrl
cld
mov
fs
or
test
sub
cmp
or
cld
fs
add
sub
and
icebp
mov
jg
cmp
pop
jmp
rcr
fdivrp
pop
fnsave
sub
jl
sbb
mov
mov
dec
jne
jp
dec
sbb
sbb
in
out
mov
mov
arpl
jmp
dec
stc
or
nop
not
jne
fld
pusha
stc
lods
jg
push
jp
push
sbb
bound
das
mov
add
add
push
ljmp
addr16
mov
hlt
outsb
ljmp
loope
lock
out
jmp
pop
jns
and
inc
sbb
mov
movsb
adc
data16
out
mov
jp
cmpsl
sbb
mov
in
or
lds
jmp
out
negb
mov
mov
jp
mov
and
or
outsl
pop
sbb
out
stos
sub
jl
sbb
ja
aad
sbb
jno
mov
repz
stc
mov
jmp
rclb
dec
jb
mov
notb
test
ljmp
lds
xchg
mov
inc
or
mov
test
cltd
ret
fwait
mov
in
cmp
cmp
or
add
mov
or
dec
adcb
lcall
lock
stos
xchg
xchg
stos
std
xchg
push
lea
mov
cmp
mov
xchg
xchg
movsb
gs
cmp
sti
xchg
cli
inc
mov
fldcw
les
dec
cmp
out
movsb
ss
les
rorb
jno
pusha
jno
cmc
scas
sbb
adc
push
add
fistpll
in
jmp
addr16
or
out
inc
bound
movsb
out
cmp
in
lret
mov
dec
xchg
mov
inc
std
ds
fidivs
in
xchg
nop
sahf
shl
add
sub
les
adc
movsl
cmp
test
or
in
mov
out
dec
popf
cmp
dec
out
jl
cmp
and
bound
mov
mov
xor
jae
dec
stc
outsb
fldln2
mov
lret
mov
aad
jl
sbbl
push
cmpsl
push
int3
sbb
in
sub
notl
xchg
loope
cwtl
andl
test
fdivl
aad
lock
inc
into
dec
pop
sub
lret
sbb
xchg
or
in
xchg
sbb
mov
ficompl
shlb
loopne
test
leave
imul
mov
or
in
xchg
cwtl
lret
adc
cmp
insb
xlat
xchg
jne
mov
push
outsl
adcb
and
mov
cld
repnz
jmp
ljmp
fs
xchg
test
push
aad
jne
aam
mov
sub
out
stc
out
stos
push
cmp
idiv
push
lret
push
mov
cmc
repz
int
mov
aam
dec
add
dec
lret
clc
xchg
dec
sub
inc
mov
into
imul
xlat
lea
sbb
js
add
dec
xor
and
ljmp
cmpsb
push
cmc
lahf
or
js
orl
nop
jnp
sbb
xchg
cli
or
aaa
scas
out
mov
and
xchg
pop
sahf
wbinvd
mov
cld
mov
mov
call
lds
jg
cmpsl
insb
test
mov
jecxz
cs
xchg
mov
inc
push
rcll
addb
andb
rclb
inc
jl
in
aaa
imul
fidivrl
mov
mov
xchg
or
push
pop
cbtw
stc
add
orb
or
mov
lods
adc
add
dec
aas
jge
into
mov
mov
inc
clc
pshufw
rorb
sbb
iret
aam
adcl
push
outsl
insl
mov
aaa
pop
lods
pop
mulps
mov
shr
rorb
movsb
jb
dec
out
scas
gs
mov
jecxz
das
stc
add
push
imull
aam
cmp
mov
sbb
adc
lret
lods
in
and
xchg
outsl
neg
cltd
mov
push
hlt
in
fs
cmc
xchg
xor
xchg
lea
xchg
xlat
dec
jmp
fsubrp
bound
dec
jle
ljmp
dec
pop
shlb
das
scas
jmp
sar
xor
shll
enter
inc
test
jecxz
cs
jns
jecxz
add
fimuls
add
test
rcrb
and
aam
std
int3
pop
mov
loopne
popf
pop
insb
sbb
int3
mov
adc
push
push
mov
and
popf
ljmp
loope
dec
movsl
xchg
xlat
cmp
jge
stc
mov
test
fs
mov
addr16
mov
push
loop
dec
popf
jl
loopne
std
mov
fcomps
icebp
jle
imul
in
mov
or
dec
int3
add
test
dec
mov
cmp
add
test
andb
add
pop
out
xchg
jmp
pop
int3
in
mov
sbb
inc
mov
mov
icebp
ljmp
orl
repnz
mov
icebp
xchg
cmovle
in
cmp
and
in
mov
lods
loopne
jo
std
mov
pop
into
fdivs
dec
lcall
xchg
in
add
lahf
rorb
scas
jno
mov
nop
sarb
leave
cmpsl
and
and
add
xchg
mov
ficoml
js
mov
jp
data16
enter
cwtl
sti
in
lretw
mov
imull
popf
fimull
inc
xchg
lea
lret
clc
out
or
xchg
adc
daa
cmc
push
mov
jo
sub
mov
test
int
add
icebp
xchg
mov
jl
imul
out
push
inc
fldenv
or
mov
or
add
cmpsl
cmpl
pop
add
push
sbb
mov
push
or
xchg
fiadds
mov
cld
mov
negl
fadds
pop
roll
ja
sub
push
jns
shll
dec
jge
pop
xchg
dec
push
shll
repz
insl
mov
mov
inc
jmp
sbb
outsl
jl
std
notl
dec
shrl
inc
mov
inc
stos
sub
jecxz
shrb
scas
into
dec
push
xchg
pusha
lcall
in
lods
andb
xchg
mov
mov
mov
add
lret
jle
mov
in
mov
popa
iret
jl
es
std
sahf
jl
dec
jae
xchg
pop
fstpt
mov
ret
cmc
push
faddl
aad
scas
xchg
ja
or
insb
inc
inc
mov
xchg
arpl
jb
mov
dec
jne
cmp
sub
out
fs
dec
aas
xchg
inc
rorl
rcll
shll
in
jge
mov
push
movsb
clc
adc
or
inc
sbb
push
loopne
std
imul
xor
cltd
or
or
add
int
pop
vpmulhw
sahf
test
xchg
mov
ja
in
push
das
and
push
jmp
jl
mov
cmpsl
shl
out
fucomip
test
mov
in
mov
gs
in
sub
lea
movsl
test
mov
in
xchg
outsb
in
cmpsl
lret
jg
into
stos
xchg
and
pop
dec
xor
adc
imul
adc
cld
or
imul
je
jl
cmp
out
insb
sbb
cmp
lea
adcl
rcll
ljmp
mov
dec
outsl
jmp
xor
out
cmpsl
xchg
xlat
cld
mov
jecxz
dec
sti
out
fldl
mov
scas
xchg
sbb
das
mov
mov
test
loope
into
push
add
or
jmp
out
jns
test
jge
push
push
leave
sti
xchg
out
in
loope
mov
xchg
shll
and
jne
fdivr
xlat
loope
pop
insb
rcll
xchg
mov
xor
lcall
imul
inc
push
in
pusha
cmc
jecxz
pop
idivl
pop
test
sbb
fwait
dec
xor
push
dec
mov
std
icebp
sub
or
rcr
gs
cmp
ljmp
inc
in
pop
xchg
iretw
test
jnp
push
out
mov
mov
popf
out
scas
sbb
rcrl
ret
in
mov
mov
mov
sbb
add
loop
push
test
and
sti
iret
xchg
cmpsl
std
insb
test
shll
popa
sbb
lock
ja
pusha
adc
rol
jnp
out
cltd
mov
lahf
mov
mov
aad
mov
cmpsl
dec
jmp
and
lds
pop
push
mov
inc
mov
cld
xchg
jmp
wbinvd
rcrl
ds
inc
cmp
add
lea
mov
imul
fsts
mov
pop
add
mov
lods
nop
push
add
popf
call
push
jecxz
mov
and
push
insb
add
xchg
xchg
mov
cmpsb
jge
pop
clts
pop
inc
dec
arpl
and
cmp
dec
test
mov
mov
in
add
movsl
jo
test
add
mov
lret
orl
fists
inc
movsb
mov
jnp
test
sub
loope
xor
int3
jl
in
pop
int
int3
aam
std
lea
push
mov
iret
push
pop
xchg
out
pop
add
insb
mov
inc
mov
push
sub
add
imul
ret
jl
int
in
repnz
stc
fs
aad
pop
data16
aam
scas
inc
aas
sbb
xorb
mov
outsl
mov
sbb
lds
arpl
popf
shl
jbe
loope
jno
jmp
mov
push
dec
rclb
xor
iret
and
mov
cwtl
mov
push
scas
mov
jnp
cld
xor
sti
rorl
mul
cmpsl
or
push
arpl
inc
cld
cld
aad
data16
mov
rcrl
arpl
int3
mov
lret
bound
or
push
or
rcl
mov
or
push
push
dec
bound
test
sub
lea
dec
mov
fcoml
call
repnz
jp
out
les
push
mov
jecxz
pop
or
sti
mov
cli
clc
mov
add
adc
shrl
add
cmpsl
sbb
adc
push
rcl
cmp
xor
mov
idivb
sti
std
fimuls
add
test
jae
and
scas
adc
inc
jle
mov
fildl
adc
push
stc
cmpsl
rorl
out
cltd
adcl
push
in
xor
scas
hlt
std
popf
push
ret
add
cs
jmp
xor
dec
faddl
cmp
adc
adc
pop
mov
pop
xchg
or
fistpll
jmp
lock
adc
and
mov
fs
into
dec
push
cltd
stc
jg
nop
rcrb
je
out
sub
add
bound
and
ret
adc
imul
dec
aaa
das
jmp
stos
mov
jecxz
dec
ret
mov
lahf
into
andb
popl
xor
mov
xchg
loope
push
leave
in
adc
and
data16
xorb
inc
adc
or
jne
mov
sar
mov
out
fwait
stos
negb
repnz
cld
or
icebp
shll
fsubrl
fisttpll
mov
mov
lods
xlat
mov
xchg
lahf
mov
lret
aam
fdivrs
jnp
int
xchg
add
shr
dec
stos
enter
rcr
dec
movl
xor
pushf
or
jp
and
imul
jmp
mov
test
outsl
lcall
xchg
xchg
rcrb
dec
aam
adc
loopne
je
cmpb
dec
dec
mov
cmp
add
dec
cmp
mov
outsb
mov
and
xor
cmp
shl
sub
mov
ljmp
mov
ja
roll
cmc
js
push
sub
std
insb
aad
xchg
cwtl
cmp
fcoml
out
xor
jp
push
lret
sarl
insb
xlat
mov
cmp
mov
lahf
in
addl
and
dec
and
aad
mov
pop
dec
in
std
mov
shll
popf
mov
aam
add
inc
dec
xchg
imul
fisubrs
cltd
in
orb
insl
shl
mov
jo
adc
cmpsb
testb
loope
dec
in
cmc
or
lock
aad
mov
loope
lods
mov
xchg
stos
jae
mov
js
xor
cmp
out
data16
scas
add
dec
mov
sbb
and
dec
pop
pop
fisubl
pop
xchg
das
mov
sbb
jg
or
and
or
xor
roll
xor
and
push
mov
jb
fimull
shll
hlt
mov
jecxz
and
out
xchg
subl
or
add
mov
imul
cmpsb
xor
pop
fistpll
adc
add
mov
push
out
push
addr16
push
in
aas
ret
add
out
div
dec
rolb
sub
rol
xchg
pusha
mov
dec
test
add
xchg
movsl
shll
mov
xchg
ss
adc
daa
xlat
dec
clc
jmp
or
xor
push
pop
neg
mov
leave
in
pop
sti
mov
rcll
adc
ljmp
lcall
js
dec
scas
or
pop
jp
cmp
test
shll
dec
push
sub
sbb
xchg
aad
in
or
sbbb
stc
mov
jns
ds
stc
hlt
cmpsl
std
dec
and
mov
pop
mov
adc
scas
mov
ja
leave
test
test
mov
lods
pusha
std
stos
push
fldl2t
push
jne
mov
fisubs
int3
mov
sub
fsts
int
clc
sbbl
mov
add
imul
into
stc
ret
mov
dec
xchg
adc
or
push
jmp
inc
roll
imul
mov
mov
in
lock
ss
dec
rorb
fimuls
mov
fsubp
mov
inc
mov
shl
in
stos
and
outsb
jl
hlt
jmp
scas
or
rorb
inc
and
fs
sub
js
sbb
stos
cs
push
lea
in
dec
in
and
fs
ja
mov
pop
movsl
std
pop
mov
or
fmull
popa
lcall
pop
lret
mov
and
insl
xor
pop
dec
andl
lea
mov
push
dec
pop
xchg
out
je
mov
inc
roll
pop
adc
jmp
add
in
xchg
das
test
aaa
mov
sub
addr16
or
sub
dec
adc
out
mov
mov
mov
inc
out
xchg
stc
out
push
or
mov
mov
sbbb
gs
stos
ja
movsb
les
adc
xchg
out
mov
sub
das
xchg
lea
push
adc
in
stos
arpl
pop
imull
dec
xchg
push
or
mov
jne
jl
loopne
mov
incl
mov
jns
aad
rcll
lahf
jmp
lds
dec
xchg
mov
or
in
into
mov
or
popa
pop
dec
bound
adc
pusha
jge
push
fildll
mov
sarb
movsb
in
popa
std
pusha
bswap
sbb
lea
push
jno
or
cltd
add
sbb
stc
fs
dec
or
lock
cmc
mov
loope
roll
dec
push
sahf
in
jmp
and
imul
leave
and
dec
stos
mov
mov
push
in
push
in
ret
hlt
aam
jmp
shll
addr16
xor
shr
mov
rcr
scas
lods
repnz
loop
iret
stos
rorl
flds
lret
decl
in
cld
inc
test
test
pusha
ret
lods
adc
pop
pop
fisttpl
in
jne
enter
lea
frstor
and
mov
mov
testl
sub
inc
pop
push
addr16
lret
mov
out
in
fs
gs
pop
inc
or
pushf
push
and
in
ret
xor
inc
pop
add
cwtl
pop
and
testb
ror
adc
repnz
fidivs
in
in
clc
jno
out
push
lea
mov
push
sub
repnz
std
mov
and
cmpsl
jne
lea
movsb
add
xchg
nop
repz
rolb
jmp
in
pop
fsts
xchg
mov
dec
pop
js
popa
popf
mov
fs
mov
incb
or
push
outsb
icebp
repz
add
fcmovne
mov
shl
arpl
jo
mov
add
in
sbbl
outsl
dec
xchg
push
xor
sar
dec
and
test
jno
lock
dec
push
jecxz
mov
add
shlb
loope
sti
push
cld
sarl
push
test
stc
push
out
ret
loop
push
jno
das
mov
loop
test
push
leave
xor
inc
push
dec
cmpsb
test
dec
rolb
fidivl
add
jp
push
movsb
xchg
mov
cmpsl
mov
cmpsb
or
lea
ds
rcll
stc
xor
jp
mov
lahf
or
icebp
sbb
fisubl
jae
xchg
nop
out
mov
scas
inc
out
loope
ud1
test
jmp
or
popf
jb
jg
or
mov
es
push
and
fidivrs
mov
mov
sub
push
jb
fcmovb
clc
aam
js
pushf
jg
int
pop
or
lea
and
int3
push
sub
xchg
adc
imul
mov
add
add
fiadds
int
dec
mov
ror
pop
lds
cmp
sbb
rol
int3
push
push
mov
fnsave
pop
out
out
aam
and
push
add
cmpsb
jmp
fs
in
aaa
fstps
sub
adc
shrl
int3
clc
and
cmc
shl
lock
sbb
mov
jg
add
lret
push
leave
aam
mov
rcrb
inc
pop
adc
inc
adc
cmpsl
or
mov
es
push
pop
mov
sbb
push
and
mov
push
mov
cmp
jle
add
std
cmpsl
jmp
or
popf
dec
and
pop
mov
mov
cmp
inc
rolb
sbb
cmpsw
flds
mov
cli
xchg
and
jge
lcall
les
pop
jns
push
scas
push
notb
sub
sbb
add
in
sub
in
lods
cmp
loope
mov
sub
dec
adc
test
add
mov
inc
fmuls
sbb
or
pop
stos
xor
pop
ja
fwait
mov
aaa
mov
das
cltd
mov
roll
into
or
mov
mov
xchg
inc
cmp
fidivrs
rcr
sarl
xchg
dec
ja
imul
ljmp
cmp
xchg
cmp
mov
mov
popf
mov
loope
pop
mov
sti
add
es
sarl
icebp
out
cltd
std
adc
call
or
mov
popa
push
nop
cmc
sub
push
and
sahf
insl
movsb
push
sub
aas
cmp
dec
push
mov
stos
xchg
cmp
lret
jne
push
cwtl
jl
icebp
lretw
icebp
push
cmpsl
movsb
into
sub
xchg
ret
sub
push
mov
dec
std
in
xorb
fsubrs
xorl
dec
popf
pop
pop
in
outsl
cld
loope
idiv
fisubrs
andb
push
out
fmulp
sbb
loop
push
cmpb
pop
out
popf
std
inc
jnp
xchg
popf
mov
xor
hlt
out
sub
insl
xchg
xchg
push
inc
and
push
cmpsl
icebp
mov
std
sub
out
fs
imul
pushl
cld
ret
test
push
dec
xor
sub
xchg
jmp
mov
ret
cs
data16
pushl
jne
stos
push
sarb
loope
push
pop
out
fs
mov
insl
fstpt
int
cmc
and
and
rcrb
mov
mov
push
repnz
or
mov
mov
lea
xor
or
stc
mov
sbb
loopne
adc
dec
mov
mov
fstps
jne
les
aas
adc
call
mov
sti
jnp
ds
inc
cltd
push
mov
imul
jo
jo
popa
imul
fs
mov
pop
int
push
mov
jl
adc
mov
fistl
lods
jl
in
mov
mov
mov
push
aaa
jns
shlb
loop
sti
or
xchg
mov
dec
dec
jge
addr16
cltd
mov
aad
in
cld
push
pop
sub
loopne
push
xchg
loopne
shr
popa
sub
addr16
dec
fwait
pop
sub
test
dec
fs
dec
ror
in
out
sar
mov
orb
insl
mov
push
or
pop
insl
imul
int3
adc
cmp
sbb
dec
cmpb
addl
aad
mov
mov
lock
mov
lock
cli
push
dec
mov
stc
fmull
popf
jecxz
push
sub
std
jge
cmpsl
pop
adc
in
fadds
repz
xor
and
mov
adc
cli
adc
loopne
mov
paddsb
dec
fmuls
lahf
sub
dec
adcb
sub
jmp
or
in
jg
inc
pop
fs
shll
push
nop
mov
push
or
inc
mov
push
fcomp
in
cld
aaa
jle
out
roll
pop
outsl
std
cmp
lock
rolb
fldenv
dec
xchg
adc
repnz
mov
out
sub
aas
lcall
int3
out
lea
rcr
push
push
shrl
fs
dec
movsl
push
xor
sbb
adc
aaa
cmp
xlat
stc
out
pop
lock
mov
or
lahf
test
pop
xor
sbb
iret
in
fistpl
scas
call
dec
cmpsl
cmp
push
add
pop
pop
fnstcw
mov
std
rcll
and
mov
dec
popf
rcrb
lret
jmp
and
rorb
sbb
mov
mov
push
dec
and
icebp
adc
mull
sbb
dec
push
std
xor
rcr
cld
cltd
lcall
repz
loope
jne
in
cmc
cmp
mov
adc
pop
icebp
inc
aad
popa
dec
add
sub
aam
lret
imul
pop
aad
in
mov
sti
add
in
out
dec
and
inc
shlb
mov
xchg
adc
or
aas
xchg
ret
jg
xchg
mov
je
stc
leave
fsubrs
pop
aaa
popf
inc
movsl
roll
xor
leave
fxam
mov
daa
adc
sbb
sbb
pop
inc
fimull
xchg
les
in
pop
mov
jmp
int3
mov
loope
sti
orl
sub
in
adcl
mov
jecxz
lret
cmp
add
adcb
fwait
mov
dec
jecxz
sub
les
jl
ja
call
mov
in
pop
int3
loop
dec
or
jecxz
aam
jns
push
into
cmpsb
jmp
xor
xchg
popa
lds
and
xchg
stos
in
aam
test
mov
and
rcrl
and
xor
subl
xchg
sbb
xor
jmp
fucomp
or
xchg
cmpsb
adc
cmp
add
pop
adc
pop
dec
fildl
fwait
stc
loope
pop
mov
shlb
mov
mov
jns
sbb
sti
jne
dec
and
adc
and
frstor
adc
xlat
or
in
out
stos
inc
jmp
stos
pop
jge
mov
cvtps2pd
pop
sahf
mov
lahf
jnp
pusha
jl
stc
fsub
loop
lret
cmovne
mov
push
mov
sti
pop
fidivs
adc
scas
inc
cmpsb
pop
sub
insl
and
inc
rorb
mov
rorl
fcmovne
insl
dec
ss
or
stc
jl
xor
jns
push
leave
xchg
mov
ds
scas
sbb
add
leave
fisubl
call
aam
mov
jmp
popf
adcb
out
cmp
inc
test
mov
repnz
and
lret
jno
xchg
bound
jne
add
loope
mov
pop
mov
loop
xor
inc
js
stc
push
popa
std
movsb
jnp
int3
adc
push
and
lods
insl
stos
mov
incl
add
pop
sbb
jl
loope
scas
lcall
cmp
lds
test
je
jmp
js
mov
adc
cmpsl
mov
hlt
push
in
repz
in
sar
jnp
or
js
xchg
mov
dec
ljmp
xchg
jb
inc
rcll
in
push
cmp
insb
pusha
dec
ja
or
ret
or
mov
mov
pop
iret
mov
mov
jne
pop
jbe
or
int3
mov
mov
dec
sub
sub
int3
add
fs
outsl
cmp
xorl
into
sub
dec
int3
fs
popf
ret
mov
rcll
add
loop
mov
mov
or
push
or
aas
in
dec
daa
out
int3
scas
out
scas
in
xchg
push
int
mov
adc
pop
jo
test
aam
movsl
mov
jg
jb
ret
test
cmp
sbb
out
push
std
push
adc
fmull
xchg
sub
scas
mov
mov
punpckhbw
das
sbb
test
xchg
popf
paddb
push
je
mov
push
mov
stc
mov
jo
xchg
dec
push
leave
push
cmp
jmp
out
shrl
decb
sub
push
push
fimull
js
mov
lcall
and
push
iret
out
fidivrs
dec
in
mov
push
mov
divl
mov
mov
out
pop
std
popa
jo
pop
into
filds
xchg
sbb
stos
ret
push
inc
jno
sahf
xchg
insb
or
ja
enter
mov
fbld
in
sbb
mov
aaa
inc
inc
dec
pop
jne
jge
lahf
fstl
out
jno
enter
pop
lahf
imul
adc
cmpsl
sub
sahf
mov
cmpsl
arpl
add
cld
jle
add
mov
cmp
pop
std
fistpl
fstps
insb
xor
in
push
aaa
lcall
fs
in
scas
and
mov
lahf
jmp
push
jno
div
sub
rorb
mov
les
cmp
push
push
jno
out
jl
cmp
lahf
ret
push
lea
push
fs
push
in
fnstsw
cld
pop
cltd
popa
movsl
aas
ret
lcall
nop
test
push
test
push
sub
xchg
add
cmp
fisttpl
xchg
ja
into
clc
int
pop
je
in
adc
shlb
call
in
xchg
stc
movsb
jmp
jbe
shlb
xchg
adc
call
sti
rcrb
fldpi
lock
add
jl
sbb
lods
mov
add
aad
or
insb
push
inc
movsb
mov
stc
push
add
imul
dec
xor
sbb
and
cmc
gs
pop
std
popa
stc
cmp
jg
shl
jo
inc
cmp
int
push
jae
inc
push
dec
jle
dec
xchg
fnstcw
outsl
imul
cmp
add
sbb
aam
int3
dec
or
cwtl
and
inc
das
xchg
lods
fs
pop
fdivrs
and
inc
xorb
mov
movsb
mov
dec
xlat
stc
add
xorb
in
leave
mov
cli
bound
mov
outsl
jne
mov
vpsubsw
std
add
inc
and
cli
xchg
xlat
xchg
std
xor
jb
fs
pop
lds
aad
mov
in
scas
lret
mov
icebp
or
mov
ficoml
dec
sarb
scas
xorl
pushf
popf
mov
mov
int
icebp
jle
aam
fsubl
scas
pop
rorl
add
mov
mov
mov
popa
sbb
mov
mov
nop
in
push
inc
stc
cmpsb
xchg
add
sti
push
ja
roll
xchg
xor
pushf
jle
and
inc
lcall
cmpsl
lcall
add
inc
pop
stc
jnp
pop
pop
sub
xor
mov
mov
fs
shlb
shrb
fscale
stc
mov
jo
mov
inc
xchg
arpl
inc
xor
aam
into
addr16
aaa
xchg
jmp
jg
rorb
xor
xor
int3
mov
je
cmp
xor
jp
or
hlt
push
lret
shlb
loop
popf
cli
scas
mov
cmpsl
jae
xchg
mov
inc
pop
daa
jnp
sbb
dec
and
jge
cwtl
testb
push
xor
dec
mov
cmpsb
mov
popf
out
bound
mov
dec
loope
gs
popl
sbb
jecxz
lret
insb
inc
in
daa
std
push
cltd
push
mov
fs
mov
and
sbb
aam
in
jns
shr
dec
fnstenv
or
or
or
aad
imul
mov
ret
cmpsb
pop
cltd
pop
and
pop
enter
clc
out
dec
adc
sub
add
cmpsl
xchg
popa
mov
adc
ja
enter
mov
ds
pop
cmc
xor
aam
cmpsb
les
std
call
dec
sti
inc
cmovns
push
seto
mov
stc
jo
rcrl
js
nop
lods
jne
in
stc
scas
lahf
ret
cmp
pop
stos
mov
xor
mov
lea
out
sub
sbbl
sbb
addr16
in
adc
subb
push
sub
mov
lret
mov
push
pop
and
stc
ret
mov
push
fs
cmc
inc
out
rorb
jb
xchg
flds
mov
mov
pop
cmc
insb
out
in
jg
lret
fs
stos
pop
in
cmp
lret
jne
mov
outsb
lea
fldt
cmp
nop
cs
in
loop
scas
aam
roll
enter
stc
push
pop
push
jo
lods
into
mov
fnstenv
fdivs
pop
addr16
loope
and
lods
push
add
rclb
sbb
xchg
lods
dec
mov
xchg
in
shlb
add
and
push
popa
scas
mov
jmp
xchg
fstps
mov
xlat
xor
pop
xchg
jns
shll
dec
aad
cmp
mov
inc
dec
fucomi
mov
and
push
xchg
shrl
mov
cmpl
jne
mov
lret
ret
sbb
push
adc
inc
in
loope
sub
push
jbe
push
adc
nop
push
into
dec
idiv
xchg
or
cltd
hlt
cs
xor
insl
or
mov
mov
lcall
cmp
mov
rolb
mov
orl
das
push
out
xlat
jns
adcl
iret
cmp
pusha
stos
or
mov
lahf
out
add
cmp
lods
jle
icebp
lcall
mov
cmpsl
test
imul
pop
stc
sbb
ss
lcall
add
inc
sbb
dec
in
fidivrs
pop
lds
lea
xorl
loopne
xchg
in
mov
inc
push
mov
and
sub
ret
push
xor
popf
negl
add
jns
sub
or
cmp
nop
jl
sbb
addl
jmp
inc
mov
and
movsl
and
sub
push
movq
or
or
push
xchg
inc
ret
in
and
outsl
call
xchg
push
out
imul
push
repnz
mov
add
loope
mov
std
aas
ja
les
dec
mov
add
inc
into
lret
and
aas
aaa
in
and
lret
xchg
fwait
jmp
mov
push
sti
shll
or
adc
or
rcrl
ja
pop
cltd
cwtl
mov
sti
mov
cmpsl
push
dec
movsl
rorl
lods
adc
mov
lock
test
lcall
or
in
gs
cmp
add
in
add
push
sti
adc
das
ret
cli
out
and
leave
js
lods
mov
jb
sub
je
mov
movsl
cmp
call
sarl
ljmp
in
xlat
data16
push
or
roll
and
sti
daa
sbb
sti
push
xor
push
popf
cs
add
mov
push
mov
cli
inc
pop
push
add
inc
ficoms
mov
mov
ja
xchg
dec
or
and
mov
nop
jmp
cmpsl
jp
add
fisubrl
or
xchg
push
cld
movsb
push
mov
pop
scas
sbb
push
and
mov
mov
lods
stos
std
movsl
add
xlat
mov
lods
adc
subl
aas
inc
cmp
mov
and
or
lcall
push
cmp
je
decl
movsb
ret
sbb
mov
sub
mov
sbb
shl
outsl
in
push
fwait
imul
fprem
mov
sub
les
and
mov
mov
cmpsb
cmpsl
mov
mov
xor
addb
outsl
loopne
aam
mov
pop
push
dec
loop
xchg
add
xchg
test
mov
dec
stos
lret
xchg
enter
fldcw
and
dec
lock
std
xchg
add
mov
mov
adc
out
jmp
push
inc
xchg
adc
adc
mov
icebp
fs
out
jnp
popa
sbb
dec
xor
xchg
sbb
xor
mov
movsb
push
sub
dec
fsubrl
dec
lahf
mov
cltd
or
popa
clc
dec
cltd
jnp
push
test
dec
push
xchg
pop
mov
cmp
sar
popa
or
jle
out
xchg
and
or
in
dec
repz
add
or
mov
std
mov
and
mov
cwtl
jle
mov
mov
or
push
xchg
mov
and
mov
sti
xchg
dec
fs
mov
rcr
and
fwait
push
mov
aaa
xchg
out
iret
mov
sbb
add
sbb
mov
xlat
roll
push
in
cli
arpl
mov
popa
xchg
out
pop
pop
xor
shll
dec
aad
cmovns
or
dec
pop
mov
and
test
push
mov
repz
and
dec
ret
aad
loop
mov
lea
imul
mov
fnstcw
mov
stos
xchg
inc
shrl
jno
subl
jmp
dec
jmp
pop
std
sbb
rcll
fs
jne
pop
mov
ret
shr
repz
and
fstps
jmp
lods
out
mov
push
data16
stos
in
out
out
add
outsb
dec
movsl
sti
leave
mul
lods
jge
fidivrs
mov
pop
sub
inc
or
sbb
je
dec
sbb
ret
stos
inc
enter
int3
push
push
jns
mov
popf
in
std
int
or
insl
add
mov
dec
fnstenv
adc
movsl
orl
loopne
mov
stc
xchg
ror
stc
mov
icebp
scas
in
xchg
sti
orl
imul
loope
add
dec
mov
rorl
paddsb
popa
mov
shrl
leave
in
dec
pop
stc
xchg
imul
cltd
in
mov
fs
adc
jno
jne
addr16
in
setnp
lods
jecxz
fs
inc
rorb
mov
and
or
inc
aam
in
popa
data16
aam
cmp
push
sub
in
imull
loope
or
pop
jge
xor
pop
nop
in
stc
push
mov
popa
cmpsl
rorl
in
scas
fsub
ret
rol
iret
sub
lret
fisttps
jo
ret
add
aam
jmp
out
int3
sbb
sbb
repz
xchg
adc
out
repnz
decl
aad
out
jmp
jno
mov
int3
das
loope
imul
in
stos
fs
mov
and
xchg
lret
stc
popl
shr
aad
shll
dec
repnz
into
mov
test
lods
rcll
adc
mov
inc
adc
cltd
mov
jne
leave
stc
popa
dec
mov
sbb
ja
mov
push
dec
mov
or
loope
push
outsl
ficoml
imul
in
addb
lea
push
mov
mov
rcr
sub
lock
inc
pop
mov
lea
cmpsl
outsl
mov
jne
stc
mov
xor
mov
stc
push
les
movsb
push
in
leave
loop
dec
jae
sub
adc
clc
aad
jne
dec
pop
test
mov
frstor
imul
icebp
dec
jns
fisttpl
dec
push
cmc
insb
mov
xor
cmpsl
lds
cmpsb
in
xchg
push
and
gs
in
cmovns
add
test
sub
pop
dec
rcll
test
lea
sbb
push
pop
and
xchg
flds
rclb
lock
icebp
hlt
xchg
or
stc
xor
inc
repz
addr16
or
and
loop
push
mov
add
jl
jo
stos
push
or
out
add
jno
add
jecxz
stc
fisubl
test
es
pop
dec
adc
jmp
mov
popf
addr16
jp
push
clc
dec
push
aas
xchg
xchg
add
scas
push
in
inc
clc
sub
shr
pop
pop
dec
cmpsl
lret
pop
add
mov
adc
jmp
pop
dec
aaa
mov
lret
ret
mov
test
pop
jo
jl
shrl
lea
repz
and
inc
ss
loop
mov
stos
mov
mov
cmp
fidivrl
lods
icebp
mov
sub
adc
bound
dec
aad
xor
mov
jne
pop
mov
jns
ffreep
out
lods
fstp
popf
in
xor
push
pop
out
push
jnp
fs
je
imul
dec
xor
test
test
adc
jno
imul
dec
cltd
or
popf
mov
dec
test
mov
cmp
or
mov
mov
xor
fnstcw
mov
in
cmp
mov
pop
mov
rorb
pop
rorb
pusha
jns
stc
pop
iret
out
sbb
sti
aad
cmpsb
incb
sub
in
mov
dec
insl
pop
inc
pop
dec
mov
dec
cs
shrl
enter
mov
int3
out
inc
lahf
je
add
sti
lods
add
push
jmp
mov
mov
dec
mov
orl
notb
sbb
sysret
std
adc
movsl
iret
pushf
mov
jmp
jo
add
mov
stc
out
and
sbb
daa
out
mov
cmpsb
loopne
in
popa
and
outsb
stc
add
ja
mov
mov
push
pop
popf
test
ss
int3
cmpsb
or
lock
stc
stc
call
shll
xchg
mov
lods
sbb
shr
out
dec
mov
mov
in
mov
dec
ja
int
pusha
sbb
stos
cli
lret
lods
add
jp
pop
movsl
adc
rorl
jge
loope
jnp
dec
inc
push
or
cli
jb
subb
sub
fwait
xchg
ss
lcall
mov
shlb
int
insb
shl
sbb
into
ret
pushf
ds
adc
insb
loope
shr
fimull
sbb
loop
iret
jecxz
mov
cmc
adc
fstl
inc
or
inc
mov
lcall
outsb
lods
in
scas
push
out
cmpsb
stos
jno
rorb
mov
popf
cmp
shll
leave
cltd
mov
fxch
mov
mov
pop
inc
mov
or
dec
shll
mov
in
into
mov
test
addr16
mov
push
stc
out
clc
loope
sahf
sbb
mov
lock
jmp
sub
jmp
or
add
aaa
fisttpl
dec
push
push
mov
aas
scas
fisubl
cltd
jmp
loop
icebp
ljmp
inc
stos
dec
or
mov
psubw
cmp
xchg
leave
in
dec
pop
stc
test
faddl
lds
jecxz
int
dec
loopne
sar
and
pop
sbb
fsubrs
push
loopne
nop
sbb
mov
mov
in
adc
or
jmp
out
push
bound
xor
data16
or
cld
add
jl
outsl
lods
xor
scas
sub
test
cltd
or
testl
push
mov
in
roll
xchg
lock
sbb
imul
neg
ret
icebp
in
int
and
popa
jmp
loop
xchg
std
incl
or
adc
loopne
push
mov
or
jnp
lea
jae
add
inc
enter
mov
xchg
xor
push
pushf
leave
sub
ljmp
xor
or
cwtl
daa
stc
xchg
icebp
pop
in
pop
mov
scas
or
shl
cs
nop
sub
xor
mov
ret
xchg
cld
push
jns
scas
dec
dec
jae
jne
out
add
pop
adc
push
adcl
push
sub
sbb
sub
inc
or
or
sahf
xor
lahf
lea
add
mov
sbb
adc
cltd
loopne
out
int3
lahf
outsl
mov
dec
mov
test
jg
mov
sar
pop
push
xchg
mov
mov
jns
push
pop
sbb
pop
sub
loope
mov
loope
add
aad
fidivl
inc
mov
ret
cmp
push
iret
stc
or
and
fs
or
insb
push
lea
cwtl
jle
push
mov
dec
lods
sub
or
cmpb
aaa
cltd
in
mov
mov
icebp
pushf
arpl
dec
dec
int
in
cmc
ficomps
pop
or
pushf
sar
mov
add
adc
out
and
push
scas
dec
adc
scas
shrl
std
adc
das
jae
mov
push
pop
pop
cltd
mov
test
cmpsl
pop
xor
mov
stc
in
jnp
arpl
dec
add
mov
lock
dec
int
lock
sub
in
mov
and
loope
jle
dec
in
lahf
jo
add
sahf
add
cmp
lahf
dec
cmc
cmc
push
sub
repnz
push
add
sbb
mov
cmpsb
jp
test
sbb
cmp
mov
adc
je
movsl
sbb
or
mov
mov
imul
cmp
push
sar
jl
repz
adcl
mov
cwtl
popf
je
ja
pop
cli
fldl
aas
mov
outsb
popa
into
loopne
loopne
pop
fwait
cld
lds
pop
or
dec
gs
jns
jge
push
lods
push
jmp
or
mov
cmp
cmp
scas
push
cltd
mov
rclb
cltd
sqrtps
xor
scas
and
loope
ror
addr16
rcr
xor
sbb
xor
xchg
mov
data16
les
fstpl
in
inc
les
out
call
cwtl
add
lcall
sahf
add
sub
fimull
cmp
out
or
sbb
pop
cmp
and
fnstsw
fidivrl
cmc
xchg
xchg
mov
fdivp
adc
dec
xor
push
aad
sarl
xor
into
jg
repz
dec
in
xchg
fcoml
repnz
out
aam
jg
mov
orl
xchg
fwait
int
dec
xchg
xchg
stos
repz
and
xor
data16
loope
mov
shrl
adc
sar
sbb
sub
std
mov
ret
in
in
out
stc
scas
shlb
aad
rcll
mov
pop
inc
dec
fdiv
jns
pop
adc
fucom
std
jmp
sub
test
flds
dec
loopne
cmp
aas
rolb
sahf
ja
cmp
xchg
int3
sbbl
sbb
pop
cmovle
in
repz
and
lds
mov
mov
mov
hlt
sbb
loope
mov
icebp
dec
test
test
ljmp
mov
aaa
add
inc
jno
jns
ret
sub
or
sahf
jne
mov
pop
lock
das
mov
imul
adc
in
cmp
cmp
aad
jb
frndint
stos
jne
xor
ficoml
decl
adc
test
sub
test
mov
push
cmp
aad
add
inc
in
loopne
jge
inc
jmp
std
adc
mov
add
add
cli
stc
mov
ret
imul
xchg
repnz
notl
hlt
dec
push
pmaxsw
and
test
dec
sub
int3
mov
mov
in
aas
push
jae
aad
ficoml
xchg
jge
dec
fidivrs
mov
lret
popf
cld
inc
xor
orb
jo
xor
int
xor
add
inc
xchg
movq
push
lock
jne
add
push
xor
jnp
and
add
jg
mov
cmp
jbe
pop
pushf
sbb
mov
mov
fnstsw
mov
add
jle
xor
js
int
push
sbb
and
int3
mov
gs
push
xor
sti
mov
pop
lods
pop
pusha
mov
inc
push
xor
pop
out
jbe
jge
mov
jecxz
jg
jg
fmul
repnz
xor
mov
or
js
out
sub
cld
push
and
mov
mov
push
imul
js
fs
jns
xlat
sub
jno
adc
push
decb
adc
data16
popa
xchg
popf
aam
and
into
js
fisubrl
fwait
mov
icebp
adcl
sbb
cmp
movsl
sub
mov
jl
mov
cli
pop
and
imul
cwtl
icebp
nop
ret
ret
dec
mov
xchg
and
negl
push
push
dec
rcrl
andnps
and
xchg
jmp
add
xor
cld
cmp
stc
int
pushf
ficoml
mov
jne
ror
mov
add
test
mov
addb
cmp
dec
repnz
push
shlb
sbbb
push
cmp
test
pop
mov
lods
cld
and
cld
jns
mov
push
or
lret
sbb
mov
dec
test
mov
out
adc
fisttpll
cmp
mov
sti
popf
sub
aas
mov
inc
incb
lahf
adc
lahf
mov
dec
inc
lods
stc
mov
pop
sti
pop
dec
xlat
shll
jno
and
loop
xchg
or
sub
sbb
push
push
cmp
hlt
popf
cs
sbb
fwait
mov
std
sub
pop
xchg
or
dec
push
xchg
sbb
jle
mov
jne
mov
xchg
jmp
xchg
cli
addr16
aaa
cmp
jnp
mov
inc
mov
dec
in
xchg
jmp
cltd
andl
ds
xchg
clc
lcall
inc
fs
insl
dec
popf
inc
gs
push
xchg
imul
jmp
sbb
iret
mov
in
int
jno
mov
mov
jne
xlat
popa
cmpxchg
fdivp
xor
or
frstor
pop
popa
loop
imul
mov
xchg
roll
inc
sub
sti
lods
pop
fwait
mov
mov
cmpsb
mov
push
ds
and
lea
and
mov
test
cli
inc
cwtl
sbb
jecxz
es
push
into
inc
ret
mov
push
stos
sbb
stos
pop
mov
push
adc
and
stc
and
pop
stc
in
std
jecxz
push
adc
call
sub
adc
testl
lret
push
lods
mov
ss
push
adcb
adc
fincstp
lods
cmp
das
push
pop
mov
add
mov
mov
fistpl
or
cmp
pop
cltd
mov
inc
cltd
xor
xchg
ja
arpl
shl
xor
jp
rol
dec
fs
xlat
sub
fcoml
xchg
cmp
mov
xchg
in
inc
sbb
out
inc
in
xchg
jns
popf
mov
mov
aaa
fisubrs
orl
loopne
inc
pop
scas
inc
ffree
sbb
mov
pusha
ds
in
mov
sub
std
mov
lds
dec
pop
xchg
fs
jnp
ds
mov
jns
sbb
jns
xchg
movq
sti
lods
cmc
dec
orl
scas
jns
mov
dec
jge
adc
test
push
or
adc
or
mov
cmp
stc
lods
rclb
xchg
stos
push
dec
into
mov
xchg
and
mov
stos
scas
adc
imulb
push
popa
sub
and
es
jmp
mov
push
cmpsl
adc
dec
call
dec
mov
sahf
inc
arpl
cmp
sub
push
sub
popa
roll
xlat
mov
jnp
fcmovne
shl
mov
in
in
cmp
pop
sub
test
adc
cli
jp
push
mov
adc
inc
sbb
cltd
jmp
iret
and
and
test
pop
or
ja
mov
add
dec
imul
push
jl
push
or
movsl
sbb
ficomps
push
test
int3
std
push
or
push
sbb
xchg
mov
cmc
rcl
push
pop
adc
lret
pop
mov
or
ret
add
shll
push
jo
inc
xchg
rolb
add
mov
dec
adc
rcl
cld
dec
inc
mov
test
dec
gs
lock
out
mov
out
mov
pop
imul
repnz
out
mov
lea
sbb
mov
hlt
lahf
rorl
cli
daa
and
stos
fldcw
cmpsl
xchg
push
cmpl
jne
cld
cmc
lods
incb
pop
outsl
fwait
jg
dec
lahf
jno
cld
pop
fistpll
push
orl
pop
inc
enter
loope
xor
decb
inc
mov
mov
pop
ret
mov
xchg
mov
int3
leave
clc
insl
leave
cmp
jmp
adc
hlt
mov
int
adc
popf
cmc
cmp
popa
out
cwtl
and
das
iret
je
add
aaa
xchg
push
lea
nop
sub
lock
mov
cltd
call
cmpsb
mov
adc
push
pop
mov
jno
dec
jecxz
xchg
sahf
dec
pop
jae
outsb
idivl
xchg
mov
sbb
out
lock
sub
push
sub
push
or
pop
mov
cmp
cmp
sbb
or
xchg
or
stos
pop
in
mov
mov
pop
daa
jbe
cs
xor
lods
push
inc
call
fisttpl
push
cmp
and
push
sub
fnstsw
ret
pop
int
sub
mov
std
out
int3
jo
rolb
pop
mov
fbld
inc
mov
jns
or
sbb
loop
sub
push
mov
lahf
loope
or
stc
lret
aam
mov
aad
stc
fucomp
into
rcll
fucomi
fs
add
dec
insb
icebp
add
mov
or
in
mull
fdivs
and
xor
aam
int
inc
lea
lds
imul
shll
decl
xor
and
loope
inc
cltd
xchg
sub
movsl
idivb
xchg
and
fs
inc
sti
aaa
movsb
test
imul
outsl
push
je
insb
mov
pop
in
adcl
aam
ret
ljmp
in
rorl
mov
xlat
mov
xchg
pop
adc
mov
popf
in
mov
aam
insl
out
mov
clc
mov
push
in
lea
or
add
push
ljmp
std
push
mov
xor
roll
ret
or
push
inc
mov
aad
sub
lds
jge
icebp
sbb
push
mov
movsl
mul
cwtl
mov
test
or
arpl
lcall
call
sub
out
mov
cmc
add
sub
mov
pop
mov
popf
test
push
cmp
add
cmc
loopne
jmp
imul
mov
cmp
rcrl
sbb
out
add
sbbb
mov
in
mov
gs
push
add
daa
pop
popf
scas
fucomip
add
xor
mov
and
lods
xchg
sbb
shl
shl
aas
cmp
pop
cmpsb
pop
dec
ret
fldenv
outsl
dec
rcll
xchg
push
jno
faddl
roll
into
sti
or
xchg
push
leave
cmp
jnp
inc
xor
movsl
mov
sahf
jo
inc
xchg
pop
movsl
sub
dec
inc
rcrl
pop
mov
lock
push
in
subl
cmp
mov
sbbl
stc
fucomip
mov
insl
mov
test
add
dec
gs
pop
xlat
int
cmp
cmp
aas
insb
mov
dec
loop
xchg
fidivs
loopne
rcll
sub
lock
mov
or
mov
fnstcw
jmp
test
sub
in
cmpl
pop
jo
imul
jmp
dec
cltd
add
mov
pop
aam
ror
mov
mov
inc
in
jmp
fmul
loope
popa
push
outsl
jl
mov
fs
shrl
aam
in
cmovle
in
in
jl
in
mov
mov
lods
in
icebp
mov
fisttpll
pop
cmp
jb
and
jl
mov
mov
fldcw
dec
mov
xchg
in
in
out
dec
shll
fwait
rcll
inc
lret
insb
loop
sub
loope
dec
leave
cld
mov
in
pop
pop
leave
aad
xchg
shll
add
pushf
lret
lods
aaa
nop
in
cltd
cmpsb
test
in
inc
pop
arpl
mov
dec
push
cli
fiaddl
loopne
in
stos
pop
push
loope
cmpsb
lds
cmpl
out
xchg
mov
jb
testl
lock
rcrl
and
mov
adc
loopne
and
or
cmpl
xor
and
lret
inc
lret
por
mov
out
push
lock
mov
push
mov
pmulhw
or
cmp
mov
pusha
and
test
fdecstp
cwtl
add
and
xor
sbb
jne
scas
mov
adcl
mov
call
xor
mov
cmc
xchg
mov
orl
mov
push
das
lea
xor
ret
adcb
push
cmp
add
inc
and
pop
cmpsl
int
sbb
mov
add
lcall
mov
ljmp
repz
out
shlb
cmpl
les
test
aas
fisttpll
sahf
adc
xchg
in
pop
sub
adc
mov
ret
rolb
dec
push
cvtdq2ps
or
cld
mov
pop
adc
sti
push
jp
mov
out
mov
cmpsb
jge
out
mov
dec
fcomps
idivl
repnz
cld
push
add
insb
mov
aad
shl
pop
pop
pop
push
je
sarb
ret
mov
std
jnp
pushf
test
je
addr16
ficomps
in
and
xchg
or
mov
mov
sbbl
lea
mov
and
push
pop
mov
sub
xlat
lahf
dec
add
mov
imul
pop
mov
mov
xchg
shlb
into
lea
loop
mov
xchg
dec
mov
add
dec
pop
dec
stc
jne
into
ja
and
jecxz
xor
xchg
lea
or
sbb
ljmp
ja
js
stos
fcoms
pop
push
cmp
scas
xchg
xor
aaa
je
fstpt
lret
dec
popf
xchg
lods
test
jmp
fidivrs
adc
adc
mov
rcll
repnz
jmp
mov
jns
sbb
lea
inc
dec
lret
loope
clc
push
add
enter
and
xor
pop
hlt
and
fbstp
cmp
add
mov
mov
mov
xchg
mov
rorl
scas
cli
sub
rolb
jg
push
and
stc
jmp
lods
je
imul
loope
jae
xchg
into
pop
mov
or
adc
add
out
out
xorb
add
mov
xchg
mov
aad
and
iret
ss
jecxz
int3
push
and
jmp
xchg
in
push
out
inc
adc
sbb
das
popf
je
fldl
out
rorl
jecxz
jmp
inc
mov
push
cltd
xor
mov
call
mov
loopne
call
into
add
shll
mov
sub
mov
lret
aad
adc
aad
cmpsb
clc
pop
adc
data16
insl
shl
ficomps
lea
and
ds
sbb
jmp
mov
sti
insb
fstpl
dec
sbb
dec
movsb
xor
popf
lods
push
icebp
or
lock
jne
ja
sub
xchg
add
cmpsb
out
loop
std
jnp
insl
mov
pop
mov
pop
mov
pop
in
cwtl
xchg
sub
into
push
ret
sbb
mov
mov
mov
lret
and
mov
ljmp
out
std
add
lods
cmpsb
push
inc
mov
popl
lock
rolb
xchg
mov
sbb
xchg
jne
xor
fidivrs
add
popa
cmp
cld
lahf
mov
mov
test
or
test
sbb
pop
push
jmp
jge
push
pop
orl
cs
sbb
push
xchg
out
add
sub
pop
aam
out
out
idivb
mov
xchg
inc
lock
in
testb
add
sbb
xor
scas
icebp
pop
enter
add
imul
or
adc
jo
mov
imul
jmp
fdivrp
mov
int
cltd
fmull
call
in
add
loope
leave
stos
mov
paddsb
popa
lods
mov
sahf
pop
sarl
stc
sbb
imul
jecxz
and
mov
xor
cli
cmp
cmp
test
insl
xor
mov
add
idivb
jecxz
aaa
jno
stc
cltd
and
mov
iret
ss
pop
jnp
mov
enter
outsl
fstp
add
jne
mov
outsl
jle
mov
in
popa
arpl
dec
fnstcw
cmp
popa
push
shlb
add
adc
sbbb
hlt
jns
and
in
outsl
jecxz
mov
clc
scas
and
test
popf
ret
fnstenv
mov
xor
fucomi
mov
repz
jmp
pushf
in
xchg
dec
into
das
lea
xchg
pop
idivb
lock
mov
add
xchg
pop
ja
pop
pusha
jo
daa
inc
cmpsl
add
adc
cmpsl
mov
std
in
stc
stos
loope
nop
aas
jo
outsl
add
push
popa
sub
xchg
push
loope
jl
in
gs
mov
pusha
adc
in
sti
xchg
jb
jne
sbb
call
dec
enter
jl
int3
mov
andl
jl
and
in
adc
sub
mov
mov
dec
inc
cltd
in
call
std
dec
mov
mov
lds
popf
lcall
addr16
addl
enter
ss
mov
or
mov
dec
stc
cltd
test
mov
clc
pop
sub
and
pusha
mov
sub
add
movsb
mov
fs
cmpsb
xchg
je
jns
xchg
push
xor
adc
pop
inc
in
mov
fildl
mov
and
adc
mov
jge
and
push
sbbl
xor
adc
inc
and
jle
inc
lods
lds
in
inc
sbb
in
pop
and
cmpsl
cltd
xchg
loope
dec
mov
push
je
cmp
fists
aaa
sub
adcb
rorb
cmpsl
outsb
flds
in
push
ret
lret
enter
in
add
pop
mov
jecxz
sub
roll
and
loope
ror
data16
pop
dec
push
shll
rorl
mov
sbb
sub
aad
and
adc
les
adc
adc
lret
js
xlat
in
inc
stos
jecxz
rcrb
jp
mov
orl
mov
mov
mov
stos
in
dec
or
ret
enter
mov
popf
and
jecxz
popf
ds
xor
push
sbb
sub
xchg
imul
or
dec
cmp
test
mov
xchg
sbb
aad
in
std
jmp
and
lods
add
or
outsl
popa
mov
arpl
dec
xchg
adc
test
push
nop
test
sbb
data16
lods
dec
stos
test
cmpsl
xor
lahf
in
movsb
icebp
adc
sbb
mov
push
icebp
pusha
fisttpll
mov
std
mov
mov
xchg
add
or
fs
add
cwtl
mov
mov
sti
adc
stc
inc
lret
lcall
mov
jp
movsb
aaa
int
xor
push
add
inc
push
mov
pop
andl
test
xchg
or
int3
sbb
js
mov
stos
dec
dec
sbb
lret
jne
fldl
mov
out
sbb
push
call
out
dec
push
mov
out
roll
sbb
sub
mov
imull
fldcw
pusha
cmpsb
or
push
pop
ret
insb
xor
sbb
jmp
aad
dec
adc
arpl
shrb
ja
mov
dec
or
xorb
cmp
push
sub
xchg
int3
sub
inc
jecxz
inc
std
push
lahf
sti
in
mov
jg
icebp
inc
mov
pop
movsl
push
dec
loope
pop
sti
sbb
mov
iret
sti
xchg
enter
ss
sbb
daa
clc
lcall
sub
ds
and
and
sub
sub
or
add
int
adc
popa
ret
jne
xchg
mov
test
in
cwtl
sbb
sbb
dec
popf
mov
dec
shll
and
out
loop
stos
dec
mov
xor
push
arpl
mov
mov
insb
xor
cs
inc
andb
std
cmpsb
ss
add
mov
push
shll
sub
out
stc
sub
sub
jnp
sub
shr
notb
mov
sub
rolb
pop
add
stc
arpl
push
sbb
inc
aaa
xchg
insb
mov
in
pushf
sarl
mov
and
ss
popa
enter
xor
loope
hlt
dec
aad
nop
je
mov
hlt
aaa
lea
inc
aam
call
in
sti
in
out
popf
aad
lods
loopne
and
shlb
lret
jecxz
popf
in
shl
cs
xchg
dec
icebp
test
cwtl
into
sbb
dec
dec
dec
sti
rclb
or
sub
aaa
imul
out
nop
stc
stos
loop
dec
in
in
fdivr
loop
adc
aaa
into
faddl
sub
into
push
lods
cmp
mov
scas
dec
addr16
shlb
inc
std
pop
out
push
rorl
xchg
decb
std
mov
or
adc
in
cmpsb
sbbb
jge
std
dec
stos
loope
stos
iret
mov
push
mov
sub
lcall
rol
fadds
jb
push
xchg
jge
cmpsb
inc
loope
aad
dec
mov
loop
sbb
mov
hlt
jg
pop
aam
dec
sbb
mov
loope
mov
pop
imul
inc
lahf
lock
lret
cmc
mov
popa
cmpsl
jmp
add
push
push
ljmp
fs
aaa
icebp
lcall
aam
sub
push
pop
shll
inc
addr16
push
cmc
andb
or
test
stc
inc
cwtl
ret
rcrl
fbld
inc
and
pop
xchg
push
push
popf
inc
lds
das
xor
add
movsb
imul
pushf
jmp
add
jb
mov
fdivs
lds
sbb
roll
pop
dec
out
movsb
mov
dec
mov
inc
pop
fbld
pop
insb
orl
add
out
mov
cmp
pop
test
pop
stos
or
sub
mov
push
or
in
aad
add
je
add
inc
sar
pop
jg
jo
loop
lret
dec
cwtl
cwtl
xchg
push
adc
popf
inc
imul
pop
jle
ss
xchg
pop
jecxz
mov
call
lea
jns
aaa
adc
bnd
cmp
fisttpll
xchg
in
pop
fadds
cltd
test
cmp
sti
xchg
xor
pop
movups
pop
jecxz
mov
in
mov
out
arpl
fistl
jge
push
aaa
je
jnp
or
fstp
add
out
lcall
push
mov
push
rolb
dec
lahf
mov
dec
push
mov
cmc
mov
and
outsb
les
pusha
pushf
out
jne
cmpsb
and
ss
push
shl
adc
out
pop
push
stos
mov
xchg
push
jo
mov
adc
std
gs
scas
std
in
mov
fnstcw
js
pop
sbb
jne
inc
gs
mov
lcall
jmp
jno
mov
pop
bound
cmc
and
adc
or
fistpl
mov
or
stc
mov
jo
std
dec
pop
aas
popf
repnz
jle
frstor
and
mov
lret
std
shr
mov
cmp
add
dec
stos
out
int
add
ret
mov
cmp
mov
or
lea
pop
cmpsb
push
xchg
xchg
or
xchg
in
push
leave
mov
xor
cmpsl
jmp
addr16
push
out
std
bound
cmpsl
rol
std
sbb
gs
shl
pop
push
xor
mov
xor
int3
out
mov
push
inc
dec
sub
pmulhw
aad
push
inc
int3
mov
stc
insb
std
mov
add
rcr
push
arpl
hlt
fs
in
shlb
aam
fdivs
cld
aas
shlb
xchg
add
lahf
mov
rcll
dec
and
lret
ss
xor
xchg
xchg
xor
push
or
test
hlt
inc
fs
sbb
cld
in
xchg
sti
push
jbe
cmp
lock
cmp
std
add
in
loop
mov
or
add
add
aad
xchg
mov
add
shll
push
in
jae
xchg
sar
sti
cmpsl
aad
mov
jns
popf
hlt
jecxz
inc
add
pusha
mov
fnstsw
rolb
mov
or
xor
enter
push
ss
cmp
xor
xchg
movq
lcall
std
xchg
or
ja
push
repnz
and
cli
pop
cmp
and
iret
push
loope
pop
std
mov
pop
xchg
push
pushf
scas
shlb
pushf
sbb
sarb
or
inc
push
in
jp
or
add
lods
xchg
ret
xor
out
pop
ret
mov
aad
or
cltd
mov
xorb
pop
ret
mov
or
fsubr
mov
testl
popl
or
xchg
cli
in
jecxz
popa
mov
rorl
dec
loop
sar
or
cmc
push
inc
enter
loop
loopne
mov
sbb
mov
dec
bound
insb
mov
and
out
and
sbb
shrb
std
dec
icebp
inc
arpl
cmc
push
arpl
mov
lods
int
sti
sbb
jns
inc
sti
stc
loope
dec
ss
mov
loopne
insl
lods
stos
loope
add
jno
movsb
xchg
pop
xchg
lock
mov
push
xchg
or
sbbl
push
icebp
push
or
shlb
out
add
dec
xchg
mov
nop
pushf
sbb
xchg
pop
sub
lds
push
xchg
cmc
std
ror
mov
aam
jo
out
stc
pop
rclb
push
cmp
inc
sbb
push
or
push
incb
lea
xor
sbb
lea
negb
jmp
jo
test
pop
mov
ja
faddl
add
mov
or
ror
xchg
cld
and
jl
and
mov
and
jo
mov
in
or
mov
fnstcw
push
jecxz
loopne
cli
or
popa
loopne
repnz
in
imul
or
adcl
mov
call
jmp
jns
mov
xor
movsb
pop
sub
insb
je
jle
mov
mov
enter
add
in
jb
std
dec
xchg
in
xor
pop
xchg
dec
ja
cmp
pop
insb
or
add
inc
and
rorl
ljmp
inc
lock
ja
scas
pop
jl,pn
fisubl
pop
and
sahf
mov
test
cltd
pop
xchg
xor
sub
les
xlat
lods
or
lds
bndldx
cmp
mov
arpl
pandn
aas
leave
dec
lahf
in
push
xor
mov
sbb
pushl
or
loope
imul
aad
insb
push
sbb
pop
or
mov
and
sbb
shrb
jg
mov
xor
jge
sbb
jp
mov
push
iret
out
cltd
subl
jmp
negb
aad
ret
scas
in
mov
inc
mov
push
mov
add
imul
lcall
loop
in
jno
mov
movsb
dec
xchg
inc
imul
push
pop
icebp
loope
sbb
pop
cmp
stc
jge
jo
inc
repz
and
clc
adc
dec
pop
jp
xchg
insb
push
in
xchg
mov
or
test
xchg
adc
aam
cmp
in
jne
or
fstps
or
jl
insl
cli
gs
mov
push
shr
push
pusha
xchg
cmp
add
or
pop
or
dec
xchg
pop
pop
lea
push
cmp
inc
xchg
ret
cli
bound
pop
xchg
dec
std
jne
push
mov
sub
js
stos
or
dec
mov
stc
daa
fstl
fwait
stos
ret
loopne
je
sub
dec
cmp
stc
mov
hlt
push
sahf
dec
jo
mov
rcrb
or
xlat
mov
inc
pop
repz
test
call
sub
jge
mov
arpl
das
adc
lcall
pop
dec
fldcw
jecxz
mov
jo
decb
or
and
lret
stc
std
sub
ret
in
mov
cmpsl
pop
fdivs
out
mov
or
push
mov
std
sahf
jb
xchg
sbb
mov
pusha
cmpb
xchg
xor
mov
dec
test
lods
push
shll
or
sub
dec
jns
push
in
fiadds
cmovbe
cmp
fwait
add
fwait
outsb
pop
xor
xchg
push
cltd
mov
shlb
inc
mov
sbb
add
inc
add
outsb
add
mov
fisubrl
in
int
test
fs
mov
xchg
test
std
cld
fs
mov
arpl
ss
sahf
es
repnz
call
mov
in
or
in
in
scas
movsb
rcl
mov
pop
insl
shll
pop
pop
push
fstps
dec
rorl
lods
jp
dec
or
sbb
pop
clc
cmp
test
sub
pushf
pop
fmull
adc
cmpsl
push
pop
sbb
jns
mov
fs
enter
sbb
adc
xor
pop
mov
sub
daa
add
jge
paddsw
mov
mov
jne
push
repz
or
xor
sahf
mov
stc
xchg
shlb
push
xchg
jnp
fsubl
das
jne
in
es
ret
jns
jnp
xor
mov
subl
lds
ret
lahf
sub
fs
dec
cmp
dec
filds
fbstp
xchg
rcr
pop
or
mov
shll
popf
arpl
xchg
mov
ficomps
lret
cmp
fistps
lret
imul
fstps
in
cltd
pop
cwtl
aam
sbb
mov
mov
add
dec
cmpsb
or
inc
leave
mov
and
stc
xchg
cli
gs
shr
or
add
stc
out
sub
mov
lds
fildll
insl
in
int
bound
lret
orl
sti
xchg
xchg
dec
add
ja
aas
cmc
call
ret
push
cltd
xlat
loope
orl
jecxz
ficompl
lcall
jg
cmpsl
pop
mov
inc
movsl
faddl
xchg
inc
xor
and
and
jl
add
lret
insb
ds
or
sub
and
mov
jl
popa
or
int3
insl
push
int3
push
pop
enter
fstpl
iret
dec
xchg
jge
pop
stc
mov
popf
xchg
out
xor
mov
test
dec
dec
adc
shr
jb
jo
rolb
and
into
repz
imul
lea
scas
mov
fstpl
incb
ljmp
xchg
std
sar
aas
xchg
lock
and
adc
sbb
in
jmp
rcrl
cli
mov
mov
stc
enter
std
xchg
pop
jmp
fistps
sti
iret
sbb
mov
fiadds
sub
in
aaa
clc
and
push
les
in
es
xor
push
cltd
sbb
xchg
inc
xchg
cmpsl
jl
call
aad
lea
cmpsb
icebp
in
es
push
fucomi
rcrb
lea
movsl
mov
push
inc
xorl
ljmp
push
or
jg
rol
pop
jp
enter
jl
mov
xchg
adc
xchg
sub
mov
or
mov
dec
into
xchg
std
fnstcw
or
pop
adc
jmp
jns
adc
mov
dec
insl
aas
pop
cmpsl
cltd
xor
loop
jnp
xorb
cmp
xchg
test
test
cmpsl
jg
sbb
pop
je
sti
aaa
lods
xor
sti
pop
in
movsb
mov
lcall
jno
bound
stos
jle
sub
into
xchg
mov
dec
frstor
or
xor
in
sbb
std
or
popa
pusha
rcll
mov
daa
je
jmp
imul
adc
es
push
xor
sub
hlt
stos
inc
mov
cmp
dec
dec
aam
fisttpll
lock
jmp
mov
push
xorb
mov
push
mov
orl
adc
push
sahf
push
pop
dec
imul
aad
call
lcall
dec
lcall
jle
pop
jmp
sub
nop
orb
add
test
jb
por
lret
punpcklbw
ror
dec
imul
subl
repnz
jns
jne
imul
dec
cmp
sub
sbb
popf
call
jae
pop
bound
adc
push
in
inc
mov
add
push
lods
ljmp
arpl
xor
jp
insl
sbb
cmpb
shrb
popl
out
popf
loope
inc
fs
arpl
outsl
mov
dec
lcall
fimuls
jp
mul
loope
arpl
ss
mov
xor
dec
lahf
xor
add
add
xchg
push
push
lods
push
mov
xchg
dec
mov
jle
xchg
inc
popf
xor
vmovhpd
out
mov
lret
push
pop
es
push
push
dec
insl
xchg
in
and
dec
or
sub
push
xor
in
mov
and
aam
push
leave
stos
mov
lret
adc
add
mov
cli
lods
jns
fs
in
stc
mov
push
into
sarl
xor
cmp
ret
movsl
sub
enter
pop
inc
sub
push
rcrl
inc
pop
mov
jo
nop
std
paddusw
lods
xchg
xchg
sar
incl
add
push
fcmovbe
cwtl
lahf
in
xchg
sbb
push
pop
and
cwtl
inc
movl
jne
imul
insl
pop
sbb
pushf
xchg
lcall
mov
idivl
dec
ret
mov
lds
cltd
loopne
hlt
ja
push
das
pop
mov
dec
mov
mov
push
pop
shl
dec
or
fmul
movsb
sbb
cmp
jmp
int3
push
nop
add
add
xchg
adc
cmp
cwtl
sbb
xor
sub
or
fmul
int3
test
int3
jp
dec
and
pusha
mov
mov
dec
push
ret
or
sub
cmpsb
in
sbb
lods
dec
inc
lahf
inc
cld
std
push
and
push
data16
dec
icebp
idiv
pop
clc
push
mov
imul
clc
mov
lea
ljmp
mov
aas
mov
lds
sub
xor
in
aas
cmp
in
push
sti
rcl
dec
movsl
hlt
mov
jne
mov
jmp
adc
and
loop
sub
cmpsb
add
pop
push
and
scas
enter
sahf
insb
cwtd
dec
mov
ja
or
mov
adcb
inc
mov
mov
mov
dec
movsl
jne
cmpb
fstps
test
jns
sub
mov
shll
rorb
push
outsb
xchg
lods
ja
pop
sahf
cld
js
push
pushf
int3
stc
or
push
popa
inc
out
shr
scas
inc
stos
or
jne
lret
dec
aad
mov
mov
cmp
jmp
cmc
sub
stc
divl
into
pusha
jae
sti
inc
sbb
push
mov
push
xchg
and
jno
or
sub
xchg
int3
sbb
faddp
sti
add
pop
cmc
mov
pushf
push
in
shll
pushf
mov
into
cmp
xor
and
or
sbb
jb
repnz
jnp
popf
mov
add
aaa
cmp
les
ds
mov
je
je
mov
out
jl,pt
mov
jno
fcoml
push
push
cmp
add
lcall
cltd
shlb
stc
push
jnp
dec
in
pop
dec
fs
mov
cmp
rclb
stos
fldcw
jecxz
jbe
mov
ret
adc
ret
push
cmpsl
imul
ret
cmc
fimuls
add
hsubpd
cmc
xchg
in
cltd
stos
mov
pop
lea
mov
jb
jne
adc
icebp
push
mov
ja
dec
and
xchg
aas
testb
push
xor
aas
rolb
mov
jno
and
adc
in
popf
dec
xor
jge
scas
ja
std
sti
cmp
sbb
jb
inc
mov
sbb
jmp
xchg
in
cmp
dec
cmp
repnz
rcrl
ja
cmpsb
jo
push
lea
dec
mov
aaa
pusha
insb
or
mov
mov
ja
xchg
jle
daa
pop
add
pusha
imul
imul
or
das
and
stos
push
sbb
pushf
dec
mov
fstpt
adc
movsb
xchg
mov
mov
incb
cmpsl
xchg
in
xchg
insl
aaa
in
lods
neg
outsb
inc
lret
mov
andl
mov
test
cltd
outsb
xor
ficoml
data16
aam
pop
gs
out
in
dec
test
mov
add
or
sub
iret
inc
enter
aaa
scas
fldcw
mov
aam
mov
lahf
mov
fcompl
dec
adc
or
sbb
mov
mov
stc
or
insb
cmc
stc
andl
add
arpl
jg
adc
add
sub
adc
in
or
or
inc
cmp
jge
push
scas
ja
jg
dec
inc
jo
add
xor
addr16
imul
enter
fnstcw
dec
dec
es
adc
iret
cmp
mov
add
sbb
sbb
sbb
and
imul
lahf
jae
rolb
adc
jbe
ljmp
mov
clc
cmpl
and
adc
mov
lods
add
xchg
pop
xchg
inc
sbb
sarb
loop
push
cli
je
mov
ficomps
ret
adc
test
xor
xor
xchg
inc
cmp
mov
push
xchg
push
in
cmp
test
test
xchg
fsubrl
push
stc
push
pop
jbe
jle
xor
lods
out
xor
dec
fwait
cld
test
push
push
xchg
sub
pop
mov
data16
dec
cs
rcrb
sub
imul
xor
jnp
adc
push
push
js
push
aad
fwait
ds
pop
mov
push
or
popf
xchg
aad
shlb
push
sub
pop
or
ss
test
outsl
mov
enter
fs
pop
adc
enter
js
xchg
pcmpgtb
xchg
dec
xchg
push
outsb
fcoml
repnz
pop
out
mov
and
andb
popf
xchg
mov
ret
cmpsb
or
cmp
nop
or
add
inc
fnstcw
adc
push
cmp
cwtl
cmpsl
in
repz
stos
movsl
jo
push
adc
ficoml
rcrb
sti
ss
inc
push
adc
add
mov
adc
add
jns
mov
dec
xchg
out
and
test
lods
xchg
push
add
mov
sbb
xchg
xchg
stos
and
rcrl
dec
mov
xchg
fldenv
shr
iret
mov
mov
fwait
aas
stos
mov
sub
dec
fisttpll
jmp
andl
arpl
roll
mov
push
jl
cmpsl
das
or
jo
adcb
in
ds
dec
shl
push
jns
sahf
dec
push
adc
loope
mov
jnp
add
or
fildl
push
jmp
sbb
mov
stc
stos
mov
and
sbbb
popa
into
lahf
xchg
jmp
mov
stos
call
in
movsb
in
lea
shll
xor
xor
jne
and
xorl
mov
mov
fwait
mov
fneni(8087
cmpb
std
mov
and
push
sbb
jmp
mov
cmp
sub
xor
add
mov
mov
adc
repz
inc
in
mov
popa
mov
out
cli
mov
push
inc
inc
mov
test
adc
lods
je
iret
mov
lods
and
sub
dec
cmp
in
imul
addr16
xchg
pop
in
jp
stc
out
pusha
shll
stc
repz
movsl
and
mov
pop
mov
negl
add
add
mov
sar
sti
mov
or
mov
cmp
sbb
shlb
mov
mov
mov
popa
lret
int3
add
sub
pop
dec
mov
nop
out
aad
jmp
add
jmp
into
jmp
movsb
std
cld
jb
enter
dec
and
and
std
inc
xor
stos
xor
sbb
dec
in
es
cmc
and
call
cs
and
bound
add
enter
rorb
shl
ret
push
in
mov
out
movb
sarb
push
xchg
jg
fs
js
cli
xchg
sbb
push
push
cmpsb
ret
mov
std
sbb
mov
push
int
lods
sbb
push
js
cltd
fadds
sub
adc
dec
or
cmp
mov
jo
aad
xor
mov
mov
inc
xchg
sbb
sub
outsl
arpl
inc
orl
push
incl
push
in
sub
cmp
and
add
ret
outsl
leave
les
lods
int3
add
or
popf
xor
xchg
mov
icebp
add
inc
cmp
dec
sbb
ja
xchg
stos
xor
lea
push
adcb
sub
mov
mov
lret
je
mov
add
mov
mov
int
xchg
sub
les
sarl
loope
cmp
cmpl
mov
push
insb
mov
sbb
dec
push
popf
mov
mov
mov
popf
jnp
dec
mov
popf
and
es
pop
jae
add
imul
jge
imul
cmpsb
mov
add
pop
xor
arpl
sub
mov
mov
xor
xorb
out
scas
std
aas
insb
loope
mov
dec
mov
flds
cmc
imul
xor
jmp
mov
and
movsb
mov
and
shr
in
add
xchg
lahf
cmp
rcrl
push
push
push
popa
mov
outsl
pusha
ret
test
mov
aad
in
push
push
in
xchg
inc
adc
xlat
mov
xchg
jp
xchg
mov
mov
and
arpl
mov
cmp
dec
xor
inc
mov
gs
sti
cmp
f2xm1
jmp
push
sub
stos
or
inc
fs
clc
popf
mov
rcr
pop
into
shl
out
push
and
mov
mov
addr16
fldt
frstor
sbb
loope
jns
mov
int3
and
movb
ret
jge
pop
out
loope
mov
stc
xchg
cmp
mov
pop
roll
shrb
jmp
and
or
cmpb
pop
loope
xor
stos
inc
aad
cmc
int3
push
xchg
add
fwait
dec
adcl
xor
fsubr
or
xchg
push
adc
lock
adc
mov
aam
mov
and
add
neg
sub
loope
repz
mov
mov
in
jnp
bound
in
movsl
in
or
cmc
jle
ret
sub
and
mov
repz
jmp
mov
jge
sti
rcl
rolb
add
leave
loope
xor
sbb
pop
es
xchg
icebp
ret
scas
ss
cmpsl
jmp
arpl
test
push
lret
test
mov
mov
pop
call
sarl
inc
mov
cmpsb
ja
cmp
pop
inc
in
in
std
icebp
lea
cli
mov
vpmullw
fwait
mov
mov
jnp
mov
stc
leave
insb
or
pop
popa
mov
leave
inc
and
pop
jo
mov
clc
test
aaa
roll
orb
mov
mov
int3
fsubr
mov
inc
in
add
lods
fnstcw
mov
out
loopne
comiss
ret
ror
sbb
dec
fs
stc
outsl
cmp
push
imul
lahf
outsb
mov
sarb
jne
stos
jecxz
mov
sarl
mov
dec
push
call
ss
shl
cmp
repnz
sti
js
cmc
xchg
gs
xchg
mov
mov
cmp
mov
shlb
aas
aam
pop
jnp
push
imull
fsubl
cltd
mov
in
int
xor
dec
enter
jbe
out
mov
outsl
pusha
jmp
lret
mov
pop
call
push
push
or
lahf
call
ret
in
mov
inc
mov
leave
xorb
into
xchg
mov
adc
ficoms
out
sub
addb
xchg
push
loopne
ds
cmp
jecxz
stc
into
push
sbb
les
xchg
or
clc
jl
into
testl
push
out
adc
adc
test
dec
sbb
push
cmc
in
mov
mov
add
out
push
inc
adc
or
insl
repnz
mov
mov
dec
push
lahf
inc
scas
jb
scas
pop
rolb
sbb
or
popa
rcl
dec
inc
aaa
push
inc
ficompl
mov
ficompl
jle
and
inc
stc
incl
push
and
scas
cmp
icebp
fisubl
jecxz
inc
add
testb
xchg
hlt
jmp
cwtl
mov
fidivl
cld
cmp
punpckhbw
arpl
stc
pusha
jmp
cmpb
push
push
push
push
inc
jl
in
in
fucomp
add
inc
mov
dec
bound
adc
xor
addr16
and
mov
pop
cltd
mov
push
and
dec
fimull
in
mov
and
out
inc
cld
mov
dec
cmp
ss
sbb
leave
iret
adc
orl
jmp
adc
ret
hlt
mov
mov
sub
lcall
push
das
imul
add
call
dec
clc
jo
cmp
or
iret
mov
lret
movsl
fsubrl
movsb
inc
xchg
mov
mulb
add
cmpsl
mov
cmc
pusha
int3
inc
test
jne
push
mov
cmp
stos
jnp
push
jns
push
ret
mov
dec
int3
ret
or
jge
in
xchg
incl
scas
dec
mov
push
pop
popa
inc
push
dec
std
fbld
ja
sti
icebp
inc
pop
shl
lods
mov
push
add
push
jbe
mov
popf
movsb
pop
pop
nop
or
push
xchg
movsb
mov
xchg
xchg
and
jae
popa
pop
cs
imul
pusha
xchg
rolb
xchg
lea
pushf
jne
sbb
ja
dec
cli
int3
add
pushf
mov
add
push
int3
movsl
negl
in
cmp
xchg
scas
mov
fwait
imul
or
xchg
popf
sbb
mov
adc
dec
insb
mov
loope
cmpl
push
leave
add
out
stc
rcr
mov
mov
int3
xor
mov
aas
jp
inc
in
out
pop
lea
jae
add
xor
jns
push
sub
xor
or
shlb
insl
push
mov
rcrl
mull
cwtl
cmp
out
es
cmp
dec
add
cmp
jo
sti
jo
jg
mov
stos
aaa
mov
cld
adc
mov
pop
fs
mov
add
sbb
ja
arpl
push
sbb
dec
mov
rcll
mov
mov
jae
shl
mov
or
jmp
sub
mov
out
shl
in
fs
fs
into
lea
jne
pop
mov
mov
mov
orb
lahf
sbb
enter
xchg
rorb
stos
and
add
cld
mov
adc
jle
shll
dec
clc
mov
cwtl
decb
add
sti
pop
pop
jno
xchg
dec
and
sub
sub
lea
mov
xor
cmpsb
shrl
outsb
xchg
leave
or
int3
mov
xor
ret
xchg
and
bound
stc
roll
and
lahf
or
sub
lea
sub
and
and
mov
shl
aad
cmovns
and
fcoml
fs
mov
stos
lea
inc
adc
mov
or
jne
cli
cmp
mov
int3
lea
addb
inc
or
and
mov
popa
aas
jp
nop
lret
mov
add
inc
cli
jle
addb
add
mov
push
sbb
inc
shll
add
add
aad
jle
mov
stc
jmp
add
push
push
das
in
xor
call
loope
pop
sbb
inc
cmp
lea
lods
inc
sbb
dec
mov
xchg
mov
pop
and
sub
mov
data16
mov
cmp
lahf
pop
push
mov
sarb
jb
jbe
cld
mov
xchg
clc
sub
lahf
lds
push
lock
jg
mov
out
add
sti
add
lea
inc
sub
mov
and
xchg
xor
mov
js
mov
fists
imul
mov
add
xchg
in
fidivrs
loopne
pusha
lret
or
mov
jo
or
mov
wrmsr
sar
bound
cmp
push
addr16
xchg
stc
int3
mov
or
gs
mov
xchg
gs
loop
push
sbb
push
lods
and
dec
popf
sarb
mov
fldpi
push
sub
sti
adc
mov
xor
pusha
adc
mov
cmpl
mov
mov
sti
loop
push
popa
mov
xor
jle
enter
loope
jnp
cmp
lret
out
mov
jae
and
and
dec
add
mov
popf
shl
mov
cld
inc
push
out
dec
fldlg2
push
xchg
dec
mulb
sahf
out
rcll
test
mov
into
fnstsw
loopne
leave
jge
lcall
and
xchg
adc
in
and
fcmovbe
fiadds
loopne
jl
fsub
push
iretw
fidivs
adc
or
ret
adc
call
into
std
bound
pop
std
fs
ficoms
add
or
lret
inc
inc
cmp
or
jne
mov
dec
and
jb
pop
mov
shll
push
ret
test
icebp
stc
in
ret
pop
cmpsb
and
xchg
test
jl
mov
lahf
roll
pusha
mov
in
mov
dec
fiaddl
add
decl
cwtl
adc
cmp
cmp
lods
mov
jecxz
fs
daa
fcom
int3
mov
js
in
fdivs
xchg
fdivrs
dec
mov
jno
xor
std
arpl
push
cmp
idivl
jmp
aad
sarl
popf
dec
test
std
ds
mov
and
sbb
and
sbb
mov
int
inc
insb
cmp
adc
push
mov
push
insb
push
aad
loope
jo
lock
movsb
mov
mov
sub
insb
add
pusha
pop
nop
add
movsl
or
jge
mulb
fwait
xor
push
push
rcll
xchg
vmwrite
movsl
adc
stc
jo
add
sbb
out
fcompl
push
into
insb
shrl
sti
mov
mov
cmp
loope
data16
jg
jmp
mov
sarl
ret
nop
shlb
mov
mov
fimull
mov
insb
mov
out
in
inc
movsl
in
mov
pusha
mov
loopne
cmp
cltd
cmp
lret
ret
jns
stc
cli
pop
lret
mov
adc
fs
cmpsl
mov
cs
movsb
lock
lock
mov
outsl
sahf
call
jns
lea
mov
iret
inc
mov
lret
rorl
mulb
adc
jl
dec
cmc
outsb
sti
rorl
loop
popf
ret
test
loope
aam
enter
push
movsb
stc
pop
mov
mov
test
fs
fbld
dec
decl
xchg
rcrl
mov
popf
aas
push
call
loopne
jns
shrl
call
push
loope
data16
sub
nopl
lods
sbb
mov
repz
jb
call
cltd
sub
jno
inc
jns
xchg
aad
adc
xor
ret
pop
scas
in
lock
ror
adc
jmp
fstps
rclb
flds
mov
in
and
lahf
lahf
adc
cwtl
mov
mov
out
push
ret
aam
mov
jno
xchg
sub
mov
mov
incb
repnz
shrl
pushf
pop
rcrl
dec
scas
push
mov
xor
leave
mov
mov
xor
int3
pop
iret
fldcw
jecxz
add
push
into
fs
adc
add
jmp
adc
adc
jecxz
mov
sub
push
imul
cmp
scas
xor
test
orl
fs
test
mov
cltd
shll
inc
xchg
dec
mov
lret
leave
pop
jecxz
sahf
out
iret
dec
ffreep
or
sahf
enter
adc
jo
call
in
or
or
mov
fwait
sbb
and
jns
scas
mov
int
add
fcoms
out
fimuls
push
loopne
pop
sbb
mov
jge
jecxz
push
clc
std
mov
mov
push
fisttpll
lods
pushf
movsb
fimull
lret
popf
and
inc
xor
add
popf
xchg
cmp
int3
jge
sbbb
or
pop
dec
sti
mov
jle
mov
adcb
loope
push
push
nop
in
sub
xchg
in
mov
fadd
out
pop
mov
adc
sti
scas
icebp
out
dec
pop
sub
jecxz
adc
sbb
shll
mov
fldcw
and
cmp
push
mov
dec
mov
mov
fstpt
iret
ret
dec
fnsave
inc
cmp
or
jne
mov
inc
xchg
imul
stc
adc
mov
add
fistps
gs
test
push
sbb
cmp
or
insl
das
pop
cmp
aad
mov
shlb
bound
out
stos
mov
fldt
sbb
aas
clc
xchg
sub
rol
or
les
ljmp
scas
add
jmp
mov
or
in
roll
ret
in
mov
std
addr16
mov
fbld
stos
outsb
icebp
es
mov
jle
test
ja
cmp
pop
std
and
and
dec
dec
mov
std
ss
inc
mov
jmp
jmp
fst
add
lcall
add
sub
jnp
insb
repnz
or
jmp
sahf
mov
mov
rorb
inc
fs
lds
cltd
popa
jecxz
dec
push
int3
fdivr
sub
ljmp
fsubl
cmp
jle
pop
and
mov
xchg
subb
ljmp
and
mov
popf
test
jge
dec
mov
add
ret
mov
cmpsl
mov
dec
movsb
fs
fildl
std
pop
or
push
addr16
sbb
int
jb
loop
arpl
fcmovnu
and
cmp
popf
pusha
inc
and
data16
movsb
push
cmpb
push
mov
mov
inc
jmp
mov
shlb
loopne
or
cmpsl
out
push
jnp
fucom
cli
cmp
dec
dec
fs
dec
push
inc
inc
or
adc
xchg
rorl
push
fcmovne
fbld
fdivrl
inc
push
xor
test
mov
iret
adc
jmp
xchg
daa
out
mov
mov
mov
mov
push
fdivrl
fs
in
imul
push
fbld
bound
sbb
test
in
xchg
int
xchg
in
cli
fcomi
gs
adc
movsl
xchg
jmp
repz
mov
sbb
cmp
movsb
arpl
mov
test
jle
mov
sub
arpl
arpl
clc
les
repz
sub
xchg
push
fdiv
cwtl
mov
lods
ret
fs
lret
sbb
insl
cmp
mov
lods
jae
popl
xor
add
ficomps
add
or
fxch
insb
fldt
aad
or
ret
popf
in
and
outsb
dec
incb
pushf
mov
movsb
outsb
or
mov
jmp
or
in
push
mov
jmp
hlt
xor
xlat
std
js
insb
sar
push
add
sbb
leave
fucomip
dec
or
inc
xor
js
imul
lock
sub
dec
fldl
mov
leave
xor
psllq
push
or
imulb
xchg
into
xor
add
ds
cmp
sub
loopne
xchg
jge
repz
xor
xorb
mov
iret
mov
outsb
mov
xchg
add
fnstsw
mov
les
iret
dec
aam
sbb
lock
call
jbe
mov
mov
push
pop
jns
in
add
lahf
dec
popa
xchg
aaa
cs
jo
mov
jecxz
xchg
popf
dec
data16
mov
push
loop
popf
scas
mov
sti
or
dec
popf
dec
loopne
xor
cmp
or
adc
mov
or
mov
add
imul
sahf
mov
roll
and
rcl
scas
cmp
aad
test
add
outsb
xor
aam
jecxz
sub
cli
lea
and
lock
xor
pusha
jbe
jns
xor
mov
dec
sti
sub
jne
xchg
sub
das
cmpsb
cltd
xor
in
sub
aad
xchg
popa
hlt
cld
jmp
fisttpll
or
xor
fmull
ss
mov
mov
mov
push
inc
jno
push
dec
or
add
outsl
sti
jge
mov
ljmp
xchg
les
sbb
icebp
push
jo
inc
cmpb
mov
dec
mov
mov
jne
push
mov
and
fwait
mov
fnstsw
sarl
ja
sub
inc
inc
int3
or
cmp
mov
sub
pushw
sbb
push
shlb
pop
cmp
std
popa
jno
sbb
inc
pop
cmp
jl
stos
push
pop
js
loope
mov
jae
jmp
movsb
mov
aas
and
dec
mov
loop
fdivl
and
mov
adc
aam
sbb
loope
jmp
cmpsb
xchg
xor
or
inc
jae
je
sti
mov
sbb
push
fimull
rcll
fst
clc
push
inc
mov
mov
aam
imul
loopne
lret
stos
ret
or
test
pop
lock
xchg
xor
popf
lock
roll
sbb
xlat
loope
mov
mov
mov
xlat
data16
ljmp
out
hlt
xlat
or
mov
sahf
shll
mov
cld
cli
aaa
adc
into
hlt
dec
inc
fwait
sbb
xor
sbb
daa
sahf
dec
mov
inc
das
and
push
xchg
repnz
shl
or
lods
mov
jb
arpl
sub
mov
popa
pop
sbb
std
hlt
lea
and
push
adc
popf
ds
adcl
push
pop
into
mov
pop
cltd
pusha
lods
jle
add
sbb
mov
loope,pt
testb
in
rcrl
jbe
pop
in
insl
lret
out
shl
inc
dec
dec
push
sbb
rorb
addb
cmp
push
stos
adcl
lods
or
and
loope
xchg
in
mov
gs
stc
cmp
shl
sbb
mov
jb
jge
insb
seto
xchg
dec
cmc
js
push
test
cmp
div
cmp
inc
xchg
xlat
push
cmp
mov
mov
outsb
dec
in
stc
sub
jns
xchg
add
push
sub
mov
adc
mov
rolb
rcrb
xchg
adc
pop
pmaddwd
idivb
das
or
xor
in
push
idivl
sub
mov
paddd
jl
insl
call
lea
jmp
insl
cli
aaa
jb
push
and
mov
rcr
clc
inc
lret
movsl
cmpb
shll
jmp
cmc
mov
add
popa
sub
adc
arpl
mov
xlat
dec
xchg
insb
sub
adc
sbb
pop
or
xchg
fisttpll
int3
insl
jnp
add
and
xchg
jle
js
cltd
cmpsb
sbb
sbb
xor
fcmovb
push
gs
xchg
jmp
xor
aaa
adc
and
stc
ficompl
xor
mov
push
ficoms
sbb
pop
cmp
cwtl
sbb
outsl
pop
cld
insl
mov
jbe
test
outsb
loopne
pushf
repz
popa
in
xchg
fs
into
mov
cs
sbb
icebp
lods
repz
aam
lock
and
push
aas
je
xchg
stos
call
aas
fildll
inc
stc
cmp
pushf
movsb
push
nop
loope
jmp
sbb
mov
popf
mov
xor
imul
mov
nop
aad
pop
push
xchg
in
push
jnp
add
shrb
mov
sbb
mov
mov
pusha
mov
mov
or
pop
sbb
lds
cmp
and
push
mov
dec
push
loopne
or
dec
fnstsw
fdivl
mov
std
data16
dec
mov
mov
mov
jge
mov
es
popa
scas
mov
test
imul
mov
rcrb
shll
loope
dec
mov
and
inc
mov
sbb
cmp
mov
movsb
test
call
push
stc
dec
and
sbb
mov
nop
and
addr16
cmp
mov
arpl
ds
ds
and
sti
out
fdivl
ret
repnz
cwtl
cmp
insb
jmp
sti
cmc
shlb
mov
add
mov
sbb
dec
in
sub
sub
ljmp
inc
dec
add
subl
arpl
xchg
jnp
cmc
aam
mov
mov
dec
sqrtps
mov
decb
cmpsb
mov
loope
insb
sarl
pop
xor
insl
popa
jmp
xor
sub
mov
mov
or
icebp
mov
dec
pop
mov
cld
insl
sub
arpl
cli
rorb
dec
in
push
dec
in
sub
adc
push
xor
mov
jo
jmp
sbb
cld
sub
cltd
xor
inc
and
mov
or
insb
data16
mov
mov
loopne
leave
xor
mov
cld
shr
mov
sti
xchg
stc
mov
pop
int3
sar
faddp
jo
les
loopne
fisubrl
out
jnp
mov
roll
xor
cmp
shlb
inc
pop
fidivs
lds
dec
fdivl
or
daa
mov
insb
lods
and
ja
cmpsb
dec
out
leave
xchg
jmp
mov
mov
push
stos
enter
mov
inc
out
in
movsb
mov
mov
les
dec
inc
mov
out
je
mov
push
dec
stos
aad
add
cwtl
out
insb
pop
lock
dec
add
cmp
bound
sub
sbb
pop
test
or
popf
mov
test
xchg
or
bnd
rcr
adc
xchg
pop
insl
dec
cld
les
jnp
dec
dec
xor
cmp
fildl
in
sti
fsubr
mov
add
mov
popa
sbb
mov
fcmovnu
aam
loop
xchg
lods
lea
incl
cltd
add
push
dec
sti
loopne
inc
push
in
sub
and
inc
add
xchg
inc
xor
sti
xor
push
enter
dec
fxch
into
sti
ret
mov
cmp
xor
pop
outsl
sti
lcall
xchg
shll
dec
inc
mov
push
push
fimuls
into
xor
and
push
jae
hlt
fsubrs
arpl
pop
dec
or
je
scas
pop
cmovo
sbb
sub
insl
shl
adc
fmulp
pushf
mov
jns
mov
inc
and
lea
pop
fs
lahf
cmpsw
loop
jno
and
sbb
mov
out
add
mov
jne
mov
sbb
lret
jecxz
adc
dec
add
inc
inc
cmpb
fcmovne
push
enter
push
jae
mov
cld
push
jbe
push
inc
pop
je
test
cld
mov
dec
lea
jnp
std
jmp
mov
testb
imul
mov
dec
mov
mov
in
mov
jge
mov
push
mov
cmp
xchg
mov
add
add
mov
rorl
push
aam
xchg
xor
btr
rorl
cltd
dec
mov
jno
lret
aaa
lock
and
aad
outsb
mov
or
insb
test
sarl
xor
push
mov
dec
call
dec
or
enter
in
mov
loope
adc
test
mov
add
movsl
sub
dec
fstpl
jbe
pop
add
std
call
or
vpaddd
out
and
ret
xchg
cltd
push
popf
mov
or
loop
popa
gs
jge
shll
std
fs
out
sti
pop
movsl
in
dec
mov
fisttpll
pop
int
popf
aad
or
out
mov
push
and
repz
fs
mov
jbe
sarl
mov
or
xchg
sub
icebp
lock
popf
loop
sbb
ljmp
lea
loopne
dec
insb
push
pop
mov
xor
js
dec
add
mov
sub
jb
int
stc
lea
mov
filds
les
arpl
mov
incl
fldl
and
inc
inc
adc
add
dec
aad
in
jmp
or
pushf
popf
cmp
or
adc
cli
xchg
cld
push
add
in
out
inc
insb
loopne
jmp
or
inc
scas
dec
out
out
test
mov
cwtl
imul
lret
jle
arpl
sbb
pushl
or
pop
dec
dec
std
push
lea
lock
out
ljmp
mov
fstps
std
and
lock
jae
rcrl
jle
and
lods
add
sbb
jle
es
jmp
mov
jbe
mov
pusha
ljmp
push
push
das
pop
fsubrp
rorb
ds
std
out
rcl
testb
ficomps
or
mov
mov
add
test
outsl
push
std
jo
mov
pop
lea
mov
cmpb
int3
mov
or
adc
mov
jno
pop
mov
je
testb
push
jmp
shll
mov
and
popf
mov
ret
pop
aam
cli
dec
stc
push
shll
jae
add
mov
mov
jmp
outsb
ficomps
ret
leave
mov
in
les
pop
rcrl
or
pop
les
push
pop
cli
adc
rclb
push
ds
jl
pop
int3
cmpsl
les
aam
es
popf
jle
or
sub
imul
xor
inc
jge
andb
in
int3
popa
mov
int
mov
jbe
arpl
popf
rcll
ss
cmp
and
mov
add
pop
cmp
in
and
xor
or
push
bound
push
sub
push
cmpsl
lods
in
jecxz
jecxz
jns
jp
jae
aam
fsubr
mov
and
sti
fiaddl
pop
push
or
ret
inc
push
imul
xchg
mov
xor
dec
xchg
leave
loope
xchg
int3
sub
stos
out
lret
clc
mov
fsubl
pop
dec
icebp
test
std
lock
stc
popa
mov
push
dec
mov
stc
dec
test
packssdw
dec
ljmp
sahf
ret
jne
jnp
mov
jle
lods
mov
push
bound
pushf
outsb
xchg
imul
ljmp
shlb
fdivrs
inc
mov
jo
stc
lea
dec
push
or
bound
mov
xor
jns
pop
imul
and
lds
loope
add
and
push
into
pusha
iret
add
aas
cli
mov
push
push
mov
cmp
add
sti
dec
leave
push
stos
add
shll
push
repnz
add
out
loope
jmp
sahf
test
mov
rcll
test
sub
sub
cli
packuswb
cmp
cmpsl
xor
mov
xchg
movsl
lds
inc
imul
pop
sub
adc
xchg
call
fiadds
prefetch
aam
loopne
outsl
xlat
rclb
shlb
roll
std
adc
clc
inc
lds
shr
push
std
and
js
and
icebp
xlat
insb
push
xor
push
out
dec
aaa
lcall
push
inc
stc
jo
jmp
movl
cld
fwait
arpl
or
add
subl
in
fnstenv
mov
cwtl
pop
rcrl
mov
xchg
ret
leave
out
ficomps
fimuls
cmp
pop
fsub
mov
add
jmp
jl
inc
dec
xor
and
lahf
out
mov
mov
dec
int
mov
xor
and
pop
push
ja
cmp
nop
decb
jmp
fldcw
scas
pop
add
stc
mov
cmc
cld
push
test
cmp
jno
pusha
jge
stc
pop
pop
fimuls
mov
fnsetpm(287
ret
enter
fs
or
sti
pop
in
xor
je
adc
and
outsl
mov
cmpsb
or
lea
xchg
outsb
cwtl
cmpsl
pop
mov
in
add
cwtl
fsub
or
aam
mov
and
iret
inc
pop
push
ja
cmp
aaa
mov
pop
test
loope
stc
push
push
out
dec
notb
stos
cld
xor
fdecstp
aam
push
dec
mov
pop
jne
xor
popf
incb
mov
add
and
daa
cmp
repz
mov
sub
imul
mov
cmp
mov
sahf
sub
mov
mov
dec
sbb
or
and
stc
push
or
pop
jg
lods
xchg
cmpl
or
mov
jo
cmc
fucomip
xor
dec
lret
push
fs
je
inc
cmp
mov
lcall
inc
popf
hlt
xchg
jae
pop
or
cwtl
pop
fidivs
jmp
test
push
jmp
pop
insl
xchg
mov
in
push
push
js
jae
int
fcmovb
jns
popa
aas
fisubl
and
dec
dec
aad
xchg
or
dec
jo
or
mov
in
push
push
js
fisttps
mov
fistl
enter
lcall
push
mov
stc
arpl
mov
dec
movsl
daa
mov
popf
in
imul
add
mov
outsb
push
xor
mov
mov
and
cld
mov
push
jl
jecxz
cmpsb
jmp
pop
mov
add
mov
fldt
mov
sub
rcrb
invd
loop
repz
jns
jle
xorl
in
fmuls
lock
mov
push
enter
in
loop
lods
mov
imulb
xchg
mov
mov
in
inc
fisttps
enter
shl
mov
sbb
and
std
pop
dec
inc
mov
iret
lock
dec
mov
jmp
xor
popf
out
jae
lods
cmp
mov
enter
rorb
add
and
int
push
loop
fnsave
stos
je
inc
xchg
sub
int3
inc
sbb
xchg
xchg
div
xchg
fsubrs
mov
lods
inc
adc
push
rclb
sarb
or
test
hlt
imul
movsb
scas
mov
mov
sub
push
mov
cltd
scas
mov
out
rcrb
sub
xchg
push
in
pop
sbb
or
cmc
loop
fdivr
hlt
daa
cld
into
into
inc
or
clc
jno
mov
lock
stc
or
and
sti
pop
pop
add
dec
in
imull
imul
stos
or
insl
pop
cmpsl
inc
cmpsl
or
enter
incb
cwtl
ret
sarl
repnz
movsl
sub
hlt
dec
pop
loop
mov
rorl
sbb
fs
leave
mov
sbb
pop
or
shlb
cli
pop
sub
cmp
mov
data16
fldl
mov
lock
push
adc
mov
notl
fdivp
push
in
adc
xor
test
js
iret
push
adc
mov
pop
out
pop
push
loope
push
inc
movsl
jbe
add
jne
add
dec
mov
sbb
cmpsb
dec
adc
std
dec
jl
or
or
in
nop
mov
icebp
fdivrs
lds
mov
in
or
mov
pop
inc
dec
xchg
data16
lret
notb
mov
fs
add
fbstp
xchg
add
test
mov
cmc
fmull
push
mov
fcmovu
cwtl
fucomip
mov
push
in
jmp
in
lea
dec
pop
xchg
jle
movsl
test
cmp
or
out
cltd
aam
jmp
jno
in
fldenv
das
and
sub
jmp
pop
cmp
xchg
xchg
inc
cltd
jmp
shll
jl
xchg
jo
sbb
popa
mov
lods
ss
mov
jmp
mov
adc
hlt
daa
fisubrl
push
cmp
adc
push
push
inc
in
pop
icebp
out
popa
pop
cltd
testb
movsb
int3
xor
mov
inc
xor
mov
ret
or
mov
mov
inc
pop
int3
rorb
dec
cmp
cmpsb
andl
xchg
cmp
movsb
mov
push
lret
xor
dec
stc
hlt
pop
mov
push
xchg
push
push
rcl
loope
cld
popa
inc
mov
out
sub
xchg
push
movsb
loop
loope
jmp
jg
mov
mov
sub
jle
push
sti
dec
icebp
mov
jno
in
xlat
push
popf
subb
mov
add
adc
pop
mov
or
shrl
testb
mov
xchg
lret
or
enter
in
add
and
mov
scas
in
fxch
clc
shrb
push
adc
int3
arpl
cmp
cmp
jno
repz
mov
mov
rorl
push
orl
adc
or
bound
cmp
or
push
pop
cmc
fs
dec
inc
shll
js
out
jb
mov
insl
incl
cmp
mov
or
neg
jno
mov
pop
inc
loop
push
test
fnop
push
call
sti
mov
pusha
push
mov
sbb
out
clc
lock
xor
out
adc
pop
inc
shlb
xchg
sbb
aas
sbb
cmp
daa
arpl
sub
mov
adc
pop
int
repz
repz
sbb
push
xchg
fidivrl
shl
imul
movsl
mov
test
lds
inc
mov
shlb
jmp
lea
movsl
rorb
and
push
mov
or
subl
dec
ret
sbbb
mov
xor
sub
popf
inc
mov
in
lods
push
push
dec
mov
push
cmp
movsl
shll
mov
mov
adc
insb
test
popf
or
add
or
cmpsl
fadds
mov
int
aaa
push
mov
test
std
popf
mov
push
jmp
notl
fadd
sub
dec
or
cmovns
subb
mov
in
movsb
sbb
pushf
jl
popa
xor
jmp
inc
addl
or
dec
incb
jg
aad
subb
imul
jns
fs
sarl
push
mov
or
xor
stc
add
and
dec
sub
clc
cmpsl
sbb
sub
out
in
inc
cs
cltd
ss
xorl
add
pop
push
dec
sahf
xor
shlb
xchg
call
imul
popf
sarl
push
pop
lea
mov
mov
jmp
cmc
jmp
cld
cmp
mov
scas
mov
pop
in
movsl
in
jmp
in
push
xor
imul
loope
cltd
jae
or
mov
scas
dec
je
test
mov
in
or
dec
fucom
mov
shlb
fnstcw
fdivr
aam
inc
cwtl
sub
in
mov
fdivr
in
aam
imul
pop
movsl
int
in
and
mov
dec
in
mov
in
popa
std
in
sub
mov
adc
jecxz
in
xor
xor
ret
adcb
jecxz
lds
jmp
into
in
mov
dec
push
inc
fs
in
fs
xchg
loope
lahf
jl
jmp
fsub
mov
daa
mov
inc
cmp
xchg
ss
sub
nop
mov
inc
stc
or
hlt
in
stos
call
movsl
fistpl
in
in
jl
sub
enter
mov
adc
jge
imul
pop
xor
arpl
int3
shl
xchg
mov
adc
scas
fsubl
imul
movsb
lcall
fs
rcrb
ja
dec
mov
mov
loope
iret
cld
cmpsb
or
cmpb
and
and
std
pop
inc
adc
cld
mov
xor
add
fisubrl
stc
loope
jns
add
in
xchg
das
inc
xchg
gs
stc
pop
mov
xchg
jl
test
icebp
cmp
add
fsubl
idiv
cwtl
mov
pop
jmp
dec
mov
push
mov
jg
jo
mov
insl
mov
add
sub
xchg
in
mulb
and
pop
in
mov
into
iret
aam
dec
icebp
out
fldenv
jmp
dec
test
add
in
jp
mov
fldcw
mov
jns
mov
popf
das
std
stc
jl
pop
popa
inc
movsl
std
test
leave
mov
mov
daa
inc
push
push
lods
xor
leave
mov
loope
dec
add
push
imul
or
or
mov
jmp
cltd
sub
cwtl
pop
mov
pusha
cld
fsubp
mov
shlb
sbb
ret
arpl
in
push
inc
rolb
add
push
xchg
lcall
add
int
lds
std
jb
cli
fisttps
movb
dec
sbb
in
rcrl
std
or
lds
roll
outsb
push
pusha
and
mov
imulb
pop
rorb
xor
add
mov
adc
pop
cmp
imul
mov
push
addr16
cltd
shll
and
movsb
out
repnz
es
mov
scas
scas
fneni(8087
divl
jmp
add
jg
or
add
stos
mov
mull
das
popf
xchg
js,pn
inc
gs
mov
jg
xchg
dec
and
xchg
sbb
dec
ss
in
mov
sbb
fdiv
push
shl
push
shlb
aad
or
ss
shll
mov
aam
out
xor
jle
mov
outsl
add
sbb
incb
pop
les
push
mov
add
dec
xchg
popa
in
fldcw
dec
imull
movsl
push
in
mov
dec
jmp
in
sar
ds
aad
inc
loop
iret
aam
lret
ret
out
clc
nop
jmp
lcall
jmp
and
cmp
movsl
scas
mov
nop
jmp
lods
das
inc
pop
fcmovnu
lods
xchg
and
cld
mov
fcmovne
jecxz
shll
orb
test
inc
or
jg
push
jg
lods
leave
ljmp
inc
call
mov
cmp
popl
fimull
cmpsl
xlat
and
in
std
roll
xchg
jmp
jl
lret
inc
fs
addl
pop
mov
push
cmc
or
push
xchg
mov
test
push
enter
sti
loop
arpl
jns
lcall
xchg
addr16
lds
sub
xchg
cmp
add
dec
push
jb
adc
incb
pusha
stc
mov
mov
xor
mov
fcoml
push
and
xchg
jmp
shll
fsub
or
add
mov
mov
xchg
dec
jbe
sti
push
in
sbb
shrl
mov
add
inc
cmc
aam
mov
pop
mov
lea
cmpsb
jno
mov
push
xorb
xchg
push
adcl
and
test
push
add
lock
add
dec
mov
pop
jne
popf
xchg
mov
outsb
insl
pop
xchg
or
inc
mulb
test
loope
fsubr
insl
fldl
into
roll
insl
lret
jl
push
cmp
frstor
mov
mov
incl
adc
cld
loope
pop
mov
dec
insb
adc
int3
data16
push
insl
dec
stos
int3
xor
jno
pop
out
xchg
mov
sub
shll
or
fmul
shl
push
or
or
adc
insl
xor
and
dec
pop
shrb
adc
mov
push
movsb
xchg
das
aam
dec
lock
jns
push
fdivs
push
popf
ret
loope
cli
push
adc
inc
adc
jp
out
add
mov
sbb
frstor
daa
xor
test
jmp
cmc
aaa
iret
sarb
push
push
mov
addr16
sti
in
int
fdivrl
mov
in
lods
cli
push
movl
popf
fbstp
loopne
add
push
mov
les
adc
and
inc
sti
xor
mov
jno
and
int3
andb
popa
mov
sarb
movsb
push
adc
cmpsb
inc
mov
js
adc
mov
xchg
xor
cmpsl
sbb
push
push
stc
loope
pop
das
sbb
imul
in
pop
sti
je
and
dec
cmc
xchg
or
jecxz
out
and
add
mov
icebp
into
popf
adc
fldl
movsb
and
sub
dec
mov
push
xchg
inc
jmp
cmc
and
push
shrl
insl
call
cli
xorb
fadds
jo
jecxz
and
jg
inc
sub
shll
mov
pusha
xchg
insl
jle
sbb
xchg
test
push
push
or
push
push
movsb
sahf
jge
lods
dec
cmp
xchg
xor
aad
divb
jle
cs
jb
cmpsb
xchg
sti
popa
incl
sub
hlt
fdivrp
dec
popl
mov
outsl
adc
test
lods
mov
and
jg
push
xor
mov
add
jne
mov
pop
mov
push
push
cmpsl
sub
popa
cmp
aas
ljmp
or
jp
dec
mov
jne
data16
lcall
sub
adc
xchg
add
aam
arpl
adc
stos
inc
jmp
jp
cmp
push
or
add
inc
xchg
in
insl
idiv
addr16
mov
xor
pop
dec
push
mov
int3
xchg
mov
mov
shlb
pop
mov
mov
sbb
fiaddl
mov
imul
cmpsl
rcrb
dec
decb
fbld
mov
div
push
adc
cmpsl
cli
bound
sub
mov
push
sbb
mov
out
dec
popf
test
subb
aam
fwait
fs
fidivrs
pop
iret
lock
adcl
or
test
ret
or
lahf
ss
xchg
std
fcomps
hlt
inc
sub
mov
cs
in
add
pop
shrl
popf
movsl
add
adc
inc
es
sbb
fwait
add
sbb
inc
pushf
or
jb
sub
mov
jnp
mov
jge
in
fadds
push
add
dec
cmp
sub
xchg
cld
js
fnstsw
mov
stc
cld
mov
stos
add
mov
xchg
xlat
mov
test
roll
scas
rcll
mov
mov
mov
mov
movsb
xor
rorl
or
lret
mov
setl
or
and
cmovnp
les
test
iret
mov
xor
or
jo
stc
mov
insl
lcall
pushf
repz
gs
iret
inc
roll
add
dec
mov
add
jo
rcrl
data16
xchg
in
les
cmp
ds
mov
and
fdivrs
mov
xchg
scas
fmulp
pusha
in
in
popa
ljmp
sbb
les
outsw
inc
faddl
mov
fdivl
shrl
shll
pop
loope
mov
xchg
stc
test
jne
jecxz
xchg
icebp
iret
and
mov
rorl
or
movsb
ss
lea
or
cltd
mov
in
in
xchg
fs
outsl
aad
add
fcmovnbe
add
mov
xor
add
into
push
test
push
call
popf
cld
lods
inc
mov
ror
xchg
clc
mov
push
int
pop
hlt
lea
mul
out
push
inc
cmc
mov
loope
jmp
scas
cli
or
in
xchg
dec
mov
lock
imul
inc
in
arpl
iret
xor
add
adc
in
addr16
sbbl
fcoml
fsubl
imul
in
std
xor
shl
in
les
cmc
sub
in
movsl
cltd
cmp
add
cltd
das
and
daa
stc
sbb
sbb
aad
testb
or
rcll
in
cltd
xor
lock
pop
pop
stc
dec
xor
mov
dec
movl
push
sub
movsb
loopne
mov
outsb
or
loope
cltd
insb
jae
roll
jne
cmp
fst
dec
imul
xchg
inc
sbb
imul
rcr
pop
mov
lret
cltd
dec
push
fs
mov
lods
inc
jo
test
dec
jns
loope
sbb
sub
loope
sti
popa
mov
int
cli
dec
sub
lret
shl
in
stc
loop
fmul
cld
push
ja
xchg
fisubl
mov
xchg
lds
in
in
adc
in
fs
push
lret
leave
xchg
xchg
and
sbb
inc
imul
movsb
jle
aas
sar
or
adc
jge
lods
popf
popf
and
in
and
push
pusha
cmovge
fsubp
mov
pop
stc
cld
push
sub
movsl
test
mov
rclb
stc
adc
in
test
les
in
jl
dec
inc
xorps
jl
or
fs
mov
add
mov
test
or
lea
xchg
mov
sub
in
in
test
sub
xchg
jns
add
push
sti
mov
pop
cld
xchg
pop
lahf
lcall
in
popf
jmp
std
pop
repz
or
mov
jle
jb
scas
lea
pop
incb
mov
inc
gs
push
scas
push
icebp
outsl
decl
es
mov
jo
jmp
mov
fisttpl
add
or
push
add
inc
xchg
loop
adc
icebp
addr16
sub
movsl
adc
scas
mov
cli
jne
or
stos
clc
andb
fsubrl
ljmp
lods
pop
shrl
adc
lret
push
cs
inc
scas
cmp
jecxz
sbb
call
aad
inc
xor
lret
loopne
loope
dec
mov
push
pop
fstpl
adc
sub
mov
fimull
jnp
popf
fildll
shll
push
pusha
hlt
mov
dec
cli
inc
or
push
sub
aas
fs
shll
or
ret
and
data16
outsb
addb
cltd
int
and
xlat
sbb
fcmove
sub
int
mov
lea
loope
mov
loope
xor
rol
dec
mov
in
jmp
movsl
xor
in
and
stos
pop
shll
and
pusha
jl
stc
loop
stc
xor
jmp
fiadds
mov
mov
call
cmp
in
shr
scas
xlat
lds
repz
lods
int
addr16
fsubrl
in
fs
push
out
pop
test
in
std
pop
imul
arpl
pushf
addr16
fcoml
imul
imul
push
imul
in
jg
je
push
in
mov
imul
mov
xchg
imul
xor
add
add
movb
cmpsl
out
xor
dec
add
jno
test
out
cs
stc
dec
or
xchg
cmp
and
sub
dec
xor
pusha
imul
push
in
pop
outsl
ret
out
mov
in
shll
fs
popa
add
sahf
sub
push
in
test
int
pop
lods
pusha
in
cmp
xchg
and
add
mov
je
inc
inc
adc
jno
xchg
xchg
adc
mov
pop
adc
xor
push
roll
sub
xchg
xchg
fcmovnb
je
lods
out
fs
fcoml
loope
ret
scas
arpl
aaa
pop
movsl
mov
std
pop
inc
cmc
jg
pop
addr16
xchg
scas
lcall
insb
push
loope
cld
test
pop
inc
outsb
cltd
jbe
jnp
movsb
sti
rcr
subl
jmp
inc
pushf
inc
popa
imul
dec
push
lds
fisttpll
fcompl
push
hlt
jmp
cmc
xor
stc
fmuls
dec
scas
pop
cmp
enter
loope
jge
push
sbb
xor
cmpsl
push
dec
fdivr
dec
aad
int3
or
sarl
mov
sbb
or
fstp
roll
std
lret
int3
shrl
les
inc
sub
jl
std
mov
les
ret
fs
xor
aaa
fstl
iret
adc
bound
jle
pop
mov
imul
mov
in
push
adc
xchg
std
push
imul
add
mov
add
pusha
xchg
outsb
push
xchg
int3
sbb
lods
ljmp
dec
or
pushf
push
je
lods
inc
call
cwtl
lock
lahf
cmc
cltd
shlb
dec
fwait
lods
ffree
imul
jp
inc
fld1
cmpsl
pop
push
daa
mov
fs
ficoms
xor
es
mov
adc
sbb
add
xor
fimuls
mov
in
adc
sbb
in
leave
mov
sbb
inc
push
inc
loopne
test
adc
pusha
pop
in
imul
dec
inc
jne
rorb
in
or
mov
fstps
mov
daa
je
cmpsl
sti
mov
pop
test
es
lahf
pop
fs
divl
popa
scas
or
je
inc
or
xchg
mov
or
lds
data16
mov
insl
push
in
jo
sarb
mov
jmp
gs
nop
jmp
cmpsb
into
mov
jl
in
or
dec
in
gs
mov
fnstenv
in
push
repz
daa
mov
inc
mov
jo
push
sub
pop
std
xor
ljmp
shll
movb
xchg
or
xchg
dec
test
mov
in
fsubs
fwait
sahf
lock
das
jne
jle
stc
lret
aas
jbe
cltd
pop
or
jg
mull
push
lods
aam
in
jnp
mov
leave
aaa
fdivrp
cmpsl
in
fcmovnb
dec
in
lret
leave
in
shl
cmpsb
sahf
out
inc
into
les
dec
sbb
shrl
scas
insl
scas
lret
fsubl
fisubrl
loope
mov
hlt
in
and
and
sahf
lret
pop
test
loope
mov
notl
lcall
rcr
aas
popa
jmp
fisttpll
mov
stos
js
mov
sbb
add
cmp
in
pop
or
shlb
int3
stos
add
and
xchg
fisttpl
in
and
push
cltd
mov
or
stc
in
sbb
les
cld
mov
push
xchg
add
cmpl
sub
stos
fmull
lods
imul
sbb
arpl
roll
mov
hlt
mov
pop
or
cmp
fsts
mov
fidivl
dec
leave
or
fdivr
add
push
sub
mov
seto
shl
mov
icebp
mov
scas
in
fs
jmp
jl
mov
movsb
push
and
adc
in
cld
dec
cmp
push
push
stc
jae
imul
scas
insl
lods
xor
aas
mov
xchg
dec
xchg
push
fsubl
push
in
push
pop
jl
cmp
sbb
scas
sub
inc
in
sbb
sub
das
daa
xchg
push
fcomps
mov
cmp
add
ret
sbb
out
xorb
cmp
lret
sbb
push
cmp
inc
cmp
popf
in
push
out
adc
push
cwtl
repnz
iret
adc
repnz
xor
into
mov
bswap
sahf
fdivp
aaa
xchg
gs
imul
call
add
fdivrl
in
punpcklwd
lods
es
cmp
lret
es
leave
pop
and
dec
fadd
ret
shll
add
adc
lahf
mov
cwtl
xchg
inc
aas
sbb
lahf
xchg
cltd
dec
les
mov
in
adc
push
mov
ss
sub
insb
inc
jecxz
rol
or
cmp
std
cmc
cmp
mov
cld
dec
call
lds
cli
gs
mov
adc
cmp
cld
std
loope
push
and
pop
xchg
ret
mov
in
aaa
ret
andb
mov
and
sbb
add
subb
mov
icebp
pusha
mov
push
xchg
je
mov
mov
insl
xchg
xchg
jne
fnsave
outsl
mov
cmpsl
jmp
leave
mov
imul
out
mov
in
fs
jmp
adc
ret
into
aas
nop
xchg
add
je
dec
dec
mov
push
sub
sbb
mov
dec
rolb
jnp
enter
stc
outsl
roll
imul
pop
data16
movsb
mov
fadds
lea
js
shlb
push
mov
orl
jnp
sarb
xchg
iret
add
ret
arpl
or
pop
insl
xor
cmp
hlt
add
ficomps
mov
js
cmc
cmc
inc
out
xor
ficoml
cmp
sahf
mov
aaa
pop
int3
loope
lret
sub
pop
push
adc
jle
sub
mov
push
dec
push
pop
fbstp
sub
mov
add
xchg
xor
imul
jle
stc
sub
sbb
xor
sub
xorl
dec
ja
lds
lock
push
inc
int
push
shll
sbb
sub
or
daa
sbb
push
mov
addb
mov
add
test
repnz
xlat
sarl
mov
fisttps
idiv
lock
push
xchg
push
je
cmc
push
js
fdivrs
add
decb
push
xchg
dec
aad
cmp
aas
pop
cmp
aad
outsl
js
inc
mov
in
std
push
adcl
int3
in
mov
or
sarl
in
dec
push
xchg
stc
mov
mov
jmp
add
scas
cwtl
mov
jge
icebp
push
loopne
mov
mov
jmp
or
mov
add
add
inc
and
lret
aaa
loopne
or
push
add
ret
popa
jmp
ret
and
dec
add
sub
ret
ror
movsb
mov
insl
test
movsl
frstor
addr16
test
and
shlb
dec
sar
jg
int
hlt
mov
cs
sub
stc
cltd
push
ficoml
xchg
add
cwtl
cmp
or
cmp
or
mov
repnz
repz
mov
push
mov
aad
loopne
neg
and
cmp
bound
sub
xor
fsubr
push
pinsrw
jno
cltd
out
push
hlt
cld
dec
xchg
test
push
cmp
xor
mov
bound
outsb
dec
xor
jmp
test
in
fs
mov
into
add
scas
into
push
and
outsl
or
in
pop
mov
jne
or
sbb
push
scas
xchg
fsubrl
or
sub
cltd
inc
dec
rclb
in
in
test
in
xlat
dec
dec
fidivl
mov
rcl
stc
fisubl
das
mov
inc
xchg
loope
xchg
or
outsb
popa
in
xchg
cld
mov
jbe
dec
add
ja
jne
mov
sarl
pop
in
sti
orl
and
daa
sub
push
cs
imul
jge
sbb
ja
jne
xchg
stc
and
mul
jmp
jns
dec
and
stc
fisubrs
jbe
jg
cld
hlt
xchg
push
cmp
insl
fsts
adc
mov
xchg
in
jb
daa
jl
fimuls
scas
stc
in
outsl
aam
sbbl
and
arpl
xorl
or
jmp
in
mov
push
xor
cmp
adc
scas
pop
cld
aaa
jp
imul
jge
push
jmp
inc
pop
push
and
mov
mov
and
test
and
cmpsl
std
or
cmp
in
dec
mov
fs
sbb
stos
mov
push
dec
stc
pop
insl
aam
test
xchg
inc
in
and
push
add
faddl
jmp
adc
gs
xchg
loope,pt
and
aam
dec
fyl2xp1
cmpsl
cmp
sbbl
loope
adc
mov
mov
mov
dec
dec
mov
in
mov
lds
jno
out
outsl
sub
pop
push
and
push
or
rcl
sbb
popa
cmp
or
jae
xchg
lret
gs
pop
fldl2e
sbb
jne
pop
jno
repz
fucomp
lods
mov
mov
loope
aaa
psubusw
stc
xor
sub
mov
fs
xorl
adc
dec
jnp
scas
popa
in
dec
scas
mov
mov
stc
cmpsl
cmp
jno
mov
mov
pop
popa
repnz
shrb
add
xchg
lret
xor
mov
mov
fisubrl
jmp
out
ret
xor
aas
clc
cld
aas
mov
ror
mov
cmp
addr16
and
jmp
jle
push
pop
lahf
test
pop
dec
mov
pop
aam
pop
aam
repz
mov
mov
sbbl
xor
xlat
in
addr16
call
or
mov
xchg
and
loope
rorb
data16
inc
jp
std
fs
ljmp
stc
or
lret
push
mov
lods
pop
xor
arpl
pop
inc
xor
into
xchg
jns
ret
inc
lea
in
and
in
push
mov
push
or
pop
outsb
shrb
popa
mov
shl
and
lods
aad
cmp
xchg
leave
jno
lods
add
xchg
or
jl
sbb
xor
and
jne
stc
inc
mov
out
jmp
in
pop
cltd
stos
cmp
jmp
loope
lods
iret
adc
sbb
rcrl
loope
je
imul
mov
add
pushf
loope
jecxz
lods
aam
sarl
sub
leave
sbb
out
lods
dec
sbb
iret
in
push
popa
std
jl
mov
call
lods
cmp
add
loope
loope
out
rcll
arpl
jae
jmp
scas
jbe
push
in
jo
sbbb
add
jo
pop
xchg
jne
dec
and
call
js
mov
enter
std
push
testl
xor
pand
shlb
leave
das
jo
and
rcrb
dec
fldcw
in
lahf
call
pop
xchg
inc
jg
cld
or
lds
lret
inc
add
push
cld
call
imul
lea
push
dec
mov
sbbl
sub
in
and
stos
add
mov
jae
in
sbbl
lret
jo
mov
call
mov
int
imul
arpl
lahf
pop
stos
loopne
or
sub
mov
add
stc
nop
cmp
add
incl
int
outsb
sub
call
and
mov
popf
in
arpl
fninit
pop
jmp
push
jmp
imul
in
test
mov
rorb
mov
cmc
movsl
cmp
stos
addr16
and
sub
ljmp
xor
or
xchg
add
out
in
cltd
fimull
inc
jmp
fmull
movsl
out
pusha
das
nop
xchg
stos
inc
scas
xchg
sbb
mov
mov
mov
test
aam
mov
rolb
fstl
inc
lock
push
outsl
mov
shll
fs
push
arpl
sbb
je
loope
inc
rcll
sbb
pop
jle
aad
daa
das
in
sbb
cld
xchg
dec
imul
stos
or
or
or
and
xlat
fistpl
pop
test
adc
push
mov
and
xor
roll
mov
dec
outsb
and
mov
inc
lcall
push
or
sub
fldcw
sahf
out
data16
mov
mov
loop
xchg
sti
add
std
xlat
or
in
loope
add
ret
loop
into
adc
xlat
test
mov
pop
cmp
mov
insb
aas
jle
out
lea
loope
push
shrl
cli
jmp
xor
movsb
ja
enter
add
out
or
jl
cmpsl
xchg
cmc
insb
stos
mov
out
jl
enter
ficompl
dec
ds
xor
fmul
aam
icebp
shlb
in
fs
stos
xchg
enter
mov
mov
mov
push
xchg
stc
lods
adc
aas
aaa
lods
mov
jl
dec
popf
jmp
andl
add
lds
test
sahf
fcmovnbe
bnd
call
cmp
cmc
fmuls
xor
xchg
mov
stc
lahf
mov
mov
int3
cli
xorb
or
pop
repz
popa
gs
lds
loope
mov
scas
sbb
and
xlat
or
fsub
int3
hlt
push
jno
loope
jecxz
movsb
fmulp
repnz
jecxz
cmp
iret
stos
std
sahf
pop
mov
jecxz
cmp
sbb
sub
arpl
stos
dec
add
fwait
ror
fisubs
mov
and
add
xchg
lods
in
lea
leave
push
dec
adc
cmp
rorb
test
orl
lret
or
xchg
insb
outsb
gs
adc
or
jle
mov
ret
mov
add
push
clc
shrl
jnp
mov
out
pop
pop
ja
or
sahf
data16
inc
addl
push
xor
lock
cmp
in
mov
mov
mov
dec
xchg
es
in
mov
mov
sahf
mov
xchg
mov
idivb
jns
push
jo
dec
aad
loop
jmp
andb
mov
dec
push
fldcw
or
mov
mov
out
ja
sti
repz
inc
push
mov
ja
sti
mov
dec
fwait
pop
sub
test
stos
push
pop
mov
mov
or
add
bound
mov
mov
hlt
jns
in
enter
out
xchg
pop
enter
daa
add
xor
cmp
sub
mov
pop
fnsave
mov
mov
or
icebp
lret
int3
and
or
sub
or
std
loope
mov
lahf
test
dec
xlat
pop
lcall
jno
stos
lret
push
cld
cwtd
cltd
sahf
repnz
es
inc
aas
out
sbb
fcmovbe
imul
fs
in
insl
fidivrs
icebp
xlat
loop
cmpsb
adc
mov
mov
jbe
lock
frstor
adc
es
cwtl
daa
and
repz
jbe
jmp
jnp
dec
adc
jae
loopne
push
xor
jne
in
jns
add
enter
push
sbb
mov
icebp
mov
roll
sahf
and
pop
icebp
int
dec
stos
inc
cmc
lahf
jg
ret
fwait
xor
jne
mov
sub
inc
scas
paddw
xor
cmpsl
or
xor
jecxz
inc
jle
mov
sub
xchg
int
mov
add
fisubs
aas
xor
lret
fcmovnb
cltd
sbb
mov
movsl
and
aam
dec
test
adc
stc
frstor
sarl
mov
adc
fidivl
iret
std
dec
mov
jmp
inc
aaa
push
or
cmp
lret
adc
lock
mov
aas
icebp
push
popf
sahf
add
mov
test
or
cmp
mov
out
push
shll
push
repz
mov
mov
pop
xor
lea
stos
xchg
jmp
imul
cltd
shll
jmp
in
mov
push
stc
mov
fcoml
sar
stc
lret
lods
icebp
cwtl
stc
addl
add
in
xor
imul
icebp
xchg
inc
xlat
jmp
add
mov
fstps
mov
lea
cmp
dec
imul
mov
lods
mov
dec
and
xchg
xor
xchg
inc
fsubrl
jno
or
les
std
shr
les
mov
addr16
cmp
jg
jmp
movb
repnz
shrb
iret
mov
lcall
mov
adc
or
mov
xlat
lea
rolb
mov
dec
cmpsl
daa
sbb
xchg
and
push
cmovnp
in
pop
jns
popa
hlt
lods
aad
cmc
aam
in
in
stos
and
mov
mov
scas
cltd
lea
jae
mov
push
lds
push
aas
stos
jmp
stos
add
cltd
popa
popf
pushf
jno
in
jne
adcb
inc
jns
and
sub
add
inc
addr16
adc
daa
or
jmp
data16
adc
inc
dec
aas
imul
push
js
test
mov
cmpsl
adc
mov
mov
pushf
js
mov
push
cmp
mov
cld
ja
or
arpl
pop
sbb
out
and
cmp
jae
sub
push
js
jnp
loop
popa
mov
popf
aad
mov
cmp
sti
stc
mov
and
incl
popf
das
jno
add
push
add
mov
cmp
or
push
fsubrl
rcll
or
xchg
xlat
inc
adc
loop
mull
lahf
rol
push
sub
jns
popf
mov
fs
inc
fs
mov
jo
xor
adc
popf
stos
ret
ss
loopne
in
loopne
shl
test
lock
mov
loope
std
xlat
pop
js
add
pusha
lods
xor
cmp
hlt
lods
es
fnstcw
je
push
xor
int
hlt
mov
outsl
aad
lret
out
iret
pushf
mov
dec
int
lods
jns
test
rcr
in
bsf
call
nop
int3
popf
ljmp
je
jno
dec
roll
nop
push
hlt
ja
push
cmpsb
cmp
jnp
push
fcoml
fimuls
jbe
jbe
mov
std
test
ja
inc
cmc
pop
popf
shlb
and
clc
into
pushf
dec
cmp
leave
xor
test
jne
mov
jp
shll
add
sti
fdiv
xchg
sti
stos
mov
mov
fstl
sub
jecxz
les
imul
mov
inc
mov
inc
in
inc
add
mov
ja
jmp
mov
sbb
mov
jae
call
mov
in
loopne
mov
sub
fdiv
add
pop
push
cmc
repnz
loope
dec
push
pop
mov
dec
jmp
test
iret
fwait
movsl
rorb
fcoms
or
sub
mov
cmc
jle
data16
in
dec
mov
dec
in
aam
mov
push
insl
imulb
rol
ss
es
jecxz
movsl
mov
add
xchg
sub
jge
imull
jno
pop
push
mov
rcrb
cs
or
call
mov
inc
adc
pop
cwtl
mov
jbe
mov
add
out
loope
sub
or
dec
rcr
lods
cmp
fmuls
in
adc
mov
mov
sbb
rorl
aad
aad
dec
loop
sub
stc
mov
leave
cmovo
test
adc
insb
loope
aad
xchg
repnz
or
inc
in
push
inc
int
shll
gs
fnstenv
or
idiv
dec
adc
repz
dec
mov
dec
stc
pop
pop
xchg
pop
in
dec
inc
sahf
sti
sbb
lods
leavew
in
in
sbb
popa
clc
in
clc
in
clc
in
clc
cld
xor
xchg
xchg
sbb
scas
push
insb
mov
jmp
jle
xchg
xor
add
stos
mov
ja
loopew
adc
jg
mov
out
push
pop
fstps
call
popf
jbe
ljmp
movsl
loop
jno
subb
fs
pop
frstpm(287
int
ja
lods
scas
std
pop
xchg
cli
xor
jno,pt
jne
mov
fwait
xchg
or
rorl
jb
inc
test
repnz
xchg
jmp
jno
gs
jo
add
cmp
icebp
fisubs
xchg
daa
cmpsb
flds
ret
js
cmc
add
les
mov
into
xchg
aam
jge
orl
add
add
cmp
sub
sbb
mov
stc
jle
icebp
sub
push
ds
imul
mov
mov
mov
enter
jo
xchg
leave
push
fisttpll
add
dec
mov
enter
adc
int3
sub
inc
out
xor
and
cli
jo
movsl
rorl
sti
sti
add
mov
sti
or
mov
call
jb
fwait
jecxz
mov
sub
adc
dec
dec
pop
sub
xchg
add
fnsave
lret
dec
mov
xchg
loopne
push
cs
stos
fcmovu
add
out
pop
adc
in
pop
and
fwait
jne
jae
roll
mov
rclb
sub
imul
iret
xchg
add
inc
imul
int
cld
stc
mov
dec
aas
add
sbb
mov
mov
int3
push
std
push
push
adc
push
rorb
cwtl
mov
insb
cmp
sti
mull
xor
inc
addl
int
orl
fidivrl
jne
push
out
aam
mov
in
pop
shl
push
and
xor
xor
ja
xlat
mov
jge
sti
mov
mov
cmc
mov
mov
cmp
cmp
inc
std
sidtl
jmp
mov
fldcw
lret
jnp
lods
inc
sahf
sbb
lea
loopne
push
dec
push
dec
in
mov
or
xor
sti
in
popf
xchg
fninit
lds
clc
lcall
jmp
jne
int
leave
fsubrs
or
xor
xchg
lea
out
push
lahf
ficomps
add
out
jne
shrb
in
and
sbb
sub
stos
aad
mov
cmp
fidivs
jecxz
in
mov
repnz
push
inc
stc
out
mov
roll
and
push
mov
dec
push
in
and
and
enter
cli
addr16
in
mov
call
add
or
sub
jno
test
in
mov
cltd
mov
add
cld
or
icebp
mov
popf
dec
or
mov
aaa
adc
adc
add
xlat
enter
test
lock
add
scas
imul
in
testb
mov
arpl
cltd
dec
out
add
xchg
dec
nop
pop
cmp
sub
mov
std
orl
dec
test
rcr
inc
sub
push
mov
mov
orl
aad
add
insl
scas
mov
repnz
mov
test
adc
or
fldt
xorb
adc
jl
data16
shrb
adc
imul
test
call
jae
mov
stos
stc
out
push
lret
mov
popa
gs
in
enter
jb
fdivrl
ret
adc
jnp
mov
lods
or
daa
xchg
arpl
jne
and
out
std
fnstenv
or
jno
lahf
iret
push
fs
inc
stos
in
xchg
sbb
call
pop
pop
xchg
xchg
lret
cld
lods
sbb
cmp
cld
push
sbb
xor
push
sbb
add
push
aam
lea
or
pop
inc
les
aam
dec
icebp
cmpsl
jge
mov
testl
jecxz
scas
shrb
pop
cmpsb
cli
outsl
pop
push
cld
stos
inc
je
xlat
mov
add
decl
imul
cmp
sahf
mov
sbb
mov
orb
subl
push
test
mov
popa
dec
movsl
push
cmpsb
js
cli
jne
jo
mov
jge
lods
int3
cmp
xor
mov
pcmpgtw
mov
ljmp
mov
cmpsb
rorb
mov
jno
mov
lret
mov
sub
sbb
or
popf
lods
in
ljmp
popf
stc
jbe
mov
cld
cmp
stos
mov
push
and
pop
repz
test
rcll
pop
stos
jo
add
das
and
jmp
sub
xchg
xchg
pop
loope
rcll
dec
out
insb
int3
and
dec
mov
or
call
jmp
sbb
mov
hlt
stc
fmuls
mov
pop
add
or
imul
xchg
popl
neg
adc
mov
add
in
jno
test
and
dec
add
xchg
mov
xchg
pop
xchg
daa
stc
and
loopne
stc
pop
xor
mov
dec
push
stos
jge
and
into
xchg
mov
in
jne
mov
mov
xchg
enter
movsb
stc
stos
into
outsb
xor
lahf
add
jmp
push
push
pop
int3
add
std
sub
rorl
ret
ds
add
sbbb
shrl
stos
sti
mov
sub
fsubs
lret
ficoms
sub
insb
out
in
xchg
in
jmpw
pop
fsubrs
jp
hlt
fimuls
mov
lcall
into
fadd
push
xor
inc
adc
xor
jge
arpl
movsb
mov
fdiv
aas
gs
xor
add
cltd
imul
cmp
cmpsb
jmp
in
or
mov
aad
leave
stc
in
jmp
or
in
std
std
int
shr
js
adc
popf
mov
ret
inc
test
clc
cmp
decl
mov
dec
push
xor
in
jg
mov
cmp
jbe
and
jle
loopne
sti
jmp
mov
jl
test
subb
cmp
inc
xorl
in
or
jo
roll
push
xchg
sbb
lods
int3
pop
dec
xchg
mov
pop
xor
and
test
out
dec
cltd
mov
and
decl
jmp
pop
rorb
subl
xchg
cmpsl
gs
cmp
add
cmp
sbb
lea
into
sti
xor
sub
inc
sub
mov
js
shrl
cmc
xor
inc
pop
cmpsl
sti
push
lods
sar
fmulp
out
pop
mov
xchg
add
pop
dec
cld
and
pop
lcall
jae
call
mov
add
mov
sbb
cmp
jo
mov
xchg
dec
cmc
lret
add
pop
add
sahf
into
repnz
je
lret
sub
lock
mov
add
cli
cld
test
fmuls
lods
frstpm(287
addr16
mov
sbb
pop
dec
inc
lods
imul
cmp
xor
jl
sub
cmp
xchg
mov
movsb
loope
xchg
add
enter
xor
addl
std
push
aad
mov
pop
inc
out
loope
dec
and
pop
shll
loopne
fcoml
les
push
mov
fs
fimull
in
xor
xorb
push
ffree
ret
lret
fcompl
and
cmp
lea
je
and
data16
mov
cmp
pop
test
lret
sbb
mov
incl
outsb
adc
jmp
jne
scas
pop
inc
add
pop
sti
cmpsb
xor
addb
pop
nop
sti
cli
jp
out
addr16
inc
mov
fsts
roll
mov
ret
mov
mov
dec
push
jns
test
push
cmp
loope
ljmp
jo
dec
icebp
lahf
repz
push
or
jnp
or
dec
dec
lock
push
mov
scas
cmpsb
repz
std
jns
popa
mov
in
xchg
in
inc
xchg
fcmovbe
inc
sub
xchg
in
xor
jmp
ja
cli
mov
sbb
jmp
mov
daa
inc
pop
xlat
lea
imulb
stos
jns
sti
ret
or
ja
xchg
cmc
and
cmpb
loop
jmp
cmc
jae
mov
sbb
add
jl
enter
mov
in
cld
cli
gs
scas
cld
pop
xchg
sbb
push
aas
in
lret
fbstp
jmp
pop
xor
data16
repnz
out
jmp
inc
push
xchg
fdiv
jns
adc
cmp
ljmp
fs
scas
sub
pop
mov
xor
pop
int3
lods
cmp
inc
xchg
sti
jns
std
mov
mov
mov
xor
xchg
in
inc
sbb
and
sbb
dec
jnp
mov
fldenv
inc
leave
ja
imul
jne
push
filds
xorb
mov
mov
jne
je
pusha
imul
mov
fcoml
out
inc
sub
rorl
cmp
insb
mov
pop
loope
mov
icebp
push
icebp
shrl
dec
and
lock
push
aas
loopne
sahf
mov
push
inc
and
jno
in
dec
sar
add
loope
sbb
mov
push
adc
testl
ret
xchg
cmpsb
aam
ret
in
jle
mov
ret
inc
push
add
movsb
xchg
sar
mov
loopne
leave
jle
push
test
and
xchg
int
pop
mov
mov
fbld
jp
mov
movsb
cltd
mov
rorl
imul
jns
cmp
mov
pop
mov
cmpsl
xchg
insl
push
popa
cs
jg
sbb
mov
shll
arpl
fs
xor
jnp
cwtl
jle
add
sti
cwtl
xchg
xchg
stc
lea
movsb
mov
push
stc
xchg
out
icebp
pop
rcll
xchg
adc
fucomi
scas
mov
jo
lds
jecxz
xchg
jl
dec
jmp
in
lret
mov
or
test
mov
lods
rorb
jae
loope
lea
loope
jns
mov
sbb
mov
movsl
cmp
adc
xor
inc
imul
in
sbb
xchg
lea
jg
mov
jne
ss
icebp
fsubs
movsl
shlb
fnstcw
mov
dec
and
adc
sub
jg
leave
pop
out
iret
xchg
pop
cmp
negl
fdivrs
in
mov
stos
mov
sub
push
jl
les
mov
or
sub
aad
arpl
or
mov
sub
lahf
leave
lea
or
stos
xchg
pop
jo
out
push
mov
or
ja
pop
or
xchg
inc
lock
xchg
cmp
loope
shl
dec
jmp
mov
daa
fisttpl
int
out
and
fucomp
sti
pop
sub
les
mov
iret
ja
or
call
in
adc
mov
pop
pop
jne
jp
push
mov
fistpl
loop
pop
and
and
icebp
jl
enter
outsb
in
repz
adc
pop
mov
mov
out
neg
aam
or
shll
fwait
xchg
xchg
cmp
dec
xor
mov
pop
jbe
sub
cmp
mov
pop
outsl
xchg
cwtl
lock
pop
aam
sub
gs
pop
repz
mov
and
fidivrl
lcall
int
push
sub
xor
and
cmp
int3
lahf
cmp
jae
out
dec
int3
fwait
and
sub
xor
shll
mov
cs
mov
ffree
test
pop
xchg
js
cmp
pop
shlb
jecxz
sub
shrl
sbb
push
and
mov
test
jb
jns
inc
push
add
pop
cmpl
into
add
mov
or
push
jae
enter
imulb
ljmp
mov
sbb
cmp
mov
dec
jecxz
mov
into
pop
xor
mov
pop
pop
cmpsl
mov
out
test
fiadds
mov
lcall
rcll
mov
dec
pop
loopne
addb
jmp
xchg
push
dec
int
fnsave
adc
fiaddl
out
imul
xchg
fwait
loop
jmp
jmp
or
cmc
lahf
sub
adc
popa
fs
icebp
mov
stos
cs
psubq
cwtl
dec
cmp
jecxz
outsl
jmp
es
add
cmpsl
xchg
adc
mov
sbb
inc
rcl
or
push
push
xchg
xor
push
insl
mov
stos
outsl
and
dec
jmp
testb
aas
jmp
xchg
test
push
cmp
sub
push
ret
lods
dec
les
arpl
mov
fisubs
rol
xchg
mov
mull
and
jmp
jns
dec
lea
movsb
stos
in
dec
dec
mov
sub
mov
and
insb
ret
xor
cmpsl
push
mov
fs
xor
movsl
and
in
mov
outsl
push
loopne
loope
inc
in
repz
lahf
lcall
sub
or
jo
sbb
lahf
or
into
insb
adc
dec
lods
cld
lcall
decl
call
out
cld
into
or
push
sti
rcl
cld
pop
xchg
imul
push
sub
jle
or
cwtl
addb
shll
mov
pop
push
shrb
jo
add
fsubrl
stos
fcoms
mov
testl
popf
pop
jle
pop
cltd
dec
mov
dec
insb
lea
xchg
push
sub
xor
mov
adc
sub
mov
push
add
rolb
in
call
fisubrs
sti
push
mov
and
mov
or
ja
mov
in
cmpsl
cli
mov
mov
jne
sbb
and
mov
sub
jge
mov
sti
sti
cltd
loopne
sub
out
dec
xchg
adc
mov
insb
mov
sarb
stc
ret
xchg
mov
lret
rcrl
test
or
mov
repz
and
repz
pushf
xor
pop
adc
call
fsubl
adc
out
test
or
js
aad
rorl
addl
mov
aam
call
lea
cwtl
adc
imul
cltd
xchg
fimuls
add
or
cs
ja
push
dec
jmp
pop
push
lret
pop
fs
cld
adc
mov
jne
xchg
stos
jo
add
mov
adc
cmpsb
fs
fs
clc
es
xchg
push
push
loope
roll
fadds
dec
mov
out
mov
dec
pop
cmpsb
push
lods
or
cmp
ds
or
icebp
subps
orl
add
loop
mov
lods
push
cmp
cmp
stc
data16
xchg
aad
push
arpl
push
lds
inc
and
test
fnstsw
sti
cmp
mov
dec
push
inc
sbb
ja
inc
cmovb
aam
sub
stos
add
fcmovnb
jmp
out
out
loope
jl
stc
xchg
fsubl
and
sub
in
dec
dec
dec
ds
sub
testl
orl
jl
and
push
shrl
out
jo
test
or
sub
mov
hlt
std
push
sbb
mov
jmp
mov
sub
out
xor
mov
fwait
cs
mov
and
pop
imul
mov
adc
dec
outsb
cli
sti
push
mov
in
aaa
fnstcw
shl
out
lret
inc
or
or
or
cld
mov
and
mov
mov
rol
test
xchg
fsub
aam
stc
lods
loope
or
loope
or
loope
imul
dec
sti
sub
xchg
or
std
stc
int3
hlt
aas
sti
popf
and
push
loope
mov
mov
fs
cmp
mov
dec
lea
or
sbb
cmp
sub
gs
pop
cld
cmp
dec
jne
jle
xor
xorl
filds
mov
adcb
clc
cmp
aas
repz
fidivs
and
in
or
mov
mov
movsb
mov
mov
mov
mov
mov
mov
mov
ficomps
fucomip
fsubr
cltd
lcall
inc
leave
insl
pop
outsl
push
jbe
ret
mov
and
aas
nop
dec
dec
mov
mov
lods
or
ljmp
pop
xchg
movsl
pop
ret
push
call
inc
mov
popf
fcomip
lcall
add
popa
pop
sbb
pusha
test
arpl
mov
fs
jne
mull
jmp
mov
push
daa
jb
cmpsl
lret
add
mov
les
int3
int
ja
dec
lea
mov
mov
jb
icebp
int3
cmp
or
sub
ficoms
inc
or
in
testb
mov
mov
xchg
push
neg
popf
mov
divl
adc
pop
in
xchg
lea
xchg
int3
jne
dec
popf
test
dec
in
scas
jmp
pop
mov
fs
add
mov
push
into
jo
jl
cmp
xchg
int3
inc
out
and
add
sti
or
ss
inc
test
movl
sti
mov
std
and
xchg
dec
mull
outsl
outsb
lods
mov
mov
lods
loopne
imul
xchg
std
inc
ret
sub
add
push
int3
jae
or
adc
dec
add
movsb
pop
out
aad
aas
sub
push
movsl
aad
mov
mov
mov
dec
int3
bound
mov
outsl
sbb
mov
dec
lahf
or
lock
pop
subl
ljmp
aam
loope
dec
pop
cmp
or
sbb
xorb
shll
lods
jl
or
insl
xchg
mov
aam
stc
shll
idiv
mull
pop
cltd
mov
aas
call
jmp
xor
arpl
punpckhbw
mov
call
and
lods
rclb
mov
fimuls
loopne
or
std
loop
mov
dec
test
out
mov
fistpl
cld
push
addr16
fmull
call
lcall
dec
insl
call
rclb
mov
sub
gs
es
icebp
sbb
popa
mov
xor
popa
adc
lea
pop
jne
xchg
pcmpgtb
ret
pop
lock
into
mov
lea
pop
js
sbb
lea
fimull
int3
pop
mov
mul
test
dec
cmc
and
dec
in
data16
cld
cmp
pop
mov
cmp
xor
js
lock
push
pop
ljmp
js
mov
cmp
xlat
movsl
xchg
lcall
xor
or
notl
cmp
add
push
pop
test
cmp
test
in
popf
fidivrl
or
ds
sti
cmpsl
lds
mov
sub
stos
jne
push
test
mov
fmull
fstpt
in
xchg
dec
popf
push
enter
xor
mov
xchg
jl
push
inc
push
in
push
into
sbb
adc
sbb
loope
inc
add
and
inc
cld
xor
push
loop
js
xchg
sbb
fistpl
pop
lock
std
stc
xorb
jb
push
dec
push
dec
or
mov
and
mov
and
xor
mov
inc
rcrl
repnz
mulb
xchg
push
imul
sarl
test
out
fbstp
cmp
hlt
push
out
sahf
xchg
enter
xchg
movsl
stos
adc
xor
and
jmp
std
shll
pop
ss
xchg
xchg
sbb
aam
incl
ret
sarb
dec
xchg
aad
inc
fnstenv
pop
cmp
add
repz
decl
imul
aaa
imul
out
sti
jb
dec
arpl
sbbb
jg
imul
add
xchg
add
sbb
mov
sti
insl
lcall
hlt
adc
pop
mov
hlt
add
or
js
cmp
or
sahf
hlt
shlb
jb
std
cltd
pop
fwait
insl
loopne
fsub
xor
shr
push
adc
sub
outsb
pop
jbe
fsubrl
push
scas
xchg
inc
mov
xchg
push
pushf
nop
loopne
jle
jmp
push
loop
xchg
fimuls
cmpsb
mov
enter
jg
mov
xchg
fndisi(8087
sbb
mov
cmp
xchg
lahf
in
in
loope
mov
gs
stos
and
cld
cli
push
cld
mov
and
push
leave
stc
dec
jnp
and
mov
cmp
xor
and
fdiv
stc
outsb
and
dec
out
aad
outsl
lock
cli
insb
add
imul
jnp
sarl
into
dec
sub
add
pop
scas
dec
mov
mov
fstps
sub
lret
nop
icebp
inc
insl
xchg
ja
xor
icebp
cmpsb
pop
dec
lret
add
mov
xchg
mov
cmc
xchg
in
and
jp
cmpsl
dec
xchg
sub
lret
ja
dec
lea
xchg
fld
aam
outsl
pop
lcall
lret
pop
jno
int
arpl
lcall
add
sbb
pop
lret
sahf
test
add
mov
jae
dec
movsl
mov
dec
cmpsb
jo
sti
jo
pop
or
sbbb
mov
inc
add
jge
cli
lret
movsl
rcll
push
pop
into
ficomps
es
mov
add
jge
mov
jb
lcall
xchg
mov
xchg
ja
sarb
cmp
jb
idivb
sub
mov
pop
push
cltd
subb
aas
pop
outsl
enter
inc
mov
std
in
out
rolb
in
cmpsb
fdivrl
mov
sahf
xor
fsubs
xchg
dec
pusha
imul
adc
es
int
in
push
push
dec
in
jmp
mov
repnz
scas
loop
add
dec
jp
sub
push
mov
std
mov
in
adc
insl
repz
in
pusha
lahf
in
fisttpll
insl
popw
into
fsubp
cmpsl
mov
dec
leave
in
rcll
mov
lods
sub
sbb
lock
dec
std
cmp
in
mulb
stos
lret
stos
fstps
js
shrl
push
and
xor
arpl
xchg
dec
fimull
push
xchg
pop
mov
lock
icebp
shrl
dec
cmc
sub
mov
loope
sti
xchg
pop
gs
aas
xor
mov
orl
jmp
dec
lea
sub
rcll
pop
jle
icebp
xor
jne
incb
sbb
pop
call
mov
loop
lcall
addl
dec
add
jbe
shrl
cmc
and
cmp
fisubl
or
data16
mov
inc
lahf
mov
mov
lea
push
sti
fs
mov
arpl
outsb
clc
jge
stos
sbb
or
in
andb
jbe
inc
in
or
xchg
ss
add
and
jmp
arpl
xor
add
aaa
aad
test
and
cmp
insl
dec
push
dec
cld
sbb
shrb
jb
cmpsb
mov
hlt
loop
mov
mov
xchg
or
loopne
pop
js
test
mov
add
mov
mov
sub
jmp
cmc
lret
dec
js
cs
testl
out
aad
in
adc
jmp
sbbb
sti
int3
and
hlt
insb
ret
imul
adc
adc
sahf
insl
stc
sub
js
and
icebp
fsubrl
out
lea
xchg
fsub
sarl
cmp
mov
imul
ret
outsb
jmp
push
aam
cmp
push
shlb
gs
push
jns
stc
je
mov
js
stos
mov
xorl
pushf
ficomps
test
mov
daa
addr16
pop
fmull
mov
insl
movaps
rorl
mov
sbb
pop
or
cltd
cmp
sub
ljmp
cmp
mov
or
jnp
push
test
adcb
nop
mov
push
xchg
mov
pop
xor
push
shrl
or
stc
pop
imul
leave
pop
movsl
movsl
push
xchg
pop
push
ret
lods
fdivrl
xor
mov
mov
xlat
out
movsl
faddl
subb
lcall
adc
inc
sbb
push
cmp
mov
fiaddl
xor
pop
pop
ja
sbb
iret
ret
xor
pop
mov
and
lods
std
sub
mov
jb
fimull
cmpsb
sbb
jmp
fs
mov
rcll
lcall
int
cmpsb
pop
adc
jb
xor
std
and
test
fisttpl
leave
out
push
mov
mov
push
mov
jge
cmpsb
out
xchg
rclb
xchg
push
add
pop
fcmove
outsb
fsubrp
cmpb
ljmp
mov
cmp
push
pop
test
push
inc
pop
adc
xor
inc
stos
stc
pushf
in
mov
or
dec
cmp
icebp
out
hlt
enter
repz
mov
cmpsl
mov
icebp
push
sbb
or
mov
mov
dec
mov
or
js
cmpl
stc
lock
xor
subb
sub
fisubl
imul
mov
in
repnz
and
dec
or
push
lahf
mov
sbb
dec
inc
fisubs
jbe
stc
or
in
lock
in
mov
inc
rclb
fwait
push
in
ret
stos
andl
in
add
sbb
movsl
sti
or
test
jne
xchg
jle
outsb
mov
lods
sti
inc
xorl
stc
divl
add
pop
loope
popf
pusha
xchg
test
sbb
lds
lods
ror
cmp
lea
xor
mov
xchg
mov
adc
shll
or
dec
sub
or
xlat
popf
lea
sub
icebp
clc
push
sbbb
out
popa
and
xor
mov
jge
in
notb
popa
lret
mov
popl
sar
push
or
push
mov
add
sti
gs
out
jge
or
cmp
popa
mov
imul
jnp
pop
sub
fs
loopne
lret
dec
xchg
cld
jl
or
cmp
je
cmp
add
jne
cmp
inc
or
or
cmp
inc
cld
or
imul
cli
fs
push
daa
aam
gs
xchg
outsb
lret
dec
inc
scas
icebp
roll
mov
push
mov
fs
mov
repz
je
adc
or
cmp
das
std
enter
les
sbb
lea
outsb
add
enter
or
stc
mov
jnp
mov
jnp
jb
ret
xorl
popa
xor
lret
int
ror
sarb
test
mov
icebp
mov
inc
mov
pop
mov
lods
pop
pop
test
cli
subl
in
mov
sbb
int
and
or
int
fisttpll
cld
outsb
lret
lock
jmp
lret
outsb
enter
xchg
lahf
lods
push
icebp
lock
mov
in
popa
aaa
sub
ret
dec
dec
adc
cli
pop
xchg
out
mov
adc
pop
jmp
rorl
xor
js
shll
addb
std
lea
loop
adcb
dec
jnp
cmpsb
sbb
out
push
je
out
jns
lods
scas
sti
mov
js
imul
cmp
mov
dec
nop
in
add
imul
mov
mov
fs
andb
stos
mov
jl
mov
and
clc
gs
incl
icebp
add
jb
cwtl
sub
or
jo
mov
pop
xchg
dec
gs
popf
sti
hlt
add
xchg
mov
aas
orl
test
fiadds
dec
add
sub
adc
inc
dec
rcll
sbb
inc
mov
xor
fucomip
add
popf
jne
js
cmp
loope
lods
push
jo
fcomp
inc
movsl
xor
loop
mov
add
inc
clc
sub
xorb
popf
scas
inc
mov
adc
mov
xor
or
and
std
jbe
inc
bound
fcmove
aas
mov
rolb
jae
mov
jns
aad
pop
or
cltd
fsubs
test
mov
pop
rep
mov
xlat
jmp
in
xor
imul
cmp
and
gs
xor
cmp
in
mov
mov
and
andb
add
dec
mov
into
xchg
lds
add
push
push
insb
mov
mov
adc
inc
arpl
push
stc
sbb
inc
dec
mov
inc
jbe
popa
and
xchg
add
cmpsb
loope
mov
add
icebp
xchg
jecxz
pushf
inc
cmp
hlt
iret
scas
xor
out
xchg
fiadds
loope
sbb
pop
cmc
rcrb
jge
lea
addb
jae
rorb
scas
shrl
dec
fs
stc
adcb
lods
in
arpl
or
sar
push
fcmovnbe
insb
rcl
push
scas
popa
cmp
xor
push
cli
xor
adc
sub
or
sbb
mov
sarb
idivl
popf
sub
clc
fs
push
xchg
in
add
cmpb
cmc
dec
xchg
and
pop
sbb
out
jae,pn
dec
out
rorb
jecxz
ds
popf
jno
maskmovq
testl
lea
sub
dec
mov
xlat
in
dec
or
sbb
sbbl
mov
dec
repz
mov
cmp
and
pop
rol
mov
out
incl
stos
cmpsb
lret
ret
sti
gs
mov
add
fnstsw
and
movsb
mov
mov
sbb
fstpt
adcb
fldenv
and
cmp
jo
mov
cmc
in
fsubrl
xchg
push
pop
mov
mov
xor
sub
mov
push
lea
in
lods
gs
fstpt
inc
mov
addr16
xor
jge
mov
xchg
loope
out
aas
dec
int
daa
cmp
loopne
sbb
lea
ror
dec
icebp
pushf
mov
add
jb
mov
dec
icebp
mov
mov
jge
cltd
dec
jo
shlb
mov
imul
push
aam
add
cld
scas
dec
sub
xor
insb
pop
mov
xor
fildll
cmp
inc
xor
outsb
fimuls
ds
sbb
std
repnz
sti
fsubs
cltd
xlat
push
das
clc
mov
data16
fs
std
dec
lea
xchg
idiv
std
stos
ret
stc
mov
data16
inc
sti
test
call
xlat
mov
lcall
rorl
sbb
gs
std
loope
lods
sar
rcll
xchg
icebp
mov
dec
dec
xlat
adc
mov
out
xchg
fs
loopne
fwait
lods
xor
cltd
jnp
popa
test
pop
lret
jnp
inc
int
inc
gs
push
xchg
push
sbb
sub
adc
cmp
in
int3
sahf
pop
jno
or
dec
push
in
pop
xor
or
fs
lock
push
pop
test
lock
push
fsub
test
dec
insb
int
jge
mov
repnz
adc
in
sbb
shl
jmp
data16
lea
call
daa
jo
repnz
mov
mov
icebp
jo
sbb
lods
pop
int
in
or
and
and
mov
lret
out
je
ret
icebp
shlb
add
clc
jae
sarb
ss
mov
lea
lods
xor
test
and
xchg
rcll
enter
xchg
cs
icebp
inc
hlt
sub
jbe
mov
aam
xor
scas
rcrl
popf
jmp
cmp
pop
xor
cmp
mov
mov
out
fs
xchg
pop
jl
test
and
mov
cmc
nop
inc
into
addb
int
sub
fucomp
mov
and
mov
rcll
pop
mov
dec
or
and
aas
mov
mov
pop
mov
sbb
cli
push
or
incb
dec
xor
mov
fwait
int3
ret
or
sub
lods
push
cltd
or
fiaddl
jge
add
je
add
cmc
clc
push
inc
ljmp
je
inc
pop
loopne
int
push
inc
sbb
xchg
add
lcall
dec
cld
inc
movsb
inc
sub
mov
sub
pop
movsb
sar
and
scas
add
push
sbbl
cmp
in
iret
test
out
nop
add
mov
xchg
sarb
jo
aad
jmp
cwtl
add
jmp
nop
add
aad
mov
cmp
xchg
fs
cmp
fiaddl
ficoml
addr16
jge
pop
cmp
mov
rorb
push
repnz
dec
movsl
frstor
or
out
lock
push
xchg
lret
arpl
movsb
jmp
jbe
and
fistl
mov
jl
sti
addl
sub
xor
sahf
mov
push
leave
addr16
and
movsb
lds
cmpsb
cmp
pop
pop
pop
xor
sub
jp
push
adc
sub
and
jge
pop
jns
rorb
test
nop
lret
int
fcoml
aaa
dec
jo
popa
outsb
xchg
imulb
lret
pop
mov
in
clc
in
clc
loope
dec
imul
pop
leave
dec
lods
scas
shrb
add
add
fs
pushl
cmp
out
popf
ss
roll
test
push
inc
pusha
aad
gs
insb
stc
xorb
and
mov
sbbl
xchg
inc
mov
cwtl
xchg
jne
push
and
pop
mov
dec
jecxz
fldpi
js
and
cmpsl
mov
and
ret
xchg
rcll
push
sub
ret
in
in
sti
dec
pop
das
mov
les
xor
add
pop
inc
xchg
les
or
pop
or
sti
mov
cmp
nop
mov
pop
jg
cmp
add
mov
or
shll
test
cwtl
mov
xchg
or
idivb
lahf
xor
push
xchg
daa
out
add
cmp
outsb
dec
jg
push
scas
loope
fdivs
iret
jno
mov
dec
cltd
imul
inc
push
stos
sub
addr16
push
push
das
xor
andb
mov
loope
push
mov
andb
xchg
fucom
and
idivl
xchg
mov
inc
mov
add
sbb
dec
clc
movsb
sarb
mov
xchg
xchg
push
cmpsb
ja
jmp
mov
pusha
rcl
xchg
lock
cmc
insl
mov
outsb
jns
adc
cwtl
and
shlb
jns
ret
lds
mov
or
inc
push
test
or
cltd
std
xchg
das
fisttpl
mov
mov
rcl
jbe
sub
mov
mov
and
repnz
addr16
sub
inc
push
mov
stc
inc
pmullw
mov
stc
sbb
popf
lea
mov
sbb
cli
mov
and
sub
sbb
cld
js
shl
insl
sbb
add
ds
sbb
jns
shr
and
fwait
mov
fiadds
or
je
loopne
in
dec
mov
clc
pushf
mov
jmp
addr16
std
add
ret
push
rorl
xor
add
cmp
dec
xchg
or
xchg
add
push
dec
loopne
mov
enter
push
xchg
mov
out
ds
out
inc
cld
int
push
dec
clc
std
js
mov
xchg
ret
sahf
gs
imul
inc
in
inc
push
adc
cs
push
sbb
movsb
mov
ss
mov
stc
dec
out
hlt
or
adc
or
cmp
add
or
in
mov
roll
je
lret
int3
push
stc
inc
mov
fst
repz
cmp
loopne
add
dec
in
pop
stc
pop
push
sbb
mov
dec
mov
adc
shrl
rcrl
mov
inc
repz
push
rol
cmp
xchg
push
hlt
sbb
or
pop
mov
lahf
jle
xor
xor
mov
roll
mov
mov
paddsw
popf
stos
popf
mov
sbb
in
xchg
insl
add
lahf
push
std
add
mov
stc
add
mov
cld
adc
mov
lock
cld
idivl
fbld
les
adc
popf
out
xchg
aam
icebp
loope
ljmp
fcoml
mov
callw
mov
subl
xchg
stos
fnstenv
mov
sub
in
sbb
cmp
jb
sbb
dec
mov
pop
ja
fimull
mov
mov
out
aam
int3
pushl
sti
repz
adc
add
mov
movsl
sbb
mov
repz
cmp
rorb
dec
rol
pop
out
dec
lea
mov
jno
pop
mov
dec
push
les
adc
out
cmpsl
pushf
outsb
enter
enter
ffree
mov
inc
adcb
jne
out
cld
or
jb
fistpll
mov
lods
test
cwtl
jge
clc
div
jns
add
pop
ja
leave
loope
mov
push
xlat
xchg
cmp
mov
sti
nop
addr16
popf
loop
and
std
lock
gs
or
ja
scas
rolb
int
dec
in
repnz
or
mov
ret
lock
stos
mov
adc
in
pop
or
sti
mov
mov
fisubs
add
dec
cwtl
ss
scas
dec
adc
xchg
fisubs
fcomip
shr
add
add
divb
push
xchg
imul
fs
push
xchg
sti
popf
rcrl
out
sbb
scas
jo
cmpsb
add
aam
in
xchg
cmc
psubusw
loope
mov
or
aad
pop
stc
and
outsb
jno
ljmp
xchg
add
pusha
mov
push
inc
push
popf
cltd
js
ss
jl
subb
or
dec
shlb
or
hlt
or
or
jp
xor
mov
mov
in
stc
lock
test
sahf
in
rorl
and
push
xor
bound
das
mov
dec
sbb
jg
and
fnstsw
add
adc
dec
push
mov
and
dec
popl
pop
xor
inc
push
stos
jnp
dec
cwtl
add
stos
mov
mov
add
or
mov
rol
sahf
jne
add
dec
jmp
sub
lahf
jl
movsl
push
das
outsb
dec
cmpsl
fldl
cltd
insl
jecxz
lock
xchg
leave
push
fidivrl
dec
lea
xchg
push
cmpsb
jl
stc
lcall
iret
jne
scas
pushf
xchg
pop
outsl
popf
sti
stc
mov
filds
arpl
int
cmp
dec
mov
push
rcrb
adc
orl
push
cli
jo
add
jmp
pop
or
gs
cmc
mov
xor
mov
mov
jmp
gs
dec
push
mull
sbb
jmp
dec
dec
jb
shlb
add
cmpsb
repz
movsb
inc
aaa
and
add
imul
popa
adc
pop
xor
dec
movsl
fidivs
dec
in
pop
andb
leave
push
push
adc
and
pop
rolb
mov
cld
cmpsl
movsb
shl
xchg
pop
xchg
push
pop
xor
loop
out
mov
jmp
dec
inc
sub
scas
pushf
lods
imul
cmpsl
sbb
sub
stos
std
inc
jnp
push
insb
and
xchg
testb
test
push
scas
pop
cmp
hlt
sbb
dec
decl
push
fwait
xchg
mov
incb
push
sti
fidivrl
rolb
mov
mov
imull
inc
push
cmc
cmp
cli
out
or
scas
scas
lods
adc
jmp
cmpsl
clc
cwtl
data16
lods
xchg
and
stc
fcmovnb
insl
push
sub
mov
xchg
or
out
inc
sub
xor
sahf
cmp
mov
dec
in
cmpsb
fxch
popa
data16
loopne
enter
les
add
js
or
push
movsb
movsl
mov
push
call
mov
stos
popf
rclb
xor
dec
jmp
cmc
inc
pusha
mov
cmp
adcb
inc
dec
iret
and
mov
and
xor
loope
mov
fnstenv
jb
popf
mov
sub
in
lea
lock
stc
push
jecxz
loope
mov
shl
lea
xor
xorb
cmp
aad
add
inc
gs
popa
mov
push
add
xor
mov
sbb
push
or
push
pop
int
lea
push
in
jge
mov
ret
mov
jge
ja
cmc
leave
sub
mov
push
movsb
xor
sub
arpl
cmpsb
inc
inc
push
mov
out
mov
add
push
lods
and
int3
lods
iret
in
push
subb
andl
rcrb
or
insb
lock
mov
dec
xor
test
movsb
outsl
push
dec
xor
mov
shlb
cli
lahf
roll
bound
shrl
or
mov
sub
push
mov
mov
xchg
push
dec
lret
popf
shrb
fcom
enter
xchg
stos
cmp
out
jl
mov
sti
lea
cmp
sub
mov
cmpsl
int
and
xchg
outsl
dec
or
fiaddl
adc
add
les
out
cmpsb
cmp
adc
fimull
int
inc
lret
jae
mov
aaa
dec
popf
dec
dec
pop
popf
inc
sub
mov
mov
cmp
stos
jmp
mov
and
sub
dec
sub
inc
mov
popa
scas
std
mov
jo
les
ret
sti
mov
pop
sahf
xchg
sbb
addr16
jmp
sub
stc
cld
lcall
iret
shl
stc
fcmovnb
and
out
add
sbb
jp
or
adc
lret
repnz
xor
fcompl
mov
xor
adc
push
lods
mov
jle
popa
fcmovnbe
and
jnp
or
in
loopne
jp
aam
js
push
mov
hlt
mov
jl
push
jmp
inc
xor
mov
xor
pushf
sahf
push
fdivrl
loopne
jle
test
cld
mov
int
add
pop
mov
cmpsb
fsubl
cmc
mov
enter
in
loopne
jle
cli
aam
out
or
mov
movsl
and
sub
mov
add
movsb
sbb
pop
or
sub
mov
jge
dec
and
popa
and
push
jmp
push
xor
cmp
or
lret
loopne
push
mov
inc
dec
scas
sbbb
cmpsb
or
stos
insb
sub
push
jl
test
mov
stc
inc
xor
sahf
outsl
push
lcall
cmp
sar
xchg
cs
mov
add
movsb
negb
out
push
mov
xor
dec
sbb
scas
lret
out
daa
dec
push
loope
stos
sahf
stc
rep
adc
mov
loop
xor
sub
sbb
fsubrl
das
jmp
xor
add
ljmp
push
les
sbb
pop
test
cltd
aas
addr16
xchg
fisubs
or
fistpl
in
jmp
xchg
xchg
movsb
or
into
lods
adc
xchg
imul
fs
mov
shrl
mov
jb
sbb
scas
push
pushf
setg
sbb
movsb
inc
pusha
xchg
pop
add
or
or
lods
add
mov
sbb
sti
test
jp
scas
and
or
clc
add
loopne
push
pop
in
mov
je,pt
sbb
cmp
iret
cltd
scas
sbb
pop
pushf
hlt
jb
mov
jno
xor
lock
movsl
sbb
pushf
fmuls
pop
dec
sahf
or
in
mov
inc
and
and
and
and
xchg
sahf
sbb
push
push
dec
in
sti
jo
jns
enter
push
scas
les
neg
adc
mov
push
jp
aam
push
xchg
pop
adc
jl
cmp
pusha
adc
push
or
icebp
jmp
mov
push
sbb
sbb
aad
les
shrl
add
ret
sub
pusha
xor
repz
in
jmp
jg
call
sarl
mov
gs
mov
out
std
mov
in
loope
std
lods
sub
dec
jo
dec
out
mov
jle
cwtl
loopne
stc
dec
popa
leave
lods
mov
sbb
sub
testb
decb
push
xchg
add
xor
mov
leave
mov
pusha
bnd
pusha
popf
dec
or
push
outsl
mov
test
dec
imul
icebp
push
mov
fmull
in
dec
or
into
stc
movsl
jmp
stc
mov
leave
popa
xchg
pop
stos
test
paddsb
lcall
mov
mov
push
dec
movsl
loopne
cmpsl
out
insb
mov
test
lret
pop
cltd
notb
add
pop
test
cmc
xchg
lea
stc
pop
lods
dec
not
psrlq
inc
mov
push
rcll
cmp
fisttpll
dec
sbb
jnp
cmpsl
pop
inc
lock
or
call
movb
and
or
je
je
in
jmp
idiv
mov
jmp
insb
mov
xor
popa
jmp
sarl
cmp
jmp
pusha
xchg
or
jle
xchg
popa
loope
pusha
cmpsl
mov
or
dec
xchg
mov
inc
xchg
mov
mov
arpl
mov
shll
jmp
mov
lods
pcmpgtb
ljmp
inc
rorl
or
dec
pusha
sbb
mov
js
mov
jge
je
lahf
popf
dec
mov
xchg
into
xchg
pop
mov
sahf
ss
pusha
mov
fs
scas
sahf
or
push
xor
jmp
stc
repz
xchg
out
cmc
stos
cmpsb
or
cltd
or
cltd
mov
mov
out
hlt
test
repnz
xchg
outsl
add
xchg
stc
fisubrs
jl
imul
fldenv
and
call
sub
dec
into
pusha
insb
iret
mov
std
sbb
xchg
push
sbb
pop
adcb
movsb
xchg
mov
push
dec
jmp
mov
mov
scas
push
stc
jmp
cmp
rcrl
or
adc
sarl
dec
jne
fnstcw
popa
sub
mov
mov
js
jo
sub
andl
repnz
xchg
add
int
inc
out
ds
mov
inc
mov
incb
xor
or
cld
mov
push
stos
bound
add
fisttpll
push
push
fs
mov
enter
xchg
sbb
push
xchg
adc
hlt
push
popa
xchg
test
inc
push
in
xchg
mov
mov
pop
inc
adc
sbb
jb
notb
xor
xchg
pop
pop
cmp
lahf
mov
sub
and
sbbb
rorl
jbe
lds
xchg
subl
add
pop
arpl
lds
push
cmpsb
xchg
add
arpl
jbe
jle
imul
xchg
mov
in
fistpll
mov
mov
lret
int3
arpl
xchg
sti
mov
or
add
pop
sbb
in
loope
loop
or
out
rorb
loop
ja
icebp
mov
mov
xchg
fisttpl
lea
or
popa
popf
pusha
mov
mov
or
and
mov
adc
je
push
stos
dec
lret
adcl
scas
sahf
inc
outsb
imul
daa
clc
ficoml
or
mov
jb
jmp
js
or
jg
in
xchg
imul
jae
in
std
stos
fs
shlb
je
mov
adc
cmp
cli
pusha
mov
xchg
adcl
pop
or
xorb
mov
sbb
adc
mov
fnsave
push
popf
lea
mov
dec
or
popf
aad
imull
test
cmpsb
adc
fildl
jb
jno
inc
pop
xchg
sti
insl
pop
xlat
inc
cmp
shl
mov
rolb
aaa
pop
push
and
jge
xchg
or
sub
mov
or
sarb
push
enter
xchg
inc
dec
sbb
jg
neg
cmpsl
mov
lcall
xchg
dec
int
popf
mov
push
dec
mov
rcrl
mov
roll
sti
cmp
aaa
dec
jb
mov
sub
cmc
push
in
and
outsl
dec
stos
pop
shlb
stos
in
pop
callw
call
enter
fisttpll
dec
in
pop
in
cmp
or
push
into
push
imul
fistpll
aas
cmpsb
aaa
jmp
mov
fnstsw
dec
inc
xor
xchg
push
mov
jp
xchg
stos
jmp
ret
jns
xlat
lcall
mov
cmc
repnz
mov
ss
jnp
sub
pop
bound
mov
cmp
scas
movsl
in
mov
sti
mov
mov
cwtl
lret
pop
adc
es
dec
cmp
mov
mov
ret
adc
shll
sub
shlb
xchg
adc
sti
in
divl
push
cmpsb
cld
mov
daa
mov
xchg
fs
cli
stc
or
popf
pop
xor
mov
fidivrs
push
es
push
adc
sub
add
mov
stos
dec
js
sbb
lods
int3
std
mov
ret
mov
popf
cld
scas
cld
sti
cmp
in
mov
jne
mov
and
mov
dec
idivl
lahf
lahf
aaa
cmp
mov
xor
dec
icebp
adc
cmp
aad
mov
dec
sbbb
sbb
lret
mov
xchg
or
or
mov
out
pop
xchg
scas
adc
pop
pop
std
jg
cs
fs
ret
xor
icebp
ljmp
mov
add
pop
rorl
test
mov
popf
sti
push
loop
and
lret
xor
add
xchg
push
pop
mov
aad
sbb
int
fs
repz
push
jne
pop
pop
or
push
stos
sbb
clc
cmc
sbb
xchg
in
in
stc
sub
out
pop
inc
adc
int
es
cmp
dec
or
push
mov
sbb
lret
xchg
pop
aas
mov
push
pop
fs
and
mov
js
xor
das
jnp
dec
push
out
or
mov
sahf
mov
mov
sub
shr
xchg
lret
in
cli
mov
add
in
dec
adc
roll
frstor
pop
and
aad
mov
popa
or
std
mov
or
jp
movsb
dec
int3
push
mov
push
movsb
mov
outsb
sub
lock
hlt
xchg
cmp
test
sahf
mov
mov
jb
in
push
inc
jle
repz
rcl
lds
lret
mov
mov
adc
jg
inc
add
inc
loope
or
imul
jp
lock
adc
je
loopne
sti
cmpl
push
add
jbe
int3
add
sub
or
imul
dec
std
mov
dec
pop
mov
add
cmpsb
out
cmovp
dec
pusha
jns
or
sahf
aaa
sbb
adcl
pop
in
stc
stos
call
inc
dec
stos
sahf
rcrl
xlat
jle
xor
jmp
jns
mov
inc
out
xor
mov
jne
mov
cmp
push
push
mov
sub
pop
mov
mov
jne
and
lds
or
inc
jnp
cmp
and
shrd
cmpl
ret
in
pusha
sbb
push
jo
inc
icebp
cltd
push
mov
pop
mov
subl
push
inc
iret
push
outsl
mov
sti
mov
sbb
lea
into
jne
stc
jmp
jmp
jno
jns
and
xchg
aaa
and
mov
jns
add
push
push
inc
mov
fs
jmp
aaa
jge
bound
push
clc
iret
into
adc
inc
lods
ret
add
test
shlb
xchg
sub
jne
fisubs
test
stos
insl
je
clc
ret
hlt
mov
repz
dec
iret
cmovo
fbld
xor
sub
jp
nop
aad
pop
xchg
dec
mov
test
xchg
enter
mov
std
popf
jp
dec
cld
out
xchg
mov
xor
jo
movsl
lods
cld
stc
orl
fisubs
pusha
js
out
bound
bound
fcmovnbe
mov
push
clc
and
dec
jg
add
cs
imul
lret
mov
xchg
std
test
inc
jo
dec
outsl
movsl
adc
or
arpl
test
mov
aaa
out
inc
outsb
mov
mov
aad
or
inc
cs
addr16
clc
sti
sarl
and
enter
inc
stos
sbb
in
fld
pop
popf
mov
mov
aaa
pop
insb
push
cld
outsl
mov
dec
xchg
xchg
xor
enter
xor
push
ret
sarl
insl
dec
pop
ja
inc
mov
xlat
fdivp
or
mov
adc
pop
or
popa
jmp
adc
test
pop
std
inc
lret
fldcw
cmpsl
push
and
and
cmp
jle
inc
cld
out
fidivs
jns
jl
mov
into
incb
mov
cld
subl
shr
mov
arpl
add
and
js
movsb
jmp
xchg
call
repz
imul
pop
pusha
adc
in
and
add
or
xchg
mov
sahf
int3
lea
pop
addb
mov
aad
adc
dec
and
popf
add
insl
pop
sti
popf
in
pop
cmp
stos
aaa
mov
push
pop
add
rcrb
jae
push
or
mov
dec
push
lret
mov
sbb
ljmp
mov
pop
jmp
bound
cs
jge
pop
ja
cmpsb
loope
xchg
push
lods
cmp
lds
fnstsw
mov
mov
pop
cmpsl
aad
incb
pop
inc
xchg
jge
movsl
pop
xchg
testl
inc
call
or
xchg
or
lea
lret
cmp
jmp
fcmovnbe
cmp
icebp
or
or
idiv
lahf
sub
and
dec
xchg
push
hlt
pop
and
push
bnd
cmp
ret
sar
lea
cmpsb
cli
or
mov
jnp
scas
in
in
mov
sub
mov
movsb
gs
and
lret
and
adc
fldl
jmp
mov
inc
sub
xor
xor
mov
push
out
dec
xor
inc
je
mov
das
and
dec
lcall
inc
adc
movsl
pop
arpl
jecxz
push
notb
mov
mov
sub
outsb
mov
scas
test
dec
jno
xorl
and
add
mov
mov
cs
push
cli
lret
rcr
inc
testb
push
test
popf
adc
push
dec
cli
adc
cmc
push
add
lea
jecxz
jl
push
loopne
xchg
clc
popf
or
cmp
jecxz
mov
out
jbe
mov
inc
fsubr
cwtl
sub
sti
lea
std
loop
mov
hlt
mov
cld
add
xchg
std
and
pop
xchg
inc
leave
cmc
pop
dec
sub
dec
gs
sbb
or
dec
and
xchg
xor
push
xchg
cld
mov
or
xor
sbb
sbb
lock
or
decb
mov
push
cmp
sbb
sarl
mov
mov
ja
cmpsb
lock
popa
ss
jg
ret
sub
aad
jecxz
fadds
lcall
cmp
mov
dec
mov
mov
jmp
in
scas
call
cltd
test
in
cmovle
gs
pop
rcrb
push
sub
xor
xor
mov
cmpsl
test
jp
jmp
loopne
xchg
or
aam
jno
lods
jo
orl
ficompl
jmp
or
enter
sbb
imul
lret
insl
loope
out
out
test
or
das
and
or
repnz
pop
repz
lock
sti
pop
lret
popa
mov
hlt
cmp
mov
dec
push
xchg
sar
ret
je
in
push
outsb
mov
jmp
imul
cmp
lret
sbb
outsl
das
je
inc
cmpsl
testl
jmp
sahf
repnz
cmp
addr16
mov
lret
jp
mov
push
js
dec
and
pop
pushaw
xor
adc
sbb
out
dec
dec
jle
cmp
jb
mov
stc
popa
test
mov
cli
jmp
or
data16
stc
cmp
cltd
jnp
jno
jns
push
enter
push
shrl
push
xorl
andb
les
cmp
pusha
jae
shll
cs
rclb
jns
inc
test
shl
test
add
mov
sbbb
inc
pop
rcrb
add
scas
movsb
addb
mov
add
negb
inc
sarb
cwtl
int
aad
mov
aaa
mov
aam
enter
rcrw
mov
and
popf
loopne
or
jp
pop
call
xor
pop
aam
ret
cmc
pop
mov
lea
add
rolb
dec
sub
cs
inc
mov
mov
sbb
mov
push
jae
sbb
mov
mov
ljmp
xor
ret
jae
mov
in
cld
jno
int3
lods
mov
movsl
adc
jne
mov
adc
out
addb
push
sub
mov
repnz
mov
lahf
roll
loop
cmc
mov
mov
cmp
mov
add
mov
movb
xchg
and
ficoml
call
call
inc
in
aam
xchg
cmp
popa
and
clc
mov
add
and
data16
add
fisubrl
cld
int3
mov
adc
add
add
std
or
jle
sbb
std
pop
fs
mov
ds
dec
fdivrs
sub
in
jmp
add
dec
insb
out
push
call
pop
push
sti
mov
addr16
jae
loopne
aad
sbb
or
cli
xor
lret
cmp
xor
cmp
es
int3
test
inc
jb
ljmp
popa
lret
lret
cli
sarl
fisttps
sbb
leave
ja
andb
jp
fildl
push
ror
mov
push
enter
ds
push
xchg
jl
inc
ljmp
stos
icebp
fwait
icebp
popa
xor
mov
jnp
movl
pop
aaa
inc
addr16
pop
bound
stc
cs
or
lret
sbb
push
insb
mov
add
or
or
std
push
repz
jno
or
inc
dec
add
mov
data16
enter
mov
out
in
jmp
out
enter
aam
stc
and
in
or
imul
stos
lock
cmp
aam
repz
inc
out
jg
jmp
mov
or
test
xchg
ret
mov
mov
subb
outsl
xor
sbb
int
xor
jns
andl
imul
mov
mov
adcb
stos
hlt
dec
mov
popa
mov
orb
in
insb
ret
add
xchg
add
mov
shlb
mov
repz
shlb
fcomp
popa
clc
test
dec
pusha
lret
mov
sbb
repz
or
movsl
stos
lock
add
gs
in
jo
stc
push
dec
stos
or
imul
imull
outsb
std
mulb
cltd
push
hlt
sub
lret
out
stc
mov
jne
cld
mulb
imul
insl
in
lea
push
xor
inc
in
mov
xor
push
daa
pop
insb
call
loope
dec
mov
lods
sub
jb
scas
xor
push
testl
int3
push
cltd
das
mov
aad
jo
cli
ss
dec
subb
xchg
lcall
dec
movsb
sti
push
pop
aam
call
stc
sub
movsl
stc
and
loope,pt
jmp
in
xor
enter
jno
dec
mov
cmp
lods
lods
rolb
stos
dec
rcrb
loop
movsb
dec
in
inc
adc
dec
mov
lock
ret
stos
ss
pusha
and
out
or
jmp
and
xchg
push
adc
jno
cmp
xchg
inc
das
push
iret
xorl
shl
stos
ds
adcl
push
popf
add
and
mov
push
mov
loope
lock
adc
jg
push
movsb
xchg
or
lds
rcrl
rcr
orl
add
xchg
mov
or
outsb
cmp
or
cmpl
pusha
jecxz
sub
nop
mov
shll
pop
stc
incb
sarl
subb
mov
xor
and
loope
jl
jecxz
sub
les
jo
push
mov
add
mov
and
adc
add
js
addr16
mov
jno
jb
jl
mov
xchg
insl
das
aas
jmp
jbe
ja
dec
mov
int
jne
push
xchg
push
test
xchg
lret
int3
rolb
cli
push
sub
fsts
dec
stos
jne
jbe
aad
cld
dec
imulb
jbe
aaa
or
xor
call
xor
sti
popf
push
sarl
lods
insl
popa
cmp
mov
adc
sti
mov
jecxz
adc
add
dec
mov
or
dec
cld
dec
inc
fstl
fldl
xchg
and
cmp
push
push
sbb
push
clc
nop
xchg
mov
inc
add
cli
adc
out
out
pusha
xchg
call
mov
clc
out
std
jno
adc
or
dec
ret
mov
pop
sbb
ret
sub
std
cli
xor
jnp
pop
lret
jle
sbb
cmpsb
idiv
ja
mov
popf
mov
mov
push
jle
test
pop
lock
js
imul
cmpsl
sub
sub
jae
outsl
lret
inc
push
icebp
js
sub
popf
aaa
add
in
mov
pop
xor
cmp
jl
mov
mov
mov
pop
jb
jae
test
xchg
clc
pop
mov
repz
jp
jl
mov
xor
or
jmp
adc
adc
xchg
add
fnsave
adc
stos
xchg
test
jb
arpl
imul
enter
dec
mov
dec
cmc
aam
mov
xchg
rcll
fsubrs
stos
and
mov
movsl
cli
jp
outsb
into
mov
mov
push
adc
add
dec
sbb
push
ds
sbb
dec
data16
std
jno
mov
dec
movsl
rcrl
add
pop
pop
or
mov
mov
nop
mov
movzbl
or
rcrl
popf
int3
repz
popf
push
cmp
and
test
cs
in
push
or
add
call
icebp
cmpl
sub
add
xchg
in
jbe
xchg
shl
cmc
out
sti
nop
repz
rcr
and
xor
pop
movsl
out
loope
or
xchg
pop
adc
xchg
rcl
leave
dec
in
int3
iret
dec
lock
popf
add
into
pop
stc
cmp
push
add
pop
movb
fiaddl
adc
fidivl
lods
sbb
mov
out
aas
mov
aad
ja
push
stos
or
pusha
sub
add
mov
mov
lock
lock
mov
or
xor
or
stos
addb
mov
xchg
lods
cmc
nop
pop
mov
aad
mov
enter
add
aas
test
xchg
test
mov
popa
shlb
in
nop
adc
adc
mov
fwait
or
mov
adc
in
pusha
insl
dec
mov
in
mov
adc
pop
fsubl
fnsave
xor
shll
fs
stos
mov
adc
in
jno
nop
int
mov
jmp
into
mov
cmpsb
jae
and
mov
fwait
bound
mov
push
addr16
jle
insb
and
mov
loopne
shrl
mov
test
jmp
push
outsb
add
pop
mov
shrb
sub
sbb
add
sbb
pusha
cmpsl
out
xlat
push
fst
fs
mov
ja
cmp
dec
pop
ret
out
jmp
jmp
dec
sarl
ret
lea
xor
rorb
je
add
cmp
imul
cmp
imul
int
aaa
xor
loope
adcl
out
int3
add
jmp
rorb
or
inc
xchg
testb
sub
stos
xor
mov
mov
mov
out
mov
inc
fldcw
shll
ret
fcom
stos
add
arpl
mov
insb
cld
in
icebp
xor
mov
sub
pusha
xchg
dec
add
push
fidivrs
movsb
mulb
xor
lret
ja
jg
cmc
add
sahf
add
jl
jns
lea
movsb
mov
jae
pop
add
inc
rcrb
cmp
push
gs
outsl
shll
and
push
ljmp
lret
hlt
sbb
xor
fs
mov
es
push
ljmp
pop
fsubrp
cltd
int
clc
es
dec
idivl
lea
and
cmp
add
mov
in
icebp
dec
outsb
xchg
mov
jns
push
add
push
jmp
or
push
cltd
mov
sub
ret
add
jae
rorl
stos
add
fidivrl
das
cmpsb
aad
inc
cmp
rclb
shlb
movsb
lods
mov
mov
adc
nop
or
adc
mov
or
std
cmpsb
cmc
and
sahf
jno
push
das
cwtl
mov
jne
xchg
stos
adc
xchg
xor
mov
xchg
and
jecxz
aad
int
adc
cwtl
or
icebp
roll
add
xor
ror
imul
sub
mov
mov
stc
mov
and
jle
test
out
jecxz
lods
jo
pop
aaa
jnp
shrb
mov
movsl
and
pop
insb
cwtl
push
dec
jmp
pushf
add
jmp
jns
in
add
sbb
cmc
mov
push
popf
in
ret
jno
mov
in
pop
int3
jne
imul
push
pop
inc
mov
dec
loop
adc
push
pop
hlt
adc
mov
jl
shrb
jns
shlb
mov
and
cmp
into
mov
cmpsb
ret
out
cltd
sub
mov
fildll
mov
mov
jno
cmpsb
leave
repz
sbb
stc
xchg
ds
dec
sarl
xor
daa
shr
cmpsb
cmp
enter
cld
and
mov
or
dec
shl
les
dec
inc
xchg
mov
in
dec
sbbl
aaa
adcb
push
mov
mov
dec
mov
pop
sbb
push
sar
stc
incb
ds
ds
sbb
and
test
fidivrs
lret
lret
or
std
push
lock
push
das
mov
decb
add
sti
dec
pusha
into
mov
enter
cmp
mov
dec
gs
push
push
cmpsl
fld
loope
pop
enter
dec
pushf
movsb
popl
aaa
pop
in
stos
mov
cwtl
mov
cmpsl
out
nop
int
adc
adc
lahf
sub
sahf
leave
xchg
loope
in
push
push
sbb
pushf
dec
pop
xor
or
adc
imul
fidivrl
fstps
loope
test
xchg
fwait
jmp
jns
jno
imul
shl
ret
jmp
sub
insb
push
and
xor
cmpsl
aad
repz
mov
mov
addb
dec
insl
cltd
or
inc
cld
orl
add
in
push
outsb
mov
cld
in
and
xchg
gs
stc
repnz
inc
xor
jnp
mov
out
inc
js
jno
mov
cmpsl
jb
loop
idivb
dec
test
cmpsl
cmc
mov
andb
dec
loope
mov
mov
xor
sbb
ffree
es
sbb
push
stos
or
lea
nop
addr16
push
adc
ja
vpsubsb
jnp
push
in
sub
js
popa
xor
add
clc
jg
insl
js
jb
mov
fadd
movl
ds
ret
shll
jl
lods
enter
notb
xchg
mov
sbb
mov
jo
mov
divb
es
mov
jmp
test
in
xor
adc
and
push
iret
and
cmp
mov
int
mov
loope
mov
imul
sti
sarb
cmp
mov
imul
jecxz
mov
cld
mov
leave
icebp
mov
pop
rol
mov
cmp
incl
mov
add
jp
fnstenv
mov
sub
sub
pop
fstpt
adc
jle
sub
dec
xchg
in
adc
aas
call
data16
int3
loop
js
rorb
orb
frstor
add
inc
in
pop
out
and
or
mov
dec
or
pushf
rorl
decb
je
int
paddw
loopne
fs
adc
lea
stc
icebp
or
jle
jp
in
sbb
in
cltd
outsb
mov
rorl
xor
inc
pop
movsl
loope
push
std
push
mov
sti
repnz
stos
sbb
int3
jge
shlb
jl
sbb
mov
rolb
mov
out
decl
repz
sbb
repz
mov
inc
ret
movsb
js
and
mov
insb
std
insb
rcrl
cmp
jg
std
leave
adc
inc
mov
adc
movsl
dec
add
rclb
call
enter
std
xor
addr16
cmc
lock
scas
sub
sub
mov
cmpl
lret
adc
fmulp
xchg
sub
add
xor
mov
aad
dec
cmpsb
mov
divb
mov
mov
jb
scas
add
fldenv
cmc
or
push
mulb
push
adcl
fldt
aas
jle
mov
dec
mov
roll
inc
in
adc
add
push
ret
js
stc
add
sbb
and
dec
bound
inc
pop
idivl
sysret
rcll
loop
or
add
outsb
adc
xchg
adc
cmp
sbb
sub
cmpsb
inc
sub
adc
and
inc
cld
pop
mov
or
dec
sbb
jb
ds
jg
scas
xchg
fabs
pusha
lahf
and
xor
enter
xchg
pop
pop
popa
add
mov
add
popf
addr16
pushf
mov
rorl
dec
inc
xchg
rclb
pop
cmp
fs
jmp
bound
std
fimull
rcrb
ja
xorb
sbb
or
orl
mov
mov
xchg
jmp
or
push
cmp
mov
jbe
lret
and
mov
gs
sub
jmp
push
cli
sub
add
xchg
mov
incb
gs
xchg
adc
push
xchg
in
test
in
scas
xchg
add
add
push
aad
cmp
push
mov
xchg
test
add
mov
inc
pop
pop
enter
fistpl
sarl
add
mov
cmp
sarl
arpl
in
in
jnp
ss
ret
mov
sahf
cmp
fs
imul
sub
fs
std
scas
and
jnp
inc
lock
mov
xor
shl
fcomps
sarb
jmp
in
insl
pop
xchg
mov
std
jge
push
mov
std
sbb
and
pushl
pop
and
mov
mov
nop
movsl
arpl
mov
data16
push
scas
jbe
fistpl
mov
inc
adc
xor
int
lahf
mov
jmp
mov
mov
add
jo
cmp
push
mov
mov
lret
jo
mov
sbb
mov
and
inc
pushf
jns
lods
dec
or
nop
test
imul
push
fs
sub
orl
sar
push
pop
xor
fs
cmc
bnd
ja
filds
push
pop
js
in
jl
dec
mov
push
jl
xlat
jmp
ljmp
xchg
lret
inc
into
mov
pop
fsubr
repnz
in
popa
shrl
sar
cld
jecxz
pop
testl
xchg
sub
rcr
mov
rcll
inc
aad
and
lods
jl
stc
cmpsb
xor
mov
mov
loope
jno
lods
inc
push
insl
adc
insl
lea
std
mov
dec
mov
dec
mov
or
push
lds
in
xchg
dec
jmp
fdivrp
int3
in
sub
in
dec
jmp
mov
dec
rorl
xor
rorb
andl
arpl
cld
cmp
popa
and
and
cld
out
scas
mov
lods
xor
xor
inc
popa
adc
xchg
out
and
push
mov
inc
out
scas
fcompl
fwait
and
push
ret
mov
mov
fsubl
xlat
and
mov
ret
sub
in
jmp
and
sub
in
pusha
sahf
and
dec
hlt
movsb
pop
std
push
sub
test
lds
mov
jnp
dec
xor
xchg
and
dec
mov
jbe
lahf
stos
xor
aaa
sbb
mov
aaa
dec
cmp
add
sbb
add
xor
in
inc
hlt
ret
sbb
outsb
adc
jno
pusha
jbe
js
ja
pushf
in
mov
jnp
movsb
loopne
lds
sti
ficomps
and
loope
cmp
aad
push
stc
insb
lods
adc
leave
push
lods
ret
push
and
fstpl
stc
insl
das
sub
push
xor
pop
or
lods
std
outsb
and
addr16
or
mov
imul
jp
and
fdivrp
dec
fcmovnb
cmpsl
in
in
jns
inc
fisubl
int
pop
mov
dec
aaa
faddl
add
pop
cld
jle
mov
loope
lock
shr
ss
stos
lods
scas
jb
sahf
xchg
popf
inc
or
ds
out
xchg
in
iret
jl
ss
inc
pop
xor
jmp
loopne
in
mov
mov
push
jb
push
pop
insl
fldln2
push
lret
lea
insl
ficomps
fs
movsb
cmp
cmpsl
add
orl
scas
mov
lods
dec
js
icebp
cltd
pusha
aam
imul
in
dec
shll
loope
lahf
dec
fnstcw
gs
mov
je
movsl
lds
adc
sub
in
jge
or
pop
inc
es
fisubs
fmull
or
cmpsl
mov
sub
lret
sbb
mulb
sbb
jae
imul
inc
add
mov
mov
jns
scas
sti
or
mov
test
push
in
lea
mov
mov
fnstcw
fcmovu
pop
int3
in
jno
and
out
xchg
pop
jns
stc
xor
fnstcw
add
icebp
fdivrl
mov
and
mov
lods
push
stc
aad
lock
or
jmp
clc
lods
fsubp
arpl
adc
and
fs
sahf
jmp
in
mulb
scas
insb
in
aam
or
and
xchg
mov
loop
loope
jecxz
in
push
mov
out
stc
cld
sti
mov
std
loopne
rcl
aam
push
jne
push
icebp
dec
pusha
sub
rol
or
idivl
mov
testl
dec
std
arpl
mov
cmpsl
std
adc
pop
ret
mov
add
arpl
mov
arpl
stos
adc
pop
lods
adc
stos
or
add
or
add
jmp
std
shrl
push
xchg
movsb
shrb
mov
dec
sub
jno
sub
outsb
dec
dec
out
sub
aam
ficomps
xor
cmp
dec
push
jns
inc
movsl
loopne
xchg
fxch
xchg
in
and
scas
xchg
lret
or
aam
pop
aam
repz
repz
mov
add
xchg
and
jns
mov
or
cmpsl
inc
and
xor
lods
pusha
adc
popf
dec
mov
popa
dec
add
imul
lret
xchg
and
movsb
jne
mov
pusha
push
cmc
movsb
mov
sbb
jno
sahf
xchg
or
mov
movsb
arpl
inc
push
jle
cmp
out
rcrl
or
popa
xor
lret
push
inc
das
subb
ljmp
jp
rcr
scas
out
dec
jb
clc
fisttps
push
add
leave
xchg
dec
sub
divl
mov
lret
jmp
out
jmp
pop
aad
cmp
lods
fcoml
fs
decb
pop
out
sbb
mov
movsl
popf
inc
cmp
add
int
or
lods
cmp
sub
pop
scas
clc
cmpsl
or
sarb
aas
rclb
arpl
cmc
jo
mov
pop
pop
arpl
icebp
add
aas
cld
lock
cmp
mov
imul
ror
fwait
sub
jg
jno
xchg
or
call
fsts
negb
std
pop
sbb
jecxz
xchg
out
push
push
out
stos
xor
jecxz
xor
imul
sub
add
int3
in
sbb
lock
xchg
fs
mov
arpl
out
xchg
dec
imul
mov
cmc
ficoml
cmp
fisubl
mov
mov
hlt
pop
orb
ret
fs
icebp
enter
sbb
stos
jl
je
sar
pop
and
decl
out
sti
dec
lret
adc
pop
std
push
in
arpl
and
out
into
xor
mov
in
stc
ljmp
push
bound
mov
in
ret
and
dec
jmp
push
mov
out
shll
xchg
mov
mov
in
int
mov
aad
test
movsl
dec
jmp
pop
jbe
cmc
aad
xchg
sar
sar
xchg
fscale
insl
add
idivl
mul
mov
jb
enter
inc
inc
add
loopne
xchg
popf
enter
jmp
xor
or
dec
in
mov
ja
loope
aam
jecxz
call
xlat
shlb
stos
lahf
inc
mov
ljmp
xchg
fxch
add
movsb
insl
push
inc
mov
xchg
or
pop
xchg
movsl
test
dec
xchg
fwait
mov
insl
and
sarl
aam
ds
cli
in
mov
pop
and
shlb
inc
push
xor
xchg
repnz
mov
loope
sbb
in
cltd
test
pop
out
pop
xor
out
mov
fsubs
out
out
call
mov
and
shl
ss
cmc
sub
pop
addr16
in
shrb
push
push
xchg
push
sbb
gs
shrl
cmpsl
lods
pusha
cs
shl
fnsave
nop
xchg
stc
xor
jnp
rorb
adc
add
cmp
xor
mov
adc
mov
jae
pop
mov
xchg
pop
fdivp
sbb
cmpsl
imul
int3
shlb
jge
shll
lea
push
lods
xchg
inc
pusha
sub
loop
out
and
mov
loope
and
jmp
lock
mov
mov
dec
dec
or
add
cld
cltd
push
mov
cmpsl
rorl
ja
add
pop
or
insl
aad
mov
mov
and
push
sbb
outsl
insl
sub
dec
outsb
and
add
jb
sbb
cmpsb
divl
dec
jno
cld
cmp
lock
insl
sbb
shrl
xchg
insl
xchg
cwtl
shlb
mov
mov
mov
ret
ja
sbb
add
repnz
or
dec
in
out
aad
repnz
cwtl
dec
fisubs
adc
shll
jl
in
ret
inc
mov
jnp
fstp
inc
jecxz
pop
mov
shrb
pop
in
mov
shl
negl
js
cli
sbb
sbb
fwait
pop
lret
mov
xchg
mov
ja
data16
mov
daa
fistl
stc
sti
xchg
cmpl
popf
pop
sarb
jg
pop
pusha
dec
jo
cmc
push
inc
pop
or
mov
dec
sbb
frstor
loope
xor
adc
out
cmpsl
out
and
xor
aad
mov
cmpsb
rorb
add
mov
pop
imul
mov
or
pushf
dec
cld
xlat
pop
out
lcall
shlb
enter
inc
aam
popa
xchg
rclb
insb
mov
fwait
jecxz
mov
add
loopne
mov
and
stc
push
and
xchg
push
dec
shr
cmpsl
rorl
jb
enter
dec
icebp
lcall
mov
insl
lods
xchg
loopne
lahf
call
mov
push
sub
popf
aam
lock
dec
shl
lock
adcl
arpl
roll
adc
or
loope
cmp
outsl
aam
pop
lds
xor
daa
out
aad
push
addr16
js
js
jns
pop
outsb
push
jnp
loop
cli
lahf
fwait
ret
repz
jns
enter
dec
sbb
mov
dec
pusha
cld
loop
jo
lea
test
jns
outsl
rol
bound
rorb
jne
aad
push
cmp
ja
and
test
jno
pop
xor
imul
leave
and
xchg
adc
aaa
scas
shll
dec
mov
or
data16
sbb
mov
or
cs
mov
out
les
lock
jae
shr
or
shl
std
inc
xchg
stc
call
popf
decl
mov
in
call
mov
fcomip
test
rclb
les
pop
mov
pop
cld
test
push
xlat
push
cmpsb
loopne
push
mov
loopne
out
dec
jle
cmpsb
sahf
in
fadd
cmpsl
push
inc
data16
cmpsl
out
or
out
mov
mov
xchg
jbe
inc
xor
ret
push
jmp
dec
fildl
and
pusha
mov
rcrb
rcl
popf
mov
out
adc
inc
sub
dec
or
in
jecxz
jns
dec
mov
rclb
lds
jo
xchg
pop
int3
sub
dec
loop
and
dec
jmp
push
mov
xchg
mov
or
popf
rorb
adc
add
aaa
int
sbb
movsb
pop
fildl
jo
ret
xchg
stos
sub
aad
gs
roll
in
adc
cs
jmp
sbb
ret
jae
rorl
pop
das
mov
add
cmp
in
jns
addr16
jne
cs
sbb
mov
xchg
push
xchg
lods
cld
call
inc
mov
pusha
adc
mov
rcrl
ljmp
adc
loope
sbb
pop
in
arpl
test
in
lods
mov
pop
ljmp
cmp
test
fs
into
cmp
push
adc
jns
movsb
jge,pt
mov
and
movsb
fisttpl
cmpsb
data16
in
push
aas
icebp
sbb
push
xor
aam
shlb
adc
jbe
jle
or
cmp
cmpsb
inc
mov
gs
flds
lock
lock
hlt
call
push
stos
insl
fistps
in
push
fabs
lds
mov
ret
add
push
jge
fbstp
lcall
in
mov
mov
loopne
cmpsb
xor
push
sbb
jnp
pop
sbb
jbe
xchg
int3
popa
arpl
xor
mov
mov
pusha
mov
fisttpll
in
sbb
iret
or
es
and
popf
xor
lahf
in
inc
xor
jnp
xchg
add
mov
mov
add
xor
or
jmp
add
push
jno
push
icebp
cmc
in
stc
sbb
stc
add
stc
repz
push
cld
add
enter
aam
inc
inc
aam
pushl
push
subb
push
fbstp
gs
sub
xchg
mov
faddl
loop
cs
call
cmp
out
mov
in
daa
arpl
push
into
push
ret
cld
xor
repnz
fistps
mov
clc
repz
xchg
xchg
jo
imul
loopne
popf
pop
insb
movsl
popf
sbbl
add
jae
xchg
add
adc
push
mov
mov
int3
ja
cmc
cmpsl
movsl
push
out
sahf
iret
dec
out
orb
add
push
xchg
fucomp
into
push
xchg
mov
int3
dec
xchg
cmp
mov
int3
add
decl
and
push
push
outsl
and
imull
sub
mov
add
out
in
mov
scas
arpl
mov
inc
add
stc
cmpb
loope
mov
insb
push
insl
movsl
in
enter
imul
mov
in
xchg
sub
cmp
cli
sahf
pop
in
jmp
pop
fistpll
pop
cmpsb
lods
and
xlat
stos
repnz
mov
push
cmpsb
cs
das
insl
mov
push
int
push
in
std
addl
clc
into
mov
mov
push
repz
xchg
dec
popa
loop
or
in
fcmovnb
in
add
xor
jns
jo
out
mov
cmp
imul
jno
sbb
dec
inc
and
mov
adcb
push
inc
aaa
js
movsb
inc
outsl
cli
fsubl
cmp
pop
jmp
popa
mov
sbb
idivb
nop
mov
in
stc
aad
ret
cmpsl
mov
aas
test
fstp
sub
xchg
pop
mov
inc
or
and
jnp
and
cld
insl
dec
xchg
icebp
cmc
mov
push
dec
fiaddl
int
cmp
es
imul
dec
pushf
repnz
jge
into
jae
pop
scas
sti
flds
and
out
and
popa
jns
sarl
stc
dec
cmp
repz
fs
mov
frstor
movsb
dec
pushf
mov
lea
dec
jle
rcr
aam
mov
das
sbbb
mov
or
sbbb
jmp
pop
pop
es
sub
das
mov
mov
ljmp
mov
rcrb
mov
cmpsl
mov
jmp
js
mov
and
add
jmp
cmpsl
sbbl
std
sub
jae
jge
inc
dec
and
sbb
add
mov
dec
push
fisubrl
inc
aas
xchg
jge
xchg
pop
stos
xor
inc
inc
movsb
stos
add
arpl
mov
inc
mov
cmc
jg
mov
mov
jbe
sbb
popf
fistl
enter
push
leave
sahf
jl
out
data16
leave
push
xchg
add
pop
cwtl
pop
adc
or
popf
int
je
sarb
jmp
dec
fsubrs
mov
mov
sbb
imul
pop
ret
test
mov
test
mov
and
push
fisubrl
cmp
test
enter
in
xor
mov
sarl
stos
cli
inc
lahf
mov
ja
cs
xchg
sub
dec
sub
mov
cmpsb
ret
mov
sahf
cmp
test
add
xchg
adc
movsl
lret
idivb
sbb
fldz
xchg
out
and
mov
js
lahf
ret
int
addb
mov
mov
imul
inc
add
imul
loope
in
mov
nop
mov
fbld
cmpsl
mov
out
ret
scas
mov
add
sahf
mov
and
cld
pop
mov
mov
xchg
push
call
mov
xchg
dec
cld
push
outsb
movsb
lret
in
mov
inc
cmp
mov
fisttpll
push
nop
add
mov
xchg
arpl
sti
add
cwtl
sub
fadd
dec
pusha
mov
push
out
insl
jp
sbb
jg
dec
shll
xchg
mov
xchg
lret
xchg
push
aas
push
mov
adc
cmp
xlat
movsl
dec
cmpsl
mov
mov
lods
daa
int
dec
mov
incb
or
pop
dec
ret
jno
sbb
mov
dec
push
insl
out
xchg
xchg
mov
and
xchg
inc
mov
or
imull
sti
lods
pushf
negl
leave
lea
in
adc
jmp
jmp
add
push
mov
ja
jo
addb
imul
lahf
repz
mov
cmp
punpcklwd
test
mov
js
mov
cs
xchg
pop
xchg
les
cmp
test
jbe
mov
mov
push
cmp
in
cmc
sbb
mov
aad
inc
int3
xchg
insl
rolb
mov
adc
xor
mov
lret
rcl
cmpsb
add
mov
fstl
fwait
cli
or
imul
in
sub
pop
inc
aas
pop
rcll
cmp
add
mov
pop
into
cwtl
lahf
lahf
int3
mov
mov
xchg
mov
xchg
out
jecxz
loope
push
and
xor
inc
aaa
push
mulb
jge
sbb
je
mov
rcll
fnsave
pop
jb
icebp
mov
sub
adc
mov
push
jne
and
adc
aam
loop
inc
mov
cli
pop
adc
adc
add
rcll
sbb
int
or
or
lock
lods
mov
test
adc
mov
and
add
add
push
sbb
test
dec
inc
inc
and
cmc
stos
sbb
das
or
in
out
sti
mov
les
cmp
push
jp
mov
push
mov
stc
push
sahf
or
test
dec
adc
cltd
cmp
jg
jl
out
jo
cmc
icebp
mov
sub
mov
mov
cmc
jne
mov
mov
std
int3
decb
jle
adc
dec
adc
push
lcall
fmull
addr16
orb
sub
sbb
sbb
fistps
dec
in
out
data16
or
icebp
dec
flds
mov
xor
imul
inc
sub
jmp
imul
out
rcl
sti
adc
xchg
mov
sbb
scas
adc
jne
jmp
mov
das
out
repnz
in
in
xchg
lock
jecxz
dec
loop
popa
test
notl
fdivrl
inc
and
in
popf
dec
pop
call
cld
dec
sub
mov
in
dec
sbb
je
jae
mov
imul
das
and
adc
aam
in
cld
mov
mov
cmp
mov
cmc
nop
out
pop
dec
and
cltd
arpl
pop
loope
data16
mov
mov
dec
fisubrs
ja
and
mov
xchg
std
pop
pushf
dec
cld
add
fsubrp
fadd
jmp
ficomps
dec
loopne
cld
lret
call
pop
or
repnz
sbb
cs
arpl
dec
ss
lods
xor
cmp
cld
inc
jmp
pop
pop
sub
jle
movsb
aas
int
mov
xor
out
dec
loopne
fs
fadds
and
push
push
shl
loope
mov
dec
orb
jae
fildl
add
jb
dec
scas
lods
lods
jmp
add
jl
mov
sub
dec
adc
out
xchg
and
and
sub
or
incb
jb
dec
popa
add
loope
sti
and
push
fs
pop
dec
scas
jno
xor
inc
loope
cmp
sarl
cli
pop
or
popa
stc
xchg
aaa
push
loope
xorl
dec
dec
icebp
xchg
aam
aad
dec
hlt
fisubs
pushf
push
dec
and
fwait
in
repz
in
and
and
insl
push
adc
insb
repnz
jl
fcomp
dec
in
gs
dec
fs
fildl
movsl
gs
lret
and
xchg
jl
jmp
scas
sub
and
scas
cmp
sub
push
scas
outsl
rcrb
gs
mov
psubq
jg
jno
xchg
or
mov
mov
or
dec
popa
andb
mov
dec
loop
xchg
and
xchg
xor
test
popa
stc
xorl
xchg
outsb
push
mov
jae
mov
in
dec
cmp
jb
lds
and
out
roll
aam
cmp
push
mov
inc
pop
les
in
aam
add
xchg
and
jne
jg
mov
mov
add
cwtl
fdivl
sub
xchg
jne
mov
mov
cwtl
jnp
aas
sti
iret
icebp
pop
push
mov
repnz
jmp
xor
rcll
and
call
push
dec
add
mov
dec
das
push
push
repz
addr16
jbe
push
arpl
add
jge
nop
adc
push
rclb
lods
add
das
in
mov
push
outsl
lea
lahf
push
xchg
mov
mov
jl
movsb
popf
push
sbb
mov
leave
jno
mov
decb
ss
mov
push
dec
sbb
jge
add
mov
fs
sub
mov
sub
icebp
pop
aam
sbb
lods
cmc
and
jbe
xor
in
mov
inc
cmc
dec
push
out
xor
cmp
sbb
xchg
push
inc
push
xchg
pusha
daa
mov
out
cmp
push
cmpsb
stc
jnp
or
out
fs
adc
hlt
pop
jmp
cmpl
in
mov
xlat
jmp
dec
add
xchg
inc
shlb
mov
push
adc
push
fsts
addr16
lret
scas
data16
push
cwtl
pop
xchg
cmp
sub
pop
mov
stos
mov
mov
movsb
imul
push
push
in
lods
fcoms
mov
xor
dec
sub
mov
lock
mov
shll
cli
xchg
xor
jns
xor
mov
add
pop
xchg
pop
icebp
or
dec
imul
imul
jae
push
mov
clc
ss
xlat
adc
cmpsb
lret
sbb
xorl
xor
jns
and
dec
push
in
add
xchg
fimuls
xchg
mov
ficompl
repz
movups
sub
shl
pop
rorl
cmp
fstpt
push
cli
std
not
mov
cmpsb
jl
ljmp
shll
mov
lds
mov
in
and
mov
imul
stc
aaa
popa
xchg
dec
mov
adc
dec
icebp
ljmp
sub
and
into
inc
shlb
adc
and
xchg
ja
repz
lock
imul
and
mov
int
push
mov
loope
mov
in
jbe
pop
inc
shrb
jmp
in
mov
adc
or
rcrl
fimuls
mov
cmc
rclb
repnz
aas
push
out
cwtl
sub
mov
mov
xor
ret
jp
insl
jl
call
jmp
cmp
stos
mov
xchg
cld
cld
sub
hlt
sbb
sub
xor
sarl
fnsave
add
add
xchg
push
loopne
or
add
js
xor
rorb
in
inc
shll
adc
popa
pop
jno
mov
lea
pusha
sub
dec
pop
mov
xchg
dec
rcrb
addr16
cmp
stos
cmp
inc
outsl
lods
fisubrl
lds
clc
push
cmp
cli
shlb
test
lahf
xchg
outsb
bound
cmp
sbb
in
bound
mov
cmp
mov
and
in
stc
inc
popf
sub
inc
btcl
pop
scas
inc
mov
sti
mov
or
fdivrl
stc
mov
stc
shrl
jl
cmp
mov
ljmp
jl
adc
pop
cli
punpckhbw
ljmp
add
test
lcall
ja
loop
aaa
out
cld
cmpsl
and
mov
movsb
xlat
pop
mov
in
cltd
subb
adc
pop
je
lret
jle
in
loopne
cmc
push
jecxz
jns
out
fnstcw
retw
push
popf
sar
jg
je
lahf
add
jge
addl
pop
push
insl
dec
sbb
add
push
cmpsl
imul
rep
cmp
dec
xor
cmp
lcall
mov
roll
addr16
mov
mov
push
popa
insb
inc
xlat
lock
sbb
sahf
jb
lea
stc
mov
pop
fisubrs
ret
cs
outsl
stos
pop
xor
jmp
ljmp
cltd
add
in
mov
push
test
pop
clc
push
or
repnz
mov
icebp
and
xor
es
into
sbb
and
std
xor
adc
sbb
mov
jge
dec
cmp
repz
add
cmpsb
add
push
lahf
bnd
je
add
addr16
stc
dec
or
add
movsl
cli
in
mov
cmp
int
cwtl
in
sti
ja
lock
push
or
movl
mov
mov
mov
or
cld
xor
mov
js
or
mov
outsb
mov
lret
loopne
pop
ljmp
xor
sti
cld
inc
jns
ljmp
in
mov
out
stc
ljmp
bound
dec
push
fldt
shrl
sbb
mov
js
fnstcw
pop
js
pop
imul
fcmovb
addl
popf
xchg
ds
and
aaa
adc
addr16
cli
dec
test
mov
sub
add
in
dec
xchg
cmp
lods
push
bound
mov
jmp
loopne
xchg
push
mov
repz
adc
pop
ljmp
pop
cli
stos
loopne
jo
subl
add
mov
mov
cwtl
mov
std
xchg
fsubrs
push
imul
nop
int
or
and
mov
xor
icebp
in
fcmove
xor
xor
sbb
das
jg
mov
clc
mov
arpl
inc
data16
hlt
sbb
sbb
pop
cmpsb
inc
cmp
rcr
jae
nop
test
mov
int3
or
cltd
mov
cmpl
out
cld
inc
out
and
and
inc
jmp
push
mov
scas
stos
inc
cmpsb
incl
cmpl
fsubrp
cmp
das
jne
mov
inc
lds
subb
push
lahf
popf
pusha
push
pop
pop
xchg
jo
scas
jmp
push
mov
outsl
xor
js
mov
add
lods
mov
inc
jge
lcall
fstpt
bound
fcoms
xor
push
xchg
mov
test
cmpsb
outsb
cmpsb
jmp
outsl
aad
aad
and
jle
ss
xchg
aam
cmp
inc
jae
fnstsw
aaa
lahf
cmpsl
mov
pusha
jmp
and
push
xorl
icebp
in
shrl
jp
popf
mov
mov
add
pop
adc
lcall
jo
in
cld
mov
cmpl
push
dec
mov
in
lock
in
clc
stc
loop
add
add
frstor
add
emms
dec
into
pop
push
xchg
popa
push
cli
lods
xor
fisubl
push
insl
adc
dec
push
mov
xchg
mov
clc
int
call
cmpsl
fsubs
out
xchg
out
mov
cld
add
icebp
ret
insb
arpl
arpl
aaa
sub
stc
cld
or
js
stos
pop
loope
xchg
add
dec
push
cmpsl
jmp
pop
std
data16
shll
nop
adc
filds
ret
or
mov
mov
pop
in
out
and
fadd
and
sbb
dec
popa
loopne
dec
loopne
notb
xor
stc
inc
cld
jne
iret
and
xchg
fadd
dec
mov
push
cld
popa
cwtl
fnstsw
sbb
xchg
jge
push
pop
fdivrl
sti
xlat
jmp
es
js
aad
sub
lcall
xchg
mov
dec
push
test
addr16
call
in
mov
add
in
mov
aaa
lock
or
decl
sub
dec
pop
repnz
cmc
in
sbb
loopne
dec
or
cld
out
dec
sub
dec
xor
push
jnp
add
out
push
mov
pushf
stc
fisubs
in
imul
lea
divl
inc
lods
popf
in
sub
pop
movsb
lds
push
iret
push
inc
or
push
jmp
enter
insl
call
xchg
dec
pop
sbb
scas
and
pop
or
dec
stc
in
sti
jns
rolb
pop
push
mov
push
test
push
xor
outsb
xchg
jb
int3
cmpsb
and
push
adc
jecxz
xor
ljmp
in
lods
lret
mov
push
repz
sti
arpl
loopne
xor
lods
fcomps
mov
test
call
xor
dec
xchg
jmp
pusha
je
sbb
sti
add
sub
or
cmp
dec
add
int
jmp
push
adc
adcl
cmc
jo
test
aaa
lods
rol
sti
jmp
pusha
sub
or
out
nop
dec
pop
mov
loope
repnz
push
cmpsl
movsl
inc
sbb
int
dec
sbb
addb
outsl
sub
nop
xchg
out
clc
ret
jmp
shll
test
jp
nop
out
xor
jnp
jo
mov
leave
sti
aam
add
jmp
in
sti
dec
xchg
popf
cmc
jl
xor
insl
push
pop
mov
in
mov
mov
push
or
xchg
sti
or
xor
pop
push
ljmp
xor
int
lret
xchg
cwtl
jge
mov
mov
aam
addl
mov
pop
rclb
addr16
nop
mov
lea
inc
or
jno
test
idivb
aaa
push
inc
mov
mov
loope
lahf
clc
in
popa
shl
iret
xor
stos
dec
push
ja
lds
mov
andl
cld
dec
movsl
notl
pusha
mov
sbb
lods
cmpsl
add
jo
adc
clc
sbb
les
ss
cmpl
mov
and
lret
sub
or
stos
or
add
xor
arpl
fistps
push
mov
lret
sbb
mov
out
pop
test
hlt
fidivs
mov
fistpll
cltd
sbb
adc
sbb
push
neg
mov
bound
xor
sbb
sti
iret
xor
pushf
lock
xchg
jle
and
dec
mov
out
into
faddl
mov
lods
outsb
aam
inc
dec
call
in
xchg
xchg
cmc
and
loope
mov
sub
jns
nop
in
aas
sub
cltd
and
cmc
lret
dec
sbb
xor
jnp
stos
push
xchg
xchg
ja
adc
lds
cwtl
mov
in
xor
push
imul
jmp
or
in
xchg
dec
subl
fldenv
mov
test
rorb
dec
movsl
movsl
cmpsl
and
cmp
mov
and
fistpll
lret
lret
fcoms
push
pop
mov
xor
add
add
fwait
outsb
loopne
popa
sbb
ja
mov
sub
or
push
sbb
jo
popf
or
push
aam
in
call
adc
xchg
sbb
dec
pop
mov
loope
mov
shlb
jp
dec
jle
sub
push
push
fdivs
stos
mov
rcll
stos
in
mov
lock
jle
shll
div
lea
scas
jmp
sti
jae
xchg
push
push
cld
icebp
mov
xchg
xor
test
pop
inc
incl
repz
mov
in
in
push
roll
out
lret
ret
push
lcall
cmpsb
or
xchg
shrl
fisubs
mov
movsl
inc
or
mov
inc
ja
repz
test
in
nop
pop
jo
lret
mov
jb
les
mov
aad
mov
xchg
mov
in
in
out
mov
cmpsb
shll
push
repnz
jne
arpl
cli
or
sti
cmp
adc
mov
xchg
testb
mov
and
stc
popf
or
and
gs
stc
insl
or
dec
sarl
push
vpand
in
lcall
aam
adc
arpl
scas
int3
aad
into
lret
xchg
call
cmp
jne
dec
adc
sbb
stos
out
shl
cmpsl
arpl
mov
test
dec
movsb
xchg
and
pop
jge
sub
lea
xlat
lods
loope
sub
clc
mov
add
ret
imul
or
cmp
inc
jge
jge
inc
ja
lds
jo
popa
jge
jae
pusha
jg
sti
icebp
mov
aam
in
popa
jg
dec
jg
jne
cmp
movsl
mov
inc
or
inc
movsb
inc
mov
pop
sub
popa
hlt
loopne
lahf
dec
inc
xor
addb
loop
mov
mov
inc
ja
test
jo
aam
sub
lret
dec
out
pop
mov
mov
aam
in
loope
lea
mov
ret
nop
pop
mov
push
sbb
push
push
or
xchg
mov
dec
xchg
mov
in
gs
loope
xchg
aam
push
and
cmp
fmull
in
daa
xchg
jb
mov
cs
xchg
xchg
mov
test
lock
ds
push
pop
mov
jnp
jle
jmp
mov
mulps
mov
mov
imul
push
les
push
jl
mov
lea
sub
pop
cmpsb
inc
call
sub
mov
icebp
inc
mov
rolb
dec
std
ljmp
mov
sbb
out
mov
dec
push
pop
sbb
push
jecxz
xor
jmp
lods
imul
adc
loopne
jns
cmc
jo
sbb
pop
int
cmp
mov
fsubrs
adc
mov
jp
xlat
mov
jo
jno
mov
jmp
pop
xacquire
loope
mov
aam
pop
popl
dec
enter
gs
daa
popf
cld
jle
adcl
std
inc
popf
xchg
insb
retw
in
mov
orb
movsl
fs
hlt
dec
jo
pop
in
lahf
lods
ja
insl
fucomp
pop
xchg
in
push
ljmp
shl
push
dec
jo
dec
jmp
jl
lock
setnp
inc
lret
cmp
scas
into
mov
sarb
and
lea
jge
xchg
loopne
jnp
mov
insb
fcmove
pop
push
pusha
lock
mov
orb
mov
sti
fs
sar
add
pop
xchg
sarb
fs
jmp
xor
pop
lods
test
push
bound
pop
pop
insl
push
ret
dec
inc
or
xchg
mov
xlat
xor
test
sbb
dec
xor
fcompl
inc
aas
sub
cmpsl
jbe
jmp
adc
sbb
nop
sbb
aad
shll
or
into
rcrb
fs
xchg
in
iret
cmp
mov
add
xchg
or
adc
mov
loope
add
std
es
sti
les
pop
popa
jle
rolb
mov
int3
add
pop
cmp
into
jmp
orl
test
mov
or
into
insl
inc
mov
in
mov
adcl
test
aaa
xchg
mov
rcll
aas
pop
in
ret
dec
daa
pop
mov
dec
jno
inc
jnp
and
stc
and
enter
cmpsl
decb
xchg
xor
jns
in
mov
dec
jns
aad
fwait
mov
sub
mov
imul
jg
loope
jg
adc
mov
pop
in
pop
or
int
inc
dec
xor
and
aaa
shll
pop
sbbl
scas
iret
cmp
ja
xor
hlt
mov
shrl
lock
popa
or
test
xor
jle
cld
stc
fisttpll
ret
in
mov
sti
cmpsl
in
mov
cmpsb
pop
mov
test
pop
jle
push
in
shlb
rcrl
ret
js
ljmp
leave
add
ja
cmc
aad
js
sbb
push
pop
mov
stos
add
lahf
loope
sub
jmp
inc
je
push
stos
sti
stc
jnp
mov
lock
mov
and
cmpb
xor
js
popa
stos
imul
loopne
inc
movsl
aaa
shl
fimull
scas
sarb
cmpsl
xchg
mov
sti
pop
les
lods
pop
mov
rolb
iret
jl
push
sub
add
dec
subb
mov
loop
mov
sbb
in
stc
xor
imulb
pcmpgtw
out
push
mov
ds
xor
jp
push
cmp
or
out
lods
sbb
inc
icebp
mov
ljmp
hlt
lods
or
popf
dec
or
push
sbb
or
xchg
jg
dec
push
adc
adc
int
mov
testl
mov
ljmp
dec
fstpl
stc
mov
cmp
mov
jno
push
add
cmp
jns
or
dec
arpl
push
icebp
popa
lds
in
je
mov
in
loope
pop
fldl
or
push
mov
push
sbb
xchg
jecxz
or
cli
popf
mov
jmp
hlt
stos
sbb
xchg
xor
fnstenv
mov
setbe
out
insl
jle
sti
sbb
test
lods
xchg
ja
jmp
insb
hlt
aam
sbb
sarb
push
jge
inc
in
test
popf
in
ffree
ss
ds
push
out
xchg
dec
lahf
mov
rcr
dec
push
add
jo
popf
nop
push
out
lahf
ds
sub
pop
dec
jne
sub
aad
xchg
cmc
loop
mov
pop
cwtl
lods
loop
pop
add
add
mov
xchg
lret
dec
clc
ja
mov
or
jne
mov
daa
stos
add
mov
push
dec
dec
pop
mov
retw
mov
mov
mov
pop
jne
mov
add
pushf
movsl
push
jb
mov
push
and
fisubs
jecxz
jge
mov
add
inc
cmc
arpl
jge
xchg
pop
or
sti
jg
jmp
rclb
adc
push
popf
lods
out
jecxz
andb
or
sub
lret
outsl
in
mov
xor
dec
pop
ret
in
push
scas
dec
stos
push
inc
mov
shll
std
stc
and
lahf
dec
cli
ljmp
sub
pop
mov
adc
decb
push
cmpsb
mov
aaa
cmpsl
pop
inc
sub
movsb
inc
add
gs
lods
dec
mov
inc
jle
lds
rorl
aaa
jno
outsb
mov
dec
add
jp
jecxz
aas
mov
idivl
push
rcrb
fwait
cmp
mov
jb
adc
dec
loope
cmp
data16
mov
mov
mov
rclb
movsl
pop
lret
mov
in
shl
pop
jecxz
inc
nop
push
fdivrs
test
addr16
ret
add
pop
repnz
add
dec
pop
imul
stc
andl
or
jo
out
std
mov
cmpsb
mov
jge
fs
mov
inc
idiv
inc
inc
jge
push
xor
mov
jo
jns
add
repz
icebp
or
ja
loope
repnz
sbb
add
mov
fsubrl
cmp
lea
loop
cmp
mov
sbb
mov
leave
dec
and
push
mov
popf
cli
push
mov
mov
push
out
mov
push
cmpsb
les
cld
outsb
mov
lock
leave
cmp
shlb
xchg
or
push
adc
sub
sti
fnsave
enter
mov
lock
sbb
xchg
add
popa
lcall
push
mov
dec
mov
in
and
lock
push
add
jg
push
dec
mov
inc
test
pop
or
mov
shl
sbb
imulb
hlt
movsb
push
ret
and
dec
sub
addb
shll
insb
jns
jecxz
in
scas
push
adc
sub
or
test
ljmp
adc
xchg
sub
sub
sbb
push
rcrb
out
dec
sub
dec
add
repz
push
inc
enter
push
sti
sub
sub
cmp
push
pop
xor
loop
push
out
sbb
popa
xchg
popa
in
pop
sahf
imulb
jae
pop
dec
cwtl
je
fidivrl
sub
and
jne
arpl
mov
pop
jnp
data16
rorl
add
mov
aad
ljmp
jmp
jmp
in
sub
dec
sbb
ja
dec
or
mov
aam
in
sti
cmp
lods
dec
out
xchg
sub
dec
and
in
or
shll
mov
mov
dec
decl
in
inc
testb
jne
icebp
or
cmp
aam
pop
gs
dec
dec
cltd
insl
xchg
mov
fcoml
and
sub
pop
in
lods
xor
dec
fidivrs
push
jmp
inc
push
dec
xchg
push
cld
nop
in
std
mov
sbb
fiaddl
insb
pop
scas
out
call
cltd
ljmp
mov
push
dec
mov
xchg
outsl
dec
add
dec
lahf
xchg
add
gs
sbb
lea
lods
inc
inc
pop
pop
inc
loope
dec
dec
dec
xchg
xchg
out
sbb
mov
stc
mov
out
inc
rcll
in
je
in
out
stc
faddl
mov
jo
arpl
incl
pop
xor
lds
adc
rcll
inc
mov
cmp
hlt
out
pop
or
cmpsl
mov
int
add
or
nop
mov
fdivrs
pusha
pushf
and
fs
insl
adc
dec
imul
fiaddl
sub
or
shrl
jmp
jbe
push
in
repz
test
pop
mov
and
lods
lret
addr16
jmp
arpl
sbb
fstl
push
fsub
data16
push
jmp
aam
push
jb
or
and
and
scas
flds
xchg
fistpl
fsubl
mov
pop
push
loope
movsl
mov
in
fs
sbb
in
xor
mov
rcll
rorl
loopne
mov
inc
or
cwtl
out
outsb
jmp
idivl
scas
lahf
or
push
aam
add
push
xor
jns
jmp
jmp
sub
arpl
inc
jmp
jl
je
ret
jnp
test
in
fsubs
pop
adc
in
cmpsl
mov
add
subl
adc
gs
into
popf
jmp
fs
fwait
add
cmp
aaa
sahf
mov
fwait
out
pop
lret
das
notb
and
fs
adc
rorl
and
loope
int
idiv
call
in
push
sub
pop
push
in
je
fs
push
add
push
lods
test
or
cs
push
outsl
mov
pop
stc
shrb
test
in
in
cld
push
push
xchg
cmp
scas
sbb
cmp
mov
cs
or
dec
in
mov
fistpll
pop
stc
aam
les
je
loope
pop
es
out
xor
mov
in
in
fsubl
fs
pop
std
xchg
outsl
adc
push
out
or
shlb
leave
and
clc
addl
add
adc
ret
adc
cmp
xlat
sti
out
xor
xchg
test
call
inc
jns
lods
shll
repnz
jmp
push
mov
shll
aad
shrl
sbb
jmp
jmp
pop
fmuls
in
out
ds
fsub
leave
je
shlb
jb
aad
int3
popf
int3
nop
jge
sahf
aad
in
mov
mov
test
loope
xchg
pop
movsl
fadds
jbe
loope
pushf
popa
add
dec
inc
rorl
sub
cmc
popa
in
aad
shr
out
dec
scas
xor
in
lahf
aam
in
mov
int3
in
je
inc
mov
mov
in
jmp
mov
mov
fsubl
in
fiadds
in
faddp
adc
loope
loope
jge
pop
int3
xchg
fdivrl
sar
in
xor
das
fcoml
dec
sbb
fsubl
aam
push
cld
mov
jb
aam
push
cld
nop
sbb
push
les
das
push
in
les
jl
push
jmp
jmp
sub
movsb
jl
in
lock
movsb
xor
dec
mov
in
aam
std
mov
in
or
or
ljmp
jg
jno
cmp
ret
scas
and
bound
cmpsl
jle
push
sbb
mov
add
out
in
dec
mov
orl
pop
das
mov
lret
dec
pushf
in
repnz
sub
out
inc
sahf
jle
lods
dec
add
in
stc
enter
xchg
inc
mov
add
jns
fisubrl
jmp
mov
add
ror
testl
sub
dec
loope
sbb
rcr
mov
inc
sahf
push
jno
jne
mov
or
fcomps
mov
jmp
and
xor
test
lahf
adc
loopne
in
pop
pop
outsl
data16
loopne
popa
mov
sbb
adc
popa
xchg
fstpt
lret
jns
push
imul
movsb
repnz
xchg
mulb
dec
negl
dec
popf
dec
aaa
jo
jns
outsl
jbe
sarl
lods
mov
lods
mov
xor
orl
jne
imul
jbe
jmp
out
sub
mov
mov
aam
cmp
cmp
ret
idiv
rorl
cld
imul
sbb
loope
and
orl
mov
rcll
test
faddl
push
add
jecxz
cltd
dec
jp
xchg
inc
jnp
push
mov
mov
shrl
sbb
lret
mov
sar
imul
in
loope
mov
popf
pop
stc
mov
and
loop
cltd
femms
sub
fcompl
mov
int3
mov
clc
xchg
neg
stc
xorl
sub
cmp
lods
push
ror
sub
mov
cmp
stc
scas
xchg
dec
cmpl
or
mov
xchg
sbb
out
das
pushf
sub
inc
cli
pop
imul
inc
out
out
inc
mov
enter
test
int3
aas
and
or
xchg
dec
iret
icebp
outsb
inc
sti
movsb
mov
fisttpl
xchg
movsl
fnstsw
lcall
data16
sbb
aam
fs
cmp
stc
rorl
add
ret
cmp
repnz
rcrb
mov
cmp
pop
in
xchg
in
mov
add
xchg
ret
sahf
mov
push
mov
push
fisubs
pushf
mov
out
shl
pop
lods
cld
push
jne
push
jno
push
mov
push
jmp
cli
loope
in
mov
aaa
and
mov
mov
outsb
sti
cmp
sub
lock
scas
mov
testl
fcmovne
mov
or
xor
add
inc
div
loope
xor
pop
dec
decb
popa
mov
addr16
ror
jg
mov
jmp
cmp
test
mov
out
leave
loope
imul
dec
cli
iret
fsub
aad
or
into
cld
add
les
insb
jnp
into
xor
xchg
imul
mov
in
out
repz
cmpl
cmp
add
cld
negl
mov
inc
mov
mov
dec
jo
test
dec
aad
rorl
data16
mov
and
inc
cmp
sub
inc
in
pop
jne
fcmove
xorb
pop
cmpsl
xchg
imul
mov
xor
jne
or
iret
rorl
mov
ljmp
push
sbb
clc
gs
or
int
or
push
inc
scas
and
mov
add
sub
xchg
mov
mov
sarb
lcall
in
cmp
add
popf
xchg
call
repz
mov
add
xchg
mov
xchg
and
or
jae
fsubr
sar
in
in
test
push
mov
cli
jp
testb
ss
das
adcb
xor
loope
std
mov
and
arpl
imul
and
sbb
cltd
loope
in
int3
mov
lock
orl
enter
and
mov
rcll
xchg
scas
mov
mov
out
sbb
push
sub
mov
xchg
xchg
mov
stc
rorl
xchg
or
adc
cld
loop
push
repnz
sti
int3
or
mov
dec
loope
fbld
popa
in
jmp
in
idiv
jecxz
sar
dec
repnz
out
rol
sbb
mov
stc
xlat
imul
out
in
jmp
cmp
jecxz
dec
idiv
push
clc
mov
jmp
dec
sti
popa
rcll
out
pop
shll
in
sub
int3
push
decb
daa
test
xchg
in
mov
lahf
or
mov
mov
testl
pop
lds
enter
adc
inc
mov
stos
mov
ljmp
adc
mov
pop
repz
out
test
inc
add
push
push
adc
fwait
in
mov
xor
xchg
jo
xchg
cmp
fisttpl
vpsraw
fdivr
lret
pop
fdivl
mov
call
add
cmpsb
mov
push
pop
or
sub
xchg
mov
lret
sbb
in
orl
hlt
xchg
add
cmp
mulb
add
jno
inc
in
push
in
mov
and
jmp
cmc
and
in
pop
bound
dec
inc
jp
ror
add
js
push
stc
cld
mov
mov
push
loope
jo
xlat
add
ret
xchg
stos
fst
mov
addr16
dec
push
xor
addr16
cmpsb
xor
fistps
fsubr
xchg
mov
stc
popf
fs
in
popf
lahf
mov
add
lahf
insb
aad
lock
dec
xorl
inc
push
insl
push
dec
dec
rol
sarb
in
sub
lods
fnstcw
stos
mov
push
pop
and
popf
lods
sbb
mov
popa
xchg
es
in
mov
and
and
es
push
add
shlb
inc
or
sub
rcll
dec
lods
add
pop
call
lds
and
or
sar
stos
mov
loopne
mov
mov
lea
faddl
sub
testl
lcall
sbb
popf
test
dec
and
push
adc
xchg
lock
sub
jno
icebp
add
lcall
push
and
roll
fs
sbb
stos
xor
sub
add
test
xchg
push
mov
push
xchg
les
mulb
hlt
out
pop
repnz
fstps
add
dec
in
lret
add
rcrb
out
out
or
mov
adc
lret
xor
jle
sbb
mov
xchg
sbb
inc
fisttpll
add
pushf
lds
mov
jmp
push
hlt
imul
icebp
jecxz
aad
in
popa
lods
aad
out
ficoms
xchg
mov
enter
add
std
sbb
xchg
cmp
dec
mov
in
vpcmpgtd
inc
shll
lahf
push
inc
std
mov
fidivrs
push
adc
lcall
das
xchg
popa
mov
scas
lret
fwait
orb
mov
test
icebp
sti
fs
incl
rorl
adc
jmp
xchg
not
jnp
cmc
mov
inc
stos
and
clc
pushf
xor
lds
xchg
mov
push
jmp
movsl
popf
out
xchg
cs
sub
sub
jmp
loop
or
stos
push
cmp
and
mov
cmp
lods
jb
add
nop
push
adcl
and
loop
cmp
xchg
xchg
and
shl
repz
lcall
dec
stos
mov
call
lods
out
lods
shr
dec
out
stos
jns
popa
xchg
sub
sti
loope
arpl
mov
cmp
mov
cmpsl
xor
jl
mov
enter
push
pusha
xchg
jmp
gs
push
add
dec
xchg
inc
push
mov
std
movsb
inc
fidivrs
aaa
out
mov
lock
add
mov
mov
jns
adc
mov
sbb
and
mov
ret
pop
mov
pop
dec
out
cli
lret
xor
clc
cmp
sti
dec
fwait
mov
arpl
cmpsb
lds
mov
lods
outsb
pop
int
mov
sub
sub
test
xchg
enter
lods
pop
push
jmp
rcr
out
fisubs
add
jmp
inc
aam
call
xor
add
in
stos
jecxz
loope
lock
stos
xlat
sbb
cmpsb
insl
xlat
mov
aad
xchg
out
mov
repz
cmc
or
arpl
sub
idiv
sub
pop
dec
pop
sti
cmp
repnz
jge
aad
push
pop
pushf
xchg
cmp
lds
sti
mov
imul
out
enter
dec
lods
test
fwait
xchg
xchg
aas
outsb
xchg
adc
movsb
adc
jmp
ljmp
nop
aaa
dec
rcrl
dec
lcall
add
rcl
les
arpl
xchg
add
sub
add
sub
sub
xor
or
in
dec
in
and
mov
into
dec
cltd
dec
dec
mov
stc
icebp
xchg
daa
xor
cmp
cmp
cmp
cmp
cmp
icebp
cwtl
fiadds
xor
mov
mov
icebp
xchg
jecxz
add
dec
call
dec
push
outsl
adc
adc
sahf
stos
ret
mov
sti
scas
push
insb
add
mov
aas
jecxz
and
in
fs
adc
xor
cmp
jmp
cmpsl
xor
arpl
xchg
lods
mov
fidivrl
jne
and
outsl
imul
rolb
leave
ror
lretw
or
jnp
xchg
dec
mov
sbb
and
dec
mov
clc
mov
fldpi
dec
xor
mov
movsb
sbb
cwtl
add
xchg
out
dec
nop
shrb
and
fs
jb
je
xchg
lret
sbb
mov
out
sub
sti
xor
xor
and
lahf
lcall
xchg
stos
leave
push
shld
sub
add
stos
jle
imul
xor
stc
jp
sub
mov
pop
test
cmp
aam
andl
scas
mov
adc
adc
jae
pop
xchg
jmp
ds
into
cmp
fs
aad
dec
daa
nop
out
jecxz
mov
adc
stc
mov
cs
cmp
jl
fdivrs
cld
movsl
aad
inc
out
pusha
cmp
mov
lds
cld
add
jno
insb
sub
lcall
cmp
daa
data16
push
and
mov
popf
call
popf
sbb
ret
enter
ljmp
aad
ficomps
inc
push
inc
test
and
sub
jae
cli
push
ss
sbb
add
addr16
aam
lahf
jecxz
and
int3
jb
popf
test
jmp
out
fs
imul
fsubrs
fmuls
subb
sub
scas
into
push
mov
push
jl
adc
jae
leave
movsl
push
add
popf
in
movsb
aad
dec
push
pop
cwtl
rcrb
ja
push
fcmove
push
mov
insb
lea
fidivrl
aas
js
insb
xor
jmp
dec
das
push
pop
hlt
loope
adcb
mov
xor
inc
adc
scas
ja
ljmp
out
mov
push
sbb
jb
pushf
mov
out
inc
inc
sahf
aas
unpckhps
push
out
ret
rolb
stos
lods
mov
adc
mov
test
or
enter
pop
dec
std
dec
sub
andl
in
dec
mov
std
jecxz
mov
push
add
cmp
sub
cmc
roll
lds
sub
mov
xchg
cwtl
mov
movsb
idivl
bound
testl
popf
stos
mov
dec
in
mov
cmp
jp
loope
mov
cld
mov
xor
ret
or
xor
sub
ds
clc
cmp
cmp
lock
repnz
sub
popa
outsl
and
repnz
enter
mov
jmp
fisttps
adcl
fcmovnbe
dec
fsubs
nop
mov
push
lds
sbbl
enter
dec
push
enter
or
pop
stos
data16
lret
das
inc
or
mov
pop
cmp
mov
dec
rorb
and
cmpsb
cmc
add
clc
stos
nop
xchg
stc
icebp
repnz
mov
mov
pusha
and
std
sahf
jecxz,pt
test
sub
ds
imul
jne
rorb
es
popf
and
xor
xchg
push
in
pop
aam
popa
jnp
outsb
rolb
sbb
jae
loop
repnz
adc
xlat
pop
lahf
fsub
pusha
popf
mov
andb
loopne
lea
sub
xor
mov
cmp
orl
mov
in
dec
dec
loope
cmp
mov
js
add
mov
orl
mov
jne
in
add
mov
testl
sbb
loope
loop
shrb
sbb
test
add
sub
mov
sub
push
mov
dec
add
mov
mov
sar
ret
clc
pop
fidivrl
loope
pop
or
aam
xor
jl
inc
mov
cmp
jne
jne
cmpsl
movsb
and
add
das
pop
ds
and
rclb
outsb
roll
or
jmp
iret
dec
sbb
sub
aas
scas
in
push
lods
stos
les
adc
movsl
fs
mov
cs
addl
xchg
sub
mov
test
push
sub
and
dec
push
popf
and
sbb
sub
test
in
inc
jbe
push
mov
mov
fucomi
mov
dec
les
fsts
sti
jl
ljmp
sub
or
pop
add
sbb
mov
push
lret
jmp
ds
add
push
insb
in
inc
jl
inc
cmpsl
sbb
push
outsl
fsts
je
sbb
cmp
dec
sub
cmp
cmp
hlt
cmp
aam
pusha
mov
lods
mov
idivl
stc
dec
inc
xchg
mov
mov
and
arpl
fsts
dec
aam
daa
fldz
jle
fnstenv
fneni(8087
lods
jmp
push
cltd
cmp
pusha
jl
cmp
fdecstp
stc
xor
in
sub
push
lds
jge
jo
push
pop
push
fldcw
cmp
mov
cmp
mov
xchg
leave
int
in
in
xchg
aam
xor
data16
mov
mov
mov
fcoml
loope
lods
repnz
in
adc
jl
jmp
sub
mov
movsl
sbb
sarl
mov
ret
jmp
rcl
add
in
movsb
push
sbb
or
clc
push
cmp
add
in
mov
and
dec
xchg
insb
or
out
dec
jmp
dec
inc
sbb
insb
faddl
fs
cltd
mov
cli
xor
leave
and
das
sarb
aaa
pop
mov
or
add
rorl
popa
in
popf
xor
gs
icebp
fs
pop
jmp
add
mov
stc
inc
xor
out
popa
sub
xchg
xchg
mov
cltd
jl
aaa
leave
xchg
popf
xor
push
ficomps
je
mov
xor
jns
push
push
add
imul
ret
sub
inc
dec
push
mov
in
jmp
sub
pop
dec
sub
sbb
cmp
loopne
mov
pop
std
cmp
sbb
mov
shl
add
insl
jp
jns
inc
xor
imul
mov
in
loope
jecxz
shrl
int
xor
aad
pusha
orb
hlt
in
loope
nop
sub
inc
loope
bound
shl
add
stc
jecxz
mov
divb
lret
repnz
pop
fsub
lods
nop
mov
xchg
roll
loope
bound
rcrl
add
scas
arpl
xchg
arpl
call
stc
loope
stos
dec
xchg
repnz
and
add
adc
idivb
mov
and
inc
lret
bnd
xchg
xchg
adc
jno
mov
ja
and
shlb
hlt
add
stc
push
jl
fsubl
cltd
lods
setge
mov
xchg
fs
fsubl
xchg
test
dec
adc
jo
shr
rolb
xchg
test
sub
jg
fwait
xchg
rorl
out
cmp
sub
std
ja
jp
inc
and
push
add
pop
in
mov
push
and
sbb
orl
enter
jno
in
sub
or
xchg
lods
sahf
dec
mov
mov
idivl
jecxz
popf
pop
cmpsb
subb
xchg
inc
fprem1
pop
dec
rcl
stc
popf
mov
in
repnz
int
add
addr16
push
ss
xor
int
push
cmp
ficompl
outsb
mov
dec
pop
lahf
dec
pushf
pushw
mov
mov
cmp
stos
xor
xchg
and
fldz
dec
rcl
sub
int3
jl
jmp
mov
cmc
fists
sbbb
idivl
mov
jae
inc
cmpsl
pop
popf
xchg
out
sbb
jp
pop
mov
or
cmp
fs
popa
sbb
mov
loope
sbb
push
add
lret
sahf
fldl
cmp
dec
in
les
sti
fsts
sbb
cmc
inc
cltd
xchg
jbe
mov
mov
pop
lea
fnsave
lret
jno
mov
fsubrs
mov
out
xor
imull
int
fcmovu
sub
in
xchg
lcall
xlat
inc
cmpb
stc
ljmp
dec
or
or
adc
stos
xor
sub
icebp
jne
ljmp
sub
shlb
jns
rcrl
je
jg
aad
and
rclb
lcall
push
and
aas
inc
jp
cld
sbb
clc
in
cmp
push
test
push
out
xchg
xchg
jne
faddl
filds
inc
jmp
add
inc
loope
mov
mov
push
push
clc
pop
ja
xchg
aad
dec
mov
adcl
aas
data16
lea
jmp
roll
or
shl
arpl
or
hlt
lods
mov
loop
mov
insb
leave
sub
mov
aaa
stc
xor
sti
sbb
mov
ret
xor
jl
popa
stc
mov
or
sbb
mov
in
mov
jns
cmp
ret
and
std
cmp
int
fisttps
mov
ja
mov
call
and
ss
icebp
std
mov
sub
push
subl
mov
jne
mov
stos
sbbb
cwtl
jecxz,pn
pop
aas
mov
shlb
jmp
jecxz
or
adc
pop
pop
in
push
dec
cmp
mov
xchg
leave
mov
std
cmpsb
popf
xor
sbbl
jge
dec
jle
movsb
sarb
pop
js
clc
sub
or
mov
loopne
xchg
xchg
jno
dec
aad
inc
in
add
loop
fimull
aaa
cmp
test
nop
pop
jnp
stc
or
mov
data16
aas
in
fwait
ljmp
stc
cwtl
leave
push
mov
jmp
push
jne
repnz
or
stc
aad
lahf
scas
jmp
push
add
rcr
xor
sti
nop
xor
mov
dec
jg
dec
cmp
mov
int3
jp
popf
out
fs
lods
mov
add
push
stos
and
movsb
lret
add
pop
and
out
xchg
xor
std
sahf
les
nop
loopne
cltd
fstl
or
add
push
mov
cmp
push
lock
iret
pop
mov
orb
in
xchg
cli
mov
dec
mov
add
cmp
outsl
js
mov
jns
jns
or
mov
or
xchg
shll
int3
mov
or
push
movsb
ror
or
inc
dec
dec
mov
fs
adc
jo
repz
stc
push
push
mov
and
sbb
mov
push
add
sti
push
cmp
jmp
or
add
shl
mov
mov
out
fwait
jne
addl
out
xor
push
in
js
cmp
movsl
mov
dec
popf
mov
in
jmpw
and
cmc
in
fucom
push
dec
sti
xchg
cld
cs
mov
test
push
sbb
xor
lds
xchg
pop
dec
mov
orl
js
dec
add
roll
xlat
pusha
sub
push
imulb
call
dec
fmull
lahf
lods
std
stc
call
cmp
bound
add
sahf
in
cltd
mov
jbe
xchg
inc
pop
mov
xchg
push
mov
cmp
lock
cwtl
popf
test
data16
in
or
loop
push
cmpsl
scas
xchg
loopne,pt
mov
out
mov
adc
xor
mov
dec
dec
and
fistpl
mov
push
test
lahf
dec
repnz
cld
loope
decb
or
or
jno
xlat
daa
scas
inc
loopne
setge
ret
insb
ds
mov
int3
incb
test
into
or
inc
shl
orl
stos
insb
push
sub
push
jns
ss
pushf
jl
dec
pushf
pop
push
outsb
mov
dec
lds
xchg
addl
cmp
dec
push
int3
cmpsl
push
xor
testb
mov
push
mov
mov
push
icebp
dec
mov
add
imull
push
gs
or
pop
stc
aas
out
inc
in
std
std
cld
test
jae
jns
std
and
in
ljmp
stc
mov
cmp
test
js
int3
popa
gs
fsubp
cli
xor
push
std
ss
cmp
loope
pop
pop
fists
xchg
insl
lods
push
popf
mov
nop
cli
gs
sbb
push
cwtl
in
and
xchg
das
lock
add
popf
xchg
loopne
sbbl
popf
int3
lods
inc
arpl
testl
mov
pop
inc
sbb
and
divl
andl
jecxz
sbb
jne
arpl
dec
daa
add
movsb
mov
and
mov
add
testl
stc
gs
bound
jb
sahf
dec
push
xchg
xchg
aas
call
aam
sarl
in
cmc
sub
data16
int
shrb
mov
test
push
cltd
jl
mov
insl
xor
pop
dec
mov
pop
mov
dec
lahf
xor
jl
xchg
out
out
testl
jmp
incl
movsl
inc
rorb
nop
shrb
mov
scas
mov
outsb
mov
cli
xchg
mov
or
sti
or
sbb
cmp
sub
mov
aaa
push
shl
std
xchg
xor
sub
mov
int
movsb
loop
mov
int3
outsl
shll
push
xchg
js
inc
jbe
stc
mov
lods
fdivs
lds
cmpsl
rcrl
push
xor
rclb
push
stos
mov
dec
out
and
into
cli
fidivs
sbb
fiaddl
outsb
jl
dec
insl
dec
cmp
loope
xchg
lods
sub
ljmp
test
jo
mov
sub
mov
jo
negb
mov
mov
add
mov
cmp
repnz
imulb
popf
mov
pop
mov
jae
shl
cmp
pop
scas
push
out
inc
pop
into
push
adc
scas
inc
loope
sti
push
pushf
loopne
jmp
in
push
push
inc
pop
sbb
xchg
in
sbb
cmpsl
jmp
scas
in
aad
stos
adc
mov
mov
xor
sub
out
mov
nop
push
mov
push
and
mov
testw
sub
mov
das
lds
xchg
fistpl
jmp
and
adc
in
fsubs
pop
push
sub
mov
hlt
sub
mov
leave
inc
and
mov
in
sahf
test
cli
mov
cs
lea
popa
add
in
xchg
mov
or
fsubp
fisttps
pop
mov
sbb
dec
sub
or
lods
jbe
add
pop
out
cmp
jnp
lock
mov
into
lret
aaa
fildll
fiadds
push
lods
mov
in
pop
out
aad
jge
mov
jne
nop
cli
jecxz
fcomip
adc
jae
ja
stos
cmpsb
test
mov
sahf
int
xchg
mov
std
push
sub
inc
and
mov
mov
xlat
sub
xor
cmp
test
sbb
in
enter
and
push
adc
add
inc
adc
rolb
ret
xchg
xor
pop
cld
fidivrs
dec
jns
mull
xor
pop
xchg
pop
neg
leave
notl
adc
mov
cs
mov
addb
loope
xchg
jecxz
das
sbbb
pop
in
in
scas
pop
out
jecxz
rorl
movsl
std
mov
in
mov
or
sbb
les
xchg
popf
dec
shl
ret
push
and
jb
dec
je
inc
test
stc
stos
sub
pop
add
cli
xchg
pop
mov
cmp
decb
lock
or
ret
loopne
or
mov
and
cmp
out
sahf
mov
mov
mov
sub
int3
lods
rorl
orb
fldcw
pop
mov
xchg
enter
jbe
ret
or
or
repz
sar
in
push
aad
cmpsl
dec
mov
cmp
jns
jo
imul
dec
push
notl
aam
movsl
dec
jecxz
or
jge
insb
data16
mov
call
push
sti
fs
add
pop
gs
int3
aas
xor
sub
out
repnz
repnz
adc
es
hlt
jo
mov
fnstsw
xchg
push
mov
jge
int
je
inc
inc
jmp
dec
insl
enter
cmc
dec
inc
lahf
or
test
stc
inc
add
sbb
test
loop
es
movsb
data16
lea
dec
std
dec
mov
xlat
mov
push
sar
addr16
mov
mov
ja
stos
movsl
js
rcll
jnp
adc
out
jmp
notb
sub
push
js
mov
rcrl
dec
in
adc
int
les
das
mov
loope
push
cmpsb
std
rcrl
cli
scas
loop
inc
and
xchg
cmp
stos
mov
jb
imul
mov
sbb
lds
pcmpgtw
fcompl
lret
fdivs
push
iret
xchg
enter
data16
sub
and
dec
xor
cmp
add
push
inc
push
mov
imul
xlat
mov
pop
imul
loop
mov
insb
xchg
add
pop
in
arpl
jnp
pop
shrl
xchg
int3
dec
sub
xchg
jbe
fbstp
adc
jmp
mov
insb
dec
inc
mov
out
push
add
push
lret
mov
dec
jns
mov
sahf
je
mov
arpl
mov
shrb
push
dec
add
loope
lea
mov
cltd
mov
sub
fists
lahf
out
xor
sbb
mov
in
xor
mov
sub
in
jg
xchg
xor
popf
in
mov
sub
inc
mov
fists
aad
mov
cmp
fistl
mov
sbb
push
and
add
cmpsl
lock
fxch
or
mov
in
filds
std
mov
repz
ficoml
cld
mov
std
andl
lea
mov
sbb
xchg
push
push
in
daa
or
call
or
or
movsb
hlt
lds
in
jnp
scas
cmp
mov
xor
push
xlat
mov
int3
popf
aad
adcl
and
popf
mov
push
dec
jns
loope
adc
adc
sarl
std
pop
xor
inc
mov
aam
jecxz
jns
insl
jmp
popa
dec
pop
imul
jno
lret
lea
inc
jl
movsb
imul
leave
jns
sbb
push
inc
out
ret
adc
loop
pop
inc
lods
mov
fs
cmp
xor
call
mov
testl
jle
dec
out
daa
cmpsl
pop
mov
mov
push
push
lea
sti
lret
ror
xchg
popf
fs
mov
int3
push
push
jecxz
pop
clc
or
mov
test
iret
fs
icebp
scas
sbb
mov
jb
test
roll
fwait
rcr
jle
or
fs
jmp
fs
shrl
int3
mov
mov
lods
push
and
push
das
or
mov
inc
xor
aas
outsl
add
add
inc
loope
or
xchg
dec
popf
jo
mov
icebp
lea
ss
movsb
cld
mov
mov
sahf
int3
xchg
adc
jecxz
out
notl
cld
aaa
push
clc
popa
mov
out
out
pop
adc
je
push
pop
lock
subl
rcrl
movl
repz
mov
mov
mul
cmpsb
mov
iret
xchg
fcoml
insl
int
mov
jl
cmp
stos
mov
adc
roll
mov
mov
arpl
out
mov
repz
mov
pop
in
clc
cmp
mulb
divl
shr
cmp
mov
mov
outsl
stc
dec
test
fs
in
in
cltd
or
lods
popf
in
in
mov
jne
xor
fstpt
stc
stc
and
add
fs
lcall
rol
add
sbb
push
aaa
mov
lods
cwtl
cmc
add
in
sbb
scas
repnz
mov
lds
insl
aam
lcall
loopne
arpl
jp
dec
subb
js
shrb
enter
pushw
fsubrs
out
xor
sbb
mov
stc
mov
in
out
out
adcl
cmp
jmp
in
lds
push
mov
jno
data16
xchg
stc
inc
sti
insb
jge
sub
mov
add
and
lds
inc
movsl
dec
add
or
loopne
cmp
push
and
popa
mov
push
cmc
xor
adc
xor
imul
or
mov
push
xlat
cmpsb
or
repz
outsl
add
shrl
aaa
sbb
stc
jno
fwait
jno
adc
leave
cmpsb
stc
xchg
xor
mov
adc
mov
jp
pop
loopne
pop
and
subl
lods
in
mov
mov
sbb
inc
popf
rcl
push
sahf
aad
in
in
std
lea
jge
outsb
xor
ficomps
icebp
and
mov
push
push
pop
stc
mov
aaa
imul
dec
cld
mov
iret
jne
jge
insb
insb
and
sub
sarb
dec
nop
sbb
xor
sti
loope
xorb
ds
mov
js
stc
xchg
addr16
movsb
cmp
rorl
rorl
jne
test
push
mov
fnstcw
ret
adc
push
inc
add
mov
pusha
inc
push
ret
mov
mov
in
scas
pop
dec
clc
shll
push
fisttpll
in
fldt
test
push
mov
cmpb
cmp
sar
inc
lock
lock
sti
sub
mov
fidivrs
stc
add
add
cs
xchg
mov
mov
cli
and
mov
and
testb
imul
clc
mov
lret
movsl
sbb
rorl
in
test
cmpsb
xor
cmc
or
adcl
xor
movsl
ljmp
mov
pop
orl
lea
ja
inc
sbb
dec
or
or
lods
lock
adc
les
rorl
pop
mov
mov
push
xchg
jo
add
scas
dec
cli
mov
imul
in
fs
cli
add
adc
xchg
lds
push
cltd
mov
loope
clc
jle
in
rolb
xchg
pop
fs
mov
iret
or
popf
rolb
imul
shr
gs
or
stos
test
or
push
sub
int
movsb
xchg
lods
or
sbb
sub
jo
dec
push
call
pushf
lret
jb
add
mov
fadds
mov
data16
mov
test
and
add
fidivrl
test
sahf
fcomi
mull
das
aas
rcrb
leave
cmpsl
fiadds
aas
in
jnp
movsb
jmp
lret
or
and
jmp
sbb
mov
push
in
dec
xchg
dec
insb
or
or
sbb
lret
push
mov
mov
stos
xchg
clc
scas
mov
iret
jecxz
sti
and
into
rclb
xchg
cmp
lahf
lea
mov
rclb
idivb
je
aaa
pushf
arpl
fisubs
cld
sbb
data16
fcoms
hlt
sti
in
imul
sarl
lea
mov
or
ljmp
stos
mov
xchg
xor
cmp
cmpsb
mov
push
inc
xor
dec
stos
popf
out
xchg
xor
out
jne
lds
enter
push
jns
data16
and
addl
pop
lret
mov
enter
popf
ret
cli
fldl
xchg
gs
push
sub
frstor
lock
in
or
ds
fildl
call
orl
or
xchg
mov
in
sbb
jb
andl
in
sarl
push
loopne
icebp
loop
movsb
mov
popf
loopne
xor
shlb
mov
shrb
add
jae
out
fmul
add
stc
jno
out
fstpl
popa
inc
xchg
cmpsb
repnz
aam
mov
in
or
stc
out
xchg
in
cli
pusha
sbbl
jmp
jae
sbb
cmc
or
mov
jo
mov
jl
mov
mov
or
push
jmp
dec
or
in
popa
mov
aas
and
rorb
mov
in
push
and
inc
insl
push
int3
adc
ret
dec
call
jmp
mov
push
gs
repz
xchg
sub
imul
js
in
mov
mov
or
int3
jns
xchg
cmpsb
pop
aas
mov
push
inc
mov
and
cmc
rcrb
jae
jbe
lods
out
xchg
hlt
pop
push
mov
lret
xchg
mov
fyl2xp1
adc
lret
jmp
push
loop
call
jecxz
or
push
add
sbb
dec
sti
mov
jnp
xorb
leave
leave
in
lock
mov
stos
push
testl
or
mov
imul
std
dec
cmpl
mov
pop
lock
inc
xchg
fs
jne
or
push
lret
jmp
mov
arpl
mov
sbb
cmp
push
mov
xchg
jno
push
push
out
pop
cmp
add
sub
mov
dec
pop
mov
ret
mov
aas
imul
daa
enter
decl
fadds
cli
popf
mov
jge
in
mov
aad
call
mov
sub
jg
or
pop
and
fpatan
rorl
test
insl
js
cwtl
clc
cmp
jg
sbb
xor
or
fcoms
xlat
stc
iret
ret
out
int3
and
adc
dec
xchg
in
mov
rcl
xchg
cmp
icebp
mov
mov
in
jae
pop
cmpsb
mov
push
rep
xchg
aaa
imul
sarb
or
inc
bound
mov
fstps
fadd
mov
or
adc
leave
push
inc
push
add
pop
add
mov
je
jmp
shll
arpl
and
mov
mov
dec
in
push
adcb
mov
outsl
dec
sbbl
test
mov
push
lahf
hlt
mov
inc
push
faddp
enter
gs
or
movsb
jnp
mov
sti
lea
fcmovnbe
roll
outsl
xor
push
add
mov
or
add
insb
fdivrs
fmuls
dec
in
cld
loope
mov
dec
sbbl
roll
push
xchg
icebp
movsb
roll
dec
std
push
xchg
pop
dec
cmp
jmp
pusha
rdtsc
stos
insl
add
sbb
lahf
push
jmp
in
push
mov
repnz
xor
mov
jmp
inc
cwtl
pop
addr16
notb
sbb
add
stc
loope
and
and
stos
sub
pop
add
sbbl
pop
mov
pushw
sub
add
mov
stc
inc
adc
out
mov
hlt
popa
popa
push
in
insb
int
aad
adc
pop
jb
or
xor
data16
jb
or
add
push
xchg
cmpsb
mov
in
pop
imul
mov
and
cmp
shrb
add
testl
sub
movsb
push
sub
mov
addl
sub
ja
add
dec
in
push
and
fs
iret
cld
or
mov
and
out
push
add
movsb
or
movsl
add
mov
mov
xchg
aam
dec
pop
cli
addr16
push
xorl
adc
dec
stos
sbb
jle
fucom
inc
cmp
test
mov
icebp
dec
add
js
fisubl
repnz
lds
fisubrs
clc
out
sub
cmpsb
popf
call
xor
bound
pushf
ret
or
add
add
jg
xchg
fisubrs
mov
inc
sbb
in
fwait
cld
push
xor
repnz
fcmovbe
jge
ret
shll
push
xchg
mov
ret
add
pop
pop
leave
rcrl
int
adc
gs
cmp
ja
xchg
std
js
outsl
jne
mov
mov
lcall
es
inc
add
dec
push
xchg
mov
add
mov
ret
pop
mov
or
sbbl
xchg
mov
pushf
xchg
cmc
push
dec
add
insb
fildll
jecxz
cmc
rclb
lock
lock
in
dec
aaa
repz
ficoml
mov
dec
les
test
and
iret
cmpsb
cmpsl
dec
sti
fdivs
sbb
popa
sbb
stos
cmp
popf
push
sub
jb
icebp
mov
data16
xor
push
and
popa
int
mov
xor
push
mov
add
mov
adc
imul
loopne
cmc
fisubl
vcvtpd2ps
cmp
push
sub
pop
sahf
sti
push
add
clc
adc
push
aaa
fs
rcl
sbb
popa
jmp
dec
push
dec
mov
shrb
or
in
testl
loop
in
jmp
out
mov
jmp
jmp
adc
andl
push
jo
push
int
inc
lret
sbb
and
aaa
push
xchg
sub
xor
or
mov
pusha
sub
lods
enter
jl
mov
movsb
addr16
mov
and
or
in
or
imul
enter
jnp
subl
mov
idivl
mov
xchg
gs
xchg
pop
jecxz
and
minps
addr16
or
test
call
lcall
inc
decb
out
clc
pop
imul
adc
aaa
push
fidivrs
and
sbb
clc
or
mov
in
in
sub
add
adc
in
push
aaa
xor
and
mov
lcall
cwtl
mov
dec
paddusw
mov
push
rcrb
popf
xchg
fsubs
sbb
pop
mov
mov
jne
sarl
pop
insl
mov
addr16
movsb
std
outsb
mov
in
mov
std
jle
cwtl
fs
fcomip
lret
roll
mov
mov
mov
push
and
pop
mov
jmp
lea
ja
mov
js
cmpsl
mov
jle
mov
mov
cmpsl
jmp
popf
cld
cmc
jb
stos
std
arpl
jns
fcmovnb
xor
xchg
ficomps
push
jl
call
inc
sub
popf
in
pushf
stc
sbb
imull
rorl
push
sub
xor
popf
popa
lea
lods
clts
inc
add
jae
cwtl
inc
and
movsb
or
jo
popf
pop
int3
push
stos
dec
jno
pop
xchg
aad
jno
xchg
sbb
jno
jne
movsl
int3
add
jmp
dec
outsb
xchg
sbb
rclb
ret
mov
mov
pop
jbe
mov
xor
cmpsl
icebp
fwait
cmpsb
pop
fs
mov
orl
mov
mov
ljmp
cmp
jmp
pop
push
and
mov
xorl
mov
lahf
dec
mov
xor
in
lods
or
mov
fldcw
sub
sbb
and
xor
cmp
std
xchg
in
add
arpl
lods
imull
ret
push
shll
xchg
popf
mov
inc
in
and
in
fld
loope
pushf
pusha
mov
dec
movsb
faddl
xchg
jo
pop
adc
punpckldq
jno
mov
ret
leave
dec
in
mov
pop
jns
jnp
mov
repnz
sbb
popf
add
cmpsl
adcb
cltd
cmp
mov
xchg
add
imul
mov
sub
call
lret
adc
fwait
les
imul
add
push
sub
fdivl
popa
jb
mov
mov
push
jne
rolb
les
sub
ret
jb
iret
mov
add
aad
out
stos
out
stc
imul
icebp
js
mov
jne
pop
lahf
fwait
jno
adc
cmp
push
jae
jl
dec
pop
inc
aaa
mov
enter
xchg
clc
lods
shrl
jbe
add
sbb
rorb
xor
xchg
push
jne
push
cmc
aam
add
aam
loope
lret
push
or
mov
push
inc
push
sub
popa
rorb
mov
dec
push
into
mov
shll
in
xchg
jns
jg
clc
push
jb
mov
mov
jnp
in
inc
jno
sub
cmp
mov
pusha
subb
in
in
or
mov
lea
in
adc
vdivsd
ret
push
fadds
mov
loop
and
out
imul
push
sbb
sbb
inc
ret
sub
bound
imul
dec
or
and
leave
xlat
mov
pop
fcoms
jp
jmp
fs
add
pop
dec
sub
pop
sbb
cmpsl
popf
push
xchg
ds
push
out
xor
in
xchg
ja
fcomps
inc
jne
xor
xchg
xchg
gs
mov
pop
rol
mulb
or
fmull
stc
sbb
and
mov
push
push
adc
mov
push
jbe
ror
andb
stos
mov
mov
mov
mov
xchg
cld
ss
cmp
call
and
sub
push
jmp
popa
mov
xor
inc
lahf
stos
pop
add
xor
fs
jl
xchg
push
mov
jge
int3
enter
mov
mov
push
or
push
jmp
add
cwtl
jecxz
shr
pop
scas
ss
out
pop
push
popa
loopne
dec
sti
mov
mov
cs
ja
mov
scas
mov
addl
adc
aam
aas
dec
jle
roll
mov
mov
jns
xor
out
pop
pusha
adc
xlat
lret
cmpsl
dec
orb
mov
xchg
dec
fldt
cmpsb
mov
adc
ret
inc
popf
adc
icebp
fimull
mov
out
inc
mov
mov
cmp
mov
mov
mov
mov
pop
in
stos
jmp
iret
pusha
and
sub
add
dec
push
pop
lds
xor
incl
adc
cld
cmp
out
loop
repnz
jmp
sbbl
stos
jmp
cltd
idivb
shr
pop
loopne
rclb
mov
lods
icebp
fcoml
xchg
rcrb
mov
call
sbb
test
push
add
xor
sbb
sub
insb
inc
xchg
push
mov
or
fimuls
lds
push
in
mov
xchg
daa
dec
mov
xchg
fldcw
iret
fstl
xor
ja
rcl
jp
sub
in
js
xchg
dec
test
std
xchg
repnz
rolb
inc
pop
fisubrl
shll
imul
xlat
js
mov
ficompl
bound
xchg
jae
repnz
loopne
sbb
out
dec
push
mov
out
addr16
xlat
in
sub
das
jmp
push
mov
cmp
mov
push
xor
mov
jbe
shrl
push
sar
mov
push
add
add
pop
out
push
adc
mov
sub
sbb
mov
in
push
rcrl
sbbb
cmc
and
cmp
andb
repnz
cmp
jmp
push
call
add
in
roll
lock
dec
rclb
mov
js
pop
mov
jecxz
adc
xchg
sub
xor
lea
jae
push
and
mov
insb
sbbl
jns
cmp
insb
sahf
pusha
dec
popf
mov
xor
pop
push
movb
mov
jne
pusha
fisttpll
stos
or
nop
xor
call
frstor
in
mov
jae
jns
xor
in
scas
xor
ficoms
add
outsl
push
ret
or
in
dec
sahf
insb
jne
inc
sti
popa
inc
add
cmp
popf
loopne
test
sbb
lods
pop
sub
add
or
xor
push
add
push
inc
stos
mov
mov
ja
in
test
pop
inc
cmp
movl
mov
cmpl
sbb
dec
sbb
divb
mov
sub
mov
loope
cmpl
cmp
repnz
and
xchg
jne
jae
jmp
xchg
and
lcall
mov
popf
mov
inc
inc
loop
mov
scas
xchg
les
aad
mov
xor
xchg
int3
repz
mov
mov
cmc
jmp
clc
popa
imul
gs
les
fstpl
sub
xchg
or
sub
repz
outsl
and
push
stos
mov
add
inc
sbb
mov
push
or
xchg
sarb
shrl
mov
fisttpl
jmp
subb
dec
mov
lea
or
pop
and
fisttpl
ret
frndint
or
xchg
imul
mov
mov
mov
lret
iret
out
rcl
mov
es
sub
lret
idivl
pop
das
cltd
mov
jb
mov
xor
jo
in
test
mov
xchg
sbb
push
rcrb
lods
daa
out
push
mov
add
mov
mov
inc
mov
dec
add
nop
loop
inc
or
sub
fwait
je
stos
jns
ficomps
mov
icebp
inc
pop
lahf
cmc
icebp
fidivs
push
add
jo
insb
lahf
mov
xchg
xchg
iret
pop
out
push
sti
ss
sbb
daa
adc
sbb
mov
dec
mov
scas
cmp
cmp
jne
je
jmp
in
push
sbb
ja
add
mov
movsb
cmp
mov
sub
jecxz
in
adc
xchg
dec
ret
dec
inc
mov
xchg
enter
mov
sbb
int3
addb
sbb
out
icebp
mov
popa
sbb
sbb
inc
and
into
das
ficoml
xchg
cmpsl
mov
ja
fisubrl
mov
pop
cmpsl
mov
dec
sbb
das
mov
sbb
das
loope
cmp
iret
mov
shlb
xorb
and
or
data16
popa
fldl
test
or
es
xchg
ljmp
cli
pop
dec
rol
setbe
sub
jo
in
fbld
sti
mov
out
mov
aas
mov
mov
pop
jmp
shll
xor
loope
sub
outsl
adc
sahf
shll
in
fcmove
jl
push
je
cmp
cli
cld
sub
imul
sbb
cmpb
scas
inc
sub
sti
sub
xor
rol
ret
mov
push
push
mov
cld
xor
es
pop
jne
insl
adc
stos
and
mov
mov
jg
sub
push
cmp
imul
aas
xor
push
or
push
scas
mov
ret
imul
add
xor
xchg
out
repz
xchg
inc
xor
stc
sbb
sub
pusha
jge
pusha
mov
mov
mov
ds
imul
push
ds
add
sbb
insb
sbb
sub
xchg
ja
jb
sub
lcall
mov
bound
rclb
out
cmc
mov
xchg
jae
cmp
ja
in
das
mov
lds
push
mov
push
jmp
xor
xor
xor
jg
std
mov
adc
push
cmp
sbb
test
out
mov
lods
add
stos
int
xor
insl
dec
or
iret
xchg
cwtl
into
roll
pop
adc
out
gs
xlat
aaa
jae
add
orb
loop
movsl
sub
enter
xchg
xchg
dec
loope
imul
aad
add
les
dec
stos
dec
push
test
outsb
jns
fs
stos
repnz
sbb
or
jnp
dec
add
int
gs
imul
popf
and
push
pop
push
cmp
imul
xchg
or
cmc
mov
daa
cld
orb
arpl
sarl
out
and
rorb
jecxz
cli
jp
cmpsl
sbb
mov
xchg
mov
or
mov
inc
add
dec
adc
aad
outsb
mov
jge
sbb
push
dec
shlb
add
repnz
inc
jae
fimuls
mov
dec
mov
add
jne
and
xchg
add
stos
popw
jo
lock
cmp
dec
pop
ljmp
call
es
sbb
ja
and
inc
into
lahf
xchg
and
inc
mov
outsl
jg
xchg
pop
and
jo
or
or
sbb
dec
xor
fcoms
lods
add
in
mov
scas
dec
mov
and
pop
push
xchg
mov
xor
mov
xchg
cmp
jle
stc
push
sub
add
push
inc
es
xchg
pop
and
fdivrl
dec
fcmovbe
jl
push
aas
dec
xchg
shll
call
cld
and
jmp
mov
xor
data16
xchg
fisttps
in
std
and
mov
xor
ret
dec
adc
mov
sti
cmp
arpl
sti
mov
adc
adc
lahf
cmp
in
in
and
sahf
fcmove
mov
xchg
inc
fdivr
gs
std
jns
into
pop
iret
sarl
mov
into
js
or
add
cmp
pop
loopne
rcrl
jle
cmpsl
jle
jp
inc
mov
jmp
xchg
mov
ret
jo
jmp
rcl
inc
pop
jg
mov
psubq
inc
in
xchg
mov
sub
aas
enter
test
pushf
dec
out
repnz
add
jne
insb
in
fstps
pop
sbb
scas
sbb
or
es
cmp
add
mov
dec
outsl
add
movsl
fsubp
xor
mov
mov
sbb
movsl
movsl
gs
in
mov
sbb
pop
push
mov
ret
subb
rolb
out
mov
inc
cltd
adc
scas
popa
xchg
roll
sub
inc
js
shrl
sti
mov
ljmp
xor
mov
pop
add
add
cmc
lods
pusha
jl
adc
ret
sti
xchg
xor
inc
pop
mov
jae
mov
inc
fs
add
sti
and
in
in
icebp
add
nop
lahf
aaa
ret
add
push
jnp
ja
cmpsb
outsb
outsl
ret
in
sti
dec
divl
aad
cwtl
jle
mov
negl
bound
popf
std
cmp
in
test
in
mov
popf
push
sahf
iret
pop
mov
out
movsl
cmp
scas
mov
push
sbb
int3
jle
and
cli
xor
test
jne
aas
sti
imull
push
jnp
mov
inc
iret
dec
jmp
sub
push
mov
cs
data16
ljmp
lock
inc
icebp
scas
sti
orl
xchg
adc
mov
in
out
mov
bound
sub
inc
jmp
insl
adc
dec
mov
jb
pop
add
push
mov
xchg
push
pop
dec
jle
shlb
and
and
xchg
pop
mov
clc
add
jbe
fcomi
cwtl
cwtl
xchg
mov
mov
dec
mov
lock
lsl
cwtl
nop
pop
or
stc
enter
out
pop
add
and
add
lret
jns
cmpsl
inc
adc
push
bound
stc
sub
cmp
xor
shlb
push
and
jmp
arpl
add
or
mov
adc
inc
roll
scas
xchg
imul
ret
fbld
jecxz
inc
icebp
loop
lods
in
inc
ljmp
cmpsb
jmp
int
les
jnp
mov
daa
jge
pusha
sub
iret
and
loope
or
jl
jge
sub
mov
test
push
popf
les
pop
loop
pop
jns
jae
adc
adc
fisttpll
out
push
movsl
test
enter
clc
xor
jle
and
mov
movsb
push
add
mov
popa
mov
jg
cld
cmpsb
repz
push
cmp
jns
in
pushf
jl
pop
loope
shr
sar
xor
and
arpl
std
push
pop
xchg
push
push
dec
hlt
popa
mov
dec
mov
sar
mov
inc
leave
ret
ljmp
sbb
xchg
cmpsl
lret
std
inc
int3
cmp
add
xchg
mov
push
es
mov
add
push
jge
inc
popf
adc
or
scas
test
adc
and
add
sti
vpavgw
mov
mov
movsl
jae
and
cmpl
sbb
dec
in
dec
mov
cmc
sbb
ja
mov
into
and
mov
and
sbb
sbb
test
mov
xor
mov
or
push
aad
mov
cmp
adc
out
sub
lock
or
jl
jge
mov
or
xchg
add
rorl
push
out
push
call
mov
pop
push
fistl
ret
sbb
cmp
out
mov
jg
scas
stc
repnz
ret
sbb
and
sbb
movsb
stos
fdivl
jnp
cmp
in
fmull
push
and
outsb
cmp
icebp
push
xor
or
inc
xor
mov
xchg
sbb
push
iret
pop
adc
in
std
jns
sbb
loope
pop
mov
and
or
clc
push
into
stos
out
add
or
shl
arpl
jbe
stc
out
call
and
and
cli
mov
ja
or
cld
or
xor
and
mov
shl
xchg
fs
jno
add
jo
ftst
jge
adc
movb
orb
mov
rcrl
or
add
xor
add
lea
sub
jge
mov
push
add
push
and
stc
mov
and
outsb
sahf
xlat
lcall
push
lods
mov
mov
lret
lock
lea
iret
xchg
and
cli
ljmp
pusha
movsb
lock
stos
call
inc
and
and
jo
adc
cwtl
cmc
scas
fsubr
ficompl
pop
shll
push
jecxz
sti
mov
out
fcmovnu
scas
mov
dec
movsb
rclb
xor
lods
fstpt
into
cltd
mov
inc
in
stc
xor
mov
or
rorl
xor
xchg
mov
xchg
cmp
push
cmpsl
rorb
les
repz
add
dec
jle
pop
cmp
jl
or
xchg
fwait
adc
pop
mov
jo
or
sti
add
ja
xchg
jmp
push
pop
mov
mov
gs
push
in
lods
data16
lea
icebp
in
popf
sbbl
add
notl
insb
push
mov
xor
std
mov
int
add
gs
test
lods
pop
dec
std
mov
pop
stos
jnp
scas
lret
jecxz
lret
pop
sbb
jo
in
std
test
jb
lret
mov
jl
mov
jb
cmpsb
cmpsl
aas
pop
adc
sti
cmpb
dec
xor
stos
inc
mov
cmp
mov
test
xchg
in
inc
inc
adc
pusha
push
sahf
out
jle
movsb
mov
pushf
in
inc
repz
rolb
add
dec
mov
repnz
push
mov
xor
js
aas
ret
mov
push
iret
and
shrb
jno
pushf
dec
push
adc
pop
rorl
sbb
shll
rcrb
fstpl
lahf
fidivrl
shlb
ret
js
fistl
mov
pop
mov
jb
imul
pop
lock
lahf
cmp
addr16
in
pop
arpl
jbe
jnp
sub
pop
loope
loop
rorb
addr16
sub
popf
mov
xchg
sbb
pop
push
call
inc
jge
fsubs
sbb
mov
roll
mov
xor
movsb
xor
jecxz
mov
lret
aaa
sbb
arpl
mov
add
popa
dec
add
add
or
int3
xchg
bound
fbstp
or
in
mov
jns
loopne
inc
or
imul
inc
sti
insl
lods
jmp
cld
dec
mov
cmp
rol
mov
cmp
scas
outsb
int
add
shr
mov
mov
in
ss
add
dec
sub
push
jns
adc
fwait
call
iret
cltd
fcomps
jnp
cmpl
sbb
mov
ficompl
int
std
xor
nop
scas
fcmovnu
cmpsl
in
mov
jg
aam
mov
ljmp
test
pop
rolb
ret
add
sub
js
js
jne
sbb
stos
sti
in
add
cmp
sub
cs
push
bound
loope
loopne
jecxz
xchg
push
cmp
out
in
je
movsb
jbe
in
mov
dec
stc
pushf
mov
test
mov
jge
adc
xchg
orl
loop
negl
ljmp
mov
jp
xchg
inc
mov
push
in
and
xor
sbb
push
movsb
loopne
inc
cmpsl
leave
inc
cmpsb
gs
ds
ret
sti
test
dec
push
xlat
stc
adc
das
cmc
xchg
xchg
test
call
in
adc
fcompl
int3
bswap
aad
mov
jne
inc
test
es
into
mov
stos
enterw
into
jl,pn
rcll
push
es
stc
mov
cmpsl
mov
lea
xchg
push
std
or
nop
mov
or
push
inc
minps
into
mov
hlt
mov
push
xor
push
insb
push
movsl
fwait
loope
loopne
popl
in
mov
lret
push
pop
ja
arpl
xor
cmpsl
xchg
imul
mov
std
push
int3
lcall
pop
addb
and
movl
add
out
call
mov
cmp
cmc
mov
cwtl
in
rol
dec
out
inc
cmpsl
pop
add
adc
aas
lods
outsl
cmpsl
rol
jmp
jnp
mov
mov
inc
and
es
ljmp
inc
mov
shll
mov
add
sub
and
xchg
call
xchg
out
fimull
fwait
sbb
lock
inc
outsb
out
xor
pop
sub
aad
pop
sbb
push
xchg
clc
mov
sbb
and
adc
mov
cmp
aas
inc
daa
xchg
test
xchg
scas
rcrb
pop
mov
xchg
test
cltd
mov
jmp
pop
dec
movsb
xchg
xlat
xchg
lahf
fdivl
mov
mov
in
pop
ja
aad
mov
scas
inc
rorl
in
loopne
in
push
xchg
mov
out
cli
dec
lea
imul
cmp
pusha
adc
jnp
dec
push
mov
mov
in
mov
and
and
push
jno
push
jne
mov
mov
popa
mov
jmp
mov
nop
cwtl
mov
xor
xchg
int
mov
pop
and
loope
aad
pop
fidivs
or
popa
shll
jnp,pn
test
aam
sbb
lret
sti
mov
add
xor
push
lock
mov
int3
sub
mov
jl
ss
mov
ss
lea
outsb
cmpsl
arpl
in
or
jg
or
push
out
add
jb
cmpsl
mov
cltd
mov
jmp
push
shr
fcoms
dec
and
push
push
std
inc
pusha
xchg
xor
push
das
rorb
aad
stos
rorl
loop
dec
movsl
push
xor
cmp
adc
popa
dec
nop
and
outsb
nop
xor
rorb
mov
aas
shlb
mov
xor
aad
sub
pushl
movsl
cltd
dec
pop
cmpl
hlt
mov
push
add
jnp
insl
mov
mov
lret
je
mov
push
rcrb
push
inc
mov
sbb
push
insb
test
cmp
xchg
cmc
scas
sti
ret
test
pop
sti
std
ffree
popa
minps
push
gs
cwtl
and
aad
jnp
jbe
std
pop
dec
jb
xchg
daa
add
in
mov
jg
or
cmpsb
aad
push
les
imul
sub
movsl
dec
mov
out
xchg
push
ret
xchg
xor
cltd
xchg
xchg
fwait
dec
mov
std
js
repnz
test
pop
cmp
jecxz
push
pop
lds
push
mov
jbe
pop
leave
sti
shll
push
mov
mull
iret
loop
mov
loope
push
out
sbb
inc
lcall
repnz
sub
dec
sub
divb
lods
rcl
add
icebp
sbb
push
xor
aaa
sbb
xchg
loopne
stc
mov
lock
mov
cltd
mov
xor
jmp
jmp
call
add
xor
pop
cmp
pop
jmp
lods
or
addl
pop
js
inc
repnz
lods
xlat
fsubl
vphsubwd
pop
imul
pop
aam
repz
dec
loop
and
inc
les
pop
cli
fsts
loope
ret
jne
push
sub
adc
xor
xor
jae
movsl
fadd
fidivl
inc
out
fisubs
jne
test
into
mov
or
adc
in
jmp
clc
cld
adc
xchg
cs
repz
fisubl
shl
aad
loop
jmp
mov
mov
lock
das
lds
adc
ret
aam
mov
in
push
clc
fwait
sti
int
inc
mov
add
push
jmp
inc
cmp
mov
dec
loope
fiaddl
add
push
stos
sahf
jne
push
dec
adc
mov
or
push
jg
loope
icebp
mov
mov
in
adc
mul
int3
lods
fdivl
int3
out
jne
psubusw
jno
or
insl
lret
sbb
jb
push
add
sub
mov
push
push
aad
adcb
testb
inc
lret
jbe
and
mov
inc
shll
add
mov
xchg
cmp
testb
push
stos
cmp
cwtl
iret
mov
xchg
jecxz
scas
fldcw
scas
call
orb
pop
loop
xchg
pop
and
stos
xchg
pop
dec
mov
fs
cmp
mov
ja
js
mov
jmp
mov
dec
cltd
shll
arpl
cld
mov
pushw
mov
or
test
notl
inc
in
in
sarl
mov
inc
insb
lds
fdiv
add
out
push
in
in
sti
ficoms
int
inc
call
stc
mov
out
mov
add
dec
stos
int
xor
xor
into
or
xor
icebp
mov
cltd
pusha
sub
outsl
jecxz
adc
xor
popf
jmp
fsubl
push
dec
mov
dec
outsl
xchg
mov
mov
jmp
mov
xchg
addr16
fcmovnb
in
hlt
arpl
dec
or
and
clc
mov
cmpl
cld
in
call
shlb
inc
decb
or
movsb
fildl
or
jnp
cmpsb
test
fucomp
or
mov
xlat
dec
roll
cwtl
dec
add
ret
les
lahf
out
dec
mov
loopne
sub
inc
cmc
jecxz
popa
mov
push
gs
insl
jns
inc
mov
lahf
cmpsl
dec
mov
xchg
xor
lds
out
inc
div
and
aaa
pop
les
ror
cli
fs
inc
cmpsb
mov
xor
xor
ja
pop
adc
mov
adc
pop
insb
fucomip
stc
and
mov
subb
pusha
adc
pop
js
std
int3
inc
dec
stos
sbb
fistpl
or
adcl
adc
cmp
lea
nop
clc
shl
fiaddl
rolb
je
jl
shl
sub
fdivr
xchg
adc
fidivl
aad
in
lahf
inc
xlat
loop
in
mov
in
mov
or
mov
je
shrb
push
lahf
jnp
sbb
orl
fcomps
sub
int
or
ficompl
aad
pop
cltd
push
lcall
jecxz
lret
jno
xor
mov
je
xchg
add
lods
xchg
mov
imul
pop
mov
sbb
pop
dec
test
popf
push
je
movsb
jno
pop
loopne
fwait
les
aas
fsubs
stos
mov
sti
ficomps
xchg
pop
jecxz
mov
ljmp
sbb
dec
push
clc
clc
gs
push
jbe
mov
fmuls
xlat
sbb
inc
stos
sub
dec
add
scas
xchg
nop
or
inc
scas
popf
jg
mov
int
mov
fcomps
and
or
imul
pop
sbb
je
xor
adc
xchg
mov
ljmp
lahf
movsl
jmp
push
lahf
dec
cmp
daa
pop
xchg
add
xorl
pop
sbb
dec
stc
push
outsb
ds
add
add
nop
xchg
decb
hlt
popa
xchg
pop
fadd
xor
imul
mov
add
inc
sub
movsb
jle
and
xor
add
mov
roll
nop
or
push
mov
shll
jecxz
pop
inc
sub
cmp
jle
xchg
idivl
pop
sub
shrl
cli
xor
and
lcall
xchg
out
add
aam
pop
lock
and
mov
sarb
fs
add
imul
in
mov
stc
mov
jns
jo
pop
adc
pop
inc
xchg
inc
ret
dec
adc
mov
out
jns
mov
jns
mov
pop
dec
jno
pop
imul
mov
gs
mov
sahf
sub
jp
in
dec
fisttpl
push
leave
dec
add
mov
out
lret
xchg
mov
cmp
sbb
arpl
push
test
dec
in
loope
jg
loope
jmp
mov
dec
mov
push
aad
aas
loopne
and
cmpsl
out
dec
ret
ret
sbb
push
loopne
sti
push
lock
cmp
push
pop
mov
in
int3
out
scas
or
ret
dec
push
scas
test
cmc
gs
inc
mov
stc
popf
pop
stos
int3
aam
mov
dec
mov
in
mov
test
dec
jl
je
push
ss
xchg
add
movsl
mov
sub
stos
jmp
or
mov
mov
push
sbb
jo
insb
aam
mov
pop
jnp
aad
push
mov
inc
sbb
xchg
mov
inc
gs
mov
aas
testl
inc
nop
lret
dec
es
cmpsl
mov
mov
xchg
popf
addb
or
and
sub
dec
xchg
loope
fstpl
jge
inc
orl
jmp
in
xchg
sarl
sub
mov
jmp
cmpsb
pusha
cltd
rcr
mov
stos
mov
pop
stc
sbb
scas
lcall
add
xor
mov
cvtps2pd
movsb
fs
add
pop
dec
fsts
shlb
pop
rolb
xchg
imulb
pop
fsub
xor
jecxz
ljmp
js
sbb
sbb
and
mov
insl
xchg
mov
into
cmpsl
inc
mov
lea
xlat
les
adc
sbb
mov
or
jecxz
shrl
fsubs
mov
and
adc
push
add
mov
in
jmp
pop
enter
std
loope
add
xlat
jnp
mov
push
std
xchg
push
mov
mov
or
in
int
orl
jnp
or
cmpsb
and
and
dec
inc
pop
mov
ja
test
test
sbb
js
fwait
outsl
and
rcr
lods
sbb
dec
lret
adc
loope
push
inc
add
lret
insl
pushf
rclb
mov
dec
inc
jne
lea
mov
cwtl
cmp
pop
in
cmp
push
scas
in
cmp
inc
loopne
jb
or
loope
gs
pop
ds
xlat
out
pop
stc
shrb
jo
mov
mov
ret
arpl
pop
jle
jl
loope
dec
fmull
push
push
js
insb
cmp
bound
mov
mov
lods
push
and
fcomps
cmc
and
jg
cltd
ds
pop
pusha
mov
lret
mov
or
lret
subb
out
cwtl
mov
jmp
sub
mov
xchg
in
std
pop
ss
pushf
arpl
imul
or
cmp
js
int
loope
inc
sub
loope
jno
hlt
jo
shl
pop
jmp
lret
movsb
rorl
mov
or
jl,pn
mov
sub
push
mov
xchg
rcll
pop
push
pop
outsb
sub
int
and
fs
mov
mov
les
inc
aad
ret
xlat
dec
jmp
add
adc
test
adc
andb
dec
sarl
cmp
js
jb
repz
adc
sbb
sbbb
cmpsb
fistl
pusha
xchg
pop
cmp
dec
outsb
mov
dec
xor
imul
hlt
mov
or
mov
mov
rcll
push
and
sbb
mov
mov
aad
lods
shl
shll
lods
in
cmc
pushf
cmp
jg
mull
cmp
and
xor
inc
lcall
pop
dec
mov
or
or
jae
or
cmpb
sbb
popf
lods
adc
cmpsl
cmp
lods
inc
lods
adc
in
insb
mov
push
fisttpll
fidivs
lcall
push
xchg
mov
cs
or
and
stc
and
jnp
dec
js
sub
xchg
sti
add
stos
or
cmpsb
xor
inc
bound
dec
sub
mov
insl
aas
or
test
test
add
and
das
mov
dec
push
xor
rcl
xor
int3
adc
jmp
std
mov
movb
ret
xor
inc
and
mov
dec
cmp
cmp
add
mov
mov
push
shlb
dec
add
xor
fnstsw
aaa
sbb
testb
or
xchg
mov
sti
addb
mov
mov
loope
shll
xchg
sbb
pop
mov
loope
xchg
imul
add
push
or
mov
cmpsl
js
fucomi
les
popa
sbb
stos
add
decl
in
push
je
imul
or
mov
ret
pusha
std
mov
lods
incl
pop
mov
jl
or
gs
mov
out
cltd
push
or
loopne
or
push
inc
lods
ja
pop
dec
inc
loopne
pusha
sub
js
dec
cmp
ret
scas
nop
push
movsl
out
xchg
push
rorl
pop
outsb
mov
sub
roll
test
aad
xchg
jo
mov
sbb
dec
cmp
stc
dec
mov
mov
mov
les
sbb
lea
sub
xor
and
sub
mov
add
mov
dec
mov
jbe
push
or
ss
add
dec
stc
fisubrl
xchg
sar
push
cmpsl
idivb
xchg
std
push
xlat
or
out
std
insb
fst
sbb
mov
or
pop
lret
xor
aas
add
std
dec
xchg
loopne
lret
xor
push
gs
mov
jmp
inc
xchg
movsb
icebp
sbb
popf
pop
mov
cmpsb
xchg
scas
sahf
cltd
icebp
sub
sbb
enter
push
icebp
xchg
js
xor
jb
add
jo
add
outsl
adc
mov
mov
aaa
fldcw
hlt
mov
cmc
lret
pop
inc
xchg
push
cmp
sbbb
xchg
mov
push
dec
lret
clc
xor
stc
mov
jbe
xchg
ret
lods
les
inc
test
cmc
subl
pop
add
dec
arpl
subb
fildl
mov
push
ja
xchg
add
push
fucomip
xorps
repz
pop
icebp
jne
ret
sbbb
lock
lea
outsb
lea
in
mov
ret
or
insb
flds
mov
mov
inc
iret
insb
mov
ret
inc
stc
push
ljmp
jmp
jno
push
mov
push
mov
nop
or
test
daa
ja
and
mov
push
cmpsb
add
leave
shl
js
pusha
cwtl
imul
xchg
cld
sti
fs
loope
pop
mov
lds
leave
test
dec
add
shl
inc
pop
clc
jae
je
mov
out
mov
sub
shr
jl
cmpsb
es
icebp
push
cmpsl
add
and
push
cmpsb
jge
out
dec
mov
shll
shrl
icebp
xchg
stos
cli
pop
in
and
xor
push
inc
adc
ljmp
mov
sar
lock
js
add
ds
jns
xor
dec
fucompp
mov
jns
ljmp
in
call
test
mov
jecxz
lds
dec
dec
sbb
and
bswap
aas
cwtl
shrl
cmp
stos
push
mov
into
aad
cld
movnti
lock
or
lds
addl
mov
aas
or
sbb
dec
nop
arpl
sti
xchg
sti
in
inc
mov
dec
sbb
adc
jbe
push
add
sti
movb
std
fwait
lret
scas
fs
push
add
cmpsb
stc
and
push
jb
push
mov
jecxz
dec
std
addr16
jbe
rclb
xchg
pop
iret
lahf
shll
outsl
add
enter
jle
rolb
test
out
lret
dec
inc
push
daa
ja
push
mov
dec
aam
lods
sarl
lret
mov
loope
repnz
dec
dec
bound
arpl
adc
repz
mov
adc
fs
or
jecxz
fsubr
push
rorl
icebp
xor
jnp
xchg
xchg
aas
cs
pop
add
cmpsl
or
inc
mov
movsb
push
sbb
fnstcw
in
inc
enter
sar
fadds
aas
fidivrl
and
dec
ret
mov
push
vdivpd
stos
jmp
mov
test
mov
mov
lahf
and
or
cwtl
aaa
fisttpl
stc
dec
popf
cmp
mov
insb
rcl
in
pop
call
mov
mov
loope
or
jmp
jmp
pushf
push
test
and
sti
cmpsl
sbb
xor
aad
dec
xchg
mov
mov
add
ret
jp
inc
gs
enter
dec
dec
nop
cmpsb
lea
mov
mov
aad
cmp
js
push
push
in
sbb
movsb
pushf
rorl
xchg
or
out
aaa
mov
movsl
daa
xor
adc
shlb
loope
imul
ret
sbb
pop
iret
push
test
mov
push
adcl
jle
repz
xor
mov
mov
icebp
js
inc
xchg
insl
xor
pushf
sbb
rcrb
mov
ja
imul
fnstenv
aad
call
xchg
dec
test
inc
outsb
adc
ret
add
cltd
cli
sarl
mov
sarl
cltd
in
and
jmp
leave
popf
dec
mov
fstpt
mov
icebp
cmpsb
test
test
gs
add
push
nop
adc
in
ret
push
cltd
mov
ds
les
xor
inc
jnp
and
clc
call
add
test
ds
rorb
in
test
push
mov
imul
sbb
fs
push
sar
je
out
dec
fldenv
stos
mov
push
fsubl
loope
jb
sbb
gs
les
push
adc
aaa
daa
js
movsl
push
jo
sti
xchg
xor
jecxz
push
dec
or
test
mov
jno
dec
jl
stc
mov
imul
push
shrl
pop
lds
xor
mov
cltd
in
mov
push
mulb
ja
mov
js
popf
sbb
cmp
ja
sub
mov
jnp
fcoml
lock
loope
xchg
pop
int
jle
xchg
lret
fsubrp
xor
lock
and
and
push
adc
inc
test
repnz
or
notl
jmp
rclb
rol
lock
mov
mov
or
jp
rorl
sbb
push
cld
loopne
hlt
jo
stc
in
fistpl
sub
push
sub
aas
stos
pop
or
lahf
enter
imul
orb
xor
add
stos
jnp
mov
rcr
mov
popf
adc
std
mov
add
addl
mov
push
lods
push
mov
test
jbe
mov
sti
icebp
mov
insl
aas
ret
call
movsl
mov
lret
orl
mov
pop
xor
push
adc
ficoms
movsl
xchg
add
lea
imulb
cmp
mov
pop
or
push
mov
pop
lret
mulb
je
push
jns
or
lea
cld
mov
and
shr
subl
mov
and
cmp
jmp
insb
jbe
add
dec
dec
jo
lret
scas
dec
cmp
gs
pop
in
xor
pop
and
mov
loope
outsb
leave
lahf
ror
mov
gs
pop
int3
cli
cmp
in
sbb
sbb
decb
jb
insl
mov
add
fisubs
jmp
adc
insb
sub
jmp
mov
aam
rcrl
jmp
in
mov
mov
popf
cmpsb
jge
adc
movsb
push
lods
out
shl
push
jg
std
add
jmp
pop
test
outsl
fucom
in
inc
mov
cli
dec
decl
inc
icebp
repnz
in
leave
adc
cwtl
cmp
xchg
dec
dec
dec
add
xchg
inc
fdivrl
push
jno
icebp
pop
jns
std
mov
fs
cmp
stos
cmp
popf
scas
mov
or
icebp
aas
xor
call
insb
adc
outsl
into
pop
inc
add
pop
sbb
flds
push
loopne
dec
in
inc
cmp
repz
leave
xchg
ja
rol
shlb
int3
xor
sub
inc
in
pusha
mov
pushf
add
stos
out
iret
xchg
xchg
xor
inc
std
dec
popa
imul
sarb
xor
sbb
insb
jmp
loope
jge
mov
push
push
std
mov
mov
adc
xchg
xchg
pop
add
loope
cmp
dec
mov
xchg
pop
inc
stos
sbb
pop
ret
push
notl
sub
jl
mov
jbe
clc
scas
clc
sbb
mov
sti
shlb
inc
popf
dec
add
leave
xor
jnp
fsubl
int
mov
and
mov
pushf
pop
dec
popf
call
mov
jns
push
sub
dec
mov
clc
lods
jnp
jo
clc
cltd
and
or
shlb
or
lret
fdivrs
add
lcall
adc
xor
fstpt
cltd
dec
andl
jnp
pop
cli
mov
push
loope
cmp
shll
mov
insb
fsubrs
fs
mov
mov
mov
fnsave
mov
repz
or
js
adc
mov
mov
out
dec
aam
lret
shlb
out
adc
mov
fidivs
cld
test
and
xchg
push
push
loopne
sub
sbb
clc
push
cltd
insb
shll
sti
mov
cmp
adc
jp
popa
sahf
lea
cwtl
into
subb
or
adc
push
jo
dec
mov
lret
call
mov
iret
cmpsl
or
sub
pushl
repz
mov
js
pminub
insl
cmpb
es
out
cmp
push
push
add
dec
lahf
push
lock
cltd
sub
cwtl
fildl
js
and
std
add
fdiv
scas
mov
dec
dec
sub
imul
fs
out
clc
nop
xchg
mov
negl
popf
in
mov
cltd
dec
cmpsl
aad
jae
aad
es
dec
pop
clc
dec
outsl
push
shll
xrelease
adc
add
jne
adc
xor
cmp
or
jmp
cmpsl
adc
test
fdivr
lret
mov
outsl
inc
cmp
mov
or
add
add
cmpsb
xchg
add
cmpsb
jbe
xchg
sarl
pop
push
in
orl
ds
mov
aas
push
scas
xchg
fidivrl
cmp
psubusb
insl
dec
shl
arpl
shrl
dec
aad
mov
push
xchg
iret
popf
mov
mov
lret
stos
jl
insl
adc
filds
cmc
or
aaa
imul
test
lods
in
sbb
inc
sbb
stc
push
sub
inc
ficoms
mov
jp
aad
andb
and
mov
add
roll
in
jae
stos
popf
dec
aas
ret
mov
shlb
dec
add
dec
scas
and
sbb
icebp
aad
mov
leave
cmp
cmp
inc
inc
loop
arpl
inc
jp
push
insb
dec
pcmpgtw
clc
fdivrl
cmp
or
dec
sbb
sub
jae
fldenv
loopne
push
mov
lock
pop
lret
cmpsb
inc
mov
rcl
xorb
mov
xchg
popa
loope
mov
cmp
cmp
pop
cmp
adc
cmp
add
cmp
rcl
dec
out
sub
sbb
outsl
add
ljmp
es
out
mov
cld
dec
xchg
inc
jmp
negl
and
hlt
xor
xchg
mov
xor
les
adc
popa
jle
in
jmp
adc
sbb
push
pusha
in
loopne
adc
decl
mov
arpl
inc
shlb
inc
cld
movsb
inc
dec
cld
mov
push
mov
shlb
or
mov
and
std
pusha
or
pop
and
mov
xor
fimull
jl
or
dec
push
rorb
shl
or
push
inc
inc
pushf
mov
mov
rcrb
insl
test
cmc
inc
stos
js
in
inc
or
jae
adc
sti
mov
js
or
sub
popf
add
sub
js
or
incb
adc
cwtl
jle
pop
xlat
int3
push
imul
ljmp
cld
xchg
pushw
xchg
popl
ret
mov
sbb
pop
mov
sub
fs
lret
adc
les
dec
pushf
dec
or
fwait
movsl
push
jmp
scas
and
incb
pop
xchg
in
rolb
cmpsl
dec
pop
iret
sub
mov
shl
inc
inc
into
ret
pop
pop
jbe
jns
xchg
pop
jo
gs
xor
jbe
outsb
call
adc
adc
outsb
std
jnp
popa
xchg
xor
cmp
cmp
in
mov
loope
push
push
inc
cmpsb
outsl
pop
gs
lahf
mov
test
ja
sbb
flds
rol
sub
mov
mov
inc
mov
dec
stc
push
ret
popa
jne
jnp
inc
xchg
mov
bound
inc
adc
mov
js
sbb
cld
fistpl
xchg
jmp
mov
inc
fld
inc
popa
push
xor
popf
out
dec
mov
sub
in
adc
fcomi
sub
pop
mov
test
and
adcb
and
enter
dec
and
shll
mov
and
add
pop
xchg
repnz
popf
mov
pop
data16
aaa
cs
mov
jo
push
gs
gs
std
sbb
sub
enter
or
shl
add
adc
inc
hlt
inc
add
adc
pop
out
cld
jmp
mov
push
and
or
adc
iret
and
dec
shll
cmp
lahf
and
mov
cmp
mov
dec
sub
lock
adc
in
decb
cmp
adc
out
roll
orl
fld1
into
loopne
add
cmc
data16
sbb
pop
and
xchg
and
adc
mov
sti
das
andb
movsl
test
fistpll
lret
xchg
adc
xchg
add
idiv
sti
cmp
shl
out
adc
movsl
jecxz
imul
dec
imul
cmp
push
int3
jbe
sti
cmp
int3
jle
fcmovnbe
in
jo
fs
rolb
pushf
fsubs
sbb
xchg
sub
push
push
scas
dec
sub
pushf
enter
mov
lret
fisttpl
mov
fisttpll
pop
aad
cltd
jl
jns
scas
lret
mov
int
mov
stc
mov
pop
daa
dec
xor
lret
fstpl
lret
sbb
enter
cmpsl
movsl
lret
add
xchg
dec
mov
sbb
es
sti
add
cltd
rcrl
and
xchg
xchg
lea
sub
push
jne
lea
in
arpl
aam
std
test
lcall
mov
mov
push
xor
scas
mov
pop
out
cmp
inc
lea
xchg
loope
mov
push
mov
in
jo
sarl
dec
popf
cmovb
and
sbb
in
xchg
dec
pop
fiadds
enter
imul
ds
sub
arpl
xchg
jnp
hlt
xlat
and
jecxz
sbb
aad
mov
xchg
mov
cs
xor
mov
dec
gs
cmpsb
outsb
xor
ficoml
cmp
in
mov
xchg
sbb
cmp
sahf
or
mov
cmp
int3
xchg
lds
out
mov
and
cwtl
mov
lock
gs
hlt
xor
repnz
dec
sti
mov
cmp
lcall
xchg
loope
lods
jmp
dec
shll
pop
mov
cld
mov
jns
insl
test
xchg
xchg
cmp
icebp
jg
leave
call
bound
cmpsl
outsb
xor
push
mov
cmp
xchg
add
stos
xlat
jle
pop
shrb
xchg
test
lock
imull
push
sub
mov
out
test
int3
jmp
xor
out
fcoml
mov
jmp
mov
in
dec
mov
add
out
add
cltd
std
stos
nop
aam
inc
movsl
push
sahf
test
xchg
pop
gs
sub
push
xchg
add
push
adc
jno
leave
sbb
lock
inc
and
or
repnz
ja
cmp
xor
lea
fsubrl
push
sbb
and
ret
or
stc
xchg
add
sbb
in
or
stc
jmp
in
mov
jo
aad
shl
in
mov
popa
fdivl
in
out
mov
cmpb
in
popf
fstpl
aam
mov
aad
in
in
fsubr
add
cmpsl
vmovaps
mov
xchg
popa
xchg
sahf
cmpsb
aad
jmp
push
jno
lea
popw
dec
mov
lods
push
xchg
in
sti
jg
stc
dec
jp
arpl
push
mov
sti
fcomi
in
add
mov
mov
add
mov
cwtl
lods
inc
dec
add
enterw
std
repnz
rcrl
or
nop
sub
pop
out
sub
in
insb
mov
pop
into
dec
test
mov
int
push
popl
cli
push
push
inc
cmp
jmp
mov
mov
add
mov
push
mov
call
or
roll
jno
mov
dec
jae
push
test
push
in
cwtl
xchg
jmp
subl
ja
ffreep
inc
in
std
sub
pop
jle
mov
cmp
xor
gs
mov
push
sub
or
push
inc
sub
in
pop
sarb
sub
xchg
jmp
jmp
inc
out
repz
dec
std
add
add
pop
lret
in
and
dec
bnd
inc
movsl
sub
mov
js
into
or
stos
mov
in
add
ror
push
popf
aad
arpl
xor
sub
jns
in
sub
scas
and
out
sub
mov
sub
lret
in
in
call
sbbb
enter
or
lods
in
fimuls
in
fcom
sti
add
aas
test
out
mov
cmp
imul
inc
out
in
std
insl
push
dec
jmp
outsl
add
sub
or
or
shl
jecxz
adc
push
pop
and
loop
xorb
lea
mov
inc
sar
clc
dec
mov
cmp
adc
sti
std
inc
movsb
sbb
icebp
ja
test
xchg
jbe
mulps
mov
add
in
in
cmc
ljmp
insb
add
jmp
add
dec
fidivs
or
adc
mov
mov
sub
lahf
mov
lds
in
cs
mov
fcmove
addl
mov
in
stos
scas
dec
pop
cmp
cmc
or
inc
insl
lods
jecxz
mov
test
in
fmull
stc
enter
xchg
push
inc
mov
cmp
mov
cmpsl
cmp
xchg
push
jecxz
cmp
out
call
lcall
adc
cmp
or
scas
or
mov
cmp
icebp
mov
sub
mov
push
int
mov
and
mull
mov
xor
sub
pushf
mov
adc
mov
mov
outsb
add
bound
cwtl
pop
lret
push
iret
inc
insl
sahf
xchg
jbe
in
adc
fists
popf
mov
xor
arpl
mov
mov
aad
fsubs
ljmp
lock
xchg
pop
leave
or
test
adc
jno
push
leave
shlb
cmpsl
inc
push
and
into
into
andb
jno
test
pop
or
mov
and
add
or
popf
lret
imul
ja
in
test
mov
and
inc
clc
adc
adc
cltd
lret
std
mov
sub
adc
cmc
add
ljmp
sbb
lock
inc
paddusw
aam
xchg
push
lods
sub
xor
sub
in
sarb
mull
imull
jmp
stc
cmc
stos
notb
fwait
lea
push
enter
into
enter
cmp
int3
lret
test
cmc
jo
test
mov
sub
adc
repnz
mov
jo
loope
jae
enter
sti
push
mov
addr16
or
and
inc
push
xor
loop
popl
pop
fwait
mov
and
xchg
sbb
out
jle
pop
inc
lret
fbstp
movsb
cld
in
test
mov
xchg
ds
adc
jne
lea
dec
aam
xchg
xchg
repz
jl
loopne
and
mov
add
add
mov
xchg
push
popa
sbb
lds
dec
mov
outsl
loopne
dec
int
cmc
clc
jo
xlat
and
repnz
pop
pop
or
ffree
clc
jmp
push
aas
rorl
adc
mov
inc
addr16
rorl
dec
insb
int
icebp
pop
cmp
or
jge
lods
in
mov
mov
in
popa
adc
fldt
mov
mov
ss
fwait
in
in
jmp
daa
pop
insl
fdivrp
xor
jns
in
and
jmp
pusha
stos
cld
sbb
mov
stc
outsb
mov
lcall
popa
sub
jmp
insl
push
sbb
mov
push
adc
fs
jo
fcmovb
xchg
stos
fistpl
out
dec
in
subl
and
fisubl
in
pop
repnz
mov
xchg
jmp
push
sub
dec
test
xor
pop
mov
jl
add
cld
lcall
push
mov
add
or
clts
mov
push
test
push
pop
ljmp
push
in
scas
mov
add
popf
xlat
mov
sbb
pop
lahf
cmp
mov
dec
push
sarl
popa
sti
pop
insb
jecxz
and
ss
lea
inc
sub
and
cld
xchg
rol
pop
aam
lcall
sbb
push
pop
pusha
mov
aam
idiv
ljmp
mov
mov
int3
cld
inc
ds
out
enter
mov
mov
mov
hlt
add
insl
push
adcb
xchg
lea
call
add
dec
movsl
mov
xor
inc
lret
aas
jmp
mov
orb
mov
out
out
push
int3
mov
stc
stc
orb
mov
xchg
push
jmp
pop
sbb
inc
push
shl
or
push
insl
testb
mov
ret
cwtl
in
fistpl
aaa
imul
fs
stc
lock
scas
std
sti
dec
lock
cmp
mov
and
cwtl
in
insl
jo
pop
fs
xor
mov
cmp
pop
inc
inc
jnp
jb
into
mov
sti
cli
push
mov
or
jle
jne
cmp
test
mov
inc
mov
pop
jge
push
cmp
in
jb
lock
lret
mov
add
add
fdivrl
shlb
xor
ja
mov
ficompl
iret
adc
push
loope
jbe
dec
and
jae
loope
in
mov
stc
in
pop
jg
nop
loop
loope
jb
neg
cltd
add
mov
leave
loop
mov
stc
test
cmp
out
jmp
add
ss
rolb
mov
mov
xchg
and
push
icebp
mov
add
imul
mov
cmc
add
jb
movsl
and
gs
aaa
repnz
inc
pmulhw
jmp
cld
in
mov
mov
cmpsb
cli
lds
xor
imul
les
icebp
test
xor
and
cmpxchg
lret
in
cmp
cmpb
in
mov
cmpsl
test
jp
aam
inc
enter
fstl
fldenv
ja
xor
call
and
and
jl
sbb
xor
ss
push
lods
in
test
frstor
and
test
xchg
inc
sub
adcl
mov
fildll
xor
rcrb
insb
stos
and
lods
lea
mov
and
in
aas
aaa
faddl
cmp
mov
insb
bound
dec
push
out
mov
sub
xor
cmp
ja
mul
push
jmp
pop
hlt
scas
ret
sub
xchg
ljmp
flds
jge
inc
test
push
test
sbb
ljmp
fmul
mov
or
stos
cmp
cmpsb
sub
stos
cmpsb
sbb
xchg
mov
js
add
xchg
not
mov
push
fidivl
sub
mov
sbb
xchg
rcrb
pushl
ret
and
punpcklwd
leave
adc
shrb
sbbb
cmp
loope
aam
add
pusha
clc
mov
orl
rorl
in
ss
outsb
push
ja
xchg
test
loopne
sbb
jo
jecxz
and
push
push
pushf
fs
fucomi
jbe
inc
cs
push
js
cmp
dec
or
push
pusha
or
pop
push
mov
std
ljmp
inc
repnz
fimuls
mov
dec
mov
movsb
cld
out
loop
push
add
in
enter
divb
fimuls
lock
je
out
cld
push
sbb
or
in
push
push
orb
js
into
push
ss
adcl
bound
jmp
dec
push
test
push
int3
int
std
pop
sbb
xchg
dec
push
adc
ret
call
in
or
sti
pop
clc
mov
cltd
lea
fistps
mov
sbb
data16
or
stc
repnz
lahf
cmpsl
cmp
or
lods
scas
aas
loopne
xor
nop
mov
xchg
mov
inc
inc
insb
je
test
shl
add
xor
xchg
adc
sahf
mov
mov
insb
adc
xchg
fcomps
repnz
mov
arpl
hlt
jl
and
sbb
jo
popf
out
pop
cmpsl
in
xchg
lcall
mov
aad
mov
dec
mov
adc
adc
out
mov
insb
mov
mov
pop
imul
cld
or
lahf
insl
ljmp
iret
fs
fimull
insb
lods
push
sahf
sarl
fmuls
mov
pusha
cmc
orl
in
add
push
movsb
xchg
cld
aaa
mov
sbb
and
popf
mov
inc
lock
roll
stc
jecxz
rcrl
gs
xchg
mov
and
push
sub
rorl
jns
push
test
push
dec
xor
aas
mov
jge
jo
mov
cmp
jb
and
lock
xor
jmp
bound
xchg
inc
adc
mov
aas
fwait
cmpsl
mov
insb
mov
gs
mov
shrb
or
rcl
push
dec
push
cmp
in
lret
vphadduwd
jmp
in
stc
data16
movsl
sti
and
call
daa
aam
ret
stos
int
mov
sti
scas
or
cld
inc
dec
in
fisttpl
cmpsl
adc
outsl
loope
lcall
mov
adcl
xor
sbb
stc
or
xchg
xchg
rclb
cmp
dec
lret
pop
cltd
adc
aas
mov
les
xor
mov
push
ja
inc
pushf
cwtl
stos
ret
or
dec
sub
mov
dec
mov
mov
sub
scas
repnz
mov
cli
clc
sahf
sub
jb
not
int
xchg
mov
add
sarl
mov
or
pop
int
loope
adc
addb
enter
dec
jmp
sbb
sti
mov
mov
sub
lret
loope
inc
pop
dec
xorps
insl
xorl
outsl
xchg
loopne
lahf
out
loop
dec
popf
jns
mov
mov
and
lds
mov
loope
cld
cmp
jl
adc
dec
push
pop
pop
fwait
pop
jmp
pop
popa
dec
stc
jmp
inc
or
push
aad
test
movl
cmpsl
add
jge
mov
fidivrl
gs
add
loop
mov
fs
sarl
popf
mov
jge
mov
loope
ficompl
pop
and
lods
jae
push
roll
hlt
std
movsb
roll
cmp
and
clc
xchg
fisttpl
pop
sti
inc
in
or
stos
fpatan
sbb
lret
cmpsl
push
add
jecxz
inc
subb
xchg
lret
xor
lcall
mov
jae
outsl
cmpsb
std
popa
mov
je
arpl
pop
iret
adc
popf
mov
mov
xor
fldl2t
outsl
fst
or
mov
sub
add
cmpsb
xchg
xor
dec
movl
jmp
popa
pop
call
mov
sub
pop
jle
xor
sarb
and
lock
cmp
fs
xchg
in
mov
data16
loop
or
in
test
fsubl
mov
mov
lods
subb
push
jb
aaa
rolb
repz
popa
push
or
xchg
fistl
scas
lods
sub
test
popf
push
xchg
movzwl
ljmp
inc
fildll
xchg
xor
push
lret
sbb
inc
loopne
xchg
push
cmpsb
inc
mov
cwtl
out
ficompl
jl
testb
int3
pusha
mov
sbb
inc
cwtl
icebp
ret
sub
adc
jmp
add
js
mov
popa
cmp
cltd
stos
and
push
add
push
cmp
mov
lock
popf
add
in
push
repz
insb
in
das
jg
fisttpll
in
push
lock
jle
adc
loop
nop
and
stos
cwtl
pop
jecxz
outsl
lea
mov
add
push
inc
loope
cmp
les
adc
push
aas
fcoms
out
mov
loope
cli
add
cld
xor
icebp
lahf
cmc
mov
enter
adc
mov
scas
inc
mov
sub
fisubs
iret
jmp
in
inc
xchg
mov
movsb
mov
dec
mov
jmp
xor
dec
or
orl
mov
inc
sbb
push
add
cmpsl
in
inc
rolb
imul
xor
pushf
inc
mov
es
dec
or
add
xchg
movsl
or
movq
jo
fiaddl
ret
cmpsb
leave
lret
cmpsl
fsubs
mov
lret
adc
imul
aas
pop
decl
rcl
mov
stos
in
jne
push
andl
std
mov
mov
in
in
pop
inc
outsb
rcll
xchg
in
in
arpl
insl
leave
enter
inc
fs
sub
jae
xchg
out
mov
jno
mov
stc
mov
int
pop
rcl
cmp
popf
mov
jne
cmp
pop
xchg
jle
dec
clc
dec
stc
and
jnp
lock
pop
mov
inc
std
and
es
lret
mov
movsl
adc
mov
xor
and
cmpl
push
cltd
int3
lahf
lds
ficoml
mulb
ret
or
addr16
in
cmc
jge
adc
push
cmp
mov
fs
cmpb
add
outsb
ljmp
mov
outsb
lds
scas
push
jl
mov
bswap
dec
push
add
mov
mov
mov
in
in
push
jno
xchg
ficoml
jne
inc
dec
loopne
jmp
jmp
repnz
fidivl
cmovo
cli
mov
xchg
xchg
stos
xchg
pop
mov
inc
xchg
sbb
xchg
jl
ja
inc
pop
fs
test
test
xor
popf
mov
add
dec
leave
stos
xchg
mov
ds
insb
sbb
repnz
and
mov
mov
dec
and
dec
mov
jle
jg
mov
sub
xchg
push
shll
or
push
jecxz
dec
jno
cmpsl
icebp
lea
pusha
dec
shlb
cwtl
ljmp
in
mov
cmpsl
es
adc
dec
xor
ds
jl
mov
fsubrl
shlb
mov
stc
add
xchg
mull
xor
rorb
add
cmpsl
jne
pushf
or
insl
icebp
mov
mov
jecxz
push
movsl
mov
clc
test
in
mov
dec
lret
adc
lea
adc
pop
adc
loope
sub
or
cltd
cmp
mov
or
sub
rolb
loope
mov
jne
dec
push
in
mov
jmp
shl
pop
les
mov
and
mov
mov
int
jmp
inc
push
mov
ret
arpl
dec
je
cmpl
js
pop
into
insl
dec
fxam
pop
mov
pop
bnd
inc
and
pusha
push
cmp
lret
mov
fdivr
mov
jns
cld
jmp
or
and
mov
ds
xor
stos
jae
sub
add
and
lods
xchg
sub
jb
pop
test
dec
xor
inc
inc
hlt
mov
adc
neg
outsl
faddl
js
lods
stc
inc
add
xor
or
test
insb
inc
xorl
in
in
mov
lret
xchg
loopne
in
cmovne
fucomi
cmp
adc
mov
mov
imull
scas
es
ss
push
fsubrl
fiadds
mov
jnp
int
push
mov
lea
sti
call
stos
jnp
jbe
lcall
jne
cmp
push
or
push
ret
xchg
sbb
jmp
add
fistl
mov
loopne
lea
out
or
pop
dec
pop
fisubrs
inc
idivl
es
inc
dec
and
mov
add
and
or
mov
aas
pusha
fwait
inc
enter
enter
outsb
mov
rcr
cwtl
fnstcw
jo
mov
xor
test
repnz
fnsave
shl
add
push
mov
ret
scas
add
mov
or
pop
cmpsb
mov
push
fiaddl
test
add
jns
and
dec
pushl
xchg
and
mov
in
mov
mov
rol
shl
push
push
add
test
loop
and
adcb
jmp
push
push
aaa
int3
jmp
popa
movsl
sub
adc
ret
andl
jmp
cmp
sbb
pop
sub
and
int
push
roll
loop
test
fs
xchg
bound
neg
int
sub
lock
fisubrl
test
push
stc
cwtl
std
mov
pop
jb
movsl
imul
push
shll
inc
sti
adc
icebp
ret
in
bound
repnz
aad
out
jmp
rolb
push
sbb
data16
pop
pop
inc
mov
hlt
fs
xor
stc
out
icebp
add
gs
rcrl
aam
repnz
loopne
js
sbb
lret
stos
popf
movsb
or
shll
mov
inc
or
movb
stos
pushf
jbe
pop
jne
cmpsb
cmc
xchg
scas
out
pop
pop
stos
mov
out
ror
dec
dec
xchg
sub
shll
push
push
cmp
jb
adc
dec
cltd
dec
xchg
out
mov
and
dec
icebp
xchg
adc
mov
adc
imul
pop
dec
lods
lea
xchg
cwtl
mov
aaa
in
data16
dec
xchg
movsl
mov
stos
xchg
xchg
into
sub
or
ljmp
adc
rorb
ja
push
das
test
sub
lods
xchg
aaa
jge
fsubr
cmpsl
insb
rolb
sub
jg
sub
stc
out
loope
popf
adc
pop
sub
cmpsb
pop
hlt
addr16
xor
aas
cmc
cmc
sarb
inc
cmp
clc
mov
jmp
pusha
repnz
movsb
cmp
fs
nop
pop
push
into
cmpsb
out
or
loop
mov
mov
lds
mov
inc
out
aad
stc
and
mov
sbb
cmp
jnp
stos
xchg
arpl
jo
cmp
das
pop
mov
icebp
mov
aaa
daa
leave
xchg
push
in
jge
test
jbe
insl
xchg
mov
sub
mov
repnz
lret
mov
negl
out
sub
jl
ja
or
lock
push
popf
cld
cmp
jmp
jne
clc
dec
xchg
jb
pop
push
push
jle
pop
ja
xor
jns
bound
and
je
add
and
jnp
inc
sub
popa
hlt
or
in
mov
mov
mov
into
and
mov
mov
pusha
outsb
push
xor
fs
push
outsl
xor
xor
jnp
pop
dec
pop
add
jae
pusha
jbe
ret
push
in
mov
push
xor
or
mov
and
ja
mov
out
ja
sbb
repnz
sarb
mov
mov
subl
cwtl
in
push
ret
or
in
inc
and
xor
inc
mov
popa
loopne
pop
lock
js
cmp
and
iret
js
or
cmp
push
mov
inc
rolb
mov
int
mov
xlat
dec
xor
incl
pop
lret
mov
xchg
cmp
mov
add
or
adc
and
inc
rcll
jno
push
push
sub
aas
push
data16
and
dec
lea
pushf
movsl
adc
ljmp
xchg
fistps
xchg
or
xchg
std
add
fcomps
jo
bound
icebp
fwait
test
mov
fimuls
movsb
stc
cpuid
xchg
aam
mov
icebp
bound
dec
cs
or
fsubl
fbld
jge
imul
stc
test
xchg
inc
es
push
jl
push
pop
jne
pop
stc
das
rolb
aaa
dec
out
inc
dec
pop
popf
daa
push
ja
sarb
sub
lds
inc
dec
popf
loop
xlat
out
das
push
xor
mov
aam
xorb
sub
lret
sub
or
stos
rclb
rcrl
shll
mov
sub
push
jmp
jno
shrl
mov
ljmp
loop
push
stos
sahf
push
dec
sbbb
or
xchg
lods
pop
jg
stc
stc
xchg
xor
in
add
scas
or
test
lods
push
push
mov
cwtl
fwait
or
andl
movsb
sub
mov
popf
xor
push
adc
lahf
xchg
xchg
xchg
xor
inc
sub
lret
lcall
sbbl
mov
inc
arpl
jle
sbb
push
stos
inc
mov
icebp
mov
js
xchg
or
mov
js
xor
out
dec
imul
lock
mov
cmp
inc
addr16
xor
sti
in
dec
xchg
lcallw
ret
fldcw
push
mov
popf
push
addr16
mov
xor
test
ret
jns
rorl
sub
sbbb
jmp
pop
mov
jge
out
insb
imul
insb
jmp
in
imul
lret
imul
call
sti
shr
pop
ret
dec
mov
aad
aad
stos
jmp
loop
push
mov
stos
repz
mov
and
test
xchg
jecxz,pn
sbb
inc
stos
add
push
std
xchg
sub
jmp
pop
sub
out
icebp
or
mov
loope
scas
popa
jl
subl
jno
insl
rcl
popf
out
shr
mov
pop
push
xchg
cmpsb
pop
dec
xor
addb
rorb
jno
movsb
inc
push
xchg
pusha
xchg
fs
cmp
jl
cltd
movsl
mov
sub
ret
cmc
outsl
adc
lock
mov
js
or
bound
sar
push
sar
shll
aad
or
adc
dec
popf
scas
cs
inc
fcom
jge
addr16
cmp
in
mov
cmc
jbe
or
sbb
push
popf
fidivrl
mov
test
and
std
and
mov
stos
push
aas
dec
popa
push
mov
insb
sub
jmp
ficoms
out
mov
icebp
mov
pop
in
pop
push
insb
and
lods
inc
imul
repz
out
std
mov
cmc
mov
cwtl
and
sbb
fldenv
and
xchg
arpl
jne
imul
adc
lods
pop
push
fs
pop
pop
dec
push
add
sbbb
cmp
sub
int3
sbb
and
xor
jae
or
lcall
mov
xchg
pop
jno
andl
inc
testl
dec
jbe
lods
dec
jne
adc
mov
out
scas
adc
call
and
xchg
push
jmp
push
pop
aad
jb
jo
xchg
call
add
add
mov
cmp
and
mov
ss
mov
fsts
inc
roll
inc
jbe,pt
icebp
ljmp
xchg
stos
in
mov
mov
rcr
sub
pop
xchg
xchg
mov
clc
cmc
inc
icebp
idivb
sub
pop
xor
xchg
arpl
adc
js
out
cwtl
and
fucomp
cld
jns
xchg
pcmpgtd
pop
in
mov
icebp
mov
btr
jbe
sbbl
sti
js
movsb
ret
add
and
xor
sbb
inc
adc
adc
jmp
mov
and
xchg
mov
aas
rorl
inc
jge
cmc
pop
shll
enter
add
dec
clc
negl
push
jne
ret
lea
jecxz
or
test
mov
stc
lret
and
insl
mov
mov
dec
out
mov
loopne
test
pop
inc
jno
mov
cpuid
cmp
lds
cmpsb
sub
dec
in
aaa
ja
pushf
xlat
loope
repnz
mov
js
scas
aaa
dec
or
enter
xchg
and
cmp
pop
jbe
sbbb
sbb
cmc
cwtl
and
leave
jne
xchg
js
imul
jecxz
test
ss
mov
in
sbb
mov
imul
push
sub
push
add
xchg
jae
and
lret
decl
mov
xchg
cmp
out
cmp
cwtl
dec
cmp
imul
ret
andl
push
enter
ja
fldcw
popa
jno
lods
les
xchg
into
dec
add
sbb
popa
repnz
stos
xchg
xor
lcall
push
mov
scas
shll
push
xchg
jnp
adcb
adcb
icebp
popf
dec
ds
mov
in
mov
mov
pushf
jns
add
adc
movsb
loope
dec
add
cmc
test
xchg
adc
imul
sub
fstps
rcr
lods
aam
and
int
in
in
in
mov
cmpsb
fidivs
in
adc
aad
adc
out
popf
stc
scas
test
sbb
jmp
or
lahf
inc
pop
or
flds
mov
lea
lds
test
fdivrl
loope
xor
pop
xchg
jns
adc
sbb
push
pusha
test
data16
mov
shlb
push
mov
or
in
aad
dec
mov
in
scas
jae
mov
in
mov
dec
mov
test
and
lods
push
iret
in
push
or
cld
cli
push
jg
adc
mov
lcall
in
movsl
xchg
cmp
and
sub
pop
add
cld
in
fcompl
push
fdivl
pop
stc
stc
adc
aas
rcrl
and
mov
inc
push
jno
or
jl
jle
pop
jmp
add
jno
mov
je
mov
lret
fidivrl
shl
rcl
jl
dec
add
jmp
mov
pop
sbb
xor
xchg
fldpi
in
rolb
movsl
xchg
add
xor
ret
push
xchg
loope
xor
imul
into
and
insl
ffree
dec
mov
xchg
stc
xchg
cmc
fildl
mov
cwtl
iret
push
cld
scas
pop
in
aam
xlat
jmp
lods
xchg
mov
mov
int
insb
pop
inc
gs
mov
mov
mov
loope
icebp
jl
pop
push
popa
jmp
in
call
in
in
dec
xor
or
int3
push
mov
push
out
stc
shll
dec
mov
xor
pop
pop
jg
movsb
cwtl
mov
int
adc
into
mov
mov
loope
cs
loope
pop
in
lods
mov
mov
loope
aam
push
cld
xlat
rorl
fadd
mov
pop
push
scas
cmp
in
sub
loop
jmp
pop
jg
cli
dec
or
in
arpl
xchg
out
das
out
ficoms
pusha
out
push
cmp
pusha
inc
ja
jne
mov
lods
lds
mov
sahf
mov
push
sti
pop
jo,pt
xor
int
dec
lock
xchg
cmpb
arpl
out
out
inc
cld
pusha
sahf
or
add
sub
mov
dec
add
test
cwtl
pop
push
lock
add
testl
mov
pop
pop
cltd
fists
push
sub
stos
int3
loope
pop
jne
lret
scas
test
jnp
sub
xchg
xor
add
cmp
out
mov
stos
sbb
scas
imul
push
loop
sub
push
push
mov
push
cmc
push
mov
mov
lock
pop
insl
and
mov
cmpsl
das
inc
sbb
adc
int3
and
out
insb
lea
xorl
mov
mov
cwtl
adc
add
mov
push
imulb
mov
stc
popa
or
ljmp
cmpsb
push
add
inc
mov
sbb
mov
jle
sub
stc
fsts
dec
mov
xor
mov
push
arpl
stc
scas
out
ds
out
add
mov
ret
fwait
cmp
pop
push
inc
mov
popf
add
pop
jle
push
sub
jecxz
arpl
pop
mov
push
xor
pushl
shrl
scas
jb
dec
daa
push
stos
pop
mov
cmc
pcmpeqw
adc
ja
dec
inc
inc
incl
movsl
sub
dec
ret
gs
in
mov
add
icebp
cmc
jmp
fistpll
cmp
call
lret
xchg
in
inc
cmp
mov
mov
xchg
xchg
dec
jmp
jg
ljmp
mov
jmp
cli
fadds
sbb
stos
rclb
lds
fdivr
and
lahf
pop
imul
enter
xchg
push
pushf
fimull
arpl
mov
push
sub
mov
in
andb
adc
out
jbe
orl
mov
push
stc
push
jne
and
add
addr16
in
or
adc
cmp
clc
inc
repnz
and
mov
dec
cmpsl
dec
lret
out
rcll
mov
inc
pop
fisubl
cmpsb
pop
in
loop
sub
inc
aad
int
xor
fdiv
mov
repnz
inc
or
push
pop
sbb
lods
ja
scas
insl
aam
movsb
add
stos
fisubrl
jno
cmp
stc
ss
mov
stos
cmpsl
or
je
repnz
mov
iret
je
aaa
adc
mov
into
jmp
scas
push
sbb
ljmp
adc
mov
jnp
fs
cmp
pop
ret
movsb
add
add
xchg
xchg
and
jmp
imul
or
mov
jb
cltd
cmp
loope
cmpsl
test
inc
pusha
bound
inc
xchg
push
testb
in
mov
inc
push
sub
pop
jnp
inc
imul
add
lds
and
mov
mov
and
and
ljmp
int3
lock
fldl
hlt
jle
in
push
sbb
or
cs
test
ss
jnp
dec
xchg
cs
popf
inc
cmp
js
icebp
push
cmp
movsb
test
js
lret
mov
std
clc
mov
cltd
jns
int
sbb
hlt
mov
dec
es
xchg
cmp
dec
pop
cmpsb
in
xor
out
out
insl
cwtl
sbb
xchg
inc
and
mov
or
lods
adc
aaa
mov
inc
data16
dec
popa
sbb
nop
dec
and
pusha
leave
push
mov
or
imul
and
gs
push
pop
dec
pop
inc
or
jl
cmp
xorl
xchg
cmc
dec
fstl
mov
jecxz
clc
push
pop
cmpsb
icebp
fmul
and
push
ficompl
sub
push
inc
aam
out
mov
pusha
and
cmp
or
push
jbe
mov
stos
mov
inc
mov
cmp
ret
js
mov
dec
xor
iret
or
xchg
out
cwtl
sbb
lods
xor
sub
iret
dec
gs
sahf
dec
aas
call
xchg
inc
push
xor
mov
cmp
xchg
jae
in
js
sub
frstor
bound
sbbb
cmp
jle
and
scas
lods
retw
jnp
mov
std
lret
pop
xor
xchg
out
mov
notb
pop
push
push
mov
and
inc
cmc
xor
data16
push
sub
cmp
neg
sub
cmpsb
aam
into
mov
sub
imul
mov
xchg
je
jmp
pop
lea
lea
ss
mov
in
ja
mov
inc
lods
or
pop
les
popa
dec
jae,pn
in
xchg
inc
sti
add
test
aam
jnp
push
aam
lea
xlat
lret
cwtl
xchg
or
int3
push
mov
in
lret
mov
in
cltd
sub
cmp
lea
add
pop
push
ret
sti
or
cmp
aas
stos
hlt
leave
mov
fs
fiaddl
push
ret
ret
xor
or
xchg
jns
ret
int3
in
enter
in
je
decb
jg
mov
jle
mov
ret
rcrl
xchg
mov
fcmovnbe
cmp
out
mov
int
addl
insb
cmpsb
hlt
push
aam
dec
lahf
mov
ret
inc
enter
lahf
fnop
push
int
sar
idivl
mov
lret
adcb
mov
fs
xchg
popf
in
stos
push
and
cmp
int3
jge
out
jae
inc
fwait
mov
xchg
cli
lret
mov
mov
pop
inc
clc
adc
ljmp
sub
in
hlt
dec
es
nop
cmpsl
in
in
cmpsl
mov
std
mov
icebp
jmp
sbb
dec
icebp
mov
xchg
subb
addl
popf
iret
lods
xchg
xchg
cmp
scas
jae
repz
pop
stc
insb
lds
cmp
push
orl
fsubs
fimull
repnz
enter
loop
cld
sti
mov
mov
xlat
insb
mov
cltd
mov
shl
push
sar
loopne
pushf
jae
mov
loopne
mov
cmp
pop
loopne
sbb
jg,pt
repz
push
xchg
push
es
xchg
sub
push
out
inc
mov
jmp
stos
jnp
jne
pop
dec
jmp
in
mov
imul
in
and
repnz
dec
addr16
sub
repnz
and
pop
add
fsubrl
or
sbb
push
or
mull
lods
xchg
fiaddl
cmpsb
stos
lea
push
pop
and
outsl
add
movsb
data16
cmp
lods
cmpsl
int
repnz
idiv
mov
dec
enter
sbb
mov
outsl
lcall
push
push
push
ret
fndisi(8087
inc
rcrl
mov
xor
aaa
int3
cmp
in
sbb
fs
push
jle
sbb
cmp
mov
clc
push
mov
cmp
inc
addb
xor
pushf
cwtl
and
popf
lds
jecxz
mov
push
les
xchg
insb
and
mov
cmp
adc
call
jle
xchg
loopne
pop
hlt
ds
and
jae
aaa
jg
shr
sbb
loope
jg
insb
dec
adc
pop
cwtl
insl
cmp
push
rolb
neg
std
in
add
dec
sbb
in
ja
xchg
mov
dec
popf
les
cmp
xor
sti
loopne
xchg
in
pop
outsb
scas
push
movsl
jnp
outsb
in
fs
adc
dec
adcl
mov
mov
mov
add
fistpl
inc
xor
jecxz
and
mov
aad
adc
shl
mov
cmp
fistl
sti
fisubs
aas
and
mov
cld
call
and
or
lea
inc
inc
ret
je
clc
mov
sti
cwtl
sbb
fwait
jae
add
fst
std
in
push
or
jne
movl
cli
fdivp
lret
jl
sbb
fwait
mov
lahf
imul
push
ret
dec
push
enter
push
pop
loope
xchg
loop
add
stc
mov
xor
cli
shll
dec
data16
int
xor
loop
and
incl
sub
jo
pop
xor
push
xor
iret
int3
pop
fstpt
cmp
xchg
shrb
adc
fcomps
divb
pusha
imul
xchg
cs
xor
xlat
jo
pop
movsl
sbb
jo
pop
and
cli
cmc
jmp
cmp
jnp
shl
sti
ljmp
xchg
cli
js
dec
pop
pop
mov
lods
incb
in
mov
lods
xchg
xchg
inc
mov
icebp
ret
fucom
mov
push
movsl
in
xchg
jmp
lahf
sti
or
push
or
and
into
cld
ficomps
cmovae
jge
andl
je
mov
jmp
mov
mov
incl
test
test
clc
in
pop
mov
xor
shll
aaa
sub
stos
add
sub
mov
mov
push
or
ja
popa
lcall
ret
shrb
outsb
in
test
pop
hlt
sbb
mov
std
fnstenv
repnz
jb
in
and
jae
jne
and
inc
popa
jnp
insl
sub
movsb
das
das
clc
movsb
and
mov
test
or
adc
sub
and
sahf
out
in
mov
insl
popf
ljmp
push
ljmp
jp
push
push
outsl
popf
loopne
inc
pop
push
ds
call
or
xchg
xor
movsb
mov
or
cmpsl
fmuls
outsl
cmp
mov
sti
mov
pop
and
mov
das
add
fidivl
adc
cld
xor
or
sti
push
kmovw
int
and
pop
push
das
sbb
add
mov
lret
decb
aas
sbb
out
hlt
dec
stos
sarb
in
or
dec
inc
mov
inc
rcl
jo
flds
jp
mov
xchg
xorl
add
mov
fnstcw
cmpsl
test
inc
std
shrb
out
stc
mov
out
rcll
pop
cmpsl
mov
cwtl
adc
push
jno
movsb
inc
into
and
xchg
cltd
shll
std
in
cwtl
adc
repnz
add
jne
mov
adc
or
dec
and
rorl
or
pop
pop
jne,pt
lret
daa
dec
sub
push
cltd
repnz
mov
or
leave
jmp
xor
mov
sbb
cmpsb
push
xchg
push
stos
fidivl
pop
gs
into
or
mov
fsubrs
xchg
and
aam
adc
into
mov
pop
add
push
mov
push
shrb
imul
scas
shll
gs
jne
or
pop
sti
add
dec
add
inc
sbb
shr
loop
xchg
fwait
dec
jb
adc
xchg
xor
adc
dec
pop
adc
mov
pop
movsb
mov
ja
push
cmp
mov
add
dec
fs
fst
push
sti
dec
push
mov
pusha
repz
in
dec
xchg
sar
pop
jecxz
stos
mov
push
icebp
cld
xor
cmc
xor
lahf
stc
int3
test
sarl
fnsave
pop
jns
jnp
pop
pop
xchg
out
mov
pop
dec
scas
pop
adc
lret
adc
push
arpl
mov
dec
cmpsb
add
xorl
mov
push
jg
and
insb
jbe
loopne
sbb
xchg
add
push
fmul
inc
and
std
sub
imul
cs
push
xchg
pop
cld
jne
and
lea
push
loopne
jo
inc
movsl
xchg
jmp
mov
jnp
or
movl
setge
paddd
push
in
in
fs
and
and
jmp
mov
int3
cmp
iret
popf
or
fs
int
stos
jno
mov
mov
nop
fstps
mov
cmc
xorl
fs
fmull
jbe
popf
les
iret
iret
js
cld
cmp
aad
sbb
out
sub
dec
bnd
xchg
in
pop
mov
subb
jb
mov
and
andb
adc
sahf
or
sar
nop
jb
sarl
pusha
mov
lahf
mov
push
aaa
mov
orb
or
ret
push
mov
sbb
mov
sub
int
mov
sub
xchg
mov
lods
cwtl
je
sti
into
sub
sbb
xlat
sahf
jb
jne
mov
mov
jbe
add
xor
xchg
xchg
stc
inc
pop
pushl
pop
xchg
shll
push
lods
loop
dec
sbb
fcos
jne
stos
jmp
xchg
mov
sub
lea
mull
ffreep
movsb
aam
push
into
jae
mov
add
rcrl
in
xor
ret
fdivrp
movsl
jle
cmpsb
dec
push
cmp
and
sbb
rclb
jno
jo
sub
adc
mov
repnz
cwtl
dec
fnsave
in
ja
iret
inc
or
mov
ret
jnp
iret
xchg
push
adc
xor
mov
loop
sar
sarb
loope
cmp
dec
fildl
int
push
ja
fmull
add
add
inc
sbbb
mov
jb
mov
adc
sbb
inc
mov
cltd
loope
xchg
mov
sahf
rclb
fnstsw
repz
cs
jmp
lret
dec
adc
shrb
mov
cmpsl
sbb
je
and
cwtl
dec
fidivrs
inc
popa
ss
mov
xchg
test
xor
das
dec
push
inc
jmp
subl
ret
adc
movsl
cli
movsb
in
mov
mov
dec
push
or
cmp
push
pop
inc
inc
push
cmc
push
xchg
pop
iret
dec
mull
pop
dec
movsb
inc
sub
xchg
mov
jg
out
pop
and
jns
jecxz
in
mov
pop
nop
leave
mov
clc
lock
pop
mov
popa
out
lock
rcrb
mov
ds
shrl
loopne
xor
push
js
push
add
mov
push
rorb
push
incb
add
fnstcw
in
xor
add
jge
mov
dec
jae
bnd
add
outsb
mov
add
jns
out
add
dec
or
stos
stc
shlb
test
cmpsl
mov
xor
aas
mov
push
mov
xchg
pop
fisttpl
add
cmpb
stos
sub
cld
aam
jle
test
sub
sub
inc
sti
inc
cmc
fucomp
dec
int
imul
shrb
and
cs
pop
jbe
nop
push
mov
inc
in
jmp
stc
lea
dec
or
mov
push
test
cmpsl
loope
loope
repnz
jnp
jge
aad
lods
jecxz
mov
loopne
lret
mov
lahf
inc
mov
dec
dec
xchg
lock
jne
mov
push
iret
sarl
movsl
inc
xchg
jne
dec
movsb
or
pusha
lock
sub
pop
pushf
jmp
cli
nop
in
lea
nop
adc
rcr
popa
push
stos
jmp
in
push
lret
jo
cli
enter
mov
jno
push
stc
movw
inc
lods
push
mov
xchg
cs
imul
sbb
fistl
dec
jmp
mov
pop
mov
jae
jno
and
mov
jge
dec
mov
or
inc
insb
and
stos
lds
dec
adc
sbb
jl
mov
popa
adcb
sbb
out
jl
out
cmpsl
loopne
popa
fimull
stos
jne
inc
or
mov
icebp
pop
fsts
addr16
aam
pop
dec
mov
pop
stos
xchg
mov
pop
and
mov
aad
in
pop
movsl
mov
dec
inc
popl
dec
fbld
push
mov
mov
push
or
mov
insb
lds
sqrtps
mov
lcall
cmc
test
mov
sti
outsl
ret
lods
outsl
orb
dec
and
aaa
dec
imul
add
mov
fnsave
xchg
mov
jnp
cmpsb
xchg
out
inc
pop
jno
mov
scas
outsl
mov
sbb
mov
in
push
sub
add
orl
clc
pop
inc
push
mov
xchg
lcall
stc
mov
jecxz
dec
out
mov
icebp
jmp
mov
mov
fcmovb
adc
pop
aas
mov
cmc
into
movsl
jo
test
sub
adc
push
ret
jge
jno
cmpsb
jo
xlat
imul
add
and
ss
mov
mov
mov
sbb
mov
lret
mov
or
jns
jns
jp
into
mov
aam
lock
pop
pop
ret
lods
lcall
inc
ljmp
cmpsb
cmp
popa
in
mov
mov
icebp
sti
imul
movsl
cltd
test
xchg
push
push
data16
push
cltd
ret
dec
fcmovu
outsb
ds
fs
aam
cmp
jmp
push
cmp
mov
mov
ret
loope
in
loope
rolb
int
pusha
int
xchg
in
fstl
inc
or
cwtl
sub
xor
mov
jne
or
add
adcb
loop
mov
sbb
and
sbb
mov
das
xor
ret
lcall
xor
jne
aas
jo
adc
pop
les
push
cmpsl
and
inc
mov
jo
cmpsb
mov
jns
fs
cwtl
pop
mov
mov
gs
int
roll
js
xchg
sbb
xchg
movsl
cmp
or
daa
movsb
pop
sbb
cmp
out
sub
ja
dec
adc
jns
pusha
cltd
mulps
xor
dec
push
sbb
pop
adc
aad
jmp
xchg
add
out
rcrb
cmpsb
pop
nop
cwtl
mov
jnp
or
add
push
push
cmp
and
cmpsl
dec
push
mov
pop
pop
xchg
xchg
add
orl
orb
or
pusha
jne
push
push
sti
sbb
in
out
jmp
popf
test
dec
mov
mov
mov
neg
dec
popa
xlat
sbb
popf
mov
jge
loopne
lds
pop
iret
mov
out
mov
in
adc
mov
icebp
pop
cmp
jl
jmp
xchg
cli
cmpsl
dec
pop
lret
xchg
rcrl
cmp
and
pop
mov
pop
es
jbe
mov
mov
push
add
sbb
fcomps
pop
jmp
scas
pusha
pushf
dec
jp
stos
cltd
xchg
icebp
imul
pusha
pop
sbbb
xchg
adc
test
ficoml
and
test
ret
ret
jb
sub
mov
dec
loopne
mov
jne
push
cmc
aas
pusha
nop
or
xchg
das
push
test
sub
cmp
xchg
mov
xchg
cmc
inc
xchg
jnp
mov
and
lret
stos
ljmp
arpl
dec
adc
in
and
int3
inc
in
imull
cmpsb
fs
cmp
out
mov
cltd
add
sbb
in
jecxz
dec
repnz
or
jbe
add
mov
mov
xchg
aas
aaa
andb
push
pop
xor
inc
fdivr
jg
xor
lock
inc
lods
movsb
rclb
mov
lock
sub
mov
cltd
fs
push
das
repnz
jnp
imul
lret
jg
adc
mov
bound
push
mov
iret
mov
sti
orb
sub
mov
repz
test
push
cld
push
sbb
test
jmp
xchg
dec
push
add
mov
xchg
xchg
pop
add
es
sub
or
and
je
inc
sbb
add
jp
loope
push
repnz
lret
stos
lds
xchg
shl
sbb
and
xchg
lods
pop
arpl
jg
and
xor
imul
xchg
cmp
test
repnz
and
stos
ds
stc
out
push
nop
mov
dec
mov
std
scas
enter
push
jbe
or
sbb
or
mov
int
dec
and
iret
subb
rcrl
mov
push
aaa
adc
lahf
andb
mov
xchg
imul
adc
pop
mov
adc
jmp
stos
aas
add
or
xchg
pop
std
mov
adc
jbe
ret
je
push
das
add
sbb
rcll
scas
xchg
gs
scas
hlt
jns
cmc
jecxz
xchg
icebp
or
dec
cmc
jg
shlb
fmuls
scas
mov
scas
push
aaa
lret
sub
mov
lret
stc
in
or
dec
aad
pop
mov
cltd
xchg
scas
fcmovb
loope
xchg
sub
push
shlb
addr16
jmp
mov
js
inc
adc
lcall
mov
clc
mov
lea
mov
cli
push
fisttps
loope
xchg
mov
dec
out
lcall
xchg
inc
test
xchg
bound
les
mov
mov
pop
mov
les
lock
lret
xchg
iret
neg
inc
andl
mov
stc
xor
jge
leave
hlt
insl
mov
aam
pop
xlat
push
cmc
mov
pop
jp
nop
and
mov
out
inc
out
add
aam
push
jmp
hlt
sbb
mov
lret
out
xor
shlb
sar
loope
add
mov
pop
test
jecxz
aad
mov
mov
movsb
dec
fldl
pop
decl
jecxz
xchg
xchg
cmc
cmovle
inc
cs
adc
xchg
outsb
pop
cmp
dec
shrl
movsl
add
adc
filds
cmc
faddl
repz
stos
dec
sub
fistl
scas
call
jge
pop
lret
mov
js
add
repnz
aaa
sub
adc
rclb
jns
jb
add
mov
fimuls
add
mov
xor
ds
xor
jno
add
jmp
dec
and
into
je
aaa
mov
jmp
jmp
loop
fs
adc
fwait
jecxz
movsl
lret
inc
xlat
shl
sub
loope
push
cltd
mov
shlb
add
scas
sub
andnps
add
cli
mov
push
mov
cmc
sub
cmp
in
mov
aaa
inc
in
dec
out
cmpb
dec
add
inc
loope
icebp
jns
incb
xor
pop
jp
subl
cmc
adc
rclb
pop
mov
fs
push
dec
xor
sbb
pop
mov
stc
loopne
ja
jb
js
data16
push
iret
jns,pn
mov
sbb
cli
pop
push
imul
mov
cs
and
cwtl
inc
add
fs
mov
sub
lock
pop
xlat
enter
cmp
stc
pop
js
sbb
mov
into
xor
mov
jo
jecxz
inc
icebp
or
dec
cltd
mov
xchg
mov
dec
ficompl
loope
fld
sbb
push
ds
ss
inc
rcrl
inc
jge
sahf
xchg
shr
inc
pusha
ja
sbb
mov
xlat
mov
lods
js
mov
push
pop
int3
dec
inc
sub
lret
jp
aas
sbbl
shrl
jae
shll
imul
mov
inc
cld
cmp
jae
mov
xlat
jno
cmc
cmp
stc
ljmp
stc
fst
stos
out
rcrb
adc
cmp
pop
fidivrl
jecxz
xor
mov
or
cmp
outsb
mov
add
pop
mov
mov
iret
sub
jg
mov
jge
movsl
pop
sbb
mov
mov
jne
in
addl
stc
dec
fsub
push
in
push
pop
xchg
mov
sub
and
hlt
mov
movsb
rcr
adc
syscall
xchg
cli
mov
sbb
ret
push
dec
rep
sub
xor
iret
fs
mov
mov
sub
ret
dec
mov
mov
push
push
sub
outsl
loope
cmp
icebp
push
fistpll
shlb
and
mov
ret
js
aas
nop
out
pop
mov
lret
and
dec
mov
xchg
shlb
into
jle
out
jecxz
lds
lret
in
sub
and
pmaxsw
and
jecxz
addl
jne
jecxz
cmp
cmpsl
inc
movsl
mov
sbb
and
outsb
insl
addr16
js
add
sbb
aad
dec
imul
shll
mov
fcoml
jmp
mov
dec
add
aas
xchg
add
xchg
xchg
cmpsb
and
in
xchg
cmp
push
in
ficoml
js
adc
lea
add
fmull
sbb
sarl
arpl
push
shll
in
addl
in
add
sbb
xor
dec
pop
data16
js
rolb
js
pusha
sub
push
enter
insl
mov
negb
lods
adc
add
mov
pop
push
and
adc
and
pusha
ja
in
cmc
out
jmp
popf
lcall
adc
sti
lret
repz
movsb
decl
mov
adc
in
and
pop
out
cmp
ja
lock
mov
aad
inc
jl
mov
xchg
mov
mov
sub
xor
dec
jg
hlt
xchg
fistl
cmp
loope
pusha
les
cmp
push
xchg
sub
inc
add
cmp
xlat
sub
sub
test
aaa
cmp
xchg
int
loope
xor
or
mov
lea
sti
add
add
jl
aaa
push
sbb
cmp
sub
add
lret
mov
dec
mov
incl
mov
jle
cmp
dec
not
adc
inc
mov
stc
loope
sbb
xor
or
hlt
mov
jb
push
adc
mov
nop
mov
stos
sbb
jmp
movsb
loope
das
xchg
mov
and
data16
data16
movsl
mov
movsl
and
scas
jg
insl
rcr
call
xchg
jb
mov
or
add
and
mov
xor
pop
fisttps
jnp
xor
adc
or
pop
ja
and
push
pop
mov
inc
frstor
fisubl
mov
mov
jmp
push
mov
test
cli
xchg
ljmp
dec
loopne
test
data16
push
lea
cwtl
enter
cld
add
cwtl
cmc
lock
loop
popf
pop
push
test
mov
jnp
ja
shr
stos
clc
dec
inc
rorb
mov
add
sbb
xor
inc
jnp
icebp
jg
xor
sbb
jl
xor
mov
mov
aas
mov
aas
mov
ds
mov
out
push
and
mov
pop
push
sbb
scas
and
test
cmc
lret
ss
push
add
xchg
pop
test
push
ljmp
cmpsb
and
xor
jne
out
pop
adcb
daa
jno
lods
lock
jle
int
mov
fistps
mov
test
int
dec
sti
sbb
shlb
push
push
xchg
mov
fistpl
out
sbb
cld
shlb
mov
mov
in
stc
jecxz
cmp
dec
push
pop
sbb
add
fwait
add
ljmp
inc
pop
lods
ret
add
pop
mov
aam
or
loopne
mov
ja
push
xor
mov
pop
dec
icebp
out
cmpl
cmp
out
sbb
lods
mov
sti
or
xchg
pop
or
dec
into
or
add
stc
mov
insl
fucomip
fs
stos
xchg
ss
aam
les
imul
stos
lret
movsl
lods
xchg
dec
add
sbb
or
push
push
cs
aam
std
hlt
jg
out
int
xor
xchg
xor
andb
mov
cld
ret
mov
inc
dec
adc
mov
mov
in
lods
stos
pop
hlt
sqrtps
mov
or
lods
daa
pop
enter
lret
mov
sbb
mov
adc
mov
pop
imul
jp
dec
push
xchg
rorb
and
out
enter
out
lods
mov
pop
ret
mov
rcrb
mov
aad
pop
mov
cmp
pushf
mov
lock
out
sbb
cltd
jecxz
xchg
mov
jmp
repnz
adc
fnclex
decl
sahf
jo
sti
and
xchg
std
in
jo
jmp
out
shl
in
jns
and
xchg
aad
out
jns
and
xchg
jmp
into
in
cld
lods
in
decl
in
shrb
decb
aam
loop
aad
shrl
cmpsb
sbb
es
pop
scas
xor
daa
lahf
jp
add
or
icebp
sub
jnp
sbb
movsb
mov
dec
or
icebp
ljmp
test
sub
xchg
sub
jbe
sbb
clc
jnp
dec
dec
dec
mov
xchg
addb
mov
jg
inc
ja
arpl
xchg
aad
out
int3
mov
fisubs
cmpb
pop
stos
and
ficomps
icebp
xchg
cmp
cmpsb
leave
iret
inc
add
rolb
jmp
cmp
push
pop
fistl
out
mov
mov
cmpsl
loope
push
push
jmp
mov
cli
pusha
inc
int3
add
and
sbb
cli
push
add
mov
lcall
decl
adc
push
ljmp
pop
pop
jmp
stc
adc
mov
mov
jae
std
imul
cld
ljmp
aaa
lds
lods
mov
in
cmp
outsl
mov
test
stc
dec
mov
es
test
movq
xor
and
mov
pusha
xlat
int3
add
cmc
data16
rcr
push
gs
push
push
mov
jne
add
lods
fwait
pop
mov
mov
dec
cmc
sbb
pop
dec
cmpsb
mov
aaa
cltd
adc
cmp
mov
mov
jne
in
xchg
add
adc
cld
dec
xchg
mov
js
ds
xorl
push
leave
jp
mov
out
push
jb
add
movsb
test
cmp
repnz
mov
add
xlat
push
fstp
xor
mov
mov
lret
fdivl
aas
dec
mov
sbb
sbb
mov
pop
add
lret
jge
lret
orl
lods
in
in
outsb
pop
in
test
xor
aam
and
and
std
push
lret
mov
jb
ss
pop
call
dec
mov
in
dec
xor
dec
ret
jmp
or
add
out
stc
js
push
mov
mov
outsl
in
ret
xor
cmpsl
push
cli
mov
mov
cmc
xchg
or
in
scas
mov
mov
std
mov
push
lock
cld
mov
insl
enter
dec
arpl
cld
jmp
punpcklwd
data16
das
mov
cmp
lods
adc
mov
pop
lahf
dec
sbb
inc
jmp
movsl
into
popa
cmpsl
xor
fsubs
das
ret
mov
adc
icebp
and
jle
les
ficoml
and
cmpsl
out
or
cmp
jno
fstpt
ss
inc
dec
addr16
loop
mov
mov
fidivs
push
scas
lds
movsb
clc
cwtl
and
mov
in
into
dec
pop
jl
xchg
lret
add
cmpsb
adc
mov
in
test
lret
lea
push
cmpl
push
add
shll
dec
jnp
dec
add
inc
fs
xchg
movsb
lock
in
mov
pop
push
mov
lock
mov
icebp
inc
or
cmpsb
mov
int3
pop
decb
das
std
loop
sbb
inc
dec
or
xlat
data16
outsl
adc
adc
cmpsb
inc
in
mov
and
pop
mov
or
mov
xor
mov
mov
addb
out
sarl
mov
testb
and
mov
xchg
push
outsb
in
js
repz
jb
stc
mov
sahf
xor
xchg
cmp
or
cmc
sti
adc
mull
mov
xor
negl
fld
xchg
cmpsb
xor
xlat
mov
mov
imull
jmp
stos
test
dec
arpl
repz
lock
divl
out
pop
sbb
lret
cmp
cmc
adc
int3
sbb
add
adc
dec
mov
push
jl
xchg
or
fstpl
lods
xchg
loope
test
sub
outsb
data16
js
push
js
jge
mov
enter
jl
imul
in
pop
mov
jmp
stos
sub
mov
sub
dec
in
stc
icebp
jnp
push
ds
dec
aam
popf
shl
arpl
arpl
hlt
popf
sub
pop
add
cmp
pop
daa
aad
and
and
dec
cltd
enter
cmpsb
and
mov
push
lods
adcb
in
push
xchg
lock
in
push
cwtl
dec
pop
out
push
sub
popf
xchg
mov
mov
stos
incl
mov
aad
lds
lock
out
orb
add
imul
jmp
popf
mov
mov
push
add
lods
sub
test
movsl
lods
sbb
fs
and
call
lods
rcl
lea
xor
mov
push
mov
ss
aas
inc
fs
or
in
lret
sbb
inc
add
sub
dec
lods
adc
mov
mov
loop
popf
mov
loop
fcompl
mov
inc
cwtl
cmp
inc
xor
pusha
jae
cld
sbbl
sub
iret
mov
mov
dec
mov
roll
in
daa
jmp
push
popa
inc
add
cmp
pop
out
mov
dec
in
outsl
and
pop
sbb
add
icebp
mov
bound
dec
mov
mov
pusha
ds
das
sub
in
mov
xchg
mov
clc
jne
lahf
and
es
mov
adc
mov
pusha
dec
test
inc
inc
pop
lret
fistpll
cmc
mov
mov
or
lock
aad
pop
dec
vorps
cmp
cmp
fstl
pop
ja
leave
movsb
cmpsl
pop
or
loopne
hlt
roll
mov
xchg
push
repnz
pop
ljmp
int
and
pushf
in
xor
popf
mov
and
add
pmulhw
jle
pop
push
mov
dec
add
popf
stos
test
test
ret
add
mov
call
jns
cmp
pop
jg
fwait
and
and
lock
mov
push
sub
out
cwtl
pop
jecxz
repnz
mov
push
mov
jbe
testl
addr16
jmp
inc
mov
mov
pushf
cmpsl
jmp
cltd
add
cmpsb
xor
adc
popa
or
lock
imul
out
xorb
and
mov
into
in
jmp
cmp
sub
pop
loopne
sti
out
into
pop
sub
and
mov
fdivp
out
divb
and
dec
jmp
test
cmpsb
sub
mov
push
mov
mov
ret
adc
xor
mov
sti
lret
dec
add
icebp
js
sbb
mov
pop
sub
sti
lea
push
xor
cmp
lods
test
mov
ds
inc
arpl
in
pop
xchg
movsb
lcall
gs
loopne
jnp
or
and
mov
aad
or
jb
movsl
lahf
ret
hlt
cmp
sarb
sti
mov
idivb
mov
pop
cld
test
mov
roll
jp
bnd
add
sbb
dec
mov
and
das
sti
jbe
adc
xchg
adc
test
cmp
sub
out
push
mov
aad
mov
ret
xchg
jge
mov
push
jne
xchg
clc
out
clc
daa
sbb
shl
jl
inc
popa
cmpsb
inc
mov
sar
cmp
jl
and
or
and
jbe
outsl
clc
movsl
dec
xlat
imul
std
data16
ret
insb
xchg
fs
push
or
pop
stos
fsubrl
dec
jnp
addr16
mov
or
xchg
lea
xor
xor
les
mov
int
inc
and
lock
stc
bound
enter
rorl
hlt
test
mov
subb
fs
andl
xchg
xor
les
pop
pushl
mov
or
sti
enter
sbb
add
sub
btc
in
ret
mov
xor
cli
imul
dec
loope
mov
movsl
push
rorl
int
or
test
jmp
jns
dec
sarl
sbbl
int3
add
xchg
and
into
xor
or
cmpl
cmp
addb
sub
cmp
sub
int3
in
cmp
push
xlat
jecxz
xchg
mov
pop
movsl
jne
mov
and
popf
adc
push
loop
cmp
aas
sbb
add
inc
cmp
je
outsb
dec
pop
xchg
icebp
cld
gs
mov
dec
push
xchg
loope
lds
loope
pop
cmp
dec
push
xchg
add
sub
out
ret
movsb
enter
xchg
orl
xchg
sbb
outsl
loopne
inc
cmp
mov
cmc
push
cs
jb
mov
sbbl
mov
mov
insb
mov
lods
push
lock
xor
divl
add
test
mov
or
scas
jns
sbb
lahf
shlb
dec
clc
aas
add
cltd
sti
icebp
push
inc
in
sub
xchg
push
mov
insb
out
jmp
pop
aas
popl
ds
or
gs
mov
fistps
or
enter
into
or
mov
cmpsl
mov
or
pop
jl
fidivrs
xchg
and
mov
add
push
jge
in
test
dec
std
in
out
jecxz
sbb
jmp
jnp
or
cmpsl
icebp
sbb
sbb
cmpsl
out
and
dec
out
dec
add
dec
data16
jl
cld
xor
jle
in
dec
jecxz
fsub
fnstcw
ret
sbb
and
dec
xor
loope
or
pop
insl
jb
icebp
and
in
xchg
or
inc
popa
xor
std
xor
stos
lock
inc
dec
cmc
test
sbb
jl
insb
xchg
mov
dec
mov
icebp
into
mov
ror
jmp
jg
stc
stc
orb
std
paddsb
push
push
outsl
and
add
jae
les
jmp
mov
mov
scas
push
ret
mov
xchg
mov
into
lds
mov
xchg
push
insb
sahf
fst
mov
fs
push
into
test
jmp
mov
adc
xchg
rorb
ss
sub
aam
sbb
cmc
dec
dec
loopne
xchg
repz
enter
jae
push
in
sub
pop
xor
sbb
loope
jnp
add
inc
lret
add
lods
pop
loop
push
popa
or
jo
les
pushf
push
pop
fnsave
push
mov
push
jo
ret
fsubrl
mov
popf
ja
lret
mov
cmpsb
js
jb
push
in
scas
pushw
mull
dec
fistps
dec
mov
shlb
pop
orb
add
dec
mov
dec
sbb
movsb
fstpt
es
sbb
in
push
shl
dec
sbb
loope
loope
sub
hlt
cld
xor
lcall
inc
xchg
xor
xchg
jnp
loopne
dec
out
ficomps
mov
aas
pop
cmpsl
pop
imul
lahf
stc
xchg
sbb
movsb
jo
aam
sub
xor
pop
xchg
int
cld
sbb
enter
stc
pop
push
loop
aad
ljmp
or
in
jmp
mov
inc
enter
rorb
stc
ja
adc
cld
data16
cmpsb
popa
fs
mov
ljmp
popf
loop
sub
ret
jecxz
in
cli
pop
jl
imul
rol
leave
mov
pushf
jmp
inc
cli
imull
int3
mov
in
mov
fisttpll
sub
addr16
daa
shll
mov
and
call
push
xchg
sti
es
ret
mov
push
inc
iret
dec
xorl
sub
fwait
sub
movsb
push
adc
sahf
shlb
jno
jns
push
shlb
dec
add
xor
mov
in
lock
das
stos
mov
push
fsub
ja
cli
jge
or
nop
jne
popf
into
into
xor
popa
push
jnp
xor
inc
data16
and
push
or
inc
cmp
mov
fldl
lods
aaa
jne
cltd
fistpll
add
sar
ficoml
cld
mov
inc
jns
push
idiv
xor
sidtl
or
add
int
icebp
adc
sti
dec
ds
jl
mov
mov
shl
int
sbb
rolb
xchg
imul
fs
js
loop
sarb
aad
xor
mov
mov
ds
sub
dec
in
insl
xchg
inc
xchg
mov
ds
or
lea
stos
mov
stc
pop
test
stc
imul
shrb
inc
test
je
inc
sbb
popf
dec
xor
xorl
push
mov
push
xchg
sub
mov
dec
or
lret
adc
dec
out
hlt
adc
adc
push
and
mov
ljmp
pop
das
jbe
mov
push
add
iret
mov
popa
ja
das
out
jecxz,pn
pop
cltd
lea
push
jl
test
cmp
out
nop
sub
stos
test
mov
add
fistl
pusha
out
rclb
jl
add
fs
xorl
or
adc
mov
lea
aad
xchg
and
mov
lock
pop
stc
mov
imul
in
test
mov
mov
int3
lods
popa
push
das
inc
int3
in
push
sahf
das
je
or
outsl
mov
imul
push
das
xchg
clc
out
xor
std
inc
decl
jmp
addb
outsl
and
js
gs
ret
cmpsb
test
nop
pushf
mov
outsb
int
icebp
sub
xchg
iret
mov
sti
or
mov
mov
sub
ret
in
xchg
sti
xchg
aas
mov
mov
jne
add
fidivl
mov
enter
cmp
dec
clc
xchg
and
cmp
pop
mov
or
inc
enter
lds
mov
repnz
push
add
das
sahf
lods
shlb
addb
and
popf
fs
cwtl
sbb
add
push
jecxz
add
dec
decb
push
sub
adc
cmpsl
and
pop
sbb
push
ret
sub
inc
out
addr16
sbb
sub
mov
push
adc
dec
sbb
jl
pop
icebp
std
or
cmp
insl
rorl
add
xchg
cld
scas
orl
cmp
sub
mov
jl
in
or
loope
incb
sub
inc
sub
ret
clc
jecxz
jno
xchg
mov
jge
jae
push
push
cld
shlb
test
mov
mov
or
or
stos
mov
loopne
push
dec
les
sub
pop
int
lock
shl
lock
imul
loope
aam
push
sbb
cmp
into
mov
mov
add
cmc
mov
aam
stc
dec
pusha
out
push
leave
icebp
jbe
add
or
push
mov
out
and
adc
push
movsl
dec
push
das
dec
jp
mov
cmp
xchg
mov
pop
pslld
imul
inc
add
into
out
jne
xchg
mov
jns
xchg
push
neg
push
arpl
jnp
lret
scas
jge
insb
or
out
lret
lods
sbb
int
sub
incl
and
xchg
inc
adc
in
dec
movsb
shrb
aas
dec
shl
push
jae
popa
mull
cmp
lods
push
fs
jnp
sub
js
add
fmulp
add
mov
movsl
aad
mov
fcompl
inc
or
ss
call
adcl
mov
dec
lret
mov
cmp
adc
dec
and
out
les
pop
lock
mov
pop
int
les
jne
fwait
cwtl
dec
cmp
roll
std
call
inc
sub
mov
mov
in
mov
mov
cmpsb
xor
sub
push
mov
sti
movsl
paddw
ret
push
xchg
fs
pop
add
push
jnp
jne
mul
push
cmp
test
cmpsl
mov
add
pop
cwtl
mov
ja
pop
inc
jno
lcall
imul
sub
icebp
mov
cmp
stos
imull
les
cmc
jbe
int3
sub
xor
pop
mov
fxch
gs
jns
aad
mov
es
enter
pop
jp
mov
clc
and
inc
pushf
inc
sbb
mov
add
mov
cmpsb
adc
mov
jbe
xor
in
lret
push
xor
xor
sbb
daa
dec
test
mov
pop
pop
daa
sub
arpl
cmp
inc
jl
cmc
cmp
and
dec
outsb
lods
outsl
xor
ffreep
pop
pop
stc
add
fs
stc
xor
sbb
xor
mov
sar
sbb
movsl
std
mov
cli
loope
cld
add
roll
fs
cwtl
lock
push
int
arpl
in
aad
adc
fisubs
icebp
out
mov
out
addb
jp
imul
sarl
pop
fidivrl
mov
push
mov
dec
or
push
addr16
cmp
cmpb
xor
stos
pop
mov
add
mov
out
xorl
fs
dec
movsl
xchg
fcmovnb
mov
in
dec
sbb
pop
sbb
mov
jae
imul
iret
js
dec
loop
push
in
dec
popa
outsb
mov
idivl
mov
insl
mov
test
mov
xor
xor
in
test
xchg
int3
cltd
repnz
mov
cli
or
push
and
lret
mov
jno
insb
dec
add
int
scas
inc
sbb
xchg
inc
outsb
inc
imul
loopne
stos
jns
sbbl
pop
dec
adc
rcrl
and
xor
and
cmp
icebp
or
in
mov
popa
dec
mov
add
iret
loope
dec
leave
stc
mov
fcoml
mov
lods
jmp
push
sub
jecxz
fs
and
push
jns
inc
push
pop
sub
loopne
and
loopne
add
cmc
js
mov
cltd
push
add
jecxz
loop
lret
xor
xor
jg
movsl
sbb
and
dec
leave
and
jns
jno
aad
dec
loop
loope
movsl
icebp
and
mov
les
inc
inc
out
into
push
rorl
lods
les
push
sub
add
cltd
fadd
push
xchg
mov
ret
cmp
push
les
dec
sub
adc
jne
or
or
gs
jns
add
mov
and
xchg
add
inc
in
mov
mov
add
cltd
clc
repz
xor
stos
sbb
jo
jp
xchg
pop
gs
xchg
nop
adc
jno
xlat
mov
decb
stos
lret
in
cmp
jnp
mov
std
and
stos
call
mov
add
fisubl
mov
loope
mov
mov
aam
es
les
jno
loope
mov
loopne
arpl
std
sbb
xor
xor
lock
push
and
inc
push
and
in
fnstenv
lahf
test
lahf
add
xor
add
cmp
insl
fwait
xchg
inc
push
clc
sbb
loopne
xor
rclb
popa
dec
js
je
insl
mov
adc
ret
add
cs
xchg
shrl
xchg
enter
mov
lds
scas
out
mov
push
jae
cwtl
mov
stos
rorb
adc
jge
or
jb
jbe
fs
std
adc
outsl
sub
inc
fadds
xchg
out
cmc
ja
ffree
inc
clc
orl
and
shr
add
jecxz
ret
mov
outsl
sti
jnp
push
add
in
push
fcmovne
jo
sbb
aad
mov
jb
sahf
pcmpeqb
add
sub
arpl
or
cmp
add
jne
int3
add
or
pop
dec
dec
es
xlat
ret
fstpt
push
stos
jnp
mov
cmc
mov
js
int3
jecxz
add
repz
out
jne
cmpsb
aaa
adc
add
aad
add
sti
push
out
ljmp
aam
cmp
sti
imull
inc
push
aas
cmc
xchg
or
and
aas
and
hlt
out
rsqrtps
sti
jmp
or
xchg
jp
xchg
rcll
mov
mov
jmp
rcr
gs
fdivrp
frstor
dec
push
aam
lret
out
cmp
sti
jo
ss
in
imulb
mov
mov
sub
test
data16
popf
shll
jmp
addr16
test
xchg
push
imul
and
or
push
aas
sub
das
movsl
pusha
repz
jo
xor
clc
xor
jle
jno
popf
xchg
xchg
es
inc
sbb
div
popf
sarl
mov
xchg
lea
inc
inc
testb
push
sahf
shll
pop
fisttps
in
icebp
imul
in
jge
cmpsb
addr16
mulb
mov
cmpsl
scas
or
push
mov
inc
icebp
fsubrs
pop
lea
mov
dec
stos
cmp
int3
add
cmp
ret
add
xor
leave
sub
dec
xor
cwtl
xchg
xor
loope
inc
adc
rcll
dec
add
cmp
into
sub
mov
test
std
add
sarl
adc
jecxz
fwait
mov
dec
adc
xor
aas
jge
push
movb
cmp
lret
icebp
push
mov
cmp
mov
mov
test
and
idiv
dec
mov
mov
mov
adc
jg
xchg
into
notb
push
imul
jbe
shr
add
leave
mov
and
push
lods
pop
inc
std
in
outsb
cmp
addl
add
insl
cmpsb
xchg
int3
sbb
insb
add
xchg
inc
and
cs
in
sbb
lret
adc
popf
sahf
push
mov
lahf
jne
jecxz
call
sti
dec
sti
std
mov
data16
fmuls
popa
call
out
mov
inc
insl
xor
mov
and
call
cmpsb
idivl
icebp
in
cwtl
sbb
mov
popf
cmp
xchg
adc
cld
mov
pop
adc
add
aam
jmp
dec
movsb
cmpsb
mov
loop
in
shll
ja
sbb
mov
add
daa
mov
and
add
jecxz
mov
aad
iret
lret
cli
fistpll
rol
movsb
mov
mull
adc
stc
and
fstps
push
fnstsw
mov
mov
mov
pop
mov
mov
xchg
out
jae
pop
add
cli
push
ss
das
mov
sub
and
xchg
jle
inc
pop
jno
mov
xor
std
add
push
jmp
jo
add
stos
cld
dec
imul
pop
imul
rolb
dec
jmp
hlt
mull
or
pop
lods
sbb
xchg
mov
gs
out
cmp
mov
dec
jo
in
lcall
mov
in
aaa
idiv
loopne
sub
mov
shll
std
js
pusha
pop
mov
push
fdivrs
incb
xchg
jle
ds
pop
aam
push
mov
aas
mov
imul
dec
mov
sub
sbb
cmpsb
aaa
xchg
cmpb
mov
xlat
inc
xor
mov
push
les
cld
test
sub
jb
and
insl
in
stos
dec
in
mov
out
out
mov
jns
int
aad
in
mov
lock
inc
push
test
out
add
xchg
aas
insl
add
and
in
cli
movsb
xchg
test
mov
xchg
arpl
rorl
jmp
lahf
je
jnp
mov
mov
pmaxub
dec
insb
jmp
sub
gs
call
add
mov
andl
mov
and
push
fstpt
sub
jp
daa
icebp
std
out
cltd
pop
or
jmp
mov
shll
sbb
fildll
pop
insb
loope
outsb
push
jb
add
popa
lret
dec
xchg
stc
mov
iret
mov
jp
repz
call
movsb
loope
mov
ret
dec
outsl
inc
nop
test
cwtl
lods
icebp
mov
mov
nop
in
lods
pop
popa
sub
repnz
popf
add
loope
or
lock
mov
adc
inc
cmp
es
cmpsb
stos
dec
mov
aad
adc
lds
push
jge
inc
jle
testb
xor
repz
dec
and
popf
lock
push
jb
adc
lds
push
pop
fistpll
mov
xchg
jmp
or
pop
aaa
insb
lods
lcall
stc
or
xchg
loopne
xchg
sarb
data16
popf
lret
rol
das
outsl
fsub
push
test
stos
jmp
or
stc
jle
andb
mov
sub
imul
iretw
mov
adc
cwtl
je
shrb
push
int3
lods
iret
or
push
xor
mov
subb
pop
shl
adc
sub
in
jl
jnp
fistpl
dec
cmpb
movsl
lea
mov
maskmovq
negl
dec
sbb
cwtl
in
mov
leave
pop
or
rorl
scas
adc
clc
cmp
mov
fs
movsb
cmp
sarb
adc
negl
stos
popa
inc
cld
fisubrs
ja
je
ss
cmp
mov
xchg
js
repnz
adc
sub
bndldx
pop
pop
out
in
std
shll
ja
dec
orl
ror
in
push
mov
ffreep
sti
sbb
and
enter
popf
dec
dec
inc
mov
loope
lret
in
clc
sub
adc
dec
jns
cwtl
or
imull
loopne
adc
add
shlb
pop
add
aam
mov
fwait
push
out
clc
pop
iret
test
rcrl
sub
out
pusha
jae
in
rorl
sahf
cmpb
cmp
in
cmc
sarl
fnstsw
inc
imul
mov
ret
movsl
pop
mov
or
lret
cmp
mov
outsb
fisubrl
jge
xor
stc
sub
mov
iret
jnp
pop
shlb
in
popl
jge
xchg
les
mov
cmp
imul
ss
cmpsl
pop
fnsave
faddl
adc
and
gs
stc
add
xor
push
loop
adc
jne
lret
xchg
cmp
jb
jp
mov
xchg
xor
dec
clc
aad
or
mov
mov
dec
mov
and
pop
rcrb
cmp
mov
push
daa
fiaddl
push
int
ss
sub
in
or
push
cld
inc
mov
movb
sti
add
lret
scas
or
jnp
andb
call
sub
cmp
cltd
pop
add
imul
dec
dec
push
mov
orb
testl
cmc
fbld
popf
rolb
jle
xchg
adc
cltd
shll
insb
mov
xor
test
mov
sarb
cltd
ljmp
test
push
xchg
or
sub
xchg
es
cltd
xchg
popf
stos
adcl
loope
mov
mov
xor
adc
insb
add
dec
mov
movsb
shll
mov
or
ret
cmpl
mov
idiv
push
popa
pop
jne
sbb
adc
imull
mov
cmpsl
add
enter
mov
dec
test
sbbl
xchg
mov
inc
clc
or
xchg
mov
notb
add
cmp
pusha
clc
fidivs
inc
fmull
arpl
dec
add
in
jg
arpl
ds
lret
push
js
dec
pop
dec
pushf
daa
add
push
fidivl
xor
inc
testl
ret
cmc
xchg
inc
sub
clc
sub
dec
jge
loopne
xor
ds
out
xlat
imul
add
shrb
in
jnp
mov
cmpsl
fbld
mov
sub
out
nop
fimull
sbb
stc
js
xchg
xorl
lods
mov
mov
dec
ja
cmpsl
inc
ds
clc
decb
dec
js
fldt
sbb
and
mov
mov
in
iret
and
test
mov
jo
arpl
iret
por
xchg
imul
nop
cmp
push
mov
icebp
clc
out
rorb
out
fsubl
and
xor
gs
push
cmpsb
inc
push
arpl
pop
mov
cmpsl
movsl
popf
in
rcr
sbb
cmp
mov
iret
dec
es
fcmovnbe
lock
lret
pop
stc
add
lret
cmp
mov
mov
rcrl
sbb
mov
pop
mov
and
es
or
dec
addr16
pop
inc
and
mov
pop
push
clc
push
cmpsb
jl
les
hlt
lahf
movsl
ret
mov
xor
stos
fcomip
push
sarb
sub
pop
popa
out
xorl
iret
stos
scas
xor
sti
pop
dec
jmp
imul
les
enter
or
jo
or
js
xchg
push
adc
addr16
test
mov
gs
leave
out
ficomps
mov
and
mov
jo
push
cld
inc
mov
sub
jne
popa
cmp
push
pop
add
jbe
xor
mov
mov
loopne
and
rcrb
jge
jo
fs
in
rol
bound
push
inc
ds
sti
push
incb
pop
neg
lock
jnp
clc
xchg
or
cmp
xchg
jns
fiaddl
scas
addr16
dec
mov
mov
mov
ret
push
jo
pop
add
pop
inc
xchg
dec
mov
ficoms
sar
add
sbb
icebp
mov
roll
or
je
inc
int
lds
xor
hlt
add
aas
adc
test
push
cltd
jl
sbb
lret
inc
sbb
push
stc
je
out
lret
in
jb
dec
popf
fdivrs
pop
pop
xchg
add
hlt
imul
loope
cmpsl
inc
jp
and
mov
push
daa
xor
adc
mov
jb
aaa
and
or
stos
repnz
fwait
inc
stc
sub
stos
lret
push
push
and
push
arpl
mov
pop
scas
scas
dec
scas
aad
push
push
rol
fstl
and
into
xchg
enter
stos
cmpsb
in
inc
cli
add
test
in
fistl
aad
xor
pop
rorl
loope
cmp
xor
enter
in
frstpm(287
cmp
sbb
stos
sti
lea
push
push
adc
in
adc
lcall
jo
pop
pop
mov
or
add
fwait
sbb
xchg
loopne
dec
cld
pxor
aad
or
sti
popf
pop
das
scas
stos
xchg
jmp
sub
aaa
decb
jnp
sbb
push
inc
es
test
out
and
ret
hlt
sti
iret
mov
cltd
lcall
pushl
idivb
push
xorb
add
mov
mov
jmp
cld
cmp
add
sbb
adc
push
shll
xor
sbb
jge
xchg
sub
in
popf
scas
in
in
mov
inc
jp
in
sub
push
bound
es
add
stc
loop
fwait
inc
add
inc
jmp
push
xor
mov
pop
loope
dec
add
std
into
sti
push
fnstenv
push
out
xor
pop
jb,pt
push
push
outsb
mov
inc
int
mov
ret
add
xor
fldt
sti
cltd
pop
roll
lods
int
mov
icebp
xchg
hlt
insb
popa
mov
adc
inc
shrb
cmp
mull
inc
jmp
cmpsb
stos
mov
ret
pop
pop
cmc
fbld
clc
in
cmp
popf
in
mov
adc
cmp
mov
in
sbb
aad
loope
cmp
js
xchg
insb
mov
leave
in
xchg
pop
cwtl
pop
pop
mov
dec
sbb
mov
xchg
dec
stc
add
roll
pusha
movsl
xchg
ljmp
stos
cmp
pop
ja
xchg
xchg
cli
ret
out
or
dec
dec
dec
ss
adc
dec
outsl
jae
rorb
sar
inc
cmpsl
adc
into
pop
outsb
ret
shl
pop
out
ss
std
pop
mov
lea
push
jno
cmp
outsb
lcall
shl
jl,pt
inc
sti
jbe
ret
jbe
sub
push
jb
in
lds
ds
pushf
in
sub
dec
rorl
sbb
mov
in
fwait
jae
roll
ss
sahf
daa
in
add
ds
aad
lret
or
push
jne
or
sbb
mov
movsb
mov
dec
cmp
mov
and
jns
fadds
mov
push
and
repz
std
shll
jnp
mov
cmc
icebp
es
cmp
lret
push
bound
xlat
fyl2x
ljmp
test
mov
dec
sbb
or
dec
arpl
repnz
pusha
adc
or
fdivrs
fistps
mov
popa
in
pop
lock
and
jb
mov
and
push
ja
out
sbb
ret
mov
push
cmpl
jge
sub
cld
cmp
pop
or
out
xor
mov
xchg
addr16
cmp
rorb
mov
lods
dec
add
mov
jle
fnstenv
imul
push
in
cmp
or
neg
cli
fs
bnd
jns
aad
push
or
test
jge
inc
ds
cmp
data16
add
dec
stos
sub
stos
mov
dec
and
adc
adc
les
push
dec
mov
pop
lahf
hlt
cmpsl
fsts
add
mov
mov
push
hlt
sbbb
jp
lahf
repz
stc
scas
test
dec
xor
lahf
dec
dec
ret
jecxz
jo
jnp
ss
or
imul
aaa
and
popf
fsubrp
movsl
outsb
loope
outsb
ret
sub
loopne
aaa
push
das
xor
ret
jle
fs
jno
cltd
and
stc
loope
dec
pop
pop
test
mov
mov
js
mov
jle
dec
in
call
pop
push
cmp
cltd
js
add
and
sub
lcall
and
mov
fdivs
mov
push
add
clc
sub
dec
xchg
in
sbb
cwtl
sub
lock
aaa
adc
ljmp
mov
and
iret
push
xchg
xlat
push
insb
hlt
sub
inc
mov
mov
dec
or
xchg
shlb
shll
clc
pop
pop
orl
ret
iret
leave
test
stos
xchg
rcrb
jg
in
imul
mov
ja
mov
mov
ss
mov
nopl
pop
mov
and
mov
xchg
push
sub
inc
inc
addr16
and
popf
or
lds
insl
push
xor
aas
add
enter
lods
or
andl
push
or
decl
popa
fsubl
movsl
jmp
data16
in
jns
mov
pushf
adc
mov
xor
cs
mov
push
adc
ficompl
pop
inc
xchg
lock
mov
std
stc
lret
xchg
sbb
dec
test
fistpl
js
aaa
movsb
adc
cs
outsl
jl
xor
cmc
ljmp
push
mov
lahf
add
jmp
cld
mov
jg
idivl
bound
jmp
jl
push
dec
movsl
in
adc
xchg
pop
movsb
fs
cld
xor
jno
cmpb
inc
xchg
mov
mov
scas
dec
fwait
adc
lods
iret
in
in
mov
call
push
and
push
cmp
jmp
lret
or
cmpsb
add
out
in
cmp
xor
pop
mov
dec
jae
fnstcw
jp
fistl
xchg
or
iret
aam
push
in
leave
ret
sub
fscale
push
adc
icebp
sti
and
mov
sbb
fucomi
popf
dec
dec
cmp
repnz
dec
lock
aas
stc
jnp
aas
pop
pusha
xchg
fsts
ds
outsb
mov
movsb
rorl
mov
mov
in
jne
adc
mov
imul
das
jmp
dec
adc
mov
pop
cmp
lods
dec
jne
ror
testb
addb
leave
push
pop
cld
pop
in
in
add
andl
aam
call
mov
xor
dec
mov
shl
in
mov
fwait
icebp
or
mov
mov
popa
jmp
adcl
xor
xchg
ds
sbb
xchg
ret
ljmp
mov
fmuls
and
lea
mov
gs
and
jl
stos
inc
movb
add
loope
lret
add
popf
sub
sbb
aaa
push
addl
in
in
shll
pop
or
and
push
add
pop
or
xchg
cmp
sub
out
mov
std
push
mov
outsl
push
sbb
int
lds
mov
rcll
adc
xchg
popa
mov
push
mov
inc
pop
dec
xchg
sub
cmp
mov
lds
add
loopne
fiaddl
adc
jno
scas
push
stos
stc
jbe
pop
inc
xchg
ret
adc
sbb
pop
sbb
mov
jne
jmp
inc
popf
sti
insb
shr
inc
out
adc
mov
stc
leave
lea
ds
mov
lret
cmp
xor
sub
rclb
sbb
sbb
xchg
dec
dec
sub
imulb
lcall
loope
xchg
push
iret
adc
cwtl
inc
ljmp
cmpsb
fwait
sarl
inc
mov
jmp
test
andb
push
enter
pop
popf
fimuls
arpl
add
lret
aad
xor
jle
add
cmp
pop
pop
stos
pushf
popa
call
inc
aas
and
repnz
mov
mov
aad
popf
pusha
jp
lods
cmp
pop
xchg
les
ret
in
or
jno
jo
orl
jb
lret
aas
xchg
push
stc
jns
mov
xchg
push
and
mov
dec
rep
or
movsl
imul
jnp
into
repnz
xor
inc
imul
das
movsl
push
sbb
dec
xor
mov
push
mov
decb
pop
outsb
sbb
neg
dec
jne
std
lret
sbb
jno
shll
xchg
jmp
stc
mov
inc
jnp
cmpsb
adc
adc
mov
testb
test
cmp
pop
mov
push
xchg
fistl
idiv
xchg
hlt
pusha
adc
mov
sub
jmp
pusha
adc
mov
xchg
push
mov
xchg
push
rclb
fcmove
mov
adc
out
imul
ret
in
jg
enter
in
push
aad
ja
pusha
pop
std
or
xchg
fs
insl
ret
sub
enter
pop
or
cli
xor
rorb
jmp
out
lock
nop
and
cmp
adc
xchg
insl
clc
cld
insb
addr16
pushf
mov
inc
out
inc
stos
aaa
mov
cmp
imull
les
xlat
stc
push
adcl
lea
xchg
push
pushf
std
xor
fwait
outsl
xchg
or
sub
lea
not
in
xchg
mov
in
sbb
add
loope
jb
lods
loope
xchg
rorl
fldl
lea
jle
icebp
cmp
lret
gs
cltd
mov
shrb
jne
loop
lods
or
in
inc
pminub
mov
icebp
add
cmp
in
dec
pop
daa
loope
inc
arpl
jnp
sub
out
nop
xchg
mov
mov
fdivrl
out
sarb
xor
stos
jp
lea
dec
or
adc
scas
cmp
ja
sub
inc
call
pop
jmp
xor
faddl
mov
idivl
je
nop
adc
jl
data16
outsb
mov
outsl
aam
jbe
loopne
rcrb
loope
loope
mov
data16
sub
loope
dec
mov
idivb
out
adc
add
mov
jae
fs
stc
push
xor
dec
loope
str
in
xor
cmp
stc
push
popa
pop
jmp
aad
push
into
jmp
aas
fsubl
lods
std
xor
jg
xchg
icebp
scas
add
mov
push
xchg
add
insl
jmp
mov
fmul
mov
insl
cmpsb
or
push
xchg
push
js
popf
lcall
scas
cmc
pop
xchg
add
or
pop
adc
movsb
outsb
lock
sub
popf
hlt
xchg
scas
mov
cltd
icebp
add
mov
pushf
mov
mov
cmc
and
scas
repz
enter
cmc
movsb
rcrb
iret
xor
mov
and
in
mov
stos
inc
fisubl
cwtl
cmp
mov
jnp
std
sub
jl
pop
xchg
mov
xchg
js
neg
insl
mov
fildll
into
fwait
push
cli
gs
dec
dec
push
adc
std
push
test
and
pop
xchg
xchg
lret
sahf
or
lret
or
or
jecxz
idiv
or
add
lds
pop
xchg
fmull
data16
adc
rcll
lea
or
jmp
mov
stos
sbb
stos
xor
mov
ret
mov
adc
arpl
xchg
mov
rclb
adc
mov
mov
sub
xor
popa
mov
mov
mov
fsubs
adc
movsl
pop
stos
pop
mov
dec
pop
mov
push
push
mov
bound
stos
loopne
imull
insl
loopne
push
ficoms
dec
xchg
adc
jne
jne
fs
inc
out
mov
or
pop
mov
adc
repz
jge
andl
xor
add
div
ret
aaa
in
out
popf
rorl
ret
mov
xchg
or
lea
stos
push
ljmp
xor
adc
outsb
stos
cmpsl
aaa
daa
test
mov
js
test
jg
jo
mov
loope
jmp
fs
pop
sarl
mov
xchg
sub
inc
adc
shrb
add
xchg
shll
add
pop
lods
lods
gs
xchg
mov
clc
bound
out
std
xchg
jle
sbb
xchg
dec
fs
mov
enter
ficoml
push
gs
sub
fs
add
std
mov
cld
push
cli
in
loope
mov
adc
jmp
adc
rcrb
mov
or
mov
jnp
mov
or
sti
rclb
dec
pusha
jl
add
out
negb
lods
sbb
test
push
ret
insl
xchg
int3
jmp
add
push
jbe
rorl
clc
mov
scas
add
push
pop
xor
fdiv
in
ljmp
cmc
addb
mov
jmp
mov
shl
xchg
xchg
or
mov
sbb
bswap
std
sti
je
imulb
sbb
ret
adc
xchg
sbb
jmp
lret
mov
out
lahf
mov
aam
out
mov
mov
popf
idiv
push
jmp
dec
popa
aad
leave
cli
ret
jp
jl
js
jne
add
rorl
push
jmp
inc
pop
mov
cmp
imul
cmp
sub
add
and
shrb
in
int
fisubrl
sbb
sub
pop
call
cmp
cmp
out
add
push
aad
mov
cli
bound
mov
jo
clc
and
mov
shrl
mov
aad
mov
xor
ljmp
js
push
jmp
std
push
sahf
push
cmp
loop
sahf
cmp
adc
xchg
pmaxub
mov
mulb
fsubr
sub
inc
mov
out
lods
ja
dec
xchg
lret
or
icebp
int3
loope
dec
clc
rcrl
repz
std
ljmp
ljmp
stos
into
imul
pusha
scas
cmc
testl
xchg
xchg
mov
shl
loopne
in
std
dec
mov
rorl
mov
pop
rcrb
sbb
add
sbb
xchg
inc
insl
cwtl
xchg
xor
das
sbb
addb
add
cmp
out
shll
iret
xchg
and
adc
movsl
xor
cmp
repnz
movsb
sbb
pop
jne
addr16
push
jle
mov
pop
fsts
sub
mov
sub
repz
scas
repz
popf
mov
in
or
mov
clc
pop
ret
repnz
aas
fcmovne
psrlq
das
push
or
push
inc
popf
adc
inc
dec
ret
sahf
lock
les
xchg
pop
inc
jbe
shl
pusha
cwtl
fpatan
mov
push
cmp
sub
shlb
mov
lahf
popa
dec
daa
sbb
arpl
js
add
jbe
pop
insl
lea
adc
mov
inc
push
xchg
aad
in
popa
mov
cld
mov
push
sti
jns
pop
in
pop
iret
jno
imul
mov
push
outsl
rcll
les
aam
mov
xlat
push
in
les
aam
in
sti
jp
inc
movsl
negl
shrl
cmpsb
shl
adc
dec
roll
cmpsl
les
les
and
fs
in
inc
mov
jmp
ss
xor
test
mov
repnz
shl
clc
sbb
push
stc
repz
jmp
scas
xor
cmp
jmp
dec
mov
popa
movsl
sbb
popa
in
push
fistpl
int3
sti
test
cld
ss
mov
sbb
cld
ret
sbb
fnstsw
dec
aam
jae
xchg
lret
push
in
cmp
adc
and
sbbb
mov
pop
mov
faddl
xor
xchg
mov
rcll
gs
loopew
cs
pop
pop
lock
jmp
jns
in
jmp
cmovno
push
in
and
push
rorl
jl
mov
jmp
or
mov
in
or
clc
cmp
insl
imul
es
dec
clc
jl
cmpsl
xchg
inc
mov
call
out
mov
mov
fdivr
mov
mov
cmc
hlt
inc
jmp
jmp
lret
inc
xor
out
loope
or
mov
and
and
in
fucomip
xorb
mov
insb
inc
xor
sub
test
in
mov
fldt
mov
mov
in
movsl
adcb
jecxz
loope
sahf
iret
jmp
into
in
in
jl
das
cld
pop
gs
in
in
mov
and
xor
test
shrl
shll
movsl
xchg
lea
xchg
icebp
cmp
nop
push
mov
in
mov
in
shl
iret
in
call
jmp
in
in
jl
inc
push
xor
jle
stos
insl
stc
testl
and
inc
push
in
in
xchg
mov
outsl
aam
cld
push
fs
cmp
nop
cltd
call
sub
stos
lods
leave
fprem
jl
in
mov
test
dec
popa
xchg
test
ret
or
nop
aam
dec
xor
cmp
loope
jle
sub
movsl
popf
cmp
scas
ja
mov
pop
mov
loope
movsb
cld
cmpsb
or
lods
jb
std
adc
in
popa
mov
xor
jmp
jp
inc
bound
mov
add
in
xchg
das
movsl
xor
lods
pop
cld
jno
xchg
jmp
xor
sbb
gs
sub
test
aam
in
in
lcall
lret
jae
sidtl
fs
mov
in
test
jmp
inc
mov
divl
push
test
shl
in
fildll
cld
pop
jmp
mov
jle
cmp
cltd
in
jmp
push
jg
out
mov
cwtl
into
sub
jmp
popa
loope
pop
in
mov
inc
fwait
mov
mov
add
lahf
xor
adc
jle
jp
leave
or
push
repnz
push
rclb
rol
xor
or
jmp
push
add
int3
pushf
stos
cwtl
lods
les
in
or
mov
fstpt
in
fistl
and
push
fistpll
jo
data16
loope
loope
lods
test
leave
pop
scas
inc
ja
in
dec
cmpsb
shll
movsl
popa
loope
test
add
lret
cs
adc
in
jnp
movsl
cltd
int3
in
popa
xchg
jmp
and
push
mov
add
fcomps
ret
inc
out
xchg
lds
pop
imul
test
in
in
test
mov
fisubs
xchg
add
loop
xchg
ret
in
fnsave
scas
or
movsl
cld
scas
aas
int3
sbb
jmp
mov
cld
xor
outsb
sti
repz
ja
stos
lret
and
xor
imul
ljmp
test
jge
add
lret
mov
mov
dec
loope
adc
subl
fsubs
repz
aaa
sbb
adc
data16
popl
into
popa
sti
push
or
add
lret
pop
push
cs
mov
rcll
pop
popa
in
xchg
dec
ret
xchg
mov
mov
xchg
idivb
loop
adc
sarb
and
addr16
std
fidivrl
inc
jbe
mov
xor
and
cld
and
insb
adc
in
in
jb
enterw
jnp
adc
mov
sub
push
cmpsl
lret
movsl
pop
cmc
jb
or
xchg
mov
lea
xchg
roll
add
mov
int
js
fsub
popf
mov
insl
sar
xor
mov
xchg
jl
test
pop
xor
sbb
test
and
dec
outsb
leave
ss
push
ljmp
sub
pop
push
xor
dec
sub
popf
mov
aam
sbb
fsubrl
mov
adc
rcrl
pop
stc
repz
jge
push
xchg
popf
imul
sahf
sbb
insl
jl
inc
movsb
repz
jbe
mov
jno
add
push
mov
cli
rolb
pop
arpl
pusha
sub
sub
cmp
roll
addr16
jne
push
test
fs
lret
ficomps
mov
les
fwait
mov
mov
pop
insb
out
mov
sahf
rcll
pushf
js
mov
jne
js
roll
sbb
fwait
sbbb
andb
aad
xchg
sbb
ss
or
shl
hlt
stos
push
mov
mov
dec
lret
imulb
pop
or
mov
mov
sub
push
imul
daa
sub
inc
dec
stc
addb
jl
in
sbb
and
ficoms
shl
pusha
int3
outsl
add
lea
jmp
and
cli
bound
inc
dec
enter
xor
imul
clc
mov
mov
shlb
xchg
pmullw
mov
movsl
cmp
xchg
mov
fsts
shll
dec
pop
mov
mov
sar
in
cmp
xchg
cmpsb
hlt
xor
adc
scas
dec
jae
jmp
loop
into
inc
in
sub
ja
xchg
icebp
enter
fstpt
popa
lret
fisubrl
or
imull
insb
popa
sub
int
stos
or
fsub
ret
sti
divb
outsl
xchg
movsb
mov
mov
jnp
inc
rolb
dec
pop
push
cld
shlb
add
popf
dec
xchg
lods
rclb
xchg
out
imul
pop
jmp
cmp
push
mov
push
in
or
sarl
jno
and
xchg
push
in
dec
mov
push
movl
inc
out
jne
int
test
add
sbbl
xlat
mov
out
and
aas
ss
fs
in
fldl
into
sub
push
scas
cltd
clc
and
dec
std
hlt
adc
out
sbb
dec
mov
addr16
jge
aaa
xor
icebp
xchg
pop
xchg
sar
lock
out
fidivrl
test
mov
push
xor
add
mov
mov
leave
test
pop
pop
repnz
mov
xchg
mov
loop
cltd
clc
shlb
or
mov
pop
popf
adcb
andl
jecxz
adc
xor
jmp
jne
lret
sti
aaa
loope
insl
repnz
insb
fwait
xor
inc
and
mull
mov
push
mov
popa
fldcw
movsl
mov
repz
xchg
popa
das
fcompl
push
cs
loop
std
movsb
dec
jns
dec
mov
pop
mov
loop
popf
in
hlt
xchg
cmpsb
pop
xlat
jb
lds
lret
repz
sub
aam
subb
jb
fs
lcall
add
push
sub
xchg
xor
cmp
mov
inc
push
movb
adc
call
inc
cltd
or
and
fbld
pop
dec
data16
sahf
scas
jnp
lds
pushf
sub
data16
hlt
mov
in
cli
lock
mov
sbb
in
push
jno
lods
cmp
aad
insb
shrl
and
mov
imull
fs
ffreep
or
movsb
ljmp
fsub
test
movl
mov
pusha
sub
adc
sti
mov
adc
mov
xchg
xchg
in
mov
mov
mov
or
lret
pop
lods
lods
inc
leave
dec
cmp
dec
sbb
js
add
mov
xchg
adc
add
insb
rol
mov
pushf
inc
ficomps
int
mov
mov
xchg
andl
repnz
test
and
or
aam
dec
mov
int
sbb
popf
xchg
inc
fldl
mov
mov
xchg
push
aas
jne
adc
xor
push
pop
adc
cltd
stos
add
cmpsb
mov
sbbb
es
iret
dec
or
and
push
xchg
repnz
mov
in
inc
mov
stos
mov
rcr
clc
jle
imul
out
fmull
jns
ja
mov
mov
lea
lock
and
call
cs
mov
cmp
inc
out
mov
pop
cmc
dec
mov
in
add
push
xchg
and
xchg
out
sbb
xlat
addb
push
lods
mov
data16
sub
mov
pop
orb
jmp
pop
mov
mov
leave
cwtl
int
js
jne
pop
cmpsl
dec
arpl
cmp
negl
sub
test
aas
inc
push
mov
cmp
and
test
fdivrs
lods
xlat
cmp
ret
xrelease
mov
insb
pop
gs
mov
mov
jmp
lret
addl
mov
add
sub
popf
rorl
inc
fisubrl
jle
in
and
arpl
sub
call
fisttpll
imul
sar
nop
icebp
repz
or
or
cwtl
aam
cmc
lret
or
mov
fldl
ljmp
xor
cmpsl
std
jl
fs
loopne
cli
jmp
call
addr16
pushf
dec
or
stos
mov
add
xchg
cld
xchg
arpl
sti
push
in
fnstsw
clc
outsl
mov
mov
pushf
int3
pop
icebp
fidivrs
ret
daa
nop
out
sti
shr
mov
clc
std
push
lahf
adc
xchg
rclb
add
xchg
and
push
mov
and
enter
xchg
lcall
ret
xor
aaa
pop
sub
cmpl
clc
cmp
cmpsb
icebp
inc
xchg
cmp
and
outsl
or
stc
xchg
mov
inc
xchg
or
fistpl
xor
dec
mov
jne
mov
imulb
or
jnp
or
jmp
push
push
js
push
rclb
mov
shlb
xor
loope
std
icebp
jns
je
jae
mov
dec
push
repz
jae
jo
loopne
stos
int3
scas
mov
dec
dec
jmp
in
and
hlt
pop
int3
cmpsb
repnz
test
shll
rolb
add
cmpsb
and
adc
dec
stc
mov
add
dec
jge
nop
adcl
pop
aad
idivb
fisubs
test
fld
lret
leave
test
mov
jns
ret
scas
mov
rorl
enter
shlb
mov
inc
pop
int
mov
addr16
xor
out
mov
cmp
cmp
or
repz
fdivrl
arpl
mov
sarl
scas
int3
add
stc
push
hlt
out
jne
jns
cwtl
stos
push
in
in
cmp
mov
sahf
pop
das
mov
ficoms
mov
jg
popa
inc
es
aaa
and
jnp
gs
fdivrs
std
outsb
movsb
roll
int
xor
shlb
adc
into
cmpsb
ss
test
scas
mov
out
xchg
and
repz
repz
sbb
es
fbstp
imul
mov
add
mov
cmp
mov
and
popa
mov
and
push
rcl
mov
push
mov
loope
cmp
push
jns
push
test
push
sbb
cmpb
rcrb
inc
lods
or
adc
xchg
test
cmp
adc
add
xchg
bound
and
data16
aas
adc
mov
cmp
rcll
mov
inc
cmp
in
stc
jbe
out
adc
xchg
iret
out
popa
cwtl
in
add
push
in
insb
jnp
jno
stos
mov
js
mov
out
mov
push
out
rcl
cmc
mov
sub
mov
inc
ds
push
stos
int
movsb
test
xor
movsb
in
mov
xorl
addb
stos
negl
mov
xchg
cmp
and
add
mov
jecxz
jmp
and
out
xchg
test
push
jnp
mov
ja
xchg
xor
xor
ficoml
divb
ljmp
dec
inc
call
std
in
cld
fadd
data16
push
pushf
dec
fistpl
scas
mov
sarl
mov
stc
lods
aas
mov
fisubrs
insl
or
adcl
imul
jno
xchg
gs
dec
in
xchg
dec
xchg
jecxz
fstl
pop
and
or
data16
ret
mov
outsl
xor
sbb
fcompl
in
mov
popf
call
mov
mov
cwtl
sub
stos
cltd
mov
xchg
and
jmp
aam
in
fistpl
roll
ss
push
push
sahf
xlat
adc
mov
mov
dec
fsubr
movsb
or
pop
add
pusha
mov
xor
mov
mov
in
mov
or
jle
rclb
push
sbb
out
inc
out
jno
ja
jnp
lret
gs
cwtl
shll
loope
lea
sub
out
f2xm1
stos
mov
jle
sti
roll
repz
outsb
arpl
inc
test
mov
enter
inc
and
jmp
pop
ret
pop
outsl
rorb
lret
and
jg
push
in
xchg
push
pushf
cwtl
mov
mov
mov
xchg
mov
mov
sbbl
mov
and
mov
xor
insl
out
xor
cld
lret
aas
and
sbbb
movaps
mov
std
out
fstl
pop
clc
roll
xchg
jnp
test
jmp
xchg
cmpsl
into
add
mov
cmc
std
xchg
or
adc
xor
sti
lret
jle
adc
cwtl
lock
inc
jns
sub
stc
je
shlb
xor
cmp
mov
push
or
xor
test
push
pop
xorl
and
add
jg
bound
rcll
subl
rclb
mov
cwtl
push
arpl
pop
into
and
cmpsb
cli
and
js
xchg
iret
mov
sar
mov
lea
mov
sub
mov
icebp
cmpsb
lea
pop
dec
fucomi
cmp
std
add
aas
int3
fistpl
imul
dec
mov
pushl
popa
jge
test
cld
mov
aam
in
stos
orl
inc
jge
xor
cmc
xor
adc
xor
xlat
loop
mov
lds
std
int
mov
dec
data16
pop
mov
and
mov
sbb
push
xchg
mov
or
xor
rcll
dec
mov
in
push
shl
pop
cmp
std
vpacksswb
or
imull
popf
scas
mov
stc
pop
test
push
jl
aaa
ret
pop
int
dec
push
cmpsl
insb
out
sub
or
add
jo
orl
mov
out
sub
jmp
popa
inc
je
loop
aam
stc
fdivl
inc
mov
fdivrs
stos
pop
call
mov
int
xlat
mov
in
cmp
cmp
add
pop
push
and
mov
pusha
imull
pop
jl
pushl
mov
jae
mov
dec
divl
cmp
jmp
enter
cmp
loope
jno
sbb
or
push
cmpl
mov
cmc
into
mov
lret
in
cmp
imul
pop
sbb
lret
cmp
and
xor
cmp
andl
push
int
sub
fisubrl
and
and
xor
cwtl
es
mov
xchg
popf
mov
ficoml
mov
add
loope
pop
jae
jecxz
stos
fcompp
rcl
or
ret
or
or
push
add
lea
aas
aad
jnp
sub
push
out
cmpb
push
and
enter
dec
out
cld
and
pop
mov
nop
mov
dec
mov
mov
xchg
cli
mov
scas
int3
cmp
popf
sbb
push
jl
pushl
push
loop
sahf
sbb
scas
and
pop
adcb
mov
mov
stos
ret
aad
sbb
fstpl
jb
into
mov
sbb
add
aas
mov
decb
dec
dec
enter
rolb
imul
orb
add
sti
or
adc
test
movsl
mov
repnz
pusha
jmp
cmp
sub
mov
stc
arpl
divb
xor
mov
mov
xchg
add
adc
int3
or
dec
lods
mov
mov
rorb
pusha
aam
and
and
shll
repnz
loop
mov
cmp
lods
inc
inc
decb
push
xchg
sar
out
aaa
sti
inc
outsl
ds
aam
adc
adc
sbb
cmc
mov
pop
push
push
sub
imul
cltd
inc
cmp
mov
test
stc
adc
movsl
hlt
in
push
jae
mov
fucomip
mov
jae
dec
mov
pop
sub
mov
or
loopne
mov
in
call
in
loop
rcll
mov
rclb
mov
scas
call
in
adcl
adc
and
mov
cli
xor
xchg
sub
ret
add
rolb
and
rorb
jns
or
dec
xor
and
cltd
inc
divb
insl
jecxz
lock
push
dec
lcall
xor
popa
imul
sti
data16
add
or
add
add
fnstcw
in
out
shrl
inc
jecxz
add
jg
out
in
cmpsb
cld
jecxz
xchg
adcb
iret
cmc
sub
adc
std
icebp
add
add
cmp
jae,pn
jns
in
pop
mov
mov
push
cmp
fucomi
iret
les
sub
push
outsb
enter
push
jp
loopne
aam
adc
idivb
divl
rcr
xchg
jo
mov
in
push
cmpsl
js
mov
push
dec
inc
add
dec
and
rorb
fldcw
or
sub
xor
and
ficoms
push
jns
mov
mov
jl
ret
fst
inc
adc
sub
hlt
in
sbbb
lock
fs
mov
icebp
dec
and
addr16
jb
test
pusha
sbb
sub
mov
adc
add
jb
mov
cmp
and
data16
add
ficoms
sub
fimuls
mov
aam
or
pop
lcall
mov
fcmovb
enter
mov
push
insb
push
pop
mov
cmp
ss
aad
jnp
mov
hlt
int3
mov
sbb
jae
mov
ja
hlt
lods
stos
test
dec
inc
push
pop
popa
ret
hlt
scas
mov
mov
lea
jl
stc
mov
xor
jmp
cmp
or
mov
ret
inc
mov
inc
cmp
je
dec
xchg
xchg
lret
sub
add
mulb
dec
ret
xchg
mov
mov
nop
xor
jmp
popa
jne
lret
mov
ljmp
xor
rorb
add
or
in
inc
outsb
inc
push
xchg
scas
repz
leave
fsubs
ljmp
add
xchg
dec
and
ss
cmpsl
xchg
cli
jmp
shl
pop
orl
cmc
sub
adc
and
imul
stos
fldcw
dec
scas
aad
inc
and
cld
pop
sub
pusha
idivl
cmpsb
imull
xlat
data16
es
xchg
mov
mov
and
jmp
mov
fsubl
mov
dec
xor
mov
jg
outsl
arpl
adc
inc
mov
add
xor
rcr
jmp
test
mov
adc
xor
xorl
mov
fsubp
imul
and
fiaddl
sbb
dec
imull
dec
mov
sahf
add
adc
rclb
les
iret
jl
es
push
mov
jg
in
lods
pop
fcomip
xor
jae
mov
stc
pop
xchg
cmpsb
cmc
mov
cmc
les
je
stc
dec
popa
nop
insl
mov
lea
arpl
sbb
ret
fldl
xor
sub
aad
and
sbb
dec
sub
jbe
stc
out
in
or
mov
cmpsl
pushl
mov
mov
out
add
lret
pop
or
shl
sbb
insl
mov
mov
adc
adc
jp
xchg
push
pop
cmp
pop
pop
or
aad
out
fwait
lret
movsl
loope
jbe
mov
mov
rolb
adcb
mov
dec
roll
push
ljmp
cmc
in
sbb
jno
mov
cli
mov
push
mov
mov
into
jne
scas
int3
pop
loope
ret
aas
addr16
push
xchg
jno
scas
jg
dec
out
mov
fs
icebp
scas
xchg
fldenv
push
adc
adc
jne
jo
jecxz
mov
cmp
mov
push
mov
cmp
cmp
inc
cwtl
cli
mov
ja
cmc
subl
imul
scas
stos
ret
add
sarb
testl
test
mov
ja
mov
dec
sbb
int3
mov
sar
or
orl
sbb
ror
mov
es
pop
movsl
movl
jnp
das
std
xchg
test
pusha
les
fwait
push
mov
outsb
cmc
jg
stos
mov
add
rol
out
addr16
push
push
cmp
push
sub
mov
cmp
int
pop
ds
fwait
pop
xchg
gs
fs
cmpsl
push
add
aas
in
xchg
lret
dec
insb
cld
loope
or
push
insb
push
mov
out
or
in
gs
scas
mov
xor
pop
imull
pop
xchg
cmpsb
jno
fdivrl
jmp
int3
inc
in
pop
or
jnp
div
pop
in
loopne
into
stos
adc
add
jns
dec
mov
inc
in
popf
jmp
jo
mull
jmp
sbb
in
testl
ret
ja
add
and
cmp
pop
das
stos
ss
std
mov
fbld
sti
push
insl
or
adc
and
pushf
dec
out
clc
xor
std
jae
cmpb
and
test
xor
stc
jmp
test
call
add
adc
push
aas
ret
lea
frstor
aam
xchg
loopne
adc
jmp
cmovns
pop
pop
pop
fs
add
cmp
mov
cmc
jl
or
cmp
and
popf
push
and
xor
mov
in
push
prefetchwt1
jno
inc
outsl
push
jns
in
ljmp
pushf
pop
shrb
movsb
xchg
dec
fdivrl
sti
push
or
clc
dec
push
leave
std
mov
in
jne
lea
or
stc
decb
dec
mov
and
mov
xor
in
not
lock
cmpl
sub
sub
cld
in
mov
inc
clc
jg
icebp
aam
mov
out
xorl
mov
push
test
jno
xchg
or
lahf
mov
in
popa
aad
mov
scas
fwait
mov
shll
xchg
stos
hlt
add
js
hlt
inc
jecxz
inc
lcall
pop
cmp
push
cld
or
mov
inc
shll
aad
jmp
in
sahf
andl
inc
lret
jle
and
push
pushl
int
push
roll
push
jmp
push
les
out
push
data16
stos
repnz
push
pop
out
insl
rol
fs
or
loopne
imul
add
jmp
rcrl
xchg
sub
fninit
mov
sarl
sub
jle
mov
mov
movsb
dec
popf
pop
xchg
xadd
inc
adc
in
lcall
mov
push
sarb
stos
push
cmp
dec
and
sbb
cwtl
arpl
into
repz
cld
push
jg
ret
shlb
rorb
testb
arpl
or
or
imul
int3
xor
lret
out
lahf
shlb
pop
shr
pop
cmp
test
shrl
xchg
cld
mov
mov
sbb
xchg
outsl
sub
popf
xor
push
pop
pusha
fisubrl
iret
icebp
popf
frstor
jge
xchg
sub
xlat
xchg
sbb
sbb
insb
dec
movsl
pop
aam
imul
movsb
sub
ficompl
div
push
dec
sbb
out
push
jnp
mov
lcall
dec
stc
rorb
mov
mov
stc
add
fs
jmp
shlb
mov
popa
or
es
or
outsb
movsl
inc
inc
mov
pop
in
pushf
xor
in
mov
test
mov
addb
cld
call
cmp
in
xchg
mov
mov
mov
dec
push
pop
dec
loopne
inc
les
incb
xor
jns
dec
popa
sbb
add
inc
sbb
shll
push
adc
jmp
out
andb
jno
lret
fldlg2
std
push
mov
loopne
ja
or
insb
mov
ret
and
shrl
inc
je
mov
loop
cmpl
pop
or
dec
push
mov
outsl
or
cltd
dec
gs
mov
fs
clc
push
sbb
xchg
cmp
sub
cwtl
add
pusha
sar
das
mov
xchg
ja
add
and
stos
xchg
sub
test
xchg
test
inc
rorl
mov
lahf
add
lock
dec
nop
out
lods
lret
lea
cs
dec
orl
xor
loop
icebp
daa
cmp
in
xor
mov
aaa
and
jne
push
iret
sub
in
data16
xor
push
mov
fistpll
mov
pusha
xchg
fs
imul
fs
mov
icebp
push
add
lret
dec
loopne
js
push
jae
cmpsl
xor
outsl
out
dec
jo
jns
pop
add
loope
dec
icebp
jecxz
xor
jg
in
add
pop
dec
lods
lcall
xchg
data16
and
inc
lcall
loope
or
pop
dec
mov
sub
inc
xchg
adc
sbb
sahf
ret
jno
mov
test
scas
and
xor
loope
into
sti
push
inc
sarb
cmpsb
sbb
arpl
push
cltd
pusha
sub
and
test
mov
add
xchg
cmp
sahf
sub
pusha
rol
bound
xchg
mov
je
icebp
mov
add
jecxz
int
xchg
mov
gs
dec
popa
mov
loope
icebp
or
adc
stos
sbb
mov
push
xor
push
in
ja
pop
and
cmp
cmp
mov
shr
int3
mov
in
jo
xlat
in
decb
das
data16
lret
inc
xchg
mov
loope
sbb
arpl
mov
shl
mov
pop
scas
in
mov
popf
or
mov
fistpl
jecxz
aam
lea
stc
cmc
jmp
ret
loop
push
in
add
and
mov
mov
or
push
lret
fmul
mov
add
dec
mov
xchg
inc
or
cmp
dec
loope,pt
lods
in
mov
sbb
or
xor
cmp
fcomps
push
mov
xor
and
xor
leave
cmpsb
xchg
imul
in
sub
inc
lock
fisubl
jmp
int
inc
adc
sub
mov
sbb
mov
xchg
cmpsb
add
xchg
pop
mov
jp
xchg
and
fsubrs
add
pop
jns
jne
push
sarb
xchg
fcmovnbe
and
movsl
mov
push
jnp
lods
mov
mov
mov
out
mov
mov
popa
mov
mov
xor
call
jmp
mov
in
jp
push
test
inc
push
or
mov
jne
cmc
mov
mov
cmp
fs
mov
lods
enter
xchg
jmp
adc
in
or
jmp
std
inc
push
shlb
repnz
mov
ds
dec
lock
adc
ret
xor
dec
cmc
shrb
mov
fisubrs
sahf
cmpl
sti
jno
daa
adc
jne
pop
or
or
add
mov
dec
mull
push
stc
out
or
push
sub
jl
adc
in
testl
fwait
push
out
out
daa
out
cli
fistps
sbb
std
cld
popa
icebp
and
imul
add
fisttpl
addb
lock
lea
xlat
rclb
cli
rclb
pop
cltd
add
cmp
sub
mov
jl
ret
dec
cmpsb
lods
sbb
push
mov
popa
les
dec
add
adc
adcb
out
enter
dec
loope
int3
sarb
in
adc
lds
pusha
xchg
sbb
mov
fadd
and
pop
push
cli
xchg
mov
add
push
add
and
mov
fsubrs
addr16
cli
xor
mov
iret
jecxz
hlt
xor
cmp
int3
push
mov
mov
xor
pop
dec
lret
and
incl
fcmovnb
outsb
or
add
jge
psrld
sti
xchg
and
lds
sub
inc
rcrl
cltd
sub
add
loope
into
call
mov
aas
add
negl
adc
pushf
jae
adc
js
or
fs
fldcw
add
out
mov
dec
mov
mov
lret
xchg
push
aaa
addr16
jecxz,pt
or
push
mov
int3
cwtl
js
xchg
cmpsl
cli
xor
and
lret
mov
sti
shr
das
out
mov
adc
xchg
das
dec
sub
pop
pop
cld
mov
fidivs
mov
mov
and
cmp
jecxz
test
popf
adc
in
mov
cli
rcl
scas
ja
ret
dec
in
cmpsl
and
xor
sbb
sbb
fimuls
std
xchg
mov
dec
jne
std
xor
push
inc
push
sti
std
sub
gs
or
jmp
cld
xchg
aad
mov
dec
mov
pop
adc
xor
sahf
push
fs
not
cwtl
cmp
in
push
out
xchg
lock
mov
mov
fwait
test
lret
pop
jae
in
push
push
xchg
inc
ja
or
movsl
movsl
fcoml
lock
popf
shl
inc
cli
mov
loop
mov
and
jns
jb
stos
cmp
in
sub
xchg
das
daa
inc
mov
and
xlat
out
ja
in
clc
mov
sbbb
cmc
shrb
push
popf
dec
shll
daa
sbb
out
rorb
rorl
pop
lahf
push
loope
pusha
jns
mov
xor
test
outsb
xchg
dec
fldt
adc
mov
cld
in
mov
and
lahf
xchg
inc
mov
int
adc
mov
push
fisttps
adc
lock
in
clc
push
dec
daa
rolb
dec
shll
in
adc
test
mov
fstpl
mov
sbb
mov
cmp
andb
mov
sti
jl
adc
adc
movsl
mov
test
adc
adc
pop
cmp
sti
mov
outsl
mov
cmp
jbe
js
setge
out
sub
std
jb
adc
mov
shrb
mov
fadds
pop
jecxz
popf
adc
and
sbb
sti
adc
loopne
andl
data16
ss
mov
out
add
sub
jne
mov
imul
jle
xor
insb
mov
mov
ljmp
cltd
mov
imul
mov
cs
pop
loope
xchg
cmp
pop
lds
mov
movsb
pop
cmp
mov
vmaxps
or
xchg
fs
mov
push
dec
jmp
dec
inc
insb
cltd
pop
sub
and
lea
push
scas
sarl
movsb
mov
lds
decb
orl
push
bound
inc
jne
xchg
out
test
pop
sbb
and
lahf
pushl
in
push
data16
in
or
jb
data16
out
add
push
sti
shl
adc
jle
sti
xlat
jo
in
aaa
add
mov
aaa
mov
scas
cmpsb
or
push
icebp
jns
mov
ds
jno
cmp
imul
lods
and
arpl
adc
cmp
test
mov
sub
in
push
ret
adc
scas
ficompl
pop
sbb
and
out
xor
xor
repnz
aam
push
aad
jbe
addr16
push
jno
js
loope
mov
push
jmp
lret
xor
ja
mov
mov
jecxz
xchg
lods
push
jmp
pop
decl
mov
xchg
movsl
jge
push
daa
jmp
sub
xor
cmpsl
xchg
std
jp
mov
xchg
rorl
scas
or
push
mov
jno
cmpsl
rorb
add
pop
out
repnz
int
imul
xchg
pop
inc
sbb
daa
push
or
jno
xor
add
imul
cmpsl
test
lock
in
mov
and
xchg
iret
sbb
sbb
fcmovnbe
mov
js
adc
xchg
add
push
std
and
jae
pop
pushf
jp
movsl
out
or
scas
data16
mov
stc
movsb
xor
cmp
popf
decb
jge
inc
jge
arpl
cmc
or
sti
jmp
fcoml
push
aam
pop
xchg
dec
addb
mov
jmp
mov
shlb
xchg
mov
push
xchg
mov
sbb
ret
push
cmpsb
sub
mov
fwait
movsl
mov
push
stos
adc
stc
stos
shl
lock
cmc
icebp
xorb
adc
divl
adc
aad
loop
pop
imul
push
ret
and
cwtl
mov
mov
icebp
lds
addb
divl
sbb
shrb
lahf
loop
pop
popa
mov
in
sbb
add
sti
cmpsb
dec
inc
and
jnp
mov
popa
loope
lea
sbb
mov
leave
cld
inc
lods
jecxz
int
adc
stos
inc
mov
push
adc
in
or
sti
mov
in
xchg
in
mov
ss
cmc
xchg
lcall
in
mov
std
cmp
jns
aaa
pop
mov
nop
mov
and
mov
mov
out
push
cmc
nop
and
push
xlat
js
inc
imul
mov
sbb
inc
out
aad
and
xor
add
arpl
int
scas
lds
sbb
sub
jns
cli
bound
aas
add
dec
in
int
mov
daa
mov
sbb
pop
ret
dec
xlat
xchg
mov
push
mov
cmp
ficoml
xor
jp
sti
add
sti
sahf
add
rolb
or
fcomp
lock
jmp
mov
stc
jl
inc
in
mov
sub
scas
pusha
out
call
scas
or
mov
push
add
push
pop
mov
mov
out
xor
or
jbe
lret
stc
xor
dec
xchg
sbb
cli
fcoms
jb
pop
xchg
divb
cmp
xchg
sub
ret
movsb
sub
lea
sti
and
roll
mov
xchg
int3
jbe
cmc
cli
or
insl
cmc
lock
rcrb
pop
adc
or
daa
or
jp
push
out
push
push
mov
push
xchg
stos
dec
sbb
adc
into
cmc
mov
mov
push
cmc
xor
sub
stos
lods
cmpsl
aad
mov
repnz
jmp
adc
inc
pop
lock
ret
and
loop
lods
sbb
push
push
testl
dec
cmp
ds
sbb
xchg
cmp
cmpsl
cmpl
jmp
xchg
orl
push
xchg
dec
popa
mov
lcall
mov
xchg
xlat
cmpb
negl
fwait
nop
dec
push
les
cwtl
fs
push
push
lods
enter
addl
push
fildl
lahf
sahf
lds
dec
std
popf
sti
addl
inc
jb
add
sbb
xchg
xor
pop
inc
sub
xor
xlat
loopne
dec
dec
mov
pop
hlt
xlat
addl
testl
test
mov
mov
movsl
sbb
jne
in
daa
or
sub
and
push
jnp
mov
lcall
jmp
and
data16
movsl
jns
push
aas
and
push
push
ret
mov
inc
repnz
pop
mov
or
cwtl
and
push
int
popa
mov
mov
add
idivb
icebp
inc
cs
outsb
test
cmc
sub
xchg
ja
jg
dec
icebp
xor
jne
push
add
sub
int
leave
jo
shrl
lret
push
jmp
icebp
xchg
mov
push
arpl
jo
lret
sti
cli
addr16
fnstcw
int3
js
mov
push
je
cs
lods
addr16
cmp
in
mulb
mov
mov
cmp
pop
jecxz
push
fisttps
into
xor
mov
loop
and
out
int3
cltd
xlat
and
aad
mov
jae
adcb
xchg
jns
or
inc
push
push
pop
jecxz
xchg
inc
imull
sbb
out
pushf
cli
jne
mov
or
dec
xor
mov
jnp
test
mov
jns
add
and
jl
or
xchg
add
push
inc
mov
imul
shrl
jne
out
cmp
in
in
mov
adc
lret
push
out
jo
dec
inc
mov
ret
or
out
xchg
push
cs
cli
es
ds
sub
mov
imul
inc
xchg
pusha
sub
dec
aad
pusha
mov
xchg
lods
in
and
sub
xchg
lret
inc
imul
pop
mov
jne
and
xlat
jo
fdiv
jae
adc
outsb
jmp
mov
je
cmp
loope
mov
dec
or
ror
mov
popf
pop
sub
dec
xor
lret
or
lock
lods
testb
adc
enter
and
add
pop
fildll
mov
loop
mov
enter
jo
jge
mov
adc
mov
mov
xchg
or
dec
roll
push
test
jp
out
cmp
imul
lcall
jl
aad
mov
dec
out
push
pop
or
mov
cmc
add
outsb
sub
in
inc
ljmp
mov
sti
ja
xor
stc
mov
dec
push
cmp
pusha
mov
inc
popf
xchg
dec
inc
out
fcmovb
pusha
aas
sti
into
gs
cld
adc
adc
xchg
ret
jnp
adcb
lea
not
sbbl
jae
daa
cmp
icebp
nop
out
inc
fstpt
rcrl
js
dec
dec
cmpsw
adc
dec
cmp
pop
mov
fisttpl
shll
pminub
xchg
fs
or
or
mov
adc
mov
lret
in
incb
negl
or
lods
mov
shll
sub
aaa
cmpsl
push
aam
add
xchg
xchg
pop
push
dec
or
jnp
mov
mov
cmp
mov
xor
xchg
stc
iret
jns
arpl
sbb
inc
or
je
cld
insl
push
jecxz
lcall
mov
int
ja
xor
in
iret
rcll
out
int
mov
je
aad
repz
jne
movsl
adc
xchg
mov
stos
mulb
out
out
add
sbb
or
dec
adc
cmp
mov
adc
adc
jle
lahf
fsubs
adcl
fs
in
push
out
or
or
subl
js
mov
sti
cmpb
loopne
cmp
je
ljmp
mov
mov
sub
icebp
pop
push
nop
push
sarb
push
ss
lds
inc
addl
loop
jne
mov
adc
mov
inc
mov
icebp
out
test
cmpb
sub
mov
cwtl
sub
mov
sub
outsl
outsl
in
in
cld
rcrl
popa
xchg
out
lahf
xor
push
adc
adc
jmp
sti
inc
dec
lods
out
sbb
inc
jl
movsb
imul
push
dec
sbb
mov
out
addr16
rorl
jl
iret
mov
in
dec
xorl
add
pop
jl
jne
jnp
mov
dec
icebp
cmpsb
xchg
sub
sahf
sbb
or
push
aam
sbb
stc
jmp
jbe
insl
mov
mov
rorb
in
sahf
mov
mov
pop
outsl
xorl
mov
mov
adc
or
adc
jbe
jae
lods
add
dec
outsl
push
push
stc
sbb
sbb
out
xlat
das
jno
loope
out
xchg
xchg
in
cmp
in
mov
and
mov
inc
repnz
inc
sbb
movsl
mov
in
cmc
shlb
sbb
mov
and
mov
adc
add
jo
xchg
add
fs
fstenv
imul
das
xchg
cmp
pop
xchg
push
ret
xor
mov
mov
int3
dec
incl
add
arpl
js
inc
mov
cli
pusha
sbb
sbb
mov
movsl
inc
ljmp
ja
subl
jo
or
sbb
loope
cs
mov
or
rcrb
lods
dec
icebp
arpl
pushf
movsb
push
sub
aam
je
shll
nop
loope
inc
lcall
lock
or
rcrl
cmpsl
daa
pop
insl
fs
push
mov
out
jo
loope
dec
dec
sbb
out
mov
in
rolb
xchg
mov
faddl
bound
xor
jne
xlat
repnz
xchg
dec
rolb
insl
mov
aad
movsb
or
inc
cmpsb
lock
roll
pop
and
testb
fucom
mov
mov
add
inc
bound
push
scas
cmpsl
inc
js
fadds
pop
pop
imul
test
es
decl
test
cmc
hlt
jmp
xchg
mov
rolb
mov
outsl
cwtl
cltd
shlb
jno
mov
adc
ret
jns
inc
push
or
inc
mov
fcomps
or
mov
xor
adcl
out
shl
cli
flds
fs
int
cmpsb
cld
les
das
cmpsl
xchg
cwtl
sbb
dec
cmp
shrb
addr16
cmc
aam
fisttps
fldcw
aas
addb
ficompl
sbb
cmp
or
cltd
sbb
xchg
mov
lret
pushw
adc
and
js
mov
clc
nop
xchg
push
int
std
pop
mov
cmc
pop
int
push
xor
stc
xchg
inc
xchg
mov
std
push
lcall
or
mov
pop
mov
xchg
push
lea
add
insl
cmp
int
ja
adc
dec
cltd
pop
jo
jns
jge
cmc
adcb
rcrb
or
and
test
shll
and
ret
mov
into
cmpsl
xor
pop
repnz
add
fcompl
push
rolb
fabs
repz
add
cld
dec
jge
ret
mov
ds
stos
mov
lock
rolb
nop
mov
dec
jg
stc
stos
into
xchg
mov
jne
jmp
frstor
xchg
cmp
and
test
mov
arpl
jg
sbb
outsl
push
js
stc
push
cmp
xchg
in
in
cwtl
mov
inc
mulb
aaa
xchg
repz
jno
jle
jnp
roll
test
jbe
dec
xor
add
pop
xor
add
xor
sub
or
jns
inc
les
xchg
stos
cmc
cmp
jnp
push
repz
add
mov
mov
lea
enter
xchg
fs
orl
fs
in
sub
stos
ror
loope
lods
push
in
stos
in
ja
dec
sbb
je
cmp
aad
stos
mov
fsub
div
popf
xchg
shl
decb
adc
push
mov
shr
mov
mov
pop
xor
sti
mov
mov
fwait
stc
xchg
sub
or
arpl
mov
jmp
out
mov
mov
sub
or
dec
cld
insb
data16
pop
adc
jmp
mov
movsb
or
push
push
adc
cmc
sub
sbb
fs
stos
adc
ret
cltd
bound
or
aad
stos
mov
and
nop
inc
and
rorb
lds
dec
popf
cmpsl
sub
jp
rcrb
dec
lret
sub
iret
mov
mov
cmp
std
or
cli
outsl
mov
xlat
pop
dec
in
lea
mov
xor
jae
in
fs
dec
mov
add
popf
add
inc
push
arpl
xchg
ja
ret
pop
aam
pop
bound
xor
push
or
add
enter
jne
stos
es
xchg
jb
sbb
aas
loope
push
dec
mov
hlt
jnp
scas
push
gs
cli
dec
mov
jecxz
sarl
in
int
or
mov
dec
sarl
sub
or
inc
cwtl
movsl
mov
add
hlt
testb
adc
jl
jne
ret
pop
xchg
jne
mov
inc
xchg
icebp
dec
ficompl
xchg
add
inc
sub
jge
pop
fldt
adc
in
pop
rolb
shlb
add
stc
cmc
addr16
outsl
stc
clc
loopne
cmp
sti
aam
jne
or
ret
leave
insl
add
jecxz
add
les
push
xor
push
mov
jne
dec
or
jb
xchg
add
and
inc
sti
pop
aaa
sub
xchg
dec
pop
mov
xchg
js
dec
jmp
mov
add
push
cmp
xor
xchg
xorl
rolb
pop
jb
nop
or
pushw
adc
movsb
push
jecxz
loope
mov
sbb
stos
mov
mov
imull
ljmp
in
ja
push
andb
ret
sarl
pop
out
jecxz
cli
cmc
test
cld
sti
push
mov
pushf
fisubs
cld
rorb
cmp
jmp
mov
push
xor
add
lods
call
sub
sub
in
fadds
xchg
stos
lds
rcrb
push
and
push
lret
or
repnz
negb
mov
cmpb
xor
dec
or
lcall
lock
addr16
pop
sarb
fnstenv
jp
sti
sti
mov
or
test
in
xor
fmulp
bound
jecxz
push
xlat
ret
fsubs
inc
popa
jmp
xchg
push
xchg
int
jmp
xchg
divl
inc
add
std
hlt
or
mov
push
and
stc
xchg
cmp
xchg
jge
out
and
mov
cmp
push
pop
lods
stos
xor
cmp
mov
scas
call
or
cmc
and
mov
loope
js
pushf
in
outsl
sub
rorl
cmp
outsb
incl
inc
sbb
lahf
xchg
add
sbb
jo
or
les
mov
push
push
lahf
int3
mov
cmc
ja
std
pop
mov
lea
xor
fldenv
prefetch
or
aas
iret
fiadds
lock
jle
call
fcoml
shrl
divl
in
loope
js
lret
mov
dec
popf
sub
ret
imul
mov
mov
adc
mov
mov
mov
xor
in
dec
inc
clc
dec
les
mov
lret
or
dec
ret
cli
sahf
dec
push
mov
lahf
movsb
sbbb
aaa
mov
push
bound
filds
and
test
xchg
mov
rorb
call
push
andb
stos
je
in
xchg
leave
insl
inc
rorb
add
xchg
cmpsb
cs
sti
dec
adcl
frstor
mov
mov
fs
mov
rorb
xchg
in
dec
jmp
fs
shrl
shrl
aam
popa
std
dec
mov
mov
fs
movsl
fmull
stc
add
jae
iret
in
mov
sbb
stc
pop
and
add
mov
clc
adc
nop
dec
aam
rorb
push
mov
cld
mov
cmpsl
in
inc
rorl
insl
pusha
fcom
mov
xor
adc
mov
pop
xor
jecxz
inc
mov
in
jo
in
movsb
push
lahf
add
popa
les
push
cld
mov
push
add
and
mov
fildl
stos
insl
jmp
pop
pop
stos
xchg
mov
adc
pop
cmpsb
daa
mov
loope
test
adc
imul
ficoml
fsubr
xchg
cwtl
ret
pop
jae
cld
idivb
push
rcr
dec
in
orl
pop
jge
ret
xchg
mov
dec
jmp
scas
sub
cmp
xchg
out
into
push
sub
or
jb
shll
popf
mov
push
rcll
push
xlat
inc
movsb
cld
mov
push
in
sarb
or
xchg
loope
arpl
negb
pop
xchg
adc
aas
addr16
jmp
mov
outsl
pop
dec
mov
mov
sub
push
and
mov
xchg
xlat
sub
ret
jbe
int
cld
addl
inc
fs
dec
adcb
pop
inc
stos
test
mov
pop
lock
fstpt
ret
gs
sbb
popf
sbb
cmp
mov
popf
dec
inc
sub
push
xchg
iret
ret
mov
xchg
sti
adc
sub
insb
jge
jbe
xchg
adc
add
mov
xchg
mov
shll
or
adc
mov
repz
sbb
dec
add
addl
sarl
jge
inc
push
fistpl
test
shlb
in
pop
xchg
xchg
mov
orl
movsb
xchg
lea
xchg
sbb
movsb
pop
aaa
mov
or
mov
aas
ret
push
sub
mov
out
jp
sbb
daa
jle
sub
push
pop
rolb
adc
jl
loopne
add
rcll
movsb
clc
sbb
test
push
mov
ss
sti
mov
pop
cld
popa
and
leave
jmp
loope
and
jle
enter
add
insl
mov
fs
subb
nop
ds
mov
adc
daa
stc
sbb
jno
clc
mov
stos
cmpsl
push
stos
test
sti
or
fiadds
nop
stos
shrb
fsubs
xor
mov
sub
test
jle
lock
mov
filds
mov
jecxz
fs
ret
adc
sti
jne
int3
into
lcall
dec
xor
stc
aam
in
cmp
shrl
notb
ds
aam
ficoml
incl
xor
fadd
mov
mov
pop
dec
pop
hlt
loop
push
cld
rcrb
scas
inc
ret
jae
cmpsb
mov
push
mov
mov
and
arpl
hlt
les
addb
adc
adc
es
sar
fdivr
mov
outsb
xor
or
rcl
mov
pop
jns
pushf
adc
pop
bound
mov
sbb
lods
fists
add
push
mov
xchg
andl
mov
push
push
cs
movsb
dec
ds
and
or
sub
cmp
xchg
cmpsl
mov
jmp
dec
in
test
std
loop
xchg
icebp
loope
mov
out
xchg
popa
push
push
adc
not
jle
jo
cld
sbb
ja
dec
ret
cmpsl
inc
or
movsb
fs
add
test
arpl
fsubrs
jecxz
mov
xlat
insl
loope
cmpsl
movsl
mov
sbb
jmp
icebp
inc
scas
mov
or
jp
fisubrl
nop
adc
stc
in
movsb
or
dec
stos
mov
sbb
nop
dec
jg
xchg
and
stos
test
sbb
je
gs
dec
sbbb
lds
out
xchg
jo
mov
fcmovnu
mov
mov
mul
lea
sub
mov
inc
pushf
cmpsb
jp
add
push
mov
inc
and
insb
dec
or
cmp
xchg
xchg
cli
xchg
or
mov
or
or
lahf
pop
shll
xchg
int3
sbb
inc
pop
dec
js
xor
dec
dec
pop
popf
mov
jnp
add
cmpsl
test
movsb
sbb
orb
adc
fadds
ror
flds
pop
outsl
xchg
js
mov
int
lret
rolb
jmp
mov
lods
lret
jmp
push
cltd
dec
jmp
adc
mov
cmp
cmpsl
mov
lret
cld
out
sti
xor
imul
xor
fcoms
repnz
mov
pop
lret
or
sbb
shr
repnz
pusha
jb
out
and
jno
sarb
nop
cmpsb
loope
fidivs
xor
fisubs
test
pop
ja
fimull
sub
imul
lea
cmp
push
xchg
jo
inc
jo
inc
daa
mov
sbb
sarl
add
test
les
add
xchg
enter
add
shlb
aas
inc
mov
sti
stc
ja
hlt
cmp
cmp
inc
cmp
out
or
dec
jb
xor
fimuls
jb
sbb
add
jmp
inc
popf
or
not
repz
mov
adc
insb
mov
jp
movsl
fs
stc
andb
in
push
lea
mov
adc
inc
dec
dec
and
aad
ss
outsb
call
or
ret
lret
stc
stos
cmc
lds
icebp
stos
in
arpl
cmp
fs
lds
clc
divb
shlw
lahf
pop
scas
mov
inc
add
popa
add
outsl
mov
push
sub
jg
arpl
jnp
cmc
pop
shr
js
addr16
cmc
fiaddl
cmpl
xchg
xchg
xchg
stos
fs
mov
jmp
sarl
outsl
adc
fisttpl
cmp
mov
inc
fsubl
jecxz
dec
aas
xchg
aas
push
ds
push
mov
fsubr
and
gs
dec
jp
roll
adc
test
stos
jge
and
cwtl
imul
jne
mov
sub
test
jns
sub
add
out
shrl
jo
je
and
mov
imulb
int
push
ja
stos
jl
sbbb
pusha
jecxz
mov
cmp
adc
jg
cmpsl
test
jge
es
int3
add
xchg
popl
loope
jge
adcl
les
rcrl
cs
fsubr
insl
or
sbb
stc
mov
aam
movsb
sub
flds
movsl
push
mov
fwait
shlb
icebp
adc
sbb
pop
jb
push
or
lods
pusha
cmpsl
pushf
pop
outsb
push
pusha
enter
inc
mov
mov
icebp
divl
pop
push
out
lods
add
add
jae
and
mov
jge
cmpsb
mov
cld
mov
ret
mov
ret
dec
dec
loope
loope
adc
jl
aad
dec
adcl
add
adc
orb
xor
mov
fwait
push
lods
out
imul
sbb
jge
xchg
inc
cmpsl
mov
repnz
cmp
imul
enter
pop
cmp
or
cld
xchg
test
fwait
cmpsl
div
daa
cld
xchg
jp
mov
push
cwtl
fs
repz
push
sub
aas
xor
icebp
std
sbbl
mov
call
cltd
sub
jo
mov
pop
int3
test
inc
aam
mulb
cmp
add
adc
mov
rorl
jl
popa
adc
adc
loope
inc
aas
pop
xor
dec
ret
xchg
stc
pushl
mov
mov
ja
cmp
adc
mov
jmp
popa
lret
push
fs
fwait
push
fisttpll
arpl
or
shlb
inc
mov
lahf
cmp
bound
mov
push
fldt
daa
mov
add
ret
add
jb
fiaddl
mov
sub
mov
sub
sub
pushf
xorl
xor
add
mov
ja
cmp
cli
rolb
jecxz
cli
mov
ficomps
lret
mov
mov
cmpsl
fidivrl
dec
pop
ds
add
les
or
popf
lock
pop
sub
inc
fwait
dec
mov
xrelease
jns
adc
int
pop
pop
cwtl
pop
loope
fldpi
sahf
in
adc
dec
cmp
xchg
jo
adc
pop
pop
ret
int
lcall
xor
outsl
fsubs
cmp
aaa
push
rorb
jmp
lea
stos
dec
jno
popa
sub
add
pop
je
dec
pop
push
lret
cltd
in
dec
push
and
add
add
push
xor
jmp
adc
lods
scas
test
pop
imul
push
pop
aaa
outsb
mov
dec
add
jl
jecxz
mov
and
arpl
fnstenv
add
shll
ds
xchg
cmc
ret
rorb
dec
cs
fsubrl
mov
mov
out
std
lea
mov
scas
sti
std
arpl
sub
lds
or
mov
pop
push
icebp
loopne
sbb
in
aaa
jnp
add
movsl
push
mov
leave
int3
jae
ret
cmp
and
rcr
js
mov
xor
dec
dec
sbb
xor
sbb
outsb
sbb
int3
sbb
test
aas
aaa
push
and
lds
fsubl
lea
sub
lret
loop
push
mov
mov
add
push
mov
in
and
cmpb
push
mov
cs
repz
sbb
fbstp
sub
lods
and
lret
lods
ds
adc
jg
inc
out
xor
adc
or
ss
push
pushl
loope
mov
xchg
cmp
sub
fidivrl
lea
xchg
jb
or
mul
in
sbb
cld
lret
in
clc
stos
cmpsl
mov
cmp
stc
cmpsb
repnz
cmp
lods
in
in
sbb
popl
pop
or
fstl
cmpl
mov
popa
pop
adc
cwtl
pop
adc
xchg
inc
loopne
push
test
repnz
xor
mov
push
aad
arpl
mov
jno
mov
cmpsl
pop
fsubr
rclb
adc
shll
ja
dec
ficompl
adc
dec
add
rcl
mov
das
test
push
ja
stc
divl
cmp
call
add
fisttps
push
cmp
pusha
lret
imul
push
sbb
out
sbb
mov
jmp
stos
push
mov
adc
loope
cmp
aaa
sti
dec
out
xchg
lret
push
mov
dec
out
and
stos
jae
mov
lea
xor
lcall
ja
push
dec
xcrypt-ofb
cmpsl
test
and
mov
aad
mov
aas
int
or
adc
push
jmp
loop
inc
xor
pop
ret
dec
aaa
adc
jb
adc
jmp
mov
cwtl
mov
cmp
inc
sbb
mov
dec
jns
xchg
outsl
cmc
jo
xor
test
pushl
out
add
insb
push
fs
shlb
fs
cmc
addl
aad
inc
pusha
or
mov
fstp
mov
push
lea
xor
movsl
in
sti
rcrl
int3
int
int
lea
mov
cmp
pop
pop
jge
out
pop
stc
stos
cli
in
iret
lods
mov
lock
push
adc
sti
aam
cld
scas
and
es
jno
mov
push
arpl
sbb
clc
stos
push
dec
idivb
jne
test
dec
ret
sub
cmp
scas
lods
mov
loope
or
das
rorl
bound
loope
and
mov
test
pushf
addr16
stc
mov
lods
mov
mov
mov
add
and
lcall
mov
sub
in
mov
dec
aam
cwtl
mov
adc
fcmovb
rcl
sub
lret
loopne
aaa
cmp
mov
movsb
fidivl
fldt
xchg
aas
pop
jo
pop
jmp
cmpsb
pop
leave
or
cmp
pop
outsl
loope
and
notb
dec
jle
out
rol
jb
xor
cld
add
sub
into
neg
cmpsl
leave
mov
push
in
popl
pop
bnd
out
call
int3
mov
xor
sbb
mov
or
inc
insl
mov
sti
cmp
xor
xlat
pop
mov
dec
aad
jg
stc
orl
jmp
inc
add
mov
enter
dec
push
push
ret
inc
add
xor
jle
fstl
push
leave
jecxz
sbb
loop
pop
adc
mov
adc
repz
sbb
add
in
ret
inc
cmpsb
scas
lock
jnp
mov
orl
addl
negl
or
add
mov
cmpsl
ror
lret
inc
mov
mov
out
scas
mov
push
lcall
or
lahf
dec
in
mov
flds
mov
push
cs
das
mov
in
repnz
jle
or
daa
sarl
in
and
cmpsl
adc
inc
and
in
mov
out
cmp
dec
gs
scas
and
loope
or
sub
mov
dec
mov
sbb
sub
sbb
lock
stc
cmpsl
ds
mov
add
xchg
insl
jg
in
lret
add
sub
fld
xchg
xchg
clc
adc
pop
into
loop
lahf
jnp
push
cmp
out
jo
popa
lock
or
stc
arpl
lret
lock
fscale
jle
ss
jmp
cmpsl
loope
es
int
leave
add
shlb
insl
dec
fcompp
push
sub
dec
in
inc
sbb
mov
sbbb
and
mov
sbb
mov
sub
das
push
fidivrs
jl
mov
add
scas
pushl
xor
std
loop
call
sar
pop
lcall
in
notb
cwtl
or
ds
test
add
jo
les
inc
sarb
incl
xorb
cmc
inc
mov
hlt
stos
call
push
sub
stos
xchg
sub
mov
ret
xlat
imull
xor
lds
in
sti
lret
cld
and
iret
jne
push
jg
jmp
testb
ljmp
lds
test
in
sub
mov
cmpsl
cmpsl
in
jno
jp
sbb
dec
jl
mov
repz
iretw
inc
hlt
mov
cmp
mov
cmpsl
test
sub
sbb
jne
cmp
pop
or
ja
xchg
mov
in
mov
or
adc
or
stos
sbb
js
and
lahf
test
push
call
inc
movsb
cmp
ds
loop
mov
push
mov
sub
int3
adc
out
out
mov
push
xor
adc
insl
lcall
test
mov
mov
movb
sbb
lods
bound
ret
clc
in
ljmp
std
xchg
lods
pushf
stc
jle
xchg
xor
daa
sbb
mov
in
jp
mov
pop
in
loop
shlb
insl
test
cmp
mov
xor
mov
ret
xchg
lock
ret
ss
inc
pusha
ret
pop
repnz
out
lock
jne
jae
adc
mov
cmp
in
movsb
stc
arpl
int
aaa
jecxz
fldt
je
cmpl
lret
aas
inc
sahf
rcrb
cmp
xchg
inc
movb
stos
mov
movsb
test
rcrb
sbb
ret
repz
in
cmpsb
test
cmpsb
in
test
ja
clc
mulb
and
pop
std
adc
fbstp
mov
push
addr16
mov
ljmp
adc
inc
push
push
xor
jb
cld
sbb
notb
dec
incb
add
jne
cmp
pushl
loop
pop
test
mov
mov
add
ds
pusha
int
aam
sbb
int
pop
push
or
mov
testb
sbb
mov
sar
lret
add
xchg
pop
dec
rcl
lea
mov
in
sbb
push
lds
mov
pop
scas
mov
fwait
inc
cwtl
movsb
mov
pop
cmp
lahf
cmp
pop
sub
loope
cmp
mov
cmp
cltd
inc
xor
popa
inc
jo
jne
pop
jns
add
push
mov
mov
pop
out
std
cli
or
dec
xchg
sbb
shrl
mov
xchg
testl
xlat
mov
xorl
adcl
cmc
lock
hlt
pop
pop
icebp
cmp
fimull
js
loopne
mov
out
pop
push
faddl
xor
xchg
outsl
test
jge
stc
push
add
jns
sbb
pop
stc
pop
sbb
je
xchg
adc
cltd
adc
jo
xchg
test
repz
or
jmp
insl
stc
or
add
dec
xchg
popf
pavgw
xchg
mov
dec
xchg
popa
lret
adcb
cld
cltd
out
push
xchg
scas
or
or
mov
insl
and
negl
je
pop
dec
shr
push
jns
mov
mov
sub
dec
mov
inc
jnp
mov
mov
xchg
cmpsl
clc
inc
cmp
and
popa
xor
fucomip
jo
add
jle
insl
clc
jge
cmpl
jmp
push
jl
popf
pop
loopne
icebp
push
inc
cmp
loope
dec
xchg
cltd
sahf
mov
push
mov
lret
out
mov
test
mov
and
mov
fcomp
adc
mov
sbb
xor
dec
mov
leave
or
mov
jnp
cmc
sbb
add
std
scas
push
or
push
test
idivl
mov
in
fs
sarl
jb
repz
cmp
pop
popa
and
xor
mov
pop
mov
leave
adc
mov
mov
pop
dec
or
aam
lods
jns
cwtl
inc
lods
mov
int3
shrl
mov
test
mov
mov
ret
imulb
adc
dec
sbb
enter
jl
ja
movsb
fldl
cli
mov
jle
mov
dec
jge
jg
adc
mov
jl
aad
sti
or
pop
lret
mov
movb
push
popa
sarb
dec
imul
int
push
inc
pushf
fdiv
call
in
add
add
das
xchg
addl
std
or
push
xor
push
add
stc
add
out
dec
movsl
and
mull
add
mov
lods
mov
pop
cmp
aam
or
mov
movsb
push
adc
daa
cs
clc
inc
or
mov
jns
mov
inc
cmovnp
lods
mov
call
fs
xor
cwtl
insl
sarb
fucomp
jl
add
mov
push
inc
jne
out
mov
xchg
mov
sahf
mov
movsl
mov
inc
add
pop
inc
pop
pop
sti
jne
xchg
push
and
movsl
push
fnsave
loopne
mov
jmp
xchg
imul
dec
frstor
sbb
sub
js
pop
jbe
lret
pop
inc
push
jle
in
orb
int3
dec
jge
xor
mov
popf
cwtl
icebp
xchg
jle
lea
jmp
aad
mov
cmp
lret
fsts
dec
dec
dec
loop
out
jo
mov
popa
rcll
gs
mov
cwtl
scas
ljmp
cli
fs
push
xlat
push
mov
test
scas
push
int3
incb
cmpsl
xlat
push
repnz
mov
iret
inc
lds
test
mov
mov
fidivl
bnd
fsub
jae
pop
stos
push
aad
pop
add
in
out
sbb
ret
mov
pop
push
divb
arpl
dec
jecxz
xor
pusha
push
in
pop
sbb
add
pop
lods
fyl2x
or
enter
inc
enter
push
dec
fists
aam
cmp
in
xchg
jg
inc
xchg
xchg
add
adc
jno
pusha
mov
mov
nop
clc
cmpsl
inc
rorb
sbb
mov
mov
cmpsb
pop
or
fidivl
xchg
nop
rcl
mov
and
mov
in
popa
outsl
mov
and
insl
or
popa
jecxz
cwtl
mov
lahf
push
xchg
repnz
fs
insb
mov
add
xchg
outsl
inc
data16
jno
scas
mov
sub
pop
pop
mov
cmpsb
push
gs
inc
out
aaa
fsubrp
into
jno
cmpsl
pop
lods
filds
jl
fstpl
sub
popa
loopne
cmpsb
mov
popf
in
aam
mov
fiaddl
sbb
jecxz
mov
push
cmpsb
test
call
cli
rcr
adc
push
icebp
outsb
jbe
mov
pop
and
dec
rolb
outsb
push
jo
and
jg
dec
insl
ja
dec
stc
add
cld
dec
add
sub
stos
add
cwtl
scas
addb
lcall
andb
lahf
pusha
in
mov
aad
inc
mov
jmp
push
jns
dec
call
xor
and
mov
sbb
sbb
int
ret
sbb
imul
enter
idiv
sub
push
cmpsb
cmp
ret
mov
and
sub
xchg
sbbl
or
in
shl
test
loope
xor
sbb
and
in
lds
push
mov
inc
xchg
xorl
in
sbb
and
cwtl
jb
jne
adc
sarl
jb
cmpsb
out
std
cld
or
sbb
jne
pusha
mov
shl
int3
popa
and
in
in
dec
push
popf
mov
imul
push
xor
xor
and
mov
mov
mov
push
fsub
adc
aad
in
sti
mov
jmp
mov
mov
dec
add
out
cld
fildll
cmp
inc
push
cmpsl
insl
int
inc
icebp
out
or
mov
lcall
push
popa
mov
sbbb
add
mov
rol
in
push
lea
mov
mov
xchg
das
stos
mov
fldt
add
and
dec
sti
sbb
mov
icebp
push
add
fstpl
int
sarb
sbb
sti
mov
imul
pop
mov
lea
test
popf
mov
scas
or
sarl
inc
test
test
jle
stc
lcall
dec
dec
pop
mov
push
cmp
cmp
lds
repz
out
mov
push
mov
lcall
jmp
stc
cmpsl
cmp
ret
in
jg
pop
and
inc
sub
shll
clc
cmpsb
xchg
std
inc
sub
movsl
adc
inc
imul
mov
and
xor
push
leave
aad
sbb
mov
js
mov
dec
inc
xchg
xchg
xor
sub
pminsw
jnp
mov
and
insl
ret
pushf
imul
jmp
sbbl
ds
lret
fidivs
adc
xlat
addr16
aam
mov
mov
mov
mov
cmpsb
bound
cmp
dec
nop
and
fwait
out
iret
dec
aam
mov
test
lock
push
push
add
push
lock
repnz
sti
mov
mov
add
xor
dec
mov
aas
test
std
iret
sete
arpl
mov
ss
sub
push
push
push
ja
mov
cmc
ja
jbe
fistl
and
adc
mov
ret
xchg
imul
stos
lods
mov
lret
xchg
and
mov
cli
roll
pop
dec
orb
xchg
in
or
pusha
shll
in
mov
std
inc
mov
dec
cmp
lea
dec
cmp
ret
pop
das
and
fsubs
sub
dec
push
neg
test
lcall
mov
jmp
in
dec
or
mov
dec
pop
rcl
cmpsl
shll
scas
loop
jge
nop
insl
in
pop
and
mov
nop
cmpsl
or
pop
jae
cmpb
mov
jne
jnp
inc
imul
testl
adc
imul
icebp
pop
leave
into
and
push
scas
jge
inc
imul
pop
mov
notl
mov
sub
pop
popa
addr16
mov
push
sub
dec
hlt
mov
movsb
xchg
mov
xchg
jg
inc
into
sub
dec
inc
push
nop
mov
flds
push
push
sub
xor
mov
imul
clc
adc
fs
cwtl
popf
roll
add
pop
je
fcoms
and
fwait
stc
inc
sub
sub
and
dec
in
or
mov
hlt
rcr
adc
rorl
in
adc
dec
stos
aad
rcr
jbe
and
test
sbb
arpl
repnz
sub
cmp
jle
sti
clc
cld
jmp
fistps
push
sbb
movsb
inc
or
or
std
add
mov
push
leave
cmp
xor
imul
lds
xor
and
rcrl
dec
fnstsw
in
loope
xlat
jns
call
or
fdiv
cmp
mov
int3
push
lret
and
les
lock
ret
mov
adc
ret
test
and
das
mov
cmpsb
pop
test
test
add
test
fstl
push
loop
test
ja
fmul
popf
jmp
stc
push
clc
dec
pop
lods
aad
adc
pop
mov
fstpt
shll
test
into
testb
or
jl
jmp
lock
bound
and
pop
in
aad
fs
int
fstps
dec
cmp
sub
std
xchg
and
sbb
bound
cs
or
pop
jmp
xchg
mov
test
mov
cmp
jmp
pop
cmc
test
mov
mov
ficompl
jp
mov
sub
sbbl
cmpsb
inc
dec
roll
jge
push
popa
shrb
in
ret
sbb
sbb
or
mov
cmpsb
mov
and
xor
orb
push
push
jmp
mov
jnp
adc
ljmp
mov
sub
negb
cltd
ret
loop
or
jns
enter
dec
outsl
stos
cs
and
sbb
push
mov
popa
push
aad
js
adc
out
jbe
xchg
aas
lods
call
clc
inc
pop
sbb
mov
and
jno
jmp
inc
cmp
lahf
inc
stos
add
jno
es
xor
and
lea
fldenv
xchg
pusha
xchg
aaa
ja
mov
and
pop
pop
rcl
shll
jp
dec
and
in
jno
test
dec
jecxz
sbb
jbe
add
loope
mov
mov
out
movsb
popa
int3
aaa
popf
test
xchg
jle
jo
xchg
mov
mov
xchg
mov
add
stos
xor
and
adc
and
test
lahf
test
mov
enter
cmp
js
ret
jbe
loope
xchg
push
sbb
pop
adc
xchg
dec
sub
cmc
pusha
or
xchg
push
clc
out
pushf
xchg
or
cli
das
inc
loope
lods
sbb
mov
jl
stos
push
mov
sbb
out
out
insl
imul
pusha
sbb
sub
push
xlat
addl
mov
adc
cmpsb
leave
cwtl
mov
push
je
jns
rolb
fsub
data16
and
das
int3
push
sub
pop
cmp
pusha
add
add
mov
push
push
add
and
cmp
pop
adc
push
jns
fldt
cmpsb
stc
outsl
pop
cmp
imul
or
je
pop
cmc
inc
js
dec
mov
fdivrp
or
int
sub
loope
push
cmc
mov
pop
insb
push
fisubrs
pop
sub
popa
fldenv
mov
mov
jno
dec
dec
sbb
and
movsl
int
fdivs
imul
cltd
sbb
mov
xchg
imul
pop
mull
movsl
mov
dec
fstpt
cmpsl
addr16
stos
adc
xchg
and
cmpsl
pop
es
ficoms
xor
shlb
adc
in
adc
pop
fcmovnb
pop
jb
shlb
mov
pop
pop
push
xchg
push
lock
mov
pop
lret
mov
mov
leave
jmp
mov
push
test
and
int3
into
mov
loop
fisttpll
shll
sub
rsqrtps
jnp
popl
lock
mov
dec
mov
add
xor
push
cwtl
cmpsl
hlt
inc
pop
mov
scas
test
inc
jmp
xchg
xchg
loope
inc
ss
cmp
xlat
jg
vpsllw
push
call
leave
jnp
std
aaa
mov
in
sub
mov
or
frstor
jle
and
add
in
jno
xor
jb
jmp
mov
ret
add
push
xlat
cli
mov
xchg
add
clc
movsl
ja
stos
dec
mov
ret
dec
stos
out
imul
cmp
mov
fildll
jb
xchg
push
mov
cmc
cmp
pop
sbb
xor
in
push
out
inc
inc
pop
andb
lret
or
or
imul
push
pop
bound
pop
lock
add
pop
aas
test
add
out
pop
mov
shlb
cmpsb
inc
jo
adc
mov
inc
mov
es
stos
dec
outsl
aas
mov
mov
cs
pusha
movsl
test
rcll
jmp
repnz
popl
shrl
hlt
and
daa
bound
dec
sbb
jmp
push
or
mov
xchg
inc
xor
std
icebp
xchg
clc
sub
ret
lods
and
and
popf
movsl
push
pop
mov
cmp
ret
mov
mov
addr16
and
inc
enter
dec
imull
int
icebp
adc
in
inc
pop
int3
repnz
sbb
or
and
push
out
add
leave
aam
dec
jmp
stos
filds
or
sub
mov
jmp
cmpsb
pop
pop
dec
pushf
cltd
jecxz
lock
dec
xchg
int3
mov
push
rcll
dec
rol
outsb
fmull
push
mov
cld
cwtl
mov
inc
cs
push
enter
cmp
mulb
add
xchg
and
jmp
lret
add
ljmp
mov
mov
xor
dec
or
pop
jbe
jno
cmp
lods
mov
adc
jbe
stos
cwtl
xor
xchg
decb
sbb
mov
aad
cmp
xor
and
lock
xlat
std
xchg
scas
xchg
mov
push
sub
lock
loope
or
mov
std
add
cmc
aaa
mov
sbb
mov
outsb
dec
lods
movsl
out
outsb
jns
in
sbb
mov
or
add
jno
inc
clc
out
push
xchg
idivl
movsb
mov
sti
test
xor
iret
dec
xchg
jp
insl
movsb
xchg
mov
pusha
pushf
xchg
rcrb
call
dec
adc
scas
test
cmpl
mov
pushf
imul
push
les
aaa
mov
xchg
out
fisubs
pop
pop
jecxz
fs
add
xchg
xchg
mov
jb
jbe
stos
push
ret
push
ds
popa
bound
dec
sarb
movsb
mov
pop
in
cs
ret
dec
cld
js
or
not
pusha
cmp
andl
mov
cmc
lods
ljmp
data16
cmp
mov
and
mov
adc
inc
jge
ljmp
or
jl
fscale
dec
imull
dec
ficoml
cmc
gs
pop
inc
jl
inc
fstpl
push
lret
loope
mov
xchg
mov
addb
cmp
es
aaa
jns
dec
sub
loopne
fidivs
jecxz
mov
fstpl
arpl
sti
mov
dec
or
cmc
scas
push
push
negl
pop
jge
add
pop
pop
imull
ret
nop
je
mov
cmp
in
sub
mov
ds
ja
mov
add
adc
fs
popa
aad
pusha
and
enter
sub
dec
fdivrl
dec
cli
jae
pushw
jae
push
fdivrl
jae
call
xchg
mov
inc
mov
add
mov
mov
incb
movsl
andl
sbb
rcrb
add
popa
push
or
int3
jmp
rorl
pop
pusha
sti
or
ja
or
jge
loop
lods
sti
mov
fs
xchg
jmp
sub
cld
mov
fwait
sub
call
aas
xchg
cwtl
xchg
xor
std
push
shrl
gs
sub
cmpsb
cmpsb
inc
data16
rclb
cwtl
loopne
out
addl
neg
jecxz
lock
inc
and
pop
or
push
scas
add
cmp
xor
sub
mov
divl
popf
out
arpl
clc
stc
and
mov
mov
stos
pop
dec
dec
xchg
inc
mov
add
icebp
mov
mov
lcall
mov
dec
mov
dec
divb
mov
sbb
adc
fcmovnb
inc
ss
and
push
loop
add
cld
leave
fmul
mov
xor
psrlw
aad
xchg
cwtl
insl
jmp
inc
mov
dec
data16
out
ret
push
ficomps
shlb
icebp
dec
xchg
jns
gs
call
popf
insl
inc
imul
call
addr16
mov
sub
je
into
and
add
jle
ja
xchg
xchg
in
jmp
shll
dec
push
sbb
loopne
shr
stc
dec
loope
lea
inc
inc
pop
mov
movsl
jl
enter
xor
xor
fsubrs
aad
or
mov
xlat
or
add
cli
add
lcall
mov
jo
ss
pop
mov
icebp
jnp
push
pop
in
jg
jbe
adc
fisttpll
mov
out
mov
cmp
jmp
push
in
mov
and
xor
mov
cmp
jmp
and
adc
inc
adc
pop
dec
sbb
adc
fstp
addw
pop
mov
negb
sti
adc
dec
jle
xchg
dec
data16
lret
out
xchg
add
sbb
push
lret
push
popf
dec
iret
xchg
inc
lods
sub
jne
arpl
lock
mov
dec
sbb
cmpsb
jo
fcomp
hlt
xchg
or
je
pop
mov
mov
jmp
pusha
bnd
sbb
lret
jns
stos
icebp
insl
pop
outsb
dec
jbe
loope
pop
imul
stos
cmc
cld
push
outsb
dec
mov
shlb
dec
rorb
jmp
jb
mov
mov
xor
push
pop
repz
lret
das
outsb
mov
loope
gs
mov
mov
subl
and
and
in
lcall
fldenv
icebp
dec
int
mov
fldl
pop
icebp
add
xor
lret
shl
stos
mov
xchg
push
jbe
sub
sbb
sub
jnp
sbb
xchg
inc
fstpl
sbb
fcom
fwait
in
xchg
and
incl
ret
jmp
iret
mov
shll
scas
dec
jnp
jg
mov
mov
inc
and
lods
inc
fcoml
lock
sti
ljmp
lret
cmc
cmp
popf
in
cmp
lcall
outsb
or
pop
xchg
jb
jne
mov
cmp
jmp
sbb
cld
icebp
bound
loope
jmp
pop
cmp
and
dec
mov
mov
ret
xlat
sbb
and
movsl
out
es
in
aas
mov
into
fmulp
lcall
fists
xchg
cmp
xchg
iret
stos
mov
jne
cmp
and
pusha
insl
in
hlt
mov
push
jg
push
dec
shlb
mov
inc
stc
adc
sbb
jge
mov
sub
aas
mulb
shll
mov
mov
stc
arpl
shr
cwtl
sub
mov
mov
clc
fcmovnbe
mov
loope
adc
pusha
sbb
shlb
jnp
mov
int
aam
pop
in
je
stos
fmull
test
sub
imul
jmp
and
or
sub
in
sti
adc
push
in
push
adc
add
dec
and
icebp
ret
insl
in
sbb
xchg
jbe
cmp
mov
jne
lea
jg
enter
and
sub
testl
movl
mov
or
sti
jge
xor
fs
push
mov
or
icebp
inc
jne,pn
cmpsl
adc
mov
lret
testb
std
sahf
inc
adc
adcl
dec
lcall
bound
ficoms
xchg
add
std
es
lahf
xor
inc
jns
pop
or
cmp
dec
cmp
mov
shrl
cmpsl
pop
pushf
cmp
mov
outsb
adc
adc
fsubrs
push
lea
cld
iret
repz
loopne
movsb
pop
mov
sub
and
dec
rolb
scas
and
mov
pop
out
out
xor
push
das
sub
and
stos
and
mov
or
fldenv
leave
loope
cmp
loope
pop
std
sub
in
jb
adc
scas
loope
adc
int3
dec
aam
or
pop
push
push
test
dec
loop
clc
inc
sbb
xor
push
pop
jp
hlt
loop
push
das
icebp
xor
jbe
fldt
sub
imul
fisttpl
adc
and
add
add
adc
mov
cwtl
mov
and
cmp
xchg
mov
loope
popa
inc
shl
subl
loope
xor
sbb
adc
mov
cld
xchg
ljmp
fwait
and
pop
lods
shrl
push
fmuls
xor
rolb
push
jg
dec
arpl
js
stc
sahf
lock
xchg
add
std
test
stos
bound
rclb
test
xchg
inc
and
loopne
mov
repz
adc
mov
dec
dec
incb
inc
lret
or
jge
fsubl
cmp
cmpsw
in
into
dec
push
jg
mov
ja
mov
out
xchg
ds
mov
iret
int3
mov
fimull
pop
clc
xor
mov
push
mov
out
insl
or
out
stos
mov
fmull
and
in
data16
cltd
xlat
push
lock
dec
xchg
out
pushf
jnp
or
sarb
cmp
loope
mov
xchg
cmp
popa
icebp
inc
fisubl
mov
nop
mov
dec
loope
mov
xchg
andb
xlat
mov
mov
imul
sbb
into
lds
fs
inc
out
dec
and
mov
ret
loopne
push
fisubs
mov
ret
mov
or
dec
ljmp
fidivs
shrb
fidivrl
pusha
popa
mov
cmp
mov
push
int3
add
filds
shrl
sbb
sub
test
xchg
cs
popa
movsl
stc
insl
imul
mov
jecxz
rcl
or
les
mov
hlt
loope
out
xchg
rclb
cmpsb
shrl
xor
enter
outsl
sbb
loope
or
das
outsb
and
enter
mov
popf
ret
lret
mov
dec
mov
add
lock
jmp
cmpsb
inc
sub
inc
shlb
das
add
dec
push
outsl
xchg
and
push
sub
clc
push
in
mov
jecxz
lds
negl
sbb
enter
test
arpl
xor
enter
insb
insb
out
or
mov
popf
out
lcall
adc
pop
pop
or
sub
imull
mov
std
or
push
push
mov
js
xor
arpl
mov
iret
cmp
in
xchg
clc
add
adc
lea
mov
mov
jle
sahf
pusha
fwait
imul
mov
out
or
sub
xor
fidivs
jle
cmp
sahf
sub
cmp
xchg
cs
add
ret
cmp
mov
and
xchg
add
jmp
fisttpll
jo
div
fistps
xor
push
mov
mov
mov
cmp
fwait
xchg
cmpsb
mov
test
adc
jge
cmp
ljmp
push
sbb
cltd
sub
gs
and
incl
jns
ficoml
pop
push
testb
xor
cwtl
stos
test
cmpsb
fs
lret
leave
cmpsl
std
int3
add
mov
jno
jns
mov
dec
add
ret
out
jmp
mov
sbb
mov
lea
in
dec
mov
push
inc
js
in
sbb
es
push
stc
sbb
mov
mov
div
xchg
jne
movsl
loop
addr16
fsubs
adc
inc
fwait
cmp
orl
push
rclb
popa
sti
std
inc
jp
movsb
mov
int
addr16
mov
stc
shrb
jo
fdivrl
add
and
call
and
in
ret
pop
xchg
inc
or
repz
cmp
add
sahf
call
out
adc
and
data16
imul
mov
adc
mov
cmp
add
cs
mov
jle
decb
int3
lea
addb
aad
popf
ljmp
add
jmp
mov
inc
repz
sbb
enter
stc
outsl
dec
mov
test
rcrb
sbb
outsl
xlat
mov
and
sbb
xor
inc
inc
pop
fildl
shlb
inc
push
fidivrl
adc
dec
sarl
nop
add
in
jbe
insb
push
movsb
sub
movsb
mov
out
mov
in
mov
out
hlt
mov
pop
int3
scas
addr16
jle
and
popa
mov
mov
mov
jb
js
or
test
push
lea
cvtps2pi
or
or
lock
mov
aam
fwait
popf
pop
push
scas
pop
mov
int3
cmp
jnp
mov
shl
in
fstps
ret
out
std
out
pop
ja
jmp
fidivrl
sti
push
scas
imul
repz
jp
mov
negl
or
jl
inc
ljmp
fs
aad
lahf
shrb
loopne
std
mov
loope
pop
xor
adc
mov
cmp
xlat
jb
fstpl
aaa
dec
repnz
mov
sarl
mov
jl
vandps
jmp
lret
mov
or
fnstsw
fdivl
mov
xor
push
mov
sti
push
adc
pop
push
push
insl
sub
sub
sub
mov
inc
in
in
sti
add
mov
in
test
jno
cwtl
cmp
sub
sub
mov
sub
push
adc
testl
testb
in
out
test
mov
aaa
sub
or
in
enter
mov
mov
int
rcrl
les
aam
test
jno
stc
mov
mov
dec
add
mov
fnstenv
dec
add
sub
jecxz
fidivs
cs
mov
js
movsb
xchg
nop
inc
lahf
loopne
dec
in
add
lret
dec
jp
cmc
inc
sbb
mov
lock
and
inc
and
dec
lods
mov
pop
adc
stos
imul
subb
cli
fs
out
sbb
enter
add
cmpsl
std
icebp
dec
imull
jno
jno
mov
addb
cmpl
das
jmp
decl
xchg
xchg
into
rolb
out
out
mov
xchg
ret
in
stc
mov
rolb
push
popf
popw
imul
gs
pop
sbbl
pop
xchg
cmp
mov
flds
sub
cmpsb
add
push
divb
jne
icebp
push
shlb
mov
mov
loopne
idivb
jecxz
test
hlt
gs
mov
jns
lea
leave
into
insl
enter
jecxz
arpl
and
cld
repz
dec
mov
inc
push
pop
jne
dec
adc
rclb
sub
loopne
jecxz
push
orb
pop
fldl
xchg
les
xlat
out
xor
int3
out
aam
or
mov
lods
xor
jns
popa
sub
pop
and
add
dec
in
sbb
dec
push
fimull
daa
stc
inc
sbb
loope
roll
fidivrl
insb
inc
adc
jb
mov
lcall
sub
fcoms
dec
dec
cmp
sbb
lods
push
and
add
cli
inc
imul
cld
mov
adc
das
stos
aam
mov
push
dec
sbb
add
test
ja
inc
mov
idivl
push
les
add
test
lcall
in
xor
cmpsl
int
rcrl
testb
stos
cmp
leave
movsb
jno
ja
sbb
popa
sub
loope
pop
movsl
add
add
inc
cwtl
sub
arpl
lret
popa
push
adc
mov
sbbl
mov
in
rcll
mov
mov
shlb
divl
adc
pop
mov
ja
aas
movsl
rcrl
jg
fs
xchg
stc
scas
fistl
insb
pop
push
mov
inc
inc
mov
insl
and
jg
inc
popf
dec
int
push
sti
inc
aam
jge
test
and
jno
pusha
mov
sub
cmp
push
test
jnp
mov
scas
loop
ljmp
push
jge
aaa
inc
int
into
out
mov
push
pop
mov
addl
sarl
inc
imul
mov
in
mov
mov
add
mov
lahf
pop
mov
push
and
jp
cld
mov
cmp
mov
clc
cli
mov
push
scas
shrl
sbb
mov
dec
cmpsb
mov
sbb
pop
enter
add
aaa
adc
lret
mov
sbb
out
idivl
xchg
sbb
lret
push
clc
jecxz
or
xchg
and
lret
xchg
pop
shlb
faddl
std
mov
mov
pop
std
mov
mov
dec
addr16
repnz
sbb
lret
movsl
add
mov
pushf
mov
adc
cmpsb
imul
cmp
mov
sar
mov
mov
and
stos
add
xor
hlt
std
ss
in
sti
popf
stc
sbb
ss
add
dec
cwtl
cmc
push
add
neg
std
sti
fs
lods
mov
mov
and
mov
pop
mov
mov
inc
subb
jno
mov
in
rcrl
rorb
mov
loope
jnp
jnp
push
lret
pop
sbb
and
ds
aas
mov
repz
les
cmpsl
mov
pop
cmpsl
xor
jecxz
mov
cmp
cld
mov
cmp
arpl
popf
pop
pop
inc
xchg
popa
add
adcl
push
xchg
adc
in
mov
pop
shlb
into
push
in
cld
out
loopne
cli
dec
mov
int3
inc
or
mov
orl
je
ror
cmpsb
xchg
fidivs
lock
lock
movsb
xchg
jge
xlat
rcl
dec
mov
dec
dec
push
lock
arpl
add
jns
and
cmp
std
rcll
mov
cmc
dec
jno
adc
jp
jns
ja
fsubl
aam
es
fs
outsb
mov
lods
and
and
ss
pusha
mov
addr16
push
or
dec
sbb
push
mov
fildll
js
sbb
cmpsb
jmp
fwait
xchg
jg
call
push
ret
pusha
icebp
outsb
xchg
jns,pn
and
inc
pop
mov
or
mov
inc
cmp
lahf
or
sub
in
jmp
fs
inc
ficoms
and
lret
in
in
or
jns
cmpsl
lret
in
add
dec
pop
pop
int
dec
mov
mov
dec
shlb
cmc
pop
shrb
call
mov
push
test
mov
hlt
rcrb
jmp
out
add
mov
repz
in
sbb
out
call
xor
add
mov
inc
test
mov
push
ja
ljmp
lret
sub
pusha
mov
dec
pop
les
cltd
loop
lea
adc
inc
les
mov
mov
sub
inc
xor
imul
adc
pop
add
xchg
push
mov
hlt
push
rcrb
pushf
and
mov
in
add
mov
test
insb
mov
addl
jecxz
stos
std
cs
push
mov
mov
add
test
daa
int
mov
cwtl
jo
lock
std
push
dec
scas
pop
xor
in
and
adc
pop
arpl
mov
dec
push
in
stc
sti
adcl
jl
jmp
mov
jae
roll
mov
fs
rorb
outsl
rcr
orl
jb
xchg
adc
pop
or
aad
pop
push
jge
add
testl
out
inc
daa
dec
data16
arpl
add
gs
int
sbb
xlat
mov
loope
adc
enter
sbb
stos
sub
sbb
xchg
xchg
fsubrl
lods
filds
mov
xchg
call
repnz
cmpsb
int
imul
insb
decb
or
add
jg
jmp
cmc
lea
lahf
pusha
rorw
addr16
push
mov
scas
inc
ret
gs
stos
adc
in
stc
add
push
and
popa
or
lods
sub
push
mov
mov
add
mov
in
jp
sub
push
dec
cltd
fwait
movsb
inc
mov
and
mov
stc
fisubs
jbe
push
or
popl
and
mov
insl
sahf
pop
pop
sub
push
dec
push
aaa
jne
sahf
dec
ret
arpl
sub
call
lds
nop
scas
test
in
xchg
jl
and
fiaddl
pop
inc
jmp
out
sub
loop
push
pop
mov
nop
stc
pop
push
std
xadd
in
inc
out
cmp
dec
sbb
push
lods
testb
lahf
add
in
mov
gs
mov
sub
lock
icebp
cmp
or
cmp
mov
or
xchg
rorb
jmp
dec
jb
sub
in
stc
fldenv
mov
push
add
nop
andb
lods
pop
cmp
cs
iret
in
mov
adc
or
movsl
mov
lods
shl
jle
mov
mov
add
out
test
mov
icebp
push
add
sahf
fidivs
xor
mov
inc
pop
and
leave
andb
lea
scas
sub
test
in
test
test
repnz
push
out
rolb
loop
ret
leave
aam
add
adc
das
sti
incb
sub
sbb
repnz
jmp
lds
hlt
pop
aam
cld
dec
out
imul
inc
movsl
lea
shr
push
out
mov
shlb
xchg
addr16
lea
and
push
stos
lods
cmpsb
popf
xchg
ja
out
jbe
imul
lret
subl
push
or
out
pop
lret
in
mov
adc
pop
xchg
or
pop
dec
test
xor
push
add
arpl
test
add
pop
push
mov
jnp
and
push
adc
mov
or
sub
inc
arpl
dec
mov
out
pop
mov
inc
cmpsl
subb
insb
dec
jns
cmp
hlt
push
xor
sarb
adc
add
xor
dec
xchg
push
hlt
pop
dec
lds
rclb
jnp
xchg
mov
or
xor
divb
pop
pop
cmp
gs
mov
nop
fs
aad
sbb
jp
xor
add
and
mov
or
lods
add
adc
xchg
shrb
sub
or
xchg
pop
lds
adc
jo
inc
push
pop
dec
int3
fcomp
and
xor
mov
mov
jecxz
popf
jmp
jecxz
repnz
notl
js
lods
imul
negl
xchg
imul
or
pusha
inc
and
dec
fldt
loope
sbb
pop
inc
mov
test
data16
lea
pop
dec
xchg
sbb
cmp
les
scas
cmp
lahf
stos
addl
ss
loopne
lods
les
cmp
fidivrl
flds
lods
stos
mov
or
xchg
cmc
jp
inc
mov
inc
inc
sbbl
push
insb
neg
test
add
xchg
push
push
and
add
imul
flds
pusha
out
add
mov
mov
sub
cmc
sti
inc
jb
jge
mov
ss
xchg
dec
push
xchg
push
pop
and
pop
xlat
cmpsb
ss
dec
mov
in
sbb
xor
mov
jns
popf
incl
aad
or
xchg
cmc
aas
dec
call
cmp
jp
add
insl
fimull
es
add
inc
sbb
scas
mov
xchg
or
dec
mov
xchg
cmpb
pop
test
xchg
add
stos
add
jge
mov
inc
xor
mov
les
or
scas
rol
out
or
loope
fsubp
stc
shl
in
push
mov
inc
fdivr
mov
pop
jmp
dec
mov
adcb
and
loop
shr
and
xchg
adc
inc
lahf
int
jmp
orl
lret
mov
in
mov
stc
add
push
add
repz
mov
popf
jecxz
or
push
test
mov
and
push
xorb
add
rclb
jmp
jge
mov
sti
jecxz
hlt
push
hlt
or
stc
bound
imul
adc
cwtl
sub
testb
stc
sbbb
mov
push
outsl
scas
jo
loopne
xchg
dec
mov
imul
mov
sahf
fs
add
mov
popf
jmp
and
mov
ljmp
add
adc
filds
std
in
mov
hlt
sub
stc
lods
lock
stc
in
cld
ret
stc
stc
fiaddl
loop
nop
sbb
cli
jl
je
dec
sbb
cmp
daa
loop
sbbl
aaa
sbb
dec
xchg
cmp
rorl
icebp
pop
sub
xor
test
cmp
mov
loopne
adc
mov
cwtl
xlat
mov
xchg
cmp
mov
fnsave
push
stc
sub
push
aaa
std
pop
and
inc
sub
xor
xorb
add
aas
xor
xchg
in
mov
mov
sahf
pop
outsb
mov
adc
xor
repnz
cltd
push
mov
mov
mov
pushf
xor
mov
stos
mov
in
cwtl
nop
std
icebp
pop
inc
dec
rol
inc
mov
adc
cs
stc
cmpsb
mov
in
jge
mov
lret
in
xor
cmc
fsubrl
jecxz
cmpsl
enter
outsb
aad
cld
outsb
sbb
js
cli
dec
jge
or
imul
loop
mov
ret
fdivrl
jae
xor
mov
adc
out
cli
xchg
or
leave
sbbb
imul
fs
sbb
ffreep
lods
gs
lea
aas
dec
cmp
adc
pushf
int
push
cli
cmp
xor
mov
dec
dec
aaa
cmpsb
fcomps
mov
lds
pusha
xchg
jns
sub
movsb
sbb
into
das
jbe
fdivrs
adc
xor
dec
cwtl
sbb
dec
jns
movb
pop
lea
and
jg
mov
jmp
mov
push
xorb
cmpl
repz
aam
lods
shl
stos
pop
lret
orb
in
in
sbb
xor
xchg
mov
shr
xchg
daa
pop
test
dec
fistl
aad
jns
dec
pop
jmp
cltd
cmp
adc
out
add
add
divl
push
icebp
popa
leave
jge
pop
into
push
repnz
or
cmp
adc
ds
imull
aam
out
sub
push
add
stos
sbb
cmp
lds
mov
xchg
int
add
cmp
dec
je
fs
jle
cmpsl
stc
ss
ficomps
daa
outsl
mov
cltd
je
dec
jb
out
lea
inc
xchg
std
jge
add
sbb
insl
jecxz
lds
pop
rorb
cmc
fldt
pushl
mov
add
icebp
dec
ds
push
cmpl
xchg
and
jmp
imul
lea
fsubs
shlb
in
jne
or
sti
pop
dec
test
push
mov
mov
mov
mov
cmpsl
cmc
jmp
js
rclb
cmp
sti
jecxz
add
jg
sub
les
aad
addr16
mov
jo
pop
test
sub
mov
mov
inc
int3
enter
fsubrs
push
adc
add
imul
fisubrl
loop
push
adc
and
int3
or
out
push
fmull
add
xlat
jae
jg
mov
test
icebp
sbb
jmp
mov
inc
and
pushl
psubb
js
test
roll
mov
test
jge
roll
arpl
rcrl
sub
push
sahf
inc
inc
shll
mov
cld
pop
outsl
les
mov
sub
pop
lock
mov
add
rclb
fcomp
test
push
sbb
add
shll
xchg
add
inc
sbb
cltd
mov
inc
adc
sar
lods
cmpsb
sbb
leave
std
xchg
add
ljmp
mov
pop
in
xor
jns
push
jg
data16
mov
loop
es
das
lock
lea
push
fildl
stos
scas
add
iret
add
in
and
pop
stc
in
xchg
jl
push
jnp
push
test
cmp
or
adc
add
inc
shll
xlat
mov
mov
js
inc
pop
push
aam
pop
add
aam
roll
sub
int
leave
jp
ds
inc
dec
fadds
jle
loopne
jmp
push
ret
shrl
enter
fwait
or
das
xchg
pop
xorl
dec
mov
dec
loope
insb
mov
push
sbbl
push
out
insl
push
xor
dec
loopne
stc
loope
push
cmp
push
jg
int3
dec
std
add
jge
aas
xor
sbb
mov
sbb
cmp
pop
adc
push
sub
arpl
add
sbb
lods
pop
mov
sarl
lea
lods
lea
pop
jae
jle
lret
aas
shlb
cmpsl
pop
pop
aam
movsl
cli
dec
dec
mov
movsb
xchg
dec
lcall
sysret
push
mov
mov
inc
out
movsl
jp
push
clc
dec
or
xor
leave
xor
sti
iret
push
lcall
push
ftst
popf
lahf
cmc
hlt
int
in
sub
mov
mov
push
sarl
int
mov
pushl
jnp
mov
adc
jb
mov
jge
or
dec
in
jne
cwtl
movsl
cmc
jecxz
cli
jp
pusha
data16
add
push
incb
cwtl
pop
push
repnz
and
flds
ds
ds
pop
loop
data16
adcb
loop
and
loope
imul
jb
call
inc
stos
popf
mov
icebp
jle
add
cmc
fs
xchg
xor
aaa
rclb
xchg
add
sub
mov
ds
fcompl
int
pop
sbb
adc
popf
mov
mov
dec
xor
pusha
popf
mov
popa
fsts
mov
mov
fnstcw
cmp
dec
mov
jbe
cmc
enter
or
rolb
movsb
fsubs
mov
jne
lods
in
fdiv
mov
test
in
inc
xchg
lret
call
xchg
push
jne
insl
jb
add
push
lret
push
push
sbb
jp
mov
xor
ret
mov
pop
fucom
push
jp
loopne
lret
add
gs
jmp
mov
sahf
fs
inc
mov
frstor
pop
dec
jl
push
adc
jo
add
gs
les
xchg
cmc
jmp
repz
ds
adc
pop
in
jg
and
add
pop
and
fistpl
dec
fmuls
push
jae
sub
cmc
dec
cmp
rorl
popa
nop
pusha
ret
dec
add
xchg
mov
jne
lret
cmc
pop
mov
cltd
adc
scas
mov
pop
xchg
hlt
cwtl
jae
mov
sbb
pop
add
jecxz
mov
mov
push
cld
ret
icebp
mov
testl
loopne
loopne
sub
enter
sarl
mov
pop
sti
arpl
inc
imul
sub
daa
xchg
jne
jne
insl
adc
add
divb
fdivs
add
lea
enter
stc
xchg
dec
xlat
jg
dec
xlat
sub
das
inc
stos
inc
jecxz
in
sbb
in
jo
mov
cmc
push
les
dec
pop
jb
xchg
setne
stc
or
out
add
sbb
sbb
adc
sbb
jo
int
nop
idivl
imul
add
pop
fs
stc
stos
inc
lds
stos
pop
fprem
xchg
push
jae
jo
mov
fs
push
into
or
aam
adc
cmp
out
arpl
fisubl
pop
sarl
dec
add
rorb
test
xchg
pushf
outsl
jge
ffreep
push
aad
fs
ss
outsb
and
cmc
data16
dec
mov
scas
pop
mov
sbb
dec
and
cmc
push
lods
mov
and
ja
push
fcmove
aam
xchg
scas
sub
cs
shr
xor
push
inc
cmp
cmp
xchg
add
repnz
add
dec
loop
arpl
fildll
std
iret
mov
hlt
cltd
pop
sbb
mov
mov
rcr
mov
flds
pop
push
cmp
cmpsl
mov
inc
das
add
lds
xchg
mov
pop
mov
xchg
stc
jecxz
mov
gs
or
nop
xchg
ret
aad
movhlps
add
jnp
data16
jecxz
cmp
gs
mov
lods
and
std
and
xchg
stos
jmp
or
ljmp
dec
out
mov
hlt
pop
insl
mov
pop
in
jl
mov
cmpsl
mov
sbb
push
outsl
inc
jmp
mov
pop
inc
and
cmp
push
mov
mov
fmuls
mov
jo
lods
lret
inc
push
inc
lcall
push
xchg
aam
sti
sarl
idivb
mov
mov
sbb
push
loopne
inc
stc
out
popa
xlat
dec
aam
std
cld
cli
loope
or
stos
pop
insl
int3
push
imul
leave
jg
int
jb
out
cmc
lret
mov
in
or
xchg
nop
jns
outsb
push
fsubr
ret
jne
ja
jg
pop
xor
xchg
int
xchg
std
push
sarl
rorl
stos
data16
mov
out
aaa
jae
jge
pop
lods
cli
pop
dec
add
jge
mov
pop
xchg
cs
adc
or
cmp
dec
out
or
sbb
mov
mov
inc
jp
cmp
mov
cmp
cld
icebp
mov
out
out
sbb
mov
fnstcw
add
out
sti
mov
idivb
mov
jge
aad
and
xor
fsubr
or
mov
inc
mov
pop
dec
fstl
dec
cmp
dec
mov
jmp
ds
fwait
pusha
lods
ret
fstps
jmp
cwtl
sbb
lds
add
cmpsb
xor
enter
test
std
mov
enter
neg
pop
pop
fs
fmuls
ret
sbb
cs
test
adc
inc
pop
push
add
pop
hlt
outsl
mov
mov
in
imul
pop
test
sbb
es
das
vaddpd
xchg
jbe
mov
in
mov
nop
das
rorl
dec
or
push
or
popf
out
dec
add
loop
push
data16
ret
int
and
stos
ds
dec
arpl
dec
add
xchg
mov
push
cld
sub
out
lea
xor
lcall
dec
push
cmp
cld
or
xchg
sub
fistpll
mov
popf
fnsave
xchg
xor
stos
pop
mov
lods
in
inc
mov
adc
pop
mov
add
cmp
imul
ret
fcmovu
in
test
push
out
shll
pop
mov
mov
push
mov
sbb
cmp
xor
adc
call
xchg
mov
into
mov
dec
les
jl
xor
mov
or
xchg
imul
mov
test
mov
pop
iret
clc
add
adc
clc
sbb
mov
bnd
lret
inc
adc
sbb
push
int
sub
jle
sub
or
cmc
push
fistpl
sub
mov
sub
jmp
dec
dec
insb
stc
sub
mov
add
adc
ss
aas
in
sub
aam
inc
pop
outsl
ljmp
dec
pop
mov
test
mov
ss
mov
pop
repnz
test
jo
adc
clc
push
pop
or
hlt
lods
in
testb
cmp
push
add
dec
or
pop
mov
stc
lods
mov
shl
dec
mov
ud1
in
mov
mov
jmp
ja
loope
mov
in
and
enter
add
mov
out
add
arpl
in
mov
pop
xor
jge
mov
pop
xchg
repnz
mov
pop
mov
sti
sub
cltd
mov
jmp
mov
mov
sub
xchg
sub
cld
sbb
test
sbb
mov
push
clc
rcll
pushf
dec
add
cmpsl
ja
push
pop
push
adc
dec
jnp
repz
jmp
repnz
les
call
addr16
sar
sbb
mov
jno
stos
rorl
ret
mov
dec
rcl
stos
shlb
sbb
cltd
cmp
sbb
mov
cmp
pop
mov
std
pop
sub
scas
insl
cmpsb
mov
mov
dec
shrl
and
adc
arpl
or
decb
add
cwtl
inc
push
fidivrl
push
mov
jo
loope
mov
pop
arpl
pop
inc
pushf
jno
xchg
jne
imulb
movsb
in
xchg
scas
dec
lock
xlat
ss
lahf
pop
cltd
dec
or
cmp
in
and
push
cmpsb
pop
mov
add
sub
in
fldcw
aad
cmp
lea
or
xchg
xchg
mov
push
jg,pn
cmpsl
inc
mov
dec
in
stos
xchg
enter
inc
je
xor
lods
dec
cmc
imul
jbe
test
shrl
mov
ret
mov
lret
xor
fldenv
xchg
mov
and
dec
ds
fdivr
dec
mov
ret
or
hlt
mov
xchg
shrl
movsl
adc
push
dec
fimuls
imul
and
pop
test
push
or
push
je
add
jae
ret
push
loope
icebp
dec
mov
rorl
adcl
insb
lods
or
loope
sub
pop
loopne
loope
dec
sbb
loope
loope
orb
sbb
or
hlt
push
cmp
add
jl
xchg
movaps
jnp
ret
sbb
fs
icebp
xchg
jp
cmpsb
mov
stc
xor
cs
les
xchg
cmp
inc
inc
shll
fsubr
inc
pop
daa
mov
add
insl
inc
iret
pop
jl
in
mov
fwait
pop
inc
mov
mov
xchg
sbb
stc
jl
dec
loope
push
sub
imul
sbb
xor
subb
push
sub
xchg
mov
cmp
cld
inc
movntq
inc
mov
push
loop
push
xchg
mov
cmc
sahf
pop
shl
mov
sub
mov
ja
rcr
loop
mov
cmc
xchg
inc
jnp
xchg
push
std
arpl
mov
jecxz
mov
scas
push
out
ds
dec
gs
lret
cli
lret
mov
cwtl
mov
les
gs
pushf
gs
add
mov
inc
lock
cmc
inc
cltd
sub
testb
inc
aam
or
xchg
aas
out
cmp
popa
xor
in
fs
mov
enter
xor
mov
hlt
fiaddl
out
incb
in
mov
pushf
in
xchg
push
xor
loop
sub
jge
add
lret
in
add
mov
fnsave
jmp
jmp
or
wrmsr
jg
push
nop
not
inc
in
add
fucomp
add
sub
rorb
sbb
lock
ds
mov
stos
mov
sbb
dec
dec
imulb
and
test
sub
cmp
aaa
mov
bound
int3
je
fs
mov
add
mov
pop
and
mov
aam
sub
push
xor
loope
arpl
jg
in
push
mov
and
or
sub
outsb
ljmp
or
cwtl
or
arpl
in
je
fisubs
jp
push
mov
rorb
mov
cmpsb
pop
mov
incb
inc
fidivrl
outsb
popa
pop
push
sbb
pushf
sbb
and
sbb
xor
mov
add
cli
addr16
incb
cmp
popa
into
push
aas
ljmp
mov
mov
ss
pusha
les
lret
cmpsb
add
push
std
adc
inc
push
lds
adc
xchg
xchg
inc
lea
shll
push
scas
add
push
push
divl
lret
and
shrb
xchg
pop
cmp
decb
mov
mov
mov
addr16
loope
jle
inc
add
sub
sbb
subl
mov
fwait
jmp
cmovl
daa
or
mov
xchg
sbb
jl
ja
ljmp
mov
xor
xchg
sbb
leave
lds
ret
js
push
icebp
xchg
loop
repz
inc
or
adc
dec
jg
push
les
lret
fimull
sbb
outsl
and
mov
test
addl
xchg
inc
push
rorb
cltd
sbb
pop
xor
outsb
pop
pop
and
clc
ss
jl
mov
pop
daa
shlb
andb
gs
and
xchg
pop
inc
inc
inc
insl
mov
sti
add
lds
fidivrl
sbb
mov
cmp
cmp
inc
call
push
add
fcmovu
mov
inc
xor
cmp
out
or
dec
lahf
es
pop
pop
mov
test
xchg
fsts
out
cmc
cmp
pop
dec
lahf
push
into
mov
or
rcll
adc
mov
jae
inc
xchg
push
outsl
std
lahf
in
rcll
adc
and
inc
sbb
jmp
and
jp
push
jns
push
inc
imul
loop
nopl
xchg
dec
loope
out
jno
dec
out
sbb
xchg
and
ret
in
fcmovnbe
outsl
push
dec
test
out
mov
push
out
roll
push
xchg
mov
or
mov
aad
sti
jp
sti
dec
ret
mov
add
in
mov
xchg
shlb
add
xor
sub
ds
mov
and
pop
in
int
scas
in
dec
addr16
into
mov
mov
sub
jns
flds
insl
call
sbb
loope
flds
and
cld
cmp
loope
std
mov
push
ja
cli
jl
mov
loopne
repz
jno
inc
loope
sub
in
sbb
jmp
movsl
dec
in
shlb
jmp
in
stc
or
cmc
jmp
lcallw
mov
xchg
dec
out
or
dec
sbbl
ret
push
aaa
add
mov
pop
ja
jae
std
into
and
in
mov
cwtl
hlt
punpckhdq
aaa
lahf
pxor
dec
in
popl
push
repz
sbb
or
subb
dec
test
stos
pop
aam
std
jne
into
test
sahf
pop
cmpb
rclb
ja
pop
mov
imul
dec
adc
lea
mulb
roll
movsb
mov
test
js
outsl
vandnpd
cmc
xor
sbb
int
shl
popf
adcl
stc
pop
push
cmp
mov
xlat
add
insl
cmp
dec
iret
cld
add
out
push
outsl
jne
mov
jmp
int
dec
mov
push
xchg
mov
aaa
inc
aas
iret
and
inc
sub
pop
jecxz
cwtl
inc
sub
in
sbb
icebp
movsb
roll
pop
sar
mov
inc
cmpsb
inc
ret
sahf
std
xor
xor
cltd
xchg
negb
inc
out
daa
es
jmp
ffree
jle
imul
hlt
subb
cmp
xchg
pop
lahf
cmp
inc
pop
ret
push
pushf
dec
mov
imul
add
xor
mov
cwtl
cmpsl
stos
inc
adc
jns
sub
test
stos
movl
fwait
dec
nop
cmpsb
sub
outsb
aas
add
lds
js
push
add
cmp
out
leave
loope
cmpb
stc
call
pop
adc
push
js
jmp
jns
je
inc
test
push
loope
mov
hlt
sbb
mov
jo
popf
push
cmpsb
adc
mov
cmp
stos
jl
out
jae
nop
or
orl
das
enter
push
sar
cmp
dec
xchg
fsts
insb
popl
sbb
es
sti
shll
loopne
sbb
push
mov
sbb
aad
push
sbb
mov
cmpsl
into
inc
fimull
adcl
lea
add
mov
mov
xor
pop
pop
leave
cmpsb
jecxz
mov
testb
scas
and
xchg
mov
jb
push
aad
push
mov
pop
xor
dec
repz
ss
or
xor
add
imul
jbe
jns
negb
dec
push
and
in
adc
ja
mov
mov
cmp
jae
add
cmpsl
cmp
dec
push
int
jae
sub
xchg
jo
popf
mov
add
jle
cmpl
jecxz
loope
mov
jecxz
and
jg
jmp
jno
dec
nop
std
punpcklbw
shlb
imul
or
movsl
jb
fadd
repz
aad
shl
arpl
add
iret
and
ss
lcall
fwait
xlat
push
lahf
jmp
sbb
cmp
cmp
mov
jl
pop
jb
add
adc
mov
in
mov
mov
cmp
ljmp
das
push
mov
shrl
scas
nop
inc
xor
jg
and
cmpsl
mov
xchg
add
scas
mulb
enter
pop
test
rclb
cmp
adc
arpl
mov
sbb
in
icebp
jne
add
jns
fdivr
cltd
in
mov
insl
fucom
loopne
sbb
pop
add
xchg
pop
push
aam
lahf
mov
cltd
and
mov
aad
pop
imul
jle
les
mov
add
mov
mov
mov
and
add
les
data16
push
and
pop
jle
push
std
jge
push
stc
ss
cmpsb
lock
shrb
in
and
insb
mov
mov
movsl
fdivrs
sbb
daa
dec
in
adc
sub
adc
out
cltd
nop
add
ds
dec
lret
loopne
std
jo
cmovle
and
add
test
mov
xor
ljmp
xor
sub
dec
dec
xor
outsl
pop
xor
xchg
inc
imul
lret
xor
cmc
out
cmp
in
sbb
mov
sbb
stos
jl
aad
js
sbb
aam
popf
push
xchg
add
sub
pusha
mov
cmpsb
push
shll
in
add
jle
sub
cmc
loope
jno
mov
imul
adc
lea
std
inc
ja
mov
xlat
loopne
dec
fcmovnbe
sti
in
nop
data16
fisubrl
jb
jecxz
out
fs
push
add
stc
repz
dec
cmpsb
and
fcomip
loopne
sarl
lret
mov
xchg
adc
cld
sbb
sbb
fadd
fdiv
adc
adc
sbb
insl
jmp
fsubrs
mov
addr16
fisubl
push
cld
pop
sub
stos
frstor
fs
push
stos
lods
in
inc
push
data16
lds
cmp
inc
pop
pop
cwtl
add
sbb
or
cmpsl
cmp
cmc
lea
test
or
sbb
testl
lea
in
xchg
js
inc
jno
sbb
aad
add
pop
dec
xor
cmp
scas
push
in
lret
cmc
popf
stos
add
stc
sbb
sbb
pop
xlat
push
inc
in
cmc
sti
neg
ret
ret
aad
dec
notl
or
jl
ja
addr16
rcrb
sbb
jle
cmp
or
sbb
loope
adc
xchg
lods
sub
scas
add
and
cmpsl
inc
xchg
cmc
out
mov
push
jl
cmpsb
xor
add
or
dec
sub
pop
xchg
fstpt
pop
mov
out
jge
xor
adcl
fidivrl
test
in
mov
test
mov
mov
adc
ret
dec
xchg
cmp
ja
add
stos
pop
call
rorb
inc
pop
in
jp
shl
adc
jl
out
xor
fidivrs
adc
mov
xor
mov
dec
and
sbb
dec
cmc
sbb
add
jmp
imul
adc
inc
sbb
or
movnti
sub
sbb
jo
nopl
jae
and
jno
stc
or
pop
jae
divb
es
mov
sub
mov
std
dec
add
repnz
inc
pop
push
pop
adc
or
inc
mov
popf
lcall
out
xchg
imul
push
add
mov
jmp
add
xchg
in
in
gs
cmp
fs
add
pushf
aas
cmp
shl
pop
or
mov
push
stos
mov
dec
int
jle
icebp
sbb
outsb
mov
shll
cmp
sbb
iret
cltd
ljmp
fcomps
js
pop
mov
fmull
adc
dec
enter
in
stc
inc
popa
pushf
and
mov
fistpl
cld
and
xor
add
xor
in
pop
sbb
mov
mov
lods
mov
stc
popa
mov
xchg
add
nop
ljmp
je
fstpt
mov
aam
shl
aaa
jbe
jne
sbb
jmp
movsb
dec
in
push
or
aaa
aam
cmpsb
dec
in
add
adc
jne
bound
fprem1
inc
sarl
std
ds
arpl
in
test
les
sbb
pop
adc
jns
fistpl
xchg
daa
pop
ret
sti
jp
fmuls
popf
les
paddusw
pop
in
xorl
aad
ret
filds
in
mov
mov
std
jl
adcl
dec
sbb
dec
fdivrs
jle
adc
add
mov
cld
adc
sbb
cld
inc
mov
sahf
insl
cld
inc
mov
and
roll
sub
arpl
mov
jo
pop
jnp
aaa
cwtl
scas
pop
xchg
mov
mov
stos
mov
cmp
pop
adc
inc
push
shrb
mov
push
shlb
scas
push
faddl
xchg
fsubl
add
fs
lods
push
mov
mov
push
mov
orb
mov
fcom
lock
dec
decl
add
mov
push
jp
mov
inc
add
in
ds
or
xor
push
dec
push
fsincos
xor
and
sti
cmp
or
pop
sti
pop
sub
cwtl
and
xchg
jecxz
stos
push
cmovge
lahf
jns
popf
dec
shrl
call
aas
xor
inc
out
dec
mov
dec
mov
std
loop,pn
lods
int
mov
popf
mov
cmp
dec
push
sbb
or
or
mov
cmp
push
je
in
testl
andl
mov
xlat
sub
xchg
dec
loope
push
jae
test
out
int3
popf
jmp
cld
push
fadd
data16
pop
out
int3
sbb
icebp
clc
bound
dec
fstps
call
lea
mov
fdivp
mov
sbb
les
mov
rcll
call
xchg
addl
sahf
ror
ja
loop
lds
gs
in
leave
popa
mov
pop
inc
xlat
jmp
aam
cmpsl
jl
mov
xor
pop
add
jb
inc
cwtl
stos
into
fisubl
mov
stos
lret
cmpsl
cmp
dec
cmp
orl
test
out
lea
test
into
add
mov
je
shl
mov
dec
mov
lahf
mov
lea
sbb
std
inc
std
std
stc
sbb
xchg
out
out
std
gs
xchg
inc
jne
ljmp
jmp
or
stos
pushl
cmp
ljmp
out
fs
lods
add
ret
lods
outsb
cwtl
jno
test
nop
sti
xchg
lods
jl,pt
addr16
fsubrp
lea
imul
push
popa
in
push
sbb
int3
sbb
sbb
sbb
pusha
mull
or
inc
sbb
add
roll
jne
ret
arpl
inc
ja
hlt
pop
es
jno
xchg
sub
push
fdivrs
comiss
out
and
clc
lret
mov
ret
or
dec
mov
add
jmp
jge
cli
gs
imulb
fcmovnb
push
imul
mull
out
cmc
inc
dec
mov
pop
jge
fst
mov
push
aaa
test
into
add
push
cmp
push
mov
sub
popa
dec
mov
pop
loop
cmp
into
mov
stc
inc
outsl
push
lea
or
sub
data16
in
mov
ud0
hlt
push
pushf
push
pop
cmp
rolb
and
adc
in
jne
adc
fiaddl
pusha
pop
clc
rolb
dec
stos
jle
cmp
mov
adc
pop
pusha
pusha
or
sahf
in
cmp
idivb
cwtl
daa
sbb
ljmp
sti
leave
std
imul
and
sub
and
pop
sbb
jbe
jo
and
mov
into
in
mov
push
pushf
dec
mov
mov
int
fcoml
icebp
adc
dec
scas
cmpsl
push
leave
mov
sbb
in
xor
outsl
and
aas
jmp
cmc
lret
insb
pushf
and
adc
or
sbb
dec
pop
fdivl
xor
cli
jnp
popf
jno
mov
ret
insb
out
jmp
cmp
mov
jg
shrl
mov
xchg
call
jno
mov
jmp
icebp
stos
pop
add
push
out
mov
icebp
ror
mov
mov
adc
scas
xor
xor
push
ja
int
add
ja
dec
add
mov
cmp
mov
fiaddl
ljmp
out
mov
mov
sbb
shr
jl
pop
sub
mov
fsts
mov
pop
or
sti
mov
and
rorl
lcall
cmp
in
mov
arpl
inc
mov
call
and
or
fsubl
mov
cmp
mov
movlps
in
and
push
out
dec
cld
loopne
sub
popa
rorl
push
sti
xlat
xor
pop
sti
dec
sbb
std
mov
inc
mov
push
stos
push
lahf
pop
dec
insl
sub
jo
or
dec
cmc
inc
gs
mov
mov
mov
test
adc
push
adc
in
cmp
or
pushf
and
cmp
ret
jle
fcoml
mov
dec
iret
out
gs
mov
adcb
js
stos
lahf
jmp
dec
out
cltd
jne
xchg
roll
ljmp
sbb
imul
pop
xlat
push
aas
xchg
aaa
in
imul
cltd
ljmp
or
incl
or
pushf
and
sahf
push
movsb
and
sbb
dec
test
out
out
outsb
cmpsb
call
mov
mov
movsb
cmp
fistpl
enter
adc
std
mov
out
scas
test
add
inc
pop
mov
stc
and
adc
pop
mull
pop
fs
sbb
in
add
xor
out
add
and
cwtl
call
and
cltd
and
add
mov
sub
cmpsb
call
test
mov
fs
loopne
xor
cmp
sbb
outsb
aaa
fwait
xlat
pop
bts
mov
int
clc
mov
fnstsw
out
idivl
push
mov
xchg
add
pushf
pop
push
das
push
outsl
out
orb
mov
outsb
std
ljmp
or
push
add
out
pop
insl
cmpsb
xor
fcoml
jg
ds
movl
pushf
stos
xor
xchg
lret
fnstcw
mov
jne
mov
jne
in
cs
repz
ds
xor
icebp
push
adc
mov
int
mov
and
push
inc
ret
push
loop
gs
dec
push
pop
mov
lcall
outsl
fcmovbe
cmpsb
and
notb
int
mov
mov
mov
inc
sahf
dec
jne
sar
jne
dec
sti
sub
sti
jecxz
and
cmpsb
jl
pop
outsb
aam
out
or
mov
lcall
in
pop
loop
xor
fs
push
sub
pop
mov
push
jno
sti
mov
xor
test
cs
lahf
push
push
fmull
dec
jne
and
pop
mov
mov
sub
fldenv
shll
push
fnstcw
int
ficomps
fstps
lods
dec
roll
pop
cwtl
push
mov
mov
shrl
imull
mov
dec
insl
mov
cmp
or
gs
orb
pop
pop
movsb
cmc
test
xlat
push
clc
iret
jp
mov
jge
aam
xchg
sbb
out
ss
mov
add
or
out
inc
xchg
das
pop
push
outsl
out
xchg
rcl
test
std
add
mov
fidivs
enter
push
shrb
push
loopne
add
shlb
roll
ss
clc
aad
dec
das
in
std
dec
jl
cwtl
ss
repz
cmpxchg
push
sub
push
iret
mov
dec
xor
clc
add
xchg
roll
shl
sub
leave
add
dec
mov
jmp
or
jbe
or
cltd
add
mov
jmp
daa
mov
adc
stos
pop
adc
nop
dec
idiv
jne
pop
adc
jmp
cmp
addr16
sahf
add
into
push
push
inc
cwtl
lcall
in
pop
lods
pop
in
pop
sbb
lret
cs
ror
sub
cmp
xor
cmc
inc
sub
mov
rclb
fadds
into
sbbb
mov
rorb
mov
mov
or
data16
adc
popa
rorl
arpl
mov
mov
std
dec
popa
mov
popf
enter
out
daa
jae
inc
xchg
push
fisubl
fstps
or
in
push
or
mov
add
enter
pop
fs
test
or
ret
jne
shlb
xor
and
mov
jp
gs
or
sbb
jmp
insl
inc
clc
dec
jp
ret
scas
cs
xlat
cld
push
jmp
in
fwait
inc
mov
add
loope
xchg
mov
pop
cmp
sbbl
sbb
subl
pop
pop
mov
in
jb
mov
add
mov
cli
fsubrs
pop
negb
mov
add
mov
pushf
xchg
icebp
loop
ss
in
in
testl
imul
jecxz
and
dec
js
cmp
mov
stos
insl
idivb
mov
cmp
cmp
into
je
mov
push
fwait
loop
mov
xchg
adc
or
loope
mov
sub
cli
loope
sbb
popa
sub
or
shlb
mov
push
or
push
aaa
pop
sti
ficompl
jns
mov
add
dec
nop
js
adcb
sub
add
xor
orb
lahf
jmp
enter
loopne
inc
adc
clc
pop
push
loope
lahf
sub
add
jmp
clc
call
data16
into
lods
adc
inc
mov
mov
mov
inc
jge
shrl
dec
arpl
in
jmp
arpl
ja
jo
aaa
cmp
loopne
incl
mov
ret
imul
push
scas
fstps
cmp
lock
stos
loope
xchg
frstor
clc
shlb
setae
out
mov
stc
lock
inc
dec
icebp
dec
lea
loope
push
std
add
push
out
xchg
xlat
and
cmp
pop
ja
cmc
mov
adc
nop
fnstenv
pop
test
mov
popa
push
lock
mov
in
inc
lret
add
aaa
imul
mov
fcomp
xor
xchg
aas
mov
pop
inc
std
or
mov
cmp
icebp
xor
and
adc
xor
push
or
ror
xor
or
in
mov
and
jmp
jns,pt
inc
pop
lods
pop
popa
pop
mov
aad
mov
subb
mov
sbb
mov
outsb
stc
stos
loopne
jecxz
mov
out
xor
lock
adc
xchg
pop
rorl
fs
adc
push
ret
dec
sub
ret
jbe
call
xchg
scas
arpl
inc
les
sar
dec
imul
cmp
or
or
cmp
cmp
addr16
sbb
stos
jl
lock
mov
dec
aas
arpl
adc
rcrl
cmc
jmp
fmulp
sub
xchg
mov
lahf
add
push
sbb
out
cmp
sbb
ds
lret
aaa
dec
movsb
cs
notb
stc
add
pop
cmp
pop
add
stc
xchg
jnp
stos
mov
inc
int
imul
mov
push
out
xchg
movsl
push
or
insl
clc
cmp
jge
mov
outsb
rclb
and
fs
cmpsl
sbb
rclb
outsl
mov
nop
shl
scas
xor
cwtl
mov
lret
arpl
cld
dec
rorl
not
lods
add
pusha
jno
mov
mov
dec
ljmp
aas
cmp
fldl
jmp
jl
mov
loope
dec
and
jnp
jmp
jle
mov
mov
lds
xor
int
mov
mov
cwtl
push
mov
dec
sub
mov
out
fisubl
popa
repz
repz
xchg
imul
sub
fidivs
lods
sbb
jmp
mov
mov
scas
lock
enter
push
fidivrl
leave
and
push
cmpsl
imulb
inc
mov
shrb
aam
mov
pushf
hlt
push
mov
fcoml
lcall
leave
or
add
lods
mov
mov
imul
sbb
pop
sub
test
loope
nop
gs
jmp
push
sub
int
dec
imul
mov
jecxz
out
aam
mov
imul
push
les
out
jo
lock
jle
xchg
mov
sub
test
fcos
add
fidivrl
dec
and
fisttps
shl
ds
sahf
push
sub
jg
imul
dec
cmpsb
fisubl
ds
jns
push
and
je
push
icebp
fwait
hlt
pop
push
jge
jb
sbb
jne
insb
mov
fdivl
pop
popf
mov
and
mov
fcmovu
std
mov
int
xchg
mov
test
fisttpll
aad
arpl
adc
ficoml
cmp
popa
out
sbb
cmc
pop
push
cwtl
or
test
or
push
testl
inc
fs
aad
test
push
stos
dec
scas
mov
sub
mov
out
sbb
in
icebp
mov
out
push
idivl
test
mov
push
fnstsw
push
aaa
dec
dec
gs
xchg
ret
xchg
sbb
sbb
jg
repnz
jl
ret
insb
cwtl
xchg
loop
push
int3
lcall
dec
sub
loopne
and
add
push
and
xchg
mov
popf
cld
les
imul
aaa
repnz
loope
iret
loope
mov
mov
mov
pushf
add
cmp
leave
push
mov
je
sbb
push
mull
jns
scas
ja
ljmp
or
push
or
test
mov
ja,pn
mov
sub
out
sbb
sub
mul
nop
test
xor
mov
loope
xchg
mov
jne
pop
addb
add
jge
jl
mov
pop
adc
lock
mov
pop
js
lock
jecxz
and
movsl
lahf
scas
in
mov
dec
add
inc
jmp
jno
or
std
enterw
imul
pmullw
dec
jne
cmp
inc
outsb
mov
insl
xor
ficoml
idiv
stc
ret
jns
xor
push
mov
xor
in
xchg
push
xchg
sbb
aas
mov
stc
repnz
cmp
ror
arpl
loopne
pop
cmp
nop
pop
add
add
inc
loopne
xor
inc
and
shlb
ljmp
sbb
daa
sbb
rolb
sub
or
test
js
adc
pop
push
ljmp
jmp
xor
or
jae
roll
mov
mov
enter
pop
scas
fidivs
test
inc
adc
aaa
jp
call
mov
in
rcrl
fidivrl
lods
push
ja
xchg
pop
loopne
rcl
push
sub
and
je
mov
xchg
jmp
rcll
cmp
push
iret
jg
stc
push
mov
stos
mov
ds
icebp
out
jle
fwait
dec
fsubrl
dec
push
mov
jge
cmc
stos
lahf
pop
testb
lock
cwtl
add
incl
xor
ds
das
inc
or
push
test
lcall
hlt
jno
dec
or
dec
push
lock
jmp
add
jmp
cwtl
pushf
dec
fs
lahf
or
lret
jp
loope
aad
arpl
xor
clc
mov
outsb
mov
jb
cmc
dec
imul
outsl
cmp
jbe
add
cli
pushf
popf
clc
xlat
rorl
imul
movsl
mov
fs
or
pop
or
insl
mov
cmp
fs
adc
or
dec
rclb
adc
cli
pop
lods
enter
pop
dec
inc
jbe
xchg
pushf
jbe
fwait
std
stc
hlt
jae
xchg
jmp
mov
ficompl
jbe
inc
sub
iret
add
jns
pop
mov
mov
xor
or
aaa
in
jae
adc
jae
notl
or
push
xchg
jns
ffreep
or
test
xchg
pop
lods
cmc
rolb
in
xor
mov
sub
mov
mov
int3
push
add
push
cwtl
mov
daa
lds
fnstenv
pop
mov
sbb
cmp
sti
clc
cmp
and
pop
push
sub
stc
cli
jo
in
cmp
imul
or
mov
xor
xor
test
jo
fisubl
stc
xchg
mov
dec
mov
xor
std
add
stc
call
pusha
xor
mov
pop
jbe
adc
lcall
jecxz
add
lcall
test
loope
or
loop,pt
addr16
cs
add
dec
jp
lret
and
idiv
or
adc
mov
pop
fiadds
dec
cmpsb
js
add
push
push
mov
dec
jl
sarb
lock
ret
popf
popf
shlb
lock
and
mov
mov
sub
popa
push
adc
push
fwait
xchg
push
std
int3
pop
divb
sbb
push
inc
pop
dec
xchg
test
mov
or
ds
popa
in
je
sbb
inc
fadd
divl
cmp
aad
pusha
mov
pop
or
xchg
and
add
sbb
repz
xlat
leave
jb
out
insb
jae
xlat
xchg
stc
testl
xchg
add
push
jno
sbb
aam
sti
out
pop
outsl
data16
mov
or
xchg
dec
aad
stos
fcomps
sarl
fcomi
cmpsb
fsubrp
jne
loopne
data16
inc
or
scas
movsl
jp
jl
lea
mov
cmp
popa
sub
gs
pop
jb
mov
mov
lods
jge
ror
aas
pop
mov
sarl
push
mov
repz
sub
pop
in
rep
imul
jecxz
insl
int
xchg
cmp
cwtl
sbb
adc
mov
ficoml
mov
out
loope
xor
cld
out
stc
sbb
or
out
and
xorb
mov
das
pop
loopne
xlat
hlt
mov
xorb
dec
push
or
xor
and
repnz
mov
fistps
cld
mov
sbb
jge
mov
xor
in
fldt
jnp
and
jns
sahf
les
stos
repz
dec
mov
dec
sarb
es
dec
lret
leave
dec
mov
pcmpgtd
mov
or
xchg
out
nop
cltd
sbb
add
push
adcb
and
sbb
jb
mov
xchg
add
push
jl
pop
jo
daa
or
in
loope
adc
js
ret
pop
push
jle
pop
xchg
aam
and
add
or
ljmp
push
mov
mov
xchg
mov
mov
mov
jle
pop
push
pop
sbb
aam
std
mov
ljmp
push
dec
cmpsl
sbb
lcall
xor
adc
icebp
mov
mov
leave
mov
mov
xor
mov
std
insb
gs
shlb
int
or
cmp
dec
mov
out
mov
add
mov
dec
in
push
bt
sub
test
add
insb
loop
sbb
loope
cmc
xor
push
int
lea
and
adc
subb
push
cmp
imul
dec
mov
lret
ljmp
dec
out
fnstenv
shlb
or
mov
es
mov
mov
jmp
ret
jnp
or
xchg
pop
andl
mov
mov
loope
or
mov
mov
aad
mov
add
fs
inc
xchg
mov
and
into
js
dec
jne
adc
popf
xchg
and
out
shll
or
fdivrs
sub
pop
mov
aas
mov
jae
sub
out
mov
fwait
in
pop
mov
sbb
cwtl
lret
sub
vpsubq
test
lret
ret
mov
sbb
xor
jmp
and
and
or
lret
inc
cmp
aaa
and
sub
mov
sar
rolb
cmp
test
mov
push
hlt
xor
notl
fs
add
inc
or
loope
or
cmp
xchg
or
xchg
int3
push
jecxz
pop
mov
mov
ljmp
push
out
pop
and
loope
or
cmp
dec
mov
lcall
ret
pop
call
sub
les
jo
and
add
fistl
fs
add
sub
pop
push
dec
ret
in
push
aad
pop
push
hlt
stc
adc
jp
adc
ret
lods
pop
out
dec
mov
sarl
cld
in
fists
cli
lcall
popa
andl
add
pop
fstl
pop
xchg
and
icebp
add
les
lahf
jg
adc
push
sbb
jbe
adc
or
in
sbb
fs
stc
and
xchg
jecxz
cmp
or
mov
sbb
aas
nop
lret
xchg
shll
das
pop
jl
push
cmp
cwtl
cld
cmp
popa
aas
pop
add
mov
mov
and
faddl
cld
push
icebp
test
mov
mov
pop
inc
popa
ljmp
xor
sbb
cmp
sbb
dec
fdecstp
std
mov
dec
sub
out
out
es
jl
jg
jg
jge
dec
shll
sahf
int
jmp
aad
ljmp
push
xchg
hlt
int3
adc
aad
push
lret
inc
outsl
mov
add
jo
inc
shll
ljmp
cmp
arpl
ret
sub
mov
imul
add
loope
push
sub
pop
loop
inc
cmp
add
popa
fldl
ss
lcall
fiaddl
rolb
sbb
out
add
out
sub
fs
jmp
push
mov
movsb
sub
scas
es
xor
fisubrl
xchg
out
jecxz
ret
mov
movsl
jp
int
and
mov
xor
or
jp
js
mov
sti
or
out
sub
mov
or
sub
cmp
jne
mov
scas
dec
mov
and
mov
inc
jg
jae
shll
ds
out
lds
or
and
cmp
jge
sbb
cmp
sbb
cmp
imul
ret
jns
test
sbb
pop
mov
fwait
mov
jge
adc
and
inc
sub
loope
inc
test
lcall
jne
pushf
je
sbb
or
jbe
pop
jne
flds
aad
add
in
in
cmp
xor
pop
push
test
pop
cmc
cmpsb
push
int3
push
lods
and
add
outsl
adc
clc
ret
adcb
jbe
sti
mov
inc
mov
pop
pop
dec
mov
adc
imul
mov
mov
add
add
adc
sbb
aam
and
jmp
dec
xchg
hlt
in
or
in
fimuls
mov
sub
mov
dec
sub
scas
pop
jae
fadd
push
cmp
lea
out
jecxz
sarb
or
xor
fwait
data16
cltd
xlat
loopne
sbb
pop
sbb
dec
add
sbb
sbb
test
lods
or
cmpsb
sbb
in
sub
ss
adc
ja
add
lahf
std
stc
add
popa
in
cmp
push
and
and
jns
and
cmp
in
inc
in
lods
scas
lahf
mov
cltd
cwtl
jl
xchg
clc
ljmp
jnp
lret
xlat
xor
mov
xchg
sub
enter
xchg
in
lods
decb
mov
cli
vmresume
in
lock
mov
or
aaa
iret
enter
push
jl
inc
and
pop
dec
adc
shrl
dec
fidivrs
fs
add
aad
jb
inc
and
ret
imulb
mov
mov
icebp
subb
aaa
repz
or
sbb
inc
std
push
adc
sub
xchg
sub
mov
mov
sub
or
pushf
je
jge
xor
add
or
cld
mov
jp
sbb
andb
repz
out
adc
cld
not
push
pop
or
inc
or
aam
shlb
sbb
jmp
ljmp
mov
xchg
jb
popf
ds
and
daa
ljmp
lret
in
ret
sub
movsl
ret
cmp
adc
add
in
shll
jbe
lret
shlb
mov
dec
faddl
push
cs
arpl
push
xchg
sti
lahf
xchg
dec
cmc
cs
dec
sbb
das
js
lods
adc
add
dec
imul
push
rcrl
ss
xor
mov
mov
xor
icebp
imul
int
in
ficoml
stc
push
push
dec
cli
pop
jnp
mov
cmp
and
push
cmp
scas
pop
xchg
notl
xchg
push
add
testl
nop
sbb
jnp
adc
or
aas
xchg
mov
cmp
data16
data16
fwait
lret
lock
movsl
add
imulb
ja
mov
jnp
addr16
out
mov
mov
xor
rolb
cmpl
add
movsb
lods
jl
dec
add
mov
js
cmc
mov
dec
mov
addr16
jp
jmp
jno
dec
jmp
push
sbb
lods
leave
aaa
and
mov
es
cmp
fwait
mov
imul
mull
xor
repnz
sbb
scas
pop
or
cmc
jnp
jle
mov
lret
add
aaa
lock
in
jl
mov
xchg
dec
pop
lret
add
jns
jle
push
sub
mov
cmp
add
nop
jne
jp
popf
jg
mov
test
repz
shr
lret
and
push
and
lock
ret
sar
xlat
fldl
jmp
repnz
outsb
push
cmpsb
sti
push
inc
xchg
into
jo
out
cmc
cld
rclb
mov
sti
fstpt
out
cwtl
ja
push
mov
jmp
aas
mov
jmp
loope
outsb
jo
scas
nop
xchg
insb
dec
jae
mov
in
fcomp
sub
lods
popa
outsb
jge
add
loopne
dec
mov
xchg
in
hlt
add
out
xor
mov
loopne
ds
nop
loopne
jno
jne
pop
jbe
in
lret
jecxz
lock
adc
push
cmp
mov
rclb
adc
ret
push
sub
stc
imul
mov
push
cmp
or
push
adc
mov
popa
pop
xchg
inc
out
push
dec
sarb
test
xor
gs
sub
sub
shlb
jmp
loope
mov
loopne
repnz
lods
push
xchg
xor
mov
xchg
sbb
or
pop
aas
les
cmc
dec
pop
loopne
mov
cli
add
pushf
cmpsl
lret
clc
lahf
das
push
inc
mov
adc
push
mov
mov
rcl
cmc
cmp
out
xchg
sti
push
out
hlt
fldcw
push
push
xor
leave
cli
lret
mov
add
jne
subl
in
out
aam
xchg
ret
pop
mov
adc
lods
lds
jmp
ja
icebp
jle
push
cmp
les
adc
imul
ficoms
xchg
and
push
adc
xchg
fnstsw
loopne
test
test
adc
stos
jg
dec
out
cmc
mov
cmp
inc
add
scas
push
div
popf
shr
lahf
loop
sti
data16
xchg
fs
push
mov
dec
out
push
mov
mov
jecxz
sbb
in
ret
stc
movsl
inc
adc
xchg
lock
cmp
hlt
sbb
insb
loope
mov
movsb
fsubs
sub
or
sub
out
lret
leave
aad
cmc
push
mov
pop
xlat
sti
out
xchg
dec
movsb
fists
test
stc
out
inc
ret
pop
push
push
cmp
in
pushf
fldl
fsubrl
xor
cld
mov
pop
sbb
mov
rorl
sub
outsl
cld
loopne
push
pop
nop
adc
cmp
in
mov
lea
loop
jecxz
dec
call
lock
sti
xor
test
lret
ret
mov
fnstenv
mov
and
popf
lea
xchg
cmp
xchg
clc
out
in
mov
aam
loop
mov
jo
rcrl
mov
xchg
mov
mov
jp
std
xor
or
mov
inc
aad
insl
dec
or
rorl
dec
push
jmp
rcl
xchg
or
outsb
rorl
dec
lods
adc
sbb
jmp
dec
shll
out
cmovl
loopne
adc
out
stc
imul
cltd
sub
lret
inc
into
push
and
mov
jo
and
lods
test
stc
push
pop
jg
pop
subb
mov
adcl
dec
data16
stc
inc
imul
loopne
sub
ljmp
fisttpll
aas
nop
fiadds
cmp
mov
lea
nop
dec
jnp
or
adc
fwait
dec
jecxz
mov
in
fldcw
pusha
insl
repz
or
add
pop
mov
loopne
popl
mov
loop
xor
shll
out
xchg
push
pop
test
repz
movsb
and
pop
jo
gs
pop
div
mov
aaa
lcall
loope
mov
out
int
out
fdivr
test
cmpsb
mov
int3
mov
push
xor
add
clc
repz
int
jmp
cmp
cmp
out
xlat
cmc
add
test
dec
and
mov
fsts
inc
pusha
ret
jmp
jge
jo
movsb
jnp
aaa
dec
stc
subl
push
sub
popl
insl
add
pop
call
sbb
jmp
jge
ret
out
add
aam
daa
iret
adc
mov
cld
ret
or
inc
loop
pop
lods
xor
push
push
loope
push
dec
popl
cli
mov
add
cmpsb
xchg
mov
mov
in
lret
mov
jmp
popa
mov
xor
orl
in
mov
sub
lock
mov
lock
ss
push
mov
push
or
mov
add
lods
stos
xchg
ss
mov
lds
cmc
lret
shll
popf
pop
ficoms
aas
mov
cmpsl
sti
push
jae
stc
jbe
cmc
fldenv
pop
dec
jno
or
or
cmc
or
push
and
aad
stos
cmp
lret
movsb
mov
rorl
fnsave
stc
mov
push
lock
cmp
fdivs
nop
xchg
adc
fdivs
out
pop
lods
aas
jmp
cli
xor
cwtl
sqrtps
sti
out
stc
or
fimuls
shr
xor
mov
rcll
movsl
out
pop
out
push
lret
imul
jbe
lcall
mov
xchg
inc
in
jle
sbb
movsl
push
fucomp
mov
dec
cmpsb
mov
test
mov
mov
mov
mov
aaa
sahf
mov
outsl
insb
mov
cmp
std
push
dec
movsl
icebp
pop
ret
dec
push
leave
lea
lea
cmp
test
idivl
popa
cmpsl
clc
pop
jb
ja
sahf
push
pop
andl
repz
and
aas
jne
mov
push
cmp
lret
push
enter
sub
inc
movsl
sarb
lods
icebp
mov
ficoml
xchg
ret
mov
mov
aas
or
fisttpll
xorl
sahf
mov
mov
xor
xchg
jecxz
dec
mov
mov
repnz
pop
loopne
mov
cs
in
xor
in
adc
fmul
sub
stos
loopne
jb
push
in
in
jp
out
mov
in
push
out
frstor
or
push
adcl
nop
mov
push
outsl
jl
clc
fisttpll
xchg
cs
icebp
push
adc
add
cmp
insl
out
ret
stos
sub
inc
pop
adc
ret
fcomps
sub
push
cmp
ret
js
jl
fisubrl
lock
dec
push
pop
mov
jge
fstl
push
dec
mov
iret
test
add
std
popf
stos
call
mov
adc
in
test
out
mov
popa
cli
les
pop
cmpsl
sub
lea
repnz
adc
dec
stos
movsl
add
insl
jo
std
popf
inc
adc
orb
mov
loopne
inc
adc
mov
pop
adc
sbb
cmp
inc
mov
pop
cli
sub
sbb
fdivrl
jmp
and
popa
in
inc
sub
subb
inc
jae
aad
cmpsb
sbb
add
mov
das
mov
xchg
sahf
stos
push
fmuls
dec
clc
scas
mov
mov
pop
paddb
aas
sub
loope
xchg
mov
push
rolb
pop
hlt
outsb
jmp
cmp
pop
lock
inc
xor
dec
and
incb
adc
pop
lea
push
pop
xchg
adc
dec
and
push
ljmp
jns
dec
add
pusha
or
mov
xchg
dec
fs
dec
cmp
sub
xor
xorb
scas
add
popf
push
fadds
cmp
xchg
scas
push
loope
nop
ficoml
imul
xlat
outsb
es
das
and
jno
call
mov
jbe
notb
cmp
enter
xchg
std
movsl
or
inc
das
jge
xor
and
mov
in
lea
fs
sbb
xchg
enter
test
repz
inc
into
lods
xchg
out
and
fxch
add
out
sub
ret
enter
mov
mov
jmp
cmp
into
jae
jb
shrb
mov
jne
adc
inc
mov
jae
icebp
scas
push
adc
shl
pop
ss
fiadds
dec
jbe
mov
sbb
scas
pop
popl
ret
std
loopne
pushl
pop
hlt
out
ss
test
xchg
mov
sub
cwtl
clc
xchg
and
les
mov
dec
lea
bound
popa
cmp
aam
pop
popa
ret
xlat
cmp
dec
imulb
mov
jno
mov
add
dec
cmpsl
and
pop
jmp
std
stc
sbb
imul
shlb
xchg
or
or
lea
loope
test
rcll
out
stos
cwtl
pushl
pop
jns
xchg
cld
mov
push
cmp
xchg
ja
cld
in
inc
pop
dec
sbb
mov
rol
mov
xchg
mov
jecxz
and
divb
lcall
inc
dec
mov
jmp
pushf
mov
ret
mov
sub
push
test
std
push
shrb
loopne
int
jae
test
mov
orb
cmc
inc
adc
push
imul
outsb
or
stos
jnp
ret
mov
popf
sti
xor
mov
je
sbb
outsl
out
idivb
mov
enter
or
inc
xor
imul
pand
fnstsw
inc
ss
push
arpl
inc
adc
push
jg
or
fdivl
fs
mov
cld
fcoms
and
or
ds
lea
stc
sbb
clc
daa
add
stos
cmp
jl
jp
call
push
imul
orb
jo
ret
push
dec
into
outsb
mov
sbb
fadd
mov
pop
into
in
movsl
push
lea
ret
fucom
mov
ds
sub
rcr
dec
inc
cmpsl
sub
mov
sub
inc
fstp
push
pop
mov
or
lods
mov
dec
push
out
lods
or
lock
xchg
adc
mov
mov
sub
and
mov
mov
popf
out
jb
lcall
push
in
frstor
jns
call
in
std
sbb
jg
in
out
clc
push
add
add
dec
sbb
fdivrs
push
sbb
sbb
pop
sub
aam
push
stc
jo
int3
or
jnp
xor
or
roll
sub
ficoml
push
mov
in
or
sub
out
lea
scas
cmp
jle
adc
xor
cs
xchg
in
js
iret
test
xchg
hlt
gs
movsl
or
shlb
mov
add
jmp
idiv
sar
or
dec
adcl
out
add
mov
cmp
in
outsl
jge
imull
lret
roll
das
mov
inc
push
add
push
jmp
inc
push
imul
outsl
out
pusha
inc
incb
push
or
clc
add
xor
notb
shll
in
movsb
cmc
cmp
jbe
or
imul
jno
xchg
sbb
mull
pop
lods
push
pop
inc
fsubrp
dec
cmp
arpl
mov
cli
repnz
xor
out
repnz
imul
fs
in
fcmovne
push
xchg
cli
xor
pop
mov
jmp
push
in
push
mov
lods
or
cs
mov
lret
sarl
ljmp
mov
pop
and
mov
dec
sbb
mov
out
push
push
sbb
sub
ja
adc
insb
loop
movsb
or
movd
sbb
jmp
push
arpl
popw
jecxz
push
push
lret
popf
out
push
cmp
lret
or
or
xor
and
mov
mov
dec
xchg
addb
push
add
in
xchg
mov
cmp
std
jne
mov
jmp
cmp
adc
cld
or
cld
jno
push
dec
jo
cld
adc
pop
aam
adc
cld
adc
mov
xor
pop
out
sub
outsb
addr16
lcall
stc
jb
data16
iret
lea
jmp
lea
xor
shl
jl
in
js
cmp
mov
mov
or
mov
xchg
fstpt
push
rcll
adc
inc
stos
cmp
mov
inc
xchg
pop
rcrl
pop
lods
jmp
jecxz
mov
push
popf
imul
mov
sub
jne
cmp
aad
and
lock
xor
icebp
lahf
mov
cmp
cmc
jle
sub
mov
es
xchg
stc
xor
push
lahf
cmpsl
repz
aam
inc
int
nop
xchg
jl
or
push
mov
cmp
gs
aas
pop
aaa
arpl
addl
sbb
popa
push
xchg
mov
test
in
jns
mov
movsb
push
sub
inc
int3
lods
leave
or
loop
icebp
dec
and
add
out
inc
fsubrl
or
clc
stos
push
in
jmp
popa
sarb
dec
xchg
rcr
popf
daa
cmc
push
fs
lea
dec
std
mov
xchg
outsb
mov
jne
gs
dec
cld
jb
dec
in
sbb
mov
sar
add
ljmp
dec
sub
jmp
xorb
jbe
mov
sbb
and
sub
lea
icebp
stc
arpl
sub
fmuls
lods
movsl
sbb
call
jmp
and
add
gs
filds
jnp
add
lock
ret
mov
mov
and
lret
fisttpll
fstpt
xlat
stos
and
pop
push
out
cld
in
mov
xchg
and
jne
or
ret
pop
mov
fmull
cmpsl
mov
xchg
cli
ret
test
stos
mov
dec
test
ljmp
mov
add
cmpsl
add
sub
lds
iret
push
mov
aad
push
mov
loopne
cmp
loope
cmc
inc
loope
add
mov
mov
orl
mov
pop
dec
sar
sar
sbb
pop
jne
loop
mov
add
cmp
scas
pusha
int
imull
mov
sbb
repz
xor
mov
stc
or
icebp
jns
jne
dec
popa
cld
mov
add
fnstcw
in
loopne
scas
gs
inc
jl
xchg
mov
cli
xchg
sbb
cmp
or
dec
mov
pop
ja
das
insl
fadd
pop
or
inc
sbb
daa
xchg
lret
fcom
add
subl
push
and
out
push
pop
xor
mov
jmp
iret
or
jne
ret
scas
mov
rolb
outsb
cwtl
ljmp
popf
aam
popl
lea
jb
xor
mov
mov
push
hlt
adc
ds
xchg
xlat
jmp
data16
mov
rolb
das
xchg
xchg
faddl
push
pop
sbb
xchg
sbb
inc
call
out
pop
sub
inc
lret
mov
insb
in
popf
xor
hlt
xchg
shll
das
les
clc
sub
xor
pop
inc
inc
xor
sti
stc
and
xor
adc
mov
enter
push
sub
pop
or
push
out
mov
pusha
test
adc
lcall
xorb
repnz
xlat
fistpl
jb
adc
pop
aas
ret
into
mov
sub
lsl
call
dec
cmpsb
add
xor
xchg
xchg
loopne
inc
into
mov
outsl
xor
nop
pop
ret
fwait
hlt
movsb
test
fsubrs
cli
mov
lods
mov
dec
cli
in
xor
cmpb
dec
add
push
ret
insl
test
test
movsl
lds
push
inc
jge
adc
dec
jmp
lea
xor
xchg
stc
fs
scas
ror
jle
or
loopne
add
mov
data16
insl
mov
jge
scas
sbb
or
in
fcompl
shrl
arpl
dec
pop
inc
fadds
push
lods
movsl
push
fdivrs
cli
fadds
jbe
loope
xchg
test
imul
mov
loope
add
or
out
sti
dec
push
ficoms
ja
mov
mov
ljmp
mov
shll
mov
mov
lcall
sub
sub
jecxz
mov
bnd
aam
out
mov
lock
std
cmc
subb
cmc
push
xchg
dec
add
decb
je
movsl
lret
fmuls
xchg
mov
cmpsl
stc
movsl
std
std
add
addr16
popa
scas
add
sub
ja
pop
fistpl
xchg
lahf
cmc
add
daa
loopne
sbb
mov
int
loopne
popf
shll
jmp
mov
or
loope
cmc
add
or
ja
shl
in
dec
mull
std
or
les
jl
adc
xchg
ret
adc
and
cmpsl
push
jl
and
aaa
lahf
lea
mov
shr
add
out
mov
xlat
cmpsl
push
in
cwtl
mov
or
add
aam
stc
dec
movsl
pop
cwtl
mov
stc
mov
mov
cld
shll
jmp
push
popa
lock
call
movsb
cli
test
jns
mov
mov
fcmovbe
mov
stc
pop
mov
pusha
xchg
sbb
jnp
xor
adc
and
jns
lock
aaa
sbb
inc
sahf
push
mov
inc
sahf
add
lods
scas
lock
cli
out
xlat
stos
xchg
xchg
xchg
in
rcll
scas
adc
xchg
mov
cli
mov
sub
inc
ss
and
add
jb
orl
jns
ds
int3
sti
xchg
cs
mov
and
sub
out
daa
mov
cwtl
sbb
dec
push
rolb
mov
rcr
add
jnp
xor
lcall
aas
xor
mov
xchg
aam
popf
jae
fsubrs
cmc
out
fnsave
jge
lock
add
xlat
std
jb
mov
cmpsl
mov
dec
push
inc
or
mov
jnp
mov
lahf
inc
jo
mov
shl
dec
sub
shrl
jmp
mov
shr
cltd
push
and
push
xor
cwtl
stc
cmp
nop
mov
push
push
mov
mov
icebp
cmp
mov
inc
popf
sub
add
std
in
sub
ficoms
shr
hlt
dec
aad
pop
fidivrl
aam
xchg
inc
cmpsl
add
negl
rorb
out
mov
lds
mov
scas
mov
addr16
dec
push
jmp
int
cld
stos
xchg
loopne
ja
mov
loopne
popf
das
cmpsl
jns
fimull
push
sub
jecxz
mov
cmp
in
in
jge
and
sahf
popf
push
std
xchg
push
adc
lret
or
loope
pshufw
rcrb
cmp
rcll
dec
cmp
inc
repnz
or
push
or
sti
push
sbb
cmp
xchg
mov
sti
adc
xchg
add
or
dec
pop
jo
cli
idiv
xor
in
pop
test
test
or
dec
xor
psrlq
loope
jp
mov
push
sbb
loop
or
imul
sub
mov
out
aas
push
xchg
xor
jne
divb
scas
and
adc
test
xlat
mov
imul
orl
cs
push
and
icebp
cs
inc
ds
or
mov
xchg
in
fcmove
lods
fiaddl
mov
inc
shrl
mov
mov
fst
cli
dec
mov
jl
dec
in
inc
shr
rorl
jge
dec
inc
lods
cli
jmp
inc
xchg
imul
sbb
dec
insl
shlb
or
aad
inc
sbb
in
add
adc
lcall
arpl
add
call
or
cli
mov
cmp
dec
push
aam
sti
and
xor
stc
icebp
jns
xor
add
or
sbb
test
aad
pop
lock
cli
or
cld
std
popf
call
dec
ret
jmp
xchg
in
adc
jl
xor
or
add
pop
sub
addr16
scas
jg
cmp
mov
sbb
clc
lea
mov
hlt
sbb
lcall
shll
sub
leave
mov
aaa
or
or
add
inc
xor
cwtl
dec
data16
ret
fs
aas
add
jns
mov
sahf
aam
iret
dec
sti
and
xor
mov
add
ljmp
mov
paddsb
shll
jns
xor
jmp
test
xor
cmp
repz
loope
and
pop
jmp
inc
loope
xchg
iret
mov
hlt
lock
sub
push
and
mov
jns
loop
arpl
popa
mov
mov
cltd
shrl
push
pop
inc
inc
sub
jl
jmp
in
add
dec
mov
jmp
cli
mov
popf
jmp
add
dec
push
mov
dec
jnp
ljmp
fiadds
jp
inc
add
arpl
jmp
fdivs
pop
aas
jae
push
adc
dec
adc
data16
fcoms
jne
out
loope
out
sar
and
repnz
repnz
mov
andb
rorb
dec
or
jns
outsl
fnsave
roll
mov
test
inc
data16
cli
dec
fs
adc
ljmp
enter
mov
push
std
into
arpl
jmp
in
mov
mov
rol
jecxz
or
dec
mov
add
dec
or
lea
in
rcrl
stos
mov
gs
mov
mov
adc
mov
test
lea
push
rcl
adcl
imul
les
mov
xor
dec
mov
push
inc
inc
dec
mov
bound
or
stos
lock
mov
mov
mov
sbb
int3
sti
add
add
popa
test
dec
cmp
loope
mov
jecxz
mov
dec
cli
cmc
xchg
add
insb
call
cld
jmp
shll
ljmp
incb
outsb
sbb
std
shll
fsubrl
das
adc
mov
test
cli
insb
add
dec
incb
pushl
mov
add
cwtl
arpl
ret
cmpsl
mov
mov
jmp
into
sub
or
adc
jne
outsb
xchg
into
pop
mov
loope
lods
and
sub
in
stc
push
test
stc
xor
sbb
into
push
pop
sbb
lahf
leave
pop
jo
and
and
fwait
test
clc
jae
or
jmp
in
xor
inc
insb
repnz
filds
cld
add
test
jmp
sbb
add
inc
in
pop
leave
jmp
cwtl
xchg
into
cli
in
or
dec
out
loop
test
test
ret
pop
dec
mov
popa
rolb
aaa
lods
xchg
mov
push
cli
sbb
cmp
mov
jmp
inc
sub
or
push
gs
jecxz
bound
imul
add
adc
xlat
in
in
dec
in
mov
or
fs
pop
mov
mov
add
daa
dec
and
jmp
enter
jb
mov
test
dec
jmp
in
mul
fdivs
lds
pop
and
shr
sbb
lahf
pop
testb
push
add
into
jne
mov
lea
sub
sbb
call
loope
cs
jmp
mov
cmpsl
fcmovne
or
push
stc
popf
loop
push
int3
xchg
js
jo
pop
pop
add
sub
fcmovnb
mov
sub
aam
outsb
mov
sbb
lds
cmpsb
movsb
sbb
rcl
sbb
jecxz
or
stos
jns
xchg
into
outsl
popa
mov
xor
aam
adc
pushf
lods
test
mul
sbb
cs
mov
test
push
and
js
movsl
outsl
or
sbb
int3
sub
sub
cwtl
loop
test
mov
jnp
lds
mov
and
push
or
sti
push
mov
iret
or
mov
add
cli
lock
roll
pop
jmp
lea
pavgb
rcrl
jp
xchg
lock
stos
jo
testb
cmpsl
adc
test
ljmp
cmpsl
repnz
push
stc
out
stos
insl
sub
xor
fcomps
xchg
and
or
or
push
lcall
std
push
cmp
test
std
dec
pop
addb
add
push
icebp
fdivr
mov
fwait
cmp
or
add
push
aaa
aaa
out
inc
in
shll
jmp
cltd
scas
or
sahf
cltd
lahf
adc
adc
or
lcall
xor
xchg
jecxz
push
sbb
jmp
fisttpl
subl
into
sahf
aad
and
jg
rorl
or
loope
push
jecxz
lret
dec
aaa
insl
mov
mov
sbb
dec
push
popa
in
push
aaa
fisubrl
pop
xor
mov
aaa
push
xor
test
and
sbb
sbb
jb
dec
int
mov
add
or
or
out
mov
add
dec
std
and
inc
int3
into
mov
ds
andb
mov
pushf
call
pop
std
pop
mov
dec
mov
in
pop
mov
xchg
loopne
dec
and
pop
mov
ljmp
inc
fmull
insl
mov
call
dec
ja
fidivrl
shlb
mov
add
out
prefetch
inc
jp
xor
add
in
test
adc
ds
push
es
mov
add
xchg
out
nop
mov
dec
call
int3
aam
add
dec
xorb
xor
orl
xor
dec
clc
bswap
icebp
mov
and
stos
daa
jns
movsl
fisttpll
dec
cld
pop
lret
shrb
insb
loope
jo
lea
cmpsl
cmp
jmp
inc
cld
dec
in
addl
in
xorl
rorl
mov
sbb
out
cmp
stc
loopne
lds
rcll
lock
shlb
aam
lock
jno
incb
dec
cmpl
nop
xor
and
shr
test
dec
push
in
stc
stc
or
shl
fmuls
sub
in
lods
xor
cmpl
loopne
fldt
test
neg
sub
sarl
dec
iret
test
fldcw
jecxz
lds
mov
mov
push
mov
enter
movsl
loope
arpl
sub
mov
add
pop
sub
xor
fimuls
iret
add
icebp
lcall
cltd
mov
fucom
lods
loop
jae
lods
cwtl
filds
into
fs
lods
jl
stc
scas
push
adc
fcmovbe
rcr
movsl
adc
scas
and
adc
cmp
ss
loopne
sub
and
stc
lock
sbb
cmc
mov
cli
pushf
je
sti
adc
loopne
in
fs
in
sar
leave
mov
loopne
std
xor
aad
lds
lret
in
in
mov
jl
jne
mov
jns
jl
ret
fucom
int
cmpb
decl
cwtl
sub
pop
in
daa
enter
jo
mov
cmpsb
sub
adc
dec
ja
insb
mov
ficoms
inc
dec
loope
shll
addr16
or
int3
add
pop
cmp
adc
int3
push
lea
pop
insb
loope
jb
shlb
cmp
pop
mov
stc
inc
popa
xchg
lods
int
add
pusha
cmp
push
leave
out
in
sarb
inc
out
or
rorl
aam
out
inc
ljmp
xchg
inc
dec
loopne
xchg
repz
ljmp
sub
sub
iret
add
inc
pop
mov
pop
mov
or
loop
cli
popa
push
lahf
cmpsl
jp
jb
fs
sub
lods
mov
movsl
xchg
andb
xchg
int
stos
dec
loope
aam
jecxz
lret
add
mov
ret
sbb
dec
aad
inc
sti
mov
fstp
mov
mov
into
xor
testb
int
adc
dec
mov
ret
cmc
cld
out
push
in
sbb
add
inc
out
out
xor
mov
flds
mov
cmpsb
dec
jo
out
dec
fs
test
fcmovnb
fisttpll
out
mov
loop
lahf
mov
jl
lods
es
in
rorb
add
rcrl
std
out
mov
jo
add
stos
imul
into
push
jnp
movsl
mov
lds
mov
dec
inc
mov
jnp
movsb
arpl
fisttps
clc
jae
and
pop
sub
data16
dec
loope
testb
mov
inc
jp
xchg
mov
xchg
fisubrl
dec
fidivs
popa
fisubs
push
mov
sbb
sub
mov
pop
std
mov
ja
pop
cwtl
or
movsl
stc
adc
rorb
xchg
jno
lret
add
cmpsb
pop
int
sbb
cli
bound
imul
xchg
fadds
testl
cmp
adc
pop
lods
and
test
or
mov
jge
mov
add
or
mov
jne
repz
cmpsl
or
movsl
cltd
loopne
sub
arpl
adc
fbstp
shll
mov
jb
test
in
cmp
mov
cltd
pop
test
mov
mov
fld
shr
movsl
mov
cmp
dec
std
mov
int
or
cmp
mov
xor
jp
test
lock
scas
loope
std
fcoms
pop
sbb
or
cmp
outsb
out
pop
imulb
and
cli
repnz
push
in
leave
cmp
xor
jb
sbb
frstor
and
fldl2t
in
mov
mov
aad
rorl
dec
loop
dec
cmpsb
mov
adc
lods
sbb
lods
push
or
push
movhps
scas
jne
movsl
cmc
xor
mov
mov
test
andb
xchg
test
dec
sti
mov
push
std
cmc
or
in
push
sti
mov
mov
cmpsl
std
sbb
imul
mov
dec
int
push
pop
mov
cltd
mov
movsb
cmovl
cmp
mov
pop
gs
adc
int3
sub
jno
leave
cli
lcall
push
push
pop
mov
add
mov
rorb
jl
inc
cmp
outsl
or
mov
mov
psrad
dec
popf
mov
push
fisubs
adc
call
mov
or
fdiv
cmc
stos
fcmovbe
orl
fldt
dec
mov
dec
int3
push
sbb
sbb
pushf
ljmp
adc
dec
dec
cmp
jge
pushf
xchg
and
inc
shrb
cmp
adc
loope
xchg
in
lock
jns
and
pop
nop
imul
cmc
or
notl
mov
add
scas
jnp
or
fcmovb
lcall
cmc
sub
pop
mov
xchg
add
and
shrl
cmpsl
push
dec
pusha
fists
sub
adc
dec
dec
mov
lret
pop
xchg
lods
cmc
movsb
xchg
adc
mov
aad
cltd
add
push
insb
iret
int
in
mov
push
mov
mov
out
xor
out
int3
insl
jecxz
mov
push
xchg
icebp
mov
repz
or
xchg
sbb
xchg
push
nop
icebp
call
loop
aad
mov
add
or
movsl
mov
mov
dec
jmp
mov
es
ss
fs
jecxz
movsl
jp
xchg
rcl
jl
xchg
nop
incl
dec
sbb
sti
cmpsl
mov
and
lahf
push
cmp
clc
jmp
aam
lds
cld
mov
push
jmp
ljmp
insb
add
or
xlat
or
jb
push
adc
dec
movsl
inc
int3
lret
add
xor
jp
xor
push
xchg
insl
test
fnsave
jnp
fldcw
xor
std
dec
jmp
mov
add
outsb
jae
mov
jmp
jo
or
push
daa
jnp
mov
jnp
add
outsb
mov
jns
dec
xor
popf
ret
rorl
mov
arpl
or
stc
sbb
add
inc
fstps
mov
nop
mov
inc
test
push
sbb
cwtl
mov
sti
sbb
lret
mov
cmp
mov
mov
leave
add
lret
push
test
insl
pop
push
mov
inc
mov
ljmp
add
xchg
cmpsl
add
mov
jb
cli
pop
stos
loop
iret
mov
lods
repz
cltd
sub
aaa
fsubl
add
flds
mov
ss
jecxz
movsl
dec
and
rorb
popa
roll
test
dec
movsb
cld
insb
pushf
int
loop
mov
pop
mov
xor
pop
arpl
insb
jl
sti
imul
test
cld
dec
shll
jle
mov
leave
fstpl
add
xchg
idiv
imul
sahf
loope
dec
in
inc
lret
into
repz
imul
mov
push
in
inc
mov
scas
scas
aad
add
xchg
or
jne
jmp
sbb
aas
pop
icebp
out
mov
cmp
xor
or
and
adc
sub
sub
mov
cmp
aad
mov
jecxz
xlat
stc
jns
popa
sbb
std
jns
popa
sbb
jecxz
in
sbb
or
add
mov
dec
cli
lcall
jmp
xchg
mov
xchg
mov
mul
shll
stc
aad
cmpsl
jmp
mov
cmp
lods
loope
jae
push
cld
sbb
pop
mov
dec
dec
mov
popf
out
xchg
pop
jp
mov
xchg
jno
arpl
mov
repz
lahf
scas
add
mov
mov
decb
adc
ss
and
pop
shl
test
lea
dec
flds
stc
mov
pop
std
dec
pop
lret
subb
inc
out
xchg
stc
rcrl
shr
mov
mov
mov
mov
push
cmp
int
mov
out
repnz
jp
stos
incb
pop
adc
repz
sti
add
inc
mov
fidivl
movsb
shlb
fcomi
and
xchg
jnp
inc
decl
outsl
pusha
decb
mov
push
push
jg
pop
add
mov
fucomip
enter
lcall
popa
rcr
mov
stos
push
rclb
xor
mov
popf
popf
shl
faddp
cmp
dec
or
scas
mov
cwtd
repz
cltd
adc
insl
shll
nop
mov
imul
loope
sbb
and
outsb
loope
movsl
int3
sub
push
icebp
ljmp
pushw
dec
or
xlat
test
shlb
aad
push
addl
lock
stc
and
or
xor
mov
xchg
and
lret
push
cmp
pop
aam
stos
js
push
repnz
sbb
xlat
xor
les
cmp
push
and
or
hlt
mov
push
sbb
inc
mov
mov
in
out
icebp
sub
push
lds
add
add
out
add
test
js
sbb
fmull
popa
mov
test
addr16
and
outsl
cld
mov
mov
jmp
clc
inc
jns
cli
scas
sub
fcom
mov
mov
lods
add
add
out
mov
mov
std
xor
in
in
mov
add
xor
mov
inc
fmuls
sbb
push
mov
loope
xchg
ret
pop
cmpsl
notl
jg
in
mov
lock
adc
add
std
negl
ret
rcrl
fildll
jno
ja
push
sbb
dec
jmp
js
iret
mov
ja
jmp
mov
test
push
sub
orb
scas
xor
cmp
outsb
lds
xor
jns
stos
inc
orl
andb
adc
in
inc
in
cld
std
inc
loope
in
jbe
inc
mov
addl
pop
xchg
lea
or
add
std
xchg
shr
sbbl
in
mov
fldcw
dec
aad
dec
incb
xchg
ss
ja
mov
in
lea
insl
add
vphsubdq
test
adc
lahf
fisubrs
repz
ret
mov
push
jp
addb
xor
mov
push
lock
mov
dec
loope
pop
mov
xchg
sarl
and
jnp
ljmp
or
std
or
and
or
and
mov
repz
and
insb
cmpsl
push
adc
cmp
std
xor
aaa
jne
bound
scas
or
out
aaa
std
lea
rclb
cmp
lret
out
cmpsl
shr
mov
inc
iret
cld
fs
lds
dec
xchg
loope
inc
xchg
repz
cmc
movsb
lret
loopne
fdivs
test
pop
or
or
lock
aam
jns
mov
daa
orl
js
shl
ror
push
lods
call
cmp
pop
aaa
shr
rolb
in
jns
jg
jmp
imulb
dec
rorb
arpl
enter
sub
mov
stos
jge
ret
mov
inc
sub
fsubrl
pop
testb
mov
fnstenv
pop
xlat
mov
imul
mov
arpl
popa
mov
lret
mov
mov
out
lahf
cld
adc
mov
cmp
xorl
xchg
movsb
add
add
test
imul
cli
popa
cltd
dec
adc
jmp
ficoml
inc
mov
inc
jne
repz
lds
lock
es
mov
and
in
int3
xchg
aas
or
cli
sub
pop
ret
cld
and
add
xlat
or
inc
dec
sub
shl
xor
sbb
std
cmp
data16
mov
fists
mov
jecxz
lea
enter
adc
sti
xor
filds
cld
notl
sbb
mov
push
icebp
ret
pop
cmc
jecxz
and
ja
outsl
push
xchg
mov
mov
push
fidivl
in
sub
fstpl
pop
das
lock
dec
add
loop
cmpsl
mov
lods
gs
pop
adcb
shrl
dec
popf
jb
mov
out
cmc
pusha
dec
mov
fstpl
insb
xchg
ret
or
daa
mov
sbb
pop
lea
xchg
ss
pop
mov
cmp
mov
add
push
in
pop
push
add
add
and
sub
push
push
mov
add
sub
add
jmp
mov
cmp
mov
enter
inc
mov
mov
or
and
ret
hlt
popa
clc
int
movsl
mov
jle
iret
xor
or
cmpsb
loopne
sbb
in
xchg
fsubp
lds
int3
sub
addr16
ffreep
ljmp
popf
loopne
sub
jns
js
xor
mov
nop
inc
aam
loopne
push
add
cmovs
fs
stc
and
xor
fnstcw
mov
push
repnz
imul
sbb
pushf
mov
push
adc
and
xor
cmpsl
push
popa
sbb
adc
dec
inc
sti
dec
mov
dec
nop
incl
pop
out
loope
insl
int3
xchg
popw
add
hlt
clc
leave
ljmp
test
pop
add
push
or
scas
aad
xor
xchg
sub
add
daa
enter
cwtl
mov
fwait
lret
in
add
mov
les
add
and
cld
mov
cmpsl
in
fs
pop
push
shrl
add
inc
loopne
and
dec
ret
fidivl
loopne
sarl
jecxz
and
ja
sbb
cmp
mov
lret
and
sti
jo
scas
in
ja
xchg
data16
lds
shrl
dec
loope
jmp
push
push
cmp
clc
dec
mov
fucomi
loopne
mov
or
aam
std
fisttps
flds
int3
cmp
subb
mov
aam
push
fstpt
cmc
pop
lea
mov
lods
mov
push
inc
scas
ds
dec
test
or
loope
repz
je
mov
ror
mov
or
xor
mov
add
jecxz
iret
in
fdivrl
divl
mov
and
clc
addb
loop
and
data16
mov
dec
mov
sub
sbb
mov
add
pop
lods
int
jmp
js
mov
jp
jg
mov
lcall
imul
push
mov
outsb
dec
frstor
jno
mov
icebp
int
mov
jno
xor
fs
mov
or
push
fnstcw
adc
in
daa
lds
ficoms
imul
jnp
into
xchg
pushf
sahf
pop
inc
clc
adc
in
test
mov
pusha
aad
out
cmp
inc
push
lock
cmp
dec
and
iret
out
movsb
sub
or
and
dec
repnz
into
pop
decb
adc
stc
sub
ret
or
and
mov
mov
jo
push
adc
dec
mov
aaa
loopne
add
mov
and
sbb
fs
jne
jo
in
stos
mov
jle
movsb
sub
test
out
and
adc
aam
adc
std
cmp
lret
pop
cmpsb
mov
mov
arpl
ret
mov
xchg
imul
stc
pushf
orl
pop
jmp
xor
in
cmp
dec
push
mov
mov
sub
pop
stc
andb
loope
pop
xchg
add
inc
xor
mov
cmp
pop
cmp
push
xchg
repnz
js
fucomp
add
ret
ret
and
cmpsb
popf
in
cltd
xor
push
scas
mov
sbb
jg
popf
lahf
inc
data16
and
adc
cmp
mov
sbb
jae
xor
mov
jbe
cltd
sbb
loopne
mov
xchg
jecxz
jns
adc
imul
mov
arpl
cmp
call
push
xchg
in
jmp
div
jl
ret
out
xchg
je
push
out
dec
fsubrl
push
sub
xchg
add
aad
popf
mull
xchg
repnz
pop
fadds
gs
data16
data16
sub
gs
mov
push
add
pop
vmwrite
add
les
pop
xchg
mov
mov
jmp
dec
fs
xchg
rorb
scas
in
sbb
pop
jg
pop
lods
add
cmp
sti
sahf
mov
pop
adc
jl
pop
lahf
popa
bound
mov
ret
xor
xchg
sbb
mov
mov
adc
mov
cmp
mov
add
xor
sub
loopne
jo
in
dec
out
cs
imul
loope
xchg
push
and
iret
icebp
xchg
mov
fdivs
push
inc
jge
das
bound
add
lcall
loope
xchg
shrl
scas
clc
into
shl
inc
fisubs
enter
cmpsb
cmpl
add
call
test
insb
push
cli
jmp
sti
push
ldmxcsr
push
add
data16
cltd
pop
adc
out
dec
out
add
mov
test
sahf
ds
nop
mov
push
push
out
or
adc
int
mov
fs
mov
mov
push
pop
jecxz
adc
loop
iret
xchg
out
cli
and
test
pop
xor
mov
dec
mov
lret
mov
js
fs
ficoms
xor
repz
pop
lds
mov
pushf
rol
adcb
fnstcw
mov
pop
imul
fimuls
int3
sub
fistps
and
sub
mov
or
adc
scas
sbb
addr16
dec
dec
inc
dec
paddusw
ret
int3
sbb
stc
dec
int3
in
xor
jnp
xchg
dec
movl
sahf
ja
std
call
mov
mov
addl
sbb
cwtl
pop
mov
xchg
fcmovnu
data16
out
mov
xchg
insl
jae
mov
out
pop
es
add
leave
xor
xor
addr16
dec
jnp
adc
icebp
cwtl
in
dec
and
pop
dec
shll
in
data16
lock
or
xorl
push
mov
cld
popa
leave
fs
in
dec
inc
shr
push
fiaddl
ret
cwtl
jge
fs
in
std
jmp
or
xchg
aad
cli
addr16
enter
mov
xor
and
mov
mov
dec
clc
cmp
aas
xor
mov
cmp
dec
jmp
and
sbb
roll
dec
in
shlb
pop
cs
hlt
push
test
xor
xchg
push
ret
pop
cli
aad
popf
or
fadds
inc
fcomps
cmp
std
stc
push
dec
in
mov
sub
push
add
inc
pop
cmp
cmpsl
push
fisubrs
mov
jmp
jns
and
data16
pop
cmp
xor
and
push
in
fiadds
ds
cld
mov
push
and
mov
cmpsl
lods
push
push
jne
dec
lock
mov
idivl
cld
jmp
add
xor
jo
or
push
aaa
outsb
imul
outsl
aas
dec
sub
std
inc
mov
push
sbbl
mov
pop
pop
mov
sbb
ja
popf
decb
jno
add
xor
jmp
sahf
push
out
ja
push
jge
push
fs
mov
xchg
mov
roll
mov
push
sub
sub
fcom
push
es
inc
sub
xchg
cmpsb
idivb
and
sub
lods
icebp
enter
and
imull
dec
jmp
loopne
lahf
jne
and
pop
test
cs
or
mov
mov
adc
or
subb
cmpsb
and
jmp
frstor
fs
dec
cmp
out
imul
loopne
lods
inc
fildl
sbbb
lret
pop
movsl
cld
push
fisubrl
stc
cmpsb
push
fistpll
lcall
dec
pop
fsubl
loope
xlat
pop
push
nop
push
cs
out
les
movsb
push
pop
test
les
into
inc
mov
fnsave
jo
or
rolb
inc
in
cwtl
sub
push
out
loope
arpl
jns
repnz
jb
push
std
rcrb
stc
loopne
frstor
dec
ja
pop
xchg
xor
into
repz
xor
pop
lock
int3
inc
lock
or
out
in
dec
jmp
mov
sbb
les
mov
lods
bound
mov
scas
fs
mov
scas
add
dec
sti
jle
movb
push
mov
cmpsl
shr
add
pop
mov
out
lock
sbb
mov
scas
or
stc
repnz
in
mov
mov
sarb
mov
sbb
in
out
mov
lds
mov
cs
std
popf
cmp
fs
loope
cld
loop
sti
jb
jno
aas
push
ja
jle
mov
cmc
inc
jmp
pusha
arpl
push
in
adc
xchg
mov
pop
sbb
jmp
adc
or
xor
xchg
sbb
insb
cli
aam
out
or
insl
cmpsb
jmp
fimull
cmp
sbb
mov
inc
movsl
mov
loope
add
icebp
ja
fmull
mov
sub
fmull
add
nop
jmp
shlb
push
sub
mov
mov
in
outsl
push
sbb
repz
loope
add
cld
faddl
cmpsl
cld
sub
mov
sub
sbb
bound
jo
jae
ja
mov
imul
xor
and
loopne
dec
cmp
inc
jmp
cs
vpexpandb
loop
adc
xor
and
pop
popf
rorb
mov
dec
nop
pop
mov
lret
fmuls
jno
mov
xchg
dec
int3
cmc
mov
pop
repz
lahf
insb
mov
lret
imul
xchg
xor
xchg
out
fdivl
lret
ja
xlat
test
mov
jnp
addb
roll
mov
push
ljmp
outsl
sub
jbe
in
push
push
sub
lea
arpl
in
ret
mov
lods
and
rorb
lea
mov
sysexit
fdivrs
jo
data16
loopne
je
cwtl
and
mov
cmp
dec
jmp
repnz
lods
lods
in
popf
test
sub
mov
jle
mov
cld
out
dec
cmp
inc
out
aad
ds
in
cmpsl
call
pop
add
incb
std
push
fscale
and
imul
add
mov
inc
ljmp
mov
ret
imul
dec
and
incb
mov
sbb
fmull
wbinvd
sar
addr16
lret
inc
xlat
ja
jg
pushf
inc
mov
xchg
dec
cmpsl
aad
push
ja
lods
mov
jno,pt
pop
add
in
jl
jmp
dec
sbb
fs
mov
mov
cmp
cmc
scas
out
ljmp
dec
pause
pop
mov
int3
push
mov
ror
cld
xor
testb
pop
imul
sbb
mov
hlt
sub
push
call
nop
scas
addr16
ret
int
push
xchg
mov
popf
push
loope
test
or
add
hlt
imul
inc
je
imul
popa
push
mov
mov
arpl
popf
sti
sbb
sarb
scas
inc
out
jecxz
test
imul
fwait
xor
mov
loop
fs
dec
pop
cmp
and
sub
dec
add
and
scas
push
push
js
pop
std
add
call
and
xchg
sub
jbe
xchg
aad
fcom
and
mov
les
in
loopne
out
in
push
pop
mov
adc
dec
add
push
aaa
push
les
mov
shl
mov
fisubrs
aad
mov
lods
sub
fisubl
xchg
js
xchg
sub
cmp
push
ss
dec
mov
pop
daa
mov
mov
push
add
mov
mov
mov
sub
out
xchg
test
mov
pop
loop
outsl
dec
into
in
aad
cmpsb
popf
nop
std
decb
jge
outsl
jmp
sbb
cmp
lret
dec
flds
in
int3
push
out
mov
movsl
fisubl
mov
in
addl
aad
mov
and
or
shll
mov
lock
cmc
xchg
addl
loope
aaa
test
cmp
mov
xchg
ja
int
loope
into
jmp
push
dec
jmp
aad
notb
pop
ficomps
mov
xrelease
push
int3
in
orl
aad
out
lods
sbb
jno
in
push
mov
xlat
mov
mov
xchg
dec
push
scas
mov
push
jno
sti
fincstp
mov
inc
inc
sbb
in
jecxz
xchg
mov
ret
sub
sti
aas
lods
mov
mov
add
mov
jno
mov
fldl2t
hlt
cmpxchg
dec
aas
jmp
xor
jo
pop
ret
jno
psrlq
lret
mov
loope
sti
subb
pop
andl
popa
mov
mov
xor
jmp
push
or
hlt
stc
xchg
add
jge
xchg
les
scas
sub
dec
mov
add
mov
popa
enter
je
mov
mov
mov
in
sub
mov
repnz
sahf
mov
mov
fucom
loop
jmp
mov
stos
mov
pop
or
and
mov
popa
shlb
dec
std
shl
leave
cmpsb
pop
cli
stc
fmuls
ror
mov
dec
sub
pusha
mov
lds
xchg
mov
std
or
xor
scas
divb
les
push
ljmp
popf
int
into
stc
fldcw
sub
in
mov
pop
mov
out
mov
add
icebp
pusha
int
mov
jmp
dec
in
les
dec
stos
aas
roll
cmc
cwtl
dec
sub
outsl
fimull
sub
repz
icebp
push
lods
fimuls
mov
inc
dec
mul
repnz
dec
jo
dec
mov
out
loopne
adc
scas
add
xlat
push
lret
ljmp
mov
add
add
mov
and
lds
fdivl
rolb
dec
fisubl
mov
fcoms
inc
imul
js
inc
pop
sbb
sub
cmp
outsl
push
clc
xchg
jge
rcll
cld
rcll
pop
pop
les
mov
outsb
mov
mov
pushf
les
test
dec
push
cmp
or
push
imulb
jp
rcll
mov
push
xor
lea
xor
xor
movsl
cld
mov
ret
mov
jb
sbb
std
xorl
and
cltd
pop
shr
jge
shll
jo
jne
imul
movsl
shll
repz
mov
xchg
ret
test
dec
sbb
sbbb
stos
cmpsb
add
xor
icebp
or
aad
xchg
lds
push
pop
data16
int
mov
pop
inc
sub
stc
mov
icebp
popf
sub
jo
or
mov
or
sub
cld
cmp
test
mov
mov
movsb
mov
adc
push
leave
or
cmp
lds
insb
fptan
and
fnstenv
mov
jecxz
in
icebp
sub
aas
nop
sub
stc
cmp
das
rcrb
lods
xor
push
cld
shlb
dec
enter
popf
mov
das
xlat
push
jecxz
pop
enter
loopne
jecxz
pop
rcrb
xorl
push
cmp
push
loop
shlb
aas
fmull
jns
aad
repnz
or
add
ds
fstp
or
int
scas
pop
mov
pushf
or
imulb
or
xor
movsl
clc
xchg
popa
iret
cmp
and
mov
jg
sti
mov
dec
jge
outsl
add
cltd
mov
aaa
push
stos
xchg
adc
in
and
mov
push
push
sbb
mov
xchg
adc
mov
add
movsb
ret
shr
inc
mov
out
dec
fimuls
addr16
data16
paddsb
jns
popa
incl
enter
mov
sti
shrl
stc
push
jbe
pop
mov
pop
mov
rcrb
fiadds
imul
jle
pop
cmpsb
adc
aam
int3
mov
ljmp
dec
and
stc
aad
mov
cltd
push
std
pop
testb
ret
cmp
xor
enter
cwtl
je
aaa
std
nop
pop
inc
adc
mov
aaa
or
enter
repnz
xorl
flds
mov
negl
out
mov
inc
pop
and
inc
adc
std
popf
in
icebp
jg
fs
mov
addb
cmpb
cli
xor
sub
push
in
pop
rolb
inc
stc
cmovbe
addr16
std
mov
das
cmp
jns
iret
inc
arpl
std
lret
frstor
lret
loop
je
mov
arpl
popf
lahf
mov
scas
xor
fdivrl
icebp
cmp
cmpsl
jl
push
into
adc
push
imul
jo
fs
add
xor
in
movsl
cs
test
and
push
cmp
jnp
mov
or
mov
jge
jns
mov
mov
mov
enter
out
cmpl
xor
mov
dec
add
mov
pop
jmp
sar
pop
hlt
cmp
mov
pushf
fs
lret
sbb
pop
push
mov
sub
icebp
sti
in
in
fucom
push
lea
je
fdivp
popa
pop
inc
test
notb
lock
pop
jnp
stc
fwait
int3
sahf
arpl
out
push
lds
ret
fnstenv
jmp
mov
or
jmp
inc
hlt
pop
ret
popa
jae
mov
fimuls
fnstcw
add
sbb
mov
in
inc
mov
pop
mov
push
mov
or
mov
or
sbb
shrl
xchg
addl
jge
aaa
rcrl
je
rorl
pop
imul
sub
ss
dec
in
or
adc
pop
pop
lcall
jbe
fldl
lods
sti
lcall
aas
and
dec
pop
test
dec
sbb
mov
stc
ret
lret
andb
out
sub
bound
dec
xchg
lahf
sarl
cmpsb
mov
andl
adc
int
mov
mov
jmp
rolb
into
insl
jle
popf
add
nop
outsl
std
in
fbstp
push
addr16
rol
pop
fucomi
add
popa
adc
and
mov
lods
out
cmc
std
mov
and
xor
rcrl
rcrb
pushw
sbb
fiaddl
jne
inc
push
scas
lcall
jb
mov
mov
cmp
mov
icebp
popf
xchg
mov
adc
xor
dec
push
ds
mov
outsb
outsb
push
lret
sti
or
pop
nop
jl
lock
outsb
in
icebp
jl
popf
out
xchg
lret
xchg
test
pop
jne
dec
ret
mov
mov
mov
mov
loop
sub
xlat
in
mov
pop
mov
jg
aad
mov
mov
and
cmpb
lea
push
test
pop
loopne
fs
add
sbb
sub
push
test
fisubl
gs
or
adc
pop
int3
out
lods
popf
shr
repz
sti
repnz
mov
out
shlb
cmp
jmp
add
icebp
push
loope
push
add
jb
add
rolb
jae
lret
filds
dec
cmc
mov
and
movsb
jle
sub
fwait
inc
fucomi
cmpsb
ss
jno
fwait
out
loop
mov
pop
pop
pop
adc
pop
mov
fsts
outsb
push
std
add
movsl
stc
addr16
cmpsl
jmp
lds
and
mov
mulb
jnp
fxtract
loop
aam
rcrb
daa
jns
lock
data16
out
jmp
scas
iret
adc
movsb
nop
push
ret
xor
sub
popa
push
cmpsl
ret
rorl
rolb
jo
mov
mull
cmpl
cltd
and
adc
dec
fimull
gs
jno
jns
cmp
imul
aam
cmp
lret
ds
lock
call
roll
in
push
ficoml
xchg
out
jno
jg
mov
fsubrs
jae
xor
mov
mov
popa
jae
lahf
push
mov
loope
mov
xchg
rcrl
add
cmp
out
loope
mov
leave
repnz
jns
sbb
insl
mov
fnstenv
pop
out
fdivrp
pop
lret
jecxz
icebp
enter
in
sub
cli
mov
clc
pop
into
shll
lods
jo
push
push
push
cmp
add
imul
jno
sub
cld
mov
jge
fdiv
xchg
xor
dec
dec
stc
or
je
dec
jg
inc
in
add
leave
dec
xchg
fisttpll
idivb
shrl
aam
decl
icebp
jge
lods
sub
add
repz
and
ja
xchg
mov
add
enter
push
aas
push
ja
jb
call
jb
arpl
xchg
and
movsb
pop
ret
repz
mov
sti
data16
fucompp
notb
lret
testb
dec
fldl
sbb
fcmovnbe
js
in
clc
mov
dec
dec
push
lea
enter
sub
mov
int
adc
test
ja
sub
aad
cmp
sbb
cld
and
cmp
cld
pop
jno
xchg
popf
popf
lcall
cmc
stc
popl
rorb
rclb
das
in
in
les
fisttps
cmp
cltd
jae
aam
js
dec
jl
ret
ficoml
or
gs
push
inc
sarb
mov
sbb
sbb
pop
fcomps
int
xchg
sub
mov
sbb
leave
xchg
mov
sahf
push
xor
jb
mov
rorl
cmp
insl
sarl
add
scas
jnp
xchg
popf
or
xchg
outsb
dec
pushf
fisubs
sbb
sub
pushf
inc
add
imul
push
mov
dec
rolb
shr
roll
in
arpl
outsb
sarb
jae
es
pop
out
jge
movl
cmp
gs
inc
mov
pop
mov
xchg
push
pusha
cmpsl
gs
and
xchg
push
mov
cmp
incl
mov
mov
xor
add
ret
nop
in
movsl
jge
mov
aaa
sub
xchg
mov
std
movsb
mov
pop
mov
arpl
mov
pop
divb
dec
pop
cmpsl
lea
push
data16
jge
clc
popf
mov
notb
enter
mov
lret
dec
jb
sahf
jg
inc
xchg
push
and
dec
loop
sbb
jle
imul
jecxz
fs
jae
fwait
stc
mov
in
pop
mov
jbe
lods
cs
sti
jae
in
xchg
add
xor
not
jg
fldz
mov
dec
adc
insb
std
test
insb
cmpsb
fcomp
popf
test
xchg
dec
lods
jmp
out
jecxz
mov
mov
pop
xchg
data16
xchg
sub
mov
mov
test
mov
pop
mov
pop
out
mov
add
push
dec
adcl
dec
add
mov
jo
jle
popa
int
call
fistpl
fs
push
jbe
in
aad
int
push
stos
cltd
int3
add
int3
data16
push
sbb
push
jbe
add
leave
xchg
mov
sbb
lret
test
sbb
add
push
adc
mov
pop
adc
cmp
std
adc
inc
jo
loope
cmp
push
inc
jmp
out
ficoms
bound
in
fbstp
xchg
xor
or
adc
add
add
mov
ficoml
scas
and
dec
sub
in
adc
or
repz
jle
dec
mov
mov
lea
dec
in
mov
mov
psllq
dec
data16
cli
ss
stos
sbb
or
std
mov
cmp
xchg
stos
jnp
ds
mov
push
js
lods
dec
dec
push
iret
loope
adc
or
arpl
xor
jne
pop
cmp
js
xor
dec
adc
int
cmpsb
stc
pop
test
lea
mov
data16
mov
lods
ljmp
repz
xchg
push
push
fdivl
aas
xlat
cs
jo
loopne
pop
push
out
sbb
int
orb
add
sbb
mov
xchg
fld
inc
sbb
std
xor
and
adc
int
fsubs
jle
mov
adc
shrb
push
leave
xchg
test
xchg
mov
pop
dec
add
jmp
daa
mov
repz
cmp
call
fidivrl
ja
mov
ss
push
xchg
mov
mov
push
dec
in
pop
cmc
jmp
js
hlt
ds
xchg
clc
sub
clc
mov
inc
push
push
in
lds
int3
movsb
dec
out
jg
nopl
les
repz
loop
shl
add
out
mov
or
mov
mov
fiadds
fdiv
inc
pop
stos
pop
lods
fdivrp
xorb
mov
cli
pusha
xor
cmc
cmpsl
mov
movsb
push
loope
nop
pop
nop
mov
movb
and
adc
push
jbe
lea
jno
mov
sbb
fstpt
sahf
lea
loopne
mov
sub
outsb
roll
out
jb
movsb
rcrl
cld
sbb
mov
aad
clc
xlat
ret
movsl
and
loopne
xchg
push
imul
sti
aas
stos
push
test
mov
incl
cmp
adc
add
dec
aad
icebp
icebp
xchg
stos
push
test
pop
lea
mov
jns
jge
std
cmp
lods
sub
decl
in
or
leave
out
mov
rclb
lock
fldenv
lock
jne
icebp
ja
sti
sbb
fisubs
mov
aad
mov
dec
sbb
fimuls
negl
test
mov
add
mov
int3
mov
jl
sub
lods
lods
or
leave
mov
popf
rcl
orl
inc
dec
sbb
dec
adc
mov
xchg
jge
add
xchg
add
mov
cwtl
stc
mov
outsb
outsl
mov
inc
dec
jb
imulb
lods
mov
jo
mov
push
test
or
mov
and
in
das
data16
fcoms
mov
jge
xlat
pop
pop
rcrl
movsl
adc
repz
sbbl
dec
jb
dec
jmp
sbb
cmp
scas
nop
fcompl
aaa
std
nop
jl
pushl
out
test
dec
mov
addr16
pop
sahf
and
int3
popl
inc
xlat
mov
pop
roll
add
sarb
es
inc
sbb
mov
ljmp
incb
fwait
mov
test
movsb
cmpb
mov
aad
sub
pop
xchg
std
fstps
loopne
sbb
fwait
mov
int3
pop
stc
mov
xchg
pop
subb
mov
mov
roll
adc
fisttpll
push
and
out
jecxz
jmp
cmpl
shll
xchg
sar
aam
jl
nop
sub
pop
sbb
icebp
dec
pop
adc
adc
dec
lahf
pusha
jg
in
cmp
jbe
lahf
cmp
xchg
add
add
sbb
xchg
mov
cmp
iret
dec
hlt
dec
test
dec
adcl
adc
out
or
xchg
sub
push
flds
dec
cmpsl
fs
je
movsb
in
sti
xor
loopne
pop
aad
add
adc
dec
ds
dec
movsb
repnz
daa
xlat
jge
and
xor
jmp
fstl
enter
out
dec
scas
lods
sbb
rcrb
pop
cli
insl
ljmp
stos
add
loope
out
push
pop
sarb
cli
rorl
lods
call
dec
or
mov
fucomp
sub
cmp
lds
out
mov
pop
ret
push
xchg
stc
shlb
push
sub
sub
push
xchg
mov
inc
sti
sub
fiadds
and
pusha
xchg
lds
inc
in
or
add
xchg
mov
xchg
aas
xorb
ljmp
lahf
popa
test
fisubs
std
cmpsb
pop
lock
mov
dec
out
addr16
cli
les
jns
add
rcr
lods
pop
ret
jb
mov
cwtl
in
mov
sbb
arpl
ljmp
pop
xor
jmp
fchs
xchg
out
lret
mov
sarl
int3
mov
ja
stos
ljmp
cmpsb
enter
dec
popa
les
and
pop
lods
nop
out
adc
ficompl
dec
and
aam
outsl
cmp
add
stc
in
lret
add
pop
xchg
imul
ret
popf
adc
leave
cmp
shrb
shl
push
cmp
lds
sub
mov
cltd
loope
sub
call
in
push
rcrl
pop
lods
inc
movsl
push
pop
xchg
xor
mov
sub
cld
ret
mov
cmp
adc
fwait
int3
incl
sub
imulb
lret
add
mov
hlt
adc
sub
enter
or
xchg
jmp
xlat
sbb
adc
cmp
lret
jge
inc
dec
int3
sub
lods
jo
in
rcrl
outsb
and
push
push
mov
je
or
cli
and
outsl
stc
pop
clc
add
fmul
jns
mov
ljmp
stos
enter
mov
sub
inc
pop
out
cs
add
pop
xchg
out
mov
arpl
cld
dec
jno
or
popf
add
fwait
mov
pusha
nop
mov
rcr
movsl
mov
inc
fisubl
je
dec
add
mov
fwait
jo
mov
jno
jne
in
shrl
mov
mov
mov
jns
mov
ljmp
sub
shll
cmp
hlt
mov
pusha
lret
cmp
push
add
les
cmp
jmp
out
fnstsw
pusha
stos
xor
imul
and
lahf
or
arpl
clc
sarb
and
inc
sub
lret
mov
outsl
cmp
scas
inc
aam
add
jno
sub
pop
pop
dec
and
daa
inc
cmpsb
and
pmaxsw
ss
orb
sbbl
sarl
sub
icebp
cli
xchg
mov
movsl
mov
es
cltd
sbb
sub
pop
in
scas
lock
mov
loope
jmp
push
inc
shlb
mov
or
sub
jne
dec
rorl
fnstsw
xchg
insb
cmp
and
jmp
ficoml
jle
popa
xor
push
stos
or
mov
fadd
out
lods
mov
push
sbb
out
mov
pop
rclb
dec
push
fwait
std
sbb
fistpl
pop
fsub
push
pop
jae
xchg
and
aad
or
jns
dec
test
andl
popf
test
jecxz
addb
test
repnz
jbe
mov
add
sahf
push
std
and
lret
fidivs
test
orb
sbb
cmp
test
enter
mov
loope
xchg
inc
or
xchg
push
cs
sub
sub
shll
dec
stc
test
pop
jmp
add
adc
add
inc
dec
xchg
add
inc
aad
shll
cld
pusha
jmp
ret
jne
sub
popf
in
test
add
scas
pop
push
mov
nop
sti
stos
or
hlt
shll
enter
mov
mov
xchg
aam
loope
jp
cld
or
outsb
clc
scas
xchg
rorl
mov
shl
sub
mov
cmpb
sbb
cmpsl
loope
pop
dec
adc
mov
jno
call
data16
loop
into
pop
push
lret
fmull
test
int3
push
jns
vpaddb
mov
push
and
jmp
dec
sarb
lea
pop
mov
fiaddl
aaa
cwtl
adcl
popa
out
mov
push
jmp
xchg
jl
mov
movsb
sub
fs
jo
jae
out
xor
and
or
mov
int
in
cmpsw
or
addr16
sti
mov
jbe
jmp
mov
mov
lcall
pop
in
sbb
pop
push
scas
lahf
mov
pop
pop
mov
add
and
push
movsb
insl
xchg
mov
jo
clc
lock
rcl
pushf
jnp
inc
adc
cmpsl
adc
das
imul
mov
xchg
dec
nop
mov
add
lea
orl
xor
sub
jp
lret
ja
mov
fwait
call
adc
call
movsl
fisubrs
push
push
gs
mov
jmp
push
sub
dec
mov
sbb
in
stc
ljmp
inc
das
cmc
test
std
sarl
dec
xchg
stc
mov
idivl
and
es
mov
pop
movsb
out
lahf
cs
jae
push
or
imul
in
mov
cmc
add
cmp
mov
inc
jle
pusha
cltd
in
mov
mov
aad
cld
mov
js
add
pop
in
or
dec
add
out
jge
std
imul
push
xor
mov
sarb
test
xchg
aaa
cmpsl
inc
jo
cmc
mov
in
movb
mov
ljmp
shlb
cli
mov
lods
shl
lahf
cmp
aas
shl
std
push
rcr
inc
mov
std
mov
xor
jmp
ja
rcr
sub
mov
fisttpll
push
mov
push
fs
in
xor
shrb
pushf
adc
cmpsl
test
mov
cltd
mov
shr
lcall
jno
in
std
push
inc
mov
jecxz
inc
mov
fcomp
ss
add
and
in
stc
pop
shrb
jge
mov
inc
inc
imul
inc
push
dec
add
enter
jge
pop
out
jl
pop
sbb
pop
pusha
test
fiaddl
fsubrl
inc
jle
insb
mov
movb
mov
jecxz
fistps
nop
fcomps
push
lahf
lods
mov
dec
push
cmp
xchg
jne
mov
fldl
cwtl
cmpsb
xchg
cld
push
xor
sbb
jnp
inc
xor
cmpsb
shll
xor
int
cmp
fcompl
aas
fmul
inc
sbbb
or
subb
push
jns
popa
push
sub
aaa
mov
sbb
mov
xor
jecxz
lods
in
inc
psubw
add
inc
or
sub
stos
cltd
movsl
mov
jmp
mov
fisubs
fndisi(8087
push
xlat
enter
dec
popf
mov
inc
ja
cmp
in
xchg
rorl
cmp
push
mov
call
mov
in
mov
push
sti
xor
push
cmpsb
jno
bound
loop
sbb
fldl
out
xor
dec
in
dec
scas
fs
out
or
insb
neg
in
and
js
sarb
iret
mov
fwait
js
in
add
xchg
jbe
push
int3
inc
pop
in
adc
les
into
dec
lahf
xchg
mov
sub
divb
fcoms
xchg
ret
scas
sub
mov
nop
shlb
push
stos
adc
push
outsb
gs
and
sbb
adcl
into
sbb
xor
cmp
push
pop
lock
or
cs
push
xor
rol
daa
jecxz
bound
sub
push
mov
aas
dec
xchg
mov
lcall
leave
pop
sti
pusha
in
or
xor
rol
cld
cmp
mov
and
inc
sub
sahf
lret
popa
push
arpl
lock
sbb
mov
mov
push
jo
ja
adc
cli
dec
mov
jne
mov
fcoml
xchg
lea
push
cmpsl
fdivrp
and
sti
sub
sbb
fneni(8087
in
pushf
add
in
xchg
mov
or
loope
nop
jns
mov
mov
pushf
push
jp
cmpsb
dec
mov
shrl
and
repz
pop
sub
jbe
jae
ret
or
sbb
sub
add
push
ficomps
int3
lea
mov
cs
lods
in
loope
and
sub
roll
mov
aad
push
fs
lcall
aam
scas
adc
cmp
or
or
clc
stc
setne
mov
push
push
xchg
imul
jl
mov
fsub
mov
sti
or
jne
lret
ja
mov
out
mov
rorb
icebp
xor
or
fs
icebp
xor
sub
mov
fisubl
lret
inc
xor
xchg
mov
jmp
xchg
xor
pop
frstor
bound
mov
popf
mov
mov
cmpsb
sub
in
es
sbb
xchg
jmp
fsubrs
dec
add
lea
stc
loope
rcr
mov
jne
movsb
push
iret
lds
add
dec
pop
push
and
popa
or
jno
inc
mov
add
jbe
jp
sub
push
push
ds
das
repnz
push
and
push
dec
enter
aas
repnz
sahf
inc
add
xor
mov
mov
stos
in
scas
xchg
in
jmp
stc
ret
bound
pop
inc
dec
pop
inc
and
aas
cld
sub
aad
sub
jns
cmp
push
cli
pop
xor
cld
mov
std
aad
ds
cwtl
xlat
sti
dec
mov
sbb
jae
and
mov
ret
push
or
mov
jle
sar
push
xchg
pop
mov
out
push
in
ja
stc
jnp
enter
add
fistpl
ret
inc
jnp
jmp
pushl
adc
push
push
insb
jle
sti
outsl
nop
cmp
inc
mov
sub
mov
dec
mov
push
or
inc
shrb
sbb
jecxz
adc
andb
mov
pop
out
dec
cmpsl
jle
repz
jo
xor
cmpsl
add
mov
test
sarl
xor
les
nop
les
jmp
addr16
xor
js
jno
pcmpeqb
dec
xchg
sbb
add
pminsw
jl
sbbl
dec
add
mov
push
test
push
mov
adc
add
je
cmc
mov
scas
dec
sbb
sti
mov
repnz
rcrb
rolb
das
pop
shrb
dec
shrl
popf
in
shll
mov
jno
stos
pop
call
stc
and
dec
sbb
scas
push
lds
or
xor
ret
cmpsb
mov
aam
pop
jne
mov
add
insl
dec
lcall
push
push
in
ret
sbb
repnz
jle
dec
cmc
in
pop
ret
std
jl
inc
mov
decl
or
addr16
adc
roll
mov
popl
scas
and
cmp
popa
in
adc
push
mov
mov
xchg
jmp
xchg
jge
add
push
xor
loop
and
sbb
ljmp
cmc
push
mov
inc
shll
repz
mov
frstor
pop
lahf
js
dec
inc
and
sti
pop
mov
fiadds
xlat
xor
pop
lret
and
mov
adc
es
jecxz
xor
push
outsl
push
mov
xchg
movsl
xchg
gs
push
adc
std
xor
or
in
jae
push
sti
mov
imul
dec
mov
out
mov
ds
icebp
ret
mov
push
in
inc
sbb
and
stc
add
dec
lods
jns
jnp
push
mov
lods
xchg
add
clc
test
out
mov
repnz
adc
movsw
iret
imul
mov
in
xor
or
add
add
cld
ret
and
test
mov
stc
jl
ret
jo
lods
pop
cld
mov
cs
mov
out
jmp
imul
fdivs
scas
popf
jecxz
bound
sbb
shlb
jmp
out
push
mov
fs
mov
jno
addb
idivl
daa
jecxz
adc
xor
shr
push
mov
ret
in
js
out
mov
jmp
push
shlb
movsl
jae
mov
in
inc
mov
mov
scas
jo
mov
sbb
sbb
push
shl
cld
imul
or
test
mov
int3
dec
andb
cmp
sbb
pop
push
mov
jecxz
or
jno
shlb
test
push
and
cmovge
mov
movsb
jmp
mov
sub
mov
lea
iret
shlb
arpl
sar
lret
in
mov
add
mov
out
cmpsb
repnz
mov
xchg
pop
out
cmp
pop
lods
pop
out
popf
mov
cld
int
sub
imul
mov
sub
dec
pop
popf
jno
xchg
es
dec
cmp
lods
or
arpl
jg
push
loope
enter
fidivrs
dec
jge
and
xchg
sbb
jmp
and
mov
cltd
flds
push
adc
pop
daa
push
or
js
pop
nop
cmp
aam
test
sbb
pop
inc
adc
rcrb
sbb
mov
ja
es
push
jbe
sbb
fsubrl
mov
cld
shll
aam
popf
in
jmp
pop
mov
or
inc
shl
aas
outsb
mov
mov
sarl
inc
mov
jnp
pop
hlt
sub
and
pop
repnz
mov
mov
push
push
gs
test
jo
fs
aad
mov
push
sub
rcrl
add
or
decb
inc
jmp
loope
nop
subb
xchg
sbb
inc
mov
hlt
mov
dec
dec
sti
inc
inc
scas
es
inc
pop
mov
or
mov
jns
int
shrl
es
cmp
jecxz
mov
fdivs
call
fisubs
rolb
inc
xor
nop
xchg
in
sub
cmp
or
push
sbb
add
xchg
mov
arpl
push
mov
xchg
jbe
imul
lea
dec
cmp
dec
lds
jns
rcrl
sti
imul
mov
add
outsb
into
outsl
dec
push
fnstenv
jl
jle
xor
jns
stos
inc
ja
xor
stc
gs
mov
lock
call
sti
sbb
popf
jmp
cmc
pushf
gs
add
aas
popf
mov
in
jl
and
test
lods
jnp
loop,pt
sbb
mov
in
popf
xlat
stos
mov
out
mov
inc
mov
decl
shrb
add
js
add
fdivs
in
movsl
jge
xor
scas
add
cs
cmpsl
jmp
into
cld
jns
fildll
out
cmc
xchg
lret
out
popf
adc
fadds
mov
adc
sarl
xor
mov
dec
in
push
das
mov
push
jle
cld
aad
adc
lea
push
std
and
test
in
xchg
cmp
std
outsb
add
pushf
sbb
jmp
push
mov
mov
dec
dec
cld
in
insb
push
sbb
les
in
cmp
lret
fdivrl
loopne
add
dec
cmpsb
and
mov
pop
mov
xlat
cltd
dec
repz
mov
mov
fs
add
inc
sub
pusha
loope
or
scas
pop
jae
jg
add
xchg
nop
addr16
int
adc
xchg
mov
mov
dec
fdivr
inc
cld
xchg
push
addr16
movsl
ja
arpl
mov
dec
xlat
shlb
aas
xchg
jge
or
enter
mov
inc
out
xor
xchg
push
cmp
or
mov
test
mov
retw
mov
js
sub
daa
and
cld
jp
repz
pop
fs
dec
ja
aam
adc
mov
insl
xor
pop
cld
xchg
loope
lcall
out
mov
int
lods
addr16
call
ret
mov
sub
stc
pusha
in
cld
xchg
in
mov
stc
loope
out
insl
mov
lds
in
lods
xor
shrb
sar
stos
out
jo
lock
ret
xchg
insl
stos
imul
sub
scas
dec
cmp
into
loop
sbb
iret
scas
das
or
rcrl
cmc
out
imul
scas
cmc
popa
pop
icebp
jo
jnp
call
xchg
dec
jno
pusha
fwait
loop
jne
fs
cld
cwtl
sub
lret
inc
imul
mov
imul
mov
push
aam
shrl
test
sub
fsub
push
push
repz
aad
mov
fidivl
out
std
les
aam
push
stos
mov
shlb
out
adc
cmp
iret
cmp
dec
nop
jmp
ret
sbb
scas
jmp
jecxz
xlat
add
scas
xchg
lods
in
lahf
mov
hlt
mov
jle
in
imul
dec
shll
mov
movsb
mov
dec
inc
inc
stos
rcrb
dec
sbb
jmp
mov
sti
mov
sarb
jnp
out
in
shll
cmp
std
sbb
mov
fs
push
stc
shrb
jg
shl
push
ror
sub
add
dec
pop
add
in
mov
lods
push
addl
sti
mov
mov
loope
in
outsl
pop
aam
push
dec
mov
popa
std
out
scas
and
inc
mov
jmp
aaa
cmp
popf
fadd
mov
cmovnp
push
nop
sub
std
add
inc
and
fnstsw
popa
xor
jns
adc
andb
mov
jnp
mov
pop
mov
lret
mov
std
jge
sti
sbb
pop
xchg
negb
int
sbbl
cmc
testl
lods
fldcw
cmp
shlb
aaa
jnp
arpl
cmp
gs
in
in
lods
xchg
ret
mov
mov
aad
das
lods
int
and
lahf
or
add
mov
adc
into
mov
ja
push
cmp
and
sbbb
mov
pop
ret
fsub
testb
scas
pusha
hlt
jbe
ljmp
add
xor
nop
xlat
lret
mov
cmc
mov
sub
loopne
icebp
lret
loopne
insb
aaa
les
inc
je
dec
push
aaa
dec
sbb
ljmp
incl
sub
fcompl
or
rcrb
mov
out
gs
fisubl
in
mov
xor
push
lods
sbb
or
jl
movsl
jae
xor
push
stos
aaa
push
mov
push
jmp
mov
cmp
push
push
outsb
add
mov
hlt
rorb
mov
filds
adc
sti
and
xchg
inc
neg
sbb
stos
fmuls
mov
mov
bnd
leave
add
out
jl
aaa
faddl
jns
out
lret
jbe
insb
mov
std
ss
add
out
out
dec
or
aam
out
je
bnd
loope
out
ficoml
les
cmp
sbb
mov
add
or
sub
cmp
sbb
xlat
cmp
xchg
jmp
fildl
cld
mov
ret
aam
or
dec
imul
inc
in
in
arpl
das
mov
pop
pop
ret
out
les
les
lcall
or
stc
lcall
xchg
or
sub
push
cmpsb
push
sub
inc
movsl
fs
push
call
dec
push
jl
aas
roll
aam
xchg
jbe
dec
cmc
loope
push
cmp
add
xchg
in
pusha
inc
jne
lock
rcll
or
jle
mov
cmpsb
cmp
xchg
mov
hlt
or
call
mov
inc
mov
sbb
pop
outsb
ret
cwtl
adc
xor
scas
sub
adc
flds
mov
mov
cmp
add
mov
and
sti
lock
pop
add
popf
pop
loop
mov
xor
jmp
insl
pop
test
loope
cmpsl
ret
out
xchg
jne
mov
mov
rclb
out
pop
lods
and
pop
testb
dec
push
mov
mov
xchg
jl
lds
test
push
mov
pusha
out
int3
mov
mov
mov
or
mov
mov
icebp
jne
cltd
outsb
test
into
mov
popf
push
aaa
jmp
xchg
int
inc
je
lods
ds
pop
imull
std
call
std
insb
or
roll
mov
pop
imul
jmp
mov
filds
inc
xchg
fcoml
lret
in
ljmp
mov
or
adc
push
cwtl
int3
stos
cli
repnz
xchg
add
rorb
in
dec
adc
add
cld
decl
or
pushf
or
ret
xchg
sub
loopne
test
bound
xchg
mov
dec
faddp
mov
movb
daa
insl
popf
es
in
sbb
shll
sub
out
ds
mov
das
dec
out
lea
leave
dec
add
out
aam
call
jae
fnsave
mov
andl
xchg
inc
xor
lret
dec
jne
pop
jo
dec
imul
scas
jno
cmp
lea
mov
shlb
adc
cld
data16
in
cld
int3
loopne
lret
cld
sti
icebp
lods
sti
loope
lods
call
fcmovb
mov
dec
repnz
push
dec
jl
test
push
cmp
ds
and
idivl
cwtl
dec
mov
test
or
jne
ret
or
sbb
pop
push
incl
push
or
pop
or
fdivrs
outsl
xchg
ds
adc
loop
shll
loopne
fxch
xchg
outsb
lea
loop
jne
insb
fs
dec
push
cltd
mov
les
mov
mov
mov
or
pop
idivb
imul
lret
pop
mov
dec
ja
fmulp
and
mov
mov
iret
add
fdivrl
and
lret
hlt
ss
push
mov
add
sub
sbbl
and
mov
aam
pop
enter
push
aam
cmc
xchg
push
cmp
in
popl
outsl
fnstenv
adc
lahf
data16
lahf
clc
fdivs
outsl
in
xor
cmp
addb
mov
push
xchg
mov
fs
push
mov
dec
mov
dec
fcomip
add
jno
or
mov
lods
mov
xchg
push
enter
jmp
fimuls
popa
cld
enter
arpl
cwtl
or
arpl
js
std
mov
fisubl
mov
in
cli
sbb
jns
mov
and
ljmp
pop
icebp
push
loopne
or
pop
push
divb
adc
in
int
mov
add
test
mov
fs
rolb
or
add
jns
or
jmp
jno
add
daa
rcrl
shlb
jle
fs
pop
add
lcall
je
roll
dec
out
inc
movsl
into
std
push
sub
fldl
xor
clc
enter
mov
orb
ds
addr16
shll
pop
pop
adc
push
mov
push
sti
rcll
jg
frstor
addr16
in
movntq
cld
jle
push
cmc
mov
call
pop
dec
out
xchg
mov
mov
mov
mov
cmpsl
push
pusha
lret
cmp
cmpsl
in
jl
and
outsl
pushf
scas
push
xor
out
outsb
mov
mov
nop
xchg
bnd
xchg
fbld
dec
sub
push
cmp
and
jmp
cmpsb
in
pop
andb
arpl
or
jno
and
lea
stc
sub
imul
sub
inc
icebp
sub
out
ret
int
mov
jmp
push
cmp
xchg
stos
ror
mov
fwait
push
mov
pop
icebp
orb
popa
sub
out
loopne
loop
inc
or
and
popf
in
ret
rcl
test
cmp
loope
stos
lea
xchg
ja
test
sarl
or
push
sahf
jge
stos
incl
jle
es
cmp
out
push
or
insl
push
aas
lea
jbe
test
sbb
lods
dec
add
test
mov
dec
aaa
out
push
sub
jl
mov
jle
fwait
jecxz
dec
mov
fnstsw
jecxz
mov
sbb
lods
popf
adc
icebp
xchg
mov
lcall
xchg
fcoms
lds
xchg
imulb
or
jl
popa
mov
sbb
pop
cltd
andl
cltd
ss
in
lret
test
movl
mov
lods
jno
inc
movsl
dec
icebp
fisttpll
and
decb
or
popf
out
push
jge
add
popf
xchg
imul
xor
lds
inc
jp
or
out
add
scas
out
mov
push
pop
mov
mov
pop
cld
push
insw
or
fwait
in
ss
insl
xchg
xor
inc
push
or
push
mov
mov
data16
or
insl
dec
mov
cmpsb
loop
cmp
mov
movsl
loopne
mov
dec
or
and
xchg
lds
xchg
sti
mov
push
lcall
enter
mov
sub
std
add
arpl
out
dec
out
dec
xor
sub
dec
dec
sbb
shlb
push
shlb
or
xor
or
stos
push
jns
popa
push
fcmove
mov
into
test
cwtl
ret
or
push
sahf
xor
in
add
inc
movsl
test
arpl
in
hlt
ljmp
jmp
jmp
stc
xchg
push
daa
ljmp
mov
cltd
push
lods
or
add
cmpsb
cmc
push
jnp
ss
lea
xor
lods
in
sbb
pop
dec
in
popw
sbb
scas
cmp
jle
inc
ljmp
jge
loop
test
mov
cli
gs
mov
test
sarb
imul
cs
pop
mov
sbb
pop
or
mov
mov
push
roll
aas
out
push
pusha
push
cld
xchg
outsb
icebp
mov
test
dec
sbb
movsl
out
add
mov
push
inc
jmp
push
popl
repnz
jae
roll
out
add
push
mov
add
add
aam
xor
and
add
stos
lds
adcl
int3
pop
add
xchg
je
fldenv
xchg
ljmp
mov
notb
xlat
jmp
sbb
jmp
cmp
xchg
sub
adc
cmpsl
roll
xchg
inc
jno
mov
pop
jae
cs
sbb
or
in
clc
sub
lcall
mov
xlat
pop
dec
mov
push
in
movsl
inc
ljmp
ret
lods
fisttpll
pusha
cld
adc
imul
stc
in
subps
add
aam
and
sub
mov
adc
adc
add
lea
insl
xor
add
jb
dec
push
mov
test
out
fidivrs
out
inc
sub
fs
fldl
jmp
jb
sub
pop
testb
jb
ds
aam
mov
into
jno
and
stc
lods
sbb
jnp
xor
cmp
bound
mov
imulb
movsb
sub
inc
sbb
adc
out
push
loop
xchg
ficompl
mov
xorb
sar
inc
rcl
popa
dec
test
jb
shll
fcom
jns
push
push
or
adc
mov
int
cltd
hlt
inc
fsub
mov
loop
jecxz
cmp
or
sub
ret
push
fsubrp
scas
pusha
int
and
lret
xchg
jmp
inc
loopne
lea
jle
vucomisd
stos
fbld
stc
dec
icebp
mov
sti
push
dec
jmp
es
inc
nop
jge
out
lret
inc
imul
into
dec
dec
xchg
sub
push
sbb
push
pop
loopne
inc
xor
shll
pop
jecxz
push
mov
arpl
iret
jno
mov
data16
neg
sti
lea
add
ss
outsl
or
stc
xor
mov
xlat
mov
icebp
push
insb
and
xor
test
mov
rorl
popl
sti
mov
mov
xor
movsb
jle
loop
loope
push
test
cmc
clc
out
movb
add
or
movsl
mov
add
mov
xchg
add
cltd
xchg
mov
dec
push
fstl
daa
les
outsb
out
js
lahf
movsb
out
dec
or
int
daa
loop
mov
xor
dec
sbb
dec
add
jo
mov
xor
fwait
in
adc
sub
cli
in
popf
shr
stc
ja
and
aas
cwtl
add
testb
insl
push
mov
gs
lret
jl
cmpsl
lret
mov
and
push
xchg
cmc
add
bound
or
inc
pop
push
loop
mov
outsb
addr16
jns
loopne
add
arpl
pushf
add
inc
test
ficoms
and
out
sub
sub
mov
shr
out
add
fidivrs
mulb
add
xor
or
mov
adc
popa
dec
sti
fcmovu
and
jnp
rorb
stos
sbb
pop
add
mov
cmpsb
es
dec
repnz
fs
popf
fdivrs
mov
sbb
sar
sub
push
scas
cwtl
scas
pop
and
cmc
xor
dec
push
xchg
dec
les
add
mov
jno
inc
cld
or
pop
loopne
int3
pop
mov
sbb
sti
into
out
jb
pop
repz
add
dec
cmp
sub
loopne
addr16
push
fsub
add
mov
shl
sbbl
in
out
adc
jns
out
adc
add
sti
sbb
mov
push
push
in
mov
call
fiaddl
vpunpcklwd
jmp
stc
ja
mov
fiaddl
flds
and
mov
daa
mov
pusha
pop
dec
movsb
stos
popa
mov
fadds
push
mov
roll
aam
inc
stos
insb
fdivl
pop
add
add
clc
stos
scas
sbb
lcall
sub
mov
test
pop
inc
fsubrs
ds
mov
test
sti
test
mov
fidivl
jmp
jb
iret
cmp
xchg
inc
sub
jnp,pt
lret
pushl
pop
mov
xor
dec
pop
ror
xchg
push
push
pop
int
and
sarl
xor
in
mov
and
lock
dec
addr16
loopne
int
pop
inc
sbb
pop
jmp
ja
dec
push
dec
roll
mov
mov
cmp
mov
sub
sub
rolb
mov
rorl
mov
std
sbbl
cmc
les
rorl
inc
sbb
jb
insl
lea
int
add
jl
loopne
ret
sahf
jg
mov
or
bound
jle
ss
mov
push
sar
sar
mov
testb
lock
aam
movsb
adc
sub
mov
jne
dec
enter
cld
jno
jns
pusha
subb
adc
xchg
jmp
lea
fs
or
push
ret
pop
int3
adc
ljmp
stos
test
js
dec
and
sarb
cmpsb
leave
lahf
loop
cli
movsl
mov
into
jno
loop
push
sbb
push
push
push
mov
jbe
dec
lods
notb
lcall
xchg
sti
push
mov
mov
fs
lods
dec
and
call
testl
pop
pusha
push
mov
in
cld
daa
sub
push
insb
push
stos
cmc
scas
mov
push
mov
arpl
addr16
or
xchg
mov
ja
cmp
cld
push
jge
stos
enter
dec
push
fnstcw
push
stc
xlat
out
sarl
stos
leave
rol
fsubl
mov
mov
lea
dec
mov
sti
cmp
outsb
sub
adc
add
out
fisubl
fcomp
lods
out
insb
fwait
xor
scas
cwtl
test
push
jmp
cmp
lahf
sbb
and
fs
jl
loop
or
push
cmp
rclb
mov
inc
mov
aaa
int
bswap
gs
mov
mov
cwtl
stc
in
add
cmp
pop
jb
andl
out
testl
nop
or
sub
jl
dec
data16
fldcw
mov
lds
fiadds
cmpsl
dec
adc
addps
dec
stos
inc
pop
cli
fldcw
dec
and
mov
loope
aaa
push
mov
adc
dec
hlt
push
xor
jecxz
inc
cmc
and
mov
mov
pop
mov
push
scas
lret
mov
rcr
movsl
mov
movl
pushf
jmp
cmp
xchg
and
add
out
addr16
mov
mov
rolb
pop
inc
popa
sti
mov
data16
aas
dec
jecxz
xor
ss
cmp
scas
push
je
repnz
xor
and
mov
ds
ljmp
cmp
out
cld
jb
fdivrs
lods
aad
stos
fimull
popf
xchg
out
movsl
lods
pop
cmp
cli
pop
leave
pop
mov
push
arpl
mov
lahf
stos
in
jge
cmc
incb
jne
iret
mov
add
dec
inc
adc
dec
mov
std
aas
sbb
fidivrs
xchg
ss
sbb
add
jne
cmp
inc
sub
sub
xor
adc
in
ljmp
data16
inc
xor
test
rcrl
les
sti
subb
popf
mov
jl
mov
mov
or
scas
cmpsl
clc
dec
dec
js
or
jae
rcrb
in
loop
mov
shrb
and
cmp
out
and
in
in
dec
adc
mull
in
adc
xchg
push
mov
mov
ffreep
jmp
out
sbb
in
sbb
lret
push
add
dec
test
pop
cltd
inc
mov
aad
out
push
into
mov
sti
stc
push
int3
out
hlt
xchg
mov
push
lea
sbb
sub
out
jle
sub
in
out
cmovno
sub
and
stos
pop
sub
pop
ja
pop
lcall
and
pop
shlb
sbb
jg
mov
pop
cmp
lds
std
sbb
aas
or
or
out
mov
cwtl
mov
into
sub
int
push
pop
repz
stos
push
jmp
jns
pusha
test
and
pop
lods
xchg
inc
fisttpll
cmc
aas
jnp
fnsave
cwtl
inc
fsin
iret
push
mov
or
sub
jne
sar
pop
sub
mov
sbb
jne
xchg
cmc
or
cli
or
testl
cld
sti
push
pop
call
loope
iret
dec
and
fdivrl
and
scas
movsb
ret
sbb
cmc
adc
and
xchg
mov
ret
repnz
insl
xchg
add
arpl
rorl
add
sbb
in
mov
push
adc
lret
shlb
or
and
mov
cmp
jmp
push
fwait
pop
mov
adc
dec
mov
fs
popa
sub
repz
daa
mov
xor
std
adc
mov
lea
or
jl
sbb
sahf
shrl
and
jge
jmp
mov
pop
stos
and
orb
push
pop
dec
aad
sub
clc
test
les
push
std
push
mov
mov
aas
into
cmpb
jmp
ds
mov
push
repz
inc
addl
loop
in
push
nop
pusha
dec
movsb
mov
dec
pushf
pavgw
lcall
loop
subb
adc
aad
rcrl
or
data16
mov
stos
push
mov
stc
aad
add
rclb
andl
pop
shr
aas
jb
pop
subl
pop
or
xchg
cld
or
in
addl
pop
and
xchg
stc
adc
mov
dec
cwtl
movsb
sbb
jae
movsb
mov
rorl
dec
icebp
outsb
insl
cmpsl
pop
testl
lea
mov
mov
aad
add
push
js
scas
adc
loope
orb
xchg
test
xor
lds
mov
lret
mull
push
and
data16
sti
int
nop
mov
fcmovnbe
adc
pop
push
lea
jnp
cmc
cltd
mov
outsl
dec
mov
imul
imul
std
xor
in
mov
xchg
xchg
ljmp
mov
je
mov
cmc
ror
add
or
jge
out
sbb
mov
out
jno
ret
jge
mov
mov
fs
data16
nop
push
xlat
inc
add
jmp
shll
lret
xchg
xchg
inc
mov
inc
inc
fildl
in
push
xlat
mov
dec
jp
inc
mov
es
mov
add
adc
and
add
out
popf
lock
or
test
or
int
and
imulb
ret
cmp
xlat
fisttpll
jg
movsl
inc
repz
decb
push
mov
and
adc
mov
fbld
aas
cmp
push
addr16
fbstp
or
mov
and
lds
insl
push
mov
mov
jg
nop
cmpsl
das
dec
leave
test
fnsave
mov
arpl
test
sti
lret
outsb
in
or
and
in
mov
dec
cmp
movsb
or
jnp
pop
orl
and
mov
add
adc
xchg
or
mov
push
sbb
rorl
cltd
push
ret
cltd
cmc
jmp
test
in
mov
push
jl
dec
pop
add
or
and
stc
cmp
mov
aad
cld
mov
jne
jmp
dec
adc
aad
rcll
fs
push
cwtl
pop
addr16
cmp
or
mov
and
mov
adc
scas
repnz
rcll
add
mov
cmc
sbb
pop
mov
sbb
movsb
fdivp
sub
or
add
fcomp
test
adc
in
jne
popa
loope
js
mov
or
out
notl
mov
cmpsb
add
test
lods
enter
add
adc
add
icebp
sti
sub
test
mov
stos
dec
test
cmc
ljmp
cli
iret
jnp
sub
dec
std
push
sbb
cmp
or
dec
out
mov
sbb
loop
imul
xchg
hlt
xor
je
jae
testb
add
dec
out
add
js
cld
imul
jl
rcr
mov
or
inc
lock
ljmp
shrl
imulb
adc
jns
mov
add
mov
or
hlt
adcl
out
dec
cmp
or
jmp
jge
loope
js
dec
movsb
mov
adc
push
es
mov
lods
mov
sti
sub
and
add
mov
outsl
in
mov
lods
cmp
adc
mov
es
sub
or
loop
test
out
jnp
repnz
inc
mov
nop
sbb
movsb
jecxz,pt
cmp
jl
xlat
push
scas
xor
stc
leave
jno
or
pushf
xchg
int3
cwtl
and
inc
icebp
add
xor
mov
loopne
js
or
mov
mov
xor
data16
cmp
xor
sub
xchg
cmp
mov
std
in
shrb
cmp
cmpsb
mov
sahf
in
rol
push
test
or
mov
in
mov
add
out
jb
les
xchg
dec
mov
dec
je
stos
in
and
iret
loop
movaps
jg
or
popa
imul
jecxz
adc
cmp
mov
addr16
xor
cmp
adc
dec
lahf
rcrl
mov
shrl
dec
push
sbb
fcompl
add
xor
push
dec
lds
dec
lea
xor
mov
out
mov
es
push
mov
add
fiadds
arpl
and
jecxz
xchg
movsb
shr
mov
jae
push
add
les
into
mov
aas
and
clc
out
stc
faddp
pop
nop
jmp
ret
ret
call
popa
inc
pop
aaa
ja
arpl
lahf
mov
inc
pop
cli
fxch
xor
cli
cmp
pop
les
and
repnz
popl
out
ret
or
and
daa
add
in
shlb
jl
stc
cmp
add
pop
mov
dec
lea
dec
dec
insl
mov
xchg
rcl
orps
or
xchg
push
pop
clc
pop
imul
std
addr16
orb
xchg
mov
loopne
cmpl
rolb
sbb
outsl
push
or
loope
pop
enter
mov
adc
push
movsl
popf
or
dec
mov
sbbl
in
mov
and
jge
xor
jno
cmp
stc
das
mov
dec
popf
sbb
adc
movsb
out
idivl
repnz
sar
jecxz
mov
jecxz
or
loope
jecxz
push
mov
or
push
pop
test
mov
push
ret
inc
mov
push
pop
inc
or
add
aad
ret
xchg
movsl
cmovnp
mov
aam
and
mov
in
sub
out
push
xchg
iret
jne
push
adc
in
dec
pop
push
mov
jmp
mov
push
nop
xor
inc
mov
clc
sub
cmp
in
inc
jmp
xor
jecxz
imul
subb
movsb
dec
aam
int
std
cmp
sti
in
int3
mul
jp
rcll
sbb
lcall
icebp
add
xor
mov
gs
push
stc
sub
cltd
roll
js
mov
jne
adc
jmp
cmp
mov
in
pop
sbb
sub
push
cmp
fs
mov
jle
pop
mov
sub
add
fisubl
push
cmpsl
lret
or
push
call
mov
popf
mov
xchg
mov
pop
mov
test
scas
jp
or
xchg
aad
lahf
pushl
clc
aaa
jle
test
fnstenv
mov
out
xchg
xchg
in
mov
icebp
clc
mov
jb
int
fnstsw
mov
push
jno
xor
sub
xchg
iret
dec
loope
lock
sbb
aam
sbb
std
jmp
dec
xchg
int
mov
mov
fisubl
stos
aad
pop
mov
mov
jns
add
pop
ret
test
pop
arpl
negl
std
ljmp
mov
fadds
loop
and
mov
data16
call
dec
rdtsc
cmpl
ret
mov
mov
fmulp
icebp
in
ret
arpl
iret
ja
xlat
fs
lea
and
aam
jbe
fs
cmc
dec
notb
data16
adc
mov
adc
inc
push
stos
lock
adc
stc
lea
fdivrs
mov
xor
into
nop
jnp
scas
push
shlb
xchg
xor
cmp
xchg
mov
test
mov
jp
loopne
pop
lds
mov
out
mov
gs
add
inc
stos
push
int
mov
add
or
cmpsl
cld
mov
cld
lret
leave
adc
mov
into
sub
dec
mov
ret
jmp
das
int3
insb
shl
js
mov
sbb
sbb
sbb
mov
xchg
orl
push
push
adc
in
in
shlb
pop
inc
in
stc
push
dec
mov
xchg
cmp
inc
frstor
into
pop
test
push
jnp
out
out
mov
iret
nop
aam
sub
mov
cmp
stc
push
and
cmp
iret
sub
out
dec
fs
pop
ret
jnp
sub
xchg
mull
mov
popf
lods
in
aas
in
out
push
lahf
xchg
outsl
sub
sub
sub
add
rcrb
xchg
jge
cmp
fwait
and
int
inc
outsl
gs
mov
add
loope
mov
rcl
repz
adc
cmp
insl
sub
jne
shrb
test
insb
js
outsb
mov
test
inc
sahf
rclb
cli
push
arpl
in
mull
arpl
add
sbb
lret
jne
nop
aam
outsb
cmpb
std
xor
shrd
insb
dec
mov
scas
aad
vpaddd
adc
push
sbb
jmp
pop
mov
test
out
pop
call
icebp
pushl
clc
jmp
cmc
xchg
mov
scas
sub
mov
lea
imul
daa
insb
ficomps
jmp
fwait
xchg
lock
pop
loope
stc
in
out
icebp
xchg
add
adc
add
repnz
mov
fldl
mov
xlat
fcmovne
sub
js
cs
jp
pop
jl
mov
jo
push
xchg
or
push
dec
jg
sti
pop
in
mov
sbb
add
mov
sub
cmpsb
jnp
xor
add
shlb
idivl
sub
loope
push
pop
push
ljmp
inc
sbb
sub
fdivrl
stos
mov
loope
daa
mov
add
jp
shlb
sarb
arpl
push
hlt
lcall
mov
adc
data16
mov
cltd
scas
mov
out
push
decb
mov
rcl
jo
inc
mov
out
sbbb
imul
mov
pop
and
movsb
incb
fstpt
dec
mov
sahf
sti
shll
mov
ds
dec
lret
xlat
imul
sti
add
jne
jnp
sbb
pop
movsb
adc
mov
jl
pop
stos
mov
orl
in
xor
lahf
adc
imul
popf
call
imul
mov
inc
loopne
jbe
mov
pusha
adcl
in
sbb
mov
inc
hlt
mov
inc
dec
add
out
jae
mov
enter
mov
shll
popa
add
outsl
cli
shll
js
loope
adc
add
inc
jnp
jae
test
pushf
mov
adc
add
xor
jo,pn
insl
xlat
mov
xorl
jp
subl
mov
mov
in
mov
sbb
pop
shll
insb
out
cld
mov
inc
mov
jnp
test
mov
daa
in
mov
and
test
inc
stc
out
mov
pusha
arpl
xor
orl
std
mov
mov
xlat
xor
xor
mov
dec
fs
dec
movsl
lea
js
lcall
mov
xchg
stos
inc
in
inc
mov
mov
mov
mov
jns
mov
stc
lock
outsb
mov
hlt
les
add
insl
stos
stc
cwtl
int3
dec
mov
mov
repz
xor
ret
mov
cld
push
stos
addb
mov
mov
adc
jae
pushl
rol
jnp
std
pusha
insl
sub
sub
and
adc
add
mov
inc
lret
lea
mov
lods
into
fucom
fnstcw
jne
pop
mov
addb
xchg
dec
enter
imul
fsubl
sti
mov
mov
out
xchg
lea
sbb
ret
ret
in
xchg
sbb
mov
out
or
mov
mov
test
fwait
lret
xchg
cltd
xor
add
shll
insl
or
mov
roll
jg
push
dec
xchg
movsb
test
pop
in
dec
inc
in
adc
pop
pop
testl
cmp
insl
lret
sbb
movsl
fucomp
dec
movsb
test
sahf
dec
shll
push
jbe
nop
sbb
mov
mov
test
cwtl
stos
xchg
mov
je
and
out
pop
lock
push
cmpxchg
and
das
dec
mov
movsl
xchg
fimull
ret
out
sbb
push
std
dec
jbe
cltd
mov
in
in
les
pushf
mov
add
push
clc
dec
cmp
pop
xor
test
cmp
inc
insl
or
push
xchg
frstor
cli
cmpsl
mov
lds
lods
movsl
orl
mov
dec
ja
enter
mov
or
mov
std
cltd
out
xchg
clc
cmpsl
insb
nop
pop
jecxz
lcall
cmpsl
and
roll
mov
and
std
popl
and
repz
inc
adc
ljmp
popf
cli
pusha
iret
out
sbb
push
fsincos
or
cmpsl
pop
jecxz
fucomp
jmp
loope
loopne
ja
sarl
fs
mov
cmp
xor
dec
pop
adc
inc
ljmp
gs
loopne
ja
jae
fs
ret
mov
test
cmp
ret
sbb
mov
and
jo
popa
or
jno
or
in
cltd
and
loope
jo
fs
in
add
call
cli
and
ds
popa
cli
add
mov
shll
jnp
enter
cmp
and
and
mov
movsb
dec
jmp
sub
in
or
xor
pop
cmpsl
sarl
std
pop
fstps
fcomps
xchg
ret
addl
in
orl
jecxz
mov
push
test
bound
loope
mov
enter
sub
lds
data16
inc
test
mov
fcmove
testb
mov
cmp
push
das
xchg
stos
mov
fisubl
jp
fimull
in
adc
rclb
cli
notl
fsubrs
mov
jecxz
inc
in
add
push
push
mov
loopne
pop
lea
das
popa
call
rclb
pop
xlat
sti
jp
in
push
stc
mulb
pop
movsl
popf
xchg
outsl
pop
pop
mov
in
popl
sbb
icebp
jecxz
cmpsb
and
push
cwtl
cmp
xchg
dec
in
or
frstor
fisubrl
stos
sarl
mov
add
ret
dec
jg
lea
movsb
sub
xchg
ja
push
inc
inc
popf
mov
pusha
ret
das
cmp
scas
jb
xchg
ljmp
repz
scas
mov
sub
or
lret
jmp
push
std
out
and
data16
jge
in
or
xchg
push
mov
or
leave
or
sahf
mov
ljmp
ds
mov
and
imul
fisubs
in
aas
test
mov
cmpsb
mov
add
jg
push
pop
loop
jle
cltd
sbb
icebp
stos
pop
subl
jnp
and
inc
or
outsb
bound
idiv
cltd
jmp
cmp
and
movsl
aad
ffree
mov
xchg
cli
push
pop
aas
push
mov
mov
inc
lret
loope
mov
cli
popf
in
or
dec
fs
mov
sti
and
xor
mov
cli
gs
jae
push
pop
shrb
push
mov
cmp
pop
ret
jl
hlt
pop
sti
add
cld
int
mov
stos
dec
push
inc
or
or
pop
pop
orb
xchg
mov
jp
jns
jmp
inc
xchg
mov
xor
outsl
push
pop
sbb
out
repnz
sti
clc
lahf
cmp
pusha
ret
je
ret
lahf
jne
xchg
mov
mov
loopne
jae
mov
xchg
stc
imul
mov
arpl
out
cmc
xchg
cli
notl
or
adc
dec
sub
pop
shll
testl
inc
mov
adc
cltd
jae
test
cwtl
mov
lahf
call
sub
movsl
xlat
push
mov
cmp
pop
addr16
cmp
add
jae
xchg
icebp
inc
les
sub
fwait
arpl
xchg
sbb
push
adc
movsl
or
jbe
addr16
outsl
or
cmp
add
sbb
lds
push
popa
dec
sti
out
xchg
mov
cwtl
dec
pop
sub
inc
shlb
add
imul
popf
inc
jl
push
imul
mov
fiaddl
xor
out
xor
add
rcrb
or
pop
xchg
mov
add
and
stos
cmp
int
imul
icebp
jnp
imul
cmc
rcll
add
mov
pop
movsl
lods
dec
xor
xor
loope
mov
mov
xchg
mov
fidivl
push
push
stc
lret
xchg
jl
lahf
stos
je
cmpsl
mov
repnz
sbb
add
in
mov
rorl
pop
dec
or
mov
ja
push
lahf
rorl
push
loope
dec
or
and
sub
outsl
or
out
jne
cmp
loop
mov
add
or
inc
mov
sbb
rorl
dec
stos
repnz
xor
std
or
xchg
mov
mov
jle
pop
mov
pop
or
gs
mov
imull
je
enter
add
repnz
dec
loop
xchg
shld
and
shl
push
orl
icebp
dec
add
cltd
push
lret
inc
mov
lcall
add
jl
aaa
fisttpl
orl
sbb
faddl
mov
idivb
shl
mov
lcall
mov
fwait
xchg
jo
stc
aad
xor
test
mov
xorl
out
stc
in
orb
sti
mov
shlb
popf
pop
andl
aad
insl
mov
xor
enter
mov
rolb
filds
add
mov
jmp
pop
ret
adcb
cmpb
jl
arpl
add
add
nop
lds
imul
test
mov
and
in
scas
push
xor
das
mov
and
insb
stc
imul
imul
sbb
push
gs
aad
in
popf
xchg
xor
insb
xor
or
rolb
bound
sbb
inc
pop
inc
mov
or
xor
push
loopne
loopne
insl
rolb
mov
sbb
shr
xchg
mov
inc
add
aas
jp
pop
dec
lret
mov
faddp
lds
call
jg
add
in
mov
or
in
imul
mov
sbb
sbb
int3
cmpsb
or
fisubrl
repnz
and
and
icebp
dec
rcr
pop
test
pusha
sub
mov
repz
push
ds
decl
push
xor
and
popl
addr16
push
std
inc
aas
cli
movsb
mov
into
lcall
pop
dec
loopne
or
pusha
outsb
into
xchg
xchg
lret
sbb
loope
xchg
lret
pop
mov
loope
sub
fnstenv
mov
mov
cld
mov
shlb
or
mov
xchg
out
jecxz
jge
aam
sbb
imul
or
adc
sub
stos
aam
in
mov
repnz
les
clc
out
jl
jmp
ljmp
and
mov
jbe
loop
mov
lahf
in
mov
popa
sbb
adc
lock
or
jge
lea
sub
adc
dec
pushf
dec
sbb
sub
insb
mov
dec
test
add
fnop
add
mov
icebp
stc
cmpsl
je
jmp
sbb
test
sub
cmc
insl
mov
loope
popf
dec
mov
lret
jle
and
rcrb
adc
dec
sub
cld
mov
adc
ljmp
out
push
ret
repnz
sbb
clc
jbe
push
out
ss
daa
xchg
pop
fs
cmp
dec
xchg
inc
dec
push
mov
add
or
ss
sub
out
popa
add
jnp
push
push
loope
cs
out
data16
mov
xlat
stc
mov
lock
adc
mov
repz
jecxz
in
ret
mov
mov
ret
mov
les
cmpsb
adc
gs
xchg
mov
dec
mov
push
xchg
xchg
xor
into
add
inc
fmuls
push
xor
ja
sar
iret
add
scas
in
cmc
dec
ficompl
sbb
out
gs
pop
jmp
call
lahf
push
cmp
scas
in
data16
cmpsb
or
int3
jmp
add
adcl
std
mov
jb
dec
xor
lahf
sbb
sbbb
shr
popf
mov
pop
sbb
popl
jnp
jmp
inc
adc
lods
loop
pop
cld
mov
loope
test
lock
adc
test
icebp
es
arpl
loop
or
out
push
dec
test
mov
cmc
add
dec
mov
xor
mov
pushf
cld
mov
imul
cltd
inc
cmpxchg8b
mov
enter
mov
xchg
cld
dec
cmpsb
sbb
fnstcw
push
iret
add
aam
and
inc
push
enter
inc
adc
fisttpl
mov
scas
shrl
int
push
fldt
mov
inc
and
xor
jl
mov
push
mov
arpl
xor
int
push
jle
push
std
mov
mov
aad
or
arpl
loopne
negl
xchg
scas
xchg
sbb
mov
adc
gs
push
and
in
or
les
cltd
xchg
cmp
fisubl
xchg
pop
mov
lods
pop
loope
mov
cli
bound
leave
cmpsb
dec
leave
adc
push
jge
xor
in
add
xchg
or
cmc
loope
mov
std
mov
mov
mov
push
push
addb
stc
jp
sti
cmpsb
xchg
ret
cmpsl
cmc
loopne
pop
testl
inc
pushf
push
cs
xchg
in
fcomp
and
fs
mov
dec
jecxz
in
bound
cs
jne
mov
addr16
incb
sub
std
mov
pop
mov
cmp
and
mov
adc
inc
out
push
pop
and
jne
test
loop
and
loopne
cmc
andl
in
jne
rorb
leave
repz
add
mov
dec
fadd
stc
fs
push
pop
xor
or
dec
in
lea
push
ja
jb
xchg
xchg
ljmp
mov
cli
jge
lret
stos
cmc
test
pop
fs
iret
std
jl
jne
jae
insb
and
mov
mov
test
data16
xchg
cmc
pop
shlb
stos
mov
mov
ss
add
sbb
dec
loop
jb
das
pushf
cld
test
sub
int
cmp
or
jmp
shrb
aas
jb
cmp
inc
fnsave
mov
repz
aam
fisubrs
loop
xor
dec
rorl
loope
jne
cli
xor
push
mov
in
ret
cmp
add
fiaddl
adc
cltd
mov
cmp
cld
inc
mov
add
stos
out
or
les
rdtsc
inc
test
mov
mov
out
sbb
sbb
sub
pop
mov
sbb
imul
add
hlt
movsb
sbb
pusha
cmp
push
dec
movsb
mov
shr
sub
lret
gs
jo
fcmovnu
dec
sbb
loope
mov
mov
fdivs
cmp
int
push
add
dec
ds
sti
push
hlt
fwait
or
arpl
cmpb
jecxz
popa
and
cwtl
fimull
dec
push
stc
sbb
imul
and
pop
es
xchg
adc
inc
pop
adc
adc
sub
ficompl
imul
in
loope
add
popa
int
mov
sub
and
ret
ja
orb
cld
ds
and
adcl
xchg
inc
adc
cwtl
add
out
add
dec
mov
imul
dec
subl
std
jp
add
sub
cmc
pop
xchg
or
jg
pop
loopne
idiv
dec
mov
dec
lea
roll
aaa
push
notl
add
jp
sti
fadds
in
dec
adc
std
add
or
lods
cwtl
out
or
mov
mov
mov
and
fcompl
jp
stos
sub
or
hlt
inc
and
outsl
movsl
roll
popa
jecxz
mov
pop
xchg
dec
shrb
data16
loope
and
test
jns
rcrl
pop
push
arpl
bound
sub
dec
cmc
or
andb
dec
sbb
and
pop
mov
in
repnz
mov
mov
cmp
test
push
inc
insb
in
add
mov
bound
pop
add
push
arpl
dec
imul
test
mov
cmp
fdivs
popf
fucomip
outsl
in
out
stos
jno
rcll
movsl
mov
pop
fidivl
incl
mov
add
push
test
mov
mov
out
stos
sub
cld
mov
mov
scas
mov
mov
arpl
mov
xchg
pushl
pop
nop
loope
jae
movsb
mov
mov
pop
adc
repnz
les
push
movsb
imul
outsb
ja
movsb
cwtl
lock
jb
fucomp
mov
mov
movsl
dec
push
int3
ret
std
mov
test
test
push
ret
dec
jno
pop
jge
jne
es
stos
lret
fwait
xchg
cmpsb
mov
xor
pop
ja
lcall
push
xchg
sahf
in
cltd
lea
sub
mov
inc
outsl
dec
out
mov
add
sahf
test
or
xchg
mov
fsubs
push
xor
pop
in
mov
cmp
fisubs
rcl
sbb
pushf
jle
jecxz
lock
ja
push
fs
out
test
nop
ljmp
xor
and
mov
add
mov
cltd
fs
das
les
movsb
adc
cltd
cld
popa
add
pop
int
add
aad
in
cwtl
aam
and
xchg
andl
ds
push
inc
mov
mov
mov
call
loopne
sti
andb
or
xchg
pop
ret
sti
adc
clc
in
mov
jne
cmp
jno
sti
push
test
pop
jne
lock
ret
inc
ret
inc
idivb
push
xchg
or
mov
xchg
inc
ret
pop
push
in
int
shrb
add
jno
ja
data16
jge
xor
testl
daa
push
std
mov
mov
orl
pushf
leave
pop
sarb
shrl
pop
sbb
rorb
or
sti
test
sub
sti
jmp
mov
cmp
cwtl
jne
and
add
pop
dec
ds
enter
sub
mov
or
or
dec
cmc
push
loope
idivl
rolb
adc
out
mull
mov
lods
or
fcompl
push
into
lea
in
les
mov
push
mov
stc
mov
arpl
and
mov
std
fwait
inc
jns
mov
jne
mov
sub
cltd
rclb
push
daa
inc
je
or
dec
arpl
loope
daa
ret
jle
pop
loopne
in
aam
stos
jle
fsubrl
add
inc
sarb
cwtl
and
lret
dec
mov
cmp
imul
lret
jnp
adc
mov
shll
dec
pusha
xor
into
push
mov
add
and
jecxz
scas
cli
dec
loope
add
add
mov
test
xchg
outsb
outsb
fwait
lods
fiadds
out
pop
rorb
dec
lods
scas
and
dec
jae
cmp
scas
imul
stc
xor
cli
push
cmp
mov
or
shlb
and
mov
insl
es
xchg
movsb
shll
shr
lcall
dec
jle
jl
fldt
les
sub
mov
xchg
pusha
mov
stc
jge
push
sbb
shlb
xchg
fcomps
push
das
mov
mov
cmc
jnp
testb
sbb
push
sub
fwait
ds
pop
cltd
std
add
cld
cld
pop
int
fwait
ret
mov
adc
jmp
sub
clc
fimuls
sub
cmp
ror
shll
add
inc
lea
jo
push
outsb
dec
imul
dec
dec
mov
test
popa
jg
divl
mov
or
sti
in
fdivr
pop
mov
popa
fnstsw
clc
stos
jns
inc
xchg
shrb
or
leave
or
and
push
mov
ret
xor
xlat
bound
mov
mov
mov
popf
out
popa
decl
fs
pusha
ss
je
add
xchg
out
dec
das
mov
cwtl
dec
lahf
pop
aad
lea
jno
and
fs
cld
cld
movsl
in
enter
fistpll
xor
out
inc
pushf
mov
in
std
imull
fisubl
call
or
or
pop
out
add
or
into
popf
push
cmpsl
xor
clc
sub
std
mov
xor
xchg
sbb
ficoms
sub
lods
adcl
icebp
jno
jne
insl
clc
mov
and
fwait
sub
or
mov
jns
mov
div
xchg
pop
sub
sti
add
cmc
cld
fldcw
mov
mov
adc
fsubrs
arpl
test
out
adc
stos
stc
out
sbb
fsubrl
jl
out
add
cmpb
bound
test
hlt
out
or
lcall
data16
lea
pop
xchg
test
loope
das
dec
sub
mov
cmc
gs
test
jl
or
add
pop
bound
ret
fcmovnbe
push
lods
je
push
icebp
sub
lea
push
jb
sub
mov
popf
xor
mov
shll
cmp
ds
shrb
scas
out
int3
mov
add
jbe
or
fdivrs
repnz
shlb
mov
lcall
call
daa
push
add
or
lcall
push
inc
mov
out
mulb
add
adc
push
jmp
loopne
cmp
jno
lea
enter
lret
adc
xor
lahf
dec
cli
jecxz
cmp
stos
in
xchg
cmpb
mov
mov
pop
dec
rcr
add
cltd
fwait
dec
pop
cld
call
dec
xor
fsubrs
iret
and
imul
sub
outsb
cmc
lea
std
cmc
neg
shlb
cli
dec
ret
std
aas
movsl
das
out
outsb
cmp
inc
ret
rcll
js
loop
xor
ljmp
mov
sub
or
loop
cmp
out
push
popf
cmp
cmpsb
imul
and
mov
aaa
out
xchg
xchg
pop
push
ljmp
mov
insl
dec
mov
out
inc
sub
loopne
pop
dec
lea
test
xor
cmp
inc
rolb
in
sahf
in
outsb
into
xchg
jb
pop
cltd
push
xlat
stos
loopne
adc
mov
leave
sub
imul
out
enter
mov
dec
loope
ror
add
mov
stc
out
xor
rolb
icebp
push
sbb
adc
lcall
and
jp
sbb
test
xchg
repnz
frstor
add
outsl
shrb
xchg
loopne
jmp
mov
sub
cmp
lret
icebp
insl
aaa
xchg
cmp
xchg
nop
or
add
mov
jno
stos
sahf
lods
movb
mov
cwtl
es
sbb
filds
add
rep
movsl
rcr
or
and
test
fadd
xchg
push
bts
loopne
add
in
lds
loop
add
and
lret
jecxz
add
sti
sbb
jno
imul
in
icebp
ss
test
dec
cli
int3
xchg
cli
sub
lods
or
jg
test
fsubs
ret
out
sbb
fisubrl
sti
fisttpl
or
ror
bound
js
js
stc
mov
enter
jecxz
cmpsl
adc
jne
xchg
jecxz
roll
inc
lds
dec
pop
cmpsl
in
cmp
fsubrs
loopne
xor
push
xchg
jmp
add
leave
inc
fdivrl
cmp
cwtd
loope
sbb
mov
fstps
loop
imul
jnp
leave
in
jo
cmpsb
cltd
adc
xlat
cmp
add
sti
add
stc
imul
in
push
scas
stos
in
int3
aad
test
shll
lret
mov
test
rol
loop
mov
push
fsub
or
xchg
cli
repnz
or
mov
sub
in
dec
sub
lods
fstps
mov
jno
xchg
shlb
or
ret
push
mov
es
mov
movsl
push
sbb
mov
test
js
int
and
cmp
cli
shl
cmp
cmp
or
mov
lahf
notb
cld
jmp
push
test
cmp
sar
scas
repnz
or
movb
insl
mov
leave
pop
mov
dec
mov
push
push
les
dec
pop
push
stc
les
lea
loop
pop
xchg
std
test
cltd
mov
mov
mov
mov
test
jl
cli
subl
jno
testl
sub
or
inc
test
xchg
into
lret
gs
in
out
mov
stc
imul
cmp
add
fwait
inc
mov
sbb
aam
sbb
imul
lahf
adc
inc
jge
pop
in
out
xchg
sbb
pop
popf
sbb
and
jmp
xlat
movsl
add
lods
sbb
add
leave
insl
adc
aad
stc
data16
add
mov
stc
cltd
push
subl
adc
mov
and
and
xchg
inc
std
lret
sar
icebp
stos
stos
jmp
out
int3
push
pop
mov
dec
loope
lret
inc
test
fnstsw
and
stos
jno
mov
cmovae
lcall
int3
lret
add
mov
mov
pop
pusha
mov
pop
cmpsb
jno
int
arpl
lahf
sub
fmulp
sbb
cmp
adc
xchg
cmp
and
lods
aad
std
rorl
mov
fs
aaa
popf
cmpsb
shl
and
iret
shlb
out
decb
mov
push
jne
sti
sub
loope
cld
lret
dec
cli
popa
sti
dec
pop
dec
add
jecxz
aas
mov
adc
insl
mov
insl
mov
test
ja
lock
sti
mov
sahf
lds
jne
add
or
jg
mov
pop
clc
mov
sbb
nop
scas
push
insl
fisttps
popa
mov
test
dec
pushl
cli
dec
in
or
push
sti
rorb
mov
mov
not
jle
mov
sub
and
and
stc
mov
mov
int3
cmpsl
add
xchg
dec
cmpsl
xor
jp
and
add
xorl
lret
cli
lret
inc
les
hlt
mull
enter
mov
sti
add
xchg
xor
int3
mov
lret
mov
in
mov
leave
mov
addl
fldt
sbb
add
add
mov
mov
jp
and
out
cli
cli
cmp
pop
sbb
pusha
stos
push
sahf
mov
jecxz
stc
jmp
fiadds
out
jmp
sub
dec
xchg
pop
rcll
adc
sub
xor
lcall
cld
or
imul
loop
jae
add
jl
mov
or
add
mov
aad
stos
addr16
xor
push
inc
arpl
int3
jge
jl
inc
mov
repz
cmp
lea
repnz
in
rcrl
sbb
hlt
jl
jo
mov
xor
lret
mov
movsb
addr16
sub
por
fwait
push
shl
add
dec
and
lods
mov
push
pop
xchg
call
inc
sub
add
lock
ret
arpl
jl
inc
cld
in
insl
push
pop
in
out
and
mov
inc
js
and
sub
ror
push
inc
add
cmp
jmp
inc
mov
inc
cld
mov
xor
mov
popf
jmp
movsb
call
and
stc
jne
xchg
je
in
sbb
popa
dec
rcr
mov
mov
loopne
insl
rorb
or
cmp
mov
jecxz
mov
insl
push
xchg
dec
jecxz
mov
sti
add
lods
xlat
ljmp
push
and
lea
in
and
movl
pusha
fildl
sbb
int3
in
push
lret
dec
js
cmp
sub
dec
test
push
cmp
cmp
pop
xorl
mulb
adc
lret
test
pop
lret
mov
jo
jns
mov
pusha
xchg
xchg
pusha
nop
lds
mov
xor
adc
lock
int3
icebp
je
xor
rcl
mov
jae
dec
cmp
add
repz
mov
int
mov
pusha
lret
iret
xchg
push
mov
dec
jo
mov
xchg
jmp
div
fisubrs
aas
fimuls
aad
mov
test
out
pop
dec
ss
sub
aad
inc
cli
enter
mov
sub
sarl
inc
dec
jle
push
mov
sbb
xor
dec
int
rcl
loopne
pusha
std
mov
rclb
les
in
fcom
icebp
fbstp
ud0
iret
lret
add
dec
and
in
jo
lods
fistpl
mov
push
and
aam
scas
mov
in
andl
xchg
leave
pusha
int3
mov
ljmp
ret
rcrb
push
test
orl
adc
mov
sub
loope
add
mov
data16
out
mov
jl
in
inc
dec
add
popa
mov
xor
adc
faddl
and
inc
push
je
pop
jne
gs
outsl
xrelease
cli
cli
repnz
and
push
stc
add
out
nop
ja
push
fsubrl
daa
pop
cld
and
add
cld
sbb
adc
mov
lret
in
sarl
jnp
mov
add
inc
and
push
test
sarl
dec
ficoms
out
les
shl
fbstp
jb
lds
jno
pop
mov
mov
fnsave
sti
jmp
int3
popf
out
je
add
loope
pusha
dec
cmp
pop
lahf
sahf
test
ds
test
xor
aam
adc
fs
rcrl
inc
loope
sub
sti
xchg
xchg
imul
imul
sbb
mov
or
test
clc
fidivrl
mov
xor
xchg
ficompl
int3
cmp
in
xlat
fnstcw
in
sbb
aad
mov
push
aas
data16
fstps
ss
stc
addr16
popa
std
xor
stos
sti
pop
int
leave
scas
lods
or
inc
xchg
and
pop
mov
sub
or
decl
pop
cld
mov
je
fisubs
ret
inc
push
push
mov
int
xor
cmp
sbb
fs
xchg
lea
or
mov
in
mov
aam
xor
aaa
jne
dec
sub
xchg
lea
mov
daa
int3
inc
sbb
dec
adc
pop
cltd
adc
sbb
adc
in
out
hlt
sub
lds
pop
mov
jp
imul
push
nop
mov
dec
push
dec
fs
fistpll
inc
inc
mov
loope
test
dec
loope
iret
add
cmc
jnp
cmp
jno
in
fs
popl
mov
mov
shlb
mov
addl
sbb
and
in
mov
and
rcrl
hlt
sbb
popf
mov
mov
fsubl
mov
inc
lds
dec
lcall
xchg
xor
hlt
jmp
rcll
int3
std
jo
imul
xor
insl
inc
dec
mov
and
out
xor
loop
pop
push
add
decl
inc
pop
movsl
ret
push
mov
cmpl
add
stos
or
xlat
sbb
int
fnstsw
xor
inc
in
mov
rcll
pop
cmp
in
mov
sub
lods
cs
test
cmovs
cmp
fs
shr
mov
pusha
sub
push
sub
outsb
iret
sarl
cmp
lret
data16
pop
or
or
cli
lret
into
mov
or
pop
fistps
cli
les
mov
mov
in
sub
movsb
cld
fists
loopne
shlb
or
jge
xchg
leave
mov
test
and
ret
lret
sbb
pusha
jo
cmpsb
aaa
sbb
fisubl
movsl
movsb
adc
icebp
call
ret
stc
sti
data16
sbb
movsb
stos
dec
cmc
cmp
add
xchg
jno
icebp
arpl
jmp
addr16
insb
shll
leave
xchg
add
jl
imul
push
mov
les
pop
and
std
mov
std
out
mov
adc
jne
lods
mov
or
push
inc
sub
inc
stos
mov
pop
insl
cli
add
xor
sti
loopne
stos
lret
push
mov
decb
std
push
mov
inc
lcall
mov
push
add
inc
aaa
jbe
addr16
lahf
aaa
fs
ret
push
inc
and
push
xlat
mov
fbld
mov
hlt
jmp
test
mov
and
sub
sbb
fsubl
aaa
movsl
call
inc
mov
cmp
sti
mov
pop
adc
hlt
push
mov
xchg
dec
stos
mov
mov
sub
xchg
int
mov
mov
cs
stos
mov
nop
add
lods
lret
adc
sbb
dec
out
popf
ret
xor
icebp
lret
rcr
cmp
sahf
mov
jecxz
js
mov
mov
and
cmpsb
jle
mov
sti
xor
xchg
test
mov
dec
add
jl
pop
add
inc
xchg
insl
fadd
mov
sbb
push
jle
sbb
push
mov
pop
or
or
mov
inc
mov
sbb
popa
in
enter
xchg
std
xchg
jbe
sbbb
popa
stc
dec
stc
sbb
mov
into
int
clc
mov
or
mov
shrb
push
insl
aam
lds
loope
or
sub
imulb
out
jg
mov
jmp
addr16
dec
xor
cmp
cmpsl
clc
mov
popf
int3
in
cli
movl
add
xor
push
arpl
testl
adc
fldl
xchg
aam
das
mov
ret
sbb
loopne
jecxz
into
in
jns
popf
in
cmp
add
test
repnz
mov
lods
stc
cmovne
dec
mov
je
movsl
cwtl
or
cmp
xlat
xchg
jne
push
jno
jns
add
push
push
rol
add
test
pushf
sahf
ljmp
out
and
xor
int3
pop
sbb
push
in
mov
adc
int
pop
push
out
jns
ja
push
cmp
aad
dec
push
leave
mov
mov
mov
pop
clc
sub
jp
add
mov
lahf
push
sbbb
sbb
fiaddl
and
mov
mov
aam
add
mov
push
xor
sub
ljmp
cmpsb
add
and
fsubs
and
int
and
pmulhuw
inc
imul
and
and
jmp
lret
scas
lock
inc
call
addr16
stc
ss
jle
mov
fsubp
pop
in
iret
outsb
dec
dec
ljmp
adc
jo
sub
cmp
mov
push
inc
repz
shlb
xor
jecxz
adc
xor
movsl
cld
mov
out
loope
jo
es
in
call
leave
sub
adc
std
iret
jmp
fmuls
inc
xchg
into
push
shlb
xchg
mov
mulb
rcl
mov
lahf
jecxz
movsb
in
push
call
push
inc
push
sub
mov
add
mov
data16
inc
cmp
shlb
sarb
je
dec
mull
aam
sub
jae
adcb
cmpsl
scas
add
fidivrs
inc
rcr
out
fs
cli
or
cltd
loopne
js
sub
jo
sar
jp
rolb
push
mov
xor
cmp
and
aas
sar
cmp
mov
mov
cmpsl
mov
jge
pop
jo
cmc
out
pop
add
jo
adc
cmp
jmp
das
outsl
dec
ss
rcrb
add
fnstcw
test
cmp
in
add
testb
repnz
jne
or
xchg
ja
inc
in
pop
lret
out
push
add
push
hlt
jg
mov
ja
jne
xor
lock
mov
jo
or
shr
mov
aad
movsl
xchg
icebp
pop
push
aas
mov
out
cmp
incb
cmp
dec
fnstcw
sbb
xchg
mov
lods
add
in
les
sub
pushf
das
js
aaa
outsb
leave
cmpsb
xchg
pop
pop
adc
mov
inc
dec
mov
shrl
out
out
pop
push
rclb
cmpsb
int
in
into
ja
xchg
mov
dec
cmp
enter
inc
fdivrs
mov
sbb
mov
xor
pop
sub
shrb
lret
test
aad
je
lret
add
test
cmpsl
stc
pop
mov
mov
dec
int
xchg
leave
push
adc
outsb
cmp
lret
xchg
dec
sub
leave
cwtl
scas
sub
push
cmp
push
into
adc
add
pushf
push
ja
iret
in
push
lcall
adc
imul
stc
dec
add
dec
push
cmp
dec
cmp
jp
add
cli
sub
xchg
mov
imul
insl
imul
rclb
push
adc
inc
pop
aas
cmp
ret
cmc
mov
add
xchg
pop
sbbb
jnp
mulb
fs
cltd
adc
mov
cmc
pop
gs
lret
or
sti
xchg
movsb
es
std
jl
gs
jle
mov
mov
push
nop
add
jge
mull
fildll
sbb
stos
pop
fcmove
mov
imul
cmc
sub
test
cs
popf
les
inc
out
dec
and
hlt
insb
mov
cmp
sbb
movhpd
std
jg
popf
fcompl
dec
icebp
adcb
push
repnz
loopne
lods
test
push
push
inc
lock
xchg
mov
add
or
out
movsb
add
mov
outsb
push
lds
testl
sbb
aas
xor
inc
pop
arpl
jp
or
movsb
jp
fwait
xchg
add
jo
jle
addr16
dec
xor
mov
in
jns
addl
push
pop
mov
scas
and
sarl
sti
and
lods
std
lock
inc
and
rcll
das
repz
push
inc
cmc
pop
jo
lea
adc
insb
xchg
sub
mov
pusha
idiv
test
xchg
stos
cmpsb
mov
pop
insl
shl
mov
faddl
pop
jg
jo
mov
mov
adc
and
pop
cli
out
leave
out
push
sub
sbb
fdivp
inc
jge
lock
loopne
lret
iret
dec
into
adc
cld
mov
xor
aaa
or
in
lods
xchg
add
pop
lock
mov
movsl
dec
hlt
inc
fdivrl
aam
and
adc
imul
sub
int
repz
jmp
adcl
mov
adc
mov
mov
push
fwait
out
ds
fsubs
movsb
add
xor
loopne
sbb
in
aaa
loop
mov
aam
cli
mov
xchg
mov
aad
add
mov
enter
jmp
les
sti
mov
sub
adc
insl
stos
roll
lds
inc
leave
adc
adc
mov
and
push
inc
ljmp
xchg
pop
add
or
in
jno
mov
push
arpl
push
add
ds
mov
pusha
aam
push
jae
mov
mov
sbb
push
mov
pop
mov
mov
adc
jnp
movsl
inc
pop
sti
test
mov
mov
scas
or
push
fildl
ds
cmc
inc
mov
pop
repz
aaa
or
or
jo
xor
mov
out
testl
push
add
mov
push
fcmovne
test
decl
sahf
xchg
jmp
xlat
mov
shrb
std
dec
add
call
data16
dec
loope
rorb
jmp
push
ss
pop
lods
xchg
xor
aam
mov
clc
in
in
cwtl
in
jle
inc
cmp
ret
or
xchg
pop
imul
mov
rorl
mov
gs
pop
mov
push
lcall
out
xor
and
out
push
stos
out
pop
data16
je
jge
in
stos
imul
cmpl
insl
add
aaa
imul
out
add
xlat
adc
push
mov
dec
loope
lret
inc
mov
test
inc
sub
sbb
cmpsb
add
jno
push
call
insb
stc
repnz
addr16
inc
ja
stos
and
aaa
fnstsw
pop
xchg
in
sub
ja
mov
cmpl
and
scas
sub
cmp
in
dec
les
and
sbb
push
bound
add
fstps
std
pushl
fucomi
pop
xchg
mov
icebp
sub
mov
or
movsb
mov
cld
push
sub
jo
jle
lock
shll
jae
ss
arpl
fdivrs
das
dec
lret
outsl
or
xor
adc
push
out
cmp
push
bound
out
or
xor
inc
and
jae
out
pop
call
in
mov
inc
ja
cmpsl
xor
mov
cmpsb
rcll
cmovge
stc
mov
fidivs
push
sub
pop
mov
mov
push
jne
gs
mov
fnsetpm(287
jo
lcall
loop
and
jbe
dec
add
ds
imul
dec
cmp
les
xchg
jae
outsb
adc
push
jb
xor
fwait
loopne
out
mov
add
xchg
rcrb
in
popa
stc
cmp
sahf
rorl
pushf
or
xchg
lods
sbb
push
xchg
lock
dec
sub
fmuls
popa
orl
out
push
stos
cmpb
jl
xchg
or
enter
sub
ret
add
jecxz
in
std
adc
jnp
fnsave
push
inc
xchg
xor
hlt
call
push
inc
sub
clc
jl
fisubl
out
jne
loope
rol
cmpsb
fdivrp
jo
dec
inc
fcmovnbe
push
arpl
rorl
mov
imul
and
insb
sbbl
fists
xchg
les
bnd
es
lea
gs
into
cld
mov
outsl
adc
mov
and
in
ud2
mov
or
dec
sbb
or
clc
or
xchg
jmp
jecxz
sbb
aam
incl
jne
xchg
add
inc
jb
and
rol
pop
flds
push
push
or
jg
pop
stc
movsb
mov
imulb
ljmp
cmp
mov
adc
aad
xchg
lods
icebp
cli
roll
aas
mov
out
mov
dec
push
adc
ljmp
shrl
lock
add
add
mov
cmp
cwtl
mov
arpl
std
push
jno
dec
ja
dec
call
lcall
pop
mov
add
cmpsb
daa
bound
jge
in
jne
mov
cmc
and
sti
sub
loop
inc
push
jns
sub
dec
aas
mov
outsl
std
mov
pop
lahf
or
fmul
cwtl
adc
jl
dec
cltd
int
push
mov
cmpsl
dec
int3
xor
popf
stos
jmp
pop
and
push
out
rcrb
dec
fs
inc
xlat
ja
adc
add
xchg
sub
xchg
xchg
xchg
mov
test
dec
cli
xor
lds
loop
shll
push
jg
das
push
jl
mov
add
jecxz
sbb
jns
popa
lods
adc
mov
bound
ja
outsl
cli
insb
in
cld
lea
and
cmpsl
andl
test
js
leave
mov
das
xor
mov
aad
xchg
and
or
lds
push
aas
add
fidivl
adc
pop
loope
aad
pop
lock
aas
rcrb
ret
push
jl
rorb
push
cmpsl
insb
movsb
or
xor
mov
and
fisttps
push
addl
in
shlb
in
mov
sbb
test
lds
mov
push
sub
lret
add
aad
mov
and
ja
xor
rcrb
push
push
shrb
ror
jecxz
testl
jle
jecxz
fs
and
adc
cmp
dec
mov
or
int
pop
test
iret
mov
in
ljmp
mov
sub
adcb
stos
bound
mov
loope
repnz
test
lea
popf
fbstp
outsb
mov
sub
pop
lock
pop
daa
cmp
mov
jne
jo
sbb
stc
pop
pusha
mov
jb
xor
mov
sbb
jecxz
rorb
in
rcrl
fwait
jle
aam
dec
stos
mov
es
xchg
cld
enter
sarl
mov
add
jns
negb
rcr
mov
dec
rorl
cmp
sub
and
into
jecxz
push
lods
push
ss
sub
dec
xchg
or
stc
jne
nop
jge
jl
js
shl
mov
mov
iret
cmpsl
mov
lahf
call
cmpb
shll
mov
loop
repnz
and
fs
add
dec
xorb
imul
pop
inc
lock
jns
rcr
jno
adc
mov
test
pop
rol
mov
shll
mov
pop
push
stc
aam
out
adc
pop
mov
and
adc
cwtl
xchg
scas
call
pop
push
icebp
mov
or
or
or
xchg
lret
aam
ret
mov
fists
int
xlat
movsl
loopne
test
fistpll
dec
fcomps
push
mov
pop
push
in
cmp
sub
and
out
cltd
mov
call
js
jo
out
cwtl
int
dec
push
sti
inc
sti
stc
out
mov
jo
lret
mov
test
lahf
xor
jecxz
mov
xchg
lcall
and
or
xor
out
scas
fsubrl
jg
clc
mov
push
out
inc
pop
inc
dec
sub
cmp
push
mov
iret
aam
or
test
aad
jae
insl
mov
jl
cmp
lea
popf
mov
inc
xor
clc
outsl
movsl
inc
push
lds
enter
inc
mov
xchg
lds
sub
ret
fdivrl
jne
xchg
mov
clc
mov
stos
lods
cmp
insl
lahf
call
dec
add
push
es
stc
xor
pop
cltd
xchg
or
imul
outsb
dec
es
mov
add
sbb
cmpsl
aas
shlb
add
push
mov
cmp
push
adc
test
leave
sbb
inc
outsb
inc
and
outsl
cld
insb
pop
add
dec
stc
test
push
aam
and
and
mov
mov
push
jbe
ja
sbb
xchg
add
in
and
shrb
mov
out
in
orl
aas
pop
popa
out
mov
popf
in
cmp
xor
int3
sub
out
stos
mov
rorl
cmpsb
fldl
out
push
int
adc
shl
in
rol
faddl
pop
movsb
inc
jp
test
clc
xlat
mov
cmpsl
mov
icebp
fsub
or
cmpsb
stos
jnp
addl
enter
sbb
xor
sbb
lahf
mov
xchg
push
adcb
xchg
push
inc
push
mov
push
aaa
popa
inc
cmp
dec
push
test
jmp
aaa
and
and
fneni(8087
fiaddl
mov
and
int
inc
scas
dec
jbe
rolb
fs
push
hlt
in
mov
addr16
sti
add
lods
icebp
push
shlb
inc
fs
push
sti
pop
andl
mov
faddp
xchg
mov
push
jle
xchg
cmp
mov
sarb
sahf
popf
lahf
shlb
cli
xor
pop
dec
sarb
lds
adc
aam
aam
mov
adc
fxch
std
adc
orl
add
subl
fildll
sub
test
in
xorl
xchg
push
push
xchg
sub
lods
mov
push
in
pop
pop
dec
add
dec
mov
push
imul
movsl
push
pop
shrb
or
loope
jb
jb
test
jae
jns
lret
xchg
add
stc
mov
sbb
fcmovu
sbb
or
or
idiv
scas
xchg
jbe
lahf
and
push
fstpl
gs
jb
in
adc
push
rol
sbb
xor
inc
jb
in
roll
imul
shl
cltd
inc
push
sub
pop
cmp
pop
stos
aaa
dec
inc
dec
idivl
adc
aam
xchg
xor
cmp
and
or
xchg
lret
push
inc
mov
mov
sub
jge
aas
push
dec
aam
mov
fneni(8087
and
les
dec
sbb
repnz
mov
sarl
loop
test
mov
xor
push
pop
dec
lock
mov
mov
pop
subl
jb
adcb
xor
pcmpgtd
lock
test
lret
push
pop
dec
mov
jecxz
adc
dec
sub
clc
push
mov
pop
fs
mov
aad
sub
in
pop
test
lret
push
lock
sub
push
cmp
sub
int3
and
imul
xlat
inc
mov
pop
ja
pop
repz
mov
lcall
call
mov
cmc
mov
repnz
and
loope
adc
inc
adc
jbe
mov
cmp
hlt
lret
ret
aam
adc
push
pushf
cmp
cmpsl
icebp
imul
lock
dec
mov
xor
pop
insb
imul
add
cmpsb
push
cltd
add
jnp
mov
push
stc
fistpl
jae
cmp
nop
pop
xchg
sub
imul
inc
cwtl
imul
dec
inc
mov
in
cmpsl
adc
f2xm1
sub
sub
das
xchg
mov
testb
dec
adc
jle
push
addl
imul
and
mov
mov
adcl
mov
clc
jl
inc
pop
enter
icebp
mov
adc
jge
pop
pop
in
inc
andl
sbb
dec
dec
test
push
xor
pop
int
lea
xor
movsb
jno
jmp
lea
les
or
into
jmp
cmpps
mov
mov
sub
push
push
cli
mov
add
movsb
pop
arpl
lds
adc
jns
xchg
ljmp
mov
mov
int
push
push
xor
jg
in
xchg
adc
push
sbb
sti
add
addb
arpl
clc
add
cmp
cmpsl
push
mov
push
lahf
addb
xchg
movsb
enter
xor
mov
adc
in
mov
adc
leave
inc
popf
ret
push
repz
pop
fs
and
stos
mov
rclb
xchg
jb
lea
pop
loop
lret
add
in
cmp
addl
mov
insb
roll
or
sbb
inc
clc
jmp
ret
cmp
xor
dec
adc
loope
pop
jl
mov
in
stc
lock
sar
adc
or
icebp
fs
xor
push
xchg
adc
dec
cmp
popa
icebp
bound
fnsave
jmp
mov
cmpsb
jns
cmp
or
mov
dec
fildl
repnz
outsb
jl
cmp
adc
jo
add
bound
loop
notb
les
mov
mov
and
cmp
std
lock
in
gs
fucompp
dec
lods
mov
xor
loop
adc
sti
scas
cmp
fisttpl
in
mov
hlt
fs
mov
test
dec
mov
lcall
nop
popf
push
fdivr
orb
test
add
rorb
pop
mov
lods
cmpsl
shll
movsb
dec
mov
mov
scas
xor
xlat
mov
aaa
push
fwait
mov
sti
stos
or
aad
cmp
dec
and
push
icebp
les
into
out
inc
lahf
je
es
sbb
fildll
pop
jns
and
jp
pop
repnz
jl
sbb
mov
push
scas
and
mov
cs
xlat
mov
inc
ljmp
sbb
out
mov
cmp
dec
jp
dec
sbb
subb
jge
or
loope
imulb
or
and
in
xchg
stc
aad
mov
cli
inc
jl
mov
mov
push
insb
scas
cmpsb
lock
cld
addr16
imul
test
movsb
add
add
mov
push
ret
inc
stc
push
inc
add
loop
jecxz
imul
push
mov
test
mov
stc
pop
mov
in
lds
jp
adc
mov
cmp
ss
inc
mov
daa
out
ljmp
in
js
fsubrl
inc
test
dec
int
stc
pop
push
roll
jecxz
movsl
test
xchg
ret
sub
sub
adc
loope
mov
inc
addr16
mov
in
stc
aam
out
dec
fwait
mov
out
jmp
cmp
shl
dec
sahf
jmp
mov
cmpsb
in
test
gs
icebp
fdivr
xor
ret
loope
mov
rorl
jo
shll
inc
sub
data16
ror
in
jl
je
jge
aad
cmp
mov
movsb
shrb
test
mov
cmp
fisttpl
cmpsl
in
xchg
mov
loopne
ljmp
xor
insb
cmp
lods
cmpsb
in
mov
jl
pop
or
jle
insl
sti
xor
repnz
mov
xchg
sub
and
stc
ret
in
std
loope
icebp
popa
out
cld
fiadds
in
mov
mov
test
mov
in
mov
hlt
fnstenv
loope
mov
in
cld
loopne
jnp
lret
movsl
cmp
imul
into
xchg
mov
cld
movsb
sub
sbb
je
dec
jg
fs
gs
lds
out
or
popa
or
jno
in
stc
mov
sub
popf
sub
cmc
mov
sub
test
lock
pop
in
sahf
jo
jmp
call
sti
mov
sbb
jno
cs
jo
in
loop
xlat
jecxz
leave
scas
scas
rcr
cltd
in
jmp
dec
dec
fstpl
stc
movsl
rcrl
push
rcll
frndint
or
cld
cmp
decb
leave
stc
add
std
hlt
rorb
repnz
aam
gs
out
jge
shl
jp
or
or
or
or
push
dec
in
sub
out
mov
clc
cli
jo
jne
or
shrb
lret
fisttps
xchg
in
fmull
fwait
arpl
pushf
mov
in
jmp
dec
adc
or
popf
in
pop
mov
or
mov
mov
into
jns
inc
push
scas
icebp
insb
int
dec
pushf
push
popa
std
jnp
mov
loop
in
jl
mov
mov
popf
mov
add
adc
add
jg
or
movsl
mov
jmp
push
mov
inc
inc
dec
push
sub
pop
mov
cmp
add
subl
cli
gs
mov
xorb
inc
xor
out
orl
or
cli
gs
faddl
and
gs
fs
imul
sub
daa
add
pop
mov
add
add
es
and
inc
sub
dec
aad
repz
sub
aam
dec
dec
add
lock
jmp
dec
ret
imul
mov
lcall
clc
ljmp
jb
dec
mov
loopne
mov
pop
stc
mov
popa
mov
leave
cmc
dec
fnstcw
and
popf
invd
fdivs
xchg
stc
and
testl
loope
and
scas
xor
aam
jmp
mov
clc
mov
or
sub
pop
das
xor
ret
pushf
leave
repz
daa
js
mov
aaa
xchg
mov
jae
jo
xor
or
xor
mov
add
inc
pop
cmp
imul
dec
mov
lods
xchg
jne
lea
mov
loope
fistps
sti
mov
sub
out
leave
jecxz
sti
stc
adc
mov
and
jo
jg
mov
sar
pop
push
lock
fstp
loop
test
bound
sbb
mov
adc
pop
lods
pushf
in
movsl
aas
adc
xor
jmp
xor
mov
stc
test
mov
pusha
jecxz
pop
shlb
icebp
imul
or
nop
dec
sub
data16
push
mov
scas
ret
jl
jns
xor
vpsubusw
cmpl
or
scas
cmpb
gs
cld
cmp
in
cld
into
dec
ja
and
adc
jp
fimuls
xchg
jmp
popf
dec
push
add
call
cld
mov
lock
dec
sbb
xchg
xchg
jmp
je
push
das
arpl
out
popf
pop
in
in
or
xor
sahf
in
pop
dec
popa
iret
cld
movsl
popf
loope
mov
mov
xchg
mov
in
jl
std
pop
popf
sub
js
and
xor
fldt
jae
mov
in
leave
cs
loope
popa
xorl
sbb
fsubl
jbe
sti
jne
loope
jmp
dec
sub
and
int3
mov
mov
fistl
jns
fwait
lods
out
dec
test
stc
sub
adcb
push
dec
jmp
in
scas
mov
sbb
lock
call
mov
std
in
add
push
stc
fisubrs
fwait
addb
jmp
lods
test
test
mov
loop
cli
imul
test
dec
out
sti
mov
push
lods
stos
test
and
daa
add
sub
movsb
mov
shll
jne
cmpb
aas
scas
mov
les
mov
xchg
mov
mov
pushf
dec
add
jmp
xchg
lahf
test
subl
sar
insb
mov
cmc
stos
pop
mov
imul
mov
fdivl
add
push
lods
mov
and
xchg
mov
pop
addr16
jnp
rcl
xchg
mov
mov
jne
mov
dec
leave
lods
mov
xchg
pusha
shll
shlb
xor
stos
dec
outsb
fs
fwait
mov
mov
dec
or
mov
fnstenv
mov
adc
lds
pop
popa
mov
jmp
arpl
xchg
shlb
or
test
ror
mov
lds
mov
imulb
insb
lea
cli
movsl
mov
in
mov
dec
in
sarl
stc
mov
mov
das
jmp
xchg
jb
mov
pop
jae
movsl
lods
or
lahf
adc
inc
std
stc
movsb
add
sahf
pop
ja
mov
in
cli
xchg
inc
lods
fs
pop
popf
mov
inc
aas
xchg
outsb
add
aad
jge
jmp
push
cwtl
adc
or
gs
jmp
fsubp
ss
add
in
xor
push
dec
pop
inc
cwtl
inc
test
stos
stos
push
xor
loope
xchg
rcrl
nop
test
dec
shll
leave
les
fadds
dec
std
rcll
pop
incl
push
mov
push
mov
adcl
jae
dec
and
dec
out
test
aad
add
stc
faddl
sbb
inc
pop
vpsubq
jno
push
or
fadds
cmpps
push
loope
dec
loopne
lea
in
mov
dec
dec
jmp
cmp
xchg
xchg
inc
data16
iret
mov
std
mov
call
inc
std
in
fwait
mov
or
loop
insb
lods
je
faddl
jb
push
xor
cmpsl
fstps
cwtl
inc
cmpsb
dec
movsl
lock
adc
mov
popf
std
pop
test
mov
xchg
ljmp
and
fs
cld
mov
enter
mov
mov
testb
daa
arpl
in
and
jp
mov
push
es
gs
mov
mov
fsubs
cld
pop
add
adc
stc
jg
push
rol
stc
lods
out
mov
sub
xchg
ret
in
cld
push
insb
dec
cli
cmovg
shlb
mov
das
mov
test
rolb
andl
stc
mov
std
mov
or
stos
mulb
int
mov
test
rcl
mov
iret
mov
and
je
lea
inc
add
cmpsb
mulb
js
stc
insb
hlt
je
mov
repnz
shlb
in
stc
dec
in
mov
xchg
add
xlat
cmc
cmp
push
push
mov
or
xchg
or
fs
stos
mov
icebp
cwtl
push
jae
and
sub
jae
aad
mov
js
lahf
xchg
dec
insb
movsl
in
add
xor
lods
add
imul
mov
dec
inc
push
or
into
xchg
xchg
push
sbb
push
add
mov
lret
sbb
lds
add
push
lret
aad
icebp
push
je
lods
mov
arpl
jo
cmpsl
xchg
inc
and
push
push
pushf
cmpsl
rcrl
shlb
mov
rolb
iret
add
imul
cld
pop
push
int3
mull
jnp
adc
sahf
cltd
sub
ret
push
inc
push
push
push
in
or
ret
sahf
pop
adc
int3
mov
int3
mov
leave
cmp
icebp
mov
lret
push
icebp
mov
push
data16
inc
fs
sbb
ret
xchg
push
std
xor
test
push
pop
jnp
add
pusha
icebp
or
dec
jg
loope
and
add
sub
test
adc
push
pop
cwtl
cli
in
and
mov
sbb
xchg
in
std
dec
scas
repnz
jo
std
or
inc
push
pop
dec
ss
rcr
jg
cwtl
jne
cmp
mov
hlt
mov
sbb
push
add
mov
insl
out
cmp
mov
data16
push
fdivrs
pop
dec
dec
int
cmc
adc
xchg
jo
add
int
or
mov
dec
or
cltd
or
scas
xor
mov
int3
pop
loop
insl
iret
lods
xchg
hlt
adc
pop
fsubp
shl
mov
ret
out
aaa
nop
iret
push
arpl
orl
xor
das
insb
cmpsb
xchg
xor
aam
lret
push
cmp
negb
mov
mov
mov
mov
lahf
xchg
jp
jl
add
iret
sub
jne
add
pop
lret
les
pop
imul
push
imulb
hlt
xor
ret
into
arpl
xchg
sbb
negb
add
xchg
mov
clc
insb
imul
in
in
gs
and
sbb
loope
sub
out
rsm
icebp
cs
cli
ja
push
pop
movsl
jnp
mov
mov
mov
dec
and
push
add
leave
aam
daa
das
loop
cmp
dec
dec
cmpl
into
sti
dec
sahf
jne
push
adcl
or
call
add
sti
cwtl
mov
movsl
lret
mov
jne
aam
dec
lea
into
fadds
push
clc
xchg
push
insb
fidivrl
add
jo
mov
add
js
addb
std
int3
aaa
ja
jb
and
aad
mov
in
mov
and
dec
and
movsb
sub
xchg
iret
shl
sar
cld
xchg
mov
lods
test
inc
data16
pop
xchg
pop
fwait
push
popa
push
mov
sub
adc
fsubrl
pop
shrb
or
add
pop
mov
out
sarl
inc
mov
outsl
mov
movsl
into
mov
xchg
mov
subl
cmp
cmp
jle
push
pop
std
xor
xor
fnstsw
fsubrl
mov
add
mov
add
jp
and
sti
in
mov
cmp
or
fsts
scas
and
cltd
in
mov
and
es
mov
notl
ss
jne
repnz
mov
cmp
push
xor
jns
fidivrs
pushf
jl
sbb
repnz
je
dec
leave
jle
dec
jecxz
xchg
xor
stos
or
cmp
xchg
aam
fs
dec
or
jle
nop
ss
lods
in
loopne
pop
rorl
jl
pop
shll
std
mov
add
jbe
les
push
cmp
mov
gs
popf
dec
and
and
ljmp
pop
cmp
in
std
dec
push
mov
xor
fwait
iret
mov
add
ds
mov
lds
shrb
mov
dec
mov
imul
cmpl
add
cmp
fsubl
mov
cmp
push
repnz
lds
push
xorb
loopne
in
in
inc
cmp
inc
jp
sbb
daa
add
enter
push
or
stos
mov
sbb
int3
in
mov
movsl
popf
jb
idivb
repz
sbb
xchg
mov
xor
and
clc
lea
pop
out
es
and
or
xchg
adc
cld
fadds
lret
mov
sbb
roll
xor
adc
lret
cmp
mov
andb
xchg
popf
roll
pop
notb
fs
nop
and
pushf
dec
cmp
test
dec
aad
cmp
arpl
mov
loopne
stc
lea
hlt
dec
lret
cmp
mov
ret
inc
cmp
dec
push
sahf
and
shr
xchg
shl
sbb
lds
jmp
hlt
dec
in
pushf
roll
xor
cld
jecxz
out
scas
jge
push
or
jle
inc
in
ss
sbb
insl
mov
cld
lret
adc
movl
lods
fwait
shl
jno
in
pop
lahf
lea
aad
js
mov
and
std
nop
icebp
mov
xchg
add
cmp
int
cmpsb
adc
orl
pop
sbb
lods
js
pop
push
add
cmp
add
out
es
or
rorl
stos
xchg
mov
out
mov
jnp
mov
outsl
xor
inc
stos
leave
sarl
and
ljmp
dec
shr
push
jno
out
loopne
fld1
inc
in
outsb
adc
adc
inc
adcb
inc
cs
mov
sti
dec
xchg
nop
add
cwtl
popa
push
jmp
pop
enter
repnz
in
jae
fs
xchg
fstl
stc
popa
icebp
or
add
push
sub
hlt
stc
cmpsl
mov
lock
cmc
loope
mov
rclb
mov
adc
and
jle
sub
mov
push
xor
jg
lods
fldl
mov
pop
insl
cmp
jmp
out
mov
and
icebp
or
in
jp
adc
lods
ret
sbb
movsb
mov
jnp
cmp
mov
iret
xchg
test
pop
lds
pop
mov
fisttpll
int
xor
int
icebp
sbb
cmpsl
mov
jg,pn
xchg
cld
sub
aaa
jne
scas
or
addr16
push
aas
jne
cmp
stos
std
sub
xor
enter
int
and
pop
lret
fidivrs
dec
loope
xor
outsl
dec
sbb
jno
push
stc
xchg
in
mov
stc
aaa
icebp
imul
cs
jge
push
push
mov
mov
dec
aam
int
xchg
ret
sbb
ror
jmp
ret
js
movsb
dec
push
mov
jmp
je
cmpsb
in
cmp
lea
dec
mov
loopne
xchg
das
xor
lcall
jmp
cmp
lock
int
std
adc
jno
test
ret
mov
outsb
adc
inc
mov
mov
and
insl
xchg
inc
sbb
jl
movsl
std
fwait
shll
mov
std
jmp
mov
test
mov
add
or
add
mov
or
js
inc
add
cmp
jg
popa
pop
cmc
push
addr16
cmp
jg
std
nop
rol
stos
push
mov
sti
fs
push
ja
inc
xor
and
dec
out
cmp
xor
cwtl
iret
push
mov
mov
inc
mov
in
clc
je
add
sti
cmp
shlb
mov
xlat
inc
fdivs
popf
sti
push
mov
sbb
xchg
mov
lahf
arpl
cltd
mov
in
or
andl
xchg
aam
mov
enter
dec
xor
sub
popf
lds
sub
jns
add
cmp
nop
inc
mov
leave
xor
mov
and
scas
xor
sti
movsb
repz
xor
sbb
xor
jns
and
push
inc
mov
cmc
scas
in
xchg
adcb
test
mov
or
or
cmpl
cmc
lock
std
mov
add
push
pop
cmpsw
in
bound
outsl
inc
sub
and
or
or
pop
std
fdivl
xchg
and
in
jle
sbb
lea
call
fcmovne
mov
mov
enter
jo
jne
cli
lret
sbbl
es
cmpsb
xor
cli
mov
lock
mov
aad
jmp
inc
pop
outsl
cmp
fcomip
xchg
rolb
stc
xchg
cmpb
inc
jecxz
dec
jnp
cmp
xchg
pop
push
in
addr16
lret
adc
cmpsl
inc
lahf
shl
fiaddl
shll
cwtl
dec
cmpsb
cmp
rcll
mov
jns
add
push
movb
lret
adc
mov
mov
and
int
or
mov
mov
cmp
mov
pop
std
mov
pop
stos
jge
push
xchg
add
sbb
mov
mov
stos
popf
insl
dec
in
cmp
dec
in
lret
xchg
std
out
insb
mov
les
icebp
and
inc
jno
add
in
dec
and
mov
adc
xchg
stos
fistpl
in
pop
fs
dec
and
xchg
inc
in
dec
sarb
repz
fwait
cmpsl
imul
push
ja
adcl
jge
inc
add
ss
ds
leave
ljmp
push
sbb
fmuls
cli
scas
add
aam
mov
movsl
pop
xor
fnsave
in
add
dec
dec
pop
push
fisubs
mov
popa
fisttpl
std
mov
mov
jecxz
std
jmp
sub
and
scas
aad
out
stc
icebp
pop
lods
movsl
out
jge
dec
in
decl
push
xchg
add
in
push
data16
push
pop
lahf
mov
sbb
stc
jnp
rcl
call
das
adc
fistl
mov
pop
cli
mov
sbb
fidivs
ret
stc
ds
popa
xchg
mov
gs
jge
inc
fst
xor
mov
jbe
fldl
pop
rorl
cmp
movsb
cmc
out
mul
dec
mov
or
mov
dec
js
and
outsb
adc
insb
mov
inc
popa
bound
cmp
sbb
pusha
div
loope
mov
flds
mov
fwait
jecxz
mov
add
fcomps
lcall
fiadds
cld
jmp
data16
std
push
inc
imul
cli
push
and
cmp
cmp
jae
pop
aad
push
jo
pop
adc
xchg
mov
or
inc
pop
dec
leave
and
int
or
fxch
sub
movsb
dec
inc
out
fwait
lds
bound
sub
int
mov
xor
mov
cmp
iret
jne
das
ja
push
xor
insl
xor
data16
adc
jae
cmpsb
inc
push
mov
daa
cmp
mov
icebp
js
sub
xchg
mov
mov
ja
shlb
ficoms
inc
adcl
sub
sbb
ret
mov
pop
jmp
in
cmp
add
lock
jge
sbb
mov
mov
sahf
jecxz
ds
shl
cli
adc
inc
dec
lock
mov
sarl
pop
sbb
insl
xor
dec
test
inc
call
sbb
sbb
dec
loop
repnz
dec
cmp
mov
outsl
ret
add
in
aaa
test
push
inc
mov
and
sub
repnz
dec
pop
sti
imul
ss
in
loopne
aaa
in
addr16
xchg
add
dec
out
negl
sbb
jno
sub
mov
push
inc
push
dec
shrl
and
mov
fnstsw
xor
stos
sbb
sbb
pop
stos
mov
cmp
mov
in
dec
loope
sbb
or
mov
les
dec
pop
xlat
fdivl
loopne
jmp
test
scas
sub
sub
dec
adc
fadd
mov
mov
add
out
and
cmp
rorl
cmp
int3
cmp
out
pop
test
push
push
popl
sbb
add
mov
push
sub
out
sub
addr16
xchg
or
rcll
std
paddb
push
popa
loopne
jg
and
adc
add
xchg
pop
jmp
aas
js
lds
mov
xchg
sub
xchg
scas
cmc
in
push
call
rol
fwait
in
ret
subb
add
add
or
into
cltd
pop
sub
pusha
mov
leave
pushf
fiaddl
out
test
clc
in
xchg
bound
pop
hlt
dec
ljmp
adc
and
adc
xchg
pcmpgtd
cltd
xor
mov
sarb
ss
aad
dec
add
xor
xor
push
mov
cld
push
cs
xor
int3
pop
xchg
cli
add
and
sub
sahf
ja
test
cmp
cli
jge
dec
mov
add
push
mov
in
cmp
std
cmp
jecxz
sti
daa
add
xorl
jno
jo
cwtl
clc
mov
pop
fldcw
mov
xchg
popf
repz
jbe
add
lods
mov
jecxz
jnp
lds
adc
cmp
js
sub
mov
inc
pop
mov
notb
dec
mov
lds
popa
aas
jecxz
xchg
cwtl
into
add
jnp
jb
stos
shl
jecxz
ss
dec
decl
out
cmpsb
ljmp
mov
int3
popa
fincstp
ss
shll
call
ret
sar
sarl
movsl
inc
push
mov
mov
in
lret
imul
popf
mov
jmp
aam
xor
push
mov
rorl
in
add
stc
in
jae
repnz
cwtl
lock
xor
in
test
jo
das
dec
inc
xor
scas
fs
cmp
or
arpl
sti
aad
rorl
and
lahf
loop
loope
dec
sub
and
andnps
aaa
or
xchg
pushfw
push
xchg
push
xchg
dec
dec
mov
jle
or
popf
mov
lahf
or
test
inc
push
aaa
popa
and
and
popa
mov
dec
shll
fcomps
js
adc
xlat
rorl
rcrl
out
xchg
and
or
add
hlt
sbb
ds
dec
popa
jg
in
arpl
push
pop
popf
push
xchg
and
push
cwtl
and
or
stc
icebp
popa
aad
in
lcall
push
dec
addr16
loop
stc
into
arpl
int
xchg
lret
pop
lcall
inc
enter
icebp
and
ds
xor
jg
or
add
push
outsb
jmp
stos
pop
push
iret
aad
std
ljmp
sbb
ja
clc
xchg
mov
inc
xorl
mov
subb
ja
imul
jg
scas
adc
mov
ret
scas
int
rcrb
inc
fsubs
icebp
cld
push
fdivs
cmp
jbe
inc
inc
mov
pop
cmpsl
in
outsl
aaa
sbb
push
mov
rcrb
in
xchg
fdivrl
rcl
mov
add
in
popf
test
in
cmp
mov
jnp
fistps
mov
sub
cmp
mov
inc
mov
cmp
repnz
std
mov
xchg
and
ret
push
testl
sarl
mov
imul
divl
add
insb
mov
sbb
fnstsw
repz
pop
repnz
mov
pop
rcr
fs
cltd
push
mov
cwtl
outsl
fldenv
std
cli
xchg
ret
mov
arpl
pop
cmp
cmp
clc
mov
add
popa
pop
add
insb
std
xchg
xor
les
jecxz
dec
jns
pop
push
jmp
and
jns
pop
fwait
decl
or
or
cmp
push
popa
cmpsl
cmp
aad
or
cmp
aad
or
mov
call
lcall
ljmp
mov
es
cmc
and
mov
dec
insl
fwait
pop
cld
xor
out
orl
mov
bound
cmpsb
je
pop
and
jo
mov
mov
test
mov
dec
addr16
push
cmp
ficompl
in
fs
mov
pop
mov
jne
push
addr16
out
jne
sbb
aam
jle
repz
les
push
xor
inc
and
adc
inc
popa
inc
xchg
add
mov
ljmp
or
jmp
cmp
add
mov
add
imul
movsl
ja
loop
popa
dec
mov
or
or
addr16
xor
test
lret
mov
les
lahf
dec
outsb
icebp
jecxz
pmaxsw
add
pop
adc
add
dec
popf
mov
aas
cmp
push
cs
std
push
add
pop
mov
shlb
arpl
xchg
fists
hlt
jbe
and
adc
dec
popf
jmp
dec
cmc
ret
das
shlb
rcll
int3
mov
push
cmp
iret
push
pusha
or
mov
mov
arpl
xor
incl
fidivrl
add
mov
stc
lea
mov
push
setno
js
fiaddl
and
mov
cmp
xor
push
cmpsb
fs
sbb
mov
or
int
xsavec
movsb
adc
and
inc
in
push
inc
xor
pop
cmp
xchg
jno
lds
jne
inc
mov
cmp
ja
out
mov
sbb
out
pop
push
nop
sti
cwtl
push
aaa
ret
ret
mov
dec
add
add
sbb
cmpsb
pop
popa
mov
push
mov
push
fdivr
and
icebp
int
fwait
ljmp
lock
cmpb
int
stc
pusha
xchg
inc
xor
sub
inc
lods
cs
das
pusha
das
cld
in
push
fcomi
xchg
rcll
xchg
cmpb
adcb
lds
cmc
das
addr16
add
mov
xchg
mov
hlt
or
push
lods
shll
scas
pop
stos
pop
push
jo
fsubs
loop
clc
in
insl
push
mov
jp
mov
stos
neg
dec
les
cmc
das
and
lea
mov
cltd
ljmp
jle
mov
and
mov
out
sbb
jns
xchg
inc
in
sbb
inc
std
imul
outsl
stos
pusha
adc
jne
pusha
cmpb
lret
mov
sbb
mov
stos
mov
or
popf
fsubr
pop
loope
xchg
push
mov
cmp
and
mov
mov
mov
in
loope
mov
stc
fdiv
and
sub
xchg
sbb
aad
jo
outsl
mov
and
ja
mov
inc
cmpsb
lock
dec
in
call
cmp
push
lods
and
imul
out
pop
xorl
movsl
shr
adc
or
xchg
jecxz
jecxz
mov
or
paddq
pushl
xchg
mov
repz
pop
fwait
sbb
loopne
call
scas
stos
stos
sarb
push
out
out
dec
cmp
out
out
cmpsb
inc
imul
adc
cli
adc
dec
daa
sar
ror
lcall
inc
stc
jg
xchg
mov
popa
mov
leave
adc
push
stc
or
imul
lretw
outsl
inc
ret
cltd
shrb
mov
sub
xchg
test
pop
call
xchg
test
mov
lahf
dec
inc
inc
cmp
jno
pop
push
cld
inc
clc
lea
or
jmp
inc
dec
cmp
notl
cmp
dec
mov
jno
mov
fldt
sti
add
popf
pop
fcmovnu
loope
pop
fadds
jae
push
cmp
shlb
xlat
js
popf
loope
cmp
clc
cmp
mov
fisttps
sbb
mov
in
cld
pusha
popl
inc
inc
aad
cmp
loopne
sti
vpshufhw
jmp
fisttpl
in
dec
or
je
dec
stc
mov
pop
pusha
cmc
pop
dec
insb
ficoms
mov
int3
push
popf
dec
enter
mov
mov
das
mov
iret
mov
dec
or
enter
movsb
cltd
lcall
push
and
lret
fs
fisttpl
jecxz
add
pop
roll
jp
sbb
rolb
xor
push
jb
sub
push
pop
lods
fisubrl
pop
fisubrl
ljmp
jb
pop
xor
popf
shrl
aam
popf
mov
cmp
cltd
cli
jge
lret
push
sub
add
rcl
out
icebp
pop
jmp
or
mov
mov
iret
aad
dec
cmp
adc
popl
out
jmp
or
setb
and
pusha
or
pop
dec
lods
ja
fwait
xor
mov
xchg
push
add
jns
xchg
push
scas
lea
lret
mov
cwtl
in
popf
sti
add
adc
dec
stos
mov
xchg
in
jo
or
sub
dec
and
sbb
popl
dec
dec
gs
lods
lcall
and
sti
adc
cli
les
roll
int3
pop
adc
fiaddl
push
fsubrl
xor
pop
test
xchg
adc
xchg
imul
mov
scas
in
fs
mov
aas
and
and
loope
adc
mov
in
and
sub
inc
xchg
mov
icebp
daa
fldl
shll
mov
aad
pop
mov
rclb
jmp
mov
sbb
mov
pop
stc
inc
xor
int
add
mov
in
int3
adc
inc
cwtl
push
dec
mov
std
jmp
mov
jae
mov
mov
jl
in
ja
add
pop
movsl
mov
jns
mov
cmc
mulb
sbb
out
mov
mov
sbb
cmp
data16
mov
or
mov
inc
cmp
call
andl
lods
out
dec
push
fwait
cmc
dec
cmc
loop
xor
jb
pop
stc
dec
fsubp
loope
mov
cltd
inc
adc
test
mov
fimuls
cltd
inc
lock
sbb
adc
xor
adc
or
pop
mov
inc
cld
imull
add
adc
jg
addb
aaa
jo
rcrb
icebp
mov
jmp
mov
in
addr16
mov
xchg
mov
push
inc
scas
and
dec
cmp
ret
mov
popa
dec
mov
push
xchg
dec
imul
jl
ja
jmp
cld
dec
movsl
enter
and
mov
ja
dec
test
inc
aam
dec
std
rcrb
jmp
rcl
mov
or
aaa
bound
add
test
in
and
pop
ret
push
dec
cli
jle
mov
sbb
dec
xor
inc
pop
mov
repnz
inc
sbb
or
mov
push
cmpsl
mov
jno
popf
test
mov
scas
or
sar
movsl
inc
int3
push
popa
push
mov
sub
ret
dec
std
fwait
ror
mov
out
rorl
in
lret
call
jnp
stc
push
mov
daa
mov
inc
fwait
fs
and
sub
dec
mov
insl
push
scas
cmpsl
sub
outsb
push
in
sub
xor
dec
xchg
add
adc
enter
ja
movsl
add
lret
ficomps
jb
loope
and
inc
inc
mov
mov
sti
dec
aam
push
mov
out
lret
insl
dec
add
dec
add
pop
dec
adc
inc
mov
lods
negb
sbb
frstor
cmpsl
mov
xchg
out
bound
mov
add
es
mov
andl
cmp
cmpsl
sbb
clc
std
mov
loop
lea
mov
mov
jmp
in
cmp
push
xor
mov
std
xor
lods
mov
repz
mov
mov
dec
movsb
push
sbbl
fcoms
jmp
cmpsb
in
push
adc
lds
push
std
jle
scas
aad
test
stos
jecxz
sbb
rcr
lock
push
inc
mov
jge
int3
insl
jecxz
sbb
mov
sbb
shll
lret
push
ds
xchg
js,pn
xchg
shr
scas
loope
lods
jnp
inc
lcall
insl
gs
notl
xlat
das
mov
lret
sete
cmpsl
xor
pop
bound
add
ds
in
test
xchg
cmp
or
lahf
lea
adc
mov
dec
lahf
movsb
arpl
fs
or
pusha
iret
je
iret
aam
in
popf
xchg
add
lahf
pusha
jo
adc
push
insb
xor
sbbb
lret
in
xchg
push
shl
fstpl
cltd
add
mov
inc
in
scas
ret
dec
mov
adc
lahf
rorl
loope
adcb
out
loop
in
shl
pop
ds
popa
movsb
cmc
xor
out
xor
addb
and
mov
lock
jmp
into
sub
mov
mov
sbb
lcall
mov
push
les
nop
hlt
xchg
push
add
fimull
fsubl
std
cmp
aam
aad
cmpsb
outsb
fcoml
movsb
mov
lret
aad
movsb
jle
dec
test
and
jne
jno
xlat
or
push
in
jmp
jg
mov
jge
daa
pop
mov
cld
pop
popa
pop
pusha
lods
jecxz
je
lahf
les
cmp
mov
repnz
cmp
cmpsb
pusha
jecxz
xor
cmp
and
add
jns
sub
xor
xchg
mov
cwtl
lds
and
xchg
rorl
fwait
cmpsb
mov
jecxz
shll
rcll
arpl
pop
movsl
inc
push
sub
xor
pop
in
mov
cltd
pop
aas
ret
and
nop
add
jecxz
test
pop
in
adc
dec
jmp
pop
mov
sti
jne
lret
inc
add
inc
js
loop
pop
lock
scas
sti
icebp
push
jge
and
in
lock
adc
push
fadds
lock
push
mov
push
lret
int3
movzbl
fsubs
jg
inc
dec
push
or
mov
xor
ficoms
or
mov
insl
sbb
mov
mov
imul
mov
hlt
in
mov
inc
subl
jnp
daa
aad
fidivrs
add
popf
adc
sub
movb
stos
fmuls
rcrl
icebp
dec
aam
popa
mov
and
mov
stos
rolb
scas
mov
adc
ljmp
in
jl
in
lret
test
ret
sti
jl
mov
jns
into
mov
adcb
ret
mov
xchg
into
push
stos
imul
mov
aad
out
ret
jl
sub
xchg
aam
fisttpll
out
dec
cmpsb
mov
prefetch
or
dec
push
xor
insb
sub
fisttpll
imul
in
scas
cmp
xchg
dec
sbb
cmp
aaa
or
aas
add
xchg
pop
dec
fmuls
je
shrl
xchg
cld
arpl
dec
pop
push
arpl
sub
std
gs
xchg
inc
jle
add
fiaddl
les
rorl
sti
mov
sti
pushf
cmp
int
popf
adc
sbb
stos
testb
das
popa
sub
ja
mov
cld
mov
xchg
xlat
mov
inc
pop
shrb
ljmp
mov
dec
outsb
mov
or
cmp
jae
mov
lret
push
fnstsw
das
sbb
cli
cltd
out
iret
pop
push
ficompl
fsubp
cmp
sbb
jns
jp
add
std
fnstenv
mov
xchg
sti
out
ret
push
dec
jns
pop
sbb
std
push
dec
lret
stc
aas
or
mov
add
movsl
xlat
movsl
sbb
inc
xchg
iret
std
inc
roll
call
mov
loope
push
mov
loope
addr16
sub
loope
mov
hlt
or
inc
call
int
outsl
das
imulb
aad
jno
ja
push
sub
lahf
popa
cmp
mov
or
lods
stc
xchg
out
add
dec
lods
cmp
add
arpl
es
and
std
mov
mov
jmp
cmp
aam
data16
and
scas
add
cmpsb
jb
lds
lock
mov
push
lahf
repnz
sarb
lds
push
bound
mov
add
pop
std
xchg
test
aas
jno
mov
mov
call
add
sbb
data16
mov
mov
lods
rcrl
int3
sbb
pusha
mov
imul
in
leave
dec
in
or
pop
mov
mov
mov
aam
mov
push
test
repz
loope
adc
jecxz
rolb
and
sbb
mov
push
add
jge
sbb
loop
mov
mov
dec
cmpsl
sub
and
dec
shll
arpl
lods
push
ret
mov
std
inc
xlat
imul
sarl
jns
mov
jns
xor
xchg
and
in
jmp
dec
popa
mov
push
mov
mov
add
cld
pop
xor
dec
int
add
aaa
out
into
and
xchg
or
dec
repz
in
adc
rcr
int3
jbe
xlat
xor
fsubr
fdivrs
aad
stos
jbe
xchg
out
cmpsl
pop
jg
in
aas
mov
les
mov
std
hlt
mov
jle
and
leave
popa
repnz
cmc
popf
ljmp
outsb
int
and
adc
pop
inc
sbb
insl
or
jge
jno
stos
enter
jbe
cli
ja
push
rorl
icebp
or
jns
inc
lret
add
sti
repnz
repz
icebp
mov
test
icebp
lods
push
movsl
lea
mov
aas
jle
mov
addr16
mov
xor
test
mov
pop
mov
xchg
in
inc
cmpsb
test
mov
xor
lock
popf
mov
inc
jne
sbb
add
dec
cmpsb
mov
adc
pop
mov
test
popa
aad
js
loopne
dec
jg
fstl
jnp
movsb
pop
pop
std
dec
sub
mov
xor
dec
imul
jg
push
add
and
idivl
scas
ja
cmpb
mov
mov
or
sbb
push
jle
or
stc
inc
cmp
out
popf
dec
test
aas
cmp
aaa
adc
les
mov
cltd
sti
push
sbb
nop
push
sbb
inc
mov
stc
aad
dec
cmpsl
std
push
push
inc
inc
mov
jbe
in
jns
mov
pop
pop
imul
mov
sarb
fmull
movsb
push
mov
stos
push
inc
ja
push
lret
sub
mov
xchg
orl
out
mov
ds
or
cmp
into
adc
jp
push
cld
ds
cmp
out
push
idiv
mov
mov
add
orl
jle
sarb
sub
inc
cmpsb
push
notl
cli
sbb
cmp
in
clc
push
sub
jo
ds
jns
mov
andb
pop
rorl
mov
adc
jg
xchg
cmpsb
cs
fisubl
inc
mov
cmpsl
inc
incl
sti
movsb
mov
aad
in
std
test
dec
pusha
xor
xchg
ss
and
fstp
push
pop
popa
dec
adc
sarb
movsl
push
cltd
jo
or
add
sbb
sbb
mov
pop
mov
inc
addr16
xchg
mov
ds
dec
pop
into
lods
lret
cmc
inc
int
mov
cmp
jl
add
or
icebp
jmp
mov
xor
jecxz
push
xor
movsl
xchg
lret
imul
push
sarb
adc
or
adc
xor
bound
ret
dec
mov
sub
es
idivb
and
xor
jmp
fcoms
xchg
mov
sub
push
sahf
jmp
imul
add
and
mov
xchg
inc
dec
jbe
mov
ficoms
mov
hlt
xchg
lods
sub
jmp
sbb
mov
loope
js
fs
sbb
cmpsb
enter
pop
push
rcll
dec
mov
inc
negb
add
or
and
adc
add
jg
dec
leave
mov
xchg
jl
add
adc
aaa
mov
jno
insb
mov
arpl
pop
mov
lods
std
adc
stc
popf
mov
sahf
jo
sbb
inc
mov
sbb
pop
push
mov
add
out
subl
and
vpshufd
mov
movsl
jns
xor
xchg
aad
sub
fsubr
cltd
sub
inc
dec
jecxz
xlat
mov
xor
inc
mov
lret
sbb
mov
negb
test
push
inc
movsb
sti
das
mov
bound
dec
xchg
movsb
shlb
add
xchg
push
stc
loope
or
fprem1
in
mov
stc
add
add
into
fucomi
jno
std
cmp
aad
mov
or
testb
mov
push
and
stos
movsb
pop
cmpsb
nop
pop
inc
mov
insl
fmull
mov
cmp
lock
or
aas
outsb
jmp
int
adc
push
push
aaa
cmp
mov
fwait
mov
shll
mov
mov
xchg
xchg
xchg
and
xchg
dec
shl
stc
shl
cmpsl
xor
lahf
push
sub
push
and
mov
mov
xor
xchg
push
cmp
pusha
into
add
aaa
xor
xchg
mov
dec
icebp
sbb
into
xchg
add
repz
mov
add
inc
notb
pusha
sbb
sbb
mov
cmp
inc
mov
add
mov
repz
cli
addr16
cwtl
jbe
add
dec
mov
mov
jl
mov
mov
testl
push
mov
add
mov
mov
nop
push
les
call
popa
mov
inc
mov
cmc
add
mov
xchg
add
fnsave
mov
gs
push
cmp
add
mov
xchg
ljmp
inc
movsb
test
test
push
xchg
sbb
xor
in
adc
dec
push
lsl
fwait
jecxz
jmp
fisttpl
int
je
outsb
xchg
lcall
ja
lcall
out
mov
stc
in
iret
dec
sub
jbe
aad
outsl
les
fwait
int3
and
lcall
sbb
in
js
gs
adc
insl
jp
pop
lcall
jl
mov
lahf
insl
cmpsb
pushw
mov
dec
mov
decl
jns
imul
ja
test
fs
insb
xor
mov
or
push
cmpsl
movsb
mov
test
icebp
ret
fs
stc
jge
test
or
xorl
sub
sbb
or
shlb
test
mov
lods
in
lret
pop
sti
sub
lds
mov
add
and
lret
sub
inc
mov
test
pushf
push
sti
sub
cmpsl
xlat
push
not
test
cmp
sbb
ja
pop
mov
dec
and
mov
adc
shll
push
ficomps
movsb
mov
fcoml
push
jns
jno
mov
fdivrp
loopne
in
ret
aaa
dec
popf
fistpl
inc
call
sarl
bound
in
psrld
bound
pusha
pop
mov
into
xchg
add
jp
push
gs
xor
inc
in
cld
pop
dec
bound
mov
mov
sbb
mov
push
or
push
repz
xchg
sub
std
out
repz
fimull
repz
test
jne
mov
jne
cmc
in
movsb
stc
mov
rcr
clc
arpl
jecxz
test
cmpsl
cmc
push
stos
stos
add
sahf
clc
and
popa
xor
jl
stc
inc
cmovo
cmpsl
lret
push
test
fcomip
dec
sub
mov
inc
dec
test
test
pop
dec
addr16
leave
adc
in
pushf
std
lods
push
jo
mov
fildl
or
in
ret
mov
push
rol
jl
sarb
jns
cwtl
loope
sti
mov
adc
aam
std
mov
adc
ljmp
and
sub
add
lret
dec
loopne
fucomp
shlb
dec
push
rcl
adc
test
push
pop
ljmp
aad
ret
jmp
sub
popa
sbb
sub
mov
pushf
jbe
sahf
pushf
mov
xchg
xor
ret
pop
cwtl
lea
addr16
cmp
dec
and
mov
shl
jecxz
int
cmp
shl
je
out
decb
cmp
add
xor
xchg
shlb
loopne
mov
cltd
push
inc
xor
inc
xor
enter
gs
fs
lock
sbb
jp
sarl
ror
add
nop
loop
sub
dec
aam
jge
out
imul
sbb
int
fimull
sub
pusha
loope
arpl
mov
repz
xchg
and
and
xor
mov
or
jecxz
add
pop
push
lods
int3
aaa
inc
inc
fwait
cmp
sub
shl
cmp
out
or
stc
sbb
int
add
jmp
mov
mov
and
pop
dec
arpl
inc
addr16
dec
iret
and
jns
dec
sbb
pop
fwait
mov
add
out
mov
mov
add
jo
lds
call
lock
stc
and
sbb
mov
loope
addr16
sbb
mov
adc
mov
dec
scas
and
mov
insb
in
lcall
fsubr
pushf
dec
std
lret
lret
arpl
inc
scas
fs
xor
cmp
dec
out
mov
pop
loope
call
test
cld
aad
xchg
xlat
je
xor
jmp
lea
mov
lea
in
das
fwait
idiv
in
push
test
jmp
nop
rcrl
test
imul
icebp
sub
lods
jne
aas
add
dec
sti
sbb
mov
or
fsubs
mov
push
gs
shlb
adc
daa
push
call
mov
cmpsl
add
decl
inc
jp
mov
cmpsl
stc
inc
sub
hlt
sub
rorb
stc
inc
js
aaa
push
je
js
test
std
in
pop
lret
sbb
ja
popf
outsb
lock
add
cmp
add
aad
jns
andl
xchg
stc
mov
xchg
repz
ja
xor
mov
and
adc
push
ss
xor
jecxz
mov
add
out
mov
dec
int
mov
sub
out
popa
test
arpl
jecxz
stos
jecxz
negb
dec
cmc
mov
or
sbb
cmp
stos
jge
adc
jecxz
mov
xchg
stos
out
cmpsb
and
sbb
aam
xchg
push
cmpsb
or
xchg
pop
xchg
and
test
mov
loop
movsl
lret
add
movsb
xchg
cli
test
data16
arpl
aad
loop
jmp
stc
loop
inc
call
test
lods
rol
pop
jb
jbe
xor
mov
data16
in
sbb
mov
ficompl
push
xchg
sbb
loopne
aad
pop
aad
push
pushf
loopne
jle
ljmp
dec
loopne
push
in
test
dec
enter
bound
mov
sbb
jns
imul
push
and
lret
ss
outsb
push
movsb
sbbl
dec
pop
fsubs
inc
cwtl
jp
cmp
dec
push
cs
in
dec
fldenv
xchg
cmp
in
fdivr
xchg
hlt
arpl
jg
testl
mov
inc
call
or
loope
mov
dec
jecxz
adc
sarl
lcall
add
inc
outsb
loopne
xlat
xor
stc
sbb
enter
ret
cmp
rep
je
cld
fdivrl
sub
test
push
mov
pop
std
loope
out
cmpsl
sti
sbb
out
mov
ret
loope
jae
jae
cmpb
mov
sbb
loope
movsl
lock
int3
leave
imul
lcall
outsb
jmp
mov
std
fbld
mov
adc
dec
add
orb
mov
jo
mov
nop
and
dec
fs
jp
mov
xchg
jecxz
lea
add
scas
pop
push
cmp
pusha
loopne
dec
test
cld
push
inc
pop
in
jmp
cwtl
shlb
dec
mov
adc
push
sub
fdivl
sahf
test
in
adc
arpl
jmp
insb
icebp
mov
adc
ljmp
out
cmc
stc
movsl
cli
push
int3
sbb
cmp
out
icebp
insl
mov
in
aas
out
xchg
jns
cli
cmpsl
cmp
dec
sub
popl
lea
mov
lcall
mov
xor
mov
add
mov
mov
mov
ss
or
sub
int3
fsubs
mov
dec
dec
sbb
frndint
sbb
sbb
inc
cmp
in
clc
xchg
xchg
jp
fs
mov
and
xor
mov
pop
cld
mov
pop
movsb
es
mov
xchg
pop
adc
jne
or
add
nop
cmpsl
stc
add
andb
mov
fmulp
mov
je
dec
xor
call
and
sbb
scas
sbb
xor
das
lods
mov
into
testb
fisttpll
jge
push
push
dec
lods
xchg
sbb
mov
dec
mov
mov
adc
call
xor
pop
xchg
popa
jbe
mov
std
lcall
pop
mov
pop
mov
sub
std
cmp
mov
sub
fs
int
cli
jmp
inc
mov
movsl
dec
sub
jnp
mov
in
dec
add
stc
pop
cltd
sub
or
stc
add
in
and
stc
mov
xchg
popf
and
xchg
push
stc
cmp
xchg
orb
in
aad
fnstenv
in
mov
mov
pop
leave
pop
jmp
pop
add
stc
sub
lock
and
jns
inc
inc
mov
mov
inc
sub
mov
adc
cli
or
mov
xchg
mov
js
not
nop
sub
daa
stc
in
xchg
jo
add
push
and
dec
insb
fsubr
mov
aas
roll
and
leave
sbbl
incb
inc
cmpsl
imul
push
repnz
mov
out
push
mov
imul
in
gs
push
jmp
xchg
adc
push
std
cmpsb
insb
arpl
imul
mov
push
xor
mov
mov
insl
dec
jmp
add
enter
lock
sub
jnp
jp
mov
popf
cs
or
loope
adc
pop
popf
movsl
xchg
bound
shrl
jo
lods
movsl
dec
xchg
sub
push
out
scas
test
mov
out
mov
add
mov
shl
in
in
cld
ret
pop
mov
lret
mov
in
mov
loope
leave
idivb
imulb
xor
loope
push
mov
and
add
stos
sub
loop
lea
fcompl
daa
jo
fld
adc
movsb
adc
sub
cmpsb
xor
ljmp
sbb
lcall
lock
psraw
mov
ds
cmc
sub
mov
cmpsb
ja
incl
je
or
js
lret
mov
ret
in
push
cld
xor
dec
push
popa
pop
push
mov
in
lcall
cli
jl
cmp
in
sub
or
xor
dec
hlt
orb
pop
mov
jecxz
js
loope
pusha
xchg
mov
mov
jb
jmp
and
ret
clc
pushf
xor
test
out
pop
hlt
scas
pop
mov
mov
fisubl
in
out
mov
xchg
ds
jno
xchg
dec
add
mov
lods
or
repnz
inc
cmp
test
jns
fstps
mov
cmpsb
hlt
cli
cmp
sti
cmpsb
mov
mov
push
lds
jecxz
sub
les
xchg
or
adc
sbb
push
lods
std
mov
mov
push
out
mov
jecxz
fadd
lds
outsb
ds
and
and
xor
push
incl
dec
rcrb
stc
adc
fucomip
pop
pop
add
frstor
push
pop
dec
fstps
decl
xor
xor
jmp
mov
stos
and
neg
xor
orl
lock
xor
adc
add
mov
or
incb
lret
mov
rolb
lds
xor
in
or
xor
jne
and
data16
ret
fxam
adc
ret
dec
movsl
pop
cmpsb
xchg
sbb
out
lea
inc
clc
sub
nop
pop
mov
icebp
jnp,pn
sti
fildl
cltd
dec
mov
std
pop
jmp
subb
testb
dec
les
mov
out
mov
pop
outsl
sub
sub
mov
loop
or
neg
or
ficompl
data16
rol
in
lcall
scas
xor
faddl
jno
jmp
ss
fldl
insb
mov
lds
cmpsl
dec
mov
into
jp
inc
mov
pushf
popf
inc
in
mov
clc
mov
push
push
bnd
pop
add
ja
and
mov
mov
cmp
decl
and
jo
and
jecxz
int
push
jecxz
pusha
pop
movsl
jecxz
sbb
pop
lahf
mov
and
jecxz
jo
xchg
aas
jecxz
cltd
jecxz
jmp
mov
pop
rcll
jl
cmp
insl
ret
lds
dec
mov
jecxz
mov
shll
les
call
addr16
pop
out
ss
test
loope
rcrb
bound
popa
fs
out
test
test
loope
xor
dec
cmpsb
and
sub
lock
sub
xchg
ror
call
or
mulb
fdiv
gs
leave
aam
scas
sub
mov
jle
mov
push
mov
jnp
jnp
mov
lods
int
repz
mov
loope
and
mov
xchg
dec
test
mov
lcall
mov
ja
xchg
mov
into
bound
movsb
in
pusha
sbb
in
xchg
cmp
cmpsb
sub
out
jnp
lods
mov
xor
out
mov
andl
enter
adcl
in
adc
icebp
adc
icebp
inc
iret
cmp
outsl
inc
push
repnz
mov
cmp
cmpsb
fiaddl
ror
repnz
je
mov
xchg
add
inc
notb
xor
mov
repnz
test
pop
loop
mulb
mov
push
pusha
or
adc
jmp
lods
inc
cmpsl
lret
jle
je
enter
add
push
xlat
jmp
or
and
mov
in
repnz
into
dec
mov
and
ss
pop
cmp
xchg
pop
mov
pop
ljmp
divb
adc
andb
les
std
icebp
aaa
add
lods
add
xchg
mov
sar
or
in
xchg
mull
ror
and
mov
cmp
cmpsb
jns
mov
mov
clc
out
add
jns
outsl
jmp
es
pop
loop
test
inc
inc
mov
push
or
lods
mov
and
pop
aad
jno
pop
insb
jl
dec
call
xchg
mov
arpl
jo
sbb
loope
mov
xor
sahf
fsubr
xor
adc
inc
adc
rolb
and
inc
scas
insb
cltd
sti
or
iret
idivb
jae
incb
sbb
lret
jge
roll
push
stc
xchg
sbb
pop
flds
gs
sbb
sub
pop
js
mov
inc
mull
xchg
popa
inc
mov
test
out
in
sbb
adc
sub
push
rolb
sbb
bound
js
or
in
mov
xlat
mov
xor
idivb
in
std
leave
mov
in
int
int3
jnp
sbb
or
xchg
stos
xchg
push
or
mov
jo
add
mov
pop
add
dec
xchg
jg
jmp
jne
inc
push
notb
shrl
sbb
cmc
sahf
adc
data16
loope
rol
lds
insl
mov
mov
imul
pop
out
cmc
mov
sbb
mov
cmp
xor
mov
dec
out
mov
in
aaa
out
xchg
mov
dec
inc
fwait
inc
in
pop
dec
js
iret
pushf
jp
movsb
sti
ljmp
sbb
cld
xor
cmpsb
xor
and
rcrl
xchg
lahf
outsl
jne
popf
jne
bound
sbb
outsb
sar
in
pop
add
xchg
xchg
in
fs
nop
lea
pop
in
lcall
sbb
jl
shll
lret
lret
cmpb
xchg
push
and
pop
xor
mov
jb
mov
in
xlat
std
icebp
faddl
mov
test
mov
inc
mov
lods
push
iret
insl
xchg
out
lret
or
out
enter
mov
dec
push
jg
and
mov
push
movsb
ficoml
ds
cmp
adc
inc
or
cmc
loope
fldenv
mov
in
sbb
sahf
mov
adc
cmpb
jg
loop
in
pop
jnp
les
fs
push
xchg
jae
adc
cmp
les
inc
xchg
mov
jne
in
daa
sbb
out
ret
xchg
push
and
pop
lahf
sarl
ret
mov
push
scas
nop
or
test
inc
rol
pop
shr
pop
mov
push
add
and
jae
dec
mov
mov
loope
sub
sbb
inc
scas
jo
cmp
jmp
inc
ja
cli
mov
dec
lea
sub
dec
dec
scas
mov
mov
jne
adc
test
aas
arpl
dec
loop
mov
cmp
and
mov
imul
fistl
add
in
cmc
mov
mov
jnp
sub
ret
icebp
movsl
frstor
lahf
add
hlt
loopne
cwtl
jnp
cmp
lret
push
xchg
sub
push
int3
adc
xor
sti
iret
adc
into
lcall
cli
aaa
push
test
call
shl
pop
popf
inc
jmp
insl
pop
push
adc
out
mov
or
fs
xchg
dec
jns
sbb
xchg
or
movsl
stos
out
cltd
and
cmp
andl
shlb
mov
push
hlt
adc
cmp
cmpsb
movb
leave
cmp
mov
out
imul
popa
ret
rcrl
xor
cld
push
mov
xchg
movsb
out
lahf
lahf
sbb
jecxz
xlat
xchg
mov
aaa
dec
aam
add
int3
idivb
or
pop
mov
mov
and
pop
popa
rolb
adcl
rcrb
xchg
aad
cmpb
das
xchg
notb
stc
inc
mov
popf
sarl
dec
add
mov
mov
or
or
ds
rorb
call
jecxz
inc
dec
dec
sub
jo
push
shl
mov
jecxz
mov
and
je
jl
cmp
out
sahf
insl
stc
loopne
jecxz
mov
in
inc
jecxz
ljmp
jecxz
movsl
mov
jo
cli
dec
mov
sub
dec
cli
out
add
popa
clc
ds
or
aas
pop
pop
adc
mov
int3
mov
cmc
out
insl
dec
sbb
stos
adcl
frstor
xchg
lcall
pop
adc
loope
sbb
std
jae
add
insl
push
stos
lea
loop
insl
call
and
stc
lea
dec
aad
stos
insl
mov
sar
sub
cmpsb
dec
or
inc
ret
rclb
ror
pushf
mov
std
dec
int
dec
loope
cmp
xchg
push
lcall
stos
shlb
mov
repz
jne
cld
fs
mov
xor
xor
xchg
mov
in
lret
scas
jae
add
xchg
jns
lret
fs
ja
subb
test
xchg
and
imul
jo
add
cmp
mov
loope
or
in
fsubrl
int
mov
out
arpl
popa
dec
dec
sbb
mov
lahf
xor
xor
xchg
stc
nop
sbb
cmc
addr16
aas
mov
xor
test
jp
lock
mov
cmpsb
in
xchg
rorb
xor
mov
stc
or
sti
test
jb
push
out
mov
in
daa
mov
push
or
jecxz
test
dec
stc
sti
push
pop
adc
xor
push
ja
test
std
add
dec
mov
fisubrl
notl
leave
clc
ja
push
sar
dec
fstpl
mov
add
inc
jbe
sbb
imul
mov
fstp
jmp
addr16
add
lcall
dec
sub
xchg
pop
icebp
xor
pop
mov
xor
imul
mov
rcl
mov
jmp
mov
inc
fidivrs
mov
movsl
xor
pop
pop
popf
popa
decb
popa
lods
dec
adc
loope
xchg
jno
mov
xlat
test
mov
fsubp
lds
mov
jno
pavgw
jae
push
push
adc
pushf
jecxz
mov
out
adc
jns
pop
pop
jmp
sub
jns
pop
inc
mov
xchg
int3
xchg
jecxz
jo
data16
mov
push
inc
jecxz
cmpsb
and
jno
popa
ret
aad
or
dec
loopne
inc
cld
ret
sar
adc
sbb
mov
loope
cmpsl
mov
ds
scas
cli
sub
cmp
je
cmpsl
call
ds
imul
sbb
mov
sbbl
ljmp
inc
dec
xchg
stc
inc
xor
scas
push
xchg
sti
fldenv
stos
int3
scas
scas
xchg
xchg
adc
jle
ss
adc
rorb
ret
xchg
int3
ja
test
rcrb
inc
lods
add
mov
stc
imulb
shll
testl
movsl
push
dec
dec
mov
dec
dec
and
jl
popa
out
popa
or
enter
cmp
sbb
inc
xor
je
lahf
mov
jp
pop
or
mov
fidivrl
outsb
dec
mov
push
mov
dec
out
xchg
outsl
and
pushf
insb
mov
add
xchg
mov
fcomps
jecxz
mov
mov
movsl
pop
loopne
mov
arpl
pop
sbb
jecxz
jo
into
ds
and
mov
pop
lds
nop
inc
jge
call
popf
in
inc
cld
imul
cld
stos
imul
mov
mov
test
push
mov
cmc
cltd
in
bound
fbstp
shlb
push
xchg
jnp
jb
scas
loop
push
in
scas
ret
push
or
fisubl
cmpsb
or
sarb
xchg
jo
jge
inc
popa
jl
mov
loope
ds
cld
dec
std
cmp
out
ja
popf
adcl
sub
cli
pop
pop
and
mov
repnz
sbb
dec
sub
sahf
sti
enter
and
int3
filds
dec
aas
shlb
mov
inc
popa
jno
stos
cmp
pushf
cmc
fs
int3
add
into
stos
rorl
and
rep
fstl
xchg
loope
mov
pop
loopne
addr16
in
jb
mov
push
test
imul
push
and
cmp
inc
and
test
sub
mov
cmpb
jo
mov
push
gs
cmp
sbb
js
stc
ss
inc
push
es
xchg
jae
sub
pop
mov
popf
fndisi(8087
xchg
pop
sbb
ficomps
sub
mov
pop
sbb
mov
std
call
shll
daa
scas
push
jne
sbb
jmp
or
cld
push
mov
enter
push
pop
test
cmp
dec
fidivrs
mov
jo
pop
dec
jp
mov
jg
jecxz
mov
dec
out
jecxz
ret
pop
dec
mov
loope
jecxz
in
repz
loope
jecxz
pop
fidivrs
mov
std
jecxz
iret
fldt
ljmp
push
call
aad
or
cld
lret
frstor
push
int
mov
out
mov
xor
dec
cmc
lret
dec
cmp
cli
les
sub
div
aad
or
inc
lret
pop
fdivrl
mov
jbe
jle
invd
in
push
movsb
xchg
insb
dec
mov
ljmp
bound
xchg
sub
push
fstl
ljmp
push
xchg
mov
fsubrs
movsb
adc
jbe
pop
and
mov
pop
cmpsl
jle
in
jge
std
test
int
mov
dec
in
in
jp
push
jg
daa
lods
rolb
enter
jns
sub
out
stc
popf
movsb
jl
mov
inc
pop
jns
data16
inc
enter
lds
add
cmp
fcmovb
sub
add
push
xlat
xchg
sarb
lods
or
fidivrl
rclb
sub
push
sti
int3
sbb
repnz
xor
push
je
enter
lcall
push
std
jg
repz
push
xor
insb
aaa
arpl
push
pushf
lods
lcall
mov
dec
pop
inc
pop
pop
cmpsb
inc
in
in
pop
movsb
int
gs
cmp
daa
shr
testl
jae
loop
inc
adc
adc
jbe
rorb
dec
test
inc
jns
or
bound
xchg
jle
loop
dec
inc
jne
mov
cli
adc
jg
xor
punpcklbw
pop
inc
fwait
arpl
dec
outsl
add
mov
sbb
clc
cld
dec
or
sub
in
pop
shlb
movsb
fs
mov
ficompl
lea
lods
jmp
icebp
xor
inc
rcrb
add
or
mov
int3
sti
jecxz
or
jns
pusha
in
xchg
icebp
push
imul
daa
sbb
fcmovnb
aas
mov
add
add
mov
push
icebp
test
mov
push
xchg
and
pushf
mov
sub
es
outsl
rclb
lock
pop
adc
and
hlt
mov
pop
rolb
mov
mov
mov
fiaddl
jb
not
xchg
scas
stc
xchg
mov
add
ret
outsb
mov
dec
js
and
and
mov
hlt
in
ljmp
std
xchg
mov
scas
insl
movsb
or
test
popf
xchg
mov
mov
adcb
or
iret
push
jne
lret
push
xchg
jge
or
or
or
popf
lcall
bound
mov
aaa
fs
adc
cmc
jae
mov
mov
xor
mov
pop
and
insb
rorl
int
xchg
mov
xor
mov
addl
les
outsl
jle
adc
lea
in
pop
cmp
mov
loope
inc
push
pop
adcl
das
popa
mov
mov
rolb
sbbl
add
gs
adc
out
jne
roll
dec
dec
pop
xor
mov
fistps
mov
lret
push
or
jae
lods
pushf
jo
pop
movsb
or
ljmp
sti
inc
sbb
popf
mov
fiaddl
pop
shll
or
or
cmp
popa
cwtl
push
dec
mov
cltd
mov
cmc
fisttpll
mov
loope
inc
sbb
and
movsl
ss
cmc
push
push
mov
fmulp
sbb
inc
and
push
je
dec
push
insb
addb
dec
stc
imulb
push
aas
push
out
int3
in
sti
xchg
loope
mov
mov
hlt
data16
xchg
outsl
push
fstpt
push
leave
or
mov
push
cmpsl
scas
fs
loopne
lcall
jb
mov
mov
ficoml
call
ficoml
imul
add
xor
mov
push
mov
xchg
mov
sbb
pusha
xor
and
dec
inc
mov
push
or
popf
faddp
cmp
sahf
xor
dec
stos
orl
imul
jbe
iret
xor
add
xchg
enter
popf
out
mov
stc
test
in
sbb
idiv
add
in
push
inc
jecxz
fsubs
lret
stos
add
xchg
xchg
dec
push
pusha
mov
and
cmpsb
add
or
stos
fidivl
mov
into
aad
cmpsb
pop
out
pop
test
cld
test
aaa
adc
sub
pop
mov
popa
stc
jb
mov
push
or
xchg
stc
shl
std
pop
sti
movsl
insl
sarb
or
push
add
xor
lock
popl
inc
imul
testb
or
jo
mov
fwait
jecxz
mov
add
fadds
repz
push
mov
std
sbb
mov
negb
jnp
dec
mulb
ljmp
pop
shl
out
es
adc
mov
popa
cli
mov
loope
dec
sbb
xor
popa
movsb
mov
orb
dec
mov
dec
mov
xchg
sub
test
fs
dec
push
hlt
ret
fisubs
xchg
fisubrs
lods
mov
shlb
adc
sbb
mov
test
loop
mov
sub
mov
std
mov
push
mov
lods
mov
dec
mov
out
jne
push
inc
cmp
jl
cmpsb
add
rolb
loopne
xor
sahf
into
stc
adc
mov
stc
addb
push
out
jb
push
sbb
adc
mov
movsb
add
lret
sarl
mov
mov
push
int3
lods
orl
cmp
mov
fwait
stos
addl
cmp
ja
mov
dec
mov
mov
lea
mov
inc
mov
jmp
mov
sub
fsts
loopne
mov
dec
mov
out
push
mov
mov
mulb
ret
iret
rorb
aaa
cmpsb
sbb
jg
jnp
dec
je
or
push
inc
aam
les
mov
add
push
repz
imul
popf
cwtl
xchg
xchg
sub
add
jl
cmpsw
jbe
mov
loope
inc
xor
fistpl
sub
js
out
xchg
cli
test
rcll
ret
andl
movsb
shl
lea
test
hlt
mov
cld
js
scas
pusha
pop
xlat
data16
inc
stc
dec
insb
inc
shr
aaa
ret
stos
dec
jg
pop
lcall
push
add
xchg
insb
es
cmp
incl
int
sti
test
scas
cmp
fs
and
mov
push
xchg
daa
jl
dec
mov
lahf
mov
sti
add
mov
jo
in
sbb
and
sbb
jge
movsb
mov
int
lret
sub
int3
pushf
jge
clc
cld
jo
roll
lret
les
int3
std
in
push
in
std
mov
jo
imul
xor
movsb
ds
mov
push
add
push
jno
std
dec
iret
inc
fldt
sub
int
or
mov
es
aaa
loope
add
dec
push
ret
sub
mov
test
int3
mov
insl
inc
or
mov
push
pop
repz
out
jnp
popa
lods
shll
or
sarb
push
fldl
jg
or
mov
mov
pop
mov
sarl
cltd
lock
jmp
lods
cld
stc
sbb
int3
in
push
add
add
and
cwtl
dec
jp
in
std
icebp
mov
mov
mov
stc
push
push
and
scas
insl
push
enter
inc
sbb
test
cmp
mov
jecxz
lods
lret
fs
sbb
divb
cmp
add
shlb
test
mov
flds
cwtl
push
outsb
and
int3
pusha
xchg
lods
and
and
outsl
leave
lcall
add
xchg
jmp
pop
cltd
jl
sbb
mov
cwtl
in
rcrl
mov
mov
fbstp
xchg
lgs
sbb
dec
pop
pop
rorb
sub
test
pop
jg,pn
enter
xor
adc
je
jecxz
je
adc
into
dec
push
pop
mov
pop
adc
mulb
fnstsw
dec
sbb
pusha
sub
lcall
das
push
int
negl
jnp
scas
lods
xchg
mov
xor
xchg
icebp
call
mov
cmp
or
sbb
lea
fsubs
jne
sbb
sahf
ret
out
add
dec
jg
popf
push
sub
dec
rolb
push
adc
push
es
pop
mov
rcll
int
sbb
cmp
pop
add
ja
gs
jmp
into
roll
lret
dec
add
clc
lock
stos
jns
fdivr
aaa
and
xchg
cwtl
stc
add
jmp
aad
lds
mov
sub
sub
cld
sub
lds
lock
arpl
rcrb
and
aaa
or
test
push
cmp
jnp
pop
sti
insl
aam
rclb
cli
sub
dec
sarb
aas
push
stc
mov
sbb
sbb
ss
pop
mov
mov
mov
and
scas
or
mov
pushf
fidivrl
fadds
ret
scas
mov
and
and
dec
fdivl
mov
push
jmp
adc
xchg
data16
int3
mov
xor
pop
dec
outsl
push
jl
jne
fcomip
and
mov
xchg
pop
stos
xchg
adc
in
mov
sbb
sti
lret
cltd
xor
arpl
pop
cs
xor
mov
xchg
fs
int
stc
mov
mov
dec
std
cmp
lret
aad
xor
pop
xor
and
in
call
jae
add
xchg
mov
ret
incb
addr16
loope
pusha
sbb
or
ja
pop
mov
mov
mov
fwait
mov
and
cmp
out
nop
ljmp
filds
enter
ret
cmc
jo
insb
mov
bound
nop
aaa
out
xchg
ja
dec
rcrb
les
mov
xor
mov
daa
mov
jns,pt
ja
jns
cmpsl
xchg
imul
xor
dec
inc
cmp
mov
pop
fs
push
cltd
in
les
sub
xor
sbb
jae
xchg
popa
xor
std
repnz
adc
enter
sbb
loope
or
sbb
lds
cmp
jne
mov
test
and
loope
pop
cld
ret
xchg
imul
sbb
and
jmp
sub
les
mov
inc
dec
dec
aam
stc
shl
sub
inc
insb
imul
aam
adc
fs
popf
shll
dec
push
mov
inc
lret
xlat
push
scas
mov
sbb
call
inc
inc
scas
iret
je
sub
inc
cmpsl
ss
jae
sbb
movsl
jl
enter
xchg
in
int
out
mov
xor
fwait
mov
push
inc
dec
cmp
mov
push
call
mov
push
das
in
adc
fimull
mulb
sbb
in
xor
pop
scas
popa
push
fwait
nop
add
jmp
and
mov
mov
dec
mov
jecxz
mov
sub
xchg
sbb
dec
aam
fwait
lds
inc
jge
shll
xchg
and
in
dec
lods
subl
test
add
xchg
jl
mov
and
mov
jns
pop
fdivl
popf
stos
dec
decl
and
decl
andb
xchg
cld
jae
xchg
mov
xchg
jl
xor
mov
ror
dec
dec
lods
loopne
mov
ret
mov
cmpsl
shr
jp
rolb
or
incb
lds
mov
mov
icebp
test
or
stc
mov
add
dec
in
push
stc
xchg
cmp
mov
jb
fsubrp
mov
jmp
sti
fldl
aaa
xor
scas
inc
and
pop
pop
gs
dec
xlat
mov
paddw
popa
cmp
mov
mov
stos
icebp
jo
aad
fistps
mov
sbb
xor
gs
pusha
or
icebp
xchg
gs
add
inc
out
xchg
stc
add
leave
lods
cli
ret
popa
test
adc
ret
jp
lods
stos
sub
out
imul
or
out
cmpl
dec
or
fsubl
stc
lods
sub
ljmp
add
lret
mov
dec
xchg
and
stc
inc
out
cltd
stc
and
lds
stc
int
int
loope
adc
sarl
stos
xor
jo
jno
xor
dec
jae
or
loopne
rorb
fstpl
pop
pop
lds
cwtl
fwait
mov
in
mov
fxch
out
jl
addl
std
loopne
jmp
pop
sub
sbb
sbb
testl
add
shl
out
sub
sub
cmp
cmpsb
cwtl
rolb
repz
xor
outsb
loope
mov
stc
cmp
cmp
mov
stos
shll
mov
int
les
aad
out
popa
xor
xor
push
sar
cld
jmp
or
xor
cwtl
xlat
int3
add
xorl
mov
xor
pop
mul
jnp
sub
mov
dec
xchg
mov
fsubrl
lods
or
mov
jl
and
xor
xchg
xor
dec
lock
push
cmp
cmc
mov
in
les
xchg
jns
add
dec
ja
test
dec
mov
cli
jp
cld
adc
mov
shl
pop
fldt
gs
popf
scas
and
dec
jb
mov
fistl
mov
add
jecxz
and
popa
push
mov
dec
add
imul
lods
cmp
in
add
dec
dec
dec
loope
add
mov
add
std
dec
sbbb
add
popa
xor
jl
or
mov
add
mov
icebp
xchg
add
fidivrs
add
jle
xor
rol
dec
std
aam
pusha
xchg
in
insl
lods
int
mov
stos
sub
pop
rcrl
iret
mov
sbb
cmp
pop
jecxz
lret
lahf
add
cld
fucom
lret
fwait
add
cld
lret
xchg
cld
out
out
popf
add
cld
jmp
lret
cltd
add
loopne
jo
add
mov
test
dec
loope
add
xor
les
jecxz
pop
mov
pop
cli
pop
push
cmc
jno
xor
ret
push
jle
sbb
mull
push
mov
fistpll
int3
lcall
addr16
and
jnp
iret
outsb
xor
ret
push
fimull
in
add
aaa
mov
dec
sti
fnstenv
and
push
jecxz
popf
sti
fnstcw
sbb
shll
or
mov
add
jge
mov
aad
out
insb
mov
cld
mov
pop
cmp
sub
sub
xlat
push
or
xchg
movsb
mov
fcmovnb
lock
stc
mov
cmp
and
push
mov
ffreep
push
fstpt
data16
adc
shr
sar
mul
aas
mov
dec
or
add
mov
add
stos
dec
sarl
dec
mov
les
roll
test
std
dec
mov
dec
mov
xlat
dec
scas
stos
dec
fidivs
out
popa
lods
int
stos
loopne
cltd
hlt
popa
icebp
clc
addr16
xchg
jl
and
std
add
sbb
mov
and
fwait
loop
cli
or
out
jns
push
mov
shlb
pop
mov
jmp
jno
push
int
lds
mov
jo
mov
aad
out
popf
stc
mov
out
dec
out
cld
pop
cmc
and
dec
cmc
and
mov
pop
int
jmp
std
dec
xchg
mov
dec
popa
or
add
shl
enter
dec
cmc
mov
dec
test
test
or
pop
movsl
movsl
add
notl
enter
out
out
imul
outsb
xchg
dec
imul
xor
sbb
hlt
test
rcrb
adc
cld
lea
push
in
daa
mov
mov
jmp
inc
pop
sub
scas
sarb
sbb
dec
dec
add
and
add
outsl
jmp
pusha
inc
jbe
movsl
push
incl
loop
aam
loope
push
idiv
in
mov
push
and
mov
mov
loope
rcll
mov
insl
mov
xchg
int
stos
inc
fbld
stc
popf
std
out
inc
dec
jne
insl
mov
dec
pop
outsl
lods
mov
jo
scas
push
les
add
push
xchg
enter
xor
xor
push
xchg
bound
sbb
enter
into
sbbl
push
cmp
jne
dec
pop
ljmp
push
or
push
fimull
repz
xchg
mov
addb
ljmp
jno
popa
add
out
out
sbb
sbb
stos
sub
and
in
or
sbb
or
add
lea
mov
test
xor
cld
mov
popl
or
xchg
loop
and
sub
enter
mov
shll
or
mov
mov
pop
and
inc
aaa
loopne
data16
hlt
lea
sbb
lcall
sub
xchg
sbbb
clc
cmp
mov
push
icebp
mov
push
and
sahf
pop
lcall
pushf
shl
xchg
mov
dec
and
jbe
movsl
xchg
sbb
rcrb
sub
pop
add
mov
dec
inc
pop
in
fst
loop
mov
cld
lret
loope
jns
pop
out
lds
jmp
dec
xlat
push
out
sub
jnp
xchg
in
ljmp
pushf
xchg
xlat
loope
dec
cmpsl
out
sub
and
jmp
and
mov
cmpsb
icebp
call
lock
cmc
sbb
inc
movsb
dec
mov
sub
fimull
cmc
scas
dec
jg
stos
das
xabort
pop
pop
pusha
mov
fucom
aad
jb
xor
push
lea
push
cmpsb
cmp
testl
add
lods
std
xchg
cmp
clc
xchg
and
dec
ret
push
cmc
ja
push
push
pop
mov
hlt
adc
pushf
popf
sbb
jnp
int3
inc
xchg
ret
insb
shll
rolb
stos
fs
fidivl
push
inc
xor
lods
sub
mov
mov
out
xlat
mov
insb
mov
aad
add
pop
or
lret
fdivr
out
outsl
or
scas
test
stc
add
shll
push
sbb
jmp
push
push
orl
jl
and
adc
data16
fwait
fs
popf
mov
aam
jge
lret
ltr
enter
in
ret
enter
out
sti
push
pusha
or
xor
ret
bt
dec
mov
or
inc
rcll
adc
into
call
in
test
gs
ficoms
xor
and
and
clc
rcrb
push
pop
out
shl
mov
nop
jg
test
mov
add
cmc
or
cltd
mov
jns
insb
mov
pop
and
mov
add
jge
sbb
loope
sahf
movsb
mov
subb
in
add
jmp
inc
idivl
dec
or
mov
dec
push
xor
test
inc
fnstsw
inc
test
ret
mov
stos
pop
adc
jno
out
push
jmp
cmp
sbb
dec
mulb
loope
jns
lods
call
dec
mov
dec
jge
daa
cmpb
push
xor
out
mov
or
pusha
push
inc
dec
mov
int3
test
mov
inc
mov
cmpsl
lock
inc
pop
sub
mov
pop
adc
negb
adcb
xchg
dec
test
xchg
hlt
addr16
dec
xchg
jo
in
fsubl
cmp
mov
sti
test
push
add
cmp
adc
in
shrl
lcall
test
lods
insl
pop
dec
pop
test
push
enter
fidivrs
mov
jl
cld
jae
and
incb
mov
sub
icebp
cltd
sub
add
aas
int
testl
xchg
insl
sub
mov
xchg
lds
iret
mov
add
mov
push
scas
and
mov
push
and
fmull
std
pop
data16
push
int
fiaddl
pop
pushf
push
popa
push
jmp
fsts
in
addb
lods
sbb
and
lods
mov
jb
lods
cmpsl
and
les
cmpsb
inc
in
jbe
jl
sahf
test
cmp
arpl
jmp
cld
xor
xchg
shr
aaa
or
cld
and
dec
sahf
sub
aam
xor
xchg
mov
jecxz
mov
aas
dec
push
and
mov
clc
std
lahf
push
movl
out
movsl
dec
sbb
mov
sub
or
data16
xchg
orl
js
out
sbb
lcall
cmp
orl
jmp
and
sarl
add
push
data16
mov
dec
enter
adc
insl
mov
add
adc
push
outsl
outsl
lcall
adc
push
xor
sti
mov
push
ljmp
lahf
xchg
rcll
jns
mov
or
mov
int3
rcrl
inc
shl
std
cld
in
shlb
loope
push
xchg
push
jecxz
mov
roll
test
in
cmp
jecxz
xchg
adc
lret
fmul
sub
fnstcw
stos
sbb
stos
subl
adc
lret
push
nop
out
mov
add
sub
call
push
pop
mov
nop
test
cmp
movsb
inc
jno
inc
in
int
sbb
ret
pop
pop
mov
cld
dec
std
mov
fwait
std
aas
xor
in
std
dec
mov
lret
loope
xchg
cmpsb
lea
mov
movsb
and
xor
push
mov
inc
xchg
mov
into
add
addl
add
lea
lret
sbbl
sbb
mov
out
cltd
or
mov
jne
jo
jl
pop
push
test
xor
addr16
xchg
int
mov
arpl
cmc
push
jle
sti
test
adc
dec
stc
jl
sub
xcrypt-ofb
enter
sahf
movsl
addr16
cmpsb
lret
push
pop
mov
dec
dec
cli
push
lret
add
push
sub
mov
std
out
sub
cmpl
stos
mov
fldl
lret
aad
dec
xor
cmp
sub
or
fsubrp
stc
add
push
mov
ret
jge
dec
shr
and
and
ficoms
mov
int3
pushl
mov
stos
sub
xchg
cmp
insl
je
inc
sti
cmp
pop
push
ja
add
repz
cmpsl
and
fsubrl
loop
rolb
fwait
mov
je
stc
mov
test
inc
test
test
cltd
popa
lret
lea
and
add
jb
or
and
loope
inc
jns
cmpsb
xor
mov
push
mov
xchg
lea
push
or
xlat
and
mov
dec
test
mov
add
cmp
aam
out
jl
adc
dec
mov
pop
popa
pop
rolb
loope
cld
test
mov
int3
mov
pop
or
lds
mov
mov
bound
mov
ret
sarl
ret
cs
cmc
fs
inc
dec
gs
inc
clc
pop
inc
inc
sahf
aad
cmp
aad
add
xor
test
mov
shrb
xchg
xchg
movsb
jb
jmp
scas
add
inc
ljmp
and
push
shll
pop
fstpt
aad
scas
fcoms
inc
dec
cmp
pop
mov
sbb
jo
xor
sbb
xchg
js
adc
popf
cmpsl
mov
sub
jne,pn
mov
mov
jg
dec
out
ljmp
xor
xchg
ljmp
rorl
add
mov
aas
cltd
and
scas
mov
test
subl
mov
pop
aas
push
mov
dec
mov
and
adc
cmp
or
inc
add
push
lret
gs
in
push
movsl
test
in
cmp
mov
or
pop
push
jmp
mov
lret
add
xor
or
dec
push
mov
enter
popf
cwtl
lret
js
mov
decb
stc
call
and
fiaddl
lods
push
fs
and
fnstcw
inc
lds
jmp
and
xor
dec
add
push
jne
out
shlb
cmp
cwtl
in
push
add
out
movsb
test
mov
loope
aad
push
gs
mov
mov
mov
repz
in
push
sarl
lahf
lods
aam
repz
inc
ljmp
loop
js
inc
js
add
cmp
mov
sub
jbe
out
cli
jp
sbb
aad
jmp
add
or
mov
dec
test
fdivrl
pop
mov
pop
sti
or
outsl
jle
popa
repnz
sub
mov
mov
std
mov
mov
mov
rorb
mov
mov
push
mov
sbb
cmove
pushf
es
inc
stos
int
fldenv
jle
and
fs
sbb
pop
in
lret
lret
dec
lods
push
xor
push
out
sub
mov
push
test
mov
xchg
jecxz
out
jno
or
jmp
lods
call
jecxz
jecxz
jmp
lret
add
adc
dec
pop
sub
mov
pop
dec
inc
call
test
xorl
out
ljmp
jns
add
pinsrw
jecxz
mov
inc
sub
leave
xlat
or
pop
mov
cmpsl
xorb
mov
cld
jmp
add
mov
push
mov
decl
cmp
in
das
jb
push
rorl
fmull
data16
or
in
call
or
repz
or
push
stos
xor
enter
in
sbb
mov
push
fiaddl
aas
loop
pushf
shll
jg
jle
xchg
stos
dec
lret
pushf
mov
insl
jmp
and
rcrl
mov
xorl
mov
xor
xchg
inc
xor
jl
paddq
popa
cmp
cmp
xchg
mov
cmp
push
jnp
daa
inc
popf
je
out
stos
xor
lods
loop
leave
mov
icebp
stc
pop
stc
inc
cmpsb
ror
scas
shr
cmp
cs
or
mul
out
pop
mov
mov
stos
and
jg
pop
imul
pusha
add
pop
xor
in
push
mov
stc
sub
adc
out
in
int
lods
rcrl
stos
popa
stc
sarl
loopne
stc
lret
sub
in
xor
xchg
mov
lret
mov
jl
dec
pop
fcmovnb
stos
sbb
sub
inc
ret
clc
outsb
pop
or
arpl
popa
imul
add
jecxz
data16
push
sub
and
xchg
xchg
pushf
and
rcrb
dec
xor
neg
idiv
mov
mov
fdivr
adc
and
cmpsb
push
shlb
mov
or
jns
sbb
fisubrs
aam
stc
mov
and
rcrl
stc
pop
and
push
mov
inc
and
popf
fcoml
dec
dec
xor
popa
decl
add
dec
or
sub
sub
adc
stc
pop
imul
jo
and
inc
ror
xchg
lea
fistl
jne
inc
loopne
in
jo
test
fbld
add
xchg
sarb
sbb
aas
cld
rolb
mov
mov
aad
add
adc
cwtl
andl
sti
push
popf
pop
mov
popa
jmp
or
push
out
xor
mov
and
mov
test
iret
in
pusha
cmpsl
mov
dec
sub
movsl
jl
popa
dec
lods
adc
cs
push
in
pop
shrl
jmp
dec
jmp
stc
cltd
and
adc
popf
or
add
pop
jo
cmp
adc
adc
in
inc
stc
push
imul
dec
adc
cmp
and
aam
repz
in
scas
dec
mov
xchg
fdiv
paddsw
iret
sub
jmp
std
dec
sbb
add
nop
pop
and
addr16
popf
jmp
insb
cmp
dec
divl
inc
in
inc
or
outsl
and
xor
xchg
sti
subl
pop
in
xor
cmp
das
pop
xchg
pop
aas
dec
clc
fidivl
dec
aam
push
imul
leave
cmp
nop
sti
cli
sub
xchg
cli
xor
idiv
and
andl
shll
xor
xchg
sbb
sub
cld
arpl
icebp
aam
cmc
xor
jmp
subl
dec
add
in
inc
xchg
iret
enter
dec
and
mov
loope
dec
mov
dec
in
mov
or
dec
out
mov
or
cs
adc
dec
shrb
lods
pop
jo
jmp
jg
in
insl
mul
push
jnp
lock
add
stos
pop
inc
in
xor
mov
sbb
into
ljmp
loopne
popa
imul
popf
mov
xchg
enter
xor
or
xchg
xchg
lea
xchg
or
or
cmc
shll
mul
jl
mov
ja
push
mov
popf
loop
stc
dec
addb
lds
sbb
inc
imul
dec
jne
cmp
cmc
ja
repz
mov
and
cmc
or
or
rclb
cs
sar
hlt
sub
ficomps
sbbb
sbb
out
mov
popf
dec
sar
jo
testb
xchg
xor
and
lods
sub
lds
xor
jb
add
dec
mov
pop
sub
xchg
pop
fwait
mov
and
out
jmp
mov
sbbl
pop
or
jge
mov
loope
rcll
movb
cmp
aam
or
clc
cli
jo
bound
jo
mov
ret
gs
aad
out
dec
daa
mov
clc
mov
mov
or
pop
iret
sbb
in
mov
push
sti
xor
movb
loope
push
sbb
jne
push
ret
out
sahf
sub
ja
dec
jo
negl
imul
cs
popf
notl
data16
repnz
insb
xchg
int
stos
and
pop
clc
je
in
xchg
notb
mov
lcall
lea
push
sbb
mov
add
inc
mov
dec
ja
je
mov
orl
or
mov
lods
sbb
and
jae
stc
mov
push
or
mov
out
in
dec
sub
mov
add
push
add
or
pushf
stos
out
out
dec
lahf
js
mov
in
enter
dec
jo
sbb
lret
xchg
sub
or
sbb
mov
mov
mov
mov
in
cs
sbb
jnp
jne
xchg
add
push
rorb
in
nop
and
std
cmpsl
cld
sbb
inc
insb
pop
decb
test
addr16
pop
stc
movsl
pop
mov
div
shrl
adc
mov
add
in
shl
sbb
out
dec
push
mov
sbb
dec
gs
dec
dec
les
std
xchg
rcrl
lea
and
dec
push
fs
push
cld
xor
mov
jmp
imul
jb
emms
mov
dec
mov
lea
fisubs
stc
xchg
loope
in
xchg
xchg
lret
sahf
adc
int
xorb
popf
loopne
mov
push
xor
stos
jmp
xorl
or
mov
sbb
rorb
lock
jl
popa
cmp
push
fisttpl
pusha
cmp
fs
cmp
sub
flds
pusha
aas
cld
arpl
fnsave
pop
jmp
fdivr
mov
mov
int
inc
jge
add
loopne
xchg
stos
inc
mov
fdiv
out
and
sbb
or
pop
dec
pop
out
lret
adc
xchg
arpl
imul
mov
leave
sti
mov
and
test
inc
add
cmp
cmp
mov
jmp
cmc
stc
sbb
decb
mov
inc
mov
repz
stos
lods
jb
sub
pop
xchg
push
xor
mov
xchg
xchg
sbb
cltd
stos
pushl
mov
xor
xor
mov
dec
push
mov
mov
fimull
in
popa
mov
inc
imul
in
lcall
xchg
roll
mov
rorl
sti
and
aam
std
dec
pop
in
cmp
dec
adc
icebp
cld
and
xchg
pop
sub
dec
adc
add
cmp
xor
inc
xchg
fbld
cmovnp
and
xchg
inc
inc
cmp
jns
aaa
ja
add
dec
adc
stc
dec
xor
sub
jl
jg
push
jns
aaa
cltd
sbb
cmc
push
test
loop
push
push
add
sti
add
sbb
adc
sti
push
lea
pop
mov
js
inc
sbb
out
sbb
sub
mov
es
scas
xor
shll
in
int
mov
sarl
fmuls
in
xchg
jns
ds
xchg
mov
xor
inc
inc
iret
push
shll
stos
mov
arpl
int
stos
cmp
adc
std
mov
jmp
push
movsb
cmp
pop
out
mov
mov
lahf
mov
iret
push
dec
mov
mov
icebp
cld
add
mov
std
sbb
in
add
std
sbb
lahf
jae
testl
data16
mov
mov
xor
jg
and
mov
mov
mov
fucom
mov
lds
insb
mov
mov
jle
and
push
or
mov
mov
cmp
xchg
idivb
cmp
cmc
pop
pop
sbb
loop
fisttpl
xchg
add
pop
push
push
xchg
and
aad
pop
pop
push
movsb
test
out
jo
sub
out
jp
loopne
imul
dec
aad
mov
sbb
faddl
mov
dec
xlat
mov
dec
icebp
cmpsb
jl
andl
add
mov
or
rcrb
loop
cmp
mov
sahf
cmpsl
dec
hlt
in
dec
popf
ret
in
ja
mov
sbb
in
sbbb
aas
sbb
movl
push
sahf
pop
dec
mov
mov
popf
aaa
add
pop
and
cmp
loope
stc
or
push
jle
xchg
insl
and
push
fsubrl
fimuls
js
xchg
and
dec
scas
in
in
mov
mov
or
hlt
notl
fistps
paddusb
js
xchg
sahf
xlat
xchg
dec
add
mov
das
mov
into
xor
mov
and
jp
sub
ljmp
idiv
mov
or
int
mov
xchg
dec
addr16
add
mov
std
and
mov
imul
xchg
les
scas
cmpsb
test
loope
pop
xor
les
xchg
add
popa
stc
cmp
sbb
cld
adc
and
das
stos
xchg
stos
cmp
loope
mov
xchg
js
pop
and
adc
mov
mov
fiaddl
lahf
pop
xor
cmp
cmp
sub
loop
pop
and
negl
lret
and
and
jne
ret
loop
add
sbb
std
test
cmp
ja
cmpsl
mov
jge
arpl
and
movsb
test
cmp
ljmp
and
push
pushf
fmuls
cmc
xlat
in
sub
scas
jns
arpl
add
pop
shl
xlat
sbb
push
or
or
mov
cld
mov
dec
std
out
sbb
cld
cld
js
test
sbb
scas
add
aam
in
mov
jmp
mov
cld
push
jmp
cmp
mov
dec
mov
leave
addl
xchg
sub
push
jl
clc
cmpl
ja
xor
mov
and
mov
push
dec
call
loop
fistpl
mov
std
add
mov
dec
nop
out
xlat
mov
ret
int3
push
mov
aaa
sub
cmc
push
out
lahf
jecxz
or
bnd
lds
jne
les
mov
test
lock
aaa
pop
xchg
dec
mov
test
mov
push
ja
call
fstps
pop
movsl
jle
sub
add
mov
aas
hlt
push
xchg
pop
push
adc
sub
jp
jmp
das
or
ret
push
pop
pop
jnp
push
xchg
pop
jb
cmc
add
jnp
stos
mov
rclb
enter
cmpsb
stc
cs
mov
mov
mov
and
lret
fildl
pop
roll
lock
cmp
sub
popf
cmp
std
es
mov
in
loop
push
xchg
cld
push
add
xchg
push
pop
ja
mov
xor
mov
cmp
fidivrl
cmpsb
pushl
xchg
std
dec
jmp
imul
movsl
js
loope
add
in
jae
pushf
xchg
add
insl
xchg
xchg
in
lods
lret
push
fwait
sbb
pop
push
or
dec
std
dec
dec
mov
add
stos
std
ret
mov
dec
sub
xchg
rorb
xor
and
push
push
clc
std
scas
xlat
mov
std
adc
push
pop
and
int3
aam
repnz
fimuls
enter
mov
push
xchg
out
mov
in
loopne
mov
cmp
xor
jl
inc
push
scas
mov
lret
fs
loopne
rorb
rolb
mov
and
cmc
rclb
fdivl
cwtl
outsb
cmpsl
jo
aad
inc
test
ja
push
cmp
sub
test
shrl
mov
imul
fiadds
mov
in
shrb
inc
add
mov
inc
cli
lret
mov
ja
mov
iret
jg
les
cmp
out
jne
dec
gs
mov
jmp
fadds
cmpsb
lahf
mov
out
add
cld
push
cmpl
xchg
push
dec
mov
adc
outsb
dec
cmp
out
enter
inc
jge
add
movsb
sbb
sub
mov
add
add
out
jmp
pop
enter
cmp
push
jg
cmp
ds
mov
sub
and
mov
pop
cmp
loope
adc
movsb
lods
into
rolb
inc
negl
mov
jne
mov
add
movsl
divl
mov
fucomi
ja
lock
nop
jmp
stc
data16
ret
push
or
in
aas
push
mov
mov
mov
push
xchg
aas
in
lods
pop
mov
sbb
dec
xor
dec
xchg
cmp
mov
dec
sbb
test
and
cmp
jecxz
iret
sub
add
sub
insl
xchg
scas
icebp
lea
stos
add
imul
lds
in
push
sahf
js
out
pop
pop
add
mov
mov
dec
jmp
mov
and
in
data16
mov
mov
shll
in
cli
cmpl
cmp
je
sub
dec
mov
stos
pop
shll
repz
xorl
lods
subb
cmp
lock
add
insl
fldl
push
insl
cmp
test
imul
sub
shll
pusha
xchg
std
jns
sbb
movsb
insb
ljmp
movsl
lret
inc
cli
test
xchg
pop
test
sub
std
jno
adc
add
std
les
shll
sbb
data16
add
scas
pusha
mov
push
ret
mov
cmp
ret
js
addr16
jl
sub
std
out
cmp
jns
sub
clc
rcll
rorl
and
fsubr
clc
test
jo
clc
sub
and
fwait
xchg
out
mov
sbb
stc
jne
mov
addr16
insl
pop
pusha
scas
in
xlat
movsb
arpl
cli
les
xchg
adcl
fbld
and
push
jns
inc
mov
inc
popf
xchg
loopne
and
sbb
or
push
aam
movsb
add
xor
ja
sbb
xor
and
imul
and
aas
cltd
loopne
jo
shrl
dec
push
cmp
bound
popa
dec
mov
dec
ljmp
push
cmpsb
std
push
rcrl
dec
xchg
jns
lcall
mov
jno
xor
dec
pop
jg
int
xor
rolb
or
jg
xchg
sbb
arpl
test
xor
dec
and
jecxz
mov
or
in
add
aas
sar
pop
dec
mov
in
sbbl
push
arpl
fcoms
movsl
xchg
mov
pop
mov
aad
aas
jo
leave
out
mov
nop
sbb
and
jbe
dec
cmpsl
jns
jl
shl
add
rcl
loope
int
xchg
icebp
sub
push
into
dec
xchg
jmp
inc
loop
mov
lret
js
pop
pop
xor
mov
xchg
xchg
jns
in
int3
xchg
inc
jecxz
rorl
jmp
orl
nop
sub
mov
xchg
mov
push
lcall
in
cs
sbb
push
incb
addr16
xchg
test
mov
scas
in
scas
push
imul
clc
aaa
push
dec
insl
adc
and
push
cltd
adc
cmp
out
adc
add
sbb
int
das
pusha
dec
movsb
xchg
inc
mov
xor
popa
push
inc
push
out
loopne
out
add
mov
paddq
rcll
inc
xor
sub
push
push
push
or
pop
movsb
adc
shrl
or
imul
aaa
callw
pusha
mov
jmp
loopne
iret
sbb
subb
dec
and
sti
mov
test
in
mov
lock
repz
and
cld
cmp
dec
and
mov
test
popf
es
loope
insl
inc
roll
pop
stos
push
lods
mov
fimull
jnp
jl
int
adc
fidivl
dec
xor
dec
mov
orl
push
xchg
neg
pop
ficompl
fildl
sbb
mov
cmp
out
std
mov
les
fcoms
dec
aad
out
cmp
sbb
iret
ja
inc
lds
aad
cmc
pop
or
fnsave
or
mov
divl
and
idiv
insl
sti
arpl
lock
xchg
jecxz
roll
imul
out
in
push
mov
lods
mov
sahf
mov
notb
mov
movsl
addr16
dec
call
add
out
outsb
dec
jb
mov
rclb
sbb
or
aad
fcmovnbe
mov
mov
cmpsb
in
inc
inc
sti
lods
push
pop
ja
mov
push
insb
fst
mov
into
sbb
lock
sub
xor
jo
sub
dec
flds
mov
mov
xchg
jne
cs
push
out
pushl
mov
scas
bound
std
jg
out
cs
jg
mov
std
addr16
and
dec
leave
enter
nop
and
pop
sti
stc
sar
dec
int
jo
pop
mov
mov
mov
data16
adc
in
pop
inc
sbb
mov
xchg
lock
push
fwait
iret
imul
and
out
shl
sti
adc
xchg
adc
cwtl
dec
xchg
lock
sbb
inc
xor
sbb
sub
cld
rclb
cmp
adc
and
mov
popf
dec
jmp
lods
std
mov
loope
cmpsb
mov
sti
inc
std
dec
cmp
imul
mov
in
and
lcall
mov
insl
decl
popa
adc
pop
jnp
jmp
pop
in
jl
cmpsb
pop
les
enter
loope
leave
inc
push
push
adc
out
push
out
sbb
push
fwait
push
fisttps
and
xchg
int
fstpt
aam
add
push
xchg
dec
xor
out
test
sub
pop
xchg
and
push
rcll
add
push
push
dec
fld
mov
cmpsb
ja
jge
lret
add
cli
cmp
push
mov
sbb
movsb
adcl
stc
sub
shrb
stos
fwait
jecxz
stos
jle
outsl
mov
add
aam
fstps
push
mov
dec
cmp
movsb
mov
mov
fcompl
loopne
aam
mov
mov
mov
mov
sti
inc
and
xchg
sbb
popa
or
test
xor
in
pusha
xorb
addl
mov
add
daa
cmc
js
mov
cltd
xor
sbb
aam
mov
xor
jl
movsb
stc
loope
inc
int
jl
inc
jno
or
fs
dec
clc
xchg
and
dec
loopne
dec
mov
mull
popa
dec
aaa
aas
mov
jecxz
add
fs
and
mov
bound
xchg
cld
lcall
out
aad
cmc
add
je
cmpsl
std
add
fwait
cld
cmc
std
pusha
and
mov
sub
bound
in
aas
pop
arpl
call
sub
popa
leave
mov
adc
int
sbb
cmp
push
cld
sbb
sbb
insl
dec
int
cmovl
pop
frstor
int
jbe
push
sbb
sbb
mov
fcoml
push
add
sub
fistpll
mov
enter
out
lock
or
and
cmp
into
cwtl
jle
in
into
lahf
sti
in
adc
mov
cli
int
mov
ljmp
sub
xlat
xor
inc
xor
les
aam
pop
fiadds
test
add
testl
xor
andl
movsl
jo
test
adc
jo
inc
iret
bnd
or
dec
test
roll
pop
mov
pop
insb
insl
clc
out
out
lods
mov
int
int3
or
pop
daa
call
mov
inc
sbb
cltd
mov
iret
sbb
test
add
mov
dec
xchg
push
out
ljmp
sub
or
popf
sbb
jp
and
push
pop
and
mov
mov
xor
ja
dec
in
cli
shll
dec
out
mov
imul
loope
mov
add
int
andl
add
mov
aaa
push
jle
icebp
fimuls
leave
out
add
inc
pop
scas
clc
std
sbb
js
jbe
pop
loop
cmc
and
jle
clc
add
pop
sbb
push
shrl
sbb
iret
cmp
icebp
imull
cmc
push
or
add
push
xchg
dec
or
mov
out
mov
mov
or
test
xchg
mov
les
lcall
fmul
mov
roll
add
outsb
cli
inc
xor
push
icebp
fst
stos
xchg
pop
add
add
jb
push
aaa
idivl
stos
popf
shll
mov
cltd
pushw
popf
in
xcrypt-ofb
cmpsl
in
jmp
jae
xchg
pop
jp
mov
jmp
mov
jns
pop
in
sti
and
ljmp
mov
dec
ret
jns
popa
in
lock
arpl
ljmp
pop
pusha
push
adc
and
mov
inc
movsb
lcall
dec
xchg
pop
and
mov
xchg
out
sub
sub
adc
daa
or
aad
xchg
mov
or
icebp
sub
jne
nop
cmp
mov
clc
xor
loopne
clc
jle
jns
pop
clc
inc
aaa
mov
movb
dec
mov
clc
mov
jle
mulb
mov
or
in
sub
std
lret
stos
fmuls
call
sar
popa
mov
jmp
dec
add
add
js
jg
test
les
push
and
mov
loopne
mov
f2xm1
in
ficompl
out
jg
lret
or
pop
inc
mov
scas
inc
cld
inc
and
add
mov
push
cld
jl
insl
or
and
adc
movb
dec
loopne
or
iret
inc
cmpsl
repnz
xchg
fwait
push
mov
fimuls
xor
push
sti
stos
xor
fidivs
dec
sbb
aam
sub
pop
mov
out
dec
movsl
rcrb
push
mov
jmp
cli
jns
inc
push
sub
rorl
push
sub
inc
mov
mov
sbb
stos
mov
dec
pusha
das
xlat
js
jo
and
popf
addl
push
pop
inc
in
sub
push
pop
les
out
dec
and
mov
stos
lds
movsl
xchg
jmp
pushl
loope
std
jns
and
fs
int3
mov
cmp
fsubp
mov
stc
mov
mov
test
xchg
mov
adc
cld
mov
add
scas
inc
xor
mov
mov
or
pushf
push
mov
in
xor
and
jns
jge
mov
mov
into
mov
cmp
jmp
dec
inc
enter
js
stc
cli
popa
cld
adc
pop
subb
insb
sti
loope
jo
mov
push
scas
test
enter
pop
andl
lea
sub
clc
jae
or
xchg
shll
cld
lcall
in
and
cmp
rcrl
cld
sbb
push
and
xor
mov
and
mov
loopne
jle
mov
xchg
jecxz
mov
in
stc
pop
or
pop
pop
aam
imul
rorl
icebp
dec
cmc
movl
inc
add
sbb
je
imul
adc
stos
call
dec
out
int3
mov
cltd
sbb
push
movsl
mov
ds
mov
icebp
pop
cmpsl
out
jl
sbb
mov
lcall
fists
pop
push
cmp
movsl
aas
rol
sarb
popa
mov
mov
imul
mov
sbb
pop
jne
in
ss
mov
cld
rcll
dec
mov
and
test
cmova
adcl
push
test
xor
idivb
pushf
xor
dec
lret
cmp
push
sub
jle
mov
pop
testl
sbb
sbb
mov
pop
cmpsb
add
adc
pop
std
pushf
je
xchg
push
dec
xchg
mov
cmp
ret
sub
push
add
mov
fistl
pusha
add
ja
mov
sbb
or
mov
push
cld
mov
and
test
sub
jp
jo
jo
stos
cmpsb
aaa
loopne
mov
sbb
add
jo
mov
sub
jno
xchg
mov
lahf
testb
aam
fadd
cmp
test
lahf
repz
add
jne
hlt
testb
xchg
cmp
gs
bound
sbb
sub
push
insb
dec
hlt
hlt
sti
and
rclb
mov
cld
inc
sti
jo
pop
gs
andb
in
cmp
daa
repnz
push
mov
mov
sub
and
rorb
shll
dec
fcomp
ds
xchg
add
lret
push
iret
in
and
jae
shrl
pusha
mov
mov
fistpll
mov
pop
lret
pop
enter
xor
fwait
stc
sbb
test
mov
rolb
popa
and
pop
push
push
mov
xor
mov
xor
sub
jmp
xor
push
mov
mov
and
xor
mov
out
jmp
or
or
add
aaa
lods
xchg
and
lods
mov
adc
and
adc
shll
lods
mov
jecxz
and
imull
push
dec
fcmovne
pusha
mov
enter
inc
add
fldl
int
xchg
push
rcr
or
dec
pop
mov
dec
add
aad
adc
addr16
xor
mov
popa
jae
add
mov
mov
mov
rclb
addr16
xchg
xor
ret
cwtl
cltd
ss
jl
sarb
in
and
fnstenv
pop
sub
cmp
sub
call
int
add
and
out
ja
pop
dec
fnstsw
pop
cmp
fstpl
cmpsb
popa
xchg
lods
cmc
mov
adc
xlat
cmpsb
dec
popa
cmc
push
push
in
sbb
rcr
jne
cli
jns
and
push
jg
imul
mov
jne
jge
adc
lods
xchg
loop
sarb
mov
pop
test
jo
cmc
pop
sti
adc
int3
cmp
pop
mov
inc
fistl
jnp
pop
sbb
and
lds
inc
mov
cmp
in
loop
std
in
jmp
test
iret
ret
jle
inc
lods
dec
inc
out
mov
out
aas
cmp
sub
aas
mov
adc
mov
cmp
sub
jmp
sub
mov
incl
imull
jmp
inc
mov
mov
stos
dec
inc
mov
dec
lock
icebp
jle
repz
loope
lock
insl
popa
sbb
ds
sbb
dec
int
lea
popf
sbb
mov
sbbb
stos
cs
inc
mov
pop
pop
std
pop
test
jmp
xlat
adc
and
mov
mov
shl
lahf
dec
dec
mov
sbb
jno
mov
dec
iret
push
hlt
aas
jecxz
js
arpl
loopne
mov
lea
mov
js
inc
mov
stos
pop
mov
mov
push
jns
pop
out
rorb
dec
jle
mov
scas
fwait
stos
lahf
fidivs
mov
std
test
jae
scas
cmp
mov
repz
push
icebp
loopne
jo
subb
or
out
mov
nop
shll
mov
jbe
repz
ljmp
xchg
push
lret
loopne
inc
sub
mov
mov
cmp
gs
sarb
add
negb
stos
loope
test
pop
xchg
movsb
loop
insl
pop
pop
dec
subl
lret
js
mov
pop
jns
imul
hlt
jnp
sbb
push
mov
or
sbb
jb
jp
daa
insb
dec
jp
dec
cmc
sti
or
pop
mov
testl
push
mov
sbb
pop
pop
push
loope
mov
jae
call
mov
loopne
inc
jmp
add
icebp
jns
imul
std
pop
and
std
jbe
fstpt
xchg
imul
jo
lds
mov
aas
outsb
mov
std
mov
cmp
xchg
or
in
mov
adc
mov
inc
lcall
imul
push
fcom
adc
data16
cmp
or
bnd
shlb
int
jne
popf
les
insb
mov
shr
cmp
movsb
add
xchg
data16
push
add
jle
mov
dec
sti
data16
add
xor
pop
xor
insl
or
imul
xchg
mov
ficoms
jg
dec
add
inc
sub
dec
lock
mull
sbb
add
adc
imul
fstl
pop
outsl
add
enter
jne
or
or
pop
cmp
or
dec
shll
std
push
cmpsb
aad
xchg
in
add
xchg
rcrl
fucomi
cmc
cli
xchg
fists
push
out
scas
ret
pop
push
sti
pusha
and
pusha
and
ret
jns
ret
sub
or
in
xchg
add
jns
pop
push
sub
pushf
aas
stc
inc
cmp
adc
ficomps
push
lea
jmp
icebp
movsl
xchg
mov
fisttpl
jle
mov
cmp
in
dec
mull
cmp
push
mov
jmp
mov
cmp
ljmp
jge
xor
or
rcrl
jl
and
mov
jp
jecxz
xchg
mov
push
test
cmp
repz
adc
mov
mov
jmp
insl
ja
popf
adc
pop
cmp
add
adc
in
cmpsb
int
dec
adc
cmp
cmp
fstpt
in
sti
fstpt
adc
dec
sub
sbb
lods
mov
inc
lret
xchg
les
cli
jecxz
enter
mov
mov
jne
mov
xor
add
xor
cmp
cmp
mov
add
xor
insb
movsb
cmp
nop
dec
cmp
jns
add
ficoml
jge
popf
ret
mov
pop
adc
fistl
sbb
cmpsb
add
mov
mov
add
cld
int3
mov
mov
mov
lds
cmp
movsb
sub
lret
or
add
arpl
lea
and
mov
cld
xchg
sbb
mov
lods
mov
xchg
cwtl
scas
inc
jmp
mov
aad
mov
jl
rcll
add
ja
xor
and
insb
mov
and
sbb
mov
mov
xchg
mov
mov
push
cs
stos
or
fldl
mov
jae
push
sbb
xor
pop
mov
int
enter
les
fistl
adc
insb
fidivrl
mov
mov
imul
je
add
popa
pop
jo
adc
in
mov
xor
fstpl
das
insb
sbb
lea
pop
jb
lcall
mov
mov
dec
xchg
test
fnstcw
xchg
data16
adc
sarb
fisttpl
mov
fs
sbb
insl
xlat
adc
rol
cli
in
shrl
enter
dec
mov
sub
inc
mov
and
mov
incl
xor
pusha
fwait
outsl
cld
icebp
mov
loop
fldcw
je
imul
icebp
mov
imul
adc
and
dec
inc
mov
sbb
ja
cmpsb
jecxz
popf
dec
mov
add
mov
rcl
cmp
sbb
loope
add
in
fisttpl
push
sub
mov
clc
add
jl
jp
stc
pop
pusha
mov
adc
sbb
ss
dec
mov
stos
mov
cmp
add
mull
enter
daa
sub
into
sbb
dec
icebp
pop
mov
out
hlt
dec
ror
add
sbb
stos
out
icebp
ret
leave
or
fimull
arpl
mov
dec
inc
stos
stc
clc
mulb
mov
mov
add
mov
les
cld
lahf
repnz
ljmp
push
push
aaa
jmp
data16
loope
push
xchg
pop
in
add
stos
mov
ret
test
sbb
mov
in
dec
scas
or
sti
lods
aad
outsl
ficompl
out
dec
jecxz
push
inc
ficoms
jmp
add
inc
or
in
popf
mov
cli
xchg
in
fbld
ret
xchg
in
add
imul
aas
xchg
popf
shrb
cld
mov
mov
shrb
out
fwait
pop
sti
mov
and
and
xor
add
popf
hlt
mov
in
mov
xchg
adc
add
mov
xlat
pop
add
fs
in
xchg
push
movsl
ja
dec
or
popa
mov
lret
insb
insl
cld
dec
push
mov
in
dec
mov
addr16
mov
mov
inc
push
jae
and
loope
aas
lret
enter
push
push
add
add
mov
clc
cmpl
add
negl
loopne
std
mov
fisubrl
ret
jle
mov
js
loop
jmp
into
mov
cmpsb
mov
xor
aad
mov
jg
in
idivl
dec
data16
mov
cmc
mov
pushf
mov
insb
ret
fxch
adc
fdiv
jb
adc
mov
sbb
insb
out
and
in
in
movl
add
sub
mov
sti
dec
testb
sub
pusha
sub
add
mov
adc
dec
add
int
dec
add
mov
sbb
scas
mov
jo
fsubrp
cmc
pop
in
movsl
rolb
or
sbb
daa
cmc
testl
dec
pop
movsb
cmc
lea
sbb
pop
mov
lret
mov
jb
jns
pop
sbb
shl
jnp
arpl
lea
xor
stc
cmp
inc
push
inc
and
push
add
xchg
sub
repz
stc
shr
out
xchg
xor
shlb
popf
fildl
push
jmp
loope
push
sbb
inc
sti
popa
lcall
sub
mov
data16
notb
push
movsl
out
add
push
divb
mov
rolb
std
jecxz
test
xor
mov
test
push
iret
push
jo
fidivs
mov
scas
mov
out
leave
icebp
and
sub
fsub
fildl
add
inc
xchg
pop
mov
aam
mov
fisttps
cmp
jns
nop
adc
mov
adc
jns
cmpb
mov
mov
sarl
fucom
xchg
jecxz
addb
or
add
out
scas
inc
ja
inc
and
aam
in
jne
and
pop
ret
sarb
push
sar
jae
xchg
mov
mov
pop
dec
inc
adcl
movb
push
pop
cmpb
les
popf
or
mov
push
sbbb
imulb
mov
inc
out
mov
in
push
dec
sub
mov
out
pop
xchg
mov
fsubrp
mov
mov
push
jns
popf
andl
inc
test
aad
mov
add
push
mov
sbb
pop
out
movsl
add
jle
andb
mov
fdivrs
stc
mov
fs
cli
jl
jmp
cmc
dec
cmp
sbb
adc
inc
movsb
dec
fdivrl
movsb
fcmovu
mov
fstp
lock
mov
inc
xor
fstpl
jmp
adc
and
mov
mov
fistpl
push
xchg
ljmp
int3
pushf
xchg
pop
mov
push
loopne
jbe
std
div
aam
push
push
sbb
out
stos
push
push
ret
push
xor
fsubrl
mov
inc
insl
mov
sub
arpl
xchg
jnp
mov
dec
or
jecxz
lods
xchg
mov
ljmp
fisttpll
sbb
in
mov
std
jge
jns
jns
fsubl
mov
inc
xchg
test
lock
sbb
ret
mov
cmp
es
stos
mov
call
adcl
cmovb
imul
adc
shl
sbb
std
and
stos
xchg
xchg
pushf
aad
inc
mov
icebp
shlb
jno
stos
hlt
out
or
lock
data16
or
xchg
jb
jecxz
pop
shl
cmpl
mov
incb
lea
sbb
stc
loope
sbb
dec
pop
repz
xchg
add
sub
sbb
sub
cltd
mov
xchg
pusha
aam
fnstsw
xchg
push
fdivl
int3
push
in
inc
inc
mov
rcrb
xchg
pop
adc
sbb
lods
insb
cmp
pop
jno
in
inc
xorb
or
add
popf
or
sub
jle
sti
cmp
inc
push
xchg
ja
sbb
mov
inc
mov
mov
dec
pop
push
inc
sub
cmc
pop
aas
inc
ja
ss
lock
imul
enter
mov
dec
in
sbb
loopne
sbb
int3
or
pop
ret
sti
jbe
cmp
jecxz
push
cmp
add
cmp
mov
imul
mov
push
dec
hlt
mov
idivb
in
ret
fsubrp
loope
sti
push
jl
fcomps
ds
xchg
adc
cli
or
xchg
ss
fiaddl
pop
mov
test
mov
fs
andl
cmp
hlt
and
jne
cmp
jle
xor
sti
rorl
fildl
popf
ljmp
xchg
iret
pop
and
sbb
repnz
shlb
add
inc
adc
xchg
stos
adc
mov
xorl
and
mov
xchg
jmp
push
stos
inc
stos
push
and
pop
pushf
iret
lret
xchg
and
lahf
add
sbb
inc
adc
ss
xchg
xchg
in
adc
dec
pusha
jg
xchg
lods
xchg
dec
test
add
int
iret
mov
arpl
aam
inc
ret
add
shl
jle
mov
jp
jbe
addr16
imul
inc
mov
push
add
out
popa
xlat
add
push
add
sub
leave
mov
add
push
repnz
and
push
pushf
movsb
sarb
ret
jmp
test
in
and
fdivs
decl
fisubl
fucom
repnz
nop
xchg
leave
sbb
push
adc
sbb
data16
pop
push
lods
xor
rep
sub
and
dec
jbe
test
fsubrl
cmp
push
mov
sbb
mov
popf
rorl
xor
push
jne
mov
cmp
add
aaa
jp
xchg
mov
or
cmp
or
testb
inc
je
push
gs
dec
scas
inc
testl
rcl
movsl
jnp
dec
cs
push
lods
out
add
fiaddl
iret
jl
test
andb
jnp
in
or
mov
gs
cmc
jge
or
popa
pop
aam
mov
add
push
xor
std
loop
sub
and
adcb
add
insl
cld
mov
movb
movsb
insb
scas
mov
push
shl
xchg
in
add
dec
xor
push
cli
inc
fildl
add
mov
mov
int
cmp
xorl
inc
es
sub
push
mov
rol
nop
xor
fnstcw
and
mov
push
mov
sub
xor
pushw
popa
pop
loope
in
sbb
inc
adc
pushl
or
test
fildl
mov
jmp
jmp
out
mov
popf
jne
in
dec
dec
push
add
cmpsl
xchg
and
ss
mov
stc
or
sbbb
fcom
push
sbb
aad
sub
hlt
jnp
stos
sub
dec
cmpb
enter
mov
dec
or
data16
arpl
mov
leave
popa
cli
dec
mov
inc
push
cmp
xor
pop
cmp
outsb
mov
mov
or
leave
cmpsb
adc
aam
popf
sub
ret
sub
fstl
cmpsb
std
and
pop
ret
mov
fsubrp
int
ss
inc
jle
data16
stos
add
dec
sbb
daa
hlt
inc
and
mov
fs
jmp
inc
in
je
mov
daa
mov
push
xor
fisttpll
adc
ds
repnz
lods
inc
ja
mov
push
jmp
ret
xorb
sbb
add
fidivrl
incl
es
mov
jmp
movsb
mov
xchg
mov
cli
out
xor
js
arpl
sub
mov
add
mov
pusha
xlat
lea
mov
add
dec
fsubrs
jb
cld
xor
and
pop
in
mov
pop
jge
ljmp
aad
mov
popa
sbb
mov
xor
loop
mov
push
jge
xchg
adc
pop
rorb
int3
push
or
mov
leave
lea
cmc
inc
or
xchg
enter
or
push
xor
mov
movsl
push
loopne
jmp
lods
mov
mov
add
pusha
mov
jle
mov
bnd
sbb
xor
xchg
sbb
push
insb
jmp
mov
lock
popf
out
mov
and
aad
pop
push
jg
sti
testl
sbb
out
loope
sbb
in
sbb
ret
stos
and
push
mov
pop
es
push
jne
sarb
mov
aad
sub
lods
xchg
or
mov
out
lahf
cmc
mov
mov
inc
dec
arpl
cmp
or
popfw
lock
jg
fcmove
shr
sbb
mov
out
fsubr
jmp
popf
loopne
test
mov
dec
mov
xchg
std
pop
or
push
jge
test
cltd
dec
test
shl
sbbl
std
mov
shll
in
push
repnz
jno
cmp
insb
sbb
sbb
or
xchg
mov
mov
mov
jnp
and
inc
stos
xchg
push
inc
rol
aad
sti
cmp
mov
mov
lock
push
dec
xor
and
jmp
jno
clc
mov
mov
sbb
loope
stos
xchg
outsl
push
mov
fiadds
dec
in
pusha
sub
outsb
stos
cwtl
mov
outsb
push
sub
cmpl
in
in
pop
dec
fistps
pop
lea
jecxz
mov
outsb
js
arpl
ja
mov
xchg
push
lret
out
cmp
dec
jl
imul
cld
mov
icebp
or
push
pop
sbb
pop
movsb
adc
repz
sbb
clc
dec
push
add
sbb
inc
inc
mov
iret
jne
xchg
jp
out
xor
inc
pusha
clc
xor
aam
adc
cld
mov
jae
ljmp
stc
iret
sub
cwtl
mov
jae
test
jnp
mov
sarl
pop
xchg
or
int3
xchg
repnz
js
cmp
test
fdivrs
sti
fimull
aad
ss
lcall
cwtl
test
and
aas
iret
iret
lahf
lea
scas
in
mov
fistpll
in
dec
mul
sbb
lahf
loope
ret
add
addb
dec
jnp
mov
ja
inc
js
gs
xor
jmp
lea
in
push
push
or
out
fwait
dec
adc
fsubrs
loope
dec
mov
xor
stc
stc
mov
xor
push
mov
fiaddl
mov
scas
call
adc
lods
cmp
repnz
addr16
cmc
orb
inc
pop
es
cmp
shll
and
xor
lock
cmp
daa
xchg
mov
mov
fcomip
cmp
sarb
mov
pop
pop
ficompl
pop
cmp
stos
mov
add
loope
cmc
in
mov
jo
in
rol
enter
arpl
icebp
xor
aaa
cmp
std
mov
popf
sbb
jmp
mov
aaa
xorb
push
mov
push
jbe
repz
inc
mov
lret
xchg
cmpsl
scas
cmp
fs
sbb
cs
es
aaa
mov
pop
sbb
mov
rcrl
inc
stos
cmc
sbb
pop
cmp
andb
sbb
cmpsb
mov
stc
sti
mov
adcb
cli
mov
push
jge
lods
leave
std
add
arpl
xchg
enter
push
xchg
pop
repz
aad
jmp
ss
outsb
mov
movsb
aam
xchg
jg
addr16
ss
sahf
les
pop
std
test
jno
push
pop
iret
loope
mov
std
or
sub
imul
jnp
es
lock
sti
fsubrl
jecxz
ja
dec
lock
ret
and
mov
lock
adc
pop
das
add
push
outsl
add
jno
popa
incl
adc
loope
jge
sbb
xchg
pop
push
cmc
cmpsl
icebp
push
mov
mov
or
icebp
pop
push
add
in
mov
pop
gs
jecxz
xchg
movsb
inc
in
sbb
js
cmc
jne
push
enter
push
push
add
xchg
outsb
add
shrb
std
mov
aaa
jmp
std
or
gs
call
mov
sti
fdivr
lret
inc
jo
pop
push
out
mov
movsl
dec
arpl
int
popa
out
fmull
jo
or
into
daa
es
and
mov
jno
decl
cmovge
hlt
lret
negl
cld
test
add
iret
add
data16
mov
les
jb
emms
mov
pushf
jns
mov
cld
lret
mov
pop
mov
loop
fildl
cld
gs
jl
sti
sbb
jb
rolb
dec
cmp
jmp
adcb
push
cmp
out
push
xchg
add
bound
das
inc
cmpsl
pop
sahf
iret
cmc
out
imul
sub
dec
ljmp
loope
cmovg
and
pusha
jecxz
rolb
in
icebp
jns
popa
mov
adc
loope
rcrl
and
mov
xlat
loop
or
mov
in
in
pushf
insl
in
inc
pop
mov
sub
ret
mov
add
mov
xor
arpl
in
mov
andb
and
jge
arpl
cmpb
orl
in
sti
mov
scas
mov
dec
dec
add
add
add
mov
jns
imul
pushf
xchg
int
fisttps
shrb
call
loope
repnz
mov
ja
and
cld
mov
and
cmpsb
add
pop
xor
js
fwait
cltd
add
test
sub
jns
pop
push
push
mov
call
testl
sbb
mov
fnstcw
add
in
sub
ficoms
cmp
mov
loop
out
arpl
inc
sarl
in
in
pop
int
fwait
jmp
lret
jecxz
orl
rorb
add
or
lods
fimull
mov
cmpsb
not
dec
scas
call
sub
pushf
js
fs
xchg
push
ss
inc
xchg
inc
xor
in
jae
pop
push
lds
scas
mov
or
pop
sbb
push
jp
ficoml
loope
push
jmp
sbb
adc
sbb
ret
aas
sarl
and
sub
cli
call
add
add
shll
adc
mov
adc
mov
add
pop
fsubp
mov
add
mov
loopne
ljmp
sbb
lock
cmp
loop
mov
cwtl
je
loope
repz
popa
decl
or
pop
mov
int
mov
cmpsb
icebp
adc
popa
xor
popf
dec
das
dec
xchg
jo
xchg
fnstsw
or
mov
add
mov
sub
jne
mov
mov
xchg
mov
xor
or
popf
xchg
mov
cli
mov
aad
ret
dec
jb
inc
dec
sbb
xor
lods
shlb
mov
ret
sbb
popa
in
fs
cmp
sti
mov
fldl
in
insb
shl
ljmp
cld
ds
cld
inc
mov
sbb
mov
and
sub
stc
stc
mov
xor
cmp
dec
movsw
mov
in
adc
pushf
push
cwtl
cmc
mov
fstps
mov
sub
andb
fdivrs
pop
popf
out
fwait
js
xchg
mov
mov
add
iret
dec
sahf
jb
or
repnz
push
out
cwtl
fwait
aaa
mov
xchg
lods
ja
pop
xlat
ficoml
das
pop
add
xor
aam
mov
ret
rcrl
xchg
into
call
mov
mov
cli
mov
loope
adc
lret
jne
xchg
push
and
dec
mov
xor
stos
les
sub
xchg
pop
rorb
movl
loopne
scas
add
push
fs
mov
cmc
imul
fcoms
push
ja
pusha
aad
jbe
or
adc
and
xchg
jmp
lret
xchg
js
negl
mov
inc
enter
mov
lods
jge
je
ja
xchg
imul
cmpl
adcl
clc
xchg
repz
pop
sbb
push
mov
jb
imul
mov
add
and
cld
fsub
addb
popa
cli
addr16
aas
repz
out
ftst
cli
jo
clc
sbb
mov
in
lea
popl
aam
andl
jae
add
clc
add
pop
inc
cld
jnp
or
xor
insl
pop
cmp
gs
push
xchg
scas
stos
add
dec
jbe
inc
aam
inc
or
inc
bound
jne
xchg
cmp
es
push
or
sbb
mov
cld
ret
loop
and
fs
sbb
mov
mov
aad
mov
fs
mov
and
pushf
gs
shrl
fcmovnbe
and
sub
cld
jns
mov
shrl
jns
mov
jmp
mov
hlt
pop
sbb
mov
aam
pop
in
cmp
push
pusha
sub
into
enter
fwait
lock
pop
cmpsl
and
fimull
lahf
dec
pop
mov
sbbl
jne
fcmovnu
mov
stc
cmp
mov
mov
hlt
mov
xchg
loope
ret
fs
jae
jl
sub
add
add
les
mov
xchg
jmp
divl
lods
jmp
stos
stc
sub
add
xchg
jns
mov
adc
push
jmp
sbb
mov
cld
xchg
fdivrs
idiv
or
fwait
add
fstpl
fxch
scas
addr16
lods
shrl
outsb
inc
cld
mov
mov
mov
push
imul
mov
inc
push
fidivrl
jge
repnz
add
mov
and
mov
or
pminub
aam
call
out
jno
add
shll
push
jb
inc
incl
mov
into
push
push
xor
add
mov
ds
xchg
mov
je
imul
mov
sub
test
das
out
mov
fstpl
jne
mov
mov
adc
addl
out
jecxz
lret
movaps
out
sbb
mov
jno
jo
mov
cmpl
cmp
adc
cli
dec
icebp
dec
loop
sbb
in
mov
cmp
rclb
mov
fsubr
cmc
enter
imul
into
add
mov
ret
and
and
ja
xor
or
addr16
cld
out
pop
aaa
pop
orb
xchg
in
bound
push
add
aam
mov
push
dec
sar
data16
jo
negb
rorb
sbb
movsb
in
fucomi
clc
mov
pop
jp
fiaddl
and
lea
adcb
mov
mov
enter
mov
movsb
rcrb
lret
jne
aaa
add
pop
popf
push
mov
sti
aad
mov
cmp
mov
lods
popf
test
stos
ja
dec
pop
test
insl
jbe
repz
sbb
and
jg
js
push
sbb
movsb
ret
std
jne
popa
mov
aaa
jbe
or
fdivs
hlt
push
notb
xor
int
jno
out
mov
cld
push
dec
pop
in
fsubrl
popa
push
je
loopne
mov
test
dec
sbb
cld
add
jb
inc
scas
adc
xchg
mov
ja
mov
dec
mov
mov
or
add
lret
push
push
fdivr
dec
out
or
imul
scas
lret
xchg
fistl
out
cltd
mov
orb
scas
mov
cmovge
clc
xchg
jo
int
lret
ja
dec
in
popa
std
dec
add
lock
les
fisttpll
mov
mov
mov
outsb
mov
cld
push
std
out
ja
dec
or
fcmovne
mov
push
daa
in
pop
iret
mov
and
fdivrp
jmp
sbb
repz
ret
dec
mov
daa
loopne
lret
xchg
scas
and
jl,pn
push
jns
fcompl
inc
mov
ljmp
mov
icebp
out
cli
pop
or
les
sbb
call
out
aam
push
mov
mov
inc
sti
stos
xchg
jmp
dec
movsl
out
xchg
add
xchg
mov
sbb
pop
rcl
mov
out
cmp
outsl
push
or
xchg
adc
xchg
stc
fs
pop
jnp
or
mov
xor
or
dec
mov
cmp
bound
dec
int
mov
pop
es
adc
scas
xchg
and
and
shrl
xchg
adc
inc
cmp
push
sti
push
iret
fdivr
out
out
das
nop
rcrb
push
jne
or
jo
mov
xchg
cmp
sahf
mov
dec
or
adcb
push
out
shlb
adc
int
xchg
lods
push
movsb
adc
inc
add
xchg
shrb
cmp
mov
push
add
leave
test
add
xchg
push
sub
popf
mov
and
lcall
ret
fwait
inc
ret
add
mov
dec
jmp
lea
mov
rorb
push
add
jmp
pop
sub
and
mov
mov
adc
push
es
jp
nop
sti
popa
push
shll
dec
xor
stos
sti
xlat
mov
add
into
push
addr16
mov
mov
fs
repnz
cmc
loope
ss
je
lea
incb
jae
ss
mulb
lock
test
inc
popa
scas
push
mov
jmp
rclb
fbld
mov
jl
popf
bound
nopl
fistpll
and
addb
push
lahf
cvtps2pi
jno
pmaxsw
test
clc
mulb
popa
icebp
mov
jecxz
xchg
mov
push
lahf
vmwrite
insb
mov
jns
adc
test
mul
dec
mov
pop
and
jecxz
pushf
xchg
mov
pop
clc
mulb
jl
imul
test
fscale
mov
stc
and
fisubl
fstl
dec
std
or
dec
in
fisttpll
cmp
fucomp
int
lret
stc
loopne
sbb
inc
mov
jle
jmp
neg
clc
jecxz
jp
int
add
dec
fs
xor
int3
mov
jb
jmp
mov
add
mov
cmp
push
scas
fldt
mov
ss
mov
sahf
pusha
sbb
mov
mov
cwtl
mov
fsubl
pop
aaa
mov
jg
jecxz
push
xchg
stos
sub
cmp
xchg
mov
lods
sub
xchg
adcl
jne
hlt
add
mov
sbb
xor
mov
adc
nop
ss
fsubrl
push
mov
cwtl
xchg
loopne
mov
in
mov
fistpl
mov
dec
sub
jg
push
add
jle
jns
loope
ficomps
sub
inc
add
in
mov
enter
out
pop
popf
jecxz
sub
std
fs
push
cmp
sbb
fdivrs
lods
push
cmc
and
and
sub
lret
pop
lcall
sbbl
and
mov
pushf
mov
loop
dec
bnd
add
imull
xchg
fcomps
mov
cmc
cmpsl
icebp
sbb
mov
jbe
test
xchg
inc
sub
icebp
xor
sbb
lods
js
and
jns
das
out
je
sbb
outsl
in
je
adc
xchg
mov
mov
aad
test
push
cmpsb
sahf
movsl
mov
pop
jns
pusha
jno
lods
sub
lds
repnz
loopne
test
fisttpl
adc
xchg
or
xchg
xor
ljmp
cmp
insb
cmp
cmp
add
mov
pop
push
dec
adc
jl
ds
push
pop
int
dec
xchg
cmpsb
lock
sub
pop
loope
subl
jno
dec
repnz
xchg
fnstsw
sbb
cwtl
xor
nop
or
and
icebp
in
sbb
pop
cmpsb
in
repz
mov
jmp
out
fisttps
imul
xchg
ss
test
mov
mov
repnz
pop
mov
push
jne
xchg
xor
popf
clc
add
pop
xor
jl
rcrl
daa
stos
shrb
repnz
popf
negl
or
and
xchg
stc
adc
in
xchg
sub
lahf
or
or
shlb
out
mov
pop
xor
scas
lcall
mov
das
add
mov
popf
jns
cmp
sub
insl
mov
pushf
dec
andl
pop
push
in
mov
popf
mov
orb
imull
or
mov
fldt
lock
lods
sbb
idivl
add
test
jns
inc
cmp
ss
mov
outsb
mov
jae
and
ja
fnstenv
dec
mov
movb
cmpsl
adc
rcrb
jmp
jo
stc
adc
lods
les
imul
sbb
pop
stc
inc
scas
rclb
je
sub
xchg
test
dec
jge
js
push
shlb
pop
negl
xor
push
mov
popa
xor
dec
icebp
lret
adcl
loope
fildl
fstpt
jno
inc
mov
xchg
test
lahf
push
sarb
imulb
pop
mov
mov
add
inc
inc
jmp
icebp
test
clc
rolb
dec
cmpsl
fisttps
xchg
xchg
cmp
push
dec
mov
add
mov
pushf
sub
popa
mov
mov
mov
pop
xchg
jle
add
push
mov
xchg
cli
sbb
stos
xor
xor
enter
aaa
add
jnp
rcr
xlat
pusha
jae
cmpb
arpl
ss
flds
in
pop
mov
push
xchg
add
add
mov
sub
stos
lea
idiv
mov
jo
pop
jmp
cmp
adc
cmc
dec
repz
adc
test
pop
dec
adc
cmp
adc
gs
in
mov
jmp
add
fdivl
js
jbe
lods
cmp
sub
ss
sbb
xchg
and
fs
insl
add
mov
imul
push
adc
sub
cli
cmc
xchg
sbb
cld
aam
shlb
cmp
in
out
pop
int
sti
and
cwtl
push
pop
push
xchg
daa
push
cmpl
fildl
lret
jmp
push
pop
cmpsl
add
cmpsb
push
stos
fnsave
es
jo
popf
loope
mov
mov
pop
stos
call
aas
std
cmc
pop
inc
das
xchg
or
lcall
cmpsb
lods
jnp
fidivrs
jne
lret
inc
add
iret
hlt
fdivrp
jmp
pop
or
pop
mov
jecxz
mov
mov
xchg
inc
mov
push
fwait
and
jmp
fwait
dec
fwait
dec
std
mov
mov
mov
repz
push
jg
hlt
scas
in
push
mov
add
test
je
or
adc
ret
loopne
test
cmp
push
ljmp
dec
data16
cmp
aam
jbe
jg
sbb
xchg
dec
dec
fs
push
lahf
inc
stos
leave
sti
sarl
cmpsl
rorb
jo
mov
fdivp
mov
sub
cmp
or
ror
test
lods
out
cltd
mov
adc
cmp
xlat
add
push
rorl
push
dec
dec
aam
roll
jbe
out
inc
and
lahf
repnz
inc
xchg
popf
xchg
out
les
mov
ret
nop
xor
loop
ja
outsl
sbb
mov
roll
sub
jb
pop
lret
push
out
cmp
pop
mov
out
mov
xor
in
jmp
aaa
fwait
push
push
jl
in
andl
enter
mov
mov
sbb
test
mov
dec
and
inc
mov
jge
push
nop
out
inc
subb
mov
je
ret
adc
cmpsl
mov
mov
mov
cmpsb
jo
pop
and
jns
pop
cmp
std
xor
daa
inc
inc
dec
inc
in
movsb
in
cmp
push
sub
cmc
loop
call
fimull
pop
setge
jmp
scas
or
pop
in
sub
in
xor
iret
lods
jb
push
cs
mov
dec
xchg
sti
inc
or
imul
or
jno
jmp
lock
fisttps
addb
mov
xor
cmpsb
outsl
loop
std
std
loop
leave
pushf
out
mov
into
add
xchg
mov
insb
add
jmp
stos
notl
jge
jmp
repz
push
push
dec
mov
xchg
ljmp
dec
sbb
dec
mov
push
push
lods
inc
movsb
lret
shlb
jnp
xchg
xchg
testb
std
dec
mov
dec
mov
inc
jp
xchg
add
and
and
lahf
aad
ret
notl
in
div
push
and
push
dec
mov
daa
add
push
and
cmp
outsb
outsl
repz
fdivrs
or
int
rolb
push
xor
and
xchg
roll
loope
add
rclb
sub
shll
mov
xchg
and
into
cli
pop
mov
out
call
jmp
cld
in
loope
xor
loope
push
fcmovnbe
flds
mov
or
lods
mov
imul
fwait
xor
add
out
sub
sub
in
pop
xor
push
adc
std
mov
aad
inc
and
add
imul
ret
sbb
push
insb
mov
in
movsl
mov
in
insb
sub
or
push
ret
inc
pop
bound
cmpsl
fst
arpl
jb
ds
dec
sbb
pop
popf
sbb
orl
scas
fwait
sbb
cs
xchg
add
jle
dec
ds
stc
cmp
push
xchg
fucomip
pop
mov
popf
fidivrs
fdivs
and
push
jp
into
xchg
dec
push
stc
popf
dec
xchg
or
lock
inc
or
rcl
lret
add
jmp
addl
sub
mov
aas
addr16
xor
jle
push
shll
testb
push
inc
xchg
and
or
cmc
pop
nop
fdivr
lods
xchg
push
loopne
cli
int
jne
test
stos
pop
lcall
in
loopne
mov
cld
stc
mov
and
call
sub
inc
in
fdivrs
push
sbb
jp
mov
xchg
aam
fcom
jbe
inc
dec
or
in
add
cmc
mov
daa
lcallw
shrb
roll
dec
mov
inc
dec
push
and
arpl
adc
mov
mov
jbe
xor
lods
lods
test
mov
push
rcr
arpl
sbb
lods
and
in
sbb
sub
lret
jb
std
out
dec
mov
inc
jl
sub
jecxz
mov
xchg
dec
test
and
add
sub
cmc
out
pop
dec
cltd
in
add
stc
sbb
pushf
popf
call
orl
inc
repnz
fld
xchg
mov
jmp
dec
jno
loope
in
pop
movsb
cwtl
mov
in
in
xchg
xor
imul
addr16
jno
jb
clc
loopne
jl
dec
roll
mov
pop
jns
mov
push
mov
cli
test
push
jne
test
out
dec
aam
scas
xorl
imul
mov
push
out
push
or
mov
shlb
pop
enter
ret
sti
inc
repz
in
mov
mov
or
dec
adc
in
aaa
sti
mov
mov
in
popf
sub
scas
mov
jne
lods
fists
addr16
jne
or
in
or
imul
or
lds
shl
orl
inc
stc
popa
pop
lcall
sub
rcll
mov
cmc
fists
mov
push
jno
out
arpl
bound
push
cwtl
push
xchg
sub
mov
mov
ds
fldcw
orl
jne
jmp
mov
ljmp
arpl
mov
data16
xor
movsb
xchg
fdivl
sbbb
pusha
lds
and
clc
or
sbb
out
jmp
dec
repz
mov
push
int3
lea
and
jo
sub
or
inc
lds
ret
jmp
test
imul
pop
aad
adc
xchg
std
cltd
xor
ja
dec
push
jl
jge
add
xchg
clc
mov
inc
and
xchg
les
insl
cwtl
add
iret
dec
xor
nop
mov
pusha
repnz
sub
add
jne
dec
mov
insl
loopne
subl
pop
jl
shlb
push
sub
outsl
push
icebp
mov
adc
aaa
mov
test
or
xchg
stc
data16
out
shrb
mov
mov
or
cmpsb
pop
loopne
mov
lret
sub
mov
add
pop
shrb
mov
nop
mov
jne
stc
and
rcr
loopne
mov
aam
mov
dec
mov
movsl
mov
and
or
lods
adc
cld
frstpm(287
gs
xchg
mov
das
mov
orl
sbb
sbb
icebp
and
pushf
subl
xor
dec
fwait
mov
les
jg
xchg
daa
pop
movsb
iret
or
or
mov
sbb
jbe
stc
cmc
ret
inc
les
sub
xchg
lods
dec
imul
xchg
shll
daa
dec
dec
xchg
push
sbb
lret
push
insl
fisttpl
mov
mov
push
repz
imul
rcrb
icebp
mov
leave
inc
jns
push
jge
cmp
mov
addl
clc
in
iret
sbb
xchg
imul
xchg
shr
mov
and
andb
mov
cmpsl
sti
jo
cmc
push
outsb
mov
push
int
in
xlat
push
sub
dec
adc
or
out
ja
inc
fistl
imul
scas
pusha
jle
jl
mov
mov
ficompl
dec
in
stc
lods
sub
add
cli
lea
xchg
daa
or
jge
fistpll
lock
cmp
bound
pop
adc
xchg
nop
cmp
hlt
ret
lods
cmc
cmc
xchg
xchg
fidivrl
cmp
shll
jnp
add
iret
cmpsb
movsb
and
cld
decb
iret
ljmp
mov
xchg
mov
cmp
fcomp
test
out
je
fstl
enter
js
subb
inc
inc
jge
cmpsl
adc
fstps
pop
xchg
add
xchg
movsb
pop
movsl
mov
jecxz
dec
push
pop
jo
inc
movsb
xchg
add
push
popf
loopne
lret
and
push
icebp
xor
jp
or
repz
mov
cld
mov
add
inc
cmp
fistpl
icebp
push
scas
jnp
mov
aad
xchg
aam
icebp
subb
mov
sahf
call
jmp
and
addb
mov
cmpb
mov
mov
adc
dec
dec
adc
in
sbb
dec
push
xchg
mov
popa
cmp
out
sti
lahf
xchg
adc
ret
mov
sub
dec
jnp
sbb
dec
loopne
adc
divl
fs
pop
data16
std
stos
movsl
loope
pop
jecxz
xchg
fs
aad
adc
push
cs
fnstcw
or
lock
sbb
or
orb
dec
orl
outsl
cmp
jle
xor
stos
scas
dec
fisubl
mov
inc
add
imul
add
pop
mov
divl
dec
sbb
mov
insl
mov
dec
and
in
in
cmp
jnp
pop
or
mov
testl
outsl
inc
fildl
int3
push
inc
jnp
pop
or
mov
imul
cmp
stos
mov
popf
test
fwait
aad
add
frstor
clc
in
test
dec
fsubs
shrb
outsb
jns
sbb
outsl
pop
jle
sub
ss
sarb
xor
inc
jno
sub
lea
mov
sub
outsb
insb
lcall
out
adc
addb
push
movsb
add
ffree
test
fldcw
lea
loopne
push
xchg
insl
inc
dec
jo
mov
insl
call
scas
xchg
popf
mov
in
test
mov
int
mov
rcll
push
mov
in
jns
dec
stc
cmp
fs
inc
loope
jmp
movsl
sbb
movsb
and
cmp
push
add
loope
mov
mov
xor
xor
pop
rclb
mov
add
stos
movsl
cld
ja
jmp
xchg
and
loope
mov
sbb
jmp
lock
leave
stc
orl
inc
pop
xorl
fldcw
cli
push
cmpsb
jno
dec
pop
jno
daa
ljmp
shll
jecxz
mov
mov
popa
ret
in
jb
push
out
test
mov
cmpb
push
jge
sbb
xor
mov
movsl
cmpsb
pop
es
mov
inc
sbb
cmp
sbb
std
cltd
in
pop
mov
outsl
add
jae
adcl
pop
mov
arpl
flds
xchg
and
mov
arpl
jmp
cld
xor
rcr
jmp
sub
call
mov
loop
adc
out
inc
ds
out
lea
mov
inc
sbb
cmpsl
sti
jecxz
push
movsb
movsl
xchg
loop
mov
push
mov
mov
jae
test
imul
lea
test
lret
pop
mov
add
hlt
push
pop
in
test
cmp
ss
pop
movsb
xchg
mov
pop
pop
mov
insb
lds
inc
out
jo
add
adc
add
scas
testl
lock
xor
into
add
mov
mov
dec
hlt
push
and
in
dec
mov
inc
sahf
insl
loope
rolb
mov
sbb
aas
icebp
lea
push
rolb
insb
rcl
cmp
jmp
xchg
addr16
push
pop
in
cmpsb
and
dec
xorl
dec
and
cwtl
push
das
jge
enter
fs
cli
rorl
mov
scas
or
rcll
xor
lahf
test
lcall
in
fidivs
add
shll
sar
or
add
repnz
stc
icebp
dec
call
jae
and
ja
xchg
insb
lea
stc
cmpb
adc
jl
mov
test
in
shl
dec
jmp
ja
nop
jecxz
out
mov
in
clc
fs
mov
icebp
xchg
out
or
mov
lea
fucomi
ret
repz
ds
push
dec
add
mov
mov
xor
or
sub
addr16
ss
dec
mov
out
roll
in
and
sbb
or
jl
jo
inc
jb
in
movsb
out
arpl
cltd
dec
orl
pop
add
xor
jno
mov
gs
xchg
cmp
xchg
in
aas
int
fs
xchg
jno
cmp
inc
mov
pop
gs
cs
jno
sub
xor
add
bound
push
sbb
mov
jne
inc
jns
sbb
or
in
or
dec
mov
sarb
jns
cltd
aad
arpl
in
xorl
pop
or
fucomp
xlat
add
pushf
orl
in
add
cmp
cmp
jecxz
push
das
shl
stc
add
notl
add
xchg
popf
mov
jb
or
jne
in
ret
sti
jmp
ds
cld
fisubl
clc
lret
aam
ret
movsb
and
jno
les
inc
pop
lds
cltd
les
popf
inc
test
dec
mov
xchg
aad
mov
add
shrb
in
stc
std
mov
divl
jns
ljmp
shl
stc
lock
shll
pushf
mov
mov
add
in
dec
mov
sbb
mov
pop
pop
fptan
sbb
push
subb
jge
pop
sti
and
stos
scas
add
mov
ljmp
sbb
jecxz
mov
decl
sar
mulb
pop
lds
gs
fs
jno
mov
xlat
and
sbb
int3
sub
movsb
mov
jmp
ret
mov
loop
cmpsb
xor
pop
roll
in
outsb
mov
loop
lahf
int3
fisubs
frstor
hlt
leave
add
outsl
push
jns
lahf
jecxz
sub
sahf
cmpsb
outsl
inc
and
outsl
jl
inc
movsb
adc
ljmp
xor
push
jae
leave
mov
cltd
cmp
jg
push
cmp
cs
jnp
pop
mov
fwait
cmp
cmc
pusha
dec
std
mov
cli
enter
xor
test
aam
js
imul
push
insl
adc
mov
scas
push
pop
mov
test
mov
xor
stc
test
ret
xchg
or
dec
push
xor
add
xor
xchg
imul
mov
mov
jmp
into
jle
mov
push
sbb
jl
pop
fsubrs
inc
aam
lock
test
mov
jno
cmp
enter
cs
dec
mov
push
notb
cmc
push
mov
pop
cmpl
jmp
inc
jecxz
sbb
std
jmp
aas
in
jo
pop
sub
xor
imul
jecxz
push
and
lds
lds
jl
cmp
mov
out
lahf
push
fnstsw
pop
dec
jmp
in
pop
repz
mov
scas
in
icebp
fwait
sar
mov
mov
mov
mov
popa
adc
dec
jns
mov
std
jge
jecxz
mov
imul
jmp
jecxz
or
jecxz
pop
cmpsl
push
sbb
inc
inc
std
cmp
mov
imul
jmp
mov
push
pop
scas
ja
and
in
sbb
dec
cmc
push
xchg
fs
xor
arpl
jmp
xchg
or
lret
int
addr16
fisttpll
mov
mov
int3
add
mov
sub
scas
mov
je
popw
inc
add
icebp
pop
or
dec
mov
rcrl
or
push
fwait
add
testl
pop
imul
or
inc
data16
xor
sti
sbb
mov
inc
repnz
xor
stc
aaa
fimull
in
lock
push
push
mov
scas
out
shll
jns
push
cs
ret
scas
add
rcr
cmp
mov
mov
push
mov
jns
sarb
std
mov
mov
fs
test
leave
faddl
mov
cmc
lret
rcll
bound
test
cmp
sahf
mov
add
xor
clc
mov
xchg
fidivl
std
jge
ja
jns
inc
sbb
fsts
nop
jae
xor
sbb
icebp
cmp
lea
add
xchg
imul
movsl
dec
jne
dec
inc
add
inc
or
inc
xor
cltd
fwait
stc
addr16
scas
cmp
shl
cld
add
in
fstpl
push
sbb
jne
xor
sub
adc
test
xor
push
pop
fisubs
cmpsl
lahf
xchg
xchg
sub
jecxz
jb
mov
dec
cltd
mov
fcmove
mov
mov
jge
nop
mov
sub
daa
sub
mov
xchg
out
cwtl
add
dec
test
into
ss
sbb
cmpsl
pop
pop
in
fdiv
push
out
int3
xchg
lods
mov
or
pop
mov
call
cmp
int3
jns
mov
pop
in
sti
push
imul
mov
xor
sub
fistl
or
cmpsb
iret
nop
add
mov
sti
icebp
enter
cmp
pop
aaa
test
in
in
test
push
lcall
es
lods
cmc
and
sbb
dec
mov
out
dec
jl
decb
xor
stc
out
cmpsl
test
fwait
ja
and
scas
cli
mull
cmc
sbb
push
lret
sub
les
stos
cwtl
aaa
das
addl
dec
fldcw
pop
lret
mov
andb
mov
mov
push
shll
or
in
testl
jbe
rcr
cld
jecxz
cmp
adc
aas
stos
lds
jmp
shrl
mov
mov
roll
es
mov
in
testl
in
cld
xchg
pop
xchg
mov
push
cli
fwait
lret
lea
mov
jge
sti
lds
rcl
inc
cmp
mov
mov
mov
jge
js
jae
dec
mov
pop
lods
fadds
popa
sub
stc
adc
jl
jmp
das
xchg
mov
jmp
xchg
inc
mov
jp
popa
add
out
and
jo
test
cmpsb
sbbl
adc
insb
ret
adc
loopne
loop
lcall
push
popf
sub
and
jmp
inc
cld
ret
pop
mov
test
dec
out
mov
aas
fnstsw
push
movsl
movsb
adc
xor
enter
inc
stc
push
ljmp
xlat
in
test
lret
dec
or
sbb
mov
mov
leave
sbb
mov
fs
loopne
mov
xchg
sti
std
in
sbb
xchg
push
cli
jb
es
adc
mov
data16
pushf
in
es
jo
pop
inc
jmp
sub
or
popf
cmp
mov
int
or
iret
and
sti
mov
mov
cs
inc
or
fs
in
xchg
sbb
dec
loopne
cmp
shrb
pushf
aam
push
sbb
fstl
mov
or
aad
shr
mov
ret
mov
ret
popf
lock
repnz
pop
mov
gs
cmpsb
add
and
bound
mov
jnp
aaa
aas
cmpsb
ret
dec
mov
lods
fistps
imul
loope
push
int3
loope
lea
mov
les
scas
loope
mov
jmp
add
fprem
push
mov
lea
stos
jno
push
les
pop
and
sbb
test
test
sbb
rolb
imul
mov
fistl
mov
loope
jo
mov
negb
inc
stc
mov
cmp
fucomi
mov
dec
in
jb
jmp
lahf
push
xor
sar
dec
divl
scas
dec
mov
call
jg
xchg
in
fcomip
ret
dec
adc
out
cmp
lock
mov
movsb
jl
in
fwait
out
std
xchg
test
aas
adc
mov
cli
fcomp
add
imul
mov
mov
and
loope
dec
sahf
or
ret
inc
movsb
clc
sbb
mov
mov
sbb
pop
cmpl
adc
push
mov
fcos
or
xor
adc
cmpsb
ss
sbb
push
repz
jbe
ljmp
stc
mov
cmovne
fistl
aas
push
dec
xchg
into
hlt
pop
xor
lret
fcmovb
jns
push
sub
mov
in
lods
das
test
push
mov
fs
jmp
jmp
rorl
in
mov
sbb
fs
jb
std
div
fs
or
and
mov
or
cmc
mov
pusha
add
dec
stc
cmc
mov
mov
cld
sbb
rcrl
cld
leave
mov
push
icebp
cmpsb
add
js
stos
imul
imul
cmp
mov
lods
pop
mov
enter
clc
test
inc
dec
hlt
shl
jl
mov
shrb
pop
pop
mov
cmp
xor
popa
decb
push
cmpsl
push
out
out
dec
imul
ret
xor
cmpsb
xchg
pop
jnp
pop
cmp
cmp
add
nop
lea
aaa
push
xor
loope
out
xchg
mov
sar
repz
xor
pusha
push
pop
push
push
pop
imul
out
push
sbb
inc
sbb
mull
cmp
ficoml
dec
aad
cpuid
stc
or
sbb
and
cltd
cmpsb
in
std
fiaddl
add
fyl2xp1
mov
enter
mov
test
and
and
jns
push
aad
pop
inc
ja
sbb
and
gs
dec
lcall
ss
and
pop
mov
scas
outsl
cmp
stos
stos
lds
test
std
add
push
xor
ret
and
push
xlat
dec
and
sub
pop
cmc
pusha
repnz
sbb
jo
popf
push
cs
fdiv
cmpsl
lea
mov
push
jecxz
dec
cmp
fwait
adc
or
stc
adc
adc
mov
xchg
jge
aaa
jge
adc
sbb
ret
aam
xchg
xchg
and
sahf
hlt
sub
cmp
cmpsb
mov
fnstsw
jmp
add
jmp
pop
cmp
mov
xor
movb
xchg
cwtl
mov
ljmp
int3
or
shr
clc
jmp
loopne
lea
fsub
inc
pop
je
dec
cmp
insb
lcall
xchg
dec
dec
sets
mov
les
jmp
mov
std
sti
mov
jg
out
rclb
xchg
das
mov
fstpt
jo
popf
add
xadd
shll
in
orl
out
cli
pop
int3
jb
mov
xor
fprem1
add
lods
les
fwait
loope
lahf
add
ficomps
sbb
inc
and
insb
imul
jp
enter
pop
dec
xchg
negb
sbb
fisubl
push
add
xchg
mov
leave
xchg
popf
int3
movsb
stc
add
inc
mov
pop
shr
jno
jp
add
divl
das
lret
cld
jns
in
jge
and
mov
cltd
in
subl
fisttpl
inc
mov
enter
mov
xor
fwait
cmpl
int3
subb
call
aas
mov
sbb
add
rcrb
add
mov
push
popa
mov
call
jb
loope
pop
out
and
sbb
push
xorl
pop
sub
mov
popf
push
dec
jo
or
or
in
dec
inc
ror
xchg
sar
mov
pop
mov
cmpsb
insb
daa
cld
sub
shll
xchg
and
ret
in
mov
pop
mov
jo
in
mov
xor
notl
add
sbb
int
sti
fwait
stc
inc
cltd
out
int3
dec
sarl
jnp
loopne
mov
mov
lds
and
or
lea
mov
jg
and
popa
jecxz
xchg
in
aad
ja
mov
cwtl
insl
dec
shlb
repz
adc
xor
dec
dec
popf
imul
push
addr16
sub
clc
jae
inc
push
mov
sbbb
popa
cmpl
in
or
or
sbbl
inc
aam
rorb
or
popf
call
sbb
push
ds
mov
fcoml
scas
jmp
rcrb
and
push
jo
loope
pop
dec
dec
jmp
lret
xor
jo
and
test
insl
decb
fldt
test
dec
add
in
pop
mov
mov
jbe
jle
jnp
shlb
adc
mov
aam
gs
in
jge
mov
call
adc
shl
roll
aad
inc
mul
mov
pushf
dec
lds
rol
add
ret
cmp
cmc
lods
xchg
mov
fwait
add
lret
push
scas
in
cltd
into
cltd
lds
xchg
lahf
fiaddl
lods
addr16
lea
in
in
rcl
imulb
shrb
fs
aad
xchg
aad
jnp
xor
adc
mov
fdivrl
or
add
add
movzbl
sahf
cmpsl
decb
push
mov
hlt
sti
dec
or
fwait
push
sbb
movsl
xchg
push
lea
rolb
sbb
push
cmp
lods
lea
movsl
mov
jb
add
mov
into
push
xlat
movsb
rorl
nop
pop
orb
scas
push
mov
arpl
sbb
insb
imul
cld
in
sbb
lds
sbb
imul
std
fldl
jecxz
and
aad
mov
cmp
jne
enter
fwait
sbb
pop
add
pop
mov
mov
push
iret
mov
or
and
out
jbe
ret
sti
fs
jp
mov
push
scas
fxch
mov
mov
ljmp
rorl
mov
and
sar
mov
into
xchg
popf
add
mov
popf
fsubs
ljmp
stos
fldl
das
mov
and
fnstsw
loop
in
call
call
rcr
pop
les
push
mov
jnp
movsl
or
jnp
push
push
je
mov
loope
outsb
sub
and
movsb
repnz
sar
pop
out
mov
ja
fs
rclb
mov
aaa
ds
rcll
in
push
test
ret
inc
hlt
daa
sub
cld
xchg
xchg
xor
in
pop
adc
and
andb
inc
test
add
in
and
ret
xchg
or
push
les
sarb
inc
fisttpl
push
pushl
adc
sub
cwtl
jae
xchg
aam
mov
cmpsl
jmp
xchg
mov
xchg
mov
out
add
mov
int3
push
in
and
push
fbld
std
and
mov
jne
movsl
iret
in
ret
add
loope
add
and
ja
pop
adc
inc
popf
movsb
mov
filds
mov
jnp
mov
push
aas
and
pop
mov
mov
cli
fs
call
jp
xchg
jns
cltd
jne
cmp
sbb
sti
pop
out
inc
std
insw
push
mov
cmpsl
mov
mov
xchg
jne
inc
enter
call
out
and
push
gs
inc
pop
sub
inc
cmpsl
xor
push
fs
add
mov
outsb
or
pop
mov
add
call
fstl
dec
out
insl
xchg
in
mov
sti
xor
add
sti
xor
dec
adc
sub
sti
cmpsb
ret
sbb
testb
lea
mov
lock
mov
dec
idivb
sarl
or
jmp
rolb
adc
inc
jmp
and
mov
adc
jl
repz
jecxz
out
add
repz
iret
lock
mov
mov
in
dec
cltd
or
xor
adc
subb
fwait
decb
push
jnp
inc
jb
or
xchg
imul
movsb
mov
dec
inc
lods
scas
add
clc
stos
popf
out
call
dec
fsubr
mov
dec
incb
in
and
fs
popf
insb
pop
dec
imul
pop
in
dec
or
in
jo
mov
sub
mov
mov
rcrb
test
icebp
inc
lahf
dec
pushf
xchg
xchg
jns
insl
in
jmp
cmc
ja
sbb
jo
iret
sbb
jmp
out
jmp
pop
and
test
adc
pop
out
jno
rorb
jmp
dec
mov
fs
inc
or
lods
icebp
or
xor
or
push
mov
xor
aam
mov
mov
push
push
into
adc
xorl
ljmp
repnz
sub
xchg
pop
mov
jbe
or
stc
sub
push
out
imul
shl
fstpl
xor
ds
xchg
popa
pop
sub
adc
push
cwtl
insb
mov
sar
test
jno
movsb
and
int
enter
and
push
jns
rolb
cmpsb
sti
and
or
or
sbb
orb
call
push
mov
fcoms
movsb
ret
fndisi(8087
mov
sub
push
mov
and
mov
cmpl
pusha
inc
xchg
and
add
adcb
aad
lea
xchg
jle
repnz
stos
les
rol
cmp
sarb
jne
add
jne
xchg
xchg
loopne
xchg
jno
ss
sub
int
jl
jnp
inc
fs
mov
mov
out
push
lret
hlt
cwtl
dec
sub
aam
jnp
ds
jbe
imul
fisubs
int3
push
pusha
adc
dec
xor
jge
push
pop
and
push
rol
mov
in
jmp
push
mov
xchg
dec
mov
sbb
ljmp
mov
dec
mov
fwait
cmpsl
pop
sub
fimull
push
add
fsubl
jne
aad
test
pushf
push
nop
popa
inc
push
lods
mov
clc
inc
int
cmp
scas
cltd
ret
ss
enter
cmpsl
cmp
sti
push
xor
sbb
sub
xlat
lds
and
in
or
mov
pop
enter
and
xchg
aam
out
fcoml
jns
pop
testb
jecxz
sbb
add
xchg
ljmp
popa
jge
call
xor
ret
add
mov
inc
out
or
fldt
push
xchg
shlb
or
dec
js
xchg
dec
cmpsb
add
cmp
xchg
jns
lcall
fnstenv
push
movsb
pop
and
inc
mov
cs
repnz
mov
sbb
les
jno
push
and
mov
mov
or
loope
lods
out
and
pusha
scas
std
or
inc
setns
mov
xor
jo
lret
lock
cmpsl
xchg
in
jnp
shll
add
ret
shlb
cmc
or
and
gs
lods
sysret
xchg
lret
and
inc
xor
xor
movsl
and
jecxz
loope
sub
js
jns
push
les
pusha
test
ret
pminsw
dec
out
xlat
mov
dec
out
xor
mov
inc
or
shll
add
roll
pop
icebp
insb
loop
test
pop
out
lret
jecxz
leave
add
jmp
cmp
in
xlat
mov
mov
push
cltd
cli
xcrypt-cfb
cmpsl
movsl
inc
mov
jmp
aam
orl
jmp
xchg
fmull
icebp
jl
ret
loope
push
dec
jecxz
adc
fdivs
movsb
cmc
sub
mov
subl
std
add
adc
cmpsb
jg
idivb
popa
lea
popf
leave
stos
mov
cmp
adc
mov
adc
jns
sbb
dec
and
mov
cld
mov
shlb
adc
xchg
pop
dec
sbbb
xchg
aam
inc
test
data16
dec
fs
jge
fs
cltd
roll
cltd
aas
repnz
in
jne
mov
rolb
push
in
enter
adcl
out
push
dec
popf
jns
stc
lret
out
xchg
stc
mov
xor
jno
mov
mov
push
mov
nop
pop
sbb
add
outsb
jnp
stc
call
jo
in
pushf
int
lods
stc
imul
or
enter
cltd
sbb
sub
testl
jmp
mov
add
xchg
dec
push
pop
push
pop
or
or
lock
xchg
cmpsl
xchg
sbb
add
ret
adc
cmp
leave
lret
jmp
cmpsb
and
scas
or
sub
leave
movsl
int3
mov
pop
in
push
sub
sub
aas
in
out
add
nop
stc
inc
sbb
dec
adc
dec
dec
mov
push
mov
inc
imul
std
repz
popf
jb
nop
mov
mov
lods
mov
mov
push
std
dec
and
sbb
or
roll
dec
das
movsb
adc
mov
sahf
dec
std
adc
xchg
hlt
cmp
hlt
pop
rcrb
inc
sub
aam
or
movl
add
adc
push
fnstcw
ja
inc
sbb
cmp
inc
push
jnp
subb
sti
popf
les
imul
mov
dec
jne
push
in
jns
das
imul
fs
nop
stos
loope
cmp
je
subl
dec
test
lahf
js
push
ds
in
in
and
rcrl
mov
jns
mov
or
pop
cmpsb
shrb
jnp
rcll
pop
xlat
in
inc
dec
inc
pop
loopne
je
ror
in
cmp
hlt
js
push
cmp
xchg
jle
hlt
jo
dec
xchg
int
mov
xchg
push
cmp
pushf
mov
push
adc
mov
orb
jmp
mov
mov
sahf
in
ret
jle
dec
push
popl
sub
sub
out
pusha
popa
enter
pushf
or
dec
hlt
test
jns
push
insl
cmc
xor
not
arpl
divl
mov
fs
cmp
bnd
jge
jne
pop
idiv
mov
cmpsb
fstp
testb
shrb
jp
or
outsl
cwtl
aaa
hlt
out
xchg
jno
add
aam
adc
fisubrs
fdivp
repnz
aam
popf
lock
add
popf
stc
cli
or
loopne
in
push
push
mov
sti
cld
xchg
mov
popf
in
fcmovnbe
dec
mov
push
inc
inc
dec
jo
in
push
ss
rorb
adc
shll
mov
clc
daa
dec
sbb
push
push
jl
mov
sahf
idivl
mov
shlb
push
or
cmp
aam
aam
inc
sbb
sub
iret
add
jns
jmp
pop
and
push
or
dec
and
jnp
test
fiaddl
negb
lret
cmpsl
push
arpl
cmc
aas
mov
cmc
pop
xor
cmp
fmulp
push
mov
out
xor
ss
and
sbb
sub
aas
pop
inc
adc
cmc
mov
or
dec
jmp
pop
and
rcrb
pop
sti
sub
push
nop
aad
mov
sub
mov
push
lods
imul
repnz
lea
dec
hlt
and
fisubs
rcrb
mov
mov
icebp
push
lods
cmp
lods
sti
call
cmpsb
ljmp
mov
outsl
add
roll
add
push
add
imul
cli
dec
dec
std
or
negl
dec
jno
sbb
sbb
pop
push
rorl
and
cmp
add
stos
loope
and
xchg
pop
sti
xor
test
hlt
sub
cmp
push
test
pushf
popf
or
int
mov
xchg
jle
add
mov
mov
adcb
les
xor
test
pop
inc
sar
ja
imul
neg
or
clc
mov
dec
rcrb
decb
xchg
out
in
ds
jl
sub
rorl
adc
popl
mov
mov
cmpsl
icebp
or
lods
mov
xchg
adc
rcr
mov
icebp
rorl
mov
out
sahf
sbb
inc
icebp
shrb
pop
xchg
insl
xor
mov
mov
mov
cmp
mov
lds
xchg
inc
mov
sbb
popf
mov
push
scas
in
aam
aam
shll
leave
lock
mov
popf
sti
dec
mov
in
js
fidivrs
push
jp
mov
push
adc
pop
fsubr
js
push
sub
add
shr
xchg
fs
int3
in
out
jb
mov
mov
mov
gs
arpl
sub
dec
inc
mov
int
mov
add
incl
mov
sub
imul
mov
mov
fs
xlat
inc
into
or
pop
movsl
aad
stc
ds
std
cmc
mov
fisttpll
cmp
xchg
sarl
sub
push
dec
inc
push
sub
lret
xlat
xchg
jle
ljmp
inc
es
mov
xchg
jnp
inc
repz
jge
and
mov
fiaddl
call
mov
testl
shl
mov
push
adc
sub
icebp
mov
dec
jl
inc
fwait
push
cmp
icebp
mov
jnp
mov
fs
adc
ret
xlat
or
add
aaa
aam
iret
add
fcmovnu
xchg
mov
lret
mov
push
mov
je
mov
in
test
popa
cmpsl
aad
fstl
out
sbbb
loope
mov
mov
pop
shrb
ds
in
icebp
xchg
int
push
inc
mov
push
inc
jb
fcoms
mov
mov
xchg
xchg
out
lea
popf
les
je
xchg
into
sub
out
mov
inc
inc
test
data16
out
scas
ret
cltd
imul
mov
sti
pop
stc
stos
or
mov
jnp
cmc
mov
jo
mov
in
les
imul
xchg
or
std
jns
aam
mov
in
adc
dec
xor
jmp
lahf
out
ljmp
fidivl
cmp
or
out
fucom
aaa
out
or
fisttpll
imul
sti
imul
inc
outsb
pop
insl
fs
js
xor
mov
mov
push
es
pop
js
cmp
xchg
cwtl
ss
pop
inc
insl
lea
push
int
jmp
icebp
cmp
cmp
add
fimull
xor
jnp
aam
std
xor
fwait
lds
std
lods
inc
mov
rcrb
mov
in
scas
inc
in
sub
mov
xor
int
add
mov
xchg
popa
xor
out
test
xchg
xchg
jns
jmp
push
sub
pop
testb
std
out
scas
mov
in
icebp
inc
stc
cmp
dec
cmp
lods
adc
and
mov
sbb
cmp
in
push
scas
stc
push
sbb
adc
jns
cli
adc
sbb
imul
push
xor
cmp
mov
lock
clc
aaa
inc
divl
jb
or
in
jb
rorl
add
mov
sub
mov
adc
sti
lret
mov
fs
sbb
sbb
xchg
mov
hlt
dec
fmuls
mov
xchg
push
in
shrb
shll
and
hlt
push
mov
dec
mov
and
mov
or
movsb
in
sub
sub
push
nop
xchg
sti
dec
lea
mov
arpl
loopne
push
jno
jne
sbb
push
jecxz
or
push
int
mov
adc
push
sbb
jae
and
mov
fs
mov
sarb
andl
cmpl
repnz
je
outsb
gs
fstpt
mov
andl
stc
popa
fisttps
mov
shll
and
inc
jb
sub
mov
jne
mov
dec
mov
xlat
push
xchg
sti
sbb
mov
mov
ret
mov
dec
mov
jecxz
inc
mov
std
ja
icebp
jno
jno
xchg
or
pop
dec
aad
dec
mov
popf
mov
das
mov
mov
nop
jne
and
fimuls
aam
sbbb
aam
and
inc
outsb
inc
push
jo
pop
push
mov
add
pop
cltd
js
jbe
xchg
test
pop
lock
add
jle
es
mov
cltd
es
pop
lret
and
jmp
jnp
imul
shll
lods
int3
cs
add
dec
add
cmpsl
lea
jo
into
stos
ja
insl
pop
call
sub
mov
mov
add
or
psubb
imul
sbb
stc
cmpl
jnp
sti
lds
push
jno
test
push
cmp
mov
or
sub
bound
adc
movsbl
hlt
in
push
adc
push
scas
adc
enter
push
mov
lods
int
pop
xchg
push
ficomps
mov
lcall
dec
psrlw
loope
mov
mov
js
popf
test
iretw
into
pop
jl
fcomps
mov
xchg
mov
mov
bnd
in
jle
inc
jne
pop
push
lods
cli
test
lea
push
in
std
iret
fs
popf
jno
cmp
mov
daa
stos
jns
arpl
dec
scas
popa
jg
ja
xchg
or
add
bound
scas
rolb
and
mov
test
loopne
dec
aad
jle
cmc
or
jne
xchg
sti
in
pop
loope
std
fs
xor
mov
xor
cmpsb
pop
loope
cmpsl
gs
pop
int
mov
out
push
jle
push
lret
fs
xchg
jne
sub
fs
push
mov
das
scas
mov
mov
and
add
mov
jmp
insb
cmp
adc
cltd
jecxz
in
adc
and
adc
popa
inc
mov
test
push
mov
ret
movsl
jnp
cmpsb
inc
out
data16
icebp
add
inc
aam
pusha
mov
stos
bound
jb
push
shll
adc
and
inc
stos
imul
loopne
push
cmpsb
sbb
bound
ret
inc
scas
jmp
clc
jg
inc
sub
adc
pop
enter
or
subl
push
add
mov
or
adc
es
xchg
xor
jecxz
fstps
dec
xchg
dec
andl
test
dec
cs
pushf
add
ds
repnz
pop
hlt
fidivrs
xchg
or
push
sbb
inc
cli
xchg
xor
pop
xchg
pop
popa
ret
inc
rcrl
popa
outsl
pop
xchg
add
cld
test
cmp
shl
dec
fnstcw
push
push
mov
frstor
outsb
loop
dec
dec
icebp
xchg
push
xchg
outsl
cmpsb
scas
insl
adc
insb
sub
ds
iret
lret
mov
fld
cmp
fimuls
cmc
xor
xorb
or
loopne
add
jae
push
leave
sbbb
dec
icebp
pop
data16
mov
adc
or
cld
fwait
js
pop
add
scas
jns
xchg
mov
daa
lret
ret
mov
ja
loop
sbbb
jnp
xor
movsl
mov
jo
shll
sbb
pop
dec
fwait
aad
jo
xor
sub
mov
xchg
hlt
dec
test
rcrb
mov
out
pushf
arpl
xor
or
popa
sbb
push
sub
pop
idivl
repnz
inc
inc
dec
out
mov
loop
mov
pop
movsb
lods
jecxz
in
sarb
mov
xchg
lds
pop
jg
push
jmp
lret
xchg
mov
rorl
lcall
fsubrp
aas
les
push
clc
test
jmp
mov
xchg
clc
jmp
in
rorb
dec
dec
add
ds
mov
into
cmc
out
jmp
mov
cltd
subl
sar
andb
lods
push
shl
inc
sbbb
inc
popa
sahf
jne
loope
orl
imul
test
mov
dec
aas
or
sbb
popf
mov
cmp
mov
jns
fdivs
xchg
mov
push
or
call
loop
fists
sbb
dec
mov
mov
icebp
mov
and
fcoms
xchg
adc
add
cmp
push
inc
sbb
sbb
dec
cltd
dec
xchg
xchg
sub
std
and
sub
push
mov
ja
pusha
aas
xor
dec
fsubrp
and
mov
sub
popf
out
popf
xor
xchg
daa
add
jo
xor
repz
cwtl
lds
cmpsl
jnp
or
mov
inc
adc
call
cli
add
stos
fwait
out
cmp
ja
push
push
enter
shrb
fiadds
gs
pop
out
movsl
or
inc
and
adc
xor
mov
dec
inc
sbb
mov
dec
push
xor
dec
mov
hlt
dec
sbb
push
pop
cmpsb
xor
ss
in
mov
popa
adcl
xchg
push
gs
cmpsl
pop
sti
pop
into
mov
jb
std
xchg
out
pop
sbb
jp
test
or
movsb
mov
sti
repnz
fstpl
stos
pop
sahf
cltd
mov
mov
push
fs
adc
repnz
mov
imul
rorb
andb
cwtl
xchg
add
pop
cmp
ss
pusha
adc
xor
dec
and
inc
imul
adc
pop
lods
cmpsl
flds
shl
shl
or
sub
sub
xchg
mov
lea
lret
inc
stos
push
pop
mov
cmp
jno
pop
lods
cmp
mov
aas
and
mov
mov
inc
loop
jecxz
mov
ror
ja
ss
lcall
loope
enter
and
or
push
cmpsb
je
in
sarl
pop
fs
mov
fs
stc
adc
cli
push
ja
xor
push
add
popf
fdivs
sbb
in
js
cmp
dec
push
insb
xchg
nop
dec
adc
int
stc
cmp
ret
adc
push
ret
or
subb
mov
rol
sarl
dec
icebp
jns
push
stos
xchg
in
outsl
hlt
in
lock
adc
mov
jge
shlb
lock
dec
aas
sbb
xchg
inc
insb
lods
call
adc
sub
mov
ficoms
orl
ret
dec
jne
por
cwtl
subb
loope
sbb
movsl
out
js
inc
fwait
call
mov
xlat
mov
mov
sub
mov
in
arpl
flds
xor
or
dec
inc
roll
jne
adc
xchg
fstps
mov
mov
push
aaa
sbb
pusha
lds
loope
sbb
mov
shl
bound
int
push
sbb
stos
mov
or
cmp
ljmp
sbb
shr
push
mov
flds
movsb
and
xchg
xor
mov
out
add
les
pop
and
adc
mov
dec
sub
xchg
cmpsb
jne
cli
lcall
cmp
pop
xor
cmp
jne
addb
mov
push
mov
jmp
in
mov
stos
out
or
dec
ljmp
jns
fucomp
cmp
add
mov
adc
outsb
mov
subb
daa
daa
or
cmc
pushf
clc
cs
enter
sub
in
enter
arpl
ret
sub
mov
add
aaa
mov
add
or
stc
data16
call
imul
push
mov
ret
sub
sbb
das
mov
sbb
and
dec
mov
lock
mov
es
std
inc
add
cmp
xor
xor
frstor
loopne
xchg
lods
sub
push
mov
lods
jnp
sbb
test
dec
popa
test
cmp
mov
push
test
cmp
cmp
div
addr16
repz
jnp
xchg
push
mov
jmp
nop
jl
sbb
xchg
rolb
ja
jo
mov
not
shrl
jl
fimuls
ja
shlb
xor
cmp
call
jmp
mov
fstps
stc
cmc
pop
dec
movsl
lds
in
add
xchg
dec
cmpsb
xchg
pushf
subl
dec
jmp
xchg
movsl
dec
scas
rolb
punpckhbw
rolb
roll
mov
mov
jecxz
imul
frstor
lods
mov
jl
push
pop
mov
inc
mov
ja
mov
xchg
push
xor
sbb
mov
pop
jle
adc
mov
into
and
sub
out
popf
ror
cmpl
push
into
shl
lret
cmpsb
jb
inc
cmpsl
add
mov
out
into
out
fs
aam
jns
call
fildl
jns
scas
fists
or
imul
jae
testb
cmp
icebp
adc
add
popf
jae
lods
mov
orl
cmc
loop
subb
jnp
sbb
pop
cwtl
popf
outsb
mov
lahf
mov
mov
push
out
test
outsl
js
ret
test
std
cmc
push
push
jge
iret
inc
jecxz
cli
or
test
icebp
test
in
sbb
xor
dec
pop
mov
fmuls
andb
dec
imul
sarb
inc
or
ss
in
lcall
sbb
mov
mov
or
jno
test
jg
dec
std
in
jno
fildl
leave
cmp
mov
into
int3
add
inc
mov
out
out
popf
ljmp
sbb
sarl
add
imul
clc
sbb
shlb
adcl
adcl
ficoms
jne
insl
imul
fsubr
push
leave
leave
stos
add
xchg
jl
mov
enter
add
push
push
andl
push
dec
loopne
dec
je
mov
jp
pop
or
fldt
jecxz
push
ret
mov
cwtl
mov
jge
add
dec
movsb
bound
adc
scas
dec
in
mov
in
inc
enter
pcmpeqw
mov
lock
std
pop
xchg
adc
inc
add
mov
ret
repz
imul
xchg
sbb
mov
insl
cmp
shll
mov
inc
shlb
shlb
pushf
jmp
jmp
leave
fsubs
jne
mov
jmp
loope
adc
rcrl
dec
lds
loope
pop
jnp
lock
stc
or
sub
lret
in
out
int
add
pop
xor
add
pop
and
popf
jle
xchg
je
add
jl
insl
in
sbb
adc
in
call
jae
jmp
mov
push
movsl
int3
outsl
ljmp
js
mov
lahf
in
fs
cld
cmc
xchg
push
sub
sbb
pop
in
loop
mov
mov
mov
filds
pop
imul
mov
popf
mov
mov
add
mov
ja
lods
xchg
aad
jge
add
out
lock
imul
int3
inc
sbb
fcoms
pushf
dec
cmpsl
inc
mov
fs
mov
xor
push
nop
in
loope
fnstenv
jns
dec
gs
mov
add
dec
loope
mov
ffreep
dec
stc
stc
movsl
loope
jnp
mov
jne
in
dec
mov
mov
add
imul
and
xchg
stc
in
adc
subl
xlat
mov
outsl
mov
or
insb
jl
ss
pop
pushf
test
cmpl
repnz
push
je
rorb
xchg
mov
mov
stc
inc
stos
test
movsb
in
or
mov
jmp
movsb
loop
cmp
sti
sbb
mov
sub
xorb
popf
jle
jl
in
icebp
fnsetpm(287
adc
out
xor
loope
stos
hlt
stc
jnp
dec
inc
mov
rolb
cmp
icebp
cmp
sti
xor
rorl
jecxz
iret
in
jo
dec
gs
lea
rcrl
loop
decl
sar
add
lock
jecxz
sarb
fsubp
and
jmp
pop
insl
aad
lock
dec
ffreep
jmp
popf
cld
inc
add
shrl
lods
ja
pop
nop
sar
test
xchg
sub
push
imul
lock
xlat
mov
mov
fsubl
in
data16
pop
push
push
and
fstps
aam
nop
mov
pop
lret
add
into
lock
mov
call
mov
ret
sub
mov
inc
mov
lock
std
jnp
jecxz
rorl
popf
jecxz
enter
or
lret
mov
movsl
das
or
push
icebp
jecxz
lea
mov
fs
in
push
mov
dec
mov
aam
sub
cmp
fs
rcll
sbb
std
sbb
jmp
sbb
shlb
cld
inc
sub
mov
pop
in
int
jo
in
clc
xor
jp
add
dec
lret
mov
xchg
pop
mov
or
je
add
iret
mov
pop
cltd
push
les
cmp
sti
sbb
inc
cmpsb
decl
in
vpcmpeqb
lods
mov
popa
cmpsb
fucomi
in
cmpl
mov
mov
inc
std
inc
pop
jnp
lds
outsl
xchg
push
jnp
mov
xchg
push
enter
decb
pop
scas
adc
sti
leave
add
inc
loope
dec
fnsave
push
imul
push
cld
push
and
dec
cmp
loop
fs
pop
loop
sub
cmp
add
mov
push
dec
jo
ja
or
jne
shr
mov
dec
int3
fmuls
sbb
sbb
dec
and
out
int3
add
orl
sahf
mov
aad
adc
lods
ficompl
cli
pushf
push
push
mov
mov
cmp
daa
cmp
pop
and
aad
dec
xor
inc
adc
stc
push
in
rorb
add
lods
jne
adc
cmpsb
fisubs
iret
arpl
jo
cmp
iret
shlb
inc
sahf
popa
test
and
pop
jns
xchg
aad
lock
dec
inc
cmpsb
pop
lea
rolb
and
fiadds
es
adc
dec
cmpsb
and
inc
test
jo
popaw
loopne
pop
mov
imul
cld
loopne
int3
pop
sbb
mov
or
sbb
sti
popf
push
add
es
sti
and
repz
jae
inc
add
jb
mov
xchg
icebp
popf
xchg
popa
mov
cmpsb
mov
cmp
mov
or
adc
mov
inc
shrb
mov
insl
daa
and
adc
xor
and
jl
mov
fs
loope
sti
out
pop
aam
pop
add
fsubrs
movsb
or
mov
push
lock
add
push
and
dec
push
xor
sub
jb
popf
icebp
iret
shll
mov
sub
inc
shlb
mov
sti
lcall
sub
ret
pushf
lea
mov
call
jns
in
jmp
insb
call
jae
push
fdivrs
fwait
ret
push
lahf
add
sarb
and
imul
arpl
sub
bound
or
bound
bound
and
es
mov
xchg
mov
sub
aas
pop
ret
or
sti
sarb
and
sti
loope
subl
jecxz
add
fcmovne
xor
sub
jmp
std
inc
inc
outsl
lcall
jmp
sbb
fnstsw
adc
sub
push
cltd
pop
xchg
roll
test
cmp
ret
push
xchg
mov
pop
mov
jae
push
imul
js
sbb
dec
es
and
dec
inc
pop
cli
icebp
jo
add
cmc
inc
inc
bound
out
lods
mov
aaa
mov
mov
xchg
fstps
mov
das
or
repz
cmp
call
fs
int3
cmp
push
xor
lods
mov
cmp
call
mov
dec
mov
cmpl
or
push
outsl
xorl
cmc
andl
mov
test
pop
mov
fnstcw
dec
idiv
add
cwtl
fsqrt
and
push
cs
jmp
sub
or
std
add
xor
sub
jns
xchg
xchg
clc
insl
fwait
mov
push
dec
in
movsl
stos
movsl
adcb
test
movsl
push
push
xchg
mov
and
mov
mov
int
xchg
aad
pop
push
std
cmp
arpl
cmpsb
adc
and
mov
mov
jne
jecxz
ja
or
and
mov
cmp
out
dec
jmp
mov
inc
rorb
loopne
test
inc
and
loopne
repnz
push
xchg
icebp
test
dec
xchg
jmp
xchg
mov
dec
jnp
sub
add
or
cld
pop
or
sbb
mov
mov
insb
mov
rcl
int
leave
xor
mov
fisubs
jmp
mov
dec
scas
out
or
jnp
mov
pop
mov
stc
nop
stc
jbe
cmp
or
mov
ss
lcall
and
mov
lods
fcom
add
daa
sti
and
dec
stc
repnz
ret
inc
es
jmp
testb
in
xchg
out
sbb
stos
push
out
decl
pop
jmp
cmpb
icebp
mov
mov
pop
int
lea
xor
sub
push
cmpsl
mov
push
daa
in
js
inc
fcmovne
sub
cmp
adc
rorb
imull
movsl
jne
data16
xor
push
int3
jle
aaa
jno
fs
sub
data16
js
mov
push
negl
bound
data16
hlt
dec
mov
shl
jl
push
sarl
push
sbb
lock
je
ret
sub
pop
imul
pusha
int3
inc
fcoml
add
xor
mov
and
add
out
scas
test
sbb
cmp
push
and
lock
dec
xchg
aad
testb
sbb
jl
dec
loopne
mov
mov
testb
mov
and
sti
pop
arpl
sub
push
in
cltd
loope
xlat
rorl
mov
xchg
xchg
mov
inc
bound
fs
push
push
dec
mov
mov
cmp
insb
fstp
xor
xorl
and
scas
into
in
dec
cli
lret
mov
out
loope
jmp
inc
fs
mov
add
and
jmp
out
leave
sarb
mov
add
pop
into
push
movsb
mov
or
and
stos
jnp
xor
or
lret
dec
loope
fiaddl
mov
pop
sti
out
out
les
clc
push
pop
lahf
aam
movsl
cmp
js
inc
push
insl
cmc
adc
aam
das
fdivl
mov
sub
ss
out
cwtl
push
mov
out
mov
aad
sarb
stos
inc
cmc
xor
out
movsb
pop
popf
push
sub
sub
mov
adc
incl
mov
jbe
in
lods
cmp
inc
pop
lods
lcall
dec
jmp
jl
out
fcmovu
gs
fistl
mov
and
xchg
sub
xorl
je
sti
sarb
mov
mov
ficoml
out
aad
xchg
outsb
ss
mov
add
aam
mov
jmp
in
popl
cs
popa
fsubrl
out
loop
xchg
ret
roll
rcll
xchg
xchg
dec
out
jle
loope
jnp
mov
std
or
int3
mov
mov
popf
xor
add
push
push
das
movsb
std
loope
ja
les
lods
in
ds
out
in
shr
imul
les
jmp
inc
arpl
aam
ss
sub
pop
faddp
inc
xchg
and
mov
pop
adc
xchg
repnz
in
mov
mov
stos
pusha
mov
out
xor
and
stos
add
dec
in
ret
inc
jg
pop
push
test
cmc
es
add
and
mov
inc
xor
push
aam
lods
lods
xchg
mov
fdivp
pop
mov
aad
push
lods
ret
sbb
mov
cmp
lds
mov
or
sub
outsb
faddl
icebp
icebp
push
jge
test
mov
icebp
jne
mull
shll
movsb
cmp
int3
imul
imul
xchg
mov
cwtl
push
and
jecxz
ret
xchg
flds
jbe
stc
out
std
inc
lea
hlt
lcall
cmp
cmp
in
push
xchg
bnd
pop
bound
std
loope
popf
jge
loop
repnz
inc
jnp
stos
iret
sub
iret
dec
and
pop
unpckhps
xchg
xor
adc
loop
das
fstl
ja
adc
mov
xlat
shlb
adc
xchg
and
nop
adc
cwtl
sub
jle
sub
out
lods
test
testb
adc
out
dec
lea
dec
cld
out
cli
push
mov
jno
icebp
rcl
in
aam
stc
fucomp
test
cmp
int
add
xor
add
and
and
pop
adc
sarb
aaa
pushf
mov
cmc
inc
sbb
push
sbb
orl
sub
mov
icebp
cmp
in
mov
in
push
jns
mov
mov
out
sbb
mov
jecxz
mov
xchg
mov
mov
mov
sbb
scas
xor
xor
add
repz
jmp
cmpsb
popa
shll
mull
dec
jle
and
aaa
pop
push
lea
ror
ss
pop
push
repnz
xchg
rorb
push
jg
notl
sub
jecxz
lret
mov
inc
cmpl
loope
or
add
jle
push
mov
subl
pop
mov
xchg
and
imul
push
sbb
pusha
int3
sbb
or
rolb
dec
ret
mov
rorb
xor
test
lods
paddd
adc
icebp
and
add
xor
lods
inc
nop
test
jns
mov
dec
pop
ja
xchg
jp
cmpsl
pop
dec
xor
cmc
push
pop
mov
dec
mov
or
jns
cmp
mov
cmp
sbb
xchg
mov
pushf
jmp
push
cmp
jg
adc
sbb
cmp
cwtl
loope
push
out
mov
push
outsb
mov
orb
fnsave
cli
test
jnp
js
cmp
test
mov
push
test
cmp
jmp
stc
jne
cwtl
std
sub
and
add
lret
xlat
lock
push
test
mov
dec
ret
fld
lret
stc
jge
mov
mov
cmc
rcll
sub
xchg
push
or
dec
fwait
shl
add
addb
or
mov
sbb
inc
mov
mov
xlat
push
lret
sub
mov
ljmp
gs
aas
inc
pushf
push
pop
push
dec
out
jg
lcall
popl
pop
push
rorb
andb
in
testb
push
stc
cli
std
stos
push
lods
xchg
xchg
shll
mov
negl
subl
add
mov
push
int3
sub
mov
xlat
mov
mov
push
imul
call
pop
addr16
and
into
fld1
mov
cs
out
popf
out
mov
xchg
fs
sub
loope
push
push
pop
xor
xchg
test
pop
ror
hlt
hlt
int3
mov
scas
push
mov
adc
xor
add
mov
jecxz
xchg
jo
pop
pop
cmpsl
xlat
std
rorl
mov
jle
cs
sti
dec
les
inc
mov
mov
cltd
divl
xchg
call
cli
xorl
jecxz
xor
sub
and
mov
gs
mov
iret
xchg
push
lds
into
rolb
jg
mov
orl
adc
les
jne
jg
jle
push
pop
into
push
fnstsw
sar
fs
les
lds
stos
push
out
subb
dec
add
cmp
aam
pushf
popf
fdivrl
movsl
in
or
pop
dec
jmp
xor
scas
in
add
sbb
adc
mov
mov
cmp
pop
mov
hlt
xor
push
mov
scas
pop
rcll
sbb
xchg
sahf
fwait
and
add
mov
in
mov
rolb
in
mov
cmpsb
dec
and
icebp
lret
add
or
cld
call
add
ret
jbe
in
shlb
add
int3
das
int3
mov
loope
pusha
jmp
push
das
rorl
cld
xor
out
imul
sbbb
mov
mov
mov
ret
xchg
sub
push
pop
in
cmp
jge
add
xchg
sbb
inc
mov
xchg
jge
neg
cmc
mov
hlt
in
ja
sbb
in
dec
xor
out
bound
adc
hlt
sbbb
ds
cltd
lock
lahf
loopne
sub
mov
inc
stos
iret
pop
ret
cltd
test
ja
xchg
and
lods
push
pusha
push
mov
iret
mov
std
and
leave
sbb
repz
dec
add
jge
push
shll
add
add
push
mov
call
imul
lea
int
xchg
fnsave
adcb
jg
cwtl
add
pop
test
adc
jge
and
lahf
push
mov
in
push
dec
cmpsl
idivb
in
cld
add
shll
int3
inc
clc
repnz
push
in
sub
loopne
adc
add
in
adc
aam
lds
fidivrl
pop
fisubrl
popa
call
xchg
mov
mov
stos
ror
notl
jmp
and
mov
mov
aaa
sub
push
xchg
and
loope
jl
adc
adc
pop
movsl
dec
mov
clc
fs
loop
jmp
and
mov
jno
sbb
sbb
cltd
in
jge
pop
adc
add
jnp
test
add
push
or
jge
mov
mov
imul
les
lret
push
jno
lret
mov
push
mov
push
cltd
or
pop
scas
lods
cmp
xchg
mov
call
in
aad
fs
cmp
inc
ficomps
add
sub
icebp
cmpsb
pop
and
sbbl
mov
lahf
xchg
sub
fdivrs
ficoml
mov
adc
mov
jb
xor
cltd
dec
roll
test
xchg
int3
adc
loopne
dec
pop
mov
pusha
sub
addr16
call
subl
lock
leave
mov
sbb
hlt
addr16
mov
or
cli
lret
jge
inc
mov
ja
sbb
xchg
in
call
into
cmp
push
decb
shlb
lahf
adc
clc
push
jnp
xchg
nop
dec
popf
add
or
ret
jmp
xor
jne
stos
popf
loopne
mov
push
dec
cmp
loope
sbb
pop
dec
ret
sbb
mov
ret
pop
loopne
ss
mov
pop
mov
mov
out
leave
scas
sbb
cmp
mov
test
shll
call
xchg
ja
mov
push
movsb
scas
loope
std
mov
insl
adc
push
dec
push
cmp
sbb
mov
repnz
and
xor
or
mov
cmpsl
or
dec
icebp
test
jmp
dec
xor
xchg
mov
mov
inc
testb
sub
push
jns
jno
and
out
es
popa
jns
pop
loopne
shrb
test
xchg
mov
xor
dec
mov
and
std
out
insl
pop
inc
dec
imul
nop
pop
aaa
adc
pop
sbb
xchg
adcb
dec
mov
cmp
iret
pop
push
jno
ret
stos
rol
xchg
sub
cs
jmp
rolb
lahf
lcall
inc
enter
sbb
mov
dec
cmpsb
hlt
xchg
push
cmpsl
aad
pop
adc
inc
ljmp
cmp
push
jno
or
popa
push
std
fcos
dec
shlb
sbb
inc
xchg
fiaddl
pop
lock
xor
xchg
pushf
insb
aas
in
pop
mov
and
repz
faddl
push
out
mov
dec
or
stc
je
sti
mov
xlat
notl
mov
pop
inc
mov
xchg
mov
das
enter
sub
adc
jns
lods
lea
jecxz
jmp
call
ja
jmp
andl
inc
add
clc
dec
insb
addb
cmp
add
cli
pushl
pop
push
sbb
mov
mov
sbb
sub
push
sbb
cltd
test
data16
xchg
lea
mov
sub
push
push
fmulp
in
in
fcompl
pop
jb
sub
add
idivl
stc
sub
in
xchg
mov
lret
in
pusha
popa
dec
xor
dec
call
jecxz
stc
lahf
sub
add
inc
jae
push
push
pop
mov
add
or
jbe
test
ja
or
dec
fsubl
rcll
inc
flds
push
aam
mov
out
inc
or
jp
xor
mov
popf
cmp
xor
mov
sub
add
icebp
xor
pusha
xchg
sub
mov
lret
inc
lea
cmpb
lcall
loope
xchg
inc
popf
jno
push
imul
stc
pop
sub
xor
dec
sbb
sub
test
jb
dec
ficomps
push
sbb
xor
in
popf
imul
pop
xorl
rorl
inc
lea
outsb
stos
movsb
push
in
sti
bound
mov
int
mov
dec
pop
push
jecxz
in
mov
loop
stos
test
sub
dec
add
cmp
jg
dec
mov
arpl
mov
orl
inc
push
sub
jno
fwait
fwait
push
ja
push
loopne,pn
jge
out
lret
ficoml
addr16
mov
add
dec
in
int
cmpsl
out
xchg
call
add
dec
or
mov
xchg
sub
sahf
stc
mov
bound
fdivl
mov
mov
mov
jo
loope
jecxz
cmpsb
dec
push
xchg
jge
shll
test
mov
shll
mov
out
mulb
mov
push
incb
aaa
ljmp
rcr
push
jnp
push
stos
fidivrs
push
pop
cmp
ret
popf
pop
or
andl
xor
lea
adc
dec
fs
cmp
test
stos
mov
dec
pusha
lret
add
rclb
jp
dec
mov
push
lock
adc
xchg
mov
and
std
push
jmp
shrl
jecxz
mov
outsb
call
jo
dec
lahf
incl
and
outsb
dec
shlb
xor
call
fidivrl
pop
mov
inc
mov
lock
xchg
std
cmc
adc
stc
inc
sbb
mov
js
cmpsl
lds
sbb
mov
lea
fs
xchg
insl
daa
cmp
sbb
test
jnp
fisubrs
clc
inc
push
rorb
pop
mov
dec
xchg
push
rcrl
aaa
jmp
cmpl
js
push
je
lds
push
call
cmpsb
cmc
mov
das
nop
jnp
sti
push
and
sub
mov
out
cmp
test
push
aam
cmp
stc
flds
loope
sbb
lret
cmp
xor
adc
xchg
leave
call
iret
popa
sub
pop
jo
fidivrl
dec
repz
adc
add
mov
sub
lret
ror
jg
pop
mov
ret
xor
out
or
lret
inc
and
aam
lock
into
cli
pop
adc
xor
lahf
inc
push
push
xor
les
insb
mov
xchg
jnp
stc
jecxz
outsl
ret
cli
jo
mov
cld
int3
xchg
xchg
add
dec
shlb
andl
sbb
sbb
sub
rcrb
in
dec
mov
cmp
popf
push
add
sbbb
ret
inc
sbb
nop
and
in
mov
sbb
xchg
mulb
inc
pop
pusha
sarl
or
icebp
mov
and
push
shrl
inc
hlt
push
int
dec
jmp
shrl
sub
stc
aam
fsub
gs
stos
fists
push
and
movsb
or
mov
out
loopne
dec
mov
inc
outsl
fcoms
xchg
loope
push
xchg
lcall
push
in
push
mov
daa
xchg
dec
in
ret
test
inc
or
sbb
dec
mov
cmp
mov
jmp
jmp
xchg
mov
xor
out
mov
lock
mov
jne
jge
out
sti
out
push
sarl
sub
mov
out
or
sbb
cltd
out
jl
loope
mov
jne
movsl
nop
cmpsl
std
cmp
out
ret
and
jne
push
mov
mov
jge
or
mov
clc
sbb
movsb
adc
jmp
pop
out
ds
cmp
fidivl
cmp
jne
cmp
cmpsl
xorl
add
fidivrl
pop
cwtl
std
adc
push
ret
sub
sar
test
xchg
lahf
mov
les
push
push
or
in
mov
add
gs
stos
inc
xchg
jl
andb
push
mov
dec
scas
xor
add
inc
mov
shll
pushf
cltd
xchg
jns
call
cmpsl
ljmp
cmp
xor
cmp
mov
xor
cmpl
mov
sbb
push
icebp
xchg
xchg
in
jecxz
mov
mov
mov
pop
pop
sarb
cwtl
xor
jns
dec
or
push
aam
sub
mov
cltd
cmpsl
push
es
andb
adc
sbb
shll
xorb
xchg
pop
fs
ss
pop
mov
xchg
imul
lods
or
scas
insl
add
je
jbe
sti
loope
push
push
movsb
cltd
and
aam
mov
mov
mov
mov
movsl
adc
sub
adc
or
push
cmc
add
out
std
or
xchg
or
lret
daa
jmp
lret
push
pop
test
cmp
out
call
push
mov
loop
daa
xchg
lret
jae
xor
into
dec
mov
mov
mov
dec
inc
call
js
add
mul
mov
adc
aaa
int3
pop
fisttpll
cmpsl
pop
dec
mov
cmc
lods
jg
in
adc
js
mov
out
dec
clc
jl
mov
xchg
jne
icebp
jne
pusha
mov
shl
xchg
lahf
sbb
adc
dec
mov
dec
push
inc
stc
pop
repz
ss
pop
cwtl
xchg
repz
sbb
sbb
testl
push
mov
jnp
adc
and
mov
cltd
and
mov
cmp
jecxz
aam
rcll
test
ret
pusha
es
arpl
xchg
daa
mov
fwait
shr
clc
add
nop
ljmp
cmp
insl
insl
push
cld
sbb
and
push
es
push
lret
pop
sub
jnp
lret
mov
jo
fmulp
popa
stos
push
stos
and
rorl
jne
loopne
or
mov
fmuls
subb
push
scas
xchg
jns
dec
repnz
inc
aad
jecxz
xchg
and
clc
out
out
mov
xor
imul
stc
mov
cld
adc
jecxz
inc
jecxz
lret
sub
clc
lahf
sub
sbb
jecxz
std
inc
dec
cmpl
push
cmp
sbb
cltd
test
sbb
iret
notl
adc
cmpsb
lahf
pusha
icebp
mov
loop
aam
dec
xor
in
in
fsubl
out
rcll
mov
sub
mov
sub
out
cmp
lret
and
sbb
cmp
xor
and
divl
leave
outsl
arpl
jg
xchg
mov
mov
cwtl
add
mov
dec
push
push
or
lret
mov
test
cmp
add
shrl
sbb
mov
adcb
mov
pop
popf
mov
mov
fs
dec
lahf
out
movsb
jnp
fistpll
stc
les
sub
inc
in
nop
leave
fdivl
mov
dec
rcrl
xchg
xchg
add
sti
push
push
ficompl
stc
push
xchg
sub
es
dec
call
into
hlt
stos
mov
ret
push
mov
sti
stos
xchg
jge
lret
enterw
js
out
jns
inc
subl
in
xor
push
xor
lock
cli
cmp
std
dec
cmpsb
pusha
mov
int3
les
dec
out
repz
cmp
push
decb
stos
icebp
mov
xchg
cwtl
xor
adc
jecxz
fmuls
xor
mov
jge
mov
jns
and
sub
lods
ret
movsl
rcr
in
popf
mov
fs
inc
sbb
insl
jle
sub
add
int3
pop
int3
mov
mov
xchg
xorb
lahf
mov
push
sub
mov
sbb
pop
xlat
mov
cmp
cmp
lret
ljmp
sarl
roll
sub
push
test
pop
clc
ja
pop
lods
xor
in
mov
xchg
pop
decl
insl
mov
push
sub
popf
movsl
dec
loope
sub
push
sbb
cmp
sti
adc
cmp
rcrl
popf
out
icebp
insl
lock
out
mov
add
lods
aas
push
push
jecxz
subb
aam
mov
fdivp
sti
rcrl
clc
add
add
or
sbb
fisubs
xchg
cmc
pop
cmpsl
jo
pop
xor
inc
test
scas
nop
movsl
call
mov
loope
mov
cli
mov
movsl
ss
push
mov
sahf
inc
repnz
js
push
rcll
iret
dec
mov
add
fnstenv
mov
mov
jl
xor
aam
dec
sahf
mov
pop
in
arpl
loop
dec
in
fwait
add
fs
inc
mov
push
out
arpl
out
dec
and
cmc
fwait
xchg
and
lea
add
fsubl
dec
sti
dec
jnp
push
js
add
cmp
in
loope
mov
jno
mov
sarb
and
lcall
lds
shl
test
pop
xchg
mov
xor
inc
jecxz
lods
lods
dec
mov
scas
sub
xchg
inc
mov
sub
add
jmp
mov
or
pop
loop
jb
and
inc
in
roll
mov
xchg
jb
push
cmpsb
sbb
or
add
sbb
xchg
xor
pop
mov
addr16
mov
test
out
push
push
ret
sub
aas
es
das
pop
or
xchg
lods
sbb
ret
adc
jo
sbb
in
lret
out
dec
jb
inc
cmp
mov
dec
mov
mov
jecxz
mov
sub
push
cmp
in
and
out
jbe
push
ds
aaa
jp
mov
xchg
xor
in
xchg
and
xor
xor
fistpll
pushf
and
mul
shlb
aaa
dec
fwait
mov
jl
inc
lock
movsb
jnp
push
pop
dec
pop
and
jl
insb
fwait
shrl
mov
push
adc
lret
test
rcll
repz
ja
enter
ret
sub
push
movq
mov
arpl
mov
ljmp
jle
add
or
adc
cmp
lea
fcomi
pop
call
jmp
jge
lret
into
and
mov
cmc
sub
orb
jecxz
gs
sub
mov
jp
aad
sti
shl
leave
arpl
sahf
popa
cli
sti
mov
mov
xor
outsl
scas
mov
in
fnsave
cmpsb
mov
ja
gs
rcrl
mov
addb
pushf
clc
lock
mov
data16
lea
mov
and
js
or
push
xor
jecxz
jecxz
sbb
or
or
arpl
data16
hlt
test
test
std
lret
lea
or
add
and
cmp
inc
mov
lods
or
and
sarb
push
out
mov
mov
mov
jg
sti
out
inc
loop
add
lea
fxch
mov
and
lea
int
leave
inc
insb
sbb
inc
push
js
push
push
sub
in
sub
in
icebp
xchg
dec
lea
in
adc
and
ds
scas
dec
cmpsb
cmp
dec
loop
cwtl
das
push
pop
sbb
dec
cmc
xchg
lock
jl
enter
ret
add
mov
popa
loop
out
dec
test
jecxz
mov
or
mov
mov
mov
xchg
inc
adc
lods
xchg
decl
dec
scas
iret
mov
add
or
fnstcw
rorl
sbb
in
std
fwait
jg
subl
xchg
cmpsl
sbb
in
out
push
insb
int3
dec
lcall
loope
dec
and
lods
arpl
xchg
call
rcrb
xchg
mov
push
inc
in
sub
int
mov
hlt
fwait
adc
in
out
pushf
sti
mov
adc
mov
and
and
mov
cmpl
mov
movsb
addb
adc
mov
outsb
dec
or
jmp
test
into
add
fwait
insb
xchg
call
mov
and
adc
pop
inc
aas
shll
push
int
andl
mov
and
fs
mov
push
data16
xlat
out
dec
test
in
cli
pop
loope
or
stc
mov
cmp
mov
or
xor
aam
xorl
sbb
ror
add
push
or
popf
mov
mov
xchg
fs
lahf
in
fs
int
cmp
jne
mov
iret
jp
push
cmc
stos
cld
sbb
lods
jp
mov
cmc
inc
adc
mov
frstor
dec
lea
sub
xchg
mov
jns
notl
cwtl
jl
repnz
test
flds
jl
mov
ss
lods
orl
jbe
in
subb
jns
jp
ljmp
das
rcrl
leave
popf
fidivs
test
sbb
lea
dec
shl
inc
lock
dec
jp
inc
adc
lea
mov
in
mov
push
insb
aaa
mov
filds
sbb
scas
orl
cwtl
jmp
adc
inc
jne
or
adc
into
inc
cmc
lret
and
xor
cmc
add
sbb
popf
mov
mov
jae
shr
sarb
aas
mov
in
int3
add
cmpsb
dec
mov
jp
fs
pop
or
rorl
push
pop
std
add
call
xor
push
idivb
or
in
pop
push
pop
or
stc
popa
es
cld
mov
inc
mov
cld
dec
push
scas
jmp
dec
push
adc
sbb
mov
jb
jo
arpl
gs
inc
in
push
cld
inc
or
mov
nop
adc
aad
dec
jmp
sar
in
fstl
mov
aad
xor
jmp
in
push
inc
inc
std
stos
outsb
adc
or
cld
sbb
mov
idiv
stos
and
in
dec
rolb
aad
insb
add
and
mov
pop
js
fisubs
inc
gs
or
add
and
repz
fimuls
jae
and
jne
mov
out
fwait
sbb
in
aad
sub
push
mov
cmpsl
fsubs
adc
or
sub
or
gs
lcall
lret
subl
push
or
in
aaa
jns
dec
loopne
xor
jno
in
add
in
dec
insl
leave
and
jns
mov
gs
in
xor
add
addl
mov
cld
aaa
cltd
mov
add
andb
mov
hlt
push
negb
loope
repz
dec
jno
aam
mov
mov
lret
push
pushf
pop
addl
xor
mov
loopne
or
cmp
fisubs
fnstcw
ss
inc
and
loopne
and
mov
sbb
je
mov
xor
pusha
pusha
std
cwtl
shrb
insl
cmp
adc
jge
shrl
push
sbb
mov
push
push
out
jb
mov
icebp
lock
inc
shrb
aad
jmp
filds
pop
dec
pop
or
adcl
mov
inc
and
idivb
mul
sub
or
fs
xchg
aam
mov
dec
mov
and
sarl
data16
push
or
xor
mov
jmp
sub
mov
dec
lods
xchg
and
or
into
out
lea
and
sbb
pop
mov
xchg
in
clc
dec
fdivrs
and
mov
aaa
loope
dec
jecxz
push
mov
push
pop
or
adc
test
mov
shrl
push
shl
lahf
dec
mov
add
add
mov
mov
xchg
into
daa
cli
jp
mov
sbb
jp
xchg
addb
ret
popa
aas
subl
aad
andl
popf
std
mov
std
inc
loope
outsb
icebp
jb
nop
cmc
cli
insb
stc
in
jle
adc
out
cmc
mov
sti
sti
or
clc
dec
sarb
mov
outsb
jge
shlb
jle
hlt
in
dec
lock
lahf
mov
cmp
cmpsb
inc
movsb
xchg
xor
xor
xchg
dec
popa
loop
scas
or
out
push
sbb
cli
ja
nop
rcl
aad
enter
lahf
insb
cli
mov
cmp
adc
xchg
sbb
repnz
mov
sbbb
ret
mov
repz
fcoml
test
mov
sub
rorb
cmp
adc
lret
mov
sub
or
mov
mov
lret
inc
les
sti
andb
lcall
xor
dec
push
or
sub
rcl
push
adc
fidivrs
call
dec
scas
pop
dec
xchg
cmc
in
mov
pusha
sub
pop
mov
gs
mov
dec
in
aaa
mov
in
dec
push
ret
add
cmc
mov
rorl
lret
jns
dec
mov
mov
aas
icebp
cvtpi2ps
fcomp
cmpsb
mov
js
cli
xchg
lods
fwait
clc
das
bound
inc
mov
aad
lret
mov
lret
mov
outsb
stc
mov
icebp
sahf
test
jo
dec
lods
rorl
sub
and
int3
mov
fmull
add
jne
aam
out
ret
mov
ss
fsts
inc
inc
jns
add
push
jae
jb
xchg
xchg
add
pop
in
mov
sarb
xor
call
pop
jl
xchg
jbe
pop
cwtl
pop
push
pop
loope
sbb
daa
mov
int3
hlt
loop
std
leave
adc
cld
jns
mov
mov
add
pop
lcall
xchg
mov
in
fs
adc
mov
add
and
lds
mov
sbb
in
jmp
push
aad
popa
gs
andb
jl
movsl
mov
movsb
rcr
push
cli
imul
testl
loop
ljmp
fs
nop
fstp
and
in
arpl
or
cli
fimull
push
stc
cmp
shl
loop
sub
cli
mov
push
inc
out
iret
sub
dec
dec
pop
xor
cmp
shl
cmp
repz
dec
lods
mov
lds
sbb
repnz
mov
push
std
rorb
sbb
nop
mov
dec
fcomp
cld
jne
push
xor
into
ficomps
mov
nop
idivl
int
cli
sbb
mov
pusha
adc
jmp
inc
mov
jmp
jae
dec
pop
jl
insl
dec
rclb
aad
or
shll
add
lcall
fsubr
ljmp
ret
outsb
inc
pushf
shl
stc
pop
dec
dec
es
pop
out
mov
mov
stc
add
shl
dec
jmp
jle
int
xchg
jmp
adc
jnp
push
and
rorl
addb
scas
stc
test
pop
popf
sahf
xchg
stos
xchg
lock
sub
fdivrl
mov
aam
mov
jge
adc
sub
pop
push
das
ljmp
std
mov
mov
aaa
out
decb
push
movsl
or
xchg
leave
jns
lret
mov
sub
sarb
cmp
in
clc
jmp
push
pop
les
cmpsb
sbb
subb
xchg
cmp
fidivrl
mov
and
pop
and
shlb
xlat
fnstenv
or
mov
loopne
sbb
add
sub
cs
or
in
and
sahf
dec
into
add
adc
leave
sub
testl
aad
pop
cmpsl
arpl
jge
mov
sahf
dec
int
mov
dec
arpl
pop
int3
ljmp
movsl
mov
imul
fisttpll
aad
loop
mov
add
repnz
push
out
cld
or
repz
push
or
fcomps
mov
int3
mov
push
mov
in
rol
loope
inc
add
add
dec
lahf
lret
das
sub
cmp
test
xchg
icebp
or
sbb
adc
and
or
in
jb
add
xchg
lret
sbb
jl
hlt
xor
cld
and
add
insl
call
in
sub
and
ret
cmpsb
data16
mov
in
inc
jae
rcll
subb
pop
mov
into
xor
and
mov
hlt
mov
leave
aam
push
out
or
mov
jne
int
jp
movsb
inc
pop
outsl
inc
inc
inc
sub
out
clc
fs
push
mov
push
sti
xor
sarb
pop
pop
insb
mov
xchg
pop
enter
pop
stc
fmull
or
xchg
xchg
jg
cmp
push
push
pop
sti
pop
dec
cmp
insb
in
push
add
mov
push
aas
bnd
add
jge
push
mov
stc
mov
jne
mov
stos
int
pop
daa
cmp
mov
in
mov
jae
mov
ja
xor
fldenv
push
mov
loopne
xchg
inc
imul
mov
xlat
jle
mov
jae
jecxz
sbb
scas
arpl
int
mov
jo
add
gs
xchg
mov
popf
loop
lds
mov
cmp
xor
rcr
cmp
gs
push
adc
sti
ljmp
pop
pop
shrl
cmp
and
push
iret
and
loopne
cmpsl
add
enter
bound
fwait
mov
mov
lcall
loope
push
dec
dec
sti
adc
fs
xchg
mov
push
mov
xchg
ret
stos
stc
movsl
in
fwait
dec
xchg
into
rcl
jns
incb
adc
iret
ret
push
jp
sbb
fdivs
mov
pop
adc
aaa
ljmp
fs
stos
mov
push
push
adc
push
mul
fmull
jmp
lea
test
call
ror
push
aam
jl
lock
enter
xchg
dec
in
mov
or
call
popl
loopne
dec
fmuls
adc
jno
sarb
mov
or
add
popa
popf
mov
andb
push
lods
mov
push
outsb
arpl
imul
jp
dec
stos
faddl
aam
fstpt
cmpsb
testb
sub
cli
xchg
sbb
shlb
enter
fists
insb
loop
push
jae
mov
mov
int
dec
mov
fs
mov
sub
sub
orb
xchg
lea
mov
fsubrl
mulb
std
push
adc
ja
sahf
rorb
mov
cltd
dec
iret
jno
and
decl
cltd
mov
add
data16
daa
and
data16
cmp
addr16
add
push
repnz
ja
outsb
or
lea
sarb
pop
xor
mov
cmp
push
xchg
pop
stc
mov
js
bound
stos
lea
testb
out
lods
je
out
les
jmp
int
pusha
cltd
pop
ret
subl
add
repnz
and
in
xchg
arpl
out
mov
and
push
gs
arpl
xlat
bswap
ja
sub
test
mov
sbb
mov
fiaddl
push
movsl
cmp
cmpsb
insl
pop
enter
sub
insb
inc
sub
mov
sub
pop
push
cmp
in
std
hlt
mov
mov
jnp
fs
cmc
popf
leave
mov
in
popf
stos
ja
fldl
inc
xor
aas
sbb
aas
stos
addl
adc
aam
std
xchg
dec
sbb
out
loop
fisttpl
mov
fldlg2
test
movsb
mov
adc
inc
mov
push
bound
cld
jb
or
fsts
arpl
std
or
lahf
jo
ds
rorl
adc
ja
lea
ds
out
mov
in
push
add
in
jmp
lds
add
mov
sbb
mov
mov
xchg
test
push
push
xchg
fisttpl
mov
fnstsw
roll
enter
ficompl
lret
rcll
rcr
jb
xchg
sub
int3
outsl
ja
in
pop
fs
aad
push
jmp
aas
scas
add
bound
push
outsb
or
pop
mov
mov
out
mov
dec
out
mov
imull
in
inc
cmp
imul
hlt
ret
and
jmp
movsl
je
pop
mov
arpl
cmp
es
ds
or
lock
xchg
int3
repz
and
into
mov
and
and
jo
ja
inc
sbb
mov
shll
mov
jle
cmp
rcrb
ffree
dec
push
inc
add
dec
int
xorb
into
clc
jmp
in
dec
push
cmp
subl
dec
jmp
jns
aad
stc
push
sbb
int3
mulb
data16
add
mov
mov
push
pop
cli
mov
mov
jp
push
and
cmp
fiaddl
dec
pop
movsl
enter
mov
mov
ret
icebp
clc
mov
cmpsb
ret
sahf
outsl
mov
gs
xor
mov
std
in
sarl
add
jae
stc
and
dec
cmp
jmp
sahf
in
sbb
mov
out
inc
stc
shl
in
out
sti
lock
sub
xor
les
sbb
rcrl
test
mov
lods
loopne
adc
mov
xchg
mov
or
fildl
test
fcmovnb
push
sub
dec
push
add
mov
push
mov
sbb
mov
imul
sbb
xchg
add
std
mov
insb
test
mov
aas
sti
cmp
scas
out
aas
stos
fwait
scas
out
jge
fidivrl
gs
shl
add
or
mov
repz
jecxz
icebp
or
pop
push
push
hlt
xor
jne
push
jno
scas
out
sar
adc
ja
dec
mov
or
mov
and
popa
xchg
idivb
sub
stc
loope,pn
lods
mov
in
adc
lods
roll
mov
mov
and
add
or
sarb
xchg
insl
lods
aad
xchg
loope
sub
sbb
xchg
push
cmc
repnz
movsb
sbb
push
rcrl
cmp
and
in
outsl
xorl
xchg
cmp
stos
mov
or
lahf
add
or
loope
jno
popf
push
push
cmp
ja
inc
daa
stc
push
mov
jecxz
scas
mov
mov
js
and
push
in
lahf
mov
jo
insl
popa
aad
pop
dec
mov
bound
dec
mov
push
xchg
pop
add
ja
mull
std
sub
mov
in
lock
std
loope
dec
call
cmp
int3
dec
or
outsb
outsb
cld
jno
outsb
fmul
lahf
jecxz
mov
add
adc
insb
push
cli
push
adc
mov
outsb
mov
mov
adc
int3
lahf
fidivl
cmpsb
mov
in
in
add
ret
add
add
push
leave
rolb
mov
fcomip
nop
fcom
dec
sbb
or
loopne
aam
lods
roll
lea
lret
mov
loope
lcall
cmp
iret
jecxz
and
and
lret
iret
stc
cmp
push
movsl
shr
dec
iret
scas
or
mov
pop
and
adc
es
jne
lods
iret
in
push
jmp
lods
jecxz
fs
mov
pop
sbb
lods
dec
ret
dec
or
and
adc
fimull
jmp
inc
jmp
add
xchg
sub
add
push
mov
out
xchg
dec
push
aas
mov
adc
dec
cwtl
cmp
xor
fistl
mov
inc
mov
aad
imul
fists
adc
cli
dec
fdivrl
jnp
in
in
aad
lods
push
out
xchg
orl
mov
scas
ret
dec
xchg
add
lods
cmc
or
into
mov
jb
lods
sar
in
lods
xchg
dec
pop
rcrb
repz
xor
sbbl
push
mov
rcrl
jbe
sub
dec
cltd
dec
jl
push
push
gs
xchg
pop
adc
jbe
in
sti
ljmp
loope
push
ja
and
push
aaa
imul
sub
dec
add
rorl
cmp
cli
push
fs
xlat
data16
or
popf
in
cld
in
stc
mov
jae
incl
add
mov
mov
outsb
icebp
jp
popf
mov
push
js
rcll
insl
dec
mov
cld
fsub
fnstsw
in
cli
mov
xchg
lods
out
mov
jnp
outsl
add
or
pop
fcmovnu
inc
bnd
movsl
jmp
fwait
or
in
and
or
and
xor
xchg
enter
addb
adc
adc
aad
fs
ds
add
ffree
loope
sbbb
jo
or
test
insb
scas
jo
xor
sub
sarl
fldt
mov
adc
add
jne
cmp
imul
jle
mov
and
mov
ficompl
sahf
xchg
ljmp
mov
push
cmpsl
mov
icebp
mov
mov
mov
sub
pushf
iret
imul
push
mov
dec
and
mov
jns
aas
push
inc
or
in
insb
xor
cmp
pop
sub
cmpsb
mov
in
inc
cmp
jmp
add
bound
xor
xchg
aaa
scas
mov
insl
push
lret
out
lock
mov
cmpsl
int3
inc
cmc
fs
imul
inc
cmp
mov
test
and
jge
cld
sub
les
decb
jg
dec
repnz
jae
inc
movsb
rcrl
inc
cltd
cmp
push
mov
dec
pop
das
clc
mov
loopne
lds
fmull
mov
and
scas
pusha
fwait
dec
in
xor
mov
fldt
roll
in
mov
iret
popa
mov
or
push
xor
stos
push
call
leave
dec
sub
mov
jmp
add
pop
sti
xchg
inc
js
rcl
and
sbb
jle
test
ljmp
or
ret
jae
xchg
movsb
cmp
mov
adc
xchg
lahf
repz
add
sub
pop
mov
aam
pop
xorl
mov
loope
sub
ret
mov
pop
or
ja
fsts
adc
lret
jle
les
mov
jb
fld
xchg
gs
mov
adc
add
std
lcall
lahf
push
enter
stc
stos
mov
jbe
dec
push
jno
jmp
std
mov
fcmovnbe
loope
outsl
ss
adc
movsb
mov
sbb
fstl
cwtl
mov
mov
push
cld
scas
aas
pop
pop
sub
movsl
ficoms
jo
shrl
adc
push
sbb
fidivrl
ds
or
in
mov
hlt
cli
stc
orb
xchg
scas
and
pop
outsw
jns
ret
in
inc
push
xor
lret
fsubrs
jmp
lret
mov
fstl
dec
cli
jg
cld
cmpsl
pop
movb
out
mov
jecxz
sarl
gs
fcmovnu
mov
cmpsb
repz
cwtl
call
icebp
and
jne
xchg
stos
mov
sbb
cmp
sbb
mov
push
call
in
pop
xchg
mov
dec
scas
pusha
cmpsl
dec
jecxz
fsubp
fldt
mov
push
rcl
xchg
jp
jl
push
ss
add
mov
into
iret
ja
lods
xorl
jle
dec
ja
push
ljmp
in
fcoml
mov
and
sti
pop
sbb
int
xor
mov
imul
sbb
pushf
mov
mov
roll
add
subl
hlt
jae
icebp
jmp
mov
mov
lret
dec
pop
or
popf
jmp
jo
cli
inc
xor
inc
flds
and
mov
jmp
inc
imul
xchg
inc
aaa
mov
cmp
out
repnz
add
rorl
cmpsl
inc
dec
or
loope
sub
fildl
jecxz
stc
filds
push
stos
nop
dec
sbb
xchg
pop
jae
sbb
dec
mov
mov
cmp
faddl
js
mov
xchg
jmp
cmp
ret
fwait
mov
cli
xchg
add
push
stc
adc
xorb
gs
aad
mov
lahf
in
addb
push
call
add
dec
add
in
adc
nop
cmp
out
les
test
xchg
cmc
ss
mov
push
xchg
cwtl
add
enter
imul
orb
sbb
ss
xchg
stos
push
pop
mov
dec
movsb
cld
sbb
jo
test
popl
rorl
sbb
jne
xchg
push
imul
or
sbb
movsb
jbe
loope
jae
mov
int
cld
sbb
jecxz
dec
les
mov
in
mov
push
lret
jns
shl
xchg
std
stos
lock
fildll
dec
std
cmc
xor
or
and
jg
fucomp
or
ret
andb
push
out
stc
mov
std
sub
adc
ret
fisubl
push
mov
pop
dec
xchg
xor
insb
dec
sub
or
inc
cld
pop
mov
pop
mov
in
fdivl
jmp
aam
rorl
xchg
into
sti
lahf
loope
add
pushf
outsb
xlat
sbb
sarb
insb
add
add
in
bnd
cmpsb
sbb
mov
xchg
test
popf
inc
dec
data16
shll
sub
test
jns
add
and
loope
rcll
mov
push
shl
fwait
and
lock
and
stc
or
lea
ljmp
gs
in
dec
stc
cmp
lret
cmpsl
cli
or
loop
jne
shll
mov
enter
xchg
add
imul
jmp
int
faddl
jge
push
popa
jae
and
cs
fdivr
xchg
out
stc
fs
stos
xchg
inc
jmp
dec
pop
push
jecxz
mov
sti
cmc
push
dec
lret
fwait
dec
xor
loopne
cwtl
out
pop
roll
xor
dec
lahf
in
mov
fwait
sub
jns
imul
lock
cltd
and
out
ud1
xchg
clc
aam
leave
lea
jnp
mov
push
jne
xor
fwait
loopne
xchg
pop
mov
aam
loopne
and
stc
cli
out
mov
nop
faddl
jmp
sbb
movsl
cltd
pop
scas
fcmove
aas
addr16
ss
sub
cs
cmpsb
xor
ss
daa
jne
icebp
cmpsl
push
and
frstor
aad
dec
sti
int3
jns
cmpl
fwait
and
cmp
push
push
push
jno
in
add
popf
sti
push
xor
pop
hlt
mov
sti
sbb
ret
sahf
xor
repnz
repnz
sbb
popf
scas
cmp
ficomps
push
ja
mov
call
add
ja
jo
mov
push
and
dec
and
mov
pop
test
je
lret
sbb
out
push
inc
jnp
mov
jbe
xchg
and
fldl
push
and
sarl
cmp
mov
fists
or
xor
sub
cmpsb
jg
fwait
aad
icebp
adc
in
fildl
stc
dec
inc
fisubl
jns
push
test
hlt
xor
mov
shr
pop
mov
call
imul
fistps
pop
and
mov
ret
lcall
inc
cld
dec
imul
jecxz
ds
push
notb
pop
movsb
fisubrs
pop
jns
rcll
hlt
test
and
xchg
mov
cmp
pop
fnstcw
fsubs
xchg
xor
int
lret
es
inc
inc
sbb
lock
daa
push
icebp
andl
xchg
shl
jae
dec
cmp
pop
pop
in
in
mov
cmp
push
arpl
mov
dec
cmp
and
stc
lock
mov
lret
jnp
mulb
or
mov
or
dec
rcrb
mov
mov
test
adc
cli
in
rorl
add
adc
aas
pop
adc
sub
sar
mov
xlat
pusha
mov
pop
push
mov
xchg
jmp
icebp
sbb
add
cli
lds
pusha
jne
jl
mov
mov
sbbb
in
jae
imul
sbb
adc
sti
mov
test
es
dec
jae
and
icebp
inc
addr16
inc
sbb
xchg
int
pop
mov
imul
mov
cmp
mov
xor
sbb
lret
cmp
fcmovnu
bound
pop
cld
add
push
or
xchg
aaa
mov
in
push
popa
daa
cmpb
ss
pop
hlt
adc
xor
nop
cs
or
jmp
add
fisubrs
lea
into
mov
push
mov
inc
inc
lock
jne
idiv
jae
mov
add
xchg
jo
and
std
and
adc
gs
jne
nop
sbb
mov
icebp
xor
movsb
xchg
push
xchg
lahf
pop
sarl
mov
mov
test
xchg
out
cs
cmp
and
clc
insb
mov
jns
or
and
xor
cmpsl
cld
sbbb
jbe
mov
sti
mov
xor
in
xchg
xchg
mov
pushl
dec
xchg
data16
loope
xchg
mov
inc
icebp
mov
movsb
adc
je
clc
mov
add
cs
pop
clc
xchg
pop
xchg
xorl
popf
insb
xor
sbb
xor
pop
out
and
xchg
xchg
cmp
jns
and
stc
jb
bound
mov
call
cmp
stos
shlb
cmpl
fcompl
lods
dec
mov
dec
cli
push
pushf
lea
sbb
in
jns
test
or
enter
jbe
inc
frstpm(287
addr16
jg
in
sbb
rcr
addr16
adc
push
sbb
mov
test
cmpsl
dec
mov
inc
xchg
test
cmpsb
and
mov
xchg
in
lea
adc
pushf
repnz
mov
addb
adc
in
hlt
sahf
aad
out
push
lds
test
test
popf
enter
xorl
icebp
or
jbe
sub
push
lods
rorb
test
jecxz
push
or
aam
pop
pushf
mov
imul
sbb
cltd
decl
xchg
shll
adc
mov
icebp
jmp
sti
mov
mov
add
aaa
incb
mov
jmp
push
jo
testl
or
cmp
cmp
jbe
nop
call
aaa
inc
adc
fistpll
nop
rol
lret
pop
into
xchg
int
sbb
ljmp
adc
inc
out
push
mov
cld
outsb
je
pushf
mov
movsb
cltd
icebp
push
jae
loopne
subl
hlt
xchg
add
jp
stos
cmc
scas
inc
or
sbb
jbe
aas
gs
dec
jnp
cmpsl
cld
push
mov
cmp
adc
mov
aad
or
outsl
dec
add
inc
sbb
jecxz
xchg
jo
jbe,pn
rclb
mul
mov
aaa
xchg
xor
fxam
push
daa
mov
sti
jo
les
push
push
mov
scas
push
int
and
jmp
ret
xchg
in
mov
aas
sti
pop
enter
daa
pop
sub
xor
ljmp
add
setp
adcb
and
pop
cmp
jb
fbld
sbbl
lods
pushf
mov
or
hlt
lcall
xor
int3
les
inc
call
icebp
push
jl
in
lea
mov
cli
call
jecxz
aad
and
divl
out
rorb
jo
add
or
cmpsl
mov
stc
xchg
fs
leave
movsl
aaa
mov
jmp
cld
js
jmp
add
pop
sbb
xchg
jnp
push
lods
pop
divb
fildll
stc
or
add
jp
cmp
push
rcrb
stos
pop
xchg
push
cmp
mov
sbb
mov
das
in
rcr
cmc
cmovle
lds
push
nop
loope
or
sub
shl
pop
cmpl
mov
orb
and
lea
fmul
xchg
mov
ret
orl
inc
in
add
icebp
test
movsl
movsl
rorb
dec
and
mov
imul
bound
popf
loop
int3
inc
insb
dec
pop
lret
and
or
int3
icebp
pop
loope
dec
rcll
mov
insb
ficoml
fsts
lret
popa
test
aam
xor
test
cmpsb
shlb
jge
das
pop
nop
sti
fnstsw
mov
lds
rorl
movsb
int
mov
movsb
mov
les
mov
sarl
pop
and
mov
xchg
jecxz
mov
adc
xchg
cli
xchg
cmc
pop
rcl
pop
add
ljmp
cmp
inc
cmpsl
mov
jmp
bnd
add
jmp
or
cmp
push
mov
cmp
lock
jecxz
lea
enter
imul
sbb
push
cmc
pushf
mov
arpl
repnz
and
jmp
fincstp
jmp
ja
mov
ss
mov
daa
dec
mov
stc
cmpsb
adc
les
in
xchg
push
scas
lcall
add
xchg
sub
outsl
fidivs
clc
xchg
sti
add
loop
in
sti
jne
xchg
push
mov
js
fisubs
fnstenv
or
lds
out
ret
in
mov
loope
fs
outsl
jns
lret
loopne
lcall
push
add
in
out
push
lods
cwtl
cmp
movsb
repz
xor
dec
jl
adc
roll
gs
add
mov
fimull
and
out
push
inc
loopne
test
dec
pop
adc
addb
push
cmc
mov
or
loopne
scas
repnz
gs
dec
clc
adc
cmpsl
mov
jp
mov
mov
jmp
ja
insl
xchg
jge
sbb
push
add
xchg
mov
pop
lds
in
or
and
or
push
or
add
fistpl
ljmp
cs
pop
shl
mov
add
pop
in
negb
nop
jo
push
jbe
or
mov
xchg
scas
sub
mov
andl
enter
add
pop
idivb
out
dec
mov
mov
xchg
mov
sbb
mov
mov
mov
popa
in
xchg
shrb
xchg
lahf
cmpsl
in
sbb
dec
test
out
cmpsb
push
mov
daa
mov
jb
dec
popf
fisttpll
or
aas
jp
std
or
and
test
adc
sbb
dec
pop
jp
mov
dec
clc
add
cmp
sbb
jmp
fcompl
loope
arpl
cmp
push
dec
mov
mov
subb
jno
xchg
mov
mov
mov
fistpl
mov
out
out
testb
mov
std
das
and
into
or
jmp
rol
xor
or
popf
mov
popa
or
xor
xor
popa
cmp
loope
clc
movsl
or
jbe
clc
loope
popa
jg
push
adc
std
movsb
fucomi
popf
xlat
jmp
mov
jo
sbbb
cwtl
sti
in
movsb
mulb
mov
jmp
or
divl
jecxz
or
iret
test
inc
mov
mov
xor
insl
pusha
fisubl
rcrb
xchg
sti
mov
adc
xor
push
pop
xor
push
mov
rcrb
push
cmp
jno
mov
dec
fildl
pop
andl
add
leave
dec
sub
dec
loop
shll
test
jnp
out
js
cmpsb
push
mov
dec
lds
mov
orl
fwait
lods
mov
dec
addb
xchg
mov
inc
mov
int
sub
cmc
jmp
movsl
jb
sbb
stc
cli
adc
pop
lret
into
mov
jno
fwait
and
sub
inc
jmp
int3
adc
jne
sbb
pop
xchg
loopne
push
xchg
inc
or
not
mov
mov
or
test
adc
cmp
decl
mov
popf
mov
push
sbb
xchg
cmp
call
mull
inc
cmpsl
push
push
popa
cwtl
xchg
cmp
sti
push
jnp
dec
dec
arpl
mov
dec
pop
add
sbb
hlt
addr16
mov
add
subb
mov
popf
lods
xchg
jns
add
movsl
icebp
or
mov
ret
shr
fisubs
imul
add
add
test
rorb
cmp
push
nop
mov
rorb
xor
lcall
test
pop
cmp
fnsave
mov
insl
sub
loope
cmpsb
sub
add
pushf
inc
jae
adc
adc
sbb
jb
mov
sub
mov
jge
mov
stc
clc
dec
jg
or
xchg
cmp
jne
mov
jmp
adc
lea
in
add
jmp
stc
jnp
mov
sub
lret
sbb
daa
xchg
jne
xor
xchg
in
jg
add
dec
lods
lcall
mov
mov
scas
fdivs
dec
gs
mov
out
mov
push
or
data16
xchg
mov
out
fwait
push
jge
inc
pop
jno
adc
jae
out
xchg
lea
or
mov
shl
scas
rol
xchg
or
mov
mov
ljmp
iret
mov
mov
mov
cmpsl
mov
jle
dec
insl
pop
pusha
sub
dec
push
cmpsl
int3
decb
popf
sti
cli
jge
jp
add
mov
stos
enter
mov
stos
jbe
fidivrl
or
fsubr
test
in
mov
xchg
rolb
xchg
sarb
sbb
mov
loop
leave
loope
stc
push
jb
loopne
dec
xchg
pop
shrb
cmpsl
in
mov
cli
cs
incb
jnp
xor
fistps
push
xchg
nop
enter
sbb
loop
mov
mov
es
sbb
lahf
lea
lret
fs
sub
push
fimuls
call
mov
fildll
or
into
mov
jmp
bound
xchg
je
mov
xchg
push
cli
jb
add
call
and
mov
lahf
jl
xchg
mov
dec
rorl
adc
std
push
cmpsb
loop
sbbl
push
mov
adc
adcl
sahf
pusha
int
xchg
or
mov
enter
rorl
subl
pop
lods
dec
in
adc
and
sub
outsb
adc
aad
inc
mov
testl
cmp
dec
ljmp
add
cmc
jne
jl
incb
add
pop
lea
lock
xchg
push
sbb
stos
xchg
lahf
rcll
push
add
pop
repz
dec
out
out
add
adc
pop
int3
add
aas
lcall
incl
in
arpl
das
push
cmpsl
stc
loope
in
cld
loopne
add
xor
mov
inc
lret
mov
dec
out
int3
nop
lahf
std
insl
inc
dec
into
mov
sbb
scas
sbb
andl
adc
sbb
add
test
sti
sbbl
push
shl
inc
lods
xorl
mov
jmp
addb
stos
into
ds
mov
lahf
xchg
mov
jecxz
mulb
jl
scas
xlat
jecxz
dec
jmp
inc
testl
and
sbb
inc
outsl
rcr
decl
int
std
scas
jb
in
or
lock
sub
dec
int
inc
cs
xchg
ss
mov
xchg
imul
xchg
or
sbb
scas
add
insl
mov
or
or
aas
sbb
sbb
adc
mov
or
xorl
push
cs
sbb
jle
mov
js
insl
fisubs
in
sub
insb
xchg
jge
inc
cmp
pop
mov
add
cltd
mulb
dec
cld
ret
jbe
pop
sub
dec
add
aam
lea
loop
mov
mov
sahf
in
jg
and
lret
inc
das
or
int
fnstsw
in
insl
filds
dec
mov
dec
xchg
cld
xchg
add
jne
js
add
ja
js
adc
mov
arpl
ja
rcll
in
in
xchg
or
hlt
lea
or
mov
fidivl
movsl
pushf
std
add
xchg
fs
fdivl
in
dec
or
nop
icebp
pop
push
lods
jmp
outsb
lret
leave
sbb
mov
stos
sarb
in
xor
fidivrs
test
scas
lods
sti
xchg
fs
xchg
dec
inc
fs
repz
jl
fildl
sti
jns
clc
into
cmp
xor
xor
push
adc
popf
les
and
mov
push
test
push
add
xlat
push
repnz
pop
add
cmp
mov
or
cmp
and
mov
arpl
jecxz
jl
jbe
xchg
popf
aas
out
sub
inc
out
pop
loope
mov
outsl
sbb
mov
and
or
cmp
shll
int3
jmp
xchg
out
popa
jg
xchg
dec
mov
or
pop
testb
xchg
mov
jnp
ja
shll
push
dec
leave
hlt
or
push
out
stc
cltd
shrl
mov
lods
cmpsl
movsl
add
repz
stos
stos
cmp
fsubs
std
enter
outsb
out
les
hlt
repz
mov
push
add
ret
mov
faddp
jno
mov
lea
outsb
jo
and
sbb
xor
mov
sub
mov
fwait
test
lods
test
jae
dec
jns,pt
into
jo
add
mov
push
mov
add
scas
mulb
into
fcomi
popf
jnp
test
mov
push
aas
imul
cmp
repz
lods
or
cltd
in
int3
das
loope
sti
repnz
mov
jp
in
mov
or
out
and
rclb
frstor
mov
sbb
jmp
sub
mov
adc
std
test
das
cmp
ss
push
outsl
mov
ror
icebp
int
test
mov
mov
in
fwait
lods
jecxz
jb
jnp
mov
jnp
mov
loope
stc
push
mov
adcb
mov
push
sub
pop
add
je
call
testb
sahf
sti
dec
mov
or
bound
xchg
push
fldenv
popf
ja
jecxz
inc
je
lcall
iret
dec
push
imul
scas
xchg
mov
jl
mov
imul
das
int
ret
push
adc
fneni(8087
popf
out
lea
mov
sub
fs
lret
nop
cld
orl
add
es
popf
adc
sub
push
sub
lea
fwait
jecxz
push
pop
sbb
adc
jae
inc
push
pop
mov
ret
cmp
in
xchg
jl
nop
sub
jmp
rorl
loopne
cld
mov
mov
popf
lock
out
sbb
xchg
mov
or
mov
push
jb
jecxz
jo
arpl
arpl
hlt
jae
lds
in
sar
int
fidivs
mov
orb
sbb
in
mov
rorl
ret
roll
mov
test
scas
and
jl
imul
hlt
and
inc
sarb
idiv
addr16
adc
jbe
jne
sbb
lahf
push
push
out
add
push
jecxz,pt
bound
mov
rcrl
addl
hlt
cmp
std
add
or
fyl2xp1
popl
or
push
rolb
rcrb
mov
les
mov
cwtl
lret
insl
mov
push
fs
pmulhuw
lods
scas
push
push
jl
add
and
icebp
in
add
xchg
mov
cld
mov
test
push
sahf
stc
xlat
stc
xchg
in
lret
ja
aam
les
das
mov
jno
rcrl
in
push
add
aaa
push
mov
imul
dec
fnstcw
mov
cmc
call
push
xor
push
and
mov
rol
push
mov
lds
push
cli
lret
loope
adc
pop
add
xor
pop
shlb
sti
mov
push
fnstsw
adc
out
sbb
mov
in
push
push
xor
aaa
imul
lahf
aad
pop
aas
xchg
inc
fmulp
addl
mov
mov
mov
cmpsb
repz
daa
jo
adc
aas
stos
iret
and
add
mov
cwtl
fnstenv
pop
std
fs
add
cld
jmp
sbb
icebp
cmp
pop
dec
or
jo
xchg
add
in
int3
out
or
jp
lret
and
ficoms
call
pop
into
jno
pop
inc
or
sarb
pop
and
sbb
mov
into
std
std
cmpsb
sbb
cli
jmp
pop
test
sbb
insl
arpl
xchg
inc
push
push
cwtl
xchg
loope
ss
sbb
mov
jecxz
jmp
in
mov
js
loop
adc
mov
add
add
cmp
test
in
and
mov
icebp
xchg
aas
repnz
clc
cwtl
rorb
aad
adc
insl
mov
int
xor
push
push
ja
or
or
daa
add
mov
testb
xchg
popf
xorl
andl
jnp
or
mov
data16
arpl
hlt
je
out
jecxz
and
add
sub
mov
push
outsl
cltd
pop
pusha
cmc
push
test
std
dec
cld
jl
pop
mov
lds
enter
mov
jmp
mov
mov
push
cs
int3
jne
dec
mov
movb
jns
and
mov
dec
loop
dec
pop
stc
or
mov
ret
mov
mov
cli
aaa
mov
push
add
pmaddwd
jns
cmp
xchg
dec
xchg
fs
pop
push
mov
ret
mov
jns
inc
mov
mov
in
add
mov
jmp
mov
insl
ret
push
aaa
andl
cmova
repnz
sar
roll
fs
pop
iret
out
shlb
cmp
iret
sbb
sbb
ret
push
std
rorl
mov
and
pop
shl
push
es
xchg
jnp
cmpsb
das
add
jae
pop
adc
dec
int
pop
inc
int
fcos
add
jnp
adc
jo
lea
mov
cmp
ret
incb
pop
scas
in
lcall
js
dec
data16
ds
and
xor
cld
sbb
lock
call
push
sti
ret
mov
jp
mov
dec
cmc
dec
in
sub
sub
repnz
and
jecxz
xchg
lock
inc
xchg
dec
and
pushf
enter
sub
lds
dec
data16
dec
cmp
sti
add
mov
lods
sti
adc
cmp
enter
notl
fimull
jne
test
lret
outsl
sbb
mov
call
or
sbb
jmp
cmpsl
scas
mov
jno
fimull
push
lods
lds
jecxz
push
or
ja
mov
shr
lds
jmp
pusha
not
mov
xor
icebp
jmp
outsl
dec
dec
jno
xchg
ficoms
icebp
add
jmp
out
popf
sub
pushf
push
jl
fbld
cmp
mov
or
fs
inc
cld
add
shll
shll
adc
stos
dec
in
jns
push
sub
pop
xor
stos
roll
jl
inc
in
lds
lea
pushf
in
aad
les
dec
pop
rorb
lock
repz
jbe
loopne
cli
ds
mov
jl
sarb
jb
sbb
adc
mov
mov
xchg
push
mov
xchg
jno
sbb
jmp
cmp
mov
xlat
inc
cmp
xchg
mov
sub
adc
mov
sbb
fldenv
push
fcomps
sub
popa
out
jne
mov
je
cld
dec
cmp
icebp
cmpsl
and
mov
insb
push
ss
pop
inc
jle
in
test
xchg
push
mov
jb
dec
mov
inc
mov
jnp
mov
int3
iret
add
shlb
movsl
cli
shlb
sub
inc
mov
xchg
fwait
out
popf
dec
sbb
mov
mov
mov
cmp
mov
cmp
push
sub
push
sbb
scas
sar
mov
and
int3
subl
lds
pop
jmp
pop
sbb
xchg
popa
mov
or
in
jbe
cld
stos
mov
popa
outsb
popa
aad
xor
mov
xor
add
in
jb
into
mov
nop
mov
ret
cmc
leave
imul
dec
lret
outsb
hlt
sti
push
je
xchg
jae
sub
out
adcb
or
mov
pop
inc
inc
mov
rcl
mov
lret
mov
add
pop
shlb
jae
int
lods
ljmp
jb
out
popf
mov
jge
std
aas
outsb
push
inc
jle
mov
inc
cld
xor
dec
pusha
icebp
jb
popf
jmp
xchg
js
cmc
or
out
aad
jecxz
xor
mov
or
jno
mov
inc
mulb
pop
mov
xchg
popa
outsb
gs
pop
add
insl
in
fisttpl
xchg
aas
mov
fistps
jnp
sti
ret
in
xor
mov
cmpb
movsl
leave
mov
jmp
pop
insl
insl
loop
jns
adc
mov
fsubl
cmp
fsts
std
pop
xorb
jo
sub
insl
in
lret
orb
int3
mov
mov
popa
roll
les
inc
movl
add
xor
xor
fs
xchg
jle
or
mov
mov
aam
cmpsl
cmc
popa
out
sbb
lock
loop
pushf
call
js
ret
inc
cmc
dec
stos
cmc
add
or
fidivrs
les
repz
sbb
dec
int3
add
int
mov
sub
pop
fimull
sub
and
idivl
leave
xor
decb
roll
add
jno
mov
loop
xchg
repnz
rcr
mov
mov
gs
test
or
mov
rcrb
mov
push
movsb
mov
inc
jge
loop
ss
mov
pop
rclb
loope
inc
out
rcl
test
mov
fs
dec
push
fnsave
aas
sarl
or
cltd
add
gs
xchg
push
cmp
loope
mov
cmc
and
ja
push
gs
rol
fs
jmp
into
imul
jo
xchg
lock
pop
jne
and
inc
test
add
leave
mov
cs
push
leave
jbe
inc
mov
lods
push
mov
push
mov
and
pop
jo
fwait
jns
jb
das
orb
xor
mov
and
loopne
add
stc
je
in
jmp
cmc
mov
jecxz
lea
insl
cwtl
in
add
loopne
cmp
jecxz
stc
fnstsw
in
inc
packssdw
push
pop
mov
dec
adc
pop
clc
add
fstpt
loope
pusha
jnp
or
jle
sbb
sub
in
fidivrl
adc
stos
popf
loopne
cmp
mov
and
stos
inc
ficomps
mov
jge
cli
js
push
xlat
add
sbb
daa
out
sarb
sub
lods
mov
fs
xchg
jne
push
stc
push
dec
lods
mov
lcall
hlt
ss
sub
aam
or
mov
xchg
sbb
cmp
into
jo
ja
push
push
arpl
adc
jmp
repz
fisubl
fidivrl
inc
mov
loop
pop
adc
popf
stc
jno
outsl
jbe
ja
std
add
add
shll
adc
in
ret
subb
dec
dec
mov
popa
push
lret
inc
ret
dec
pushf
dec
push
lret
rorb
jecxz
mov
mov
std
cmpsl
sbbb
dec
adc
add
cwtl
pop
data16
rol
fwait
insl
cmp
fs
loope
inc
in
into
inc
stc
and
lcall
das
and
mov
loope
jno
xchg
xchg
cld
push
leave
jne
mov
in
repz
add
insb
stos
mov
mov
xchg
shll
sbb
xchg
popa
fisttpll
cmp
icebp
cmp
add
icebp
lret
add
sahf
mov
fnstenv
push
sarl
push
adc
fdivr
and
fidivrl
in
or
repnz
add
jb
pop
iret
xlat
cli
xor
std
mov
pushf
fwait
pushf
pusha
and
sub
imul
clc
push
dec
stos
lods
sbb
sysexit
dec
icebp
repz
loop
add
lds
sub
or
adc
stc
or
pop
xchg
int3
add
arpl
int
fucomi
imul
xchg
rep
push
xlat
adc
aam
or
jmp
jmp
sarl
ss
jae
std
or
stos
cmpsb
sub
pop
mov
pop
loope
cmpsb
push
out
test
jge
test
sub
mov
jmp
shl
push
mov
popf
fs
orb
push
aad
gs
jb
in
es
dec
add
sbb
jmp
shl
in
shll
aad
mov
ja
push
add
loope
push
xor
dec
mov
cmp
mov
pop
int
add
hlt
push
jmp
scas
fidivrs
mov
movsl
movsl
adc
push
hlt
xchg
push
push
or
in
jle
out
lahf
hlt
jge
aam
popf
out
popa
stc
add
add
or
and
jmp
fnstsw
in
cli
sub
adc
popf
movb
lock
jl
cmpsb
hlt
sbbl
int
jmp
rolb
sbb
test
loope
cld
jmp
in
mov
loope
loope,pn
sub
adc
xchg
dec
sub
xlat
sti
fwait
in
int
loop
loope
popa
or
cld
insb
faddl
lods
adcl
lods
fcmovb
push
cmc
cmp
repz
sar
mov
loope
add
fs
loopne
mov
mov
jns
jmp
aas
test
hlt
xlat
cmpl
dec
jmp
hlt
xchg
push
in
xchg
imul
les
or
xor
mov
pop
cmp
mov
inc
cmp
mov
sbb
enter
mov
cmpsb
shrl
popf
inc
pop
cld
in
jno
dec
aas
loopne
xchg
out
xor
jo
xchg
mov
lds
ret
and
mov
lret
mov
xchg
pop
addr16
add
imul
jl
mov
cld
cltd
out
dec
jns
popa
leave
arpl
cld
shlb
in
test
cmp
xchg
push
add
cld
lods
std
lock
and
dec
sub
adc
enter
mov
xchg
or
fdivrl
xor
xor
xchg
in
mov
movsb
lcall
push
jmp
push
cli
pop
xor
sbb
mov
call
or
cmc
cmp
sub
std
insl
mov
dec
roll
call
stc
jb
xchg
or
mov
mov
stos
mov
jmp
xchg
mov
fs
dec
add
repz
repz
fidivrs
sub
jg
stc
push
test
mov
ret
enter
les
push
push
dec
mov
lahf
pop
imul
sub
mov
dec
inc
push
data16
jns
mov
in
or
inc
jmp
into
daa
loope
ljmp
cli
pop
fwait
xchg
mov
in
ret
dec
xchg
add
aas
orb
pop
jl
jge
cmp
pop
or
xchg
jnp
or
lea
mov
lods
adc
mov
xchg
push
lret
loopne
shl
ljmp
jmp
and
aas
jae
sarb
xchg
out
addb
arpl
or
push
ja
jmp
dec
xchg
jmp
add
enter
adc
inc
and
sarl
push
sbb
cmp
fld
adc
sbb
movsb
mov
sarb
add
xchg
sub
lea
xchg
mov
inc
push
lret
repnz
mov
mov
mov
fildl
pop
lret
in
jp
pop
test
std
xchg
xchg
dec
pushf
int
stc
jns
icebp
loop
outsl
cmp
cmp
sbb
outsb
test
push
jnp
out
add
daa
repnz
pop
aas
gs
cmp
push
sbb
sub
lock
daa
xor
mov
mov
fwait
lock
fistpll
inc
call
pop
push
lea
insl
sti
ja
sbb
mov
out
stos
es
in
pop
into
adc
outsl
mov
xor
or
jmp
lock
xchg
imul
mulb
push
cmp
mov
mov
pop
loop
inc
in
jne
sbb
sbb
mov
ret
aas
cmp
call
and
fs
call
xor
outsb
add
aad
rcll
clc
push
fstpl
sbb
xor
imul
jmp
inc
mov
popf
cmpsl
pop
cmp
bswap
mov
xchg
add
adc
jne
in
add
cli
lea
add
mov
add
leave
incb
add
stc
xchg
in
sbb
cmpsl
int3
sbb
testb
dec
mov
rorl
insl
shlb
pop
mov
xchg
in
outsb
loope
addb
dec
int3
pusha
fsubrs
lea
mov
dec
cmp
ds
in
imul
mov
int3
je
insl
jmp
arpl
mov
xor
or
int
jle
lcall
sti
cld
ret
lret
and
jmp
sbb
inc
cld
arpl
xchg
sbb
mov
sbb
cmpsb
mov
arpl
out
lods
dec
ja
jno
or
xor
loopne
mov
or
fs
cmc
dec
in
mov
add
enter
jnp
cmpsl
or
divl
push
sbb
outsl
insb
mov
mov
push
pop
fnsave
stos
decb
lret
mov
inc
mov
jo
or
roll
fcmovu
loop
stc
mov
xlat
inc
dec
cld
cwtl
lret
and
push
cmp
daa
mov
cwtl
mov
pop
popa
das
or
mov
push
jmp
popf
pop
cmp
push
and
or
mov
fnstenv
loop
pop
in
pusha
in
pop
sti
mov
fbld
jg
jnp
in
push
pop
pop
jo
dec
fsts
xchg
jl
data16
sub
mov
lret
call
or
cli
xor
pop
outsl
imull
fcmovnbe
lods
mov
mov
jns
loopne
scas
cmpsl
and
cli
outsb
les
addb
pop
jl
in
xchg
cmp
pop
test
and
mov
mov
xchg
push
adc
cmp
xor
cmp
loop
sub
fsub
ja
jg
cmp
loopne
dec
mov
aam
pusha
mov
icebp
call
movsl
outsl
cli
cmpsb
sbb
xor
sti
mov
jbe
jo
lret
and
js
sbb
jge
insb
insl
sbb
jo
ja
insb
in
xchg
push
fidivs
lock
adc
stc
imul
add
mov
mov
std
jnp
inc
jl
notl
inc
lods
fs
adc
das
adc
insl
icebp
cmp
enter
jg
int
jmp
mov
and
xlat
cmp
cmp
rol
shlb
dec
or
or
mov
push
insb
dec
push
sbb
sbb
fninit
ljmp
mov
enter
into
lds
and
sub
nop
or
stos
sub
cmp
decl
scas
decl
nop
pop
inc
sbb
cmp
pop
inc
iret
lret
in
mov
mov
mov
push
jle
aam
sti
push
in
or
call
call
stos
adc
imul
cwtl
dec
rorl
pop
mov
lret
stc
inc
dec
lea
jmp
mov
test
jl
out
sahf
or
dec
cli
cmpb
lods
and
fisttps
mov
orl
scas
pop
loopne
cld
mov
pop
in
dec
pop
jg
fstps
daa
mov
pop
popa
mov
pop
pop
test
imul
bound
adc
push
sbb
sbb
sbbl
mov
aad
jge
fsubl
loopne
push
nop
sbb
adc
outsb
and
es
jl
insb
inc
loope
pop
stc
cmp
out
pop
rcrl
xor
data16
jnp
icebp
das
jecxz
jne
outsl
call
out
in
fcoms
jge
cmp
in
mov
mov
or
in
or
xchg
or
icebp
in
dec
fldpi
add
stos
out
mov
in
jg
arpl
test
push
and
sub
in
xorb
adc
sub
jns
sub
iret
sub
sbb
mov
mov
loopne
push
loopne
add
cmovo
pushf
pop
sbb
inc
adc
dec
dec
mov
inc
mov
or
fistpl
pop
rolb
mov
or
loop
push
dec
es
mov
subl
pop
xchg
jmp
cld
jg
ljmp
mov
jns
jnp
enter
jmp
mov
dec
pop
jecxz
jmp
mov
mov
pop
ret
lahf
mov
mov
cmc
xor
mov
inc
xor
stos
pop
mov
scas
pmuludq
and
fldl
fistpll
inc
mov
xchg
sti
ja
xor
pusha
mov
dec
sub
xchg
jo
aad
mov
add
mov
enter
std
stos
js
xchg
hlt
inc
adc
mov
xchg
mov
jb
add
rcl
push
ficoms
mov
cmpsb
xchg
fs
jge
ja
cmp
mov
mov
jl
into
lods
fdivrs
sub
cli
adc
push
movsb
push
imul
pushf
mov
jnp
iret
mov
popa
enter
rcll
fcmovnbe
jecxz
dec
dec
scas
mov
roll
incl
mov
loope
push
mov
imul
shrl
gs
mov
popa
mov
cmp
stc
and
inc
sbb
test
imul
shlb
outsl
mov
cmp
aaa
jecxz
ja
popa
xlat
in
fcomps
ljmp
jns
test
outsl
in
movsb
mov
xchg
mov
shrl
sbb
out
add
inc
ss
insl
mov
xor
adc
push
loop
cmpsl
sub
subl
and
filds
sbb
and
add
or
bound
iret
mov
mov
test
enter
mov
xchg
dec
push
ja
cmp
cmc
imulb
sub
clc
xor
adc
pop
jne
mov
jl
add
mov
loope
imul
inc
ret
sub
and
testl
lds
sbb
fcomi
sarb
add
lods
aam
movsl
in
pop
push
roll
ficoms
mov
pop
dec
loope
leave
loopne
fisttps
iret
and
ja
pop
ror
mull
lock
xchg
push
out
push
sti
jp
fcomi
dec
xor
mov
scas
imul
sti
pop
sbb
jp
aas
test
adc
fdivr
jl
xchg
movsb
xchg
ds
loopne
jo
insl
aam
imul
lds
imul
stos
aad
pushl
push
xor
testb
cld
xor
dec
xor
jns
in
or
dec
loopne
sar
mov
sti
add
jnp
jecxz
add
and
lret
or
movsb
js
mov
loope
jns
push
pop
jl
repnz
in
fwait
mov
jmp
add
stos
arpl
inc
in
sti
aam
mov
sbb
cmp
in
xor
fcmove
cld
sbb
test
mov
mov
rclb
mov
imul
sti
in
sbb
lahf
in
stc
movsl
mov
mov
jle
adc
jmp
push
pop
popl
lock
loop
insb
loope
xchg
lea
data16
mov
jno
or
repz
gs
dec
stos
xchg
stos
pushf
push
js
je
sbb
mov
fcmovnb
div
lds
lea
cmp
cmp
pop
cli
and
nop
sarl
dec
aam
int3
xchg
fs
sti
sti
sbb
pop
jg
sbb
scas
in
fildl
ljmp
push
cmp
push
jge
adcb
jmp
mov
jle
rclb
pop
jl
int
push
hlt
loopne
pop
xchg
punpckhdq
push
xchg
mov
aaa
or
ss
ljmp
cmp
adc
and
call
and
push
xchg
fisttpll
mov
mov
xchg
and
lcall
cli
xor
lock
lret
mov
subl
inc
fbld
cmc
xchg
mov
cmp
insl
push
mov
addr16
lea
pop
lea
shl
fnsave
sbb
ret
repz
outsl
sbb
adc
jno
mov
mov
cmpsb
cmp
jnp
dec
in
imul
mov
rorb
inc
cltd
and
mov
popf
xor
and
cmp
sbb
mov
andnps
imul
rol
sbb
dec
shlb
loop
xor
pop
push
sub
cmp
scas
shlb
stos
jns
pop
movhps
in
faddp
rcrl
fsub
xchg
mov
hlt
scas
aam
cmp
fmull
int3
punpcklwd
mov
mov
add
or
mov
out
mov
sub
cmpsl
sti
mov
test
insl
lods
lret
and
ror
stos
lock
popf
fsubl
lods
das
xchg
loope
loop
adc
pop
and
xor
fbld
out
and
or
popf
jmp
arpl
jmp
adc
popf
or
loop
mov
xor
stos
data16
xor
xor
pmulhw
hlt
dec
sarb
and
loop
jb
cmpsl
and
inc
fmuls
pop
pop
outsl
clc
jnp
stc
jb
nop
mov
xor
mov
ja
mov
subb
cld
out
mov
mov
sub
std
in
mov
and
iret
js
mov
add
cmp
mov
insl
fstpt
fdivl
mov
addr16
stos
xchg
mov
cld
sub
mov
loopne
jl
push
nop
lahf
in
std
dec
and
mov
mov
les
iret
cld
mov
dec
xchg
gs
loope
stos
stc
cmp
fdivrl
mov
cmp
mov
lea
push
mov
cli
push
pop
cmc
mov
lea
or
and
sub
pop
jle
fdivl
in
jmp
mov
lahf
mov
push
pop
ret
xchg
cmpsb
push
xchg
in
test
jg
stos
push
xor
add
movsl
or
sub
adc
movsb
adc
sbb
outsb
imul
popf
mov
mov
add
cmp
and
jge
sti
inc
jo
sub
jge
push
mov
mov
pop
shufps
sbb
cwtl
sub
fnstsw
popa
addr16
pop
mov
sbb
jae
or
jmp
push
insb
fstl
sti
cmp
stc
imul
es
mov
xchg
jo
jge,pn
push
in
push
ror
jg
dec
loop
dec
cmpsb
dec
into
hlt
xchg
loope
xlat
push
movsl
mov
rorl
jmp
addl
sub
aas
mov
lock
loopne
lods
xorl
std
add
inc
les
adc
dec
addr16
mov
push
out
mov
pushf
mov
xchg
xchg
jmp
mov
lds
mov
adc
lods
xchg
and
fisubl
sub
jnp
sub
jbe
aam
shl
shrl
fistpl
add
out
pop
add
sub
sbb
xor
es
mov
or
int3
scas
aad
pop
fsubl
push
mov
jmp
mov
mov
lea
cmp
pushl
jl
inc
fs
adc
das
fdivl
or
push
ljmp
imul
xchg
sub
mov
loope
aaa
movsb
out
pop
std
jl
ret
in
loope
xchg
fwait
pop
pusha
outsb
fscale
and
stos
fs
mov
test
and
sub
imul
jecxz
dec
push
rorl
sub
ret
jmp
pop
or
xor
xchg
cmp
aam
out
pop
je
cli
fnstenv
insl
cli
xchg
pop
movsl
xchg
arpl
mov
inc
std
lods
in
call
out
push
iret
mov
ret
mov
sti
data16
sar
cmp
repnz
mov
es
mov
lods
ja
fsin
insl
out
lods
cmc
ret
repz
adc
add
mov
and
hlt
and
pushf
sub
mov
sarb
fdivrs
lea
sbbb
shrb
push
popf
ficomps
mov
mov
je
push
into
jbe
lods
je
or
out
lds
or
adc
decb
mov
imul
mov
clc
scas
call
mov
movsl
jmp
or
adcl
in
xorl
xchg
clc
inc
movsb
loopne
jne
mov
xchg
stos
arpl
stc
cmc
jecxz
repz
loope
pop
mov
fs
mov
mov
jns
movsb
jl
popa
lock
popf
pop
ss
push
push
nop
loope
call
cwtl
add
fs
imull
mov
iret
xchg
nop
inc
outsl
mov
arpl
outsl
lcall
and
addr16
inc
paddw
pop
cmp
outsl
xor
loop
in
ljmp
in
push
mov
and
imul
pop
out
ljmp
arpl
mov
mov
scas
roll
aad
mov
out
sub
xchg
xchg
decl
aam
aad
lcall
mov
clc
popa
mov
xor
lods
sbb
test
test
sti
add
rolb
dec
push
aam
sbb
jb
sbb
lds
outsl
cmpsb
lahf
jecxz
loope
push
repz
xor
xchg
cmp
inc
cwtl
sbb
sub
rorl
jmp
shlb
cmc
and
or
bound
and
mov
and
popf
fisttpl
jnp
test
mov
push
mov
and
fs
sbb
imul
mov
sbb
loope
push
addl
stc
in
jmp
in
push
xchg
push
fcmovb
mov
pushl
dec
adc
push
movsb
cmp
jge
sub
loope
pop
push
stos
push
push
pop
out
cmp
in
add
les
popf
fsubr
fdivr
cmpsl
sti
insb
pop
rcr
outsl
movq
add
xchg
mov
call
mov
mov
sub
sti
or
fninit
repz
jp,pn
pop
cli
sub
inc
inc
cmp
arpl
mov
outsl
sub
int3
nop
ljmp
sbb
push
push
outsl
test
ss
dec
shrb
mov
stos
popa
jo
xchg
mov
mov
dec
shll
std
push
mov
pop
sbb
cmpsb
lea
push
pushf
sub
lea
pusha
xchg
fsts
mov
ja
movsb
lahf
test
rorb
jle
cmp
pop
adcl
adc
sub
sbb
dec
nop
popa
movsb
mov
ss
clts
insb
hlt
enter
gs
cmp
jl
mov
fbld
mov
fisttpl
pop
push
pop
push
add
mov
fisttpll
das
repz
int
jns
sarw
ret
les
popa
jo
dec
in
test
dec
popa
mov
xchg
in
pop
les
lods
xchg
arpl
fnstcw
push
idivl
pushf
jle
xor
cwtl
dec
pop
sub
fwait
xchg
call
mov
mov
test
out
sbb
jb
cmp
xor
sar
pop
gs
push
js
loope
out
and
mov
push
xchg
mov
popf
repnz
jg
packuswb
jg
cmp
mov
cmpsl
int
imul
cmp
inc
sti
mov
cwtl
xlat
mov
adc
shrl
mov
loope
mov
mov
dec
inc
lret
fwait
pushf
cmp
in
ss
push
dec
push
movl
lret
iret
test
stos
int
fisttpl
aam
jb
cmp
mov
mov
inc
sub
add
xchg
rorb
pop
push
rorb
pop
bound
sti
push
cs
add
push
in
rolb
jns
inc
or
jmp
shrl
je
jle
shr
pop
sub
aad
sbb
std
lea
dec
pop
ja
fcoms
add
rcr
sbb
push
adc
out
mov
mov
push
sub
sub
mov
mov
stc
sbb
pop
dec
jo
lahf
das
daa
in
mov
mov
mov
out
in
out
pop
ljmp
adc
sbb
mov
std
fs
test
pop
cmp
mov
jl
int3
cmpsb
push
lahf
fidivrs
sbb
fildll
fsubrl
rcr
cwtl
pusha
push
adc
ljmp
cwtl
popa
inc
and
out
cmpsb
fistps
out
pop
int
push
jp
iret
push
pusha
lock
fldt
add
ret
stos
mov
lret
aas
adc
pop
push
lock
cld
das
add
jg
mov
pop
orb
push
fs
add
inc
loope
jp
cs
mov
pop
pop
xchg
sub
xchg
mov
xchg
in
or
andl
int3
or
sub
cwtl
rclb
add
dec
jmp
push
out
data16
fs
dec
divl
hlt
test
call
cmp
push
sub
repnz
pop
xor
push
and
xchg
js
jge
rorb
stc
andb
mov
mov
arpl
sub
mov
jmp
lret
call
jae
cmpsl
jne
divb
xlat
or
divb
push
js
and
movsb
cmpsb
jb
jl
xor
cmp
cmp
fnstenv
repnz
sub
fldcw
and
sahf
lods
ljmp
push
ss
jne
xchg
inc
int
dec
pop
in
dec
lret
xchg
push
shl
push
mov
cmc
xor
int
repnz
shll
lret
push
push
leave
lods
and
lahf
sbb
enter
jno
jbe
in
mov
lds
or
daa
xchg
sbb
in
data16
cmp
loopne
orb
out
frstor
pushl
push
fidivrs
in
sub
xor
or
mov
into
arpl
adc
sbb
add
rcll
xchg
xchg
stc
clc
mov
popf
jae
inc
hlt
inc
push
mov
push
rcll
sub
cmp
jmp
xor
lcall
mov
nop
sti
add
outsl
fidivrl
adc
mov
dec
mov
sbb
push
dec
dec
ja
clc
aam
ret
mov
sbb
xchg
pop
mov
popf
jno
push
xchg
andb
mov
sbb
enter
in
fidivrs
and
rcr
fdivrl
sti
mov
add
sbb
imulb
cld
pushw
mov
inc
data16
dec
sbb
imulb
add
mov
inc
in
out
mov
std
std
jno
stos
add
sti
loope
pop
push
fdivrl
mov
push
cld
cld
adc
les
xor
js
loope
popa
jne
les
int
mov
and
enter
push
gs
xchg
xor
aas
arpl
andl
fstl
lret
fsubp
jae
push
sbb
repnz
sub
mov
sub
rcrb
outsl
inc
stos
incl
xor
adc
leave
enter
dec
xor
out
int
loop
xor
inc
ja
dec
out
pop
out
pop
leave
dec
fs
push
inc
sbb
popf
cmpsb
mov
dec
mov
push
jo
pop
orl
and
sub
movsl
scas
and
rorl
push
cltd
dec
add
stos
out
mov
adc
fldl
leave
xchg
lea
add
or
rorl
iret
push
in
std
lea
mov
imul
enter
ljmp
cmp
fisubl
ljmp
pop
int
cmp
popf
cwtl
lret
daa
jbe
sti
outsl
push
cltd
int3
stc
fstpl
push
xchg
in
cmpb
push
and
arpl
mov
mov
pop
pop
cmp
cmovl
out
movsl
sbb
pushf
jo
out
ds
mov
pop
sbb
stc
jbe
call
xchg
or
cmp
out
stc
add
les
in
mov
imul
shl
dec
jae
pushl
add
sti
in
push
xchg
subl
addr16
mov
cld
fsubs
push
dec
fmulp
xchg
mov
cmc
or
in
pop
push
hlt
xchg
push
lretw
push
aas
repz
adc
sbb
nop
iret
lds
add
dec
cmpsb
adc
fdiv
cs
in
ret
lock
das
mov
in
pop
loop
arpl
sub
inc
jnp
hlt
out
adc
cmc
jge
xchg
add
mov
jmp
insl
adc
addb
pop
add
xchg
mov
rorl
mov
mov
or
xchg
dec
movsb
cmp
xchg
lods
jecxz
sub
pop
ss
sub
adc
cmpb
push
mov
js
jo
cmp
mov
stc
mov
pushf
pop
add
jmp
in
push
push
in
aaa
push
jns
sub
data16
in
cmp
cld
mov
adc
mov
mov
es
fs
sbbl
pop
ret
ret
push
aam
lods
pop
jmp
dec
data16
push
les
mov
jns
imul
stos
stc
xchg
mov
push
dec
ret
xchg
inc
add
pop
mov
lods
jp
ret
ret
scas
mov
faddl
sti
jecxz
repz
in
adc
push
xchg
mov
addr16
outsl
lock
fnstcw
out
xor
pusha
pushf
pushf
lcall
jg
push
sbb
in
les
mov
push
lods
mov
or
mov
jbe
push
aas
scas
pop
es
and
lret
cli
or
jge
lds
mov
addr16
mov
arpl
mov
lods
xchg
dec
add
sbb
mov
xor
sti
arpl
fistpll
and
stos
sub
enter
aad
lahf
popa
jae
add
mull
ret
jle
insl
imul
cmp
test
xchg
std
std
add
push
push
inc
mov
adcl
lock
add
xchg
cwtl
popa
mov
jmp
dec
pop
popa
sbb
add
out
incb
data16
arpl
in
add
stos
add
sub
test
jg
sbb
in
push
cmp
repnz
cmpsl
jb
jnp
cmp
jnp
loope
jmp
in
sub
mov
jb
cwtl
mov
int
push
sub
ret
ljmp
jo
daa
mulb
imul
in
in
popf
mov
sub
pop
and
aad
cmpsb
and
rorl
mov
mov
xchg
pop
std
scas
in
sbb
inc
test
rorl
dec
mov
sub
in
es
mov
add
cmc
xor
lahf
mov
repz
lcall
enter
cmpsb
jo
sbb
rcl
mov
and
rcll
out
dec
int3
cmpl
mov
jne
fdivr
ds
rorb
add
add
xor
add
add
pop
xchg
sarl
xor
or
pop
sbb
sub
push
aam
out
push
lret
sti
push
and
aam
out
popf
or
sarl
std
popa
stc
imul
adc
add
push
cld
mov
mov
pusha
and
pusha
test
inc
adc
mov
xchg
adc
addr16
bound
iret
sarl
mov
lahf
and
aad
jbe
or
pop
sahf
fnstsw
fs
mov
cmp
mov
dec
or
dec
sub
xchg
xor
call
jmp
repz
add
sub
add
sub
add
sbb
push
into
xchg
mov
pop
dec
jl
dec
cmp
sbb
adcb
and
xchg
stc
cmp
xor
mov
in
jle
and
mov
push
sahf
pop
pop
insl
sbb
sbb
fnstsw
sub
jbe
aaa
jecxz
dec
ret
idiv
insb
pop
mov
mov
fimuls
hlt
add
xor
and
loope
in
stos
cmp
dec
cld
jmp
pop
mov
and
cmp
subb
adc
lret
xor
data16
stc
add
mov
stc
inc
std
imul
mov
lods
outsl
mov
fimull
push
xor
sarl
ftst
icebp
mov
cltd
lods
les
sti
mov
hlt
jecxz
xor
mov
xchg
mov
dec
fisttpll
outsl
inc
add
shlb
roll
add
or
add
cli
aaa
aam
xor
jbe
jns
jmp
mov
popf
jmp
out
pop
xchg
xchg
bswap
cltd
push
push
add
cmp
mov
das
sar
lea
xchg
mov
outsl
add
outsl
lcall
test
push
imul
pop
xchg
jns
rcrb
cwtl
cmp
incl
push
pusha
xor
and
or
repz
test
xchg
in
mov
fs
mov
add
out
dec
in
mov
in
jge
fld
out
test
cld
dec
in
decb
out
sbb
aam
subb
jecxz
lods
push
lret
int
dec
shrl
testb
mov
mov
fldenv
bound
add
leave
insl
popf
add
scas
scas
shll
fldpi
inc
lea
gs
aad
jl
sub
movb
rcr
or
lret
aad
mov
or
fcmovne
decl
int3
mov
jo
cli
loope
add
fucom
loop
and
mov
inc
sbb
call
retw
jnp
jne
mov
xchg
test
jecxz
mov
lock
in
mov
jns
push
jnp
sbb
mov
out
sub
jp
or
dec
in
test
std
not
mov
pop
lds
lret
lock
or
int
pop
jae
and
mov
iret
out
xchg
adc
mov
pop
movsl
lcall
jo
insb
mov
repz
and
addb
aam
es
inc
in
xchg
xchg
in
xchg
jmp
jg
imul
ret
mov
and
fldlg2
arpl
popa
sbb
xchg
sti
lea
aaa
jg
out
push
cmc
loop
in
arpl
ret
arpl
sbb
inc
pusha
pop
dec
std
mov
insl
loopne
sub
dec
stc
jnp
rcrb
dec
inc
lods
mov
push
adc
mov
cwtl
sbb
lret
or
sub
dec
pop
nop
aas
shlb
mov
cmpsl
xchg
and
dec
jl
repnz
add
xchg
inc
aam
xchg
aam
xor
mov
jge
cmpsb
and
cmp
jb
and
or
jmp
popf
xchg
rorb
cmpsb
mov
adc
in
mov
les
sahf
jmp
mov
mov
push
pop
nop
std
aad
fcomip
pop
stos
mov
cmpsb
outsl
cmpsb
shl
iret
jecxz
std
or
mov
mov
std
mov
and
mov
adc
cmp
sbb
ror
cmp
pushf
jmp
adc
mov
insb
jo
shlb
imul
push
jg
aaa
jae
adc
sbb
je
fiaddl
mov
jne
fstp
jne
and
xchg
mov
dec
and
mov
hlt
or
ficompl
or
mov
bound
mov
mov
stc
pop
das
stos
pop
xchg
or
push
add
dec
mov
lds
mov
in
shlb
cmp
lods
loope
add
shll
jmp
pop
ja
aad
pop
cli
mov
inc
dec
sbb
pop
out
aam
ficoms
bound
push
mov
inc
out
cli
dec
fdivrs
leave
add
cld
fsubrs
std
popf
fisttpl
imul
push
dec
in
orl
sbb
xchg
jmp
and
out
adc
xchg
and
rolb
ds
mov
loope
pop
jecxz
xchg
cmc
mov
mov
es
jmp
lods
in
add
mov
xorl
addr16
popf
xlat
jns
and
aam
movsl
std
jecxz
pop
xor
std
jp
loopne
xlat
stc
imul
test
jns
cs
in
mov
ret
std
mov
add
stc
lock
in
std
mov
in
popf
les
dec
ret
mov
out
out
std
mov
push
lahf
scas
data16
scas
jmp
xchg
cmp
mov
repz
mov
pop
in
push
jne
push
jp
js
iret
aad
xchg
sti
roll
bound
hlt
mov
xchg
xchg
dec
mov
push
mov
sub
jmp
cmp
cli
pop
ja
jae
daa
jmp
and
mov
mov
js
adc
push
hlt
inc
pop
in
fimull
xchg
add
ret
xchg
lods
lock
push
adc
mov
adc
iret
in
jns
jmp
xor
pop
repz
ret
mov
outsl
dec
aaa
int
mov
mov
xchg
imul
fiadds
or
loope
and
sub
dec
sbb
inc
push
int
lea
out
add
add
aad
push
dec
sbb
ret
loopne
add
sti
in
pop
cmovbe
dec
fyl2x
sbb
repz
in
fisttpll
popf
dec
aas
sub
je
mov
mov
or
jb
adcl
adc
pop
lods
lds
sbb
es
aas
scas
jns
mov
std
mov
xor
or
into
in
dec
test
repz
outsb
leave
in
out
fwait
ss
jmp
popf
sti
out
sarl
xchg
imul
mov
sti
inc
shr
cli
pop
inc
cmp
xor
add
dec
pop
and
lods
sub
es
cld
mov
in
adc
push
aas
add
out
in
cmp
add
pusha
into
push
movsl
sbb
mov
jb
mov
jg
jne
inc
daa
fwait
subb
fwait
lock
frstor
int
fpatan
iret
clc
test
mov
out
mov
mov
leave
ror
dec
pop
nop
cmp
cmp
in
adc
loope
movl
std
or
inc
inc
xchg
xchg
add
push
leave
pop
add
out
push
fdivr
in
mov
sub
xor
data16
adc
push
cmc
fwait
sahf
or
and
cmp
sbb
mov
rorb
push
popf
aas
nop
out
sbb
ficoms
cli
call
cmp
movsb
les
xor
inc
icebp
or
mov
inc
aaa
idivl
sbb
cmp
cltd
adc
mov
repnz
dec
cmp
xchg
add
pop
pop
sar
pop
test
in
jno
ret
or
mov
jmp
push
xor
push
clc
push
out
mov
addl
int
push
int
aas
dec
mov
jo
lret
aas
dec
in
aaa
jmp
adc
cmpl
iret
xchg
call
mov
adc
dec
inc
xchg
xchg
mov
mulb
and
mov
adc
and
icebp
add
ret
mov
clc
aam
pop
in
xor
jno
cmpb
mov
mov
movsb
xor
test
or
je
into
stos
popa
xor
sti
mov
cli
cmc
mov
lret
add
lret
mov
cmc
div
rcr
add
ficompl
lea
add
pop
popf
stos
inc
jge
jno
jge
les
inc
jmp
sahf
mov
popa
jge
shrb
sub
add
in
sbb
shlb
sbb
mov
sbb
mov
push
mov
es
inc
add
shrb
loope
push
fwait
int
inc
inc
inc
lret
mov
mov
dec
js
jmp
subb
aam
movsb
shlb
xchg
mov
insb
in
mov
gs
pusha
sarb
xchg
inc
cmp
enter
rolb
fnstenv
loopne
inc
add
ss
fcmovne
sbbb
sbb
ficompl
mov
test
imulb
xchg
or
cld
ret
pop
inc
ja
and
shrb
lea
hlt
insl
loope
cmc
mov
scas
ret
inc
adc
je
daa
pop
pop
mov
inc
data16
jne
in
and
fdivrs
dec
mov
loop
add
iret
loop
scas
dec
sbb
push
pop
pop
cld
jecxz
std
sbb
jmp
jne
push
outsb
or
add
push
push
and
push
jmp
xlat
out
push
imul
mov
aaa
sbb
stos
jg
out
imul
call
test
cwtl
add
push
dec
fsin
fs
fldt
cltd
les
xchg
clc
int
mov
push
mov
in
out
test
add
dec
pop
icebp
or
fisttpl
pushl
orl
mov
int
das
daa
cwtl
cwtl
rcrb
dec
sub
or
adc
xor
fwait
mov
xor
pop
andb
or
stos
fsts
mov
leave
fstpt
out
or
push
sub
cli
push
ret
ja
mov
out
paddw
xchg
insl
lock
or
test
ret
or
es
shl
jne
sub
scas
insl
pop
addr16
insl
or
jmp
cltd
mov
mov
fcmove
mov
cmp
sbb
cmp
mov
aam
mov
pop
mov
sbb
stos
or
xchg
xchg
lea
or
push
imul
addr16
loopne
push
jecxz
lds
nop
insl
pop
out
outsb
adc
or
mov
pop
sbb
push
scas
sub
cmp
xchg
sti
add
jle
lds
std
cli
bound
dec
mov
jecxz
mov
or
in
stc
mov
cmp
stc
aas
lea
rorb
mov
in
loope
sarb
adcb
imul
add
imul
xchg
jae
in
int3
sub
jne
lret
cmp
cmp
ret
popf
mov
push
outsl
pop
pushl
mov
mov
adc
pop
push
and
icebp
cmp
adc
scas
xlat
andb
pop
mov
dec
sub
clc
sbb
sub
in
mov
jmp
pop
popa
fwait
popf
inc
inc
movsl
jecxz
in
ljmp
cmc
add
lods
loop
mov
add
in
sub
jns
dec
fs
xchg
add
dec
sti
mov
jmp
sub
adc
popf
cmp
pop
rcr
movsb
data16
sbb
sti
or
jp
xchg
std
cmpsl
icebp
loopne
shlb
dec
mov
sub
daa
js
sbb
ss
dec
push
mov
lds
test
xchg
and
fidivrl
arpl
mov
fidivl
xchg
xor
add
cmp
inc
outsl
mov
sub
es
jmp
pop
outsb
lods
test
mov
outsb
pop
push
pop
xchg
ds
mov
insl
sbb
mov
sahf
in
xchg
sub
jl
out
jnp
inc
pop
cwtl
in
jne
stos
add
aaa
icebp
jo
sub
mov
frstpm(287
sbb
mov
enter
adc
dec
xor
add
test
insl
xor
and
cmpsb
icebp
cld
in
fwait
jmp
pusha
outsl
xor
std
pop
and
mov
xchg
std
gs
out
cmp
mov
in
push
cmpsl
or
fsubrl
incl
vsqrtsd
out
mov
test
cmpsb
mov
push
cmpsl
pop
call
adc
int3
rorb
sti
nop
popf
stc
push
mov
xchg
push
notl
scas
int3
mov
test
rolb
push
les
adc
scas
jmp
sbb
les
pop
add
out
popf
mov
pushf
rcrb
js
repnz
popf
nop
pop
pushf
or
jmp
mov
add
mov
or
and
dec
pop
xchg
inc
fs
push
rcrl
les
mov
mov
xchg
dec
pop
cmc
jge
add
inc
cmp
adc
add
add
aam
les
xor
sbb
dec
daa
stc
jmp
cmc
dec
stos
pusha
dec
pop
icebp
mov
xchg
cmpb
cmpsl
mov
xchg
popf
xchg
fdivrs
aas
jo
sub
test
xchg
and
cmp
mov
data16
scas
neg
mov
in
mov
add
movsb
push
out
xor
and
or
sub
and
fstpl
repnz
sbb
stc
mov
fldln2
in
mov
and
addb
inc
repz
pop
leave
in
or
and
ficoms
ret
jl
std
lods
jno
subb
lods
mov
fstl
or
es
mov
int
jecxz
subl
mov
mov
xlat
xchg
dec
shl
or
int3
or
cmc
cmp
sbb
lret
push
mov
and
or
sub
or
fnstenv
lods
push
inc
ja
popf
stc
inc
cmpsl
mov
ret
cmp
push
sub
and
fs
add
insl
in
jmp
inc
rcrl
int3
mov
lret
push
repnz
movsb
aam
lds
dec
iret
cs
dec
jl
and
mov
mov
jecxz
and
fwait
fs
loope
fwait
lods
jecxz
push
cmp
add
push
rcrb
xlat
out
out
and
in
lds
push
or
mov
enter
popf
imul
cmpsb
mov
mov
in
or
push
fdivrs
call
lret
mov
icebp
mov
mull
jnp
mov
add
jg
mov
mov
mov
pop
test
xor
popf
add
fs
push
flds
mov
inc
in
xchg
sub
icebp
fisubrl
adc
add
ds
mov
push
cli
sbb
in
stos
add
out
aam
mov
jecxz
add
cmc
rcl
jmp
rorb
fisttps
in
dec
mov
popa
mov
jp
inc
mov
xor
sti
insl
xchg
xchg
gs
popa
sbbl
call
and
cmc
xchg
inc
nop
loopne
out
es
mov
jae
inc
dec
push
nop
adc
shll
out
xlat
stos
lret
mov
inc
es
in
int
or
mov
int3
leave
xchg
aas
cmp
push
push
mov
mov
sub
div
addr16
xor
or
in
andl
mov
mov
ret
gs
test
pop
stc
test
and
test
cmovl
xchg
mov
loopne
fdivp
iret
dec
dec
out
mov
loope
loopne
in
fs
shll
cmpsl
mov
gs
rclb
lods
popa
out
add
jge
mov
pop
fs
das
mov
add
insb
mov
adc
movsb
inc
leave
popf
popf
out
cs
stos
push
repz
loope
call
pop
ds
clc
divl
xchg
xorb
sbb
mov
xchg
and
jne
mov
pop
jne
ret
sub
xor
jp
jo
lea
cmc
mov
out
stos
mov
pop
sti
std
or
repnz
and
sub
fwait
popf
xchg
inc
ret
or
and
data16
iret
stc
jnp
inc
js
jle
les
jmp
and
lret
repnz
hlt
xchg
std
and
inc
push
js
mov
push
cwtl
or
xchg
test
and
xchg
imul
imul
jecxz
negb
lds
imul
xor
mov
and
arpl
cwtl
outsb
adc
push
mov
int3
add
jle
ja
ret
std
push
inc
adc
adcl
subl
jl
xor
jno
cmp
mov
inc
jecxz
std
popa
aas
mov
loop
sub
mov
mov
inc
inc
inc
mov
in
dec
sbb
nop
jge
mov
adc
pusha
add
cmp
enter
jmp
sar
lock
sti
data16
aam
jb
xlat
and
or
arpl
mov
in
pop
test
inc
and
xchg
out
shlb
inc
loope
sbbb
jecxz
xor
pop
ret
push
and
call
int3
addr16
sbb
mov
js
push
iret
mov
mov
cmp
push
jne
dec
and
movsb
pushf
push
push
mov
adc
nop
ja
sub
mov
in
shrb
enter
push
push
int3
outsb
mov
sub
notl
popf
jmp
sub
fildl
sbb
push
jo
add
mov
xchg
sub
lret
add
jne
sub
push
je
out
sub
int3
pop
cmpsb
rclb
nop
cmp
scas
int
data16
pop
fcmovbe
push
push
sbb
adc
sub
mov
inc
popa
out
pop
pop
icebp
popa
ljmp
xor
and
ss
leave
and
out
push
invd
xlat
out
imul
rclb
mov
in
das
stos
repz
negb
dec
inc
fs
mov
mov
or
cwtl
cmp
mov
add
xor
pop
in
in
addr16
sbb
in
icebp
sahf
or
cmpsb
js
ret
adc
jg
dec
mov
push
mov
jne
sub
pop
mull
jnp
pop
fcmovnbe
in
xor
inc
mov
stc
cmp
push
dec
mov
lds
cmp
xor
inc
sbb
in
cli
bnd
loopne
mov
pop
lahf
mov
dec
popa
aam
xchg
mov
mov
inc
and
cs
shlb
pop
jo
rorb
and
or
sub
gs
sti
push
cld
dec
mov
adcl
push
int3
dec
push
or
xchg
push
cmpsb
adc
xor
dec
sub
scas
xchg
push
sub
mov
cwtl
hlt
test
and
shufps
leave
dec
or
or
out
mov
sbb
stc
dec
test
aas
cltd
adc
adc
inc
popa
lods
popf
mov
mov
mov
dec
stc
adc
jmp
push
mov
dec
add
inc
dec
imul
adc
mov
and
sub
and
adc
xor
stc
inc
xchg
pop
insb
in
ss
push
jbe
lods
aam
mov
fisttpll
cltd
jmp
sbb
sub
gs
icebp
cld
cmp
adc
aam
pop
push
dec
std
sbb
dec
mov
imul
push
stc
mov
and
std
popf
stc
cmp
imul
cmp
data16
fmull
mov
lock
cmp
sti
jno
sahf
testb
and
add
cmp
sbb
stos
mov
out
lods
mov
outsl
ljmp
arpl
jg
ja
inc
sbb
ss
sti
das
imul
sbbb
or
mov
xchg
fadd
test
fdivl
xor
pop
stos
mov
pop
int3
fiaddl
pop
in
pushf
lret
push
inc
xchg
aam
inc
sbb
pop
fs
rorb
iret
test
dec
mov
leave
mov
mov
fldl
pop
inc
cmp
in
rcrl
or
mov
dec
decb
outsl
mov
jo
and
push
jp
xchg
pop
sbb
add
jecxz
aam
std
imul
stos
push
fiadds
adc
jge
mov
xchg
loop
jb
out
xchg
mov
mov
sbb
ret
arpl
jg
test
ljmp
movsb
std
xchg
xchg
inc
rcl
cmpsb
push
add
or
dec
jno
push
push
sahf
mov
sbb
ja
inc
mov
and
mulps
jmp
mov
dec
test
out
jnp
nop
push
xchg
mov
sub
inc
add
sub
and
jns
sub
mov
subl
adc
stc
es
dec
fidivl
add
test
insb
outsb
push
fucomi
movsb
les
inc
pusha
clc
push
push
or
and
ja
xchg
mov
mov
jns
mov
add
push
movsb
icebp
lret
fsub
dec
jae
mov
sti
mov
jmp
jne
out
jg
ljmp
ljmp
mov
adc
in
cmp
push
imul
ret
fs
js
dec
sti
dec
shll
data16
adc
and
dec
jns
sti
mov
sahf
shll
dec
std
mov
rorl
shrl
xor
cmpsb
dec
or
mov
pop
cmpsb
incl
stos
add
nop
jb
in
mov
add
in
mov
subb
stc
or
add
dec
pop
mov
fisttps
xchg
sbb
enter
pop
push
fisubrl
stos
sbb
pop
call
popa
fldt
loopne
pop
fs
xor
dec
ss
daa
jmp
cld
mov
pop
and
mov
push
push
and
push
es
in
add
sbb
push
orb
test
pop
add
fisubl
int3
xchg
xor
mov
in
fnstsw
insl
sbb
outsl
jle
cld
mov
push
ja
jno
jae
aaa
pop
sub
push
or
jns
mov
xchg
or
in
xorb
lret
rcll
mov
xchg
mov
fisttpll
out
push
sbb
sub
sbb
pop
mov
and
mov
and
push
mov
adc
xchg
cmpl
pop
daa
mov
xor
subb
xor
cmpsb
in
inc
jnp
mov
in
loopne
push
xor
push
mov
outsl
mov
dec
dec
inc
fsts
xor
mov
push
add
ret
in
pop
dec
nop
add
leave
shrl
mov
xchg
dec
dec
jne
mov
lock
and
ljmp
in
mov
inc
jecxz
mov
and
add
das
push
sti
sarb
cmpxchg
insl
out
arpl
mov
outsb
jmp
aaa
gs
movsl
pop
mov
and
inc
jnp
inc
add
xchg
and
mov
pop
mov
jg,pn
mov
cmpsl
mov
mov
movsl
mov
dec
dec
push
icebp
cli
pop
jecxz
push
call
pshufw
orb
fnstenv
sti
jecxz
or
divl
rolb
add
test
cmpsb
inc
orb
in
orl
jno
vprotd
aam
and
lcall
fldenv
jmp
sbb
cmc
xchg
loope
ret
sub
in
cmp
lods
sbb
add
jecxz
push
jno
add
andl
jb
dec
test
mov
sub
xor
pop
lahf
pusha
stos
pop
inc
test
jecxz
pop
dec
cmpsb
push
dec
rorb
stos
sbb
jmp
xchg
scas
or
lods
sahf
les
out
dec
xchg
jne
mov
out
lods
imul
sub
lea
scas
mov
lahf
or
popf
out
push
pop
lods
and
aam
out
mov
in
mov
dec
loope
add
xchg
xchg
ret
lods
lcall
stc
int
ficoms
movntps
ja
cmc
mov
xchg
hlt
or
stos
pop
fcompl
hlt
mov
sti
mov
push
dec
cmp
mov
adc
mov
push
les
jge
add
ss
xchg
loope
aam
mov
or
fsubrs
aad
inc
loope
lea
cli
cmpsl
xor
in
mov
in
fs
push
div
popf
xchg
pop
jecxz
mov
cmpsl
or
sti
int3
jne
cmc
in
cmp
mov
pop
mov
jg
pop
fadd
ret
cmp
pusha
sub
push
iret
pop
out
sbb
sub
shrl
movsl
sahf
fadds
sub
mov
adc
mov
dec
fiaddl
fdivl
mov
shll
aam
lock
dec
xor
or
lea
movsb
movsb
sahf
or
ret
je
std
stos
xchg
mov
sub
lret
hlt
decb
inc
xor
jb
arpl
mov
dec
sar
pop
out
into
pusha
inc
dec
lret
mov
ret
je
aam
shlb
add
sub
cmp
mov
loope
aam
in
dec
int3
aas
cmpb
add
notb
xor
cmp
fwait
lock
cmp
outsl
stos
gs
jecxz
sbb
mov
jecxz
loop
push
mov
popa
mov
or
sti
mull
xchg
bound
mov
jge
dec
gs
je
fs
cmp
insb
sbb
cmp
test
sti
out
and
mov
scas
push
jb
xor
test
lahf
imul
mov
call
popa
in
jmp
jmp
push
sbb
jecxz
adc
mov
add
pusha
ja
sub
ret
loop
mov
dec
fs
or
lods
ret
adc
mov
repnz
add
or
push
and
push
mov
data16
or
ret
cmp
or
fsubrs
add
fdivp
mov
jecxz
sbb
mov
fadds
shll
outsl
stc
movsb
mov
mov
out
jns
add
dec
push
jbe
fstps
jecxz
ficompl
mov
cmpsb
mov
mov
gs
mov
scas
hlt
aas
push
jnp
mov
add
in
outsb
lods
jmp
popa
popa
loope
mov
dec
aam
in
dec
ret
mov
movsl
rcr
in
xchg
sub
mov
shlb
sub
in
data16
popf
push
cmc
sbb
adc
mull
insl
arpl
movsb
sub
jbe
in
jno
mov
cmp
push
push
out
cmp
cld
loope
inc
or
fidivrl
pop
cmovge
push
dec
or
push
jne
movsb
sbb
rorb
data16
inc
pop
cmp
or
jne
mov
xchg
push
fstps
jge
jns
mov
nop
push
add
sbb
jmp
sahf
fnstenv
stos
addl
mov
popa
jae
pushf
loopne
pop
cld
lcall
test
idiv
dec
cmpsl
jmp
in
push
jg
pop
adc
ljmp
popa
in
jnp
xchg
fcom
mov
mov
dec
int3
sub
out
mov
mov
xchg
jo
lahf
xchg
xchg
xchg
cmpsb
cmpsb
mov
in
mov
ja
mov
jmp
scas
movsl
or
lahf
push
push
dec
stc
sti
in
enter
scas
push
jnp
lret
jmp
out
mov
push
sub
ja
jmp
xor
shl
pop
mov
addr16
jmp
pushf
push
outsb
flds
xor
daa
ret
push
jmp
and
inc
pop
cmpsl
mov
jbe
adc
jne
push
fiadds
and
setl
lock
adc
or
mov
mov
imul
cmp
xchg
push
hlt
in
fwait
xor
xchg
mov
cmp
jne
push
sub
push
xor
mov
out
pop
imul
sub
adc
jg
lcall
stc
push
js
ss
cmp
jecxz
mov
cmc
std
add
push
xlat
and
xchg
aad
and
fnstsw
push
dec
aad
dec
arpl
or
push
les
add
inc
out
cmp
lahf
push
orb
fistps
mov
cmp
inc
loop
filds
rorb
sbb
rclb
aam
xchg
insl
push
in
popf
sahf
or
jnp
mov
push
test
xor
shll
andb
insb
or
call
add
jmp
lret
sbb
fbld
cmp
push
test
xchg
pop
test
popl
mov
das
push
das
inc
lahf
dec
xchg
xor
movsl
in
sub
sbb
xchg
adc
xor
test
sbb
jnp
pop
push
xchg
int3
add
out
lea
cmpsb
sub
clc
pop
fistl
dec
and
mov
cmp
int3
ss
sbb
test
xchg
and
sbb
std
mov
into
insl
cld
sbb
jnp
adc
inc
xchg
push
xorb
mov
push
mov
jb
popf
dec
dec
push
push
add
sar
mov
in
cmpsl
shll
sub
ja
mov
mov
dec
push
in
jmp
outsb
xchg
xor
popa
jnp
fbstp
pop
and
lret
testl
cli
ss
sub
jge
cmpsl
loope
dec
in
ret
testl
int
rolb
jle
imul
pop
jp
mov
test
cmpsb
hlt
movsl
lret
out
add
or
shrb
pusha
dec
push
mov
out
push
mov
mov
insb
lods
hlt
shlb
mov
mov
and
jecxz
mov
rolb
scas
gs
pop
sbb
cmp
mov
dec
shll
xchg
xchg
mov
icebp
mov
rcll
inc
xchg
sbb
addb
sub
jg
push
inc
xor
mov
jecxz
pop
insb
repz
xchg
mov
adc
popf
jp
test
inc
and
mov
mov
ljmp
mov
lock
in
and
mov
jmp
lods
test
into
orl
hlt
jl
loope
jge
cltd
jo
rorb
fs
xchg
inc
xor
jmp
stos
mov
mov
repz
mov
jle
jmp
popa
jecxz
js
jno
mov
cmpsl
push
mov
mov
cmp
sarl
out
sti
adc
pop
cmpb
movl
inc
enter
and
mov
outsb
cmpsb
inc
xchg
clc
push
mov
sub
add
cmpl
cmp
push
outsl
sbb
ja
mov
lea
push
aam
xchg
add
ret
nop
jb
pusha
push
call
sahf
mov
mov
jle
das
jg
pusha
pop
pop
add
pop
jecxz
push
mov
jmp
ret
aas
stos
cld
add
call
hlt
popf
ret
xlat
pop
or
mov
mov
add
imul
sub
cwtl
stc
fadd
mov
add
pop
mov
xchg
lret
insb
lds
mov
sub
mov
mov
mov
xchg
and
fwait
out
mov
or
mov
hlt
repz
js
rol
dec
out
loopne
stc
test
loop
ret
cmpsl
cmp
aad
popf
jecxz
lret
mov
jne
enter
loope
incb
icebp
sbb
fisttpll
xchg
mov
ljmp
pop
pop
sbb
mov
lret
lds
mov
cwtl
mov
dec
jecxz
out
or
shlb
or
ds
mov
mov
sub
jg
scas
leave
cli
fildl
cmp
cli
adc
repnz
add
in
call
push
cld
cwtl
push
jl
cmpsl
push
enter
cld
into
jp
insb
idivb
popf
dec
int
dec
cmc
ljmp
popf
cwtl
or
andb
pop
fs
fs
out
stc
fisubrl
arpl
push
mov
pop
gs
nop
int3
dec
jmp
ds
mov
jp
adc
mov
icebp
jb
popf
aam
popa
inc
enter
ss
add
stc
pop
pop
in
int
call
jecxz
mov
hlt
jb
popf
mov
jmp
mull
mov
cli
bound
fdivl
fdivr
or
lods
rorl
je
popa
imull
add
mov
insb
mov
xor
in
add
push
outsb
jmp
lret
jbe
adc
stos
hlt
and
gs
es
in
leave
lcall
ficomps
mov
lcall
fnop
es
lea
cmp
popf
in
jmp
jns
push
dec
dec
rorb
mov
les
and
pop
mov
rcll
cld
lea
icebp
dec
in
loope
imul
mov
cmc
jl
mov
pop
icebp
push
or
inc
call
add
movsb
dec
int3
pop
arpl
mov
loope
dec
pusha
pop
push
pushf
rolb
ret
push
adc
dec
in
lahf
mov
jecxz
popf
aad
jmp
jne
jge
inc
ret
xor
in
pop
gs
push
jmp
icebp
jns
std
mov
push
push
push
mov
fnstenv
shrb
jno
lds
jns
dec
idivl
daa
cld
push
repz
pop
add
lahf
xchg
pop
or
jg
mov
es
enter
xchg
mov
sar
push
dec
outsl
adc
int
popa
bound
ror
cmp
stc
stc
int3
data16
sub
adc
xchg
out
stos
ds
mov
or
inc
xchg
idiv
fcomps
jnp
cmpsl
jecxz
xchg
aam
aad
ss
sbb
stc
mov
cmp
out
push
jg
or
aad
lods
push
xchg
xorl
pop
mov
repnz
adc
bound
mov
lods
cltd
mov
xor
imul
dec
mov
inc
lds
std
out
mov
mov
adcl
inc
mov
pop
pop
or
jmp
or
int
jmp
leave
mov
outsb
xchg
pop
lret
mov
mov
jmp
stc
orb
out
shlb
mov
cmpsb
push
in
popf
xchg
or
idivl
js
sub
sub
sbb
icebp
ljmp
and
popa
int3
ret
cli
xchg
repnz
arpl
pop
cmp
data16
and
leave
push
sub
inc
ljmp
mov
stos
lds
jns
jno
xorb
fldenv
in
in
jnp
xchg
add
in
sub
lods
loop
mov
jne
dec
dec
or
lds
lea
pop
mov
lods
jne
lock
or
ret
lods
dec
sbb
in
jmp
push
cmp
xchg
out
not
mov
jnp
pop
jle
fisubl
add
mov
dec
mov
mov
and
cmp
push
sub
and
jbe
xor
mov
int3
cmpsb
clc
in
sub
dec
push
fsts
cmc
cmpsb
mov
repnz
jno
lds
sbb
add
sub
lret
xchg
mov
mov
testb
sub
mov
sub
dec
push
fldcw
mov
in
push
jns
sbb
adc
in
hlt
sub
jl
incb
mov
shrb
xchg
mov
popa
test
jnp
inc
and
dec
aas
aam
nop
movb
es
pop
and
fistl
xchg
mov
dec
sti
xlat
shrl
imul
rol
jno
lcall
or
mov
push
xchg
or
xchg
mov
push
or
daa
outsl
adc
xchg
cmpsb
xchg
aad
add
fcom
lret
mov
xor
cmp
scas
ret
stc
jno
in
mov
jbe
int
cmpsb
stc
sub
mov
hlt
leave
mov
dec
loopne
xchg
aas
int
mov
es
mov
jo
cmp
mov
sbb
daa
cwtl
pop
cltd
je
lods
loope
or
in
outsb
sar
mov
add
out
mov
mov
lret
shll
outsb
arpl
add
cld
cmc
sub
and
xor
push
ljmp
int3
xor
or
add
cwtl
movsl
out
int
lret
mov
jmp
popf
pop
xor
shrb
mov
cmp
stos
adc
leave
scas
aad
mov
lods
pusha
call
ja
mov
std
in
lock
xorl
stos
mov
clc
iret
movsl
gs
xchg
loopne
and
loopne
jecxz
mov
lods
fisubs
mov
or
mov
out
jne
and
imul
in
add
dec
sub
leave
rolb
ror
sbb
xchg
mov
incl
jb
ds
push
fs
fisttpll
ljmp
mov
xchg
jno
imul
add
mov
stos
inc
mov
adcb
fnstcw
mov
add
stos
sbb
out
jmp
lea
insb
cmp
dec
lds
jb
out
jmp
xchg
sbb
sub
aad
adc
ret
outsl
push
orb
rcrl
sarb
outsb
std
add
push
pop
sub
adc
mov
add
test
in
add
sub
stos
lods
lods
push
mov
xchg
test
sbb
test
add
cmp
jmp
cltd
icebp
sub
testl
hlt
jecxz
jno
jecxz
ret
add
adc
cmp
jae
lea
mov
insb
cmpsb
das
divb
push
aas
jmp
fs
add
push
in
iret
push
cmp
stc
pop
popf
push
test
push
xchg
daa
in
cli
out
cmc
xor
mov
jne
rol
add
repnz
jns
js
lahf
mov
data16
add
cmp
imul
sbb
adc
cmc
inc
into
pop
push
fnsetpm(287
jns
mov
mov
std
inc
ja
test
sbb
xorb
mov
xchg
cld
xchg
fsubs
stos
sbb
push
mov
mov
or
stc
dec
jmp
jne
lock
push
sbb
push
jmp
stc
stos
mov
push
divl
cmpsb
cmp
addb
dec
stos
dec
pop
outsl
sti
js
dec
add
popf
aam
hlt
movsl
rcll
aas
and
sbb
push
outsl
mov
push
adc
mov
pop
add
or
pop
xchg
test
xor
lea
push
mov
pop
mov
cmp
sub
shrb
fistpll
cmp
adc
test
push
inc
jae
jecxz
mov
pusha
icebp
movsb
notb
cmpl
push
sbb
insl
xchg
js
pop
pop
rol
clc
lahf
and
push
mov
jae
sti
and
std
inc
push
pop
fsub
fs
loope
mov
arpl
dec
rcrl
ss
inc
pusha
adc
loop
and
inc
pop
int
ret
stc
jmp
sub
mov
sub
inc
cmc
cmpsb
adc
or
addr16
out
lret
fucomip
mov
xor
cmp
pop
sbb
ja
ss
adc
loope
rcrl
fbld
jmp
bound
ret
mov
in
cmp
aaa
xor
mov
test
filds
adc
sbb
cli
divb
stos
iret
xor
sbb
jbe,pn
push
pop
fldl
aas
rol
cwtl
sub
mov
xchg
cmpsl
repz
movsl
pop
mulb
pop
mov
xor
out
adc
lret
loopne
hlt
adc
imul
rolb
or
or
int3
pop
leave
cmp
sub
and
es
push
xor
sub
shlb
cltd
mov
xlat
insl
and
mov
adc
push
and
fwait
pop
lods
imul
pop
inc
js
sub
lods
gs
and
in
mov
jge
xchg
movsb
push
push
js
dec
in
insl
jo
gs
cld
pusha
xor
xchg
pop
ret
outsl
pop
loopne
lret
cmp
int
in
insl
jo
jle
sbb
fs
in
push
inc
std
cwtl
sbb
jno
mov
or
mov
jns
js
outsl
and
cwtl
xor
sti
aaa
jge
std
lock
pop
sub
daa
cmp
jmp
pushf
cmp
mov
inc
mov
fdivrs
lahf
mov
mov
adc
adc
aaa
jmp
je
lret
popa
dec
or
decl
in
scas
cmp
cmc
pop
xchg
cwtl
mov
dec
cmp
cmp
sarl
stc
cmp
mov
mov
mov
shl
or
jo
icebp
add
jge
cwtl
jmp
xchg
lods
jbe
call
adc
add
loope
cld
stc
lea
dec
scas
pop
jl
mov
cmp
loope
or
in
add
icebp
mov
shll
mov
jae
pop
mov
or
arpl
lcall
jecxz
in
push
mov
xchg
pop
mov
add
mov
jo
sbb
xor
sbb
adc
mov
lahf
test
fs
and
xor
psubw
lcall
popf
inc
out
mov
push
ret
pop
xchg
rclb
mov
fsubrp
pusha
lret
out
cmp
xlat
out
sbb
popa
mov
mov
daa
sub
mov
out
sbb
shlb
push
jo
lock
inc
or
shlb
cmc
outsl
adc
popf
pop
push
in
mov
mov
das
add
fs
xchg
sbb
push
push
xchg
movsl
mov
icebp
daa
xchg
sub
sbb
add
adc
mov
or
dec
loop
out
sbb
jmp
ror
push
movsb
pop
mov
movsl
or
xchg
icebp
in
int3
sub
std
movsl
xchg
mov
outsl
fcmovu
jno
nop
pop
add
ja
test
gs
in
mov
add
and
push
popf
fstps
das
cmpsb
sbb
xchg
mov
int
ror
xchg
mov
and
pop
lods
add
adc
inc
dec
popf
push
push
inc
sbb
test
and
jb
test
xor
fbstp
adc
rcrl
mov
sbb
ret
int3
movsb
sar
jo
push
gs
dec
adc
cmpl
testb
dec
jb
in
insb
mov
lods
cmc
loope
stc
scas
jnp
mov
mov
dec
jmp
mov
inc
shr
mov
cld
cmpsl
or
js
dec
or
mov
test
dec
dec
idiv
add
les
jns
bound
inc
adc
aam
test
stc
cmpsl
lods
xor
andb
movsb
dec
negl
dec
mov
pop
jp
repnz
push
jle
mov
adc
test
and
cld
ret
mov
push
xchg
in
popa
clc
and
subb
scas
rorl
push
ss
mov
pop
movsl
out
mov
lods
jne
rcrb
xchg
xor
test
hlt
cmp
iret
sbb
icebp
scas
pushf
dec
aaa
sub
xchg
in
or
jecxz
stc
or
xchg
popf
mov
shrb
sub
dec
loop
fwait
sbbb
fs
sbb
jmp
hlt
xchg
mov
fcom
xchg
inc
push
lcall
lock
cwtl
push
add
loope
cmpsl
cli
lods
or
icebp
sbb
mov
movsb
push
adcb
sbb
gs
popf
mov
shl
pop
cmp
stc
xchg
fs
xchg
add
adc
cmp
daa
xor
out
sbb
pushf
jmp
xchg
pop
push
sbb
mov
fs
loopne
push
pop
andb
mov
stos
movsb
pop
jg
mov
arpl
adc
loopne
iret
cli
lret
inc
xchg
lahf
xor
bnd
loope
ret
negb
ss
lock
xchg
push
sbb
in
jnp
adc
outsb
mov
out
lods
ret
repz
mov
cld
sahf
out
pop
roll
or
jbe
mov
mov
mov
jo
add
out
mov
popf
repz
jne
dec
mov
clc
cmp
adc
lods
cmp
xor
daa
repz
ret
insb
dec
lea
test
xchg
jns
enter
cmp
mov
movsb
push
sub
and
and
sub
push
in
push
fsub
stc
jp
jmp
fwait
iret
mov
jmp
sub
push
push
fs
xchg
ret
add
dec
fs
or
cli
add
dec
daa
sub
arpl
cmp
ljmp
inc
lcall
mov
push
popf
sti
mov
out
cmp
enter
mov
xchg
xor
mov
xor
dec
cmp
fcmovnu
ja
cld
testl
fsts
sub
xchg
or
shrb
rcrb
sti
or
pop
cs
sbb
dec
mov
push
testl
adc
std
push
mov
dec
cli
mov
push
aas
xchg
mov
cmpsb
xor
pop
repz
fidivs
leave
xor
ljmp
std
cmpsl
movsl
repz
test
cmpsb
aam
pop
loop
aad
jae
repnz
pusha
push
test
fwait
adcb
cmp
mov
repz
popf
sarb
jmp
addl
ja
dec
push
inc
add
mov
jmp
sub
push
push
out
sub
adc
mov
je
cmpsb
mov
mov
lret
mov
lret
xor
sbb
push
and
mov
push
jecxz
loope
push
dec
pusha
dec
sub
mov
jne
xchg
data16
cmpsl
lret
into
rcrb
mov
inc
push
bound
cmp
sub
fs
cmp
mov
cmp
jg
mov
std
pop
mov
mov
in
ret
mov
cwtl
cmp
cs
inc
adc
dec
es
jno
rolb
push
sbb
pop
lea
inc
in
xchg
inc
xchg
inc
mov
stc
mov
sbb
pusha
xor
repnz
mov
fstps
ret
mov
adc
push
lahf
movsl
mov
cmp
in
xor
jo
and
jle
xchg
add
mov
push
adc
jnp
dec
pop
in
aad
xchg
sub
sbb
push
sahf
sahf
rclb
inc
inc
sti
cwtl
and
mov
sahf
pushl
repz
sbb
aas
decb
ds
shr
mov
dec
sub
movl
sbb
test
xchg
jle
popa
out
xor
imul
cli
lds
or
scas
jmp
adc
adc
jmp
les
inc
push
pop
dec
and
add
add
adc
or
xor
pop
and
xchg
push
fisubs
jbe
repnz
adcl
ror
mov
test
mov
addr16
rol
pop
daa
xchg
pop
fistpl
mov
orl
cmp
popf
loop
or
push
or
faddl
idivb
sbb
inc
jnp
mov
divl
xor
loope
test
jbe
and
mov
aad
sbb
push
jnp
push
leave
mov
cltd
adc
enter
lea
and
add
std
dec
xor
iret
cli
sbb
hlt
inc
cwtl
mov
sub
or
lret
push
pop
out
and
lahf
popf
add
into
xor
out
mov
jno
inc
jbe
enter
stos
iret
in
imul
jo
ficomps
xchg
repz
lret
jg
gs
or
loop
sarl
dec
jge
push
and
sub
cmp
jge
mov
pushf
push
icebp
call
cld
sbb
cmpsb
jg
stc
jno
enter
shrl
pop
divl
sti
cwtl
sbb
clc
xchg
cmp
mov
fisubrl
jno
fsub
dec
xchg
xchg
inc
ret
popa
mov
ret
je
test
scas
fs
out
mov
imul
aam
mov
mov
sub
in
push
dec
xor
xchg
mov
xchg
cmp
sti
xchg
fldl
mov
scas
aas
lcall
movsl
dec
mov
popa
push
fists
icebp
pop
cmpsl
push
testl
mov
push
sub
shll
mov
dec
cmp
cmpsb
int3
xor
sar
push
xchg
sub
sbb
js
je
push
mov
cli
adc
and
mov
test
repnz
repz
repz
jge
xchg
dec
popf
decb
lea
mov
lods
fs
add
dec
lret
jmp
mov
dec
out
sub
dec
cs
pop
and
sahf
aad
mov
fsubrs
mov
dec
insb
andl
mov
fldl
xchg
icebp
jo
sbb
loope
call
lods
jne
lods
dec
lcall
fbstp
scas
xchg
in
icebp
push
pop
mov
jl
xor
ja
mov
int
cmp
scas
icebp
fwait
sbb
int3
xchg
jge
decb
mov
and
testb
xchg
shrb
out
and
clc
stc
sarl
scas
test
push
pop
xor
ljmp
mov
mov
sbb
imul
movsb
fs
imul
adc
iret
lods
call
mov
cmp
mov
mov
xchg
insl
inc
jge
outsb
lods
in
int3
or
fdiv
lods
ljmp
or
addr16
insb
pop
std
data16
push
dec
mov
pop
inc
popa
inc
push
scas
or
push
dec
loope
jg
out
cli
in
mov
or
fmul
xchg
loope
jno
pop
mov
cli
gs
cmp
mov
mov
aad
fcoml
mov
cli
mov
adc
push
inc
ja
jno,pt
orb
mov
cmp
das
test
aas
push
rorl
adc
sahf
dec
mov
xchg
jnp
push
mov
and
int
xchg
in
shl
mov
mov
lea
jo
insl
inc
jmp
fcmovnbe
dec
sub
rcl
in
mov
clc
call
mov
push
add
call
and
xchg
xchg
sarb
clc
jmp
sbb
jmp
leave
mov
icebp
popf
mov
sahf
negl
mov
mov
xor
ja
mov
arpl
popf
mov
jmp
jecxz
cmc
mov
popf
flds
outsb
fcmovb
dec
mov
mov
mov
jmp
negl
adc
lock
xorb
mov
dec
scas
push
insb
pop
sbb
movsl
mov
cmpsb
xor
mov
pop
lahf
outsb
loope
cmp
mov
and
jmp
std
std
pop
push
or
sarl
popf
lods
loop
mov
mov
lea
add
mov
mov
fcmovb
daa
lahf
xor
pop
dec
idivl
icebp
xor
andb
dec
sbb
fcmovne
jae
inc
cmp
gs
mov
cmp
stos
fstl
sbb
dec
pop
add
mov
lahf
jmp
mov
rorb
cltd
test
rclb
mov
call
mov
rcrb
out
mov
or
add
pop
jae
movsl
ljmp
cmpsl
aaa
into
repnz
test
or
or
popf
test
cwtl
cmp
mov
aam
inc
popf
push
sub
dec
inc
cmp
dec
mov
and
push
les
adc
mov
mov
out
and
sti
jne
rcl
inc
fstpl
sbb
inc
repz
xorb
ret
add
in
xor
int3
shlb
pop
mov
mov
roll
pop
mov
jnp
pop
mov
adcb
sub
mov
jmp
sti
push
aaa
or
mov
outsb
mov
adc
xlat
mov
popf
in
mov
cmpsl
sbb
sbb
std
push
fsubr
stc
jg
or
jne
enter
and
insb
adc
add
pushf
or
sbb
loope
hlt
int3
mov
lcall
mov
cmpb
call
imul
xor
xorb
add
mov
xlat
in
dec
stc
cmp
lea
or
mov
add
adc
xchg
xchg
pop
adc
icebp
std
fsubrs
movsl
in
mov
in
orl
mov
int
les
in
stc
cmp
dec
push
push
rolb
add
js
add
xchg
sarl
cld
mov
flds
jne
and
nop
inc
xchg
in
popf
sub
mov
push
cmp
xor
add
les
stos
xor
into
mov
inc
shlb
fs
fxch
lea
sbbl
mov
push
dec
mov
in
aad
inc
in
cmpsb
repz
stc
out
mov
inc
testl
mov
or
or
push
and
into
mov
cli
iret
pushl
jns
pop
pop
cmpsl
pop
lea
pop
adc
xchg
les
in
mov
mov
out
jne
fmul
xchg
xchg
lods
xor
loope
sbb
std
test
lret
cld
dec
sub
fnstenv
jbe
sbb
push
pop
jmp
mov
pusha
dec
in
rol
leave
inc
pop
push
sbb
pusha
cmp
mov
mov
lock
inc
pop
push
hlt
fs
and
popa
js
insl
rclb
mov
pop
outsl
or
pop
out
xchg
push
int
push
out
les
mov
in
jnp
lods
js
dec
mov
je
nop
in
inc
sbbl
inc
stc
adc
mov
xchg
jno
sti
dec
or
mov
out
mov
push
or
jns
jmp
pop
addr16
mov
add
les
test
jno
xchg
sub
xchg
pop
mov
sub
sub
sti
in
mov
cmpb
cmp
pop
add
fcomi
addr16
sub
dec
add
stos
test
mov
inc
cli
in
dec
loop
mov
icebp
xchg
ret
ja
inc
repnz
add
mov
mov
das
fs
ss
fsubl
push
push
or
pushw
mov
mov
jle
mov
jg
int3
or
and
fmul
jne
repz
mov
xchg
test
in
ret
mov
dec
scas
pop
mov
mov
push
js
rorl
rorb
mov
xchg
cld
cs
add
gs
and
mov
roll
aam
dec
cmp
sub
jmp
cmp
dec
mov
adc
loope
test
sbb
in
stos
and
or
imul
jbe
sub
and
ret
fwait
xor
pusha
sbb
mov
shlb
xor
xor
mov
push
push
pop
stc
add
xor
push
sub
dec
lret
pop
adc
pop
lret
lods
adc
push
fisubs
outsb
add
mov
mov
sub
movsb
sti
and
es
mov
movsb
shl
std
mov
dec
in
fldl
sub
jecxz
stc
iret
xor
push
enter
pop
lds
mov
sbb
out
inc
cmp
jns
mov
jp
sbb
out
enter
ret
push
flds
pushf
notb
xchg
dec
pop
shrl
push
xor
sub
sub
insb
in
fnstsw
push
sbb
stos
push
jge
jo
lds
cli
mov
ret
and
mov
cmpsl
dec
pop
aam
dec
push
es
mov
jnp
fucomi
adc
andl
leave
mov
in
outsb
or
rcll
jns
js
xorl
inc
push
add
push
stc
push
jg
push
sub
mov
arpl
add
daa
mov
fisttpll
or
cld
inc
aad
int3
lcall
lods
cmpb
xchg
pop
mov
xor
fcoms
jecxz
in
lock
add
dec
xchg
xor
jl
mov
arpl
mov
les
out
xchg
dec
mov
ret
pop
insl
scas
stc
jns
push
lret
xchg
jbe
push
pop
sbb
dec
outsl
mov
mov
or
xchg
daa
rorb
xchg
push
cmp
pop
out
cld
lahf
xchg
push
cltd
pop
les
inc
cli
jl
xchg
xchg
dec
in
mov
add
mov
jecxz
in
mov
cwtl
sub
add
insb
movsl
inc
mov
cmp
inc
mov
ja
fwait
cli
andb
adc
push
mov
push
push
mov
lea
push
mov
imul
fidivrl
icebp
int
fs
push
adc
orb
mov
sbb
xchg
shlb
shlb
sbb
popa
mov
cli
dec
jnp
mov
icebp
movsl
dec
xchg
mov
ja
or
shlb
dec
cwtl
in
sub
shlb
adc
mov
or
ret
xchg
imul
fcmovnb
mov
xlat
push
cmpsl
subb
mov
int3
sub
repnz
addr16
lea
mov
incl
xor
loope
mov
aam
js
xor
stc
xor
mov
push
insb
out
data16
pop
movsb
cld
shrb
xchg
xchg
stos
push
out
ficoms
mov
mov
stos
push
jnp
push
and
fcmovnbe
lods
pop
fstl
sub
cs
aam
test
loopne
or
hlt
gs
adc
in
jne
mov
inc
pop
inc
xchg
push
inc
fs
in
fs
dec
dec
mov
pop
incl
sarl
mov
int
jmp
arpl
jg
fdivrl
jecxz
mov
dec
xchg
cmpsl
jae
jg
mov
add
inc
and
ret
mov
mov
nop
mov
push
iret
dec
dec
adc
and
push
add
and
cmp
or
and
dec
sub
and
movsl
and
add
or
ja
test
push
test
nop
pop
out
push
decb
sbb
enter
adc
and
mov
in
ja
imul
into
sub
mov
fisubs
into
data16
mov
jl
add
dec
mov
sub
shrl
mov
stos
adc
push
repnz
push
in
cmc
popf
js
pusha
mov
les
rep
or
mov
in
push
shrl
ret
jl
pop
inc
mov
mov
sbb
adc
clc
aam
mov
mov
cmp
xor
in
fsubr
adc
cmpsl
jle
cmpsb
out
mov
or
insb
lock
xchg
pop
testb
push
in
mov
ja
mov
fcomps
jge
fisttpl
and
in
jl
jle
add
sub
pop
fists
imul
xor
mov
loope
insl
out
jmp
movsl
test
stos
dec
push
push
stc
jl
insb
cmpl
sahf
outsl
fidivrs
xor
int
xor
outsb
in
cmp
pop
icebp
in
ficomps
addb
adc
xchg
daa
or
jb
xor
pusha
stos
fistps
jae
dec
cmp
repz
in
notl
into
movsb
sbb
out
xor
mov
cld
push
or
dec
rclb
vprotw
test
popa
scas
dec
icebp
out
stc
xorl
push
push
jb
or
xor
test
mov
pop
mov
xor
repz
popa
lock
cmpsb
jl
jbe
xor
mov
hlt
sub
sbb
or
std
repnz
les
xor
push
int3
std
pushf
lcall
cmp
fucom
fs
sbb
dec
mov
push
rclb
je
xchg
fsubr
and
ss
sub
jae
imul
push
fdivl
es
jle
in
roll
ss
push
imul
repz
lea
sti
addl
std
xchg
cmpsl
xchg
lock
imul
add
pop
insl
cltd
push
xchg
insb
les
pop
arpl
adc
mov
orl
subb
dec
cmp
xchg
jecxz
es
pop
mov
in
ja
loope
std
scas
sub
fisubs
push
popf
bound
mov
lret
mov
and
rorw
sarb
jns
stc
repnz
out
int3
jo
lret
jb
clc
cmp
or
loop
add
into
jp
mov
mov
mov
stos
into
icebp
sbb
iret
test
xchg
jmp
and
mov
xchg
ss
or
pop
mov
dec
jecxz
xchg
callw
add
in
jno
shlb
addl
xchg
les
and
sub
mov
pop
sbb
shll
jge
jle
xor
adc
mov
xor
jl
rcll
popf
mov
out
ja
into
dec
cmp
outsl
mov
adc
xor
sub
xchg
hlt
mov
sbb
int
jl
adc
test
push
aas
mov
jb
inc
data16
mov
mov
pop
mov
aaa
in
cli
popf
andb
loopne
jno
sbb
incb
shrb
sbb
cmpsb
sti
push
sub
mov
pop
mov
out
leave
xor
insb
addr16
notl
xchg
mov
dec
inc
cmp
dec
jns
out
std
js
std
mov
jne
mov
test
addr16
sbb
enter
push
cmp
dec
fistpl
xor
xchg
stc
and
sub
sub
jne
dec
adcl
xchg
bswap
jae
ds
insb
movsb
test
push
inc
cmpb
push
push
jbe
pusha
in
dec
lods
push
dec
in
popf
rclb
push
xchg
push
adc
pop
test
xchg
fsubl
lcall
enter
call
out
idiv
shr
ljmp
pop
data16
insl
lret
xchg
sub
jnp
out
sub
mov
adc
xchg
aaa
push
movsl
add
test
xor
jmp
idivb
or
push
popl
push
out
test
sub
fnstsw
xchg
sbb
add
sbb
loope
imull
das
push
push
stos
pusha
gs
xchg
or
pop
std
dec
adc
in
mov
ss
popf
pop
lret
mov
inc
mov
es
push
fbld
mov
mov
cmpsb
inc
or
loop
fimull
cmp
mov
pushf
das
lret
mov
dec
sbb
addl
push
or
in
dec
testl
mov
repz
cmp
xor
xchg
stos
hlt
mov
dec
lcall
aas
pop
test
push
xchg
push
jl
or
daa
ret
and
insb
cli
out
into
clc
and
loopne
mov
arpl
sub
add
inc
inc
shrb
xchg
loope
add
jns
scas
std
cmp
loope
push
decb
out
or
jmp
js
jbe
lret
test
out
lea
push
div
push
push
pop
test
icebp
xor
enter
mov
add
add
xchg
xchg
hlt
fistpl
subl
mov
cltd
mov
jmp
int3
cld
add
push
ficompl
mov
data16
add
pusha
ds
jbe
push
andl
inc
push
idivl
lahf
add
rorl
pushf
mov
xchg
outsl
jg
clc
dec
adcl
lea
cwtl
sbb
imul
mov
jl
inc
shll
ss
xchg
subb
popa
sbb
dec
inc
pop
in
dec
xchg
xchg
int
fwait
imul
inc
aas
push
sbb
push
out
lret
adcl
int
cld
cli
call
jo
mov
and
ja
push
or
cmp
imull
lea
add
stc
mov
mov
pop
mov
mov
sbb
cmp
xor
mov
jge
add
loop
shlb
jbe
movsb
sub
cmpsb
ret
sbbb
mov
add
mov
rcl
stc
in
push
shlb
shr
push
cmp
lret
jg
in
and
add
pop
leave
and
int
rcr
xor
dec
mov
rcr
pop
les
cwtl
cmp
dec
mov
push
and
or
lcall
std
sti
pop
idivb
push
cmp
adc
mov
out
add
or
cld
jo,pt
aam
jmp
fisubrl
into
pop
adc
aas
adc
aam
inc
mov
movsl
cmpsb
push
adc
add
jmp
xchg
icebp
loope
sub
cmpsl
adc
dec
jae
lret
mov
mov
sbb
int
out
sti
insb
ret
mov
pop
jle
or
movsb
imul
jge
in
sbb
mov
mov
inc
pop
loope
dec
je
jmp
sarb
roll
mov
cwtl
add
cli
aad
add
loop
pop
sub
into
repz
jb
ja
mov
shr
jl
loop
cltd
shr
ret
push
mov
ja
data16
and
dec
lock
jl
in
cmc
test
fisttps
sti
clc
add
mov
mov
popa
ja
sub
sub
andl
xchg
leave
dec
cltd
xorb
test
ffreep
dec
jecxz
ja
fisubs
push
push
dec
dec
xorb
lea
adc
mov
adc
adcb
addl
shrl
mov
fldl
adc
ret
mov
xchg
call
fs
cmpsl
ljmp
arpl
ds
xor
xor
hlt
or
scas
loope
lea
pop
sbb
dec
jecxz
notb
loope
mov
out
adc
mov
mov
pop
sub
or
ljmp
pop
jmp
sbb
jmp
add
outsl
stos
and
cltd
repz
mov
push
push
mov
into
mov
or
dec
iret
test
jo
jne
bound
add
mov
jns
push
mov
mov
and
mov
sbb
mov
xchg
mov
sbb
hlt
mov
pop
test
ret
adc
add
scas
mov
jmp
mov
fs
cmpsl
dec
adc
in
shll
dec
mov
repnz
notl
and
lods
lods
std
add
repnz
push
mov
in
xchg
cmp
fidivrs
in
cld
popf
in
jmp
test
cmp
imul
fs
jae
mov
dec
cltd
mov
and
mov
sarl
popf
add
cmpsb
add
and
cmp
ds
inc
jae
cmpsl
add
test
xchg
xchg
mov
push
add
xchg
jge
jo
adc
rclb
aad
dec
push
adc
pop
jmp
mov
std
stos
sbb
push
inc
in
aad
hlt
nop
adc
mov
testb
in
out
inc
mov
imul
jns
cmp
ret
mov
mov
stc
jle
inc
test
ret
cmp
pop
jmp
js
push
jo
jmp
cld
mov
cli
mov
dec
jbe
ret
popa
mov
in
popf
std
cmpl
test
cmpsl
pop
jno
dec
dec
or
pusha
add
fs
fldenv
jnp
es
mov
cmp
cs
dec
enter
arpl
pushf
dec
xor
aas
jp
hlt
cmc
icebp
xor
sbbl
cmp
in
scas
inc
sbb
jb
xchg
out
andl
ret
mov
sbb
fdiv
mov
xchg
xchg
out
lret
cmp
les
xor
test
fld
cmp
in
mov
xlat
test
pop
clc
ret
aas
xor
push
test
ret
in
shrb
adc
out
add
jb
mov
in
mov
adc
adc
jno
mov
sbb
cmp
wbinvd
aam
mov
mov
jo
or
setae
jmp
mov
push
lods
out
push
mov
mov
xchg
stos
out
dec
prefetch
inc
imul
out
rorl
cmp
ja
imul
mov
cmp
jle
jnp
dec
or
aam
in
int
nop
stc
loopne
jmp
js
mov
or
fnstsw
rol
add
fisttpll
decl
cld
mov
jmp
jle
mov
mov
xor
insl
mov
adc
cli
pop
js
jle
clc
sub
loopne
addr16
and
or
and
insl
in
add
bound
pop
jecxz
jecxz
je
in
shlb
bnd
sub
inc
popa
cmpsb
and
sar
shll
pop
ret
push
ret
cmp
adc
addl
add
push
xor
fistpll
mov
ss
adc
dec
mov
sbb
andl
xor
or
mov
jmp
lods
and
mov
xor
imul
outsl
or
mov
pop
pusha
aas
pushf
xchg
cmpl
xchg
add
dec
sbb
stos
into
repz
mov
jb
pop
cld
push
push
mov
mov
fstl
dec
jl
mov
jl
sbb
lods
loop
lock
subl
stc
jg
sbb
movsl
adc
push
in
jns
or
in
ds
mov
js
sbb
jg
mov
or
mov
jne
sbb
mov
and
aas
movsl
jp
mov
std
push
fstl
aaa
test
xor
mov
or
in
aaa
in
aam
mov
sbb
sbb
xor
dec
sub
ja
imul
mov
in
aaa
insl
jle
mov
sbb
mov
test
sub
jge
pop
lods
out
fmull
or
insl
mov
mov
xor
test
push
mov
hlt
and
pop
sub
in
jae
jmp
shll
fwait
lock
mov
and
cmc
cmp
and
movsl
lahf
icebp
jmp
sar
std
adc
cmp
cmpsl
jo
repz
adc
out
jnp
movsb
es
pop
adc
faddl
xchg
inc
popf
jle
mov
push
in
jne
clc
sub
or
into
push
xchg
js
jnp
imul
add
cld
into
mov
ret
sub
mov
mov
movsl
lea
mov
dec
jno
push
ret
sbb
jns
adc
rorb
in
lods
ja
push
jg
xchg
mov
gs
insl
lcall
pop
cld
jb
test
and
cmpsb
jnp
bound
sbb
push
faddl
push
fcmovnu
mov
push
sub
pop
rolb
enter
lcall
jg
fs
repnz
fwait
mov
mov
dec
inc
add
lahf
shll
push
add
stc
jmp
arpl
shl
adcb
stc
cmp
fsubl
push
je
test
fistps
pop
push
movsb
push
in
push
sbb
lods
jne
push
lea
movsb
pop
iret
lods
mov
movsl
and
mov
das
imul
jg
mov
dec
cmc
cmp
ror
clc
data16
mov
jno
push
adcb
std
and
test
pop
xchg
data16
cld
mov
xor
clc
mov
rcr
loop
cmc
shrl
jmp
icebp
ret
rorl
jmp
ja
jnp
imul
incl
xor
pop
cmpsl
int3
cmp
movsl
lret
daa
ficoml
xchg
insb
push
sub
add
mov
pop
pop
pop
inc
mov
icebp
mull
cltd
lock
ret
insl
sbb
jp
dec
leave
or
sub
loop
vphsubwd
repnz
stos
sbb
mov
stos
std
in
push
push
cwtl
inc
push
push
jmp
rorb
ja
mov
filds
or
cmp
dec
jnp
xor
ret
xor
xchg
mov
dec
or
test
xor
add
enter
scas
xor
push
or
repnz
cmp
cld
in
xor
shld
xchg
data16
out
inc
jo
adc
dec
cmpsb
or
dec
test
cmp
std
cmpl
sbb
mov
shr
enter
pop
mov
lcall
ja
mov
push
repz
push
xor
ret
inc
jmp
jno
mov
ja
arpl
das
shrl
adc
nop
mov
testl
sqrtps
cmpsl
repz
js
mov
into
and
iret
std
jae
adc
stos
sub
push
cli
inc
and
jecxz
xor
mul
movsb
rcr
out
cmp
xchg
dec
push
es
add
out
lds
clc
pop
cmp
repnz
idiv
popa
pop
push
xchg
mov
push
cmp
pop
std
push
jg
add
repnz
adc
mov
incb
call
and
sub
adc
js
repnz
shlb
jo
in
mov
test
push
mov
icebp
push
cmp
sarb
mov
xchg
mov
dec
jnp
pusha
lods
mov
jg
cwtl
push
xchg
fs
push
dec
flds
aam
in
pop
fldenv
gs
adc
mov
xchg
cmp
enter
imul
adc
xchg
push
test
add
xor
in
push
adc
jno
repz
std
sarb
pop
addl
cmpsl
add
fldcw
leave
pop
ljmp
movsl
stos
mov
xchg
in
pop
int3
sbb
mov
pop
xorb
fidivs
gs
dec
imul
jnp
mov
add
xchg
inc
jnp
out
rcrb
out
test
popf
cli
or
test
xchg
sub
fnstsw
pop
mov
ja
jne
xchg
pop
pop
loopne
test
lahf
or
std
in
cmp
fbstp
inc
gs
faddl
std
jmp
inc
or
in
xchg
mov
in
adc
jp
icebp
cmp
pop
or
js
aam
xor
push
sbb
imul
cmp
roll
dec
and
lret
sub
rol
and
jmp
mov
sub
lea
stos
adc
or
fisubl
mov
loope
jmp
jae
shl
and
mov
lea
adc
push
and
sbb
in
cld
adc
adc
aas
das
lds
cmp
mov
sub
or
sub
mov
iret
cmpsb
neg
xchg
pop
dec
in
cmp
loope
inc
cs
cmpsl
mov
push
inc
in
jns
imul
hlt
adc
dec
sti
lods
fnstenv
cwtl
xlat
and
in
xchg
cmp
hlt
call
notb
aad
repnz
mov
dec
incb
enter
jo
outsl
xor
cltd
mov
jge
inc
rol
mov
mov
sti
inc
std
push
pop
in
outsl
movsl
xor
out
cmpsl
xchg
test
sbb
ja
daa
shl
sbb
sbb
addl
orl
cmpsb
out
xor
cld
cmpsl
int3
mov
cli
cld
popf
jno
test
rcll
mov
xchg
xchg
pop
inc
inc
sub
push
test
cmpb
or
pop
lret
jge
mov
xchg
mov
adc
xlat
leave
hlt
pop
aas
jmp
loopne
add
cwtl
xchg
andb
lods
push
lds
and
int
mov
shl
adc
jl
icebp
out
jmp
pop
enter
fstpt
pop
cmpl
and
mov
loopne
repz
fsts
sub
sbb
in
ja
xchg
fsubrs
nop
mov
js
out
jmp
and
lcall
sub
sub
cli
jl
pusha
icebp
adc
test
sbb
cmp
jae
or
mov
hlt
pop
out
fdivp
adc
adc
fisubl
push
sub
mov
outsl
pop
cmpsb
xor
mov
xorb
in
hlt
jo
push
lcall
jns
push
add
icebp
add
push
ficoms
or
xorl
lret
fucomi
fdivrp
lock
pop
cmovnp
jmp
insb
cmc
ljmp
pop
repnz
pop
mulb
push
inc
ds
jo
aad
mov
or
imul
aas
cli
pop
and
insl
dec
gs
adc
movsl
mov
aad
inc
mov
and
lcall
sbb
pusha
out
loope
sub
add
xchg
arpl
pop
sti
rorb
gs
dec
mov
mov
out
and
popa
mov
idiv
ljmpw
int3
push
in
jne
shll
push
pop
hlt
sbbl
adc
push
out
jmp
xor
xchg
outsl
rcrb
inc
add
push
mov
jne
pop
mov
mov
pop
xchg
repnz
dec
mov
lcall
add
mov
enter
push
fstp
adc
stos
loopne
pop
not
adc
mov
loope
push
jno
xchg
leave
inc
stos
ds
jecxz
in
scas
mov
jg
xchg
fcmove
fdivr
cmp
dec
rclb
cmpsb
xchg
pop
dec
lods
sti
ror
mov
out
mov
in
lret
js
mov
jno
mov
bswap
aas
xchg
call
mov
mov
lock
xchg
cmpsl
push
xor
inc
push
fcmovu
jno
aaa
jb
fldt
inc
xor
xchg
insl
cltd
sti
dec
adc
shll
cltd
repz
clc
cmpsb
dec
or
dec
rcr
les
fs
sub
in
loop
cli
xchg
das
pop
dec
ret
mov
icebp
test
jle
adc
or
pop
int3
xor
daa
and
cmp
fxch
sbb
dec
pop
addr16
xchg
dec
sub
xchg
add
fdivr
mov
mov
or
shl
cmp
jnp
push
loopne
in
sbb
dec
push
repz
sarb
inc
sbb
push
vpand
enter
popa
push
pop
sti
aaa
inc
mov
pop
ja
sbb
xchg
push
xor
pop
jp
outsl
les
add
int3
icebp
in
cli
test
cld
mov
mov
xchg
push
xchg
fstps
dec
push
cwtl
mov
cmp
or
ljmp
pushl
stc
push
jno
or
in
out
xchg
xor
mov
xchg
jmp
loope
push
les
stc
les
mov
stc
incl
loope
inc
shlb
stc
mov
mov
shl
mov
stos
jnp
cmc
jo
ja
sbb
loop
mov
orb
hlt
outsl
aad
adc
mov
loopne
packssdw
subb
push
rcrl
and
pusha
repz
fsubrp
stc
inc
in
cmpsb
negb
jecxz
out
fcmovne
xlat
in
pop
test
in
aas
push
mov
jl
xlat
jae
std
mov
lea
mov
sbb
movsl
aas
ror
push
in
cmp
sbb
sbb
daa
pushf
or
add
repz
imul
jge
daa
ja
dec
jmp
fcompl
stos
insb
xor
xchg
sbb
js
sbb
int3
mov
adc
popf
xchg
aas
push
xchg
xchg
jl
daa
cltd
daa
out
out
mov
cli
and
ja
sub
sub
add
in
cmp
push
jnp
jne
ret
push
aas
jge
mov
out
inc
mov
imul
mov
adc
stc
push
cmp
enter
xchg
fucomi
je
decb
in
cmp
sbb
in
sub
adc
pop
loope
pop
es
sbb
and
aas
jb
sti
dec
fs
lea
ret
pushf
jp
sbb
pop
mov
fcomps
bound
ss
mov
pusha
adc
mov
inc
lds
adc
imul
mov
push
adc
mov
and
ret
mov
add
xor
mov
push
or
stos
mov
add
addr16
adc
push
cmp
sub
shlb
movsb
and
popa
cmp
pusha
and
pop
test
sub
out
cmp
jp
fnsave
mov
das
out
mov
mov
pcmpgtw
mov
xorl
sbb
push
xlat
sbb
push
sub
movsb
lods
mov
decb
dec
mov
into
pop
int
xor
data16
sbb
rolb
and
repnz
dec
pop
adc
imul
dec
push
sahf
mov
adc
in
iret
popa
jae
ret
push
mov
cli
mov
sub
ret
stc
sti
dec
jns
std
dec
jge
lods
test
push
arpl
rcrb
leave
int
in
insl
jmp
cmpl
pop
ljmp
les
js
mov
in
adc
jge
push
push
pop
shl
sar
arpl
mov
je
std
jp
jo
pop
sti
lods
inc
or
push
adc
rcrl
aam
pushl
gs
sahf
pushf
lods
xchg
push
repnz
les
in
insl
aam
sti
jge
std
outsb
outsl
xchg
fucomp
loopne
popa
out
push
cmp
mov
mov
int3
inc
test
popf
cld
jae
push
mov
pop
sbb
mov
in
test
cwtl
test
mov
add
xchg
fisubrs
sti
lret
lret
mov
ficompl
push
movsb
ljmp
aam
pop
lret
dec
or
jmp
out
push
sbb
rorl
lods
aad
stos
sbb
dec
stc
sarl
shlb
repz
call
pop
popf
incb
ret
cmp
arpl
mov
push
jg
das
sti
lds
dec
aaa
push
decb
inc
repnz
in
shrl
push
aam
daa
fcmovne
gs
lock
movsb
leave
add
sub
cmp
or
aad
stos
testb
xor
popf
or
or
adc
shrb
lret
mov
stc
cmpsl
xor
cltd
xor
adc
icebp
mov
jecxz
std
incb
insb
scas
or
jmp
loope
sti
jecxz
enter
sub
sahf
inc
in
mov
pusha
fcmovbe
adc
fld
dec
int
pop
jae
xor
dec
fmuls
mov
mov
movsl
lods
or
xchg
xor
fadds
mov
les
and
shrb
icebp
add
loope
std
arpl
sti
mov
sub
je
rorl
fs
pop
xchg
inc
aam
lods
jns
push
or
push
movsb
jo
fs
sub
shll
daa
mov
iret
aaa
push
into
add
scas
rorb
test
daa
push
ss
int3
into
mov
xor
cwtl
xchg
inc
mov
dec
inc
out
in
mov
dec
mov
cs
insb
nop
mov
add
or
lea
scas
popl
inc
xchg
mov
loope
sbb
push
adc
adc
data16
dec
aaa
in
pop
pop
fcomps
aam
movb
and
dec
shlb
int
jns
fs
or
repz
mov
popa
popf
add
sahf
imul
pop
out
sub
cmp
pop
stos
mov
lods
mov
mov
pop
imul
adc
test
bound
scas
movsl
cmp
add
sub
mov
enter
xchg
add
outsl
cmpsl
dec
mov
xor
cmpsb
mov
lds
fistl
mov
adc
inc
imul
xor
and
jmp
jno
and
mov
insb
cmp
shrl
cs
and
imul
int3
add
leave
sub
lret
cmp
cmp
or
out
mov
push
fwait
popf
add
stc
push
fsubl
inc
std
enter
xorb
iret
jns
clc
inc
in
lret
dec
xor
dec
inc
push
movntq
mov
movsbl
fchs
jns
mov
frstor
add
movsl
arpl
ficompl
loope
mov
push
sub
fisttps
pop
icebp
fdivrl
mov
fucomi
pop
push
cmc
mov
decb
in
mov
add
push
int3
xor
adc
sbb
sbb
mov
mov
popf
add
push
xchg
das
pop
cmc
inc
add
jp
and
dec
sbb
andnps
push
cmp
bound
insl
int3
cli
shld
das
jo
shl
call
popf
pop
jo
pop
popf
pop
or
fucomi
add
xchg
pop
lret
mov
lock
fwait
jbe
test
pop
xchg
mov
add
decb
xchg
inc
fs
repnz
pop
lret
lea
faddl
or
orl
mov
cmp
enter
sti
cmp
stos
pop
push
loop
xchg
mov
dec
sti
cmpl
dec
popf
scas
jb
dec
jge
rcll
fidivl
mov
dec
mov
test
sbbl
lods
imul
fstps
in
data16
dec
mov
xor
sub
aas
jle
jecxz
into
cltd
sbb
inc
mov
fsub
in
xchg
xchg
inc
add
push
pop
lret
dec
popa
mov
and
movsb
sbb
orb
pop
xor
inc
lahf
jnp
dec
fidivl
dec
in
and
or
in
cwtl
mov
and
or
jo
pop
or
mov
sub
cmp
pop
jge
leave
das
ja
dec
sub
push
dec
add
cmp
sub
jbe
sub
call
fdivr
data16
mov
cltd
dec
or
inc
rclb
out
cmc
mov
dec
mov
gs
dec
aaa
mov
sti
icebp
jle
cmc
jmp
scas
mov
cwtl
test
dec
stos
inc
mov
push
dec
mov
and
mov
aad
mov
fsub
push
sbb
insb
adc
dec
loopne
mov
or
idivl
or
mov
in
into
add
push
aam
test
imul
lds
sar
cmp
sahf
inc
enter
int3
addr16
fiaddl
fwait
cld
ror
jns
testl
mov
jmp
and
jg
xor
in
adc
fs
push
xchg
jmp
iret
push
movsb
and
sti
fwait
lock
shrb
xlat
icebp
xchg
mov
cmpsl
jno
push
jge
and
scas
or
inc
jle
lret
and
mov
cmp
loop
pushf
movsb
pop
pop
sarl
imul
sbb
adc
mov
fidivrs
xchg
or
mov
mov
fistl
push
shll
imul
mov
inc
pop
rcrl
jmp
add
xchg
xor
aaa
aam
lods
lods
fwait
int3
mov
lret
xchg
push
sbb
inc
imull
sti
mov
decl
sub
loope
testl
mov
or
sub
stc
in
lahf
outsl
add
out
xchg
adc
lcall
clc
mov
jo
shrl
xchg
or
cmp
pop
push
incl
and
push
fstl
fists
in
ss
jl
nop
xchg
dec
fdivr
sbb
xchg
inc
test
mov
sti
push
and
data16
lds
or
pop
jbe
lcall
shll
or
flds
ja
fisubl
add
int3
daa
inc
js
stc
stos
jo
in
xor
sub
repnz
mov
adc
loope
sub
jae
outsl
push
das
shrl
mov
pop
test
push
push
call
lds
addl
lods
push
add
js
add
cmc
inc
jmp
ljmp
push
fnsave
aam
inc
divl
out
push
frstor
lods
add
or
adc
jge
cmc
and
cld
mov
mov
js
cmp
push
flds
rolb
rorl
adc
push
out
lret
cwtl
in
stos
stc
xchg
cmp
sti
and
mov
aas
push
fldt
in
mov
or
lcall
out
iret
dec
push
xchg
inc
fbld
sbb
mov
les
lods
mov
push
cli
mov
jmp
roll
shl
mov
addr16
adc
stc
mov
mov
ror
bound
data16
mov
popa
sub
incb
mov
mov
xorb
and
out
mov
js
les
or
or
in
insb
cmc
loope
and
in
fmuls
rclb
sub
xor
adc
cmpsl
ret
arpl
sbb
jp
roll
sti
dec
ret
mov
sbb
cmp
add
adc
add
cmpsb
loopne
jb
mulb
repz
ja
lds
rcl
lock
mov
xor
xlat
xchg
mov
cmp
pop
dec
fcompl
xchg
aas
or
and
es
cmp
adc
sarb
js
pop
mov
js
or
lods
mov
fstps
cmc
add
pusha
and
ja
mov
dec
jle
arpl
js
add
push
stos
popl
pop
sarb
sub
shll
sbb
sbb
or
sarb
jg
pop
stos
dec
fisubrl
pop
mov
pop
push
pop
pop
stc
mov
push
jbe
add
dec
icebp
and
sub
xlat
mov
loop
push
jns
arpl
add
jg
sub
test
sub
add
mov
xchg
adc
pushf
sbb
in
jo
lret
stos
lock
cmp
sbb
jae
adc
push
sti
scas
shl
lret
fstpl
cmpsb
adc
int
orl
cmc
inc
pop
lret
clc
xor
rclb
pop
push
or
inc
jnp
pop
mov
inc
std
xchg
cmc
hlt
fsubp
jbe
sbb
jno,pt
add
cmp
sub
js
pop
imul
jmp
sti
xchg
lods
pushf
inc
and
and
cli
cmc
loopne
mov
push
or
cltd
xchg
push
test
mov
dec
xorl
scas
xchg
cld
aad
rol
push
jge
cld
mov
rcll
cld
movsb
aad
mov
movsl
test
out
addb
sub
fnstsw
mov
mov
sbb
test
mov
frstor
mov
jb
in
or
repnz
fstl
pushf
push
enter
movsl
int3
mov
pusha
jmp
mov
sub
sbb
sub
in
mov
or
dec
sub
mov
pop
pop
jg
lock
fcoml
in
lock
nop
les
es
loope
gs
sub
out
push
hlt
cmp
jecxz
ljmp
insl
lods
int
sbb
mov
inc
lock
incb
pop
imul
dec
imull
fsubl
mov
out
mov
arpl
sub
xor
and
fsts
inc
or
data16
mov
mov
cmpsb
and
cld
add
imul
icebp
sub
loope
xor
bswap
pop
cmp
out
mov
repnz
movb
cli
inc
and
clc
repz
cmp
repz
lods
lods
lds
loop
push
test
lcall
or
ja
fstps
into
cmpsb
fnclex
cs
mov
mov
mov
cmp
dec
jmp
or
iret
ffreep
xchg
test
sbb
stos
lret
lret
inc
xor
pop
and
mov
orb
repnz
jp
inc
xchg
sub
cmpsl
xchg
mov
xchg
aaa
inc
out
cmpsl
mov
outsl
mov
sti
popf
mov
negb
lret
mov
xchg
aam
rcr
xor
adc
push
stos
outsb
out
inc
or
sbb
daa
stc
push
shr
xchg
dec
ficoml
cli
push
lea
push
cmc
les
push
mov
push
mov
lods
cmpsl
jmp
mov
pop
div
nop
dec
pop
sbb
pop
in
shll
mov
or
pushf
mov
in
cld
leave
mov
xchg
outsl
or
lock
dec
out
sarl
std
iret
pusha
mov
and
inc
ss
loope
pop
gs
mov
lock
out
movsl
jne
push
stc
jecxz
dec
dec
xchg
cmp
add
ss
adc
bsf
rcl
add
sub
fs
fcompl
sub
adc
jmp
and
dec
push
mov
fidivrs
jmp
cmpsl
test
cmc
loope
dec
nop
xor
jl
addr16
icebp
jno
add
ds
imul
subb
push
popf
cli
or
xchg
and
mov
movsl
push
pop
adc
or
dec
call
adc
aas
psubusb
push
movsl
cld
imul
push
dec
loopne
sub
cmpsb
xabort
cmp
repnz
adc
inc
mov
movsb
and
sub
test
mov
cltd
mov
xchg
push
xchg
cmp
out
sub
mov
dec
in
dec
aad
jae
movsb
dec
and
xchg
ja
out
or
jmp
fcomps
iret
dec
mov
lret
or
cltd
cli
mov
pop
mov
jb
mov
mov
push
ret
push
jnp
cwtl
das
outsl
jns
and
mov
push
mov
xlat
push
orl
cmp
psraw
das
std
outsb
addr16
lock
out
jne
push
mov
je
fcmovnu
pusha
insl
std
sar
mov
dec
shlb
jbe
enter
ret
mov
jmp
stc
mov
mov
inc
or
or
xchg
jl
fs
xchg
xchg
lahf
clc
mov
ficompl
popl
mov
add
and
sbb
adc
adc
push
insb
js
sbb
jno
push
push
rcl
mov
and
mov
loopne
push
sub
xchg
das
fnsave
jne
dec
mov
push
add
sbb
push
std
mov
es
sub
jb
or
sub
mov
sbb
fs
sti
push
jecxz
jge
aad
cmp
sti
push
jno
cmc
jecxz
pop
xchg
mov
orb
call
jo
lea
lahf
in
out
std
dec
mov
mov
ret
cmp
or
xchg
add
mov
lahf
loopne
movsb
xchg
pop
mov
loop
je
aas
adc
int3
test
mov
sbb
mov
mov
rcr
mov
das
pop
inc
fidivl
aas
mov
ljmp
fs
gs
in
mov
movsb
iret
test
hlt
clc
test
mov
xor
sub
shrb
pop
aam
aad
std
cwtl
std
inc
movsb
je
incb
rol
iret
sbb
pop
fcomi
push
xlat
add
test
sub
aam
cmp
jecxz
cmp
xchg
mov
add
adc
xor
push
sub
mov
imul
rcr
jmp
mov
in
call
xchg
xor
subl
cwtl
mov
cmpsl
fstpl
fbstp
int3
popf
std
mov
sahf
ja
sbbb
push
mov
adc
pop
lret
lret
mov
fnstenv
mov
aad
testb
dec
mov
xchg
cmc
pop
out
ja
and
wbinvd
adc
add
fsubrs
adc
in
lret
in
mov
jns
test
xor
xorl
lods
pop
cmc
ss
jmp
cmp
pop
jbe
cmp
lahf
shll
mov
lds
xchg
and
push
cld
lea
sbb
pushf
add
mov
cmp
stos
lret
movsl
inc
mov
cli
jge
mov
mov
out
es
lea
leave
push
cltd
xchg
int3
mov
lock
sbb
js
push
push
andb
or
icebp
leave
mov
xchg
pop
stos
in
pop
lods
jmp
rcl
das
notb
int
test
fsub
mov
movsl
jecxz,pn
xchg
dec
add
sub
pop
sbb
dec
fucom
aad
hlt
xchg
push
adc
aad
sbb
cmp
incb
je
sahf
jge
mov
inc
out
int3
add
jno
enter
popf
imul
enter
aaa
xor
fcmovne
dec
xchg
inc
or
add
dec
shrb
shl
inc
in
jno
sub
sahf
sub
jnp
sbb
xchg
dec
lods
dec
loopne,pt
scas
cmc
jb
or
pop
fwait
cmp
aas
sub
xor
cmp
test
add
pop
lods
lods
jmp
test
mov
sbb
push
ja
mov
lods
fwait
ds
cmp
js
or
mov
push
push
sub
or
lods
inc
sbb
test
mov
mov
fs
push
sub
rol
pop
movsw
adc
fstl
adc
in
push
adc
sub
loope
loope
in
stos
fbld
lret
icebp
dec
mov
and
pop
arpl
adcl
in
mov
push
add
call
ret
dec
lret
add
addr16
stos
mov
add
popf
fcom
mov
mov
sti
pusha
pop
dec
xchg
sbb
in
push
jmp
sub
sti
js
push
dec
mov
jno
push
and
cmp
pushf
std
fldl
dec
pop
mov
loop
aam
push
xchg
sbb
clc
xlat
inc
rolb
dec
bsf
sbb
sbb
jmp
and
popa
xor
cmp
mov
pop
lods
lods
sti
mov
cmpsl
cmp
add
mov
in
daa
data16
mov
jnp
out
sbb
rcrb
adc
adc
adcl
jle
add
flds
or
stc
aaa
dec
mov
test
rcr
sub
jmp
mov
cmp
cmpsb
fisttpll
cmp
cmp
sbb
arpl
inc
jae
test
lods
fisubl
pusha
aaa
or
sub
in
add
adc
sti
sbb
std
aam
add
fmull
test
adc
lret
rclb
in
js
and
cli
or
divl
add
clc
cmp
icebp
push
add
jnp
sti
xor
mov
sarb
shr
mov
push
xchg
aam
popf
xchg
jmp
std
ficoml
aad
xchg
mov
mov
out
popf
cld
jmp
ror
idivl
outsl
xchg
mov
movsl
pop
mov
movsl
in
stos
cmpb
popa
lea
jns
sbb
jbe
inc
iret
repnz
repnz
mov
imul
cwtl
jmp
or
xchg
out
push
lea
or
sub
adcb
cmpsl
sti
dec
sbb
and
sbb
or
popf
cmpsb
enter
mov
xchg
mov
ja
cld
in
adc
loopne
lods
mov
pop
cmp
out
popf
cmp
in
data16
push
cmp
jo
and
nop
mov
movsb
and
cwtl
repz
pusha
js
cs
xor
lock
shll
pop
inc
dec
int
out
ss
out
cmp
dec
pop
popf
mov
loope
push
push
insb
roll
lcall
push
mov
fwait
mov
call
mov
icebp
lahf
ret
ret
pop
xor
xchg
in
in
dec
push
fs
stos
in
push
sbb
mov
cmpb
pop
adc
lds
pop
cmp
xor
outsl
rorb
mov
or
clc
lock
xor
mov
or
dec
dec
fildl
dec
mov
out
adc
lret
lods
jg
or
mov
loope
push
ret
andb
xor
and
mov
jo
cld
lret
adc
xchg
xor
mov
jns
dec
push
dec
add
mov
jmp
arpl
cmpsl
push
rclb
stos
cmc
imul
fldl
push
push
adc
or
nop
jg
push
cmp
mov
repz
int
cli
movsb
pop
push
lret
in
add
jmp
or
stos
xchg
data16
das
push
push
jge
aam
lods
xchg
ja
lret
and
popf
in
std
push
pop
jmp
dec
movsl
jae
sbb
jns
xor
push
es
out
mov
xor
pop
adc
int
mov
icebp
js
or
popa
sub
jl
pop
and
gs
lea
repnz
lea
mov
imul
jno
lret
pusha
clc
out
xchg
out
sahf
out
into
push
xchg
xchg
outsl
mov
ja
mov
pop
mov
dec
out
jmp
mov
lods
xor
mov
adc
mov
inc
loopne
shl
inc
pop
mov
outsb
mov
lret
pop
mov
shrb
mov
js
les
cmp
dec
cltd
xor
cli
loope
les
stos
jns
stc
add
lcall
xchg
les
jmp
xor
mov
jbe
cmp
jae
jge
loope
dec
dec
dec
mov
pop
into
pop
push
xor
cmp
test
or
jp
and
inc
jl
aam
add
mov
xor
data16
push
lea
out
lret
inc
lods
dec
push
push
inc
inc
movsb
cmp
sahf
dec
loopne
pop
cli
lcall
pop
dec
cmpsb
and
enter
inc
icebp
xchg
inc
lea
adc
aam
mov
lods
mov
sbb
dec
movsb
sbb
sub
daa
insl
mov
frstpm(287
insl
in
fsubp
adc
add
mov
inc
xchg
mov
repz
fldl
testl
lret
jle
popa
movsb
loope
gs
or
sbbl
out
xlat
pop
std
adc
jle
inc
negb
addr16
sar
std
push
in
dec
dec
insb
adc
sti
stc
add
push
das
cltd
push
mov
cwtl
in
cli
sbb
jge
push
insl
fdivrl
sbb
mov
jns
pop
mov
cmc
add
jg
and
mov
xchg
pop
jmp
lahf
jmp
mov
rorb
pop
sti
and
sub
xchg
outsb
fstl
and
xchg
pusha
inc
ss
lods
fwait
cwtl
mov
jns
mov
adc
adc
or
pop
fcompl
fnstenv
ljmp
pop
ljmp
cmp
mov
mov
jns
cmp
sub
adc
movsb
in
mov
pop
int
pop
xor
repnz
mov
fisttps
fcmovne
mov
mov
sub
cli
cld
and
js
adc
or
sarb
inc
shll
std
aad
in
push
lret
lock
pushf
push
add
imul
icebp
jne
std
dec
cmp
test
ss
lock
add
rolb
sbb
in
aas
aas
sbb
mov
sub
les
push
jl
mov
orb
mov
jae
dec
mov
inc
xchg
lret
popl
insb
jge
repz
shlb
test
out
sbbb
test
jno
mov
sub
decb
in
pop
js
add
jmp
adc
stc
mov
and
push
push
dec
dec
mov
clc
push
xchg
xchg
dec
jae
aaa
mov
or
imul
mov
lret
or
cld
ja
sbb
mov
jmp
cmp
in
adc
inc
adc
fs
mov
inc
inc
and
xor
je
popf
push
and
mov
pop
push
lret
push
sti
and
and
push
mov
fwait
mov
add
rorl
in
adc
int
lahf
ja
xchg
adc
cmc
mov
leave
push
xor
out
mov
jle
push
fiadds
inc
xor
mov
dec
clc
jl
out
movsl
or
add
pop
popf
rcll
cli
por
pushf
iret
jo
add
push
pop
mov
sti
mov
or
fisttpll
adc
mov
lret
mov
popf
mov
ret
xchg
in
dec
in
insb
xchg
mov
popa
cmp
movsb
mov
pop
scas
sbb
xchg
outsl
ret
pusha
ror
add
aaa
mov
mov
jnp
testl
ja
dec
aam
shl
push
leave
xchg
and
pop
add
lds
push
or
loop
xor
fstps
out
lret
popf
rcrb
repnz
cltd
jns
int
jl
or
ret
xchg
cli
or
negl
stos
xor
jmp
adc
mov
mov
jbe
mov
mov
cwtl
cmpsl
iret
cmp
pop
push
pop
inc
cmp
int3
inc
in
jns
insb
imul
in
es
sti
sub
popf
shrb
mov
cmp
dec
lea
mov
dec
test
ror
sbb
loope
adc
pusha
clc
in
or
in
loop
mov
mov
std
jno
push
into
xchg
xor
out
je
mov
sti
add
loope
fnstsw
dec
sbb
inc
ja
adc
test
test
rorb
xchg
push
sahf
inc
jo
idivb
cli
mov
jne
cmc
add
fidivl
loop
jmp
mov
mov
mov
stc
mov
ds
fs
mov
cltd
or
lahf
shll
inc
or
and
mov
mov
ret
inc
and
and
push
mov
mov
test
sbb
mov
in
pushf
xchg
decl
sbb
ds
test
or
or
movsl
xor
cmp
mov
sar
mov
icebp
loopne
jge
cmp
ja
lock
mov
mov
call
jnp
decb
mov
mov
imul
pop
pushl
ret
jg
cmpsl
mov
dec
jg
loope
aam
std
inc
aad
stc
or
mov
cmpsl
fmul
popa
enter
aam
shr
in
and
dec
and
mov
mov
nop
xor
in
stc
xchg
in
mov
dec
dec
add
or
mov
loop
out
or
bound
cmp
dec
mov
roll
gs
and
jp
mov
push
repz
xchg
popf
ljmp
mov
mov
aaa
fs
and
mov
sbb
and
loope
cmp
fidivrs
mov
sqrtps
shlb
add
sbb
iret
xor
in
jbe
push
aam
inc
adc
mov
outsl
testl
or
movsb
lret
sub
mov
xchg
jmp
cli
ret
in
testl
mov
push
add
ljmp
add
mov
pop
xchg
add
and
and
jge
pop
test
xchg
inc
movsl
dec
out
pop
or
jo
insl
test
test
cltd
pop
ja
sbb
ret
popf
jns
out
into
mov
xor
in
testl
shll
dec
insb
jno
js
cmpsb
and
ret
xor
mov
aas
or
and
push
icebp
lds
test
les
aaa
jns
jl
dec
subl
push
jno
xchg
sarl
jecxz
scas
mov
or
fimuls
loopne
mov
aam
sbb
shll
fistpl
mov
rcrl
or
scas
std
or
adcl
std
jl
mov
pushf
dec
movsb
xchg
out
jmp
pop
ror
aas
cld
in
lret
push
sub
icebp
lahf
push
dec
pop
jbe
rcll
das
mov
fsubrp
dec
dec
ret
mov
fsubl
lea
xor
inc
jbe
jmp
and
push
and
cmpsl
mov
mov
cmp
jmp
and
mov
mov
loope
mov
mov
lcall
mov
leave
mov
int3
cmpsl
and
test
gs
mov
movsl
stos
inc
push
cmpsl
int3
jle
in
and
sub
jns
call
rorl
and
dec
fimuls
aad
jmp
fstps
jnp
xor
dec
ret
in
mov
es
shrb
dec
jns
cmpl
jb
les
aaa
sbb
jle
jmp
in
shl
mov
loope
fucom
movsl
and
and
cmp
xchg
out
mov
ss
and
xchg
ds
test
jecxz
cmpl
lock
popw
dec
test
push
in
lock
mov
ret
adc
loope
jo
aam
or
sub
add
shlb
jle
mulb
mov
cmp
inc
aam
xor
pusha
adc
sbb
jno
imul
xchg
lahf
sarl
and
add
clc
push
lcall
mov
lods
outsl
ret
pop
cmp
test
mov
xchg
add
out
xchg
cmpsb
clc
shl
cmp
mov
cmp
stos
or
mov
and
cld
mov
imul
adc
loop
shr
cs
cmp
and
imul
xchg
add
jg
cld
jns
and
mov
jl
inc
cmp
scas
lock
push
and
lcall
popf
cmp
rcrl
push
and
mov
mov
xchg
test
loopne
gs
out
repnz
add
fdivl
mov
pop
jne
test
inc
mov
xchg
jb
ret
sbb
loop
mov
and
xchg
std
out
inc
adc
add
or
mov
popf
pop
lret
stos
int
loop
push
lea
sub
stos
mov
mov
jbe
xchg
insb
andl
add
push
push
stos
outsb
stos
sbb
cmp
pop
adc
mov
addr16
or
or
roll
aas
mov
int3
push
ja
shll
mov
shl
aad
inc
subl
shrl
repnz
mov
dec
mov
xchg
xchg
aaa
lea
or
iret
mov
stos
sbb
in
xor
loope
mov
mov
aam
rol
rcrb
in
aad
mov
mov
ret
xor
addr16
outsb
jge
and
and
lods
xchg
imul
addr16
cld
mov
xchg
and
in
decl
xchg
add
aam
sub
dec
sub
shr
mov
inc
push
or
and
mov
lods
cmp
clc
repnz
fdiv
pop
insb
dec
xchg
dec
mov
mov
xorl
lods
in
dec
lods
aam
mov
and
xchg
mov
insw
js
aad
rorl
push
jns
in
cli
shrd
cld
ret
enter
dec
sub
dec
in
push
cmp
sti
push
sub
nop
dec
sbb
xor
fsubs
mov
mov
shlb
outsl
lock
in
push
cld
mov
jbe
lods
jns
xchg
fidivl
cmpsb
icebp
xor
rolb
adc
xor
cmpsb
pop
mov
xchg
cs
fstl
lahf
stc
cmc
int3
xchg
pop
xor
or
add
mov
ret
movsb
pop
dec
mov
fwait
xchg
notl
and
ret
push
je
dec
mov
inc
push
xor
pushw
and
jecxz
xor
lea
push
lahf
test
adc
out
jp
fwait
call
mov
lret
scas
jmp
es
leave
jnp
repnz
movsl
std
rorb
pop
out
sbb
xchg
rcll
leave
mov
stc
leave
enter
and
xlat
adc
int
or
sarl
sti
cltd
mov
jmp
sbb
cmpsl
enter
cld
aam
cwtl
and
movsl
sbb
aam
cs
jl
push
ja
jmp
pop
test
lahf
dec
clc
stc
aas
push
sbb
mov
lahf
push
inc
jg
xor
jle
mov
or
negl
rclb
mov
mov
cld
decb
dec
pop
push
push
push
sbb
pushf
jg
jmp
and
mov
push
mov
into
adcl
mov
in
sti
dec
lcall
sahf
xchg
orb
enter
andb
inc
rorl
dec
jne
stc
cmp
push
mov
lret
push
lods
cmpl
inc
into
nop
test
cmpsb
push
xchg
mov
mov
mov
cli
movb
fbld
mov
sbb
push
sub
int
mov
popf
cmpsl
add
stc
mov
sahf
stc
xchg
in
arpl
ljmp
cmc
ret
cltd
xchg
add
mov
inc
sub
add
pop
sahf
stos
xchg
pushf
std
popf
mov
jbe
testl
lock
int3
or
jae
ja
mov
sub
mov
dec
cs
test
clc
ret
cld
fbstp
fsts
cmp
xchg
out
mov
add
in
xorl
dec
dec
les
in
cmp
leave
mov
clc
or
mov
sar
sti
pop
inc
push
std
ficomps
xchg
out
fnstenv
sbb
mov
push
jb
cltd
cmp
sub
es
xchg
add
jmp
daa
in
cld
cs
jecxz
fbstp
mov
pop
xchg
in
enter
aaa
fsubrl
mov
fmull
aaa
xor
sbb
push
xchg
mov
xchg
xor
sbb
dec
addr16
in
loop
stos
jecxz
adc
movsb
lea
es
push
jge
add
and
loop
clc
sahf
or
cmp
push
dec
shlb
cmp
xor
popa
xchg
mov
fnstenv
mov
cmc
mov
in
addr16
cmp
js
inc
jl
scas
mov
jns
into
cmp
dec
mov
or
stc
into
mov
sbb
inc
test
sahf
pop
call
ret
mov
dec
aad
js
mov
or
ret
mov
mov
jbe
in
inc
cmc
lret
xchg
stc
scas
push
iret
mov
stos
popf
call
clc
jns
out
pop
adc
in
push
jno
int
mov
fbstp
lea
stos
xchg
cmpl
pop
stos
jnp
shll
mov
outsb
js
and
dec
cmpsl
sub
stos
mov
insl
imul
movsb
out
adc
div
and
mov
andb
jmp
jmp
xor
and
mov
test
scas
adc
leave
mov
and
icebp
xchg
mov
mov
stos
loopne
neg
push
loope
cs
testb
fiaddl
adc
icebp
add
push
imul
rclb
dec
xlat
ja
sub
iret
jo
and
cmp
lret
stos
les
mov
or
fs
mov
jne
scas
addr16
and
pop
dec
movsl
fiaddl
jg
test
out
cwtl
addr16
loop
call
fldt
test
fidivrs
int3
scas
or
jne
cld
mov
icebp
mov
sti
push
insb
cmp
in
sbb
sbb
inc
mov
xor
and
mov
pop
mov
shlb
sub
jle
and
out
mov
pop
push
sti
xlat
and
fstl
xchg
mov
xchg
outsb
les
outsb
push
push
adc
les
aam
data16
nop
movsb
popa
cli
ficomps
mov
xchg
mov
test
aas
loope
cwtl
xor
stos
in
icebp
mov
ljmp
lahf
int3
mov
test
mov
jle
add
cmpsb
pop
into
pop
xor
add
pop
mov
jb
call
adc
jge
shlb
pop
lds
push
bound
dec
es
data16
xchg
or
pop
sub
add
push
lret
lahf
mov
dec
add
mov
fisttpll
enter
cmpb
inc
data16
jns
jmp
sub
cmp
sbb
xor
out
mov
test
mov
outsb
xchg
js
jno
or
pop
jbe
sbb
cmp
movsb
gs
es
aas
in
rcl
pop
mov
sub
cmpsb
adc
lds
lret
sahf
cwtl
dec
out
aad
mov
push
fstl
addr16
imul
imul
mov
and
sub
js
jne
cli
cmc
xor
push
test
fs
jmp
jb
decl
or
ss
in
lea
inc
in
mov
jl
jge
es
or
fyl2xp1
mov
lret
pop
out
sbb
cmpl
jno
and
push
sbb
ret
stos
pop
xor
dec
rolb
sub
inc
lds
lahf
movsl
pop
xchg
or
push
add
xor
leave
lods
in
lret
mov
mov
frstor
nop
sbbb
xlat
and
xchg
push
scas
ljmp
mov
adc
mov
add
xchg
xor
loop
out
int3
cmc
xchg
shll
ds
add
mov
sub
testb
shrl
movsb
aad
aas
sbb
pop
sbb
lahf
rclb
dec
test
dec
inc
popa
dec
mov
adc
dec
dec
sahf
mov
jns
notb
sbb
xor
dec
aaa
fiadds
inc
or
cmc
push
mov
mov
sub
dec
cmp
inc
adc
stos
pop
sbb
stc
or
and
xchg
cmp
aad
mov
adc
and
dec
pop
ret
mov
ja
in
sbb
scas
sbb
aaa
cmpsl
push
jns
sbb
xor
xchg
mov
les
shrl
lahf
in
mov
call
push
dec
cs
jmp
add
push
arpl
add
int3
std
mov
xchg
cmp
cmp
dec
enter
dec
leave
or
loope
scas
loope
inc
sub
adc
cmp
xor
lcall
jmp
out
pop
lret
xlat
push
add
adc
in
xor
fistps
mov
fwait
mov
push
and
enter
pop
das
xchg
pop
adcl
inc
mov
add
loopne
mov
mov
cmpsl
cld
outsl
push
stos
cmp
das
adc
jle
mov
xchg
stos
pop
arpl
mov
and
cmc
adc
or
sbb
sti
xchg
mov
aas
popa
adc
sti
and
xchg
ret
cli
pop
into
mov
cmp
into
jmp
mov
mov
add
mov
aad
fdivl
out
fnstenv
js
std
sbb
jecxz
aad
push
cmp
jns
push
mov
pop
add
inc
arpl
pop
dec
pop
call
mov
pop
in
rorb
jae
movsb
jns
jmp
popa
xor
xchg
lcall
add
lret
es
pop
ja
and
hlt
cmp
mov
cmpsl
add
scas
icebp
xchg
int
into
mov
cmc
nop
loopne
arpl
dec
and
icebp
jns
popf
pop
cwtl
jmp
mov
push
cmpsb
sbb
xor
dec
popf
ds
ret
push
adc
mov
cwtl
inc
in
mov
loope
negb
mov
scas
xchg
fisubrl
or
cs
add
push
js
movsb
fidivl
es
dec
repnz
cmp
and
mov
mov
sbb
xchg
jl
bound
popf
inc
cmpsb
or
cmp
jmp
mov
dec
rcll
fdivrs
lock
popf
cmp
mov
lods
sbb
sbb
push
js
jbe
jge
lahf
adc
nop
sti
push
xchg
sbb
test
jbe
jmp
mov
jb
addr16
pop
iret
jbe
and
inc
cltd
cmp
pop
jnp
inc
adc
lods
nop
pop
pop
arpl
dec
push
out
push
pop
lods
icebp
scas
loop
xchg
jne
int
xchg
xor
in
out
and
adc
pop
dec
movsb
or
or
es
mov
rcrl
push
dec
rol
popa
fnstcw
push
adc
mov
mov
cwtl
xchg
arpl
test
and
push
jae
or
mull
dec
xchg
shll
xor
mov
xor
jnp
xchg
jno
cli
jo
jle
sbb
inc
sbb
orl
fnstenv
push
pop
sti
mov
cld
jg
mov
push
in
add
movsb
xor
xor
aam
out
cmpsb
fisubrl
orl
and
add
mov
out
push
mov
add
lcall
imul
cld
mov
xchg
icebp
add
jmp
push
mov
sti
and
out
stos
sti
jbe
je
mov
in
inc
mov
push
divl
dec
bound
icebp
rcll
mov
cs
popa
push
jo
inc
jne
out
dec
jl
imul
int3
sbb
jg
mov
int3
push
in
lret
stos
xor
repnz
push
loopne
sub
enter
add
sbb
cmp
inc
add
dec
sub
inc
dec
cltd
pop
pusha
xchg
or
ret
mov
fst
or
fs
cmpsl
shr
push
scas
lods
dec
rorb
es
int
mov
in
mov
std
test
mov
mov
sbb
andb
pop
fldenv
rcr
xchg
sbb
lods
into
xchg
mov
cmp
or
ret
jp
lcall
test
ret
cmpsb
sbb
sub
jo
popf
popf
jmp
lods
shll
lods
ret
add
fisubs
cmp
or
push
stos
add
rcl
push
sbb
mov
popa
pop
cmp
dec
adc
or
jns
jb
jno
and
test
rorb
cmpb
or
in
jne
adc
insb
dec
jmp
or
push
adc
in
mov
icebp
or
mov
add
dec
mov
sbb
dec
std
jb
popf
ds
cli
cmpb
adc
addl
sub
pop
sub
shll
cs
out
adcb
jle
xor
loop
dec
in
pop
jae,pn
cltd
xchg
jae
jp
jno
repz
incb
sub
jns
ret
push
jnp
data16
in
mov
test
insl
mov
add
jb
and
cli
pusha
push
or
ja
sub
fsubp
add
pop
mov
and
mov
jns
mov
xchg
add
stos
mov
push
in
testl
imul
sbb
mov
cli
or
push
sti
fisubl
flds
daa
push
mov
lret
insl
stc
inc
mov
cmp
pusha
mov
push
in
cmpsl
repnz
push
aam
jns
dec
cmpb
popf
shl
mov
fnstenv
lcall
sub
fcmovnb
clc
push
pop
repz
cld
pop
popf
mov
popa
call
or
lods
mulb
and
popf
stos
lret
std
jo
clc
jl
push
inc
cld
je
jecxz
and
pusha
cmc
divb
sbb
or
sub
push
iret
xchg
cltd
add
mov
mov
xor
pop
pop
mov
movsl
xchg
adc
adc
cmpsb
ja
les
insb
outsb
adc
xchg
out
rcrb
and
in
sbb
fcmovu
pop
cld
pop
mov
mov
pop
xor
xlat
hlt
adc
sub
add
testl
jnp
stos
xchg
sbb
into
mov
cmpsl
movsl
iret
loope
lods
andl
xor
fsub
into
jno
popf
roll
filds
inc
mov
in
push
call
xchg
les
fisttpll
adc
push
pop
sub
inc
dec
pop
add
cmp
push
pusha
addl
add
push
xor
mov
cli
popf
pop
arpl
mov
mov
lcall
repnz
mov
popf
mov
popf
rcrb
sub
jo
mov
sti
fdiv
mov
aam
aad
pop
jp
mov
shrb
movsb
insl
sbb
pop
imulb
jno
pop
les
lcall
ja
xor
jmp
jle
shl
or
out
mov
add
xchg
je
pusha
rcll
lret
mov
add
movsb
ficompl
xchg
push
and
js
test
shll
jge
lods
pop
stc
and
pop
lret
pop
mov
lods
sbb
inc
push
dec
movsb
stos
push
rol
int3
fldenv
imul
fwait
ret
sub
cmp
aad
int3
cs
lock
outsb
and
inc
and
call
leave
inc
push
jl
xchg
pop
out
mov
mov
cmpsl
xlat
hlt
pop
cmp
xor
mov
ret
mov
mov
pushf
repz
subb
ret
add
aas
into
mov
mov
test
repz
mov
or
out
inc
iret
in
pop
inc
lock
mov
push
test
jns
add
les
mov
adc
leave
add
test
cmpb
lret
fsubrp
cmp
fisubs
mov
push
jns
std
jmp
gs
jmp
es
mov
ja
les
jge
std
shll
js
pop
inc
mov
test
dec
mov
add
movsb
lds
popf
xchg
mov
cli
push
pusha
xchg
dec
jne
add
test
rcrb
aad
roll
mov
xor
jge
mov
pop
icebp
jle
mov
scas
inc
xchg
lock
aam
pop
sbb
out
and
pop
repz
rorl
fldenv
cltd
out
jno
jo
push
lcall
and
ret
retw
jns
xor
push
inc
in
mov
push
bound
xchg
orb
push
popa
out
push
ret
jnp
add
jo
xchg
mov
repz
xchg
and
cld
je
stos
outsl
call
arpl
add
repz
pop
icebp
mov
cmp
out
ljmp
or
cltd
enter
pop
pushf
mov
in
mov
popf
sub
sbb
inc
sub
enter
sbb
cmpsl
loopne
push
ror
call
imull
sti
cmc
repnz
clc
sub
pop
add
ljmp
dec
adc
enter
or
ja
shrb
mov
imul
lods
sub
loope
lods
std
incl
push
lcall
jbe
or
push
mov
popa
mov
popa
cmp
mov
add
jno
mov
outsb
sub
loope
push
jge
imulb
sti
rcrl
sti
adc
in
xchg
aaa
mov
add
sarl
jge
adc
es
sbb
mov
xor
mov
shl
std
add
pop
mov
pop
out
xchg
ret
mov
neg
sub
push
push
ficoms
out
inc
xor
adc
loop
data16
inc
xchg
push
test
xor
and
enter
push
xor
xor
es
sti
out
jmp
and
mov
pop
adc
int
push
mov
fwait
cmc
stc
in
mov
pop
dec
cmp
fisttpll
sub
lods
lea
data16
jg
and
shr
dec
dec
stos
andb
fdivl
imul
sbb
sbbl
mov
in
ret
ret
xchg
imul
flds
mov
jb
pop
sbb
cld
lea
push
pop
or
stc
ret
sar
adc
or
mov
push
test
jne
mov
popf
sub
sbb
je
jne
pop
test
dec
mov
and
cmpsl
insl
jnp
push
imul
loopne
loope
add
xor
jle
push
jae
cld
sbb
xchg
pop
push
cmpsl
movsb
sbb
add
push
subb
ficomps
inc
sbb
shrb
icebp
mov
mov
aas
pop
in
dec
mov
xor
jp
dec
xor
dec
cld
or
mov
popa
sbb
mov
mov
xchg
scas
mov
fstps
out
xchg
call
mov
add
aad
sarl
inc
sbb
fsubl
insl
mov
data16
mov
out
add
or
mov
inc
ljmp
xchg
or
push
inc
add
ret
dec
lds
roll
pusha
inc
and
dec
xor
inc
fldcw
pop
pushaw
outsl
cwtl
and
and
inc
cmp
xchg
cmp
and
aaa
subb
sbb
test
mov
pand
mov
lds
in
imul
dec
push
mov
scas
xchg
divb
mov
push
mov
adc
stc
mov
mov
mov
xchg
pop
hlt
xchg
lods
mov
testl
cmpsl
fidivrl
fwait
inc
dec
push
push
mov
push
cmp
or
int3
xchg
pusha
incl
cmpsl
adc
jecxz
add
xor
mov
rorl
xchg
les
xor
pop
les
jmp
mov
stos
pop
push
in
jp
and
push
sbb
adc
mov
dec
test
mov
addb
lea
cli
push
cmp
push
aad
cmp
addb
js
fistl
jno
fisubrs
popl
out
xor
loopne
pop
sahf
je
mov
push
adc
mov
sbb
imul
or
pop
aas
sbb
push
fdivs
and
fisttpl
cmp
es
and
sub
loope
and
inc
in
loopne
and
push
stc
cmp
idivl
push
jge
adc
daa
cs
loop
enter
sbb
inc
lods
in
add
or
dec
ror
outsb
mov
fidivrl
xchg
push
in
mov
lcall
stos
stc
str
mov
dec
test
jne
hlt
dec
jnp
popa
repz
dec
aam
push
shlb
pop
roll
cmpsb
sbb
inc
fs
dec
xlat
push
jbe
int
cwtl
jmp
shlb
cmpsl
dec
cs
loope
adc
data16
into
mov
out
jns
jo
dec
add
push
and
int3
dec
sub
into
fwait
mov
mov
and
xor
mov
xorl
fdiv
lds
or
cmpsb
mov
mov
test
or
movb
mov
in
cli
add
pop
sbb
adc
ds
out
sbb
pusha
loopne
arpl
je
push
sbb
and
int
sbb
sbb
add
ds
imul
and
imul
stc
scas
in
lea
mov
push
jmp
mov
mov
loop
inc
ror
stos
jne
es
outsb
mov
push
and
int3
call
jg
test
push
in
add
jb
and
popf
mov
push
jge
dec
push
stc
out
btc
mov
out
and
insb
fisubrs
xchg
outsb
or
imul
mov
pop
mov
test
ja
push
call
pop
shrl
jnp
in
bound
std
pop
and
out
sub
xchg
ret
pop
loop
mov
lods
jne
xor
pushf
lods
icebp
ret
fs
sbb
loope
cmp
repnz
int3
pop
leave
pop
das
mov
movsb
mov
jae
adc
jle
fnstcw
bswap
movsb
or
dec
mov
jmp
dec
leave
add
lret
ret
jne
stc
mov
fisttpll
jne
and
jnp
sti
rolb
dec
icebp
xchg
xor
fsubrl
je
xchg
push
cmpsb
cmp
mov
ds
mull
sub
sbb
mov
mov
cmp
sti
ja
stc
inc
mov
pop
cmc
cmp
xchg
stc
jl
fs
pop
sub
ret
add
cmp
mulb
pop
inc
and
out
xor
push
add
aas
mov
decl
push
jno
cmp
inc
or
jp
and
jne
xor
cmpsl
cmp
daa
imul
xor
dec
loope
add
es
loop
js
mov
push
adc
lcall
js
jge
inc
ss
adc
and
movsb
clc
mov
sbb
cs
push
mov
xor
scas
movsb
xchg
pusha
push
xchg
in
xchg
in
popa
stc
pop
jne
xor
push
leave
dec
addr16
inc
xor
popf
xchg
fldenv
dec
ja
outsl
xchg
mov
or
and
push
cmpsb
cmp
mov
or
and
loop
dec
sti
std
mov
jne,pt
push
aaa
add
mov
in
fs
aaa
mov
jmp
enter
sbb
sub
jle
fs
out
mov
dec
inc
and
rep
or
xchg
mov
push
ss
xor
addl
icebp
mov
aad
in
xchg
imul
cmpsb
jae
mov
and
rolb
inc
push
pop
stc
aas
loopne
sub
push
add
mov
aas
push
popf
in
negl
adc
imul
inc
sub
js
xchg
pop
icebp
sub
xchg
dec
ss
dec
icebp
mull
shrb
lods
lds
imull
add
mov
shlb
int3
icebp
add
cmp
repz
add
xor
stc
aas
mov
inc
mov
jp
jmp
pop
jecxz
lds
mov
xchg
lea
mov
adcl
mov
cltd
sahf
pop
popa
fidivrl
jb
gs
mov
mov
in
lds
test
push
bnd
push
cli
push
pop
mov
addb
testb
jp
mov
insb
mov
cmp
cli
pop
call
add
shll
pop
jg
push
adc
aam
fistpll
pop
inc
or
adc
rcll
outsl
mov
cmp
jbe
xchg
sub
mov
cli
pop
es
incl
push
sub
sub
xchg
push
rcrb
test
inc
mov
shl
push
inc
insb
jne
loope
icebp
addr16
adc
pushl
mov
std
ja
mov
stc
mov
fxch
cld
repnz
jp
test
cli
pop
mov
push
repz
mov
int3
in
or
imul
mov
ja
xor
push
rcll
push
push
icebp
inc
fs
inc
scas
cmp
or
add
ret
mov
push
lea
inc
dec
or
push
sbb
fwait
loop
mov
push
sbb
mov
adc
adc
xor
pop
pushf
or
inc
mov
xchg
sbb
fwait
ljmp
cmp
push
sub
clc
mov
mov
and
xor
add
imul
dec
push
cmp
and
sub
xchg
push
xchg
push
sbb
std
push
add
mov
dec
cmp
ja
repz
out
sti
mov
in
jecxz
cmc
xor
shl
lcall
sub
cmc
out
or
jg
aas
cmpsl
pop
dec
cmp
fs
test
add
insb
mov
push
adc
jne
pop
cmp
add
mov
lret
dec
aaa
movsl
dec
pop
dec
cwtl
loope
je
ja
test
and
push
sub
ds
std
or
cltd
mov
cmp
mov
shr
popa
ret
adc
mov
lock
xchg
push
xchg
clc
packssdw
mov
std
mov
fs
icebp
fwait
adc
loop
jle
pop
repz
xor
mov
call
or
test
mov
lahf
outsb
push
jmp
or
js
ret
outsl
pop
popf
or
subb
arpl
negb
add
adc
stos
push
loope
out
mov
or
and
xchg
aaa
xchg
push
push
xchg
adc
mov
repz
cmp
addb
inc
shl
mov
aaa
stos
xchg
bound
push
scas
pop
sbb
jl
scas
in
hlt
cmp
lret
jne
mov
push
addr16
loope
mov
negl
dec
addr16
ret
jge
hlt
or
rolb
sti
xor
out
jbe
jecxz
fisubl
mov
ljmp
aad
jmp
and
stos
aad
outsl
out
mov
push
sub
push
clc
and
sub
adc
add
dec
loope
mov
push
fildl
and
int
ss
sbb
jecxz
mov
out
inc
pop
loopne
mov
or
push
cmp
insl
push
mov
pop
xchg
add
pop
fnstsw
hlt
fwait
enter
ret
mov
lea
pop
jg
lds
insb
clc
aas
sbb
xchg
lock
jb
inc
stc
mov
rcll
mov
adc
jmp
jmp
sbb
push
icebp
push
cmp
inc
cwtl
add
xorb
arpl
lods
popa
mov
popf
sbb
arpl
test
rolb
in
adc
pop
lahf
cmpsb
dec
scas
or
cltd
and
cmc
into
mov
popf
mov
mov
scas
push
and
jb
xor
dec
pop
movsl
mov
lcall
ret
xorl
push
inc
insb
addr16
push
fidivl
aam
aam
dec
jno
in
dec
dec
ficomps
mov
fistps
lods
fs
lcall
in
loopne
fildll
mov
js
or
jle
data16
dec
xchg
movsb
stc
jmp
xchg
loop
jnp
sub
adc
ret
fadd
pop
or
lret
push
cltd
xor
adc
arpl
sti
popa
xlat
ret
jecxz
stc
cmp
sbb
sbb
push
loop
jecxz
sar
hlt
dec
clc
ljmp
ss
es
mov
rcl
loope
sub
fsubr
loopne
lea
sub
test
out
jmp
sub
jle
jnp
jb
fisubrs
loope
mov
cli
aaa
adc
lock
sub
inc
pop
sahf
aad
push
xorb
sub
jl
sbb
mov
or
insl
inc
cmp
scas
inc
call
or
fs
icebp
xchg
pop
cld
dec
repz
stos
mov
pop
stos
ss
out
mov
push
cmc
mov
inc
push
rclb
je
pop
mov
mov
test
cld
fisttpll
jge
in
xchg
adc
into
std
mov
jne
adc
adc
cmp
sbb
cmpsl
test
int
mov
ja
push
add
repz
das
jno
pop
fwait
and
lock
lods
dec
fwait
push
ljmp
mov
jne
sub
sub
and
cs
out
js
les
enter
jo
jne
movsb
mov
dec
adc
stc
push
out
pop
xchg
xor
sti
mov
cltd
loopne
xorl
sub
dec
aam
lock
sub
dec
mov
mov
stos
loopne
arpl
addr16
mov
test
mov
mov
jl
std
cmpsb
imul
or
outsb
or
cltd
xchg
pop
xor
lods
imul
out
cmpsb
test
xchg
push
xor
lea
inc
xchg
ret
dec
dec
mov
les
popf
cmc
mov
iret
addl
ret
jle
stc
sti
outsl
jne
ror
popf
dec
mov
jp
or
mov
dec
push
int
popf
mov
sbb
cld
or
and
fisubs
jle
je
mov
jb
jle
push
jb
fucom
icebp
clc
jb
movsl
movsb
decl
jg
call
jmp
icebp
pusha
cmpsb
inc
sub
ss
sbb
sub
sub
call
into
xchg
fndisi(8087
jecxz
ja
fsubr
mov
orl
pusha
iret
roll
add
push
test
mov
mov
cli
mov
mov
xor
mov
pop
push
in
insb
loope
ja
shrb
dec
or
ljmp
out
lret
sub
xchg
sub
mov
or
lods
inc
cmpsl
outsl
cltd
jmp
cmp
pop
fcmovu
mov
cmp
sarb
movsb
pop
pop
dec
pusha
std
push
lock
mov
in
stc
ret
cmpsb
push
rcl
sbb
enter
mov
std
cld
mov
test
repnz
stos
jo
ret
in
sbb
fildl
shrl
cmp
or
ficompl
xchg
jg
shr
mov
arpl
decl
in
pop
cmp
xchg
lea
mov
mov
in
xor
xchg
mov
jbe
xchg
sbbb
jl
mov
pushf
popa
popa
add
imull
xchg
lret
scas
loope
mov
sti
mov
mov
sbb
cmpsb
add
cmp
or
cmp
xchg
aaa
stos
mov
or
mov
jle
jge
add
adc
lret
loope
cmpsb
aam
jge
cmp
lahf
mov
cwtl
loope
add
xor
mov
mov
push
ffree
mov
pop
stc
mov
cmpsl
ja
imull
aam
popf
shlb
xchg
insl
sbb
and
js
xchg
fimull
mov
icebp
in
ja
pop
cmp
dec
xchg
and
push
bound
add
ficoml
xchg
push
insl
push
out
lods
dec
xlat
addl
xor
mov
lds
movsl
sbb
sbb
out
je
in
aaa
pop
sbb
stos
xor
dec
dec
mov
adc
addl
push
xabort
xor
or
out
loope
add
lea
add
xor
push
fs
div
mov
ss
icebp
repz
add
cmp
and
jmp
xchg
imul
lcall
mov
mov
jle
fcmove
roll
mov
mov
inc
popa
xchg
adc
xchg
xchg
mov
dec
mov
lret
ja
sub
mov
mov
xor
aas
and
and
pushf
or
adc
in
and
test
shll
dec
add
popf
in
popa
mov
inc
pop
or
rcll
popa
dec
xchg
jns
ret
fsubrs
or
and
ret
add
mov
fildl
std
out
dec
notl
stos
imul
dec
xchg
and
jmp
lea
mov
pop
movsl
dec
imul
pusha
push
icebp
rclb
mov
les
sbb
push
clc
add
lods
and
adc
dec
add
jne
cmp
inc
cs
and
mov
cmp
add
ficomps
in
jo
add
mov
stos
es
enter
popl
repnz
xchg
xchg
out
cmc
fdivrl
fs
mov
ret
js
and
push
ret
imul
test
test
jg
pop
psubw
ss
cmpsb
inc
xchg
push
mov
bound
cmc
or
imul
movsl
lcall
dec
loop
je
or
push
sbb
push
jge
out
dec
push
ljmp
leave
or
in
pushf
lock
fcomi
mov
pop
lock
push
es
es
push
repz
dec
pop
outsb
cmp
xlat
int3
push
mov
fs
dec
call
pop
js
sbb
lea
mov
aad
mov
cmpsb
fcoms
inc
sub
push
xor
int
testb
pop
mov
sub
push
mov
orl
inc
xchg
mov
and
lds
decb
xor
std
xlat
jo
aaa
push
cmp
jge
or
je
addb
push
jmp
in
mov
mov
mov
push
mov
inc
in
xlat
jne
cmpsb
pop
push
mov
xor
int
in
shrl
jmp
icebp
xchg
pop
push
xchg
cmc
sti
iret
cmc
mov
pop
xor
dec
movsl
add
insl
pop
dec
enter
dec
and
repz
imul
push
js
aam
ret
sarl
mov
jge
syscall
xchg
cmc
xchg
pop
jl
popa
lea
push
inc
mov
mov
xor
sbb
out
std
add
xchg
pusha
or
cltd
std
sti
arpl
jo
cli
or
or
add
in
and
jb
inc
jb
cwtl
test
movl
dec
jmp
mov
mov
std
add
mov
xadd
inc
adc
inc
fists
jmp
loope
dec
shl
iret
or
fnstenv
add
lret
adcl
cwtl
jmp
pop
mov
and
pop
push
pop
sbb
test
cmp
dec
mov
fdivr
pop
push
or
loope
ds
jns
fdivrp
fcompl
push
leave
loope
xchg
fs
ja
imul
iret
xchg
and
push
inc
ja
dec
mov
iret
xor
cmc
movb
or
jecxz
in
cli
in
jo
dec
pop
and
ret
int3
lea
xchg
mov
outsb
ja
in
data16
jg
or
in
sti
mov
repz
mov
push
sti
leave
leave
insl
shll
outsb
popa
lcall
mov
sub
lcall
in
outsb
movsb
or
js
lock
movsl
imul
mov
ffreep
xchg
mov
ljmp
jnp
std
aaa
pushf
xchg
sbb
fmulp
mov
lret
cmp
in
sbb
sar
rol
adc
adc
pop
jg
jbe
rcl
xor
negl
loopne
loop
out
mov
jecxz
mov
pop
sahf
inc
insb
js
pop
shr
cli
xchg
imul
das
or
add
sti
add
icebp
add
sbb
sbb
cs
sub
jnp
mov
lcall
cmpsb
mov
and
mov
or
les
in
std
out
in
mov
jp
xor
or
fisttpl
mov
lahf
loopne
cmpsl
lods
mov
sub
mov
adc
jne
ficompl
mov
in
cmc
repz
xor
movsb
fnsave
push
push
out
in
movsb
idivl
or
xchg
dec
arpl
xchg
in
out
lock
cli
aaa
cmp
dec
out
cmp
add
repnz
dec
xor
lock
ret
add
shlb
into
in
out
std
insb
mov
stc
in
rcrl
shlb
test
or
mov
mov
lahf
sbb
aas
lods
sub
lods
in
fnsave
lahf
out
enter
filds
bound
mov
mov
movsl
out
shl
stc
mov
jge
adc
xor
out
loopne
and
dec
aaa
std
insl
mov
pop
mov
mov
testl
mov
mov
aad
fiaddl
cli
popf
out
push
and
decl
pop
orb
les
popf
inc
bound
dec
fs
inc
and
stc
cmpsb
hlt
xor
mov
push
inc
popa
jp
add
cmpl
insb
inc
rcrb
jo
mov
sbb
stc
loope
scas
sbb
sbb
jg
sub
dec
lea
and
pusha
cmp
pop
in
cwtl
mov
sbb
sti
sbb
call
scas
insl
insb
aas
stc
push
and
adc
mov
loop
fadds
outsb
dec
lcall
sub
or
rcpps
dec
movsb
in
cwtl
mov
stos
fildl
stos
andb
pop
mov
mov
xchg
stos
movsl
jne
jmp
lea
sbb
enter
cwtl
lcall
movsb
cmp
xchg
adc
push
loope
add
sbb
enter
and
sub
insb
add
rcl
mov
pop
sbb
jo
mov
dec
mov
subb
adc
xor
cmc
mov
stc
test
mov
push
xor
ret
sub
mov
cmpsl
sti
sbb
mov
repz
mov
rolb
lret
std
in
xorb
test
mov
les
repnz
mov
mov
xor
jg
jecxz
cmc
xchg
dec
jns
jmp
mov
bnd
das
ret
cli
fcomi
stos
pop
mov
adc
idivl
pop
mov
cmp
xchg
pop
testb
or
mov
arpl
xor
inc
das
sti
cmp
push
mov
mov
popa
mov
hlt
imul
fs
fs
push
aad
mov
jns
dec
dec
in
sub
ss
lock
ret
ret
cmp
imul
aad
jmp
mov
shrb
lds
in
xor
lock
lahf
jmp
inc
popf
sub
addb
lds
dec
testl
imul
gs
stos
jl
sub
push
lret
add
insb
insb
lahf
fcmovnu
jmp
push
std
js
sub
imul
hlt
pop
dec
in
call
xor
test
sbb
mov
jmp
xor
and
shrl
push
cmp
cmc
mov
mov
xchg
inc
mov
sub
dec
shlb
shl
add
pop
imull
enter
pusha
sbb
jmp
inc
jmp
movsb
leave
in
mov
sub
icebp
mov
inc
ret
sahf
xor
std
fsubl
jne
aaa
cmp
rorl
out
movsb
sarb
rcll
hlt
jmp
popf
shl
in
and
scas
mov
mov
jo
add
loope
pop
mov
iret
inc
mov
push
cmpsl
adc
jnp
cltd
or
in
push
ds
mov
mov
push
leave
ds
inc
pushw
sbb
lock
sbb
adc
push
xor
mov
mov
fisttps
or
sub
ss
rcl
std
jmp
and
into
cwtl
add
lret
mov
push
push
outsl
popf
jmp
or
sbb
dec
xchg
dec
jle
mov
movsl
add
test
mov
dec
outsb
pushf
push
push
mov
xor
jo
enter
hlt
and
mov
xchg
inc
les
jg
xor
loop
jns
stos
inc
out
sbb
mov
loop
jo
sub
lods
lea
ja
push
pop
sub
jb
roll
ret
mov
mov
cmpsl
add
cmp
stc
mov
bound
mov
jp
pop
jnp
lds
xchg
sar
pop
pop
ja
cmpsb
fnsave
adc
xor
sbb
push
lret
pusha
push
in
and
dec
cmp
pusha
jg
mov
sbb
push
dec
lods
insb
push
ret
push
ret
adc
cld
mov
movsb
and
hlt
and
or
dec
jnp
or
fisubrs
repz
repz
add
out
in
push
pop
sbb
sbb
std
aad
mov
loope
or
js
cmp
dec
cwtl
cmc
adc
sub
inc
cmc
adc
xor
nop
std
mov
jge
pcmpeqw
roll
cli
pop
in
mov
lds
ret
popf
mov
rorl
mov
stc
add
lds
adc
in
sbb
sbb
arpl
sbb
fdivl
pushf
jo
mov
jmp
mov
out
lea
push
stc
imul
xchg
fidivs
out
call
xchg
jns
mov
mov
and
into
dec
cld
dec
shl
shlb
std
into
xchg
push
nop
mov
enter
add
ds
and
cmp
mov
mov
ja
xchg
cmpsl
imul
push
je
fistpl
into
and
xor
repnz
icebp
or
cmp
cmp
lcall
ja
lea
and
sub
mov
std
ds
addb
or
xchg
dec
or
push
xchg
lods
nop
cmpsl
xchg
clc
mov
push
cmpsb
mov
lods
push
aad
dec
sti
test
mov
mov
push
loope
and
aad
add
in
mov
shll
sar
xor
mov
cs
inc
out
sub
pop
rorl
add
pop
call
popw
sub
out
mov
scas
fs
add
rorl
push
xor
aaa
push
inc
cld
rorl
test
push
push
into
pop
stc
jae
jmp
or
dec
testl
nop
ffreep
stos
jmp
lea
sar
loope
mov
fwait
mov
lahf
push
punpckhwd
jne
jecxz
dec
pop
fsubp
mov
pop
cmpsb
out
cmp
mov
and
xchg
stos
mov
imul
dec
mov
add
xchg
je
xor
mov
iret
repnz
enter
xchg
mov
rcl
movsb
std
mov
mov
leave
hlt
int3
ljmp
add
test
sub
inc
jecxz
hlt
mov
rcl
les
dec
lods
lret
addr16
mov
dec
jnp
in
fmull
hlt
pop
mov
pop
and
fmul
mov
fwait
shlb
cli
std
mov
dec
cli
lcall
rcrb
cmpsb
mov
pop
lahf
lock
cmpsl
add
dec
or
dec
test
dec
dec
mov
cmp
mov
cmp
jl
popf
bound
int
loope
xchg
into
repnz
mov
aam
in
gs
sub
icebp
in
pop
mov
popa
scas
jecxz
es
adc
mov
fxam
imull
mov
or
aas
ret
sub
lock
push
cwtl
repnz
mov
mul
shll
stos
jns
stos
push
push
lahf
xchg
inc
sahf
popf
inc
mov
mulb
lods
stos
repnz
sub
mov
xchg
testb
jmp
xchg
shr
dec
fwait
sub
cmp
arpl
shlb
jg
int3
cmpsl
xchg
inc
cmpsl
jns
mov
int3
icebp
rorl
loope
xor
popl
mov
or
add
xchg
outsb
adc
sti
and
lret
into
fs
sti
mov
jo
in
sub
ja
pop
int3
mov
or
aas
aaa
js
loopne
mov
mov
in
add
adc
sbb
lret
push
ret
or
pop
xchg
out
stos
jnp
repnz
xchg
jmp
xchg
subl
push
lcall
mov
inc
push
push
decb
repz
push
xlat
in
cmpl
popa
loop
mov
add
out
fucomp
test
stos
stc
xchg
repnz
in
stos
adc
daa
jae
dec
push
add
xchg
insl
add
into
iret
sti
cwtl
sbb
lcall
add
and
fisubrl
or
push
and
scas
mov
aaa
and
mov
xchg
sub
test
fs
or
mov
push
mov
jg
sub
push
sbb
stos
cmc
mov
fwait
insl
inc
loop
sbb
roll
jnp
pop
rcll
ljmp
inc
push
not
fnsave
add
fs
les
adc
ret
repz
pmaxsw
lret
xor
jne
repnz
cmpsl
jecxz
rclb
jae
cmp
outsl
bnd
mov
lahf
xchg
and
inc
test
pop
fcoml
jno
shlb
addr16
jecxz
add
jns
mov
arpl
nop
int
lds
jmp
scas
in
shll
test
cli
dec
call
cli
dec
lods
ds
out
mov
dec
jns
test
xchg
inc
mov
jecxz
arpl
and
in
cmp
push
shl
stos
repnz
cmc
notl
aaa
in
push
sub
sbb
mov
push
stos
and
xchg
sti
mov
jns
icebp
lahf
cmpsl
push
dec
sahf
adc
lock
push
out
loop
int3
push
xor
mov
adcb
xchg
sbb
repz
sub
out
and
xor
cmpsl
imul
mov
jb
fwait
and
mov
loope
inc
xchg
ret
add
in
push
jns
push
leave
inc
inc
js
adc
push
xchg
push
jns
in
mov
dec
jecxz
arpl
push
push
movsb
aad
mov
or
mov
int
mov
or
and
pop
out
scas
cli
pop
loop
push
cmp
stc
mov
add
xchg
mov
sub
cmpsb
xchg
xchg
xorb
cwtl
xchg
mov
xchg
jge
mov
jg,pn
adc
ficomps
xchg
push
repz
orl
jl
sarl
cs
and
or
std
mov
popf
mov
mov
cld
sarl
adc
sbb
xor
ror
pop
jmp
in
sbb
push
adc
in
gs
jmp
push
inc
xchg
in
scas
sti
aam
push
das
add
push
jp
andl
cmp
shl
out
icebp
sarb
xor
lret
cmpb
pop
in
dec
mov
shrl
mov
fildll
or
mov
ss
aaa
xchg
xchg
push
mov
subl
mov
and
and
data16
xchg
xchg
jmp
cmpsl
or
fs
std
aas
movl
iret
jp
cmp
enter
in
mov
mov
sub
or
mov
jo
dec
in
dec
mov
loopne
cmc
pushf
js
jno
rorl
xlat
loope
test
lods
cmpsl
fcompl
xor
mov
sahf
popf
enter
jle
adc
in
dec
incl
mov
push
jns
push
aam
mov
cmpsb
sahf
xchg
jp
test
aad
movsb
sub
enter
aaa
inc
jg
dec
or
xchg
fwait
popa
mov
ss
jl
xchg
lods
rol
fldt
cmovle
in
test
mov
aas
in
cld
add
push
movl
loop
pop
lcall
adc
or
aad
sbb
arpl
or
jns
mov
dec
movb
cltd
dec
and
lahf
jo
mov
mov
mov
push
movnti
pop
sti
mov
cmp
loope
leave
cmpl
push
stos
test
xor
dec
pop
int3
push
leave
ljmp
mov
mov
push
cmpxchg
popf
adc
mov
aam
subl
pop
or
andl
cltd
or
mov
cmp
cmp
mov
adc
sub
out
fdiv
cmp
dec
rcll
mov
mov
jns
stos
or
mov
adc
xchg
addb
dec
push
mov
out
jne
inc
orb
push
cmpsl
in
cmpsb
int
pop
mov
push
xor
push
in
scas
and
enter
add
mov
mov
mov
inc
push
and
ds
bound
js
push
xor
push
int
sbb
icebp
cmpsl
arpl
cmpsb
and
dec
ret
mov
pop
das
or
sub
shlb
or
enter
jne
inc
mov
int3
jnp
leave
mov
fldt
into
jb
sub
jl
stc
pop
sti
adc
dec
xchg
sbb
jne
pop
mov
jb
sub
fwait
mov
cwtd
loope
mov
xchg
shr
xchg
cmp
leave
in
xchg
adc
in
lods
dec
scas
loope
mov
jmp
mov
out
cmpsb
icebp
insb
aaa
or
dec
stos
out
lods
or
adc
dec
xchg
sub
dec
xchg
push
cs
sbb
mov
sub
fsubs
test
mov
or
pushf
xchg
push
jb
pop
cld
push
xchg
mov
dec
sbb
movb
mov
xorl
xor
ret
add
and
xchg
pop
ja
or
lahf
test
push
xchg
sub
xchg
push
mov
mov
adc
data16
jbe
mov
out
dec
stos
cmp
add
mov
subl
in
mov
cmc
add
adc
fs
clc
fs
jo
or
popf
stc
sbbl
push
push
pushf
loope
faddl
inc
inc
jne
loope
inc
dec
and
das
jb
test
cmp
sar
jo
stos
lret
dec
cmpsl
jle
xor
xor
xchg
add
mov
mov
push
mov
xchg
repz
inc
cli
aad
mov
add
lock
push
hlt
pop
pop
out
mov
or
dec
repnz
or
sub
imul
lea
cmp
outsl
jmp
lea
jb
fwait
xchg
aad
push
bound
stc
push
mov
roll
sbb
sbb
jle
jmp
mov
mov
stc
icebp
nop
jle
push
and
jecxz
test
push
inc
add
xchg
in
fistpl
cli
cmpps
fisttpl
aam
in
or
popf
dec
cld
pop
ljmp
mov
push
clc
shll
fmuls
mov
jecxz
movsl
iret
test
xchg
mov
jno
out
lds
lods
pop
popl
loope
test
cmp
inc
bnd
dec
and
popf
sub
daa
xor
ja
lret
inc
jae
xchg
sub
xchg
fucomp
jp
iret
pop
fisttps
fldcw
mov
ficoms
fimull
scas
jo
mov
dec
jmp
push
jae
testl
cld
in
loope
mov
or
sub
and
std
in
pop
lret
andl
clc
xor
push
mov
adc
jns
xchg
cmp
push
cmp
mov
jbe
enter
fimuls
pop
xchg
and
hlt
jl
inc
mov
lds
or
jns
sbb
and
push
bound
push
aas
mov
fs
mov
and
add
jb
cmp
push
idivl
dec
sahf
pop
dec
js
jno
lds
sub
inc
inc
mov
fdivrs
sbb
sub
sbb
in
call
xor
push
in
add
mov
pop
xchg
pushf
push
inc
js
xchg
sbb
rclb
add
mov
mov
mov
xchg
stos
mov
mov
and
mov
mov
dec
idivb
adc
jns
xlat
outsl
shrb
sbb
adcl
mov
in
cltd
add
mov
stos
rorb
dec
pop
and
pop
shl
dec
popf
call
sbb
inc
sahf
mov
and
scas
sub
cmc
rorl
rcrl
xchg
into
or
out
js
push
jbe
and
and
lods
mov
outsl
mov
out
out
pop
sbb
sub
out
mov
out
add
dec
xchg
cli
mov
iret
stos
popf
xlat
and
enter
mov
rorb
xlat
loop
dec
loopne
imul
xchg
mov
idiv
sbb
push
ret
sub
fiadds
lds
mov
jecxz
and
in
dec
push
mov
out
ja
jae
outsb
jns
and
shl
jnp
mov
int3
aam
push
dec
insb
dec
rcrb
bound
xor
ljmp
sbb
les
dec
mov
inc
sbb
xor
mov
lret
and
sbb
arpl
testl
loope
std
out
xor
or
or
cwtl
das
imul
push
stos
inc
in
pop
pop
add
cmc
xchg
lds
orl
push
and
call
std
repz
iret
fisttpl
movl
mov
add
das
mov
lret
mov
or
add
dec
dec
bound
jl
icebp
push
jne
test
mov
or
cltd
lods
cmpsb
dec
in
jp
js
mov
stos
adc
int3
mov
scas
orl
cmpsl
inc
testb
cmp
or
outsl
add
repnz
add
mov
mov
scas
lea
push
rorl
scas
or
rcrl
cmp
push
push
ljmp
rcrl
into
mov
add
pop
shll
decl
imul
repz
incl
sbb
jmp
mov
and
cmp
inc
jno
mov
sub
push
cltd
add
shll
dec
push
std
xor
pushl
mov
mov
imul
in
es
js
les
aam
xchg
ljmp
xor
ds
jle
pop
mov
sbb
push
subb
push
shrb
xor
pop
dec
imul
add
xor
or
add
mov
mov
movsb
fstpt
aad
jns
stc
adc
nop
jmp
push
lret
out
mov
cmc
xchg
push
sub
addr16
fimull
dec
std
dec
dec
aaa
xchg
lock
xor
in
and
imul
mov
movsb
jg
and
mov
cmc
ss
repnz
cmc
jecxz
shll
push
subb
shlb
pop
loope
movsb
bound
pop
cwtl
cmp
lds
mov
mov
add
loope
mov
pop
iret
xchg
push
sbbb
mov
jmp
push
lahf
es
add
push
xor
dec
enter
xchg
gs
xlat
mov
imul
fs
mov
sti
xchg
in
setb
push
repnz
in
aad
in
jecxz
cld
bound
roll
pop
jno
jmp
sub
rol
xchg
sbb
shr
xorl
iret
leave
bound
mov
stc
mov
pop
pop
aam
leave
mov
gs
rolb
jmp
outsb
mov
je
cltd
push
test
cmp
loop
and
es
test
out
push
sub
call
jecxz
jno
lods
movsl
hlt
hlt
jecxz
push
mov
rorb
pushf
xor
xor
cmpsb
pop
aas
sahf
lret
test
add
jle
cmp
inc
loopne
pop
out
sarl
jge
test
cltd
cli
dec
pop
lea
testl
xchg
fs
out
inc
sub
xorb
cwtl
or
jmp
jmp
dec
data16
aas
insb
jle
add
lcall
out
mov
sahf
orb
sub
mov
and
hlt
nop
jmp
pusha
js
ret
hlt
cmpsb
lea
loop
mov
xor
mov
push
dec
ss
insb
sub
ret
outsl
lea
popf
cmpsl
insb
into
cmpsb
mov
sti
sti
stos
lock
adc
pop
data16
jns
cmovl
mov
popf
sti
mov
mov
pop
cs
dec
clc
stc
push
inc
push
int3
loopne
loopne
punpckldq
scas
movsl
push
movsl
push
push
clc
xchg
jb
mov
and
fs
hlt
cmpb
mov
push
jle
stc
and
std
adc
push
stc
out
sub
into
fsubp
cmp
cmc
mov
aas
in
adc
cmp
mov
sarb
adc
mov
cld
fucomp
cmc
aad
jne
mov
or
jle
pop
aaa
cmpps
stos
mov
add
mov
js
xor
movsl
mov
push
mov
testb
jl
xor
lret
shlb
cltd
mov
loope
aam
and
icebp
enter
pop
test
push
std
outsl
jns
mov
sbb
xor
cwtl
dec
sub
push
aaa
mov
shl
out
push
ds
cmp
jp
int
andl
ret
aas
adc
aam
clc
and
xorb
pop
dec
rcll
push
dec
add
pusha
loop
and
cwtl
or
mov
cwtl
add
loopne
add
fimuls
jnp
mov
ja
mov
sti
push
jle
and
mov
cli
lret
lds
out
mov
mov
test
adc
aaa
es
stc
data16
clc
jmp
jge
loope
cwtl
pop
jne
pusha
mov
lahf
cmc
out
push
cmp
jo
and
cmp
mov
test
in
sub
push
mov
pop
pop
dec
popa
xchg
and
testb
decb
dec
iret
dec
add
jo
and
idiv
mov
and
jg
outsl
je
xor
cmpsb
sbb
and
data16
inc
mov
inc
sbb
shlb
add
stos
fs
rep
icebp
cmpl
mov
ds
fcoml
sub
adc
test
xorl
outsb
ret
in
dec
push
jb
ret
xor
push
repnz
push
and
push
dec
and
or
lock
movsb
and
cmpsl
cwtl
icebp
jnp
in
mov
stos
in
inc
fcomps
fwait
jnp
cmp
hlt
les
cmpsl
jb
aaa
jmp
icebp
fldcw
xchg
orl
test
stc
and
enter
es
mov
sahf
popa
cltd
xor
js
mulb
push
gs
inc
mov
in
jp
jmp
popa
pop
arpl
xlat
cli
mov
in
fidivs
shl
xor
xor
pop
and
shlb
mov
rep
pop
and
xchg
cwtl
iret
es
sub
daa
push
scas
popa
in
addr16
jg
iret
incb
adc
sbb
ljmp
lds
mov
sub
and
mov
in
insb
xchg
lret
pop
lock
movsb
push
fcoms
jmp
cmp
cwtl
icebp
inc
xchg
mov
idivb
mov
cs
xchg
stos
jg
push
pop
stos
cmc
ss
add
inc
inc
and
in
out
stc
xor
push
cli
xor
xchg
jmp
out
sub
push
fnstenv
push
andb
sbb
int3
sbb
cwtl
adc
push
mov
addr16
dec
sbb
divb
addr16
rorl
lods
dec
mov
jno
mov
cmp
cmp
cmp
xor
lock
frstor
stc
xchg
out
mov
test
pop
or
jmp
push
and
aad
mov
in
dec
shlb
jmp
xchg
hlt
sbb
popf
mov
ret
mov
adc
add
out
mov
and
xchg
dec
xchg
mov
aam
fildl
sbb
xchg
arpl
call
movsl
push
lret
jle
mov
dec
jl
inc
jno
pop
add
adc
push
es
mov
into
sti
xchg
mov
aaa
mov
fsubrs
mov
inc
fs
cs
cmpsb
mov
dec
xor
cmc
ret
gs
lahf
or
shrb
stos
or
lret
and
dec
mov
enter
adc
push
test
xchg
jmp
add
mov
adc
fwait
adc
jno
jge
loope
add
andl
cltd
arpl
in
and
pop
in
jg
lds
mov
in
int
cmpsb
cmp
lret
mov
aad
pop
rcr
sti
sub
aad
lret
xchg
cmpsl
popa
push
push
sbb
ds
xor
mov
adc
add
scas
jg
ret
int3
movsl
adc
xchg
inc
lahf
dec
add
push
xor
jl
jecxz
push
jae
fldenv
fwait
jns
or
add
push
repz
lret
in
cmp
mov
push
jg
cmp
xchg
jne
ret
sbb
stos
add
inc
les
jnp
rorl
jo
stc
pop
add
mov
adc
shrl
dec
mov
and
fld
inc
cmp
in
jmp
dec
outsl
cmp
dec
in
add
mov
xchg
push
sub
or
push
decb
push
push
jl
or
push
cmpsl
sbb
and
or
mov
in
pusha
mull
ret
fwait
repnz
inc
push
out
popf
aam
mov
mov
notl
enter
mull
aam
popf
mov
jbe
mov
mov
stc
lahf
call
mov
cli
rcrl
xlat
dec
jecxz
adc
add
lcall
movsb
push
xchg
rcl
pop
sub
dec
xor
pop
xor
cmp
mov
cmpsl
fmuls
popa
subb
rcrw
sub
jle
rcrl
push
and
sbbb
out
lahf
call
jae
inc
sti
loopne
nop
or
nop
rorb
add
push
stos
cltd
arpl
loope
mov
es
sbb
cli
jp
mov
cmc
jecxz
repz
pusha
jge
and
movsb
imul
and
stc
pop
push
xchg
ss
push
jno
jecxz
inc
sub
xchg
sub
inc
ja
dec
ljmp
loope
mov
ljmp
xchg
int
addr16
cs
jno
aad
xchg
add
imul
fnstsw
test
mov
push
cmovnp
jecxz
jne
adc
sbb
rcr
fimuls
mov
adc
divl
sub
xchg
dec
mov
imul
test
shrb
mov
add
xchg
mov
cmpsl
aaa
push
lods
xor
cmp
sti
dec
jb
in
addr16
dec
cmp
mov
sub
ja
mov
shll
adc
fstpt
jns
stc
fs
cld
leave
or
fwait
jno
push
ss
ljmp
cmp
cmp
and
jecxz
movhps
mov
sbb
sahf
or
lea
dec
pop
xor
stc
mov
test
aad
aaa
or
insl
sbb
roll
mov
sbb
fwait
cmp
addr16
inc
mov
es
cld
fs
mov
repz
push
xor
lret
inc
sti
mov
std
or
insb
xlat
cs
les
and
loope
lcall
add
mov
adc
mov
ficomps
sub
pop
or
fbstp
dec
subl
add
cmpsl
ss
mov
pusha
dec
scas
les
jmp
jo
addl
rclb
popf
aad
sub
mov
call
cmpsb
mov
jae
repnz
fists
mov
or
in
stc
lret
sub
and
push
jge
mov
mov
inc
rclb
call
testb
add
shlb
push
movl
lret
lods
std
stc
xorl
jge
jecxz
nop
fsin
xchg
icebp
mov
pop
push
mov
data16
jae
and
mov
mov
inc
mov
aam
sbb
in
gs
int
pop
push
daa
dec
adc
stos
pusha
lods
cmc
arpl
inc
add
and
mov
xchg
in
outsl
std
imul
sbb
fs
and
push
inc
subl
lds
leave
mov
mov
jno
lcall
jae
cld
cmp
fiaddl
jg
pusha
mov
lahf
pop
arpl
push
mov
ja
mov
dec
add
xor
das
mov
repnz
jnp
ja
std
add
and
stos
ds
das
pop
js
ljmp
sub
orl
jns
cmp
add
into
mov
icebp
mov
and
divb
cmp
jnp
inc
pop
fstl
inc
pop
test
int
sbb
daa
sub
lods
popl
fidivrl
pushf
xchg
xor
rclb
mov
push
and
cmc
in
and
mull
roll
jb
sbb
pop
xlat
ret
repz
dec
xchg
icebp
ret
pop
adc
mov
lds
add
jecxz
push
mov
jne
scas
jae
cmp
adcl
cmpl
xchg
popf
das
in
ja
aam
loope
ret
sarb
shll
scas
push
fisttpll
mov
xor
mov
add
or
push
and
jns
jmp
dec
out
gs
adc
rorb
dec
mov
in
jb
xor
test
scas
in
mov
rorl
popa
inc
or
out
cs
dec
mov
lock
pop
xor
push
xor
mov
mov
pop
std
out
mov
sarb
les
or
stos
xchg
icebp
push
lahf
cwtl
dec
mov
sar
cs
pop
sbb
sub
pop
faddl
aad
aas
mov
xchg
jbe
nop
and
add
les
pop
sbb
adc
sub
je
ret
sbb
fwait
mov
fs
mov
add
ss
shrb
push
mov
stc
lods
stc
xor
push
lds
jbe
das
jecxz
shrd
and
adc
and
jge
add
mov
aad
jbe
mov
out
gs
mov
ret
jb
lea
mov
pop
and
sub
stc
jecxz
sub
sbb
mov
mov
loopne
cmp
lcall
dec
out
int3
cli
mov
shlb
adc
mov
aad
int3
subl
add
in
ljmp
or
sub
in
xor
dec
rcl
fildl
mov
shll
mov
sub
sbbl
mov
or
inc
pop
xchg
jmp
adc
sbb
and
int
vmread
movsl
pop
call
push
movsl
ljmp
jmp
rorl
lods
fcom
mov
cmp
lret
jle
adc
jmp
pusha
int
addr16
sbb
shr
xchg
gs
mov
fs
push
add
push
loopne
inc
aas
fsubrp
rcr
ret
scas
popa
fsubrl
mov
in
xchg
xorb
sti
movsb
movsl
cld
mov
and
xor
out
or
mov
mov
sahf
mov
std
js
push
cmc
mov
lds
pop
int
fisubrl
push
test
jge
mov
push
pop
shlb
lods
jb
out
popa
dec
clc
mov
add
pop
mov
jo
mov
pop
lahf
jle
rcrb
or
mov
scas
fmuls
mov
xchg
and
rcrb
sti
jnp
xchg
jb
cltd
mov
fmuls
xchg
in
mov
dec
stos
and
mov
sub
and
adc
pop
fisubl
movhps
pusha
add
jo
mov
push
rorb
cld
mov
lret
xchg
lret
test
pushf
jns
cmpsb
inc
jge
xchg
mov
cmc
cmp
sbb
mov
js
sbb
lret
push
jns
ja
push
mov
ja
mov
cmc
jecxz
or
cld
ret
sub
imul
icebp
js
cmp
les
or
ss
in
rcll
mov
data16
dec
fdivrs
lcall
shrl
xchg
fs
add
mov
outsb
std
fwait
or
shrl
clc
stos
xchg
pop
push
fwait
sub
cwtl
pop
sub
xor
shrl
jge
adc
and
xchg
mov
mov
or
data16
xor
cmp
cli
mov
push
cmp
shll
je
rcrb
add
cmpsb
adc
xchg
cmp
repnz
cwtl
and
sub
pop
aaa
or
rolb
sbb
pushf
rolb
int3
jo
leave
sub
push
or
adc
push
dec
scas
addr16
call
insb
jg
mov
sbb
sbb
xor
jnp
xchg
cmc
inc
test
mov
xor
ret
jnp
sub
add
cmpsl
bound
inc
es
loopne
test
pop
out
rorl
stos
fucompp
add
lds
mov
push
mov
aad
into
cli
pop
mov
or
cmp
out
add
and
mov
jne
or
pop
xchg
pop
lock
testl
or
cmpsl
rcrl
mov
inc
xor
je
repz
imul
cmc
cli
jp
jge
repz
enter
shlb
psubsw
loop
lods
mov
mov
xor
dec
inc
sbb
add
fsubrl
outsl
mov
dec
mov
insb
inc
inc
inc
dec
xchg
not
sbb
dec
gs
pop
push
mov
xchg
cmp
adc
pop
cmc
inc
lods
nop
inc
enter
lea
dec
lret
fisubs
hlt
xchg
rorb
in
fdivrp
incb
adc
jl
fidivrs
addr16
cmp
int3
xor
cwtl
test
push
cmp
add
fs
loopne
shll
push
sub
rorb
mov
pop
das
arpl
test
inc
dec
cmp
or
xor
mov
add
add
icebp
add
and
faddl
and
fisubrs
add
cli
dec
bound
test
nop
test
mov
icebp
insl
add
pop
shll
addr16
clc
bound
mov
cmp
test
xchg
andb
add
mov
scas
or
cmpsl
or
roll
les
xor
test
aad
dec
fstpt
ja
mov
subb
xlat
xchg
test
mov
add
xor
icebp
aam
sub
pop
adc
xlat
mov
xor
cmp
ficompl
xchg
or
sub
mov
loopne
inc
out
and
cmc
xchg
cwtl
iretw
xchg
dec
cmpl
add
sti
sahf
mov
loope
sbb
adc
lret
pop
aaa
xchg
add
bnd
mov
jmp
sahf
mov
stc
add
jecxz
cld
or
lret
sub
mov
cmp
mov
jmp
filds
mov
cwtl
cld
jns
dec
out
add
jg
adc
cmpsb
stos
sti
mov
pusha
hlt
lret
mov
icebp
cli
push
in
lret
inc
xchg
loope
cmpsb
sbb
int3
jne
fmulp
out
aas
xor
cli
fdivl
add
idiv
pop
and
push
xor
fsubr
popf
in
jge
not
push
cmp
cmp
mov
movsb
icebp
sub
scas
mov
dec
xor
sub
lret
jle
push
lea
lock
mov
test
insb
stos
sarl
or
insb
gs
scas
inc
and
shll
fcoms
mov
mov
mov
fnstsw
jno
sub
aad
mov
or
xchg
xchg
inc
lods
lahf
leave
movsb
daa
loope
lcall
es
mov
mov
out
xlat
and
dec
std
stos
outsb
test
sub
fs
dec
sbb
pop
sub
popf
sbb
jecxz
cli
add
lock
leave
ret
je
int
out
add
adcb
lret
mov
sbb
xor
cmp
outsb
xchg
int3
aaa
sub
push
rcll
lds
mov
faddl
dec
data16
fisubs
icebp
test
or
das
fsubs
repnz
inc
dec
lret
test
pop
in
xchg
clc
movsb
je
xor
and
add
adcb
jge
mov
cmp
push
jne
and
into
mov
mov
add
cmc
mov
repz
push
jb
adc
inc
dec
mov
push
xchg
jge
in
dec
in
lret
mov
fidivrl
rolb
xor
lea
and
call
cwtl
stc
sbb
pusha
xor
stc
xor
pop
scas
inc
fstp
hlt
pop
sahf
dec
xor
xchg
xor
or
pusha
and
sti
aaa
add
or
lret
movsb
adc
ret
sarl
mov
push
add
lea
incb
add
mov
mov
es
imul
movsb
jp
imul
jbe
xchg
imul
mov
pop
fiaddl
adc
sub
or
dec
jnp
mov
jecxz
in
hlt
xorb
nop
je
mov
xor
rorb
addr16
cwtl
sbb
rol
ud1
push
dec
mov
es
and
ljmp
arpl
in
and
imul
sub
mov
dec
out
ss
cmc
mov
and
and
jl
adc
iret
jo
in
sub
ret
cmpsl
fldenv
cmp
icebp
stos
in
mov
push
pop
lret
push
mov
pop
insb
or
leave
std
loopne
in
mov
out
frstor
fistpl
dec
pop
add
pop
mov
push
push
or
add
pop
sar
adc
sub
fwait
lahf
or
add
push
in
dec
pop
dec
push
add
xor
xor
andl
popf
mov
or
adc
mov
in
addr16
xor
push
pop
gs
in
fisubrl
lahf
out
mov
js
test
lret
sub
add
fistpll
dec
xchg
sbb
jp
outsl
fldcw
mov
sar
jo
mov
xor
repz
sub
clc
addr16
repz
int
add
insb
sub
pop
sti
cs
xchg
insl
push
fnstcw
testb
jmp
fs
js
xchg
sbb
in
imul
lds
add
mov
roll
adc
pop
mov
adc
mov
mov
jle
mov
sub
xor
rolb
jmp
inc
cmpsb
pushf
aad
rclb
and
sub
adc
rclb
loop
fs
cmp
xor
cwtl
xor
lods
mov
dec
push
xchg
test
jg
jno,pn
orl
mov
lahf
cwtl
xchg
mov
inc
or
lea
sbb
inc
jmp
fisubrs
mov
int3
pop
xchg
lods
or
push
ja
jmp
mov
loope
xlat
push
mov
jne
add
pusha
out
lods
insl
xor
fdivl
or
xchg
pop
out
pushf
lret
xchg
mov
jno
add
jmp
cli
xchg
sbb
inc
std
push
mov
cmpsl
fs
mov
push
das
ror
sub
cmp
fs
icebp
fsub
xor
inc
mov
daa
xor
dec
movsb
je
mov
xor
vmread
adc
lods
mov
cwtl
mov
rorl
test
and
sbb
aad
cli
mov
mov
js
int3
das
mov
dec
arpl
cmp
in
loope
jne
add
les
adc
fcomi
lret
imul
negb
dec
cmpsl
push
clc
dec
popf
mov
cmp
jns
cmc
sbb
divl
lret
xchg
mov
arpl
dec
cmp
xchg
lods
dec
adc
int3
jle
jecxz
subb
xor
add
add
es
outsl
enter
cld
popl
call
shl
sub
sti
int
int3
xchg
mov
mov
lea
pop
lret
push
adc
fsin
in
orb
push
lret
into
push
hlt
xchg
inc
cltd
in
sbb
mov
out
into
jo
mov
dec
sahf
pusha
mov
cltd
jno
insl
pop
adc
call
cwtl
sbb
loop
imul
mov
xchg
and
mov
hlt
pushl
mov
and
stos
mov
inc
cmp
repnz
sub
mov
insw
lret
in
sbb
ja
cltd
lret
jbe
mov
movsb
lret
hlt
mov
repz
cmp
fdivrs
pop
cmpsb
sbb
popf
std
int3
jmp
mov
dec
aam
inc
cs
or
iret
shr
push
pop
pop
mov
decl
loopne
mov
sub
jo
and
mov
in
jecxz
mov
popf
sbb
dec
cmp
loope
inc
or
int
mov
pusha
cwtl
movsb
xchg
sbb
sbbl
shr
icebp
and
into
movsb
inc
aad
mov
dec
mov
dec
adc
movsb
popl
ret
cmp
scas
mov
cmpb
xor
rcl
xor
in
mov
in
addr16
dec
fidivs
leave
add
mov
inc
fcoml
sti
xor
push
inc
or
loop
xchg
mov
lret
push
jne
aam
ffree
cmp
in
add
add
adcb
mov
pop
xor
mov
dec
dec
mov
mov
add
push
xchg
std
xchg
fimuls
lret
fdivs
xor
dec
mov
pusha
cmpsl
xor
push
sub
in
xor
mov
push
je
and
or
dec
pop
in
and
stos
popf
stc
jb
and
sbb
lods
cmp
cmc
dec
and
cmc
fcom
movsb
xchg
mov
ja
scas
lret
dec
mov
xchg
add
mov
dec
xor
cli
dec
addb
mov
or
sbb
inc
pop
pop
fimull
ret
mov
mov
push
outsb
mov
push
jmp
adc
addr16
fwait
popf
mov
dec
data16
cmp
jg
xor
divl
mov
cmpsb
jne
cmpsl
adc
push
popf
int3
js
or
jae
orl
xchg
dec
int
bound
dec
xor
in
cmp
add
inc
andb
ret
xor
sub
xor
push
popf
in
inc
sub
js
daa
pop
cmpsb
inc
std
aas
lret
test
mov
cmc
adc
cld
data16
out
cltd
hlt
and
in
and
sti
std
loope
stos
ret
inc
mov
jno
popf
adc
cmp
cmp
pop
and
or
sti
pop
int
cmp
pop
fadds
fsubr
aad
lret
push
push
mov
stc
fs
mov
xchg
outsb
notb
rcrb
pop
loopne
out
sub
cmc
sarb
pop
xor
ds
sbb
push
or
rcrl
xchg
enter
insl
jecxz
cmpsl
sbb
cmpsb
lock
icebp
inc
psrlq
lods
jle
jnp
fprem1
pushf
fstpt
xchg
pop
mov
lret
push
loope
lea
xchg
ret
popf
fidivs
das
insl
imul
sbb
loope
mov
pop
stc
enter
add
cltd
in
std
sbb
incl
inc
or
mov
pop
or
cmp
lods
icebp
cs
push
ja
and
out
push
or
lcall
mov
test
jo
xor
jo
xchg
push
sub
aaa
pop
sbb
cmpsb
aam
dec
mov
in
sub
add
stos
push
xchg
jp
mov
inc
test
xchg
push
clts
inc
enter
shr
xor
dec
xchg
imul
push
js
jge
push
bound
mov
fisubrs
lret
pop
ljmp
jae
fwait
sti
add
imulb
adcl
jecxz
pop
mov
sti
mov
jmp
pop
ss
loope
sbb
mov
stos
lea
ja
xlat
adc
push
jg
es
adc
hlt
pusha
adc
and
outsl
insl
dec
mov
cmpl
mov
andl
mov
mov
mov
data16
mov
ret
adcb
lcall
call
sahf
mov
mov
lea
push
and
dec
mov
les
cmovns
sbb
gs
push
lds
int3
sbb
xchg
cmp
popf
or
jnp
mov
aam
xlat
inc
cmovns
sub
dec
push
in
icebp
dec
insl
jmp
mov
mov
xor
ss
test
jmp
call
lret
jg
mov
inc
popf
ja
repz
imull
pusha
cmp
loop
xchg
popa
pop
insl
jp
in
mov
in
out
pop
aam
fcomps
xor
lret
push
xor
aas
mulb
xchg
icebp
mov
cmpsb
mov
sub
ret
jno
inc
ret
or
pop
pop
xchg
jg
clc
sarl
dec
xchg
cmc
stos
int
mov
pop
enter
rorl
mov
jnp
lret
xor
adc
sar
sub
popa
cmc
mov
ret
cmp
pop
mov
shl
inc
ja
and
sbb
cs
pop
and
stos
cmpsb
add
fs
sti
ss
xchg
pop
dec
jbe
jmp
lods
jo
sbb
outsl
in
fnstcw
lods
push
imul
dec
push
push
adcl
mov
jge
push
les
xchg
mov
lret
xchg
in
jle
outsb
fstl
pop
test
cltd
mov
xchg
xor
dec
cmp
js
insb
das
cmp
adc
xlat
jae
dec
repz
xor
or
xchg
in
sub
dec
jnp
repz
push
popa
jne
mov
sub
xchg
inc
shlb
popa
inc
outsb
or
xchg
push
sub
push
xchg
mov
std
loop
fisttpll
cli
mov
sbb
xor
fildl
mov
mov
fldcw
mov
xchg
push
stos
adc
imul
pop
or
sbb
and
jns
movsb
jmp
and
and
fcompp
push
mov
arpl
aas
cmp
pushl
fldl
dec
push
mov
leave
enter
test
orl
pushl
fs
iret
and
dec
imul
cld
mov
popa
out
and
mov
pop
sti
popf
loopne
pop
mov
mov
aas
jno
call
add
std
cld
sbb
mov
or
lret
int3
pop
add
add
cmp
pop
pusha
int3
mov
movsl
ss
push
mov
data16
push
ss
sub
mov
sti
popf
in
push
arpl
mov
lods
dec
xchg
in
mov
inc
adc
movsb
xchg
rcll
jmp
es
add
movsb
subb
aaa
inc
in
jae
jns
pop
js
jge
sbb
sbb
test
pop
mov
pop
shrd
lock
js
add
jle
data16
roll
sarl
xchg
xchg
xchg
aad
adc
fwait
dec
or
cli
mov
aad
cltd
dec
loop
and
sbb
dec
push
std
sti
fs
cs
mov
dec
xchg
sbb
repz
jle
xchg
push
sbb
mov
pop
lods
das
add
shlb
xchg
dec
add
in
or
cmp
push
repz
jb
out
rorb
aas
jle
imul
rorl
loopne
push
mov
xchg
loop
and
mov
paddb
dec
rorl
push
stc
lock
sbbb
pop
add
mov
inc
loopne
inc
xchg
fistl
xchg
cmp
push
test
dec
stc
lock
add
push
xchg
jge
pop
sbb
adc
int
repnz
std
mov
jb
pop
rolb
in
loope
cmp
and
cmpsb
cmp
sbb
outsl
jp
out
iret
jnp
clc
hlt
iret
lea
sub
fiaddl
out
cmp
fsubrs
dec
ds
std
inc
out
hlt
dec
xchg
fdivl
stos
fwait
dec
out
das
xchg
sarb
push
and
cmpsb
jmp
cmc
jns
push
aam
int
icebp
fldl2t
shlb
je
data16
iret
jmp
out
or
push
loop
sbb
in
sbb
xchg
xchg
push
dec
sti
cmp
in
sbb
push
lea
add
add
enter
fs
add
arpl
in
std
mov
lahf
dec
add
popa
mov
inc
sarl
push
xchg
mov
jo
push
lea
pushf
sbb
pop
add
int
sarl
or
inc
add
movsb
loope
rcll
test
in
add
aam
xchg
pop
jb
bound
shl
out
jmp
push
pop
in
mov
xchg
nop
data16
push
xlat
in
rorl
div
das
lret
es
mov
dec
js
lods
stos
inc
imul
push
movsb
je
outsl
popa
xlat
xchg
cmpb
std
and
cli
jge
mov
or
in
cltd
mov
jne
adc
jo
mov
push
cmc
fld
icebp
popf
and
cmp
xor
enter
loope
cmp
mov
adc
fs
mov
sub
js
enter
popf
or
lods
clc
mov
pushl
push
jbe
scas
cmp
roll
stos
jo
push
fcomp
ret
cmpsb
insb
sub
lock
sbb
std
mov
std
push
cmp
sbb
sar
gs
cmp
imul
mov
test
jmp
push
sbb
sti
fcmovnb
std
xor
movsl
mov
xchg
ror
addr16
pop
xchg
inc
and
pop
lods
mov
ds
xlat
push
xchg
adc
lret
mov
mov
jns
pop
cld
sub
decl
stc
call
fisttpll
movb
add
js
dec
dec
movsl
jp
inc
ret
sahf
mov
mov
loop
insb
fadds
imul
ror
add
out
fmulp
in
daa
ficompl
inc
es
mov
mov
mov
clc
pop
lea
add
mov
inc
fstl
mov
mov
sbb
popf
dec
stos
and
or
lea
add
push
xchg
les
sti
cs
jns
pop
loop
pop
push
in
mov
cmp
add
es
add
pop
and
pushf
test
testb
es
sbbl
aaa
nop
ja
stos
int
out
add
stos
stc
shll
push
inc
mov
sbb
sbb
sahf
xchg
mov
sbb
lret
mov
sti
lea
jae
push
push
lahf
pop
jmp
loope
addr16
sbb
cmc
jl
es
and
mov
mov
adc
cld
push
cmp
push
jbe
cmpsl
fstpl
mov
lods
je
std
ret
inc
mov
mov
leave
push
dec
adc
jne
movsb
jb
push
mov
mov
pop
dec
aas
aas
xlat
loope
out
movsl
in
adc
pop
stc
mov
cmpsb
mov
dec
cmp
cmp
mov
add
js
inc
mov
add
pop
cmp
aam
stc
sbb
mov
xlat
div
cmpsb
inc
cmp
mov
lea
xchg
aam
jbe
repz
mov
cwtl
dec
sahf
cmp
jnp
ja
cmp
mov
dec
xor
add
xor
lret
pop
push
lahf
ret
xchg
inc
jmp
inc
out
hlt
stos
add
mov
ja
fs
loope
pushf
pop
push
pop
pop
xor
dec
xchg
negl
lahf
or
jge
jo
ja
cld
cmc
arpl
test
es
test
icebp
xchg
or
lret
movsl
cwtl
or
xor
fsubrp
fstps
fs
sub
cltd
mov
dec
xchg
xor
jle
fldl
sub
push
and
lods
push
lods
inc
aaa
movsb
call
stos
ss
in
std
mov
bound
data16
and
out
lret
call
add
in
jmp
mov
cld
popa
sarb
in
mov
cmp
mov
bound
jle
mov
mov
xchg
mov
push
clc
aas
lret
mov
ja
mov
xchg
jno
cs
ret
jp
push
sbb
adc
imul
fldl
sbb
cmp
out
mov
mov
jp
dec
psubw
add
add
and
push
or
stc
or
jmp
pop
aas
clc
test
sbb
cltd
jmp
inc
test
lret
mov
ds
mov
mov
popf
out
dec
lock
out
inc
ret
pop
aas
mov
pusha
push
xchg
cli
lret
jmp
cmp
inc
lea
push
pop
rcll
cmp
pop
adc
sub
stos
xchg
data16
pop
daa
clc
jns
popf
xor
push
dec
mov
sbb
or
lods
or
or
inc
stos
push
add
xor
jns
cmc
xchg
xor
insl
in
add
sar
sbb
arpl
mov
rcrb
adc
add
add
cmpsl
sbb
jae
sub
and
sbb
mov
sbb
pop
xchg
aad
xor
rorl
jl
stc
sbb
es
xlat
in
stos
imul
lods
pusha
jle
rol
cmc
fs
pop
add
out
mov
or
movsl
in
or
mov
add
int3
xchg
popa
in
mov
mov
push
jbe
pusha
jmp
in
mov
sub
sar
shll
mov
out
popf
ljmp
and
pop
push
outsl
dec
sub
xchg
or
dec
das
fcomi
mov
jnp
punpckhbw
ja
into
fiaddl
insl
addb
xor
rcrb
pop
push
repnz
jne
jno
lcallw
call
cld
adc
adc
jno
dec
icebp
into
shr
dec
xor
xchg
jmp
in
mov
xchg
jne
sbb
sbb
imull
adc
nop
aas
lret
hlt
ja
aad
pushf
xchg
dec
jno
pop
mov
cltd
or
cs
lds
and
fndisi(8087
mov
inc
push
pop
jmp
enter
sub
jl
sub
pop
cmp
mov
loop
push
dec
ja
xchg
lods
push
xchg
push
loope
or
lea
sti
popf
loop
out
mov
dec
loopne
cmc
jl
mov
sbb
rcll
jle
test
les
add
repnz
call
aad
jge
rclb
mov
sar
loope
cmp
mov
clc
mov
mov
js
rcl
xchg
push
mov
into
pop
popa
xchg
mov
add
shl
insl
push
push
shll
push
lods
and
outsl
pop
xor
jno
cld
lahf
and
jne
imul
jnp
popa
insb
out
dec
js
mov
jno
ret
out
lock
fadds
repz
fs
jecxz
dec
dec
stc
mov
cmc
int
cmpsl
sarl
mov
dec
clc
jbe
repz
aad
jecxz
lods
pop
psrad
adc
jp
ja
lea
sti
sub
stos
in
or
imul
adc
pop
clc
or
mov
data16
loope
mov
stos
les
pop
imul
or
pop
xlat
adc
es
jno
jmp
fs
call
jg
in
mov
scas
repz
or
cs
cmpl
add
push
nop
popf
sahf
outsb
xchg
cmpsb
js
push
cmpsb
sub
js
sub
sub
loop
push
sarl
rcrb
fs
dec
fstpl
call
mov
cmpsl
lods
je
out
in
lods
push
outsb
cmpsb
mov
lahf
push
xchg
sub
pop
push
fisttpll
scas
orl
shll
jecxz
xor
sbb
in
dec
in
dec
shlb
xchg
sar
or
xchg
jecxz
xchg
mov
arpl
shl
hlt
testl
shrl
out
pop
sahf
es
enter
mov
out
xor
subb
cmpl
out
stc
xor
xor
jbe
shrb
repnz
pop
sbb
push
popa
aas
sbbb
loope
rcrb
out
add
push
pop
push
orl
xchg
rolb
std
in
sbb
or
clc
add
jecxz
out
pop
in
in
adc
roll
cmp
dec
movsb
xlat
mov
outsl
xlat
mov
cmc
sub
jl
mov
stc
nop
lea
or
cmpsb
xor
scas
loope
rorl
fstpt
xor
cld
jnp
mov
xlat
cmp
popa
sbb
mov
aad
or
push
cmp
mov
lea
ret
sti
mov
inc
loope
push
cwtl
sub
mov
xor
loope
data16
adc
out
push
xchg
popf
out
out
xchg
loop
xchg
and
daa
sbb
sub
dec
mov
loope
stc
adc
lods
into
dec
jb
mov
std
jae
in
icebp
ret
aad
cli
shlb
or
mov
sub
call
sti
push
dec
in
add
addr16
xchg
insb
xchg
xbegin
cwtl
xor
or
lods
mov
lds
pop
pop
jb
xor
outsl
lret
sar
scas
and
vpunpckldq
sbb
icebp
aad
in
lock
in
mov
xchg
push
lock
lea
dec
jecxz
out
popa
pop
loope
mov
loope
inc
nop
stc
std
and
popl
dec
loope
jmp
das
mov
rcr
jg
cmc
ds
cmpb
aaa
stos
push
add
pop
push
push
out
pop
dec
mov
lret
aaa
mov
cmp
push
dec
xor
xor
lods
cwtl
mov
jno
jl
xchg
stos
leave
mov
xchg
cmp
rorl
cmp
pop
cmc
ret
jle
push
into
add
stos
clc
lcall
nop
ja
aaa
ret
mov
cwtl
jno
stos
int
popf
jb
cmp
out
test
xor
nop
stc
clc
dec
jmp
rorl
mov
cmc
mov
lea
mov
lea
out
rolb
dec
xchg
mov
sbb
dec
push
aad
mov
icebp
cmp
jecxz
and
dec
and
or
sub
adc
in
mov
cltd
adc
data16
scas
and
mov
jecxz
push
aaa
xor
and
lods
jmp
nop
fs
lods
mov
jne
rorb
aam
sbb
into
sbb
lods
dec
dec
mov
sarl
xor
mov
movsl
dec
sti
push
xchg
notb
inc
into
fwait
xchg
lea
jl
iret
divl
fmuls
cwtl
pop
rol
and
popa
test
repnz
lds
mov
lcall
cltd
nop
ss
and
loopne
mov
movsb
push
jmp
jae
cmp
mov
roll
sbb
outsl
lock
mov
jne
sbb
push
mov
lret
xchg
mov
fwait
dec
rolb
out
mov
sar
push
test
push
cmp
pop
sub
dec
jae
popf
punpckhbw
sti
xchg
shlb
jb
cmp
mov
aas
cli
addr16
insb
sahf
leave
jnp
add
jnp
movsb
sbb
lret
les
out
repnz
xchg
jno
cmpsl
dec
mov
andl
inc
push
imul
xchg
push
pop
lea
das
int
in
gs
imul
cmp
in
orb
sbb
adc
movb
fdivr
les
inc
and
popa
sti
mov
insb
rcl
xchg
jne
fucomp
mov
push
cld
or
xchg
lcall
fisttpll
inc
mov
std
mov
clc
arpl
test
push
sub
inc
fistl
mov
addr16
sbb
add
jecxz
pop
adc
dec
push
mov
fs
cmpsl
add
mov
lcall
ljmp
push
hlt
and
adc
rol
push
adc
inc
or
adc
shrl
sbb
cmpsb
icebp
pop
mov
fdivl
mov
cwtl
int3
aam
adc
dec
ret
dec
cmpsl
sub
add
addr16
shlb
inc
jmp
xor
out
cmpsb
sbb
and
mov
in
mov
mov
loopne
addl
sahf
sbb
call
out
stc
sub
mov
lret
fistps
and
iret
sbb
xor
lret
in
mov
hlt
sahf
ret
insb
jp
mov
pop
lock
jl
mov
xor
and
xchg
decb
in
gs
mov
shlb
xchg
scas
fscale
adc
dec
mov
or
mov
shl
stc
mov
fs
or
ja
out
fbld
out
cmp
mov
in
test
stos
out
imul
push
sub
dec
mov
js
fwait
andb
int
pop
cmc
aas
inc
shll
push
or
mov
lahf
mov
adc
inc
and
aad
notl
sarb
inc
sahf
fs
xchg
mov
in
mov
shlb
sub
insl
sub
cmp
jno
push
add
push
subl
push
xchg
iret
repz
movsl
push
int3
ret
and
int
cwtl
lret
popf
mov
hlt
xchg
cmp
pop
cmp
sbb
cmc
push
adc
jmp
and
jae
jg
cmpl
inc
xchg
push
pop
push
int3
xor
xchg
mov
shll
dec
ss
lea
add
and
lock
aas
cmp
or
mov
cmp
jmp
sub
cmp
dec
icebp
test
cld
dec
push
xchg
je
es
in
ljmp
push
push
dec
mov
mov
idivb
jbe
sub
lahf
mov
lods
popf
loopne
fs
orb
dec
push
push
mov
je
jns
ds
sbb
ljmp
inc
repz
cld
fidivrs
imul
rorl
lret
fs
push
int
lds
aad
scas
insb
lret
scas
movsb
loope
stos
jmp
mov
push
push
jge
xchg
nop
cwtl
add
fwait
test
fnsave
mov
ljmp
lods
shl
pop
fiaddl
movsb
sub
and
imul
neg
loope
lret
dec
cmp
sub
clc
jbe
movsl
inc
repz
stos
sbb
push
pop
push
aad
or
jne
push
fisubl
decb
pop
neg
aad
aam
popf
lock
std
adc
sbb
in
addl
cli
jmp
fimuls
xchg
in
testl
popa
and
jmp
std
mov
gs
cmp
lret
or
imul
mov
mov
in
pop
outsl
fs
sbb
jl
xor
ret
mov
add
les
xchg
stos
lds
add
movsb
fiaddl
dec
jae
les
cmp
movsb
data16
into
push
cmp
scas
leave
xchg
sbb
mov
hlt
shr
add
xorb
sarb
enter
fimull
cmp
or
xchg
or
jb
inc
mov
shrb
movsl
add
add
dec
icebp
sub
xor
clc
mov
pop
mov
sarb
aad
stos
jne
data16
lds
xchg
loopne
inc
in
adc
ror
and
jne
dec
xchg
sub
stos
int
daa
arpl
fstl
mov
daa
int
inc
xor
push
push
jbe
push
jae
stc
call
frndint
inc
jo
xor
cmp
shl
push
jbe
xchg
ss
jo
pop
pop
pushf
incb
rolb
pop
ja
sub
mov
stc
xchg
pop
adcb
repnz
pop
fsts
loopne
push
lods
enter
mov
jle
mov
cmp
cmp
sbbb
aas
lret
stos
xor
or
pop
outsl
xchg
xchg
gs
cs
push
aam
mov
inc
and
sub
mov
adc
jne
mov
imulb
sbb
add
aaa
ret
enter
xchg
adc
pop
add
data16
xchg
dec
xorb
mov
andb
mov
mov
test
lea
test
inc
call
movsb
jmp
pop
in
cmpsl
push
push
imul
inc
lret
neg
pop
mov
pop
mov
repnz
iret
mov
mov
adc
mov
addb
jns
popf
ljmp
mov
mov
mov
mov
lret
mov
jmp
scas
add
sub
mov
fldt
mov
hlt
stos
dec
mov
mov
mov
int
sub
mov
push
std
mov
jmp
dec
mov
mov
cmp
push
push
mov
stc
push
or
ret
adc
pushf
cltd
jnp
mov
add
bound
mov
sarl
lret
outsl
negl
xchg
mov
push
sbb
outsb
aam
jno
xor
gs
out
pop
mov
fadd
push
add
inc
leave
js
shrb
frstor
jnp
adc
mov
xchg
and
jnp
xor
enter
nop
xchg
sbb
cli
je
push
or
mov
add
dec
enter
scas
imull
mov
jge
ss
je
imul
out
add
adc
mov
popf
aaa
mov
or
mov
push
jl
sbb
in
stc
mov
data16
mov
inc
push
sbb
incl
mov
xor
mov
push
jge
fisubs
push
pusha
jecxz
pop
or
dec
popa
cltd
roll
pop
js
adc
sbbb
int3
add
mov
jae
push
cli
xchg
jp
ret
push
fdivs
lcall
out
sbb
pop
in
rcrl
mov
mov
cmp
pop
lock
mov
lahf
mov
mov
sub
inc
into
cmp
mov
mov
scas
clc
imul
sub
jmp
test
mov
cmpsb
inc
xor
in
and
insl
fmul
xor
popf
cmp
xchg
jnp
cmc
fimull
push
push
mov
cmp
cmpsb
adc
cmp
cld
or
or
mov
push
fdivrp
loope
add
mov
mov
test
idivb
loope
and
push
lods
in
xchg
jb
cltd
stos
inc
loop
mov
add
das
jmp
push
fisttpl
jp
push
jno
jne
loope
jle
or
arpl
popf
js
ja
int3
jmp
fcmove
jl
sarb
cmp
push
adc
dec
lods
add
repnz
pop
test
jecxz
adc
out
sbb
fbld
nop
sbb
loope
in
sub
mov
mov
mov
or
int3
rcrl
std
cli
aad
int
mov
rorl
outsb
sti
add
cmp
roll
sub
fisubl
shll
scas
adc
fistpl
ja
mov
cmpsb
xor
movsb
loopne
js
ds
decb
cmp
pop
stos
mov
xchg
repz
push
and
js
adc
roll
out
xchg
stc
xor
push
sarb
adc
ljmp
push
inc
lret
mov
rorb
push
ss
ss
ret
sub
xchg
jo,pt
hlt
inc
popf
add
int3
xchg
call
out
int
mov
adc
dec
xchg
roll
xchg
icebp
adc
insl
rcrb
sbb
mov
push
andl
pop
pop
xchg
and
mov
out
cltd
pop
out
in
loope
andl
and
mov
pmullw
je
fcomi
test
cwtl
shr
mov
jecxz
lock
les
cltd
fists
mov
dec
sarl
lods
inc
stc
dec
sbb
rorl
insb
mov
cli
div
mov
xchg
fs
mov
in
pavgw
aam
lret
adc
mov
adc
push
pop
adc
rorb
aam
mov
push
sbb
mov
std
cli
ret
sti
add
pop
and
ljmp
sti
roll
adc
ret
imul
sti
push
mov
das
or
in
pop
scas
adc
pop
xchg
inc
mov
sub
xor
cmp
adc
adc
adc
or
in
push
aaa
pop
push
xor
das
subb
stc
mov
fdivl
xor
shrl
xchg
sbb
cmp
int
pop
sbb
enter
dec
jmp
or
shrl
fwait
rolb
or
repz
clc
data16
push
xor
lea
or
std
pop
ss
movsl
push
out
lret
dec
sbb
inc
popa
inc
call
push
in
je
movsb
std
jae
sti
adc
outsb
fdiv
and
das
jle
mov
subl
sbb
sar
insl
adc
sbb
jne
loopne
les
jge
adc
lock
cmp
scas
xchg
and
pop
lds
push
add
xchg
mov
xor
aaa
add
lods
cmpsb
adc
jg
lret
dec
loope
jbe
mov
ret
jle
imul
sarb
adc
clc
shr
jmp
mov
daa
mov
and
fmuls
fiadds
add
ret
adc
xor
mov
sti
popf
xor
push
setnp
push
loope
ret
sbb
stc
inc
add
fists
xor
jb
sub
mov
mov
fidivs
cmp
lret
out
bound
mov
xchg
nop
push
icebp
insl
adc
and
xchg
mov
push
loope
cmpb
sub
and
cmpsb
div
sub
cmp
pop
fmull
sub
pcmpgtw
mov
jno
jecxz
or
mov
imul
decl
sti
cmpsl
mov
jecxz
add
mov
xor
sbbl
in
cmc
cli
jmp
inc
repz
les
popl
jb
repz
ror
sarb
cmp
call
adc
std
rcl
add
push
mov
loope
mov
or
xor
popf
lcall
jns
mov
xchg
inc
ficoms
or
add
stc
stc
pusha
test
rolb
adc
es
in
subb
cltd
push
pop
xchg
out
and
jg
xchg
addr16
popf
xor
data16
dec
pop
mov
lret
push
jns
and
test
push
out
and
ret
push
and
jle
inc
cmp
stc
sub
cmpsl
aam
stc
lahf
orb
push
pop
shrl
inc
adc
lock
mov
lahf
ljmp
push
ja
outsb
rol
andl
and
or
xor
mov
testl
roll
icebp
or
leave
jne
js
mov
lods
test
pop
call
push
or
fisttpl
push
int3
stc
cmc
pop
hlt
lcall
adc
mov
cmpsl
out
imul
jg
arpl
xchg
std
sub
and
cmovnp
int
repz
pop
xchg
pop
push
lcall
or
push
sti
mov
sbb
lret
cmpsl
icebp
lock
rorb
xor
adc
cmpsb
rclb
cwtl
jmp
jns
xchg
xchg
pop
pop
jp
js
rolb
stos
popf
push
out
loopne
inc
arpl
lods
and
stc
mov
add
dec
mov
outsl
xchg
and
aad
mov
push
int3
sub
fdivrs
xlat
xor
loopne
push
mov
loopne
lahf
aad
loop
test
out
sti
jmp
loope
and
jmp
push
movsb
cltd
out
mov
loopne
cmc
pop
xchg
jecxz
ljmp
push
std
cld
inc
stc
imul
xor
cmp
fs
sti
and
dec
cmp
popa
xchg
inc
cld
sub
pop
fs
cmpsb
mov
cmpsl
fldenv
lods
test
aad
mov
lcall
mov
sarl
mov
lcall
mov
iret
xorl
int
cmp
jno
or
out
mov
in
frstor
test
mov
rcl
out
cmc
mov
in
adc
inc
dec
push
addr16
scas
in
cmpsl
mov
out
icebp
dec
xor
fs
and
pop
mov
addr16
or
in
mov
fstpt
out
cld
sbb
sub
jl
jmp
dec
push
gs
sub
mov
jmp
std
icebp
dec
xor
fs
mov
jae
xchg
in
mov
repz
in
dec
iret
pop
fs
cld
pop
xor
in
xor
cmp
pop
mov
push
movsl
sar
fldenv
in
jl
jmp
mov
mov
in
sti
inc
in
leave
mov
sub
iret
stc
xlat
sti
ret
in
mov
mov
dec
jno
fs
inc
in
xor
jmp
jmp
in
fs
dec
in
mov
int3
or
push
sti
pop
in
int
dec
fdivrl
jne
in
jmp
dec
mov
or
push
mov
cld
sbb
sub
pop
sti
imul
mov
ffreep
lret
lods
in
add
in
inc
mov
fwait
dec
test
jmp
gs
in
test
adc
jmp
dec
cltd
mov
in
out
mov
cld
sbb
loope
cmp
imul
mov
xchg
sti
cmpsl
in
dec
mov
shl
adc
mov
in
lahf
mov
in
sti
fucomp
out
mov
sbb
jmp
dec
adc
in
imul
dec
lods
mov
in
aad
loope
icebp
lret
jmp
mov
pop
in
imul
dec
scas
xchg
cmpsl
sti
dec
in
frstor
in
pop
aaa
dec
sub
fs
sti
pop
in
imul
dec
xchg
mov
in
ret
mov
jmp
cmp
in
insl
mov
popf
dec
scas
sub
xchg
lea
dec
stos
mov
in
sti
dec
repz
add
int
mov
popa
fmull
aam
in
sti
in
push
les
and
inc
or
shll
shl
aam
cli
sti
stc
in
std
mov
rorl
insl
dec
mov
push
aam
in
sti
and
and
imul
dec
pusha
jg
imul
jecxz
push
aam
movsl
outsb
cld
out
loop
in
jmp
dec
in
fs
std
pop
dec
and
or
stc
test
in
popa
fnstsw
cld
out
jmp
dec
lea
adc
xor
inc
mov
popa
scas
lods
jl
in
or
aaa
in
cmp
mov
jmp
dec
out
fbld
mov
jl
jmp
dec
pop
leave
fs
sub
and
mov
movsl
sti
xchg
in
lods
mov
jg
inc
pop
fs
sti
and
adc
lea
jmp
dec
lds
in
andl
dec
aaa
and
sbb
cmc
mov
in
sti
mov
dec
mov
je
movsb
xchg
jae
fimuls
loopne
mov
stc
lcall
push
push
rcll
push
push
ja
sub
movsl
xor
int3
or
sti
push
sbb
test
lcall
je
lods
mov
and
xchg
pusha
dec
add
lcall
lahf
aaa
stos
outsb
aad
mov
xchg
mov
lahf
popf
pushf
sahf
outsb
dec
shr
aaa
push
ret
mov
xchg
aam
and
rorl
xor
add
leave
cltd
je
cltd
dec
mov
mov
jno
cmp
or
push
movl
das
nop
mov
rol
inc
mov
xor
aas
loopne
jae
addb
clc
mov
push
jg
mov
lret
sahf
dec
aas
aaa
push
jae
jmp
gs
pusha
test
dec
adc
dec
lods
int3
inc
dec
lcall
mov
mov
add
or
and
push
dec
cmp
cpuid
and
dec
add
ret
dec
out
lds
or
nop
stos
jo
in
leave
mov
dec
xor
sbb
jns
iret
xchg
jnp
nop
in
pop
jb
je
enter
jl
mov
push
or
lods
neg
mov
ljmp
cmpsl
or
mov
nop
sahf
push
sbb
call
cmp
gs
xchg
mov
jge
stc
mov
xchg
and
testl
fstpt
in
mov
dec
dec
mov
pop
xchg
fists
in
dec
aad
outsl
fldcw
mov
jl
scas
and
or
imul
sbb
xor
scas
lds
sub
push
mov
xchg
in
push
out
pushf
ret
sub
movsl
out
push
nop
adc
popf
pusha
xor
cltd
cmp
xlat
in
out
repnz
lret
fnstcw
push
ds
cmp
scas
pop
pop
add
mov
shll
mov
shll
xlat
loope
push
incl
pop
or
lods
ret
mov
je
lock
fcoms
subb
outsb
fistl
addr16
dec
rol
test
sar
mov
in
jg
test
or
std
mov
inc
fidivrl
std
roll
test
loop
adc
out
imul
test
push
xchg
mov
xchg
rcll
repnz
sahf
subl
ss
rol
sti
scas
aam
add
sub
std
adc
imul
or
iret
mov
jmp
xchg
dec
adc
xchg
lock
fnsave
imul
lret
jmp
stos
andl
push
dec
lcall
mov
sti
dec
mov
push
nop
lahf
std
mov
fucomip
inc
xchg
and
lahf
ss
jge
xor
cmp
sub
lahf
mov
jecxz
movsl
jno
cmp
add
and
mov
lods
mov
movsl
dec
movsb
aas
xchg
mov
mov
out
add
sarb
mov
mov
add
push
lahf
adc
push
jmp
add
add
arpl
pusha
test
dec
lods
xchg
icebp
dec
jmp
mov
das
dec
and
scas
shlb
lahf
mov
jl
cmp
test
jg
jl
mov
aaa
loope
addb
xor
stc
push
jl
movsb
add
push
xlat
push
lds
inc
dec
rcrb
out
mov
je
in
shlb
sbb
fwait
xchg
jb
dec
jno
add
cmp
adc
pop
jb
rolb
les
or
test
mov
inc
sub
sti
or
xchg
or
dec
push
in
test
mov
test
mov
xor
orl
in
inc
push
rcl
and
and
test
push
mov
in
rorb
cwtl
or
shlb
add
lret
fldl
cld
movsl
inc
cmpsl
cmp
cld
adc
dec
orl
scas
addb
js
ror
push
mov
sub
fcomp
inc
xchg
orb
sub
sub
nop
stc
mov
movsl
add
movsl
fnsave
and
cltd
sti
pop
sti
loopne
adc
jp
dec
dec
jno
add
inc
lods
mov
frstor
jns
adc
xchg
scas
adcl
mov
loopne
rcrl
les
cmpsb
xchg
mov
dec
sahf
je
scas
in
or
test
aad
inc
lods
pop
shll
movsl
cltd
arpl
aaa
insb
cmpsb
jg
nop
dec
push
mov
cltd
fistpll
rcrl
jge
inc
orl
add
mov
in
sbb
inc
sahf
adc
ja
in
fstl
ret
movsl
lods
or
adc
popf
movsb
movsb
push
push
xchg
jmp
mov
pusha
mov
inc
dec
and
and
mov
les
cmpsl
xchg
xchg
addr16
fs
cld
loope
int3
dec
idiv
push
mov
sub
sbb
insl
shl
popa
mov
xchg
sub
shl
mov
mov
jle
vunpckhps
in
and
cmpb
push
stc
sbb
push
adc
pop
push
out
lcall
or
sbb
in
jns
addr16
mov
pop
adc
sbb
je
scas
int3
add
adc
sar
mov
jge
inc
pop
push
mov
mov
sub
lds
in
dec
sbbb
jns
lret
sbb
faddl
dec
pop
pop
sarl
nop
or
mov
popa
popa
xchg
int
rolb
jecxz
cmpsl
mov
adc
sub
in
in
jg
mov
jle
push
in
dec
or
mov
nop
xor
and
pushf
stos
push
das
rclb
add
pop
ljmp
insl
enter
dec
popf
stos
xor
cld
subl
pop
mov
mov
mov
fiaddl
lods
sti
out
ljmp
int3
cmp
popf
and
aam
mov
mov
addb
push
lock
mov
mov
lds
mov
xchg
xchg
xchg
cwtl
pop
cmpsl
outsl
in
mov
and
jge
in
jno
sarl
test
lret
lds
cli
pop
out
adc
iret
pop
add
pop
mov
lea
scas
inc
mov
fwait
dec
test
dec
frstor
jmp
sub
shll
mov
rorl
xchg
push
inc
xchg
data16
mov
sbb
imul
cltd
mov
andb
nop
shl
sarl
mov
xchg
fcomi
dec
pushf
das
lds
insb
mov
cld
mov
test
shl
lock
in
in
out
pop
fwait
cwtl
xchg
sbb
in
loopne
pop
and
loopne
mov
sti
inc
sub
movsb
pop
stos
rcr
out
dec
add
cmp
pushf
test
sbb
jle
je
inc
push
sbb
rorb
les
in
inc
aad
insb
cli
shr
insl
xchg
xor
jecxz
fldt
scas
incb
xchg
mov
and
pop
mov
les
ret
jle
cs
aad
in
icebp
outsl
dec
int
clc
mov
movsl
std
int
mov
in
mov
pop
mov
in
fisubs
adcb
stc
pop
out
push
test
iret
pop
mov
dec
cli
sbb
dec
enter
punpcklbw
sti
fdivrp
movsb
or
push
jns
xchg
sub
enter
repz
in
push
and
push
data16
cltd
mov
xor
lret
fsubs
lea
jl
imul
xor
cltd
or
xor
loope
and
adc
subl
rcll
fcompl
cmpl
mov
cmp
rcl
xchg
sub
jmp
test
out
btc
stc
fs
dec
fistps
andb
mov
enter
inc
out
cmpl
test
sub
out
mov
pop
es
popf
jge
aaa
leave
mov
stc
je
fs
sbb
xchg
jno
push
fs
fcmovnbe
mov
push
mov
mov
popf
in
xchg
outsl
mov
cli
sarb
int3
adc
add
cmp
cltd
cmp
jo
sub
jns
cmp
addr16
call
inc
push
icebp
lds
xorb
sarl
mov
jmp
mov
shr
cmpsb
or
icebp
out
sbb
jns
sub
mov
xlat
jge
lods
out
in
cmp
in
mov
mov
ror
cmpsb
mov
pop
out
int
xor
inc
shlb
ret
addl
cmp
movsb
mov
scas
negl
jo
mov
lods
dec
sti
ja
out
shr
pop
adc
psubq
mov
in
shll
jge
sbbl
scas
push
stc
jmp
sub
imul
lret
pusha
mov
and
push
outsb
push
dec
loop
mov
pop
je
sbb
mov
push
mov
ds
sub
pop
dec
loopne
arpl
por
jne
jns
jae
sbb
adc
shrl
loopne
ret
add
push
pop
fcoml
push
mov
sub
jmp
and
xchg
fstpt
and
gs
lods
push
inc
jecxz
enter
inc
add
xlat
imull
mov
mov
movsl
mov
jnp
cmpsl
cmp
jmp
pop
mov
dec
ret
lods
push
aaa
aam
xlat
jl
and
arpl
loopne
stc
dec
hlt
andl
jnp
mov
lods
movsb
jg
sarl
mov
call
inc
inc
movsb
sbb
cmpsl
in
in
ret
sahf
fcoml
fistps
push
repz
xchg
push
inc
xchg
imul
std
mov
or
test
xor
inc
mov
int3
mov
mov
cmpsl
mov
cmp
jne
pop
je
rcrb
mov
pop
fisubl
lahf
fstpt
and
sub
popf
add
loop
stos
pop
enter
scas
iret
adc
in
mov
mov
out
cmp
mov
pop
ljmp
sti
add
push
out
mov
inc
mov
cltd
mull
stc
xchg
daa
push
fists
mov
or
jmp
push
in
lahf
mov
mov
aad
and
mov
push
ljmp
scas
in
in
fnsave
andl
jo
arpl
fisttpl
std
loope
cmp
cld
and
xor
mov
inc
fadd
flds
out
adc
popa
dec
popf
push
pop
cmp
sub
sub
adc
mov
jo
mov
mov
loope
rcll
dec
loope
adc
push
icebp
gs
xor
fimuls
pop
adc
add
jno
cmp
jl
hlt
jno
push
xor
xchg
out
cltd
je
cmpsl
mov
sbb
cmp
add
pusha
cmp
jecxz
shr
adc
push
jl
xor
lcall
and
pop
sub
and
pop
lds
in
add
add
jno
add
lods
push
mov
mov
push
icebp
icebp
bound
inc
jmp
cmp
mov
mov
mov
push
rcr
pusha
pushf
cltd
cmp
sbb
fists
shll
fwait
mov
in
rcrl
pushf
adc
mov
test
fidivs
dec
and
inc
popa
stc
jnp
fld
pusha
test
stc
dec
add
mov
gs
dec
orl
in
out
shll
in
xchg
out
shrl
mov
jl
ds
out
xlat
pushf
jge
mov
loope
mov
mov
or
or
shll
dec
sarl
stc
jne
decb
orb
mov
shrb
push
movsb
fists
cs
js
ja
and
dec
mov
dec
jmp
cld
mov
cmp
shrl
jns
sti
scas
sarl
sub
sbb
rorl
pop
jno
popf
rcll
rorl
bound
scas
cmp
pop
mov
xlat
in
loop
mov
shll
jns
sbb
pop
rcll
xlat
dec
push
movsl
bound
outsb
es
xlat
jb
dec
and
jns
sbb
inc
sar
fisttpll
fs
cld
aam
jge
mov
fwait
push
mov
ljmp
loop
fwait
push
sarl
sub
cmp
in
jge,pn
add
cld
add
push
ljmp
sti
xlat
out
mov
out
addr16
test
out
imul
mov
and
jns
sbb
sub
jae
loop
jnp
cmp
ds
ss
std
cmp
popa
test
rol
xchg
cmp
jmp
mov
mov
or
mov
cmp
cltd
sub
popa
cmp
loope
rcr
xchg
jmp
mov
mov
mov
sub
aad
dec
adc
jmp
add
lods
jno
xor
sbb
cld
or
popa
inc
sub
jmp
out
cltd
jl
and
sub
shll
popa
jl
and
pop
loope
aad
nop
pop
mov
mov
jmp
add
icebp
rcrl
aam
aas
in
les
mov
mov
shr
sbb
inc
jle
aam
fldcw
inc
test
in
dec
loope
icebp
outsl
rcl
mov
lock
pushf
inc
stos
mov
aad
cmpsb
in
outsb
dec
lea
in
insb
xlat
dec
outsl
mov
push
in
mov
pop
nop
mov
push
jns
inc
dec
pop
lahf
dec
call
push
mov
mov
insb
cwtl
lcall
addr16
test
or
lods
and
xchg
rcrl
loope
test
int3
push
stc
popa
loop
cld
data16
loope
bound
or
fs
mov
cmpb
jbe
pop
mov
fcmovnbe
ds
jmp
imul
test
imul
mov
adc
rcrl
enter
addr16
sub
int
loope
xchg
mulb
shll
gs
roll
popa
stc
pushf
scas
aam
dec
hlt
in
jmp
mov
test
cmpsb
xchg
lahf
lcall
add
dec
lds
loope
sub
jl
xchg
in
adc
lock
addr16
imul
stos
outsb
mov
fcom
mov
sbb
inc
dec
mov
movsl
or
daa
test
stos
or
pusha
cmpsl
add
cmp
mov
loope
int
loope
jmp
sbb
mov
mov
lds
rorb
jmp
mov
pop
loope
push
mov
popa
sub
adc
pop
xchg
jmp
nop
mov
fdivrl
orl
cmp
push
in
fwait
mov
shl
in
fmuls
push
je
cli
in
jns
jl
jnp
jns
sbb
or
movsl
stc
outsl
mov
push
or
push
cmc
loope
in
ja
push
inc
lods
int3
outsb
fwait
adc
stos
sub
jl
dec
aad
push
fsts
aad
popa
cmp
sub
jno
dec
xchg
pop
jecxz
insb
jecxz
mov
xchg
daa
leave
stos
cmp
adc
sub
fdivl
jge
xchg
mov
pop
xchg
add
std
lods
std
sahf
adc
sub
scas
ret
mov
aam
stc
pusha
mov
mov
rorb
loop
xchg
test
scas
ret
dec
test
or
dec
fdiv
pop
mov
fldcw
cltd
popf
cltd
nop
nop
xchg
xchg
std
in
xchg
push
dec
aad
aam
rorb
cld
test
dec
mov
scas
les
loope
cwtl
push
in
jo
aaa
rolb
add
fwait
in
xor
lods
orb
out
mov
sbb
cli
arpl
stos
mov
dec
dec
mov
movsb
push
call
mov
dec
mov
popa
pop
in
cltd
jg
push
in
test
jns
cmp
sbbb
in
popf
nop
push
mov
frstor
or
fidivs
shll
in
loopne
mov
xor
test
cli
xlat
jl
dec
xchg
nop
inc
ja
test
cmp
stc
ffree
call
fstpl
lret
adc
mov
stos
fs
aam
popf
add
sub
js
mov
dec
or
jge
movsl
dec
mov
nop
addl
stos
cltd
xchg
mov
jne
outsl
notl
test
xchg
or
jg
or
lcall
fnstsw
shrl
je
mov
sbb
sti
in
pop
sub
dec
sti
cltd
push
and
out
mov
rorl
pop
cmp
add
sti
sbb
xor
aad
or
insl
mov
insl
cltd
inc
sub
fidivrs
xchg
adcb
rclb
test
stos
popa
jno
cltd
insl
add
jmp
lea
fsub
lods
shrl
xchg
cmp
shrb
rcrb
cli
in
adcb
out
lock
test
ss
ds
je
jb
mov
dec
mov
popa
in
sub
xchg
pop
jo
lods
je
loope
jmp
jg
xor
clc
pop
sti
push
jmp
jge
fnstcw
shll
jg
dec
lock
gs
icebp
mov
mov
xor
adc
dec
jno
test
lods
add
dec
cmp
mov
in
xchg
std
cmp
jne
pushf
or
aad
sbb
or
subb
movsl
lcall
xchg
pop
sub
popa
xchg
stc
stc
xor
mov
cmpsb
sar
shr
std
jg
mov
icebp
dec
out
data16
xchg
add
daa
ds
test
xchg
loope
gs
and
in
aas
std
das
popa
aam
xchg
cltd
loope
orb
xor
push
jge
sahf
adc
add
aad
std
xor
add
fwait
xchg
ret
xchg
inc
fsts
lds
orl
aaa
out
xchg
add
pushf
lcall
dec
daa
mov
adcl
dec
mov
jmp
cmpsl
xchg
and
push
jae
shr
rcll
mov
test
loope
dec
popf
in
jns
jmp
mov
jmp
jnp
jmp
je
sti
sarb
adc
sub
sarl
pop
dec
mov
push
lea
mov
xlat
jg
jb
imul
jns
dec
or
mov
subb
push
jno
dec
lods
xchg
push
mov
pop
mov
rcl
cmpsl
fwait
out
mov
push
or
sub
adc
sub
shrl
mov
andb
adc
andl
iret
movsb
addr16
out
pop
jnp
adc
xchg
sahf
jmpw
dec
outsl
dec
shll
mov
pop
mov
stos
test
repz
cltd
push
loope
mov
jb
add
ja
sahf
fsubs
pop
adc
sub
add
dec
bound
jmp
sub
cmovbe
cmp
stos
clc
out
out
enter
xchg
jno
es
leave
pop
test
in
addb
ljmp
pop
fmull
fsub
out
push
les
rcr
xchg
lods
stc
rclb
std
out
sbb
jne
shll
ljmp
lret
push
fsubr
aam
lods
jmp
jmp
pusha
pop
adc
out
pop
leave
sub
jnp
dec
imul
rcrl
xor
xchg
rcl
sub
insl
and
pusha
mov
jno
xor
shrl
mov
stos
inc
jns
add
jecxz
imul
pop
inc
int3
stc
rcll
call
and
jns
aad
pop
mov
in
sbbb
fimull
sub
jnp
mov
pop
outsl
sbbl
jmp
jmp
imul
pop
nop
sahf
enter
sub
scas
mov
mov
in
clc
subl
cmp
or
movsl
dec
lea
pushf
xchg
es
jp
sar
scas
xchg
mov
fwait
xchg
xchg
and
test
adc
adc
lds
rorl
imul
in
je
sbb
add
push
and
xor
jns
lock
sti
loope
popa
rolb
push
jmp
shll
in
fidivrl
mov
mov
aad
dec
mov
mov
add
mov
mov
mov
jbe
fxam
mov
xchg
enter
lock
cmp
in
jno
js
movsl
mov
pusha
push
icebp
jmp
jmp
mov
addb
lcall
inc
xchg
lods
enter
test
inc
dec
movsl
imul
fsubr
aad
mov
mov
jp
pop
cltd
cmp
jbe
pop
roll
sti
jns
adc
and
testb
std
shll
test
add
sbb
enter
push
jl
loop
stos
pushl
rorb
mov
aam
loope
push
pop
mov
in
insl
mov
dec
test
mov
cltd
xchg
test
pop
mov
jmp
sbbb
addr16
jno
xchg
mov
cmpsb
cmpsl
sbb
fstpt
sub
sub
xlat
inc
or
jb
sbb
or
int
inc
and
cmc
dec
movsb
mov
xchg
xor
ss
mov
or
addl
push
jecxz
pop
std
ret
stc
and
or
mov
ret
xchg
mov
enter
in
or
mov
rcrl
daa
xchg
inc
jne
insb
inc
std
enter
loopne
les
test
in
jnp
std
rclb
test
inc
dec
mov
or
push
aad
sub
lret
mov
ja
mov
cmp
dec
pop
xor
sbb
insb
mov
inc
ss
out
xchg
hlt
outsl
push
mov
adcl
push
mov
mov
std
xchg
les
jo
mov
jecxz
nop
roll
outsb
jnp
iret
and
and
mov
jmp
push
inc
mov
jmp
movsl
icebp
cmp
out
loopne
movsl
inc
dec
in
mov
push
inc
aaa
jmp
cmp
ret
jns
out
test
push
mov
cltd
insb
adc
movsl
loope
inc
mov
lret
jno
movsb
icebp
test
jge
fimuls
dec
mov
push
or
lea
fldcw
lods
mov
in
sbbb
mov
lods
outsl
xchg
xchg
dec
insb
xchg
jno
ret
dec
movsl
js
fdivp
xchg
xchg
push
inc
dec
or
adc
lock
adc
aad
in
add
sub
fucomi
popf
inc
mov
sti
sub
sbbl
mov
aad
shll
mov
adc
jle
dec
dec
jae
rol
mov
mov
movsl
stos
xchg
lret
pop
dec
outsb
out
fsubl
loopne
xor
fwait
mov
jg
fld
xchg
in
fdivp
in
mov
cmpl
data16
call
repnz
icebp
dec
dec
lahf
shll
inc
decl
fcmovnu
in
in
shlb
aad
sbb
cmpsb
and
xor
mov
aam
in
or
xchg
xchg
ret
loope
icebp
xchg
mov
lea
outsb
jns
mov
popf
aaa
mov
mov
inc
sub
icebp
mov
cltd
add
cmpsb
cltd
cmp
jo
jmp
mov
test
mov
dec
sbb
adc
ljmp
rcll
xchg
ret
cmp
mov
xor
and
mov
dec
push
icebp
cld
rol
rcrl
adc
stc
and
jns
sbb
stos
jno
jmp
dec
lea
mov
stc
dec
subl
and
lods
mov
mov
xlat
fs
outsb
stc
imul
mov
mov
stc
cltd
and
mov
shll
jmp
loop
popa
outsl
jns
cld
adcb
popa
iret
or
mov
jge
inc
sarl
fidivl
ret
xchg
leave
sub
jno
push
sti
andl
loop
or
cmp
push
enter
test
rorb
jge
rcrl
out
shrl
mov
loope
pop
aad
enter
mov
out
stc
in
and
and
dec
in
jg
mov
loope
lods
stc
cwtl
add
jg
dec
mov
addr16
mov
in
inc
inc
sub
rorb
rorl
or
dec
xchg
jns
jge
mov
in
cmp
or
lock
mov
loope
inc
call
call
or
imul
dec
in
sti
mov
sbb
xor
cld
rorl
fs
sti
aad
cmc
xchg
movsl
mov
adc
mov
mov
mov
dec
sub
stos
loope
jne
int
push
std
loop
in
mov
xor
loop
lds
int
lods
mov
fs
test
mov
in
mov
movsl
stc
dec
addr16
mov
and
test
movsl
rorl
jmp
mov
pusha
or
or
nop
or
jmp
mov
push
push
stc
insb
xchg
jns
outsl
cltd
mov
jge
jmp
jnp
in
in
fwait
int
subl
mov
mov
lods
fisttpll
mov
mov
xchg
sti
jno
push
cmpsb
inc
mov
push
cld
fistl
mov
jge
mov
inc
sub
cmpb
cltd
jmp
mov
cld
mov
leave
dec
mov
leave
sti
cld
mov
out
push
jl
mov
mov
xchg
fwait
loope
mov
loope
mov
cli
cmpl
cltd
mov
dec
fistpl
loop
and
sbb
aam
fdiv
loop
rcrl
and
jecxz
xchg
jmp
dec
cltd
stc
fs
sti
cld
in
imul
fs
js
pop
int
imul
fldenv
jne
jmp
jp
in
or
fstpt
out
inc
mov
call
sbb
cli
fiaddl
in
and
popa
iret
mov
dec
sti
mov
in
std
stos
stos
push
int
and
nop
push
pop
cld
scas
sti
and
js
sub
dec
icebp
fs
stc
jecxz
cmp
shll
dec
xchg
cli
dec
mov
in
cld
mov
xor
cmp
add
loopne
cmp
aam
cld
sar
xchg
in
fldenv
jnp
test
aad
mov
fsubs
leave
dec
ljmp
in
dec
loope
loope
jl
jmp
dec
mov
fs
push
mov
pop
fstps
fmull
sub
pop
jl
shr
and
sub
icebp
in
dec
stc
call
jmp
dec
dec
ljmp
mov
dec
dec
imul
jno
add
dec
out
fs
dec
mov
mov
movsb
sti
jno
mov
jmp
dec
movsl
leave
fs
adc
cmpsl
mov
loope
jmp
dec
jmp
mov
jl
jmp
idiv
mov
jl
jmp
dec
and
in
icebp
mov
dec
xchg
shll
in
cwtl
mov
cltd
dec
stos
popa
fs
mov
cmp
add
cld
loope
jl
jmp
dec
flds
in
test
jmp
dec
jns
fs
sti
pushf
in
leave
mov
sahf
dec
sbb
cmp
in
lahf
mov
mov
je
adc
push
dec
jbe
fs
and
js
sub
icebp
jmp
jmp
pop
fs
cld
pop
loope
xchg
in
pop
mov
popa
push
push
imul
or
mov
iret
add
mov
int3
std
mov
fldpi
xchg
test
in
jno
ret
mov
fcoml
movsl
inc
cld
adc
leave
sti
adc
adc
adc
sbb
fs
sti
mov
sub
sub
js
mov
push
pop
jge
roll
dec
hlt
loopne
or
add
and
ja
loope
sbb
cli
and
ja
mov
mov
andl
hlt
push
cli
and
dec
xor
add
adc
add
jns
cmc
loope
shrb
shr
jns
cmc
mov
sub
hlt
cmp
popa
sbb
jns
cmc
xor
cmp
adc
add
icebp
icebp
loope
int
dec
in
shl
cli
and
sub
bound
hlt
xor
sub
cli
and
ja
icebp
sbb
aam
popa
shll
rcrl
ljmp
orl
and
dec
inc
sbb
ljmp
add
icebp
bound
loope
ljmp
mov
in
mov
xorl
jns
cmc
inc
bound
sub
hlt
icebp
cli
int
mov
shl
sar
mov
dec
mov
xor
dec
in
push
hlt
inc
cli
and
ja
cli
and
ja
add
icebp
ljmp
sbb
ljmp
xchg
dec
in
xor
ja
push
sbb
jns
clc
repz
icebp
dec
stc
loope
icebp
shll
rorl
hlt
mov
dec
sbbl
cmc
push
bound
negb
add
and
ja
loope
sbb
cli
and
ja
mov
mov
andl
hlt
push
cli
and
dec
xor
add
adc
add
jns
cmc
loope
ljmp
mov
sub
hlt
cmp
popa
sbb
jns
cmc
xor
cmp
adc
add
icebp
icebp
loope
int
dec
jmp
sti
icebp
pop
out
xchg
fidivs
xchg
or
fnsave
cltd
and
stc
loope
inc
sbb
inc
sbb
pop
jp
mov
dec
out
popa
push
dec
cltd
sub
mov
pop
jp
rcll
push
jp
inc
push
sbb
xchg
dec
cld
adcl
loop
stc
sbb
stc
and
sub
xor
and
cmp
sub
mov
aas
mov
into
jo
jecxz
add
push
lea
punpckhwd
dec
jo
arpl
jge
cmp
insb
jp
mov
sbb
outsl
lret
jno
mov
data16
or
mov
sbb
xorl
and
stc
inc
dec
sar
dec
lock
lea
fcmovne
mov
aas
sbb
enter
mov
mov
sti
stc
stos
popf
std
lock
enter
mov
test
aam
jmp
subl
inc
jae
cmp
dec
jle
movsb
mov
push
fldcw
popa
leave
mov
mov
test
sub
testl
or
sbb
dec
popa
jmp
mov
inc
mov
jge
stos
mov
stc
test
imul
dec
pop
jmp
sbb
stc
pop
test
sub
xchg
cs
sub
gs
or
cli
aam
or
cli
loopne
or
std
jae
pop
pop
push
leave
mov
xor
sub
pushf
mov
leave
jo
dec
add
mov
sbb
dec
or
jmp
mov
lahf
bound
jmp
imul
rorl
addr16
out
mov
les
jmp
pop
out
stc
sub
mov
and
and
fsts
loop
loope
push
std
mov
pop
inc
sbb
repnz
cmc
lea
mov
test
jmp
sti
jecxz
cltd
xchg
xchg
ror
jmp
dec
out
mov
in
cld
cmp
jge
or
imul
add
int
jecxz
cltd
xchg
imul
lahf
mov
fwait
mov
jmp
stos
bound
popa
inc
nop
std
popa
jmp
leave
dec
imul
jns
or
imul
pop
pusha
or
mov
jmp
fisttpll
pusha
adc
decl
jge
dec
sbb
bound
mov
test
in
mov
pop
dec
jmp
in
adc
jmp
cmp
jno
inc
or
daa
std
xor
pop
xor
stc
fisttpl
leave
push
test
stc
push
les
imul
dec
sub
in
sbb
int
jmp
dec
mov
in
scas
mov
stc
lahf
stc
jmp
pushf
mov
or
jecxz
cli
jmp
std
cli
jecxz
inc
out
jno
inc
jp
dec
dec
sbb
jp
sbb
jp
mov
sbb
pop
jp
xor
or
adc
jp
dec
jns
cltd
outsl
jp
lods
bound
inc
jb
loope
sbb
adcl
idivb
mov
fidivrl
jecxz
dec
pop
out
stos
addr16
in
loopne
adc
mov
mov
ljmp
xchg
imul
das
lods
fstl
in
cmpsl
lahf
xor
push
jmp
lock
lret
or
lods
mov
xchg
test
jl
loopne
dec
adc
sahf
mov
enter
les
je
xchg
out
je
mov
test
popa
xlat
dec
adc
loope
mov
ret
dec
test
scas
lret
lods
fucom
jmp
cwtl
pop
jne
or
push
dec
imul
lods
stos
mov
loopne
pop
shr
cmc
pop
xchg
mov
cmpsb
inc
cltd
jns
add
cli
sti
mov
fucomip
xchg
aas
mov
ja
mov
arpl
xchg
test
mov
ret
addb
nop
in
rcrl
pop
or
lret
pop
gs
xchg
push
push
push
pusha
xlat
mov
outsl
test
cmp
xchg
scas
out
shr
pop
mull
mov
das
push
ja
jno
and
pop
rcrb
mov
push
mov
and
shrl
js
lret
mov
jae
jl
test
or
ret
les
pop
rcll
test
rol
divl
daa
mov
fisubs
ret
mov
dec
mov
pop
icebp
out
popf
mov
inc
push
les
push
mul
cmpsl
aad
mov
out
sti
jmp
out
imul
jne
pushf
out
scas
pop
adc
jb
jmp
stc
inc
inc
mov
dec
jne
inc
rcrl
xchg
ficoms
test
inc
xlat
pop
adc
sbb
pxor
mov
inc
movl
jns
lods
xchg
mov
scas
nop
lods
mov
jg
in
inc
lods
pcmpeqb
jmp
arpl
test
fiaddl
push
mov
mov
jae
test
add
movsb
mov
xchg
cmpsl
icebp
mov
sti
lea
xchg
insl
out
mov
test
sub
inc
mov
inc
aaa
mov
or
xchg
outsl
icebp
push
jbe
jle
jb
and
mov
mov
sub
mov
fmull
fbld
loope
mov
push
outsl
cmp
gs
jmp
lea
fucomi
in
inc
xlat
test
mov
or
loope
jnp
in
dec
adc
mov
mov
out
popa
orl
jg
adc
frstor
stc
add
aaa
cmp
repz
mov
jp
cli
out
sbb
insl
or
sbb
in
das
jmp
arpl
dec
lea
std
mov
inc
sbb
cmpsb
loope
xor
outsb
and
mov
call
aad
ret
loope
ret
lods
lods
std
dec
das
xlat
xchg
or
in
dec
xor
enter
popf
sub
test
and
sarl
fdivr
loope
popf
je
cli
dec
mov
fwait
pop
xchg
shll
mov
rclb
push
out
mov
enter
pop
push
fwait
mov
movsb
add
push
fs
adc
out
cmp
jge
shlb
sarb
jne
ljmp
mov
in
cld
sbb
pop
fsubrp
repnz
fmull
fsubrs
dec
lcall
jle
push
mov
stos
in
ljmp
jmp
jmp
sub
jno
adc
insb
lods
mov
test
pop
pushf
lea
fwait
sarb
cmc
cmp
idivb
mov
les
popf
mov
sbb
add
loope
mov
lea
dec
in
negl
cmp
mov
cmp
test
dec
mov
fildl
mov
mov
jmp
stos
mov
test
popa
inc
stc
gs
call
push
popf
fstl
int3
aam
jg
test
inc
nop
and
sarl
and
push
mov
jge
mov
sub
ret
adc
jmp
mov
pop
lds
pop
pop
mov
cltd
ss
orb
pop
inc
lods
dec
mov
test
or
mov
fldt
lods
sub
jo
gs
ret
gs
imul
xchg
shr
jns
and
dec
fwait
and
mov
jp
jl
in
cmpsl
lods
out
push
mov
es
lods
mov
mulb
mov
in
shlb
cmpsb
nop
xchg
jae
cltd
movsb
mov
mov
jae
cmp
sbb
adc
in
sub
loop
cmp
lcall
mov
loopne
push
mov
rcrb
dec
repz
mov
sti
aas
mov
and
xchg
mov
xchg
xchg
pop
test
test
mov
add
dec
aas
mov
cltd
mul
mov
cmp
sbb
stc
inc
andb
jo
push
lcall
js
mov
arpl
mov
mov
ds
push
in
mov
lea
subb
adc
xchg
mov
inc
push
rep
push
or
xchg
popf
inc
out
sub
or
push
loop
push
sub
stc
adc
out
jae
out
dec
leave
mov
dec
pushf
dec
xchg
test
cltd
sub
sbb
adc
jo
and
sbb
inc
popf
mov
stos
popa
xor
mov
outsl
stc
scas
jmp
in
dec
push
jb
mov
out
jno
mov
mov
push
mov
repnz
stc
adc
shrl
cld
adc
xchg
stc
jns
insl
popf
dec
cld
mov
xchg
sub
cmp
dec
push
frstor
sbbl
in
loope
in
dec
lea
icebp
jp
mov
repz
jo,pt
sub
hlt
cmp
jnp
cli
rcrb
pushf
bound
cld
or
xchg
shl
repnz
jp
push
test
out
mov
sbb
cltd
sbb
jnp
loopne
xor
loop
fld
popf
les
leave
cmc
loope
mov
xor
in
xor
lea
popf
fldcw
cmp
mov
leave
inc
fcmovnb
jl
cmp
dec
or
dec
shll
push
int
ret
das
loop
test
cld
bound
stc
andb
sub
or
rclb
jb
lds
jns
add
loop
xor
add
popl
stc
ljmp
out
jno
cltd
rcrl
dec
or
call
loop
sub
dec
fnstcw
add
mov
inc
sbb
loope
out
or
rorl
loopne
movsl
stos
mov
add
scas
dec
dec
fstps
stc
jmp
dec
in
scas
mov
or
sub
cmc
loope
mov
push
cltd
cld
jp
or
lahf
xchg
jno
pop
xchg
stc
ret
jmp
or
je
test
mov
inc
fiadds
dec
sbb
or
jns
jne
xchg
jmp
in
fldz
pop
and
rcl
loope
jmp
popa
push
aaa
mov
repnz
xchg
stos
jmp
xchg
mov
sub
cmpsl
ja
inc
test
movsb
sub
mov
mov
rclb
cmpsl
mov
enter
clc
dec
cmp
mov
fnstcw
push
out
adc
push
stos
jns
pop
sbb
push
shlb
stc
sbb
add
mov
xchg
pusha
fdivr
add
mov
clc
push
cmp
sbb
cmp
js
xchg
aas
pop
jge
cli
mov
pop
or
mov
lods
cltd
pop
stc
mov
cmpsb
fstpl
xchg
cltd
stc
jae
push
insb
stc
mov
push
mov
jno
dec
jmp
leave
cmp
xchg
or
and
mov
mov
lea
mov
pop
in
std
ret
mov
addl
imul
mov
test
stc
loop
stc
mov
cmp
sti
mov
mov
cmp
jp
mov
rcl
mov
loopne
mov
dec
sbb
imul
idiv
pop
and
int
pop
dec
or
movsl
pop
xchg
dec
shlb
xchg
repz
jmp
in
dec
mov
or
nop
cld
ja
stc
jno
in
test
add
mulb
loope
or
cmc
dec
lea
fnstenv
xchg
cld
dec
and
insb
std
push
mov
loop
cli
in
ljmp
in
mov
daa
adc
rclb
daa
in
dec
mov
dec
loope
out
loope
shl
mov
mov
sti
aad
dec
lcall
dec
das
aam
iret
shll
mov
call
out
jge
xor
cmpl
cmp
loope
aas
loope
and
cmpsl
adc
jmp
aad
fsts
cmp
loope
in
int
rolb
fnstsw
mov
mov
leave
popf
lret
mov
out
imul
jnp
lods
mov
aas
mov
dec
insb
mov
fstl
dec
jge
add
dec
nop
cltd
in
in
loop
lea
orl
clc
add
lock
dec
sub
cmc
mov
in
cli
fisubs
jmp
rorb
jb
xor
push
fs
adc
fnstenv
cltd
push
lea
mov
cltd
sbb
sub
popa
and
sahf
loop
loop
dec
shl
sbb
rorl
push
gs
mov
mov
dec
and
nop
in
out
loope
popf
in
imul
jmp
mov
jp
mov
jb
arpl
adc
in
mov
mov
jmp
xchg
sbb
jmp
in
inc
movsl
mov
dec
int3
scas
and
and
jmp
imul
mov
mov
sbb
sub
push
pmovmskb
xor
add
jecxz
add
or
lds
lea
or
pop
shll
pmaxub
add
clc
daa
cld
mov
test
dec
pop
jecxz
or
fld
and
cli
ja
xchg
mov
cmp
or
cmp
mov
jne
mov
call
mov
jmp
cmp
sarl
sbb
inc
fldl
xlat
adc
insb
jmp
sahf
or
cltd
mov
jno
clc
sbb
sbb
push
xchg
jno
lods
cli
aad
mov
ss
mov
dec
mov
mov
push
mov
dec
pminub
in
mov
or
cmp
fbstp
leave
popl
xchg
or
stc
andb
mov
add
in
insb
or
cmp
or
arpl
bound
fisubl
popf
jmp
jecxz
in
or
insb
imul
arpl
call
imul
jg
pmulhw
call
repz
mov
xlat
fs
loopne
shl
in
or
stc
push
mov
push
aad
lods
call
mov
inc
insl
and
scas
popa
mov
out
stos
les
add
in
jns
xlat
inc
lods
loope
add
insl
rcl
fs
mov
inc
out
xchg
xlat
imul
push
int
push
call
lcall
in
mov
in
shld
mov
lds
or
and
fbstp
addb
push
jmp
push
lea
je
in
mov
push
inc
loope
xchg
lahf
fldenv
or
mov
inc
mov
test
lea
pop
jg
mov
or
rol
mov
pop
sbb
xchg
xchg
ds
bound
mov
mov
std
or
mov
in
incl
push
lahf
inc
iret
popa
insb
pop
cmpl
pop
adc
adc
stc
scas
inc
mov
repnz
jle
push
or
cltd
out
mov
pop
jl
fnstsw
add
pop
insb
outsl
lods
lock
inc
and
fsub
jge
ret
cmc
push
cmpsl
fs
out
push
xor
cmpsb
sbb
bound
in
inc
mov
or
sub
insl
sub
loope
rcl
pop
movsl
cmc
mov
test
scas
sahf
xchg
in
call
in
fcmovnb
lea
dec
stc
in
popa
fistpl
push
cmp
pop
lods
adc
sbbl
fwait
mov
scas
inc
xchg
shll
in
in
ss
dec
mov
jmp
and
test
lahf
mov
mov
sub
jbe
cltd
cltd
sbb
cmpsl
test
dec
stc
jns
inc
scas
inc
jg
cmp
loopne
test
dec
in
fmulp
cmpl
js
mov
push
popf
lods
sti
loope
imul
jge
push
jns
ret
pop
ret
xor
mov
dec
shll
shll
test
lret
rcrb
bound
rcr
mov
stos
fs
icebp
mov
push
loop
cli
or
addr16
cli
aam
or
stc
lahf
dec
and
push
fsts
call
mov
cmp
out
fnstsw
fdivrp
jmp
xchg
fs
rorl
xlat
sub
hlt
pop
in
out
push
aam
push
loope
jno
mov
mov
jne
stos
outsb
loopne
scas
adc
in
cmp
loop
xchg
inc
je
fdivrp
loope
fwait
loope
mov
inc
lahf
sbb
add
call
sbb
add
into
mov
sbb
sub
stc
or
in
loope
mov
flds
fwait
mov
sub
es
dec
dec
sbb
outsl
or
lock
std
pop
sti
xorb
xor
jmp
dec
loop
sarb
sahf
std
outsl
out
or
mov
jl
or
lock
imul
rorl
in
mov
loope
push
sar
or
mov
jno
lock
mov
mov
out
hlt
movsb
and
push
jg
iret
stc
mov
mov
pop
loope
fs
leave
pop
stos
cmc
jecxz
jmp
dec
push
loopne
sub
pop
loope
sti
mov
insl
shll
fnstenv
jge
push
cmp
inc
push
insl
in
lret
cmp
loop
movsl
out
cmp
call
pop
push
lret
push
call
jg
rol
shrb
pop
pop
popf
lods
mov
in
cld
popf
lock
jmp
jp
jo
call
lret
clc
aaa
lea
sub
les
lea
cmp
mov
popa
jl
jecxz
dec
and
pop
pop
sti
pop
jmp
insl
add
mov
lock
and
push
and
dec
dec
mov
shlb
push
and
push
mov
inc
push
xchg
sbb
out
dec
nop
shl
push
xlat
dec
dec
popl
cmp
and
ret
daa
jns
in
add
popl
mov
mov
sti
lea
imul
aas
mov
ret
jbe
idiv
mov
in
sbb
fs
mov
lds
mov
fistpll
jo
fcoml
cli
sti
xor
popf
jl
xchg
push
or
loope
call
jno
loope
and
jg
fs
jmp
bound
mov
test
lock
mov
ljmp
shr
adc
cli
in
xchg
add
inc
arpl
jge
mov
out
mov
iret
aaa
lds
dec
push
adc
jnp
out
lds
notb
push
jnp
in
pop
aad
loop
inc
mov
loope
outsl
imul
lea
jno
test
shrb
and
cli
jmp
stc
test
sbb
push
test
shll
stc
mov
mov
mov
call
push
insl
lret
aas
mov
pusha
in
mov
sub
sti
xchg
jl
lea
mov
outsl
int
sub
xchg
mov
int
fucom
pusha
inc
jge
push
fwait
out
mul
std
insl
inc
jecxz
addr16
subl
sbb
lret
or
mov
mov
adc
cmp
dec
adc
movsb
dec
nop
repz
fistpl
mov
jl
push
jecxz
dec
xchg
pop
vandnps
in
stc
sti
sbbl
mov
aaa
push
jns
outsl
ja
aas
dec
int3
xchg
cmpsb
mov
push
decl
add
lea
jg
xchg
cmp
sahf
jnp
stc
mov
jecxz
and
scas
push
dec
mov
dec
mov
loope
imul
addr16
cmp
dec
cltd
mov
jp
jns
cmp
push
roll
xchg
insl
aaa
mov
lods
loop
test
out
jne
sbb
xor
cmpsl
push
icebp
jo
pop
sti
xchg
lret
sbb
jecxz
push
aam
rorb
imul
or
shll
jecxz
popa
xor
push
decb
rcrb
insb
or
push
mov
sahf
imul
inc
jno
inc
ud0
xor
lret
adc
test
mov
sbb
dec
add
call
mov
cmp
loopne
mov
rcll
stos
cmp
mov
out
push
shld
loope
pop
pop
rorl
fdivrp
test
mov
shll
mov
fcomps
pushf
shll
leave
sbb
cli
cmp
popf
scas
inc
adcb
mov
xor
pushf
call
pushf
xor
aaa
push
mov
js
std
jg
in
aas
mov
jecxz
gs
popf
sbb
stc
mov
lret
dec
fwait
pop
and
mov
gs
movsb
xchg
cmp
sbb
mov
cltd
jno
push
rorb
push
out
idivb
xchg
mov
dec
jmp
push
cltd
xlat
mov
lea
pushf
sbb
mov
loopne
stc
out
outsl
pop
cmp
inc
inc
in
in
fbstp
and
or
mov
test
addl
ret
xchg
or
mov
xchg
pop
loopne
testb
mov
repnz
std
jecxz
mov
sbb
and
lret
or
cmp
xor
lret
push
xchg
pusha
insl
fsubrp
jmp
xor
popf
fimuls
aaa
and
lret
negb
jno
mov
in
mov
mov
sub
std
aaa
or
lods
adc
sbb
and
sub
pop
daa
jns
cltd
pop
xor
lea
stc
fs
and
loope
pop
xchg
jnp
mov
sti
paddq
sbb
xchg
cmp
inc
add
in
ret
pop
std
test
flds
cld
repnz
mov
daa
xlat
cmp
in
or
cmp
mull
in
lret
sub
pop
inc
add
stc
ljmp
rcl
imul
aas
out
add
pop
jge
in
in
adc
jle
loope
xlat
xor
out
dec
mov
loope
repz
fadds
pop
gs
inc
mov
ds
xchg
dec
fcoml
jae
arpl
mov
js
repnz
mov
fs
xchg
push
lea
aaa
jno
pop
mov
xchg
and
popf
negb
pop
es
dec
inc
xchg
shll
mov
dec
dec
loop
xor
jnp
mov
aad
jmp
loope
aad
aam
jb
sub
adc
movsl
ljmp
subl
adc
cmp
adc
and
pop
loop
xlat
nop
in
adc
sub
dec
mov
lahf
das
std
scas
stos
pop
xchg
xlat
fnstsw
in
mov
out
in
jecxz
pop
hlt
adc
nop
or
sbb
jae
and
and
out
movsb
mov
or
aas
jno
sub
aad
outsl
dec
and
push
andl
stc
ss
js
in
cltd
std
int
xorl
cli
stc
mov
sub
lahf
dec
hlt
jle
loopne
and
imul
dec
lea
movsl
sahf
lods
aam
notb
push
lods
jmp
sbb
push
mov
jl
in
cmpl
pushf
lods
popf
loope
mov
cltd
jns
adc
loop
jno
jecxz
fiaddl
cli
std
cmp
jle
in
inc
insb
xchg
hlt
mov
xchg
push
xchg
dec
je
xchg
and
bound
pop
rolb
in
xchg
imul
rcll
movsl
out
addr16
rorb
xlat
dec
push
addl
in
in
push
insl
stos
xor
cli
cld
and
pop
aaa
push
imul
jno
repnz
sub
inc
jae
or
adc
adc
mov
lds
cld
or
ja
lret
jno
cltd
cmp
xlat
push
sbb
in
out
mov
pushf
rorb
aaa
shl
decl
shl
jmp
sbb
sbb
repz
jl
repnz
div
inc
mov
cmp
cli
jecxz
idivl
loope
shl
arpl
push
jg
push
pop
cmp
cmpb
daa
popf
xchg
loope
push
out
adc
shl
ljmp
or
shrl
or
sbb
dec
loop
pop
jno
jge
ret
ds
fwait
jl
sbb
jmp
cmc
incl
loope
bound
dec
arpl
sar
nop
and
mov
loope
jno
xchg
test
adc
test
push
mov
xchg
lret
ret
cltd
sti
insl
inc
or
xchg
jl
dec
sti
inc
cmp
pop
pop
xchg
inc
mov
jle
mov
cmpsb
adc
mov
loop
push
scas
and
and
inc
rcrl
std
cmp
mov
jle
and
add
ds
loop
jecxz
cmp
cmp
jae
and
mov
cmp
add
aas
dec
jg
jg
mov
neg
xchg
cmp
std
test
jecxz
in
dec
shlb
xor
mov
mov
sarl
icebp
and
insb
or
cld
sti
enter
ds
popf
xchg
dec
cli
mov
cmpsb
stc
leave
sbb
out
dec
stc
xor
pusha
mov
out
jmp
lods
pusha
adc
and
push
jecxz
mov
movsl
xor
dec
lret
test
out
outsb
lahf
dec
fisttpll
ret
and
push
cmp
pop
and
mov
shl
sub
in
stc
out
test
in
push
addb
shll
stos
adc
jbe
jne
cli
mov
cltd
add
jo
loope
adc
dec
and
and
or
ror
dec
inc
pop
les
mov
xor
mov
jne
js
sub
mov
inc
lods
jmp
dec
xchg
xor
mov
inc
mov
mov
inc
sti
jg
cmp
or
ret
sbb
inc
lea
xchg
sbb
jecxz
cmp
divl
out
dec
lock
cmp
push
mov
mov
outsb
cmc
push
out
test
gs
jnp
mov
mov
jnp
pop
fstpt
out
stc
mov
xor
mov
fstpl
stc
std
loope
out
or
daa
jno
sub
mov
test
test
mov
std
imull
xchg
stc
xlat
pushl
out
ss
popl
push
out
stc
aad
jmp
clc
repnz
pop
ret
jle
push
movsb
jmp
in
dec
stc
ss
in
cmpsl
cmpsb
pop
cmp
shrl
mov
mov
or
mov
mov
out
jecxz
mov
lcall
mov
insb
mov
out
stc
sub
out
aas
je
and
roll
ja
lahf
sub
dec
jmp
cltd
pop
dec
fbld
movsl
loope
and
loope
xchg
and
jmp
std
dec
mov
insb
setle
lods
outsl
dec
or
test
or
test
cli
or
mulb
jmp
test
wbinvd
mov
inc
or
xchg
mov
stos
jnp
rcr
lcall
lods
jge
pop
mov
jae
jecxz
outsl
pop
or
xor
rcrl
xchg
and
in
inc
scas
std
push
je
dec
mov
jmp
int
mov
mov
mov
fwait
push
mov
mov
in
jno
sub
dec
shrl
sbb
push
fnsave
aad
dec
ss
inc
and
add
inc
lds
or
shlb
adc
nop
fucom
mov
loope
in
mov
pop
movsb
cmp
sub
xchg
mov
add
inc
call
sbb
add
pop
and
scas
lods
in
jb
ud1
enter
sahf
add
repz
cmp
cmp
inc
or
loopne
fidivrl
push
fistpl
add
movsb
mov
mov
daa
sub
scas
cltd
inc
daa
out
aaa
test
inc
mov
lret
add
cmpsl
aad
stc
mov
add
movsl
lret
out
sahf
push
cltd
inc
jno
lret
test
cltd
inc
cmc
inc
xor
sti
adcb
mov
and
inc
cmc
fwait
lea
push
ret
shrl
les
adc
sbbl
loop
lea
pop
push
icebp
dec
movsb
xor
inc
mov
pop
icebp
mov
popf
aaa
icebp
push
icebp
and
jmp
insl
lods
push
sar
lods
aas
sbb
or
xchg
mov
sbb
add
xchg
fwait
push
mov
in
mov
dec
movsb
sarl
mov
inc
sub
xchg
in
sub
mov
stc
scas
xchg
dec
mov
adc
fisttpll
jnp
fmull
push
sbb
inc
movsl
adc
shlb
and
fidivrs
in
ficoms
jmp
add
std
lods
lock
mov
cld
insl
stc
loope
jmp
dec
cmp
testb
in
int
shl
gs
jmp
aad
in
fs
inc
jmp
out
popf
mov
cld
imul
dec
and
fs
cld
xchg
sti
mov
jmp
decb
mov
shl
jmp
dec
sub
incl
in
or
sti
cmp
push
xchg
stc
aam
lods
dec
and
dec
sarl
sbb
xor
or
fdivr
pop
stc
std
xlat
jmp
dec
adc
popa
loope
or
sti
cmp
fucomp
lea
cmc
popa
test
shr
gs
sbb
aad
or
sti
sub
inc
dec
stc
ret
jl
stc
mov
jmp
jmp
and
jge
icebp
jmp
leave
dec
in
vpunpcklwd
mov
add
dec
xorl
add
stc
insb
adc
jl
std
or
xor
jle
cmp
or
popa
in
lds
loope
jbe
mov
mov
stc
bound
and
cmc
movsb
fstl
mov
fwait
mov
adc
test
fnsave
and
cmp
arpl
shrl
shr
fsubr
mov
stc
pop
and
inc
and
and
mov
and
je
aad
push
inc
loope
and
mull
lea
adcl
and
fchs
daa
fisttps
lea
mov
lock
mov
dec
xor
add
jo
jns
inc
mov
cld
mov
inc
mov
and
rcll
sub
repz
in
lods
mov
add
insl
lret
js
push
lods
nop
leave
fsub
stc
mov
push
lret
in
mov
sarl
in
stos
cld
adc
fldcw
fdivs
fnstenv
adc
aad
addr16
cmp
fistpll
insl
ret
jg
add
lods
cwtl
jge
xchg
and
jae
cmp
lods
jge
push
std
out
jge
or
out
jmp
js
int3
pop
lods
sub
subb
jae
fwait
cmc
mov
in
inc
lds
mov
ret
jge
and
fcmovbe
add
mov
and
loope
out
arpl
add
lods
adc
in
out
int
popf
lea
stc
out
inc
andl
jmp
add
pop
int3
mov
icebp
or
loope
aam
cld
jge
sub
leave
push
sar
lods
cmp
aad
addr16
xchg
push
insw
ret
and
lea
pop
mov
movsl
lods
cltd
popa
xorb
out
rcl
jmp
popa
sub
jae
cmp
lods
or
test
fs
lods
mov
sub
leave
dec
push
movsl
lods
inc
popa
jle
push
inc
mov
loope
in
jmp
loopne
and
mov
xchg
dec
icebp
or
insl
addr16
mov
shr
ljmp
mov
ss
xor
ror
dec
and
jle
jle
and
arpl
lods
dec
lock
mov
fs
iret
fnstsw
mov
cmp
frstor
push
std
fisubl
aaa
les
jge
loope
sub
int3
cmpsl
in
fisttpll
and
xor
loop
and
jo
xchg
mov
fsts
lods
jge
and
rcrl
mov
addr16
loope
sbb
ljmp
jno
loope
mov
rcll
and
int3
xchg
add
aad
pushl
nop
mov
shrb
cld
cmp
mov
rorl
xor
mov
mov
cmp
dec
xlat
lret
loope
push
lods
dec
cmp
push
push
ret
movsl
daa
ljmp
out
fidivs
jmp
mov
and
xor
cmp
mov
lock
cli
xchg
fs
mov
scas
aad
outsb
pop
push
mov
movsl
hlt
in
jle
test
xor
movsl
cmp
inc
movsl
mov
and
movsl
mov
pop
or
sub
int3
cmp
movsl
xchg
out
test
sbb
movsl
fdiv
inc
lods
pop
stc
and
and
std
les
test
xchg
mov
pop
ja
push
dec
xchg
fisubl
popa
jno
jmp
mov
jnp
insl
jns
or
jns
mov
loope
jns
ret
cwtl
fisubl
popa
inc
adc
mov
dec
and
stc
or
leave
and
int3
push
fwait
lods
xchg
push
push
stos
cld
adc
jne
ja
in
jge
mov
or
rcr
jge
push
loope
add
sub
pop
pop
mov
movsl
loope
loop
shl
xor
lea
dec
sbb
test
add
insb
loope
mov
cmp
stos
jns
xlat
dec
call
cmc
les
pop
filds
pop
aad
loope
mov
add
xchg
pop
imul
push
and
pop
sbb
ret
pop
loopne
icebp
clc
adc
loope
jmp
cltd
push
and
xchg
leave
std
inc
lods
pop
stc
and
pusha
xchg
push
fldenv
or
lods
mov
mov
inc
fsubrl
in
dec
pushf
icebp
push
outsl
lods
mov
loop
loopne
fisttpl
sub
out
in
mov
fwait
nop
adc
movsl
lods
jns
dec
cmp
xchg
fwait
es
popf
jmp
sub
pop
lods
jmp
mov
cmp
jmp
mov
xchg
popa
icebp
adc
dec
lods
cltd
setno
jmp
popa
and
loop
stc
fdivs
adc
jo
popf
add
jns
ja
mov
sti
jo
fmull
movsl
std
sbb
fbstp
dec
movsl
jne
lock
jo
mov
xchg
movsl
insl
shlb
adc
rcr
sub
shl
pop
leave
inc
mov
xchg
dec
fs
fcmovnbe
arpl
lds
dec
inc
mov
icebp
xchg
fs
jl
and
int3
lods
hlt
mov
andl
lock
imul
mov
mov
or
gs
mov
xor
mov
cmpsb
stc
cmp
pop
enter
test
jo
cmp
dec
xor
insl
sarl
sbb
fsubrs
push
push
xor
sub
insl
shrl
int
and
add
loope
in
dec
xor
sub
mov
dec
and
insl
lods
dec
std
add
inc
dec
rcrb
xor
in
movsl
lods
cmc
fs
xchg
sbb
inc
aaa
or
lods
clc
lret
aam
fwait
movsl
pop
dec
or
inc
out
test
dec
es
adc
popa
insl
xor
mov
jno
fsub
lods
xchg
popa
or
push
inc
mov
sbb
jns
xor
lods
popf
jmp
mov
pop
in
mov
xor
sti
loop
jno
push
add
pop
mov
lods
leave
fwait
sub
push
or
xor
jne
adc
out
loope
int
fs
pop
mov
sbb
push
lods
cmp
inc
mov
stc
jne
aaa
cld
loope
popa
movsl
sub
dec
inc
movsl
sub
mov
jmp
scas
in
xchg
jnp
dec
outsb
test
popa
ss
rcrb
xchg
adc
adc
adc
ja,pn
int3
pusha
jmp
lea
pop
dec
stc
adc
mov
lods
lods
jmp
pop
in
dec
movsl
pop
dec
sub
or
shl
push
dec
and
icebp
push
ret
jno
mov
jnp
mov
mov
sub
in
lods
mov
jno
mov
sub
loop
icebp
inc
lods
pop
stc
and
and
std
les
and
pop
popa
stc
in
inc
mov
leave
ja
mov
jne
and
shrl
and
lods
popa
lock
mov
je
xchg
and
adc
add
lods
dec
inc
and
hlt
or
and
nop
imul
ret
sub
shlb
out
popf
jl
jmp
add
in
jno
xchg
fnstcw
sbb
sbb
loope
mov
nop
pop
and
jmp
jmp
inc
in
test
nop
jmp
sbb
gs
mov
cmp
and
xchg
lods
mov
lret
cltd
and
adc
xchg
or
hlt
out
popa
mov
mov
cmp
push
shrb
mov
call
fisttpll
mov
cwtl
stos
sbb
test
xor
add
jp
into
in
jmp
push
frstor
jmp
dec
push
lods
movsl
jnp
inc
and
mov
nop
stos
fisubrl
jmp
inc
dec
in
sub
push
or
movsl
lds
sub
cmp
mov
stc
lods
mov
sub
or
in
gs
lods
cltd
lret
and
insl
lods
ss
out
fldenv
jns
sbb
jns
mov
lock
and
mov
adc
loopne
loopne
lods
movsl
jmp
jl
cmp
jg
int
nop
mov
fldt
lcall
xchg
scas
in
test
mov
fcmovbe
popa
jns
lret
std
out
add
mov
mov
rcll
leave
dec
movsl
mov
push
push
xor
or
frndint
pop
pop
or
ret
xor
rcr
sbb
les
repz
lea
lods
push
adc
out
adc
cld
orl
jmp
cs
aam
jne
sbb
inc
dec
dec
pop
hlt
dec
mov
movsb
mov
cltd
loope
inc
and
mov
add
insl
inc
mov
std
or
and
cld
jmp
ja
in
push
and
in
jge
mov
and
jmp
cmp
xor
xchg
in
and
lods
ja
in
xor
xchg
lcall
and
jmp
jg
add
cltd
out
jl
mov
sub
jecxz
loope
gs
test
fcmovne
add
and
adc
jmp
fiaddl
inc
stos
in
or
pushf
or
movsl
fdivrs
cld
stos
int3
inc
in
in
movsb
push
add
fwait
loope
fisubrs
dec
dec
and
stc
out
iret
sub
dec
cld
xor
in
scas
push
imul
and
sbb
icebp
jmp
lds
std
sbb
in
pop
and
jne
xor
dec
inc
decl
in
cld
inc
test
insb
idivl
cmp
out
mov
cmp
cld
arpl
rolb
xor
pop
mov
lods
jl
sbb
mov
ljmp
inc
lahf
je
cmp
cld
pop
add
rcrl
int3
sub
out
xchg
mov
into
sbb
mov
int
jl
cmp
popf
mov
inc
fcompl
pop
mov
loope
jl
sbb
adc
push
inc
fsubrl
sti
xor
jns
adc
not
jne
sar
dec
popa
jl
insl
aad
jp
loope
int
jne
fs
pop
cmp
mov
loope
imul
in
shll
insl
jno
push
xor
mov
int
push
pop
jb
and
dec
push
fwait
scas
push
sarl
fldcw
shll
mov
out
cs
in
adc
or
das
hlt
sub
mov
inc
arpl
adc
rcrl
mov
arpl
outsl
shll
shrb
jl
mov
shr
stc
dec
mov
lahf
sub
cvtps2pi
pop
rorl
dec
fs
fnstcw
lods
jge
jmp
insl
pop
sarl
sub
ljmp
stos
inc
mov
popa
mov
test
add
stc
mov
inc
and
pop
mov
mov
shlb
loopne
test
in
xchg
shr
jne
sti
jmp
dec
sub
popa
pop
jns
dec
and
jmp
mov
pop
inc
in
push
mov
or
sti
pop
mov
cltd
andl
inc
jp
mov
mov
pop
jp
push
jno
mov
jp
jmp
imul
xlat
stc
pop
cwtl
dec
mov
ret
push
sub
dec
fnstcw
insl
popa
xor
shll
das
mov
dec
sti
cmp
data16
xchg
sbb
dec
shll
sbb
sub
dec
rcrl
in
cltd
mov
or
sti
mov
mov
mov
lods
add
shll
fdivr
cmp
mov
dec
movsb
shrl
nop
mov
sbb
pop
adc
icebp
dec
ljmp
and
and
cmpsl
sub
jmp
mov
icebp
lods
mov
movsb
leave
iret
ret
fucomp
xor
mov
fdivrl
mov
dec
mov
jmp
jmp
int
xchg
and
cmp
xchg
cmp
gs
leave
lods
jmp
bound
mov
mov
mov
jmp
shll
fs
sti
out
mov
aad
scas
cmc
mov
jl
jb
jl
jmp
mov
xor
adc
sti
icebp
in
mov
cli
stc
ret
mov
xchg
jl
sbb
les
pop
mov
icebp
cltd
and
stc
mov
decb
mov
lods
adcl
and
lods
rcrl
sbb
stos
pop
shl
rclb
scas
jp
icebp
ret
xchg
cmp
xchg
fcmovu
mov
sti
jns
nop
js
xchg
inc
pop
and
test
xchg
inc
mov
and
jmp
test
mov
sar
cmp
fxam
inc
rcrb
jge
mov
pop
mov
aas
shll
lods
ss
jp
test
lea
in
cmp
and
jno
or
loope
fxch
mov
in
cltd
xor
or
orl
out
adc
popa
imul
std
cmp
icebp
cld
jp
mov
stc
jne
dec
dec
loope
rcrb
jmp
dec
outsb
stc
stos
std
xlat
aad
cltd
jno
pop
dec
out
dec
ljmp
stc
int
in
jno
mov
jno
dec
in
push
xlat
or
or
sub
out
xlat
stc
adc
sub
cmpl
fisttpll
les
and
ret
or
int
in
lds
jg
sub
push
rorl
outsb
in
dec
mov
icebp
movsb
mov
lock
lods
adc
fstp
inc
int
loope
jl
in
nop
jecxz
in
bound
sbb
xlat
dec
out
cli
push
je
cmpsb
in
cld
in
nop
sti
vpaddd
std
sbb
xlat
dec
jmp
shlb
in
aam
rol
jno
push
in
aad
fdivrs
movsb
xlat
loope
dec
jns
sbb
xlat
dec
in
and
mov
in
in
nop
rol
in
bound
sbb
xlat
dec
les
ret
je
cli
in
lds
jge
jns
fnstcw
dec
fsubl
fcmovnu
xchg
fisubs
and
aas
mov
popf
lods
lcall
stos
stos
xchg
mov
test
imul
jmp
mov
rorl
popf
into
xorl
xchg
mov
or
push
push
sub
adc
xchg
inc
popa
je
mov
jmp
shr
jns
fs
mov
pop
or
inc
in
roll
cld
xchg
adc
stos
jmp
loope
jmp
sub
test
loope
add
sub
mov
or
lods
in
push
mov
cmp
sbb
std
in
in
aam
or
fs
dec
pop
push
xchg
fisttpll
pusha
aam
inc
mov
movsb
movsl
dec
sbb
or
jl
pop
in
test
xor
aam
adc
push
les
stc
popa
mov
inc
push
dec
leave
xchg
sar
and
and
pop
adc
pop
fisubrs
or
insb
push
hlt
and
std
mov
sbb
mov
adc
and
and
inc
jns
sbb
and
jns
or
movsb
shr
stc
and
hlt
sub
leave
test
mov
mov
test
jge
mov
in
call
push
fmull
cmp
fbstp
mov
scas
int3
shll
cltd
cltd
call
movsb
mov
and
xchg
pop
in
fldl
popf
jecxz
mov
mov
fwait
popf
popf
cs
mov
aam
fucomp
dec
test
sub
mov
sbb
fadd
cmpsl
or
dec
lcall
xorl
js
xchg
loopne
rclb
cmp
push
inc
cmpsl
jge
mov
push
cmp
lods
fldt
xor
lahf
mov
push
out
pushf
pop
xor
mov
inc
mov
daa
adcb
or
adc
ret
and
outsb
mov
jge
jmp
jno
shll
mov
lea
in
pop
push
popa
lcall
mov
rol
lahf
adc
push
ret
js
mov
in
std
jno
adc
xchg
and
in
mov
dec
push
mov
insb
dec
lods
lret
dec
pop
dec
add
mov
inc
xchg
or
insl
jp
movsb
jp
mov
pop
in
insl
cld
pop
mov
popf
or
in
mov
std
inc
mov
mov
inc
vprotb
dec
in
loopne
mov
cltd
int
fucom
icebp
adc
incb
xchg
push
das
loope
loopne
mov
aad
lock
mov
xor
movsl
mov
xchg
jle
mov
jecxz
jae
inc
pop
adc
push
in
adc
xchg
mov
mov
inc
incb
repz
loope
movsl
rep
test
mov
in
lock
ds
notb
stc
mov
mov
adc
cmp
ds
inc
arpl
jle
rorl
les
movsb
les
in
lret
sub
pop
std
ss
gs
ror
mov
sbb
xchg
adc
jmp
out
mov
sub
jmp
rol
cwtl
jo
stc
out
mov
sti
movsl
rcll
mov
das
outsl
cs
std
in
pop
mov
cmc
int3
jge
cli
mov
out
rcrb
xchg
shll
lods
xchg
stc
fwait
mov
xor
xor
movsbl
mov
loopne
movsb
negb
fs
dec
add
je
ret
lds
test
mov
nop
xchg
jecxz
push
ficoms
sbb
frstor
pop
xor
pop
les
xor
push
rcl
dec
mov
and
test
ret
inc
in
lcall
movsb
in
lock
adc
inc
insl
bsr
dec
add
lahf
mov
xor
pop
popl
inc
push
loopne
cmp
pop
push
inc
pop
std
push
sbb
add
pusha
add
insl
cli
mov
add
sahf
push
in
loopne
xchg
out
shll
das
stc
imul
xchg
dec
ljmp
pop
jmp
test
adc
dec
icebp
pop
xchg
std
popa
xor
mov
loop
mov
mov
mov
and
adcl
ljmp
fdivrl
rcll
shll
mov
push
pop
or
mov
out
mov
push
dec
les
das
rol
stos
xor
and
shrl
mov
mov
jns
stc
mov
mov
and
dec
mov
xchg
aaa
sbb
and
pop
or
clc
imul
imul
not
test
xchg
jmp
jo
pop
std
lds
mov
jns
fisubrs
mov
lods
mov
adc
int3
sub
fildl
aad
mov
mov
sub
leave
sbb
adc
leave
mov
shll
dec
shl
and
push
cld
pop
fmuls
mov
sub
jb
std
xlat
jmp
or
arpl
addl
bound
adc
mov
ljmp
popl
inc
lock
push
repz
jmp
sbb
pop
faddl
xor
lods
rolb
stc
aam
lea
lods
lds
test
dec
xor
push
aad
mov
std
mov
fstpl
mov
jmp
jo
fsts
subb
int3
in
sub
cmpsl
or
sub
frstor
dec
mov
rclb
jge
imul
lods
int
sub
out
in
pop
popf
icebp
dec
mov
xor
movsb
inc
in
mov
flds
outsl
jno
add
shlb
pusha
lahf
add
mov
add
mov
int
mov
mov
sub
ja
dec
lods
or
out
inc
insb
mov
roll
loopne
jne
adc
arpl
mov
dec
add
mov
lods
mov
data16
stc
insl
mov
int
adc
add
lea
add
push
xor
xchg
inc
leave
dec
or
and
std
arpl
push
sbb
sbb
movsl
fldt
movsb
mov
mov
lds
shll
nop
insl
in
xchg
xchg
mov
fld
sub
shl
jge
ret
outsb
sarl
push
xor
dec
fldz
jg
sub
movsl
cltd
sti
add
ffree
mov
leave
std
xor
aad
sarb
aad
mov
dec
push
shr
cmc
stos
popa
lds
les
mov
xor
sub
xchg
test
fldenv
shll
nop
popf
push
mov
test
dec
xor
setge
popa
pop
lock
cmp
cltd
mov
mov
xor
movsb
dec
jge
cld
sub
js
stos
shlb
arpl
out
test
popf
mov
sbbl
rol
lahf
xchg
insb
int
jb
test
push
stc
loope
mov
and
pop
movsl
test
sahf
jo
mov
test
mov
enter
inc
stos
dec
sahf
fwait
dec
rorl
fstps
cmp
cmp
mov
test
decl
mov
inc
in
sbb
pop
dec
movsl
jmp
add
in
and
iret
les
pop
mov
cmp
das
lcall
sbb
jno
dec
stos
cmpsl
or
xchg
and
sti
inc
insl
mov
gs
cwtl
rcrl
mov
scas
mov
std
cmpsb
lahf
xchg
push
call
rcrl
jmp
test
mov
fstpl
add
rcl
sarl
lcall
shll
dec
out
sahf
cmpsb
sar
push
movsb
dec
jecxz
mov
add
daa
adc
data16
push
fcoml
xor
lods
lock
xchg
adc
repnz
outsl
roll
dec
std
and
mov
mov
fisttpll
mov
std
popf
loope
cmp
cltd
xchg
aaa
in
mov
fldenv
lea
xor
aaa
fs
add
fsts
mov
fmull
fld
sbb
mov
mov
mov
dec
pushf
test
les
inc
loope
add
dec
adcb
std
push
aaa
in
pop
popf
push
sar
subb
fnstcw
jbe
rcr
xor
jmp
std
or
push
in
inc
in
test
mov
fsin
sub
inc
mov
fsubrp
mov
jmp
fstps
cmpsl
jmp
xchg
xchg
jmp
rcr
pop
cmp
dec
pop
jmp
sbb
test
mov
es
sub
scas
mov
mov
mov
stos
mov
mov
aad
add
sti
fnstcw
xor
adc
jno
imul
inc
push
jmp
mov
pop
or
aad
xchg
test
mov
xchg
add
std
sbb
jp
movsl
jle
lahf
add
xchg
stc
orl
inc
inc
xchg
imul
cmp
jge
dec
mov
cmp
inc
and
loope
jno
out
stc
fincstp
dec
jo
nop
out
scas
ror
std
pop
or
mov
rorl
mov
insb
fs
add
sbb
loopne
mov
and
mov
xor
leave
jne
bound
in
out
sbb
jge
cmp
stc
in
loop
in
jne
and
je
popa
or
dec
into
sub
inc
pushf
push
mov
jmp
xchg
es
lock
fnstcw
fs
xchg
cli
js
call
aad
in
sbb
ljmp
test
cmp
in
and
fsts
adc
and
jne
adc
xor
mov
fwait
and
bound
dec
mov
or
dec
out
sbb
dec
jp
enter
xchg
pop
dec
sar
fsts
xchg
icebp
xchg
cmc
mov
mov
xchg
cmpsl
push
roll
jbe
dec
dec
mov
mov
test
dec
pop
out
dec
mov
xchg
movsl
std
pop
sub
rorb
push
pop
shll
mov
mov
mov
js
dec
mull
xor
cmpsb
dec
stos
cmpsb
popf
mov
out
xchg
cmp
addr16
xchg
jmp
fnstcw
cltd
mov
mov
cmpb
popl
sahf
test
loope
test
test
orb
cli
or
jl
rorl
gs
dec
jmp
loopne
jmp
pusha
outsl
push
mov
mov
jge
in
cld
lods
dec
inc
xchg
push
jo
pushf
lret
pop
mov
jne
addr16
mov
fs
dec
lods
cmp
pushf
sub
cmpsb
jge
aad
clc
pop
movsl
push
je
mov
jge
movsl
out
aam
ss
mov
add
fcmovnbe
scas
mov
and
cmp
mov
lods
dec
out
fs
orl
stc
pusha
mov
lods
xchg
movsb
cwtl
out
cmp
jp
outsl
popf
bound
inc
add
cs
or
push
pop
cmp
jmp
fldcw
lods
pop
add
dec
xchg
stc
push
or
test
dec
and
test
dec
pop
ds
sti
fsubrl
movsl
ds
outsb
andl
cmp
xchg
sbb
popa
gs
mov
mov
test
mov
sar
in
int
inc
mov
mov
stc
lret
mov
mov
jb
mov
faddl
cld
mov
push
dec
or
and
inc
mov
add
pop
fucomi
aam
jecxz
int
mov
jmp
shrl
int
pop
add
loope
in
push
or
mov
jg
or
xchg
orl
movsb
fdivl
mov
out
push
loopne
repz
repnz
std
cltd
mov
les
imul
dec
xchg
push
addr16
imul
adc
hlt
xchg
mov
int
mov
stc
shlb
cmpsl
aad
loope
jbe
mov
adc
pop
fnstcw
fucomip
jge
jns
sti
xor
push
cmpsl
aad
mov
xchg
outsb
inc
fstl
push
lods
leave
sub
or
les
xchg
insb
xor
sarl
ret
ja
nop
cmp
inc
std
sbb
jae
ror
sar
cmp
mov
or
and
dec
jns
push
mov
sti
shll
incb
dec
xlat
rolb
fcmove
xor
cltd
and
sbb
out
movsl
shll
lods
enter
fstpl
subl
inc
std
rorl
fnstcw
pop
test
mov
xchg
out
or
inc
stc
xchg
adc
cltd
pusha
sti
mov
fistpll
cltd
mov
xchg
dec
in
into
scas
bound
cwtl
psubusw
pop
mov
subl
mov
cmpxchg
jmp
adc
call
jge
in
ret
add
cltd
scas
shll
sub
movsb
movsb
enter
jo
in
lods
cmp
mov
sarl
or
inc
js
jmp
inc
sub
and
pusha
lds
mov
icebp
sub
and
roll
cmp
sarl
loope
sub
sbb
push
cmp
imul
shll
shl
sub
xor
insl
push
in
push
push
scas
mov
sub
or
mov
jnp
imul
cmpsb
cmp
mov
pop
mov
mov
stos
stc
fcompl
in
xchg
ret
int
pop
jmp
aam
or
roll
pop
enter
arpl
sarl
call
daa
xor
rorl
push
out
loopne
and
sub
lds
fcom
out
pop
push
out
std
cmp
xor
stos
ret
out
jno
mov
jo
fbld
mov
xchg
cltd
stc
lock
adc
cmp
add
fdivp
dec
into
movsb
or
mov
dec
fstl
movsb
adc
and
dec
pop
cltd
out
orb
stc
popa
dec
inc
inc
fidivrl
lret
push
mov
in
call
cmp
shrl
flds
mov
shr
pop
test
inc
mov
lods
in
jge
mov
mov
pop
cs
leave
imul
jecxz
ss
aam
and
sub
pop
dec
in
test
sub
xchg
popa
jns
dec
rorl
cs
pop
xchg
outsl
insl
in
fisubs
arpl
std
loope
push
jnp
les
sub
pop
xchg
mov
cmp
pop
mov
incl
dec
dec
sahf
scas
test
or
mov
test
les
cli
imul
mov
jecxz
stc
jno
jno
stc
mov
dec
stc
lahf
xor
and
loope
sarl
roll
fabs
xlat
aam
push
popf
outsb
ja
lods
pop
in
or
xor
dec
in
sbb
cmp
add
jl
imul
mov
int
cmc
cmp
or
loopne
jmp
push
es
jns
adc
dec
dec
mov
std
stos
lods
popf
int
aam
jne,pn
adc
cmpsl
cmpsb
mov
ret
sbb
jp
movsl
xor
sub
fisubl
stos
icebp
call
data16
cmpsl
cwtl
or
jne
imul
sti
cltd
insb
pushf
cmpl
shl
jo
mov
jnp
adc
in
inc
hlt
jbe
xchg
mov
lds
lds
mov
sub
adc
push
dec
leave
inc
mov
les
ret
movsl
and
stc
test
imul
rorb
std
push
cli
movsb
mov
add
sbb
outsb
imul
pop
mov
fsubr
or
das
mov
leave
std
inc
rorl
sub
jmp
pop
test
inc
mov
mov
call
stc
dec
test
std
and
out
mov
imul
rorb
test
xchg
ljmp
rcrl
dec
call
inc
inc
inc
add
dec
lods
jae
popa
cmp
in
jne
stos
stos
dec
mov
repz
and
jmp
std
enter
xchg
mov
cmp
jns
andl
les
int
add
mov
cltd
wrmsr
push
mov
popa
aad
sbb
test
das
mov
jge
in
rcll
jbe
test
cmp
adc
mov
nop
lea
mov
pop
scas
insb
pop
aam
loope
add
add
std
dec
std
lcall
mov
pop
pop
or
sbb
andl
inc
xor
popf
stos
mov
rcll
pop
add
dec
add
jns
outsb
lds
xor
cltd
fldenv
sub
mov
int3
jns
std
and
jmp
orl
loope
sti
mov
les
fwait
aas
fcompl
fcompl
dec
movsl
fwait
mov
mov
imul
inc
jmp
dec
mov
popa
std
xchg
fsubs
int3
mov
sub
fcompl
fisubrl
in
xchg
gs
push
movsl
imul
fld
or
enter
xor
data16
cwtl
jg
push
leave
and
cltd
xchg
insl
lock
mov
and
test
push
jns
pushl
in
inc
aad
lock
jl
in
lea
jnp
fnstenv
lcall
movsb
outsb
push
pop
mulps
add
ss
aad
fs
cmpl
shr
fnsave
lret
mov
daa
das
stos
pop
jns
jns
gs
movsb
stc
pop
shrl
fnstenv
pusha
cli
xchg
inc
jg
aad
cmpsb
int3
stc
shrl
mov
daa
rcl
movsb
nop
adc
hlt
mov
xor
sarl
jo
rorl
mov
movsb
xchg
dec
push
sti
int
jns
lods
cmc
cltd
mov
mov
adc
rorl
push
stc
stc
inc
jmp
sbb
mov
mov
roll
orl
fs
xchg
jno
roll
cmc
lods
sti
xchg
pop
test
sub
mov
ret
xchg
popa
dec
sub
jl
mov
mov
dec
imul
push
cli
imul
jnp
pop
mov
xlat
lock
in
out
jb
mov
jl
out
lods
dec
adc
dec
popf
pusha
dec
insb
cltd
shll
mov
movsl
enter
std
cmpsl
mov
movsl
test
lea
cltd
stc
ljmp
mov
popa
lds
aaa
push
dec
adc
or
cmp
sysexit
rcr
sub
jo
cmp
lock
pop
push
sbb
orl
xor
rcl
fidivrs
sti
movsl
cmp
dec
jecxz
xor
kmovb
out
fldl
rcl
xchg
imul
xor
in
ds
fldcw
xchg
in
int
fisttpll
test
lods
in
out
out
repnz
add
dec
rcl
in
lea
jmp
fwait
test
aad
out
sub
cltd
out
jo
push
push
jge
inc
shrb
repz
xchg
stc
mov
rcrl
lods
cmp
push
orb
sub
stos
in
rclb
push
subl
or
nop
jno
add
and
lcall
int
sub
loop
or
pop
movsl
call
pushl
lods
cltd
jl
test
sub
xchg
rcr
pop
dec
sahf
stos
enter
jbe
pop
loope
dec
or
sti
test
rcr
lods
lock
setge
loopne
dec
fdivrs
aad
or
enter
mov
mov
test
sahf
fldl2t
icebp
rcrb
ret
pusha
scas
movsl
push
sarl
sbb
popa
cmpsb
cs
and
push
add
ficoml
shrl
xchg
or
jmp
push
add
xlat
out
cmpsl
movsl
mov
insl
jl
jecxz
mov
dec
in
xor
inc
sub
or
sti
fnstcw
mov
std
sub
inc
xor
dec
nop
push
shl
rcl
xchg
popa
dec
mov
aam
decb
mov
flds
hlt
imul
xlat
or
cltd
ja
insb
shll
and
fwait
insb
test
push
hlt
and
dec
int3
jecxz
ret
iret
jmp
mov
ljmp
xchg
nop
popf
std
sarl
mov
fisubl
jge
cmp
push
jbe
xor
std
and
stc
jle
arpl
dec
or
fnstenv
add
cmpsl
test
sbb
std
mov
cmpl
mov
inc
mov
std
dec
jmp
jmp
jp
sub
std
popa
fst
dec
xor
stos
mov
std
or
stc
push
pushf
cmpsb
in
jo
dec
or
insl
movsb
and
xchg
inc
les
add
ljmp
xor
mov
mov
pop
mov
cmpsl
mov
int
leave
cmpsl
and
xchg
or
mov
test
imul
addl
sbb
mov
sbb
jl
mov
test
test
fucomp
adc
push
cmpsl
out
pop
test
das
sub
lret
in
mov
shrl
pop
sub
in
leave
sar
push
xchg
insl
sarl
pop
popf
cltd
add
das
jns
fld
popa
and
push
jns
push
ret
test
pushf
or
mov
ficoml
in
and
add
es
adc
add
inc
dec
loope
inc
je
jb
scas
dec
lds
dec
hlt
dec
fdivrs
ffree
stc
jl
flds
cmc
pop
insl
fsubrl
imul
pop
sbb
mov
jne
popf
lahf
jb
arpl
jns
rcrb
inc
lds
std
out
dec
fisubl
sahf
shl
jns
dec
ja
mov
cmpsl
pop
mov
pop
std
jo
mov
rcrl
insb
sarl
mov
cwtl
test
aad
aad
jns
fprem
mov
sahf
cmpsb
pop
dec
jecxz
mov
pop
filds
mov
cltd
out
movsl
sub
test
and
arpl
inc
repnz
aad
or
mov
and
sub
jo
xchg
jns
insl
enter
les
icebp
shll
stos
cltd
xchg
lds
xchg
pop
cmp
dec
std
shll
nop
lods
out
xchg
std
inc
xlat
stc
cmpsl
nop
jno
mov
mov
test
out
lea
addl
fcoml
pop
inc
incl
jle
sub
jne
cltd
fidivs
leave
fmuls
sahf
ss
adc
and
mov
sub
cli
sub
xlat
insl
lea
inc
dec
movsb
outsb
lods
stos
in
or
aad
or
and
add
jmp
stc
mov
insl
fxch
in
gs
arpl
push
dec
ret
imul
rorl
jne
sarb
dec
test
cmp
mov
call
cmc
xor
xchg
rol
cltd
mov
adc
stos
jge
sbb
cmp
out
or
push
xchg
mov
lahf
rcll
pop
pop
xchg
aad
cltd
mov
mov
rcr
sub
xchg
cmp
jns
in
xchg
mov
sahf
sahf
pop
sbb
in
xor
xchg
test
nop
ljmp
test
sbb
mov
sub
mov
std
mov
pop
sbb
stos
lcall
fcoml
mov
dec
fldcw
stc
xchg
ja
dec
adc
lret
fdivl
mov
jle
mulb
adc
xor
fsubs
shll
call
decl
cmp
pop
pop
dec
movsw
mov
mov
or
push
mov
mov
imul
dec
scas
or
pop
icebp
fs
sub
adc
imul
std
jmp
jge
loop
repz
jg
rcll
in
lods
pusha
stos
mov
or
dec
out
jbe
imul
in
loope
orl
rclb
cmc
jle
popa
dec
pop
xchg
dec
pop
stc
jg
mov
mov
jmp
push
mov
sbb
adc
daa
iret
and
pop
jns
rcrb
rcr
cltd
mov
inc
sti
dec
inc
aam
add
dec
decl
std
push
loopne
loopne
sub
or
sub
cld
jns
fs
sub
in
push
mov
stc
cltd
fstp
mov
fisttpll
lock
mov
imul
add
xor
dec
inc
les
sti
push
cmpsl
out
push
ret
jge
in
int
or
aam
aad
imul
jno
movsl
shll
mov
cwtl
scas
leave
shr
fucom
cmp
mov
loope
insl
stos
ret
dec
fnsave
in
mov
les
add
in
int
mov
stos
les
jle
push
xor
lds
rorb
hlt
cld
mov
sbb
xor
adc
movl
fistl
push
fsubs
int
pop
mov
sub
cmp
sarl
xchg
aad
mov
mov
std
sub
mov
push
mov
push
and
icebp
inc
sarl
jmp
sub
loopne
lcall
rcrl
push
hlt
dec
mov
mov
xor
rcrb
dec
inc
iret
in
pop
pop
pop
xor
insb
xor
loope
gs
xchg
and
ret
or
inc
movsb
pop
cmc
push
jl
fnstenv
insb
cmc
adc
fs
mov
aad
fisttpll
push
and
pushf
xor
inc
cmpsl
dec
xchg
xchg
lods
test
jne
in
std
jns
pop
mov
int
or
jno
aaa
jmp
test
enter
and
rorl
inc
call
mov
cmc
lock
add
movsl
cmp
jnp
lahf
jp
fisubs
loop
sub
add
jl
aad
jno
int
inc
addr16
jge
or
fldcw
mov
les
cmpsb
mov
addr16
dec
ror
mov
mov
push
add
std
gs
stc
std
add
xchg
lods
rorb
mov
in
pushf
loopne
nop
aam
xchg
xchg
lods
xchg
cld
sbb
mov
std
dec
mov
mov
aam
rcr
sub
fdivl
add
mov
repz
inc
test
xchg
fistps
dec
fiadds
icebp
mov
xchg
fnstcw
jmp
mov
fxam
sbb
out
push
dec
or
test
imul
pop
xor
repz
inc
fimuls
gs
fidivs
lds
mov
loope
fnstenv
lock
dec
cld
mov
test
xchg
add
xchg
cmc
outsl
in
pop
and
lods
test
loopne
mov
stc
into
inc
adc
xor
sti
fidivrl
jne
dec
mov
pop
adcl
ja
xchg
popa
push
int
dec
popf
vpsrld
fidivrs
lock
js
gs
lds
rcrl
leave
sti
decl
popf
pushl
out
dec
xchg
mov
adc
cmc
adc
into
nop
popf
in
stc
adc
fsubs
sti
xchg
ja
fidivl
push
jnp
mov
jmp
cltd
xchg
add
icebp
mov
jecxz
mov
or
out
dec
rclb
dec
lret
dec
pop
aad
icebp
fnstsw
mov
lret
pop
roll
jge
fstl
stc
mov
and
aas
cltd
loopne
lds
movsb
add
dec
inc
std
in
mov
std
ficompl
xchg
jmp
mov
jno
adc
dec
daa
inc
ret
sti
cltd
jo
xchg
pop
in
dec
jno
ret
dec
sbb
rorl
dec
inc
or
mov
jns
sbb
xor
jmp
in
stos
sahf
jae
sbb
aas
push
loope
cmc
popa
icebp
dec
out
pop
scas
scas
add
ljmp
dec
cwtl
xor
fisttpl
rclb
inc
subl
pusha
daa
mov
std
jno
stos
pop
jo
mov
dec
jno
xchg
dec
enter
mov
pop
pop
lods
ret
xlat
dec
lods
cmpl
test
mov
push
shl
sbb
insl
lea
out
mov
xor
insb
imul
mov
adc
mov
dec
xorl
movsl
mov
or
hlt
mov
xchg
ss
sbb
insb
test
cltd
xlat
insl
fistl
fisttpll
aad
xchg
sub
push
or
leave
les
shll
jmp
out
inc
cmp
ret
or
sahf
xchg
dec
out
js
je
fsubr
sub
xchg
in
cmpsl
in
mov
std
dec
push
in
enter
shrl
out
idivb
pop
lods
and
aad
cmp
in
jnp
mov
inc
mov
shl
xor
mov
dec
aaa
push
ja
add
loope
aad
mov
mov
mov
mov
pop
sbb
lea
lds
push
sar
int
je
pop
cmp
in
cmp
orb
sub
jge
xchg
mov
enter
mulb
adc
xchg
and
std
aad
mov
sub
xchg
sbb
cltd
inc
pop
mov
xor
push
sbb
push
ds
push
cmp
jns
in
aaa
enter
mov
or
mov
dec
lahf
jg
and
pop
and
cmp
xchg
cmp
xor
dec
cmp
sbb
cmp
test
cltd
les
imul
pop
jg
xor
fnsave
pop
and
mov
fcompl
sbb
leave
loope
insb
xor
ror
outsb
dec
test
sti
adc
in
ror
jle
aam
fmul
or
les
dec
sar
pop
insb
sub
fcompl
or
dec
mov
and
or
pop
mov
lds
rcr
int3
add
ja
fstpl
sti
ss
fldl
dec
shr
dec
andl
shll
ja
stos
aad
lea
push
pop
mov
add
rcll
or
loopne
test
sbb
cmp
jmp
fwait
aad
fucom
fstp
movsl
in
idivl
test
adc
dec
push
popf
xor
push
push
jp
jns
mov
popa
filds
jmp
xorl
jle
stc
sbb
pop
mov
jge
jns
inc
and
arpl
cltd
popf
andb
adc
dec
mov
movsl
popa
mov
stc
mov
fnstenv
push
push
cmp
shl
jle
cs
mov
dec
jmp
aad
xchg
mov
jmp
rol
mov
in
popf
das
loope
shll
jmp
and
lods
jecxz
lods
cld
test
jecxz
mov
add
cmp
mov
loop
jbe
jmp
subl
pop
int3
out
cmp
sti
lds
addr16
adc
stos
arpl
mov
dec
or
jge
pop
cmc
lret
dec
cmpsb
nop
stc
pop
jb
inc
int
cmc
dec
popa
inc
sub
ret
stc
xor
or
add
movsl
leavew
ja
incl
aad
cmp
xchg
in
xchg
leave
stos
lea
mov
int
stc
insb
lds
aad
or
lock
movsl
arpl
in
push
or
push
jne
pop
ror
js
mov
sbb
fdivrl
dec
ffree
stc
jns
sub
cltd
sub
test
in
nop
enter
xorl
imull
cmpsb
andb
shlb
rclb
rorl
xchg
mov
cmpl
test
aam
fldcw
xchg
jo
mov
sub
xchg
stos
mov
insl
mov
shrb
xlat
mov
int
in
adc
adc
jmp
cmpsb
lcall
in
inc
addw
mov
xchg
jns
andl
xorl
jge
mov
sub
ret
popa
xor
test
dec
enter
jns
mov
and
insl
bound
pop
adc
test
cmp
and
sbb
stos
inc
xor
push
push
mov
int
in
loope
bnd
cmp
leave
std
dec
or
fldl2t
aad
fldl
mov
dec
cld
fldenv
and
icebp
in
xlat
push
sub
fstps
sbb
cltd
imul
enter
xlat
jg
jmp
leave
les
add
fs
dec
mov
adc
movsl
test
in
mov
punpckhdq
fnstcw
pop
imul
test
jge
pusha
in
sbb
dec
pop
or
dec
nop
scas
pop
in
rorl
stc
test
push
sbb
jns
lea
sahf
mov
push
ljmp
ljmp
mov
lcall
mov
xchg
in
scas
subb
mov
sbb
fisubl
cmc
ret
mov
jo
aad
enter
fiaddl
sarb
ret
cmc
fildll
in
in
and
jmp
hlt
dec
inc
mov
push
inc
jmp
sbb
add
push
dec
out
fnstcw
xchg
lcall
add
int
sub
xlat
aas
mov
js
lds
daa
jb
scas
push
jp
jo
les
mov
push
dec
mov
dec
pop
test
push
jno
subl
cltd
sarb
ror
and
bound
rcrb
and
aam
xlat
cli
fldl2t
repnz
sarl
inc
mov
imul
sub
aad
add
cmpsb
ror
xchg
sbbb
xchg
daa
dec
test
dec
xlat
out
sub
xchg
xor
lcall
fisubrs
das
dec
sahf
lods
mov
sub
and
enter
add
loope
cltd
xor
mov
xchg
pop
dec
mov
ljmp
lods
sbb
in
cmpsb
in
popa
mov
mov
in
xor
int
push
jno
insl
mov
aam
xchg
mov
xchg
out
or
lahf
dec
fisubl
jl
outsb
out
and
aad
jge
int
popa
aad
dec
std
pusha
stc
pop
xor
inc
cmp
pop
sbb
out
pop
adc
ret
sbb
push
lods
push
je
insl
fistpll
dec
mov
mov
adc
fnstsw
arpl
aad
mov
fcmovnbe
loopne
std
cli
popa
inc
jge
fsubrs
dec
das
and
sub
jnp
pop
push
mov
cmpsb
and
xchg
xor
rcrb
mov
xchg
jmp
and
adc
lahf
out
pushf
test
lea
scas
out
es
jg
xchg
popf
test
iret
fildl
lret
pushl
cmpsb
andl
ja
xor
in
cltd
aam
jl
or
shll
imul
aam
pop
lahf
or
xchg
dec
and
cmp
insl
sbb
orb
and
fnstsw
mov
cmpsb
push
js
in
pop
daa
pop
dec
aam
ljmp
je
test
icebp
cld
jge
mov
lods
push
xchg
popf
movsl
test
jns
jns
mov
shrb
outsl
cmpl
loopne
aad
lcall
cmp
sub
leave
lods
stc
or
add
add
popa
popa
sarb
cli
mov
xor
dec
outsb
rorl
imul
jno
enter
inc
inc
and
mov
or
push
orl
push
lahf
push
lods
cmpsl
repnz
jle
mov
fstl
stos
jae
addl
xor
pop
outsl
andl
je
outsb
cmp
pushl
movsb
sahf
cltd
in
imul
adc
jmp
into
sub
mov
xchg
xlat
fsubl
dec
sbb
lret
test
lods
mov
jne
or
add
dec
and
or
inc
sahf
cmpsb
jae
aad
int
sbbb
outsl
jge
push
test
insl
and
out
jo
dec
dec
add
paddd
mov
out
lods
sbb
sub
daa
addr16
lahf
and
gs
jmp
test
and
mov
mov
sub
cmp
push
sub
cmp
xchg
les
sbb
push
mov
stos
int
clc
lret
je
cmp
or
pop
cmc
insl
out
scas
push
lods
mov
dec
rcr
adc
mov
lea
mov
fucomi
sahf
add
cmp
mov
les
fwait
mov
xor
add
out
jp
cmc
cmp
sahf
movsl
mov
rolb
popa
mov
inc
std
jno
nop
cmp
inc
cmpsb
fisubrl
mov
and
cmpsb
dec
and
mov
pop
sbb
mov
popf
jge
mov
and
cs
cmc
sbb
dec
dec
cmp
jo
cmpb
std
lcall
sub
mov
sahf
addb
lahf
rcrb
shll
cmp
dec
pop
sahf
sbb
test
lea
dec
xchg
pusha
jb
rorl
movl
clc
pop
pop
ret
test
mov
loopne
sbb
fbld
cmp
inc
jmp
lods
push
int
xchg
lret
cwtl
iret
jg
and
pop
leave
lea
sub
and
push
sahf
dec
push
loop
adc
cwtl
dec
jno
jmp
cltd
xchg
xor
push
movsb
cmpsb
enter
aam
sti
fld
and
incl
std
jl
jo
mov
addr16
dec
sbb
test
insb
cmp
mov
rcll
mov
pushf
ror
cwtl
xor
in
adc
ffree
adc
xor
in
cmp
lahf
xor
or
xchg
shll
addr16
ljmp
test
addr16
xor
push
mov
mov
fidivrs
pusha
sti
popa
sub
stc
sub
cs
dec
sti
push
mov
pop
push
loope
adc
xchg
mov
fisubl
jb
test
int3
jb
cmp
test
addl
popa
andb
popf
mov
mov
std
orl
jb
push
mov
lds
repz
popf
movsb
nop
daa
imul
xor
jns
div
nop
cltd
jge
ljmp
push
push
inc
shr
xchg
xchg
cmp
out
lret
pop
push
loop
push
dec
js
inc
sarl
rcll
sti
insb
ret
jge
shl
lea
icebp
or
call
mov
dec
cld
pop
aad
cli
mov
in
dec
les
jg
push
testb
adc
shlb
imul
in
mov
adc
cmpsb
pop
jle
out
decb
mov
jno
xlat
sub
adc
imul
ret
xchg
dec
iret
insl
inc
fsubs
xchg
xorb
fsubrs
cmc
cmp
aam
dec
lahf
xor
int3
insl
cmpsl
out
and
inc
jo
jge
or
fidivl
jge
mov
xchg
xchg
jge
sahf
xchg
hlt
push
and
arpl
arpl
xor
dec
movsb
pop
pusha
sbb
adc
jl
imul
call
push
mov
jne
sub
xchg
lea
xchg
mov
sbb
in
jg
int
ss
sarl
xchg
insl
hlt
cs
stc
flds
out
fsubr
or
xchg
js
outsb
flds
inc
inc
pop
lock
loopne
mov
lods
enter
std
in
mov
ret
lcall
decl
jb
push
ja
dec
cli
inc
jge
pushf
and
out
dec
ret
push
sub
sahf
arpl
mov
shlb
lea
cmp
aaa
std
or
mov
scas
mov
aaa
cmp
movsl
and
adc
mov
xchg
insl
jmp
fs
scas
aas
neg
outsl
fldenv
ret
add
stos
cmpsl
fnstcw
add
adc
dec
xchg
push
pusha
lds
stos
scas
inc
rolb
in
and
xorb
sub
sub
push
cmp
loope
push
add
fwait
andl
stos
std
inc
ret
jb
rolb
lcall
mov
outsb
sub
enter
rorb
pop
shl
cmp
jne
mov
in
xchg
popa
insl
aas
int
aaa
push
push
and
mov
fldl
ret
lods
lret
arpl
popa
adc
mov
mov
int3
mov
mov
nop
jae
je
add
mov
pusha
mov
ret
insl
add
ljmp
fisttps
push
and
movsb
jb
sub
negb
pop
fs
and
ret
lret
stos
cmpsl
pop
jl
cmpsb
mov
add
jnp
imul
pop
push
shll
lahf
movsl
mov
mov
scas
mov
lret
dec
sbbb
loop
aad
pop
in
fs
ficoms
push
gs
jg
jbe
inc
out
test
pusha
pop
rep
jne
sub
aaa
ds
push
adc
jbe
les
mov
shlb
and
pop
cmpsb
fsts
mov
out
enter
ret
mov
std
inc
sti
cmp
fcmovnu
cld
xchg
aad
outsl
sub
mov
outsb
std
scas
bound
out
or
or
call
lock
ds
ss
lds
xchg
cwtl
orb
lret
xchg
push
dec
mov
popa
mov
and
es
or
cltd
fisubl
sbb
mov
cmp
xchg
lods
shrb
repz
or
imul
setge
enter
mov
jbe
testl
pop
ljmp
cmpb
mov
imul
int
jg
and
sbb
xchg
dec
out
ds
pop
xchg
push
jg
push
xchg
pop
or
loopne
mov
xor
lods
or
outsb
sarl
inc
pop
lods
push
pop
adc
test
stos
sti
push
fcomp
std
lds
ds
subb
push
cmc
mov
cmp
push
pop
xor
fsubrp
adc
aad
mov
jns
cmpsb
dec
push
jge
adc
jmp
popa
shll
data16
adc
push
jno
dec
cld
dec
inc
push
mov
dec
inc
mov
or
jns
inc
in
test
xchg
divl
pop
stos
mov
jp
lcall
int
add
ret
mov
mov
insb
in
lret
js
add
and
mov
out
xchg
fsubrs
pop
movsl
fnstsw
dec
jmp
call
cmp
roll
stos
jbe
inc
push
ret
cwtl
dec
cmp
cmp
xor
or
mov
push
mov
cmp
lods
xor
sbb
jmp
idivl
gs
cmp
in
daa
and
pop
repnz
lods
les
sub
popf
imulb
enter
aas
inc
inc
xchg
pop
and
dec
mov
fdivp
inc
dec
cltd
adc
adc
scas
enter
ds
pusha
xor
mov
pop
into
jp
cmp
mov
fbstp
mov
mov
inc
fwait
shl
cmpsb
lret
pop
std
popa
pusha
movsl
imul
out
xchg
icebp
ljmp
test
pop
xorl
jle
jb
jle
inc
or
in
xchg
mov
and
enter
cmpsb
or
pop
pop
cmpsl
pop
push
sub
stc
test
mov
pop
andb
dec
rorl
popa
inc
sti
inc
shrl
scas
stc
arpl
jl
ret
push
add
mov
popa
mov
jp
dec
dec
cmpsl
mov
dec
mov
cli
ss
js
movsl
pop
jne
out
xchg
mov
mov
mov
pusha
mov
je
push
or
ret
idivl
cmpsl
adc
inc
mov
dec
xor
js
ds
scas
inc
pop
cmp
xor
scas
cmp
stc
in
mov
pop
sahf
pop
adc
and
dec
sbb
and
imul
shll
loopne
mov
scas
fdivr
or
xor
aam
or
std
pop
sar
inc
enter
jge
lahf
fwait
cmc
dec
jno
cmpsl
xor
imul
daa
mov
lods
push
xchg
jle
mov
ret
cli
jl
inc
pop
sub
jl
ja
sub
jecxz
add
ret
inc
add
mov
adc
loope
xor
sbb
xchg
ffree
mov
iret
mov
and
inc
xchg
cli
ljmp
mov
cmp
lcall
push
cmpsb
outsl
push
orb
pop
adc
sti
lods
cmp
pop
mov
les
fldl
xchg
mov
mov
push
cmp
add
or
jmp
cld
add
mov
dec
pop
mov
mov
dec
les
sarl
mov
jg
adc
inc
addb
xor
imul
xlat
push
pop
cltd
or
imul
hlt
orl
mov
fldt
repnz
push
hlt
xchg
mov
inc
in
xor
push
inc
ret
sti
xchg
mov
es
mov
jle
out
addl
pusha
rcll
test
ret
sti
cmp
notl
mov
jecxz
add
xchg
pop
dec
push
jl
mov
xchg
shll
and
pop
arpl
inc
jo
dec
movsb
cli
push
pop
pop
mov
enter
mov
fcomps
mov
cmpsb
clc
fdivrs
and
mov
in
test
leave
pop
inc
imul
push
mov
lods
mov
mov
push
inc
or
sub
mov
or
rolb
adc
test
pop
fists
sbbb
mov
fucomi
xor
mov
push
jg
jb
mov
out
fstpl
shlb
or
sbb
jmp
jno
mov
cmc
pop
jle
cli
stos
icebp
inc
pop
sahf
sub
test
pop
aad
outsb
pop
cmpsl
sbb
jge
pop
subl
push
lds
mov
fwait
cmpsl
xchg
adc
dec
jmp
fnstsw
pusha
test
inc
and
push
mov
lods
es
frstor
rolb
test
mov
addb
or
daa
dec
loopne
rol
les
jnp
cmpsb
sahf
scas
div
or
jmp
je
lds
outsl
jle
adc
mov
mov
scas
and
xlat
mov
lods
push
cltd
push
and
push
stos
mov
incb
inc
arpl
mov
into
xor
mov
sbb
cltd
pop
fisttpll
fsubs
icebp
movb
aas
inc
sbb
test
dec
xor
cmpsb
fistps
fwait
mov
cmpsb
insb
push
test
jge
outsl
xchg
lcall
pop
mov
sahf
mov
inc
repnz
xor
jne
add
sbb
imul
ret
inc
cmp
cli
je
mov
mov
push
xor
jg
mul
subl
push
sub
mov
fsubrl
mov
adc
scas
xor
jne
mov
dec
fs
xchg
je
and
jmp
jge
cmp
sbb
inc
cmp
or
xor
movsl
cmpb
push
cmp
stos
adc
loop
push
pop
in
add
shlb
and
sub
push
pop
mov
mov
es
mov
push
mov
add
add
sbb
pop
cmpsl
jnp
pop
out
subl
mov
mov
jns
imul
aaa
test
xchg
outsb
jge
push
inc
push
repz
jbe
sti
inc
icebp
pop
cmp
pop
push
sahf
inc
sbb
cmp
andl
xchg
dec
sub
lds
inc
scas
hlt
test
jl
shll
fisubrs
stos
xor
cmpsl
jb
shlb
inc
repz
jg
push
jge
imul
in
enter
mov
ja
add
or
pushf
pop
imul
mov
daa
lods
push
popf
lods
je
jp
es
js
xor
pop
ds
pusha
mov
pop
enter
ljmp
cwtl
pop
jecxz
inc
add
or
adc
aas
add
dec
fidivrs
inc
pushl
cmp
stc
pop
and
sub
push
int
pop
and
inc
movsb
lahf
jp
sbb
mov
sahf
ja
jns
orb
shll
mov
dec
cld
pop
loope
loope
lahf
mov
xchg
lods
sbb
std
call
rolb
insl
cltd
test
fbstp
jno
jle
push
test
mov
sub
xor
add
test
inc
addr16
xchg
pop
jl
sahf
mov
je
cmpsl
cmp
jle
cmpb
mov
scas
bnd
mov
push
mov
add
xor
push
fwait
loopne
imul
das
mov
xchg
push
push
mov
mov
std
repnz
push
stc
inc
jns
fnstenv
mov
fucom
jnp
nop
es
ljmp
mov
fistpl
sub
dec
gs
pop
lea
sbb
xchg
and
sti
mov
add
arpl
mov
stc
ficoms
fisttpll
lcall
insl
in
lds
adc
mov
dec
jae
in
jbe
loop
cmp
decb
les
mov
inc
repz
sub
fwait
dec
cmpl
je
pop
xchg
stos
adc
sbbb
mov
push
fwait
pop
cld
cli
lret
sbb
gs
adc
jmp
mov
lret
pushf
cmpsl
and
mov
lret
stos
das
push
xchg
in
mov
dec
mov
dec
push
aam
jnp
js
fstpl
jnp
das
sbb
adc
shlb
rcl
enter
jecxz
addr16
incb
les
call
push
std
in
ficomps
jo
mov
mov
dec
movsl
add
in
sbb
negl
clc
loope
cli
xchg
loope
cmpsl
nop
jno
in
adc
lock
adc
jg
push
inc
and
mov
xchg
and
rclb
roll
adc
cmpsb
inc
cmpl
lret
pusha
sti
in
mov
idivb
xor
jo
sub
push
pop
cltd
jp
push
cli
ret
cmp
cmp
enter
xchg
repnz
outsl
lds
scas
mov
cmp
mov
xor
and
jge
sti
xchg
xchg
insl
adc
insl
rcr
lods
sbb
push
std
pop
add
aas
push
cmpsb
popf
xor
test
add
inc
lahf
cwtl
push
aad
cltd
mov
push
inc
fisubrl
enterw
arpl
icebp
lds
rcrl
movsb
pop
jg
loope
shlb
push
je
pop
je
insb
mov
not
dec
mov
or
xchg
jno
or
pop
and
jg
es
js
lods
and
mov
push
inc
cli
cmc
mov
fists
inc
mov
mov
cmp
pusha
repnz
push
aaa
scas
push
insl
cmp
jecxz
or
dec
nop
sbb
lret
in
add
mov
or
je
lcall
mov
adc
or
xchg
dec
mov
jns
cmpsb
jmp
push
push
cmpsb
pop
out
fwait
xor
inc
arpl
jne
sbb
cmpsb
and
sbb
popf
or
adc
ret
cmpsb
adc
addb
pop
daa
jge
pop
stos
pop
imul
jb
or
push
push
push
mov
test
out
loope
cmpsb
repnz
cmp
xor
xchg
addb
rcrl
lods
les
repz
fidivrl
test
inc
movsl
cltd
jle
imul
or
in
lods
adc
dec
je
jmp
mov
sarb
dec
mov
jge
xchg
cmp
add
pop
mov
adcl
icebp
cmpsb
dec
imul
sub
ret
pop
adc
push
jmp
js
jecxz
add
adc
lds
cltd
fimuls
in
orl
dec
test
aad
jae
mov
cmp
addr16
push
cltd
out
mov
addl
movsl
jecxz
lret
insb
and
xor
adc
insl
or
mov
shll
lret
in
mov
mov
pushaw
lock
popa
cmp
xchg
push
stc
rclb
pop
xlat
xchg
adc
jae
fidivl
std
xorl
xor
rolb
jle
subb
rcll
jge
xchg
arpl
push
dec
jo
pushf
xchg
xchg
dec
pop
mov
xchg
mov
jne
data16
mov
sbb
xchg
pop
or
and
sbb
pop
push
cmc
dec
xor
push
lock
jbe
xchg
adc
dec
testl
cmp
scas
mov
mov
push
stc
mov
daa
xchg
incl
in
xor
es
ss
lds
xchg
sbb
movsb
pop
inc
dec
dec
inc
inc
xor
mov
sub
test
dec
adc
dec
add
xorl
shlb
popf
pop
xor
xlat
mov
dec
int
xchg
dec
jp
sbb
cmc
mov
pop
xor
sbb
stos
insl
xchg
sahf
insl
test
addb
fnsave
lcall
imul
fadd
lret
cwtl
lods
aas
cmpsb
sahf
xor
xor
ja
adc
rolb
fcmovu
jg
test
stos
test
jb
subl
xor
adc
pop
jecxz
mov
fidivrl
out
in
inc
les
xchg
mov
mov
js
xor
push
gs
lret
mov
and
lock
jle
mov
sbb
mov
push
aas
addl
sub
in
pop
inc
pushf
xchg
inc
adc
pop
dec
pusha
lret
adc
pushf
xchg
mov
add
adc
addl
mov
adc
jo
push
or
mov
cmpsb
xor
sub
cmp
sbb
cmpsl
out
mov
dec
and
test
push
inc
test
mov
lea
inc
xchg
sti
inc
int
jae
sub
mov
xchg
sub
jge
cmp
ss
jle
stos
push
pop
in
sbb
cmp
aas
mov
enter
cmp
mov
cmpsl
pusha
out
pop
mov
mov
cmpsl
push
test
insl
xlat
fdivrl
mov
filds
arpl
dec
xor
sahf
push
ja
lret
mov
fnstsw
dec
dec
ficompl
and
mov
je
add
loope
push
je
and
fwait
out
subb
aam
scas
ret
cmp
fs
pop
mov
lcall
pop
pop
add
inc
cmp
fstps
cmpsb
out
sub
jnp
popf
imul
enter
xchg
push
mov
shll
test
popf
ja
add
adc
enter
and
subl
stos
shlb
add
aaa
cmp
fidivs
fstpl
push
mov
sahf
pusha
es
fcmovne
mov
xchg
and
mov
jg
movsb
pop
in
cmpb
push
and
adc
xorb
out
fstl
cmp
push
outsb
sarb
pop
inc
lods
fbld
shl
outsl
xchg
or
mov
cmpsl
cld
cmp
ret
stc
jp
mov
push
loopne
testb
lcall
add
mov
mov
sub
jnp
out
jns
ja
sahf
inc
mov
add
insl
mov
sbbb
add
mov
add
adc
rol
fwait
inc
push
cmp
mov
xchg
jnp
test
loope
xchg
hlt
adc
enter
movsl
pop
insl
push
adc
pop
rcll
fs
cmpl
negb
jle
mov
cmpsl
push
pop
lahf
push
jl
dec
fstps
shl
sbb
inc
pop
add
pop
lahf
cmp
push
ret
dec
in
sahf
xchg
pop
dec
push
and
and
je
rcr
sub
scas
movsl
icebp
dec
fsubrl
sbb
cwtl
xchg
xchg
push
dec
sbb
xor
pop
mov
arpl
xchg
pushf
inc
loope
mov
mov
inc
test
ss
xchg
mov
sbb
mov
inc
push
xchg
cmc
out
cmp
rcrb
int
pop
loope
out
cmp
imul
mov
cmp
cmpsl
add
cltd
pop
movsb
mov
push
xchg
fwait
ds
shlb
pop
stos
cmp
pop
pop
push
hlt
enter
sti
ljmp
mov
push
les
je
dec
mov
dec
pop
adc
stos
daa
sub
jb
or
sbb
lods
mov
push
add
call
mov
cltd
cmpsl
xchg
adc
jecxz
mov
ret
sbb
cmpsl
inc
mov
sub
andb
js
iret
lahf
lea
add
mov
push
shl
sbb
imul
sbb
loope
inc
movsl
pop
cwtl
scas
dec
mov
std
lods
push
jmp
jecxz
inc
dec
jl
shl
pop
mov
movsl
es
shlb
stos
sbb
xchg
in
sbb
xchg
adc
jnp
add
cmp
fistl
mov
cmp
xchg
fs
mov
test
jo
cwtl
xlat
jg
js
rorl
rol
mov
arpl
in
xor
mov
or
fstl
repz
cmpsb
lret
cmp
pop
aas
and
scas
rcrb
jo
test
inc
push
jbe
outsb
fisttpl
push
loopne
pop
dec
movsb
int
mov
pop
adc
cmpsl
mov
sub
mov
mov
fcompl
dec
and
insl
push
incb
inc
cld
add
fistpl
mov
mov
and
std
dec
push
or
pusha
xor
rolb
mov
xchg
aad
push
jg
imul
sub
mov
pop
pop
aas
push
pop
inc
aam
mov
mov
enter
aas
sbb
adc
xor
fildll
jp
testl
ljmp
inc
fnstsw
inc
and
sti
lea
mov
pop
aad
add
add
mov
jp
xchg
lods
jecxz
adc
jmp
scas
pushf
lods
sarb
and
sbb
mov
cmpsl
pop
cli
dec
sub
mov
fwait
aam
push
pop
imull
fnstenv
ret
sbb
push
push
push
sbb
imul
inc
xchg
sub
enter
inc
jbe
mov
pop
inc
aam
mov
test
xor
enter
inc
test
sbb
xchg
sub
push
cmc
shlb
xchg
sbb
cmp
push
mov
or
das
push
xchg
das
jae
je
push
fs
fistpl
daa
lahf
test
cmp
add
enter
add
test
and
js
pop
movsl
ret
mov
jp
pop
sub
daa
sbb
pop
addl
lret
inc
loopne
xchg
es
jnp
adc
and
lret
imul
fnstcw
xor
inc
lods
or
jno
xchg
ja
std
les
xchg
sahf
je
ret
mov
in
and
jle
push
xchg
dec
cmpsb
sbb
scas
jge
sahf
test
mov
test
leave
pop
popf
jno
push
sbb
mov
pop
sbb
mov
jnp
movsb
add
pop
addb
add
movsb
sub
loope
cmp
je
inc
rcr
mov
and
jg
mov
push
std
cld
ret
mov
mov
jne
mov
adc
mov
add
jae
sub
mov
jns
add
sarb
movb
add
sbb
mov
push
jbe
mov
enter
cmpsb
sbb
mov
rol
sub
cmp
push
jmp
rcll
push
jle
sbb
aas
jmp
mov
jmp
cwtl
pusha
fwait
ret
inc
inc
or
mov
or
pushf
dec
jo
pusha
popf
push
and
ficompl
imul
shl
in
cmp
out
xor
fmuls
out
stc
stc
fwait
rcl
loope
adc
mov
push
cld
call
popa
cmc
loope
dec
fwait
mov
stc
and
rcl
mov
movsl
stc
shlb
or
fdivrl
loope
push
shrl
stc
movsb
aad
wbinvd
jg
imul
imul
loope
mov
fimuls
rcrl
jno
adc
push
int
loope
mov
shll
dec
movsl
fadd
movsl
stc
loope
loop
mov
test
mov
inc
mov
pop
jge
xchg
and
or
mov
mov
shrl
aad
addr16
mov
leave
out
and
adc
lods
jo
add
sub
icebp
movsl
stc
mov
mov
sub
popf
out
std
sar
stc
stos
mov
repz
mov
mov
arpl
cltd
push
mov
aad
addr16
cli
popa
push
adc
dec
cmp
icebp
cld
cld
leave
and
add
adc
aad
outsl
stc
mov
out
inc
jl
jno
shll
sar
pop
std
popa
mov
mov
mov
sti
mov
sar
in
mov
or
jns
push
fcmovnbe
adc
inc
movsl
mov
addr16
adc
stc
and
adc
mov
sbb
out
in
mov
lea
stc
stc
and
sbb
adc
aam
movsb
lea
ljmp
aad
outsl
mov
loopne
les
and
adc
enter
int3
aam
imul
in
arpl
stc
addb
xor
fdivl
addr16
jge
stc
and
adc
stc
pushf
cwtl
mov
jmp
shrl
xchg
or
jmp
xchg
mov
test
cltd
mov
aad
dec
ljmp
xor
orb
or
xor
push
jmp
stc
jl
and
fldcw
ret
gs
push
jns
and
fcmovnb
mov
cmp
mov
xchg
popf
add
jns
fdivl
fprem1
dec
in
les
popa
test
int
fwait
and
movsl
jno
addr16
test
and
sub
fcoml
aad
outsl
jno
add
cld
sbb
shr
loop
mov
jns
or
mov
sub
int
fwait
mov
mov
mov
out
test
rcll
mov
popa
outsl
rorl
pop
stc
dec
ret
sarl
adc
mov
mov
les
mov
popa
icebp
pop
loope
int
pushf
stc
loope
mov
out
dec
jge
stc
and
ret
shll
out
xchg
jge
shll
subl
wbinvd
pop
xchg
test
aad
mov
mov
add
push
mov
stc
dec
testl
frstor
mov
jle
pop
fstpl
gs
mov
jmp
add
jge
mov
fstps
std
push
dec
shl
out
pop
push
lods
jge
jecxz
jns
out
in
jns
and
fucomp
sbb
ljmp
mov
jmp
int3
jg
test
pop
std
cmp
sbb
in
call
inc
mov
dec
lea
mov
xor
gs
pop
jge
loopne
xchg
out
dec
lock
xchg
and
stos
cmp
push
sub
aad
jle
les
and
jnp
mov
hlt
mov
out
jne
std
lock
or
pusha
andl
movsl
jl
movsl
in
push
test
mov
sti
jns
mov
mov
jne
mov
std
pop
and
or
sub
stos
push
test
pop
mov
rorb
jno
rolb
fldcw
test
inc
and
mov
dec
jno
movsl
dec
pusha
lock
mov
loope
lret
sub
cmc
push
push
dec
fs
in
mov
sbb
or
gs
jle
lret
sti
mov
scas
cmp
in
mov
lods
fs
cli
dec
stc
push
mov
imul
inc
fldenv
mov
bound
cmc
mov
mov
imul
bound
sbb
lcall
mov
in
mov
in
push
inc
mov
cmovg
imul
sbb
sbb
xchg
sti
cmp
in
cmp
xchg
dec
sbb
xchg
lods
jecxz
repz
xchg
dec
loope
mov
cmovg
sub
cwtl
jmp
in
sbb
sbb
fs
sti
mov
out
cmp
test
lods
cli
mov
in
lods
mov
stc
push
dec
xor
push
int
mov
cmp
lea
fs
loope
in
jecxz
out
in
call
stc
out
movsl
lods
lods
in
mov
pop
dec
and
fs
jmp
mov
push
jne
pop
mov
mov
pusha
out
int
in
rorl
pop
push
xor
sub
sbb
xchg
jl
test
inc
scas
fs
mov
ja
or
out
sub
and
test
cmc
dec
jo
add
cltd
bound
mov
loope
pop
jmp
fdivrl
outsb
test
sbb
and
ret
test
shl
jno
shlb
fdivrl
outsb
test
mov
jno
dec
mov
mov
fcoml
stos
test
pop
and
icebp
sbb
jl
stc
jmp
dec
cmp
cmc
ja
xchg
cmpsb
dec
les
adc
sti
or
mov
faddl
sarl
jno
in
cld
xor
push
fucomp
loope
dec
dec
imul
imul
out
push
imul
rcrl
insl
imul
jo
shrl
mov
rcrl
lock
rcll
nop
popa
fdivl
shll
loop
inc
int3
fs
inc
jg
adc
ret
mov
mov
dec
popf
gs
add
imul
gs
stos
in
loope
int
dec
jmp
mov
ljmp
shll
lea
dec
jmp
shrl
int
xchg
in
adc
cmp
in
sbb
mov
test
mov
cmpl
xchg
and
cltd
in
dec
rcll
mov
scas
ja
add
xchg
xlat
dec
ja
lods
or
or
insl
mov
loope
jl
popf
fs
cli
in
arpl
sub
jl
adc
mov
cmp
add
out
sub
mov
shl
in
sub
imul
sarl
and
push
pop
sbb
jmp
add
pop
xlat
dec
imul
lods
outsb
cwtl
jmp
sub
test
insl
dec
popf
shll
int
data16
in
int
sarl
shr
lods
cld
cwtl
jmp
adc
test
insw
mov
std
push
std
aam
stc
and
push
sbb
and
lods
decl
movsl
sub
mov
cmp
popf
mov
cmovg
and
xor
bound
and
adc
shlb
pop
test
je
in
push
sbb
in
std
jl
pop
jl
sub
aam
ja
insl
mov
xlat
push
imul
and
xor
bound
and
push
sbb
int
fucomi
fbstp
mov
cmovg
daa
inc
pop
xchg
loope
rcll
cld
mov
in
in
loopne
jl
jmp
dec
aam
fs
sti
aad
fsubs
jmp
or
int
sub
lea
shl
mov
pop
mov
stc
fs
xor
ficomps
pop
jl
jmp
mov
in
jl
jmp
dec
xor
jmp
test
popa
pusha
sub
pop
and
xchg
ret
jno
inc
repnz
push
cmp
xchg
jl
jmp
subb
ret
mov
movsl
mov
pusha
jno
test
cltd
pusha
frstor
jg
mov
je
sbb
sti
popa
jg
mov
stc
shl
popa
mov
jmp
sub
dec
jns
push
ja
push
push
bound
cmc
popf
dec
mov
bound
mov
xchg
sti
test
or
lahf
or
pop
mov
sbb
sti
xor
dec
imul
push
jmp
fdivrl
je
xchg
imul
cmp
jge
cmp
cmp
adc
or
fnstsw
popf
or
mulb
insb
push
fnstsw
mov
mov
in
imul
lcall
mov
sti
in
lds
mov
dec
push
add
fndisi(8087
mov
xor
mov
or
lea
sub
mov
xchg
mov
lock
mov
std
fildl
lock
mov
outsl
sbb
xchg
mov
jno
adc
call
sbb
and
test
mov
inc
jno
loop
les
xor
loope
insl
sbb
in
fs
dec
std
fstpt
in
and
pop
sbb
xor
jecxz
mov
mov
dec
leave
and
xchg
mov
jl
out
pop
sub
dec
aam
in
sub
dec
mov
mov
xchg
call
dec
out
insb
out
in
and
fisubl
jno
decl
call
sbb
cli
lods
xchg
aam
sti
xchg
pop
mov
std
adc
jne
and
xchg
xchg
in
dec
mov
mov
pop
test
fs
ljmp
pop
jno
sti
pop
lods
aam
xchg
mov
sub
adc
fstpt
and
insl
popa
stc
xlat
sbb
std
test
xchg
jno
inc
mov
test
dec
mov
lea
mov
cltd
jno
jmp
push
jl
sbb
rcl
jo
lcall
aam
xchg
mov
jno
sar
dec
jno
sarl
push
sub
dec
shll
jne
rcrb
aam
inc
fcmovnbe
aam
sti
cmp
jne
fstps
add
jg
mov
dec
inc
in
ljmp
jno
aad
ret
gs
mov
icebp
mov
jns
jns
and
sbb
and
and
fcomps
mov
ljmp
xlat
cmpsl
mov
jmp
in
in
jg
fcmove
lds
pop
loope
mov
pusha
jmp
popa
jmp
insl
in
cmovge
pop
pop
jnp
push
lods
flds
dec
out
and
jmp
mov
lods
pop
in
nop
xchg
jnp
and
pmuludq
pop
pop
mov
std
jmp
and
mov
pop
pop
mov
rorl
mov
rcrl
mov
into
or
jnp
fcmovnb
rcl
fisttps
ljmp
pop
xchg
rcll
ret
roll
fchs
les
dec
fimuls
std
jmp
dec
ret
and
lods
ret
fidivrs
pop
mov
xchg
sti
movb
and
fucom
pop
lds
and
stos
js
lock
mov
aad
xchg
enter
sbb
mov
ret
mov
cmp
ja
add
ja
mov
jns
pop
adc
xchg
mov
jno
fnstenv
in
fdivrl
xchg
in
sub
test
xchg
fdivl
fnstenv
jge
pop
pop
sub
or
xor
inc
sbb
and
xchg
add
fisttpl
add
sbb
out
add
lret
int
mov
jno
xchg
mov
inc
jno
xchg
mov
push
shr
fildll
or
jns
pop
jecxz
mov
popa
mov
icebp
in
dec
mov
mov
lods
cmc
sbb
pop
jo
idiv
jmp
lea
hlt
aam
mov
sub
loope
in
mov
in
mov
mov
stos
adc
stc
cld
dec
adc
lea
std
and
sub
lods
lods
rcl
jns
mov
in
fdivl
push
out
cmp
out
sar
fldenv
lods
sub
out
sub
stos
mov
pop
dec
int
fs
out
mov
sub
out
and
add
lds
sub
insl
outsl
adc
cmpsl
jge
cmp
or
in
mov
popf
ds
add
imul
fidivrl
or
and
xor
fucom
loope
jl
jmp
jmp
push
fs
imull
test
repnz
pop
jne
xor
dec
sbb
cld
sub
pop
inc
xor
pusha
add
inc
vpaddd
out
je
std
add
std
fsts
xchg
inc
lods
mov
test
popf
xchg
ret
movsb
dec
cltd
call
movsl
or
xchg
popa
int
cwtl
mov
mov
loope
mov
in
or
add
or
popf
iret
iret
xor
in
pop
mov
jmp
xchg
cmp
gs
sub
dec
lock
mov
jns
xor
fistpl
insl
jne
push
out
aad
lods
loop
inc
rcrb
andl
daa
jmp
int
fisttps
std
jno
pop
push
xlat
movsl
inc
sahf
mov
in
jns
jmp
cmovge
insl
jp
cmp
arpl
xchg
int
mov
jns
jecxz
cmp
xor
fs
aad
sub
jo
out
cmp
cmp
orl
cld
sbb
pusha
mov
mov
adc
jns
and
in
dec
fsubr
sbb
and
add
loope
ljmp
and
gs
jns
ss
lods
test
in
jmp
dec
outsb
imul
sub
jg
and
push
cld
jl
sti
jmp
scas
fisttpll
in
or
icebp
les
mov
stc
stc
ljmp
movsl
mov
fs
sti
xor
pop
and
fldcw
in
dec
lods
mov
adc
movsl
decl
stc
mov
icebp
cltd
ljmp
loopne
cmp
sbb
mov
push
adc
ljmp
test
shll
dec
lea
and
mov
stc
lock
popa
pusha
dec
push
pop
les
add
fnstenv
push
mov
adc
cmovge
dec
mov
xchg
loop
enter
loop
xor
mov
std
test
and
dec
jmp
mov
fsts
jle
jge
in
adc
jmp
call
mov
cwtl
jmp
push
jae
dec
cmc
xchg
mov
aad
mov
dec
ret
and
pop
lds
mov
cmp
imul
dec
mov
out
and
lea
xor
cmp
std
ret
mov
mov
aas
popa
xchg
ljmp
jb
cmpsl
push
push
aaa
test
sub
adc
aad
xchg
or
lret
xchg
mov
lret
imul
je
mov
pop
cltd
cmp
leave
mov
leave
mov
int
xchg
cmp
dec
xorl
out
int3
cld
vpmovmskb
int3
jns
inc
inc
popa
sbb
pop
push
imul
popf
and
divb
jmp
jae
jno
lcall
popa
dec
jno
cmovge
push
jp
into
and
lock
lcall
cmp
cmpxchg
cmp
xchg
mov
shll
cmp
jno
cmovge
fldenv
jns
jo
andl
jno
std
pop
test
loopne
iret
fs
ljmp
jno
loopne
cltd
xor
lcall
aam
in
insl
adc
and
enter
xor
jno
dec
mov
mov
dec
shll
jne
cmp
or
jno
pop
faddl
cmpsb
sbb
aam
pop
and
mov
jp
stc
rcrl
aas
xchg
mov
daa
add
push
pop
mov
sahf
insl
xor
lret
pushf
jmp
out
cmpl
in
rcr
addr16
or
cmp
cmp
icebp
mov
popf
jmp
pop
mov
ja
pop
lods
push
in
cld
adc
jns
and
cld
dec
jmp
dec
xor
or
sti
inc
in
add
and
popa
and
es
sub
xchg
and
sarb
shrl
mov
imul
adc
pop
rcll
shr
push
jecxz
in
sti
test
jnp
mov
and
gs
popf
pop
cmp
and
jmp
pushf
in
hlt
mov
sarb
mov
jns
jmp
mov
mov
adc
outsl
cwtl
xor
pop
inc
cwtl
xor
loope
xor
mov
adc
ret
sbb
test
mov
mov
hlt
add
sub
sub
aad
ljmp
shlb
push
mov
std
imul
xorl
cmovge
sub
xor
lods
in
jmp
loope
add
add
out
movswl
mov
jno
in
jge
xor
dec
or
aad
or
mov
mov
cwtl
shrb
arpl
rolb
cmp
fwait
mov
cmp
adc
push
inc
xchg
insl
ja
sub
xchg
mov
sbb
cmp
adc
ret
es
sbb
lahf
bound
ds
sti
fistpl
jmp
lds
push
outsb
aad
mov
mov
hlt
mov
cld
mov
pop
aad
xchg
jg
dec
sbb
dec
mov
sbb
cmp
sbb
jecxz
aad
pusha
adc
mov
mov
aad
out
int
mov
std
cmpl
and
pusha
adc
cld
sub
rclb
mov
inc
sbb
or
jnp
insl
pop
mov
mov
and
out
int
mov
je
jg
lret
xor
adc
fwait
xchg
popa
insl
mov
pusha
adc
add
icebp
pop
mov
add
inc
test
and
xchg
aaa
insl
dec
xlat
stc
inc
jmp
jne
sub
cwtl
mov
mov
loope
jmp
repz
xorl
dec
cmpsb
jecxz
insl
insl
jecxz
ljmp
in
and
jmp
mov
popa
jmp
insl
call
lds
dec
out
in
bnd
in
jo
inc
and
scas
icebp
mov
and
rcr
push
pop
cld
lods
fcmovbe
jl
hlt
arpl
fisubrl
or
cltd
add
pop
and
lods
repz
sbb
cwtl
fnsave
inc
std
sub
decl
out
rcll
add
dec
fsubrl
mov
fmul
leave
shl
in
ret
lods
int
les
mov
popa
adc
out
and
int
cmpsl
mov
das
and
jmp
out
dec
fidivl
outsb
fwait
pop
icebp
decl
cmp
test
and
enter
les
pop
jns
and
inc
sbb
lcall
or
in
pop
loopne
mov
loope
mov
sub
fldt
mov
std
fucomi
je
xor
in
sub
rcll
push
icebp
insb
mov
lea
sbb
jb
jae
lods
lea
pop
sub
pushf
leave
cltd
loope
cmp
cmp
sbb
push
aad
pusha
daa
test
sub
pushf
mov
out
icebp
mov
cltd
out
adcl
mov
icebp
out
insl
out
vpaddb
fwait
cmc
mov
xlat
mov
dec
in
mov
jge
imul
pusha
daa
adc
rcrb
jge
mov
test
leave
jl
rcrb
add
in
rorl
mov
sub
mulb
fnstcw
std
xor
stos
cmp
fldcw
rorl
inc
mov
cmc
movsb
xchg
sarl
xchg
push
jns
std
mov
popf
xorl
imull
xchg
fsubr
jnp
xor
xor
xchg
push
in
sahf
or
js
int3
rcl
fsts
dec
mov
test
fstpl
xor
and
sub
pop
in
aam
sbb
decl
in
jecxz
dec
out
lds
decl
fwait
push
fldenv
lods
mov
mov
or
je
std
dec
mov
out
sub
cmp
cmp
fwait
and
xor
xchg
lds
mov
sub
pop
frndint
jge
xor
mov
mov
push
jbe
es
fs
pushf
fs
cmp
fidivrl
mov
data16
gs
sub
pop
ret
mov
mov
cmp
jno
inc
dec
mov
mov
ret
mov
and
xor
std
sti
jno
or
xchg
jl
mov
aad
fldcw
jg
pusha
daa
in
mov
jno
aam
loope
in
and
cmp
out
clc
int
dec
jne
ja
in
inc
popa
adc
dec
adc
cli
mov
xor
add
sbb
rolb
mov
pusha
xor
pop
enter
movsb
xchg
mov
cmp
pusha
xor
or
mov
mov
pop
cmpsl
pusha
xor
or
mov
mov
pusha
xor
or
mov
mov
cmp
mov
jne
int
push
sub
ret
cmp
ret
mov
xchg
cmpsb
sub
push
inc
lds
cli
mov
xor
cmc
pushf
sub
arpl
cli
mov
xor
cmc
pushf
sub
arpl
cli
mov
sbb
loopne
dec
cs
cmc
shrb
cmp
mov
mov
mov
sub
aad
std
orl
jne
cmp
and
and
jl
sbb
rolb
adc
jecxz
shll
aas
outsb
lds
jno
fdivrs
std
fisubrs
das
daa
leave
mov
lds
jno
aad
jae
leave
enter
pushf
in
add
movl
mov
insb
shll
cmp
pusha
mov
add
shll
ret
pop
cmp
and
mov
or
jmp
ret
cmp
or
popa
out
sub
outsb
mov
add
pop
dec
cmp
push
imul
lea
and
mov
leave
xor
std
jnp
adc
sbbl
in
or
jne
insl
out
movsl
sarb
sbb
inc
cmp
popa
cld
adc
std
loop
mov
in
loope
dec
xchg
pusha
mov
loope
mov
in
pusha
mov
bound
inc
cld
add
loopne
jg
rcr
les
stos
dec
rorl
imul
shl
push
mov
loope
mov
or
test
mov
dec
push
mov
in
stos
shll
shll
sbb
sbb
frstor
mov
cmp
xchg
ficoml
loopne
pop
rcrl
adc
stc
dec
mov
insb
loope
stc
xor
pminub
loopne
inc
roll
adc
stc
cmp
stc
inc
rcrb
arpl
push
add
xorl
fcoml
mov
xchg
mov
std
stos
xor
mov
popf
mov
xor
stos
or
sti
push
and
adc
mov
adc
mov
out
adc
mov
pop
sbb
addl
stc
xchg
in
ds
ds
sbb
mov
cmp
in
mov
daa
mov
shlb
cmp
lea
add
cmp
mov
shlb
mov
push
cmp
test
lahf
xorl
add
pop
rcll
jo
pop
jge
mov
xor
cmp
lret
dec
mov
std
stos
xor
mov
dec
lea
mov
fiaddl
mov
lds
hlt
xchg
stos
sbb
cmpsl
rcrb
rolb
ljmp
cmp
mov
add
insb
mov
orb
adc
mov
movsb
jb
cmp
int
addl
pop
cmp
cwtl
adc
add
cld
pop
sbb
mov
inc
sbb
in
loope
mov
push
cmp
mov
mov
jnp
mov
cmpsb
pop
sbb
pop
ss
sbb
les
pop
mov
popa
sbb
lahf
bound
lds
inc
rorl
jmp
int
pop
push
mov
xchg
loopne
mov
jbe
add
push
jbe
cmp
mov
mov
cmc
cmpsb
xor
jle
cmc
sbb
lahf
mov
adc
rolb
mov
fstps
ror
ja
in
aam
pop
sub
lea
popf
stc
pop
popf
sub
xor
cmp
imul
lock
lea
inc
pop
mov
add
repnz
push
cmp
and
int
loope
mov
and
aad
add
mov
lods
rcrl
mov
rcrb
jno
jp
test
push
dec
icebp
rcrb
cld
icebp
shlb
push
mov
hlt
mov
rcll
es
lock
std
aam
in
arpl
cmp
inc
cmc
jo
cmc
ret
push
adc
inc
pusha
sbb
mov
loop
movsb
xchg
popa
adc
sbb
cmp
js
popa
push
jl
mov
cmp
jne
test
jl
hlt
cli
mov
xor
inc
cwtl
jno
les
dec
mov
adc
mov
inc
inc
dec
push
rcrl
sub
mov
inc
pop
sub
test
mov
adc
lods
mov
fcomip
pop
dec
inc
jmp
push
jmp
push
mov
sbb
cmc
dec
loope
mov
xor
int
inc
mov
pop
push
test
popa
add
popf
add
test
mov
sar
mov
sbb
mov
xchg
sub
cld
mov
ror
lahf
sbb
and
ss
inc
pop
adc
in
int
mov
xor
push
dec
vpmuludq
sti
stc
xlat
dec
in
jecxz
rol
shl
imul
dec
icebp
in
aaa
dec
sbb
in
in
mov
bound
out
ret
mov
nop
mov
dec
dec
mov
stc
fidivrl
imul
jmp
dec
dec
adc
clc
pop
mov
fsubl
pop
mov
nop
std
fdivrl
adc
adc
jge
xchg
rcrl
hlt
std
adc
jge
lods
rcrl
hlt
std
adc
jge
test
pop
inc
sbb
xchg
jns
dec
insl
xor
sub
sbb
fnstcw
js
sbb
xchg
in
xchg
xchg
pusha
shll
rcrb
std
adcl
or
mov
pop
mov
aam
mov
shll
test
insb
mov
cltd
daa
lahf
mov
mov
mov
std
stos
popa
je
lahf
mov
bound
jne
not
fbstp
inc
mov
js
fisubl
cmp
icebp
mov
aad
pop
aaa
pop
mov
xchg
xchg
aas
sbb
bound
sbb
mov
mov
roll
aas
outsb
sbb
mov
arpl
push
xlat
mov
mov
sbb
cli
mov
aaa
mov
dec
mov
ljmp
mov
sub
mov
sub
leave
sub
cmp
jmp
aaa
or
mov
mov
std
leave
add
mov
mov
or
fstp
push
mov
in
stos
out
fistps
repnz
cmp
mov
cli
mov
aaa
mov
aaa
pop
aas
shl
cmp
mov
cli
mov
in
cmp
or
in
inc
rcll
bound
fmuls
stos
pop
xchg
ds
jne
lahf
bound
mov
xchg
mov
sarl
rep
fmuls
mov
xchg
in
in
cmp
cmpsb
das
mov
in
rcrb
xchg
shl
andb
mov
lahf
xchg
hlt
in
jbe
cltd
aad
mov
jno
cmp
or
sub
lea
or
add
adc
stos
lods
mov
lea
in
popf
icebp
movb
and
icebp
mov
addps
mov
mov
bound
mov
bound
dec
dec
ds
lods
cmp
mov
popf
xor
ds
out
lds
cmp
lods
jns
int
ffree
cld
push
pusha
jecxz
xor
lods
mov
in
push
jbe
lods
and
orl
pop
lods
sbb
xchg
fldl
add
xchg
add
lods
add
pushf
data16
das
std
shlb
add
or
lods
pushf
gs
jne
gs
push
imul
adc
mov
popf
imul
xor
test
hlt
jns
cli
mov
xor
loopne
xor
xorb
xchg
flds
push
icebp
sbb
out
cmp
mov
jecxz
roll
sbb
mov
xor
xor
fnstsw
mov
std
shll
fstpl
bound
rcrl
cmp
inc
test
push
push
icebp
push
mov
aad
mov
push
std
repz
std
inc
xchg
in
cld
fsts
sub
sbb
lea
inc
fwait
stc
icebp
push
lea
les
enter
pushf
xor
dec
dec
jne
fs
loope
mov
in
stc
popf
adc
out
push
mov
rcll
and
push
pop
xchg
test
fadds
xchg
test
fsts
test
nop
jnp
cmp
mov
call
cs
and
lret
dec
test
daa
mov
ja
mov
jne
cmc
or
xorl
popf
add
xorl
add
cmp
das
lods
sub
je
ret
cmp
inc
ret
dec
shrb
mov
jmp
mov
adc
pop
xchg
add
mov
jns
sbb
ljmp
xlat
dec
popf
bound
lods
das
flds
test
inc
jmp
and
fld
xchg
fucomi
xchg
lods
fcmovnu
fsubl
xchg
and
jg
dec
fstl
fdivl
ror
xchg
and
push
sarl
pop
lods
pop
mov
fdivl
ret
lods
int
enter
adc
std
mov
in
mov
lods
mov
mov
out
insl
sbb
bound
mov
bound
xchg
mov
insl
sbb
mov
in
lea
sub
rcl
out
adc
decl
frstor
lods
rol
ficoml
sbb
add
std
ret
mov
popa
xchg
mov
sub
frstor
mov
movsl
negb
insl
mov
push
xor
arpl
lds
push
mov
ds
test
mov
dec
sarb
mov
fstpl
mov
cwtl
or
push
lcall
addr16
and
dec
mov
dec
dec
lods
fstl
mov
ret
decl
and
mov
pop
push
pop
bound
adc
mov
std
test
repnz
pop
mov
aad
ret
mov
dec
shlb
mov
popf
and
dec
mov
xchg
or
jno
or
jns
pop
mov
stos
or
xchg
addr16
and
sbb
bound
test
mov
sbb
mov
pop
or
mov
inc
in
push
mov
mov
jl
test
and
add
mov
xchg
xor
mov
mov
lods
inc
shll
jne
inc
mov
or
jb
lea
addl
sbb
xchg
sbbl
lods
pushf
push
mov
pop
mov
std
leave
lea
push
jne
fcoms
mov
cwtl
icebp
pop
xor
jl
adc
std
sarl
je
fnstenv
cmp
mov
stos
mov
push
add
movl
movl
cmpsb
shrb
pop
std
pop
inc
insl
dec
fsts
mov
dec
mov
add
sub
ret
cltd
mov
mov
movsl
xor
fldenv
cmc
test
into
or
enter
pushf
test
arpl
ret
in
dec
mov
mov
dec
shll
aam
ret
in
inc
xor
enter
sbb
sub
sbb
mov
test
xchg
pop
ret
call
mov
out
loope
mov
es
and
xor
mov
lds
mov
xchg
int
mov
cmp
enter
mov
mov
mov
cmp
jge
add
cwtl
dec
pop
pushl
in
fstpt
std
mov
cmpsl
lds
and
lods
fcmovu
mov
mov
mov
imul
je
fwait
loop
shl
faddl
imul
fsub
fstps
xor
inc
insl
push
sbb
dec
pop
dec
jo
jge
adc
lods
loope
fmul
mov
out
add
ret
rclb
sar
jl
lfs
sbb
outsb
jno
mov
icebp
cmovle
es
loopne
fidivl
jae
jno
lcall
dec
xorl
dec
popa
loope
mov
popa
sub
std
dec
mov
lea
jno
mov
loope
dec
mov
mov
and
in
mov
jae
jno
xchg
cmp
outsl
stc
sbb
xchg
loope
shll
push
sbb
mov
mov
adc
movsl
xchg
cmc
popa
lret
fimull
jecxz
loope
fcmove
inc
fwait
adc
stc
loop
loope
fxch
mov
mov
mov
es
leave
xchg
scas
xor
clc
lock
pop
xor
jg
and
out
mov
gs
pop
lahf
mov
hlt
jge
mov
repz
jns
sub
movsl
addr16
jge
push
mov
in
in
sbb
call
inc
scas
sub
cmp
jo
orl
mov
adc
repnz
add
pop
mov
adc
ljmp
jno
cmc
pop
add
mov
mov
mov
nop
mov
cmc
sbb
dec
stc
mov
pushf
loope
movsl
fucom
mov
jl
sbb
dec
xchg
xor
xchg
rolb
stos
xchg
sar
cltd
nop
xchg
xchg
xchg
shl
sbb
test
popf
sahf
fs
jae
in
xchg
sbb
adc
cmp
cwtl
xchg
in
cwtl
inc
aaa
mov
popf
dec
xchg
jae
in
xchg
sbb
push
sub
stos
aas
in
dec
stos
xchg
cs
and
cmpl
loope
adc
jne
adc
imul
xchg
mov
mov
cmp
and
cmovg
cmc
stc
jo
dec
and
sub
pop
dec
aam
out
sti
decl
out
sti
adc
pop
movsl
aam
jae
mov
outsl
repnz
clc
sub
shrb
in
mov
fldt
xchg
xor
or
cmp
or
js
xchg
jmp
lea
push
jmp
jmp
pop
push
sub
ljmp
dec
push
adc
popa
xchg
inc
push
and
xchg
pop
xlat
xor
fisubrl
movsb
dec
scas
fwait
popf
mov
push
add
loope
imul
jo
in
shl
dec
add
lods
rcl
nop
aad
aas
fsts
inc
lds
inc
sub
pusha
dec
xchg
imul
dec
shrb
cli
push
mov
jp
dec
xchg
gs
push
stc
enter
adc
dec
mov
push
mov
xchg
adcl
outsl
popa
adc
mov
push
xchg
pop
in
inc
test
mov
xorb
stc
fisubrs
mov
dec
mov
aaa
arpl
push
and
in
mov
xorl
mov
std
pop
add
xorl
mov
gs
ficoms
popa
adc
mov
xchg
adc
mov
test
insl
ficoms
jae
pushl
add
mov
jbe
out
ficoms
popa
adc
mov
adc
xchg
ret
lahf
pop
mov
sbb
mov
orl
shl
mov
sub
mov
sarb
mov
in
inc
cltd
cmpsb
shl
dec
dec
rcrl
add
pop
in
insb
mov
inc
addl
pop
pushf
loopne
lds
xchg
in
aad
cmpsb
ds
test
xchg
std
lcall
sub
fwait
mov
fwait
jno
mov
nop
sbb
lcall
jne
repz
sti
pop
mov
sahf
jg
in
add
jno
xor
inc
mov
sbb
cwtd
fstl
jae
jno
lcall
stc
mov
cmpsb
xorl
mov
xor
xor
rcll
repz
es
mov
jb
mov
fnstsw
cmp
mov
and
jno
mov
cmpsb
cmp
adc
mov
and
sbb
frstor
je
push
adc
shll
xchg
addr16
cmp
addr16
and
sbb
pop
shlb
fnsave
popa
pop
mov
xchg
pop
xchg
jp
jns
in
les
jne
das
shll
sbb
dec
pop
mov
xchg
adcl
in
mov
jne
lds
lock
sbb
or
mov
xchg
pop
lds
je
lret
sti
cwtl
xchg
mov
std
dec
sbb
test
subl
lcall
jmp
inc
or
mov
insl
mov
cmpsb
inc
fldenv
pusha
push
mov
gs
jno
out
inc
mov
dec
mov
test
mov
imul
test
sub
xor
mov
xchg
adcl
orl
sahf
jge
sti
rclb
aad
addr16
sti
cmp
cld
cmc
int
fisubrs
leave
addr16
cmp
ficoml
jl
mov
clc
rcl
hlt
shll
out
insl
in
loope
sahf
adc
xor
stc
rorb
out
jno
push
and
add
push
lods
ja
jne
xor
stos
sbb
jmp
dec
push
cmp
push
popa
pop
push
fwait
or
gs
adc
pop
adc
lods
push
rcll
mov
icebp
mov
jg
mov
rcrb
stc
or
icebp
or
rolb
js
add
or
pop
shrl
test
out
xchg
inc
push
inc
loope
mov
cmp
xor
jmp
dec
sub
jmp
fdivr
mov
inc
daa
lds
and
rcrl
js
popa
push
and
cltd
cmpsb
shr
inc
hlt
lds
pop
and
in
aad
and
imul
sbb
or
or
jo
add
dec
aad
test
test
jge
sub
bound
jl
les
test
movsl
cli
in
imul
dec
arpl
in
sbb
mov
cmpl
push
mov
arpl
jge
inc
sub
popa
lds
hlt
jp
cmp
rcrl
cmp
mov
jl
inc
mov
in
insl
xchg
bound
jle
inc
mov
jmp
in
in
int
dec
jmp
mov
imul
in
mov
dec
push
jmp
imul
les
scas
mov
xor
loopne
mov
mov
mov
cmp
imull
cmp
push
mov
std
xorl
in
popf
mov
test
jno
mov
gs
rorl
je
mov
xor
jnp
xor
pop
jp
ds
mov
mov
sbb
pop
sbb
adc
cmc
dec
mov
cs
adc
sbb
pop
loopne
lds
push
gs
xchg
adc
jno
mov
mov
push
jbe
out
mov
inc
mov
mov
push
xchg
dec
sarb
popa
xorl
ja
mov
mov
std
push
lock
dec
in
movsl
xorl
imul
int
mov
cli
mov
add
mov
popa
fnstcw
lods
mov
cmp
mov
mov
dec
dec
imul
mov
mov
ss
mov
sbbl
loopne
je
mov
outsb
je
pushf
outsb
xchg
popa
cltd
mov
popf
adc
xchg
fxch
xchg
std
xchg
mov
insl
insl
pop
mov
insl
push
xchg
pop
adc
insl
mov
loope
mov
sarl
loope
mov
aad
in
gs
fdivs
add
in
sbb
dec
mov
mov
pusha
cltd
mov
outsl
sub
ret
or
pop
or
and
mov
inc
daa
adc
pushf
inc
jmp
pop
inc
push
adc
sub
mov
inc
sbb
pop
hlt
inc
jae
mov
xor
mov
sbb
xor
and
jno
out
jmp
mov
sbb
cmpsl
xor
cmc
jecxz
gs
mov
pop
shll
mov
std
cmp
mov
stos
mov
insb
mov
icebp
mov
sbb
fwait
mov
push
inc
test
xchg
adc
nop
std
dec
je
lahf
push
gs
popf
fnstcw
rcll
sbb
hlt
xchg
inc
mov
inc
rcrl
std
pusha
les
idiv
rclb
sbb
sbb
xor
test
mov
mov
xor
xor
es
popf
sub
int
mov
andl
cmp
and
inc
jns
stc
rorl
xor
movsb
rol
xchg
mov
rorl
hlt
pop
jmp
sbb
sub
aas
inc
dec
or
mov
sub
mov
jns
mov
es
mov
dec
sbb
xchg
test
shll
pop
and
lods
mov
mov
sub
stos
push
pop
gs
cmp
sbbb
pop
pop
arpl
test
ret
je
jge
mov
popf
es
xchg
jge
pop
icebp
lea
pop
push
addr16
mov
pop
std
mov
or
inc
pop
and
inc
aam
out
rcr
dec
dec
xchg
outsb
or
test
cmp
in
dec
jg
add
mov
jmp
jecxz
dec
jno
in
and
xor
xor
int
jmp
popa
rorl
sub
mov
dec
lret
insl
jp
lret
and
mov
in
fnstenv
mov
dec
jo
frstor
mov
mov
popf
and
dec
mov
jno
mov
movsb
jmp
repnz
decl
mov
dec
mov
in
popa
jne
addr16
int
cmpsb
xchg
mov
add
movsl
out
cmovle
and
jo
mov
push
mov
fs
ljmp
mov
cmpsl
mov
shll
mov
sti
mov
xchg
xlat
dec
std
dec
dec
mov
lds
mov
sbb
xchg
mov
lret
je
lea
jmp
lods
mov
std
cltd
in
incl
mov
mov
jno
mov
mov
or
je
sbb
loopne
mov
je
pop
xchg
mov
mov
dec
xchg
and
lods
xchg
fistl
jl
std
or
dec
xchg
sbb
jl
push
cmp
mov
divl
lret
push
cmp
pop
in
dec
mov
icebp
adc
mov
cmp
jge
lea
aad
fcomps
in
jmp
mov
xchg
dec
in
outsb
jge
adc
pushf
push
stc
mov
cld
icebp
loope
inc
push
xor
pop
adc
outsb
jge
pop
mov
lea
sahf
and
mov
mov
cmp
pop
mov
push
cmp
nop
sub
leave
xor
push
std
mov
push
inc
and
xchg
jge
push
inc
cmp
inc
jge
push
inc
adc
icebp
jge
or
dec
mov
movsl
sub
mov
shlb
jmp
in
xchg
cmp
movsb
sub
jno
testl
insl
fs
aad
mov
popa
in
cld
mov
cmc
popa
mov
or
xorl
movsl
mov
in
fs
test
xor
out
xor
jl
ja
xchg
jno
rorb
pop
imul
mov
pop
test
jge
cmp
call
pop
stc
or
ss
xor
jp
aas
jno
xchg
xor
mov
lods
fstpt
sarb
inc
loop
jns
and
lods
aaa
aaa
lahf
cmp
lret
jb
leave
xor
xor
push
shll
fcmove
pushf
fstps
es
adc
mov
test
sbb
or
pop
cli
push
in
bound
in
dec
jl
push
and
xchg
dec
in
push
sbb
mov
int3
into
js
out
xchg
int
mov
fsts
dec
sarl
inc
mov
movsl
pop
loope
sarl
cs
jnp
sbb
loope
mov
sbb
push
mov
jns
adc
jmp
xchg
sub
in
aad
mov
xchg
int
adc
sub
ja
mov
lock
in
popa
mov
jno
int
mov
movsb
cmc
mov
xchg
xor
pop
std
sbb
add
or
push
jns
fcmovne
add
stc
iret
aas
icebp
or
and
imul
dec
or
and
sub
mov
adc
dec
vcvtsi2ssl
cmp
inc
cmc
cmp
repz
cmp
or
and
xchg
stos
mov
inc
pushf
mov
sbb
arpl
dec
xchg
mov
and
fnstcw
mov
push
out
cmp
mov
pop
jbe
out
mov
cli
mov
sbb
jae
popa
imul
push
popf
push
mov
mov
popa
adcb
mov
data16
or
xchg
stc
lahf
bound
inc
inc
daa
xor
sub
inc
or
mov
inc
popa
pop
jmp
mov
sub
pop
mov
xchg
xor
sbb
pushf
cmp
cmp
mov
dec
mov
pusha
cmp
ret
popa
popa
cmp
int
aad
push
xchg
xchg
xchg
pop
cmc
insb
mov
mov
xchg
xlat
in
inc
xor
xor
ss
and
mov
sbb
testb
rclb
mov
or
mov
pusha
testl
xor
jge
inc
pushf
jno
ljmp
xor
lods
mov
xchg
pop
mov
aas
lods
mov
inc
shl
xor
adc
mov
sbb
or
xchg
lods
dec
aad
adc
fwait
mov
xor
cmp
pop
adc
pushf
adc
add
xchg
push
stos
sbb
out
push
pop
pop
lahf
sbb
and
mov
cmp
dec
cltd
mov
jne
mov
hlt
jae
jne
inc
std
push
and
nop
and
mov
jbe
dec
mov
xor
std
adc
lods
or
addr16
adc
lods
or
addr16
sub
imul
cmp
adc
mov
jge
cwtl
fdivr
push
int3
mov
cmc
inc
orl
cli
mov
xor
jg
movsl
xchg
pop
adc
xchg
pop
cmp
cli
push
in
cmp
push
lahf
cmp
lea
nop
stc
mov
cld
fucomp
or
cmp
std
mov
cmp
push
and
inc
mov
in
int
enter
js
pop
sbb
or
add
pop
fs
mov
aad
xchg
xor
test
mov
dec
adc
adc
sbb
cmp
jmp
mov
dec
jne
popa
jns
jp
push
sbb
in
sub
aam
jno
dec
cmp
adc
sbb
fstps
push
sub
testb
or
movsb
loope
mov
mov
sub
adc
popa
test
and
ffree
dec
test
das
lret
sub
sub
add
icebp
in
mov
test
mov
sti
sub
sub
cltd
mov
mov
mov
sub
mov
insl
mov
mov
cs
ret
cltd
mov
hlt
test
arpl
xchg
mov
sub
mov
dec
mov
int
inc
test
adc
popa
ficoml
pusha
icebp
shlb
pusha
sbb
xchg
stos
add
dec
fiaddl
pusha
or
mov
inc
cmpl
pop
add
addr16
int
mov
xor
sarl
bound
inc
pop
mov
cltd
dec
inc
mov
sarl
cmp
cltd
xorl
push
mov
aaa
mov
and
lret
push
xor
mov
lea
inc
sarl
leave
mov
ret
jae
loope
jmp
xchg
lret
inc
mov
and
popa
stc
loop
add
pusha
pop
icebp
test
jg
andb
pushf
adc
dec
mov
inc
mov
inc
dec
mov
inc
mov
loope
les
aas
push
mov
in
dec
mov
xchg
shll
inc
cld
dec
lea
pop
icebp
cmp
in
cmpsl
rol
cmp
fistpl
popa
pop
mov
shll
ds
cmp
ret
inc
and
mov
inc
sub
insl
cs
pop
mov
cmpsb
cmc
jns
mov
mov
dec
rcll
nop
loope
xchg
push
cwtl
inc
fadds
xor
pushf
inc
adc
fiaddl
mov
stc
push
inc
lahf
bound
loope
cmp
mov
mov
test
sbb
mov
sbb
cmp
sbb
inc
fadds
mov
inc
sub
xchg
out
mov
pop
mov
xor
cltd
pop
jg
repz
sbb
loope
lea
mov
push
cmp
sub
mov
xchg
mov
mov
jmp
dec
cmp
xor
mov
lahf
dec
cltd
jns
rcll
and
jmp
dec
mov
pusha
sahf
mov
pop
mov
xchg
pushf
push
insb
push
jne
pushf
xor
xchg
pop
mov
xchg
sti
loope
fldcw
mov
jge
lahf
bound
inc
fcompl
mov
sahf
jge
popa
cmc
dec
cmc
bound
inc
fisttps
xchg
mov
shll
mov
sti
imul
shl
dec
sbb
clc
cmp
jmp
lea
and
fldcw
test
fldenv
or
fyl2x
lahf
fnsave
loopne
jnp
sahf
sub
xor
pop
mov
mov
fcos
or
jnp
jb
xchg
stos
pop
lds
daa
lock
and
enter
sar
cli
arpl
xchg
jnp
cmp
mov
pop
dec
xor
sarb
lea
sub
cld
gs
xchg
jl
hlt
aad
inc
rcr
inc
test
sbb
je
jo
ljmp
mov
adc
cmp
push
test
cmpsl
xchg
fs
push
out
test
aad
push
lret
shll
adc
pop
shl
jbe
adc
test
loope
call
and
cmp
mov
cmpsb
rcrl
add
inc
sbb
and
add
std
lods
or
repnz
mov
pop
movsl
xor
mov
cmpsb
mov
dec
mov
bnd
jecxz
or
add
lahf
fstps
fnstcw
lds
addr16
jge
lcall
xor
adc
mov
jg
lret
lea
out
fcom
adc
divb
mov
or
adc
std
push
test
outsb
insl
imul
mov
mov
popf
push
rcll
xchg
adc
sbb
dec
enter
cmc
dec
push
dec
xchg
lock
lds
shl
stos
rol
push
adc
sbb
sti
in
shll
fs
cmpsb
rcl
testl
and
jno
gs
test
cltd
mov
jmp
cmp
dec
jmp
xor
jecxz
and
dec
ljmp
out
out
mov
xor
add
jo
dec
sub
sbb
push
dec
in
mov
jno
movsl
enter
mov
test
adc
jno
lcall
lahf
bound
dec
out
mov
lods
jne
fidivl
sbb
pusha
and
mov
cmp
stc
rorl
and
stc
xchg
xchg
xchg
cld
stc
popa
mov
stc
lret
leave
dec
je
or
mov
int
xor
mov
ret
sbb
shl
popf
inc
jmp
out
lea
jmp
dec
mov
sbb
xor
mov
mov
inc
loop
mov
mov
loop
or
mov
std
sbb
or
bound
cmp
sbb
cmpsl
cs
sbb
cmp
jge
ljmp
loope
loop
pop
leave
enter
mov
cmp
repnz
sub
mov
sub
xchg
divl
or
mov
mov
inc
mov
jp
rcl
cmp
xor
inc
xlat
inc
mov
cmc
inc
fwait
ljmp
xchg
lret
adc
inc
sub
fs
pusha
xor
jmp
jns
hlt
mov
roll
repz
fldenv
mov
dec
stc
pop
pop
mov
cmpsb
xor
cmpsl
cs
add
xor
cmp
pop
pop
push
in
sarb
lret
dec
std
jns
out
pop
pop
aam
in
popa
xor
ret
jne
cmc
jne
fsubs
cmp
mov
and
arpl
nop
fnstcw
jb
cld
sub
add
jnp
adc
clc
mov
jns
fwait
mov
xchg
or
mov
mov
aaa
push
adc
mov
std
stc
sbb
iret
aaa
push
jne
mov
movb
rorb
or
pop
add
pusha
sahf
rorl
popa
lods
out
adc
inc
mov
add
dec
lea
push
or
cld
inc
dec
push
popa
loope
int
fwait
xorl
push
and
xor
adc
iret
imul
adc
lcall
inc
mov
cltd
cwtl
cmp
sti
adc
jno
jns
cs
loope
adc
in
or
popf
popa
ljmp
jmp
rol
in
rcl
in
shrb
jmp
xchg
in
out
rcrb
in
rcrb
shlb
rol
flds
out
arpl
test
inc
adc
nop
ret
mov
inc
les
dec
pop
notb
dec
jecxz
shrl
vcvttpd2dqy
in
in
fnstenv
xor
and
add
xchg
out
ret
push
cmp
xor
out
or
push
imul
in
xor
inc
jne
lret
aam
cld
test
pusha
sub
pusha
add
adc
jns
mov
std
xchg
lock
pop
xor
imul
pop
roll
sbb
std
aaa
adcl
shrb
js
dec
rcrl
insb
mov
cmp
mov
xorb
dec
cs
and
arpl
sbb
rorl
mov
and
sahf
mov
cli
mov
cmc
dec
pop
inc
ror
jno
addr16
sti
xchg
icebp
push
inc
jmp
mov
pusha
xchg
inc
mov
jnp
pop
mov
stc
stc
and
xorl
push
dec
test
and
addb
dec
mov
dec
mov
add
ljmp
std
inc
sbb
repz
movsl
jge
lea
loopne
rcl
jmp
in
cld
jno
jg
stc
aas
clc
sbb
xchg
dec
in
lea
xor
sbb
arpl
stos
cmp
dec
pusha
xor
add
add
inc
dec
testl
dec
testl
ljmp
pop
sub
inc
pop
dec
and
sbb
cwtl
pop
add
mov
jge
cmp
in
and
pop
and
pop
stos
add
sbb
jmp
jne
xor
cmp
out
mov
xchg
cltd
hlt
mov
fnstcw
mov
aam
mov
mov
inc
fwait
xchg
fcomps
xchg
ja
mov
icebp
or
inc
xchg
and
lahf
xchg
fwait
sbb
int
adc
mov
jmp
mov
pop
or
mov
js
in
insl
cmp
pop
and
jge
mov
fs
adcl
xchg
icebp
mov
mov
arpl
test
mov
jne
mov
cmpsb
sti
leave
pop
mov
cmpsb
add
mov
or
mov
int
inc
xchg
in
loope
movsl
mov
loopne
imul
rol
stc
adc
fdivr
mov
fabs
xchg
mov
dec
dec
aas
add
loopne
mov
test
mov
cmpsb
sbb
insb
mov
inc
insl
adc
adc
cmpsl
pusha
mov
xchg
stc
lods
in
mov
adc
insb
jbe
test
cld
in
dec
out
mov
dec
mov
pop
push
adc
xor
je
adc
cwtl
fiaddl
xchg
push
sbb
mov
leave
adc
mov
fs
mov
std
in
mov
out
mov
add
dec
and
mov
fidivrl
mov
mov
mov
lret
insb
mov
clc
ds
mov
mov
or
cltd
loope
jmp
adc
leave
sub
mov
movsl
jb
in
test
cmp
mov
std
fmuls
jno
mov
icebp
sub
ret
inc
aas
ss
fsts
pop
inc
inc
inc
flds
cs
xchg
pop
mov
xchg
add
lods
or
in
adc
mov
shlb
popf
insb
sub
xchg
mov
jae
inc
aas
cmp
mov
sub
shr
std
stc
lret
das
mov
mov
rol
sub
out
mov
pop
lea
mov
lock
xor
push
mov
push
rcrl
idivl
lea
das
sbb
adc
xchg
lret
fists
mov
push
cmp
add
stos
add
lea
xchg
pop
popa
xchg
mov
imul
mov
aad
out
xorl
mov
lods
xchg
mov
stc
popa
inc
xchg
xchg
mov
inc
jno
xchg
mov
mov
shrl
lds
sub
adc
xchg
or
mov
mov
stos
fsts
dec
mov
mov
les
push
pop
add
popf
push
pop
and
adc
push
popa
jae
in
mov
repz
addl
out
rcrl
xlat
loopne
pop
inc
mov
add
dec
xor
jo
out
aad
aam
mov
lea
xchg
jne
mov
mov
dec
stos
jge
divl
or
lea
popa
xchg
adc
test
sbb
xchg
lods
and
xor
xor
xchg
stc
test
das
les
aas
movsl
ja
scas
mov
test
scas
movsl
popf
in
lods
mov
out
push
sub
stos
mov
andl
cmp
adc
sub
mov
jne
nop
dec
mov
imul
or
pop
stc
scas
mov
mov
pop
add
addl
pop
jns
lods
cwtl
xchg
xchg
xchg
stc
cmp
leave
jns
adc
dec
jbe
pop
sub
xchg
pop
sbb
dec
popf
ss
inc
sbb
adc
leave
mov
enter
in
xchg
push
and
xchg
xor
mov
sbb
sub
stc
stc
imul
mov
pusha
cli
add
dec
cmc
scas
inc
sub
pop
mov
fmuls
mov
ljmp
cltd
in
pop
push
loope
mov
loop
out
push
xor
mov
movsl
lods
sbb
add
popa
movsl
cmpsl
loopne
dec
jecxz
nop
loope
push
loope
jge
or
cmc
ljmp
or
loope
dec
out
dec
xlat
jno
mov
testb
dec
mov
rcr
je
dec
dec
push
mov
jmp
mov
jnp
fcmovnu
frstor
loope
jmp
mov
or
inc
or
sbb
jnp
in
dec
adc
jmp
arpl
loop
mov
or
mov
shlb
in
fucompp
xor
popa
dec
mov
cli
jb
repnz
jp
cltd
and
icebp
mov
jl
xorl
add
jmp
loop
vpshaw
nop
sub
xor
mov
popf
call
or
cmpsl
mov
dec
shl
in
loop
or
xlat
dec
adc
cli
mov
and
dec
hlt
xlat
in
bound
mov
test
lock
jecxz
xor
mov
out
mov
lds
fwait
dec
mov
add
push
mov
jnp
lcall
mov
mov
rclb
jo
cmpsl
mov
in
jnp
mov
adc
and
jnp
jg
stos
dec
test
cld
mov
in
inc
leave
fs
scas
int3
popf
jge
mov
push
or
out
mov
roll
pop
int3
vcmppd
sbb
push
jns
mov
inc
arpl
push
orl
in
rolb
xchg
mov
insb
cmp
jnp
or
jecxz
lds
jo
cmp
loopne
das
mov
out
jmp
je
mov
mov
jns
sbb
dec
sbbb
inc
shll
inc
sar
mov
sarb
sahf
jl
adc
roll
and
inc
jmp
and
mov
adc
jno
popf
mov
dec
sbb
les
sbb
int3
gs
push
inc
xorl
cmp
pop
aad
les
fwait
jno
bound
out
and
cmc
pop
outsl
lods
pop
adc
mov
int
mov
daa
push
sbb
nop
mov
fwait
in
imul
imul
mov
sti
imul
imul
lock
dec
and
push
xchg
subl
sahf
push
and
xlat
or
adc
int3
out
fnstcw
mov
fs
adc
push
and
mov
pushf
inc
je
and
in
int3
jmp
mov
mov
mov
movsl
dec
and
cmp
fmulp
shl
in
movsl
cltd
xchg
inc
mov
lods
sub
mov
movsl
jmp
insb
inc
cmc
cmpsb
movsl
sub
cli
push
shlb
imul
ds
mov
lcall
add
mov
mov
fimuls
shl
nop
jle
push
sub
sbb
mov
jns
xor
aad
cmp
adc
lcall
and
xchg
cltd
push
mov
jo
sub
fildl
movsl
flds
filds
jge
add
int
and
inc
jmp
sub
test
dec
mov
int
mov
insl
cs
cmp
mov
dec
nop
lds
je
icebp
out
dec
shll
dec
std
out
test
dec
lahf
xchg
mov
jno
xchg
aas
and
ds
xchg
mov
jno
pusha
aad
fstps
push
sbb
xor
icebp
pop
jno
jp
xchg
in
add
scas
std
arpl
ffreep
mov
xchg
jg
scas
test
sub
sub
je
scas
add
push
shrl
frstor
cmp
push
or
sub
or
cltd
stos
lea
stc
mov
movsb
and
jge
mov
fucomp
pop
ss
xchg
xchg
dec
dec
mov
jecxz
cmp
fisttpll
sbbl
cmpsb
fucom
jecxz
inc
jle
loopew
rorl
or
arpl
out
cmpsb
mov
stos
rorl
dec
cmpsb
je
dec
push
mov
aas
dec
imul
cmp
or
fstl
jnp
push
lds
in
jmp
test
inc
pop
inc
jge
adc
outsl
or
jno
mov
mov
stos
inc
adc
jl
in
push
test
sahf
add
mov
adc
mov
test
ret
pop
pop
xchg
rclb
xchg
pop
int
and
jl
xchg
lret
les
shr
xchg
lcall
push
packsswb
cmpsb
movsl
in
loop
xchg
xchg
pusha
je
movsl
mov
lods
out
test
fwait
pusha
fdivrl
loope
fsubrl
int
push
popa
sub
and
add
dec
and
out
dec
mov
sahf
movl
in
add
xchg
dec
cmpsb
std
xor
test
or
and
sub
outsl
pop
adc
cli
inc
gs
mov
xchg
adc
fisubs
dec
cmpsl
ljmp
call
push
dec
in
pop
adc
out
xor
jne
fxch
lcall
mov
push
sbb
ficoms
lods
std
sbb
dec
aas
pop
mov
incb
adc
popf
cltd
dec
mov
shlb
je
jecxz
in
dec
jns
add
stc
rorb
dec
in
mov
sub
sub
fcmovnb
mov
cmpsb
pop
iret
out
out
lahf
and
lock
inc
mov
xor
mov
dec
mov
sarl
sub
sub
push
lods
lahf
lods
fistl
mov
fs
rorl
mov
push
jmp
sti
pop
cmc
mov
mov
mov
push
add
pop
mov
push
push
mov
mov
fisubl
int
pop
mov
jmp
mov
gs
enter
sbb
test
mov
pop
sbbl
add
cmp
add
shll
in
add
fstpt
or
mov
nop
mov
arpl
lods
push
mov
out
sub
cmp
cmp
jnp
stos
mov
mov
shr
jg
cmp
lds
hlt
nop
popf
xchg
inc
jl
fucomip
in
test
jno
sarl
popf
dec
and
popf
adc
test
jge
cmc
out
icebp
cmp
or
push
rorl
addr16
push
aad
mov
dec
lea
fadd
mov
xchg
shrb
clc
adc
adc
out
imul
scas
jmp
out
in
lahf
jp
in
sub
jp
xchg
xor
adc
les
push
fstpt
jl
std
lds
xor
insl
mov
test
cmp
pop
fisttpl
out
mov
les
jle
mov
mov
rorl
xor
mov
or
jno
mov
mov
decl
mov
fistpl
jne
jmp
mov
mov
loopne
mov
test
mov
mov
lods
mov
mov
dec
out
cmp
push
adc
sub
jecxz
in
fisttpll
rcl
adc
subl
es
int
scas
lea
xchg
scas
mull
shll
faddl
sub
cmp
test
test
fwait
xchg
popf
arpl
cs
dec
lds
add
int
cmp
jl
popa
jl
mov
push
cmp
sub
mov
aad
jle
push
popf
imul
aad
jmp
mov
arpl
mov
aad
cltd
rcll
mov
daa
bound
movsb
jno
mov
aam
out
mov
mov
jns
stos
das
sbb
in
mov
cmp
imul
nop
cmpsb
insl
push
cltd
xor
outsl
push
dec
cmp
int3
cli
mov
dec
jns
imul
out
jecxz
dec
fiaddl
stc
xchg
cmp
repnz
out
sbb
test
push
call
mov
icebp
test
fsubs
test
ljmp
icebp
rorl
in
jno
fucomi
adc
stc
jno
xlat
jae
insl
adc
xchg
mov
fiadds
int3
scas
add
xchg
fists
adc
and
inc
adc
sub
push
movsb
rol
test
xchg
mov
ret
dec
dec
xor
xchg
mov
rolb
lods
mov
lret
popf
xchg
inc
cmp
out
xchg
loope
je
std
in
cltd
lods
lahf
inc
push
jbe
dec
cmp
pop
inc
xchg
lahf
icebp
cmpsl
mov
inc
aad
mov
jno
add
call
outsb
or
mov
mov
aam
sbb
dec
pushf
imul
insb
cmp
les
pop
out
scas
repz
adc
sub
in
xor
dec
xchg
mov
aam
out
imul
jns
and
jmp
inc
xchg
arpl
loope
jo
fcompl
outsb
ja
insb
shl
mov
aad
outsl
push
insb
xchg
aad
push
mov
enter
in
insl
sub
mov
insl
jge
int3
fs
icebp
pop
push
jg
lret
pop
popa
outsb
rcll
cltd
leave
mov
jmp
sub
mov
stos
icebp
xchg
aas
dec
pop
movsb
lods
out
and
repnz
jecxz
cltd
sti
xchg
std
pop
stos
loope
mov
nop
shll
push
dec
or
ds
xchg
movsl
jmp
adc
enter
add
insl
mov
xor
push
les
or
enter
cltd
push
je
fwait
xor
popf
inc
sbb
aam
lock
loopne
mov
cmpsl
jae
jmp
dec
in
popf
inc
jge
in
cltd
mov
mov
push
shl
lret
fmulp
mov
int
fwait
cltd
ljmp
or
out
inc
cltd
xor
icebp
lods
dec
jge
int
lret
arpl
dec
jns
add
test
cmp
jle
dec
addr16
push
inc
mov
adc
mov
test
imul
jnp
jmp
push
shrb
ds
and
lods
and
imul
lods
paddsb
loop
sahf
ficoml
stos
and
sahf
cmovle
adc
in
in
mov
and
jecxz
idiv
ja
and
push
cmp
cmpsl
jnp
in
pop
in
or
xchg
je
and
stc
sbb
jg
mov
mov
sub
loope
lcall
cmp
pop
icebp
add
sub
movsl
popa
jmp
frstor
mov
xor
fisubs
inc
sahf
mov
cld
jl
movsb
mov
enter
test
jnp
andl
pop
loopne
pop
mov
outsb
dec
mov
jae
aam
arpl
adc
cmp
cs
xchg
lds
xchg
cmpsl
xorb
mov
xor
adc
pop
xchg
mov
cwtl
jecxz
lret
xor
cmp
and
mov
les
xchg
shll
mov
mov
fnstcw
mov
cmp
icebp
fisubl
mov
mov
mov
mov
xchg
loope
and
cld
stos
inc
test
cmp
mov
leave
xor
fidivrl
mov
jno
andl
rcrl
push
leave
hlt
or
sub
xchg
arpl
mov
mov
out
add
in
mov
cmp
js
jl
sub
insb
fisttpll
fnsave
sub
mov
sbb
mov
out
xchg
jl
sub
inc
dec
insl
push
mov
xchg
popf
sub
fstpl
jae
mov
sbb
dec
ffreep
mov
cmpsb
add
xchg
jnp
mov
aad
jp
dec
fldenv
lods
jmp
push
hlt
adc
ds
sub
stos
jmpw
fwait
std
rorl
or
lret
xchg
mov
dec
lret
movsb
ljmp
jne
push
or
mov
jo
stc
ret
sbb
shl
ja
gs
xchg
push
and
mov
jne
shr
hlt
push
mov
pop
popf
test
jp
stc
xchg
int
mov
lea
or
inc
movsl
mov
cmpsb
add
cltd
inc
movsl
sub
pop
nop
push
movsb
std
inc
xchg
push
aad
cld
dec
lock
aad
stc
out
add
andl
xchg
addl
dec
inc
sti
fcmovb
cmpb
rcr
mov
das
enter
orl
insb
insb
fnsave
mov
cmc
push
int
sbb
add
rcll
mov
rol
inc
dec
sub
daa
mov
sub
fnstcw
lcall
in
fcomi
fcoms
stc
mov
adc
push
test
stos
aaa
loope
add
xor
xchg
jne
pop
jle
cltd
cli
ud0
mov
sub
mov
test
fwait
cmp
mov
inc
push
push
xor
mov
pop
fcmovnb
orl
add
roll
cmp
sbb
mov
dec
push
sti
pusha
popa
cmpsb
movsb
mov
adcl
pop
mov
jecxz
test
sahf
push
mov
stos
adc
cltd
pop
pop
sbb
mov
fcompl
lods
xor
mov
xchg
shl
sahf
dec
loop
movsl
int3
pop
sbb
ret
mov
adc
ja
aad
lret
mov
js
mov
decl
stos
mov
imul
ss
popa
mov
cltd
lahf
dec
rcrl
ret
shrb
jmp
test
inc
insb
loope
rorb
dec
ds
push
inc
pusha
lds
test
xchg
cmp
jp
in
ja
es
jp
push
mov
xor
push
imul
push
adc
mov
mov
daa
fxtract
test
and
jns
dec
jno
mov
decl
out
mov
repz
inc
cmp
xor
mov
mov
jl
mov
pop
popf
mov
test
jg
pop
jnp
addr16
mov
xchg
xchg
out
mov
xchg
mov
sbbl
je
cmpsl
pop
mov
and
jg
pop
test
insl
fldcw
inc
jae
cmp
mov
mov
aas
gs
out
push
fnstenv
enter
mov
mov
jmp
jno
lock
mov
adc
dec
movsb
rol
mov
sub
mov
jmp
popa
add
xor
jo
sbb
clc
in
jae
jl
xor
lock
jmp
sbb
js
jecxz
push
cli
imulb
fisubrs
sbb
test
sbbl
mov
mov
loop
cmp
jns
fnsave
jmp
dec
jmp
sbb
leave
mov
cmc
icebp
incb
push
fsincos
dec
inc
test
sub
out
lods
sbb
xchg
cmp
jo
pop
jmp
adc
push
add
ffreep
nop
loope
in
mov
sti
movl
lahf
pop
mov
pusha
shrb
test
inc
pusha
movsl
scas
pop
cmp
std
xchg
loop
lds
addr16
out
jecxz
test
out
mov
adc
dec
cwtl
xor
xor
jle
or
repnz
int
ret
je
mov
and
leave
cmp
xor
bound
pushl
fldt
test
mov
mov
ljmp
mov
mov
subb
jbe
cmpsl
lods
pusha
fistpl
mov
jns
repz
mov
fcoms
push
test
es
jno
andb
ja
lcall
sbb
scas
xchg
lahf
pop
mov
sub
sbbb
dec
mov
sub
addl
jns
sub
pop
loopne
stos
push
adc
test
addl
jl
jge
and
add
pop
mov
push
xchg
pop
xchg
push
lds
inc
imul
sbb
enter
mov
std
xchg
or
push
jae
test
cmp
cmp
dec
aas
jne
and
cmp
fs
lret
movsb
popf
xlat
push
add
mov
jo
subl
stos
ficomps
loopne
xchg
push
jno
pop
int
movsb
repz
dec
lahf
mov
inc
stos
jle
lods
sahf
add
xor
or
shrb
pop
movsl
sahf
jne
mov
sahf
rorl
jg
sub
ret
and
inc
mov
aaa
mov
cmp
in
je
jae
fldl
or
lea
mov
jae
in
shrl
jmp
std
decb
sub
mov
iret
mov
mov
lds
jl
mov
repz
mov
sahf
push
pop
pusha
cltd
ja
push
lcall
jg
fildll
and
fwait
dec
dec
shll
enter
dec
dec
xchg
stos
call
mov
std
insl
fwait
std
sahf
push
scas
bound
mov
jne
lods
jl
xchg
xor
push
jge
pop
negl
incl
fists
xlat
imul
dec
dec
inc
fwait
xchg
inc
xchg
inc
xlat
xor
inc
mov
xor
adc
iret
popf
std
les
leave
enter
or
and
lret
shrl
xchg
shr
outsl
in
out
jb
lahf
stos
push
mov
out
imul
test
loope
sub
push
pop
in
xchg
mov
loope
add
sahf
sub
mov
loopne
cmp
stc
fwait
addb
ss
mov
xchg
in
pushf
jmp
push
roll
lods
jne
pushl
inc
enter
cmpb
aad
pop
test
lea
sahf
and
xchg
repz
insl
and
jae
push
rclb
lahf
fstp
add
jg
lods
leave
xchg
test
sbb
jmp
stc
test
and
mov
lods
cmpsb
in
cwtl
stos
inc
pop
repz
movsb
mov
inc
cmp
inc
dec
cmp
mov
sub
dec
inc
lds
and
xchg
jmp
nop
roll
or
jnp
pop
add
xor
xchg
addr16
ret
stos
out
jg
or
mul
pop
cmp
cld
rcrl
jb
adc
loopne
cmp
fidivs
dec
dec
dec
sub
inc
adc
decb
or
mov
mov
mov
jo
scas
stc
sarl
lods
pop
ret
jmp
loopne
cmp
jecxz
inc
fwait
cmc
test
imulb
mov
scas
sti
scas
xor
mov
enter
dec
push
outsl
shrb
lahf
push
xchg
enter
and
jge
mov
insl
jnp
pusha
daa
inc
adc
lods
pusha
loopne
mov
sbb
pop
ds
out
jmp
cmpb
cmpsl
insl
stos
lods
mov
in
out
jmp
lcall
cmp
mov
js
jne
inc
popf
push
scas
and
ja
push
inc
xchg
lahf
les
or
pop
pop
jmp
jns
je
add
sub
rcl
fucomi
hlt
inc
orl
idivl
jne
xchg
sti
test
adc
pop
pop
adc
fisubl
cmp
and
and
leave
dec
add
add
lods
dec
add
fwait
pop
sbb
push
arpl
lds
les
ret
sub
lds
and
pop
mov
mov
je
and
and
xorl
push
or
mov
and
mov
jne
rolb
dec
ja
fwait
inc
aad
sbb
mov
fnstcw
loopne
insb
jmp
cmc
std
out
popa
cmpsl
adc
or
movsb
cmp
jge
pop
cmpsl
std
shlb
jge
js
xlat
mov
mov
pop
xor
movsb
mov
jno
jbe
jle
popf
pop
outsb
arpl
sub
xor
and
les
scas
mov
inc
adc
cld
and
xor
fwait
les
std
dec
jg
mov
and
shl
cmp
and
mov
jmp
lahf
scas
or
enter
repz
pushl
test
stos
aad
push
push
adc
cmpsl
xlat
pop
popf
ret
scas
sti
lods
pop
xlat
dec
jnp
popa
xchg
stos
ret
sbb
jnp
sub
mov
push
insl
out
jno
cltd
imul
mov
sub
push
adc
jnp
fnstsw
jnp
fmulp
int
mov
mov
adc
jle
test
jg
push
xchg
mov
jge
pop
lahf
adc
xchg
les
jne
push
in
pop
mov
push
sbb
in
sahf
insl
adc
scas
mov
xor
cmpsl
pop
shr
or
es
dec
or
mov
mov
sub
jb
push
bound
stos
mov
rcl
push
dec
xlat
jns
fs
je
and
xchg
lcall
inc
jge
test
adc
aad
lods
xor
arpl
jg
jns
mov
loopne
dec
je
mov
mov
mov
add
cmp
lea
subl
adc
andb
cmp
jmp
dec
out
mulb
rorb
lds
enter
loope
ret
inc
dec
and
push
dec
test
jge
lds
sahf
das
cmpsb
sub
pusha
mov
adc
inc
scas
inc
insl
enter
mov
gs
ja
mov
inc
inc
lahf
pop
clc
mov
inc
mov
lahf
imul
sub
insl
fs
and
lahf
push
cltd
inc
lods
and
lods
addl
fnstenv
jmp
sub
testl
sahf
and
enter
mov
mov
inc
jg
inc
jg
jl
and
mov
mov
mov
mov
rcll
outsb
jno
cmpsl
xchg
jl
dec
cmp
and
aaa
inc
push
jg
roll
sub
gs
fwait
aaa
push
fwait
loopne
adc
add
mov
addr16
in
mov
cmp
arpl
pusha
add
and
xchg
popf
imul
xchg
push
mov
lahf
shll
xor
xchg
ret
sbb
jl
cmpsb
pop
mov
es
cmp
test
fwait
pusha
add
pop
dec
mov
inc
andl
testl
movsb
adc
mov
inc
int
cmpsl
lahf
adc
push
fsts
ja
enter
mov
inc
in
jne
mov
loope
cld
mov
sub
imul
jae
loope
jmp
xchg
lcall
lods
push
xor
pop
imul
jnp
ljmp
xchg
jg
add
push
push
push
sub
push
jmp
sbb
jl
mov
add
xchg
push
std
lods
mov
lods
rorl
ret
inc
and
popf
test
mov
sahf
push
xor
movb
or
cmpsl
fiaddl
leave
nop
jmp
test
or
popf
decl
mov
nop
aam
mov
ret
outsl
pusha
fistpll
xchg
xor
xor
lds
shrl
add
std
out
mov
push
adc
int
push
push
pop
in
or
cmpsb
mov
enter
test
xchg
fwait
lahf
aad
out
arpl
adc
aad
inc
add
rolb
jb
cmp
sub
jbe
pop
xchg
inc
adc
add
jge
xchg
xchg
lret
xor
xchg
nop
jb
jmp
daa
add
add
call
aaa
aas
xchg
lods
daa
int
xor
xchg
cmp
test
lcall
xchg
pusha
push
dec
sti
sbbl
mov
jmp
mov
and
les
push
sbbl
mov
ja
add
sbb
daa
xchg
outsl
xchg
leave
test
inc
or
enter
ss
push
and
mov
dec
jl
inc
dec
cltd
push
sub
fs
xor
lcall
xchg
push
fldenv
cmp
sbb
pop
adc
jb
cmp
pop
adc
mov
jecxz
std
stc
hlt
mov
cmc
cmpsl
push
test
xchg
andl
pop
sbb
push
mov
jp
insl
push
xor
mov
adc
cmpl
adc
and
out
scas
mov
pop
in
hlt
or
jle
xor
push
lds
ds
xor
xor
test
push
and
and
cmc
inc
xchg
mov
dec
cmp
aas
add
stos
mov
rorl
stos
mov
js
jne
dec
rol
pop
mov
repnz
inc
arpl
lcall
cmc
inc
insl
dec
jmp
stc
and
xchg
sbb
pop
mov
enter
pop
imul
cmpsl
push
inc
push
enter
fwait
mov
mov
jnp
fcmovb
jae
scas
jge
cmpsl
lret
jle
popf
pop
je
jg
mov
fbld
addb
dec
add
xor
lea
push
roll
jbe
fcmovbe
mov
pusha
pop
fbld
stc
je
ror
cmp
sub
xor
adc
pop
jbe
lods
xchg
mov
or
int
mov
lods
pusha
andb
dec
dec
pop
std
cmp
inc
push
imul
arpl
fwait
cli
fistpll
rcrl
dec
pushf
xchg
arpl
cmp
xor
outsl
ret
add
or
setl
ljmp
stos
add
and
dec
xchg
xchg
mov
add
insl
popa
cmpsl
cltd
addr16
xchg
outsl
out
push
jle
jg
cltd
popf
dec
and
fwait
rolb
adc
shll
rclb
xor
pop
rcr
lcall
push
fisubrl
scas
enter
or
inc
clc
ret
mov
mov
fwait
enter
xchg
mov
and
mov
mov
pushf
dec
adcl
fwait
lods
mov
cs
inc
stos
or
pop
mov
mov
dec
mov
pop
subb
out
cmpsl
dec
out
mov
arpl
and
sub
push
inc
push
fucomp
mov
and
outsl
arpl
jmp
inc
ret
lret
adc
shll
icebp
popa
inc
add
jecxz
roll
ja
in
mov
mov
in
aad
lock
add
adc
shl
inc
push
and
lret
jnp
xor
push
xor
cmp
lahf
mov
add
hlt
enter
jecxz
lods
and
mov
jecxz
out
mov
jae
push
ficoml
loopne
cmp
push
hlt
rcll
in
ja
add
std
cmpsb
sahf
imul
arpl
sbb
add
add
mov
sub
loope
outsb
std
inc
inc
xor
rcr
pop
pop
adc
pop
daa
daa
fimull
jmp
mov
popa
add
lods
lock
xchg
inc
dec
loopne
push
sahf
or
loope
pop
mov
clc
xchg
imul
popf
int
mov
xchg
inc
mov
sub
ja
xchg
pop
in
mov
sahf
nop
inc
mov
divb
push
fsts
or
and
sarl
arpl
pop
or
pop
movsl
or
cwtl
nop
jp
dec
jbe
add
stc
fisttpl
pop
sbb
xor
das
repz
xor
in
or
in
cmp
dec
adc
shlb
lods
xor
orl
les
pop
cmovbe
scas
xchg
sbb
scas
xor
enter
sbb
jle
mov
mov
xor
inc
push
jp
mov
notl
or
mov
inc
jl
and
dec
stos
adcb
xlat
insl
mov
test
cmp
movsl
mov
test
mov
push
or
mov
or
mov
cld
mov
out
mov
ffreep
push
mov
mov
pusha
push
aas
pop
cmp
ret
sub
push
mov
enter
fwait
ds
or
mov
cmp
fimull
mov
xchg
lods
popf
jns
jns
adcl
dec
je
clc
ret
sbb
idivb
inc
ret
int
jg
jp
sub
sub
mov
xor
jbe
push
fwait
mov
inc
popf
inc
lods
jg
fwait
xorb
or
sbb
xchg
fucomp
push
popa
xchg
and
mov
xchg
jmp
sub
xchg
push
dec
out
xchg
pop
gs
xor
and
cwtl
popa
adc
imul
pop
stos
sbb
sbb
push
xchg
jno
sbb
or
push
shll
push
pusha
add
mov
mov
xchg
cmp
repz
xor
int
stos
jg
mov
shrl
cmp
hlt
cmc
cmp
push
pop
ret
or
push
cli
cmp
lds
ret
sbb
push
lds
push
sbb
mov
jno
lods
test
cmp
in
sbbb
sarb
pushl
inc
push
jg
mov
jg
xor
and
insl
test
jnp
aaa
dec
mov
inc
mull
aas
ja
adc
mov
inc
les
shrl
stos
shlb
bound
mov
jb
jle
addr16
aad
sahf
sbb
cmp
sti
sahf
pop
fwait
cmpsl
fisttpll
sti
dec
cmp
stos
pop
test
in
pop
cmp
int
pop
daa
pop
shlb
fldt
jns
pop
cmpsb
inc
daa
cmp
outsl
mov
push
outsl
fisttpll
jno
insb
mov
ja
mov
ficompl
and
ds
sbb
and
dec
fiaddl
fwait
inc
mov
and
mov
cmp
pop
loope
cmpsb
addr16
add
lret
shl
pop
mov
loope
push
ret
outsl
mov
scas
and
dec
pop
ror
pusha
stos
fidivrl
cmc
adc
movsl
sbb
pop
ljmp
ret
jae
jg
dec
xor
test
lock
incl
lds
scas
jae
test
insb
test
fstl
sarb
cmc
fimuls
shrl
pusha
jge
pop
jbe
add
push
aad
hlt
mov
mov
mov
shrl
push
ja
xchg
xchg
fstpl
call
aas
pusha
addb
popa
rcrb
pop
jle
iret
cmp
sub
push
enter
and
sbb
popf
insb
jmp
cmpsb
insb
divl
xor
sub
cli
test
cltd
add
out
xchg
sub
mov
pushf
ret
jmp
xchg
popa
cmpsl
inc
testl
movsb
adc
or
xchg
xorb
js
in
xor
xor
sub
repnz
jo
mov
fcmove
sub
inc
inc
pop
xchg
movsl
push
sbb
xchg
pusha
sbb
lds
jae
idivl
jg
push
out
cmp
pop
sub
test
imul
mov
pop
fwait
sbb
and
cmp
ret
sub
ljmp
aas
push
stos
aaa
insl
stos
lock
imull
out
movsl
mov
and
pop
lahf
mov
mov
stos
movb
fs
jne
xchg
sbb
cmp
jne
outsb
sarl
xchg
mov
ret
xor
mov
mov
or
repnz
pusha
divb
sbb
cmp
mov
lret
inc
insl
push
gs
dec
and
loope
dec
push
out
in
add
test
test
je
mov
lret
sub
jnp
cmp
fwait
stos
imul
cwtl
rcrb
pusha
adc
aaa
popa
js
mov
and
test
mov
sbb
sbb
cmpsl
lret
xchg
loopne
ret
repz
repz
roll
add
pusha
ljmp
ss
out
scas
js
gs
xor
lret
mov
ficompl
mov
int
xlat
outsb
lods
push
loop
mov
mov
dec
pushf
iret
pushf
sahf
fiaddl
add
repz
cmp
xchg
test
jno
mov
dec
xor
pop
xchg
lret
addb
fs
adc
pop
test
cmp
adc
enter
cmpsl
mov
dec
inc
cmpsl
repnz
es
stos
xor
or
mov
adc
ret
jnp
mov
test
out
mov
xor
mov
mull
jae
sbb
nop
jns
mov
ret
arpl
jb
es
fsubr
test
aaa
imull
pop
idivb
mov
mov
fcoms
icebp
mov
push
jge
pop
inc
testl
test
test
pop
add
push
je
mov
cwtl
test
stos
push
movsb
adc
jg
idivl
daa
es
test
add
stos
push
pushf
fistl
sbb
lahf
xor
aad
repz
test
jae
push
stc
pop
sub
fwait
inc
xor
das
idivl
sbb
xchg
jb
pop
ja
ds
add
mov
mov
push
xor
mov
xchg
pop
mov
xor
das
xorb
push
adc
xchg
ja
add
xlat
jge
mov
or
fstpl
xor
outsl
mov
dec
xchg
incl
aas
aaa
loope
push
xchg
cmpb
fwait
sbb
inc
and
xchg
add
adc
sub
cmpsb
decl
insl
push
xor
das
inc
adc
test
mov
push
jne
xchg
sbb
jnp
xor
imul
push
xchg
stc
lods
fiaddl
adc
cmpsb
pop
add
adc
hlt
out
arpl
xchg
xchg
jmp
pop
jp
enter
mov
mov
adc
dec
adc
sub
js
fistpll
popf
ret
jns
rcr
addr16
sub
mov
xor
mov
out
xchg
cmc
sub
push
pop
pop
adc
movsl
cmp
mov
daa
mov
jo
xchg
ljmp
nop
aad
sub
mov
idivb
ja
xor
push
xchg
jle
jle
push
movsl
mov
test
xor
lods
aas
or
scas
fildl
xor
iret
mov
pop
add
js
out
xchg
icebp
inc
dec
jmp
les
out
pushf
std
aaa
inc
sub
test
jg
imul
add
jg
cmp
insl
les
aaa
cmp
mov
lcall
imul
add
xor
test
daa
dec
sbb
fdivs
je
stos
push
dec
adc
adc
cmpsb
push
cmc
iret
inc
mov
inc
pop
cltd
notl
inc
mov
inc
lods
dec
push
xchg
mov
imul
dec
std
push
dec
mov
icebp
dec
sub
adc
and
pusha
popf
jecxz
js
adc
testb
ret
pop
dec
adc
cmp
mov
mov
sbb
sub
in
out
imul
cmpsl
loope
or
lds
mov
cmpsl
or
fwait
shlb
test
rep
push
cmp
and
incl
arpl
call
push
mov
push
dec
pop
mov
hlt
lods
mov
sub
xchg
data16
jnp
push
outsl
mov
sub
loopne
mov
aaa
mov
xchg
hlt
std
icebp
dec
xchg
and
mov
mov
add
inc
test
mov
jae
jns
inc
xchg
enter
sub
mov
clc
mov
mov
or
sbb
sub
pop
int
negl
pop
jbe
and
stos
adc
ds
mov
mov
je
add
push
inc
push
cltd
pop
movsl
movsb
popf
mov
xor
pop
test
adc
adcl
lret
rcrb
sbb
sbb
js
test
or
fwait
jb
xchg
push
xchg
mov
lock
nop
stc
push
mov
in
fsts
jnp
jmp
repz
pop
cmp
dec
mov
sbb
mov
and
lcall
jae
mov
lahf
xchg
pop
sbb
fldcw
or
adc
jb
adc
or
add
xchg
aaa
xchg
clc
ja
mull
xchg
add
xchg
stos
lcall
test
dec
adc
cmp
mov
sbb
and
or
test
fstl
sti
dec
xor
mov
ret
test
mov
xchg
fldenv
xchg
pmuludq
stos
fisttpl
mov
std
mov
pop
mov
mov
or
mov
filds
jo
lods
aad
mov
sti
leave
xchg
test
jo
xchg
xchg
std
xlat
mov
out
imul
mov
addr16
ljmp
lret
sub
mov
jl
fwait
sbb
popf
adc
sbb
cmpsl
repz
sarl
mov
mov
pop
cmpsb
add
rcrb
cmpsl
xor
push
cmp
mov
test
dec
fnstsw
and
data16
push
jne
stos
loopne
fisubl
in
pop
mov
xchg
repz
or
cmp
aad
mov
mov
insl
mov
enter
add
cmc
stos
dec
push
imul
pop
insb
add
inc
mov
insl
push
pop
addl
pop
shlb
push
fbld
xchg
jo
inc
jp
sub
mov
cmp
xor
xor
sub
in
dec
mov
mov
inc
jnp
scas
popf
mov
sbb
sti
xchg
inc
popa
jnp
dec
jg
push
cmp
mov
cwtl
mov
mov
movsb
divb
aaa
lds
aas
cmpsl
lods
les
sahf
pusha
mull
lock
int
jbe
xchg
pop
add
push
xor
mov
xchg
cltd
hlt
ja
jecxz
test
xor
ds
jno
movsl
sub
mov
xor
xchg
jne
js
cmp
int
cmpsb
inc
cmove
lods
ss
jmp
cmpsl
sbbb
jmp
cltd
jle
aad
enter
lods
inc
inc
call
aas
mov
outsl
iret
push
outsl
jecxz
daa
mov
xchg
lcall
inc
inc
sub
and
inc
mov
jae
int
inc
std
sahf
inc
adc
lret
pop
icebp
imul
push
mov
add
xchg
lods
inc
sub
xor
push
sbb
sbb
xchg
std
test
xchg
or
xchg
leave
mov
ds
movb
dec
jae
xchg
adc
notb
int
imul
xchg
cmpsl
sahf
add
pop
aaa
xor
push
dec
fstpt
jp
mull
dec
xlat
ret
movsb
mov
and
push
xchg
es
cltd
push
cltd
jmp
ljmp
ljmp
lds
sub
and
pushf
popa
repz
popf
popf
sbb
mov
pop
fistps
cltd
repz
xchg
lea
cmpsb
js
and
js
jmp
ja
cmp
out
mov
popf
lret
hlt
je
push
std
ja
imul
sbb
mov
clc
cmp
addr16
cmpsb
test
jmp
xor
add
mov
dec
mov
icebp
fwait
jl
subb
cmp
mov
xor
frstpm(287
xor
ret
arpl
testl
mov
pop
pop
fsubs
pushf
and
sbb
and
ret
stos
enter
push
xchg
mov
lods
fdivp
jp
insl
ss
lahf
adc
ret
sbb
mov
repz
enter
xchg
xchg
cmp
sti
cltd
xor
aas
pop
or
inc
jecxz
ja
add
pop
cmp
inc
insl
add
lea
js
mov
dec
out
scas
jns
sub
cmp
inc
ret
and
es
out
popf
ja
scas
mov
pop
pop
lcall
lahf
rcrl
cwtl
push
int
jmp
xor
xchg
movb
inc
outsl
outsl
cmpsl
pop
mov
enter
xchg
inc
xlat
mov
ja
jecxz
hlt
mov
xchg
or
movsb
in
sbb
cmp
dec
outsl
mov
aam
pop
jno
inc
jge
filds
out
pop
jns
pop
push
nop
xchg
jnp
adc
or
mov
loop
xor
fistl
stos
dec
push
pusha
lock
lcall
adc
scas
fstpl
inc
stos
and
cmpsl
dec
sti
ret
ret
jne
dec
cmp
enter
mov
xchg
lods
lods
cmpsb
inc
mov
jae
in
arpl
sbb
imull
shr
testb
mov
dec
ret
addb
lods
mov
sahf
inc
or
mov
pop
dec
jb
mov
sub
enter
cmpsl
pop
addr16
out
icebp
push
jp
sub
test
outsb
iret
xchg
bound
mov
insl
xor
add
imul
jns
hlt
and
insl
mov
popf
push
xor
push
repz
int
inc
pop
dec
fcmovnbe
inc
rorl
xor
outsl
add
movsl
inc
inc
cltd
in
mov
and
mov
repz
push
xchg
js
test
add
xchg
jmp
xchg
cmp
push
imul
push
mov
cmpsb
inc
jge
adc
dec
je
sbb
mov
cmpsl
inc
pop
and
cmc
adc
pop
inc
insl
addb
inc
cmp
sbbb
mov
fcmovbe
pop
dec
xchg
fwait
mov
mov
xor
push
mov
pop
add
mov
scas
sub
mov
add
cmp
xchg
add
popf
push
test
lahf
push
add
popf
inc
cwtl
push
andb
frstor
fcmovne
inc
out
jnp
fimull
fcompl
mov
repz
inc
sarl
xchg
pop
xor
imull
add
es
add
adc
dec
and
movsb
nop
popf
adc
jns
notl
sbb
jae
mov
lds
push
adc
mov
cmp
adc
ds
pop
das
push
add
fistps
pop
daa
ja
mov
lods
aaa
dec
sbb
mov
mov
sbb
adc
inc
das
and
xor
and
ljmp
mov
test
sbb
jbe
stos
push
sbb
sete
rcrl
idiv
mov
and
xor
insl
push
dec
fwait
inc
ret
in
mov
notl
cmp
fistl
inc
adc
cmp
and
lcall
movl
sbb
adcb
mov
or
dec
push
shlb
lcall
pop
and
test
mov
negl
mov
sub
stc
cwtl
lods
ss
lret
sub
or
sbb
daa
cli
in
ja
mov
shll
pop
sbb
fiaddl
enter
rclb
sahf
aaa
cmpl
xchg
imul
push
mov
std
cmp
out
jecxz
les
xchg
mov
sbb
enter
push
mov
cmp
inc
pop
scas
inc
and
mul
repnz
xchg
test
fldl
shrb
pusha
inc
enter
push
push
fwait
sbb
lods
outsl
pop
and
popf
arpl
push
adc
jle
and
jae
in
insl
xchg
and
or
test
fistl
mov
push
xor
lcall
inc
sub
pop
clc
ret
push
roll
lds
mov
fstps
xchg
mov
inc
mov
xchg
rclb
mov
and
jp
add
rcrl
push
clc
pop
jge
mov
inc
jle
cltd
imul
loope
xchg
test
xchg
jae
cmc
fnstsw
push
inc
out
pop
arpl
dec
mov
out
sahf
ret
lahf
dec
iret
mov
lods
fimull
mov
std
dec
mov
cli
mov
stos
xchg
movb
lods
rolb
addr16
pop
gs
inc
inc
push
outsl
fcmovb
mov
mov
aam
push
push
clc
ret
pop
jle
jmp
jnp,pn
jnp
mov
js
cmp
pushf
stos
xchg
push
adc
das
mov
outsl
xchg
push
xor
ja
mov
inc
pop
gs
mov
push
cmp
cmp
stos
xor
or
sbb
pop
enter
test
js
inc
imul
xchg
sub
fnstenv
jnp
scas
cmpsl
icebp
fstl
xchg
sbb
xchg
xor
pop
push
add
jge
cmc
push
aas
dec
adc
xor
gs
enter
cmp
mov
cmc
gs
dec
mov
ret
xchg
stos
lret
cmpsl
decb
mov
data16
clc
adc
xchg
mov
sbb
icebp
ret
dec
out
jg
fldenv
ljmp
adc
lds
mov
cmc
jae
dec
lcall
movsb
push
popa
adc
sub
add
add
insl
and
xor
sbb
pop
mov
jae
xchg
ret
add
mov
popa
insl
xchg
out
jl
push
dec
popa
subl
sub
jnp
sub
sub
xor
push
sbb
nop
nop
fwait
cmc
je
inc
shr
and
jmp
sbb
jne
cmpsl
mov
sub
inc
fimull
lods
push
jb
pop
out
or
mov
inc
test
scas
lret
jmp
cmpsl
data16
sahf
int
push
sub
mov
cs
mov
mov
and
adc
inc
imul
pop
mov
cmpsl
outsb
adc
fldz
ja
pop
jmp
test
ret
adc
sub
fistpl
outsb
movsl
pop
mov
pushf
in
mov
mov
mov
shll
or
test
sbb
fwait
repnz
xor
and
stc
gs
pusha
pop
pushl
test
cmp
mov
sub
push
pushf
test
cmpsl
pop
xchg
xchg
pop
mov
add
mov
sbb
idivb
adc
das
stc
sbb
fwait
icebp
cmp
mov
sbb
inc
daa
scas
adc
fcmovb
sbb
sarb
push
mov
inc
add
daa
test
roll
pusha
divb
outsl
call
inc
inc
sub
mov
cwtl
mov
clc
lods
aaa
cmp
xchg
and
xorb
aaa
mov
stos
inc
xchg
idivl
inc
fidivrl
xchg
out
movsb
dec
in
sbb
jb
out
insl
insb
jecxz
xor
data16
nop
adc
aas
sbb
fstps
jnp
pop
push
inc
mov
push
cld
push
pop
jne
sahf
sbb
push
add
sbb
sub
mov
push
mov
dec
iret
stos
ds
and
jb
fistpll
mov
daa
cltd
mov
in
mov
cmp
push
inc
test
out
or
seta
ret
push
push
mov
mov
out
push
ret
in
imulb
cmp
test
jnp
enter
mov
mov
xchg
xor
xchg
jnp
mov
xchg
cmc
enter
cmpsb
xchg
mov
and
adc
or
sbb
les
pop
stos
inc
cmpsb
inc
insl
inc
les
sbb
and
pop
ret
loope
push
lds
xchg
fstpl
ds
rolb
popf
push
mov
lcall
jg
xor
cmpsb
add
pop
cmp
sub
ret
mov
and
inc
cmpl
outsl
add
or
xchg
pop
sbb
add
sbb
push
outsl
push
insl
add
push
enter
and
xlat
hlt
cwtl
lahf
pop
pop
mov
mov
mov
sbb
clc
pop
adc
imul
mov
and
jns
idivb
xchg
cmpsb
or
cmp
std
pop
xchg
stos
inc
test
mov
sbb
cmp
je
xchg
mov
xchg
jnp
sub
cmp
adc
shll
jne
pushf
and
lret
xchg
or
lds
push
push
sub
and
and
stc
in
pop
jne
mov
xchg
clc
mov
pop
sub
mov
add
insl
pop
inc
mov
jl
inc
fwait
jmp
lea
mov
js
fs
sbb
mov
inc
xchg
imul
mov
popl
inc
xor
cmp
cmp
xchg
in
xor
ret
icebp
ficoms
aas
pop
rcll
cmp
cmp
insb
test
hlt
push
sbb
outsb
idivl
jmp
out
mov
mov
js
dec
dec
stos
pop
adc
sarl
adc
xchg
xchg
jl
mov
movsb
fstpl
adc
mov
scas
mov
xchg
ja
mov
dec
xor
push
sub
push
mov
inc
ret
push
ror
adc
mov
and
adc
je
lcall
inc
xor
mov
ss
inc
sbb
ret
cmc
push
adc
xchg
xchg
shlb
cwtl
pop
mov
or
insl
test
stos
divl
roll
ss
jl
cmp
pop
xlat
or
xchg
xor
sbb
cmpl
fwait
sbb
mov
and
dec
sahf
arpl
enter
and
sarb
out
sub
dec
sbb
jae
sbb
clc
cli
lret
insl
testl
xor
fwait
icebp
or
push
jg
mov
flds
jae
test
ret
add
fs
push
js
xchg
neg
mov
pop
push
leave
sbb
and
inc
xor
mov
dec
sub
mov
mov
push
dec
mov
jb
xchg
icebp
pop
push
insb
dec
ja
sub
cmp
mov
pop
jg
sub
out
fs
or
xchg
push
push
pop
xchg
or
dec
gs
aas
ret
xchg
dec
or
mov
and
cmpsl
arpl
insl
outsb
xlat
pop
stos
andl
cmp
inc
nop
fdivp
jp
jnp
cmp
shrl
inc
out
psubb
sahf
push
xor
add
fs
je
and
add
xchg
js
mov
sbb
push
jmp
xchg
push
es
pop
mov
popf
popf
dec
test
aad
dec
xor
popf
inc
mov
es
pop
xchg
cwtl
out
popf
and
pusha
pop
dec
rcl
pop
bound
lods
jno
xor
xor
in
rorb
cmp
mov
and
jg
jne
lods
and
push
jge,pn
in
stos
std
cmc
mov
push
add
cmc
fucomi
jecxz
js
das
and
cmpsb
sub
push
ljmp
inc
lcall
push
aas
cmpsl
rcrl
scas
cmp
inc
jecxz
lods
loop
lods
adc
loop
mov
fdivrs
mov
pop
sub
jb
pop
pushf
shl
cmp
xor
pusha
pop
loope
push
dec
sarl
fldcw
mov
outsb
mov
sbb
cld
adc
inc
lds
repnz
and
inc
xor
mov
and
mov
pop
xor
pop
rcll
push
fwait
sarb
or
mov
and
xor
nop
lods
cld
std
pop
xchg
cmpsl
sub
dec
mov
imul
test
and
mov
imul
sub
mov
in
in
push
in
cmp
push
xor
in
test
cmpb
push
mov
mov
mov
mov
lods
inc
xchg
pop
les
fcom
pop
fldenv
sbb
out
and
js
out
shll
sbb
test
addl
ret
lds
push
cld
ret
cwtl
sbb
mov
mov
and
jmp
jle
cmp
in
orl
cmp
cmpsl
mov
scas
mov
or
out
mov
mov
xchg
xchg
icebp
and
xor
pop
lret
ficoml
fstpt
adc
xchg
mov
shll
mov
pop
jle
jmpw
sub
mov
fisttpl
adc
loopne
stos
adc
push
mov
or
add
mov
ret
in
call
sahf
lahf
jb
jbe
or
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
xor
or
inc
mov
fadd
mov
pop
out
mov
cmpsl
scas
addr16
xchg
mov
jns
mov
sub
or
bound
sahf
mov
jle
outsb
repz
cli
mov
mov
mov
dec
ds
mov
push
mov
push
push
push
cmp
pop
sbb
mov
sub
fstpl
mov
addr16
jg
insb
cmc
inc
cmc
inc
cmc
pop
cmc
pop
cmc
xor
xor
cmc
shlb
pop
cmp
stos
push
push
push
or
fcompl
and
inc
daa
aaa
test
dec
rclb
jne
pop
add
mov
mov
mov
mov
rorb
mov
dec
movsb
dec
test
mov
dec
cwtl
dec
lods
dec
nop
dec
test
dec
pushf
dec
orb
js
or
jo
fs
push
dec
push
dec
pop
dec
insb
dec
push
dec
inc
dec
dec
in
pop
jmp
mov
cmpsl
pop
push
mov
mov
cmpsb
imul
and
call
ret
lret
bound
inc
push
es
mov
fisubrs
sbb
clc
into
pop
adc
jns
add
or
mov
out
mov
mov
mov
mov
loope
fstpl
dec
mov
sub
add
mov
out
popf
mov
jae
jne
ja
ja
ja
ja
ja
mov
jns
jge
inc
lds
popa
subb
mov
fwait
mov
cmpl
arpl
inc
mov
mov
sub
insl
sbb
sbb
fistpl
jecxz
fimuls
mov
mov
xlat
imul
and
cmp
add
add
and
cmp
mov
mov
dec
inc
loope
sti
jnp
inc
pop
fisubl
insb
mov
in
xchg
icebp
inc
inc
or
lea
cmp
sub
mov
out
aad
mov
mov
popf
pop
jno
popa
jp,pt
mov
fadds
push
jnp
ja
ja
ja
ja
ja
ja
ja
movsb
add
mov
cmpsl
cli
addr16
cmp
cli
ret
mov
test
loope
fldl2e
ret
loop
frstor
inc
dec
and
xchg
add
add
add
mov
outsl
add
pop
add
add
add
cmp
adc
pop
dec
ret
faddl
repnz
fistpl
xor
lret
push
and
daa
push
mov
fisubs
fdivrs
jge
push
icebp
jne
insl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
sub
fwait
lea
stc
jae
jne
ja
ja
ja
ja
mov
mov
cmc
mov
idivl
cmc
test
icebp
test
cltd
cmc
popf
cmc
jno
jne
or
or
cmc
jns
push
cmc
push
clc
jmp
cmc
inc
cmc
pop
cmc
pop
cmc
xor
xor
cmc
and
and
mov
push
icebp
push
cmc
repnz
lea
outsb
in
stc
into
std
shrl
aad
jmp
push
fstps
fstpl
mov
mov
dec
push
dec
push
mov
push
xchg
push
xchg
push
test
push
test
cltd
push
popf
push
jno
jne
or
or
push
jns
jge
push
push
push
push
imul
inc
push
pop
push
pop
push
xor
xor
filds
sub
mov
cmpsl
pop
addr16
cmp
cli
add
mov
jle
outsb
push
pop
push
pop
ds
cs
push
sub
adc
das
push
repnz
negl
mov
xlat
jno
jae
jne
mov
out
mov
cmpsl
cld
sarl
ljmp
adc
dec
hlt
movsl
hlt
mov
hlt
mov
jb
or
insl
hlt
cmp
sub
add
test
ret
popf
fmull
fnsave
mov
cmc
or
ja
ja
ja
test
daa
dec
insl
dec
inc
dec
inc
dec
pop
dec
pop
dec
xor
dec
leave
dec
int
and
dec
cmp
dec
adc
dec
sub
dec
add
dec
sbb
dec
icebp
cltd
mov
lea
stc
mov
aad
jmp
lds
lds
sbb
notb
jns
popf
out
lahf
test
xchg
jae
jne
ja
ja
lock
in
cmpsl
test
mov
lret
cmp
aas
and
xor
test
andl
dec
pop
dec
mul
mov
stc
cmpsl
loopne
ljmp
dec
cmc
mov
cmc
xchg
pop
test
ja
ja
ja
aad
fisttpl
imul
push
xlat
int
sub
cmp
repz
mov
in
loopne
fcomps
into
enter
dec
push
mov
push
scas
push
test
fwait
push
jb
lret
ret
lret
sub
add
lahf
hlt
cmp
ja
jo
push
insb
out
inc
fsubr
das
pushl
and
in
mov
cmpsl
sub
into
shll
mov
sub
imul
dec
jmp
nop
outsb
push
xchg
cmp
loope
in
cs
jle
outsb
mov
ds
sub
inc
push
adc
add
add
add
sub
fdivrp
and
cmp
adc
sub
push
mov
mov
mov
data16
sahf
mov
jae
add
push
icebp
imul
cmc
ds
adc
das
push
inc
ja
aad
sarb
fcoms
push
sbb
pop
push
loop
ret
or
inc
mov
aad
jmp
sub
add
addb
mov
dec
push
push
push
push
mov
test
cmp
and
dec
aaa
or
or
hlt
jns
jge
push
hlt
push
hlt
imul
inc
hlt
pop
hlt
pop
hlt
xor
xor
hlt
and
and
hlt
adc
adc
fnsave
sbb
inc
shll
aad
jmp
add
add
add
add
add
mov
mov
push
test
mov
popa
add
jns
jge
xor
popf
xor
jne
push
fsubrs
jno
mov
pop
dec
fsubs
mov
enter
xchg
push
scas
sbb
push
push
insb
push
inc
push
pop
sbb
cmp
ja
ja
ja
ja
ja
ja
ja
aad
mov
pop
rcr
in
jnp
iret
das
mov
ja
cwtl
div
mov
mov
mov
in
aad
dec
jns
xchg
jle
cmpsl
or
mov
jle
outsb
movsb
pop
xor
or
lea
cmp
adc
sub
add
sbb
hlt
in
hlt
shl
hlt
fxtract
lods
jno
hlt
dec
hlt
dec
hlt
mov
hlt
mov
hlt
test
in
sbb
cmc
jne
or
or
ja
cmpsb
jge
push
cmp
insl
cmp
inc
insl
inc
pop
ds
xor
and
and
hlt
adc
xlat
sub
sub
jmp
sbb
cltd
mov
out
loope
insl
ret
xlat
std
push
ljmp
inc
add
add
sub
push
mov
test
add
push
adc
fucomp
jnp
push
cs
push
cmp
xor
cmp
add
aad
push
or
test
in
shrb
mov
mov
in
xchg
push
push
jnp
mov
mov
mov
sub
mov
jnp
movsb
jae
sub
mov
hlt
test
lahf
mov
dec
jo
dec
jge
push
dec
iret
dec
and
lock
test
and
ds
imul
sub
sbb
jge
dec
ljmp
inc
or
pop
xchg
dec
ja
ja
ja
xchg
int
mov
mov
mov
in
jecxz
pop
mov
xlat
add
adc
lahf
rorb
or
pop
cmc
ss
iret
jg
lock
out
nop
sub
xlat
addr16
push
cltd
imul
mov
sbb
icebp
aad
pop
cli
fcom
in
push
ljmp
mov
mov
test
lahf
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
addb
mov
mov
jle
outsb
cmpsl
pop
stos
lret
push
movsb
xchg
das
hlt
popf
mov
mov
push
das
loop
mov
in
sbbb
int3
fldenv
sub
fldl
xchg
filds
loope
lret
pop
cmp
mov
outsl
or
inc
cmpsl
clc
push
loopne
xlat
jle
outsb
ficompl
into
cltd
ds
inc
mov
xchg
mov
mov
lds
out
sbb
pop
loope
in
sti
std
mov
inc
add
adc
jg
addr16
ja
ja
ja
ja
ja
ja
xchg
xchg
cli
xchg
push
cmp
lret
push
dec
pop
int
dec
leave
ror
mov
mov
ljmp
jl
pop
and
cltd
xchg
mov
cmp
fldenv
fistpl
sub
fucomp
inc
or
or
jge
std
mov
jae
jne
ja
ja
ja
ja
ja
aad
fbld
sub
icebp
out
mov
cmpsl
dec
addr16
mov
lea
pop
pushf
mov
jge
push
inc
cmpsb
jge
insl
jnp
jns
mov
sub
les
enter
jae
sbb
bound
mov
dec
pop
cmc
mov
sbb
cmc
outsl
cmc
inc
jg
sti
xor
mov
fcom
fcom
push
inc
mov
es
dec
movsl
fwait
hlt
jb
js
push
outsl
push
pop
push
add
sbb
mov
aas
jp
movsb
movsl
ret
add
ja
popa
adc
sub
adc
sub
call
lahf
mov
jne
sub
xor
in
loop
xchg
cltd
inc
dec
lds
repz
mov
ljmp
mov
inc
ret
pushf
add
addr16
pop
and
stos
bound
jg
push
xor
cmp
jnp
cmp
fidivrl
es
fwait
add
add
adc
jle
adc
sub
adc
ja
aad
rcl
rcr
enter
outsl
dec
sub
out
cltd
in
xlat
mov
and
cmp
adc
sub
lea
mov
in
xchg
or
jg
ljmp
sbb
xor
mov
pop
rcr
out
push
fcmovbe
mov
mov
or
jae
cltd
or
ret
pop
imul
add
cmp
iret
adc
jle
push
push
mov
call
out
dec
mov
cmpsb
ret
addr16
mov
out
mov
jnp
mov
push
push
sbb
dec
sub
mov
in
mov
jge
movsl
out
stc
xchg
out
xchg
es
mov
arpl
movsl
ds
xchg
and
mov
sub
hlt
sbb
sbb
rol
fistpll
jae
push
and
into
sub
mov
mov
mov
mov
mov
sbb
aad
xchg
or
jns
lret
cs
push
and
lods
sbb
and
or
into
lock
jnp
scas
gs
or
jno
ja
ja
xchg
pop
cli
daa
xor
cli
cmp
cmp
cmp
es
add
hlt
icebp
testb
and
fnsave
inc
sti
pop
imul
xchg
js
js
es
ret
add
lods
pop
jg
insb
prefetch
or
jmp
jge
push
push
push
jle
or
inc
test
pop
hlt
pop
ret
cmc
in
dec
inc
aaa
inc
bound
insb
out
out
and
cmp
adc
stos
add
mov
cmp
sbb
push
add
sub
fcoml
dec
cmp
lahf
andl
jo
sub
adc
cmpsb
enter
or
imul
jne
or
or
daa
in
ficompl
out
shrb
out
xchg
jbe
xchg
test
jge
in
adc
cmp
jnp
push
inc
mov
lea
stc
jae
jne
ja
cmpsb
jmp
lds
fldenv
cmp
dec
dec
cmpsl
movsl
hlt
mov
hlt
test
hlt
test
cltd
frstor
jno
jne
in
ljmp
jns
jge
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jnp
pop
sub
xchg
add
imul
sub
mov
cwtl
jmp
fsts
mov
ret
add
imul
cltd
adc
or
popa
hlt
gs
lahf
jge
push
pop
dec
ja
mov
lods
mov
xor
hlt
and
adc
adc
cmc
add
ja
cwtl
cmc
push
mov
loope
push
stc
xlat
std
dec
pusha
adc
xchg
ret
adc
push
aas
data16
sbb
mov
int3
jecxz
mov
subb
adc
adc
add
mov
ret
in
stc
jo
bound
and
add
sub
cmc
fsts
push
adc
mov
and
cmp
ja
ja
ja
ja
cmpsl
test
sub
jne
cmp
pop
aas
adc
xchg
mov
cld
cmp
mov
lea
jae
popa
out
cmp
pop
jecxz
mov
pushf
xchg
fistl
addr16
jge
ret
in
jge
lds
jg
test
mov
jl
pushf
int
jg
in
sub
jge
cltd
add
inc
xchg
int
and
and
ficoml
pop
cmp
pop
xchg
ljmp
lea
fsub
push
stc
xlat
shrl
ljmp
lds
jnp
sub
mov
fs
loop
mov
add
add
add
add
or
or
sub
push
loopne
int
shll
rcrl
in
jae
xchg
fucompp
movsl
out
test
or
xor
jge
pusha
aad
add
adc
adc
imul
shr
icebp
push
cmc
push
aad
sarl
aad
jmp
movsl
addr16
lods
int3
repz
hlt
popf
mov
dec
jne
or
or
jns
jge
test
dec
imul
and
cmp
sub
sub
or
icebp
decl
fsub
push
stc
xlat
std
jle
sub
cmc
shl
cmc
fldcw
jge
add
dec
add
add
dec
xchg
dec
xchg
dec
test
test
push
push
push
push
push
push
push
push
push
push
push
jle
imul
xor
dec
and
and
adc
add
add
cmc
cmc
xor
stc
jmp
add
shrl
aad
jmp
push
lds
mov
ja
dec
ja
ja
mov
push
xchg
sbb
jg
into
cmp
mov
jle
sbb
cmp
cmc
sub
sub
ljmp
cmc
xor
fmull
imul
in
cmc
shl
pop
out
lea
add
dec
dec
ret
sbb
hlt
xchg
mov
sbb
test
cltd
cmp
cmp
cmp
cmp
jge
jae
push
xchg
imul
push
pop
sbb
jno
leave
push
push
push
push
push
push
push
push
push
push
push
jnp
sub
sbb
hlt
mov
mov
xchg
bound
bound
outsl
int
xor
lea
shl
cld
sarb
dec
cli
mov
es
adc
shrl
pusha
leave
sub
sub
leave
aas
lds
pop
inc
shlb
dec
inc
mov
int3
fistps
and
cs
sbb
jo
lret
int3
shll
fs
jecxz
scas
pusha
stos
inc
fstpt
jmp
sub
mov
lcall
daa
test
cmp
mov
cmpsl
imul
mov
jbe
cmpsl
addr16
aas
es
aas
push
repz
mov
es
and
cmp
jno
pop
fisubl
push
add
cmpl
enter
subl
out
dec
or
dec
pop
xchg
pop
inc
jle
pop
xchg
lcall
arpl
and
sub
into
xcrypt-ctr
cmpsl
pop
stos
divl
xchg
jae
lret
outsl
inc
in
xor
xchg
cli
bound
mov
dec
or
outsl
int3
lahf
lret
hlt
fidivs
jmp
addr16
into
out
mov
lret
pop
cmp
push
cmp
jno
popf
jbe
or
bound
push
dec
sbb
pop
ja
ja
cmpsl
adc
in
sbb
jne
loop
dec
sti
ret
movl
loop
xor
aaa
add
add
sub
cmc
sbb
stc
dec
mov
add
lods
psubd
pushf
fcmovb
popf
ret
test
xchg
xchg
dec
mov
sub
ds
add
faddp
pop
xchg
lahf
dec
xchg
mov
lds
push
or
fs
push
lods
dec
inc
pop
mov
lret
mov
push
fldt
jg
sbb
fld
loop
out
jl
out
add
pushf
jp
jmp
cmc
movsb
cmc
mov
mov
mov
rclb
cmpb
push
push
arpl
jl
push
push
outsl
hlt
dec
hlt
pop
fimuls
mov
push
push
mov
add
ja
fwait
jnp
mov
enter
sub
mov
movsl
add
lods
pop
sbb
jg
push
pop
pushw
jnp
push
cmp
mov
xor
adc
sub
or
fidivs
xchg
pop
stos
pop
xor
sarl
cmp
lret
mov
dec
aaa
jns
ja
ja
stos
test
notl
cltd
hlt
jb
ja
sbb
jnp
aaa
outsl
jbe
xor
adc
ja,pn
xchg
sbb
imul
sti
pop
dec
mov
sub
lods
mov
pop
push
inc
imul
lahf
sahf
xchg
jae
lods
or
jp
cmp
mov
es
jno
add
add
add
add
push
add
add
mov
ret
mov
dec
ds
addr16
add
cli
lds
and
sub
add
scas
push
aaa
xchg
sbbb
and
pop
sub
cmc
repz
mov
sti
movsb
inc
lahf
mov
out
push
sub
mov
xor
stc
push
inc
mov
mov
adc
or
pop
sahf
loope
mov
sbbl
push
push
data16
jnp
push
lret
loope
mov
faddp
adc
popf
test
add
jne
mov
test
je
pop
push
sbb
dec
inc
hlt
lret
and
add
pop
mov
out
movsb
fisubrl
dec
mov
xchg
dec
push
andb
pop
adc
cmc
cmp
sbb
cs
sbb
add
and
ret
into
fwait
in
lret
movb
hlt
lcall
hlt
jle
fistl
ds
push
cmc
div
pop
mov
add
jle
sbb
fstps
pop
mov
in
sub
cmpsb
mov
icebp
or
test
int
lret
jl
out
sub
es
mov
sbb
xchg
outsl
xchg
adc
js
pop
outsb
pop
pop
rorl
leave
rcrb
sbb
mov
leave
popa
jmp
orl
fcompl
adc
gs
sub
jmp
je
or
xor
ljmp
jg
ljmp
cmp
cmp
stos
rorl
and
data16
rcl
aaa
or
fcmovnu
pop
sub
add
out
mov
cmpsl
insb
xor
adc
mov
lret
xor
pop
fidivrl
push
int
aaa
adc
cmp
and
adc
sub
mov
jnp
and
cltd
gs
mov
popa
or
notl
dec
xor
je
loopne
mov
mov
jns
or
int3
mov
cmp
or
iret
add
fdivrl
cmpsl
jne
sub
clc
aas
stc
and
inc
xchg
sub
sbb
inc
aad
xor
sti
aad
xchg
sub
adc
loop
jb
jmp
add
dec
mov
cmc
repz
pop
xchg
and
cmp
popf
pop
popaw
cld
mov
bnd
mov
call
jmp
cli
ret
fisubl
cmpsb
cmp
movsl
in
mov
dec
fisubl
cmp
push
cmp
std
ja
ficoml
pop
pop
out
add
aad
and
fchs
aaa
std
fmuls
jle
into
pop
repnz
jo
cmc
insl
xchg
stos
ret
test
iret
cmp
adc
in
sbb
aas
jle
imul
sbb
mov
out
loopne
jnp
pop
sti
add
adc
call
jne
inc
int
inc
imul
xchg
pop
lea
addb
push
mov
cmc
xchg
dec
out
cltd
andb
sbb
shlb
test
lahf
lret
bswap
test
push
mov
jge
pushl
into
jne
push
adc
sub
push
ljmp
call
dec
ret
or
xor
xchg
dec
ja
mov
xchg
pop
ja
aad
mov
jnp
pop
mov
push
rcr
sub
mov
bound
mov
lods
push
in
jmp
shll
pop
push
fcomps
imul
add
and
sbb
add
xchg
aad
push
mov
dec
mov
jne
jno
int
dec
pop
mov
into
ret
mov
cwtl
or
and
aad
outsl
push
subl
push
mov
push
sbb
lds
and
cmpsl
ficomps
fistl
cmpsb
add
sub
mov
mov
insl
lahf
lds
xchg
mov
out
fs
dec
outsb
cmp
outsl
sti
ds
cmpsb
ret
arpl
jne
cmpsl
por
and
repnz
cmc
pop
ficompl
mov
mov
into
push
cmp
mov
pop
pop
fdivrs
imul
push
ds
sbb
pop
jg
loop
mov
ret
aam
jmp
ds
mov
hlt
xor
nopl
insb
aas
lahf
ljmp
jbe
dec
mov
shr
push
push
push
sbbl
push
aad
pop
xchg
fcoms
inc
dec
in
and
jle
dec
loop
loope
fld
cmp
add
mov
mov
or
lret
int
int
movsb
mov
icebp
ja
add
imull
xchg
add
ljmp
out
iret
fs
pop
loopne
cmp
dec
inc
insl
sub
add
pop
hlt
out
sub
lds
cltd
shll
in
cmp
xor
out
fldcw
lcall
out
out
mov
adc
nop
cmp
and
inc
cmpsb
out
vpcomw
cmpsl
shrb
cmp
inc
sub
pop
xlat
cli
bound
ret
aaa
xorb
adc
out
mov
cmpsb
push
insl
pop
fnsave
loop
aas
bound
imul
std
addr16
xchg
pusha
popa
int
pop
arpl
cmpl
sbb
cmc
push
shll
shr
call
addr16
jne
jns
cmp
jns
lds
sub
jns
addr16
xchg
sbb
mov
js
add
pop
ret
fiaddl
mov
jmp
shll
or
outsl
je
mov
icebp
cmpsb
pop
lret
xchg
dec
icebp
add
cmp
xchg
cmp
subl
cwtl
or
rcrb
lret
sub
icebp
push
add
mov
sbb
jno
cmpsb
sub
sub
add
push
cmpsb
arpl
push
jg
ljmp
ja
mov
dec
loop
mov
sub
sahf
dec
jae
or
test
jg
out
inc
cmp
aaa
push
dec
daa
sbb
mov
or
addr16
dec
mov
dec
jnp
mov
imul
arpl
xchg
pop
stos
xor
jmp
int3
sbb
in
xchg
cmc
jae
jo
in
in
mov
adc
ret
mov
ljmp
jno
sti
popf
ror
pop
out
fistpll
jnp
adc
and
dec
bound
clc
mov
mov
sarb
cmpsl
ss
in
test
jno
add
mov
xchg
leave
stos
xchg
out
and
out
xor
out
inc
movsb
sub
pop
mov
and
lods
test
inc
nop
xchg
movsb
push
lret
clc
or
fldl
push
cltd
dec
ret
and
xor
movsb
adc
adc
mov
add
jge
push
jnp
lahf
jns
inc
stos
addr16
movsb
push
gs
cltd
and
pop
fwait
sub
negl
lahf
sub
jno
loop
mov
ret
mov
nop
xor
lret
jae
cli
andl
xchg
iret
cmpsb
pop
sub
cmc
inc
push
lds
add
out
mov
cmpsl
out
data16
add
sbb
orl
into
push
sub
adc
mov
xor
orl
fsubrs
cli
mov
test
xchg
and
icebp
lods
mov
jb
in
add
sub
push
aaa
fsubs
push
push
push
sub
cld
adc
fstps
xchg
inc
adc
sub
xchg
adc
out
loope
insl
incb
cmc
mov
xor
mov
in
mov
cmp
ret
mov
mov
sbb
imul
xor
stos
repnz
xor
dec
sub
sti
lock
ljmp
frstor
cmp
fwait
xor
xor
pop
insb
into
inc
cmp
and
div
mov
call
or
cmc
negb
jns
out
aam
ja
lret
addr16
xchg
mov
or
dec
andb
pop
push
dec
insb
push
push
into
fnstcw
dec
lea
sub
add
enter
dec
adc
mov
and
rcll
and
cmp
xchg
jecxz
sbb
mov
outsl
sub
mov
roll
mov
sub
stc
mov
ror
int3
inc
cltd
popf
sbb
loop
cmp
shll
jmp
sub
inc
xchg
aad
dec
jb
inc
ret
ja
lahf
add
dec
aam
xchg
or
iret
xorb
xlat
iret
xlat
push
push
rolb
xor
stos
enter
xlat
shrl
fildll
push
push
jnp
pop
pop
lcall
inc
sub
dec
das
dec
or
lock
mov
sbb
mov
mov
add
jo
outsl
xor
xor
lods
inc
repz
daa
mov
rcrl
adcl
adc
xchg
jle
frstor
xchg
aas
mov
fisttpll
add
jnp
rolb
jecxz
jne
add
lahf
int3
jno
icebp
xlat
rcrb
fildll
jg
dec
mov
jmp
scas
int3
or
sahf
orb
lret
cmpsb
add
and
shl
sbb
xchg
lahf
jle
imul
ja
movsb
pop
dec
in
stc
pop
jae
and
leave
push
mov
and
aad
shlb
xchg
rcr
xchg
jae
adc
dec
mov
jnp
into
mov
outsb
xchg
xchg
ret
xchg
outsl
and
in
and
rcrl
inc
dec
push
clc
and
sti
jg
sti
out
lret
loope
xchg
lea
mov
mov
inc
cmpsl
ror
mov
mov
out
adc
in
sub
insb
push
lock
pop
outsl
jno
cmpsl
cmp
add
out
cmpsb
test
push
sub
xor
push
jne
push
shlb
pop
lahf
push
filds
xor
ljmp
test
xor
lret
cmp
pop
imul
mov
cwtl
addb
int3
insl
jo
xor
xor
push
push
jo
fucomi
jle
mov
xchg
arpl
pop
das
sub
cmp
cmp
lods
mov
sbb
jbe
in
test
out
test
mov
enter
mov
dec
pop
dec
outsb
lds
cmp
add
add
jno
xchg
inc
lret
test
std
into
mov
xlat
sbb
jmp
jl
adc
dec
sub
or
sti
pop
lret
repz
stc
in
dec
lods
int
sub
dec
in
in
icebp
sub
stc
rol
mov
and
in
and
cltd
in
cli
jbe
mov
rcrb
jp
shlb
add
call
mov
shl
or
push
in
clc
xchg
ja
out
and
ljmp
mov
mov
test
pushf
int3
cmc
jg
popa
lcall
lea
out
jmp
push
stos
das
add
fstps
hlt
in
out
addr16
cmp
add
aad
dec
in
ret
into
popa
cmpsl
into
xchg
out
or
xor
int3
push
bound
ret
pop
cmc
and
push
test
popf
xchg
lock
sti
xor
sbb
push
lahf
xor
sub
mov
cltd
insl
xchg
sub
push
lock
mov
mov
mov
mov
bound
lods
lods
inc
sbb
icebp
sbb
out
and
sbb
or
xchg
lock
sbb
mov
scas
cmp
lret
lea
and
jmp
in
xor
aaa
out
lcall
mov
ret
jg
fldcw
mov
mov
jle
push
imul
xchg
inc
bound
pop
and
jne
int3
cmp
and
cmp
rol
int3
imul
fadd
xchg
mov
inc
adc
fndisi(8087
sarl
in
js
or
frstor
cmp
fimull
imull
fdivrs
mov
mov
mov
jnp
push
xchg
stc
imul
pop
or
jmp
aas
shlb
sbb
imull
sub
mov
bound
jge
cli
out
fstps
mov
push
xor
iret
movsl
pop
std
imul
jmp
xchg
lock
out
sub
jmp
sub
loop
loopne
jmp
dec
imul
cs
fnstenv
inc
loop
xor
adc
xchg
mov
rcrl
mov
sarb
mul
ret
add
lcall
mov
cmp
mov
outsb
cmpsl
dec
sub
hlt
cltd
lds
lods
stc
lock
pop
add
aad
fcmovne
jle
or
nop
fsubp
iret
sbb
xchg
cmp
sbb
pop
push
and
mov
jecxz
insb
or
mov
stos
xchg
xlat
xchg
out
push
jno
push
movsb
je
xchg
jmp
dec
sub
lods
icebp
jns
popf
mov
dec
inc
mov
push
mov
lock
mov
test
jno
popa
into
jp
into
aam
out
jnp
stos
jl
fs
jbe
jmp
pop
lcall
mov
hlt
sub
lods
out
mov
cmpsb
mov
mov
dec
jae
or
mov
pop
adc
out
mov
jnp
and
outsb
lcall
push
dec
imul
adc
mov
cmpsl
jno
decl
mov
pop
rorl
and
cmp
jle
pop
xor
and
scas
sub
xchg
fwait
in
mov
insl
inc
mov
mov
xchg
scas
push
sub
and
mov
icebp
repz
jns
lea
out
je
jo
ja
mov
loopne
lods
mov
sbb
inc
sub
sbb
cmp
cmpsb
push
pop
pop
xchg
inc
xor
mov
fidivrl
xchg
mov
cmp
push
cmp
and
lds
in
mov
xchg
int
mov
jmp
mov
inc
mov
pop
lea
insb
cltd
jmp
jg
loope
cmp
fstpt
xor
stos
dec
and
repnz
stc
cmpsb
insl
or
or
inc
popf
out
mov
dec
dec
mov
jnp
mov
mov
lds
mov
fisubl
sub
cmc
xchg
pop
xchg
shr
mov
imul
in
stos
fnstcw
ret
cmp
push
idiv
lea
mov
movsb
pusha
bound
inc
or
add
sti
add
or
imull
ja
or
jecxz
imul
into
inc
add
lret
add
imul
mov
push
cld
leave
jns
mov
out
out
pop
cmpsl
xor
xorb
pop
divl
lds
out
push
roll
sub
daa
icebp
cltd
cltd
out
fcompl
ja
fcmovnbe
lock
dec
dec
shl
enter
popf
pusha
pop
popa
adc
lcall
sub
mov
jns
dec
addr16
jbe
mov
sub
cmp
ss
inc
cmc
mov
xchg
mov
jmp
mov
xchg
sti
test
sti
push
icebp
add
int
mov
mov
cmp
out
insl
daa
inc
inc
jmp
and
jb
xchg
cmpsl
int
or
mov
push
add
mov
shrl
icebp
mov
sub
popf
adcl
xchg
int3
mov
popa
leave
lds
add
add
sbb
mov
and
cmp
and
fildll
jmp
jmp
les
cltd
lods
sub
mov
dec
pop
imul
repnz
imul
cmp
jnp
stos
ljmp
jae
mov
push
rolb
inc
jne
sti
inc
mov
xor
shlb
outsl
fdivrs
mov
roll
mov
bound
cs
repz
and
mov
inc
or
dec
add
push
nop
sbb
pop
pop
rol
xor
sbb
cmp
mov
xchg
call
pop
push
lods
icebp
aaa
ret
rclb
into
or
jg
pop
inc
lods
xchg
cli
aam
jmp
ja
dec
lds
mov
outsl
sbb
pop
mov
hlt
jnp
sti
jp
push
out
test
jnp
sbb
mov
int
inc
mov
jo
lcall
cld
dec
movl
in
xor
push
jge
push
or
fldt
lds
cmc
mov
ss
in
in
jne
jmp
jb
lea
test
lret
and
rclb
xchg
mov
add
mov
jmp
iret
out
std
jle
movsb
out
cmp
scas
cmpsb
int3
out
daa
xchg
jno
push
ret
dec
add
pop
mov
movsb
push
icebp
and
popf
xchg
lahf
scas
jno
jae
jne
mov
cltd
mov
je
into
popf
jnp
push
mov
inc
cmp
add
out
add
push
std
jns
in
pop
mov
sbb
add
jmp
rcr
jnp
movsb
inc
aam
xorl
adc
repz
pop
inc
aas
rolb
cmpsb
pop
out
jae
mov
mov
mov
jnp
add
je
in
icebp
sti
popf
mov
gs
pop
test
sbb
mov
imul
xchg
icebp
mov
sbb
sar
mov
int3
mov
das
aas
icebp
incl
icebp
jg
push
neg
push
push
hlt
sti
lock
mov
leave
test
sbb
shl
je
fcomp
fsubs
aas
sarb
push
adc
or
lods
out
xor
int3
xchg
add
jmp
jle
imul
jne
bound
fwait
adc
sub
add
jge
bound
lock
jl
mov
cmp
loop
stos
add
daa
ss
lahf
dec
aaa
nop
dec
sahf
sub
lods
stos
inc
push
pop
and
popa
cmpsb
ret
out
andps
mov
enter
cmpl
push
push
sbb
adc
out
clc
nop
lret
pop
mov
dec
xchg
mov
adc
xchg
outsb
xlat
cmc
or
lcall
cmovp
mov
insb
or
pop
mov
nop
fists
lods
xor
add
in
lahf
ret
jo
pop
loope
xchg
jmp
mov
fadd
inc
out
push
sub
fldt
into
sbb
cmp
mov
push
cmp
push
jno
ja
ja
ja
mov
insl
cs
sbb
frstor
fistpl
xor
rcrl
rcll
dec
mov
pop
inc
mov
dec
mov
mov
push
push
ret
jg
mov
mov
mov
mov
adc
sub
ja
lret
test
pop
je
js
and
xchg
fs
dec
jl
pusha
and
pop
popf
daa
push
cmc
inc
cmp
pop
icebp
cmp
ja
stos
xor
adc
push
icebp
sbb
mov
ret
pop
rclb
ja
ret
xchg
add
xor
adc
jmp
cmpsl
cmp
adc
or
std
js
pop
ljmp
or
dec
jnp
imul
sbb
push
inc
out
pop
inc
out
imul
into
fdivrs
or
mov
sti
mov
jle
imul
shlb
mov
jle
outsb
mov
mov
into
loope
imul
or
ja
cli
arpl
cmp
dec
dec
mov
aaa
sbb
aad
fdivl
jle
imul
decl
lock
sub
stos
cmp
and
jns
xor
push
dec
rcrl
xchg
lock
push
dec
in
jle
outsb
mov
test
sbb
pop
pusha
cmp
fsubrs
jbe
xchg
sbb
or
lret
mov
leave
fs
push
mov
sbb
cltd
loop
fisttpl
mov
popf
addl
sti
mov
jl
push
or
pop
pop
imul
in
mov
or
push
or
rclb
cmpsl
inc
shll
or
aam
mov
cli
inc
mov
xor
xchg
push
outsl
sti
lea
sbb
movsb
fsubl
testl
rcll
and
sarb
push
jo
adc
sahf
or
movsb
test
inc
xchg
dec
sub
lret
or
addl
add
fimuls
xchg
incb
stc
lea
test
add
enter
sub
fisttpl
adcl
sarb
xchg
inc
ror
mov
popf
cmp
aam
enter
xor
or
adc
into
and
shrl
loop
fimuls
xor
movsl
mov
stos
fistpll
mov
mov
iret
jo
mov
stos
lock
cli
sbb
mov
xchg
bound
jg
shrb
push
daa
mov
xor
aad
cmpsb
add
add
pop
scas
call
imul
mov
imul
rorb
jno
xchg
sbb
dec
mov
mov
enter
pop
dec
adc
call
iret
sub
pop
xor
call
or
fcomps
jns
push
xor
enter
jl
inc
and
popf
into
mov
dec
xlat
cmp
loop
mov
mov
add
pop
jo
xorb
imul
jmp
adc
xchg
adc
inc
pop
fwait
test
lret
stos
pop
repz
rol
cmp
aad
popa
test
pop
pop
bound
test
int3
in
hlt
mov
ja
xchg
out
push
sbb
push
cmp
movsl
into
outsl
mov
das
sub
out
pusha
sbb
cld
jo
or
cmc
cmpsl
fsubrs
dec
adc
aas
push
dec
test
pushf
test
fsub
out
dec
jle
repz
xchg
dec
fmuls
mov
mov
test
loop
pop
in
cltd
lret
popa
xchg
fwait
aad
pop
pushf
fsubrs
iret
mov
lods
xchg
xchg
jp
push
xchg
in
lea
stos
push
bound
sub
je
dec
frstor
pop
cmc
mov
cld
bound
xlat
lock
and
mov
jl
into
inc
daa
pop
adc
jg
lea
mov
ss
adc
sub
addl
add
push
icebp
or
fisttpl
mov
inc
jns
mov
sar
or
shr
pop
in
mov
addl
mov
enter
out
pop
xchg
pushw
pop
inc
pop
cmp
push
iret
or
pop
sub
aad
xchg
jno
pop
push
xchg
loop
mov
inc
lea
ret
pop
sbb
jmp
cli
jecxz
in
mov
repz
insl
cmpsl
roll
sub
imul
dec
ja
fmul
fdivl
or
sbb
mov
flds
fbstp
jnp
adc
arpl
mov
insb
mov
or
push
ljmp
or
popa
push
adc
xchg
outsb
jg
aas
leave
fcmovnb
xchg
dec
out
mov
ret
outsl
sub
cmp
or
mul
rorl
pop
repnz
mov
lret
rcrl
inc
sti
sub
cltd
in
mov
cmp
lds
ret
hlt
icebp
fstl
mov
mov
inc
xchg
and
mov
dec
jns
jae
std
fwait
aas
mov
sbb
inc
aad
out
test
cmpsl
rorl
rcr
ret
dec
jmp
test
xor
int3
mov
ja
jecxz
outsl
jg
or
pop
mov
aad
sar
in
fadd
jg
sub
aas
pop
add
into
xchg
pushf
imul
aaa
push
inc
iret
int
push
jecxz
add
fisttpll
pop
or
pop
int3
leave
ljmp
imull
add
jg
xlat
add
sub
fcom
fsubr
push
fdivrl
and
push
in
inc
cmpl
imul
or
add
cmp
jmp
movsl
enter
fbld
cmp
mov
pshufw
cmpsl
lods
ret
or
mov
lds
sbb
ss
push
in
popf
dec
sub
xchg
pop
sarb
or
test
cmp
and
leave
sub
sti
shrl
mov
pop
shll
pushf
daa
test
je
mov
imul
sub
mov
enter
xchg
int3
cli
das
pop
loop
mov
dec
jmp
mov
or
daa
pop
jnp
mov
mov
add
aas
inc
sti
add
popa
xchg
pop
jmp
dec
jne
ja
decl
aas
add
insl
add
fnstcw
nop
ds
into
or
sbb
fadds
adc
add
fistpl
or
stos
dec
jae
cmp
xchg
push
and
iret
lahf
cmp
dec
cmp
jno
enter
fndisi(8087
lcall
mov
lahf
push
adc
and
lcall
push
cmp
jnp
add
or
arpl
xchg
mov
mov
popa
cld
imul
icebp
mov
xchg
xchg
repz
popf
pop
xchg
fidivrs
outsl
inc
add
cmpsl
cwtl
inc
loope
add
std
sub
xor
adc
mov
and
ljmp
pop
xlat
sbb
lret
test
xchg
sub
jne
mov
mov
dec
jecxz
adc
mov
lahf
out
push
and
lods
aas
pop
lcall
mov
mov
xor
and
mov
adc
in
pop
ret
dec
sbb
inc
push
jno
movsb
adc
mov
mov
fidivs
mov
sti
enter
sbb
sbb
int
inc
sti
hlt
repz
jmp
adc
push
xor
or
sub
mov
or
jge
jl
and
push
add
mov
ret
pop
dec
mov
mov
movsb
push
int3
insl
jnp
arpl
mov
mov
push
pop
cmp
sbb
mov
add
jnp
sub
push
sub
sbb
imul
cmp
adc
scas
push
ja
jo
mov
in
fisttps
movsb
mov
lret
sti
xchg
shlb
and
daa
rol
mov
pop
jne
and
imul
jno
jl
cmp
cmp
into
lea
jnp
mull
push
sbb
leave
stc
lock
jge
fsts
jo
jo
dec
notl
iret
orl
call
mov
popf
adc
dec
aaa
sbb
push
adc
xor
mov
cld
in
push
int3
pop
lret
xchg
mov
stos
lahf
xchg
mov
shrb
test
xor
popa
data16
jmp
lcall
loope
popf
pusha
int3
adc
bound
cwtl
cltd
inc
or
add
shrb
out
sbb
out
fdivr
sbb
mov
sbb
mov
adc
enter
xchg
adc
mov
mov
enter
xchg
std
into
xchg
pop
pop
das
cmp
pop
aam
lahf
dec
icebp
mov
pusha
jo
enter
andl
or
sbb
fisubrl
mov
int
mov
jge
push
repz
inc
jnp
or
mov
aaa
aaa
dec
inc
dec
ficoml
sub
sub
mov
out
xor
sarb
lods
fisubl
pop
add
das
add
pmulhuw
out
call
movsb
sti
mov
fs
ja
xchg
in
lret
sti
dec
popf
lret
jmp
dec
insl
and
mov
inc
f2xm1
sbb
fs
sub
mov
adc
filds
pushf
mov
add
xchg
sub
in
mov
ret
popf
mov
dec
imul
lods
and
cmpsb
push
pop
mov
adc
mov
xchg
pushl
mov
and
cmp
enter
shr
mov
fstpt
sub
mov
pop
ret
imul
fcmovb
mov
jbe
or
out
xchg
and
push
subb
daa
loop
out
mov
pop
jg
cld
mov
lods
in
pushf
add
and
hlt
push
mov
mov
or
or
int
imul
sbb
sbb
fcmovu
sub
adcb
xchg
push
mov
or
negl
cmc
iret
xor
ds
mov
dec
mov
cmp
or
imul
sbb
sub
mov
jge
cmp
repz
mov
enter
sbb
loop
cmpsb
sti
imul
mov
and
xor
arpl
mov
aas
lcall
push
and
out
add
push
out
lcall
rcrb
test
lret
popa
or
mull
rcrl
jg
pop
dec
xor
ror
pop
addr16
mov
int3
shll
dec
int
lret
lods
orl
push
and
dec
adc
push
stc
jo
mov
imul
mov
stos
and
divl
loopne
mov
insl
in
lock
cmpsb
daa
sub
xor
fcoml
xchg
das
xchg
xchg
pop
sbb
imul
shll
xchg
sub
or
imul
sti
sbb
mov
popa
clc
inc
shll
inc
mov
stc
subb
xor
movsl
mov
jl
repz
xchg
jno
cltd
out
xor
mov
sub
mov
push
in
imul
inc
mov
jae
jge
es
adc
jnp
clc
into
inc
pop
push
and
in
xor
and
xchg
inc
sti
cltd
test
push
outsl
adc
and
cmp
add
imul
aaa
lret
popf
dec
mov
mov
lea
pop
out
lock
repz
cmp
jecxz
out
aad
pushl
ja
ja
mov
jne
jmp
mov
mov
out
rcr
jno
daa
sub
lret
dec
fsubrl
in
pop
lock
mov
fwait
rep
out
xor
sti
insb
stos
pop
popf
lds
shld
jno
mov
imul
ds
subl
loopne
cmc
ret
add
lea
xorl
gs
lret
mov
or
jl
ret
popf
movsb
arpl
lods
push
jno
ret
mov
ja
fcomps
mov
in
lret
xor
insl
pusha
sub
dec
cld
xor
shlb
jg
lret
shll
xchg
in
jnp
in
lea
xchg
cs
popf
ud0
icebp
cmp
iret
fsubs
cmp
adc
sub
dec
cli
cmp
lods
push
ds
cmc
mov
mov
icebp
adc
sbb
adc
test
imul
int
or
leave
fcmove
sub
add
jno
cmpsb
sbb
and
xchg
jns
xor
lea
into
lahf
cmp
icebp
dec
push
es
das
popl
add
roll
pop
stc
cmp
in
aaa
popf
inc
xchg
lret
push
sbb
mov
in
xchg
push
sbb
pop
ficompl
in
movsb
insl
and
add
jge
jge
pop
adc
sub
lds
lock
add
in
mov
in
jp
enter
lods
mov
or
fistps
jno
jo
add
dec
xchg
pop
add
test
push
mov
enter
dec
and
mov
rorb
ret
mov
push
mov
ljmp
je
sti
and
mov
pusha
mov
stos
fiadds
fstpl
inc
shrb
xchg
out
in
out
leave
stc
mov
out
mov
xor
pop
adc
cld
leave
in
in
jle
push
out
pop
or
push
mov
mov
inc
jno
pop
jns
ja
mov
and
lret
add
sbb
hlt
repnz
push
imul
sub
ficompl
ljmp
fwait
enter
push
lods
sub
test
sbb
hlt
pop
mov
xor
mov
insb
test
fimuls
mov
adc
cli
fucompp
mov
rcrb
loop
pop
jo
sbb
adc
decb
test
xor
test
sarl
mov
inc
cmpsb
shl
rclb
into
or
sbb
xchg
sti
mov
hlt
lcall
mov
int3
ljmp
lret
cmpsl
jecxz
int3
mov
xchg
imul
mov
test
int
cmpsb
rorl
or
mov
mov
ret
insb
cmp
mov
mov
pusha
bound
dec
mov
mov
stos
insl
dec
cmpsb
add
adc
or
popa
dec
test
xchg
imul
pop
dec
and
mov
js
jge
sub
enter
lret
in
in
and
out
dec
aad
sbb
es
fsubr
sbb
inc
enter
fucomp
loope
xor
jno
std
fmul
rorb
cmp
xor
movsb
adcl
mov
fucomip
jecxz
push
jae
or
ret
jne
xor
roll
xlat
adc
xchg
ljmp
jl
in
jnp
xchg
aad
cmpsb
sub
xchg
aam
sbb
je
loop
jns
pop
cmp
push
xchg
popf
or
jg
jo
inc
jle
sub
adc
sbb
jmp
lret
sub
lock
push
iret
xlat
repnz
cmpsb
adc
int3
mov
lcall
int
mov
lea
loop
pop
mov
in
dec
test
popa
jns
xor
jecxz
bound
jae
xor
cmpsl
leave
mov
pop
loope
enter
cmc
stc
cmc
add
movsl
hlt
sbb
rol
pop
mov
cmp
les
or
rcrb
xchg
cmpsb
mov
mov
enter
ja
jb
cmpsl
or
jns
repz
div
push
sub
and
xor
sbb
mov
std
xchg
mov
adc
repz
mov
adc
cli
mov
push
xchg
mov
mov
lret
xchg
mov
push
mov
sub
test
cmp
loop
imul
adc
aaa
sub
in
loop
bound
dec
dec
mov
out
lahf
sub
popa
hlt
jp
out
and
out
mov
push
test
or
inc
ja
icebp
outsl
pop
sarl
mov
or
addr16
stc
cli
std
mov
lea
cmc
mov
mov
xor
push
push
mov
xchg
test
pop
test
dec
cmp
pop
or
or
cli
inc
push
and
sub
sti
leave
add
int3
sbb
mov
add
mov
sbb
dec
pop
push
xlat
ja
xchg
ja
pop
push
roll
incl
repz
daa
lahf
pop
xor
inc
push
fwait
adc
icebp
inc
pushf
pop
xchg
sub
cmp
sub
test
dec
cli
xchg
repnz
cmpsl
add
jo
xor
sbb
sub
pop
jbe
cmpsl
sub
pop
inc
push
fistpll
mov
pop
cmpsb
cmc
icebp
or
jns
add
sbb
mov
xchg
or
xchg
cmp
popf
cmpsb
or
cmp
pop
xchg
add
std
ja
sti
stos
arpl
cmp
fisubrl
cmpsb
inc
sbb
mov
cmp
add
xchg
jne
and
iret
dec
jae
or
pop
cmp
and
or
push
xor
daa
lea
rcll
aad
in
movsb
idiv
mov
xor
and
stos
pop
and
pop
out
in
ret
mov
mov
lds
jg
or
imul
imul
jno
mov
pop
lods
imul
pop
mov
enter
in
or
cmp
mov
or
pop
and
icebp
addr16
pushf
mov
pop
mov
loop
sub
pop
mov
add
jg
lea
add
popa
and
int3
das
inc
pushf
push
dec
imul
pop
add
rcrb
cltd
push
cmpsb
mov
jl
mov
mov
cmp
in
shlb
inc
sub
add
or
push
mov
inc
jnp
jo
cwtl
xor
pop
cwtl
ss
fisubs
out
popa
into
lret
adc
add
lcall
sub
mov
cmp
dec
push
jne
fsubs
lock
xchg
add
imul
push
jg
cmpsl
dec
jo
or
outsl
and
imul
lods
mov
jge
or
rorl
mov
shll
jno
pop
mov
xor
inc
rcrb
leave
movsb
cld
sub
sti
popf
fwait
sti
mov
fsubl
cmc
lret
dec
xchg
dec
test
cmp
adc
sub
dec
cmp
les
dec
mov
fcmovnb
jno
loop
mov
mov
rclb
jns
insb
mov
push
xor
in
pop
inc
cmpsl
cs
mov
mov
ret
mov
mov
ja
pop
sub
movsl
in
mov
rcrb
fsubrs
push
cmpsl
adc
iret
stc
sbb
xor
pop
adc
cmp
mov
xor
movsl
pop
mov
out
mov
in
mov
adc
add
repz
adc
mov
imul
pop
mov
fs
adc
pop
mov
jle
xchg
xor
pop
sbb
test
mov
ret
mov
test
sbb
dec
imul
cmp
ljmp
and
mov
xchg
jo
sub
cmc
push
pusha
jo
dec
cmp
dec
add
loopne
sub
scas
loop
mov
xchg
push
neg
mov
jnp
xor
lock
jne
lds
lods
popf
push
lahf
jne
iret
jg
inc
in
or
sbb
push
mull
data16
cltd
push
mov
cltd
sarb
sub
mov
and
add
mov
xor
xchg
lea
cmpsl
sti
imul
lds
pop
lcall
add
jnp
out
test
xchg
je
shrb
and
call
imul
outsl
out
les
jae
push
xor
out
enter
sbb
dec
int3
movsl
xchg
mov
ljmp
pusha
or
ret
lds
mov
xchg
jb
bound
cmp
or
sti
fdivp
loope
sbb
sti
std
movsb
or
jbe
sbb
inc
cmpsb
shl
fnstenv
mov
rcrb
sub
roll
mov
sub
push
adc
mov
sub
popaw
adc
out
repnz
inc
lea
pushf
jno
in
push
aaa
add
xor
pop
pop
mov
in
mov
adc
in
sub
fs
aas
mov
lds
sub
mov
movsb
mov
lret
sub
or
dec
xchg
sbb
inc
stos
scas
lret
xor
lods
inc
mov
aaa
xlat
inc
dec
mov
sti
pop
mov
inc
pusha
dec
xor
subl
aad
loop
icebp
fs
or
mov
sbb
lock
popl
jp
cli
sbb
xorb
imull
rclb
sub
push
jmp
in
stos
cmc
jge
xor
and
mov
cmp
cmpsl
sub
lds
out
mov
jbe
xchg
add
movsb
mov
inc
push
stos
das
pop
or
in
fiaddl
jmp
xchg
pusha
xor
imul
lea
cmp
dec
stc
inc
cld
popa
rcr
int3
xlat
push
popf
xchg
jecxz
stc
push
in
sti
inc
sub
ret
fcoms
leave
push
jne
push
inc
inc
push
cmp
mov
dec
imul
sbb
lock
mov
jae
stos
clc
push
dec
fidivrs
outsb
nop
pop
jb
mov
repnz
mov
mov
mov
mov
mov
cmpsb
popf
cmp
and
outsb
add
adc
stc
xchg
stc
lret
decl
dec
add
sub
cmpsb
lcall
push
daa
mov
cmp
pop
cmp
test
aas
jecxz
fstpt
cmp
out
faddp
cmp
lahf
movsb
popa
sub
jecxz
adc
add
mov
pop
sbb
imul
fnsave
push
ret
xchg
sbb
pavgw
cmpsb
cmp
and
lds
lods
arpl
pop
jno
stos
dec
cli
fnsave
es
fcomip
mov
shrl
cmp
mov
fldl
out
mov
adc
and
add
lods
mov
ret
cltd
dec
fcmovbe
and
cmp
int3
and
addb
sub
shlb
lods
test
add
lcall
stos
sub
xchg
add
mov
hlt
flds
ja
adc
add
sbb
dec
mov
pop
cmp
popf
adcb
icebp
enter
add
lea
out
repnz
insl
mov
and
jo
pop
xor
lods
popf
and
es
idivl
jno
mov
jge
inc
sbb
xchg
push
jae
test
jnp
add
lahf
popf
stc
inc
push
sub
and
sbb
rolb
inc
ret
out
das
push
in
mov
lods
imul
xchg
mov
scas
add
sti
dec
sbb
or
push
push
jle
sub
jmp
add
add
clc
out
mov
lret
data16
pop
inc
cltd
shll
cmc
in
and
jo
enter
mov
in
and
enter
mov
imul
pusha
into
push
leave
cmp
xchg
jle
pop
ret
sbb
arpl
mov
inc
or
pop
insl
xor
lea
stos
jno
jae
mov
xor
jge
push
mov
or
rcr
cmpsl
fistl
sbb
jnp
xchg
out
push
mov
popf
ja
jae
jl
xchg
sbb
cltd
xlat
aam
xor
test
scas
inc
bound
fildll
mov
mov
icebp
jmp
xor
arpl
xor
repnz
mov
cmpsb
inc
lret
jge
test
out
or
movsl
xchg
xor
sub
cmp
adc
sub
lcall
in
shrl
pushf
imul
sbb
lahf
sarl
inc
jp
xchg
hlt
sti
fstl
inc
ret
push
call
icebp
add
xor
in
and
add
lock
ss
loope
xor
mov
dec
adc
lds
dec
cmp
lods
jge
pusha
or
cmp
xor
into
inc
cmp
mov
loop
jge
pusha
loop
scas
mov
push
popa
lret
xor
loopne
btr
xchg
and
and
stos
cli
sub
inc
dec
ja
xchg
add
adcb
pop
sbb
pushl
sahf
daa
push
int3
jnp
add
push
in
icebp
mov
xor
jnp
and
lret
popf
lret
mov
jecxz
imul
and
cmp
mov
xchg
inc
and
rep
xor
mov
mov
mov
mov
mov
call
xor
enter
jle
in
cli
pop
push
lahf
mov
pusha
dec
push
rclb
and
imul
pop
push
xor
mov
lea
sub
mov
xor
sbb
cmpsl
push
pop
shrb
push
loop
mov
xchg
subb
push
pop
fstps
xchg
inc
or
mov
ja
aad
jle
pop
addl
xchg
push
xorl
icebp
mov
out
mov
push
test
jnp
sbb
xor
test
movsl
push
sbb
test
adc
jns
movsl
inc
dec
jae
xlat
inc
loop
bound
pop
fucomp
inc
dec
xor
pop
pop
pop
jnp
pop
cmc
loope
stc
incl
or
jne
lret
xchg
data16
shll
or
in
sbb
and
aad
dec
dec
imul
out
lea
out
mov
mov
cmpsb
into
adc
rcrl
fbstp
int3
push
mov
stos
lods
bound
dec
push
mov
jle
insl
inc
jle
lret
cmp
adc
mov
lret
mov
imul
repz
lahf
sub
mov
scas
mov
enter
pop
cmc
cmpsl
xchg
in
push
add
hlt
or
and
std
mov
mov
and
sarb
mov
out
aas
cmp
fwait
loopne
and
jne
pop
int3
adc
in
xchg
push
add
sub
das
ret
mov
lods
in
dec
mov
lret
sub
stos
out
or
dec
push
out
and
ljmp
sarb
xor
std
or
jo
lds
mov
pop
cltd
fldenv
xor
mov
sahf
icebp
das
popf
cmp
xchg
rorb
bound
xchg
pop
push
sbb
xor
js
adc
fistps
xchg
mov
jno
pop
sub
sti
les
lods
cmp
dec
pop
inc
mov
inc
imul
cmp
popf
add
sarb
or
and
aad
sti
cmp
sub
fadds
insl
rolb
inc
out
fcompl
bound
cli
jnp
sbb
or
fstp
mov
lods
cmp
test
mov
out
stos
fs
mov
lock
inc
ljmp
in
pop
xchg
sbb
cmpsb
sti
in
mov
xor
jp
and
dec
and
lods
popf
aad
outsl
push
push
mov
lcall
push
aad
or
jmp
ljmp
or
repz
and
add
ds
jg
xor
xchg
loop
pop
sbb
cmp
xchg
pop
lret
dec
lcall
mov
push
adc
out
cmp
adc
mov
lret
cmpsl
out
pop
or
out
jl
push
rcll
pop
mov
int3
jecxz
sbb
dec
push
emms
outsb
and
add
hlt
sbb
xchg
pop
dec
sbbl
xor
les
shl
bound
aaa
push
jp
cmp
cmp
adc
gs
pusha
sub
js
push
add
lcall
idivb
inc
cmc
xchg
std
pop
and
cltd
mov
xchg
jecxz
aaa
lds
pop
push
notl
ljmp
call
mov
xor
jo
jle
addr16
add
arpl
mov
sbb
sbb
xor
repz
dec
inc
int
ja
ja
ja
mov
jne
lds
rol
idiv
mov
and
dec
dec
jle
push
test
push
test
mov
in
inc
popf
mov
pop
lock
sub
aas
dec
outsb
lea
pop
mov
out
and
in
fidivrs
or
out
aad
int3
ret
fs
add
test
bound
push
push
repnz
or
dec
and
lods
fisttpll
push
jnp
xchg
cmp
jecxz
jno
stos
mov
dec
push
ret
stos
or
inc
cmpsb
mull
ja
mov
adc
adc
pop
cmc
sub
push
testb
rorb
sub
mov
jbe
lds
jns
sbb
cmpsb
push
lret
popa
pop
icebp
xor
cmc
sti
inc
or
fs
sub
mov
in
jmp
sbb
mov
pop
jmp
aas
mov
mov
out
add
das
cwtl
lock
ds
icebp
fs
loope
pop
lret
cld
stc
lods
lds
inc
or
inc
adc
sti
out
cmpb
jg
cmp
pop
and
dec
lds
enter
fimuls
aaa
lahf
xchg
mov
cmpsl
ljmp
outsl
or
cmpsb
icebp
add
sub
lea
ds
imul
inc
inc
in
dec
sbb
add
sub
pop
popa
jae
insl
adc
inc
jno
fnstenv
and
imul
mov
jl
std
stc
pop
sarb
cmc
add
jnp
je
ret
jns
out
xor
xchg
stos
loopne
stc
outsl
imul
dec
rorb
xor
in
icebp
ja
int3
stos
bound
out
and
mov
shr
inc
xchg
in
sub
or
inc
and
xlat
mov
sarb
or
add
pop
fidivs
lahf
shlb
aad
int
mov
sub
icebp
or
shlb
inc
fisubrl
inc
orl
jmp
lea
pop
dec
inc
add
ret
lahf
mov
sbb
daa
outsl
jg
or
fiadds
xchg
cmpsl
jae
mov
in
cmpsb
lret
cltd
cmpsl
xchg
cmp
lea
clc
or
mov
pop
sbb
adc
imul
repz
cld
inc
or
outsl
fdivr
or
lods
out
xor
imul
sub
mov
mov
dec
jnp
sbb
insl
insl
add
pop
hlt
adc
sbb
jmp
mov
sti
cmpsl
jmp
movsb
cmp
xchg
cmp
cmpsl
jnp
sub
mov
shlb
lret
xchg
inc
int3
add
in
out
jnp
cmpsb
ljmp
xchg
inc
push
in
mov
sub
inc
inc
add
mov
insl
inc
std
arpl
xchg
sub
sub
dec
leave
jns
jne
mov
imul
in
imul
setnp
or
lcall
xchg
adc
jo
roll
out
fisubl
fwait
cmp
push
jp
es
sub
repz
mov
test
popf
lret
pop
sbb
cmp
out
popf
or
pop
mov
inc
int
inc
or
sti
sub
cmp
mov
add
movsl
mov
sbb
sub
inc
xor
add
sbb
pop
fbstp
addr16
mov
test
and
add
jne
dec
adc
ret
jmp
mov
add
stos
jns
xchg
mov
cmpl
xchg
xor
sub
xor
xor
dec
xor
sbb
mov
xor
fbstp
movsl
negl
xchg
fwait
div
fstpt
pusha
add
pop
imul
add
push
insl
pop
and
add
sub
int
aaa
lods
ds
movsl
jne
sub
jge
setno
notb
push
xchg
insb
out
loopne
mov
loop
sbb
xor
mov
icebp
test
jae
dec
jmp
pop
lock
mov
out
push
mov
or
fidivs
imul
fldl
or
enter
mov
jge
mov
fildl
xor
jo
fstpl
sbb
mov
cmpsl
pop
data16
iret
lock
inc
xchg
icebp
mov
adc
or
xchg
and
imul
std
mov
icebp
and
cmp
mov
or
jg
or
mov
clc
arpl
sub
adc
push
jmp
lods
add
insl
inc
sbb
sub
xchg
pop
push
pop
inc
cmp
loop
pop
adc
sbb
les
lock
mov
int3
dec
jge
in
pop
cmp
lret
ret
xchg
cmc
xlat
stos
lcall
aaa
sarb
imul
dec
mov
cltd
loope
rep
ret
lret
gs
push
orl
inc
aas
jae
mull
fisubrl
jg
ret
in
pop
cmp
add
cld
push
movsl
mov
lret
stos
dec
out
pop
aas
popa
push
in
arpl
sub
fdivs
sub
adc
mov
fdiv
pushl
sbb
mov
lea
inc
in
and
push
inc
fnop
std
sbb
xchg
dec
out
or
or
or
int3
push
int3
jne
xchg
mov
fs
lds
stos
fidivrl
xchg
outsl
addr16
imul
loope
mov
fidivrl
shl
xchg
ljmp
in
sahf
or
sub
adc
stos
xor
icebp
in
jecxz
insl
jg
xor
pop
cmp
jge
insl
stc
test
aas
movsb
rorl
nop
xchg
add
pop
stos
push
xor
lods
lock
mov
aaa
shll
adc
stos
cmpsb
in
subl
jge
mov
add
push
int
sbb
cmc
les
xchg
xchg
cli
xchg
fs
dec
pop
test
adc
sub
inc
mov
xlat
jmp
fsts
lret
jnp
sbb
cmp
mov
inc
xor
pop
lea
pop
andl
lcall
push
add
dec
inc
dec
and
out
fcomps
push
or
xor
clc
and
in
std
add
ret
xchg
scas
pop
out
lea
adc
fimuls
xor
mov
push
mov
sbbl
or
cmc
jl
hlt
jns
xor
enter
lock
fs
xchg
mov
in
shlb
adc
lods
pop
xor
aaa
push
xchg
dec
or
adc
and
enter
or
scas
mov
and
mov
sub
out
lods
andl
popf
mov
insl
shlb
push
loop
and
inc
adc
mov
push
lods
ret
mov
test
leave
xor
pop
xchg
push
and
test
adc
mov
inc
div
shll
shlb
jmp
add
xlat
jno
xchg
mov
jl
cltd
xchg
ds
stc
sarb
imul
aas
out
aam
popa
mov
xor
lcall
jmp
fnstenv
test
jae
lea
cwtl
addr16
dec
sub
int3
sbbl
xchg
push
inc
cmp
adc
into
sbb
mov
xchg
lret
addr16
popa
movsb
scas
push
xchg
or
scas
lret
rclb
sub
mov
cmp
addr16
jle
loop
dec
adc
xchg
and
push
incb
jns
push
push
movsb
jne
cltd
adc
adc
push
lret
xchg
fwait
ja
sar
into
inc
fstps
mov
lods
sbb
enter
imul
int
sub
enter
popa
aam
and
lahf
icebp
or
rclb
daa
adc
roll
out
cmp
pop
mov
mov
cltd
dec
popf
ja
jg
and
cmc
cmp
jnp
pop
xchg
mov
stos
incl
jp
mov
xorl
pop
xor
xchg
iret
lret
fwait
pop
movsb
mov
les
cmc
enter
xchg
lret
adc
in
cltd
enter
test
jbe
andl
test
fisttpll
ret
aaa
adc
testl
jecxz
jne
jge
xor
sar
fisubrl
mov
pusha
hlt
add
cltd
inc
or
mov
imul
fstl
sbb
hlt
cmp
mov
pop
sub
test
imul
decb
inc
addr16
leave
adc
movsb
pop
mov
sti
aaa
sbb
lret
lret
dec
aad
push
daa
sub
inc
lods
or
cmp
jns
xchg
popf
mov
imul
pop
push
cmpsb
jnp
push
iret
push
lret
jne
scas
inc
stc
fidivrl
shll
mov
in
mov
adc
lcall
sub
and
lea
xor
fsubl
mov
mov
fnstsw
ffreep
jp
mov
xlat
mov
jecxz
addr16
pop
dec
loope
mov
std
mov
out
xor
or
mov
int
xchg
sahf
lret
and
and
mov
cmc
aam
add
jecxz
cmpsb
insl
dec
xorl
lret
jnp
inc
lret
sub
stc
mov
mov
or
int
xchg
decl
int3
sub
clc
test
xor
pop
in
xlat
sub
test
xor
sti
cmp
lods
movsl
popf
dec
xchg
push
int
sti
in
hlt
fnstsw
adc
or
xor
ljmp
pop
insb
xlat
mov
jle
sbb
into
and
pop
andl
aad
hlt
lods
push
xor
cmpsb
rorl
xchg
xchg
mov
out
mov
icebp
iret
test
fidivrl
lret
xlat
mov
aam
lahf
pop
pop
add
repnz
dec
mov
out
lds
mov
xor
cmpsl
fcmovnb
ja
or
nop
fsubl
andl
inc
mov
cmp
std
in
ret
inc
in
mov
mov
sbb
jns
pop
lret
cmp
out
mov
inc
or
dec
clc
je
cmp
add
in
les
xchg
mov
es
sub
es
xor
xlat
les
sub
dec
sub
stc
idivb
std
fsubrp
pop
dec
mov
adc
ja
cmc
dec
aas
out
sbb
push
xor
cmp
jo
movsb
xor
ret
mov
repz
mov
shll
mov
cmp
sub
mov
cmp
or
lret
popf
test
cmc
inc
xchg
repz
mov
jmp
xor
insl
xor
mov
ret
in
push
mov
ret
jo
shrb
outsl
pop
dec
stc
lds
out
jl
stc
jge
cltd
xor
les
popa
fldl
daa
add
fwait
inc
icebp
jg
notb
loope
aam
xchg
rcll
xchg
stos
mov
mov
lahf
hlt
movsb
cld
mov
inc
lret
lret
cmp
in
in
sti
jne
incb
das
out
or
in
dec
and
sub
jecxz
ljmp
sbb
in
or
jno
mov
mov
inc
dec
pop
inc
pop
fsubrs
push
push
sub
test
jmp
xchg
mov
cmpsb
pop
xchg
int3
std
mov
mov
sti
aas
lret
inc
mov
std
pop
push
mov
fnsave
pop
inc
shll
mov
jnp
ja
jmp
ret
lods
aad
pop
jae
in
fsubr
fisttpl
push
add
stc
dec
sbb
div
lret
sti
sti
xor
jnp
pop
aas
mov
mov
and
and
jne
adc
jg
hlt
or
cmpsl
cwtl
lret
cmpb
or
mov
adc
paddd
sub
out
call
pop
lea
lods
movsl
dec
sub
cmp
out
dec
mov
dec
xchg
mov
dec
fnstenv
jmp
out
test
push
and
lret
mov
add
jno
in
or
or
jnp
mov
inc
in
mov
add
rsm
xchg
jb
imul
adc
mov
fisubl
call
push
fs
ret
lea
fwait
sub
sbb
loop
lret
std
in
xchg
mov
mov
or
jae
push
add
cmp
jl
mov
lea
lds
or
or
xchg
sti
lods
add
pop
repnz
jmp
lahf
xchg
ja
and
inc
sarb
sbb
cmc
cs
cmp
loope
shr
out
pop
test
lret
stos
ja
xor
cmpsb
and
iret
das
lret
loop
out
xchg
mov
mov
pop
mov
aas
cmpsb
xlat
add
jno
mov
mov
pop
mov
popf
pop
aaa
jbe
inc
mov
or
xor
pop
movsb
adc
mov
jecxz
lds
mov
push
lret
lds
mov
loop
pop
lahf
cmpsb
ret
jp
and
push
dec
sbbb
push
cltd
inc
xchg
inc
or
adc
testl
add
xor
fcomp
jae
xchg
shrb
into
pop
push
fdivl
pop
jae
cmpsb
into
sub
xor
insl
mov
out
imul
cmp
push
sub
jb
fwait
mov
enter
sti
xchg
lret
subb
jae
dec
or
mov
imul
push
pop
xor
dec
cli
test
inc
cmp
pop
adc
popf
add
lea
jge
mov
and
mov
movsl
inc
mov
cmp
lea
mov
mov
sub
pushf
imul
dec
mov
mov
bound
xchg
cmp
in
insl
lea
fldpi
xor
or
dec
push
ret
dec
sti
enter
shrl
xchg
dec
rorb
movsb
mov
scas
lahf
jnp
sbb
add
jg
enter
pop
lret
mov
shrl
addr16
sarb
mov
ret
in
std
imul
sbbl
stos
xchg
stc
cwtl
lock
je
out
imul
sub
fwait
push
movsb
test
rclb
test
add
jbe
addr16
imul
in
jg
add
dec
data16
cmp
cs
and
or
sbb
in
shrl
vcvtdq2pd
xchg
hlt
mov
ret
out
lods
and
sub
mov
stos
lret
mov
add
mov
out
mov
shl
add
jge
stc
fcoml
imul
pop
cmp
xchg
fldl
sub
stc
shlb
dec
lahf
cmp
mov
bound
rcrb
fwait
adc
loop
in
fnstcw
sbb
mov
scas
int
icebp
sub
cltd
fnstenv
push
fwait
cmc
xor
pop
dec
push
pop
and
push
out
add
and
mov
aaa
dec
sahf
inc
mov
aam
xor
cli
jmp
cmpsl
jno
xchg
scas
in
xchg
dec
setle
imul
mov
and
mov
enter
push
imul
sti
push
imul
mov
popf
jg
push
add
dec
or
lods
mov
mov
punpckldq
mov
in
mov
out
dec
les
xchg
mov
out
fmul
arpl
cmpsl
pop
adc
lea
sti
pop
out
jb
jae
loope
fst
sbb
adc
mov
inc
pushf
inc
imul
insl
lods
fsts
or
popf
inc
or
fdivl
pushl
in
cltd
insl
fwait
mov
sub
jmp
mov
enter
jge
addr16
jno
ret
sub
in
sahf
cmpsb
gs
jno
jb
or
cltd
in
jle
sub
faddl
or
pop
out
pusha
addr16
and
cmp
pop
xchg
aas
mov
jae
jmp
loop
jle
rorb
popa
imul
or
scas
cmp
lods
fists
inc
out
rol
imul
push
sub
mov
popl
jns
cltd
fs
js
adc
mov
cmpsb
mov
pushf
clc
mov
mov
cmpsl
jge
movsw
xchg
negl
repz
cmpsb
repnz
mov
and
shll
pop
cld
adc
mov
sbb
es
rcrb
in
cltd
fs
dec
add
jnp
inc
fidivl
dec
cmc
add
lea
fimuls
stos
aad
xchg
lahf
xchg
rorb
mov
ret
lea
pop
jae
pop
xchg
mov
push
jmp
lods
lock
jne
mov
rolb
ja
mov
ja
ret
jecxz
cmc
mov
jge
or
int3
mov
mov
ficoms
cmp
sti
rclb
inc
loope
sub
add
outsl
sbb
out
fisttpll
cmp
out
jecxz
adc
jnp
mov
in
sub
and
jno
ja
stos
mov
rep
add
adc
in
push
lods
push
adc
jg
push
sub
into
adc
mov
mov
jecxz
cltd
ret
movsl
insl
lods
push
or
mov
dec
cmp
mov
and
xor
fstpl
lock
lods
icebp
inc
in
shrb
sbb
mov
in
or
rorb
pop
xchg
adc
jmp
aad
jnp
xor
pop
loop
icebp
popa
aad
push
test
pop
inc
arpl
shl
bound
in
mov
jbe
push
imul
rol
mov
jno
xor
jnp
cmp
ret
mov
xor
mov
inc
sbb
loop
iret
sub
lahf
mov
pop
fcoms
cmpsl
mov
mov
dec
into
push
sbbb
mov
inc
xor
jg
add
out
lret
mov
aad
sbb
cmc
xchg
inc
cld
std
imul
xor
xor
cwtl
aas
pop
jno
cmpsl
dec
or
push
lret
push
daa
xchg
xor
lds
xorb
inc
jo
inc
pop
enter
jl
jecxz
outsb
test
sbb
imul
decb
std
and
jae
xchg
mov
cld
cmp
pop
xchg
add
jle
and
push
xchg
mov
mov
or
add
dec
jecxz
jl
and
sub
test
out
loopne
push
incb
fbstp
mov
pop
sbb
ljmp
enter
int
cmc
push
mov
in
mov
lds
dec
imul
mov
mov
and
aaa
sub
popf
addr16
out
ljmp
stos
mov
or
hlt
push
dec
in
add
shrl
inc
jle
lock
mov
xor
pop
dec
sub
jmp
ret
lea
pop
popa
push
stos
pusha
cltd
mov
adc
sbb
add
fwait
clc
and
out
cmpsl
in
call
movsb
or
add
stos
or
fisubrl
cmp
pop
insb
xchg
jg
rclb
sbb
xor
lahf
dec
xchg
mov
popf
xor
cmp
jecxz
sub
sbb
das
fisttpl
pop
mov
shlb
xor
enter
mov
cmp
adc
cmpsb
mov
pushf
xchg
xlat
in
mov
cmp
aad
fistl
popf
xlat
ljmp
push
sbb
or
repnz
and
ret
jne
jne
mov
sub
out
sbb
movsb
push
mov
lea
loop
inc
xchg
gs
xorl
add
bound
mov
cltd
inc
sbb
pop
cmp
push
mov
out
mov
movsb
fiaddl
sahf
jo
pop
xor
push
cltd
lahf
enter
negl
push
out
mov
mov
pop
inc
dec
add
add
xchg
ja
cmpsl
cltd
xchg
jecxz
lret
js
outsl
cltd
jns
cmp
sti
sbb
sbb
lret
test
mov
xchg
frstor
jno
xchg
and
inc
xchg
sbb
jbe
movsl
ds
push
jecxz
mov
push
add
cli
and
xchg
scas
in
jecxz
stc
mov
pop
sub
mov
push
inc
out
cmpsb
xchg
mov
push
cwtl
cmp
and
lahf
mov
sub
mov
xor
shl
xchg
ret
add
in
pusha
cld
frstor
hlt
dec
ja
stos
addb
mov
lods
loope
add
stos
sti
xchg
lahf
fimull
xchg
aas
test
xchg
xchg
sub
jae
inc
mov
mov
andb
jno
gs
rcr
pop
pushl
add
adc
jae
adc
out
negb
div
out
fucomi
imul
inc
inc
xchg
out
fstl
mov
mov
lods
xor
xchg
mov
jecxz
ljmp
mov
cmp
lcall
lock
dec
jo
inc
ret
xor
mov
rol
ja
rcrb
int3
cmp
lds
inc
mov
mov
imul
sub
sti
cmpsb
icebp
mov
lods
int
cmp
dec
or
lods
mov
iret
pop
in
sub
sar
imul
mov
sub
ret
push
movsb
ss
shrb
jno
ja
mov
outsb
into
pop
cmp
rcl
ljmp
stos
pop
ret
or
jns
cmpl
xor
leave
int3
out
cmp
aaa
fisubrl
stc
mov
aad
imul
mov
xchg
and
sbb
sbb
xor
in
push
and
cmp
adc
sbb
enter
xlat
lods
jg
or
cltd
out
sub
stc
mov
mov
out
test
fs
cmp
aad
in
mov
loope
jb
dec
inc
movb
jg
sbb
mov
dec
lret
movsb
negl
nop
jge
out
pop
mov
xor
stos
movsl
and
lods
and
js
inc
jns
outsl
imul
and
inc
leave
in
xchg
jno
dec
imul
cwtl
in
popa
pop
push
and
stc
cmp
fnstenv
ljmp
jns
pop
push
fwait
icebp
mov
sub
pop
push
fwait
sub
ftst
dec
jb
and
or
jns
arpl
insb
cmp
sub
xlat
ja
xchg
loope
and
jmp
adc
subl
inc
inc
push
adc
jmp
leave
repnz
add
fldt
icebp
fwait
push
das
cmpsl
mov
movsl
add
xchg
orl
test
imul
jge
inc
insl
adc
inc
xor
ljmp
mov
mov
inc
lock
inc
out
lds
mov
lods
add
lods
mov
popf
sbb
cmc
jge
push
push
ret
inc
repnz
sar
mov
xchg
das
stc
cmp
test
jns
bound
sub
stc
mov
add
ficoml
int
xchg
add
mov
fs
in
mov
rorb
decl
mov
idiv
ret
add
jg
std
aaa
jne
popf
popf
mov
jmp
outsl
xchg
lods
or
and
shll
jmp
in
addl
pop
out
fnstcw
into
pop
jo
lods
add
inc
in
inc
sub
mov
ficoms
sti
test
push
mov
sub
xor
cmp
jmp
inc
sub
adc
dec
jmp
cltd
mov
popa
jg
dec
cmp
out
rcll
mov
stc
mov
movsl
xchg
pop
cltd
mov
in
sub
inc
xor
jno
stc
roll
dec
mov
jns
jg
aad
mov
roll
inc
hlt
xor
lea
divl
jnp
mov
add
mov
sub
ja
ja
ja
inc
mov
lea
std
in
in
mov
mov
or
aaa
push
mov
mov
sahf
adc
mov
lods
stos
cmpsb
orb
sbb
rcll
mov
dec
movsl
in
pop
sub
loop
imul
push
mov
loope
shl
lock
push
mov
adc
mov
xchg
fdivrp
cmp
rorb
imul
or
ret
mov
mov
lcall
fnstcw
stc
jb
or
insb
incb
hlt
cmc
orb
lea
aam
mov
sbb
stos
loopne
adc
pop
sbbl
mov
mov
mov
sub
mov
andb
xchg
rcr
mov
out
cmp
fld
aam
out
mov
jb
aaa
aaa
addr16
lods
cmp
lahf
sbb
stc
popf
fnstcw
cmpsl
mov
sahf
dec
and
mov
ret
test
shll
lods
call
ret
mov
sbb
js
sub
data16
ficomps
int3
xchg
in
or
popf
jge,pt
mov
mov
or
jmp
sub
pop
pop
inc
mov
xor
call
loop
cs
ret
sbb
fstpl
add
negl
mov
popa
pop
pop
mov
rolb
js
stc
sahf
mov
clc
iret
add
les
xlat
xchg
jg
enter
gs
pushf
jge
jmp
fimull
and
jne
mov
test
add
mov
mov
push
ja
push
test
ja
mov
fbld
cmc
xlat
in
lea
aaa
mov
mov
jnp
ja
cld
stc
addr16
cmp
add
sub
ja
inc
mov
fwait
xlat
sub
fs
push
cmpsl
lods
add
mov
dec
mov
cltd
mov
shlb
adc
loop
pop
mov
arpl
or
cmp
stc
in
daa
mov
sarl
les
xor
jns
sub
mov
sahf
dec
or
pop
mov
jb
cld
scas
and
loope
xchg
add
loope
jae
xchg
lcall
clc
dec
sub
rcrl
xor
jnp
pop
fcmovnb
mov
xor
and
mov
and
aas
cld
mov
mov
fstpt
lcall
lods
dec
xorl
mov
lahf
jbe
xor
nop
cltd
lods
in
inc
aad
xchg
ret
mov
negl
or
jmp
and
fsub
mov
mov
leave
jae
out
bound
into
mov
add
or
data16
ss
jnp
std
mov
jo
jno
mov
mov
mov
pop
xchg
cmp
aam
jl
sbb
push
jbe
in
daa
add
mov
xchg
xor
mov
shrl
cltd
pop
mov
ss
push
aaa
rolb
dec
mov
popl
mov
push
mov
cmp
ret
adc
add
inc
fsubrs
leave
aas
and
inc
fwait
cmp
adc
ficompl
and
jbe
mov
addl
inc
dec
mov
hlt
dec
fildll
mov
jae
jbe
testl
jno
in
repnz
or
and
pusha
testb
std
push
and
sbb
test
mov
mov
fsubrl
loopne
sahf
insb
mov
or
movb
mov
mov
ret
jno
or
lds
outsb
or
dec
and
mov
fcoml
in
paddsw
jge
outsl
jb
jle
and
mov
adc
in
pusha
fcoms
insb
out
or
out
or
popa
icebp
mov
cmpsl
xor
cmp
inc
xchg
push
ret
aad
sbb
xlat
rorb
jp
ljmp
js
mov
xchg
mov
push
mov
adc
in
and
lret
out
or
call
aaa
push
jne
jmp
data16
mov
xor
xchg
or
jecxz
out
adc
inc
lock
pop
cld
cld
addl
mov
pop
jge
cwtl
dec
mov
pop
and
mov
aad
loope
dec
insl
fstpt
pop
inc
lret
lock
mov
into
add
scas
inc
in
mov
sub
cs
dec
jecxz
cwtl
jg
jmp
in
test
int3
out
mov
popa
cld
cmp
pop
out
add
loop
fadd
mov
push
in
dec
dec
lcall
sti
ret
fdivl
fwait
lcall
fs
or
xlat
shl
dec
rol
cli
or
sub
pop
aam
shr
push
fs
push
sbbb
cmp
push
push
dec
push
push
inc
push
aas
fstpt
aad
ds
outsb
jnp
outsl
push
mov
int3
cltd
das
mov
mov
jno
shrb
movsl
outsb
xor
insb
jmp
push
adc
xchg
lods
je
inc
mov
push
push
jns
scas
pop
xor
aas
fdivs
jnp
jg
lret
pushf
push
mov
lds
in
xchg
sbb
mov
jecxz
mov
add
mov
movsb
push
dec
cs
test
mov
jb
add
pop
out
mov
mov
std
push
inc
add
or
push
scas
add
nop
or
mov
inc
sbb
ds
fcomps
or
add
clc
inc
fdivs
popf
leave
pop
shll
in
mov
cmpsb
sti
mov
mov
mov
jecxz
outsl
cmp
xchg
sbb
mov
decl
aaa
inc
or
or
inc
rorl
xor
sti
out
jo
push
jmp
daa
push
dec
inc
push
and
imul
mov
push
mov
push
or
xchg
cmp
push
out
mov
test
mov
insb
and
leave
pushf
or
int
pusha
add
leave
push
rorb
push
in
adc
adc
mov
es
jl
jp
mov
xchg
jle
mov
mov
adc
inc
fistpll
mov
dec
inc
pop
lock
fmull
cltd
xorl
mov
mov
cmp
cs
xchg
jmp
pop
inc
mov
and
mov
enter
insb
sti
arpl
cli
scas
outsb
repnz
and
loopne
mov
fnclex
clc
or
icebp
mov
addb
mov
and
or
in
fadd
pusha
stc
fsubs
or
mov
sbb
xchg
pop
mov
pop
sbb
jns
mov
jp
xor
loop
mov
sub
cs
cltd
imul
cli
dec
sti
inc
rcrb
cmp
mov
and
icebp
call
imul
mov
dec
mov
mov
bound
push
cmp
jmp
mov
stc
and
mov
cld
mov
aaa
das
fwait
rolb
loope
sarb
bswap
mov
dec
outsl
shl
cld
sub
cmp
mov
mov
call
lods
sahf
cmpsl
and
in
out
decb
lods
mov
jmp
push
popa
jecxz
push
loopne
jo
fldlg2
stos
and
push
shll
mov
repnz
clc
cmpsl
push
lods
stc
loope
imul
out
mov
mov
lret
push
fidivl
mov
gs
pop
sub
ljmp
add
mov
std
cli
mov
pop
pop
gs
mov
cmpsl
xchg
mov
mov
adc
inc
xor
jp
sub
movsb
sbb
mov
sbb
mov
dec
fisubrl
insb
mov
cmpsb
adc
jle
mov
mov
mov
pop
inc
in
mov
shll
pop
popa
and
icebp
ljmp
sub
mov
mov
mov
outsl
fdiv
lock
cmpsl
test
ret
sbb
inc
push
jecxz
jbe
fisttpll
scas
and
fsubp
push
mov
push
jns
and
popf
dec
sbb
inc
mov
out
mov
mov
loop
std
sbb
dec
adc
leave
sub
lock
or
int3
or
jnp
cmpsl
in
fisubrl
int
sti
outsl
paddusw
in
mov
out
push
std
mov
xchg
xor
pop
sub
pop
mov
push
xchg
js
adc
std
int
fstpl
aam
arpl
mov
xlat
jecxz
scas
jo
dec
mov
ret
sub
and
add
mov
bound
dec
cli
scas
sub
xchg
sub
pop
lret
sub
gs
aam
xchg
pop
rcrl
mov
mov
je
mov
push
enter
imul
jmp
sub
ret
mov
xor
and
xor
sub
mov
push
mov
mov
cmp
loopne
aad
lods
push
or
inc
jge
arpl
out
jns
mov
add
sub
adc
mov
or
mov
mov
or
xor
cmpsb
mov
movsb
repz
fildl
subb
mov
outsb
movsb
dec
mulb
aad
mov
xchg
push
pop
cmp
sub
ret
or
fcoms
jp
outsl
repz
mov
cmpsb
mov
jae
rolb
cli
imul
leave
mov
mov
mov
scas
add
in
bound
mov
add
adc
sub
inc
test
mov
lret
mov
cwtl
cli
sub
repnz
lods
loop
dec
lret
or
cmpsb
jo
rolb
notl
cmp
push
adc
mov
idiv
fiadds
and
insb
inc
sahf
pop
mov
ret
mov
mov
mov
ret
mov
jne
mov
inc
cmp
call
adc
sub
dec
xchg
mov
je
sbb
movsb
and
lret
loope
mov
jmp
stos
sub
jg
xor
and
fisttpl
sbb
mov
aaa
aam
mov
mov
mov
xor
cmp
mov
out
inc
mov
loopne
or
sub
mov
lret
mov
pop
push
rorb
adc
pop
mov
pop
xchg
popl
dec
xor
cmp
mov
out
cmp
lcall
sbb
lock
or
into
mov
loope
mov
cli
dec
cmpsb
clc
or
jb
bound
mov
and
xchg
cmc
into
xchg
test
mov
adc
or
ret
je
pusha
push
jmp
sub
fidivrl
das
mov
mov
cmp
stos
aas
mov
inc
orl
das
cmp
outsb
mov
sti
mov
add
out
addr16
mov
fidivrl
imul
pop
xor
lret
incl
out
lea
or
insl
mov
mov
ljmp
addr16
lfs
mov
mov
xchg
shrl
fs
test
ffree
fisubrs
das
xchg
decb
shr
mov
sbb
in
jae
repz
pop
daa
clc
mov
pop
cli
mov
mov
imul
or
mov
orb
jl
movsb
daa
mov
pop
sub
cwtl
pop
push
mov
lea
loop
jp
outsb
ja
mov
fnstcw
mov
mov
dec
xor
inc
mov
int
pop
rcll
dec
jae,pn
mov
dec
test
push
sbb
aaa
in
mov
fidivl
mov
sub
mov
xchg
mov
pop
test
lcall
mov
cld
mov
add
and
mov
sbb
sti
fadd
mov
pop
mov
add
or
cli
mov
or
lds
mov
imull
jle
imul
mov
out
stc
inc
test
ret
lcall
push
push
mov
pop
ss
fmull
hlt
pop
sub
jmp
cmp
outsb
or
iret
jl
lcall
jae
inc
out
out
stc
loopne,pn
ljmp
leave
stc
add
arpl
dec
mov
cmp
fcomip
mov
dec
flds
fcoml
or
pusha
stos
shlb
dec
loopne
ss
xchg
xchg
jne
sahf
in
jmp
jmp
mov
icebp
lahf
stos
jns
aas
jmp
call
mov
das
and
xor
sub
mov
jg
das
icebp
loope
fmuls
popa
and
cmp
mov
and
insb
out
inc
mov
sub
out
cmp
xchg
adc
sub
xor
cmp
mov
aam
and
popf
lret
test
inc
insl
mov
and
push
out
mov
adc
inc
jno
test
or
ss
adc
mov
lods
mov
sbb
pop
sub
into
or
add
scas
lds
xchg
int3
fwait
sub
xchg
sub
add
cwtl
into
xchg
lds
jb
leave
std
inc
ret
test
loop
cmp
jg
jb
add
and
xchg
jns
mov
stos
enter
push
out
imul
iret
pop
add
or
cmp
push
dec
pop
cmp
xchg
fmuls
add
test
negl
pushf
mov
mov
mov
or
mov
mov
ret
lods
pop
cmc
push
add
xchg
xor
aaa
or
out
and
sub
aad
imul
ss
add
xchg
nop
xor
cmp
hlt
mov
push
into
push
out
xor
fmuls
out
test
push
les
lods
in
xchg
push
mov
popa
and
vphsubdq
mov
es
dec
pop
or
push
call
stos
push
pushl
jecxz
xlat
aam
add
fs
movsb
shlb
mov
xor
test
jmp
sub
or
jg
mov
mov
mov
or
push
mov
adc
outsl
lods
lds
stos
popa
adc
scas
enter
je
out
rcrl
mov
inc
mov
push
pop
mov
mov
mov
xor
jmp
inc
imul
pusha
movsl
xor
dec
or
fcmove
in
and
in
jns
mov
addb
cltd
inc
mov
ds
jmp
sarb
insl
aas
sbb
xor
mov
mov
mov
ss
xor
mov
dec
push
popf
xor
mov
jno
mov
pop
js
int
push
gs
adc
test
jp
xor
pop
add
rcr
pop
pop
push
mov
sahf
shlb
or
pop
les
mov
fbstp
push
lret
leave
decb
mov
fnstcw
mov
mov
stos
pop
rolb
xor
mov
imul
shll
adc
fstps
add
popa
push
popf
repnz
rcrl
sbb
ja
sub
add
and
roll
add
jnp
cmp
cmp
test
test
call
movb
sub
push
cmc
push
pushl
popl
bt
pushf
cmp
push
mov
lea
ja
clc
sub
sub
shr
add
lea
add
push
movsbl
neg
mov
sub
adc
mov
stc
repnz
jmp
push
lea
jne
sar
and
or
xor
bt
clc
mov
call
not
lods
clc
xor
cmp
bt
sub
call
test
pusha
jmp
mov
pushf
call
lea
ja
dec
mov
call
pusha
pushf
add
mov
pusha
push
push
lea
jmp
lea
jae
pusha
clc
cmc
push
cmp
pusha
movb
call
jns
jbe
shl
sub
xor
mov
mov
bts
mov
mov
ror
push
bt
add
sub
sbb
pusha
bt
shr
dec
ror
sub
shl
mov
adc
add
lea
pop
jmp
cwtl
movsbl
bswap
lea
lahf
mov
mov
call
call
test
call
les
stos
aas
int
cmp
lret
jbe
jns
gs
fmuls
jl
fcmovu
cwtl
or
pop
pop
cli
lcall
mov
push
or
or
frstor
dec
stc
xchg
bswap
xlat
imul
loop
iret
jge
jbe
cltd
popf
aam
mov
mov
out
cmp
or
or
or
cwtl
push
in
mov
xlat
aas
int
lds
push
mov
outsb
loopne
pop
les
mov
shrb
mov
push
cli
mov
aaa
dec
add
and
push
rclb
and
xchg
sbb
dec
rcr
xor
je
sbb
xchg
stos
push
lcall
mov
mov
pop
mov
fiadds
test
insl
lds
push
add
out
pop
sarb
lods
cmp
loopne
lahf
aad
hlt
inc
dec
bound
xor
mov
fwait
mov
mov
mov
inc
push
xchg
mov
inc
cmp
jecxz
ja
xchg
mov
jne
out
xor
loopne
sub
inc
les
in
add
loope
xor
add
cmpsb
mov
fsubrs
mov
mov
inc
int
mov
adc
lahf
and
bound
inc
je
or
mov
test
xor
dec
enter
pop
mov
jne
push
loope
roll
xor
xchg
sbb
fistps
add
loope
test
aas
popa
sbb
mov
fcmovbe
sbb
lock
sti
dec
fs
or
int
adc
xor
xor
int3
dec
aaa
cmp
imul
xor
dec
dec
lds
lea
sbbl
cmp
dec
mov
dec
js
es
pushf
add
mov
test
add
fdiv
repnz
fidivrl
mov
sahf
movsl
jle
push
push
push
ljmp
pop
cmp
cmp
xchg
imul
arpl
or
xchg
jp
in
add
or
int3
adc
adc
ret
fisubl
dec
push
fs
jae
add
xadd
mov
shr
lea
mov
dec
call
faddp
lock
int
cld
or
frstor
pusha
jl
popf
jle
jo
xor
jg
mov
and
xrelease
xchg
popf
gs
fisttpl
pop
cmp
loope
pop
push
js
mov
cmpsb
ret
add
insl
pusha
fcoml
sub
cld
push
cld
aad
dec
imul
mov
jmp
not
not
mov
stc
bt
push
call
movb
lea
call
pusha
call
jmp
stos
xor
jmp
mov
mov
adc
jmp
ret
popa
mov
aas
aas
adc
cmpb
fstl
dec
jns
lea
and
pusha
ja
in
inc
test
out
nop
dec
out
add
lock
js
jmp
in
cmpsb
mov
fcomps
rol
cli
cwtl
adc
sarb
push
in
xor
mov
inc
leave
pop
push
pop
fcom
mov
call
push
test
shl
push
not
jmp
lea
jb
pushf
cmc
push
movl
cmp
pusha
pushf
movb
call
mov
movzbw
bswap
bswap
jmp
add
dec
gs
popa
addr16
outsl
js
add
insl
dec
inc
int
add
stc
jne
gs
xlat
mov
mov
pop
notl
mov
stos
aas
pop
xor
add
divb
pop
xchg
out
sbbl
repz
cmpsl
xor
fisttps
and
lret
dec
dec
mov
iret
xchg
and
and
es
pop
fistl
mov
hlt
dec
add
adc
jne
and
pop
mov
out
cld
mov
or
cmpsl
push
jae
inc
cmpsl
fwait
inc
sub
out
in
ret
jp
out
inc
push
mov
std
sbb
inc
and
lahf
push
movzbw
test
stc
mov
mov
shl
rcr
lea
bts
sub
cwtl
push
bts
push
sub
jmp
add
add
bswap
push
push
push
xor
lea
ror
sub
shrd
push
setge
push
inc
stc
shrd
cwtl
push
and
bsf
sub
movzbw
lea
pusha
mov
jmp
pushl
lea
call
push
lea
jae
mov
jmp
cmp
lea
pusha
pushl
ret
cmp
call
inc
inc
not
pusha
inc
rcl
shl
neg
call
push
call
out
addr16
int
jne
imul
sbb
inc
cmp
mov
popa
ss
add
mov
mov
imul
out
and
jge
mov
or
insl
and
push
jg
sahf
sti
cmc
add
pop
xor
pop
or
jle
inc
pop
pushf
xchg
jne
jge
out
pop
mov
adc
rcl
push
int3
xor
divl
out
jle
imul
ret
pop
aad
jecxz
or
ja
adc
leave
dec
ljmp
cmp
push
outsb
push
sbb
faddl
xchg
sub
stos
imul
repnz
nop
cmpsb
mov
sbb
gs
jb
enter
iret
outsb
mov
bound
test
imul
lret
jl
arpl
inc
inc
je
jp
mov
popf
std
sbb
in
fildl
incl
cld
jmp
loopw
sub
lahf
pop
jne
mov
sub
dec
push
cmp
das
push
out
lret
add
and
dec
jmp
pop
push
lret
mov
xchg
or
ja
fsubr
add
cmpsl
mov
mov
mov
sub
adc
rol
or
sub
add
cmc
xor
stos
cmc
mov
xchg
sahf
pushf
pusha
and
adc
lods
pop
bound
insb
xchg
jecxz
dec
sbbl
mov
jmp
cmpb
xor
lahf
inc
jge
in
mov
or
mov
insb
push
or
fisubrl
fistpl
and
mov
mov
push
pop
cmp
cltd
aad
mov
sbb
push
or
xchg
dec
int3
push
adc
int3
sbb
loopne
mov
and
jno
jae
aaa
gs
sub
or
sub
push
ret
divb
sub
mov
aaa
mov
mov
data16
adc
adc
jae
popa
and
mov
out
add
test
add
jmp
jmp
pusha
pushf
call
lea
jae
stc
stc
call
jmp
jmp
jmp
xchg
jp
pushf
push
pusha
movl
pushf
pushl
movl
mov
lea
jmp
pusha
push
jmp
call
in
or
xchg
push
mull
test
test
in
das
outsb
btr
xchg
pushf
repz
out
cmp
xchg
adc
xor
jl
mov
mov
hlt
pop
out
and
ja
add
xchg
movl
std
mov
lea
mov
movsbl
xchg
mov
movzbw
movsbw
call
push
fwait
ss
int
movsb
or
mov
sub
imul
add
lret
push
sub
mov
les
and
or
stos
xor
jl
icebp
mov
int
mov
pusha
outsb
jb
ret
pop
push
iret
xchg
mov
dec
jmp
dec
clc
pusha
cmp
pushl
lea
je
pusha
clc
pushf
stc
cmp
call
ljmp
lods
adc
sbb
mov
or
shlb
mov
or
clc
aad
aad
ljmp
sub
imul
out
push
and
adc
int
rorl
mov
out
xchg
lock
xor
cltd
sbb
mov
pushf
mov
sahf
inc
mov
push
or
inc
jl
shlb
mov
rcrl
in
add
jp
jp,pn
xchg
push
cli
mov
xchg
stos
jecxz
rclb
pop
jmp
add
dec
outsl
popa
fs
imul
add
fs
jne
not
mov
movzbl
seta
movb
pushf
setg
push
lahf
mov
bswap
not
pop
lea
jge
push
push
movl
push
mov
pushf
mov
pushl
ret
lea
jae
pushf
mov
test
bt
xor
call
lea
jne
adc
movzbw
xor
mov
clc
test
cmp
cmp
pushf
jmp
btc
not
shld
push
shr
mov
clc
clc
push
rcl
pusha
cmp
movzbw
mov
bts
bswap
seta
mov
shrd
mov
dec
sar
rcr
xchg
jmp
push
jmp
pushf
call
pusha
clc
or
movb
pusha
mov
lea
je
pusha
pushf
pop
pushf
mov
movsbw
mov
jmp
mov
mov
inc
not
test
pushl
xchg
ror
call
call
pushf
jmp
mov
jmp
call
jmp
pushf
lea
je
call
cmp
add
push
lea
jne
push
call
jmp
rol
bt
cmc
bt
test
mov
mov
add
test
jmp
inc
not
pusha
sets
jmp
mov
jmp
sahf
gs
dec
int
sbb
or
or
push
gs
xchg
jbe
jne
pop
add
jp
or
and
xchg
jl
insb
orb
jb
add
dec
and
imul
ret
pop
ss
cltd
in
lods
iret
repnz
sub
cmp
shr
loope
inc
outsb
add
jge
lock
lock
aas
sarb
xchg
dec
int
pop
dec
and
sub
or
aaa
int3
mov
in
lods
iret
adc
cmp
inc
pop
inc
stc
push
mov
loope
stos
xor
lods
add
jo
aam
sub
iret
xchg
xchg
pop
les
push
andl
dec
mov
and
pushl
add
mov
jmp
sbb
fdivs
and
xchg
unpckhps
fiadds
scas
jnp
cmp
mov
push
cmp
lret
xchg
pop
jbe
push
mov
adc
dec
pop
pop
push
sbbb
xchg
adc
jmp
ret
dec
int
scas
pop
stos
mov
hlt
sub
cli
cmp
inc
xchg
repnz
mov
fiadds
in
mov
test
and
movsb
clc
xchg
imulb
inc
mov
std
pop
sbb
daa
test
jo
dec
push
ds
jecxz
cmp
xchg
and
mov
jnp
in
pop
mov
push
sarl
out
xchg
rcrl
fstps
shrl
mov
sub
cmp
mov
push
pop
es
rorl
in
rcrb
insb
xchg
jge
pop
inc
fldcw
mov
icebp
outsb
add
test
ljmp
out
sub
bt
cmp
pushf
mov
lea
ja
bt
call
mov
movb
movb
push
lods
bt
call
shr
pushf
movb
lea
je
pusha
pusha
jmp
add
pushf
pushf
lea
jmp
xor
movw
sub
jae
sub
bt
bt
xor
cmp
jmp
call
lahf
out
dec
int
std
lahf
mov
add
inc
aas
and
mov
xor
mov
inc
push
and
pushf
pop
sbbl
cmp
jle
jne
bound
sbb
andl
loopne
bound
jb
mov
add
and
pop
stc
test
cmp
push
test
jmp
pushl
movl
pushf
call
push
insl
dec
dec
int
inc
cmc
pop
xchg
or
test
lods
push
push
add
lea
jns
and
jbe
popf
fsts
adc
mull
loope
inc
movsb
sti
add
push
hlt
fldl
add
pop
adc
sub
sarl
and
adc
arpl
inc
jb
add
sub
call
lea
call
pusha
jmp
pushl
pushf
push
lea
je
test
cmp
jmp
repz
pusha
movl
mov
movb
movl
pusha
lea
jmp
mov
sbb
xchg
gs
xchg
cmp
js
enter
mov
push
lods
aam
es
pushf
mov
push
sbb
cmp
mov
xlat
in
arpl
pop
xor
cmp
lds
int
jle
stos
test
sub
dec
int
or
data16
scas
test
cld
push
rcrl
jl
enter
mov
push
sbb
stos
enter
xchg
pop
gs
das
sub
jns
outsb
out
pushf
outsl
jp
imul
jle
cmp
in
add
add
in
fisttps
btc
mov
clc
call
mov
decb
xchg
packsswb
jae
jecxz
adc
stos
push
mov
cmp
fwait
daa
push
cmp
sbb
mov
mov
add
jmp
loop
inc
aas
rep
mov
adc
lock
das
xlat
rorb
adc
inc
xchg
cmp
fwait
cwtl
fadds
add
stc
rcrl
xchg
repnz
pusha
fsubrs
lock
sub
pop
xchg
cmp
inc
test
sub
fcom
fldcw
rcrl
xor
rcrl
ljmp
aaa
das
and
test
lcall
or
jns
fiaddl
test
push
and
sub
mov
adc
xchg
and
mov
xor
bswap
adc
in
sbb
bound
xor
sarb
add
sti
arpl
jno
mov
int3
and
push
sbb
cld
sarl
pop
push
mov
jb
aad
lahf
cmc
sbb
sub
xor
movsb
lcall
xchg
add
xor
xchg
inc
pop
pop
cmp
xor
call
pusha
movl
push
pushf
lea
jmp
mov
xchg
add
add
sbb
push
cmp
leave
into
dec
loop
or
nop
jns
fdiv
flds
push
andb
rcll
inc
mov
push
pop
push
cmp
inc
aas
add
cmp
jno
outsl
fldl
pop
jne
cmp
pop
xchg
test
ret
aaa
ljmp
into
cmpsl
mov
push
dec
lret
xor
fwait
jae
test
mov
int3
xor
and
xor
and
cmp
aad
and
pop
mov
mov
dec
lock
push
and
test
sub
mov
lret
test
push
push
addr16
inc
sbb
sbb
add
and
gs
push
lret
lods
xchg
gs
mov
sub
sbbb
or
inc
and
dec
fwait
movb
mov
mov
mov
jae
outsb
mov
inc
or
imul
popa
insb
repz
sbb
divl
lods
cmpsl
or
xor
xchg
dec
push
pop
cmp
or
or
aas
xor
mov
mov
sbb
stos
jae
stc
iret
sbb
jae
shrb
rcrl
xor
jle
mov
or
ret
push
adc
dec
xlat
mov
or
sub
das
dec
sub
enter
dec
cmpsb
lods
ret
mov
mov
mov
adc
cld
mov
inc
pop
xchg
das
adc
jno
call
xchg
add
ss
sub
sbb
cmp
insb
test
dec
push
pushf
jge
cli
mov
inc
add
out
sub
cmp
mov
out
push
inc
inc
daa
xchg
inc
push
imul
in
in
xchg
and
sbb
xor
and
lea
fcoml
fildl
nop
xchg
faddl
xchg
mov
fcomi
fwait
inc
xor
push
push
inc
or
mov
scas
inc
push
jge
mov
call
jge
pop
sahf
mov
in
push
cmp
sbb
ds
lret
loopne
push
int
xchg
neg
cmpsl
mov
or
xlat
popa
xchg
and
out
push
pop
in
in
mov
xor
xchg
jmp
sub
je
xor
inc
sbb
inc
push
pop
mov
out
xchg
cli
jbe
cltd
lret
push
push
jno
cmpsl
cmp
mov
out
xchg
cltd
jne
mov
lret
data16
sbb
lret
adc
and
cli
in
in
cmpsl
mov
and
ret
sbbb
jmp
add
cli
jno
ja
loope
andl
icebp
or
mov
dec
inc
das
jmp
cli
adc
dec
cli
inc
test
mov
imul
xchg
mov
popf
mov
inc
lret
out
lock
pop
mov
lea
jmp
lahf
add
push
int
cmp
ficoms
mov
or
adc
ss
xor
jb
inc
jmp
or
adc
mov
mov
cmp
nop
xor
movb
popa
or
cmpsl
cmp
adc
subl
mov
rcll
outsl
and
andl
fidivrs
jo
pop
xchg
std
adc
sub
sub
icebp
add
ss
std
xor
jno
push
int
pop
out
cmp
cmp
loope
jno
sarb
mov
fwait
xchg
pop
ja
jae
xchg
les
push
es
out
dec
ljmp
sti
loopne
xlat
ss
push
out
stos
mov
adc
add
jbe
movsb
jmp
jb
js
std
jecxz
out
mov
fs
jae
push
movb
call
pushl
jmp
jae
push
push
int
pop
mov
scas
mov
mov
xlat
sbb
inc
in
nop
out
jmp
jl
sub
inc
xor
cmp
cli
jmp
add
mov
fsubs
push
jle
dec
or
shl
add
adc
mov
pop
mov
add
cmc
add
push
ret
mov
rorb
ret
jo
push
pusha
movl
mov
lea
jmp
lea
call
call
movw
mov
lea
movzbw
mov
mov
call
movl
pusha
mov
pushf
lea
jmp
mov
call
clc
bt
bt
cmc
imul
call
movl
mov
call
lea
jne
shrd
ror
cmc
and
mov
stc
rcr
shl
movzbw
sub
inc
mov
stc
clc
cmp
sub
pushf
pushf
movb
movb
lea
jmp
xor
fisttpll
cmpsb
sbb
mov
pop
xor
and
fiadds
cmpsb
add
cmpsb
cmpsb
mov
lret
mov
ja
push
std
enter
popa
pop
mov
push
int3
rcll
inc
mov
je
xor
idivl
xor
inc
mov
shlb
ds
xor
lods
pop
xchg
jecxz
xchg
cltd
inc
sub
xchg
das
jle
pop
lods
imul
outsl
test
add
and
mov
scas
adc
int
mov
xorb
mov
or
movl
and
not
mov
cmp
cmp
jmp
push
outsl
dec
push
int
pop
sbb
pop
dec
jnp
cmp
imul
mov
sbb
cli
mov
imul
pop
into
mov
pop
and
add
sarb
xor
cmp
fmul
bound
cltd
jge
in
cli
or
pop
pop
inc
and
addb
jns
and
popf
sti
aam
jge
data16
pop
out
les
js
cmpsb
in
subb
push
dec
cmpsl
dec
inc
adc
mov
lcall
test
and
pop
fcomps
sub
and
xchg
loopne
or
lds
add
xor
pusha
pushf
lea
call
pushf
pushf
lea
jae
pusha
mov
dec
jmp
loop
mov
int
cmp
aam
fcom
jns
xorb
mov
mov
and
xlat
lahf
lock
bound
pusha
mov
mov
jne
xbegin
add
filds
fdivl
faddl
add
pusha
sub
dec
mov
sbb
rcrl
lock
sbb
mov
pop
int
test
xchg
mov
pop
jmp
mov
cltd
mov
push
jo
or
bound
xchg
pusha
cmpl
outsb
sahf
pop
jbe
in
jb
pop
aas
pop
and
iret
sub
add
stos
dec
sbb
mov
push
pop
mov
call
test
cld
xchg
fcomip
lock
dec
mov
dec
dec
jb
mov
jmp
iret
mov
pusha
je
pusha
mov
insl
jae
loop
xor
sub
or
jge
sbb
adc
push
int
add
xchg
and
lret
cwtl
notl
mov
mov
loope
out
mov
scas
bound
jp
push
fwait
pop
imul
mov
fidivrl
pop
pushf
push
mov
mov
push
mov
mov
jmp
int
jno
cmp
jo
xlat
mov
xchg
sbbl
add
jno
sbb
or
dec
jbe
inc
pop
outsb
das
je
jl
xchg
cmpsb
xchg
repz
int3
inc
mov
cli
xchg
mov
test
adc
lret
pusha
mov
call
not
setbe
stos
jmp
or
mov
sbbb
and
cwtl
jecxz
adc
xor
mov
rcl
xlat
aaa
or
jnp
stos
jns
testb
fcoml
push
xchg
jp
lds
aaa
pop
mov
mov
cmp
sub
pop
mov
dec
push
aaa
movsb
and
sbb
and
adc
cmp
int3
pop
int
xchg
sbb
nop
inc
jo
notl
mov
pushf
mov
jns
fbld
dec
jp
scas
repz
fcompl
dec
call
rclb
add
pop
cmpsl
inc
lret
dec
jno
inc
jbe
rcll
mov
adc
cmp
jnp
shr
dec
das
dec
sub
arpl
mov
fidivs
cmc
cmp
mov
les
negl
sub
cmp
add
jno
movb
pushl
pusha
adc
call
lea
jne
bts
aaa
sub
add
cmc
adc
lahf
mov
shl
add
call
mov
pusha
pushf
pushf
lea
jmp
lea
je
call
or
loop
int
out
mov
mov
inc
or
xchg
ret
stc
xchg
add
jecxz
int
mov
and
into
int
mov
jge
mov
fiaddl
adc
inc
cmp
sbbl
mov
mov
xchg
sub
cld
push
xchg
push
xor
xchg
mov
dec
pop
outsl
push
pop
xor
push
xor
cmc
jno
dec
mov
xchg
in
inc
int
cmp
push
pop
mov
dec
arpl
jmp
jmp
pushf
movl
pushf
pushf
lea
jmp
lea
je
add
cmc
adc
add
rol
not
sub
movzbw
bsr
shr
movsbw
rcr
push
bt
mov
sbb
dec
add
rol
add
shl
rol
bts
shl
add
bsf
sub
mov
test
call
imul
cmp
cmp
test
stc
add
pushf
lea
jmp
lea
jne
pusha
btr
sbb
mov
sar
sub
bsf
stc
adc
lea
lea
add
pushf
test
jmp
cmc
sbb
mov
test
clc
cmp
xor
test
clc
sub
clc
pushf
cmp
xor
cmc
stc
stc
not
call
pusha
mov
push
lea
jae
push
jmp
movl
pushf
pushl
movb
lea
pusha
movl
call
inc
mov
push
pusha
adc
lea
pushf
pushl
jmp
jmp
pusha
shl
mov
pushl
cmc
pusha
jmp
pushf
dec
push
pushl
lea
jp
pusha
lea
jne
ror
mov
jmp
push
jmp
icebp
or
jne
push
leave
hlt
sbb
or
cmp
cmp
icebp
mov
cmp
leave
loope
xchg
mov
scas
mov
inc
xchg
dec
les
cmpb
jle
test
repnz
xchg
cmp
jmp
stos
cs
mov
jno
sarb
into
push
cli
cmp
push
jne
push
add
addb
addb
jg
int3
jl
lock
mov
xchg
jnp
mov
and
or
mov
mov
mov
fiadds
cli
xor
imull
mov
daa
cmp
xor
and
pop
addr16
mov
xchg
xchg
mov
mov
outsl
cmpsl
mov
mov
inc
sub
dec
mov
aad
fwait
or
sbb
push
fiaddl
in
out
inc
or
mov
jle
adc
loopne
add
sar
cmpb
lods
aas
jl
in
insl
pusha
lea
jb
call
add
loopne
add
push
add
loopne
add
pop
add
add
add
add
adc
push
rol
cmp
mov
push
add
push
push
ror
movw
movw
inc
stc
test
clc
cmc
cmp
jmp
add
inc
gs
outsl
fs
gs
imul
add
test
push
pusha
movl
mov
pushf
pushf
movl
movb
pushf
lea
jmp
adc
rclb
int
mov
mov
scas
lds
pushw
and
in
mov
in
or
cmpsl
int3
pop
xchg
rclb
ss
sub
mov
std
sub
mov
dec
scas
inc
cli
cmpsl
xchg
call
bt
xor
push
clc
bt
push
repnz
pushf
call
mov
pop
pop
int
push
fnstenv
inc
sbb
es
xor
xor
xor
mov
xor
sub
push
adc
and
incb
cmpb
adc
mov
es
xchg
call
sub
xor
add
rorl
pop
nop
mov
sub
cwtl
xor
and
dec
pop
int
pop
fidivl
cmp
jno
mov
jmp
pop
negl
cld
addr16
sti
or
movsb
xchg
and
push
sahf
sti
sti
ret
mov
imul
jne
mov
mov
pop
imul
sarb
out
or
out
imul
subb
repz
jg
adc
ja
inc
mov
pop
out
pop
std
mov
xor
mov
adc
movsb
or
nop
mov
xchg
repnz
out
std
out
push
pusha
hlt
insl
pop
out
loope
xorb
fildl
xor
pop
pusha
pop
or
push
cmp
push
out
sbb
es
mov
push
jnp
mov
fidivl
test
inc
lea
ja
jmp
movl
push
lea
jmp
repnz
cmp
mov
jne
add
orb
mov
push
sub
push
jns
jbe
ret
cli
shlb
mov
or
popa
lahf
inc
pop
push
mov
rdmsr
loope
xchg
sub
cwtl
imul
mov
push
scas
dec
sbb
sub
jl
jmp
mov
pop
lea
popa
cmp
test
push
ret
push
ja
lcall
imulb
jmp
and
or
xchg
testl
adc
pop
push
call
push
movl
pusha
pushf
mov
lea
jmp
mov
movl
mov
push
pushf
pushl
lea
jmp
orb
pusha
int
sub
inc
mov
idiv
mov
or
fsubrs
push
ret
movsb
je
push
mov
testl
lret
lcall
xchg
scas
or
cwtl
add
pusha
push
gs
xchg
pop
stos
les
roll
dec
cli
or
mov
iret
icebp
scas
and
stos
subb
int
mov
cli
xchg
or
shr
inc
movsb
sbb
mov
jp
push
mov
lds
pop
pop
push
push
xchg
sbb
cmc
jae
mov
inc
loope
rcr
inc
add
les
dec
mov
pushl
cmp
sbb
pusha
pushf
daa
push
add
mov
and
fsts
stos
gs
pop
pop
fsubr
xchg
mov
inc
outsb
popa
int
jl
jb
pop
punpckldq
adc
pop
mov
mov
inc
shl
jno
in
test
pop
xchg
pop
cmc
sbb
test
jp
or
insb
and
inc
jg
jle
mov
add
mov
pop
shlb
loopne
adc
dec
dec
js
jb
add
push
pusha
mov
in
cs
sub
jbe
lods
push
enter
sbb
insb
fdivrs
sti
in
inc
cmp
cmp
dec
stos
cmp
or
or
clc
rcl
neg
mov
push
and
cmp
pusha
add
mov
pushf
lea
jmp
mov
movl
pusha
movb
mov
pushf
pushl
push
pushf
pushl
ret
xor
test
xchg
aad
push
pop
cmc
mov
jle
fs
scas
repnz
int
lcall
repnz
push
clc
mov
xchg
jne
rol
nop
and
mov
popa
out
lods
inc
jns
pop
popf
jb
lds
dec
loope
ret
and
jmp
mov
mov
popf
stos
xor
imul
pop
pushf
aam
arpl
dec
repz
inc
xchg
xor
stos
inc
js
cmp
dec
xchg
push
cmp
cmp
scas
ljmp
ds
sarb
shrb
cmpxchg
call
lock
push
ss
les
push
loopne
push
sbb
das
cmpsl
fdivrl
loope
push
lock
cmc
fcmove
ss
and
aam
sti
adc
and
clc
fnstcw
xor
sbb
push
pusha
lea
je
rcl
rcl
rcr
mov
mov
push
add
bsf
shld
movsbw
bsf
mov
cmc
test
pushf
pusha
movw
jmp
test
bt
repnz
call
add
xor
sub
bswap
add
btr
mov
test
stc
pushf
movb
shr
test
cmp
jmp
mov
movb
cmc
bt
clc
add
clc
call
mov
pushf
jmp
push
jmp
add
jp
int
push
mov
push
out
mov
push
lods
mov
cmp
add
sbb
mov
data16
repnz
add
push
ret
fcomps
or
js
aaa
mov
or
rcll
fwait
cmc
insl
in
js
push
xchg
dec
jge
cmpsl
lret
rcr
ljmp
enter
and
aad
xchg
mov
movsl
xchg
and
jo
pop
jo
ja
leave
ret
pop
cmp
fdivs
iret
dec
sub
xchg
out
inc
scas
nop
std
xor
pop
in
push
out
iret
cmp
stos
jmp
push
call
or
xchg
fwait
es
lds
inc
cmp
mov
xor
mov
xor
push
push
jg
and
dec
add
loope
pushf
jl
jl
aaa
mov
hlt
adc
subl
out
push
or
lods
and
dec
sub
xchg
test
data16
jae
int3
ds
aas
repz
mov
push
add
repz
pop
aad
push
loope
les
push
subl
mov
jl
sbb
inc
iret
ss
sub
sub
dec
mov
es
mov
xchg
aad
notb
int
mov
mov
jg
lds
adc
xchg
insb
cld
in
push
movl
daa
xorb
push
or
pushl
and
or
jmp
xchg
stos
arpl
outsb
sub
add
bound
cwtl
ja
xchg
cmp
push
fcomi
enter
sbb
sbb
mov
call
dec
inc
jp
aas
icebp
mov
orl
nop
pop
fdivrs
rcrl
mov
int
and
and
aas
xchg
out
repz
popl
mov
xchg
mov
dec
inc
push
dec
and
mov
pusha
jmp
push
sub
push
dec
jge
int3
andl
add
repz
pop
pushf
push
jno
sbb
mov
adc
jno
jo
mov
mov
imul
pop
fadds
das
int3
jecxz
cmpl
push
addr16
mov
packsswb
mov
sub
sbb
push
cmp
sub
inc
cwtl
lahf
lods
dec
push
lcall
sbb
aad
xor
scas
mov
pop
shrb
int3
jl
cmp
imul
mov
shl
xor
xor
imul
mov
popw
dec
and
addr16
jmp
adc
aad
mov
addb
push
fchs
ret
outsl
adc
mov
cmpsb
out
sub
dec
repz
daa
call
sub
ljmp
push
mov
sub
popa
push
mov
add
clc
jne
jnp
cmp
nop
mov
or
cmpsl
mov
fdiv
addr16
in
dec
push
mov
aad
jbe
ficompl
or
add
sbb
daa
and
fildl
xlat
jp
mov
cltd
ja
std
std
jo
mov
cmp
jae
fmuls
shlb
popf
inc
pop
jno
cmp
ja
ja
pop
add
rcll
push
pop
dec
xchg
bound
sbb
mov
loopne
pusha
lods
test
adc
add
cmp
mov
xor
inc
int3
mov
push
sub
pop
adc
stos
or
dec
in
subl
jg
jb
rcr
or
insl
jno
mov
sub
jno
call
push
jmp
jmp
int3
aaa
mov
sahf
adc
and
inc
mov
jecxz
enter
repnz
mov
in
fiadds
je
mov
fdivs
cmp
jnp
loope
xor
cmp
jle
push
lods
pop
pop
notl
scas
push
in
sahf
repz
push
mov
outsl
xor
pop
shl
ljmp
movsb
cs
mov
lods
mov
sub
xor
mov
push
or
cmpl
jo
int3
mov
cmp
rcrb
add
xchg
cmp
sbb
pop
cmp
addr16
call
pop
mov
mov
push
mov
lea
jmp
dec
jmp
call
jmp
call
add
adc
not
sar
mov
sub
jg
shr
rcl
rcl
add
inc
jmp
scas
test
push
xchg
scas
jae
mov
jge
daa
mov
sbb
xchg
insb
cld
push
xchg
fisttpl
lcall
mov
mov
std
out
fcoms
lods
movb
push
mov
test
popf
pop
int3
and
xchg
and
jb
and
es
lretw
push
cmp
les
mov
and
ja
jmp
jmp
lea
jne
push
call
mov
movw
movb
pushl
ret
jmp
cltd
xchg
cmp
insb
push
pop
icebp
int
sbb
add
push
stos
cwtl
fistl
mov
out
cmp
lds
jns
js
push
mov
loope
dec
jno
outsb
pop
pop
fistpll
int3
cwtl
lcall
pop
mov
ss
sbb
dec
inc
dec
and
repz
cld
ret
out
data16
jb
dec
out
dec
cltd
push
sbb
add
add
add
add
add
mov
add
mov
add
lret
sbb
add
add
push
add
scas
loop
iret
call
or
mov
popf
in
in
xchg
mov
lods
loop
add
dec
out
push
ret
pop
lea
mov
dec
ljmp
addps
test
push
sbb
jp
push
iret
call
test
push
mov
std
add
and
add
jo
and
loop
fs
xchg
data16
xchg
vprotw
add
ds
imul
add
or
push
and
nop
add
mov
icebp
test
icebp
popa
lds
sbb
jl
fdivr
pop
icebp
mov
in
leave
dec
mov
and
in
xsaves
pop
ljmp
test
pop
add
shrb
cli
aaa
es
daa
push
rorl
stos
aad
divb
cmp
xlat
in
in
sbb
xor
cmp
add
daa
ss
and
add
jne
jmp
lret
mov
fs
mov
pop
adc
mov
push
and
movsb
mov
nop
out
adc
movsw
mov
or
repz
aad
and
mov
mov
sub
mov
dec
jg
gs
xchg
mov
ror
gs
outsb
mov
leave
xor
int3
insb
fildll
loope
ds
in
add
dec
push
xorb
mov
cmp
in
push
or
add
int3
mov
add
push
arpl
fs
push
push
and
sub
pop
mov
mov
int3
mov
jmp
mov
ss
push
pop
repz
add
cmp
add
sbb
in
les
mov
mov
cs
push
cmpsl
dec
icebp
cli
pop
sbb
daa
mov
lret
mov
mov
cld
adc
movsb
jp
jmp
idivl
dec
inc
mov
jmp
sti
jo
es
adc
das
lock
std
outsb
push
fmul
adc
cmp
push
imul
or
bound
aas
or
cmp
inc
clc
vpsrlw
inc
sbb
shlb
out
fsts
push
xchg
adc
jecxz
addr16
sub
add
xor
dec
inc
loop
test
jo
and
add
mov
data16
jno
mov
loope
popa
stc
adc
push
loop
fistpll
mov
popa
and
jl
fs
push
or
push
dec
je
cmc
adc
sub
or
add
out
jnp
rorl
mov
dec
imull
stc
rorl
push
movsl
xor
push
mov
fcmovnb
lahf
mov
outsl
jp
sub
dec
push
jl
jge
fldcw
popa
and
fcmovu
jmp
pop
mov
into
or
in
in
cmc
lock
fmuls
dec
repz
push
arpl
leave
and
out
mov
pop
and
imul
xchg
jns
imul
adc
adc
xchg
add
adc
jns
jne
jnp
testl
clc
loope
pusha
arpl
pop
fsqrt
or
adc
fisttpl
mov
dec
dec
movsl
stc
addr16
jg
int
shl
nop
loope
lret
inc
and
inc
add
aas
fs
loop
add
mov
sbb
fcoms
data16
mov
add
jecxz
xor
mov
push
cmp
cmp
xchg
mov
adc
add
in
mov
dec
pop
fs
lea
xchg
popa
xchg
adc
scas
mov
test
dec
fsub
movsl
jae
or
lock
icebp
hlt
fwait
and
test
or
adc
aaa
fldenv
xchg
mov
push
add
nop
leave
aad
adc
add
xchg
stos
ficoml
aaa
shl
add
cli
sub
in
dec
push
lret
add
lods
mov
movsl
cmp
add
mov
faddl
cmp
loope
jo
dec
fdivrs
lea
push
adc
test
xchg
iret
add
ret
int
sti
dec
int3
cmp
mov
ret
in
dec
fadds
lret
pop
sbb
xchg
add
jle
mov
imul
sbb
insb
dec
jg
dec
in
fs
call
cmp
movsb
push
sbb
xchg
dec
mov
imul
add
xchg
popa
insl
and
cmpsl
and
in
xlat
dec
fbld
push
add
inc
mov
cmp
add
and
lea
jns
stc
outsb
orl
movsb
out
dec
or
int3
dec
dec
add
loopne
mov
pop
cmp
sub
scas
jge
aas
dec
jne
ljmp
mov
addl
addr16
ret
xchg
mov
enter
pop
mov
mov
or
dec
add
pop
or
adc
shlb
adc
mov
and
std
shlb
cld
sbb
clc
dec
shlb
jo
pop
cld
mov
clc
mov
fscale
into
mov
fs
rolb
sub
das
pop
or
dec
sarb
mov
cmp
mov
in
les
vpunpcklwd
rcll
mov
push
push
mov
scas
mov
add
mov
arpl
inc
sti
mov
loop
jnp
insl
jecxz
mov
out
xor
fs
cmp
and
inc
cltd
inc
lret
mov
mov
iret
xor
aad
fcoms
clc
push
lret
fstpt
pop
dec
aad
mov
sbb
out
popl
inc
sbb
cmp
mov
daa
xchg
add
sbb
mov
inc
int
mov
jns
out
cmp
mov
add
mov
in
push
adc
scas
dec
loopne
leave
lret
inc
lds
push
fisubrs
testl
lds
rolb
adcb
int3
and
mov
jmp
mov
cmc
sbb
insl
fldt
push
push
mov
jae
inc
repnz
pop
and
jne
inc
xor
sub
into
add
in
bound
add
xchg
outsb
adc
test
jecxz
fwait
lea
popa
daa
movsl
fldl
xchg
sub
or
push
aaa
xchg
rcll
ret
sbb
dec
in
dec
adcb
out
pop
insl
in
push
fsub
popa
lret
dec
bound
in
leave
xorl
mov
rclb
jnp
cmp
cmpsb
movsl
popf
pushl
sub
inc
jmp
shl
mov
xlat
shrb
cmp
into
add
pop
lret
cmc
cmp
sbbl
add
mov
insl
mov
lret
cmpsb
mov
push
cmpsb
sub
iret
test
or
adc
jle
lea
leave
and
mov
mov
hlt
mov
push
fimuls
and
sub
testl
inc
mov
mov
in
mov
scas
in
das
dec
xchg
jo
or
iret
mov
jns
inc
add
addl
or
bound
dec
in
mov
mov
cmpsl
sarl
and
pop
pop
clc
adc
stos
add
push
add
dec
push
scas
ds
inc
xchg
scas
in
xor
dec
push
dec
mov
or
and
cmp
mov
mov
pusha
sbb
call
xor
test
fadd
pop
fisttpll
sub
cli
std
enter
in
jbe
xor
dec
mov
out
movsb
sub
int3
inc
iret
push
jecxz
or
sahf
and
lret
cmp
push
xor
push
jns
mov
xchg
out
shll
stos
movsl
leave
cmpb
mov
fldl
pop
out
mov
mov
fscale
xchg
or
pusha
xchg
jge
bound
jg
jnp
dec
xlat
loope
and
sub
lock
adc
in
add
daa
lock
loop
icebp
or
pop
push
pop
rcr
inc
pop
mov
std
jo
and
fisttps
jo
add
mov
jnp
cmp
loope
insl
test
popf
movsl
and
dec
lea
popa
mov
and
and
mov
mov
xchg
lods
inc
in
lock
fsubl
push
sbb
sti
and
mov
lods
xor
in
pop
adc
and
cmp
push
test
stc
incl
sbb
jl
popa
sbb
cmpsl
leave
sub
sbb
mov
insb
es
hlt
jne
sarl
sub
or
mov
in
mov
hlt
loop
mov
lods
lock
insl
cmc
add
enter
cmp
or
pop
jp
pop
mov
faddl
add
dec
xchg
dec
push
push
shll
dec
add
scas
pop
push
and
fcompl
pop
das
rcrl
fs
cmp
dec
push
sarl
mov
pop
jmp
arpl
dec
roll
inc
rcl
shlb
test
flds
jmp
ds
add
pop
push
cmp
push
fisttpl
mov
pop
fwait
test
leave
iret
mov
mov
ret
mov
and
cmp
enter
inc
sbb
jg
xlat
sbb
imul
or
cli
push
cmp
stc
pop
xchg
inc
pusha
stos
sbb
cli
jmp
mov
sbb
add
cmp
xchg
jmp
loope
movsb
sbb
sti
test
adc
mov
sti
iret
mov
sbb
testl
sub
fldenv
clc
mov
push
sbb
cwtl
movsb
outsb
out
push
lds
jnp
mov
pop
imul
pop
outsb
jbe
cmpsl
shll
mov
inc
push
in
cmp
add
repz
ror
mov
jmp
mov
adc
push
and
aam
popf
pusha
test
mov
mov
cmp
push
mov
leave
mov
test
xchg
or
adc
add
add
xchg
pop
push
add
lods
or
ror
jns
jno
int3
dec
cltd
fmull
fldenv
jbe
xchg
stc
out
andb
pop
sbb
jg
fadd
loopne
sarl
in
inc
dec
cld
das
mov
xor
sti
sarl
lock
les
shll
test
xchg
push
movsb
enter
ffree
push
jae
cmpsl
mov
jmp
inc
clc
popl
push
and
mov
mov
pop
push
xchg
dec
fistl
mov
int
sbb
hlt
pop
pop
mov
add
icebp
mov
add
xchg
mov
xchg
inc
aam
lahf
stos
lds
inc
add
rorl
add
dec
iret
loop
push
jmp
scas
cli
push
add
into
cmpsl
add
mov
out
mov
pushf
std
sub
jne
jo
addr16
sub
xchg
imul
bnd
or
ret
or
dec
mov
rorb
push
js
lea
cmpsb
dec
cmp
cmp
xlat
cmp
or
lcall
repnz
aam
lcall
les
jge
es
arpl
imul
sbb
pop
test
push
mov
push
fbld
cli
insl
jnp
mov
fs
dec
lcall
rcll
mov
add
shl
cmc
xchg
add
lods
pop
nop
cmpsl
or
jno
imul
movsl
pop
popa
data16
lods
inc
fdivl
jp
sahf
shll
sub
mov
xchg
stos
imul
in
arpl
push
nop
dec
and
lock
sub
dec
pop
cs
mov
jno
mov
add
sub
jmp
sti
add
out
dec
enter
sti
rclb
jae
incl
popl
das
movsb
mov
push
cld
clc
repz
jno
jge
ret
dec
dec
out
xchg
and
int
pop
xor
aaa
add
push
std
mov
ret
loop
es
leave
sub
add
xchg
push
fwait
sub
pop
outsb
jg
add
dec
inc
and
sub
push
fs
test
test
mov
cmp
iret
test
or
lahf
sbb
fistps
lret
lods
and
sub
add
add
dec
mov
out
or
das
xchg
inc
cltd
jnp
mov
add
push
sahf
sub
test
adc
push
movsb
xchg
sbb
push
enter
xor
add
ret
push
js
xchg
hlt
cwtl
jno
pop
stos
test
xor
sarl
hlt
pop
or
outsl
in
add
rorl
xchg
in
mov
mov
pusha
cld
dec
mov
mov
rcrl
lret
rorl
push
sahf
es
popf
in
loope
addr16
xchg
mov
stc
sbb
add
lahf
shr
xchg
lea
mov
sub
mov
arpl
popa
inc
lods
fldenv
dec
or
mov
ret
cmc
roll
ja
cmpsl
clc
mov
xorl
int
lcall
lock
fdivs
lods
movsl
lret
test
lea
xor
mov
cmp
and
sahf
popf
or
inc
ds
or
cmp
jle
dec
xor
sbb
xor
int3
jmp
mov
lea
add
fcomps
pop
in
push
leave
fisubrl
stos
mov
push
dec
icebp
loope
mov
mov
mull
cli
rorl
mov
or
adc
add
outsl
mov
cltd
fwait
dec
or
loope
dec
mov
jae
aad
dec
jmp
xchg
in
gs
mov
loopne
fstpt
lods
and
ss
outsl
mov
or
sbb
movsl
mov
fisubs
cmp
adc
cli
push
leave
pop
fucom
pushf
add
lods
outsb
adc
xlat
sbb
sub
jbe
push
test
testb
fldcw
jbe
and
in
stos
hlt
mov
push
mov
adc
loope
sub
pop
adc
xchg
andb
cld
hlt
sub
popf
fnsave
out
insl
mov
adcl
sub
push
jp
int
test
sub
neg
decl
xchg
sbb
popa
pop
divl
dec
stc
add
test
dec
test
mov
gs
inc
test
ret
outsl
in
incb
outsb
or
seta
sbb
mov
add
mov
sbbl
fs
mov
mov
inc
add
push
cli
cmp
std
sbb
cli
lret
clc
mov
add
mov
lahf
xor
fldl
xchg
push
mov
jnp
xchg
loopne
adc
cmpsb
std
pop
nop
mov
subl
out
jns
jo
and
icebp
mov
mov
add
ret
pop
sbbb
mov
add
lret
fmull
add
sbb
leave
sub
or
sub
cmp
jmp
imul
cmpl
into
ja
dec
inc
movsl
mov
jmp
adc
push
add
cmp
leave
push
push
imul
pushf
lcall
pop
clc
sub
movsl
into
movsl
pop
mov
aas
or
add
mov
mov
cmp
jg
and
inc
int3
imul
loope
mov
shrl
xchg
jmp
xor
out
xchg
imul
xlat
and
or
repz
rcll
pop
nop
jmp
or
dec
push
or
cmp
scas
cmp
xchg
clc
dec
mov
push
call
flds
jecxz
and
ds
and
das
mov
jnp
and
ud0
cmp
mov
mull
jo
sub
mov
mov
in
pop
das
jmp
int3
rep
call
nop
jb
mov
popf
in
les
or
out
jge
aas
and
push
ret
in
dec
xor
xchg
push
stc
adc
clc
adc
daa
lret
fistpll
outsb
add
jbe
cmpsl
pop
stos
sti
and
test
add
or
bound
cwtl
add
lret
mov
loopne
dec
jae
out
test
iret
cli
loope
add
push
mov
pop
adc
insl
lret
out
push
aas
lds
pop
nop
pop
cmp
sbb
loope
imul
mov
add
mov
mov
add
test
mov
sub
push
cmp
push
daa
xchg
bound
dec
fistl
xor
aas
fimull
test
push
out
imul
mov
fimuls
inc
pop
jno
push
iret
xor
mov
mov
scas
arpl
aad
and
mov
and
push
and
test
movsl
add
leave
inc
add
pop
jecxz
fsubr
fadds
push
lods
sub
cmpb
lds
inc
int
loope
sahf
mov
enter
jl
popa
mov
mov
cmp
es
pop
push
sub
mov
les
mov
hlt
add
pop
cmpsl
ret
addr16
ja
subl
or
add
or
addr16
out
add
lret
sahf
into
sar
in
cmc
push
mov
cmp
loopne
and
lock
push
sbb
and
mov
xor
jle
loopne
push
adc
mov
fwait
ds
lds
mov
or
jne
leave
lea
pop
out
and
push
aad
inc
arpl
add
mov
fs
adc
shll
mov
bound
fimuls
adc
push
and
das
mov
mov
push
outsb
jns
mov
jne
mov
rolb
test
imul
ds
aad
mov
mov
pop
pop
cmp
in
jnp
mov
bound
push
jmp
sbb
and
dec
add
roll
xor
mov
or
test
test
jno
ss
sbb
in
mov
sarl
cmp
clc
xchg
lcall
or
or
pop
mov
hlt
xchg
and
aas
lds
mov
jnp
or
stos
xor
and
test
mov
mov
mov
sub
add
push
shr
scas
mov
cmpsl
mov
in
pop
insb
adc
sub
dec
cmp
hlt
cmp
sub
cs
xor
loope
shll
fadd
hlt
mov
or
shrl
pushf
add
push
and
inc
mov
or
pushf
leave
push
xchg
add
or
in
lock
and
jbe
sbb
cmp
ja
sti
mov
inc
jmp
cmp
and
mov
lods
ss
gs
sub
cs
add
mov
pop
aaa
sahf
mov
xor
add
dec
test
fmuls
jl
imul
hlt
and
mov
push
dec
dec
in
call
cld
jmp
add
aas
cmp
incb
pushf
cmpsb
add
scas
dec
stc
or
xchg
pop
mov
call
cmpsl
cwtl
outsl
inc
fisttpl
movsb
and
dec
pop
cld
clc
popf
ret
pop
push
xchg
shlb
test
jns
es
rorl
mov
xor
test
fcmovb
xor
lds
jns
jae
roll
jbe
mov
or
int3
idivl
jns
push
mov
les
loope
sub
pop
or
push
adc
rcrl
mov
sahf
and
scas
aad
clc
and
movsl
mov
es
call
xor
outsl
and
or
xchg
cmpsb
pop
xchg
mov
push
inc
cmp
mov
and
pop
int
lcall
mov
mov
es
mov
cmp
pop
mov
lahf
int
mov
pop
test
sub
add
fnstcw
cmpsl
popa
xchg
lods
xor
inc
pop
cld
inc
rcll
fstl
cmpsl
add
shrb
aas
lock
and
jno
shlb
mov
enter
sbb
adc
das
add
xor
sti
xchg
lret
or
push
cmp
xor
fidivrl
shll
pusha
inc
push
std
lret
cltd
rcrl
xor
movsb
mov
ljmp
jnp
mov
xchg
fwait
divb
enter
pop
and
fisubrl
xor
jp
ja
aam
xor
loope
fs
fwait
jns
lea
stos
cmp
or
hlt
arpl
xchg
repz
jg
push
bound
dec
daa
ret
add
movsb
fsubs
pop
mov
pushf
movsb
jo
jno
fistpl
xchg
sbb
or
mov
jl
imul
inc
pusha
in
fisubrl
pop
adc
add
mov
sub
inc
popa
stos
cmp
jns
add
cmpsb
sub
std
cmp
or
add
cmp
es
and
add
add
jne
cmp
call
jmp
ret
jnp
mov
cs
dec
mov
mov
pop
pop
mov
gs
test
cmpsl
int3
mov
imul
mov
insb
sbb
gs
test
in
xchg
jbe
loope
clc
cmpsl
and
aad
jo
rorl
add
cmpsl
and
lret
add
out
shrb
adc
jg
sbb
add
test
jecxz
mov
aas
std
repnz
adc
jbe
add
fstpl
or
add
shll
jl
cmp
lea
idivl
andl
adc
add
fdivrs
mov
dec
mov
inc
fsubrs
pop
loope
add
into
in
pop
xor
fidivrl
iret
inc
fimuls
fstl
mov
pop
cmp
add
dec
fcoms
repnz
or
movsb
lahf
mov
adc
sbb
sti
xor
into
inc
sub
test
inc
or
loopew
or
out
or
or
inc
fs
fucom
push
pop
cld
mov
lock
ret
cmpl
imul
or
into
test
and
sbb
push
push
inc
das
out
jo
xchg
mov
and
lcall
or
lds
out
sbb
add
or
es
cmp
xor
mov
or
int
inc
sub
mov
add
xchg
fs
dec
mov
add
push
pop
ret
jge
test
jg
xchg
and
sub
mull
mov
rolb
mov
push
repz
ja
mov
push
clc
loope
fdivl
int3
xchg
add
xchg
cmc
dec
mov
pop
int3
jnp
add
and
pop
std
out
vpmaddwd
mov
clc
adc
sti
push
insl
dec
cmc
in
add
fbstp
jns
mov
jae
add
fcompl
rorb
into
lret
jb
cmp
aad
xchg
hlt
pop
xor
mov
jnp
stc
push
push
in
xor
sbb
loope
adc
icebp
subb
add
xchg
mov
in
shll
pop
cmp
fs
mov
sub
cmp
pop
adc
xor
shll
gs
sbb
loope
aam
inc
outsl
cmpsl
aaa
adc
in
fcmovnu
cmp
sbb
cmp
hlt
bsf
mov
mov
jmp
mov
jecxz
scas
scas
arpl
in
mov
sub
fdivr
pop
lcall
inc
sub
pop
jb
in
sbb
mov
fnstenv
jmp
mov
mov
leave
xchg
push
add
ja
inc
fld
push
mov
dec
stc
outsl
jne
pop
push
rorl
sbb
sub
cmpsb
inc
rolb
test
push
xor
inc
sub
fldenv
clc
xchg
push
lea
hlt
clc
sbb
or
movsb
in
test
aad
lds
bound
push
xor
pop
clc
test
rol
std
arpl
or
xor
lcall
sub
jns
mov
dec
enter
lea
pop
sub
jmp
xchg
mov
xor
movsl
dec
enter
out
shr
aas
pop
mov
push
mov
inc
fidivrl
xchg
icebp
shrb
jge
cmp
leave
mov
cmp
ss
hlt
xchg
insl
and
outsb
pop
xchg
add
mov
cmp
sbb
stos
sti
xchg
cmpsl
adc
rorb
rolb
xchg
stc
enter
mov
cli
inc
cwtl
or
pop
mov
xchg
jne
clc
mov
mov
sti
repnz
ss
and
add
stc
mov
push
mov
adcb
in
mov
jns
roll
das
ja
and
xorl
mov
cltd
xor
inc
imul
jg
int
sub
cmpsl
insl
jecxz
mov
imul
inc
aas
or
or
stos
adc
nop
sbb
pop
jo
and
sbb
xchg
jno
xchg
cmp
adcl
clc
or
repnz
mov
movsb
inc
mov
clc
add
xchg
jbe
vmwrite
shl
sbb
fwait
test
jge
stos
cmp
out
shrb
xor
add
sbb
pop
jge
dec
test
ret
shrl
outsb
jns
mov
andl
jecxz
add
mov
pop
iret
pop
out
xchg
jl
mov
mov
xor
roll
adcl
sbb
jl
jne
ds
add
cmp
mull
shl
sub
fidivl
push
inc
cli
inc
sub
stc
clc
lds
push
ret
adc
mov
jmp
cmpsb
int
jo
repnz
mov
add
add
cmp
jecxz
addl
mov
rcrb
add
push
inc
repnz
int
divb
test
cmp
sbb
or
add
sbb
std
js
push
inc
in
push
cwtl
cli
stos
loope
or
sub
pop
sti
sbb
pop
ja
mov
mov
mov
add
mov
push
insb
pop
xchg
or
pop
imul
jne
pop
jns
loopne
mov
add
leave
add
nop
xor
pop
jno
clc
lcall
push
xchg
test
or
repnz
adc
aas
int
pop
mov
mov
mov
push
and
jge
dec
or
mov
cmpsb
stc
jnp
jbe
dec
jne
jmp
sub
aad
cmp
fstps
in
notl
push
push
jp
mov
mov
mov
jbe
xor
js
stos
push
fucom
int3
repnz
lea
mov
repz
cmp
fldcw
pop
xchg
push
arpl
rolb
adc
pop
int3
pop
loop
dec
rorb
lret
jmp
in
mov
or
fs
stos
das
rorb
or
pop
sbb
and
mov
and
mov
clc
mov
shrb
mov
imulb
xchg
add
repnz
in
dec
dec
xchg
lods
jle
sub
outsl
ljmp
push
and
dec
lea
call
shl
gs
cmpsb
out
loopne
xchg
mov
cwtl
pop
notl
mov
fxch
xorl
xor
in
arpl
into
sub
pop
xchg
aam
mov
mov
cmp
les
pop
icebp
lret
dec
cmp
mov
seta
test
insl
inc
shrl
jg
shll
stc
add
push
lret
dec
add
test
pop
ret
adc
mov
xchg
scas
int3
aas
out
add
ret
jp
jo
dec
add
icebp
hlt
add
aas
bswap
ficoms
hlt
inc
lret
push
cmp
xchg
push
incl
aad
fsubrp
mov
cs
stc
mov
xchg
add
xchg
test
xlat
cmpl
mov
dec
jbe
cmpsl
sahf
dec
insl
pop
inc
lods
sbb
cmp
add
xchg
mov
sti
push
jnp
jmp
test
daa
in
lea
or
jmp
cmp
addr16
fstpl
loope
in
fdivrl
shl
ficompl
roll
cld
into
call
sti
mov
arpl
inc
cmpsb
int
call
jmp
dec
int
xor
dec
lcall
push
mov
loope
jno
dec
dec
fcmovnbe
xor
sub
lock
gs
jmp
ret
dec
dec
stc
fiaddl
or
and
mov
roll
pop
sarl
or
xor
out
mov
rcll
or
aad
adc
xchg
mov
leave
gs
lods
sub
in
pop
jmp
cmpsb
xor
dec
lods
popa
cltd
mov
or
or
js
movsb
dec
add
data16
push
stos
aad
mov
mov
or
dec
dec
or
mov
arpl
and
test
std
test
dec
mov
sbb
lea
loope
clc
xor
out
and
mov
arpl
shll
in
or
inc
mov
arpl
jecxz
sub
test
mov
mov
and
xor
std
leave
jne
loopne
sub
dec
mov
cmp
mov
or
dec
gs
adc
lahf
test
rol
or
fldl
push
hlt
movsb
add
out
cmp
scas
mov
movsl
push
mov
cmc
test
pop
mov
rcr
popf
xorl
movsl
test
jmp
int
or
insl
imul
lcall
or
fbld
mov
add
cltd
sti
cmpsl
inc
ja
dec
xorl
enter
pop
cwtl
add
outsb
jne
lea
sti
icebp
add
sbbl
xchg
in
lret
push
roll
pop
aad
jmp
jbe
and
sbb
push
xchg
jg
lods
aaa
mov
jmpw
loope
mov
and
icebp
add
mov
xchg
jl
test
xchg
xor
adc
mov
jle
or
fs
gs
loope
add
popaw
xor
leave
adc
inc
das
dec
jae
sbb
sbb
stc
pop
hlt
or
pop
aad
lret
mov
xchg
pop
xor
sbb
test
add
sub
bound
and
or
mov
in
lea
add
add
push
xchg
add
pushf
mov
add
xlat
mov
cmc
rcll
cmp
push
icebp
leave
add
add
in
test
xchg
inc
popa
mov
ljmp
sti
jnp
mov
ret
outsb
push
popf
out
dec
sub
shl
cli
jo
ror
or
mov
in
icebp
loope
mov
add
scas
sbb
push
fs
scas
repz
mov
push
jg
add
int3
xchg
out
outsl
jo
jecxz
cli
pop
into
clc
fcom
scas
rcll
pop
or
sarb
movsb
xchg
add
cli
ret
mov
mov
cmp
mov
in
outsl
cmp
cwtl
stos
xor
cmp
add
mov
addl
inc
xchg
rorb
and
xchg
repnz
fld
push
mov
test
push
jo
xor
dec
sub
mov
push
int3
test
or
and
and
push
and
lock
adc
mov
or
stc
test
stos
add
negb
aaa
popf
sbb
add
dec
cld
xchg
lds
es
or
add
shl
adc
in
cli
xor
incb
movsb
flds
mov
aam
inc
xchg
push
sbb
or
aas
mov
xor
mov
into
mov
mov
repz
mov
push
popa
flds
pop
ret
sbb
mov
imul
pusha
aam
mov
add
jmp
add
jae
int
lea
cmc
rorb
test
push
inc
loope
mov
int
push
push
inc
add
push
rorl
inc
lcall
add
pop
push
dec
pusha
arpl
adc
dec
add
imul
or
stc
out
popa
inc
adc
dec
pop
pop
stc
ljmp
adc
sar
dec
sahf
inc
mov
test
mov
jbe
in
jmp
mov
pop
cmp
and
ds
xchg
dec
in
push
std
cli
sti
stos
jmp
mov
in
fs
arpl
out
cmp
pop
mov
je
dec
cmp
mov
and
inc
mov
sub
stc
cmp
jp
push
aas
mov
pop
dec
mov
popa
mov
or
sbb
fmul
sbb
hlt
lea
cmp
cli
lahf
fisttpl
pop
gs
lods
inc
lock
add
lret
add
lret
push
ret
cld
lcall
aas
sub
pop
dec
iret
out
sti
in
out
divl
stc
cli
cmp
mov
pop
in
es
mov
mov
add
cmp
mov
ret
mov
sub
pushf
mov
cmp
add
and
jae
in
adc
cmp
ss
jnp
push
xor
lret
dec
mov
aaa
andl
negl
mov
sbb
sub
nop
dec
imull
and
adc
mov
daa
cwtl
pop
cmp
jns
cmp
cmp
repz
or
add
dec
jo
dec
pop
adc
enter
stc
es
rol
cltd
ret
dec
test
aaa
enter
roll
xlat
pop
je
mov
and
rcr
push
jbe
movsb
test
adc
mov
pop
out
mov
adc
js
mov
mov
lahf
data16
pop
mov
add
pushf
mov
mov
cmp
push
mov
mull
popa
fwait
sbb
into
or
or
push
mov
out
xchg
inc
push
jno
pop
repnz
xchg
aam
xor
scas
xor
inc
mov
es
mov
or
or
popl
push
mov
jo
sub
cmc
ja
jle
cmpsb
sbb
add
stos
mov
in
test
cs
mov
fisubl
jp
add
jmp
xorl
fwait
mov
int
sbb
fcomp
sbb
frstor
inc
insb
adc
and
pop
push
xor
std
and
xchg
insb
push
lret
mov
lods
lds
mov
sub
enter
pop
cmp
cmp
arpl
adc
jmp
sbb
jns
stc
pop
pop
cmpsb
ret
inc
rolb
dec
xor
mov
cmpsl
out
scas
bound
nop
movsl
mov
xor
hlt
cmp
cmp
cmp
out
or
std
push
inc
mov
jo
ja
push
dec
lcall
in
shr
mov
test
and
mov
jo
cld
jne
or
or
add
sub
push
sub
cmpsb
add
int3
push
rcl
xchg
mov
nop
jmp
rdpmc
outsb
ret
mov
or
mov
jnp
pop
xor
pop
out
xchg
int
cld
in
cmp
or
insb
mov
subl
add
add
fs
jo
add
cmp
or
dec
add
cmpsb
dec
mov
rcrb
movsl
sbb
or
jns
inc
popa
push
in
sbb
jo
or
int
xchg
push
and
mov
outsl
sti
sahf
pushf
enter
jg
jbe
insb
cld
int3
xchg
sbbb
stos
mov
push
outsl
dec
ret
push
xchg
out
and
test
mov
xor
imul
stc
jmp
ret
jbe
into
mov
or
sar
cltd
or
insb
hlt
in
dec
pop
lods
nop
fmull
dec
dec
push
mov
sbb
stc
in
mov
xchg
outsb
fnstcw
push
in
arpl
cld
in
daa
mov
mov
gs
lods
loope
dec
mov
xlat
or
in
sub
call
dec
lods
mov
insl
jp
and
stc
fwait
cmp
imul
in
add
push
stos
js
test
adcb
or
pop
xchg
cmp
or
jle
loope
out
gs
cmp
jmp
sti
test
jmp
or
int
pop
stc
cmpl
jno
jmp
mov
cmp
in
gs
push
dec
cmp
mov
imul
or
nop
fsubl
in
cmp
and
or
mov
pop
gs
jl
or
pop
cltd
dec
cmp
sbbl
test
aaa
call
mov
shll
icebp
push
in
test
nop
sti
fldcw
push
fsubrl
das
daa
jle
jmp
sub
push
icebp
pop
mov
leave
test
insb
test
adc
inc
in
mov
jno
adc
int
pop
pop
adcb
or
adc
dec
cmp
stc
loopne
aad
inc
mov
dec
dec
push
adc
fldl
scas
push
cmp
pop
jmp
mov
vpsubsw
xchg
in
add
lea
std
stc
adc
push
cmp
lods
popf
lods
test
ljmp
jge
aad
dec
insl
icebp
popf
add
jns
and
jmp
stc
or
add
sbb
shlb
icebp
add
imul
add
mov
or
cmp
sar
push
cmp
inc
mov
xchg
sbb
aaa
and
leave
testl
xchg
out
or
sub
add
or
cmp
sbb
int
mov
test
sub
add
movsb
out
jo
sub
cwtl
cmpsl
adc
xor
adc
push
scas
dec
mov
cmpsb
in
rcl
out
fs
mov
test
dec
in
mov
insb
sub
jae
or
lds
add
dec
std
inc
int
mov
bound
call
imul
roll
mov
mov
jecxz
pop
sub
and
add
mov
mov
dec
fstl
cmpsl
call
lea
inc
mov
xor
jmp
sbb
subl
repnz
push
ret
mov
arpl
push
cmp
popa
rolb
mov
push
inc
mov
icebp
sbb
sahf
lret
sti
dec
js
mov
movsb
in
test
fdivr
out
push
jmp
ljmp
adc
dec
add
push
addb
or
loop
cmovp
enter
test
xchg
test
jne
adc
jg
loopne
arpl
test
mov
loope
or
cli
jo
divl
push
in
sub
enter
cmp
stc
push
mov
xor
hlt
arpl
inc
xchg
repnz
popa
shr
dec
jns
push
scas
cmc
lret
pop
inc
sub
jmp
push
in
adc
nop
int
hlt
pop
data16
sub
cmc
mov
aaa
sbb
add
out
insb
jle
and
shlb
mov
push
sbb
out
adc
xchg
mov
and
int3
das
clc
enter
fisubs
mov
fs
hlt
pop
xchg
popa
jo
jle
std
push
push
stc
je
out
xor
inc
fidivrl
fiaddl
mov
xor
xsavec
mov
xor
call
sbb
xsaveopt
repnz
push
add
bound
sbb
ljmp
rorl
jno
ret
jnp
or
sti
dec
ret
lds
pop
add
add
ret
fisttps
sub
hlt
jo
push
icebp
aam
stos
lock
cpuid
in
cmc
mov
call
and
cld
inc
xchg
insb
fucomp
add
push
stc
dec
in
in
into
or
pusha
addl
push
push
add
imul
mov
cli
or
cli
ss
int
push
gs
fs
clc
cmc
ja
pop
sub
mov
adcl
dec
testb
and
sub
and
aas
xor
push
iret
xchg
xchg
and
and
mov
mov
das
xchg
cmp
in
pop
pusha
mov
dec
cltd
adcl
sub
pop
leave
lock
xor
add
ja
inc
jecxz
and
into
jg
cmc
rorl
mov
and
sbb
xor
in
add
pusha
dec
mov
jl
ffree
fs
mov
shr
fiaddl
xor
rcrb
in
in
arpl
rorb
add
mov
mov
icebp
repz
test
lret
int
das
dec
je
mov
mov
inc
and
shl
test
adc
cltd
sub
fimull
insb
daa
cmp
flds
push
enter
adc
mov
inc
outsl
mov
mov
pop
iret
ja
jg
adc
cmp
out
daa
add
movsb
cmp
fldl
ja
cmp
jne
fsubs
xchg
pop
sub
mov
shl
xchg
pushf
int3
and
cmp
sbb
and
sbb
lods
lret
xchg
jb
xchg
jecxz
fmull
cmp
jmp
icebp
test
mov
dec
and
cmp
mulb
xlat
popf
add
mov
jp
push
xor
jbe
adc
clc
add
cmp
mov
popa
fisubs
icebp
sbb
popa
loope
jle
lods
clc
mov
fidivrl
stos
cltd
xchg
jmp
add
lret
mov
movsl
pop
mov
xchg
pop
push
in
in
add
mov
jmp
adc
add
imul
lahf
hlt
lea
mov
mov
out
out
mov
loope
xlat
sbb
ret
out
xchg
mov
pusha
pop
sahf
pop
out
inc
rorb
insl
lock
sub
fcompl
mov
pop
mov
stc
fsub
scas
out
dec
in
mov
jae
pop
mov
cmpl
add
sub
mov
aam
in
sbb
xor
sbb
cmp
pop
loop
sub
mov
sbb
and
xchg
jmp
into
or
cmpsl
adc
subb
jle
adc
add
ds
out
fnstsw
inc
sub
dec
jne
lods
cmp
xor
pop
push
dec
rolb
incl
test
mov
rcrl
mov
aad
int
pop
shll
pop
imul
push
and
fs
jae
fdivr
fnstsw
push
int
add
cmpsb
fisubs
sub
imul
jmp
mov
or
in
dec
fstl
pusha
outsl
mov
out
or
xchg
stos
jecxz
les
xchg
lds
dec
xor
cli
push
add
sbb
lea
sbb
ds
mov
add
enter
adc
movsl
push
lods
iret
cmp
push
sar
test
lret
xor
test
inc
jg
push
pop
sbb
cltd
fcoml
test
pusha
lret
shlb
xchg
sub
inc
lds
or
push
mov
insl
es
lea
dec
mov
iret
and
jp
adc
or
xor
mov
xchg
aaa
or
cmp
iret
jno
mov
leave
and
push
inc
ds
sub
sti
add
repz
pop
into
xchg
add
psubd
dec
nop
ret
test
cmp
adc
mov
pop
cmp
subl
xlat
icebp
mov
push
int
pusha
mov
jg
sub
lods
hlt
sarl
test
jge
shl
dec
incb
insb
inc
push
loop
lret
sub
fldt
shll
mov
xchg
mov
push
xchg
cmp
mov
add
sbb
add
int
hlt
out
push
ds
or
xor
dec
sbb
fxch
and
jbe
adc
add
mov
outsl
adcl
popa
insl
add
call
pop
xchg
dec
popa
or
pop
mov
mov
xor
nop
push
and
sbb
xchg
test
cltd
call
pop
test
hlt
scas
mov
mov
adc
hlt
ficoms
or
ror
in
add
std
scas
in
xchg
jo
fnstenv
das
ret
sahf
and
push
dec
rcr
push
ret
mov
and
inc
pop
cwtl
loop
push
int3
add
push
push
and
xor
push
jbe
dec
adc
sbb
push
sbb
sahf
mov
add
rolb
mov
inc
mov
ds
fcmovnu
inc
mov
add
xchg
cmc
dec
in
lea
rolb
stos
test
test
dec
pop
stos
cmpsl
imul
pop
aas
stos
stos
imul
push
mov
sbb
pop
and
xchg
cmp
inc
jmp
mov
shl
jmp
push
push
jmp
xchg
popa
je
pop
add
movsb
mov
jns
add
mov
outsl
in
js
push
roll
mov
insl
iret
shll
outsb
inc
lret
fstps
int
ret
icebp
jp
repnz
out
sbb
sbb
test
mov
lret
xchg
test
lret
mov
scas
mov
movsb
aas
mov
mov
adc
and
test
fldenv
jb
pop
and
mov
lods
mov
or
and
imul
daa
scas
mov
or
int
add
cmp
enter
or
cmc
add
adc
leave
stos
or
mov
push
jp
and
test
iret
mov
mov
xor
loop
cld
xchg
add
mov
push
es
out
add
jge
lods
aad
outsl
push
xor
in
mov
insl
mov
cli
bound
dec
and
inc
xor
lahf
add
testl
stos
icebp
and
icebp
idivb
and
adc
dec
jns
jmp
ret
aad
das
outsb
adc
mov
out
add
xor
daa
inc
mov
sub
es
sti
mov
movsb
enter
enter
in
mov
add
add
push
stc
roll
out
add
fs
xchg
mov
dec
dec
jle
xlat
push
sbb
or
mov
lret
loop
dec
repz
popa
dec
call
leave
enter
pop
cmp
add
hlt
lock
mov
scas
xor
and
push
or
repnz
cmp
dec
test
xchg
mov
and
repz
dec
add
mov
int3
mov
mov
mov
push
mov
mov
negl
cwtl
xor
jne
je
scas
xchg
imul
mov
in
cmpl
in
lcall
mov
adc
and
pop
cmp
xor
movsl
test
rorb
add
cld
dec
push
mov
rolb
xlat
incb
sbb
xchg
leave
xor
dec
add
mov
rcl
cs
fstpl
push
insl
mov
xchg
mov
sub
sbb
pop
mov
xor
sub
jnp
pop
push
xchg
gs
add
mov
cmp
push
dec
je
fnstcw
mov
scas
aaa
fistpl
push
shrl
xchg
cmp
or
pop
pop
dec
mov
flds
call
hlt
cmp
lea
out
push
cwtl
dec
jb
in
in
cmp
and
jge
cli
test
sbb
hlt
mov
stc
xchg
fistpll
icebp
or
cmp
add
inc
arpl
fnstenv
inc
test
push
test
xchg
outsl
inc
rcrb
cmpsb
dec
enter
mov
pop
jl
jnp
ret
pop
lods
pop
out
cmpsb
cmp
sbb
adc
add
lea
xchg
imul
sbb
cmp
cmpsb
mov
in
mov
test
mov
cmp
in
and
sahf
repz
loop
imul
roll
pop
dec
cwtl
jo
test
movsl
jg
adc
mov
lahf
shll
inc
lock
xor
in
mov
lahf
idivl
mov
push
and
movsl
jl
add
jns
push
mov
jo
mov
mov
sbb
jp
stos
adc
aas
xchg
sbb
or
and
in
loopne
mov
dec
pop
int3
test
js,pt
adc
xchg
jne
es
fstps
jb
mov
test
in
cmp
add
cmpsb
mov
cmpsl
mov
rclb
nop
cs
inc
pop
cmp
cmp
in
cmpsl
pop
testb
xchg
dec
test
fstp
das
loop
mul
cmpsl
push
pop
out
fs
sarb
add
jb
fcomip
inc
xlat
jmp
pop
or
mov
pop
je
iret
in
out
daa
add
jbe
lahf
je
or
xor
mov
aaa
pop
in
loope
push
and
shll
mov
mov
aas
sub
jmp
dec
rcll
ret
in
add
adc
cltd
popa
pop
stc
js
mov
push
rolb
in
in
mov
lret
mov
xor
movsl
jecxz
insl
sub
lret
shll
repnz
iret
stos
cmp
jno
lods
out
push
lcall
clc
sbb
stc
mov
jae
lret
fwait
adc
test
sub
jle
push
fs
addl
notl
je
lea
mov
scas
and
cmpsl
loope
inc
sub
repnz
or
imul
push
lcall
sbb
mov
js
jns
stc
inc
jecxz
fistl
icebp
xchg
mov
in
cmp
rcr
mov
test
dec
movsb
mov
into
stc
add
jne
nop
jmp
loope
add
loop
sbb
inc
jmp
xchg
int3
mov
and
add
sti
mov
adc
pop
decb
xor
loop
sub
test
and
push
hlt
fwait
inc
xor
sub
sti
or
jl
mov
lock
popa
stc
mov
loope
jne
inc
loope
std
or
xchg
cli
popa
loope
jnp
hlt
mov
pop
dec
push
adc
loope
in
pusha
loope
sbb
jmp
mov
sbb
rorb
dec
in
int
arpl
pop
andl
gs
jecxz
jmp
pop
in
stc
jg
ret
mov
test
fdivl
movsb
sar
insl
popf
dec
cld
xor
popa
cmpl
in
cmp
js
aad
std
mov
in
jo
adc
dec
loope
mov
aam
mov
dec
movsl
add
mov
shll
cmp
outsb
fisubrl
and
lds
insl
mov
dec
loope
jno
cmp
rorl
fldl
dec
es
cmp
dec
loope
aam
mov
movsb
xchg
imul
std
cld
cmp
push
in
aad
ss
stc
jmp
rclb
cld
aad
or
mov
je
dec
mov
movsl
movsb
jmp
xchg
les
nop
push
out
in
or
mov
dec
and
out
xor
or
pop
mov
rorl
jnp
arpl
and
cmp
mov
jp
test
movsl
mov
sbb
inc
pop
loope
imul
popa
std
xor
adc
test
andb
mov
stc
dec
and
loope
dec
mov
mov
inc
cltd
gs
or
leave
imul
aad
cmp
fld
sbb
or
loope
popf
mov
rorl
jns
mov
in
test
jns
mov
jmp
mov
subl
push
fstpt
mov
aad
les
jle
dec
mov
fs
pushf
shll
sub
push
xor
repz
iret
jg
sarb
and
insl
dec
aas
mov
and
ret
addl
xchg
ret
fadd
lock
push
sub
ucomiss
xlat
or
push
mov
sbb
icebp
inc
in
icebp
add
pop
ja
mov
lea
ja
push
mov
hlt
icebp
mov
or
dec
adc
faddp
into
or
arpl
mov
xor
dec
mov
cpuid
rolb
mov
pusha
data16
ja
or
lret
loop
mov
imul
sub
pcmpeqw
ljmp
test
adc
scas
out
enter
add
add
or
xlat
rolb
filds
add
cmp
jl
sti
add
loopne
leave
pop
call
mov
ret
arpl
adc
std
mov
dec
aas
into
jne
dec
pop
or
xchg
jecxz
xchg
sub
add
test
lods
jmp
xor
pop
rcrl
xor
push
jmp
ret
dec
in
dec
add
in
lock
push
cld
adc
mov
fucomi
dec
cli
push
loope
xor
adc
in
sbb
cmc
add
xchg
push
fs
dec
push
xchg
jns
scas
jo
or
testl
push
mov
dec
pop
sbb
testl
sub
lahf
lea
mov
repnz
shlb
rcrb
mov
mov
adc
leave
jo
cmpsb
hlt
cmp
addb
jecxz
push
pop
or
stos
movsl
adc
fs
and
ret
inc
imul
jno
ret
add
pop
and
or
mov
mov
andl
push
hlt
pop
in
int
mov
je
in
xorb
pop
sbb
dec
add
mov
repz
inc
pusha
add
lods
push
sbb
mov
les
shlb
movsl
mov
sbb
xchg
push
adc
ja
xchg
aam
mov
orl
pop
icebp
xchg
int
lret
lods
out
and
popf
sbb
std
add
in
test
fs
mov
lock
mov
stc
cli
into
jg
cmp
or
sub
push
dec
mov
cmp
push
jb
jns
adcl
xchg
cmp
mov
les
jge
movsl
popa
into
add
add
pop
mov
cmp
or
adc
cmp
lea
repz
lds
add
das
push
adc
ret
mov
test
xchg
cmp
loop
sbb
movsl
push
popl
cli
jnp
punpcklbw
adc
add
or
mov
fwait
xchg
scas
bound
js
sahf
jecxz
sahf
clc
cwtl
lret
sub
and
or
dec
push
jb
xor
fisubl
daa
add
jecxz
test
loope
add
xchg
int
xchg
popa
outsl
sbb
stc
or
loop
pop
adc
push
dec
orb
push
clc
lock
sbb
xchg
lret
ret
int3
xchg
addb
xchg
sub
dec
insl
pop
lret
xor
mov
mov
xor
add
dec
sarb
xchg
loope
out
mov
pop
lahf
add
subl
mov
cmp
push
lret
sub
ja
or
inc
cmp
or
icebp
popa
mov
push
inc
dec
push
add
and
xchg
sahf
inc
ja
popa
cmp
lahf
add
xor
jae
xor
pushl
sbb
daa
and
aas
sahf
mov
add
loopne
cmpsb
push
xor
push
in
mov
xor
ljmp
push
jp
mov
stc
test
cmp
xor
dec
cld
cmp
mov
jae
mov
adc
mov
sub
cmp
push
pushf
xchg
push
les
repnz
mov
out
or
leave
or
fwait
xchg
out
push
orl
das
lds
or
pop
jns
sarl
or
lret
insb
mov
xor
dec
pop
or
xchg
mov
cmpsl
ljmp
and
inc
lock
or
cld
mov
in
cmp
cmp
pop
inc
mov
push
jns
movsb
sub
pop
cmp
add
rcll
test
testl
jl
lea
cmp
mov
push
lret
push
push
xchg
outsb
add
cs
repnz
mov
xchg
test
mov
mov
ret
or
add
xchg
divl
sub
hlt
movsb
jmp
daa
pop
sbb
jp
add
xor
or
mov
roll
jle
mov
mov
ret
mov
outsb
test
enterw
cmp
cli
fs
push
cltd
mov
cmc
cli
lds
ret
push
dec
push
add
lods
ret
add
xor
lahf
iret
mov
and
mov
sbb
in
jle
sub
push
xor
mov
shll
lcall
syscall
add
push
int3
rolb
add
jge
out
xchg
push
push
push
jnp
fsubs
sub
mov
pop
mov
xchg
in
pop
lods
shll
lea
and
add
push
pop
jnp
push
adc
push
dec
cmp
mov
pusha
shl
jmp
push
cmp
fsubrs
ljmp
xchg
sahf
pusha
data16
lea
into
hlt
int3
pop
dec
mov
negb
sti
ljmp
pop
into
or
dec
les
std
in
push
orb
insb
int3
adc
lret
adc
ret
or
loop
testb
jmp
lea
pop
test
jne
movsb
repnz
xchg
int3
xor
and
cmp
adc
lea
das
fdivrs
push
sbbl
adc
jmp
test
xchg
lds
adc
arpl
inc
inc
xchg
dec
mov
pushl
clc
add
dec
xor
stos
pop
inc
xor
clc
push
andl
push
loop
aas
jne
add
and
lods
fisubrs
mov
icebp
aas
es
cmp
or
jne
pop
and
inc
shlb
into
pop
adc
mov
mov
cmpsb
ja
andl
insb
or
repnz
dec
sub
out
jg
lea
mov
pop
aaa
mov
notb
inc
out
adc
mov
fcomi
or
imul
aam
shl
subl
add
sbb
das
mov
dec
mov
pop
stc
sub
or
daa
icebp
fmul
add
test
xchg
iret
sub
insb
movsl
lcall
notl
push
jae
lea
stc
imul
lock
push
movsb
mov
mov
sarl
xchg
mov
mov
sub
xor
xchg
xchg
and
or
lahf
sbb
mov
or
mov
cwtl
ja
lea
cld
jmp
cmp
sub
hlt
arpl
mov
adcb
mov
int
ds
add
add
inc
xchg
xor
mov
or
js
jge
push
or
mov
test
jp
leave
ficomps
cmp
add
cmp
mov
dec
mov
leave
mov
sbb
lret
repz
mov
cmp
lret
mov
cmp
mov
xchg
je
mov
pop
or
jp
mov
xchg
int
pop
fucom
xor
in
das
dec
std
mov
adc
mov
sbb
outsb
scas
sti
adc
push
cmpsl
xchg
adc
ss
movsb
or
cmp
dec
mov
mov
dec
xor
scas
inc
repz
mov
mov
sti
jecxz
out
push
mov
adc
cmp
clc
add
add
or
add
sub
loopne
pop
jne
push
insb
adc
cs
mov
add
jo
sti
adc
pop
popf
sub
pop
push
lret
ret
psllq
pop
push
in
mov
push
ret
or
dec
loope
add
pop
mov
leave
mov
lcall
add
adc
pop
jbe
stos
cmp
mov
stos
das
adc
adc
cmp
add
or
sub
leave
xchg
lock
lods
sbb
push
cmp
out
sub
add
adc
and
add
jns
mov
cmp
cwtl
in
adc
push
mov
pushf
cmp
push
jnp
jne
rcll
adc
push
mov
xchg
jl
add
dec
push
xor
pop
loope
call
cmp
mov
js
sub
xchg
push
mov
adc
lds
lret
pop
rorb
add
jo
mov
test
lret
sti
popa
loope
sbb
pop
bound
jno
jmp
fisubl
sub
loope
mov
mov
pop
lock
test
fstpl
ds
loop
xor
lret
pop
pop
push
out
inc
shl
xor
in
push
sub
push
fstps
into
mov
pushf
mov
dec
add
adc
jne
adc
xor
and
or
inc
cwtl
inc
inc
cmp
cltd
mov
rcl
push
roll
mov
inc
adc
mov
or
gs
aad
or
mov
xorl
clc
hlt
and
mov
mov
mov
data16
cmp
cmp
cli
push
int3
idivl
lret
jmp
jo
add
int3
dec
mull
xor
fimuls
fcmove
mov
mov
filds
imul
cmp
mov
shrb
cmp
test
lods
push
fxch
mov
jnp
rorl
push
or
shr
daa
pop
mov
xchg
lods
jbe
cmpsl
add
xlat
cmp
push
dec
mov
test
xchg
cmp
bound
ficompl
pop
insl
jecxz
mov
lock
movsb
or
mov
xchg
push
fs
xchg
das
ja
arpl
xchg
sti
lea
push
sbb
lock
sbb
mov
xor
dec
int3
sub
shl
or
sbb
lahf
add
iret
and
lods
ds
rcrl
gs
cli
pop
das
jecxz
inc
and
pop
cmp
xchg
jmp
xchg
add
jecxz
push
adc
mov
sub
xor
shl
test
pop
mov
mov
or
lahf
rorb
pop
sub
test
incb
imul
add
dec
mov
xchg
inc
sarb
ret
xchg
add
xchg
add
cld
push
imul
jmp
cmpsb
scas
add
sub
fs
cmp
in
sbb
addr16
iret
cs
rolb
jns
fdivrl
jl
sar
sub
jp
aad
decb
sub
icebp
repnz
sbbl
scas
dec
aas
and
idivb
ror
sahf
cli
jg
addl
mov
xchg
and
incl
dec
lock
xor
fistl
loope
xor
sbb
sub
jecxz
cli
cmc
jle
inc
inc
mov
cmp
add
test
imul
roll
push
fwait
repnz
test
adc
jmp
aaa
xchg
inc
in
aas
fnstsw
aam
add
ja
testl
add
sbb
jmp
pop
sub
and
int3
add
fisubrl
in
push
arpl
out
mull
sub
inc
test
and
mov
fimuls
mov
jge
push
push
xchg
sub
fmull
xchg
inc
lods
add
ret
outsl
ja
outsl
add
mov
and
icebp
cmp
mov
mov
sub
inc
inc
hlt
test
fisubrl
or
xor
add
pop
push
sub
clc
shlb
add
jns
leave
icebp
loop
jo
jecxz
jo
add
push
int3
stc
add
jns
int3
iret
xlat
decl
cmc
inc
in
jecxz
hlt
fiaddl
mov
mov
stc
cs
test
jmp
fsts
flds
loope
call
imul
fcmovnb
nop
xor
icebp
jg
dec
mov
mov
cmp
inc
ljmp
push
dec
pop
insl
sub
mov
arpl
bound
mov
rcll
aad
and
daa
dec
adc
call
lcall
and
dec
mov
mov
add
xor
sbb
adc
imul
sti
jp
fcompl
pop
cli
mov
insl
stc
out
in
mov
stos
pop
mov
mov
cli
cmp
lock
lret
les
add
mov
mov
or
inc
hlt
jg
push
stc
and
inc
hlt
std
cltd
dec
stc
add
adc
pop
lahf
or
int3
cmp
and
mov
imul
cs
das
cmpsb
in
add
xor
sub
push
inc
stos
lret
pop
cwtl
pop
pop
nop
fsubr
mov
add
or
inc
test
neg
dec
hlt
add
test
mov
test
imul
push
cmp
or
mov
int3
mov
pop
push
sub
pop
cwtl
subb
popf
mov
mov
push
pushf
jmp
cmpsl
mov
jo
sarl
lea
dec
push
adc
add
fcomps
xor
xor
lock
out
cmp
jns
sbb
into
mov
shll
pop
push
xor
call
mov
and
mov
jmp
bnd
aad
shl
mov
mov
insl
cmc
fs
ds
push
roll
xchg
in
popa
lock
loope
mov
jmp
jle
mov
xchg
imul
mov
pop
inc
movsb
or
cmpsl
jne
icebp
shl
addr16
into
stos
lret
out
hlt
stc
popa
imul
mov
in
subl
cmpsb
add
add
data16
fcmovnb
lods
out
pop
fadd
in
jnp
add
cwtl
rolb
xchg
or
jb
adc
xor
shl
adc
adc
mov
mov
clc
movl
mov
imul
mov
jbe
hlt
push
outsl
add
sbb
dec
sbb
mov
push
add
jle
dec
cli
bound
sbb
adc
test
shlb
add
stos
cwtl
jae
and
dec
bnd
and
mov
push
outsl
aaa
rorb
jl
lock
sbb
pop
bound
mov
in
push
add
mov
scas
in
test
sbb
push
sti
adc
or
frstor
leave
sub
xchg
cmpsl
jge
xchg
mov
orl
mov
cmp
orl
fsqrt
or
inc
mov
stc
jne
ret
sub
mov
or
testb
cmpsb
cmc
aad
ss
std
adc
out
push
leave
or
rorb
js
pop
mov
sbb
adc
in
aaa
fdivs
and
subl
jle
add
mov
add
pushf
dec
out
add
outsl
insl
push
stos
or
leave
ret
lea
jmp
mov
push
imul
cld
push
in
add
repz
cmc
push
rcr
xor
jo
aam
pop
push
mov
xchg
nop
jmp
in
into
lret
and
inc
mov
cmp
jo
sti
iret
push
cld
or
pop
inc
sub
sub
cmc
mov
in
dec
insb
jmp
je
insl
dec
movsb
aaa
gs
insl
cmpsb
pop
leave
das
fsubrs
adc
xchg
sti
add
lret
leave
int3
push
push
leave
mov
loope
iret
ja
popa
sti
sub
or
in
clc
arpl
cwtl
sbbl
cmpsb
bound
andl
and
or
adc
imulb
ds
and
mov
cmp
test
push
or
cmp
or
inc
and
and
inc
out
add
in
jmp
arpl
sub
push
jl
mov
lock
imul
xchg
mov
test
in
sbb
mov
in
push
popf
sub
ret
inc
mov
in
stc
jbe
loope
inc
pop
std
subl
rcll
cltd
pop
push
mov
and
nop
icebp
lcall
out
xchg
xorl
add
stos
int
icebp
inc
cmp
in
push
popf
mov
sub
int
pop
add
cmpsb
pop
daa
shr
fmul
icebp
cmp
xchg
repnz
pminub
xchg
mov
mov
sbb
xchg
jmp
add
cmp
xchg
and
mov
jmp
pushf
hlt
popa
clc
call
inc
nop
pop
shll
or
push
pop
pushl
jmp
add
imul
lret
das
stos
or
add
xor
inc
xchg
mov
jnp
ds
mov
cmpsl
jmp
mov
dec
incb
pop
sbbb
mov
sub
int
roll
pushl
fldenv
add
cmpsb
hlt
hlt
call
push
mov
out
and
mov
add
xchg
popa
dec
xchg
or
add
push
mov
ljmp
sub
adc
xchg
inc
cs
std
mov
dec
test
popf
pop
arpl
mov
cmp
mov
out
mov
hlt
jmp
sub
sbb
cmp
adc
and
inc
xchg
loopne
fcmovu
mov
fildll
mov
incb
cmpsl
xchg
jmp
dec
out
add
test
stos
je
mov
mov
lods
or
add
popa
add
jge
pop
sbb
push
push
sub
cmp
sti
xchg
xchg
rcr
aad
lods
dec
jp
dec
lds
decl
sahf
xlat
sub
scas
dec
inc
in
aaa
jmp
cmp
or
out
add
or
jns
add
pop
loop
bound
or
cli
cmp
pushf
clc
pop
imul
mov
add
mov
es
sarl
jge
mov
gs
cmp
stc
popa
loopne
mov
add
mov
jns
sbb
xchg
stc
pop
mov
cmp
fninit
xchg
dec
test
fsincos
pop
into
call
dec
daa
inc
les
xor
lret
fstpl
push
incl
push
test
mov
out
push
or
hlt
fwait
in
js
add
sbb
shrl
pop
call
add
push
fistps
cmpl
std
push
popa
mov
pop
adc
pushl
sbb
daa
stos
or
xor
pusha
mov
orl
hlt
lahf
mov
push
dec
pop
xchg
sahf
and
ja
lret
or
push
lods
cmp
rclb
xchg
cmp
adc
enter
mov
insl
cmp
dec
shl
popf
das
popf
stos
inc
jno
hlt
fcoml
mov
dec
leave
cmpsl
push
les
add
push
shl
loope
sub
in
dec
std
add
icebp
jb
pop
jge
add
push
adc
stos
dec
fmull
mov
jp
dec
test
or
lahf
ficoml
or
pop
int3
xchg
adc
sbb
lea
lret
in
jge
ss
xor
or
cmp
pushf
or
lds
sbbl
popa
pop
enter
or
jecxz
dec
icebp
push
or
push
adc
dec
loopne
xchg
pop
lods
stc
or
sbb
cmpsl
lock
inc
adc
add
imul
or
cmpsb
inc
add
clc
mov
in
test
in
jbe
lret
repnz
in
icebp
les
mov
cld
add
adc
mov
adc
sub
sbb
or
ds
rol
stc
push
push
lea
cmpsb
sti
cmp
adc
popa
ret
call
push
cmpsb
pop
les
imul
sbb
push
xor
jbe
mov
xor
adc
movsw
jns
bound
add
mov
jmp
test
sbb
sbb
or
mov
mov
adc
leave
popa
cmp
adc
pop
pop
push
mov
push
pop
push
cmp
stc
mov
or
ret
hlt
das
dec
sbb
inc
or
xor
jae
mov
jnp
mov
cmc
dec
pushw
dec
rorl
test
sar
pause
in
in
data16
xchg
pop
xchg
ret
adc
jl
mull
mov
xor
rclb
test
imul
scas
mov
rclb
add
and
sub
add
decb
mov
dec
cs
sbb
enter
mov
popf
pop
cmp
pop
popf
mov
lret
and
fstpl
jge
inc
test
enter
sbb
sbb
add
pop
inc
add
jns
xchg
mov
pop
inc
icebp
mov
and
sbbl
push
xor
or
pop
mov
mov
adc
or
fcomps
pop
std
imul
pop
mov
outsb
and
ss
icebp
mov
orl
jne
daa
dec
in
mov
repz
sub
mov
jns
aad
in
shll
out
jmp
sub
xchg
bound
and
int
inc
in
test
neg
loope
fstpt
lock
xchg
jne
jecxz
adc
cmc
out
arpl
cld
mov
fwait
aad
lods
ret
gs
loop
adc
jo
adc
push
cs
roll
sbb
push
repz
dec
xchg
test
jl
xchg
jle
add
add
rorl
pop
mov
and
xor
sbb
mov
add
mov
mov
jl
in
iret
inc
sub
and
int3
add
iret
sub
test
lds
adc
hlt
cmc
push
pop
jle
sbb
push
add
add
xchg
or
jb
ret
or
add
or
insb
rolb
aad
mov
add
shrb
xor
dec
xlat
mov
inc
aad
cmpsl
gs
loope
jns
push
out
int3
sahf
and
mov
cwtl
dec
jbe
cmp
mov
dec
add
cltd
fwait
jnp
dec
push
jmp
sub
xchg
pop
add
xchg
std
add
sbb
in
push
inc
mov
pop
test
stc
outsl
lea
lods
push
mov
xchg
iret
stc
sub
ret
shrl
mov
mov
ljmp
dec
fs
loope
dec
jns
stc
sbb
lods
xor
out
sub
stc
cmc
popf
scas
sub
inc
pop
mov
mov
int3
pop
pusha
shll
xor
and
loope
add
mov
mov
jmp
lahf
out
or
jmp
fucomi
in
gs
inc
inc
jge
mov
jge
xchg
ds
adc
aam
or
in
loope
out
or
dec
shl
mov
shll
adc
xchg
shll
xor
and
leave
or
dec
stc
in
jge
fucomp
jmp
stc
rorl
lods
shll
jmp
inc
loope
popa
test
fucomp
mov
jmp
loopne
shll
mov
dec
dec
or
cltd
mov
pop
adc
jl
jmp
mov
insl
mov
les
mov
in
test
jmp
jl
pop
lea
std
in
popa
in
in
jmp
imul
mov
mov
jnp
in
sti
popa
loope
mov
xor
xchg
in
jge
popa
jmp
jl
les
aad
mov
mov
popa
in
mov
jmp
cmp
mov
mov
dec
or
jnp
loope
stc
stc
add
pop
in
popf
mov
dec
in
aad
in
les
loope
les
inc
popa
jmp
int
mov
lods
jge
dec
or
dec
stc
lds
les
stc
xchg
xor
popa
dec
mov
fs
loope
pop
push
jo
aad
jge
jns
jns
mov
sbb
jns
jns
jle
scas
lret
add
icebp
cmp
push
adc
mov
dec
add
sbb
xor
sbbl
test
add
and
ds
push
int
or
mov
push
sbb
push
pop
mov
or
mov
repnz
and
insl
lock
cmp
pop
hlt
add
repz
sub
jno
push
pop
cld
push
cli
jns
xchg
loop
negb
add
jbe
dec
mov
xchg
fwait
jge
dec
sub
mov
adc
add
std
les
repz
cmp
mov
mov
dec
xchg
mov
out
cmp
repnz
fidivrl
push
sbb
xlat
sbb
popa
pusha
outsl
in
daa
jmp
fbstp
incl
stos
mov
int
mov
push
ds
clc
mov
icebp
ret
icebp
stos
repz
sahf
sub
add
lods
jecxz
lret
loope
mov
icebp
add
ss
imul
ss
jmp
popa
ret
cmc
addr16
sbbb
push
lds
fs
dec
int3
xchg
or
out
test
or
sub
mov
sbb
outsl
sub
pushf
mov
testl
cs
hlt
aam
mov
mov
inc
jg
lock
pop
xchg
out
mov
sahf
and
bnd
orb
mov
fldcw
pop
dec
icebp
add
mov
mov
sub
iret
dec
and
inc
adc
push
inc
xchg
in
aad
ja
pop
xchg
mov
jno
inc
repnz
mov
das
or
jmp
in
pusha
push
inc
adc
lret
jne
in
nop
leave
sbb
mov
inc
dec
mov
fldenv
movsl
sub
add
movsb
pusha
cmp
mov
out
jmp
pop
dec
cli
and
hlt
jne
leave
fmul
mov
pop
adc
and
mov
orl
add
shll
jbe
sbb
push
mov
jb
clc
icebp
mov
mov
inc
mov
icebp
xchg
aam
pushf
sub
cmp
out
mov
mov
test
sub
xchg
roll
jle
jecxz
call
pop
mov
hlt
mov
jmp
mov
enter
loope
rorb
push
adc
dec
cmp
mov
adc
add
add
xchg
outsb
push
or
adc
jno
pusha
mov
jo
aaa
cmp
fisubl
xorb
pop
scas
or
mov
sbb
subl
in
xor
or
or
das
xor
aad
or
sbb
ret
pushf
push
repz
push
xchg
leave
fcomps
mov
or
cmpsl
sub
jg
sbb
push
xchg
clc
ffreep
inc
sbb
cmp
lahf
lcall
sub
add
mov
dec
push
sbb
lock
cmp
das
mov
add
cmp
dec
mov
cmpb
add
sub
in
test
xchg
jmp
sub
adcb
or
ja
sti
insb
pusha
xchg
mov
or
icebp
test
lcall
sub
push
es
sub
int
pop
adc
arpl
cli
sub
aas
cmpsl
movsb
insl
mov
mov
int
ret
push
or
enter
jl
adc
jae
bound
popa
lret
xchg
fs
xchg
ds
lods
cmpsl
stos
or
cltd
push
inc
dec
add
in
pop
add
push
and
sub
push
cwtl
jmp
add
cli
mov
fcmovnbe
loope
mov
popl
dec
push
add
add
jle
add
and
mov
sub
icebp
cmp
mov
repnz
jbe
enter
in
mov
dec
flds
movsb
int3
outsb
out
lock
test
pop
mov
fs
adc
mov
test
out
in
into
iret
fcoml
add
repz
mov
nop
xchg
dec
out
mov
inc
aad
loope
xchg
loop
add
test
in
loope
push
in
sbb
cmp
mov
dec
insb
mov
scas
fdivs
cmpsl
add
cmpsb
xor
mov
or
sahf
sbb
ja
movsb
popf
push
cmp
jno
popl
mov
inc
adc
cmp
mov
in
mov
enter
cmpsl
cld
insl
je
adc
clc
jne
sub
ds
xor
ss
fstp
int
pop
enter
jl
cld
lcall
xchg
dec
out
or
movsb
jle
add
adc
mov
cli
mul
jmp
xor
jle
mov
inc
jecxz
push
aam
aad
lret
or
add
enter
dec
sti
cmp
jecxz
in
sar
mov
into
in
add
or
cmp
sbb
cmpxchg
push
pop
jmp
or
fldenv
add
leave
jg
int
or
push
mov
add
adc
xor
hlt
stc
aam
push
xor
mov
mov
or
mov
loope
loop
and
add
insl
out
clc
or
lods
shll
fbld
out
mov
mov
aad
pop
cmp
mov
nop
mov
xchg
shrl
leave
ficoml
xchg
mov
inc
lret
adc
dec
add
add
pop
int
push
hlt
inc
jnp
fisttps
lock
push
cmp
int3
into
es
or
xchg
sbbb
xor
pop
inc
scas
pop
imulb
add
test
or
and
andb
dec
movsl
ret
and
push
fcompl
cmp
sub
aad
repz
and
mov
or
cmp
mov
int3
sub
jge
popa
xor
cmc
pop
push
add
lret
loopne
test
dec
mov
pop
xorl
shlb
pop
gs
test
and
andl
inc
mov
add
sar
stc
mov
xor
jbe
ret
adcl
pop
icebp
xor
shl
insb
cmc
int3
add
ljmp
pop
sub
add
push
or
iret
sbb
xlat
xchg
sub
or
or
int3
clc
fs
xchg
imul
stos
inc
pop
sub
insl
pop
jge
leave
repnz
das
cmpsl
add
insb
or
jg
outsb
loope
fwait
sub
pop
sbb
mov
or
and
inc
push
psubq
out
mov
int3
lods
add
pop
dec
test
or
out
cmp
int
fsqrt
or
jno
push
add
mov
cmp
pushf
aas
loope
fnstenv
test
loope
lret
mov
or
and
mov
cmp
xchg
cmp
mov
push
xchg
push
inc
sbb
mov
or
ljmp
loope
sub
insl
pop
mov
and
aas
cmp
xchg
xchg
arpl
add
xchg
xlat
shl
or
out
hlt
push
jle
lods
adc
test
pop
lods
jns
jns
stc
sub
dec
hlt
xor
adc
iret
fdivr
leave
into
mov
gs
out
out
sbb
jecxz
imul
push
sbb
cmp
or
test
adc
sub
stos
imul
pusha
movsb
xor
test
lret
fsts
jl
fcompl
cmp
push
sub
cmpsl
jmp
add
pop
fnstcw
sbb
es
fisubs
movsb
add
jge
es
int
sbb
dec
xor
pop
sbb
push
add
stos
jp
add
int3
cwtl
fidivl
outsl
divb
in
icebp
and
sub
int3
mov
xor
fsubrl
jg
std
lcall
ljmp
xchg
fcmovu
xchg
sti
and
testb
jb
and
inc
adc
sar
daa
push
add
jbe
xchg
dec
adc
and
mov
mov
jmp
sarb
loope
outsl
jmp
push
in
leave
dec
add
mov
mov
xchg
push
icebp
xchg
cmp
and
pop
and
in
test
in
adc
rorb
subl
lcall
gs
add
in
lret
mov
fmuls
pop
push
mov
outsb
and
icebp
aaa
jns
adc
leave
loop
loop
mull
mov
mov
mov
cli
jg
mov
sbb
sbb
xchg
push
aas
lret
push
push
push
add
lahf
mov
shlb
movsl
lcall
divb
ljmp
cmpsb
vpunpcklbw
dec
pop
lods
sbb
or
orl
mov
cmp
cmp
mov
mov
inc
jnp
and
add
mov
rol
dec
movsb
cmc
xorl
negl
sub
je
frstpm(287
jge
sub
cltd
inc
lock
xchg
add
jl
jge
dec
popf
ljmp
jno
outsl
mov
pop
scas
pop
fsts
sbbl
lods
or
mov
pop
inc
pop
lock
loope
xchg
jg
xlat
push
imul
fwait
mov
xchg
repz
add
cmp
xchg
fadds
sub
mov
or
shll
mov
lock
dec
cmp
push
ret
mov
rolb
or
sub
xchg
fisubrs
dec
sbb
add
inc
ja
leave
or
push
dec
imul
pushf
gs
and
mov
mov
add
pop
rol
xchg
sbb
dec
inc
jb
fnsave
add
shl
push
sahf
lods
orb
pop
mull
mov
or
xchg
stos
stc
cld
cli
jae
cmp
hlt
leave
and
mov
cmp
mov
or
push
cmp
data16
xchg
lea
insl
ss
mov
enter
inc
dec
or
mov
dec
push
imul
sub
fists
jbe
mov
ljmp
outsb
lret
int
or
mov
or
jp
lea
cmc
xchg
in
loope
scas
fistl
add
rcll
dec
icebp
lea
mov
notb
mov
test
inc
add
in
push
sti
pusha
xchg
and
gs
cmp
lret
lock
test
int3
iret
subl
stos
jle
inc
icebp
ljmp
cmpb
std
adc
outsb
imul
jle
sbb
mov
jb
lods
xchg
jl
std
insl
xorl
push
pop
add
cmpsl
and
mov
adc
mov
je
imul
xor
xor
inc
shll
lds
sbb
lahf
scas
or
pop
mov
and
or
jl
stos
cmp
xor
int
push
mov
cli
or
les
inc
add
mov
aad
lret
imul
jb
sahf
bound
fisttpll
icebp
test
cmp
call
cmp
ja
scas
ret
add
pop
xchg
xlat
mov
or
lods
je
add
daa
iret
clc
sahf
or
or
int3
push
rcr
fucomip
and
or
mov
push
sti
cmp
inc
cmp
push
fdivrl
test
push
outsb
aad
add
pop
es
add
or
add
inc
or
mov
adc
mov
and
jne
daa
xchg
sbb
xor
andl
sbb
hlt
mov
mov
sub
adc
jmp
add
mov
fwait
adc
mov
es
dec
daa
add
sub
in
enter
xchg
and
aas
mov
fstpt
loop
dec
mov
sub
add
das
mov
arpl
adc
testb
fildl
jnp
shlb
sub
ja
push
adc
cli
mov
cli
dec
fidivrs
jle
flds
add
cmpsb
mov
pop
pop
inc
dec
insl
ds
cmp
lea
inc
imul
jmp
add
mov
push
dec
inc
in
mov
pop
adc
dec
cmp
add
pop
adc
pop
aaa
fs
int3
repnz
sub
or
sti
and
cmp
mov
mov
mov
test
bnd
dec
xchg
mov
lret
mov
push
repnz
fildl
ljmp
outsl
xchg
les
sub
jmp
push
fdivr
dec
mov
xchg
sub
jae
mov
dec
xchg
std
mov
lahf
cmp
pop
test
mov
pushf
mov
xchg
xor
das
dec
fnstenv
pop
mov
push
addl
mulb
add
dec
add
mov
pushf
mov
or
cmp
xchg
add
lock
iret
cmpsb
adc
test
pop
sbb
inc
sbb
mov
out
push
mov
movl
adc
cmpl
add
pop
xchg
pop
out
cmp
inc
push
jno
pusha
xchg
mov
fs
sbb
dec
adc
xchg
adc
push
push
lret
pop
pop
lret
aad
stos
jg
mov
fmull
and
adc
add
aad
dec
inc
cmp
push
adc
mov
bound
sti
scas
loop
movsb
sbb
pusha
add
cmp
hlt
icebp
shr
xor
jp
mov
leave
out
test
cmp
dec
into
jge
mov
sub
jge
mov
jmp
nop
enter
mov
aaa
iret
mov
inc
jns
movsl
jns
mov
aas
cld
iret
lods
jb
and
and
scas
insb
pop
xchg
lea
les
push
pop
mov
adc
insl
stc
add
cmpsb
out
inc
mov
ret
pop
jbe
jmp
or
arpl
xor
mov
icebp
jae
add
aas
repnz
dec
xor
movsb
sbb
sar
icebp
pop
in
repnz
xchg
loop
push
stc
subl
ja
xor
stc
or
shlb
hlt
mov
mov
jg
mov
sahf
outsb
fmul
mov
bound
xor
leave
das
sbbl
out
xchg
loope
cmpsl
push
jnp
dec
je
inc
xchg
mov
in
data16
movsb
pop
addr16
sub
cmpsl
addr16
jno
mov
rcrl
sbb
and
mov
sub
das
jmp
roll
icebp
jnp
adc
out
movsb
xor
cmpsb
mov
pop
stos
dec
das
jb
jbe
into
xchg
add
aad
mov
ds
pop
shl
rcrb
jo
mov
lds
sbb
mov
loope
enter
jo
add
call
and
insl
and
pushf
cmp
out
mov
fmull
or
ret
sbb
mov
fwait
cmpsb
pop
leave
icebp
dec
and
and
shll
cmp
add
xor
push
inc
scas
dec
cmp
cmpsl
mov
ret
add
sbb
xor
movsl
dec
jbe
mov
fs
test
push
mov
fs
dec
dec
jge
pop
sub
xchg
loope
dec
sbb
ret
xchg
lock
mov
mov
sub
icebp
inc
ffree
xor
xchg
test
adc
in
sti
adc
adc
pop
ret
jmp
mov
ret
dec
push
ljmp
ljmp
push
test
push
mov
pop
push
cmp
ret
cld
pop
mov
or
aaa
add
cmpsb
in
inc
sub
clc
cmp
cmp
xchg
add
in
arpl
cmp
fisttpl
popa
sahf
jo
push
mov
scas
cs
nop
shl
add
or
cli
mov
jmp
inc
mov
xchg
out
jmp
jg
out
add
mov
and
adc
sti
mov
cmp
and
mov
push
pop
lock
cmp
xor
mov
adc
ds
adc
in
lock
nop
mov
pop
fmul
jecxz
sub
xchg
testb
or
aas
lock
insl
pop
lods
cmp
icebp
enter
inc
xchg
mov
push
shlb
cmp
pop
xchg
or
das
mov
dec
fstps
sti
daa
dec
sbb
add
pop
jge
lods
std
roll
leave
jnp
add
cmp
test
sub
in
lock
hlt
sti
dec
xor
mov
test
shrb
mov
shll
or
data16
or
mov
in
lock
pop
arpl
sub
stc
lahf
cwtl
lods
mov
inc
cld
sbb
repnz
adc
jg
or
sbbl
mov
bound
jb
movsb
push
fnsetpm(287
bound
add
test
fisttpl
push
imul
frstor
xchg
mov
inc
jmp
jnp
fiaddl
mov
or
mov
cwtl
loope
ljmp
cmp
movsb
loopne
xchg
std
inc
iret
out
add
leave
ds
clc
aas
mov
in
mov
sbb
xchg
jmp
mov
sbbl
add
stos
pop
rclb
cmp
sub
or
les
stc
dec
or
jb
stos
sti
loop
scas
jmp
icebp
hlt
or
and
xchg
mov
int3
cmp
jno
push
dec
mov
jno
out
loop
pop
jns
inc
repz
bound
popf
cld
add
test
popa
fwait
loope
push
mov
cmp
mov
jg
dec
sbb
adc
mov
loope
xor
or
mov
in
xchg
aad
dec
mov
pop
push
mull
cmp
ret
push
pop
dec
fsubrl
test
lea
jge
xor
fcompl
xchg
push
xchg
icebp
and
stc
jp
jne
test
push
mov
mov
mov
or
repnz
jno
leave
ljmp
fisubrl
ret
aad
sub
stc
sbb
repz
icebp
cmc
add
es
jo
pop
out
in
and
push
lods
hlt
pop
rep
shrl
lods
push
jg
insb
popa
aaa
cmpsb
jge
test
popa
inc
sbb
jge
add
fildl
sbb
lahf
xchg
add
icebp
push
and
test
cmp
xchg
cld
out
jmp
sahf
lret
out
out
sub
lock
test
das
cmp
iret
xor
pop
add
mov
add
mov
mov
sbbl
shlb
adc
sbb
add
pushf
dec
loope
mov
add
sub
mov
sub
add
ret
mov
movsl
and
pop
sahf
push
in
xor
and
popf
scas
cmp
bound
add
inc
sahf
fwait
call
dec
jge
test
and
jns
xor
ror
mov
cmp
inc
push
repz
adc
cmpl
int3
sti
add
leave
push
arpl
das
iret
data16
nop
or
inc
int
mov
add
xchg
sbb
push
sub
inc
push
fcoml
mov
or
mov
scas
dec
hlt
sti
jo
leave
inc
pop
inc
xor
jns
call
push
jnp
mov
stos
popf
and
loopne
fbld
pushl
rolb
in
movsl
add
xchg
cmp
push
mov
fwait
sti
sbb
bound
gs
and
rcll
frstor
jne
gs
sbb
jmp
jmp
fbstp
ret
inc
dec
lock
push
mov
fsubr
int3
mov
lods
xchg
dec
xchg
jge
jmp
pop
and
cs
insl
cmp
rclb
add
sub
push
ret
xchg
add
xor
or
repnz
push
xor
mov
sti
outsb
das
inc
dec
jle
add
and
jo
push
mov
sar
pop
ds
cli
mov
hlt
and
mov
jmp
jne
test
repz
pop
xor
inc
xor
inc
mov
xor
dec
gs
movsl
xlat
fnsave
cmp
shlb
aad
sbb
jns
mov
test
fucomi
xchg
imul
jl
inc
lds
push
or
les
cmp
idivb
js
pusha
jae
push
cmp
rclb
hlt
pusha
mov
mov
fpatan
mov
add
sbb
add
cmp
pop
rolb
out
sbb
xor
enter
jae
xchg
sar
add
rorb
test
sub
push
clc
enter
sub
xlat
cmp
or
inc
dec
lods
in
inc
sbb
fiaddl
movsl
push
lahf
sbb
movsl
cmc
sbb
pop
add
lret
leave
sti
les
xor
xor
lods
push
clc
test
int
idivb
lret
leave
fbstp
jge
or
push
mov
test
jecxz
or
and
call
mov
jl
fnsave
add
sbb
pushf
xchg
xor
sarb
arpl
sbb
dec
cmp
fldenv
push
test
or
jmp
pusha
sti
outsb
or
popf
or
pop
jnp
push
sbb
jmp
dec
jle
or
aam
gs
in
outsl
adc
mov
lock
mov
lret
xchg
cs
sbb
sbb
xchg
or
push
mov
rol
xchg
pop
push
fwait
jmp
arpl
and
cmp
mov
add
fwait
cli
inc
jo
push
cmp
and
stos
lret
stos
jne
aam
imul
sbb
cmpsl
xor
fisttps
loope
shrl
icebp
mov
pop
inc
adc
pop
iret
jp
js
les
xor
inc
push
xor
out
lods
cmp
sbb
xor
int
dec
mov
jnp
in
add
sahf
push
cmpsl
lock
imul
mov
add
aaa
enter
add
dec
das
jecxz
and
xchg
xchg
jae
sti
ds
icebp
lock
aas
popl
or
add
enter
sbb
cltd
push
fwait
cmc
dec
test
rcll
xchg
sti
pop
js
adc
pop
in
sar
and
xchg
push
or
and
in
ret
xchg
sub
je
sub
cmp
loope
push
add
sbb
inc
outsl
fidivs
push
sbb
test
push
fidivl
ret
jmp
shlb
cmp
jl
fiaddl
jo
lock
xor
sahf
or
fsub
jecxz
test
inc
xchg
fiadds
dec
mov
xor
sbb
int
inc
sub
inc
in
test
lret
jb
xchg
or
jl
push
adc
sbb
mov
push
cld
inc
jg
jo
dec
lods
repz
mov
add
push
dec
push
dec
and
inc
icebp
shrb
xchg
pop
or
mov
mov
lods
push
hlt
cmp
call
xor
mov
pop
mov
aam
cmp
mov
or
fucomi
stos
add
stos
adc
stc
loope
sub
pop
adc
jg
xor
jmp
shll
adc
sbb
loope
mov
or
sub
shll
in
js
or
sub
out
or
cli
insl
lods
fsub
outsl
ljmp
mov
mov
lods
mov
or
ds
movsb
sahf
popa
loope
mov
iret
ljmp
jo
je
fisubrs
mov
shrl
inc
lea
gs
mov
inc
leave
loope
add
lret
jg
jnp
cld
adc
ljmp
xor
leave
jne
jmp
xchg
pop
jecxz
sub
movsl
arpl
stc
test
enter
lock
das
mov
stos
icebp
mov
jno
pop
movsb
scas
sbb
std
insl
stc
std
mov
stc
inc
in
xor
mov
or
pushf
jl
cltd
icebp
ret
or
andl
test
lods
loopne
aad
int
fstl
sub
jns
mov
shr
loopne
incb
stc
arpl
call
rorl
inc
jmp
lods
mov
jl
insl
popf
outsb
push
rcrl
sub
mov
mov
sti
dec
jecxz
inc
sub
std
test
push
xchg
xchg
mov
out
test
dec
inc
mov
xor
xchg
cmpsl
add
popa
xor
cmp
les
inc
in
lods
rorl
shr
in
mov
sub
lds
in
mov
jns
push
mov
add
cltd
fdivs
dec
arpl
aas
js
lea
xchg
inc
mov
bound
ljmp
add
push
aaa
pushf
pop
popa
aad
jmp
inc
rcll
cltd
pop
mov
sbb
cmp
fidivrl
dec
add
enter
mov
cmp
adc
mov
add
mov
sub
pop
icebp
mov
and
sbb
mov
mov
mov
mov
mov
add
push
and
sbb
rcr
mov
popa
sub
shlb
or
xorl
push
and
pop
cmp
mov
int
mov
dec
jne
or
or
cmp
int3
and
pop
addl
ret
inc
int3
les
fldcw
dec
inc
add
jnp
sti
hlt
push
jo
xchg
stos
xchg
inc
push
nop
ret
jae
xchg
xor
cli
pop
pop
cwtl
es
cli
inc
adc
dec
cmc
gs
cmp
mov
fldenv
add
lahf
pop
lret
data16
lcall
pop
gs
clc
scas
cmp
cmp
shll
repnz
mov
stos
stc
clc
jns
or
repnz
mov
pop
or
add
mov
xor
dec
test
in
mov
pop
mov
and
std
mov
pop
jp
fildl
jne
mov
cmpsb
mov
sub
or
mov
movsl
dec
es
lcall
mov
fs
in
mov
mov
clc
das
syscall
iret
and
and
fstps
es
pop
push
mov
jae
int3
in
or
mov
add
adc
mov
jns
push
jmp
popf
cmpsl
test
jno
scas
dec
jns
sbb
sar
cmp
shll
sbb
stc
addr16
push
leave
stos
dec
push
mov
shrb
into
mov
dec
stos
add
scas
scas
rolb
in
jmp
cmp
insb
mov
mov
arpl
fnstsw
fs
xor
movsl
mov
push
jmp
push
repz
lahf
jl
add
and
mov
add
repz
add
mov
lret
pusha
jns
xor
pop
mov
in
loop
jg
push
inc
int
cld
lcall
pop
mov
aas
add
push
pop
dec
xor
mov
scas
faddl
mov
push
or
sub
aas
cmp
icebp
dec
pop
rcrb
test
and
push
or
loop
fstpl
stos
sbb
sub
lcall
add
das
pop
mov
dec
add
pop
mov
lds
cmp
mov
adc
cmp
sbb
sbb
scas
xor
push
ret
jns
popa
and
push
adc
stos
and
mov
cmc
orb
or
dec
mov
add
adc
sub
in
mov
push
xchg
fucom
loop
add
or
js
das
loope
push
push
push
mov
repnz
cli
ss
cmp
sbb
mov
loop
cmpsb
or
pop
mov
lock
add
push
mov
or
xchg
xor
das
cmp
pop
insb
jns
sbbb
add
cmp
mov
mov
testb
mov
xchg
mov
sbb
out
mov
clc
jge,pn
stc
int
out
add
dec
lea
adc
loope
in
orl
test
outsl
add
ja
inc
iret
sbb
stos
imul
dec
lock
add
test
rcr
aam
mov
xor
inc
popf
mov
mov
or
jns
dec
cmc
imul
andb
jno
mov
in
xchg
mov
lcall
outsl
pop
int
test
mov
pop
cmp
cmpsb
or
jge
rclb
mov
out
mov
bound
loop
cmp
in
jp
mov
hlt
add
mov
mov
and
cmp
je
popf
icebp
add
add
mov
push
mov
pop
mov
and
sti
mul
cli
iret
xchg
leave
cmp
add
cmp
out
lods
dec
add
hlt
es
addl
push
sahf
lret
pop
out
mov
add
leave
icebp
cmp
stos
inc
leave
cmp
push
movsb
push
popl
cld
sub
fmuls
dec
lods
cwtl
push
nop
test
mov
aad
xchg
pop
int
push
in
pop
mov
jno
int
sti
test
dec
out
sbb
sbb
pop
sti
rclb
jge
sbb
dec
movsb
iret
shr
jmp
cli
xor
mov
add
adc
mov
xchg
pop
adc
mov
ret
add
xchg
enter
shl
test
sbb
lea
insl
ja
xchg
imul
aad
and
pop
or
nop
inc
cmpsb
cmp
mov
push
mov
aam
xor
repz
fdivl
test
popa
in
lods
jo
shll
adc
aaa
inc
aas
or
iret
fisttps
pop
cmp
sar
push
lret
ss
push
inc
das
or
xor
or
addr16
adc
movsl
pusha
pushf
sbb
loope
push
add
mov
pop
mov
xor
sti
add
jmp
or
push
cmp
dec
jg
mov
and
adc
jmp
dec
mov
pop
xchg
ficoml
mov
sbb
scas
les
jge
in
and
add
pop
lock
sarb
or
adc
leave
and
mov
mov
mov
popa
push
fcoml
dec
ret
and
dec
dec
aas
sub
push
add
mov
das
testl
or
std
jo
add
jnp
xchg
mov
hlt
mov
pop
xchg
punpckhdq
sbb
push
int
sbb
add
pop
or
hlt
add
sarb
stos
push
mov
lea
pop
add
test
out
pop
dec
insl
inc
mov
jne
mov
xchg
movsl
test
mov
je
insb
push
mov
rorl
xchg
or
cmpb
or
adc
cmp
xchg
test
xchg
sub
jmp
cmpsb
mov
testb
sti
mov
cmp
pop
pop
lret
or
cmp
push
jns
xlat
mov
mov
add
mov
iret
jo
pop
mov
repz
fcmovbe
icebp
dec
outsb
lret
mov
mov
or
inc
pop
cmc
xchg
pop
push
shl
aaa
xchg
xchg
xor
outsl
stc
mov
cltd
and
lcall
cmc
jbe
pop
je
out
add
out
fldl
aas
insb
dec
sar
add
and
stos
hlt
int3
in
push
icebp
adc
in
mov
mov
je
dec
cmpsb
daa
pop
mov
popf
mov
idivb
push
pushf
enter
stc
add
sub
sbb
leave
andl
cmp
jb
ret
add
inc
mov
add
push
subl
xchg
push
idivb
je
cmpsl
cmp
and
sbb
in
ja
int
pop
in
add
fadds
in
test
hlt
loopne
push
xchg
jp
mov
or
int3
and
movsb
ret
lods
inc
jnp
jmp
mov
movsb
lret
cmpsb
pop
fxch
dec
add
adcb
add
ja
negl
mov
call
mov
pop
movsl
add
ret
push
std
shl
mull
lods
sti
leave
pusha
and
fsubl
enter
sti
cs
cmp
mov
imulb
dec
jmp
int
or
xchg
aaa
lcall
imul
sub
scas
jo
lods
lea
mov
xlat
dec
lds
mov
inc
scas
mov
les
cs
sbb
jl
add
xchg
jnp
sub
add
cmpsb
or
sbb
inc
cld
cmp
xchg
test
icebp
fxtract
cmp
cmp
pushf
sub
sar
dec
loope
jns
cld
sbb
orl
mov
dec
and
xchg
or
adc
or
aam
daa
xor
xchg
dec
pop
or
pop
xor
inc
not
xchg
mov
adc
popf
cmp
js
pop
das
xchg
cmpsl
cmp
jmp
mov
lods
pop
jnp
icebp
add
in
pusha
jle
loope
fisubl
or
int3
xchg
data16
dec
stos
cmp
sbb
fs
xchg
sti
ret
push
dec
incb
popw
pop
mov
loope
idivl
ss
add
sar
lret
ja
and
push
movsl
sti
inc
jle
xchg
out
add
stos
test
imul
ret
xchg
push
xchg
stos
push
sbb
imull
movsl
daa
shll
or
mov
dec
daa
lret
into
mov
cmp
in
push
aas
popa
mov
fmul
add
pop
in
jmp
inc
adc
pop
xchg
push
sub
xchg
in
mov
sbbb
push
mov
clc
adc
pop
sub
leave
xorl
mov
cmc
and
pop
mov
push
xchg
xchg
pop
dec
outsb
fiaddl
out
mov
movaps
inc
jno
inc
popa
inc
repnz
and
and
dec
orb
into
dec
pop
lds
xor
sub
xchg
add
cmp
int
int
pop
jge
jmp
cmp
or
mov
pusha
movsb
shl
jb
les
sub
xchg
pop
cltd
sidtl
test
inc
mov
inc
int3
xchg
dec
mov
inc
movsl
xlat
pop
icebp
in
push
js
popf
mov
mov
sbb
mov
sub
and
cld
and
dec
inc
jmp
les
stos
incb
ljmp
add
jnp
in
pop
shrl
or
inc
dec
cld
iret
repnz
inc
add
outsb
ret
stos
aam
or
fstl
cmp
jmp
pop
adc
add
xchg
xchg
stos
mov
inc
xor
ret
int
test
adc
fs
adc
xlat
bound
xor
add
mov
int3
sbb
jnp
xchg
mov
cmpsb
inc
hlt
dec
mov
cld
jp
in
dec
rolb
xchg
xchg
ret
inc
outsl
sub
add
mov
movsb
inc
xlat
aam
cmp
icebp
test
int
add
cli
mov
xchg
stos
ds
or
scas
lcall
int3
aas
add
push
push
mov
ss
mov
jl
lock
pop
dec
cmpsl
int
cmp
mov
mulb
cmp
leave
mov
or
lret
scas
mov
cmpsb
jmp
dec
jge
ljmp
sbb
mov
dec
or
or
in
cli
popa
daa
xchg
mov
xor
jmp
shll
push
jp
lea
rolb
or
mov
jle
dec
mov
and
xchg
cmp
jp
iret
ffree
sbb
jns
push
call
cmp
je
adc
xchg
mov
fisubl
rcr
add
xchg
test
jl,pt
cmpsl
sbb
inc
imul
cmp
cmp
fcmovnu
push
or
sbb
decl
repnz
push
xchg
inc
call
inc
lock
enter
outsb
mov
cmp
arpl
add
cmp
loope
bound
xchg
mov
inc
lret
jo
xchg
pop
mull
add
mov
leave
add
xchg
jmp
aad
push
xor
das
xor
movsl
xor
scas
adc
data16
dec
int3
bound
rolb
jp
neg
testb
or
test
fwait
dec
add
dec
rclb
fld
xchg
cmp
push
xchg
pop
in
insl
push
in
imul
sbb
cmp
lds
cmp
es
lcall
testl
in
adc
stos
lret
ret
inc
icebp
and
iret
or
incb
imul
imul
jns
notl
push
mov
faddl
pcmpeqd
xor
fisubl
shll
jp
sbb
inc
xchg
push
sar
popa
fwait
xchg
repz
ret
stc
mov
xor
xlat
mov
push
cmp
mov
out
jns
jo
pop
stc
sub
xor
inc
pop
leave
icebp
repnz
div
std
jnp
sti
adc
lods
mov
push
ja
jae
rclb
inc
les
jnp
mov
lock
push
xchg
sbb
imul
inc
pop
inc
mov
mov
repz
lret
pop
inc
arpl
add
push
icebp
cmp
jg
sahf
loope
mov
aaa
lods
pusha
jecxz
popa
push
leave
inc
mov
in
adc
packsswb
jle
jnp
cmp
fsts
push
test
mov
aas
jne
sbb
lds
inc
jp
cmpsb
aaa
jbe
mov
scas
mov
cld
aad
inc
fs
adc
jno
je
mov
xor
inc
cmp
aaa
test
fisubs
cli
jp
mov
xchg
jmp
mov
int
cmc
sbb
cltd
fs
fwait
pop
jo
fstpt
cmpsl
mov
insl
daa
gs
mov
push
lods
jo
outsb
rcr
adc
fcoms
sub
and
mov
add
loope
pop
movsb
dec
iret
mov
sahf
dec
ficoml
mov
das
mov
jo
add
lods
mov
leave
cmc
popl
das
out
sub
fcmovne
lea
push
insb
push
push
push
aam
cmp
jmp
ljmp
data16
scas
push
std
mov
jmp
pop
repz
push
mov
sti
pushfw
insb
sahf
and
add
fmul
scas
mov
lret
bound
sahf
ds
xchg
fcomp
cmpsb
das
in
roll
or
dec
out
sub
add
jmp
stc
cmp
fs
push
repnz
or
into
push
pop
mov
and
mov
lcall
add
sbb
imul
add
adc
xchg
das
mov
lock
lods
inc
xchg
push
mov
insl
into
out
or
call
aaa
adc
xchg
pushf
std
xor
aaa
cmp
pop
add
sub
and
hlt
push
movsl
incb
sbb
jnp
mov
mov
xchg
cli
in
ljmp
in
mov
add
and
fxch
hlt
adc
mov
add
das
add
push
mov
shrl
scas
out
ljmp
push
insb
mov
push
fprem1
fidivl
test
popa
ret
mov
int3
mov
rcll
mov
test
cltd
jl
pop
orl
mov
dec
sub
test
pop
mov
push
mov
push
cmp
std
cmp
dec
adc
adc
xor
mov
std
in
xor
cmpsb
push
ret
call
mov
jl
mov
mov
fs
aas
mov
out
mov
jb
ds
faddl
icebp
stc
ret
imul
mov
lahf
repz
mov
aas
add
adcl
jge
and
popf
imul
add
testl
dec
jle
shl
loope
aam
jp
sub
mov
rcll
insb
lret
aas
pushl
mov
inc
sub
lock
lcall
cmp
pop
shl
adc
push
jns
cs
insb
adc
inc
push
fucompp
xor
mov
lret
sub
lahf
pop
push
mov
movsl
and
ja
decl
jbe
xchg
mov
notw
stos
lods
push
jmp
lock
loope
or
and
lock
fs
insl
push
add
xchg
sub
ljmp
imul
jle
pushf
xor
es
jge
mov
lds
scas
insl
push
and
pop
cmp
lret
pop
sub
shlb
fxch
ret
add
ss
mov
hlt
xchg
ror
push
hlt
fldenvs
loope
rcrl
jno
mov
or
xor
into
cmc
add
and
cwtl
test
aas
inc
pop
pusha
fucompp
cmp
incl
add
cmp
pop
aad
jmp
dec
sbb
jbe
push
lea
pop
push
mov
fs
push
repz
jb
out
add
cmpsb
pop
xor
push
addl
and
iret
xchg
or
idiv
add
sub
clc
pop
ret
jge
push
adc
and
pop
add
jmp
push
fs
sti
loop
or
cld
xor
dec
push
mov
pushf
js
sbbl
lds
mov
scas
cmp
inc
jbe
dec
dec
cmp
insl
pushf
push
inc
hlt
pop
mov
outsb
mov
inc
hlt
sbb
mov
lcall
jg
shl
shr
stos
fld
inc
or
fldt
mov
movl
cmc
mov
or
ret
or
test
push
cmpsl
lock
add
fidivrs
sub
insb
xor
faddl
adc
hlt
sbb
or
addr16
mov
xchg
xor
inc
repnz
les
in
iret
addr16
insl
lret
ud0
addr16
pop
and
pop
or
pop
enter
mov
les
cmp
or
pop
jge
push
fldt
fbld
dec
xchg
movsl
aad
xchg
push
sbb
test
sarl
test
loope
sbb
pop
mov
add
adc
inc
testl
lahf
and
iret
jmp
jge
repnz
cmp
jcxz
add
or
int
std
pop
in
int3
imul
pop
test
mov
shld
dec
adc
loope
scas
mov
sbb
leave
sub
out
or
mulb
mov
lods
push
stc
push
mov
push
fdivrp
jbe
pop
stos
enter
fisubl
pop
sar
xchg
test
addb
divl
xor
or
pop
dec
cmc
pop
push
pop
in
cmp
cs
sbb
pop
ss
lret
shl
popf
mov
dec
divl
xchg
mov
xor
cmpsl
lret
mov
pop
push
or
movsl
xchg
xor
mov
jne
dec
add
mov
push
pop
mov
mov
mov
or
std
loope
lods
cwtl
fisubs
ret
or
and
jns
sbb
push
in
mov
subl
or
dec
ds
icebp
mov
js
ret
cmp
xor
and
mov
ljmp
imul
sub
xchg
push
rcll
scas
jae
lea
sbb
push
cmp
dec
fidivs
jae
repz
dec
inc
mov
rorb
jle
scas
aas
ret
xchg
dec
sub
insl
sbb
push
fcmovnu
mov
mov
push
fs
arpl
pop
jle
add
aam
xchg
adc
in
mov
aas
aad
add
stos
xchg
xchg
outsl
jg
stc
add
inc
inc
adc
jnp
pop
push
in
mov
out
icebp
mov
lds
cmp
jns
or
jnp
stc
mov
shll
testb
jo
mov
xchg
fisttpll
idivl
mov
mov
cwtl
add
mov
je
daa
pop
movsl
or
lea
push
jo
pop
push
fdivr
fs
dec
or
push
mov
jmp
mov
push
imul
dec
cmp
inc
xor
js
lds
pop
test
or
fs
out
dec
incb
leave
test
movsb
aas
add
imul
push
or
in
pop
fstl
add
popf
sbb
icebp
or
inc
pop
sbb
xlat
imul
sbbb
add
mov
pop
std
pop
add
adc
shll
jno
cwtl
mov
sub
mov
fs
les
inc
nop
sub
mov
or
add
add
cmp
pop
loop
hlt
inc
ss
fisubl
or
int3
mov
mov
adc
adc
xor
cmp
add
mov
cmpsl
mov
ja,pt
test
and
loop
cmc
adc
push
cmp
fistpl
add
jecxz
movsb
sbb
add
pop
ret
insb
clc
ret
add
shrb
loop
lcall
mov
xchg
imul
mov
cmpsl
mov
cmpsb
clc
jnp
add
gs
xor
or
mov
add
iret
push
movsl
into
fcoml
cmp
pop
in
sub
cmp
sbb
out
lock
lahf
lods
clc
lods
xor
aam
jo
xchg
movsl
movsl
ret
ds
xchg
in
sbb
fsub
xor
adcl
push
jle
or
cmpsl
xchg
pop
in
lcall
xor
shll
in
inc
cmp
int
imul
xchg
ret
ljmp
sub
jne
fisubl
xchg
test
es
cmp
pusha
push
mov
mov
add
jo
add
dec
add
sub
dec
mov
mov
pop
ljmp
mov
cmp
adcl
pushf
rcrb
ja
scas
jecxz
push
sbbl
test
sub
pop
pop
lea
nop
and
popa
adc
iret
inc
push
clc
lret
test
jle
dec
ret
add
leave
clc
xchg
cmp
cmp
test
sub
imul
cwtl
xchg
push
inc
mov
cltd
adc
add
jns
orb
jle
in
add
push
xchg
sub
int
add
jb
mov
mov
iret
in
or
lds
sbb
cmp
aas
in
mov
push
cmp
add
fcomps
in
int3
pop
cmpsl
cmc
int3
xor
pop
std
add
sbb
mov
repz
faddl
mov
cmp
outsb
add
pushf
push
sbb
stos
lret
sub
add
das
add
test
in
mov
pop
notl
inc
mov
lret
jbe
loop
lret
sbb
mov
mov
jge
movsl
jnp
mov
leave
sbb
sub
sub
mov
mov
cmp
sti
add
dec
loop
inc
xrelease
push
pop
gs
and
push
sti
cmp
inc
and
xchg
iret
fsubl
pusha
add
in
mov
insl
std
addr16
arpl
fildl
cmpsl
pop
jmp
adcl
shrl
fisubrs
shlb
mov
and
add
sbb
push
xlat
das
daa
and
add
cmp
fnsave
mov
xchg
or
dec
fmul
sbb
loope
bound
add
pusha
mov
outsl
popa
cltd
or
cmp
popf
cmp
fldl
mov
jb
hlt
repz
lret
das
and
clc
dec
jo
jo
push
jle
cwtl
mov
add
xchg
xlat
sahf
dec
xor
lds
cmc
dec
mov
leave
push
add
repz
jns
mov
cmp
je
sub
pusha
jno
push
push
psraw
sbb
cmp
inc
fmul
nop
mov
xor
xor
in
mov
mov
test
sub
ret
add
shlb
jnp
roll
mov
ds
xor
push
std
sub
out
imul
dec
push
lods
test
mov
or
repnz
mov
inc
pusha
aam
hlt
mov
adc
movsb
lds
test
jmp
fmull
sbb
push
jbe
movsl
add
fdivs
cmp
pop
scas
sbb
lods
mov
daa
hlt
jo
shrb
lahf
cltd
jle
mov
mul
repz
aam
mov
movsb
cmp
add
and
mov
add
sbb
stos
xcrypt-cfb
cmpsl
and
mov
in
pop
pop
fisttpl
movsl
sbb
outsl
push
xchg
int
pop
mov
lea
aad
xchg
cmpl
inc
sbb
pop
push
mov
jge
ret
and
adc
fiaddl
mov
dec
add
jne
test
jne
push
popa
mov
sti
mov
push
and
int3
cmp
dec
or
shrb
and
ja
push
or
push
xchg
cmpsl
dec
shlb
add
imul
addl
ret
pop
es
add
cmc
mov
stos
add
mov
xor
add
sbb
rolb
mov
inc
sahf
andb
cs
shl
js
push
inc
xchg
test
adc
mov
mov
imul
push
sbb
pop
push
aas
mov
adc
mov
add
cli
repz
push
cld
and
add
jae
adc
je
add
pop
jae
pop
mov
stos
incb
dec
push
andl
sti
clc
cmp
popl
mov
mov
frstor
test
xchg
pop
pop
mov
xchg
and
mov
test
xor
add
dec
mov
lahf
sub
test
and
or
mov
xlat
push
cmp
popw
add
push
rcl
bound
cmp
jecxz
cmc
xor
loop
pop
das
std
scas
pop
xchg
dec
loopne
mov
mov
mov
es
inc
popf
mov
add
testl
mov
push
loop
in
sbb
xchg
add
push
lea
xor
add
xor
cmpsb
insl
or
adc
xor
aad
in
push
lods
add
ss
es
imul
pusha
add
imul
ficompl
nop
sbb
jo
mov
xchg
inc
jp
sub
mov
sahf
lret
sub
pusha
push
mov
stos
js
mov
jg
mov
movsl
lret
inc
dec
or
hlt
cmpsl
sub
add
xor
das
sbb
jne
xchg
adc
push
leave
sub
lret
pop
adc
lret
push
test
xchg
outsl
push
dec
ja
aaa
imul
test
leave
mov
fsubrl
dec
cmp
or
fs
int
xor
sti
lea
pop
shl
stos
test
adc
outsb
mov
adc
dec
dec
cld
es
mov
scas
jo
jl
or
arpl
fstpt
repnz
pop
mov
pop
or
xchg
fcoml
loop
rcr
jp
sti
mov
lods
cmpsl
pop
sbb
inc
dec
adc
sbb
xor
pop
lahf
in
add
sar
in
sub
add
test
lock
xor
sbb
xlat
dec
leave
cmp
xchg
or
mov
pop
adc
mov
imul
xchg
jne
lock
jmp
ja
icebp
fnstsw
cmp
je
cmp
push
fs
fisttpl
decb
or
pop
mov
cmpsl
lret
test
aaa
or
cmp
lods
lock
xor
pusha
aas
adc
pushf
roll
dec
shll
or
cmp
adc
and
pop
adc
fimull
adc
mov
mov
mov
in
lret
pop
stos
push
fiaddl
std
sub
scas
lcall
in
or
sbb
data16
enter
push
adc
cs
jp
jne
das
push
jle
jb
bnd
out
mov
lret
mov
fcmovnb
or
push
sbb
stc
stc
add
mov
jae
out
das
rorb
and
loope
in
mov
int
clc
or
mov
or
jecxz
adc
mov
jns
movsb
or
jns
or
stos
loope
add
or
movsl
js
stc
loop
loope
jge
rcrl
jp
pop
xchg
pusha
in
orl
cmp
loope
inc
mov
dec
rorl
mov
rcr
or
repnz
loope
outsl
dec
jns
dec
orl
mov
rcrl
xor
test
inc
stc
pop
mov
rcrl
mov
mov
loope
jge
mov
dec
or
push
loope
jmp
jmp
xor
pop
ds
xor
into
lods
out
sbb
inc
jns
xor
inc
xor
imul
sbb
jns
cltd
jecxz
mov
jmp
mov
cmp
sarl
mov
test
fmull
imul
insl
dec
and
mov
ret
adc
sbbl
popa
lea
lods
pop
lock
mov
lds
loopne
push
jmp
mov
xor
jno
dec
aam
mov
scas
dec
mov
lea
cmp
jge
dec
sub
insb
jmp
movsl
in
push
testl
jns
or
nop
fnstcw
mov
dec
and
out
xor
add
sub
std
push
xor
loope
mov
inc
jns
shl
push
mov
dec
push
addr16
inc
scas
ret
cltd
imul
cmpl
jmp
adc
orl
test
popa
dec
loope
mov
mov
sbb
enter
idivb
dec
jg
cmpsb
cmp
iret
cmpsl
add
lea
out
pop
jge
in
sub
xor
int
mov
loopne
jnp
cwtl
jno
xor
xor
call
add
or
stos
jo
push
out
inc
cmp
add
lock
add
pop
add
lret
ja
or
jnp
mov
arpl
and
pop
jp
sbb
xor
mov
shll
sahf
shl
xor
aaa
subl
pop
sbb
mov
fwait
rcr
cmp
out
mov
jnp
adc
rcrb
and
inc
icebp
xlat
into
negl
hlt
call
inc
into
lea
outsl
daa
xorb
dec
in
jns
or
add
ljmp
ret
xchg
rclb
mov
cli
and
dec
push
add
mov
push
dec
and
add
mov
sti
and
hlt
cmp
add
add
mov
cli
and
mov
xchg
enter
mov
lea
cmp
popa
setnp
mov
add
add
add
stos
jns
aas
push
push
mov
js
add
push
pop
inc
cmc
add
out
add
scas
pushf
fidivrl
das
dec
sbb
cmpsb
cltd
sub
stc
mov
sbb
sbb
or
add
cmp
mov
mov
imul
scas
sahf
mov
adc
pop
loope
rcrl
lret
test
fisubl
lcall
icebp
cmp
arpl
sbb
ds
iret
rolb
add
xchg
in
test
mov
push
sbb
cmp
in
fsub
imul
sti
lea
test
out
adc
add
mov
inc
dec
je
sbbb
in
out
push
push
mov
add
gs
lea
add
push
outsb
inc
sti
negb
lahf
ljmp
das
icebp
stos
popa
dec
aad
cmpb
lods
add
in
xor
das
inc
test
cmc
jo
loopne
cmp
push
mov
repnz
mov
out
jo
cmp
and
xchg
inc
add
pop
xchg
cmc
loope
adc
cld
lret
cli
jl
cwtl
jg
jne
mov
add
daa
mov
in
adc
stos
aad
add
shl
pop
call
jo
shr
addl
jg
add
sti
push
rcl
xor
lds
clc
in
inc
mov
in
iret
inc
sub
and
filds
adc
jl
pop
hlt
or
dec
repnz
mov
pop
in
int
dec
mov
lods
mov
pop
enter
sub
mov
add
pop
aam
daa
lret
lret
stc
adc
xlat
adc
xor
inc
or
cmp
test
test
cmpsl
mov
pop
fs
lcall
ficoml
icebp
xchg
stos
sub
test
stos
leave
push
enter
push
push
fstl
pop
and
mov
int3
test
jno
mov
jg
lock
in
inc
and
pop
xchg
mov
xor
sbb
popa
popa
ret
jmp
pop
push
movl
data16
pop
movsb
jmp
add
add
shll
inc
cs
fldl
movsb
mov
xchg
push
pop
dec
cmp
es
cmpsl
or
sbb
jae
xchg
cmp
add
ja
pushf
and
fcompl
nop
lea
and
pop
adc
xchg
hlt
cltd
fwait
lds
xor
jle
in
push
adc
in
cmp
int
std
jp
jnp
jns
add
hlt
pop
and
pop
int
lods
mov
dec
dec
test
mov
rcrb
mov
enter
das
std
jmp
add
push
cwtl
jmp
and
mov
arpl
sbb
xor
lods
pop
leave
jns
sub
jo
jnp
int
test
sti
dec
push
dec
or
jns
mov
pop
addl
inc
xchg
jmp
sbbb
xor
imul
sahf
out
xor
cmp
sbb
subl
xchg
cmp
sub
sub
cmp
dec
movsl
jp
aam
sub
add
cli
xchg
js
test
andb
and
int3
adc
sbb
jle
mov
lea
sub
movsl
cmp
mov
lret
pop
or
xor
notb
add
pusha
in
shlb
stc
xchg
sbb
jg
xchg
cmp
cmp
sub
push
xchg
testl
mov
and
mov
incl
pop
adc
fildll
dec
jmp
int
hlt
fs
loope
leave
dec
jo
push
cmp
inc
daa
push
or
cmc
movl
lds
add
jmp
jne
shl
push
push
fisttps
movsb
ljmp
sub
pop
cmp
jecxz
in
lea
cld
cmp
out
mov
xchg
and
adc
fprem1
sti
xchg
fcmovnu
mov
aad
adc
or
test
icebp
adc
stos
mov
mov
test
mov
aad
fs
cli
xor
ss
push
lock
lds
mov
adc
aam
cmpsb
lret
cmpsl
pop
or
or
add
dec
out
mov
js
inc
and
gs
sti
sub
outsb
inc
inc
rcrb
mov
pop
xchg
mov
xor
fwait
add
push
and
sub
pop
adc
fstp
cmp
roll
icebp
pop
inc
negb
fs
fbstp
sub
aas
sti
mov
leave
cmp
dec
sub
mov
and
add
mov
rorb
jnp
mov
or
adc
imul
inc
push
cmp
add
dec
outsb
adc
jl
add
insl
sbb
sbb
push
mov
ds
push
hlt
mov
ret
mov
movsb
shl
in
subl
xor
xchg
add
or
fs
xor
int3
lock
les
fimuls
pusha
mov
shll
cmp
pop
outsl
add
out
inc
lahf
ror
and
insl
inc
jns
fwait
rcrb
mov
mov
pop
orb
gs
mov
jmp
xchg
or
lahf
cmc
pusha
scas
xchg
shll
mov
mov
rcll
mov
ficompl
mov
fs
inc
iret
pop
fnstcw
dec
add
lret
cmp
stc
mov
mov
mov
add
and
push
and
sti
cltd
push
and
nop
adc
fiaddl
mov
outsl
std
sarb
rorl
rep
arpl
mov
fsts
xchg
mov
aas
daa
or
ds
std
movsl
xchg
cmpb
push
aas
and
xchg
xlat
ret
and
in
js
lcall
jae
push
faddl
mov
pop
sub
push
xor
dec
pmaxub
loope
mov
pusha
mov
repz
xor
sub
fcompl
adc
repnz
cmp
sub
out
test
outsl
pop
shlb
xor
outsb
cmp
cmpsb
lahf
cmp
push
pop
dec
out
pop
fstp
into
inc
pop
popa
lahf
stos
mov
inc
lds
fistpl
xor
rorl
or
add
add
negb
scas
lahf
in
push
adc
dec
sub
mov
mov
mov
dec
aam
push
inc
out
jb
hlt
xchg
jo
push
add
jbe
cmpb
adc
rcll
cmp
push
rolb
sub
in
push
jl
cld
in
mov
xor
xchg
sub
xlat
mov
fs
push
hlt
sti
decl
out
jmp
jnp
xchg
add
push
dec
clc
dec
iret
cld
js
sub
in
iret
and
pop
dec
mov
iret
loope
lds
push
dec
aam
cmpsl
and
xor
jmp
decl
int3
xchg
mov
pusha
jo
lock
jns
mov
adc
in
adc
in
aas
bound
shrb
xchg
sub
and
ds
call
pop
mov
push
and
pop
int
add
jle
repnz
ja
push
repz
dec
ds
cmp
jnp
sbb
add
mov
rorl
out
je
xor
xor
aaa
xor
adc
or
int
sbbl
dec
nop
ja
xchg
pop
lds
rorb
cmp
add
notw
pushf
mov
scas
adc
insl
xor
ljmp
aad
pop
mov
cld
xlat
aam
xchg
push
sub
imul
aam
icebp
subl
lret
cmc
aad
adc
shll
stc
adc
scas
and
or
lock
iret
sub
popa
andl
repnz
inc
inc
in
icebp
jae,pt
mov
stos
push
scas
add
in
add
lds
mov
push
ret
ss
in
add
insl
mov
mov
ret
add
in
rorb
add
clc
sub
lahf
xor
add
lcall
in
add
jnp
mov
add
cmp
in
cmpsl
and
cwtl
fildll
xchg
cmc
enter
or
xor
icebp
push
arpl
jmp
jo
cmp
fldcw
add
lahf
xor
inc
cmc
nop
rclb
add
stos
and
push
mov
xor
mov
cmp
sbb
addr16
adc
mov
and
test
cmp
in
in
mov
lods
mov
call
lods
push
insb
add
aaa
cltd
xchg
test
bnd
rclb
dec
stos
mov
add
and
jnp
int
pop
xchg
mov
cmp
fwait
dec
pop
repz
xchg
xchg
jmp
mov
mov
int
repz
insb
xchg
xchg
adc
adc
sub
sub
ffree
jle
idiv
out
fisttpl
shl
dec
xchg
xor
xchg
rcrl
pop
mov
pop
ds
cmp
rolb
mov
bnd
repnz
add
mov
adc
pop
sbb
cmp
xchg
push
insb
ret
ror
add
and
rorl
test
movsl
cli
imul
arpl
mov
dec
mov
in
sarb
adc
stos
icebp
add
add
js
in
test
xorb
out
push
out
rep
pop
test
dec
pop
or
lahf
shlb
repz
fisttpll
loope
or
push
jb
int
icebp
mov
mov
xchg
cmp
cmp
dec
faddl
lcall
fsubrl
and
and
int
xor
sub
insl
mov
cmpsl
mov
mov
outsl
lods
pusha
mov
popa
insb
sbb
insl
xlat
fwait
pop
cmpsb
xor
sbb
movsb
adc
lods
test
or
sub
cmp
push
pop
adc
sbb
xor
cwtl
movsb
in
sarb
mov
inc
mov
pop
popa
mov
adc
stos
jb
push
fldcw
or
clc
icebp
ficoms
pop
stos
lret
push
jno
clc
dec
adc
mov
or
push
xchg
out
rorb
jge
in
mov
sahf
aaa
imul
arpl
cli
or
popf
popl
push
jmp
dec
stc
cmp
loope
movsb
in
test
cltd
dec
jno
mov
movsb
lods
icebp
loop
xor
or
mov
shlb
stos
inc
inc
loope
adc
lea
int
sbb
ljmp
aaa
jecxz
or
jnp
mov
and
insl
in
xlat
and
inc
mov
cwtl
jmp
mov
dec
ja
in
xchg
lock
lods
leave
sub
lea
loope
pop
sti
dec
mov
stc
gs
cmp
xor
rolb
xchg
lea
inc
mov
mov
cmc
and
imul
lods
jns
hlt
jmp
pop
in
add
xchg
jmp
std
or
jge
cmp
bound
stc
mov
mov
movsl
inc
cmp
adc
filds
lods
inc
adc
std
cltd
stc
and
lods
mov
in
jns
mov
sub
xor
or
sbb
add
fxch
jo
adc
jge
add
sub
sbb
sbbl
mov
add
sti
jmp
imul
popf
dec
jno
mov
pop
lods
sbb
rorl
mov
fnstenv
stc
test
out
push
dec
in
in
adcl
stc
xor
roll
pop
shll
mov
push
adc
dec
inc
in
mov
imul
and
lods
jno
push
jno
pop
mov
jno
add
movsb
std
mov
pop
xor
imul
and
adc
mov
inc
jmp
icebp
add
sub
dec
scas
mov
cwtl
in
or
rclb
test
jmp
cmp
test
add
push
stc
rcr
cmpsb
repz
stos
popa
std
mov
xor
movsb
adc
jae
out
add
lods
dec
fisubrs
jp
or
and
ret
test
test
xor
add
mov
add
daa
mov
mov
stc
pop
pop
fldenv
mov
cmpsb
sub
jb
xor
push
out
pop
aam
lcall
loopne
icebp
xor
add
out
push
dec
or
in
sub
aam
fwait
pop
icebp
add
arpl
add
cli
arpl
or
dec
leave
xchg
pusha
dec
fisubrl
push
dec
int
cmp
in
sbb
sub
or
data16
mov
dec
mov
push
sub
loope
or
xchg
outsl
int3
push
lods
stos
dec
push
jbe
xchg
sahf
and
pop
jne
mov
pop
mov
mov
cli
fs
imul
add
lret
iret
call
in
mov
in
add
loop
pop
test
jmp
cld
mov
cwtl
aam
enter
in
xchg
in
ss
int
ret
dec
rolb
xchg
cmp
mov
push
clc
ret
pop
xor
xchg
int
iret
aaa
out
or
mov
push
mov
and
cmpsl
out
outsb
sbb
nop
pop
jecxz
mov
xchg
xor
add
in
add
cmp
aad
push
xchg
out
xor
sbb
inc
fwait
lret
data16
mov
dec
icebp
dec
sarb
js
mov
cmc
imul
push
out
mov
xor
aam
push
imul
pop
sub
dec
aaa
fldenv
add
jno
pop
dec
dec
fldcw
mov
loope,pt
cmp
mov
or
ret
pushf
bound
mov
xchg
mov
sahf
das
incl
jnp
xchg
stos
lcall
and
rcll
xor
push
mov
or
cmp
in
cmp
sub
mov
imul
xchg
cld
push
mov
ret
inc
and
lock
rorb
stos
push
mov
pushf
test
add
dec
pop
mov
add
pop
lods
xchg
push
popl
inc
dec
adc
cmp
jae
lret
fistpl
push
adc
int3
aad
cmp
xchg
sbb
shl
ss
sub
or
cmp
xor
jmp
inc
dec
inc
cs
stc
push
mov
pop
rcrl
mov
fldenv
add
xchg
pop
mov
lret
mov
mov
iret
enter
cs
jecxz
loope
lods
fs
out
mov
addl
add
test
mov
leave
ja
addr16
xor
jae
jmp
popa
sbb
clc
mov
test
lret
jecxz
int3
add
inc
pop
in
adc
sbb
xchg
push
or
icebp
repz
mov
mov
or
mov
cld
lds
add
mov
add
inc
add
xchg
es
data16
in
mov
pop
mov
pop
dec
push
add
inc
jmp
stc
imul
aad
add
mov
in
gs
icebp
xorl
pop
xchg
decb
std
cmp
pop
adc
xor
hlt
test
popa
cmpsl
popf
add
aad
dec
xchg
push
scas
adc
mov
sbb
test
les
push
test
xchg
sub
sub
sub
fistl
popa
xchg
sub
divl
xchg
and
and
dec
mov
or
xchg
jl
inc
cmp
inc
push
xchg
fucom
dec
or
mov
pop
add
pop
sub
and
out
out
cmpsl
pop
mov
mov
adc
pushl
or
inc
xlat
int3
stc
add
daa
inc
sub
in
lahf
mov
add
and
xchg
int
lea
cmc
ret
rol
jb
jl
mov
int3
out
aas
out
iret
js
daa
push
stos
mov
xchg
push
mov
les
int
nop
arpl
mov
push
and
jge
mov
orb
je
leave
popa
add
or
test
lea
or
divl
mov
adc
xchg
dec
std
adcl
sbb
out
popf
sub
shrb
bound
pushl
add
or
adc
or
insl
aam
fiaddl
cld
jmp
jno
sbb
mov
pop
pop
sbb
pop
or
or
loopne
cmpsw
pop
and
sbb
cwtl
cmpsb
frstor
jo
sub
and
lcall
sbb
out
bnd
mov
jns
mov
mov
add
mov
add
jmp
pop
rorb
sbb
cltd
pop
mov
cwtl
dec
movsl
dec
aas
cmc
dec
pop
add
fs
movsb
cmp
pop
mov
sub
out
pop
outsl
cmp
arpl
pop
mov
bound
jns
incl
shlb
out
push
xor
cli
pop
inc
cmc
or
in
nop
xchg
rep
mov
bound
nop
lds
adc
dec
lods
cmp
pop
or
in
call
xorb
mov
push
stos
ljmp
scas
and
stc
scas
xor
rorb
or
pop
inc
cwtl
cmp
sub
or
xchg
in
xchg
or
hlt
pop
add
lods
sti
or
flds
mov
add
test
mov
xchg
sub
sub
pusha
hlt
jns
in
loopne
fstps
out
mov
mov
cltd
pop
in
add
mov
ror
in
data16
push
or
into
push
sub
dec
add
sti
aas
xchg
scas
mov
jmp
leave
sarb
push
or
dec
inc
jb
shll
and
mov
cmpsb
bound
add
mov
ror
fcmovne
lret
and
inc
in
mov
push
insl
or
inc
clc
jo
jo
outsl
int3
lret
jmp
cmp
bnd
dec
or
fldt
or
push
cltd
inc
out
mov
jg
movsb
test
lret
push
fstpt
cmp
push
rcll
sbb
lret
mov
push
shlb
test
push
popa
cmp
cmc
rcll
aaa
push
es
mov
movsl
int
and
sub
jo
ret
cmp
xchg
out
test
stc
js
ret
add
push
mov
xor
mov
and
sbb
sub
repnz
dec
out
jno
je
cmp
inc
sti
frndint
loope
mov
sbb
push
or
jne
std
jnp
sub
sbb
lcall
lret
mov
lock
sub
dec
push
mov
mov
mov
xor
cld
insl
loope
dec
pop
outsb
xchg
add
in
mov
sub
mov
inc
xchg
mov
leave
outsl
sahf
cmp
push
xchg
in
testl
in
sbb
fisttpl
mov
add
shr
subb
popa
jmp
stc
xor
mov
jp
shl
std
daa
test
addr16
stc
cmpsb
push
or
std
xor
cmp
fldl2t
call
fnstcw
pop
lret
sub
mov
insb
leave
movsl
aad
inc
gs
dec
xor
test
lods
je
sar
cmp
pop
dec
xor
pop
test
dec
jne
mov
loope
fmulp
or
cltd
loope
sahf
cmp
jmp
cld
push
fldcw
aam
stc
sbb
cld
sub
aas
cmp
dec
in
jns
pop
out
xchg
loopne
cmp
push
sar
std
sub
jle
dec
jns
mov
fldt
lea
mov
jge
push
mov
lds
test
lea
cmc
jmp
jns
std
mov
stc
or
fidivs
mov
mov
and
es
xor
jle
imul
popa
dec
subl
jl
sarb
cmp
rcr
push
aam
popa
sbb
and
xor
mov
lods
cmp
jns
or
sub
mov
std
sbb
insl
loopne
dec
jns
mov
lds
sub
iret
mov
push
jecxz
in
loope
mov
lret
fmulp
imul
mov
push
sbb
shr
movsl
pop
loope
insl
lret
pop
adc
xorl
shll
xchg
cmp
mov
arpl
mov
sbb
popa
test
cmp
into
bound
loop
adc
push
arpl
cmp
add
xchg
dec
insl
fadd
inc
sbb
mov
xor
in
mulb
sti
inc
mov
icebp
fisubrl
add
sbb
roll
or
dec
sti
repz
mov
testl
add
or
shl
lods
add
or
xor
popf
loop
cmp
fisubl
fadd
cmp
lods
add
mov
mov
sbb
int3
cmpsb
sbb
repz
repz
aaa
icebp
les
ja
cmpsb
add
mov
icebp
jno
pusha
divl
sbb
in
and
pop
sbb
adc
ret
out
andl
mov
dec
mov
inc
xlat
sarl
jbe
xchg
fs
insb
mov
mov
repnz
cs
add
mov
or
cmp
add
sub
inc
push
int
lods
mov
push
add
add
push
mov
xchg
sub
pop
mov
and
repnz
test
mov
pop
push
inc
fmull
mov
jnp
jo
testb
or
loope
mov
notb
iret
xor
or
mov
ds
or
scas
ret
mov
int3
sub
mov
in
xchg
sahf
into
repnz
adc
pusha
mov
adc
adc
in
dec
movsb
and
loope
jmp
mov
jnp
mov
lea
jno
mov
mov
cmp
cmc
jb
fldenv
int
xchg
and
dec
adc
xrelease
subl
loop
bound
pop
in
call
sti
adc
mov
das
hlt
call
and
sbb
loopne
sub
fidivrl
add
sbb
clc
mov
jnp
dec
daa
or
inc
int
sbb
and
or
sub
movsb
dec
mov
cmp
jne
insl
jbe
lcall
in
jae
movsb
push
aam
mov
push
mov
xchg
xchg
sbb
imul
fisubrl
rol
xor
stos
shlb
mov
inc
push
lods
divb
incl
dec
jge
cmpsl
aam
mov
aaa
lcall
lods
test
or
jecxz
roll
inc
jbe
mov
loope
mov
lods
jl
imul
lods
push
mov
mov
cltd
imul
movsl
sub
push
push
mov
cmp
insl
not
mov
movsl
mov
adcb
mov
mov
mov
jno
jbe
mov
std
mov
jle
jnp
sbb
cmc
cmp
mov
repz
fnstenv
in
in
cs
cmc
cmp
int
bnd
pop
test
je
popa
imul
push
shlb
adc
in
xor
rcll
sub
and
dec
jo
jnp
push
pop
adc
stos
sub
cld
ficompl
fcmove
and
loop
adc
repnz
sbb
movsb
imul
loop
fs
or
jmp
or
jecxz
incl
push
test
sti
fists
push
in
pop
mov
mov
aad
leave
sbb
adc
mov
mov
sti
ss
aaa
pop
xchg
adc
dec
and
add
outsl
lods
and
sub
adc
bound
inc
lods
insl
xchg
push
push
mov
adc
adc
dec
push
leave
fildl
insl
mov
lea
mov
push
bound
int3
add
sbb
sub
test
pop
movsb
mov
testl
inc
cmpsl
mov
lock
mov
and
icebp
mov
xchg
stos
mov
jnp
es
inc
push
pop
jne
xchg
neg
vphaddbq
das
xor
or
xchg
fcmovnb
xchg
sub
mov
mov
scas
mov
add
sbb
ja
test
ret
mov
pop
sub
imul
lock
and
lea
mov
out
sub
dec
aad
jmp
cwtl
movsl
sub
shll
incl
je
repz
xchg
fwait
aaa
cmpb
shlb
insb
ds
sbb
bswap
adc
js
stos
sti
bound
mov
adc
loop
ret
dec
fwait
dec
lea
out
jmp
call
clc
or
mov
testb
outsb
sub
sahf
hlt
fs
cs
inc
lods
dec
xor
cmc
pushf
lahf
pusha
jmp
mov
dec
cmpsb
mov
rcrl
loopne
mov
mov
aam
mov
jmp
cld
add
nop
mov
jbe
sbb
in
jl
nop
push
movsl
cmp
push
repnz
sub
cmpl
in
pop
int
test
int3
xchg
out
cmp
fs
inc
aam
dec
popf
pop
out
sti
aas
lret
dec
ds
sbb
rcrb
pop
fmuls
mov
cmc
push
add
fcompl
out
imul
imulb
add
ss
pop
in
hlt
mov
pop
imul
inc
test
sarl
jecxz
mov
jb
xchg
int3
mov
leave
or
out
sub
mov
or
test
fs
add
insl
jnp
xor
cmpsb
aad
pop
lret
sbb
pop
bound
inc
sti
xchg
popa
stos
mov
shr
dec
rcrb
movsl
mov
loope
popf
ffree
pusha
push
lret
mov
cmp
cmpsb
popf
mov
insl
adc
adc
fstl
dec
add
pop
fnstsw
add
mov
sahf
add
ja
mov
test
and
jecxz
in
inc
ja
icebp
and
inc
jne
dec
add
in
add
fisttps
pop
inc
fdivp
sbb
cmp
stc
jge
add
insb
cmovge
lea
daa
add
sub
mov
cmp
movsb
xchg
hlt
push
shlb
arpl
orb
dec
or
aam
xchg
xor
clc
add
push
pop
mov
sub
ror
push
mov
bound
xchg
stos
mov
inc
mov
push
push
ret
cmp
or
mov
stc
mov
mov
mov
inc
and
pop
push
out
mov
in
popa
and
and
mov
fwait
in
stos
stos
mov
lds
add
ja
adcl
and
fwait
outsb
imul
std
inc
jno
fldl
movsl
aaa
cmp
daa
push
mov
cmpsl
jbe
nop
sti
xchg
loopne
mov
inc
xlat
fcmovne
cmp
test
pushf
jb
jo
or
mov
ja
int
clc
mov
cmpsb
mov
cmpsb
xor
pop
popa
jb
in
fidivs
mov
adc
pop
mov
int
rcrb
je
or
ret
orl
xchg
movsb
mov
inc
addb
mov
test
ret
dec
and
das
fnstcw
mov
pop
xlat
mov
adc
sar
lcall
or
es
mov
mov
lods
adc
mov
movsb
push
mov
int3
jp
sbb
popa
ljmp
int3
add
ret
xchg
in
or
popa
sbb
push
xchg
push
loopne
hlt
cmp
cwtl
in
icebp
add
in
popf
push
cmc
mov
inc
sub
jne
sarb
test
mov
push
lahf
jo
push
out
in
pop
lea
mov
dec
cltd
sbb
sti
cld
repz
xor
mov
dec
pop
lret
in
jg
fidivrl
jecxz
icebp
inc
xor
gs
movsl
pop
jmp
cmpl
dec
addr16
stc
adc
jle
jecxz
out
mov
or
ret
xchg
addr16
jl
add
pop
stos
xlat
test
imul
lds
inc
adc
lret
add
xchg
sbb
adc
inc
and
xorl
gs
clc
cwtl
stos
jg
into
pop
roll
mov
or
dec
inc
add
loope
cmp
aaa
xchg
add
push
add
lcall
lahf
push
fst
mov
test
loopne
add
sub
push
inc
inc
pushf
in
push
cmc
jne
inc
lea
or
aam
inc
mov
mull
ljmp
or
mov
loopne
in
icebp
or
push
orb
sbb
fstps
popf
inc
xchg
cmp
dec
dec
mov
incb
es
push
mov
push
sub
popf
jnp
in
dec
cmpl
addr16
incb
stc
movsl
mov
jge
push
sarl
das
push
push
push
add
mov
jmp
shll
pop
cmp
push
test
mov
xchg
or
in
lret
mov
lret
and
cmp
jl
or
aas
adc
in
xchg
mov
dec
movsb
inc
jnp
cs
adc
sbb
lock
in
inc
or
out
mov
cmpsl
loopne
ja
int
rolb
jo
mov
and
or
mov
divl
int
shlb
or
ret
jecxz
mov
in
fstpt
hlt
cmp
xorl
cmpsb
jmp
push
adc
lds
add
adc
add
fidivs
repz
push
pusha
je
fdivrs
sti
or
nop
addl
inc
incb
cmpsb
xor
sahf
add
loope
test
push
idiv
lret
sbbl
pop
ja
inc
lea
or
mov
mov
mov
adc
fisubrl
int
je
mov
movsb
adc
mov
cmc
sti
or
mov
lock
jge
cmpsl
inc
in
leave
push
in
arpl
ficomps
icebp
rorl
add
add
lcall
xchg
dec
add
pop
fsubs
subl
pop
push
shll
add
sti
xchg
stc
sub
pop
push
inc
sbb
add
shll
and
popa
adc
inc
push
scas
fsts
mov
mov
das
loop
mov
test
jp
adc
stos
add
mov
xchg
cmp
rcrb
js
mov
out
add
lods
pop
jns
jmp
pusha
mov
rep
aas
test
mov
aas
and
sbb
dec
mov
pop
sub
insl
in
cwtl
cmc
or
mov
int
stc
arpl
cltd
enter
dec
and
push
mov
out
xchg
fldenvs
jp
xor
xor
mov
jo
fisubrl
daa
js
repnz
and
cmp
in
rcr
frstor
sub
hlt
sub
iret
jmp
and
pop
inc
dec
rol
std
adc
mov
push
repz
decb
sbb
in
imul
pop
addl
lods
jae
pop
push
dec
add
sbb
xchg
int
dec
dec
int
push
mov
xchg
outsb
pusha
adc
lret
out
js
or
add
mov
pop
hlt
pop
jbe
mov
ja
jl
sar
jbe
subl
push
and
sbb
fs
pop
mov
dec
lret
mov
mov
pusha
out
xchg
xlat
mulb
jmp
ret
in
inc
push
mov
add
or
mov
mov
mov
gs
popl
ljmp
bound
or
loope
cmp
pop
push
pop
and
shlb
sti
lea
sbb
add
dec
and
mov
pop
adc
cmc
adc
xor
inc
loope
add
xor
jmp
mov
cld
add
sahf
push
sbb
add
push
stc
rorl
push
mulb
cs
push
jg
stos
in
movsb
cwtl
clc
pop
in
and
pop
fdiv
cmp
push
cli
loop
jge
test
adc
mov
cmp
add
fiadds
adc
inc
or
test
mov
sti
js
enter
pop
or
loopne
pop
rclb
pop
dec
bound
fwait
jbe
push
cwtl
inc
dec
loope
ficompl
lea
dec
movsl
xchg
mov
and
lahf
rorl
sahf
xchg
fildl
sti
jno
cs
je
imulb
mov
lret
aam
and
or
jne
mov
dec
or
cmc
xchg
dec
stc
cmp
push
jg
cmpsl
mov
stc
mov
mov
cmp
or
icebp
mov
pusha
lea
nop
pushf
es
dec
xlat
lods
shl
mov
cltd
adc
mov
push
dec
popf
enter
pop
loopne
outsb
xchg
xchg
divb
inc
pop
xor
sar
icebp
mov
and
aad
mov
rorb
iret
sub
pop
xor
mov
add
int3
sub
in
sbb
add
lea
fisttpll
xchg
xchg
sbb
sti
adc
fmul
stc
push
mov
cmpsl
stos
mov
jo
inc
arpl
test
adc
mov
jo
lcall
mov
movsb
or
mov
adc
sub
sub
and
mov
stos
div
and
stc
sbb
adc
mov
inc
cwtl
and
adc
aad
inc
outsb
testl
xor
cld
stc
lds
test
int3
hlt
scas
pop
std
je
bnd
popa
and
fcompl
rcrl
cmp
ds
cmp
lds
sarb
test
and
push
dec
cmp
lea
push
pop
fisubs
lods
inc
arpl
fldt
les
clc
and
rcr
out
repnz
add
mov
out
mov
inc
dec
stc
repnz
popa
imul
repz
mov
jnp
push
dec
mov
jl
stos
or
pop
cmp
and
fstp
add
das
dec
jne
sbb
xchg
pop
cmp
mov
lds
nop
imul
loope
sbb
in
hlt
add
ja
mov
in
or
pop
mov
data16
imul
lods
sti
ss
fwait
lea
rolb
leave
mov
xor
push
add
lods
loopne
andb
sbb
mov
jns
xor
push
mov
add
jae
fnstenv
fisubrl
lock
xchg
fstpt
add
pop
bound
outsl
orl
insl
xchg
and
push
cmp
pop
aad
lods
push
or
add
fwait
popa
stc
mov
notb
lahf
and
test
jmp
fsubrl
data16
or
cmp
shl
pop
sbb
jle
add
out
cmp
out
stos
jns
stos
aad
test
das
incb
inc
outsb
lret
xorl
sbb
fs
into
xchg
andl
mov
and
insb
push
push
pop
gs
mov
mov
cmpsl
paddq
aaa
jno
clc
xor
sbb
mov
lret
xlat
fs
repz
mov
cmp
jnp
icebp
pop
adc
jmp
fsubrs
mov
int3
aad
fldl
add
add
idivl
dec
push
rolb
data16
mov
fcmovbe
in
test
pusha
jmp
add
dec
pop
inc
out
hlt
mov
out
inc
test
sbb
aad
lret
cmp
insb
cmp
out
adc
stos
inc
adc
filds
mov
dec
push
cmp
fs
stc
adc
mov
sbb
xchg
add
shlb
push
dec
insl
pop
mov
lods
inc
pushf
lods
jle
mov
lret
fcmovb
cmp
and
test
dec
out
jnp
push
lret
cmpsl
adc
outsl
sahf
stos
stc
inc
mov
fwait
das
aam
jmp
push
jecxz
mov
subb
jo
sbb
pusha
out
repnz
jmp
add
or
jne
hlt
in
mov
add
dec
movsl
test
pop
int
pop
add
cmpsl
hlt
rclb
data16
popf
jns
jmp
sub
inc
xlat
add
subl
mov
sub
cltd
and
ljmp
lock
popa
fidivrl
clc
push
js
mov
and
and
inc
inc
and
jae
add
fidivrl
pcmpgtb
stos
mov
lea
add
mov
rolb
out
and
add
pop
gs
pushf
nop
pop
cli
push
adc
in
pop
cmpsl
cmc
sarb
push
test
shlb
aad
leave
stos
pop
add
aam
outsl
ljmp
xor
idivl
mov
in
push
repnz
mov
xor
out
scas
pop
popf
xlat
cmp
pop
aaa
fcompl
sub
cwtl
pusha
icebp
out
jne
push
fwait
push
jg
dec
dec
pop
out
mov
adc
add
or
enterw
daa
jp
adc
rorb
adc
xchg
mov
cli
addr16
aam
cmpsl
mov
shrb
std
push
sbb
inc
shlb
mov
sub
into
jp
and
loop
pop
cmp
cli
clc
loop
les
clc
popa
stos
movsb
ds
jge
mov
lds
sub
or
mov
mov
in
lret
push
stos
sbb
lea
stos
iret
adc
loope
xchg
pop
sub
aad
jb
fsubr
call
jge
adc
mov
out
add
add
and
adc
in
out
test
leave
and
icebp
xchg
pop
sub
push
andl
and
pushl
ds
repz
jecxz
adc
xchg
xlat
or
nop
test
inc
xchg
push
mov
fisubrl
mov
inc
enter
scas
dec
loop
out
movsl
sub
lcall
enter
dec
or
loop
xchg
inc
iret
sub
sub
out
add
mov
int3
mov
test
inc
es
testl
incl
or
add
add
shlb
stos
pop
in
cmp
and
hlt
cmp
ja
imul
jge
fwait
inc
lock
icebp
imull
ret
push
icebp
push
adc
cwtl
cmc
push
mov
add
leave
adc
and
lods
cld
out
fisubrl
jnp
mov
aas
out
and
shl
lea
test
jl
push
cmp
xchg
pop
xchg
fstps
pop
xchg
sbb
cli
enter
or
cmpsl
inc
jmp
aas
js
fisubl
add
xchg
push
xchg
pop
in
std
ret
pop
adc
enter
pop
mov
clc
repz
cmp
notl
cltd
or
popf
xor
jecxz
cmc
or
mov
sti
lods
push
pop
test
pop
cmp
xchg
push
jnp
dec
imulb
shlb
xchg
es
clc
or
aas
xchg
movsb
xchg
outsb
fs
push
adc
add
dec
xlat
cmp
mov
cmpsl
mov
xor
add
xorb
push
sbb
ds
push
rcl
pop
bound
xor
sbb
push
mov
inc
xlat
jmp
mov
mov
jae
xchg
enter
repnz
xor
gs
or
adc
jg
sti
add
loope
and
xor
call
sbb
cmpsl
xchg
mov
push
or
dec
hlt
pop
xor
and
cwtl
jbe
add
sbb
xchg
loope
fnstcw
arpl
mov
mov
dec
xor
lock
add
fisttpll
xchg
scas
push
jmp
lock
addr16
cmpsl
jns
cmpsl
sbb
int
mov
and
jmp
lahf
movsl
cmp
xor
add
in
call
jmp
int
je
sti
or
cmp
out
dec
lds
xchg
sub
std
leave
adc
out
adc
or
inc
jg
xchg
insb
xor
sbb
inc
and
aam
push
dec
jnp
sub
xchg
data16
inc
sbb
cmp
xchg
push
test
cwtl
pop
das
push
cli
or
mov
add
movsb
cmp
scas
je
test
mov
leave
loope
ljmp
lea
jb
fistpl
lock
aad
aad
push
stos
loopne
dec
cs
sub
icebp
jl
scas
in
leave
cmc
pop
push
mov
pop
push
push
add
jmp
push
stc
adc
cmp
insb
stos
pop
aas
or
cmc
dec
popf
xor
sti
push
mov
clc
push
loope
jb
add
cmp
mov
jle
les
push
call
jmp
adc
scas
addl
push
jb
and
popf
dec
dec
jl
sti
add
mov
ja
icebp
nop
xchg
gs
mov
add
imul
mov
test
aas
mov
xor
enter
lea
sub
inc
push
or
add
adc
das
xor
pop
or
pushf
cmp
push
ja
jns
fildl
mov
int
std
addr16
add
or
jae
jb
mov
xchg
aaa
lods
and
ret
sahf
pusha
adc
xchg
test
in
inc
sub
mov
xchg
test
add
sub
lea
out
pusha
and
mov
xchg
mov
popf
mov
pusha
jne
sub
xchg
lds
xchg
shl
lods
loop
and
pop
iret
std
stc
and
push
or
mov
xchg
out
in
add
and
outsb
sbb
fstps
xchg
mov
jle
arpl
repz
xor
push
jb
jg
stc
dec
rclb
cmp
fninit
ret
inc
and
aam
xorl
mov
inc
xor
in
cltd
add
aam
hlt
push
test
mov
test
dec
add
jl
push
dec
ret
lahf
outsb
test
mov
sub
push
lret
nop
push
clc
arpl
lahf
inc
sbb
push
icebp
into
cmp
stc
sub
mov
loop
push
stos
sub
lods
ds
ds
test
insl
imul
int3
mov
mov
scas
popa
aad
mov
das
stc
mov
test
scas
mov
sbbb
mov
jno
movsb
mov
dec
movsb
inc
and
or
in
ror
subb
aas
pop
cli
in
push
add
sbb
pusha
sbb
inc
repnz
sbb
xchg
fimuls
ljmp
sub
nopl
push
dec
test
int3
cmp
test
push
lret
xor
mov
insb
jg
sti
dec
dec
into
push
cmp
add
sahf
fs
test
push
pop
cmp
adc
push
xchg
popf
push
aas
jecxz
sub
fdivrs
xchg
push
mov
stc
das
rcll
mov
out
and
adc
enter
jl
test
rcr
bound
adc
sbb
out
mov
and
into
div
fcompl
inc
cmp
outsb
inc
aaa
mov
lcall
or
jecxz
mov
out
xchg
cmp
sub
adc
aad
mov
sbb
inc
lods
jb
cmpsl
andnps
out
mov
mov
xchg
lea
cmc
pop
loope,pt
lcall
xor
cmp
negl
nop
cmp
sti
rclb
adc
mov
mov
xchg
push
add
outsl
into
dec
or
clc
lods
jg
repz
data16
scas
sbb
mov
mov
adc
sbb
call
sub
idiv
jne
ljmp
xchg
arpl
das
fldenv
into
mov
mov
stos
movsl
xor
daa
xchg
add
mov
shr
mov
out
add
rclb
inc
imul
out
dec
in
pop
add
mov
adcl
sbb
cmp
or
add
out
jns
dec
cmp
fcom
shlb
out
mov
cltd
imul
test
aad
pop
lret
mov
and
addr16
pop
jo
fisttps
lods
int
mov
js
mov
or
mov
loop
and
arpl
lret
xor
sti
in
or
pushf
dec
repz
ret
in
adc
test
outsl
or
mov
inc
xchg
pusha
int
push
jmp
cmpsb
inc
xchg
mov
movsl
inc
enter
jg
shl
sbb
adc
outsl
dec
outsb
mov
scas
ficoms
hlt
dec
xchg
or
movzbl
mov
jge
inc
xor
mov
sti
movsl
repnz
addr16
imulb
and
jb
or
aas
pop
jae
pop
bound
js
and
xor
add
add
out
add
xor
cltd
in
aaa
sbb
lret
sub
mov
int3
mov
iret
xchg
adc
push
fidivrl
mov
es
inc
push
mov
adc
mov
in
test
test
cli
cmp
in
mov
or
xchg
aam
loope
mov
pop
ds
cwtl
jo
fcmovu
push
sarl
add
out
lahf
jae
sbb
mov
popf
push
les
xor
out
xor
repnz
cwtl
jnp
or
in
sbbl
mov
dec
mov
popa
stc
push
push
lods
cmp
add
xor
cmp
fs
stos
or
cwtl
pop
test
mov
xchg
xchg
fsubrs
push
push
xchg
daa
repnz
adc
or
movl
pop
xlat
mov
add
mov
enter
hlt
cwtl
push
mov
fistl
pushf
mov
cmp
xchg
popa
lea
shl
testb
repnz
fsubs
mov
rolb
inc
call
arpl
int3
lahf
mov
mov
adc
mov
jbe
ss
jnp
in
or
in
pop
pushw
orb
imul
add
inc
push
jecxz
or
stc
jmp
add
les
scas
dec
ret
xorl
pushf
jmp
test
sub
pop
daa
cli
imul
mov
add
and
jno
sbb
mov
xchg
xor
lods
cmp
aaa
sar
pop
pusha
mov
pop
into
in
jg
lods
lds
and
cmp
cmpsb
lret
mov
pop
gs
adc
pusha
adc
cmc
scas
mov
mov
icebp
push
mov
or
mov
imul
fldcw
fnstenv
scas
das
push
pop
mov
mov
jp
movsb
add
or
xorl
fiaddl
xor
cmp
hlt
aaa
in
cmp
inc
sub
mov
ret
add
mov
mov
test
pop
enter
shl
mov
icebp
jmp
in
add
ja
push
xchg
test
stc
in
data16
mov
add
fimull
stos
scas
ss
cmpsb
lea
cmc
imul
cmp
in
or
clc
bnd
jp
stos
iret
ror
faddl
lock
xor
sti
cmp
ss
push
mov
in
rol
adc
sbb
out
sbb
data16
jge
jg
or
les
adc
aaa
add
rcll
jno
rcrb
jecxz
gs
or
fimull
push
xchg
mov
dec
push
xchg
data16
test
lods
arpl
sbb
or
ret
in
mov
jnp
xchg
cmp
repz
jbe
ret
sbb
xor
add
sbb
xchg
mov
cmpsl
add
iret
mul
aam
js
adc
adc
std
subl
mov
add
sub
cs
test
adc
rcll
repz
mov
adc
jnp
js
adc
inc
subl
jo
push
add
stc
jp
adcb
popa
mov
enter
mul
mov
orl
dec
fisubrl
stos
mov
pop
jno
ret
lds
addl
rorl
dec
mov
jo
js
cmpsl
xchg
nop
nop
pop
outsl
popa
ljmp
cmpsb
aaa
ret
and
aad
adcl
out
cmp
sbb
mov
and
leave
in
sarl
fildll
or
pusha
sbb
fbstp
mov
mov
into
aaa
in
divb
sub
jl
jno
imul
sbb
add
lea
sbb
mov
xchg
add
fnstenv
or
add
outsb
sub
or
insl
pop
cmp
cmp
leave
or
shl
adc
loope
jle
fldenv
cmpl
add
cmpsb
add
rcrb
xor
clc
mov
add
inc
and
in
adcb
adc
enter
aad
test
lds
dec
repz
sub
xchg
fsubl
or
in
insl
aam
lahf
xchg
pop
xor
dec
lods
adc
push
xor
push
sub
jo
add
dec
sbb
cmp
scas
add
mov
insl
add
lret
movsb
cmp
cmpsl
adc
insb
mov
and
ljmp
jne
mov
rorb
cld
fisubs
dec
popa
jmp
inc
jne
movsb
cltd
movsl
jge
fs
out
mov
in
xchg
outsb
es
outsl
pusha
dec
mov
adcb
add
ss
icebp
imul
xchg
xor
in
fadds
std
mov
test
push
inc
paddw
push
fisubrs
into
sbb
adc
xchg
lock
pop
push
sbb
mov
sub
mov
xchg
imul
scas
int
add
movsl
in
cmpsl
lods
mov
dec
sbb
shll
add
repz
jns
jae
test
icebp
std
jle
sub
mov
or
add
jle
dec
jo
sbb
adc
decb
insl
mov
inc
push
les
out
mov
nop
fcmove
and
test
outsb
imul
mov
inc
jge
fucomi
adcl
add
cmp
cmpsb
cli
cmc
enter
icebp
pushf
jmp
and
rcrl
leave
cmpsb
loop
adc
xor
fsubrs
mov
lea
inc
pop
jne
test
pop
mov
ret
jl
adc
je
inc
aaa
push
dec
xchg
mov
sub
inc
fisubl
jge
jl
jecxz
mov
movsb
js
in
add
pop
sbb
jle
mov
in
mov
roll
push
lahf
test
xor
add
sbb
mov
ljmp
fisubrl
push
negl
fsts
roll
adc
cs
sar
pop
and
or
in
test
jmp
xchg
mov
mov
mov
sbb
inc
sub
out
add
not
add
mov
and
mov
jo
or
dec
int3
push
add
sub
movl
mov
icebp
test
inc
fs
sti
jnp
push
or
lds
sahf
icebp
pop
cmc
or
push
loopne
mov
jl
shl
in
sahf
ss
repnz
lods
mov
in
pop
in
out
fnstsw
stos
stos
and
mov
shll
lcall
imull
pop
lcall
jns
pop
jo
cmp
ljmp
sbb
sub
movsb
imull
sbb
inc
xchg
push
sarl
vpshuflw
pop
lea
xchg
sbb
shlb
add
add
movl
mov
push
xor
cmpsl
mov
imull
add
mov
xchg
adc
jo
add
lahf
ret
test
lock
and
xchg
add
or
ss
adc
add
add
and
sbb
jmp
push
loope
pushf
flds
das
out
pop
pop
js
leave
mov
mov
cmpsb
pop
add
rcl
cmp
jp
push
mov
add
fcomip
cmp
data16
andl
popa
add
shlb
sbb
incb
mov
dec
or
mov
cmp
out
imul
mov
nop
les
jge
es
icebp
andb
incl
hlt
push
or
add
mov
push
jnp
add
lret
ljmp
xor
or
and
dec
hlt
daa
rol
cmp
sbb
or
sub
es
lock
test
fldl
pop
inc
add
mov
adc
dec
push
lret
popa
mov
xor
shrl
das
push
cwtl
jmp
jnp
insl
or
xchg
shr
add
or
call
bound
mov
rcr
jo
jg
mov
xchg
pop
cltd
xor
jecxz
cltd
in
aad
int
cmpsb
loope
stos
les
lcall
inc
xchg
rcl
pop
icebp
shll
mov
lret
stc
dec
ret
sbb
xchg
test
xchg
leave
pop
fnstsw
and
pop
je
or
adcb
cli
int3
xor
and
jmp
pop
cwtl
sub
add
mov
jo
mov
je
pop
cmp
ljmp
adc
xor
and
popf
add
int
jecxz
cmp
sbb
push
outsl
xchg
fdivrs
int3
mov
add
jno
or
pop
test
outsb
hlt
cmpsl
add
pop
loopne
shll
out
inc
push
xchg
xor
std
xor
lock
inc
repz
and
out
test
jmp
cmpsb
imul
and
arpl
clc
icebp
cmp
cltd
aam
repnz
test
divl
sbbl
push
sub
add
iret
fimull
mov
add
or
lret
aam
pop
fimuls
loop
inc
pop
out
lcall
xchg
cmp
jno
or
dec
inc
dec
mov
cwtl
cmp
rcl
dec
aaa
push
xor
fwait
insl
mull
test
dec
cmpsl
fidivs
mov
sahf
jnp
fyl2xp1
push
mov
cmc
inc
lcall
pusha
iret
in
push
stos
insl
add
icebp
enter
mov
xchg
mov
add
add
out
je
add
mov
push
lret
add
in
and
mov
addr16
sub
mov
cmc
add
adc
addb
or
add
sub
and
xor
push
loop
sub
cmp
insb
loop
fsubr
ds
push
adc
inc
rcrb
popf
cld
pop
cmp
lds
in
pop
add
pop
int3
mov
or
dec
xor
ret
mov
shll
dec
cli
mov
repz
add
jae
loop
xchg
sbb
add
shlb
mov
repz
dec
mov
jne
lcall
fsubrl
sub
lea
mov
mov
pusha
mov
and
mov
pop
jmp
sbb
dec
adc
paddq
jns
add
stos
and
imul
shl
cmp
les
jb
cmc
loop
test
mov
orl
out
push
in
pmuludq
cltd
mov
add
aas
ja
leave
shr
xchg
mov
jge
loop
mov
fiadds
sub
add
out
lods
sbb
jmp
fs
insb
adc
sub
push
loope
int3
aas
and
ljmp
test
stos
movb
jmp
xor
or
imulb
cwtl
aam
xor
movsb
ret
dec
ret
pop
adc
hlt
int3
sub
in
das
fs
in
xchg
aam
lahf
sbb
mov
add
repz
mov
jnp
xchg
stc
mov
sbb
sbb
imul
push
dec
sbb
es
arpl
in
leave
in
jmp
and
xor
xlat
std
cmp
iret
in
cmp
scas
xchg
or
sar
and
jb
jg
pop
lods
js
es
enter
notrack
cmpsb
pop
adcl
or
stos
movsb
aad
ret
jbe
mov
and
sti
mov
mov
jo
das
add
pop
add
xchg
int
das
nop
clc
push
xchg
jecxz
cmp
add
xchg
ret
xchg
pop
lock
scas
inc
test
push
cmp
mov
lret
ljmp
sarl
pop
push
int3
fnsave
and
lea
add
repz
stos
out
and
es
xchg
add
mov
or
into
add
jb
mov
cmp
add
lcall
iret
cmpsb
pop
and
push
aaa
mov
popf
int3
sub
outsb
jl
int
data16
repz
scas
in
sbb
das
inc
lock
add
rorb
push
jecxz
sbb
xor
push
addr16
xchg
mov
iret
cmp
icebp
popa
rorl
jmp
dec
xor
xchg
jl
cmpsb
add
test
imul
mov
dec
lea
js
icebp
sarl
jl
fdivrs
call
dec
lea
mov
movsb
insb
imul
inc
inc
popa
ret
ds
int3
rorl
pop
clc
cmp
stc
shrb
inc
dec
or
fsts
imul
and
subb
add
sbb
jno
pop
loop,pt
imul
xchg
add
test
aad
in
sub
gs
mov
xor
pop
out
repz
flds
xor
mull
lahf
loope
repnz
mov
into
out
mov
cmp
mov
shl
andl
mov
je
jge
sbb
inc
outsb
das
ret
bnd
cmp
push
adc
push
ss
leave
mov
bound
mov
fdivrl
leave
lds
hlt
cmp
test
pop
mov
mov
fstpl
movswl
xor
aam
mov
vpaddq
inc
cmp
and
in
outsb
subb
adc
arpl
pop
sbb
pop
sbb
or
lods
das
not
mov
sbb
fdivl
stc
lods
xchg
push
movsl
mov
inc
into
jbe
out
lret
loope
push
and
jmp
movsl
add
gs
fildl
cmpsl
aad
jo
movsb
jge
adc
push
jne
fmul
bound
lret
mov
fs
sarb
sub
in
jle
pop
ret
push
adcl
and
dec
aam
arpl
push
adc
mov
dec
je
sbb
stc
add
push
mov
add
lock
sbb
nop
aas
cmc
or
push
cmp
push
add
js
js
daa
adc
mov
push
stos
add
push
jmp
ret
mov
aad
pop
repz
roll
aad
test
dec
cmp
pop
lods
scas
jo
mov
lods
sub
popa
adc
outsb
adcl
leave
cmp
repnz
mov
mov
cmp
leave
repz
icebp
aad
repnz
and
mov
dec
xorl
outsb
sbb
cmp
sub
cmp
sbb
ss
lret
mov
movups
ret
leave
push
dec
shl
mov
sub
in
add
out
mov
test
pushf
rol
sti
jmp
movsb
inc
insl
sub
dec
jo
pop
mov
push
add
test
adc
xlat
fwait
loopne
inc
je
pop
cwtl
fiaddl
adc
push
pop
repnz
inc
leave
imul
add
or
mov
sti
movsb
or
cmc
insl
push
movsl
fdivrs
mov
out
rcll
xchg
int
push
call
dec
hlt
ret
dec
or
cmp
pop
inc
sub
mov
mov
aas
inc
aas
std
dec
testb
add
mov
adc
push
aas
pop
and
pop
mov
dec
push
loope
out
jno
push
xchg
in
out
and
sub
fidivrs
fidivrl
sub
xchg
add
cmc
add
icebp
dec
data16
push
enter
mov
jmp
xchg
dec
cmc
pop
mov
out
cmp
dec
ret
out
lods
mov
fld
andl
in
dec
inc
sti
hlt
xor
ret
das
xchg
add
pop
xor
xchg
mov
fsubrl
jns
fnstenv
mov
cmp
sbb
xchg
ret
dec
loop
shl
lea
test
xor
lock
mov
sbb
add
inc
lahf
mov
jecxz
sub
xchg
orl
or
adc
icebp
sub
movsl
push
mov
repnz
pop
sbb
test
mov
pop
int
cmp
pop
imul
or
jns
fimuls
out
jg
push
mov
jmp
lret
jns
jns
inc
or
pop
jecxz
outsl
mov
in
clc
fmull
add
mov
ficompl
cld
das
cmc
jg
ljmp
fiadds
stos
pushl
test
data16
lods
punpckldq
aam
and
mov
cmp
scas
mov
mov
je
movsl
out
mov
sbb
je
mov
mov
out
xchg
adc
imul
sub
push
mov
xchg
xor
dec
sub
sar
fwait
push
jmp
mov
dec
call
stos
testb
add
pusha
iret
mov
movaps
clc
leave
mov
push
int3
stos
enter
cmp
sbb
or
sbb
pop
pop
roll
mov
jge
cmpsl
mov
aaa
pop
rclb
dec
jno
pushf
pop
cmp
es
or
fsubl
addb
aaa
jo
push
stc
fs
inc
out
test
and
sbb
iret
int
dec
dec
jo
cmpl
fwait
push
movsl
add
inc
pop
adc
das
jge
xor
push
dec
dec
aad
vpmulhw
rcll
jecxz
enter
mov
movsl
mov
cltd
jp
and
cltd
sub
popf
mov
aaa
fsubs
enter
sub
jmp
push
jecxz
fsubrl
add
mov
in
fsubl
aas
jp
and
pop
je
add
flds
ljmp
andl
fldcw
decl
and
add
leave
fucomip
out
sbb
test
stos
fidivrl
cmp
cs
and
bound
xor
out
sbb
cltd
movsb
jns
std
bound
pop
iret
xchg
sub
cmc
ret
gs
test
int3
add
add
or
xor
pop
xchg
jg
bound
mov
jns
dec
movsb
cmp
sub
inc
pushf
ret
or
in
or
xchg
inc
push
cmpsb
jo
add
pop
popa
lea
cmc
xor
sti
mov
and
mov
sbb
cmp
je
popl
xchg
adc
hlt
mov
mov
ret
cmp
and
xchg
jne
es
push
daa
cmp
dec
or
cmp
aaa
xchg
add
sub
loope
ljmp
adc
and
and
fsts
mov
xchg
std
sub
push
repnz
fnstenv
jns
add
jp
test
decl
push
ss
add
movl
xor
pop
popf
sti
or
xchg
repz
add
add
or
sub
push
notb
pop
sarb
add
xor
adc
push
shlb
jmp
fildl
je
sub
lock
xlat
and
mov
call
repnz
jecxz
cmp
push
mov
pop
ret
mov
add
mov
and
aam
nop
fs
and
fdivl
ret
or
add
add
push
jo
mov
mov
xchg
lret
aaa
mov
mov
ljmp
sub
stc
pop
lcall
add
outsb
push
mov
into
jecxz
cwtl
jbe
pop
fs
inc
xor
leave
pop
into
adc
rcrb
icebp
xchg
push
mov
mov
ljmp
jecxz
rcl
mov
add
inc
add
sbb
lods
dec
pusha
jmp
pushf
loope
sbb
rcl
test
popa
pop
xchg
adc
lcall
or
xorl
test
inc
in
add
iret
mov
jge
punpckhbw
mull
lock
add
andb
fs
pusha
and
or
mov
cmc
mov
mov
mov
inc
jl
mov
mov
outsl
sahf
jb
jg
icebp
lea
push
cmp
or
push
dec
aas
sahf
jnp
pop
add
jp
repnz
int3
testl
pop
mov
test
cmpl
sub
aam
jne
out
js
stc
out
test
lds
cmpsl
sti
pop
outsb
mov
cltd
call
cmp
mov
lea
xchg
or
jno
and
inc
push
div
js
daa
push
loope
cmp
ret
dec
xchg
xchg
popa
outsb
adc
roll
bound
neg
mov
or
push
adc
sbb
add
mov
mov
into
add
sar
cmp
and
cli
icebp
xchg
pop
test
push
push
push
rorl
clc
jle
icebp
les
pop
or
fstpl
jno
sub
add
dec
mov
xchg
stos
pop
and
mov
xchg
pop
dec
xor
push
sbb
in
add
call
jns
xchg
aad
xchg
mov
stos
pop
or
or
mov
pusha
popa
outsb
stc
std
add
ret
test
lock
insb
dec
popf
movl
ss
into
mov
mov
fldcw
fimull
cld
lret
test
out
movsb
xor
sub
mov
xor
xchg
pop
jl
cmp
insb
mov
inc
daa
or
pop
pop
dec
mull
popf
cmpl
test
ffree
int
mov
mov
add
push
lock
inc
add
imul
xor
imull
lock
in
ror
ds
rorb
popa
loop
cmpsl
jecxz
mov
ror
or
negl
pop
xchg
sub
jbe
and
ret
mov
sub
stc
sti
loop
sub
mov
test
cmp
out
test
adc
mov
add
sub
lret
daa
jne
repnz
not
jnp
shlb
add
add
add
dec
or
cli
insl
sub
cmp
push
add
insb
int3
out
aaa
and
and
std
or
hlt
mov
xlat
dec
int3
mov
leave
add
adcb
adc
mov
sbb
mov
fs
cmp
add
sbb
pop
hlt
mov
fsubrl
fcmovbe
ds
jmp
pop
fwait
xchg
inc
loop
daa
xchg
cmp
jns
sub
push
push
in
jle
pop
clc
or
pop
xor
fiadds
cmp
xor
movsl
cmpsb
jnp
cmp
add
jno
loopne
adc
hlt
leave
aas
mov
inc
into
pop
call
loopne
imul
testl
ret
cwtl
xor
mov
sbb
cmc
mov
leave
fstps
sub
mov
jb
inc
push
or
sti
test
sub
cli
jns
lea
xchg
add
aas
sub
testl
or
mov
arpl
rorb
notb
xchg
mov
inc
cwtl
ss
sahf
enter
push
mov
js
mov
xchg
mov
push
xorl
gs
pop
mov
pop
insl
sarb
xor
fnstcw
mov
into
jns
pop
or
test
outsl
testl
arpl
dec
cmp
repz
out
lret
mov
pop
pop
sub
mov
lock
and
push
mulb
or
cltd
sbb
ss
mov
add
mov
test
adc
xor
shrl
in
cmp
aas
cmp
mov
push
jnp
sub
xor
leave
fnstcw
adc
xorl
sbb
mov
cmp
incb
cs
insl
add
push
cmpsl
pop
xlat
in
add
mov
lret
les
cmc
out
xchg
jbe
es
jns
cli
or
cld
push
sub
sbbl
jle
cmpsb
mov
push
mov
mov
xor
adc
jg
sbbl
fucomp
mov
inc
leave
lcall
mov
xchg
xchg
sbb
les
in
out
das
in
mov
mov
loope
rol
cmp
push
cmp
inc
jns
scas
sub
push
mov
xor
pop
ret
xor
xchg
push
pop
or
mov
popa
std
out
cli
cmc
add
or
inc
dec
xchg
push
repz
adc
mov
rcll
or
add
sbb
mov
mov
or
test
adc
jne
adc
int3
fimull
aad
dec
dec
or
cld
movsb
cmc
stos
pushl
cwtl
cmp
cmpsl
ss
bound
sbb
mov
neg
inc
addr16
and
lds
fs
inc
stc
inc
arpl
mov
ret
mov
lcall
lahf
mov
mov
jg
test
cmc
subl
jg
mov
mov
sub
aad
inc
mov
xchg
jg
xchg
push
and
push
or
mul
das
mov
outsb
icebp
ljmp
out
aad
pop
add
adcl
in
jb
inc
pop
repz
jo
popa
stc
imul
or
in
arpl
pop
fs
insl
icebp
dec
decb
cli
push
mov
fisttpll
mov
imul
fdivr
pop
fdivrl
push
sbb
add
mov
mov
xorl
movsb
insb
popa
mov
or
pushf
mull
mov
mov
xor
mov
pop
pop
fcompl
iret
in
cmp
neg
pop
xor
gs
in
ss
xor
adc
into
mov
stos
mov
pop
push
call
mov
mov
jl
ds
test
mov
leave
or
and
imul
xor
and
sub
rorl
jecxz
push
lods
mov
add
stc
addr16
sub
hlt
mov
mov
imul
into
cmp
mov
and
jge
sub
loope
push
cmpsl
idivb
subl
lods
ljmp
push
fwait
push
lds
add
mov
out
popa
jae
test
xchg
std
and
jnp
add
adc
sarb
sbb
int3
fisubrl
loope
dec
add
xor
cmpsb
outsb
pop
fnstenv
sbbl
adc
fs
mov
add
ficoms
lods
idiv
std
roll
mov
insl
xor
inc
and
negl
or
adc
add
mov
xchg
push
cwtl
push
lahf
loope
mov
ret
pop
inc
add
add
sub
sub
xor
incl
das
fdivs
pop
cwtl
mov
or
push
xor
test
test
and
outsl
mov
pop
mov
dec
insl
mov
mov
adc
rcll
lahf
loope
in
add
cmp
adc
lea
push
in
dec
jnp
push
jg
sub
mov
mov
add
pop
xchg
orl
lods
cmpsb
mov
add
or
xchg
mov
mov
stc
rorl
jp
xor
inc
mov
lret
xchg
dec
out
or
out
icebp
pop
adc
repnz
jmp
negl
and
jnp
loop
and
and
ds
pop
mov
sub
cs
stc
pop
xchg
jbe
test
les
mov
lea
add
lods
adc
aaa
jae,pt
imul
loop
xchg
icebp
leave
dec
lahf
jmp
stc
loop
add
loopne
mov
sbb
js
das
mov
aaa
adc
jns
pop
xchg
lea
push
popl
adc
push
shr
cmp
mov
dec
test
int3
leave
cmpsl
shr
in
enter
insb
mov
mov
mov
adc
aam
lea
mov
lock
cmp
out
sub
dec
std
cli
sqrtps
mov
sbb
mov
dec
jmp
rcr
repnz
or
fdivs
sub
scas
rorl
mov
mov
fldcw
push
dec
outsb
inc
imul
lock
lods
in
std
add
or
push
cmp
gs
cmpsl
sub
rcl
add
jp
lar
pop
lcall
imul
insl
je
sbb
dec
jnp
add
mov
fiaddl
jp
in
push
inc
inc
lcall
roll
jmp
stc
leave
popf
xchg
leave
std
int3
sub
cmpsb
fstps
inc
jnp
sbb
repz
jae
add
repz
push
inc
cltd
ljmp
sbb
mov
cmp
xchg
mov
stos
cmp
xchg
push
or
cmp
out
popa
sbb
xchg
cmp
gs
addl
jb
xlat
js
lahf
hlt
arpl
adc
pop
cmpsb
lods
jns
fsubr
pop
dec
inc
andb
lea
or
jge
jecxz
jb
je
adc
stos
dec
add
and
clc
cltd
int
cltd
pop
sbb
xor
imul
cs
je
lahf
mov
cli
jnp
popa
ret
and
push
push
add
xchg
cmp
or
xchg
mov
lret
stc
loopne
into
lock
sahf
mov
cmp
iret
lret
std
pop
lods
pop
mov
add
out
mov
and
outsl
pushf
cltd
mov
ret
ljmp
hlt
orl
and
les
sbb
incl
mov
add
cmp
and
push
dec
sbb
add
dec
iretw
jmp
mov
pusha
jb
movl
pop
or
out
dec
jle
xchg
stos
add
ja
in
xchg
sti
outsl
mulb
std
lahf
icebp
push
jl
mov
dec
inc
stos
fistps
xchg
push
or
icebp
cmpsl
clc
fcoml
rcrl
mov
jnp
cmpsb
hlt
lret
insb
movsb
jmp
lcall
pusha
fcompl
cld
daa
add
mov
decb
mov
int
cmpsl
pop
mull
fldenv
cmp
mov
pop
arpl
pop
loop
push
inc
aas
mov
jmp
mov
inc
pop
adc
sbb
mov
xchg
sub
inc
scas
jbe
and
loop
push
rorl
lret
popf
loop
repz
cwtl
imul
stos
cli
mov
test
fcmovb
mov
sub
xlat
movsl
ret
pop
and
popl
lcall
test
mov
add
sbb
repz
jb
jge
fldenv
scas
inc
dec
lret
xor
add
dec
add
or
arpl
ja
sub
pop
das
out
mov
xchg
mov
cmpsb
pop
sbb
cmpsl
jmp
arpl
adc
mov
or
das
fmul
xor
repz
lock
lock
pop
add
dec
mov
lods
mov
jmp
jae
in
add
cmp
andl
add
fxtract
popa
add
inc
js
mov
dec
mov
push
adc
ret
push
fldcw
cmpsl
test
scas
add
ja
jl
xchg
idivl
pop
jo
add
or
jns
and
jp
jg
repz
jmp
jb
jae
fnstcw
and
jo
jp
pushf
sbb
pushf
mov
negl
push
out
or
add
jnp
cwtl
in
adc
les
icebp
stc
lret
cmp
pop
js
adc
adc
or
iret
test
xchg
or
pushf
pop
add
lds
sbb
pop
aas
jne
ds
loop
sti
cmpsl
and
in
movsl
add
dec
fs
mov
fistl
lds
leave
ret
dec
icebp
mov
shlb
and
sbb
or
gs
cmpb
cs
inc
pop
mov
xor
stc
vpaddw
into
or
push
xor
sub
int3
inc
inc
cmpsl
mov
popf
jne
mov
fmulp
pushf
cmp
or
adc
mov
mov
jns
xchg
int
mov
call
jo
das
sbb
sub
icebp
stos
cmp
clc
in
lcall
jg
movsl
sub
xor
push
orl
in
jnp
pushf
out
das
in
lret
mov
pop
lahf
lock
cmp
and
sbb
and
jno
sti
add
dec
into
sbb
lea
pop
mov
sbb
add
insl
aam
push
xchg
sub
add
fsub
sub
mov
fs
jns
mov
add
stos
stos
cmp
mov
sub
add
jecxz
inc
inc
loop
mov
lret
lcall
mov
pop
mov
mov
push
lahf
mov
insl
fsubs
or
pop
jo
lea
lret
in
iret
out
ss
xchg
add
cwtl
or
mov
outsb
mov
std
sub
xchg
addr16
sbb
push
or
into
std
icebp
loope
inc
pop
popa
repnz
loope
or
and
push
xor
sar
sbb
sub
pushf
dec
jo
xchg
leave
in
cmp
mov
cmc
mov
incl
insl
cmp
dec
and
mov
jb
mov
add
adc
int3
dec
adc
push
clc
roll
push
adc
push
clc
in
jne
add
mov
shr
pop
popf
push
es
inc
push
mov
inc
repnz
cmp
out
out
js
in
inc
adc
pop
fs
popa
push
pushl
mov
jmp
das
pop
out
test
cmpsl
jnp
dec
ret
sub
icebp
dec
scas
pop
pop
mov
push
in
push
fadd
mulb
sub
add
hlt
shll
call
mov
xchg
cmp
mov
das
dec
int
xchg
jl
mov
mov
mov
add
repnz
or
jb
fs
movsl
rorl
outsb
scas
mov
adcb
inc
jmp
sub
test
cmp
dec
or
inc
iret
adc
movsb
cmp
rolb
movsl
leave
mov
rolb
push
insl
dec
pop
fcmovne
movsl
dec
repnz
popa
xchg
add
sub
sbb
mov
push
je
je
push
ret
pop
mov
clc
dec
or
add
cmp
xor
movsl
aam
ja
jnp
test
aad
adc
pop
jb
cmp
imul
push
popa
and
and
xchg
insb
sub
shrb
pop
cmp
dec
adc
dec
rdmsr
jmp
mov
cmp
mov
adc
in
mov
push
push
add
mov
cmp
mov
shll
sbb
xchg
mov
repnz
adc
jmp
fistl
enter
cmp
js
lock
xor
fadd
fs
les
push
mov
int
xor
stos
loope
and
rep
inc
aam
inc
loop
xchg
roll
int3
fidivs
jg
xchg
xor
out
adc
lret
add
repz
cmp
dec
aad
add
xor
mov
xor
ret
ret
lret
mov
jb
lods
sti
add
and
xorl
pop
shrl
stc
inc
ljmp
sbb
andb
out
adc
lods
push
lret
in
and
cmc
pop
or
dec
shr
adc
mov
std
push
sar
dec
lret
or
insb
iret
arpl
pop
jns
icebp
add
or
add
das
in
jnp
add
jo
clc
out
mov
add
xor
push
out
xchg
add
jne
mov
jns
xchg
aaa
js
xor
lds
mov
shl
shll
or
pop
add
lret
in
cmp
xchg
and
cmp
or
movsl
inc
dec
ja
push
test
sbb
jb
push
iret
xchg
call
mov
or
test
es
mov
lods
and
inc
cs
mov
xor
outsb
aam
in
and
dec
mull
mov
inc
stos
and
inc
xchg
jmp
scas
loopne
dec
test
hlt
repz
adc
xlat
or
outsl
cli
iret
lds
inc
gs
ret
arpl
fisttpl
ss
push
stc
pop
stc
mov
mov
mov
lods
fwait
xor
xlat
jne
push
xchg
add
mov
mov
mov
std
ljmp
fiadds
or
repz
sti
stos
jl
sbb
fwait
jns
stc
sbbl
mov
je
rcrb
sub
adc
fstp
jne
xlat
leave
adc
arpl
imul
add
sbb
pop
xchg
cwtl
jmp
add
cld
push
mov
in
movb
mov
add
test
inc
mov
stos
and
mov
mov
test
js
aaa
hlt
in
jae
cmp
mov
or
inc
test
inc
push
int
lods
xchg
sub
push
rcll
add
push
in
mov
mov
rorl
and
mov
add
push
stos
sub
shl
fs
xor
rclb
xor
jp
or
jg
les
hlt
mov
jbe
or
stos
push
stos
aas
lds
adc
dec
inc
xor
xchg
hlt
jb
scas
sbb
pusha
sub
mov
pop
pop
add
push
xor
cmp
add
adc
adc
cmc
mov
pop
push
into
dec
or
or
cmp
leave
out
cmp
les
push
mov
dec
mov
add
shll
loop
pop
jge
in
push
imul
in
push
jno
ds
repz
clc
lock
in
hlt
ljmp
dec
fnstcw
sub
jp
push
mov
hlt
xlat
mov
sarl
imul
add
repnz
pop
in
add
sbb
mov
pop
jmp
nop
pop
and
cld
dec
mov
sbb
or
enter
xchg
fbld
pushf
decb
jg
and
inc
ds
mov
mov
jns
adc
repnz
aas
shll
sbb
clc
icebp
adc
xchg
into
fs
stos
mov
test
cmp
outsl
test
ja
enter
add
and
out
inc
aam
fcmovb
outsb
xchg
repnz
xchg
and
movsb
pop
jmp
jnp
mov
rcrb
sub
pop
rcl
xchg
xchg
xor
jmp
decb
int3
mov
add
lahf
xlat
xchg
mov
mov
call
adc
add
mov
mov
cmp
jge
fdivrl
fdivrs
scas
insb
daa
xor
xchg
js
adc
aad
rorb
in
scas
ss
jge
fistpll
mov
lea
in
in
dec
mov
pop
xchg
mov
jmp
fisubrl
int3
xor
aas
mov
sahf
xor
ret
xchg
cmpsl
xchg
popa
sub
jge
icebp
lock
test
insl
mov
mov
popa
mov
sub
sahf
stc
std
rcll
sahf
jecxz
adcl
xor
sbb
in
scas
iret
fidivs
stos
daa
bound
dec
sub
mov
ljmp
pop
dec
ja
dec
sbb
mov
push
movsb
mov
push
stos
lods
daa
jo
push
cmp
int3
in
repnz
aam
mov
add
sbb
inc
push
xlat
out
xorb
pop
mul
fisubrl
lahf
mov
test
cmp
ja
push
pusha
jns
add
add
rcrb
repz
push
out
loope
shrb
or
inc
mov
pop
and
pop
loop
mov
or
mov
mov
imul
inc
adc
or
pop
jns
cmp
repz
mov
in
xchg
test
and
or
lock
icebp
leave
hlt
add
adc
xchg
mov
ficoml
scas
push
sbb
push
or
pop
fbstp
inc
sbb
lret
xor
scas
mov
sub
loop
repnz
add
dec
cmp
daa
dec
cmp
xchg
mov
mov
mov
hlt
pop
jmp
loop
pop
push
xorl
cmp
cmp
xchg
cmpl
fistps
addr16
lds
pop
aas
inc
mov
add
mov
jb
enter
mov
test
mov
jbe
ljmp
js
das
ret
pop
add
cmp
mov
mulb
push
or
mov
add
pop
mov
loope
add
lock
pop
icebp
repz
enter
jno
psubusb
stos
sbb
test
clc
xor
mov
mov
pushf
jo
mov
lahf
jns
inc
fwait
mov
xor
repz
push
ss
lods
cmp
sbb
ds
ja
ret
lock
loop
insl
and
pop
cmpsl
and
and
std
push
mov
pop
scas
std
mov
push
clc
lds
jge
shl
cltd
cmp
fcmovu
das
sbb
scas
mov
sar
fs
insb
adc
hlt
out
lds
mov
and
adc
push
rol
test
cld
pop
cmp
sub
std
sub
es
hlt
sbb
insb
lea
cmc
mov
hlt
int
in
and
mov
dec
jge
or
test
shll
daa
test
loope
push
insl
sbb
sbb
hlt
sub
sub
movsb
stos
pop
mov
mov
mov
cwtl
pushl
das
mov
les
jmp
sbb
xlat
jg
rcrl
imulb
jecxz
push
sbb
pop
mov
lock
dec
cmp
int
mov
std
jbe
ds
scas
cmp
jo
jbe
pop
or
negb
pusha
icebp
mov
sub
leave
clc
loop
int3
jno
cli
or
xchg
insl
hlt
mov
sub
in
lock
jns
and
int3
and
push
add
int
xchg
out
lods
adc
fbstp
cmp
scas
sub
clc
cmp
pop
fld
mov
add
inc
lahf
mov
lock
xchg
xchg
cmc
cltd
cmpsl
popa
aam
pusha
sbb
mov
gs
mov
rcrb
push
lods
hlt
shll
hlt
lret
and
jge
ds
lock
xor
mov
cmpsl
sbb
stc
mov
jg
ret
cmpl
cli
test
xor
add
pop
lea
mov
decl
in
into
push
pop
lock
fldl
addb
mov
push
pop
and
rcrb
jne
loop
ds
adc
cwtl
and
pusha
mov
xchg
cld
push
call
sti
xor
add
adc
rcrl
mov
idivl
pop
idivb
ret
inc
sub
fsts
jle
mov
ficompl
sub
add
jmp
iret
into
xor
push
jo
xor
in
les
jns
mov
push
jo
pop
outsb
stos
std
ss
push
mov
adc
push
dec
ret
xchg
adc
mov
sbb
ret
cmc
movsl
adcl
dec
mov
dec
imul
movsl
mov
shlb
cwtl
and
push
sbb
test
add
jb
pop
lds
fwait
fs
rcl
mov
mov
mov
mov
add
cwtl
loop
mov
jecxz
dec
test
jp
pop
test
add
cmpsb
test
mov
cmp
push
xor
scas
into
jl
out
testl
mov
inc
dec
sub
xor
sbb
adc
mov
dec
add
cmc
test
or
cli
arpl
inc
inc
pusha
dec
mov
push
xchg
mov
not
jno
testl
mov
into
rcrl
cwtl
pop
mov
jb
sbb
aad
dec
out
out
les
mov
adc
lret
mov
test
retw
leave
fisubs
add
and
xchg
sbb
xchg
pop
sbb
adc
adc
and
leave
push
pop
iret
jecxz
fucomp
pop
clc
lods
in
adc
dec
adc
aas
pop
testl
movb
out
push
in
xchg
subl
sbb
add
pop
and
mov
cmp
adc
or
je
call
xor
mov
pop
sbb
js
cs
pop
cmp
das
push
ficompl
shlb
fiaddl
jg
lea
pop
stos
fidivs
mov
mov
jle
in
lds
sbb
into
arpl
stos
lea
jmp
sub
jmp
rolb
xor
aam
mov
add
add
imul
sbb
mull
cli
pop
leave
mov
cmp
and
icebp
add
or
clc
xor
jecxz
sbbl
add
outsb
sbb
nop
lcall
insl
sub
in
sub
mov
outsb
xchg
ret
cmp
and
sbb
or
inc
cmp
inc
aas
repz
inc
std
push
or
or
and
xchg
push
and
sbb
pop
mov
in
jp
adc
add
adc
xchg
push
and
and
mov
add
repz
add
xor
in
jmp
add
push
xchg
lods
add
sbb
sar
test
add
inc
sti
jo
cli
lret
jno
or
pop
pop
aad
push
push
test
and
sub
pop
jne
pusha
fcomps
movsl
jns
js
fwait
andl
pop
test
bound
aam
and
xchg
out
sahf
mov
xor
fisttpll
les
aam
cmp
xor
cmp
mov
inc
lahf
and
outsl
jbe
test
pop
outsb
jo
rorl
mov
bound
ret
or
test
ja
repz
cmp
add
sbb
movsl
add
test
dec
out
adcl
mov
mov
or
insl
test
push
outsb
xchg
imulb
cmp
dec
rcrb
out
cmp
in
icebp
push
cmp
mov
fstl
lods
cmp
add
inc
jmpw
mov
aas
fidivl
pop
fistpll
je
mov
in
negl
addl
and
or
leave
add
mov
mulb
xor
idiv
lea
dec
cmpsb
mov
and
dec
mov
mov
cmpl
es
icebp
stc
add
cmp
lods
hlt
cltd
out
cmp
insl
mov
cmpsl
or
dec
pop
aam
sti
mov
mov
das
cmp
push
movsb
loop
mov
ret
imul
roll
inc
sti
push
or
rorl
xor
popf
pop
in
fdivl
cs
sti
bound
hlt
outsb
cmp
loope
and
add
fwait
mov
or
push
popa
xor
ret
sub
mov
outsl
rol
clc
add
dec
cmp
pop
adc
push
sub
test
mov
and
add
loope
insl
out
mov
dec
out
push
add
lahf
mov
mov
lods
xchg
mov
mov
jne
rcrb
fucom
aad
dec
push
scas
leave
dec
adc
cmp
add
jno
stos
push
fs
add
push
cltd
out
rolb
ret
shll
dec
rcrb
gs
add
lock
or
ds
fildll
popl
jmp
xchg
and
ljmp
aas
sub
std
ljmp
add
stos
in
jbe
subl
in
mov
mov
cmc
loop
push
das
in
xchg
mov
cmp
sti
mov
mov
xchg
pop
sar
les
mov
rorb
mov
jmp
popa
orl
jle
and
inc
sbb
cmp
sahf
xchg
mov
ja
int3
add
out
mov
movsl
fdivrp
jecxz
add
das
add
fdecstp
lret
roll
pushf
pop
push
mov
les
jmp
mov
dec
inc
adc
rolb
push
stos
adc
pop
aas
inc
pushf
and
cli
and
mov
cwtl
push
cli
sub
clc
sbb
cld
bound
xchg
push
xlat
adc
in
xchg
stc
mov
movsb
xchg
dec
or
pop
sbb
lcall
and
sub
xor
movsl
jecxz
xchg
push
dec
pop
mov
jns
roll
int3
mulb
shr
sub
enter
xchg
or
mov
popa
test
jbe
and
push
adc
hlt
xchg
sti
add
enter
dec
mov
mov
push
cmpl
or
sti
sub
push
and
iret
jae
mov
and
xchg
fisubrs
mov
xchg
popf
test
out
and
adc
rcrl
xor
loop
mov
repnz
mov
jp
inc
inc
inc
xchg
outsb
xor
add
decb
les
add
mov
inc
fldt
int
sbb
lds
das
movl
aad
mov
add
gs
pusha
hlt
fsubp
xchg
push
add
push
stos
push
int
or
hlt
push
icebp
or
sbb
sbb
int3
dec
add
lea
inc
adc
out
cmp
shr
adc
dec
xchg
add
inc
and
leave
sub
das
xchg
jge
or
xor
and
mov
mov
cmc
sub
pop
outsb
mov
pop
or
mov
adc
pop
cmp
add
push
lcall
addr16
sub
add
pusha
in
xchg
jmp
out
cmc
retw
adc
sti
and
popa
mov
sbb
cmpsl
cli
sbb
in
push
cmp
xor
add
cmp
repnz
cmp
sbb
enter
mov
cmp
cwtl
stc
push
pop
int
push
out
adc
or
add
rclb
sbb
jle
sub
push
xorl
ret
xor
test
lock
or
fldcw
test
test
sti
loope
push
mov
sub
jae
pop
jnp
pop
dec
sbb
mov
jo
pop
cmp
sarb
into
add
test
repnz
jno
sahf
add
ds
add
pop
jmp
jnp
push
fwait
stc
out
repnz
jg
sbb
mov
negb
inc
push
adc
testl
test
shll
mov
aad
cli
daa
hlt
mov
cmp
mov
mov
lahf
jno
adc
mov
dec
adc
clc
fidivrl
add
adc
sub
mul
cmpsb
push
add
push
in
repz
outsb
adc
jmp
decl
pop
adc
outsb
cmpsl
lret
leave
or
sarb
int3
mov
cmp
dec
add
cmp
in
in
int3
mov
add
sub
dec
fsub
mov
adc
lds
dec
inc
andb
jge
pop
int3
leave
sub
imul
and
xchg
inc
out
fs
xchg
fldenv
js
je
das
sbb
xor
shll
push
movsl
or
sbb
sti
push
mov
xchg
scas
sub
dec
fldcw
push
ds
addl
jg
daa
pop
pop
add
pop
sbb
icebp
fs
lock
movsl
ds
popf
dec
xor
mov
jp
loope
loopne
and
xchg
dec
ficomps
loopne
and
cli
nop
sub
sti
repnz
aad
sti
out
push
mov
lret
add
inc
xor
fldenv
inc
cmpsb
mov
or
push
mov
enter
xchg
mov
pop
mov
jae
sbb
and
cmp
andl
adc
add
mov
sub
shlb
sbb
dec
rol
adc
sti
dec
mov
ror
popa
sub
mov
pop
sarb
out
daa
out
in
fs
pop
jle
lret
shll
mov
pop
pop
adc
inc
jle
shl
in
jb
push
add
sub
jmp
and
xchg
add
pusha
xchg
loop
mov
pop
mov
idiv
test
loopne
loope
xchg
xchg
adc
or
mov
add
enter
fldenv
sbb
sarb
sbbb
and
stc
and
cmc
mov
push
in
sub
sbb
pop
xchg
jno
push
cli
xchg
les
push
cmp
pop
in
cmp
leave
cwtl
or
ret
movsb
call
sahf
sub
fmulp
test
ret
shll
fldl
and
pop
cs
lods
out
stos
sbb
mov
test
lret
jecxz
divb
aas
je
sbb
jno
rolb
cwtl
insb
inc
in
les
test
adc
fldt
push
sub
std
adc
in
add
pop
lea
push
sub
loopne
push
int3
icebp
mov
or
mov
repnz
or
cmp
roll
fldenv
leave
pop
push
rolb
jge
dec
ja
cmp
in
add
and
adcl
add
mov
loope
cmp
dec
jmp
fsubr
cmc
jl
cltd
fcmovu
and
or
add
adc
in
mov
lods
popa
cmc
mov
dec
xor
and
push
dec
int
add
xchg
cmc
sbb
push
push
cmp
adc
and
jmp
push
not
stc
inc
pop
xchg
or
fiadds
push
mov
sbb
or
push
sbbl
out
cld
lret
mov
dec
jo
je
mov
fldenv
cwtl
stc
xchg
mov
mov
add
addr16
mov
imul
mov
push
test
int
clc
gs
mov
das
js
ficomps
xchg
inc
insl
ja
dec
ret
push
out
jge
xor
in
movntps
mov
mov
out
inc
test
jg
fidivs
add
nop
push
ret
mov
xor
adc
dec
hlt
daa
or
add
and
cmp
cli
sbbl
mov
inc
rolb
inc
jmp
push
das
jge
cs
pop
cli
in
cmpsl
mov
aam
mov
dec
adc
jmp
mov
mov
or
popa
testl
xor
add
lock
shrl
push
jle
pop
rcrb
inc
lret
in
mov
add
mov
int
or
add
ret
rcll
icebp
adc
out
hlt
nop
inc
and
sbb
sbb
sub
and
sbb
pop
bound
lods
mov
jecxz
mov
scas
in
xchg
sbb
pop
adc
mov
sbb
mov
mov
mov
cmp
iret
aaa
jle
std
jo
sti
and
in
mov
mov
cmp
and
sbb
lret
in
stos
jge
jp
xor
add
and
insb
or
mov
sbb
push
lret
push
repz
testl
jmp
int3
out
out
lds
mov
and
sub
or
adc
xor
std
adc
pop
inc
dec
mov
fdivs
and
push
jbe
jae
test
addl
repnz
and
in
cmp
lcall
and
insb
inc
cmp
mov
lret
cmc
popa
inc
or
jle
adc
jmp
int
pusha
in
mov
aaa
aas
test
and
sub
add
xor
rorb
js
and
sti
movsb
mov
and
inc
dec
mov
stc
fs
inc
pop
dec
rcl
sbb
mov
pop
pop
sti
stc
add
push
pop
arpl
push
or
xchg
lcall
pop
ds
vcvttpd2dqy
lret
in
jo
cmp
je
sti
test
and
and
dec
push
and
into
push
pop
dec
jbe
jo
out
and
jp
and
inc
xchg
sub
sbb
sti
int
or
mov
pop
sbb
repnz
imul
jnp
add
cmp
movsb
sbb
mov
or
in
je
jg
jmp
or
mov
xchg
xor
fwait
adc
inc
and
outsb
jbe
inc
mov
fs
push
sub
dec
add
jno
test
testl
cmpsl
pop
in
add
push
leave
push
aaa
pop
fwait
mov
sub
sub
push
leave
adc
add
mov
imul
jmp
js
xor
add
fidivrl
icebp
dec
cmp
sub
clc
mov
cltd
add
ret
mov
lods
movsb
and
shll
dec
stos
repz
movsl
push
mov
cmp
sub
ss
push
repz
add
or
cmp
pop
sub
and
sbbl
xchg
cmpsl
push
inc
in
sub
cmp
xchg
loope
gs
or
adc
rcll
jle
inc
shll
pop
sub
dec
mov
cmpsb
mov
xor
int
out
mov
aam
push
and
sti
push
cwtl
or
dec
inc
aas
push
xorb
roll
jmp
cmp
aas
dec
or
hlt
fxch
inc
sahf
ret
xchg
cmpsl
xchg
mov
lcall
add
mov
pop
repnz
add
push
xchg
pop
lret
dec
mov
dec
mov
jne
in
push
insl
stc
ss
add
dec
dec
sti
shrl
ljmp
fs
into
add
pop
negl
inc
ret
in
pop
movsb
jae
mov
les
inc
sahf
stc
ret
fcompl
mov
mov
stc
dec
movsb
call
mov
nop
rorl
jg
aam
repnz
sub
and
push
and
add
sbb
fnstsw
and
mov
jle
ljmp
inc
mov
rorb
popf
lea
test
and
add
das
mov
std
pop
test
mov
mov
cmp
int3
pop
loop
pop
sbb
mov
mov
jecxz
inc
and
dec
sbb
cmp
push
push
pusha
pop
add
fidivrl
dec
aas
popa
andl
or
icebp
pop
and
repnz
fldl2t
shll
mov
dec
rolb
or
subl
pop
push
subb
aas
adc
aaa
fstpl
mov
jb
rolb
dec
psubd
inc
jge
cmp
dec
mov
test
test
sbb
xor
pop
pop
fs
movsb
test
pop
cmp
push
dec
push
imulb
cmp
and
cmpsb
enter
cmp
sar
cmpsl
out
add
jmp
shrl
adc
pop
xchg
cmp
lods
shl
loop
push
ds
icebp
mov
out
mov
std
add
faddl
add
roll
mov
orl
mov
dec
add
addr16
roll
jg
out
notl
ljmp
pop
shlb
or
movb
rolb
sbb
cmp
lahf
or
mov
outsl
dec
xchg
and
jne
mov
or
xlat
push
inc
cmp
xacquire
add
bound
outsl
frstor
pop
es
les
ja
dec
arpl
cmp
mov
fcomps
dec
mov
in
movsl
subb
push
xchg
scas
dec
add
int3
stc
data16
cmp
jns
jle
aad
cmp
sbb
push
dec
sub
ss
jg
popa
ja
mov
mov
or
cmp
orb
std
mov
mov
fwait
mov
jb
rclb
cmpsl
out
and
push
sub
mov
out
mov
cmpsl
jnp
popa
popf
std
pusha
negl
dec
mov
cmp
sub
test
ljmp
dec
sbb
movsb
lret
add
dec
push
cmpsl
jno
push
push
mov
fnsave
xchg
add
and
cmp
sbb
jecxz
cmpsl
subps
or
mov
fdivl
shl
fdivl
dec
add
or
repnz
xchg
sbb
addb
leave
std
test
fwait
mov
je
push
xchg
popa
sbb
ret
and
rcrb
ljmp
call
inc
xlat
lret
sahf
pop
cmpsb
scas
inc
mov
addr16
lods
fs
mov
cmp
dec
lods
movsb
bswap
push
adc
push
jb
in
aad
dec
scas
add
out
pop
add
add
mov
inc
out
lret
bound
push
pop
lds
sub
and
cmpsl
or
sbb
push
into
xor
dec
ret
or
pushf
or
cmp
cmpsl
in
mov
and
sub
and
mov
sbb
push
sbb
scas
aam
xor
sbb
insb
pop
push
or
les
jne
mov
es
outsb
push
sbb
ret
popa
mul
push
pop
push
jo
mov
pop
mov
fisubs
add
push
mov
daa
rclb
imul
leave
add
xor
test
inc
push
dec
pop
imul
mov
sbb
mov
mov
mov
sub
dec
fstpt
in
ja
inc
push
adc
sub
out
ret
lock
out
test
xchg
fmul
or
rolb
mov
lret
jecxz
mov
push
dec
pushf
push
cmp
lcall
cltd
daa
movl
int3
outsl
mov
nop
xchg
hlt
sub
cmp
dec
test
push
out
je
lret
or
or
cmp
pop
mov
pop
psubsw
lea
nop
or
jge
pop
daa
fs
adc
mov
dec
popa
xchg
push
loop
push
lret
ja
jge
add
sbb
mov
loope
aad
rcr
adc
add
cltd
cmp
cmp
cmp
fsubrl
shl
mov
add
jns
pop
aaa
andb
mov
leave
into
mov
adc
aaa
in
jne
ja
filds
lret
or
stc
stos
xor
es
enter
dec
pop
aad
add
sub
aas
loop
dec
add
or
and
jge
sar
lcall
fdivrs
shll
mov
jmp
inc
sbb
adc
mov
mov
dec
mov
fstl
or
xchg
push
sbb
cmpsl
lret
or
icebp
or
repz
fnstsw
testb
or
xchg
inc
outsb
and
icebp
dec
rclb
stc
add
add
dec
aas
mov
pop
pop
and
xchg
fs
lret
sbb
pop
add
push
sub
std
loope
dec
out
movsb
and
fsub
mov
adcb
cwtl
nop
adc
in
gs
cmc
iret
aaa
cmp
fistl
cltd
lds
repnz
stc
dec
int3
adc
cmp
stos
sti
jb
mov
dec
int3
clc
int
and
xor
pop
mov
add
ja
in
add
clc
mov
arpl
or
es
inc
in
int3
iret
dec
subb
movl
pop
nop
jle
lret
mov
outsb
inc
es
movsb
cmp
std
lret
jecxz
push
hlt
outsb
pusha
jo
mov
stos
scas
add
test
flds
ss
lock
sub
inc
sbb
xchg
das
insl
into
add
mov
sub
sbb
or
inc
pusha
hlt
std
sti
dec
out
mov
dec
push
push
shll
pop
out
dec
adc
mov
mov
je
inc
mov
outsb
or
cmpsl
inc
pop
jl
pop
jae
cmp
adc
lea
xor
pusha
inc
pop
ret
aas
xchg
aam
and
out
jl
lods
stc
iret
repz
addr16
or
mov
xchg
cmp
push
imul
add
test
icebp
sub
inc
xchg
loop
repz
sub
rclb
adc
inc
cmpb
dec
cmp
es
inc
lods
rep
jg
push
ret
mov
lea
shrl
mov
dec
call
lret
push
das
cld
imull
idivb
fsubrs
sub
orl
shl
push
popf
mov
fdivrl
mov
dec
in
xchg
lea
jg
inc
outsb
je
addr16
leave
outsl
sub
nop
mov
sbb
xchg
shrl
lret
or
cmp
or
xchg
fidivl
push
icebp
sub
xor
lods
mov
jl
mov
in
ret
pop
adc
sbb
jmp
adcb
pushf
cmp
add
rcr
jmp
movsl
test
jns
xor
cmp
mov
data16
movsb
push
mov
mov
lods
cmp
add
push
jl
mov
ss
sbb
cmp
mov
cmp
mov
xchg
ss
push
mov
sub
or
aam
push
sub
out
jns
jg
push
cmp
daa
in
or
cld
cmp
das
push
loope
in
dec
into
add
insl
out
push
add
cmc
icebp
repnz
stc
clc
pop
and
sbb
hlt
xchg
pop
push
ljmp
xchg
hlt
enter
or
jg
cmc
jo
ret
mov
mov
cmp
hlt
pop
ja
aad
testb
in
sub
out
adc
or
pop
movsb
fwait
inc
ret
int3
dec
push
iret
sub
ret
push
test
lahf
dec
orl
jne
lods
mov
subl
gs
push
jb
addl
cltd
lretw
adc
movsb
mov
dec
vmovlpd
icebp
and
cltd
fldl
stos
cmc
int
xor
or
mov
mov
mov
sbb
lds
das
sbb
or
pop
add
add
in
sub
xchg
ret
and
jmp
add
cmpsl
hlt
sbb
enter
jo
jo
and
xchg
idivl
rclb
pushf
push
fucomp
inc
or
cmc
lret
insl
std
cmpb
rolb
add
stos
sbb
xor
roll
out
and
sub
jecxz
sbbl
aas
int3
jg
adc
imul
fsubp
xor
mov
mov
push
sbb
push
fisttps
fimuls
cld
lods
test
sbb
push
mov
lret
iret
xor
or
pop
into
arpl
out
daa
pop
mov
mov
iret
mov
mov
cli
aaa
xchg
push
add
jmp
dec
mov
lods
ja
sbb
lret
and
leave
clc
ror
push
add
mov
andb
sbb
cmc
push
xchg
int3
jno
or
sbb
mov
lds
lea
mov
and
jecxz
adc
test
lds
inc
repz
dec
push
out
clc
shll
and
leave
mov
stos
out
popa
xchg
in
aad
pop
mov
sbb
js
test
pop
out
mov
fdivl
xchg
dec
in
enter
jae
xor
pop
in
lea
pop
stos
call
dec
add
or
mov
test
fidivs
or
mov
ljmp
shl
mov
cmpsl
push
add
mov
push
push
cmp
out
nop
jmp
sub
popa
sub
inc
shlb
xor
jg
inc
xchg
mov
and
inc
insl
mov
pop
push
stos
mov
divl
pop
in
leave
sub
icebp
xlat
in
pushf
hlt
or
push
icebp
mov
or
imul
in
mov
mov
hlt
xorl
lods
xchg
pop
ret
mov
lcall
and
test
lea
mulb
lcall
mov
jp
rcr
cmp
addr16
cmp
and
hlt
xor
sahf
test
jg
repnz
das
push
inc
pushf
mov
ds
in
jnp
sub
iret
cmc
cmp
fidivl
ficoms
movsb
sahf
movsl
movb
xchg
sbb
mov
xchg
inc
call
jbe
daa
push
dec
sub
or
mov
jle
fnop
mov
push
pop
imul
and
xchg
xchg
in
sti
mov
pop
fs
jecxz
pop
dec
testl
jecxz
pop
or
mov
add
mov
push
stc
cmp
roll
nop
repnz
dec
xor
hlt
or
sub
loopne
mov
clc
loop
adc
rcll
pop
or
cmp
out
jle
dec
das
out
jo
mov
out
int
jns
stc
shll
mov
or
fstpl
or
mov
and
adcl
add
mov
dec
dec
sti
fld
shll
lret
pop
dec
cmp
aas
sub
xchg
add
das
sub
out
stos
pop
jno
and
mov
mov
mov
adc
cmc
cli
mov
iret
fs
lret
test
cmpsb
dec
outsb
mov
sbb
mov
neg
jmp
sbb
xor
andl
mov
fwait
aas
je
cvtps2pd
cmp
pop
cmp
mov
add
mov
subb
adc
sti
add
push
movsb
popa
dec
test
outsb
gs
cwtl
push
mov
adc
inc
hlt
sub
sarl
sbb
add
inc
in
hlt
jg
push
mov
data16
orb
jmp
xlat
jo
cmp
shrb
adc
jnp
sub
fiaddl
xlat
sbb
xor
push
mov
jns
and
rcl
fdivr
jmp
xchg
xchg
clc
pop
xchg
and
test
cli
jp
leave
rorb
mov
aaa
pop
and
dec
clc
push
lock
div
pop
sub
lds
inc
xor
jle
jmp
shrb
lock
repnz
dec
adc
inc
out
sub
jle
aaa
repz
and
scas
jle
pop
adc
out
aam
call
in
and
push
sbb
xchg
mov
in
xlat
divb
ds
pop
sub
push
inc
push
inc
sbb
iret
and
mov
jmp
pop
pusha
leave
fnstcw
sub
sahf
mov
xor
and
or
sti
xchg
scas
icebp
xor
inc
shrl
fldl
stos
ljmp
and
fisubl
insl
jns
js
xor
xchg
mov
jne
jl
push
lahf
sbb
incb
popa
lahf
test
inc
stos
out
sbb
aaa
insb
gs
xchg
jno
jo
sub
shl
je
lock
negl
shrl
sbbl
pop
cmp
inc
jg
mov
int3
ret
jl
mov
add
pusha
lds
sbb
cld
out
push
int3
icebp
mov
lret
cmp
test
lret
adc
pop
sub
in
das
or
xchg
les
mov
add
in
orl
in
rorl
cmp
push
lret
icebp
lds
pop
or
xchg
not
icebp
mov
repnz
lcall
push
sbb
inc
sbb
inc
pop
sbb
leave
or
cmp
push
hlt
mov
pushf
out
xchg
lods
mov
repnz
orl
in
pop
lret
jnp
and
lea
dec
dec
sub
in
mov
inc
jmp
orl
test
dec
mov
insl
int3
cmp
xchg
and
incb
fwait
addr16
in
inc
pop
imulb
mov
cmp
cmp
push
ret
inc
lahf
jb
leave
test
dec
xlat
pop
shr
cmp
and
cmpsl
fwait
mov
jnp
cmp
adc
hlt
psubq
lahf
push
leave
xor
cmp
sbb
movsl
push
shlb
clc
scas
mov
jecxz
iret
mov
add
andl
sti
and
cmp
xchg
pop
ret
jae
fwait
in
popa
or
jle
movsl
push
dec
mov
leave
orl
in
ds
inc
sbb
insl
adc
loope
xor
int
lea
lea
mov
mov
stc
inc
mov
add
jmp
jmp
dec
test
adc
loope
inc
shr
pop
dec
faddl
stc
cmp
mov
lea
shrl
sti
or
jge
pop
rorl
sar
jmp
movsl
jno
and
fisttpl
push
scas
or
fldl
or
push
jmp
and
in
nop
hlt
ds
push
xlat
mov
jmp
pushf
push
adc
pop
mov
mov
loop
dec
fistl
leave
or
aad
loope
mov
loope
stc
mov
aaa
sub
sub
mov
arpl
dec
mov
lds
jge
jns
dec
jno
std
jmp
out
lock
loopne
test
popa
fstl
in
adc
or
cmpsb
jnp
pop
in
mov
std
lea
rorl
stc
push
ds
mov
in
aad
fabs
dec
jmp
test
test
stc
pop
sar
stc
dec
lods
aaa
insl
pop
and
pop
jns
stc
stc
stc
cltd
mov
fstps
or
pop
add
dec
test
loope
jns
push
jmp
pop
dec
xchg
mov
popa
in
insl
stc
stc
jmp
lock
push
popa
mov
arpl
lea
sub
jmp
mov
mov
jl
jmp
or
jl
mov
pop
popa
mov
icebp
jle
in
frstor
loope
mov
pushf
dec
rorl
imul
stc
imul
push
insb
mov
in
inc
stc
jmp
insb
cmp
inc
pop
jnp
sti
and
xchg
mov
aam
movsl
stc
mov
hlt
in
sti
dec
jl
rorl
mov
push
icebp
dec
fildl
push
mov
incl
test
add
jno
push
xchg
test
loope
mov
inc
pop
sar
mov
in
mov
add
shlb
add
mov
aam
mov
jmp
in
pop
jecxz
mov
in
lds
lcall
cmpl
les
ja
out
sti
outsl
dec
gs
ss
dec
mov
stos
pop
pushf
push
xor
sbb
cli
push
add
or
out
mov
icebp
jb
dec
pop
jmp
insb
xor
mov
xor
enter
inc
mulb
mov
mov
psubusb
dec
lret
push
mov
mov
jnp
in
push
ds
test
test
sub
call
sbb
data16
cltd
mov
test
fcoms
and
push
pop
pop
push
stos
negl
icebp
jne
outsl
push
push
ds
mov
cmc
sub
pop
pop
mov
lret
xor
jae
mov
cmp
movsl
divl
inc
cmpsl
mov
mov
or
cli
jg
add
loop
call
jl
pop
cmp
icebp
dec
jg
movsb
addb
xchg
add
iret
in
sar
dec
jno
out
andl
cs
enter
xchg
mov
dec
pop
loop
cmp
popa
xor
sbb
push
sarb
mov
daa
test
push
dec
xor
stc
add
and
jmp
hlt
xor
adc
jmp
fldenv
int3
dec
push
or
fdivs
add
rcll
pop
fnstsw
ret
adc
iret
lds
sub
leave
adc
icebp
into
popl
mov
and
in
mov
add
leave
cmp
dec
scas
cmp
bound
cmp
cmp
push
cmp
pushf
ds
lret
sbb
int
cli
aad
movsl
sub
push
dec
fscale
inc
out
mov
in
dec
ret
fwait
cmpsl
repnz
cmp
inc
jecxz
xchg
push
add
cmc
or
pop
pop
in
cmp
addl
ficoml
ret
jle
pusha
in
or
cltd
dec
cmpsb
mov
xchg
aad
sti
mov
xchg
xor
out
inc
rclb
xchg
or
rol
or
cmp
and
ds
ret
sub
cmp
or
stc
in
inc
gs
sub
test
push
dec
fucom
and
cmp
gs
or
cmp
fsubrl
inc
stc
or
jns
or
in
loope
xor
cs
leave
aad
aam
fldcw
mov
pop
inc
cmp
std
fmuls
ret
jne
shll
mov
dec
popf
stc
imul
lea
cmc
out
or
leave
xchg
or
shll
push
call
stc
mov
lea
gs
aam
mov
hlt
mov
xchg
adc
or
adc
sub
insl
cld
pop
outsb
add
mov
sub
sbb
test
dec
imul
adc
in
jns
int
loope
call
xor
add
sti
mov
rol
dec
outsl
leave
or
sti
sbb
pop
out
pop
shl
mov
shll
nop
loope
and
cld
inc
pop
jge
jge
cmovl
jmp
rcll
or
in
cmp
cmpsb
xor
test
movsl
pop
popf
loope
sbb
roll
or
dec
mov
sbb
jl
mov
or
cmp
mov
fisttpll
dec
dec
jmp
mov
shr
jns
or
add
int
aad
icebp
sar
cmc
sub
fmull
and
and
and
sub
rclb
mov
jns
jle
fldl
sub
jge
dec
std
mov
dec
jns
xor
mov
lods
popa
stc
insl
std
jle
in
jns
mov
push
pushf
mov
test
xor
push
outsb
ljmp
cmp
loope
repz
or
cmp
mov
es
fimull
sar
fisubrs
in
clc
mov
push
fiadds
sub
and
or
test
testb
sub
inc
inc
xchg
push
je
shl
leavew
inc
xor
lock
cmp
pop
fdivl
and
xchg
push
fbstp
mov
dec
icebp
int3
and
push
ja
xchg
bound
xchg
cs
push
add
fstpl
mov
enter
pop
cmp
lods
mov
sti
aad
fistpl
mov
shrl
std
out
cmp
mov
mov
mov
mov
sub
xchg
dec
jl
inc
mov
lret
cltd
add
cmpsl
push
movsb
les
sbb
push
in
add
sub
sbb
and
or
enter
lea
repz
in
roll
mov
sbbl
or
pop
popa
jl
xchg
pushf
push
pusha
and
lret
ljmp
lock
add
pop
mull
jnp
ror
fs
push
push
sub
int
cmc
sbb
cmp
pop
leave
aas
xchg
mov
outsl
pusha
inc
icebp
and
leave
stc
xor
cmp
jmp
arpl
testb
push
or
sub
pop
adc
clc
lret
add
pop
imul
jmp
adc
pop
stos
popf
pop
int
mul
or
fisubrl
scas
inc
mov
xchg
xchg
sbb
daa
in
subl
add
pop
fs
sti
and
add
pop
fbld
cmp
add
lahf
in
or
push
les
cwtl
adc
mov
push
or
mov
enter
mov
push
push
sbb
je
loope
into
mov
iret
lret
add
and
pop
sub
fmuls
fimuls
xor
push
idivl
cmp
test
inc
mov
dec
add
lret
sbb
pop
mov
push
mov
mov
xchg
test
test
xchg
lahf
das
or
or
adc
jp
cmp
lahf
mov
push
cmpb
sbb
xchg
dec
clc
mov
mov
aaa
fst
repz
cmpsl
push
gs
xor
or
jns
les
add
mov
xor
sub
negl
mov
ds
fs
test
mov
hlt
jb
dec
lret
iret
add
hlt
lret
fwait
sbb
cmp
add
ss
lret
shl
inc
jmp
pop
push
stc
pop
das
cs
popa
jmp
lret
loope
fs
ja
ss
sbb
movsb
out
mov
inc
lds
scas
data16
cwtl
xchg
out
mov
frstor
dec
inc
stc
xlat
dec
adc
jnp
mov
adc
jae
and
test
jp
xor
dec
pop
hlt
lahf
lea
add
and
lea
fdivr
aaa
mov
pop
out
push
mov
int
fs
pop
dec
cltd
mov
or
lahf
inc
aas
mov
es
inc
movsb
add
jno
xor
sbb
stos
push
dec
enter
test
cli
jns
int3
xchg
movsb
mov
and
stos
or
jl
imul
mov
push
jp
cmpsl
test
cmpsl
push
jne
shlb
scas
mov
sub
jb
dec
and
push
pop
xor
ss
cmp
scas
dec
mov
jno
inc
das
pop
into
xchg
cmpl
pop
sub
push
out
mov
arpl
cmp
sar
stos
xchg
cmp
push
adc
movsb
daa
mov
jle
push
sub
aaa
outsb
xchg
fcmovbe
cwtl
aam
std
xchg
imul
pusha
dec
mov
mov
inc
decl
mov
lea
loop
dec
jne
mov
shr
pop
es
movsb
ret
adc
in
mov
jno
jb
sub
mov
orl
mov
xor
out
test
cld
cmp
cmp
push
xor
or
out
dec
inc
hlt
dec
aas
mov
iret
jne
push
add
push
out
fildll
mov
jno
test
popa
stos
xchg
insl
call
scas
mov
sbb
dec
mov
cmp
and
movsl
pop
xchg
in
push
sahf
adc
adc
js
or
je
test
cmp
imulb
dec
lods
fldl
sti
adc
mov
or
or
push
xchg
xor
xchg
pop
aaa
in
mov
xlat
push
mov
cmp
in
scas
out
lock
mov
pop
dec
mov
movsl
scas
aam
mull
into
lds
push
xchg
leave
testb
xchg
cmpsl
or
js
pop
sar
int
push
stos
lea
push
fidivrs
fsts
sbb
sub
dec
pushl
cmp
adc
repz
push
mov
pop
ja
test
add
xchg
xchg
sub
loop
cmp
xor
popa
sbb
dec
jmp
and
push
add
rcll
add
cmp
aas
add
ja
gs
xor
mov
in
dec
fiadds
movsb
adc
jae
mov
sbb
call
mov
add
xor
sahf
mov
leave
add
add
idiv
test
inc
movb
fmulp
mov
xchg
pop
mov
add
cwtl
add
mov
out
sub
loope
sbb
gs
sub
sbb
hlt
sahf
mov
iret
adc
mov
pop
loope
es
mov
dec
xchg
fldt
push
push
jmp
fiaddl
sub
pop
jl
in
fnstsw
xor
mov
inc
movsl
mov
adc
stc
mov
or
jmp
sbb
sbb
jne
aad
add
pop
int3
test
sub
mul
mov
jb
mov
and
outsl
and
jb
out
jne
fs
dec
fucom
push
cmpl
adc
add
fsts
jne,pn
iret
sbbl
es
arpl
push
push
dec
add
mov
mov
pop
test
mov
cmpsl
sbb
mov
or
add
pop
dec
cmp
sarb
lret
inc
dec
push
sub
addb
add
sbbb
adc
rorb
jl
fisubs
popf
lcall
ds
jp
add
mov
dec
lcall
jae
xor
push
mov
sub
enter
pop
ret
popa
push
fbstp
lea
sbb
dec
sahf
push
push
cmpsb
pop
xchg
sbb
pop
xor
sub
test
and
jle
leave
xchg
push
cmp
dec
add
out
shrb
dec
mov
cmp
outsl
popf
fistps
je
and
insl
sub
dec
cs
popf
test
in
aaa
popa
cs
pop
mov
int
pop
xor
aam
xor
add
lds
fdivrl
rclb
cmp
dec
sbb
push
ret
lret
fcompl
xor
mov
adc
sbb
test
jb
ds
ret
stos
mov
mov
adc
sti
add
or
sub
mov
incb
mov
pop
loopne
dec
adc
mov
dec
xchg
pusha
fs
adc
sub
jmp
int3
orb
mov
sbb
lea
scas
in
cmp
cmp
and
leave
or
test
ret
int3
add
mov
xor
andl
lahf
mov
and
jnp
jbe
lret
clc
adc
cmc
ss
nop
out
in
dec
icebp
adc
jle
cmp
pop
int
jnp
mov
push
movsb
adc
push
insl
mov
sar
imul
xchg
mov
ss
xor
adcb
inc
cmp
hlt
inc
jns
flds
lret
outsb
mov
ljmp
loope
mov
scas
cmp
into
xchg
aas
adc
mov
aad
lock
lret
pop
and
mov
repnz
jmp
mov
cmp
push
xchg
push
mov
dec
mov
xor
sbbb
add
arpl
or
sbb
iret
shrb
inc
rorb
mov
ret
das
mov
fists
add
mov
xchg
push
mov
adc
mov
adc
inc
jmp
loopne
fldl
jns
pusha
mov
mov
fs
mov
jne
dec
mov
mov
xchg
out
dec
test
dec
fstpt
push
mov
add
mov
sub
mov
xor
rorb
push
ret
add
push
mov
xchg
push
jae
ret
add
and
cmpsb
shl
hlt
mov
dec
push
jecxz
and
nop
mov
insl
mov
push
fnstsw
xchg
pop
xor
push
in
pop
sub
xchg
out
add
hlt
arpl
jle
lret
adc
pop
adc
sbb
test
add
into
mov
adc
push
repz
cmpsl
aaa
or
mov
fadd
push
loop
bswap
pop
mov
fwait
lret
mov
and
fildl
push
mov
mov
stc
jns
enter
pop
mov
push
cmp
xchg
fwait
cmp
add
push
mov
mov
movsl
jbe
out
push
rorb
inc
add
das
cmp
test
idiv
mull
lret
clc
fisttpll
lcall
xchg
inc
into
sti
cs
or
imul
push
lods
push
inc
dec
and
sahf
jecxz
mov
scas
dec
into
rolb
cmp
and
int3
lds
jg
lods
push
arpl
push
xor
inc
push
popa
mov
fs
jns
add
mov
out
or
and
movsb
and
lea
movsl
mov
sub
inc
gs
rcrl
mov
jno
pop
xchg
mov
xor
sahf
cli
sbb
hlt
dec
inc
mov
xchg
leave
in
pop
cmp
test
pop
fs
and
push
insb
ret
out
lods
pop
and
jo
push
insl
xor
dec
cmp
add
pop
adc
pop
insb
pop
mov
or
adc
mov
dec
xchg
adc
int3
mov
mov
sbb
inc
int
or
in
imul
mov
adc
stc
cmc
dec
pusha
push
inc
adc
xor
mov
jo
or
mov
add
or
arpl
adc
add
xchg
jge
subl
push
and
rclb
cli
cli
data16
pop
or
jmp
pop
in
inc
lret
jle
in
jg
and
in
adc
clc
out
dec
sbb
into
mov
bound
xchg
jae
xor
or
jb
pop
or
xor
adc
cmp
es
stos
fldt
or
sub
mov
mov
mov
scas
lret
mov
and
sub
jle
adc
adc
and
xchg
add
pop
cmpsl
hlt
dec
xor
bound
andb
push
cwtl
sti
xor
xchg
in
cmp
sti
push
clc
insl
pop
push
inc
xor
movsb
mov
fwait
imul
fistpl
or
fninit
mov
mov
add
pop
push
gs
adc
mov
cli
or
mov
cmp
addr16
fwait
lret
hlt
rolb
sub
push
jns
or
or
out
xchg
hlt
sbb
xor
negb
xchg
out
jmp
mov
ss
loopew
push
inc
in
dec
int3
icebp
mov
rcll
fldcw
jmp
pop
popa
test
test
xorl
pop
jns
subl
dec
ret
call
in
scas
sbb
aam
jnp
mov
mov
sbb
shl
cltd
dec
xchg
dec
inc
sub
repz
push
jns
mov
lret
shlb
add
pusha
ja
dec
adc
or
js
mov
adc
add
ret
lock
and
int
cld
repz
add
cmp
cs
movsb
dec
popf
dec
add
das
push
cmpsb
push
cmp
pop
inc
fcmove
add
sti
or
or
icebp
decb
neg
idivl
aas
and
aas
lea
fcomi
in
pop
repnz
pop
imul
cld
cs
les
ret
std
int
cs
adc
leave
sahf
push
jns
bound
insl
repz
mov
add
fisttps
psadbw
jmp
lods
push
cmp
int3
cmc
ss
cmp
test
outsl
adc
push
cmpl
fisttpll
pop
fnstenv
in
inc
pop
pushf
inc
shll
fists
sub
iret
sub
repnz
cmpb
arpl
pop
push
das
dec
call
ret
imul
out
lds
rol
pop
adc
xor
add
hlt
jmp
xor
dec
cli
add
test
jo
pusha
add
jbe
out
out
outsb
lcall
xchg
mov
push
lsl
negb
cmpsl
cwtl
cmp
sub
aas
mov
in
or
and
clc
xchg
xor
pop
inc
lods
mov
cmpsl
hlt
movb
mov
jge
add
pop
or
jb
sub
loope
dec
lea
push
and
jns
xorl
nop
xchg
cmp
rcrb
xchg
aad
add
cmp
fldt
mov
shl
dec
rorl
xchg
cwtl
cmp
shl
lcall
jns
fistpll
in
idivl
in
fidivl
cwtl
sbb
xchg
sbb
push
cmpsl
mov
pop
sbb
dec
imul
aas
popa
cwtl
jmp
test
frstor
adc
insl
faddl
test
xchg
enter
mov
mov
inc
sbb
mov
xor
mov
jmp
pop
das
and
fst
or
test
cmc
fldl
dec
lret
and
sbb
xchg
js
loope
cmp
outsb
fdivs
icebp
add
add
pop
data16
in
les
faddl
leave
or
add
push
rcll
add
aad
cmp
lret
mov
and
arpl
popa
sub
or
cmpsl
lods
aaa
imul
ds
xlat
pusha
push
dec
and
das
ja
pop
jge
mov
dec
xlat
add
sbb
movsb
mov
xchg
addr16
bound
rcrl
fidivl
mov
stos
mov
dec
in
test
lret
lahf
sarl
aas
incl
fwait
icebp
hlt
push
or
xchg
out
xor
shrb
cwtl
int
pop
xchg
sub
or
aad
mov
jnp
ds
jb
imul
loope
xchg
lahf
pop
test
shlb
fidivl
incl
push
hlt
jle
popa
adc
pop
sub
or
mov
aaa
in
mov
xchg
sub
add
lods
ret
ret
sbb
dec
movsl
jo
sbb
dec
hlt
sbbl
into
mov
stos
shlb
adc
adc
push
repz
mov
dec
loopne
sub
ret
jle
xor
les
add
sbb
xor
sub
jecxz
scas
mov
in
add
lock
sahf
fdivl
adc
dec
loope
and
out
call
mov
flds
fidivrs
sti
cli
jnp
fstps
dec
repnz
jns
out
pop
and
fiaddl
dec
push
add
adc
cmpsb
adc
jo
loop
cmp
hlt
fs
adc
ljmp
imul
ljmp
leave
jecxz
dec
push
in
push
mov
mov
cmp
not
dec
mov
loope
popa
cltd
rcll
add
xchg
testl
lds
pop
jl
std
mov
iret
loope
movsl
add
popa
jmp
xor
xlat
int3
aad
out
dec
pop
adc
sub
adc
add
push
sti
inc
adc
push
popa
dec
sub
arpl
fdivrl
js
mov
inc
jp
and
pop
stc
pop
add
cmp
out
stos
stos
not
int
mov
jmp
dec
test
incb
arpl
fbstp
push
loop
arpl
adc
fsts
std
pop
adc
ss
dec
dec
mov
leave
cltd
adcl
and
mov
push
outsb
mov
ret
xor
je
xchg
pop
adc
cmpsb
jge
mov
std
jge
mov
loopne
in
test
mov
test
sub
cmp
bound
popf
mov
mov
xor
sbb
xor
loop
push
mov
lahf
jmp
mov
fdivrp
push
popa
fldl
jns
stc
arpl
lds
sarb
cmp
rcrb
or
adc
and
fisttpl
ret
dec
mov
jmp
mov
jns
test
mov
sub
adc
mov
in
sbb
mov
add
mov
and
lret
xor
nop
sub
adc
scas
jmp
sub
ljmp
mov
outsb
loope
cmp
aad
pop
int
dec
dec
dec
adc
adc
push
push
mov
cld
test
loop
cmp
mov
or
test
test
push
imul
add
lods
fwait
clc
push
mov
outsl
sbb
jl
sub
imul
cltd
pop
test
movsb
xchg
mov
jecxz
ret
leave
jo
mov
jns
mov
shll
das
icebp
lret
and
int3
sti
fstps
test
or
and
sti
xor
jmp
cmp
in
movsb
ss
shll
std
adcl
or
mov
fs
bound
jmp
gs
stc
cmc
leave
xor
icebp
and
pop
in
loope
jecxz
push
outsl
es
or
scas
sbb
add
cmp
lea
ficoml
sub
leave
jecxz
outsl
push
es
push
in
mov
or
aam
sub
and
in
out
cld
cmp
jns
mov
nop
push
test
cmp
cvtps2pi
adc
push
cmc
in
arpl
and
loope
inc
cld
mov
or
add
xchg
mov
jl
lea
or
hlt
sbb
lock
data16
xchg
jnp
and
cmp
data16
stc
test
out
daa
stc
sub
outsl
mulb
push
cmp
pop
lds
adc
cmc
mov
mov
fildl
ret
mov
cltd
and
addr16
cmp
ret
fnstcw
xor
shr
movsb
movsl
std
inc
out
push
push
adc
lcall
dec
fidivrs
mov
test
mov
cld
inc
repnz
or
call
lahf
rol
pandn
jnp
xor
inc
add
bnd
jg
pop
lock
call
rol
lds
jbe
popf
insl
cli
fisttpl
jo
test
mov
roll
in
and
outsl
adc
lods
in
std
lret
aad
xchg
mov
or
mov
int
xchg
or
and
mov
cmp
mov
add
inc
jg
in
lea
or
mov
xor
jns
pop
scas
sub
push
shll
cmp
xor
mov
jecxz
jae
mov
cmp
imul
push
cmp
stos
pushf
daa
add
sbb
ljmp
sti
push
mov
cmpsl
movsl
insl
sub
mov
push
lahf
push
repz
pop
or
xor
xor
lret
sbb
inc
mov
mov
loopne
mov
cli
sub
ret
dec
dec
push
sbb
inc
icebp
push
sbb
jo
xchg
mov
mov
dec
addr16
cmp
and
in
popa
daa
add
sub
push
repz
je
push
push
arpl
movsl
lret
xchg
imul
inc
in
insl
aas
jae
mov
push
or
lods
inc
push
into
dec
and
push
cmp
fs
add
test
rorl
ret
in
fs
add
shlb
cmp
std
xor
orb
dec
dec
add
in
dec
and
mov
fisubs
lret
int
cmp
add
je
or
stc
and
and
mov
sub
insl
jmp
or
lds
test
xor
out
sbb
ret
ja
xor
lret
cmp
lods
out
add
fisttpll
outsb
das
shll
data16
lret
shl
pusha
pop
jb
xchg
dec
sbbb
or
out
es
adc
lret
cmp
jns
mov
out
add
xchg
jmp
sbb
jg
inc
or
pop
and
lock
dec
jle
ss
sbb
decb
popf
loopne
loope
jl
cmc
pop
xchg
movsl
sbb
scas
hlt
xchg
mov
pop
jo
fs
loopne
cmp
insl
pop
mov
ret
subb
call
ror
cwtl
ss
and
decl
lock
mov
dec
pop
jnp
jno
adc
adc
lret
repnz
jmp
push
and
add
mov
mov
test
lock
adc
cli
mov
mov
pop
cmp
sbb
andl
loop
wbinvd
cmpsl
jne
std
mov
leave
pop
xchg
fwait
mov
mov
jns
insl
xor
push
repz
loop
in
ja
stc
mov
in
inc
pop
jge
fnstsw
mov
icebp
fildl
mov
sti
add
notl
clc
mov
fnstsw
ficoml
jns
ljmp
mov
test
test
lcall
sbb
cli
dec
sbb
arpl
add
faddl
pop
inc
repnz
mov
add
rclb
push
dec
push
push
testl
lea
dec
adcl
jg
mov
mov
push
leave
mov
push
pushf
sbb
out
call
in
cli
or
mov
test
stos
fld
rcrl
ret
or
orl
adc
and
mov
dec
orl
add
mov
insb
mov
cli
popa
pop
dec
ds
push
xchg
mov
and
lods
cld
inc
lock
leave
mov
add
dec
mov
mov
daa
repnz
insb
into
mov
mov
dec
cmpsl
dec
sub
mov
bound
pop
cld
fistl
cmpsl
roll
mov
sub
dec
lock
inc
iret
pop
and
in
sarl
push
sahf
inc
decl
mov
adc
mov
adc
lea
outsl
sbb
sbb
mov
cmpsb
push
add
testl
jmp
stc
sbbb
push
stc
stos
ret
rorl
xor
xor
xchg
ret
sti
add
dec
or
outsl
jg
push
lret
jmp
mov
shlb
mov
in
xor
jg
xchg
inc
icebp
sahf
enter
iret
loope
cwtl
jecxz
sub
push
add
ficoml
xchg
outsl
mov
sbb
scas
jne
add
cld
mov
into
add
mov
xorl
push
adc
add
sbb
out
aam
ja
lea
adc
push
mov
mov
sub
mov
aaa
jmp
add
in
inc
cli
mov
repnz
xor
cld
pop
sti
aad
dec
cltd
and
cmc
push
jnp
flds
cmp
int
mov
lea
xchg
les
jns
add
mov
imul
pop
xacquire
sub
test
js
push
dec
mov
or
and
xchg
cli
out
aaa
leave
jle
jmp
repnz
jg
pop
mov
lret
xchg
cmp
mov
sub
lret
lds
jge
out
mov
cmp
shr
push
ret
ljmp
bound
into
cmc
jecxz
loope
js
orl
inc
fistl
mov
mov
sub
in
movsb
xor
enter
shlb
sbb
sarl
add
outsl
mov
mov
pop
into
pop
adc
push
xor
in
mov
add
fs
jnp
xchg
rcr
ss
shlb
adc
sub
clc
dec
mov
add
icebp
pop
pusha
dec
mov
lcall
lods
pop
inc
ret
shl
loope
fcomip
loop
mov
rcl
arpl
jnp
add
in
nop
fisubs
mov
push
fsubs
in
sub
sbb
repz
cli
or
inc
add
jle
mov
addb
scas
repz
sub
mov
inc
dec
and
and
ficomps
sti
mov
mov
aam
or
inc
inc
cmc
jbe
and
jnp
or
clc
cmc
jb
repz
popa
jge
aaa
jns
fwait
sti
push
mov
xchg
or
or
div
test
add
dec
xorl
mov
or
fistl
add
jae
test
ss
popa
fsubl
push
push
push
inc
pusha
push
adc
dec
pop
jns
outsb
enter
jo
push
xchg
mov
shl
mov
cmc
enter
xchg
pop
bound
cltd
fnstcw
dec
add
mov
jns
out
dec
ret
lcall
mov
add
xorb
out
xlat
fldl
and
pop
sbb
popa
lods
jle
and
es
push
loopne
add
or
mov
or
add
testl
adc
movsb
imul
jecxz
int3
add
mov
and
mov
cli
addl
ljmp
testb
adc
test
popa
push
mov
imul
xor
lea
cmp
jg
lea
testb
cmp
call
pushf
ret
pop
mov
and
lea
cmpsl
fcmovnu
rcll
cmp
add
inc
into
or
mov
xor
cld
add
fs
les
push
stos
cli
lods
lods
cmc
xchg
jge
popf
push
fnstsw
or
cmp
adc
scas
push
pop
or
les
lds
and
shl
in
nop
movsb
pusha
es
fiaddl
rolb
and
pop
cmp
lcall
fcmovb
sbb
mov
fs
pusha
mov
push
mov
xor
pop
int3
jb
into
out
fnsave
push
mov
add
mov
adc
test
movsb
add
clc
xchg
dec
push
xor
dec
std
dec
fnstsw
scas
int3
sbb
or
jo
dec
je
fs
xchg
or
add
fwait
loopne
lret
lods
inc
pop
stos
pop
loopne
aaa
andl
ficoms
jp
loopne
sahf
test
add
sbb
push
xor
add
jmp
mov
mov
iret
dec
out
mov
cmp
inc
add
enter
lds
pop
lea
out
mov
test
jecxz
mov
inc
dec
fistps
stc
movsb
adc
inc
jno
xchg
lret
sbb
xchg
push
or
mov
cli
and
or
mov
jecxz
loopne
or
add
cs
add
fidivrl
cli
pusha
int3
shll
movsw
xchg
lret
in
ret
fld
popa
mov
loop
shrb
and
test
clc
push
dec
and
push
push
xor
cmpsl
xchg
std
cmc
out
xchg
fs
add
inc
sbb
in
test
mov
stos
add
dec
and
fwait
or
test
add
pop
pop
mov
mov
gs
in
aas
cmp
cmc
mov
mov
ret
sbb
cmp
pop
jmp
and
pop
ror
jne
ja
cmp
and
or
loopne
and
mov
call
jns
sbb
jmp
push
add
jmp
fs
dec
lahf
mov
sbb
xchg
movsb
mov
push
loope
mov
les
jo
or
mov
add
mov
mov
sbb
into
add
mov
cmp
clc
pop
imul
adc
enter
mov
or
outsl
pop
repz
inc
xchg
mov
adc
dec
mov
das
push
push
push
dec
dec
and
jl
sbb
fldcw
xlat
incl
mov
int
or
mov
inc
mov
hlt
shll
dec
and
push
push
dec
adc
mov
sub
mov
popa
mov
jnp
ret
pop
mov
out
out
daa
jmp
or
push
lret
sti
mov
shlb
inc
jmp
js
ja
out
mov
jne
mov
xor
cmp
loopne
jg
mov
jnp
mov
scas
xchg
lea
mov
aas
inc
int
rolb
mov
or
popa
mov
mov
cmp
push
test
ret
ds
xchg
mov
loop
mov
or
xor
jmp
cli
and
pop
int3
leave
js
cmc
cld
push
adc
mulb
sarb
adc
loope
pop
out
ret
fisttps
pop
dec
mov
jmp
fimuls
wbinvd
adc
mov
and
cmp
adc
jmp
pop
outsl
lret
and
pushf
mov
dec
js
jmp
repnz
shl
or
dec
in
js
je
adc
xchg
mov
cs
sub
enter
push
sub
sbb
sub
scas
mov
sarb
out
adc
outsl
dec
adc
jo
and
or
shll
cmpsb
jns
jp
loopne
loop
test
sub
pop
and
mov
stc
mov
cmc
clc
js
movsb
adc
mov
mov
cmp
loopne
pop
iret
mov
adc
lea
lock
fstp
xchg
inc
bound
cmp
adc
push
cld
cmp
jns
mov
jns
dec
mov
push
int3
int
cmp
xchg
rolb
mov
sbb
and
cmp
mov
cmp
sbb
stc
jnp
and
push
int3
pushf
inc
xchg
mov
sub
mov
jmp
daa
loope
xor
popa
test
dec
or
jnp
xchg
pop
mov
lret
cmp
sahf
mov
and
clc
out
lcall
and
ja
fdivrs
mov
lods
andl
mov
cmp
loope
jg
out
mov
call
out
loope
sub
sbb
ljmp
nop
xor
and
cmp
sub
ss
mov
das
test
fsubr
subl
stc
push
ljmp
adc
cmc
in
mov
cltd
shl
push
push
jge
sbb
enter
rcrl
mov
cmp
movsl
cmp
or
inc
sbb
insb
pop
popa
xor
sbb
adc
dec
stc
push
xor
adc
je
movsl
pop
mov
jmp
pop
adc
pop
repnz
adc
mov
cmp
sbb
jmp
sbb
or
aaa
mov
add
sbb
leave
xorl
jecxz
mov
sbb
dec
mov
xchg
shlb
pop
dec
leave
mov
incl
jg
outsb
jo
mov
cli
shrb
pop
mov
daa
insl
rorl
xchg
js
cld
mov
lahf
fidivrs
mov
jns
inc
sbb
mov
xchg
lret
mov
mov
adc
mov
les
pop
xlat
inc
movsl
push
leave
adc
and
iret
mov
cli
es
xlat
loopne
mov
inc
cmp
xchg
dec
pop
and
dec
sbb
inc
mov
mov
test
jns
loop
ficoml
dec
xor
mov
cmp
test
mov
xchg
sarb
mov
adc
xchg
jae
test
mov
push
gs
filds
and
sub
jns
dec
mov
jp
lret
xlat
mov
cld
dec
pop
jecxz
iret
pop
mov
daa
out
lea
std
stc
mov
jbe
xchg
mov
stos
cmc
dec
fiaddl
scas
mov
pop
xchg
fwait
add
sti
push
mov
sbb
hlt
cmpsl
popf
mov
push
add
in
aaa
scas
outsl
mov
mov
lds
mov
jnp
daa
push
rorl
adc
mov
push
jno
push
mov
leave
jge
movsb
cmp
mov
sub
sbb
ret
popf
mov
jg
mov
push
inc
lcall
or
cmp
dec
jbe
shl
dec
jb
hlt
dec
mov
addr16
mov
mov
rolb
dec
pushf
or
hlt
sbbl
aad
xchg
mov
rcr
mov
adc
mov
mov
mov
aas
popa
mov
mov
imul
test
stos
mov
push
and
xor
push
or
mov
or
add
testl
jg
dec
pop
inc
loop
add
iret
mov
or
rolb
xchg
scas
lret
je
cs
or
inc
xchg
push
sar
mov
in
aas
mov
daa
outsb
cwtl
and
repnz
and
push
cs
cltd
hlt
fwait
or
mov
ds
sub
adc
xlat
cmpsb
push
cltd
dec
sbb
call
pop
jge
sbb
sub
test
decb
inc
mov
mov
jl
push
cmp
fidivrl
loope
pop
jecxz
mov
xchg
sti
mov
testl
mov
push
test
cltd
pop
or
sti
inc
outsb
hlt
or
push
lcall
pop
add
add
roll
stc
sbb
mov
or
lahf
mov
xchg
push
leave
fcmove
mov
adc
cmp
mov
fists
and
jno
push
mov
cmp
mov
cmp
dec
or
mov
rorl
lea
lcall
out
test
and
cmpsb
sti
add
cli
cmp
sub
icebp
mov
or
mull
cs
testl
mov
stos
and
mov
out
sub
cltd
mov
subl
mov
cwtl
scas
cmp
push
ja
lea
adc
sti
negb
imul
xor
push
in
mov
sti
mov
jmp
sti
mov
pop
push
jns
mov
push
sarb
jae
xor
xchg
stc
loopne
mov
dec
inc
in
lret
daa
sti
mov
stos
inc
jo
mov
imul
hlt
add
or
rclb
add
lcall
pop
add
or
repnz
sub
cli
into
and
dec
xchg
frstor
mov
fists
mov
inc
push
addr16
loop
repnz
xchg
pop
test
mov
int
mov
out
lock
int3
push
mov
leave
push
loop
sub
ds
mov
sti
mov
or
stos
out
fbld
sub
repnz
cld
das
mov
ret
sbb
adc
mov
lret
xor
inc
push
xchg
or
pushl
mov
daa
add
or
xlat
mov
sti
es
sti
fwait
cltd
jge
int3
sti
lea
push
lods
test
jp
test
mov
xchg
add
push
jl
inc
cwtl
and
ljmp
in
xor
rolb
jns
lock
dec
inc
jle
jge
fisttpll
dec
and
dec
cltd
sbb
mov
mov
adc
cli
or
jae
xchg
fiadds
pusha
inc
loope
sub
lret
mov
mov
mov
or
outsl
pop
cli
cmp
push
and
dec
sbb
stos
mov
icebp
xchg
cmp
mov
push
mov
adcl
movsb
add
in
cwtl
cmp
lret
jle
jno
ljmp
mov
arpl
cmp
dec
fmuls
scas
data16
fsubr
add
popa
mov
lea
mov
dec
or
mov
sahf
mov
inc
shrb
pop
mov
out
aaa
ds
fwait
pusha
hlt
cli
jmp
cli
lahf
cmpsb
or
daa
imul
jb
decb
rol
xlat
xchg
mov
test
out
jne
cld
jge
sub
mov
aaa
add
ret
sub
outsb
push
pop
push
dec
cs
clc
mov
jae
cmpsb
add
jmp
push
mov
dec
inc
adc
mov
pop
and
dec
or
xchg
fcoml
mov
gs
xchg
in
mov
repnz
mov
bound
mov
stc
pusha
dec
jmp
test
sbb
out
int
dec
call
or
fsubs
leave
jbe
mov
jno
or
xchg
push
mov
pop
push
ds
inc
jmp
xchg
and
sti
dec
fldenv
ljmp
sarl
mov
mov
stos
dec
add
scas
fcmovne
lea
adc
in
mov
jns
mov
bound
add
jmp
pop
add
push
pop
ror
jge
aam
les
mov
test
mov
sbbl
jbe
sub
dec
sbb
add
popf
leave
adc
ret
cmp
imul
jmp
cmp
ljmp
insb
lods
aaa
add
push
and
int3
in
sub
pop
dec
mov
or
add
dec
and
or
dec
cmp
mov
sub
stc
dec
cmp
rol
pop
mov
cmc
outsl
bound
mov
mov
or
cli
dec
fbstp
mov
imul
mov
push
mov
and
imul
xchg
scas
mov
dec
push
lcall
xor
decb
cwtl
or
sahf
inc
cs
pop
sbb
leave
push
jbe
add
lea
or
mov
addr16
cli
lea
sbb
daa
pop
mov
js
sub
mov
adc
fimull
mov
imul
leave
jge
nop
insb
test
in
test
arpl
fldln2
cmp
dec
pop
push
push
mov
adc
mov
pop
add
data16
sahf
mov
push
xchg
push
leave
mov
mov
pop
pop
movsl
push
sbb
bound
mov
mov
sub
mov
pop
sub
or
sub
in
mov
or
int3
outsl
sub
cmp
fcomps
das
mov
out
fcmovnu
es
bound
mov
out
mov
push
mov
xchg
mov
scas
add
lea
fsubs
jne
out
stc
notb
mov
lret
scas
jle
fwait
xor
jecxz
clc
repnz
aad
aad
flds
mov
mov
imul
clc
insl
aad
out
faddp
mov
mov
mov
adc
jmp
push
fucomp
mov
dec
shll
fcompl
fwait
add
int3
aad
mov
pop
jge
pop
or
mov
mov
and
jns
dec
jmp
aad
fstpt
or
mov
mov
and
mov
jbe
mov
mov
pmullw
pop
mov
mov
std
or
in
or
cltd
insl
dec
icebp
mov
stc
mov
bound
mov
mov
loope
or
mov
fs
dec
mov
mov
xlat
mov
popf
push
mov
xchg
xchg
and
jns
dec
mov
fxch
mov
mov
and
mov
push
fldcw
jmp
rcrb
or
mov
mov
mov
imul
sbb
insl
test
bound
lea
or
mov
jl
mov
and
and
fldenv
fistpl
add
ror
sbb
mov
jle
imul
mov
aad
fmull
repnz
push
mov
dec
mov
xor
daa
loop
sti
jmp
repnz
mov
or
dec
sbb
cltd
mov
std
inc
je
fnstenv
sbb
jnp
loop
mov
mov
ret
mov
dec
in
in
ja
push
fcompl
mov
fisttps
adc
dec
pop
gs
jecxz
pop
jecxz
fistpll
mov
mov
shlb
insl
mov
mov
std
push
test
fwait
inc
dec
loope
push
mov
cmpsl
jno
mov
lds
fiadds
fstl
mov
mov
in
mov
lock
or
divb
mov
in
mov
cmp
fldenv
fistl
ficoms
mov
mov
dec
int
dec
sub
or
fscale
xchg
and
fildll
mov
das
sub
out
mov
mov
and
movsl
dec
ret
and
jns
fwait
popf
or
cld
mov
mov
and
stc
push
fnstcw
pushl
lods
cmpsl
ss
dec
fstl
jmp
push
jle
imul
mov
sub
cltd
lods
imul
imul
and
and
xor
mov
jns
mov
sub
movsb
insb
or
mov
lcall
in
cltd
inc
sub
fstpl
jne
push
ds
push
mov
mov
mov
out
mov
cmpsl
mov
jle
imul
inc
mov
pop
leave
mov
call
fmuls
lret
mov
cmp
adc
clc
xchg
and
call
lea
ja
jmp
jp
fdivrl
cmp
inc
jo
and
fistl
pop
stc
sahf
push
hlt
mov
scas
mov
subl
aas
mov
mov
sbb
jno
push
pushf
movl
call
mov
lea
jae
setl
mov
setae
jmp
xchg
iret
ljmp
es
push
dec
cmpsl
jmp
loopne
das
insb
cmp
sti
lds
push
outsb
xor
push
in
mov
test
push
adc
loopne
xor
shr
xor
jp
fcom
test
jne
fists
fs
ja
rcr
clc
rcr
sub
bt
mov
add
pusha
ror
mov
rcr
inc
pushl
mov
cmp
test
repnz
pushf
call
ror
push
pushf
cmc
not
jmp
jmp
pushl
popl
movw
pushl
ret
lea
jae
push
pushf
push
pusha
lea
jne
pusha
pusha
stos
mov
pushf
lea
jmp
pushl
movl
push
push
lea
jmp
push
movl
mov
pusha
movb
pusha
push
lea
jmp
jmp
pusha
lea
jnp
pusha
movl
pushf
movb
movl
movb
pushl
pushf
pusha
lea
jmp
push
rep
movzbw
call
pushf
mov
push
lea
je
push
test
stc
bt
sub
cmp
cmp
pushl
clc
cmp
push
call
movl
pusha
lea
jmp
stos
pushf
mov
lea
pushf
lea
call
jno
pusha
lea
jae
pushf
pusha
sub
movb
lea
call
jmp
pushf
jmp
pushf
pushf
movl
jmp
push
lock
std
std
xchg
xchg
mov
ret
jno
insl
sti
cmp
mov
pop
or
xor
cltd
sub
jge
sub
shrl
aam
pop
into
add
out
das
adc
test
push
out
popf
add
cmp
inc
out
inc
in
xchg
push
movsb
je
mov
pop
inc
push
mov
enter
fldl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sarl
pusha
mov
pushf
mov
pushf
pushf
mov
mov
pushl
ret
push
pusha
xor
call
xchg
movzbw
movl
jmp
stos
loope
ret
shlb
shrl
or
xchg
pop
inc
cwtl
lods
rcrb
mov
cli
shll
mov
test
xchg
mov
fsubrl
mov
decl
mov
das
mov
pop
or
pop
and
xchg
adc
loope
aam
js
cmp
dec
and
stos
cmp
test
sti
nop
push
cmp
mov
pop
pushf
nop
ljmp
ss
dec
inc
xchg
jp
pop
mov
mov
inc
dec
adc
loop
fdiv
add
stos
mulb
jb
cmc
cmp
pusha
pushf
call
jne
gs
xor
fs
insb
add
test
jmp
mov
add
push
push
test
push
add
jmp
jmp
cmc
or
pushf
pusha
lea
jne
xor
mov
bt
pusha
or
push
call
cmpb
jmp
movl
pushl
movw
pusha
lea
jmp
jl
xor
into
xchg
outsb
add
ret
out
repnz
repnz
jb
repnz
stos
dec
imul
addl
or
andb
or
xor
jmp
aad
and
adc
jg
mov
push
lods
xor
xchg
push
xor
lods
fiaddl
aas
xor
or
jmp
sbb
fisubl
aas
adc
cmpb
dec
sub
into
xchg
push
sub
add
dec
sti
mov
xchg
int
adc
fs
aad
xor
jbe
mov
test
add
inc
jg
mov
nop
or
push
pop
jae
sbb
ja
test
sbb
inc
dec
hlt
ja
js
inc
dec
pop
pop
push
divl
dec
mov
popa
lea
xor
outsb
add
decl
subb
pushf
xor
sub
jb
push
pusha
test
not
test
call
adc
pusha
movb
movl
pushf
lea
jmp
in
mov
call
dec
ror
adc
ret
sahf
push
pop
push
mov
int
xchg
les
lds
push
jmp
push
inc
shl
xchg
pop
nop
push
or
mov
not
sbb
stc
inc
jmp
push
cmp
sbb
push
and
jl
das
mov
xchg
inc
into
xchg
pop
and
cld
mov
addl
cmpsb
mov
dec
and
or
je
and
jb
jge
arpl
ficoms
xchg
jnp
repnz
movb
jp
cmpsb
cmp
mov
out
fisttpll
sarl
movsb
enter
inc
mov
daa
imul
aaa
adc
stos
or
pop
xor
andnps
loop
push
mov
mov
mov
mov
xor
adc
sub
or
inc
sbb
ja
sub
dec
add
adc
cmpsb
lods
test
inc
gs
mov
pop
jns
sbb
inc
dec
or
push
jle
cmpsl
adc
into
xchg
push
rorb
ret
sub
or
xchg
aaa
fwait
inc
mov
mov
or
add
push
inc
popf
dec
outsl
fstp
pop
jecxz
rolb
push
sub
xor
test
in
movsl
mov
push
je,pn
test
iret
inc
xor
and
fistl
je
repnz
push
fwait
test
push
sbb
fsubs
mov
pop
xchg
dec
mov
and
jae
pusha
jmp
lret
into
xchg
fcoml
pop
adc
in
jg
adc
pop
xor
push
cmpsb
aam
loopne
push
sahf
jmp
scas
jecxz
adc
je
xor
cmpsb
addb
xchg
mov
cmpsb
fstl
inc
mov
jne
inc
mov
test
pop
loope
sbb
dec
mov
xchg
jmp
mov
in
pop
pushf
dec
dec
repnz
xor
xchg
std
arpl
xor
lods
inc
pop
add
imul
movswl
sbb
or
mov
out
mov
xchg
andl
imul
dec
rol
daa
daa
imul
pop
mov
xor
rorl
jg
loop
mov
pop
mov
jne
sub
cwtl
popa
pop
bound
ficoms
ret
and
lea
in
lea
xor
bound
scas
push
pop
push
cmpb
xchg
cmp
mov
mov
inc
out
jb
inc
addl
fisttpl
stc
ds
lret
cmpsl
scas
cmc
cmp
out
mov
addb
aaa
cmp
jbe
mov
adc
pop
popa
popf
xor
in
loopne
mov
and
cmpsl
mov
cmp
push
pusha
lea
jae
clc
cmp
push
pushf
push
lea
ja
push
inc
call
push
lea
je
pushf
add
bt
jmp
shr
pusha
mov
pushf
adc
add
lea
mov
call
in
call
lea
ja
bt
pushf
pushf
add
sub
clc
bt
pusha
or
movb
pushf
call
add
xchg
aam
xor
pop
pushf
mov
and
push
aaa
fsub
loope
loopne
push
pop
jmp
adc
sarl
bound
icebp
and
in
mov
or
cmpsb
sub
pop
aas
and
adc
in
inc
pop
daa
call
icebp
cwtl
movb
into
xchg
stc
xor
fnsave
mov
sub
jmp
insb
push
insb
mov
xor
lods
inc
int
leave
adc
and
inc
leave
lahf
out
push
mov
out
rcrb
fstps
sub
xor
or
mov
jns
xor
sub
out
loop
mov
stos
out
xor
jecxz
xor
js
inc
mov
mov
adc
pop
jge
fnstsw
cmp
xor
loope
loopne
jno
and
lock
dec
pop
jge
push
out
jge
stc
cmp
test
xor
lea
push
call
call
call
inc
pusha
mov
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
xchg
sub
add
or
addr16
xchg
hlt
xchg
stos
popa
xor
dec
rcr
imul
decl
stos
xor
pushf
ss
shufps
testl
cltd
arpl
xor
lret
sbb
stos
inc
mov
lods
dec
in
jge
enter
inc
dec
rcr
mov
sbbl
lret
and
inc
pop
orl
pushf
xchg
xchg
mov
xchg
dec
ss
jmp
mov
sub
punpckldq
jge
adc
pop
dec
mov
clc
shll
out
orl
cmpsl
popf
pop
jae
xor
jg
cmp
cmpsb
scas
mov
daa
lret
jge
dec
lea
lods
in
xor
mov
lea
cmp
les
clc
and
jns
xchg
and
mov
jae
sbb
test
movsb
sub
imul
push
push
adc
mov
js
addr16
rcrb
and
outsl
rdmsr
int
das
xchg
pop
inc
scas
and
aaa
sbb
or
rorb
into
xchg
cmp
xchg
jbe
aaa
jbe
cmp
outsl
xor
sbb
dec
insl
test
cltd
cmp
lcall
or
icebp
add
cltd
adc
sbb
sub
mov
push
movsl
sbb
sbb
sbb
push
xchg
icebp
cwtl
fisttpll
movsl
adc
into
xchg
lods
jo
inc
int
pop
pusha
int3
int
inc
imul
or
mov
and
dec
cs
and
and
in
jmp
sarl
out
rcrl
xchg
xor
jb
iret
dec
jl
push
mov
mov
sbb
das
add
lret
into
xchg
pop
inc
inc
cmp
adc
xchg
cmp
pop
add
mov
adc
mov
xor
ret
lods
xlat
loope
sti
cmc
lods
sahf
mov
jmp
pusha
xor
xchg
lea
sub
mov
sarb
cwtl
aas
sub
pop
shlb
lret
cs
mov
or
scas
xchg
es
lods
mov
push
pop
ror
stc
inc
mul
leave
xchg
iret
orl
gs
leave
sub
in
and
xchg
jne
adc
rdmsr
insl
and
jge
repz
inc
add
pop
sub
and
into
cwtl
cmc
cmp
out
sti
inc
inc
je
call
cwtl
xchg
xchg
cmp
sbb
rolb
inc
mov
xchg
cmp
cmp
pop
pop
push
jp
sbb
aam
jb
outsb
add
pop
icebp
pusha
xchg
int3
cli
xchg
pop
mov
add
xor
ret
enter
cwtl
jb
inc
popa
and
xchg
push
clc
push
out
rcr
sub
adc
xor
ret
mov
nop
aam
dec
xor
clc
push
fistpl
popl
adc
ds
inc
and
sub
mov
dec
add
sbb
dec
pop
push
ret
lret
in
out
arpl
sub
in
movsl
add
into
xor
push
xor
cwtl
push
sub
add
jno
fisubrs
and
and
movsl
shll
rclb
rolb
cwtl
jno
out
push
mov
pop
cmp
std
stos
mov
xchg
dec
jge
addr16
test
pop
sbb
pop
adc
mov
sarl
xor
inc
jle
cld
lea
or
push
jmp
pushf
pushl
pusha
movl
jmp
test
bt
cmp
jmp
pop
dec
addr16
xchg
fistl
cmpsb
mov
push
fwait
mov
xor
movq
pop
repz
inc
call
decb
es
out
sub
ret
outsb
xchg
jo
dec
add
xor
cmpsb
or
push
jmp
and
inc
out
dec
lock
cmpsb
aam
in
jmp
pop
jb
push
enter
sub
lods
mov
mov
sbb
add
fsubp
or
gs
test
jno
jmp
inc
fstp
fisubrl
xor
sub
in
sahf
dec
inc
nop
cmpsb
int3
mov
int
js
into
xchg
cmp
xor
mov
outsb
push
les
ljmp
js
push
sub
inc
insl
mov
daa
leave
test
dec
arpl
inc
scas
mov
jecxz
mov
xchg
pop
dec
repnz
out
or
add
add
adc
das
cld
inc
cmp
and
mov
push
xchg
xchg
int3
roll
jbe
bound
test
lods
jno
in
jnp
aam
sbb
pop
sahf
add
popw
out
shlb
mov
sbb
mov
fcmovne
insl
cmpsb
aam
dec
sub
daa
test
lahf
add
xor
mov
mov
loop
jno
icebp
adc
dec
mov
in
scas
xor
leave
push
and
xor
sub
push
pushf
movw
pushl
ret
jmp
str
pushf
pushl
jmp
lea
jae
pusha
cmp
jmp
jmp
pushl
mov
pushl
xchg
cwtl
pushl
not
mov
not
lahf
pusha
lea
call
pushf
jmp
sbb
shl
pop
push
sti
cmpsl
or
cmp
pop
cs
pop
adc
loopne
adc
popa
mov
popa
or
sub
repnz
jae
subl
push
mov
pop
in
orb
mov
bound
pop
dec
cmpsl
add
stc
test
fwait
add
inc
pop
inc
jb
into
xchg
fidivs
inc
icebp
mov
push
dec
pop
enter
aad
scas
add
pop
dec
inc
fildl
dec
out
inc
jns
lds
loope
std
cmpsl
cmp
cwtl
pop
aas
scas
nop
cli
adc
jecxz
sub
adc
pushf
cld
inc
lahf
iret
stc
pusha
cmp
lcall
sbb
subl
iret
cli
xlat
cmp
mov
fisubl
mov
cli
fisubs
mov
bswap
pop
push
pusha
pushl
ret
lea
call
jmp
mov
call
pusha
movb
jmp
pushf
pushl
movl
pushl
movl
pushf
movb
push
movw
lea
jmp
add
pop
ror
xchg
negb
les
lret
es
movsl
iret
mov
push
jge
xlat
call
aam
xchg
popf
push
loop
push
cwtl
into
filds
or
in
and
sbb
jl
push
jle
push
enter
out
jb
add
arpl
xor
push
das
mov
loope
inc
mov
xchg
jle
adc
lods
xor
popf
mov
out
je
and
mov
clc
mov
add
int3
arpl
mov
iret
out
mov
mov
add
sti
push
test
and
pop
cli
pop
in
pop
movsl
pop
mov
pop
popf
jns
jl
jecxz
xchg
or
stos
xchg
xor
iret
mov
in
pushf
sub
rcrl
cmpsl
adc
jmp
sbb
pop
lcall
ret
outsl
jne
or
mov
mov
push
sbb
adc
mov
sbb
push
jecxz
lods
xchg
and
mov
mov
sub
mov
jbe
inc
pop
push
xchg
push
and
push
push
ljmp
xchg
mov
bound
and
xchg
lret
decl
ss
hlt
xchg
repnz
sub
out
nop
cmp
mov
lret
loope
mov
test
rorb
inc
push
aas
int3
lcall
push
dec
xchg
xor
shll
pop
mov
cmp
dec
or
jg
les
fwait
sub
cmpsb
sbb
mov
push
jl
lret
out
push
xor
mov
push
pop
shrl
dec
xor
mov
aam
inc
jle
jecxz
insb
repnz
std
fldcw
test
int3
movsl
push
push
imul
pushf
lods
outsb
xchg
cmp
test
mov
sbb
sbb
mov
lcall
mov
mov
das
mov
mov
repz
dec
cli
mov
loop
das
test
and
mov
add
add
pop
bsr
sbb
xor
sub
xchg
aad
cwtl
push
mov
pusha
pop
cmp
add
cwtl
std
aam
filds
fwait
adc
popa
scas
pop
cmp
mov
loop
cld
aad
dec
xor
push
pushf
mov
es
push
outsl
mov
hlt
cwtl
gs
addr16
push
insl
jl
notb
push
in
and
and
ret
ret
fmull
adc
repz
pop
pop
scas
lods
mov
out
xchg
mov
mov
daa
mov
xchg
sub
mov
jmp
stc
adc
xlat
aad
out
mov
jg
push
xlat
jo
pop
xchg
sub
sub
and
sbb
addr16
lea
stos
jecxz
cmpsl
fidivs
xor
out
lahf
movsl
cmp
js
mov
mov
sub
add
cmpb
adc
adc
ret
sar
cmp
aas
or
mov
mov
xor
scas
adc
incl
icebp
push
nop
in
ret
and
and
mov
nop
xchg
js
and
test
add
inc
mov
clc
add
out
inc
test
dec
scas
jle
jl
outsl
push
jge
add
cmp
dec
dec
outsl
cmpsl
dec
loop
sub
std
adc
jle
adc
add
adc
dec
cs
iret
lret
ret
push
adc
ret
call
repnz
daa
jns
sub
call
dec
lds
jbe
jnp
dec
pop
hlt
inc
cmp
mov
hlt
xor
sbbb
mulb
sub
jmp
das
sbb
test
stos
and
xor
aas
das
je
andl
jmp
inc
cmp
jno
pop
cwtl
es
into
jmp
mov
fs
pop
push
or
adc
mov
cmc
les
mov
cmpsl
scas
arpl
add
jae
inc
nop
pusha
ffreep
mov
sbb
mov
sbb
clc
std
adc
sub
popf
sbb
pop
icebp
lret
inc
jp
and
cmp
cmc
push
mov
mov
mov
out
aaa
movsl
test
lret
cli
mov
lock
push
pop
popa
mov
fmuls
les
mov
repz
add
shr
mov
rcrb
and
push
inc
adc
add
into
xchg
fadds
push
loope
mov
mov
and
push
add
setb
jge
iret
jg
cmp
add
jne
cmp
adc
mov
fstp
ficoms
ds
sbb
cltd
in
mov
inc
rcrb
daa
push
or
add
cld
out
aad
mov
jbe
cmc
sahf
pop
cmc
loop
pop
insb
pop
pusha
rorl
mov
or
pop
add
xor
je
pop
jp
inc
sbb
decl
aaa
hlt
test
push
push
dec
out
mov
das
insl
bound
popa
sbb
scas
jnp
xchg
ret
xor
cmp
adc
sbb
pop
sub
pop
xlat
fisubl
or
cltd
sub
add
mov
fs
mov
jl
xchg
sub
xchg
push
cltd
cwtl
and
jbe
jge
gs
lea
sbb
sbb
fdivr
bound
jno
bound
jle
das
and
adc
testw
leave
sbb
xchg
mov
mov
enter
out
push
test
mov
int
xor
sti
scas
das
ret
call
cmp
enter
push
into
jbe
jle
sar
inc
test
cmp
jb
push
sbb
pop
dec
fisttpll
scas
mov
inc
add
fs
or
sub
cmpb
sub
adc
cmp
fscale
push
setp
shld
push
das
adc
cmc
lea
mov
pusha
test
jmp
icebp
ljmp
pop
test
or
push
fcoms
or
cmp
ds
xchg
and
cs
insb
outsl
in
cmp
jae
cmp
aad
push
out
mov
xchg
push
movsl
push
rclb
mov
jecxz
mov
and
scas
cmc
mov
pop
push
cld
das
into
imul
jo
mov
inc
das
shr
push
and
add
cmp
mov
test
dec
add
adc
je
mov
fstl
jae
data16
aas
adc
xor
xor
loope
cmpsl
push
int3
test
ss
push
imul
mov
mov
and
in
xchg
aas
mov
fs
jae
cltd
mov
inc
jge,pt
into
push
dec
dec
rorl
ljmp
and
lahf
cld
repnz
xor
and
xchg
mov
cltd
sub
test
cmp
xchg
xchg
lods
pop
in
stc
popf
aam
push
cmpsl
xlat
xor
pop
int3
test
xchg
stos
fs
clc
out
inc
ljmp
dec
cmp
call
movl
lahf
movzbl
movsbl
lea
lea
mov
push
movl
pushf
push
jmp
mov
xchg
add
test
xor
xchg
stos
lock
daa
loop
ja
idivb
push
cmpsl
sbb
or
mov
sub
icebp
xchg
xor
fwait
xor
loop
f2xm1
jmp
jo
std
ss
jmp
aaa
sbb
mov
dec
cmc
mov
add
stc
rorb
or
ljmp
pop
sahf
sub
ljmp
cmpsl
rcll
mov
cld
adc
inc
in
aaa
or
jns
lds
loopne
ror
clc
not
bt
clc
rol
call
pusha
mov
lea
jae
jo
push
cmp
jmp
pop
push
rcr
xchg
sbb
int3
xor
mov
arpl
add
idivb
mov
push
jns
xor
pop
add
jl
xor
add
dec
cmp
fdivl
jo,pt
popa
sub
lcall
lods
add
fxch
xchg
pop
dec
push
mov
sub
and
xchg
xchg
mov
lods
icebp
sub
sub
pop
xchg
sub
in
je
inc
adc
mov
pusha
leave
jge
ja
sbb
xor
add
popf
jp
mov
pushl
xor
sbbb
repz
sbb
xchg
outsb
orl
mov
stc
clc
ret
pop
loope
xchg
sub
mov
movsl
fcom
adc
and
js
mov
out
xchg
jle
loop
int
lock
std
std
adcb
sub
dec
cmc
jne
leave
jg
and
add
ss
outsl
mov
in
mov
jg
pop
pop
roll
fsubrl
adc
test
insl
nop
shll
hlt
inc
push
jecxz
xchg
push
cmpsb
movsl
xor
pop
mov
jmp
and
jo
jmp
adc
inc
not
lea
pushf
pushf
mov
movl
call
imul
gs
xor
cs
insb
add
ret
ror
bts
movl
bt
clc
rol
mov
test
push
cmp
pusha
pushf
lea
jbe
rcr
xor
sub
adc
movsbw
bt
mov
xadd
shr
mov
pushf
neg
add
call
adc
push
lea
jae
pushf
jmp
inc
fsubrl
lea
je
movzbl
bswap
mov
bswap
movsbw
mov
cwtl
lea
pusha
pushf
push
mov
mov
movsbw
bswap
push
pushl
popl
setnp
pushl
cwtl
pushf
mov
movzbl
movb
seto
movl
jmp
pushf
jmp
add
inc
js
je
jb
arpl
jae
sbb
fmul
xchg
mov
sub
stos
pop
cmp
and
sti
push
mov
pop
or
movl
add
adc
inc
insl
in
les
mov
xchg
sbb
xchg
pop
pushf
es
in
mov
dec
inc
pop
sub
xor
sub
incl
jge
mov
fdivrs
enter
ret
call
mov
call
outsb
adc
shl
mov
nop
int
dec
shll
cmpl
add
popf
cmp
sarl
sub
outsb
xlat
rorl
inc
dec
xor
xchg
cmp
out
arpl
neg
into
xchg
pop
pop
dec
out
xchg
pop
fsubrs
popf
jg,pt
mov
push
xchg
push
fcomps
std
or
orps
and
cli
push
sbb
jb
in
mov
scas
pop
push
fs
and
js
lods
jp
push
cmp
into
xchg
xor
mov
xchg
dec
dec
lds
ret
mov
dec
and
xor
push
push
scas
addr16
lret
sub
and
ljmp
mov
rclb
inc
pop
mov
mov
fwait
adc
aad
aad
mov
sbb
mov
outsb
das
mov
xor
xor
or
jmp
addr16
mov
ret
ret
pusha
pop
push
mov
popa
pop
pushf
lea
mov
icebp
push
mov
or
sbb
scas
mov
and
adc
fsts
dec
mov
test
cwtl
cld
ficoms
iret
adc
xchg
and
cs
pop
pushf
push
arpl
xchg
fucomp
mov
mov
sub
add
mov
xchg
dec
aad
ljmp
dec
xchg
loopne
enter
sbb
cltd
xchg
push
pushl
push
addr16
fwait
hlt
mov
push
out
lea
jae
loopne
mov
aaa
jmp
aas
jnp
aad
mov
push
mov
push
mov
cmpsb
ss
mov
lret
and
lret
cmp
cmovbe
loop
imul
insb
gs
sub
add
mov
adc
adc
adc
mov
mov
mov
out
xrelease
xorl
inc
jp
sub
mov
add
sar
ret
mov
pop
pushf
lea
jne
pusha
push
pushl
stos
movb
pushf
mov
pushl
lea
jmp
call
mov
lods
mov
sarb
int3
xchg
mov
lahf
out
mov
test
aad
sbb
and
aad
test
jecxz
sub
ds
leave
jns
lahf
push
inc
dec
mov
and
sub
into
mov
repz
cmpsl
adc
aas
out
or
sub
nop
cmpsb
pop
xor
int3
mov
mov
and
fstpl
mov
xchg
pop
add
mov
or
out
insb
sbb
jns
xchg
insb
jne
xchg
adc
pop
shl
lea
repz
sub
mov
pushf
mov
in
cli
jbe
out
jo
cmp
fs
in
dec
popf
cmp
lods
jecxz
test
notb
push
sti
or
movsl
add
jne
into
xchg
call
cmp
inc
cmp
mov
push
popf
jno
rolb
pop
std
mov
loop
xor
test
insl
movsb
out
pop
js
add
pop
push
pop
xchg
xchg
cmp
push
xchg
mov
inc
pop
popf
mov
mov
mov
addl
cmpb
addl
test
rorl
mov
lea
addb
xchg
test
js
int3
jle
pusha
sub
mov
cmp
stc
cmp
repnz
pushf
lea
jne
shl
or
mov
shrd
cmp
pusha
sub
stc
rcl
neg
lea
jmp
call
je
mov
lea
push
push
push
jmp
stc
mov
or
movw
push
pushf
lea
jne
shld
or
btr
rol
mov
jmp
add
jmp
mov
xchg
and
mov
ret
xchg
push
fbld
orl
push
fisubrl
fwait
xlat
cli
daa
hlt
mov
aas
mov
fidivs
cmp
and
push
jbe
xchg
imul
leave
xchg
ljmp
pusha
movl
movb
pushf
movb
pushf
movl
push
pushl
lea
jmp
cmc
call
hlt
pop
jp
into
xchg
jmp
lret
es
ret
lret
sub
inc
xor
add
jmp
sbbl
fwait
and
jl
dec
jno
jne
imul
in
loop
pop
mov
and
or
mov
jmp
fldln2
sub
dec
test
in
mov
dec
jns
mov
cli
testb
push
push
cmp
out
lds
jnp
jmp
jno
lock
je
out
out
pop
inc
fistl
mov
int3
adc
cld
inc
mov
call
push
movl
pushf
movl
mov
pushf
lea
jmp
jmp
test
test
cmp
cmp
call
cmp
movb
lea
jae
sub
xor
setg
mov
not
setno
mov
xor
movzbw
btc
not
mov
pusha
pushf
call
pusha
jmp
lahf
sti
loop
xchg
stos
imull
inc
sbb
sbb
or
test
sub
into
dec
pop
ucomiss
inc
lcall
cs
xchg
rcl
popa
or
xchg
jecxz
add
or
add
mov
mov
arpl
lods
mov
aas
mov
push
cmp
or
and
jno
pusha
adc
pusha
lea
jmp
jmp
lea
je
call
aaa
fdiv
jecxz
xchg
jmp
fwait
mov
xchg
cmp
andb
push
xor
sub
jp
int
or
stos
sub
mov
dec
inc
add
dec
mov
fst
clc
hlt
lret
jge
xchg
pop
in
cltd
sbb
fwait
data16
push
adc
dec
or
ret
rorl
lock
fcomip
imul
pop
add
lods
mov
roll
rolb
pop
icebp
sbb
inc
cmp
movsb
sbb
ss
xchg
and
aam
fcomps
pop
sti
add
js
mov
adc
xchg
sti
lds
and
lea
jmp
rorl
mov
jns
fmuls
cltd
adc
ljmp
das
hlt
pop
ss
sbb
loopnew
sub
cmp
sbb
mov
stc
negb
les
test
and
movzbw
push
movzbw
not
lea
jmp
push
sbb
xor
mov
je
push
sbb
and
xor
pop
mov
loopne
dec
cmp
jae
loop
dec
test
jl
mov
push
lock
push
cmpsb
jle
xchg
mov
xchg
add
mov
push
xchg
insl
adc
cmp
mov
popf
test
jmp
inc
push
or
inc
das
fwait
iret
out
mov
fdivl
mov
cmpsb
xchg
insb
dec
xor
jb
mov
dec
icebp
lds
loopne
dec
movsl
in
xchg
imul
adc
push
xchg
xor
outsl
dec
inc
add
jp
pop
adc
or
idiv
aad
test
mov
cwtl
jecxz
es
scas
or
into
xchg
pop
fildl
in
sti
into
xchg
sub
orb
dec
inc
add
adc
repz
ret
aaa
call
in
mov
or
mov
iret
pop
mov
xchg
ds
pop
adc
inc
xchg
cmpl
pop
sbb
jo
cmp
mov
xor
or
sbb
dec
loope
sub
xor
fs
stos
cmpsl
jns
and
cltd
mov
out
lods
xor
lock
mov
ret
inc
inc
lret
jecxz
mov
stc
dec
ficomps
pop
and
mov
cmp
aad
je
ds
inc
ja
dec
and
jge
inc
fistpll
aam
imulb
add
rcl
fldl
pop
int3
jbe
jo
ljmp
dec
arpl
lods
shrl
and
loope
loop
iret
arpl
jle
in
in
and
loopne
lock
adc
inc
insb
data16
xor
add
push
cwtl
movsb
and
test
push
add
call
mov
movsbl
mov
mov
mov
jmp
dec
adc
shl
pop
jo
adc
arpl
stos
js
push
fs
pop
in
into
sbb
mov
fdiv
popf
push
mov
repz
sbb
add
mov
or
ljmp
je
nop
in
mov
int
jmp
fistl
push
push
jl
push
out
ss
mov
xlat
cwtl
je
mov
dec
mov
push
stos
push
shll
je
bound
mov
out
push
jns
js
cwtl
xchg
sub
aam
pop
shlb
es
add
not
inc
sub
jmp
call
lea
jbe
rcr
jmp
das
out
out
xchg
jg
mov
inc
outsb
gs
jo
cli
adc
jne
dec
shrl
je
xchg
cwtl
adc
imul
daa
je
std
mov
mov
pop
or
jge
push
repz
or
fucomip
out
aad
lcall
cmpb
data16
xchg
aam
imul
push
pop
mov
stos
xchg
jmp
lret
out
lret
rorl
xor
pop
pop
cmp
sbb
loopne
dec
sub
data16
negl
movsl
adc
adc
cmp
push
add
push
sbb
add
or
daa
xor
pushf
sub
rorl
dec
jno
cld
push
arpl
xor
mov
pushf
aam
mov
and
loop
jmp
cwtl
sbb
pop
push
adc
push
sub
lret
pop
sbb
jnp
push
popa
cmp
pop
mov
or
fdiv
cwtl
jp
mov
jnp
xchg
fstl
mov
aad
scas
out
bound
hlt
mov
push
jo
aad
mov
dec
lret
mov
sbb
cmp
pop
loop
push
and
sub
add
mov
cmpsl
leave
adc
roll
inc
lods
push
jl
int
lods
test
enter
mov
mov
dec
add
gs
mov
daa
mov
fcomi
mov
mov
mov
scas
scas
sbb
xorl
or
subl
dec
cmpsb
pop
stos
jae
mov
xor
negl
push
test
setne
xor
test
jmp
mov
sub
xlat
push
lcall
sbb
dec
cmc
cmp
cmp
sub
dec
lock
into
xchg
dec
fisubl
mov
faddl
insb
adc
xchg
popa
sub
dec
sbb
adc
mov
sar
and
pop
popa
mov
aas
mov
mov
jg
jl
lcall
adc
insl
pop
mov
cwtl
adc
mov
lea
pop
test
cmp
sub
test
or
push
pusha
pusha
pushl
lea
je
pusha
pushf
jmp
mov
not
pop
pushf
pushf
mov
pushl
ret
add
xchg
cmp
enter
mov
hlt
pop
inc
and
lds
leave
lods
lods
sarl
sbb
shl
mov
mov
xchg
in
mov
mov
clc
cmp
dec
lret
pushf
in
sti
idiv
cs
rcr
sub
cmp
xor
bound
repz
mul
and
scas
ret
cmp
scas
ret
fwait
mov
inc
mov
pop
or
into
xchg
insl
icebp
int
std
xor
lret
adc
dec
movsb
fwait
in
insl
mov
icebp
or
rcr
push
test
jle
jge
fcmove
xchg
mov
fdiv
or
cmp
dec
scas
es
or
divb
fdivs
loop
repz
pop
sub
xchg
clc
popf
push
rorl
sbb
mov
enter
sarl
jecxz
adc
pushf
jmp
sbb
in
mov
jle
mov
cli
std
ds
or
xchg
imul
and
lret
sub
push
shll
pop
int3
dec
mov
cmp
pop
or
mov
ss
cld
inc
jmp
jmp
stos
push
and
inc
fsubrl
mov
nop
xchg
xchg
lret
xchg
or
les
jle
jg
mov
xor
out
xor
into
jo
mov
and
out
mov
int
lea
dec
dec
pop
setae
inc
push
mov
call
lea
jae
push
pushl
clc
push
add
push
movw
mov
pushl
pushf
lea
jmp
jmp
add
mov
bt
pushl
cmp
movzwl
pusha
mov
stc
clc
mov
call
call
push
test
call
aad
cltd
jmp
xchg
sub
call
cs
and
or
loopne
ja
loop
dec
ss
aad
lock
xchg
inc
loop
xchg
lcall
sbb
add
jo
push
jmp
stos
iret
int
enter
sub
aaa
dec
das
xchg
cs
xlat
in
jmp
shl
pop
icebp
lahf
popf
testb
imul
pushf
inc
xor
call
mov
loope,pt
jo
xor
mov
pop
ljmp
inc
fdivr
xchg
xchg
sar
pop
mov
clc
pushf
bt
shr
mov
cmc
xchg
neg
mov
test
stc
cmp
pushf
sub
pushf
pushf
movl
pushf
rep
not
lea
mov
jmp
pushl
pushf
stos
pushl
movb
push
pushf
lea
jmp
ljmp
lods
add
mov
xchg
lods
fnsave
cmp
pop
inc
add
add
lret
cmp
mov
jb
cmp
inc
movsb
and
and
dec
shrl
rcr
push
loopne
aad
lret
shll
in
mov
mov
subl
inc
push
sub
outsb
fwait
andb
add
sub
push
ljmp
add
jnp
push
xor
jnp
out
iret
inc
xor
sub
insl
rcrl
ficoms
push
sarb
stc
js
mov
movb
mov
push
push
lea
jmp
push
mov
movsbw
mov
bswap
pop
pushf
movb
pushl
ret
push
jmp
lea
ja
pushf
jmp
and
pusha
add
pushf
pushf
pushf
pushf
lea
jmp
pushl
mov
movw
pusha
mov
pushl
ret
cmc
cmp
push
jmp
lea
call
call
not
not
pushf
inc
jmp
jmp
mov
pusha
pushf
lea
jmp
stc
mov
bt
call
pusha
movl
call
bsr
shl
bsr
add
jmp
jb
add
into
xchg
adc
xor
and
cmc
or
xchg
addr16
push
pusha
or
outsb
inc
and
into
aad
inc
icebp
imul
pusha
int
lds
pop
gs
fldenv
mov
leave
leave
mov
jno
out
out
ljmp
add
int
jle
imul
in
jp
dec
aad
adc
popf
add
popa
in
ja
inc
out
into
xchg
imul
notl
mov
call
ret
inc
shl
outsl
push
jne
and
push
fldl
jge
dec
mov
mov
repnz
jo
scas
mov
jge
pop
loope
xchg
popf
xchg
jnp
icebp
jge
mov
sub
imul
push
mov
fldenv
call
xchg
and
mov
loope
xchg
add
mov
and
mov
cwtl
das
cmp
xor
cmp
pusha
xchg
into
sub
sub
push
add
dec
push
xor
push
sub
dec
fwait
jo
xlat
daa
in
pop
and
mov
xlat
mov
xor
popf
inc
and
lcall
mov
push
mov
iret
hlt
movsb
add
pop
add
cmp
xor
mov
addb
add
push
xlat
jg
inc
scas
jb
test
movsb
loopne
ret
arpl
mov
icebp
adc
movsb
inc
mov
cmp
xchg
sub
or
sbb
negb
and
cmp
sbb
sbb
pop
pop
sub
scas
sub
mov
dec
sbb
jo
xor
push
jmp
sbb
or
hlt
lea
adc
and
stc
stc
mov
cmp
popf
xor
adc
fstl
cmp
fimull
lock
mov
lea
call
js
pusha
movl
lea
jae
cmp
pushf
bt
sub
call
xchg
aam
movzbw
mov
dec
shl
test
shl
mov
clc
mov
neg
stc
stc
shl
mov
test
sub
pushl
jmp
orl
lock
xchg
shr
mov
loop
pop
add
or
pop
push
movsl
sbb
cmp
push
rolb
repz
scas
loop
mov
xor
in
jecxz
xchg
mov
fbld
jle
jl
inc
sub
or
aam
sbb
sbb
addr16
mov
mov
bound
cmp
gs
inc
js
cli
cmpsl
push
fadds
fmuls
orl
cltd
xor
les
add
in
jae
les
dec
inc
dec
dec
mov
push
nop
mull
xchg
inc
jb
addr16
pop
fcoms
mov
pop
stc
int3
bound
jae
mov
cmp
into
xchg
pop
cmpsl
dec
jp
pop
es
test
test
pop
sti
aaa
mov
js
in
adc
outsb
jne
push
xchg
add
sub
mov
imul
in
mov
dec
ss
aas
lret
aaa
push
aas
dec
hlt
xor
mov
test
jne
add
adc
lcall
mov
jb
dec
into
inc
pop
stc
xchg
int3
fwait
arpl
scas
adc
or
fmuls
popa
push
mov
subl
inc
cmp
lcall
sbb
add
ds
xchg
popa
or
lret
fstpl
popa
mov
fmull
xchg
mov
xchg
pop
in
mov
jle
and
push
adc
mov
pushf
fimuls
call
daa
sub
aam
in
mov
loop
xor
add
add
loopne
roll
cmpb
gs
mov
dec
dec
lahf
in
daa
cmpxchg
stos
dec
inc
scas
fists
ja
popf
mov
push
ret
add
jmp
adc
add
jge
xchg
sbb
pop
adc
pop
mov
mov
pop
lods
push
push
mov
gs
lret
xchg
push
imul
dec
stos
fistl
dec
pop
mov
mov
sbb
push
cmp
or
sbb
fildl
shl
pop
xchg
ficoms
hlt
jmp
cmpsb
lea
hlt
into
xchg
push
mov
or
cmp
sti
jmp
daa
or
add
inc
dec
pop
daa
jge
inc
enter
jmp
lea
daa
sarb
les
adc
cmp
enter
ss
rorb
mov
xor
xor
inc
data16
movsl
lea
cmp
mov
cmpb
ret
mov
dec
inc
mov
dec
shrl
pop
mov
jo
sarl
scas
inc
in
xchg
sbb
xor
jl
lods
xor
xor
inc
xchg
push
cmpsl
pushf
call
jmp
cmp
pushl
pushf
pushf
lea
ja
setg
setb
pusha
mov
call
jmp
pusha
movl
pushf
pushf
pushl
movw
lea
jmp
lods
call
sbb
xor
cmp
out
or
push
cld
sbb
pop
dec
pop
lret
xor
jmp
inc
jns
mov
test
mov
lahf
and
cvtps2pi
mov
pop
pop
jmp
and
xor
pop
cli
cmpsb
inc
je
adc
add
out
push
add
add
add
add
add
add
add
push
add
add
add
add
lods
add
xorb
sahf
mov
or
mov
sbb
inc
dec
into
jle
mov
xlat
jmp
pop
sbb
test
mov
in
xor
imul
insb
inc
xor
xchg
jnp
dec
dec
sti
test
sub
mov
lret
sub
data16
pop
scas
iret
imul
adc
cmp
andb
push
in
aam
lods
jnp
mov
int3
popf
pop
jl
cli
std
push
ss
cmp
fs
cmpsb
xor
add
std
sub
sub
pop
movsl
lock
ss
pop
imul
rcl
movsl
and
mov
cmp
fsubrl
test
setp
mov
cld
mov
loop
jns
ja
mov
sti
xchg
pop
fadd
xor
jbe
sub
inc
or
and
xor
ficomps
sub
pop
jle
movsb
je
sbb
das
inc
std
cmp
push
rcr
popa
pop
inc
and
and
jbe
and
lods
and
lret
xor
mov
add
frstor
iret
mov
adc
fsubl
cwtl
dec
divl
sub
insl
xchg
nop
jae
fcoms
bswap
jno
add
sub
int
mov
lock
or
pop
or
aaa
das
jp
hlt
leave
adc
ficompl
bswap
pop
popa
sub
sbb
lock
ss
mov
cltd
rcr
dec
lcall
xchg
xchg
sub
dec
push
inc
pop
pop
das
stos
pop
dec
jle
dec
mov
xchg
loop
ljmp
jecxz
adc
mov
data16
lcall
mov
mov
stc
stc
repz
xchg
hlt
fld
cltd
pushf
sub
or
dec
xchg
cmc
stos
dec
add
rcrl
jbe
xor
sub
inc
xchg
fbstp
scas
mov
push
int
fdivl
cmp
pusha
aaa
jns
test
xchg
xor
sub
daa
stc
inc
push
mov
pushf
mov
rcl
cmp
fdivp
ja
and
xor
filds
rcll
push
mov
jle
xor
mov
aad
fcomip
add
mov
xor
das
lret
loopne
sahf
sbb
and
and
imul
out
ficoml
mov
add
stos
xor
or
test
and
lods
in
push
inc
popa
int
fldln2
push
adc
fcmovne
xlat
jno
addr16
cmpsl
into
fbstp
xor
sbb
or
add
mov
scas
and
rorb
push
dec
xor
xchg
nop
push
daa
push
mov
into
add
dec
cmc
out
xchg
cmc
stc
rcl
hlt
or
mov
xchg
in
dec
cwtl
shll
loop
iret
dec
jp
rorl
stc
mov
divl
dec
add
lahf
mov
cli
cmp
add
push
ret
clc
fisubrs
arpl
popf
dec
fwait
mov
fs
imul
cmp
pop
or
push
jl
pusha
and
nop
or
mov
adc
xchg
lret
push
mov
mov
pop
addr16
mov
lahf
and
fisubrs
mov
lret
lcall
or
add
leave
xchg
jnp
mov
xchg
mull
mov
mov
lea
or
shl
jg
test
add
sbb
fldz
mov
shrl
mov
shll
push
or
and
popf
push
stc
js
or
ret
mov
jno
mov
xor
ljmp
pop
xchg
jge
fildl
call
mov
xchg
mov
arpl
mov
ss
daa
fcoml
imul
int3
jno
repnz
enter
add
fmull
loopne
test
push
enter
pop
jecxz
push
nop
xchg
jns
jg
mov
movsl
lret
or
cld
push
jno
sti
out
in
pop
inc
pop
je
mov
cwtl
test
mov
fst
xchg
sbbb
jp
sub
dec
int
lahf
sbbl
mov
pop
inc
iret
imul
in
scas
jne
mov
into
inc
test
aad
pushf
adc
jl
push
sbb
adc
add
cs
add
mov
mov
xor
loope
inc
sub
add
jb
dec
andl
sti
stc
mov
or
shll
dec
push
mov
leave
add
push
fsubr
xchg
sbb
je
push
out
ss
jbe
aad
movsb
xchg
dec
and
in
sahf
dec
bswap
push
inc
pop
push
mov
cwtl
mov
mov
les
sahf
pop
arpl
pushf
pusha
lret
cli
xor
cmp
push
rep
addb
aam
pushf
call
stc
sbb
cmp
call
xorl
lret
jo
lahf
and
push
push
dec
pop
sbb
lods
mov
imul
push
dec
rolb
inc
mov
jne
ljmp
test
ja
mov
icebp
lds
push
jl
jns
xchg
scas
cmp
or
xorb
adcb
mov
mov
in
pop
out
mov
jns
and
movsb
cmc
lea
adc
ror
mov
repz
mov
add
add
add
jnp
push
in
sbb
jge
dec
or
movsb
sub
inc
jecxz
push
shrl
mov
mov
jno
call
push
mov
out
xchg
sub
adc
testl
subb
repz
les
fdivl
jmp
mov
scas
mov
sub
dec
jge
cmp
mov
jg
test
ljmp
dec
cmp
pushf
cli
ds
stos
sbb
mov
stos
aas
dec
rorb
dec
mov
rcll
stos
and
out
test
pushf
or
mov
xchg
adc
out
cli
shrl
into
mov
push
shlb
jb
enter
andl
inc
push
jecxz
or
cwtl
inc
pavgb
xchg
or
adc
inc
mov
inc
and
fwait
inc
inc
je
ljmp
inc
jp
push
pushf
loopne
das
cli
and
scas
lcall
cmpb
push
shll
cli
int
popf
push
and
push
fidivrl
movsl
out
in
xchg
push
nop
push
adc
jmp
and
sar
std
fisttps
cmp
out
push
aas
sbb
pop
outsl
hlt
jmp
outsl
hlt
stos
jnp
fs
pop
test
repz
add
ljmp
std
bnd
in
fisttpll
push
mov
ror
pop
cmp
pop
negb
imul
push
ss
shlb
and
dec
sahf
pop
xor
or
daa
mov
and
aad
lock
adc
andb
ds
insb
in
mov
aam
gs
cltd
sub
push
fmuls
inc
cwtl
daa
icebp
dec
lds
stc
cmp
or
leave
cmp
or
incb
test
cltd
out
lret
sbb
ja
or
mov
negb
xchg
jno
cmpsb
and
jecxz
xor
lahf
aad
aas
inc
and
loope
xchg
daa
adc
adc
sub
or
out
repz
dec
sub
popa
addr16
lret
int3
cwtl
nop
xor
in
push
mov
xor
mov
and
xchg
int
adc
rclb
shlb
insl
inc
push
and
gs
lds
jmp
daa
fnsave
hlt
sub
inc
mov
xor
lods
and
outsb
push
sbb
int
testb
aas
popa
fwait
mov
out
push
loopne
xlat
das
pop
sti
and
imul
stos
jnp
jl
jnp
out
enter
jne
cltd
cltd
dec
lahf
jecxz
mov
ds
add
cmpsl
flds
pop
sub
out
mov
and
js
xchg
mov
add
dec
scas
cltd
fs
inc
mov
xor
ljmp
inc
fwait
mov
insb
push
int3
jnp
aam
lret
out
inc
divl
leave
pushf
aas
inc
xor
shl
mov
test
popa
je
popa
sub
mov
addb
orb
inc
rcr
push
adc
pop
inc
push
sub
push
std
mov
int3
sbb
mov
and
jmp
iret
xchg
mov
adc
outsl
fcmovu
sbb
adc
nop
xor
shl
mov
int
push
cmp
int
lods
aaa
inc
aam
and
or
xor
push
lcall
mov
cmp
out
jae,pn
and
mov
sahf
out
mov
inc
aad
mov
pop
inc
push
stc
xchg
fucomip
pop
fldt
das
dec
pop
sub
push
sbb
xchg
pop
nop
popf
mov
cvttps2pi
mov
fiaddl
pop
cmp
jb
pop
popa
adc
in
je
pop
inc
popa
xor
int
lcall
call
or
addr16
sub
mov
push
mov
push
in
jle
and
pop
xor
lret
xchg
and
mov
out
jle
mov
cwtl
jmp
and
sub
call
mov
pushf
xor
stc
push
mov
cltd
jge
fisubl
aad
les
jbe
rcrl
out
fisubrl
sub
mov
in
in
jp
pop
mov
out
lock
cmp
sbb
cmc
lret
inc
popa
add
push
adc
xchg
inc
ret
test
test
test
stc
sbb
ja
dec
push
push
into
add
or
xor
stc
jge
test
mov
xchg
pop
cli
in
stc
notl
adc
andl
push
push
jae
or
sbb
or
inc
in
inc
cmp
inc
jo
lods
or
fs
mov
add
add
cmp
mov
xor
mov
repnz
push
lret
add
pop
cltd
push
ds
insb
lret
cld
sahf
cltd
and
cmp
cwtl
repz
sbbb
pop
andb
xchg
inc
shrl
orl
push
or
ficomps
cmpsb
adc
aam
push
inc
pop
xchg
xchg
xchg
dec
sbb
mov
xor
inc
test
jle
or
addr16
mov
sub
shl
negb
xor
movb
ds
mov
inc
cmp
xchg
loopne
inc
push
out
scas
out
movsl
mov
shrb
orl
xor
in
push
or
add
mov
cmp
fisubrl
and
xchg
xchg
jne
push
adc
inc
sti
dec
mov
stos
mov
cs
mov
and
xchg
pop
dec
es
andl
add
filds
add
add
push
ror
movb
pushf
pushf
inc
jmp
lea
ja
pusha
sub
adc
clc
push
sub
add
shr
movsbl
sub
mov
shl
push
mov
bt
bt
repnz
jmp
push
pusha
call
out
xchg
iret
xchg
testl
mov
pop
mov
cltd
pop
lret
add
sti
in
rcr
push
fwait
cltd
gs
push
js
cmp
call
ss
es
mov
xchg
mov
insl
mov
aad
loopne
and
pop
outsl
add
out
in
lods
jge
daa
push
or
dec
or
fcompl
mov
push
rsqrtps
jo
loop
mov
xor
and
xchg
lret
mov
jp
jno
stc
mov
jns,pt
cmc
mov
scas
push
pop
repnz
xchg
addl
shrl
repnz
pop
mov
push
sbb
xlat
push
data16
sbb
jae
lock
int
cwtl
out
jne
mov
iret
xchg
xor
enter
sbb
mov
pop
adc
push
data16
repnz
fwait
out
data16
lock
xchg
scas
fistpll
xor
sub
test
mull
insb
cmpl
ljmp
ss
cld
into
mov
sbb
fwait
pop
mov
das
popa
jg
sbb
inc
js
push
daa
incb
mov
ret
dec
fs
xchg
cmp
or
stc
ja
lret
xchg
ja
cltd
xchg
icebp
clc
ret
das
push
data16
aad
loope
and
imul
scas
stos
jb
push
adc
jo
gs
stc
pop
add
jg
aas
pop
out
and
shrb
sti
add
inc
xlat
mov
fcompl
mov
mov
sarb
js
pop
push
sbb
aam
ss
lahf
into
cld
jne
das
lret
fcomps
cmpsb
das
bound
mov
cld
inc
mov
std
in
imul
and
test
movb
add
jl
shr
jmp
pushf
call
pusha
movl
mov
movl
pusha
movw
movb
lea
jmp
sub
xchg
nopl
in
add
mov
sub
addb
push
sub
repz
dec
cmp
push
adc
pop
push
mov
mov
in
adc
mov
lods
ljmp
and
sub
and
arpl
xor
dec
inc
xchg
or
jae
bsf
ror
mov
bts
mov
ror
shld
clc
adc
mov
clc
cmp
sub
bt
repnz
push
call
bswap
not
mov
lea
not
pop
jmp
rcrl
mov
repnz
mov
inc
in
or
scas
in
sbb
aas
xchg
and
inc
loope
mov
push
and
ret
cwtl
xor
xlat
aaa
sbb
pop
repnz
sahf
pop
in
xchg
imul
std
adc
push
lods
adc
lahf
inc
out
add
lret
scas
shll
or
ljmp
pop
stos
push
mov
jmp
pop
sub
movsl
sbb
pop
xchg
and
inc
popa
inc
cmpsl
repz
rep
push
outsb
ret
ljmp
fs
fnstcw
gs
sbbb
inc
push
arpl
pop
pop
sub
or
mov
sbb
in
fiaddl
push
or
cmpsl
pop
cmp
inc
dec
insb
dec
mov
cmp
imul
addr16
push
mov
shlb
and
iret
xchg
pop
dec
fs
std
dec
andnps
out
in
mov
aas
push
sbb
dec
xlat
andl
scas
xchg
incl
shlb
addr16
out
adc
pop
pusha
mov
aas
push
xchg
mov
ret
mov
outsl
loope
repz
mov
dec
icebp
cwtl
dec
outsb
mov
iret
xchg
xor
mov
loope
out
cmp
out
jae
and
cmpsb
mov
aas
push
fdivs
sbb
lret
dec
cmpsl
jp
lcall
cmpsb
cli
je
push
das
les
into
and
mov
jnp
mov
lret
out
xchg
cmp
test
inc
and
seto
call
jmp
movb
pushf
pusha
lea
jbe
cmp
sub
dec
mov
shl
shld
mov
bt
inc
sar
add
sbb
rol
shr
neg
rcl
mov
cmc
bt
add
jmp
jmp
stc
push
pushf
not
cmc
pushl
add
mov
pushl
cmp
stc
shr
pusha
jmp
test
cs
iret
xchg
imul
movsb
fcmovnbe
cmp
xor
mov
ret
mov
popa
lods
adc
add
sbb
or
out
or
into
xchg
shrl
jnp
xchg
pop
jmp
push
sbb
pusha
out
scas
cltd
repnz
imul
jge
mov
jnp
repnz
addl
out
nop
and
lock
test
inc
les
orl
es
lea
std
dec
inc
jae
enter
push
jns
jge
sub
mov
clc
or
xor
sbb
aas
sub
or
sub
scas
cwtl
imul
repnz
out
and
lea
je
mov
cmp
dec
inc
out
xor
xor
push
cmc
cld
mov
push
pushf
push
lea
ja
cmc
bt
imul
jmp
and
pop
iret
xchg
lods
pusha
int3
icebp
lea
jl
mov
xor
ficoml
jg
add
hlt
lds
and
adc
mov
mov
or
cmp
sbb
jmp
add
push
in
inc
pop
jl
int
mov
mov
in
add
cs
or
xchg
mov
pop
pop
in
ds
je
pop
movsb
sbb
sub
add
stos
rorl
add
sub
into
outsl
inc
mov
mov
je,pt
movsb
scas
mov
cmp
test
or
imul
xor
xchg
lods
mov
pushf
popw
call
rorb
stos
fistl
cmp
cmp
mov
aad
xlat
cld
in
lret
dec
jg
mov
xor
loope
add
inc
mov
popf
mull
and
sbb
adc
dec
aas
jns
jge
pop
scas
loop
add
sbbl
or
hlt
clc
push
sub
fucomp
jno
stos
sbb
clc
cmp
hlt
sub
shll
pop
aad
cmpsl
cmp
sub
cmpsl
cmp
push
xor
sub
mov
jno
jmp
idiv
jmp
call
pushl
lea
jne
bts
mov
rol
shrd
pusha
sub
clc
lea
cmp
jmp
fs
fimull
iret
xchg
cmpsb
sub
sbb
stos
inc
je
pop
jl
dec
je
mov
xor
pop
push
mov
xor
ret
jge
cmp
shl
cwtl
or
repnz
mov
ret
sahf
jns
jno
pop
inc
lret
push
mov
mov
mov
jnp
pop
inc
imul
push
dec
inc
jno
push
or
push
pushl
popa
sub
cli
aad
xchg
fadd
data16
cwtl
divl
or
xchg
cmpsl
outsb
pop
lret
mov
mov
sub
and
sbb
push
xor
mov
mov
sbb
lahf
leave
jge
add
sbbb
std
inc
dec
sbbl
and
add
push
pusha
jmp
clc
test
or
jmp
jmp
dec
xor
mov
lods
ljmp
sub
test
jne
iret
xchg
xchg
push
sar
mov
scas
xchg
roll
movsl
scas
xor
addb
cmp
sub
addr16
cwtl
and
ljmp
mov
xchg
push
jnp
xchg
cmpsb
mov
imul
cli
je
cmp
push
pop
mov
ret
inc
outsb
pop
std
pop
je
test
inc
sub
cmp
jns
sbb
add
adc
xchg
dec
leave
cmpl
mov
movlhps
iret
pcmpgtw
stos
insb
subl
push
cmp
pop
pop
test
jmp
dec
inc
lahf
test
ds
dec
int
ficoml
or
push
js
mov
les
testl
sbb
mov
repz
aad
jns
iret
xchg
mov
push
or
hlt
pop
and
mov
fisttpl
pop
sbb
inc
imul
jne
pop
sti
out
or
ret
adc
xchg
cmpsb
xor
xor
test
imul
outsb
cmp
xchg
enter
mov
enter
lock
lahf
outsb
orl
sarl
cli
xor
std
cmp
pusha
pushf
mov
sub
inc
data16
fbld
aas
mov
ds
adc
pop
out
fdivr
jnp
inc
pop
xor
xchg
push
mov
sub
test
add
add
loopne
mov
pop
leave
cmp
stos
mov
xchg
pop
fwait
lea
jge
and
imul
mov
adc
out
shll
mov
sub
imul
sub
dec
stos
test
sahf
jle
popa
pop
pop
pop
cmp
lret
mov
pop
adc
icebp
jg
pushf
inc
mov
into
mov
rol
mov
and
cli
aad
iret
xchg
test
add
mov
xor
cmp
jae
jecxz
inc
cmp
push
pop
sti
dec
dec
lret
pop
outsb
adc
pop
lret
cmp
cmc
add
ja
sbb
data16
movb
pop
inc
adc
xor
loope
aad
inc
xor
mov
mov
mov
jle
call
jbe
mov
xor
call
in
dec
clc
stc
adc
or
cmp
xchg
pop
cmp
jae
or
and
mov
xchg
fiaddl
jp
stos
cmpsl
mov
cli
lock
mov
adc
dec
js
fcmovne
fld
call
pop
cld
mov
push
adc
aas
mov
imul
int3
push
dec
mov
xchg
cmp
and
movsl
xchg
dec
cwtl
scas
xchg
jnp
mov
js
mov
xchg
rcrl
jl
xor
bound
xchg
out
arpl
aas
xlat
jge
adc
and
rolb
rol
movw
bt
add
pushf
cmc
mov
jmp
lea
call
push
mov
jmp
push
push
pushf
pushf
pushf
movl
pusha
lea
jmp
stos
pushf
lea
jmp
mov
call
jmp
mov
in
iret
xchg
mov
gs
lds
in
je
cmpsl
cs
cwtl
or
push
xor
jle
push
add
movsb
xchg
ss
and
sub
xchg
mov
dec
push
push
inc
insl
adc
dec
and
in
js
dec
jbe
cmc
idiv
xor
lea
jne
aam
bsr
rcr
sub
clc
inc
mov
clc
dec
sar
add
rol
xor
mov
jmp
pusha
movl
call
mov
mov
cmc
pushl
or
pushf
jmp
cmc
clc
pusha
stc
rol
cmc
mov
pusha
cmp
sub
call
call
fcoml
dec
mov
xchg
ds
test
test
cmpb
push
xor
psubd
pop
push
jne
dec
pop
pop
xchg
dec
jle
lahf
jg
lret
jecxz
sahf
rcrl
ss
in
out
dec
adc
aad
jae
adc
lret
das
pshufw
pushf
test
int3
jp
cmp
pushf
push
iret
xchg
and
jge
sub
cwtl
hlt
insb
push
inc
stos
andl
ljmp
fdivrp
ja
cmp
rorb
hlt
or
mov
test
pushl
xor
out
imul
lds
loopne
test
arpl
ss
in
ljmp
lock
sbb
mov
jns
jp
pop
in
testl
add
fdivs
push
pushf
pusha
pushf
lea
je
push
lea
jmp
push
jb
bswap
xchg
insb
nop
int3
adc
jbe
pop
adc
or
cmp
out
jo
mov
adc
push
jecxz
arpl
dec
mov
aam
mov
mov
sub
cmpsb
insl
pop
add
imul
pop
pop
inc
call
jbe
cmpsb
sbb
fwait
mov
fs
jmp
mov
bswap
xchg
fstl
push
int
lods
mov
mov
lock
mov
sub
push
pop
test
xor
lds
test
pop
xchg
adc
cmp
aaa
int3
mov
movsl
xor
jne
das
adc
jge
add
out
mov
insb
inc
push
in
push
test
mov
lods
pusha
mov
into
jne
test
sub
inc
daa
mov
repnz
mov
add
lea
jp
fldcw
sti
imul
cmp
fcmovnb
jp
loope
jg
mov
dec
int
push
out
repnz
pop
or
lds
int3
pusha
mov
shr
xchg
sub
fsubrs
jb
adc
pop
hlt
push
loope
cmpsl
call
pop
jb
clc
and
sub
add
aaa
jbe
mov
cmp
inc
das
and
jb
nop
std
xor
dec
cmpsb
mov
outsb
les
movw
lea
je
test
cmp
add
push
push
jmp
call
movl
call
pushf
call
jmp
pushf
pusha
call
adc
pushf
lea
call
push
pusha
pushf
mov
lea
jb
pusha
pusha
movb
pushl
ret
movl
mov
pushf
mov
movb
lea
jmp
pusha
jmp
movl
call
pushl
popl
pushf
mov
pushl
ret
jmp
pop
pushf
jmp
dec
mov
adcl
lea
cmp
jno
mov
enter
loopne
mov
jl
lock
jne
lods
lcall
jg
insb
ret
ds
pushl
or
repnz
mov
cltd
rcrl
adc
xchg
test
dec
cwtl
cmc
mov
push
pop
hlt
pop
xor
loopne
in
cwtl
cmp
inc
pushf
add
rcr
push
repnz
jmp
sub
and
fstpt
pop
push
pop
pop
mov
or
jmp
fdivrs
stc
and
fistpl
shrl
pop
push
add
add
cmpsl
test
push
fwait
add
push
call
or
loope
popf
shr
push
pop
inc
cmp
mov
pop
sub
cwtl
imul
mov
jb
call
ror
pushl
inc
cmc
pushf
clc
cmp
pushl
jmp
movb
pusha
lea
ja
add
dec
add
push
bt
test
sbb
mov
jmp
cmp
cmp
pushw
popfw
jmp
movb
sub
test
pushl
popl
bt
pusha
mov
cmp
push
jmp
movl
jmp
repnz
aam
iret
xchg
call
and
inc
sbb
pop
sbb
daa
iret
in
inc
jo
push
mov
or
rcll
cmp
cmp
dec
daa
inc
cmp
xor
push
iret
cmpb
popf
mov
idivb
pop
xlat
rolb
lock
jnp
push
int
mov
fwait
jle
dec
repz
jg
pop
add
repz
xchg
jmp
pop
fs
adc
xchg
adc
mov
add
ret
cmp
push
jmp
sbb
ss
push
loop
pop
and
dec
scas
jb
es
repnz
xor
sbb
cmp
scas
sbbb
leave
stos
mov
push
rcll
xchg
mov
xor
or
movsl
and
fcmovnbe
lahf
pop
lds
xor
cs
lahf
cmc
cld
nop
lods
loopne
push
fnsave
cmp
push
pop
cmp
mov
xor
iret
cmp
clc
shl
mov
imul
xor
dec
inc
cli
stc
adc
lods
lret
xchg
rorl
aas
lret
jb
in
out
mov
push
scas
and
cmp
sbb
je
sub
punpcklbw
mov
movsb
aam
inc
push
sbb
xor
push
stos
xchg
xchg
fdivrl
sbb
test
ret
cmc
outsl
out
subb
repnz
cmpsl
inc
sub
stos
mov
mov
fidivl
xchg
push
xchg
xlat
mov
shr
dec
addb
js
lret
inc
push
sub
imul
add
leave
hlt
iret
mov
lahf
push
sbb
pusha
int
out
loop
addl
pop
popf
xor
test
pop
das
jg
gs
loope
xlat
push
jb
aas
sbbb
push
or
aas
xor
xchg
cmc
xorb
out
adc
xchg
lock
sahf
inc
lods
cmp
stc
xor
pop
inc
inc
pop
testl
test
sbb
or
sbb
and
cmp
dec
add
mov
das
aas
out
daa
jno
int3
and
xor
xchg
mov
cmp
cmp
gs
xchg
test
cmp
push
pusha
and
jne
pop
pop
mov
lock
gs
and
cmp
pop
sarb
icebp
cwtl
jb
aaa
js
fdivrp
adc
call
pop
sahf
ja
xchg
xor
pop
and
dec
push
popf
adc
mov
push
lock
icebp
insl
outsb
jge
jecxz
sub
ds
fldcw
popl
sahf
xor
mov
outsl
clc
jne
shl
mov
xor
and
cs
xchg
add
ljmp
push
sub
xchg
int
sarl
int
cmp
imul
mov
mov
add
cs
cmp
clc
cmpsb
pop
addr16
cs
fcomp
xchg
mov
sub
shlb
stc
cwtl
aaa
mov
xor
push
inc
push
lea
mov
ret
adc
mov
pop
jg
sarb
es
inc
movsb
mov
mov
dec
dec
movsl
js
mov
cmp
lcall
dec
lods
lds
ds
push
mov
push
mov
adc
test
stc
pop
mov
cmp
icebp
push
push
negb
es
push
cltd
psubsb
xor
incl
pushf
push
lea
jmp
popf
cpuid
nop
call
pusha
mov
pusha
mov
pushf
lea
jmp
lea
jmp
pusha
movl
jmp
adc
xchg
push
iret
xchg
mov
leave
xor
or
push
push
pop
xor
lret
add
cld
stc
lock
sbb
and
ror
adc
imul
and
mov
jecxz
fsts
mov
call
test
hlt
jns
lret
xchg
jns
mov
filds
inc
leave
xchg
test
xchg
jno
loopne
push
sbb
inc
mov
iret
push
shll
loopne
fwait
mov
movsb
les
fidivl
adc
pop
jle
in
inc
mov
sub
insb
sbb
mov
inc
mov
mov
mov
icebp
das
inc
jmp
cs
cltd
adc
aad
jns
and
sbb
push
inc
cmc
xchg
popf
fistl
xlat
xor
dec
sti
or
pop
add
mov
outsl
cmp
setns
inc
pushf
jmp
stc
pusha
cmp
push
lea
jb
cmc
test
cmp
cmp
push
call
pop
mov
sbb
xchg
fiaddl
mov
aam
iret
or
call
sti
arpl
jmp
repnz
notb
add
mov
lods
pop
cmp
cmpsl
xchg
clc
and
lods
cmp
gs
out
int3
dec
and
mov
inc
mov
add
addb
lret
fstpl
dec
adc
add
xchg
pop
pop
int
jge
sub
push
cli
sbb
pusha
pushf
mov
dec
inc
and
cltd
adc
fwait
movsl
imul
call
pop
lds
sbb
xchg
jecxz
sbb
xlat
in
lahf
ret
ja
fistpl
mov
dec
test
and
in
sarb
aam
repnz
mov
jns
outsl
aam
pop
pop
shll
imul
xor
dec
xchg
dec
cmp
ret
ljmp
jo
mov
pop
loop
repnz
mov
mov
les
pop
mov
pop
pusha
mov
pushl
mov
push
movzbw
mov
mov
push
pushl
ret
pushl
call
jb
hlt
sbb
xchg
out
jbe
dec
add
test
enter
add
jecxz
arpl
std
adc
adc
popa
outsl
push
shrl
jl
sbb
inc
cmp
mov
loopne
jecxz
subb
pusha
rdtsc
outsl
mov
dec
jl
mov
and
dec
and
push
jmp
pushl
popl
mov
pushl
ret
push
movl
call
movb
call
pushf
pusha
jmp
add
test
movb
clc
cmc
mov
test
cmp
cmc
cmp
test
mov
lea
je
push
pusha
add
call
mov
mov
pushf
lea
call
jmp
movl
pushf
lea
je
push
xor
aas
mov
movw
daa
mov
bsr
rcr
bts
shr
lea
clc
mov
cmc
bt
or
js
push
movl
lea
je
movsbw
bsf
xchg
rcl
add
mov
sub
bt
cmc
and
shl
shr
sbb
clc
adc
mov
jmp
lea
call
pushf
call
pusha
pusha
mov
pushf
pushl
mov
jmp
clc
cmp
mov
jmp
jmp
push
sahf
cmp
iret
xchg
call
pop
sahf
ss
lock
inc
ljmp
push
xlat
imul
es
cld
aas
mov
lock
in
subl
xor
shr
clc
mov
adc
cld
das
ret
scas
mov
inc
fidivs
add
ja
push
lds
mov
popf
cwtl
orps
sub
lock
sbb
inc
jecxz
popa
leave
andb
cmp
outsb
sbbb
jno
inc
pop
mov
dec
or
xor
sar
fwait
subb
iret
xchg
sti
idivl
mov
stos
movsl
stos
pop
idivl
adc
dec
pushf
sub
sub
sbb
pop
popa
shr
nop
stos
rcrl
cmpsb
cwtl
cmp
scas
in
gs
sub
dec
sbb
cmp
incl
cwtl
enter
jo
es
xchg
lret
inc
pop
aad
pop
ret
and
pop
mov
xor
inc
pop
mov
xlat
fs
ret
popf
lcall
adc
pop
loope
or
dec
jo
pop
sub
sbb
data16
lds
out
xor
in
das
pop
mov
jecxz
or
xor
stos
dec
jl
dec
sbb
inc
call
lds
pop
mov
fcom
mov
pop
sbb
aam
mov
xchg
xchg
lret
pop
pop
out
xchg
fcmovb
mov
lret
lahf
loope
dec
jmp
les
pop
cmp
push
aaa
insl
pop
ss
pop
adc
lret
andb
xor
push
int3
repnz
xor
loope
add
sub
adc
movzbl
call
lea
jno
push
imul
mov
clc
movb
add
movb
push
lea
jmp
jmp
adc
add
or
adc
mov
push
pusha
movw
cmpb
push
mov
call
clc
movzwl
adc
shr
call
not
call
lea
je
cmc
add
cmc
clc
cmp
jmp
add
call
movl
pushl
movl
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
pushf
mov
movl
call
pushf
pusha
add
jmp
call
push
push
jmp
jmp
movb
jmp
push
not
lods
jmp
lea
jb
bt
push
pusha
test
cmpb
call
cmpsl
ret
out
sbb
adc
rcrb
xchg
pop
repnz
xchg
and
xchg
jp
push
xor
or
nop
push
int3
inc
test
jge
xchg
arpl
in
pop
add
mov
and
push
call
stos
icebp
leave
mov
sbb
ljmp
mov
pop
xor
dec
pushf
shll
jnp
xor
rclb
iret
mov
pop
inc
push
add
mov
inc
mov
rorb
pusha
jge
call
xor
sub
and
jle
push
iret
xchg
mov
sbb
in
pop
sbb
sahf
mov
mov
push
mov
mov
jecxz
aas
jmp
leave
iret
cmp
cmpsb
pop
xor
stos
xchg
jmp
cmp
cmp
jp
jae
jnp
enter
adc
jge
call
add
xorl
pop
add
stc
xor
pushf
pusha
pushl
pushf
lea
call
pushf
mov
jmp
imul
xchg
and
mov
sbb
mov
push
sahf
mov
rorl
std
cmp
movsb
fbstp
jecxz
cmp
call
jnp
scas
sbbb
mov
xchg
sub
dec
js
dec
orb
aaa
popl
test
cmp
stc
jmp
pusha
call
jmp
dec
mov
iret
xchg
jns
push
xchg
dec
int
ds
movsl
sbb
fcoms
sahf
sarl
inc
and
popf
aad
aam
xchg
or
insl
push
mov
xor
leave
and
pop
and
xchg
jle
mov
sbb
adc
dec
mov
mov
test
popa
mov
pushf
xor
sub
dec
inc
daa
ror
or
and
ret
lods
popa
sub
fsubrs
rcrl
mov
and
lret
call
pushl
lea
call
call
mov
jmp
lea
ljmp
or
or
int3
popa
lea
sbb
lock
mov
adc
jge
add
or
es
rorb
rcr
loope
mov
xor
imul
sbb
or
sbb
loop
leave
mov
xchg
jl
sahf
mov
fs
lock
or
xor
sarb
adc
lods
out
aam
or
jle
insl
in
xor
xchg
bound
push
iret
sbb
xor
adc
sub
sub
repz
das
inc
out
xor
adc
pop
inc
sbb
outsl
bound
popa
fstl
loop
xor
aam
cs
and
or
xchg
xor
into
jl
popf
adc
xchg
cli
xor
jbe
jmp
cmc
mov
lea
fucom
movsl
clc
cmp
jl
xchg
jbe
mov
dec
enter
sbb
in
aas
push
pop
scas
mov
in
cltd
leave
jo
roll
int
daa
adc
jnp
push
sahf
shrb
ret
mov
movsb
inc
jb
xor
negl
cmp
sbb
or
cmp
cmpb
cmp
push
mov
jl
sbb
xchg
xor
xchg
gs
and
dec
ret
in
push
mov
jno
xor
fwait
outsl
mov
mov
cmp
mov
test
call
lods
lock
jne
fnsave
dec
jge
gs
cmp
fcoms
and
fildl
xchg
sbb
sub
mov
push
cmp
or
test
mov
xchg
fcompl
lods
jl
inc
das
insb
add
scas
jl
xchg
mov
mov
das
inc
xchg
dec
iret
out
or
int
sub
push
lods
stos
fwait
popf
call
aam
mov
lds
adc
clc
inc
mov
xor
xchg
lret
inc
dec
aad
mov
bound
sub
fiadds
stc
out
idiv
mov
push
mov
xor
mov
pop
cs
aad
out
push
test
test
les
aas
mov
out
lods
mov
aaa
cmp
inc
jae
cmp
inc
dec
cmp
sahf
adc
out
sub
pop
lret
into
add
or
inc
pusha
lcall
dec
insl
imull
push
aas
and
pop
arpl
ficoms
js
les
and
xchg
pop
imul
imul
pop
in
jmp
dec
stos
sbb
xchg
push
pop
cli
loopne
push
mov
inc
xchg
pop
jl
gs
mov
mov
jecxz
mov
xchg
aas
push
outsl
xchg
adc
inc
gs
mov
rol
dec
lea
loopne
fxtract
daa
ret
sub
mov
jbe
sub
repz
test
ficompl
in
sarb
dec
mov
mov
popa
ret
mov
in
cmp
jge
mov
insb
push
out
add
mov
mov
inc
cmp
lret
sbb
pop
mov
xchg
cli
test
cwtl
hlt
cmpsl
mov
loope
out
sarb
lret
sub
popf
lock
popa
sub
or
add
cmc
push
insl
pop
xor
xchg
mov
sub
imul
push
jmp
sbb
pop
outsb
jns
js
test
mov
fnstenv
pop
mov
call
movzbw
call
pusha
movl
call
cmp
pushf
pusha
pushf
mov
lea
jae
add
pushf
mov
adc
xor
and
mov
shld
clc
btc
mov
test
xor
jmp
lea
jne
pusha
inc
movb
call
movsb
mov
mov
out
mov
daa
imul
jg
jl
iret
or
mov
sbbl
adc
push
iret
mov
and
xchg
xchg
test
outsl
sahf
cli
dec
lret
jge
lahf
sub
out
mov
mov
pop
lods
hlt
fwait
mov
mov
fidivrs
or
scas
fisubs
cmp
xor
jbe
movsb
add
jmp
and
cmp
popf
idivb
dec
push
pop
jle
cmpsb
test
mov
push
mov
or
stos
jne
sub
ret
push
nop
adc
jnp
mov
iret
xchg
xor
bound
ret
inc
mov
rcl
xlat
hlt
mov
or
xchg
pushf
outsb
mov
mov
cmp
mov
das
iret
ljmp
inc
sub
subl
jle
or
shlb
inc
mov
add
rcrl
dec
mov
out
push
mov
cwtl
aam
lret
or
lock
lds
aas
and
mov
sbb
notb
or
xchg
outsb
mov
fmuls
sarb
rorl
push
clc
and
ret
stos
addb
sbb
xchg
jmp
pop
mov
les
sbb
or
out
lcall
sbb
movsb
ja
stos
push
into
adc
inc
fs
sub
and
adc
or
icebp
add
je
push
xchg
sbb
mov
add
insb
mov
sbb
jp
repz
adc
jnp
mov
rcl
sbbb
sub
bound
loop
addr16
shlb
pop
mov
jg
outsb
xlat
jp
test
ret
fldenv
gs
aaa
jb
push
jmp
shl
jecxz
cmp
mov
shrb
les
iret
bound
sbb
jno
mov
add
rcl
push
cmp
call
xor
call
fbstp
jb
dec
aam
jb
push
and
data16
mov
out
pusha
ret
sahf
dec
cmp
or
push
ss
js
adc
in
sti
rcrb
xor
mov
out
mov
icebp
icebp
sub
add
and
mov
or
lods
lods
xchg
test
sub
rorl
out
dec
ret
mov
or
or
in
inc
std
add
and
std
call
push
pusha
pushf
xchg
rcl
lea
cmc
mov
pushf
bt
pushf
sub
pushl
jmp
movzwl
lea
lea
movw
mov
push
call
shr
stc
call
xor
daa
iret
xchg
ss
sub
dec
js
jbe
jbe
xlat
or
popf
les
pop
dec
dec
aam
sysret
jle
and
push
lods
dec
jo
or
adc
shr
loope
roll
mov
movsb
cmp
xor
xor
dec
aaa
fidivrl
jnp
movsb
outsb
add
sbb
cmp
xchg
mov
adc
mov
and
and
notl
mov
lods
sub
push
inc
gs
sahf
stos
sub
stc
push
inc
gs
or
enter
xchg
std
push
inc
gs
sti
notb
subb
nop
push
inc
gs
aad
js
lods
sub
push
inc
gs
dec
lret
subb
movsl
push
inc
gs
inc
adc
gs
jbe
stos
sub
inc
gs
mov
nop
sub
xlat
pop
inc
gs
add
dec
mov
sub
lret
out
push
divl
lea
inc
and
gs
cmp
in
sub
loop
inc
fstpl
sub
aad
das
mov
stos
sub
or
xlat
insl
push
jmp
sub
or
inc
gs
fbstp
xor
es
inc
out
fsts
mov
es
inc
sbbb
push
mov
sub
bound
gs
push
jecxz
mov
lds
cmpsl
test
int3
cmp
inc
gs
aam
xor
xchg
sub
sub
mov
sub
repnz
lahf
stc
xchg
sub
addl
inc
inc
xchg
sub
sub
gs
stc
and
push
test
adc
arpl
push
inc
gs
repz
inc
mov
cmpsb
sbb
inc
gs
sub
adc
gs
ss
xchg
sub
mov
pop
loopne
stos
sub
ficoms
gs
sbb
ficoms
adc
sub
inc
inc
gs
clc
cs
stos
sub
adc
gs
push
insb
fiaddl
inc
gs
lea
or
in
stos
subb
xchg
push
inc
gs
lods
sub
cld
cmpsb
inc
dec
xor
inc
sub
clc
iret
stos
sub
push
inc
gs
movsl
mov
loop
pop
cmp
sub
add
in
dec
xor
inc
gs
lds
pop
xchg
sub
lret
and
test
fs
movl
mov
movw
movl
mov
lea
jmp
movw
lea
call
pushf
pusha
pushf
mov
lea
jne
lahf
push
mov
pushl
pusha
movb
lea
jmp
not
lea
seta
pop
movzbl
xchg
pop
bswap
movzbw
pop
mov
push
push
mov
pusha
pushl
push
push
pushl
ret
adc
jecxz
iret
xchg
repz
arpl
adc
add
mov
fstl
popf
xchg
ret
adcb
pop
out
push
adc
push
out
imul
jl
ret
pop
pop
cmp
or
int3
icebp
cmp
xor
ljmp
push
pop
jb
pusha
add
setno
shl
mov
mov
jmp
call
lea
je
clc
pushf
push
sub
push
stc
test
cmp
jmp
clc
call
pushf
pushf
pushf
jmp
adc
sub
xchg
xor
adc
inc
in
inc
cmpsl
inc
insb
pushl
pop
aad
inc
pop
cmp
xlat
xlat
cmp
or
lret
inc
jmp
fisttpll
popf
sarb
mov
cld
xorl
pushf
xchg
mov
pop
insb
pop
push
inc
or
xchg
inc
dec
scas
xlat
adc
push
pop
or
pop
mov
inc
test
xchg
xor
add
add
push
lcall
and
cs
sbb
ret
pop
cmpsb
mov
push
dec
cltd
cmp
imul
shll
shlb
lret
and
pusha
xchg
call
jae
pushf
bt
call
cmp
add
jecxz
sbb
add
mov
add
or
add
dec
sbb
add
add
add
test
add
adcb
jmp
cmpb
movb
lea
jne
jo
test
push
mov
bt
clc
bt
call
jmp
add
push
call
lea
je
bt
pusha
test
cmc
cmp
pushf
push
lea
je
pushf
lea
jmp
or
lods
sub
xchg
pop
lock
pusha
fdivl
adcb
lea
rorb
sub
repnz
std
jg
and
jg
pop
test
xorb
sbb
repz
sub
inc
es
ffree
adc
or
scas
jmp
lods
dec
popf
push
sahf
fstps
rcr
cmp
sbb
stos
aam
or
pop
xor
jo
jo
jne
mov
fildl
cmp
movb
pushl
push
jmp
call
lea
je
pusha
pusha
adc
pushl
movb
lea
jmp
or
sub
cmpsl
push
mov
aaa
pop
ja
loopne
push
jg
rcr
add
shll
sahf
scas
cwtl
decl
cmc
pop
xchg
mov
mov
mov
xchg
xchg
jp
cli
push
imul
adc
dec
mov
stc
call
inc
lea
pushf
lea
call
push
push
call
bswap
push
lea
jmp
test
rcl
xor
sub
cmc
not
and
rcr
add
call
lea
je
stc
or
pusha
jmp
cmc
stc
sub
bt
cmc
cmp
pusha
push
call
lea
jne
inc
pusha
pusha
mov
movb
bt
jmp
pop
push
jg
iret
xchg
mov
mov
add
and
push
dec
mov
ja
loope
frstor
pop
out
pop
je
ja
sbb
jl
test
hlt
popa
cmp
arpl
mov
psllw
sbbl
jl
cmp
and
mov
iret
xchg
jns
call
aad
inc
ja
int3
stos
jp
pop
cltd
sbb
mov
add
xchg
or
jecxz
ret
scas
mov
sub
insl
sarl
scas
stc
icebp
cwtl
call
adc
ret
bsr
mov
cmp
cmpb
pushf
mov
call
cmc
stc
push
cmc
add
pusha
lea
call
test
jmp
gs
or
iret
xchg
sub
cli
and
jp
pop
outsb
scas
xor
mov
add
jb
jg
mov
jle
add
fdivr
cltd
loop
call
adc
xor
lea
push
movb
out
js
and
inc
adc
sub
call
or
addr16
test
push
pop
dec
cmpsl
pop
inc
loope
enter
add
push
cmp
sarl
push
or
ret
mov
mov
fiadds
mov
jge
sarb
pop
fmul
lret
lods
mov
mov
or
scas
xor
mov
into
movsl
or
cli
mov
leave
arpl
add
mov
pushf
das
adc
jl
jmp
xor
sarb
push
mov
and
ja
pusha
dec
sets
sets
inc
lea
pushf
dec
inc
sub
test
inc
mov
sar
xchg
bsf
daa
stc
adc
mov
stc
mov
not
sub
mov
clc
jmp
call
xor
in
iret
xchg
push
cwtl
dec
clc
and
in
add
sbb
mov
fisubs
sub
into
mov
retw
xor
adc
sub
ret
or
lods
xchg
ss
xor
lods
jno
loope
sti
adc
les
dec
adc
pop
negb
add
addr16
cmp
xchg
sbb
ret
jnp
enter
adc
and
push
inc
cmpsl
jl
push
outsb
inc
icebp
outsl
adc
cmp
cpuid
mov
xor
jl
add
dec
or
add
mov
mov
pushl
ret
call
pusha
sete
lods
stc
clc
movb
ror
pushf
jmp
adc
xchg
xor
xchg
test
test
or
push
or
pop
enter
push
mov
add
mov
push
sti
xchg
sti
or
fisttps
dec
and
mov
cmp
sub
imul
cmp
mov
je
mov
les
enter
movl
ss
mov
add
fwait
test
add
push
hlt
out
push
fs
rcrl
bound
in
cmpl
out
test
jp
stc
decl
test
cmp
mov
movzbl
sub
mov
neg
mov
push
test
clc
stc
sub
call
adc
mov
iret
xchg
push
add
inc
cmp
jne
mov
mov
push
jmp
call
xlat
rorl
dec
rcr
dec
mov
pop
jp
sahf
imul
addr16
adc
xchg
ret
mov
in
mov
jb
ror
cld
and
mov
orl
cmc
cmpb
push
call
sbb
cwtl
movsbw
mov
clc
shl
push
movl
jmp
arpl
jecxz
iret
xchg
rcr
and
adc
adc
jg
push
inc
loope
pop
mov
sahf
cmpsl
pop
leave
adc
adc
int
cmp
sarl
cmp
cmp
mov
cmpsl
mov
ja
lds
or
imul
mov
xchg
mov
dec
xor
mov
mov
aam
jp
mov
or
xchg
in
jp
mov
ror
adc
call
movb
movb
movl
pushf
push
push
mov
movl
pusha
pushf
lea
jmp
adc
call
inc
mov
test
sub
jecxz
ret
add
or
cmpsb
imul
mov
aam
lcall
or
xor
push
pop
js
push
inc
jo
lea
cmc
es
jp
out
push
push
sahf
pop
mov
mov
cmp
adc
push
sub
mov
test
xor
movsl
lret
dec
call
movl
pushf
pushl
movw
movb
lea
jmp
imul
loop
or
cmp
mov
rorb
mov
mov
jg
daa
lods
cltd
xor
in
fwait
dec
jbe
sub
js
rorb
xor
hlt
bound
sub
mov
jae
mov
cmp
jecxz
inc
stc
aam
sub
repnz
clc
aam
loope
jns
jp
dec
aad
or
push
push
pop
hlt
subb
lahf
in
insl
mov
rcr
les
icebp
cwtl
sub
inc
pop
mov
xchg
pop
arpl
imul
jp
hlt
xor
adc
rolb
scas
jmp
lahf
inc
mov
ret
lret
inc
inc
dec
cmp
sbb
in
lds
es
ljmp
xor
adc
es
lods
repz
xchg
mov
add
mov
lcall
dec
inc
mov
pop
aam
cmpsb
and
pop
mov
aaa
andl
jle
cmp
icebp
cwtl
jno
pop
cmc
fdivrp
xor
xchg
sub
fwait
imul
and
push
jecxz
subl
sbb
sbb
std
xor
loop
pushf
dec
fsubrl
loope
iret
out
lds
sub
lds
mov
and
in
stos
shl
jge
mov
pop
lcall
sbb
lcall
movsl
imul
aaa
xchg
fmull
rcr
xlat
dec
loope
insb
ret
xor
adc
xchg
mov
gs
cwtl
sbbl
xor
xchg
jb,pn
loop
or
mov
rcr
xlat
enter
ret
xor
dec
lret
imul
imul
enter
push
mov
dec
jmp
xor
jb
dec
cmp
jo
test
aas
scas
leave
fsts
lahf
jl
xor
lahf
and
inc
mov
lcall
cmp
adc
dec
cmp
pop
int
rcrb
shll
mov
stos
movsb
sbb
arpl
mov
push
inc
out
xchg
pop
and
xchg
into
push
jge
cwtl
scas
xlat
jge
pop
out
mov
jmp
stc
cmp
push
lea
jae
mov
shrd
bt
and
mov
shld
mov
dec
mov
clc
sub
cmc
pushf
call
pop
jmp
sbb
xor
inc
push
ret
adc
dec
add
push
xchg
clc
xor
fidivrs
repnz
out
or
packsswb
mov
in
sbb
xchg
cmp
xchg
dec
xlat
or
mov
sub
push
fstpl
inc
push
push
movb
lea
jmp
mov
call
inc
mov
mov
lea
inc
mov
setno
mov
pusha
mov
movb
pushf
pusha
jmp
call
mov
shld
xadd
mov
xadd
mov
xadd
cmc
sar
mov
rol
sub
lea
not
mov
setbe
lods
xor
stc
sar
dec
xor
xor
and
sub
or
sar
ja
shr
xor
cmp
ror
dec
shr
not
shr
add
jmp
inc
pop
jne
iret
xchg
stc
xor
aam
or
nop
mov
sub
jo
vpunpckhbw
xchg
xchg
dec
rorl
adc
loop
add
popf
cmpsl
cmp
fstl
test
pop
fcmovnu
cmp
insl
repz
inc
pop
push
xor
lock
push
dec
lret
decl
dec
lret
or
faddl
inc
pop
clc
movsl
jbe
mov
ret
fstpt
not
dec
mov
inc
ss
mov
fstps
scas
cld
cmpsb
mov
outsb
mov
cmpsb
shr
pop
imul
lea
gs
jmp
insb
scas
push
pop
inc
std
mov
push
inc
cmp
push
xchg
imul
pop
mov
ret
cmc
fdivl
hlt
in
dec
mov
out
mov
sub
push
mov
aaa
sub
or
cmp
jmp
sub
xor
mov
pushf
jmp
mov
movb
jmp
rol
test
neg
mov
call
cmp
add
pushl
mov
pusha
pushf
pushf
lea
jmp
jmp
pushf
mov
pusha
pushf
lea
jmp
movsbw
pop
pushf
movb
mov
push
lea
jmp
pushf
jmp
pushf
call
sub
pushf
lea
call
pushf
mov
pusha
push
pushf
pushf
lea
jmp
mov
push
push
jmp
xchg
mov
neg
mov
pusha
sub
call
pusha
mov
pushl
push
jmp
cmc
bt
cbtw
call
pusha
push
mov
call
mov
pushf
pusha
push
lea
jmp
movl
pushf
pushf
pusha
lea
jmp
pushf
mov
call
pushl
mov
pushf
movb
lea
jmp
repz
popl
pusha
push
call
not
call
mov
call
movb
movl
movw
pusha
lea
jmp
pushl
lea
je
pushf
mov
pushf
pushl
popl
call
shr
pushf
mov
call
aas
movzbw
and
rdtsc
call
sub
jmp
pushl
popl
mov
movb
mov
mov
lea
jmp
movb
mov
pushf
movb
pushl
mov
jmp
pushf
mov
pushl
pushl
call
sub
mov
mov
push
pushf
pushf
lea
jmp
adc
inc
shr
mov
jmp
test
mov
not
sbb
call
pushf
push
pushl
mov
push
mov
pusha
pushf
mov
call
pushf
pushl
mov
movb
pushf
pushf
mov
call
pusha
pushf
push
movl
push
lea
jmp
call
jmp
mov
push
mov
pushf
mov
repz
popl
call
lahf
bts
aam
aam
mov
pushf
cmp
jmp
jmp
mov
mov
movb
push
lea
jmp
sub
pushf
mov
movb
movb
pushf
mov
lea
jmp
pushf
mov
pushl
popl
mov
movl
pushf
mov
pushf
push
lea
jmp
mov
jmp
jmp
sar
sar
test
mov
pusha
cmp
add
pushf
pushf
movb
lea
jmp
pushl
pushf
mov
movw
movb
mov
lea
jmp
rol
bt
jmp
inc
movl
decl
lea
js
pusha
lea
jne
jmp
call
rcl
dec
mov
call
pushf
call
movl
pushf
movb
pushf
lea
jmp
pusha
xor
jmp
std
push
mov
lea
pushf
movl
call
mov
lea
jle
push
pushl
pusha
pushl
popl
jmp
repz
popl
call
repz
popl
pushf
lea
jae
pusha
pushf
mov
lea
jle
push
mov
call
shrd
inc
movsbw
bsr
mov
not
bsr
lea
pop
shrd
sub
rdtsc
pop
xadd
call
pusha
jmp
cmc
bt
pusha
add
jmp
pushf
popl
call
inc
jmp
push
pusha
jmp
bts
sbb
mov
call
mov
movb
mov
jmp
pushf
pushl
popl
call
mov
mov
mov
mov
pushf
mov
pusha
jmp
clc
rol
jmp
jmp
pushf
movb
mov
jmp
mov
pusha
mov
pushl
movl
jmp
cmc
sub
push
pushf
add
push
pushf
popl
jmp
jmp
pushl
popl
movb
call
mov
jmp
pushl
popl
jmp
jo
push
pushf
pusha
mov
push
jmp
pushf
push
mov
call
shl
mov
rcr
sbb
mov
shl
mov
stc
clc
push
jmp
mov
jmp
push
movl
pushf
pushf
movb
movw
lea
jmp
mov
call
aad
bsf
mov
push
add
pushl
call
jmp
push
jmp
movl
mov
call
fdivrs
pop
add
pop
add
dec
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
xor
cmp
pop
add
cmp
lret
inc
pop
add
sub
jmp
pop
add
dec
pop
add
push
pop
add
push
pop
add
cmp
out
xor
pop
add
pop
add
push
pop
add
aas
pop
add
pop
add
ds
add
push
pop
add
pop
add
sub
xchg
inc
pop
add
push
pop
add
xor
pop
add
sub
fisttps
add
pop
add
cmp
pop
add
inc
pop
add
push
pop
add
dec
pop
add
dec
pop
add
sub
add
dec
pop
add
pop
add
pop
add
pop
add
push
pop
add
sub
add
sub
add
add
sub
in
dec
pop
add
inc
pop
add
xor
add
pop
add
push
pop
add
push
pop
add
cmp
imull
pop
add
xor
subb
sub
fisttpll
add
pop
add
cmp
call
daa
pop
add
cmp
xchg
push
pop
add
pop
add
pop
add
push
pop
add
dec
pop
add
add
pop
add
pop
add
pop
add
xor
xchg
push
pop
add
cmp
je
pop
add
cmp
leave
inc
pop
add
pop
add
xor
pop
add
ss
add
sub
pop
xor
pop
add
cmp
pop
add
pop
add
dec
pop
add
push
pop
add
cmp
shrl
add
push
pop
add
add
inc
pop
add
xor
pop
add
push
pop
add
inc
pop
add
push
pop
add
pop
add
inc
pop
add
dec
pop
add
sub
subb
call
push
pop
add
push
pop
add
ss
add
cmp
fisttpll
add
push
pop
add
inc
pop
add
pop
add
pop
add
sub
subl
pop
add
dec
pop
add
cmp
ret
add
inc
pop
add
sub
pop
push
pop
add
xor
pusha
push
pop
add
push
pop
add
sub
add
add
inc
pop
add
cmp
pop
dec
pop
add
xor
in
dec
pop
add
inc
pop
add
dec
pop
add
push
pop
add
pop
add
pop
add
push
pop
add
sub
add
xor
push
inc
pop
add
sub
aam
pop
add
ss
add
pop
add
cmp
cltd
daa
pop
add
dec
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
dec
pop
add
pop
add
pop
add
sub
xchg
push
pop
add
ss
add
push
pop
add
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
sub
mov
pop
add
push
pop
add
sub
add
xor
pop
add
push
pop
add
pop
add
dec
pop
add
inc
pop
add
xor
add
add
pop
add
pop
add
dec
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
cmp
mov
pop
add
pop
add
dec
pop
add
inc
pop
add
lds
fs
ja
call
mov
call
call
sub
cmc
and
pusha
pushl
pushf
popl
movb
pushf
pushl
popl
push
pushl
push
lea
jmp
call
jmp
call
mov
pushf
movb
mov
pusha
pushl
push
pushl
popl
jmp
pushf
lahf
ror
cwtl
mov
not
mov
cmp
stc
mov
pushl
add
pusha
stc
clc
cmp
shrd
pushl
call
push
mov
mov
push
mov
jmp
not
mov
test
xor
pushf
dec
bt
clc
neg
cmc
push
pusha
xor
cmc
bt
call
movb
movl
movb
movb
mov
pusha
lea
jmp
pushf
mov
pushf
pushl
push
lea
jmp
mov
pushl
popl
call
repz
popl
push
jmp
call
pushl
popl
push
pushl
push
lea
jmp
push
mov
mov
mov
push
mov
lea
jmp
cmpl
pushl
mov
pushl
mov
pushf
jmp
mov
pushf
pushf
mov
call
neg
mov
clc
clc
call
repz
push
pushf
mov
call
jmp
push
push
call
mov
pushf
pushf
call
mov
movb
pushl
popl
jmp
mov
mov
mov
repz
popl
mov
mov
push
mov
jmp
movb
lea
jne
xor
push
movsbl
xorb
lea
mov
pushf
push
pusha
lea
jmp
pushf
pushf
call
sub
jmp
jmp
movb
mov
pusha
mov
mov
mov
push
pushl
call
movl
push
movb
pushf
lea
jmp
movb
push
repz
popl
mov
pushf
call
pusha
mov
pusha
pushf
mov
call
call
inc
lea
movzbl
pop
call
mov
jmp
pusha
mov
pushf
pushf
pushf
mov
call
movb
pushf
push
mov
push
mov
mov
mov
push
mov
push
jmp
pusha
mov
jmp
push
pushf
jmp
call
pusha
sub
cmp
push
movb
shr
movl
lea
js
mov
push
push
pushf
popl
jmp
jmp
jmp
pushf
mov
jmp
repz
popl
pushf
call
pushl
mov
movb
pushf
jmp
call
pushl
popl
movb
jmp
not
dec
mov
bswap
movsbl
inc
rcl
neg
btr
clc
xor
movzbl
btr
bswap
xor
setae
movzbl
pusha
pushf
mov
bt
mov
cmc
or
pusha
mov
lea
je
pusha
cmc
sub
pushf
cmp
xchg
stc
test
mov
call
mov
jmp
push
movb
mov
movl
push
mov
mov
movw
pusha
mov
pushf
call
stc
mov
or
add
shrd
test
mov
xor
or
shld
and
mov
call
pushf
pushf
mov
movw
jmp
setno
btc
cmc
aam
mov
test
shrd
jae
stc
mov
stc
cmc
not
pusha
not
clc
and
mov
pushf
movw
mov
pushl
call
call
pushl
popl
pushf
lea
jmp
jmp
add
btr
or
sar
movzbl
bt
xor
jmp
sar
aaa
mov
adc
bt
btr
mov
clc
stc
test
add
pusha
jmp
call
mov
pushl
mov
movb
movb
mov
mov
pushf
pushl
lea
jno
push
mov
push
push
call
clc
cmc
cmc
pusha
pushl
popl
cmc
jmp
mov
pusha
push
mov
mov
push
mov
push
mov
jmp
dec
mov
pushf
call
movsbw
mov
lea
inc
bt
bts
not
ror
bsf
test
movsbw
ror
add
shld
sete
mov
inc
and
add
rcl
mov
push
sub
call
mov
jmp
lea
jne
setge
add
cmp
mov
jmp
jmp
push
pushf
jmp
mov
call
pushf
mov
pusha
mov
call
call
and
cmc
pushf
test
pushf
cmp
movl
lea
jne
not
shld
btc
neg
xorb
movsbw
movzbw
pop
pusha
lea
jmp
inc
pushf
pushf
add
jo
cbtw
pushf
cwtl
test
pushl
sub
pusha
mov
mov
push
pushf
lea
jmp
movb
mov
call
pushl
jmp
cwtl
test
cmp
sub
lea
jg
mov
push
push
mov
pusha
lea
jmp
mov
push
mov
push
jmp
mov
pushf
mov
pusha
mov
pushf
mov
jmp
pushl
popl
call
call
inc
bsf
shld
rcl
mov
bt
jl
pushf
movb
add
mov
push
pusha
movb
mov
movb
mov
call
mov
push
jmp
movzbw
mov
bswap
repz
popl
pop
mov
pushl
shrd
shrd
pusha
mov
bts
mov
or
movsbl
xchg
push
and
xor
pushl
popl
test
sar
movl
sub
inc
dec
shld
pushf
mov
and
rol
bsr
xor
push
dec
btr
rol
neg
shl
adc
adc
lea
bts
ror
neg
setno
sub
dec
xor
bts
sar
mov
shld
mov
sbb
pusha
add
sar
add
lea
add
push
not
add
mov
btc
sbb
xor
setp
pushf
bswap
bswap
inc
rcl
btc
rol
pushf
clc
pusha
neg
shr
lea
xor
bswap
call
movb
call
clc
shl
push
test
shr
stc
pushf
stc
stc
or
jmp
movl
mov
pushf
lea
jmp
pushf
pusha
mov
call
pushf
jmp
mov
jmp
pushf
jmp
movw
pushl
popl
call
movl
jmp
rcr
cmc
bt
lea
mov
push
add
mov
mov
lea
jmp
push
pushf
mov
jmp
pusha
push
push
xchg
mov
call
call
jmp
jmp
push
jmp
pusha
pushf
pushf
push
mov
mov
push
call
clc
movzbl
clc
push
push
stc
xor
pusha
dec
stc
test
neg
clc
xor
pushf
pushf
pushf
stc
xor
call
add
pushl
pushf
mov
clc
sub
pushf
inc
pushf
jmp
mov
call
call
mov
call
mov
movl
pushl
popl
pushl
movl
pushl
pushf
push
lea
jmp
mov
pushf
pushf
mov
call
jmp
pushf
pushf
popl
jmp
mov
jmp
call
das
mov
stc
stc
clc
test
add
pusha
pushf
popl
jmp
push
pushf
lea
je
dec
call
pushf
mov
mov
push
pushf
push
pushf
mov
call
shld
mov
pushf
test
pushl
jmp
movzbw
lahf
lea
mov
pushf
mov
mov
pushl
mov
pusha
pushf
pushf
push
lea
jmp
add
add
mov
pushf
lea
jmp
mov
jmp
mov
mov
jmp
bsr
shl
jmp
movl
movb
mov
pushf
push
lea
jmp
mov
call
push
mov
push
pushl
jmp
push
jmp
pushf
mov
pushf
mov
pusha
pushl
repz
popl
push
pushl
movb
movb
mov
lea
je
push
push
movl
pushf
mov
pushf
pusha
jmp
mov
mov
movb
pushf
lea
jmp
movl
pushf
movb
lea
jmp
mov
lea
jnp
repz
pushf
pushf
push
mov
call
pushl
cmp
xor
pusha
bt
jmp
not
pushf
pushf
movsbw
mov
pusha
call
mov
shl
shr
lahf
pushl
popf
xchg
mov
movzbw
cwtl
lahf
movsbw
mov
cwtl
movsbw
mov
pushf
mov
pushf
push
mov
movb
pushl
ret
lea
jne
clc
xorb
bswap
pop
push
lea
jmp
pushf
jmp
sub
movb
pushf
lea
movb
pushl
mov
movb
lea
jmp
pushf
popl
pusha
push
pushf
pushf
pushl
popl
mov
mov
movb
lea
jmp
add
pushf
mov
pushf
push
mov
pushf
movb
movb
pushf
lea
jmp
mov
mov
pushf
repz
popl
call
call
pushl
popl
call
stc
mov
cmp
pushf
pusha
call
add
cmc
rcl
bt
and
bsf
mov
cmp
clc
stc
add
call
movl
pushf
pushf
lea
jne
ror
lea
mov
push
test
and
pushf
test
call
setle
mov
add
rcr
xor
movzbw
sub
pusha
pushf
movzbw
ror
clc
sub
add
bts
neg
add
pusha
dec
xor
movsbw
sar
bts
shrd
mov
test
clc
mov
add
jmp
jmp
call
jmp
call
push
movb
mov
call
jmp
xor
bt
mov
call
not
pushl
pushf
dec
push
add
call
stc
sub
bt
clc
and
push
mov
pusha
pushf
popl
pushf
push
call
pushl
mov
push
push
mov
jmp
mov
movw
pushf
movb
call
call
mov
mov
mov
jmp
inc
mov
jmp
not
lahf
bswap
js
mov
push
mov
mov
mov
push
pusha
pushf
push
lea
jmp
mov
movl
call
call
pushf
push
movb
mov
lea
jb
pushf
movb
mov
jge
pusha
pusha
mov
pushl
jmp
push
push
mov
push
push
push
pushl
pushl
popl
pusha
pushf
movb
movl
pushf
lea
jmp
call
pushf
pushf
mov
jmp
movw
call
movl
push
push
push
push
lea
jmp
movb
jmp
pusha
mov
pushf
pushl
call
pushl
pusha
call
movl
pushf
mov
lea
jmp
aad
pushf
mov
clc
dec
mov
clc
sub
movb
cmp
sub
jns
bt
shl
push
pushf
mov
pushf
pushf
pushf
pushf
popl
call
mov
pusha
pushl
popl
jmp
jmp
pushf
jmp
rcl
bsf
sar
add
pushl
mov
cmc
add
pusha
movb
mov
push
pushf
lea
jmp
mov
jmp
adc
bsf
mov
bt
rcl
mov
cmp
pushf
sub
stc
pusha
shl
call
call
inc
movb
mov
movb
lea
jmp
jmp
pushf
mov
pusha
mov
call
movb
mov
push
mov
pushf
pusha
pushf
lea
jmp
shr
movsbw
shrd
mov
ror
rcl
mov
stc
call
jmp
pushl
popl
pushl
mov
pushf
movw
lea
jmp
movsbl
ror
inc
mov
pusha
add
pushf
lea
jmp
movw
pushl
pushf
movl
movl
pushl
push
push
lea
jmp
call
call
call
push
pushf
mov
push
call
pusha
call
pushl
popl
push
pusha
movw
pushf
lea
jmp
call
sub
pushf
test
add
movb
pushf
popl
call
push
push
push
movl
pushl
lea
jmp
jmp
movb
mov
push
jmp
mov
ja
stc
add
push
call
call
jmp
jmp
pushl
pusha
call
call
push
jmp
mov
call
push
jmp
sub
push
jmp
pushf
call
mov
call
mov
bswap
bswap
not
push
jbe
seto
mov
pusha
movb
movb
lea
cpuid
stc
pushf
sub
pushf
pusha
jmp
pushf
pushf
mov
pusha
pushf
pushl
popl
pushf
call
mov
jmp
jmp
clc
shl
push
jmp
pushf
mov
jmp
jmp
push
mov
push
mov
lea
jl
push
repz
popl
jmp
pushf
pushl
popl
pushf
movl
pushf
lea
jmp
pushl
popl
jmp
mov
movb
mov
lea
jmp
mov
mov
movl
add
pusha
mov
pushf
pushf
lea
jmp
mov
pusha
jmp
call
pushf
jmp
push
mov
call
movb
pusha
repz
popl
pushf
call
lea
jne
rcl
mov
bt
clc
pushf
and
jmp
mov
pushf
jmp
repz
popl
jmp
mov
push
mov
lea
jmp
pushf
shld
adc
xor
mov
cmp
stc
add
push
pushf
pushf
pusha
lea
jmp
call
add
jmp
neg
mov
sub
add
not
pusha
mov
push
call
movb
jmp
jmp
pusha
mov
pusha
call
pushf
mov
call
shl
and
mov
call
mov
pushf
mov
jmp
call
pushf
movl
movb
pushf
lea
jmp
push
mov
push
pushf
jmp
pushl
stc
stc
add
mov
mov
pushf
push
lea
jmp
not
mov
std
lea
jmp
mov
movb
pushf
pusha
pushf
mov
jmp
mov
movb
lea
jne
btc
mov
jmp
push
bt
add
push
lea
jmp
mov
pusha
movb
push
pushf
lea
jmp
push
pusha
pushl
popl
pushf
pushf
push
push
movl
pushf
lea
jmp
call
pushf
jmp
and
call
bt
add
clc
test
sub
push
bt
push
bt
rol
test
test
add
pusha
bt
jmp
clc
btr
neg
lea
mov
pusha
bt
add
mov
movb
pushl
mov
lea
jmp
sub
cmp
lea
pusha
push
clc
call
clc
pushf
add
clc
stc
stc
add
pushf
rol
lea
jb
push
not
jmp
mov
mov
mov
lea
jle
pusha
movw
pushl
popl
mov
jmp
push
pusha
call
mov
pushf
push
pushf
lea
jmp
movl
mov
movb
lea
jmp
mov
mov
call
movb
mov
call
mov
mov
mov
mov
jmp
ror
bswap
rcl
ror
call
shrd
sbb
dec
mov
cmp
bt
pushf
clc
add
pushf
pushl
lea
jmp
shr
call
and
jmp
movb
movl
pushl
pushf
movw
movb
lea
jmp
mov
pushl
push
mov
pushl
jmp
pushf
mov
jmp
pushl
popl
movb
pushf
lea
jmp
mov
movb
pusha
call
mov
call
cwtl
lahf
mov
pushf
call
mov
pushf
mov
call
push
movb
mov
movw
movb
lea
jmp
call
xadd
mov
ror
shr
dec
jmp
pushf
pusha
cmp
lea
jge
push
push
pusha
lea
jne
not
xorb
jmp
push
jmp
mov
mov
repz
popl
jmp
not
inc
call
push
call
test
stc
pushl
xor
pusha
jmp
mov
movw
jmp
call
mov
push
pushf
pushf
push
lea
jmp
rol
pusha
not
movb
mov
dec
push
pushl
cmc
mov
add
pushf
push
cwtl
pushf
sub
push
jmp
pushf
popl
pushf
push
pushl
popl
push
push
movb
lea
jmp
pushf
pushf
mov
movb
lea
jno
push
pushf
pushf
call
push
mov
call
pusha
jmp
pusha
jmp
bts
not
mov
xadd
shl
lea
ror
mov
sbb
mov
daa
call
mov
pushf
mov
call
mov
lea
jae
push
pushf
mov
push
pusha
pushl
popl
mov
movl
pushl
pusha
pushl
movb
lea
jmp
pusha
push
mov
pushf
mov
mov
push
lea
jmp
clc
cmp
call
jmp
call
pusha
mov
mov
jmp
dec
push
xor
pushf
call
pusha
call
pushl
mov
push
movb
lea
jmp
xadd
mov
push
push
neg
add
not
mov
setbe
mov
mov
pushf
call
movb
movl
push
mov
lea
jmp
repz
popl
movb
pushf
mov
mov
push
jmp
mov
call
pushl
popl
mov
pushf
lea
jb
push
pusha
push
pushf
lea
jmp
sub
stc
pusha
shl
mov
call
pushl
popl
call
pushf
mov
movb
jmp
clc
shr
movb
mov
pushl
push
jmp
sub
pushl
call
call
pushf
lea
jne
pushf
xor
call
push
movb
movb
mov
mov
mov
lea
jmp
mov
pusha
push
pusha
mov
pushf
pushf
movl
call
movw
lea
movl
lea
jmp
pusha
mov
pushf
movb
mov
movb
repz
popl
call
pushf
movb
jmp
pusha
pusha
push
mov
pushl
movb
push
lea
jmp
pushf
pushf
call
call
pushf
pushl
popl
mov
call
pushl
movb
jmp
cmc
rol
bt
cmp
push
sub
jmp
pushf
push
mov
jmp
pushl
popl
jmp
repz
popl
jmp
pushf
popl
pushf
mov
pushl
popl
mov
movb
movw
lea
jmp
stc
add
test
shld
jmp
pushl
popl
mov
movl
movb
mov
lea
jmp
pushl
mov
call
movzbw
mov
pushf
push
inc
mov
pushf
test
add
pushl
jmp
lea
jg
mov
call
jmp
pushf
inc
xchg
movzbl
bsr
add
sub
movb
sub
stc
setb
rol
bsf
adc
rcl
sub
btc
sets
shr
add
jmp
pusha
pusha
mov
bswap
mov
cmp
movb
movb
bt
add
movb
pushl
lea
jmp
add
mov
pushf
mov
lea
jmp
pushl
popl
movb
lea
jmp
sub
pushl
pushf
call
mov
push
pusha
mov
pushl
mov
push
jmp
jmp
sub
pushl
pushf
push
mov
pusha
movb
lea
jmp
mov
jmp
mov
pushf
pushf
push
jmp
pushl
pushl
movl
mov
movb
lea
jmp
pushf
mov
jmp
pushl
popl
push
movl
pushf
movb
mov
lea
jmp
pusha
pushf
pushf
lea
cpuid
clc
sub
test
cmpl
push
pushf
call
ror
lea
mov
jmp
shl
sub
jne
movzbl
pusha
jmp
mov
call
clc
mov
pushf
test
call
call
pushl
movl
pushf
push
mov
movb
lea
jmp
call
stc
add
jmp
mov
mov
pushf
pushf
call
jmp
jl
mov
pushf
movb
mov
lea
jb
pusha
pushf
mov
pusha
mov
mov
lea
jmp
movl
pushf
pushf
lea
jmp
call
pusha
repz
popl
push
mov
movl
push
jmp
call
mov
mov
push
pushl
ret
mov
call
movl
push
lea
jmp
jmp
push
pusha
lea
jae
pushf
pushf
mov
movw
call
mov
pusha
jmp
mov
pushf
popl
movb
pushf
jmp
pushl
call
pushl
popl
pushf
mov
call
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
pushl
popl
mov
call
pushf
jmp
mov
jmp
mov
jmp
pushf
pushl
popl
jmp
mov
jmp
jmp
mov
movb
mov
pusha
pushf
mov
pushl
mov
call
movb
mov
pushf
pushl
call
pushl
popl
pushf
pushf
movb
push
lea
jmp
push
call
call
pushf
pushf
mov
movb
pushl
ret
mov
mov
pusha
jmp
neg
call
pushf
sub
jmp
shl
mov
pushf
add
pushf
lea
jmp
pushf
jmp
lea
movb
mov
pushf
pushl
mov
lea
jmp
pushf
pushl
popl
movb
pushf
pushf
lea
jmp
pushf
repz
popl
jmp
rol
clc
bt
pushf
clc
add
stc
cmp
test
pusha
add
pushf
call
mov
pushf
pusha
lea
jmp
not
pusha
dec
dec
mov
setb
not
mov
pushl
jmp
pushf
mov
pushf
mov
call
mov
call
add
mov
shr
bt
mov
stc
cmp
add
pushf
pushf
pushf
mov
pusha
pushf
mov
lea
jmp
mov
call
movsbw
inc
mov
setnp
btr
jmp
repz
popl
push
call
mov
mov
jmp
pushl
popl
pushf
lea
jmp
lea
jnp
push
mov
pusha
pusha
jmp
jmp
movl
push
lea
jmp
movzww
mov
jmp
call
cmp
jmp
call
call
lea
push
bts
cmp
xor
lea
btr
bsr
das
aad
sub
shr
bt
aas
shr
lea
clc
lea
shr
movzbw
and
movsbw
sub
mov
mov
bswap
bswap
movzbw
pushf
pushf
popl
movsbl
pusha
mov
jmp
inc
inc
call
call
pusha
pushf
not
jmp
movb
pushl
popl
mov
pushl
pushl
lea
jmp
lea
jb
push
movl
pushf
push
lea
jmp
movl
movb
jmp
shl
test
mov
pusha
jmp
adc
rcl
seto
movzbl
cmp
bt
xor
cmp
pusha
sub
cmc
pusha
cmc
ror
stc
movb
neg
cmp
movb
movb
jmp
mov
pushl
mov
pushf
pushf
mov
movw
push
mov
call
mov
pushl
call
jmp
mov
mov
call
jmp
mov
jmp
repz
popl
call
mov
push
add
cmc
stc
test
pushl
popf
pusha
push
push
push
lea
jmp
mov
pusha
pushf
push
lea
jmp
call
push
pushf
jmp
pushf
movl
push
movb
pushl
pushl
lea
jmp
pushl
popl
pushf
push
lea
jmp
mov
mov
pushf
pushf
popl
jmp
call
call
pushl
sub
pushf
jmp
cmc
cwtl
push
pusha
movw
jmp
push
mov
movw
jmp
pushf
mov
mov
pusha
lea
cpuid
pushf
cmp
cmc
test
sub
cmc
cmc
bt
cmpl
mov
push
mov
call
and
sar
ror
adc
mov
clc
cmc
cmp
cmp
add
push
movw
pusha
lea
jmp
add
mov
mov
movb
lea
jmp
mov
push
pushf
lea
jmp
push
mov
pusha
pusha
push
lea
jmp
pushf
mov
mov
pushf
popl
call
or
notl
add
mov
mov
stc
cmp
call
mov
mov
jmp
push
jmp
call
mov
pushf
jmp
cmp
jns
add
stc
sub
pushf
call
push
pushf
pushf
pushf
lea
jne
pusha
pushf
pusha
mov
pushl
push
pushf
lea
jmp
aam
bsr
mov
pusha
cmp
pusha
mov
cmc
mov
push
call
call
inc
btr
ror
mov
cmp
mov
jmp
call
pusha
pushl
call
mov
pusha
call
clc
push
pushf
sub
clc
stc
call
sub
rol
bts
btr
mov
sete
call
pushf
pushl
popl
pushf
lea
jmp
cmc
sub
pushf
push
jmp
mov
push
call
jmp
pushl
pushf
jmp
call
pushf
lea
jge
dec
bt
clc
add
pushf
jmp
mov
jmp
movl
mov
mov
mov
lea
jmp
bt
push
pushl
not
test
pushl
jmp
pusha
call
xor
pushf
xor
mov
inc
cmc
stc
cbtw
stc
call
lea
mov
pusha
lahf
mov
pushl
pusha
divl
push
movb
mov
jmp
mov
movb
jmp
pushf
mov
push
pushf
mov
pushf
movb
pushl
mov
pusha
mov
call
test
clc
and
clc
cmc
bt
cmp
pusha
pushf
pushf
lea
jne
sub
push
bts
xorb
pusha
not
mov
movw
push
pushf
pushf
lea
jmp
mov
mov
lea
jmp
pushf
mov
pusha
mov
call
test
mov
jne
add
pushf
pushf
push
lea
jmp
push
pusha
pusha
call
push
pushl
popl
jmp
pusha
mov
jmp
pushf
mov
jmp
test
pushf
xor
cmc
sub
pushl
call
pushf
mov
call
movl
movl
movb
pushf
lea
jmp
dec
test
add
bt
bt
push
sub
call
pusha
lea
jns
mov
jmp
pushl
pusha
jmp
pushf
pushf
popl
pushf
pushf
jmp
pushf
pushf
popl
pushf
jmp
stc
stc
add
pusha
pusha
pushf
mov
jmp
movl
push
movb
pushf
lea
jmp
push
pushf
repz
popl
pushf
call
jmp
pushf
pushf
mov
jmp
mov
call
push
mov
pusha
push
not
push
xchg
bswap
movsbw
pushl
xchg
call
call
pusha
pushl
popl
call
mov
cmp
mov
sub
push
inc
pushf
pushl
call
mov
push
mov
mov
movw
pushl
popl
push
jmp
call
call
mov
pushl
pusha
mov
pushl
call
jmp
call
pushf
mov
jmp
jmp
cld
push
pushf
rep
test
xadd
mov
cmp
btr
movzbw
mov
bt
bt
pushl
popf
pushf
pushf
lea
jmp
mov
jmp
pushf
popl
pushf
push
pushl
popl
pushf
push
push
lea
jmp
mov
push
call
mov
push
mov
jmp
clc
not
cmc
not
stc
jmp
movb
mov
pusha
movb
jmp
