push
call
ret
ret
test
adc
jl
ret
push
and
add
cltd
ret
rolb
stos
xchg
pop
push
cmpsl
movsl
shlb
shl
fstl
sub
dec
cmp
add
jae
out
add
and
xlat
lods
or
sub
insl
push
incl
jb
mov
jge
fists
ja
mov
jle
sbb
and
sbb
mov
test
mov
aam
bndldx
stos
lock
ja
mov
shlb
adc
mov
insl
push
push
cld
cmpsb
dec
dec
mov
push
mul
or
jp
xchg
es
mov
or
dec
jno
mulb
mov
bound
push
xchg
mov
adc
or
pop
push
es
rcrl
mov
test
jbe
out
test
push
shrl
inc
adc
lahf
hlt
sar
fistl
and
sub
and
mov
scas
sahf
loop
dec
add
push
inc
repnz
sub
jno
jecxz
popa
xor
insb
loop
mov
ds
push
adc
repnz
cmpsl
adc
push
lds
hlt
ljmp
push
xor
nop
xor
adc
pushf
adc
xchg
aam
cwtl
adc
cmpb
es
addb
orb
insb
bound
push
sbb
pop
cmp
cltd
lret
jnp
xchg
cmp
leave
and
test
ret
aam
movsl
jg
addl
xor
dec
cmp
ja
hlt
scas
stc
imul
fisubs
xlat
sahf
js
xchg
xor
dec
xorl
pop
adc
push
cmc
mov
or
dec
pop
idivl
mov
sbb
dec
leave
aad
rolb
movsl
cmpsb
and
xor
mov
subl
dec
aad
adcl
movsb
dec
mov
pop
nop
or
jnp
dec
in
xor
rcr
shrb
xchg
popa
adc
aam
clc
cmp
sbb
push
pop
test
fwait
xchg
lock
jmp
mov
rorl
shrl
insb
and
in
add
and
data16
jecxz
adc
insl
jge
shl
inc
and
xor
sahf
into
xchg
mov
jo
pushf
cmc
sahf
loop
bound
in
imul
pop
call
fisubrs
pop
add
or
or
stos
and
push
cmp
addr16
cmp
int3
mov
jecxz
lds
jb
push
fnstsw
mov
and
dec
pop
fwait
xor
das
aad
xor
jne
dec
jge
add
mov
notb
and
lods
dec
push
jne
lcall
push
jbe
lret
mov
inc
imul
stos
iret
xchg
mov
mov
mov
dec
dec
cmp
dec
shlb
loopne
jne
fcos
jne
es
jmp
jae
mov
xchg
adcb
add
or
mov
data16
clc
xchg
iret
aas
loopne
jl
cmc
and
bound
push
int
or
sbb
inc
push
jb
cmp
push
mov
cmp
out
andb
xor
push
cltd
sbb
pop
add
scas
sahf
dec
push
pop
icebp
outsl
ja
arpl
dec
inc
pop
stc
dec
jne
mov
adc
jecxz
loop
xchg
pushf
rep
push
fsubp
xor
mov
fimull
lea
aas
sub
fldcw
out
xor
or
push
pop
aas
pop
and
lcall
fistpll
lods
push
dec
sub
cmp
ljmp
outsl
mov
sarb
sub
idiv
mov
decb
xor
adc
out
enter
add
clc
repz
mov
mov
mov
sbb
xor
jns
nop
pop
pop
push
xchg
sub
or
popf
or
push
mov
test
lock
and
test
or
jnp
sarb
outsl
or
sbb
jnp
frstor
sbb
sub
repz
dec
imul
idiv
and
shrl
sbb
mov
and
das
inc
push
push
push
xlat
adc
mov
add
mov
xor
add
xchg
jae
mov
dec
movsb
mov
and
icebp
mov
orl
psrad
sbb
pop
mov
ljmp
ja
inc
cmp
sub
pop
je
xor
sub
mov
pop
xor
stc
push
sbb
mov
push
mov
lcall
and
jb
iret
xor
arpl
mov
in
cmp
jg
call
xor
cmpl
sbb
fs
pusha
push
adc
fadds
ds
outsl
ljmp
aad
negl
das
sub
or
in
shrl
mov
xchg
pop
cmp
mov
jmp
or
repz
sarb
adc
add
test
lods
or
ja
cltd
add
push
repz
dec
add
rcrl
int3
or
mov
adc
in
arpl
jns
pop
xchg
lea
je
sub
mov
outsb
dec
addr16
xchg
push
in
cmp
xor
sub
aam
ret
mov
std
jp
scas
dec
jle
or
int3
mov
sub
xor
test
fsub
rorb
dec
xchg
ror
ror
ret
stos
mov
mov
test
mov
or
jnp
in
cmpsl
xor
hlt
push
subb
mov
fs
mov
xor
inc
popf
loope
sti
in
dec
outsl
ret
fdivrl
ret
add
sub
cmpsl
in
sub
mov
mov
inc
jb
pop
hlt
ja
test
stos
pushl
lods
push
pop
jmp
push
test
pxor
and
outsl
cmp
cmp
sbb
sbb
mov
scas
sbbb
fildll
lret
ret
insl
cwtl
mov
sub
lcall
mov
mov
add
push
pop
lahf
pop
or
sub
mov
jo
jle
mov
jo
sbbl
adc
stos
pop
or
cltd
call
jle
mov
das
mov
lods
xchg
mov
cwtl
sbb
inc
push
jp
mov
negb
fsts
inc
cmp
mov
inc
pop
rol
inc
cmp
call
hlt
mov
pop
inc
xchg
mov
cwtl
nop
mov
lock
cli
adc
pop
icebp
mov
test
fld1
and
mov
shll
and
sub
out
and
or
hlt
xchg
sahf
xchg
jle
repnz
in
lcall
fisubl
subb
sub
into
xchg
pop
scas
fsubrp
cli
cld
and
inc
or
sub
sub
xor
roll
aad
imul
outsl
mov
inc
mov
push
sub
call
in
fs
cmp
incb
pop
push
sti
jbe
outsb
push
movsb
adc
nop
xchg
pop
jmp
mov
xor
mov
dec
pusha
js
push
mov
scas
outsl
out
pop
inc
lret
inc
push
js
popa
pusha
jne
into
lret
cmp
iret
fmul
hlt
mov
sahf
push
repz
cmp
xor
into
push
and
cmpsb
lock
and
push
jnp
xor
push
jb
push
jne
and
shll
xchg
out
call
cmp
pop
insb
leave
sub
or
push
repnz
aad
xchg
cmc
clc
add
mov
xlat
and
call
andl
xor
lods
push
jl
add
shrb
fimull
xor
test
cmp
ds
jge
leave
mov
cmp
xor
int3
add
insl
jae
cmp
testl
mov
insl
sub
mov
xor
pop
test
xchg
fsubl
fwait
daa
adc
int3
jp
repnz
add
rorb
aaa
cli
mov
and
add
pop
daa
ja
ficoms
cmpb
push
sti
lret
adc
mov
scas
dec
xchg
mov
aas
xorl
jno
jmp
push
push
pop
cmp
xchg
addr16
les
xchg
insb
rclb
mov
testl
jg
fst
jg
shll
push
out
cmp
jae
into
mov
outsl
and
xchg
leave
xor
pop
lock
push
out
clc
adc
mull
fstl
lret
mov
arpl
loopne
add
xchg
inc
dec
inc
push
sub
mov
pop
add
aam
mov
cmpsb
cld
imull
int3
je
xor
sbb
sti
scas
stos
xor
dec
ds
xchg
mov
add
pop
adc
push
faddl
inc
push
mov
or
adc
xchg
mov
in
in
jae
in
jne
or
js
rcrb
pop
dec
insl
xchg
mov
xlat
mov
aad
dec
xchg
push
stos
sub
popa
bnd
jp
mov
fistps
push
xchg
mov
shlb
aad
data16
jecxz
mov
mov
cltd
mov
push
hlt
add
inc
or
cmc
ret
lcall
sbb
jo
movsl
int3
adc
aaa
pop
daa
sub
pop
rclb
or
js
aas
leave
pushf
ja
dec
gs
mov
std
xchg
xchg
in
stos
pop
inc
xor
orl
mov
ljmp
xor
movsl
jmp
rorl
ret
sub
or
shlb
filds
and
xor
jae
cld
lahf
out
fs
notb
dec
jno
dec
mov
stos
loopne
dec
cli
sbb
scas
inc
xchg
mov
xchg
adc
mov
orb
jb
adc
jo
pop
xor
in
jne
aas
lock
pop
sahf
inc
mov
lock
lds
sub
dec
sbb
rclb
lea
cltd
and
push
push
lcall
lds
aas
dec
ret
imul
in
xor
cltd
movsb
test
pop
lcall
aas
data16
sbb
sbb
lea
push
push
cmp
pop
cmp
mov
jmp
in
pop
mov
inc
mov
pop
inc
mov
ja
inc
or
sub
ror
inc
int
adc
test
xor
or
inc
adc
icebp
pop
inc
sbb
inc
das
aam
ret
push
add
jo
mov
mov
xor
out
int3
jbe
jo
imul
hlt
fists
das
xchg
inc
mov
sbbb
push
xlat
lret
call
jmp
pop
sahf
mov
sbb
out
mov
mov
lcall
cltd
cmp
push
fwait
and
xchg
rol
sti
mov
repz
sahf
repnz
xchg
fisttpl
push
jb
push
add
cmp
mov
or
pop
fcomi
fdiv
fisubs
pop
jno
pusha
sahf
out
nop
sub
fwait
sub
outsl
jmp
mov
sub
jge
xor
mov
mov
mov
scas
jl
pusha
imul
pop
adc
add
push
xor
jmp
add
rcr
mov
dec
and
and
inc
shrb
sbb
mov
rcl
aad
jmp
jg
sti
cmc
not
in
sub
fs
test
les
lods
pop
push
loop
add
mov
xor
jae
cwtl
and
outsb
and
std
inc
xor
xor
into
jbe
gs
enter
aad
push
adc
cs
jae
ret
stc
lods
inc
lea
sbb
movsb
jl
xchg
add
fldt
mov
mov
jle
push
mull
test
xchg
dec
or
scas
fisubrs
push
data16
je
test
sbb
test
mov
pop
fistpl
xchg
xor
fwait
fwait
mov
fldl2e
jg
lret
loope
mov
sbb
push
pop
adc
repnz
.byte
.byte
int3
inc
.byte
and
add
rorb
fidivrs
ds
cs
shl
mov
or
addr16
out
roll
insl
cli
and
mov
fdivl
push
sub
inc
loope
pop
pushf
repnz
jae
pop
jmp
dec
bound
push
js
in
lds
mov
cmp
es
xor
fimull
inc
xchg
and
dec
push
xchg
push
mov
lock
arpl
jbe
add
mov
mov
cmpsl
movsb
imulb
mov
push
mov
int3
inc
addr16
sar
cmp
and
or
inc
pop
fwait
xlat
testl
lcall
or
sbb
inc
repnz
add
lret
or
mov
cmp
fsubl
lds
insl
gs
mov
inc
mov
pop
add
fists
sbb
das
and
shr
test
shrb
push
and
pop
adc
mov
xchg
add
sub
mov
add
mov
inc
and
fimull
out
inc
loop
or
and
mov
pop
push
hlt
pop
insb
add
jp
std
adc
xor
iret
out
in
lret
xchg
jl
aas
outsb
xor
scas
and
jp
and
popa
cmp
lahf
ds
sub
jle
popf
popa
test
inc
cmp
mov
xor
and
xlat
insb
mov
sbb
leave
sub
adc
imul
fwait
in
scas
push
in
or
jne
nop
pusha
inc
add
xchg
xlat
aaa
out
out
loopne
xchg
les
xor
mov
mov
rcl
inc
cmp
fcoms
jae
test
add
in
test
lods
mov
es
mov
lock
popf
or
pop
dec
push
pop
dec
ja
ret
jb
xchg
aam
mull
out
rcl
mov
test
fdivrp
push
ret
add
add
fisttps
test
jb
not
insl
outsl
adcb
adc
mov
pop
jmp
xchg
pop
cmpsb
mov
or
sbb
sub
push
xorb
cmp
xchg
iret
out
es
pop
ljmp
jbe
fldenv
xchg
cmpsl
jg
into
repz
dec
cmpsl
cs
rorl
inc
jbe
inc
mov
mov
push
xor
cwtl
icebp
sbb
mov
mov
cmpsb
das
and
sub
daa
outsl
mov
cmpb
mov
rcll
shlb
jne
push
std
add
inc
dec
ds
movsl
jge
pop
pop
ds
fisttpl
rcr
sub
sub
pusha
cs
outsb
pop
scas
push
add
sub
fldl
dec
pop
xor
adc
xchg
repz
addb
test
popl
int3
jecxz
cs
je
lds
adc
dec
sbb
mov
int
outsb
ret
add
nop
scas
in
pusha
dec
add
lret
rcrb
cltd
orl
test
and
adc
inc
sub
test
adc
inc
fwait
xchg
ds
push
bound
mov
sbb
jnp
adc
aad
mov
push
mov
xchg
gs
mov
lds
pop
test
or
sub
xchg
sbbb
pop
dec
es
outsb
mov
leave
je
cmpsl
jae
xor
pop
fdivr
inc
sarb
sarb
ficoms
out
cmp
leave
cmp
jl
sahf
or
in
xchg
ss
jge
push
lock
xlat
sub
cmp
pop
in
aas
negl
xor
and
pop
ljmp
sbb
add
cmpsl
loope
addr16
fadd
cmpsl
adc
mov
aam
cli
mov
rcll
cltd
test
adc
es
fs
sbb
scas
push
mov
out
mov
fstps
sub
mov
push
jge
jmp
sbb
daa
sbbl
or
add
push
inc
in
iret
pop
jo
mov
jb
pop
fistpl
arpl
and
std
adc
test
imul
add
inc
dec
aas
imul
jnp
outsl
mov
data16
and
movsl
outsl
call
mov
add
jb
je
test
mov
mov
sbb
subl
xlat
shlb
or
add
push
fcmovb
mov
dec
dec
jge
cmpl
adc
out
movsb
pop
lods
pushf
pop
jnp
loopne
adc
dec
pop
mov
add
dec
bnd
in
int3
popa
dec
push
jecxz
inc
jnp
push
fbstp
lret
enter
in
mov
dec
pusha
jno
sbb
test
and
cwtl
and
mov
popf
pop
lods
push
mov
cltd
lret
sub
cmp
inc
lret
sbb
dec
lret
mov
pop
into
and
stos
jecxz
arpl
mov
mov
rcll
or
or
pop
add
movsb
fimuls
and
jno
cmc
xchg
dec
jecxz
aas
sbb
xor
in
add
jmp
sar
aam
cmp
aam
mov
sub
aam
cmc
pop
data16
sarl
and
sub
push
xchg
dec
jno
sti
mov
ret
xacquire
mov
cld
inc
dec
cmp
cs
insl
stos
rcr
push
testl
je
sub
mov
movl
les
mov
pop
pusha
out
int3
push
adc
cmp
push
mov
adc
scas
test
fidivrs
movsl
xor
movsb
notl
sub
les
ja
dec
addl
insl
rolb
ret
inc
cmc
in
mov
add
lret
sbb
aaa
cld
pop
clc
sarl
adc
cvtpi2ps
cmpsb
stos
addl
or
sbb
mov
xchg
cmpsl
cmp
xor
inc
and
xor
xor
cmp
mov
pshufw
jbe
testb
cli
mov
or
push
pop
outsb
mov
jno
jbe
mov
es
aad
jle
testl
dec
inc
out
jg
jle
xchg
xchg
test
outsb
mov
pusha
jmp
ds
lock
push
push
mov
sub
imul
loopnew
fistpl
mov
ret
jno
sub
xchg
jb
in
inc
sti
xchg
pushf
iret
add
push
das
dec
jmp
jne
stos
dec
jg
lods
je
adc
stc
inc
mov
mov
mov
pusha
shrb
out
sbb
mov
ret
clc
sub
shlb
sub
add
iret
emms
in
dec
imul
lahf
jmp
aad
push
nop
dec
pusha
call
pop
je
insb
xlat
push
push
mov
loope
popa
inc
rcrb
adc
lds
cmp
push
adc
mov
addl
lahf
push
sbb
cmp
pop
xchg
out
mov
pop
push
mov
lds
cmpsw
or
mov
ljmp
jne
mov
inc
mov
.byte
.byte
.byte
out
adc
add
fdivl
into
xor
push
inc
add
out
popf
adc
popa
cmc
add
test
cmp
add
adc
fbstp
loopne
out
pusha
sbb
pop
pop
into
sbb
xchg
push
in
xor
inc
mov
js
icebp
out
into
xor
das
jp
push
mov
cmp
addr16
icebp
pop
mov
or
icebp
cmp
daa
ret
iret
cmp
aad
ja
mov
lcall
fisubl
or
jge
clc
addl
mov
push
and
repz
insb
sub
lret
mov
push
in
pop
gs
mov
pop
imul
lret
shll
popa
push
outsb
xchg
fisubs
dec
in
push
loope
mov
and
rcr
xlat
push
cmp
data16
lret
js
or
mov
mov
mov
mov
int3
pushf
sti
stc
filds
ficoml
movb
pop
lock
nop
inc
adc
stc
in
sti
push
imul
mov
inc
xchg
stos
dec
push
mov
rorb
repnz
xchg
and
into
test
orl
adc
js
add
or
mov
cltd
call
mov
hlt
cmpsl
je
lea
loopne
aad
test
imull
clc
xchg
jl
insl
fcomip
nop
inc
xchg
dec
std
inc
in
imul
pop
mov
lods
imul
jmp
and
xor
lock
and
mov
aad
decb
inc
dec
cld
test
mov
lret
mov
insb
jo
test
and
xor
fs
dec
dec
push
mov
int
cs
dec
xor
jo
mov
dec
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
and
call
jl
pop
mov
es
mov
cmpb
jnp
sbb
add
sub
jno
jmp
je
adc
loopne
pop
aas
or
push
mov
jmp
movsb
or
push
das
cmp
sbb
shrl
pop
add
add
adc
add
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
sbb
mov
sub
mov
mov
mov
movswl
sub
call
int
xchg
ror
into
out
cld
test
fistl
mov
cmp
jne
mov
jmp
xlat
les
cs
pop
gs
call
hlt
sbb
fidivrs
jmp
mov
lea
nop
mov
pop
jmp
cmpsl
push
std
repnz
sar
lahf
in
mov
fcmovne
xchg
das
mov
ljmp
pushf
xlat
pop
xchg
sub
in
push
stc
ret
shrl
dec
or
int3
add
cld
jbe
sub
clc
icebp
and
ljmp
xchg
adc
ss
fisubrs
mov
or
push
std
mov
aam
nop
mov
xor
scas
push
ds
jg
cltd
jle
imul
push
lea
xchg
aas
repz
pop
push
fsubrs
add
aam
pop
push
aam
pop
mov
rcrl
arpl
das
mov
dec
bound
add
dec
add
leave
test
leave
xor
mov
push
lods
jns
clc
jmp
in
addr16
inc
shlb
cmp
jae
mov
inc
push
lods
call
aaa
jg
push
lods
repnz
push
int
adc
jp
test
sub
daa
adcl
sub
adc
ret
push
fcmovb
call
pop
subb
sub
std
pop
and
sbbl
jmp
jmp
lods
ret
std
sub
fstps
or
movsb
popf
scas
mov
enter
adc
lods
ret
push
scas
mov
lods
rcrb
pushf
push
sbb
push
jmp
ret
aad
jl
or
mov
xor
add
sar
mov
cmpsl
pop
es
xchg
jp
out
mov
jb
lods
mov
ljmp
fldenv
mov
mov
sub
insl
push
rcll
mov
les
jns
xchg
in
icebp
in
daa
cmc
or
and
lret
mov
outsb
mov
sbb
loop
sbb
mov
subb
sbb
xchg
pushf
ret
ret
adc
pop
mov
cwtl
mov
xor
xor
and
jae
jmp
mov
xor
stos
xlat
loope
mov
adc
mov
gs
mov
dec
inc
ret
or
fnstenv
inc
push
outsl
iret
sti
push
movsl
sahf
jp
add
jb
inc
enter
xor
test
or
fwait
mov
imulb
aad
or
shlb
scas
rorl
sub
daa
add
into
es
mov
sub
scas
pop
outsl
and
mov
in
mov
xchg
ret
cmpl
out
fs
dec
push
imull
shl
xor
pop
xchg
ret
adc
scas
pop
push
imulb
aam
int3
or
mov
xchg
clc
scas
pop
jb
hlt
testb
scas
push
add
stc
jbe
imulb
push
data16
xlat
cli
ja
jbe
lret
iret
daa
test
arpl
shlb
or
mov
jae
test
push
jae
mov
hlt
inc
clc
scas
pop
mov
stos
cld
incl
mov
xchg
imulb
test
add
mov
in
divb
pop
cmpl
hlt
cwtl
clc
scas
pop
ljmp
lret
or
scas
sub
pop
loop
cwtl
clc
scas
pop
cmp
mov
cmpl
arpl
scas
outsl
les
sbb
cmpsl
jns
pop
push
imulb
popf
pop
scas
aam
adc
scas
sbb
scas
pop
psubq
jns
cmp
pmaddwd
pop
add
push
pop
xor
mov
repz
clc
scas
pop
es
aam
adc
scas
filds
jns
pop
push
imulb
pop
jns
pop
push
imulb
sahf
or
scas
repnz
cs
mov
dec
mov
xor
scas
sub
pop
loop
dec
clc
scas
pop
cmpl
fs
push
addr16
push
in
testb
scas
adc
iret
or
pop
in
negb
push
push
into
mov
push
imul
pop
push
imulb
out
sbbl
test
out
cli
stos
inc
mov
outsl
pop
movsb
les
insl
mov
stc
loope
enter
iret
xchg
push
movsb
les
insl
data16
pop
push
imulb
test
sub
jecxz
mov
mov
call
xor
lods
movsb
xor
push
movsb
les
insl
pop
mov
jno
mov
push
fwait
sub
dec
shlb
adc
scas
pop
adc
xor
lods
movsb
xor
push
movsb
les
insl
push
sub
leave
dec
sbb
scas
pop
adc
xor
lods
movsb
xor
push
movsb
les
insl
push
push
idivb
fwait
rol
divb
cmc
or
jl
scas
pop
push
clc
cltd
jecxz
mov
mov
call
xor
lods
movsb
mov
pop
and
or
cmp
mov
xorb
fnsave
ds
xchg
mov
addl
sti
mov
xor
into
inc
mov
sub
scas
xchg
test
xchg
fsts
mov
mov
rorb
stos
scas
sarl
scas
pop
popl
jnp
imulb
pop
or
jl
push
std
scas
rcll
push
adc
mov
stos
push
push
scas
lahf
cmc
push
add
pop
pop
aaa
sub
mov
ss
scas
imulb
scas
jp
js
stos
push
push
dec
arpl
testb
dec
stc
sub
dec
popf
push
scas
pop
outsl
dec
pop
dec
jp
pop
inc
push
xchg
div
loop
xchg
pop
cmpsb
dec
leave
lods
ficoms
ret
outsl
dec
xchg
dec
call
stos
xor
je
stos
mov
mull
daa
lds
mov
addr16
sub
jg
push
movzbl
stos
add
add
dec
cmp
dec
rorb
mov
pusha
ljmp
jne
rcll
loopne
add
xor
mov
imulb
pop
push
imulb
pop
push
imulb
pop
push
imulb
gs
scas
enter
pop
stc
scas
pop
push
imulb
push
push
imulb
pop
push
imulb
pop
push
imulb
pop
push
imulb
pop
sbb
pop
or
jecxz
push
jp
lock
stos
jp
pop
push
aad
es
bound
push
daa
dec
or
add
mov
pop
push
jmp
testl
out
lods
lret
xchg
and
inc
inc
ret
xor
cmp
jge
mov
les
ds
adc
mov
je
mov
mov
xchg
cmp
sub
pop
rcrb
mov
addr16
ret
inc
push
pop
pop
pop
and
adcl
ja
adc
pop
push
xor
xor
out
lods
sti
lock
xchg
repnz
addl
xor
pusha
cmpsl
mov
mov
push
dec
js
add
lods
adc
outsl
aam
mulb
clc
jmp
cmpsb
lret
movsb
adc
pop
jo
js
xchg
jp
xchg
mov
jbe
mov
inc
out
xlat
data16
jno
lret
movsl
cmp
std
or
sub
inc
jnp
jecxz
add
into
lret
test
movsl
cmp
sbb
test
iret
les
ss
mov
or
dec
mov
inc
in
fldl2t
adc
cmpb
dec
lock
aaa
add
sarb
dec
subb
jnp
mov
das
xor
or
mov
add
xchg
ret
jle
mov
ret
and
lods
hlt
or
lock
mov
rcrl
sub
je,pt
xor
mov
rolb
xorl
and
repnz
mov
inc
test
out
xchg
push
cmpl
add
xor
mov
xchg
fucomip
adc
in
inc
popa
fiaddl
loope
mov
cwtl
or
add
shll
cmp
dec
and
sbb
push
inc
or
mov
push
and
dec
inc
inc
push
jno
jns
ljmp
mov
mov
jl
call
sbb
xchg
and
sub
push
shll
push
bound
inc
leave
inc
loope
adc
mov
xlat
push
in
mov
nop
into
mov
inc
insb
inc
lea
out
mov
sbb
inc
push
mov
jne
xlat
fcomip
cmp
mov
daa
dec
cwtl
xor
xchg
arpl
sbbl
fistpll
push
call
mov
lahf
imul
enter
rsm
fbstp
scas
stos
jge
addr16
push
sbb
cmp
pusha
or
mov
fdivr
std
mov
push
outsb
push
inc
and
or
fdivl
mov
pusha
inc
mov
dec
lret
sub
mov
or
add
add
or
add
adc
insb
add
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
insb
add
hlt
imul
cld
insb
add
dec
insl
add
or
add
add
adc
add
add
and
add
add
sub
add
add
xor
insl
add
inc
insl
add
jg
add
jae
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
xor
cs
insb
add
jbe
jb
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
add
insl
add
add
add
shrb
add
add
add
insl
push
je
inc
push
add
jae
push
push
dec
gs
popa
addr16
add
add
gs
push
gs
imul
outsl
inc
jb
popa
je
inc
jne
add
add
jo
pop
insw
outsl
fs
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
mov
add
add
add
lods
pop
dec
mov
je
xor
movsb
xchg
push
sahf
jae
movb
xchg
and
inc
ret
in
shll
jl
in
xchg
mov
fmul
push
or
jb
pusha
std
mov
mov
mov
fwait
jo
push
jge
pop
cmp
pushf
sbb
dec
pusha
mov
stc
lds
fs
adc
jns
repz
int
lahf
jb
mulb
sbb
out
mov
rcrb
push
mov
arpl
insb
xor
dec
aas
lock
ss
mov
and
lahf
xchg
test
xlat
inc
adc
ret
insb
mov
in
dec
loope
rcl
pop
add
popa
adc
push
pop
xor
jg
movsb
jbe
xchg
and
rolb
push
jge
stos
fsubrl
lcall
or
dec
or
icebp
repz
add
idivb
fcmovnu
push
cli
mov
xchg
insl
cs
push
lret
sub
mov
cltd
adc
outsb
ja
icebp
frstor
leave
call
dec
pusha
rcrl
mov
mov
sub
xchg
repnz
in
jns
insb
mov
xor
cwtl
dec
scas
add
jle
cltd
test
mov
inc
gs
xchg
fsubrl
add
dec
cmp
pop
mov
inc
mov
sbb
xchg
mov
rolb
pop
mov
add
dec
and
fidivrl
repnz
rol
dec
xor
cmpsb
lahf
xchg
ficomps
mov
lods
sub
dec
add
int
adc
cmp
push
in
insl
xchg
adc
stos
or
sub
lods
rorb
jb
xor
repnz
jae
sbb
xorb
push
int
lret
cmp
lea
mov
add
push
or
mov
or
mov
cltd
cltd
adc
xchg
mov
inc
clc
mov
mov
dec
mulb
insl
lret
push
ljmp
hlt
hlt
imul
pop
xor
add
mov
mov
push
xor
jne
dec
xchg
mov
sbb
fildll
ficoms
loope
dec
js
aad
sbbl
ret
idivl
fbstp
cli
push
mov
or
sub
mov
aam
sub
sub
mov
dec
mov
movsb
aam
mov
mov
sti
dec
mov
jae
mov
aas
dec
adc
xchg
jb
xchg
dec
lcall
xor
imul
inc
mov
or
mov
adc
cmp
jg
lods
jne
stos
inc
jae
mov
bound
rcrl
push
or
push
xor
mov
cmp
aam
ss
push
sti
sub
jle
pop
adc
pop
js
xlat
and
in
sbb
sbb
dec
jb
adc
pop
mov
add
add
lds
fimull
sti
inc
pusha
inc
divl
dec
xchg
xrelease
stos
decb
cmp
cmp
mov
dec
sub
dec
add
xchg
pop
sub
dec
outsl
fstl
xor
nop
sbb
jb
xchg
jg
shrl
xchg
jo
das
lret
adc
lcall
ficomps
and
lret
divl
adc
push
insl
mov
sar
xor
xchg
mov
or
stos
mov
repz
sbb
mov
add
inc
push
loopne
mov
push
add
sahf
out
cld
jmp
push
lods
fisttpll
lea
inc
jb
adc
ja
push
jle
push
gs
jl
inc
stos
fxch
sahf
jnp
scas
mov
pushf
insb
out
and
cli
push
sub
cmp
inc
int
jl
aam
sbb
call
loope
aaa
sub
cwtl
mov
mov
repz
sar
in
fistpll
or
and
xorb
insl
lret
movsb
cs
mov
push
rorb
mov
mov
gs
mov
xor
or
dec
sub
fildll
int3
aas
lea
movsb
xchg
stos
nop
pop
aad
aaa
js
mov
stc
sbb
addb
pop
pop
imul
add
nop
mov
or
sbb
ret
jno
xor
push
mov
xchg
sbb
stos
mov
in
dec
xor
daa
inc
add
into
loopne
adc
push
or
enter
shll
hlt
push
xchg
out
push
insb
pop
sbbb
insl
xchg
jl
push
dec
jle
dec
aam
add
out
sbb
xor
gs
test
adc
fistl
mov
sti
cmpsb
test
mov
icebp
inc
pop
fisttpl
cli
sbb
jmp
add
adc
in
jg
mov
lcall
loopw
inc
repnz
and
add
test
ds
jae
inc
inc
lcall
mov
std
inc
out
sub
es
or
in
test
push
jno
xlat
ds
xor
jno
iret
push
addr16
pop
test
mov
inc
sti
int3
xchg
imul
and
sbb
dec
mov
dec
jmp
dec
mov
jg
lods
test
stos
insl
insb
cmp
stc
js
and
sub
mov
mov
lcall
test
jge
scas
jle
mov
imul
xlat
mov
mov
iret
xor
pop
data16
cmpsb
cmpsb
or
mov
ret
lcall
in
or
popa
enter
sbb
mov
imulb
inc
rcr
push
push
mov
test
jecxz
arpl
or
push
repz
xor
xchg
and
pop
in
push
push
lds
dec
fwait
call
arpl
pop
pop
inc
sub
push
pop
push
jnp
inc
lea
cld
xchg
mov
fwait
nop
or
mov
testl
sbb
push
push
lods
pop
push
out
mov
scas
sub
pushl
mov
outsb
idivb
addb
dec
adc
gs
sbb
xor
and
loope
testl
loope,pt
ret
in
ljmp
jp
pop
xchg
repz
mov
fcmovne
and
add
jne
push
xor
clc
cmc
cwtl
xchg
jecxz
cli
in
dec
gs
jns
daa
push
mov
cmpsl
mov
mov
mov
les
imul
mov
lret
mov
dec
push
pushl
mov
sub
push
lods
inc
loopne
ret
insb
cs
push
sub
repz
push
push
xchg
fldcw
push
xor
and
lahf
ss
mov
int3
jecxz
mov
push
add
enter
les
xchg
dec
adc
inc
in
cmpsb
in
test
push
jae
adc
sub
cmc
popa
addl
or
add
and
in
in
fadd
sub
pop
pop
bound
sub
scas
lock
jns
adc
adcl
dec
in
aad
gs
dec
sti
or
ss
adc
mov
adc
mov
jmp
and
pop
rcrb
aad
add
nop
push
mov
cmpsl
shrb
mov
jne
into
sbb
ret
adc
mov
rcrb
jae
aas
test
dec
cwtl
push
mov
test
dec
popf
mov
stc
fiaddl
jge
pop
adc
jg
dec
jne
mov
xchg
mov
mov
mov
test
and
xchg
fimuls
and
test
push
cld
inc
iret
mov
xor
rorb
popf
or
xor
cmpsb
and
xor
das
test
cmp
mov
add
cs
cmpb
mov
sahf
loope
add
ljmp
mov
xchg
jns
mov
scas
push
out
sbb
inc
dec
rolb
lods
addl
add
xchg
and
adc
cwtl
and
stos
cmp
inc
imul
std
mov
dec
mov
cmpsl
bound
xchg
cmpsb
cmp
mov
jle
xchg
pop
jecxz
movlps
push
loop
bnd
xchg
ss
test
arpl
into
pop
adc
sbb
cmpl
ja
xor
in
mov
adc
stos
adc
out
add
sub
cmp
pop
mov
inc
inc
out
and
test
jno
pop
sbb
in
adc
rcrb
daa
shll
fmull
ret
mov
pusha
and
repnz
lret
or
rorb
push
add
ja
mov
lret
ret
pop
sarl
and
push
or
cmpsb
sub
mov
mov
inc
enter
or
jg
adc
aaa
xchg
stc
mov
rcr
xchg
sub
lods
and
out
inc
jg
mov
sarb
test
cmc
les
cli
jg
or
mov
loope
das
inc
add
push
pop
push
push
mov
pop
loop
ljmp
mov
jns
xor
cmp
pushl
jg
jns
mov
dec
xchg
cmpsb
jmp
adc
movsl
hlt
mov
xchg
mov
add
lods
xchg
pusha
imul
mov
inc
inc
mov
in
dec
mov
les
repnz
imul
out
pop
cs
xor
and
mov
mov
insl
pushf
sub
imul
xlat
gs
sbb
mov
fstl
call
dec
mov
cs
sub
xor
adc
or
mov
outsb
das
sub
dec
jnp
dec
mov
push
xorl
lahf
or
mov
cmp
inc
imul
sub
cs
shrb
cli
cwtl
fisubs
arpl
pop
and
ret
mov
xorb
loopne
mov
hlt
push
fildl
fnstenv
adc
notl
push
je
adc
test
lods
int3
add
fisubrs
in
or
outsl
sub
cld
ljmp
or
mov
repz
adcl
int3
xchg
dec
sbb
and
lahf
lcall
sub
inc
mov
mov
sti
mov
mov
loop
aas
xor
sub
push
aas
scas
shrl
int
mov
jmp
or
in
stos
mov
aad
add
ret
ret
cmp
sub
data16
sub
inc
push
mov
imul
in
push
jmp
or
data16
mov
fnstenv
idivb
lret
pop
cmp
cmpsb
gs
or
in
mov
dec
push
adc
xchg
adc
pop
adc
adc
xchg
push
sub
cmc
inc
jbe
data16
in
push
mov
cmp
icebp
cltd
cwtl
fwait
movb
icebp
outsb
jg
mov
call
pop
sub
out
and
or
fidivl
sbb
clc
sahf
shlb
push
jmp
daa
pop
adc
test
pop
repnz
pop
pusha
sbb
dec
popa
xchg
fwait
sbb
sub
shll
sarl
xchg
inc
je
sub
in
mov
shl
imul
xor
pop
cmp
push
inc
cmc
mov
or
pop
xchg
mov
int3
lret
js
mov
aam
jmp
sbbl
dec
fistpl
xchg
push
mov
notb
cltd
mov
xchg
adc
and
and
ss
and
push
push
mov
push
roll
fs
sbb
inc
cld
pop
xor
adc
lea
mov
fiadds
push
lock
lods
movsl
in
jno
jge
into
adc
lds
mov
mov
aad
aas
xor
push
add
into
mov
and
xor
out
pop
fsubs
scas
ficomps
cmpl
aad
dec
mull
and
insb
push
hlt
push
ja
inc
mov
hlt
ljmp
cmp
xchg
jns
cld
or
sbb
dec
push
les
xchg
cmpsl
enter
dec
mov
and
or
scas
movl
movsb
mov
xor
adc
outsb
inc
and
out
dec
sbb
sbb
into
aam
rorb
jg
es
fildll
xchg
cmc
sub
mov
cmp
jnp
mov
push
pop
pop
loopne
lock
cmp
push
add
subb
outsl
out
push
sahf
notl
aad
and
jae
xlat
pop
mov
xchg
jp
out
out
pop
push
sbb
popa
shll
xchg
mov
push
push
sub
pop
xchg
cmpb
mov
jmp
add
out
inc
ja
sarl
testb
push
fbstp
addl
mov
sbb
stos
addr16
push
pop
stc
loope
shll
push
or
or
jg
stos
lret
add
dec
test
and
aas
pop
frstor
push
xor
mov
adc
loopne
mov
jmp
pop
daa
adc
leave
and
push
cltd
je
insb
mov
xor
scas
and
aad
and
insl
adcb
imul
leave
sub
dec
aas
jl
pop
cmp
mov
fistpll
mov
push
xorb
nop
fiadds
or
jne
cmp
fwait
and
test
adc
stos
mov
sahf
mov
bound
loopne
mov
rorl
sbb
dec
lret
inc
pop
push
and
aam
mov
jge
push
pop
dec
test
in
into
cmp
jbe
pop
pop
and
inc
xchg
rorl
cli
test
scas
icebp
push
fldenv
cmc
cmp
movsl
push
add
pusha
enter
inc
cpuid
xchg
jo
repz
roll
push
cs
je
ret
int
mov
ror
jbe
dec
xchg
and
jne
and
stc
and
out
bound
fisttps
in
pop
push
mov
cli
dec
adc
fstps
xor
add
jb
xor
xchg
out
or
mov
add
or
jecxz
out
insb
testl
push
push
add
add
ljmp
sti
and
mov
bound
push
push
repz
test
mov
inc
sahf
repz
test
stos
inc
push
popf
jmp
sarl
pop
lods
dec
mov
ret
nop
mov
and
jg
out
mov
inc
dec
jbe
movsl
inc
adc
xchg
test
scas
sarl
jl
mov
inc
loope
mov
addr16
add
movsb
pop
sbb
scas
outsb
into
cltd
mov
inc
lahf
ja
mov
into
mov
insb
sbb
rcrl
std
inc
dec
imulb
push
popf
push
test
add
int3
mov
sbb
add
dec
rorl
jecxz
test
pop
cmp
or
sahf
bnd
in
imul
idivl
pusha
out
jae
sbb
adc
addl
test
cmp
hlt
lds
mov
insb
imul
jo
movsl
testb
ret
sbb
and
and
adc
inc
pop
jl
cmp
pop
jae
cmpsl
pop
mov
xchg
add
pop
dec
stc
xchg
mov
je
pop
xchg
sarl
enter
imul
out
or
lods
aaa
shll
lods
int3
sub
ror
fwait
call
push
inc
jbe
inc
xor
push
out
sbb
mov
sub
ret
in
dec
sti
movsb
inc
add
out
sub
or
sub
rep
movsl
test
dec
add
in
decl
leave
test
mov
hlt
in
cmp
ja
push
divb
lds
cmpsb
mov
hlt
je
inc
mov
jl
dec
add
push
add
ja
mov
add
jno
mov
cmp
xor
int
ret
cmpsl
inc
fcomp
adc
int3
dec
pushf
xchg
and
adc
push
sub
imul
pop
imul
lock
sbb
test
fadd
jns
dec
aad
mov
push
xor
xchg
xchg
pop
fs
sbb
cltd
mov
nop
pop
sti
out
cmpsl
mov
out
cwtl
cmp
in
ret
cs
mov
iret
and
es
cmp
dec
jo
and
mov
xchg
pop
inc
xchg
popa
push
rcrl
loope
cmp
sbb
xlat
or
xchg
test
mov
cmp
lahf
inc
test
xlat
sub
inc
fs
mov
rcrb
push
in
sbb
adc
sbb
insb
or
pop
mov
fwait
das
insb
into
out
jne
adc
faddl
jmp
pop
sbb
test
fisubl
xorb
pop
sbb
shr
js
hlt
std
cmp
jle
roll
jecxz
dec
push
pop
mov
mov
outsl
xor
inc
xchg
adc
mov
adc
add
inc
mov
dec
fnsave
dec
daa
push
stc
test
mov
es
nop
popf
stc
bound
push
shrb
pop
daa
sbb
lcall
adc
push
jg
mov
lcall
mov
pavgw
inc
mov
sbb
fsub
pop
cmp
dec
pushf
test
popa
call
cmp
inc
bound
inc
mov
jbe
jns
dec
mov
add
xchg
fnsave
dec
ja
sahf
mov
in
test
mov
push
push
xchg
push
mov
stos
and
sbb
pushf
ss
mov
int
movsb
packssdw
and
in
pop
jnp
sub
les
call
outsb
daa
lea
stc
sub
ss
mov
aad
push
into
sbb
into
and
mov
or
mov
inc
leave
sub
mov
iret
mulb
leave
data16
mov
iret
or
sub
mov
mov
in
jno
mov
mov
mov
lods
in
jae
daa
imul
xchg
adc
cmpl
push
movsl
xchg
out
sbb
cmp
int
popf
mov
sbb
mov
fsts
outsb
fnsave
push
mov
lret
fistpl
push
shll
inc
int
leave
and
outsl
addr16
movsl
scas
pusha
inc
jno
movb
or
in
jae
hlt
outsb
jnp
xchg
push
push
or
fdivrl
mov
in
mov
jl
xor
sbb
cmp
mov
out
push
out
sbb
sahf
out
or
bound
mov
cmpsb
stos
adc
rclb
ficoml
xchg
xor
xor
jmp
or
sti
xor
or
and
inc
dec
or
movsb
inc
out
xor
cmp
leave
imul
mov
xchg
mov
pop
mov
cmpsb
dec
loop
cli
icebp
sbb
das
mov
pop
cmp
dec
in
xchg
stos
inc
mov
fstl
pop
jo
push
and
or
or
xchg
pop
mov
stc
sbb
fs
int3
sbb
jno
mov
push
pushf
arpl
lahf
dec
add
cli
aam
mov
pop
iret
add
push
ja
jl
lahf
or
outsl
cmpsb
mov
insb
mov
mov
jge
push
iret
shlb
fdivs
lods
cmp
cli
clc
stc
sub
push
lcall
or
rcl
mov
ret
stos
push
or
sub
leave
add
in
test
dec
dec
add
dec
xor
test
std
push
fstpt
jb
js
xor
add
jmp
sbb
loop
jmp
or
aaa
pop
leave
movsb
xor
pop
lcall
mov
mov
pop
ds
dec
push
pop
cld
push
inc
or
call
sub
dec
xchg
cmp
mov
push
daa
out
xor
imul
sub
adc
test
jno
sub
cmp
xlat
lret
rcrl
sub
push
mov
insb
mov
push
inc
popa
inc
popa
jle
mov
sbb
sahf
es
jnp
pop
stos
add
xor
aaa
andl
adc
adc
or
push
sub
aaa
bnd
es
inc
leave
fdivp
out
hlt
loopne
pop
mov
rol
sub
mov
push
push
lcall
pop
test
add
and
push
mov
lea
lret
jnp
adc
shlb
mov
cmpsl
push
pop
mov
std
test
sbb
push
sbb
daa
adc
and
sub
mov
xchg
cmp
xchg
pop
sarb
in
repnz
insl
mov
test
pop
add
popa
add
and
dec
push
decb
pop
jns
in
pusha
outsb
jns
jle
call
mov
lea
or
maskmovq
mov
cld
adc
lret
imul
cmp
sbb
sub
ja
enter
roll
cwtl
arpl
icebp
lcall
outsb
mov
test
fmuls
inc
dec
cltd
fwait
pop
or
xor
out
fists
sub
mov
mov
mov
pushf
ljmp
push
jle
and
xor
mov
cmp
or
mov
out
ret
xor
dec
dec
dec
popa
sub
jno
sti
mov
xor
pushf
mov
sub
or
out
and
out
insl
rcl
std
jbe
cmp
and
loopne
lea
imul
imul
push
cs
enter
pusha
pop
gs
pop
scas
mov
scas
js
xchg
pop
ficoms
jmp
sub
adc
xor
fwait
shlb
sbb
aas
cld
xchg
fnstcw
add
insb
inc
in
test
repz
jbe
inc
inc
jnp
test
cmp
mov
or
push
pop
mov
jns
dec
dec
xor
mov
leave
push
xchg
mov
aas
hlt
jecxz
loop
sub
and
lods
inc
or
mov
xor
pop
scas
fildl
dec
jb
popf
jg
mov
js
in
popf
jl
jae
mov
subb
or
or
rcl
leave
mov
cmpsl
xor
jle
or
ss
neg
cmp
lcall
and
insl
sbbl
clc
lcall
mov
jp
mov
sub
inc
pop
sbb
mov
xor
sti
inc
aas
xchg
inc
and
sbb
test
aaa
dec
inc
ffreep
in
ss
fwait
nop
dec
xchg
sarl
lods
and
push
pushf
cltd
lret
pop
push
in
mov
push
mov
icebp
add
dec
sbbb
hlt
repnz
sub
cld
or
push
jb
movsl
mov
jne
add
xchg
dec
add
dec
pop
jbe
movsl
inc
mov
add
or
mov
loope
xchg
loopne
adc
shrb
inc
xchg
mov
sbb
sti
adc
xor
cmpsl
cmp
negb
icebp
and
cli
sub
push
pusha
jo
mov
add
and
cwtl
sahf
dec
adc
dec
mov
add
sbb
sub
adc
or
insb
shlb
imul
rorl
ret
sub
push
inc
mov
cmp
adc
insl
sbb
xchg
stc
shrb
push
out
mov
loope
mov
addr16
in
aad
xchg
rcrl
pop
mov
adc
xchg
jle
jp
outsl
cltd
out
stc
arpl
mov
cld
pandn
daa
pop
test
jno
xchg
inc
sahf
dec
mov
adc
mov
push
pop
jae
fldt
mov
dec
xor
xlat
mov
jno
xchg
or
xor
addr16
sbb
stos
mov
dec
insb
and
call
loop
mov
jbe
jnp
cwtl
cwtl
aad
mov
scas
cmp
sub
sarb
fidivrl
push
sub
inc
test
lds
fisubl
mov
or
xorb
inc
mov
rclb
dec
lods
shrb
jnp
cltd
pop
lret
or
xchg
or
mov
xchg
faddp
test
xchg
iret
enter
aas
incb
lock
pop
mov
fsts
jmp
lcall
mov
pop
ret
jae
sbb
cmc
or
push
pop
add
mov
lret
push
lods
inc
popf
jmp
push
in
test
xlat
mov
and
pop
push
mov
leave
movsl
and
or
pop
lock
loop
cwtl
mov
ffreep
adc
mov
mov
and
arpl
popf
dec
cmp
jne
pop
dec
xchg
jae
hlt
cmpl
push
cmpsl
test
xchg
or
inc
mov
insl
ret
xlat
mov
movl
xchg
imul
icebp
inc
push
pop
ss
jp
adc
enter
dec
icebp
jmp
mov
lods
ss
fadds
lock
sub
sub
cmpl
cwtl
pop
push
loopne
cvtps2pd
mov
aam
insb
and
loope
ret
call
call
push
test
sub
push
sbb
xor
xchg
dec
lret
aam
aad
test
adc
je
lahf
inc
xchg
mov
sub
loop
push
imul
aas
cld
fwait
dec
psllq
movsl
fildll
mov
sub
in
rcr
or
sub
fiadds
xorb
es
sbb
les
and
xor
je
xor
or
adc
aas
xor
stos
lea
xor
jecxz
add
sub
bound
rorl
popf
mull
mov
mov
mov
lods
test
jle
jmp
mov
inc
movsb
ret
dec
ja
nop
dec
in
imul
cli
das
hlt
inc
arpl
mov
fwait
lahf
cmp
jmp
iret
and
pop
ds
int
rorb
fcompl
mov
divl
pop
out
loope
arpl
rclb
fs
out
dec
dec
cmpsb
mov
test
psllw
push
ljmp
mov
insl
mov
xor
cwtl
or
pop
push
scas
loope
push
inc
xchg
data16
loope
out
es
stc
and
and
repz
in
push
loop
push
jle
inc
es
add
xchg
shr
inc
insb
enter
in
lods
mov
inc
imul
pop
jbe
push
sbb
insb
insb
data16
imul
lret
and
pop
add
add
fs
es
das
jp
push
sarl
jle
std
or
ja
and
xor
aam
sarb
and
sahf
xchg
cmp
fs
ret
sub
adc
and
ret
bound
fdivrs
aam
and
imul
mov
sbb
xchg
test
int
pop
adc
cmp
mov
inc
jl
add
fdivs
dec
dec
movsl
loope
popa
ljmp
fimuls
out
pop
out
popa
xchg
int3
rorl
jmp
pushf
out
enter
insb
subl
push
gs
jp
push
xor
loop
jg
ret
cmp
iret
jg
in
sbb
stos
leave
xchg
mov
scas
or
fmul
icebp
inc
or
dec
dec
mov
jne
jbe
int3
mov
inc
test
add
xchg
pop
inc
adc
xchg
lret
mov
cwtl
cmc
mov
xor
out
movsb
mov
fs
inc
mov
dec
outsb
cs
daa
outsl
pop
aas
xchg
outsl
test
outsb
adcl
into
aad
aam
push
les
lcall
mov
fisubrl
adc
mov
into
pop
out
leave
test
mov
push
sub
or
sub
sbb
inc
aas
outsb
mov
fsubrl
loope
mov
sub
xor
and
es
dec
pop
mov
arpl
stos
imul
ss
popa
mov
pop
fs
xchg
ja
add
lret
movsl
mov
movl
iret
daa
stos
in
pop
and
lret
rclb
aas
loope
sub
sub
pop
enter
mov
push
movsb
in
loope
push
subb
lock
stos
std
insb
fdivrl
xlat
push
std
pop
inc
addl
or
pop
inc
mov
mov
cmc
add
enter
lock
cmp
pop
es
mov
add
lods
shl
cmp
scas
sbb
insl
sub
fwait
pusha
subl
add
es
aas
mov
pop
jae
or
in
mov
ss
pop
sbb
outsb
ds
cmp
mov
xchg
andb
fdiv
inc
jnp
ljmp
mov
push
rcll
insl
jl
imul
mov
test
outsl
pop
push
aaa
arpl
jns
mov
outsb
push
fisubl
push
outsb
cmp
sbb
mul
mov
push
push
sbb
push
pop
push
je
fimuls
dec
dec
testb
xor
imul
xor
lds
sub
cmp
das
adc
sarl
inc
sbb
adc
and
fstpt
daa
scas
in
or
add
push
mov
push
lcall
cmp
mov
inc
stc
push
pop
aaa
movsb
outsb
jmp
enter
adc
dec
cmp
jge
in
xor
je
loopne
cmp
dec
inc
jl
mov
and
movsl
push
xchg
popa
imul
fwait
stc
xlat
xchg
leave
mov
sti
sub
fsts
cltd
in
out
addr16
in
jne
lods
hlt
jo
mov
aam
rorb
shlb
xor
shlb
ret
adc
push
adc
pop
scas
addb
mov
and
clc
mov
jo
cwtl
dec
mov
pop
popf
push
push
jne
nop
cmpsl
sub
mov
icebp
xor
aam
movsb
mov
imul
mov
fs
jae
mov
nop
enter
mov
sbb
int
cmpsb
dec
arpl
aad
idiv
sub
or
push
fmuls
pop
xor
jnp
es
cwtl
stos
mov
fmull
repz
mov
pop
out
lods
mov
sub
xchg
insb
pusha
dec
cwtl
pop
repnz
add
push
add
sub
test
xor
mov
loop
and
or
dec
test
fdiv
out
mov
fdivs
out
sti
ds
push
push
imul
jle
sbb
ret
mov
das
inc
int3
jmp
out
addr16
sbb
lods
cmp
sarb
or
xchg
in
daa
add
stos
shr
out
ror
sbb
pop
out
mov
and
xor
test
cmp
inc
adc
pop
mov
icebp
mov
xchg
xchg
popf
dec
mull
inc
inc
pop
jge
sbbb
cmp
cld
push
push
jg
pop
fistl
je
repnz
pop
leave
aam
in
pop
add
mov
push
add
gs
sub
sub
mov
mov
jg
stos
das
pusha
mov
lahf
or
mov
nop
fucomp
hlt
and
lock
test
mov
sub
dec
adc
cltd
ud2
cmp
cmp
hlt
popa
adcb
es
dec
dec
lods
pop
in
push
adc
ficoml
cmp
sub
push
pop
push
mov
out
jae
mov
gs
addb
xor
jnp
movsl
mov
pop
jmp
mov
sub
pop
repz
ljmp
es
inc
fcomps
dec
jg
in
xchg
mov
fdivrl
andl
inc
outsb
test
jg
mov
push
dec
xchg
xchg
cmc
std
nop
int3
lods
jb
imul
int3
loope
dec
lcall
repnz
add
and
ljmp
dec
lret
lcall
sbb
sbb
jecxz
or
int3
fisttpll
mov
lahf
dec
sti
add
push
xchg
repnz
dec
xor
jecxz
xor
ds
dec
outsb
pop
test
scas
lds
lret
pop
inc
imul
insl
in
popa
xchg
enter
loope
mov
mov
or
cli
fcomps
and
lcall
and
jns
adc
lcall
pop
mov
xchg
icebp
aaa
lahf
ret
or
jo
jns
test
dec
jmp
and
mov
idivl
ret
enter
enter
lea
mov
fsubrp
cs
pushf
xchg
out
sub
mov
push
push
jl
imul
push
adc
mulb
mov
test
jne
arpl
int3
aam
sub
cmpl
dec
in
das
test
imull
push
push
fidivs
jge
pop
jne
clc
inc
js
sbb
mov
leave
push
stos
outsl
sub
jne
dec
jl
loope
cltd
aam
jp
lods
movsb
test
subb
shrl
icebp
mov
loope
pop
sbb
test
sti
sti
cmp
aad
add
cmp
call
in
fidivrl
pop
xlat
imul
lock
dec
or
pop
call
cwtl
pop
aad
pushf
mov
das
insl
dec
mov
push
mov
icebp
cmc
mov
fidivl
mulb
test
and
mov
xchg
imul
push
stos
call
cmp
fsts
mov
inc
cmpl
or
insl
icebp
int
fldt
xchg
ficompl
inc
or
pop
xchg
fdivs
jbe
imul
adc
dec
mov
imul
push
ja
out
out
adc
sub
imul
mov
insl
gs
mov
ljmp
add
enter
jp
xchg
mov
push
faddl
sbb
lock
dec
mov
pop
rcll
sub
lock
push
jge
stc
test
push
sbb
imul
loope
fdiv
test
pop
in
pusha
and
pop
leave
xor
fnstenv
mov
and
lods
ret
xor
mov
fwait
call
shlb
sub
xchg
push
popa
jmp
movsb
mov
inc
jecxz
or
jecxz
sub
pop
addsubps
aam
in
fwait
mov
pusha
in
ret
and
sahf
push
sbb
jmp
push
cmp
add
push
sbb
or
jnp
outsl
adcb
cmpsl
jo
outsb
mov
loop
ror
je
adc
pop
std
jmp
pop
out
mov
pop
jbe
mov
shlb
arpl
mov
loopne
lock
adc
sarb
shll
jne
enter
mov
pop
ja
cld
loop
sti
in
cltd
jns
ss
mov
and
mov
aaa
push
jmp
and
mov
or
outsl
stc
xor
xchg
gs
pop
or
out
push
lea
pop
add
lcall
cmc
mov
push
cmp
jns
jecxz
imul
js
fisubs
mov
movsl
xor
sub
mov
pop
jno
xchg
xchg
pusha
das
icebp
ds
jge
inc
faddp
movsl
in
push
sub
cmpsl
cmpsb
shrw
and
icebp
xchg
jle
ret
repz
fidivs
mov
mov
scas
xchg
cwtl
push
repnz
push
inc
leave
lock
jp
dec
arpl
inc
jp
shlb
or
or
mov
lods
ss
scas
scas
mov
in
ja
inc
push
pop
or
clc
dec
leave
adc
and
aad
test
out
repz
dec
cmpsl
mull
loopne
pop
dec
pop
jle
outsl
pop
test
and
sub
sub
xchg
andl
stc
popa
xchg
sbb
pcmpgtd
ret
push
inc
push
mov
cmpb
lret
jp
mov
jns
movsl
adc
rolb
jns
mov
jp
fdivr
repz
and
stos
dec
cmp
lret
dec
pop
cmpsl
pusha
movsl
mov
xor
dec
xchg
loop
jle
sub
ja
add
mov
std
testb
mov
xorl
stos
xorl
iret
mov
sbb
xor
inc
pop
or
sbb
fldl
pop
les
or
das
lcall
fisubrl
cmp
sub
sbb
inc
pop
lods
add
inc
js
cwtl
sub
sub
in
shll
data16
jb
pop
fwait
test
add
imul
jle
jp
ret
fsubrs
lret
sub
lods
rcrb
push
ljmp
cmpsb
pop
out
sub
fldt
xchg
sbb
add
cmp
xor
pop
push
lea
daa
mov
imul
mov
inc
cmp
lods
mov
out
cwtl
fnsave
into
ret
jb
xlat
jmp
dec
fildll
add
out
cmp
out
cltd
xor
jle
dec
in
outsb
jbe
mov
cli
or
sbb
mov
mov
ja
fwait
jmp
push
cmc
stos
stc
pushf
or
sub
or
jmp
outsb
icebp
push
add
outsl
fmull
icebp
xchg
jbe
hlt
and
inc
mov
dec
fldenv
ljmp
mov
sub
mov
fbstp
inc
sbb
les
jae
push
xchg
insl
out
jl
ja
xor
sahf
cmp
xor
lea
loopne
or
pop
divb
lret
xor
out
xchg
add
fiadds
or
inc
mov
push
mov
sbb
and
dec
inc
imul
dec
xor
mov
ds
and
lea
push
pop
inc
stos
pop
ror
in
subb
jnp
lds
push
sub
cs
andl
insb
stos
jo
outsl
mov
and
test
mov
cmp
ljmp
jecxz
mov
ficomps
insb
clc
sbb
mov
jp
fsubrp
mov
jnp
dec
jno
xchg
pop
sub
jbe
icebp
mov
int
pop
pop
or
rol
cli
std
lret
shlb
out
in
negb
lds
lahf
jle
iret
cmp
mov
aam
adc
sahf
mov
mov
mov
xlat
hlt
inc
xchg
jl
aam
cmpsl
scas
inc
push
lahf
clc
ror
pop
mov
mov
movsl
dec
add
cmp
pop
and
add
cmp
cmp
or
xchg
jg
push
lret
cmc
sahf
xchg
sti
xor
adc
push
mov
cld
and
add
lcall
push
sbb
imul
ljmp
shrl
pop
sti
xchg
sti
jmp
xor
enter
inc
sub
aaa
pushf
aam
into
andl
mov
das
jl
push
enter
sub
cs
icebp
fldenv
andl
imul
rorb
nop
mov
and
sahf
jecxz
rclb
fidivl
pop
adc
adc
in
inc
cmpsl
decb
cmp
adc
adc
out
dec
pusha
cld
or
push
jb
lock
fidivl
mov
sbb
cmp
pop
xor
clc
push
pop
inc
dec
out
dec
popa
fsubs
test
add
and
mov
inc
dec
jbe
lahf
lods
xor
push
mov
xchg
movsl
adc
push
stos
or
push
dec
popa
fwait
cmp
ljmp
inc
xor
xchg
out
jne,pt
or
fdivr
pop
lea
and
or
aas
dec
or
pop
and
out
in
fucom
xor
xchg
js
fidivrs
dec
pop
dec
in
loope
adc
scas
addl
pop
mov
insl
push
xchg
ret
idivl
in
pop
cli
cli
mov
xor
push
test
cmp
push
inc
daa
or
dec
jb
ds
lahf
dec
in
jg
pop
sbb
dec
es
mov
push
sub
pop
adc
mov
jo
cmp
pop
mov
add
loopne
add
loopne
mov
xchg
xchg
jp
sub
cs
out
cwtl
enter
jb
dec
push
popa
sahf
fs
adc
pop
shrb
mov
cmp
ds
mov
stc
xlat
sbb
pop
jle
insb
lret
loopne
push
mov
sbb
cmpsb
mov
sub
aam
stc
imul
cmp
dec
mov
xor
fmul
std
xor
inc
sub
and
mov
xchg
sbb
cwtl
pop
scas
and
dec
hlt
sbb
push
dec
add
lods
xchg
mov
xchg
imul
xor
lahf
mov
pop
cs
rcrl
movsb
push
push
jl
std
ficomps
push
and
mov
cs
jmp
cs
mov
mov
je
sub
mov
xchg
aaa
sbb
hlt
jno
jbe
gs
fsubs
ret
pusha
xorb
out
in
lret
ss
cli
cmp
push
in
lcall
adc
or
lcall
out
inc
xchg
test
shrl
mov
fimull
lods
xor
sbb
push
xchg
jl
adc
negb
jno
cmpsb
cs
sbb
push
jno
and
daa
insl
cwtl
shrl
imul
push
cmp
jecxz
cmpsb
movsl
push
scas
xchg
cmp
and
lret
insb
inc
imul
loop
out
inc
sbb
mov
dec
in
pop
cmp
adc
or
adc
test
push
or
jl
fsubs
or
movsb
inc
xchg
cmpsl
scas
int
pop
or
cmp
cwtl
sar
jne
jns
stos
mov
outsl
inc
push
filds
insb
xchg
loop
xor
arpl
data16
pusha
or
inc
js
test
aaa
xor
jae
jb
add
out
pop
call
roll
adc
shlb
sbb
push
fistpl
pop
dec
aad
addr16
pop
xchg
out
lds
push
icebp
xchg
loope
xchg
lods
shr
test
aas
xlat
sbb
pop
cmp
and
mov
out
xor
repz
inc
nop
and
aaa
test
push
sbb
lea
inc
test
aam
lock
lret
pop
xchg
xchg
aam
mov
jne
loop
push
fistpll
andl
cmp
mov
fs
insl
test
outsb
in
pop
inc
add
dec
cmp
xchg
jnp
mov
sahf
into
rcrl
xchg
repnz
adc
xor
and
xlat
insb
adc
xor
sub
pop
sub
cmpsl
pop
ljmp
push
pop
and
jmp
fsubrp
add
cltd
xchg
in
mov
cli
add
pop
or
rcrb
cmp
enter
sbb
xor
scas
cmp
mov
js,pt
jo
pop
jge
rolb
and
mov
repz
mov
jnp
and
sbb
hlt
cmp
adc
lock
pop
jg
sub
or
out
pop
stos
popa
mov
fdivrl
movsb
sbb
ljmp
jl
inc
mov
aad
add
bnd
test
fdivp
push
test
add
negb
or
sub
pop
loop
inc
xchg
add
xor
data16
pop
outsl
dec
or
subl
movsb
xor
aas
cmpsb
mov
push
jmp
inc
into
add
xchg
fists
insb
sti
mov
jg
push
push
pop
dec
sbb
add
scas
out
xlat
out
fs
or
or
sbb
add
add
bound
and
ret
xor
mov
jp
xchg
xorl
pop
sub
mov
fadds
sbb
test
out
fildll
loope
xor
jecxz
inc
sarb
sub
test
clc
dec
aaa
out
xor
test
shlb
dec
push
test
pushf
das
dec
and
dec
leave
pop
adc
hlt
sub
sub
inc
dec
movsl
pop
fisttpl
inc
fldt
hlt
stos
neg
mov
fldt
cmp
xor
or
pop
or
dec
cmc
jg
mov
or
rorl
movsl
fidivl
movsb
mov
dec
jns
sub
cmp
nop
fmull
sti
aam
mov
call
xor
dec
pop
adc
fs
inc
mov
mov
dec
inc
fisttpll
lea
test
sub
pop
rorb
stos
mov
mov
loop
mov
xchg
sbbb
ffree
jmp
stos
cmp
push
dec
dec
out
ja
xchg
popa
es
insl
enter
lcall
jb
or
fcomps
inc
out
mov
repz
mov
loope
dec
xor
loop
js
ret
cmpsl
xchg
dec
leave
ret
es
movsl
push
mov
gs
rolb
adc
ljmp
push
adc
sbbb
cmpb
push
mov
popf
push
mov
adc
mov
sbb
dec
pusha
dec
sub
in
add
into
pop
aad
adc
in
iret
dec
cmp
xor
sarl
push
testl
mov
punpckhdq
cmp
loopne
fincstp
nop
or
dec
imul
aad
hlt
rep
xor
pushf
dec
xor
cmpl
fistps
lret
jae
in
ds
and
pop
lea
mov
add
sarb
or
daa
dec
cwtl
jecxz
push
or
movsl
dec
push
iret
dec
mov
lret
xor
cwtl
dec
sahf
sbb
addl
mov
xchg
pushf
out
cmp
in
int3
inc
in
jnp
mulb
into
mov
fstpt
int3
jp
cs
sub
mov
pop
sub
push
lcall
pop
push
mov
popf
lods
adc
dec
pop
jmp
icebp
cwtl
cmp
in
lock
out
jle
int
movsb
or
aas
xor
sar
mov
sub
mov
sti
jae
jl
andl
mov
jno
inc
sbb
pop
hlt
aas
pusha
mov
xchg
add
pushf
outsb
repnz
jecxz
popa
mov
mov
adc
es
out
ror
pusha
jbe
cli
int3
jne
mov
mov
jae
fidivs
or
outsl
fs
mov
cmpsb
inc
stos
in
xchg
sbbb
arpl
xchg
mov
es
xchg
push
movsb
sahf
call
dec
push
imul
js
scas
mov
mov
or
add
add
in
fcoms
pop
and
addb
mov
pop
out
xor
repnz
in
xchg
lods
push
lret
ficoms
and
rorb
adc
aas
lahf
test
cmpsl
testl
inc
in
mov
call
xor
xor
movsl
add
sub
mov
push
xchg
xor
sub
or
xchg
mov
mov
ljmp
push
push
xchg
add
sub
in
mov
ret
es
je
call
or
pop
cmpsl
clc
pop
jge
or
sbb
int3
mov
mov
inc
push
mov
sbb
xchg
adc
scas
mov
notb
movsb
pusha
add
dec
sbb
inc
and
sub
imul
sbb
xchg
fs
add
mov
mov
dec
clc
leave
add
pop
add
push
xchg
jnp
mov
int
call
mov
loop
scas
call
mov
nop
filds
stc
adc
je
and
mov
gs
pusha
cmp
mov
arpl
jp
sti
pusha
imul
in
jnp
mov
fimull
lahf
shlb
sub
pop
aad
das
test
sbb
pop
or
xor
mov
lods
nop
ds
cli
mov
dec
push
aam
aaa
xchg
xchg
or
mov
sarl
jbe
rclb
dec
fstps
std
je
and
pop
sub
xor
push
sbb
out
cmpsl
nop
ljmp
scas
loop
test
fistpll
sub
pop
add
mov
jmp
cld
mov
in
loope
stc
dec
push
data16
popa
sbb
sahf
adc
addb
outsb
or
jmp
cltd
cmpsl
xchg
jp
fnstcw
dec
dec
aas
dec
inc
cmc
push
dec
mov
out
lret
add
xchg
subl
and
xlat
andl
int3
push
cld
pop
jo
push
add
push
leave
sbb
subb
cmp
pop
add
inc
mull
cltd
les
arpl
or
push
mov
push
xor
add
cmp
lds
sbb
inc
imul
aad
mov
scas
xchg
mov
lods
add
clc
mov
jecxz
lahf
and
adc
inc
add
or
loop
or
and
outsb
or
jmp
dec
and
xor
mov
and
lock
in
dec
inc
pushl
mov
imul
popf
div
in
loop
into
mov
push
loopne
xchg
icebp
lcall
adc
frstor
repz
push
cmp
mov
loope
jae
push
adc
insb
push
inc
pop
mov
adc
sti
in
lret
inc
jl
and
mov
filds
xchg
je
sbb
cmp
sub
orl
xor
add
push
mov
mov
outsl
cmp
cmp
rorl
push
cmp
bndstx
inc
aas
lods
jg
pop
sub
loop
mov
outsb
pop
icebp
jl
js
clc
mov
dec
in
pop
shlb
mov
test
mov
dec
rolb
adcb
call
in
xchg
lea
out
jno
push
test
jge
mov
sbb
cmc
add
and
scas
jne
xchg
lock
es
add
aaa
sbb
rcrb
inc
dec
jecxz
push
bound
bound
mov
pop
mov
mov
shll
das
adc
daa
pop
jle
pop
fnsave
lods
sti
sbb
jnp
ds
mov
jle
adc
sti
mov
sub
jno
js
arpl
inc
cwtl
adc
lods
icebp
sarl
dec
mov
pop
outsl
adc
adcb
add
xchg
jle
inc
lods
push
ljmp
push
pop
fwait
int
add
mov
test
jge
std
add
jle
mov
pop
push
leave
rol
ljmp
or
clc
dec
in
cmpl
inc
loopne
mov
das
pusha
mov
ret
movl
mov
mov
pop
or
mov
dec
mov
and
aam
pop
inc
or
pushl
pop
mov
fsubrs
pop
push
rolb
sbb
pop
aam
adc
call
test
sub
sub
dec
jp
cwtl
into
adc
pop
mov
xlat
or
jecxz
movsb
push
and
mov
es
add
dec
shrb
addr16
std
cmp
int3
fwait
ljmp
sub
ljmp
movsb
adc
mov
push
jp
ret
pop
daa
mov
pop
fnsave
scas
enter
mov
cmp
lods
in
loop
imul
pusha
popl
and
sbb
xchg
test
scas
adc
jl
xor
mov
fdivrs
ret
jge
mov
mov
dec
loop
mov
aam
fisubrl
pop
xchg
popl
cmp
mov
sti
xlat
push
mov
insl
mov
mov
gs
mov
mov
js
push
cmp
les
xchg
or
into
push
pop
push
xchg
fsubrs
jmp
dec
mov
loope
movsl
fwait
sti
imul
dec
cmp
pop
mov
and
xchg
jge
or
xlat
int3
inc
in
mov
pop
sbbl
bound
fnstcw
mov
es
mov
sbbb
dec
cmp
xchg
scas
icebp
lahf
sub
and
adc
add
cmp
mov
lods
ss
jmp
shll
mov
xor
mov
mov
lcall
icebp
inc
fstps
jle
jae
mov
pop
mov
fisttpl
rcr
jmp
fadd
adc
dec
test
out
jge
push
aam
mov
adc
xchg
ss
imul
add
mov
in
cmp
push
adc
mov
lods
in
adc
mov
jle
bswap
jp
pushw
fldt
and
leave
into
insb
push
mov
arpl
jl
mov
test
xchg
cmp
and
ja
mov
sbb
cmp
mov
call
mov
xchg
pop
ror
gs
movl
inc
inc
inc
xor
dec
fwait
inc
loop
sub
mulb
xchg
inc
cli
jbe
inc
pop
rcrb
movsb
or
fdivs
sub
aad
adc
mov
fisubrl
pop
ret
sbb
nop
loope
and
out
fnstsw
popa
out
lods
test
popa
insb
push
shlb
out
jae
nop
out
fwait
cwtl
sbbb
push
lcall
pop
sub
and
or
mov
pop
in
or
mov
fwait
je
pop
out
adc
insb
mov
jns
xor
in
cmpsl
mov
icebp
and
icebp
repnz
mov
mov
cwtl
scas
push
or
inc
out
inc
in
push
scas
xor
sbbl
fcmovb
ja
mov
sub
ljmp
cvtps2pd
sub
inc
test
sub
xor
adc
jmp
jbe
and
jp
leave
lcall
fdivr
dec
adcb
popf
aas
ret
adc
scas
ljmp
jmp
cmp
in
aam
inc
lret
fcomip
xchg
and
in
js
xlat
or
or
or
pop
rcrl
imul
mull
clc
fiaddl
cmpsl
mov
xchg
repnz
xchg
inc
mov
cmp
scas
sti
adc
add
mov
out
pop
ja
addb
fcmovb
mov
jle
lods
jbe
mov
mov
mov
lea
push
les
out
cmp
loope
cwtl
sbb
pop
jno
test
push
in
icebp
jne
sbb
sbb
lahf
arpl
lods
xor
pop
inc
faddp
sbb
xchg
cmp
ljmp
scas
mov
test
rcrl
sub
xchg
sub
iret
inc
aam
aad
dec
dec
cmc
flds
dec
mov
inc
add
inc
add
adc
fcmovb
push
pop
rclb
pop
adc
and
and
jp
push
pop
std
jns
sub
cld
das
add
push
outsl
daa
xor
nop
jecxz
test
cmp
aaa
jae
stos
jmp
std
dec
ja
pop
add
push
loopne
ss
in
mov
and
das
arpl
mov
stos
lret
loop
es
jecxz
adc
sub
mov
out
out
xchg
and
int
sub
cltd
out
mov
test
pop
shr
mov
lea
push
popl
ret
aaa
hlt
out
mov
inc
jno
gs
in
pop
sbb
dec
push
push
rclb
repnz
push
jl
shll
xor
xchg
sub
aaa
lret
into
or
call
decb
mov
es
popa
mov
loop
xor
ss
jmp
mov
cmpsl
aad
xchg
mov
lcall
jne
adc
fdivs
fmull
push
pop
psubusw
movsb
jmp
xchg
sub
xchg
fcomps
push
and
add
int
fadds
into
mov
testl
inc
cmp
repz
push
mov
and
push
sbb
sti
inc
xor
sbb
sub
imul
push
daa
mulb
ret
or
jl
inc
jmp
movsl
popa
pop
xchg
std
cld
adc
int3
push
stc
adc
scas
imul
mov
fistpll
rolb
mov
imul
lret
int3
sub
push
jno
ja
lret
ficompl
xchg
dec
aaa
inc
sbb
jae
pop
jae
mov
or
mov
popa
out
in
or
push
push
jne
sahf
imul
out
jbe
push
nop
cs
push
jge
xchg
lahf
sti
lret
jo
and
lret
xor
jle
lock
movsl
arpl
out
leave
clc
fs
mov
pop
xor
mov
and
mov
jae
pop
adc
call
test
push
xor
jo
int3
xchg
cmp
push
filds
testl
dec
andb
shr
mulb
adc
in
xchg
aaa
jb
jl
and
or
lahf
ficompl
xchg
daa
arpl
mov
lea
dec
xor
gs
adc
or
test
mov
cwtl
pusha
inc
jmp
pop
xor
in
insb
xchg
rcrb
aaa
dec
and
push
mov
sbb
mov
add
jge
mov
cmp
lahf
pop
shlb
sbb
dec
cmpsl
mov
dec
in
ret
dec
into
and
xchg
push
push
push
icebp
and
cmp
imulb
cmp
mov
aad
mov
lahf
lods
push
adc
xlat
xor
shll
insl
jge
iret
inc
daa
xchg
das
fwait
inc
jns
jae
cmp
pop
fcoml
jecxz
ret
rcrl
jne
in
in
add
jae
xchg
cmp
push
xlat
jl
repz
sub
inc
mov
add
push
mov
ss
lahf
in
lahf
and
fcoml
jl
lret
xor
and
ljmp
adc
inc
add
inc
push
xor
xchg
decl
fs
clc
das
jg
rcrb
ljmp
cmp
outsb
mov
pusha
mov
cmp
dec
xor
call
out
and
rcll
leave
and
pop
cmp
sub
leave
loope
sbb
scas
addl
jmp
arpl
leave
xchg
popf
xchg
movsb
mov
scas
les
push
lds
xor
xchg
mov
pop
fmuls
orb
jnp
pushf
push
or
outsl
sbb
lods
pusha
push
xchg
imul
ljmp
aas
enter
fs
add
and
or
adc
inc
in
cmp
xor
sbb
orl
sub
sub
lcall
add
fsubr
lock
pop
rol
lahf
or
pop
xorl
mov
mov
mov
in
out
outsl
sub
dec
adc
jo
jo
daa
jno
rorl
js
repz
popa
xchg
cwtl
fists
outsl
fs
xorb
lret
inc
mov
or
xor
lahf
or
fiaddl
mov
add
mov
or
shll
push
js
test
into
call
out
stc
sbb
lods
push
or
add
adc
sbb
cmpsb
nopl
sbb
cld
mov
sub
sbb
dec
shlb
fsubrp
jmp
loope
push
dec
sub
push
fildll
cmc
push
dec
push
push
aad
lret
mov
flds
cld
or
mov
cmpsl
push
fistps
push
push
dec
sub
xchg
jne
jmp
mov
hlt
sub
xor
sub
insl
bound
icebp
sub
add
mov
sbb
sub
push
add
dec
popf
add
imul
xor
ljmp
mov
sbb
loopne
outsl
pop
inc
and
adc
fidivl
pop
lahf
inc
jns
xchg
movsl
in
push
mov
jecxz
adc
leave
les
adc
sub
lods
insl
sub
ljmp
fstp
cmp
in
mov
cmp
push
lcall
outsl
xlat
es
insl
mov
xor
dec
push
pop
imul
pop
pop
aad
cmp
fs
clc
push
cwtl
test
ret
das
jge
addr16
and
and
push
sbb
cmpsl
xchg
cmp
negl
rcrb
adc
cmpb
sub
ljmp
and
in
and
add
ja
repnz
inc
sbb
and
push
fcmove
pop
pop
jp
and
dec
repnz
rorb
pop
fiadds
insb
stos
dec
repz
jge
or
notl
pop
lcall
jg
lcall
std
imul
jae
or
jne
xchg
push
adc
mov
loop
movsl
ljmp
inc
subb
xchg
stc
aam
ja
xor
jecxz
push
ret
mov
les
or
in
push
loope
addr16
xchg
mov
stos
add
push
or
pop
push
push
andl
les
inc
mov
mov
dec
addr16
ljmp
sub
lea
jmp
scas
sbb
mov
or
lds
inc
in
lcall
dec
jnp
pop
imul
in
push
jns
xchg
es
sub
xchg
cmp
out
xchg
push
mov
iret
and
loopne
sub
mov
popa
and
xchg
pop
pop
jno
mov
push
jmp
lds
xor
hlt
pusha
jae
mov
mov
mov
jno
fstps
cmp
test
fistpl
test
push
mov
bound
dec
sbb
mov
cltd
inc
jb
and
outsb
arpl
xchg
das
mov
dec
popa
mov
in
pop
test
scas
mov
mov
rcll
cmp
push
push
and
dec
mov
xor
sbb
inc
fstl
jle
outsb
sti
sub
mov
movsl
or
mov
dec
insl
jg
loopne
mov
insb
decb
add
add
fisubs
movsl
inc
jle
pusha
xor
cmpsl
idivl
sub
jno
lods
gs
out
stos
mov
nop
pop
lods
sub
adc
ds
or
ficoml
push
outsl
mov
sbb
xor
in
jns
repnz
fstp
aad
pop
dec
ja
in
mov
dec
and
adc
addb
les
mov
xchg
xchg
fwait
jp
mov
cmpsb
inc
orl
sbb
mov
push
push
jns
pop
jb
ljmp
dec
jmp
std
popf
in
aas
adc
xchg
or
push
inc
ljmp
inc
push
bound
imul
mov
push
negb
imul
jl
scas
jl
das
movsb
idivl
pop
push
dec
mov
mov
pop
mov
inc
popf
xchg
fst
test
mov
mov
pop
mov
push
mov
xchg
or
adc
aas
std
sbb
push
dec
in
xchg
jnp
dec
or
add
jge
add
icebp
sbb
pop
and
int3
hlt
sbbb
sub
cmp
push
jns
out
mov
dec
xchg
dec
ds
mov
pop
mov
cwtl
sbbl
paddq
add
aad
aad
mov
sti
or
in
sbb
insl
cmc
aaa
mov
cmp
cmp
into
sbb
orb
and
sub
in
jne
leave
ja
out
dec
scas
push
imul
dec
sti
cmpl
lret
and
and
jl
jbe
sbbl
xor
jb
inc
icebp
xchg
pop
mov
imul
mov
ljmp
in
cs
mov
icebp
push
gs
aaa
adc
imul
enter
cmp
out
nop
and
mov
pop
lock
cwtl
in
sbb
mov
mov
iret
push
jo
dec
movsb
dec
sub
icebp
repnz
fdivrl
ljmp
in
out
shlb
lret
in
bound
xor
mov
shlb
lahf
cld
insb
cli
enter
mov
int
test
fsubl
pop
call
jne
ljmp
aam
popa
or
cli
push
xlat
inc
call
adc
pop
je
nop
enter
lods
fwait
adc
fdivl
xor
pop
in
mov
cmp
out
aam
in
aas
insl
das
sti
out
div
add
and
cmp
fucomip
stc
andb
mov
mov
imul
inc
loop
dec
push
adc
sub
adc
in
fsts
lods
pushf
xchg
sub
add
push
mov
test
and
mov
sbb
popa
jmp
je
pop
lcall
add
aas
sbb
push
cmp
fneni(8087
sub
pop
xor
sub
pop
push
dec
or
push
data16
push
dec
in
add
jg
xchg
dec
out
push
mov
xor
lcall
out
addr16
stos
xchg
dec
xchg
incl
es
test
mov
lahf
movsb
dec
fistpll
cmp
xchg
lcall
inc
out
push
das
dec
mov
pop
mov
in
mov
mov
mov
dec
jecxz
or
out
out
or
and
fcoms
movb
out
mov
push
mov
mov
add
pop
stc
pop
pop
fs
popf
mov
dec
jg
and
add
xchg
mov
and
loop
sub
jb
loop
add
in
nop
mov
fsubs
jmp
stos
mull
icebp
mov
insl
xor
and
sbb
insb
lcall
clc
aam
sub
test
inc
sbb
lea
mov
inc
fstpt
pop
mov
pop
jne
jne
into
imul
ret
add
mov
jp
mov
mov
call
lret
jp
shlb
ret
mov
push
mov
and
dec
cmp
test
cmpb
stos
pop
jbe
or
outsl
test
push
pop
jne
enter
mov
or
pop
dec
inc
insl
pop
sub
mov
inc
dec
xor
or
je
cltd
inc
jno
ud1
imul
adc
mov
lds
scas
pop
or
lock
test
jno
xor
hlt
xor
fwait
adc
sub
mov
shrb
mov
adc
cmp
cltd
adc
push
cld
cmp
jp
bound
xor
out
jmp
rcr
popa
xchg
push
cmp
xchg
aad
and
jp
hlt
and
cmp
iret
dec
dec
lcall
ficompl
xlat
jp
jne
push
sub
jle
cmp
xor
sub
aam
adc
dec
test
mov
push
mov
mov
mov
mov
scas
sahf
ja
mov
dec
ret
sbb
mov
xor
pusha
jno
stos
test
pop
and
mov
or
icebp
lods
repz
pop
std
inc
lret
fldl
out
outsl
insb
lods
adc
jbe
fwait
arpl
cld
jo
out
out
cmc
jno
add
mov
mov
loopne
popa
addb
ficomps
repz
pop
scas
in
test
outsb
xor
sahf
cmp
shll
aas
xor
insb
insl
pop
pushf
dec
jge
popa
cltd
lahf
push
lahf
jnp
sbb
and
cmp
dec
inc
out
pop
fwait
cmp
subb
movsb
mov
clc
mov
inc
xchg
pop
mov
pop
sub
mulb
jbe
imul
mov
loope
sub
cmp
push
adc
sbb
lds
repz
das
push
dec
das
mov
jb
lret
mov
mov
int3
cmpsl
sub
dec
mov
xor
hlt
and
cmp
cmp
pushf
lock
leave
mov
or
test
sahf
sbb
mov
add
or
add
js
arpl
sbb
dec
mov
push
add
add
push
pop
push
pusha
insb
scas
xor
pop
mov
xor
sub
mov
push
fstps
lds
mov
call
icebp
pusha
adc
pushf
and
stos
mov
out
imul
aas
fcoms
mov
adc
and
jbe
mov
mov
pop
rclb
sub
loope
stos
push
out
jmp
mov
mov
scas
inc
aaa
and
push
inc
rclb
daa
xchg
push
cmp
mov
enter
xchg
pop
hlt
cmc
sub
aas
aad
mov
pop
push
push
aas
nop
xor
nop
push
xor
imul
jmp
imul
add
lret
mov
xor
int
mov
sbb
pop
sub
jle
fwait
inc
cmpsb
xchg
push
xor
pop
cmp
mov
adc
call
aaa
cwtl
cmp
loop
add
sub
imul
ficoms
aas
jo
adc
push
jmp
xchg
push
test
fwait
xchg
xchg
jno
push
mov
outsl
mov
cmp
loopne
stc
mov
sahf
sub
aaa
pop
movsl
mov
push
scas
fistl
aas
or
inc
std
cltd
fnstenv
and
dec
scas
mov
xchg
stos
xor
add
negb
sbb
aaa
mov
mov
dec
mov
sbb
enter
test
pmaxsw
sahf
mov
mov
dec
fs
adc
scas
lahf
out
dec
iret
mov
rolb
cld
daa
mov
push
int
test
sub
pop
mov
dec
mov
or
jo
cltd
jnp
inc
mov
loopne
cmp
movsl
mov
inc
jb
out
andb
ja
jo
jnp
xchg
mov
push
dec
or
into
repz
and
rcll
cmp
cmp
loop
mov
pop
mulb
sbb
fwait
mov
add
xorl
fadd
dec
fistl
std
pop
cmpsl
sbb
xor
xchg
enter
xor
cmpsl
and
xor
fiaddl
push
mov
xlat
xorb
idivb
mov
lahf
fstpl
xorb
mov
add
cmp
pop
cmp
inc
stos
lahf
shufps
cld
inc
xchg
pop
insb
fiaddl
xorl
add
jecxz
mov
mov
popa
enter
xor
call
jbe
add
ret
shrb
xchg
sub
stc
orl
xor
mov
stos
iret
inc
iret
sysenter
inc
xchg
lds
inc
imul
mov
ror
jl
fdivrl
or
lea
neg
lahf
cmp
fwait
sbb
inc
cmp
divl
cmp
inc
sbb
or
jmp
xchg
cwtl
stos
imul
fcomip
pusha
jl
mov
and
testl
xor
into
ficompl
cld
xor
add
pop
mov
imul
iret
inc
mov
pop
jmp
fs
jge
scas
enter
nop
xchg
cmp
ficompl
or
and
pop
js
adc
imul
push
test
popf
lret
popf
repnz
mov
cli
mov
jge
sti
push
ret
shl
xchg
imul
or
decl
data16
ret
xchg
scas
sbb
test
adc
and
repz
cmp
push
mov
jp
push
adc
js
or
jnp
stos
out
pop
pop
aas
mov
decl
sub
ret
std
jbe
rcr
mov
mov
fisttps
push
lahf
fdivr
jbe
in
add
arpl
inc
xchg
sbb
cmp
xchg
sbb
jp
scas
mov
stc
popa
sub
mov
jno
pop
mov
sbb
sub
add
xchg
test
sbb
pop
adc
mov
test
push
lock
xor
out
sti
cli
inc
out
inc
negl
xor
jns
stc
ret
push
mov
clc
xlat
pop
in
sub
add
jp
mov
jno
iret
loop
adc
and
mov
dec
in
push
out
std
adcl
mov
dec
fistpl
add
adcl
push
sahf
pop
mov
cltd
jle
pop
daa
movsl
sbb
lcall
stos
cmpsl
mov
outsb
sub
lahf
into
data16
les
insl
fisttpll
fsubr
lods
leave
jo
cmpsl
cld
push
pop
inc
and
cmp
xchg
dec
fldl
movsb
repz
shlb
jle
xchg
sbbl
sub
out
into
inc
negb
decl
push
push
add
add
mov
in
test
std
arpl
sub
leave
xchg
pop
xchg
mov
mov
stos
mov
dec
jno
jbe
movsb
ret
lods
or
push
dec
jbe
pop
inc
jnp
adc
and
loope
repnz
int
dec
es
push
in
xlat
lods
push
xor
aas
adc
lods
pop
cmpsb
int
imul
pop
cmp
lods
mov
loope
repnz
add
mov
mov
dec
pop
mov
cs
movsb
mov
sub
loopne
pop
shrb
sub
mov
mov
ja
mov
inc
push
dec
cwtl
jecxz
mov
or
mov
xor
insb
sbb
push
insb
idivb
movsb
fidivs
mov
push
push
sbb
rep
mov
mov
repnz
fwait
jne
add
and
jg
decl
cmpsb
aas
sbb
jecxz
mov
dec
leave
in
mov
mov
cltd
sub
mov
inc
out
add
daa
push
cmp
jge
out
mov
xchg
mov
stos
pop
leave
outsl
pop
mov
mov
fst
test
jg
sbb
enter
imul
mov
test
mov
mov
inc
orb
xor
lret
subl
subb
arpl
dec
sub
out
sbbb
test
adc
aaa
xchg
dec
jge
fldl
stos
sub
fs
xor
inc
inc
rcrl
mov
dec
jbe
les
pop
mov
jae
dec
xchg
lret
pop
jecxz
jl
fnsetpm(287
sarl
jo
jge
arpl
dec
lods
push
jbe
lods
lcall
and
jg
sti
adc
jb
mov
shlb
bound
jne
lea
mov
push
imul
leave
ljmp
mov
add
mov
scas
cmp
cmpsb
lock
jns
fcmovu
in
cli
in
xchg
push
shl
ja
cmc
hlt
push
fnsave
or
fdivl
pop
js
mov
test
or
push
scas
les
scas
movsl
dec
iret
lock
pop
mov
inc
repz
mov
pop
shll
xor
in
loope
ret
pop
movsb
sahf
sub
into
js
das
std
aaa
or
sbb
jb
ret
out
nop
imul
cltd
push
testl
or
clc
cmp
push
adc
or
nop
lock
in
repz
mov
sti
adc
xor
out
xor
xor
jmp
icebp
popl
sbb
mov
movsb
mov
mov
jecxz
xlat
outsb
ja
xchg
add
xor
sbb
mov
jno
call
cmp
mov
and
call
test
jp
or
push
sti
js
jmp
adc
mov
adc
inc
mov
aad
mov
scas
xchg
bound
cmpsl
fiaddl
gs
jb
sub
sarb
xchg
jmp
dec
clc
aaa
jnp
mov
inc
xchg
mov
loopne
jl
fisubrs
incb
inc
fisubs
pop
push
xor
dec
sbb
push
loope
or
cmp
imul
add
imul
test
mov
or
jbe
inc
add
aas
dec
push
lods
lds
xor
cmp
xlat
loope
lret
imul
push
jne
les
inc
repnz
lds
adcl
inc
push
fidivs
push
repz
iret
loop
mov
iret
std
imul
stc
or
adc
sbb
sgdtl
pmulhuw
push
sbb
jg
push
or
xchg
lret
xor
daa
ja
mov
or
ds
push
fdivr
dec
pop
fisttps
ja
fcomps
mov
out
pop
daa
addb
cmp
fimuls
adc
call
xchg
cmp
bnd
jge
adc
pop
fidivrl
pop
jle
lock
loop
mov
imul
and
mov
sti
and
pop
leave
inc
js
adcb
loop
jo
clc
adc
push
push
xor
hlt
inc
cmp
ret
ja
leave
sub
pop
loop
inc
sbb
push
sub
sub
ret
lea
lea
shll
gs
pop
adc
sbb
cmpsl
push
jg
xor
mov
les
stos
loopne
push
xchg
push
vmaxss
hlt
jp
aaa
dec
xchg
jmp
inc
inc
mov
mov
sub
enter
cmp
mov
jae
rorl
cmp
mov
jb
test
mov
fs
outsb
xor
imul
jg
or
mov
cltd
ret
outsl
in
repz
cmp
inc
cmp
inc
sub
add
ds
xchg
lock
clc
xlat
push
lret
cwtl
mov
push
mov
enter
xorl
cmp
push
loopne
bound
aas
xchg
jmp
cmp
jmp
pop
bound
inc
cmp
sahf
xchg
je
adc
add
outsl
testb
jae
movsb
cmp
mov
mov
fisubrl
repnz
loopne
and
cmp
sub
stc
sbb
pop
fisubl
sub
jmp
push
cs
xchg
pop
mov
push
cld
mov
in
mov
shrl
popa
ljmp
das
mov
jne
das
mov
xchg
xchg
insl
loop
cmp
ss
xor
dec
add
pop
mov
mov
push
mov
sar
and
mov
loopne
inc
add
aad
insl
pop
aas
imul
cli
mov
sbbl
mov
fiaddl
test
ss
sub
imul
xor
or
sub
push
dec
mov
out
pushf
or
cmpsl
cld
xchg
pop
loopne
int3
mov
jecxz
or
cld
das
sbb
gs
jb
fwait
jg
xor
pop
imul
imul
sbb
jns
push
dec
les
sbb
sub
sbb
push
std
aaa
cmpsb
push
jae
inc
pop
les
je
mov
cmp
lock
std
fcompl
jnp
rcll
pop
xchg
out
in
xor
push
lahf
pusha
test
mov
pushf
push
test
dec
popf
and
add
std
ret
or
flds
push
test
mov
popa
and
orl
fldenv
outsl
fcoms
pusha
sbb
mov
add
shlb
cmc
les
ljmp
xchg
xchg
xchg
pop
arpl
inc
pushf
das
or
cmp
jno
sub
movsb
mov
inc
fwait
mov
pop
into
cmp
data16
popf
dec
xchg
pop
lods
sar
clc
add
inc
outsl
jge
pop
cmp
sub
nop
jnp
and
into
adc
jmp
cltd
jmp
jno
pop
cs
mov
xchg
mov
adc
aas
in
jmp
xchg
push
adc
sbb
clc
cmp
pusha
out
fsub
repnz
cmp
push
addb
inc
jbe
xchg
enter
mov
mov
adc
mov
adc
ljmp
sbb
std
nop
mov
push
inc
sub
add
cmp
popf
pop
stos
and
jb
add
std
push
in
lods
adc
decb
xchg
cmp
stos
dec
dec
outsb
mov
out
mov
sbb
jge
pop
call
dec
es
jae
mov
daa
testb
and
ja
fs
sbb
sahf
int3
push
jne
mov
lods
xchg
xchg
sub
dec
inc
popa
mov
sub
lods
push
inc
push
jle
or
flds
mov
push
nop
dec
xchg
outsb
mov
xchg
jp
adc
daa
cs
addb
ficoms
push
mov
fildl
fcoms
inc
xchg
ss
dec
jns
in
cmpsl
mov
gs
imul
xchg
push
cmp
rorb
je
jp
enter
xor
sub
or
lock
xchg
repnz
adc
jno
or
icebp
adc
inc
mov
pop
jp
cltd
in
repnz
or
cmpsl
mov
in
adc
mov
outsl
std
loope
inc
jl
sub
sub
dec
outsl
add
sub
pushf
stc
addr16
sub
jbe
nop
mov
jo
movsb
jae
lret
test
imul
sti
push
lret
fstpt
add
sbb
aas
adc
sbb
dec
and
pop
call
test
push
fimuls
or
sub
cmp
repnz
jge
add
cmp
test
xor
add
mov
adc
mov
jne
rorl
rcr
cs
xchg
push
jbe
stos
and
mov
and
mov
sbb
xor
mov
or
push
and
dec
mov
xchg
insl
out
push
mov
push
and
adc
mov
and
xchg
mov
pop
add
add
mov
testb
pop
jae
dec
inc
pop
xor
and
mov
jns
prefetch
mov
je
push
push
push
ja
sbb
sub
mov
aam
jbe
dec
mov
cli
cmp
xlat
xchg
sbb
push
mov
repz
jno
mov
mov
add
or
xor
pop
popa
dec
cmp
out
push
and
inc
push
xor
int
outsb
jmp
arpl
cmp
pop
or
sahf
cmpsb
sub
nop
daa
xchg
dec
leave
or
and
xor
sub
jp
lret
push
cmp
pushf
xor
push
dec
idivl
jae
mov
in
lea
cwtl
pop
adc
lret
cmc
in
dec
jg
and
test
mov
xchg
call
mov
pop
dec
dec
cs
in
jae
int
xchg
je
lea
daa
lock
fbstp
das
dec
jmp
inc
xrstor
inc
pop
xor
in
jle,pn
mov
movsl
cmpb
mov
mov
inc
jbe
adc
sarb
addr16
or
mov
push
adc
je
lea
mov
xor
movsl
dec
push
enter
xor
into
mov
je
movsl
mov
adc
mov
add
cmp
mov
fnstsw
addr16
push
mov
mov
jg
jmp
bound
mov
out
out
imul
nop
sub
jae
xor
rcrb
inc
mov
push
jne
xchg
push
push
pusha
sbb
add
jb
mov
sbbl
sar
push
xchg
cs
add
jb
mov
leave
sub
idivb
dec
jns
inc
mov
bound
or
xchg
ds
stos
fadds
mov
addr16
repz
sahf
popf
xor
incb
vpmulhw
test
push
popa
adc
jg
push
mov
jno
pop
aas
ret
mov
inc
aad
shrb
imul
or
aam
nop
xchg
movsl
and
nop
adc
js
out
fildll
loope
sub
sahf
mov
mov
ja
mov
push
pop
ret
movsb
adc
pusha
ja
adc
dec
smsw
or
scas
inc
jmp
pop
pop
mov
js
bound
mov
pop
xchg
movsl
movsl
lods
sub
sti
jmp
test
mov
and
shll
push
lds
xchg
mov
push
sbb
dec
daa
stos
roll
mov
sub
lock
mov
imul
dec
add
or
adc
push
xchg
mov
fadd
mov
pusha
sbb
cmp
sub
ret
adc
stos
cld
daa
push
repz
dec
xchg
popf
bound
outsb
fdivrl
imul
in
jecxz
shl
jne
inc
test
mov
and
stos
add
mov
in
sbb
js
lods
and
xchg
add
pop
pop
and
sbb
pushf
push
jb
sub
inc
jb
lea
popf
loop
xchg
mov
rorb
fnstsw
mov
call
aad
and
movsb
dec
mov
cmpsb
loop
cs
dec
jp
xor
mov
lcall
push
pop
gs
xchg
rclb
lret
and
push
add
int3
or
dec
pop
jmp
dec
shrb
jns
lock
cmp
js
jno
push
enter
push
mov
pushf
movsl
inc
or
nop
inc
popa
jp
es
outsb
jno
test
xchg
clc
in
addr16
fcmovu
push
dec
fistl
test
je
int
cmp
lea
xchg
inc
mov
mov
or
in
cwtl
and
sub
cmpsb
aaa
push
in
mov
loope
mov
push
movsb
jno
fwait
add
leave
mov
testb
dec
pop
sbb
and
lods
stos
mov
rol
into
scas
dec
mov
add
cmpsb
push
sbb
jns
imul
jmp
dec
scas
lock
test
out
dec
push
mov
push
dec
testb
mov
scas
push
in
stc
fisubl
out
mov
mov
xchg
or
xor
pushf
ret
out
mov
frstpm(287
pop
lret
xor
pop
and
xchg
xchg
pop
mov
jmp
gs
fmuls
sub
mov
xchg
and
xor
std
cmc
ret
or
fisttps
add
ljmp
test
inc
test
dec
push
mov
hlt
lret
push
push
inc
ret
bound
or
sbb
mov
stc
sub
nop
push
decl
sbb
aam
hlt
outsb
mov
fistpll
cmpsl
jmp
xlat
mov
aaa
adc
pop
popf
cmp
cmpsb
testb
sub
cmp
pop
dec
jg
dec
mov
orl
jecxz
out
int3
shll
mov
out
in
insl
fisttps
lret
and
ss
movsl
cmpsl
xchg
imul
jae
shlb
ss
lods
js
dec
pop
adc
out
dec
adc
xchg
std
pop
mov
mov
addb
mov
into
jo
sbb
popf
push
js
roll
push
pop
sub
mov
cwtl
inc
mov
add
inc
fistpl
or
in
jno
mov
jecxz
dec
in
dec
lret
xor
stos
sub
push
push
or
fsubrl
aad
cmp
push
inc
test
pop
iret
xchg
test
and
cs
sahf
dec
aam
xlat
or
xlat
les
aaa
sbb
jbe
dec
push
cwtl
or
or
dec
or
fmul
aam
loop
std
lcall
sub
icebp
cwtl
jb
mov
add
mov
pop
test
xor
lds
clc
or
lds
cmc
jo
orb
not
mov
cs
stc
mov
clc
jecxz
inc
mov
aad
shl
sti
adc
paddw
pop
popa
mov
arpl
scas
cmp
add
push
jae
lret
sbb
jae
test
arpl
pop
bound
sub
mov
imul
dec
xchg
test
sub
pop
push
mov
push
imul
popa
pop
cmp
jg
add
jns
inc
out
push
lret
cs
repz
push
fwait
orb
addr16
aaa
jle
scas
inc
aas
stc
daa
dec
or
cmp
xor
daa
push
fistpll
fnstenv
rolb
repz
jbe
out
loope
loop
jb
xchg
loope
mov
loope
push
inc
xchg
and
sub
in
and
sub
xchg
adc
test
or
pop
dec
es
push
push
sub
repnz
sahf
cmp
xor
or
or
jmp
sub
push
cmpl
movsl
and
xchg
adc
cltd
fcoms
inc
rcrl
cld
std
rclb
enter
fisttpl
xor
enter
repz
imul
sub
aaa
insb
ffreep
cmpsl
xlat
and
push
or
sti
adc
sbb
add
out
sbb
div
push
pushf
add
or
sub
out
aam
push
cmp
into
leave
fiaddl
cltd
movsb
lock
xchg
mov
jbe
in
sbb
inc
cmp
mov
les
fsubrp
xchg
nop
and
and
add
add
les
ja
push
pop
and
imul
push
and
mov
adc
sbb
lret
insb
xor
cmpsl
adc
in
out
sbb
adc
arpl
xchg
andb
xor
mov
sbb
shlb
imul
lds
dec
xchg
push
fcomip
and
cmp
mov
es
lret
xor
addr16
leave
push
pop
in
loopne
movsb
dec
sub
les
adc
lock
lahf
mov
out
sub
adc
mov
es
in
pop
pop
test
mov
or
fldl
mov
xchg
mov
add
loope
mov
jo
fidivl
int
lahf
or
call
lods
dec
xor
mov
push
cmp
inc
test
rolb
xchg
mov
sti
outsl
cld
in
shr
rorl
out
ret
mov
ret
pop
adc
stc
jae
movsl
loop
jo
adc
adc
popf
push
cmpsl
jle
div
das
and
mov
xchg
push
addb
fst
out
rcl
das
mov
xchg
ss
fdivrs
push
leave
xchg
mov
scas
push
stos
jp
lods
sbb
adc
mov
ror
push
inc
inc
pop
int3
inc
aas
push
mov
mov
jecxz
ficompl
jge
jg
in
imul
push
jmp
jo
scas
dec
notb
faddl
push
cmp
data16
aaa
jno
fwait
in
ja
out
cmp
mov
fs
or
cltd
mov
xor
ret
cltd
incl
daa
xchg
xor
sbb
xchg
mov
test
mov
cmc
lods
les
jno
xchg
or
mov
mov
fwait
pushf
out
cmp
add
mov
loopne
insl
mov
lods
sbb
insb
mov
or
test
lea
ljmp
and
jg
mov
cmp
ja
push
lock
aas
mov
xchg
and
push
mov
mov
push
filds
das
add
jg
addr16
cld
jmp
add
add
cmp
out
sub
xchg
stc
sti
popa
dec
mov
pop
inc
jb
jp
js
mov
mull
outsb
into
mov
shl
xchg
fidivrl
in
cmpxchg
or
cmp
or
mov
xor
dec
fbstp
cli
xor
adc
movsb
out
push
arpl
inc
movsb
ja
outsb
nop
mov
xchg
fbld
lret
dec
push
mov
cmc
adc
adc
ss
or
pushf
pop
ret
inc
push
xor
sub
loopne
push
add
dec
les
mov
insb
mov
mov
adc
ret
cld
add
jae
ret
shlb
outsb
sub
dec
mov
jp
mov
hlt
into
icebp
push
cmp
fcomip
out
lret
and
mov
test
movsl
insl
sub
jg
sbb
repz
ja
aad
cmp
addb
loop
sub
jge
dec
pop
cmp
cmp
loop
adc
je
mov
fnstenv
mov
imul
nop
inc
xlat
testb
scas
jecxz
arpl
leave
hlt
in
int3
fimuls
mov
hlt
test
mov
mov
or
repz
testl
jo
xchg
stc
negb
mov
dec
and
icebp
fists
adc
shlb
hlt
cs
push
xchg
cmp
in
test
and
add
idivb
push
out
sub
loop
fmuls
jae
push
aad
mov
mov
jg
das
insl
mov
mov
inc
stos
dec
cwtl
xor
and
sub
stos
pop
jge
adc
stos
in
xchg
jmp
jns
sub
mov
sahf
inc
xchg
cld
mov
das
inc
push
pop
push
or
push
lods
sub
jecxz
in
icebp
add
pop
sub
add
add
loopne
testl
inc
jmp
movsl
ljmp
mov
xchg
or
movsl
xchg
stc
stc
mov
xchg
add
call
hlt
and
jno
sarl
jge
jmp
int
leave
mov
addr16
scas
push
jmp
xchg
pop
aad
cmp
pop
mull
cmp
inc
mov
fisttpl
dec
out
push
out
aaa
adc
inc
mov
sbb
adcb
ds
mov
mov
dec
adc
stc
enter
fists
xor
fisubs
roll
adc
orl
pop
jbe
xor
push
ds
or
jmp
shll
daa
fbld
orb
popf
mov
shl
mov
inc
call
jne
xchg
out
jmp
push
pop
ds
pop
pusha
imul
lcall
sbb
sahf
subb
xchg
out
es
add
jne
dec
out
push
adc
jne
test
and
dec
xor
dec
jno
xchg
rcrb
dec
jl
push
pop
add
out
mov
pop
adc
lods
test
adc
mov
jmp
or
andb
and
mov
mov
test
sbb
in
insb
in
pop
mov
add
lahf
and
sbb
pop
jbe
push
inc
or
mov
lcall
pop
pop
pop
mov
add
lock
int3
inc
std
inc
std
in
jl
dec
addb
jmp
mov
xor
repnz
jnp
mov
add
inc
dec
repnz
out
cli
sbb
xchg
test
lea
fabs
stos
cwtl
cmp
out
ds
shr
sub
cmp
sbb
test
mov
xchg
enter
inc
pop
imul
int3
mov
push
sbb
int3
xchg
mov
lret
cmp
and
stc
mov
mov
mov
or
adc
sub
push
adc
xchg
cmp
loopne
repnz
aam
fistl
lock
and
rclb
sbb
shlb
int
pop
ret
mov
dec
add
adc
fisubl
sbb
sub
cmp
inc
pop
ljmpw
pop
mov
jle
test
or
mov
or
xchg
repz
shlb
jp
cltd
call
cmp
pop
movsl
xor
cmp
cmpsb
das
pop
sar
dec
pushf
or
mov
push
inc
out
into
and
enter
hlt
add
pop
addl
pop
sub
test
dec
push
es
jecxz
mov
cmp
fldenv
pop
in
filds
adcb
add
inc
pop
and
movsb
mov
leave
inc
clc
dec
sub
sub
xor
icebp
mov
je
add
mov
jle,pt
je
dec
ficoms
mov
mov
out
pop
inc
ss
mov
mov
or
les
sbb
cltd
aaa
loopne
dec
cmp
ljmp
out
xchg
lret
setns
lds
stc
jle
and
test
and
jne
testb
lock
mov
lahf
popa
lea
lcall
sahf
and
xchg
cld
or
cmpsl
push
xor
mov
mov
pop
inc
inc
ss
and
push
push
cmc
cmp
mov
imul
push
stc
out
lret
xchg
mov
rolb
push
sbb
pop
mov
xor
and
jno
je
fucomp
roll
arpl
ret
seto
inc
arpl
lock
xchg
stc
cltd
and
mov
popa
mov
xchg
and
movsb
out
adc
popf
inc
or
push
test
test
aaa
fisubs
arpl
aam
orl
arpl
notb
popf
inc
popa
and
ljmp
or
lahf
jecxz
ret
aam
nop
or
sbb
mov
test
rolb
int3
stc
xchg
sub
cmp
in
jmp
xor
fidivrl
lcall
movsl
or
push
pop
dec
xor
sbb
push
adc
cmp
and
dec
mov
enter
loopne
inc
adc
and
and
scas
addl
or
adc
idiv
les
add
nop
pusha
mov
add
push
sti
mov
sar
int
and
or
outsb
es
mov
repz
add
or
enter
inc
loopne
pop
ficomps
or
rcl
cli
inc
and
add
cld
inc
jge
nop
push
hlt
cmpl
dec
push
adc
in
xchg
shlb
jp
sub
icebp
imul
mov
xchg
ds
and
popf
cmpsl
cmpsl
insb
adc
inc
test
xchg
pop
jge
push
sbb
push
pop
dec
xchg
pop
loopne
push
mov
adc
xchg
into
jnp
jnp
aas
xchg
push
repnz
or
mov
sub
sub
jle
dec
pusha
mov
add
lahf
ss
mov
xchg
sbb
xchg
cmp
push
or
fs
vmovmskps
xchg
fiaddl
xchg
mov
lahf
jnp
push
push
xor
cmp
xor
dec
fcoml
fs
aad
pop
adc
cli
fmuls
loopne
adc
xor
out
into
pushf
ret
fildl
pop
inc
mov
pusha
and
mov
dec
das
dec
dec
xlat
loop
out
pop
adc
adc
ds
andl
adc
negb
push
imul
and
stos
stos
inc
cmp
push
pop
dec
lods
push
inc
int3
pop
xchg
mov
repz
cmpsb
insb
out
ljmp
push
dec
dec
imul
push
pop
push
movsl
add
test
das
in
dec
xor
out
cs
hlt
and
mov
sbb
and
xchg
mov
aad
insb
jmp
push
lea
pop
xor
sarl
jmp
pop
push
mov
ret
inc
push
mov
adc
gs
adc
push
orb
cmp
mov
mov
movsb
outsl
insb
inc
sub
sarl
xchg
or
outsl
outsb
cltd
jo
xor
dec
push
mov
mov
test
pop
mov
cmp
imul
mov
add
mov
fsqrt
sarl
in
clc
outsb
mov
push
sarl
jnp
push
pop
cwtl
adc
push
xchg
cmp
and
mov
pop
dec
or
push
xor
dec
jle,pt
setg
in
push
repnz
daa
popa
add
les
femms
xchg
jge
ss
mov
scas
push
inc
xor
push
jge
rcl
jno
or
sub
mov
dec
outsl
mov
sbb
inc
jbe
dec
int3
lea
lcall
rcll
inc
mov
mov
ljmp
mov
push
lds
cmp
imulb
subl
scas
mov
adc
dec
dec
mov
cwtl
xor
decb
loop
out
cmc
movsb
inc
mov
pop
clc
shll
inc
inc
pop
enter
or
and
lret
pop
ljmp
shrl
mov
mov
les
mov
fxch
bound
xor
jb
mov
vprotd
add
pop
cwtl
cmpsb
mov
std
call
cmc
jle
mov
mov
add
xchg
arpl
mov
cs
int3
or
inc
sbb
adcb
jecxz
add
imul
js
add
mov
pop
negb
inc
das
cmp
and
dec
mov
stos
dec
hlt
rolb
xor
std
pop
insl
xor
lock
fisubs
sarl
jl
adc
mov
rcll
mov
test
shlb
xchg
gs
add
inc
cmpsl
int3
aaa
call
arpl
push
jle
xchg
lcall
insb
dec
in
scas
lds
jle
mov
div
aam
xchg
idivb
lret
bound
xchg
cmpsl
push
jo
test
adc
test
out
mov
sbb
push
sbb
jle
jne
xchg
cmpsb
dec
cmp
ret
pop
pop
shl
sbb
push
cmp
or
sti
mov
scas
das
clc
subb
out
jnp
aad
jne
mov
dec
sti
decb
fidivrs
fsts
rcrl
rorl
mul
cmp
dec
jns
fbld
inc
push
popa
add
sbb
pop
test
clc
sahf
out
call
push
fscale
xchg
jecxz
out
xchg
pop
adcb
add
inc
cs
sbb
cmp
push
out
mov
das
jb
imul
cli
push
adc
inc
sub
push
bound
aaa
or
cmpsl
stc
jns
loop
test
push
icebp
js
jmp
pop
mov
hlt
inc
inc
data16
add
negb
lahf
mov
pushl
cli
lret
out
loop
pop
or
and
pop
xchg
je
sbb
fsubs
push
je
sub
xchg
mov
mov
outsl
stc
stos
icebp
mov
push
in
push
sub
rcrl
sarb
cmp
ret
cmp
pop
cmp
in
dec
mov
sbb
dec
sub
cmpsl
or
addr16
repz
or
out
mov
scas
fwait
fwait
loop
or
in
dec
cmp
test
repnz
or
fisubl
pop
pusha
cwtl
sbb
aad
push
icebp
mov
inc
or
sbbl
adc
add
sub
iret
pop
stos
mov
outsb
rorb
inc
mov
aam
add
sbb
cmp
mov
test
jg
sbb
cmp
pop
mov
mov
ds
sub
inc
cmp
add
jg
lds
lds
loopne
sbb
mov
mov
jns
xchg
mov
and
fbld
sub
lock
dec
bound
push
outsl
movsb
mov
push
out
adc
ja
or
repz
aaa
stos
xor
das
int3
cmc
xor
sub
or
lea
ffreep
shll
mov
push
dec
cmpsb
rcll
mov
inc
call
push
fisttpl
xchg
pop
in
pop
fst
cwtl
jle
sub
insl
jecxz
je
jne
popa
movl
or
jmp
jo
rol
sub
and
dec
sbb
fs
sbb
inc
dec
into
jb
notl
jg
pusha
push
stos
adc
xor
dec
dec
call
mov
fwait
dec
dec
rcl
mov
mov
jmp
or
ss
pusha
enter
push
aaa
pusha
sub
push
sbb
fdivr
stos
mov
adc
fmuls
scas
xchg
scas
mov
adc
pop
ret
cs
xor
jno
fbstp
xchg
pop
xor
cwtl
and
int
dec
and
mov
out
mov
in
jns
mov
xchg
hlt
repnz
mov
jno
dec
leave
push
cwtl
das
ljmp
cmp
sbb
xor
jg
movsl
push
test
out
out
clc
int3
sub
add
mov
fnstcw
add
jmp
hlt
mov
popf
xor
out
mov
pop
les
jb
push
into
pop
sbb
pop
jl
sbb
sub
push
mov
ret
mov
xchg
daa
pushl
cmp
xchg
mov
jb
cmpsb
push
sbb
xchg
ds
pop
sbb
sbb
xor
cmp
stos
inc
push
or
xchg
xchg
mov
int
fnstcw
mov
aas
aad
imul
sbb
mov
jns
or
push
ret
push
mov
ret
nop
sub
in
std
lahf
mov
je
sub
std
jmp
cmc
cmp
add
addr16
or
jmp
fistl
inc
and
inc
lods
sbb
and
sbb
pop
jle
pop
dec
jg
call
daa
inc
out
add
decb
jnp
cmpsl
add
sbbl
xor
repz
lods
adc
inc
sbb
cmpsl
xchg
mov
xchg
pop
or
xchg
xor
imul
sub
sub
mov
stc
cli
incb
sub
sub
push
nop
gs
lcall
xchg
sbbl
lahf
xchg
enter
fdivrp
repz
mov
jecxz
ret
adc
std
test
aam
test
rorb
mov
mov
push
add
ret
cltd
pop
push
or
fbld
loop
hlt
jge
in
mov
and
call
adc
cld
arpl
mov
lods
ss
in
jg
lret
out
jge
sti
push
cmp
mov
lods
incl
jecxz
cltd
std
fbstp
fisubl
mov
dec
addb
cli
mov
push
inc
lahf
jg
addl
ja
dec
scas
xchg
imul
test
jmp
cli
sti
jb
mov
dec
out
int3
jne
sbb
fildll
dec
cmp
mov
shr
and
repz
sub
ljmp
push
pop
test
out
inc
test
xor
ss
push
sbb
fldt
cld
fisttpll
or
mov
int
es
add
cmpsb
insb
fdivs
pop
xchg
inc
test
ds
lret
pushf
mulw
dec
or
dec
mov
int3
sub
mov
stos
fdivr
sub
dec
push
xor
test
sub
nop
cwtl
or
test
ja
mov
in
push
test
dec
mov
jno
mov
loop
sub
jno
repz
loopne
lahf
pop
fidivs
pushf
adc
out
ret
xchg
test
and
xor
pop
dec
dec
add
jnp
mov
mov
jge
or
add
arpl
pop
in
movl
xor
fisubrl
sub
mov
pop
push
and
dec
mov
mov
sahf
and
addr16
aaa
shr
adc
orl
das
lret
xor
mov
or
adc
mov
out
loope
hlt
scas
lds
flds
jp
out
shl
ret
cmp
adc
sub
pop
cltd
pop
insb
dec
pop
xor
inc
pop
sbb
push
fwait
clc
arpl
cmpsl
pop
inc
negl
and
cs
out
cli
fbld
out
enter
mov
and
dec
in
leave
ftst
arpl
sub
xchg
mov
dec
xchg
cmc
sbb
divl
push
fnsave
adc
push
inc
ret
fldcw
and
mov
insb
cmp
arpl
sub
push
adc
stos
mov
mov
negl
lcall
jecxz
xchg
out
outsl
test
jo
ljmp
pop
add
jge
mov
adc
jle
or
jae
sbb
shrb
pop
jle
sub
sbb
test
pusha
xor
out
std
push
xor
loope,pn
xchg
dec
fidivrl
pop
or
jmp
jae
push
stc
or
adc
jg
pinsrw
and
in
cltd
loop
pop
divb
inc
inc
lds
imul
gs
fsubrs
fists
or
shrb
pop
sbb
jnp
ss
or
insl
or
inc
popf
xor
fidivrs
jmp
jo
xor
or
je
push
push
out
sbbb
scas
mov
inc
je
out
lea
fisubrs
cmp
inc
ret
sub
imul
in
ficoms
pextrw
push
xlat
sbb
jbe
jnp
ret
add
mov
adc
push
add
jecxz
pop
jg
bound
cltd
repz
mov
adc
lds
imul
push
dec
dec
add
int
imul
lds
lret
sbb
mov
pop
ja
loop
fnstsw
mov
test
mov
rep
push
add
sbb
out
xor
lcall
enter
mov
dec
iret
repz
in
add
push
enter
add
das
cld
pusha
scas
jae
xorl
add
and
or
movsb
ljmp
insb
mov
jmp
lock
adc
addr16
test
push
jp
push
mov
in
cmp
xor
push
scas
loop
xor
xor
into
fnstenv
fimull
dec
inc
xor
push
mov
lret
out
mov
dec
mov
cmc
cmp
push
lods
sub
adc
mov
adc
sbb
shll
add
or
cmp
push
cltd
adc
dec
stos
popf
insl
xor
sbb
cltd
xor
into
inc
lret
push
sub
rclb
hlt
xchg
and
ds
dec
test
movsl
and
xlat
mov
fadd
int3
subl
shll
pop
push
fimull
popf
xchg
rorb
cmp
or
dec
std
add
add
jbe
cmpsl
sub
stos
das
push
push
push
cmp
int
push
mov
pop
clc
lds
lea
mov
outsb
push
cmp
mul
dec
and
dec
cmpsl
or
pop
cmp
xchg
push
fistl
pop
jl
mov
mov
inc
cmp
pop
sub
in
jbe
fsubrs
jae
rcr
inc
mov
leave
outsl
aam
pop
ss
mov
dec
and
movsl
stos
enter
scas
dec
test
das
rcr
xadd
mov
or
arpl
xlat
mov
add
lock
pushf
cmp
inc
out
in
loopne
pop
mov
mov
inc
lea
jmp
ss
pop
out
fsubrs
jbe
mov
lcall
mov
sbb
jno
mov
sbb
sub
dec
scas
cmp
mov
xchg
inc
push
jecxz
mov
inc
jbe
in
pop
xor
pop
fucompp
sub
dec
sbb
enter
xchg
dec
and
mov
sub
clc
push
inc
clc
subl
inc
dec
xor
jle
fadd
push
daa
or
jl
popf
push
xor
fidivs
or
mov
bound
cld
das
xchg
insb
jbe
les
pop
sub
jns
jp
mov
add
test
nop
mov
lods
pop
push
rcrl
mov
jb
clc
or
mov
xchg
push
push
aam
loope
aas
into
shlb
mov
setnp
stc
fcompl
ja
jle
in
push
inc
add
aaa
pop
call
imul
or
dec
jo
sti
ficoms
dec
xchg
adc
movsb
test
cs
popa
push
mov
adc
and
dec
add
mov
mov
mov
rolb
pushf
rcl
test
push
test
clc
hlt
pop
movsl
mov
xor
mov
mov
sub
rorb
mov
xchg
mov
adc
cmp
adc
sub
ljmp
sahf
jg
inc
lret
jo
mov
ja
xor
cmpsb
pop
mov
pushf
shrl
ret
enter
cmp
mov
lret
fld
cmc
sub
loope
inc
push
or
adc
xchg
repz
cltd
xchg
xor
rcl
insb
add
mov
sub
cltd
sub
cmp
aam
mov
out
adc
push
push
test
jno
cs
jae
cmp
leave
jle
xor
loope
lcall
popa
std
mov
sbb
bound
jmp
stos
adc
das
mov
cli
push
xchg
jns
and
andl
mov
call
daa
ret
orb
test
rorb
add
mov
xor
cmp
int3
add
add
mov
mov
and
lock
pop
lea
adc
push
mov
jo
and
outsb
lods
inc
pop
scas
mov
jecxz
mov
into
lcall
and
push
call
sbb
ss
push
sbb
fidivl
push
and
mov
or
addl
lcall
lret
shll
sbb
xor
js
mov
mov
adc
xchg
sahf
pop
fcmovne
aad
pop
lds
cmp
setae
inc
aad
mov
adc
cmpsb
ds
mov
cmp
or
push
insl
or
jp
dec
mov
mov
xor
sbb
and
cmc
imul
xlat
inc
xorb
inc
push
mov
xor
sbb
arpl
push
xor
cli
mov
stc
ret
add
es
enter
pop
adc
mov
jmp
xchg
add
lahf
daa
outsb
sbb
pop
rcr
fucomi
jb
icebp
cs
addr16
or
jge
sub
sub
lods
mov
shr
or
addr16
cmp
dec
mov
enter
adc
mov
sub
sub
dec
gs
lea
icebp
into
pop
nop
out
fwait
xlat
aam
pop
jmp
mov
fistpl
push
pushf
stc
sub
add
outsl
and
dec
sub
push
lahf
jmp
jmp
push
in
cli
add
pop
push
and
ret
ficompl
ja
cmp
ljmp
iret
mov
mov
push
lods
icebp
lds
xor
or
lods
out
andl
or
stc
and
mov
push
mov
les
ja
test
and
sub
ret
dec
jecxz
gs
lock
dec
ret
lods
mov
sub
sub
sar
shl
das
cmp
cmp
fisttps
mov
out
pop
lods
and
add
loopne
repnz
ljmp
lods
sbb
and
mov
sahf
sub
xchg
add
pusha
cwtl
cs
aas
or
roll
out
inc
lea
aam
in
or
sbb
add
ss
lods
cmp
sbb
inc
push
cmp
lods
sbb
jbe
loopne
loop
lods
mov
outsl
test
popa
pop
fdivs
ljmp
fs
ljmp
cmp
push
ja
lret
dec
or
sub
cmp
push
lea
rolb
mov
pop
sbb
pop
jnp
push
or
dec
mov
fwait
push
neg
cmp
xchg
or
add
mov
fcomps
inc
add
mov
mov
rcrb
cwtl
lret
or
testb
jne
pop
cli
outsb
imul
mov
ja
insb
shrb
push
mov
in
div
pop
out
out
movsl
or
in
decb
lock
adc
cld
js
shrb
adc
cmpsb
rolb
sbb
cmpsb
jnp
xchg
add
sub
jo
mov
dec
jno
mov
lcall
mov
loope
add
push
xchg
xor
test
or
pushf
fstpt
or
dec
adc
or
jecxz
ljmp
xchg
mov
addr16
jnp
or
push
push
dec
lret
pop
andb
sub
dec
xor
aam
sub
lcall
adc
dec
or
imul
shll
popf
and
leave
jo
mov
dec
aas
adc
jns
sub
dec
dec
repnz
outsb
ret
sub
cld
in
ret
in
pop
and
or
jl
sub
sbb
sub
mov
stos
rep
cmp
xor
rcrl
push
jge
push
stc
enter
mov
pop
das
in
add
mov
push
xchg
aaa
int
cmpsl
mov
jl
mov
sub
fsts
insl
pop
call
jae
mov
mov
les
lret
xchg
push
mov
and
sub
imul
ss
xchg
mov
fimuls
push
sub
mov
fidivl
jp
imul
fs
cmpsb
daa
jae
scas
adc
movsb
sbb
lahf
pop
xchg
sbb
sbb
xlat
cmp
adc
jo
stos
mov
cmp
addl
outsl
jno
mov
and
fsts
mov
sub
xlat
icebp
mov
orl
icebp
jnp
out
pop
sar
cmpsb
fsubr
out
fldl2t
std
je
or
mov
scas
jp
cmpsb
into
and
mov
push
hlt
add
xor
lea
cwtl
adc
int
mov
cwtl
mov
lcall
sub
mov
ss
sti
cmp
or
and
xchg
mull
sbb
mov
mov
nop
rcll
inc
shll
dec
mov
nop
shrb
out
clc
icebp
scas
pop
sub
mov
jns
imul
cmp
cmc
test
icebp
in
mov
sbb
cmp
jecxz
inc
xlat
in
sub
aam
aad
ror
mov
popa
jecxz
jo
xor
pop
aaa
mov
shlb
incl
scas
lods
out
test
popf
mov
es
in
cmp
add
ljmp
mov
fistpll
xchg
and
jle
or
incb
pop
lcall
push
pop
and
adc
jecxz
xchg
push
mov
in
iret
out
fstl
test
inc
cli
data16
cld
jbe
jno
add
les
aam
ds
std
lea
mov
mov
repnz
sarl
loopne
mov
mov
mov
mov
in
or
xchg
pop
jns
stos
sub
and
push
loope
xchg
arpl
add
lahf
cmpl
mov
mov
ds
mov
ds
mov
jns
jmp
mov
icebp
int
mov
rcrl
pop
jecxz
mov
out
data16
hlt
ljmp
dec
dec
fwait
mov
nop
pop
pop
cs
sub
fcompl
sub
push
shlb
call
cmc
fcmovnbe
sbb
inc
pop
mov
push
fs
push
inc
adc
mov
sarl
mov
mov
ficoms
sub
or
stos
add
mov
out
push
xor
subl
and
std
mov
movsb
mov
jecxz
sbbb
inc
cmp
movsl
push
sbb
ret
cmp
in
sbb
add
cltd
pop
punpcklwd
jb
xchg
decb
adc
test
adc
out
lea
enter
push
mov
dec
cmp
nop
fildl
jns
xor
orl
mov
jns
jg
rclb
cwtl
insb
push
jecxz
adc
in
bound
xchg
cmp
mov
push
jmp
pop
xchg
lahf
popa
stc
fwait
icebp
push
mov
xchg
sub
mov
sbb
push
or
mov
stos
dec
pop
fisubl
pop
adc
popf
pop
lock
or
rorb
cmp
cmpl
cmp
mov
and
cmpsl
in
push
sbb
sub
inc
pushf
push
or
inc
cltd
dec
xchg
sar
push
test
es
mov
or
call
leave
movsb
outsb
ljmp
out
and
xchg
addl
hlt
das
pop
sarb
jecxz
stc
ljmp
aas
lret
xchg
lret
cmp
pop
shll
bnd
ret
or
xchg
mov
mov
mov
incl
imul
sbb
cmp
mov
scas
xlat
mov
out
mov
bound
jae
cwtl
jl
jmp
jg
in
pop
adc
mov
jmp
insb
push
pop
mov
cld
in
sub
fmuls
notl
out
jg
dec
sub
adc
xor
cmpsl
fwait
daa
jbe
repnz
sub
out
cmp
mov
pusha
lahf
into
insb
jbe
mov
testb
fidivrl
test
and
jns
push
loop
sarl
push
or
aam
loope
fstpt
jbe
xchg
icebp
jnp
std
bound
sbb
iret
dec
push
jl
es
mov
popa
enter
push
pop
sbb
call
inc
and
pushf
bound
xor
in
pop
lret
movsl
sub
or
mov
iret
inc
xchg
test
outsb
cmpsl
arpl
inc
mov
test
add
push
ret
out
jo
pop
inc
testb
push
add
test
rcll
test
out
ja
sub
cld
pop
and
call
lret
xorl
aas
cmp
adc
add
mov
loop
pop
push
pop
ds
shrb
popf
leave
pop
xor
xlat
fbstp
int
mov
add
adc
inc
ret
pop
test
push
push
add
ljmp
lds
sti
hlt
loop
loope
cmp
out
lods
mov
iret
inc
inc
cli
xchg
pusha
inc
out
mov
ss
fld
sub
orl
shlb
cmp
xor
xchg
sub
adc
adc
insl
adc
lock
lods
or
mov
lock
add
jg
dec
dec
lcall
imul
pop
mov
scas
repnz
xchg
test
icebp
xor
outsb
int
adc
daa
stos
cmp
adc
arpl
iret
insb
pop
lahf
cs
add
pop
add
cmp
outsb
jne
arpl
jl
xor
inc
sub
outsl
xor
movsb
mov
rorb
cmpsl
cmp
int
gs
xchg
outsb
and
mov
cmc
popa
pusha
jns
sarb
scas
add
imul
pop
int
aad
push
fcomi
jle
inc
push
adc
adc
test
addr16
xchg
mov
push
push
cmpl
mov
scas
sahf
out
sub
push
mov
lret
into
data16
xor
movsl
sbb
les
xor
xor
sub
dec
push
gs
or
in
mov
jp
leave
negb
lea
push
push
mov
jecxz
push
dec
pop
mov
clc
inc
out
mov
fimull
in
fidivl
jecxz
pop
jle
mov
jae
popa
mov
sub
xchg
aam
stos
adc
add
data16
pop
ss
mov
movsb
insb
jno
cmp
push
test
xor
out
int
aaa
fidivrl
ret
cld
jmp
scas
sub
xchg
fsubr
and
aad
aaa
xor
sbb
dec
xchg
std
push
outsb
out
sbb
or
mov
xchg
lret
stos
xor
sub
xor
sbb
sahf
cltd
arpl
movl
jne
popf
test
mov
ret
ljmp
das
mov
pop
mov
negb
and
pop
shlb
js
xor
add
push
cmp
mov
push
push
movsb
pop
inc
shlb
cli
stos
xlat
dec
or
sbb
push
adc
in
xchg
and
add
xchg
iret
loop
and
call
inc
loope
fidivs
cs
popf
je
outsb
xor
lods
mov
push
inc
clc
mov
movsb
call
sub
in
push
sti
mov
push
dec
fistpll
ss
fistl
mov
mov
cwtl
mov
sbb
sbb
add
out
ljmp
cmpsl
and
faddl
pop
clc
cmc
out
popf
mov
call
cwtl
and
jle
shlb
or
xchg
mov
test
push
jbe
ret
imul
or
rcll
insl
es
mov
adc
call
cmp
in
pop
jne
jecxz
dec
jae
mov
mov
mov
call
call
push
sti
jl
or
cmp
cmp
sbb
test
fcoml
push
jb
mov
dec
hlt
dec
and
sub
mov
fidivrl
imul
sbb
sub
inc
xlat
hlt
mov
insl
cmp
loopne
mov
sbb
jle
add
jmp
out
cmpsb
sbb
sub
mov
inc
ds
clc
fimull
cmpb
sub
sub
inc
mov
sti
addr16
xchg
lcall
inc
sub
lea
pop
adc
in
loopne
add
adc
sub
mov
lahf
ret
cmpsb
xchg
sub
pop
dec
adc
adc
push
sbbl
into
mov
dec
mov
lcall
sbb
mov
add
mov
inc
andl
test
mov
inc
in
sub
test
sub
les
rorl
cmp
iret
adc
jp
popaw
xlat
and
cmpsl
outsb
xchg
jo
jns
iret
xchg
lcall
fstpl
clc
scas
aas
jo
fsubrl
dec
mov
mov
iret
xchg
mov
movl
daa
mov
dec
ficoms
stos
repz
fmull
ljmp
adc
int
ljmp
lea
fwait
cs
xchg
idivl
inc
daa
mov
mov
inc
imul
sbbb
out
or
ret
push
mov
aad
sbb
fwait
xchg
in
xor
add
out
add
pop
lods
sbb
inc
mov
outsl
jo
push
andl
mov
mov
mov
sbb
pusha
sub
outsl
push
mov
aam
out
add
sub
inc
jns
fwait
xchg
add
cld
or
outsl
std
xchg
cmp
mov
pop
cmp
pop
sbb
add
insb
mov
andl
out
mov
mov
out
inc
mov
stos
pushl
fwait
arpl
mov
fnstcw
xchg
push
mov
inc
nop
ds
mov
jmp
add
adcb
or
stos
xchg
imul
stos
or
cmp
out
xor
aad
sbb
bound
push
push
jb
sbb
mov
add
cmp
and
adc
mov
gs
xchg
int
jbe
mov
jbe
cmpsb
out
mov
aaa
adc
les
pop
xlat
pop
adc
addr16
lds
pop
gs
mov
inc
clc
pop
cmpb
out
jmp
js
xor
push
sub
dec
dec
adc
adc
xor
and
das
mov
std
inc
aam
pop
jg
leave
loope
adc
inc
pop
fwait
jns
stos
les
imul
pop
cltd
aam
aam
rclb
adc
add
jge
lret
sar
pop
ljmp
js
ret
ds
std
inc
jp
ror
in
adc
lods
inc
dec
paddsw
jne
jbe,pn
or
sbb
imul
scas
test
jae
sub
adc
add
pop
push
cwtl
cld
ret
cmp
clc
mov
xchg
add
rcrb
arpl
mov
addr16
cmpsl
pop
xor
pop
mov
sub
dec
mov
decl
in
test
push
or
and
notl
jae
xchg
cltd
test
loope
mov
popa
dec
jno
in
jo
adc
push
xor
push
pushf
jne
dec
cmpsb
mov
cmpsl
lock
adcb
das
call
pop
ret
sub
xchg
mov
add
sub
lcall
sbb
cmp
sbb
jg
sub
scas
and
pop
fimuls
mov
pop
jmp
mov
scas
mov
xor
dec
les
xchg
shlb
inc
orl
cmp
nop
fstps
sbb
test
xchg
fisttpl
mov
insl
hlt
jno
shll
into
xor
xor
xchg
addb
xchg
fcomip
mov
jp
rcrl
cltd
iret
js
fadds
clc
stos
pop
lods
leave
pop
xchg
ss
jecxz
cmc
dec
pop
clc
test
dec
xchg
jg
in
sahf
movsb
repnz
mov
sbb
ja
shl
push
lods
sub
jge
popa
daa
sbb
pop
and
pusha
test
xor
test
mov
sbb
mov
int3
rolb
stos
mov
xchg
mov
sub
push
dec
fwait
out
mov
iret
add
pop
add
or
mov
pop
mov
or
inc
aam
jo
cmp
adc
or
add
or
pop
scas
mull
push
mov
push
mov
push
add
pop
lcall
sti
pop
jg
into
inc
hlt
push
test
mov
mov
loopew
loopne
xor
pop
lss
inc
lock
outsb
xchg
in
jg
sub
jbe
cmp
mov
es
inc
xor
out
dec
into
and
loopne,pt
mov
xor
cwtl
popa
pop
mov
leave
cmc
jg
lcall
in
aaa
push
test
push
imul
jbe
and
jno
adc
adc
push
clc
mov
rcrl
sbb
hlt
sub
rorl
sub
or
fsubrs
dec
cltd
insb
push
adc
je
aam
fisubrs
pop
pop
sub
xchg
addr16
repnz
mov
ja
sbb
cwtl
and
sub
sbb
lret
jbe
mov
fstl
and
dec
mov
decl
mulps
repz
push
ljmp
ud0
adc
fwait
dec
xor
inc
dec
adc
xor
pushf
iret
inc
push
ljmp
jp
loopne
notb
cmp
jb
jae
push
sbb
cltd
outsl
pop
das
jo
dec
lock
inc
lock
imul
stos
stos
jbe
adc
clc
stos
cmovp
push
mov
jp
je
sbb
insb
in
sti
push
adc
sub
out
mov
cmp
or
cli
test
cmp
stos
icebp
mov
sub
clc
cmp
or
cmp
add
icebp
scas
ret
and
in
mov
xor
psllw
stos
repz
sti
jl
aaa
icebp
stc
out
lahf
mov
sbb
into
ja
cltd
mov
lock
packuswb
and
jmp
jmp
pop
push
cmc
add
std
ret
aas
and
adc
xchg
sbb
repnz
mov
mov
mov
sub
sti
andps
es
jbe
fstp
cli
dec
lock
daa
jne
and
aaa
dec
cld
lods
push
mov
fwait
jo
jbe
cmp
pop
idivb
negb
cmpsl
in
sub
je
lods
lock
stc
add
mov
ficoms
shrb
out
outsb
daa
mov
xchg
lea
jmp
pusha
sbb
aaa
mov
lret
sahf
popf
xor
xor
into
inc
add
mov
hlt
mov
aad
sahf
popa
xor
and
incl
pop
pop
adc
outsb
cmp
pop
sub
loope
dec
shlb
xchg
or
sub
ljmp
xchg
in
push
mov
mov
rorl
les
mov
pop
adc
dec
jo
mov
jmp
test
dec
out
int
dec
mov
mov
leave
jnp
lods
jecxz
inc
out
mov
mov
xor
xchg
jbe
and
add
or
and
push
pop
ds
roll
testl
shlb
cmp
fmuls
lahf
fmuls
subb
out
mov
dec
ds
int
cmpsb
inc
sarl
pushf
cwtl
pop
or
push
jae
das
test
imul
stc
aam
bound
adc
or
ret
mov
dec
sub
fcompl
sbb
jno
cli
mov
mov
push
inc
dec
ret
aam
xor
dec
lea
rcrb
outsb
mov
adc
popf
sub
in
inc
rorb
notb
pop
lea
popf
sub
ja
fs
pop
inc
push
mov
mov
cmp
sbbb
shl
lret
je
cmpb
mov
addr16
out
lcall
or
or
mov
sbb
adc
je
and
pop
divb
sbbl
ds
repz
cmp
inc
push
aas
sbb
push
scas
nop
push
push
gs
mov
sub
push
mov
arpl
test
in
ds
pop
mov
icebp
popa
pop
xor
sbb
scas
cmp
out
loop
fidivrl
cmc
cmp
and
add
push
icebp
mov
mul
popf
or
data16
jo
jp
xchg
jmp
sbb
add
mov
xor
jle
jg
xchg
ret
mov
mov
xchg
subb
int
mov
js
push
xchg
add
data16
mov
mov
xor
testl
mov
adc
pushl
cltd
xchg
mov
jne
insb
mov
lret
stos
movsb
adc
add
lock
mov
adc
mov
jge
cmpsl
mov
xor
push
loop
inc
aam
pushf
xor
test
or
js
adc
int3
jl
adc
lods
fisttpll
xor
movsb
mov
sbb
lods
test
iret
mov
ja
aaa
arpl
fsubs
es
push
or
in
pop
call
in
lret
push
cli
jmp
jmp
and
js
mov
cmp
es
jg
and
scas
in
adc
je
adc
arpl
mov
push
mov
ret
lds
les
cmp
cmp
xor
and
gs
sbb
fldl
cmpsb
xchg
xor
js
mov
push
shl
inc
pop
lods
sbb
sbb
and
outsb
sbb
aam
shrl
fs
push
jecxz
aad
cmpsb
test
pop
mov
les
cs
sbb
cmpsl
push
push
mov
dec
ss
pusha
mov
aaa
pop
mov
mov
mov
gs
mov
jp
idiv
pop
pop
dec
adcl
or
in
mov
insl
call
dec
xchg
jl
nop
das
das
push
pushf
push
mov
mov
pop
in
sub
insl
push
dec
std
sub
shr
push
je
add
test
ds
push
mov
sahf
ljmp
mull
cmpsb
ja
shlb
movsb
aad
outsb
jmp
mov
test
sub
xchg
sub
hlt
lahf
jne
and
push
in
sbb
fistpl
push
jnp
call
dec
xor
push
pop
or
pop
pop
lods
pop
insl
movsb
jo
xlat
pop
cmp
filds
les
pop
xor
sbb
out
insb
jo
dec
test
sub
adc
mov
dec
xchg
ds
lods
push
cmpsb
sbb
dec
outsb
loopne
dec
rorb
jno
jo
dec
es
push
pop
inc
xchg
fdivrs
sub
sub
jg
dec
and
sahf
repnz
ss
out
lahf
int
lret
push
pop
test
out
repnz
mov
mov
test
lcall
pop
mov
push
test
stc
lock
mov
js
or
out
sbb
push
inc
ret
xchg
hlt
mov
sbb
inc
and
xor
inc
mov
out
js,pn
cmc
xchg
lods
imul
cmp
fisubs
or
rcrl
sarb
push
xor
push
or
movsl
or
inc
cmpsb
test
push
or
cmp
je
or
popa
pop
xchg
xchg
xor
cmpsb
fcomi
xchg
js
cmp
shl
mov
push
jae
pushf
roll
loop
pop
scas
lcall
fistpll
pushf
dec
jge
pushf
inc
ret
fidivs
sbb
sbb
cmpsl
cltd
cwtl
cmp
fisubs
adc
xchg
out
adc
loopne
pop
jo
xor
sub
and
sbb
hlt
lods
leave
cmpsb
pop
pop
je
xchg
mov
fisubs
xchg
jge
shll
and
push
idivb
addr16
mov
lods
jge
mov
dec
je,pt
icebp
adc
pushf
pop
jno
addr16
push
and
lea
stc
aas
bound
into
adc
dec
cmp
pop
jecxz
jo
mov
or
arpl
data16
fs
pushf
adc
xchg
jecxz
mov
frstor
cmp
adc
mov
xchg
push
pusha
es
cmpsl
mov
sub
jns
mov
push
ds
popa
enter
jle
insb
pop
lahf
inc
mov
sahf
and
movsl
pop
gs
sbb
shl
mov
cmp
mov
push
inc
push
xchg
clc
fldcw
mov
lea
les
cli
xorl
push
xorl
push
iret
mov
jle
rorb
xchg
ja
inc
icebp
or
dec
sti
push
xor
cmp
out
out
outsb
or
addr16
fwait
pop
or
jo
shlb
iret
orl
int3
arpl
adc
mov
xchg
in
xchg
iret
xchg
mov
insb
leave
pop
stc
cmp
xchg
jae
mov
jae
push
pop
addr16
cmp
lods
fiadds
cmp
jo
adc
pop
cmpsb
cmp
cmp
lret
cltd
xchg
in
pop
xor
ret
loop
pop
scas
dec
sbb
sbb
inc
sub
mulb
orb
std
fdivs
mov
or
mov
xor
int
mov
rorl
lcall
cwtl
inc
sbb
cmp
jae
push
cmp
aam
add
push
cwtl
fcmovnb
mov
shlb
daa
iret
dec
ret
jno
cltd
je
sar
ljmp
inc
test
cld
int3
pop
xchg
jmp
pop
inc
popa
mov
mov
push
out
push
aas
mov
xchg
cmp
cwtl
fsubs
lcall
lock
lret
call
hlt
fistpl
sbb
js
mov
test
mov
ss
sub
movsb
inc
xchg
enter
jbe
pop
pop
jbe
imul
xchg
stos
adcl
mov
scas
sbb
insb
lds
push
lods
mov
or
ficoml
inc
push
mov
jge
mov
rorl
pop
push
fstpt
dec
sub
xor
cmpsb
jbe
mov
cli
adc
test
mov
das
ret
jecxz
test
mov
ret
daa
push
call
popf
mov
push
mov
mov
add
sub
in
jbe
jo
cmp
sbb
outsb
repnz
daa
ds
aam
cmc
rolb
mov
add
mov
cmpb
mov
and
movsb
mov
pop
das
push
jmp
pushf
test
in
xor
sub
pop
push
xlat
inc
repnz
cltd
scas
dec
sti
xor
inc
scas
xchg
into
iret
in
xchg
mov
push
aam
shl
cmp
out
mov
dec
xor
xchg
fnstenv
dec
xchg
dec
mov
mov
lret
lods
pusha
push
mov
mov
repnz
mov
cmp
sub
ljmp
mov
pop
sbb
jl
xchg
mov
sbb
jno
xchg
or
mov
insl
pop
in
xor
outsl
ja
lods
mov
dec
shrb
mov
neg
or
sub
orl
sub
imul
mov
pushf
nop
in
mov
sbb
inc
sahf
outsl
test
mov
lds
popf
call
ss
xchg
mov
cltd
adc
dec
enter
filds
and
add
mov
ja
cmpsl
out
sbb
mov
adc
stos
pop
cltd
xchg
pop
lods
mov
xchg
jne
and
push
mov
shr
lcall
and
fnstenv
mov
repnz
clc
sub
ss
jbe
inc
push
dec
lock
add
jbe
loope
sbb
sbb
test
mov
jnp
out
xor
xor
push
jp
jno
imul
cmp
dec
cmp
in
repnz
push
xchg
xchg
fs
cmc
inc
nop
in
loope
jb
and
push
clc
int
adc
int3
sbb
test
movsl
or
test
lods
jne
ja
mov
mov
ja
push
cmp
xor
movsl
pop
xor
pop
fwait
jl
add
shl
mov
mul
aad
inc
rcll
outsl
ds
inc
lret
aaa
cld
loop
jb
add
out
push
jecxz
int3
out
or
jae
dec
cli
fdivr
stos
sub
ret
jg
rcrb
mov
pmuludq
push
xchg
push
mull
inc
pop
aad
mov
add
push
add
pop
out
and
test
add
push
and
imul
pusha
inc
int
out
or
push
lea
or
aas
fcoml
lods
xchg
pop
daa
mov
addr16
jbe
adc
loop
aaa
andb
pop
sub
adc
adc
sbb
jnp
xchg
cmpsb
pop
daa
add
jecxz
fwait
imul
out
adc
cli
negl
test
jmp
sub
xchg
jle
rolb
dec
jecxz
pop
in
lds
xchg
xchg
xor
push
xor
mov
xchg
ljmp
mov
inc
adc
shrb
scas
out
cmpl
dec
imul
mov
fstpt
cmpsl
mov
lock
out
mov
push
cmp
fstpt
sub
xor
aas
sub
jl
inc
icebp
cmp
dec
loopne
inc
dec
adc
shll
mov
and
fisubs
mov
xchg
cli
xor
cwtl
mov
pop
rorl
fs
sbb
sahf
shll
sahf
roll
fldt
pushl
or
popa
mov
lcall
loope
mov
dec
ds
clc
mov
xchg
punpckldq
or
jl
jl
sahf
xor
and
pusha
sti
inc
out
cmpl
daa
shl
xor
in
cwtl
in
adc
stos
iret
adc
mov
mov
sub
adc
add
sbb
test
xor
inc
test
sbb
insl
aas
sbb
addr16
shlb
jae
xor
pop
das
sub
fdivl
push
sbb
adc
push
sub
cld
push
xlat
dec
fisubrl
inc
andl
enter
test
pop
xchg
fidivrl
mov
jecxz
jle
scas
add
mov
sub
lock
sub
aam
lret
aaa
movb
pop
fs
loope
mov
cmp
or
xor
mov
xchg
jae
xchg
xor
popa
pop
je
mov
fadds
cld
sti
shr
lods
cmpsl
imul
jbe
in
mov
mov
xor
mov
shll
xchg
jns
shl
repnz
icebp
daa
mov
xor
jae
fstps
sbb
stc
xor
inc
insb
inc
jbe
ss
mov
bound
cmpsl
wbinvd
in
in
mov
push
scas
in
sbb
mov
pushf
and
fisttps
adc
jae
lods
jl
add
and
fwait
inc
mov
cmp
nop
or
stos
shll
jo
pushf
push
mov
movsb
jae
xchg
add
mov
mov
mov
or
rolb
js
call
movsb
add
popl
lods
call
hlt
cmp
jae
leave
push
or
push
cmp
pop
fs
jbe
stos
mov
in
pop
inc
aam
cld
mov
dec
and
popa
sti
lds
mov
cmpsb
cld
out
sarb
shll
fisttpl
aam
int3
jle
repnz
arpl
sub
mov
cmpsb
inc
iret
repz
mov
enter
mov
inc
cmp
icebp
cmc
inc
sti
push
ss
arpl
outsl
adc
in
mov
stos
sub
cmpsl
mov
dec
cwtl
loopne
jb
std
xchg
adc
hlt
daa
jb
shll
push
js
icebp
jno
pop
pop
fwait
xchg
scas
jmp
and
dec
test
fdivr
dec
pop
push
lock
push
es
lret
mov
js
arpl
xor
insb
mov
clc
lcall
ret
loop
popf
mov
fists
in
push
jns
pop
xchg
outsl
and
xor
pushf
lods
fsubl
jle
pop
mov
jne
scas
pop
inc
or
into
pop
sarb
sub
xor
aas
xchg
add
aad
faddp
or
hlt
inc
mov
and
cli
loopne
xchg
lcall
jg
daa
inc
jbe
jge
jp
aam
mov
bound
inc
push
int
stos
pop
mov
xor
mov
int3
inc
xchg
mov
jb
dec
mov
ds
sbb
pop
clc
mov
aad
jno
insl
and
stos
in
push
inc
cmpsb
xchg
icebp
scas
enter
lds
jge
mov
xor
dec
loop
jno
pop
loopne
xchg
lahf
loopne
or
out
test
lds
ds
adc
rolb
shlb
mov
out
xchg
jno
repz
ljmp
and
int
push
outsl
lcall
out
add
fs
lret
call
cmp
jbe
neg
scas
test
mov
lret
cld
and
ds
mov
int
dec
xchg
cltd
testb
inc
test
scas
cmpsb
repnz
jno
jle
sub
sbb
and
clc
mov
mov
lahf
xchg
xchg
mov
roll
movsb
outsb
push
pop
push
dec
jno
cmc
lret
lods
stc
lods
sahf
shrb
int
lea
jp
mov
cmpsl
stc
pop
jge
arpl
pop
jmp
sbbb
cmp
fisubs
adcb
cli
scas
cmp
sub
mov
jle
mov
arpl
jecxz
xchg
sub
das
sbb
push
jmp
mov
xchg
outsb
repz
out
aas
cli
jno
test
xchg
pushf
rorb
lods
lods
fcmovb
out
adc
and
xor
jne
lods
scas
aad
xchg
mov
lods
inc
dec
and
lods
fyl2xp1
frstpm(287
sub
out
lea
pop
push
outsb
add
in
push
aaa
repnz
sub
int3
cmp
mov
mov
pop
jnp
cmp
sub
pop
jge
push
inc
push
ja
lods
mov
and
lds
fwait
adc
ja
mov
pop
dec
sti
ds
cmpsl
dec
imull
inc
pop
mov
gs
cmp
into
data16
dec
push
fistps
push
pushf
xor
test
jg
xlat
das
inc
dec
mov
mov
jle
int3
xabort
sahf
jle
cmp
lods
cmp
dec
lahf
inc
aad
mov
cmp
jo
cmp
fists
sahf
sbb
out
push
dec
movsl
stos
or
lds
sbb
testl
enter
outsl
loop
jnp
outsb
xorb
push
test
xchg
mov
cmp
cmpsb
push
addr16
in
jg
xchg
dec
mov
mov
sub
arpl
insb
mov
insb
mov
add
shll
or
lods
arpl
maskmovq
idivl
cmp
ficoms
xchg
addr16
cmpsb
clc
scas
mov
jae
add
or
xchg
subb
sbb
pop
aas
push
or
fimuls
sub
adc
adc
je
jl
jmp
xchg
gs
ret
sbb
out
arpl
mov
popf
adc
cmp
loop
dec
xchg
pusha
mov
iret
jne
movsb
mov
and
jl
add
jmp
stc
ret
pop
xor
pop
jb
out
ljmp
lds
jo
pop
mov
repz
lahf
mov
jnp
mov
cmp
mov
outsb
shll
push
rclb
aaa
repz
or
cmp
mov
or
sahf
aam
push
mov
push
mov
sub
mov
lahf
test
mov
test
movsb
xor
test
sar
mov
sahf
adcl
sub
mov
inc
and
jnp
popa
xor
lcall
cli
jecxz
call
add
jl
fnstenv
fsubl
xor
mov
cwtl
ret
popa
inc
lds
pusha
mov
jmp
imul
fcomps
scas
pushf
out
sub
pop
scas
mov
aam
inc
xchg
test
test
mov
mov
pop
frstor
out
stc
bound
stos
rcll
xlat
inc
jnp
out
push
test
bound
leave
cmpsl
dec
jbe
jbe
cli
jns
mov
jg
dec
andl
sbb
sub
stc
sub
cli
and
icebp
call
cltd
cmp
int
imul
mov
dec
pop
xchg
negb
int
adc
pop
mov
leave
gs
jne
scas
mov
mov
sbb
adc
mov
mov
cmp
test
jb
scas
sub
adc
inc
cmp
fildll
arpl
mov
jno
xlat
dec
or
mov
cs
jmp
adc
mov
adc
cld
sbb
cld
or
das
std
push
push
sub
jbe
leave
push
insb
pop
js
movsl
jnp
loopne
pusha
fsubrl
sbb
xchg
push
cmp
testb
push
enter
insb
mov
jns
mov
or
popf
xchg
lods
sarb
adc
dec
xor
dec
xor
and
icebp
roll
and
pop
cmc
ret
imul
flds
jne
iret
loope
repnz
jmp
push
jns
stos
mov
or
lods
stos
mov
push
stos
and
loop
pop
mov
fabs
sub
inc
or
xchg
fistpl
out
pop
inc
mov
adc
fwait
mov
mov
test
mov
in
inc
sahf
cmp
fsub
arpl
fmull
pop
sbb
or
and
cld
cmp
aam
cmp
xor
lock
aas
repz
addr16
inc
sbb
out
fisttpl
test
insl
std
rcrb
sarb
outsl
jnp
shl
aam
and
out
push
mov
into
adc
and
or
insl
mov
inc
push
lods
mov
jae
push
adc
dec
xor
lods
iret
sti
and
in
and
out
enter
shlb
orb
not
cltd
scas
scas
xlat
xor
fs
cwtl
xor
and
stos
stc
jne
decb
add
clc
outsb
sti
aas
xor
jne
inc
rolb
adc
jg
test
jo
pop
int
mov
orl
xor
fdiv
add
gs
repnz
lcall
out
jae
jle
mov
popf
movsl
and
sub
pop
xor
xchg
inc
loopne
in
xchg
ret
adc
cs
lock
cmp
sub
mov
mov
cmc
test
dec
push
rcrb
push
pop
push
mov
push
repz
jne
inc
and
mov
sub
push
xchg
call
fistps
push
dec
popl
xchg
xor
pop
pop
dec
insl
std
or
aad
add
mov
cmp
iret
sahf
xlat
inc
mov
cmp
sti
stos
jbe
stos
dec
outsl
inc
adc
jle
in
and
sti
sbb
mov
xorl
dec
or
outsl
pop
lds
jb
cmp
lods
shlb
and
outsb
movsb
push
xor
xchg
sbb
outsb
fldl
jle
sub
cltd
fildl
mov
push
sbb
mov
mov
in
cli
add
dec
push
gs
jbe
in
adc
imulb
mov
or
sub
mov
xor
fidivrl
test
jnp
lahf
retw
jno
mov
rcll
insb
mov
jecxz
xor
outsb
mov
out
in
pop
xor
aas
shlb
inc
xchg
scas
push
lcall
repnz
add
iret
xchg
add
mov
shlb
push
xchg
cmp
mov
dec
or
pushf
test
or
jg
fs
xor
int3
sti
js
dec
leave
add
mov
adc
xchg
test
push
dec
out
cmp
test
xchg
fistpl
mov
mov
scas
sarl
add
push
push
repz
lds
popa
push
dec
push
xchg
and
call
fdiv
inc
jge
sub
dec
mov
xchg
push
ret
xchg
fnsave
faddp
xchg
sub
mov
aaa
sbb
dec
arpl
packuswb
jge
push
jns
aas
mov
dec
fiadds
sbb
mov
lret
leave
sub
cmp
fwait
pop
clc
adc
sti
loope
je
adc
mov
in
adcb
xchg
push
mov
daa
imul
in
je
xchg
push
jae
jp
push
xlat
jns
push
push
cli
xchg
fsubrl
mov
inc
pusha
mov
xchg
pop
test
sub
jmp
sbb
push
in
cmpsb
stos
jp
lods
insb
pushf
push
or
xchg
xchg
lods
push
cmc
and
mov
call
jns
inc
insl
mov
push
imul
mov
loope
fisttps
mov
outsl
fstpt
xchg
dec
pop
cmc
bound
sub
loopne
loopne
arpl
pop
push
mov
mov
mov
xor
fwait
and
ss
arpl
cwtl
xchg
mov
xchg
mov
outsl
dec
lods
call
push
test
lret
inc
loopne
mov
hlt
push
into
pusha
mov
negl
hlt
bound
dec
mov
fucomi
pop
sub
mov
ja
and
jne
lock
adc
dec
adc
mov
xchg
lods
movzbl
inc
jnp
rolb
fsts
int3
mov
adc
push
sub
cmpsl
pop
and
pushf
xor
mov
stos
test
pop
jle
inc
push
arpl
dec
push
mov
xor
call
scas
pop
daa
movsl
mov
jno
jmp
cld
movsb
je
push
daa
lds
or
hlt
mov
jbe
inc
add
decb
outsb
push
pop
in
hlt
pop
pop
imul
adc
ja
sub
cmp
test
inc
adc
mov
out
lods
out
jg
lahf
pop
jmp
mov
xor
shll
in
mov
xor
pop
pop
rcll
mov
sbb
inc
sbb
out
cmpsl
fadds
test
mov
bound
mov
in
sub
loopne
xchg
pop
xor
lods
or
mov
rol
sub
cmp
test
jns
adc
mov
xchg
gs
push
popa
imul
into
pop
ja
ret
jmp
movsl
or
mov
out
add
aaa
xchg
ret
dec
or
jno
pop
aas
mov
jp
adc
mov
jnp
jo
jne
add
push
fisttps
fistpl
jmp
les
mov
jb
lcall
xchg
inc
in
sahf
clc
pop
das
cmc
out
rcll
mov
xlat
xchg
sub
adc
lret
arpl
mov
push
add
and
lret
push
mov
push
lods
lods
lods
xchg
and
pushf
cmp
ja
xchg
mov
or
jo
enter
or
in
scas
cmp
fistpl
xchg
mov
lds
testl
cwtl
ljmp
dec
push
stos
inc
or
mov
cmpsb
mov
pushf
mov
sub
dec
pushf
idivb
push
mov
aas
cmc
lea
int3
or
jne
outsl
lds
out
dec
lret
adc
pop
in
call
test
jg
rclb
dec
fwait
push
xor
loop
jne
cmpl
pop
rorl
pushf
sbb
push
sub
and
cmp
ror
jns
lea
mov
or
cmp
xchg
cltd
jge
jnp
mov
sub
jge
jecxz
sarb
ljmp
pusha
cmp
or
mulb
push
mov
dec
and
push
movsl
fisubl
xor
cld
cmp
out
jmp
add
fimuls
daa
subl
mov
mov
gs
push
and
sub
jns
xor
shlb
add
mov
mov
cli
mov
jnp
call
loope
xor
jmp
sub
aad
cmp
sub
pop
mov
dec
jecxz
ret
imul
repnz
test
fstps
mov
test
jbe
shr
xorb
jp
push
out
jle
lcall
cmp
pop
cmp
cltd
pop
movsb
pop
scas
inc
data16
call
arpl
in
loop
pop
neg
push
and
inc
lcall
sti
ja
ss
adc
or
lock
mov
pop
or
loopne
sahf
fidivrl
ret
sub
cmp
adc
sub
dec
mov
xchg
sub
stos
nop
jmp
repz
xlat
cltd
mov
pop
bnd
cmc
mov
adc
nop
cmpsl
push
mov
push
sbb
imull
xor
fcompl
jp
cmpsb
mov
pop
movsb
ret
jno
jno
mov
iret
out
fidivrs
add
fwait
push
fiadds
outsb
pop
adc
mov
loop
lock
cmp
je
iret
movsl
insb
gs
and
sbb
je
xor
sub
xor
cwtl
xchg
adc
insl
in
jo
or
pop
inc
popf
gs
mov
cmp
out
fisubl
xor
in
adc
lcall
std
xor
jmp
pop
test
cmpsl
pop
or
imul
lock
roll
aaa
inc
adc
mov
push
mov
mov
jl
int
das
pop
and
lods
nop
xlat
jnp
fdivr
ret
out
xor
fildll
mov
outsb
scas
scas
and
sub
sub
sub
loopne
in
subl
cmp
mov
inc
lea
adc
sbb
dec
inc
les
dec
lock
ret
loope
lea
lock
icebp
int
aaa
loop
jle
movsb
cwtl
fiadds
dec
test
out
push
jge
pusha
cltd
xor
dec
jb
jle
push
push
push
xor
in
and
je
mov
pusha
inc
rcrl
and
mov
out
cs
stc
xlat
pop
xchg
push
jns
sbb
ljmp
sub
mov
cmp
push
fcmovb
xchg
cwtl
mov
mov
mov
sbb
leave
mov
lret
xor
pop
in
and
dec
dec
ror
in
pop
gs
add
push
gs
lods
imul
mov
outsb
int
popa
dec
mov
cmpsl
xorl
lret
je
inc
and
sbb
sahf
mov
and
andl
out
adc
jle
jne
mov
dec
ja
fstps
dec
lea
cmp
jbe
gs
mov
gs
loopne
idiv
leave
jp
pop
push
and
in
dec
test
aas
lods
push
test
push
mov
in
mov
and
loope
lcall
mov
jae
and
movsb
sub
outsl
adc
imul
shll
and
jg
loop
xchg
adc
push
ljmp
je
outsb
adc
ror
mov
int
mov
mov
fst
inc
repz
push
std
adc
cs
sahf
sub
sti
add
or
jmp
pop
ret
pextrw
pop
dec
inc
imul
push
and
jb
cmp
and
mov
inc
subb
jns
punpcklbw
cmp
sbb
pop
mov
jmp
adc
push
cmp
lods
mov
jb
aaa
movb
add
push
cmpsb
and
pop
or
rorl
add
idivb
incl
ljmp
jle
call
push
nop
inc
ds
add
dec
aad
mov
xchg
call
jns
call
out
pop
mov
xorb
xor
imul
or
pushf
jl
cwtl
popa
imul
lea
inc
lods
cmpsb
add
loopne
sub
push
cmp
lret
je
mov
dec
cltd
addb
xchg
mov
filds
or
or
pusha
cmp
inc
sbb
sti
fisttpl
sbb
subb
add
or
jno
scas
xor
lods
loope
ret
loope
sti
pusha
pop
scas
push
adc
int3
cld
fs
cmp
xor
outsl
add
or
add
mov
sbb
inc
hlt
jl
aam
in
loopw
insl
jle
clc
out
pusha
inc
sub
out
mov
mov
ljmp
stos
mov
jle
mov
enter
cwtl
pop
punpcklwd
jg
pop
and
or
lret
aad
add
cmp
and
sub
xor
popa
popa
adc
sub
dec
jmp
aaa
adc
mov
xor
push
pop
idivb
and
scas
cld
adc
dec
pop
and
or
push
int
ljmp
nop
push
imulb
out
sbb
dec
add
dec
jno
aad
inc
inc
arpl
add
mov
ret
hlt
jo
cmp
jecxz
push
rcl
inc
mov
xor
lock
jno
sub
cmp
test
sub
imul
dec
or
mov
or
mov
outsb
sub
mov
mov
xchg
rcll
cmp
loop
mov
dec
iret
xchg
cs
cmp
out
jno
roll
adc
stos
xor
mov
xorl
out
negb
cmp
ljmp
push
xor
lods
jo
dec
or
jnp
hlt
xchg
adc
imulb
aaa
adc
movl
jae
in
lret
sbb
pop
stc
lods
dec
jno
je
cmc
das
mov
xchg
add
push
cli
test
fdivp
xor
shufps
stos
dec
add
hlt
push
mov
pop
js
lret
jecxz
out
test
stos
stos
int3
ds
aad
dec
xchg
aam
ret
test
icebp
sub
enter
jge
pop
es
out
pop
bound
sbb
mov
mov
push
xor
jb
insl
sar
jne
jmp
test
roll
push
adc
lods
loopne
hlt
sbb
dec
sub
movsb
inc
push
pusha
xchg
sbb
gs
adc
pop
sahf
inc
in
lcall
mov
movsb
cmp
jne
mov
or
pop
nop
jl
sbb
idivl
or
aam
ss
mov
in
aad
call
fiaddl
ja
ficoms
lods
outsl
xlat
cltd
xor
inc
or
pop
inc
mov
arpl
out
icebp
clc
cwtl
pop
sub
add
and
jecxz
inc
in
ficomps
xlat
jae
xchg
sub
cli
add
mov
pop
test
mov
fwait
icebp
push
jl
mov
test
cs
mov
sbb
stc
push
mov
mov
out
fildll
cmp
iret
mov
xor
arpl
mov
xor
insb
cmp
adc
outsl
push
push
fbstp
jl
imul
test
loopne
fistpll
pop
cs
shlb
sub
fcompl
mov
xchg
movsl
shlb
enter
dec
xchg
xor
bound
loop
outsb
ss
pop
lock
pop
lcall
sbb
cmp
fimull
out
mov
into
test
jl
and
jnp
mov
inc
std
das
mov
jns
cmpsl
jl
fcoml
int3
xlat
push
addr16
push
ljmp
hlt
sub
push
mov
mov
jg
push
dec
add
hlt
pop
sarb
jmp
push
sbb
hlt
mov
cs
cmp
mov
in
call
sbbb
sti
xchg
popf
dec
add
jo
and
dec
call
pop
es
mov
pop
inc
sbb
mov
xor
test
or
cwtl
fldl
outsl
aaa
orl
mov
push
data16
into
mov
daa
xchg
into
dec
mov
push
inc
stc
imul
insl
sbb
jge
jb
mov
push
mov
adc
push
inc
add
add
incl
stos
push
push
mov
dec
pop
pushf
out
xor
push
sbb
stc
inc
xrelease
cld
lret
pop
bnd
fcompl
mov
or
push
adc
imulb
and
push
inc
or
sub
call
repz
push
in
pop
mov
or
xchg
aam
adc
mov
mov
mov
fldenv
sahf
xchg
lret
cmp
ljmp
xor
leave
popf
das
inc
cmp
outsb
fptan
cmp
push
adc
shrb
mov
fwait
cmp
shlb
inc
fmulp
icebp
xor
adc
lods
sub
xchg
sub
xlat
js
jbe
mov
sbbl
jae
or
js
mov
repnz
call
sti
arpl
adcb
fbstp
push
jg
insb
jge
fsubrl
push
sbb
mov
jle
jne
sbb
or
sbb
sbb
jns
lds
mov
dec
ret
test
sbb
clc
push
loopne
jl
dec
push
ja
test
inc
mov
jp
jb
test
popa
insb
sbb
mov
xor
add
cmpsb
push
mov
mov
fwait
jle
inc
aas
movl
ja
and
jnp
xchg
loopne
jne
sub
push
addr16
and
inc
loope
mov
ja
shlb
outsl
jb
dec
jl
iret
jecxz
xchg
int3
iret
call
mov
sbb
test
pop
nop
cmp
or
push
xchg
xor
fcomi
mov
cmp
or
or
repz
arpl
es
pop
movl
pop
orb
stc
in
and
dec
sahf
pop
sub
mov
dec
fimuls
lds
dec
les
ds
xchg
jbe
cmp
push
inc
pop
in
jbe
mov
dec
sub
cmp
shlb
mov
push
addl
cltd
mov
arpl
jge
movsl
pop
sub
xabort
popf
inc
lock
and
loopne
push
mov
cwtl
mov
or
scas
in
cmp
lea
xchg
or
mov
js
lret
pop
adc
movsb
mov
adc
and
aam
push
pusha
in
inc
jp
inc
xchg
inc
lret
outsl
rorl
pusha
repz
andb
pop
inc
cmpsl
aad
aam
nop
fstpl
cmp
fwait
shll
add
sbb
repnz
clc
andb
stc
mov
jns
jb
inc
insl
pop
outsl
hlt
ret
ja
insb
sahf
jg
mov
sub
mov
and
ja
mov
xchg
fsubrs
mov
lock
out
xchg
sahf
push
std
inc
dec
push
shlb
lods
push
jg
aad
ret
adc
adc
movsb
es
scas
aaa
dec
ret
or
ret
int3
bound
je
div
cmp
pop
test
enter
sbb
or
sub
cmc
nop
cwtl
test
pop
xchg
cmp
lods
jae
dec
dec
jge
pop
adc
push
pop
ss
mov
data16
jge
dec
sub
cltd
aas
out
pop
adc
call
mov
jnp
xchg
stos
and
cmpsl
push
pop
pop
cmp
jo
xchg
jo
test
and
inc
pop
mov
popf
jbe
outsb
cmp
nop
mov
mov
jge
pop
xchg
jnp
push
jmp
sti
ret
sub
cmc
ret
push
xchg
add
lret
lret
ja
fistpll
sbb
or
inc
add
test
jo
adc
push
arpl
sub
nop
jp
shr
out
mull
xor
push
aas
ja
push
les
mov
push
push
sbb
sahf
jmp
in
jmp
push
in
test
inc
or
push
les
pop
mov
cmp
pop
sub
scas
cwtl
js
push
and
and
hlt
and
repz
pop
mov
and
sub
mov
xor
mov
stos
leave
fst
repz
call
repz
jecxz
movsl
mov
xor
out
mov
fnstenv
add
xchg
rcrl
xchg
movsb
pop
test
adc
jb
mov
mov
into
mov
movsb
sub
mov
cmp
pop
lcall
push
and
lock
imul
sbb
in
ret
scas
or
aaa
mov
jle
jge
cld
lods
std
push
adc
xor
pop
jg
xor
xor
and
mov
mov
sub
jnp
and
ret
xchg
push
sbb
fstps
mov
pop
and
div
sbb
sti
out
vzeroall
outsl
std
cmp
lret
push
pop
nop
ja
sub
lods
mov
pop
sub
mov
aaa
pop
dec
add
xor
or
fcompl
cmp
dec
mov
cmp
or
add
push
xor
psubsw
lock
dec
mov
pop
inc
mov
flds
sarb
in
and
loopne
out
mov
ljmp
jmp
cmp
sbb
adc
test
jmp
mov
xchg
xlat
popl
or
scas
jo
push
jae
movsb
jmp
push
nop
dec
push
inc
and
aad
popf
jno
mov
cmp
mov
sbb
jge
dec
and
es
fisubrl
and
jl
sub
and
loope
testl
int
stos
sub
xchg
addr16
add
ja
arpl
xchg
in
mov
aaa
pop
dec
jmp
hlt
int3
jbe
mov
dec
movsl
inc
test
out
clc
jp
adcl
cmpsl
push
sub
jno
mov
xchg
sti
packuswb
ljmp
iret
jne
push
adcl
xchg
or
push
aas
mov
xlat
cs
nop
movsb
movsb
test
push
adc
dec
sahf
push
stc
lahf
out
or
js
cmpsl
int3
inc
push
sub
enter
lahf
cmpsl
dec
mov
cmp
in
fimull
fimuls
mov
xchg
sbb
clc
mov
xchg
xchg
scas
pop
out
loopne
sub
mov
sahf
stos
sahf
cli
inc
push
xchg
subl
or
mov
sbb
fimull
js
cmp
adc
pop
jb
push
jno,pn
dec
and
vpshld
jle
xchg
popf
mov
and
and
and
push
imull
or
mov
and
repz
and
jle
repnz
shr
mov
jns
push
xchg
mov
dec
jmp
test
inc
xchg
test
pop
cli
ds
sub
mov
loope
int3
sub
pop
fwait
out
inc
in
pop
iretw
adcl
mov
insl
jecxz
dec
gs
cmpsb
mov
mov
pop
adc
xchg
xlat
xchg
cs
fisubrs
sub
push
mov
mov
xchg
fstpl
mov
push
inc
pusha
xchg
sub
mov
mov
sbb
add
cmp
stos
mov
or
pop
adc
cmpl
lcall
cmovbe
mov
xorl
in
in
js
mull
cwtl
mov
insb
negb
mov
sbb
fisttps
mov
mov
pop
bound
mov
cmp
insb
mov
loop
and
pop
mov
jmp
mov
idivl
fistl
push
ljmp
int3
pop
lock
or
xchg
cltd
adc
subl
das
test
out
ja
sbb
xchg
jae
adc
push
pop
pop
aam
sub
jne
inc
lods
dec
pop
ret
lcall
dec
mov
sbb
fnstenv
xor
and
adc
inc
adc
in
mov
mov
fstl
sbb
add
neg
pop
inc
pop
jns
adc
sub
imul
xchg
adc
jge
mov
cltd
andb
xchg
mov
ret
andb
call
jecxz
sub
pop
ret
shlb
fisubl
call
roll
xor
ja
arpl
jecxz
testl
out
mov
das
in
push
adc
xor
ret
add
mov
fnclex
movsb
pusha
lods
data16
pop
dec
ljmp
pop
jnp
push
leave
jle
jns
ret
and
pop
call
xchg
enter
and
call
jp
adc
pop
int3
test
ja
push
mov
in
movl
scas
dec
fldcw
sub
add
mov
dec
xorl
popa
push
mov
sub
xchg
adc
mov
inc
inc
mov
pushf
push
mov
jle
outsb
sahf
mov
adc
das
mov
cmp
push
insl
sub
sbb
add
nop
and
dec
fs
cwtl
pop
sub
repz
mov
leave
xchg
cmp
sbb
or
mov
iret
and
cli
out
add
and
in
popa
and
sbb
test
inc
std
ja
sbb
aaa
out
shll
xchg
pop
out
jne
xchg
push
mov
xchg
inc
test
aam
mov
and
mov
pop
add
jl
ficoml
shrb
lahf
adc
jmp
mulb
insl
jg
ret
cmp
xchg
xor
in
jge
dec
sub
adc
inc
mov
xchg
mov
int3
sub
mov
fdivl
in
das
push
xor
xchg
mov
and
mov
out
mov
or
dec
out
in
jmp
lcall
push
xchg
inc
sbb
loopne
hlt
cmp
out
adc
outsl
dec
gs
push
popa
jp
dec
xchg
adc
dec
dec
lods
xchg
aaa
nop
ljmp
icebp
push
shrb
gs
jl
push
cmc
mov
nop
dec
dec
adc
and
mov
dec
xor
jb
cli
gs
pop
push
sbb
jle
stos
mov
xor
mov
movb
sti
mov
bound
call
movsb
adc
push
and
pop
std
push
icebp
adc
scas
pop
lods
pop
fwait
ficomps
in
dec
xor
shlb
mov
scas
nop
xchg
repz
test
jnp
imul
sub
sbb
cmpsl
cwtl
pusha
pusha
jge
mov
in
lret
negl
mov
hlt
out
jno
addl
jge
xorb
xchg
out
movsl
xchg
xchg
dec
cld
in
jne
xchg
stos
push
popf
ret
dec
rorl
adc
jno
es
scas
and
addr16
testl
popa
addr16
ror
sbb
imul
int
cmpl
sub
cmp
lcall
cmc
dec
idivl
lret
push
and
mov
pop
pop
mov
xorl
jne
testl
jns
inc
xchg
sbb
aaa
pop
ljmp
dec
mov
jecxz
push
xor
xor
inc
xchg
add
cld
cld
xchg
adcl
sub
jno
jo
rol
pop
mov
hlt
cltd
icebp
movsl
fs
jns
rclb
mov
cmp
pop
out
int3
daa
push
jae
jae
jno
je
add
cld
mov
aas
sub
xchg
add
lea
cwtl
cmc
fsubr
in
nop
out
mov
aam
ret
inc
mov
lcall
ss
loopne
add
imul
lea
cmc
cmpb
neg
shll
push
outsl
aas
popa
repnz
in
pop
cmp
cwtl
mov
mov
jp
shrl
or
or
xchg
jne
das
add
adc
into
add
cmp
mov
xor
mov
jbe
test
lods
sub
push
and
loope
mov
bound
cmp
fs
mov
cmp
dec
push
pop
dec
insb
dec
sbb
adc
cs
pop
arpl
jg
cmp
xchg
sub
push
sbb
sbb
daa
add
test
lds
addr16
adc
mov
xchg
jne
mov
pop
popf
dec
nop
cmp
cmpsl
xorb
sbb
cmpsb
jo
movswl
push
mov
loopne,pt
dec
xchg
fmull
jg
pop
add
fmull
sbb
cld
sub
int3
insb
iret
sti
jo
jmp
mov
sub
pop
mov
or
push
and
das
cmp
enter
cmp
shl
xor
push
pop
adc
xor
ret
jns
insl
iret
cmp
push
mov
das
sbb
mov
pop
stos
or
mov
nop
gs
mull
ficoml
xchg
negb
leave
pop
sbb
pushf
pop
or
xchg
dec
sbb
sbbb
adc
or
dec
arpl
adc
insl
cltd
negl
pusha
push
cmpsb
loope
inc
sub
push
fstpt
sbb
mov
out
mov
les
mov
int3
orl
mov
pusha
test
test
add
shlb
xchg
pushf
jp
xchg
insl
aaa
jecxz
loopnew
add
jge
scas
dec
or
jp
cvttps2pi
mov
arpl
mov
imul
out
imul
and
dec
jnp
jg
fidivrs
ja
mov
addr16
dec
cmpsl
mulb
and
inc
pop
mov
pop
inc
xor
cmp
jle
out
int
sahf
jno
int3
jns
pop
dec
cmp
mov
cmp
out
sbb
mov
loopne
bound
pushl
inc
das
cmpsl
popf
lret
inc
aaa
int3
test
fildll
xlat
jbe
jno
inc
aad
nop
cmp
cmpsb
outsb
sbb
mov
mov
iret
sbb
and
jae
add
and
sub
push
mov
push
out
mov
jns
xchg
cmp
dec
fs
out
mov
pop
mov
into
aaa
into
sbbb
cs
out
cli
lods
xchg
xchg
jg
repnz
imulb
cmc
mov
ljmp
int3
pop
cmp
jno
cs
inc
add
mov
aaa
cmc
stos
rep
push
cld
mov
dec
mov
push
insl
xor
movsl
sti
inc
push
inc
xor
cltd
aaa
mov
dec
ljmp
out
imul
test
lods
sub
dec
add
mov
or
lret
adc
data16
movsb
stos
adc
jp
mov
dec
dec
shll
dec
inc
rcl
sbb
jo
adcl
xchg
add
jne
fadd
mov
fldcw
xor
push
adc
movsl
xorl
adc
std
std
movsb
loopne
inc
movsb
xor
mov
shll
xchg
movsl
test
push
sahf
test
adc
jmp
ret
push
fmull
std
mov
addr16
ss
xor
cmp
xchg
mov
sub
fs
push
int3
xor
or
std
aad
out
inc
xor
fdivs
jmp
popa
lcall
pop
out
dec
jno
push
iret
ljmp
shrb
sbb
jae
cmpsb
or
mov
arpl
xchg
daa
and
mov
in
push
lret
push
sti
fwait
cmp
mov
mov
lds
jae
lret
pop
into
test
lahf
fildll
inc
mov
les
push
xor
mov
imul
xchg
pop
mov
sbb
fmuls
push
rol
push
in
lods
mov
iret
cld
xor
inc
cmpsl
add
push
cs
mov
nop
jbe
lret
ficompl
jecxz
add
jg
and
dec
sti
mov
pop
cmp
pop
xchg
push
mov
push
shrl
arpl
xchg
mov
int3
rcll
dec
insb
lcall
xchg
pusha
sub
dec
pop
test
sbb
shlb
cs
jbe
stc
enter
jmp
cmc
rclb
adc
adcl
and
test
sarl
push
pop
mov
sub
jns
mov
scas
mov
mov
cmc
fwait
mov
and
ret
dec
test
mov
scas
inc
data16
or
ret
sub
mov
repz
adc
push
sbb
es
cmp
jl
push
stos
xchg
xchg
cltd
dec
out
xor
mov
fs
stos
out
rcrb
push
sub
pop
jle
and
testl
or
cwtd
lds
repnz
enter
pop
lcall
aam
sub
and
aaa
dec
outsl
xchg
mov
fstp
and
rcrl
fstpt
mov
push
inc
and
loopne
and
call
data16
fstpt
aam
sub
leave
jge
adc
fst
testb
jbe
add
jno
mov
std
or
dec
mov
xchg
out
shrl
mov
cmp
pop
or
and
or
test
or
and
adc
fdivrl
cmp
call
adc
sahf
xchg
inc
pop
mov
div
lcall
jbe
inc
push
sbb
mov
mov
push
jp
std
ret
test
add
repnz
adc
shlb
jo
sbb
in
sahf
xchg
out
mov
cmp
jnp
sti
cltd
add
fdivl
pop
es
pop
mov
call
jge
in
hlt
outsb
stos
into
jo
sbbb
popa
jmp
out
outsl
scas
pop
pop
stc
test
mov
cli
shrl
mov
jecxz
mov
ja
andb
addr16
jecxz
sbb
imul
bound
rcl
pop
sysexit
jnp
repz
mov
and
shlb
loope
mov
mov
push
adc
out
test
fistpl
leave
shrb
roll
lock
mov
imul
lods
cli
pop
push
das
push
into
jb
ds
imul
push
inc
pusha
stos
cmc
subl
mov
fisttpll
mov
pop
call
in
sbb
jae
cmc
cmp
jnp
dec
and
inc
imul
rolb
lret
cwtl
outsl
push
scas
fildll
add
mov
sub
cmp
arpl
les
loop
movsb
dec
daa
in
movsl
fldl
push
xchg
cmp
sar
dec
jp
push
arpl
sbb
cltd
cmp
loope
mov
lahf
fadd
xor
jae
mov
enter
dec
mov
addr16
imul
fstp
mov
cmpl
cmp
leave
out
lock
aam
jge
pop
fimuls
scas
pop
push
jmp
addl
lcall
pop
mov
sub
lock
jp
mov
testl
sbb
add
scas
sbb
and
test
adc
pop
pop
xor
cld
adc
out
sahf
loope
add
push
es
cwtl
jbe
out
cmp
loopne
push
add
in
lahf
ss
adc
sbbb
movzbl
mov
and
aad
testb
cmp
mov
cwtl
insb
test
icebp
sub
sub
sub
test
cld
xor
call
cld
sbb
xchg
dec
pop
aam
nop
stos
out
sbb
sub
ljmp
dec
inc
add
xchg
mov
xor
sub
test
mov
fsubl
mov
or
mov
scas
or
add
ret
ss
in
push
or
mov
or
popf
add
inc
arpl
cmp
cmp
xchg
jg
std
mov
push
add
push
xor
mov
add
sbb
mov
insb
pop
scas
ds
imulb
dec
enter
test
xchg
jno
mov
dec
or
filds
pop
inc
fcoms
popa
sti
push
cli
imul
mov
ljmp
xchg
or
push
mov
lods
push
pusha
add
hlt
sbb
shll
jo
je
sbb
movsl
or
sub
jne
aaa
decl
loop
jbe
adcb
jbe
xor
ss
imul
sarb
pop
in
sbb
loope
mov
mov
int3
std
lods
push
cmp
push
push
push
std
mov
cmp
mov
dec
andb
and
es
popf
adc
pop
cmp
xchg
test
or
xor
std
push
jg
xchg
or
add
push
cmc
push
shrb
pusha
out
or
stos
rorb
mov
mov
adc
push
aam
sbb
int3
insb
mov
and
imul
sub
pusha
push
and
daa
mov
or
ret
mov
dec
bound
jnp
test
scas
jo
jne
dec
outsl
push
movsl
addb
push
in
xchg
add
aam
xor
adc
dec
mov
mov
lock
cli
inc
les
and
out
add
inc
pop
pushf
or
mov
subl
imul
andps
or
mov
ret
ret
or
imul
pop
sub
dec
dec
pop
push
jo
out
pushw
jae
ljmp
stc
pop
std
xchg
push
mov
jb
pop
dec
sbb
lock
daa
jecxz
sti
pop
flds
into
cmp
push
sub
test
pop
xor
notb
aas
push
jle
push
xchg
cmp
or
shrb
cmp
into
mov
pop
adc
test
outsb
adc
push
scas
fs
rolb
add
lret
jg
jg
xchg
hlt
push
and
jl
add
sub
xor
cmp
push
mov
sbb
sar
cltd
pop
push
cmpsb
jnp
in
arpl
and
cmp
cmp
adc
ss
fistpl
std
les
xor
push
mulb
fmull
mov
push
loop
cli
testb
jns
push
mov
mov
stos
pop
adc
inc
repz
adc
fs
xchg
jecxz
fwait
jl
push
pop
xor
cmp
mov
inc
stos
mov
test
das
jbe
adcl
adc
cmpsl
arpl
dec
cld
icebp
mov
cli
mov
sbb
pop
sbb
pop
in
add
ficompl
pop
mov
hlt
aad
lret
cmp
inc
pop
add
stos
cltd
sbb
pop
adc
js
test
mov
inc
mov
sbb
test
xchg
and
pushf
rdmsr
sarb
jp
insl
add
pop
ss
adc
cmpsb
ljmp
cli
mov
xchg
sub
push
or
fmull
mov
lods
push
addr16
cmc
push
out
inc
add
mov
das
xchg
fidivrl
pop
jle
adc
xchg
in
imul
enter
bound
bsr
outsb
ret
xchg
mov
adc
jp
mov
sbb
ss
cwtl
xchg
mov
lcall
push
and
push
dec
jmp
dec
pop
pop
and
cltd
ds
mov
adc
shrb
ret
push
out
in
fisttps
cwtl
push
cltd
sahf
stc
and
push
es
mov
sbb
pop
out
shll
adc
fnstenv
dec
sub
inc
es
lds
cmp
inc
and
adc
adc
cmp
pop
mov
dec
sbb
insb
mov
pop
cltd
mov
fimull
in
imull
imul
sub
mov
mov
xchg
dec
or
jbe
sbb
jecxz
stos
dec
gs
sub
test
add
aad
jecxz
mov
out
test
ret
lock
call
xchg
sbb
sbb
pusha
mov
jge
or
push
inc
jno
or
push
add
xor
jecxz
pop
mov
aas
testb
xor
cmp
add
sub
jg
mov
pop
push
cmp
push
lea
out
dec
jl
sub
sbb
sub
sub
int
mov
data16
pop
cltd
sub
ja
and
xor
inc
add
pop
dec
pop
jmp
imul
hlt
das
and
call
dec
movsl
jg
jp
jnp
xor
test
jmp
in
fisttpll
inc
and
mov
mov
clc
dec
jl
mov
add
jmp
adcl
js
dec
out
push
dec
and
clc
cmpl
in
lret
arpl
inc
in
pop
ljmp
pop
pop
jne
xor
inc
popa
cmp
fdiv
cmpsb
jle
adc
in
lcall
mov
cwtl
pop
subb
std
xor
mov
les
xchg
mov
lret
jp
push
mov
jle
cwtl
mov
fadd
test
mov
pop
repnz
rep
fs
jno
mov
dec
inc
lahf
xor
scas
mov
int3
and
lret
inc
aam
dec
xor
mov
inc
push
popf
cmpsl
je
jbe
mov
loope
out
push
out
mov
jp
sahf
mov
out
sub
xchg
ja
mov
dec
mov
jb
clc
push
mov
adc
xchg
and
xchg
imul
mov
jne
pop
xchg
fidivrl
stos
dec
add
cli
jae
bound
dec
loop
mov
adc
icebp
rcl
sbb
dec
dec
inc
fisubrs
mov
iret
fstps
outsb
shlb
sbb
loope
mov
dec
push
clc
mov
pop
xchg
jnp
imul
inc
enter
xlat
pop
or
mov
out
sbb
into
pop
push
aad
out
addl
adc
cmc
lcall
insl
ja
push
stos
push
and
test
xlat
cli
cwtl
lea
es
jp
jnp
pushf
leave
es
stos
mov
pop
lcall
testb
jne
lcall
pop
jns
add
xor
fcompl
push
pop
pop
add
mov
and
insl
inc
lods
idivb
nop
cli
pop
add
pop
cld
dec
call
cmp
ds
popa
test
into
xor
arpl
mov
adc
jbe
jmp
aam
loop
ret
push
bound
or
cmp
shrb
incl
sub
xor
lret
adc
loop
dec
xchg
subb
cmpsl
cld
push
pop
lahf
pop
cmp
test
cmp
push
fbld
mov
xor
add
test
xor
pop
add
mov
or
hlt
lret
push
ljmp
mov
xchg
into
cli
add
in
push
test
adc
push
frstor
add
fistpl
sbb
sbb
test
mov
mov
add
pop
das
clc
dec
sub
or
sahf
xchg
adc
into
push
xor
loopne
or
pop
or
lcall
je
sub
or
inc
stc
adc
mov
add
mov
mov
jns
and
jb
fiadds
test
int
jecxz
aam
pop
mov
test
push
test
mov
adc
xor
out
or
imul
ljmp
lahf
cmc
inc
mov
insb
cmp
mov
jnp
cmpsl
or
mov
data16
sbb
add
rorb
je
lret
rcl
pop
es
sub
push
cld
in
clc
dec
mov
repz
add
xor
adc
pop
fidivl
and
pop
xchg
lock
sar
sub
and
or
popa
test
out
repnz
cs
dec
and
adc
scas
dec
cs
lock
cmp
cmp
jne,pt
scas
jns
mov
stos
sub
mov
mov
xchg
mov
inc
negl
ret
stc
shlb
jns
pop
popf
lret
stc
or
in
add
negb
fs
icebp
fsubrs
stos
add
orb
in
and
sub
daa
idivb
pop
out
adcl
incl
repz
sahf
sahf
sahf
fdiv
sub
and
push
add
jl,pt
xchg
pop
ficoml
lcall
and
mov
adc
or
sub
movsb
mov
fisttpl
mov
cltd
icebp
out
add
mov
into
dec
stos
inc
pop
jnp
stc
test
fld
inc
movsb
xchg
or
shll
into
adc
popf
call
insb
movsb
fdivl
inc
jbe
cld
pop
xor
jne
and
sbb
inc
or
mov
adc
jno
test
mov
jl
aas
fstl
push
inc
dec
repnz
sub
lea
lods
bound
push
mov
adc
rclb
insb
push
push
dec
out
cs
outsb
cli
ja
fld1
sbb
mov
xor
fwait
jno
push
pushf
es
add
add
push
dec
ficoml
jns
js
js
outsb
cltd
popf
fwait
adc
fxch
push
pop
fsubrl
xchg
popf
fsubr
cwtl
lea
stc
mov
xchg
fcmovnb
dec
push
cmpsw
sub
aaa
insl
mov
stos
pop
push
adcl
push
jns
add
stc
jb
pusha
jg
push
xchg
fdivl
sarl
pop
insb
test
and
out
lret
lds
jg
sub
lcall
mov
test
mov
in
lret
jno
cwtl
inc
loop
xchg
or
mov
xor
int3
adc
and
sbb
fsub
mov
dec
jnp
dec
fistpll
fnstcw
daa
cltd
pop
inc
shlb
jg
sub
jo
push
sub
cltd
shll
aad
mov
push
lea
adc
cld
inc
lods
stos
or
add
outsl
call
jb
hlt
lea
jae
mov
push
add
hlt
cmc
inc
stos
mov
lcall
repnz
int3
push
dec
dec
push
jg
push
mov
sbb
gs
sub
add
dec
or
or
fcoml
int3
inc
lret
stos
mov
push
test
xchg
pop
push
outsl
and
sub
ljmp
mov
fsubl
pusha
jmp
xchg
xchg
fsubs
aas
push
addr16
pop
push
sub
xor
cltd
insb
xchg
sub
mov
icebp
cs
adc
ret
ds
cwtl
cli
inc
fildl
or
xchg
jnp
xor
dec
into
add
pop
mov
out
cmp
pop
pop
cmpsl
lea
fldt
jge
mov
aaa
bound
lods
leave
sub
cmpsl
out
or
adc
fwait
cwtl
jns
sarb
dec
rol
push
inc
jne
adc
xchg
mov
jb
popa
xor
jb
pop
sbb
mov
aam
mov
mov
cmp
sub
test
mov
push
repz
xor
jo
jg
ja
sub
mov
mov
lret
push
dec
jp
in
mov
and
lea
inc
insb
rorb
inc
add
add
sub
je
mov
add
mov
sub
scas
and
cwtl
out
mov
pop
sbb
jg
loopne
rolb
daa
mov
lea
movb
popf
push
dec
test
add
in
sub
sbb
cld
xor
insb
sbb
sbb
and
add
jge
and
dec
mov
rolb
inc
adc
pushf
imul
xlat
xor
cs
rorb
mov
movl
push
jbe
xchg
xchg
dec
mulb
push
dec
rcrl
sbb
daa
xchg
jmp
adc
fwait
xor
fs
or
test
jle
popf
sub
xchg
nop
or
stos
cmpsb
sub
iret
pop
add
mov
jne
jne
xor
inc
adc
xchg
lret
mov
or
jecxz
dec
cmpsb
push
leave
add
xchg
iret
out
mov
mov
fwait
dec
sbb
pop
ficoms
fdivrs
pushf
clc
push
sbb
insl
sub
sarb
in
mov
imul
test
xor
lahf
inc
sbbb
add
fwait
out
pop
mov
dec
std
data16
adc
dec
dec
int3
hlt
pop
outsl
loope
out
xchg
pop
outsl
stc
das
icebp
adc
fisubrs
enter
lods
or
dec
scas
gs
xchg
mov
mov
sub
mov
add
pusha
pop
fbld
pop
cs
cld
bound
adc
cmp
jecxz
dec
cltd
or
mov
sbb
mov
int3
sarb
out
scas
mov
add
or
dec
pop
cwtl
fbstp
add
imul
andb
jmp
add
lcall
imul
test
shll
cmpxchg
enter
imul
imul
xchg
clc
mov
dec
mov
lret
loopne
cwtl
into
cmpsl
and
nop
out
jl
les
inc
pop
mov
or
add
cmc
mov
push
sub
mov
mov
xor
add
inc
mov
rorb
adc
inc
jnp
data16
ret
je
jle,pt
cmp
mov
clc
or
decl
xchg
pusha
pop
and
and
pushl
dec
jbe
mov
jnp
sub
js
dec
sbb
je
adc
and
movsl
aad
xor
ret
je
and
jno
pop
mov
and
mov
push
testb
in
test
cwtl
push
out
cs
iret
and
dec
pop
pop
cwtl
dec
jecxz
xchg
inc
scas
clc
fnstcw
dec
xchg
mov
gs
and
sbb
dec
jl
aaa
push
pop
lds
mov
xor
sub
test
pop
adc
pop
sub
stc
fisttpll
xor
repnz
or
fistps
push
adc
mov
hlt
and
xor
shrl
call
jg
popa
subb
and
jno
cmpsb
incb
aad
sub
cmp
push
out
or
lret
pop
out
inc
stc
lcall
push
inc
xlat
subl
aad
ja
std
lods
fiadds
fs
dec
mov
xor
mov
aad
ret
in
mov
pop
mov
push
xchg
aaa
xor
xchg
xchg
sub
movsb
stos
movsb
mov
and
mov
xchg
aaa
mov
push
js
dec
sub
call
xchg
es
pop
jae
inc
insl
cmp
adc
inc
lret
xchg
repz
pusha
mov
dec
lcall
adc
fcoms
adc
mov
rcrl
rclb
mov
cmpsl
adc
out
and
pop
mov
arpl
push
and
js
push
push
sub
pop
jmp
mov
das
lret
xchg
fwait
xor
out
rorl
xchg
mov
and
adc
ja
pop
cmp
mov
fists
insl
test
add
or
xor
xchg
std
ret
imul
pop
ss
add
push
cmp
push
out
test
inc
jns
addr16
adc
pop
pop
inc
sti
lea
mov
fldt
cs
jnp
scas
inc
andl
arpl
filds
sahf
push
pop
mov
and
adc
jb
outsl
cmc
or
or
cs
adc
cltd
mov
sbb
dec
in
outsb
dec
cmpsl
imul
mov
jmp
xchg
iret
mov
icebp
negb
shll
mov
xchg
icebp
cmpsb
repz
aaa
cld
divb
cmp
insb
push
imul
loopne
bound
mov
or
cs
push
mov
mov
mov
mov
mov
pop
dec
jo
test
fwait
dec
xchg
xchg
pop
jae
rorl
xchg
call
in
int
push
in
mov
dec
cmp
out
imul
add
popa
push
addr16
pop
ret
out
push
mov
outsl
dec
fdivs
iret
cmp
inc
inc
mov
out
sti
mov
stos
mov
cli
filds
ret
xor
iret
jne
inc
add
std
xchg
mov
sub
push
icebp
outsb
popf
cld
jns
fucomip
js
jecxz
adc
nop
sbb
lret
lods
sbb
jmp
push
cltd
or
inc
inc
enter
mov
mov
sub
out
pop
out
push
movsb
inc
mov
loopne
repz
pop
push
insl
sbb
dec
xchg
jae
repz
lods
idivb
shrl
mov
int3
inc
outsl
jmp
pop
lea
mov
scas
sahf
repz
stos
push
out
add
stos
add
adc
fcmovnu
pop
add
popf
and
mov
push
in
mov
inc
xchg
arpl
mov
xorb
int
aad
outsl
cmp
popa
std
mov
mov
mov
adc
or
jno
mov
je,pn
popa
mov
dec
js
test
outsl
lock
sub
ljmp
cmp
loopne
js
cmpsl
adc
mov
movsl
shll
dec
insb
orl
mov
cs
jns
dec
xor
mov
sahf
fists
adc
dec
sub
pop
cmc
inc
mov
jg
mov
adc
jno
cmp
jp
outsb
cld
cmp
scas
push
mov
fisttpll
aam
or
ret
xchg
lods
jecxz
idiv
fwait
lea
leave
inc
push
iret
or
out
stos
rclb
and
adc
test
add
shl
dec
mov
testb
or
fisttpl
cmp
jne
adc
lcall
and
and
cmp
cmpsl
or
dec
clc
and
idiv
mov
pop
ficompl
and
jl
add
inc
mov
adc
ror
xor
pusha
push
insb
sub
pop
lcall
mov
sti
repz
popf
in
sub
inc
test
jle
sti
jle
fisubrl
orb
int3
pushf
mov
daa
xchg
dec
cmp
add
insl
sub
xor
ja
enter
or
out
pop
test
adc
aad
lods
sahf
push
js
lahf
ljmp
aad
jae
jbe
movsl
sbb
in
test
loope
cmp
ljmp
add
test
mov
push
xor
push
fwait
daa
xor
mov
dec
mov
fs
rcr
fldenv
pop
mov
and
loop
cmpb
pop
mov
sarb
aas
das
fwait
xchg
cmp
nop
cmp
cmp
sbb
jmp
mov
cmc
mov
adc
int3
xchg
into
nop
mov
mov
imul
fwait
dec
pop
jg
sub
insl
xor
jae
and
rolb
lods
push
sub
xor
push
or
stos
mov
sbb
pop
into
fxch
scas
inc
subl
pop
ss
xchg
xchg
adc
mov
adc
ret
push
loope
roll
lcall
pop
pop
lret
std
sub
or
push
scas
mov
sbb
mov
xor
sti
out
push
pop
add
xchg
js
out
imul
aaa
lods
fadd
mov
xchg
pop
dec
pusha
push
test
jp
adc
pop
pop
sbb
sub
dec
fabs
cld
and
xchg
xor
iret
jo
xor
icebp
jae
or
adc
clc
movsl
pop
es
jns
stc
mov
and
inc
pop
scas
enter
testb
sub
xor
push
jns
mov
cmpsb
imul
sbb
push
xorl
js
imul
or
xor
cwtl
ret
xchg
testb
mov
pop
xor
ds
movsb
in
fcoms
fistpl
out
push
std
hlt
pop
xchg
mov
ret
jo
orps
sbb
cmc
addb
jae
outsl
and
mov
cmp
xorl
xchg
fcomi
popa
mov
cli
fsubrp
clc
daa
add
mov
xchg
inc
lods
fmuls
sbb
into
loopne
fadds
test
popa
pop
xchg
cmp
jmp
ret
ret
lcall
jo
stos
popf
jl
insb
or
lods
dec
add
loopne
lcall
inc
lods
addr16
nop
movsb
pop
mov
mov
out
call
sbbb
xchg
pop
xor
add
out
pop
dec
or
xor
gs
lea
in
popf
mov
mov
and
xchg
std
push
xchg
jle
sti
mov
jg
dec
sub
inc
daa
xor
mov
mov
movsb
mov
xchg
sub
insl
mov
or
jne
xor
imul
mov
cmp
mov
push
enter
adc
out
cmc
sub
and
in
jne
outsb
push
adc
in
cmp
mov
cmp
or
lahf
cmp
cli
loope
rcl
sub
jl
stos
movsl
icebp
into
or
xchg
movsl
add
fisttpll
sub
cmpsb
in
int3
shlb
jmp
xor
add
fisubrs
pushf
loope
cmc
add
jns
outsb
mov
dec
and
in
jg
mov
adc
mov
lods
push
data16
sbb
popl
ja
cld
adc
jbe
cmp
push
movsl
inc
les
adc
dec
aam
mov
push
mov
jp
cmp
mov
mov
pop
push
push
xchg
cmp
ja
mov
enter
dec
xlat
add
mov
push
idivb
popf
dec
xchg
push
daa
icebp
and
xor
ficompl
fisubrs
pusha
lcall
push
in
sbb
pop
std
loopne
push
mov
add
leave
xchg
ja
fsubrs
pop
roll
jmp
or
push
push
xchg
jne
sar
rcrb
movsb
fbld
inc
ret
or
cmpsl
mov
mov
jo
jle
mov
stos
movsb
mov
in
mov
adc
ja
mov
pusha
cmpsb
adc
xor
inc
aas
loope
shl
jp
add
pusha
adc
and
and
imul
cmpsl
insl
xchg
mov
mov
sub
int
lret
in
cwtl
add
lret
xor
and
addr16
inc
or
out
mov
subl
mov
pop
mov
loopne
fiaddl
push
out
or
and
ficoml
outsl
ljmp
xchg
pop
fisubs
cli
push
hlt
ss
subb
cli
lock
mov
sub
mov
sub
loop
push
jl
inc
sub
shrl
cmp
lods
arpl
jg
lods
jo
push
jmp
or
imul
xlat
imul
push
gs
std
inc
mov
jo
jb
mov
insb
pushf
and
sarb
and
je
adc
loopne
push
addl
lahf
gs
es
pop
xchg
lret
imul
pop
pop
int3
mov
imul
cld
push
test
ret
inc
push
jle
fwait
popfw
xchg
popa
pop
dec
and
das
and
cmp
sub
inc
lcall
dec
or
mov
sub
mov
sub
dec
pop
test
movsb
shlb
gs
xor
outsl
inc
fwait
push
int
arpl
jecxz
cmp
lret
cmp
jge
or
dec
out
aas
movsl
test
add
cmp
adc
shll
jle
sbb
ret
movsb
jecxz
addb
stos
cmpl
or
rorl
pop
mov
push
fucomip
xor
loope
mov
js
shl
pop
push
outsb
sub
jbe
ret
mov
jb
inc
inc
outsb
jle
clc
cmp
es
bound
popl
xchg
push
add
inc
in
xchg
lcall
inc
aad
jle
adc
cltd
mov
daa
xchg
fldl2e
sbb
xor
insl
les
dec
pop
or
ret
and
mov
jp
or
leave
push
jno
add
das
enter
inc
jo
cmc
aad
and
out
daa
jno
jne
divl
outsl
jp
sbb
jl
sahf
sahf
pushf
scas
das
push
push
clc
xor
ss
push
add
lods
outsl
out
and
push
dec
mov
jge
repz
popf
mov
pop
mov
xor
hlt
mov
fimull
iret
pop
xchg
das
and
int
add
and
out
rorl
out
cmp
push
pop
pop
adc
lods
jp
cmp
xlat
or
mov
mov
add
sbb
mov
pop
or
push
inc
pop
out
loopne
inc
cwtl
hlt
mov
push
inc
jl
lahf
sahf
mov
loop
in
aad
push
sti
dec
icebp
mov
mov
and
dec
gs
outsb
xchg
notb
mov
pop
into
movsl
int3
insb
jns
cmp
jmp
mov
inc
mov
sar
sahf
fwait
jp
jb
or
xchg
cmp
lcall
pop
addr16
xchg
push
sbb
pop
cwtl
jmp
pop
inc
dec
or
sub
leave
inc
test
dec
mov
mov
bnd
dec
imul
ljmp
pop
mov
repnz
into
lret
fimuls
imulb
out
pop
add
in
into
cwtl
loopne
cmp
dec
mov
mov
es
push
cmp
icebp
jmp
jge
test
cwtl
mov
ss
add
dec
mov
scas
sub
inc
push
jb
xor
and
pop
ret
jmp
movsl
pop
pusha
mov
ljmp
sahf
lcall
and
into
sub
mov
sar
xor
mov
mov
ss
imul
add
fdivs
or
in
pusha
adc
adc
push
std
clc
push
sahf
or
repz
add
bnd
sbb
loopne
daa
xor
cld
xor
adc
rolb
and
int3
scas
pop
test
mov
add
adc
pop
lret
adc
xor
mov
into
sbb
outsl
ffree
nop
xchg
mov
xchg
sti
and
inc
jne
push
out
inc
mov
and
dec
orb
fwait
pop
xchg
movsl
dec
loopne
test
mov
sti
mov
aas
in
and
popf
lret
test
fcmovbe
mov
cmc
ja
lret
fcoml
dec
jnp
mov
jmp
lret
lcall
imul
iret
lods
pop
push
call
insb
repnz
mov
scas
arpl
pop
nop
jne
inc
pop
xor
inc
push
mov
or
dec
ja
dec
imul
cmp
push
mov
movsl
sbb
pop
pushl
xchg
icebp
aas
add
cwtl
das
push
xchg
sub
fstps
fdivrs
pop
or
insl
or
cmp
jp
or
and
inc
add
lahf
pop
dec
movsl
cmp
cmp
fidivl
xchg
cmpl
call
dec
mov
fnsave
and
out
js
int
cld
or
mov
mov
mov
fisubrs
mov
dec
hlt
sarl
popf
mov
sub
in
pop
xor
mov
push
cld
adc
stos
mov
pop
xor
inc
cmpsb
sbb
or
arpl
and
adc
sti
jo
dec
shrl
mov
ret
ljmp
arpl
ljmp
cmp
push
push
mov
out
mov
and
out
sahf
push
push
push
int
pusha
sub
pop
adc
lods
lods
mov
mov
inc
mov
jle
cmp
mov
enter
jmp
jg
mov
out
inc
xchg
pushf
lcall
cmp
adc
xor
dec
imulb
shlb
inc
dec
push
je
in
out
aas
mov
jnp
pusha
cmpsl
and
pop
nop
mov
inc
lock
dec
and
movsb
jp
jne
testl
sti
sarb
repnz
stos
dec
cli
test
add
mov
int
add
mov
jns
out
leave
es
xlat
mov
mov
flds
inc
imul
cmp
jnp
sub
fstl
fists
ret
and
out
or
sub
cltd
fwait
scas
pop
daa
in
adc
jp
out
lods
pop
jmp
sbb
sub
xchg
jg
mov
in
ret
mov
mov
xchg
aad
std
or
je
mov
in
int
or
lcall
add
fsts
mov
ds
cmp
sbb
push
or
xor
xchg
mov
mov
sbb
lods
cmp
push
adc
cmc
out
ffreep
mov
loope
shrl
int
pusha
mov
ffreep
add
cld
adc
inc
cmp
dec
adc
lret
inc
je
dec
test
idivl
loop
aaa
lods
dec
inc
scas
mov
lods
pop
push
xlat
stc
mov
xor
and
test
xchg
icebp
cld
sub
inc
dec
repz
dec
test
stos
inc
cli
in
cld
xor
js
jge
repz
popa
push
xchg
jns
dec
sbb
addr16
or
jae
icebp
mov
mov
fldt
xlat
mov
in
or
pushf
sbb
cmpsl
cmp
aaa
pop
outsl
pop
orb
add
xchg
daa
adc
cmp
jmp
lret
dec
std
add
jecxz,pn
jle
xor
jns
popa
daa
scas
xlat
mov
imul
jno
adc
pmullw
cmpsl
xchg
sahf
unpcklps
pop
push
fst
adc
cmpsl
lods
addr16
test
dec
les
rcrl
push
and
dec
xor
and
sub
pop
and
loopne
mov
inc
mov
pop
pop
cmp
dec
sbb
adc
insb
pop
lock
pop
cltd
fstps
icebp
cmp
pop
arpl
cld
cmp
ss
pop
add
pop
mov
xor
popf
xorl
int3
adc
addr16
test
shrb
pop
aad
xor
roll
cmp
mov
fisubrl
decl
imul
dec
mov
mov
push
jae
mov
xor
sbb
call
rorl
testb
or
rclb
inc
fsubl
std
cmp
pop
shlb
push
sub
idivb
push
xchg
dec
lcall
leave
xchg
adc
sbb
xchg
mov
and
out
addr16
jbe
sbb
adc
sub
xchg
push
fsubl
mov
push
adc
cmp
int
incb
push
cmc
sar
mov
andl
cld
mov
lods
fucomp
aaa
and
jne
pop
mov
pop
pop
loopne
sub
inc
outsb
add
loop
lcall
mov
or
addr16
test
mov
rorb
xor
add
repz
xor
test
mov
in
in
and
lcall
jl
adc
cld
insb
gs
hlt
and
inc
push
out
shll
ja
sbb
cs
clc
push
notb
cmp
aad
enter
push
mov
cltd
imul
add
xor
mov
gs
xchg
hlt
icebp
pop
jns
add
pop
js
test
mov
jmp
outsb
jge
ret
sub
addr16
imul
daa
push
mov
dec
xchg
adc
outsl
sbb
sahf
xchg
fisubrl
test
xchg
jbe
ret
push
xchg
cs
push
nop
sbb
shr
sub
cmp
jge
push
or
fs
lea
xor
jge
xlat
pushl
push
lods
imul
and
test
cs
push
scas
ds
std
cmpsb
mov
js
mov
sbb
ret
adc
rorb
pop
rcl
call
jb
jp
mov
lahf
in
dec
fsubrs
pop
jle
cmp
test
ret
out
bound
idiv
pop
jae
sbbl
sub
ja
jmp
rorl
mov
lret
lret
mov
jnp
aad
pop
mov
xchg
or
mov
hlt
movsb
inc
mov
jns
pop
and
dec
adc
loop
sub
dec
stos
imul
pop
push
xchg
and
addr16
push
cmpsl
lock
fs
out
aad
jne
iret
cmp
xor
push
test
in
cmp
jmp
jg
jl
jl
insl
mov
aad
push
pushf
sub
mov
daa
sar
loop
sbb
sbb
fwait
icebp
inc
and
call
xchg
sbb
out
fists
or
fistps
into
push
jo
add
mov
data16
xchg
inc
sub
scas
leave
mov
into
nop
pop
dec
xchg
inc
pop
jo
sub
push
stc
shll
mov
in
push
inc
int3
jns
jmp
xchg
xchg
xchg
mov
add
lret
test
or
out
clc
ds
gs
fwait
xchg
lahf
mov
pop
push
aaa
push
dec
pop
sub
cmp
jo
jmp
mov
insb
psraw
in
jp
iret
jecxz
scas
cmp
stos
lds
jmp
push
fildl
popf
negb
test
xlat
adc
mov
add
push
xor
rclb
popa
fstpl
loop
dec
sub
cmp
in
loope
in
incl
lret
pop
xor
mov
fnstenv
pop
sbb
mov
jne
test
imul
inc
mov
xchg
sub
cmp
sbb
std
pop
jae
mov
loop
dec
mov
xor
jge
jmp
in
push
stos
mov
xor
mov
xchg
xor
mov
mov
xchg
adc
aas
movsl
fsubs
inc
pop
aam
dec
lret
and
popa
xchg
jge
cltd
mov
mov
lods
xchg
jb
addb
jnp
sar
aaa
lock
shlb
loope
dec
jno
inc
sbb
jl
mov
js
cmp
ds
mov
dec
adc
shrl
cmpsb
jo
dec
sahf
jns
pop
jl
das
mov
imul
cmp
fimuls
out
sbb
fistpl
add
xor
or
sbbb
lahf
push
jl
repz
xor
sbb
mov
subl
pusha
je
lods
loope
dec
mov
rcrb
loopne
scas
inc
dec
loope
push
jae
scas
in
inc
pop
push
add
mov
push
popa
lahf
ds
pop
repnz
in
daa
xlat
imul
dec
sbb
dec
les
rolb
leave
sub
adc
cltd
jne
jle
js
adcb
es
leave
test
pop
fldenv
notb
adc
mov
ljmp
jns
mov
pop
lret
push
xlat
inc
cmc
sbb
dec
push
leave
or
pushf
leave
adc
xlat
mov
sub
xor
fadd
cltd
dec
icebp
cmp
jns
ljmp
jmp
cmp
pop
inc
add
push
xor
push
int
nop
dec
iret
push
adc
or
mov
lea
movsb
mov
mov
mov
ret
mov
cmc
pop
push
lret
xor
pusha
pop
test
push
pop
test
xchg
call
push
cli
inc
jge
xorl
rorl
cmpsb
xor
sub
fadds
and
in
mov
pusha
mov
in
sbb
push
daa
rcl
inc
and
jb
fidivrs
pop
sub
pop
mov
add
popa
inc
call
in
out
mov
enter
shrl
mov
jb
ret
sarl
cld
int
push
mov
xchg
aam
adc
inc
mov
addl
lods
and
pushf
out
xchg
adc
cmpsl
lock
push
inc
dec
jp
dec
pop
cltd
fwait
push
lcall
notl
mov
cmp
rorb
pop
cmc
into
stc
fisubrs
xchg
repz
sub
lahf
xor
push
icebp
lea
cmc
pop
jl
loop
rorb
into
stos
pop
ror
dec
hlt
in
adc
add
ret
dec
stc
gs
jmp
pop
adcl
push
xor
adc
and
cwtl
lahf
loope
push
out
cmpl
jbe
push
jo
mov
jae
test
cmp
decb
xchg
sub
jg
cmp
outsl
and
cmp
popa
repz
mov
push
lock
into
fcomps
shll
in
pop
sub
fstpl
add
push
loopne
jbe
sahf
jbe
leave
lcall
in
sub
cmp
mov
outsl
push
sbb
fisttps
ljmp
xchg
mov
and
sbb
ds
sbb
sub
inc
aaa
mov
mov
in
int3
or
xchg
mov
push
jge
call
sar
pop
xchg
repnz
or
aaa
out
lock
cmp
or
inc
dec
and
insl
dec
add
stos
cld
and
pop
dec
sbb
jl
mov
and
das
pop
cmpsb
add
sbb
sub
jo
jg
inc
inc
cs
or
jno
mov
lods
mov
in
ret
mov
push
sbb
xor
sbbl
iret
adcl
cmp
pop
sub
cmpb
push
xor
fcompl
sbb
jmp
adcb
cwtl
sbb
or
cs
jmp
cmp
out
fnstsw
cmp
add
adc
imul
xchg
rorl
jbe
fcmove
pop
sub
jl
jne
addr16
inc
adc
sbb
pushf
xchg
xor
jno
push
dec
arpl
psrlw
js
enter
out
shll
add
jns
inc
lret
lret
jo
dec
and
push
imul
scas
push
xor
push
sahf
jns
loop
dec
sub
or
add
ljmp
out
rcl
inc
pop
adc
adc
jge
out
mov
cmpb
lea
mov
add
dec
ja
repz
cmpsb
out
jge
lds
cmp
jge
and
inc
push
btc
inc
lret
test
pop
hlt
fmull
pop
mov
rcrb
or
call
sub
filds
aad
jne
cmp
jnp
into
js
fsubrl
mov
push
push
movsb
inc
sub
sub
fmuls
subl
dec
xchg
out
add
mov
xor
cmp
cltd
and
stc
pop
mov
xor
mov
icebp
fisttps
loopne
outsb
mov
dec
pop
cltd
lods
or
jge
mov
iret
push
call
into
sub
jle
sarl
lock
sbb
cmp
and
dec
outsl
rcrl
int
lock
lcall
mov
ss
mov
bsf
pop
pop
int
mov
sbbl
decl
pop
dec
pop
inc
sahf
xchg
mov
icebp
push
lock
js
and
xchg
sbb
ficomps
xchg
lret
xchg
jo
cmp
mov
push
lahf
push
push
mov
mov
add
jns
mov
push
lcall
pop
in
xchg
stc
negl
into
add
pop
stos
cltd
imul
jp
clc
add
popf
es
inc
dec
daa
push
xchg
fnstenv
jmp
sbb
in
dec
xorb
dec
dec
sbb
clc
sub
shr
and
mov
adc
xor
sbb
insb
bnd
jbe
sub
je
mov
mov
mov
hlt
jne
and
test
popl
ficoml
sub
lods
imul
xor
sub
push
sbb
sub
pcmpgtb
sbb
cmpsb
shr
ljmp
fnsave
lods
cmc
stc
sbb
sub
lods
adc
imul
cmp
lahf
jae
sbb
imul
inc
mov
ljmp
fadd
rolb
cmp
popa
pop
movsl
dec
mov
test
jae
aas
fnstcw
jge
orb
dec
cli
adc
sub
mov
sahf
nop
out
iret
into
shr
push
insl
mov
arpl
cmpl
test
jns
jns
xchg
sub
call
aaa
mov
enter
fs
call
loop
and
cmp
inc
mov
adc
fs
inc
fisttps
mov
cmp
imul
jl
mov
lcall
mov
dec
mov
push
scas
dec
sub
es
movsl
dec
test
aam
cltd
aam
dec
out
xlat
push
lods
ret
xchg
push
lcall
cmc
cltd
lea
pop
lret
out
inc
and
mov
dec
test
jns
jle
imul
fwait
les
mov
cbtw
add
das
nop
mov
xor
aaa
inc
add
mov
fists
push
jns
push
push
dec
xchg
fdivrl
int3
scas
push
push
int3
scas
mov
mov
pop
aam
sub
inc
jg
fiadds
pop
and
pop
cmp
fistl
sbb
mov
ficompl
mov
cmpsl
cmp
aam
and
or
data16
mov
xor
push
pop
rorb
addr16
xchg
sahf
add
lods
mov
pop
sbb
es
into
fucomip
push
in
es
and
fdivl
das
insl
pop
sbb
add
mov
ljmp
xchg
sub
cld
xchg
sub
pop
push
xchg
push
push
in
add
lahf
jb
cld
jae
mov
sub
dec
and
jl
es
stos
sub
jbe
pop
into
out
stos
inc
scas
mov
int
repnz
sahf
in
dec
xor
pushf
incl
push
sahf
fcmovnb
lock
call
xor
iret
ds
aad
cmp
dec
rcr
out
and
outsl
leave
cmp
frstor
test
jnp
aad
aaa
lock
fldl
repz
xchg
lods
adc
aaa
insb
jge
ret
mov
test
sub
sub
mov
dec
pop
sti
movsl
clc
xchg
push
push
call
sbb
mov
pop
sbb
cs
mov
int3
out
push
scas
xor
mov
xchg
enter
pop
ja
sbb
mov
push
das
call
inc
sub
xchg
out
into
sbb
and
mov
sbb
cmc
jns
fcmovu
jge
mov
repnz
repnz
lea
add
fsts
pop
icebp
vphminposuw
push
mov
mov
cmp
mov
mulb
in
cmpsl
into
push
int
xor
fiadds
jae
and
fcomps
sarl
xchg
adc
je
mov
mov
lods
push
repnz
fsubrs
in
jl
dec
dec
lahf
rcl
loope
nop
rcll
inc
stos
je
sbb
and
mov
daa
inc
pop
mov
lock
inc
andb
jbe
sbb
mov
repz
or
pop
popf
jno
loopne
stc
xchg
iret
aad
push
pushf
pminsw
jle
das
cmp
cmp
lret
std
andl
xadd
addr16
mov
lret
xchg
xchg
jb
lds
mov
xor
sub
pop
nop
call
cmp
aas
je
jno
sbb
in
adc
adc
lret
int
es
mov
lret
clc
push
and
das
jg
lds
mov
and
test
add
sbb
cmp
xor
fldt
lock
outsb
lcall
int
addr16
inc
arpl
xchg
push
xor
imul
loopne
out
lret
push
inc
lahf
mov
sbb
xchg
sub
sahf
inc
push
popa
adc
ficoms
fcompl
and
pop
das
sbb
and
fs
jg
scas
stc
dec
mov
cmp
sub
dec
in
ret
inc
push
mov
pop
mov
repz
xor
je
lretw
mov
subl
shll
cmp
repz
or
notl
xchg
adc
pop
and
ret
adc
dec
mov
cmc
stos
je
fwait
pop
out
in
xor
lahf
jmp
shlb
daa
test
es
shll
sub
ljmp
daa
test
xchg
cmp
or
xor
dec
nop
jecxz
in
mov
jle
je
cmc
sub
movsl
mov
test
adc
fadds
cwtl
cwtl
andl
jp
pop
gs
mov
jge
sbb
cmpsl
xor
and
fnstenv
nop
pop
and
xor
mov
cld
hlt
loop
rcrl
ret
jne
pop
aaa
lea
popl
sub
mov
cli
pop
cwtl
xchg
ja
cltd
xor
test
and
mov
stos
pushf
inc
add
test
push
and
lret
loop
push
mov
jmp
leave
cmp
xchg
fnstsw
std
pop
push
push
sub
mov
and
mov
adc
mov
rolb
mov
or
pop
push
add
add
pop
stc
js
adc
xchg
push
fmull
inc
shll
sbb
test
push
imul
ret
adc
in
cmp
leave
jge
adc
pop
aam
mov
int3
fwait
movnti
out
int
aad
movsb
dec
movsb
pop
add
sbb
shll
hlt
mov
sub
inc
dec
sarb
cmpb
xchg
popa
push
fs
or
test
imul
sbb
fcoms
adc
leave
imul
add
pop
pop
jb
clc
aam
dec
push
fstl
cmp
or
cltd
pushf
dec
xlat
out
push
in
test
or
ljmp
inc
mov
loopne
sbb
cmp
and
push
adc
push
movsb
sbb
push
or
push
int3
imul
jecxz
leave
push
mov
cmp
test
lock
sub
mov
xchg
push
addr16
testl
adc
push
out
aas
xor
nop
imul
xchg
stos
pusha
das
mov
push
repnz
test
jnp
mov
test
jl
ja
push
jae
xchg
jnp
call
inc
jl
add
daa
mov
xor
out
dec
mov
mov
add
pop
sub
jns
rorb
xchg
add
sbb
sahf
xor
test
mov
jmp
cmpl
jl
loope
xchg
pusha
push
lods
mov
mov
jnp
insb
push
leave
lock
mov
mov
xor
mov
inc
adc
and
cmpsb
or
fdivrl
dec
and
and
movsl
push
dec
pushf
int
cmp
fcmove
repnz
cmpsl
sub
push
out
adc
inc
sahf
outsl
mov
stc
mov
test
sub
out
adc
out
push
dec
les
fdivrp
sbb
popa
add
addr16
cltd
cmp
dec
test
sbb
xchg
mov
scas
outsb
xchg
xchg
cmp
inc
lea
xchg
pop
push
incb
mov
xchg
cmp
add
cmp
adc
push
jns
inc
fadds
jg
lahf
cs
gs
fcompl
add
imul
cltd
push
icebp
jle
or
mov
pop
cli
leave
lods
mov
sbb
and
insb
push
push
inc
xchg
cli
pop
nop
ja
mov
jb
sub
roll
push
sahf
ja
jo
mov
insb
fldcw
mov
lret
icebp
or
and
inc
div
pop
decb
movsl
cltd
and
dec
push
sub
pop
add
jge
imul
imul
stos
out
cmpsl
adc
imul
add
fisubrs
mov
movsl
dec
cmp
lock
lea
maxps
mov
add
and
mov
jne
xor
inc
repz
in
js
or
and
andb
cli
lods
cmpsl
push
out
hlt
jmp
and
filds
mov
or
adc
dec
scas
sar
ret
push
pop
pop
mov
sbb
mov
and
sbb
cmpsb
repz
stos
stos
mov
lds
cs
loop
or
mov
adc
cmc
mov
push
and
mov
subl
test
mov
fucomip
mov
push
insb
mov
xchg
aam
mov
xlat
xor
iret
add
adc
scas
xchg
or
dec
xchg
sbb
loope
mov
jmp
aas
lcall
xor
push
std
mov
sbb
ret
enter
jmp
xor
or
jne
mov
stos
shrl
dec
pusha
popa
addr16
test
push
pop
sbb
mov
pop
andb
imul
jae
mov
push
adc
cmp
xor
mov
cmp
popa
push
sbb
popf
ret
add
aas
incl
pop
mov
xchg
dec
add
mov
sahf
das
xchg
in
test
push
adc
mov
aad
test
jge
cmp
pop
stos
gs
pop
mov
xchg
inc
cmp
mov
outsb
push
out
xchg
xorb
xlat
out
cltd
add
or
dec
xor
les
fnstsw
lods
lcall
jg
aaa
out
cmp
sub
repnz
idiv
dec
aad
dec
sbb
cmc
and
ficoml
xor
push
repnz
mov
aaa
xlat
or
enter
sub
lea
dec
xor
fs
lods
jl
inc
orb
push
pop
sub
jp
sbb
sar
adc
add
inc
jb
fimull
mov
stos
pop
cli
adc
push
aad
aad
and
scas
inc
adc
mov
cmpsb
daa
push
out
stc
mov
push
sbb
cmp
cmp
cmp
lds
loopne
xchg
mov
add
or
push
iret
scas
dec
loop
int3
loop,pn
sbb
test
push
int3
sub
fnstenv
stc
inc
clc
mov
and
dec
dec
sub
fidivrl
shlb
pop
push
pop
fwait
mov
fdivs
sbb
pusha
cwtl
cltd
lods
inc
add
inc
repz
mov
mov
add
push
loopne
sub
je
nop
fmull
in
insb
in
xchg
call
ret
mov
sub
int
inc
sbb
jae
pop
mov
jmp
inc
ret
aas
cmp
mov
test
movsl
jecxz
mov
mov
inc
sbb
jb
sbb
stc
rclb
or
jg
lahf
jne
fucomip
add
clc
aad
lahf
into
movsb
loop
xor
inc
idivb
sahf
xor
adc
loope
push
jno
and
mov
mov
mov
mov
and
pop
mov
push
ficompl
fildl
in
fnstcw
mov
push
cwtl
and
cmp
mov
adc
lret
push
sahf
aad
sbb
pop
loop
xor
out
fadd
mov
xchg
aas
insb
jnp
roll
pop
dec
xor
jecxz
dec
add
adc
inc
xchg
xchg
dec
mov
jmp
or
daa
mov
mov
xchg
mov
sbb
xchg
mov
adcb
dec
out
cwtl
mov
stos
inc
mov
test
test
mov
insl
push
pop
jne
cmp
ror
and
pusha
lock
jg
add
fsubrs
pushf
in
out
mov
push
mov
push
mov
sti
lock
push
inc
xor
push
lds
stc
cmp
mov
in
jge
fsubl
es
xchg
popa
test
xor
push
test
mov
jbe
mov
push
jmp
int
xor
nop
jns
or
icebp
jle
xchg
aad
lds
sub
loop
imul
mov
popf
sarl
pop
xor
inc
outsl
gs
cld
ficoms
pusha
cmp
adc
ja
xchg
inc
fstps
outsb
loope
ljmp
push
mov
int3
andb
sahf
mov
mov
shr
xchg
push
jle
aaa
add
fbld
jmp
aas
push
and
jp
mov
scas
ljmp
test
imul
insl
mov
jle
or
ss
xor
rcrl
push
sbb
gs
pop
call
scas
popa
jmp
lea
inc
sub
sub
out
aaa
cltd
and
sbb
adc
call
fdivrs
clc
mov
gs
cmpb
lea
imul
pop
jl
mov
jnp
outsl
dec
jl
inc
push
adc
sub
xchg
or
mov
insl
add
aas
out
dec
das
xchg
mov
subb
cmp
and
movsb
pop
xchg
fwait
and
aam
add
inc
andb
adc
add
in
stos
lret
clc
jmp
adc
jnp
cmp
or
mov
xchg
sub
stos
adc
jecxz
gs
sub
adc
and
out
leave
push
lcall
fists
stos
add
sub
push
push
in
or
pushf
push
fs
fsub
mov
lcall
lahf
mov
test
adc
iret
lods
cmp
cli
jns
je
xor
add
pop
push
test
pop
pushf
mov
xor
pop
scas
scas
push
xor
dec
push
mov
mov
push
into
stos
lods
jne
sarl
lret
dec
pop
xchg
in
sub
mov
mov
mov
enter
adc
push
popa
call
call
or
mov
cmp
repnz
mov
icebp
roll
cmp
cmp
loope
xchg
fsubrp
mov
and
adc
stc
pop
clc
add
xor
mov
push
pusha
rcrb
rcll
cltd
push
fbld
popf
push
into
xchg
cmpl
fimull
call
mov
cmp
int3
mov
add
jno
les
in
pop
popf
gs
data16
lock
loope
pop
mov
repnz
pop
out
imul
nop
inc
pop
pop
iret
and
adc
xchg
iret
clc
ret
dec
mov
ret
pop
repnz
sub
sub
jbe
jbe
and
rcll
mov
nop
lret
sbb
pop
cmc
push
aas
xorb
arpl
add
jmp
xlat
lods
xchg
outsl
nop
sti
xchg
jmp
movsb
test
mov
adc
xchg
fidivrl
iret
sti
mov
lret
lods
filds
or
aaa
mov
cwtl
cmp
js
sbb
stc
mov
les
sbb
mov
cmp
lea
pop
mov
insl
lock
mov
push
lods
test
jge
mov
jmp
xor
push
mov
push
std
push
in
mov
or
repz
in
pop
cmp
mov
push
call
xchg
in
push
mov
xchg
xor
push
jne
xor
icebp
stos
mov
pop
sub
sbb
jp
pop
pop
and
enter
xlat
mov
popa
mov
imul
or
and
lahf
mov
psubsb
jae
jecxz
ljmp
sub
xchg
into
rorl
mov
push
mov
xor
push
pop
or
inc
mov
int
lcall
cmp
iret
pushf
inc
dec
jecxz
out
jl
lea
fdivrs
popf
fidivs
mov
push
lahf
fisttpl
scas
lods
cs
inc
push
stc
adc
mov
mov
addr16
pop
sbbb
push
imul
mov
mov
adc
mov
fdivp
int3
push
aam
pop
rcr
adc
fisttpll
pop
jl
pop
fldcw
inc
shll
lods
mov
or
data16
mov
leave
outsl
cmp
sub
jno
xchg
jns
iret
xor
cmp
in
mov
mov
stc
sbb
sbb
ljmp
test
cltd
inc
lcall
dec
pop
sbb
or
insl
cs
repz
xchg
lds
aas
xchg
mov
jns
push
cli
sahf
cmp
bound
mov
xchg
rorl
cld
mov
xchg
mov
mov
lret
rcrl
ret
sub
out
imul
lods
sahf
dec
sub
iret
into
sahf
mov
xor
push
mov
aaa
in
aad
sbb
and
dec
imul
jle
mov
movsb
or
and
dec
in
xchg
push
jns
inc
enter
aas
test
inc
ss
bound
jo
sbb
mov
jb
roll
cwtl
xchg
mov
cmp
enter
jae
into
and
push
pop
sbb
and
imul
adc
cwtl
sub
and
cmp
pop
adc
mov
push
sub
stc
outsl
and
xor
repz
lret
mov
lods
push
mov
add
xor
sahf
sub
ficompl
ds
xor
cmp
push
jne
ljmp
sub
in
inc
push
shrb
popa
sbb
mov
adc
stc
bound
out
jae
loop
jmp
ss
jge
xchg
sub
and
fmull
or
adc
iret
add
mov
test
mov
and
xor
stos
enter
and
xchg
and
cmpsb
pop
fistpl
pop
cwtl
mov
testb
nop
enter
ret
jne
in
push
orl
std
cwtl
mov
push
pop
mov
add
add
scas
jae
jecxz
sarb
es
xchg
mov
mov
lcall
inc
mov
clc
cs
pushl
xlat
loope
test
and
push
out
imul
aaa
pop
mov
loop
sub
daa
cmp
fcompl
push
cmp
sbb
incb
and
sub
mov
dec
sarb
xor
adc
ljmp
xchg
inc
cltd
loope
pop
jmp
stos
ret
jno
in
das
imul
sbb
dec
outsl
pop
dec
xchg
dec
iret
pop
inc
mov
and
jge
test
mov
adc
pop
out
mov
gs
cmpsl
mov
inc
sti
sbb
insb
pop
cmpsl
test
into
enter
dec
mov
ret
test
jle
das
xor
jb
icebp
push
out
and
inc
std
into
inc
sbb
mov
ret
sbb
das
popf
popa
dec
mov
push
and
sbb
nop
rol
in
mov
dec
aaa
scas
add
pop
cli
int3
cltd
outsl
cmpsl
sub
sub
or
ljmp
js
test
insl
bound
stos
mov
inc
push
pop
jns
add
pop
inc
mov
cmc
sbb
in
scas
lret
outsl
xor
fnstcw
out
leave
scas
shr
mov
dec
add
rclb
call
es
enter
push
dec
rcl
push
ljmp
mov
mov
mov
das
sbb
mov
inc
sahf
add
jbe
rcrb
and
movq
mov
inc
push
rcll
xor
adc
lret
cltd
xor
inc
jg
jo
imul
push
sub
insb
add
scas
xor
leave
cli
mov
rol
push
xchg
call
sbb
adc
and
adc
js
mov
or
cmpsl
ds
mov
aam
stos
xchg
jb
jae
cli
dec
mov
or
faddl
inc
inc
push
hlt
adcl
js
and
cmp
inc
sbb
frstor
pop
push
push
pop
mov
sub
add
sub
jl
jecxz
xor
dec
mov
add
jmp
add
movsb
push
pop
scas
hlt
xchg
sub
mov
lods
out
js
adc
and
stos
xchg
insl
sti
push
sub
shrl
sub
xchg
cltd
cmp
pop
test
cmp
xlat
jp
pop
cmp
dec
inc
mov
xchg
mov
mov
ljmp
rcrl
fwait
mov
inc
lea
addb
test
out
sbb
decl
mov
leave
and
xor
and
into
int3
mov
je
vsqrtpd
ret
cmp
sub
xchg
pop
iret
fimuls
or
mov
sbb
out
adc
int
aad
xorb
popf
sbb
call
fisttps
stos
pop
popf
mov
sbb
ror
cmpsl
or
mov
xchg
popf
add
xor
jmp
push
iret
sbbb
lahf
mov
mov
repz
jbe
dec
mov
pop
mov
mov
add
fldcw
data16
cmc
cmp
or
cmp
pop
dec
nop
int3
xor
inc
pop
pop
or
cmpsb
add
jns
ja
push
and
cltd
push
pop
xor
movsl
inc
popa
call
mov
xchg
popf
les
hlt
pop
faddl
arpl
add
sub
shrl
cs
std
sbb
into
fs
inc
fsubp
stos
mov
add
mov
add
xchg
push
add
imul
cli
orl
cmp
sub
loope
or
or
push
adc
sub
dec
or
or
pop
dec
cli
imul
clc
cmpsb
lock
and
out
xchg
push
push
sub
xlat
lret
sti
pop
out
fistl
cmp
mov
sub
std
pop
loop
inc
push
cmp
xchg
dec
pop
cmpsb
mov
test
xchg
add
repnz
add
xor
add
sub
mov
add
filds
popf
sarl
mov
cwtl
mov
out
xchg
cmp
jnp
cmp
test
sti
dec
mov
inc
sub
xchg
ss
and
fsubrs
jmp
push
popf
inc
sti
xchg
mov
xadd
mov
pop
adc
insb
push
sub
cmpsl
and
mov
cmp
adc
mov
imul
in
lds
jp
data16
aam
lods
cmp
lods
jge
xchg
push
addb
sbb
movsl
popf
sub
push
adcl
mov
lret
popf
sub
or
js
push
pop
cmpb
bnd
sbb
jle
insl
sbb
inc
movsb
insl
aad
scas
xlat
jle
push
adc
pop
data16
push
jo
pop
pop
ljmp
in
aaa
js
inc
aad
jae
addr16
cli
aad
sti
mov
push
pop
or
in
cmp
repnz
jne
popf
or
jb
cwtl
inc
fiadds
lods
movsb
pop
sbb
sar
cmp
inc
sti
das
insb
sub
scas
xchg
xchg
sub
jl
jge
sub
movsl
xchg
flds
push
adc
imul
fsubrs
imul
dec
xlat
adc
incb
outsb
add
xchg
je
int
sbb
insl
push
negb
sbb
or
icebp
pop
push
mov
aad
xlat
out
push
push
jo
movsl
jmp
inc
sbbl
mov
movsl
jmp
xchg
add
mov
add
in
fs
and
xchg
mov
push
mov
xchg
aam
aas
xchg
inc
pushf
xor
out
shll
lea
lock
aas
fldt
cltd
or
mov
dec
add
push
ret
add
inc
jo
xchg
in
inc
sub
fisubs
jnp
pop
mov
jl
xchg
or
ja
pushf
fdivrl
hlt
and
xchg
scas
iret
in
cmp
adc
inc
rclb
inc
sub
xchg
xor
mov
scas
mov
pop
push
icebp
std
and
outsb
outsb
inc
pop
lods
scas
sti
jns
adc
rorl
adc
pop
pop
mov
stos
mov
lods
gs
push
cmp
cld
mov
inc
scas
ds
push
dec
and
ljmp
sbb
dec
shll
jnp
xchg
pop
not
out
enter
insb
es
jle
repz
sub
mov
mov
mov
aas
mov
fldl
repnz
arpl
cmp
adc
popf
jno
push
jmp
ljmp
mov
jle
orb
adc
mov
sub
imul
stos
mov
popa
jle
dec
pop
push
push
mov
outsb
in
inc
xor
test
pop
insb
pop
jno
aam
mov
cltd
inc
and
push
dec
imul
popa
and
fwait
mov
sti
js
movsb
jl
fistl
xor
xor
je
inc
mov
cmp
lods
fdivrl
sbbb
push
ret
dec
push
scas
imul
repnz
xchg
mov
mov
cmp
mov
sub
sbb
xchg
and
shll
iret
fucomp
xchg
bound
mov
sahf
push
add
adc
lahf
jle
sbb
mov
subb
ljmp
push
subl
fdivrp
pushf
dec
cli
cmp
cmpsl
jmp
mov
add
into
mov
imul
fldt
or
jp
outsb
fnstsw
fucomip
lret
sahf
test
pop
cmp
lds
test
and
sub
cmpsl
aas
sahf
inc
leave
and
addb
cmp
in
add
push
mov
sbb
movsb
popa
jmp
pusha
jb
fs
cmpsl
pop
insl
cmp
add
mov
and
arpl
data16
mov
out
or
jo
mov
repz
inc
bound
sbb
sub
push
mov
ja
in
mov
imul
add
das
sub
std
push
stos
mov
popf
rcll
dec
mov
inc
mov
mov
sbb
ja
sbb
cmp
xchg
and
int
movsb
loope
or
sbb
lcall
mov
jmp
fstl
push
sub
fwait
lods
clc
inc
xchg
cmp
cs
jmp
add
clc
xor
je
push
fists
or
test
mov
scas
xchg
ss
pop
sbb
sub
sub
int3
jl
fnstenv
xor
pop
jl
push
repnz
fdivs
cwtl
lret
testl
sub
leave
gs
dec
sub
push
inc
jmp
es
jo
orb
lahf
loop
inc
mov
dec
adc
neg
mov
aad
jg
jnp
int
lods
dec
std
cmp
push
mov
fiaddl
or
adc
inc
mov
stos
ss
enter
adc
push
fwait
sbb
jnp
cld
jecxz
cwtl
push
aas
outsl
into
xchg
out
nop
push
mov
pop
mov
stos
mov
test
sti
adc
stos
dec
mov
inc
xchg
out
jle
je
xchg
negl
push
mov
xchg
pop
sub
push
cmpsb
sbb
and
jne
fs
repz
inc
mov
lahf
inc
imul
adc
push
add
push
cmp
sete
lahf
adc
in
mov
push
daa
jle
pop
push
leave
test
push
insl
or
adc
data16
pop
stos
push
lods
mov
cmpsb
cmp
mov
ss
jnp
ret
pop
test
cmpsl
in
shll
fsubs
into
loopne
sbb
mov
test
stos
add
push
cs
sbb
xchg
mov
xchg
pushf
and
cmp
mov
mov
ret
inc
mov
or
enter
add
stos
insl
pop
mov
adc
add
mov
or
mov
add
stc
into
sti
adc
jbe
cltd
int3
fidivs
jg
out
jl
cmp
aad
aam
cmp
daa
or
dec
mov
movl
fdivrs
xchg
push
fdivrs
mov
sahf
pop
adc
sbb
jno
add
xor
pushl
ds
dec
mov
or
in
xor
sub
fildl
push
pop
scas
clc
out
inc
push
mov
sub
mov
into
push
mov
lcall
sub
bound
or
sub
push
jle
sbb
int3
ss
ds
addr16
inc
insl
jne
cmpsb
addl
lea
adcb
push
jmp
ret
ret
and
inc
test
in
ficomps
pop
sbbl
lcall
rorl
cmc
and
lcall
test
xor
dec
dec
adc
enter
fwait
sub
lods
int
int3
pop
and
je
push
jge
or
stos
xchg
cmp
pop
dec
in
mov
sub
dec
imul
add
pop
jne
inc
dec
xchg
out
or
jne
lcall
dec
aas
out
int3
xor
imul
inc
stos
cld
ficompl
xor
add
outsb
lcall
push
cli
shl
cmpl
mov
ficomps
nop
imul
loop
inc
push
ljmp
push
adc
or
lds
repnz
inc
sbb
inc
cmp
inc
js
loope
lret
and
sub
mov
lret
in
not
mov
mov
out
das
loope
icebp
leave
mov
adc
loop
sub
lahf
or
lret
sub
rorb
ffreep
and
imul
mov
add
push
cmc
mov
push
cmp
ljmp
iret
adcb
and
xchg
imul
jns
jmp
insl
or
adc
sti
and
shrl
inc
out
mov
mov
insl
cs
inc
test
int3
jae
sub
push
repnz
xor
adcl
xor
std
fnstsw
and
out
lds
jmp
mov
insl
mov
fs
into
call
mov
pop
pop
mov
jnp
sub
mov
pop
cs
jae
enter
inc
ret
data16
mov
pop
insb
jbe
xchg
pop
test
xchg
inc
jne
scas
test
inc
mov
fs
add
insb
ds
inc
into
xor
fwait
popf
jae
sub
cmpsl
sub
and
push
and
xchg
pop
daa
cs
or
dec
inc
fsubrl
fldt
mov
fisubl
loopew
cwtl
xor
pushf
push
int
ja
cmp
arpl
decl
push
adc
pushf
dec
int3
lret
cmc
xchg
cltd
jo
scas
iret
dec
dec
lea
pop
push
xor
jb
cmp
inc
aaa
mov
sbb
orb
xlat
jl
mov
enter
cmpsl
mov
jmp
in
add
mov
and
or
add
pop
ret
loop
sbb
cwtl
mov
je
dec
iret
ss
fs
adc
cli
add
fsts
fildl
iret
lret
lahf
sbb
pop
inc
je
mov
std
push
ljmp
jecxz
push
ret
xchg
rcrb
add
push
fs
mov
dec
jae
adc
xor
mov
rclb
dec
xorb
jl
jecxz
scas
cs
push
dec
push
fs
mov
aas
mov
notb
cmp
inc
sub
sub
mov
out
xchg
cmp
mov
jne
test
and
loopne
fdivrs
in
insb
int3
and
fcmove
test
inc
push
fbld
push
pop
jl
mov
push
iret
mov
jne
pop
or
rcll
scas
mov
mov
xchg
ret
or
cmc
imul
ds
in
xchg
cli
std
xchg
out
cmc
subb
out
fs
dec
xorl
loop
jbe
popl
mov
mov
int3
mov
stos
adc
daa
xchg
cwtl
outsl
ret
pop
mov
cmpsl
xchg
pop
inc
test
or
mov
lcall
or
loop
fidivs
jns
pop
subl
movsb
arpl
and
inc
xchg
xchg
jns
loop
mov
push
leavew
push
inc
adc
mov
aas
mov
ja
jnp
xor
and
ja
jle
fs
jmp
mov
sbb
mov
fbld
pop
mov
ds
and
jmp
es
adc
icebp
stc
sub
mull
pusha
addr16
push
scas
or
and
hlt
or
pop
lret
rorb
test
inc
xlat
in
mov
and
or
hlt
aas
jmp
sub
jbe
jmp
fsubl
mov
test
or
aam
movb
fisttpl
xchg
jp
pop
mov
ja
mov
cmp
push
pusha
imul
ret
push
pminub
or
scas
cld
int
outsl
sub
outsl
dec
pop
mov
push
mov
scas
dec
idiv
popf
shl
sbb
jne,pt
mov
cmp
pop
cmp
lea
mov
xchg
push
jns
repnz
fs
aaa
in
testl
sahf
sub
xor
pop
pop
pop
or
lock
jl
xchg
out
gs
out
pushf
out
lahf
lret
jns
shl
lods
pop
dec
ljmp
push
inc
pop
xor
pushl
xchg
leave
int
sbb
std
fdivrs
adcl
sbb
adc
or
call
sti
inc
filds
add
cld
das
add
inc
imul
sbb
cltd
and
fs
or
cltd
xor
arpl
mov
jge
lods
into
add
fistps
js
sbb
les
sub
sbb
jb
or
pop
xchg
pop
add
push
ss
mov
push
jo
jo
inc
ja
mov
in
dec
xchg
mov
cli
lea
pop
xchg
push
mov
loope
pop
inc
push
jge
and
xlat
cmp
jo
pop
or
sub
lds
cmp
xchg
xchg
hlt
jle
xchg
das
das
add
cmp
sbb
and
xchg
das
push
jg
bound
and
jo
add
jmp
fwait
inc
stc
mov
mov
and
hlt
add
mov
cld
std
arpl
xchg
push
je
out
dec
and
stos
inc
les
pop
jle
adc
sub
jl
loop
aad
sbb
out
fld
mov
push
movsb
je
dec
pop
cmpb
stos
dec
push
pop
pop
lahf
loope
cmp
mov
fs
and
push
xchg
bound
push
sbb
dec
cmovnp
mov
mov
jg
ret
sub
ficompl
mov
cmp
cmp
or
lods
fdivrs
and
pop
out
jbe
jno
inc
hlt
fsubs
testb
enter
sbb
es
xor
imul
jl
fcoml
lcall
adc
jmp
aam
add
mov
bound
aam
push
push
and
les
xor
xchg
fidivl
jno
xchg
js
push
lret
mov
in
lea
imul
inc
xchg
pop
pop
mov
pop
mov
ret
clc
stos
push
popa
jne
repnz
lea
inc
xchg
jnp
test
adcb
sbb
add
jg
add
sub
fildl
in
stos
leave
sbb
das
or
ret
out
cmp
subb
out
repz
mov
lods
adc
jmp
scas
in
sahf
and
mov
inc
mov
pause
pop
in
jp
movsb
xchg
sbbb
popf
mov
push
movsl
cmp
lahf
xchg
stc
loopne
pushf
or
push
mov
loope
pop
xchg
pop
jmp
repz
imul
jp
sub
xchg
insb
jle
push
sbb
push
adc
push
xchg
mov
inc
jae
jge
adc
fdivrs
dec
jnp
mov
or
xor
aaa
sub
popf
mov
mov
stos
xchg
dec
testb
mov
rcrl
dec
fcoms
inc
mov
aad
mov
mov
cmp
dec
or
mov
lcall
jle
es
push
cmp
mov
push
mov
fs
roll
addr16
fwait
sub
mov
adc
cmpsb
mul
adc
repnz
aam
cmp
or
or
xor
das
xor
fnstsw
repnz
pop
xchg
loop
or
adc
icebp
cwtl
imul
stos
cmp
shrb
sbb
ljmp
pop
fstpt
imul
dec
jge
adc
mov
pminsw
dec
imull
cmp
loope
iret
test
sbb
les
sub
ficoml
cld
lea
inc
and
shll
push
push
jg
stc
mov
movsl
lods
movsl
sub
iret
mov
loop
mov
mov
iret
pushf
bound
test
test
adc
inc
mov
mov
xchg
loopne
adc
jae
inc
push
ja
adc
jmp
mov
jo
mov
scas
add
roll
lods
dec
test
cmpsl
ret
and
mov
loope
sbb
adc
aaa
hlt
xchg
jno
push
stc
xor
pop
mov
ja
stc
rcrl
loope
sti
inc
xor
sub
je
xorl
dec
push
dec
pop
pop
mov
lea
xor
fstpl
adc
fbld
int
xor
or
movsb
pop
out
insb
lahf
test
lret
mov
stos
aad
xchg
rolb
cmp
ljmp
inc
sub
addr16
lret
add
rcrl
rorl
jge
in
test
ss
xchg
loop
lret
orb
jnp
out
add
add
mov
pop
insl
lahf
out
fimuls
mov
mov
cmp
lahf
inc
daa
testb
adc
ret
sbbb
and
mov
cli
adc
sub
mov
mov
jecxz
test
in
cmpsl
pop
add
das
jp
loope
gs
loopne
arpl
out
cmpsl
cmp
inc
mov
lcall
cmp
and
jae
icebp
shrl
mov
out
insb
lret
pusha
mov
jns
in
scas
lock
xor
xor
jle
fcomip
imul
push
daa
cmpsl
xchg
lret
in
outsl
push
sub
aaa
cmc
stos
mov
inc
add
jns
das
jo
mov
cltd
xchg
popa
dec
pop
add
sbb
mov
dec
fisubs
mov
jbe
sahf
subl
ljmp
idivb
or
or
mov
cli
lods
fidivs
or
cmc
sbb
mov
or
mov
push
sahf
jge
adc
out
sub
sbb
adc
shrl
addr16
jg
mov
sub
fs
in
add
cmp
dec
rorl
aaa
mov
testl
sbb
xor
out
icebp
xchg
jecxz
sahf
cld
lods
sub
dec
push
mov
or
adcb
pop
in
or
push
mov
int3
cmp
das
add
xor
xchg
adc
and
out
and
in
repz
jmp
leave
ss
push
data16
mov
cwtl
xor
mov
test
dec
jno
jge,pn
xchg
inc
std
popf
sub
or
mov
test
pop
lahf
mov
sub
add
dec
mov
popa
in
mov
add
outsb
lods
xchg
or
divl
cmc
push
add
aad
ret
inc
xchg
pushf
lds
xchg
mov
repnz
out
shl
popa
jnp
cld
xchg
add
xchg
add
xor
cmpsb
movq
xor
lret
imul
mov
xchg
ja
sbb
cmp
lret
sub
mov
pusha
sbb
and
lret
jno
sub
inc
push
jp
pop
cmpsb
sub
mov
jp
scas
mov
and
stc
arpl
mov
mov
xor
movsb
int
add
imul
sub
xor
sub
fimuls
movsl
xchg
je
ret
sbb
and
jno
adc
lock
cmp
test
fs
rorb
and
cmp
push
inc
xchg
hlt
xor
or
in
cmp
inc
xor
or
mov
jmp
sbb
movsl
inc
mov
cmpb
mov
push
adc
mov
jne
pop
fcomi
add
add
mov
inc
scas
arpl
cltd
pop
sub
scas
mov
in
dec
mov
xlat
jle
andb
out
aas
in
cmc
subb
sbbb
mov
adc
das
test
aam
or
adcl
sub
cmp
push
pop
lock
rcr
push
std
shl
xor
int3
sub
call
leave
xor
out
or
jmp
sub
lret
jp
repnz
jae
pop
rclb
sub
jge
cmp
out
loopne
or
and
mov
cmp
jns
sti
mov
test
movsb
dec
stc
imulb
sahf
movsb
mov
movsb
fisubl
mov
fwait
test
inc
outsl
stos
out
add
test
dec
lock
lcall
jno
and
sub
out
sub
mov
shrb
xor
push
add
mov
push
xchg
clc
dec
andb
xchg
pop
mov
jmp
ret
test
dec
jmp
xchg
dec
add
es
leave
fisubrl
sub
dec
jb
in
shlb
inc
adcl
mov
xchg
test
lahf
in
pusha
add
in
push
fcomps
jno
in
add
mov
or
sbb
add
inc
cld
xchg
nop
stc
and
lods
test
inc
xor
push
lods
lods
push
pop
xor
fsts
cmp
xchg
mov
xchg
sbb
dec
mov
xorl
cmp
inc
cs
imulb
clc
push
ss
xchg
push
rolb
push
stos
popa
inc
inc
or
jns
sub
mov
add
or
jb
pop
stos
jl
gs
into
sbb
push
sub
mov
xchg
dec
test
adc
out
and
xchg
stos
push
lret
jp
mov
adc
shll
xchg
sti
ss
mov
icebp
inc
lock
loopne
or
stc
loope
insb
in
jne
dec
es
and
pop
in
pop
cmpl
shrb
xor
xchg
clc
pop
call
mov
pop
mov
lret
mov
mov
inc
push
mov
or
adc
clc
test
jmp
cmc
idivl
inc
push
or
dec
sbb
sbb
dec
nop
pop
scas
cwtl
aaa
jmp
shl
mov
xchg
outsb
test
fs
add
jne
cltd
jl
popa
fldt
jns
mov
scas
les
mov
je
outsb
lods
pop
cli
push
enter
mov
and
pop
push
faddp
or
ds
push
fisttpl
mov
rorb
aad
fisttps
aam
dec
pop
in
filds
mov
dec
rcrl
pop
sub
and
popa
pop
jle
jecxz
or
jb
clc
inc
sub
or
lock
out
mov
shl
popf
test
mov
push
push
add
push
sti
das
and
out
ficomps
imul
arpl
out
inc
stos
subl
mov
add
mov
insb
fwait
sub
inc
xor
insl
jg
clc
in
xlat
xor
mov
sbb
cmpsl
lahf
int
negl
xchg
popa
jl
std
sbb
popf
js
gs
jns
rcrl
movsl
pop
xchg
fs
bound
test
mov
adc
xor
adc
jmp
inc
jecxz
sub
mov
sbb
pop
ljmp
push
pop
stc
add
jmp
adc
fdivs
or
sub
negl
mov
dec
in
mov
cltd
and
fdivrl
xchg
iret
push
sub
pop
inc
sub
mov
mov
inc
lea
insl
fld
mov
mov
in
inc
roll
inc
aam
sbbb
insl
cmpsl
test
inc
in
mov
lcall
mov
in
movsl
movsl
ss
out
std
imul
mov
in
addr16
in
mov
lahf
nop
jnp
push
mov
loop
mov
pop
xchg
push
push
xchg
jae
mov
int3
pop
push
cmp
movsl
shll
mov
xor
xchg
insb
fdivl
add
sub
daa
addr16
les
fisubrl
sahf
imulb
fbld
and
add
jns
das
sbb
adc
lods
imul
repnz
ss
sti
iret
add
pusha
bound
sti
int3
pop
pop
jl
jle
inc
mov
adc
dec
cmc
mov
push
and
int3
push
mov
mov
mov
dec
orl
fdivrl
mov
jecxz
xor
pop
orl
dec
outsb
into
sub
xchg
xor
lock
jl
fs
movsb
mov
std
rol
inc
mov
xchg
jg
bound
sub
mov
leave
add
movsb
fisttpll
lds
push
inc
mov
cltd
cmp
js
adc
pop
push
xor
cld
je
enter
shrb
pop
xchg
push
xchg
xchg
jno
lcall
mov
loope
cs
icebp
shrb
cmpsb
ljmp
and
lahf
mov
mov
mov
add
pop
pop
mov
or
mov
cwtl
cmp
sbb
js
xor
imul
mov
test
fldcw
sub
nop
int
shrb
sti
cwtl
jge
jns
inc
pushw
fwait
arpl
jmp
mov
dec
mov
loopne
leave
jnp
ds
aas
push
jns
pop
pop
sbb
fnstenv
push
cmp
jle
mov
mov
clc
pop
pop
adc
repz
aam
addl
imul
jbe
icebp
xor
mov
push
int
orl
add
fisttps
push
sahf
jp
adc
cmp
adc
jae
popf
lret
aad
fisttpll
aam
in
sbb
mov
xor
mov
popa
mov
cmp
out
inc
adc
das
cmp
dec
jbe
lret
push
mov
sub
in
mov
lds
shrl
cli
sub
cmp
pop
adc
rorl
push
sbb
lea
outsl
jns
mov
pop
mul
repnz
sbbb
fs
or
sbb
dec
aam
adc
xchg
jnp
cld
xor
sub
jge
xchg
mov
push
dec
mov
frstor
rcrb
dec
push
pusha
cmp
cmp
adc
shlb
pop
clc
sarl
lcall
push
xchg
xor
mov
xchg
sbb
idivb
dec
jae
inc
xor
mov
scas
enter
ds
jb
jbe
lock
rcr
aam
cmp
pop
adc
adc
test
stos
sub
sbb
push
in
xchg
inc
out
inc
add
mov
push
in
xchg
xchg
lret
pop
jl
lahf
push
loope
lock
xchg
dec
fcomps
sbb
fdivs
ja
mov
mov
sbb
xchg
jl
stos
sub
mov
pop
negb
inc
flds
pop
movl
out
jl
dec
cmpsl
cltd
and
jmp
jl
add
mov
dec
sbb
pop
pop
jo
lock
dec
jb
jno
cmp
sbb
icebp
and
jb
and
sti
mull
cmp
and
pop
mov
mov
negl
lock
cmc
call
or
xchg
xlat
jp
jno
cmp
mov
sub
push
mov
xchg
insl
cmc
cmp
jns
jnp
mov
addr16
push
dec
jns
aam
outsb
loopne
loope
mov
inc
xor
bound
stc
jl
pop
fucom
notl
test
fcmovb
push
mov
lret
iret
ljmp
in
xor
mov
aam
mov
push
mov
loop
dec
jl
int
ds
xchg
iret
fbstp
test
call
rcrb
mov
push
mov
mov
pop
dec
icebp
test
mov
mov
mov
push
or
or
mov
or
dec
lods
jmp
out
insb
icebp
es
movlhps
or
lea
and
inc
inc
inc
xchg
push
xor
fstps
fsubrp
adc
add
aad
dec
mov
aaa
outsb
lcall
sbb
incl
sub
repnz
or
mov
push
pushf
aad
in
cld
mov
or
dec
aam
adcl
or
int3
ljmp
aas
push
jo
push
add
test
int
adc
cmp
roll
or
lcall
pusha
mov
addl
dec
repz
add
call
scas
cmpl
push
leave
out
stos
add
inc
out
ficompl
pop
pop
inc
cli
in
mov
in
adc
mov
cltd
repz
sub
out
mov
lret
dec
xor
int3
cs
or
cmp
xorl
mov
cmpsb
jbe
mov
xchg
push
cmp
mov
dec
and
inc
mov
loop
out
push
push
cs
js
das
sub
mov
fidivl
mull
sbb
cmp
jno
inc
idiv
in
adc
les
addb
shlb
bound
aas
sbb
push
stos
inc
jge
push
add
popa
negb
inc
es
or
ja
scas
xchg
jnp
and
cmpsb
push
push
add
rclw
mov
or
xor
pop
js
xchg
or
xorb
mov
in
dec
leave
loop
mov
arpl
repz
lods
dec
sub
pop
mov
xlat
js
pop
and
xor
hlt
xchg
loopne
loope
dec
and
cmp
mov
push
jecxz
push
or
xchg
cli
int3
pop
sub
lret
sbb
and
mov
movsb
dec
popa
sbb
mov
mov
lret
popa
cmp
sbb
scas
gs
fwait
test
faddl
aas
xor
mov
js
frstor
mov
stc
fidivl
dec
shlb
cmc
ds
jno
or
cwtl
inc
cmpsb
mov
cmp
imul
stos
movl
pop
sbb
cwtl
jl
mov
addr16
and
xchg
dec
mov
xor
xchg
testl
aas
mov
cli
jg
dec
mov
xlat
add
mov
out
daa
ret
mov
cli
and
jecxz
scas
or
jne
push
das
mov
popf
dec
mov
lret
iret
sbb
repz
aaa
data16
stos
lods
insb
es
pop
adc
xor
xchg
rcrb
lds
jl
jecxz
imul
out
fcompl
mov
mov
fsubrs
xchg
loopne
or
mov
iret
je
stos
cmp
push
nop
pop
jns
insb
test
lods
out
fisttpl
and
mov
add
jg
popf
sbb
aad
xchg
ja
adc
mov
jge
int
inc
xor
sbb
std
rolb
sbb
jle
mov
call
stos
cmp
xor
jge
aas
mov
pop
shr
cli
pop
inc
push
fistpll
lods
fs
hlt
mov
popa
xchg
leave
test
andb
or
jge
mov
fnclex
jmp
mov
dec
and
test
cmpb
je
mov
pop
jg
xchg
and
in
ffree
xor
cs
outsl
xor
int3
cltd
mov
jae
pop
cmc
fldz
jge
sbb
jl
jmp
mov
cmpsb
push
in
cld
xor
mov
insb
pop
pop
pop
fadds
pop
push
cwtl
cmpsb
fstl
ljmp
lret
lock
mov
in
xor
imul
push
pop
andl
int
pop
lahf
les
pop
idiv
dec
push
add
add
fs
inc
test
mov
push
testl
shrb
out
leave
xlat
jne
in
mov
mov
dec
cmp
dec
cmp
pop
xchg
orb
pop
es
lock
push
inc
fdivrl
mov
mov
sub
aad
xchg
dec
xchg
inc
cmp
ja
loop
scas
sub
leave
and
fucomi
loop
test
js
insl
add
inc
icebp
jmp
ret
loope
cmp
iret
cs
hlt
rorl
lcall
outsl
xchg
or
jmp
in
adc
outsb
jne
push
mov
inc
popf
sbb
and
cltd
mov
in
xchg
imul
outsl
jbe
cmp
mov
mov
int
fisubrs
jmp
js
push
je
dec
rcrb
inc
mov
cmc
aas
cli
sub
test
mov
sahf
call
into
add
jno
andl
js
push
aaa
inc
cwtl
sbb
sarl
jge
cli
xchg
les
or
mov
fsubrs
adc
fists
fwait
arpl
push
adc
inc
xlat
loop
mov
inc
rcl
iret
jne
pop
lret
repz
repnz
mov
clc
pop
shl
jl
sti
int3
in
adc
es
jle
cmp
int
call
and
cmpl
pop
gs
dec
adc
movl
outsb
mov
std
sub
add
cmc
pop
mov
push
pop
or
pusha
addl
imul
adc
inc
xor
pop
sbb
jno
mov
pop
mov
je
mov
icebp
aam
sbbl
les
pop
mov
mov
xor
push
out
sti
test
mov
jl
push
loopne
fdivrs
nop
hlt
jge
cs
and
xor
lret
dec
and
shrl
push
pop
mov
dec
sub
jne
push
pop
xor
mov
movsl
sub
into
xchg
ss
les
out
lret
sub
jl
mov
stc
in
icebp
cld
mov
cmp
in
mov
mov
stos
fiaddl
bound
ljmp
scas
enter
adc
fstl
aad
je
jg
repz
loopne
daa
sahf
pop
mov
xchg
insb
mov
out
mov
pop
cmp
pop
cmp
fmul
add
sarb
cmc
adc
in
xchg
jmp
mov
inc
and
add
in
mov
loopne
scas
hlt
out
mov
ja
mov
scas
sub
stos
lock
cmp
lret
popa
xor
imul
js
fnstsw
push
test
mov
mov
mov
push
pop
adc
std
das
mov
fiaddl
test
mov
cmp
repnz
hlt
rol
stos
sbb
std
std
imul
xor
mov
push
negl
rcll
out
push
xchg
mov
mov
lea
cld
push
and
jae
mov
mov
inc
dec
mov
mov
ret
push
mov
lahf
mov
mov
and
mov
into
adc
dec
jns
scas
mov
cmp
dec
cs
leave
mov
sbb
mov
jmp
fsubr
sub
fisubrs
int3
mov
mov
loop
mov
imul
lcall
sbb
loope
call
pop
xchg
inc
push
push
mov
repnz
add
dec
cmc
std
decb
clc
lods
sbbb
sbb
rcr
mov
cmp
ds
nop
xchg
jl
cltd
pop
jno
in
mov
pushf
mov
adc
sbb
int3
lock
subl
stos
scas
jnp
ret
and
aaa
pushf
xlat
and
fs
mov
lcall
lods
ds
sar
xchg
inc
xchg
in
lea
movsb
sbb
pop
xchg
loope
push
jmp
mov
shll
xchg
call
and
mov
inc
jle
push
cmp
push
cmc
dec
mov
jp
in
cltd
je
sahf
sbb
jmp
out
inc
sbb
aad
in
mov
bound
movb
aad
fisttps
adc
push
xchg
sbb
mov
mov
movsb
push
push
sbb
into
or
out
fwait
sub
movsl
call
cld
bound
les
xor
lret
ljmp
mov
sbbl
xor
sbb
mov
jmp
notb
dec
jb
cmpsl
cld
push
adc
cli
jp
out
pop
int
icebp
fisttpll
and
clc
mov
nop
and
ret
cwtl
bound
fmuls
imul
mov
mov
loopne
dec
or
je
and
pop
je
fcmovnb
fcmovnu
popf
shrb
jge
xor
or
mov
pop
fs
in
jno
add
fwait
add
into
test
lretw
pop
xor
out
xchg
jmp
das
outsl
or
lock
push
push
fcoms
mov
pop
ljmp
enter
cmpsl
out
pop
lods
iret
and
mov
aas
sub
scas
cmp
push
je
mov
nop
les
movsl
mov
mov
dec
stos
sub
xor
mov
cmpsl
sub
mov
dec
arpl
arpl
pop
mov
and
lods
xor
icebp
and
dec
lods
adc
sub
mov
push
or
add
les
fidivs
cmp
mov
mov
sub
mov
arpl
lods
mov
fbld
faddl
sbb
jp
xor
and
es
hlt
or
push
or
mov
repnz
iret
scas
insb
adc
add
faddl
hlt
addl
inc
aas
jmp
test
jge
cmpsl
adc
pop
fmulp
sbb
sub
mov
les
nop
mov
fstpl
lret
mov
out
cmp
mov
fwait
jge
fwait
andl
cmp
jl
jmp
cmovb
mov
dec
push
xchg
pop
sub
ss
jecxz
ret
rcr
xlat
jnp
cmc
pop
fwait
xchg
lret
nop
aad
sub
gs
pop
mov
ret
fs
aaa
jecxz
mov
dec
cmp
push
xchg
cmc
pop
cwtl
test
mov
mov
mov
mov
sbb
mov
movsb
mov
pop
mov
ljmp
call
sub
inc
lahf
push
rorl
stc
leave
xchg
adc
sub
jmp
int3
sub
lods
jo
mov
or
add
shl
aas
cmp
jg
jno
insb
std
push
stos
frstor
push
outsb
popf
sub
pop
addr16
add
aaa
xor
aam
cmpsb
or
cmpsl
repnz
loopne
je
fidivrl
enter
addb
lahf
inc
shlb
and
mov
push
push
repz
mov
add
lods
sub
fmull
divl
or
es
sarb
and
sbb
dec
sub
mov
xchg
daa
xlat
fstpl
cmp
or
fisubrs
into
aam
in
xchg
and
dec
fs
sbb
gs
ss
mov
xchg
stos
push
mov
pop
ret
xlat
imul
jb
call
andl
rcrb
dec
ja
push
jne
sbb
mov
xchg
cli
test
push
scas
jno
or
ds
orl
cltd
add
nop
repz
mov
das
ret
shrb
mov
dec
adc
mov
test
adc
push
pop
fisttps
or
loope,pn
in
push
push
and
and
jecxz
mov
iret
pop
sbb
push
in
mov
rcll
sub
cmp
lea
mov
std
xchg
and
dec
sub
cs
cld
xchg
jbe
lret
cmp
inc
testb
mov
les
sbb
addr16
testb
inc
mov
aaa
xchg
or
mov
mov
gs
fiadds
daa
fistpl
mov
pop
or
xchg
sarl
xchg
js
sub
lds
lods
movsl
popa
jge
mov
dec
push
imul
pop
and
jmp
or
push
lods
push
hlt
and
rcr
xor
fucomp
ds
cmpsb
sarl
mov
xor
mov
cli
fsubs
jl
jae
cmpsl
imul
sarb
xchg
push
iret
xor
sub
inc
push
xchg
sbb
movsb
mov
adc
jno
mov
movsl
jl
in
popa
stc
xchg
adc
sbb
cli
push
mov
push
pop
js,pn
adc
popf
or
lods
jle
cmp
or
jno
lcall
sub
test
jbe
gs
pop
jns
pop
push
or
jnp
adc
and
jle
outsl
cld
mov
fwait
andl
push
mov
mov
std
movsl
loop
xchg
xor
ja
xor
ljmp
cmp
lock
jp
mov
jbe
lods
insb
push
adc
xchg
dec
mov
data16
mov
mov
les
add
fisubs
dec
fisubl
xchg
jbe
lahf
bound
sub
sbb
testl
xchg
push
or
pop
push
pop
push
xor
push
rolb
mov
mov
xchg
stc
cmp
pop
je
std
daa
das
aam
adc
scas
add
fmuls
pop
adc
jns
bound
and
mov
fbstp
out
clc
mov
ret
test
aaa
add
insb
cld
add
dec
push
loope
movl
ljmp
mov
pop
iret
test
mov
adc
enter
fs
mov
arpl
stos
in
into
les
mov
lret
and
gs
add
ret
pusha
fwait
movhps
cmp
push
insl
inc
int3
adc
mov
inc
jmp
loopne
or
sbb
ret
inc
lret
push
pop
add
sbb
insl
pop
in
mov
lea
lods
xchg
adc
out
pop
lods
inc
mov
sbb
add
filds
hlt
add
in
inc
xor
mov
sti
xchg
cmpsl
jbe
xchg
test
loope
lods
push
jge
mov
insb
xchg
xor
movsb
in
lods
test
movsl
repnz
lock
movsl
sbb
push
mov
mov
mov
jo
lock
push
xchg
leave
rcrl
inc
popf
fcomps
xchg
push
mov
and
inc
sbb
xchg
call
pop
or
sbb
adc
pop
call
repz
inc
add
lea
in
lods
bound
test
pop
pusha
ret
scas
imul
cmp
mov
stos
add
andl
ljmp
mov
mov
pop
outsl
js
and
stos
inc
ficomps
mov
fisubs
cli
add
fstpl
lock
mov
inc
das
push
outsb
push
test
xchg
cs
faddl
inc
inc
and
mov
xchg
fsubrl
push
pop
inc
push
adc
sahf
mov
pop
ret
xchg
pop
jecxz
cmp
sub
out
and
aam
cmp
std
adc
outsl
sbb
jmp
xchg
pusha
push
xchg
ret
ret
jns
neg
imul
push
imul
mov
xor
inc
inc
pop
cli
pusha
arpl
int3
es
shlb
and
mov
pop
cmp
popa
adc
xchg
mov
movsl
data16
cld
or
pusha
sub
add
and
fstpl
cli
insl
outsb
mov
fldt
and
cmp
cmp
addr16
pusha
adc
push
pop
pop
out
mov
add
add
enter
mov
movsl
xlat
test
push
js
xor
clc
jmp
rolb
mov
insl
sbb
push
push
cmp
sbb
add
icebp
xor
cbtw
and
lods
cmp
es
pop
jecxz
dec
push
cmp
mov
adc
mov
lret
rcr
xchg
mov
adc
cmpsl
movsb
cmp
push
fnstsw
pop
lea
sbb
xor
jecxz
into
push
movsl
out
aaa
adc
out
sub
add
lret
jo
xor
xor
adc
xchg
loope
mov
mov
fildll
sbb
cwtl
scas
in
and
push
xchg
inc
js
pop
outsb
push
add
rol
sbb
sub
jae
outsl
adc
inc
outsb
adcb
xchg
sarb
loope
mov
adc
jne
mov
in
popf
test
mov
mov
rcr
mov
push
or
ret
pusha
icebp
into
sub
inc
cmp
inc
inc
data16
repz
int
aad
mov
jne
je
jne
test
and
pop
push
and
mov
sahf
add
daa
dec
lds
mov
les
or
fistpl
int
fstpl
pushf
ss
sub
cld
std
jno
mov
mov
jo
add
jae
js
rcl
shr
inc
sub
xchg
mov
lcall
pusha
iret
sub
pop
xor
mov
mov
mov
xor
xchg
cmp
mov
xor
call
xchg
push
inc
or
xchg
in
divl
loop
dec
call
popa
movsb
jnp
cmp
jge
pushf
add
jge
xchg
cmp
sub
mov
jae
add
jnp
clc
inc
iret
sub
out
nop
es
in
xchg
mov
sbb
lret
adc
mov
lret
adc
or
cmpsb
xchg
sti
ret
inc
ss
inc
sub
lcall
cmpsb
mov
jns
int3
add
push
fdivs
add
dec
push
dec
and
and
push
pop
sub
popf
pop
shlb
sub
adc
jecxz
cmp
scas
repz
xchg
flds
mov
iret
in
jns
jp
cmpsb
jb
ja
inc
jg
shll
or
in
xchg
jmp
pop
test
mov
cmp
int3
push
stc
xchg
mov
sbb
mov
fdivr
xorl
call
out
mov
cmp
insl
sub
addl
imul
sub
xchg
shrb
cli
cs
test
add
imul
cmp
mov
es
in
stos
mov
lods
out
cmp
aad
mov
nop
or
cmc
out
cmp
or
test
jge
bound
popa
sbb
cwtl
xchg
sbb
and
aad
enter
outsb
jmp
pop
mov
out
cltd
mov
movl
adc
ja
mov
mov
aad
adc
bound
xor
scas
inc
jno
cmpsb
or
repnz
or
dec
mov
stos
in
adc
les
inc
ja
outsb
cld
movsl
or
mov
mov
mov
sbb
push
mov
icebp
lods
cmp
mov
push
rorl
incb
adcb
cmc
mov
ja
jle
popa
pop
jnp
dec
jl
addr16
mov
rcl
xor
pop
jmp
rclb
xchg
stos
aaa
je
jl
add
xchg
push
inc
call
pop
push
mov
loop
xchg
ds
jle
pusha
lock
adc
mov
adc
in
cmp
pop
rcr
into
lods
dec
insl
add
push
mov
cmp
cld
sbb
jae
sub
mov
sahf
push
xlat
xchg
xor
cmpsl
in
push
mov
lret
push
xor
adc
cmp
add
pop
pop
add
aaa
push
cmpsl
add
sub
push
mov
out
and
push
lret
imul
fisubrs
incl
fcmovbe
push
inc
cli
daa
fucomip
pop
inc
xor
lret
rclb
sub
jecxz
jnp
push
or
bound
in
or
insl
mov
insb
clc
or
iret
int
jecxz
jb
xor
cmc
pop
pop
cmpsb
mulb
xchg
push
mov
daa
fnstenv
jl
subb
and
jae
sbb
pop
es
ror
fldcw
jg
push
loope
dec
cs
mov
or
jnp
sbb
xchg
push
add
cmpsb
fistpll
sub
fistl
cmc
aaa
enter
push
mov
nop
xchg
sub
outsb
adc
jmp
fiaddl
push
sahf
lea
frstor
add
fcmovne
xchg
std
jmp
lcall
jae
push
push
loopne
jl
leave
mov
mov
test
xor
and
lock
cmpsb
lret
mov
ja
mov
sbb
ror
gs
inc
arpl
adc
hlt
push
cmp
pop
mov
add
sbb
dec
call
mov
jae
jne,pt
lret
popa
lahf
adc
xor
nopl
adc
sbb
fs
inc
or
xchg
hlt
inc
movsb
xlat
fsub
stos
lret
xchg
adc
mov
das
loope
mov
add
inc
sti
iret
cmp
adc
push
fndisi(8087
xchg
mov
mov
mov
sti
fisubl
call
and
add
mov
xchg
popa
pop
aad
inc
mov
lock
and
push
jmp
jg
fadds
dec
bound
xchg
iret
xchg
pop
jecxz
mov
into
leave
inc
jns
sub
loope
mov
mov
mov
push
xchg
lods
lods
fisttps
imul
jmp
push
push
cltd
sbb
cmp
push
sub
lret
divl
xor
mov
inc
fisubrl
xchg
sbbb
xchg
mov
movb
and
pop
mov
cmpsl
pop
nop
push
cli
lea
push
or
stc
call
aas
cwtl
add
mov
imul
fcmovbe
pop
hlt
fldt
and
sarl
adc
sbb
sarl
mov
and
jb
add
fadds
leave
xor
pop
inc
stc
dec
and
in
jae
ljmp
or
stos
ja
lahf
imul
fwait
out
push
scas
popa
sbb
mov
imul
icebp
aas
out
frstor
mov
inc
ja
cmpsb
cli
fwait
and
pop
in
xor
ds
and
sub
orl
movsb
add
dec
inc
sub
scas
jl
push
mov
and
sti
in
out
push
inc
pusha
or
daa
mov
test
in
xchg
push
push
sbb
fmulp
sbb
cmpsb
sub
and
cld
out
dec
mov
mov
sub
mov
mov
sub
mov
in
inc
jmp
mov
testb
inc
scas
jecxz
fcom
pop
push
ret
das
rcrl
and
or
xchg
push
aam
pop
mov
push
scas
fnstenv
clc
jmp
dec
jb
dec
loope
loopne
xlat
lods
add
mov
dec
jno
aas
test
sub
cmp
leave
jno
loop
inc
jmp
or
jl
and
icebp
orl
cmp
cmp
cmpsb
xchg
jle
subps
into
jg
cmpsb
mov
cmp
iret
addl
repnz
pusha
dec
push
xor
daa
add
sub
inc
jbe
and
jmp
mov
cmp
xchg
xor
mov
jle
mov
or
xor
jg
pop
inc
and
cmp
nop
mov
ljmp
mov
cmp
jb
pop
jecxz
sub
cltd
and
daa
stc
mov
imul
push
mov
push
or
hlt
sub
dec
push
mov
inc
cmp
lcall
push
ljmp
test
pusha
mov
lret
inc
push
cwtl
pop
pop
jle
mov
outsb
shll
dec
inc
lods
jl
lock
stos
adcb
pusha
pop
pop
aas
mov
and
out
cmpsl
push
inc
pop
inc
and
stos
push
mov
stc
pop
push
insl
pusha
mov
cmp
or
lret
inc
not
sub
cld
loope
inc
enter
inc
xchg
test
mov
and
cld
sbb
inc
movsl
add
shl
pop
andl
out
mov
rcr
enter
jnp
cs
add
jbe
cmpl
int
rcrb
inc
xchg
or
popa
adc
sub
jo
dec
add
sbb
lock
mov
pushf
push
jns
clc
rol
stos
rcll
cmp
hlt
lret
mov
js
mov
rclb
pop
xchg
call
inc
push
out
mov
cmp
or
divb
inc
in
mov
xchg
sub
push
mov
pop
and
lret
lods
std
add
pop
cmp
and
jnp
mov
inc
pop
dec
fnstcw
hlt
mov
sub
mov
push
or
popf
inc
or
js
sub
jbe
dec
cmp
push
inc
sbb
out
aaa
mov
xlat
inc
es
push
cmp
push
lret
fwait
pop
sub
mov
icebp
mov
pop
pop
xchg
push
mov
adc
sub
jmp
test
jne
jp
mov
add
jnp
and
sbb
out
jecxz
jne
mov
loopne
fildl
cmp
or
shl
jns
insl
push
sahf
test
mov
xchg
dec
pop
popa
test
in
ss
cltd
jle
aad
push
cmpl
loop
mov
dec
mov
icebp
repnz
fdivs
fsubrl
call
ss
pop
ret
inc
inc
jnp
test
cmp
adc
dec
push
cmpsb
ret
nop
addb
mov
adc
cmpsb
lods
out
jge
out
push
push
idivl
xor
mov
jecxz
jge
dec
jae
fprem1
cmp
or
rclb
mov
mov
je
push
sub
cld
dec
sbb
sub
lcall
cwtl
movsb
imul
xchg
adc
cmp
nop
fidivrl
in
adc
push
pop
mov
jl
inc
adc
pop
sub
pop
movsb
mov
lods
mov
adc
lock
mov
push
in
dec
pop
aam
add
mov
cwtl
test
push
loop
jl
jmp
aam
js
out
mov
insl
inc
push
push
mov
test
fsubp
pop
mov
ror
sahf
out
je
stos
pop
jno
cmp
mov
movl
cmp
lea
push
clc
and
call
stos
mov
ss
aam
ja
aaa
das
inc
push
pop
push
inc
and
movsl
or
enter
push
push
mov
enter
adc
mov
push
inc
mov
xor
jae
sub
cmpsl
or
mov
mov
fwait
cwtl
xchg
out
push
mov
sbb
push
fs
test
sub
int3
je
add
repnz
insb
lret
xor
mov
ficomps
call
push
fisubrs
adc
adc
aaa
shrb
pusha
mov
push
jbe
hlt
mov
mov
sub
dec
decb
mov
or
push
mov
inc
xchg
repz
dec
lret
xor
ss
rcr
and
outsl
mov
cs
std
insb
pop
add
xor
mov
or
into
mov
out
nop
xlat
sub
lea
mov
sub
rolb
sbb
ja
imul
inc
dec
push
inc
iret
pusha
lock
inc
pop
pop
aas
ljmp
push
scas
or
adc
addr16
test
ret
adc
or
xor
data16
jl
lods
dec
inc
mov
lock
cmp
add
xor
popa
orb
push
xchg
pop
mov
jae
dec
push
mov
cmp
pop
mov
push
mov
mov
in
jp
shll
add
cmpsl
xor
sbb
push
pop
jl
jle
inc
vpmulhw
xor
mov
mov
outsb
jnp
ficoms
push
push
dec
fbld
lea
nop
scas
push
into
xor
jne
sbb
and
xlat
cmp
sbb
gs
es
addr16
mov
mov
xchg
and
cmp
push
int3
lds
mov
jge
push
outsb
push
repz
ds
dec
repnz
push
in
inc
mov
ljmp
stos
int3
loop
lea
adc
in
test
pusha
pop
pushf
push
cmp
dec
and
inc
out
das
jnp
mov
sbb
sbb
pop
aad
fwait
sbb
dec
ror
idivl
sbb
jmp
out
orb
repnz
sbb
adc
push
loope
mov
cltd
lret
dec
es
and
aas
inc
stc
pop
mov
and
fdivl
das
mov
scas
repnz
stos
stos
aas
test
mov
aad
cmpsl
int
push
icebp
mov
and
adc
push
adc
lret
or
adc
or
push
lods
clc
mov
mov
test
fs
jnp
pop
and
xor
cs
xchg
aaa
popa
xor
inc
in
push
or
ret
mov
pop
inc
ljmp
xchg
adcb
jmp
movb
cmp
repz
adc
fildl
and
loope
inc
filds
test
inc
xchg
inc
ret
pop
mov
shl
in
pushf
mov
add
mov
pusha
cmpl
mov
les
stos
insl
pushf
xchg
test
xor
fwait
int3
mov
mov
adc
xchg
iret
fldcw
rorl
push
add
cltd
dec
aad
sbb
es
sti
pop
mov
pop
mov
sarl
dec
addr16
dec
test
fwait
cmpsl
data16
into
xor
jnp
enter
mov
shrl
cmpsl
imul
inc
addb
jbe
pop
mov
fiaddl
popa
outsb
loop
jmp
mov
xchg
bound
mov
add
push
push
fyl2x
int3
push
pop
xor
mov
push
mov
jae
aaa
inc
aad
inc
ret
loopne
aam
mov
jmp
xchg
fisttps
push
mov
cmp
push
mov
jbe
push
pop
jne
xor
sub
mov
int
les
lcall
mov
adc
mov
mov
push
inc
add
jecxz
xchg
mov
push
insl
add
add
jmp
movsl
cld
inc
xchg
mov
ds
jge
int
cmp
sbb
jnp
dec
mov
sbb
or
cmp
inc
ret
sbb
rcl
movsl
push
mov
xor
pop
dec
scas
fnstcw
subb
lea
pop
mov
loop
cmpb
aad
mov
lret
pusha
mov
or
dec
sar
in
push
jge
mov
arpl
sub
cmp
js
fs
cmp
pop
dec
pop
xchg
sub
pusha
cmc
stc
cmc
push
stos
enter
sbb
mov
jae
outsl
stc
clc
push
cmpsb
imul
mov
in
jle
mov
cmovae
aam
mov
jne
iret
cmpsl
or
inc
lret
pop
lds
lods
cs
insl
xchg
leave
dec
mov
inc
lods
or
int
xor
out
adc
sub
add
lods
jmp
jl
pop
repnz
cmc
xchg
icebp
adc
aas
push
dec
mov
mov
mov
dec
inc
adc
jbe
fwait
adc
imul
and
test
shll
jno
es
cmc
leave
dec
out
ljmp
pand
mov
int3
mov
xchg
add
outsb
push
adc
sbb
push
sarl
cwtl
dec
orb
inc
cs
adc
ret
out
lea
scas
xchg
sbb
dec
cmp
dec
pop
inc
xchg
cmpsb
push
call
hlt
dec
jns,pn
cmpsb
cld
lret
aam
jl
aaa
mov
arpl
cs
ss
mov
rcl
jns
pop
jecxz
cmp
push
leave
add
loopne
mov
mov
xor
xor
add
jnp
cmpsl
test
push
adc
rolb
jnp
loopne
or
mov
dec
or
push
in
xor
repnz
inc
mov
hlt
sub
dec
insb
push
mov
sbb
xor
pop
and
in
xor
sti
imul
das
cmc
sub
push
lods
cmpsl
add
sti
and
xor
or
jp,pn
arpl
mov
iret
mov
and
mov
xchg
mov
lcall
fdivrl
sbb
arpl
inc
xchg
jbe
repz
inc
sbb
cltd
ja
cltd
push
js
add
lcall
adc
decb
fidivrl
inc
add
pop
mov
inc
pop
push
adc
xchg
loope
stc
inc
or
mov
dec
lods
add
adc
dec
std
xchg
jg
das
movsl
inc
lret
daa
pop
cmp
lcall
xchg
movsb
fstcw
ficoml
icebp
negb
pusha
jg
and
pop
xchg
xor
push
mov
lock
retw
int3
sub
cmp
repz
mov
int
scas
dec
pop
and
outsb
roll
cmpsb
sub
fdivs
inc
inc
mov
in
stos
out
dec
cmp
cwtl
repnz
outsb
ret
pop
outsl
pop
int3
sahf
pop
repz
je
cmp
pop
jecxz
cmp
push
fsubl
dec
cmp
seta
orb
mov
mov
je
adc
mov
aas
xor
scas
jbe
dec
nop
mov
pop
mov
jnp
jecxz
or
in
outsl
push
lods
xchg
sahf
xchg
stos
inc
and
add
cld
int
test
cli
imul
add
mov
xlat
and
xor
pop
push
sbb
movsl
inc
insl
xor
dec
xchg
mov
rcl
lods
cmp
sahf
adc
ror
fildl
or
inc
add
mov
sbb
add
aad
push
jg
in
call
dec
lahf
sarl
add
mov
insl
jns
push
push
jns
mov
xor
mov
mov
f2xm1
xchg
adc
aas
scas
enter
xor
cmpsl
shll
aas
out
sbb
mov
ror
sbb
shlb
push
lds
shrl
jg
and
cltd
ss
mov
inc
lret
movsb
andl
test
in
lea
ja
test
cmpsl
xchg
mov
icebp
test
out
repnz
insl
mov
out
and
sub
jecxz
das
and
shrl
jne
inc
mov
call
and
xlat
xchg
addr16
push
push
clc
add
push
sub
aaa
xchg
outsl
and
int3
push
lahf
mov
aam
cmpsb
sbb
mov
jecxz
mov
add
cmp
inc
out
mov
inc
dec
fldl
sahf
xlat
out
rcrb
mov
cmp
pushf
push
sub
dec
push
sub
jno
xor
pushf
rclb
push
inc
pop
pusha
rolb
lcall
bound
lods
sbb
incb
xor
data16
push
or
push
xor
ljmp
jecxz
pop
mov
adc
jle
mov
scas
arpl
je
pop
cmp
xor
lds
jb
test
in
icebp
dec
push
push
fidivl
les
xchg
xchg
sahf
jg
inc
jnp
mov
jnp
sub
bound
jnp
insl
stos
inc
in
loopne
sbb
jno
add
adc
bound
jns
inc
ljmp
cmpsl
mov
cltd
aad
xor
mov
out
xchg
lock
mov
ja,pn
mov
push
pop
push
jmp
or
sub
inc
cmp
subl
aad
das
outsb
inc
enter
xchg
or
aam
add
xchg
imul
outsl
rorb
lods
aaa
mov
xchg
xor
cmp
adc
cmp
sti
lea
jp
cld
and
arpl
add
dec
fstps
mov
sub
jae
out
inc
mov
inc
add
popf
clc
outsb
lcall
pop
das
outsb
push
subb
push
add
cli
ss
imul
imul
addr16
push
inc
ljmp
push
fstl
repnz
in
in
pop
or
xor
adc
sahf
xchg
dec
sbb
in
pop
add
test
or
jns
cmpsl
imul
sbb
and
and
nop
xchg
les
ret
mov
or
xorb
rcrb
scas
xlat
popf
pop
sbb
xor
mov
sbb
ret
jp
lahf
push
scas
xor
scas
movsb
ljmp
jle
sub
fnstcw
dec
inc
imulb
arpl
leave
adc
aaa
jbe
loop
adc
imull
in
into
mov
movsl
cmpsb
adc
leave
cmp
inc
jne
cmp
stos
cmp
decb
mov
das
lods
cs
cmpsl
ljmp
subl
nop
nop
and
lcall
sub
in
sub
or
sbb
dec
xchg
out
and
and
adc
gs
add
sub
fldt
popa
adc
cli
sahf
xor
or
fcomps
mov
lret
int3
enter
dec
adc
mov
sarb
mov
bnd
hlt
push
inc
jmp
lods
fcom
inc
mov
push
ret
mov
xchg
jp
fsts
jno
xlat
iret
aam
cmp
sldt
repz
sbb
ret
lea
int
push
sbb
add
pushl
popa
xchg
sahf
icebp
jb
xlat
inc
xor
call
push
nop
fwait
in
pop
dec
mov
or
nop
out
imul
leave
jmp
movsl
incl
pop
sbb
xchg
cmp
lret
fdivrs
xor
jo
jno
imul
movsl
dec
mov
es
mov
dec
jno
cmp
dec
adc
mov
rorb
les
cmpsb
mov
lret
data16
push
xchg
test
jecxz
sbb
jbe
test
loop
lahf
add
call
enter
xchg
mov
movsl
jg
je
cld
add
dec
mov
and
stos
push
mov
jecxz
incb
lret
jp
sbb
testb
aam
mov
pop
xor
cmp
mov
cld
rcl
mov
js
icebp
fs
jnp
mov
mov
dec
dec
adc
push
cmp
or
aas
mov
stos
into
iret
push
aad
or
mov
imul
push
mov
mov
mov
sahf
cli
adc
add
cmp
imul
push
sarb
inc
mov
pop
push
sahf
pop
add
ljmp
inc
stos
insl
lods
sahf
cmp
dec
popf
test
mov
sub
push
or
mov
adc
add
lods
add
sbb
repz
jmp
cmpsl
cmpsb
dec
dec
push
jg
lods
xchg
xor
outsl
jbe
fisubl
mov
cmpsb
dec
stos
jge
push
dec
out
rorb
fdivr
jmp
cmp
roll
insb
dec
frstor
inc
xor
mov
ljmp
rolb
and
and
add
fcoml
roll
jmp
mov
rorl
cmp
insl
or
mov
sbbb
adc
scas
sub
test
mov
and
cmp
fistps
sbb
jnp
cld
pushf
cmp
cmp
push
cli
dec
jl
daa
inc
push
out
es
out
call
or
sbb
xor
insb
stos
popf
cmc
loop
imul
orl
push
pop
pop
loop
jo
in
leave
dec
pop
imull
pusha
cmp
mov
pop
out
push
or
cmp
dec
cmp
imul
cmovns
in
push
out
neg
ds
clc
add
in
loop
fmull
nop
xor
hlt
faddl
stc
add
iret
or
lahf
cltd
jns
dec
push
in
and
mov
add
add
jmp
sbb
mov
fisubl
dec
jmp
scas
sub
xchg
sub
cmpsb
scas
add
aam
push
dec
add
cs
jecxz
jmp
pop
je
mov
xchg
push
xchg
mov
cld
test
push
push
cld
lret
out
sbb
xchg
and
fidivrs
fildl
pop
arpl
test
dec
aas
jmp
sbb
mov
fisttpll
push
add
rol
lret
add
rcr
mov
in
sub
dec
xchg
rclb
and
mov
test
stos
in
jnp
inc
pop
stc
ror
pop
das
mov
push
lret
or
xor
aad
aam
lret
dec
ffreep
cmpsb
sbb
mov
sbb
cmp
test
out
lods
clc
repz
fwait
push
jo
pusha
lret
scas
jb
inc
jp
sar
ret
push
adc
lahf
ret
jns
mov
dec
daa
arpl
daa
dec
fldt
repnz
jne
clc
cmp
xchg
cmp
jb
jb
aam
leave
lods
lock
test
mov
adc
or
outsl
pushf
lds
lock
je
popa
xor
cmpsl
ret
rcrl
sbb
psubb
add
mov
cmpsl
enter
faddl
scas
xor
les
cmp
sub
pop
lds
mov
mov
mov
push
lret
jnp
add
push
or
outsl
sub
mov
andb
nop/reserved
pop
dec
and
xor
das
add
mov
gs
call
fisttpll
fcmovb
inc
adc
xor
fnstenv
sub
pusha
cmpsb
xchg
inc
mov
loopne
jmp
sub
out
je
cmpsb
jne
xor
fs
incl
aam
mov
jp
add
adc
stos
fiadds
test
jae
movsb
stc
sti
jge
je
mov
lcall
enter
fidivrl
and
xor
fwait
testl
shrb
xorb
add
aad
sbb
in
mov
add
add
xchg
mov
mov
xor
rcll
cmpsl
push
or
fcoml
stos
mov
icebp
aad
jmp
out
repnz
outsl
jne
push
lock
pop
mov
cmp
out
sbb
adc
add
in
add
scas
mov
or
xchg
xor
mov
or
out
int3
inc
inc
faddp
pop
mov
pop
mov
mov
pop
mov
dec
adc
push
adc
notb
ud0
xchg
adc
adc
and
or
arpl
inc
sarb
imul
inc
sub
pushf
ja
pop
mov
inc
lret
adc
bound
fimuls
imull
gs
clc
les
cmp
mov
das
push
test
push
in
pusha
loope
or
adc
das
dec
push
stos
call
call
rcrb
sub
lods
pop
fmuls
dec
mov
push
adc
and
shrb
sbb
lahf
and
dec
push
shlb
insl
fwait
cs
add
das
or
push
sub
mov
ret
addr16
mov
and
pop
movsb
mov
lcall
imul
fptan
cmp
cwtl
nop
pop
scas
lcall
mov
add
stos
adcl
sub
inc
pop
rsm
sub
adc
iret
jle
sbb
push
loopne
fisubrl
add
xorb
ret
aaa
nop
xchg
push
inc
cld
dec
push
jo
mov
dec
or
decl
or
lcall
cltd
or
xor
scas
icebp
jne
mov
xor
xchg
inc
push
leave
mov
cmp
pop
nop
jo
fcoms
mov
fisubs
push
hlt
jg
addr16
nop
cmpsb
rol
in
lods
popf
mov
movsl
inc
mov
inc
loopne
jl
cmp
cmp
pop
mov
dec
das
inc
jno
cmp
call
insb
in
dec
mov
insb
rcrb
stos
loop
pop
fs
and
rcl
mov
icebp
sbb
mov
cmp
lods
adc
clc
pop
cs
scas
push
das
sbb
cmp
inc
pushf
ja
fistps
and
popf
sub
xchg
imul
xchg
es
filds
sbb
cltd
sbb
in
jae
mov
inc
dec
movsl
push
out
xor
ja
cmp
cmp
sub
fnsave
push
adc
je
dec
addr16
push
push
or
call
add
push
test
xchg
filds
push
js
loop
int3
adc
inc
push
loop
and
rcr
into
inc
dec
faddl
loope
int3
jnp
xchg
loopne
sub
fdivrl
fdivl
sub
push
sub
mov
pop
jnp
jl
out
shrb
loopne
pop
add
add
lds
aaa
jne
fidivrl
mov
fs
cs
sub
inc
lahf
inc
sbb
mov
sub
mov
mov
pop
pushf
cmc
imul
sbb
adc
addb
mov
lcall
or
loope
shlb
xchg
push
mov
inc
and
jno
aaa
mov
add
rcl
dec
sbb
pushfw
adc
movsl
push
or
lret
jne
mov
mov
xchg
loopne
xor
out
adc
movsb
aaa
imul
sahf
mov
pushf
sub
test
insb
ljmp
pusha
imul
push
jmp
xchg
loope
movsb
outsl
jmp
or
push
push
push
aas
mov
repnz
sbb
mov
rol
mov
mov
and
movsb
mov
xor
lock
cld
pop
loope
sbbl
std
xorl
dec
movsl
mov
loope
adc
jl
pop
push
cmp
jge
and
lock
int
adc
test
pop
jmp
int
add
jnp
or
and
add
arpl
out
add
pop
sbb
das
cmp
or
push
jle
lock
dec
mov
inc
and
jne
mov
test
push
pop
js
mov
cmp
inc
xchg
pop
jle
outsl
call
sub
sti
inc
dec
test
daa
mov
shl
movsl
daa
hlt
sbb
sbb
stc
fdivs
test
and
adc
mov
cmpsl
fimull
lret
and
jno
mov
dec
incl
out
or
push
fs
lods
int3
jnp
add
or
call
cwtl
mov
push
dec
pop
cmp
in
or
inc
mov
lret
aam
jbe
int3
adc
sbb
out
inc
or
sub
push
ror
sbb
out
xchg
pop
add
testb
fisttpl
xor
push
jae
frstor
arpl
out
inc
inc
inc
xchg
mov
lock
xor
es
inc
dec
cwtl
push
test
pop
popf
pop
sbb
lea
test
dec
push
arpl
lods
mov
xchg
push
or
andl
pop
sahf
cmp
prefetch
jmp
pop
mov
cmp
arpl
inc
inc
test
xchg
xchg
rcrl
push
test
or
or
inc
fidivl
jle
sub
push
rorb
mov
and
inc
imul
push
add
or
out
inc
xchg
dec
pop
andb
push
rolb
cli
cmp
add
inc
push
or
lea
jne
xlat
xlat
push
orb
push
popf
xchg
lcall
cli
rcll
push
push
outsl
inc
push
bnd
lods
rcl
fs
xchg
stc
push
cmp
xor
std
xlat
or
jae
jg
inc
mov
pop
int3
mov
xor
xchg
pop
pop
pop
add
fimull
add
and
or
ret
insb
call
mov
shrl
cld
cmp
fs
mov
jnp
negl
inc
ja
out
lahf
dec
or
adc
mov
xchg
mov
cmpsb
test
cmp
or
xchg
hlt
aas
imul
in
test
push
pop
push
adc
push
mov
nop
pop
mov
mov
mov
in
lds
jnp
icebp
sub
cmc
fiadds
sub
mov
testl
les
mov
icebp
push
inc
test
ds
in
xchg
xor
cmp
movsl
sub
jo
add
pop
add
mov
and
sbb
add
scas
xchg
pop
out
sub
ret
dec
adc
adc
shrb
ficoms
jnp
xor
jg
push
adc
addr16
roll
push
andl
in
adc
mov
jg
sbb
sub
mov
test
add
xor
ja
imul
hlt
fsubs
sub
imul
xchg
sahf
stos
pop
fwait
mov
push
mov
jne
ja
push
dec
ljmp
cmpl
push
fisubs
dec
fildl
test
fstl
jne
aam
and
popf
movsl
push
add
das
repz
push
mov
test
xorl
cmp
test
add
adc
inc
insl
jl
inc
ret
inc
push
xchg
xor
inc
ja
sub
and
and
pop
mov
icebp
sbbl
sahf
push
mov
repz
adc
imull
sub
and
jle
cld
sub
and
jmp
pop
shr
js
lcall
je
xor
fcomp
add
xor
mov
movsl
js
cltd
cwtl
sbb
xchg
sbb
or
xchg
das
mov
pop
mov
pop
inc
sbb
icebp
jp
mov
inc
cmpsl
bound
or
pop
add
or
push
pop
pop
jmp
jbe
leave
lock
cmpsl
mov
push
jle
jo
lret
and
mov
mov
sub
inc
fwait
jge
movl
int3
sahf
ljmp
in
divb
pushf
andl
xlat
sbb
xchg
stc
xlat
out
aas
jmp
push
add
ret
mov
jae
ret
sti
mov
cmpsl
fwait
jo
jecxz
mov
cwtl
inc
mov
add
jecxz
push
test
popf
cli
in
pop
xor
cmp
sub
jge
mov
xchg
leave
lods
push
cmp
and
push
insl
lahf
outsb
mov
insl
mov
nop
push
cli
stc
jle
cmp
popf
in
push
repnz
add
in
fucomp
jg
jae
and
jo
lods
inc
push
cmp
jmp
testb
pop
adc
inc
xchg
aaa
popa
xchg
push
je
rorl
out
mov
leave
jecxz
aaa
mov
ljmp
ficoms
rcrb
cmp
int3
outsb
mov
test
movb
push
mov
dec
test
jne
push
shll
dec
push
jb
mov
jl
xor
or
push
cmpsb
call
and
and
pop
mov
jno
cld
inc
cli
cltd
dec
notb
mov
loop
dec
insl
rcr
out
in
xchg
push
xchg
xchg
aas
sub
enter
cli
xchg
pop
loop
fmuls
mov
and
leave
lds
push
pushf
ja
jns
fisubs
cli
outsb
rclb
adc
jne
pop
jb
push
or
lret
out
and
dec
push
cmp
outsb
sahf
inc
ss
adc
sahf
outsb
xchg
dec
or
inc
jmp
dec
add
mov
fiaddl
jnp
insl
test
xchg
fdivrl
inc
push
xchg
cli
push
arpl
sahf
arpl
rcrb
sub
in
sar
xchg
adc
push
mov
inc
sub
xor
adc
pop
out
lret
add
ret
push
pushl
fidivrs
and
lock
inc
inc
mov
punpckhdq
lret
mov
aad
mov
inc
cmp
mov
xchg
inc
push
mov
xchg
sarl
sub
sub
mov
inc
xchg
std
mov
ret
sbb
scas
xlat
add
scas
scas
lock
repz
or
hlt
movsb
jae
sbb
cli
int
mov
fcomip
and
sbb
stc
jmp
adc
imull
ds
inc
sbb
cmp
xchg
inc
jnp
es
test
inc
add
sbb
lods
and
fcmovbe
jmp
rcrb
sbb
xchg
sub
jno
jb
out
mov
loope
jnp
test
imul
cmpsl
mov
lret
jge
pushf
push
mov
cmp
fsubrs
cmp
into
mov
aam
push
and
cmpl
aam
das
xlat
out
jbe
aaa
test
jns
jbe
xchg
stc
fwait
mov
xor
xlat
ds
mov
xchg
insl
loop
imul
mov
adc
inc
movsl
cwtl
je
mov
inc
out
cltd
cmpsb
xchg
jp
mov
mov
pop
and
xchg
xchg
lcall
jne
and
xchg
enter
arpl
cltd
imul
cmp
icebp
xchg
xchg
inc
xor
sbb
lret
jecxz
insb
inc
aam
xor
filds
testb
pushf
sbb
int3
fcoml
cld
adc
jmp
test
adc
push
lcall
in
and
jb
sbbl
pop
out
cmp
push
mov
in
push
mov
outsb
ficomps
out
xorl
add
adc
add
rcll
xchg
adc
arpl
pop
xchg
push
jp
imul
adc
lock
aaa
xor
xor
mov
sbb
xorl
mov
and
xchg
add
mov
add
jmp
dec
mov
mov
pop
cmp
xorb
dec
pop
loope
imul
pop
out
int
iret
aam
mov
test
inc
xchg
icebp
orb
mov
outsb
fisubl
nop
lcall
ficoms
pop
pushf
cli
jae
mov
in
push
xlat
sahf
jle
adc
stos
andb
or
xchg
sbb
xor
mov
scas
and
adc
xor
sub
fcmove
fucomip
out
mov
cmc
jp
adc
arpl
cmp
inc
xor
ror
xor
sub
sbbl
leave
in
adc
je
pop
jo
jne
rcrl
dec
iret
xchg
call
test
and
mov
push
movsl
push
cmp
sub
pop
lods
jne
sub
jb
xchg
jae
ss
pusha
sarl
jne
lcall
addl
scas
mov
mov
into
add
es
inc
je
cmovne
iret
nop
adc
not
mov
mov
mov
adc
lahf
jmp
mov
and
aam
dec
cwtl
test
aad
pop
daa
sub
cmp
ss
jne
sbb
xchg
rol
push
mov
jno
push
dec
mov
pop
ss
xlat
mov
rcrb
insl
mov
lret
cld
cmp
cli
xchg
mov
ds
xor
std
pop
divb
clc
mov
inc
cmpb
stc
jmp
rorb
jl
stos
sbb
or
cs
and
cli
mov
nop
cmc
inc
jl
push
pusha
loope
pop
dec
jle
sub
lret
cmp
aas
mov
outsb
cltd
inc
jnp
jg
ret
pop
cmc
cmpsb
jge
dec
sub
in
xchg
fs
xchg
add
imul
mov
add
aas
ret
dec
insb
aas
add
xlat
insb
loope
les
push
ds
or
int
xchg
push
repnz
inc
cmp
clc
cmp
insl
jb
jg
shlb
inc
lret
lahf
cmpsl
pop
pop
sbbb
xor
add
adc
mov
repnz
out
fnstenv
pop
mov
aaa
test
push
push
lods
inc
sbb
aas
xor
mov
jg
pop
or
loop
jg
or
mov
sbb
loopne
stos
sbbb
add
insb
pop
and
test
sub
fmuls
jo
frstor
jge
add
mov
int
repz
outsb
add
mov
pushf
mov
in
sbb
push
mov
fsts
lcall
inc
fsubrl
and
outsl
gs
xor
les
jne
pop
push
sbb
mov
test
and
xchg
pop
aas
add
xor
fwait
jg
cmpsl
sbb
outsb
dec
mov
lahf
mov
xor
pusha
sub
inc
xor
jl
fisubl
mov
pop
xorb
mov
leave
int
lea
and
adc
addr16
cmp
lret
jge
mov
mov
jg
dec
lahf
cmc
or
xchg
cs
lods
mov
mov
push
push
test
or
sub
push
sti
pop
aad
inc
push
mov
push
pop
pop
int3
es
pop
inc
bound
fucomi
pop
or
imul
scas
jno
clc
loop
lock
jb
jnp
fwait
mov
std
push
lods
je
sahf
popa
sub
gs
add
aas
shlb
push
mov
loop
lret
xchg
xlat
dec
sahf
sbb
fstpt
stos
inc
subb
loop
inc
xorb
sahf
iret
or
xorb
mov
pop
es
cs
dec
test
adc
sub
pop
out
lret
arpl
pushf
jb
sbb
cltd
mov
xorl
mov
rcl
lcall
nop
mov
or
fwait
aas
xor
jnp
sbb
clc
pop
jmp
hlt
pop
adc
lret
xor
cmpsb
xor
outsl
aaa
outsb
insl
adc
ret
sub
imul
mov
jecxz
or
cmp
jbe
aam
daa
lcall
and
add
xchg
sbb
call
fs
pop
cmp
sti
lret
fs
shll
jmp
aaa
push
jae
cwtl
sbb
movsb
rorl
sub
and
mov
add
aad
add
adc
jg
adc
aad
xlat
je
push
sti
es
mov
sbb
adc
fwait
or
mov
aad
jp
push
loope
mov
test
in
mov
mov
arpl
orl
sbb
imul
fwait
jbe
add
outsl
pushf
xchg
nop
add
jns
arpl
sbb
fisttpll
or
xchg
jnp
movsl
dec
add
dec
inc
test
xchg
xlat
andl
and
addr16
pop
xchg
mov
push
movsb
lcall
jle
fidivs
icebp
jne
xchg
imull
testl
fcomps
clc
and
in
inc
push
add
imul
leave
jbe
push
or
xchg
xchg
jecxz
push
xlat
pop
xchg
mov
cmp
lret
div
outsb
xchg
pop
mov
and
call
rcr
negl
daa
jmp
push
pop
test
adc
lock
dec
pop
imul
xchg
dec
das
sahf
hlt
jl
jp
cmc
lcall
xchg
fdecstp
aam
int
ror
scas
outsl
mov
xor
cmc
xchg
in
sbb
push
jb
push
loop
xor
shll
data16
xor
into
cwtl
mov
xchg
cmpsl
iret
mov
lea
jne
adc
xor
movsb
out
pop
data16
jge
and
imul
gs
xchg
jno
icebp
enter
xchg
sbb
aaa
sarl
out
xchg
orl
pushf
fdivl
adc
jbe
ret
pop
push
cmc
mov
sahf
out
jo
pop
bound
push
sahf
mov
push
add
shl
adc
ret
fldt
cmp
jb
fwait
push
mov
mov
jo
in
fldcw
and
and
es
jmp
sub
test
xchg
push
push
fsubl
lea
or
test
imul
jnp
and
scas
aad
pop
stos
fcomip
pop
cmc
in
pop
fidivs
inc
fdivrs
adc
xorl
push
rcrl
jge
fldt
mov
cmc
outsb
dec
lahf
stos
stos
cmp
mov
mov
fdiv
adc
jne
ss
jg
jo
or
test
in
mov
xor
int3
ds
sbb
push
fdivrs
jle
mov
pop
imul
es
in
cmp
pop
test
ret
jae
aaa
repnz
bound
lea
adc
xchg
mov
mov
lret
inc
outsl
xlat
sub
jecxz
cmp
test
outsb
mov
jno
dec
arpl
movsl
aam
js
div
fdivs
ret
mov
fcoml
loop
xor
pop
popl
leave
leave
pop
xchg
cmpb
inc
icebp
xor
icebp
mov
inc
mov
mov
xor
enter
pop
aad
ds
add
jmp
movsb
pop
inc
cld
ds
sub
mov
pop
or
jge
sbb
aas
iret
xchg
cmp
push
cmp
outsl
mov
movsl
insb
in
in
or
cmpsb
and
aad
fwait
add
add
cmpb
clc
aaa
mov
adc
testb
leave
cmpsl
pop
cmc
fdivrs
mov
pop
xchg
outsl
fwait
xor
insl
xor
inc
ss
cld
jno
pushf
je
dec
js
push
xchg
fsubrs
pop
xchg
loopne
jbe
pop
sub
aad
test
mov
sbb
ljmp
jne
and
or
fdivp
adc
sarb
mov
stc
or
jne
dec
pop
push
mov
sub
adc
nop
shl
nop
inc
or
or
les
pushf
pop
mov
dec
pop
aad
cmp
cmp
sub
lds
fidivs
inc
dec
or
sbb
sub
lea
daa
mov
dec
insl
mov
out
pop
imul
push
or
out
dec
push
fs
xchg
sbb
scas
dec
fsts
or
push
inc
xor
mov
push
push
mov
sub
cmp
shll
aas
jae
lods
pop
out
add
sub
jge
shr
add
mov
fadd
and
incb
push
dec
imulb
sahf
fs
jnp
inc
xor
push
and
sbb
xor
lret
sbb
sub
shll
sub
push
dec
mov
mov
jns
mov
inc
lods
fsts
mov
sbb
ret
sbbl
mov
dec
nop
ja
mov
scas
xor
mov
movsb
mov
adc
int
mov
adc
stc
pop
fsubp
or
push
dec
mov
je
sbb
or
int3
insb
mov
and
repz
push
cmp
push
aad
stos
adc
dec
cmpsl
and
pop
idivl
jmp
out
mov
mov
add
xlat
adcl
sub
add
adcl
imul
imul
clc
ret
aaa
add
rorb
mov
sarl
movl
fst
pop
mov
out
push
sti
aaa
popf
dec
xchg
mov
jne
and
sub
pop
fs
or
scas
and
mov
insb
xchg
dec
outsb
jae
sub
adc
and
jae
das
cmpsl
repz
sub
ret
push
imul
jmp
cmp
add
pop
cmpsb
addr16
adc
test
xchg
dec
test
js
repnz
xor
xchg
pop
pushl
jo
lret
hlt
fldl
inc
mov
or
dec
lods
sub
mov
push
mov
or
stos
loope
in
shrb
jns
shlb
xor
mov
jmp
and
and
ret
cli
js
repnz
in
fucom
mov
inc
jbe
shr
pop
cmp
push
jbe
pusha
mov
sahf
dec
pop
inc
add
pop
imul
sub
jp
mov
push
dec
enter
lcall
adc
repnz
call
pop
lds
rorl
and
xchg
adc
pop
lret
sub
mov
cltd
dec
pop
adc
out
cmc
pop
cltd
mov
jmp
jmp
dec
xor
pop
xchg
sbbb
mov
fidivrs
inc
jecxz
addr16
mov
loope
adc
jno
ret
in
inc
leave
jno
jne
push
push
in
cmp
sub
xchg
xor
out
loop
iret
and
jnp
lea
push
aaa
adc
outsb
cld
nop
add
mov
jg
xchg
loope
and
xchg
push
and
xor
jns
mov
jns
in
data16
xor
rcpps
fsubs
push
mov
cmp
data16
mov
inc
xor
pop
in
or
mov
sbb
fsubs
outsb
int3
daa
and
jecxz
cs
repnz
daa
sub
cmp
dec
daa
jp
or
in
sbb
loopne
jne
test
sbb
stc
test
dec
or
pop
pushl
xorl
jae
jne
jbe
pop
jmp
das
jge
jle
cmp
inc
repz
je
and
inc
fisubs
mov
aad
pusha
xor
cld
subb
or
sahf
mov
or
jae
out
ret
or
cmp
cld
mov
sbb
jne
popa
stc
mov
mov
out
adc
mov
fsubs
dec
and
cmp
dec
fisubrs
adc
pop
xor
pop
sti
mov
fnsave
gs
push
dec
jns
out
jae
push
fcompl
adc
pop
clc
ret
movsl
lcall
ds
testb
mov
inc
adc
fidivs
ss
jae
mov
dec
pop
pop
inc
and
jb
cmp
js
mov
sbb
dec
mov
in
and
insb
pop
xor
fdivrs
jecxz
in
stos
sbb
dec
sar
int
pop
hlt
pop
hlt
orl
aaa
adc
ja
mov
inc
out
xor
dec
fdivl
jne
dec
xchg
xlat
jmp
sar
xchg
shrb
xchg
jae
insl
pushf
dec
in
out
mov
cmp
adc
sub
pop
jle
cltd
insb
stos
ljmp
insb
dec
add
push
sbb
fcom
jle
add
hlt
out
or
and
in
xchg
sbb
daa
lock
lock
in
bound
jmp
popf
mov
add
mov
mov
arpl
cltd
push
xchg
cld
sub
stc
mov
jge
adc
pop
sti
push
mov
dec
mov
dec
repz
ret
cli
xor
or
mov
and
pop
cmpsl
add
data16
and
mov
jb
inc
sub
clc
pop
aad
std
add
xorl
push
popf
mov
cwtl
sbb
mov
inc
add
ja
in
movsl
mov
out
sub
pop
mov
push
scas
jmp
gs
push
or
sahf
jmp
pop
pop
inc
sbb
lds
xlat
lock
pop
mov
fisubrl
js
sub
xchg
and
xchg
nop
jecxz
mov
ljmp
lds
jle
aam
les
in
pop
add
push
in
jnp
int
out
cwtl
dec
imul
loop
pop
and
es
scas
into
aad
movsl
adc
mov
add
nop
inc
cmp
add
cmovp
jns
aad
adc
in
shr
std
cmp
mov
lret
xor
std
pop
mov
pop
xor
xchg
lods
rcrb
jmp
pop
int3
and
push
in
imul
jmp
xor
lea
loope
push
stc
mov
mov
xchg
xchg
ficomps
in
jecxz
inc
push
jne
and
stos
jge
inc
shrl
cmp
or
or
xor
jg
add
dec
inc
push
mov
js
push
cmpsl
inc
cmpsl
jmp
loop
fildll
sbb
popf
pop
addr16
dec
in
lret
notl
mov
movsb
cmp
sub
cmp
scas
outsl
ds
sbbb
xlat
add
adc
push
aam
cmp
dec
idivb
add
add
imul
not
cli
hlt
cld
lcall
mov
xchg
add
adc
adc
mov
inc
lds
cmp
sti
mov
push
push
dec
addr16
int
iret
xor
hlt
adc
or
lock
scas
xchg
push
jmp
fsubl
pusha
andl
cwtl
adc
mov
inc
cwtl
lahf
mov
cmp
pushf
pop
xchg
shrl
xchg
pop
dec
inc
loop
inc
add
adc
test
lods
mov
lods
inc
jg
mov
push
dec
xor
iret
aaa
inc
add
cmp
fnstcw
push
inc
inc
add
dec
mov
cld
insb
cmpl
cmpsl
dec
push
ja
movsl
sub
insb
jmp
rcll
in
ret
dec
lcall
pop
mov
and
fnstsw
imul
and
dec
pushf
pop
add
stos
jbe
fildl
xchg
ljmp
fst
xor
loope
xchg
in
sbb
dec
out
fmuls
scas
in
scas
mov
call
add
sub
sbb
mov
dec
mov
mov
or
cmpsl
dec
fs
lret
cmp
jmp
lds
adc
dec
je
push
sub
xor
mov
sbb
adcb
adc
call
fdivl
movsb
cmp
lock
jo
aam
out
scas
out
stos
and
push
pop
shll
and
pop
sbb
pusha
mov
jbe
mov
cld
pop
mov
mov
cli
cld
mov
gs
cmp
push
out
cmpl
lret
imul
jg
mov
push
aam
popf
sbb
jmp
lea
sbb
lea
imul
cmp
in
pop
idivl
shlb
ds
push
mov
popl
in
stos
cmpsb
test
nop
and
xchg
push
test
ret
fs
dec
lret
jns
call
and
pushf
mov
movsl
xchg
xchg
mov
dec
mov
out
fadd
lret
xchg
repnz
cmp
sub
jmp
out
mov
int3
sub
icebp
push
xor
addr16
mov
jle
adc
and
pop
push
cmp
push
aad
xchg
ljmp
sbb
fdivrs
andl
decb
inc
sub
xor
cmpsb
in
pop
pusha
shr
or
clc
adcb
repz
mov
mov
sarl
push
jb
pop
jmp
push
pop
or
xor
cli
hlt
lods
mov
mov
lods
daa
adc
pop
pop
stos
aam
mov
jmp
cmp
adc
test
mov
addr16
and
cmp
fs
loope
psadbw
idivl
ljmp
aam
sbb
mov
fimuls
icebp
xor
push
js
lods
sahf
push
cltd
addr16
lret
mov
jbe
push
lahf
lret
mov
push
xor
scas
sahf
insl
sti
repz
dec
imul
pop
cli
int3
popf
mov
inc
ss
enter
stos
mov
sub
scas
push
pop
sub
inc
mov
aad
or
lea
addb
or
jp
jo
daa
imul
in
fldl2e
jge
and
iret
dec
jge
call
pop
movsb
cltd
mov
repnz
pop
iret
fsubrl
test
xchg
sbb
es
cmpsl
subl
ret
out
and
push
push
mov
fs
mov
fstpl
mov
cmp
pop
sbb
or
dec
outsb
mov
xchg
pop
call
push
mov
mov
cmpsl
mov
sbb
xchg
cmpsb
insb
dec
out
mov
fstpl
loopne
orb
add
jg
pop
jne
jo
dec
fstl
or
cmp
lret
lds
sbb
cwtl
ljmp
daa
adc
xchg
cli
mov
dec
push
pop
in
sub
cmp
or
mov
or
in
lds
mov
cld
mov
mov
pop
jl
inc
insb
cld
clc
cmp
lods
mov
push
inc
pop
aam
cmp
inc
pop
xor
sub
and
subl
jno
mov
and
test
push
sub
dec
mov
xchg
pushf
sub
rcl
fldenv
roll
jb,pt
cmp
enter
in
test
rolb
jge
pushf
push
fsts
pop
arpl
cmovbe
addr16
mov
mov
cmp
xchg
pop
pop
leave
sub
or
lret
xchg
or
daa
dec
mov
xchg
mov
or
addb
and
outsb
pop
jle
xor
out
psubw
sti
push
xchg
subb
mov
sub
andb
pop
lods
aaa
iret
pop
lcall
adc
fisttpl
jp
mov
movsb
jbe
ds
add
jne
jg
inc
js
push
lcall
mov
or
inc
faddl
jno
cmpsb
xchg
sti
stc
add
inc
ret
out
dec
adc
ja
movsb
xchg
stc
lret
pop
mov
mov
and
lahf
and
dec
mov
ss
les
mov
cmp
imul
cmpsl
lret
or
inc
in
inc
push
xor
xchg
fwait
inc
cli
cmp
or
scas
adc
sbbb
lods
sbb
out
and
mov
mov
pop
xchg
pop
mov
adcb
inc
dec
lahf
lds
rep
mov
insl
mov
cmpsb
das
jo
add
mov
pop
lret
rcrl
push
out
ja
popa
jae
lds
test
shlb
mov
mov
gs
fs
jmp
or
out
mov
pushf
ds
sbb
into
out
jp
lcall
push
cltd
inc
push
mov
es
adc
ja
mov
lret
fdivrl
mov
ss
es
pop
add
mov
adc
xor
loopne
and
sarb
xchg
cwtl
mov
pop
mov
pop
mov
es
xchg
cli
xchg
out
shlb
outsb
mov
jns
pusha
fcmovbe
in
fisttpll
jmp
xor
sub
cmpsl
cld
in
and
dec
iret
xor
out
cmp
and
lock
jmp
loope
fnstsw
mov
sbb
lds
add
push
or
lds
jno
fldl
inc
movsb
outsb
fs
mov
sub
jg
push
popf
repz
nop
test
xchg
cld
cmpsb
xchg
sub
xchg
ljmp
repz
push
sub
lds
insl
dec
mov
xorb
inc
inc
cmpsl
jnp
sub
aad
dec
call
dec
xor
leave
popa
aam
adc
ds
imull
mov
pusha
pop
movsl
ret
lret
jnp
jge
push
mov
fdivr
fidivrs
fnstenv
mov
pop
pushf
div
push
fcoml
and
push
stos
cmp
mov
pop
adc
sub
xor
icebp
out
sarb
aas
mov
rolb
test
mov
clc
popf
jnp
mov
or
incl
int
cmp
cmp
inc
ret
ficoml
sub
lock
flds
lahf
xchg
sbb
cmp
inc
push
sbb
dec
subl
lcall
movsb
bound
add
add
push
and
sbb
mov
sahf
pop
inc
lea
mov
sub
fisttpll
adc
xor
and
out
outsl
lods
pop
push
mov
inc
lahf
dec
push
lock
pop
and
popf
ljmp
mov
pop
popa
sbb
fcomps
dec
jecxz
sbb
mov
or
push
lods
mov
push
mov
sbb
sahf
lock
dec
scas
sarl
lret
jg
and
fdivrl
mov
xchg
cld
loope
sub
loope
fdivl
stos
mov
jge
arpl
lcall
lcall
mov
or
js
inc
sahf
lcall
mov
adc
sbb
mov
hlt
jle
xchg
xchg
adc
mov
popa
imul
and
push
lods
or
xor
hlt
adc
movsl
push
decb
ret
stos
movsb
imul
xchg
mov
and
mov
mov
fsubrs
rcll
shlb
loop
pop
inc
cltd
xor
jecxz
hlt
out
mov
xchg
roll
loopne
mov
pop
clc
or
mov
jns
mov
sub
add
add
and
shrl
xor
xchg
mov
jg
jno
and
push
int3
mov
call
std
and
ds
jnp
xor
jmp
shlb
mov
inc
aam
push
pop
inc
subl
cmp
xor
or
icebp
lret
mov
test
and
jo
add
rcll
imul
xor
out
jbe
and
rcrl
and
fwait
fs
mov
je
call
push
cld
fistpll
lds
mov
sbb
add
ficomps
mov
scas
lahf
pop
sub
fldenv
test
or
popa
nop
pushf
movsb
adc
rcrb
in
dec
scas
out
fwait
sub
jl
cltd
adc
inc
pop
dec
inc
ja
das
call
cmp
dec
fstpt
or
inc
fs
clc
repz
cli
sti
sbb
in
movsb
pop
cmpsl
gs
and
xor
fldcw
lret
mov
dec
mov
bound
xchg
movsb
and
je
subb
or
xor
test
fstps
adc
cmp
inc
push
shlb
out
inc
dec
inc
addr16
mov
mov
inc
arpl
stos
sbb
into
pop
enter
repz
fistl
pop
xor
inc
jp
xchg
es
test
or
add
pop
inc
mov
xchg
cld
cmpsl
stos
sub
mov
mov
ljmp
pop
setbe
ret
mov
fucomip
inc
xchg
into
dec
cmp
mov
inc
das
push
sarl
push
not
lods
in
test
repz
imul
inc
mov
push
cld
xor
pop
push
aam
les
cld
out
dec
mov
cmc
xor
stos
decl
lods
popa
xor
and
push
jo
shlb
inc
popf
scas
add
nop
cltd
lods
fwait
xor
mov
push
aam
cmpsl
sbb
or
dec
pop
jno
mov
pop
push
out
test
xchg
mov
cld
cli
jp
push
lcall
mov
arpl
inc
ljmp
ror
jecxz
ret
xchg
jns
jae
test
fimuls
mov
popf
inc
test
imul
imul
jmp
xchg
gs
push
sub
push
stos
push
ss
aam
orl
cmp
cltd
aam
je
hlt
es
ss
insl
les
push
cmpsl
ret
mov
jge
fcoms
mov
addb
add
and
in
pop
cmc
jno
mov
fs
lods
mov
lcall
roll
jne
loopne
push
mov
inc
push
shrb
jmp
adc
into
sbb
int
xchg
js
fcomip
sub
inc
ds
fwait
cmp
shlb
sti
sbb
sahf
adc
addr16
ljmp
jecxz
adc
dec
mov
push
shrb
push
lret
stc
mov
int3
jnp
and
sbb
adc
push
lea
mov
fmuls
or
jmp
xlat
pop
shrl
es
pop
or
xor
lds
test
ficompl
cs
add
in
aam
idivl
inc
pushf
xchg
fsts
dec
scas
pop
daa
cmp
cmp
sub
inc
lea
or
loope
arpl
xor
movsb
or
mov
sub
or
jnp
sbb
and
cmpsl
das
jmp
mov
mov
mov
adc
rorb
cwtl
pop
or
jo
jnp
push
dec
pop
pop
inc
inc
es
adc
lock
insb
test
push
out
out
ja
out
sbb
outsl
in
sub
out
and
xor
inc
xchg
cmc
in
gs
push
testl
lret
sbb
and
cmpsl
jl
jle
sub
mov
xor
dec
lods
and
cwtl
shlb
sti
dec
pop
in
inc
sarb
cmp
out
mov
arpl
push
sahf
or
loope
add
cs
enter
aas
xchg
xlat
push
inc
das
mov
and
sti
mov
test
stos
sub
sub
mov
clc
notb
push
xchg
clc
inc
ret
push
sbb
xchg
es
push
scas
rcrb
outsl
aas
sbb
xorl
dec
cmpsb
pop
sub
cmp
ret
jae
jns
mov
jecxz
loope
mov
bnd
clc
dec
or
lods
lahf
int3
in
int
mov
sbb
add
xchg
mov
faddl
aaa
jb
fisttps
push
int
mov
lods
push
xor
add
sub
rcll
stos
out
ret
hlt
inc
add
sbb
jge
and
roll
push
sbb
pushf
mov
std
inc
mov
fidivs
or
mov
and
adc
stos
mov
xor
pop
movsb
cmp
xor
pop
stc
out
int3
in
rol
vpavgw
mov
or
loopne
cmp
jmp
movsl
in
jo
rolb
add
dec
daa
fiaddl
xor
movsb
pushf
dec
iret
inc
ret
adc
cmp
fisubs
inc
push
leave
fstpt
jns
mov
and
lret
nop
lock
notl
sub
das
or
data16
mov
and
cs
mov
adc
insb
xor
fucomi
aaa
jo
cld
mov
mov
and
jno
mov
pop
jg
fwait
aas
mov
sbb
sub
jb
out
lods
cmpsl
mov
fs
loopne
loop
xchg
rorb
daa
insl
pop
and
mov
aad
adc
or
shl
loop
clc
jp
cmp
dec
jl
dec
or
lods
hlt
lds
dec
test
cmp
mov
mov
lock
out
xor
xchg
mov
in
iret
cwtl
icebp
ficompl
or
sub
pop
aas
ret
test
mov
cmpsl
mov
popl
mov
call
inc
aam
add
addb
xor
outsl
movsl
leave
xor
rcll
inc
mov
adc
xchg
test
das
cld
pop
cmp
psadbw
out
mov
rolb
je
add
mov
pop
sar
xchg
mov
lds
mov
adc
rcr
fwait
pusha
xor
mov
movsl
push
ror
and
push
popf
stos
adc
cmp
shrl
ja,pt
xchg
in
push
cli
loop
shr
cmp
mov
jl
mov
fwait
cmp
bnd
cs
mov
mov
cmpsl
pop
cmp
xor
xor
adc
jmp
jns
jmp
sub
pop
mov
ja
mov
out
pop
sub
mov
sub
cmpsl
jl
mov
jmp
addl
outsl
shlb
scas
push
bound
mov
and
data16
testb
aam
cmp
fwait
aas
lret
pop
test
mov
mov
pop
rcll
xor
insb
test
pop
enter
cmp
jo
mov
push
and
add
cmpsl
xchg
adc
jle
push
push
inc
jb
and
cmp
sub
ret
sbb
jle
mov
js
push
add
push
mov
nop
cs
outsl
xchg
push
push
pop
and
lock
xchg
jecxz
les
sbb
mov
add
fisubrl
loopne
cltd
inc
sahf
movsb
xchg
cmc
inc
pop
popa
sbbl
pop
jge
mov
xchg
jmp
insb
xlat
jnp
in
mov
mov
cmp
mov
mov
push
fadds
clc
xor
jl
adc
inc
iret
add
out
xor
pushf
cltd
or
jmp
icebp
lds
sarb
jbe
fs
inc
xchg
cmpsb
jb
out
and
pop
loope
gs
jb
hlt
mov
daa
cmp
loope
pushf
dec
sbb
in
jp
add
push
scas
mov
and
pop
and
adc
ficoms
mov
fsubl
adc
push
jmp
and
adc
loop
leave
mov
imul
mov
sahf
sub
jnp
jl
in
and
push
loopne
push
pop
push
loop
push
mov
sbb
push
pop
ss
dec
ret
pop
stc
cli
movsl
scas
pop
adc
scas
fsts
sbb
in
jle
jo
mov
dec
pop
pusha
shl
mov
cmc
mov
pop
and
adc
mov
jp
cltd
cmp
mov
fldt
and
xor
inc
push
mov
inc
and
addb
push
xchg
js
sbb
mov
jbe
xchg
dec
outsb
jl
fnsave
jne
pop
xchg
repnz
cmpsb
dec
dec
xor
add
pop
mov
rorl
int3
lahf
stos
inc
stos
rcrl
jne
or
push
mov
mov
stc
out
mov
mov
ss
add
jno
xor
sarl
jnp
mov
and
popa
sarb
pop
push
mov
int3
mov
jns
sbb
test
addb
sbbb
fmul
ss
dec
mov
sub
mov
and
frstpm(287
lock
repnz
out
adc
dec
ret
addr16
pop
mov
mov
neg
xor
push
js
mov
mov
daa
dec
cmp
push
jo
mov
and
mov
pop
fmul
cld
fchs
sbb
pop
jae
gs
sbb
bound
lods
lcall
add
fcmovnu
bound
pop
lea
sbb
push
arpl
inc
ret
pop
stos
sub
inc
dec
and
xorb
and
js
and
outsl
jle
ljmp
cmp
adc
sbbb
cmp
nop
cmp
mov
mov
and
sysret
incb
pushf
pop
jnp
inc
out
inc
mov
les
popf
imul
into
pop
inc
inc
push
movsl
push
test
scas
rolb
aas
dec
mov
inc
pop
mov
mov
push
sbbb
and
lods
cmp
dec
pop
mov
pop
fmull
hlt
xchg
imul
push
and
mov
jecxz
sub
dec
sahf
int
mov
and
inc
imul
enter
out
jp
or
out
mov
inc
dec
inc
mov
push
lock
jmp
mov
sub
jmp
iret
xchg
shlb
xchg
cmp
sbb
nop
mov
in
mov
not
and
js
push
add
cmc
call
cmp
xor
jnp
lret
fdiv
sbb
sarb
daa
notl
cld
cld
movsb
lods
stc
lahf
mov
jle
mov
loopne
scas
push
jg
cmp
idivl
push
or
orl
mov
and
ret
cmp
ljmp
mov
fstps
stc
in
mov
cmp
xor
push
ret
ja
cmp
xchg
cmp
sub
or
jb
and
ja
das
cmp
aas
out
xor
clc
push
enter
fidivrl
pop
fwait
pop
xor
jp
lcall
stos
stos
mov
lods
jb
jl
rcl
shr
fisttpll
dec
in
stos
pop
and
cli
sbb
rcll
jge
inc
cltd
dec
es
add
adc
lret
mov
shlb
add
push
scas
divl
push
mov
sbb
add
rorl
sarb
in
cmp
in
push
je
cmpsb
addr16
mov
das
sub
cmp
dec
jbe
pop
mov
sbb
pop
fisubrs
fwait
sbbl
mov
jb
insl
mov
sub
js
push
dec
hlt
aam
inc
push
add
das
test
mov
daa
arpl
xchg
push
pop
mov
mov
outsl
xor
adc
inc
ja
imul
movsl
addr16
fdivl
cmc
jmp
mov
out
mov
push
xchg
add
add
movsb
jp
in
mov
in
nop
sbb
inc
bound
loop
pop
movsb
rcrl
out
int
mov
xlat
in
andb
mov
or
jbe
sti
fadds
out
loope
mov
lods
aas
cs
rol
dec
adc
ja
movsl
and
pop
in
lret
addr16
pop
sbb
inc
in
rorb
lret
add
ss
addl
addr16
xor
gs
dec
subl
popf
adc
sahf
adc
jnp
int3
lock
adc
jle
sub
mul
sbb
aas
outsb
push
jo
jae
push
sub
push
or
mov
mov
adc
lcall
or
bnd
sbb
cld
stc
dec
aaa
cwtl
orl
shlb
xchg
ficoml
push
int
out
inc
movsl
push
mov
ja
out
pop
arpl
insw
lock
pop
adc
out
adc
aaa
test
push
das
call
shr
enter
inc
push
dec
and
pop
xchg
insl
mov
je
ljmp
jmp
mov
out
inc
dec
inc
sbb
pop
dec
aad
add
xor
add
out
int3
push
ret
lods
mov
fisttpl
push
fidivl
icebp
je
lock
mov
inc
cmp
xor
jge
loopne
mov
and
dec
push
adc
inc
mov
or
ds
and
xor
cmp
xchg
mov
cmp
jle
movsl
fildl
enter
xchg
scas
pop
sar
sahf
or
lcall
and
fs
push
mov
and
pop
cmp
test
repz
test
jb
or
pushf
fdivrs
push
push
ja
xlat
mov
cmp
cmp
cmp
mov
mov
popf
mov
and
adc
mov
rep
add
lret
mov
div
pop
sub
sbb
or
mov
sbbl
fs
adc
adc
outsl
loope
pop
arpl
mov
mov
mov
sub
mov
dec
xor
push
fisubrl
add
cmp
cmpsb
cmp
fldt
add
fidivs
mov
popf
int
adc
xchg
mov
out
xchg
pop
xor
cmc
cld
and
adc
out
mov
mov
dec
cmp
pop
int3
sbb
nop
dec
pop
inc
mov
test
pop
sub
in
adc
mov
jle
mov
inc
sub
ja
data16
js
loop
sbb
jne
and
into
mov
adc
push
cmc
in
or
lret
into
inc
insl
clc
int
cmp
lds
aas
aam
push
sti
pop
call
scas
jns
jns
pop
add
rcll
popf
divl
scas
clc
sub
insb
xor
fsubl
push
add
cwtl
mov
iret
pop
push
lret
and
sub
shld
sub
insb
inc
adc
es
inc
mov
or
shll
shll
subb
insb
add
pop
repz
push
pusha
dec
mov
hlt
loope
mov
in
lds
cld
dec
arpl
xor
dec
mov
sti
jmp
add
inc
dec
lret
pop
mov
hlt
sub
jne
push
cmp
xchg
or
pop
mov
std
mov
aad
mov
repz
movsb
mov
mov
or
mov
stos
js
jecxz
inc
aam
add
add
sub
adc
pop
sub
dec
inc
xor
lods
dec
dec
adc
mov
pop
aad
add
mov
dec
cmpsb
cmpb
mov
cld
or
mov
dec
arpl
imul
inc
jl
jl
pop
fdivrp
xchg
stos
faddp
rclb
lock
mov
sbb
jp
test
adcb
jns
mov
sub
cltd
inc
xor
mov
test
addr16
ret
sub
mov
imul
les
jle
mov
sbb
orl
and
inc
popf
mov
cmpsl
sub
in
movb
sti
out
adc
fdivs
or
inc
jp
or
cltd
fidivs
negb
movsl
sbb
sbb
lahf
jge
pushf
outsb
mov
jne
test
mov
lahf
lret
sbb
jecxz
sub
sahf
inc
hlt
add
xor
push
fsubrs
aaa
and
popf
hlt
mov
jo
adc
rcl
and
test
sti
stc
xlat
xchg
lret
inc
xchg
inc
lds
incl
pusha
mov
orl
sbb
xchg
mov
cmp
std
xor
pop
mov
movsl
xchg
daa
sub
xchg
cmc
sub
hlt
sbb
clc
inc
fimull
fists
mov
mov
call
jmp
add
nop
pop
bnd
add
inc
fwait
mov
lret
je
dec
cmpsb
shll
cs
rolb
push
movsl
mov
sub
and
in
adc
adc
add
stos
jle
push
into
pop
xchg
xor
jle
movsl
push
out
sub
nop
and
outsb
sbb
jbe
inc
stos
mov
std
data16
inc
push
pop
lcall
fists
in
push
stos
das
test
push
int3
pop
mov
mov
pop
mov
push
sub
mov
xchg
add
sbbb
shll
int
repnz
dec
mov
xlat
insl
fcoml
lahf
push
adc
fidivl
in
pop
cmc
clc
fidivrs
in
leave
bound
sub
leave
push
dec
push
xor
dec
mov
stos
sub
es
das
push
mov
dec
jo
xor
and
leave
scas
fwait
and
int3
shll
rolb
sahf
outsb
in
cmp
int3
mov
leave
inc
outsl
fwait
movups
push
shl
xchg
stc
mov
mov
lds
aad
and
scas
push
in
sub
pop
pop
jne
inc
int
mov
sub
xor
mov
test
jl
mov
clc
mov
pop
pop
aad
xor
shrb
ja
dec
dec
mov
mov
pop
cmpb
adc
push
push
scas
xor
je
movl
int3
adc
push
mov
fidivs
ficomps
sbb
test
insl
movsb
inc
arpl
pop
add
mov
rcrl
mov
xlat
test
aas
sbb
inc
sub
movswl
or
in
into
cmp
mov
aam
scas
pop
adcl
es
jg
out
pop
inc
pop
jle
stos
lahf
gs
imul
push
mov
sahf
ret
es
or
mov
cmp
jae
cmp
loop
inc
mov
cmpsl
ss
pusha
sahf
mov
rcll
xchg
hlt
mov
sub
je
xchg
xchg
dec
fsubr
mov
and
lock
movsl
xchg
scas
mov
pop
das
push
lahf
cli
add
aaa
push
enter
insl
push
aam
sbb
aas
stos
int3
decl
dec
inc
js
cmp
aaa
sbb
add
cmp
loope
adc
xor
in
xchg
adc
add
mov
xor
mov
lea
push
in
pop
aaa
dec
jo
mov
inc
fwait
test
scas
and
pusha
or
imul
mov
dec
mov
or
push
add
mov
outsl
inc
cmp
mov
fwait
or
mov
sbb
int
push
and
and
jns
call
or
push
fisttpll
adc
mov
push
loope
push
sbb
sub
xchg
idivb
dec
cli
mov
jne
pop
push
inc
inc
mov
rorl
cmp
sub
les
out
roll
in
les
jno
adc
mov
mov
adc
pop
cmp
aaa
sbb
rcrb
inc
daa
xor
outsl
sub
enter
xor
scas
js
jmp
mov
int
or
jno
inc
dec
int3
insb
xchg
insb
insb
and
push
inc
or
test
xchg
push
lds
sub
jg
mov
jl
sub
je,pn
ret
cmp
xchg
pop
adc
pop
jae
and
dec
mov
jno
fisubrl
jns
mov
pop
pop
imul
inc
es
mov
sub
push
lock
mov
jmp
jne
call
cmp
mov
fisubs
pop
dec
mov
mov
sbb
cs
rcr
lcall
arpl
adc
lods
lds
fstps
out
in
addl
cmpsl
push
fisubl
adc
lcall
xchg
sarb
imul
pop
and
mov
xor
inc
popf
or
mov
xor
cwtl
pop
clc
and
ret
aad
xchg
sbb
lds
lahf
shr
int
mov
sub
mov
fisubl
add
fs
fs
fs
repnz
in
loop
inc
xchg
and
outsl
adc
imul
jo
add
mov
sbb
add
or
out
adc
pop
dec
loope
rcll
notb
je
push
leave
xchg
loop
loope
scas
mov
push
mov
repz
aam
inc
pushf
mov
call
scas
jl
sbb
mov
imul
cmpsb
cmpsb
fcoms
or
inc
push
mov
dec
or
roll
daa
sbb
xchg
mov
adc
dec
stos
jns
pop
cli
sbb
jo
mov
xor
cli
mov
mov
cmp
das
cmpsb
dec
shlb
mov
sahf
xor
push
jp
dec
in
sbb
sub
sbb
fisttpl
insl
cmpb
push
add
out
mov
in
lret
outsb
and
push
leave
stc
push
negl
int3
ret
aad
pop
add
xorl
pushf
aad
es
push
push
pop
mulb
xor
cwtl
dec
sti
pop
int3
sbb
pushf
and
jle
inc
mov
mov
call
clc
imul
mov
or
ret
sbb
lcall
cmp
in
cmp
or
imul
mov
mov
pop
push
pop
and
inc
cmp
adc
push
test
push
cmp
pop
outsb
sbb
xchg
hlt
call
jbe
jne
fdivl
mov
sbb
das
hlt
fwait
shll
fcoms
hlt
cmpsb
xlat
mov
jle
movsl
adc
stos
mov
adc
loopne
dec
js
cs
lods
adc
fnstenv
stos
push
push
out
inc
jno
scas
mov
jl
aas
sbb
add
xor
sbb
push
push
lahf
xor
xchg
repz
pop
pop
shlb
ret
insb
lcall
pop
js
out
ja
mov
mov
cwtl
icebp
clc
mov
pop
imul
and
loop
jg
fcoms
sub
mov
push
mov
test
gs
adc
push
push
loope
mov
xor
add
pop
fldenv
xchg
imul
xchg
loop
leave
sbb
rolb
lods
cld
fldenv
sub
in
push
insl
add
add
mov
or
mov
sub
jg
arpl
adc
adc
mov
fs
xchg
pop
mov
xor
mov
gs
dec
and
lods
jg
ljmp
mov
in
int
cwtl
imul
movsl
out
rep
mov
push
fs
jle
subb
pushf
sbb
lds
das
cltd
fldt
sahf
in
loopne
sub
addr16
stos
mov
cli
sub
ret
pushf
pavgw
mov
in
shl
dec
sub
lds
nop
cs
or
xor
out
leave
jbe
ret
mov
adc
sbb
testl
movsl
test
or
and
aas
push
lds
call
and
fwait
cmpsl
xchg
fisubrl
push
dec
mov
popa
out
jo
inc
sti
inc
daa
dec
dec
pop
jmp
subb
sub
arpl
dec
stc
push
fimull
popa
mov
fwait
push
inc
repnz
addr16
popa
call
pop
test
movsl
out
stos
lds
pop
sub
or
jmp
loopne
xchg
je
and
sar
xchg
jnp
cmpsb
push
pop
sub
push
xchg
into
mov
in
addr16
push
rcll
lahf
dec
sbbl
push
ror
sbb
out
pushf
xchg
in
stos
mov
jg
push
push
lods
sbb
mov
test
or
outsb
fs
mov
adcb
push
arpl
pop
add
mov
call
push
cmp
mov
sub
lahf
push
cmp
faddl
sbb
andl
jle
sub
rcl
push
dec
scas
lret
pop
jne
outsb
es
iret
mov
lret
lcall
rorl
and
inc
jmp
test
xchg
pop
fmuls
jae
aaa
loopne
repz
xor
or
js
out
mov
sbb
pop
or
dec
pop
or
pop
repnz
adc
popa
mov
in
or
fidivl
insl
iret
ljmp
popf
pop
mov
mov
idiv
dec
roll
pop
inc
ja
into
mov
out
test
sub
nop
pop
in
and
or
mov
jle
popf
jbe
ljmp
cmpl
mov
fucomp
mov
add
cmp
jg
mov
xchg
xchg
xchg
xchg
das
ret
push
flds
xor
fwait
pop
pop
lcall
in
popf
mov
xchg
push
scas
xor
sub
loop
out
test
sub
mov
mov
pop
clc
andl
mov
insl
mov
pop
pop
dec
je
lock
xlat
or
sbb
into
dec
std
outsb
sbb
push
xlat
dec
cmp
movsl
or
xchg
push
add
push
sahf
icebp
xor
add
shr
rorl
xchg
imul
in
fdivs
in
aad
push
test
pusha
mov
addb
nop
pushf
adc
mov
in
sub
cmpsb
lret
jmp
mov
adc
inc
popf
sbb
sub
sub
pop
jbe
mov
fcoml
testb
sbbb
push
loop
in
mov
pusha
push
jge
mov
dec
sarb
ret
pop
add
lock
addb
sub
jp
repz
mov
inc
sbb
add
mov
dec
cmc
out
popa
mov
in
cmp
xchg
subb
jb
inc
lods
xor
or
lret
fistl
inc
stos
test
sahf
jo
clc
pop
icebp
pop
adc
mov
push
shrl
jbe
into
out
pusha
pop
jmp
ret
add
iret
xorw
faddl
aad
ret
pop
mov
cmpsb
pop
dec
pop
mov
adc
inc
jecxz
mov
push
sbb
pop
cmp
pop
pop
mov
sbb
and
cmpsb
fs
mov
inc
addl
jb
xchg
test
shl
inc
inc
movsl
pop
hlt
lds
bound
and
xor
repz
and
lds
push
cmp
out
and
push
add
enter
inc
jecxz
dec
dec
sbbb
fs
mov
push
push
mov
movsb
jl
ror
test
mov
fwait
mov
xchg
jb
in
xchg
sbb
cmp
aaa
cs
iret
lock
and
xlat
sbb
add
adc
ja
loope
data16
jmp
sub
orb
adc
jp
dec
xor
jl
scas
loopne
test
ljmp
int3
or
push
jg
test
xchg
mov
mov
imul
jmp
mov
notl
sub
xchg
mov
pop
in
pop
aad
lret
mov
push
xchg
inc
push
mov
sub
pop
or
out
push
in
addr16
out
cltd
daa
mov
fs
pop
cmpb
mov
movsl
addl
mov
iret
mov
lds
idivb
jle
cltd
scas
pop
sub
mov
mov
jg
dec
pop
and
and
aas
mov
sbb
sbb
xchg
push
dec
cltd
outsb
lcall
adc
imul
lock
xor
or
sbb
aas
inc
into
out
ret
inc
rol
mov
imul
in
xor
cmpsl
mov
add
xchg
or
xor
sub
pop
fwait
sbb
push
dec
xchg
mov
or
stos
mov
and
jg
cltd
mov
jmp
sbb
popa
lods
sub
pop
ljmp
sahf
nop
psadbw
jae
sub
sub
inc
stos
subb
neg
pop
cmp
movsb
nop
repz
push
push
or
ss
popf
ret
femms
push
xchg
push
xor
dec
sbb
and
mov
jns
loope
lods
or
add
jns
testl
cmp
jecxz
ja
jo
mov
sub
ss
xchg
sbb
daa
ror
dec
popa
test
xor
adc
xor
jae
add
call
mov
sub
xchg
rorl
mov
sbb
inc
testl
mov
lds
pop
xchg
fistpll
dec
fists
aas
push
jnp
push
jnp
or
pop
mov
sbb
lret
ja
sub
sbb
out
ss
jae
or
jnp
orl
mov
cmp
add
dec
cmp
mov
or
in
cmp
mov
lods
rcrb
jne
int3
sbb
push
mov
out
xor
cmpl
sbb
sub
imul
adc
mov
insl
lea
scas
outsl
sub
sbb
sub
std
pop
add
rol
mov
int3
rcll
sub
or
sti
pop
lods
sbb
cmpsb
jnp
push
dec
xchg
dec
and
push
sbb
cmp
out
xor
call
pop
adc
inc
shlb
test
push
arpl
imul
movsl
mov
push
jg
add
sub
popa
mov
sub
out
pop
das
pop
push
cmp
xor
fstl
sub
jno
pop
mull
stos
or
adc
add
daa
icebp
sub
mov
enter
xchg
gs
fldt
push
push
push
push
mov
push
xchg
mov
icebp
sub
loop
lods
sahf
mov
jle
fcmovu
lret
or
addb
mov
test
rcrb
lahf
jmp
arpl
cmc
or
pop
cmp
jae
pop
int3
push
xchg
jl
hlt
pushf
xchg
inc
in
xchg
add
scas
cmpsb
sbb
or
cmpsl
fildl
mov
push
popf
inc
jo
xor
xor
push
xlat
mov
pop
scas
jp
in
inc
sti
jo
mov
lahf
insl
pop
clc
cmp
inc
sbb
ljmp
or
lock
in
sub
xor
add
inc
add
fistpll
test
stc
sub
sbb
popf
lock
test
lahf
scas
adc
add
fildll
imull
je
cld
dec
sbb
cld
mov
xchg
shlb
adc
das
scas
sub
outsl
test
mov
inc
lods
imul
lahf
add
sahf
mov
cmpsb
push
int3
sub
imul
out
test
dec
dec
add
les
stos
sahf
pop
stc
pop
lret
ss
pop
xchg
jne
cmpsl
mov
sub
cld
jno
and
leave
call
repz
pop
sub
rcrl
mov
xor
mov
sbb
jae
and
test
mov
lock
lcall
jae
ror
xchg
adc
adc
into
mov
ret
std
dec
and
in
cmp
insb
cltd
dec
fs
sbb
pop
xchg
jle
mov
add
mov
mov
pop
sar
xchg
xchg
adc
dec
mov
notl
dec
xor
push
cltd
fistpll
push
dec
xchg
jmp
inc
mov
jl
mov
dec
cwtl
mov
mov
out
and
data16
jge
mov
or
das
sub
push
mov
aam
push
loop
notl
lret
out
negb
jl
adc
push
xorb
and
lock
aad
adc
push
and
mov
jbe
fiaddl
ljmp
loopne
fwait
mov
add
sub
jnp
cmp
or
stos
les
mov
inc
jg
in
inc
push
sbb
lcall
test
add
push
loop
es
add
or
daa
inc
je
xlat
popa
mov
movsl
and
push
push
lods
outsl
lahf
xor
je
and
add
aaa
pushf
mov
rolb
les
jle
fnstsw
stc
sti
nop
push
add
mov
aam
repz
adc
cld
dec
sbb
iret
dec
dec
repnz
push
movb
mov
shlb
jne
data16
xor
test
mov
push
pop
fsubrs
xchg
dec
dec
mov
inc
or
inc
stc
adc
outsb
ja
loop
jecxz
mov
lret
xor
cli
jp
mov
jle
mov
cmpsl
push
xchg
mov
jns
nop
movsl
fisubrs
hlt
ds
cld
loop
rcrl
jb
std
mov
lods
mov
pop
bound
jno
test
add
push
jmp
lret
inc
movsl
loop
bound
jne
shll
popa
shl
das
call
lahf
inc
or
call
pop
push
jmp
repz
stos
sub
mov
hlt
fsub
jmp
daa
in
jg
test
jg
movsb
dec
mov
test
daa
xlat
or
dec
fisubrs
iret
jmp
ljmp
inc
sub
mov
dec
movsb
dec
icebp
jecxz
test
and
xor
mov
movlps
or
fwait
jno
sti
cwtl
pop
xchg
sarl
repnz
repz
lea
push
mov
insl
daa
ficoml
incl
fisttps
loope
sub
mov
push
mov
ljmp
popf
mov
adc
cltd
outsb
fnstcw
mov
pop
cld
mov
dec
mov
stc
pop
aaa
mov
leave
push
sti
push
pop
xchg
cmpsl
in
test
inc
dec
imul
stos
mov
jo
call
add
xchg
lret
in
jecxz
add
sbb
cwtl
mov
inc
andb
xchg
jp
repz
inc
sub
test
repz
loope
add
mov
xchg
pop
push
push
imul
js
pshufw
cmp
leave
fbld
je
addl
sub
push
pop
arpl
jne
mov
dec
jnp
scas
in
push
inc
jns
push
jecxz
mov
jge
repz
xchg
mov
movsb
cmp
dec
testl
add
sbb
xlat
xor
or
int
or
adc
flds
mov
push
cmpl
add
add
dec
hlt
add
xchg
mov
jle
inc
mov
push
jno
and
bound
test
insl
xorl
xchg
mov
sti
bound
shl
add
fs
insb
testl
cmp
test
popf
movsl
js
jg
dec
mov
push
adc
pop
gs
xor
inc
adc
jo
cmp
sbb
scas
jecxz
ds
mov
or
jp
clc
push
ds
pop
mov
mov
xchg
lcall
push
popl
add
dec
pop
sub
das
loope
cmp
mov
mov
sub
and
or
push
or
mov
jno
jne
mov
sub
add
mov
adc
mov
test
adc
sti
in
or
fists
bnd
lcall
add
idivb
jmp
xchg
sbbl
inc
xor
add
idivl
insl
pop
inc
lods
lret
js
adc
xchg
jae
lea
loopne
int3
clc
dec
js
cmp
jnp
cmp
sbb
mov
js
mov
mov
inc
ja
ret
outsb
icebp
cmp
popl
jmp
or
xor
out
pop
ljmp
push
sbb
cmp
orb
pushf
in
ja
and
xorl
fs
and
mov
and
push
mov
or
push
and
sub
mov
jge
dec
push
nop
dec
movsb
inc
pushf
out
stos
adc
ret
jp
int
or
mov
pop
nop
pop
adc
fdivrl
cmpsb
loope
aad
jp
cltd
std
push
idiv
and
addr16
mov
pop
mov
mov
mov
mov
mov
orb
les
aas
divl
fisttpl
inc
inc
lcall
push
in
lahf
add
or
xor
adc
cltd
subl
push
hlt
push
mov
fidivrs
lret
repz
jle
mov
dec
dec
lock
mov
mov
xor
adc
sub
xchg
stc
and
stos
mov
xorps
push
adc
scas
jle
subl
ljmp
mov
pcmpgtb
mov
push
mov
xor
test
jb
adc
mov
xor
cmp
popf
sar
int
outsl
jae
call
add
jbe
test
xchg
leave
cmp
bound
mov
add
stos
sahf
cwtl
scas
cli
mov
out
stc
sub
pop
dec
andl
xor
push
dec
jo
or
mov
addr16
push
mov
sarl
cmp
jle
stc
popf
push
sub
mov
pop
imul
leave
leave
mov
pslld
inc
in
inc
insb
hlt
das
mov
mov
and
push
in
ds
in
mov
jg
bswap
adc
adc
rcll
adc
insb
push
pop
ret
mov
mov
sub
push
xor
jmp
loop
xor
loop
das
test
rorl
push
push
ror
adc
js
jae
sti
call
xchg
icebp
fsubl
dec
out
xor
push
xor
adc
fdivrs
sbb
jg
mov
stos
xchg
ds
std
fnstcw
cmpsl
or
cld
jg,pt
jge
in
mov
aas
addr16
ret
or
imulb
or
mov
hlt
push
cltd
shr
pop
jle
push
icebp
and
xchg
cltd
jne
rcll
cmp
pop
scas
imul
mov
push
insl
or
xor
aaa
jb
mov
cs
or
or
jp
jle
xor
cmp
pop
jnp
ljmp
fbld
rcr
inc
inc
dec
mov
popf
pop
lea
int
stos
fdivrs
adc
pop
adc
push
ljmp
jnp
push
out
popf
sti
ret
cmp
dec
mov
leave
pop
call
subl
movhps
je
and
pop
ljmp
push
stos
inc
cmp
ret
sub
pop
push
jo
ret
dec
shrb
xor
in
data16
cmpsb
mov
cmp
xor
add
ret
gs
fsts
or
cmp
lret
mov
pop
mov
dec
add
and
mov
movsl
sub
popa
mov
lret
cwtl
test
jo
ret
jg
ret
sbb
sub
and
xor
punpckhdq
inc
sub
cmpsl
adc
shl
pop
pop
and
sbb
lods
test
sub
and
repz
lret
adc
fs
inc
cmp
out
sbb
jp
mov
mov
cmpsb
fiadds
add
mov
mov
addr16
addb
call
jg
fcomps
push
aas
lds
lods
xor
in
sub
cmp
add
out
rcrl
jnp
cmp
sbb
add
mov
and
into
jecxz
xchg
xchg
clc
inc
or
dec
icebp
xor
call
inc
addl
dec
add
jp
and
jle
fcmove
xor
sbb
icebp
jbe
lahf
lds
mov
aam
sub
jmp
hlt
les
mov
push
hlt
adc
aad
dec
mov
pop
fisubl
arpl
loope
pop
dec
aam
sahf
push
mov
inc
sub
cmc
sbb
fimull
mov
lcall
lahf
inc
cmp
mov
ss
outsl
stc
pop
sbb
int3
adc
repz
rolb
pop
and
movsl
lahf
adc
xor
adc
sbb
testb
inc
cmp
xor
xchg
aaa
and
lret
xlat
or
arpl
fwait
mov
and
ret
or
push
test
push
lock
aas
in
pop
or
mov
cmp
pusha
sbb
mov
dec
mov
mov
test
dec
loopne
xor
aaa
out
adc
jne
xor
inc
sub
push
jl
movsb
cmpsl
cmp
jmp
push
ss
jmp
inc
shl
mov
adc
rcrb
mov
dec
sub
clc
mov
test
cmpsl
xor
mov
movsl
loope
aas
inc
lret
faddl
aad
xchg
shll
mov
daa
dec
or
or
inc
adc
jne
aad
dec
mov
xlat
aas
and
imul
cmp
and
movsl
xor
cmp
push
aas
ds
aam
std
jle
ficoms
rcrb
jnp
lea
rcr
call
jge
sarl
xchg
xchg
pop
or
loop
leave
xor
xchg
inc
mov
test
jne
xor
stc
sti
aam
iret
mov
dec
jge
dec
mov
jle
orl
out
and
das
and
push
daa
and
lock
stos
inc
mov
aas
arpl
dec
inc
mov
jle
arpl
rorl
stc
adc
ret
std
sub
or
inc
push
test
int
or
cmp
call
and
pop
xchg
cltd
inc
pushf
aam
cmp
jne
and
xor
push
mov
cmp
xchg
ds
push
cs
adc
outsb
gs
jno
fs
add
and
test
jno
cmp
loope
arpl
mov
jmp
testl
mov
lea
fs
sub
add
loopne,pn
pop
sbb
cmpsb
xchg
dec
or
push
inc
dec
adc
lock
mov
push
scas
mov
loop
and
sbb
ljmp
lds
cwtl
inc
push
or
cmp
inc
test
ds
mov
xchg
in
andb
push
in
dec
inc
ds
cs
je
cltd
lret
mov
inc
gs
jmp
fwait
test
jp
dec
shlb
test
sub
arpl
aaa
stos
adc
pusha
pop
xchg
xor
dec
dec
pushf
adc
cwtl
in
pop
sub
in
pushf
testl
iret
xchg
jecxz
in
xlat
in
xor
out
fnstsw
cmp
add
inc
sbb
dec
mov
mov
sub
js
fnsave
inc
lds
push
test
cwtl
imul
es
pop
mov
xor
test
std
push
push
popl
sbbl
mov
mov
test
sub
pop
adc
pop
mov
jge
xor
jb
call
mov
mov
ficompl
std
es
mov
mov
push
shlb
jge
push
or
in
mov
out
movsb
dec
lret
add
and
or
push
jo
jmp
insl
pushl
push
mov
js
inc
and
out
imul
cmp
and
lea
add
in
lret
adc
aad
xlat
inc
add
push
mov
stos
cli
repnz
push
fsubrs
iret
or
dec
jae
je
pop
mov
add
sahf
pop
sbb
jb
push
ja
jbe
dec
shl
in
and
xor
sbb
or
dec
dec
int3
sti
jb
lret
jl
js
dec
xchg
addb
mov
stos
es
shlb
popa
sbb
jp
nop
jmp
adc
mov
cltd
pop
mulb
inc
pop
cmp
or
dec
enter
xor
sarb
xor
sub
and
int
fwait
and
mov
repz
mov
mov
sub
lahf
repz
daa
hlt
and
push
movsb
cltd
iret
jnp
int3
das
xchg
pop
ja
sbb
cmpsb
pushf
fst
adc
add
in
insl
xchg
adc
dec
iret
inc
fildl
mov
adc
or
dec
fwait
push
loope
add
cld
fcomps
jle
adc
out
insl
insl
mov
mov
sbb
cmp
fs
or
xchg
mov
into
cmpsl
cmp
insl
test
in
pop
addr16
aas
push
or
inc
mov
and
movsb
xor
and
sbb
stos
pop
mov
sbb
sarl
mov
es
cmp
push
mov
test
add
adc
pop
xor
xchg
pop
jge
icebp
add
jecxz
je
adc
mov
xchg
das
test
jp
sub
ljmp
mov
lods
popa
aam
sahf
add
add
sbb
les
movb
xchg
adc
fldcw
jp
or
dec
cltd
into
and
sub
and
test
dec
dec
mov
pop
push
mul
sbbl
adc
inc
in
jno
les
lcall
stos
xchg
xchg
pop
ss
jge
push
shlw
in
adc
dec
push
xlat
lods
shrl
sub
outsl
outsl
adc
mov
mov
stos
rorb
or
push
in
repnz
inc
jno
mov
pop
cmpsb
js
jno
sub
out
cmp
push
pop
sub
mov
lods
mov
or
sub
cli
stos
and
repz
aad
daa
mov
dec
jns
test
sub
hlt
es
out
ret
jle
inc
and
out
in
outsl
out
in
jg
mov
int
int3
cwtl
test
xor
mov
sub
xor
mov
out
lret
pop
mov
pop
sub
cltd
and
outsb
add
mov
xlat
add
push
aam
in
and
pop
push
add
mov
inc
push
adc
mov
cmp
pop
sahf
xchg
sbbl
xor
inc
and
into
in
shr
ss
cmp
out
fldl2t
icebp
mov
cmp
xchg
push
fdivs
jns
lods
test
add
ret
psubusb
mov
push
sbb
push
ret
mov
jecxz
cmp
xchg
shl
cmovnp
imul
pop
mov
sbb
scas
mov
inc
jp
ljmp
push
fimull
xchg
sub
pop
mov
aad
movsb
and
stos
stc
xchg
jg
dec
push
and
lds
sbb
sub
nop
inc
mov
and
cwtl
popa
or
test
push
mov
je
sub
and
call
push
out
movsl
pop
jge
xlat
repz
xchg
negl
les
insl
sbb
mov
pop
in
and
hlt
adc
in
jbe
inc
fadds
push
aad
scas
lcall
dec
push
sbb
pop
test
dec
or
enter
mov
jns
sub
mov
adc
mov
imul
out
sbb
mov
movsb
push
fbld
outsb
push
jno
sub
mov
xlat
mov
and
lods
sbb
stc
sub
jl
mov
jl
dec
repz
push
and
dec
loope
pop
or
or
mov
or
std
in
cmp
inc
inc
idivb
sarl
das
mov
sarl
xchg
lahf
mov
nop
shr
xchg
ret
data16
syscall
adc
mov
stc
movsb
leave
das
vpunpcklqdq
cmc
jmp
push
inc
leave
xchg
dec
xor
xchg
int3
mov
dec
outsl
cmc
push
xchg
mov
lods
push
add
movsb
imul
dec
pushw
jb
pop
out
loop
dec
aam
bnd
and
mov
push
out
pop
int3
jmp
outsl
mov
xchg
fxch
xor
pop
sbb
mov
jbe
rol
aad
mov
ror
pop
mov
xchg
scas
xor
fadd
push
lret
in
add
ljmpw
xor
fcoms
mov
xor
sub
mov
aad
mov
push
cmc
lds
jb
scas
testl
mov
push
mov
cld
push
test
cmpsb
cmpsl
pop
sbb
rorl
out
xlat
inc
rep
mov
fcoml
mov
lea
pop
mov
xor
mulb
insl
add
scas
mov
mov
xor
xchg
cmp
push
pop
or
cmp
testb
push
xchg
sbb
stc
adcl
dec
enter
int
ja
rol
sub
inc
cmp
jl
inc
mov
jbe
imul
iret
bound
inc
decl
cltd
inc
pop
inc
push
add
stos
xchg
ljmp
addr16
and
imul
test
sub
mov
adc
and
scas
lock
xchg
cltd
popa
pop
fcoms
loop
push
int
mov
fstl
add
mov
pop
leave
push
sti
daa
in
mov
test
pop
mov
cld
mov
xor
inc
pop
push
mov
sahf
ret
inc
pushf
xor
xchg
xor
pop
jmp
call
sub
stos
push
mov
mov
mov
pop
mov
push
int3
inc
addr16
cmpl
sahf
pop
enter
sub
gs
lret
mov
jg
bound
sarl
call
inc
in
out
cmp
sub
ja
bound
inc
test
ljmp
and
fsubr
inc
ret
mov
shr
pop
inc
shlb
sub
movsb
daa
jne
aas
dec
xchg
fsubrp
inc
cmp
es
xor
clc
dec
jp
sub
ljmp
jnp
fs
enter
sahf
mov
es
xchg
sub
jmp
dec
dec
push
fdivs
mov
mov
dec
lret
scas
mov
and
mov
insl
adc
cmc
inc
jmp
insb
ret
out
adc
add
cmp
dec
movsl
adc
repnz
cmp
je
in
mov
or
ja
fidivrl
add
add
repz
or
pushf
cmp
jb
lret
sub
sub
testl
xor
push
in
inc
bound
dec
mov
out
xor
cmp
clc
mov
and
outsl
aam
mov
mov
sub
mov
icebp
in
pop
sub
cwtl
sbb
loope
jae
pop
leave
or
pop
push
mov
fidivs
or
pop
mov
maskmovq
divl
lods
mov
adcl
inc
das
movsb
pop
pop
xor
lods
mov
fimull
or
mov
cld
lahf
mov
xchg
or
jmp
aas
dec
push
adcl
iret
sti
cld
cld
hlt
aas
test
push
adc
nop
ljmp
xchg
pop
jne
and
fstps
ds
sahf
ret
gs
arpl
xor
test
imul
les
movsb
js
iret
mov
pop
mov
cmp
test
adc
insl
clc
mov
fistpll
fidivrs
or
cld
divb
jo
leave
outsl
pushf
lods
sbb
xchg
sub
aaa
mov
or
and
sbb
test
dec
sbb
push
sbb
cmp
cmc
pop
gs
cmp
pop
jmp
jg
orl
rol
fwait
stos
or
mov
inc
pop
repnz
mov
fistpll
fsubp
cmp
mov
ret
pop
mov
xor
out
mov
test
lret
lea
adc
loope
loope
cwtl
add
add
push
cmp
xchg
adc
sbb
out
add
push
nop
sarl
dec
mov
cmc
adc
decl
outsb
rorl
stc
sub
das
or
sub
movsl
dec
jmp
dec
inc
jmp
cwtl
adc
and
insl
inc
ds
dec
mov
pop
iret
push
dec
dec
in
in
das
repnz
out
mov
mov
jo
add
mov
out
mov
leave
aam
data16
jae
and
push
sbb
xchg
and
lock
sub
dec
dec
jl
pop
pop
cld
pop
ror
mov
mov
push
dec
loope
cmp
add
fisubl
add
cmc
fsubs
push
and
pop
xor
fstps
push
jb
cli
cmp
jno
and
stos
pop
sub
hlt
mov
pop
push
jo
mov
cmpsb
out
aaa
cmp
out
jno
xor
clc
cmpsl
dec
in
xor
push
jge
cmp
rcrl
into
icebp
and
add
cmp
les
out
and
dec
lret
jl
mov
das
cmp
sarl
mov
loop
lret
ficoms
add
pop
lds
scas
loopne
push
rorb
arpl
or
hlt
in
xchg
cltd
int
or
into
iret
test
in
ds
xor
das
add
mov
in
ret
sbb
adc
and
mov
subb
xchg
cmp
adc
mov
in
jecxz
shll
lahf
imul
test
inc
pusha
cmpsl
jnp
ret
pop
mov
sbb
jns
inc
imul
inc
xor
push
mov
inc
pop
add
data16
gs
insb
xor
ss
adc
test
jmp
mov
sub
pusha
jns
nop
stos
add
adc
mov
imul
jnp
cs
dec
fnsave
xchg
xor
sbb
sub
bound
out
lret
xchg
sti
ljmp
ja
aaa
insb
inc
xchg
dec
imul
pop
clc
sub
sub
data16
jbe
xchg
imull
bound
into
mov
repnz
aad
add
roll
ret
mov
imul
xor
mov
add
addb
lea
push
jno
dec
mov
pop
mov
ds
pop
dec
pop
jo
sti
sbb
cltd
aas
lea
fdivs
xchg
cmpsl
pushf
push
test
ret
shll
mov
mov
pop
testl
mulb
xchg
cmp
ret
je
jge
adc
xlat
out
xor
lahf
outsb
scas
jge
in
cmpsl
mov
lcall
mov
js
sahf
xchg
lods
pop
test
push
cwtl
lds
iret
out
pop
dec
imul
mov
jp
pop
or
xor
jno
jbe
and
mov
cmp
gs
icebp
sub
mov
testl
cmpb
or
outsl
insb
ret
xchg
pushf
inc
and
idiv
jns
dec
daa
lods
mov
push
and
mov
in
dec
loopne
test
outsl
xchg
or
mov
cltd
or
scas
pop
xchg
scas
dec
mov
subb
cmp
jb
out
pop
lcall
sub
dec
aad
xchg
bound
lea
mov
sbb
xor
das
pop
mov
pushf
rol
orb
adc
iret
call
enter
jnp
insl
out
xor
ja
faddl
ss
cmp
xchg
cmp
arpl
fs
jecxz
into
shl
xchg
mov
dec
xchg
sti
pop
rclb
and
into
mov
pop
dec
mov
inc
pop
stos
dec
das
lods
int
jmp
fdivl
dec
pushf
int
iret
cs
dec
jg
jg
out
push
stos
lods
and
test
jl
or
cmpl
scas
adcl
xchg
fmull
popa
mov
and
cmp
lret
cmp
negb
or
pop
push
push
push
sahf
push
pop
mov
xchg
and
xor
sub
sbb
or
jne
xchg
pop
imul
ficoml
cmp
and
popf
mov
les
clc
mov
arpl
out
xor
inc
jno
dec
fwait
in
pop
insb
ljmp
jae
add
mov
inc
in
daa
cmpsl
add
pop
pop
pushf
cmp
add
lret
jae
loope
cmpl
and
ret
enter
ficomps
sub
add
in
popa
rcl
or
jnp
inc
test
pop
inc
mov
jb
pop
ljmp
test
call
ss
fs
push
in
sub
jno
lock
out
iret
push
js
lcall
mov
jne
sbb
cwtl
inc
jecxz
subb
push
push
jne
or
jecxz
jmp
ss
sbb
xor
test
loope
ficoms
pop
xor
addr16
pop
mov
sbb
les
repnz
cmpsb
jle
adc
sub
ret
sbb
push
push
testb
addr16
jg
fs
xchg
xlat
jb
nop
lcall
or
inc
jle
sbb
clc
sbb
subl
xor
pop
cmp
jne
test
push
ljmp
cmc
imull
mov
mov
mov
pushf
xchg
inc
out
dec
pop
inc
popl
dec
jo
inc
mov
fs
xchg
xor
dec
push
cld
or
sbb
fnstenv
jns
pop
cmp
inc
orl
dec
jno
int3
adc
mov
clc
aad
lods
popf
lret
mov
inc
dec
inc
daa
aad
outsl
test
icebp
fists
add
dec
fcom
mov
inc
dec
test
fs
jle
fidivrl
sbb
not
ds
mov
lds
jecxz
sbb
ss
icebp
adc
jns
cwtl
sub
xchg
hlt
out
mov
test
adcl
dec
mov
ret
sub
push
pop
stos
cmp
pop
sub
sub
push
repz
or
push
enter
jne
test
xor
cmp
push
sbbl
das
dec
push
addr16
fwait
pop
dec
or
mov
mov
mov
rol
mov
popf
inc
out
jns
mov
dec
pushf
xlat
inc
xor
loop
sbb
subl
sbb
inc
mov
pop
imul
sbb
stos
int3
shrb
cmp
fcomi
rcl
jecxz
insl
adc
fnstsw
lea
dec
dec
cmp
sbb
outsb
mov
imul
cmp
push
test
pop
addr16
mov
mov
je
mov
bound
and
dec
push
das
inc
out
cmc
push
or
lcall
sub
xor
lock
jo
add
mov
jg
dec
sti
lods
outsb
sub
jb
loopne
scas
add
add
dec
enter
mov
cltd
cmp
cmovb
imul
jns
mov
insl
dec
imul
mov
xor
inc
push
pop
or
daa
leave
xchg
mov
gs
and
lahf
sub
cli
inc
orl
lods
mov
and
push
sub
xlat
mov
stos
xchg
std
pop
test
push
pop
jb
pop
jg
stc
aaa
xchg
adc
sub
push
imul
int
xlat
out
hlt
enter
in
and
xchg
aaa
adcl
jmp
xor
and
popa
out
adc
mov
and
loopne
inc
call
ljmp
and
xchg
add
aad
cmp
sub
rcl
lock
mov
repnz
ficoml
std
pop
pop
fnstcw
fstl
addr16
mov
jb
mov
mov
bnd
sbb
into
stos
data16
sbb
scas
in
outsb
sub
stos
xchg
or
aam
mov
out
pop
pop
aaa
cltd
sbbl
outsb
and
lret
leave
outsl
ret
cmpsb
sbb
inc
and
or
cld
out
mov
test
xchg
shrb
jmp
or
cmpsb
jg
add
mov
cmpsl
cmp
jecxz
adc
clc
and
jns
push
std
sti
scas
sub
pop
push
icebp
sti
mov
mov
test
and
cmp
adc
scas
push
int3
ret
mov
aaa
xchg
sti
imul
popa
or
cmp
jbe
mov
pusha
ss
rol
jmp
test
adc
jp
and
cmp
add
pop
inc
and
aaa
jae
mov
js
xchg
jg
fdivs
push
sub
mov
test
push
sahf
sahf
clc
adcl
out
or
pop
cmp
mov
in
mov
inc
sahf
imul
inc
or
push
insb
cli
sbb
jmp
inc
std
cmpsb
jb
mov
push
pop
fs
sub
and
dec
jmp
ljmp
jmp
icebp
inc
adc
or
sub
sbb
loope
push
lret
mov
in
ds
test
rcll
and
repnz
aad
dec
fsts
int
aad
mov
or
aad
repnz
sub
mov
mov
add
jmp
rcrb
sub
aam
aad
dec
add
shrl
mov
sbb
jne
ret
dec
decl
fdiv
sub
jnp
cmp
push
cld
jl
popa
clc
cmp
pop
insl
jo
aad
sbb
notl
sbb
rcl
adc
bound
es
dec
pop
ds
addr16
push
mov
mov
cmc
fisubs
aaa
mov
pop
adc
jno
arpl
stc
push
add
lods
cmp
dec
in
xlat
mov
push
lret
std
fldcw
mov
inc
movntq
out
ss
add
adc
pop
xor
jbe
or
and
jo
out
mov
mov
inc
jnp
ss
mov
sub
sbb
pop
mov
mov
in
es
lcall
push
int
inc
adc
loop
sbb
jbe
aad
xchg
aaa
pop
sbb
push
mov
inc
pop
and
cmp
testl
adc
push
push
imul
pop
cmc
push
movsb
cmc
sub
out
lock
leave
push
mul
lock
xor
pop
shl
pop
adc
dec
jmp
lcall
incb
addr16
jbe
lods
fdiv
adc
addr16
sysenter
cltd
mov
sahf
divl
mov
in
xor
mov
call
aas
filds
sub
sti
push
and
adc
inc
xor
mov
aaa
push
adc
dec
gs
inc
xchg
pop
into
xor
fldenv
add
mov
addr16
int
mov
jo
dec
daa
xlat
out
xor
or
or
into
leave
push
ds
lods
in
and
mov
inc
cmp
in
pop
popf
jno
sarb
cmp
out
into
insl
scas
and
outsb
xor
outsl
inc
inc
sub
inc
aas
add
mov
cmp
hlt
sbb
sbbb
js
mov
out
aaa
sub
add
cs
push
inc
add
sbb
lods
ljmp
push
mov
ljmp
xchg
cmc
push
mov
add
sub
pop
xor
mov
jl
add
push
push
mov
and
mov
mov
jo
call
xor
push
jg
pop
aam
mov
les
lahf
into
popa
xchg
mov
dec
out
inc
mov
out
mov
and
push
sub
push
push
clc
std
lock
sub
loop
or
cwtl
cmpb
pop
dec
or
xor
lret
sub
xlat
dec
mov
jge
popa
and
je
pop
or
xor
pusha
push
aam
cmpsl
mov
mov
decl
int
mov
popf
dec
pop
dec
test
call
cld
mov
test
adc
mov
jp
fimull
xor
mov
inc
push
outsl
int
adc
popa
aam
xor
sti
dec
jnp
int3
jle
pop
push
push
pop
je
into
rcrb
icebp
iret
sarb
sub
inc
rorl
scas
and
push
cmp
xchg
vunpcklps
ds
or
dec
popf
into
and
shlb
cltd
push
sbb
ret
inc
mov
lret
sbb
pop
mov
shrb
jne
jnp
pop
cmp
dec
test
mov
test
hlt
cmp
popf
push
aaa
and
xor
adc
fcompl
mov
movsl
sub
cmpl
mov
mov
add
sbb
jb
and
hlt
mov
ret
leave
inc
outsb
lahf
sbb
sub
sbb
mov
leave
xchg
jmp
in
dec
dec
push
mov
inc
or
cli
jnp
sar
pop
ja
std
roll
jnp
jl
arpl
out
into
push
popa
mov
push
sub
cmp
sbb
aam
fldl
adc
jae
hlt
pop
cltd
xchg
lea
mov
xchg
fsubl
adc
adc
shrb
movsb
dec
mov
sbb
mov
in
into
add
sbb
cmc
pushf
cmc
repnz
std
or
xor
jns
aaa
rep
xchg
push
pop
fiaddl
push
lahf
mov
xchg
jno
imul
push
les
and
sbb
mov
xchg
inc
jbe
sbbl
xor
pop
les
mov
dec
imul
ds
xor
cmp
fildll
aaa
or
insb
add
hlt
fists
or
stos
jp
jmp
mov
push
mov
xor
mov
fimull
fwait
jae
mov
xor
fwait
stc
add
push
leave
arpl
add
dec
or
stos
xor
dec
hlt
data16
rorl
sbb
mov
outsb
adc
pop
nop
adcb
mov
sub
jmp
xchg
jle
shl
or
adc
std
push
cmp
pop
dec
mov
sti
sbb
mov
fs
or
stos
dec
addb
pusha
ds
out
mov
inc
or
jno
out
pop
popf
int3
mov
mov
hlt
jp
icebp
mov
mov
mov
push
mov
push
jne
mov
and
xchg
insb
and
sbb
cmp
mov
addb
pusha
fimuls
mov
xchg
lods
sub
mov
int3
pushf
icebp
cmp
jle
jnp
push
xlat
pushf
sbb
push
iret
and
and
push
xorl
ret
into
inc
sbb
jmp
cld
rorb
or
jb
lods
adc
xchg
dec
and
add
push
inc
adc
dec
test
ret
cmp
pop
sti
add
or
setbe
popa
fwait
xchg
sbb
inc
loopne
cmp
mov
stos
lahf
insb
mov
jb
sbb
cmc
sarb
push
cli
gs
ss
aam
lods
int
int3
data16
cmp
loope
mov
lcall
mov
jle
fisubrl
fnstsw
mov
aad
out
popa
or
je
mov
push
adc
jl
push
pop
pop
inc
inc
rcll
cli
xchg
sbb
shlb
mov
adc
ss
mov
fsts
sbb
ss
test
pop
insb
nop
jmp
imul
adc
mov
or
in
cmp
pop
lods
ret
inc
pop
mov
int3
nop
shlb
pop
ja
add
xchg
stos
jecxz
ret
out
mov
and
sbb
fmul
aaa
or
sub
shlb
cld
jne
jecxz
fmull
ret
arpl
test
into
xor
mov
add
inc
aam
adc
out
lahf
mov
add
shrb
lock
test
dec
adc
cmp
xchg
and
dec
aad
xor
mov
adc
lods
subb
mov
shll
xchg
inc
rol
sbb
add
push
scas
add
outsl
or
or
loope
mov
xchg
xlat
loope
mov
xchg
movl
in
mov
add
or
out
adc
mov
fs
push
pop
sub
stos
mov
push
pop
ret
loopne
mov
dec
inc
mov
pop
jno
mov
dec
inc
xchg
in
outsl
jge
lahf
cmp
sarl
add
inc
out
push
mov
mov
rcrl
xchg
mov
inc
ret
pop
mov
repnz
shl
dec
mov
xchg
add
add
dec
xchg
mov
outsl
fimull
rcl
push
adc
sti
add
lret
fstpl
cwtl
je
scas
mov
add
pop
lcall
add
addr16
jb
dec
mov
or
popf
xchg
incl
push
jge
sub
push
fsubr
jb
addr16
sub
mov
push
out
inc
hlt
sub
push
cwtl
sbb
or
movsl
fbld
jl
or
jge
js
jp
imul
rcrb
push
jmp
xchg
and
cltd
data16
out
std
xor
add
push
jo
mov
shlb
xchg
lock
add
xlat
rcl
or
inc
sbb
or
add
sbb
mov
hlt
ret
insb
mov
cs
sub
icebp
xorl
push
in
loopne
sbb
outsl
pusha
jbe
insb
mov
nop
add
inc
test
aaa
push
lret
shll
pop
mov
adc
pushf
popa
ja
and
aam
repnz
out
sbb
bswap
cmp
dec
add
push
into
cmpsb
iret
daa
fimuls
push
insb
shll
adc
dec
push
pushf
sahf
or
inc
dec
mov
mov
push
jecxz
pop
outsb
test
iret
addl
insb
icebp
in
sbb
and
cmpsb
mov
push
sbb
je
xor
sub
pop
loop
cmc
movsb
mov
ljmp
js
mov
inc
mov
dec
fildll
sbbb
cmp
jbe
cmp
sub
repz
jp
adc
es
fbstp
lods
out
mov
pop
jae
cmp
in
add
add
stos
inc
xor
imul
or
arpl
and
mov
jl
or
mov
sbb
mov
inc
andb
cltd
nop
sti
outsb
xchg
inc
inc
and
inc
inc
lods
loop
and
dec
jne
lds
jno
das
and
sahf
mov
sbb
ljmp
fcoms
cmp
xchg
xchg
dec
mov
cmpsb
mov
pop
gs
data16
dec
jle
daa
dec
push
sbb
push
inc
fwait
push
sbb
test
stos
into
xor
mov
mov
pop
stos
push
repz
jae
or
cmpsb
lea
imul
aas
in
mov
push
dec
sbb
jmp
ds
inc
mov
into
out
sub
push
fimuls
add
jbe
mov
jmp
dec
in
inc
adc
sub
mov
pop
inc
mov
xlat
sub
xchg
mov
imul
mov
pop
xlat
and
lock
xor
cmp
push
ffree
enter
data16
imul
roll
sti
rorb
pop
jbe
std
roll
cmp
dec
std
inc
stc
lods
loope
sub
repz
loop
rolb
jae
push
cmp
rolb
loopne
cmp
js
jbe
dec
pushf
pop
into
jmp
sbb
jmp
das
cwtl
mov
xchg
or
rcrl
cmpsl
bound
ret
and
ja
xchg
test
cltd
flds
lods
mov
fdivp
les
xchg
nop
les
mov
jb
and
adc
fisubrs
xor
movsb
cli
jp
lea
jo
adc
pushf
mov
cmpsl
test
clc
xor
lret
sub
pop
push
and
xchg
jno
xchg
sub
mov
lock
std
insb
movsb
les
out
jg
push
inc
leave
push
mov
push
rcll
loope
call
push
xor
movsl
dec
pushf
cmpsl
fnstcw
pop
mov
xor
sub
sti
sbb
and
rcrb
or
scas
ja
mov
adc
cmp
fstpt
leave
out
add
jo
inc
daa
inc
push
push
cs
push
add
cmp
mov
inc
pop
insl
jecxz
inc
mov
mov
das
adcb
rorl
xchg
push
sbb
cltd
repnz
and
out
xchg
and
xchg
insl
clc
pop
pusha
pushf
add
add
xor
call
mov
pop
push
nop
lahf
mov
movsl
lret
js
jp
daa
mov
rcrl
imul
mov
dec
push
adc
stc
inc
shrl
cmpsl
push
pop
fdivl
mov
jne
mov
aaa
mov
aad
mov
jecxz
pop
dec
int3
mov
ja
dec
int
xor
lahf
xor
inc
xchg
xor
js
xchg
cwtl
sahf
or
pushf
test
jp
loopne
icebp
stos
idivl
dec
int3
rdmsr
and
call
jge
in
repz
push
cwtl
out
pop
mov
or
mov
adc
mov
adc
inc
out
jno
add
repz
lret
lods
arpl
addr16
lret
mov
cmp
nop
mov
sub
inc
ljmp
fistpll
in
rclb
inc
scas
loope
popa
das
adc
xlat
test
clc
jno
mov
fimull
jns
jmp
fisubl
arpl
out
and
pop
dec
ud0
jns
mov
jbe
popa
pop
adc
adc
call
jns
popf
dec
mov
sub
clc
mov
loope
mov
jae
lret
out
insl
push
enter
push
mov
or
enter
das
cmc
mov
cmp
popf
fstpt
add
dec
fwait
adc
jecxz
mov
mov
cmp
pusha
stc
and
or
pop
mov
push
pop
sbb
or
push
dec
or
pusha
mov
jnp
cwtl
mov
push
xor
xor
mov
andl
mov
out
pop
test
inc
pop
mov
pop
sub
int3
inc
js
out
pushf
mov
lods
push
or
scas
push
aaa
mov
jmp
jno
test
xchg
rclb
sahf
sbb
inc
add
xchg
push
mov
push
and
into
les
int
daa
lahf
mov
lahf
in
pop
mov
xor
pop
bound
mov
sub
nop
sub
adc
addr16
sub
int
cmp
ret
cmpsl
dec
push
icebp
jo
mov
iret
mov
fnsave
mov
loopne
pop
dec
mov
jmp
cmc
mov
out
stc
test
xor
xchg
mov
sti
lret
jg
adc
aad
xchg
pop
cli
jne
dec
cltd
call
mov
cmc
out
add
jbe
jmp
loopne
lret
cmp
dec
lea
and
fucom
add
mov
push
stos
cltd
jno
inc
rorl
adc
cwtl
jle
insl
movsb
fs
xchg
arpl
add
push
cli
xchg
mov
pushf
cld
or
les
xchg
pop
in
pop
adc
pop
divl
in
js
outsl
out
mov
jns
xchg
pop
mov
cmpsb
dec
test
sub
js
cmpsl
and
inc
pop
cmp
into
xchg
gs
notl
xor
inc
xor
add
cmpsb
add
xchg
mov
aas
inc
into
jb
in
shrl
outsl
out
test
jae
jb
mov
adc
mov
sub
mov
addr16
xchg
pusha
icebp
loopne
cmc
outsl
subl
test
aad
out
popf
sti
jb
push
push
cld
aad
jle
cmpsb
and
test
or
xor
call
sar
mov
movsl
fcom
aaa
mov
mov
pop
cmp
xor
out
pop
ljmp
data16
dec
mov
pmaxsw
push
es
scas
mov
mov
fcoms
mov
mov
jp
pop
ret
push
sti
mov
xchg
loopne
mov
shrl
cmp
scas
fst
jecxz
dec
cld
dec
pop
lcall
cmc
mov
cmp
inc
push
mov
mov
rclb
fstpt
and
pop
das
xor
or
add
jne
in
scas
fs
mov
mov
imul
int3
xor
mov
test
pop
pushf
stos
loopne
movsb
pushf
sub
nop
dec
pop
int
dec
mov
xor
je
std
data16
push
sub
in
or
scas
and
jle
mov
repnz
xchg
xor
cmp
fidivrl
stos
xchg
popa
mov
es
pop
dec
in
xchg
mov
dec
lds
or
lcall
daa
or
mov
cli
fwait
mov
mov
cli
push
movsb
and
adc
inc
xor
inc
pusha
rcr
adc
pop
jge
je
jns
fstl
enter
mov
jb
movsb
into
sbb
xor
in
pop
inc
pop
push
mov
xchg
mov
sub
enter
cmp
jg
cmpsb
mov
js
fldl
movsb
aad
or
lret
mov
jl
aaa
ja
xchg
adc
mov
pushf
cli
mov
into
push
subb
push
mov
pop
outsl
push
pusha
sarb
filds
test
ret
insl
lds
sub
out
lods
js
mov
imul
int
xor
test
js
cwtl
in
mov
and
cs
mov
dec
in
testb
jo
jl
ret
and
xchg
push
mov
cmc
pop
cmpsb
push
mov
cmp
jmp
lret
mov
cmp
mul
mov
js
adc
into
jne
sub
inc
sbb
mov
mov
lcall
call
xchg
cmp
fnstenv
call
sahf
ljmp
xchg
pop
jge
fs
inc
rorb
mov
js
xchg
jo
jnp
mov
scas
mov
fcmovnbe
shll
out
jae,pt
or
cmp
out
or
mov
lcall
dec
mov
repz
pop
test
in
sbb
repnz
xor
fcom
add
rorl
mov
aaa
sbb
xor
into
js
add
jmp
clc
outsl
push
jns
pop
cmp
jb
adc
repnz
cli
sbb
xlat
inc
lahf
popa
and
dec
ja
mov
out
push
jecxz
sbb
leave
jbe
inc
lods
int
leave
ficoml
cmp
call
mov
push
rorb
or
mov
addr16
rcl
mov
push
ds
jmp
mov
sti
hlt
cmpsl
pop
loope
pushf
cmc
mov
xor
outsl
xlat
clc
xchg
bound
push
cltd
jle
sub
mov
adc
in
call
lcall
mov
fstl
mov
dec
and
rcrb
das
cmpsb
push
out
mov
jbe
addr16
adc
xchg
std
in
test
loop
leave
repnz
or
xchg
cmpsb
push
add
pop
test
jo
or
fsubs
out
test
adc
jno
xchg
add
dec
sub
jb
imul
push
into
xchg
xchg
imul
push
jo
pop
fistpl
int3
inc
fcmovu
push
ficompl
jne
aaa
xor
sar
push
inc
or
mov
roll
sub
data16
adc
call
dec
cmpl
push
add
sub
mov
movhps
cmp
sbb
insb
mov
dec
negb
fs
adc
shll
imul
cmp
and
pop
imul
xor
cmp
xchg
jle
jl
test
fldt
lret
dec
fwait
mov
push
inc
leave
ljmp
jae
dec
adc
gs
aam
sarl
shlb
mov
fnstcw
dec
ret
rcrb
in
nop
insl
mov
xchg
xor
out
sub
push
les
into
pushf
push
inc
and
jecxz
int3
jae
sbb
jae
xchg
imul
and
test
xor
sub
jae
cmp
lret
add
pop
mov
pop
or
mov
jbe
sub
fsubl
ljmp
hlt
cmp
fstl
js
push
cmp
outsl
mov
mov
ds
inc
fldt
and
cwtl
fistl
dec
dec
pop
aas
test
lahf
rcll
int3
xor
pop
jne
jle
pop
adc
lods
sbb
add
mov
out
fadds
mov
jge
into
loop
popf
inc
pop
in
xchg
jbe
or
in
outsl
inc
pop
and
insl
mov
cld
sub
adc
adc
rcr
jp
inc
lock
xchg
lods
push
outsl
aam
or
pop
jns
in
mov
mov
adc
inc
fstl
ja
int
leave
mov
xor
xlat
mov
movsl
out
fadd
pop
sub
cmp
or
mov
push
adc
pop
jb
dec
inc
bound
out
lret
fldl
add
jg
and
sahf
fsubrp
nop
enter
out
xor
les
jp
cmpsb
dec
push
mov
cs
or
push
push
xchg
ret
cmpl
adc
fs
enter
xchg
enter
xor
dec
scas
jne
shrl
add
pop
bound
sti
push
sbb
mov
popa
mov
popf
data16
int
fwait
loop
dec
push
ja
sbb
fs
iret
adc
dec
mov
data16
pop
sbb
das
push
lock
push
cmp
insb
cli
lret
cmpsl
cmp
scas
loop
xchg
cmpb
test
fnstenv
lcall
xor
mov
mul
xor
pop
cltd
xchg
rol
xor
dec
xor
mov
dec
xor
sets
sar
nop
jae
leave
push
cld
mov
mov
and
sti
in
adc
mov
mov
inc
push
sbbb
lret
stos
rol
cwtl
imul
inc
aas
lret
mov
std
paddd
cmp
lcall
mov
xchg
dec
mov
xchg
sti
jle
ret
jae
ret
adcb
sub
nop
jne
mov
mov
mov
lcall
cmp
bound
jnp
loop
test
cld
es
test
lods
xor
pop
jle
xchg
sbb
xchg
or
clc
dec
je
pop
dec
mov
xor
cld
ds
cmp
jae
shll
mov
jl
movsl
aam
mov
inc
jae
out
ss
jne
lret
out
fnstenv
movsl
ret
fistpll
sub
rclb
and
pop
add
bound
fsubrl
adc
sbb
cmpl
inc
es
inc
sub
or
mov
pusha
cmpsl
push
xor
and
sbb
xchg
xchg
aad
popa
mov
or
je
ror
lret
leave
jp
xor
mov
iret
out
sbb
mov
mov
inc
popf
jp
mov
daa
push
jbe
sti
scas
and
add
adc
in
fisttps
add
sbb
rol
lcall
add
jne
pop
xor
sbb
mov
inc
mov
int3
adc
shll
mov
dec
push
xchg
aam
test
dec
jl
and
rol
pop
stos
mov
shrb
xlat
lret
mov
leave
adc
daa
pop
push
daa
cltd
ret
daa
dec
scas
movsb
mov
stc
nop
cmc
xchg
xchg
add
arpl
jnp
lods
pop
neg
jg
sbb
movsl
dec
add
inc
dec
mov
pop
sti
cmp
testb
fsubrp
sbb
adc
mov
xchg
add
aaa
sub
jne
out
lahf
push
mov
inc
jnp
push
popf
inc
add
adc
sub
lods
jnp
out
add
and
adc
adc
cmp
or
sarl
mov
dec
jl
jns
sbb
cs
jge
xor
pop
ljmp
xchg
xchg
jecxz
lods
pop
inc
push
inc
mov
or
inc
push
sub
aad
ficomps
xlat
arpl
jg
call
or
adc
add
mov
pop
in
stos
add
xor
lret
mov
inc
xchg
pop
icebp
test
sbb
int3
or
adc
sbb
mov
out
push
in
aaa
jo
xchg
add
fdivs
daa
sbb
adc
lods
out
test
jmp
sbb
jp
cmp
xor
rol
inc
add
out
out
xchg
pop
cmp
mov
popw
mov
mov
repz
scas
outsl
test
jnp
dec
mov
clc
and
push
rcll
test
in
cwtl
jmp
repnz
push
pop
loope
cmpsb
fwait
mov
or
cmp
insb
jmp
or
mov
jo
and
aam
sub
in
pop
xchg
push
dec
ja
sub
jb
cmpsl
and
pop
call
lret
or
jb
es
iret
cmp
notl
aam
jns
ja
repnz
enter
je
loope
orl
pop
push
xchg
sub
lret
inc
xorb
add
jnp
aad
xchg
fisubrs
inc
cmp
pop
add
shl
scas
comiss
fsubs
sbb
daa
jbe
sub
lret
push
pop
mov
mov
inc
push
loopne
inc
or
inc
ret
ret
stos
shr
testb
push
push
adc
jns
clc
jge
test
sbb
mov
pop
clc
xchg
sbb
sub
cwtl
stos
repnz
sub
adcb
xor
or
jb
push
ret
push
push
jge
jbe
push
dec
adc
hlt
adc
loopne
adc
dec
dec
and
jl
xor
push
stos
dec
cmpsl
ss
lret
xor
repnz
adc
mov
dec
cmp
ret
gs
mov
sbb
xor
ja
mov
cmc
mov
sti
insl
xlat
adc
mov
loope
pop
mov
loope
stos
shl
fidivrl
popf
std
scas
loopne
int
and
xchg
mov
fisubs
and
sbb
sbb
or
aad
pop
mov
jp
data16
xchg
out
test
dec
out
popa
jl
scas
lahf
test
dec
insb
inc
push
arpl
sbb
cmc
dec
jge
ret
mov
ljmp
sub
fsin
dec
xor
pusha
sbb
xchg
fsubl
ljmp
adc
fistpl
fwait
test
xchg
test
pop
cmpb
jge
arpl
pushf
mov
cli
dec
ss
cs
cmc
push
loope
lahf
les
out
negb
push
cmp
int
add
sbb
popa
into
testl
mov
ja
addr16
push
adc
clc
jg
jp
mov
pop
xor
cld
andl
addr16
insl
dec
cmpsl
orl
cmp
sbb
stc
adc
int
lret
push
dec
jnp
out
add
nop
or
xchg
xchg
rorb
and
out
push
dec
jnp
xrelease
mov
dec
lods
and
sub
mov
mov
pop
push
jns
pop
pop
or
xor
adc
out
addr16
pop
adc
cld
mov
int3
sarb
sub
btsl
xor
sub
adc
mul
pop
iret
xchg
es
or
mov
out
call
fwait
sub
add
lock
ror
xchg
xor
push
xchg
xchg
ljmp
js
bound
mov
lods
xor
jno
cmp
jo
add
jb,pn
sub
push
addr16
and
cmp
mov
stos
subb
outsl
inc
stos
or
jbe
in
out
loope,pn
pushw
and
loop
mov
popa
scas
mov
test
cli
or
icebp
mov
sarb
add
mov
add
or
cld
cltd
adcb
shl
dec
and
cmp
jo
in
mull
inc
jno
jnp
js
dec
fcoml
push
jp
sub
dec
adc
fsubrl
inc
mov
push
adc
sbb
das
movsb
lods
push
mov
mov
negb
test
xchg
and
js
stos
mov
sar
arpl
shlb
les
iret
cmp
pmaddwd
lahf
sbb
xor
inc
int
das
ds
lods
dec
and
mov
pop
mov
dec
sbb
sub
mov
dec
adc
add
loope
and
add
jecxz
sub
xchg
movsb
ss
dec
jb
jno
dec
std
fldt
jmp
cmpsb
inc
cs
fildl
adcb
lods
push
dec
dec
jb
sub
loope
xor
mov
scas
pop
addr16
mov
ret
sbb
mov
pop
arpl
push
das
leave
outsb
mov
cmp
mov
stos
loope
or
mov
and
jecxz,pt
push
push
test
in
out
scas
scas
sbb
jg
in
or
dec
jecxz
and
aaa
xchg
movsl
int3
sub
lret
push
push
sbb
dec
lods
and
rcrb
data16
mov
mov
fcmove
push
icebp
dec
mov
gs
xor
pusha
in
pop
je
lds
bound
ja
jb
out
enter
and
jnp
fisubl
sbb
mov
fcmove
xor
mov
inc
cs
sbb
dec
push
in
mov
mov
add
stos
inc
sub
stc
mov
leave
std
stos
adc
rolb
mov
rorb
ds
adc
cmpsb
push
cmc
push
lret
pop
push
mov
add
xorb
insb
bound
stos
push
inc
sbb
add
jp
dec
and
mov
jl
cmp
popf
cmp
jnp
nop
sti
pushaw
aas
sbb
inc
jecxz
lock
cli
mov
sbb
sub
xor
inc
fs
mov
ficomps
lods
xor
daa
aas
cmp
lcall
mov
xchg
movl
ja
xchg
xorl
in
mov
push
xchg
icebp
sbb
mov
movsb
sbb
adc
xchg
and
leave
cwtl
pop
fldenv
jb
outsb
gs
aaa
adc
sbb
mov
dec
lret
idiv
adc
mov
mov
push
add
pop
mov
insb
out
cmp
sub
sbb
int3
out
fcompl
add
aad
xchg
jl
sti
and
rcr
jmp
pushf
xchg
xchg
cmp
dec
pop
iret
mov
inc
mov
xchg
adc
xlat
sbb
cmp
or
pop
in
pop
push
scas
mov
movsb
into
roll
add
and
stc
rcll
mov
cmp
xlat
and
mov
sub
mov
adc
out
fxch
bound
or
bound
dec
cmp
outsl
subl
pop
mov
cltd
pop
add
ljmp
nop
push
bts
sti
xchg
arpl
sub
jnp
shrb
and
xchg
insl
aaa
jne
mov
mov
int
dec
and
pop
inc
xor
inc
cmp
cmp
test
das
test
xchg
and
xchg
jl
xor
call
gs
lds
sub
bound
cs
rcrl
test
xchg
pop
ljmp
inc
into
mov
mov
cmp
ds
xor
cmp
test
sub
fwait
cli
xchg
aad
push
jg
dec
or
jb
fcmovu
and
mov
popa
or
shrb
fistpl
push
mov
enter
lods
mov
fwait
dec
icebp
in
sbb
jae
popf
add
stos
add
sub
and
nop
inc
test
pop
and
mov
faddl
movsb
in
xchg
push
pop
cs
mov
fwait
xor
push
inc
fstpt
hlt
out
scas
pop
push
xchg
mov
lods
push
inc
movsb
notl
or
addb
sar
xor
js
cmc
or
lahf
jl
mov
movb
sbb
lods
dec
insl
or
xchg
pop
push
pop
mov
lock
jl
iret
mov
shll
push
out
sub
test
pusha
imul
or
jp
add
clc
mov
dec
lret
cmp
pop
mov
jbe
push
mov
lds
cli
sarl
ret
je
mov
adc
movsb
bound
jae
or
and
sub
sbb
push
mov
cld
test
jge
pushf
punpcklwd
pop
rorb
mov
int3
out
orl
pop
enter
mov
sarl
scas
mov
add
sbb
xor
jbe
enter
jl,pn
dec
sub
pop
xchg
sub
js
push
pop
pop
mov
nop
popf
xor
scas
mov
xor
jg
sbb
push
sbbb
jb
sti
lds
ret
inc
adc
lock
lea
repz
fisttpll
movsb
inc
fldcw
inc
lds
jecxz
fisubl
mov
stos
pushf
mov
push
ret
sub
loop
cwtl
jns
mov
and
dec
push
jmp
xor
pop
mov
cmpsl
outsb
shlb
inc
xchg
and
daa
mov
cmp
mov
call
jns
mov
mov
nop
mov
and
stc
ja
jl
mov
movsl
jb
jmp
iret
rol
sbb
std
mov
fcompl
push
incl
mov
push
jne
jbe
sub
or
jmp
mov
jl
inc
andb
inc
jo
or
xor
fsubrs
pop
adc
iret
insl
ds
xor
loopne
add
gs
xchg
inc
scas
inc
mov
lods
loope
das
aas
add
push
push
ret
sbb
outsb
push
mov
movsb
cmp
push
popf
fwait
inc
adc
insb
xor
cmp
subl
daa
jp
das
loope
mov
imulb
popa
inc
imul
dec
cmpb
push
mov
cs
setle
adc
mov
loopne
mov
sbb
ja
adc
clc
sbb
insb
imul
lret
push
xor
mov
jmp
sub
in
sub
add
arpl
xlat
lods
xor
aas
adc
out
push
and
pop
imul
push
xor
shlb
push
add
int3
sbb
jae
jge
add
loopne
xchg
addps
mov
push
fsubl
outsb
sub
xlat
and
call
test
mov
cmpsb
scas
xor
push
mov
std
and
aas
fisttps
sbb
push
lock
add
mov
fdivs
push
sub
jl
ja
dec
inc
stos
insw
test
cmpsb
add
shl
inc
push
shl
test
adc
pop
divb
test
inc
sub
imul
popa
arpl
test
push
xchg
cmp
into
lcall
add
inc
mov
xchg
cmc
rolb
in
cmp
jecxz
sbb
add
add
data16
inc
lea
test
gs
out
ret
add
mov
jecxz
dec
dec
adc
cmp
xchg
movsl
fisubrs
mov
push
repnz
test
sarb
jbe
bound
or
jne
es
adc
stc
fwait
xchg
leave
jae
xor
sbb
pop
lds
insl
dec
fiaddl
cmp
fistpl
int
xor
pop
push
sarl
out
imul
idivb
sbb
sub
cli
jne
sbbl
sbb
outsl
cmp
lret
lcall
and
rcll
push
dec
inc
push
xchg
das
jnp
add
in
add
inc
stos
movsb
adc
inc
fisubrs
xchg
and
xchg
lock
mov
add
icebp
fisubs
jno
pop
movzwl
dec
lret
xor
fld
adc
adc
fs
rorl
movsl
ja
icebp
out
and
push
gs
outsl
mov
sbb
mov
cmpsl
jae
lret
sahf
push
ret
jge
pop
sbb
inc
push
mov
jb
push
movsb
lret
movsl
cmpsb
mov
in
pop
sub
stc
sub
fstpt
jne
xchg
ret
cltd
push
mov
lods
pop
dec
popf
and
xor
adc
mov
movsl
cli
pop
bound
sbb
rorl
sbb
jg
adc
xchg
xchg
jae
sbb
mov
cmc
loopne
jge
stos
xlat
les
cmp
int3
in
aaa
inc
adcb
sub
lods
test
xchg
mov
dec
aam
mov
insb
call
jecxz
loope
fadd
cmpsl
leave
sub
inc
insl
sub
cmpsb
fs
cwtl
mov
cmp
popf
cmpsb
xor
sub
inc
arpl
je
dec
inc
mov
test
jl
cli
addb
push
pushf
push
or
rorb
or
push
out
imul
jo
inc
aad
jp
mov
rcll
fdivl
fdecstp
and
xor
xorb
lods
outsb
cs
mov
outsb
ds
fscale
loopne
add
mov
cmc
mov
add
hlt
fucom
and
xor
shld
pop
add
daa
jae
fucomip
jmp
das
filds
jne
call
ja
fdivrs
pop
jp
aam
mov
mov
filds
adc
sub
int3
lret
mov
adc
mulb
and
fisttps
push
test
scas
push
adc
cmp
inc
sub
push
lret
sub
dec
pop
mov
dec
xchg
rcll
cmp
xor
and
jno
push
call
adc
mov
adc
lock
test
lds
jmp
sub
imull
or
xor
or
inc
pop
mov
dec
jns
int3
hlt
clc
cmc
push
iret
jmp
std
lea
cltd
add
cld
fistps
xchg
ljmp
fucomip
mov
jge
or
mov
xchg
mov
add
hlt
xchg
xchg
daa
cmpsb
pushf
mov
aaa
flds
and
dec
xchg
push
push
mov
pop
jmp
fisttpll
std
add
or
sbb
sbb
cmp
test
cmp
fiaddl
lret
bound
xor
cmp
push
cltd
cmp
mov
scas
mov
neg
lods
add
inc
inc
push
mov
cmp
jne
mov
jge
inc
and
jns
mov
sub
out
mov
jo
out
mov
mov
pop
sahf
mov
push
mov
ficoml
mov
jecxz
cmp
mov
or
test
mov
outsb
lds
xchg
outsl
cmp
push
xchg
add
sbb
mov
fcom
pop
loopne
and
ret
hlt
daa
imul
push
xchg
pop
mov
or
fcom
mov
mov
clc
loope
repz
dec
sub
jecxz
ficomps
mov
jecxz
dec
arpl
stos
mov
movsb
adcb
mov
or
loop
add
je
and
adc
gs
divb
test
imul
sarl
scas
adc
or
mov
pushf
sahf
xchg
lcall
filds
bound
test
dec
enter
or
fiadds
rcrl
lret
icebp
subb
cmpsl
cmpb
gs
mov
lock
cmp
cmp
push
cmp
dec
nop
in
mov
pushf
cmp
jb
pop
dec
test
and
mov
mov
jne
loop
ljmp
mov
and
scas
es
daa
lods
xor
inc
inc
fsubrp
cmpsl
cmpl
mov
lea
add
mov
fs
jl
and
sarl
xor
outsb
mov
mov
mov
lcall
into
fists
push
rorb
xor
nop
push
iret
dec
es
sub
test
cld
cmpsb
ja
lea
cli
push
adc
mul
mov
lods
sarb
mov
or
inc
xchg
sub
lds
ss
jne,pt
outsl
mov
xchg
jbe
push
idivb
arpl
cmp
jmp
inc
push
jbe
fsubs
imul
pop
andb
mov
in
fstl
xchg
mov
push
or
dec
stos
mov
rsm
mov
std
mov
cmpsb
mov
scas
test
arpl
test
sub
lock
dec
or
dec
jp
jbe
mov
jp
pop
push
mov
xor
xor
scas
call
shlb
pop
xor
push
icebp
pop
and
dec
loop
mov
cli
sub
ret
loope
fldl
dec
dec
xorb
dec
xorb
test
xor
in
or
pop
sbb
or
lods
sub
les
lahf
mov
ret
lret
xor
xor
rorl
adc
adc
mov
xor
xor
loopne
xchg
shrl
int
hlt
and
pop
jnp
divl
mov
mov
xor
mov
sahf
cmp
pushf
call
and
push
add
dec
jnp
inc
xor
loopne
cmp
addl
hlt
mov
aad
loop
jge
mov
add
cwtl
imull
xchg
xchg
je
push
or
cmp
and
mov
pop
data16
jo
inc
cmpsl
ja
inc
or
mov
rcll
mov
mov
and
xor
jb
sub
notb
xlat
imul
mov
test
mov
add
adc
mov
add
lahf
xchg
pop
cmp
sbb
cmc
sbb
sarb
dec
inc
sbb
cltd
leave
pop
and
int
stos
pusha
dec
adc
cmc
sbb
fadds
arpl
imul
addb
ret
mov
add
iret
push
cmp
and
or
xor
sahf
cmp
gs
sti
xchg
fisubrl
cs
lahf
push
es
bound
cmpsl
jl
test
push
pop
adc
adc
cmp
jne
mov
sub
lods
out
cmp
vpaddq
inc
aam
lcall
fwait
xchg
scas
fimuls
mov
mov
cmpsb
imul
and
dec
cs
and
in
jno
inc
iret
jge
ds
scas
push
jl
dec
out
icebp
lea
outsl
js
out
icebp
cmc
stc
jecxz
mov
loope
add
pop
mov
push
jp
cmp
mov
testl
shlb
pop
mov
sub
das
mov
mov
mov
insb
inc
cmc
imul
add
imul
cmpsb
xchg
mov
push
shrb
sahf
xchg
xchg
add
pop
test
add
and
sbb
or
pop
int3
add
loope
and
hlt
sub
mov
pop
jbe
repnz
and
stos
cmp
sub
into
mov
test
das
xor
mov
mov
lods
adc
std
and
andb
lea
sbb
and
and
jo
ljmp
fstps
mov
mov
xchg
xor
push
sub
mov
vcvttpd2dqy
xchg
ds
mov
mov
cmpl
stos
and
rcrl
rcrb
addr16
inc
cwtl
jb
data16
inc
add
add
lds
sbb
out
xlat
enter
cmp
int3
sub
or
push
loop
inc
insl
mov
out
iret
sti
repz
cmpb
movsl
test
addb
jns
inc
out
repz
jmp
das
add
lret
les
dec
or
lret
push
cmpsl
jnp
or
jo
rol
cmp
pop
jp
inc
shll
mov
int3
dec
fcmovbe
mov
rclb
test
push
sti
int
sbb
push
sbb
lret
xor
das
negb
push
lahf
daa
into
mov
and
sbb
dec
jg
cwtl
jne
int3
adc
rorl
inc
mov
push
sbb
scas
sbbl
leave
xchg
jne
xor
stos
cs
add
fwait
xor
inc
dec
xor
movsb
adc
lcall
orl
enter
push
sti
xor
pop
daa
cmp
int3
mov
sub
sar
jmp
outsb
pop
mov
in
mov
cmp
fdivs
scas
int3
imull
sub
in
inc
adc
jl
jl
or
and
jo
outsb
fs
push
idivb
nop
repz
push
pop
mov
jmp
fcomi
int
repz
shrl
sar
in
fists
mov
mov
push
iret
gs
cld
sti
test
mov
rcrb
push
pop
or
int
mov
lods
dec
mov
sbb
data16
mov
pop
lcall
enter
sbb
and
ss
mov
jmp
pop
movl
adc
inc
lret
js
cmc
in
stos
aam
sbb
xchg
das
ss
fistps
jnp
push
dec
lcall
pop
shll
out
xor
mov
and
xchg
sbb
ret
mov
stos
mov
xor
out
lahf
test
arpl
call
mov
dec
cmp
push
int3
and
xchg
jns
fwait
es
movsb
repnz
lret
adc
cwtl
je
out
les
dec
adc
pop
fidivl
and
inc
les
stos
xor
mov
int3
jo
jnp
push
fs
shll
int3
sahf
push
cmp
mov
test
lret
inc
imul
jno
adc
pop
sbb
stos
mov
stos
sub
push
daa
sbb
sbb
loop
jnp
int3
pusha
mov
sub
in
filds
test
outsl
test
int
add
iret
pop
jo
push
push
fsubs
jle
and
jle
mov
dec
repz
push
add
scas
push
int
cmp
xor
in
inc
mov
fistpl
clc
adc
out
and
adc
push
popa
dec
shrl
sbb
and
mov
add
clc
push
aas
outsb
cld
dec
in
xchg
sub
pop
sub
loopne
sub
or
pop
mov
data16
inc
cmp
in
push
mov
mov
inc
adc
loope
scas
ss
and
mov
std
mov
xchg
sub
or
aaa
popa
sbb
popf
or
sbb
shll
xchg
sub
dec
mulb
xor
mov
mulb
mov
mov
int
dec
or
jl
loope
notb
out
pop
mov
xchg
mov
xchg
xchg
sar
das
jecxz
jl
mov
imul
iret
jmp
pmullw
out
jb
cmpl
or
and
mov
cmp
jnp
mov
inc
dec
jg
xchg
jno
test
xchg
jno
mov
xchg
xchg
jecxz
enter
pop
js
cmc
mov
push
das
lahf
mov
in
clc
stos
xchg
cmp
test
lea
mov
jbe
addr16
or
sbb
sub
push
inc
shlb
mov
ss
xchg
imul
test
rol
stos
jecxz
adcl
pop
push
jae
xor
jl
mov
xor
xchg
nop
dec
in
xor
xorl
mov
rorb
daa
xchg
mov
lret
push
out
sarb
imul
enter
dec
add
mov
sub
mov
arpl
lea
imull
scas
jge
stos
cld
pop
pop
jb
in
daa
cmp
push
js
inc
mov
and
out
fbstp
shl
sbb
movsb
adc
sub
lods
mov
jns
sarl
pop
das
loope
iret
nop
mov
xor
pandn
and
mov
xlat
data16
pushf
sarb
into
mov
sub
ja
xor
outsb
dec
sbb
jae
or
outsl
mov
cmpsb
adc
out
add
fsts
add
repnz
pop
xchg
push
pop
sub
test
icebp
xchg
push
mov
xchg
and
jnp
cmp
fnstcw
cmpb
push
and
xchg
sbbb
shlb
int3
adc
cld
test
addr16
push
adc
push
and
pop
call
jno
test
mov
addr16
jle
mov
push
imulb
xor
mov
fsts
shrd
in
call
adc
inc
lods
loope
mov
mov
mov
xchg
xlat
repz
pop
fstps
cwtl
pusha
call
mov
jae
loop
jmp
jne
arpl
cmpsb
sub
lcall
sub
test
mov
xchg
ljmp
adc
jbe
mov
dec
sbb
daa
fsubs
pop
dec
xchg
jo
mov
jne
and
inc
lret
icebp
mov
push
idivb
int3
push
jno
daa
xchg
sub
pop
xor
push
stos
adc
pop
shrl
xlat
adc
lock
test
push
adc
mov
scas
cmpsl
push
nop
dec
movsl
or
pop
sysexit
mov
stos
dec
dec
aaa
lods
sarl
cmp
clc
adc
cmp
out
add
dec
cmp
jns
gs
test
xor
and
inc
stos
fisubrs
xor
and
xchg
xor
xor
pavgw
andl
popa
lret
ja
dec
pop
addr16
mov
sbb
fisubrl
jle
adc
sbb
inc
and
jecxz
fistpl
xor
mov
xor
dec
inc
cmp
xchg
and
sub
mov
ficompl
xor
in
incb
add
jns
mov
jne
andl
dec
xor
bound
adc
and
pop
or
nop
dec
ds
xchg
test
or
and
jo
es
outsb
or
push
jecxz
scas
dec
inc
shl
pushf
cltd
fstpt
push
int3
cmp
clc
fisubs
js
repz
xchg
ja
adc
enter
cmp
push
lods
out
cmp
or
sub
inc
mov
test
mov
or
in
add
mov
lods
sbb
nop
lahf
and
add
pushf
inc
fcoms
ret
or
mov
jne
mov
test
lret
jp
and
cmc
leave
pop
call
mov
repnz
xor
stos
inc
lock
ljmp
dec
repz
movsb
cmpsl
pop
stos
and
adc
jp
hlt
cltd
icebp
xlat
scas
cmpsl
fnstenv
push
and
adc
mov
ja
pop
das
xchg
adc
inc
fs
pusha
pop
sub
xchg
adc
into
jne
jmp
push
hlt
ss
cmc
rclb
fsubr
jge
mov
sbb
dec
mov
fistpl
pop
dec
pusha
xor
movsb
aaa
movsb
scas
adc
pop
mov
cmp
imul
add
in
inc
shrl
xor
cltd
int
rcll
mov
lods
out
test
mov
push
mov
jmp
mov
frstor
outsb
push
inc
pop
mov
xor
mov
mov
out
jecxz
lcall
xlat
add
inc
pop
outsb
mov
pop
loopne
stos
lock
out
inc
fwait
jecxz
sub
or
mov
mov
int
inc
ljmp
rcll
fimuls
mov
jge
shlb
lret
push
cmc
inc
loop
xlat
sub
lahf
imul
mov
cmp
and
outsb
in
jns
outsl
in
inc
add
sub
negb
mov
push
ret
sbbl
push
out
xor
mov
call
dec
push
or
push
push
or
jno
jmp
and
ja
ret
dec
lahf
cld
mov
jo
xchg
enter
mov
pop
cwtl
add
leave
loopne
loop
jnp
fidivrl
in
inc
add
imul
push
xorl
sbb
push
jbe
xor
mov
out
dec
lds
mov
in
jecxz
gs
fidivl
jg
rolb
and
push
hlt
or
add
arpl
fs
js
cmpsl
and
movl
inc
test
mov
lods
cmpsl
aad
aam
mov
mov
sbb
lds
addb
ret
mov
fs
sub
push
imul
xor
sti
cmc
icebp
into
mov
test
js
adc
dec
add
frstor
mov
push
cmpsb
in
repz
inc
rorb
fcomp
push
dec
dec
fdivrl
mov
pushf
loope
push
cmp
mov
push
movsb
mov
mov
add
aam
dec
scas
sub
cmpsb
push
fs
jae
pushf
in
dec
or
push
pop
fisttpl
int3
popl
daa
hlt
aaa
xchg
lahf
das
push
or
mov
inc
cmp
ljmp
es
jb
push
sbb
int
fwait
jns
ljmp
jb
cwtl
in
pop
dec
mov
shll
mov
xchg
and
xchg
dec
adc
push
sbb
cmp
je
cmp
out
jb
cmpb
xchg
es
loopne
lea
sbb
jle
sbb
into
insb
ljmp
outsl
or
or
push
jp
out
imul
mov
sub
cmp
add
push
mov
addb
sbb
cmpsl
movaps
adc
add
dec
sub
repz
xor
iret
ss
xchg
mov
cmp
out
mov
pop
in
rolb
sbb
fsubl
cmpsl
lahf
lea
ficompl
shlb
in
popa
sti
pop
mov
mul
inc
and
pushf
sub
push
lds
scas
add
mov
mov
pop
mov
pop
jno
fisubrl
leave
mov
pop
ftst
push
cld
xchg
push
int
cmp
xor
scas
shl
mov
fs
lods
lret
jp
aas
dec
sub
aad
jle,pn
adc
adc
jle
jmp
lock
int
push
pop
push
movsl
adc
xor
sbb
lods
test
shlb
mov
addb
cmpsl
mov
int3
cli
push
add
adc
xchg
jnp
push
stc
mov
bound
repz
test
inc
repnz
andb
test
push
jmp
push
xor
clc
mov
repnz
ret
xlat
sahf
add
jne
push
gs
je
inc
roll
repz
addr16
aad
fildll
add
jae
arpl
mov
mov
mov
hlt
pop
adc
dec
jns
arpl
mov
lret
popa
icebp
shll
and
inc
pop
xchg
outsb
cmp
add
add
add
shrl
sub
add
inc
cwtl
mov
mov
inc
pop
pop
sti
add
daa
fiadds
rcll
jno
loopne
mov
lock
xor
or
es
mov
pop
add
test
sbb
and
sti
and
sti
mov
and
inc
movsl
xchg
sub
lods
fnsave
inc
xchg
push
mov
add
cmp
mov
push
sub
gs
cmpsl
pop
nop
pop
xchg
sub
add
icebp
ljmp
fwait
in
std
das
jbe
ss
inc
sbb
or
jmp
mov
cmc
cmpxchg
mov
sbb
out
cld
out
insb
call
xchg
in
jmp
add
pop
call
push
or
sbb
mov
in
aam
mov
sub
mov
scas
cmc
mov
lods
xorb
shll
nop
lds
xchg
push
sbb
popf
xchg
mov
lea
cmp
cmp
cmp
mov
das
adc
and
dec
jns
sub
ds
sub
cmpsb
jb
lret
out
add
add
outsl
lds
pop
jp
fdivl
dec
aad
xorl
sub
add
popf
scas
cltd
sti
jns
mov
push
inc
mov
dec
mov
dec
movsl
fidivrl
cmp
add
cmpb
xchg
scas
mov
push
add
push
fsubrl
andl
mov
fsubp
sbb
jmp
and
dec
pop
js
fmulp
insb
mov
arpl
sub
push
sbbl
mov
xchg
ljmp
and
xchg
cli
js
rsqrtps
ret
orl
mov
mov
dec
jmp
repnz
daa
mov
mov
sarl
mov
mov
cmp
test
movsb
adc
bound
sahf
add
inc
push
push
sbb
push
fisubl
push
mov
scas
mov
mov
push
xchg
mov
addr16
sar
inc
inc
add
push
out
pop
test
stos
xor
cmpsl
lods
js
push
cld
in
push
push
or
lock
pop
mov
and
mov
addr16
in
out
movups
jae
inc
sbb
mov
pop
pop
ljmp
sarl
lret
pop
dec
and
sti
and
and
fwait
sti
xchg
mov
adc
in
push
jle
fcmovne
pushf
aaa
mov
mov
or
cli
push
inc
mov
enter
repz
shll
add
mov
xchg
jmp
pop
lret
jl
sbb
stos
mov
xchg
fmuls
mov
pop
xchg
out
loopne
cs
scas
movsl
xor
fidivrs
inc
adc
jle
lcall
push
xchg
cmp
mov
xor
and
cmp
dec
lahf
xor
cmp
add
dec
cmp
fbstp
out
aaa
scas
push
dec
or
popf
mov
lock
out
lods
fcoml
sub
or
adc
push
scas
fdivs
adc
rcrb
stc
rcrl
push
sarl
mov
inc
popf
pop
xchg
fstp
test
or
jge
stc
mov
enter
ds
loop
mov
fcoml
js
add
outsl
pushf
add
sub
xchg
mov
divb
xor
lods
xor
sarb
push
loope
sub
and
dec
arpl
mov
cmpsl
fcmovnb
xor
aad
adc
repnz
and
dec
lret
aad
cmpsl
mov
xor
aad
jns
and
jp
xchg
std
ljmp
push
cmpsl
pop
mov
adc
fsubrp
cmpsb
ficoml
dec
pop
xlat
or
aam
cli
push
dec
push
scas
xchg
and
or
mov
in
mov
aad
mov
sub
ret
xchg
mov
in
jb
out
mov
mov
inc
mov
loopne
add
cmp
sbb
sub
push
stc
lea
inc
mov
aaa
arpl
cmp
xchg
nop
scas
scas
add
repnz
cs
xchg
jge
lret
inc
inc
outsl
push
imulb
jo
rclb
jl
add
adc
shlb
mov
fisubrs
mov
or
inc
mov
nop
std
fs
adc
and
jp
mov
pop
loopne
inc
sbb
aaa
int3
sti
insb
rclb
sti
add
jg
jmp
test
or
les
adc
dec
fcomps
dec
idivb
mov
pop
inc
js
ja
int3
lret
ja
add
dec
sbb
and
enter
mov
adcl
ret
aad
sbb
insl
mov
pusha
mov
fs
in
ret
faddl
popf
pop
js
shl
xor
jl
stc
push
xorb
filds
push
data16
xchg
lcall
cwtl
cmpsb
shrl
inc
mov
inc
xor
xor
ljmp
add
dec
les
loop
sub
test
scas
dec
stos
xchg
push
adc
ljmp
jl
inc
into
pop
in
mov
jmp
jmp
call
lock
pop
cmpsl
jo
xor
sahf
add
stos
icebp
pop
mov
stc
mov
mov
mov
outsb
lock
icebp
cmp
cmpsl
mov
adc
cmpsl
add
dec
fstl
cmpsl
ljmp
pop
shl
movsl
inc
into
jecxz
ds
inc
ljmp
adc
adc
add
pop
iret
mov
ficoml
pop
ficoms
mov
xor
pop
int
mov
in
mov
xchg
enter
xchg
sub
or
mov
jecxz
mov
gs
loopne
sbb
xor
mov
xor
stc
rorl
xor
push
rclb
movsl
lds
jns
mov
shr
push
test
mov
adc
test
and
aaa
shlb
sub
pop
je
sbb
push
dec
stos
pusha
addl
cmc
hlt
push
js
mov
pop
pop
and
cltd
mov
dec
call
repz
xor
mov
push
fistpl
lcall
or
addr16
in
or
ja
std
mov
pop
inc
xchg
inc
adc
movsb
inc
add
inc
inc
jno
mov
dec
inc
icebp
sbb
mov
or
fld
testl
imul
int
inc
ret
outsl
adc
xchg
add
pop
sbb
testl
ret
fsubrl
jae
push
xorl
test
mov
jecxz
jo
mov
pushf
sub
push
int
mov
jnp
dec
dec
fisttpl
adc
cmp
mov
lea
jbe
sbb
call
lock
pop
movsb
cmp
movsb
xchg
pop
sub
adc
and
fadds
xor
add
int3
push
push
lods
test
lods
pop
mov
adc
inc
imul
sub
cmpl
sbb
jne
mov
rcll
stc
push
xchg
xor
subb
test
jp
xor
ja
int
sbbb
imul
ficoms
dec
stc
js
dec
mov
push
xor
push
dec
pop
in
or
mov
insb
mov
mov
lret
mov
lea
adc
jp
outsl
push
adc
push
mov
xchg
mov
xchg
fdiv
imul
cmp
xchg
pop
jmp
cmp
or
pop
repz
jbe
sti
jo
sub
cmp
pop
leave
mov
mov
shlb
jmp
pop
je
mov
or
push
cwtl
jae
jo
pop
ds
dec
sbb
push
sbb
les
mov
scas
out
test
adc
sbb
xchg
inc
shll
or
or
sti
inc
pop
movsb
daa
mov
add
push
popf
xchg
jge
push
adc
out
icebp
jbe
movsb
and
and
jns
or
clc
add
jae
and
addb
gs
xor
push
ret
cmp
clc
ror
cs
xor
jecxz
pushf
xchg
cmpsl
js
jge
out
sbb
cld
test
ja
hlt
pop
push
push
xor
std
push
pusha
jnp
outsl
jnp
or
inc
rorb
jae
cmp
lret
addr16
or
fmull
jno
lods
js
test
imul
jae
push
call
xlat
lods
scas
push
cld
sub
lret
je
sbb
xchg
add
aad
daa
push
scas
add
jnp
sub
mov
pop
pop
loopw
xor
ja
cmp
loop
sbb
call
hlt
or
mov
pop
and
or
inc
in
lock
jmp
xor
xor
or
sub
es
inc
sbb
pop
mov
adc
fisttpll
sbb
aas
movsl
scas
dec
sbb
mov
mov
fstps
test
inc
xlat
repz
jne
dec
into
push
pushf
notl
jb
sbb
repnz
dec
loop
repz
fwait
mov
mov
xchg
subl
fstpl
add
jbe
adc
lods
outsl
mov
inc
repz
pushfw
xchg
ds
int3
call
daa
jmp
in
lahf
aaa
outsb
inc
mov
movl
sub
xor
adc
add
adc
js
xor
outsl
mov
popf
outsl
in
adc
mov
xor
mov
adc
cmpsb
xor
push
push
out
mov
xchg
leave
xchg
mov
shlb
inc
jle
iret
xor
xor
ljmp
repnz
pop
mov
arpl
jmp
or
fidivl
stos
adc
sbb
mov
push
push
jmp
jae
jno
push
clc
fwait
xor
out
and
js
data16
cmp
inc
xchg
ja
mov
cmp
push
aaa
inc
jmp
shll
mov
inc
daa
mov
sbb
lods
in
addl
cmp
loope
fisttpl
xor
or
xchg
mov
or
push
repz
cmp
imul
cld
loope
lods
jmp
adcl
cmp
cmp
sub
and
adcb
and
sub
xchg
ret
mov
pop
xor
inc
push
rolb
xchg
lahf
mov
pop
sub
ficoml
pop
sbb
dec
adcl
testl
push
pop
lcall
cli
dec
fwait
dec
dec
lds
ret
fiadds
jnp
dec
push
out
mov
mov
shll
cmp
mov
xchg
and
sub
call
add
int
push
jae
xorl
push
lret
jb
scas
fdiv
lret
pop
rorb
xor
jns
data16
jae
nop
jecxz
sbb
ret
adcb
jle
daa
daa
jo
das
negl
mov
pop
les
repz
lret
sbb
xlat
add
and
fcmovnu
loop
enter
add
xchg
shll
outsl
mov
test
loopne
aaa
hlt
and
movsl
iret
shll
cmp
sbb
cltd
gs
rcrl
and
scas
aaa
repnz
cwtl
or
out
xchg
jl
ret
cmpb
jnp
pop
out
inc
pop
in
leave
adc
sub
xchg
xchg
std
lods
xor
jle
cmp
pop
aam
xchg
ja
ds
es
cmc
mov
addb
adc
popa
sbb
add
std
repz
cs
shll
jl
cmc
mov
bound
mov
std
call
das
pop
and
divb
push
jae
inc
or
cmp
or
jge
lret
jp
ja
pop
xorb
cmc
add
and
cli
xor
lods
pop
mov
or
xor
xor
cmpb
clc
dec
mov
jg
les
cmp
ror
adc
cs
mov
out
jmp
pop
and
pop
add
xchg
cltd
cli
or
lea
mov
inc
jge
sub
aam
pop
icebp
call
mov
dec
mov
pop
or
mov
jl
stc
icebp
and
sarb
jno
test
or
xchg
stc
mov
lea
outsl
adc
cmp
sub
loopne
int3
xchg
xor
lock
outsl
jecxz
xor
in
in
pop
mov
cli
rorl
jo
call
cmp
inc
in
or
and
jae
test
jmp
ffreep
out
lahf
jg
dec
inc
sub
out
pop
fildll
adc
jbe
rcrb
pop
cltd
nop
xor
dec
sub
js
stos
call
sub
scas
jmp
and
rol
mov
pushw
push
aad
addb
loop
test
repz
lret
adc
xor
popf
xor
negb
pop
pop
dec
nop
add
rcl
mov
lea
jp
inc
pop
pushf
cmpsl
add
xchg
mov
mov
xchg
xlat
inc
scas
fdivs
arpl
push
xor
mov
into
out
dec
mov
clc
movsl
xor
sbb
lcall
mov
sbb
mov
adc
mov
sbb
adc
xor
cmp
out
xor
cmp
insb
in
imul
test
mov
sarl
enter
inc
pop
lret
js
pop
sahf
adc
rcll
and
rcrb
jmp
mov
pop
mov
push
addr16
sti
inc
fnstenv
mov
fildll
mov
xchg
sub
imul
dec
sahf
dec
and
rcrl
out
insl
mov
scas
sub
sub
loop
inc
and
mov
sbb
ss
adc
test
cmpsb
out
fcmove
or
pop
push
sahf
pop
inc
cs
sahf
es
or
lcall
xchg
test
push
mov
stos
imul
sub
repnz
shll
lahf
scas
jne
test
es
scas
out
pop
mov
jns
sub
imul
cmpsl
cwtl
popa
xor
int
inc
shl
cmc
fstl
scas
int
jmp
mov
aaa
cmp
lods
cmpsb
cs
shl
or
btc
jo
mov
outsl
cmc
imul
add
jl
mov
outsb
mov
das
notl
dec
xchg
cmp
pop
pop
push
cmpsb
pop
mov
or
adc
scas
sub
dec
pop
mov
lock
pop
mov
jnp
or
pop
popa
mov
xor
pop
cmp
lods
pop
lahf
out
sbb
sub
out
imul
hlt
lahf
je
mov
std
test
lods
jle
adc
jl
add
jp
adc
loope
mov
mov
pop
and
movsb
xor
arpl
xchg
xchg
or
mul
cmp
insb
inc
push
dec
arpl
sub
or
sbb
in
mov
arpl
pop
mov
daa
loope
and
sub
sbb
mov
push
popf
cmpsb
mov
rcll
inc
shrl
rclb
sub
outsb
incl
mov
popf
sub
adc
cmc
ret
push
jb
xor
out
fwait
mov
bsf
insb
xchg
or
outsl
les
push
xlat
inc
fiadds
cmc
scas
mov
ret
imul
and
sub
ja
jecxz
das
push
mov
dec
shr
psrlw
push
mov
and
fistpll
rcr
sti
loope
fstps
inc
mov
and
lea
arpl
mov
jl
mov
and
add
cmp
scas
push
ja
fmull
pop
js
add
adc
test
pop
leave
movsl
mov
jge
leave
push
adc
movsb
sbb
and
jne
adc
and
ret
pop
sub
mov
jmp
jne
mov
mov
xor
int
repz
cmp
push
movb
pop
jecxz
int
push
ja
pop
fs
nop
cmp
daa
mov
loop
add
or
repnz
jg
and
cmp
mov
enter
pop
sbb
fldcw
lods
pop
rol
sub
imul
pop
outsl
or
ljmp
bound
dec
add
je
ret
xchg
mov
out
jae
mov
push
mov
inc
mov
xchg
inc
notl
dec
push
jle
in
loop
lcall
bound
fnstsw
and
sbb
and
or
fstl
or
push
adc
jbe
sub
jb
data16
pop
dec
push
adc
fsubl
inc
add
imul
inc
mov
sub
popa
bound
and
dec
jmp
mov
inc
out
adcl
in
mov
mov
in
jbe
xchg
shlb
push
sahf
mov
out
mov
movsl
sbb
rcl
icebp
gs
fisttpll
negl
dec
mov
and
iret
push
jae
pop
out
add
mov
outsb
mov
lods
fmuls
lock
xorl
movsl
dec
and
pop
push
dec
cwtl
adc
cmp
lods
test
push
xor
sub
pop
add
mov
push
jle
inc
mov
jl
and
in
pop
cmpsb
ficompl
daa
movsl
stc
les
js
pop
xor
xlat
mov
add
lods
ss
inc
mov
leave
popf
pop
test
inc
pop
loope
cmpsb
bound
pop
fmul
pop
push
push
cmpsb
fcomip
mov
dec
push
push
cmpsl
pop
add
lcall
shl
lret
sub
icebp
jb
sub
jmp
lret
sub
mov
or
cmp
popa
mov
xchg
jle
cs
sahf
inc
xchg
xor
add
out
push
rcl
and
jp
cmpsb
das
dec
call
test
mov
outsb
or
cltd
push
pop
add
rcrl
mov
mov
xlat
add
push
mov
jno
repnz
xlat
subb
mov
sub
jl
call
xchg
push
mov
daa
inc
dec
les
insb
sub
rorl
ret
or
clc
pop
sahf
adc
movsb
sqrtps
mov
cmpsl
cmpsl
push
in
push
je
adc
arpl
inc
mov
add
xchg
add
clc
mov
std
cmpsl
mov
dec
mov
push
or
mov
adcl
scas
sbbb
sub
pop
je
mov
fs
lea
xchg
sub
adc
popf
arpl
xor
xchg
add
mov
scas
add
push
pop
xor
pushf
or
lcall
mov
movsl
dec
adc
sbb
jbe
mov
ds
popf
pop
cmp
rorl
into
sub
popf
fistpl
in
iret
sbb
and
es
repnz
aaa
stos
loope
or
aas
cld
cmp
jp
pop
push
cmpsb
mov
push
dec
scas
mov
cltd
sarl
cmpsb
mov
mov
pushf
inc
rcl
mov
inc
jb
dec
cli
xchg
repz
mov
daa
add
jnp
lahf
pop
xchg
jmp
arpl
ret
sti
xor
lds
outsb
push
lahf
ret
adc
adc
pop
std
scas
leave
shlb
sti
pop
daa
imul
mov
fadd
dec
lcall
fldenv
mov
push
cmc
int3
loopne
addr16
cmp
cwtl
or
push
add
in
add
repz
push
cld
push
cmp
sbb
cmc
add
fcomps
jns
pop
or
cltd
enter
push
jo
out
xchg
stos
gs
sbb
lahf
mov
mov
adc
jmp
or
faddl
lcall
mov
mov
pusha
sbb
jle
inc
jno
loopne
sbb
ss
pop
in
popaw
mov
gs
int
movsl
sbb
and
lods
call
fdiv
es
adc
and
add
dec
push
mov
sahf
or
ficomps
xchg
clc
repnz
inc
leave
adc
sub
jo
dec
pop
inc
xchg
aad
cmp
fwait
cmp
jg
movsl
js
inc
cmp
adc
add
cmp
jp
roll
sarb
loopne
xorl
push
subl
cmp
inc
push
aad
cmp
bound
xor
push
fs
push
aaa
shrb
sbb
or
push
push
imul
push
out
call
es
sbb
repnz
pop
scas
or
dec
pushf
fucom
int3
cltd
add
mov
mov
es
inc
repz
and
mov
movsl
lcall
leave
push
sub
xorb
fucomp
mov
push
in
test
lea
cmp
mov
mov
mov
cld
sbb
scas
sub
mov
cmp
leave
adc
mov
pop
cli
xchg
mov
pop
push
int3
fadds
pop
pop
into
sub
or
and
or
test
out
cmp
bound
lds
data16
ret
jae
shl
in
push
in
ret
imul
xchg
jecxz
repnz
pop
mov
aam
push
push
insl
fadds
adc
jmp
fsubrs
scas
fdivrl
imul
pop
pop
rcl
sbb
inc
mov
clc
insl
aaa
cmc
out
clc
out
mov
test
pop
fs
mov
jmp
repz
jo
cmp
jns
loopne
jnp
inc
clc
adc
mov
push
jo
clc
mov
add
add
jnp
cmpsb
mov
outsb
cmp
pushf
and
ja
mov
mov
sti
ret
mov
rcrl
je
out
sarb
stc
rcrb
xor
outsl
lret
popa
leave
push
mov
inc
mov
xchg
mov
mov
jg
idivb
mov
or
insl
popf
sahf
bnd
mov
ljmp
imul
add
pushf
add
jmp
mov
inc
shl
pop
scas
push
sbb
lods
adc
into
or
or
and
lcall
jmp
popa
outsl
push
loope
outsl
sarl
lret
ret
push
mov
cmp
in
cmp
flds
mov
pushf
scas
loopne
jl
add
outsl
inc
add
jg
adc
into
aas
jmp
mov
dec
imul
push
mov
sbb
in
lock
cli
hlt
dec
pop
lods
stos
pop
add
loop
ds
sub
mov
pop
and
lods
sbbb
jmp
mov
lods
stc
aas
cmp
mov
fsubrs
in
and
divl
in
call
xchg
push
lea
xchg
jo
je
dec
xlat
stc
fistpl
mov
mov
in
mov
sub
jecxz
cwtl
fwait
stos
daa
shll
mov
mov
adc
pop
mov
push
movsb
mov
dec
mov
out
dec
and
add
ljmp
push
cmp
insb
in
jne
push
xchg
pop
xor
insl
cmp
sbb
sub
repz
scas
loop
push
and
out
add
icebp
push
scas
cwtl
call
jae
fnsave
inc
sbb
sbb
and
insb
cmp
push
pop
lock
test
pushf
and
mov
fwait
mov
add
hlt
mov
xchg
into
je
leave
out
repz
xchg
clc
insl
pop
sub
flds
out
fcmove
mov
ss
and
adc
mov
popf
repz
cmpsb
push
nop
lds
mov
inc
or
inc
int3
pop
mov
dec
popa
xchg
or
add
pop
fisttps
enter
rolb
xchg
daa
out
shlb
lods
arpl
into
or
cwtl
std
rclb
sarb
lods
cmp
xchg
int3
pop
sub
fstl
sub
sbb
lea
adc
xchg
insb
jl
xor
popf
jecxz
sub
and
cmp
mov
adc
or
loope
bound
add
sbb
jge
and
mov
mov
in
call
jl
pop
push
sub
mov
pusha
lods
and
inc
mov
jmp
jp
nop
lods
int3
pop
inc
sahf
ja
repnz
daa
add
and
int3
and
push
cmp
jne
inc
push
jns
stc
and
ret
lcall
adc
xchg
mov
push
int
aam
mov
cli
outsb
mov
adc
outsb
sbb
xor
xchg
pop
xchg
sbb
out
fisttpll
dec
std
movsl
lret
cmp
cwtl
dec
xchg
ljmp
pusha
pop
inc
push
dec
mov
cmpsl
pop
push
mov
scas
aaa
xor
je
ret
mov
ljmp
cmp
or
xchg
insb
mov
leave
pminsw
cmpsl
loope
stos
mov
lods
cmc
pushf
lret
push
xor
ja
into
ds
stc
dec
pop
sbb
mov
inc
jmp
push
mov
outsb
in
add
sbb
leave
std
sbb
in
xchg
and
xchg
dec
in
xchg
cmp
repnz
push
pushf
pop
push
mov
push
jl
pop
cmp
or
out
pop
imul
dec
mov
scas
xchg
cmpb
push
neg
mov
arpl
pop
xor
adc
add
rolb
inc
xchg
es
xor
cmpsb
pop
mov
cmp
lret
mov
sub
rorb
mov
mov
add
enter
and
pop
mov
push
cmp
loop
and
inc
push
ss
cmp
adc
sbbl
mov
sub
pop
sbb
inc
aad
dec
popf
outsl
add
mov
rol
pushf
inc
or
add
mov
repz
push
inc
pop
nop
es
mov
cmpsl
inc
and
mov
cltd
xchg
jb
repnz
fwait
mov
js
xor
xchg
push
cmp
mov
imul
in
push
push
push
or
dec
inc
and
repnz
fnstcw
push
pusha
stos
stos
jp
shll
pop
mov
mov
xchg
pop
pop
mov
add
dec
jp,pt
mov
std
insb
sub
sub
ljmp
sub
insb
fdivl
push
jmp
xor
push
imul
cmp
pop
xchg
push
sbb
sub
pop
cmpb
out
leave
leave
lea
sub
xchg
and
scas
fstl
dec
mov
jp
fstpl
sub
push
xor
cs
js
cwtl
cmp
dec
pop
mov
and
lcall
int
cmp
movsl
jae
in
lea
sti
sub
inc
pushf
sbb
jge
andb
jge
xor
popl
jo
bound
int
xor
dec
push
lcall
pmaxub
mov
jmp
inc
inc
mov
sbb
push
sub
int3
mov
shl
pop
mov
and
aas
repz
mov
jo
pop
jmp
incl
dec
out
lods
xchg
pop
jnp
arpl
scas
mov
mov
ret
mov
and
je
mov
jne
sahf
sbb
jne
dec
and
aas
cltd
push
aas
adc
xchg
sahf
cmp
test
push
or
push
ss
das
addr16
sub
xchg
lods
outsl
dec
or
or
ret
and
lods
sub
stos
out
das
and
ss
dec
fdivr
mov
sbb
stos
lahf
addb
outsb
adc
jns
xchg
pop
pusha
inc
xchg
or
sbb
in
fwait
mov
cmp
stos
pop
notb
xchg
mov
dec
fwait
aad
sub
psubusw
add
sbb
addr16
pop
loopne
pop
repnz
cmp
sub
scas
jnp
inc
mov
adcl
jge
adc
xchg
jl
sub
loope
mov
cmpsl
mov
in
leave
test
mov
pop
mov
pop
pop
lret
enter
cmp
pop
xchg
cli
or
arpl
cmp
inc
subb
loop
mov
js
mov
pop
test
mov
sahf
fucomp
mov
out
outsb
mov
test
xor
popa
xchg
lock
sbb
rcrl
rol
cmpsl
dec
or
sub
lahf
std
sub
inc
stos
mov
inc
scas
or
push
mov
and
xor
mov
in
sar
movsb
leave
mov
cmp
pop
ds
mov
aas
je
fisubrs
scas
add
fucom
es
jnp
jbe
ds
jno
mov
jmp
ret
dec
cwtl
jbe
das
arpl
xchg
pushf
mov
dec
pusha
hlt
rcrb
sarb
jae
dec
pop
aad
push
sbb
mull
into
lret
cltd
push
push
add
xchg
lahf
test
push
cmp
mov
out
add
movsb
in
sub
sahf
sub
and
push
movsl
mov
push
xchg
test
das
pop
stos
mov
push
lahf
adc
loop
xchg
ds
scas
in
aam
shlb
adc
xlat
shrb
mov
and
and
mov
sbbl
fcos
imul
jge
xchg
inc
scas
add
outsb
xchg
lock
dec
cmp
jb
adc
add
jno
xor
xchg
testl
fcompl
and
push
roll
jmp
mov
into
cltd
xchg
stos
sahf
jecxz,pt
jle
jl
push
fbld
mov
outsb
and
repnz
cmp
pop
je
or
and
jnp
aam
xor
and
sti
sbb
mov
fldt
fisubs
adc
into
jne
lea
nop
xlat
mov
pushf
int3
fisubrl
je
or
hlt
into
dec
or
xor
push
xchg
notb
in
xchg
xchg
mov
lret
les
std
ja
repz
clc
int3
jae
sbb
mov
nop
cmpsb
adc
mov
ffree
loop
and
outsl
pop
mov
insb
in
xor
dec
or
and
iret
int
ja
jns
and
push
clc
lret
lahf
xchg
jge
push
add
sbb
cmp
add
push
mov
fadd
aam
dec
mov
mov
out
push
mov
fisubrs
xsavec
push
orl
stos
push
mov
or
cmpsl
sahf
mov
jnp
pop
inc
xchg
lods
negl
pop
xchg
mov
push
lret
outsb
jp
mov
insl
lods
push
mov
scas
int3
pop
mov
arpl
cwtl
data16
ljmp
mov
jno
mov
jp
jecxz
mov
cs
into
push
lods
dec
pop
arpl
clc
mov
jo
adc
lahf
dec
in
or
sti
das
sarl
in
test
stos
in
pop
mov
sbb
imul
inc
stos
inc
mov
pop
inc
cs
fldcw
sub
or
dec
icebp
aas
xor
pop
cmpsl
lret
mov
dec
decl
lret
popf
cmp
out
test
aaa
dec
xor
imul
mov
pop
pop
sub
out
jge
xor
popl
xchg
xor
ret
mov
add
imul
inc
fldz
or
push
outsb
sbb
enter
xchg
sarl
cltd
push
mov
popa
pop
mov
dec
mov
dec
idivl
xchg
and
aas
cmp
andb
mov
and
cld
pop
mov
mov
out
mov
push
lret
inc
mov
jae
sbb
rcr
push
sub
repnz
shlb
mov
or
pop
out
enter
lea
shrl
mov
loop
sub
jns
and
adc
cmpsl
std
push
in
sbb
fstps
clc
xor
movsb
mov
test
in
jl
sub
les
into
loop
je,pn
mov
adc
sbb
cmc
arpl
fxch
aaa
ret
lds
fsubs
inc
cli
inc
cs
cmp
dec
mov
cwtl
inc
or
mov
mov
jmp
and
ds
cld
sahf
xor
push
or
inc
int
neg
ret
out
iret
pop
or
xor
cmp
in
int3
add
pop
xorl
push
push
dec
or
in
mov
std
mov
iret
cmp
inc
mov
xchg
cld
mov
jb
mov
pop
inc
jbe
jnp
jmp
jge
shrl
jp
inc
cmp
push
rcll
int3
ret
adc
mov
pop
stos
xchg
lds
jp
ret
adc
and
sub
cmp
lahf
push
dec
xlat
outsb
int
insb
inc
lock
adc
lret
sub
jo
mov
popa
test
add
add
std
repnz
dec
imulb
cmpb
jo
das
fldcw
add
mov
lret
cli
arpl
out
mov
dec
mov
inc
cli
push
mov
mov
inc
push
shlb
sub
das
repnz
jmp
loope
icebp
mov
xchg
and
dec
fnstsw
inc
call
scas
adc
cli
and
adc
sub
push
bound
xchg
sbb
cs
xchg
mov
xchg
loop
xorb
jmp
inc
imul
outsl
rcr
testb
movsb
int
ja
addl
int
rorl
call
subb
jbe
ret
fimull
inc
xor
xlat
xchg
iret
pop
adc
jecxz
lds
dec
loope
lret
nop
pushf
aas
pop
sbb
popf
adc
aas
js
mov
add
pop
inc
mov
call
push
mov
push
cs
jnp
cld
sbb
repnz
pop
and
add
dec
cmp
ret
cmp
adc
mov
fnstenv
xlat
adc
fstpl
inc
aas
lock
clc
cmpsl
fstl
jle
int
push
cs
pushf
insl
fwait
mov
mov
clc
xchg
enter
and
ja
rcrl
xor
adc
sbb
out
sbb
jmp
leave
adc
jmp
jg
fcomip
sbb
xchg
sbb
jne
popf
or
or
mov
gs
pop
sub
aad
push
lahf
leave
in
aaa
and
inc
xchg
jb
clc
test
cmp
push
ret
cmpsl
adc
std
xor
cmpsl
ret
and
jmp
fidivl
and
or
clc
or
mov
ret
lock
in
jle
adc
inc
fmulp
out
arpl
xlat
movsl
push
mov
sub
out
ret
add
dec
ljmp
or
mov
sbb
aaa
jbe
adc
sub
loopne
cwtl
outsb
or
or
mov
xor
xchg
xchg
add
mov
aas
and
xchg
inc
hlt
ja
sbb
stc
loopne
imul
lods
jg
mov
sahf
cmpsl
sbb
lea
mov
mov
push
inc
cmp
push
sbb
mov
fdivr
ds
fistps
pusha
adc
cmp
ja
int
test
daa
xchg
in
rclb
loop
pop
sbb
div
stos
pop
gs
fildl
pusha
ret
sbb
and
push
or
dec
jge
in
adc
jbe
scas
divb
out
daa
inc
cs
or
es
sahf
popa
jp
push
insb
add
cmc
sbb
xor
pop
cmpsb
push
cwtl
mov
cmp
stos
ja
lahf
push
loope
ret
mov
and
rcrb
in
dec
lea
loope
mov
scas
xorl
sub
leave
adc
mov
add
insl
inc
inc
add
or
push
stc
push
or
fisttpll
jle
dec
mov
pop
dec
rcl
dec
jns
adc
das
cltd
test
into
into
xchg
inc
add
ljmp
sbb
fidivrs
test
or
mov
or
mov
xchg
jne
jle
xchg
pusha
and
or
push
ljmp
imul
cmp
and
xor
cltd
in
shlb
rorb
pop
popa
sbb
loop
out
cld
popl
cmp
dec
int3
push
mov
push
jb
cwtl
mov
jle
stos
pop
inc
xor
out
in
lret
outsb
ficomps
cwtl
mov
sub
inc
test
mov
dec
sbb
rcll
cmpsl
aaa
dec
ljmp
notb
jb
sbb
pop
mov
loope
in
adc
sahf
scas
ret
inc
test
inc
sbb
jne
in
push
rolb
sbbb
pop
dec
xchg
lret
pop
mov
jno
insl
dec
adc
out
rclb
jnp
mov
sub
jns
out
std
shlb
jl
cmp
jmp
popf
test
aam
scas
mov
ds
lea
mov
cmp
xchg
sub
dec
push
into
repnz
rol
fnstcw
cmp
in
addr16
loopne
lock
jno
in
xchg
xorl
adc
sbb
daa
shl
or
xor
cmpsb
test
or
jns
cmc
lret
ss
sub
dec
or
mov
loop
sti
mov
mov
fisttps
in
pop
sbb
push
aam
mov
arpl
cmp
push
dec
call
pop
je
shlb
sub
push
xlat
xchg
push
push
lcall
mov
adc
jecxz
mov
jmp
mov
jg
and
imul
sub
pushl
or
loopne
adc
out
mov
xchg
xor
out
mov
pop
pop
pop
xchg
lods
imul
mov
pop
xor
xor
push
das
cltd
pop
into
js
sbb
je
aas
dec
jo
jl
out
sub
jne
add
test
xlat
xorb
sub
push
shlb
push
fadds
or
lea
add
inc
mov
stc
insb
adc
ffree
pop
cld
cltd
push
jle
adc
paddsw
int
mov
push
cmpsl
gs
lock
xor
dec
adc
mov
test
cmc
gs
mov
stos
aad
lds
inc
sub
jnp
std
jmp
cmp
lea
imul
test
lds
mov
jae
push
movsb
mov
pusha
repnz
mov
std
fisubrs
mov
cmp
sub
xor
sahf
rclb
xor
mov
add
es
pop
or
aas
cmpb
dec
loope
mov
and
push
test
ret
or
call
push
es
arpl
subl
mov
data16
mov
push
jae
ret
daa
cs
cmp
cwtl
lret
insb
push
cmpsb
ljmp
out
int
sub
pop
cmp
fs
pop
insb
out
dec
sub
xor
imul
adc
xorb
push
in
add
push
pop
test
or
in
push
mov
paddd
insl
fadd
mov
inc
or
outsl
dec
arpl
sbb
xorl
cmp
imul
or
roll
cltd
mov
inc
loop
cmp
testw
gs
imul
in
fsubrl
repnz
sbb
test
lods
insb
loop
inc
cmc
shlb
add
stos
clc
inc
std
inc
int3
stos
inc
mov
lods
out
inc
cld
arpl
orl
negl
xchg
fwait
in
adc
add
aam
push
loope
mov
shlb
mov
push
or
aam
sub
filds
loop
pop
dec
xchg
xchg
outsb
dec
faddl
xchg
fwait
jns
popf
int3
dec
mov
cmp
rorl
fcoms
js
cmp
into
es
leave
push
test
mov
xchg
inc
and
stc
pop
std
or
add
lahf
push
mov
js
fstps
mov
popf
pushf
mulb
aas
je
push
test
scas
imul
sub
adc
mov
int
xchg
test
sbb
rol
mov
and
xchg
nop
dec
fistpll
mov
bound
lret
lods
sbb
movsl
es
xlat
mov
out
and
test
inc
sbb
mov
pop
jle
sahf
call
sbb
cmp
fs
scas
mov
hlt
call
jecxz
jl
xchg
dec
and
or
in
push
jp
mov
xchg
dec
jge
stos
stos
and
inc
cmp
scas
into
pop
call
and
sarl
xor
push
push
jecxz
imul
mov
mov
pop
mov
inc
mov
inc
aad
xor
rcll
pop
enter
cmc
stos
sbb
out
dec
out
push
pop
sbb
lahf
xor
jno
dec
pop
mov
pushf
dec
mov
jb
xchg
ds
in
loope
inc
movsb
aad
pusha
outsl
push
int
inc
in
push
jmp
inc
mov
xor
mov
sti
hlt
scas
jo
push
ds
fmull
lret
mov
andb
iret
pop
pop
pop
sbb
insb
and
test
xor
nop
pusha
push
xchg
inc
xchg
mov
push
mov
clc
popa
into
and
int
and
int3
or
dec
xor
test
inc
lods
mov
cmpsb
into
dec
pop
addl
adc
and
insb
out
mov
jmp
jge
jg
lock
xor
xor
and
mov
es
inc
sbb
icebp
push
cmpsb
movsb
or
icebp
ljmp
fs
push
jae
stc
add
jge
or
jge
add
mov
std
pop
shlb
dec
mov
xor
ja
je
dec
loop
dec
out
cld
scas
push
insb
scas
pop
and
fsubs
dec
add
xchg
mov
dec
push
pop
sub
enter
fisubrl
lret
or
repz
lods
mov
or
test
xor
insb
mov
pusha
cmc
inc
push
push
fcoms
xor
push
inc
mov
into
mov
popf
cli
repnz
inc
pop
push
dec
insl
imul
adc
push
mov
in
mov
lret
pop
imul
and
mov
mov
inc
addr16
decl
or
add
pop
mov
ljmp
push
mov
inc
call
cs
stos
ljmp
jecxz
dec
imul
mov
pop
clc
add
sbb
jmp
cmc
ja
jp
lcall
insl
dec
cmp
fs
aam
mov
xchg
incb
inc
repnz
imul
movsb
adc
push
lods
inc
leave
xchg
mov
adc
movsb
or
or
outsb
and
cmpb
outsb
and
pop
loope
in
mov
pushl
shl
insl
pop
mov
mov
mov
mov
sub
mov
xor
ja
dec
ret
mov
lods
and
mov
or
ljmp
and
and
dec
mov
ljmp
js
cltd
scas
jmp
xor
aas
adc
pushf
hlt
inc
or
cmp
jecxz
imul
inc
outsl
lea
cs
mov
in
adc
test
push
jmp
jbe
into
in
mov
and
xor
sub
addb
int3
outsl
cwtl
in
lods
insb
cmp
add
push
and
outsb
xchg
adc
sub
es
ja
test
push
aam
push
ficoml
xor
jmp
ljmp
data16
out
repz
ljmp
rorb
sarl
cmp
repnz
lcall
sub
outsb
scas
push
cmp
sarb
push
xchg
jecxz
das
mov
lret
divb
xor
es
in
and
ss
push
adc
or
mov
xor
lahf
xchg
scas
addr16
jns
mov
aas
fbld
sub
jns
je
push
in
dec
lods
mov
daa
dec
mov
xor
inc
mov
pop
xchg
sbb
movsl
les
or
push
loope
jbe
inc
idivb
nop
mov
test
lea
push
xor
int3
sub
pop
xlat
rcll
out
pop
sub
cmp
xor
mov
arpl
inc
in
fidivs
iret
cmp
lcall
push
mov
flds
sub
sbb
xchg
sub
sbb
and
mov
es
aas
adc
popa
dec
lret
cmp
xor
mov
test
fisubs
outsb
or
das
lret
adc
int
addr16
inc
or
outsl
out
mov
mov
out
jl
or
daa
je
xlat
xor
cmc
int3
and
push
adc
sub
loopne
xor
pop
nop
es
sbb
push
xchg
pushf
and
stos
shl
arpl
mov
scas
inc
pop
xor
cmpsl
pop
mov
or
jae
cmp
dec
sbb
jo
addr16
nop
mov
rcll
in
faddl
inc
dec
mov
in
fistps
push
sbb
push
xchg
push
pop
mov
xchg
push
iret
xor
mov
dec
and
fstps
in
jo
xchg
cmc
jle
ljmp
xchg
mov
enter
push
je
jecxz
push
cli
mov
and
adc
jns
sub
push
aas
jae
or
stc
sub
xor
jns
stc
and
and
lret
repnz
das
rcr
aas
std
cmpsl
and
jge
insl
mov
add
lcall
jno
fucomp
imul
adc
and
daa
mov
mov
das
imul
lods
and
inc
xchg
pop
xchg
inc
jmp
fwait
mov
aam
sahf
xchg
jg
jnp
outsb
cmp
or
fs
and
pushf
test
ret
outsl
out
adc
cld
loop
cmp
cmp
push
lahf
js
nop
cmp
xchg
lods
call
inc
dec
cwtl
gs
popa
push
xchg
iret
sbb
sarb
int
lods
pop
push
js
and
jns
ljmp
mov
jae
dec
mov
cld
repnz
mov
sbb
inc
mov
and
cmp
mov
scas
xor
fsubrl
add
jle
sarl
ds
std
sbb
and
push
sahf
and
jne
arpl
test
add
sti
leave
or
pop
sarb
cmc
into
scas
aas
aad
pusha
aad
cltd
push
xlat
mov
and
push
mov
pop
in
adc
xor
adc
cmp
movl
dec
jl
fwait
popf
dec
testb
xchg
cmp
aaa
sarb
xor
shr
mov
in
hlt
xchg
or
sahf
jmp
lds
adc
aaa
into
test
stos
cli
dec
mov
repz
dec
cmp
cli
les
call
cmp
inc
dec
sbb
mov
push
or
nop
sub
sub
inc
mov
lds
insb
sub
sbb
popa
rclb
stc
sahf
iret
aaa
sbb
das
out
popf
cwtl
or
cs
into
xchg
mov
mov
xlat
lods
scas
add
lcall
js
sbb
ret
enter
outsb
jne
sahf
nop
ja
mov
mov
sahf
jl
test
in
sbbl
jg
jl
inc
mov
imul
push
sub
xor
lea
adcl
int
and
pop
cwtl
jmp
mov
jb
mov
sub
ret
lcall
dec
or
add
jne
js
jle
test
jb
shl
xor
jmp
lahf
cmp
inc
push
mov
adc
decl
into
iret
minps
int3
sub
jmp
mov
mov
lods
mov
loope
mov
pop
jecxz
pop
rorl
mov
and
aas
idiv
data16
mov
mov
cmp
mov
adc
pop
mov
hlt
mov
mov
call
push
icebp
inc
cmp
jmp
test
mov
and
sbb
leave
mov
aam
mov
xchg
adc
fimuls
adc
mov
jno
xchg
mov
mov
jle
sbb
dec
lcall
imul
out
loop
or
outsl
int
test
orb
ljmp
outsl
int3
cmp
or
aaa
test
sbb
and
xlat
orl
xor
or
jg,pn
fsubs
add
push
ret
xlat
jg
dec
je
mov
xchg
or
add
pushf
mov
dec
pop
xor
aam
hlt
add
pop
movsb
mov
leave
jp
and
call
push
roll
mov
fmuls
int3
xor
bound
scas
push
lret
loop
and
pop
ss
adc
ret
push
mov
mov
jne
jle
mov
ss
mov
loopne
mov
aad
push
or
mov
push
xchg
mov
cmp
pop
xchg
and
inc
jle
cmpsl
push
jecxz
das
out
js
mov
sub
insl
mov
fistl
sbb
cmp
movsb
cmp
cmpsl
push
adc
scas
iret
adc
loopne
inc
mov
scas
sub
sbb
sub
push
adc
sub
mov
push
lods
popa
stos
pop
mov
popa
sbbb
jge
test
push
push
fdivs
cmp
call
mov
cs
cltd
dec
cwtl
cld
adc
jbe
fisubs
movb
dec
push
lcall
cmp
sbb
xor
or
bound
or
mov
inc
pop
ret
pushf
mov
mov
push
outsl
jbe
insb
mull
in
mov
pop
pop
cmp
sub
nop
cmp
or
pop
jg
in
outsl
and
scas
jp
jo
js
out
loope
shll
fnsave
adc
js
ss
inc
xorb
stos
ret
ret
and
mov
xchg
xchg
and
jae
es
addr16
add
ret
int3
dec
mov
or
cld
xor
jle
or
jbe
test
movsb
mov
into
pusha
add
jnp
pop
clc
fidivl
je
push
cmpsb
sbb
test
add
lds
lds
add
jl
shll
or
mov
adc
enter
imul
cwtl
cmp
sbb
daa
repz
arpl
mov
mov
lret
add
inc
jns
in
cmc
sub
xchg
mov
lea
pop
rorb
add
int3
lcall
or
push
or
adc
cmp
push
push
rolb
int
mov
adc
dec
add
jnp
jbe
jnp
addr16
aaa
enter
adc
mov
fwait
dec
xchg
jbe
add
sub
repz
jle
sbb
push
cmp
lcall
es
pushf
cmp
testb
call
pushf
call
xchg
into
push
sub
frstor
xchg
bound
movsl
stos
leave
xchg
je
into
mov
push
push
xchg
fdivrs
rorl
scas
stc
mov
inc
jg
or
jno
mov
or
jb
js
mov
sub
sbbl
addb
rolb
pop
out
dec
testl
dec
aas
loope
add
aam
mov
push
push
into
test
or
insb
dec
jbe
cs
hlt
addr16
pop
insb
das
pop
outsb
xchg
sar
in
std
int
in
fdivs
jmp
or
in
sub
js
cmpl
loop
jecxz
out
adc
jge
pop
das
cmp
ret
orb
js
xchg
jecxz
lahf
push
jbe
mov
out
outsl
push
pop
xchg
push
push
iret
add
cmpsl
jb
xchg
push
insl
dec
out
add
incb
inc
fnstsw
stos
into
adc
xchg
das
bound
in
add
and
mov
xor
es
mov
es
jg
ljmp
cli
loop
pop
mov
in
mov
loopne
mov
mov
jge
or
aad
mov
nop
out
aas
mov
arpl
push
aas
lret
stc
mov
cmpsl
inc
clc
sbb
in
dec
negl
inc
repz
cwtl
daa
cs
ret
loopne
ljmp
mov
and
ljmp
mov
rolb
ja
sub
xchg
fidivrl
clc
mov
movsb
pop
pop
popa
pop
mov
ret
adc
sbb
add
xlat
inc
rolb
or
mov
shlb
decl
out
jb
pop
xlat
mov
add
mov
jae
dec
add
push
cmp
xorl
popa
cld
nop
fstps
cltd
push
xor
aaa
pop
cmp
cmp
jns
inc
or
cmp
xchg
les
and
jae
shll
cmc
and
in
pop
pop
orb
adc
cmp
addr16
cmp
dec
xlat
adc
mov
repz
frstor
test
sbb
mov
outsb
xchg
cmp
jb
in
adc
pop
aas
add
lock
adc
mov
decb
ljmp
jns
insb
adc
test
pop
popf
mov
mov
out
cmpsl
push
adc
cmpsb
test
lahf
adc
fbstp
fs
mov
push
notl
push
fwait
dec
nop
jge
adc
lods
test
mov
leave
xchg
inc
adc
incb
and
adc
push
jp
adc
sub
pusha
out
lods
sub
push
xchg
jnp
imul
out
shl
sub
push
imul
pop
mov
dec
stos
and
sub
mov
adcl
shll
cmp
pop
jge
fwait
stos
rolb
and
sbbb
pop
mov
xor
sub
add
adc
inc
aam
aad
mov
push
sub
rorl
out
dec
repz
mov
scas
ss
shrb
adc
cmp
adc
stc
xchg
rclb
dec
jae
inc
jge
pop
and
stos
outsb
push
sub
in
stos
sub
mov
xchg
rcrb
icebp
dec
addl
aas
js
daa
lret
push
andps
and
dec
enter
shrl
jge
cmp
or
pop
xor
sbb
iret
cmp
mov
cmp
orl
mov
mov
push
pop
inc
je
insb
cmp
jmp
imul
aas
dec
push
mov
sub
jp
fiadds
xor
arpl
cmc
or
or
jmp
insl
jae
and
lret
pop
xor
mov
adc
shrl
add
fbld
jb
test
mov
xor
add
cmc
lcall
jmp
popf
xchg
add
or
out
stos
xlat
movsb
shufps
clc
bswap
xorl
fsubs
mov
int
addr16
jno
add
fsubs
into
lcall
mov
sub
push
fs
pusha
jecxz
outsl
insl
loope
xchg
add
cmpsb
and
push
movsl
sub
adc
sbb
lret
jp
jo
cmc
idiv
dec
in
pop
xchg
mov
test
xchg
fwait
xor
mov
jne
mov
pushf
sbb
sub
cmpsb
mov
mov
xchg
add
fcoms
ss
imul
sub
cmp
std
sub
movl
sbb
mov
mov
iret
outsb
push
and
cmp
ljmp
xor
and
push
pop
sub
shrb
sbb
pop
push
push
imul
mov
cmp
mov
lretw
xchg
popf
lods
loop
mov
pop
insl
imul
clc
dec
jp
daa
lret
fidivrl
mov
popf
mov
adc
mov
out
and
clc
mov
pop
inc
rol
push
pusha
or
pop
jmp
cwtl
mov
xlat
cltd
push
mov
daa
loop
mov
jnp
les
or
stos
adc
mov
loope
lods
and
jmp
fs
dec
pop
pop
movsl
sahf
scas
cltd
int3
mov
mov
push
daa
cmp
and
sarb
sub
jle
jg
bound
stos
mov
pusha
pop
cmp
xchg
ss
int
mov
icebp
add
cli
stos
lahf
sub
cld
insb
jp
jmp
adc
addr16
mov
push
or
adc
sbb
ja
jno
push
pop
jmp
sub
scas
mov
mov
lock
pop
sub
or
out
movntq
jne
mov
test
loop
cmp
push
push
hlt
stos
cmp
xchg
popa
ja
lret
aad
gs
movsl
test
jb
inc
addb
movsbl
adc
or
jno
push
std
scas
adc
in
mov
hlt
xor
xor
mov
push
subl
xchg
mov
outsl
mov
jle
mov
cmp
pop
mov
dec
jbe
dec
int3
mov
dec
enter
fdiv
or
mov
and
push
jns
xchg
mov
pop
push
cmp
sti
adc
arpl
adc
xor
mov
add
mov
inc
xchg
frstor
adc
popf
xchg
mov
push
jg
dec
xchg
sub
dec
mov
and
mov
out
xchg
sub
mov
sbb
pop
or
cld
popf
movsb
cmp
shll
icebp
loopne
xchg
push
insl
pop
lods
sbb
jmp
push
jg
lahf
cmp
inc
adc
push
das
into
xor
in
dec
lret
add
mov
lahf
sbb
pop
imul
sahf
repz
push
add
int3
push
mov
dec
ret
pop
ret
jecxz
stos
adc
pop
movsl
jecxz
inc
jp
add
inc
dec
push
je
inc
xchg
mov
fs
sbb
mov
sbb
sub
sbb
cmp
adc
jno
mov
sbb
inc
xacquire
scas
test
cmp
inc
cld
xlat
roll
lods
lret
icebp
sbb
dec
lods
cmc
lret
scas
jb
jno
xor
dec
jb
test
adc
stos
sahf
dec
mov
lds
xor
push
jle
jbe
pushl
je
inc
out
stos
js
loope
cmp
mov
mov
cs
lds
enter
repnz
xchg
xorb
insl
mov
stc
or
stos
inc
mov
push
jg
dec
mov
sbb
xor
rcll
mov
ljmp
sub
push
dec
inc
stos
fnsave
int3
ljmp
lret
mov
inc
ja
std
repz
repz
sub
out
add
jo
pop
popf
jae
inc
add
mov
lret
es
pop
popf
jo
test
insb
inc
popa
les
push
jno
clc
lcall
je
test
lods
jge
and
je
sbb
test
push
fs
pop
fwait
jae
xor
imul
push
xlat
sbb
lods
callw
cmp
sarl
outsl
jns
int
jp
sbb
add
mull
inc
add
push
cmp
lea
sbb
mov
pushf
dec
inc
and
jl
cs
cs
sub
xchg
adc
call
cmp
xor
popa
or
or
aad
cmp
testb
and
pop
and
adc
in
xchg
aaa
shlb
adc
mov
orl
in
add
mov
mov
mov
inc
nop
add
test
movsl
jae
in
mov
push
out
in
cmpsl
mov
mov
aad
sub
jl
xlat
dec
stc
pop
sbb
xchg
sub
into
jmp
dec
shl
loope
in
xchg
mov
es
shlb
mov
dec
lahf
mov
pop
imul
imul
xchg
or
pop
pop
ret
xchg
jecxz
in
push
adc
push
adc
movsb
cmp
inc
push
jnp
into
lods
jb
jg
stos
test
lock
repz
adc
push
rcrl
ja
fstps
imul
shl
push
xor
and
dec
cwtl
sarb
and
scas
mov
lea
push
mov
iret
jns
out
cwtl
clc
mov
test
mov
push
aas
fwait
or
aam
push
lock
mov
sahf
jo
repnz
das
ds
out
bound
push
inc
xchg
mov
lods
inc
in
and
pop
jnp
aad
jp
std
pop
cld
ljmp
aaa
fs
cmpsb
xchg
incl
pop
mov
int3
push
mov
addb
les
push
lock
jge
lcall
repz
mov
popa
adc
mov
mov
cs
xor
test
mov
sub
mov
push
loope
xor
cmpsl
add
inc
ja
outsb
cmpsl
ja
cld
loope
adc
cwtl
xchg
mov
repz
dec
sbb
cmp
in
cmpsb
subb
push
push
xchg
add
movl
test
adc
into
inc
jge
mov
xchg
data16
loope
jmp
push
xor
mov
stos
jb
xchg
andl
push
int
sub
or
push
daa
push
fnstcw
cmp
test
out
mov
inc
xor
cmp
mov
int
filds
adc
cmp
rcl
testb
arpl
inc
or
leave
test
xor
ljmp
mov
push
ljmp
sti
mov
ja
xchg
pop
xchg
loopne
orb
inc
pop
xchg
dec
loop
fs
cmpsb
jns
pop
pop
dec
inc
sarb
adc
mov
sbb
pop
jno
push
sbb
movsl
ss
shr
or
incl
push
aam
aaa
js
or
xchg
pop
xor
dec
aas
dec
push
push
cs
ja
sub
mov
icebp
mov
movsb
ret
jle
loop
negb
insb
out
imul
loopne
or
push
into
mov
or
and
and
mov
push
add
inc
cmp
pop
mov
xlat
inc
add
mov
and
xchg
mov
test
sti
sahf
subb
pusha
hlt
jmp
mov
jle
cmp
stos
sbb
in
inc
fsubl
xchg
fwait
call
imul
movsl
jmp
xchg
or
dec
bound
xchg
adc
sbb
push
call
cmp
cmpsb
jle
lock
divb
test
sbb
push
movsl
loop
daa
sbb
mov
xchg
mov
add
lret
sbb
xchg
mov
fnstsw
push
test
jo
jne
pusha
dec
test
mov
xor
xchg
xchg
test
jno
lds
mov
cli
inc
test
sahf
mov
test
outsb
mov
jg
dec
pop
pusha
mov
mov
dec
lret
sub
rcl
das
sbb
test
int3
shlb
push
fadds
movsl
push
and
es
gs
lcall
mov
ljmp
xor
js
push
lock
js
lret
out
mov
repnz
push
mov
add
add
sbb
jmp
sahf
pop
out
addl
test
in
jnp
mov
dec
jbe
mov
cmp
cmc
pop
enter
mov
repnz
dec
testl
inc
jmp
test
sti
push
popa
mulb
push
test
or
loopne
sub
add
mov
xchg
push
and
sahf
daa
xor
mov
push
jo
push
xor
jb
in
stc
mov
sahf
ror
adc
jp
jae
repz
fwait
lret
sarl
and
fwait
jg
mov
mov
add
adc
pop
ret
fisttps
in
push
add
xchg
pop
out
add
pushf
repz
pusha
add
cmp
adc
lods
add
je
pusha
arpl
mov
aad
adc
xor
arpl
pop
pop
mov
push
outsl
pop
cli
push
pop
inc
push
xchg
xchg
jbe
xor
loope
sbb
sub
pop
dec
rclb
mov
rolb
mov
icebp
adc
lcall
xor
pop
aam
jns
mov
mov
das
mov
lods
mov
jg
sbb
mov
mov
jge
pop
or
add
push
test
sti
mov
add
les
sbb
repnz
jecxz
sti
push
fsubrs
ja
pushf
jmp
leave
push
mov
testb
test
sbb
div
dec
loop
sub
enter
loop
int3
les
mov
push
adc
dec
and
cld
lock
nop
jp
sub
and
push
jne
out
fisttps
rolb
enter
ss
cltd
sub
fisttpll
mov
or
or
pop
mov
idivl
imul
testb
bswap
cmp
pop
pop
mov
ljmp
mov
cld
sub
test
data16
loope
mov
adc
push
dec
out
nopl
dec
xchg
xchg
pusha
stc
cmp
cmc
mov
dec
ret
fucomip
cwtl
inc
scas
int3
fcompl
dec
jae
mov
cmp
jae
sbb
push
sub
cmp
cmp
and
pop
xchg
mov
aas
cmp
xlat
mov
sbb
mov
test
or
inc
std
popa
popf
adc
aam
popf
fnstcw
seto
mov
fs
and
aad
popl
xorb
icebp
lock
cmpsb
mov
mov
sub
mov
mov
mov
hlt
sbb
mov
xchg
test
push
or
and
and
cmp
movsl
mov
adc
xor
dec
fists
mov
sub
xchg
add
bound
sbbl
inc
lea
rclb
push
adc
sub
xchg
push
dec
pop
sub
loopne
std
dec
sub
and
insl
cmp
loope
or
inc
jo
test
pop
mov
std
mov
xchg
insb
icebp
jg
xchg
mov
pop
dec
js
je
mov
fwait
loope
imul
mov
and
pop
int3
aaa
mov
cltd
push
mov
fdivs
dec
movsb
movsb
mov
xchg
ficomps
ja
cmp
hlt
ret
jno
jg
pop
out
fscale
xor
outsl
xor
testl
in
std
adc
enter
mov
push
loope
mov
movsb
inc
sub
adc
test
loope
or
mov
jnp
sbb
sub
ja
xchg
rol
sub
scas
push
push
dec
xchg
or
loop
jecxz
jmp
movsl
add
rorb
jb
or
mov
stos
daa
xor
lock
les
lcall
ds
sub
mov
andb
push
fistl
mov
and
shll
inc
std
mov
in
sbb
xchg
add
xlat
jb
dec
jl
mov
cli
scas
push
jle
imul
loopne
scas
or
pcmpgtw
ds
push
pop
cmp
dec
sar
mov
sarl
xor
lret
stos
enter
daa
jnp
bound
dec
leave
hlt
mov
sub
push
imulb
insb
mov
out
test
cmpsl
in
xorl
dec
add
sbb
scas
xchg
sti
sub
mov
dec
lock
mov
mov
inc
fcompl
mov
repz
loop,pt
mov
hlt
lock
adc
jle
mov
lahf
add
xchg
idivl
push
int
and
dec
sbb
push
testb
push
scas
xchg
push
push
fstps
bound
xchg
cmp
push
fisubrs
and
jbe
push
out
adc
mov
cmp
jmp
dec
imul
or
cmpsl
jne
rorl
pop
les
cmp
mov
dec
in
mov
push
paddd
mov
jae
xchg
movsb
and
call
mov
cwtl
test
and
pop
mov
jns
lock
xor
jg
xor
cmp
xchg
mov
mov
mov
inc
inc
cmp
push
mov
xlat
scas
pushf
fs
xlat
lcall
add
push
dec
nop
test
sbb
ss
sbb
pop
cltd
jecxz
mov
movsl
leave
scas
enter
push
ret
mov
push
fsts
insl
add
mov
jb
jae
xor
test
mov
inc
xchg
mov
xlat
xor
repz
push
inc
xchg
adc
ljmp
sti
inc
daa
inc
xchg
inc
inc
stos
lea
pop
pop
jg
add
xchg
arpl
ret
fiaddl
pop
push
cmp
cmp
xchg
dec
idivl
ss
inc
orb
dec
xchg
push
jnp
das
lods
fldt
fmul
push
icebp
test
push
jb
data16
add
push
rclb
jp
test
je
in
dec
mov
fstpl
adc
push
hlt
repnz
dec
pop
bswap
out
nop
fdivrl
das
mov
imul
xchg
in
popa
jne
mov
cmc
int
daa
andl
test
int3
fcomps
inc
or
lahf
pop
sub
dec
movsb
lods
inc
mov
cwtl
loope
les
fs
out
or
jnp
sbb
xrelease
insl
mov
sbb
cli
adcl
cmpxchg
jg
sub
push
into
xchg
and
jmp
aaa
mov
in
add
jbe
js
xchg
sub
jae
mov
mov
aaa
mov
repnz
insl
pop
enter
push
sbb
das
and
lahf
test
jno
icebp
lret
gs
pushf
test
sbb
je
cmpsb
dec
mov
roll
repnz
fs
icebp
orl
ja
push
adc
mov
call
js
adc
ss
mov
inc
mov
push
adc
ljmp
int
sbb
fldcw
push
ret
test
mov
push
shrl
mov
int
lea
sub
jnp
bnd
pop
jmp
aaa
mov
inc
push
lahf
fsubr
dec
mov
push
pushf
push
mov
ja
or
call
sbb
mov
scas
in
xchg
inc
adc
sub
mov
pusha
add
pusha
pop
xor
push
pop
or
sbb
dec
push
dec
and
cmp
jo
test
test
push
lcall
ja
jno
inc
lret
jl
arpl
add
xchg
popf
in
push
add
cld
adcb
mov
inc
jnp
leave
mov
rcrb
cmp
mov
sbb
subb
jecxz
dec
sub
xor
jp
dec
push
mov
jno
push
sbb
popa
lods
jo
cmp
sbbb
jp
insl
add
lds
clc
or
sbb
add
mov
ror
popf
in
lret
aam
outsb
dec
or
pop
fistl
inc
sahf
pop
repz
xchg
lock
pop
popa
lahf
jge
xchg
mov
stos
mov
rorb
mov
sub
outsl
cmp
mov
adc
pop
cmpsl
test
pop
push
or
lods
fstpt
xchg
adc
imul
cltd
movb
stc
cmp
addb
scas
cmp
out
stos
js
cwtl
pop
ja
cmp
xchg
xchg
lcall
cmp
cmp
nop
push
ficompl
mov
add
cmp
mov
popa
mov
gs
mov
sub
xor
mov
pop
sub
and
xchg
and
mov
fbld
mov
outsl
lret
fidivrs
loop
mov
mov
push
in
mov
push
push
test
or
int3
mov
cmpsb
pop
xor
inc
shr
stos
iret
add
mov
cmp
jno
and
mov
and
test
jp
call
popa
jne
lcall
repnz
pop
insl
cmp
mov
in
dec
add
mov
or
mov
pop
pop
jns
jp
mov
fsubrs
shlb
pop
mov
sbb
loope
outsb
mov
push
jle
idivb
sti
repz
jmp
xor
inc
add
data16
mov
mov
push
enter
xor
xchg
sub
enter
mov
and
loopne
push
sub
test
adc
aas
hlt
adc
stos
xchg
movb
or
ljmp
rcr
repnz
mov
mov
ret
mov
push
pop
testb
xchg
das
sbb
lcall
mov
popa
push
ret
js
xor
ficomps
out
sub
enter
arpl
iret
sub
ss
jnp
jmp
sub
testb
loopne
insb
out
push
xchg
mov
jb
ja
cmc
xor
pop
es
pusha
push
mov
insl
xchg
push
dec
push
inc
mov
imul
inc
adc
mov
mov
adc
jge
pop
out
adc
jmp
mov
adc
ret
movsb
das
pop
aaa
push
fwait
out
xor
mov
fimuls
ficoml
es
mov
testb
sti
cmpsb
pop
and
imul
out
out
xchg
xchg
bswap
jp
fdivr
push
outsl
mov
and
pop
dec
jno
and
leave
jno
or
or
std
xchg
addr16
xchg
and
jno
scas
adc
xchg
cld
dec
shl
cmp
addb
cmp
in
stc
mull
js
xlat
sti
iret
popa
adc
dec
popl
jmp
sbb
in
xor
push
aad
lods
inc
and
in
cwtl
mov
or
cs
cmpb
lret
xchg
or
sub
xchg
mov
fldenv
sbb
fbstp
test
jb
xlat
xor
cmp
mov
cmp
stos
jne
aaa
mov
mov
outsb
bound
inc
outsl
dec
adc
push
pop
inc
jb
adc
das
sbb
lret
sbb
shll
xlat
rorl
xor
test
adc
jbe
int3
adcb
imul
mov
bound
out
add
das
cs
mov
mov
rorb
inc
adc
jmp
and
lds
lret
rorb
les
dec
aaa
jp
cmp
ret
mov
xchg
adc
xchg
xor
mov
out
push
inc
lds
icebp
xor
push
cld
pop
mov
cli
pop
xchg
cmpl
mov
imul
outsl
jbe
iret
cmp
cltd
jno
pop
jae
lds
repz
mov
out
pop
pop
rcll
jmp
pop
xchg
jg
test
mov
xchg
addr16
xor
mov
cmp
add
loopne
jne
fists
ret
mov
mov
ss
icebp
xor
mov
insb
lds
fcoml
ret
inc
pop
cli
jmp
xchg
in
xchg
mov
hlt
in
jbe
test
pshufw
f2xm1
roll
ss
xchg
into
add
popa
pop
cmp
stos
fsubl
mov
inc
rol
xchg
aam
mov
push
js
ret
hlt
or
fsubr
jge
mov
adc
pop
jns
or
pop
enter
test
leave
mov
mov
push
xor
out
imul
and
jp,pt
dec
jbe
testb
and
leave
sahf
repz
pop
dec
cmp
mov
fisubl
bswap
stos
rcrb
ret
cmp
scas
adc
mov
dec
mov
jnp
sub
add
xchg
or
pop
loop
add
add
jo
mov
movsb
in
or
xor
insb
arpl
into
ret
xor
nop
aad
xor
pop
fadds
outsb
shrb
les
adc
cmc
pop
fmull
ss
mov
sub
mov
sub
rorb
test
lea
xor
xchg
jmp
loope
cs
out
push
lea
add
xchg
and
mov
into
mov
pop
testl
lret
dec
je
jns
mov
xor
and
or
out
sbb
enter
loop
add
in
shll
mov
fidivrs
dec
repz
cmp
push
dec
inc
push
dec
inc
inc
pop
clc
jg
mov
add
test
daa
lret
aas
xchg
pop
movsl
scas
jmp
jp
mov
fistps
adc
fisubrl
test
sub
or
das
cmpsl
iret
dec
sub
sbbb
add
push
iret
sbb
enter
stos
push
jns
push
jmp
xor
push
jg
sti
pop
pop
pop
inc
movsl
jnp
jl
xor
cld
pop
fmul
cli
lret
rcll
mov
cltd
cmp
jne
inc
es
inc
daa
xchg
jb
ljmp
adc
xor
xor
in
out
or
jno
cmp
or
cs
lret
leave
ret
cmc
mov
pop
call
cmp
cmp
test
in
dec
scas
shrl
scas
sub
or
test
pop
pushf
xor
sub
addr16
pop
lds
lcall
cmpb
lea
test
hlt
and
in
mov
callw
shrl
insb
scas
cmpsb
mov
mov
cmp
cvtps2pd
dec
data16
dec
pop
shlb
mov
push
rorb
icebp
les
aad
mov
inc
insb
lods
jg
je
lahf
aas
in
mov
cmp
mov
out
and
xchg
arpl
fiadds
jbe
outsl
sbb
jae
push
cltd
adc
dec
cmp
scas
push
jb
sbb
xchg
sti
mov
jns
stos
jno
or
lds
pop
sbb
mov
push
mov
push
push
in
pusha
aam
lods
pop
shll
push
sarb
hlt
sbb
roll
scas
mov
dec
jne
dec
ret
test
push
cmpsb
dec
fidivl
jp
test
push
or
insl
and
fisttps
mov
inc
mov
lds
pop
mov
and
loopne
aad
xchg
fistpll
lds
jne
xor
pushf
addb
je
push
cvtdq2ps
nop
adc
cld
sahf
inc
test
lahf
adc
orb
inc
mov
cli
sub
in
idivl
mov
mov
stc
leave
mov
cld
ss
fmuls
jne
and
insl
mov
dec
jbe
jb
lahf
push
notb
xchg
call
inc
outsb
nop
fwait
and
inc
xor
fdivr
enter
jns
pop
jo
mov
fs
mov
inc
test
loopne
hlt
mov
xchg
cwtl
cs
pusha
in
jp
or
push
aam
mov
fiadds
sub
jg
test
vorps
add
data16
mov
dec
sarb
lcall
inc
push
outsl
shrb
call
adc
mov
lock
ja
repnz
jp
mov
jp
pusha
ret
jmp
shrb
pop
pop
aas
fwait
xchg
repz
add
les
mov
test
mov
mov
call
sbb
cs
das
push
xchg
cmp
mov
lret
addr16
pop
popf
push
call
nop
sbb
data16
fs
mov
add
or
jbe
jl
arpl
sub
pop
out
xchg
adc
push
and
cmp
and
mov
cmc
xor
int3
cs
adc
mov
mov
popa
cld
or
xchg
xor
int3
je
rcrb
stc
add
inc
pop
pop
sub
add
aad
dec
into
call
push
std
jge
jb
subb
inc
jns
dec
cli
adc
xchg
xchg
push
lret
inc
push
out
dec
cmc
notb
fdiv
jg
or
jb,pn
inc
aad
addr16
pop
pop
call
pop
mov
lods
aaa
shrl
mov
mov
loopne
js
outsb
in
cmpb
popf
popf
rcrb
cld
les
add
stc
lret
jecxz
pop
out
pop
cltd
xchg
pop
dec
imul
js
test
mov
in
test
pop
fwait
jo
into
push
sbb
test
adc
mov
or
jns
add
xchg
movsb
scas
and
daa
fs
sbb
stos
mov
outsl
add
test
mov
push
xor
in
stos
push
aas
ret
out
aam
in
jo
pop
and
lods
sbb
or
and
loop
mov
pop
mov
std
or
cmp
clc
scas
or
imul
mov
pop
pushf
jg
iret
pusha
xchg
or
out
ret
dec
cmp
lret
mov
lods
cmpsl
les
cltd
rcll
mov
and
pop
test
dec
xlat
and
fldl
insb
int
mov
mov
and
inc
sub
pop
mov
push
test
stos
mov
jl
sub
xlat
movsl
adc
scas
imul
push
mov
mov
and
or
pop
jne
mov
push
gs
sub
iret
lahf
loop
js
sub
leave
add
orb
xchg
add
mov
mov
adc
xchg
push
call
fbstp
je
inc
xor
pop
jg
and
push
mov
pop
in
aaa
addl
push
outsl
adc
sub
test
cmp
jg
out
push
lahf
imul
fwait
inc
jp
rcrb
mov
rcrl
jle
int3
pop
js
and
adc
leave
sahf
mov
dec
lods
jl
leave
shl
lods
movsb
cmp
fisubl
xchg
mov
cmpsl
mov
jmp
mov
stos
mov
mov
dec
loop
test
pop
mov
sbb
adc
jg
cld
rclb
nop
nop
cs
fisttps
scas
jnp
inc
sbb
cs
inc
and
cltd
repnz
pusha
push
cmp
sarb
lods
ret
loop
mov
int
repnz
jo
xor
cmp
out
rcrl
lods
cwtl
es
shr
sbb
scas
mov
xlat
adc
mov
loope
xchg
push
movsb
mov
jle
test
jo
scas
ja
jmp
popa
idivb
mov
test
xchg
ljmp
and
and
fidivrl
enter
lcall
scas
scas
lret
pop
lods
push
leave
mov
sbb
push
jne
iret
mov
ljmp
loopne
push
push
mov
pushf
in
fnstsw
push
or
dec
aad
mov
ds
pop
add
shl
mov
xor
je
jl
lods
jno
inc
dec
testb
mov
pop
mov
test
inc
aad
stos
js
dec
nop
push
pop
call
fcomps
std
imul
sub
cs
pop
and
adcl
add
fsubrl
push
xchg
repz
jbe
inc
sti
xchg
mov
and
mov
pop
dec
sub
sub
inc
mov
les
shll
xor
mov
arpl
dec
pop
stos
sub
lds
addr16
pop
ficomps
pop
mov
and
test
repz
das
sbb
orb
adc
mov
mov
xor
gs
pop
and
mov
mov
ja
add
pop
sti
cmc
cmp
stos
add
outsl
pop
jp
xor
xchg
imul
dec
pop
clc
jge
dec
mov
or
ficoms
data16
push
jno
mov
push
mov
xchg
cmpb
xor
lds
loop
add
std
pop
loop
jbe
xor
stos
rcr
call
mov
testb
jno
std
fwait
xchg
push
mov
mov
and
inc
xchg
or
loopne
cmp
cmp
mov
in
push
mov
mov
pop
stos
lret
outsl
int
loop
add
out
xchg
adc
enter
mov
incl
inc
dec
fmuls
rolb
push
inc
push
cld
xchg
ret
test
jmp
mov
aaa
add
in
sahf
adc
repnz
mov
sbbl
or
stc
mov
and
add
or
imul
and
jecxz
pop
aas
xlat
jp
sub
jbe
sbb
loop
sub
aad
std
cmp
or
shrb
in
jo
lds
movsl
add
xor
cmp
lock
mov
rcl
jae
scas
sub
es
std
and
fbstp
mov
cwtl
mov
sbb
insb
jmp
push
pop
incl
outsb
int3
imul
hlt
inc
pshufw
data16
ja
mov
test
pop
out
cmp
xchg
fwait
negl
in
out
mov
jmp
repnz
ss
push
adc
mov
mov
push
jns
movsb
mov
mov
push
scas
lds
jecxz
int3
xchg
or
mov
mov
cmp
out
dec
sti
push
add
lock
push
movsb
shll
jo
push
inc
mov
stos
xchg
push
in
adc
test
push
outsb
add
lret
pop
daa
sub
jb
xor
sbb
mov
dec
adc
jmp
pop
jg
or
decb
iret
shl
dec
inc
dec
jmp
outsl
pop
jle
mov
jns
js
daa
add
stos
and
stos
mov
mov
mov
sub
in
dec
xchg
mov
test
mov
shll
fisubrl
push
jae
inc
dec
lret
and
dec
addb
popa
dec
dec
push
pop
lea
lods
xlat
mov
insb
cwtl
mov
rcrl
push
outsl
mov
push
xchg
lcall
push
jnp
mov
xor
cmp
inc
shrl
push
and
push
cs
sub
bound
cmp
push
mov
ret
loop
fwait
xlat
mov
lahf
and
cmp
add
push
lea
sahf
inc
jmp
shl
aam
aas
and
xchg
xchg
mov
bound
fcmovnu
mov
scas
mov
or
std
std
fidivl
xor
xor
lods
push
xor
enter
inc
cmp
jno
xor
outsl
sbb
inc
je
andl
hlt
pop
out
repnz
xor
in
adc
mov
mov
sub
clc
fidivs
and
fwait
sahf
mov
loop
mov
ja
add
ss
into
xor
push
jmp
push
mov
lret
jmp
lahf
outsl
lahf
adc
in
cmp
nop
and
dec
negb
insb
je
jmp
inc
and
push
and
into
jnp
test
add
aas
add
bound
inc
xor
adc
xchg
insb
loop
or
cmp
popf
das
stos
xor
jb
fs
push
push
jae
in
outsl
pop
shlb
push
pop
and
lods
mov
dec
outsl
iret
loop
in
sbb
push
push
add
cmp
add
mov
and
pop
push
cltd
xor
stc
adc
add
fistpl
pop
cli
shll
jo
and
insl
pop
mov
clc
add
cmp
shrb
iret
push
clc
icebp
cs
rcr
nop
sbb
jl
negb
aas
loop,pt
lahf
mov
jae
icebp
push
popf
sbb
ljmp
movsb
ret
stos
stos
or
lret
shrb
mov
xor
xchg
and
xchg
in
adc
fsubrp
jmp
cmp
sahf
xchg
xadd
push
dec
loope
cld
scas
jnp
fdivs
sbb
fcomip
xchg
mov
enter
loop
mov
pusha
lgdtl
xchg
sbb
sub
xor
or
add
sti
pushf
imul
mov
sub
fldenv
mov
jns
pop
inc
or
adcl
jno
scas
xor
add
sbb
mov
stos
lret
loope
push
push
add
das
jle
dec
fwait
mov
or
les
testb
js
data16
incb
adc
jge
and
loope
mov
sub
nop
and
mov
loope
outsb
sbb
lds
outsl
aad
or
mov
inc
insb
lret
push
arpl
push
or
scas
lock
jmp
dec
mov
subb
xlat
int3
divl
insb
sub
and
fiadds
xchg
push
fisubs
scas
add
jb
xor
call
cmp
outsl
mov
jl
jecxz
std
into
jp
mov
aam
push
push
je
bound
jg
jno
inc
push
jl
inc
add
mov
sysexit
aam
sub
cltd
cwtl
jae
xor
and
lret
andb
mov
push
pop
movsb
out
divl
lea
pop
je
in
test
sub
cmc
lods
ja
dec
and
repz
subb
rcll
sahf
out
pushf
stc
ret
mov
push
add
ret
add
jns
mov
cmpsb
imul
imul
outsb
subb
stos
sbb
mov
add
notl
loopne
jbe
in
daa
sbb
fldpi
adc
negl
xor
and
fs
pop
push
push
xchg
push
fwait
xchg
rolb
hlt
into
shlb
mov
dec
popf
clc
push
xchg
fwait
mov
pop
sbb
shl
jle
jno
ja
pop
mov
jb
pop
stos
mov
sti
fists
sub
push
leave
call
adc
inc
push
jmp
push
movsb
imul
rolb
jl
nop
xor
fstpt
push
pop
inc
inc
es
es
jecxz
cwtl
aas
lcall
cmp
in
jb
xor
icebp
out
in
xor
lods
cs
sbb
fst
movsl
sahf
lods
push
lahf
pop
stos
fidivrs
popa
or
mov
lret
jns
and
stos
out
and
xchg
out
mov
adcb
and
adc
add
xchg
and
test
jge
and
mov
and
out
mov
xor
adc
mov
pop
mov
jb
xchg
lods
push
daa
lret
mov
mov
mov
sub
xor
loope
movsl
xor
stos
test
pop
js
test
push
pop
jmp
push
mov
xchg
lods
mov
sbb
mov
addl
push
push
lcall
xchg
mov
mov
cmp
mov
mov
lret
decl
push
cmp
imul
imul
out
int
test
rcrb
aaa
leave
pop
sti
test
and
addr16
mov
insb
imul
iret
into
loope
or
test
push
out
adc
mov
cmpsb
je
test
sbb
mov
inc
xor
sbb
cmp
cmp
adcl
jmp
loope
sbb
int3
jl
mov
flds
insb
push
ret
and
daa
shll
pop
mov
jb
adc
ret
mov
jg
aas
xchg
sub
xchg
ret
pop
mov
jne
mov
rol
sub
les
xchg
or
jle
shrl
push
dec
stc
popa
cwtl
cli
push
jg
inc
mov
or
mov
pusha
fisttpll
loop
data16
inc
sub
push
sub
popf
das
stos
bound
push
stos
es
stos
nop
add
and
mov
jno
rep
sub
inc
popf
mov
lods
iret
jp
and
mov
data16
imul
and
dec
sub
int
sbb
dec
xor
adc
inc
sub
add
mov
xchg
jo
lods
dec
mov
out
cmp
shl
pop
fsubrl
mov
ror
and
addr16
and
repnz
mov
data16
push
add
mov
push
dec
lods
sahf
jns
and
mull
push
sbb
imul
push
les
ss
fisttps
rclb
movsl
xchg
push
daa
adc
xchg
je
inc
jecxz
xchg
xchg
xlat
popl
lahf
dec
shll
test
xor
mov
jbe
mov
xor
outsb
leave
or
cs
cltd
sub
inc
sahf
adc
lret
xorb
mov
pop
gs
xor
aas
sbb
inc
dec
jne
jle
lods
lods
sbb
or
fwait
adc
xchg
mov
pop
sub
mov
mov
cmp
xchg
daa
cmpsl
xor
fsubrl
sbb
cli
sbb
addr16
pop
and
sub
mull
pushf
enter
insb
push
jb
cmc
mov
add
stos
push
stc
pop
movsl
in
fimull
inc
or
sbb
stos
cld
cmc
arpl
insb
xchg
int
int3
loopne
lcall
cmpsb
clc
fsts
loop
or
shl
jecxz
ds
bound
mov
inc
data16
push
or
inc
cld
jl
lahf
sub
mov
mov
mov
movsb
mov
pop
aad
add
sbb
dec
arpl
mov
xchg
popa
mov
pop
cltd
idivl
xchg
js
inc
xor
pop
icebp
cmp
out
lahf
mov
rcrb
ds
sbb
lret
decb
int3
aad
pop
fdiv
and
rcrb
mov
push
clc
insb
lods
inc
stos
xchg
push
pushf
mov
fists
int
lcall
cltd
add
fidivrs
mov
cmc
jl
int
add
add
icebp
sub
subb
push
or
cs
cmc
inc
inc
xchg
push
lds
lods
shll
test
aaa
sub
mov
jb
or
mov
push
in
jne
ret
dec
push
mov
xchg
leave
inc
cmc
scas
add
test
sub
std
icebp
aam
idivb
test
out
stc
outsl
push
divb
jmp
fwait
adc
cmp
xchg
adc
orb
mov
jb
fiaddl
xchg
cwtl
ljmp
es
repnz
pusha
orb
xchg
bound
pop
cld
je
and
hlt
lea
cltd
leave
xchg
test
in
or
sbb
dec
jnp
je
xchg
jp
sub
or
pop
lret
sbb
cld
mov
dec
and
pop
xchg
enter
mov
dec
mov
xchg
pusha
xor
jge
lods
push
jne
stos
sbb
gs
inc
bound
push
pop
scas
cld
popa
inc
xor
into
xlat
push
popa
sub
icebp
test
xchg
test
or
mov
pusha
mov
mov
fiaddl
and
push
inc
sub
push
shrb
or
pop
mov
cmp
fwait
ret
pop
mov
and
cs
mov
in
inc
mov
pop
jmp
push
hlt
xor
cmp
ror
pop
enter
mov
jb
inc
inc
shll
fbld
enter
cmp
mov
cmpb
pop
jo
in
test
mov
jmp
shlb
cmp
mov
andl
mov
jecxz
inc
test
mov
fildll
js,pn
dec
inc
push
sbb
cmp
sub
xchg
mulb
sahf
jbe
out
out
mov
mov
add
aad
sbb
int3
test
fiaddl
cwtl
mov
scas
or
pop
fsubrl
lahf
mov
sahf
jmp
aaa
stos
mov
push
or
xchg
pop
push
sub
loope
clc
shlb
cmp
xor
imul
sbb
test
cli
in
push
push
rcll
daa
mov
hlt
inc
xor
add
inc
insb
gs
imul
xchg
mov
add
subl
mov
mov
fs
jno
ds
mov
popa
icebp
out
int3
xchg
test
sti
pop
add
fsubrl
sbb
jno
dec
push
sbb
cltd
out
dec
loope
testb
imull
mov
sbb
pusha
inc
lds
in
test
fldcw
shl
pop
xor
insl
cmc
fnstcw
shrb
mov
call
xchg
dec
mov
in
repz
and
mov
lret
pop
mov
xor
adc
add
test
mov
and
xlat
leave
movb
lock
psrlq
push
data16
jne
pop
cmc
outsb
mov
repz
and
stos
jnp
xor
scas
or
adc
xorb
out
push
cltd
ss
subl
inc
mov
adc
add
outsb
lods
repnz
pop
xor
mov
mov
sub
int3
add
dec
dec
mov
and
or
pop
jg
in
sub
sbb
fistl
jmp
xor
lcall
xorl
fdivrp
mov
rclb
push
leave
in
cld
inc
inc
xchg
es
das
mov
and
fdivl
add
add
test
pop
mov
cmpsb
lcall
std
jmp
dec
jo
sub
std
pop
inc
or
and
inc
or
mov
push
mov
sub
les
mov
jg
rol
ficomps
fwait
dec
repnz
xchg
add
add
fiaddl
xchg
or
out
push
jb
cmp
enter
test
sub
std
out
pop
add
sbb
mov
fistpl
outsl
adc
cwtl
mov
push
aaa
mov
adc
mov
add
dec
test
mov
das
jb
mov
lods
frstor
cmp
mov
push
es
dec
sub
fsubl
lcall
pop
or
jbe
push
aad
mov
out
push
jge
xchg
sub
ja
jmp
loopne
mov
cmpsb
int3
cmp
pushf
out
daa
cmp
stc
addr16
inc
loope
popa
jp
cld
data16
add
sbb
xor
lods
mov
aaa
jns
in
xchg
sub
xor
mov
ljmp
xor
out
call
xchg
jne
jae
add
loopne
lock
insb
xor
sub
in
dec
imul
and
cli
arpl
push
scas
jmp
cmp
sub
xchg
iret
or
add
in
mov
fmul
fstl
rcl
or
test
test
add
insl
std
mov
je
and
sbb
movsb
pop
add
dec
mov
jns
mov
shlb
pop
or
cmpsb
stos
jae
jg
cli
inc
dec
mov
cli
push
ret
adc
loop
mov
test
loop
or
imul
mov
mov
loop
xchg
test
test
dec
cmp
aam
repz
lea
cmp
xor
pop
mov
jne
mov
push
fstpt
fcmovb
pop
insl
and
fcoml
mov
inc
ret
hlt
mov
test
mov
dec
sar
aam
movsl
call
fistpll
jecxz
or
imul
es
jae
out
add
xchg
mov
and
xlat
dec
adc
into
les
push
popf
pop
lds
mov
pop
mov
or
mov
push
insl
enter
dec
or
adc
cmpsb
lgs
aaa
push
ss
cld
ds
jno
xchg
jge
mov
jo
leave
push
inc
lcall
cltd
push
push
xor
les
mov
xchg
or
mov
lods
adc
fwait
lahf
mov
inc
mov
jno
mov
sbb
mul
inc
adc
fstps
loop
lods
js
movsl
xchg
inc
je
out
jge
inc
mov
xchg
jnp
ficompl
les
int
push
push
adc
icebp
outsb
shl
pop
addr16
icebp
push
sbb
mov
adc
pop
imul
pop
mov
pushf
mov
pop
push
ss
push
mov
pop
lahf
adc
pop
fcompp
gs
cltd
dec
fisubs
and
fwait
daa
out
xor
pushf
mov
popf
inc
lods
pop
cmpsl
cld
enter
jae
out
loope
cmp
popa
dec
sbb
push
test
mov
pop
shrb
sub
ret
add
lcall
repnz
sbb
pop
lret
fmul
or
cwtl
pop
mov
jl
cli
lcall
ret
mov
in
xor
js
pop
movsb
cmpnleps
mov
sbb
push
pushl
dec
lds
mov
cmp
mov
jne
adcl
fs
mov
pusha
scas
mov
add
cld
cld
fwait
shll
xlat
daa
mov
or
push
or
sub
sahf
jo
xchg
cmpsl
xor
mov
loop
lea
bound
rcrb
hlt
iret
pop
mov
jecxz
xchg
test
xchg
pop
ret
dec
mov
xchg
adc
mov
lock
fisubrs
es
jl
hlt
out
mov
xor
pop
pop
sbb
mov
or
add
lret
adc
dec
inc
fcmovnu
or
lea
jecxz
xchg
jmp
loop
dec
adc
cltd
addr16
rcl
mov
scas
mov
ljmp
insl
inc
lods
adc
jne
movsl
jmp
js
mov
sub
in
add
insl
test
fcmovne
fstps
pop
xchg
push
sub
cli
sti
pop
jle
test
xchg
pop
lahf
jmp
in
inc
push
daa
loopne
sub
pop
lea
test
stc
pusha
das
gs
repz
out
sub
iret
mulb
cmp
mov
cmpsl
loopne
pop
xor
movsl
cmp
js
insl
cmp
cld
int3
fdivl
lea
push
inc
mov
or
mov
adc
xchg
dec
fimull
sbb
dec
fwait
lret
dec
out
rorb
jle
dec
xor
adc
lahf
mov
daa
or
lret
stos
rcll
or
in
icebp
push
xchg
cmp
mov
cmpsb
movsb
jmp
cld
pushf
test
adc
xor
hlt
out
adcl
icebp
out
jae
cmp
sbb
gs
cli
sub
repnz
jae
xor
insb
ret
in
stc
sbb
mov
jle
mov
test
push
aaa
add
lock
mul
les
and
iret
jns
mov
stos
lods
inc
aaa
xor
inc
xor
pusha
mov
and
shll
bound
and
pushf
xor
push
aam
pop
int
xchg
push
jp
ret
mov
pop
sbb
cmpsl
data16
push
repnz
imul
lahf
inc
mov
jns
scas
xchg
push
xor
adc
sbb
cltd
in
test
mov
push
ds
push
push
inc
das
cmc
jp
bound
fcomp
pop
lahf
jmp
mov
faddp
push
jns
scas
sub
and
pop
push
popa
test
jmp
lds
daa
push
mov
xchg
pop
enter
cmpsl
daa
add
inc
js
ret
dec
xchg
jae
mov
sarb
fldenv
add
sbb
dec
mov
out
icebp
iret
js
push
repz
test
decb
inc
push
pushf
movsl
mov
adc
popa
and
mov
insb
mov
sbbl
nop
aaa
jge
nop
mov
lds
sahf
jmp
cmc
test
sbb
push
cmpsl
mov
xchg
loopne
mov
push
push
xor
xchg
out
sbb
cmpsb
int
scas
cmp
jge
jp
xchg
out
psubq
mov
testl
sbb
out
push
fwait
sbb
cmc
mov
fnstcw
xchg
insl
jnp
mov
fldl
add
push
sbb
push
mov
mov
push
lahf
repnz
lret
aas
dec
mov
jne
xchg
push
fisttpl
pop
add
fstpl
sub
insb
xor
sbb
adc
xor
nop
sbb
std
mov
adc
loope
pusha
out
clc
or
mov
addr16
pop
mov
inc
cmp
ds
dec
xchg
mov
in
cmp
repz
dec
cmp
push
pop
jp
in
ret
push
dec
mov
cmp
pop
jns
dec
test
sbb
fisttps
adc
cmc
dec
jp
sub
cmpsb
pop
into
out
les
pop
inc
pop
push
rclb
in
and
or
rcrl
xchg
aam
dec
xor
and
xchg
sub
push
xchg
and
push
sbbb
fsubrl
sti
daa
lcall
pop
and
pop
mov
dec
ds
arpl
mov
cmc
sub
out
mov
fucomip
pusha
lret
mov
fsubs
popa
mov
ljmp
push
pop
jmp
cmpsb
cmp
sub
popa
ds
ss
sbb
fistl
xchg
insl
sahf
mov
arpl
mov
out
ds
test
shr
adc
in
int3
lcall
mov
pop
xchg
fcomip
xchg
mov
clc
push
jle
inc
bound
aam
lcall
add
lcall
cmpsb
js
inc
insb
mov
fistps
jne
mov
addr16
ss
mov
out
fcmove
lret
cmpsb
sti
lock
adc
rol
xorb
bound
rcrl
vmread
int3
dec
mov
pmaddwd
xchg
in
push
jne
fcoml
mov
pop
cmpsb
mov
in
or
mov
or
or
fisubrs
dec
xchg
jmp
cmp
push
repnz
mov
cmp
mov
shl
inc
cmp
add
fnstcw
dec
leave
lea
fbld
mov
jle
pop
add
push
mov
cmpsl
sub
cmp
addr16
xchg
iret
inc
arpl
jle
inc
stos
mov
xor
mov
xchg
sub
jnp
pop
lret
push
jno
sahf
pop
das
add
cmp
out
ds
pop
jmp
movsl
push
iret
xor
mov
in
stos
mov
data16
mov
xor
xor
xchg
int
mov
rol
xchg
jp
mov
mov
cltd
in
fnstenv
pop
adc
fldcw
mov
ljmp
repz
dec
pushf
mov
pop
stos
shr
ds
out
pusha
and
shr
loop
add
lret
int3
ljmp
and
stos
addl
and
out
out
mov
int
mov
out
cwtl
cld
xchg
push
fimuls
jae
cli
lcall
push
and
dec
out
xchg
xor
add
sbb
icebp
dec
test
pop
cmp
inc
test
jne
add
add
inc
daa
pop
shrb
xorb
push
push
enter
push
xor
mov
jnp
dec
lds
push
xchg
iret
popa
test
jecxz
xor
pusha
sbb
pop
xchg
cmp
jle
and
or
cwtl
cli
loop
dec
dec
mov
out
lahf
rorl
out
addb
push
sub
imul
iret
mov
add
movsb
sub
in
ds
scas
and
xor
sbb
dec
ret
pop
cmpl
cmpsb
inc
clc
xor
je
fwait
add
repz
insb
loopne
lds
push
loop
loopne
pop
sub
adc
lret
push
xchg
or
sub
sub
adc
lahf
xchg
fdivrl
lret
cmp
cmpsl
sti
xchg
repnz
arpl
add
mov
sub
dec
stc
int
cli
rorl
aam
push
cmp
pop
mov
repnz
mov
xchg
fldl
mov
dec
mov
cltd
jmp
push
inc
or
pextrw
jae
xchg
mov
xlat
inc
loop
mov
mull
int
and
xchg
xchg
js
pop
sbb
loopne
test
xor
push
pop
imul
outsb
pop
inc
jl
test
sbb
mov
adc
enter
xor
xchg
test
lret
push
push
sqrtps
add
mov
aas
jae
sub
ljmp
cmp
cmc
aad
inc
cmp
pop
icebp
mov
subb
inc
or
in
jae
dec
inc
andl
fidivl
pop
push
rcl
push
fwait
scas
sbb
bound
filds
rolb
add
xchg
inc
loope
fadd
test
adc
sub
and
arpl
ja
arpl
movsl
sub
test
out
dec
pusha
sub
xor
mov
loopne
call
mov
sub
jmp
imul
sbb
and
sbb
add
arpl
cltd
mov
xor
clc
decl
pusha
push
push
jbe
mov
mov
mov
jge
hlt
inc
es
inc
inc
xchg
adc
jae
jae
icebp
push
loope
add
and
jp
stos
mov
test
push
inc
mov
inc
inc
andl
loop
scas
xchg
pop
add
add
fs
xchg
imul
sbb
paddw
dec
ljmp
ja
cmpsl
push
sub
hlt
sub
cmc
sub
out
into
lods
adc
pop
lods
jp
jg
adc
jno
pop
test
push
cs
mov
add
pop
adc
xchg
repnz
shl
movsb
es
outsb
jo
repz
insb
scas
inc
movsl
sbb
push
or
ret
add
cmp
and
cmp
rol
jb
lds
sub
out
mov
je
enter
insl
sbb
inc
ss
adc
out
sub
sub
hlt
pop
testl
int
movsb
and
mov
loopne
lcall
arpl
mov
push
xor
push
int3
xchg
mov
mov
fldenv
stos
jp
cli
dec
mov
mov
in
adc
adcl
dec
popa
inc
dec
dec
test
jp
cmpsb
xor
dec
sbb
inc
jmp
aad
dec
enter
into
outsl
pop
mov
cmc
ljmp
cli
lcall
ret
in
imul
nop
jecxz
push
shl
dec
or
stos
adc
mov
jl
daa
and
jne
cltd
loopne
icebp
and
xor
push
add
inc
adc
xor
and
jbe
dec
nop
xchg
and
ffreep
dec
mov
pop
and
sbb
ja
push
jle
cs
pop
pop
pop
ss
pop
xchg
dec
mov
imulb
outsb
xchg
aas
jns
cltd
scas
sub
add
ret
jae
rcr
pop
rcl
inc
inc
ja
pop
aaa
mov
xchg
sbb
mov
push
scas
xchg
mov
out
icebp
sub
adc
stc
pop
cmpsb
mov
mov
pop
fdivr
pop
xchg
lods
mov
out
mov
xchg
pop
cmp
push
mov
fstpl
or
cmp
jge
push
test
inc
mov
add
cmc
inc
or
int3
popa
leave
push
inc
add
push
mov
sbb
mov
xor
lahf
dec
xor
xorb
inc
aaa
test
scas
lcall
inc
xchg
sub
jle
xchg
jbe
pop
ret
ss
inc
jp
mov
shr
lret
and
jno
hlt
mov
mov
fadds
fdivrs
mov
ljmp
inc
push
cmp
jg
adc
lret
xchg
testl
loopne
test
xchg
das
xchg
mov
adc
mov
movb
test
outsb
jp
xor
cmc
xchg
mov
les
fisubrs
push
or
js
inc
and
mov
stc
inc
pop
aaa
mov
bnd
jg
sub
lock
inc
cmp
andl
rorb
test
pop
jnp
in
dec
sbb
lods
arpl
in
xchg
in
popf
mov
sbb
lods
sbb
cmpsb
jle
outsl
mov
and
dec
ss
test
lret
cmpsb
imul
inc
push
xchg
pop
loopne
and
push
push
subb
dec
jge
in
push
es
icebp
pop
insb
dec
cmp
sti
pusha
mov
push
sbb
outsl
fsubrl
daa
lcall
es
inc
fs
orl
jg
jge
sub
testl
sub
adc
xor
push
mov
adc
jmp
inc
and
sub
cwtl
push
mov
out
fsubl
cli
push
stos
sub
mov
jb,pt
loop
leave
lods
dec
jns
lods
jb
andl
leave
fwait
out
mov
aaa
loopne
lods
les
sahf
mov
popf
jle
inc
adc
fmulp
adc
mov
fistps
jl
xor
inc
movsb
pop
rorb
iret
xchg
stc
fstpl
sbb
xchg
in
xchg
inc
mov
fldcw
hlt
ja
addr16
jns
jp
xchg
push
pop
dec
push
loope
test
xchg
mov
mov
jecxz
dec
mov
fwait
and
cmc
cwtl
add
push
cmp
ret
jno
add
pop
and
and
outsb
std
in
das
sbb
adc
aad
and
loop
ljmp
ja
dec
js
xorb
mov
out
sub
imul
xchg
repz
jns
mov
int3
outsl
jnp
push
hlt
sbb
fildll
dec
pop
mov
mov
clc
jl
push
jmp
inc
sub
nop
xor
xchg
lahf
stc
adc
mov
and
stc
std
jge
pop
in
and
incb
inc
lods
out
mov
ja
fs
pusha
pop
addr16
sahf
enter
add
fnsave
push
ret
mull
pop
mov
es
push
repnz
sub
add
xchg
xor
and
push
sub
inc
lea
popf
leave
gs
inc
mov
dec
add
imul
ret
cmp
jne
cmpl
addr16
fwait
and
mov
fwait
pop
pushf
clc
push
and
or
mov
fisttpll
add
je
add
push
leave
cmp
aas
xchg
cltd
cmp
and
jae
mov
mov
mov
mov
test
add
popa
ljmp
add
mov
jns
stos
cmp
pusha
adc
cmp
jmp
ficoml
mov
negl
and
dec
or
or
push
dec
pushf
add
andb
rclb
test
iret
jae
out
mov
mov
jmp
add
scas
pop
stos
popa
jae
cmp
pop
mov
stos
jmp
jbe
and
xchg
cwtl
pop
mov
adc
test
test
out
out
imul
push
jmp
push
pop
and
ret
jmp
push
int3
subb
push
jl
ret
jb
jle
dec
lods
lods
add
aaa
popa
add
xor
dec
es
enter
loope
mov
nop
jle
adc
cli
sub
jb
fs
adc
xchg
xchg
fdivs
scas
fwait
dec
adc
or
sub
ss
push
inc
cmp
pop
sub
jecxz
mov
iret
inc
xchg
mov
in
jle
in
mov
jmp
fsubs
jecxz
lods
sub
movsl
test
shrl
sbb
lea
mov
fcompl
inc
sahf
dec
xor
or
xchg
rorl
lods
rcrl
or
jl
mov
popa
fsubrl
mov
add
imul
push
movsl
fwait
fwait
adc
jecxz
in
lock
pop
lods
inc
dec
jo
xchg
mov
jecxz
nop
repnz
push
cmpsl
sti
xchg
hlt
movsb
jb
mov
fisttpl
and
pop
sbb
cmpsb
fildl
int3
adc
mov
daa
mov
cmp
xor
aad
mov
add
pop
push
sti
ds
add
fucomip
fmul
cmp
inc
xor
jmp
fs
push
pop
xchg
cmp
out
ljmp
shll
pop
fists
negl
in
and
imul
loope
sbbb
jp
push
pushf
mov
pusha
ret
lock
aas
jb
push
cmp
or
adc
dec
adc
icebp
fnstenv
sbb
xchg
cli
sub
cmp
or
shlb
movsl
je
sbb
sub
dec
cmp
clc
popa
fcmovb
xchg
lahf
iret
call
cltd
push
imul
leave
popf
inc
std
gs
sub
mov
ljmp
mov
add
in
leave
or
jo
xor
push
inc
popa
insl
in
loopne
leave
int3
fcmovnb
popw
xchg
sub
mov
movsl
jl
mov
mov
aam
sub
lock
stos
push
pop
imul
cmpl
jns
sti
lock
out
shll
dec
cli
insl
lock
cltd
push
jnp
rorb
data16
xor
mov
sti
dec
in
mov
fisttps
adc
aam
sub
stc
or
stos
repnz
icebp
mov
push
cmp
mov
pushf
add
xchg
pop
in
lahf
sysenter
sbb
sti
add
lret
sub
sbb
sbb
mov
rcr
sahf
outsb
nop
lcall
jmp
pop
sub
mov
and
xchg
leave
pop
push
sub
ds
jb
lret
dec
out
es
lahf
jb
push
sbb
pushf
jmp
in
stos
inc
jge
outsb
fildl
jno
or
ret
dec
cmc
inc
adc
das
cmp
mov
xchg
cmpsl
jle
push
in
mov
cmp
add
pushf
ffree
loop
jo
fldenv
test
fs
sub
sub
jecxz
cmpsl
push
xchg
les
mov
xchg
cmp
inc
dec
push
push
lahf
dec
push
jmp
jb
and
jge
test
dec
sub
call
sub
in
lret
xor
pusha
pushf
es
sbb
sbb
pop
int3
and
cmp
mov
push
or
pop
lahf
cmp
bound
or
lea
xchg
fcomps
arpl
mov
lea
outsl
sub
sbb
push
nop
faddl
test
js
xchg
push
pop
jmp
int
pop
in
je
jo
into
dec
das
sbb
mov
sbb
inc
dec
dec
pop
mov
in
fwait
iret
out
mov
repnz
out
movsb
leave
nop
add
vcmpunord_sss
pop
xorb
mov
inc
fcompl
rolb
out
sbb
outsb
pop
aam
out
mov
negl
in
pusha
out
sbb
push
dec
jae
xchg
aam
or
mov
and
xchg
dec
jno
sub
xchg
xchg
aad
fidivs
lods
and
mov
adc
stc
sbb
cmc
insb
and
repnz
cmpsb
pop
fstl
pop
mov
dec
xorl
pop
lds
push
or
cwtl
in
sub
in
in
pop
loopne
int3
addb
or
scas
jl
fcoml
or
negb
lods
jl
ret
mov
xor
ja
inc
sbb
fsubp
pop
out
push
lds
stos
fldpi
repnz
stc
add
lret
add
cwtl
pop
mov
push
mov
fldenv
or
sar
mov
xor
orb
inc
jmp
cmp
pop
dec
or
mov
loop
incb
pushf
cmp
mov
sar
lahf
stos
scas
pushf
mov
cmp
jle
lock
and
mov
lret
ss
ret
lret
lahf
test
stos
stc
pop
cmp
cs
test
adc
in
lods
mov
test
xchg
mov
push
popf
mov
stc
fiadds
out
in
jo
in
jl
xchg
mov
pop
loope
sbb
mov
pop
sti
lret
movsl
add
pop
int3
cltd
push
repnz
out
movsb
inc
dec
xor
jge
leave
int
adc
inc
int3
pop
jno
aaa
arpl
pop
imul
sar
pushf
xchg
fs
je
repz
pop
jg
xchg
fwait
outsb
out
pop
lock
xor
dec
stos
add
jo
cmpsb
ret
mov
pop
fisttpll
jmp
xor
sbb
mov
rcl
pop
mov
mov
sbb
adc
mov
add
pop
xor
popf
inc
clc
pop
jl
sahf
add
fwait
jmp
mov
sub
decb
pop
test
pop
cwtl
push
push
jmp
mov
sbb
push
fidivs
les
stos
sub
pop
cmpsl
cld
sbb
adc
xchg
xor
push
into
cmpsb
cld
scas
ljmp
pop
stos
inc
push
insl
adc
sub
pop
mov
push
loope
ljmp
popa
lcall
add
xchg
cmp
ret
xchg
jle
xchg
mov
test
jecxz
push
xchg
in
jnp
pop
or
int
mov
hlt
shrl
xchg
adc
inc
mov
mull
data16
popf
in
xchg
addr16
dec
fldenv
shlb
inc
pushf
sbb
and
mov
cmp
movsl
clc
dec
negb
or
xlat
jmp
jmp
inc
lods
cs
dec
inc
lds
mov
sbb
shrb
jne
mov
mov
mov
test
repz
xlat
pop
fnstenv
out
aam
and
mov
aam
idivl
pop
fmull
or
cmp
push
inc
mov
fwait
sbb
int
xchg
int
jg
or
fs
test
mov
xchg
lods
jmp
mov
mov
movsb
mul
lods
outsl
test
popf
hlt
pop
cmp
aam
push
inc
aad
jns
rcr
in
xchg
xor
dec
xor
push
fwait
in
xchg
xor
and
pop
jecxz
lds
lahf
outsb
sbb
and
aam
mov
fwait
inc
paddusw
les
je
je
mov
pop
lret
adc
repz
lods
andb
mov
inc
je
or
hlt
sub
jo
std
nop
fs
negb
jp
cmp
repz
daa
out
xchg
fstps
mov
ss
add
loope
stos
sub
push
std
cld
hlt
enter
mov
mov
jl
mov
lock
sub
or
std
mov
in
pop
mov
sar
orb
xchg
rcrl
in
ja
jmp
sub
fsts
insb
add
outsb
jmp
inc
mov
insl
lcall
repz
mov
js
sbb
enter
sarb
insl
jle
inc
popa
leave
jl
cmp
xor
cs
mov
or
cmp
sub
insb
xchg
mov
adc
out
push
addl
sub
ret
pop
xor
stos
aaa
out
pushf
cmp
cwtl
mov
fcomip
repz
inc
ljmp
ljmp
inc
icebp
lds
lret
inc
movsb
clc
jns
pop
xchg
push
aad
jmp
testb
push
mov
pusha
push
pop
inc
push
faddl
test
enter
mov
test
push
pop
clc
pop
mov
subl
bound
adc
int3
dec
lods
lock
cli
repnz
dec
xlat
fxch
mov
push
jno
in
scas
pushf
sbb
stc
insl
aaa
js
rolb
mov
popa
sub
jo
sub
das
dec
xchg
sbb
loopne
mov
arpl
fists
les
jg
bound
out
shrl
inc
add
xchg
js
data16
pop
pop
cmc
mov
lea
add
push
out
sub
pop
push
test
inc
xor
sub
sbb
dec
add
imul
ja
aam
push
dec
cmp
sub
fs
inc
and
lahf
pop
or
cmc
xlat
sbb
popa
rolb
ret
sub
das
add
or
jns
sarb
inc
enter
sub
sbb
mov
ljmp
dec
jae
inc
pop
or
ret
dec
push
repnz
inc
pop
int
or
and
dec
insl
xor
and
push
dec
lahf
scas
xlat
mov
mov
mov
dec
inc
xlat
cmc
push
adc
ficompl
mov
adc
int3
scas
jae
dec
aam
repnz
cld
loopne
cmpsb
mov
sub
in
or
jmp
repnz
sbb
cs
jp
and
cli
insl
mov
adc
out
mov
jb
imul
fnsave
adc
dec
xor
sub
pop
sub
mov
ret
sub
pop
inc
loop
in
push
jne
jno
push
sub
mov
fists
mov
test
push
and
ja
fcomi
push
pop
aad
aam
sbb
xlat
shl
lret
fidivrs
das
iret
mov
lcall
fisttpl
out
sub
xor
xor
add
push
loop
dec
mov
lea
pop
mov
mov
xor
pop
les
in
jge
xchg
mov
dec
xlat
int
negl
popf
xchg
xchg
xor
jp
cwtl
xor
sub
sbb
test
xor
sahf
mov
adc
sarb
mov
int
fucom
cmp
in
in
sbb
mov
icebp
sbb
popf
stos
fsubrl
cs
iret
flds
loope
cmp
or
jle
fwait
xchg
in
jge
into
jl
xchg
and
je
lods
mov
ja
adc
inc
inc
in
stos
ret
cmpsb
jp
lea
mov
repz
lock
rcrb
js
popa
aas
inc
clc
jb
cmp
test
out
filds
add
rcrl
setbe
out
push
adc
in
cmc
divb
add
in
adc
iret
je
inc
mov
dec
ret
rorl
and
cmp
pop
jb
inc
shlb
std
test
incb
or
stc
mov
or
pop
xor
divl
push
mov
pop
daa
mov
and
xchg
cwtl
xchg
pusha
adc
leave
ret
dec
lahf
push
xchg
ja
mov
cmp
cmpsb
loopne
repz
mov
gs
mov
bound
adc
xchg
lret
and
outsb
inc
aad
loop
into
out
test
inc
and
rol
scas
je
insl
in
bound
mov
popl
inc
adc
adc
icebp
mov
addr16
mov
stos
sti
pop
jecxz
xchg
pop
repz
inc
mov
xor
aad
mov
fsub
push
mov
ret
jae
inc
scas
mov
loop
mov
mov
sub
push
cmp
sub
mov
test
ds
test
fwait
cmp
add
out
push
ds
std
and
scas
xchg
scas
test
adc
lods
and
and
iret
jl
and
xchg
aas
scas
sbbl
mov
leave
jecxz
es
push
push
orl
mov
sbb
loop
or
and
add
and
cmc
xor
stos
pop
sbb
dec
fildll
notl
pop
push
xlat
cmpsl
out
xchg
push
mov
push
es
inc
and
xor
fwait
sub
inc
mov
out
test
outsl
pop
push
.byte
