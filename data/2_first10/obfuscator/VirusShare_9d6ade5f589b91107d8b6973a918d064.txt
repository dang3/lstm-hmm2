dec
pushf
testb
add
adc
xchg
fdivl
int3
add
fsubl
jge
add
xchg
add
int3
add
repnz
add
add
mov
xchg
testb
add
and
mov
divb
push
xchg
cltd
popf
outsb
cli
outsb
cmc
dec
loopne
add
shrb
push
push
int3
js
cwtl
add
pop
ds
sbb
add
sbb
add
jo
inc
add
mov
int3
loopne
cwtl
add
inc
add
add
add
ds
add
call
add
add
add
cltd
sub
xchg
testb
add
scas
scas
scas
mov
cmp
scas
scas
scas
scas
scas
dec
pop
push
or
and
push
ds
push
addb
add
or
add
add
xchg
xchg
cltd
das
or
aas
or
push
add
add
sbb
and
jae
out
int3
scas
sbb
jae
or
rcll
inc
add
arpl
insl
add
add
movsb
inc
in
movb
lcall
dec
or
jbe
ds
sbb
mov
add
sub
and
add
push
scas
sbb
jae
inc
add
fisubl
lock
and
scas
scas
scas
scas
scas
scas
scas
scas
scas
pop
push
pushf
repnz
fcompl
xor
fsubl
cmp
sub
add
add
fs
mov
jp
xor
xchg
repz
int3
sbb
andl
int3
jmp
xor
xor
push
int3
lods
sbb
cmp
push
add
xlat
sbb
pop
add
mov
mov
cwtl
add
fcompl
adcl
das
add
add
lcall
xor
mov
cmp
int
ror
sub
cwtl
add
int
sub
ror
sub
xor
fmull
divb
faddl
divb
mov
xchg
xor
push
test
loopne
rolb
and
jne
and
and
fimuls
jno
jne
js
inc
jne
jne
and
and
fimuls
jno
loope
and
int
sub
xor
dec
int
pop
fiadds
int
jnp
js
push
loope
jne
jnp
repnz
icebp
sub
orl
mov
int
sub
xor
push
int
push
xor
out
sub
add
and
mov
xorl
xchg
push
xor
insl
cmpsl
mov
add
add
mov
pop
add
and
insl
cmpsl
pop
push
xor
insl
cmpsl
lahf
push
xor
jp
jmp
xchg
dec
cmpsl
addl
outsb
addl
dec
sbb
pop
in
addl
dec
fwait
addl
test
inc
dec
adc
je
xchg
repz
addl
mov
sub
leave
addl
stc
je
push
adc
mov
mov
jp
imul
je
pop
adc
imul
daa
mov
xor
dec
lock
jbe
in
jle
jmp
and
iret
mov
jae
addl
addl
je
push
adc
jle
jmp
pop
and
iret
sahf
addb
and
testl
xchg
jno
mov
cmp
into
jecxz
push
xor
inc
add
xchg
std
mov
addl
mov
mov
xchg
mov
dec
mov
inc
vfmadd132sd
out
mov
mov
inc
mov
jno
insb
pop
scas
stc
mov
cmpsb
into
add
jg
sub
jg
scas
je
je
mov
out
mov
xchg
sti
je
je
mov
in
dec
lods
in
addl
in
addl
jmp
subl
jmp
dec
xchg
or
jo
adc
dec
cmp
sub
dec
xchg
xchg
ss
add
xchg
jmp
das
and
lock
xchg
xchg
ret
ret
dec
decb
xchg
lret
subl
mov
cwtl
ret
dec
call
subl
dec
cmp
ret
repz
xchg
sbb
popf
lock
dec
xchg
xchg
add
mov
dec
xchg
insb
and
test
mov
dec
call
sub
bound
xor
dec
decb
subl
adc
ret
dec
inc
xchg
mov
addl
xor
je
je
push
jg
adc
xchg
inc
dec
imul
test
and
imul
test
adc
mov
mov
dec
jg
adc
je
xor
jno
pop
scas
mov
push
mov
out
mov
dec
adc
mov
mov
mov
dec
adc
mov
xchg
scas
mov
mov
mov
dec
adc
dec
testl
orl
inc
in
or
adc
mov
push
iret
imul
idivl
scas
stc
mov
jecxz
jg
daa
inc
xor
je
notl
sbb
ss
jbe
xor
inc
xor
je
notl
sbb
ss
imull
xor
xchg
jle
mov
iret
jg
dec
mov
stc
mov
imul
mov
idivl
xchg
sahf
outsb
ret
mov
jne
addl
mov
ss
addl
out
mov
dec
cmp
into
dec
mov
dec
mov
dec
mov
dec
addr16
mov
mov
lret
je
fimuls
pushl
xorl
dec
je
into
je
cmp
adc
adc
sbb
ss
dec
lods
dec
addl
dec
lock
addl
cmp
xchg
stos
xorb
ss
dec
fisttps
subl
xorl
inc
dec
adc
adc
sbb
ss
dec
lock
addl
mov
push
testl
cmp
xchg
xor
je
sbb
ss
dec
leave
dec
addl
notl
inc
sbb
divl
xchg
mov
test
sahf
or
orl
pop
mov
in
addl
push
xchg
mov
cwtl
in
jle
mov
pushl
mov
in
addl
xorl
gs
addl
xchg
mov
in
addl
daa
mov
divl
mov
ljmp
out
dec
test
test
lcall
in
addl
dec
in
addl
test
mov
into
mov
push
test
mov
cwtl
divl
je
out
mov
jle
dec
mov
mov
fs
addl
cmp
xchg
mov
je
sbb
ss
dec
mov
in
std
imul
mov
inc
out
dec
notl
inc
cmp
xchg
jle
je
sbb
ss
dec
add
addl
ja
divl
orl
sti
aaa
addl
ss
xchg
addl
int
test
mov
cwtl
divl
je
out
mov
fs
addl
jle
imul
mov
xchg
je
xchg
mov
addl
push
div
mov
sub
divl
inc
out
adc
adc
sbb
ss
dec
sub
imul
andl
imul
leave
addl
jmp
addl
out
dec
mov
test
sahf
or
insl
mov
out
sahf
lcall
insb
lock
mov
dec
mov
push
test
mov
cwtl
divl
je
out
mov
mov
jg
daa
jle
mov
xchg
je
xchg
mov
pushl
mov
cmp
in
je
into
je
cmp
xorl
mov
into
push
out
inc
imul
jno
insb
pop
scas
stc
mov
jecxz
mov
out
push
xor
mov
cmp
out
inc
imul
pop
pop
pop
jp
mov
imul
and
subl
mov
mov
iret
mov
and
jae
jg
jp
mov
inc
inc
adc
jg
dec
les
adc
jle
mov
jg
inc
inc
jp
movsl
adc
mov
je
inc
test
dec
out
jecxz
je
and
out
dec
les
imul
xorl
xor
jno
daa
pop
scas
stc
mov
imul
mov
imull
xor
in
addl
or
addl
addl
addl
inc
imul
out
addl
addl
addl
addl
cmp
jmp
mov
or
mov
imul
in
or
dec
test
mov
iret
sub
dec
into
je
cmp
jle
mov
inc
iret
adc
movb
jo
inc
test
cmpsb
lds
dec
into
mov
in
adc
mul
inc
xor
pop
pop
mov
inc
adc
dec
cmp
mov
divl
imul
sbb
ja
xor
je
daa
insb
pop
scas
stc
mov
mov
imul
mov
addl
pop
insb
mov
mov
ret
imul
xor
inc
adc
imul
xorb
mov
and
test
mov
mov
cmpsb
jb
mov
addl
ja
sbb
je
imull
imull
fs
test
imul
mov
insb
daa
mov
ss
mov
mov
adc
adc
xchg
jle
ja
divl
mov
mov
push
adc
jle
je
testl
xor
mov
imul
jp
mov
jmp
dec
leave
xor
xor
addl
xchg
movb
orl
jg
ret
je
xchg
mov
addl
les
dec
cmp
addl
iret
je
imul
dec
decb
addl
iret
inc
mov
adc
xchg
shlb
mov
mov
lret
iret
mov
lea
cwtl
je
iret
mov
test
inc
outsb
mov
out
mov
dec
idivl
mov
out
decl
testl
addl
je
addl
inc
or
dec
adc
je
mov
and
imul
int
push
xor
test
mov
iret
imul
out
ret
je
xchg
mov
je
je
imul
xor
insb
pop
scas
stc
mov
jp
mov
dec
test
mov
mov
jp
mov
xchg
adc
je
dec
daa
out
daa
test
mov
mov
jae
mov
mov
imul
test
adc
je
testl
idivl
ret
push
adc
mov
sahf
scas
test
cmpl
ret
out
jp
ret
push
adc
jno
insb
mov
into
pop
dec
addl
ret
inc
cmpsb
ja
or
addl
dec
xor
xorl
or
fiaddl
fcoml
andl
xchg
addl
dec
mov
mov
adc
mov
iret
dec
addl
je
out
ss
adc
out
je
je
and
mov
roll
mov
dec
adc
je
iret
mov
mov
jg
ret
je
adc
je
iret
mov
mov
scas
addl
je
push
adc
mov
mov
iret
xchg
jg
sub
cmp
dec
push
iret
dec
push
testl
adc
jg
sub
dec
loopne
mov
je
iret
mov
loopne
out
testl
mov
je
and
test
mov
out
ret
mov
out
jp
inc
mov
iret
dec
dec
jecxz
adc
arpl
je
mov
iret
imul
and
xor
sbb
ret
xchg
je
sbb
ss
shr
ret
xchg
or
je
mov
sbb
adc
test
inc
or
scas
xchg
out
je
jg
insb
jp
je
mov
ret
xchg
xchg
xorb
xchg
jle
dec
jno
mov
daa
insb
pop
scas
mov
push
movb
test
ss
mov
pop
inc
or
test
mov
jecxz
idivl
ret
mov
out
mov
jo
pop
test
int3
rcrl
mov
jae
addl
push
imul
les
mov
inc
mov
testl
ja
iret
test
je
xor
mov
xor
clc
sahf
pop
imul
cmp
imul
test
sahf
data16
sbb
mov
xor
test
mov
testl
push
testl
mov
mov
push
mov
out
jp
jb
inc
mov
push
testl
testl
stc
jmp
ret
jg
mov
sub
push
addr16
je
iret
xchg
adc
je
jg
sub
aas
addl
movsl
mov
je
subl
roll
stc
aas
nop
xchg
dec
je
je
subl
leave
addl
pop
idivl
nop
xchg
test
inc
les
pop
inc
les
mov
aas
stos
dec
data16
dec
mov
testl
insb
scas
je
push
xchg
xchg
je
je
or
push
mov
push
idivl
or
int
sbb
imul
fbstp
daa
je
push
iret
xchg
int3
je
je
sbb
dec
daa
scas
stc
mov
imul
jp
fidivs
testl
ss
addr16
fcomp
fmuls
dec
adc
xchg
sbb
mov
sbb
je
fsubp
push
mov
pop
inc
dec
adc
mov
push
clc
imul
sbb
inc
jo
mov
testl
xchg
or
mov
mov
out
sahf
dec
test
cmp
out
sbb
in
daa
jle
ss
pop
scas
add
call
mov
sbb
sub
cld
xchg
adc
mov
repz
test
out
fidivrs
cwtl
cmpl
lcall
popa
test
adcl
outsl
add
mov
popa
mov
ja
sub
xchg
xorl
psubw
mov
fnsave
cmp
cld
test
sbb
icebp
aaa
fistpll
mov
fistl
repz
cs
jb
popf
pop
jecxz
inc
movsb
cmp
add
lret
sbb
cmp
push
ret
cmpl
push
xchg
sub
ds
push
outsl
xchg
sub
push
std
dec
and
sbb
dec
jbe
imul
je
mov
pop
jo,pt
insl
dec
in
mov
lea
xor
fnstsw
das
js
dec
call
push
in
cmpsb
dec
pop
ret
test
jmp
adc
mov
cmpsb
lods
add
pop
ds
lea
dec
push
push
xchg
sub
notl
imul
das
ret
andl
adc
movl
jne
pusha
mov
andl
in
xchg
dec
leave
lods
shl
icebp
ljmp
aas
push
fisubrl
into
sbb
in
scas
xor
jmp
mov
add
lahf
mov
flds
insl
dec
cmc
jno
push
adc
mov
in
push
dec
mov
dec
aaa
jns
mov
in
or
scas
sti
loope
cmp
xchg
mov
inc
jmp
and
fldenv
aam
add
jp
or
add
in
jle
scas
push
sahf
pop
add
fisubrl
mov
ds
or
adc
lods
push
and
pop
add
or
sbb
push
xor
inc
push
pop
mov
adc
or
scas
jl
mov
fucomp
lcall
fwait
outsb
sahf
inc
mov
das
and
sbb
mov
adc
icebp
sub
je
lret
pop
mov
repz
and
and
mov
daa
mov
mov
xchg
add
xchg
inc
pop
lds
xchg
push
add
pusha
add
into
pop
mov
inc
int3
add
loope
inc
inc
xor
or
jg
push
fmul
cmpsl
dec
xchg
push
inc
mov
mov
int3
pop
ds
inc
cli
pop
adc
lds
or
xlat
dec
cmp
sub
adc
ja
das
or
lea
push
pop
mov
sbb
mov
mov
mov
test
sbbl
cli
sub
inc
cs
jl
imul
adc
jmp
sub
outsb
mov
inc
enter
adc
dec
fs
repz
test
dec
daa
inc
add
jbe
and
mov
jns
in
lods
ret
int3
jno
jb
popa
stos
xchg
jecxz
les
icebp
fimuls
clc
fdivrl
and
inc
cmpsb
cmc
stc
int3
ds
sub
jae
mov
imul
push
adc
inc
dec
pop
lods
cmp
and
xor
xchg
imul
xor
loop
in
mov
xchg
cmp
data16
cwtl
stos
cmp
jo
add
xchg
mov
cmp
je
daa
test
push
push
inc
iret
ss
inc
jl
mov
movd
stos
mov
call
pop
xor
pmullw
dec
out
js
rcrb
fidivrs
out
mov
test
sub
sub
out
and
fwait
outsl
lods
push
sub
pop
loop
sbb
or
pop
sbb
jecxz
xor
fwait
add
sub
insl
imull
test
hlt
adc
push
xlat
or
cwtl
lahf
dec
and
in
cmc
and
sub
out
adc
mov
mov
clc
loop
stc
push
ja
or
inc
cmpsl
sbb
cmp
inc
sbb
or
js
sahf
cmp
xlat
mov
mov
or
rol
pop
call
xor
pop
iret
int
mov
xchg
push
loopne
mov
push
fldt
dec
outsb
aas
push
les
mov
jg
sbbl
mov
ficomps
and
and
mov
stos
cltd
syscall
mov
pop
out
and
xchg
adc
mov
dec
sub
call
bnd
cmpsl
std
hlt
mov
sarl
push
scas
mov
push
cmpl
sbb
mov
gs
push
dec
xchg
add
fsubl
aaa
stos
leave
pop
push
addr16
aad
mov
stos
adc
add
cwtl
sbb
push
mov
mov
gs
mov
xor
mov
lock
xor
je
daa
sar
test
call
test
out
cld
inc
or
out
add
and
lcall
cld
mov
gs
jmp
insb
jmp
das
mov
cmc
jmp
xchg
ret
inc
push
jl
orl
stc
testb
call
or
xchg
rol
mov
mov
loope
lods
loop
mov
shlb
imul
jns
pop
jp
das
test
lods
stos
sbb
mov
jp
sub
mov
cmp
mov
cmc
hlt
insl
mov
or
sbb
fisttpll
cs
call
jl
cmpsb
jns
in
adc
lret
fsub
out
arpl
imul
fs
cmp
adc
mov
movsb
ja
cmp
in
sarb
jb
mov
nop
add
pop
add
jno
mov
fwait
mov
jbe
jnp
and
push
mov
xchg
and
xchg
pop
in
or
das
call
addr16
sub
mov
sbb
mov
xor
lods
inc
pop
pop
add
jg
fistl
adc
out
aas
dec
xchg
jmp
jnp
test
imul
jp
mov
movsl
aad
mul
ficompl
jl
aas
outsl
cmpsl
psrlq
es
test
mov
inc
jo
inc
xor
repnz
xor
fcomps
adc
push
xor
out
xchg
dec
add
imul
mov
jae
xor
imul
iret
out
jmp
addb
into
lods
out
leave
icebp
cs
lret
sub
jns
or
enter
add
push
daa
iret
in
sub
jg
mov
add
js
rol
pop
push
mov
pop
scas
and
jne
mov
push
lcall
cmp
and
or
movnti
xorl
push
lret
adc
mov
jl
jp
je
adc
ss
cs
loope
mov
int3
je
rclb
in
pop
lret
pusha
aaa
into
data16
mov
jno
fucomp
jecxz
or
stc
in
in
clc
insl
cmc
mov
mov
fildll
and
or
jl
jo
loop
mov
loopne
jl
inc
daa
cmp
mov
jne
cwtl
push
es
and
inc
pop
icebp
data16
arpl
faddl
pop
xorl
xchg
loope
adc
nop
out
xor
add
out
jle
cmp
bnd
mov
aas
xor
cld
add
iret
popa
ret
sub
mov
stos
in
dec
enter
stos
pop
push
jmp
or
cli
mov
out
fadds
xchg
mov
or
push
inc
lcall
add
int
daa
outsb
fimuls
and
cmpsl
lea
jb
jae
in
out
or
push
sti
pop
jge
out
mov
mov
out
lods
stos
inc
out
mov
push
mov
dec
hlt
xchg
jb
cmp
and
xchg
jnp
cmp
cvtps2pi
jne
cmp
and
gs
repnz
int
xor
jns
aaa
aam
gs
std
les
aam
ds
das
sub
adc
xor
or
push
xor
xchg
icebp
cmovs
push
lods
cmp
xor
push
sub
adc
cmc
sub
mov
lods
or
jge
add
fmull
pushf
jmp
mulb
and
mov
test
out
add
lret
mov
mov
or
or
icebp
clc
adc
std
bound
test
jp
push
or
in
cmp
cmp
aas
ret
bound
mov
inc
imul
aam
into
pop
imul
movsb
or
sub
movsl
flds
and
and
jns
loopne
insl
sti
and
das
dec
lods
hlt
pop
mov
loopne
xchg
cs
out
in
add
jbe
mov
add
mov
inc
sbb
xchg
fld
aad
push
xchg
fdivrl
mov
fs
lcall
loopne
enter
popf
inc
icebp
repnz
mov
push
push
mov
jb
insl
mulb
or
jno
and
jle
incl
mov
push
popf
loop
jmp
divl
mov
mov
mov
mov
int
xlat
aad
out
pop
push
sarl
push
push
or
je
xor
or
mov
shll
dec
sbb
aad
sub
outsl
jbe
xchg
inc
cmpsl
push
sub
inc
mov
push
les
repnz
pop
sbb
pop
sbb
test
cmpb
fst
jnp
inc
sarb
add
push
mov
adc
out
icebp
lods
dec
je
fisubrs
mov
stc
xor
les
les
sub
adc
cmp
push
and
lret
dec
xchg
push
or
add
xchg
lahf
sub
pop
mov
and
ds
xchg
xor
mov
leave
inc
inc
mov
and
stc
or
bound
aad
fnstcw
test
cmpsl
mov
jbe
sbb
aam
push
fiadds
std
pop
mov
shr
dec
push
aaa
aaa
imul
jb
jg
mov
lods
fsubs
scas
adc
aaa
scas
pop
jno
dec
test
mov
scas
or
jae
sub
popa
fwait
push
in
gs
out
mov
int3
jne
sbb
stos
repz
or
mov
enter
add
lea
scas
bound
dec
add
fdivrs
mov
iret
test
stos
mov
jne
mov
xchg
aaa
pop
jns
iret
cmp
sbb
ja
mov
aaa
and
outsl
push
ret
shr
sahf
ret
push
add
sti
mov
mov
pop
push
dec
cs
jle
imul
test
jecxz
mov
test
add
aaa
daa
mov
int
mov
xchg
aas
dec
sub
enter
jae
call
out
xlat
mov
mov
adc
xchg
ret
jb
or
movsb
xor
int3
mov
jns
pop
sbb
fldcw
das
sarl
push
pop
xlat
lods
je
push
dec
and
inc
push
mov
aaa
jmp
popf
mov
imul
sbb
lcall
sahf
in
xchg
out
push
dec
stos
jmp
outsb
insl
jmp
repz
and
push
adc
cmp
and
test
filds
xor
mov
cmp
xor
mov
pop
mov
ljmp
sti
push
shrb
loopne
xor
mov
cli
cli
pop
aas
out
pusha
icebp
jmp
push
pop
jmp
and
pop
leave
fld
daa
insl
sahf
pop
lods
dec
inc
adc
xchg
sub
shl
sub
sbb
pop
outsb
pusha
pop
repnz
fistl
lods
xlat
cmp
adc
xor
push
mov
aas
adc
jg
sbb
add
xor
pushf
jae
test
add
sub
orl
movl
pushl
iret
popa
outsl
cmp
mov
xor
iret
jle
mov
nop
imul
sahf
mov
mov
lahf
aaa
outsl
and
insb
clc
inc
jl
mov
scas
movsl
lds
pop
add
cs
ret
lret
xchg
in
rolb
int
pop
xor
in
push
adc
leave
lods
inc
jg
mov
adc
cmpsl
add
adc
push
xlat
scas
mov
jl
inc
pop
push
nop
pop
pop
out
sub
push
adc
cmp
cmp
cli
lds
mov
jmp
clc
sbb
mov
pop
mov
rclb
cmpsb
mov
jno
ret
xor
xlat
mov
cmp
je
repz
mov
xchg
repnz
and
xchg
mov
and
test
aam
aaa
jne
movsl
jae
or
and
cltd
push
xchg
push
fsts
jle
add
sub
test
sub
fs
lahf
pop
clc
sbb
daa
dec
add
lea
call
cmp
jecxz
jns
jmp
popf
mov
mov
xchg
out
push
into
pop
xlat
or
es
scas
xor
and
jo
fidivrl
ljmp
pop
add
testb
ret
sbb
pop
cltd
out
orl
subb
pop
adc
out
mov
mov
inc
cmp
push
jp
movsl
and
aas
pop
push
and
inc
cmp
adc
repz
and
and
cld
sbb
lret
into
mov
pop
icebp
mov
mov
dec
jnp
ret
sub
xor
popf
fidivrs
scas
and
imul
call
mov
xchg
clc
cmpsl
test
addl
loopne
psrlq
rcrl
xchg
lock
dec
mov
and
adc
push
mov
jle
test
out
cmpsl
insl
inc
aas
jnp
dec
movsb
xchg
xlat
mov
sbb
dec
daa
daa
fistps
xchg
xchg
int3
xchg
test
push
scas
dec
jl
mov
mov
push
and
fcomip
scas
lret
outsb
scas
ss
shll
mov
test
mov
sub
sbbb
adc
adc
ja
jo
mov
enter
shr
mov
out
pushf
cmp
ret
out
mov
aam
sbb
mov
in
adcl
out
sbb
adc
es
sub
sub
cmpl
sub
repnz
inc
and
xor
push
out
or
test
sub
stos
inc
push
push
xchg
ret
add
punpcklwd
repz
mov
jb
subl
stos
push
roll
imul
repnz
jno
push
add
insl
sbb
lods
scas
popf
stos
mov
mov
push
pop
mov
imul
insb
stc
jecxz
xor
dec
sbb
adc
out
addb
push
cmpsl
add
lret
jmp
sub
ds
outsb
mov
inc
mov
rorb
mov
arpl
hlt
sarl
mov
mov
inc
adc
ds
pop
fcmovnbe
jno
cmp
sbb
movb
enter
lods
sub
paddsw
gs
negl
int
sbb
adc
std
inc
add
push
sbb
in
lret
sbb
xor
push
sbb
jmp
inc
and
pop
sbb
or
mov
mov
mov
pop
sub
rcrb
stc
fisttpl
dec
popf
ret
xchg
scas
jl
test
hlt
xor
lret
and
loop
adc
or
add
fildl
loop
jne
jge
inc
in
sub
std
sbb
push
cmpsl
ja
push
jp
xchg
or
sub
push
jg
ficomps
cli
rorb
adc
sahf
cmp
pop
cmp
jbe
adc
sbb
pop
sub
mov
mov
incl
insl
or
shlb
adc
repnz
dec
jne
jnp
pop
jl
adc
mov
shrb
inc
ss
mov
lcall
mov
test
add
icebp
int
jmp
out
out
call
pop
push
outsb
xor
in
aas
mov
sub
addb
pop
push
jg
hlt
pop
push
and
out
pusha
lret
jne
add
pop
out
push
sbb
xor
lea
and
les
loopne
mov
lods
push
xchg
das
mov
dec
mov
bound
adc
jg
fwait
pop
pop
xor
in
jb
jno
repz
out
test
mov
adc
push
xchg
pop
mov
sub
popf
movb
sti
sub
xor
xorb
fmuls
in
xlat
ja
cmp
addr16
sahf
dec
sti
mov
inc
nop
es
push
stos
lahf
out
add
in
xchg
roll
adc
xchg
xchg
pop
jnp
xor
nop
mov
push
pop
jecxz
jo
sub
mov
gs
sub
out
cltd
inc
cmp
insb
pop
mov
mov
loop
sbb
rolb
pop
div
mov
adc
popa
push
jmp
lahf
in
cmpsb
mov
jmp
inc
or
hlt
mov
sbbb
or
cmp
or
push
repz
add
cmp
cmc
pusha
mov
xchg
add
xor
jns
shll
and
sub
fwait
das
rcr
std
cld
rcrl
xor
aaa
cwtl
pop
xor
mov
push
mov
lock
in
lretw
lea
mov
dec
xor
pop
ret
lcall
jmp
inc
inc
xor
mov
rol
hlt
xchg
add
inc
fwait
stos
decb
cmpb
call
pop
iret
sbb
sbb
sbb
std
xchg
imul
or
fistps
pop
ljmp
pop
jecxz
mov
ret
xchg
es
lods
bound
push
push
in
add
test
pop
sbb
sarb
dec
pop
aaa
xor
or
or
mov
cltd
stos
push
rorb
out
jbe
fs
sub
in
and
xchg
or
cmp
movsb
cld
pop
mov
in
inc
ljmp
popa
cmp
cmpsb
add
icebp
gs
and
xchg
idivb
sub
cld
mov
ud0
imul
mov
lcall
sbb
sub
mov
pop
ja
push
sub
mov
sbb
cmp
ss
xchg
mov
stos
cmp
add
and
sub
or
push
stos
cmp
pop
lahf
xor
mov
lret
add
ja
ret
in
sbb
inc
mov
mov
sub
adc
mov
testl
cmpsb
fnsave
jmp
lcall
jo
cmp
cwtl
ds
mov
js
in
jnp
ja
jno
fiadds
repz
movsb
xchg
ret
mov
pop
jne
into
sub
cld
sub
xchg
cmpsb
pop
or
fcmovnb
int
jle
mov
lock
in
and
sub
das
jge
jmp
jbe
addr16
sbb
pop
add
cmp
jns
jb
imul
add
out
adc
in
in
ljmp
lcall
pop
push
leave
ds
add
das
insl
jmp
mov
aaa
lret
pop
hlt
cmpsb
inc
or
in
test
push
xor
or
adcb
jl
sbb
or
cmp
adc
pop
test
movsb
xor
popa
fimull
decl
cmp
lds
jecxz
cmp
mov
or
fwait
dec
lea
and
aaa
mov
sub
xor
cltd
mov
ror
pop
push
xchg
pop
or
movsl
jle
out
inc
dec
jecxz
outsl
xor
push
cmp
cmp
and
mov
jmp
data16
dec
mov
or
add
inc
adc
lahf
or
or
cmpsb
mov
into
jne
notl
pop
or
mov
and
mov
test
add
mov
sub
cmpsl
adc
loop
adc
pop
sbb
jo
mov
push
inc
dec
inc
xor
lcall
fisubrl
xor
pop
fdivrp
enter
jnp
movsb
jns
push
add
ljmp
xchg
or
and
jp
dec
jne
lods
mov
sub
jo
arpl
add
and
scas
mov
jo
jge
lcall
add
mov
push
xchg
mov
movsl
ror
std
movsl
pushf
mov
xchg
push
xchg
ret
ljmp
inc
pushf
dec
or
jns
stc
jmp
sahf
icebp
or
sahf
int3
jge
push
inc
aaa
xchg
push
xchg
je
jle
xor
pop
js
ret
cli
inc
cmp
push
lahf
fsubrp
jmp
test
xchg
popf
js
cltd
fbld
jl
jne
dec
sbb
push
addr16
hlt
or
or
push
hlt
test
sti
pop
jmp
xor
sub
mov
or
insl
test
scas
inc
and
push
xchg
lret
ljmp
pusha
dec
mov
xchg
fnsave
fidivrl
push
test
lcall
retw
jnp
out
lret
mov
sbb
push
in
scas
mov
test
in
std
in
jo
rolb
es
xchg
pop
inc
inc
in
mov
xchg
xchg
shll
push
adcb
cwtl
push
out
imul
rcrl
cmp
xchg
mov
shll
cwtl
sbbb
clc
inc
ret
std
addr16
adc
in
pop
add
stos
sub
mov
cld
js
xor
scas
insl
sbb
scas
adcb
pop
adcl
xor
fldt
mov
cmp
ror
ljmp
icebp
and
sub
or
ljmp
xchg
push
adc
loope
or
dec
addr16
fwait
dec
movsb
jae
lret
stc
jp
push
sub
sub
pop
pop
cmp
mov
mov
lea
cmc
cmp
sbb
scas
xchg
mov
dec
and
push
stc
stos
jnp
cmp
adc
or
jp
jns
xchg
movsb
pop
push
push
std
loopne
jge
repnz
in
std
fdivl
daa
ss
and
pop
loop
xor
mov
adc
and
sub
xlat
add
test
mov
sti
lods
jb
incb
push
dec
into
mov
cmp
loop
add
jmp
cmp
mov
orl
pusha
sbb
fisubrs
and
cmp
mov
in
push
imul
sahf
inc
ja
adc
jb
clc
push
jnp
or
xor
add
mov
jns
adc
sub
rol
in
lock
shr
push
adc
aaa
jge
ret
int
push
push
repnz
mov
out
lock
cli
andb
xchg
xchg
push
fs
fimuls
or
dec
insl
gs
rol
xchg
fisubrs
fsubp
and
dec
or
out
sub
mov
popf
js
mov
or
out
pusha
xor
call
or
cmc
mov
inc
outsb
outsb
lock
cwtl
xchg
cmc
leave
out
fnsave
add
movsb
xor
arpl
es
pusha
les
call
xchg
or
pop
lods
or
cmpl
ss
mov
jmp
pop
loope
xor
push
cwtl
mov
xchg
enter
sbb
adc
scas
dec
aaa
adc
scas
bnd
pop
loope
mov
mov
and
fcmovbe
mov
mov
leave
mov
ss
xchg
push
sub
ret
xor
dec
adc
insb
nop
pushf
sbb
push
aad
cli
inc
scas
jne
or
es
daa
sub
or
dec
cmp
push
insb
lock
push
outsl
popf
jmp
rorl
add
movsl
imul
xor
xor
lea
push
cmp
inc
insl
add
add
mov
adc
pusha
ret
mov
add
jne
fistpl
xor
push
push
test
mov
dec
cwtl
roll
jnp
xchg
nop
stc
cwtl
mov
std
cmp
ss
das
xchg
movsl
sbb
jp
jmp
push
pop
inc
aaa
sub
jo
mov
push
test
lcall
pop
pop
push
cmc
int
and
jae
nop
lods
test
cmpsl
sbb
and
jge
sbb
mov
jno
xchg
pop
daa
mov
iret
decl
sub
roll
js
ljmp
lret
adc
iret
xchg
dec
fcomps
xchg
mov
sahf
fldz
xor
aad
dec
fldcw
adc
add
xchg
push
inc
mov
sub
je
fcomps
jl
clc
outsb
and
inc
jo
adc
sbb
mov
daa
sahf
jle
cli
jno
int
aaa
call
mov
pmovmskb
inc
and
and
daa
es
mov
mov
pop
mov
jno
pop
clc
sahf
mov
lret
push
jne
test
push
pop
int
movsb
dec
sarb
xlat
lock
fisttps
cmp
cmp
pop
test
mov
mov
add
bound
out
push
jmp
subl
mov
pop
or
out
sahf
or
push
sub
mov
pop
sbb
aas
sbb
std
pop
mov
push
dec
jo
fmuls
xchg
fdivrp
and
stos
idivb
scas
in
pop
notb
loop
push
adc
stc
test
sarl
aaa
sarl
mov
dec
inc
cmpl
mov
push
fisubl
or
inc
xchg
jge
cmp
test
test
push
mov
sbb
cwtl
js
mov
dec
add
xor
or
mov
sub
xor
and
shr
xor
ret
xlat
push
adc
call
sbb
outsb
xchg
hlt
adc
xadd
push
push
xor
adcb
add
sbb
sbb
stc
call
pop
stos
pop
sbb
je
add
rolb
push
out
pop
outsl
or
sbb
into
fadd
adc
popa
test
lea
push
jne
gs
iret
push
ret
lret
mov
popf
imul
pushf
scas
hlt
ret
call
iret
lea
aaa
sub
sub
mov
cli
aad
movsb
hlt
pop
lds
add
inc
sarb
push
sub
adc
mov
orl
insl
xor
dec
int3
add
fnstenv
xorl
inc
aam
cmc
out
test
cld
clc
or
mov
lea
and
and
sti
mov
and
mov
push
mov
int3
cwtl
fistl
cld
frstor
jb
int3
xlat
jo
sbb
dec
mov
xlat
loope
mov
repnz
or
jecxz
dec
xchg
in
xchg
lret
sub
insb
adc
out
jo
sbb
movsl
mov
in
movsb
dec
cmp
decb
or
push
xorb
jnp
inc
pop
loopne
dec
jl
push
in
jle
sbb
pop
adc
jmp
lds
jmp
rcll
dec
mov
outsb
jo
and
mov
lret
mov
aaa
push
es
test
imul
pop
lret
mov
stos
sbb
fists
push
mov
je
inc
xor
cmpsb
lret
pop
push
mov
stc
stos
fs
movsl
push
push
sub
outsl
cmp
cmp
pusha
insb
mov
push
inc
hlt
add
repz
sar
cmc
stc
xchg
cwtl
insb
and
loopne
movsb
xor
dec
and
bound
jecxz
xchg
inc
lods
cld
cli
or
sub
or
push
push
cmp
jbe
dec
shlb
push
lods
jnp
add
xor
xchg
push
ds
call
push
or
mov
pop
sub
push
pop
mov
or
or
mov
pop
out
leave
test
push
mov
lcall
pop
xchg
push
out
xor
pop
mov
sahf
dec
dec
lock
sti
xor
movsb
fisubrl
shrl
mov
insl
xchg
sub
xchg
stos
ret
mov
cmp
xchg
push
mov
sbb
in
cmp
cmp
test
pop
and
dec
mov
int3
adc
cmp
adc
enter
add
out
repz
imul
aad
test
mov
or
push
leave
dec
xor
lods
jno
pop
stc
mov
aad
or
cwtl
cmpsb
jp
xor
jnp
pop
lods
push
enter
sti
pop
das
push
stc
hlt
fmull
xchg
out
addr16
pusha
cmc
repz
or
das
ljmp
setns
es
xor
mov
xor
jbe
push
outsb
push
je
ss
imul
pop
cmp
movsl
fwait
push
lret
stos
and
call
sub
or
dec
fsubr
lods
push
mov
out
test
fsubrl
ds
xor
out
jp
fimuls
scas
sbb
cmpsl
pop
jne
xor
fisubrl
scas
lcall
add
mov
xor
cmp
sarb
movsb
or
das
bound
add
pusha
pop
pop
pop
ret
ret
jmp
inc
bound
loopne
dec
addr16
ret
es
xor
popf
int3
rolb
insb
dec
push
fwait
mov
aad
call
sti
fld1
lds
mov
cmp
out
mov
aaa
aam
jbe
pop
lret
mov
xchg
lahf
dec
xchg
push
dec
scas
inc
cmp
mov
sbbb
jbe
outsl
fsubl
enter
push
inc
test
and
pop
or
stos
lea
mov
jmp
mov
xor
lahf
and
pop
cmp
push
inc
in
movsl
jnp
lock
aad
lret
sub
insl
cli
sar
sbb
movsb
mov
or
fwait
xchg
sbb
scas
stos
jno
outsb
adcl
inc
and
push
pop
ss
dec
je
pop
movsl
sub
jbe
push
xchg
add
in
inc
test
xchg
push
decl
or
cld
ja
flds
insb
int3
mov
mov
push
inc
insb
hlt
dec
add
test
mov
mov
nop
inc
popf
push
cmc
cmp
insl
inc
cmpsl
and
dec
movsb
push
or
sbb
pop
cmpsl
adc
addr16
bound
add
push
dec
adc
mov
cmp
inc
or
mov
sti
mov
in
xchg
sahf
jg
leave
push
outsl
insb
xor
addb
test
push
jecxz
push
pop
sub
mov
sti
adc
dec
mov
pop
stos
stos
mov
push
inc
and
adc
push
in
daa
test
inc
das
adc
mov
mov
shll
test
aad
lret
xchg
mov
lcall
lahf
xchg
push
mov
inc
ljmp
jbe
subl
mov
mov
push
clc
aaa
push
roll
cs
test
mov
stc
mov
add
dec
ss
rol
and
js,pt
icebp
jae
fwait
jne
cmove
mull
pop
subl
daa
jae
cmp
rcr
ljmp
lahf
push
mov
jns
mov
pop
test
repnz
jno
negl
mov
mov
jns
loopne
popa
test
inc
pop
cmp
push
xor
inc
mov
pusha
add
mov
or
adc
lcall
cli
pop
mov
sbb
dec
stos
pop
cli
ja
lret
or
jne
jg
test
jnp
gs
or
or
pop
repz
push
lds
fistpl
cmp
cmp
aaa
sahf
adc
pushl
jne
inc
inc
inc
mulb
or
xlat
xchg
test
cltd
sbbl
mov
jecxz
lcall
mov
dec
ss
rcll
and
hlt
cld
outsl
dec
jmp
clc
inc
sbb
sub
xchg
imul
mov
mov
mov
dec
fsubl
xor
jmp
xor
hlt
mov
and
repz
and
mov
pop
hlt
or
not
out
in
shrb
push
xor
shlb
cwtl
ret
ret
sti
les
mov
sbb
lods
fiaddl
ret
add
dec
out
cmp
add
aas
pop
sti
test
aas
cmpsl
mov
fs
jne
add
push
mov
inc
vpunpckhwd
ds
and
add
lahf
pop
lret
cli
cmc
inc
adc
pop
ret
mov
scas
jge
pop
cmpsl
jl
dec
or
adc
mov
ficomps
and
cmc
les
fbstp
divl
or
pusha
xor
insl
jb
sarb
ret
add
cmpsl
xlat
or
mov
dec
lret
cmp
bound
ss
stc
jnp
daa
xor
jmp
sbb
xchg
adc
jnp
or
incl
and
xor
xchg
xchg
jnp
rcrb
xchg
dec
jg
imul
jecxz
pop
mov
push
pusha
fdivl
ror
aas
fstl
cltd
imul
lret
jecxz
jb
mov
pop
sbb
bound
fistps
mov
jae
test
dec
fwait
cwtl
or
cld
and
or
cli
sbb
lock
ja
add
daa
add
loopne
push
add
fmul
clc
sahf
and
leave
jg
dec
addr16
mov
mov
or
shl
pop
mov
adc
repz
cmp
push
xor
sub
lret
xchg
movsb
popa
aam
fsubs
push
mov
lret
fwait
les
sbb
push
gs
xchg
xorb
loopne
mov
rcrb
xor
es
push
mov
ss
add
cmpsb
test
out
xlat
jl
stos
popa
movsl
sbb
mov
insb
movsl
gs
rcr
dec
and
push
out
test
jns
push
mov
decb
inc
jae
rcrb
xchg
and
xchg
mov
rclb
adc
std
outsb
lahf
xor
jmp
data16
pop
dec
imul
hlt
sub
jo
cmc
jne
imul
mov
das
ljmp
test
cmp
das
fwait
aad
idivl
fmul
xlat
lods
sub
pop
insl
push
fisttps
push
rol
dec
mov
pop
or
sub
rclb
jno
mov
sub
mov
ss
jmp
xchg
decb
popa
popa
inc
sbb
and
in
mov
mov
or
lcall
xor
outsb
mov
mov
xor
pop
push
xchg
subb
push
mov
pop
mov
adc
insl
sub
lret
jle
enter
test
inc
popa
pusha
sub
jae
or
es
xor
out
and
daa
aad
fisttps
fistpll
dec
mov
pop
cmpb
xchg
out
aas
dec
test
addb
in
push
call
test
xor
cli
xor
stc
xor
shr
dec
adc
xlat
imul
orl
cmp
ljmp
sbb
sub
scas
sbb
xchg
fnstcw
shll
xor
icebp
mov
repnz
cli
js
mov
loopne
xchg
add
pop
ja
mov
repz
mov
sbb
inc
or
jg
sub
or
dec
rclb
sbb
and
cmp
push
jp
call
sub
dec
sarl
jp
mov
adc
lock
test
dec
xchg
mov
lcall
aas
js
pop
adc
jae
int
ja
add
jge
outsl
mov
xor
mov
insb
push
aas
pop
adc
dec
and
loop
push
mov
dec
lds
xor
or
shll
mov
push
adc
jbe
scas
sbb
data16
setg
gs
adc
fildll
mov
clc
or
xchg
pop
push
das
sarb
shlb
xor
fistl
jne
or
mov
sbb
movsb
xor
push
add
sub
jl
fmull
or
add
xor
push
sub
xor
cwtl
cmp
loopne
mov
and
dec
inc
lahf
push
movl
int3
js
das
stos
xor
js
movsb
ljmp
pushf
jmp
addl
mov
sub
into
pop
pop
xchg
sti
pop
or
dec
enter
or
adc
cmp
inc
addb
nop
sbb
lret
inc
cmpsb
xchg
mov
cmpb
ret
inc
aad
adc
cwtl
into
movb
mov
test
mov
repnz
push
cmpsl
cmp
gs
and
stos
mov
sbb
mov
cli
push
cmp
lods
and
aad
outsl
lcall
jmp
push
sbb
jns
mov
mov
les
pop
test
stc
lret
and
aad
ss
testb
divl
imul
iret
sub
add
cmc
mov
push
inc
subl
sarl
inc
fcoml
cmp
jmp
outsb
lcall
xchg
push
jns
shr
mov
dec
int3
clc
out
jae
and
or
fidivs
sahf
mov
jle
pop
jg
outsb
or
jae
xorl
mov
pusha
icebp
loope
push
mov
in
punpcklbw
loop
lret
movsb
lcall
roll
lods
pop
shr
loop
or
pop
sbb
cmpsb
into
mov
sub
js
in
aam
nop
xchg
xchg
ror
lret
test
mov
pop
pop
or
adc
out
pop
pop
push
sahf
ds
popa
test
jns
out
fsin
jae
data16
xor
stos
jl
adc
in
mov
inc
cld
fcoms
pop
mov
sarb
loope
call
and
xchg
mov
push
stos
mov
jns
inc
cmpsl
loopne
xor
mov
insl
insl
inc
ret
adc
jo
mov
in
shll
pop
lcall
into
dec
loop
pop
ret
cmp
call
or
leave
ret
flds
dec
sub
negl
jo
pushf
out
enter
movsl
sub
pushf
xchg
pop
jae
cmp
push
insl
mov
dec
inc
mov
mov
dec
dec
dec
aad
or
pushf
lods
mov
sub
rol
jnp
repz
add
inc
xchg
call
ja
aam
out
cli
push
cmp
xor
pop
rcl
xchg
aam
ja
push
push
pop
xchg
dec
icebp
adc
mov
pop
cmc
fsubs
loope
pop
daa
ja
js
aam
xchg
lret
cli
push
xlat
leave
push
pop
aas
repnz
inc
stos
fisttpll
pop
mov
push
pop
subl
inc
enter
test
test
ljmp
dec
pop
popf
inc
lret
movsb
shll
sub
fistpl
add
pop
adc
mov
ret
pusha
insl
loope
in
test
fwait
lret
jle
cmc
loopne
nop
rorl
or
mov
mov
inc
xchg
clc
inc
aad
push
mov
movsb
ret
test
jp
jo
dec
out
xchg
scas
mov
sti
jp
dec
cmc
xor
adc
aas
jbe
cmc
cmp
shl
cmp
rolb
xlat
inc
xor
xchg
jge
jae
into
ja
daa
pop
sbbl
mov
sub
sub
or
insb
inc
das
cwtl
gs
inc
and
iret
ljmp
adc
mov
xor
leave
scas
mov
sahf
cmpsl
adc
pop
xor
je
sub
pop
nop
dec
fadds
mov
in
inc
out
dec
dec
mov
xchg
es
imul
or
sbb
lret
xchg
loopne
lock
fwait
mov
mov
andb
push
jg
je
nop
mov
andl
aaa
mov
or
mov
iret
aaa
testl
call
nop
mov
jns
dec
out
stc
xor
jecxz
divb
stos
popl
sub
add
fs
popf
add
insb
push
sub
xor
jnp
mov
ja
sbb
cmp
mov
int3
pop
and
pop
jno
push
rclb
insb
dec
mov
mov
fisttpl
cmp
icebp
imul
sub
jle
adc
xchg
jge
fmull
sbb
xchg
add
out
mov
imul
xchg
stc
mov
mov
test
lods
inc
jg
and
pushf
in
lods
ret
sti
leave
je
push
movsb
lahf
clc
fsubs
fs
and
cmp
sbb
fistl
push
jl
rclb
std
arpl
lahf
mov
fistps
mov
outsl
jb
and
sub
lods
mov
inc
mov
aad
call
sbb
ret
push
cmp
adc
push
inc
js
cltd
dec
xor
xchg
mov
sti
insb
xor
movsb
mov
pop
ljmp
int
inc
xor
xchg
and
test
fsubs
repnz
xor
ss
out
loop
je
int3
repz
aad
mov
mov
movsl
leave
lret
jecxz
jne
fnstenv
mov
outsb
je
icebp
xor
sbbb
movsb
sub
or
jo
mov
imul
out
cmp
pusha
sarl
add
dec
or
hlt
rclb
je
cmp
pop
bound
xor
jg
cltd
in
lret
cmp
adc
sbb
adc
gs
pop
dec
cmpsl
leave
sbb
das
cmp
and
adc
and
jl
lds
call
sbb
scas
xor
out
push
lock
xorl
addr16
jle
aam
imul
and
xchg
adcl
push
push
xor
sbb
fisttpl
outsb
xor
popf
mov
out
incl
inc
xor
movsb
jbe
sbbl
and
push
adc
js
jge
aad
les
cmp
pop
add
mov
in
pop
mov
aaa
cltd
sbb
in
cld
rolb
push
adc
xchg
and
test
jp
cmpsb
scas
add
sbb
push
jns
push
inc
cmp
cmp
inc
mov
push
sub
push
sub
mov
push
nop
stos
out
mov
shll
xorl
xchg
andl
pop
or
add
pop
in
movsl
sbb
add
add
pop
mov
cmp
scas
cmp
jmp
jne
pop
cmpsl
or
fmuls
fs
mov
mov
ficomps
fdivrs
daa
mov
int
xchg
mov
sub
loop
cmpsl
push
mov
xor
loope
ss
enter
test
mov
fcoms
jl
fld
mov
inc
inc
jle
call
pusha
mov
test
jg
out
insb
loop
push
push
dec
push
ja
popa
and
push
xchg
xor
loope
mov
ljmp
insl
mov
lahf
and
dec
hlt
xor
jmp
insb
fsub
push
push
jmp
lds
in
sub
mov
and
imul
bound
mov
pop
ret
fs
call
push
mov
test
jno
test
push
push
pop
out
mov
dec
mov
cmpl
scas
mov
cmp
enter
in
call
pop
hlt
scas
push
insb
add
nop
push
ror
inc
xchg
aaa
pop
aad
cmp
repz
cmp
enter
inc
jns
mov
lds
cmp
cmp
popa
cmp
push
adcb
dec
pop
and
or
xchg
dec
xchg
orb
xor
xchg
inc
add
fstpt
or
xchg
fdivrs
decl
movsb
or
in
adc
push
scas
push
data16
and
in
xlat
add
mov
pop
or
push
iret
inc
mov
mov
lcall
loop
fcmove
cwtl
cmp
mov
loope
in
sbb
shlb
cltd
mov
push
push
inc
inc
ret
addl
incl
or
imul
test
or
jbe
dec
fidivrs
and
dec
xor
sti
or
jl
cwtl
sub
fs
mov
test
push
mov
adc
sti
clc
lods
out
ds
dec
fistps
int3
addb
sub
and
aas
mov
jp
xor
dec
aam
ljmp
out
pop
sbb
sub
sub
stos
and
inc
inc
push
adc
add
adc
inc
sbb
dec
push
adc
xor
pop
pusha
adc
fbld
jmp
icebp
xor
out
test
inc
cmpsl
shlb
jp
dec
cld
xchg
mov
mov
cmp
and
xor
push
pop
pop
push
lahf
pop
ja
sbb
or
pop
cwtl
cmc
inc
pusha
scas
mov
imul
or
pop
test
enter
lret
jl
sbb
dec
ja
jg
shrb
ret
pushf
push
mov
ret
test
jno
insb
dec
mov
mov
pop
push
mov
ljmp
add
ret
jmp
push
out
outsl
xor
and
adc
test
inc
add
and
insb
pusha
cmp
ljmp
mov
mov
insb
test
iret
stos
push
int3
push
mov
add
mov
call
gs
mov
cmc
add
cmc
push
hlt
or
cmp
cmp
aaa
call
je
mov
mov
lea
or
inc
cmp
mov
or
dec
imul
lahf
pop
xor
cmp
shlb
test
outsl
lret
push
cld
sub
xor
ret
mov
xlat
loope
dec
jecxz
add
jae
cmp
loope
je
imul
imul
call
pop
sub
leave
daa
pop
cmp
inc
test
fcmovne
out
mov
dec
in
and
pop
in
mov
and
cmp
in
les
xchg
jno
xor
cld
mov
mov
xor
sti
mov
lret
jb
incl
push
dec
mov
pop
inc
dec
pushf
sbb
mov
scas
shrl
push
pop
out
mov
scas
or
fsubrl
jb,pn
daa
mov
addr16
xor
rclb
sbb
lods
xchg
outsb
jge
stc
repz
and
or
out
mov
cmp
jle
loop
mov
add
lret
sub
insl
pop
sub
lret
cmpsl
insb
movb
jge
into
enter
in
xor
out
ja
nop
xor
ret
pop
mov
popa
fisttps
or
mov
mov
in
aad
addr16
push
ss
cmp
push
push
cwtl
or
adc
jo
lret
enter
out
pop
dec
or
aaa
push
jno
mov
mov
sti
pop
inc
cld
mov
dec
lcall
mov
jns
jmp
pop
sub
xchg
mov
iret
repnz
lahf
outsb
adc
ljmp
icebp
xchg
sub
mov
ret
pop
or
or
insb
xor
test
fildl
rolb
sbb
dec
nop
cmp
popa
insb
adc
aaa
call
add
test
sub
adc
ja
lds
arpl
clc
imul
or
push
or
and
repnz
shl
sbb
daa
rdmsr
imul
push
sahf
or
xchg
pop
xchg
sub
inc
sub
adcb
rcl
frstor
cli
fs
ds
cmp
adc
mov
scas
cmp
mov
xchg
jne
mov
testb
or
cmc
lods
and
je
cmp
loopne
xor
cmp
or
addr16
pop
jmp
mov
mov
sti
push
xchg
int
rcll
pusha
movsl
aad
mov
das
in
pop
movsb
clc
ret
xchg
jne
sbb
fs
leave
pop
push
lods
neg
adc
push
rorb
push
dec
or
add
in
lods
mov
sbb
xchg
popa
mov
dec
mov
pop
lods
cwtl
mov
mov
jl
arpl
jb
jecxz
jb
jnp
mov
test
cmp
sbb
mov
clc
in
jecxz
in
mov
sub
fimull
scas
jge
pop
sub
out
insl
sub
pop
inc
adc
xchg
mov
cmp
adc
fidivl
jae
sbb
cmpsl
lahf
jge
fsubrs
jno
mov
pop
xlat
xor
and
push
roll
lcall
fstl
into
imulb
pusha
push
rorl
dec
jle
inc
mov
push
inc
pushf
std
les
inc
mov
jl
test
inc
outsb
or
enter
or
stc
cltd
mov
fwait
cmp
push
outsl
cli
dec
in
jl
mov
adc
add
fs
mov
jg
xchg
lds
push
mov
inc
and
pop
lods
and
cmove
subb
test
mov
pushf
lret
xor
jno
xor
jl
test
fs
jo
xor
and
push
fstpl
aam
aaa
hlt
adc
pop
push
rcrb
push
sub
mov
xor
and
add
adc
sub
cmpl
adc
inc
or
mov
xchg
jg
mov
aad
pop
std
enter
pushf
xor
sti
inc
in
clc
test
data16
sahf
push
mov
push
gs
mov
push
lcallw
sub
mov
ficoms
orb
cmp
push
push
cmp
pop
add
std
popa
outsb
dec
divl
pop
mov
sti
lahf
sahf
imul
xchg
stos
enter
cld
or
mov
scas
dec
out
xchg
call
lcall
shl
ljmp
mov
pop
xchg
mov
xlat
test
pop
loope
cli
fisubs
loop
sub
push
test
jge
pop
in
mov
cltd
fdecstp
out
dec
leave
jl
jmp
push
jle
add
cmpsb
mov
std
call
les
inc
cmp
cltd
cltd
imul
aas
fwait
or
test
out
xor
test
mov
test
mov
idivb
into
ret
jecxz
inc
pushf
ret
enter
rcr
mov
xchg
xchg
xchg
inc
mov
ljmp
test
mov
ljmp
lods
dec
in
enter
test
push
prefetcht2
inc
fsts
push
in
pop
dec
jae
notb
add
daa
adc
xorl
hlt
cmpsb
aam
test
add
and
add
cmp
jo
dec
inc
push
mov
loope
push
inc
paddusw
dec
pop
clc
dec
push
sti
cmp
jnp,pt
push
sbb
lods
in
sub
cmc
bound
lcall
adc
jno
and
popf
je
mov
fildl
mov
cmpsl
dec
scas
mov
enter
xor
dec
hlt
shl
repnz
sbb
push
pop
aad
xchg
xchg
ljmp
shlb
hlt
ds
and
rorb
sub
lret
shlb
cmpb
repz
cltd
sti
les
mov
jl
movsb
add
and
es
fistpll
dec
mov
jg
cmp
push
es
testl
or
in
mov
xchg
xor
sub
sub
repnz
jmp
sub
jg
clc
js
xor
call
jge
cli
jne
cmpsl
push
lcall
dec
cmp
addr16
sbb
ljmp
repz
push
divl
dec
pusha
xlat
hlt
push
int
push
jp
sbb
xor
mov
mov
push
xchg
arpl
fxam
ds
int
ficoms
test
dec
cmp
sbb
xchg
or
pop
fistpll
pusha
ljmp
dec
ljmp
cld
or
mov
scas
js
out
add
addr16
insl
sub
sbb
js
jb
mov
cli
jg
push
push
push
fisttpl
loopne
inc
mov
mov
inc
cmpsb
jp
jns
pusha
testl
jnp
push
in
and
push
test
mov
mov
mov
pop
adc
popf
jecxz
icebp
popf
cmp
cmp
movsb
xchg
push
in
outsl
sti
repz
movsl
pop
jmp
xor
mov
and
xor
lret
push
inc
stos
iret
push
sbb
xor
push
sbbl
cltd
scas
cmp
lahf
out
imul
int
mov
jne
movsl
jle
push
pop
data16
nop
xchg
sbb
lea
out
inc
add
ret
inc
mov
or
lods
xor
dec
pop
cmp
repnz
fs
cmp
fldt
add
loope
lods
cmpsb
push
xchg
test
ret
movsb
fsubr
mov
jg,pt
inc
sbb
jmp
loop
cmp
dec
fnsave
scas
roll
test
or
xchg
rclb
add
aam
div
adc
sarb
xor
push
jg
xchg
adc
jo
ja
mov
adc
xor
jecxz
ds
mov
cmp
dec
sti
ja
aam
jno
jns
sub
fwait
ja
cmpsb
jbe
imul
daa
inc
push
in
orl
loop
xor
fdivs
pop
andl
jp
jg
push
pop
je
mov
mov
xor
push
xor
call
xor
insb
mov
popa
mov
mov
dec
sahf
leave
shlb
lea
xor
sub
fbld
inc
inc
dec
inc
cmp
pop
clc
iret
rorb
nop
das
clc
les
adc
sub
std
jb
icebp
jge
inc
sysenter
pusha
jecxz
push
pop
push
add
mov
lahf
jg
stos
stos
into
and
insl
cmpsb
cmp
pop
cmpsb
outsl
sub
or
sbb
jns
push
push
sub
jp
or
pop
xchg
out
or
aaa
pop
jne
int3
mov
fwait
inc
pop
sub
xor
cmovnp
lret
and
cld
mov
fdiv
popf
and
jecxz
jmp
lds
inc
dec
inc
andl
cltd
jge
xchg
mov
mov
scas
testb
int
daa
xchg
js
out
lcall
imul
push
xor
mov
lock
cmp
arpl
lods
fisttpl
movsl
and
cs
push
pushf
shlb
mov
jo
cmc
xchg
or
sbb
mov
ljmp
add
movsl
jno
and
daa
push
ss
mov
adc
outsl
scas
outsl
mov
fiaddl
adc
jno
loopne
push
out
arpl
push
dec
fs
sbb
mov
cmp
dec
stos
mov
push
xlat
jge
mov
ljmp
push
lcall
pop
pop
mov
out
mov
jecxz
mov
xchg
ret
push
mul
pop
cmpsl
push
call
xchg
pop
out
cmp
pop
jbe
jo
lcall
outsl
in
lods
fisubrs
or
push
xor
xor
out
mov
fisttpll
int3
cwtl
sti
lahf
negb
gs
hlt
aas
inc
outsl
pop
cwtl
ds
les
loop
outsl
jno
insl
mov
lahf
cwtl
andb
js
pop
inc
test
lret
mov
iret
pushaw
jle
push
aaa
shlb
cmpsl
mov
stc
fdivl
sti
cmp
aaa
add
push
jmp
rcrb
pop
cmpsl
shll
addr16
negl
mov
sub
sub
mov
adcb
stc
gs
shll
xor
jo
mov
in
and
gs
sbb
mul
inc
pop
pop
mov
pop
jl
pop
mov
fnstenv
push
mov
and
inc
xchg
into
ficoml
jg
lret
negl
fists
add
sub
jl
jbe
addr16
sbb
imul
xchg
shrl
xchg
push
lods
mov
push
xchg
cmc
testl
test
movsl
sub
push
adc
fcmovnb
addl
fs
push
mov
cwtl
imul
icebp
push
cmpsb
cli
out
push
jle
fs
in
icebp
dec
pusha
bound
cmpsl
lcall
out
mov
fistpll
sarb
scas
dec
js
imul
je
arpl
add
sub
cmp
repnz
je
insb
fcoms
dec
mov
jecxz
shlb
cmp
add
or
mov
aam
xchg
sbb
jo
sub
xor
mov
cmp
add
lret
sub
lock
fists
cmpsl
mov
pop
fcompl
mov
jmp
cmp
mov
push
mov
add
pop
sbb
add
addb
arpl
jbe
decl
xchg
loop
jns
testb
imul
mov
andb
sbb
or
notl
mov
mov
mov
adc
jno
sub
lods
dec
in
xchg
pop
les
clc
fsubl
xchg
adc
repz
cwtl
xchg
mov
cmp
pop
dec
jmp
cmp
or
ret
mov
or
test
jle
xor
std
neg
repnz
aad
fidivl
and
add
mov
aad
dec
leave
enter
fdivrs
sub
in
push
pop
jo
cmp
fisttps
es
dec
out
test
adc
gs
jo
subl
cmp
cmp
inc
or
cmc
stos
stc
loop
or
ds
xor
pop
cwtl
mov
sbb
cmc
push
jne
fisubrs
ds
or
movsb
dec
sbb
mov
loope
in
mov
and
push
lahf
inc
cwtl
mov
pop
dec
pop
popa
std
mov
mov
jne
sbb
push
jae
cmp
mov
lret
pop
jo
notl
sub
inc
xor
mov
stc
rcr
jno
les
adcl
pushf
ja
aas
mov
add
and
test
orb
inc
pop
mov
sbb
cmpsb
or
notb
cld
rorl
push
xor
pop
jl
sbb
mov
divl
fs
testb
inc
icebp
mov
mov
adcl
add
lods
push
clc
xchg
shlb
and
lods
arpl
mov
mov
lds
ja
cld
dec
push
push
hlt
push
in
test
xor
xchg
jne
jae
push
sahf
xlat
movsb
jno
or
int
shll
mov
inc
fisubrl
mov
inc
arpl
insl
and
in
cmp
ds
adc
mov
mov
push
addb
inc
cmpsb
mov
xchg
mov
loop
orb
sahf
bound
push
push
cld
daa
xchg
xchg
imul
cmpb
jp
out
rcrb
fsubp
xchg
ja
sahf
xchg
sub
addr16
sub
cmp
push
fcomps
add
insl
dec
jmp
pop
mov
mov
adc
mulb
or
jmp
lret
mov
lahf
call
and
mov
xchg
data16
repnz
stos
inc
or
jo
mov
in
xchg
pshufw
pop
mov
movd
jo
mov
adc
adc
loop
icebp
das
pop
lock
xchg
sti
sti
xor
int3
call
inc
sub
dec
stc
mov
push
into
leave
dec
cmp
xchg
test
dec
xor
sarl
ret
sub
xor
arpl
ret
mov
and
out
add
sbb
xchg
inc
fidivs
inc
adc
cli
shlb
add
out
push
ds
scas
leave
xchg
out
stos
inc
out
or
scas
nop
push
lea
filds
fdivrl
cmp
jle
stos
inc
out
push
rcrl
lret
out
xchg
add
in
jp
xchg
cmp
mov
loop
sub
adc
mov
cmp
mov
cld
push
dec
lea
cmc
cmp
mov
xlat
daa
or
xchg
cltd
sbb
test
fidivs
lods
xchg
in
rcrl
mov
cmp
mov
pop
mulb
jmp
fnstsw
jl
xchg
flds
pop
mov
adc
stc
inc
mov
jo
dec
mov
and
jbe
jmp
leave
inc
insl
jns
ljmp
cs
fimull
xchg
adc
pop
std
imul
imul
arpl
dec
or
icebp
adc
adc
dec
testl
lret
outsb
mov
sbb
scas
cld
sbb
int
sbb
jp
xor
lods
mov
mov
aas
inc
jns
push
adc
mov
pusha
adc
ja,pt
movsl
insb
std
cmpsl
sbb
mov
pop
cmp
inc
cltd
xchg
pop
fisttpl
scas
fs
add
call
dec
push
sub
push
call
stos
sbb
insb
xchg
lods
xchg
or
xlat
das
xchg
or
cwtl
in
dec
je
fsts
divl
sbb
xor
aad
dec
xor
lds
jo
mov
push
push
lds
sti
and
sub
cmp
cmp
in
fwait
das
rcrb
dec
cmc
inc
sub
test
jmp
lods
icebp
pop
sbb
ficomps
in
aad
les
addr16
pop
in
inc
aad
fs
pop
ret
push
mov
loop
mov
cmc
scas
or
int3
pop
dec
sub
mov
ret
lea
mov
stc
jo
push
push
pop
cmpsb
sub
enter
sbb
in
sbbb
push
inc
jo
cmp
loop
cmp
xor
mov
cmp
roll
jge
pop
sub
mov
mov
rcl
dec
and
cmp
mov
cli
int3
adc
loope
mov
mov
mov
js
cmp
sarb
push
lods
rcll
jo
pop
stos
imul
ja
mov
jle
out
xor
lods
lret
adc
mov
call
cmpsb
loopne
inc
dec
push
push
jle
hlt
adc
push
aas
fcomi
mov
shlb
mov
pop
xchg
mov
out
je
mov
clc
jecxz
psllq
inc
cmpb
sbb
movsl
mov
scas
jg
pop
cmpsb
int3
cmp
xor
mov
xchg
aas
pop
jae
pop
xchg
push
rol
sbb
arpl
pop
push
hlt
pusha
dec
jp
inc
jp
inc
or
repnz
std
add
out
sub
in
cmp
mov
adc
xchg
aas
push
dec
cmp
cmpsb
repz
stc
xlat
mov
xchg
mov
loope
mov
sbb
gs
lahf
imul
mov
xchg
push
outsb
inc
jae
mov
sbb
pushf
pushl
jmp
shlb
xor
idivl
mov
mov
adc
sub
mov
fwait
loop
out
xor
lahf
lret
sbb
or
push
shl
iret
ret
pop
scas
mov
hlt
mov
pop
decb
pop
pop
dec
sahf
lock
pop
push
or
int
push
es
lahf
enter
fcmovne
jae
lods
mov
jo
aas
adcb
popf
scas
mul
iret
push
insb
xor
out
adc
xchg
es
push
cmpsb
sahf
mov
mov
test
mov
hlt
mov
in
mov
or
cmp
mov
pop
dec
mov
xor
xor
cmp
jmp
lea
dec
popf
jns
dec
jge
inc
mov
test
outsb
adc
pusha
cltd
mov
aaa
mov
pushf
xchg
mov
pop
outsb
cmp
jno
pop
pop
mov
inc
pop
add
shlb
jae
cmp
test
and
clc
ljmp
fcompl
lret
mov
gs
mov
int3
mov
xor
mov
push
xchg
mov
popf
dec
mov
add
xchg
jne
push
xor
xorb
jb
lahf
mov
push
iret
pop
sbb
mov
xorb
dec
push
pop
dec
fiaddl
decb
jl
popf
dec
lahf
fdivrl
mov
sbb
adc
xchg
xor
mov
dec
loopne
sub
insl
in
cmp
adc
add
mov
stos
or
scas
inc
and
nop
in
pop
push
add
out
push
arpl
dec
fcoms
xor
jnp
adc
and
fistpl
lods
pop
sub
dec
mov
inc
push
aaa
xlat
je
mov
cmp
sbb
daa
and
push
inc
ret
popa
out
dec
lds
jne
sub
fidivs
aaa
inc
idiv
test
push
fcmovnbe
cmc
dec
inc
mov
cmp
stos
ficomps
mov
rorl
xor
cmpsb
cmpsl
sti
adc
mov
and
repz
pop
push
adc
test
fldcw
loope
fistl
daa
int
testb
pop
sete
scas
sbb
mov
or
clc
fsubr
in
xchg
gs
mov
adc
push
outsl
loope
aaa
mov
sub
std
push
mov
dec
insb
test
pop
sub
call
shlb
inc
mov
sbb
out
mov
and
xor
cli
or
shll
fcmovnb
or
stos
test
or
scas
popf
bound
lahf
inc
fbstp
add
adc
mov
in
sub
sub
push
jp
mov
jmp
pop
popa
into
xor
push
addl
loopne
mov
adc
lcall
mov
and
and
les
pop
enter
out
jo
mov
sbb
adc
sub
push
aad
mov
add
arpl
cmp
xor
or
lds
lret
in
pop
sub
sbb
or
jb
cmc
and
test
scas
push
int
add
or
jb
test
icebp
dec
pop
fbld
add
pop
das
mov
push
out
jmp
hlt
in
ret
clc
fstps
divb
ret
test
jnp
sub
sbb
pop
pop
leave
xor
std
scas
addr16
imul
push
xchg
out
adc
xor
xlat
mov
jnp
mov
rcrb
cld
adcb
pop
push
lret
xchg
int3
fidivs
outsl
jo
fisubs
push
les
xor
sbb
pusha
push
test
cmpsb
jecxz
push
popf
and
popa
popa
fisubrs
aad
sub
jecxz
sub
adc
iret
jmp
push
jge
bound
push
dec
das
popf
sub
out
and
lcall
mov
out
push
test
nop
mov
lods
shrl
cli
lret
dec
test
mov
sbb
mov
sahf
leave
xchg
sbb
xor
adc
add
insb
lods
pop
ret
xor
add
or
cmc
lret
ficoml
add
or
loope
xor
clc
cmpsb
push
sbb
ficomps
cwtl
pop
adc
icebp
arpl
pop
pushf
pop
or
push
mov
test
testl
out
cmp
and
fcoml
push
and
mov
mov
mov
sahf
adc
out
clc
fnsave
pop
mov
out
ret
popf
mov
or
loopne
cld
add
jbe
mov
xchg
pop
cmp
or
stc
sub
mov
mov
adc
ret
shll
add
xor
mov
sbb
and
sbb
cmpsl
jp
inc
je
aas
gs
pop
sbb
xchg
out
and
mov
sti
pop
out
mov
repz
mov
and
insb
insb
mov
sub
sub
fistpl
push
pop
cli
dec
pushf
xor
mov
pop
and
loope
int3
lret
test
mov
rol
or
jecxz
in
inc
add
jae
stc
outsb
dec
fidivrs
nop
fsub
stos
lock
mov
xor
clc
arpl
rcll
inc
cli
ja
enter
mov
add
xchg
cmp
sarl
xchg
mov
frstor
and
jg
out
bound
mov
sub
lcall
xor
in
outsl
jecxz
popf
jmp
lahf
les
push
cld
pop
rcrl
je
mov
jl
test
cltd
jl
push
in
shll
mov
test
jl
enter
cmpsl
movsb
fs
pop
aam
sbb
and
nop
cs
xor
cmp
mov
jo
lcall
lret
les
jmp
mov
xchg
inc
sbb
jae
add
mov
sbb
mov
lea
fimuls
mov
jno
xor
cmc
xchg
jae
pop
mov
cmp
pop
or
add
mov
movsb
mov
dec
test
or
pop
test
push
filds
mov
test
mov
mov
test
mov
dec
sahf
fcoml
daa
dec
cld
adc
iret
push
mov
mov
xor
mov
sub
lods
loopne
inc
popf
stos
sub
sub
vorpd
dec
push
pop
or
inc
shrl
lds
jmp
inc
enter
xor
dec
fisttps
xchg
xor
shrl
rep
repz
adc
jo
test
or
sub
pop
push
and
mov
mov
repnz
mov
test
shrl
out
jl
fsubrl
xor
lods
nop
pop
movsb
push
sbb
lock
adc
stos
outsl
js
insb
mov
call
add
dec
popa
daa
mov
inc
orps
sbb
mov
outsb
lahf
push
mov
inc
into
call
mov
push
mov
repz
add
movsl
sti
jo
mov
mov
mov
shl
xchg
enter
jl
sub
or
gs
clc
cmpb
jp
cmp
xor
cltd
add
lds
and
shrl
pop
pop
sbb
xor
clc
push
and
mov
add
js
stos
cmp
cmp
mov
in
push
dec
cli
inc
or
jmp
js
xlat
cli
rorl
outsb
mov
out
jns
push
or
js
fabs
orb
cmpb
jge
inc
or
sahf
scas
fstp
test
xor
pop
cmp
xchg
insb
sarl
xchg
adc
xchg
pop
cmp
ljmp
xor
jb
mov
mov
add
int
ljmp
mov
mulb
out
mov
call
mov
mov
dec
mov
pop
sti
mov
mov
test
push
mov
daa
sub
daa
and
testb
xchg
gs
lcall
clc
mov
push
or
ds
cs
xor
lahf
mov
lock
bound
rcrb
pop
int3
sti
mov
dec
negb
mov
mov
int3
push
sbb
aam
imulb
mov
paddusw
push
mov
mov
lods
roll
fstpl
push
pop
lahf
loopne
ret
sub
cmc
add
inc
orl
jns
test
mov
insl
sub
adc
mov
neg
addr16
sbb
aaa
sub
ljmp
xchg
cmp
out
xchg
mov
dec
test
inc
loop
mov
cmp
inc
dec
cmpsb
aaa
sbb
mov
inc
and
out
mov
jae
pmulhw
push
sbb
les
inc
xchg
aas
xor
add
adc
pop
inc
fs
incl
push
test
imul
fs
pop
fld
adc
inc
loop
movsl
push
int3
pop
mov
test
mov
iret
ss
fdivr
pop
dec
leave
cld
mov
test
js
cmp
les
mov
jg
stos
fwait
adc
pusha
xchg
ds
aas
data16
sub
sub
nop
cld
dec
mov
negb
popa
mov
movsb
mov
loopne
fwait
xor
mov
and
jns
rolb
pop
xor
push
gs
adc
shrb
sarb
sbb
ljmp
roll
inc
mov
adc
inc
adc
cmp
dec
add
cmc
into
sbbl
das
jmp
push
cmp
in
fidivs
adc
hlt
mov
sbb
xchg
push
jns
mov
cmp
jmp
cmp
xchg
movsl
decl
sahf
pop
test
mov
ljmp
ljmp
mov
mov
cmc
pop
cmp
pusha
jp
in
mov
mov
pop
cmp
mov
mov
xchg
aaa
mov
sbb
sbb
fwait
aaa
sbbl
jns
int
mov
fmulp
and
out
stos
jnp
dec
notb
xor
dec
jbe
pusha
pop
jns
movsl
mov
mov
pop
dec
and
pop
into
sub
mov
dec
pusha
xor
lods
roll
mov
lret
jae
cmpsl
fnstcw
pop
cli
mov
jl
movsl
shlb
enter
nop
iret
inc
std
mov
jnp
adc
clc
pop
mov
cmp
add
cmp
xorl
dec
inc
pop
add
popa
jns
xor
mov
stos
and
incl
push
ljmp
add
dec
inc
pop
out
inc
dec
xor
pop
gs
mov
test
in
hlt
pusha
scas
les
mov
clc
xor
mov
xor
std
insb
inc
sti
mov
sub
rorb
int3
dec
mov
cmp
imul
push
or
shlb
mov
test
jge
mov
mov
daa
mov
or
fs
dec
xor
cmpl
insb
int
movsl
loop
das
out
cmp
in
dec
or
mulb
aaa
cmp
xor
sbb
adc
fcmovb
clc
test
sahf
add
and
mov
or
xchg
fldl
and
enter
js
movl
roll
scas
cmp
js
mov
dec
sti
jmp
daa
rolb
inc
jle
daa
jl
bnd
fidivrl
call
dec
add
pop
jecxz
inc
cmpsb
push
mov
lret
leave
clc
sub
mov
out
out
pop
mov
mov
xchg
xchg
lods
decl
lock
imul
or
cmp
aas
dec
pop
cmp
test
inc
mov
test
jg
lods
es
dec
and
adc
dec
jae
xor
mov
ss
or
ss
fbstp
icebp
pop
mov
or
xor
jge
push
pusha
sub
add
or
mov
fmuls
mov
xor
or
out
stos
sbb
lods
js
ds
push
aas
nop
cld
es
pusha
test
dec
and
add
mov
test
in
sub
lret
sub
jle
xchg
lea
jl
cmc
in
out
mov
ficompl
addb
lock
sbb
in
mov
icebp
adc
pop
pop
jge
mov
cmp
push
lods
shll
bound
shll
cmp
popa
mov
and
shl
shlb
test
push
outsb
push
iret
mov
cmp
mov
aas
jo
fmull
out
jp
xchg
sub
push
pop
dec
adc
shl
mov
jo
ret
aaa
inc
dec
add
test
mov
mov
jo
cmp
mov
jae
mov
jne
insl
adc
adc
sbb
xor
push
mov
or
push
pop
xor
adc
dec
xchg
test
pop
shrb
adc
cli
aad
and
addr16
adc
fiaddl
push
jnp
adc
jmp
push
popa
scas
push
and
fimull
xor
pop
sahf
setp
aad
aaa
sub
add
imul
xor
push
xor
call
out
bound
mov
inc
push
data16
int3
out
jae
pushf
stos
sub
xor
fcmovne
inc
insb
fisubrs
adc
push
add
push
mov
pop
dec
out
pop
outsl
inc
dec
aaa
fidivrl
test
jecxz
neg
or
xor
or
cmp
sahf
int
stc
hlt
inc
aad
pop
addb
pop
ret
mov
ds
add
mov
pop
scas
push
xor
dec
rolb
clc
dec
scas
cli
call
movsl
adc
sub
jle
movsb
add
add
das
push
out
inc
outsl
xor
lods
rcrl
clc
test
insb
lcall
arpl
loope
xlat
or
pop
jl
popa
adc
and
cmpsb
lods
lcall
lcall
popa
repz
jmp
test
adc
mov
xchg
mov
jns
mov
movsb
sub
dec
dec
movsl
pop
test
negl
imul
ljmp
lcall
sbb
jle
out
out
mov
leave
dec
inc
test
in
ss
cmp
cmp
add
xchg
pushf
mov
fcom
or
adc
jne
outsl
loope
jle
push
outsb
in
adc
aad
mov
js
cld
lret
adc
stc
imul
sti
js
dec
adc
xchg
jnp
inc
pop
jo
xchg
mov
rcrb
or
jbe
cmp
jge
mov
ja
dec
subl
shrl
and
cld
pop
fidivl
or
outsb
test
rorl
cmpsl
pop
pop
cmp
xor
xchg
xor
aad
push
xchg
enter
ja
push
fbld
dec
lods
dec
leave
out
ret
jge
test
cmp
loop
mov
pop
xlat
es
inc
int
loopne
inc
or
outsb
jo
mov
dec
sbbl
pop
bound
cs
xlat
adc
cmp
sub
ds
fiaddl
lret
incb
lds
sahf
sub
aas
xor
lahf
sbb
xor
sbb
add
dec
dec
or
mov
stos
adc
jp
addr16
or
out
mov
lods
fistpll
fiaddl
or
fwait
sbb
mov
insl
mov
mov
mov
push
shl
and
mov
rcrb
jecxz
push
lcall
leave
fdiv
lods
mov
mov
ljmp
sbb
div
pop
sahf
imul
pop
and
sub
pop
inc
mov
and
add
ljmp
cmp
std
push
jecxz
xchg
lods
leave
testl
fld
cmp
lret
out
cmc
fadd
loopne
and
jg
lret
add
lock
pop
cmp
test
shll
sbb
add
ds
cmc
push
xchg
insb
lret
add
aam
popa
std
inc
pop
imul
fistpl
xor
or
aas
jno
xor
stos
ljmp
xchg
mov
xchg
cmpsl
fmul
int3
sahf
ljmp
sar
adc
filds
lods
mov
mov
and
dec
imul
jnp
or
pop
and
out
adc
repz
xor
popf
sub
enter
sub
out
test
add
mov
sub
data16
fmul
mov
rcll
test
loope
sub
or
dec
xchg
addb
out
scas
sub
aam
lret
loop
and
pusha
or
lea
cmc
cmovno
dec
mov
push
cmp
xchg
mov
js
pop
or
xchg
dec
inc
xchg
ret
xor
rcll
negb
lods
leave
fsub
push
jmp
cmp
les
cld
push
std
test
in
scas
aas
out
decl
inc
pop
mov
cmp
lods
mov
cmpsb
int3
mov
lret
imul
lahf
push
lods
bnd
aaa
sbb
adc
lcall
fldt
rclb
ffree
cmp
aam
mov
mov
sbb
xchg
inc
movsb
dec
sub
mov
pusha
xchg
out
sahf
push
sub
fldcw
imul
and
insl
lcall
adc
cmp
call
leave
arpl
and
mov
or
xor
xchg
pop
xor
or
cmp
xchg
insb
fld
js
repz
cmpsb
data16
xchg
mov
jns
jb
negl
mov
inc
mov
xchg
ja
cmp
popf
mov
add
or
push
ss
jg
push
dec
inc
jle
adc
xchg
repz
push
dec
mov
std
shr
or
gs
and
ss
test
sub
insl
daa
out
mov
pop
iret
nop
push
gs
sbb
jnp
ja
in
jb
adc
mov
in
pushf
cmp
int3
daa
jb
mov
cmp
xlat
or
jl
mov
ret
les
and
push
test
into
jns
decl
push
pushf
add
sub
test
mov
dec
lret
jbe
lods
testb
cmpl
mov
and
cmc
cmpsb
cmp
js
rcr
jmp
repz
shrl
push
aas
or
push
ret
inc
jl
or
xor
scas
sar
adcb
pop
in
inc
mov
loopne
pop
mov
mov
mov
inc
pop
jae
gs
dec
sub
and
xor
fdivrp
dec
mov
sbb
push
ja
fs
mov
fldt
sbbl
stos
test
mov
loopne
pop
pop
pop
mov
js
jo
stc
xchg
out
pop
lret
test
sbb
loop
xchg
xchg
pop
fcom
mov
xor
pop
mov
jbe
sbb
push
inc
xchg
std
and
adc
aas
shr
lret
inc
aam
in
push
mov
add
stos
mov
icebp
pop
xor
lods
sub
lods
lock
jne
add
insb
enter
sub
sbb
notl
clc
stos
inc
lahf
cld
xor
xchg
roll
xor
pop
iret
mov
mov
call
in
jl
mov
loop
xor
mov
xchg
jnp
add
sti
jecxz
fiadds
add
jl
roll
jo
xchg
int3
cmp
mov
xchg
pushf
push
sub
pop
pushf
mov
in
adc
mov
and
dec
jmp
jae
aam
jne
in
outsb
mov
ja
adc
adc
inc
sbb
ret
or
push
jo
add
jg
inc
lcall
add
jle
mov
and
cmpsb
icebp
fwait
mov
decb
sub
jno
xchg
ds
scas
jno
test
loope
rorl
popa
and
pop
or
loop
fmul
scas
mov
in
sub
push
pusha
inc
xchg
ret
imul
jg
sbb
mov
cmpsb
in
and
mov
test
test
xchg
or
mov
cld
xor
jo
cli
jo
mov
adc
rcrb
fcomip
mov
inc
inc
sbb
iret
or
add
cmpsl
cmp
xor
mov
pop
outsl
outsb
int
push
out
cs
pop
pop
inc
sbb
or
or
ds
fnstsw
cmp
mov
outsl
stos
push
lock
jge
lea
sarl
inc
jbe
add
popa
fmuls
dec
push
push
xchg
in
pop
inc
clc
lods
inc
pop
adc
dec
push
fisubl
mov
stc
mov
xor
dec
call
cli
cmp
jnp
shlb
pop
test
loop
add
aas
scas
jp
jns
ficompl
cmc
sub
int3
mov
xchg
out
sub
pop
mov
and
mov
sbb
into
mov
push
jge
fsubrs
testl
gs
and
fidivl
mov
mov
adc
mov
fimull
pop
rorl
outsb
in
repnz
xchg
cmp
aam
sub
adc
iret
and
inc
packsswb
or
add
mov
inc
fxch
sub
es
inc
jb
outsl
inc
jns
out
mov
mov
sarb
push
js
fdiv
out
mov
popf
pop
push
xchg
mov
call
mov
mov
jge
mov
or
mov
test
dec
push
rclb
push
mov
adc
cld
adc
sbb
dec
mov
sbb
out
mov
push
jmp
repz
inc
movsl
cmp
es
xorl
les
gs
cld
loop
mov
jno
dec
cltd
aaa
std
add
pop
ds
lds
std
push
inc
and
cmp
mov
mov
mov
out
sub
push
sbb
repnz
inc
in
lahf
adc
sbb
xchg
cltd
sub
loop
ljmp
pop
lods
insl
arpl
push
daa
aad
cli
cmp
xor
notb
shll
xor
push
xchg
aad
in
xor
add
bound
dec
add
insl
into
pop
stos
mov
sub
inc
sbb
and
fistpll
hlt
les
push
xorb
fwait
hlt
mov
je
fidivrl
jl
jne
arpl
repnz
hlt
out
jbe
idivl
jbe
rcrb
cmpsb
std
mov
push
sbb
cmp
cmc
xchg
pop
mov
out
and
adc
adc
mov
popf
inc
lock
out
repnz
in
filds
imul
xchg
xchg
stos
sbb
sbb
mov
jp
pop
lds
adc
cmc
adc
pop
lea
sbb
jle
outsb
pop
aad
sub
cli
cmp
lret
cmp
cmpsl
rcrb
sarl
mov
scas
rol
repz
cmp
mov
push
jecxz
push
arpl
cwtl
int3
movsl
dec
sub
push
les
mov
cmp
pop
aam
aas
cmpsb
xchg
roll
subl
cmp
idiv
test
fists
add
and
imul
push
inc
test
cmp
shll
dec
lret
lea
pop
mov
dec
add
mov
mov
dec
mov
inc
xor
pop
jo
cs
sti
xchg
xlat
negb
in
inc
ror
push
cld
add
stc
add
shrl
mov
rcrl
ds
lock
bound
and
leave
push
dec
cmpsl
repz
movsl
xor
add
movsb
dec
mov
shlb
xchg
sbb
imul
fcoms
movsl
xchg
out
bound
jle
aad
jns
scas
jge
dec
sbb
lds
or
out
dec
cmp
hlt
movsb
jmp
test
jnp
push
stos
mov
in
fadds
into
scas
out
mov
pop
call
mov
jnp
out
push
mov
pop
mov
pop
jo
fnstenv
jp
push
enter
call
mov
fbstp
push
cmp
std
pop
aad
nop
push
sub
xor
xor
gs
sub
leave
mov
add
ljmp
jae
xor
stos
repz
outsl
push
xor
in
jmp
mov
data16
ljmp
adc
xchg
pop
jle
leave
hlt
addb
adc
jmp
pop
mov
call
cli
mov
mov
or
lret
arpl
aam
sbb
xor
mov
xchg
add
xchg
and
jo
adc
aam
xor
fwait
outsl
imul
mov
cmp
and
pop
mov
cwtl
or
in
lea
dec
pop
xchg
xchg
js
mov
ds
pop
cli
clc
sti
and
cmpsb
fistl
les
scas
mov
std
test
jg
clc
out
mov
out
lds
adc
xchg
ljmp
add
cmpb
jae
and
enter
shll
popf
add
jno
or
pop
dec
mov
xchg
arpl
jle
cmp
jb
jg
scas
cmpsb
push
hlt
sbb
test
adc
push
out
ja
sbb
dec
nop
loope
cs
mov
repz
rcrb
push
imul
adc
dec
inc
or
cmp
and
clc
test
dec
jge
scas
adc
push
inc
sub
jmp
jmp
pop
test
scas
imul
or
les
mov
popf
test
cs
sbb
rclb
sbb
push
mov
xchg
clc
lcall
outsl
mov
loop
cmpsb
xor
xchg
push
fcomps
mov
dec
sbb
syscall
mov
shrl
inc
inc
adcl
pop
inc
movsb
jmp
inc
jp
mov
popf
dec
daa
aas
addr16
inc
push
sub
sbb
inc
inc
mov
push
rorb
divb
and
mov
hlt
rcll
movsb
test
jo
xlat
int
sahf
jmp
or
dec
int3
pop
movsb
cmpsl
out
fwait
loop
pop
fisubl
and
cmp
pop
cmp
mov
dec
xchg
push
mov
adc
push
imul
test
mov
fs
decb
insl
cmpsl
push
xor
inc
inc
push
bound
dec
test
pop
sahf
xchg
adcb
xor
les
and
les
shlb
pop
inc
jbe
or
jle
mov
cwtl
int
pop
mov
mov
cmp
mov
sub
sbb
adc
je
and
sub
int3
in
cld
mov
add
cmc
push
pop
xor
push
test
mov
jno
jg
rcrl
fstpl
inc
push
aaa
cmpsl
and
loope
jmp
xchg
imul
fsubrl
loop
mov
dec
pop
or
sub
cmpsb
add
inc
xchg
mov
sub
outsl
cmpsl
jne
lods
je
fwait
mov
mov
icebp
pop
dec
sub
lock
mov
pop
adc
xchg
push
pop
pop
iret
adc
pop
fistps
push
xchg
outsl
testl
push
sub
mov
outsb
mov
je
pop
mov
sahf
mov
jg
daa
push
rorl
dec
bnd
arpl
inc
dec
push
aam
daa
daa
xor
ja
aaa
xchg
pop
out
inc
xchg
xchg
fsubs
imul
lods
insl
das
jnp
les
mov
pop
test
call
jne
and
lret
xor
out
mov
paddusb
inc
lods
mov
cmp
mov
lock
daa
out
xor
stos
and
push
push
stos
addr16
jno
mov
sbb
inc
cmp
pop
in
pop
out
jns
mov
popa
jg
xor
lret
pop
daa
mov
js
out
xor
test
enter
jle
ja
fstpl
dec
dec
mov
mull
mov
repnz
dec
mov
sti
mull
cmpsl
cmpsl
pop
adc
inc
pop
xchg
cwtl
aad
pop
xchg
stc
sbb
ss
ds
jg
push
data16
outsl
daa
xchg
into
sti
push
inc
popl
and
mov
dec
daa
lcall
aam
aaa
pop
adc
dec
mov
push
mov
imul
gs
shrb
mov
test
lahf
imul
pop
mov
mov
inc
push
adc
inc
scas
das
mov
adc
fsts
fwait
in
lret
loope
cmpsb
add
and
dec
rclb
mov
dec
jo
lcall
stos
lret
ljmp
pushf
or
data16
in
stos
aaa
push
outsl
rolb
aad
and
out
popa
cmc
mov
int3
dec
jbe
call
mov
mov
call
lahf
aam
mov
cmp
jg
shlb
push
cs
scas
xchg
xor
or
stc
insb
dec
std
out
add
push
or
leave
mov
adcl
sti
scas
enter
mov
dec
jg
inc
lods
push
in
mov
mov
and
ljmp
sub
push
icebp
enter
dec
or
loopne
pop
gs
pusha
mov
lea
cmp
dec
popa
sub
test
xor
mov
sbb
push
imul
xchg
inc
lcall
lahf
xor
repnz
cmp
cwtl
jo
mov
jp
fnstcw
daa
insb
xchg
ljmp
pop
push
dec
sarb
push
scas
mov
scas
pop
fisttpl
jmp
mov
pop
push
add
fidivl
shll
shl
mov
jg
or
movsb
mov
sysret
sti
push
mov
xchg
loope
popa
lcall
roll
fidivl
sbb
sbb
repnz
jg
add
mov
sub
gs
cmp
jb
daa
mov
sbbl
jb
js
xchg
pushf
mov
adc
mov
push
sbb
lods
xchg
push
xchg
mov
jo
xchg
xor
daa
aaa
lds
pop
sbb
jmp
xchg
jecxz
mov
cmp
repz
lea
sub
push
dec
inc
push
jp
cmpsl
pop
ds
add
shll
daa
adc
push
xor
or
pop
daa
push
jmp
push
sub
jl
add
push
cmp
cld
pusha
cmp
aas
lret
push
cltd
jg
es
mov
mov
lret
ficomps
addr16
xchg
dec
mov
das
xchg
repnz
cmp
bound
pop
sti
mov
or
scas
or
subb
int
or
sti
pop
movb
inc
lret
std
call
jge
push
loop
jg
cld
sbb
push
sahf
mov
inc
into
fdivrl
pop
jge
mov
cmp
addr16
push
int3
cld
jl
stos
scas
mov
xlat
sbb
pop
add
jne
jbe
mov
fsubs
repnz
jg
stos
cmpsw
mov
push
push
mov
pop
push
cmpl
insl
jp
mov
add
jb
pop
jle
mov
dec
mov
or
xor
sbb
xlat
pop
xchg
cmc
in
mov
aas
or
adc
stos
fsubrp
in
add
lock
jb
aam
mov
pushw
lcall
or
pop
sbb
popf
das
xor
mov
out
mov
daa
sbb
adc
dec
gs
jle
cmp
loop
pop
mov
in
add
sub
sahf
ljmp
lock
ljmp
cmp
lock
mulb
push
outsl
pop
cli
sbb
jne
clc
add
cmpsb
test
cmp
lods
loop
stos
pushf
pop
pop
es
movsl
inc
pop
xchg
inc
pop
push
xchg
out
or
add
pushf
cmpsl
push
push
pop
in
cltd
jae
mov
je
and
scas
sub
inc
pop
out
scas
and
subb
cmp
ljmp
ror
test
mov
fldl
mov
mov
jb
inc
dec
movsb
icebp
mov
push
pushf
or
or
ljmp
pop
xchg
in
jb
mov
movsl
add
cmpsl
fidivrs
mov
cltd
mov
jmp
sub
orb
in
sar
push
xchg
mov
xlat
dec
adc
xchg
push
inc
dec
cmp
pop
cmp
idivb
cmp
lods
data16
lock
xchg
jecxz
test
mov
push
nop
cmp
sbb
mulb
jecxz
popf
in
inc
mov
dec
xchg
push
movsb
add
pusha
jns
out
push
scas
div
xchg
push
mov
sub
lcall
ret
pop
pop
mov
iret
cmp
jnp,pn
push
lret
xlat
xorb
es
cmp
cs
mov
mov
imul
inc
in
mov
cmp
jbe
fidivrs
aas
mov
fmuls
cmpsl
and
xor
bound
or
mov
jge
xchg
mov
inc
imul
dec
mov
add
scas
mov
mov
daa
mov
xchg
push
scas
loope
sub
test
scas
lret
or
inc
xchg
jl
mov
jmp
cld
repz
fistps
mov
mov
adc
add
cli
mov
add
mov
inc
dec
pop
xor
add
jmp
xchg
insl
mov
call
aad
cmp
int3
rorb
add
je
xchg
cwtl
sbb
mov
lret
pop
cli
fnstenv
movsb
add
setl
adc
js
in
pop
stc
fdivrp
jnp
push
jge
hlt
sub
mov
push
in
jecxz
fldt
xchg
mov
push
imul
jo
push
push
sub
int
xor
xchg
mov
push
push
in
shr
sbb
push
arpl
adc
xchg
iret
testl
pop
sbb
add
mov
cmp
inc
jmp
aam
rcll
pop
test
stos
stos
mov
fdivrs
pop
les
xchg
cwtl
xchg
fisubrl
xchg
push
test
outsb
insb
adc
push
scas
mulb
jbe
mov
xor
push
dec
push
ret
jle
cwtl
mov
xor
int
insb
mov
jno
jg
pop
pop
sub
movsl
mov
outsl
lock
pop
mov
cmpsb
sub
sarl
xchg
pop
mov
xchg
cmp
adc
imul
push
mov
add
mov
mov
imul
insb
das
div
xchg
cmp
rolb
push
mov
les
sub
leave
divl
int
cmp
es
out
testb
mov
pop
bound
cmp
inc
pop
push
xchg
jge
or
xor
xor
dec
lds
push
daa
in
dec
mov
rcr
dec
std
cmc
mov
or
xor
fistl
jb
bound
mov
cmpsb
push
loop
xchg
mov
aam
adc
mov
ds
xlat
xor
dec
lods
push
popf
sub
or
and
adc
test
in
andl
xor
xor
mov
in
pop
pop
fcoml
outsb
xlat
cld
xor
fs
repnz
sti
mov
or
adc
sbb
xchg
sahf
sbb
loopne
sub
jge
sub
or
dec
cmp
jno
dec
daa
mov
outsb
cmc
dec
or
mov
arpl
jo
movsl
mov
iret
lock
loop
out
lea
ss
jle
push
ret
ret
popa
mov
sub
das
mov
or
add
jbe
xor
sub
jns
insb
mov
movsb
pop
cld
out
jg
mov
scas
mov
mov
cmpsl
jae
int3
inc
arpl
push
and
sub
xchg
cs
adc
in
sbb
hlt
xor
aam
mov
mov
popa
cld
fistl
add
mov
push
call
push
stos
push
call
cwtl
pop
mov
repz
push
mov
pop
cwtl
push
pop
fisubrl
hlt
jo
dec
fnsave
insl
pop
imul
leave
mov
and
test
in
je
and
xchg
jl
in
dec
test
mov
bound
in
cmp
push
lcall
jbe
or
inc
hlt
mov
loope
mov
pop
jmp
pop
jnp
fistl
scas
mov
mov
fists
dec
lea
sub
or
arpl
or
xchg
mov
xor
and
xor
push
movsb
add
xor
mov
pusha
or
and
lahf
xor
leave
and
stc
mov
call
in
dec
aas
push
call
test
jecxz
outsb
mov
subb
sub
xor
std
add
jl
adcb
andl
inc
sahf
andb
inc
decl
mov
dec
pusha
pusha
mov
xchg
xchg
repnz
and
jno
mov
mov
push
popa
in
cmc
sarl
test
andl
and
pushf
add
xor
and
sbb
fsubrs
loop
ret
dec
jb
in
in
dec
popa
or
ret
fwait
pop
add
ret
add
cmp
jge
fcmovnb
rorl
lock
push
scas
imul
adc
xor
mov
aad
xor
xchg
mov
mov
aas
adc
cmpsl
cwtl
xor
sbb
js
sub
dec
dec
test
sbb
dec
adc
mov
data16
and
xchg
insb
dec
test
mov
xor
cmpsb
aad
adc
das
lahf
push
loopne
or
dec
jg
call
cmp
stc
sbb
xor
mov
add
or
or
cmp
shl
fstpt
fbstp
ja
dec
les
push
mov
mov
sbb
mov
out
rclb
sarb
and
out
mov
subb
ficompl
pop
mov
ja
cld
xchg
testb
in
loop
cmc
iret
jmp
jecxz
push
idiv
inc
sbb
mov
dec
outsb
repnz
mov
aad
jo
push
lods
jns
push
jp
cmp
mov
or
or
xor
add
mov
cs
or
mov
add
dec
push
or
daa
push
xor
lods
mov
xor
dec
scas
es
inc
mov
js
push
pop
addb
data16
in
sbb
adc
dec
mov
xchg
push
cmpsl
sub
adc
stos
pusha
js
push
inc
xor
rolb
insl
pop
inc
mov
mov
clc
or
mov
int3
jbe
sub
xorb
mov
add
ljmp
cltd
mov
inc
lret
clc
leave
dec
sub
dec
aaa
leave
xchg
sub
fstpt
nop
cmp
mov
xchg
fs
sbb
mov
sbb
cmp
mov
das
sbb
push
fdivrp
mov
cmp
imul
in
lcall
sub
scas
pop
movsb
sub
xorl
push
add
mov
inc
or
pop
mov
dec
cmpsl
jg
test
lahf
xchg
adc
xchg
repz
inc
push
ljmp
decl
fwait
idivb
add
sub
sub
mov
ss
pop
jns
dec
fnsave
adc
ret
mov
xor
pop
mov
sub
leave
pause
fs
fsts
into
ljmp
jo
adc
push
aam
mov
sti
lock
inc
sarl
inc
cmpsl
in
xacquire
andl
inc
fiadds
cmc
cmpsb
addb
rolb
adc
notb
push
xor
test
cmp
xor
add
and
xchg
int3
xor
push
add
and
int
hlt
dec
lods
push
pushl
test
scas
scas
lods
add
mov
jge
or
xor
sbb
lea
adc
or
push
lahf
mov
mov
xor
scas
jp
icebp
inc
mov
subl
pop
aas
mov
cmp
fisubl
xchg
push
xlat
ljmp
inc
jns
push
inc
rol
int3
outsb
push
shll
aas
fdivl
nop
sub
mov
jge
mov
sahf
sahf
add
dec
aam
dec
loope
ret
add
push
repz
out
movsb
xor
scas
shlb
inc
inc
mov
scas
andl
push
lods
mov
in
xchg
and
cmpxchg
and
jnp
sar
bnd
jbe
shrl
stos
mov
jae
fisttpl
pusha
leave
aaa
loop
and
xchg
jp
jns
xchg
lcall
adc
mov
dec
xchg
and
mov
or
mov
dec
jno
scas
cs
cmp
gs
mov
scas
xchg
shll
addb
mov
mov
insl
jmp
ds
push
push
lds
imul
or
hlt
fildl
sub
xchg
pop
or
and
xchg
cli
push
xor
shlb
cltd
andl
pop
scas
imul
fisttps
push
out
ds
out
xchg
fs
add
movsb
and
fdivl
leave
fcompl
sbb
adc
mov
and
mov
sub
jbe
mov
sbb
xlat
jge
mov
xor
sbb
sub
xchg
adc
cmp
jno
jns
pusha
mov
imul
stos
cmp
aaa
fsubl
push
in
pop
fnstenv
popa
hlt
lods
cs
test
je
sub
jge
jae
inc
ljmp
dec
gs
ds
and
addr16
out
mov
adc
mov
push
mov
inc
fsts
inc
mov
push
xchg
in
insb
sbb
and
jno
lods
sbb
pop
cmc
lods
mov
and
push
add
sti
fsubr
mov
mov
daa
lcall
out
adc
popa
enter
dec
mov
addl
stc
rcl
imul
jne
add
or
lret
jg
push
mov
xor
cbtw
hlt
out
xor
xlat
outsl
dec
cwtl
clc
xchg
test
filds
sub
icebp
repnz
mov
and
cmp
repz
mov
mov
movsl
inc
enter
ss
jecxz
test
xchg
or
sarb
shl
sbb
cli
aad
or
fistl
loop
bound
cltd
cmp
out
sti
push
inc
fs
push
sbb
std
gs
adc
nop
clc
mov
inc
dec
call
aaa
and
cmc
sub
sbb
adc
scas
outsl
xor
pop
dec
fadd
xor
dec
pop
mov
icebp
xchg
iret
xchg
pop
xlat
sub
mov
andl
aaa
mov
inc
xor
inc
cli
jg
xor
mov
or
add
inc
mov
xchg
mov
adc
xchg
sbb
roll
push
int
inc
sub
out
stos
dec
add
adc
cld
js
ds
adc
iret
andl
ficomps
inc
and
dec
xor
jecxz
add
or
ds
js
stos
pop
xor
adc
push
and
lcall
es
sub
test
imul
js
lcall
ret
cmp
sub
rcll
push
outsl
in
dec
pop
jle
incb
fwait
add
jo
icebp
jo
addr16
adc
xchg
out
dec
cmp
hlt
and
shll
dec
clc
and
sti
int3
and
stos
add
cmp
dec
cmp
mov
es
add
shl
out
push
fisubrl
pop
arpl
or
push
scas
xchg
and
divl
iret
push
xchg
jge
xor
mov
hlt
pushl
les
sbb
mov
dec
adc
aad
or
push
push
jns
pop
nop
sbb
lds
mov
lahf
xor
pop
ss
mov
flds
je
stos
mov
add
hlt
lcall
popa
mov
lods
mov
scas
xor
ret
lock
cmpsl
ret
bound
inc
cwtl
adc
bswap
lods
cld
std
test
pop
mov
mov
scas
stos
dec
cmpsb
sub
xor
sub
inc
dec
add
push
cmp
adc
xchg
loop
and
rclb
dec
pop
mov
jno
faddl
and
lds
insl
xor
inc
out
and
inc
cwtl
cld
push
xor
mull
pop
mov
lret
xchg
mov
loopne
testl
shrb
bound
fcomps
pop
sbb
xchg
mov
adc
pop
dec
icebp
comiss
cmp
fwait
mov
std
mov
mov
lds
pop
and
stc
jg
in
cmp
out
sbbl
insl
adc
jae
adc
or
jne
cmpsb
mov
nop
push
mov
imul
bound
fistps
pop
xlat
mov
shr
mov
pop
pop
xor
xor
inc
stos
pop
mov
cmp
rcrb
lock
stos
push
leave
dec
repz
inc
stos
jb
sub
or
cmp
xchg
dec
pop
arpl
scas
daa
ret
cmc
dec
mov
vmovq
push
scas
in
cmpsl
fmuls
loopne
sbbb
scas
adc
lcall
mull
lods
dec
jne
mov
pop
and
aas
aas
scas
pop
arpl
mov
add
iret
rcrl
scas
xchg
fwait
sub
scas
ret
push
stos
mov
hlt
mov
call
dec
pop
lahf
lea
mov
mov
rorl
xchg
adcl
push
inc
data16
xchg
ss
add
int
push
test
lahf
in
cmpsl
xlat
mov
ror
mov
mov
lock
and
cmpsl
dec
movsb
mov
pop
es
je
arpl
adc
call
call
pop
or
mov
xor
cmp
fidivs
adc
or
lcall
cwtl
sbb
out
gs
icebp
mov
cmpsb
mov
xchg
idiv
je
lods
pop
nop
jmp
mov
jmp
cs
addb
cmc
sbb
stos
mov
push
inc
inc
ja
lret
cwtl
pop
cmpsb
adc
fists
rcrb
dec
jo
and
cmp
or
out
mov
imul
test
push
push
cmc
jg
into
pop
jno
inc
and
das
shl
mov
push
mov
xchg
xlat
mov
mov
repnz
inc
or
mov
mov
clc
loope
push
aam
cmp
sub
dec
or
imul
int
cmp
cmp
clc
mov
pop
scas
xor
filds
mov
movsb
cmpsb
push
ret
dec
lret
dec
shll
push
clc
aam
pop
mov
mov
jl
dec
and
or
cmpsb
movsb
lahf
dec
xchg
cli
mov
clc
repnz
jbe
dec
call
jns
imulb
call
fucomp
jg
and
mov
popa
mov
jp
or
mov
mov
push
cld
in
div
adc
out
xor
int3
xchg
jle
add
mov
push
jl
ret
jns
out
cwtl
xchg
jg
mov
xchg
sarl
daa
neg
imul
pop
and
sub
sbb
cmp
aad
loopne
lea
jno
rolb
inc
out
jne
insl
nop
and
mov
cmp
out
push
sbbl
jne
popa
add
clc
aaa
mov
stc
jmp
lock
xchg
out
dec
pop
loop
xchg
push
or
or
out
xor
push
sub
cld
test
dec
aaa
xchg
ss
test
lahf
fistpll
jo
and
fwait
xlat
ds
pushw
cpuid
cmpsl
sbb
cltd
jp
aam
inc
bound
fldl
push
or
in
mov
je
stos
into
andl
mov
cld
dec
aas
iret
loopne
lcall
shll
aaa
cld
jmp
icebp
xor
sti
outsl
and
enter
adc
cmpsb
push
push
mov
push
adc
mov
mov
cmpsb
push
sbb
dec
call
sub
and
sub
xchg
dec
add
shrl
out
mov
mov
outsb
jbe
mov
sub
es
pop
cmp
fnstcw
fisttps
mov
xchg
test
dec
sbb
jno
sub
mov
mov
cmp
xchg
pusha
fidivrs
jb
pop
ret
stc
sbb
inc
sbb
je
rorl
repz
pop
scas
xor
test
lcall
fstpl
cmp
pushf
call
cmc
or
and
fsubrs
cmp
fcomi
fldenv
imul
in
imul
cmp
xchg
mov
outsl
push
daa
xchg
icebp
sti
mov
mov
mov
mov
and
cmp
jecxz
aam
imul
sbbl
lods
aas
mov
xchg
sbb
jno
inc
and
repnz
in
push
lods
jmp
or
imul
jne
pop
aas
sbb
sti
fwait
test
push
sbb
mov
shl
repz
iret
lcall
aas
inc
out
dec
dec
les
imul
int
stos
push
xchg
xchg
xchg
sub
adc
push
pop
mov
cld
xchg
mov
imul
cmp
sbb
pop
xor
mov
xor
inc
shrl
add
sbb
or
insb
repz
push
xor
sub
gs
ja
fisttpll
jg
and
lods
adc
and
lret
loope
sbb
je
jb
cli
out
mov
sub
aad
pop
sbb
cltd
rcr
or
out
jecxz
lods
insb
sbb
xlat
mov
mov
fsubs
loop
sbb
xchg
mov
fcmovnu
imul
pop
ficompl
sbb
repz
fisubrs
push
jne
aaa
dec
das
mov
fiaddl
popl
mov
adc
xorb
dec
cs
ds
pop
cmp
sbb
imul
test
aaa
cmp
mov
and
xchg
mov
aad
int
pop
xchg
mov
jne
mov
daa
ret
lods
lds
hlt
jp
aam
sarb
inc
cwtl
push
dec
das
gs
mov
in
dec
xlat
ret
inc
cmp
test
fldenv
mov
adc
insb
int3
sub
pop
shl
lods
xchg
xor
cmpsl
push
xchg
pushf
jbe
ja
and
iret
add
push
dec
sub
mov
pop
fstpl
inc
or
lret
fs
inc
xor
mov
adc
jmpw
jb
cmp
aas
and
xchg
dec
sub
out
fcmovne
imul
xor
inc
jnp
xor
imul
into
xor
sub
mov
fcmovu
jl
rclb
mov
pop
js
jne
addr16
xor
std
ds
roll
loop
bndstx
insl
fs
xor
mov
mov
orb
scas
lcall
sarl
mov
cmpsb
addb
add
mov
push
or
lods
loopne
sub
rep
cwtl
sbb
out
ja
fsts
inc
into
out
data16
cwtl
stc
pop
lret
into
mov
sub
cltd
jp
fcomi
and
adc
inc
mov
fwait
jo
out
jae
inc
pop
adcb
xor
lahf
and
test
lret
xor
inc
repnz
scas
push
lods
insb
enter
fcmovbe
push
stc
out
mov
inc
cmpsb
movsl
bound
fadd
xchg
lds
fdiv
loopne
lock
add
insl
dec
data16
cli
mov
popa
icebp
in
jns
pop
inc
ja
sbb
ds
mov
enter
repz
cltd
rcll
inc
inc
js
add
mov
outsb
dec
xchg
cmp
icebp
mov
in
push
push
adcl
push
clc
rorb
addps
insl
jge
fdivrs
xchg
test
push
daa
mov
mov
mov
jne
push
mov
pop
insb
insl
sbb
and
adc
ss
fisubl
adc
mov
push
ja
dec
fwait
xor
scas
or
in
mov
fcmovu
adc
xchg
mov
xor
into
call
popf
pop
sbb
cmc
jle
jecxz
mov
fisubl
sub
cmp
clc
in
xchg
shrb
hlt
out
jns
and
out
cmp
cwtl
das
mov
scas
shlb
mov
shrl
xchg
std
add
cmc
cmp
repnz
inc
and
adc
imull
test
fmul
fbstp
ret
cld
icebp
cmpsb
rclb
pop
cmpsb
or
sahf
add
popa
sub
mov
xchg
test
add
lret
cmp
xor
lock
pop
xor
outsl
or
jecxz
xor
mov
cmc
arpl
add
xchg
pop
inc
xchg
add
sub
jecxz
xchg
mov
popf
cmpl
stos
sbb
movsb
std
in
mov
dec
push
scas
test
out
in
dec
fcmovnb
mov
fstpl
in
loopne
pop
ficompl
push
sbb
or
lcall
sub
inc
imul
aam
adc
pop
daa
cmp
lcall
cld
fcompl
xchg
dec
jno
push
add
mov
sbb
ret
fistpl
lcall
or
and
push
or
out
movsl
push
sti
add
mov
jmp
add
push
xor
adc
std
push
jle
pop
mov
mov
arpl
xor
sbb
popa
std
inc
mov
out
add
jb
daa
push
xchg
insl
or
mov
pop
clc
mov
and
xor
fcomi
pop
jle
mov
ja
shrb
xchg
xchg
out
jle
and
push
xchg
and
adc
xchg
inc
sbb
xchg
adc
lds
xchg
mov
xor
int3
fisubrs
push
push
into
and
std
mov
lods
jp
push
jo
and
mov
pop
mov
adc
adc
add
stos
push
cmp
jle
add
orb
test
popa
jbe
loopne
pop
sub
add
push
in
cmp
test
ss
xchg
in
sbb
jecxz
inc
pop
mov
popa
ja
leave
test
sub
lret
data16
les
push
or
adc
enter
movsb
imul
add
ret
push
les
shrb
jmp
in
xchg
adc
xchg
cmp
daa
mov
pusha
mov
scas
adc
rcll
push
roll
jnp
test
push
pop
and
lahf
bound
sub
jns
sub
or
pop
orl
xor
mov
mov
iret
cmp
inc
adc
or
aad
sbb
outsb
pop
or
mov
lods
cwtl
cmpsb
stos
out
mov
xchg
out
mov
push
push
mov
loope
imul
push
sub
inc
push
shrd
pop
int3
and
xchg
mov
cmp
orb
sub
pop
iret
rorl
mov
cwtl
frstor
mov
xlat
call
iret
dec
mov
cli
or
fdivrs
mov
sub
lahf
cmp
icebp
movsb
movsl
jle
jecxz
jo
mov
pop
fmul
mov
shlb
mov
fldl
shrl
in
mov
jle
sub
test
add
sub
pusha
mov
push
push
jno
pop
inc
scas
ja
adc
pop
ljmp
xchg
pop
inc
sarl
sbb
mov
sti
xor
add
test
je
faddl
jo
aaa
loopne
js
gs
xchg
lcall
lret
lcall
sbb
push
adc
mov
std
sti
icebp
ds
ljmp
push
test
shl
fsts
xor
cmpsl
inc
imull
pop
test
mov
xchg
in
stc
sub
sahf
sub
xchg
sbb
xchg
cld
pop
aas
pop
jge
mov
xchg
repnz
jae
push
aas
data16
and
push
lods
popf
add
mov
push
fs
dec
testb
dec
stos
xor
cmp
mov
mov
lds
pop
mov
loop
jg
cmp
pop
and
pop
or
mov
out
mov
sbb
pop
or
decl
sti
test
mov
movsb
pop
mov
xor
add
mov
jmp
sub
push
sub
add
scas
xchg
and
push
rcr
movb
xchg
lods
push
sub
sub
xor
xchg
popf
xchg
jmp
sub
pop
fiadds
and
scas
push
push
mov
ljmp
std
sbb
mov
aad
inc
and
in
and
enter
sbbb
mov
int
add
lods
inc
sub
cltd
jns
int
ljmp
xchg
mov
cmc
test
cwtl
dec
fdivrs
sbb
xchg
shlb
fs
jbe
idivb
test
movsb
jecxz
pop
push
mov
out
add
sub
lock
cli
xchg
icebp
mov
pushf
iret
pushf
insb
sub
in
in
sbb
push
aam
add
mov
cmp
mov
sub
clc
lods
orb
jne
pop
mov
inc
mov
pop
cmpsl
xchg
lret
inc
out
rolb
mov
stos
insb
add
out
adc
mov
and
adc
jl
xchg
pop
and
cwtl
ja
mov
pop
push
xor
inc
test
test
aam
and
loopne
divl
ss
cmp
sbb
add
mov
daa
aas
push
and
dec
xchg
clc
jp
mov
mov
sub
in
mov
mov
imul
lock
inc
out
sti
outsb
cmp
mov
jno
movsb
mov
lcall
dec
and
insb
shlb
cmp
leave
subb
add
fs
aas
rcll
test
ret
sbb
fs
cmp
sbb
sbb
loop
inc
push
cs
mov
xor
leave
xchg
pop
mov
or
clc
imul
dec
sbb
sub
sbb
in
fcompl
out
pop
orl
inc
fisubrl
sub
loopne
dec
sbb
or
sti
sbb
test
dec
mov
fldt
mov
lods
xlat
mov
cmp
cwtl
outsb
rcrl
test
std
aas
dec
icebp
push
inc
jne
subb
dec
cmp
fsubrs
out
sbbl
imul
hlt
lea
fucompp
je
sub
xor
popa
mov
mov
add
dec
mov
xchg
sub
addr16
incl
out
jmp
test
xor
push
repnz
push
pop
dec
sbb
push
pop
dec
cltd
pop
adc
fnstcw
adc
andl
push
std
jnp
inc
add
pop
enter
dec
daa
sar
sub
cs
orb
rclb
enter
push
sub
jae
popa
xchg
fadd
arpl
scas
out
fnsave
lcall
xor
cmp
fsubp
cld
jne
adc
int
std
adc
adc
pop
push
fcoml
adc
push
xchg
pop
stc
cmp
ret
subl
mov
cmp
pop
jo
jg
mov
jnp
dec
xor
xor
add
jae
test
and
out
and
dec
jae
lods
pop
insb
incb
fisubrl
xchg
data16
and
sahf
jmp
testb
call
decl
push
mov
cmp
xchg
les
cld
les
not
or
test
xor
popa
mov
stos
movsl
movsl
aam
psrlq
jb
data16
dec
mov
push
xchg
lock
sbb
xchg
inc
jae
fadds
xchg
mov
test
js
add
stc
enter
leave
inc
pop
jbe
fidivl
fcomps
pusha
jnp
jb
sahf
fisubrl
jge
sarb
mov
sub
adc
and
mov
jge
add
pop
pop
mov
addl
mov
addl
mov
mov
aam
inc
loopne
push
icebp
xchg
xor
pop
adc
enter
pop
xchg
notb
out
shll
push
imul
stc
loopne
pop
in
jno
out
mov
cmp
sti
sub
pop
dec
popf
adc
scas
xor
insb
jge
insb
pusha
imul
sub
xchg
sahf
cmp
fldenv
dec
nop
mov
push
mov
jns
into
push
jo
mov
fisubrs
xchg
mov
mov
out
push
rorl
lret
push
das
test
xor
push
iret
pop
xchg
stc
fcompl
pop
js
adc
dec
aam
mov
inc
mov
mov
jb
shlb
push
jecxz
pop
cmp
inc
lock
aam
jmp
imul
jns
rcr
push
jnp
ja
xor
shll
aad
lods
push
xor
mov
ss
lahf
pushf
inc
push
repnz
fistps
loopne
pop
lahf
mov
in
xchg
int
mov
nop
mov
jnp
add
dec
add
xchg
gs
pop
xchg
movsl
jge
fmull
or
jp
addr16
jecxz
adc
mov
imul
and
call
jnp
das
adc
icebp
mov
cmp
arpl
scas
ficoms
push
insb
imul
popf
mov
or
mov
shr
pop
push
or
ret
mov
fimuls
jmp
scas
cmp
mov
mov
ret
sub
je
dec
mov
jmp
mov
iret
out
jnp
mov
push
rcrb
mov
xchg
mov
dec
dec
ret
mov
mov
cmp
in
repnz
aaa
add
mov
mul
dec
dec
adc
loope
rorl
or
testl
shlb
dec
std
xchg
jno
and
pop
aam
outsb
bound
push
xchg
out
mov
dec
adc
cs
mov
xor
call
mov
adc
scas
fsubs
push
dec
repnz
fyl2xp1
lret
mov
sbb
loope
xor
pop
out
ret
sahf
mov
loope
xchg
je
or
scas
aaa
repnz
jmp
pusha
sub
or
inc
scas
bound
cltd
xor
mov
xchg
jg
push
xlat
mov
jg
add
mov
pop
sahf
cmc
sbb
add
fwait
jmp
imul
data16
bound
pop
icebp
mov
inc
gs
cmpsb
jns
dec
pop
push
mov
add
test
push
adc
mov
pop
fs
sbb
mov
test
lods
jl
xlat
mov
cmp
sbb
pop
push
xor
mov
jecxz
pop
xor
into
ret
push
pop
mov
pop
les
jle
dec
dec
ljmp
adc
push
sbb
aaa
fstpl
dec
xor
arpl
mov
lea
and
sub
test
push
out
lea
mov
loope
and
xor
inc
outsb
cmpsb
lds
inc
xor
pop
sahf
call
ret
pusha
cmp
js
ljmp
test
inc
adc
ja
mov
push
and
lods
push
xchg
mov
jne
por
mov
std
jne
or
sbb
ret
mov
in
rcrb
sbb
mov
and
adc
inc
out
push
lea
roll
notb
and
push
xor
popf
lock
inc
pop
ret
insb
repz
push
jle
fwait
leave
cmp
out
js
push
data16
mov
cmp
mov
lahf
jle
push
lods
call
inc
sbb
call
and
mov
pop
sub
je
clc
cmp
jo
bound
and
dec
cmp
mov
mov
popa
out
xchg
sub
pop
mov
lcall
movsb
pop
mov
icebp
and
lret
sbb
or
or
test
pop
inc
cmp
xor
leave
mov
ds
in
mov
inc
xor
push
lods
stos
stc
mov
pop
cmp
lods
cmp
sarl
add
xor
cmp
mov
sub
mov
sahf
lds
sti
cmpb
mov
fldcw
jnp
daa
adcl
dec
repnz
test
or
outsb
xor
cmp
out
jne
out
pop
mov
loop
pop
mov
inc
aaa
out
inc
sbb
dec
data16
ljmp
outsb
es
call
pop
jl
mov
loopne
sbb
add
loopne
out
mov
sahf
push
pop
sar
movsb
fwait
in
in
test
les
push
repnz
scas
rolb
aaa
stc
lds
or
lods
mov
jns
lcall
in
xchg
or
inc
aaa
mov
and
pop
test
mov
dec
testl
popf
xchg
aad
mov
mov
roll
rol
lahf
inc
ds
shlb
sbb
inc
mov
je
ret
sbb
popa
inc
mov
cs
xor
es
dec
jnp
aaa
and
test
pop
mov
xlat
xchg
sbb
xor
pop
adc
inc
mov
inc
xor
pop
fnsave
dec
cmp
inc
filds
cmp
or
enter
push
loope
add
add
int3
or
push
or
test
pop
lods
or
movsl
cmpsl
shlb
imul
imulb
loope
or
int
gs
out
sti
lock
jmp
popf
push
sti
pop
xchg
add
xchg
cli
outsb
jb
sub
mov
out
add
adc
les
xor
add
std
or
lahf
add
and
jmp
in
cwtl
dec
mov
push
cmp
dec
lret
test
adc
stc
mov
sub
fdivrp
enter
and
xor
lods
add
pop
loope
out
call
pop
ret
pop
and
insl
or
dec
dec
stos
std
popa
jg
push
neg
cs
or
add
add
lods
bound
xor
push
call
push
sti
cmp
jge
popf
jb
xchg
xor
in
stos
push
xchg
push
int
inc
mov
loopne
push
push
add
lea
xlat
sub
notl
sub
mov
in
cmpsb
dec
xchg
ficoml
scas
pop
fwait
pop
aas
out
adc
push
pop
add
mov
sub
ret
push
sti
adc
in
aad
jl
loope
daa
add
mov
outsb
pop
dec
lret
fsubr
cmp
dec
subb
outsb
enter
mov
mov
pushf
adc
aaa
dec
pop
pop
push
xlat
adc
leave
popa
stc
out
loopne
cmp
jecxz
dec
std
inc
push
cmpsl
data16
inc
xor
icebp
dec
sub
push
push
into
into
gs
jno
pop
sbbl
lock
mov
inc
xchg
lcall
mov
loop
into
leave
jg
in
clc
lahf
enter
dec
fmulp
shrl
cmc
ljmp
ja
in
std
add
in
repnz
popa
enter
out
les
mov
mov
repnz
mov
pop
repz
sub
add
dec
mov
jns
mov
adc
sub
pusha
xchg
adc
call
in
jecxz
sbb
sbb
out
movsl
ja
mov
adc
aas
rcll
xchg
mov
cmp
icebp
lret
repz
repz
xor
aas
mov
loop
or
sbb
adc
mov
push
mov
sub
in
decb
lock
push
nop
push
mov
rcrb
xor
mov
outsl
mov
scas
fstpl
mov
sbb
inc
nop
jge
pop
outsl
xor
adc
push
in
inc
mov
inc
xor
cmp
fcmovb
mov
mov
mov
sbb
cmc
pop
mov
or
xchg
mov
pop
jle
add
mov
cmp
ds
xor
jb
aas
xchg
cmpsb
inc
lret
sarl
adc
aaa
rdtsc
sbb
das
std
and
imul
cmp
mov
or
jns
inc
sub
iret
and
adc
push
add
or
sbb
add
out
dec
daa
rclb
daa
and
stos
mov
cld
inc
hlt
pushf
inc
and
out
pop
or
mov
sbb
push
iret
repz
clc
dec
xchg
imul
stc
js
aas
mov
or
jo
in
jg
jbe
ret
out
sub
dec
rcll
push
dec
scas
out
out
imul
inc
and
or
push
sub
mov
cld
in
sbb
in
xlat
mov
xchg
add
out
adc
pop
pop
cmp
sbbl
loope
neg
add
adc
cltd
pop
leave
lret
inc
cmp
mov
aas
dec
stos
mov
mulb
inc
ficomps
jle
das
popf
add
gs
popf
sbb
sti
pop
loope
aad
out
and
stos
inc
jg
sub
inc
addr16
stos
fdivr
push
scas
xchg
sti
push
cmp
repz
hlt
popl
mov
in
scas
and
add
or
cmpsb
les
cmp
add
cld
and
faddl
xchg
repnz
sbb
xlat
sbb
mov
lret
sbb
ficomps
out
jp
sbb
daa
outsb
cli
call
jle
and
push
xor
test
cmp
test
adc
sub
stos
or
xor
mov
sti
cmp
mov
gs
mov
sbbl
add
mov
adc
fsubrl
mov
cmp
cli
movsl
in
inc
mov
xchg
mov
dec
cmc
add
mov
fwait
lea
lcall
jbe
shlb
xor
fidivl
xor
in
loope
daa
lret
xchg
xchg
lcall
pop
push
and
mov
cld
fidivrs
pop
pop
adc
mov
std
dec
test
xchg
cmp
add
insb
sub
jl
test
lods
jae
imul
rorl
ljmp
mov
adc
xor
gs
out
shr
sti
lods
sbb
or
mov
icebp
dec
ret
jo
add
loop
cmp
fdivrl
pushl
pop
pop
lods
push
test
mov
mov
sbb
sbb
fbld
mov
andl
rclb
cli
mov
and
ret
ljmp
add
pop
xchg
or
inc
lods
mul
xlat
mov
dec
sub
pusha
or
nop
sub
pop
in
xchg
fisubrs
popa
xchg
cmc
push
mov
pushf
mov
dec
filds
dec
xchg
inc
jmp
jno
cmovne
push
sub
and
test
imul
pop
add
add
xor
ja
push
in
mov
icebp
xchg
inc
adc
sub
movl
sbb
xor
dec
cld
mov
lahf
stos
jo
add
aad
mov
mov
mov
jl
arpl
fbstp
pop
mov
fmull
push
cmpsb
adcb
push
mov
popf
sbb
or
roll
icebp
mov
into
into
je
or
out
inc
mov
ljmp
and
mov
xor
andb
das
aaa
sub
mov
punpcklbw
out
add
cltd
xor
ret
dec
pavgw
std
sub
cmp
dec
dec
xchg
or
inc
and
mov
push
mov
jne
pop
jp
add
pop
pop
lods
mov
hlt
sbb
ret
sub
mov
dec
rorl
mov
addr16
jmp
setno
inc
jmp
jecxz
jl
fstp
mov
mov
repnz
inc
insl
rclb
and
xchg
scas
mov
sbb
jmp
lret
and
out
jge
stc
jae
test
mov
pop
jmp
xchg
data16
shll
xor
mov
mov
ja
sbb
xor
loopne
cmp
out
push
xor
and
aaa
sub
ja
sub
dec
jbe
insb
leave
mov
pop
xchg
imul
mov
gs
xorb
xor
orb
dec
mov
pop
xor
lcall
sub
cmp
jle
mull
mov
push
adc
orl
lods
lret
in
call
into
mov
pop
mov
xor
fnstcw
clc
mov
shl
imul
add
jnp
and
bnd
loopne
add
dec
out
fdivrl
stc
popf
and
jb
cmpsl
cmp
in
pop
insl
push
dec
adc
dec
sub
sahf
inc
incl
sbb
push
arpl
fists
cmp
in
cmp
sbbb
sbb
scas
fwait
push
mov
push
xchg
push
jg
and
fcoms
jl
mov
aas
xor
pop
push
hlt
lcall
outsb
jg
arpl
xor
cld
mov
scas
int3
mov
pshufw
out
movsl
cwtl
sbb
inc
xlat
dec
adc
add
fstpt
js
push
rorl
repnz
mov
ljmp
outsl
jno
jo
repz
pop
adc
mov
test
xchg
or
inc
iret
dec
jae
subb
adc
pop
push
iret
inc
in
data16
leave
push
add
jp
dec
inc
js
mov
sbb
push
dec
fdivp
cld
sub
push
fsubl
mov
dec
pop
dec
sbb
pop
mov
mov
in
jp
fidivl
in
repnz
xor
inc
in
in
jg
inc
jbe
ljmp
stc
adc
movsb
pop
jcxz
bound
jnp
push
pop
jp
repz
sbb
daa
pushf
mov
movsl
adc
in
sub
xchg
mov
ds
jno
and
sub
pop
out
popf
stos
mov
cmp
pop
xor
mov
mov
mov
pop
xlat
sbb
popf
inc
pop
cmc
or
xchg
add
int
adc
adc
jmp
dec
aas
aaa
jae
xlat
seta
dec
mov
jb
xorl
out
sbb
in
adc
mov
cmp
fsubl
in
push
sbb
push
mov
pop
mov
inc
or
sub
pop
les
aaa
lock
jp
pop
push
xor
mov
loopne
in
outsl
sbb
jo
test
dec
mov
loopne
jecxz
pop
imul
cs
push
sbb
inc
mov
lret
push
push
scas
push
repnz
push
movsb
dec
lcall
sti
jno
out
fidivrs
imul
sbb
inc
loop
outsb
ret
add
pop
push
push
jb
ljmp
out
jecxz
mov
adc
imul
pop
dec
scas
sbb
mov
movsl
jno
pop
leave
jns
mov
pop
jb
inc
aaa
aaa
cmp
pop
inc
inc
or
loopne
nop
loopne
outsl
ljmp
sti
cmpb
or
ja
lcall
popf
nop
sbb
pop
into
xchg
roll
pop
scas
sbb
ja
pop
je
inc
adc
mov
cmp
lahf
pop
imull
pop
movsb
mov
xor
loopne
cs
adc
jo
mov
lret
push
pusha
mov
xor
stos
mov
out
xchg
rcrw
dec
adc
add
lods
hlt
jnp
out
movsl
es
es
imul
btc
adc
mov
inc
xor
xchg
xor
ds
lds
aas
lcall
inc
add
dec
dec
push
cmp
xchg
jp
enter
rorl
push
in
test
xlat
xor
cmp
lds
out
inc
jmp
jmp
pop
iret
insb
jae,pt
pop
xchg
mov
lds
insl
mov
stc
xchg
leave
dec
cmpsb
mov
clc
std
xor
fistl
rorb
mov
out
adc
fs
popa
mov
xor
mov
mov
mov
jae
pop
lret
rolb
and
popf
popf
repnz
mov
dec
mov
faddp
mov
fsubrl
push
inc
pop
jnp
loopne
push
add
xlat
push
xchg
insl
fdivs
jmp
fiadds
cld
push
cmp
jo
loop
lahf
add
faddl
lock
mov
sub
xchg
mov
xchg
cld
bound
lds
addr16
jns
lret
imul
jnp
cmp
pusha
inc
pop
jl
mov
inc
repz
and
inc
mov
mov
jp
stos
xchg
jbe
add
or
mov
pusha
mov
jnp
out
mov
jl
push
outsl
notl
or
add
fldcw
inc
hlt
hlt
testl
fidivrs
cmpsb
jmp
out
lods
repz
outsb
mov
and
mov
pop
xor
sub
lea
int
hlt
pusha
fisubrs
fnstcw
dec
inc
adc
push
push
gs
scas
leave
mov
cli
xchg
js
ja
ss
inc
xchg
jl
out
jp
inc
adc
insb
fs
dec
add
push
test
mov
mov
into
xchg
mov
ja
outsb
js
daa
sti
popf
in
xchg
rorl
repnz
hlt
mov
lret
dec
ljmp
or
outsb
addr16
sbb
jae
lahf
or
or
xchg
inc
idivb
pop
pop
enter
ud2
push
sahf
insb
aam
cltd
es
mov
add
mov
fs
loopne
cmp
fsubr
sbb
mov
sahf
mov
xor
fldenv
push
or
fsubl
mov
xchg
pushf
cmpb
xchg
and
adc
scas
push
sbb
sar
mov
rcrb
stc
loopne
ja
repz
jl
js
rolb
mov
flds
ret
mov
pop
jb
mov
dec
dec
mov
inc
notb
fisubrs
dec
or
js
sbb
xchg
xlat
test
sub
xor
lock
mov
fs
lret
jae
jno
pop
pushl
dec
xchg
jl
dec
and
push
in
jg
push
push
leave
or
mov
cmp
sarl
sub
loop
mov
lea
cmp
dec
jp
dec
test
mov
xor
es
ret
dec
test
push
mov
push
stos
pop
pop
insl
cmpsb
push
adc
scas
fdivrs
fwait
xor
mov
jle,pn
lcall
mov
and
and
jmp
mov
popf
jbe
sub
jmp
sub
ljmp
inc
sub
aas
inc
ss
sbb
push
mov
andl
jp
sub
int
jge
adc
inc
mov
test
rclb
faddl
rclb
pop
jne
icebp
rol
and
sub
mov
or
mov
stc
mov
fwait
addb
adc
jle
lret
fists
in
int
xlat
frstor
das
pop
outsb
push
loope
test
jle
dec
je
gs
cmpsl
into
xor
jnp
pop
mov
jbe
inc
inc
sub
jns
aad
fwait
stos
lds
in
lret
jno
ja
adc
cld
push
xchg
and
jge
fcom
out
dec
cs
or
mov
and
mov
xorl
inc
and
jmp
add
mov
lret
bnd
push
call
push
jge
test
shr
roll
jbe,pt
xor
inc
dec
cmc
sub
mov
loopne
pop
mov
imul
mov
sahf
add
nop
pop
sbb
cli
cmp
les
dec
es
or
rorl
pop
cmpsb
jecxz
mov
xchg
add
sbb
movsb
stc
leave
mov
adc
daa
jns
lock
push
out
cmp
mov
mov
xorl
jno
pop
call
jno
ret
xchg
inc
cmp
xchg
sbb
jno
insb
insl
cmc
addr16
lock
lock
je
aad
fdivs
xor
xor
push
adc
insb
mov
mov
mov
add
clc
sbbl
push
adc
jb
les
add
xchg
movsb
test
cmp
sahf
subl
add
mov
jp
ret
adc
mov
int
sbb
inc
cmc
lret
or
lret
mov
icebp
and
mov
pop
jnp
fmul
loop
sbbl
adc
pushf
pop
mov
jns
cmp
lds
inc
xor
pop
insl
adc
push
push
mov
inc
xchg
dec
inc
push
cli
xorb
outsb
ljmp
jp
mov
ret
xchg
fstpt
imul
scas
xchg
jo
inc
call
cltd
int
dec
pop
add
mov
inc
lahf
dec
inc
scas
mov
sub
xchg
scas
xchg
sbb
lahf
pop
push
ss
push
scas
jge
pusha
jecxz
hlt
pop
lcall
setp
scas
pop
dec
or
xchg
jl
lea
cwtl
testb
inc
int3
and
inc
push
cmp
and
int3
shlb
add
jb
push
xor
adc
jmp
in
rolb
hlt
or
test
dec
sub
pop
mov
sbb
push
mov
cmp
lcall
mov
enter
mov
mov
negb
dec
jno
cmp
arpl
cmp
repnz
int3
mov
cli
popa
push
mov
lds
cmp
lock
jp
icebp
cmc
lods
int3
js
loop
pop
insl
jo
in
xor
add
inc
jg
addr16
je
xorb
mov
mov
shll
or
in
push
popa
fidivrl
ss
imull
stos
repz
push
mov
mov
iret
out
test
push
into
push
test
mov
and
enter
mov
iret
int
xlat
mov
push
jmp
mov
sub
push
insl
adc
push
mov
stc
sub
popa
test
mov
pop
add
sub
mov
stos
xor
ret
dec
jge
inc
xchg
add
adc
into
cmpsl
ja
iret
mov
imul
lea
subb
mov
mov
sub
mov
out
add
icebp
push
xchg
inc
test
and
das
je
bnd
push
addr16
or
fstl
icebp
pop
xor
daa
ficoms
mov
lahf
lahf
scas
mov
stos
test
push
arpl
ja
negl
pusha
jg
idivb
cmp
es
jbe
fistpl
mov
cmpsb
in
cmpl
movsl
or
testb
stc
shl
adc
movsl
adc
xchg
inc
orb
sub
shl
dec
pop
fstps
adc
mov
loop
out
add
xchg
enter
hlt
inc
scas
fmull
push
cmp
call
idiv
call
daa
popa
lea
jmp
test
in
fldcw
movsb
mov
lahf
or
out
orb
mov
pop
mov
imul
inc
push
testl
add
mov
shll
mov
stos
mov
mov
push
jb
shrb
cmpsl
inc
cmp
or
or
fsubrl
sub
mov
insl
iret
adc
pop
aaa
mov
jb
aas
sub
ja
inc
lea
fwait
mov
rcrl
push
out
sbb
test
jecxz
clc
in
ret
xor
inc
cmpl
insl
out
lret
xchg
int3
xchg
icebp
adcb
xchg
loopne
ret
fistpll
inc
insl
sbb
cmp
fiaddl
dec
mov
push
in
hlt
jp
bound
jle
mov
in
inc
cld
mov
mov
mov
dec
jmp
or
xchg
mov
xchg
pop
call
push
arpl
mov
mov
mov
inc
lret
cmpb
xchg
mov
jge
rclb
push
shlb
cmpsl
dec
sahf
jp
ss
insb
ret
in
push
jmp
add
mov
lods
push
in
js
pop
or
popa
sarb
jl
mov
xlat
xchg
mov
sub
push
adc
xchg
sbb
jnp
ss
lds
int3
imul
mov
popa
js,pn
jne
xchg
aad
jecxz
xor
or
jecxz
mov
mov
nop
rolb
jb
pop
inc
push
pop
movsl
sub
push
jnp
popa
jl
xchg
inc
xchg
or
xor
fnstenv
inc
add
adc
sbb
push
outsl
lods
add
jmp
aam
jle
push
dec
and
insl
pop
notl
inc
scas
stos
popa
iret
incl
lds
ljmp
push
xor
add
inc
cmp
add
outsl
les
ds
mov
sti
mov
ret
cwtl
adc
int
pop
jmp
add
dec
sbb
stos
cmc
inc
push
xchg
cwtl
pop
jo
sub
sub
and
in
xchg
pop
pop
pcmpgtw
in
xlat
out
mov
test
pushf
pop
hlt
int3
das
ss
xor
mov
xchg
or
movsl
xchg
ret
stos
fmuls
aam
test
xor
cmpsb
in
dec
loope
xchg
dec
adc
fcomps
and
mov
and
sub
lcall
add
negb
or
add
mov
push
cs
cli
xlat
push
push
nop
xchg
mov
xor
pop
icebp
test
lods
and
mov
pop
cmp
inc
or
add
xchg
push
jmp
clc
xor
jg
int
lahf
mov
out
jge
xor
andb
notb
imul
push
daa
or
jb
mov
ljmp
sbb
jns
push
push
pop
stos
push
mov
into
fcompl
mov
push
fcomps
daa
lods
sbb
cli
dec
dec
jmp
popa
in
mov
loopne
data16
imul
push
mov
push
inc
addb
iret
mov
popf
add
or
call
push
fidivs
lock
and
pop
loop
pop
sub
lahf
sbb
aaa
or
sub
aaa
mov
xor
and
mov
cltd
flds
push
add
lock
add
inc
adc
ffreep
mov
leave
idivl
in
mov
ret
and
test
adc
leave
in
lret
adc
scas
movsb
push
aaa
jne
jge
xchg
push
pop
loop
adc
shlb
dec
hlt
cli
inc
add
adc
loopne
test
pop
push
lea
adc
cmpsb
faddl
mov
push
mov
push
xchg
jns
scas
jle
das
jnp
in
sbb
adc
test
into
cmc
add
pop
fmull
push
rcrl
je
adc
imul
mov
inc
mov
dec
push
mov
sbb
pushf
bound
insl
mov
andb
xchg
lods
fs
je
and
add
sub
cmp
dec
divb
test
cld
dec
ret
ja
adc
loop
inc
or
stos
sbb
ss
shlb
sub
andb
rorl
and
push
jne
test
sbb
pop
and
pop
lea
cli
data16
pop
test
pop
mov
stos
lea
pop
iret
imul
push
ss
xor
pop
add
ficompl
nop
or
or
or
sub
adc
dec
fisubs
pop
sbb
sub
xorb
push
test
cmpsl
loopne
pop
sub
xchg
ds
mov
pop
js
xchg
clc
mov
aam
sbb
lret
cwtl
scas
aad
jo
or
sub
rclb
xor
or
punpcklwd
mov
xchg
pop
sbb
ret
fbstp
rolb
jno
dec
push
jns
mov
or
in
adc
test
mov
sbb
push
jb
xor
popf
xchg
sbb
aaa
xor
fdivrs
fsts
arpl
push
jo
mov
in
xor
cmp
sbb
adc
ret
cs
jns
imul
jecxz
imul
jnp
dec
into
jmp
or
arpl
pop
mov
sbb
pop
movsl
les
sub
cmpsl
jno
repz
insl
in
aad
fiaddl
ljmp
pop
into
inc
pushl
sbb
aaa
xchg
mov
or
mov
mov
mov
jp
xor
add
mov
jge
jmp
mov
mov
or
add
lcall
xlat
xchg
jmp
cmpsl
cmp
xchg
fnsave
std
idivb
add
jmp
fsubl
mov
push
sub
iret
in
bound
jg
sbb
shlb
fnstcw
or
out
mov
and
imul
fmuls
outsb
xchg
and
test
dec
push
pop
sahf
mov
fmuls
inc
gs
pop
fadds
daa
dec
sub
mov
shrl
dec
mov
insl
roll
xor
ds
negl
aam
in
jecxz
mov
or
dec
adc
mov
add
test
jp
lret
or
adc
int3
lret
dec
popa
iret
das
lahf
rcll
mov
hlt
in
das
adcb
pand
mov
jp
pop
les
jmp
push
iret
in
leave
or
xchg
in
iret
nop
sbb
mov
xlat
popf
inc
cld
push
or
fwait
adc
xlat
inc
and
xor
push
fsubrl
pop
int3
leave
lods
and
mov
repz
cmp
lahf
enter
inc
pusha
add
cmp
outsl
sub
push
loop
addl
mov
nop
xor
xchg
cmp
pop
mov
ret
sbb
xlat
xor
jg
jge
int3
inc
mov
sub
mov
xchg
cmpsl
jle
inc
fs
jae
imul
cmp
pop
fists
rorl
mov
shrl
in
dec
add
test
mov
push
test
jne
sub
xor
and
popa
das
and
push
xchg
push
stos
stos
pop
and
xchg
lock
mov
push
sub
inc
and
les
or
push
stos
pop
sahf
add
jmp
fisttps
cmpsl
adc
add
and
call
pusha
leave
test
adc
mov
fistpll
in
fistpl
mov
xchg
and
loop
nop
out
stc
pop
test
mov
xchg
jnp
stos
or
adc
push
xchg
jge
hlt
sbb
sbb
and
les
ds
sub
mov
popf
es
data16
dec
movsb
jl
cmpsl
outsb
mov
mull
inc
sub
stos
cmpsl
xchg
inc
test
inc
imul
add
and
cmc
popf
push
fldenv
mov
ss
test
or
xchg
fisttpll
rcll
jnp
daa
xlat
push
int
outsb
mov
mov
in
fwait
push
inc
test
xor
push
into
hlt
cli
shl
jl
push
daa
imul
fs
adc
mov
gs
xor
testl
lods
adc
ss
andb
jns
popf
push
inc
dec
jb
cmp
movsb
sbb
pop
out
mov
pop
inc
sub
pop
rorb
xor
scas
scas
pop
in
add
mov
into
xor
pop
test
or
add
cwtl
in
dec
loop
fsubrs
xchg
pop
subb
cmpsb
sbbb
cmp
aaa
sbb
cmp
cwtl
sbb
fs
pop
mov
mov
add
int
lahf
pop
and
cld
pop
jl
into
out
enter
inc
add
sti
adc
pop
cltd
mov
mov
int
addr16
sbb
mov
enter
inc
jns
rolb
rclb
mov
or
dec
push
jmp
mov
mov
xchg
xlat
out
or
gs
aaa
cmp
test
lods
sub
enter
test
ret
mov
popf
movsb
mov
rcll
cmp
outsl
xlat
jmp
or
sti
mov
loope
lret
test
adc
adc
movsb
and
insb
or
aam
dec
jmp
cmpsb
gs
insl
jbe
jb
ficomps
inc
jb
out
jmp
push
mov
jmp
subb
stos
add
pop
add
sub
push
lock
cmpsb
int
mov
lods
ss
xchg
add
and
cmp
xor
incb
incb
adc
push
adc
adc
ja
mov
add
cmpsl
popf
pusha
pop
or
cltd
nop
call
pop
push
arpl
jno
dec
jb
xchg
insb
rol
jne
rorl
loope
stos
insb
cmp
arpl
andl
mov
mov
or
rcrb
jne
xor
cmpsl
stos
sbb
add
inc
ret
sub
int3
pop
push
dec
loope
cltd
mov
inc
sub
aas
xor
xchg
iret
mov
sbb
sbb
cltd
int3
sbb
les
xlat
push
xor
and
fidivs
outsb
clc
cltd
push
pop
sti
les
dec
mov
leave
cs
jg
xchg
push
test
mov
and
orl
and
idivb
lahf
sbb
lea
pop
or
cli
mov
in
jns
cld
push
mov
sti
call
pop
lods
pop
aam
mov
xor
adc
popa
mov
push
or
and
out
xor
sbbl
ret
pop
xchg
in
pushf
cwtl
enter
xchg
fnstenv
insb
stc
sub
sub
jno
mov
loopne
sub
dec
ja
testb
sbb
adcb
push
aaa
imul
mov
addr16
es
fwait
lahf
or
rcll
inc
mov
ds
fwait
push
bound
ja
hlt
push
cmp
pop
cmp
jnp
pop
dec
lahf
jp
pop
mov
inc
cwtl
jo
adc
pop
hlt
ret
outsb
inc
scas
loop
hlt
lahf
ficoml
les
ljmp
or
mov
out
push
jb
jae
push
stc
sub
jp
mov
jmp
icebp
xor
mov
sahf
adc
cmp
mov
test
xchg
mov
je
xor
movsb
mov
js
jae
gs
mov
rcrb
clc
mov
mov
lea
int
int
std
jmp
in
shrb
addb
repnz
xchg
inc
dec
cmp
sti
cmp
mov
je
stc
or
mov
xchg
je
jge
movsl
cmp
loopne
frstor
lock
and
mov
dec
js
ss
dec
bound
lods
lods
call
mov
mov
add
pop
and
adcl
inc
lds
adc
in
inc
hlt
stc
repz
fs
mov
pop
mov
sbb
push
lcall
sahf
lahf
xchg
lock
mov
sub
sar
lods
idivb
jge
pop
sbb
dec
stos
adc
stc
xor
sti
pop
movsl
das
lock
jge
pop
cwtl
repz
xchg
add
popl
in
mov
rcll
mov
cltd
shll
filds
mov
loop
cmpsl
mov
aaa
jb
cli
xor
cli
sahf
xor
mov
insl
mov
sub
cmp
adc
hlt
adc
aam
inc
or
cli
mov
fisttpll
clc
jmp
cld
out
mov
mov
jl,pn
movsl
add
push
inc
hlt
push
sbb
pop
lret
in
js
cmp
inc
fisubrs
sub
hlt
sarl
adc
xchg
xchg
in
mov
inc
sbb
lock
es
push
dec
testb
ss
sub
lods
mov
add
in
jg
xor
outsl
and
ljmp
push
fistl
in
cmpsb
es
inc
imull
stos
andb
clc
fwait
int
scas
push
ss
jno
xor
and
cs
xor
fstpt
mov
ja
outsb
xor
and
ret
push
gs
sbb
mov
stos
jnp
cmp
loop
test
xor
sbb
and
cltd
aas
bnd
aad
lahf
scas
aaa
adc
inc
das
push
push
push
je
or
xchg
mov
mov
in
or
push
scas
rcrl
inc
das
es
pop
xchg
xchg
xchg
adc
sub
jp
and
xchg
push
outsb
dec
mov
and
mov
adc
pop
sbb
pop
into
mov
and
popf
jne
fiadds
mov
incb
pop
jle
and
enter
fcmovne
pop
push
fidivs
sub
addl
out
inc
or
xorb
cld
mov
sub
icebp
push
inc
stos
dec
ljmp
pop
cmpsb
test
es
xchg
inc
inc
cmp
rcrl
fcomps
in
adc
mov
push
lret
fwait
popa
arpl
jl
add
repz
lea
leave
xchg
jbe
popa
adc
fsubrl
scas
cmp
mov
pop
insb
cmp
mov
jae
cmp
jp
jb
pop
push
icebp
rclb
or
fiaddl
mov
lret
adc
les
hlt
and
fwait
mov
imull
adcl
aad
loop
dec
icebp
adc
dec
sbb
hlt
cmc
cmc
je
xor
jns
pop
lods
sub
repnz
xor
xchg
jle
cmp
mov
mov
arpl
test
inc
mov
jns
inc
clc
leave
sub
cmp
pop
pop
push
lahf
lahf
ret
cmp
insb
adc
fisttps
decb
push
xchg
dec
mov
cmp
jno
mov
and
adc
sub
cs
mov
jne
shll
int
ss
jmp
cltd
stos
inc
fcomi
cmp
push
lods
mov
mov
outsb
ja
popf
adc
addl
cs
mov
pop
clc
adc
dec
jecxz
push
cmp
mov
mov
add
xchg
lea
push
cmpsb
gs
dec
and
mov
dec
out
push
aaa
popa
push
fxch
enter
jg
xchg
adc
stos
repz
mov
xchg
mov
rolb
or
repnz
mov
sub
cli
jg
mov
fisttpll
fbld
push
std
push
pushf
or
inc
xlat
jae
aad
mov
popf
push
dec
orl
sti
adc
rcrl
push
push
std
stc
cmp
hlt
pop
dec
std
mov
std
addr16
mov
mov
xchg
cwtl
hlt
xor
aad
add
mov
push
movsb
fstpt
ret
add
xor
neg
mov
inc
fwait
xor
ret
cmc
fldl
sub
inc
sub
cmp
jge
sbb
loopne
in
cmp
out
xchg
cmp
mov
scas
pop
test
or
sub
ljmp
xchg
jno
jae
cmp
arpl
jb
test
leave
ljmp
mov
cmp
loop
pop
push
fwait
ds
jle
fiaddl
inc
sub
sarb
and
mov
cs
and
ss
and
xor
ret
lahf
xlat
aas
pop
push
jbe
mov
insl
and
adc
cmp
add
insl
fbstp
je
fwait
ds
sub
lds
nop
fiaddl
inc
and
jo
ret
mov
dec
mov
iret
xlat
pop
xchg
cmp
mov
ss
je
mov
mov
scas
shlb
mov
pop
notb
dec
jnp
push
fstl
push
push
outsb
popa
xchg
add
inc
xchg
push
testl
sahf
xchg
push
lds
adc
dec
sbb
out
ljmp
or
aas
push
mov
imul
popf
repnz
imul
adc
jmp
sbb
les
xor
sbb
insl
mov
mov
cmp
jne
jl
pop
sub
enter
pop
test
mov
mov
pop
ror
adc
iret
ds
rclb
lea
in
in
jl
sti
leave
sub
sub
mov
jl
das
cmp
cli
ljmp
add
adc
xlat
mov
sub
mov
in
add
in
pusha
and
arpl
cmc
push
pop
jns
push
repz
dec
aam
test
dec
push
fsubrl
movsl
fwait
outsl
fisttpll
cmp
clc
fs
sbb
inc
addr16
jle
jne
pop
sbb
push
dec
jb
stos
fs
pop
lret
daa
mov
pop
insb
inc
packsswb
cmp
pop
or
inc
dec
lea
popf
scas
in
gs
fdivl
mov
pushf
sbb
ss
cmp
and
xchg
sbb
and
lea
adc
cmc
iret
repz
xchg
dec
push
data16
jecxz
mov
jbe
incl
es
cld
arpl
lea
hlt
stos
stc
jno
mov
mov
push
dec
jecxz
outsb
add
out
jg
xor
subl
cmovns
cmp
sub
jb
mov
das
lods
mov
mov
adc
sbb
daa
int
mov
xor
dec
push
rorb
sub
stos
subl
pop
push
movsb
pop
fwait
inc
dec
addr16
sbb
sub
adc
fstps
mov
rcrl
add
pop
bound
bound
cld
loopne
mov
insb
cwtl
mov
xor
push
or
nop
pop
xchg
jmp
or
lea
loopne
pop
adcb
popa
and
pop
shlb
xor
mov
iret
push
mov
xor
adc
mov
xor
dec
push
fistps
or
cld
mov
mov
cmpsb
xchg
loop
pop
pop
inc
lods
mov
mov
testl
pop
das
fisttpll
popf
sbb
mov
lret
das
inc
notl
push
lods
fistpl
sbb
or
gs
sbb
mov
xlat
loopne
and
jne
loope
push
push
ret
fcoms
xchg
testb
js
mov
inc
cmp
push
mov
or
loope
jo
xchg
mov
js
push
jp
mov
call
jmp
inc
lahf
jle
imul
mov
fidivrs
or
rcr
push
aam
push
mov
int
lods
daa
repz
push
or
ret
push
inc
xor
pop
loope
shl
sti
movsb
mov
sarl
xchg
std
push
jge
xchg
repz
dec
or
lret
mov
lock
nop
xchg
adc
ss
lods
inc
ret
pop
jnp
add
pop
jg
fwait
jb
add
jle
int
pop
aaa
imul
dec
ficoml
push
mov
nop
outsb
or
dec
mov
inc
movsb
jno
fnstenv
fimull
loope
xor
pop
cmp
nop
sub
cmp
jno
xor
xor
lahf
jbe
sarl
inc
xchg
ret
leave
mov
jl
cmc
fwait
adc
push
cmp
and
xor
sbb
rorl
sub
add
das
nop
jl
inc
mov
popa
orb
jg
mul
fimull
mov
dec
push
imul
dec
jmp
adc
iret
inc
fdivrl
mov
push
sbb
mov
rorb
push
sub
mov
in
inc
scas
xor
sub
fistps
pop
jecxz
pop
shll
xchg
aam
mov
jmp
dec
daa
aas
shll
xchg
mov
fcompl
rcll
cmp
push
add
call
pop
jns
imul
ja
push
xchg
xor
repz
add
xchg
mov
and
lods
dec
dec
test
aaa
inc
adc
out
pop
add
addb
xchg
xor
xchg
test
fisubl
in
movsb
mov
out
pop
dec
divl
stos
pop
in
ret
cld
pop
mov
cmp
and
xor
test
test
jecxz
shl
js
inc
mov
or
mov
mov
push
mov
or
lret
js
mov
dec
clc
pop
pop
in
push
aas
push
outsl
aam
stos
inc
sbb
fimuls
cmp
cltd
cld
sub
fnstenv
jle
mov
or
insl
fstps
sbb
out
mov
stos
arpl
addb
adc
inc
mov
cmp
es
adc
arpl
shrb
notb
data16
xchg
test
lret
mov
ljmp
popf
ret
dec
lods
clc
xchg
or
popa
inc
fimull
test
sub
mov
fcoml
jmp
push
pop
lods
xchg
pusha
xchg
fbld
add
lahf
popf
aam
cmp
mov
int3
cmpb
adc
sar
pop
pop
xchg
daa
shl
ss
sub
lahf
scas
sti
outsb
mov
xor
jmp
popa
push
incb
cmp
outsl
add
adc
pop
aam
pop
loopne
push
dec
test
ja
cs
push
adc
test
or
outsb
scas
jg
sbb
sbb
fcom
sahf
lock
add
test
jle
cmp
lret
adc
xchg
dec
adc
pop
arpl
pushf
loope
mov
mov
iret
mov
in
jne
or
movsb
daa
mov
push
add
jl
fs
xchg
adc
pop
add
in
sbb
sub
adc
imul
and
inc
in
lock
sub
test
jnp
push
jne
mov
mov
mov
lods
push
xchg
xlat
inc
sti
xor
mov
inc
adc
loope
push
xchg
sbb
adc
pop
dec
push
adc
in
insl
mov
or
std
xchg
cs
loop
pmulhuw
adc
jg
dec
jbe
mov
inc
lods
mov
clc
leave
or
push
or
jl
inc
jbe
sub
mov
dec
int3
mov
subb
cmp
int
stc
fwait
sahf
insl
scas
ljmp
mov
push
and
pop
inc
push
xlat
loope
xor
mov
jp
sbb
lret
jge
imul
leave
jl
lods
adc
inc
cmc
xchg
adc
dec
es
inc
inc
aaa
sub
mov
sbb
hlt
jmp
dec
andb
adc
lods
xor
push
cmp
arpl
and
pop
ljmp
das
pusha
lret
adc
xor
adc
fstl
pop
jb
jno
pop
ficomps
inc
insb
roll
and
mov
sbb
pop
js
mov
dec
mov
repnz
jecxz
and
out
stc
mov
mov
mov
insl
movsb
or
lret
sbb
jo
xor
push
mov
push
shlb
dec
out
lret
hlt
ja
dec
jle
dec
outsb
pop
call
inc
mov
ror
fdivrl
jecxz
lret
mov
out
pop
mov
arpl
out
xor
popf
sbb
pop
imul
arpl
mov
addl
and
nop
pop
fistpl
in
cltd
adc
movsl
enter
out
add
push
mov
dec
in
lods
adc
mov
test
arpl
add
xor
or
lret
in
sbb
pusha
lret
dec
incl
jno
ja
sub
pop
dec
pop
inc
cltd
push
addr16
jecxz
pop
test
xchg
jno
xchg
dec
xchg
cld
jmp
stos
lcall
xor
data16
xorl
inc
push
loop
div
inc
fidivl
adc
into
mov
cwtl
add
pop
pop
cltd
mov
jo
sti
or
inc
lcall
inc
xchg
pop
mov
ljmp
mov
add
jae
and
mov
scas
inc
clc
mov
mov
cmp
bound
jae
jns
pop
sbb
add
daa
xor
and
sahf
xor
pop
int
dec
ret
jns
mov
clc
lds
mov
fidivrl
lea
sysexit
mov
xchg
pop
aaa
pop
or
jo
clc
fsts
in
jmp
sub
nop
dec
inc
dec
jo
pop
loopne
sti
ret
addl
add
push
xor
call
insb
insb
andl
xor
push
shlb
dec
and
jmp
int
cmp
sub
std
out
cmc
push
pop
jg
and
dec
push
ljmp
repz
loop
lods
add
cltd
xorl
rcr
push
sti
aam
xchg
push
rcrl
sarb
xchg
dec
push
mov
adc
sub
inc
xchg
fisubl
test
xchg
push
js
cmp
sub
popa
xor
fdivl
clc
repnz
data16
add
clc
test
jnp
cmp
pop
push
stc
cmp
jmp
test
icebp
adc
and
iret
xor
pop
and
mov
sbb
lods
xchg
push
hlt
pop
push
rorb
sahf
push
pusha
fs
popf
fdivp
dec
orb
or
mov
ds
add
scas
mov
push
addr16
dec
jl
divb
or
sbb
jne
inc
inc
adc
mov
pop
mov
push
jle
pop
jbe
mov
shll
jmp
mov
adc
xor
ja
jle
enterw
or
insl
outsb
in
mov
mov
dec
push
mov
ret
cwtl
xchg
sub
cli
xchg
xor
mov
andl
popf
subb
push
mov
in
jb
or
sbb
fwait
pop
daa
adc
mov
insl
xchg
mov
lods
jae
out
lea
lock
cmc
mov
cwtl
into
push
mov
stc
push
push
xchg
out
adc
xchg
add
iret
dec
idivl
pop
add
mov
out
cld
insl
inc
push
pop
mov
addb
ret
outsl
pop
and
mov
fisubrs
or
dec
jp
das
jne
dec
dec
mov
pop
dec
dec
daa
sbb
dec
jo
pop
inc
lret
lahf
addr16
mov
or
hlt
pop
push
dec
out
ja
or
inc
jae
or
jmp
pusha
jg
sarb
lcall
aaa
repz
sub
into
and
mov
xchg
hlt
push
add
iret
xchg
pop
out
test
mov
js
orb
push
loope
scas
ret
push
sbb
daa
sub
mov
loop
aad
dec
lret
pop
pop
dec
cmp
xor
shlb
xlat
xchg
sub
rol
xchg
xor
out
pushf
and
aas
push
shl
and
out
push
mov
dec
sub
ret
xchg
fistpl
xor
loop
inc
and
xor
enter
lea
lahf
lea
cld
cmp
rcr
das
aam
adc
mov
xchg
jl
inc
sti
sarb
cvttps2pi
mov
ret
lret
stos
in
rol
sti
cmp
test
sti
mov
mov
das
add
into
inc
icebp
and
addb
jmp
and
leave
jmp
xor
loope
or
sbb
and
test
lret
rorb
test
mov
loope
adc
push
xchg
dec
adc
fwait
or
dec
mov
fstps
loop
lods
jg
push
xchg
arpl
das
push
mov
mov
pop
gs
add
into
xchg
out
adc
out
stc
adc
and
mov
and
inc
fisubl
ficomps
mov
sub
jb
mov
scas
jle
jl
fisttps
ljmp
or
out
mov
cmp
test
xchg
out
popa
in
cld
test
rcrl
sbb
stc
pop
fnsave
xor
jno
mov
repz
ret
inc
dec
and
jno
lods
mov
jns
cmp
mov
xchg
jmp
xchg
insl
mov
das
xchg
test
in
fadds
pop
jns
popf
addl
setp
das
fbstp
cmp
popf
int
sbb
lcall
cld
aam
ret
or
test
xchg
jbe
clc
iret
outsl
aam
sbb
mov
fidivs
adc
shlb
pop
cltd
int3
sti
jb
sub
out
pop
xchg
and
addr16
push
pop
in
jnp
loopne
add
int3
loope
xor
movsb
rorl
stc
fidivs
divb
cld
cmp
imul
scas
adc
xchg
loopne
fiadds
sub
push
add
pop
sbb
mov
enter
fs
inc
leave
imul
lods
jae
cs
xchg
in
pop
testb
xchg
xchg
xlat
cmp
mov
jns
fwait
xchg
adc
mov
idivb
pop
mov
and
cmp
imul
ja
mov
scas
push
cwtl
pop
xor
cld
stc
neg
push
cmp
mov
push
hlt
lds
add
test
mov
push
roll
mov
jbe
iret
movsl
loop
fdivrs
out
cmpxchg
dec
lods
or
sbb
fmul
xchg
dec
cmp
scas
sub
jno
inc
push
jle
jmp
add
in
mov
fldcw
jge
data16
jb
scas
loop
add
mov
aas
cmc
adc
jle
jns
push
pop
sub
into
mov
faddp
jne
das
mov
sahf
mov
mov
fstps
fistl
and
addr16
cwtl
mov
dec
clc
jns
mov
movsl
in
sub
arpl
int
pop
adc
mov
lahf
subb
lods
arpl
dec
xorl
push
mov
jp
mov
imul
or
bound
or
sbb
dec
cmpsl
movsb
sub
xchg
lahf
imul
or
dec
mov
adc
testb
cmp
stc
int3
lock
mov
repz
dec
add
aas
xor
cs
xchg
iret
loopne
pushf
xchg
ret
fsubs
jge
lret
and
test
xchg
or
bnd
lds
je
sub
mov
addl
mov
pop
inc
cli
pusha
adc
push
fcmovnb
sub
fbstp
jge
iret
dec
das
and
je
in
movsl
mov
mov
loop
stc
push
xchg
push
sub
insb
test
faddl
outsb
or
sub
or
mov
scas
xchg
xor
ret
inc
fs
daa
inc
adc
scas
sarb
sbb
jne
inc
mov
mov
inc
and
jae
xchg
mov
fsubrl
push
dec
mov
dec
mov
inc
mov
cmp
aam
cmp
je
bound
ljmp
out
andb
test
sub
outsb
mov
dec
test
popf
inc
cmpsb
cmp
arpl
aad
cld
mov
das
xchg
adc
mov
push
pop
lods
cmpsl
mov
xor
mov
daa
mov
mov
sub
push
xchg
sarb
clc
dec
inc
ror
fiadds
lods
dec
xchg
xchg
sbb
adc
jl
pop
inc
scas
mov
lret
xor
rcl
push
jnp
mov
fldcw
jnp
xchg
add
fcmovnbe
xor
mov
lds
popa
bound
pop
pusha
out
jecxz
cltd
aad
xchg
mov
lods
mov
loop
pusha
sub
inc
and
roll
cmp
les
mov
sbb
push
push
jno
adc
incb
or
cmp
bound
sbbb
rcl
loopne
or
push
sub
dec
jge
dec
add
push
or
rorb
inc
push
or
inc
pop
data16
dec
dec
or
shll
add
xchg
jge
pop
cmp
lret
lea
or
mov
pop
fidivrl
neg
adc
xor
xchg
inc
gs
cmp
mov
jno
or
mov
add
fbld
aas
aam
lret
jnp
imul
mov
mov
jno
mov
sbb
mov
addb
pop
mov
mov
xor
or
mov
loope
cs
cmp
addr16
mov
dec
mov
leave
mov
ljmp
push
pusha
adcb
inc
jne
dec
in
mov
ret
xor
loop
cld
in
cmp
mov
imul
adc
cs
hlt
pop
or
mov
mov
jb
xchg
psubq
push
jno
stc
mov
mov
int
cmpsl
fstpl
lcall
mov
jne
mov
fildl
xchg
ficomps
mov
sahf
sbb
sarl
cmpsb
jns
js
cmp
icebp
adc
test
daa
push
jae
jmp
sub
and
stc
shl
push
xor
test
test
mov
mov
sbb
jno
mov
jp
das
jb
popa
mov
mov
outsl
test
sub
pushf
lret
sbb
lcall
xor
rclb
fwait
cmpsb
xor
jb
sub
jbe
push
or
push
stos
roll
sbbb
ljmp
out
fimull
push
sbb
mov
sti
push
xchg
add
int
mov
std
leave
push
orl
pop
icebp
fs
inc
call
cmpsb
gs
lods
stos
sti
out
flds
inc
or
cmpsl
rol
pop
adc
in
mov
lret
insb
cwtl
mov
pop
cwtl
jno
push
add
mov
mov
mov
sarl
sub
mov
clc
and
push
popf
adc
out
dec
mov
mov
test
jns
das
loopne
scas
mov
add
call
in
aad
cmpl
xchg
sbb
inc
lret
mov
addr16
fdiv
jg
pop
cmp
xchg
js
filds
test
and
xchg
mov
mov
dec
dec
pop
lahf
mov
xor
push
dec
inc
mov
add
nop
mov
add
fimull
leave
bound
xchg
repz
xlat
out
scas
negl
popl
insl
hlt
fwait
rorl
mov
dec
dec
inc
or
in
int
add
jp
xchg
jmp
je
dec
daa
mov
sbb
dec
cli
cld
pop
pusha
jmp
aad
lret
xor
test
cmc
push
adc
pop
and
cmp
rclb
insb
imul
pop
xchg
in
arpl
or
xlat
ljmp
movsl
push
mov
dec
cmp
shlb
and
mov
js
cmp
pop
sub
xchg
mov
lods
or
sub
mov
pop
sbb
and
mov
out
or
rcll
xchg
inc
mov
scas
xchg
fadds
cmp
xchg
shrl
outsl
pop
xorl
test
adc
leave
bswap
xor
iret
std
lcall
clc
jbe
es
popa
pop
jecxz
andb
in
cs
xchg
pusha
in
fistpll
pop
xlat
push
es
push
das
aam
fmuls
loop
outsb
jp
pushf
add
scas
sub
in
mov
jo
xor
cs
pop
pop
mov
or
sbb
adc
aad
pop
pop
ja
adc
sub
xchg
add
lcall
outsl
or
push
scas
adc
push
push
jle
mov
repnz
and
xchg
xchg
iret
test
imul
xlat
ret
sub
mov
fcompl
pmuludq
and
sbb
cmp
pushf
lods
dec
insb
ljmp
push
outsl
sub
or
cmc
les
mov
ds
push
xchg
inc
add
fstpt
pop
ljmp
and
lock
sub
je
jb
insb
inc
or
jge
cmp
mov
rorb
xor
es
sub
mov
and
jae
out
lock
xchg
cmp
sbb
mov
aas
mov
mov
imul
xor
into
jne
scas
dec
inc
dec
ret
push
inc
adc
fcomps
aam
push
push
cmp
inc
xlat
pop
add
pop
into
inc
popf
mov
loope
jmp
mov
sahf
in
outsl
out
out
out
jge
call
bound
mov
adc
addl
repnz
mov
ret
daa
lcall
lahf
push
cmp
dec
mov
pop
js
jl
adc
test
aad
sbb
mov
outsb
mov
jmp
push
fwait
outsl
push
repz
call
mov
imul
pop
mov
lret
mov
mov
jne
cmp
xchg
push
pop
mov
jge
aaa
ljmp
mov
mov
cwtl
mov
loope
xor
adcl
sbbl
jns
out
push
cli
movsb
add
dec
aaa
jne,pn
inc
pop
mull
or
out
test
insl
xor
scas
and
adc
jb
adc
inc
cltd
jg
adc
jno
int
push
cmc
pop
das
and
mov
push
mov
aad
xchg
xor
adc
add
imul
dec
sub
mov
mov
xchg
lcall
dec
fs
ffree
mov
jmp
cmc
mov
pop
mov
pushf
clc
sbb
and
mov
out
add
adc
adc
lahf
jmp
sbb
jle
lret
sub
push
in
clc
xchg
jp
addl
sbb
and
aas
cmp
cmp
rolb
push
outsl
mov
addl
roll
sahf
testl
adc
repz
inc
cmpsl
outsl
cli
into
shrl
mov
rcrl
push
pop
out
jecxz
ret
jne
sbb
loop
dec
test
mov
into
movsl
or
jno
push
jg
ret
and
mov
xor
xorb
adc
and
imulb
push
or
fisubs
incb
jmp
out
fcmovu
mov
mov
sbb
sahf
imul
ucomiss
xchg
sub
add
stos
cmc
cmp
cmpsb
lock
insl
pavgb
add
or
lds
test
mov
mov
push
inc
ror
dec
and
cld
insl
xchg
mov
lods
aam
cwtl
push
repz
inc
insb
jg
sarl
push
push
nop
adc
stc
add
sti
mov
lods
and
addl
mov
cli
mov
outsb
mov
xor
and
bswap
ret
cmp
ljmp
add
fistpl
mov
mov
pop
lods
mov
add
push
stos
mov
jecxz
loopne
movsb
int
mov
iret
call
rorb
popa
aas
dec
repz
adc
adc
stos
ret
les
xor
enter
adc
rcrl
xor
mov
dec
or
and
add
adc
xchg
arpl
adc
data16
fwait
out
mov
loopne
add
mov
in
lret
aad
mov
fldcw
cmp
stos
or
pushf
sub
mov
fstps
xchg
pop
cmp
push
insb
inc
jne
push
popf
and
push
pop
aaa
xchg
xlat
mov
mov
imul
sbb
mov
lds
rcll
insl
mov
cld
fbld
loop
mov
mulb
icebp
add
adc
jb
stos
cmp
and
inc
jno
in
mov
scas
aas
dec
dec
outsb
es
push
ret
dec
cmpsb
aad
mov
jmp
inc
sub
sub
add
jmp
mov
add
jmp
not
not
not
xor
sub
add
xor
mov
cmp
jae
cmp
mov
sub
mov
mov
add
push
push
mov
add
mov
dec
xor
mov
mov
mov
jb
xor
ret
jmp
lea
xor
mov
mov
push
pop
cmp
mov
not
mov
mov
push
pop
mov
push
pop
je
je
mov
jle
dec
test
push
pop
push
pop
not
mov
cmp
push
pop
test
and
mov
and
lea
inc
xor
add
mov
xor
xor
dec
not
mov
push
pop
jmp
jmp
xor
jne
sub
mov
mov
add
sub
add
not
mov
mov
jle
cmp
dec
and
jmp
mov
and
jno
mov
push
pop
mov
cmp
xor
sub
jbe
lea
xor
and
sub
not
cmp
mov
pop
mov
mov
mov
sub
mov
pop
sub
xor
xor
lea
push
pop
cmp
xor
push
pop
dec
sub
pop
ror
xor
xor
sub
push
pop
add
dec
cmp
mov
push
pop
push
pop
mov
jb
mov
lea
mov
jne
mov
jne
sub
mov
pop
not
jmp
pop
mov
jns
mov
add
pop
dec
jle
mov
sub
cmp
cmp
lea
mov
xor
cmp
jl
xor
mov
cmp
add
jne
cmp
mov
sub
mov
sub
xor
and
push
pop
xor
add
mov
dec
jp
xor
cmp
push
pop
mov
jns
push
pop
jg
mov
push
pop
lea
push
pop
jne
push
pop
push
pop
cmp
add
push
pop
push
pop
dec
mov
jmp
jmp
jae
push
pop
and
add
push
pop
mov
sub
lea
mov
xor
lea
push
pop
dec
cmp
cmp
xor
jne
and
mov
cmp
jno
cmp
mov
and
xor
lea
and
lea
je
add
xor
dec
mov
push
pop
add
inc
add
and
je
mov
push
pop
xor
push
pop
xor
not
cmp
xor
xor
inc
cmp
push
pop
lea
xor
push
pop
mov
push
pop
sub
cmp
push
pop
mov
mov
jb
push
pop
push
pop
mov
mov
mov
push
pop
mov
mov
mov
jne
sub
jae
sub
and
mov
mov
js
push
pop
mov
mov
mov
not
jmp
jmp
dec
mov
inc
mov
mov
push
pop
mov
mov
cmp
dec
mov
mov
mov
lea
call
mov
jl
sub
push
pop
sub
cmp
cmp
xor
sub
mov
jmp
sub
xor
jmp
mov
push
pop
push
pop
push
pop
mov
xor
jmp
xor
push
mov
push
dec
push
pop
lea
push
pop
jle
push
pop
jo
xor
jnp
add
cmp
mov
jmp
xor
sub
dec
xor
mov
xor
push
pop
dec
lea
cmp
xor
xor
cmp
push
pop
cmp
jo
cmp
jl
jnp
cmp
add
jo
mov
add
cmp
xor
xor
jl
dec
jmp
jg
fdivs
jg
movsl
mov
cmp
outsb
daa
pop
and
add
add
aad
add
add
jo
pop
test
mov
enter
sahf
sbb
jns
or
add
sbbl
in
mov
push
inc
test
andl
subl
adc
aas
mov
add
cld
lds
pop
adc
ja
lods
outsl
lods
hlt
lds
pop
adc
ja
movsb
pop
aas
inc
je
add
add
pushf
incl
add
loopne
add
rolb
out
add
lods
loopne
add
add
add
lcall
add
sub
in
int
add
aaa
lahf
sub
add
cmp
cmpsb
mov
mov
repnz
ljmp
mov
and
or
rcrl
jg
pop
mov
loop
inc
imul
push
jbe
jnp
test
sbb
bound
push
int3
pop
add
outsb
mov
popf
push
xor
movsl
jae
fcoml
into
adc
lret
insb
sbb
push
notl
jbe
push
and
sbb
out
sar
adc
ljmp
push
fnsave
aad
or
push
mov
sub
dec
mov
daa
add
sti
adcl
mov
ja
movsl
cmc
inc
pop
stc
shl
or
xor
xchg
mov
hlt
xchg
je
lock
pop
data16
aas
insb
imul
mov
cli
stos
cmp
jo
xor
arpl
andb
popf
jnp
add
inc
addb
add
incl
add
fs
cmc
fwait
and
xchg
popf
sub
repnz
and
xchg
add
lock
add
or
mov
mov
jnp
sbb
add
add
mov
mulb
sub
adc
add
fadds
lods
adc
lds
sarl
jp
dec
jp
add
push
lods
testb
decl
add
add
out
decl
add
add
std
cmpsb
cs
add
add
iret
orl
cmc
std
jnp
or
cmc
mov
cld
lret
xchg
hlt
add
mov
inc
hlt
add
lods
sahf
outsl
daa
sbb
jnp
mov
in
xor
test
mov
sarb
and
sub
aas
jnp
jp
jne
pop
mov
push
jmp
adc
jnp
and
and
mov
add
mov
inc
movsl
shrl
rcrl
pop
popf
pop
pop
pop
popf
outsl
jns
sbb
daa
pop
pop
repnz
lods
sahf
outsl
daa
sbb
daa
pop
xchg
imul
aam
pop
popf
pop
cmpsl
pop
popf
outsl
jns
adc
daa
pop
pop
xchg
mov
dec
jnp
lods
sahf
outsl
daa
sbb
outsl
daa
pop
xchg
imul
jmp
jnp
aam
pop
popf
pop
roll
popf
outsl
jns
sub
daa
pop
pop
cmp
sarb
lods
sahf
outsl
daa
sbb
outsl
daa
pop
xchg
imul
sbb
adc
pop
popf
pop
filds
popf
outsl
jns
aam
daa
pop
pop
push
outsb
mov
sahf
outsl
daa
sbb
outsl
daa
pop
xchg
imul
aam
pop
popf
pop
sub
popf
outsl
jns
fsubrl
pop
pop
pop
cmpsl
sub
jge
sahf
outsl
daa
sbb
test
push
popf
outsl
repz
test
mov
sbb
lea
xorl
cli
cs
pushf
xchg
sub
pushf
xchg
sub
jnp
pushf
add
rolb
jae
es
popf
jns
mov
outsl
daa
dec
stos
sbb
mov
sbb
outsl
daa
jns
in
pop
popf
stos
dec
push
rol
jge
outsb
daa
pop
test
es
popf
jns
mov
jmp
test
push
popf
outsl
sbb
or
pop
popf
andl
pop
loopne
pop
popf
add
add
add
and
jnp
add
jnp
mov
add
jnp
dec
add
add
add
add
outsb
daa
pop
popf
xchg
les
popf
outsl
lds
outsl
daa
pop
movl
std
inc
add
add
fiaddl
pop
jae
es
popf
jns
test
outsl
daa
dec
popf
outsl
daa
pop
xchg
addl
in
sub
adc
mov
add
jg
add
add
add
mov
int
add
add
fldl
add
add
and
dec
jo
add
xchg
xor
popf
xor
pushf
jns
add
add
stos
add
xchg
scas
push
jg
loopne
ds
outsl
daa
sbb
jg
add
add
add
mov
pop
popf
xor
sahf
push
testb
and
xchg
mov
popf
outsl
jns
in
sahf
orl
cmp
lock
sarl
inc
repz
subl
fs
outsl
daa
jnp
push
cmp
jo
add
add
jnp
or
mov
jnp
clc
add
and
jne
mov
lcall
xchg
cwtl
push
popf
outsl
addl
daa
pop
lock
aas
cmpl
add
aas
cmpl
add
mov
mov
outsl
daa
mov
mov
push
popf
outsl
daa
xchg
or
daa
insl
sub
pop
pop
outsl
insl
fs
outsl
daa
ja
mov
insl
xor
les
pop
popf
pop
mov
sub
int
jnp
cmp
pop
popf
add
sahf
outsl
daa
lret
jnp
es
popf
repnz
lret
mov
std
sbb
add
add
outsl
add
test
jl
outsl
daa
add
sub
xchg
pop
sub
add
add
add
pop
or
mov
addl
mov
add
add
inc
clc
sbbl
mov
pop
fistpl
add
lods
add
bound
testl
dec
mov
addl
test
pop
bound
add
addl
notl
mov
xor
xchg
jl
popf
outsl
mov
pop
andl
outsl
daa
add
jnp
mov
pop
add
push
popf
outsl
jmp
mov
pop
adc
jmp
adc
lods
jo
popf
outsl
add
outsl
daa
add
sub
xchg
push
sub
add
sbbl
pop
popf
add
popf
outsl
add
outsb
daa
pop
mov
add
outsb
daa
pop
adc
jmp
adc
jp
jne
fs
popf
push
jle
cmp
rorb
sbb
add
inc
mov
jg
sahf
outsl
daa
test
or
outsl
addl
daa
pop
push
push
jnp
push
daa
pop
mov
imul
arpl
daa
add
jnp
push
aad
jnp
add
sahf
outsl
daa
mov
shr
xor
lret
sbb
jnp
mov
jge
adc
jge
adc
jnp
mov
sub
cld
add
sub
lea
rcrb
xor
mov
popf
jge
adc
testl
outsl
daa
add
pop
incb
inc
push
shlb
popf
outsl
lret
dec
lret
adc
pusha
cmp
jae
subb
negb
add
add
jnp
movsb
es
popf
add
add
jae
mov
adc
jnp
js
daa
pop
add
sub
add
daa
pop
add
sub
pop
mov
cmc
sbb
adc
nop
outsl
insl
cmp
je
lea
aam
add
outsl
daa
add
push
add
add
outsl
daa
add
push
es
popf
cmpl
in
add
inc
cld
pop
xor
and
sbb
sbb
sbb
sbb
sbb
loop
add
ljmp
das
add
mov
add
sub
incl
add
into
add
push
add
dec
xor
add
add
bound
add
call
xor
add
das
add
jbe
add
lcall
add
das
add
mov
add
enter
fisubrs
add
repnz
add
add
sbb
add
add
add
cmp
add
add
add
dec
das
add
pop
das
add
push
add
jp
add
mov
add
lcall
add
das
add
shrb
add
in
add
lock
add
add
add
push
xor
add
add
sub
add
cmp
add
dec
xor
add
add
test
add
nop
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
add
add
add
and
add
cmp
add
dec
xor
add
add
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
push
outsb
imul
imul
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
add
insb
gs
jae
push
je
dec
gs
inc
outsl
dec
outsb
imul
inc
js
add
inc
outsl
push
imul
popa
jae
dec
bound
arpl
add
push
dec
inc
inc
jb
insl
push
je
imul
xor
cs
insb
add
add
add
outsb
je
insb
insb
cs
insb
add
imul
add
popl
inc
gs
imul
outsl
arpl
add
je
outsl
jns
imul
add
jo
je
push
popa
addr16
add
enter
fs
popa
imul
inc
gs
insb
imul
je
add
inc
gs
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
je
gs
popa
addr16
add
inc
gs
imul
outsb
addr16
add
stos
add
push
imul
scas
add
push
imul
jae
bound
sub
inc
push
js
push
add
fs
jne
jae
jb
add
add
fs
je
imul
push
outsl
jae
dec
gs
popa
addr16
add
sbb
push
imul
popa
jae
push
add
sbb
push
imul
imul
inc
outsl
jb
popa
je
add
sbb
push
imul
imul
inc
outsl
jb
popa
je
add
push
add
je
outsl
arpl
add
addl
imul
outsb
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
popa
add
gs
je
push
imul
push
add
gs
xor
fs
insb
add
enter
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
outsb
jne
push
popa
insb
jne
push
add
add
addr16
gs
popa
insb
jne
inc
js
add
popa
fs
jo
xor
cs
insb
add
imul
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
addr16
imul
imul
aaa
add
popa
addr16
imul
popa
je
add
cmp
dec
insl
popa
addr16
imul
je
outsl
jns
cmp
dec
insl
popa
addr16
imul
addr16
outsb
je
jb
cmp
dec
insl
popa
addr16
imul
addr16
gs
jbe
add
add
popa
addr16
imul
addr16
outsl
jbe
add
cmp
addr16
imul
ja
add
dec
insl
popa
addr16
imul
inc
jb
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsb
outsw
add
dec
add
popa
addr16
imul
fs
insl
popa
addr16
add
dec
add
popa
addr16
imul
add
dec
insl
popa
addr16
imul
add
pop
add
popa
addr16
imul
je
add
insl
arpl
xor
fs
insb
