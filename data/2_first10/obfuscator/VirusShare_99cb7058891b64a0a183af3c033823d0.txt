subb
sub
pop
nop
jle
hlt
cld
inc
std
sbb
clc
adc
xchg
imul
mov
fidivrl
jo
lret
sbb
cld
xchg
testb
and
mov
add
outsb
std
inc
mov
xchg
movsl
xor
adc
pop
icebp
outsl
aad
xor
mov
shl
add
test
rcrl
push
jb
push
inc
test
sbbl
sub
sbb
jbe
mov
cwtl
xchg
out
push
push
cmc
and
jne
inc
aaa
pop
xlat
int
add
out
pusha
cmc
into
fmulp
movsl
sub
mov
ss
in
cmp
push
push
inc
insl
test
sub
sub
sbbb
sbb
mov
js
adc
jne
or
jle
outsl
inc
xchg
out
inc
push
js
pop
jl
push
mov
call
cmc
inc
adc
imull
cmp
fnstsw
add
sub
insb
mov
xchg
insl
in
lods
xor
mov
mov
xchg
mov
add
repnz
and
inc
popa
gs
cmp
mov
mov
mov
lock
push
push
lods
lahf
cwtl
leave
aad
stos
adc
dec
mov
add
push
aam
lds
dec
sub
add
and
int
add
mov
pop
pop
sub
cli
jmp
movsb
gs
fdivrs
call
mov
mov
mov
movsb
add
lea
sahf
stc
lods
mov
orl
cwtl
sub
loope
jmp
aad
mov
out
sub
int
pop
dec
repnz
or
mov
js
test
mov
gs
push
bound
rorb
sar
loope
int
enter
fs
outsb
fldl
call
xor
xor
inc
pop
pushf
repz
mov
sbb
lahf
std
jp
mov
loopne
mov
dec
fdivp
add
add
notl
pop
sub
or
frstor
roll
rcrl
subl
add
mov
sbbl
adcl
lods
movsb
sub
sub
jmp
push
fsubr
sub
sbb
xchg
insl
daa
sbb
fisubrl
or
roll
repz
loopne
jge
ret
outsl
aad
adc
inc
sarl
xchg
data16
pushf
dec
and
xor
repnz
xor
out
mov
repz
pusha
clc
dec
or
repnz
int
jno
fs
cmpb
push
iret
sbb
mov
jl
adc
jo
insb
insb
push
mov
or
shl
ljmp
fdivs
xchg
iret
jmp
cmp
loopw
loopne
add
inc
arpl
adc
pop
cmp
bound
das
cmovb
and
mov
mov
sti
imul
dec
xor
fisubrs
inc
mov
mov
shl
popf
sub
adc
fcompl
test
xchg
mov
xorb
test
pop
repz
xor
cmp
pop
ret
les
dec
pop
stc
xchg
lods
orb
lods
sub
sbb
loop
and
cwtl
and
add
fwait
out
outsb
inc
jmp
jg
cld
pop
movsb
fistps
cmp
push
sub
scas
test
mov
xor
fstpt
push
aad
insb
jb
mov
or
lret
xlat
outsb
push
rcrb
test
or
jo
sbb
adc
out
or
jne
pop
popf
jno
jle
pop
add
jnp
filds
inc
or
es
rcr
daa
movsl
or
int
mov
ficoms
cmp
xchg
mov
lahf
or
icebp
iret
pop
mov
mov
inc
fwait
ret
out
inc
call
pop
bound
test
jl
mov
adc
imul
xchg
stc
xchg
pop
lea
dec
lea
cwtl
mov
mov
les
shll
mov
out
mov
mov
xchg
fsubl
push
in
sub
gs
aaa
into
std
jge
jne
mov
mov
dec
lods
idivb
dec
jb
in
movsb
adc
sbb
lds
sbb
lds
in
lea
scas
mov
scas
mov
jle
jns
and
mov
push
dec
or
ja
bound
pop
fs
push
ljmp
ljmp
movsl
sahf
enter
movsl
sub
mov
fistps
out
int
xor
and
sbb
mov
mov
mov
fstp
iret
bound
movsl
out
cmp
xor
xchg
mov
adc
push
flds
shll
add
je
mov
adc
xchg
xchg
cmpsl
imulb
push
fs
clc
ret
xor
mov
jo
inc
bound
js
shlb
ja
stc
clc
adc
push
xchg
jle
xchg
clc
sub
inc
adc
test
pop
xor
sarb
inc
aaa
pop
inc
int3
daa
xor
sub
shrl
lret
sub
add
mov
test
pinsrw
clc
les
jns
cmp
orl
ljmp
adc
stos
xlat
movsl
jne
and
jl
loopne
mov
lret
jmp
xchg
inc
shlb
xchg
and
sbb
lock
out
lahf
nop
push
out
ja
dec
rol
pusha
jns
push
or
pop
js
or
jno
push
je
shl
pop
push
push
push
pop
pop
pop
lea
push
sub
pop
lea
push
pop
push
pop
cmc
push
jae
test
pop
or
nop
inc
dec
clc
add
or
cmc
call
test
stc
add
mov
push
movzbl
cmp
jbe
add
push
or
pop
jp
jge
jno
xchg
cld
cld
loop
pop
nop
push
add
push
pop
pop
push
movzbl
test
jb
push
push
dec
pop
pop
cmc
loop
pop
and
je
push
add
push
pop
push
pop
mov
xchg
xor
push
add
pop
ja
and
ja
jl
or
jns
sub
or
stc
pushl
pop
jno
ja
cmp
push
js
push
or
pop
pop
clc
testl
jne
jmp
push
mov
pop
or
or
rol
push
add
pop
push
push
push
shl
pop
pop
pop
jno
add
push
mov
xor
pop
loop
jecxz
mov
cmp
cmpsl
orl
adc
pop
inc
jne
and
inc
dec
test
cmc
clc
rol
push
mov
push
xchg
movsl
xchg
mov
pop
jle
push
push
add
pop
pop
loop
jecxz
shlb
fs
add
cmp
insb
pop
sbb
inc
insl
sti
sbb
push
popf
sub
pop
cmpsb
xchg
sbb
add
das
lods
and
jp
ret
ja
jns
xor
dec
inc
clc
push
push
pop
add
pop
push
cmp
pop
push
push
ror
pop
pop
jne
jp
push
add
dec
jne
cmc
push
or
pop
push
ja
shl
pop
jnp
jbe
xor
and
loop
jecxz
mov
jns
xchg
mov
cmp
inc
sbb
jb
int3
jp
sbb
inc
xor
cmc
xor
je
loop
jecxz
jo
adc
int
xorb
xchg
mov
leave
xchg
sub
leave
fimull
sub
and
inc
lcall
add
mov
xchg
pop
push
icebp
dec
or
vmovntps
push
dec
lahf
pop
out
in
ficoml
or
cmp
or
push
ret
lcall
bound
cmp
imul
sub
addr16
push
and
jge
xchg
xchg
arpl
dec
stos
aad
jp
shl
mov
mov
inc
call
fbstp
or
push
pop
cmp
loope
adc
xor
je
pop
sub
xor
aas
movsb
push
fcompl
loope
int3
inc
andl
leave
adc
rep
bnd
jecxz
push
inc
popf
lea
jmp
inc
adc
mov
fwait
push
or
cmpsl
jl
hlt
loop
sbb
ret
xor
jp,pt
add
jnp
mov
arpl
inc
sbb
add
dec
xchg
push
sbb
test
adc
sub
jnp
adc
dec
sbb
iret
or
into
cwtl
mov
cmpsb
push
out
cmpsb
dec
adc
xchg
push
and
ja
mov
addb
mov
std
aas
bound
and
rcrb
andb
push
shll
out
push
jmp
daa
lods
mov
repz
cwtl
out
push
xchg
sbb
xor
mov
push
movsb
adc
lock
adc
pop
adc
nop
sbb
imul
xchg
out
or
popa
inc
mov
cmp
push
sti
adc
add
data16
shl
lcall
push
popf
aas
push
inc
inc
in
inc
adc
rcrb
pop
jnp
insb
xchg
cmp
rclb
cmc
aad
shlb
scas
sahf
push
test
xor
inc
mov
jecxz
mov
sbb
stos
aas
aam
comiss
dec
ror
dec
test
cli
and
sbb
aad
pinsrw
mov
test
mov
das
jbe
or
and
ljmp
arpl
pusha
pop
ret
xor
dec
lock
testl
dec
cs
fwait
cmp
cmp
imul
outsl
or
outsb
sbb
scas
in
cli
jnp
shrb
cwtl
inc
push
sub
movsl
adc
or
pop
icebp
mov
aad
lahf
movsb
mov
xchg
int3
clc
pop
and
movsb
insb
jb
test
pop
les
pop
mov
out
mov
addr16
push
outsl
mov
sbb
sub
mov
insl
mov
adc
pop
imul
sub
lcall
aam
das
insl
sbb
inc
in
stos
lcall
dec
sar
iret
dec
insb
pop
jns
fisubrl
setp
cmpsb
cltd
repnz
adc
lock
lret
aad
bound
fcmovbe
sub
pop
sub
in
mov
lds
or
xor
mov
mov
or
jg
cli
xchg
hlt
fdivrl
push
cli
test
cmpb
mov
inc
dec
cmp
pop
push
iret
add
movsb
pop
gs
xchg
out
stos
cld
add
push
pop
cmp
mov
gs
add
pop
aas
lahf
sub
test
inc
loopne
je
xlat
dec
inc
mov
sbb
jno
jmp
arpl
and
dec
lds
fbld
sti
add
jns
sub
sbb
mov
stos
mov
push
out
shl
mov
das
cmpsl
out
cmp
add
push
jmp
cmp
js
ss
scas
outsb
push
and
cmpsb
inc
std
dec
shr
jecxz
lcall
mov
les
je
xor
or
fcmovbe
sbb
dec
jge
jp
ret
push
sbb
dec
sub
out
loopne
sbb
xchg
cmp
orl
mov
mov
ljmp
inc
jno
jno
addr16
es
test
lcall
add
aaa
dec
push
leave
xlat
sahf
out
inc
shll
ja
stc
addr16
add
in
and
fldl
lcall
xchg
xchg
push
fwait
mov
add
sub
xor
movsb
stc
in
push
out
inc
adc
mov
sahf
xchg
jno
mov
mov
lret
and
scas
popa
push
jnp
dec
lock
aaa
jb
mov
adc
in
test
inc
push
scas
int
fildll
outsl
cld
push
pop
push
adc
dec
int
jbe
jnp
xor
sbb
int
cmp
adc
insb
cwtl
mov
mov
adc
sbb
test
cmpsl
xchg
and
js
hlt
push
push
outsb
fs
dec
push
lea
ja
jns
not
jno
xor
lret
jne
xchg
mul
mov
dec
gs
ss
mov
push
or
iret
inc
in
ss
lret
lods
mov
push
sub
sbb
stc
xchg
xlat
mov
sub
push
mov
fwait
or
xchg
adc
fidivrl
mov
add
out
in
dec
xor
popa
in
jge
movsl
adc
xor
pop
sbb
clc
movsl
stos
jb
adc
clc
dec
jp
add
fists
js
sub
and
clc
aad
pop
xchg
fcomps
cmp
push
sbb
push
div
ror
ret
aad
incl
or
add
cs
cmpsl
pop
rolb
call
mov
lods
in
lret
pop
jg
insl
xchg
bound
push
and
scas
push
or
in
push
in
mov
xor
inc
cli
lcall
mov
push
sbb
inc
movsl
push
or
pop
sbb
inc
repz
xorl
ljmp
subl
xchg
ret
fisubrl
in
in
push
jnp
int
icebp
aam
addr16
addr16
sub
adc
mov
mov
movsl
cmpb
or
lock
stc
dec
push
mov
sub
mov
mov
rclb
das
xchg
sub
mov
add
push
adc
roll
stc
fisubrl
dec
movsb
stos
push
pop
lahf
mov
movl
inc
push
in
outsb
je
ret
outsl
gs
imul
hlt
mov
dec
xor
das
mov
mov
sbb
xchg
out
mov
outsb
into
sub
push
mov
enter
push
popa
mov
std
jnp
inc
bound
dec
shlb
test
out
sbb
inc
mov
or
aad
daa
loopne
cld
mov
push
iret
lds
out
mov
xlat
testb
lds
and
inc
out
and
aaa
lea
push
movlps
bound
insl
xchg
ret
push
lds
mov
lods
dec
sbb
push
push
or
out
cmp
mov
dec
cmp
jbe
inc
fcompl
cs
xor
jp
xchg
push
loope
cmp
lret
mov
sbb
aad
daa
xor
movsl
imul
mov
or
movsb
fwait
jbe
dec
jnp
popf
repnz
out
test
shll
jl
fidivs
pop
mov
cltd
mov
lods
out
and
inc
xor
pop
adc
inc
leave
inc
dec
lahf
mov
int3
or
jae
jno
out
mov
sbb
inc
xlat
mov
stos
lret
pop
test
movsl
sub
in
dec
jl
cltd
int3
mov
xor
test
movsl
sub
ja
push
dec
in
xchg
inc
sahf
push
sbb
xor
mov
jnp
xor
gs
add
pop
out
out
dec
movsl
mov
xchg
push
adcl
xchg
dec
popf
enter
lds
or
sti
ljmp
int3
inc
jecxz
test
addb
push
pop
test
push
aaa
jb
or
negl
inc
mov
sahf
test
sub
xor
dec
cmp
sti
fidivs
pop
mov
and
sub
dec
mov
push
mov
jnp
ret
leave
mov
cltd
jns
data16
push
add
xchg
ja
mov
mov
push
adc
outsl
jno
pop
pop
mov
lds
jns
mov
mov
or
and
aam
mov
shrb
jno
or
mov
insl
xchg
xor
pop
dec
add
xchg
or
push
adc
fistpl
pusha
inc
xor
repnz
lods
out
imul
nop
sbb
adc
sbb
adc
sar
popa
sbb
mov
mov
or
xchg
push
scas
imul
out
adcb
ja
outsb
and
pop
sub
and
and
jne
mov
push
inc
or
aaa
outsl
lret
sub
shlb
data16
cmp
xchg
jmp
and
dec
adc
push
mov
mov
or
jp
in
scas
fs
idivl
sub
xchg
mov
out
test
cmp
or
cwtl
and
push
pop
aas
xchg
sbb
pop
je
ud1
sbb
inc
je
mov
add
iret
das
pusha
and
pop
and
jmp
dec
pusha
out
popf
jecxz
lock
sub
mov
lds
scas
pop
imul
mov
mov
lcall
xchg
outsb
test
cmc
xchg
lock
pop
mov
ss
adc
xor
push
mov
mov
pop
adc
push
jp
scas
pop
mov
add
imul
sbb
in
cmpsb
push
mov
bound
cmpsl
fstpl
repnz
les
rcll
push
jp
push
xlat
sub
adc
sbb
lret
loop
testb
stos
jo
jbe
adc
movups
dec
jb
pop
push
out
pop
pop
push
cmp
push
insl
std
popf
xchg
mov
jb
inc
bound
icebp
sub
push
imul
punpckhbw
repz
push
mov
icebp
je
adc
pop
pop
push
call
push
sub
in
add
cmpsb
mov
dec
mov
adc
push
push
pusha
cmp
shrb
dec
inc
stos
and
xor
lcall
fdivrp
mov
fisttps
xor
dec
sub
mov
out
xor
add
sbbb
imul
add
lret
jmp
jecxz
outsb
jl
fstl
clc
insb
xchg
sti
shr
roll
jae
jno
test
pop
mov
dec
mov
insb
mov
popf
js
sbb
sub
leave
mov
jnp
sbb
imul
sub
lods
or
mull
out
mov
cmpsb
ja
in
and
xchg
scas
add
xlat
xor
mov
sbb
stos
clc
shrl
cmp
ja
in
shl
mov
scas
lret
push
push
mov
insb
sbb
jp
repz
push
ja
xor
xchg
sbb
cs
adc
cmp
jae
in
notb
push
inc
pop
inc
fldenv
insb
ret
add
popf
shlb
les
pop
mov
sti
xor
xor
push
loope
cs
jns
sbb
and
lahf
divl
rolb
dec
sbb
or
push
jg
sti
imul
push
jmp
or
mov
out
pusha
out
sbb
icebp
dec
fistpl
sbb
lods
ss
pop
icebp
or
push
movsb
dec
dec
mov
adc
xchg
sti
and
repnz
pop
leave
jnp
inc
xchg
fcmovne
pushf
adc
cmc
icebp
fisttpl
xchg
in
addr16
ret
xor
lods
mov
jno
inc
jne
push
and
scas
fcomps
jne
sub
cmp
push
add
andb
scas
xchg
jo
shlb
and
sub
in
sti
sahf
cmp
add
cmpsl
mov
or
ja
mov
lock
xchg
aam
in
int3
aam
dec
fwait
sbbl
shlb
sti
jge
ss
xchg
mov
je
push
xchg
mov
daa
test
aad
js
iret
adc
inc
sti
xchg
popf
arpl
das
or
mov
ljmp
lods
sti
scas
sub
call
rclb
jmp
arpl
fdiv
mov
mov
jl
mov
std
insl
inc
sub
or
into
in
fiadds
fidivl
hlt
sub
ja
int3
icebp
icebp
mov
shlb
xor
jae
imul
mov
out
or
stc
cwtd
inc
pusha
std
xor
jge
pusha
scas
push
lock
shll
fisttps
ret
arpl
imul
inc
js
cmpsl
jmp
adc
mov
sbb
test
and
mov
cld
adc
test
adc
sbb
mov
and
lret
ficoms
ja
or
dec
out
clc
addb
xchg
ret
add
ljmp
jl
push
jns
jno
inc
inc
dec
mov
cmpsb
test
adc
cmpsb
lcall
adc
or
sahf
add
jecxz
loopne
popa
xor
dec
andl
cmp
cmp
inc
frstor
push
shll
lret
add
data16
mov
insl
xchg
into
daa
into
in
decb
push
push
sbb
cmp
lret
and
push
pop
sti
ficoml
in
mov
pop
icebp
icebp
xchg
adc
jmp
mov
in
xchg
cmp
aaa
jno
dec
movl
adc
stos
xorb
mov
pop
mov
push
jmp
test
mov
jle
mov
mov
fldl2t
dec
in
movsb
js
mov
jle
call
jne
fisubl
sub
jb
pop
mov
dec
mov
aas
cmc
cmp
icebp
test
movsb
push
mov
mov
pop
jb
dec
mov
cmp
rolb
icebp
push
dec
push
cmp
lret
daa
test
idivb
in
add
bound
dec
pop
cltd
aas
xorl
add
add
fbstp
push
pop
std
arpl
lods
mov
sbb
cld
ficomps
dec
inc
sbb
and
in
pop
cmp
jmp
leave
add
jg
dec
mov
xchg
pop
pop
inc
mov
test
adc
sub
push
adcb
jle
xchg
lret
inc
xchg
xlat
sbb
jno
jns
xor
test
jo
loope
jb
ljmp
in
pop
mov
jbe
jp
rep
adc
sub
jmp
cltd
scas
mov
stos
inc
and
mov
ja
add
int
jl
repnz
and
sarl
andl
rcr
cmpsl
movsl
idiv
cmp
xor
push
xor
pop
ss
push
push
and
inc
or
ss
insl
cmp
jge
cmpl
mov
adc
or
ljmp
fimuls
inc
gs
scas
pushf
repz
into
xor
add
aaa
jg
or
cwtl
mov
daa
ljmp
mov
mov
lock
mov
push
ljmp
jb
mov
std
inc
inc
outsb
xor
fidivs
push
lcall
cmpsl
push
xchg
movsl
out
sub
outsl
inc
inc
enter
push
ffreep
pushf
inc
sbb
mov
cmpsb
xor
lea
lcall
xor
lock
jno
sub
cmp
or
xchg
mov
sbb
cli
pop
aad
mov
scas
and
push
rorl
xor
mov
xorl
mov
nop
movsb
int
nopl
ficompl
cmc
mov
push
xchg
aas
aam
cwtl
sbb
jl
jmp
add
popf
lcall
insl
and
jbe
adc
add
shlb
insb
sbb
sahf
aas
cmp
jo
in
sbb
and
jae
int
les
sti
inc
mov
insl
fmulp
lds
pushf
ljmp
dec
jb
popa
or
xor
out
adc
negl
in
cmp
cltd
mov
lcall
sub
or
add
dec
sub
jge
movsb
xor
sbb
sar
mov
mov
mov
or
mov
xchg
mov
dec
mov
in
cmpsl
rcll
sub
sbb
xor
add
ja
push
call
mov
jmp
push
cmp
sbb
sub
jl
jbe
push
push
add
push
shll
xor
push
mov
sahf
pop
fucom
ficoms
int
enter
pop
dec
inc
pop
movsl
inc
xchg
and
sub
xchg
mov
mov
mov
test
outsb
sbb
push
nop
das
decb
xchg
notl
jno
ljmp
mov
out
mov
fildl
mov
fsub
add
fidivs
mov
out
pop
inc
dec
jne
dec
pop
cs
lret
jmp
mov
mov
mov
sbb
inc
lock
leave
and
dec
loopne
xchg
add
imul
jne
mov
lods
rolb
mov
shll
xor
adc
jge
jge
mov
adc
mov
pop
dec
xor
js
mov
cwtl
mov
adc
test
popa
xchg
sbb
bswap
rcrl
jge
sbb
dec
into
or
aam
pop
leave
mov
sti
cmp
cld
das
int
and
push
mov
stos
movsb
push
push
sbb
ss
test
inc
into
shrl
jp
scas
repz
jbe
int3
test
jl
push
jp
ficompl
jl
mov
sub
xor
or
xor
jo
stc
lret
test
sbb
aaa
out
fldenv
fs
xchg
loopne
bound
repnz
xlat
and
int
imul
and
mov
inc
mov
test
inc
lods
imul
mov
and
push
mov
pop
sbb
dec
and
shll
inc
test
call
push
jnp
mov
daa
xor
enter
scas
lea
pushf
mov
mov
imulb
sti
popf
xchg
xlat
cmpsl
mov
sub
icebp
pop
and
fcoml
pop
jl
lods
mov
mov
adc
xcrypt-ofb
cmpsl
sub
jne
aas
cmc
jp
or
leave
cmp
and
and
xchg
in
test
push
imul
mov
call
xchg
in
arpl
push
adc
xor
lcall
ffreep
popa
adcb
add
sub
and
icebp
in
add
hlt
sbb
das
into
push
jle
mov
mov
cmpsl
repz
dec
call
mov
or
imulb
jg
mov
cs
movsb
cmp
or
inc
stos
sub
dec
mov
xchg
pop
lods
push
test
lret
out
fcoms
xor
mov
mov
push
testl
fisubrs
fwait
mov
fwait
gs
test
xor
xor
scas
mov
xchg
mov
inc
dec
pop
push
mov
push
lds
and
mov
adc
aad
iret
dec
out
in
testl
mov
pop
fdivp
jbe
push
cmp
add
aam
cmp
and
mov
enter
mov
mov
push
sub
sbbl
pop
es
out
lds
femms
dec
push
out
add
mov
imul
add
push
sbb
pusha
loop
jmp
dec
push
pop
out
aas
mov
pop
pop
cmp
cmp
jg
jg
inc
add
pop
leave
push
push
push
xchg
xorb
jo
iret
pop
cmp
push
mov
sbb
or
lds
mov
add
clc
stc
dec
shlb
cmp
aaa
xorb
jns
lea
std
into
bound
xchg
arpl
scas
sti
mov
outsl
nop
test
or
sub
daa
lcall
jb
das
scas
addb
push
sub
dec
cmp
adc
arpl
push
push
aad
loope
mov
repnz
ja
inc
cmp
jge
pop
pop
or
lcall
rorb
or
imul
arpl
stos
pop
cmp
out
clc
cwtl
cltd
xchg
lock
adc
pop
sbb
nop
ds
jno
lods
dec
mov
lods
out
js
stos
movsl
test
jmp
push
xlat
jbe
adc
jne
jbe
out
and
daa
test
aaa
rorl
fisttps
mov
lods
stos
stos
repz
movb
fisttpl
mov
sub
inc
mov
add
outsl
stc
sbb
pop
loop
inc
or
sbb
dec
dec
fisubl
push
cmp
fldt
popa
xor
add
aad
pop
cwtl
sbb
jmp
ficoml
jbe
fidivrs
xchg
dec
loopne
testl
jl
mov
decb
rorl
sti
rcrl
test
xor
mov
jmp
imul
xor
ja
inc
shrl
adc
rcr
xor
inc
arpl
and
ja
sub
sub
into
jl
add
daa
mov
cld
stc
mov
mov
shlb
lahf
imul
and
mov
mov
pop
aaa
into
pop
rorb
stos
cltd
mov
lret
fsave
test
shl
jnp
leave
push
mov
pop
or
lods
cmp
pushf
test
cmp
mov
push
lret
scas
in
out
adc
sti
clc
sub
fdivs
fstl
out
add
lahf
icebp
aam
fucomp
pop
cmp
nop
inc
xor
shrb
dec
ficoms
adc
xor
add
stos
xor
add
fisttps
movsb
mov
sub
fwait
ljmp
daa
popa
dec
dec
outsl
xlat
dec
inc
int3
pushf
xchg
push
mov
lea
rorb
push
arpl
ret
aas
adc
push
jle
pop
or
stc
jg
adc
adc
sub
loope
cmp
adc
fs
js
out
mov
out
xor
mov
add
and
mov
sub
orb
pusha
loope
push
xchg
ljmp
jp
lock
fcomp
jo
ds
adc
pusha
fdivl
das
daa
sub
sub
mov
and
mov
jno
mov
push
and
js
sbb
mov
in
aaa
pop
mov
idivl
jmp
out
mov
stos
adc
dec
pop
ja
rclb
imul
pop
ja
insl
lret
jg
xor
imul
xchg
mov
ret
push
mov
repz
cli
in
lea
mov
mov
jmp
popa
sub
mov
pusha
lret
xor
mov
flds
dec
enter
rolb
push
repz
bound
scas
stos
sub
xchg
scas
dec
outsl
leave
sbb
aaa
jae
aas
cli
lock
pop
dec
inc
ret
aaa
cmp
and
fs
mov
pusha
nop
lret
sbb
lret
dec
fcoms
cmp
adcl
es
loop
adc
add
dec
push
dec
jecxz
inc
inc
lret
sbb
dec
mov
movups
adc
pop
repnz
fbstp
and
fisttps
aam
mov
sti
insl
inc
mov
clc
dec
dec
inc
mov
xlat
inc
push
insb
push
add
movsb
push
cli
sbb
lods
cmc
mov
jmp
in
cltd
sbb
dec
xchg
xchg
jmp
inc
mov
jmp
push
popf
mov
adc
jle
mov
and
mov
dec
inc
mov
das
into
mov
or
add
mov
sbb
cli
fisttpl
cmpsb
dec
mov
dec
or
dec
rolb
inc
mov
rorb
in
dec
test
stc
sbb
xchg
inc
lret
jb
aam
ret
cld
shl
outsb
mov
mov
dec
xor
mov
sub
adc
jae
mov
scas
push
add
test
inc
mov
adc
cmp
data16
ffreep
mov
mov
jae
fildll
adc
xor
ret
inc
pusha
aaa
lcall
mov
pop
sbb
gs
enter
icebp
outsb
xchg
mov
sbb
test
xchg
ret
mov
cmpsl
jb
xchg
dec
js
jecxz
int3
xchg
pushf
cwtl
add
test
push
xor
popf
xchg
cmp
lret
in
sbbl
mov
xorb
scas
shll
dec
xchg
cld
or
mov
mov
xchg
shlb
and
xor
es
imul
mov
mov
test
push
jo
sbb
jle
jle
dec
sar
jae
pop
adc
sub
mov
xchg
cmp
and
push
dec
inc
fisubrs
daa
mov
fdivp
pop
ss
dec
out
dec
sbb
andl
sahf
fbstp
sahf
and
int3
mov
popf
fmul
dec
test
in
xchg
and
dec
lods
je
les
inc
repz
jnp
fwait
mov
aam
inc
pop
in
in
mov
scas
sbb
mov
and
jbe
dec
cwtl
jle
cmp
or
scas
andl
lcall
pop
jg
pop
mov
and
xchg
xlat
cmpsl
cltd
int
mov
lcall
mov
lea
lock
sbb
bound
jnp
adc
sub
xchg
aas
cmp
jae
cs
test
jge
es
lcall
pop
inc
fwait
mov
inc
dec
xlat
mov
push
test
incb
sbb
jnp
xchg
dec
cmp
adc
leave
aas
out
lret
jp
xchg
pop
xchg
lret
push
cmp
mov
jno
adc
push
in
inc
inc
add
cltd
jmp
mov
inc
add
ror
daa
mov
mov
mov
sti
movsl
or
mov
add
dec
test
pushf
or
xchg
fs
fsubl
or
sti
mov
mov
mov
pop
jno
and
sub
add
xchg
xor
cs
jae
push
lret
jb
mov
cmpl
mov
addr16
daa
fimuls
insl
lock
test
and
addr16
fistl
jne
mov
sbb
dec
mov
inc
pop
sub
adc
jne
out
xor
sub
jle
cmpsb
in
in
out
sub
cmc
stc
sub
and
insb
lret
rorl
jno
je
cli
cld
mov
jo
fst
loope
or
jns
lcall
scas
cld
cmp
cli
fdivrs
lret
pop
add
iret
lret
add
insl
out
mov
out
jo
pop
adc
push
adc
xlat
mov
adc
iret
lods
fdiv
ds
jb
cs
lea
mov
lahf
cli
and
mov
mov
dec
lret
mov
sbb
shlb
sbb
mov
and
dec
cmp
sub
sub
or
dec
inc
pop
adc
mov
pop
hlt
adc
stos
std
in
mov
cmpsl
add
inc
xlat
fdivrs
insb
dec
sub
dec
fwait
int3
dec
ret
pop
jp
jae
pushf
jb
lods
or
sbb
stos
push
or
mov
nop
idivb
pop
xor
mov
xorl
ficoms
pop
cmp
dec
xor
sarb
pushf
cmpsb
adcl
and
xlat
sbb
push
sbb
jge
adc
clc
stos
add
sub
sbb
mov
fst
or
push
aad
stc
dec
clc
xor
rcr
cmpsb
inc
and
push
push
int
cmp
dec
xlat
pusha
roll
cmpsb
movsb
into
adc
js
and
push
xlat
cltd
jge
arpl
gs
fstpl
popa
jb
dec
into
xchg
fdivl
adc
dec
sbb
mov
stc
jae
fiaddl
aas
cmp
repz
jmp
jns
sub
aas
cmp
xchg
daa
in
cmpb
mov
xor
mov
faddl
into
outsb
cmc
cmpsl
into
push
push
icebp
dec
icebp
sahf
mulb
add
cmp
cs
or
jne
ds
or
cs
das
popa
out
xor
dec
add
fldenv
xchg
lea
xchg
repnz
xchg
lea
add
mov
daa
and
mov
mov
insb
jmp
push
push
cmp
pop
mov
add
jnp
adc
nop
arpl
push
loop
rclb
add
xchg
inc
push
xchg
push
or
sub
xchg
xchg
mov
mov
xor
mov
sbb
xor
jmp
inc
push
pop
rcrl
stc
cmpsl
push
aam
mov
sub
mov
insb
pusha
aas
jbe
or
lock
lcall
adc
push
xlat
imul
call
fstps
out
pop
les
cmpsl
cltd
clc
jmp
add
call
mov
fadds
jns
daa
movsb
or
icebp
outsb
push
roll
jb
loopne
adc
sbbb
xchg
or
mov
cltd
push
bound
fimuls
inc
mov
or
loopne
and
mov
out
add
insb
movsb
icebp
add
out
loop
rcll
cmp
outsl
inc
and
add
sbb
out
adc
lret
cmpb
xchg
mov
pop
push
mov
sbb
cmp
shl
aas
ds
mov
mov
sub
mov
adc
add
stc
test
mov
xchg
pop
inc
or
aad
push
ja
cmp
aad
pushf
lods
cmp
loope
push
jb
jl
fsubrs
aam
nop
ficoms
cmpsb
loop
sti
mov
or
mov
pop
int3
or
fiaddl
xchg
test
mov
inc
or
mov
add
mov
int3
hlt
xchg
rcl
and
cli
adc
sbb
into
sub
loopne
and
int
test
and
mov
dec
icebp
cli
gs
inc
fcomi
rolb
roll
xor
jae
stos
sbb
pop
outsb
mov
mov
std
aam
mov
pop
out
sahf
test
xor
sbb
int3
push
add
and
ficomps
pop
dec
int3
cmpsb
sbb
sub
jo
lahf
xchg
fwait
add
jns
cmc
movsl
mov
adc
sub
mov
stc
idivl
lock
jle
mov
cltd
js
mov
mov
fstps
imul
mov
cwtl
or
inc
xchg
sahf
mov
jbe
add
int3
cmpsl
jbe
lods
inc
mov
push
in
inc
adc
in
jns
pop
pop
rcll
mov
sti
push
imul
cmp
std
jmp
and
jne
mov
stc
lret
int
adc
and
push
dec
iret
and
push
xchg
mov
sahf
enter
pop
fcoms
repz
mov
movsb
xor
mov
bound
sarb
insl
pop
fwait
subl
add
repz
dec
insl
ss
adc
js
fildll
dec
repz
fs
sbb
clc
fwait
in
cmp
sahf
enter
jle
pop
push
inc
mov
iret
dec
push
inc
into
or
dec
mov
subl
pop
inc
stos
inc
inc
xor
fiadds
or
shll
mov
adc
stos
ror
lcall
rclb
jnp
jp
jnp
mov
stos
or
mov
or
adc
adc
inc
add
xchg
stos
jge
daa
insl
mov
test
outsl
mov
mov
mov
inc
es
int
and
notl
std
add
js
popf
adc
mov
pop
leave
sbb
cmp
testl
xchg
test
mov
mov
test
scas
in
dec
cmp
pop
mov
es
fldl
and
sahf
in
shr
jl
push
ret
adc
jbe
adc
aaa
add
mov
in
movsl
sub
inc
std
sub
push
dec
xor
sbb
jmp
popa
jne
flds
pop
pop
ud1
cltd
scas
push
pop
daa
lods
fcoml
mov
loop
fninit
lods
mov
mov
in
fisubs
inc
add
add
jbe
inc
imul
addr16
push
push
out
mov
adc
sahf
outsb
lahf
clc
outsl
dec
push
sbb
adc
daa
mov
jecxz
scas
xor
lock
xchg
lock
and
inc
mov
inc
imul
enter
xor
cmp
scas
xchg
sub
rorb
xor
daa
sbb
mov
mov
call
scas
js
int3
ficompl
mov
cs
jbe
js
in
orb
sub
fmull
ljmp
and
cmp
arpl
inc
stos
pop
imull
and
pop
inc
lods
fdiv
orl
shlb
daa
sarl
inc
push
out
push
lock
mov
rorl
push
lcall
or
stos
lret
repnz
or
fcoms
jp
stos
pushf
jge
aam
xchg
lds
jo
in
scas
div
xor
push
cmp
sbb
cmc
xor
rcll
xchg
arpl
mov
or
lods
mov
int3
js
mov
std
jl
and
scas
cmp
int
cmp
or
xor
adc
movsl
adc
in
jo
stos
mov
sarb
mov
xor
inc
shlb
dec
push
mov
sti
shl
js
jmp
in
out
icebp
cmp
imul
in
dec
sbb
dec
dec
xchg
mov
dec
cmpsb
push
xor
adc
adc
and
jnp,pn
pop
pop
imul
popa
inc
into
test
and
mov
inc
cmp
mov
add
hlt
xchg
pusha
mov
mov
lods
or
xor
stos
movsl
push
sub
push
in
in
ret
dec
jb
cmpsb
movsl
jecxz
into
std
inc
je
addl
in
or
aaa
stos
sub
jle
in
mul
or
loopne
pusha
hlt
or
or
jp
cmc
adc
mov
xchg
shrb
gs
test
les
mov
psubq
cmp
out
lcall
inc
fstl
cld
and
ret
lret
mov
aaa
popf
jb
mov
in
out
dec
cmp
or
pop
mov
inc
mov
imul
repnz
inc
mov
mov
insb
cmp
sub
out
lock
or
jl
mov
pop
stos
stos
ret
xchg
and
mov
aam
sub
pop
clc
movsb
sbb
cs
sbb
add
insl
data16
sbb
repz
out
cmp
test
das
clc
jae
jecxz
lcall
inc
dec
sar
enter
rcll
mov
and
push
scas
cmp
adc
stc
insl
cmp
stc
test
adc
xchg
popf
lcall
and
ja
adc
add
popa
stos
push
hlt
cmpsb
cltd
sub
popf
add
ljmp
shlb
pop
push
cmpsb
jle
fidivrl
mov
fcoml
mov
sahf
test
lea
adc
loop
ja
ss
in
hlt
xor
ljmp
inc
xor
into
cmp
sbb
or
cmc
test
push
add
add
stos
sbb
xchg
fimull
pop
xlat
xlat
jne
movsb
ret
mov
addr16
loop
fadds
sub
mov
scas
jge
les
cmp
addr16
cs
pusha
fldt
loop
mov
mov
pop
daa
add
mov
cmpl
ficomps
test
lahf
push
daa
mov
mov
mov
mov
mov
jne
sbb
aam
dec
xchg
dec
incb
mov
push
cltd
icebp
call
ficoml
pop
addb
pop
les
cmp
mov
cmpsb
shrb
jl
lahf
repz
cs
imul
scas
shl
inc
scas
push
dec
rcrb
out
lock
ljmp
dec
int3
sbb
mov
mov
jle
shll
cwtl
mov
ret
jp
std
push
sahf
dec
popf
pushf
dec
mov
lods
loope
lds
shll
push
inc
and
pushl
or
mov
jnp
test
arpl
cltd
xchg
cmpsb
add
sbb
mov
and
jg
adcl
mov
dec
push
std
dec
lcall
rol
sub
flds
ljmp
pop
push
sub
cmc
dec
arpl
imul
ja
imul
or
sub
inc
loopne
jl
jmp
xor
stos
popa
sub
cmpsb
add
loopne
stos
cmp
cmp
mov
ljmp
ror
fcmovnu
loope
cmp
sub
sub
cwtl
xor
push
jo,pn
sbb
pop
mov
ja
lcall
adc
out
xor
add
adc
aas
pop
les
out
fwait
std
sarl
dec
cmp
ljmp
outsl
shrb
movsl
insb
mov
add
clc
clc
lea
mov
call
sbb
inc
mov
dec
push
dec
into
dec
push
mov
mov
leave
push
orl
lods
nop
jnp
out
pushf
and
jns
xor
mov
leave
fsubrs
insb
std
and
fldenv
test
bound
cmp
xor
in
mov
jo
add
mov
test
push
ret
push
and
or
mov
adc
stos
lret
pop
add
jns
adc
repnz
mov
shlb
inc
push
sub
add
nop
add
xor
cltd
mov
scas
loopne
mov
jne
inc
or
lret
mov
mov
push
popa
ds
mov
orb
data16
push
adcl
push
movsl
jo
fcomps
push
fsubrl
jbe
scas
lea
inc
pop
into
push
jno
cmpsb
imul
jecxz
shll
adc
add
int3
inc
in
sti
sub
sbb
sbb
inc
sub
xlat
dec
out
ljmp
xchg
inc
sbb
jge
xor
xor
in
in
mov
adc
mov
xor
mov
imul
das
mov
dec
xor
jge
add
pushf
pop
inc
pusha
mov
xchg
movsl
addr16
cltd
dec
xchg
adc
test
outsb
jae
dec
sahf
pop
pop
popa
inc
adc
pop
cltd
call
imul
aad
test
inc
bound
xor
or
iret
adc
lods
insl
xor
adc
dec
or
sub
out
dec
push
rorl
mov
mov
cmp
dec
inc
pop
pop
jbe
lcall
pop
xchg
lahf
mov
sub
movsl
scas
mov
dec
and
mov
dec
mov
jbe
ds
aas
pop
sbb
adc
mov
cmp
mov
cwtl
add
push
xchg
shrl
jg
pop
popa
xor
mov
and
push
or
push
and
dec
dec
mov
and
sbb
in
push
cmpsl
in
inc
cwtl
lcall
push
cmp
loopne
lea
imul
repnz
adc
sub
mov
mov
sti
test
aam
xchg
add
leave
push
mov
adc
push
pop
pop
pushf
bound
sub
call
scas
gs
xor
push
lods
cld
mov
xor
xchg
andl
jge
mov
inc
insb
add
or
icebp
xchg
inc
mov
lea
mov
mov
lea
xchg
int3
test
xor
stc
xchg
mov
aam
sub
dec
mov
jo
test
mov
jmp
sbb
fcomps
lahf
in
add
scas
testb
jno
fisttpl
out
pop
adc
jne
mov
out
pop
sarb
adc
dec
xor
sbb
int3
or
add
lret
fisubrs
jb
movl
sbb
incb
lret
lret
jno
push
add
add
jle
dec
outsb
or
inc
dec
jo
dec
insl
adc
int3
shld
movl
mov
xor
insb
jmp
and
pusha
imul
or
xchg
adc
test
and
aas
frstor
pop
push
sbb
dec
clc
aad
mov
push
inc
into
loope
into
test
call
push
and
lods
sub
cwtl
jne
pusha
jo
xor
jl
leave
testl
jo
jo
rorl
js
push
mov
pusha
js
outsl
les
arpl
xor
xchg
mov
sbb
sbb
sub
fwait
xor
stos
cli
add
pop
mov
adc
or
insb
stos
pop
clc
pop
pop
push
dec
fmuls
inc
dec
sub
lock
jl
dec
mov
clc
pop
cmp
xor
addl
jl
negb
mov
inc
jmp
mov
fst
enter
mov
out
mov
jo
push
pop
or
jbe
lcall
xchg
xlat
repnz
aaa
dec
mov
outsl
lea
rclb
call
stos
mov
out
cmp
cli
xor
mov
icebp
push
adc
out
ljmp
push
lds
imul
imul
ss
ds
adc
cmp
movsb
mov
push
xor
rcr
imul
mov
dec
lahf
mov
mov
sbb
outsb
cmp
test
pop
cmpsl
dec
cltd
xor
mov
and
je
mov
or
fcoms
insb
mov
out
sbb
cltd
jp
mov
clc
xchg
repnz
dec
ficomps
inc
jo
pop
add
dec
nop
out
fwait
idivb
cltd
fst
movsb
rorl
mov
cmp
dec
ss
or
stos
lods
inc
into
cs
push
sti
jne
push
mov
test
in
rol
icebp
mov
xchg
cmp
test
jle
andl
mov
adc
lds
xchg
testb
adc
xchg
test
sbb
lock
movsb
sbb
pop
js
int3
jle
jmp
cmp
fsubl
jp
adc
and
mov
or
xchg
ds
fs
rcrl
outsl
push
add
push
and
mov
sub
ret
notb
orb
aad
negl
fsubrl
mov
flds
xchg
inc
and
loopne
test
fcmovne
jo
xor
push
ljmp
push
xor
insl
mov
mov
pop
inc
jns
push
or
dec
out
adc
movsb
popf
dec
lods
cs
leave
mov
sub
mov
out
inc
scas
popa
jmp
push
pop
mov
shr
jl
sub
dec
ret
inc
enter
stc
ss
pop
les
fimuls
push
pop
mov
adc
adc
ja
fcoms
jno
sbb
mov
xor
xchg
and
sbb
jecxz
ss
ror
mov
push
mov
subl
jl
push
jnp
ljmp
cmpsb
in
mov
cwtl
mov
ds
lods
xchg
jnp
hlt
xchg
loope
sarl
jl
loopne
movsl
adc
add
shrb
test
sub
or
out
ljmp
cs
cltd
sbb
icebp
xchg
in
imul
xor
adc
lahf
call
sbb
push
stc
cld
jle
mov
aad
xor
add
inc
mov
mov
mov
je
je
arpl
adc
mov
sub
xor
loopne
and
sub
jb
adc
arpl
adc
lret
je
inc
jne
xchg
inc
adc
adc
sbb
xchg
pusha
xor
stc
mov
scas
stos
stc
mov
scas
imul
xor
or
mov
out
push
fisttpl
xchg
adc
sub
mov
movsb
test
cmp
xlat
sub
mov
cwtl
push
xor
fistpl
dec
cmp
xchg
mov
sbb
leave
out
sbb
mov
push
mov
adc
pop
test
jge
mov
jne
xor
fst
pop
mov
jb
leave
repnz
adc
das
popa
scas
add
mov
inc
scas
sub
test
xor
push
mov
pop
pushf
fmuls
mov
lods
dec
int
mov
cltd
or
push
rorl
and
call
pop
adc
cmpsl
or
ds
pop
hlt
insb
ss
imul
and
les
xchg
scas
scas
loope
fldl
add
icebp
and
in
push
clc
push
push
or
arpl
inc
xchg
dec
push
je
sub
fildl
popl
pop
lock
push
repnz
mov
and
pop
dec
fstl
mov
mov
or
popf
arpl
and
mov
movsb
lock
arpl
or
cmp
pushf
loopne
movsl
xchg
push
jg
jmp
ljmp
xor
loope
push
ss
int3
pushf
jmp
inc
mov
iret
mov
xchg
pop
sti
xchg
mov
cmpsb
or
loop
pop
and
adc
cmp
adc
adc
mov
pop
cmp
stc
xlat
mov
jo
rorb
jo
enter
jne
idivb
js
fisttpl
cmc
xchg
mov
mov
jecxz
and
mov
pop
sbb
scas
mov
adc
loope
jmp
shr
outsl
loope
jns
mov
je
aad
test
inc
pusha
mov
sbb
sti
inc
xor
push
mov
add
or
mov
roll
sub
jns
mov
gs
or
or
push
push
rolb
and
call
shlb
test
movsl
aad
jns
and
inc
push
clc
xchg
scas
mov
fnstsw
out
sub
dec
adc
xor
out
negb
push
loopne
cmp
lcall
sti
or
mov
jmp
notl
adc
clc
test
inc
lret
and
xchg
push
jle
lods
fisubs
xor
xchg
movsb
cli
repnz
and
mov
mov
dec
dec
jmp
dec
xor
lods
int3
or
pop
add
int
out
rcrb
or
add
lock
daa
cmp
add
push
out
jb
push
mov
or
aam
in
cmp
insl
fwait
jnp
xor
test
aad
adc
add
dec
push
leave
mov
dec
lock
scas
dec
fsts
aad
or
kxorb
test
fwait
dec
pop
cmp
rorb
jmp
fcomip
jno
idivb
insl
sbb
sub
pop
mov
addr16
lock
push
subb
nop
and
or
xchg
push
mov
mov
frstor
rcrb
mov
into
cmp
push
dec
adc
movsb
test
pop
pop
xor
popa
add
stos
sub
xlat
rorl
dec
leave
test
xor
aaa
jnp
mov
add
and
aam
add
push
lcall
imul
loope
cs
out
push
mov
pop
clc
cmp
mov
dec
pop
pop
popa
xchg
popa
xchg
shll
sahf
cld
jbe
rcrl
leave
mov
int3
mov
push
fst
xchg
and
mov
mov
out
dec
fwait
mov
adc
rorb
add
mov
lret
shrl
and
adc
clc
sub
adc
sbb
loop
dec
in
and
push
fstpt
sbb
fstpt
mov
fxch
dec
negl
aad
ljmp
cmp
cmc
cmp
fwait
mov
stos
adc
xchg
xchg
hlt
loop
fsubr
jns
cld
add
adc
mov
and
jb
xchg
pop
mov
roll
loopne
add
imul
inc
out
loop
jmp
lahf
sbb
enter
gs
cli
rol
jnp
ds
sbb
push
and
cmp
pushl
jge
mov
mov
fwait
jae
pop
fisttpll
mov
jmp
imul
lods
out
pushf
adc
test
mov
mov
hlt
mov
cld
and
cmpsb
jno
in
sbb
push
rorb
fsubs
cmc
icebp
or
pop
clc
add
pop
cltd
sbb
xorl
fst
mov
int3
mov
jmp
fstl
or
xchg
push
in
mov
test
mov
ret
inc
fwait
nop
movsl
popf
dec
mov
fcmovbe
sar
push
out
cmpsb
adc
daa
jg
push
shr
lock
adc
mov
jo
test
xchg
pop
movsl
sbb
popl
xchg
fcompl
dec
sub
sbb
push
xor
loope
fimull
adc
std
in
int
xor
jecxz
xor
neg
shlb
mov
mov
pop
cmp
push
push
mov
dec
fdivl
inc
in
lret
cmp
lss
daa
aaa
xchg
repnz
inc
pushf
cwtl
cli
lcall
xor
clc
decl
aad
mov
lcall
loope
insl
mov
jb
int3
and
sbb
mov
mov
ljmp
fdivp
mull
push
les
xchg
push
adc
shlb
ljmp
inc
nop
in
pop
adc
sbb
sub
xor
stos
cmp
pop
out
add
dec
cmpsl
xor
sub
mov
sbb
fdiv
push
stos
inc
jg
test
stos
adc
bound
shll
jge
ljmp
mov
jmp
xchg
dec
cmpsl
data16
pop
or
and
mov
cmpsl
mov
movsb
cmpsl
xchg
inc
mov
sbb
sahf
divl
dec
push
mov
adc
pop
cmpsl
sbb
and
lahf
bnd
lock
arpl
and
mov
in
push
push
bound
jnp
or
jecxz
add
mov
adc
out
or
dec
sahf
stc
or
dec
loope
mov
mov
clc
scas
mov
jnp
je
or
das
adc
mov
mov
daa
imul
push
aam
out
fldenv
push
adc
mov
or
jl
mov
lock
push
es
jg
movsl
jae
xor
ret
in
push
inc
int3
jg
xor
fcompl
mov
in
mov
aas
cmpsl
xchg
push
or
xchg
sub
aaa
add
test
out
out
cmp
push
nop
jge
pop
adc
dec
stos
mov
fwait
js
in
out
jl
in
or
inc
xchg
stos
in
lods
push
ja
or
inc
lea
pop
and
scas
out
pop
lds
mov
je
sbb
sahf
cwtl
popf
xchg
adc
insb
out
loopne
push
arpl
gs
in
scas
and
jmp
xchg
adc
mov
rcrl
sbb
test
dec
push
clc
bnd
call
imul
loopne
sub
sahf
mov
call
fs
or
jno
mov
mulb
or
or
dec
and
hlt
add
xchg
cmc
cmp
inc
inc
lods
cld
fisubrl
dec
pop
ss
or
movl
cmp
out
push
pop
inc
dec
and
mov
dec
movsl
pop
aas
lds
inc
outsl
cmc
fadds
pushf
cmp
or
adc
push
shrb
mov
dec
add
icebp
mov
jmp
pop
daa
enter
mov
sarl
xchg
xor
sbb
test
mov
outsb
cmovle
call
lahf
loopne
mov
push
addr16
pop
xor
jp
gs
aaa
outsl
cmp
mov
mov
jns
mov
in
or
mov
int3
dec
xchg
cmp
in
int
es
xchg
jbe
push
xchg
xor
mov
fnstsw
mov
hlt
xchg
cmp
scas
xor
cwtl
imul
repnz
das
pusha
push
push
pop
sub
out
hlt
jl
mov
mov
loop
mov
mov
shlb
cmp
jbe
lock
dec
inc
not
xor
push
cmp
mov
push
ficomps
add
idivl
aaa
ret
xchg
pop
cwtl
data16
add
stos
jnp
lret
cmp
cmp
lds
repz
or
pusha
mov
aaa
jmp
sti
js
dec
lcall
jo
pop
mov
movsl
or
add
fldt
das
adc
add
xor
repnz
in
dec
xor
stc
pop
clc
or
adc
in
dec
cwtl
icebp
sbb
xchg
ret
lret
in
into
dec
aaa
push
out
pop
out
iret
int
xchg
std
push
push
xchg
xlat
or
add
data16
push
pop
test
sub
jns
jecxz
stos
mov
pop
pop
cmpsb
jmp
sahf
add
mov
mov
mov
sti
mov
pushf
cmp
dec
sbbl
cmp
jmp
jns
mov
divps
pop
lods
dec
or
repz
sub
cmpsb
mov
jle
test
aam
mov
mov
pop
dec
rcrb
mov
scas
jnp
sbbl
fldenv
fimull
lret
push
int3
jnp
xchg
adc
aad
nop
fdivr
ja
outsb
outsl
and
add
out
pop
nop
pop
and
mov
popf
xchg
test
pop
in
aaa
pusha
outsl
fnstenv
pop
loope
cli
lret
das
sbb
in
clc
imull
ds
hlt
push
pop
cmp
mov
lock
faddl
ficompl
jp
andb
fdivrl
cli
mov
scas
lds
dec
loope
fimuls
mov
xchg
pop
rclb
add
pop
rolb
cld
and
jnp
fs
jnp
iret
ljmpw
inc
jmp
xor
xor
cld
adc
fdivp
sub
fldt
mov
fdivrl
xor
sbb
mov
sub
cmp
pop
int3
jo
nop
dec
lods
jmp
int
or
mov
mov
fdivrl
rorb
int3
jbe
jae
outsb
push
mov
pop
cmp
cmp
ds
aaa
mov
nop
push
xor
fstpl
and
cmp
push
mov
sbb
sbb
xor
cmp
test
pop
mov
repz
jl
mov
arpl
xor
xchg
xchg
dec
sub
jns
ret
dec
test
xlat
hlt
cli
jae
fwait
lahf
adc
push
lahf
push
arpl
jmp
push
cmpsl
adc
fsub
outsb
outsb
add
mov
jne
decb
dec
and
in
or
addb
clc
leave
jae
pop
xchg
inc
hlt
insb
out
mov
ss
dec
je
imul
cltd
inc
sbb
ja
adc
and
das
adc
sub
add
adcl
jae
test
inc
mov
and
push
icebp
xchg
push
out
mov
lahf
mov
popl
jne
popf
pop
es
mov
push
movsw
sub
jle
dec
daa
mov
push
pop
or
pop
dec
jmp
cmp
test
gs
outsb
cmp
imul
or
dec
ret
dec
adc
xor
jbe
repnz
cwtl
test
ljmp
pushf
sub
fwait
xchg
iret
mov
call
sub
pop
adc
or
dec
es
int
aaa
and
xchg
jmp
fdivrl
add
shl
out
dec
add
sbb
xor
int
movsl
sub
loopne
sbb
push
adc
xor
mov
cli
jne
dec
sbb
dec
stos
pop
dec
imul
mov
hlt
icebp
out
dec
xor
lods
mov
dec
outsl
sbb
shll
not
hlt
insb
jle
adc
xchg
cmp
mov
sub
mov
add
shl
pop
fimull
sbbb
test
loope
lods
hlt
mov
push
ret
cmp
aam
aaa
cmpsl
dec
sub
arpl
pop
jnp
test
pop
dec
sbb
movsb
insl
cmp
inc
and
clc
cltd
test
into
sub
mov
add
icebp
lds
pop
pop
loopne
js
arpl
cmc
sbb
jmp
push
pop
pop
test
iret
push
sub
mov
sub
in
add
sti
dec
jle
xchg
cmp
add
xchg
outsb
mov
jns
movsb
jno
pop
out
aad
js
adc
aas
ja
lods
xor
dec
stc
aas
pop
jp
popf
out
repnz
jbe
xchg
orb
icebp
or
scas
lret
push
ja
gs
adc
mov
jb
gs
cmp
pop
clc
loope
test
sarb
cmp
cmp
xchg
popf
mov
pop
repnz
mov
cli
sahf
dec
push
dec
lcall
addr16
lret
mov
gs
jmp
test
push
jno
adc
in
mov
sub
addr16
jg
movsl
push
push
test
aad
sbb
gs
insb
cmpsl
ljmp
xchg
loopne
enter
je
cld
aaa
pop
in
cmp
sub
cs
fsubs
push
or
push
insb
fs
fldenv
mov
std
mov
imul
sub
imul
jb
ficomps
add
pop
push
jae
pop
adc
insb
mov
adc
cmc
push
lods
add
in
loopne
push
pop
pop
ja
or
int
xchg
call
clc
test
loop
inc
enter
outsb
lret
add
data16
sub
inc
aas
roll
dec
pop
test
clc
and
push
pop
sbb
pop
inc
add
lock
divb
stos
xchg
sti
jae
add
loopne
nop
mov
push
mov
ficoms
push
test
repz
push
and
pop
icebp
push
out
and
insl
pop
dec
mov
cli
adc
push
fisubl
adc
dec
mov
jl
ret
xchg
dec
jle
pushf
pop
cmp
pop
cmp
or
jae
inc
leavew
jne
adc
in
mov
scas
addr16
test
bound
cli
aam
sti
dec
mov
add
sbb
stos
int3
inc
dec
mov
jg
ret
xor
jg
aas
fs
sti
dec
popa
mov
and
hlt
dec
mov
cmpsl
lea
adc
inc
jg
das
inc
repnz
into
mov
sub
in
inc
push
movsl
addr16
sti
inc
rclb
sbb
in
js
jbe
popf
cmpb
add
shr
into
fwait
push
sbb
shl
cld
lds
mov
imul
call
fwait
mov
xchg
adc
jo
add
dec
lahf
sub
add
sti
bound
fistpll
inc
jo
adc
incl
cwtl
dec
aad
xchg
mov
loopne
clc
insl
scas
and
test
pop
mov
cli
push
cmpsl
mov
adc
pop
sub
sbb
xor
jecxz
add
ret
push
jecxz
pushf
pop
mov
lret
cmp
mov
loopne
cmp
push
aas
inc
add
nop
sti
xchg
repz
cwtl
daa
iret
and
mov
es
xlat
bound
mov
jge
adc
loope
cmpsb
lret
jmp
push
es
mov
sbb
mov
xor
insb
roll
adc
jo
jle
and
arpl
xor
insl
movsb
nop
cmpsb
jecxz
push
cmpsb
xor
enter
mov
lret
aam
rorl
add
push
cmp
mov
gs
and
cmc
mov
scas
fsubrl
leave
sub
and
cmpsl
test
stc
jae
add
mulb
push
insl
mov
rorl
and
sarl
sbb
dec
fwait
mov
inc
cmc
out
les
xchg
sbb
pushf
adc
cmp
nop
stos
cmp
ss
loope
ljmp
scas
sub
xor
lds
mov
stos
scas
sub
jae
ja
pop
scas
or
arpl
shrb
mov
push
cmp
mov
mov
jbe
adc
dec
mov
and
xchg
bnd
mov
dec
in
fsubr
and
pop
leave
in
or
add
fsts
xlat
pop
sbb
out
mov
add
mov
fidivrs
add
inc
push
xchg
lock
xor
lahf
add
push
sub
out
cltd
push
pop
cmp
sbb
aam
xchg
xchg
aam
pop
test
add
lret
mov
mov
adc
test
cmpsb
mov
rorb
xor
mov
pop
mov
push
subb
idivl
cmc
stc
cltd
xchg
mov
mov
aam
in
jae
sbb
sub
cld
dec
popf
xor
cmc
and
daa
inc
jge
and
lea
and
int
in
sbb
push
pop
data16
icebp
xlat
movsl
xchg
sub
xor
mov
je
pop
lret
dec
fidivl
dec
mov
scas
lcall
push
xlat
push
xchg
testl
lahf
in
push
repnz
xor
inc
mov
cmp
sub
fisttpl
stos
xchg
int3
xchg
and
push
mov
je
add
ja
xchg
in
xor
jno
sub
fcomip
push
lods
sub
sub
xchg
xor
sbb
push
adc
mov
mov
dec
push
jo
push
out
xor
pop
xchg
push
push
leave
movsb
sub
push
xor
and
vunpcklpd
out
xor
cltd
sub
mov
sbb
xor
add
sahf
mov
adc
rcrl
jp
cli
inc
add
push
sbb
fsts
daa
idiv
jp
andl
mov
sub
out
push
mov
js
rorb
inc
mov
xor
adcb
enter
loopne
sahf
mov
sub
ljmp
dec
jnp
insb
jae
mov
cmp
xor
cmp
leave
or
mov
rorb
xlat
scas
cmp
fdivr
pusha
test
ja
cmc
daa
xchg
sbb
dec
xlat
int3
sub
push
in
xor
add
dec
sub
pop
cmp
cli
jo
jmp
jnp
xchg
cmpsb
outsl
in
rolb
ds
mov
mov
and
and
in
and
hlt
jae
cmp
jle
stos
mov
or
adc
ja
dec
sub
xchg
fists
outsl
pop
or
sub
inc
lods
loopne
or
cmp
enter
mov
out
icebp
xor
push
iret
xor
ds
fsubrs
add
ja,pt
mov
je
imul
std
hlt
jge
dec
shll
loop
inc
int
and
xor
mov
pop
push
mov
out
cli
jmp
mov
movsb
cmp
jle
jmp
mov
les
ret
push
and
or
adc
lods
ds
sub
out
les
xor
bound
mov
sbb
mov
push
mov
imul
decl
fs
mov
scas
or
xchg
data16
ss
xor
pushf
sub
adc
xchg
lret
adcl
sub
test
shlb
pop
sub
fcomip
lods
and
adc
dec
jg
xor
mov
scas
pushf
test
push
jb
mov
inc
out
shlb
addr16
data16
xchg
outsb
pop
lods
ror
scas
out
shr
mov
sub
mov
xor
into
les
fstpl
mov
mov
es
xor
add
dec
cmc
repz
or
fsubrl
cs
incb
mov
not
ljmp
add
jp
dec
ljmp
push
addb
pop
add
mov
or
or
les
fnsave
or
fxch
cmp
repnz
cmp
clc
adc
fstps
popa
out
sub
aad
imul
bound
popa
inc
out
nop
lret
call
adc
imul
or
cli
xor
loopne
leave
jns
pushl
adc
pop
int3
gs
and
and
jl
jno
not
sbb
push
ds
push
mov
push
xchg
int3
mov
je
stos
sbb
insl
and
cld
cmovae
xor
es
cmp
xchg
push
out
pop
xor
mov
sub
jge
mov
dec
inc
jno
hlt
adcl
movsb
out
push
inc
lods
jl
das
or
inc
shrb
fdiv
das
lods
mov
inc
xchg
enter
cs
and
daa
jno
sbb
inc
test
scas
push
push
and
push
xor
and
repnz
call
dec
shlb
into
xchg
mov
stc
inc
ja
push
mov
inc
inc
inc
sub
and
fldenv
sub
inc
sbb
and
adc
inc
xlat
pop
nop
xor
stc
cmpsl
sbb
or
ss
mull
lret
sub
mov
mov
sub
mov
shll
stc
pop
and
pop
jmp
jp
aam
lahf
xor
pusha
mov
jl
xor
popf
scas
push
adc
cli
imul
sahf
adc
aas
outsb
repnz
fimuls
inc
inc
ja
mov
lcall
outsl
icebp
repz
mov
pop
xor
aas
and
xchg
mov
pop
mov
ret
out
mov
adc
faddl
jl
mov
outsl
jnp
mov
int3
xchg
or
shll
loop
cmc
mov
test
cli
fldt
xchg
movl
rcll
pop
sahf
in
sub
jo
add
push
out
orl
add
sbb
sub
xchg
mov
mov
movsb
and
sub
in
mov
jecxz
cmpsb
pop
in
fs
xchg
dec
fnstenv
sbb
loopne
mov
ret
pop
hlt
adc
xor
out
cltd
into
or
imul
xchg
xchg
aaa
jmp
in
inc
pop
outsl
jle
pop
lea
and
mov
in
cli
push
sti
lahf
stc
pop
pop
ljmp
add
pop
sahf
jmp
or
push
add
shrl
or
pop
es
dec
pusha
repnz
incl
xchg
cmpsl
and
cmp
leave
mov
add
stos
dec
dec
add
movsl
aam
test
jg
pusha
add
cs
mov
pop
jecxz
mov
push
in
aam
push
pop
sbb
jnp
leave
loope
inc
into
sub
rol
std
or
cmpsb
sbb
mov
sub
pop
sahf
ficoml
imul
inc
jne
nop
clc
sub
mov
arpl
pop
dec
and
adc
push
cld
xchg
out
mov
xor
xchg
inc
mov
and
fbstp
add
hlt
inc
jle
push
mov
std
fwait
or
std
add
inc
cltd
cmp
cmp
and
cld
aaa
add
addr16
pop
push
les
std
push
test
mov
lret
xor
add
mov
cld
jns
mov
jne
sub
daa
mov
add
pextrw
cltd
mov
lret
fs
pop
dec
stos
pop
cmp
push
sub
in
jae
jg
sub
mov
fcompl
rcrb
ret
mov
int
ljmp
xor
lock
cmp
adc
jne
xchg
jbe
sbb
inc
mov
ja
aad
pop
lahf
out
jo
jns
lods
stos
ret
add
mov
dec
jno
outsb
ljmp
add
xor
aad
sbb
sahf
push
ds
loopne
into
insb
in
rcr
dec
jle
lods
test
and
push
xor
imul
jl
cwtl
int
repz
loope
mov
sub
dec
pop
das
mov
jb
mov
into
cs
adc
mov
adc
sahf
les
mulb
push
orb
scas
xchg
test
add
add
nop
stos
leave
jne
or
inc
jae
add
adc
cmpsl
dec
inc
mull
xchg
addb
iret
mulb
adc
pop
in
mov
push
mov
mov
lea
inc
fs
pop
aas
inc
mov
inc
out
mov
mov
mov
not
xor
shlb
ss
sub
or
cwtl
insl
sbb
or
or
or
mov
pop
cmp
cmp
push
mov
pop
lods
dec
leave
fcmovb
xchg
std
testb
pop
gs
push
adc
es
imul
add
rdtsc
cmpb
arpl
lea
and
iret
mov
aas
xor
pop
mov
cmp
ja
mov
cmp
cmp
orb
xchg
pop
cmc
nop
pop
sbb
in
jle
or
mov
jge
jbe
pop
cld
push
dec
imul
mov
dec
sbb
out
jle
ret
adc
mov
adc
mov
push
or
out
mov
mov
sub
std
roll
lcall
test
stos
and
sar
outsb
inc
sub
xor
sub
jno
rorb
adc
aam
mov
daa
sub
inc
cmp
repz
lods
jge
loope
outsb
sub
dec
push
inc
movsb
mov
insb
jp
pop
xlat
jb
mov
ja
arpl
in
jbe
insl
adc
ljmp
adc
outsl
mov
cltd
mov
add
push
mov
cli
repnz
out
dec
mov
jecxz
pusha
cmp
gs
inc
insb
pop
mov
clc
rsqrtps
fisubl
and
daa
and
cmp
sub
nop
jl
xchg
sub
jae
mov
fs
jne
pushf
push
xor
ds
clc
or
dec
jmp
add
mov
inc
fsubrl
lds
push
lock
aad
js
and
lret
or
lods
mov
sahf
sub
daa
mov
mov
shrb
and
adc
xchg
jne
lret
mov
les
hlt
mov
fstps
sub
ss
sarb
fcmovne
push
add
aas
popf
pop
repz
xchg
jg
outsl
dec
mov
inc
cmpl
push
dec
push
fcoms
mov
js
adc
sbb
inc
loopne
jne
sub
das
xchg
xchg
dec
xchg
ret
ret
mov
lds
inc
push
addl
sti
mov
mov
cmp
mov
clc
imul
jne
outsl
sub
mov
push
xor
xchg
clc
clc
cmpsb
xchg
mov
xchg
mov
into
cmpsb
xor
dec
jge
loopne
inc
inc
push
cld
sbb
jbe
cmp
push
pop
in
push
push
mov
or
call
pop
mov
jecxz
cwtl
stos
jle
pop
adc
movsb
inc
pop
mov
sbb
jle
inc
pop
cltd
sti
or
jle
cmpb
inc
mov
push
mov
icebp
jp
xchg
mull
mov
in
mov
push
clc
cli
ret
bound
pop
movsb
sub
add
mov
cltd
cli
cltd
and
ja
mov
addr16
hlt
aad
jg
pop
movsl
out
sub
push
data16
mov
mov
add
xor
ljmp
daa
imul
or
pop
testl
std
mov
imul
iret
data16
repnz
aaa
imul
pop
sbb
xor
stos
test
jp
xor
jno
mov
and
cmp
dec
inc
push
pop
adc
insb
pop
leave
in
push
mov
xchg
jb
mov
pusha
insl
out
vmread
aam
mov
icebp
mov
jnp
repnz
stos
js
xlat
xor
jae
xchg
sub
jbe
inc
insl
mov
mov
jne
bound
mov
scas
jmp
add
push
pop
pushf
dec
jle
ljmp
xor
mov
sub
and
cmc
cli
or
mov
bound
ficoml
cld
xor
sub
mov
pop
lods
adc
push
add
xor
mov
movl
push
cld
push
mov
pushf
push
sub
out
jge
pop
inc
in
mov
es
sti
ds
loope
clc
mov
add
xor
sbb
xchg
xor
jbe
mov
mov
pop
adc
roll
sbb
repz
icebp
scas
dec
pop
cmpsl
out
mov
icebp
cld
jecxz
int
mov
dec
cmp
sbb
mov
push
adc
sbb
pop
mov
insl
es
cwtl
repz
sti
fidivl
nop
mov
xchg
insl
sbb
jae
mov
lret
test
aaa
pushf
inc
sbb
and
and
lahf
in
in
and
ret
loopne
lret
outsb
jge
jne
inc
in
jmp
dec
rcl
aaa
inc
aas
popf
ds
add
cltd
push
jmp
cmp
mov
enter
and
mov
dec
pop
sbb
andb
jb
push
clc
test
inc
cwtl
enter
or
out
push
insb
dec
lds
mov
fmull
jge
mov
ret
sub
pop
push
jle
jae
fwait
shll
lahf
fidivs
fsubrs
mov
lock
xchg
and
pop
fsubrl
dec
scas
not
or
pusha
lahf
xchg
mov
push
jecxz
push
lds
push
out
or
push
test
inc
cwtl
mov
scas
jb
mov
push
adc
clc
test
pushf
add
inc
jle
out
or
dec
adcl
xor
sub
adc
jp
mov
push
mov
sub
dec
scas
jle
pop
jmp
into
lret
movsl
out
push
aam
push
push
fs
cmpsl
rcl
lret
ljmp
test
cmpsl
sahf
fsubrs
push
mov
mov
hlt
jecxz
gs
pop
lods
daa
mov
inc
lret
mov
mov
aam
lea
push
jmp
es
xor
push
popf
jge
xchg
jge
and
stos
test
cmpsl
mov
jge
dec
cmp
scas
lcall
jmp
cli
inc
in
cmp
icebp
jns
mov
sub
lods
fcmovne
cltd
in
sub
mov
push
ud0
push
push
inc
in
push
push
arpl
and
fcomps
in
pmulhw
or
cmp
daa
loopne
in
repz
adc
xlat
aam
lea
push
dec
jg
adc
lret
lock
rorb
bound
pushf
mov
dec
mov
xchg
std
ds
dec
flds
loopne
mov
mov
in
mov
pop
pop
test
in
subb
imul
pop
dec
push
in
cmp
sbb
mov
lods
lcall
mov
fwait
cmp
and
idivl
sub
push
inc
ficoml
lahf
jp
stos
cltd
push
lds
add
out
mov
cmpsb
iret
filds
mov
mov
and
and
nop
fs
fdivl
incl
mov
cmp
popa
push
adc
int3
cmp
dec
inc
hlt
jmp
cmpsb
gs
into
cs
jge
cmp
pusha
inc
sub
mov
add
sbb
cmp
push
mov
in
adc
ss
hlt
shr
inc
movsl
sbb
sbb
mov
call
xor
xchg
stos
insb
jmp
mov
mov
lret
mov
hlt
repz
cmpsl
movsb
cltd
xor
mov
sahf
pop
les
inc
push
jbe
lods
loop
loopne
roll
je
pop
mov
daa
test
loope
mov
and
jecxz
orb
movsl
push
rcrl
aam
rorb
ljmp
sbb
dec
mov
dec
fists
jl
or
pop
mov
inc
xor
cmc
cmpsl
in
lret
fsubs
cltd
loope
jno
jns
or
mov
clc
dec
sahf
cld
mov
sub
push
aas
or
es
cmp
fstps
imul
add
mov
mov
and
sbb
addb
cmc
xor
dec
sub
mov
aad
push
dec
sarb
mov
les
pop
dec
push
repnz
xchg
rorl
add
mov
adc
fs
xchg
lock
push
fcoms
xchg
and
mov
into
pop
inc
cmp
es
in
mov
popa
push
cmc
jne
sbb
mov
and
hlt
leave
sub
loopne
outsb
out
ficoml
ss
aaa
aas
and
add
int
mov
pushf
inc
and
inc
mov
test
cwtl
mov
or
inc
and
stc
mov
ljmp
sbb
inc
mov
or
push
popf
mov
aas
les
shll
std
sub
cmpsl
repz
jnp
mov
adc
scas
ljmp
ljmp
jns
xor
add
bound
pushf
sub
lcall
andl
and
imul
in
push
lods
or
pop
or
mov
push
dec
call
movsl
aaa
jnp
test
mov
mov
pusha
cmp
test
jno
sbb
dec
iret
hlt
xchg
dec
dec
jnp
ljmp
int
cmp
faddl
sub
cs
dec
ss
gs
jmp
dec
lret
cmp
repnz
and
loope
ret
nop
shll
xlat
mov
add
mov
into
scas
test
ret
add
jo
mov
jne
push
and
test
sub
lcall
xchg
dec
test
sub
pop
mov
mov
jle
xor
xor
fs
xchg
jno
pop
cli
lds
dec
mov
xchg
subb
cmp
dec
inc
lret
scas
out
mov
fcoms
pushl
mov
xchg
adc
and
mov
jecxz
mov
repnz
and
cmp
loopne
imul
cmp
movsl
fsubrp
jge
mov
lret
mov
fsub
push
pop
shr
jns
pop
and
loope
mov
fstl
test
mul
sti
movsb
aad
sahf
mov
shrb
lahf
xorb
cs
imul
jo
sahf
cmpsb
pushf
in
inc
adc
mov
push
ret
fwait
dec
das
push
pop
cmp
mov
push
out
inc
ds
jnp
aad
cld
cs
jp
push
xlat
icebp
pop
mov
mov
xchg
fwait
jae
jne
fsubrp
out
scas
add
cmp
pop
xchg
mov
jb
lods
insb
test
lcall
jge
xchg
mov
ror
lods
adc
in
popa
mov
test
pop
add
add
cmpsb
je
out
push
adc
outsl
cmp
push
cmpl
sub
dec
pop
popa
arpl
into
jg
stc
xor
aam
push
mov
sbb
fldl
sub
pop
fadd
inc
mov
cmp
gs
rorb
insb
and
mov
inc
cwtl
int
jg
sub
push
push
cltd
push
cli
dec
mov
sub
js
mov
or
push
dec
pusha
inc
xor
out
pop
xchg
sarb
int
cmp
lret
cmp
jge
inc
imul
push
mov
or
ja
rcll
sbb
or
mov
addr16
pop
add
xchg
mov
or
mov
pop
inc
jle
popf
mov
mov
xlat
lret
pop
in
jno
xor
stos
les
cmp
sub
pop
push
shl
lock
xchg
outsl
push
in
out
mov
roll
adc
xchg
xchg
or
cld
mov
pop
fdivrl
and
das
cmc
jge
das
out
lock
fsubr
lock
xchg
pushf
imul
xchg
test
add
outsb
jp
cmp
ljmp
shl
mov
pusha
or
mov
sub
mov
add
cmpsl
mov
pop
sbb
jbe
je
sub
pop
out
cmpsw
pop
lds
xchg
scas
movsl
cli
jle
scas
mov
sub
push
adc
cmp
xlat
clc
incl
les
ret
cli
sbb
add
ds
sub
lods
push
cwtl
mov
push
or
in
test
pop
push
lods
mov
rcll
cmpsl
movsl
lock
sbb
inc
outsb
inc
test
outsb
cmpsb
repz
jb
lret
and
mov
mov
mov
and
mov
scas
sub
and
push
jp
jmp
fs
outsb
xchg
add
mov
or
inc
and
mov
xchg
and
pop
fdivrl
mov
dec
sbb
sbb
push
sub
or
fdivrl
mov
xor
add
xchg
aam
aad
or
pusha
sbb
sub
ljmp
outsb
arpl
adc
push
bound
pop
mov
cmc
int3
and
cmpsl
nop
adc
cld
xchg
push
ret
or
xchg
lret
sar
mov
push
icebp
and
loop
adc
jecxz
sub
adc
mov
jno
mov
jmp
test
in
or
test
xchg
mov
xor
je
xchg
jno
cltd
scas
out
pop
pop
xorb
insl
les
mov
lods
je
mov
add
mov
xor
in
imulb
sahf
xchg
mov
add
sbb
xor
adc
clc
push
iret
cmc
adc
and
les
insb
movl
xor
sub
inc
mov
jle
stc
push
call
jo
add
dec
shrb
push
dec
dec
and
das
or
popa
out
inc
jb
imul
shlb
cmp
mov
shrb
add
pop
shlb
stos
stos
push
push
xchg
sbb
les
icebp
sarl
cwtl
sub
xor
mov
pop
mov
lea
les
mov
cmp
adc
sub
fcompl
adc
flds
and
sub
cmp
add
push
hlt
jp
pushf
xchg
iret
cmc
cmpsb
cmpsl
jmp
imul
loop
sub
dec
dec
jns
mov
decb
adc
xlat
imul
lods
faddp
mull
mov
lea
xchg
sub
inc
mov
add
push
out
ds
mov
lods
jmp
mov
les
inc
insl
or
jno
fdivs
sbb
jb
push
pop
push
sub
cmpsb
adc
scas
pop
push
ret
shlb
pop
xor
je
mov
test
in
inc
inc
das
mov
fs
push
push
rdmsr
sub
push
mov
sbb
movsb
fsts
bound
dec
mov
add
mov
fs
nop
mov
mov
ror
pushf
insl
dec
movsl
inc
mov
fsin
test
or
stos
out
adc
pusha
addr16
lods
iret
jmp
cmp
shlb
addr16
rcrl
fwait
lret
xchg
lock
mov
je
or
repz
repz
dec
xor
repz
lds
popa
add
cmp
mov
xchg
test
xchg
dec
dec
sub
push
adc
pusha
in
ret
orps
xlat
pop
std
xor
jo
test
inc
inc
mov
lds
scas
pop
clc
inc
add
sbb
js
test
lahf
and
ss
or
sbb
lahf
dec
jle
std
sahf
jmp
lds
adc
push
sub
fisubrl
loope
scas
pop
push
xchg
pop
in
adc
fidivs
push
mov
clc
loope
inc
xor
insb
mov
dec
sub
fimull
pop
clc
in
dec
stos
in
dec
mov
sub
or
pop
xchg
adc
jecxz
mov
adc
int
mov
loope
xor
jns
mov
roll
sti
imul
inc
aaa
nop
cmpsl
testb
iret
cmp
jl
inc
bound
out
ds
sbb
sarb
insl
lret
into
test
repz
fdiv
inc
mov
mov
sbbl
js
dec
inc
out
stos
out
pop
ret
mov
push
mov
sbb
je
out
push
push
cld
addr16
and
cmp
mov
dec
inc
mov
cmp
push
mov
stc
out
dec
in
xchg
sbb
xchg
inc
cmp
pushf
xchg
mov
inc
outsb
cs
subl
cs
sahf
fdiv
or
insl
and
repnz
cmp
repz
jnp
js
jg
stos
scas
jge
rorl
and
fidivrl
cmpsl
adcb
mov
pop
mov
inc
ja
or
sahf
aam
mov
jne
pushf
movsb
push
or
jnp
js
sahf
mov
mov
jecxz
and
in
lods
pop
add
mov
mov
push
pusha
xchg
insl
out
xlat
ljmp
imul
adc
xor
xchg
cmp
fisttps
imul
lcall
and
lret
scas
cmc
cmc
fs
push
inc
ss
fs
and
call
pop
std
out
into
jp
push
jg
jno
movsl
fdivrl
cld
bnd
jmp
mov
adc
adc
lret
lcall
mov
mov
xor
and
sbb
lcall
outsb
neg
jl
and
repz
pop
aaa
insb
or
adc
enter
lret
daa
aam
pop
xchg
inc
pushf
xchg
outsl
add
sbb
negb
out
adc
lea
ljmp
sbbb
into
sarl
cmp
addr16
mov
dec
stos
dec
rcrl
mov
push
inc
test
pop
shlb
mov
mov
jno
dec
dec
mov
gs
xchg
ds
jmp
push
pop
cvtsd2ss
fdivrp
clc
in
add
call
cmc
pop
jbe
jno
inc
mov
sti
popa
add
sub
and
inc
push
mov
das
mov
ljmp
in
pop
sbb
fiadds
test
insl
je
mov
cmp
test
sbb
dec
xor
cmp
jl
dec
iret
lret
pop
test
rolb
fwait
shlb
les
and
dec
lret
out
div
push
push
mov
push
daa
mov
xchg
xchg
push
stos
cmp
add
sti
mov
fsubs
aam
add
and
stc
rclb
repz
stos
mov
push
orb
jg
mov
or
jo
lahf
dec
cmp
xchg
pop
jg
fildl
pop
push
mov
pusha
fs
mov
and
cmp
push
test
mov
pop
and
aad
orl
mov
loopne
fdivrs
cmp
int
daa
sarb
lds
mov
in
iret
imul
inc
aas
pop
out
fbstp
sub
push
popf
and
es
aad
push
outsl
cld
je
shl
pop
insl
sbb
xor
mov
ja
xchg
dec
and
and
xchg
inc
lock
out
in
or
negb
test
js
negl
pop
and
xchg
fnstenv
jle
add
jp
cs
pop
je
data16
or
int3
aam
cmp
jae
jno
out
sbb
fdivl
scas
fistpll
jle
jbe
pop
mov
hlt
add
in
out
xlat
or
fildl
cmp
push
int3
dec
xchg
jl
ret
jo
cmp
mov
and
sbb
in
out
fisubrs
movsb
dec
cli
insb
lret
in
ds
mov
lret
push
or
push
in
sbb
in
inc
pusha
call
movsb
test
and
mov
mov
das
into
pop
pop
or
lret
xorl
aas
sub
loope
ret
js
dec
jb
or
push
or
mov
sub
push
and
out
push
cmpsl
xor
mov
aaa
out
inc
dec
outsl
leave
imul
insl
fsubl
pop
push
cltd
sub
and
outsb
sub
pop
cmp
sahf
aaa
inc
and
testb
jo
fistpl
mov
les
movsb
repz
adc
mov
lcall
lcall
loop
movsb
inc
icebp
dec
hlt
sbb
lock
cmpsl
lahf
test
mov
repnz
enter
insb
imul
lret
ret
shrb
xor
xchg
movsl
mov
das
pop
xor
decb
sar
movsl
or
jmp
mov
or
cmp
loope
sub
pusha
add
add
add
aam
push
ret
xchg
movl
jns
notb
adc
pop
movsl
inc
insl
push
and
mov
clc
je
hlt
mov
cmpb
mov
and
add
dec
inc
movsl
dec
fcmovnb
mov
dec
in
not
ds
mov
jge
add
xor
ja
fiaddl
xor
imul
imul
xor
loopne
das
arpl
out
imul
cmp
mov
cltd
repnz
rclb
insb
mov
mov
mov
pop
cmp
ljmp
loop
mov
lcall
or
shrl
icebp
in
xor
push
add
rclb
fdiv
cmp
clc
xor
mov
cwtl
sub
rorb
push
jp
adc
inc
iret
out
or
pop
xor
push
ss
mov
jo
mov
iret
imul
add
ficoml
adc
xor
nop
sub
pop
mov
xchg
jle
xchg
sbb
sub
jae
test
cmp
out
nop
shlb
dec
pop
hlt
mov
push
cmpsl
idivb
stos
mov
xor
mov
jg
cmpsb
pop
cli
xchg
test
add
mov
in
cmp
aas
jb
pushf
jae
push
mov
xor
and
xchg
jae
dec
mov
mov
in
xchg
int3
inc
lret
mov
icebp
out
mov
mov
cmc
inc
add
data16
inc
icebp
or
sub
pop
pop
stos
inc
xlat
cld
shll
cmpsl
and
sub
test
or
mov
sbb
clc
or
rcrl
mov
int
jbe
pop
push
push
lret
jb
dec
cmp
jmp
sub
clc
jge
cltd
outsl
jae
in
nop
pop
pop
leave
mov
dec
pop
gs
dec
mov
aas
sub
test
rcrl
loope
dec
shlb
sub
jno
jmp
imul
jl
xchg
cmp
bnd
xor
je
fcoms
dec
cmc
jle
sbb
xchg
push
sub
call
mov
lret
std
scas
cmp
test
cmp
sbb
push
test
dec
mov
sahf
inc
adc
fsub
and
rcr
jbe
mov
and
nop
push
dec
push
dec
leave
push
or
mov
shrb
adc
cmpb
jns
stc
pop
arpl
push
enter
imul
bound
shlb
and
bound
es
cmp
mul
push
xor
stos
sub
push
xor
add
test
test
ds
xchg
mov
push
sbb
xor
shll
js
sub
sub
jmp
dec
ljmp
outsl
fdivrp
out
jmp
fwait
xlat
movsb
dec
dec
mov
ljmp
out
fptan
dec
rcl
in
popf
sbb
xchg
bound
and
pop
cmp
jle
loop
jo
int
mov
jno
fildl
sub
xchg
and
inc
scas
sbb
dec
fldenv
jg
adc
or
adc
jg
pop
dec
sub
xchg
or
sub
mov
addr16
adc
testl
sbb
inc
lahf
xchg
push
scas
mov
mov
loope
inc
je
xor
scas
add
xor
aam
xchg
data16
sbb
pop
mov
cmpsb
push
aam
push
in
repnz
and
xor
out
fimuls
sbb
jl
add
sbb
mov
xchg
adc
pop
std
pop
and
jp
mov
cmpsl
aas
dec
cmp
xor
ret
cmp
imul
mov
mov
mov
js
bound
fldt
mov
xchg
push
adc
test
leave
inc
mov
pop
mov
shr
cwtl
stos
and
push
or
movsl
cmp
cmpsb
mov
dec
inc
lods
fsubrs
sarl
sbb
push
gs
movsb
mov
mov
sbb
dec
std
push
sbb
js
mov
xchg
fsubs
loopne
loopne
pop
out
clc
mov
jge
shrl
test
pop
pop
adc
ret
rep
into
add
stc
es
mov
in
test
sbb
lods
out
es
scas
dec
out
push
lcall
lds
rolb
inc
stos
sub
cmp
xlat
aaa
popf
into
mov
sbb
cli
rcr
jp
dec
xlat
shrb
stos
cmp
inc
shl
leave
jecxz
xchg
dec
ret
jp
add
push
fwait
insb
imul
dec
push
jmp
pop
arpl
mov
lock
leave
gs
mov
jae
sub
movsb
int3
mov
and
mov
adc
jecxz
cmp
jl
mov
sti
and
ljmp
ficomps
test
je
push
or
push
adc
sbb
pop
mov
mov
into
mov
cld
mov
rclb
lret
add
addr16
mov
lods
icebp
push
jb
jbe
push
popa
jbe
subb
and
cs
ret
lahf
subl
xor
mov
jnp
shl
mov
lods
aad
stos
bound
inc
mov
bound
xor
push
jns
sahf
std
add
cmp
scas
cmp
in
inc
sbb
adc
popf
lahf
idivb
adc
inc
sahf
cld
cwtl
out
cltd
shlb
stc
mov
pop
lods
pushf
repnz
sub
sbb
or
mov
orb
leave
jnp
mov
out
dec
dec
push
sub
imul
jno
aaa
sub
dec
cmp
sub
cmp
stc
jmp
jecxz
scas
inc
aam
sub
hlt
das
lret
cld
inc
addr16
popa
mov
subl
sbb
or
into
cmpl
fldl
mov
adc
pop
sub
mov
enter
test
dec
or
lcall
out
cmp
jecxz
mov
cmpsb
sub
imul
add
cld
mov
clc
jo
push
nop
mov
mov
mov
insb
fists
dec
pop
add
mov
sub
mov
xchg
aad
subl
aaa
cmp
dec
ret
xchg
and
cld
rcll
jle
lret
dec
out
subl
or
fwait
pop
sub
test
sarl
lock
sbb
cmp
lock
in
inc
dec
sub
xchg
pop
andl
mov
xchg
and
mov
push
fimuls
mov
pop
sub
hlt
adc
cmc
xlat
and
mov
ret
sbb
ret
arpl
mov
cs
push
add
repnz
aam
jae
fidivs
mov
daa
xor
pop
es
mov
jge
and
in
test
cmp
mov
mov
in
push
lock
jb
aaa
in
pop
jo
push
sub
sbb
jnp
and
push
fimuls
cmp
fdivl
pop
mov
or
add
jo
or
fnsave
mov
scas
loop
cmp
mov
test
fwait
scas
mov
rorb
sti
jb
xor
cld
shlb
xchg
mov
cmp
cmpsl
aad
sbb
and
push
aam
jg
sarb
cmp
dec
push
and
je
pushf
xor
aaa
dec
insb
into
loopne
std
jg
test
and
test
push
mov
sub
ret
fwait
cs
xchg
adc
ja
mov
mov
das
int3
pushf
mov
mov
mov
jo
int3
cmp
push
fsubrs
sub
addb
xor
xchg
xchg
xor
popa
and
es
cli
pop
jne
into
fcmove
repz
imul
push
mov
sbb
repz
xor
fistps
repz
les
jbe
xchg
jae
add
aad
adc
std
ljmp
out
out
sbb
mov
push
cli
std
repz
mov
stc
xor
jmp
je
or
mov
test
dec
mov
mov
es
ds
dec
out
dec
mov
gs
sub
insb
inc
mov
rcll
daa
orb
lock
inc
pop
push
daa
adc
cmpl
mov
stos
or
in
dec
mov
orl
xor
and
shlb
jecxz
fs
int3
xchg
and
sahf
sub
adc
sahf
fimuls
shlb
lcall
fldt
jbe
pushf
in
add
test
test
call
aam
sbb
inc
neg
cmp
dec
test
adc
lret
orl
dec
sbb
sub
mov
out
std
xchg
pop
and
inc
jmp
jp
ret
scas
clc
push
out
stc
movsl
and
xchg
std
cmp
push
std
add
pop
and
jnp
xor
bound
leave
int
adc
lcall
fwait
cltd
jle
fcoms
dec
push
xchg
sub
insl
jp
push
cmp
dec
es
or
fsts
mul
std
jb
sbb
in
stos
call
add
aad
cwtl
mov
lret
push
and
insl
dec
lret
stc
outsl
xor
lea
and
sbb
sahf
arpl
mov
lahf
into
sub
push
cmp
daa
pop
xchg
fistps
in
into
pop
mov
cltd
rcll
add
mov
sarb
les
test
sbb
insl
and
nop
dec
imul
or
mov
sub
nop
xchg
iret
test
fucomi
mov
shlb
mov
jl
add
jbe
or
jl
shlb
lea
divb
or
sti
cwtl
out
ja
add
aaa
pusha
pusha
adc
fisubs
pop
or
sub
cwtl
add
je
hlt
pop
fnstsw
push
push
dec
xchg
sub
lret
pop
jp
cltd
clc
and
add
xchg
mov
and
fadds
and
push
inc
out
aad
xchg
nop
push
and
xlat
test
ret
xor
dec
fldenv
add
out
andl
bound
xor
pop
cmpsb
mov
cltd
push
jae
lods
jbe
jnp
mov
or
addb
mov
fwait
hlt
inc
loop
jne
lods
and
lret
sti
mov
inc
pop
cli
stos
mov
jmp
or
mov
mov
mov
dec
sbb
sub
jnp
push
mov
fldcw
pop
xchg
fs
cmc
call
pop
insl
and
jecxz
test
inc
ret
adc
iret
cld
push
mov
cwtl
sub
popa
dec
les
pop
sbb
add
aam
jle
fsub
idivl
scas
stc
sbb
xchg
scas
sub
int
lock
aam
sahf
bound
or
xchg
pushf
das
mov
push
push
jl
sar
cltd
repz
jo
pop
popa
push
and
dec
and
sub
into
mov
inc
addb
cmp
mov
sbb
out
xchg
out
dec
ret
jns
arpl
test
int3
pop
pop
adc
ret
stos
std
jnp
sbb
xlat
cs
jg
pushf
fnstcw
mov
push
mov
test
pop
mov
aam
in
ja
movsl
adc
movsb
push
pop
jg
je
jne
test
pop
adc
out
sub
cmp
sbb
fcoml
mov
push
insl
je
adc
mov
in
aam
jo
fldt
or
fisubrs
mov
mov
mov
dec
mov
sti
pop
add
insl
imul
in
test
lock
insl
pop
out
sbb
cmp
std
push
jno
insb
or
int
fidivrs
inc
pop
sbb
cmpsb
jae
stc
jne
out
ficomps
adc
ds
pushw
repnz
popa
xor
icebp
out
into
dec
adc
mov
rcll
sbb
mov
cwtl
mov
mov
shll
sahf
mov
mov
mov
mov
pop
cltd
and
xchg
fsub
sbb
mov
pop
out
cmpsl
ds
mov
out
mov
sbb
fsubr
push
inc
adc
sbb
mov
jmp
clc
std
sbb
push
jo
push
ficoms
mov
and
pop
pop
lahf
lea
es
push
and
das
addl
ret
or
push
mov
pop
cwtl
cmc
ja
add
bound
adcb
jns
mov
insb
lods
push
test
loopne
pop
test
sub
jb
adc
mov
adc
cmp
push
test
push
call
ja
addl
sbb
sbb
add
rcl
in
push
stos
lea
pop
dec
inc
cmp
mov
cli
testl
xchg
inc
mov
or
push
mov
leave
cmp
pop
xor
jno
inc
in
ror
lcall
jb
jg
mov
jecxz
insb
int
mov
sub
sarl
sahf
scas
ljmp
jmp
out
jle
leave
mov
sarl
inc
jae
pusha
xchg
jecxz
fdivrs
push
push
ret
xchg
inc
jp
in
repz
repz
in
out
mov
sub
mov
push
pop
inc
pop
xchg
ss
jae
das
jno
ret
xor
push
mov
add
push
pusha
xchg
stc
and
int
decl
pop
leave
in
jae
mov
push
mov
push
adc
cld
mov
sub
div
inc
jbe
adcb
mov
in
insl
mov
or
pop
or
cwtl
fwait
outsl
leave
mov
test
sub
mov
mov
xor
sbb
push
jbe
xchg
inc
cli
dec
xchg
cmp
popa
jno
out
cld
fwait
mov
sbb
xor
loop
add
xchg
lds
add
leave
lret
lods
loopne
inc
or
mov
jg
lahf
ja
and
pusha
lds
lea
mov
mov
les
int3
in
mov
xlat
push
test
out
nop
jp
shll
pop
shrl
jp
xchg
fidivrl
sub
adc
sbb
ret
ljmp
movsl
dec
cmc
xlat
dec
cli
mov
jge
inc
push
sbb
xor
sub
push
lret
mov
pusha
push
shr
mov
inc
or
popa
mov
sbb
in
jb
pusha
and
mov
ljmp
xor
hlt
lret
xchg
out
adc
lods
stos
ds
jmp
cwtl
shrl
mov
je
adc
cmpsl
pusha
pop
fucomp
xchg
mov
or
push
imul
xchg
and
outsb
aad
pushf
adc
ss
jns
adc
sub
mov
adc
cmp
fnstsw
xchg
or
mov
adc
pop
xchg
dec
test
add
hlt
xchg
inc
cmc
sahf
orb
lret
sbb
mov
jge
cmp
dec
shll
pop
in
push
sti
sbbb
xchg
movsb
cmp
mov
daa
push
jecxz
rorb
enter
outsl
push
or
xchg
push
mov
xchg
fstps
cmp
push
mov
cmp
or
jl
stos
rcrl
stos
jmp
repz
das
or
js
pop
pop
cmp
in
sbb
jp
mov
shrb
loopne
xchg
sahf
mov
negb
xchg
lods
mov
sbb
and
mov
jbe
popf
shll
push
or
cli
pushf
or
push
jbe
push
in
aam
dec
ljmp
mov
sbb
jl
les
cs
shlb
out
sub
pop
mov
mov
scas
je
mov
adc
popl
xchg
ljmp
jo
push
lds
lret
or
out
sub
jne
js
cmc
repz
imul
shufps
clc
dec
leave
adc
push
test
cmp
mov
pop
nop
mov
rclb
adc
jmp
dec
ss
mov
popl
outsl
add
gs
mov
adc
add
fcomps
xor
jns
mov
sbb
pop
push
jmp
sub
or
loopne
js
or
mov
in
push
push
inc
fcoml
dec
or
pop
loopne
cmp
test
pop
mov
sub
es
mov
rcll
cli
popf
push
mov
sub
mov
cs
popl
insb
jecxz
insl
and
aam
mov
jmp
pop
aam
subb
or
outsb
sarl
test
cmp
adc
cwtl
and
lea
data16
push
adc
movsl
jns
incb
adc
sub
test
xchg
ficompl
jae
push
fwait
mov
push
mov
xor
jge
fsts
xlat
ja
mov
pusha
pop
test
mov
popf
jecxz
cmpb
popf
dec
bound
popa
push
fsubp
lahf
sub
add
sbb
adc
popa
jae
pop
addb
sub
push
xchg
jno
xchg
imulb
cmp
jmp
js
add
jecxz
mov
and
dec
out
push
push
xor
aad
or
mov
mov
enter
ret
ds
test
loopne
fcmovbe
fwait
mov
adc
pop
call
add
xor
xchg
push
leave
mov
fbld
out
outsb
iret
jne
and
leave
out
mov
andl
mov
fmuls
pop
les
mov
ljmp
push
test
outsl
sbb
das
xor
jecxz
mov
adc
xor
int3
out
out
jmp
or
sbb
inc
push
ds
lahf
sahf
aas
lret
hlt
xchg
and
jae
pop
mov
outsl
decb
call
sub
xlat
out
mov
cli
movsl
dec
cmp
jmp
or
and
sbb
xchg
pop
sahf
push
ret
hlt
or
sahf
xchg
addr16
imul
jp
popf
cs
ljmp
imul
sarb
jo
xchg
mov
ja
repnz
imul
mov
xor
pop
int
fisubrs
jge
mov
sbb
repnz
outsl
aaa
leave
pop
lea
aas
outsl
dec
adc
std
cmpsl
pop
push
jae
pop
and
test
orl
pushf
imul
fnstcw
push
mov
outsl
jo
jge
cmc
mov
addl
fprem1
clc
mov
out
push
mov
dec
int
lods
xor
push
jg
loope
inc
lcall
jne
adc
stos
xor
mov
sbb
pop
lods
jge
lret
mov
sbb
jo
xchg
icebp
pop
lods
shrb
and
loope
in
cmp
cmp
mov
lds
arpl
dec
xlat
fnstsw
int
jae
xchg
sbb
movsb
and
imulb
or
sbb
out
nop
subl
mov
les
js
sbb
pushf
test
in
ret
lock
test
xchg
insb
mov
jnp
rolb
push
mov
cmp
push
sub
lock
mov
push
jns
data16
mov
xchg
mov
fcomps
push
scas
push
xchg
out
push
add
lods
pop
mov
roll
pop
push
jmp
call
ret
jmp
shrb
sub
sub
data16
test
pop
popa
aas
pop
mov
inc
dec
adc
adc
sbb
push
mov
push
outsb
aam
pop
push
push
rclb
inc
aad
xor
cs
push
inc
fwait
push
shr
xchg
pop
outsb
cmp
stos
repnz
outsl
out
outsl
jecxz
xchg
mov
pop
jne
sub
pop
xchg
ret
jnp
mov
xor
add
or
xchg
lret
clc
jecxz
mov
loopne
shll
jnp
cmc
inc
lret
inc
dec
sbb
fidivs
mov
rcrl
sbb
add
out
mov
jmp
pop
push
cltd
sbb
push
pusha
mov
push
gs
add
les
mov
std
mov
cmp
jno
addr16
adc
dec
std
negb
xchg
lcall
push
pop
in
ja
aad
jns
mov
ds
test
xorb
or
mov
mov
out
mov
stc
cmp
out
mov
scas
mov
jg
das
movsl
mov
mov
neg
scas
call
inc
dec
lds
adc
fisttpl
lea
int3
outsl
enter
inc
shr
push
add
jp
movsb
insl
mov
imul
mov
mov
pop
adc
popf
push
and
pop
jbe
imul
addr16
pusha
push
sub
xchg
ret
mov
or
fidivrs
xor
jecxz
cmp
dec
push
sub
testb
popf
andl
bound
nop
leave
pop
ja
sub
cld
movsl
cli
cmp
in
mov
push
test
test
shr
xchg
pop
mov
aas
and
les
fcoms
in
rcll
orb
in
jno
mov
dec
dec
xor
in
dec
cmp
and
cmp
outsb
aaa
les
xlat
ficompl
scas
inc
imul
xor
ret
cld
push
xchg
test
pop
out
hlt
mov
int
sub
cmp
add
ja
jle,pn
lret
outsb
jl
pop
pop
lmsw
iret
cmp
mov
adc
xchg
inc
or
shrb
rcl
std
xchg
mov
push
scas
ljmp
idivb
cmc
dec
jo
push
jne
mov
jecxz
in
push
sbb
inc
cld
pop
pop
subb
and
and
aaa
or
shl
ret
xchg
lcall
add
sbbl
ss
sbb
out
jl
xor
popa
mov
sbb
dec
xchg
je
mov
jmp
out
aaa
pandn
add
xor
andb
loop
push
push
lods
jg
ret
sbb
cltd
dec
ss
ljmp
push
pop
inc
adc
es
mov
push
out
sub
movsl
popf
js
cmp
test
mov
mov
inc
jne
xor
movsl
dec
xor
mov
lcall
jns
cltd
dec
outsb
movsb
jl
mov
in
sbb
lret
pusha
int3
popf
mov
rolb
xorb
sbb
shlb
xchg
in
pop
movsl
outsb
xchg
mov
pop
or
js
cmp
ret
test
adc
sub
and
in
loopne
cs
lods
xchg
test
or
je
in
mov
addl
jmp
jo,pn
mov
add
jle
cmp
push
dec
adc
in
cwtl
dec
cmpb
dec
push
mov
or
fdivs
jne
add
push
sbb
pop
je
sar
jno
stc
jne
mov
les
shrb
push
xchg
sub
ss
lock
sbb
sti
adc
inc
inc
test
iret
test
lret
stos
xchg
jmp
jbe
std
rcll
push
xor
jle
sbb
in
jl
xchg
pushf
dec
jo
sub
shrb
sbb
xchg
xor
imul
pop
loopne
pop
add
add
mov
fcmovb
lret
cld
adc
fmull
add
mov
orl
jmp
jae
lcall
out
or
sub
pop
ljmp
fwait
and
pinsrw
mov
cmpsb
sub
das
push
scas
sub
push
notb
imul
jae
popf
xor
test
mov
xchg
inc
imul
add
mov
jmp
and
mov
test
mov
test
xchg
mov
test
inc
inc
aas
pop
jmp
pop
cmpsl
clc
int
std
xlat
lock
movsb
lahf
or
xor
popl
jmp
push
das
adc
jg
dec
sti
mov
mov
pop
xor
sub
iret
jle
es
test
scas
inc
loop
adc
ret
aam
dec
sub
mov
jle
in
cmp
mov
cmp
inc
xchg
inc
xchg
sub
movsl
js
ror
jne
dec
jle
adc
pushf
lea
xor
jnp
mov
push
mov
xor
push
jmp
jmp
cmpsb
bound
pop
insl
faddp
adc
daa
mov
ss
sahf
jge
adcl
xchg
push
enter
mov
xchg
jecxz
push
insl
mov
repnz
fwait
sbb
xchg
bswap
pusha
in
adc
loop
push
outsb
jmp
adc
test
stc
aam
and
push
dec
xor
inc
add
addb
repz
aam
jns
outsl
mov
out
xor
rolb
cli
cwtl
sub
scas
ja
loope
cs
sbb
fcoml
das
popf
lds
scas
pop
cmp
push
lahf
fildll
es
adc
mov
jo
mov
gs
inc
loop
daa
test
dec
fs
jmp
lret
dec
dec
dec
sahf
movsb
daa
movsb
pop
repz
test
add
outsb
and
jecxz
fnstsw
mov
and
sbb
daa
jnp
out
mov
jbe
and
mov
and
push
jmp
cli
mov
push
dec
not
or
movsl
cmp
in
sbb
shlb
outsb
xor
int
mov
es
xor
fprem1
loope
enter
xor
xchg
xchg
sub
pushl
stos
mov
lret
lods
mov
int
or
push
xor
xor
mov
jae
stc
add
push
dec
inc
dec
or
pop
mov
shlb
idiv
add
stos
dec
push
lahf
jnp
scas
cmp
jge
sub
shll
inc
jnp
jp
sarl
push
icebp
or
je
mov
mov
pop
jle
loopne
sarl
lret
es
lret
hlt
imul
adc
fwait
pop
add
dec
push
push
ljmp
jo
mov
dec
adc
mov
mov
cmpsb
pop
test
push
cmpsb
mov
ret
sub
gs
mov
pop
mov
mov
mov
movsl
mov
push
leave
xor
adc
mov
loopne
mov
sbbb
pop
dec
cmpsb
jmp
into
xchg
xchg
pop
adc
inc
shll
mov
pop
mov
fidivs
dec
jecxz
int3
out
pop
movsb
mov
data16
adc
xlat
test
dec
loopne
inc
fsubl
loopne
aas
cld
loop
std
xsaveopt
or
ljmp
adc
add
add
add
mov
adcl
test
lahf
sbb
out
pop
lods
mov
pop
cmp
test
inc
aas
leave
mov
jmp
popa
xchg
add
lea
inc
inc
xchg
sbb
jl
sbb
pop
cmp
aam
dec
insb
xchg
mov
movsb
shll
xor
dec
mov
arpl
jne
in
add
dec
shlb
lock
xchg
mov
ficomps
cmpsb
fdivrl
pop
pop
or
out
cltd
sub
jnp
rcl
int3
call
aas
mov
or
hlt
in
arpl
adc
mov
or
pop
int
push
fmuls
push
in
push
andb
fidivrl
rorb
xchg
cmp
dec
cltd
jge
xor
dec
nop
movsl
jl
stc
in
xchg
sbb
test
cmpsl
ss
cmp
mov
sub
lea
bound
stos
inc
cmp
and
mov
mov
cwtd
fiaddl
and
aam
mov
loope
bound
stos
inc
aas
push
iret
dec
cmp
cli
fcomps
orl
pop
rclb
add
cld
xchg
js
repz
rol
aam
out
push
xchg
aam
jg
mov
inc
cmp
pop
fidivrs
divl
outsl
mov
cmc
sbb
icebp
mov
aad
and
and
pop
aam
in
addr16
ljmp
mov
or
int
or
movl
rol
jmp
ljmp
inc
or
nop
jge
cmp
push
movsl
pop
xor
lcall
inc
call
cmp
daa
movsl
mov
mov
lods
aaa
and
cmp
shll
xchg
dec
clc
mov
je
neg
daa
inc
and
sbb
adc
repnz
mov
cltd
int
lret
orl
aam
inc
inc
fbstp
add
jl
sub
push
pop
xlat
adc
push
stos
jl
sbb
jns
bound
xchg
jnp
loop
aas
add
mov
fisubs
mov
lcall
ret
in
loope
jl
popa
mov
push
out
xor
pop
pop
jl
jl
inc
lcall
mov
pusha
in
jnp
iret
cmp
cmpsl
stc
outsb
push
sarb
or
jo
das
sub
add
inc
scas
es
cmp
mov
orl
sar
sbb
stos
loop
cmp
mov
sub
cs
sti
movsl
dec
push
cmpl
xchg
aas
in
and
in
mov
repnz
out
inc
hlt
xor
push
clc
push
adc
shrb
add
leave
fwait
mov
pop
and
ja
and
imul
sub
out
scas
pop
and
mov
push
fwait
outsl
cmp
sarb
mov
into
movsb
loope
ds
scas
dec
sbb
xchg
stc
inc
test
cmp
jmp
test
push
adc
scas
pop
scas
lcallw
aad
divb
push
lret
xor
jb
inc
mov
subl
mov
cmp
scas
pop
aas
mov
add
out
ds
push
mov
movsb
pop
mov
add
popa
jns
sub
push
pop
imulb
inc
mov
orl
aam
sti
mov
mov
pop
cmpsl
push
fimuls
and
rolb
or
cmpsl
repz
jp
andb
inc
test
inc
shll
addr16
fimull
je
fsubrs
js
adc
add
shl
popa
loop
sub
jo
xchg
mov
inc
ja
aas
das
mov
cmp
push
aad
sahf
inc
cld
xchg
sbb
push
jbe
mov
mov
pushf
hlt
mulb
fsubs
pop
jp
xchg
sbb
lock
sbb
or
ss
adc
lret
test
add
pop
and
xchg
pop
int
push
ss
les
lcall
imul
and
pop
xchg
mov
mov
fstl
mov
lea
sti
arpl
lock
adc
or
or
adc
shlb
jnp
or
mov
test
fidivl
xchg
pop
push
fwait
imul
push
enter
mov
out
or
daa
mov
pushf
in
xor
dec
mov
mov
or
hlt
insb
or
dec
mov
lods
insl
gs
call
mov
jecxz
aam
dec
mov
add
arpl
shl
jno
dec
nop
addr16
stos
ss
jecxz
shl
pop
lahf
out
jge
xchg
dec
sub
adcl
dec
jno
pusha
and
mov
jg
mov
rclb
hlt
not
or
fisubs
inc
and
dec
or
xchg
lea
inc
jg
inc
fldcw
or
cmp
pop
jge
sti
flds
cmp
stc
jnp
call
pop
jl
mov
dec
dec
cmp
addb
pop
push
mov
aas
ja
mov
fsubrl
cmp
inc
cs
out
gs
adc
loop
jge
sbb
and
xchg
xchg
adc
or
cli
mov
lahf
call
and
popf
jbe
xchg
sti
jmp
cmp
pop
mov
jb
mov
ret
xchg
cmp
outsb
inc
jbe
mov
cmp
jbe
lahf
jg
mov
rolb
out
cmp
inc
jl
mov
repnz
xchg
xor
aam
or
cmc
mov
fnstcw
movl
lcall
lcall
cwtl
mov
scas
xchg
pop
fnstcw
adc
or
lea
ljmp
aaa
aas
mov
bound
sbb
dec
shl
inc
inc
cmc
clc
mov
push
inc
xlat
or
addr16
jecxz
push
add
mov
and
add
xor
sub
fs
ficomps
sahf
lds
adc
aam
push
clc
add
push
mov
sbb
and
add
xchg
gs
sbb
xlat
mov
inc
icebp
lds
test
sbb
aam
push
mov
adc
inc
fwait
stc
scas
mov
pop
daa
xchg
andl
and
add
stc
push
je
xchg
daa
and
hlt
sbb
aaa
mov
outsl
aad
nop
dec
adc
cmc
arpl
push
xor
and
xor
popa
pushf
loope
pop
dec
sbb
shll
cmp
dec
mov
mov
lret
fisubl
pop
jmp
in
xchg
repz
ljmp
jne
lea
xchg
decb
neg
push
std
in
or
aad
shlb
mov
fdivrs
incb
push
pop
mov
inc
or
add
nop
dec
sahf
dec
mov
or
frstor
int3
mov
adc
lock
sub
sub
mov
fcomps
jae
icebp
ljmp
add
insl
hlt
mov
push
mov
jmp
push
sub
or
je
hlt
arpl
je
nop
push
push
pop
outsl
fiaddl
jmp
or
sti
mov
mov
adc
mov
in
int
and
xor
jmp
xchg
or
jne
xchg
xchg
inc
ljmp
aas
jnp
pop
and
pop
pushf
outsl
inc
pop
jg
pop
cwtl
push
sbb
push
lahf
repnz
cltd
lcall
in
test
inc
adc
and
jmp
inc
or
adc
mov
and
out
inc
pop
add
addr16
int3
or
add
jns
push
dec
pop
pop
dec
das
inc
fmuls
and
dec
sti
adc
inc
ret
cmp
popf
gs
jne
scas
outsb
cwtl
rcl
push
lret
shrb
push
test
lret
filds
fldl
test
pop
mov
mov
sub
lea
ja
sub
int3
stc
xor
mov
sbb
in
clc
inc
adc
fisubrl
xchg
inc
or
sbb
dec
dec
mov
or
test
jb
in
inc
xchg
or
push
mov
mov
mov
or
cmp
stos
lods
jns
ja
add
int
inc
sbb
dec
push
add
icebp
dec
outsb
je
inc
mov
dec
ret
sub
nop
mov
fs
movsl
xchg
sbb
int3
inc
and
ret
dec
and
jl
loopne
xor
mov
fnstenv
in
fiadds
jmp
std
dec
movsl
add
lock
or
jb
repz
fimull
les
mov
push
inc
push
sahf
xor
flds
test
scas
fwait
xorl
inc
sub
sbb
inc
cmp
mov
add
sti
pop
aam
mov
sbb
outsl
adc
je
es
dec
dec
mov
pop
dec
in
pop
incb
les
adc
push
jo
cmpsb
repz
cltd
js
arpl
pop
sbb
cmp
or
cmp
fistl
mov
addr16
fldcw
inc
push
sub
mov
loopne
push
cmp
cmp
mov
dec
dec
scas
pop
push
mov
dec
test
pop
mov
in
pop
fs
push
push
inc
je
xchg
pop
shrb
mov
lret
mov
mov
inc
dec
cld
sbb
and
or
popa
inc
push
das
out
cmp
test
aas
or
aaa
das
push
sbb
in
push
mov
pop
shlb
data16
cmp
sti
push
mov
bound
adc
out
test
stos
xor
addr16
adc
es
add
cmp
sub
mov
cmp
xor
repnz
in
mov
out
sbb
aaa
jne
ja
adc
or
scas
andl
cmp
mov
add
jo
add
rol
xchg
xchg
mov
jmp
add
adc
les
xchg
sahf
jns
mov
das
lock
adc
or
push
cmp
dec
pop
out
sub
insb
incl
popf
loop
or
pop
out
arpl
iret
mov
pop
xor
aam
mulb
pop
pop
in
cmc
pop
in
pop
bound
cmpb
dec
je
mov
sahf
jne
std
int
xchg
popf
mov
pushl
xor
and
rcrl
test
les
arpl
daa
jg
sub
xchg
mov
pop
mov
lcall
ret
in
lahf
sub
fistps
or
movsb
add
mov
mov
mov
shr
jne
jb
sbb
push
daa
cmp
cmp
std
xchg
leave
mov
xorb
and
mov
outsl
movsl
adc
jle
lcall
sahf
dec
icebp
gs
ret
xchg
movsl
xor
in
jle
cmp
xchg
xchg
push
loope
cmp
sub
adcl
cmp
xor
cmp
jo,pt
push
cmp
lods
pop
lret
mov
gs
sarb
sbb
cwtl
cmp
fistps
push
cmpsb
xor
push
mov
pop
movsb
andb
aam
inc
mov
mov
into
jl
jmp
in
out
sbb
stc
pop
or
and
mov
into
adc
pop
push
scas
or
cmp
push
scas
inc
ror
pop
sub
jo
mov
fdivrl
aas
das
imul
or
cmp
adc
loope
or
xor
pop
jne
lds
sbb
outsb
rcrb
or
dec
mov
push
push
repnz
arpl
xor
adc
outsb
pop
shlb
jne
aaa
jle
and
mov
mov
lods
std
sub
pop
dec
pop
imul
jno
outsl
out
xor
adc
dec
ljmp
mov
mov
fistpll
xor
rolb
mov
mov
in
push
adc
mov
mov
mov
shlb
push
in
ja
shr
int
push
pop
add
xchg
push
stos
and
daa
lock
mov
fwait
or
xchg
fstps
lock
cmpb
mov
pop
push
adc
mov
fisubs
aas
sbb
xchg
js
pop
xchg
pop
sbb
mov
in
add
imul
jb
push
das
mov
and
in
iret
mov
nop
gs
cmp
fyl2xp1
xor
push
das
sbb
iret
sbb
add
icebp
push
add
fisttpll
push
or
repz
adc
adc
sbb
mov
adc
mov
push
clc
shll
loopne
jb
cwtl
push
adc
jns
repz
and
push
mov
popa
fwait
ljmp
arpl
repz
cmp
pusha
add
fwait
or
push
subb
mov
loop
fidivrl
sbb
aam
testb
pop
into
cmp
pusha
int
lret
iret
in
cwtl
push
mov
aad
xchg
mov
out
sarb
arpl
xor
ret
lea
mov
push
mov
sbb
test
cmp
sub
adc
gs
js
pop
xchg
aad
sub
xchg
push
dec
cwtl
jl
inc
out
popf
inc
sar
mov
rcrl
aad
or
scas
push
mov
xchg
icebp
out
push
aaa
mov
jbe
mov
push
outsl
add
pop
sahf
mov
iret
mov
testb
enter
push
clc
jp
repz
jmp
sub
lock
adc
add
push
inc
mov
movsl
or
in
sub
add
cmp
loop
add
das
push
scas
es
aad
pop
xchg
mov
sub
lahf
adc
jge
pop
lds
ja
mov
fldcw
sbb
ret
fs
xor
sahf
out
popf
add
inc
hlt
mov
addr16
fs
in
cmp
mov
dec
sub
adc
movsl
and
ja
xchg
jp
xchg
in
ja
xor
jo
push
jo
les
add
sti
mov
inc
pusha
cmpb
rep
push
imul
inc
leave
les
sub
push
je
jo
out
sbb
lea
sub
aaa
add
adc
mov
inc
stos
icebp
test
popf
dec
jo
shrl
adc
jne
outsb
call
push
jle
cmp
xchg
mov
fsubs
push
out
xor
cmp
test
adcb
cld
call
sub
shlb
cmp
mov
into
inc
pop
sti
enter
sti
sbb
mov
push
or
gs
faddl
lds
cmc
hlt
push
mul
xchg
clc
mov
xor
mov
stos
add
cmp
rolb
stos
cmpb
sbb
arpl
insl
rcll
mov
and
into
movsl
pushf
lock
fsubrl
cmp
addr16
push
push
dec
pop
lods
cmc
sbb
imul
faddl
xor
test
jbe
add
mov
test
xchg
aaa
mov
mov
fiadds
sbb
int
jne
std
sbb
lret
repnz
mov
out
std
sub
jle
std
xor
das
sub
or
mov
or
adc
jp
icebp
push
out
out
xchg
mov
lock
dec
adc
mov
pop
lcall
add
xchg
daa
data16
cmp
enter
icebp
lods
cmp
or
inc
mov
mov
repz
pop
xchg
xchg
dec
scas
pop
ja
cwtl
fistl
dec
pusha
cmpsl
sbb
ja
mov
cli
adc
lods
lret
es
loop
inc
les
jb
outsl
out
mov
sub
jns
scas
add
add
or
pop
dec
mov
pop
add
mov
jne
ret
push
in
in
lcall
jnp
sti
fs
adc
fmul
push
test
push
shr
stc
lahf
lret
lock
les
fcomps
mov
aaa
xor
les
out
incb
dec
or
and
xchg
sarl
fildl
push
fsubp
adc
and
fidivrs
mov
negl
hlt
adc
sub
fildll
cld
push
dec
pop
add
adc
stc
test
loope
js
scas
jo
cmp
daa
and
ss
cmp
dec
jne
fisttpll
dec
mov
jge
mov
fldt
int
push
mov
imul
leave
and
arpl
adc
jl
into
bound
adc
jle
fdivl
out
nop
jecxz
pop
bnd
sub
jmp
or
pop
xchg
inc
in
push
movsb
dec
mov
gs
and
aad
fstpl
lret
or
jnp
push
mov
rcr
mov
test
xchg
lods
sti
sti
int3
subb
pop
jns
int3
cmpsb
cmpsl
and
bound
in
pop
out
cmp
pop
or
sbb
xchg
jb
bound
ja
xor
adc
pusha
xchg
in
and
dec
jns
cli
std
ror
sar
jge
adc
fwait
adc
jne
sbb
adc
movsb
out
insl
pop
inc
adc
or
mov
les
pop
xor
sub
push
jmp
lcall
cli
add
pop
jno
lret
jns
jmp
or
and
pop
icebp
adc
add
es
mov
out
out
dec
mov
push
stos
cmc
push
es
jp
scas
divb
push
popa
lods
and
push
je
adc
mov
or
inc
jbe
bound
cmp
imul
xchg
out
into
cltd
ret
loope
loop
push
popa
sahf
out
push
leave
or
sbb
lods
leave
xor
gs
je
scas
push
or
or
xchg
and
mov
imul
hlt
ljmp
push
bound
dec
sbb
mov
add
inc
mov
mov
adc
adc
push
lds
sub
addr16
cld
pop
sbb
test
sbb
leave
movb
pop
and
fwait
into
scas
cmp
mov
out
inc
lcall
mov
loop
fwait
jmp
fistpll
aas
jns
sub
cmc
loop
andb
sub
jecxz
rcrb
outsb
sbb
push
dec
mov
cmp
movsb
nop
outsl
push
insb
xchg
scas
mov
stos
pop
les
mov
cmp
jmp
movsb
imul
ret
scas
mov
dec
mov
or
clc
dec
into
stos
mov
pop
cmp
filds
cmpsb
repnz
fldenv
sahf
mov
andb
push
mov
faddl
call
sub
sub
mov
jb
mov
mov
cmp
pop
dec
fwait
mov
flds
adc
jg
mov
or
jne
mov
cwtl
push
fdivrl
loope
and
or
add
dec
xor
bnd
mov
xchg
mov
xor
mov
cmp
jg
aam
inc
int3
mov
test
in
data16
jbe
nop
pop
sub
sub
ljmp
outsb
or
xlat
or
adc
mov
out
pop
push
in
cmp
mov
push
xchg
loop
xchg
inc
les
add
rorl
mov
mov
adc
fnstenv
mov
loop
std
inc
bound
xlat
out
and
add
repnz
out
imul
cmc
mov
dec
popf
mov
xchg
leave
adc
insb
out
hlt
mov
pop
iret
inc
addr16
imul
mov
xchg
incl
cmc
sub
mov
jge
dec
inc
mov
sub
jecxz
out
scas
cld
lods
lret
or
outsb
cmp
and
insb
jp
insb
dec
sbb
bound
xor
xchg
insl
mov
xchg
test
aaa
pop
mov
aaa
cmp
fisubl
inc
insb
mov
cmp
out
setge
fs
pop
sub
xchg
pop
mov
mov
std
in
sti
dec
xchg
sbb
sub
xchg
mov
ljmp
add
dec
mov
das
loope
ficoms
pop
push
cmp
popf
adc
add
adc
stos
out
arpl
jae
lcall
jmp
hlt
pusha
test
cmpb
mov
jne
add
mov
test
lret
das
mov
leave
out
push
aad
pop
jp
cmc
jl
mov
cltd
push
dec
add
mov
jnp
xchg
sub
sub
sbb
das
sbb
cmp
lret
rclb
xor
sti
push
push
insb
pop
dec
cltd
add
jno
mov
push
xchg
and
lods
lahf
push
inc
pop
into
jge
fidivrs
out
sti
mov
clc
jmp
adc
sar
dec
mov
add
std
sti
adc
lods
mov
rorb
inc
out
add
sarl
jmp
cmpsl
mov
aam
bound
xchg
iret
sbb
fistpl
test
sub
cmp
popl
and
dec
cmp
dec
dec
sbb
push
sbb
push
mov
push
aam
mov
ret
hlt
jno
sarb
mull
push
jmp
jl
ss
movsb
mov
in
aad
push
lds
cld
inc
arpl
adc
sub
out
and
inc
call
in
pop
lea
xchg
subl
ss
test
les
aam
ds
mov
push
add
push
cmp
adc
xor
lods
popa
mov
inc
insb
adc
or
dec
fstpt
nop
in
and
aad
or
js
cmp
ret
mov
addb
fadds
push
mov
push
dec
mov
ja
cs
shll
mov
xor
in
sbb
add
adc
cmpsb
xchg
test
pop
mov
jno
mov
cs
sbb
sti
or
test
push
adc
push
mov
pop
ljmp
lret
lods
dec
sbb
nop
movsb
mov
fndisi(8087
punpckhbw
loopne
nop
pop
repz
mov
pop
sbb
adc
sub
pusha
xchg
mov
arpl
mov
stc
push
xchg
xchg
hlt
out
je
cmp
pop
pop
aaa
or
xchg
cmpsl
int3
xor
hlt
jbe
pop
push
sti
mov
cmc
jmp
mov
std
xor
mov
les
lahf
mov
es
add
jl
push
push
mov
inc
xchg
inc
sbb
sub
lret
insl
jmp
test
insl
pop
stc
mov
jns
inc
xchg
or
fs
sbb
out
jae
dec
dec
lahf
inc
sub
cld
repz
mov
sbb
sarl
adc
sub
call
mov
in
dec
sahf
or
cmc
rol
mov
xor
into
out
cs
xor
imul
test
xchg
adc
jecxz
xchg
pop
lds
pushf
push
xor
test
das
mov
subb
and
pusha
cld
lods
mov
ficompl
xor
sar
imul
cmpsb
or
jg
jle
lret
shlb
mov
sbb
xor
rol
jge
sahf
xor
or
iret
add
jmp
cmpsl
fdiv
add
push
das
sub
xchg
pop
lds
or
or
loopne
call
cmc
bound
push
pushf
in
xlat
and
in
add
sbb
fists
lods
mov
incb
cmp
pop
sub
jl
adc
adc
push
adc
test
leave
enter
mov
and
pushl
scas
cmpsl
repz
arpl
notl
shll
loope
cmpsl
std
out
jp
fdivrs
nop
mov
test
mov
or
jge
jmp
cmpl
call
add
fldenv
outsb
loop
addr16
mov
js
jb
lret
imulb
or
shlb
loopne
insl
fcoml
ljmp
cmp
sub
rol
and
xchg
add
dec
cmp
das
bsf
add
adc
daa
fdivp
sbb
adc
insl
out
mov
or
add
sub
mov
scas
lock
movsb
pmulhuw
mov
in
sbb
daa
sbb
ja
cmpsb
mov
jo
inc
out
fcos
push
xor
adc
cmpsl
jmp
mov
jle
or
pop
notb
xor
cltd
xchg
std
lahf
cmp
mov
das
and
addr16
mulb
aam
fs
mov
and
movsl
adc
in
loope
clc
popf
push
fcomps
push
add
cmp
stos
sub
add
inc
jne
enter
incb
popa
jge
into
pop
dec
push
mov
mov
push
sarb
es
aaa
adc
int
cwtl
cs
jle
xlat
inc
ret
push
mov
lea
push
lahf
dec
fnstenv
jl
mov
inc
mov
inc
imul
imulb
inc
pop
cmpsb
aaa
cmp
xchg
insl
inc
sbb
mov
mov
fimull
adc
mov
add
stos
adc
fidivrs
pop
movsl
movntq
out
dec
jno
aam
dec
daa
pop
sbb
dec
sub
or
mov
xchg
add
jnp
ud2
fstpt
xchg
jg
loope
int3
out
lock
push
push
aad
divl
push
loope
mov
aam
rorb
push
out
xor
jecxz
pop
dec
rolb
mov
xchg
push
jmp
imull
in
push
pop
cli
inc
sub
loop
lahf
lods
cmp
pop
fistps
sahf
dec
cmpsb
repnz
push
test
inc
clc
jmp
mov
ss
and
lcall
rclb
dec
jno
xchg
sub
data16
adc
mov
fs
ficoms
push
nop
inc
cli
insl
cmpsl
leave
pop
jmp
cli
mov
xlat
rorb
lea
rcr
jg
ljmp
int3
mov
mov
sbb
inc
xor
jle
jnp
inc
xchg
xchg
xchg
arpl
lret
mov
push
sahf
mov
pushf
mov
mov
imul
daa
cmp
push
push
dec
pop
rorl
mov
in
xor
inc
roll
dec
mov
divl
in
inc
leave
cmpsb
jle
cmp
and
cmpsl
in
adc
pushf
lods
fmul
pop
cmp
dec
lcall
and
mov
pop
rclb
dec
dec
mov
sub
shl
decl
or
sbb
stc
jg
add
shl
jg
ss
ljmp
testb
add
aad
imul
lahf
pop
nop
cmp
divb
and
xchg
fcomi
int
add
cmpl
xor
imul
std
shrb
push
pop
std
je
lods
sub
rcr
mov
push
aam
fst
shrb
aad
js
xor
addr16
pop
pop
pop
sbb
in
xchg
imul
push
ret
ficoms
cli
sbb
arpl
adc
sub
mov
sbb
andb
mov
mov
in
push
movsl
jnp
sbb
push
dec
mov
test
lock
xchg
stos
les
adc
out
jbe
sbb
arpl
mov
mov
sub
bnd
fwait
and
cmpl
and
pusha
sbb
and
push
inc
jo
mov
lods
mov
test
and
cmp
add
and
or
cmpb
outsb
dec
mov
inc
sbb
movsb
or
pop
lods
pop
rcrb
mov
push
mov
pop
xchg
cltd
daa
test
insl
fwait
mov
xor
xchg
int3
loop
out
subl
mov
call
stos
sarl
xchg
jle
fcoms
ss
ret
divl
daa
jmp
push
mov
repnz
loopne
mov
movsb
insl
les
jnp
je
pop
stos
shlb
mov
mov
mov
mov
mov
mov
js
imul
fnsave
xchg
jae
xchg
testl
test
rcrb
sub
jle
repnz
popf
or
sub
out
addr16
xchg
popf
insb
push
fsubrl
xchg
mov
push
lock
out
mov
inc
adc
mov
push
rcl
or
dec
out
pop
push
aaa
sbb
push
out
jns
int3
sbb
cmpsl
enter
lea
adc
mov
test
xorb
mov
pushf
inc
push
xor
and
sahf
jbe
jns
les
pop
leave
mov
mov
push
std
or
out
jbe
mov
pushl
in
dec
nop
xor
and
xchg
push
mov
mov
pop
hlt
mov
or
dec
aas
pop
stc
rcll
in
cmp
out
int
jp
adc
push
jnp
popf
out
out
sub
mov
cmp
sahf
in
xlat
xchg
push
sbb
movsb
pop
push
out
xor
mov
jae
mov
ret
fists
pop
mov
lret
add
mov
mov
and
pusha
in
xchg
inc
lcall
xchg
adc
mov
sbb
dec
daa
leave
mov
cmpsl
adc
out
sub
ficompl
daa
int
ficompl
xchg
inc
xlat
cmpb
jbe
xor
jbe
and
jnp
repz
mov
clc
or
scas
imul
xor
jmp
dec
push
sahf
ds
and
int3
pop
cmc
mov
into
jb
popa
xchg
jnp
call
lret
jae
cmpsl
sbb
int
popf
das
mov
lcall
movsb
push
cmpsl
dec
outsl
mov
push
pop
dec
int3
dec
jp
push
inc
jmp
mov
leave
sbb
aaa
mov
out
lock
aaa
cmp
lcall
mov
xlat
push
hlt
mov
cmp
jmp
cmc
int
in
add
dec
jg
mov
inc
data16
mov
xchg
aad
mov
mov
out
dec
imul
push
inc
mov
cmp
ljmp
inc
add
aaa
jno
dec
insb
pop
push
popf
add
xchg
pop
nop
push
xlat
pop
pop
int3
in
and
sub
mov
pop
xchg
inc
cmp
mov
aaa
sub
mov
bnd
dec
pop
sub
mov
jb
jb
adcl
mov
pop
sub
pop
int
pusha
dec
jno
int
or
cmp
xlat
xchg
fidivl
sub
and
mov
lret
loope
adc
cld
sti
and
pop
fndisi(8087
outsb
cli
jo
pop
mov
mov
push
inc
icebp
rclb
sarl
dec
sahf
int3
and
push
mov
jp
lock
imul
cltd
repnz
inc
dec
jmp
cs
mov
and
loopne
xchg
vunpckhpd
js
loop
push
xchg
push
pop
in
add
ret
in
sbb
in
lock
or
sahf
cmpsb
inc
mov
out
xor
lock
and
lea
std
orl
daa
xlat
push
stos
hlt
jecxz
movsb
jl
cltd
xlat
jbe
imul
pop
loopne
or
cmpsl
addr16
adc
fwait
mov
or
push
xor
adc
popl
adc
xchg
andl
push
add
icebp
inc
fwait
je
test
jbe
cmp
xchg
lea
sub
out
aam
or
sbb
xor
or
dec
cmp
jne
push
fnstenv
mulb
clc
lods
out
pop
mov
rorb
aam
jp
lods
mov
xorb
xor
jne
cmpsl
xor
or
popw
pop
lahf
adc
sbb
jb
addr16
rorb
icebp
loop
mov
pop
test
or
in
in
cmpsb
pop
cmp
loope
ds
filds
sub
add
testl
ret
stos
or
xor
lods
push
pop
fisttpl
sub
in
mov
cmp
aaa
push
arpl
mov
xchg
mov
cmp
and
fidivrl
lea
adc
cmp
or
out
inc
and
out
dec
and
jp
add
aad
aad
xchg
or
add
mov
mov
mov
or
mov
das
ja
pop
fs
adc
dec
lcall
push
mov
in
sub
cmpsb
out
push
push
dec
sub
mov
fs
ret
iret
mov
stos
popa
mov
inc
or
jae
pop
loop
loopne
push
jle
dec
loopne
aad
arpl
cli
push
mov
ret
jl
cmpsl
movsb
dec
out
cs
mov
pop
aas
loope
adcb
fcomps
outsb
pushf
dec
xchg
jecxz
adcb
test
insl
scas
pusha
dec
xor
sbb
push
shrb
pop
lret
lods
add
out
mov
mov
mov
stos
aam
in
sbb
popf
or
shrl
popa
stos
lret
add
adc
mov
inc
mov
stos
dec
xchg
daa
or
outsb
xchg
mov
adc
sbb
cli
or
adc
xor
in
add
dec
cmp
or
pop
adc
pop
cltd
xchg
mov
cmp
pop
fdivl
cs
adc
mull
dec
dec
and
mov
ja
out
sub
or
and
enter
je
fldenv
dec
fmuls
push
sub
popf
mov
mov
xchg
sarl
inc
pop
add
cmpsb
pop
xchg
mov
lret
insb
sbbl
sbb
cmp
inc
in
dec
std
insb
arpl
adc
dec
scas
aaa
and
mov
scas
xchg
mov
test
sbb
bound
lahf
pop
cwtl
push
in
push
pop
out
mov
imull
pushl
add
lods
inc
pop
adc
movsl
in
repz
inc
pop
mov
je
sub
jns
cs
mov
jmp
jno
into
xchg
jecxz
inc
clc
bound
xlat
adc
in
pop
pop
mov
mov
sub
cmp
inc
xlat
push
add
pushl
xor
lods
cmp
pop
testl
sahf
lcall
xchg
cld
adc
jge
push
outsl
dec
xchg
inc
cli
pop
mov
cmp
int
in
loopne
xlat
lahf
mov
inc
mov
lahf
jns
inc
pop
push
mov
jge
fwait
lods
dec
clc
xchg
ds
push
add
fbld
rcl
cmp
and
xor
enter
pop
mov
aam
mov
add
cmpsl
jecxz
sbb
inc
push
inc
jnp
ret
leave
mov
loopne
jae
fiadds
add
add
test
inc
in
xchg
movsl
add
mov
or
lcall
fcomps
push
int3
dec
push
into
lahf
jbe
ror
jp
out
call
cli
movsl
jno
cmpsl
cmp
inc
jbe
mov
aad
jl
inc
or
push
xor
test
sbb
mov
sti
pop
lock
dec
loopne
inc
add
inc
push
testl
mov
lods
xor
mov
stos
scas
adc
leave
and
add
cmp
sbb
das
scas
movsb
stos
cmp
lret
in
scas
int
sar
sub
andb
sbb
and
push
outsb
pop
out
jb
mov
sub
cmc
loopne
mov
movsb
movb
jb
jb
jmp
cmp
sub
adc
dec
cs
inc
fisubrs
nop
push
jb
sti
push
leave
xchg
testb
add
popa
int
xchg
adc
dec
mov
jne
shlb
pushf
in
xchg
push
and
cmpsb
xor
mov
fidivrs
int3
sbb
fidivl
sub
fldt
adcb
cwtl
inc
lds
xor
lds
dec
test
fists
mov
pop
stc
les
cmpsl
pusha
iret
test
mov
dec
lcall
lahf
adc
xlat
lods
ja
xor
fldcw
fst
cmp
sub
adc
push
sti
xor
fs
xchg
js
jo
xor
mov
daa
mov
mov
mov
ljmp
push
push
iret
mov
fsubs
arpl
aad
jno
je
nop
push
add
push
push
call
mov
add
enter
add
ja
das
movsl
adc
gs
jmp
xchg
loope
int3
icebp
inc
stc
xchg
inc
cmp
stc
jl
sub
in
jl
add
outsb
mov
ja
mov
arpl
sub
add
ror
xor
dec
mov
xchg
cmp
dec
and
jecxz
dec
inc
repz
add
and
jg
jle
mov
loop
testl
cmp
lds
mov
add
ss
fcoml
push
rdtsc
shrb
push
clc
fwait
jne
push
rcll
ret
jno
aam
notl
xchg
mov
jl
inc
sbb
mov
dec
fs
sbb
mov
cmpsb
adc
ret
add
adc
pop
jle
je
xchg
incl
sub
add
cmp
addr16
pop
push
andb
negl
pop
inc
mov
mulb
addr16
bound
push
xor
mov
mov
fs
dec
add
push
mov
sbb
push
enter
sbb
fs
shrl
and
popa
mov
stos
aas
pop
jmp
ret
jle
les
sub
cmp
enter
ret
repz
xor
inc
mov
xchg
lds
daa
repnz
imul
fnsave
lea
loopne
jbe
jle
inc
filds
mov
sbb
repnz
lds
mov
nop
sub
adc
lahf
jno
cmp
orl
jmp
adc
fdivr
aad
imul
and
and
and
and
int3
testl
lods
mov
es
xor
in
stos
inc
mov
adc
in
lret
add
pop
pop
xchg
jmp
test
mov
jnp
add
or
int
fidivrs
test
push
sub
scas
jmp
mov
jecxz
cmpb
pop
sbb
jbe
jg
insl
dec
cli
inc
adc
stc
ss
sti
enter
aad
in
cld
cmp
lods
insb
pop
jle
jl
mov
mov
push
lock
mov
mov
cmc
add
mov
push
in
icebp
sbb
fs
ds
mov
test
lea
daa
mov
jb
clc
or
push
and
sarl
mov
jno
out
dec
pop
or
pop
pop
jns
lods
sbb
pop
sub
jge
dec
push
imul
shll
out
test
ror
lods
test
dec
push
and
inc
orb
lahf
int3
out
push
fmull
push
rcll
mov
and
jecxz
mov
jmp
cmc
fistpl
xor
enter
sti
ret
fistpl
pop
adc
mov
xchg
adc
adc
mov
adcl
pop
rcpps
and
jb
mov
aad
movd
lock
dec
mov
pop
negb
dec
sbb
inc
aaa
mov
mov
int3
ret
fmull
xchg
inc
or
pop
jno
sbb
or
xchg
push
inc
mov
inc
sub
sbb
aas
pop
inc
jns
pop
xor
mov
add
xor
inc
enter
inc
adc
mov
dec
repz
xchg
push
dec
sub
int
push
mov
mov
popa
mov
test
pop
and
loope
iret
dec
mov
xor
push
scas
cmp
mov
movsl
mov
roll
mov
test
ljmp
xchg
sbb
sub
sub
jb
inc
xchg
add
inc
mov
mov
mov
mov
test
imul
int
cmpsb
stos
mov
lods
pop
hlt
and
cmp
sbbb
xor
jge
mov
push
push
cltd
ret
xor
ss
fcompl
addr16
repz
inc
mov
xchg
add
push
add
sub
jb
into
mov
add
sub
aas
cmp
mov
mov
outsb
jo
rcrb
push
xor
push
aam
ret
pushl
push
mov
imull
mov
out
popf
xor
fisubrl
imul
or
jne
push
dec
scas
bound
stos
and
and
lds
adc
insb
mov
sbb
cwtl
dec
ret
mov
cmpsb
lahf
and
repz
xor
jb
int
jl
sub
pop
xor
jne
repnz
jmp
or
or
movsl
cs
xchg
or
hlt
sahf
dec
and
insl
cmp
add
xor
in
jp
mov
sbb
lret
jle
xor
or
out
mov
adc
inc
sti
cmc
adc
ret
stos
pop
add
dec
cmp
ss
sbb
mov
test
xchg
xor
and
popf
mov
insl
adc
xor
xor
outsb
pushl
bound
inc
sbb
ss
or
jb
push
movsl
or
xchg
jae
cmpsl
dec
iret
jge
lock
inc
jl
mov
xorb
iret
xor
dec
and
out
sub
leave
lahf
push
into
hlt
push
pop
scas
fucom
xor
nop
and
div
arpl
mov
adc
jge
push
scas
ds
mov
fldl2t
jae
mov
fbld
test
adc
and
pop
push
rorb
dec
sub
push
mov
lcall
cmp
rcll
cld
dec
repz
inc
mov
mov
pop
testl
mov
fwait
lods
insb
addr16
inc
ljmp
cs
inc
fnstsw
and
dec
push
xchg
mov
mov
push
sti
ficoms
shr
stos
push
adc
lret
sti
xchg
xchg
insl
out
stos
mov
rcrl
xchg
jp
inc
and
in
xchg
aaa
adc
nop
inc
negl
enter
out
subl
push
xchg
adc
mov
push
cmp
mov
sub
dec
lds
test
lock
mov
enter
or
test
sbbl
inc
aaa
aad
mov
fildll
jge
popfw
ljmp
adc
xchg
testb
xchg
and
push
sub
into
sbb
jge
xchg
imul
sbb
and
inc
repnz
inc
ret
outsb
lock
movsl
int
push
cli
in
roll
push
pop
push
lods
pushf
jmp
push
adc
je
xchg
enter
xchg
pop
mov
out
mov
add
add
mov
push
loop
jge
sub
mov
xchg
push
aam
enter
lods
and
fcmovbe
jbe
subl
and
mov
ss
sahf
sub
xlat
jne
xor
sbb
mov
fld
adc
mov
cltd
xchg
xlat
mov
rcrl
std
jbe
pop
pop
jecxz
in
xchg
xchg
stc
jno
mov
hlt
adc
or
pop
cmpsb
dec
cmp
mov
push
add
fcmovne
or
jle
xor
pushf
into
jle
pop
enter
jecxz
or
ud0
mov
neg
leave
into
sub
notb
das
test
out
ret
cmc
fidivl
stc
leave
test
repz
or
movsl
mov
test
cmc
shll
pop
xor
addr16
push
addb
lds
mov
mov
mov
sarb
jno
inc
sti
or
stos
pop
jo
xor
inc
in
out
testb
aam
and
and
out
add
mov
jle
pop
sbb
enter
adc
lret
icebp
sub
and
test
pusha
jnp
cmp
test
test
xorb
hlt
popf
popf
daa
int3
xchg
xchg
sub
scas
pop
or
add
in
mov
xorl
bound
push
sub
and
or
add
pop
dec
sbb
or
add
sub
outsl
insl
jle
cld
movsb
out
sub
pop
jp
inc
adcb
mov
cmp
stc
push
sub
rcr
int3
jle
stos
adc
jecxz,pt
push
iret
or
add
mov
inc
outsb
mov
mov
or
sub
cli
and
or
mov
scas
repz
ja
movsl
rcl
arpl
ljmp
out
xchg
cwtl
in
dec
rcl
push
or
inc
jecxz
dec
cmc
in
imul
mov
imul
ds
js
scas
fucomp
xor
dec
bnd
loop
pop
insl
sti
push
cmp
adc
sbb
mov
sbb
imul
xchg
xchg
sarl
pop
sub
jmp
movsl
sbb
into
mov
movsl
outsl
mov
jae
xchg
fs
push
xor
cli
sub
xchg
fwait
jno
inc
in
sub
push
ja
data16
test
cmp
mov
dec
aad
or
xchg
and
inc
cli
pop
jns
xchg
cmp
test
inc
jbe
adc
jne
or
add
mov
jge
mov
test
xor
fsubr
adc
xor
xchg
jnp
mov
sbb
dec
pop
je
pop
movsl
arpl
or
sbb
rorb
test
dec
jecxz
stos
jae
dec
bound
in
sub
cmp
push
mov
add
jecxz
jl
add
sub
stos
add
xchg
sub
sbb
jnp
enter
cmp
adc
xor
xor
pusha
jp
das
push
iret
mov
div
rclb
xchg
push
jle
imul
inc
inc
test
popf
inc
or
jo
test
movsb
xchg
xchg
pop
fxch
icebp
and
and
addps
or
movsb
stos
lock
xchg
ja
or
flds
push
out
xor
rcr
sbb
sbb
jns
dec
jg
fsts
adc
in
loope
ret
sub
xchg
dec
mov
mov
in
out
adc
jge
mov
les
not
dec
aas
mov
xchg
and
mov
jge
ret
push
push
out
jl
inc
pop
repnz
xor
sbb
push
jge
xor
sbb
mov
cs
data16
pop
sahf
push
mov
pop
pop
mov
loope
std
add
mov
add
pushf
addb
inc
test
lods
mov
imul
sub
xchg
addb
cmp
cmp
je
add
sub
add
sbb
sbb
nop
push
ret
jno
xchg
inc
adc
xchg
jle
shll
test
xchg
adc
loop
or
loop
test
inc
push
cmpsb
xchg
fsubs
mov
ret
adc
ss
movsl
push
sbbl
cmp
je
sti
enter
subb
sub
push
vcvttps2dq
lahf
sub
popa
out
inc
push
jp
jecxz
fimull
push
mov
or
push
sbbb
ret
outsb
push
fldl
add
push
out
int
iret
mov
daa
pop
mov
pop
ljmp
lods
push
leave
andl
cmp
mov
fdivl
loope
bound
sbb
aaa
das
nop
in
loope
std
sbb
arpl
and
daa
das
pop
fimull
mov
add
insl
jl
pop
mov
xchg
test
adc
mov
push
popa
mov
or
test
xchg
sub
es
sub
cmp
jmp
dec
shll
aaa
add
dec
mov
popa
add
xor
mov
ds
cmp
mov
push
xor
sbb
shll
jmp
cmp
insl
mov
bound
rolb
or
xchg
loop
movsl
jl
mov
mov
das
adc
repz
enter
mov
int3
pop
rcll
addr16
xchg
popf
inc
cmp
pop
xor
jecxz
fcom
sub
jno
xchg
sbb
sub
pop
cmp
call
and
inc
std
dec
and
cmpsl
mov
lea
hlt
mov
lock
cltd
test
fwait
cmpsl
shll
and
dec
xor
jbe
mov
mov
add
adc
je
dec
sahf
sbbl
inc
adc
mov
cmpsb
outsl
sbb
jmp
test
jp
sub
mov
mov
sub
movl
bnd
jbe
or
add
test
mov
xchg
add
xor
movsb
mov
jg
adc
push
add
push
aas
and
nop
repz
js
mov
or
loope,pn
dec
adcl
xor
cmp
push
insl
sbb
fnstenv
adc
iret
and
rolb
popa
pop
test
mov
cmp
arpl
cmc
sbb
neg
jle
popa
push
push
lock
fsts
out
insl
popf
xor
xchg
dec
mov
xchg
pop
ds
adc
scas
aas
rcrl
dec
lret
in
sbb
jo
dec
stos
ljmp
sbb
push
xchg
shr
pop
lea
jg
cmpsl
iret
add
sub
mov
jb
push
pop
mov
std
add
push
ds
fiaddl
mov
jl
jae
mov
cmp
and
mov
jno
xchg
aad
pop
push
or
jno
xchg
inc
rclb
xchg
push
arpl
and
ljmp
cmpsl
fcomip
not
pushf
cmpsl
inc
pop
loopne
pop
addb
adc
push
lods
clc
lods
dec
push
pop
in
icebp
push
lcall
mov
mov
adc
sbb
fldt
push
add
fldt
mov
cs
ljmp
add
add
sub
add
bound
adc
inc
sti
pop
xor
add
scas
push
push
and
mov
popa
daa
cmp
cmp
mov
pop
and
xchg
ficoml
mov
testb
pop
mov
pop
xchg
orb
push
addl
dec
jle
inc
arpl
push
data16
jmp
cmp
and
xchg
cmc
js
adc
xor
or
push
mov
sbb
push
jb
mov
ss
mov
outsb
jmp
sub
lods
jge
shll
dec
fsubs
lds
or
sti
cli
sbb
cs
inc
icebp
sub
les
mov
fstpl
cmp
or
lods
mov
lcall
flds
add
adc
jb
inc
in
push
aaa
lahf
in
inc
inc
dec
sbb
mov
fnstsw
out
movsb
sbb
inc
mov
jge,pt
mov
stc
cmp
fs
xchg
or
leave
notl
xor
push
mov
leave
lds
or
rcr
xlat
dec
js
mov
movsl
popf
pusha
jb
cmp
push
das
cmpb
daa
adc
xchg
sub
mov
adc
ret
dec
sbb
mov
mov
fldl
mov
test
pop
bound
js
jge
in
xlat
cmp
outsb
cmpsb
mov
dec
dec
daa
scas
sbb
pop
cwtl
popf
mov
aas
sbb
fs
mov
sarb
sub
add
jecxz
add
incb
lahf
xchg
call
fdiv
repz
dec
sbb
enter
outsb
xchg
loop
test
adc
xchg
cmc
negb
sahf
lock
jle
mov
adc
sahf
push
inc
fcompp
sti
pop
push
out
movsb
fwait
cwtl
pop
movsb
loope
inc
jp,pt
adc
sub
add
jno
xor
adc
je
add
fcomps
loopne
test
gs
pop
inc
pop
fisubrl
lret
lret
cmc
and
jp
lret
mov
lahf
push
in
stc
lret
fidivl
push
stc
mov
bound
test
js
scas
xor
mov
xchg
aas
push
icebp
mov
jno
mov
inc
out
xor
mov
sub
pop
or
dec
adc
lret
mov
movsl
jle
cmp
mov
ret
fs
mov
repnz
pop
in
cmp
in
popf
int
add
sbb
adc
adc
mov
ljmp
inc
add
movsb
pop
dec
loopne
jns
dec
lock
sahf
pop
mov
cmp
adc
inc
cwtl
in
cmc
stc
test
stc
loop
rcrl
push
lods
jmp
xchg
adc
push
in
mov
repnz
inc
shrl
shrb
fsubrs
mov
dec
outsl
push
int
adc
push
in
and
dec
adc
mov
mov
frstor
jae
leave
mov
xchg
sbbb
push
xchg
mov
sub
popa
xchg
xchg
push
dec
stc
punpckhwd
inc
mov
inc
loopne
cmpsb
mov
bound
outsl
pop
lock
cmp
loop
push
cltd
lfs
test
and
cmp
icebp
test
aaa
pop
popf
fidivl
mov
std
push
inc
xor
fcoml
adc
pop
sbb
pop
inc
ret
ds
sub
xchg
into
cmp
pop
add
arpl
popf
dec
push
push
inc
pop
adc
push
push
or
mov
outsl
xchg
fmuls
pop
push
mov
outsb
sbb
das
inc
out
add
add
popa
and
cmc
mov
bound
push
mov
leave
mov
inc
fwait
jle
ret
dec
xchg
xor
push
sbb
sarb
cmp
rclb
shl
xchg
iret
sbbb
jns
cmp
push
mov
sbb
add
test
inc
mov
adc
repnz
fimuls
mov
pop
das
fmull
int
jnp
das
jecxz
mov
pop
sbb
sar
or
mov
out
and
pop
cmovae
adc
outsl
inc
and
cmp
mov
fcomi
or
outsb
add
pushf
pop
mov
test
fistps
or
xchg
es
in
imul
out
mov
je
lcall
mov
sti
int3
shrb
ret
les
pop
and
cmp
scas
cmpsl
inc
adc
lods
in
pop
push
mov
pusha
or
cmpsl
loope
inc
mov
cmc
mov
mov
call
ljmp
xor
cli
fs
fists
adc
lcall
cmp
cmp
into
xchg
imul
out
mov
out
jmp
dec
mov
mov
mov
xor
mov
inc
out
mov
xor
push
rorb
adc
add
and
shll
popa
inc
ret
into
inc
and
xchg
or
lods
pop
rep
and
out
rcrl
call
je
mov
sub
leave
rcl
mov
and
repz
mov
pop
pop
mov
push
inc
sarb
loope
out
cmp
mov
push
pop
gs
mov
mov
or
mov
sbb
inc
mov
shll
mov
sub
mov
push
adc
and
and
xlat
and
fistpll
sbb
sbb
jmp
enter
stos
pop
inc
stos
push
sbb
xor
xchg
pop
out
push
adc
cmp
add
popf
std
pop
jb
cltd
adc
leave
out
leave
and
divb
outsl
xlat
mov
push
xor
mov
aad
lcall
in
pop
and
stos
cld
xor
lahf
sub
xor
inc
mov
mov
or
dec
add
xorb
adc
xchg
sti
loope
cwtl
xchg
out
das
cmp
jne
sbb
ljmp
mov
mov
jmp
movsl
add
mov
or
shr
aas
lea
rcrl
inc
dec
push
add
push
jle
outsl
cs
jle
and
or
sbb
jno
xlat
addr16
and
xchg
jno
data16
pop
push
mov
mov
push
pop
dec
mov
jmp
lret
cmp
adc
test
cltd
inc
and
inc
adc
xchg
push
loope
sub
nop
mov
ret
mov
push
ds
in
jnp
cmpsb
inc
inc
shr
jmp
das
mov
scas
scas
push
jbe
mov
xor
fbld
leave
clc
nopl
push
jno
jl
dec
outsl
js
mov
iret
inc
push
incl
in
adc
and
sub
fiadds
inc
pusha
mov
mov
inc
adcl
push
sub
jns
mov
dec
sub
xchg
sub
outsl
jge
xchg
rorb
cmp
adc
mov
jae
pop
arpl
xchg
jge
jo
test
fldcw
cmp
mull
sahf
int
mov
dec
sets
sbb
cwtl
roll
push
jmp
lds
mov
sub
jl
fwait
pop
cmp
cld
inc
in
sbb
mov
pop
or
mov
ret
xor
adc
mov
in
and
ja
xchg
mov
arpl
or
inc
sub
repnz
dec
enter
pop
outsl
loop
out
rep
add
lods
sbb
imul
es
mov
mov
iret
rclb
add
xchg
xchg
jnp
push
inc
add
ds
stos
and
push
jo
dec
test
enter
cmp
mov
sub
ja
bsf
add
adc
pop
je
dec
movsb
add
lahf
pop
and
das
and
les
testb
mov
lret
sti
mov
xchg
lds
sbb
arpl
push
pop
lods
inc
fmull
sbb
pop
mov
jae
mov
sub
sahf
mov
es
pushfw
fistpll
xor
adc
sub
push
shll
scas
mov
sti
sbb
insb
mov
test
or
mov
jne
mov
pusha
or
daa
cmp
push
mov
xor
fstl
iret
mov
and
add
ja
lcall
jb
aam
xor
insb
jp
xchg
jo
ja
aad
xlat
mov
shrb
mov
or
add
or
outsb
push
mov
sahf
jge
scas
lods
inc
cs
sbb
lods
cld
cmp
jnp
aad
mov
cmc
test
sbb
xchg
imul
dec
ljmp
test
and
mov
xlat
inc
inc
icebp
stc
lret
inc
cmpsb
dec
repz
sub
subb
into
dec
push
insl
sbb
out
dec
mov
mov
test
sub
test
test
mov
cmc
push
sahf
xor
or
ret
mov
xor
jle
push
sarb
int3
addr16
dec
pop
pushf
cmp
ret
ja
rorl
inc
sbb
sti
addr16
push
pop
inc
negl
ret
lods
or
clc
push
leave
clc
or
movsb
xchg
or
ljmp
lcall
and
push
int
pop
or
adc
mov
mov
inc
aad
pop
shr
shr
jnp
push
xorl
addb
flds
cld
out
stos
cmp
mov
mov
imul
jnp
cwtl
mov
push
pop
repz
clc
sbb
stc
les
pusha
xor
hlt
ljmp
jge
in
push
inc
push
jo
cltd
int
adc
or
cmp
cltd
push
sub
pop
sbb
mov
mov
arpl
or
sub
mov
jno
xchg
sub
test
jnp
call
icebp
dec
cmpsl
sub
enter
scas
fwait
ljmp
ja
and
jno
push
dec
dec
stos
jns
add
insl
adc
and
ret
or
std
lret
push
enter
lahf
shlb
int
xchg
jp
mov
or
and
cmp
fidivrs
dec
fidivrs
adc
loope
cmp
ljmp
out
rcrl
mov
inc
inc
outsl
incl
push
mov
inc
shll
cltd
xor
mov
out
jae
loopne
dec
sbb
sbb
mov
decl
aam
or
mov
and
jns
sub
test
enter
push
les
pop
xchg
xchg
push
pop
iret
xchg
aam
clc
cmc
ret
mov
lahf
daa
push
xchg
jo
mov
stos
mov
test
jge
or
push
testb
bound
xchg
jp
iret
data16
insb
les
pop
sbb
pop
xchg
dec
add
or
jo
add
mov
sbb
sahf
ret
testb
negl
inc
mov
insl
mov
inc
fadds
mov
testl
dec
test
into
pop
sbb
lcall
xor
addr16
subl
dec
in
insb
outsl
aam
mov
jecxz
mov
arpl
and
dec
sbb
in
xchg
mov
inc
jge
stc
sub
aam
movsb
into
mov
mov
jle
lea
outsb
mov
dec
nop
imul
sahf
int
inc
pop
cmp
xchg
fisubrs
flds
aaa
pop
sahf
es
pop
mov
ret
mov
fnstcw
adc
cmpsb
dec
inc
stos
aaa
dec
mov
pop
push
dec
addb
insl
callw
sar
cli
je
and
lods
inc
pop
add
sub
fistl
rorb
lods
push
adcb
lock
push
cmp
push
test
and
and
sub
dec
push
jae
xchg
in
dec
sbbl
cmovg
ficoms
cmpsb
mov
pop
arpl
adc
and
xchg
je
adc
scas
pop
push
cmp
bnd
xor
lret
ljmp
push
pop
mov
add
es
fstpl
push
fisttpll
adc
ficomps
ja
hlt
or
scas
cs
adc
mov
xchg
mov
stos
test
and
adc
adc
rol
inc
dec
loope
push
push
adc
leave
push
movsb
push
sahf
in
jno
shlb
cmpsl
sub
neg
lahf
data16
mov
pop
daa
rcll
dec
and
xor
je
pop
popa
jl
lock
int
mov
cltd
fmuls
dec
inc
std
out
loop
adc
outsb
enter
add
and
sahf
loope
xor
add
out
scas
or
test
mov
mov
sub
mov
test
push
mov
add
sub
ds
mov
pusha
frstor
and
lock
enter
xor
inc
dec
cmpsb
iret
push
ja
dec
aad
and
mov
jne
add
stc
fwait
lds
xor
stc
test
pop
outsb
out
fs
test
out
cmp
pop
addr16
inc
mov
lahf
mov
stos
jns
and
jo
test
into
ret
pop
mov
push
loope
mov
outsb
call
notl
mov
jl
scas
loopne
pop
xchg
mov
loope
mov
and
dec
dec
fsubrl
lea
jmp
add
inc
pop
sbb
cmp
popf
mov
xor
je
sti
push
add
pop
or
xor
add
mov
in
xchg
push
fildl
lods
mov
adc
nop
sub
add
add
mov
dec
push
jge
lcall
movsb
adc
scas
xchg
inc
out
mov
lods
adc
test
outsl
xchg
call
ret
inc
xchg
push
jb
sbb
jmp
aad
arpl
jno
fistl
add
dec
mov
jnp
mov
sub
iret
jo
mov
fucomp
lods
es
pushl
xchg
pop
enter
repz
pop
icebp
int
lret
xor
jecxz
add
inc
xor
add
jmp
movb
xor
dec
sub
sbb
es
shlb
shll
test
outsl
mov
dec
lcall
pushf
adc
adc
dec
scas
push
imul
roll
xchg
xor
dec
inc
ret
pop
mov
jmp
test
insl
push
or
mov
mov
in
shll
xor
cmp
xor
dec
arpl
scas
ret
in
mov
lret
mov
inc
imul
sti
or
dec
loopne
mov
sub
data16
mov
dec
mov
mov
out
cmp
mov
mov
ljmp
jo
inc
call
mov
push
sar
stc
cmpsb
lock
jp
pusha
pop
inc
mov
movsl
subl
scas
xor
sub
aas
and
lods
or
outsl
jge
push
call
sub
popf
add
ret
xchg
cmp
sub
sbb
jae
fisttps
mov
lock
mov
loop
notl
jmp
mov
insl
in
scas
cmp
inc
gs
mov
daa
sbb
adc
mov
and
mov
or
cmp
jnp
nop
lods
push
jb
cwtl
jmp
pop
mov
xor
scas
ds
mov
or
fs
negl
inc
jmp
lahf
shrb
mov
fcomps
jmp
inc
inc
aam
cmpsl
cmc
imul
jnp
jl
movsl
fidivs
push
or
inc
add
cmp
fwait
cmc
ja
inc
pop
cmp
ljmp
fdivl
dec
pop
cwtl
addr16
mov
ret
or
pop
sbb
mov
push
inc
push
push
cmp
inc
add
scas
lock
aam
cmp
pop
subb
xlat
jmp
sbb
fwait
jo
les
and
outsb
adc
pop
popa
inc
mov
adc
loope
insb
pop
inc
sarb
in
cltd
push
mov
mov
or
negl
mov
lahf
movsl
cmp
lods
aas
in
cmp
sar
cmpsl
jae
addb
cmp
arpl
icebp
scas
filds
lahf
jns
adc
cmc
minps
nop
mov
cmp
popa
movsl
jne
mov
xchg
enter
insb
lgs
in
jmp
cld
in
inc
nop
inc
loopne
cwtl
insl
cmp
jae
adc
adc
add
fcompl
mov
imul
add
std
mov
pushf
mov
jne
dec
test
scas
mov
or
test
aad
mov
push
into
jg
mov
ret
sbb
dec
mov
jl
imul
push
andb
popa
sbb
xchg
mov
sbb
stc
xor
xor
sahf
mov
cld
jl
enter
lods
jp
test
outsb
adc
rorl
and
mov
sbb
xchg
int3
cwtl
inc
pop
scas
sub
cmp
cmpsl
mov
ficompl
stos
ja
mov
pop
mov
iret
ja
dec
shrb
clc
or
jbe
sub
shll
ja
sarl
pop
jb
xchg
mov
jp
mov
mov
inc
int3
jbe
cmp
inc
push
sbbl
aas
xor
dec
loopne
loopne
out
mov
clc
not
test
xchg
push
aaa
sbb
inc
test
inc
rorb
dec
icebp
stos
adc
or
cmp
fsubr
pop
sub
sti
shrb
sbb
xchg
jg
aas
push
sbb
aad
cmp
shlb
ficomps
mov
rcrb
imulb
lock
ds
jmp
mov
jge
mov
fsubrs
dec
popf
and
push
xchg
imul
sbb
imul
out
cli
sbb
adc
xor
imul
dec
loope
movsl
int3
jb
fdivs
and
loopne
fisttpl
jp
jo
sbb
loopne
cmp
push
incb
sub
std
daa
dec
inc
data16
repz
or
js
rclb
cmp
or
or
aaa
nop
lret
in
repnz
fsubrs
pop
in
std
out
sbb
xor
bound
loopne
xor
inc
das
xor
pop
rcrb
and
cmp
andl
adc
sub
loop
mov
sub
dec
ret
jp
mov
mov
rcl
into
addr16
mov
cmpsb
loop
fwait
stos
pop
jg
adc
sbb
outsl
adc
pop
enter
sbb
pop
js
pop
test
scas
into
add
les
cmpsl
adc
ret
decb
divb
loop
adc
mov
enter
inc
push
and
lods
lea
xchg
dec
push
adc
repnz
rorb
cmpsl
xchg
cmc
xor
test
js
jg
xor
pop
insb
or
pop
sub
dec
addr16
shll
sbb
sbb
lcall
test
rcr
xchg
pop
ret
decb
cmpsl
mov
in
cmpsl
cmp
enter
mov
ljmp
out
clc
insb
sub
dec
add
push
and
or
xchg
rorl
loope
push
mov
push
jo
test
lret
pushf
and
push
je
in
dec
sub
sbb
cmp
test
in
and
cmpsl
ja
or
pop
add
dec
add
leave
push
or
and
ss
mov
in
test
adc
adc
xchg
addl
mov
mov
add
mov
jl
js
or
jae
das
mov
jecxz
push
in
xchg
pop
fwait
xor
or
lods
cld
xchg
and
dec
push
pop
inc
outsl
inc
popa
xchg
test
cwtl
pop
cmp
lods
into
push
add
stc
push
dec
adc
cmpsb
das
dec
and
and
stos
mov
pusha
clc
rolb
dec
dec
dec
add
notb
ds
bound
push
mov
and
out
dec
repz
mov
pop
shlb
mov
int3
jo
shrb
shrl
out
jb
stos
cmc
pop
cmp
frstor
rolb
ljmp
jno
enter
jecxz
es
jge
push
pop
popa
das
popw
sbb
cmpsb
rclb
mov
pop
out
xor
sahf
jl
sub
andl
sub
filds
imul
mov
mov
push
stos
iret
in
sub
stos
push
popa
dec
and
xlat
or
lcall
call
scas
push
mov
mov
fwait
xchg
xchg
cmp
das
js
dec
loopne
adc
js
push
mov
scas
and
adc
mov
insb
jns
mov
jecxz
xchg
je
sub
push
int
jnp
lahf
sbb
mov
xchg
push
push
sbb
mov
das
cli
lea
mov
or
lret
xchg
sahf
faddl
cmpb
adc
test
sub
xorl
mov
rol
xchg
hlt
test
pop
push
mov
lock
push
ljmp
mov
push
xchg
inc
rol
aad
xchg
sub
mov
pop
into
and
arpl
int3
ljmp
push
or
outsl
fdivrl
movsb
xchg
pop
push
dec
xor
pop
stos
loope
outsb
aas
mov
cmp
pop
cltd
lods
aad
rcll
lahf
fists
lock
pop
mov
lods
adc
add
jg
and
icebp
pop
movsb
call
mov
pop
es
sbb
inc
rcl
cs
cmp
movsb
mov
mov
dec
or
mov
fsqrt
lods
insb
mov
andps
push
push
insl
cwtl
cmpl
xlat
ds
js
imul
push
mov
or
mov
or
inc
mov
adcl
js
jbe
subb
mov
test
inc
lods
mov
mov
negb
stmxcsr
pushf
or
flds
add
mov
mov
xor
mov
cmp
jo
repz
movsl
out
push
mov
daa
jne
shrb
outsl
dec
add
repz
fistpl
and
pop
call
cmp
orb
pop
fs
mov
data16
or
jnp
aam
mov
cli
pop
adc
sbb
pop
fadd
dec
mov
mov
mov
jl
movsb
cmpsl
mov
filds
inc
mov
push
adc
movsb
fdivrs
popa
fcomi
dec
lcall
in
xchg
mov
inc
out
mov
push
mov
sbb
icebp
pop
lock
mov
inc
mov
cmp
cmp
inc
jg
cld
rolb
pushf
iret
jecxz
sbb
mov
push
jle
aad
mov
pop
aad
pop
mov
ret
pop
mov
and
or
cmp
stos
mov
sbb
or
pop
in
mov
pop
fcoms
cmpsb
in
fs
mov
add
fnstenv
leave
movsb
jo
sbb
xchg
adc
adc
push
dec
test
xchg
xchg
addr16
in
xchg
insl
negl
push
push
jge
xchg
sbb
push
push
in
inc
inc
imul
and
pop
sahf
push
xor
fldl
js
pushf
data16
cmp
dec
mov
addb
rorl
shrb
jno
lock
out
xor
xor
adc
sbb
sbb
lcall
ss
loop
fs
push
jne
pop
push
leave
xor
sub
add
mov
and
pusha
sarl
roll
sbb
ret
dec
out
add
jg
adc
pop
leave
mov
push
fdivl
pushf
js
lea
ljmp
add
std
xor
je
fdivs
testl
jle
aaa
mov
addb
xor
push
popf
sub
and
pop
sbb
lret
setns
outsl
cmp
notl
pop
and
lcall
test
enter
push
cmp
pop
aad
shl
dec
xor
movsb
in
cmp
test
rep
js
movsl
je
lret
aaa
ficomps
xchg
mov
push
and
mov
push
xchg
and
push
cld
pop
mov
pop
imul
xor
xorb
imul
mov
sahf
test
mov
ja
xor
std
sbb
aam
std
mov
leave
loopne
das
add
lock
aad
aam
and
pop
sub
cmc
xchg
push
add
nop
sbb
int3
mov
push
incl
or
stc
sbb
mov
pop
mov
cmpsl
cmpsb
push
and
dec
scas
jmp
test
cwtl
sub
addr16
fs
imul
mov
in
mov
insl
fisubrs
adc
lock
mov
movsb
dec
iret
jno
call
fcoml
cmp
cmc
repnz
mov
enter
int
xchg
das
jno
aas
movb
xchg
js
add
push
popf
les
adc
lods
jno
mov
outsb
and
outsb
subl
push
scas
adc
nop
xor
xor
and
jne
sti
jg
mov
test
sub
dec
stos
mov
mov
cmpsb
mov
je
cmpsl
mov
pop
and
and
rorl
push
and
push
push
and
or
mov
mov
cwtl
shlb
sbb
xchg
je
jl
jnp
shll
lcall
jno
push
cmp
adc
lods
jg
sti
pop
mov
fs
jnp
andb
dec
push
or
xchg
sub
mov
mov
jecxz
inc
in
in
insl
push
aaa
fcoml
hlt
fnsave
je
mov
xchg
out
add
adc
and
lds
push
pop
mov
mov
lods
fistps
xorl
add
mov
ret
mov
in
cs
push
push
movsl
aam
out
or
cmpsb
or
das
cmp
icebp
push
rcrl
push
loop
idivb
pushf
adc
xor
call
cld
xchg
cmp
inc
mov
or
lret
mov
repz
inc
jg
inc
and
ficoml
ja
cmp
xor
xchg
ret
and
loope
rol
pop
mov
stc
lahf
cwtl
adc
shrl
out
and
mov
xor
nop
das
mov
dec
lods
ret
cmp
push
repz
mov
xchg
lahf
push
and
dec
cmp
subb
lret
cld
pop
mov
mov
inc
add
outsl
xchg
xor
push
pop
inc
dec
push
push
push
adc
push
add
dec
sub
shlb
negl
pop
int
push
mov
xor
ds
stos
xchg
mov
adc
xchg
mov
add
loope
scas
xchg
test
or
imul
mov
cld
and
cltd
push
ljmp
jge
cmp
sub
jne
gs
shlb
scas
sub
add
insb
jae
pop
push
loope
jecxz
jecxz
fiaddl
bound
pusha
imul
test
ljmp
lods
std
and
mov
jmp
fldenv
xor
dec
ljmp
in
imul
push
fs
jo
mov
inc
mov
jnp
out
ja
sub
movsb
fdivrs
in
in
sbb
xchg
shll
jne
mov
insl
fimull
push
ret
sub
out
cs
pop
lret
hlt
mov
mov
sbb
stos
ret
mov
sbb
rolb
sbbl
addr16
mov
pop
sbb
ret
imul
fistpll
sbb
xchg
leave
test
sub
pusha
and
mov
mov
repz
in
outsl
stc
out
movsb
je
jmp
jmp
in
insl
imull
das
fadd
out
insb
adc
adc
fistpl
add
dec
jge
fmull
and
mov
mov
dec
les
mov
enter
in
jmp
adc
add
int
mov
loope
mov
rorb
mov
xor
popf
fninit
or
test
in
mov
add
popl
lds
hlt
xchg
adc
sbb
dec
jb
fimull
mov
jg
lea
es
sub
add
std
sbb
or
mov
and
push
loop
cmp
xor
xor
shlb
cwtl
insb
imul
push
mov
fldl
addb
pop
cmp
inc
cmp
das
icebp
loop
in
mov
mov
mov
in
push
xor
sbb
cld
jp
sub
jno
pop
dec
dec
add
cli
push
das
add
mov
shl
cmp
pop
leave
test
fnstsw
scas
pop
loope
dec
add
mov
pop
out
fldcw
or
xorb
mov
sub
or
dec
test
sub
lods
lds
cmp
mov
in
jle
xlat
xchg
rcll
push
xor
out
cmp
icebp
adc
xor
stc
lahf
ret
cmp
lock
jmp
imul
sarb
cmc
in
lods
mov
cmp
push
dec
push
jae
jecxz
aas
add
add
mov
lods
enter
mov
nop
lods
cld
mov
mov
jp
icebp
pop
jns
jge
mov
fcmovne
inc
adc
mov
xorb
lods
xor
add
rol
mov
cmpsb
movsl
test
sbb
sub
mov
fsubl
dec
int
je
fwait
loopne
fdivl
mov
xor
decb
sub
xchg
inc
adc
and
jmp
inc
mov
cwtl
cmp
xchg
jg
aad
mov
push
loope
out
ret
iret
xchg
imul
mulps
pop
push
jle
push
adc
sub
iret
push
xlat
push
divb
xchg
mov
push
jge
push
cmp
inc
cmp
in
stos
dec
mov
int
cmp
jno
std
rcrl
testb
icebp
movsl
pop
pop
pop
xchg
mov
cmp
ja
daa
push
stos
push
imull
xor
mov
repz
inc
sti
cmp
inc
loopne
loop
push
cltd
add
push
stc
and
cmp
nop
push
xor
sarl
dec
in
mov
sub
call
fiadds
mov
lea
jecxz
pop
xor
pop
pop
mov
aaa
inc
jp
les
pop
int3
andb
pop
pop
lret
ret
adc
rcrb
jno
gs
hlt
outsb
in
xchg
jnp
js
jnp,pn
xchg
pop
fiaddl
cmp
into
leave
xor
cmp
paddsw
push
inc
stos
pop
and
mov
push
adc
xchg
aaa
xchg
inc
sub
hlt
movsb
mov
fimuls
cmp
mov
lock
jle
lret
sahf
iret
pusha
push
scas
inc
outsl
loopne
cmp
cmp
mov
xor
sbb
into
mov
jp
jge
dec
sti
pop
fdivrs
adc
das
lods
pop
cmp
sub
lea
mov
repz
mov
mov
addr16
movsl
sub
in
mov
pop
and
mov
roll
push
xor
jns
enter
push
mul
xchg
or
sbb
jg
jecxz
adc
divl
mov
mov
push
pop
popf
add
fistl
push
scas
outsl
out
xchg
fcomps
xchg
xor
es
xchg
roll
lea
shlb
jl
or
push
xchg
testl
xchg
ret
xor
outsl
and
cli
sbb
mov
fwait
mov
mov
add
subb
mov
cli
jp
dec
dec
loop
mov
loop
dec
dec
test
outsl
fs
cld
add
ljmp
das
icebp
nop
outsl
jo
sbb
repz
mov
mov
mov
int
pop
xchg
adc
pop
nop
stos
mov
cmp
aad
sbb
mov
rcll
rorb
add
fmul
jne
lods
or
mov
mov
cmp
enter
mov
scas
dec
outsl
sbb
or
int3
push
pop
clc
movsb
mov
sbb
adc
xchg
sub
mov
daa
fdivr
cmp
or
sti
je
add
aaa
repz
jo
or
test
pop
mov
cmpsb
adc
out
xor
sub
cmpsl
sub
loopne
adc
xor
add
imul
mov
ret
xchg
cmp
cmc
jle
jle
dec
rol
std
inc
or
cs
nop
sarl
adc
shlb
mov
fcoml
fwait
int
dec
sub
mov
inc
add
adc
pop
insb
ret
out
cmp
inc
imul
pop
cmp
jno
lcall
jbe
mov
jecxz
aad
add
jno
sahf
sub
sbb
xchg
ljmp
inc
movsb
sahf
inc
mov
mov
xor
das
jnp
ds
outsb
xor
lods
arpl
push
repz
std
mov
jbe
dec
fsubrl
in
je
jmp
and
mov
adc
scas
xchg
ljmp
pop
and
lock
fiaddl
cwtl
push
sbb
std
xor
mov
inc
out
sbb
incl
mov
pop
mov
andl
test
push
imul
je
push
in
fsts
test
dec
push
push
aas
fcomps
push
jecxz
jo
mov
fcomip
sbb
cmpb
cmp
repnz
pop
dec
rcrl
sahf
insb
cld
lea
scas
fstl
add
pop
loop
testb
and
add
lock
cmp
mov
movsb
fisubrs
jne
push
add
fnsave
stos
and
neg
and
ret
mov
out
bound
jmp
dec
or
push
mov
xor
jno
aad
adc
jb
loope
xchg
jle
popf
cld
fstps
ljmp
cmpsb
and
scas
imul
outsb
cmpsb
push
pop
jl
int3
out
rcl
xchg
xchg
mov
inc
inc
gs
js
add
mov
scas
pop
jl
pop
int
sbb
shl
mov
sbb
xchg
push
jno
inc
sub
lcall
jl
push
jg
popa
sub
out
add
pusha
test
jb
adc
dec
flds
std
xchg
ffree
aad
mov
mov
add
xchg
sbb
xchg
sbb
sub
aam
xchg
loop
cmpb
lahf
icebp
or
pop
push
insb
xor
call
and
leave
ljmp
jp
jmp
jmp
mov
popa
ja
call
call
les
les
rcrl
inc
pusha
lcall
inc
jbe
sbbb
sub
loopne
mov
in
jns
enter
xor
sub
repz
mov
insl
les
adc
rorb
jp
adc
mov
pop
outsb
or
fs
cmc
or
jle
mov
sbb
or
add
push
in
popf
push
icebp
repnz
dec
fsts
clc
mov
or
inc
mov
cld
pop
sbb
dec
jo
pop
movb
shll
je
cltd
mov
fwait
pop
ljmp
dec
outsl
cmp
push
ficoms
fdivrs
xchg
cmc
sub
cwtl
mov
xchg
int3
mov
and
xchg
daa
aaa
inc
fdivrl
mov
imulb
sub
hlt
inc
xlat
inc
inc
leave
xor
stos
movsb
loope
xor
mov
cmp
dec
xchg
jg
cwtl
or
or
add
inc
sbb
adc
int
adc
jg
dec
cld
repnz
and
jbe
nopl
push
or
xor
dec
lock
lea
popa
jg
adcb
rcll
dec
clc
insb
sbb
stc
cmp
enter
pop
or
mov
sar
push
inc
out
sarb
imul
es
and
ffree
icebp
xchg
sbb
sbb
outsb
push
xchg
fisubs
cwtl
mov
test
out
and
inc
and
inc
fsubrs
mov
mov
jb
jbe
adc
je
stc
xor
test
decb
roll
xchg
rcrb
ret
cmpsb
into
repnz
call
xchg
lret
and
nop
adc
iret
xchg
add
cmpsl
cmp
xlat
fstpl
fs
insl
mov
xchg
sub
xor
and
loope
push
andl
ret
jo
adc
push
iret
rolb
movsl
icebp
sbb
test
les
imulb
inc
jnp
adc
adc
mov
add
add
push
sbb
loopne
mov
mov
xchg
cmp
repnz
enter
mov
add
das
ljmp
add
xor
push
pop
sarl
cmc
fistpll
inc
aaa
dec
mov
xor
push
adc
pop
nop
cmp
loopne
dec
mov
push
mov
adc
cmp
addr16
push
jge
add
mov
movsb
fidivl
test
jo
push
push
into
test
jmp
mov
pop
push
nop
orb
add
mov
mov
jmp
dec
ljmp
xchg
std
cmp
xor
add
jns
cmp
push
fs
insl
pop
add
scas
push
je
push
push
dec
fwait
push
shll
jb
cmpsb
xor
test
lret
rcl
pop
mov
por
int
cs
repz
and
jle
hlt
xlat
mov
add
in
insl
jle
mov
scas
jmp
imul
xor
cmpsb
or
out
mov
fldenv
xor
fstp
pushf
xchg
sub
mov
xchg
loopne
jno
dec
stc
lret
jne
lret
sub
mov
lcall
and
xor
test
cwtl
sahf
or
fcompl
sarb
testl
fistps
mov
lret
pop
mov
je
pop
inc
and
adc
sub
bnd
add
das
or
push
dec
je
sub
mov
sbb
xchg
stos
lods
mov
xor
aam
nop
xor
adc
and
lret
adc
cmp
outsb
ss
or
movsb
fdivp
sub
testl
adc
mov
inc
fcmovnu
and
jo
les
cwtl
add
adc
mov
mov
sub
fwait
mov
test
ret
jbe
out
and
pop
dec
filds
dec
mov
and
push
cli
pop
adc
shlb
pusha
mov
mov
rorb
data16
xchg
ja
inc
pop
xchg
adc
mov
ds
je
mov
je
in
push
loope
lea
dec
pop
mov
insl
leave
test
pop
test
xlat
shll
lods
cltd
sub
aaa
adc
jbe
sbb
pop
cltd
mov
inc
xor
rcrb
cs
pop
fistps
jmp
les
sbb
call
jne
imul
enter
lea
sub
imul
inc
test
insb
mov
mov
flds
pop
jo
lret
lock
aad
and
cmp
in
arpl
jge
pop
add
sub
xchg
lea
mov
orl
jbe
shrl
adc
aaa
mov
imul
jl
jp
push
mov
lcall
and
stos
jbe
mov
mov
push
mov
add
shrd
adc
cmc
outsl
cli
int3
push
lret
xorb
out
inc
lret
sub
inc
mov
xor
xlat
into
cmp
das
dec
adc
cmpsb
fildll
and
js
cmp
cmp
jg
test
xor
pop
lret
mov
xchg
fiaddl
js
gs
inc
int
jle
pop
popf
pushf
inc
or
or
mov
fisttpll
xchg
sbb
xor
out
xor
xchg
divl
inc
popf
int3
into
subl
cmp
sbb
repnz
lret
xchg
int
out
inc
pop
adc
sbb
and
clc
insb
sub
xchg
test
filds
nop
insb
shlb
out
lods
push
add
fisubs
aad
xchg
mov
and
mov
es
fstl
insb
cmpsl
enter
enter
mov
lcall
cmp
sub
fcomip
addb
das
pop
repz
jp
hlt
mull
mov
je
sub
adc
insl
jb
mov
xchg
jae
xchg
mov
or
push
ss
add
cli
aam
sbb
xor
test
pushf
lods
mov
jae
rcrb
xchg
push
movsb
cmp
stos
cmp
test
arpl
push
mov
fsts
push
test
imul
or
or
dec
int
ds
fnstcw
cmc
xchg
cli
adc
test
lcall
or
lods
cmpsb
or
jo
gs
mov
dec
add
mov
popf
adc
mov
sahf
imul
cltd
data16
jmp
addr16
subb
stos
rcll
mov
dec
into
das
ljmp
adc
jb
push
lret
push
mov
cmp
lods
data16
cmp
fcoml
adc
inc
mov
out
xchg
xchg
jg
outsb
sub
stos
xchg
xchg
mov
lock
adc
imul
xor
sbb
add
call
sub
push
jns
push
lods
jg
or
ret
sbbb
push
repz
mov
xor
repz
inc
xlat
cmpl
fadds
sbb
cmc
stos
add
aas
push
jo
mov
sub
cmc
jge
adc
pop
mov
ljmp
cmpsl
push
and
mov
pop
aam
pop
inc
lock
outsl
xlat
ret
std
cmp
mov
jne
ss
dec
popl
inc
inc
mov
outsl
mov
popf
jl
push
popf
xor
fldenv
adc
repz
add
das
push
repz
pop
cmp
sbb
test
loop
mov
je
ljmp
cmpsl
jmp
add
sbb
jmp
shl
inc
jb
cmp
pusha
rorb
add
fwait
add
sbb
jmp
lods
loope
int3
lods
fs
jmp
outsl
cmp
loop
out
sub
add
push
lcall
ljmp
add
jecxz
icebp
xor
push
push
lret
sub
dec
inc
sbb
sbb
add
or
clc
dec
xchg
arpl
sub
adc
sbb
xchg
imul
sbb
pop
mov
pop
jl
aas
pop
fsubs
adc
insb
mov
out
mov
call
jmp
mov
insb
enter
ret
add
cld
call
insl
lret
js
test
jmp
mov
sbb
mov
test
xchg
mov
out
fsub
repz
jae
pop
es
aam
repnz
loopne
dec
pop
add
in
jg
rcl
add
daa
dec
adc
mov
maxps
xchg
sbbl
xchg
and
mov
repz
cwtl
push
mov
inc
and
mov
and
aas
leave
sti
push
pusha
out
jne
xor
pop
stos
outsb
test
repz
rcl
dec
mov
ljmp
outsb
mov
dec
add
pushf
dec
push
xchg
adc
xchg
xchg
cld
cmpsb
cmpsl
push
lcall
pop
icebp
add
mov
ret
add
outsb
mull
pop
add
xchg
fmull
sbb
repz
push
fs
test
addr16
push
mov
xchg
test
fcmovb
rclb
push
mov
jp
fidivs
cs
xchg
pop
mov
mov
mov
iret
popf
push
mov
mov
lcall
aas
mov
and
mov
cmc
ficoml
adc
add
sbb
push
mov
into
cmp
add
push
and
lea
cmpsl
pop
shl
leave
sbb
call
cmc
xor
mov
shr
cmp
addl
js
pop
decb
movb
cwtl
add
cmpsb
cmpsb
dec
mov
xchg
sub
pop
test
data16
sti
shlb
push
out
data16
jbe
aas
pushf
cmp
test
mov
or
dec
dec
xor
pop
lods
cmp
clc
cmp
push
dec
jb
and
subl
jno
mov
icebp
add
test
xchg
push
movsl
fnstsw
fldenv
pop
cmc
jmp
mull
sub
dec
cmp
jg
or
das
xchg
es
fsubrl
cmp
jnp
dec
outsb
xchg
or
out
std
call
mov
adc
and
sub
pop
mov
pop
shlb
fucomp
lods
pop
das
push
imul
nop
or
push
addr16
mov
shl
pop
je
add
push
test
stos
arpl
push
xor
and
stos
das
jb
jno
ja
dec
and
imul
ror
fs
cwtl
mov
mov
xor
lret
push
idivb
negl
jo
stc
jmp
stos
shlb
adc
xchg
sahf
xchg
iret
movsb
fildll
or
mov
fs
pop
stos
xchg
scas
mov
mov
cli
adc
mov
add
sti
push
sbb
ja
dec
and
in
test
mov
das
into
xor
arpl
push
jle
addl
mov
push
ret
push
mov
jo
inc
je
imul
std
orl
dec
bound
pop
cltd
in
mov
dec
icebp
lahf
xor
shlb
fs
mov
stos
dec
fisubl
popf
xor
fildll
lahf
mov
fbstp
or
repz
jae
adc
insb
test
xor
dec
xchg
sbb
inc
test
xchg
jmp
and
daa
dec
pop
test
int3
ja
jg
push
pop
cli
fwait
push
cmovae
es
pop
lahf
aas
mov
sbb
clc
leave
or
fimull
and
stc
dec
repz
sub
movb
cmpsb
sub
aaa
adc
mov
aad
xor
adc
and
aaa
dec
and
loop
sbb
data16
lock
ret
icebp
lret
roll
mov
xchg
and
mov
out
xor
sbb
and
dec
sysexit
pop
dec
and
movsb
push
nop
adc
rorl
pop
rorl
mov
pop
adc
jg
lock
cmp
shll
cmp
std
fdivrl
xor
cmc
push
xchg
mov
cwtl
fst
mov
dec
xor
add
rcrb
pop
rcll
out
aad
das
xor
pop
ret
sbb
lock
pop
push
push
xchg
cltd
sbb
popa
lret
adc
push
insl
push
jno
pop
clc
jl
fiadds
add
jno
call
fidivrs
mov
jbe
xchg
sahf
icebp
sbb
rcl
ljmp
jecxz
dec
xchg
pop
and
test
lcall
inc
pusha
push
loop
xchg
jno
mov
lods
and
or
andb
sub
cmp
loop
outsl
jg
daa
lods
mov
cmp
shrl
xor
rorl
in
inc
mov
mov
push
push
jg
sub
shrl
test
sar
push
js
mov
rep
inc
in
push
add
je
pop
cmpsl
xor
cmpsl
mov
hlt
cmp
add
jl
cmp
lea
inc
and
test
lea
out
fcoms
pop
iret
out
lods
sti
pushf
inc
popa
jbe
mov
movsb
imul
and
or
hlt
scas
push
lds
or
ljmp
push
inc
inc
mov
in
je
inc
lcall
les
pop
sbb
aad
jae
and
add
push
shrl
idivl
add
push
ret
ds
clc
mov
jmp
xor
jmp
scas
iret
je
in
fwait
les
adc
jnp
or
cmpsl
jnp
mov
xchg
mov
adc
es
push
inc
iret
loope
pop
push
and
mov
in
out
outsl
dec
or
cmp
and
inc
cmp
xorl
imul
cmp
aas
enter
xor
inc
cmpsb
and
subl
out
lea
ss
lret
int3
push
dec
sbb
fs
fdivrs
mov
or
imul
mov
or
lcall
sbb
fldpi
daa
add
popa
mov
sub
lahf
xchg
aam
cmp
mov
cld
fistl
in
bound
adc
lods
inc
jp
into
sbb
xor
or
pop
icebp
pop
pop
mov
or
testb
and
sub
jnp
adc
ficoml
xchg
pop
mov
notb
and
sub
jbe
cmp
bsr
xchg
les
inc
xchg
push
loopne
imul
xor
add
hlt
lahf
js
jmp
scas
pushf
in
test
mov
stos
mov
xor
mov
insb
lret
lea
insb
stc
adcl
arpl
jg
imull
cmp
incl
pop
into
shrl
faddl
pop
cmp
pop
mov
inc
scas
clc
pop
jne
inc
addr16
dec
jecxz
movsl
sbb
movlhps
mov
in
loopne
or
test
orl
and
inc
scas
push
or
inc
movsb
cwtl
popa
imul
mov
aas
xchg
xchg
sahf
pop
stc
icebp
mov
rolb
mov
sahf
aaa
int
push
out
ss
out
adc
push
in
sub
or
insl
fcmovnbe
shlb
repnz
lahf
stc
lods
and
aaa
adc
cmpsb
add
shrb
fisttps
stos
xor
cmc
push
out
jb
adc
nop
out
mov
andb
dec
and
les
jge
xchg
fsubrs
xchg
test
movb
fists
add
lret
dec
je
mov
xchg
ja
in
outsb
rolb
lods
sbb
adcb
fisttpll
mov
movq
sbb
pop
stos
adc
repz
mov
pop
mov
push
pop
ss
jne
inc
sub
outsl
iret
out
idiv
cwtl
and
mov
push
movsb
sbb
into
outsl
push
cmp
jbe
mov
jp
adc
loope
or
sub
mov
aam
xchg
mov
ljmp
icebp
movl
fwait
xchg
xorb
ret
adc
cmp
push
inc
ret
rcl
sub
xchg
pop
inc
outsb
sahf
mov
inc
insb
xchg
jl
lahf
test
aam
dec
inc
test
adcb
jb
push
lcall
pop
daa
scas
movups
add
cmp
stos
push
sub
adc
and
xor
shlb
sub
push
push
mov
shr
in
popf
adc
addr16
test
lret
mov
mov
pop
out
mov
inc
xchg
adc
push
nop
or
inc
jge
sbb
mov
rcr
stos
lea
aad
jmp
add
jns
inc
jl
mov
cld
sbbb
sarl
cmp
push
sbb
cmp
and
mov
jmp
xlat
mov
jl
frstor
and
sbb
sub
lods
inc
fdivrl
in
and
ficoms
stos
pop
call
sub
aam
xor
mov
or
scas
jae
xchg
into
cmp
fstps
sub
xchg
fdivrs
cmp
addb
testb
mov
in
sbbl
and
shll
loopne
push
and
mov
rcr
repnz
sbb
leave
xor
jge
xchg
jg
bound
daa
lret
cmp
subb
jae
xor
or
ret
dec
sahf
mov
pop
xor
push
xchg
pop
inc
mov
xchg
sub
jmp
sbb
dec
shrl
bound
test
int3
cwtl
sbb
stos
divl
push
fcomps
jbe
push
mov
mov
nop
call
cmp
or
bound
imul
mov
push
insl
jne
ret
int
inc
inc
sbb
repz
mov
sbb
pop
dec
iret
movsl
rcrb
and
loopne
scas
jno
pop
je
repz
lock
or
dec
adc
push
dec
sbb
cs
mov
negb
lds
and
fiaddl
pusha
jbe
and
out
fs
and
add
test
xor
sub
sahf
cmp
mov
xchg
lret
add
mov
xchg
mulb
pop
cs
xchg
out
cmp
rorl
dec
jge
push
fdivrl
jb
int
push
and
ficomps
jns
cmp
ss
lods
lahf
and
dec
in
lods
out
xor
test
sbb
cmp
xchg
stos
xor
cmp
icebp
xor
bound
xor
aas
clc
and
movsb
dec
cmp
imul
div
pop
leave
leave
mov
jo
mov
test
pop
xchg
pop
lret
rclb
xor
mov
mov
dec
mov
mov
fstp
mov
and
dec
loop
and
cld
out
mov
int3
mov
outsl
imull
test
pop
test
cltd
mov
add
sbb
jbe
jge
inc
aas
inc
imul
test
push
add
pop
sub
test
sub
ficoml
pop
pusha
data16
adc
outsl
ffree
xchg
jae
scas
loope
out
mov
mov
xor
vcomiss
or
or
push
cmc
jo
call
ja
int3
sub
stc
mov
xchg
nop
mov
mov
ljmp
out
js
or
subl
fnstenv
sbb
insb
std
sub
arpl
or
add
add
movsb
jne
mov
data16
or
cltd
stos
mov
and
mov
js
pusha
mov
add
mov
add
clc
and
jecxz
dec
aam
lds
jge
push
test
movsb
pop
mov
and
inc
push
or
and
jb
cwtl
fcom
negl
imul
jmp
push
inc
andl
inc
add
add
insb
mov
int
cmpsl
xchg
push
cltd
cli
adcl
dec
xchg
inc
outsl
cmpsl
push
addr16
mov
scas
lods
pop
data16
push
push
sub
sub
dec
movsb
in
lret
and
das
loop
push
ret
cltd
bound
test
lock
in
pop
push
cwtl
sbb
mov
je
dec
inc
cltd
pop
inc
dec
or
push
adc
jle
lods
cmp
cmp
lret
inc
dec
mov
fsubrl
adc
and
xor
mov
ds
iret
andl
rcr
fdivs
repz
adc
xchg
inc
ret
cmp
stos
xlat
add
pusha
cmp
mov
dec
movsl
pop
ret
sbb
sub
dec
clc
mov
ror
adc
dec
pop
adc
aam
sbb
xchg
sbbb
ja
lcall
inc
aam
jecxz
xchg
dec
xchg
icebp
xchg
icebp
aas
outsl
jae
mov
out
push
fsubp
cld
movsb
jb
test
pop
cmp
inc
les
push
mov
sbb
mov
push
add
xchg
add
mov
cs
out
outsb
ret
mov
subb
jge
gs
or
out
mov
xchg
mov
test
test
and
fdivl
movsb
insl
jb
inc
adc
xchg
jmp
lret
aam
push
loop
mov
jo
jnp
fisubrl
pop
in
lock
xchg
movl
adc
mov
in
mov
arpl
dec
iret
sub
and
mov
mov
jl
adc
pop
mov
adc
sbb
subl
lcall
ss
push
inc
sar
push
outsl
sub
jnp
aam
shlb
cmp
xchg
jge
iret
push
adc
jecxz
in
inc
or
mov
push
ljmp
dec
repnz
ja
jne
sbb
jno
or
add
jnp
outsl
push
cmp
push
popf
sub
xchg
icebp
dec
mov
mov
pusha
and
xor
or
test
jmp
mov
out
xchg
out
xor
ficoms
je
lcall
mov
sbb
aam
inc
adc
xor
fwait
lret
out
xchg
adc
rcrb
jns
roll
sbb
mov
or
mov
rorb
es
and
mov
inc
add
cld
sbb
cwtl
add
nop
push
enter
ljmp
add
jae
stc
sub
dec
mov
addb
dec
mov
rclb
push
shl
scas
arpl
rorl
mov
mov
pop
shrl
sub
jg
rcrb
loope
xchg
push
lock
cmp
jecxz
mov
int3
loop
popa
pop
push
fmull
add
sub
inc
lods
dec
inc
aaa
shr
xlat
shrl
mov
ss
inc
hlt
or
out
stc
pop
mov
ss
dec
or
cmpsl
lret
push
and
fbld
lock
fcmove
lea
adc
or
daa
mov
sahf
adc
jge
adcb
addr16
mov
add
clc
xchg
out
dec
mov
arpl
mov
inc
sub
icebp
sti
mov
xchg
pop
cmpl
cmp
sub
push
jae
shrl
add
popa
inc
scas
das
mov
stc
and
inc
in
mov
rorl
dec
std
mov
les
imul
clc
movsb
dec
and
mov
jne
lret
or
sbb
dec
jg
orb
scas
into
mov
jns
inc
fisubrs
not
mov
ljmp
bnd
mov
and
out
xor
mov
andb
cmp
push
std
dec
jo
pop
in
xor
inc
std
mov
into
and
lcall
faddl
xor
sbb
lahf
call
loop
adc
dec
add
cltd
cmp
scas
sti
outsb
test
into
shll
mov
mov
jle
xlat
cmp
sbb
jl
and
js
dec
adc
mov
xchg
jp
fmull
push
sbb
jp
lock
jns
mov
jmp
mov
insb
pop
cmpl
or
mov
mov
inc
sbb
sarl
jns
mov
adc
or
mov
imul
mov
push
inc
cltd
push
mov
sbb
xlat
mov
and
je
mov
mov
dec
push
js
xor
popf
cltd
mov
divb
push
insb
andl
and
xchg
ljmp
adc
jnp
faddl
mov
or
lahf
xor
push
or
outsl
loop
and
push
cmp
ucomiss
repnz
inc
ret
cmpsl
in
rcrb
ja
xchg
adc
cmp
shll
lea
or
js
fistpl
stos
je
mov
push
int
out
shl
jne
inc
shrb
cmp
lds
jle
ja
outsb
adc
cmp
push
pushf
mov
repz
adc
or
sub
sahf
les
dec
stos
nop
mov
lea
sbb
pop
aaa
pusha
loop
jae
xor
mov
adc
enter
ficoml
dec
cmp
jl
mov
and
and
mov
adc
or
jne
mov
jns
arpl
imul
cs
add
push
lock
xchg
mov
xchg
out
jg
scas
or
out
push
mov
cmp
shll
pop
add
cmpsb
adc
movsb
je
or
mov
jns
cmpsl
stos
mov
repz
xor
test
cmpsl
push
in
mov
inc
movsb
or
call
cmpsb
sbb
adc
insl
iret
fiaddl
int
mov
or
ljmp
enter
loop
pop
jb
cmp
jne
adc
push
add
jns
dec
and
movsl
pop
mov
shl
fcomps
arpl
cwtl
jae
mov
loop
add
mov
aam
in
add
popa
push
mov
ds
fbld
in
sub
pop
les
aaa
lea
fidivrl
aam
arpl
icebp
push
push
mov
rcll
xchg
cmpsb
xor
lds
mov
in
inc
mov
mov
cmp
int3
jecxz
leave
popf
repz
insb
rorl
cmp
int
add
jae
data16
add
xorl
aas
in
lret
ret
mov
adc
pop
inc
xchg
cmp
testl
in
or
mov
test
lret
shll
int3
inc
pushf
fdivs
int
scas
pop
pushf
je
jbe
fidivrs
enter
out
cmp
pop
jno
pop
rcrb
in
sub
imul
lret
call
xchg
test
enter
daa
mov
adc
icebp
fiaddl
mov
in
shl
std
pop
test
mov
inc
cld
xchg
test
clc
push
std
pop
cmc
lods
sub
xor
enter
adc
cmp
or
mov
movsl
mov
pop
jl
push
mov
mov
call
shl
mov
mov
sbb
outsb
ss
fmulp
dec
dec
xor
lcall
movsb
shl
dec
jnp
rol
adc
in
in
xor
les
push
enter
imull
mov
cld
and
test
and
fnstenv
xor
xor
mov
sarb
inc
add
js
mov
jl
dec
pop
cmc
push
pop
sbb
mov
sub
rcll
sub
cmp
cmp
push
addr16
mov
sar
sub
xchg
cmp
clc
std
fdivs
xchg
pushf
add
mov
pushf
les
and
fcomps
cmp
imul
js
mov
sbb
test
jmp
push
inc
push
repz
ret
je
pop
pop
mov
iret
enter
repnz
int3
sbb
sub
rcll
stos
pop
stc
cs
scas
jmp
iret
clc
std
mov
cltd
sub
ljmp
cwtl
inc
andb
adc
ror
mov
push
repz
inc
gs
daa
pop
sbb
imul
or
or
in
pop
xlat
aas
bound
mov
jo
mov
into
mov
jno
jmp
mov
ret
repz
movsb
popf
in
orb
in
pop
and
sbb
test
sti
mov
sbb
push
mov
push
mov
mov
in
addr16
push
nop
sahf
inc
fcomps
dec
xchg
inc
iret
pop
rolb
jae
cwtl
add
adc
das
loopne
mov
mov
test
jecxz
mov
bound
push
ret
icebp
aaa
cmp
jno
fisubrl
push
xor
cmp
jp
enter
sub
adc
fisubl
mov
ss
mov
dec
ret
cmp
sub
adc
pop
dec
movsb
lret
imul
sbb
cli
sub
int3
insb
jmp
imul
jae
add
dec
xor
out
xchg
insb
popa
jmp
adc
jmp
rcl
lret
leave
xlat
push
fimuls
iret
add
push
ss
shrl
inc
push
jns
mov
gs
push
pop
insb
xchg
xor
inc
jne
int3
and
xchg
mov
es
pop
lds
and
mov
subb
cltd
cmp
je
ss
xchg
inc
xchg
jge
cmc
bound
pop
jecxz
mov
cmp
insb
xchg
dec
inc
mov
add
mov
xor
and
cmp
stos
xchg
or
xchg
repz
cmpsb
xchg
cmpsl
lock
mov
stos
add
add
xlat
sbb
hlt
fistl
enter
pop
imul
loop
and
or
ret
js
ds
jae
sahf
mov
movsb
bound
out
mov
xchg
xor
jmp
imul
jnp
jbe
xor
jle
ret
aad
push
dec
shlb
int
cmp
lds
or
out
hlt
pop
es
xor
test
imul
lds
out
cmpsl
loop
popf
or
mov
push
int3
aam
and
xor
das
icebp
dec
rorb
popf
mov
ror
jle
insl
dec
cmp
jl
sbb
mov
out
xor
loope
cmpsb
cmp
out
jbe
test
cld
cmp
jp
fmuls
daa
inc
dec
out
adc
jno
je
arpl
dec
mov
mov
jle
stos
sbb
std
dec
loopne
sbbl
and
xor
cmp
shlb
stc
idivl
fidivrs
sub
loopne
fidivs
stos
pushl
jnp
inc
rol
lods
mov
sbb
push
lret
arpl
es
or
jae
xchg
add
aaa
inc
std
sbb
jno
loope
sar
in
pop
pop
in
pop
test
cwtl
cmp
mov
jp
movsl
insb
jbe
mov
mov
into
push
jo
mov
daa
jecxz
outsb
mov
lret
gs
xchg
xchg
sub
test
push
gs
stc
je
jmp
push
and
lea
push
data16
mov
mov
sub
rolb
cmp
xchg
xchg
push
add
mov
adc
repnz
mov
inc
mov
les
lds
cmpsb
bound
out
inc
sub
pop
cmp
cmp
add
lds
pop
jmp
adc
add
add
cs
xchg
aam
cmpsl
outsl
jmp
lret
cmp
mov
stos
pop
cmpsl
xor
inc
outsl
pop
enter
fidivl
xchg
inc
rorb
inc
add
mov
add
jp
and
jnp
or
xchg
push
pop
push
arpl
dec
daa
pusha
inc
jge
mov
push
xchg
dec
jle
mov
pop
jno
pop
mov
jno
or
cld
push
and
pop
or
cmp
fcomps
leave
in
xorb
aaa
xchg
aam
push
orb
mov
xor
and
loop
or
pusha
cmpsl
inc
inc
test
aaa
leave
dec
jb
mov
inc
xor
adc
dec
xor
pop
sbb
xchg
pop
mov
hlt
mov
jns
and
test
jecxz
jp
je
add
cmpsl
test
mov
les
hlt
pop
test
mov
sub
sbb
adc
sbb
xchg
lea
mov
les
test
in
xor
cmp
in
mov
pusha
fstpt
push
cmp
fildl
push
movsl
bound
push
js
inc
adc
call
push
add
mov
or
sub
pusha
jg
cmp
and
iret
pop
ret
stos
int3
fnstenv
inc
andl
bound
mov
out
jp
adc
incb
shll
or
es
gs
rorb
sti
cmp
push
ss
ret
cmpsb
int
shll
cmc
dec
test
das
push
out
stc
push
dec
movsl
js
sbb
lock
fwait
mov
test
rcpps
iret
xor
mov
cmp
push
dec
scas
jle
and
lds
imull
inc
adc
pop
push
imul
das
flds
movsl
mov
setp
xchg
mov
rcr
fidivrl
ret
cld
cmp
dec
cltd
dec
xchg
movsb
cld
mov
insb
cmp
shlb
xor
dec
addl
pop
getsec
or
out
xchg
insb
repz
inc
push
mov
xor
push
cmp
sbb
or
jne
lcall
test
push
mov
pop
xchg
mov
stos
jne
js
pop
pop
mov
mov
inc
jo
and
jmp
pop
cmc
cmp
mov
ds
fsubr
in
inc
repnz
stos
rorl
insb
jbe
cmp
sbb
jl
cwtl
sbb
sahf
adc
adc
jne
inc
das
out
inc
cmpsb
lea
in
sbb
pusha
out
out
jno
push
xchg
pop
and
jg
andb
cltd
xorb
xchg
or
push
push
mov
pop
jno
fmul
pop
out
test
mov
dec
insb
dec
xchg
mov
nop
adc
outsl
verr
ja
out
add
ja
lods
jbe
ret
out
in
push
sub
ljmp
cmpsl
xchg
fwait
out
scas
and
adc
lods
scas
cmpsb
cmp
insb
cmc
xchg
sahf
mov
dec
xchg
xor
ds
add
jb
pop
pop
inc
shll
in
data16
ret
xchg
das
data16
jns
mov
adc
rcr
inc
inc
and
cmp
data16
in
mov
cltd
mov
enter
orb
cmpsb
sbb
and
stc
inc
mov
jecxz
add
test
adc
out
cld
std
out
fistpl
data16
imul
dec
dec
and
mov
cli
and
mov
and
sub
dec
jne
or
arpl
adc
xor
cmovno
aad
mov
out
adc
mov
push
push
add
ljmp
in
fdivl
cmpsb
dec
pop
mov
push
push
aam
mov
adc
stos
add
lea
lahf
insl
negb
mov
decb
or
push
adcb
push
pusha
xchg
mov
push
out
add
rsqrtps
push
clc
scas
push
add
or
andl
jmp
and
ds
adc
out
or
gs
push
sbb
push
xor
mov
adc
shrb
lock
and
ret
sub
das
cltd
dec
into
pop
jns
mov
push
inc
das
imul
stc
mov
repnz
push
adc
push
adc
jb
ss
jmp
pop
sbb
adc
mov
pop
rcr
mov
divl
fsubrs
mov
jecxz
lods
or
repz
jnp
push
mov
out
jnp
xchg
test
stos
imul
mov
popa
repz
xchg
rcrb
rolb
aad
out
xor
pop
jg
adc
shrl
push
mov
mov
jo
xor
lret
popa
inc
mov
and
lds
mov
jge
and
xor
push
cmpsb
insl
or
addr16
jg
cld
jb
cmpb
adc
es
test
shll
sbb
cmp
rcl
out
mov
mov
jmp
enter
inc
aad
mov
mov
push
jge
call
scas
cwtl
ror
cmc
cmp
mov
lock
adc
stos
pop
sbb
adc
ficoml
hlt
jae
aaa
out
clc
outsl
push
test
add
push
add
mov
mov
inc
sub
stos
frstor
jge
mov
ja
mov
dec
repz
jg
mov
adc
lods
rolb
jnp
add
sbb
loop
mov
fwait
cmp
xchg
cmpsl
lock
sbb
out
scas
or
leave
int
in
xchg
and
sub
xor
in
inc
jge
fnstsw
dec
je
jl
scas
out
cmp
lret
sub
lds
xchg
scas
pushf
mov
js
loopne
arpl
or
repnz
lds
mov
fnsave
out
sarb
lock
adc
dec
cwtl
popf
push
stos
daa
mov
aas
lahf
cwtl
ret
and
sbb
arpl
cmp
mov
outsb
sarl
jg
scas
fidivrl
or
mov
add
dec
stc
jnp
sbb
xchg
shl
push
gs
push
or
dec
fmul
hlt
ss
stc
into
sti
and
pop
repnz
pusha
std
jae
and
xor
xor
popa
or
and
pop
out
aad
dec
xchg
loop
and
lahf
cli
int
jne
add
jae
mov
sbb
cwtl
sub
cmc
mov
idiv
adc
cmpsl
sub
imul
mov
pusha
aam
fidivl
mov
in
push
inc
adcb
les
lcall
inc
adc
pop
sub
jg
ret
push
jo
dec
dec
push
cmp
mov
cmp
fistps
ja
test
into
test
adc
xchg
sahf
lret
xor
gs
push
mov
or
into
cmp
outsl
jle
out
pop
pop
ret
mov
inc
adc
adc
cmp
lret
jge
push
cmp
mov
inc
push
inc
dec
fcmovnbe
jl
jecxz
or
ljmp
out
sbb
add
mov
pop
add
jmp
adc
aaa
lods
push
add
xchg
push
lods
dec
inc
and
dec
jecxz
or
jl
adc
inc
mov
scas
cs
pop
imul
cs
cwtl
or
orb
popf
jg
call
push
loope
cs
imul
push
xor
and
push
pop
and
lret
sbbb
movsb
pop
lret
jg
adc
popf
test
push
jmp
pop
pop
add
adc
jo
mov
ret
or
cmp
mov
stos
test
jns
mov
ds
fwait
xor
dec
popf
test
cmpsl
sbb
and
sbb
mov
test
in
jb
aam
pop
test
mov
push
mov
pop
pushf
xor
addr16
add
rorl
and
repz
cmpsl
pop
add
fisttpll
jge
add
mov
repnz
pop
lret
add
and
and
push
and
neg
mov
adc
cld
pop
pop
xchg
mov
jb
lret
int
test
push
xor
lret
loop
scas
loop
shlb
sbb
pop
in
adc
movups
xchg
bswap
and
loopne
int3
xchg
jnp
stos
rorl
js
ljmp
sub
push
int3
inc
test
cld
xor
dec
xor
jl
xchg
in
sbb
inc
nop
push
mov
add
adc
adc
shl
scas
loopne
mov
mov
aam
mov
jnp
mov
push
ret
dec
int3
in
nop
pop
int
aam
fstpl
dec
in
imul
es
js
push
xchg
test
into
outsl
jmp
jno
dec
dec
sbb
and
repz
idiv
xorb
inc
out
ficoms
xor
ljmp
imull
insl
in
mov
push
push
test
scas
pop
xor
cmp
xor
clc
mov
mov
mov
pop
pop
lea
add
sahf
and
outsb
mov
stc
cwtl
xchg
pop
data16
gs
inc
faddp
repnz
jg
xor
adc
mov
daa
fists
inc
iret
aas
rcpps
es
push
and
lds
inc
loope
sub
add
pop
inc
repz
xchg
jnp
in
adc
adc
mull
xor
sub
adc
xlat
jno
push
in
cmp
cmp
xchg
imul
push
and
lea
push
add
pop
and
rorb
lds
loop
lock
gs
jbe
repnz
loope
sbb
xor
inc
jle
cmp
aam
movsb
add
adc
push
or
lret
loope
sbb
movsb
mov
jbe
fxch
fiaddl
cmpl
push
xchg
pop
sub
push
inc
lret
jp
test
jle
es
add
and
in
xchg
clc
xor
xchg
xchg
rcrb
pop
rcrl
je
push
cmp
fldl
popa
das
push
jg
mov
mov
push
ja
push
enter
push
add
pop
ss
mov
and
and
pop
mov
xor
pop
pop
int3
or
jne
xchg
stos
dec
jp
cld
enter
notb
lds
leave
shr
idivl
repnz
sbb
imul
adc
pop
movb
jbe
adc
adc
jmp
loope
push
lods
daa
ficompl
fstpl
ja
push
clc
out
push
cmp
cwtl
aas
sub
inc
and
sub
pusha
arpl
push
mov
xchg
arpl
cmp
test
movsl
arpl
adc
mov
insl
cmp
insl
cli
jl
jnp
data16
in
cs
cmp
push
gs
fld
mov
mov
popf
push
movl
pop
jo
push
sbb
lcall
or
sub
popf
pop
add
ja
test
lods
outsb
xchg
mov
arpl
mov
jp
sbb
sti
dec
cmp
mov
or
rcll
out
rcll
mov
inc
ror
xor
sti
sub
pushf
sub
sub
push
mov
cmc
inc
hlt
xchg
xchg
jge
stos
mov
mov
in
leave
sti
shrl
sahf
lret
mov
ret
out
xchg
pop
mov
pop
dec
lahf
cmp
scas
call
loope
mov
jmp
aas
cmp
xchg
cmp
mov
aaa
jle
mov
mov
xchg
cmp
loop
cmp
icebp
lods
jg
inc
or
lea
push
cmp
and
or
mov
loope
jo
imul
sbb
jecxz
mov
jne
xlat
ret
ret
ficoms
xchg
and
jecxz
mov
mov
mov
push
adc
notb
scas
jg
nop
or
sbb
cltd
clc
outsl
mov
fbld
pop
or
shll
call
xchg
mov
cmp
scas
sub
cmp
xor
aad
or
xchg
in
sti
lret
fsubrl
testb
shlb
cli
inc
jae
cmp
fwait
inc
add
add
fisubs
pop
mov
fwait
mov
incb
into
std
ds
dec
int
test
push
xor
sbb
mov
shl
scas
in
aas
mov
dec
lods
repz
dec
fwait
sub
cmp
stos
pop
and
pusha
data16
add
leave
xor
in
add
dec
adc
nop
lods
and
mov
test
mov
rcll
std
mov
sbb
or
mov
and
movsl
pop
mov
or
out
popf
loopne
loopne
pop
repz
leave
scas
dec
and
mov
adc
pusha
test
sahf
pop
pop
jl
mov
dec
int
inc
arpl
mov
loope
int
xor
mov
orl
cwtl
scas
inc
outsl
imul
and
add
mov
jbe
incb
cmp
loop
out
test
pop
aas
enter
repz
xlat
nop
lods
fcmovnu
das
int
sub
out
cmp
mov
imul
fisubrs
push
adc
or
sbb
push
in
mov
sbb
popa
mov
mov
fisttpll
cmp
sub
jb
cmc
push
sub
mov
icebp
add
movsb
lods
jo
dec
cmp
fs
stc
enter
loop
pushf
push
pop
jp
cmpsl
dec
test
iret
out
sarl
sbb
das
ds
push
das
inc
ret
daa
cmp
cli
push
in
insl
dec
sbb
les
or
int3
pop
in
rol
sbb
mov
enter
push
daa
push
rorb
sub
incl
neg
sub
fwait
mov
xlat
mov
cmpsb
cmp
in
outsl
lds
test
scas
cmpsl
sbb
lret
adc
sbb
push
xor
test
or
sub
gs
mov
adc
add
xor
ficomps
icebp
jge
repz
inc
sbb
sahf
fmull
fldcw
jbe
and
sbb
cmp
cmp
xor
jecxz
sbbl
dec
sarb
and
pop
add
sti
cmp
int3
push
lcall
es
insl
mov
add
jne
sbb
das
shr
gs
in
cli
ss
xlat
enter
scas
lret
xchg
in
dec
xor
dec
int3
jmp
popf
mov
xor
lret
jbe
sbb
mov
das
mov
rcll
xchg
outsb
cs
xchg
ja
pop
lods
std
xor
jo
call
mov
push
arpl
push
cwtl
xor
mov
xor
int
add
cmp
fisubs
inc
aam
jg
fwait
jge
outsb
push
xor
lret
lods
xor
add
dec
xor
add
in
push
adc
mov
jo
pushf
sbb
stos
xchg
mov
jp
outsb
imul
outsb
mov
xor
repz
rorl
stos
mov
int3
cmp
dec
ror
std
mov
jbe
stc
sarl
int3
sarb
insl
into
les
repnz
rclb
fists
xchg
or
dec
or
movsb
pushf
aam
dec
icebp
xor
xchg
cmp
mov
test
adc
sbb
subl
adcl
shr
fstpt
jns
pusha
jno
nop
and
das
repnz
dec
ljmp
and
xchg
loop
bound
mov
stc
test
loop
je
xor
popa
mov
les
test
pop
sub
cmp
xor
lods
mov
ficomps
pushf
push
in
adc
out
sub
jmp
and
divl
jl
out
in
mov
jne
mov
test
and
pop
mov
or
adc
mov
jle
nop
mov
xor
jg
mov
cmp
fcoms
xchg
sub
inc
mov
cmpsb
ljmp
xchg
mov
cmp
xchg
sbb
adc
aaa
pop
fcomps
lock
mov
popa
cmpsb
cmpl
test
or
adc
mov
out
mov
add
pop
popf
fs
cmp
into
idiv
repz
jno
pop
pop
add
je
add
sbb
mov
add
mov
dec
das
out
pop
addr16
loop
xchg
xor
mov
les
je
pusha
cmp
fs
rcl
cmp
mov
cmp
and
loope
lcall
in
cltd
enter
cmp
lds
shl
scas
pushf
mov
pop
adc
es
add
and
xchg
cmp
pushf
sbb
jecxz
push
in
lahf
mov
or
sti
jno
sub
xchg
pop
outsl
mov
leave
fdivrl
jno
dec
cld
pop
fs
popa
clc
add
pop
fldcw
daa
mov
jg
notb
in
sub
jne
push
jb
mov
push
jge
dec
mov
cltd
sbb
fidivs
loope
sub
inc
or
fdivrs
mov
cmc
add
xor
xchg
inc
add
movsl
pop
mov
je
lods
nop
mov
std
lods
subl
in
fildl
push
sbb
lods
mov
dec
inc
and
jp
cmpsb
push
lret
aas
push
or
mov
jl
push
ljmp
mov
dec
mov
cmp
adc
xor
aam
xor
push
dec
xlat
repnz
pop
cmc
cld
les
cwtl
cmp
inc
in
in
movsb
not
mov
popa
gs
xor
mov
out
lea
jbe
dec
add
xor
sub
out
out
popa
rcrb
jmp
mov
xchg
out
and
aad
out
dec
rorb
mov
mov
cli
jp
sub
pop
pop
out
and
data16
lods
movsl
mov
out
mov
sub
cmc
das
in
and
and
inc
or
decb
int
and
cmp
pop
push
test
lcall
and
stos
repnz
push
jmp
fwait
xor
mov
popa
mov
fwait
cmpsl
outsb
in
push
xor
pop
adc
push
adc
andl
mov
popl
sarl
arpl
stos
sahf
adc
outsb
lds
cmp
lods
and
add
mov
push
or
loope
subl
adc
and
sbb
or
aas
cmp
add
inc
das
mov
dec
xor
xchg
imul
cmp
out
inc
and
cmc
lret
sub
adc
es
adc
adc
cltd
outsb
push
in
icebp
sahf
xchg
lods
push
mov
sub
repz
push
jmp
dec
mov
int
ja
add
icebp
fwait
dec
or
pop
jo
adc
mov
fisubl
dec
repz
or
adc
test
mov
mov
cmp
jo
movsl
mov
jns
sbb
inc
cmp
mov
adc
pop
cmp
mov
addb
pop
pop
call
ret
adc
sahf
lods
shll
fsubl
dec
dec
pusha
js
shll
jae
push
pop
push
loop
push
pusha
dec
fistpl
cwtl
dec
out
faddp
out
out
xchg
dec
stos
shl
pop
pop
push
das
in
imul
hlt
and
hlt
jmp
mov
sub
addr16
lcall
stos
push
jbe
scas
in
jnp
out
test
addr16
lods
adc
aad
dec
lcall
scas
sub
int
movsb
int3
cmp
jns
pslld
push
jge
enter
aas
out
lods
jecxz
icebp
xchg
push
rorl
mov
cmp
scas
out
push
enter
loope
cmp
mov
mov
sbb
je
pop
push
xchg
jle
imul
into
jmp
push
loop
shrb
xlat
inc
xor
mov
push
mov
cs
xchg
mov
outsb
testb
imul
idivl
std
aad
iret
jns
xchg
sub
jb
add
rcl
xor
sub
lcall
sbb
xchg
or
testl
out
sbb
or
loop
push
stos
sbb
in
ljmp
scas
cmp
mov
inc
out
shll
movsl
mov
push
jnp
push
dec
outsl
in
ss
int
es
aad
jne
aad
movl
xchg
je
jae
jle
repnz
stos
jae
scas
daa
add
ljmp
inc
leave
or
push
push
into
inc
and
bound
sub
jnp
mov
orb
adc
leave
add
push
fbld
ficompl
push
jo
imul
rcrl
out
addl
mov
xchg
stc
inc
dec
call
add
pushf
adcl
fildl
aas
push
movb
push
loopne
push
xchg
push
cltd
add
gs
cwtl
or
gs
dec
icebp
leave
leave
shlb
sbb
mov
inc
in
inc
imul
repnz
jl
xorb
xchg
fdiv
mov
scas
push
lds
ss
sbb
jnp
mov
bound
inc
xchg
jae
add
or
mov
mov
pop
or
das
sbbl
sub
aaa
dec
lock
inc
arpl
xchg
pop
aam
int
or
ret
mov
clc
xor
adc
and
dec
pop
inc
std
cmp
or
into
cmp
int3
mov
adc
inc
push
rcl
movsl
les
popf
imul
jl
addr16
and
sbb
lcall
jecxz
ror
cmp
test
push
adc
icebp
shlb
and
jno
mulb
sbb
xor
js
cmp
fstpl
mov
ss
call
mov
xor
pop
push
mov
push
js
cmp
xchg
push
xchg
xchg
es
test
je
pusha
push
loop
ljmp
je
mov
repnz
std
js
xchg
aad
lods
xchg
fcmovnu
loopne
test
clc
pop
les
jbe
xchg
out
mov
adc
inc
jge
cld
rclb
jae
sbb
or
out
clc
movsl
mov
xor
leave
sbb
mov
sub
sti
pop
and
imul
xlat
out
shlb
mov
or
sahf
xor
dec
inc
cmp
fsub
mov
icebp
iret
lfs
into
fwait
andl
outsl
dec
and
fcomps
push
inc
push
inc
and
fcoml
insl
lcall
push
sarl
xorb
mov
rolb
repz
test
das
data16
mov
ds
cmpsl
fdivr
test
xchg
push
push
mov
insl
mov
mov
iret
lcall
jmp
sbb
mov
mov
out
xor
aam
dec
jns
adc
sbb
loopne
sub
push
cmp
fwait
add
cmp
adcb
sti
mov
test
enter
sub
and
test
xchg
pop
jnp
adc
fidivs
test
ficoml
fcoms
mov
or
iret
test
xchg
mov
popf
and
sbb
cmp
adc
negl
mulb
jnp
add
loope
les
dec
pop
push
mull
stos
cmpsb
xor
push
adc
lods
loope
and
ja
int
pop
xor
mov
add
mul
mov
insl
pop
add
aaa
xadd
shlb
mov
jecxz
loop
mov
push
fistpl
pop
es
rolb
or
int3
jo
in
cltd
cmpsl
push
push
dec
dec
pusha
bnd
xor
in
repz
das
push
adc
cmp
js
mov
shll
jmp
xchg
jo
movsl
sub
mov
std
mov
add
cmp
and
in
mov
icebp
pop
cltd
ret
mov
test
movsl
lea
pop
inc
arpl
repnz
rcll
dec
fistl
or
jge
sbb
into
mov
sub
xor
rcrl
pop
icebp
sti
fiaddl
mov
out
in
xchg
enter
jmp
cli
rcrb
imul
ficoms
mov
iret
das
in
xchg
setb
push
mov
sbb
movsb
push
mov
cmp
jns
in
inc
cwtl
sarb
cmp
mov
push
lret
mov
push
xchg
je
xor
aad
imulb
xchg
decl
dec
jg
gs
es
xchg
inc
rclb
std
cld
dec
outsl
sahf
out
neg
daa
mov
jp
push
int
push
jmp
lret
loopne
insb
jno
mov
imull
mov
out
loope
daa
lods
sbb
jmp
rcrl
cli
push
leave
mov
div
test
shl
add
das
or
ds
fists
addb
mov
gs
dec
sub
incb
pop
mov
loope
or
jns
mov
arpl
or
and
insl
mov
pusha
inc
movsb
das
add
push
pop
jnp
mov
add
cmpsl
sbb
inc
mov
sbb
inc
xor
fdivrp
or
pop
orl
xor
das
inc
sub
and
ret
xchg
sahf
cld
cmp
xor
cmpsl
jl
cld
xchg
aad
jne
push
pop
sbb
je
bnd
sub
ret
push
es
add
mov
out
xchg
out
out
push
jnp
in
cmp
xor
push
push
adc
lods
pop
pushl
std
inc
decl
mov
push
xchg
popa
pop
jbe
shll
or
ja
inc
xor
xchg
jns
cwtl
ficompl
adc
lods
push
cmp
in
lahf
cmp
sti
add
inc
sbb
lahf
add
sahf
or
sbb
xor
sahf
scas
cwtl
arpl
subl
divl
and
push
out
jp
in
sub
insl
cmc
cli
sbb
or
popa
xor
xchg
mov
shrb
lea
xor
xchg
add
movsl
add
jbe
or
loopne
loopne
pandn
rorl
cmp
jno
add
je
cmp
out
mov
cmp
xor
stos
lea
inc
jge
je
loope
out
mov
inc
lahf
or
in
or
insl
cmpsb
or
adc
pop
and
out
sub
sub
sub
sub
int
add
mov
lods
lea
push
dec
fsts
fcomp
jno
nop
push
addb
mov
push
in
and
push
mov
adc
sbb
leave
stos
push
ret
icebp
cltd
call
inc
enter
push
jge
ret
add
lea
lods
frstor
test
or
jge
ja
jns
cmp
fidivl
push
sbb
inc
out
idivl
orl
scas
arpl
lods
push
fxch
xchg
arpl
fsubl
fucomp
pop
cmc
sub
pop
test
test
mov
add
les
jno
hlt
icebp
mov
add
popa
loopne
fmuls
insb
lods
xchg
loopne
insl
in
push
mov
popa
clc
inc
mov
cltd
ret
inc
jnp
cs
or
adc
xor
push
imul
into
popa
mov
and
nop
out
cmp
out
cmpsb
nop
scas
aas
lret
mov
jae
ret
adc
stos
cld
sahf
and
flds
lods
xor
popf
mov
je
push
in
push
push
int
stc
add
das
jnp
mov
xchg
icebp
inc
xchg
mov
jecxz
or
adc
shll
xor
sti
or
jo
icebp
cmpsb
add
jne
leave
and
sbb
pop
mov
mov
dec
imul
sti
add
xor
jg
lea
aas
addr16
int3
xor
ret
push
jmp
mov
mov
push
pop
xchg
pop
inc
and
or
sti
jne
and
pop
ja
xchg
cmc
loop
fidivs
cmp
jge
leave
loop
inc
adc
mov
or
mov
jp
out
sbb
roll
sub
mov
xor
push
sahf
mov
or
push
xchg
and
jl,pt
loop
xchg
out
jle
fisttps
mov
mov
cmp
fistps
xchg
into
or
cwtl
dec
push
lods
dec
rolb
faddp
and
xchg
and
xorb
outsl
cmp
nop
dec
push
push
xchg
addb
xor
pop
jbe
push
adc
insb
es
and
xor
out
fsts
add
cmp
jns
xchg
cmp
lcall
cmp
arpl
push
aad
ljmp
into
es
imul
cmpsb
divb
fst
xchg
stc
lods
test
fdivl
cmp
sahf
jl
int3
and
inc
fcoms
addb
xor
xlat
popl
clc
inc
rorl
dec
inc
shl
xchg
cmc
punpckldq
dec
sbb
aas
iret
aas
cmp
scas
nop
inc
test
dec
jno
sub
scas
dec
inc
sbb
fdivrl
add
or
test
pop
xor
into
pop
int
lcall
int
daa
insl
popa
ffree
and
mov
xlat
adc
and
adc
mov
mov
push
pop
lret
fsubl
inc
mov
test
stc
out
add
pop
cmp
pusha
loopne
mov
sub
xchg
roll
lret
xor
cmp
stc
aam
bound
jg
and
jecxz
sub
out
negl
pop
pmuludq
jecxz
jae
daa
icebp
lret
mov
mov
repnz
push
jge
cmp
dec
fsubrl
mov
mov
xlat
mov
jp
mov
or
mov
xor
jg
mov
insb
dec
sub
xchg
into
or
pop
push
sbb
jno
push
mov
dec
mov
aas
repz
and
xchg
xor
stc
push
clc
andb
and
mov
jo
push
in
adcl
repz
scas
je
mov
jle
shrl
and
aam
mov
clc
inc
jg
cmp
outsl
test
call
sub
jmp
clc
jno
xchg
jmp
outsb
imul
xchg
loope
and
add
test
fistps
dec
enter
xor
push
sbb
inc
dec
push
xchg
nop
mov
mov
popf
pusha
shlb
cs
pop
xchg
shll
mov
lret
test
repz
sar
pop
fildll
inc
gs
sub
iret
mov
push
jbe
or
pushf
out
inc
lahf
lods
xchg
mov
push
pushf
mov
sub
xchg
add
cmp
mov
pusha
or
les
sarb
aaa
sbb
mov
push
push
xor
int3
lret
xchg
das
in
lods
rolb
ss
add
dec
mov
das
jmp
inc
lea
sbb
ret
mov
mov
in
add
dec
inc
xchg
dec
and
mov
mov
or
call
inc
add
mov
lods
cmp
leave
bound
cmp
lea
nop
jle
jo
mov
jl
ljmp
or
and
std
call
fwait
mov
sbb
inc
sub
jmp
push
insl
xchg
push
cmpsb
hlt
jbe
mov
ja
lea
test
shll
sbbb
test
xor
insl
mov
dec
push
cmp
or
pushf
scas
sti
dec
repnz
sarl
adc
xor
cltd
adc
stc
cmpsb
push
leave
addl
push
iret
pop
lahf
rorb
push
daa
int
jmp
cwtl
shll
cmp
cltd
aam
xchg
stos
and
dec
stc
sahf
xchg
cld
push
lds
dec
loope
arpl
xor
ret
dec
je
sub
lea
jns
mov
cs
mov
cwtl
cmp
cmc
shll
mov
jmp
xchg
push
push
lahf
repz
cs
scas
xor
pop
jns
pop
sbb
into
ret
les
and
push
fxch
jmp
loop
xchg
cli
stos
xor
mov
jno
push
test
pop
xchg
insb
lea
add
std
add
jmp
jge
pop
repnz
inc
push
jbe
ja
sti
adc
adc
sub
js
and
xor
out
outsl
jnp
or
out
addb
xor
mov
repz
xor
aam
mov
pusha
in
or
push
incb
mov
xor
jne
mov
or
lret
adc
jl
test
es
stc
dec
dec
movb
cs
data16
out
nop
and
call
and
xchg
push
add
mov
call
and
and
mov
xchg
sub
andl
icebp
arpl
fs
out
or
cwtl
xchg
pop
stos
xchg
or
push
push
xchg
sti
leave
sahf
fdivrs
aaa
paddsw
gs
pop
sbb
push
push
nop
xchg
stos
mov
jge
xchg
cmpsl
pop
loopne
test
mov
inc
mov
jp
stc
jmp
jnp
imull
and
push
add
insl
mov
leave
ja
mov
leave
mov
ds
pop
loope
outsb
mov
and
cmp
cwtl
lret
negl
jp
inc
sub
stos
xor
inc
adc
cwtl
dec
sub
and
aam
push
xchg
addr16
jnp
xchg
or
bound
aam
scas
dec
add
lret
ss
cmp
fwait
ja
jne
add
mov
jnp
and
cwtl
stc
cld
roll
adc
jb
add
jle
cmp
inc
mov
mov
gs
enter
or
les
jge
andl
push
lods
in
push
lahf
fcomp
push
lea
cmpsl
xchg
shl
mov
in
dec
xlat
push
dec
ret
nop
lods
aas
or
dec
mov
mov
popf
popf
in
bound
mov
add
lret
xor
mov
add
outsb
lea
xchg
iret
xchg
test
stc
push
dec
xchg
cmp
scas
inc
xchg
and
or
pop
sbb
shlb
cmp
or
jp
popf
cmpsb
jae
jmp
hlt
pop
fisubl
mov
xchg
je
push
inc
daa
mov
dec
jge
fstpt
imul
outsb
add
fistpll
xchg
fcmovne
lcall
int3
das
popa
test
adc
mov
iret
addl
test
jae
or
mov
leave
push
sub
ret
enter
insb
sbb
or
jg
cld
mov
dec
into
cmp
std
es
cmp
inc
dec
in
jmp
sub
and
out
xor
cmp
pop
imul
stos
fstps
mov
mov
adcb
lock
mov
cltd
sbb
aam
cmp
loopne,pt
lahf
lods
pop
js
inc
aas
std
movsb
add
add
int
fsubl
ds
cmp
pop
movsl
fcoms
add
aam
xchg
test
out
outsb
add
mov
xor
vfmsub132ps
adc
or
inc
push
ds
xorl
cmc
mov
dec
mov
hlt
addr16
mov
xor
pop
shlb
test
jnp
shll
movsb
stc
mov
push
mov
mov
jp
shlb
pop
mov
aad
mov
jne
adc
aad
ss
stos
mov
and
ret
arpl
pop
push
int3
jns
jb
jno
cli
sub
outsb
push
xor
stc
or
lock
jl
cwtl
rcrb
pop
inc
movsb
push
ffree
xor
dec
andl
roll
jmp
cmp
xor
adc
int
mull
lret
push
sbb
fwait
sar
fcom
fcomp
push
push
lahf
sbb
into
xchg
push
pop
sahf
mov
sub
cmpb
jle
loope
push
imul
bound
shll
or
push
dec
dec
and
or
cli
and
jmp
mov
divl
and
sbb
adc
into
cmp
out
nop
jno
jle
and
cmp
sbb
inc
dec
cmp
mov
inc
lret
mov
mov
repnz
push
out
adc
pop
cmc
mov
dec
pop
scas
xor
mov
ret
mov
push
mov
test
vrcpss
dec
shr
mov
mov
xchg
pop
add
sbb
ficomps
mov
insl
pop
aaa
fwait
popa
adc
mov
sub
mov
mov
sub
mov
das
jae
or
fstl
mov
js
in
minps
jp
push
mov
pop
adc
in
cli
sub
cmp
rorl
fcomps
data16
xchg
or
inc
in
pop
test
xchg
bound
int
popa
xchg
lock
aas
insb
out
dec
jns
shlb
dec
lds
cltd
mov
mov
mov
mov
jl
add
rorl
mov
jg
ds
mov
pop
fnstenv
movsb
pop
xor
sti
sbb
insb
imul
fcomps
sahf
sbbl
outsb
pop
and
jne
je
addb
dec
pop
mov
push
dec
in
adcb
mov
inc
pop
fistpll
sbb
dec
out
mov
mov
mov
inc
jmp
mov
das
push
clc
dec
loop
in
pop
ljmp
mov
fildl
aad
les
mov
packssdw
dec
or
sahf
test
test
jmp
and
cltd
aam
outsb
out
pop
int3
sbb
jns
enter
fisttps
push
mov
jnp
rolb
es
lds
and
mov
lock
mov
lods
in
test
and
cltd
inc
add
es
sbb
insb
ficompl
repz
lahf
xchg
sbbb
and
lret
int3
clc
test
add
mov
aam
in
loopne
in
fldl
mov
jb
scas
and
sarl
push
into
pop
cmp
add
cmc
into
es
jge
xor
jp
push
xchg
jmp
nop
sub
push
in
xlat
adc
adc
mov
enter
filds
mov
stc
jmp
aam
push
imul
xchg
sbb
and
repz
mov
xorb
dec
lret
pop
loopne
into
sbb
xor
xlat
lods
jo
int3
add
inc
dec
popf
inc
insb
or
dec
les
mov
push
data16
mov
outsl
lret
test
ljmp
xor
scas
iret
pop
mov
push
sub
fcompl
aas
or
fdivrs
bound
popa
ror
loop,pn
jg
xchg
lahf
fucomi
cmpsl
std
push
cmp
je
cmovne
in
loop
adc
fwait
jmp
inc
xchg
mov
ljmp
fs
int3
mov
jbe
stc
dec
dec
push
call
js
push
mov
imul
xchg
pop
add
jae
jno
pop
mov
mov
cmp
popa
dec
shll
lcall
and
jns
sub
and
adc
outsl
call
cmpsb
movsb
add
cmc
or
add
rcrb
pusha
jne
sub
add
jae
jl
jge
aad
mov
in
call
add
push
jo
xor
pop
lods
int3
jg
cld
push
mov
loope
pop
fidivrs
inc
inc
bound
aad
xor
call
lcall
lret
iret
adc
arpl
push
pop
inc
test
leave
pop
imul
rorb
call
aad
xor
add
addr16
dec
xor
aaa
sub
in
negl
inc
adc
mov
mov
fistpl
mov
dec
or
or
aad
cmpb
jno
aad
sub
xlat
jp
xor
in
sti
and
cltd
daa
loope
sub
cli
push
jnp
and
xlat
add
daa
push
dec
sbb
push
pop
test
xchg
cli
ja
stos
mov
stos
dec
js
test
and
fldenv
inc
cmp
sbb
sub
out
sahf
aas
mov
pop
mov
cmc
push
enter
xchg
mov
add
fsts
mov
loopne
lret
cmp
xlat
cmp
aaa
sub
jle
dec
je
mov
adc
mov
arpl
jne
pop
in
mull
test
out
sbb
fwait
outsb
rcrl
imul
lahf
test
fistps
imul
and
and
mov
insl
cli
hlt
fisubl
rcrl
xchg
sahf
in
repz
xor
xchg
inc
mov
lods
mov
jne
mov
js
dec
pop
sub
pop
into
jp
cmc
inc
push
mov
cmpsb
movsb
pop
push
mov
std
dec
cmc
cli
scas
adcl
mov
mov
pop
or
jle
mov
dec
lea
clc
or
mov
mov
pushf
das
jno
adc
fs
jnp
or
jae
push
sbb
enter
jns
cmp
fidivrl
shl
sbb
push
out
rorb
loope
push
fsubrs
lock
lcall
ficompl
cmpsl
int3
jns
movsb
ret
in
je
and
jg,pn
xor
jge
pop
dec
add
cmp
scas
cli
lock
xchg
adc
loop
lret
lret
pop
dec
icebp
in
cli
sbb
xchg
mov
add
repz
xchg
jle
dec
lods
rcll
pop
cmp
or
or
test
and
or
xor
pop
cmp
inc
rol
mov
in
jl
fsubrl
ja
cmpsl
test
es
and
lret
jmp
iret
ljmp
stc
jg
add
xchg
jnp
add
push
into
dec
mov
rcll
ret
jmp
push
adc
jb
jbe
xchg
jle
pop
adc
popa
lret
mov
inc
sub
push
jp
adc
faddl
sbb
test
call
movsl
inc
sbb
repz
and
pop
scas
js
arpl
inc
add
xor
push
or
sbb
fistpl
mov
cltd
movsb
sbb
js
dec
cmc
mov
cld
sbb
adc
mov
pop
mov
mov
lret
subl
pop
inc
fiadds
int3
xchg
fs
inc
icebp
mov
xor
stc
mov
rcrb
addr16
mov
out
fsubrs
leave
ds
fs
shr
jp
mov
out
cli
lods
test
scas
mov
int3
decl
pop
stos
fsubl
into
push
cmp
shl
cmpsl
sti
inc
add
add
mov
mov
cs
pop
push
adc
add
in
orb
xchg
fsubl
cld
test
adc
ljmp
outsb
ret
out
cld
cmc
into
cmp
incb
xchg
sub
jns
and
movsl
mov
aam
outsb
ret
mov
cmpsb
push
lock
scas
imul
sbb
mov
jg
inc
icebp
xor
or
sub
add
filds
mov
inc
and
pop
dec
xor
das
insb
repnz
jns
stc
cmpb
ret
sub
out
lahf
mov
add
int
push
std
or
jmp
pop
mov
pop
push
push
dec
out
xor
push
adc
fisubrl
imul
stc
imul
stos
movsl
ljmp
and
lret
mov
loopne
cli
ja
jbe
fs
fidivrl
into
dec
cmp
xor
aaa
mov
aad
adc
jnp
xor
jp
movb
mov
addl
cmp
out
dec
cmp
mov
stos
jbe
mov
dec
pop
pop
out
cmpsb
nop
adc
mov
mov
add
enter
push
sarl
jns
xchg
mov
pop
popf
xchg
xor
lods
xor
adc
fiadds
xchg
mov
lahf
mov
xchg
xor
ret
dec
enter
popf
jp
outsl
push
out
or
xchg
or
push
jge
mov
xor
or
stos
stos
cmp
pusha
pop
ret
inc
xor
pusha
jbe
in
push
icebp
jl
and
loopne
push
sub
push
cmp
xor
pop
sbb
inc
lods
in
out
mov
leave
cld
leave
mov
pushf
fldenv
test
jae
adc
pop
aaa
ffree
inc
shll
outsl
fadd
pop
stos
sahf
ljmp
testb
push
enter
dec
ja
dec
scas
mov
push
loop
sbb
dec
dec
sbbl
jg
std
inc
ret
ljmp
shl
or
daa
shll
cmpsl
pop
mov
icebp
dec
sbb
mov
push
rcrl
dec
sbb
out
xchg
pusha
and
repz
loope
mov
je
dec
sahf
and
add
push
dec
lcall
rcr
xlat
push
adc
push
roll
adc
jbe,pn
and
mov
test
sub
cwtl
loopne
adc
sahf
jns
aam
mov
mov
rclb
dec
mov
push
and
mov
sbb
mov
mov
sub
xchg
in
mov
jb
sbb
mov
out
push
xor
outsl
imul
mov
lret
in
std
pop
sbb
outsb
pop
test
lret
pop
out
cmp
add
cmpsb
mov
fstp
rcll
lret
call
jle
push
and
int
and
movsb
or
leave
leave
lcall
lock
ficoml
dec
movsl
pushf
push
cmpl
addr16
fbstp
lds
out
movsb
popa
xchg
dec
cwtl
je
or
inc
cs
or
cwtl
or
mov
lds
into
lret
push
xor
push
jp
loop
std
popa
sub
movsb
mov
cbtw
cmp
inc
int3
cmp
or
imul
ret
mov
scas
dec
inc
imul
fcomp
xchg
push
lods
out
cmp
push
xchg
xchg
loope
addr16
push
test
jmp
aad
leave
aam
outsb
roll
push
clc
mov
mov
adc
mov
insl
ret
clc
fwait
cmpsb
jle
iret
add
mov
xchg
lahf
mov
push
bound
ja
leave
fs
jbe
bound
push
mov
arpl
mov
xchg
frstor
test
inc
testl
aam
popf
mov
cmpb
cmp
push
mov
sti
push
cmpsl
mov
sbb
cmp
jbe
dec
adc
loope
inc
sbb
cmpsl
test
fidivrs
and
add
push
jno
or
mov
mulb
es
pop
xor
or
js
xchg
movsb
cmpsb
adc
divb
dec
inc
xchg
mov
insl
icebp
sub
push
cmp
cmpsl
push
pop
test
fcmovnu
sbb
push
xchg
es
arpl
sbb
out
sub
fisttps
in
movsl
cwtl
and
xchg
and
aam
mov
mov
cld
data16
xor
ljmp
sbb
sbb
cmp
fidivrl
inc
rorb
cltd
js
adc
test
fsubs
repnz
xchg
push
mov
cmpb
test
ret
stc
pop
pop
xor
inc
fimull
and
loope
ja
push
popa
cmp
or
dec
xchg
sbb
int
daa
js
lods
inc
aaa
push
lret
lock
loop
xchg
nop
rcl
enter
push
inc
push
add
cld
jle
stos
imul
inc
push
push
inc
testl
push
jo
mov
test
subl
push
outsl
add
lds
lahf
cmpsl
dec
sub
pop
cmp
pop
scas
lcall
ret
pop
xor
xchg
push
mov
mov
mov
inc
nop
inc
test
pop
push
dec
mov
fcoms
pop
clc
sti
rcl
xchg
pusha
cmc
daa
mov
cmc
adc
ljmp
sbb
jge
movl
push
sbb
dec
mov
and
pop
jg
iret
dec
lcall
fadd
je
sub
aas
std
sub
mov
pop
lds
lods
addr16
dec
mov
addr16
in
jg
scas
imul
sub
cltd
jl
xor
jle
cmc
movb
fistpll
imul
pop
pop
pop
pop
mov
and
xchg
push
divb
insb
sub
and
xchg
mov
mov
out
mov
mov
hlt
roll
dec
ror
cld
repnz
xor
lods
movsl
ja
or
int
ljmp
lcall
or
mov
pop
popa
in
or
push
mov
inc
outsl
xrelease
cltd
pushf
addr16
inc
add
imull
add
lret
mov
sti
shl
xlat
sbb
inc
cld
dec
add
lahf
lock
mov
and
lret
xchg
add
jmp
repz
call
adc
jb
xchg
dec
ljmp
sbb
push
jge
rolb
sti
push
inc
dec
pop
cmp
rep
mov
scas
pop
pushf
insb
mov
or
add
sti
push
jecxz
mov
lods
and
mov
push
cmp
xchg
xor
mov
cmp
pop
push
cmc
neg
cmpsl
mov
adc
addr16
rclb
dec
push
stos
rcl
lods
pushf
xchg
ljmp
dec
inc
imul
add
lds
popa
sbb
push
jb
mov
push
fsubr
pop
sub
lea
xchg
sub
inc
xchg
int3
loopne
imul
inc
and
push
xlat
stc
lret
pop
fidivrs
aad
mov
rorb
push
cmp
xchg
outsl
cmp
ds
test
cld
inc
xchg
pop
adc
mov
mov
cmp
push
dec
subb
lea
faddl
test
fldt
cmp
mov
dec
jo
sub
add
sbb
jmp
iret
sub
add
sbb
movzbl
push
push
pmaxub
mov
push
mov
jae
dec
adcl
xor
mov
pop
adc
shll
add
mov
in
jp
mov
lock
popw
xor
andb
test
mov
in
jmp
repz
cmpsl
bound
pop
ficomps
nop
std
rcrl
mov
xor
sti
xor
rcrl
mov
mov
fbstp
and
jnp
mov
xor
cmp
mov
repz
aam
jge
mov
sub
fsts
sub
loopne
sbb
sbb
insl
shll
cmp
xor
pop
jp
and
aam
test
sub
or
orb
ret
cmp
mov
sub
ret
stos
pop
arpl
enter
mov
insl
dec
addr16
push
movb
cmp
in
scas
mov
enter
push
mov
outsb
hlt
cmp
jg
scas
and
daa
shlb
add
jg
cmpsl
cld
push
inc
lods
outsl
cmpsl
int3
fucom
jmp
xchg
adc
popf
or
int3
arpl
mov
cmp
lahf
test
xchg
test
pusha
testl
stc
and
and
ret
xchg
in
sbb
xor
add
sub
fildl
dec
pushf
out
mov
iret
cmp
shl
fadds
cmc
push
outsb
mov
mov
insl
mov
mov
cli
mov
inc
xor
lea
repz
jns
shlb
mov
test
enter
ffreep
loopne
popa
jns
cmovp
incb
fs
cmp
push
popf
add
mov
addr16
push
and
inc
pushf
scas
xor
sbb
pextrw
mov
lret
std
js
mov
addl
mov
inc
mov
sub
inc
sub
mov
mov
rcrb
ja
mov
dec
gs
daa
and
leave
cmpsl
or
insb
xchg
pop
cmpsl
enter
getsec
aad
sub
xor
or
in
stos
or
and
pop
mov
bound
loop
jno
sbb
test
or
mov
adc
mov
loope
leave
clc
je
roll
jl
arpl
pop
dec
sub
je
int
pop
mov
hlt
adc
push
mov
pop
sbb
shlb
ret
js
dec
mov
push
fstps
jns
sbb
adc
mov
jnp
mov
icebp
pop
xchg
stos
daa
mov
jle
mov
mov
stos
add
jo
sbb
and
dec
lret
pop
std
movsl
mov
adc
xchg
movl
aas
das
aam
rclb
cmp
movsb
cli
ja
rorb
test
jns
push
fisttpll
mov
push
push
pop
pop
sbb
movsl
fstps
pop
out
inc
mov
daa
pop
sbb
cmp
push
pop
dec
inc
dec
dec
xchg
dec
mov
pop
mov
xor
test
inc
jle
or
js
add
testb
push
mov
pop
cmc
xor
pushl
and
jae
movsl
pusha
mov
jb
sbb
icebp
sarb
push
arpl
lcall
or
out
mov
dec
and
dec
scas
jno
rolb
hlt
jp
mov
pop
pop
push
or
and
mov
jo
adc
sub
mov
pop
out
sub
bound
dec
mov
mov
add
ret
dec
mov
jnp
mov
adcl
xor
cmpsl
in
into
mov
sub
mov
and
lret
testb
mov
js
pop
jle
call
aaa
inc
xor
mov
fwait
les
mov
loop
cmpsb
jmp
add
stos
dec
fildll
imul
jo
and
insl
ss
mov
pop
loopne
gs
roll
push
leave
sub
ds
jle
mov
pop
sub
dec
enter
mov
fwait
lock
and
insb
shl
jne
fsub
inc
sub
sub
jnp
sub
fisubs
pmullw
push
push
movsb
add
out
or
add
push
pop
lret
enter
add
xchg
push
mov
pushw
ds
movsl
mov
divl
aam
stos
lock
daa
jne
sti
popf
test
and
aad
sti
mov
ss
lds
inc
pop
andl
lds
clc
cmp
mov
enter
mov
lcall
push
cmp
xchg
into
daa
test
aaa
push
cmpsb
jle
je
iret
xchg
sti
add
js
hlt
inc
push
adc
sahf
inc
test
cli
pop
cmpsb
xchg
dec
aam
push
dec
je
cmp
push
je
mov
mov
fdivrl
sub
mov
dec
jle
outsb
adc
scas
rorl
aam
loopne
push
add
je
cmp
jl
adc
sahf
xor
das
sbb
xlat
cs
dec
cwtl
cmpsb
aaa
jmp
lods
mov
mov
fidivrs
ffree
cmp
adc
stos
jle
cld
mov
jns
xor
bound
stos
mov
fs
loopne
test
std
orb
fs
enter
and
fwait
mov
push
add
out
and
int3
ss
lret
add
ficompl
bound
adc
out
gs
fildll
mov
scas
jo
loop
std
cmpb
enter
cli
movsb
das
add
adc
cs
cmp
in
mov
pop
ret
loopne
dec
outsl
inc
jmp
add
inc
int3
add
outsl
mov
dec
adc
xor
std
xbegin
cmp
cmpsl
scas
roll
xor
aaa
push
pop
dec
pop
push
jmp
xchg
xor
pop
dec
std
cs
mov
jae
js
lret
add
daa
sbb
js
es
push
add
fcoml
das
enter
push
in
dec
inc
out
pushf
pusha
inc
gs
inc
jp
sti
mov
test
lods
or
mov
flds
mov
xchg
mov
scas
jmp
sub
sub
test
js
insl
bound
ficoml
inc
daa
pop
divl
cmpb
xorl
sub
aaa
out
rorb
je
push
pop
mov
movsb
divb
jb
xchg
jmp
test
pop
and
jle
push
add
pop
orb
mov
ds
xchg
jecxz
cmpsl
mov
xor
adc
jge
idivb
inc
cmp
pop
and
adc
push
cmp
mov
daa
mov
xchg
inc
movsl
xor
jl
iret
je
sub
jno
push
js
add
int3
icebp
pop
inc
lods
sbb
fstps
xor
fs
cli
jo
cwtl
fs
cmp
mov
fucom
mov
bound
scas
pop
aad
sbb
and
rolb
mov
jae
and
inc
mov
pushf
adc
push
jne
mov
mov
pop
mov
mov
sarb
loop
mov
mul
rcrb
insl
sarb
add
cmpsl
mov
mov
test
dec
or
daa
add
enter
fisttpll
push
pop
mov
xor
add
ds
sbb
scas
push
cmp
sub
pop
sub
mov
fisubs
insl
lcall
into
scas
shlb
lcall
sub
inc
mov
xlat
mov
outsl
inc
mov
rolb
cmp
imul
mov
ja
dec
cmp
jo
mull
shlb
dec
test
int3
mov
iret
or
mov
iret
push
icebp
mov
mov
aad
sbb
cmp
mov
mov
pop
sub
sbb
sub
cmp
inc
pop
mov
cmp
jmp
xor
ror
jmp
mov
imul
push
data16
or
jp
leave
xchg
mov
xorl
and
fistpl
outsl
mov
rcrl
mov
mov
ljmp
sbb
in
in
mov
ret
push
adc
icebp
sub
stos
adc
adc
pop
and
test
cli
loopne
ljmp
cmpsl
cmp
mov
push
jae
shrb
sub
or
in
inc
cmp
add
ja
xorl
lret
repnz
inc
inc
les
cwtl
push
sbb
loop
sbb
pop
xor
lods
push
mov
dec
outsb
jo
xor
fbld
fstps
stc
jmp
adc
fdivrl
inc
mov
fwait
jb
popf
lds
cmp
lea
xlat
ljmp
xchg
in
pushf
add
adc
lods
pop
add
scas
sub
popa
icebp
ret
hlt
repz
adc
imul
sub
jge
jp
hlt
lcall
loop
dec
sub
daa
enterw
ror
loop
lret
inc
outsl
ret
mov
mov
das
push
pop
fwait
xchg
dec
mov
mov
pop
jmp
es
xchg
pop
stos
jno
sub
push
addb
aas
cmpsl
out
enter
or
add
push
jbe
movsb
sub
andl
pop
jmp
push
pop
aam
jb
sub
cmp
push
es
jg
lret
je
fimuls
mov
dec
adc
testb
decb
ficoms
ret
loop
icebp
sub
pusha
decl
adc
out
xchg
jbe
add
push
aas
enter
divb
leave
mov
stc
mov
pop
ret
fnstcw
mov
pop
imull
dec
pop
lret
ds
jo
popa
dec
sbb
ffree
adc
jle
fisttpl
jo
add
pusha
or
sbb
scas
add
pushf
hlt
or
xor
lods
das
rcr
inc
popa
setl
cmpsl
xlat
insb
es
cmp
in
cmc
pop
mov
out
repnz
std
xchg
je
fmuls
adc
dec
push
fwait
mov
into
rcrb
sub
jg
ljmp
mov
pop
setno
lock
mov
sub
adc
addl
repz
sbb
idivb
or
out
dec
aas
into
adc
cmp
sub
jp
ret
or
jecxz
icebp
dec
jg
push
xchg
addr16
add
jo
into
pop
stc
int3
loop
movsl
cli
xchg
pop
pop
imul
dec
inc
lret
jge
test
push
not
sbb
push
pop
out
movsl
rcrl
mov
mov
lods
add
inc
lock
ljmp
adc
dec
insb
out
jns
test
scas
test
xor
insb
or
dec
icebp
fadds
pop
lock
mov
pop
lahf
cmp
in
push
push
mov
fnstsw
jnp
pop
sbb
aaa
iret
xchg
and
fmuls
nop
lods
in
cmp
orb
test
mov
dec
lret
xchg
xchg
push
inc
enter
cmp
sub
cmp
xchg
lret
cwtl
sahf
les
push
or
pop
nop
mov
out
les
push
pop
cmpsl
sub
mov
leave
je
scas
cld
shrl
mov
sbb
test
frstor
test
out
popa
jne
js
arpl
xor
push
loopne
or
jns
cltd
jno
out
filds
jmp
add
xor
inc
xlat
mov
rorl
cmp
inc
push
sarl
in
jns
popf
lods
inc
dec
test
rorl
ret
icebp
add
data16
cmp
xchg
int
js
mov
dec
das
pusha
fsubr
jmp
jge
popa
xlat
inc
fs
xor
push
cs
movl
xor
fwait
out
dec
mov
test
testb
ficoml
nop
js
mov
mov
push
mov
add
push
mov
lods
insl
add
mov
jle
scas
ret
xchg
cwtl
fiadds
sbb
rorl
shll
outsl
pop
aaa
jns
and
mov
or
sbb
lret
clc
div
or
cli
sbb
xor
pusha
jnp
mov
lds
push
push
mov
jecxz
call
mov
xchg
stos
lods
mov
jb
bound
xor
imul
jae
mov
xchg
jg
pop
push
cmpsb
divl
lcall
bound
push
shl
testl
pusha
movsb
inc
and
xchg
je
pop
popa
jns
ss
fsubr
jge
jbe
mov
orl
xor
inc
jge
xchg
test
mov
lods
dec
mov
ja
or
mov
mov
fmull
mov
adc
push
int3
adc
adc
fs
jp
add
das
jle
mov
jle
stos
adcb
xor
cld
shrb
jae
out
xorl
cmpsb
jp
dec
xchg
mov
rcl
pop
repnz
test
orl
test
and
out
fnstenv
notl
add
arpl
or
mov
mov
sub
xor
mov
adc
xor
xor
inc
sub
fwait
xor
adc
popf
inc
fs
pop
adc
xlat
fadd
pushf
scas
sbb
test
popa
arpl
fstpl
mov
cmp
inc
and
mov
sahf
mov
gs
rorb
xor
lahf
cmp
adc
mov
shlb
sbb
lcall
jbe
ret
inc
mov
ja
adc
imul
sbb
cld
outsl
jge
dec
data16
mov
sub
xor
stos
mov
out
cltd
loope
cs
mov
lock
sub
in
stos
inc
aas
icebp
mov
movsl
push
movsb
or
push
in
xchg
cmp
ret
jg
adc
fs
and
push
notb
fdivrl
sbb
jnp
jge
cmp
dec
jno
mov
push
shll
enter
dec
mov
xchg
outsb
mov
insl
mov
and
mov
insl
mov
in
movsl
mov
out
das
cmpsb
mov
mov
int3
push
ja
fidivrs
xchg
out
popa
and
clc
xchg
add
loope
add
leave
sahf
lahf
loope
jmp
xor
adcb
add
adc
cmp
push
jmp
lods
jecxz
pop
mov
insl
fwait
xchg
dec
fdivrp
clc
sub
clc
ljmp
sahf
xchg
popa
fimull
add
mov
nop
adc
or
mov
mov
and
xchg
daa
das
xchg
notl
jmp
les
mov
je
mov
xlat
or
call
aam
popa
xchg
call
mov
enter
dec
mov
pop
lret
inc
subb
dec
cli
aad
push
je
pop
cltd
stc
loopne
mov
lret
decb
mov
xlat
insb
push
mov
and
out
cmp
mov
clc
pop
jle
pop
aas
lret
mov
outsl
or
in
sub
outsl
lahf
sti
aaa
ja
mov
movsl
cmp
fbstp
xchg
jno
sub
in
dec
std
mov
fnstenv
pop
js
sbb
ret
mull
js
cmp
inc
data16
cmc
jbe
lods
je
nop
mov
inc
jns
outsb
ljmp
and
loope
sahf
xlat
dec
orl
les
fcoms
pushf
dec
mov
scas
lea
test
adc
add
pusha
sbb
mov
xor
sarl
pop
aad
xor
xchg
test
addr16
fdivrl
xchg
lds
jmp
sub
pop
in
mov
add
inc
mov
movsb
jecxz
js
bound
xor
and
cmp
stc
adc
add
in
loopne
or
outsl
add
jae
enter
or
sub
lret
adc
xor
jg
mov
dec
and
jecxz
insl
jg
xor
in
pop
jbe
in
es
push
bound
or
push
sub
and
int3
jg
mov
jle
pop
dec
aas
mov
pop
mov
pushf
mov
push
or
out
pop
je
push
je
lods
movsl
add
ss
ret
shr
push
lds
mov
repnz
outsl
dec
std
shrl
outsb
mov
cmp
imulb
int3
imul
leave
popa
pop
sub
ds
fldlg2
int
addl
fimull
dec
mov
sbb
jbe
shll
pop
xchg
and
lea
sbb
adc
pusha
in
insb
and
lret
cs
jg
adc
cmp
enter
push
sbb
fildll
mov
std
out
je
xchg
ret
outsb
xlat
jb
sbb
push
xchg
scas
sub
loopne
mov
cs
pop
jecxz
mov
push
shll
xchg
adc
xor
jno
je
and
lock
xchg
xor
fisubrl
int3
in
and
mov
xlat
push
outsb
inc
add
push
xchg
lret
mov
fisubl
mov
aas
cmc
jno
inc
rep
and
out
xor
inc
rcrb
xchg
xor
lret
push
jmp
imul
dec
arpl
mov
push
xor
and
pushf
xchg
jbe
sbb
jg
daa
aam
loope
sub
push
add
es
push
nop
in
ret
icebp
stos
lods
je
or
or
mov
dec
fsubs
int3
xor
stos
mov
add
inc
or
nop
nop
loope
mov
inc
sbb
rclb
sbb
aam
out
mov
sub
jge
and
mov
sbb
imul
fistpll
jmp
pop
cltd
gs
das
imul
stos
inc
dec
mov
cwtl
pop
loop
out
push
push
jno
popl
cmp
loopnew
aam
or
and
aas
inc
jno
inc
jecxz
movsl
sub
sbb
pushf
ficompl
mov
je
cli
dec
data16
std
lretw
jle
rcl
out
jbe
push
pop
test
arpl
loopne
sub
outsb
sub
cmp
js
movl
push
dec
xlat
scas
push
shll
test
cmc
sbb
cli
push
es
in
data16
push
inc
clc
and
out
push
lahf
cwtl
js
ja
cmp
push
jecxz
or
lahf
mov
cs
outsb
popa
mov
and
inc
movsb
punpcklbw
je
loopne
sbb
popf
rorb
pop
mov
pop
xor
pushf
pop
xor
add
ds
pop
sub
pusha
insl
fsubrl
js
jecxz
test
cmp
cmovp
fnstsw
jae
lahf
movsl
sar
stc
push
mov
mov
fdivrl
pop
inc
pop
sarb
inc
movsl
movb
adc
and
les
xchg
mov
or
pop
and
aam
mov
lcall
push
movsb
and
es
and
jge
inc
dec
ret
xchg
push
cwtl
std
test
lods
pop
cmp
pop
and
mov
mov
mov
call
test
cmp
mov
mov
mov
je
cltd
lahf
out
hlt
adc
mov
shr
js
or
jns
aas
gs
int
rorb
xchg
sub
insl
mov
shrl
sub
pop
mov
fidivrl
push
sbb
push
jp
sti
orb
dec
jl
fistl
sbb
jecxz
fmul
mov
cmp
dec
mov
sbb
pop
xor
dec
rcrl
add
or
xor
push
shl
lods
pop
mov
lods
xor
sub
dec
xchg
sbb
je
xor
loop
fstl
dec
loopne
cmp
xlat
sahf
mov
add
or
jge
stos
mov
fsub
add
mov
push
scas
or
xchg
or
ljmp
loop
dec
test
nop
out
sub
cmpsb
mov
mov
jecxz
into
fisubrl
mov
jae
mov
inc
shl
lret
pop
jp
lock
sub
mov
bound
test
adc
add
pop
in
jne
dec
xor
sbb
adc
bound
aas
fildll
fcomps
push
adc
sbb
mov
mov
dec
test
out
outsl
enter
inc
loopne
mov
inc
push
int3
sub
xor
sbb
or
ljmp
aam
fdivs
jle
clc
mov
push
test
pop
dec
out
dec
lock
mov
jo
jb
lahf
push
mov
sub
js
lret
arpl
adc
dec
into
cs
insb
sbbb
or
ficoms
cs
stos
push
lods
and
fwait
jge
mov
xor
enter
and
lcall
lret
test
lea
ret
cld
xchg
imul
les
inc
dec
or
add
cmp
imul
jg
lds
jp
push
clc
or
fisttpll
rorl
pop
add
add
mov
push
push
inc
fidivrl
or
jb
in
cmp
lret
adc
mov
in
cmp
inc
out
out
add
mov
in
xor
sbb
in
stos
rclb
imul
dec
lret
sti
int3
push
repz
xlat
or
mov
iret
jmp
pop
movsb
lds
xlat
pop
jbe
mov
insb
mov
imul
xor
or
jo
pop
pushf
cwtl
dec
dec
mov
pushaw
xor
out
push
int3
sub
bound
xlat
aad
cltd
sub
mov
adc
dec
inc
sbbb
data16
in
nop
cmp
add
test
pop
leave
xchg
jecxz
lahf
maxps
lret
pop
push
mov
les
adc
adc
les
pusha
fsts
inc
aam
pop
imul
or
cmp
mov
int
rorl
mov
xchg
jno
mov
ror
xor
push
int
scas
cmp
movsl
mov
mov
cmp
jl
pop
adc
stos
jle
loopne
and
andb
xor
jle
mov
int3
and
pop
shll
xchg
gs
leave
add
dec
cmc
push
xor
xor
inc
mov
imul
or
mov
sbb
test
and
dec
int
xchg
pusha
inc
repz
pusha
enter
je
lods
fs
negl
lret
int
inc
sbb
add
sub
popf
iret
xchg
or
movsl
in
inc
sub
ficompl
pushf
inc
jae
ds
mov
inc
imul
repz
inc
lret
mov
std
xor
insl
sti
and
in
dec
int
ss
addr16
or
popf
outsb
sbb
sbb
pop
das
mov
and
sbbl
outsl
push
jae
nop
inc
pop
mov
mov
fs
jns
xchg
aaa
push
push
inc
repnz
lea
movsb
subb
stos
cmp
push
ljmp
inc
negl
pusha
sbbl
imul
inc
aam
push
mov
inc
adc
and
fdivs
aad
jge
into
mov
iret
addr16
lahf
lock
ficompl
call
fldenv
sub
inc
jge
sub
out
mov
xchg
fldt
and
loope
sahf
les
in
stos
out
sbbl
rol
and
mov
inc
lcall
pop
and
and
mov
out
cmpsb
mov
gs
clc
hlt
adc
and
ret
xor
jmp
jae
mulps
sbb
outsb
jbe
fisubrl
push
clc
test
mov
rcrl
lcall
fidivrl
addr16
ss
cs
fcoms
or
arpl
jne
dec
push
push
dec
pushl
movsl
mov
je
mov
cmc
jnp
push
or
fiadds
cmpsb
dec
stos
fistpl
mov
xchg
add
in
int3
pop
adcb
sti
push
push
fbld
xor
sbb
fsubl
or
out
pushf
mov
push
add
testl
push
jmp
inc
psrlq
sub
inc
lds
stos
fdivs
cmp
cli
test
in
pop
xorb
xchg
test
in
ret
roll
jo
pop
ret
jecxz
mov
test
pop
xchg
cli
pop
arpl
push
adc
sub
mov
in
lds
push
dec
push
adc
lcall
fcomip
es
pop
cmp
imul
scas
ljmp
push
repz
call
xchg
cmp
jge
lock
add
pop
mov
movsl
popa
movsb
mov
jns
das
mov
push
ret
cmp
repnz
imul
cld
fstps
push
and
push
dec
xor
adc
rorl
loope
in
lret
outsb
faddp
cmc
jbe
pushf
push
nop
sarl
cmc
jb
xor
lret
mov
dec
sti
inc
jnp
mov
and
das
jge
push
lods
in
repnz
out
and
sar
pop
in
sbb
sbb
out
jle
cltd
xor
jl
pop
movb
or
pop
mov
sub
or
pop
filds
int
push
sub
test
lcall
lea
sahf
in
movsl
scas
push
jnp
imul
jmp
lds
adc
or
push
cmp
fnstenv
iret
fs
push
sahf
push
inc
lret
jl
imul
xchg
cmp
push
push
lret
jle
pop
sbb
lea
push
loopne
mov
dec
pushf
shll
popa
push
or
inc
fcmovb
jns
in
ljmp
and
mov
in
xor
push
loope
movb
mov
jbe
pusha
sbb
adc
lea
lea
fadds
dec
fs
jmp
ret
xor
filds
and
ficoms
xchg
inc
jg
mov
popa
mov
je
popf
cltd
movsl
jl
and
lods
stos
pop
mov
inc
mov
int3
mov
cmc
adc
repnz
pop
push
mov
dec
xchg
or
push
hlt
mov
lret
dec
pop
inc
pop
ss
xor
sub
add
fidivrs
mov
adc
in
arpl
ja
lods
xlat
int3
scas
sti
jne
inc
outsl
xor
jmp
aad
dec
ret
xchg
mov
cmpsl
or
jne
call
js
insl
ficoms
mov
inc
xor
sbb
adc
and
test
jno
push
push
movsl
xchg
mov
pop
push
aas
add
pop
sub
and
inc
outsl
repz
loopne
ljmp
ds
xchg
fadd
mov
pop
or
cmp
call
jle
test
push
test
inc
test
mov
subb
or
inc
adc
cmp
add
mov
adc
stos
fdivs
aam
inc
sbb
xlat
mov
inc
cmc
loopne
aam
arpl
ret
push
popa
lahf
ja
lret
aas
push
cmpl
repnz
fcoms
xchg
cmp
in
je
out
fwait
mov
sbb
loope
pop
loope
mov
faddp
mov
fstl
adc
iret
xchg
loopne
stos
dec
mov
jno
xlat
or
pushf
inc
sub
popl
sarb
pop
cmpsl
add
icebp
fwait
sbb
clc
mov
out
adc
fstl
sbb
xorl
rcrl
popa
pop
gs
xchg
stc
rcrl
out
adc
or
and
xlat
dec
cmc
int3
into
push
mov
scas
xor
add
lds
ss
fcmovnbe
jl
shll
sub
push
push
movb
pop
jo
jl
lds
adc
mov
add
cmp
push
add
loop
inc
ja
mov
out
call
jno
cmp
cmp
cvttps2pi
cmp
jg
int
pop
sahf
bound
shlb
std
dec
sub
jp
push
inc
pop
push
in
enter
js
xor
aaa
iret
sbb
mov
cmpsl
jp
in
clc
adc
cltd
jcxz
xchg
push
out
je
and
shll
je
enter
scas
in
add
adcl
iret
and
xor
jmp
mov
fldenv
mov
movl
cmp
jns
mov
jle
int3
xchg
divb
mov
jb
cli
fnstsw
xchg
mov
gs
jge
adc
adc
cld
jp
jns
mov
popw
cltd
jmp
xchg
fcmovnb
sti
insl
inc
cmp
adc
fstpt
popf
or
cmp
enter
das
mov
jns
mov
sub
or
cmp
push
jl
lret
pop
fstpl
imull
lret
insl
mov
cmpsl
push
dec
push
in
out
xchg
into
test
or
and
cmpsl
xor
mov
mov
mov
lahf
call
cwtl
push
push
mov
fcmovnu
cmp
adcl
sbb
mov
mov
leave
inc
mov
into
data16
mov
mov
shlb
mov
sbb
pop
jbe,pn
cmp
push
push
les
xchg
inc
fcmovbe
data16
inc
xor
pop
je
push
cmp
mov
and
xchg
nop
or
jmp
outsl
adc
lret
cmpsl
sbbl
push
mov
xor
std
into
movsl
in
test
xchg
cmc
jns
cmpsl
and
dec
imul
aas
jns
movsl
insl
gs
add
lahf
cwtl
out
mov
pusha
pop
cmp
sbb
fsub
stos
pop
cmp
jnp
mov
in
loop
outsb
jno
cmp
scas
popf
out
xchg
loopne
scas
jg
lods
mov
mov
aas
sbb
lds
xchg
jno
in
jbe
test
push
outsl
arpl
add
mov
cs
jne
push
scas
std
push
int3
mov
pop
shll
mov
mov
sbb
inc
loopne
mov
mov
movb
iret
jecxz
xchg
xor
inc
leave
xchg
aas
ret
shr
les
popf
jp
pop
jno
push
inc
sub
je
ja
fisttpll
xor
pop
rcr
incb
sbb
repnz
and
cmpl
mov
aas
out
push
or
mov
xor
enter
sub
sub
es
sbb
enter
cmp
inc
aaa
cmp
mov
or
cmp
mov
out
or
test
ja
fcoml
scas
and
pop
and
add
push
jle
inc
fdivrs
and
arpl
sarl
xor
faddl
sar
pop
les
movsl
sarl
jae
aas
dec
scas
push
test
mov
mov
add
loop
xchg
dec
pop
and
ss
mov
jecxz
and
pop
fadds
call
fwait
cwtl
mov
js
lods
aaa
pop
add
data16
mul
cld
addr16
ret
sbb
inc
aad
and
in
nop
sbb
adc
imul
je
test
jl
outsb
pop
jmp
jnp
test
jae
repz
mov
daa
cmp
ret
pop
cmp
mov
pop
in
xchg
lods
add
adc
adcb
adc
jbe
push
mov
je
add
push
outsl
push
je
push
mov
testl
cmp
mov
nop
inc
popa
daa
in
daa
test
xor
stos
jle
xor
mov
xor
mov
cs
clc
inc
pushf
fldl
push
push
hlt
rcrl
insb
pop
mov
data16
and
lret
and
dec
call
fstps
ljmp
mov
mov
fcoml
flds
dec
lcall
mov
xchg
xchg
mov
sub
cmp
jmp
pop
push
mov
inc
jg
cwtl
dec
mov
lea
pushf
lods
dec
or
inc
gs
dec
mov
add
lret
test
cltd
jbe
or
cwtl
inc
ret
fucomip
int
enter
xor
aaa
adc
mov
iret
xor
dec
sbb
scas
imul
out
test
xor
ds
dec
xchg
lcall
rclb
xchg
cmpsl
stc
and
out
pop
mov
scas
ds
inc
daa
mov
push
mov
dec
ror
mov
lea
sti
sbb
inc
sbb
adc
xchg
cmp
frstor
std
or
inc
out
xchg
in
fldenv
out
or
mov
adc
popl
pop
lret
test
pop
lret
sub
adc
sbb
xchg
lds
lret
shrl
cwtl
jns
or
push
or
out
inc
adc
sub
orl
jecxz
and
ficomps
mov
cmp
inc
sbb
mov
dec
jge
movsb
dec
pushf
lods
pop
xchg
cmp
jle
pop
jo
in
or
mov
lahf
adc
inc
and
aas
iret
js
jg
dec
mov
pop
mov
stos
xor
dec
and
das
sub
scas
push
fisttpll
shlb
mov
shlb
fbld
sahf
xor
push
mov
mov
js
dec
ss
iret
out
pop
cmc
test
pop
xchg
loopne
lock
mov
insb
add
mov
scas
in
cmpsb
inc
fwait
pushf
sbb
mov
sub
pop
scas
iret
pusha
push
dec
mov
mov
pop
rcr
shl
cmp
shufps
mov
ds
daa
scas
mov
cmpl
cltd
fdivs
movsb
mov
lret
push
fcoml
test
push
sbb
mov
mov
fistpll
in
clc
xchg
lock
cmpsb
sbb
ja
adcl
mov
fsubl
sbb
call
xchg
jbe
aaa
lods
stos
inc
jmp
inc
rcrb
aas
popf
fsubr
ret
xchg
adc
fstp
jge
loope
mov
jmp
cmp
cmc
add
sarb
mov
cwtl
fnsave
or
push
test
xchg
push
aas
imul
fmulp
test
xor
movsl
cltd
fldenv
fneni(8087
imul
cltd
sub
movsl
adc
or
ss
inc
mov
loope
mov
mov
cltd
pop
mov
in
or
jmp
cmpsb
aaa
jno
data16
lock
insb
inc
scas
mov
pop
aaa
test
shrl
mov
cltd
dec
jmp
push
cld
dec
pop
cs
jmp
movsl
aam
dec
movb
sub
cwtl
hlt
add
mov
push
ja
push
fldcw
dec
mov
rol
inc
lret
fstps
jnp
ret
push
hlt
das
mov
or
test
shlb
in
jno
int
adc
lods
cmp
push
jp
movsl
inc
pop
add
mov
test
mov
insb
cld
mov
ret
nop
add
out
add
ds
rcrl
out
movsb
repz
insl
nop
and
sub
outsl
add
xchg
inc
jnp
xlat
aam
pop
subb
cmp
lea
mov
adc
movsl
add
stc
jecxz
js
sarb
and
imul
pop
rcrl
jmp
sti
hlt
add
fisttps
iret
movsb
inc
sub
mov
daa
sub
push
dec
ror
lea
xchg
lods
sahf
xchg
int
mov
loope
xchg
mov
aaa
pop
stos
mov
in
push
ja
sub
or
fsts
cltd
idiv
xor
in
sarb
stc
push
movsl
loopne
loopne
jb
ret
or
xor
imul
test
jecxz
lds
add
or
xor
cmpsb
fstps
lret
jmp
and
mov
pop
push
pop
mov
dec
xor
test
fucomip
pop
or
xorl
sqrtps
in
cmpsl
out
sbb
xorl
test
leave
push
test
aaa
out
fxch
js
and
es
or
pop
stos
xor
testl
ss
mov
mov
mov
adc
je
push
movsb
ror
test
adc
push
add
ja
stos
dec
shll
nop
in
and
xor
addr16
popf
mov
stos
cli
cltd
int
pop
std
stos
push
js
mov
jecxz
push
stos
ret
pop
pop
stos
insl
fs
adc
lret
setae
sbb
sbb
ret
push
or
roll
les
fwait
ret
mov
jmp
sbb
push
dec
aad
mulb
je
mov
push
jnp
xorl
ficompl
jo
mov
jno
cwtl
sti
in
dec
pop
lods
fistl
jno
outsl
clc
jge
fimull
mov
cmp
adc
mov
jo
adc
adc
mov
clc
mov
cmp
rcl
scas
inc
push
adc
insl
jno
lds
push
inc
and
in
mov
lock
cmp
jns
and
sub
mov
outsb
out
loopne
fs
mov
inc
inc
add
push
xchg
stc
xlat
xor
repnz
adc
sub
inc
dec
xchg
xor
jge
cld
pop
roll
pop
rcl
pop
cmpsb
mov
and
sbb
add
mov
shll
insl
sub
cs
in
lret
leave
cwtl
inc
outsb
adc
inc
or
adc
rorl
push
and
adc
add
mov
ret
loop
pop
cld
and
insl
loopne
sub
mov
xchg
sbb
adc
js
xor
push
lret
scas
push
lock
lahf
xor
test
adc
js
sub
punpckhbw
mov
jecxz
jae
push
jnp
insb
mov
rorb
test
int3
aam
in
out
add
or
push
pop
addr16
mov
aad
cmp
xchg
inc
insb
sarl
dec
add
jge
push
js
or
aam
or
int3
xchg
dec
and
movsl
fcompp
stos
adc
or
sbbl
cmpsl
addr16
push
sti
sahf
inc
xchg
adc
xchg
fxch
aam
cmp
repnz
dec
fsubrp
fadds
stos
mov
movsb
outsl
jo
jmp
mov
testb
movsb
inc
jmp
iret
inc
mov
or
inc
xor
cmpsl
out
inc
insb
movsl
jo
shl
pop
leave
ljmp
push
pop
fstpl
add
jecxz
mov
es
jo
in
push
mov
pop
insl
xchg
adc
mov
sahf
orb
adc
and
inc
imul
movsb
lods
and
mov
pushf
in
xor
add
sub
sbb
mov
cmp
sub
shl
clc
sub
and
mov
cld
and
add
mov
mov
cmpsb
jo
out
sub
pop
rcrl
push
pop
sub
adc
push
push
jp
sub
or
add
pop
push
inc
adc
je
in
aaa
dec
push
mov
cmp
testl
jp
xor
test
mov
cmp
stc
mov
sahf
xchg
add
push
daa
xchg
scas
arpl
cmp
xor
jb
stc
mov
or
sub
pop
mov
gs
mov
shll
sbb
xchg
or
jle
in
mov
ja,pn
push
stc
sbb
fwait
outsb
lock
je
std
adc
sbb
subl
push
fwait
sub
in
clc
adc
fs
shll
mov
xlat
sub
mov
push
xorb
lahf
fcmovnb
jecxz
ror
cmp
nop
das
mov
mov
out
inc
in
sar
out
pop
mov
and
xor
out
sahf
pushf
cld
pop
mov
insb
jne
mov
inc
popa
sbb
mov
dec
stc
add
jns
jmp
dec
fisttpll
xor
xchg
inc
mov
push
mov
ljmp
inc
jl
out
cld
mov
push
xchg
jg
aad
push
in
enter
test
in
inc
pop
inc
inc
lods
mov
fwait
sub
adc
push
push
mov
sub
rcrb
int3
js
jmp
ffree
pusha
std
loop
pop
and
inc
xchg
int3
push
jnp
leave
sub
pop
pop
mov
inc
js
or
mov
adc
in
addr16
pop
add
in
mov
ss
push
cld
sub
neg
movsb
ljmp
aaa
jnp
stc
pop
inc
or
mov
ud2
mov
movsb
stos
mov
add
imul
mov
cs
and
add
fidivrl
outsb
daa
addr16
cmp
sahf
ja
and
out
fwait
push
in
mov
nop
in
inc
jne
jbe
lea
xchg
adc
jns
adc
shlb
jecxz
shlb
push
mov
fiaddl
mov
sub
inc
mov
inc
fcoms
ja
cmpsl
int
rcrl
lea
xor
cltd
mov
lahf
lds
jmp
xchg
popf
sub
repnz
pop
sub
push
mov
test
xchg
adc
jne
scas
cmp
filds
sub
jns
lahf
mov
add
adcl
sub
sbb
mov
jo
aaa
pop
popf
out
stos
int3
out
shll
lock
cltd
jmp
mov
mov
mov
sbb
mov
dec
sub
mov
push
push
xchg
push
sub
jns
fstps
jmp
fst
dec
jge
div
lret
push
or
out
mov
or
and
lahf
repnz
lods
lds
movsl
mov
shrl
inc
daa
decb
dec
jmp
jp
fwait
xor
sbbl
or
in
sub
lds
sbbb
test
gs
mov
fcos
adc
scas
push
stos
ret
jle
mov
pop
ret
xchg
xchg
pop
jbe
push
sar
lret
push
mov
out
mov
iret
lcall
into
dec
push
push
mov
icebp
jg
mov
dec
filds
xchg
push
cmpsb
leave
jle
push
sub
ret
xchg
cld
xchg
les
inc
cwtl
icebp
mov
rorl
in
fdivrl
aam
cmpsl
dec
sub
scas
fwait
ret
fs
push
popf
adc
jbe
adc
push
xchg
and
jge
loope
test
test
ficoms
pop
sub
aam
rorl
mov
ret
idivb
aad
aam
scas
pop
jae
stos
hlt
pop
pop
mulb
mov
daa
enter
pop
and
stos
push
inc
dec
or
jge
lahf
fcoml
je
jns
jge
add
cmp
mov
cmp
add
lahf
mov
fcoml
test
in
inc
xchg
xchg
icebp
or
out
out
mov
mov
sbb
xor
shlb
lea
inc
jmp
subb
repnz
lcall
aaa
cld
pop
dec
rcr
dec
fistps
outsb
jl
jae
sbb
xchg
cmpsl
data16
pop
rcrl
xchg
fsubrl
std
insb
mov
insb
fistl
rcl
sbbl
cmp
adc
jae
jl
loop
mov
mov
stc
test
mov
arpl
adc
or
push
xlat
nop
mov
mov
pusha
ret
arpl
xor
mov
loopne
sbb
push
outsl
pop
lock
adc
les
das
pop
push
adc
push
nop
stos
into
mov
push
and
hlt
out
mov
ret
out
mov
loop
daa
addr16
jo
test
lret
lret
aam
imul
xor
test
xlat
inc
arpl
lret
ret
in
std
aad
jno
std
testb
pop
inc
sbb
sti
stos
push
ds
xor
fmull
scas
pop
xor
jbe
lods
pop
pop
dec
movsl
adc
or
mov
mov
mov
xchg
pop
xor
jl
testl
bound
repnz
jp
shlb
xor
xor
out
mov
or
in
daa
les
push
out
push
ja
sub
xchg
mov
aaa
in
sub
sub
adc
and
sahf
movsb
out
sbb
mov
jae
xorl
fstp
jp
shl
push
das
adc
mov
add
fwait
inc
ljmp
and
jmp
pop
push
xchg
jae
xorb
mov
sar
push
repnz
and
mov
sti
jbe
push
lock
dec
jl
dec
adc
cmc
push
ret
xchg
push
shll
orb
jae
cmpsl
push
in
outsl
aas
fistl
dec
mov
imul
add
xor
add
cmp
ss
add
adc
mov
adc
push
daa
aaa
sub
outsl
ret
jecxz
lods
sub
sub
inc
aad
jg
xor
push
movsl
sbb
mov
pop
mov
test
stos
mov
cmp
daa
out
cmp
imul
sbb
fstpt
sbb
je
aad
shlb
test
dec
data16
cmp
mov
push
daa
loope
xchg
lods
fists
dec
fldl
inc
sub
into
insb
xor
adc
sbb
rol
pop
xor
inc
or
dec
call
and
jae
lahf
and
lret
ja
sbb
test
jl
xchg
xchg
mov
test
xlat
pop
mov
cmp
inc
xchg
mov
inc
sti
shlb
push
notb
inc
xorb
and
sub
add
adc
scas
lret
fistps
xor
cwtl
push
lea
add
cmp
cmp
and
outsb
jnp
push
xchg
sbb
dec
dec
outsl
jmp
ss
out
fistps
or
inc
cltd
sub
int
add
in
jae
mov
call
dec
ljmp
fbld
push
sbb
dec
jge
jnp
mov
or
test
insb
fnsave
fildll
mov
mov
xor
push
clc
or
jb
push
adcl
sti
adc
inc
mov
stc
or
lea
pop
ret
scas
shlb
xor
pop
xchg
push
and
aaa
jp
and
or
outsl
add
add
in
xchg
call
test
loope
ss
add
fdivrs
xor
mov
dec
cmc
std
jge
mov
cmp
out
mov
mov
mov
mov
dec
subl
xchg
dec
andb
push
dec
jle
int
push
jp
or
test
fildll
jb
out
push
jae
xchg
adc
cmp
lret
push
das
cmp
mov
mov
cld
sub
sti
dec
iret
aam
and
nop
cmp
outsb
clc
mov
stos
push
ds
iret
sub
sub
adc
xchg
dec
data16
frstor
sub
lahf
sub
jae
or
test
pop
out
cmp
dec
sbb
bound
sti
fisubrl
and
aad
rclb
push
out
mov
push
into
and
inc
cmp
push
pop
movsb
xor
push
sar
hlt
repnz
int3
push
jge
mov
mov
cwtl
adc
cmp
clc
jecxz
mov
pop
or
cmp
outsb
ja
sbb
fwait
and
rcll
adc
outsb
add
jbe
jecxz
lods
xchg
jmp
leave
inc
test
pop
out
xchg
pop
mov
sub
sbb
cmp
js
push
es
icebp
sbb
iret
mov
fs
pop
roll
or
lods
push
mov
test
sbb
and
add
jo
xor
lock
push
idivl
lcall
ret
sar
in
sub
sub
sub
sub
rcrl
mov
test
mov
fisubs
push
xor
add
sbb
sub
stc
imul
int
jp
loope
cmp
imul
inc
movsb
xchg
aad
mov
daa
mov
js
dec
sbb
mov
paddsb
fldcw
mov
repz
mov
sbb
xchg
ss
div
sub
mov
into
pop
xchg
sub
push
or
ds
bound
div
inc
es
cmp
jae
sbb
fwait
testb
jle
push
xor
adc
shl
adc
xchg
xorl
jne
out
hlt
je
add
gs
lds
sub
rorb
sti
push
adc
dec
sub
arpl
xchg
push
outsl
subl
clc
mov
jno
add
stos
iret
mov
mov
mov
dec
mov
outsl
mov
jl
ret
jl
inc
mov
in
in
push
push
bound
push
sub
and
sub
fidivrl
or
push
imul
push
pop
push
xor
jae
inc
int3
outsb
xor
clc
fldenv
ds
in
fwait
add
mov
fldpi
popf
push
dec
mov
cmp
mov
sub
pop
cmp
repz
das
mov
jne
sub
mov
ud2
xchg
mov
dec
in
xchg
mov
or
lret
push
xor
les
mov
pop
cltd
jbe
shll
dec
int
fdivrs
ljmp
popa
mov
outsb
test
rcr
dec
sbb
loope
mov
push
dec
adc
movsb
lret
xor
and
aaa
cs
push
cmpsb
in
dec
add
cli
je
adc
add
cwtl
fwait
insb
je
loope
pusha
jne
outsb
jne
mov
call
push
test
dec
jecxz
aad
xor
jecxz
inc
andnps
aas
push
pop
enter
sub
shr
lret
xor
das
inc
mov
and
mov
stos
xchg
into
jns
dec
add
aas
js
stos
aad
add
add
or
cmp
stos
xor
loop
sub
jb
loope
push
fwait
dec
fs
pop
js
andb
inc
and
and
mov
sub
insl
fs
push
subb
cmpsl
leave
sbb
pop
add
push
fdivrp
pop
ret
shlb
insl
cmp
jmp
inc
pusha
test
scas
push
inc
loop
insl
pop
jns
xor
fiaddl
mov
icebp
subb
mov
push
push
sub
insb
cmpsl
js
cmp
jae
jbe
ret
movsl
mov
jl
push
std
cltd
cmp
aas
stos
add
inc
mov
mov
add
pop
and
inc
and
cmp
pop
adc
clc
dec
adc
cs
fcoms
mov
je
xor
lods
mov
fcoml
jmp
jp
test
pop
push
xchg
xchg
mov
mov
ss
xchg
sbb
fadd
pop
lahf
inc
ret
clc
scas
int
gs
sub
inc
cmp
icebp
adc
inc
dec
jno
aam
dec
nop
fwait
sbb
fsts
sbb
pop
push
shlb
dec
in
inc
xchg
jecxz
call
cwtl
mov
movsb
aas
adc
iret
adc
addr16
icebp
in
jnp
jne
push
xchg
add
sarl
pop
cld
mov
xor
test
push
mov
push
add
and
mov
or
xor
shll
mov
jne
popf
pop
movsl
jl
jg
mov
dec
js
sbb
push
loopne
sub
pop
adc
jnp
xchg
lahf
adc
daa
hlt
std
out
pusha
lret
push
xchg
sub
dec
jb
pop
pop
push
inc
insb
dec
pop
nop
push
xor
cmpb
mov
insb
enter
cmp
mov
lods
aam
leave
dec
mov
sbbl
mov
frstor
mov
popf
push
mov
xchg
hlt
icebp
mov
pushf
mov
sub
push
test
xchg
loope
dec
pushf
call
jne
and
sbb
sub
fxch
subb
or
push
adc
sub
addr16
xchg
lcall
push
mov
movsb
ror
stos
stos
sbb
xor
inc
mov
xor
setae
inc
sbb
out
adc
repz
or
inc
ret
mov
shr
ds
mov
sub
xchg
int
cs
mov
push
jmp
enter
jno
nop
fldenv
adc
cmp
jo
pop
enter
nop
je
jp
mov
stos
in
lods
or
sub
ds
push
inc
add
mov
cmp
stc
dec
push
repnz
aad
sub
and
stos
fistl
mov
push
pop
push
mov
repnz
xor
mov
rorl
mov
mov
add
mov
add
lea
test
ficoms
out
insb
ret
mov
imul
leave
movl
mov
sbb
test
adc
lea
std
mov
out
jae
inc
add
sbb
incl
loopw
push
cmp
sbb
cmp
mov
in
imul
mov
mov
imul
popa
pop
hlt
sahf
jnp
jl
jb
aad
pusha
sub
mov
cmp
cld
push
lret
fidivs
cwtl
push
push
iret
mov
and
in
cmp
sbb
lods
jb
xor
sbb
test
test
adc
imull
xor
sub
or
ds
jns
add
std
ret
add
sub
js
int3
loop
adcb
mov
arpl
arpl
xchg
jp
and
imul
jge
jp
mov
mov
bound
ds
mov
push
fadds
cmp
pushf
int3
fdiv
iret
jg
hlt
xor
cmp
push
add
dec
cmp
sbb
stc
sub
out
mov
dec
std
mov
jb
sub
push
movsb
cmp
push
enter
xchg
adc
ljmp
jle
rorb
movsb
xchg
iret
jle
movsl
sub
jae
leave
scas
mov
stos
test
mov
or
xchg
cmp
pop
push
rolb
mov
xchg
mov
pop
dec
jle
test
inc
mov
sti
pop
sub
notl
mov
hlt
xadd
cltd
aad
aas
loope
cmpsl
push
mov
rclb
lods
sbb
mov
sahf
imul
xor
and
push
adc
or
jmp
rcrb
pop
cmp
xchg
sahf
out
fsubrl
loop
fiaddl
mov
fldenv
jle
and
push
negb
leave
cmp
cmpsb
push
jmp
mov
outsl
jmp
fstl
cmp
lret
push
xchg
arpl
push
lock
dec
lea
movsb
jae
sbb
pop
jp
jmp
mov
mov
fstpl
ficoml
hlt
cli
sub
idivl
test
inc
orb
sahf
mov
lds
dec
sti
jg
out
pop
bound
and
movsb
rcr
dec
leave
push
push
add
out
pop
jl
in
roll
push
rclb
dec
lods
or
ja
mov
pushl
neg
jecxz
mov
and
popf
sahf
in
jg
cs
stc
ret
mov
xchg
push
dec
sbb
push
xchg
test
test
scas
add
mov
jp
sbb
sub
cmpsl
clc
add
jmp
cmp
adc
lret
jmp
rorb
outsb
sub
jbe
mov
sarl
out
imul
scas
add
mov
and
or
in
adc
inc
jmp
gs
cmpsb
ficompl
dec
das
push
fwait
add
shlb
dec
cmp
or
xchg
out
loopne
dec
sub
scas
call
loope
or
outsb
out
es
lods
or
addl
cmpsl
nop
aaa
test
and
cmpsl
and
inc
jmp
xor
aas
out
mov
lret
push
mov
sub
pusha
push
outsl
scas
lea
int3
lret
and
movsl
mov
cli
into
adc
ret
cwtl
or
in
das
jo
ss
addl
jl
add
adc
xor
mov
xchg
mov
xor
addr16
fisubrl
lds
mov
stos
mov
nop
inc
or
movsl
filds
and
adcb
jmp
or
js
cmp
jecxz
ror
push
sbb
pop
lock
push
cmp
mov
rcrb
jno
add
cltd
push
push
pop
btr
popa
dec
fsub
sub
fimuls
or
and
xchg
outsb
jp
mov
push
loop
lods
cmpsb
into
or
jge
dec
ror
lcall
int3
jb
repz
int3
test
pop
das
push
test
jae
and
push
out
push
jnp
outsl
addr16
fwait
lahf
enter
sbb
cli
mov
fidivrs
ffree
mov
mov
pushf
rcll
testl
jle
lcall
aaa
sarl
xor
bound
in
cmp
xchg
and
fbstp
aad
je
ret
mov
push
sub
addr16
test
ret
mov
sbb
shll
mov
inc
stc
mov
adc
push
adc
jp
xchg
cmpsl
and
fidivs
mov
jno
jg
js
mov
pop
lahf
pop
or
ds
int3
cltd
mov
and
stos
cmp
fbstp
xchg
push
lds
push
sbb
imul
xor
aam
pcmpgtb
sub
or
les
ss
cmpsb
and
fwait
sbb
cli
cmpsl
fiaddl
jecxz
dec
roll
cmp
enter
imul
xor
mov
stc
lret
imul
mov
pop
arpl
out
ret
ret
push
enter
mov
jbe
scas
mov
subb
sahf
jns
mov
and
xor
xchg
adc
int
mov
mov
sub
mov
loop
cld
ficomps
ret
xlat
test
and
test
inc
jbe
xor
mov
loop
das
test
mov
mov
sub
xchg
mov
cmpsl
jge
mov
adc
add
icebp
adc
sub
nop
icebp
bound
dec
aad
jl
jo
arpl
jg
fmull
cmc
push
lcall
jmp
les
es
repnz
xor
lods
iret
test
imul
das
andl
lea
cmpsb
sub
adc
gs
or
rcrl
in
cmp
xor
mov
in
mov
fs
scas
mov
in
dec
sahf
jb
sub
repnz
push
out
and
nop
and
mov
xchg
insl
add
out
js
imul
jecxz
mov
pop
pop
xchg
popf
xor
je
sbb
ds
inc
addr16
lret
and
sub
xor
popa
pushf
outsl
in
dec
sarb
xor
lcall
lcall
sub
ror
xchg
mov
sub
jns
fs
addr16
inc
fdivrp
shlb
pop
adc
mul
mov
sbb
cmc
dec
adc
or
adc
push
pop
inc
xchg
push
faddl
fnstenv
push
scas
arpl
jo
mov
mov
pop
test
es
fistps
pop
das
enter
or
mov
push
sub
movsb
int
imul
sbb
adc
mov
dec
add
jle
cmp
xchg
in
inc
pop
dec
out
mov
add
nop
xor
mov
push
dec
xchg
out
pop
jb
in
and
xor
push
sbb
insl
add
adc
imul
and
xchg
fmull
fwait
or
cmp
xor
fsubrl
movsl
mov
ja
mov
push
sbb
into
xor
insb
pop
fidivs
and
ucomiss
dec
out
push
test
adc
js
mov
lods
mov
mov
repnz
inc
shr
inc
aaa
jle
mull
mov
jp
mov
popa
cmpb
cmpsl
sbb
xchg
fdiv
aam
js
sbbl
out
inc
pop
idivb
jge
outsl
fcoms
xor
add
cmpsl
aaa
dec
rolb
decl
rolb
stos
pop
mov
test
jbe
adc
mov
pop
outsl
push
mov
mov
dec
xorb
cmp
test
sbb
pop
flds
mov
dec
daa
cmc
sub
jo
mov
inc
loopne
ja
leave
pushf
cmpsb
pop
nop
sbb
sbb
jo
pop
std
lcall
jns
xchg
ljmp
js
jbe
mov
xor
mov
js
out
push
ljmp
inc
in
add
push
in
mov
add
cltd
mov
or
rol
outsb
cld
mov
outsb
insl
loop
add
in
aam
aaa
cmp
pop
jg
cmpsb
repnz
cmp
add
push
cmc
cmp
add
sbb
inc
out
rorb
popa
outsl
mov
int3
scas
inc
ss
add
xor
clc
cli
pop
out
mov
cmc
jbe
inc
cmpsb
fisubrl
nop
xor
ss
mov
mov
stos
jae
lock
dec
test
or
xor
fbld
mov
loopne
adc
fs
pop
out
mov
jne
mov
pop
fildl
lahf
xor
dec
test
mov
fisubrl
jnp
lods
fimull
cs
ficoml
mov
lahf
int3
test
mov
test
add
pop
and
aad
pop
aaa
pop
inc
pushf
movsb
mov
jmp
mov
mov
lcall
scas
push
pop
xor
jmp
jmp
shlb
cld
cmpsb
call
lcall
add
sahf
mov
stos
aad
push
xorl
wrmsr
popa
jne
scas
movsb
xlat
cmpsb
cli
and
in
pushl
call
test
int3
lea
push
add
lea
loope
mov
mov
inc
push
lret
and
enter
lret
mov
pop
pop
pusha
dec
pushf
add
mov
xchg
or
xchg
sbb
adc
out
into
sarb
aas
gs
movsb
popa
movsb
movsl
filds
xlat
pop
dec
cld
mov
popa
cmpsb
add
mov
sub
dec
push
sub
ljmp
and
push
nop
xor
mov
inc
jecxz
jne
out
fs
inc
pusha
mov
imul
lods
cmp
div
inc
in
sbb
fistl
xchg
jecxz
je
cli
aam
add
and
mov
jns
mov
fld
jecxz
call
xor
xchg
dec
sub
mov
pop
cmp
xor
cmp
shrb
adc
cmpsb
imul
in
loopne
pop
xchg
rol
mov
das
cmp
and
adc
cli
ret
addr16
outsb
stc
mov
adc
push
jmp
push
stc
shll
sub
push
sti
icebp
mov
pop
movb
ds
fwait
or
gs
ret
and
cmp
push
and
insb
jne
popf
rorl
sbb
iret
movsb
mov
in
lods
mov
sub
cmpsl
cmp
out
addr16
push
ret
sbb
test
je
stc
rcrl
inc
lock
sub
cltd
out
pop
bnd
icebp
out
adc
imull
mov
push
test
cs
xor
pushf
cmp
call
dec
andl
push
lea
pop
shrl
movsb
in
push
jp
mov
lea
shll
push
pause
xor
xchg
sti
lea
mul
jo
and
xchg
outsb
xor
push
dec
cmp
mov
lahf
push
pushf
xchg
cmp
sbb
frndint
aaa
inc
xor
ret
pop
popa
mov
dec
das
or
adc
mov
insb
std
adc
xor
adc
ja
push
cmp
or
mov
mov
jne
dec
push
nop
sub
mov
and
dec
fs
lcall
dec
adc
jmp
inc
insb
dec
push
adc
sbb
ss
out
stos
add
lds
jge
lcall
xor
jge
mov
test
mov
sub
mov
mov
bound
jae
mov
pop
sub
xor
stos
sub
out
and
call
outsb
mov
fdivrl
mov
lds
loope
js
int3
mov
addr16
repz
inc
aaa
add
pop
sbbl
sti
cmc
sub
mov
push
mov
lea
pusha
out
enter
mov
ficoml
daa
and
and
lods
lods
xchg
out
lahf
jb
xlat
and
mov
dec
popa
pusha
mov
lret
imul
jnp
push
mov
rorb
cs
in
pop
mov
iret
clc
test
js
pop
fidivrl
mov
rcl
das
mov
mov
xor
adc
push
pop
enter
sbb
xchg
sbb
mov
jae
inc
fsubl
dec
insb
mov
mov
inc
sahf
mov
imul
jbe
cli
dec
mov
mov
mov
pop
or
mov
lods
push
jb
adc
xchg
insl
call
fnstenv
mov
xlat
ds
dec
lcall
and
mov
js
jae
and
hlt
pop
jns
in
or
adc
mov
or
mov
push
and
push
jge
inc
mov
xchg
push
push
cmpsb
add
pusha
popfw
fisubrl
jne
push
push
call
test
or
test
repz
xchg
dec
xchg
lea
dec
popf
popf
push
cmp
add
sub
std
lock
xchg
jmp
mov
test
sub
shlb
xor
ret
jmp
add
adc
mov
test
push
in
clc
jmp
xchg
jecxz
jecxz
adc
int3
push
in
popa
pop
inc
adc
mov
iret
mov
mov
leave
ds
outsl
add
cmpsl
lcall
or
mov
imul
enter
imul
mov
sbb
movsl
popa
jecxz
push
sbb
push
test
xor
xchg
pop
jg
jnp
push
xchg
pop
sbb
pop
loope
sub
iret
push
push
sub
ja
mov
or
shlb
arpl
lods
push
aas
mov
fistpl
xchg
aaa
push
push
jb
ja
ret
jne
rorl
mov
and
aaa
add
ljmp
outsb
cmpsb
lahf
xchg
rclb
or
bound
stc
mov
add
sbb
sub
movsl
pop
test
dec
jle
fnstsw
fnstenv
inc
ljmp
dec
push
test
mov
scas
add
fisubrl
mov
and
sbb
test
rclb
xlat
lret
ss
data16
mov
adc
iret
sub
or
rcr
filds
imul
pusha
and
inc
push
test
insb
adc
mov
xchg
mov
filds
rcrl
lret
sbb
jge
sbb
jne
cmp
repz
je
cmp
inc
into
sbb
lret
nop
lret
out
adc
stos
dec
inc
cwtl
nop
mov
fs
sbb
jne
and
aaa
popa
sbb
mov
sub
jle
testb
lods
lods
jg
mov
sbb
sbb
les
mov
fnstsw
out
hlt
repz
ficoms
cltd
fistl
lret
popa
in
stc
js
js
inc
sub
insl
test
push
cmp
sbb
sub
fwait
iret
cwtl
cmp
ss
imul
and
jp
sarl
xchg
jbe
add
iret
push
pop
inc
fcoms
iret
mov
push
lret
out
mov
sbb
fcomps
dec
cmp
add
cmp
add
test
xrelease
sti
ror
pushf
lock
cwtl
xlat
push
into
data16
aaa
add
fsts
jo
xchg
pusha
jg
mov
in
out
rcl
cld
xchg
push
adc
mov
jmp
xchg
push
iret
int3
or
add
fildl
dec
and
push
xchg
lock
xor
test
scas
enter
fisubs
mov
scas
sbb
xchg
adc
mov
hlt
push
sbb
jmp
mov
inc
dec
jb
mov
or
jns
in
mov
jae
cmpsb
xor
loopne
aas
es
sbb
mov
sub
xor
inc
or
lods
enter
subb
mov
jp
xor
adc
sbb
mov
dec
add
inc
aad
iret
jmp
mov
pusha
pusha
mov
xchg
adc
lret
pop
sarb
test
xchg
xor
int3
lret
add
sub
lret
push
xor
fsin
jbe
lahf
jae
shll
sti
inc
and
rcll
dec
push
inc
push
jecxz
dec
adc
fs
jecxz
jne
shlb
mov
jnp
sbb
push
mov
sub
notb
mov
lock
outsb
add
in
jnp
inc
ja
in
push
lret
xchg
enter
mov
lret
inc
sahf
fisttps
adc
pusha
int
repz
fwait
outsb
sub
cmp
and
out
insl
stos
arpl
mov
fdivrl
es
pop
dec
movlps
lcall
neg
rolb
ljmp
fbstp
sub
arpl
pop
pop
push
out
loopne
adc
mov
mov
jg
cmc
out
shl
clc
enter
insb
cld
mov
mov
mov
adc
fldl
or
enter
out
cmp
pop
cwtl
ret
push
cwtl
jnp
dec
fs
sub
fildl
sub
sub
sbb
leave
xor
fistps
sbb
cmpsl
pop
inc
sub
xor
adc
test
lret
int3
sbb
add
loopne
ret
sti
aaa
jmp
jo
adc
hlt
idivl
scas
cmpsl
repnz
sahf
xchg
xchg
std
lret
jge
test
or
sub
bound
jecxz
pop
and
loop
xchg
mov
push
pusha
push
ret
repnz
test
lods
inc
bndldx
jmp
aam
or
cmp
sbb
call
iret
out
js
les
stos
mov
adc
mulb
es
cmp
ds
test
ficomps
in
stc
xchg
lods
jnp
daa
outsl
lcall
in
test
lods
mov
mov
jmp
xchg
sbbb
mov
nop
int
push
sti
jl
xor
sbb
jg
mov
out
mov
xor
jmp
cltd
inc
xor
loop
mov
push
call
dec
sbb
mov
mov
loope
xor
popa
push
jecxz
push
mov
aam
mov
push
lods
mov
add
mov
sarl
mov
nop
ss
sbb
push
xor
out
in
testl
subb
call
cmp
inc
push
pop
pop
mov
in
ss
dec
sti
adcb
mov
xor
sbb
ds
test
lods
inc
fyl2x
adcl
mov
andb
mov
lods
shrb
adc
mov
ss
inc
xlat
jl
ss
mov
stos
movsb
jecxz
loopne
adc
cmp
sub
push
xor
add
push
lods
scas
loopne
push
cwtl
out
lret
mov
sti
jp
lods
jge,pt
xchg
shll
mov
sub
inc
or
loopne
lods
push
das
loop
ret
lahf
fucomip
aad
xchg
jp
subb
js
jno
cwtl
sub
jg
push
rolb
je
and
pop
add
cwtl
ja
xor
xchg
cwtl
pop
add
pop
arpl
popa
and
jecxz
dec
jns
loope
out
xchg
inc
fildll
or
imul
mov
xor
mov
rorb
rclb
mov
imull
scas
iret
stc
sub
lds
inc
inc
sbb
lea
push
icebp
mov
fs
and
sbb
lahf
push
div
sbb
fldl
adc
sahf
mov
ss
pop
inc
loope
mov
pop
gs
inc
xchg
mov
imul
clc
and
jo
pop
dec
push
shl
ret
cs
push
cmp
mov
mov
sbb
push
cwtl
adc
in
cmpsl
mov
cli
scas
add
outsb
negb
ret
push
filds
add
push
adc
dec
nop
mov
out
frstor
cltd
ret
cmp
out
push
icebp
addr16
negb
pop
jne
mov
pop
mov
loopne
iret
stos
inc
mov
lds
sub
mov
imul
adc
fwait
add
or
stos
int
shl
xlat
mov
jae
adc
outsb
sahf
fwait
loop
js
mov
push
scas
sarb
psrlw
insl
add
cltd
mov
fildl
cmp
cltd
cli
xchg
lock
jnp
mov
mov
xchg
mov
movsb
sbb
data16
pusha
pop
pop
stos
aad
popa
mov
loop
scas
std
jge
inc
pop
push
mov
adc
in
fcmovnu
pop
xor
cmpsl
or
out
aaa
and
sbb
cmc
inc
pop
loopne
mov
imul
call
fnstsw
xchg
lods
mov
cmc
insb
push
ret
dec
pop
stos
mov
jmp
push
iret
movsb
dec
push
or
cltd
inc
es
adc
cmc
or
movsl
adc
fcomps
sahf
lret
movsb
andb
ss
jl
push
inc
ja
and
mov
js
sub
jecxz
rorb
sub
sti
and
push
cltd
pop
or
in
push
xor
fimull
fisubl
sbb
cmpsl
daa
dec
cmpsb
ss
lret
rol
mov
mov
test
jnp
jmp
sbb
add
bound
mov
mov
xchg
decl
popf
je
pop
and
and
test
mov
sahf
sub
aad
aaa
xchg
outsb
cmp
cmp
xor
lahf
add
mov
dec
imulb
popf
sub
jmp
enter
cwtl
cmp
scas
sub
scas
mov
pop
fimuls
pop
jp
hlt
shlb
sbb
cmp
mov
pop
out
pop
pop
aas
in
jl
pop
xor
add
subb
cmc
aaa
adc
pop
ret
adc
shrl
lahf
jle
mov
sahf
mov
xchg
adcb
loope
cmp
in
js
arpl
stc
popf
repnz
push
sub
vmread
mov
add
lret
mov
ret
movsb
push
fisubrl
cmpsl
sub
repnz
jno
adc
push
ficompl
scas
insb
aaa
jge
xchg
jl
fstpt
cld
and
fbld
out
mov
pusha
adc
mov
scas
setno
dec
push
push
pop
cmp
testl
hlt
ds
dec
pushf
leave
jnp
xchg
inc
loopne
ror
orl
fnstcw
add
ror
fwait
ds
xchg
pavgb
jp
movsl
add
outsl
xchg
mov
push
mov
cwtl
out
xor
pop
jmp
stos
pop
lds
sub
push
icebp
sbb
inc
movsl
xchg
xlat
ret
push
xor
inc
mov
inc
mov
cmp
add
hlt
or
loopne
or
sub
cmpsb
cs
inc
adc
mov
rorl
loop
ja
push
insl
cli
cmp
sbb
add
dec
out
in
pop
inc
out
imul
jg
data16
dec
xchg
scas
cmp
push
cwtl
sub
cmp
dec
xchg
pop
movsl
stc
push
sbb
out
movsl
jecxz
iret
sbb
in
xchg
imul
addl
xorl
addb
pop
add
pop
xlat
dec
xlat
vsubpd
adc
fcomps
loop
imul
adc
mov
xor
fbld
les
fsubl
fnstsw
xchg
js
mov
das
inc
scas
fwait
jmp
push
test
push
cmp
sbb
in
sbb
push
sub
scas
andb
cmp
fs
sbb
ljmp
movsl
insb
adc
bound
mov
sub
mov
cmp
adc
push
jmp
into
pop
push
dec
dec
iret
inc
add
dec
adc
lcall
xor
iret
sarb
hlt
dec
out
ror
out
jmp
pushf
rclb
dec
das
or
nop
xor
jns
push
sub
jp
mov
or
mov
int3
dec
jmp
sbb
dec
sahf
jl
add
dec
jmp
outsb
shr
iret
xchg
ja
mov
loop
adc
out
idivb
cmpsb
neg
adcl
mov
jg
shl
ss
les
lahf
jno
shrb
adc
push
loop
mov
ficoms
fidivrs
push
out
push
mov
ret
mov
iret
dec
iret
cwtl
mov
jae
push
insl
int3
ficoms
fwait
shlb
jo
inc
ret
scas
dec
ljmp
add
mov
and
xorb
sub
adc
add
jbe
sbb
in
and
ljmp
dec
ds
pop
pop
std
pop
jge
imul
mov
sbb
pop
push
hlt
sarb
scas
pop
sbb
adc
ret
sbb
fstpt
pop
int
xchg
jmp
mov
stos
hlt
cwtl
test
xchg
xchg
aam
ret
popa
pop
sti
mov
pop
lods
fcom
mov
inc
aas
dec
push
cmp
mov
cwtl
ljmp
aaa
xchg
pop
in
mov
lods
es
or
adc
jecxz
xchg
push
mov
inc
rorb
dec
mov
leave
ret
notl
dec
jg
xchg
je
jno
sub
dec
leave
bound
iret
fimull
lret
cmp
pop
cltd
mov
push
adc
dec
jns
arpl
insb
mov
out
and
call
mov
and
insb
and
and
popf
scas
and
scas
cmp
sub
incl
push
xchg
test
aas
mov
cmp
adc
mov
aam
xchg
xchg
clc
cli
dec
xlat
mov
and
out
lea
mov
loopne
add
and
mov
sub
sub
xchg
xor
cwtl
pop
sahf
mov
push
cmpsb
jae
cmp
or
xchg
inc
pop
mov
mov
jns
insl
out
aas
sub
mov
outsl
and
or
pusha
inc
xor
pop
push
push
xchg
popa
add
or
push
inc
fwait
jp
icebp
adc
in
and
test
pop
xchg
test
cmp
int
xchg
pusha
mov
sbb
push
rcl
popa
lea
flds
mov
pop
mov
push
jmp
jo
das
ljmp
sbb
nop
les
cmp
or
popf
push
lret
iret
cmpsb
xchg
fmulp
sahf
and
add
sub
xor
scas
pop
rcl
fcmovbe
jge
das
roll
loope
mov
addl
leave
cmp
les
push
lret
idivb
jmp
or
aas
or
pop
pusha
xchg
pop
sarb
cs
mov
push
inc
xchg
scas
and
xorb
je
sbb
adc
pusha
push
inc
out
jecxz
sub
push
push
jmp
cli
loop
add
dec
mov
lds
std
je
xchg
mov
or
cmp
int
sbb
ss
popf
mov
insl
dec
xchg
mov
jnp
adcl
lahf
mov
lcall
popa
push
sbb
repnz
in
jo
adc
pop
dec
cmp
std
dec
movsb
fwait
mov
imul
xlat
mov
pop
inc
aas
enter
out
js
and
fs
addr16
popf
gs
ret
jecxz
in
mov
jnp
jns
add
cld
pop
lea
cmpsl
or
xchg
jle
add
sub
jne
aad
lods
outsl
xchg
add
xlat
andb
idivb
fisubl
xchg
hlt
cmp
imul
nop
lcall
xor
mov
pop
add
mov
jg
sbb
xor
adc
or
push
scas
and
lahf
mov
inc
xchg
xchg
sbb
push
jns
icebp
js
sub
add
dec
pop
push
lret
sub
inc
sahf
push
pusha
gs
stos
or
add
aas
dec
mov
fs
leave
mov
movsl
aad
pop
ds
xcrypt-cfb
cmpsl
and
xlat
loop
pop
fidivl
jl
mov
imul
fldt
push
bound
iret
mov
pop
mov
mov
dec
jle
sub
cmc
into
fstpl
out
and
and
xchg
sbb
xchg
in
movsb
scas
push
push
jecxz
call
sbb
push
push
pop
lea
cmp
xor
mov
inc
sub
loope
cmc
pop
mov
in
sub
jmp
es
es
loope
outsl
pop
ljmp
mov
mov
jne
in
aas
pop
jns
sarl
fs
sbb
dec
stc
cmpsl
hlt
sti
aad
ljmp
jg
cmc
xchg
push
outsb
add
adc
inc
pusha
out
dec
lds
imul
mov
cmpsl
pusha
cli
mov
sarl
outsb
pop
aad
cmc
aad
movsb
sub
sti
stos
jl
ret
adc
cmpsb
push
cmpsb
push
mov
jno
push
pop
pop
push
adc
mov
jg
inc
sub
dec
or
pop
pop
cld
xor
inc
sbb
and
cmpl
dec
or
jne
cmp
xchg
push
cmpsb
fisubl
jno
aas
xor
imul
inc
sbb
or
leave
dec
push
in
inc
fistl
pop
add
je
es
push
cmp
cmp
int3
mov
xchg
ja
mov
stos
inc
push
pop
loop
dec
popf
push
mov
jbe
sub
sti
add
pushf
divl
loope
pop
scas
ret
add
insb
test
lods
and
bound
sub
fnstenv
mov
dec
or
fs
inc
inc
dec
lods
jae
inc
or
iret
dec
add
pop
push
loop
sub
das
pop
loope
xchg
inc
jmp
pop
imul
js
pop
push
movsl
stos
mov
adc
aaa
lahf
adc
inc
idiv
enter
dec
jne
mov
inc
testl
in
lock
xor
push
adc
pop
xchg
mov
sub
mov
cmpsb
mov
dec
mov
mov
dec
pop
push
add
ja
mov
add
cmp
fsubrl
inc
adc
cmp
sti
test
pusha
in
cmp
inc
inc
in
sbb
fs
sbb
lock
push
rclb
lcall
mov
jle
inc
test
jle
pushf
add
jl
mov
pop
test
or
sahf
or
and
outsb
pop
ja
jne
xchg
pop
inc
mov
dec
push
mov
outsl
pop
fists
and
clc
mull
jbe
out
push
loopne
or
or
popf
scas
in
lock
fdivrs
jge
mov
jmp
or
or
pop
adc
dec
test
adc
jns
fidivl
mov
aas
arpl
lahf
jnp
sti
jmp
call
ja
stos
jne
aaa
push
lret
lea
cmp
mov
clc
int
xchg
dec
int3
mov
pop
and
lret
xor
mov
icebp
test
incb
mov
inc
mov
xchg
xor
mov
xchg
fmull
bnd
xchg
inc
adc
add
jp
xchg
cli
fcompl
push
out
outsb
dec
xor
push
jecxz
jmp
mov
pop
leave
xchg
addr16
mov
and
fcoms
mov
add
xor
in
test
dec
mov
scas
in
loop
data16
ja
negl
mov
loop
in
inc
stos
bound
dec
cmp
cs
repnz
fisubl
arpl
dec
add
sub
mov
in
std
fnstsw
or
sahf
xor
push
jns
jmp
lea
and
hlt
test
xor
fistpll
icebp
cmp
iret
xor
adc
popf
adc
push
mov
stos
push
daa
je
mov
ret
pusha
out
aas
xor
adc
xchg
jle
movsl
mov
cmp
xchg
pop
cmpsb
mov
pusha
sbb
imulb
leave
mov
incb
popa
popa
cmp
daa
ds
mov
cli
sbb
js
or
sahf
ret
inc
lock
add
jecxz
sub
dec
jae
cmpb
add
outsl
xor
push
mov
push
lock
adc
push
stos
les
sub
mov
sbbl
ljmp
pop
and
nop
test
shl
int3
fistpll
dec
popf
lcall
sub
add
ja
dec
pusha
or
dec
stc
sub
andb
loopne
push
xlat
inc
fcomps
jmp
sub
adc
adc
ret
sub
xor
jne
ficomps
out
int3
inc
add
loopne
and
push
cltd
pop
dec
and
xor
insl
scas
mov
and
inc
fcoms
jecxz
mov
mov
xor
dec
dec
pop
movsb
cmp
sub
or
push
cmpsb
adc
or
push
inc
pop
and
aam
and
cmc
mov
test
stos
mov
or
mov
mov
mov
clc
sub
xchg
pop
and
rorb
and
imul
lcall
ljmp
int
popa
arpl
ljmp
sbb
xor
stos
add
data16
cmp
add
into
idivl
sti
dec
mov
push
in
adcb
lods
in
sub
jl
xchg
mov
xorl
pop
addb
icebp
stos
pop
fcoms
pop
test
cmp
stc
data16
andb
add
push
xorb
cmp
mov
xor
insl
cmpb
dec
ror
push
sbb
out
push
add
inc
jp
push
mov
xor
stos
dec
add
push
es
mov
dec
mov
shlb
loopne
mov
out
jae
fcoml
pop
dec
in
test
pop
jbe
push
inc
xor
bound
cmp
add
inc
in
pop
int3
test
jmp
mov
cwtl
xchg
pop
cltd
shr
xchg
cmp
int3
jecxz
mov
dec
xchg
fmulp
pop
mull
push
les
repz
jnp
inc
mov
fsubr
inc
lods
mov
je
and
das
fbld
out
push
xchg
jle
in
fiadds
xchg
ret
jg
in
cli
lods
es
xlat
in
aam
enter
mov
mov
out
sbb
stos
out
je
or
in
scas
adc
mov
lock
lret
scas
mov
xor
push
jb
in
loope
sbbb
cld
ficomps
bound
xor
jp
and
adc
popf
jno
stos
xchg
lods
pop
dec
jle
or
mov
pushf
mov
in
das
leave
xchg
cmp
adc
mov
pop
lds
stos
xchg
jno
dec
xchg
fmuls
lret
out
pop
xchg
dec
mov
cs
je
fmull
ret
outsb
mov
or
movsl
movsb
testb
push
aam
lret
jle
and
sub
xor
jae
cmp
cld
int3
pop
ret
xchg
mov
jne
mov
push
sub
cwtl
inc
mov
inc
rclb
and
add
icebp
dec
cmp
sbb
add
add
pop
dec
xchg
dec
jns
cltd
add
xor
push
shll
push
cmp
xchg
cmpl
popa
inc
pop
jns
dec
or
or
dec
sbb
lods
cli
cltd
jno
sbb
pop
xlat
into
aas
fbstp
push
dec
out
out
xor
cld
test
jle
sahf
lret
pop
out
notb
mov
popf
mov
dec
imul
sub
daa
xchg
hlt
push
jb
dec
test
inc
fdivl
or
inc
lcall
fimuls
sbb
mov
filds
sti
xor
fdivl
sbb
neg
roll
scas
je
mov
fdivs
in
and
inc
lods
lret
inc
loope
hlt
iret
or
sahf
push
rolb
loope
add
push
push
in
popf
xor
movsl
aam
cli
shlb
pop
or
xor
cwtl
call
addb
mov
xchg
icebp
imul
jo
addr16
mov
add
xor
lock
xchg
fmull
adc
ret
fisubl
sub
lock
dec
ds
mov
xchg
stc
sub
sub
mov
cmp
into
sbb
lea
dec
lret
dec
mov
in
aaa
fnstenv
push
fdivrl
les
int3
das
and
test
and
sbb
add
inc
arpl
call
fidivs
jecxz
push
mov
out
gs
aam
xchg
xchg
imul
and
jbe
in
push
jecxz
fimuls
xor
jne
pushf
sbb
gs
mov
xor
lods
sub
add
repz
push
mov
push
in
sub
sbb
insb
dec
sarb
cmp
mov
jno
add
insb
pop
sub
lret
movsl
mov
push
mov
icebp
inc
sbb
hlt
xlat
inc
mov
push
pop
gs
std
mov
push
push
jl
mov
nop
sub
aam
ror
stos
outsl
xchg
icebp
je
mov
xchg
lods
rolb
shrl
insl
mov
and
dec
fisubs
lea
mov
push
rol
aad
push
cmp
pop
ljmp
data16
or
leave
jl
movsl
pop
push
or
or
pop
movsl
fstsw
fs
test
cwtl
jbe,pn
sahf
loope
lds
or
in
rol
popf
sbb
inc
hlt
sarb
or
xchg
movsb
and
ss
mov
icebp
adc
cwtl
add
mul
repnz
pop
fiadds
dec
aaa
dec
sub
cwtl
out
call
xor
leave
gs
jg
das
mov
jl
cld
dec
fdivs
lahf
scas
jne
shrl
sarl
push
xchg
les
and
pop
hlt
jg
or
inc
ja
mov
aam
into
inc
into
dec
xchg
cmpb
mov
mov
clc
jno
jae
out
cmp
sbb
adc
mov
inc
xchg
lods
fadds
jb
cmp
popf
push
push
sti
inc
data16
and
ret
xchg
push
out
mov
cli
in
aas
mov
mov
orb
sbb
leave
mov
pushf
dec
stc
test
lcall
mov
mov
ret
lret
lret
adc
lret
jne
andb
adc
in
arpl
sbb
in
es
jo
push
xchg
movsb
cmpsb
mov
nop
sahf
enter
sbb
mov
fadds
mov
outsb
jecxz
gs
cmp
loope
or
mov
xchg
xchg
insb
add
int
lock
xor
int
and
cmp
pushf
insl
mov
jle
jmp
mov
stc
adc
outsl
in
ror
adc
inc
push
mov
xchg
or
xchg
inc
ss
js
push
sub
xchg
sti
adc
lods
jbe
cmp
lea
pop
movsb
mov
adc
incl
mov
mov
ja
inc
insb
push
cwtl
cmp
mov
fsubrs
mov
inc
incl
add
xchg
ds
sub
popf
out
dec
mov
dec
cmc
jmp
xlat
out
add
inc
mov
loopne
pushf
dec
icebp
or
mov
ficoms
and
push
ja
push
add
out
sbb
and
lea
movsl
push
in
nop
std
mov
fcmovnu
iret
sahf
data16
xor
arpl
xchg
pushf
jecxz
cmpsb
in
xor
xor
jne
xor
and
mov
int3
sarb
mov
leave
add
cmp
into
fidivs
push
xor
xchg
sbb
adcb
mov
xor
std
push
cmc
out
test
ljmp
lds
lock
bound
xor
out
inc
imul
cmp
mov
loop
or
leave
jo
mov
cmp
jmp
jb
sub
loopne
addr16
hlt
rolb
out
xchg
test
into
inc
inc
pop
ja
lods
sub
enter
sub
sbb
pushf
sbb
out
call
sub
ds
dec
addr16
xor
cmpsl
scas
inc
cmpsb
xchg
mov
cmc
jge
push
cs
aaa
pop
xchg
sub
mov
xchg
mov
push
loopne
in
pop
mov
and
pop
xor
dec
cmp
xor
popa
mov
push
mov
mov
addr16
xchg
ljmp
dec
and
and
pop
xchg
ret
mov
pusha
jbe
push
dec
add
sarl
adc
and
test
ljmp
out
sbb
in
loop
decl
sbb
push
jno
fisttpll
sbb
pop
stos
dec
push
sarb
les
dec
cltd
cmc
testl
pop
cld
les
outsb
jne
dec
adc
cmp
inc
dec
daa
ds
outsl
xchg
loope
sub
pop
dec
inc
dec
test
ljmp
arpl
xchg
rcrb
or
lret
pop
icebp
arpl
mov
xor
aad
ds
adc
loopne
push
ret
xor
mov
dec
xchg
sub
sub
das
in
fdiv
mov
cli
and
xor
mov
sbb
fs
insl
adc
xchg
lea
shr
sbb
mull
movsl
xchg
pop
pop
loope
push
jnp
test
cmp
fadds
pop
add
ret
cwtl
and
out
popf
xchg
insl
push
xor
nop
dec
xor
xchg
push
jo
imul
mov
jmp
mov
movsb
loope
imul
test
xor
push
ficoms
push
fwait
out
sub
mov
lods
ret
xchg
xor
out
add
mov
adc
dec
mov
mov
add
cmp
cltd
adc
movups
cmp
pop
xchg
out
repz
mov
xchg
rorl
push
sub
aam
mov
and
fs
aaa
std
mov
jmp
rcr
lea
lods
js
jl
shll
add
lock
sahf
test
decl
test
mov
adc
insb
outsb
push
std
jbe
cli
jp
sbb
notb
push
add
cmp
or
jbe
call
inc
and
mov
push
jg
push
iret
adc
sbb
dec
arpl
push
push
leave
stos
arpl
or
stos
rcll
sub
mov
fsubr
pop
in
cmp
and
mov
loope
daa
in
cwtl
sarl
xchg
pop
and
fisubrs
adc
es
push
aas
rorb
rcrl
inc
shlb
lea
jae
dec
scas
sbb
insl
jnp
xor
popl
adc
out
test
jb
call
xchg
enter
mov
jbe
scas
mov
les
pop
cmp
pop
xchg
xchg
jb
xchg
sahf
pop
jecxz
ror
mov
test
or
adc
in
mov
aaa
mov
sbbl
jge
lret
fisttps
cmpsl
sbb
mov
mov
xchg
sub
add
xlat
pop
bound
pop
dec
in
push
sarb
dec
inc
lcall
int3
lods
jb
fs
ret
icebp
adc
mov
cmp
fs
clc
and
cmp
and
dec
leave
dec
repz
test
iret
outsl
lret
add
js
sub
sub
cmp
or
ja
into
jo
enter
jecxz
ret
dec
aaa
xchg
and
pop
push
fld
and
fistpll
dec
mov
movsb
lahf
jecxz
nop
sbb
mov
loopne
in
xor
dec
pop
sbbl
mov
icebp
scas
mov
fdivrl
daa
int
sub
mov
pop
stos
ret
jbe
mov
dec
dec
mov
or
stos
and
das
jmp
jns
andl
pop
adcl
add
xchg
inc
pop
jl
int3
jb
pop
insb
daa
and
jge
jg
cmp
cmp
sbb
add
mov
jmp
scas
pop
loope
testb
popf
xor
or
pop
and
xor
mov
ds
push
jg
lds
insl
outsb
lahf
mov
jl
add
rorl
test
add
jl
and
xchg
adc
push
fnsetpm(287
sar
and
cmp
sbbl
mov
je
push
lahf
cmpsl
inc
cli
push
cmp
imul
in
leave
loope
mov
sarl
mov
orb
cmpsb
stos
inc
jnp
ja
xchg
cltd
scas
bound
out
pop
sar
addr16
rcl
inc
jg
and
adc
sbb
fldl
lret
scas
cmpsl
loopne
icebp
aas
xor
in
lret
jns
lahf
pop
add
jle
lods
aad
out
rolb
fnstenv
mov
push
and
hlt
lcall
stos
out
into
cld
jl
cmc
mov
cmpsl
rcl
andb
jp
cmp
inc
scas
cltd
bound
popf
inc
add
xor
xchg
daa
ja
push
aam
fistpll
cmc
in
cmp
adcl
sub
add
test
mov
dec
dec
mov
repz
mov
mov
adc
mov
daa
adc
mov
inc
jo
cmp
pop
xlat
jl
inc
jmp
adc
add
inc
pop
test
cmp
ret
mov
nopl
pop
gs
scas
pop
jp
fiaddl
xorl
inc
or
repnz
jbe
les
ja
out
and
mov
cmpsl
sub
in
mov
mov
jns
lea
out
jo
push
fisubl
mov
xor
mov
xchg
dec
mov
out
cmpsl
rclb
repnz
dec
pop
xor
arpl
sub
push
insb
dec
jns
int3
dec
addb
popf
lods
sub
mov
int3
out
or
daa
cld
mov
lret
bound
cmpsb
loope
js
cmp
mov
push
test
sbb
into
jl
leave
sbb
insb
leave
pop
or
jae
mov
sarl
push
test
mov
xchg
and
fistl
out
jle
in
jno
xchg
jb
mov
cmp
int
loopne
subl
jno
std
ljmp
xor
and
add
hlt
clc
inc
sbb
pop
jecxz
cmpsl
mov
outsb
comiss
inc
insl
mov
stos
xor
dec
ss
loope
sbb
add
xchg
sbb
aam
mov
in
and
pop
adc
cmpsl
cmp
jg
iret
cld
push
stos
cmp
pushf
sbb
fsubl
int3
mov
inc
push
mov
xchg
movsl
aas
mov
ljmp
outsl
lcall
xor
lods
fldenv
adc
xchg
cmp
sbb
xor
gs
sbb
xchg
sub
icebp
sahf
shr
vmulps
xor
inc
inc
mov
inc
adc
pop
jecxz
pop
mov
push
inc
cmpsl
mov
leave
mov
ds
enter
xchg
push
sbb
mov
sub
mov
mov
enter
mull
xchg
cmp
push
mov
mov
inc
mov
mov
movsl
xchg
ror
mov
mov
movl
add
out
sbb
iret
push
sub
mov
scas
test
ss
mov
add
nop
movsl
rclb
push
adc
mov
aaa
xchg
or
cltd
outsl
cli
sahf
inc
mov
cltd
ds
repnz
fdivrl
push
sub
faddl
and
add
aad
jo
jns
inc
dec
addr16
mov
pop
loop
jle
in
aam
push
call
adc
fidivrs
adc
push
shl
sub
ret
mov
or
in
ror
pop
sub
loopne
lcall
jle
or
push
insb
sarl
iret
int3
cmpb
fisttpl
pop
cmp
pop
jp
aad
push
loopne
mov
out
leave
pop
xchg
sbb
cmpsl
sub
jmp
cli
push
cmp
xchg
inc
out
roll
mov
cld
inc
negl
push
mov
jmp
push
mov
push
movsl
pop
ror
stos
or
popf
and
push
aam
jecxz
mov
aaa
inc
pop
es
daa
push
and
jbe
cmp
cmpb
sub
push
fisubl
cltd
push
jmp
ffree
les
push
dec
lret
aam
rcll
lods
jbe
adc
mov
inc
filds
mov
bound
mov
lock
pop
fdivs
fwait
bound
mov
jbe
inc
in
sub
ret
push
dec
push
pop
ljmp
dec
mov
insb
arpl
push
fbld
aam
add
daa
adc
adc
clc
leave
test
pop
lret
xchg
pop
mov
jle
testl
mov
or
mov
loopne
stos
and
pop
nop
sub
repz
cltd
jns
push
jmp
push
pop
add
rcll
scas
inc
xor
xlat
cmp
mov
add
stos
leave
sub
jae
or
sub
jae
push
loope
cmp
mov
cld
loope
pop
inc
xlat
ljmp
cmp
dec
aad
movhlps
mov
dec
fld1
push
cs
mov
ficompl
mov
shl
je
adc
pop
icebp
dec
fs
ja
mov
sub
outsb
loop
and
cmc
movsl
jo
bound
ret
push
push
lret
fistpl
dec
inc
jnp
jnp
movsl
call
sets
mov
imul
cli
sub
adc
pop
mov
roll
jo
cmpsb
jl
imul
push
xchg
mov
testb
sarb
mov
out
push
sub
mov
sbb
adc
push
pop
cmc
icebp
sub
lock
fdivs
add
ds
xchg
loop
add
fdivl
adc
cs
add
cmp
popf
cs
iret
out
lea
and
loope
jg
xor
fildl
insb
testl
int3
xor
stc
xchg
add
or
lcall
jp
pop
pop
mov
xor
ffreep
push
test
ret
xchg
fsub
js
xor
mov
stc
iret
and
xchg
lods
mov
sbb
mov
or
jg
sbb
sbb
mov
imul
inc
xchg
pop
xchg
mov
jae
xchg
ljmp
fs
aaa
in
daa
out
sarb
aam
push
psubusw
jnp
loopne
pop
mov
sub
xchg
stos
dec
sub
js
popf
and
mov
clc
test
jecxz
mov
daa
test
lea
add
enter
mov
pushl
xor
out
and
lcall
mov
ret
jl
and
lret
add
clc
scas
into
int3
or
orb
or
mov
mov
and
and
adc
xor
or
test
shll
in
push
sbb
sahf
stos
imul
mov
cmp
pop
jno
and
push
jmp
idivl
pop
add
stos
push
fsubp
pop
mov
stos
cld
mov
mov
stos
popa
mov
sti
popf
test
loope
jns
iret
mov
mov
rcrl
dec
aaa
mov
cmp
adc
adc
push
clc
push
jno
push
ja
push
outsb
stos
insb
dec
jl
adc
sub
imul
mov
bound
aad
into
adc
adc
decb
jae
shll
sarb
jne
jp
xchg
ss
leave
cmp
pop
pop
leave
mov
bound
popf
pop
mov
cmp
push
mov
out
jb
insb
testb
mov
pop
mov
es
sub
pushf
xor
pusha
les
or
or
fbld
mov
and
scas
and
nop
add
jno
lods
jl
jnp
adc
or
pop
test
cmpsb
cld
or
jnp
xchg
fistl
xor
mov
dec
push
push
or
mov
aas
push
lea
pop
xchg
and
into
mov
ss
xor
lods
mov
xchg
rcrl
inc
outsl
aad
mov
fisubrs
pop
lret
add
addr16
stos
sarb
and
mov
sub
in
inc
pop
repnz
sbb
in
and
lcall
loop
icebp
xlat
fistpll
xchg
movsb
push
push
cltd
lcall
pop
loopne
add
sub
and
in
sbb
shrb
ret
jo
leave
push
mov
and
adc
add
xor
out
cltd
and
push
xchg
das
rcll
pop
sti
dec
arpl
les
inc
scas
pusha
ja
adc
lods
loope
hlt
popa
call
es
push
cmpsl
mov
mov
mov
xchg
outsb
sub
cmc
sub
mov
pop
ret
mov
xchg
and
sbb
cmp
aam
jmp
in
lcall
sub
lahf
jno
jns
mov
push
addr16
inc
outsl
push
pop
sbb
lds
mov
jnp
nop
das
aad
add
sahf
sub
nop
ja
jecxz
or
cli
std
push
add
xchg
lods
push
add
xlat
jns
stc
repz
clc
rorb
scas
jp
subl
out
rol
xchg
sbb
add
dec
push
shrb
pop
psrlq
test
out
sub
lahf
dec
inc
mov
and
test
mov
movb
and
mov
mov
mov
in
mov
fcmovnbe
add
mov
stos
movsb
xchg
lret
aaa
inc
mov
pushl
fwait
out
adc
add
sub
das
cli
xor
out
shll
jne
dec
cmp
jp
rcrl
pusha
ret
popa
or
mov
out
stos
decb
loopne
pop
inc
enter
movsb
xor
shlb
ds
imulb
pop
andl
dec
pop
mov
sbb
jnp
rcrb
out
mov
aam
inc
jne
cmc
inc
mov
scas
cmp
ret
mov
ss
sbb
dec
add
scas
jmp
jae
out
daa
jbe
mov
fistl
cmp
iret
out
dec
inc
sub
push
pop
addl
in
in
add
mov
sbb
mov
inc
inc
fcoml
pop
cmc
sbb
hlt
inc
shll
andl
push
pop
jge
xchg
sahf
ret
test
cwtl
and
dec
bound
inc
fs
in
lock
ja
push
adc
push
or
pop
or
cmp
loopne
xlat
cltd
sub
bound
je
mov
fs
mov
scas
scas
add
inc
mov
dec
push
call
jmp
push
aaa
sbb
sbb
mov
xchg
jle
dec
push
aas
lret
xorl
orb
aad
test
mov
cmp
jp
imul
call
mov
mov
int3
adc
ds
in
adc
xchg
ret
sahf
jmp
popf
sub
pop
xor
fidivrl
ss
mov
fwait
insl
xor
push
lods
arpl
xchg
adc
cmp
testb
mov
rcrl
cltd
xchg
cmpsl
sbb
test
cmp
daa
popa
xchg
int
pop
mov
in
push
xor
xor
roll
or
pop
mov
or
mov
xor
int3
outsb
or
sub
movsl
sbb
leave
es
ja
cmp
adc
pop
aaa
pop
roll
inc
aam
das
int3
decl
out
loope
mov
addr16
mov
pop
cmp
dec
daa
mov
jae
ds
repnz
pop
daa
or
sbb
loope
xchg
sbb
push
jge
test
pushf
inc
pop
aaa
aad
jmp
mov
mov
xchg
xchg
inc
mov
shll
fcoml
ret
mov
push
mov
xchg
cmp
and
loope
dec
in
pop
cwtl
clc
pop
shlb
adc
cmp
stos
aas
adc
xor
or
popf
sbb
mov
and
jecxz
pusha
sbb
push
cmp
aad
jmp
pop
pop
int
jne
addr16
loop
mov
jmp
xchg
fs
or
xchg
xchg
dec
jl
push
ljmp
mov
adc
mov
lahf
mov
dec
xchg
cmc
jns
lock
ret
inc
ds
andl
cwtl
push
sbb
inc
pop
loopne
mov
sbb
movsl
jno
xchg
stc
pop
jnp
mov
add
mov
adcb
push
push
jl
lds
or
xchg
xlat
mov
arpl
pop
dec
xchg
mov
mov
and
cwtl
mov
dec
xchg
movsb
out
add
clc
xchg
mov
movsb
pop
fstps
out
push
and
mov
dec
loop
jae
movd
imul
push
xchg
out
lds
jbe
push
jne
mov
incb
pop
inc
test
dec
inc
xchg
gs
jle
and
ficomps
mov
pop
xchg
shlb
ds
frstor
mov
test
in
nop
bound
and
cmp
sbb
ja
inc
insl
in
hlt
cltd
push
mov
jge
add
out
mov
cltd
std
mov
add
sub
pushl
sub
and
jecxz
cmp
mov
mov
and
and
sub
and
adc
jmp
cltd
mov
ljmp
lods
das
mov
incb
pop
mov
dec
jl
mov
fs
scas
dec
sahf
ret
mov
cmc
mov
scas
fsubl
dec
idivb
mov
es
add
push
push
xchg
jno
mov
scas
xor
je
out
lock
jb
or
dec
iret
sbb
or
jae
mov
cmp
add
mov
pop
mov
fistl
imul
mov
inc
ret
jecxz
jo
mov
lods
rcll
xchg
arpl
testb
insb
outsb
jmp
adc
fadd
jo
fldl
xor
sub
or
pop
clc
xchg
adc
fisttps
lock
mov
cld
jns
mov
js
sub
jns
push
test
insb
fistps
fwait
xchg
jo
dec
mov
std
or
pop
xor
cmpsl
mov
push
dec
adc
lea
mov
mov
loopne
xchg
out
or
addr16
add
xor
mov
data16
gs
movsl
fnsave
lcall
xchg
dec
adc
sbb
inc
negb
in
loopne
push
adc
pop
dec
jl
and
jmp
shrb
js
sub
jae
adc
cmp
lods
inc
cmpsl
dec
mov
insl
sbb
sbb
mov
mov
adcb
or
pop
cmp
xor
enter
sbb
mov
xchg
push
mov
fistpl
imul
or
push
adc
dec
aam
mov
xor
aam
dec
mov
xlat
js
xchg
ss
sahf
sbb
ja
lea
adc
and
pop
stc
inc
in
dec
pop
and
in
icebp
imul
jle
sbb
sbb
and
in
mov
jns
inc
inc
mov
fistpll
cld
sbb
cmc
int
xchg
adc
rcrb
jo
mov
sub
sbb
shrl
dec
mov
pop
xchg
test
mov
inc
loope
sbb
imul
icebp
xchg
or
sub
add
add
push
mov
xor
fmulp
mov
fidivl
pop
inc
loop,pn
scas
dec
inc
push
paddw
or
xchg
iret
cmpl
or
mov
clc
jmp
popa
rcll
rolb
sbb
arpl
sub
cmpsl
push
lds
es
pop
push
mov
les
mov
mov
fcomps
lds
jne
inc
jb
and
imul
repnz
nop
add
push
adc
std
mov
aad
sbb
push
jns
push
add
inc
push
mov
sub
mov
and
lds
les
lods
aad
pop
push
cmp
cmc
sub
cmc
adc
fidivrl
cs
fimull
std
mov
inc
dec
stos
dec
fs
in
adc
dec
xor
xchg
jne
xor
cwtl
scas
push
push
outsb
jae
jno
adc
pop
shr
mov
xchg
xor
xchg
sub
push
lahf
loope
push
in
and
push
dec
cmp
test
xor
test
pop
jle
dec
adc
push
outsb
mov
stos
adc
lret
rcr
pop
rorl
gs
xlat
jecxz
insl
push
push
loopne
outsl
add
sub
add
rcrb
outsl
negb
fsubs
aas
orb
jne
fisttps
outsb
pop
jae
outsl
rcll
into
jnp
pop
hlt
sub
add
in
pop
rcll
dec
ja
adc
fidivl
mov
sbb
mov
mov
lods
into
cmpsl
add
inc
dec
pop
xor
pop
repnz
mov
insl
gs
dec
mov
leave
fists
ficoml
bound
out
xchg
pushf
addr16
popa
cmc
mov
lcall
cmp
adc
and
call
inc
popf
jecxz
mov
add
jbe
ja
push
enter
int
pop
or
and
in
lock
cmpsl
xchg
cmp
es
cs
rorl
mov
cmpsl
fcomp
cmp
ljmp
cmp
pop
mov
add
cmpb
call
mov
pop
and
mov
dec
sbb
fimuls
cmc
mov
pushf
enter
cmpsl
mov
dec
mov
dec
cmpsb
in
out
push
push
xchg
pop
into
jo
pop
into
push
push
aaa
outsl
sub
adc
sub
rorb
aam
adc
outsl
mov
outsb
std
xor
lods
mov
add
das
icebp
jns
repnz
inc
repnz
push
fwait
sub
inc
rorl
jecxz
cld
cli
je
xchg
div
shl
push
pop
iret
xor
jmp
hlt
adc
addr16
mov
fs
pop
push
data16
in
and
or
mov
and
jb
cmp
aas
sbb
or
xlat
mov
push
inc
mov
in
dec
lcall
std
xor
jo
add
inc
pushl
add
lea
mov
clc
addr16
pop
insb
enter
xor
dec
pop
insb
sbb
sub
fcoml
sbb
das
aam
and
mov
inc
inc
mov
jge
dec
mov
cmp
or
addr16
sbb
push
push
int
push
mov
es
loope
and
clc
rorb
jl
lds
clc
mov
sub
sub
push
and
pop
dec
aaa
xchg
lods
pusha
repz
xchg
cmpsl
aam
push
outsb
int3
es
xchg
int3
dec
jo
jns
add
mov
enter
or
xor
jl
pop
adc
test
lret
mov
add
out
sub
xlat
mov
cmp
xor
sub
lcall
or
lcall
or
pop
lock
and
add
xchg
and
jnp
jno
vmwrite
nop
mov
pop
pop
mov
movb
gs
cld
ljmp
pop
push
pop
gs
inc
pushf
cs
lods
inc
loope
movsb
push
mov
push
adc
in
xlat
loope
jecxz
sbb
aad
jne
pop
fwait
inc
cmp
dec
xor
and
and
test
jle
or
adc
cmp
pop
xchg
call
jmp
enter
and
outsl
xor
in
cmc
push
js
stc
xchg
and
cmp
es
dec
sub
jb
dec
orl
iret
loop
jecxz
xlat
push
jg
mov
jnp
testl
pop
fistpl
stc
and
aas
cwtl
and
or
lahf
mov
inc
outsl
mov
std
imul
push
movd
add
fdiv
sub
lock
sti
and
sub
cli
gs
mov
cmp
mov
add
push
add
sahf
sub
fmul
inc
sar
or
ja
push
pop
aad
lahf
notb
adc
jae
and
int3
rcll
test
jo
or
aas
mov
add
push
cs
fdivr
out
shr
hlt
test
mov
aaa
cltd
push
mov
shll
movsl
scas
das
in
int
insl
cmpsb
inc
inc
jo
ret
xor
imul
pop
test
jae
pop
aad
inc
addr16
pusha
or
mov
xor
jo
testl
mov
and
imull
jbe
and
loopne
gs
cmp
mov
shlb
fwait
inc
mov
lcall
fidivl
movlhps
jg
cmp
mov
jecxz
pop
hlt
flds
dec
scas
sbb
roll
jge
and
or
std
mov
cmp
lcall
push
inc
insl
inc
adc
insl
sbb
and
shrl
adc
mov
mov
addr16
push
mov
dec
add
mov
add
mov
jno
pop
jecxz
das
cmp
les
popf
mov
mov
cmp
lret
dec
ss
lret
push
nop
scas
aam
xor
orb
xor
int3
cmc
xchg
push
insl
or
gs
ss
insl
xchg
lcall
or
call
lods
ja
mov
and
pop
add
sbb
dec
cmp
xor
dec
jp,pt
js
or
enter
dec
and
lret
mov
fsub
jle
mov
rcrb
cmpsb
or
out
push
mov
and
add
iret
fstps
pusha
popa
jbe
test
inc
mov
pop
out
dec
push
push
rolb
sbb
negb
sub
mov
lock
mov
insb
adc
sub
cmpsb
call
cmp
addr16
stc
iret
sub
sbb
aam
stos
cmp
imul
cs
dec
push
movsb
lea
cmc
sub
pop
mov
xlat
dec
sub
into
mov
jae
xor
add
mov
sub
jne
push
rolb
inc
sbb
cmpl
push
push
inc
bound
adc
pop
inc
insl
or
and
movsl
and
jge
addr16
rcrl
xchg
adc
sub
scas
fwait
dec
or
dec
ljmp
jle
daa
add
xchg
and
xchg
add
mov
aaa
pushf
dec
inc
sti
inc
pop
jmp
mov
lock
adc
stos
ficomps
fmuls
push
das
popa
movb
fwait
xlat
aaa
shl
add
orb
insl
cmpsb
xor
inc
pop
push
in
lds
ljmp
in
das
xor
add
mov
js
xchg
dec
fisubrl
lret
cmovg
lea
or
aas
cmp
out
jnp
sbb
xchg
les
ja
test
sub
cwtl
and
sub
insb
push
jno
pop
mov
ja
scas
cmp
addl
cmovbe
test
xchg
mov
xchg
and
push
fnstsw
inc
dec
addl
mov
arpl
fisubl
mov
cld
xor
loope
dec
pop
xchg
scas
mov
mov
pop
fwait
sbb
test
incb
popa
pop
or
in
jmp
jg
out
pop
push
jbe
jno
sbb
lret
cmp
in
sbb
pop
cs
clc
insb
lea
xchg
daa
push
fistpll
and
xchg
and
leave
jae
mov
and
das
xor
inc
push
out
lahf
jmp
insl
adc
leave
jle
pop
flds
add
int3
scas
test
jo
adc
lret
xor
push
jns
ret
push
mov
push
inc
fldenv
mov
add
mov
test
push
dec
mov
pop
xor
sub
add
push
shrb
adc
icebp
lret
xchg
cmpsb
loopne
pop
push
js
and
push
icebp
sti
leave
dec
aaa
push
idivl
inc
lock
dec
sbb
add
pop
fs
insb
jmp
cmp
pop
in
sarb
ja
jno
es
and
sub
aam
pop
mov
xchg
faddl
gs
cmpsb
jno
enter
rorl
fidivrl
mov
inc
sub
xor
pop
test
pop
iret
decl
repnz
xchg
xor
push
pop
cmp
sbb
ret
push
lcall
cmp
pushf
sub
add
add
mov
dec
aam
outsl
inc
and
int
xchg
xchg
ljmp
mov
in
push
and
jo
and
loope
je
and
cmpsb
in
cmp
jl
gs
push
aam
repnz
jae
cwtl
inc
pop
hlt
scas
mov
cmp
andb
hlt
add
lods
pop
fisttps
out
leave
jno
adc
push
adc
cmp
mov
mov
aas
pop
testb
adc
add
sbb
data16
pop
sbb
xchg
bound
or
jnp
icebp
aaa
repnz
fidivrs
jae
das
adc
in
ds
in
mov
inc
rcrb
stos
lret
dec
mov
stos
inc
inc
xor
pusha
mov
push
data16
push
fnstsw
pop
and
and
int3
icebp
pop
and
or
cmpsb
scas
sbb
sbb
lods
out
add
mov
push
mov
jne
sub
mov
xor
stos
push
xchg
lret
adc
icebp
nop
cmpsl
pop
cltd
jge
mov
ficoml
add
in
leave
jge
add
mov
insb
mov
push
jno
jl
and
cmp
fnstsw
cmp
push
jp
mov
js
sahf
xchg
sahf
mov
mulb
push
dec
add
sbbl
push
loopne
sub
push
xchg
stc
fidivl
inc
or
pushl
dec
adc
sbb
add
dec
cmp
inc
pop
sbb
cmpsl
lock
mov
push
cmp
adc
push
jle
pop
cltd
inc
xchg
dec
out
insl
cmpsb
jg
cmp
sti
lods
adc
push
mov
mov
aas
sub
outsl
pop
jl
sbb
js
pop
popf
xchg
femms
xchg
ds
sub
add
aas
inc
jnp
pop
pusha
fisttps
mov
les
popf
out
jge
fs
and
mov
rep
inc
xchg
push
dec
xchg
int3
insl
mov
sub
fsubrs
cmp
inc
dec
pop
std
sbb
fcoml
mov
outsb
arpl
cmp
jecxz
mov
adc
icebp
lock
or
add
dec
subl
add
add
xchg
add
outsb
fxch
mov
jnp
xorb
and
jmp
lea
xchg
pop
dec
popf
add
xchg
in
lcall
loopne
in
sahf
int
jbe
jmp
jnp
je
or
pop
mov
cmp
mov
jle
push
dec
and
inc
adcb
arpl
jl
mov
je
adc
decb
cmp
sahf
pop
xchg
mov
imul
mov
dec
pop
xor
sbb
rcrb
adc
adc
ljmp
fistpll
rorl
nop
xlat
mov
push
sbb
push
cli
fbstp
push
sbb
lea
or
shlb
fbld
push
push
loope
out
stc
ret
imul
mov
mov
jbe
movsb
mov
arpl
in
inc
pop
ljmp
or
scas
lock
cmp
xchg
out
stos
ds
jae
out
push
mov
mov
adc
repz
stc
mov
pop
mov
cwtl
fs
idivb
mov
ja
mov
rol
daa
daa
mov
bound
icebp
inc
ret
loopne
lods
test
sbb
dec
or
cmp
ret
jge
into
cmp
cmp
sbb
cltd
outsb
add
inc
fstl
clc
and
sbb
std
pop
addr16
xor
ja
out
repnz
addr16
mov
lock
mov
jae
inc
push
inc
add
scas
rcl
xor
jl
xchg
inc
or
sub
test
out
popa
enter
push
lret
mov
add
fiaddl
push
sbb
lock
xlat
jb
or
leave
xor
jns
out
in
dec
xchg
rolb
jg
adc
fwait
cmp
rcrb
mov
pop
mov
jmp
dec
add
out
lods
iret
aas
or
dec
lods
int
rolb
sub
ljmp
inc
pop
nop
in
inc
xor
push
sbbl
fnstcw
push
int
mov
pslld
mov
flds
cmovs
pushf
pusha
mov
xor
xchg
xchg
mov
mov
xchg
aaa
inc
mov
push
sti
int3
and
adc
xchg
fmull
lock
call
insb
dec
in
pop
int
push
mov
jns
cltd
leave
dec
into
lock
mov
fwait
push
adc
and
xor
popl
sbb
mov
nop
mov
cs
jp
sbb
daa
dec
mov
xchg
xchg
add
int3
mov
or
jle
mov
mov
and
xor
outsb
fimuls
sbb
push
pop
loop
mov
fwait
cmpsb
inc
dec
ds
push
sub
lret
mov
mov
or
popa
xchg
in
push
movsb
stc
gs
xchg
rolb
inc
add
sub
xor
popa
das
dec
or
dec
mov
pcmpeqw
movsb
arpl
gs
and
cmp
cmpb
mov
and
mov
cmp
repnz
pop
mov
mov
xor
loop
outsl
shl
les
and
clc
pop
mov
test
loop
add
lods
mov
div
lret
adc
pop
sub
push
lret
lcall
mov
out
stos
cmovb
dec
in
std
std
push
cmp
repz
aam
sahf
ficoms
xor
div
insl
addb
loopne
xchg
push
xchg
pop
or
popa
pop
mov
dec
sub
shll
stc
jnp
or
push
idivb
pop
leave
insl
mov
aam
inc
arpl
in
call
jp
bswap
inc
repz
sbb
sub
sti
sub
lcall
movsb
jo
out
fisubrl
adcl
imul
cmpsb
jno
sarb
sub
jl
mov
mov
mov
cmp
and
xor
rolb
jecxz
inc
int3
xor
sbb
push
adc
push
out
imul
les
shrb
and
cmp
dec
mull
push
fcoms
xor
sbb
cmp
mov
int3
mov
sbb
imul
mov
gs
xor
pop
jle
and
mov
xchg
sarl
xor
and
addr16
inc
adc
enter
mov
mov
jg
cld
test
ss
mov
cmc
cmp
push
in
sbb
jbe
or
lahf
inc
xlat
pusha
inc
data16
cmp
or
test
bound
dec
sbb
mov
mov
bound
sub
or
adc
in
pop
fs
add
sbb
mov
cld
into
lcall
pop
mov
insl
es
cmp
jno
inc
mov
mov
mov
sbb
lock
in
fs
push
fwait
cs
ds
mov
mov
stc
xor
xor
jo
test
test
jp
sub
mov
fnstenv
pop
adc
test
ja
xchg
lcall
shl
lret
fisttpl
fbld
add
mov
dec
mov
sub
cmp
fstpt
ss
leave
mov
push
loop
fdivr
call
mov
cwtl
adc
xchg
stc
nop
pop
ret
pop
or
xor
xchg
ret
and
jmp
das
mov
pop
xor
pushf
lods
or
inc
loop
adc
sarl
jecxz
subl
loopne
lret
dec
inc
cmp
mov
inc
xlat
sub
sbb
es
test
or
mov
pop
dec
sahf
jns
and
lods
aad
fdivrl
int3
out
mov
lea
aam
cmp
cmc
ds
subb
dec
push
je
rcl
scas
push
and
mov
xchg
test
testl
ret
cmp
mov
push
outsl
jnp
push
lods
mov
cltd
cwtl
push
xor
or
daa
clc
jecxz
add
jg
ret
jo
adc
loopne
sbb
and
pusha
push
mov
clc
fs
push
lcall
scas
inc
enter
flds
aaa
xor
xor
xor
lcall
inc
fwait
in
mov
lods
stc
mov
jl
jae
inc
jbe
sub
xor
ror
push
dec
and
push
cwtl
jl
xchg
call
mov
cld
xchg
xchg
adc
pop
sub
fisttpll
xchg
faddl
arpl
pop
push
iret
and
sahf
jbe
jb
push
fiaddl
popa
ret
pop
adc
loope
std
je
jmp
sub
addr16
cld
xchg
mov
fisubl
xchg
xor
sub
xchg
pushf
sbb
add
jo
pop
mov
cwtl
call
adc
jl
mov
dec
addr16
fsubrl
test
push
add
fcoms
icebp
inc
mov
inc
int
fstpl
lods
adc
pop
aas
enter
mov
push
jns
mov
inc
stos
pop
insb
pushf
iret
push
outsb
mov
in
in
or
sbb
mov
cmp
xchg
cli
push
arpl
mov
fcmove
pusha
loope
inc
test
ret
insb
adc
sar
push
dec
repz
push
loopne
testl
jns
xor
in
in
push
cmpsb
and
xor
push
xor
xchg
mov
cmp
jge
aas
es
outsl
int
subb
xor
mov
xor
jecxz
addr16
bound
es
nop
out
es
dec
inc
cmp
push
push
push
and
pop
outsb
or
xchg
sbb
ljmp
in
push
rorl
adc
popf
fisttpl
movsl
adc
call
lea
add
jo
mov
xor
inc
insl
cli
sbbl
daa
and
add
loope
push
push
xorb
adc
mov
int3
mov
daa
xchg
cmpl
dec
push
fs
push
outsl
push
or
vsubsd
icebp
lahf
mov
xlat
out
xchg
pop
pushf
sbb
imulb
in
ja
lret
stos
dec
scas
push
shlb
stos
data16
das
inc
pop
and
sahf
into
adc
out
push
cmp
lret
pop
hlt
insl
dec
sbb
call
movsl
sbb
sbb
addr16
cltd
popa
dec
out
lahf
mov
mov
inc
cmpb
sbb
pop
nop
sub
pop
scas
pusha
jne
pop
pushf
lods
and
aam
repz
leave
imul
clc
and
jecxz
movsl
xchg
repz
mov
out
popa
pop
pusha
adc
cmp
sbb
xor
scas
mov
bound
ret
fwait
enter
lret
mov
out
add
sub
cmpsl
fsubs
scas
faddl
pop
cltd
cwtl
lods
dec
lods
jecxz
stos
inc
push
in
add
sbb
xchg
cld
push
inc
add
mov
sbb
pop
divl
xchg
movsl
mov
cs
push
repnz
test
adc
imul
sub
sub
les
leave
sbb
icebp
pop
je
xchg
xchg
dec
add
xlat
mov
add
ss
data16
popf
sarb
loope
jg
pop
mov
leave
in
ss
mov
xor
sbb
popf
arpl
cmp
mov
mov
add
add
xor
mov
push
insl
cmp
movsl
lods
fisubl
mov
jo
rcrl
sub
mov
pop
fldl
cmpsl
in
dec
cmp
jo
fsubs
repz
add
dec
movsb
dec
stos
inc
and
icebp
enter
scas
push
jg
pop
pop
xchg
lods
dec
cltd
test
add
mov
jge
inc
or
push
insl
push
cmp
repnz
stos
ficompl
mov
nop
mov
rolb
fsubrs
adc
dec
fstpt
insb
sbb
loopne
iret
push
dec
mov
xchg
adc
pxor
insb
nop
ljmp
sub
jne
test
mov
adc
push
dec
push
and
icebp
call
clc
loopne
xor
data16
icebp
daa
sti
pop
cld
cmp
shrd
or
aad
into
push
call
push
popf
fists
xchg
leave
rcr
frstor
or
mov
dec
or
aaa
push
push
fisubs
xor
pop
addl
cwtl
movsb
and
aaa
pop
in
lds
das
cmp
adc
adc
movb
cmp
cmpsb
insb
sti
imul
sub
mov
mov
stos
pop
mov
or
int3
out
iret
sub
mov
inc
xor
sbb
ljmp
ljmp
sbb
and
cmp
dec
and
or
push
mov
mov
addr16
push
movsl
jle
xor
pushf
push
test
in
lea
movsb
or
push
iret
pop
fs
or
pop
cmp
xor
xchg
pop
mov
cmp
add
js
stc
jg
repz
push
jl
movsb
jne
jno
mov
shl
sahf
je
mov
ja
sub
movsb
sbb
dec
adc
pop
cmp
rclb
stos
in
movsl
xor
inc
push
stc
push
ja
xor
adc
leave
imul
and
mulb
aam
xor
sbb
mov
popf
test
scas
imul
xchg
insl
xchg
jl
push
pushw
push
hlt
dec
push
lahf
arpl
pop
adc
scas
cmpb
in
out
je
ljmp
cs
or
adc
aas
clc
mov
and
cmc
adc
jge
out
cmp
push
mov
dec
xchg
sbb
sub
cwtl
and
sbb
cs
bnd
popf
add
lds
out
add
xor
xor
inc
js
mov
arpl
fmull
out
push
imul
sti
and
add
xchg
vpaddw
sbbb
inc
dec
icebp
test
outsb
mov
xor
xchg
lahf
mov
cmpsb
insl
jg
aad
dec
lcall
xchg
mov
jnp
lea
mov
sbb
xlat
xchg
enter
test
outsb
push
int3
mov
push
int
adc
push
or
ja
rcrl
in
pop
xchg
dec
lret
addr16
mov
cs
cs
pop
les
push
ljmp
dec
rcll
fdivs
lods
mov
test
xchg
xchg
push
enter
inc
out
fdivl
imull
pop
lds
inc
cmp
lods
sbb
dec
js
lods
loope
push
gs
sub
mov
lds
dec
jecxz
sub
and
js
mov
mov
mov
jge
jnp
inc
add
inc
cwtl
add
andb
ret
ret
adc
std
popa
idivl
ss
mov
inc
mov
outsl
insl
insb
mov
adc
sbb
stc
xor
iret
sets
jmp
scas
lds
jno
lds
or
inc
sahf
cld
into
arpl
ljmp
lock
sahf
push
out
push
fucomi
pop
mov
test
dec
jno
cmp
jecxz
call
pop
mov
sub
fnsave
pusha
cmp
add
pop
enter
cltd
add
ss
or
sbb
xor
lcall
xlat
fmuls
mov
fwait
or
xor
jp
andb
test
push
mov
sbb
icebp
mov
or
sahf
xor
idivb
js
fstpt
sahf
jb
inc
jmp
aad
leave
into
cmp
and
loopne
push
xchg
or
push
jbe
push
enter
pop
and
pop
pop
sub
mov
out
inc
inc
pop
jae
xchg
in
bound
je
xor
inc
aam
cltd
stos
cld
dec
xchg
sbb
inc
push
mov
sbb
gs
inc
mov
mov
add
and
adc
jmp
insl
popf
call
mov
out
mov
ds
and
add
jns
lcall
cmp
loop
xlat
lahf
popa
fcmovnb
cmp
daa
pusha
inc
movsb
mov
lods
mov
mov
in
cs
lods
lods
cmp
sub
or
cmp
sbb
filds
or
mov
pop
sbb
fidivl
push
test
sub
push
scas
leave
or
jnp
inc
inc
add
jns
lea
subl
cmp
cwtl
cld
in
mov
or
or
in
pop
cli
lock
adcb
frstpm(287
adc
cmp
xor
jmp
loopne
and
jnp
adc
mov
cld
sub
shl
adc
sbb
add
adc
cmp
jbe
jne
push
xchg
aaa
cli
rol
cmp
imul
arpl
rorl
or
loop
hlt
fsts
fmul
sub
xor
mov
incl
fmull
xchg
sbb
sbb
ja
xchg
mov
adc
iret
cmp
out
jmp
mov
jecxz
cmp
mov
xor
popf
mov
mov
lcall
mov
push
insl
mov
out
mov
sub
mov
adc
jge
test
mov
std
dec
pop
mov
jmp
dec
fsubrl
or
pop
cwtl
imul
xorb
test
inc
aad
fwait
push
fucompp
shrb
push
and
inc
jmp
inc
xchg
inc
adc
inc
push
adc
repz
cmpb
outsb
std
dec
sarb
maxps
test
jp
ficoms
aad
add
rol
mov
ja
bound
push
push
outsb
inc
xchg
xorl
andb
test
and
call
jp
in
adc
inc
push
dec
insl
adc
sbb
je
adc
lock
jns
out
fs
sahf
sbb
push
mov
call
pop
les
pusha
and
loopne
scas
test
jge
jge
movsl
bound
push
push
call
jns
pop
cld
loope
cmpsb
jecxz
add
insb
push
aad
mov
cli
movsb
push
sub
stos
std
neg
mov
es
loopne
ja
xor
push
ljmp
test
mov
xchg
push
inc
cwtl
dec
xchg
xchg
ja
xor
das
pop
push
stos
add
jg
scas
add
jb
mov
mov
xor
rclb
pop
mov
mov
push
cmp
lock
xor
xor
out
xlat
fnstcw
ret
pushf
je
dec
scas
pop
fucom
roll
adcl
sbb
ss
jg
cs
jne
adc
mov
dec
pop
ret
dec
es
sub
cmp
xchg
addb
cs
fisubs
mov
or
mov
xchg
push
cmp
hlt
and
rcrb
dec
mov
push
cmp
ljmp
dec
cld
out
or
inc
popl
mov
ja
cmpsl
faddl
xor
mov
aaa
sbb
bound
scas
push
icebp
mov
dec
sub
xor
test
or
cwtl
mov
leave
inc
into
gs
out
mov
cmpsl
sbb
mov
ds
add
and
add
sahf
aas
mull
jno
xchg
xchg
mov
in
add
lret
push
dec
pavgw
xchg
sti
jb
xchg
lea
lods
mov
pop
adc
fnstenv
pop
sub
or
loop
xchg
pop
int3
mov
fidivl
in
adc
inc
imull
ret
inc
rorb
data16
xchg
ret
ljmp
cs
leave
test
outsb
push
cmp
fisubs
pop
mov
fwait
cld
xchg
cld
neg
inc
pop
pushf
fwait
pop
pop
int3
ret
jae
sub
sub
mov
inc
and
lcall
jp
jo
testb
scas
jecxz
lock
mov
mov
xor
lds
push
imul
lods
mov
loopne
xchg
cs
jp
leave
fadds
jbe
jg
mov
lods
ror
mov
mov
out
ror
dec
arpl
ret
pushf
pop
lods
arpl
mov
std
pop
jb
pop
sbb
xchg
mov
shlb
into
psubusw
xor
out
or
int3
pop
fdivrl
je
mov
insb
movsl
sarb
push
pop
les
xchg
mov
inc
dec
out
imul
cmp
bound
mov
mov
push
pop
push
dec
pop
xchg
jnp
in
out
testb
sahf
mov
enter
ss
cmpb
adc
xlat
add
ret
jmp
jmp
imul
and
inc
sbb
xor
insb
pop
lea
iret
nop
dec
orl
adc
jns
ds
sbb
mov
pushf
jg
mov
outsl
mov
xor
lret
push
and
addr16
mov
test
dec
push
jle
adc
pop
test
iret
out
out
jne
jmp
and
shlb
adc
in
das
push
mov
pop
lcall
gs
stc
outsl
sarl
sahf
push
push
lds
dec
xor
test
or
sub
push
test
and
aam
int3
dec
add
call
lock
jnp
fwait
jle
cmpsb
xor
dec
mov
push
enter
or
inc
xchg
out
pop
pop
ret
aam
iret
inc
jp
jne
inc
cmp
shl
call
mov
dec
stos
or
mov
adc
lea
push
xchg
add
mov
and
cltd
int
mov
and
mov
rclb
fmull
xor
lret
rolb
std
sbb
add
pop
rcl
mov
jmp
ss
mov
jl
mov
mov
cltd
test
ret
add
mov
sub
sbbb
cmp
mov
popf
scas
dec
iret
cmp
jb
inc
sub
jns
push
mov
jne
pushf
andb
mov
subb
or
jl
out
lods
xchg
or
jle
js
push
test
xchg
adc
test
mov
push
cmp
push
scas
popa
out
dec
and
jnp
mov
adc
lret
cmpsb
fldt
test
loop
jne
inc
jp
lea
enter
jbe
pop
lods
loopne
cmpsl
adc
aam
mov
dec
test
fcompl
pusha
mov
mov
sub
in
pop
inc
loopne,pt
push
mov
rolb
xor
addl
insb
shlb
pop
dec
ret
loopne
pop
data16
jnp
xchg
xchg
cld
pop
mov
fwait
pop
cmp
push
dec
fwait
mov
shll
dec
jg
aam
sbb
loop
inc
fcomip
scas
cwtl
pusha
cmp
sbb
call
hlt
sub
scas
mov
xchg
imul
jb
popf
pushf
sbb
push
jge
in
dec
repnz
sti
xchg
bound
and
jnp
ds
cli
inc
ret
popa
sub
fsubr
daa
adc
or
xlat
xlat
fstpt
xchg
mov
sbb
xchg
xchg
cli
fwait
test
jb
xchg
dec
leave
add
mov
das
pop
lret
xchg
rorb
loop
push
dec
xchg
cs
xor
pop
sbb
es
subl
aad
lock
cmp
fwait
inc
sti
cmp
xchg
loope
pushf
adc
into
lods
and
test
add
mov
or
pop
scas
loope
ret
mov
addr16
adc
pop
imul
jg
popf
scas
jg
imul
out
mov
aad
push
or
add
popa
mov
aas
push
inc
jne
cmp
repz
inc
lret
mov
nop
and
pop
ljmp
push
fdivl
bound
mov
mov
imul
ret
stos
adc
mov
lea
loopne
sub
loope
cmpsl
out
les
adc
cmp
mov
ljmp
ret
add
lea
ficoms
inc
fnstcw
mov
inc
dec
jle
int
jge
xor
pop
jmp
adc
leave
push
push
add
insl
sarb
loopne
movsl
adc
xchg
mov
cmp
pop
stos
ljmp
in
mov
aam
mov
leave
xchg
aam
insb
std
rcl
cmpsl
leave
mov
loopne
xor
test
sub
rol
dec
test
push
mov
mov
loop
dec
push
into
mov
scas
push
dec
jmp
xchg
gs
jge
mov
sbb
adc
lcall
pop
arpl
clc
push
jmp
out
scas
xchg
xor
adc
cmp
fdivl
xchg
inc
and
pop
cmp
add
lods
add
outsb
mov
pusha
dec
cmpb
sub
cltd
cmpsb
sbb
in
scas
add
sub
enter
fistpll
or
lea
into
jb
adc
fincstp
push
or
sbb
xlat
cld
jmp
cld
popa
fisubrl
xor
stc
push
pop
stos
fsubs
fidivrs
outsl
mov
enter
dec
outsb
dec
xor
pop
push
pop
daa
sub
fs
cmp
jb
ds
into
scas
mov
pop
add
lret
enter
add
cmpsl
cli
mov
insl
mov
test
and
fildll
test
cs
xchg
dec
ljmp
mov
inc
shll
out
push
fmuls
sti
maskmovq
sub
mov
mov
mov
repz
movsl
faddl
jecxz
push
pop
cmp
mov
sbb
dec
mov
test
sub
xchg
mov
inc
pop
mov
and
pushf
inc
imul
xchg
ljmp
mov
orb
and
sbb
stc
scas
fistl
push
fldt
and
pop
cmp
xlat
mov
jl
adc
popf
shl
lret
sbb
jnp
jno
xor
enter
sbb
in
inc
cmp
mov
jae
fwait
jecxz
adc
cli
xchg
jl
hlt
int
cmpsb
dec
mov
out
jb
popf
js
leave
cmc
inc
bnd
in
fdivs
push
mov
xchg
sbb
icebp
sti
dec
das
inc
sbb
xor
bound
lods
add
dec
xchg
cmpsl
rcrl
mov
addr16
lea
sbb
jb
sub
inc
pop
imul
mov
add
adc
push
psubw
mov
push
out
mov
test
pop
sbb
aam
movsl
call
lods
cmc
sub
cmpsb
mov
cmp
aas
jge
adc
gs
lret
outsl
push
loope
data16
scas
jecxz
mov
xchg
dec
sub
mov
scas
inc
dec
mov
pop
in
inc
mov
adc
lret
rcrl
mov
addr16
or
fbld
fwait
ljmp
mov
repz
bound
pop
repz
das
fs
mov
movsb
xchg
shr
add
pop
insb
add
or
jge
inc
pop
cmp
xchg
out
stc
fwait
xchg
int3
add
inc
stos
dec
jo
mov
sahf
push
pop
dec
dec
aad
inc
inc
xchg
cmp
jb
outsl
push
gs
icebp
shll
dec
mov
pop
repnz
mov
mov
or
xor
add
dec
xor
addb
int3
cmp
sahf
stc
push
shrb
mov
shl
loope
scas
pop
stos
jg
adc
les
fwait
in
fcoms
call
xchg
mov
jl
addb
shlb
jecxz
dec
pusha
das
mov
push
push
outsb
sbb
mov
mov
mov
cmp
incb
sub
cmc
iret
mov
xchg
mov
inc
mov
sub
mov
loope
mov
outsl
loop
mov
inc
add
push
mov
push
test
add
dec
bound
mov
xchg
lock
push
mov
and
enter
xchg
add
pushf
pop
push
mov
ret
mov
popf
sbb
push
ja
cmp
jne
lret
mov
fbstp
mov
push
xchg
test
test
sbb
fs
sub
inc
insl
lret
xor
fildl
mov
jb
jbe
dec
cmpsb
inc
scas
xchg
daa
aaa
pushf
xor
arpl
push
test
sbb
into
pop
cmp
adcl
outsl
cmp
fwait
sub
mov
fstpl
adc
jg
jmp
fnsave
cmpsb
lea
les
loop
mov
add
xor
jp
mov
fs
push
shrb
movsb
or
stos
stc
imul
sbb
aas
popa
pop
and
cmpl
adc
jp
mov
adc
js
cmp
or
jmp
pop
inc
push
jnp
mov
test
jbe
data16
cmp
je
inc
and
push
adc
cs
js
jb
xor
gs
ret
mov
mov
in
push
and
cmpsb
cwtl
or
mov
aas
cmc
in
sbb
jp
and
xor
hlt
pop
pop
sbb
push
add
push
mov
mov
dec
mov
jbe
fs
mov
out
jno
adc
lcall
jp
inc
subb
push
inc
lret
cli
dec
mov
mov
jecxz
lcall
pop
lahf
xor
inc
int3
mov
int
add
or
mov
mov
imull
fwait
rclb
imul
xlat
and
fmuls
mov
dec
testl
stos
icebp
fstpt
aad
pop
test
adc
cmp
fisubl
add
stc
pop
ret
push
sti
cmp
aas
mov
mov
out
push
repz
or
lret
pop
mov
xchg
mov
lret
sbb
cmp
cwtl
std
fsubl
mov
or
movsb
cs
into
enter
sbb
xor
mov
inc
stos
cmp
push
and
fldcw
int3
add
push
cmp
pushf
ret
iret
jno
fstpl
mov
fistps
mov
loop
xor
adc
fsts
xor
notl
adc
lods
jecxz
movsl
out
adc
push
mov
mov
stos
jo
jne
jo
sbb
dec
sbb
scas
loopne
mov
dec
mov
ljmp
or
xchg
sub
movsb
cmpb
push
sti
fucomp
aad
jle
lock
mov
icebp
out
sbb
jg
cmp
xor
mov
testb
lret
fists
clc
dec
fcompl
pop
or
add
or
std
push
data16
leave
clc
cmc
jae
or
sbb
std
pop
or
inc
pop
mov
adc
enter
pop
out
fwait
inc
movl
sti
ds
or
out
std
mov
into
aad
mov
dec
push
in
in
add
ret
stc
inc
daa
cmp
call
inc
test
adc
jnp
pushf
popa
mov
dec
movsl
aaa
clc
xchg
std
ljmp
mov
jl
subb
cmpsl
lock
popa
jne
mov
int
cwtl
xchg
daa
or
clc
pop
cmp
test
add
push
jle
adc
dec
test
push
jno
and
lret
jecxz
adc
push
push
inc
out
fwait
loop
sbb
cmp
push
xchg
ret
aam
in
mov
pop
jo
push
mov
xor
mov
popa
mov
lahf
add
fidivs
mov
jnp
ucomiss
loop
aaa
jl
sub
out
lcall
cmp
movsb
test
scas
cmp
mov
mov
stc
pop
fwait
sbbl
iret
loopne
scas
push
popf
add
xchg
aas
aas
xor
call
mov
iret
rcl
aam
mov
movsb
jge
das
adc
mov
push
data16
adc
pusha
jmp
xchg
cmp
mov
ret
sbb
out
enter
in
mov
push
add
mov
repnz
notl
mov
jle
fisttpll
inc
ret
stos
arpl
dec
adc
xchg
inc
scas
pop
push
xlat
ret
push
mov
cli
ret
xchg
jmp
popf
xchg
lds
pop
fcoml
inc
mov
inc
add
outsl
repnz
push
xor
xor
aaa
cmp
loop
testb
stos
jp
mov
add
mov
cli
inc
lock
gs
sub
in
inc
push
cmpl
cmp
leave
cwtl
pop
jo
out
push
mov
sti
les
cmp
leave
loopne
mov
cwtl
popa
jbe
jb
dec
testb
lock
dec
rcpps
pop
jge
arpl
fs
sbb
ret
lds
xchg
mov
mov
hlt
fsubr
jnp
lds
cwtl
inc
push
mov
add
pslld
sub
inc
inc
mov
pop
pushf
adc
in
xor
pop
ds
dec
sub
cld
fsts
shrb
jbe
test
repz
xchg
or
shll
mov
and
and
add
mov
test
adcl
adc
inc
hlt
mov
nop
addb
dec
rolb
sub
cmc
popf
jge
repnz
sub
jmp
or
xchg
fs
les
pop
ss
dec
push
adc
xchg
arpl
imul
orl
pop
add
xchg
jbe
je
jno
pop
and
mov
and
mov
or
cmp
push
sub
dec
push
in
cli
cmp
scas
mov
ja
sahf
ds
dec
lods
movsl
ds
inc
and
or
mov
dec
adcl
dec
mov
jge
dec
pop
out
sub
popf
mov
sarb
xor
pop
mov
popa
mov
jmp
aas
add
inc
movsb
lods
dec
xlat
push
rol
insb
inc
sub
cmc
icebp
es
rcrl
divl
lret
jnp
cmpsb
adc
adc
xchg
cmpsb
dec
inc
popf
insl
push
xor
xchg
jle
mov
lret
or
repz
rcll
in
out
and
inc
fs
or
cltd
es
adc
jecxz
or
mov
xchg
nop
test
fcoml
mov
dec
push
mov
sub
xchg
test
xor
rcll
je
outsb
lahf
jo
xor
lods
jae
mov
popf
gs
movsl
add
hlt
jge
icebp
add
out
sub
ficoms
mov
cwtl
test
clc
lock
jbe
push
in
or
div
mov
das
and
xchg
negb
or
and
cld
rorb
xor
sub
adc
sbb
add
mov
cmp
dec
gs
iret
pusha
repnz
insl
orb
loope
adc
das
js
in
xor
jecxz
xor
lcall
xlat
cmp
push
sbb
sbbl
xchg
dec
ja
xorb
les
cmp
mov
out
xor
cmp
adc
mov
scas
xchg
mov
testb
pop
shr
into
mov
and
cld
pop
test
ds
mov
jl
mov
shll
pop
xchg
imul
pop
mov
mov
call
jp
push
ds
ja
fs
mov
aad
fcmovbe
and
jb
nop
adc
addl
dec
xchg
push
xor
lcall
int
add
adc
jge
mov
mov
clc
es
sub
xor
mov
inc
or
mov
jo
gs
out
arpl
jo
inc
jmp
sbb
outsl
cmp
mov
mov
xor
adc
aad
psllw
sub
mov
leave
xor
add
push
or
mov
cmp
xchg
aaa
das
repnz
lret
lds
mov
push
and
int3
dec
leave
push
test
dec
ret
xchg
cli
rolb
daa
out
xchg
xor
das
mov
movsb
jmp
js
mov
rcrl
sarb
nop
outsl
fldl
adc
push
insl
push
jno
ds
dec
adc
and
movl
mov
mov
pop
dec
fiadds
xor
iret
sbb
pop
lret
mov
pop
inc
imul
outsb
pushf
repnz
push
negb
xchg
dec
pop
jne
cmp
push
sbb
lret
dec
lret
sub
pop
sti
je
push
sbb
cli
ds
loope
aam
xchg
ljmp
ljmp
ljmp
insl
adc
xchg
negl
mov
cmp
sub
mov
add
in
mov
sarb
iret
mov
jns
pop
stos
push
sbb
add
in
inc
cmp
xchg
sub
xchg
mov
sbb
sti
sti
add
popa
cmpsb
inc
jecxz
sub
pop
ds
xor
rolb
or
add
cmp
cmp
mov
mov
and
dec
inc
lahf
and
push
out
cmp
pop
jbe
sbb
lods
sub
nop
test
xlat
push
adc
xorb
fildll
jne
arpl
mov
jo
clc
jnp
lcall
cmp
data16
and
fcompl
mov
call
in
sbb
add
push
and
adc
xlat
sub
dec
pop
fs
lea
dec
mov
lds
outsl
outsb
pop
cmc
mov
jle
bnd
pop
ja
mov
mov
lahf
fwait
jb
in
cli
xchg
xchg
jmp
inc
mov
lcall
sbb
or
mov
jnp
xchg
mov
adc
out
in
sbb
add
es
int3
jbe
out
leave
imul
adc
cld
or
pop
cltd
sub
or
ficoml
xchg
lock
mov
sbb
adc
xchg
outsb
scas
sub
ds
icebp
sbb
mov
xchg
mov
lods
popf
jno
repnz
dec
xor
push
out
scas
int3
cld
adc
subl
push
push
fdivrp
jb
lods
ret
or
jo
movsb
cmp
jmp
or
xchg
adc
sbb
jno
lret
pop
lret
mov
xor
andb
push
lcall
jp
popf
mov
fadd
xchg
and
xor
jmp
jno
out
and
imul
andl
stc
in
sar
nop
mov
hlt
bound
pop
dec
out
sbb
loopne
adc
jge
pop
out
insb
js
xlat
mov
data16
shl
xor
pop
push
lods
add
sbb
or
pop
test
sbb
fwait
push
pop
or
jecxz
or
push
pop
cltd
dec
jmp
mov
push
out
xor
pop
ret
mov
cmc
and
pop
sbb
cs
gs
and
pushf
push
or
rorb
cmp
iret
adc
sub
mov
in
push
cmpsb
jle
mov
mov
mov
mov
icebp
and
xchg
iret
mov
push
inc
jecxz
pop
mov
ret
xchg
add
movl
insb
add
ja
mov
mov
pop
dec
mov
jno
fucomi
pop
inc
xchg
push
or
pop
das
fs
add
outsl
xor
xlat
outsb
cli
cs
popa
adc
inc
pop
inc
jae
xchg
nop
sbb
mov
mull
inc
sbb
cmp
push
outsb
imul
lock
push
lods
add
rolb
mov
test
int3
pop
stc
fcomi
xchg
dec
sub
adcl
ljmp
mov
daa
add
mov
pushf
mov
mov
xchg
cmp
hlt
cmp
ret
sub
cmpsb
lahf
adc
daa
inc
ja
sub
sub
das
mov
inc
or
jl,pn
pusha
lods
icebp
ret
push
into
cltd
outsl
pop
dec
sbb
sbb
xlat
and
mov
dec
sbb
mov
repnz
call
pop
and
sbb
inc
cmc
and
push
mov
cmpsb
or
into
adc
inc
aam
push
cld
xchg
xchg
test
pop
adc
int
bound
sbb
arpl
jle
gs
sbb
fs
pop
xor
or
lcall
enter
test
aaa
xor
lret
negb
ret
leave
sbb
adc
mov
push
mov
cltd
xor
cmp
or
pop
out
push
dec
sti
mov
xchg
mov
adc
dec
inc
xor
lcall
hlt
sbb
xchg
mov
sbb
push
jmp
leave
incb
insl
out
push
sub
mov
push
xlat
je
or
mov
sub
xchg
xchg
leave
dec
dec
lcall
inc
mov
into
xor
sbb
aam
lret
in
outsl
jo
test
mov
pop
or
leave
out
sarb
jp
sbb
je
mov
scas
sub
sbbl
xor
das
jno
push
push
pop
pop
jno
imul
sti
push
lods
push
aad
fisubl
data16
ror
test
cmpb
iret
sbb
xor
mov
ljmp
aad
push
je
xlat
repnz
push
fadds
test
les
inc
sbb
cli
repnz
stos
pop
dec
dec
notb
pop
jnp
inc
les
mov
in
outsb
xchg
add
xchg
xlat
nop
pop
sub
sahf
in
or
cwtl
sub
pop
xor
int3
adc
out
ds
cmpsl
and
or
dec
stos
mov
fbstp
xor
sahf
sbb
mov
add
into
mov
adc
lods
mov
mov
loop
cmp
xor
jmp
fadd
adc
mov
lahf
sub
gs
push
or
xchg
xor
cmp
call
add
insb
lahf
das
out
cltd
xchg
loope
jmp
xor
in
cmpsl
xor
jae
xchg
or
or
adc
mov
xchg
pop
dec
movsb
adc
jp
subb
fs
rcr
out
cmpsb
aad
iret
push
shrl
jnp
insb
jae
add
dec
stos
imul
pop
jl
test
push
bound
and
lods
pop
sub
mov
pop
out
call
and
addr16
out
inc
lds
xchg
mov
mov
pusha
inc
pop
mov
dec
jno
mov
stos
imulb
jg
add
fidivs
push
inc
stos
push
jp
push
shrb
mov
stc
cwtl
int3
sub
cli
mov
mov
cmpsl
arpl
jge
repz
sbb
ja
mov
loopne
or
sub
mov
push
clc
movsl
pop
nop
rcr
lcall
adc
ret
cmc
in
int
cmp
pop
cmp
insl
push
xchg
je
pop
or
jno
fwait
movsb
leave
dec
adc
jecxz
inc
dec
cmp
cmp
jno
lock
mov
sbb
mov
dec
movb
in
dec
test
jecxz
fwait
sbb
fstpt
out
jns
ljmp
sbb
mov
test
jbe
out
popa
insl
push
aad
push
adc
cmc
sub
fcmovnbe
mov
faddl
inc
mov
into
bndldx
mov
rcrl
fwait
test
jb
sahf
aad
pusha
rcrl
cmc
push
mov
out
mov
movsb
in
lea
mov
test
sbb
adcb
stc
cmp
adc
call
ret
adc
pop
sub
jae
es
incl
sbb
cwtl
loopne
ljmp
loope
insl
aas
and
inc
jb
mov
jno
into
xor
xor
pusha
lret
adc
lods
sub
scas
jp
aas
mov
loop
xor
test
xor
scas
jmp
cmp
leave
aam
sbb
int
push
mov
or
sub
or
cmovb
mov
mov
inc
jp
xor
ror
push
mov
cmp
mov
jge
jns
in
movsl
and
les
shlb
cmp
int
sahf
int
inc
mov
sub
jmp
add
inc
pop
or
jmp
and
stos
mov
fdivl
popl
cmpb
cmp
arpl
insb
mov
pop
jmp
and
lcall
loop
mov
rclb
adc
dec
lcall
bnd
aaa
adc
cmc
mov
push
sub
adc
cmpsl
mov
mov
es
pop
cmp
sub
add
pop
pop
cld
repz
sahf
rep
jmp
test
xlat
jo
and
sub
jae
imul
xchg
leave
and
push
subl
dec
jge
sub
xchg
inc
call
xor
jnp
mov
mov
fisttpl
or
je
xor
jbe
aas
lahf
inc
cmc
sub
adc
je
cltd
or
adc
imul
sbb
outsb
push
mov
xchg
xchg
movsl
pop
int3
sbb
inc
iret
cmc
cmp
dec
push
jb
cmp
daa
in
repz
movsl
cmp
or
enter
stos
jg
push
lahf
ret
add
jo
mov
int3
dec
push
xchg
movsl
xlat
mov
mov
pushfw
xchg
out
outsb
add
mov
xchg
lds
insb
out
mov
push
shr
lret
push
pop
push
gs
push
push
lcall
and
jl
jp
sbb
js
jae
scas
icebp
hlt
xor
mov
and
xor
pop
jnp
out
loope
packsswb
mov
icebp
stc
out
and
mov
mov
sbb
jbe
pop
ret
mov
cmp
movsb
pop
fisubs
jge
and
test
jp
ljmp
mov
aaa
cmpb
inc
jecxz
cmp
pop
scas
jb
mov
js
mov
sub
xor
inc
insb
inc
xlat
test
popf
hlt
mov
inc
iret
es
dec
sahf
movsl
push
add
mov
add
stc
outsb
test
pop
xchg
pop
cld
sbb
test
cmp
in
add
pop
lods
and
fisubs
adc
push
addr16
xlat
aad
cwtl
cltd
cmp
insl
sub
dec
xor
cltd
xor
mov
movsl
xor
dec
sbb
mov
iret
pop
adc
mov
inc
jmp
xor
sbb
mov
push
les
dec
dec
jae
xchg
popa
test
cwtl
add
mov
mov
jmp
andl
ss
lret
xchg
pop
dec
jnp
cmp
dec
stos
aam
fnstenv
jmp
decb
test
stc
inc
mov
shll
scas
es
mov
jecxz
loope
filds
sahf
dec
or
mov
xchg
pop
fiaddl
mov
scas
pop
mov
repnz
adc
cmc
inc
sbb
pop
imul
fidivl
push
push
mov
sbb
or
loop
add
sbb
jl,pn
push
mov
adc
inc
test
ret
or
aam
dec
inc
xchg
dec
sbb
mov
fstpt
or
mov
js
pop
in
popa
lds
mov
xchg
jno
insb
loope
rorb
das
push
repz
neg
lcall
js
and
xchg
xchg
lds
out
mov
dec
hlt
sub
and
sbb
pushf
and
fs
jae
test
mov
jbe
and
ret
js
cmpb
sub
or
dec
das
int
out
mov
cmc
push
stos
hlt
mov
cmp
mov
scas
mov
nop
out
or
push
or
inc
nop
cmp
fdivrs
pop
fnstsw
mov
mov
ja
faddp
push
in
aas
stos
xchg
xlat
xchg
pop
in
lret
dec
push
mov
inc
out
nop
mov
ljmp
cmc
add
add
hlt
pop
pop
xor
mov
push
inc
pop
sub
add
mov
orl
in
insb
fdivrl
push
push
mov
fisubs
aam
xchg
dec
bound
xchg
lds
dec
jne
repnz
dec
xor
cltd
dec
lret
lret
test
lret
cld
mov
movsl
stc
js
mov
mov
jbe
ljmp
daa
pop
inc
ss
rorl
pop
movsl
loope
dec
fwait
lcall
shll
jno
sbb
xchg
sbbb
inc
mov
push
out
pop
in
add
or
mov
adc
mov
add
int
push
aam
das
or
js
cs
and
ss
sub
aas
lcall
xchg
lods
imul
push
dec
pop
mov
xor
nop
test
mov
movsl
in
lds
sahf
push
xor
imul
push
and
dec
fwait
dec
jo
repz
bound
rcll
sub
je
jbe
repz
jno
xlat
in
add
sbb
mov
aaa
mov
and
xchg
jge
xlat
std
xor
mov
ret
imul
mov
imul
lods
jg
xor
arpl
jno
pop
and
sbb
mov
xchg
mov
lods
pop
stos
enter
enter
movlps
stc
sbb
dec
iret
add
jmp
xchg
scas
aad
or
aam
loop
xchg
adc
mov
aam
popa
jmp
sbb
pop
jb
push
sbb
cmp
in
out
les
mov
arpl
popa
push
fldt
jle
gs
jae
pop
mov
mov
xor
xlat
shrb
push
mov
cmp
les
mov
push
mull
xlat
push
call
cli
mov
enter
arpl
adc
orb
call
add
mov
lret
lret
enter
shlb
inc
dec
in
dec
xor
sub
push
jecxz
push
add
adc
in
shlb
jns
adc
in
or
adc
mov
out
lea
or
divb
pop
jno
lods
xchg
cmp
out
add
in
mov
pop
sub
adc
stos
pop
insl
mov
push
cld
jle
mov
in
daa
mov
clc
dec
dec
adc
arpl
sbb
inc
mov
test
jne
lock
cmp
xlat
sbb
ljmp
dec
add
insb
or
adcb
shll
sbb
cwtl
dec
mov
pop
aad
inc
sub
aam
mov
scas
mov
frstor
cmp
inc
mov
pop
rcl
cmp
inc
mov
rclb
dec
loopne
add
fildl
pushf
fcmovu
push
fidivs
push
test
lock
lods
xchg
adc
lahf
dec
dec
jl
xchg
sbb
pop
mov
jb
insl
mov
dec
jns
fisubs
jecxz
mov
xlat
scas
cmpsl
pop
pusha
idiv
js
cmpsl
cmp
xor
dec
inc
mov
push
mov
jo
addb
push
lahf
push
push
sbb
xor
sbb
or
and
sbb
push
mov
push
dec
push
pop
fcomp
imul
lods
and
movsl
outsb
lods
sub
adc
out
mov
cli
mov
ret
sbb
aad
adc
fcmovnu
mov
sbb
dec
lea
jp
xor
add
pop
movsl
cmc
shlb
pushf
es
or
fsts
lret
and
imul
pop
cmpsb
sub
movsb
fadd
decb
roll
xor
out
sub
and
lcall
in
xchg
pop
jnp
jne
dec
fsubrl
cltd
pop
adc
sbb
jmp
adc
out
inc
mov
adc
addr16
fstpl
aas
subl
jae
sbb
mov
imulb
orl
or
xchg
mov
sub
cwtl
sti
es
mov
push
xchg
jnp
push
cmpl
mov
rclb
sbb
mov
sahf
repz
ja
out
pusha
or
cmp
or
fnstenv
loopne
lods
mov
nop
cmp
jnp,pt
in
loopne
shlb
es
adc
xchg
in
loopne
sub
sbb
xorb
lea
fdivr
add
test
popf
inc
push
cmpb
fistpl
bound
je
imul
or
jb
add
mov
iret
in
jg
mov
cmp
out
or
cvttps2pi
push
or
movsl
or
dec
ret
and
lea
sub
sahf
imul
out
push
xor
mov
mov
dec
nop
cmc
inc
dec
mov
lret
jno
inc
pop
or
inc
pop
adc
mov
mov
jae
jg
mov
sub
ja
mov
and
pushf
insl
clc
scas
mov
stc
jmp
test
push
adc
lcall
frstor
int
popa
cli
xchg
mov
in
ret
dec
lds
mov
lock
mov
or
loop
in
sub
cmc
in
push
test
sub
xlat
mov
jecxz
and
or
sbb
pop
pop
pop
cmpsl
int3
push
out
push
in
lods
enter
les
fcmovbe
adc
in
fildll
roll
sub
pop
jb
sub
test
jl
repz
or
push
sbb
and
sarb
divl
in
adc
pop
mov
arpl
mov
fidivl
add
sbbl
loop
scas
push
vmovaps
sub
mov
xchg
enter
adc
arpl
iret
scas
cmpl
fcomps
adc
jmp
and
dec
es
cmpsl
mov
sbb
out
jnp
adc
mov
adc
pop
or
cwtl
iret
sub
push
stc
call
divl
adc
loope
push
les
push
fwait
lods
ss
popa
fistps
shlb
js
pop
testb
ds
gs
stc
test
add
shll
fists
lahf
clc
sub
pop
movsb
pop
fwait
mov
pop
fnsave
cmpsl
out
cmp
fidivl
stos
cmp
jne
out
sub
cmp
mov
into
sub
and
lea
movsl
dec
jmp
and
notl
xchg
sub
imul
jg
and
call
fs
test
sub
bound
popf
icebp
sub
cwtl
push
ficompl
add
push
mov
popf
mov
lret
jb
leave
vmaxsd
ljmp
sub
jo
ss
mov
ja
das
xor
in
pusha
pop
mov
add
mov
cmpsb
in
dec
loopne
fldenv
mov
mov
stos
leave
test
repz
push
push
xor
add
sub
negb
add
sbb
mov
cmp
int
std
dec
pop
hlt
sub
inc
xor
lcall
roll
cmp
in
repz
fcomi
js
mov
xlat
mov
andb
mov
fsubr
pushf
dec
in
add
add
lcall
orl
mov
xchg
loope
and
mov
cs
pop
and
push
xor
ds
outsl
xchg
leave
lock
aam
mov
ss
stos
cld
pop
mov
jmp
mov
push
std
je
pop
or
jnp
adc
push
inc
push
push
and
ds
lds
jnp
cmc
lret
sbb
aad
and
and
mov
in
dec
aas
inc
pop
jp
adc
lock
mov
popa
dec
xchg
inc
notl
jmp
sti
add
and
push
out
mov
les
sahf
leave
pop
jmp
cmp
push
fnstenv
test
cmp
mov
cli
fildl
xor
jl
fsubrl
movb
test
sub
mov
icebp
in
lods
cwtl
lcall
cmp
out
sub
ficomps
jp
add
jae
jns
sub
or
xchg
push
sbb
addr16
aas
out
adc
mov
jbe
push
stos
push
addr16
cmovae
jo
sub
cmc
sbb
fsubrs
imul
lcall
int
push
in
aam
mov
adc
cld
ret
data16
inc
fldpi
jg
cmp
fisubrs
test
sub
push
cmp
or
adc
adc
lods
pop
or
or
xchg
in
jge
lock
imul
out
int
inc
jecxz
shrb
scas
jle
sbb
mov
aad
rorb
jle
test
std
cmpsb
outsl
or
clc
and
lahf
cmpsl
xor
sahf
pop
shll
pop
jmp
jae
lods
mov
push
jbe
out
jmp
dec
xchg
mov
xlat
cmc
test
push
or
xchg
or
sub
cmp
or
loope
pop
push
inc
pop
in
jge
dec
jo
and
out
vprotw
cmp
adc
nop
sbb
xchg
pop
outsl
or
in
outsb
imul
or
jp
addr16
inc
jb
int3
sbb
cltd
sbb
iret
mov
rol
inc
movsl
push
lock
shrb
or
gs
cmpsl
xchg
sbb
mov
push
push
jg
idivl
push
pop
mov
mov
dec
icebp
insb
sub
lods
jnp
or
sarb
add
aas
mov
cmp
cli
push
ret
mov
out
loope
add
adc
jno
loop
shl
dec
mov
cld
cmp
cmp
gs
lret
cmp
adc
add
mov
lcall
cltd
aam
test
adc
mov
pop
sti
push
cmpsl
pcmpgtw
xlat
out
sti
or
imul
negl
popf
xor
psrld
mov
mov
inc
add
mov
mov
ja
inc
mov
insl
bound
mov
adc
mov
push
and
nop
insb
cmpsb
bound
adc
cmpsb
push
or
fdivrp
pop
pop
testl
inc
add
and
lea
mov
cwtl
adc
popf
mov
and
gs
testb
ret
out
push
nop
push
dec
xchg
dec
sbb
aaa
push
je
fs
ljmp
cwtl
lds
test
rolb
jecxz
cmpsb
dec
call
jb
test
pop
xchg
fs
jno
ds
and
mov
cmc
psubw
loop
negl
mov
add
sahf
clc
xchg
pop
movntq
mov
sub
stos
jmp
incl
adc
in
pop
cmp
adc
test
push
ret
and
xor
rcl
xor
enter
jbe
add
enter
mov
dec
push
dec
stc
shlb
aas
xchg
xor
scas
popf
lods
push
scas
mov
mov
push
mov
and
xor
sub
or
mov
sbb
pushf
or
test
repz
push
lret
push
test
fldt
icebp
jle
rolb
int3
ja
ss
insb
stos
sbb
sbb
adc
inc
popa
mov
pop
fnstsw
pop
push
jp
pop
aam
cmp
dec
mov
fsubrl
adc
lock
sub
jbe
cmp
aad
lcall
sbb
int3
cltd
lods
and
jae
fldl
jb
ficompl
lods
popa
lret
jmp
xor
loope
pop
push
jp
shll
add
ja
cmp
cmp
jns
jecxz
outsl
xchg
outsb
push
xchg
sub
out
inc
fwait
push
push
negl
fnstenv
mov
sbb
aaa
lods
loope
sti
data16
mov
js
xor
push
jecxz
xor
repnz
in
out
xchg
pop
aad
and
clc
fldl
xor
inc
shrb
xchg
mov
pushl
pop
inc
inc
idivb
fwait
std
inc
pop
test
mov
inc
es
sbb
loopne
repnz
nop
clc
xor
push
imul
aaa
sbb
sbb
adc
jne
inc
inc
jge
pop
sbb
cmp
jmp
dec
ret
xor
sti
inc
dec
cmp
fbstp
icebp
push
aas
sub
jmp
inc
jmp
adc
add
add
bound
std
push
int3
std
fwait
cltd
jge
or
sar
outsl
dec
push
jae
out
ret
fistps
cwtl
clc
or
push
lods
sahf
loop
adc
shll
mov
in
push
aad
movsb
test
xor
and
dec
push
jmp
xchg
inc
nop
cmp
mov
test
jmp
gs
pop
daa
sbb
inc
js
mov
pop
sub
add
test
push
xchg
test
aas
mov
decl
push
cld
insb
lea
clc
push
dec
rcl
lods
push
dec
repz
idivb
push
mov
fiadds
cmp
xor
dec
pop
mov
je
movsl
je
inc
ficoms
sub
adc
sub
roll
pop
test
mov
sbb
pusha
sahf
mov
pop
adc
sub
xchg
daa
xchg
xchg
test
add
cmpsl
outsb
sub
lock
xor
push
push
movsb
jb
pop
inc
lock
movl
mov
inc
add
cli
mov
mov
inc
lds
sub
mov
test
rcll
sub
ret
cmp
sbb
aad
pop
push
pop
xchg
adc
sbb
in
ficoml
and
inc
xchg
je
outsb
jecxz
add
in
in
in
jg
das
xchg
outsl
inc
fsubl
add
push
adc
les
adc
stos
cmp
cmp
decb
leave
shrb
cmp
add
outsb
mov
into
andl
or
ror
inc
push
das
xor
xchg
push
xchg
sbb
shl
pop
xor
sti
fisttpl
push
out
push
pop
arpl
cwtl
add
aad
fwait
dec
rclb
test
push
add
movsb
lds
test
mov
pop
addr16
jge
pusha
testl
and
cmpb
sbbb
adc
mov
roll
es
inc
cmp
mov
pop
jae
jns
jnp
mov
sahf
and
mov
loop
mov
adc
mov
inc
adc
xor
stos
pop
hlt
aaa
lods
js
std
in
cmpsb
push
scas
lcall
fidivl
cmp
mov
sub
pop
mov
sbb
mov
sahf
xchg
cld
sbb
mov
mov
xchg
sub
mov
int3
iret
pop
pop
dec
outsb
and
arpl
xchg
shll
or
cli
mov
adc
shlb
mov
push
push
mov
cmc
lods
jno
cmp
inc
dec
js
movsb
inc
pop
sahf
out
ret
xor
mov
push
jns
xchg
leave
andb
dec
repz
jle
push
jl
lds
stc
mov
cs
enter
call
add
push
push
dec
cmp
sbb
xchg
cmp
clc
das
rclb
stos
sub
sub
jb
jae
and
das
imul
test
jl
mov
inc
sbb
mov
arpl
add
xor
inc
orl
dec
inc
scas
lcall
movsb
sbbb
jnp
mov
mov
dec
lcall
jmp
aad
jo
inc
outsb
jge
mov
pop
xor
test
addr16
ret
mov
enter
sub
pop
cmpsb
popf
pop
in
mov
int3
xor
push
out
pusha
adc
loopne
xlat
sbb
dec
aad
andb
cmp
out
ror
fidivrl
add
and
std
mov
xchg
ss
pop
push
jmp
add
das
inc
add
idivl
fldt
shlb
mov
pop
inc
out
jbe
mov
mov
pop
fwait
lahf
and
sub
sub
loopne
mov
cmpsb
cs
dec
mov
pushf
pop
push
outsb
push
jne
xchg
neg
mov
push
movsl
outsl
pop
jg
add
iret
or
inc
inc
sub
xor
fs
push
push
outsb
mov
add
lock
add
syscall
pop
aad
dec
test
outsb
out
out
clc
cmpb
les
or
outsl
mov
mov
test
rorb
xor
outsb
lds
daa
push
or
jnp
sbb
or
jbe
sbb
inc
out
jns
scas
es
adc
xchg
pop
pop
lock
or
mov
add
pushf
loop
sbb
or
mov
dec
add
int
gs
cli
add
cmp
lcall
lahf
leave
pop
or
add
sbb
repnz
mov
insb
test
loopne
or
pushf
pushf
mov
inc
fwait
arpl
jno
mov
pop
jno
sbb
hlt
lahf
fldt
loope
or
out
sbb
push
mov
les
fidivs
cmp
sahf
xlat
mov
mov
test
cwtl
in
lock
leave
jecxz
aam
adc
cmp
xchg
or
data16
mov
xlat
rolb
add
sbb
jns
fidivs
icebp
pop
dec
adc
testb
incb
sbb
pop
movsl
int
cs
enter
mov
push
xlat
adc
enter
add
dec
or
push
and
mov
pop
and
xchg
cwtl
sti
jnp
inc
dec
push
cmp
pop
std
nop
das
fsqrt
or
mov
out
pushf
sbb
leave
jo
lcall
icebp
rcrb
xchg
jmp
cwtl
xlat
mov
mov
adc
or
add
jmp
je
mov
leave
repz
add
test
rcr
cld
pop
imul
pop
mov
push
insb
ljmp
dec
dec
sarb
jns
pop
sahf
push
push
sbb
ret
mov
insl
decb
add
pop
wrmsr
mov
lds
outsl
lds
fildl
xlat
cwtl
das
repnz
enter
rorl
push
je
ljmp
cmpsl
xor
sub
movsb
cmp
xchg
mov
enter
sub
xorl
mov
or
in
stc
adc
adc
sti
sub
arpl
inc
int3
sbb
movl
xchg
mov
sub
inc
cmp
inc
mulb
dec
adc
jle
add
xchg
imul
xor
fcompl
and
rolb
cmp
icebp
mov
movsb
pop
xchg
test
iret
sbb
mov
mov
sub
repnz
dec
les
lds
cmovb
hlt
fadds
lods
cmp
jae
inc
nop
cltd
inc
fistps
mov
pop
xchg
inc
lret
mov
inc
mov
fwait
adc
fistl
cli
sub
jle
xor
pop
into
jae
inc
out
inc
cmpsb
outsb
or
cmp
and
inc
push
pushf
mov
jbe
lret
stos
aaa
pushf
xor
push
jne
xchg
addb
lret
xlat
pop
dec
fldt
js
push
cmp
xchg
cmp
inc
lcall
iret
js
rcl
xchg
out
dec
out
mov
jns
mov
fidivs
ja
sub
sub
fwait
jb
es
dec
stos
movsl
out
or
sbbb
xor
stos
imul
in
sub
mov
push
cmp
pop
rcll
or
cmpsl
jmp
ss
test
sub
in
and
loope
mov
push
xchg
inc
jl
adc
clc
adc
pop
and
xor
mov
inc
sbb
aam
push
mov
inc
pop
jns
jnp
pop
aas
adc
sbb
mov
cmpb
lock
cmp
jg
gs
adcl
outsl
pop
or
mov
and
mov
mov
les
shr
and
aaa
cmp
shrl
aaa
insl
cmp
insb
mov
rolb
xlat
pop
and
mov
dec
or
dec
mov
in
lods
fildl
mov
fistps
insl
and
dec
jne
push
inc
mov
xor
aaa
fmull
adc
cmpsb
dec
inc
sub
adc
mov
mov
inc
jns
nop
mov
out
les
inc
jae
outsl
lds
cs
jg
and
imul
mov
add
xchg
test
add
movsl
and
dec
cmp
mov
xchg
pop
push
and
lret
pop
or
mov
cmp
pop
sub
rcrl
loop
inc
loop
sbb
push
sbb
iret
add
popf
inc
movsb
dec
or
inc
cmp
push
cld
cmp
into
popl
or
lcall
into
loope
xchg
lods
outsl
mov
out
jnp
hlt
jmp
sbb
dec
ret
pop
outsb
addr16
loop
rcr
dec
xorl
movb
dec
outsl
test
sbb
enter
loopne
jno
adc
xchg
add
jnp
push
call
enter
or
outsb
pusha
das
jl
inc
in
mov
sbb
pop
xchg
cmp
mov
cmp
push
fwait
jns
js
push
sub
sahf
lods
fimuls
or
insb
shrb
fsubl
les
fstpt
xchg
insl
mov
enter
mov
lds
inc
cmc
movsb
inc
addr16
sarl
idivb
out
adcl
hlt
lods
data16
xchg
jne
xor
outsl
insb
loop
push
rclb
int3
das
add
sub
daa
mov
lret
das
adc
lods
adc
arpl
in
inc
mov
repnz
fildl
mov
lret
mov
pmulhuw
imul
enter
jnp
mov
sahf
ds
data16
add
cmp
xchg
aaa
or
stc
cmp
scas
out
mov
js
jle
fwait
mov
sub
or
ljmp
bound
aam
cs
sti
repnz
cmp
fadds
scas
aad
adc
cmpsb
test
adc
pop
leave
mov
jl
paddusw
out
xlat
or
add
mov
mov
cmp
pop
imul
mov
adc
lret
xchg
inc
js
jnp
iret
cmpsb
hlt
push
mov
stc
xlat
lods
mov
icebp
adc
leave
bound
mov
mov
xor
pusha
jns
shl
xor
sbb
mov
push
sub
bound
out
mov
sti
push
cmc
sub
fidivrl
pop
sub
test
lret
fsubrs
or
ja
jl
call
repz
dec
sti
fsubl
std
mov
inc
pop
or
loop
iret
or
cmp
mov
out
rol
adc
scas
stc
fwait
scas
outsb
add
push
mov
flds
mov
movsl
jg
or
mov
jg
push
mov
xor
ss
ret
mov
rep
mov
out
lods
vcvttpd2qq
and
movsb
in
push
mull
bound
add
jno
rorb
jle
xchg
and
fisubrl
or
inc
mov
inc
jb
in
sbb
ds
rep
scas
aad
call
int3
jno
js
jae
in
ds
dec
das
xchg
xlat
aam
fimull
fsubrs
lea
jne
xchg
dec
cmpsl
adc
sub
pop
fnstenv
and
xor
cmc
bound
cmpsb
jl
mov
pop
aam
pop
cmp
cmp
mov
jmp
imul
cmp
cmc
xchg
lds
mov
ret
in
addr16
push
push
cmp
xor
cmp
lea
jmp
mov
pop
fistpl
cmpsb
test
mov
sbb
inc
push
sub
or
mov
mov
call
push
loope
aam
xor
ds
sub
mov
jo
mov
int
in
cmc
sbb
in
pop
stos
xchg
hlt
inc
in
outsb
loop
add
jne
insl
cmpl
cmc
fwait
les
lret
mov
shrl
into
or
or
adc
int
jae
aas
ljmp
push
xor
lahf
pushf
imul
call
mov
or
ja
imull
mov
lahf
leave
int3
test
je
cmc
stc
jnp
call
imulb
add
inc
fisttpll
and
xchg
cmp
into
cmp
sbb
leave
ror
pusha
stos
dec
out
fisubl
loop
bound
bound
sbb
push
movsb
pop
lret
mov
sbbb
pusha
mov
or
sti
or
push
loope
and
pop
and
mov
lods
add
xlat
inc
adc
sahf
ret
out
aas
notl
fisttps
aas
or
jae
fs
jmp
push
jl
int
addr16
shlb
js
mov
or
jb
pop
ret
pop
in
test
inc
pop
imul
mov
mov
jecxz
and
aam
jno
addr16
inc
bound
dec
inc
dec
out
aaa
jl
pop
cmp
jnp
lods
aaa
insb
sub
sbb
sub
inc
divl
cmp
cmc
xchg
xchg
or
push
rcrl
dec
inc
sete
cmc
xlat
hlt
add
mov
inc
add
mov
inc
test
ds
sti
inc
clc
sbb
adc
push
pop
gs
hlt
stos
stos
adc
lret
lods
fstpl
or
sbb
lds
icebp
push
xchg
mov
mov
or
jne
add
ret
roll
in
push
dec
jge
adc
test
js
insl
fstpl
pop
int
hlt
push
cs
imul
sbb
das
sbb
adc
gs
pop
lcall
mov
sub
cmpb
int3
push
out
xchg
and
inc
pop
inc
mov
xor
inc
push
addr16
loop
repnz
clc
cli
sub
ret
inc
ret
fildl
sbb
scas
add
sub
lods
sbb
sarl
sbb
hlt
mov
add
shlb
xlat
mov
mov
cmpsl
das
adc
leave
jl
jp
jle
sbb
lock
lahf
sbb
les
mov
sahf
in
mov
inc
call
pop
enter
lret
push
rorb
cs
jmp
cmp
leave
jmp
push
inc
stos
dec
ss
test
sub
orb
loopne
bound
sub
push
or
loope
jg
into
pop
ret
addl
fcmovu
test
icebp
mov
push
jl
cmovb
pop
rcrl
test
pandn
lock
cmpsl
cmpb
icebp
xlat
mov
pop
es
push
jecxz
jecxz
std
cltd
mov
mov
ja
adc
mov
cmp
adc
inc
es
pushw
inc
fs
repz
cmpl
inc
push
cmp
or
int
inc
movsb
add
shll
and
push
adcb
cmpsl
mov
jg
dec
and
repnz
fbld
xor
fbstp
arpl
mov
jae
enter
aas
pop
addr16
jno
sbb
jmp
pop
jg
hlt
mov
loopne
js
test
cmpsl
add
dec
and
jmp
mov
jl
sbb
jnp
cmc
fimuls
test
fsubrl
lret
call
sbb
loope
cld
sbb
out
rcll
push
mov
and
bound
insl
pop
xchg
loop
adc
mov
in
ffree
xor
nop
out
jl
daa
mov
mov
in
push
pop
pop
xor
cmp
or
aam
add
inc
in
notl
mov
lock
test
mov
das
pop
lea
add
sahf
in
xchg
sti
out
in
cmpsl
adc
dec
pop
and
out
xchg
leave
pop
mov
xchg
sbb
sub
and
cmp
lret
mov
loopne
iret
insl
data16
cmp
call
mov
xor
ss
sbb
xchg
push
addr16
add
add
add
and
add
pop
popf
pop
dec
les
rclb
dec
mov
xchg
mov
loop
sub
dec
and
sbb
je
scas
enter
cvtpi2ps
int3
xchg
ret
jns
stos
pop
mov
out
jg
lock
fsubrl
in
notb
fbstp
repnz
sbb
jmp
js
cmp
sub
js
adc
fldcw
jne
stos
dec
out
mov
je
xchg
push
cmp
xchg
pop
push
mov
inc
je
adc
adc
loop
hlt
dec
outsl
inc
xor
xorl
cld
fsubr
mov
inc
and
in
fisttpll
pusha
cmp
add
shr
pop
inc
pop
or
dec
imul
push
or
insb
push
in
in
lea
sub
xor
mov
gs
fmuls
xchg
test
mov
xchg
xor
pop
shrb
lock
ss
rcl
loope
mov
jae
sbb
jae
dec
cmc
fsubrl
aad
pop
mov
cmp
add
and
add
subb
mov
pushl
push
loope
dec
stos
sbb
mov
dec
in
out
shrb
in
push
test
and
sbb
ret
in
or
sbb
sarb
stc
imul
push
push
fs
push
nop
mov
imul
lock
out
dec
add
aam
and
dec
cmpsl
out
sub
rclb
into
pop
push
pop
push
push
sub
mov
dec
pop
aam
jle
divb
insb
xchg
icebp
pusha
xchg
leave
fistps
mov
test
leave
in
hlt
pop
ss
je
scas
mov
aad
test
shll
cmp
mov
inc
pop
mov
dec
jae
or
lret
push
scas
inc
push
jbe
or
mov
stos
adc
lahf
in
xchg
pop
je
popa
mov
adc
inc
jb
movsb
outsb
inc
lret
xor
sub
cmp
fcomip
mov
test
aad
sbbl
xchg
rcll
outsb
mov
lods
jge
jo
push
enter
cmc
xor
ror
add
ja
sub
cs
in
sub
jle
sub
pop
lock
adc
and
add
jle
and
add
add
push
pop
sarl
add
cmp
test
push
mov
mov
xor
je
jmp
repnz
clc
ja
and
pop
in
mov
scas
or
or
mov
outsb
jle
fsubrp
loope
cmp
push
sahf
loopne
pushf
lcall
cmp
test
stos
dec
push
xchg
push
xor
je
sub
push
inc
sub
push
test
mov
inc
sbb
fwait
ret
data16
mov
fwait
xchg
jg
aam
jns
gs
jl
inc
test
cmp
movsb
es
add
cmp
and
roll
jmp
mov
cwtl
mov
fdivr
mov
xchg
lods
inc
mov
push
jns
dec
mov
xchg
inc
scas
sub
in
rcrl
xlat
jae
adcl
mov
shlb
xor
sbb
mov
movw
pusha
pop
sahf
add
push
in
and
addr16
sbb
mov
jo
jno
adc
ljmp
mov
ds
mov
test
mov
jne
xchg
pop
mov
sub
add
adc
cmpsl
mov
daa
in
dec
repnz
inc
popa
lcall
inc
mov
push
in
outsb
add
jmp
stos
mov
leave
in
inc
mov
inc
movsb
outsl
mov
or
mov
arpl
mov
enter
lods
inc
lret
inc
scas
ds
ja
adc
xor
adc
pop
or
fs
mov
cs
mov
test
jle
lock
xchg
lock
loop
pop
je
pop
cmc
out
mov
lods
jb
mov
sub
cmpsl
pushl
iret
xor
stos
push
cmp
shrb
xchg
xchg
push
jb
lcall
aaa
testb
push
pop
mov
idivl
leave
popa
hlt
adc
jbe
or
aam
mov
push
mov
out
orl
sub
and
xor
rcrb
lods
or
shll
movsb
mov
push
sub
add
jno
int
xor
mov
fwait
mov
out
sbb
adc
mov
scas
scas
mov
outsl
jmp
outsl
pop
rcrl
fs
and
mov
fstps
out
mov
test
outsl
jg
pop
pusha
jo
mov
mov
inc
sbb
orl
ds
xchg
add
xor
sub
out
mov
scas
das
adc
xchg
mov
cmp
into
mov
and
jbe
dec
aas
push
mov
icebp
inc
lock
push
pop
mov
fisubrl
push
xchg
add
xchg
jb
loopne
mov
cmc
inc
lods
test
or
mov
out
mov
and
add
stos
add
cmp
fwait
adc
rcll
loope
pop
jnp
stos
adc
push
push
addb
arpl
ret
jle
xlat
sbb
repz
fs
loopne
stos
subb
icebp
dec
mov
jne
dec
and
lods
shlb
pop
mul
and
xchg
xchg
sbb
mov
push
testl
shrl
adc
xchg
out
xchg
addr16
mov
outsl
adc
ss
imulb
ror
into
jbe
outsb
mov
pop
xchg
out
arpl
int3
jp
dec
or
or
das
outsb
and
inc
pop
inc
mov
mov
das
test
or
jge
loopne
mov
popf
jmp
push
or
pushf
mov
icebp
out
jnp
push
cmp
mov
pop
outsb
jmp
and
dec
and
lcall
xor
pop
dec
or
fldt
pop
dec
and
pusha
mov
test
shrl
in
jns
jb
jl
fldl
xor
cmp
mov
mov
jne
add
xor
xchg
pushf
mov
aad
push
fdivrs
lods
jbe
hlt
xchg
sub
mull
push
xchg
add
dec
dec
sub
lret
jle
dec
sbb
jg
popf
adc
push
push
imul
pop
test
aad
cmpsl
adc
loop
sub
lock
rcrl
xchg
in
les
movsb
cld
enter
nop
add
dec
enter
pop
mov
jae
sbb
aad
jg
int
dec
loope
and
pop
call
loop
bound
ret
sub
test
add
xor
push
mov
in
test
adcb
fsub
in
out
dec
popa
add
sub
mov
inc
mov
jne
jne
fsubrs
sbb
dec
dec
mov
pusha
pop
cmp
jb
clc
xchg
aam
and
cmp
xor
or
addl
or
pusha
cli
lods
cmp
into
daa
push
imul
lcall
movsb
sub
push
les
fidivrl
cltd
push
cwtl
clc
mov
xchg
cwtl
dec
or
sub
pop
jno
xchg
stos
xor
sub
stos
mov
or
sbb
push
push
add
mov
mov
add
test
dec
gs
aad
es
push
icebp
out
jne
xor
xchg
mov
mov
pop
data16
scas
or
mov
outsl
xchg
mov
inc
pop
popa
aaa
jp
xor
lds
jb
sbb
cmp
popf
ss
mov
loopne
and
pop
mov
out
popa
outsb
sbbl
or
xor
mulb
cwtl
xor
mov
mov
mov
cmpsl
or
pushf
loopne
push
xor
cmp
push
lds
mov
in
jl
insl
jbe
arpl
push
lds
cmp
push
outsb
bound
mov
push
out
pop
loopne
lahf
and
sbb
shll
shl
ljmp
push
push
lock
cmp
out
int3
dec
xor
scas
fimuls
pop
popf
jge
movsl
cmp
push
popaw
arpl
loopne
pushf
mov
push
bound
cmp
cmp
iret
decb
push
fs
push
push
cmp
fwait
scas
sbb
inc
insl
cmc
shrb
cli
out
in
out
lods
icebp
loop
push
sahf
xchg
sti
cltd
aad
ret
and
mov
not
sbb
mov
sub
cmpb
mov
outsb
rcr
jle
jmp
cmp
or
xchg
push
cmp
sbb
adc
cltd
popa
inc
stos
xor
bound
mov
or
push
inc
mov
push
mov
pop
das
nop
pop
stos
hlt
and
pusha
add
ret
or
add
xchg
add
push
scas
push
stos
push
adc
mov
push
mov
rorb
popf
push
out
rcr
daa
lea
jae
divl
push
hlt
dec
adc
leave
cwtl
add
cli
sub
inc
pop
pop
pop
mul
jmp
ljmp
fidivrl
insb
mov
xor
cltd
jbe
sarb
andl
cmpsb
xchg
jmp
dec
cmp
xor
test
jmp
pop
fdivp
xchg
sbb
mov
dec
test
lret
xchg
leave
dec
and
add
xchg
inc
pushf
cltd
stos
rorb
out
test
adc
orl
jo
sub
pop
xlat
sbb
push
or
mov
cmp
sti
dec
outsl
jns
lret
popa
and
xchg
xor
inc
fimuls
and
adc
sbb
insb
movsb
scas
test
cltd
cmp
out
cmp
xchg
xor
mov
cmp
add
xchg
or
xor
rorb
xor
cltd
ja
dec
jno
or
jo
and
icebp
mov
nop
and
mov
xor
or
mov
les
cli
mov
test
xchg
mov
jl
pop
in
and
cmp
popa
push
jle
pop
mov
rorb
mov
mov
add
rclb
movl
insb
in
jl
sub
lahf
adc
popa
mov
jb
sub
sbb
mov
movsl
daa
sahf
daa
push
xor
jno
cmc
sbb
scas
jge
cmp
lret
imul
sub
adc
testb
mov
cmpsb
imul
cmp
push
test
push
pop
jmp
dec
mov
lahf
jge
dec
aaa
je
out
in
and
jge
cmp
ljmp
nop
pushf
mov
loope
icebp
mov
cmp
scas
adc
addr16
mov
out
mull
int3
sub
inc
movb
adc
push
leave
and
cmc
stc
dec
shlb
xchg
sub
subb
pop
cmc
or
sub
jle
std
orb
cltd
xor
add
enter
setne
lods
fstps
int
fcom
jnp
and
mov
jae
dec
sub
aaa
test
cwtl
adc
lcall
sbb
pop
jb
lods
movsl
lods
ljmp
cld
add
xor
push
push
dec
mov
jg
imul
mov
imul
pop
inc
lea
ja
mov
lods
sub
iret
dec
lods
pop
rorb
mov
xchg
fs
jne
sub
push
jl
adc
pop
divb
cmp
mov
aas
lods
lahf
mov
push
mov
clc
test
iret
push
pop
lock
fsts
add
leave
pop
idiv
aas
xchg
es
xor
aaa
fidivs
js
cld
jmp
dec
in
fcoml
sbb
dec
ljmp
dec
or
lods
andb
lahf
adc
dec
jecxz
or
in
addr16
arpl
mov
xor
sarl
imul
popl
testl
xchg
scas
pop
popa
mov
daa
add
jb
movsb
pop
cli
cmp
sub
xchg
mov
out
mov
mov
add
addl
movsb
shll
jnp
sahf
adc
sti
mov
insl
mov
lods
dec
filds
sti
xor
outsl
test
mov
bound
loop
cld
into
fldt
inc
sbb
ficoml
test
or
les
mov
rorb
adc
cmp
mov
mov
mov
sub
mov
mov
insl
add
popf
mov
sub
jle
mov
out
dec
adc
mov
pushf
cld
mov
aaa
out
std
pop
cld
out
fsts
sub
jo
out
dec
lds
sbb
sbb
rclb
xchg
stc
cld
xchg
in
and
repz
out
lahf
scas
cmp
cmp
iret
test
xchg
int
or
jo
push
mov
mov
in
fcmovnbe
push
insl
dec
rcl
push
std
rcll
inc
fldz
push
movsb
inc
test
test
adc
cs
push
dec
lret
jae
pop
out
fwait
or
inc
adcl
arpl
add
les
or
cs
mov
add
adc
sbb
loop
xor
pusha
xor
insb
icebp
imul
add
mov
inc
rolb
or
call
fstps
in
test
jle
or
in
xor
push
push
xlat
jns
xchg
cmpsl
cmp
adc
or
push
inc
inc
int
pop
push
push
xor
sbbl
lods
icebp
outsl
popa
inc
into
xchg
sahf
dec
lods
enter
push
lahf
adc
cmp
mov
and
pop
jg
movsb
mov
aaa
cmp
fidivrl
sub
dec
sub
pop
cmp
jae
insl
adc
mov
stc
dec
mov
xlat
mov
hlt
dec
sti
jecxz
add
scas
movsl
xchg
pop
out
mov
cmpsb
outsb
jae
mov
dec
cltd
decl
aam
sahf
in
cmp
xor
popa
or
loop
dec
pop
fdivrs
cmpsb
insl
popa
xor
mov
inc
lret
sbb
popa
ds
xor
cld
mov
ret
xchg
or
inc
fucompp
in
mov
dec
call
push
cmpsl
pop
inc
int
sbb
add
fistl
lcall
outsl
nop
sbb
add
icebp
iret
popf
add
inc
mov
cmp
out
cmp
pop
or
inc
xchg
xchg
stc
inc
repz
cli
inc
cmpsl
pop
dec
inc
loope
pop
je
mov
dec
adc
pop
lret
filds
adc
movsb
fsubrl
inc
xor
sahf
stc
std
and
sub
fstl
push
sub
jge
push
mov
mov
insl
fs
mov
mov
sti
push
lods
lcall
and
into
insl
push
add
movsb
sbb
shll
fnstenv
nop
cmc
jle
out
sbb
xor
add
sbb
popf
jp
pop
xchg
xchg
mov
push
pop
xor
jl
mov
fnstenv
inc
out
cmp
bound
cmp
mov
mov
xor
mov
push
inc
das
mov
mov
add
idivl
xchg
mov
shll
xchg
xchg
in
dec
inc
repz
mov
jl
aas
clc
dec
test
push
into
dec
push
jg
pop
les
ds
jno
gs
xchg
add
cli
xor
movl
add
test
cmp
xor
gs
addb
sbb
fdivrp
or
lea
clc
ja
popa
cwtl
fwait
int
pop
aaa
movsl
sti
loop
iret
xor
jl
loop
lea
or
addr16
inc
mov
jno
dec
inc
mov
call
mov
lods
popa
xor
sub
jns
xchg
ljmp
adc
push
daa
into
pushf
aas
out
mov
sahf
addr16
adc
movl
xchg
sub
lea
mov
dec
leave
mov
xor
in
xor
sub
outsl
sbb
jbe
dec
or
and
and
sub
pusha
leave
push
lea
add
rorb
xor
jo
data16
inc
cltd
outsb
adc
push
jp
mov
mov
xor
fst
xchg
xchg
shlb
lods
loopne
push
mov
add
push
jge
jge
dec
into
fstpl
add
jg
lea
pop
pop
shll
jo
aam
sbb
add
mov
stos
or
stos
pop
fiaddl
mov
outsb
in
stos
mov
inc
sbb
sbb
mov
add
mov
adc
fcoms
iret
addr16
adc
lea
out
in
test
in
xchg
mov
ljmp
aam
inc
outsl
enter
pop
jle
loope
push
aad
xchg
fimuls
sub
in
mov
popa
in
sbb
mov
push
scas
inc
xor
mov
in
push
js
scas
jae
fcom
popa
dec
push
cld
jge
xor
rorl
jae
pop
mov
std
cmp
push
pop
and
mov
jl
adc
test
push
aad
and
leave
dec
fists
push
aaa
pop
pop
stos
repnz
cwtl
add
mov
in
sbb
sub
and
test
cmp
rcl
sub
stos
push
daa
rorl
ljmp
jle
in
fbld
iret
fs
add
mov
test
mov
es
xor
ficoml
or
mov
mov
aam
outsb
and
pop
dec
or
push
jl
out
nopl
lods
xor
sbb
cmc
or
push
dec
jl
js
lahf
jmp
dec
mov
add
in
in
add
adc
xor
jge
aad
sbb
xchg
sub
sahf
test
je
inc
mov
sbb
iret
xchg
iret
jp
loope
xchg
inc
sahf
adc
adc
int
stos
jnp
out
call
and
sub
les
cmpsl
outsb
mov
mov
dec
jle
sub
adc
iret
aaa
call
sbb
lea
pushf
cs
lret
imul
lock
jne
push
inc
daa
lods
in
lods
mov
je
mov
xor
sub
mov
fists
out
decb
adc
icebp
lock
sub
fs
lret
or
pop
push
pop
and
mov
push
push
mov
jle
fldl
shll
in
arpl
jl
mov
or
xchg
lret
pop
mov
xor
pusha
jno
lds
scas
push
and
leave
mov
mov
jle
xchg
icebp
add
negb
adc
inc
cmpb
stos
sub
into
push
lds
das
mov
mov
xor
xor
xchg
xchg
faddl
pop
lods
inc
jbe
inc
sti
mov
push
add
int3
pop
pop
adc
iret
gs
mov
pop
cltd
push
jno
sub
rcrb
lret
add
sbb
fs
rcrl
stos
cmpsl
dec
cmp
cld
test
cmpsb
xlat
or
incl
sarb
mov
add
ffreep
mov
jns
push
nop
adc
pop
daa
inc
dec
mov
sbb
icebp
setnp
decl
dec
bound
sbb
outsb
icebp
call
mov
cltd
pop
out
divb
adc
mov
pop
sbb
test
xlat
mov
mov
push
lds
loope
aad
sub
andb
aas
mov
pop
cmp
jno
jmp
aam
call
scas
jge
outsb
push
pusha
sub
push
cmp
aas
push
iret
roll
mov
push
jmp
jnp
loope
and
mov
adc
adc
insb
push
dec
cmp
mov
adc
popa
into
add
pop
lods
adc
jl
sub
aaa
cmp
xlat
or
out
mov
jae
xchg
or
repnz
and
roll
xor
outsb
mov
lea
sbbb
hlt
pop
inc
adc
scas
xor
add
iret
inc
enter
jge
out
test
push
jo
xchg
leave
mov
xor
lea
and
gs
jl
mov
mov
popa
fimuls
sub
cmpsb
pushf
push
and
ret
push
push
inc
xor
or
rcrb
xor
cmp
out
rorb
popf
in
dec
dec
fbld
addr16
mov
popa
mov
mov
loope
sub
loope
mov
jmp
cmpsb
addr16
in
jae
pop
out
shl
movsb
add
mov
xor
lcall
mov
mov
clc
rclb
repnz
push
cmpsl
ss
outsl
adc
lret
aam
ja
aas
sbb
mov
push
gs
icebp
cmc
mov
dec
cmp
cwtl
rcrb
icebp
xchg
sub
gs
lods
add
mov
es
sbb
hlt
sub
aad
mov
out
xchg
adc
mov
push
aad
cmp
mov
repnz
stos
sub
call
ret
loop
test
sti
call
xchg
divb
fbstp
push
inc
aas
jns
sti
cmp
mov
insb
pop
ja
popa
adc
iret
mov
mov
jb
clc
or
xor
jae
adc
pushw
cmp
fwait
clc
cld
xchg
mov
push
pop
js
fisubrl
shll
aas
jb
fidivs
adc
jno
pop
test
mov
imul
cmp
and
sub
xor
push
add
inc
or
mov
gs
test
or
adc
or
lock
mov
aam
xor
mov
sti
ficomps
data16
insl
mov
addr16
xor
mov
std
addr16
ljmp
xlat
mov
sbb
test
aaa
imulb
adc
clc
arpl
pop
inc
mov
lret
mov
mov
push
out
lahf
xchg
icebp
bound
cwtl
jns
movsl
sahf
xor
in
cltd
rolb
mov
or
push
stos
movsb
mov
mov
xor
sbb
and
push
adc
add
mov
mov
imul
fadds
punpcklwd
jns
and
sbb
mov
jle
icebp
cmpsb
pop
sub
negb
mov
xor
add
xor
sbb
cmp
or
or
push
imul
outsb
sub
sti
add
fimuls
lea
pop
mov
mov
cmp
ret
xchg
push
jmp
out
aam
stos
xor
jmp
jb
adc
push
repz
shld
add
inc
or
jp
aam
rorl
dec
mov
outsb
sbb
mov
or
inc
xchg
push
sub
fisubs
ja
mov
aam
popa
xchg
inc
mov
mov
xorb
aaa
adc
shll
mov
push
inc
xchg
cmpsl
rclb
inc
addb
sbb
xchg
pushf
loopne
popf
aam
cmp
xor
inc
mov
in
jg
stos
mov
cmp
jmp
mov
outsb
rcrl
hlt
sbb
jmp
pop
cmp
into
fs
mov
push
shrl
xchg
xchg
rorl
push
imul
fildll
jno
rcrl
add
call
sub
cmpsb
sbb
inc
inc
iret
mov
popf
cmp
nop
enter
inc
push
push
or
movsl
aas
cmpsb
sub
or
xlat
cmp
xor
xchg
cs
jg
scas
push
outsb
cmpb
jle
jmp
je
xchg
jmp
mov
adc
push
mov
inc
and
cmp
or
cmp
shll
lret
or
mov
jp
add
push
lea
loopne
imul
sub
and
xor
inc
dec
dec
dec
jns
movsb
pop
mov
and
mov
insb
or
dec
jmp
jmp
lods
sbb
popa
fucom
dec
inc
ss
push
dec
aad
aad
leave
sbb
sub
push
out
mov
lock
les
or
in
add
jge
push
pop
or
add
mov
daa
mov
stos
pushf
cmp
inc
mov
js
popf
stos
sub
test
scas
das
jle
inc
mov
mov
fs
jns
mov
addb
dec
mov
pop
sub
xor
out
negb
cmp
fisttpll
cs
jg
setg
into
inc
pop
xor
cmp
push
repz
xor
inc
mov
jecxz
clc
cltd
sahf
jecxz
stc
shr
jb
shrl
fiadds
and
test
ljmp
xchg
mov
sbb
push
mov
repz
push
sbb
dec
mov
inc
sbb
test
mov
popf
daa
cmp
test
in
out
jns
xchg
jmp
cs
jmp
hlt
xchg
out
clc
repnz
dec
rorl
mov
lock
mov
int
push
adc
dec
lock
ljmp
cmpsl
adc
xchg
mov
fildll
cmp
repnz
lods
test
imul
icebp
push
sbb
mov
or
popa
and
xchg
jb
add
mov
push
and
aas
pushf
inc
jnp,pt
jg
jns
adc
cmp
and
xor
and
fisubs
xchg
fdiv
mov
insl
shrl
sahf
dec
and
pop
jl
xor
lcall
nop
push
jg
sbb
mov
inc
cmp
inc
pop
loopne
outsl
mov
pop
sahf
dec
cmp
aas
call
jne
imul
dec
mov
nop
mov
lcall
imul
ds
adc
rcrb
ljmp
sahf
pop
sbb
adc
aas
dec
stos
jo
std
pcmpgtw
jg
push
or
das
push
or
fnstsw
test
inc
and
stos
stc
stos
loope
idivl
scas
insl
outsb
mov
push
cmpl
cltd
outsl
aam
jnp
xchg
jecxz
jge
xor
sbb
outsb
das
dec
lahf
in
inc
xchg
gs
mov
sub
pop
fsubp
or
roll
and
or
shrl
xor
movl
and
aad
insl
repz
inc
jae
push
call
imul
aas
test
in
outsb
sub
xchg
rorl
inc
jno
rorl
inc
dec
outsb
repnz
into
aam
lods
into
loop
sbb
loope
jp
push
xor
scas
bnd
mov
mov
pop
movsb
xor
popa
orl
mov
cmp
add
mov
aad
shlb
dec
and
add
push
ja
repnz
jae
sub
push
jnp
jle
mov
out
jp
dec
pusha
lret
push
lods
sbb
cmp
mov
aad
sub
mov
xchg
int
popa
sbb
mov
les
pop
rolb
rorl
lahf
push
in
lret
aas
and
lods
xor
repz
imul
and
mov
stc
or
movsb
adc
or
mov
mov
jb
js
jno
and
mov
mov
or
fistps
leave
mov
jns
addr16
not
and
mov
lea
es
adcb
dec
cmp
jns
mov
mov
int
mov
aas
bound
fsubr
std
lcall
cmc
adc
sbb
adc
ret
movsl
in
sti
loop
cmp
adc
hlt
data16
aam
cmp
mov
jge
loopne
movb
rclb
mov
in
andb
fs
xor
jo
mulb
lcall
fcomip
ja
pop
dec
sbb
cmpl
jbe
mov
sbb
ret
lahf
fistpll
mov
js
add
dec
test
push
adc
xchg
addb
flds
gs
dec
cmp
es
jns
andb
dec
sub
insl
arpl
ss
and
test
inc
frstor
addl
pop
or
shl
mov
push
int
js
mov
xor
test
push
push
rcrb
sbb
gs
cmc
xchg
mov
test
xor
dec
aaa
mov
outsb
fucomp
pop
ror
mov
xchg
mov
popa
pop
or
or
and
ret
mov
add
movb
stos
mov
and
add
add
cmpsl
and
iret
lret
cmp
mov
mov
outsb
stc
jo
mov
jo
mov
fdecstp
mov
mov
inc
push
out
pop
ja
mov
mov
sahf
mov
std
jns
andl
and
iret
and
jmp
sbb
xchg
js
aas
es
pop
fildl
ljmp
insb
mov
in
jg
pop
xor
jp
cld
adc
push
pop
jns
lahf
xchg
dec
pop
add
jo
xor
sub
push
dec
mov
push
sbb
jecxz
sub
pop
xor
in
sbb
es
dec
dec
repz
xor
mov
jp
xor
xchg
jbe
and
fdivp
movsb
pop
ret
out
shl
pop
in
dec
or
clc
jae
faddp
mov
in
lahf
out
lret
adc
mov
pop
add
imul
in
mov
fmul
aam
pop
dec
gs
xchg
lahf
dec
roll
push
mov
xchg
inc
jecxz
mov
out
rclb
enter
inc
xchg
lods
cltd
rclb
jne
sbb
sbb
sub
inc
and
xchg
lahf
sub
dec
in
xchg
movsb
aas
repnz
insl
bound
jbe
inc
push
mov
mov
xchg
lock
dec
and
sbb
and
ds
test
in
sbb
and
fstp
dec
sub
enter
addr16
jle
xor
insb
xchg
sbb
inc
adc
and
scas
dec
or
popf
add
mov
leave
test
pop
lret
cli
imul
mov
inc
out
in
lock
mov
cmpb
ficompl
sub
inc
popa
enter
mov
arpl
rorb
mov
jns
jg
adc
mov
push
insb
movsl
mov
add
aaa
xor
lcall
das
mov
stc
enter
addb
push
lea
in
mov
sbb
jo
rcrl
push
and
repz
add
out
xor
es
push
lahf
fimuls
sbb
xor
scas
xor
insl
sahf
push
in
sahf
aam
push
add
add
ret
pop
out
in
jge
add
mov
adc
rorl
lock
lods
sbb
lods
mov
push
movsl
and
xor
rcll
sti
adc
cmpsl
xchg
in
inc
pop
inc
jecxz
enter
push
lock
out
daa
jg
pop
pop
pop
cmp
jge
bndldx
mov
lds
stos
xor
mov
enter
and
clc
in
mov
mov
js
sbb
xor
arpl
lock
xchg
cld
ljmp
jne
push
sub
lahf
xchg
ja
sbb
inc
mov
push
push
insb
xor
mov
mov
js
das
xor
cli
jb
sbb
push
xchg
into
xor
adcl
push
ljmp
dec
decl
pusha
cmp
xlat
cmp
cli
adc
subb
ds
rorl
sbb
ja
and
adc
pushf
pusha
mov
repnz
into
addr16
jmp
cmp
jg
nop
pop
adc
out
cmp
out
dec
in
inc
lock
pop
std
mov
shlb
push
sar
or
adc
mov
iret
and
pop
pop
jmp
mov
stos
jge
push
push
fimuls
jbe
pop
dec
jecxz
fs
fmul
adc
add
gs
into
fisubs
fdivl
inc
mov
lods
or
aas
push
mov
push
lds
xchg
jo
lcall
mov
or
loop
sub
lcall
mov
sbb
xor
mov
push
daa
dec
and
push
aad
lcall
dec
pop
push
lret
insl
rol
movsl
shll
push
lcall
xchg
sbb
daa
mov
hlt
popa
mov
call
and
jae
leave
sub
mov
sbb
dec
xchg
add
dec
adc
sbb
arpl
mov
fwait
bound
outsl
mov
push
scas
mov
fisubrs
mov
cmp
mov
sbb
xor
lods
rcl
inc
mov
mov
push
stos
addb
jecxz
pop
mov
xchg
inc
jae
out
add
jecxz
fdiv
lcall
test
out
inc
xchg
pop
leave
pop
inc
cmp
shlb
mov
mov
js
iret
add
xchg
stc
sub
daa
xor
mov
cld
xlat
pop
adc
cmp
hlt
dec
cmp
dec
ret
add
leave
call
cmpsl
loopne
scas
data16
add
test
inc
imul
icebp
rol
les
lcall
je
jecxz
test
into
push
mov
push
in
mov
lea
jl
add
dec
out
jnp
stc
adc
lcall
loop
out
test
mov
adc
mov
adc
mov
insl
lea
ljmp
dec
sbb
dec
push
sbb
mov
outsl
xor
movl
sub
jmp
and
xor
gs
aam
pop
and
mov
add
sub
cmpsb
sub
lock
dec
in
mov
mov
jmp
adc
arpl
rorl
dec
mov
xchg
out
repz
das
movsl
lock
sub
mov
repz
sbb
fwait
jge
jae
shll
lahf
pop
ds
popa
pop
add
jne
popa
or
mov
push
mov
scas
lcall
lock
bnd
sbb
jnp
mov
or
repnz
icebp
xchg
fld
or
xchg
sub
icebp
inc
cld
xchg
repz
scas
out
mov
add
pop
or
out
adc
adc
jge
or
sbb
or
cmc
out
inc
jbe
xor
pop
push
shrl
rcr
and
ljmp
and
jne
lods
or
gs
out
stos
test
and
mov
enter
jl
ss
mov
into
xchg
xchg
xchg
jmp
hlt
cmpsb
ja
inc
push
mov
fsubl
ss
jne
and
data16
loopne
lahf
sub
xor
push
inc
xor
shll
add
mov
mov
jno
pop
cmp
cld
xchg
dec
out
mov
adc
inc
pusha
mov
fistl
sbb
pop
xchg
dec
xor
xchg
xor
push
aam
cmp
sahf
int3
xchg
mov
mov
or
sbb
call
stc
sub
mov
jge
lods
xchg
xchg
lret
loopne
pop
aad
and
xor
test
xor
in
mov
xchg
mov
dec
pop
mov
leave
sbb
cmpsb
push
orl
loop
jae
inc
mov
cmc
lea
pop
mov
and
dec
pusha
or
mov
mov
inc
sub
lds
push
sbb
scas
std
add
pop
or
mov
aas
pop
xor
mov
xor
stc
mov
xchg
xor
decl
into
xor
jne
stos
push
fildl
aam
shrb
rol
xor
or
mov
hlt
inc
daa
pop
and
stos
nop
cmp
add
ja
inc
in
iret
test
leave
outsb
add
pop
adcl
stc
xlat
shll
mov
and
aaa
in
movsl
inc
mov
addr16
stos
cltd
jmp
cmp
sbb
xchg
je
mov
popa
negb
cld
mov
xor
stos
mov
sbb
mov
fst
cmp
push
add
mov
pop
and
adc
pop
pop
mov
mov
pop
cwtl
lea
insl
shl
pop
lods
xchg
mov
iret
ror
test
les
adc
scas
cs
cmp
push
andl
cmc
loope
inc
push
lods
xchg
pusha
cmpl
xchg
mov
jle
pushf
icebp
scas
movsl
push
or
adc
stos
push
pop
lret
mov
dec
add
in
dec
dec
sahf
aas
cmp
or
add
mov
adc
xlat
sub
xchg
pop
add
in
inc
mov
popf
dec
test
dec
flds
push
int3
cli
jg,pn
in
popf
lahf
in
mov
sub
or
mov
mov
xor
xchg
mov
mov
add
sub
cmp
mov
mov
sub
clc
lret
addl
jbe
jecxz
sub
xor
stos
std
inc
int
inc
js
shll
mov
xchg
dec
imul
cltd
push
imul
rcrb
insl
repnz
in
rcr
aas
test
xor
movsl
dec
inc
aam
cmpsb
loop
loop
sub
push
lahf
mov
pop
idiv
mov
pop
inc
push
cmpsl
pop
out
jl
mov
push
push
fldt
sti
inc
stc
cmpsl
add
mov
aas
dec
mov
test
adcl
jnp
out
mov
fidivrl
mulb
jbe
lock
pop
ficoml
add
xor
insb
jecxz
fwait
mov
pop
arpl
xchg
sub
xchg
scas
cmc
popf
pop
in
adc
into
push
push
xlat
cmp
sbb
lods
test
lods
jo
in
lcall
test
jp
scas
idivb
mov
rcl
les
adc
ss
popfw
in
rcrl
iret
fcmovne
dec
or
mov
fldenv
sub
sub
fwait
push
adc
dec
ret
mov
cmpb
out
sub
stc
xor
xor
jne
sub
pop
ja
add
lret
sbb
aas
out
or
push
stos
and
jg
inc
pop
sub
mov
pop
cmp
nop
mov
add
loope
dec
popa
or
push
lds
lock
call
pop
cmp
xor
sti
stos
ss
xchg
arpl
adc
sbb
or
sub
jb
clc
fsubrs
sahf
mov
pop
addr16
rclb
xor
jne
mov
xor
ds
dec
inc
aam
sahf
push
xor
mov
or
mov
adcb
jae
adc
mov
jmp
enter
mov
sbb
in
push
add
test
imul
dec
add
addr16
and
lds
cmp
sti
dec
insb
jo
std
xor
std
mov
in
dec
nop
int3
mov
xchg
sub
icebp
addl
sbb
pop
pop
xchg
hlt
inc
jns
lods
fisttpl
inc
int
push
pop
test
add
lret
xchg
push
sti
add
iret
sahf
jb
dec
lods
dec
mov
jmp
mov
xchg
in
insl
shlb
aad
outsl
cmp
gs
sub
aas
pop
jo
cli
jecxz
call
cli
xchg
filds
mov
push
jno
lret
je
sub
pusha
nop
adc
inc
into
mov
test
add
daa
mov
mov
shrb
pop
mov
sarl
insl
cmp
mulb
adc
insb
push
jecxz
adc
aas
loop
aas
xchg
mov
fisubrs
mov
mov
mov
mov
jno
xor
push
and
push
jb
lahf
adc
push
cmp
daa
pushw
dec
or
adc
jbe
xchg
mov
std
fldcw
dec
dec
iret
mov
inc
insb
popf
rol
pop
and
xchg
aaa
pusha
bound
or
ret
mov
daa
fimuls
addr16
add
adc
push
cmp
jbe
in
add
shrl
inc
stc
arpl
adc
mov
nop
enter
xor
loop
xor
jo
push
push
adc
test
sbb
sub
fildl
cmp
pop
movsb
xlat
xchg
push
xor
cmc
imul
shll
shrl
push
popf
in
push
add
repnz
mov
dec
mov
subb
jecxz
sub
or
xchg
and
sub
push
xchg
adc
mov
cmp
insb
test
mov
push
cld
lds
test
loopne
push
fs
imul
add
adc
cli
xchg
jg
mov
mov
push
xchg
fcoml
in
cltd
lcall
mov
iret
test
xchg
call
and
mov
call
stos
add
and
push
loope
out
or
mov
or
jb
sub
mov
in
or
cmp
lret
push
fcmove
xor
rep
push
aad
push
xchg
xchg
js
dec
pop
pop
fstl
mov
aaa
or
orl
out
dec
mov
mov
clc
ds
cld
addr16
add
rcrb
sub
fildl
push
repz
cmp
cmp
es
ffreep
cmc
int3
dec
sbb
push
je
xchg
fcomps
mov
mov
xor
pop
mov
bound
sub
pop
jbe
sbb
clc
xchg
punpckhbw
in
cmp
popf
ficompl
ret
in
clc
pop
insl
mov
nop
mov
mov
and
dec
cli
fstpl
jmp
mov
aaa
mov
arpl
test
rclb
xor
inc
je,pn
aas
js
adc
fdivs
lods
push
push
mov
dec
das
jl
fincstp
pop
add
jno
mov
pushf
jecxz
ja
lret
stos
clc
enter
lahf
adc
cmp
inc
mov
scas
pop
imul
inc
xor
repz
mov
into
sti
popf
cmpb
sub
std
push
fdiv
sub
stos
lock
or
mov
or
jg
cli
loope
aam
xorl
sub
mov
pop
mov
xchg
pop
mov
push
fisubrl
and
subl
pushf
bound
jno
sbbb
dec
arpl
out
fcmovb
out
imul
mov
or
fwait
in
es
es
cmc
adc
jg
sbb
aas
jge
in
rcl
fs
insb
lods
icebp
stc
cmp
and
add
adc
cmpsl
mov
mov
das
adc
jl
mov
mov
jbe
and
aam
push
lcall
in
inc
xor
lock
cmp
lret
push
lock
jp
mov
push
sub
jl
js
rep
dec
and
out
pusha
adc
inc
clc
loope
test
inc
imul
sbbb
mov
jno
hlt
lods
jo
mov
out
sub
mov
les
pop
xchg
push
and
xchg
fmuls
loop
outsl
pop
shlb
push
dec
add
dec
mov
lds
jmp
push
scas
testb
mov
cld
add
cmp
jg
imul
add
add
outsl
clc
loopne
divl
test
push
and
jo
xor
push
pop
mov
cmp
push
sub
pop
pop
push
bound
inc
addr16
idivb
faddl
mov
je
cwtl
inc
cmp
enterw
fs
mov
int3
pushf
and
adc
icebp
jo
pop
or
stos
movsl
les
out
mov
lds
lea
in
xchg
sbb
int
xor
mov
jne
mov
scas
sti
sbb
icebp
cli
aad
sub
mov
fldt
aad
out
add
mov
cmc
ffree
cmpsl
scas
mov
mov
cmpl
test
cmp
cmp
jecxz
dec
cmp
adc
es
imul
jns
mov
rorl
adcb
or
cltd
test
hlt
push
dec
les
adc
mov
inc
xlat
mov
dec
loope,pn
xchg
dec
xchg
dec
or
cmp
outsl
xor
in
xchg
xor
nop
stc
in
lods
shrb
mov
inc
bound
jle
in
inc
add
mov
push
mov
xchg
xor
push
mov
sbb
cmpsb
xor
pop
mov
push
mov
push
sbb
jp
xchg
mov
sub
scas
ja
test
cld
or
in
pusha
ret
fcmovnu
das
push
xor
fbstp
mov
xchg
out
loopne
out
push
pop
pop
test
mov
leave
arpl
xor
mov
mov
mov
jmp
les
push
xchg
and
add
cltd
aaa
das
movsl
xchg
pop
jl
sbb
std
shr
xchg
inc
cs
pushf
cmpsl
add
lret
in
and
fdivrs
sahf
loop,pn
or
sbb
popa
pop
in
mov
loop
inc
stos
testb
rcl
mov
int
sub
jmp
adc
inc
inc
out
inc
roll
orb
xchg
neg
ja
in
sbb
pop
adc
or
sub
push
cmp
nop
repz
dec
jg
and
pop
or
or
nop
mov
ror
and
aad
inc
or
inc
xchg
sub
sub
pop
add
pop
xor
cmpsb
loop
mov
mov
cmp
addr16
mov
push
adc
dec
push
dec
pop
in
imul
mov
mov
or
or
mov
pop
mov
dec
adc
test
iret
ss
and
popa
pop
gs
lea
icebp
std
mov
mov
xlat
push
add
adc
mov
icebp
push
xor
dec
pop
aaa
aaa
mov
mov
mov
fs
dec
sbb
adc
mov
or
sbb
lds
mov
mov
jl
jbe
jbe
icebp
mov
insl
ja
fisubrl
or
push
popf
dec
xchg
inc
xor
adc
mov
mov
cmp
adc
dec
push
dec
adc
scas
xchg
xor
popl
ja
mov
es
pusha
sbb
je
insb
or
call
add
push
xor
ljmp
push
pavgw
out
mov
imul
push
in
sbb
jbe
inc
xchg
and
subb
xlat
lods
and
xchg
jno
rorl
loopne
aad
jb
mov
pop
or
push
lea
adcb
mov
sar
pop
sbb
or
mov
xchg
lahf
sbb
mov
ret
call
inc
xchg
xchg
mov
dec
and
push
push
or
inc
pop
neg
jne
out
loop
lret
addl
jge
stos
out
nop
or
add
daa
push
out
mov
jbe
mov
push
fildll
sub
dec
imul
lock
sti
mov
mov
inc
or
jo
shrb
mulb
std
xor
jno
andb
shlb
xchg
mov
gs
and
test
xor
jge
dec
fisubrs
pop
cld
mov
repz
stos
loope
cmp
into
sub
dec
divl
sahf
mov
cwtl
int
add
or
pop
stos
xor
sbb
js
inc
cltd
push
scas
add
mov
ljmp
and
lods
pop
rcrb
imull
dec
mov
pop
int3
jle
jg
push
leave
shl
jns
test
lea
aas
fcompl
mov
lods
mov
mov
in
arpl
jae
mov
shll
xchg
repz
push
mov
xchg
adc
int
and
cli
mov
mov
inc
mov
xchg
jns
aas
outsb
dec
outsb
shlb
xor
dec
into
sbb
out
loopne
pop
push
push
pop
lret
mov
andl
out
and
add
or
adc
sbb
enter
jns
bound
fidivl
nop
ja
dec
xchg
mov
out
mov
dec
jge
out
push
imul
addl
in
je
add
push
sbb
ss
push
push
inc
sub
ljmp
or
mov
and
jne
and
sub
pusha
sti
pop
imul
xchg
imul
loop
sbb
pusha
mov
pop
test
iret
xchg
loope
pushf
mov
aad
jg
sub
pop
fdivs
mov
pop
xor
cmp
faddl
stos
loop
jmp
int
fwait
sub
sti
sub
mov
imul
gs
test
cmp
mov
add
dec
fcmovne
cs
pop
sub
js
pop
inc
dec
cltd
ficoml
sbb
scas
pushf
orb
and
int
push
cld
pop
mov
mov
xchg
incl
jge
outsl
es
push
pop
xor
es
pop
mov
stos
lret
rcr
or
popa
movsb
loopne
mov
test
cmp
shll
aaa
sub
leave
fnstenv
cmpb
push
sbb
fcomp
cmp
pop
push
adc
div
and
ud2
inc
shrl
fucomp
inc
jne
inc
addb
mov
sub
sbb
iret
popa
nop
mov
inc
push
jo
adc
pop
xor
pushf
sbb
inc
and
addr16
jmp
fwait
and
xchg
mov
mov
push
jo
leave
out
sub
mov
mov
loopne
cmp
pop
xor
test
fsubrs
push
sbb
out
hlt
mov
repz
xor
imul
sub
cld
cmp
inc
jmp
stos
xchg
arpl
test
mov
cli
aaa
lcall
lods
pop
addr16
out
mov
aas
mov
push
adc
out
out
out
adc
int3
mov
and
icebp
sub
popf
add
idiv
out
and
dec
test
je
mov
mov
mov
push
data16
cmpsl
mov
ret
xlat
leave
popa
fcmovb
mov
xchg
clc
sbb
or
mov
sub
pop
cld
lds
pop
mov
inc
mov
xlat
imulb
sub
jb
aaa
lahf
xchg
lock
fsincos
xchg
inc
ljmp
in
fcmove
in
mov
pop
inc
lods
out
or
mov
lcall
cld
jp
or
xlat
pop
popf
and
pop
xor
popa
push
fsubr
je
out
jns
mov
fucomip
mov
ds
mov
fldcw
jno
or
icebp
shll
fiadds
pop
add
adc
pop
mov
leave
push
pop
pop
mov
or
mov
cli
mov
adc
xchg
stc
jg
push
shll
jne
inc
outsl
pop
inc
mov
movd
sub
xchg
lcall
popf
arpl
arpl
xor
stos
call
lods
and
insb
loope
add
dec
std
or
sbb
lds
gs
sar
push
sub
or
mov
cmp
cmpsl
leave
mov
sbb
fwait
cs
xchg
push
dec
mov
mov
sahf
sbb
dec
push
aaa
sbb
int3
cmp
clc
in
cli
jae
or
mov
or
jp
in
rcl
pop
mov
mov
ffreep
imul
sub
repz
add
push
je
pop
add
pop
fcmovu
pop
enter
and
inc
or
mov
movsb
dec
leave
sti
negb
out
fstps
mov
ss
inc
jg
add
popf
cwtl
mov
stos
mov
into
sti
xchg
push
scas
or
repz
and
jne
cmp
idivl
sbb
roll
arpl
hlt
push
nop
scas
push
xchg
pop
int
mov
shlb
dec
inc
xor
in
xchg
mov
lods
shrb
sub
out
or
test
fwait
shl
ds
mov
leave
mov
or
xchg
sbb
xchg
icebp
shr
dec
jbe
mov
subl
loope
mov
test
jle,pt
leave
or
repz
std
nop
mov
iret
in
mov
add
cmpsb
jns
icebp
adc
xor
je
jmp
gs
inc
push
lcall
mov
subb
divb
push
cli
pop
insb
lea
sbb
add
mov
push
adc
mov
xor
jns
or
xchg
ljmp
and
push
mov
push
push
and
sub
faddl
mov
inc
adc
aam
testb
sub
xchg
lods
out
pop
or
movsb
out
fcoml
icebp
cwtl
lahf
cmp
je
addr16
xchg
pop
mov
nop
outsl
xlat
shlb
sbb
testl
pop
mov
jecxz
mov
push
or
arpl
mov
xchg
or
adc
scas
pushf
or
cmpsl
jge
in
mov
dec
sub
push
jae
sub
sub
movsl
push
hlt
and
add
ss
xchg
xor
pop
ja
loop
push
shrb
int
sarb
sbb
and
pop
repnz
pop
sub
jecxz
jae
loopne
scas
push
inc
adc
ds
inc
les
push
xor
lds
decb
sub
jge
fldenv
rclb
sub
leave
cmp
pop
sbb
enter
pminsw
sahf
or
lret
sarl
loope
movl
add
cmp
mov
lcall
adc
cmpsl
hlt
sbb
inc
mov
icebp
sbb
inc
fpatan
mov
sub
stc
fimuls
adc
fldcw
ss
lret
cmp
sub
clc
sub
xor
sarl
add
adc
add
push
mov
pop
insl
imul
in
adc
clc
push
jnp
fidivrl
and
bound
pop
cmp
loope
roll
mov
addl
aad
mov
lahf
mov
xor
add
out
divl
push
sub
fcmovne
or
or
jle
or
push
hlt
lea
xchg
test
dec
arpl
push
add
or
stos
lret
mov
mov
sbb
in
addr16
pop
outsl
sahf
mov
dec
mov
push
int
xlat
popa
cmpl
push
int
jle
mov
mov
push
mov
dec
shll
push
dec
xchg
mov
cmp
sub
popf
lock
mov
mov
test
pop
mov
push
imul
rcl
inc
shll
jno
mov
fwait
cmpsl
bound
adc
xchg
fcomp
mov
nop
dec
cld
lret
cmp
push
divb
imul
sub
and
fists
std
jp
sbb
ljmp
fistpll
and
mov
pop
inc
aad
sub
sbb
in
jp
adc
and
shl
push
mov
ljmp
add
jp
dec
stos
inc
fisubs
jnp
inc
adc
xor
mov
lods
or
insl
cli
enter
popa
jae
aaa
popf
sub
in
test
jle
cmpsb
inc
dec
jl
test
rcrl
dec
js
ljmp
add
push
test
add
movsb
jg
inc
pop
dec
pop
inc
outsl
out
das
mov
pop
push
mov
icebp
movsl
pop
xor
jne
in
add
dec
and
sub
fdivrl
lret
out
loope
mov
jb
pop
lret
or
cmp
ds
pop
sub
and
movl
cs
sahf
in
mov
js
push
fisttpl
arpl
dec
les
cmp
push
loope
xchg
cmc
dec
push
adc
add
outsl
movsb
pop
pusha
leave
movb
jp
cmp
push
or
mov
mov
inc
pop
leave
cmp
cltd
sahf
fisubrl
adc
xchg
dec
pushf
sub
enter
adc
fisttpll
mov
jae
push
mov
xchg
pop
dec
xchg
or
bound
pop
mov
or
sub
fdivr
enter
jl
pop
sub
mov
insl
enter
and
cmp
sub
lods
add
insb
adc
into
xlat
lea
mov
fsubrp
push
shrl
mov
fldenv
and
push
push
in
jb
pop
es
cmp
push
addr16
inc
stos
inc
jo
ljmp
aad
cld
xor
push
cmp
dec
fsubs
push
ret
jne
sub
add
pop
fstps
push
vcvtsd2si
iret
mov
data16
sub
xchg
fs
xchg
aam
aas
add
mov
aad
mov
cmpsl
lahf
mov
outsl
sub
or
cmp
pop
xor
nop
push
jo
aas
pop
sbb
sbb
jle
xchg
bound
fcoml
and
lahf
data16
pop
daa
js
or
in
std
dec
into
lcall
adc
jb
jnp
dec
adc
dec
cmp
fs
out
jbe
and
arpl
inc
repz
inc
jnp
push
cmp
stos
adc
call
and
cmp
and
cs
pop
mov
mov
imul
js
sub
pop
lea
jp
loop
cmp
xchg
xchg
rorb
out
cltd
or
in
jmp
scas
fs
movntq
out
repz
shr
mov
cmpb
repnz
stos
lret
stos
scas
push
push
loopne
jb
mov
jnp
test
std
adc
in
cmpsb
sarl
out
stc
lret
jbe
and
adc
xchg
mov
dec
lret
lret
push
mov
repz
inc
jb
jmp
dec
inc
ss
cmp
lods
jae
add
lds
mov
jns
dec
pushf
jmp
in
sahf
pushf
movsb
and
sub
lcall
loop
push
outsb
mov
mov
es
mov
das
cmpsl
push
lret
insb
inc
inc
bnd
cmp
dec
jmp
and
push
pusha
jmp
mov
sub
scas
pop
jmp
cmpsl
jbe
sti
push
inc
or
gs
mov
add
lret
inc
adc
jno
mov
pop
adc
popf
xchg
xchg
push
xchg
mov
pop
std
mov
jle
cltd
pop
jne
jecxz
mov
push
xchg
push
sbbb
mov
ret
ficompl
nop
addb
inc
mov
jg
push
or
dec
movsl
mov
ret
leave
pop
es
into
pop
push
push
xchg
leave
mov
andl
sub
shlb
jge
arpl
js
adc
test
dec
push
push
sub
xor
mov
pop
fnstcw
xchg
test
call
insl
pop
flds
jno,pt
es
push
and
pop
pop
ljmp
inc
push
jge
sbb
mov
dec
imul
pop
cmp
lcall
jo
mov
cmp
scas
xchg
xchg
leave
inc
cmp
push
repnz
jne
mov
mov
incl
clc
push
mov
dec
mov
xor
dec
pop
xor
dec
in
mov
pop
cwtl
cmc
loopne
movsl
jecxz
xchg
sbbl
dec
add
fistps
aad
in
jp
imul
leave
mov
xor
psrlw
lock
dec
pop
lea
inc
adc
cmc
xlat
subb
je
cmc
jo
inc
aas
xor
adc
inc
and
dec
dec
stc
mov
push
cli
sbb
in
cltd
xor
xchg
sbbb
push
sbb
push
int3
std
leave
xlat
test
push
jg
in
rorb
xchg
popa
in
cmc
jns
and
mov
ss
dec
outsl
sbb
lea
dec
rolb
lds
fs
push
inc
pop
cmp
shr
dec
dec
das
jb
xchg
pop
pushf
pushf
inc
addl
stc
std
lea
cli
cmp
ja
or
std
mov
stc
add
mov
in
pop
stos
mov
aad
data16
jnp
push
xchg
push
mov
and
and
push
ds
and
divb
testb
ror
inc
lds
add
fsubs
stos
xchg
jae
and
fwait
sbb
stc
cmp
mov
xlat
movl
or
cmp
xor
add
sub
xor
pop
add
or
mov
into
lock
ds
nop
jo
imul
jbe
and
dec
sub
adc
and
pop
push
rclb
rcl
nop
sbb
xchg
cwtl
xor
pop
push
movsl
pop
pop
and
sahf
mov
adc
ficoms
fbld
xor
mov
insb
cs
iret
mov
mov
pop
enter
idivl
leave
out
stos
and
or
xlat
das
rorb
jmp
aad
adc
cli
xchg
mov
add
dec
subl
inc
mov
roll
inc
test
movaps
jno
int
jg
lods
sbb
pop
inc
add
cmpsl
pop
adc
xchg
inc
mov
jae
setnp
cmp
push
orl
mov
sbb
pop
xchg
es
cmp
js
and
scas
mov
sub
and
mov
xor
sahf
in
dec
xlat
enter
stc
fstl
jo,pt
ss
jecxz
sbb
cmp
outsl
mov
repnz
mov
ret
out
outsl
xchg
xor
push
pop
pop
sbbb
pop
mov
adc
std
imul
popf
outsb
and
pop
icebp
sbb
insl
dec
imul
add
sbbl
or
adc
loopne
test
insl
push
mov
imull
mov
sbbl
mov
jle
scas
dec
dec
fcmovbe
enter
sarl
mov
daa
lret
jle
mov
scas
inc
daa
call
pushf
dec
int
addr16
movsl
sbbl
adc
gs
fdivrs
xchg
imul
popf
je
test
std
add
lahf
loopne
mov
aad
push
mov
sahf
stos
arpl
and
xchg
fdivs
dec
lcall
nop
lcall
mov
subl
sub
inc
xchg
fbld
cmp
aas
or
imul
add
js
fs
add
jle
pop
or
pusha
sbbb
xor
adcl
or
test
rorb
dec
jge
and
inc
sub
aad
xchg
js
pop
hlt
bound
jb
xchg
das
pusha
test
imul
aas
in
jl
imul
in
xor
sbb
push
inc
xor
inc
fbstp
popf
mov
or
sub
push
dec
push
sub
push
or
popa
cmp
clc
rorb
xchg
insb
bound
stc
push
adc
sbb
jmp
mov
mov
xor
lret
mov
mov
test
pop
pop
in
rcrb
inc
dec
je
jle
repz
add
sbb
push
xor
cmp
out
cmp
mov
in
push
iret
js
push
sbb
push
mov
jbe
scas
xchg
cld
popl
inc
aam
pusha
mov
loop
mov
es
cmp
cmc
lcall
repz
and
das
shl
jmp
out
bts
pop
dec
loop
dec
mov
adc
and
and
fucomi
cld
leave
add
decl
ds
idivl
jmp
push
jae
daa
mov
jns
push
mov
outsl
int
pop
shll
das
or
sar
icebp
fs
push
push
popa
cmp
push
ret
test
sbb
notb
scas
fs
jp
call
fimuls
and
out
sbb
lcall
xchg
movsb
in
add
jmp
shrb
sub
test
popa
push
inc
mov
push
mov
scas
sub
mov
sbb
insl
or
adc
jecxz
jmp
mov
xchg
lods
cwtl
and
arpl
jb
cs
pop
inc
mov
aaa
dec
repnz
fadd
movsb
movsb
mov
push
jg
das
xor
push
mov
jmp
shl
outsl
cli
scas
mov
int
add
or
pop
out
jne
or
repnz
pcmpeqd
mov
nop
mov
mov
ds
or
in
sbb
test
test
sahf
push
mov
sbbl
lcall
js
subl
xchg
jne
mov
mov
lods
mov
dec
jmp
adc
push
mov
hlt
xchg
mov
mov
mov
fcoml
cld
dec
mov
push
jl
into
clc
dec
cmp
push
sbb
test
and
aad
sbb
inc
jle
add
add
xchg
js
pop
cld
js
and
or
lret
aad
sbb
les
sbb
sub
fstpl
shlb
repz
adc
push
push
pop
shrb
inc
sti
jnp
add
or
std
and
adc
sbb
jecxz
add
cs
jg
dec
shrb
inc
jmp
and
xorl
mov
xchg
add
mov
xchg
jns
jg
push
shll
pop
lds
subb
xor
in
stos
adc
ss
mov
repnz
jno
in
jle
inc
sarl
push
lahf
loop
mov
and
in
hlt
nop
sub
je
sub
jle
loope
das
int
scas
push
jmp
fcmovb
ret
cmp
jecxz
arpl
fistl
enter
icebp
mov
and
ljmp
les
adc
mov
cmp
push
leave
ljmp
or
xor
mov
push
xor
outsl
pop
ds
mov
mov
and
pop
cs
and
jp
inc
test
jp
adc
mov
xor
es
mov
adc
lcall
mov
out
sub
addr16
int3
in
test
push
rcl
push
loopne
sub
sub
and
cltd
repnz
das
int3
push
jle
push
aad
mov
and
mov
repz
mov
dec
xor
pushl
into
and
ret
out
pop
movsl
xor
pop
loop
clc
jno
decb
mov
mov
cmpsb
mov
pop
sub
enter
fadds
mov
push
cmp
fisttpl
inc
cmpsl
mov
jmp
inc
mov
mov
pop
add
daa
mov
pop
lods
push
sub
cmpsb
negl
popf
aam
sbb
pop
push
push
roll
mov
bnd
jp
mov
mov
mov
xchg
xchg
mov
outsb
dec
mov
and
xchg
je
inc
stc
sbb
pop
inc
inc
addr16
and
stc
cmpsl
les
jae
jl
stos
cwtl
daa
inc
push
adc
xchg
std
or
dec
mov
jl
xorb
aas
sub
push
pop
jmp
xchg
adc
xlat
orl
pop
lcall
cs
pop
xchg
pop
mov
das
inc
mov
xchg
ret
push
sbb
push
push
xchg
insb
mov
cmp
sub
movsl
pop
and
mov
divl
cmp
ret
xchg
es
ljmp
xor
adc
push
sub
cmc
lret
push
fldenv
xor
out
dec
and
shll
cld
mov
into
in
pop
xchg
out
sahf
add
or
cmp
je
sbb
cmp
jg
cmp
push
mov
shrb
and
nop
inc
inc
sub
inc
cmp
daa
adc
rorb
pop
jnp
ljmp
push
scas
lock
push
jle
incb
outsl
aam
jae
repz
sbb
subb
sbb
xor
outsb
mov
lahf
lock
lret
pop
ss
cmp
adc
fdiv
push
rclb
jmp
int3
sub
pop
in
push
imul
stos
sbb
sbb
and
push
jae
dec
daa
pop
aas
insb
lahf
push
lds
adc
gs
nop
pop
mov
cmp
adc
cld
scas
imul
loopne
fs
dec
jle
cmpsb
push
enter
cmp
aad
or
sbb
clc
test
rcll
ss
hlt
cmpsl
pop
pop
test
push
out
fisttpl
movsb
mov
ja
pusha
push
pusha
inc
sbb
inc
jae
scas
clc
ja
cmp
loop
arpl
xchg
loope
jo
fwait
xchg
lcall
cmpb
jnp
out
jns
xchg
loop
jecxz
pop
jmp
call
mov
outsb
push
pop
das
jo
adc
hlt
sbb
adc
pushf
ficoms
jg
movsb
sub
lea
dec
push
rorb
add
cmpsl
hlt
cs
lods
icebp
insl
mov
iret
aaa
sbb
fcomp
cmp
in
sbb
rcr
cmp
dec
hlt
scas
or
cmc
call
imul
xor
inc
test
lahf
cmc
cmp
or
jle
fwait
outsb
jecxz
cld
fdivl
iret
scas
sarl
pop
jb
add
cmp
fnstsw
aaa
mov
insl
dec
stos
mov
pop
add
xchg
mov
pop
in
iret
push
mov
xchg
cld
and
sub
pop
ljmp
mov
pop
push
inc
arpl
inc
xor
mov
jge
or
push
cmp
call
push
cli
stos
xor
icebp
in
addr16
inc
mov
icebp
in
dec
mov
ret
or
js
adc
call
mov
loope
add
in
jb
es
js
mov
out
pop
stos
push
cwtl
in
xchg
adc
or
into
xor
xorb
xlat
enter
dec
mov
mov
call
adc
sub
sbb
or
or
mov
inc
nop
xor
mov
sub
imul
lidtl
andb
mov
ret
in
xor
or
in
add
mov
push
imul
scas
fldt
and
or
ds
call
bound
push
add
into
imul
sub
cli
mov
das
ds
out
push
mov
ficoms
mov
hlt
scas
xor
pop
inc
test
test
mov
mov
aam
out
jge
mov
mov
mov
mov
in
jl
cmp
scas
inc
xchg
xchg
dec
pop
mov
sahf
bound
cmp
sbb
xchg
cltd
dec
clc
inc
add
idivb
dec
fstp
insb
das
jnp
in
cwtl
ja
cmp
jae
xor
fnsetpm(287
xor
lea
push
add
sbb
cmp
mov
aaa
jnp
mov
add
aaa
nop
or
lahf
or
dec
mov
and
lods
adc
mov
and
hlt
xor
stos
outsl
aad
xchg
js
adc
js
jg
sbb
or
mov
push
inc
leave
scas
dec
xor
pop
and
sub
push
repz
in
xor
xchg
jb
insl
rolb
nop
bswap
popf
xor
and
dec
jl
repnz
adc
mov
mov
xchg
notl
hlt
push
stc
adcl
leave
jl
je
sbb
xchg
jmp
pop
xor
mov
lock
nopl
into
outsl
fstl
sub
pop
or
fs
roll
test
jnp
inc
jne
push
repz
lcall
inc
cmc
inc
mov
cmp
movsl
sub
daa
cmpsl
and
rcl
imul
push
adc
or
push
pop
xchg
push
pop
mov
inc
jno
jmp
xor
aaa
add
and
ret
jmp
icebp
icebp
mov
repnz
pop
pop
popa
mov
lcall
jmp
inc
jno
loop
add
ss
and
fdivp
inc
xchg
mov
out
je
cli
popa
imul
push
jp
std
add
mov
add
in
in
push
or
adc
pop
das
aam
jecxz
or
push
dec
stc
stc
mov
jns
imul
xlat
and
mov
cmp
dec
movsl
add
cld
int
add
jns
pop
ja
ss
cmc
cmp
pushf
gs
and
nop
testl
pop
mov
pop
sub
fwait
popf
fwait
arpl
sub
or
push
stos
cmc
cmpsl
pushf
jnp
push
test
ret
loope
test
in
es
jo
sub
loop
mov
and
jo
jns
inc
in
mov
push
lcall
scas
jmp
sub
mov
repnz
push
xchg
fwait
dec
xchg
adc
dec
in
mov
cmpsb
movb
notb
mov
sbb
adc
xchg
mov
adc
cmpsb
imul
adc
pop
jle
mov
sbbl
ret
cmp
out
and
shrl
jmp
push
push
int3
outsb
hlt
insb
iret
fistps
and
mov
add
int
lods
in
sbb
cmp
lds
sbb
neg
pop
add
clc
and
inc
add
fcoml
fmuls
xchg
popa
sub
ja
sub
cmpsl
xor
inc
xchg
loop
and
cmc
rcl
popf
jnp
and
mov
mov
imul
dec
leave
shll
cmpsl
lods
decb
dec
out
in
fs
jnp
mov
push
xor
xchg
lret
jns
aaa
aas
cmp
push
in
test
jne
inc
add
adc
ljmp
add
add
add
into
mov
push
shlb
cmpsl
and
lock
add
xchg
negb
sub
lods
cmp
add
test
cmp
adc
mov
movl
fimull
xchg
jmp
mov
fisubrl
jecxz
xor
lods
pop
or
inc
in
cmp
sbbl
adcl
and
sbb
mov
leave
loop
sbb
xor
push
fnstcw
js
cmp
repz
lret
rol
mov
xchg
fcmovnbe
es
mov
inc
add
adc
cmp
sub
sub
jg
aas
sub
adcb
adc
mov
push
pop
insl
out
sbbl
and
mov
pop
outsb
call
mov
addl
mov
ljmp
adc
dec
fwait
jne
xlat
fs
pop
mov
out
cmp
sub
iret
mov
jnp
insl
add
les
fwait
jno
out
ljmp
mov
jnp
jecxz
cli
sbb
pop
or
cmpsb
out
push
fistpll
adc
dec
cmpl
repnz
negb
mov
xor
mov
mov
cmp
push
push
push
stc
jp
out
or
lods
xchg
iret
inc
in
xorl
xchg
pop
mov
aam
jl
pop
push
jle
jle
sahf
mov
in
enter
fstp
pusha
gs
or
sti
test
or
int
sbb
fadds
cwtl
enter
jle
mov
pop
mov
add
sti
mov
xchg
dec
pop
clc
mov
lret
xchg
or
push
pushf
xor
inc
or
jmp
cld
cmp
out
push
and
push
decb
add
and
stc
leave
adc
insb
jo
out
sarb
add
bnd
xchg
xchg
movsl
mov
xchg
ret
sti
ret
add
xchg
test
cmp
in
inc
std
jmp
pusha
mov
repnz
shrb
movsb
aaa
dec
outsb
xchg
nop
sbb
divb
pop
mov
jb
adc
push
xlat
cmp
dec
dec
jp
in
aam
cltd
imul
aam
fnstcw
imul
sbb
shl
ljmp
xor
es
insl
aam
mov
aaa
hlt
mov
dec
mov
loop
roll
mov
mov
leave
lea
ja
fadds
sub
adc
sub
lods
add
fs
sbb
stc
xor
cmp
rcll
out
fsubs
jnp
mov
or
dec
mov
cmpsl
repz
shr
and
int
aaa
cwtl
pop
xor
cmpsb
fwait
cmp
test
mov
push
jle
xor
fdivrl
mov
mov
pop
out
sbbl
shlb
cmp
adc
daa
dec
mov
fistl
mov
hlt
sbb
adc
xchg
leave
test
lods
mov
cmpb
mov
and
rorl
cmpl
add
dec
inc
add
sub
stos
fcoml
sub
inc
std
pop
out
rorl
mov
movsl
popa
icebp
pop
or
scas
pop
cmp
dec
jle
popa
sbb
mov
rcl
push
pop
rolb
dec
iret
or
xor
sbb
fnstsw
pushf
adc
mov
xchg
push
mov
rcr
vpsubd
mov
mov
jecxz
add
ret
push
ret
sbb
pop
mov
dec
xchg
sub
outsb
cmpsl
lock
aad
jb
lock
jg
push
filds
stc
faddl
mov
arpl
push
and
jno
lahf
pop
mov
aas
or
filds
gs
mov
lea
iret
inc
repz
in
sbbl
xchg
jo
mulb
mov
outsb
mov
ret
jns
xor
pop
xor
lret
fnsave
mov
js
popa
pushf
pop
dec
rcr
xor
sti
bound
xor
sbb
outsb
rcrb
xchg
push
sbb
or
pmaxsw
inc
pop
inc
push
scas
loope
pushf
fs
dec
mov
cmc
jg
dec
or
cmpsb
cmp
xlat
mov
and
jge
cli
rorb
cmpsl
clc
xlat
mov
dec
outsb
push
es
adc
cmc
repz
mov
sbb
jnp
lds
fldt
mov
mov
test
fcmovnb
push
and
icebp
movb
add
mov
xor
mov
js
rol
rorb
lock
cmp
mov
pop
subb
sbb
icebp
sub
cltd
cmpsb
aam
push
shll
dec
je
cmc
mov
mov
push
xchg
sbb
pop
iret
push
test
insl
bnd
push
cli
pop
mov
xor
jmp
or
ss
xor
insl
jno
dec
fisubl
mov
test
hlt
rol
shr
icebp
xchg
push
mov
cmp
mov
sbb
js
lods
mov
lret
stos
and
mov
jle
xlat
ret
cmp
pop
adc
aad
sti
cmp
pop
imul
jns
xchg
mov
mov
imul
test
mov
addb
shrl
xor
sub
sub
lret
jno
sbb
lods
pop
and
jl
pop
mov
shlb
mov
enter
xchg
imul
div
outsl
negl
cmp
rcl
pop
test
loopne
sub
adc
or
mov
inc
mov
jle
sbb
ret
xchg
in
fwait
in
dec
sahf
rcrl
loopne
pop
inc
mov
lret
xchg
mov
xchg
add
sbb
pop
inc
test
adc
dec
mov
fcomps
std
jl
jbe
mov
pusha
pop
in
cmpl
push
xchg
jns
hlt
out
cmp
test
push
mov
dec
adc
mov
cmp
dec
cmpl
or
xor
inc
or
into
jne
lret
lea
out
pop
shll
jno
out
ss
dec
ds
shll
mov
movsb
sbb
push
xchg
xchg
bound
jae
inc
pop
imul
lret
push
addr16
jmp
ficoms
rcll
repz
dec
jae
push
lea
aam
insb
mov
bound
pop
cmp
fiaddl
mov
aad
add
aaa
adc
push
pop
inc
or
dec
lret
daa
xchg
xchg
pop
ret
mov
push
inc
mov
pop
popf
fs
jns
push
mov
fidivrs
cwtl
in
or
mov
mov
mov
add
decb
cmpsl
push
clts
dec
inc
fs
jne
adc
stos
pop
push
mov
mov
fsubs
int
stc
jb
dec
shll
dec
pop
mov
cmp
scas
xor
shll
xchg
call
loope
leave
lods
cld
gs
lret
mov
jb
sbb
fidivl
out
push
es
push
inc
test
ret
mov
js
aaa
je
inc
fcompl
lea
adc
rorl
dec
fistpll
mov
jmp
push
imul
sahf
addb
in
dec
cmc
fstps
pop
mov
jg
push
push
xchg
nop
jle
adc
pop
sahf
mov
push
test
mov
fcmovnb
push
mov
xor
push
daa
notl
idivl
sub
stos
sti
sub
cmc
push
mov
in
lods
and
dec
test
cmp
rcrl
jbe
repnz
negb
int
mov
and
mov
enter
fs
xchg
pop
sbb
rcll
fisubrs
mov
jp
xlat
mov
adc
mov
push
lret
xchg
scas
into
aam
fisttpl
pushf
adc
addr16
mov
pop
mov
mov
or
adc
push
pop
pop
pop
movsb
sbb
pop
jl
lds
adc
adc
mov
xor
and
adc
mov
xchg
sbb
xchg
rcll
sarb
push
imul
out
pusha
in
sti
int3
lahf
arpl
mov
pop
pop
mov
int3
add
repnz
shlb
stos
mov
jae
stos
cmpl
or
push
insl
xchg
push
push
aad
andb
sbb
xor
or
and
jg
loope
lret
rcrb
jle
or
sbb
arpl
and
fadds
sbb
sub
push
js
icebp
mov
arpl
and
test
out
sub
fs
pusha
xchg
rolb
jno
decb
cmp
lcall
and
bound
mov
pop
pop
dec
cwtl
cli
movsl
out
dec
scas
rcll
out
sbb
lret
sbb
testl
adc
xorb
jg
test
push
test
xchg
push
jb
sbb
inc
in
xor
popa
outsb
mov
repz
cmp
and
call
testl
cs
push
mov
sti
xchg
lock
mov
es
lock
cltd
jbe
imul
dec
sbb
cmpsl
sub
jnp
shl
fcmovne
call
shr
sbb
mov
adc
sbb
pop
lea
push
push
addr16
jnp
xor
sub
fsubrs
pop
sbb
pop
pop
bnd
pop
and
cmp
sbb
enter
cmpsb
idivl
and
in
stos
jb
test
jg
pop
xabort
fwait
or
pop
cmp
mov
clc
inc
hlt
movsl
mov
incb
inc
cmpsb
aad
sbb
aas
inc
xchg
inc
test
rol
mov
std
pop
mov
dec
rclb
je
xchg
mov
dec
push
push
outsl
mov
adc
lea
mov
addr16
rolb
add
mov
adc
push
mov
inc
out
inc
in
lcall
test
or
ja
orl
jbe
cmpsb
lods
arpl
aaa
sbb
jmp
jnp
and
adc
sbb
rcll
jmp
int
adc
mov
pop
outsl
mov
fucom
test
dec
jae
aam
add
mov
loop
jno
push
xchg
test
inc
outsb
sub
jmp
mov
imul
xor
pop
add
sbb
xor
xchg
std
fiadds
inc
mov
stos
cli
int
in
outsl
fnstcw
mov
xchg
cmpsb
in
fistl
int
scas
out
mov
mov
jae
in
sub
push
shlb
js
fnstsw
rcrl
adc
cmp
cmp
dec
icebp
mov
pop
cmp
out
xor
sub
mov
test
adc
sub
aam
into
adc
mov
pop
inc
pusha
push
jl
shll
push
nop
ja
jp
and
adc
mov
mov
xchg
jmp
mov
pop
imul
imul
pop
sub
add
cmc
aam
pop
add
sbb
mov
push
or
in
into
inc
popa
mov
xor
mov
adc
hlt
and
xlat
xchg
inc
imulb
int
imul
xchg
and
mov
jae
imul
xchg
cmpsl
adc
dec
or
sahf
and
mov
mov
mov
add
pusha
sbb
adc
xchg
sahf
cmpsl
sbb
mov
push
gs
sarl
inc
inc
lahf
mov
dec
push
mov
pop
push
pusha
in
xchg
loopne
sub
jae
jnp
mov
push
sahf
jbe
mov
test
mov
rcrl
test
dec
lcall
jge
outsb
jmp
lahf
push
insl
fisubrs
negl
imul
adc
fildl
pop
je
fmul
test
int
mov
add
out
scas
fwait
and
add
jp
ljmp
mov
or
ljmp
and
add
sub
addr16
or
and
in
fisubrs
and
push
cld
insl
mov
ds
and
test
mov
je
push
xchg
xor
push
jmp
mov
push
mov
iret
test
sub
xlat
jmp
mov
dec
dec
sbb
and
jle
clc
xor
repz
shl
adc
out
push
pop
out
or
jbe
hlt
repz
xor
pop
and
cmp
dec
lods
mov
dec
pop
push
add
adc
les
aas
fnstsw
dec
xchg
loope
lods
repz
xchg
xchg
sub
loopne
popf
xor
testl
mov
sar
push
sbb
inc
addr16
mov
les
sbb
sub
pop
xor
test
cmp
xor
lods
jo
aas
and
and
sub
inc
pop
adc
aaa
mov
adc
insl
insb
mov
test
xor
mov
jnp
loope
out
sub
pushf
in
pop
cld
cmpsb
and
cld
fwait
push
inc
in
imul
bound
mov
ja
jne
pushf
dec
fcoms
pop
mov
rcrl
fsts
aad
inc
clc
push
inc
push
std
fdivl
je
pop
lods
imul
adc
jg
aaa
sahf
mov
jne
cmp
scas
enter
jno
stc
cltd
repz
jle
mov
or
push
sbb
xor
outsl
push
add
test
out
cld
in
into
sub
into
fbstp
arpl
pop
jp
sbb
jnp
rcr
jge
daa
icebp
dec
push
fidivrs
fistpl
jp
jnp
movsb
loopne
shrb
test
mov
repz
mov
addl
jns
ficomps
pop
std
pop
inc
pop
jns
ljmp
test
inc
pop
les
push
lret
xchg
imul
xbegin
adc
add
dec
mov
je
test
sahf
jmp
in
popa
pop
xchg
lods
clc
addb
sbbl
pop
lock
push
mov
jp
push
mov
push
js
cmp
add
aam
test
sub
lock
adcl
imul
out
dec
or
hlt
push
jp
fbld
jle
test
movsb
arpl
adc
testb
loope
out
out
fs
and
jle
dec
icebp
and
rorl
inc
addr16
ret
fwait
rclb
rorl
out
aaa
sbb
stos
xchg
scas
mov
mov
lock
mov
adc
js
pop
mov
in
in
push
add
dec
in
inc
cwtl
test
lods
clc
cmp
repz
push
add
mov
cld
jb
inc
jl
mov
inc
sahf
ret
jo
aas
pop
hlt
in
pop
or
pop
mov
pop
dec
lret
xor
cltd
lods
xor
mov
daa
push
fistl
ds
pop
push
xchg
xchg
adc
repz
sub
sbb
and
adc
sbb
sti
sbb
fisubl
or
xchg
jno
mov
cwtl
movsl
pop
sub
mov
rolb
or
and
lods
scas
lods
fwait
mov
ficoms
cs
jb
lods
push
mov
pop
dec
mov
fs
out
imul
cmp
sub
mov
jp
stos
je
imul
lahf
jmp
scas
addr16
lea
push
rol
cmp
pop
mov
popa
and
cmp
xchg
sbb
fisttpl
and
cmc
adcb
ret
cmp
push
xchg
adc
leave
adc
and
ret
fisubrs
clc
int3
xchg
notb
inc
jle
imul
or
mov
fcoml
push
xlat
int3
or
lds
push
imul
inc
sub
mov
mov
inc
popf
sub
lahf
dec
mov
shrb
test
mov
sahf
cs
adc
inc
xchg
enter
push
movsl
sbb
addr16
push
or
test
adcb
mov
xchg
mov
fisubrs
notb
add
xchg
out
ljmp
or
inc
in
inc
jae
loopne
mov
pop
sbb
pop
sbb
dec
in
setg
lods
inc
ja
imul
mov
out
mov
sbb
cmc
nop
add
mov
xor
andl
loope
cmp
jno
mov
int3
outsl
add
mov
adc
sbb
pusha
shl
mov
dec
jo
imul
push
jmp
mov
push
xchg
and
pop
out
cmp
dec
inc
mov
lods
out
push
xchg
int
dec
iret
imul
lret
xchg
cs
daa
xchg
popf
stc
pushf
shlb
xchg
unpckhps
mov
les
or
jl
mov
call
ret
xchg
xor
out
mov
arpl
xor
fwait
add
xorb
hlt
xor
shr
cmpsb
sub
enter
and
xchg
inc
test
bound
int3
or
mull
bound
xor
inc
movsl
jp
and
out
adc
add
out
cmp
movsl
cmp
pop
bound
outsl
xor
lret
jge
faddp
and
into
cmp
sbb
ret
jo
pop
push
fs
xchg
dec
pop
mov
sbb
mov
jb
lods
outsl
add
aaa
cld
cli
into
insb
add
mov
adc
stc
fstpt
adc
sub
imul
jo
xchg
test
pop
out
push
adc
clc
in
or
movsb
adc
dec
sub
fisttpl
lret
dec
and
mov
sub
fdivrl
sbb
shlb
xchg
pushf
in
inc
out
bswap
xchg
loopne
loop
fwait
jg
add
push
mov
sub
cmpsb
inc
pusha
popa
inc
repnz
add
gs
mull
repnz
leave
dec
xor
imul
xor
nop
sarl
js
mov
inc
xchg
lods
push
ja
mov
pop
adc
cs
mov
imul
stos
cld
add
push
leave
add
jno
inc
push
clc
dec
inc
popa
lret
and
mov
adc
out
pop
jno
xor
adc
shl
add
xchg
jge
imul
sub
mov
inc
out
outsb
jg
and
gs
lcall
lea
inc
mov
insb
sbb
iret
sbb
arpl
mov
rcrl
mov
xchg
jo
dec
xor
cmp
dec
lds
mov
loopne
mov
fildll
pop
popa
push
or
stos
ficoms
dec
sbbl
jl
xor
adc
out
adc
cmp
jmp
testl
fnstcw
outsb
ds
sysret
ds
mov
jle
sbb
int
add
mov
cmp
pop
sub
jbe
les
xchg
mov
js
mov
xchg
or
inc
mov
or
xchg
inc
push
add
inc
pop
in
lahf
push
cs
gs
stos
dec
loopne
push
cld
push
jnp
insl
xchg
aam
adc
pop
push
add
xchg
mov
addr16
mov
fcompl
lock
aad
fldenv
jl
add
rclb
movsl
xlat
mov
mov
cwtl
push
fs
lock
test
pop
sbb
cmc
aam
lock
inc
cltd
lahf
dec
test
push
cmp
xlat
in
sbb
push
mov
lods
lahf
sti
sahf
jge
or
cwtl
mov
push
cmpsl
push
sbb
out
jmp
lock
shl
cmpsb
mov
sbb
mov
sub
jo
inc
in
cmp
xchg
xor
in
out
scas
inc
ljmp
mov
sub
call
scas
inc
sbb
or
in
dec
rolb
dec
or
aaa
add
cmp
push
popa
outsb
inc
xchg
aaa
cmc
daa
out
mov
cmovle
mov
push
cmp
push
sub
jns
jns
ret
aad
addr16
es
xchg
popa
enter
and
lcall
cmp
or
push
fcompl
fistpll
cli
inc
cwtl
mov
nop
mov
das
dec
adc
sarl
mov
mov
and
leave
int3
lods
or
arpl
push
rorl
mov
sbb
or
push
mov
pop
push
add
xchg
out
mov
xchg
mov
inc
movsb
pop
lret
mov
leave
xor
xlat
rolb
out
mov
mov
outsl
ret
repz
sub
scas
jg
out
xlat
cmp
xor
push
leave
orl
and
cwtl
arpl
in
mov
inc
sarl
out
loope
mov
mov
xor
lea
arpl
push
mov
cmpsb
jg
xorb
sbb
mov
cmpps
ret
adc
add
dec
and
mov
cmp
xchg
rcl
cli
ret
sub
mov
pop
gs
dec
std
in
test
je
jmp
fs
stc
movsb
jmp
ja
addr16
lock
rcll
insl
push
clc
jg
sub
jg
sbb
out
adc
stos
fs
in
ds
lea
test
icebp
ret
xchg
add
imul
jl
imul
loope
cmp
xchg
pmaxsw
mov
leave
iret
scas
cmc
push
adc
add
pop
icebp
ficoms
xchg
pop
cld
int3
sbb
mov
fmuls
inc
and
fstl
and
xchg
mov
inc
sbb
push
out
xlat
or
mov
adc
xchg
fucom
rol
pop
mov
mov
cld
push
or
inc
testl
cmpsl
jae
pop
lods
call
test
notb
inc
mov
push
aam
es
popf
insb
sbb
mov
inc
mov
jg
inc
std
fstl
add
cmp
xorl
ljmp
aaa
push
adc
xor
repz
fcoms
push
mov
call
neg
inc
fwait
cmp
mov
lcall
add
inc
xor
lret
cmp
push
subl
sti
test
daa
sti
shll
fsubrl
pop
das
dec
insb
sbbb
sub
cs
sti
rcrl
fwait
outsl
add
ffree
mov
add
sbb
ljmp
jo
sub
mov
cmpsl
xor
fcomp
cmp
stos
xchg
pop
push
cli
inc
das
cmp
repz
sub
jle
push
xchg
push
test
or
xchg
xor
or
push
sti
int3
fidivrl
in
popa
inc
popf
sbb
cmc
lret
test
idiv
xor
das
add
jns
hlt
int
pop
add
dec
jmp
aad
pop
in
adc
xchg
adc
outsl
add
shlb
xchg
and
out
sbb
pop
xorl
jno
orb
sub
and
pop
push
or
int
or
leave
into
jne
lret
push
or
jno
dec
outsb
adc
mov
push
cli
inc
sarb
mov
mov
jno
das
scas
scas
ljmp
loopne
xchg
ljmp
jp
stos
cltd
faddl
cmp
fst
mov
push
sbb
mov
sub
lahf
imul
loopne
lods
mov
out
mov
mov
in
sub
xchg
cs
sbb
inc
divl
int
jle
movsb
mov
outsl
ret
push
cmpsl
mov
mov
repnz
scas
inc
push
dec
fcompl
adc
flds
ficoms
adcb
pop
loopne
inc
pop
mov
sbb
xchg
fcoms
mov
mov
js
out
or
xor
div
dec
adc
xor
fstps
addr16
scas
inc
out
dec
negl
je
outsl
sbb
jno
mov
push
sub
loope
xlat
sbb
dec
bound
and
std
dec
movsb
mov
adc
dec
test
les
adc
mov
les
mov
cmp
jae
jno
aas
sub
fwait
or
sbb
push
inc
pop
shrb
push
adc
pusha
cmp
scas
push
pop
push
or
test
rorb
imul
mov
call
push
jle
daa
xchg
das
fcoml
ljmp
sbb
pop
dec
cmpsl
xchg
lods
push
iret
ret
pop
insb
out
out
add
push
ficompl
add
push
arpl
das
xlat
and
xorb
xchg
adc
sub
mov
mov
xchg
xlat
ds
inc
mov
js
sbb
test
push
sub
xchg
dec
popf
das
xchg
sub
mov
jne
test
iret
stos
int
sahf
pop
pop
mov
fistpl
add
clc
and
mov
shll
stos
out
adc
aam
loope
or
aaa
sub
lock
push
ja
mov
loop
jb
in
mov
pop
cmc
or
mov
popf
rorb
movd
lds
cld
mov
mov
mov
popf
cld
addr16
fcmovb
subb
rcrb
es
fidivs
inc
push
fnstsw
mov
dec
aam
inc
push
cmpsb
inc
test
stc
test
test
pop
leave
or
mov
mov
stc
pop
jmp
or
xor
movsb
dec
cmpsb
rcrl
stc
cmp
out
push
fiaddl
add
repnz
fs
xchg
inc
clc
xchg
inc
enter
std
in
fistpl
orb
cmc
jno
mov
fmul
mov
mov
mov
push
sbb
mov
mov
mov
jns
xor
ret
inc
aas
pop
mov
cltd
push
xchg
lret
inc
loop
mov
adc
or
insb
pop
adc
int3
jo
daa
and
hlt
lahf
jnp
in
mov
mov
jmp
test
popa
mov
test
cwtl
mov
fidivs
sti
cmp
dec
adc
sbb
out
into
repnz
mov
dec
ljmp
pop
push
fimull
movsl
ljmp
push
loop
mov
or
dec
xor
test
or
aam
lret
rorb
sahf
movsl
iret
je
mov
mov
mov
aaa
in
cmp
add
testb
adc
inc
push
pop
sahf
addb
in
daa
xlat
stc
sub
fcoms
xor
or
f2xm1
push
sbb
jne
sub
mov
or
lds
div
pop
lret
add
in
mov
mov
mov
mov
sahf
and
fcoml
imul
and
add
enter
das
sub
cs
pop
cmc
stos
loope
cmpsl
sti
test
iret
ret
jecxz
or
fbld
cmp
pusha
lcall
pop
sbb
in
mov
dec
mov
or
push
cmc
jge
adcl
ja
adc
ja
and
and
mov
std
jl
jno
out
push
icebp
cmpsl
jl
loop
jb
ljmp
mov
xchg
inc
sbb
and
test
mov
inc
xchg
sub
fsubl
in
lret
addr16
mov
jne
popf
aad
xchg
mov
es
pop
push
scas
les
xor
xor
pop
inc
insb
xchg
cmp
jno
out
scas
cmp
jbe
ret
jns
push
mov
ret
adc
imul
mov
cmp
addr16
int3
sbb
idivl
lret
lock
ret
mov
xor
shr
in
out
inc
outsl
jne
mov
cmp
xor
push
pop
sahf
ret
cmc
ret
add
fnstenv
ret
xlat
stc
jecxz
int
fdivs
or
push
or
fldcw
fstpt
adc
add
addr16
pop
push
fldenv
mov
mov
jmp
ficompl
lahf
out
pop
jp
adc
pop
cmp
xchg
push
pop
vmread
cmpsb
mov
dec
mov
push
pop
clc
or
fldcw
dec
in
inc
sbb
arpl
adc
mov
push
clc
insb
lods
cmc
iret
or
and
popa
gs
push
push
imul
cmp
sbb
jns
int3
mov
imul
mov
mov
dec
cmp
xor
cmpsb
adc
pop
movsl
stos
sbb
pop
aad
ret
pop
add
push
jne
mov
lds
rorb
mov
out
mov
orl
ret
je
push
sbb
gs
push
push
pop
call
and
xchg
sbb
jl
push
mov
xorb
push
je
pop
or
dec
ljmp
push
jb
inc
inc
bound
and
and
jp
cmp
xchg
orb
outsb
pop
lea
xchg
sub
mov
repnz
push
jmp
int
int3
fmull
xchg
pop
pop
loop
out
lock
add
lret
into
sub
push
mov
imul
inc
and
lcall
in
jb
mov
imul
outsl
nop
xor
pop
mov
sbb
hlt
push
movsb
and
or
jecxz
jae
cmp
xor
aaa
pop
mov
rolb
mov
mov
sahf
mov
pop
push
cltd
fucom
jl
sub
shrl
data16
xor
gs
adc
js
in
daa
mov
popf
push
and
test
lcall
pop
or
clc
inc
xchg
data16
mov
cwtl
inc
and
pop
bound
movsl
xchg
mov
lahf
push
pop
jne
fmul
out
mov
es
sahf
mov
inc
xchg
and
test
insl
dec
or
xor
shr
out
fs
pop
or
mov
repnz
ret
cmpsb
scas
mov
enter
xchg
ret
mov
stos
or
aad
scas
or
es
push
imul
jp
xor
jbe
push
std
out
push
ja
ficoml
mov
push
orb
dec
loop
ja
add
fs
outsl
mov
movsl
cwtl
cmpsb
jb
aas
ja
inc
push
aad
mov
jp
arpl
insb
mov
pop
push
xchg
stos
adc
sarb
mov
lret
jne
ret
cli
call
mov
xchg
cmp
movsb
lret
mov
dec
test
subl
out
imul
clc
das
lock
enter
inc
movb
scas
fildll
adc
repnz
popf
push
mov
ljmp
xchg
fadd
cltd
lret
jl
pop
in
sarl
lds
icebp
aaa
ljmp
dec
sbb
pop
inc
arpl
cmp
push
dec
cmpl
out
mov
iret
xchg
sbb
icebp
dec
andb
fdivrs
jge
sbb
adc
pop
adc
inc
jle
adc
sti
or
aad
in
mov
insl
inc
inc
fsub
out
push
or
mov
lahf
jno
cli
cmpsl
xchg
hlt
jne
mov
push
add
fadds
jecxz
or
iret
cli
push
popa
jg
mov
mov
pop
nop
sti
sub
sbb
xchg
shrl
inc
pop
jl
in
popa
dec
fistl
push
fsubrl
push
adc
pusha
mov
imul
cmpsl
test
aam
mov
fnstenv
fcomi
cmpsb
fisubs
sub
mov
ja
bnd
fwait
mov
mov
cs
ds
popf
xchg
xchg
cld
in
popf
lock
jno
out
and
js
mov
push
xlat
pop
pushw
or
aad
leave
or
mov
jge
jmp
ljmp
fimuls
addl
repnz
sub
jns
repnz
and
movsl
push
xorl
call
add
dec
pop
dec
dec
scas
cmc
inc
popa
mov
ljmp
xor
iret
jg
sub
sarb
dec
mov
xor
adcb
int
sbb
push
std
cwtl
inc
mov
pop
xor
push
push
repnz
clc
pop
fldt
pop
bound
out
stos
das
out
lea
pop
jge
mov
jno
cmp
pop
hlt
pop
sbb
xor
call
pushf
mov
xchg
and
and
jno
fcomps
icebp
cmp
add
push
xchg
or
ds
pop
push
mov
cmpsb
mov
imulb
in
pop
out
jecxz
jno
inc
dec
cmp
or
and
mov
sub
iret
jbe
jne
xor
and
stc
in
xsha1
cmpsb
mov
outsb
pop
aad
test
sbb
int3
cmp
mov
mov
cmp
std
push
mov
imul
inc
push
cmpsb
cmp
cld
mov
jb
test
cs
inc
aad
ficompl
stos
push
into
std
sbb
divb
xor
adc
cmpsb
cmp
mov
iret
inc
iret
mov
pop
add
push
fcoml
out
dec
or
insb
push
pop
icebp
jbe
fisubrs
arpl
mov
jnp
int3
sub
jbe
dec
cli
cmc
inc
mov
mov
lret
pop
adc
pop
scas
mov
pop
shlb
pop
xchg
arpl
je
mov
adc
jl
sar
sub
jg
push
iret
stos
sti
out
cli
xchg
sub
enter
mov
jno
dec
sbb
xor
lock
pop
mov
xchg
mov
in
leave
dec
ds
fsts
pop
shrb
cmp
and
cmp
comiss
lods
dec
pop
ja
repz
into
movsl
jbe
bound
adc
mov
std
jmp
mov
enter
scas
cmp
stos
and
lds
mov
fldcw
cmp
call
lods
inc
lcall
mov
rcrb
cltd
jge
xor
out
mov
dec
mov
repnz
das
dec
pop
pop
popa
repnz
and
loop
jle
push
sbb
fsubrl
cmc
cmp
iret
imul
ds
jmp
fsubrs
cmc
pop
adc
adc
les
adc
lahf
xchg
lods
rcl
test
inc
and
xchg
and
out
or
fidivl
push
popa
lahf
cmp
inc
jae
sbb
test
sti
xlat
out
mov
iret
ljmp
mov
movsb
das
stc
addl
stc
mov
loope
ret
fcoms
xor
and
cmc
mov
add
jns
mov
mov
mov
loope
inc
sub
aas
mov
scas
pusha
in
jecxz
test
mov
pop
gs
push
vphadduwq
arpl
scas
lds
les
insb
mov
dec
mov
adc
out
fstp
sbb
push
out
cwtl
sbb
es
adc
aam
sbb
faddl
jnp
mov
and
dec
xchg
pop
stos
dec
std
mov
lea
fcmovbe
push
xchg
xchg
mov
xor
dec
jae
xchg
pop
mov
movsl
mov
or
movsl
xchg
insl
jno
and
or
cmp
out
lret
imul
pop
sar
push
jle
and
test
sbb
inc
dec
push
je
sbb
andl
sbb
cmp
push
cltd
lods
dec
xchg
lods
jo
out
orb
xchg
cmp
sbb
add
or
inc
xor
mov
pushf
add
or
sahf
mov
loopne
imul
dec
aam
push
jge
mov
subl
cmp
sbb
sub
testl
mov
in
push
mov
scas
cmp
in
incb
lahf
cwtl
sbbl
subb
loop
sarl
mov
nop
call
jl
adc
out
hlt
push
jae
shlb
pop
push
xchg
mov
mov
dec
xor
jge
les
fsts
hlt
add
bound
dec
push
xorb
dec
mov
cld
addl
lds
pop
xchg
push
inc
sbb
dec
or
cmp
sub
mov
lret
mov
cmp
sbb
or
jne
pop
xchg
in
scas
aaa
stos
cmp
stos
mov
mov
fwait
dec
and
fldl
cmc
pop
fisttpl
push
xchg
pop
sub
mull
popl
jle
outsb
sbb
or
neg
xchg
mov
sub
fwait
cmp
or
repz
add
and
or
hlt
ds
adc
inc
xor
fiaddl
xchg
lret
gs
jo
cmp
sbbl
sub
test
xchg
adc
inc
sbb
dec
and
sbb
movsl
stc
and
xchg
dec
sbb
inc
popf
pop
mov
ret
insb
sub
daa
lret
jmp
lcall
cwtl
sbb
push
mov
rcrl
cmpsb
outsb
call
cmp
lret
inc
jl
mov
pop
mov
fwait
aam
jp
ficoms
mov
xor
cmp
negb
jo
adc
shl
testw
mov
or
mov
fcmovbe
pusha
arpl
cltd
lahf
xlat
sub
ss
imul
lret
push
aam
mov
lds
insl
ret
orb
pop
ss
test
fdivp
jb
pop
xchg
addr16
mov
cmc
cmp
call
jecxz
cmp
lahf
repz
sbb
push
iret
loopne
cmpsl
ds
sarl
ja
sub
mov
mov
popf
push
repz
outsl
dec
je
stc
xchg
add
fadds
loopne
mov
fadds
push
or
push
xchg
aam
cs
mov
test
subb
dec
jmp
add
ds
mov
and
mov
out
mov
enter
sti
mov
data16
mov
sub
negl
fxch
push
ljmp
push
cmpsl
mov
pop
aas
jg
xchg
clc
outsb
mov
popf
pop
cmp
inc
adc
lret
repz
pop
or
cmpsb
mov
orb
shll
pop
push
cmpsb
cltd
xlat
sub
repz
imul
sub
push
mov
mov
jmp
jno
and
sbb
push
xchg
lahf
lods
movsb
es
sti
or
or
adc
fisttpll
mov
add
dec
enter
mov
ljmp
scas
adc
das
sub
push
popf
or
fistl
jecxz
adc
sti
ret
rcrl
ret
pop
out
jbe
pop
stc
mov
push
add
or
stc
ficomps
or
decl
pusha
fisubs
inc
in
mov
cwtl
xchg
xchg
shl
cmp
ss
pop
lahf
filds
jp
out
fucomp
jb
xchg
lret
push
inc
xor
out
aaa
subb
lret
xchg
lea
xchg
repz
push
mov
and
fwait
scas
movsb
jmp
mov
and
mov
cwtl
lret
dec
xor
aaa
mov
testb
lret
sar
cs
popf
jnp
hlt
test
arpl
mov
mov
pop
insb
dec
add
fistl
mov
sbb
scas
adc
sub
jo
xor
dec
pushf
lods
clc
cmp
cmpsb
hlt
or
into
xor
mov
aad
jne
xchg
inc
stos
ds
jbe
cli
or
sub
dec
bound
or
sub
dec
aas
sbb
pop
cltd
mov
push
in
loope
mov
push
or
jecxz
jle
lea
adc
in
insb
test
jae
jg
in
jb
int
scas
push
sti
cmc
and
rorb
enter
inc
sbb
mov
pop
ret
pop
sbbb
or
and
stos
lock
cmc
cmp
bound
ja
mov
sbbl
or
and
lea
test
test
xchg
loop
pop
add
mov
sbb
fisubrl
or
shrl
sbb
push
loope
jge
insl
lcall
loop
arpl
xchg
daa
outsb
pushf
in
and
lret
and
jne
inc
bound
sub
push
sbb
stc
push
enter
sub
mov
ffreep
cmpsb
push
mov
push
insb
jl
mov
int
xchg
push
cmp
mov
lods
gs
mov
xor
testb
je
ja
push
lea
sbb
movaps
push
mov
icebp
cmc
or
out
fists
push
popa
frstor
sub
inc
mov
pop
jnp
push
and
test
mov
xchg
or
rdtsc
inc
scas
xor
mov
and
fcom
and
pop
lcall
fs
aad
pusha
fs
jmp
repz
pushf
cmpsl
dec
cltd
call
pop
add
iret
cmp
mov
fldlg2
imul
movsb
movsb
imul
jl
adc
push
rol
sbb
or
aaa
popl
pop
mov
mov
arpl
adcl
inc
jnp
dec
push
sbb
cmp
loopne
shr
pop
sub
add
xchg
or
repnz
shlb
mov
mov
stos
or
es
cmpsl
aaa
adc
cmp
dec
scas
sbb
adc
jge
in
cmp
fcmovnbe
loopne
push
push
fs
shrb
lods
or
hlt
push
shl
pop
mov
fdivrp
data16
leave
jae
mov
add
leave
in
mov
inc
sub
add
add
push
or
inc
and
into
pop
adcb
mov
or
out
ja
enter
sbb
outsl
sbb
sub
jg
insl
jle
inc
addl
pop
adc
repnz
adc
testl
je
pop
fists
jbe
stos
sub
outsl
push
mov
adc
pop
cltd
cli
rcll
imul
lds
in
inc
mov
ja
je
dec
cmp
mov
roll
xchg
push
xchg
ds
fld
dec
dec
sti
sub
push
cld
ss
aam
fnstenv
mov
sub
push
adc
jmp
mov
call
sub
fisubrs
gs
jo
ret
bound
loopne
sub
imul
ficoml
stos
lock
rcll
or
xchg
ljmp
push
fwait
mov
adc
outsb
orb
test
lock
aad
out
fcom
pop
pop
shrb
xchg
push
push
pop
lret
mov
cmpsl
mov
adc
rcrb
inc
pop
aaa
loop
add
mov
mov
enter
ds
lds
cmpsl
aad
cmp
push
daa
inc
cmp
add
mulb
sub
add
aaa
shr
fisubrs
push
movsb
jp
popf
dec
sbb
xchg
call
jge
dec
sub
cltd
inc
idivb
stos
cmp
ss
cs
mov
pop
pusha
test
aad
xchg
icebp
add
pop
or
loope
cmp
sub
xchg
orb
cmp
fwait
inc
or
repz
popa
fcoml
and
in
leave
insl
int
xchg
mov
jl
sub
les
dec
jl
mov
and
out
call
pop
mov
add
mov
add
ret
pop
mov
and
std
cmp
dec
inc
or
mov
sbb
insb
inc
xor
xchg
dec
movnti
pop
aad
gs
jge
sbb
fisttpll
or
xchg
adc
lahf
hlt
dec
mov
push
jmp
and
mov
cmp
cmpsb
xchg
scas
subl
aam
call
fsts
es
popf
hlt
xchg
fs
iret
add
push
clc
mov
sub
inc
gs
scas
adc
push
stos
mov
or
cmp
lea
test
cmp
jg
add
jbe
or
jo
mov
jno
push
mov
test
xor
mov
jmp
mov
sub
sub
inc
sahf
int3
scas
rcrl
icebp
pop
add
das
movsb
xor
std
sub
pushf
jno
aad
lods
iret
stc
out
jecxz
scas
xlat
out
pop
mov
inc
inc
mov
cmp
ss
fbld
push
jo
jae
les
jge
ja
into
ja
clc
imulb
xor
jo
iret
imulb
lds
push
scas
push
mov
adc
jp
cmpsb
mov
mov
int
adc
fstl
rcl
negl
cli
sub
outsl
outsb
xchg
sbb
mov
icebp
loop
or
or
xor
popa
adc
test
dec
aad
mov
mov
adc
xchg
lcall
test
push
out
popa
pop
xor
scas
mov
test
fdivrl
push
mov
add
not
pop
xchg
adc
test
rcrl
ljmp
fwait
insb
pusha
mov
notb
or
push
aam
or
fwait
lcall
xchg
les
mov
cmp
sahf
inc
outsb
test
xchg
sbb
add
sarl
fidivrl
sbb
cli
mov
mov
movsb
andl
sbb
mov
mov
mov
add
xchg
enter
data16
pop
fisubrs
inc
mov
xor
test
js
lahf
xchg
scas
sbb
icebp
mov
sbb
add
mov
mov
push
je
sub
xor
mov
dec
xlat
adc
test
sti
inc
out
xchg
cmpsb
adc
ret
jbe
xor
push
in
fstps
shl
cmp
sub
movl
repnz
pop
out
adcb
punpckhwd
push
lret
incl
dec
ds
add
flds
addr16
push
aam
xchg
mov
fs
cmp
repnz
subl
and
in
rcr
push
fwait
and
cmpsl
mov
imul
int
cmpsl
sbb
and
stc
mov
inc
xor
nop
pusha
pop
loop
stos
scas
fsubl
cs
dec
out
lock
mov
dec
push
idiv
cld
ret
jnp
cmp
push
push
xchg
sbb
jecxz
insl
fistpl
imul
push
daa
mov
cmc
inc
and
sahf
imul
push
inc
test
mov
jb
sbb
imul
mov
jns
lahf
hlt
and
and
pop
pushf
cmpsl
out
insl
aad
ja
or
mov
sub
mov
xor
mov
lea
dec
ja
and
roll
add
je
xor
xchg
pushl
cmpsl
icebp
icebp
mov
loop
xchg
pop
mov
in
out
dec
push
mov
aas
aad
test
inc
inc
fiaddl
into
popa
ja
or
leave
fiaddl
jne
rorb
into
sbb
push
rcr
call
pop
add
jno
or
and
shlw
push
data16
pushf
test
inc
jg
test
bound
scas
push
cmpsb
insb
mov
movsl
cmc
call
sub
popf
or
adc
xchg
inc
mov
in
mov
fcomps
out
dec
loopne
iret
pop
rorl
dec
inc
dec
test
pop
js,pt
in
test
pop
push
cmp
cmp
mov
add
sub
outsl
gs
xchg
add
repz
jmp
jmp
mov
leave
je
mov
jae
mov
cmc
cmc
jecxz
mov
loope
adc
ret
jg
sub
adc
call
mov
or
push
push
pusha
inc
int3
xor
mov
ficompl
cwtl
leave
mov
pop
nop
adc
daa
pusha
jge
pushf
xor
ljmp
paddb
xor
imul
shl
stos
cltd
mov
jle
add
mov
xchg
lods
pop
cwtl
xorb
iret
sbb
jne
sbb
lods
ja
cld
inc
lret
test
sbb
in
mov
jge
negb
xchg
addr16
adc
repz
mov
mov
jns
add
fsubs
loope
in
test
shrb
in
loop
inc
aaa
dec
fs
push
fistpll
test
xchg
or
push
lret
lcall
and
push
arpl
and
mov
add
lahf
push
into
xchg
inc
cmpsb
outsb
xor
xchg
pushf
mov
pop
add
test
fstpt
xor
mov
pop
mov
push
mov
jae
dec
push
and
mov
call
xor
stos
xor
mov
imul
sub
sarl
add
sbb
inc
and
cmp
or
pop
mov
inc
xchg
push
dec
adc
push
mov
cmpsb
jecxz
or
jbe
mov
pop
jne
bound
lret
addr16
inc
imull
xchg
movsl
insl
pushf
shrl
mov
inc
dec
adc
loopne
popf
mov
mov
jl
lea
mov
push
dec
mov
test
pusha
mov
aam
pop
jno
and
jmp
into
xchg
lock
push
pusha
pop
inc
add
flds
jo
fmuls
dec
stos
jb
pop
imul
mov
js
xchg
sub
cmpsb
inc
nop
push
mov
ja
add
div
xor
sahf
xchg
jge
pop
pop
movsl
jno
incb
int3
mov
lock
das
mov
mov
sbb
mov
cmp
inc
dec
int
cs
insl
push
rol
lret
lods
ss
int
push
sti
and
dec
jle
test
lods
fcomps
jbe
outsb
stc
shl
out
imul
sbbl
pusha
pop
ljmp
mov
out
popf
mov
push
fs
inc
inc
inc
mov
pop
lahf
xchg
mov
outsl
es
or
fwait
insl
mov
sti
fnstsw
mov
xchg
ret
and
jg
fmuls
xlat
pushf
mov
and
out
int
dec
aad
xchg
xchg
mov
outsl
sbb
mov
repz
xchg
cmp
jb
out
inc
adc
dec
and
bound
out
cmc
mov
push
movsl
push
pushf
mov
lcall
push
cmp
adc
pop
mov
dec
icebp
fiaddl
sbbl
std
call
iret
push
rclb
lea
stos
mov
int
jl
int3
stc
inc
dec
loop
push
push
sub
mov
xor
lcall
cmp
shll
mov
mov
jg
xor
clc
test
dec
enter
subl
popa
dec
adc
add
mov
fwait
jmp
pop
repnz
lods
jnp
hlt
ljmp
dec
mov
pushf
push
test
cltd
dec
dec
pop
xor
sub
jle
pop
sti
repz
popf
jmp
aad
out
jns
xchg
sbb
mov
fcoml
daa
subl
mov
lds
mov
int3
subl
inc
outsl
js
in
fadds
and
mov
mov
lods
jb
testl
je
cmp
les
ret
dec
testl
notl
adcb
jno
scas
jns
mov
dec
xchg
ljmp
push
mov
stos
aaa
adc
push
shl
addl
stos
mov
arpl
dec
sub
push
push
sub
mov
mov
cmpb
das
frstor
in
xchg
xor
cltd
std
fpatan
sbb
into
push
into
shlb
mov
or
pop
mov
into
inc
add
pop
dec
clc
adc
data16
lea
jmp
into
dec
mov
lea
mov
push
xchg
pop
lcall
adc
testb
mov
or
add
xor
mov
loopne
push
xchg
mov
ret
inc
mov
lahf
rcrb
arpl
orb
mov
adc
xor
dec
push
fldenv
pop
in
dec
mov
insl
scas
fisubs
fisttpl
call
sbb
sub
in
addl
icebp
dec
lock
pop
mov
je
shrl
add
jecxz
pop
cli
push
pop
and
mov
outsl
pushw
call
ljmp
loope
xacquire
cmp
inc
inc
jmp
pop
imul
pop
jmp
orl
sbb
dec
xchg
mov
push
in
ja
and
pushf
stos
test
dec
mov
pop
push
movsl
or
leave
jne
jae
inc
pop
xchg
dec
out
dec
pop
cltd
jge
in
mov
xchg
ret
mov
xchg
repz
sub
pusha
ret
dec
pop
and
pop
adc
jmp
cmc
ds
cs
push
arpl
mov
adc
and
sbb
mov
xor
pop
adc
mov
iret
cmp
das
in
loopne
xor
stos
int3
adc
gs
mov
add
mov
jecxz
xor
bnd
inc
add
and
jge
lods
mov
xor
icebp
sbb
jl
jbe
fdivs
aaa
mov
int
lea
dec
shll
xor
insl
push
push
pop
pop
lahf
pop
push
fistpl
inc
lock
inc
xchg
add
push
or
xchg
sbb
js
or
jge
jbe
sub
clc
loope
call
jp
mov
jne
mov
xor
subl
sarl
pop
ljmp
lock
ljmp
setns
in
sti
ss
jle
idivb
sbb
shr
lret
pushf
imul
xor
dec
cli
jnp
jge
inc
jo
xor
jecxz
shlb
lds
or
pop
dec
ja
repnz
sub
adc
jo
xor
stos
add
cmc
xchg
cmpb
push
xchg
lds
push
fists
movl
mov
push
out
fisubrl
mov
mov
pushf
mov
scas
sub
aaa
pop
repnz
or
jns
ja
push
sub
cmp
cmpsl
mov
mov
test
insl
sub
xor
icebp
xchg
and
xor
push
jo
cs
xchg
iret
jb
shl
in
xchg
mov
xor
push
jb
xchg
rol
jne
call
or
pop
cmc
pop
push
add
mov
pop
js
add
pop
cld
and
mov
je
sbb
in
gs
adc
sub
icebp
xlat
xor
stos
mov
push
and
add
rcrl
dec
xlat
outsb
adc
adc
push
out
pop
pop
cmp
int3
cs
xor
push
test
das
push
into
mov
mov
sbb
cmc
nop
sub
mov
or
pop
popf
or
mov
stc
or
jmp
gs
ss
js
in
cmpsb
jne
cld
sub
mov
inc
jl
pop
jns
dec
arpl
fs
xchg
and
xchg
cmp
not
adc
sub
imulb
mov
inc
push
add
pop
push
jb
sbb
fwait
mov
cmp
cmc
loop
mov
mov
adc
dec
lahf
sbb
es
xchg
and
sbb
call
xchg
mov
adc
fisubrl
jg
pop
rorl
or
lahf
nop
lcall
xor
lcall
adc
mov
push
mov
int3
dec
leave
sbb
pop
mov
pop
popf
mov
cwtl
jno
mov
cmp
and
push
pop
mov
dec
inc
rcrl
int
shrb
push
xchg
sub
mov
push
add
inc
xor
xchg
or
inc
hlt
lea
mov
into
ljmp
or
pop
cmpsl
adc
dec
fwait
xchg
dec
les
aas
ljmp
dec
pop
enter
mov
or
imul
mov
mov
push
sti
cltd
popf
sbb
lods
add
cmp
in
imul
xchg
loop
mov
dec
or
add
push
int
mov
insl
test
cltd
sbb
push
fstl
enter
movsl
mov
push
sahf
pusha
adc
add
loop
lock
fwait
sub
aaa
inc
outsl
in
adc
lock
iret
cmp
fstps
js
aad
jae
pop
adc
sub
les
sub
xchg
xchg
in
test
pop
aad
lret
cmp
mov
lock
inc
inc
add
loopne
xchg
mov
jecxz
aad
cltd
sbb
sub
lods
mov
mov
sbb
mov
jbe
jle
ret
and
sub
leave
test
adc
lcall
in
jge
mov
sbb
daa
push
inc
imul
fcoml
sub
icebp
pop
jle
pop
leave
imul
faddl
mov
imul
inc
ficoms
pop
dec
cmp
jmp
loope
bound
stc
jbe
nop
stc
xor
enter
pmovmskb
dec
and
arpl
push
mov
cmpsb
shrb
pop
cmc
inc
inc
cli
jge
outsb
ret
lock
push
xor
lret
or
push
icebp
call
xor
or
mov
add
and
call
mov
outsb
movb
dec
or
pop
pop
xor
leave
adc
xchg
in
in
popa
shrl
mov
fldenv
mov
xlat
jle
mov
lea
out
mov
pop
pop
fcmovnbe
in
mov
call
mov
out
test
or
push
dec
cltd
push
ljmp
fldl
test
mov
int3
ds
fiadds
pop
and
icebp
imul
enter
mov
int
inc
lock
sbb
imul
hlt
es
adc
xor
pop
xchg
ja
loope
push
xor
call
push
xchg
sbbl
stos
pop
movsb
jp
lret
xor
dec
orb
mov
sahf
or
add
jl
fcoms
out
or
xchg
out
pop
es
sbb
sub
cwtl
mov
xchg
fsubp
bnd
flds
lcall
and
dec
push
test
test
mov
jle
fwait
in
cld
dec
mov
out
in
or
fdecstp
jne
mov
mov
out
and
add
pop
pop
jmp
mov
popa
loopne
imul
pop
dec
out
push
push
xlat
loopne
lock
pop
add
scas
jmp
jae
dec
loop
inc
mov
fsts
push
add
fimull
sahf
out
sbb
push
add
cli
hlt
cmp
mov
loopne
lret
fstps
orb
push
pop
mov
pop
push
outsl
push
test
mov
fwait
sbb
movsl
xchg
popf
shl
cld
adc
mov
add
iret
leave
stos
sbb
loope
jp
mov
mov
sti
movsl
push
repnz
sub
add
mov
imulb
shll
xchg
cmp
ret
sahf
sub
out
mov
mov
in
fs
and
xchg
or
or
pusha
dec
cmp
jg
daa
jae
repz
cmp
insb
in
jge
push
xchg
adc
adc
jge
in
adc
push
aam
lret
aad
roll
test
lock
add
je
aad
push
aam
ja
xchg
test
sbb
xorb
adc
mov
add
bound
dec
or
mov
dec
xor
sti
les
jmp
sub
push
lock
mov
dec
outsl
popf
out
sbb
push
mov
mov
jl
shl
xchg
cmp
fnstcw
movsb
and
jae
lea
xchg
fnstcw
in
test
addb
cmpsb
cmp
lcall
or
fxch
xor
iret
dec
or
out
sub
jmp
dec
mov
aad
adc
lds
ret
cmp
add
icebp
ljmp
cmp
and
sbb
outsb
inc
nop
jmp
jb
bound
and
mov
lcall
add
xchg
mov
cltd
and
push
push
pop
scas
add
fucomip
inc
jns
pop
in
rol
ret
push
mov
mov
xorb
xchg
sahf
or
jae
fstpt
add
ja
mov
cmp
scas
add
jno
push
nop
mov
cmpsl
lret
inc
arpl
adc
pxor
mov
gs
or
jecxz
cmc
sub
push
sbb
sarl
jge
sarl
movsb
lea
push
mov
rcll
mov
out
or
adc
xor
mov
loope
aas
push
inc
xchg
call
shr
xor
dec
jg
inc
sti
aad
cmp
js
lret
sbb
sti
dec
sub
shl
fmul
pop
bound
lods
cmp
rsqrtps
mov
dec
scas
pop
and
and
dec
nop
and
fidivs
ret
push
or
mov
mov
push
mov
movsb
out
lock
or
call
rclb
lret
ds
icebp
out
xor
inc
andl
and
incb
aas
jge
jle
pop
mov
mov
cmp
sbb
fsubp
xchg
pop
test
popa
in
lret
les
aaa
jmp
pop
dec
daa
adc
loope
cmp
or
sub
nop
cmc
push
dec
fwait
cmc
loopne
push
xorl
pop
cmp
push
cli
clc
add
sub
call
js
pushf
scas
pop
pop
xor
xlat
mov
mov
and
inc
push
call
js
sub
jne
sbb
fwait
cmp
xchg
jns
add
pop
in
fildll
jecxz
das
clc
fidivrs
lods
push
adc
jnp
rol
cltd
in
sti
jo
test
loop
out
xor
pop
xlat
dec
adc
neg
fs
idivb
cltd
cmp
xchg
loope
dec
rolb
dec
mov
icebp
loop
dec
mov
lds
jg
sbb
mov
fcompl
inc
or
aas
mov
fcoml
imul
dec
or
inc
mov
in
mov
push
and
psrld
imul
addl
loope
cmp
sahf
iret
add
cld
out
call
in
dec
cli
jp
popa
adc
cmc
std
sbb
cmpb
mov
rolb
or
pop
xlat
jl
sub
ret
sub
xor
add
lahf
push
mov
cmpsb
imul
jb
pop
loop
sub
ljmp
xchg
mov
jo
cwtl
test
cmc
xchg
mov
add
push
imul
pop
mov
cmp
xor
mov
jns
pop
mov
xchg
lock
mov
sub
adc
jno
inc
mull
arpl
mov
fldt
adc
mov
test
sbb
fwait
sbb
jecxz
test
mov
jno
addr16
stos
add
push
xchg
loopne
mov
loop
mov
sub
icebp
or
aad
hlt
ficoml
push
addr16
dec
cwtl
rcrl
or
push
lock
shld
xor
pop
not
and
loope
xor
pop
out
lods
jmp
stos
ljmp
push
pop
xchg
lcall
xor
testl
cmpsb
push
and
xchg
notb
cmp
aaa
jmp
out
ljmp
dec
lcall
movsl
jb
fwait
out
gs
fs
dec
mov
into
cmp
fcmovbe
leave
jnp
jg
sti
inc
push
jle
mov
pop
jge
or
xchg
scas
inc
inc
mov
and
mov
call
xor
cld
lds
adc
cld
adc
xor
imul
insl
mov
out
in
jb
loopne
testl
jnp
jecxz
jne
sub
inc
jge
dec
pusha
sbb
xchg
sbb
dec
addb
out
scas
rcrb
cltd
jmp
je
jg
xchg
jne
mov
pop
adc
in
or
mov
mov
loopne
int
xor
dec
mov
xchg
mov
cli
outsl
lahf
pop
mov
lods
fnstcw
xchg
jbe
mov
int3
push
xchg
iret
dec
fdivl
fs
sub
mov
lods
jmp
cmp
inc
xor
or
adc
hlt
int3
dec
cmp
pop
mov
pxor
pop
inc
js
xor
sub
jno
subb
mov
adc
add
jae
and
add
push
jnp
pop
pop
fs
pop
add
cmp
jo
xchg
mov
xchg
add
in
ljmp
outsl
add
add
add
scas
or
out
cmp
cmp
and
jecxz
jne
cs
lea
sti
jl
test
ja
sub
pop
xor
push
sub
adc
mov
aaa
push
jns
add
out
cwtl
movsl
mov
in
loop
ljmp
adc
loopne
lock
xor
adcl
sar
xor
sbb
push
loop
jmp
add
add
scas
jno
repnz
faddl
scas
fnsave
lret
mov
jl
dec
xchg
jp
lret
mov
mulb
lods
out
mov
jmp
shufps
mov
push
cmp
xchg
add
cmpsb
scas
scas
xchg
outsl
fistpll
jne
outsl
mov
push
pop
and
xchg
dec
lock
push
xor
dec
nop
in
aad
jg
ss
sahf
daa
add
pop
lcall
out
dec
mov
xor
das
punpckhdq
or
add
adc
push
dec
cmp
pop
pop
xor
jl
mov
mov
jmp
imul
imul
mov
movsb
clc
jne
sahf
out
movl
test
shr
xchg
lret
cld
aad
pop
int
add
sbbl
rorl
pop
ja
test
sub
lea
and
add
inc
cld
int3
jns
cmp
arpl
shl
xor
sarb
dec
sti
or
xchg
mov
jge
mov
enter
mov
jmp
mov
cld
jle
inc
jl
and
and
mov
and
add
cmp
shl
cwtl
scas
cld
stos
clc
test
jne
xor
in
pop
repz
loopne
test
leave
jecxz
cmp
lea
fldenv
es
push
xchg
out
int3
mov
sbb
fisttpl
shrl
adc
out
adc
pop
pcmpgtb
mov
push
cmpsb
js
std
push
ss
mov
add
or
les
stos
cmc
pop
cmpl
cmp
mov
jmp
xchg
jae
pop
fists
fsubrs
insl
ret
movsl
mov
jg
and
pop
cmpl
lea
leave
cld
mov
or
xchg
repz
dec
pop
push
shrb
jo
sbb
or
inc
jno
mov
mov
test
data16
jle
push
hlt
push
out
sahf
or
stos
out
push
cmp
sub
leave
xchg
adc
push
inc
mov
out
sbb
pop
inc
or
mov
lcall
fst
or
fdiv
jp
mov
adc
in
dec
and
ret
out
mov
sbb
mov
fisttpll
adc
std
mov
in
sti
sahf
mov
cmpsb
jo
pushf
into
mov
mov
push
xchg
lcall
mov
mov
jbe
popa
adcl
inc
jno
and
stos
mov
fadds
hlt
ljmp
sti
lahf
fucomi
and
xchg
add
shl
xor
shl
inc
clc
or
test
lcall
repnz
pop
nop
adc
mov
and
xor
xchg
xor
out
or
cmp
cmp
dec
or
sbb
pop
test
adc
adc
rcrb
xor
mov
fdivrs
in
movsl
and
xorb
lcall
movsb
push
es
fs
adc
xchg
movups
mov
mov
rcrb
mov
stc
cmpsb
data16
sub
cmpsl
bound
mov
aas
and
int3
cmpsl
lret
mov
in
int
cmp
bound
test
mov
xchg
xor
push
dec
adc
test
lods
cmp
cli
es
mov
fisubl
adc
cld
mov
fs
inc
iret
xor
xlat
je
xchg
adc
or
cmp
mov
and
add
jno
frstor
fcoml
ljmp
std
xor
inc
push
inc
pusha
rorb
pop
xchg
lret
push
jns
popf
neg
cwtl
and
jle
cmc
dec
fwait
bound
inc
xchg
lods
pop
rcll
jne
cwtl
std
xchg
out
out
stos
mov
and
dec
inc
pop
stc
adc
push
jne
lret
in
push
or
ljmp
xchg
int3
dec
inc
insl
out
jo
ljmp
imul
push
mov
and
and
mov
lds
loop
das
fistps
das
xchg
andb
jo
add
mov
out
sub
fcmovnbe
or
xchg
nop
mov
jns
in
movsb
cmp
inc
out
sbb
bound
mov
xchg
pop
aad
jae
and
outsb
mov
je
mov
andl
das
push
aaa
jmp
movb
sti
fistpl
fdivp
push
adc
sbb
leave
xchg
les
ljmp
pop
shl
inc
stos
mov
idivb
xor
pushf
out
call
pop
cmp
sbb
out
push
lods
jo
xor
loopne
sahf
sbb
xlat
fdivp
add
jmp
ds
outsl
shll
or
insb
daa
rolb
mov
aad
out
sbb
xlat
pusha
mov
sub
push
pop
sbb
sbb
adc
and
shll
ficompl
ficompl
cld
inc
sbb
add
int3
hlt
movsl
dec
push
jle
pushl
out
fimull
negl
mov
mov
pop
xor
ds
dec
fneni(8087
aas
out
adc
popf
or
dec
popf
jbe
mov
cmp
jb
pop
lods
mov
outsl
fimull
mov
enter
and
adc
stos
jge,pn
ficomps
or
mov
adc
push
inc
add
jp
sbb
test
out
in
xchg
rcrl
ss
adc
fldenv
test
pop
cld
pop
leave
jb
idiv
or
insl
cmpsl
dec
inc
adc
mov
out
xorb
out
stos
pop
inc
pop
adc
push
sub
lock
sub
stc
pop
rcrl
mov
dec
mov
xchg
push
scas
dec
mov
mov
add
sahf
sahf
decb
arpl
xor
lret
sbb
or
cs
movsl
insb
adc
mov
or
in
mov
and
jnp
in
add
or
insb
loopne
clc
loop
jp
sub
stos
dec
out
push
or
mov
jb
lds
lret
inc
pop
push
shl
cld
cwtl
pop
imul
pop
mov
lock
movsb
or
ljmp
out
mov
cmp
shlb
or
out
mov
popl
mov
rcr
std
ss
mov
inc
cwtl
fldl
mov
orl
pushl
cs
arpl
pop
xchg
shlb
xlat
cmp
das
fsubp
data16
in
int
outsb
repnz
add
jbe
loopne
push
mov
popf
in
test
jne
out
add
outsl
add
xor
jno
jbe
outsl
call
imul
mov
popf
loop
lret
and
das
or
inc
icebp
mov
aam
rcll
ljmp
push
pop
das
arpl
jnp
jecxz
jg
jb
mov
fs
or
and
movsl
sahf
or
clc
and
mov
pop
fisubrs
adcl
or
jp
cmp
adc
jne
add
aad
mov
jno
out
adc
jmp
or
repnz
inc
mov
mov
xlat
mov
xchg
add
ljmp
dec
test
ss
aaa
inc
xchg
adc
imul
or
lds
fdivl
popa
adc
mov
dec
and
imul
inc
hlt
dec
hlt
je
cmp
jns
cmpsb
push
and
jle
bound
call
mov
jns
dec
outsl
popa
addl
pop
cmp
add
pop
mov
cmp
nop
fnstenv
mov
shrb
adc
das
dec
bound
push
shll
outsb
mov
arpl
cmpsb
out
incb
daa
roll
stos
aas
pop
fiaddl
int
movsw
adc
fld
add
and
iret
enter
sbb
lret
pop
int3
jb
pop
sub
jb
imul
jo
sbb
inc
fisttps
mov
pop
pop
cmp
lds
inc
pop
push
mov
test
or
xor
xor
movb
jae
add
mov
popw
add
push
out
bound
pop
or
xor
dec
data16
stos
cmp
jne
addr16
cmp
sbb
clc
std
cs
inc
fistpl
repz
mov
ja
movb
sbb
outsb
push
inc
jbe
lret
and
out
push
sub
ds
mov
and
cltd
cli
mov
adc
iret
clc
sahf
das
out
rclb
out
mov
xlat
xor
daa
mov
icebp
mov
fldl
xor
fidivs
xlat
mov
adcb
pop
outsl
in
and
push
push
ret
cmp
repz
ret
add
push
int
clc
pop
out
inc
cmp
ret
or
je
pop
subl
cmp
ficompl
ficoml
aad
cmc
filds
scas
andb
xchg
mov
sbb
fimuls
std
cmpsb
out
jne
popf
jae
mov
sbb
xchg
jg
dec
call
push
sub
xchg
movsl
lret
pop
inc
and
jp
or
outsb
add
scas
lods
or
adc
mov
jge
cld
ds
imul
cwtl
imul
mov
mov
jae
test
jecxz
mov
push
push
sahf
stc
imul
xchg
mov
popf
add
in
inc
pop
xor
adc
mov
aas
pop
cltd
out
idivb
pop
and
jle
mov
mov
arpl
das
adc
xor
scas
xchg
inc
and
notl
aaa
outsb
pop
pop
out
adc
add
sbb
xor
dec
sbb
std
je
scas
mov
ud1
sbb
jp
loop
jb
cmpsl
cmp
jp
sbb
sub
hlt
cmp
or
mov
xchg
mov
leave
jle
in
mov
test
jmp
fxam
loope
push
pusha
sub
push
jae
mov
clc
jecxz
xchg
push
ret
cmc
loop
lahf
xchg
cmpb
in
add
mov
jno
out
sahf
cmc
dec
xor
or
lret
and
negb
add
sbb
mov
daa
adc
sbb
mov
mov
ret
test
add
inc
pop
xchg
cmp
and
sbb
dec
lret
iret
in
jbe
lock
cld
leave
pusha
test
adc
mov
movsl
mov
or
add
leave
xchg
dec
int
icebp
scas
out
xchg
xor
dec
lret
ds
pop
pop
cld
pusha
inc
inc
inc
aam
push
sbb
rcl
mov
jg
xchg
xchg
loope
repnz
xchg
aas
add
xchg
pop
cmp
inc
test
inc
jo
sbb
mov
jp
pushl
add
mov
inc
test
lock
mull
rcrb
inc
dec
testb
bound
xor
mov
and
jo
jge
aas
mov
shlb
aas
dec
mov
iret
insl
pop
ds
push
or
repz
imul
fwait
sub
sbb
xor
mov
mov
jmp
pmulhw
aad
out
jns
jne
aad
pop
in
jmp
inc
mov
mov
rcr
or
mov
in
cmp
and
sti
cmp
push
inc
add
out
or
push
adc
into
pop
mov
imul
jmp
mov
repz
jo
jmp
or
inc
inc
mov
mov
xchg
inc
shll
or
fmuls
dec
pop
push
out
dec
lods
cmpsl
fsubr
repz
sbb
scas
mov
sub
push
inc
inc
xchg
js
ret
cli
inc
or
jg
lret
das
loopne
add
imul
mov
das
ss
cmp
push
mov
push
imul
jle
cmp
enter
out
mov
outsl
fwait
jle
or
imul
clc
or
notb
mov
mov
sbb
or
and
aaa
mov
mov
pop
push
xor
or
ljmp
arpl
mov
pop
mov
loope
add
xchg
inc
inc
jge
sbb
pop
leave
add
add
add
push
mov
xor
mov
add
cmp
cmp
mov
or
push
and
and
jno
xchg
fwait
fwait
sbb
dec
mov
jne
cmpsb
fstp
adc
hlt
xchg
sub
mov
and
xchg
xchg
lods
out
dec
leave
pop
add
fdivr
cmp
aam
rcrl
insl
orb
loop
cmp
pushf
out
push
cmp
leave
out
or
pop
es
stos
xor
inc
push
adc
nop
pop
lods
les
movsl
cmp
inc
pop
jbe
sbb
rcrb
mov
rorl
or
inc
loope
add
enter
pusha
out
xor
fmuls
sahf
out
pop
push
pop
push
lret
sub
inc
les
decb
xor
shrb
inc
lds
fistps
std
divl
xchg
dec
sbb
jmp
xor
pop
adc
add
pop
insb
jl
imul
adc
xor
popf
mov
dec
bound
mov
mov
mov
adc
mov
mov
out
add
sbb
imul
daa
dec
adc
add
cltd
repz
gs
dec
call
aam
in
xor
push
adc
scas
jl
push
or
aad
jge
xor
mov
out
pop
xor
xchg
sub
in
inc
dec
sub
pop
mov
fldcw
push
clc
and
push
fwait
lret
inc
xor
lock
mov
xchg
mov
pop
lahf
repnz
xchg
and
xor
leave
in
in
ror
outsb
and
fnsave
jl
imul
dec
int
sarb
insl
fsubrl
and
jg
and
sub
push
sub
pop
sbb
mov
push
mov
cmp
jbe
sti
cs
mov
in
lods
out
dec
aaa
jecxz
mov
clc
push
inc
mov
popa
xor
mov
pop
test
cwtl
stos
mov
clc
out
addr16
fwait
lds
mov
dec
jo
rclb
sub
cwtl
insb
cli
push
jbe
shlb
jl
ds
movl
inc
xorl
jp
xchg
mov
std
jmp
lods
mov
sbb
inc
jg
movsl
mov
jne
jnp
insl
cli
test
mov
out
or
adc
mov
rorl
andl
sbb
xor
xchg
sbb
jb
xor
les
aad
jae
in
sub
push
roll
das
cld
daa
xor
out
push
push
mulb
loope
or
aad
cld
mov
out
sbb
jb
into
lahf
push
cmp
add
sub
filds
mov
or
scas
push
lret
jbe
pop
ret
cmp
dec
rolb
loope
add
xchg
mov
pop
imul
shlb
fisubrs
gs
xchg
rcl
shll
cltd
add
inc
repz
mov
sbb
and
outsb
mov
ret
movsb
add
xchg
test
and
adc
dec
aaa
push
jo
vmovapd
and
hlt
pop
and
incb
shl
stc
mov
insb
fdiv
or
and
cmpsl
fwait
xchg
xor
push
lock
push
push
sti
pushf
lods
nop
imul
pop
and
fs
add
lock
je
xchg
bound
popa
stc
pop
xchg
repz
and
add
adc
dec
int
push
dec
xor
and
xor
out
mov
aas
push
mov
dec
mov
adc
inc
xchg
xor
or
jg
add
sub
inc
cmpb
shlb
daa
mov
outsl
jno
mov
stc
lcall
push
shlb
popf
jp
xor
dec
lahf
push
lret
aam
jge
fwait
lret
pop
subb
pop
mov
inc
lcall
je
ja
jg
xchg
pop
into
jno
fcomip
mov
movsb
push
push
leave
orl
push
nop
push
test
and
gs
sub
add
insl
shrl
or
pop
popf
sub
and
xor
mov
cmc
jne
and
xchg
orb
les
push
pusha
insl
cmp
cli
add
jne
addr16
cmp
cmpsl
mov
ret
push
rorb
insb
es
jb
or
mov
xor
push
repnz
js
mov
in
fcoms
mov
es
loop
out
xchg
insl
test
cmp
xor
cmp
fdivr
mov
test
jno
add
int3
call
pop
inc
and
shlb
mov
xchg
dec
and
js
movsb
movsl
outsl
push
pop
icebp
enter
and
adc
and
orl
movsb
jge
pop
nop
dec
sub
aad
aam
jb
pop
adc
jge
mov
jbe
outsb
shrl
rcrl
in
inc
cltd
rcll
call
rcrb
jge
aaa
ret
jbe
outsb
insb
notb
cmp
sahf
xchg
dec
mov
add
loopne
dec
jge
loope
mov
ja
jmp
jge
popa
clc
push
lcall
pop
add
ja
mov
cmp
jge
repnz
jp
fldl
cmp
out
adcl
xor
and
gs
int
imul
inc
stos
popf
adc
nop
call
aas
inc
pop
adc
ficoml
pop
icebp
or
push
movl
xor
adc
xchg
outsl
dec
lds
cs
cmc
loope
mov
xchg
outsb
test
xchg
or
and
xchg
test
lcall
lret
xchg
sbb
popa
push
btc
es
jmp
icebp
sti
inc
adc
cld
in
jae
push
orb
mov
adc
mov
inc
stc
loopne
daa
movsb
cmpsb
stos
scas
enter
mov
and
lods
mov
int
mov
pop
sbb
jg
jo
in
and
or
jnp
je
push
je
adc
jae
mov
sub
es
outsl
jb,pn
add
test
cltd
sub
inc
add
shlb
gs
xchg
adc
movsb
adc
sub
pop
jecxz,pn
int
xor
mov
out
fs
cmp
and
hlt
jae
push
dec
mov
mov
xchg
or
cmpb
iret
icebp
add
fnstenv
inc
mov
sub
lods
push
shl
ljmp
rol
mov
jge
mov
jl
loop
mov
out
imul
inc
out
aam
dec
sbb
sbb
sahf
das
cwtl
pop
mov
add
push
out
mov
in
sti
mov
sbb
push
mov
sub
popl
cltd
xchg
in
xchg
outsl
shl
add
rcll
movsl
rcrb
inc
sub
daa
jp
fwait
cmc
stc
sbb
test
cli
or
mov
mov
pushf
mov
pop
loop
cli
inc
sub
jg
mov
jge
divl
pop
inc
pushf
push
sar
dec
sbb
cmp
aaa
push
push
ret
jae
xor
and
movsb
push
lcall
sarb
clc
out
rorl
das
rclb
pop
xorl
insb
jl
or
es
dec
lcall
paddsw
adc
xchg
int
and
mov
dec
inc
ret
adc
sub
xchg
mov
mov
into
jb
stos
negl
leave
xorb
mov
out
xchg
fnsave
mov
xor
mov
orb
outsl
loope
std
daa
jecxz
xor
xlat
add
movsl
xchg
add
cmp
fwait
movsl
xchg
pushf
sahf
pop
aaa
xchg
push
aad
jecxz
scas
cmp
push
cs
addr16
xchg
inc
push
and
sub
pop
ja
inc
jns
add
lret
xor
pop
shrl
sub
leave
in
fists
mov
testl
mov
xchg
je
bound
mov
pop
ljmp
scas
push
push
and
adc
and
fadds
fdivl
loop
xchg
hlt
into
xchg
or
inc
aad
aam
dec
shl
cld
jae
add
andl
inc
jp
rep
cmp
sub
jl
mov
ret
jbe
cwtl
xchg
mov
call
aaa
push
jo
ret
je
aam
mov
jno
test
xchg
imul
push
fldl
je
cmp
dec
into
jmp
mov
fs
lea
jg
xlat
sub
imul
fisubl
mov
dec
mov
sbb
pop
sbb
das
push
sbb
fsub
cmp
mov
ret
pop
cwtl
fldcw
mov
rcrl
gs
lret
inc
ljmp
jno
inc
or
test
les
mov
cmpsl
out
hlt
aad
mov
xlat
cmp
sti
dec
nop
mov
or
sub
movsl
stos
inc
sub
jbe
dec
jge
or
loopne
cmp
and
xchg
fistpl
mov
dec
lea
sub
mov
xchg
mov
add
js
push
mov
movsb
adc
sbb
inc
add
out
roll
mov
movsl
sbb
sbb
push
sbbb
pop
jns
xchg
in
fisttpl
xchg
pop
xor
pop
mov
and
je
mov
jne
pop
mov
push
imul
dec
data16
dec
repz
mov
xor
lods
sbb
mov
jmp
out
das
sbb
ret
mov
cmp
movsl
mov
pop
mov
xchg
cs
pop
mov
stos
mov
inc
dec
xor
aam
pushf
mov
cli
adc
dec
fwait
loopne
xlat
jae
lds
mov
in
pop
cs
adc
mov
push
pop
loop
pushf
stos
cmp
je
push
cmp
mov
xchg
mov
mov
shrb
xchg
lcall
outsb
sub
xor
cmp
mov
or
jne
pop
in
jl
in
aad
cmp
insb
loop
jp
add
and
adc
and
ds
lea
mov
imul
jg
daa
fsubrp
mov
push
mov
stc
imul
outsb
das
pushf
xor
out
das
lret
mov
sahf
push
jle
icebp
out
push
xor
xchg
add
xchg
cld
adc
aad
jle
sub
ljmp
mov
fwait
repz
aas
mov
in
add
fldl
cmp
pop
sub
std
jb
pop
fadd
pop
out
in
cmp
push
imul
hlt
adc
inc
andl
lods
push
dec
int3
sub
shrl
fsubl
loope
push
shl
jg
jno
mov
jno
pop
bnd
sahf
or
sahf
pushf
ret
pop
mov
jg
out
insb
push
adc
push
and
dec
ds
popf
pop
aas
bound
ret
dec
sbb
lds
je
xchg
gs
hlt
mov
mov
mov
push
mov
das
lods
mov
call
cli
jo
cltd
pop
mov
imul
in
dec
push
fwait
sub
sahf
call
mov
sub
or
xchg
clc
mov
add
icebp
cmp
fadd
es
xchg
iret
mov
scas
and
mov
rcrb
cmpsl
js
mov
clc
sub
mov
insl
pop
ljmp
jnp
dec
mov
dec
fs
jecxz
push
je
fnstcw
mov
push
es
in
jg
fistpll
mov
dec
jle
xor
stc
out
cli
xor
lea
mov
inc
lahf
js
test
rcrb
cwtl
mov
jg
addb
nop
sub
jb
jns
mov
out
sbb
das
push
push
xchg
xchg
into
in
fs
in
jp
jnp
movsl
adc
and
inc
sub
fisubrs
mov
adc
lret
push
call
add
xchg
ljmp
dec
sub
cmp
ret
pushf
cmp
cwtl
push
cmpb
dec
pop
xchg
imul
icebp
jno
and
adc
lods
jns
xchg
lahf
and
hlt
popa
mov
mov
aas
pop
data16
test
sti
cmpsb
or
imul
mov
add
fisttpll
jge
dec
mov
jle
pop
pop
cmp
scas
into
arpl
mov
sbb
cmp
jmp
pop
mov
fwait
iret
lea
jge
or
repnz
add
rcrl
inc
or
testl
test
icebp
push
arpl
mov
pop
pusha
mov
and
pop
outsb
add
or
rcrb
int3
fdivr
push
xchg
mov
cmp
popa
popa
jno
push
mov
in
lock
lret
mov
aad
add
stos
jb
cmp
adc
mov
ret
pusha
xchg
stc
pop
sub
sbbl
mov
sbb
jp
push
cld
jno
popf
mov
push
outsb
cmp
movl
fadds
das
sbb
add
in
or
frstpm(287
push
push
dec
push
push
fimull
popl
repnz
lret
ljmp
lcall
or
aaa
jne
in
sbb
sub
mov
inc
leave
lods
add
popf
sbb
adc
in
sub
aas
dec
sbb
fisubl
lret
xchg
test
enter
sub
or
mov
push
pop
cmpsl
xchg
cmp
jo
enter
ret
jno
inc
cmp
loop
cwtl
pop
push
inc
sub
arpl
add
fwait
jne
sbb
jo
add
fimuls
ljmp
add
ljmp
pop
cmc
js
popa
shrl
scas
pop
test
jno
add
int
cmp
pop
sub
and
push
cmpsb
or
xchg
iret
or
rolb
inc
ret
aas
insl
popf
jg
bound
push
movsb
sbb
or
adc
sar
fwait
push
mov
mov
nop
fucomi
xor
sbb
xor
pop
mov
inc
in
aad
sub
jnp
mov
in
test
push
mov
xchg
dec
arpl
fcompl
ljmp
inc
xor
fdivrl
out
cmp
mov
jb
xchg
mov
pop
cmpl
into
add
jmp
ja
jmp
push
cmp
jmp
sbb
adc
jne
out
mov
push
sub
iret
aaa
mov
je
sbb
mov
push
loope
divl
add
stos
jno
rcrb
lds
outsl
push
pop
jno
roll
cmp
arpl
xchg
and
gs
jb
cltd
cmp
adc
outsl
mov
mov
xor
push
xchg
ret
xchg
push
mov
ja
mov
jge
or
scas
mov
push
cmp
pop
int3
lds
inc
es
xchg
add
inc
out
push
add
ret
icebp
mov
dec
setne
roll
test
jae
fwait
out
into
mov
dec
out
and
aad
push
or
clc
and
push
sarl
cmp
inc
es
out
push
mov
xchg
cld
jecxz
push
mov
mov
xlat
jp
sub
mov
test
adc
xchg
cmp
testl
fwait
xor
cli
mov
addr16
or
iret
xchg
or
shlb
jb
push
or
and
ds
mov
jge
leave
cli
aas
push
mov
mov
dec
outsb
jl
imul
imul
jg
movsl
xor
adc
push
int3
mov
sbb
jo
or
sub
xchg
scas
imul
jge
fs
xchg
cwtl
int3
pop
stos
and
pop
das
mov
pop
cmpsb
dec
xlat
cmp
inc
add
fisubl
push
imul
push
leave
loopne
lret
cmp
in
lock
movsl
movsb
insb
dec
pop
sub
cmpsl
jmp
imul
fnsave
cmp
lret
mov
js
inc
mov
enter
pop
cwtl
push
out
cmp
mov
subb
dec
out
aad
adc
xchg
pop
adc
arpl
fmull
ret
ret
push
cmpsl
sub
ficoms
roll
pop
lock
jno
outsb
and
stos
fcomps
lcall
mov
aas
mov
mov
arpl
sub
xor
out
lret
test
mov
ljmp
add
push
push
adc
shlb
jge
and
push
mov
stc
inc
sbb
movsb
xor
repnz
sub
mov
mov
cmp
ftst
mov
jo
xor
sti
fildl
out
into
add
sar
aas
dec
and
sti
cmpl
inc
es
mov
cmp
mov
out
icebp
or
lock
and
outsl
lret
xchg
mov
cmp
xchg
and
sahf
inc
scas
mov
add
jno
loopne
adc
stos
loop
cmp
fisttpll
mov
stos
cwtl
mov
repz
sbb
cmp
jnp
adc
ljmp
jge
stos
rcl
dec
pop
mov
or
mov
call
mov
mov
jo
dec
pusha
xor
add
rcll
ss
add
pop
ja
stc
or
adc
cwtl
dec
push
sub
in
insl
mov
adc
cmc
imul
stos
push
in
rol
push
xor
out
xchg
pop
pop
lods
aam
ljmp
insb
addr16
std
push
sub
xchg
insl
or
jne
subl
pop
and
jbe
in
inc
stos
in
cmp
sub
mov
jmp
sar
sahf
dec
add
sub
mov
inc
fcomip
mov
jne
jb
hlt
xchg
jl
lret
out
sbb
adc
mov
push
dec
cmpb
sub
test
sub
xor
je
cwtl
lea
push
jae
adc
ret
mov
int
push
out
test
shlb
adc
adc
in
movb
xor
sbb
sbb
int
xchg
ja
xor
lock
imul
or
mov
sbb
ret
out
in
orl
ja
jmp
or
lock
sbb
push
into
add
je
push
mov
or
xor
mov
mov
popa
rcr
insb
les
cli
sub
xchg
out
sbb
mov
cltd
pop
mov
fadds
xchg
in
jle
add
jo
icebp
mov
mov
leave
xchg
push
pop
push
cmp
adc
cmc
inc
jno
repnz
xor
cmp
ficomps
mov
xorb
pop
fisttpl
in
mov
mov
shlb
cmp
cmp
cmp
mov
sbb
mov
adc
movsl
push
jg
cmp
repz
inc
adc
push
clc
loop
mov
or
mov
cmpsb
adc
adc
scas
lcall
jg
xchg
mov
jnp
and
cmp
and
out
mov
jo
cltd
push
mov
or
add
jle
jl
or
mov
push
and
mov
mov
test
dec
dec
mov
dec
dec
jmp
mov
mov
cmpsb
mov
loop
jne
dec
cwtl
mov
push
scas
xor
in
mov
or
into
into
fmul
enter
sub
std
dec
mov
pop
out
cmpsl
aam
cmp
adc
js
imul
cld
in
dec
arpl
xor
push
cmpsl
icebp
imul
int3
incl
in
and
mov
sub
xor
scas
pop
shrl
xor
into
adc
cbtw
in
lods
stos
fwait
mov
insb
std
test
xchg
jl
mov
arpl
dec
or
iret
out
loopne
add
add
xchg
les
xchg
xor
lea
daa
shl
mov
insl
inc
push
push
xor
or
dec
aam
xchg
jge
push
stos
sub
xor
push
cmp
cmc
sbb
enter
mov
scas
dec
jp
xchg
xchg
adc
out
inc
xor
xor
inc
xchg
in
rorb
or
jmp
pop
jae
rcl
dec
sbb
jg
int3
mov
sbb
je
ficompl
fbstp
pusha
mov
into
adc
cmpsb
ljmp
sub
pop
rcrl
push
sub
pop
cld
jle
mov
mov
ret
mov
aam
cmp
jno
pop
fisttps
jge
ss
jg
mov
push
imul
jle
insl
sbb
aas
insl
inc
mov
loope
xchg
inc
xchg
inc
icebp
push
ret
mov
aam
cmpl
mov
in
aas
inc
pop
test
mov
inc
jnp
mov
daa
jge
dec
cmc
pusha
dec
test
lea
sahf
inc
fiaddl
imul
mov
imul
adc
push
das
jp
loop
mov
imull
stos
jno
out
cmc
lods
jb
push
xor
cld
jl
add
into
jb,pt
cs
mov
cmpsl
stos
push
pop
fcomi
shl
pop
adc
lds
ret
cmp
outsb
stos
cmpb
mov
test
sbb
lds
push
mov
sbb
fistpll
mov
and
dec
xlat
nop
mov
jge
push
leave
outsl
ret
bound
xchg
mov
out
fwait
mov
jno
push
sarb
pushf
jo
mov
jae
push
shrb
xchg
cmpsb
sbbl
adc
inc
and
sbb
lret
out
lcall
xlat
cltd
mov
mov
push
mov
jmp
jmp
addr16
loop
ljmp
jbe
adc
push
cmp
sbbb
dec
cmp
ja
lods
push
aas
repnz
jg
sbb
sbb
in
shrd
loopne
mov
lock
add
pop
jmp
jge
int
jecxz
stc
jnp
mov
outsb
mov
and
mov
pop
xor
pop
mov
int
add
mov
pop
xor
push
mov
cwtl
xor
rclb
mov
pop
cs
out
pusha
cmc
lea
xchg
movsb
popa
scas
andb
mov
scas
dec
and
or
mov
and
adc
mov
inc
test
lcall
cmp
jmp
les
in
xchg
push
loope
inc
and
adc
push
fwait
sti
xorl
insl
sbb
xor
test
hlt
add
inc
or
push
test
das
push
in
sahf
fwait
mov
mov
xlat
pop
cmp
cmp
ds
mov
xchg
nop
pop
sbb
add
sbb
call
scas
in
adc
push
cmc
mov
adc
shrl
add
clc
stos
jle
repz
les
int
outsb
add
cli
icebp
cmpsb
mov
out
sahf
jae
cmp
adc
clc
rcrl
dec
mov
ljmp
loop
mov
lret
xchg
sbb
push
out
or
rcll
in
inc
lods
mov
or
fsubs
xlat
push
ljmp
in
xor
mov
jno
cmpsl
popl
repz
pop
loop
ret
adc
mov
mov
push
xorl
pop
data16
ja
push
shrl
mov
push
or
or
cmp
aas
jecxz
movsl
mov
push
sahf
cmpl
insl
iret
add
fildl
popa
mov
cld
sbb
and
lcall
ffree
test
sbb
mov
scas
xor
push
test
xchg
pop
dec
aad
xor
sbb
mov
clc
or
bound
jge
loop
mov
mov
push
fcmovne
aam
jno
dec
mov
and
ficomps
mov
andb
fidivrs
jge
xchg
sti
in
inc
call
nop
mov
loop
or
shr
add
adc
inc
sbb
addr16
dec
mov
jbe
cli
incb
pop
and
dec
push
xchg
cmp
gs
mov
jl
shlb
sti
push
add
or
inc
and
leave
iret
and
sub
ret
int
roll
sahf
je
lahf
push
sbb
inc
lcall
or
hlt
scas
mov
sti
xchg
jp
das
inc
mov
mov
shrb
xor
mov
outsl
pop
cmp
pop
mov
ds
inc
dec
jne
fwait
insl
popf
imul
popa
mov
pop
mov
jbe
pop
repz
outsb
fnstsw
jecxz
les
inc
inc
rol
adcb
daa
insl
rcrl
and
jns
inc
or
xchg
push
pop
pop
std
xor
mov
cwtl
pop
mov
sahf
cmp
pop
outsl
and
add
push
movsl
leave
pop
out
lret
inc
lods
push
negb
nop
icebp
fxch
fwait
aaa
jns
shrb
loopne
imul
and
mov
popa
xor
sbb
imul
hlt
and
dec
sbb
pusha
push
adc
sub
ficoml
movl
push
cmpb
xchg
mov
mov
lahf
jge
nop
test
jge
adc
mov
inc
repz
dec
shlb
fldt
dec
xchg
lock
stc
ret
push
jbe
or
in
mov
je
adcb
xor
mov
mov
dec
inc
call
or
lret
ds
stos
cli
lret
fsubs
lods
test
cmpsl
lods
xor
pop
leave
jns
fs
or
cltd
pop
mov
sub
jo
lcall
bound
mov
and
cmp
mov
das
push
jnp
jo
fbld
mov
jb
test
mov
test
jmp
mov
inc
add
push
and
stos
pop
jb
or
js
fimull
sbb
movsb
jno
imul
scas
test
cmpsl
dec
mov
adc
ret
jmp
mov
sbb
xor
jnp
add
cli
push
outsl
adcl
ss
in
push
fildll
mov
aaa
push
add
cltd
jns
adc
packsswb
jp
sahf
pop
jo
lret
insl
inc
pusha
xor
add
shll
cmp
rcrb
lods
scas
loopne
pop
add
sbb
enter
and
jge
orb
xchg
das
js
pop
sub
mov
mov
and
in
setg
mov
enter
lcall
out
pushf
or
int3
int
aaa
mov
xchg
mov
pop
dec
int
jbe
push
xchg
fs
sub
imul
xchg
shll
rorl
and
sub
popa
repnz
in
stos
scas
ja
sbb
mov
mov
clc
push
add
inc
ficoml
sub
pop
lret
push
add
xchg
aas
jg
fbld
mov
sti
inc
mulb
add
fidivrl
pushf
xor
adc
cmp
sbb
jge
outsl
and
push
push
stos
mov
repz
inc
mov
cmp
loop
imul
bound
mov
mov
adc
xlat
and
adcl
arpl
call
mov
or
jne
scas
test
sub
or
push
outsb
xchg
lret
adc
inc
fs
and
cmp
cld
out
int3
stos
sbb
int
sbb
mov
dec
sub
xchg
pop
adc
jbe
dec
sub
xor
mov
pop
dec
testl
test
cmp
cmp
push
call
shrb
pop
mov
clc
mov
ret
stos
jne
cli
mov
lret
lret
lcall
xchg
adc
jg
jb
sub
cmp
xor
and
jmp
mov
loop
int
roll
popw
sbb
out
or
repnz
inc
jecxz
aam
cltd
sub
sub
add
sarb
add
sbb
lds
dec
arpl
mov
cmp
test
xchg
jecxz
mov
insb
leave
mov
push
outsb
mov
aaa
lret
repz
pop
adc
add
mov
pop
movsl
std
pusha
jne
popa
popf
adc
mov
fstps
push
lea
cmp
mov
arpl
dec
nop
nop
push
clc
mov
stc
jge
fidivrs
sbb
aad
mov
in
push
xor
mov
into
les
mov
psubusb
mov
out
lods
xor
push
fdiv
lea
jne
pop
lea
push
test
push
dec
and
adc
xchg
cmp
mov
jmp
test
mov
mov
xor
sbb
adc
sub
mov
stos
test
pusha
inc
out
int3
push
or
jl
test
pop
xor
sbb
ss
out
fldcw
in
daa
xchg
fcoml
int3
loop
lock
sbb
sbb
lret
loopne
in
xchg
mov
jo
mov
icebp
or
les
rcrb
fisubs
jg
sti
into
add
int3
enter
pop
fmulp
movsb
aam
pop
leave
enter
out
and
xchg
sbb
xchg
stos
loop
mov
inc
xor
dec
fidivrs
ror
std
scas
cwtl
lret
push
and
ret
and
pop
out
iret
out
test
sub
adcb
jecxz
outsl
add
pop
js
push
xchg
push
ja
xchg
lods
pop
fimuls
adc
or
inc
pusha
adc
lods
es
fmull
stc
dec
xchg
push
lret
js
cmp
sub
pop
pop
test
notl
lret
loop
cmp
sub
xchg
out
xlat
in
shlb
xchg
fcmovnb
ret
push
jnp
inc
sub
adc
in
out
pop
std
divb
lahf
or
inc
xor
mov
mov
ja
push
fldt
insb
mov
mov
in
adc
repz
mov
mov
xor
adc
dec
add
rorb
cmp
cmp
mov
lock
or
or
sbb
aam
out
rcr
aad
cltd
push
iret
jb
pop
std
mov
sub
lea
stc
dec
jnp
push
pop
pushf
jecxz
inc
ficomps
jo
push
adc
jp
xor
mov
call
xchg
lea
jmp
xor
xor
jo
pop
mov
in
mov
inc
jge
add
xrelease
pop
ljmp
jae
andb
or
sbb
mov
popf
mov
loop
lods
cmp
and
xchg
mul
into
mov
out
cmp
mov
dec
hlt
ss
sub
sub
adc
aas
inc
jbe
out
cmp
lcall
mov
sti
out
push
stc
aas
fstl
mov
orl
xor
dec
sub
xchg
sub
add
and
mov
fsubs
sbb
cs
inc
jp
lahf
xor
sbb
and
out
dec
xchg
sbbb
mov
jb
ret
cmp
xor
jl
xchg
ja
aam
shlb
or
imul
jnp
loop
dec
rcrb
sub
lahf
push
int
pop
ljmp
nop
pop
int
adc
jns
adc
push
leave
out
and
cmc
and
testb
or
jno
push
test
lret
and
or
in
dec
jbe
mov
fdivrl
ss
and
bound
push
adc
mov
mov
mov
xchg
jb
jo
sti
mov
cmpsb
adc
xor
pop
and
and
mov
ja
mov
sbb
insl
arpl
mov
stos
repnz
outsb
aas
popf
stc
xchg
sbb
xchg
inc
cmp
into
fnstsw
shll
lahf
inc
rcr
push
or
or
dec
pop
out
outsl
mov
test
xor
andl
sbb
mov
in
loopne
incb
xlat
nop
add
jo
outsl
les
aam
insl
xchg
sbb
das
add
mov
jp
testl
push
stc
negb
sub
or
xchg
pop
xor
test
xor
mov
insb
or
or
leave
aad
loope
lds
out
clc
lcall
xor
dec
dec
fildll
rolb
mov
sub
jmp
jle
mov
adcb
js
bound
mov
xchg
scas
cmp
dec
mov
cmp
not
push
cld
and
andb
jo
dec
sub
add
push
fcomp
push
roll
cmp
icebp
or
sbb
xchg
and
jno
mov
cwtl
mov
leave
inc
xchg
jmp
popa
shl
js
pop
mov
jb
pop
mov
ljmp
movsb
sbb
ja
dec
pop
aam
pop
cmp
jnp
or
inc
cmp
jg
imulb
andl
popa
jecxz
mov
xchg
std
loope
pop
insb
test
es
xorl
hlt
adc
enter
push
sub
cld
rcll
or
push
pusha
aad
je
or
rcr
rep
mov
ss
repnz
cltd
mov
and
stos
sbb
pop
cvtps2pd
out
lea
inc
push
leave
adc
sbb
addr16
imul
cmp
outsb
nop
ja
xchg
jge
scas
outsl
aas
or
xor
lock
rcrl
leave
sarb
clc
push
loope
cwtl
mov
mov
adc
dec
sbb
notb
pop
insl
mov
sbb
shlb
adc
push
jp
hlt
mov
mov
xchg
mov
push
les
inc
repz
xor
rol
jns
pop
push
pusha
out
xchg
pop
lcall
inc
in
imul
pop
xchg
push
pop
test
es
sti
dec
adc
stos
xchg
mov
sbb
jecxz
push
mov
faddp
push
negb
mov
popf
dec
aas
sbb
jp
in
mov
jl
clc
pop
sahf
out
pop
dec
aad
popa
mov
aad
mov
mov
lret
movsb
pop
xor
test
dec
fbstp
subl
or
cs
lret
add
add
and
push
mov
jne
push
icebp
pushf
ljmp
dec
out
out
mov
or
push
inc
pop
dec
imul
xchg
jmp
pop
cmp
and
and
ret
jno
sahf
jg
jp
aam
pop
addr16
push
inc
mov
pop
jmp
es
cmp
dec
sub
out
adc
add
test
jl
outsb
ja
xor
sub
pushf
push
sub
mov
fsubr
or
mov
fcomip
or
sub
xchg
mov
sbb
in
xchg
inc
imul
gs
mov
and
pop
fldt
outsl
test
xchg
int3
and
push
sub
sar
mov
push
sahf
pushf
aas
cmp
insl
sub
cmpsl
push
push
mov
jno
push
fcoml
in
push
dec
cmp
or
push
idiv
mov
sahf
xchg
sbb
clc
orb
cmpb
sub
sbb
ss
jg
imull
ss
xchg
add
mov
inc
test
inc
cld
xorb
mov
outsl
inc
cmc
dec
pushf
or
mov
fwait
fwait
sub
into
gs
icebp
pop
sub
inc
xchg
ret
push
stc
cmp
stos
cmp
mov
adc
outsb
jmp
out
dec
outsl
shl
outsb
popa
lods
aas
inc
iret
cmp
test
aad
call
cmp
pop
xchg
clc
inc
xchg
std
inc
sub
subb
out
sbb
aaa
or
inc
xor
fcmovne
leave
lea
push
outsl
scas
push
push
mov
and
ret
dec
movsl
arpl
jb
xor
mov
adc
mov
mov
dec
insl
push
imul
in
scas
loopne
or
scas
mov
sbb
adc
mov
pop
stc
push
imul
xor
cmp
mov
jmp
inc
cmpl
push
push
cmp
std
pusha
jle
cli
pop
fbld
lock
and
push
inc
adc
aam
fistps
je
add
mov
jmp
xor
lret
xchg
lret
mov
shll
std
jae
add
xchg
popa
mov
in
daa
fsubrs
jbe
mov
sub
test
xor
or
lea
fs
sbb
cwtl
mov
out
fildll
loop
sub
enter
dec
pop
cli
add
gs
ret
mov
xor
sub
addb
push
shlb
stos
dec
push
xchg
ret
imul
pushf
jae
adc
xchg
mov
test
sub
xchg
or
and
rclb
mov
movsl
xor
loop
ja
test
dec
sahf
mov
aas
fstps
xchg
lret
out
test
xor
filds
aam
cmc
add
orl
adc
loope
xor
push
xor
or
dec
xchg
pop
cltd
enter
in
jnp
loope
int
push
enter
mov
inc
sub
sbb
nop
fsub
ret
jp
xor
call
add
adc
int3
jbe
push
fbstp
iret
adc
cmp
push
test
or
subb
mov
testb
sub
out
add
rclb
and
cmc
add
sbb
or
and
outsl
adc
and
cmp
in
push
stc
in
xor
movsl
or
outsl
test
imul
cs
jge
test
andb
add
icebp
sub
xchg
testb
pop
inc
inc
dec
scas
push
or
jp
add
mov
cmpsb
sub
int3
or
out
mov
xchg
mov
cld
add
cmpsb
xor
pop
popf
in
pop
add
pop
dec
insb
xchg
push
sti
es
mov
lret
mov
sub
mov
adcb
fsts
xchg
jns
in
mov
adc
into
ss
aaa
std
pop
push
popf
xor
push
or
push
push
mov
fnstsw
gs
mov
push
negb
clc
xchg
test
add
sbb
jle
and
lret
cmp
sbb
je
inc
popa
mov
data16
pop
popf
push
pop
xchg
adc
add
pop
into
jns,pt
xor
into
orb
cmpsb
mov
push
adc
pop
cs
sub
mov
popf
ret
test
pusha
fmul
dec
adc
mov
inc
cmp
mov
cmp
pop
mov
lds
mov
rsqrtps
ss
andb
add
negl
mov
mov
pushf
mov
dec
mov
lret
push
ret
int3
mov
push
or
nop
mov
xor
mov
push
stos
ret
dec
nop
roll
loopne
pop
jl
pop
adc
or
xchg
fidivrl
cmpsl
add
enter
xchg
dec
mov
mov
dec
and
mov
sahf
and
sbb
dec
sbb
rolb
es
into
inc
sub
sub
fidivrs
sbb
mov
push
push
jg
push
lds
sub
sbb
pop
lods
cmc
cltd
repnz
and
loopne
loop
dec
fdivl
ja
mov
movsl
inc
push
and
mov
rclb
lds
jp
xchg
jae
lahf
mov
es
fmulp
les
pop
icebp
stc
push
inc
xchg
push
mov
subl
loop
sub
mov
clc
cmpb
mov
fiaddl
addr16
vpsubd
in
test
cmp
xor
mov
lea
xchg
enter
jns
jge
mov
jo
push
xor
repz
push
xor
and
xor
mov
pop
leave
cmp
xchg
and
sub
xchg
repz
push
into
cli
or
cmp
shrb
lds
xchg
mov
mov
xor
es
fwait
jo
imul
xchg
int3
jb
mov
push
xchg
cld
pop
xchg
and
mov
inc
shll
pop
cmp
int
mov
nop
xchg
fs
push
sti
pop
fwait
xor
xchg
int3
push
sti
daa
jnp
arpl
add
push
sub
imul
fstpl
sub
test
push
repz
call
iret
insl
sub
cmp
jae
call
jle
or
sbb
stos
xchg
out
push
mov
sub
mov
insl
cmpsb
imul
les
imul
jae
ret
mov
lret
inc
arpl
lcall
cmp
push
push
mov
dec
cmpsb
push
loope
repz
out
mov
insl
inc
xor
and
mov
leave
push
mov
insl
hlt
sbb
push
clc
rclb
xchg
push
leave
sbb
dec
pusha
sbb
cmp
jl
shr
mov
lret
popa
and
fstps
xlat
fwait
sbbl
sub
inc
sti
test
andb
inc
loope
test
push
mov
popf
push
jnp
out
push
ror
jo
shlb
push
arpl
xor
movb
testl
push
lods
mov
or
xorl
call
jne
xchg
bound
cmp
scas
inc
fmull
in
sti
xor
adc
mov
iret
test
hlt
out
inc
inc
jne
adc
xchg
mov
dec
icebp
les
cmpsl
add
push
and
sti
out
xor
lcall
pop
inc
cmp
pop
in
fs
ficomps
mov
or
ja
sbb
bound
test
loopne
pop
loope
mov
sarl
mov
inc
xchg
mov
pop
fisubs
pop
sahf
icebp
lahf
mov
push
add
addl
sti
sub
scas
subb
mov
jo
pop
cld
mov
cmp
movsl
stc
lahf
mov
imul
inc
jl
or
adc
cwtl
je
push
inc
pop
dec
push
stos
fistps
loopne
lock
xchg
pop
lret
pop
mov
adc
ja
fstpt
fnsave
jb
testb
fs
lock
int
bound
sbb
sbb
rcl
cmpsb
push
inc
loopne
popf
dec
aad
push
pusha
bound
fcmovnbe
pop
xchg
jno
and
dec
decb
mov
ds
push
sub
cs
cmp
repz
testl
mov
xor
int3
mov
mov
fadd
dec
test
popa
adc
enter
ds
ds
or
std
push
stc
hlt
out
fiaddl
mov
inc
sbb
mov
add
sbb
xchg
jno
ds
sbb
push
push
mov
jbe
jle
movsl
inc
adcb
xadd
loopne
mov
mov
dec
push
mov
xor
sub
stos
xor
dec
fcomi
int
jmp
pop
add
adc
ficomps
loopne
cltd
ss
add
pop
mov
cmc
xor
in
mov
push
clc
push
adc
movsl
dec
adc
and
push
andb
xor
pusha
sub
sbb
outsl
les
lret
push
pop
add
out
xorb
mov
sub
xchg
pop
lds
sti
xchg
icebp
lret
xchg
js
lret
xlat
dec
pop
loopne
inc
aad
inc
gs
mov
ja
mov
out
cmc
sub
cmovne
dec
push
xor
sbb
mov
mov
sub
dec
cli
div
sbb
lods
or
pop
in
in
dec
out
es
sbb
mov
pop
out
in
mov
push
sbb
pop
mov
js
xor
push
mov
jl
mov
mov
jp
cmp
lahf
popf
adc
add
leave
pop
xor
jae
push
pop
cmp
mov
dec
mov
scas
loop
or
subl
lret
adc
pushf
sti
jl
pop
test
lods
decb
mov
adcl
loope
mov
mov
push
aad
out
out
cmpsb
sbb
cmp
xchg
sbb
addr16
mov
int3
lods
lahf
std
jmp
push
lock
push
mov
push
cmp
mov
or
std
js
push
jle
pop
xor
push
and
push
xor
mov
lret
mov
lods
fs
inc
ret
adc
cmp
into
push
stos
lret
outsb
push
inc
sub
jo
push
cltd
cwtl
lret
imul
jae
xor
dec
jl
subb
ss
mov
rol
mov
inc
dec
mov
pusha
es
aaa
cwtl
inc
mulb
out
fistpl
pop
lahf
mov
push
lret
cwtl
or
push
bound
inc
push
sub
sar
adc
mov
pushf
xor
fadd
sub
xlat
mov
sbb
push
imul
imul
mov
aaa
gs
lods
lahf
push
pop
inc
gs
pusha
clc
out
sbb
push
andl
pop
jle
mov
repz
leave
addb
insl
leave
lahf
clc
ja
lahf
lret
divb
or
mov
push
jns
mov
test
stc
sub
mov
or
rorl
adcl
inc
repnz
fs
out
pop
add
sub
ss
cmp
adc
ja
stc
rorb
push
and
pop
cmp
adc
sbb
cmpsl
and
mov
pop
pop
sub
sub
lods
jge
cmp
add
or
shrb
jp
testl
jmp
jl
mov
push
fiaddl
pop
cs
or
xor
and
fistps
and
push
scas
shlb
mov
pop
mov
mov
fdivrs
lods
out
stc
push
adc
dec
add
jae
push
inc
int
xchg
push
pop
xor
test
sbbl
or
or
orb
sti
jp
jae
mov
mov
push
jg
addr16
sub
sti
sub
fsubrp
aas
es
dec
sub
dec
aad
out
nop
js
int
fistpl
nop
loope
mov
ja
add
mov
and
aaa
sbb
cltd
js
sbb
bound
ret
cmp
pop
xor
outsl
mov
mov
bound
pop
add
loop
faddl
mov
xor
jmp
pop
push
addb
hlt
ret
inc
lcall
inc
pop
jge
ss
pop
xor
mov
sub
mov
and
arpl
push
rcrb
lods
push
mov
fsubrl
aas
out
mov
mov
adc
mov
mov
jnp
enter
imul
iret
push
pusha
je
js
sti
lea
xchg
ffree
xchg
shll
jmp
jns
mov
inc
sub
fs
dec
hlt
iret
push
cmp
xchg
scas
xchg
in
sbb
mov
outsb
xchg
pop
and
inc
push
ret
adc
adc
fwait
imul
mov
fs
inc
xchg
cmp
xor
mov
jb
pusha
scas
faddl
add
pop
popf
cs
das
mov
push
mov
pop
or
jmp
cwtl
xor
add
mov
add
inc
in
icebp
iret
push
jns
lcall
int3
mov
test
fistpll
mov
lret
mov
mov
test
int
scas
pop
or
inc
jmp
mov
stos
push
push
mov
mov
enter
pushf
xchg
in
xchg
inc
and
je
ret
cwtl
jg
adc
sub
jg
in
test
insb
idivb
movsb
sbb
inc
push
cmp
push
sbb
xchg
outsl
lcall
or
insb
push
loopne
sbb
or
jns
jno
jmp
mov
cmp
or
mov
pop
pusha
shl
bnd
sub
cmpsb
movsb
inc
cmp
xchg
cmpsl
adc
xchg
insl
test
subb
xor
sub
dec
inc
pop
fdivs
daa
fstpt
mov
fldt
push
cmpsl
movsl
and
adc
xchg
push
mov
leave
int3
jl
xchg
xchg
or
loopne
mov
lahf
jo
pushf
or
pop
iret
fs
add
mov
dec
adc
xlat
cmpb
sbb
ret
or
jne
jnp
scas
xchg
dec
and
and
addl
mov
inc
popf
fwait
sbb
dec
push
subb
fptan
outsl
imul
push
popa
and
xor
inc
xchg
push
pop
push
or
movsb
stos
inc
xchg
cld
xchg
pop
aas
jmp
movzwl
in
scas
or
push
pop
push
pop
int
adcl
push
ljmp
pop
cmp
add
popa
bound
sbb
mov
cmc
pop
out
cmp
aaa
dec
scas
jg
in
lock
and
pusha
fbld
pop
push
inc
fiaddl
loope
inc
rol
add
jecxz
pop
ds
shlb
js
scas
pop
mov
sub
push
pop
test
xchg
push
test
lret
pop
add
mov
mov
mov
ret
sub
dec
cmpsb
loopne
push
sub
cmpsb
imul
lahf
std
sub
imul
inc
cwtl
fsub
xlat
imul
ret
lock
cmp
mov
rorb
fidivrs
mov
jge
mov
pop
pop
lcall
and
push
lahf
lahf
add
add
mov
fidivrl
push
add
in
inc
inc
pushf
addb
adc
inc
xlat
sub
dec
ret
popa
pop
cs
andl
add
jg
mov
push
enter
outsl
stos
addr16
rorl
in
mov
ja
jl
push
outsl
imul
mov
dec
mov
dec
cmp
orb
mov
inc
aaa
or
and
dec
mulb
sbb
lea
jge
jmp
cs
push
cwtl
xchg
rorb
fnstcw
jmp
jae
scas
sub
andb
ds
cmc
stos
orb
or
dec
and
clc
and
test
repnz
push
and
sbb
sub
dec
rcl
das
push
sub
rol
sub
mov
out
xor
call
lds
jnp
add
lea
jle
adc
je
and
aam
jbe,pt
push
rorb
inc
rcr
xor
pop
lea
stos
popa
pop
out
fwait
adc
pop
mov
jl
dec
repz
fiaddl
mov
pop
fsubrp
pop
rorb
outsl
lods
pusha
jp
cld
adc
inc
sub
rcrb
sbb
push
mov
jmp
and
cwtl
adc
adc
sub
mov
lret
xchg
rcll
and
fmull
pop
mov
movsl
and
and
mov
ficoml
inc
cld
mov
xchg
mov
mov
push
les
loopne
movsl
movsl
pop
in
add
xchg
jg
mov
dec
fisubs
or
mov
add
fwait
dec
push
xor
xchg
cmova
add
xor
fs
rcrl
inc
xchg
mov
mov
fstl
out
scas
repnz
inc
cmpl
mov
aas
cmp
cmpsb
leave
jp
mov
gs
push
nop
pop
cwtl
mov
js
inc
push
push
stos
inc
repnz
mov
inc
sbb
cmp
mov
push
popf
unpckhps
jae
mov
mov
sub
add
jecxz
cmp
mov
dec
and
dec
out
lcall
mov
add
lods
ljmp
insb
push
jbe
shll
aam
cmp
jl
push
mov
add
sbb
lds
js
movsb
adc
movsb
iret
cmc
lahf
xor
add
or
stos
add
add
xor
out
fs
cwtl
sahf
mov
mov
mov
push
repnz
cmp
gs
pusha
add
movsb
cli
mov
iret
aad
fisubrs
movb
shlb
pop
cmp
lods
adc
jl
cmc
ds
ds
scas
pusha
inc
xchg
popa
aam
add
dec
es
fwait
and
adc
mov
mov
jns
adc
jmp
inc
mov
xor
jmp
inc
lret
in
pushf
in
bound
rcr
cmp
mov
sarb
mov
mov
mov
xor
mov
pusha
je
pop
pop
movsb
divb
and
pop
bound
pop
inc
mov
lret
roll
jmp
std
push
mov
test
imul
sub
je
mov
in
xchg
mov
out
push
ljmp
push
nop
and
mov
push
frstor
out
inc
mov
ds
push
cmpsl
add
movsl
data16
mov
dec
push
sbb
aad
add
cmp
out
movsb
cltd
dec
cmp
push
xor
jl
iret
pop
mov
mov
lret
lret
dec
sbb
jecxz
and
repz
into
pop
xor
sbb
xchg
pop
or
xchg
inc
mov
mov
push
cs
or
pop
loop
mov
pop
fs
add
or
jecxz
sti
sbb
push
push
mov
cs
xor
in
call
mov
seto
test
inc
adc
pop
mov
ret
insl
pop
mov
push
aam
push
repnz
xor
or
mov
pushl
sub
cmpsl
mov
or
add
ds
xchg
cld
pop
sub
out
stc
cmp
out
pop
test
aad
inc
call
and
fisttpll
enter
dec
aad
je
add
icebp
ss
sahf
or
dec
sarl
scas
jo
mov
call
repz
aaa
les
hlt
test
mov
and
cltd
push
jg
push
mov
mov
ficoms
and
mov
cmp
xor
dec
repz
testb
sub
dec
mov
dec
sti
xchg
mov
sub
jecxz
mov
and
fidivs
stos
sbb
jnp
pop
sbb
cmp
frstor
xchg
pop
lahf
cmp
add
cmc
cmp
mov
dec
add
inc
xchg
push
cmp
xchg
or
jae
lahf
outsb
arpl
xlat
inc
add
xor
pop
add
push
pusha
or
mov
mov
insb
aas
fnstcw
repnz
jno
sbb
scas
test
cmpl
aam
mull
into
sub
cwtl
adc
cwtl
mov
icebp
dec
mov
mov
mov
or
or
mov
cwtl
aam
xor
ds
fidivrs
fs
push
dec
in
adc
xor
lds
daa
jb
scas
arpl
push
and
pusha
dec
xchg
sbb
mov
cwtl
in
cmp
xchg
xchg
lods
pop
and
sub
scas
and
outsb
ret
sub
cli
arpl
cmp
dec
mov
pop
cmp
pop
jne
mov
scas
jnp
add
lret
lds
mov
les
dec
iret
aam
sub
pop
fsts
repz
mov
int3
pop
xor
cli
sub
ds
pop
rolb
negl
mov
jecxz
or
movsl
popa
aas
repz
jge
sbb
es
adc
lds
dec
mov
out
add
xchg
mov
sub
xchg
or
mov
push
popa
mov
sub
sbb
minps
or
in
cmpb
testl
sbb
jo
clc
shrl
inc
mov
xor
fwait
aam
rcl
pop
inc
adc
in
jg
sbb
fistpll
inc
test
adc
mov
clc
std
insb
incl
jge
rcl
push
push
daa
sbb
icebp
dec
dec
sub
in
pop
push
icebp
xchg
add
pusha
ret
dec
xchg
shrb
mov
mov
jge
xchg
aaa
adc
pop
xchg
mov
icebp
dec
cmp
js
shll
sbb
xchg
sbb
es
ds
icebp
fsubrl
jecxz
daa
aad
xchg
cmpsb
or
mov
hlt
jns
mov
idivb
jnp
pop
aas
lock
mov
fs
aaa
xorl
dec
out
or
cltd
xchg
sbb
or
mov
insl
and
insb
das
roll
xchg
lret
int3
in
xor
pushf
test
loop
stos
movsl
mov
xor
cmp
sub
cmp
dec
outsl
in
sub
pushf
pop
inc
aas
lcall
jg
mov
xchg
adc
popa
into
cltd
mov
mov
out
fldenv
ss
jns
lods
fldl
cmovb
jge
in
adc
ljmp
jg
and
cmpsl
add
push
fwait
sbb
add
push
fwait
sbb
loop,pt
lock
cmpl
add
mov
rorl
mov
sbb
mov
jp
cld
ret
inc
jb
and
lods
popf
fisubs
inc
jae
pop
loopne
imul
inc
movsb
aad
xchg
jns
ja,pn
daa
ret
aaa
jbe
fcmovne
push
arpl
ja
lcall
stos
push
xor
andb
rep
imul
test
mov
scas
sub
mov
push
std
sub
jle
aad
out
xor
mov
mov
pop
out
int3
ja
push
xchg
repnz
add
jb
movsb
out
jb
daa
pop
test
or
sarl
mov
lods
movq
lds
icebp
lods
les
js
cli
or
and
leave
jle
push
cmp
push
imul
mov
inc
sahf
adc
stos
or
pop
push
mov
mov
aad
cld
gs
or
sub
cwtl
push
fwait
push
popa
mov
jg
lock
pop
add
pop
mov
or
inc
jge
or
mov
cltd
jnp
insb
out
aam
and
mov
stc
push
mov
add
popa
ficoms
lods
xchg
mov
sbb
movsb
dec
pop
and
outsb
and
mov
jb
adc
sti
push
sti
sbb
push
and
jmp
out
lods
dec
cmpl
sahf
push
pop
xorl
lods
jo
sub
inc
notb
mov
sub
push
sti
imul
xlat
imul
push
in
mov
scas
negl
sbb
loope
jb
push
add
lret
mov
xchg
jp
ja
pop
lea
mov
fucomip
jo
mov
fwait
mov
aad
xor
and
nop
adc
adc
repz
js
cwtl
xchg
cmp
xchg
cmp
stos
scas
sub
idivl
js
dec
dec
push
sub
xchg
fldt
test
cmp
xchg
daa
mov
pop
add
cmp
fildl
mulb
pop
pop
mov
lea
push
rol
lds
mov
icebp
pop
adc
out
and
call
cli
mov
and
jns
popf
xchg
lock
fs
push
mov
jno
sub
cmp
popf
pusha
push
shlb
jno
dec
xor
fstpl
or
imull
adc
mov
shrl
dec
stos
add
mov
and
insl
mov
sbb
mov
sub
aas
mov
sub
ficoml
fimuls
pop
mov
jne
xor
sub
mov
adc
mov
movsb
cmpsb
adc
dec
fcmovne
add
pusha
mov
push
jbe
data16
push
push
sbb
inc
sbb
orb
push
insb
or
stos
sbb
popf
inc
xchg
aad
sbb
push
mov
fistpl
add
mov
fnstsw
pop
sbb
addl
adc
pop
sarl
stos
dec
cmpb
jl
fstp
mov
and
xor
decl
and
sbb
shlb
lahf
aaa
cmp
inc
loope
daa
aam
adc
iret
mov
sbb
cmp
insl
inc
mov
outsl
mov
xchg
pop
fistpll
rclb
inc
lea
leave
xor
mul
mov
jg
out
and
sbb
mov
std
dec
loope
cmpb
mov
cld
cmpb
popf
orb
clc
jg
cwtl
sub
cltd
fidivl
shll
pusha
push
int3
int
push
pop
mov
inc
loope
and
popf
gs
sbb
push
std
in
rcrl
ja
sbb
imul
andl
mov
daa
ret
arpl
inc
into
fsubrl
cmpsl
aad
and
dec
sub
dec
adc
data16
cmpl
sbb
inc
sahf
mov
mov
xlat
fiadds
and
jae
xchg
jmp
popa
out
sahf
inc
ficomps
sti
jb
jge
fidivrl
dec
fs
or
adc
cltd
shr
sub
hlt
filds
sub
mov
andl
inc
mov
icebp
mov
in
fwait
pop
aas
dec
mov
cld
das
cmpsl
popf
mov
sbb
pop
nop
and
push
imul
add
sarl
lcall
xlat
jl
sub
xor
shlb
add
addr16
loopne
loope
mov
xchg
repz
ss
fidivl
sub
xlat
enter
das
mov
and
movsb
addr16
adc
or
push
idiv
pop
mov
push
adc
jmp
push
cmpsl
sbb
add
leave
ss
xlat
jmp
xchg
sbb
xchg
cld
in
ret
es
outsb
sub
xor
mov
in
gs
loopne
inc
push
int
push
cmp
fs
mov
push
inc
subl
das
clc
xchg
sub
xlat
add
dec
cmp
push
int
lods
or
enter
into
cmp
jmp
xchg
test
sbb
stos
sub
pop
pop
hlt
mov
lret
push
inc
popa
adc
push
dec
arpl
clc
jp
jmp
cmp
pop
stc
mov
test
sub
xor
dec
mov
sub
movb
adc
mov
sbb
add
mov
or
jb
or
test
int
loopne
sahf
xor
cmpb
sti
rcr
add
jecxz
inc
pusha
adc
iret
fcoml
xor
loopne
sbb
mov
mov
pop
jmp
mov
mov
and
dec
sub
jmp
sub
pushf
addr16
jbe
jmp
dec
and
aam
adc
mov
dec
repz
test
pop
push
iret
into
push
js
or
add
leave
popa
int3
clc
pop
roll
bound
adc
dec
mov
push
pop
mov
mov
xorl
push
cs
dec
bound
sti
stos
scas
mov
cwtl
es
addb
mov
mov
add
jg
daa
push
mov
mov
int3
push
lods
pop
or
lahf
popa
data16
std
adc
iret
push
in
mov
inc
dec
aas
repz
test
xchg
xchg
popa
mov
inc
nop
push
cmpb
shl
out
xchg
push
clc
sub
pop
sub
pop
mov
mov
lret
xor
push
das
mov
dec
popl
mov
clc
mov
or
int3
sub
xchg
and
bound
mov
mov
sbb
bound
scas
pop
cmp
fsubs
aad
mov
arpl
outsl
into
lea
fwait
sbb
push
cli
push
pushf
dec
inc
lds
js
clc
push
das
pop
xorl
inc
mov
in
scas
or
shl
add
jno
and
xchg
cmp
pop
fidivl
pop
fcmovnb
jge
mov
icebp
popa
mov
dec
xchg
out
sbb
es
xor
sbb
outsl
and
out
mov
ret
adc
dec
rclb
call
dec
mov
mov
mov
popa
inc
addr16
or
or
jae
jg
mov
xorl
xor
ljmp
cli
or
les
jne
inc
mov
inc
out
cmc
mov
pushf
ss
subl
push
ficomps
pushf
aas
xchg
lea
xchg
outsb
in
icebp
jp
adc
mov
mov
sub
sbb
cmp
xor
cmpsb
mov
outsb
xchg
out
pop
push
into
push
insl
mov
or
daa
mov
lcall
outsb
ret
push
gs
xor
or
push
out
inc
adc
push
sti
push
xchg
dec
sbb
and
daa
pop
xor
test
loope
out
pop
inc
and
pop
xchg
cmpsb
xlat
xlat
push
fiaddl
dec
dec
scas
lods
lods
dec
pusha
push
iret
push
insl
push
sub
into
notb
push
jp
shr
mov
cltd
loopne
ja
out
or
dec
fs
add
loope
pop
imul
fisttpl
in
mov
pop
daa
insb
popa
pop
js
push
imul
sarb
lret
in
push
cltd
jnp
stos
mov
nop
jnp
insb
clc
xchg
xor
push
mov
sarb
icebp
mov
sbb
jne
and
in
adc
mov
mov
cs
mov
xchg
mul
push
pop
popa
jns
mov
repnz
add
cltd
in
push
inc
out
mov
stos
and
add
or
lock
cmpsb
js
adc
mov
bound
jp
xor
jmp
mov
popf
fs
shl
lock
cmp
push
inc
adc
xor
rclb
mov
and
ret
and
loopne
imul
xchg
mov
mov
mov
bound
inc
and
mov
mov
adc
jb
adc
cli
imul
jle
mov
cmp
stos
mov
mov
mov
push
mov
ljmp
push
xchg
adc
jae
jnp
sub
mov
cmp
add
imul
ljmp
xchg
ss
cmpsb
das
mov
rolb
js
or
xor
scas
js
hlt
inc
in
add
int3
jp
fsubp
jns
imul
inc
jbe,pn
shlb
data16
mov
jle
outsb
pusha
pop
pop
cmpsb
dec
outsl
lock
mov
mov
imul
dec
or
mov
dec
rcll
scas
sbb
divb
xor
inc
sbb
repnz
jns
loopne
mov
lret
pop
imul
cmp
movb
mov
cmp
int
and
mov
mov
pusha
xchg
aam
xor
fs
sbb
cmp
dec
lahf
inc
and
xor
dec
jnp
inc
in
xor
and
dec
inc
inc
push
gs
mov
dec
mov
cmpsb
push
push
or
nop
fs
aad
push
cmp
cmc
pop
push
mov
and
adc
mov
cwtl
pop
cmp
push
lahf
vmread
bound
decl
aam
dec
or
test
mov
cwtl
jg
mov
gs
and
sbb
mov
addr16
pop
push
das
add
addb
adc
adc
ret
jae
daa
out
push
mov
mov
jmp
push
outsb
pop
jmp
push
jp
ret
cmc
xchg
mov
lds
lcall
loope
std
call
sub
pop
addr16
mov
lds
and
or
push
call
inc
push
lock
out
inc
mov
sti
adc
xchg
popa
bound
testb
xchg
in
loop
movsb
mov
jl
pop
fstpt
xor
pop
mov
lahf
jmp
xchg
rol
in
and
jge
sbb
jge
pop
push
lret
inc
jl
bound
sub
into
sub
test
fs
into
adc
sub
sbb
cmpsl
adc
and
push
sbb
call
push
gs
fs
sbb
dec
xchg
add
sbb
pop
shlb
aam
pusha
lahf
jg
ss
sarl
in
loope
xlat
jae
jg
xor
mov
xor
mov
sbbl
addr16
push
out
jecxz
push
mov
inc
pop
inc
sub
jle
adc
xorb
loope
repnz
in
jecxz
insb
pop
sbb
in
or
inc
add
mov
scas
add
pop
inc
fdiv
lea
bound
sbb
or
out
in
inc
shll
dec
jno
mov
mov
jp
shrl
jae
push
scas
mov
or
jp
add
inc
pop
insl
xchg
fisubs
dec
stos
icebp
hlt
mov
in
pop
bswap
push
test
lods
mov
sbb
test
pop
mov
lock
cmp
subb
pop
mov
loop
mov
mov
out
jp
scas
das
icebp
cmp
mov
cmp
ficomps
sarl
or
mov
mov
xlat
push
out
or
mov
mov
jmp
sub
sub
test
pushf
xchg
repz
pop
inc
fsts
ret
addr16
icebp
xchg
test
les
pop
cwtl
xchg
mull
pop
jecxz
pop
inc
mov
out
aad
fsubs
mov
outsl
je
test
pop
pusha
jns
orb
je
rolb
call
dec
or
stc
jmp
add
or
push
stc
shr
or
xor
jnp
lea
push
fldenv
xchg
pop
push
movsb
add
shll
test
test
adcb
fimull
test
in
sub
xchg
adc
jmp
gs
loopne
or
cli
xor
hlt
neg
pop
loope
pop
pushf
sbb
xchg
cmpl
jl
lods
push
jae
in
jg
es
jns
mov
adcl
cwtl
cmp
xchg
fisubs
test
push
fildll
xchg
push
jg
aas
push
pop
inc
pop
fwait
mov
xor
ja
je
es
pop
dec
inc
add
iret
pop
out
inc
mov
arpl
mov
test
mov
fisttpl
xor
xchg
inc
add
or
out
cmp
lahf
pop
rolb
pop
mov
inc
hlt
xor
jne
mov
testl
aaa
inc
dec
xor
push
repnz
lds
and
mov
int
pop
sbb
shrl
enter
outsl
push
mov
add
movsb
mov
cmp
ret
xchg
int3
jecxz
cmp
push
adc
out
fwait
jp
fisttpl
or
loopne
dec
sub
leave
push
lock
xor
pop
data16
imul
lds
stc
pop
das
pop
and
addr16
push
mov
fcmovbe
adc
xchg
sarb
mov
jno
enter
and
xchg
testb
cmc
mov
and
in
popa
push
mov
fldl
mov
mov
push
cmp
sub
mov
cli
xchg
xor
inc
call
enter
jno
into
mov
mov
jno
int
nop
dec
leave
das
imul
lcall
vandnps
xor
or
fildl
call
dec
or
jge
sub
in
mov
cmpsb
clc
mov
imul
fildl
push
jno
sub
fdivl
das
xchg
push
mov
scas
lea
imul
aad
lret
adcl
jbe
int
adc
movl
jmp
in
lahf
sub
cwtl
jbe
hlt
xor
andb
sub
push
inc
aad
lcall
repz
das
adc
imul
inc
and
data16
repz
cmp
scas
repz
cmpsb
xchg
pop
pusha
stc
leave
cltd
cld
xor
lea
fucom
ja
inc
pop
inc
mov
adc
jmp
pop
les
add
sub
add
or
scas
jp
jnp
mov
movsl
cwtl
gs
cmp
movsb
ds
dec
jae
in
add
sbb
jp
mov
sbb
sub
addr16
pop
jns
clc
adc
scas
clc
mov
divl
loop
ja
imul
lahf
mov
adc
loope
dec
jecxz
orb
mov
cmp
mov
loop
clc
xchg
xchg
inc
clc
shl
add
xor
mov
fidivs
dec
std
jno
mov
outsb
es
pop
xor
pop
pop
dec
add
jno
cwtl
lret
ja
pop
jg
orl
das
out
aad
xchg
jo
xchg
out
push
mov
jne
call
jbe
dec
dec
jnp
fstp
or
xor
mov
mov
dec
jp
movl
clc
and
cltd
adc
out
pushl
loope
cli
pop
push
adc
hlt
cmp
cmp
mov
mov
rcrb
adc
add
cs
jl
roll
dec
xchg
pop
xor
mov
nop
cmc
andl
lds
and
arpl
push
inc
dec
sahf
and
inc
daa
sub
push
pop
outsb
mov
mov
inc
dec
push
adc
add
lods
loop
pop
dec
xadd
dec
pop
bnd
lods
repz
sbb
inc
mov
arpl
loopne
jo
mov
shrl
adc
call
inc
fs
sbb
adc
fdivl
sahf
inc
hlt
mov
sub
in
xchg
ljmp
cmc
nop
mov
outsb
mov
dec
into
in
insb
repz
or
cmp
push
pop
in
call
std
push
jno
lcall
add
mov
out
lahf
sbb
mov
pop
mov
and
xchg
mov
out
xchg
pop
ljmp
inc
mov
cmp
and
mov
cmp
jmp
mov
repz
xlat
data16
dec
adc
in
pushf
mov
pop
int
sub
jp
xor
mov
jge
jno
xor
adc
mov
sbb
aas
mov
push
or
sbb
std
sub
pop
inc
mov
lods
mov
mov
and
pop
mov
dec
mov
gs
movsl
gs
psubw
or
sub
leave
and
imull
es
dec
or
mov
mov
sarl
xchg
cmp
xchg
test
and
movsl
testl
xor
imul
ja
xchg
test
iret
sbbl
dec
adc
lcall
xchg
push
imul
out
fldt
sahf
fisubrl
jnp
fcomp
mov
fdivrs
pop
adc
jge
in
hlt
pop
gs
sub
jp
mov
sub
rcrb
ss
hlt
test
int3
popa
loope
mov
pop
pop
jns
lea
xchg
out
rcr
ficoms
lods
fidivrl
push
mov
ja
aas
pop
push
lahf
xchg
sbb
adc
push
cli
and
cld
lret
insl
jno
lock
mov
repnz
in
dec
imul
aas
dec
cmp
inc
fdivrl
jae
in
daa
addl
iret
xchg
out
clc
add
arpl
divb
sbb
jp
mov
mov
xchg
add
aam
lods
mov
xchg
mov
mov
fwait
and
adc
xor
ds
in
ret
and
cltd
and
sub
jb
pop
dec
shl
clc
loopne
rcrb
or
je
dec
sbb
fcomi
jp
sbb
fnstenv
out
add
lret
inc
repz
cld
lea
and
push
inc
sub
daa
xlat
mov
mov
inc
aad
mov
mov
pop
xlat
bound
push
and
cwtl
sub
adc
idivl
adc
repnz
aas
xchg
ljmp
out
addr16
push
dec
cli
es
push
and
aas
jl
lods
push
nop
xor
jne
loop
jl
jecxz
call
aas
dec
inc
sub
shrb
ficompl
repnz
stos
sub
popf
sub
inc
sbb
adc
mov
out
mov
xchg
or
dec
cmp
dec
fsts
sub
call
lahf
int3
pop
mov
jns
fnstsw
mov
out
fldt
xchg
xchg
int3
cmpsb
shrl
xor
push
xchg
repz
fcmovu
jo
sbbl
pop
hlt
cmc
sbb
lds
adc
jne
jns
lods
push
iret
insl
lret
int
jle
rol
rolw
pop
lcall
adc
jg
shll
in
insl
mov
sbb
push
dec
sti
xor
ja
pop
dec
stos
adc
lods
mov
dec
loope
inc
shll
movsb
lds
sub
cmp
and
pop
sbb
imul
stos
out
mov
xor
dec
out
mov
xor
sbb
sub
sbb
inc
repnz
inc
sbb
mov
cwtl
out
lahf
jne
enter
jo
mov
lock
stos
aad
lcall
pop
call
icebp
testb
pop
in
lret
ja
lret
ss
sub
and
fdivrs
fldt
int3
sbb
lcall
xchg
and
or
xchg
cmp
jle
pop
repz
out
xchg
enter
mov
cmp
xchg
inc
push
mov
add
popa
arpl
lods
in
xor
inc
and
push
mov
stos
fcoml
lea
sbb
mov
cmp
test
movsb
pcmpeqd
jbe
xlat
nop
iret
and
cmpsb
cmp
in
push
push
sbb
sbb
adc
push
or
pop
and
cmp
les
and
or
outsb
fsubs
fwait
lahf
and
adc
lea
das
aas
sbb
dec
lcall
mov
xchg
inc
push
push
cwtl
cmp
into
pop
xchg
clc
bound
pop
jns
setno
pop
aam
lock
xor
insb
ja
pop
sub
add
xchg
imul
sahf
inc
icebp
lcall
add
cmc
dec
xor
aam
cmp
pushf
push
test
pop
insl
jb
movsl
mov
sbb
test
cs
push
gs
mov
cs
inc
and
jae
xchg
pushf
lcall
add
or
nop
mov
pop
ret
push
ret
mov
sbb
das
fdivr
jo
cs
jge
rorl
pop
lahf
mov
inc
add
fmulp
or
jle
fidivl
ljmp
mov
xor
sub
std
or
scas
xor
aas
orl
gs
add
andb
sbb
outsb
push
mov
fsubrs
lret
jl
sub
jo
aas
xchg
pop
mulb
cld
repz
imul
mov
push
les
pop
xchg
or
jb
pop
lahf
mov
add
xor
and
mov
shll
mov
jae
mov
push
push
dec
pop
xchg
mov
push
pop
cli
mov
or
cmpsb
inc
sbb
fistps
xchg
lret
add
jmp
sub
les
cwtl
cli
inc
clc
add
sub
jne
xchg
aas
and
lret
and
xor
lcall
xor
ret
xorl
lahf
repnz
and
inc
sbb
out
push
add
insb
out
ja
out
jb
scas
xchg
mov
dec
addr16
js
lea
lret
jp
repz
mov
loop
dec
cmp
cmpl
xchg
push
in
lret
xchg
adc
arpl
sbb
fnstcw
add
ja
clc
repnz
mov
fsubr
ds
out
in
add
push
mov
push
out
retw
pop
dec
leave
pop
sbb
insb
mov
inc
push
adc
cmpsb
jmp
xchg
xchg
in
cvtps2pi
std
add
xor
lcall
sub
pop
xor
incb
addr16
pop
pop
mov
subb
arpl
stc
mov
arpl
popf
cmp
jbe
xor
add
rcll
cmpsb
arpl
loop
test
mov
sti
xor
int
pop
shl
cmp
mov
or
inc
in
jb
push
cmc
jmp
leave
dec
adc
lods
pop
inc
cmp
xchg
sbb
dec
subb
in
scas
push
idivb
push
or
fildll
jp
inc
ds
addr16
in
fadds
ficoml
ficomps
xor
adc
mov
cmpsb
pop
mov
xor
loope
push
pop
fdivs
test
stos
xchg
xor
and
push
stos
bound
inc
mov
push
jle
and
in
orb
adc
xchg
orb
xorl
push
adc
cmp
dec
xor
cmc
jne
jmp
cmc
nop
jmp
ljmp
iret
pushf
or
call
sub
inc
push
ja
mov
insb
jl
stc
ja,pn
cltd
adc
jp
push
call
inc
or
or
cld
adc
outsb
sbb
xchg
jne
jb
inc
bound
sbb
decl
je
fildll
aas
cli
nop
inc
or
xor
mov
cmpsb
imul
data16
dec
cmp
fnstcw
cs
jnp
mov
or
stos
xor
push
pop
jb
mov
push
jmp
xchg
fmul
xorps
arpl
adc
inc
outsl
movsl
sub
leave
mov
xchg
jbe
xchg
jmp
mov
pushf
or
iret
inc
dec
pop
stos
xor
dec
aam
jl
iret
lcall
scas
imull
xor
cmp
dec
xor
push
out
out
arpl
lods
lods
xchg
adc
sbb
and
aad
push
mov
adc
out
push
lcall
xchg
sub
aad
cmpsl
nop
inc
xchg
dec
pop
rcl
sub
insb
add
les
dec
je
xor
lods
mov
aaa
xchg
mov
mov
push
xchg
push
mov
out
dec
mov
fildl
repnz
and
sub
popf
imul
addr16
repnz
enter
int
nop
loop
lea
lods
loop
lahf
loope
data16
lods
in
cmpsl
lock
popa
xchg
adc
arpl
xchg
or
push
adc
mov
and
insl
jne
sub
sbb
jne
and
imul
mov
ret
int3
sahf
jmp
repnz
sbb
cmp
sbbb
stc
dec
dec
lods
inc
sub
sti
mov
aaa
sub
sbb
ficompl
mov
xor
adc
daa
mov
aas
dec
lds
pop
movl
popf
fistps
and
movsl
ret
fwait
sub
addb
sbb
or
test
data16
test
loop
das
and
mov
jnp
mov
rolb
std
std
sbb
fstpl
aad
mov
cmp
movsl
cmp
loope
addb
pop
mov
rolb
sarl
sbb
inc
jp
pop
mov
lods
jl
push
or
jmp
mov
xor
imul
mov
xchg
aam
orb
sti
mov
pop
push
xor
sub
push
aad
aam
lea
mov
mov
xlat
mov
lock
clc
test
ljmp
inc
sub
movsl
pop
and
cmpsl
lahf
out
lcall
jecxz
stos
fistpll
mov
fldt
pusha
mov
aaa
inc
es
lret
jge
mov
pop
xor
aas
jge
push
dec
mov
and
push
mov
sbb
add
xor
loopne
fstpl
adc
lods
cld
mov
or
dec
adcb
sub
or
clc
push
xor
inc
mov
negl
xchg
hlt
aad
ret
fnstcw
pop
sub
jle
push
xchg
aad
sti
rolb
inc
imul
mov
pop
adc
mov
or
out
pop
popa
mov
stc
jl
mov
in
inc
fs
inc
xlat
adc
icebp
dec
imul
sub
es
dec
push
ja
scas
adc
popa
gs
xor
shll
arpl
xor
push
gs
cltd
push
scas
and
data16
in
popf
dec
sub
loope
mov
xchg
subb
in
add
inc
in
sbb
into
movsb
cmp
lcall
xchg
or
sti
mov
es
cmp
or
frstor
sti
cmpsl
dec
xchg
in
dec
nop
mov
inc
mov
shll
inc
es
cmp
lret
pop
inc
loop
jp
ret
xchg
push
int3
mov
insl
ret
sub
js
mov
adc
unpckhps
dec
pop
cmc
xchg
subb
lret
sti
push
daa
imul
adc
sub
ja
rcll
pop
push
es
dec
sti
out
push
aam
dec
mov
mov
cli
pop
subl
jb
xchg
imul
insl
daa
mov
into
fildl
pop
mov
inc
sahf
xor
hlt
je
roll
call
add
pop
push
mov
xchg
xchg
and
pushf
adc
mov
loop
repnz
pop
push
and
fmull
lret
imul
jge
frstor
pop
loop
ds
pop
rol
imul
loop
jae
mov
mov
mov
es
pop
sbb
jp
test
mov
shrl
sub
test
ret
addb
mov
mov
push
out
cmpsl
xchg
gs
inc
cmc
cltd
movsb
pop
mov
mov
xchg
and
dec
adc
jecxz
or
push
out
or
int3
sti
rcrb
dec
dec
xor
popf
inc
cmp
cmp
inc
iret
sub
sub
push
ret
scas
xchg
or
ljmp
mov
leave
fcoms
push
pop
mov
or
lret
cmp
and
fstpt
jmp
lds
cmp
das
and
xlat
pop
inc
out
scas
push
lea
test
adc
xor
mov
and
nop
in
fisttpl
sti
and
cmp
and
xor
lcall
loopne
sbbl
mov
in
addr16
and
sbb
inc
push
shrl
fildll
test
fs
and
jle
mov
push
sahf
fcompl
mov
dec
data16
push
xor
sbb
cmc
mov
pop
lock
push
push
stos
popf
jle
push
inc
outsl
stos
lea
push
repz
idivl
adc
push
add
sbb
sub
gs
jbe
add
cmp
and
push
mov
aad
jmp
add
jge,pt
dec
pop
and
rclb
inc
xor
in
addr16
jmp
loope
jl
lock
test
out
inc
or
cli
shrl
mov
cmp
in
fldl
sub
push
and
push
adc
pushf
sahf
push
lock
pop
mov
mov
loope
add
inc
add
inc
lret
addr16
outsl
shl
cld
inc
add
mov
xchg
sub
sahf
arpl
aam
mov
lods
clc
mov
cs
call
and
xor
fisttpl
mov
adc
push
jno
mov
push
sbb
loopne
mov
jmp
shlb
popa
dec
inc
cmp
mov
push
pop
hlt
loopne
insb
dec
repnz
and
roll
pop
cs
mov
jo
mov
nop
mov
push
xchg
push
sbb
sub
pusha
pop
add
dec
cmc
pop
dec
xchg
cmpsb
shll
jp
lcall
cmc
pop
mov
jne
cmp
mov
lods
test
bound
or
add
lods
das
inc
sbb
subb
aam
nop
xchg
jbe
nop
ret
imul
cmp
les
pop
mov
push
xchg
adc
movsl
sub
push
fxtract
mov
scas
sti
adc
xor
aad
lcall
mov
fwait
pop
inc
sub
xchg
jns
xor
iret
inc
add
cmp
push
repnz
movb
pop
xor
test
sbb
xor
add
icebp
fildl
inc
push
iret
test
mull
mov
push
outsb
fs
pop
orb
xorl
popf
inc
iret
into
mov
inc
mov
push
jmp
hlt
out
mov
adc
and
pop
es
mov
and
pop
or
repz
cmp
loop
mov
push
jb
lcall
push
sahf
les
xor
call
test
jge
adc
icebp
aaa
insl
mov
in
mov
mov
sbb
test
rcl
or
push
mov
add
or
movsb
sub
jg
fsin
test
sbb
scas
hlt
dec
jns
xchg
popa
jg
mov
push
dec
loopne
jecxz
dec
sbb
mov
pop
sarb
jb
fcoml
xor
xchg
rdmsr
fsubl
jle
lds
adc
xor
loopne
or
hlt
cmp
adc
lods
dec
cmpsb
shrb
daa
iret
jmp
dec
jo
dec
mov
push
fs
push
cmp
xchg
mov
loop
inc
shl
in
test
mov
lret
add
movsb
rcll
lahf
sub
sbbb
sbb
inc
pop
lds
mov
mov
mov
nop
pusha
sti
ja
sbb
test
inc
nop
mov
cvtdq2ps
xor
cmpb
lods
mov
mov
addr16
movsb
push
pop
and
ret
jb
fcomps
push
pop
jae
in
int
dec
or
mov
or
mov
cmp
or
sub
or
fdivrp
imul
push
mov
pusha
add
mov
repz
ds
cmc
adc
sub
inc
jb
xor
cmpsl
add
fwait
test
and
shlb
insb
movsl
mov
add
sub
xor
adc
dec
push
mov
dec
pop
dec
mov
mov
jge
or
pop
subl
movaps
mov
insb
mov
mov
in
adc
jg
sub
inc
sbb
and
xchg
test
dec
hlt
cmpsb
rorb
sahf
pushf
pop
inc
enter
icebp
dec
pop
rorl
lret
rclb
push
int
dec
xor
popa
jge
sbb
lods
sub
leave
fsubl
iret
push
pop
add
mov
dec
sbb
cmp
jae
mov
push
mov
mov
or
iret
stos
int3
mov
xor
or
pop
add
ficomps
fwait
sbb
and
outsl
mov
pop
dec
xor
xor
mov
mov
imulb
fisubl
fstpt
cmp
mov
pop
fisttpll
pop
jnp
into
ljmp
cmp
loope
dec
mov
test
out
mov
sub
sahf
push
inc
xchg
mov
xchg
js
adc
pushl
hlt
andl
xchg
jbe
jbe
jne
pop
push
imul
fstps
mov
sub
add
mov
sbb
popa
and
jmp
leave
jp
jecxz
and
pop
xchg
jne
in
sahf
mov
leave
cmp
rcrb
ss
pop
data16
xchg
pop
sbb
jnp
xchg
sub
or
insb
add
cltd
adc
dec
mov
fnstsw
add
clc
jnp
cmc
test
fmull
push
fcmovbe
inc
add
test
add
jno
clc
ret
fsts
jl
push
mov
and
sbb
xlat
add
loope
testl
in
outsb
inc
cli
mov
aam
mov
xchg
push
pop
mov
repz
inc
and
andb
jo
xchg
into
or
xchg
dec
cmp
aas
lahf
and
rcr
out
divb
nop
dec
or
dec
es
cmp
dec
loopew
hlt
hlt
out
out
pop
in
loopne
cs
lock
inc
sbb
inc
mov
pop
adc
xor
cmc
fsubrs
fld
hlt
mov
pushf
in
imul
cmp
sub
outsl
inc
mov
xor
pop
adc
std
and
or
mov
inc
and
sub
push
xchg
pop
int3
and
and
loope
pop
dec
in
or
in
inc
shlb
in
sbb
punpckhwd
data16
and
es
std
jno
jp
imul
pop
imul
sub
xchg
hlt
and
fwait
nop
scas
fisttpll
es
pusha
fstp
ret
pop
inc
rcll
push
xchg
sti
cmpsl
cmpsl
xor
mov
mov
add
or
sahf
pop
sarb
jle
jbe
clc
stc
shrb
pushf
pop
das
imul
jne
xchg
inc
fbld
add
jmp
shlb
jne
mov
notl
out
mov
xor
inc
inc
push
lock
mov
rcrl
jae
loopne
call
test
mov
loope
or
xchg
lret
or
fcomp
fdivs
inc
and
jne
sub
jbe
out
jb
stc
out
aam
xor
sub
adc
loop
jno
call
sub
add
jb
xor
dec
push
lret
int
jl
inc
data16
aam
jne
xlat
fsubs
push
jne
sub
icebp
aas
push
xor
in
aas
adc
dec
dec
push
fnstenv
icebp
cltd
lret
mov
xlat
fst
jle
inc
sub
popf
dec
mov
push
lcall
pop
arpl
daa
mov
cmp
add
or
or
lods
sbb
fcomp
add
popf
and
aad
fwait
jg
lret
pop
jno
ja
dec
outsb
xchg
sub
mov
xchg
in
cmp
mov
push
mov
or
shll
push
and
fwait
mulb
in
lret
out
stc
mov
mov
js
mov
ljmp
cmp
rcr
imul
inc
push
mov
sub
dec
jmp
jno
sti
jo
sbb
adc
sub
negb
in
mov
inc
sbb
inc
cmp
hlt
aaa
jbe
push
or
mov
cmc
jp
call
mov
shl
sbb
pop
mov
in
lock
jb
jmp
and
pop
pop
or
outsl
mov
popfw
and
and
clc
stos
loope
lock
lock
inc
mov
push
dec
mov
sub
iret
fwait
sub
in
pop
mov
xor
int3
std
scas
cwtl
ljmp
jp
aad
xlat
lock
or
cltd
sbb
pop
imul
fsubrl
dec
aaa
out
lret
ja
pop
loope
inc
sbb
mov
mov
jb
cmc
sbb
add
pop
dec
imul
fdivr
call
lahf
cmpsl
pop
sbb
pop
mov
mov
das
enter
push
sahf
push
fldenv
inc
loope
sbb
test
mov
mov
fistpll
pop
sbb
add
cltd
mov
in
jecxz
mov
inc
mov
insb
popa
ljmp
cmp
add
ljmp
add
repnz
push
cmp
arpl
lds
dec
adc
jecxz
iret
pop
jns
clc
cmp
mov
push
or
idivb
ds
mov
iret
cwtl
mov
mov
jl
inc
push
add
mull
test
into
rol
in
jno
xlat
lea
cmc
xlat
xchg
pop
movsb
ficoms
sub
es
bound
push
stos
hlt
jg
or
inc
inc
pop
cmp
inc
orl
xor
mov
sub
test
arpl
pushf
mov
xlat
pop
xor
aad
das
push
mov
in
xchg
inc
testl
mov
in
scas
addr16
or
lahf
add
popa
inc
xchg
lock
sub
mov
test
lret
stc
loopne
adc
inc
and
outsb
stos
mov
int3
in
lods
mov
jo
push
sub
divl
mov
jno
out
jl
cltd
xor
mov
movsl
mov
in
clc
cs
fists
testb
inc
pusha
pop
pop
repz
or
adc
push
adcl
push
mov
xor
pop
pop
nop
mov
mov
mov
and
xor
aas
adc
xchg
out
push
sub
mov
push
pop
dec
ljmp
sub
fdivl
pop
push
lods
adc
jle
jl
pop
call
mov
or
gs
add
sbb
pop
xor
add
negl
adc
jmp
pop
shll
loopne
pop
aam
mov
frstor
testl
lea
popa
lcall
mov
inc
mov
hlt
cmp
pop
inc
cld
mov
xchg
mov
jecxz
jg
jne
icebp
cmp
or
ret
dec
push
push
jge
sbb
mov
rorb
out
and
lcall
repnz
test
or
jno
xchg
push
cmp
mov
mov
int
in
out
and
movsl
push
out
xchg
push
test
popa
push
loop
cltd
or
sub
dec
cmpsl
pop
test
push
inc
lss
jmp
lods
fstl
jbe
xchg
shrb
xor
pop
sbb
rclb
lea
flds
loopne
inc
mov
data16
cmp
and
lock
jno
sbb
test
push
mull
mov
lock
mov
push
or
clc
xor
das
sub
into
push
imul
cld
push
cld
sbb
out
int
shlb
push
xor
iret
mov
sbb
in
mov
sub
adc
inc
dec
mov
sahf
addr16
fwait
out
cmpsl
sbb
das
addps
cmp
loopne
mov
out
mov
inc
jb
add
adc
and
inc
dec
xchg
aas
call
insl
sub
shlb
aam
lret
or
iret
faddl
pop
sub
add
rcrl
imul
stc
lcall
inc
inc
outsb
mov
clc
cs
and
sub
mov
cld
clc
sbb
push
xchg
insl
xor
sahf
push
rorl
add
push
xor
mov
adc
adc
jnp
and
jmp
sar
ret
fwait
popf
inc
jmp
icebp
in
stos
dec
push
lcall
jno
pop
push
mov
mov
mov
aad
rcrl
pop
sub
mov
add
repz
adc
xchg
popf
mov
clc
repz
ret
js
lcall
lds
scas
and
ljmp
ret
nop
inc
jl
adc
call
test
and
pop
fisubrs
insb
iret
add
push
out
scas
sbb
int
ljmp
push
jne
fldenv
mov
xchg
push
pop
aaa
cmp
fwait
lods
inc
mov
ror
ljmp
into
out
or
jp
cwtl
or
ds
sbb
inc
jne
or
mov
sbb
inc
jne
in
xchg
sub
add
or
mov
pop
imul
insb
mov
enter
mov
push
sub
repz
fs
in
movsl
ss
push
inc
pop
lods
into
scas
xor
and
test
mov
push
scas
enter
or
xor
fistps
test
int3
gs
and
cld
add
pushf
jbe
adc
fwait
cs
mov
or
pop
pop
insl
xor
fs
mov
and
xchg
lds
mov
iret
cli
sti
inc
jo
bound
sub
sbb
push
dec
xor
lds
aad
lcall
ljmp
xchg
xchg
mov
cmp
mov
jecxz
cmpsl
lock
sbbb
adc
aas
xor
lea
js
sbb
sub
push
mov
mov
movsb
jmp
mov
mov
push
out
loop
inc
jns
out
lret
sbb
cmp
cmp
fs
mov
cmc
jno
lock
push
hlt
adc
popa
cmp
rcll
dec
test
sbb
js
and
ja
into
dec
jbe
and
pop
xchg
mov
mov
mov
mov
out
cmpsb
push
hlt
outsb
mov
or
rorl
jg
movsb
bound
jns
xchg
dec
incl
ljmp
fucom
jmp
mov
mov
mov
lahf
in
lahf
stos
pop
add
mov
jle
mov
lcall
inc
mov
cmp
jp
mov
lock
sbb
inc
add
push
cmp
or
sarb
xor
imul
sub
je
mov
push
xor
inc
lods
fs
jne
adc
dec
xor
push
jmp
cmc
cmpsb
das
aad
xchg
imul
xchg
aaa
dec
flds
jmp
cmpb
xchg
jmp
fsts
mov
push
inc
in
test
std
fidivrl
and
and
int3
inc
cmp
mov
inc
fildll
or
push
mov
sbb
xor
fldt
or
ja
fdiv
jns
xchg
rorb
ljmp
mov
cli
dec
dec
add
mov
jbe
stc
xlat
xor
or
xor
ret
jg
fwait
scas
shll
cs
push
jmp
sub
sub
xchg
mov
call
stc
jae
and
inc
and
dec
ljmp
or
xchg
call
pushf
push
sarl
imul
or
lods
and
jbe
out
xchg
xchg
lahf
push
cmp
and
aad
data16
and
sub
pop
fcom
xchg
ja
movsb
xor
shrb
lea
ja
xchg
xor
fistpl
mov
aaa
js
shlb
xor
xchg
je
pop
ljmp
push
sub
repz
xor
pop
je
xchg
xchg
mov
push
sub
mov
adc
cmp
sbb
xor
pop
mov
ljmp
mov
adc
adc
ret
lret
and
aam
jo
cs
popf
loope
sub
popf
sahf
mov
jno
sub
or
push
mov
push
push
pop
push
mov
daa
jl
outsb
pop
and
add
lahf
mov
inc
mov
push
movsb
or
icebp
inc
pop
push
push
pusha
bound
mov
sbb
clc
pop
sti
repz
sub
pop
lods
xor
sub
pop
mov
push
mov
stc
das
or
mov
js
cmp
xlat
push
add
cmc
inc
mov
test
hlt
lods
xor
and
mov
dec
and
dec
and
aaa
add
jno
push
int3
das
test
je
push
cltd
daa
gs
loopne
cwtl
sub
nop
lcall
inc
sbb
jg
cs
es
and
sbbl
xchg
insl
cmp
pop
xchg
out
xlat
test
xlat
jno
pop
jge
dec
sub
xchg
adc
cmp
outsb
push
or
xor
fwait
or
test
bound
push
fdivr
in
inc
push
out
xor
das
mov
pop
and
mov
cs
mov
push
lcall
aam
pusha
cmp
iret
push
lods
shlb
jae
or
pushf
mov
rorl
aam
sbb
inc
es
int3
and
sub
in
jg
and
cmp
pusha
mov
lahf
mov
aas
mov
fisttpl
and
lds
lea
mov
xchg
sub
or
or
mov
and
ror
xchg
scas
test
inc
push
jno
sbb
xchg
lock
iret
fldt
mov
into
mov
fimuls
cltd
or
cmc
pop
je
mov
mov
push
pop
xor
mov
mov
movsl
test
gs
insl
cmpsl
push
sub
adc
cmpsl
nop
jno
mov
dec
mov
iret
insb
cld
movsb
loop
sbb
imul
movl
clc
mov
frstor
sub
movsl
dec
mov
push
movsl
mov
rcrb
push
pusha
jbe
iret
add
xchg
loopne
lock
adc
fcoml
xor
bound
cmc
push
mov
popf
push
outsb
mov
cwtl
xor
aas
mov
xor
in
pop
loope
push
std
fisubs
sarb
sbb
clc
jl
sub
pop
in
aaa
dec
push
js
cwtl
xor
aam
adc
pop
into
lea
pushf
xor
sbb
and
add
mov
es
pop
push
dec
lret
mov
arpl
push
addb
pop
hlt
pop
je
pop
stc
insl
pop
pusha
in
xlat
push
cmp
inc
inc
lret
imul
cmpsb
add
cmp
mov
insb
popa
fsubrp
loop
lret
ret
lock
add
xor
mov
mov
sti
daa
pop
mov
gs
inc
push
push
cmp
pusha
sub
mov
fsts
or
popa
out
jo
cld
lods
sub
das
xor
push
push
ljmp
pushf
pop
enter
sub
add
fsubrp
ficoml
cltd
cmp
sbb
or
test
imul
cmp
push
lret
or
mov
lods
testl
xlat
es
xchg
xor
test
push
mov
popa
sbb
mov
ret
jnp
arpl
sar
daa
hlt
mov
out
lock
or
mov
test
out
mov
adc
scas
dec
fildll
dec
outsb
movsb
xchg
clc
mov
sbb
and
addb
popa
push
jnp
push
push
ja
push
cmc
ja
scas
movsb
push
shll
push
insb
pop
and
pop
test
jno
or
cmp
xor
ret
loop
jge
inc
data16
and
fsubrl
fisttpll
xor
jmp
fs
loope
xchg
movsl
ss
sbb
les
ret
stc
insb
mov
mov
mov
and
pushf
test
push
sbb
sub
mov
mov
jle
mov
popa
cmpsl
loop
cld
adc
fdivl
hlt
mov
xchg
out
stos
or
and
cmpsb
xor
loopne
scas
adcb
add
sarb
push
mov
call
jge
rcrl
push
daa
mov
jns
push
mov
mov
mov
mov
outsb
loopne
leave
inc
and
xchg
push
and
add
ret
pop
fidivs
hlt
cmp
ret
les
fiadds
mov
and
popa
jmp
push
xchg
or
ficomps
cmp
repnz
loopne
mov
mov
mov
and
jae
mov
jne
loopne
jecxz
aaa
lea
inc
cwtl
int
dec
arpl
out
aas
push
leave
jno
fistpl
sub
mov
push
sub
insb
dec
scas
stc
inc
and
adc
ret
aas
add
cmp
jp
xchg
and
mov
mov
fs
ret
adc
addr16
and
outsl
fwait
out
pushf
pop
ficomps
and
mov
pushf
mov
mov
mov
cmp
inc
and
pop
xor
pop
push
sti
fildl
loopne
stos
xor
sbb
lahf
int3
mov
loopne
lods
cmp
pusha
mov
in
or
arpl
and
dec
xchg
loop
mov
iret
push
roll
fimull
hlt
mov
jg
rorl
xorb
pop
sub
inc
dec
test
lods
sahf
push
mov
popa
iret
jl
test
bound
dec
outsl
testl
stos
and
jb
test
and
test
arpl
fbld
movsl
mov
push
out
mov
in
icebp
addr16
cmp
mov
out
cwtl
ret
sub
push
push
mov
inc
ja
mov
adc
dec
push
bound
cmpsl
cmp
enter
insl
xchg
bound
pop
addl
cld
lock
jo
inc
hlt
jo
xor
inc
icebp
pop
insb
daa
fdivl
add
xchg
xchg
rorb
push
clc
ret
fdiv
mov
cmpsl
or
push
inc
xlat
stos
mov
jbe
inc
repz
inc
fdivr
cwtl
lods
outsl
mov
add
and
jmp
mov
js
pop
jmp
sbb
cmp
cs
xor
fidivs
push
xchg
or
movsb
push
sbb
push
mov
addr16
fidivl
xor
in
insb
lahf
aaa
rorl
xchg
cld
arpl
loopne
mov
dec
int3
arpl
mov
push
cli
push
inc
sti
adc
add
fbstp
and
in
sub
cmc
sahf
dec
repz
out
jnp
lcall
mov
popa
outsb
mov
jno
dec
push
mov
pop
cltd
out
cld
xchg
and
mov
inc
fldl
cmp
scas
pusha
inc
lea
jle
ret
int3
or
dec
pop
out
mov
mov
movsb
xor
cmp
loope
dec
mov
or
mov
dec
popf
xor
push
xbegin
sub
xor
xlat
inc
xchg
jp
repz
cmpsl
pop
stos
push
loopne
add
jg
test
xchg
pop
add
adc
lcall
in
outsl
lea
jmp
xor
ds
dec
pop
mov
loopne
aas
sbb
data16
jo
fldl
push
mov
mulb
xor
iret
je
ficomps
inc
jle
sarb
shl
and
adc
and
xor
pop
sarl
fwait
imul
and
jbe
ret
ret
loopne
das
jge
sbb
aad
mov
xchg
les
lea
or
aad
mov
ljmp
cmp
aaa
jo
call
cs
jns
ret
cli
je
aaa
dec
es
int
xchg
xor
push
int3
mov
div
add
sub
mov
push
xor
cmpsb
pop
xchg
mov
lods
adc
mov
sub
mov
xor
sbb
cmp
mov
lret
lret
jbe
inc
push
mov
int3
sahf
scas
xlat
push
ss
ficoml
movsb
icebp
bound
scas
push
test
repnz
imul
pop
mov
jnp
push
mov
out
mov
dec
sbb
into
cld
int3
nop/reserved
rorl
cmp
pushf
mov
xchg
cmp
in
add
inc
in
xchg
mov
aad
mov
xlat
lds
pop
and
popf
pushf
mov
inc
sbb
cltd
shlb
dec
jge
inc
mov
adc
xchg
testb
faddl
jne
aad
xchg
test
jecxz
jl
adc
popf
pop
dec
jns
daa
ror
push
mov
jb
push
lods
inc
xchg
and
cmpsl
push
push
fcompl
leave
mov
pop
movsl
add
int3
cmp
fcom
les
add
or
xchg
cmpsb
and
les
sbb
dec
bound
dec
and
mov
jge
and
dec
mov
lret
push
xor
adc
pop
add
mov
fwait
jbe
jno
test
mov
cmc
lret
inc
mov
xchg
or
xchg
pushf
inc
lahf
movsl
sti
push
add
or
fisttpl
mov
jno
ret
shrb
popa
xor
popa
iret
jmp
loope
in
dec
divl
je
or
dec
push
insb
ja
jnp
ror
pop
push
mov
lcall
sbbl
dec
scas
into
loope
lret
push
idivb
sti
shl
xor
dec
mov
shl
cs
in
mov
arpl
movsb
sub
jb
sub
fdivr
push
fnstcw
pop
pop
xchg
bnd
lods
stos
std
xor
push
lcall
movd
rcrb
jmp
lcall
xor
mov
dec
push
and
sahf
jne
clc
pop
les
adc
push
test
es
pop
pushf
neg
cmp
int
adc
inc
jne
inc
dec
imul
lahf
jb
pop
push
fwait
cmp
jmp
jl
nop
xchg
or
lock
xor
pop
cmp
jecxz
and
stos
out
outsb
lcall
jo
lahf
mov
cmp
hlt
pop
fs
sbb
shrb
ficomps
xchg
rorl
xchg
jnp
in
xchg
ficoml
int
out
dec
sarb
stos
jo
add
mov
pop
jmp
arpl
shrb
pop
ja,pt
shll
adc
and
push
pusha
jmp
mov
in
sub
out
lahf
inc
mov
push
call
push
movsb
or
adc
push
dec
sbb
and
push
add
int3
mov
clc
fidivs
inc
adc
fsubrl
aad
repz
and
test
push
jno
cli
inc
jl
das
fistl
fidivs
lods
sub
xlat
sahf
shlb
or
add
lret
and
icebp
rcr
sub
fisubs
fisubs
fwait
push
push
jl
loop
and
lock
lcall
inc
xor
push
add
dec
mov
and
push
dec
and
mov
cmpsl
jo
mov
inc
jp
fmuls
sahf
mov
dec
xor
icebp
test
dec
pop
mov
sub
test
adc
add
lea
pop
inc
shl
ss
popf
pop
inc
xor
call
add
addb
fdivrp
cmpsb
in
mov
mov
ljmp
jmp
mov
dec
xchg
sbb
mov
scas
dec
xchg
add
and
ljmp
push
dec
and
rolb
in
loop
jp
pop
mov
mov
sbb
out
stos
push
push
dec
add
ret
clc
in
push
or
sahf
xchg
pop
mov
adc
push
pop
jb
out
imul
lcall
sbb
mov
aam
add
mov
and
xchg
int
adc
lock
mov
sub
or
pop
xor
xchg
aam
xor
push
pop
hlt
sub
add
inc
cmpsb
jbe
pop
sub
dec
add
xor
ds
fcoms
cli
out
ret
repnz
push
jle
inc
aam
jbe
adc
mov
ja
popa
mov
fisubl
es
jo
in
jnp
icebp
cmp
inc
push
pop
mov
or
sbb
test
cli
lcall
ja
jg
jne
sahf
xchg
jecxz
aaa
pop
xor
inc
add
rol
cmpsb
xlat
imull
or
aaa
stos
std
mov
notl
ljmp
cmp
sbb
mov
fdivrs
ja
stos
outsb
push
and
aaa
add
and
clc
xchg
lock
repnz
or
enter
xchg
scas
xchg
rorb
cli
ljmp
test
inc
aaa
cmp
add
clc
or
cmp
sub
push
fidivs
iret
clc
hlt
adc
fstl
aas
mov
dec
push
insb
cltd
xor
push
repz
ficompl
das
popf
int
push
sub
xchg
mov
test
in
ljmp
mov
aaa
aas
mov
mov
stos
scas
dec
adc
xor
pop
int3
or
mov
add
shrb
sub
jb
sbb
and
dec
jecxz
add
addl
enterw
bnd
mov
lahf
add
not
repnz
les
pop
in
ja
mov
xchg
sub
cmp
jecxz
repz
std
mov
mov
insl
fsubs
adc
add
test
flds
add
jle
fcmove
jecxz
push
jae
cld
rorl
push
ss
idivb
jecxz
shrb
mov
lock
cmp
icebp
adc
sbb
push
rcrb
mov
mov
mov
fildll
mov
fcmovne
ja
imul
jle
pop
jbe
daa
xorl
sub
push
das
or
xchg
stos
add
pop
int3
lret
xlat
dec
ret
imul
inc
add
push
fidivl
jmp
jmp
je
mov
sahf
fdivr
jecxz
cmp
pop
push
fisubrs
lret
pop
loope
data16
aam
decb
sbb
and
popf
xchg
inc
dec
xor
enter
mov
js
inc
outsl
xor
xchg
mov
mov
fcomps
jo
lock
and
dec
aaa
rolb
add
fildll
push
pop
fstpt
dec
fcompl
sahf
mov
mov
negl
or
jnp
dec
scas
mov
arpl
addr16
pop
lahf
inc
cmp
inc
daa
dec
add
pop
shll
fucomip
add
add
mov
lea
and
fistps
xor
out
lret
jne
add
shll
hlt
test
stc
xor
cmp
mov
mov
mov
mov
jg
push
push
mov
jne
lods
mov
pop
xor
mov
jo
movsb
subl
aaa
jg
out
lods
pop
pop
xor
mov
mov
mov
nop
adc
mov
hlt
xor
in
lcall
pop
xchg
jl
cltd
scas
enter
ja
call
push
ss
dec
aad
jnp
cmp
push
scas
sahf
mov
fldl
out
mov
mov
and
add
dec
test
fwait
xchg
cmpsb
jns
pop
imul
pop
shr
ficoml
mov
adc
test
cmp
hlt
lahf
mov
dec
pop
sub
mov
jne
add
adc
mov
cmp
ret
and
mov
test
es
divl
movsb
xor
stos
push
arpl
jecxz
les
add
mov
sbb
fisubs
addb
pop
inc
mov
dec
cwtl
fnstcw
mov
rorb
je
dec
into
dec
add
ret
pop
popf
stc
orb
or
jbe
mov
lcall
pushf
sahf
in
add
cs
movsl
in
push
adc
mov
imul
test
jg
jns
dec
testb
inc
adc
lcall
inc
xchg
dec
scas
nop
in
out
push
lods
pop
in
inc
incl
push
push
fsubl
jne
mov
adc
mov
dec
pop
and
sbb
cmp
or
xchg
in
push
les
mov
pop
les
xor
in
data16
fisttps
push
enter
xor
hlt
aaa
mov
ret
ds
orl
dec
int3
cld
es
ja
and
pop
in
or
popf
in
insl
in
rcr
push
stos
mov
adc
icebp
popf
es
push
add
add
xor
push
je
jmp
andl
cmc
xor
addr16
dec
cmp
pop
sbb
mov
push
add
in
into
rcrb
adc
insl
dec
in
in
dec
jle
aaa
or
idivb
aam
pop
int
aaa
lods
leave
negb
fwait
dec
out
adc
dec
sti
push
or
lea
inc
iret
xchg
lret
fnsave
faddp
cmp
mov
or
push
inc
repnz
test
test
fisubrl
scas
pusha
popa
pop
mov
xchg
nop
arpl
pop
cmc
int3
ja
and
rcrl
mov
scas
xlat
inc
push
jge
xor
out
ficoml
stc
pop
icebp
push
fdivs
add
cli
fcmove
cld
mov
ret
js
cli
imul
xchg
cwtl
or
gs
cmpl
push
adc
push
mov
insb
adc
mov
push
jmp
mov
test
push
lock
scas
or
stos
xorl
push
add
inc
fdivrs
gs
cmp
adcb
mov
jno
sub
mov
sub
lea
cmp
sub
pop
lcall
sti
xor
inc
std
in
inc
leave
imul
jns
jbe
movl
mov
xor
cs
jmp
aas
adc
fld
xchg
or
xchg
std
imul
xchg
repnz
xchg
jmp
insl
inc
mov
dec
sbb
cld
rclb
or
xor
xor
xchg
lret
lcall
out
xchg
inc
add
popf
hlt
div
test
hlt
gs
jmp
jmp
sarl
push
fsub
lret
jae
xlat
mov
push
push
mov
test
cmp
aam
mov
jnp
push
ret
pop
or
push
call
mov
xchg
xchg
popf
repz
pop
sahf
cli
iret
dec
cmp
imul
test
mov
adc
sbbl
test
icebp
sahf
outsb
xchg
mov
push
xchg
inc
sbb
mov
add
sti
mov
mov
sbb
cli
fidivl
jno
sbb
xchg
pop
jmp
addr16
or
andb
pop
cwtl
add
push
sbbl
mov
int3
jp
pusha
aam
mov
fs
jnp
cmp
loopne
pop
popa
pop
mov
push
mov
jne
mov
push
pop
dec
mov
jns
in
negl
sar
push
ja
dec
pop
jmp
aas
ja
cmpsb
lock
and
call
xchg
out
jbe
inc
stos
adc
addb
pop
push
aam
cmpsl
mov
and
cltd
push
sub
add
mov
add
fwait
jb
or
mov
aam
inc
inc
jno
sub
add
negl
inc
ja
lcall
xchg
or
mov
clc
je
mov
out
test
mov
ret
mov
into
xor
jno
push
pop
mov
jmp
adc
add
popa
movsb
inc
sbb
addr16
jg
push
data16
mov
add
pop
cmpl
pop
xchg
cld
js
int3
mov
fcomi
cmp
arpl
idiv
out
cmpsl
pop
xor
fsubrl
xchg
clc
cmp
pop
fstpl
mov
dec
adc
pop
aam
test
lcall
out
mov
xchg
movsb
fcomps
mov
pop
ret
icebp
lret
sbb
cwtl
mov
outsb
push
push
shlb
push
lret
cmp
movsl
mov
pusha
cmp
leave
inc
sbb
mov
mov
data16
sbb
aas
pop
jae
mov
dec
pop
enter
dec
or
jge
leave
push
pop
stos
fs
dec
ror
popf
dec
lock
sbb
test
mov
pop
and
and
das
xor
add
pop
loop
adc
mov
cmp
push
mov
sub
pusha
sarl
fdivrp
clc
and
inc
call
jecxz
xor
jle
daa
inc
mov
cmp
sahf
xchg
cli
shrb
xor
pop
lahf
out
sarb
out
xor
cli
pop
jmp
jne
dec
push
xor
divb
pop
cltd
out
lret
imul
pusha
mov
je
repz
jp
add
and
orb
sbb
and
jae
and
push
in
lret
mov
sub
jl
mov
jl
div
inc
aad
mov
cli
push
fsub
les
or
mov
out
int3
and
push
cmpsb
hlt
aad
imul
cltd
lcall
jp
bound
pop
pop
push
adc
movb
mov
jns
stc
lret
fnstenv
gs
test
sub
inc
push
add
cmp
fst
adc
sub
ret
cli
sbb
and
repnz
into
dec
mov
mov
movsb
push
cmp
mov
andl
xchg
xor
sbb
jno
addr16
fadd
stc
into
push
aaa
adc
push
sahf
xlat
out
add
jge
jle
pop
sti
inc
xor
push
sbb
movsl
or
sahf
push
dec
pop
pop
ficompl
mov
in
xchg
shll
jp
pop
and
aaa
sbb
mov
hlt
call
hlt
push
faddl
cmp
mov
mov
mov
adc
cmp
fwait
mov
iret
stc
aam
and
cltd
es
sti
mov
or
aad
jge
in
cmpsb
cmp
fmull
sub
sub
pop
je
xor
cwtl
xchg
int
lods
xor
xchg
jecxz
or
cltd
lea
fsts
repz
mov
xor
sub
rolb
outsb
cli
lret
ror
mov
and
sub
add
push
pusha
add
cmp
lods
or
pop
ds
add
sbb
aas
mov
rolb
call
dec
aas
mov
cs
sahf
subl
pop
pusha
iret
movsb
mov
arpl
cmp
jmp
or
pop
std
pop
sahf
addb
bnd
lret
adc
jmp
push
std
jl
stos
cmpsb
dec
jno
cmp
mov
movsl
lret
sbbb
jns
mov
push
pusha
mov
inc
pop
pop
cs
mov
jno
outsl
in
mov
cli
je
cmp
jnp
dec
pusha
scas
dec
adc
sub
loope
addr16
mov
sub
add
jmp
ljmp
mov
dec
inc
pop
cs
cmpsl
incl
ds
movsb
adc
sub
mov
cmpsl
stos
stc
out
aad
pusha
imul
stos
xor
orb
neg
cmp
dec
aas
xchg
js
test
and
fidivl
inc
pop
je
inc
cltd
ret
sbb
inc
add
scas
adc
das
xchg
stos
dec
mov
or
pop
push
leave
loope
imul
xchg
jle
pop
cs
dec
mov
inc
sahf
pop
mov
arpl
or
adc
sub
mov
popf
mov
fwait
xchg
in
add
ja
sbbl
inc
pop
sbb
mov
clc
imull
jp
iret
notb
ja
dec
adc
popf
mov
push
and
call
imull
pop
push
push
xchg
ja
out
sbb
jg
outsb
dec
or
stos
pop
add
push
jno
addb
test
inc
inc
jbe
inc
pop
jne
sti
insl
inc
pushf
movsb
cmp
lds
jns
repnz
lods
je
mov
inc
aaa
scas
mov
lcall
in
out
push
subb
fcompl
cmp
fwait
xor
fldt
push
push
push
gs
sbb
push
inc
in
lods
leave
mov
xor
sbb
adc
jo
je
sysret
insb
jmp
scas
add
and
inc
ror
push
fnstenv
sub
inc
test
mov
shll
icebp
iret
xlat
mov
and
dec
inc
xchg
cmp
inc
jno
dec
xor
lods
jecxz
test
into
push
and
push
and
or
jecxz
push
pop
cmp
and
pop
pop
xchg
xor
mov
pop
jge
cmc
xchg
cwtl
cmpsb
push
fs
jmp
bound
xlat
jecxz
and
fcmovu
rcrb
ret
cmp
xchg
out
push
push
outsl
pop
jmp
mov
cmpsb
pop
cmc
dec
inc
test
fcomip
add
inc
scas
pop
addr16
xorb
popa
into
ret
test
push
cs
mov
fnstcw
mov
adc
pop
and
cmp
xlat
or
aaa
cwtl
stc
movsb
mov
rol
mov
enter
loopne
push
imul
push
cmc
mov
fnsave
push
or
mov
push
jg
dec
pop
dec
mov
cmp
cld
rorb
lods
and
mov
test
mov
cmpsl
sbb
cmp
mov
dec
sub
or
rcrb
stos
dec
repz
ret
cmp
mov
mov
pop
inc
mov
or
mov
dec
or
push
cmp
and
push
jns
inc
pusha
or
xor
and
adc
scas
push
ja
cltd
and
cld
je
sub
notl
loop
ljmp
rol
out
les
sarl
loopne
mov
insl
fnstsw
clc
mov
shrl
mov
test
sub
jle
es
jnp
out
lock
xor
out
inc
add
xchg
test
jp
xlat
rcr
lods
xchg
shrb
and
rcl
int3
push
inc
or
pop
ret
mov
dec
inc
cmp
mov
mov
ret
adc
mov
sub
or
std
movsl
mov
mov
xchg
fldt
lret
cmp
cmpsb
bound
adc
insb
dec
mov
sbb
inc
lcall
xchg
gs
call
push
into
ret
imul
sub
mov
mov
mov
sbb
data16
and
xchg
and
pop
sbb
mov
syscall
mov
pop
rclb
and
push
ret
lahf
sahf
je
dec
mov
mov
jmp
call
xchg
adc
jae
vpackssdw
imull
ret
testb
call
mov
mov
mov
sbb
sahf
xchg
pusha
int3
cmpsl
push
insl
sahf
pusha
dec
jb
jl
and
xchg
inc
sti
inc
lods
ret
shl
adc
adc
xor
fidivs
outsb
adc
jmp
aam
adc
pop
push
test
scas
push
inc
mov
jecxz
xor
jmp
jae
sub
das
std
mov
shlb
xchg
pop
mov
cmp
into
ret
dec
add
lds
ret
xor
mov
pop
leave
mov
pop
lods
clc
sbb
addr16
aas
bound
mov
pop
clc
adc
sub
sbb
sahf
pop
or
push
leave
enter
clc
and
push
push
add
jo
jnp
jnp
xchg
les
stos
in
dec
imul
aad
mov
leave
mov
std
cmpsl
push
add
outsb
add
add
cmp
inc
insl
adc
adc
mov
test
pop
fiadds
push
outsb
mov
outsb
sub
pop
and
xor
das
scas
aaa
jle
sahf
je
iret
push
inc
mov
adc
sbb
in
or
into
sbb
xlat
lds
es
aam
lods
cmpsb
and
dec
das
push
lret
lock
hlt
cmp
pop
xchg
push
daa
sub
push
imul
es
mov
mov
ds
repnz
leave
inc
ficompl
je
pusha
lret
arpl
jbe
icebp
push
loopne
out
sub
xor
mov
mov
sarb
push
cwtl
shlb
dec
pop
in
and
jae
sub
adc
inc
arpl
enter
sub
jmp
jl
jae
inc
pop
in
lret
nop
lds
sbb
xchg
xchg
sbb
inc
xor
mov
push
mov
icebp
jno
push
out
in
and
jb
notb
sbb
cltd
jge
xor
repz
mov
shlb
out
pop
ja
sbbb
mov
jecxz
pop
in
imul
ret
xchg
out
mov
cltd
push
into
or
nop
dec
xchg
lret
xchg
and
lcall
shl
xchg
hlt
dec
test
lahf
subb
lahf
arpl
mov
push
ja
push
int
stos
mov
mov
xor
lahf
mov
xor
cmp
xchg
out
pop
pop
ret
xchg
add
in
pop
ljmp
pusha
loopne
sub
pop
sub
push
add
inc
or
pop
out
insl
mov
popf
adcl
pusha
call
dec
push
vmread
pop
aaa
stos
jns
decb
and
in
aaa
dec
fmuls
shll
cmp
jmp
imul
popa
xlat
pushf
mov
adc
movsb
les
lahf
mov
fstpl
fidivl
jle
loope
idiv
sbb
out
aas
mov
in
pop
ja
jp
loop
dec
iret
jns
jp
pop
mov
pop
fldt
aad
in
jne
add
xlat
fcompl
adc
mov
mov
sbb
sbb
dec
sub
in
push
hlt
test
jno
mov
test
xor
fdivs
fcoms
imul
je
pop
gs
jbe
inc
sub
xor
jbe
sbb
leave
jge
ret
sbb
xchg
les
sbb
sarb
daa
cmp
jbe
pop
andl
mov
notb
sarl
xchg
lfs
jle
or
push
inc
cmpsl
out
dec
and
sub
incb
pop
jle
mov
push
leave
pop
sub
out
stos
cmpsb
or
or
mov
push
or
cs
repnz
out
mov
inc
addr16
push
inc
jb
lods
lods
add
idivl
mov
xlat
push
cmp
xchg
adc
inc
dec
das
sub
stos
inc
mov
bound
sbb
push
mov
add
subb
test
cmpsb
std
push
inc
mov
xchg
in
rol
push
jo
stc
and
xor
out
sub
pop
test
std
scas
mov
lods
roll
rcrl
jecxz
and
push
mov
xchg
int
adc
pop
dec
sti
pop
pop
outsb
cs
mov
jb
adc
adc
xchg
mov
lret
mov
out
adc
call
mov
lods
sahf
inc
aam
and
scas
jge
jmp
repnz
fimuls
xchg
push
shlb
pop
xor
inc
fistpll
mov
lahf
pop
bound
adc
pandn
lds
lret
add
mov
ss
sub
mov
mov
cmpb
daa
sub
popa
out
fdivrs
stos
insb
xor
push
outsb
movsb
sub
data16
rcrb
cmpb
cmp
cmp
test
imulb
or
sub
fcmovu
mov
int3
jae
test
jne
repnz
jnp
fidivrs
mov
lret
adc
divb
xorb
xor
cmp
cmp
cld
int
loope
movsb
or
stc
out
pop
xchg
sub
pop
lds
repz
dec
push
inc
lret
sbb
out
adc
repnz
lea
call
and
fldt
inc
push
and
into
inc
pmullw
fldt
dec
inc
mov
mov
fcoms
xchg
mov
sub
mov
push
lret
mov
outsl
fistpl
ficoms
fwait
dec
stos
les
mov
movsb
sub
xlat
adc
imul
push
xor
test
xchg
sub
fincstp
or
xchg
mov
aaa
loop
ja
pop
dec
cmp
mov
out
inc
js
stos
mov
addr16
adc
mov
fbstp
inc
mov
inc
cld
sub
mov
lret
pop
lock
cmpsb
repz
push
sbb
push
pushf
in
pusha
dec
pop
call
adc
lea
jecxz
jecxz
mov
repz
rcll
cld
jmp
gs
xchg
push
repnz
pop
or
fs
lods
pop
xor
and
and
dec
pop
xchg
insb
xlat
lahf
push
xchg
and
aad
sarb
and
mov
int
or
nop
mov
aaa
push
sbb
js
mov
das
cld
outsb
lret
ljmp
jo
lretw
js
cmpsl
leave
mov
hlt
pop
jae
mov
lret
dec
xor
cmp
notl
insb
insl
fcmovu
enter
pop
aad
imul
ds
shlb
xlat
out
sbb
roll
das
sbb
cmp
or
inc
ret
lods
bound
loope
sub
in
mov
test
push
arpl
xor
js
mov
shrl
or
sbb
iret
xchg
pop
push
in
dec
sub
enter
popf
or
addr16
iret
add
jecxz
mov
scas
lods
and
add
push
mov
pop
and
sub
xchg
int
sub
xor
jg
cmp
repz
mov
sahf
and
insb
ljmp
fldenv
sub
iret
das
adc
sbb
jno
stc
repnz
inc
push
movsb
in
icebp
call
add
imul
jl
into
test
imul
mov
adcb
xchg
cmp
call
sbb
jge
xchg
pusha
lahf
dec
in
xchg
addr16
or
imul
push
aaa
cmc
push
xchg
mov
jae
enter
je
jle
andl
sbbb
and
sub
das
and
mov
imul
xorb
cmp
mov
mov
and
sbb
sti
loop
and
icebp
cmpsl
not
inc
jle
cs
push
inc
out
mov
inc
cmp
loop
and
push
mov
sbb
std
mov
sub
xor
ds
popf
loope
sub
xor
dec
mov
jl
sub
push
push
in
cmp
or
jns
xorl
outsl
popf
adc
push
sbb
notb
mov
imul
bound
orl
add
xor
dec
xor
xchg
mov
into
pop
adc
out
pop
pop
mov
cmp
inc
pop
icebp
xchg
mov
mov
jo
popf
iret
mov
je
push
or
or
cmp
add
push
hlt
loop
sti
jns
lahf
sub
cmc
xor
jg
ds
int3
or
lds
lds
shll
push
mov
or
cmp
shl
or
cmp
push
adc
mov
stos
scas
into
and
adc
mov
loopne
iret
push
scas
mov
rcl
imul
sub
adc
in
into
jp
out
rcll
sbb
xchg
ljmp
shlb
sbb
test
fldl
dec
inc
icebp
and
xchg
pop
sbb
pusha
cmp
movb
dec
dec
arpl
inc
dec
add
mov
test
sub
leave
bound
test
cmp
and
clc
xchg
test
jp
or
mov
out
mov
clc
pop
out
fisubrs
mov
lret
imul
stos
das
pusha
jecxz
scas
repnz
dec
rolb
aaa
push
xor
adc
icebp
std
pop
or
jl
and
cmc
xchg
outsl
jle
cmp
dec
xor
test
sahf
outsb
jnp
testb
fistpl
movups
stc
or
pusha
jmp
mov
add
or
jbe
faddl
loop
loope
in
jno
test
imul
jns
or
mov
mov
inc
and
push
jno
inc
lods
lahf
stos
cmc
or
jg
scas
or
dec
aad
dec
scas
mov
popf
cmp
mov
xor
adc
fistps
adc
pop
adc
xchg
xchg
inc
xchg
stc
faddp
cltd
insl
mov
add
mov
lods
stc
fiaddl
cltd
adc
inc
sbbb
mov
ss
add
add
jb
test
gs
inc
cmp
lret
sbb
out
clc
mov
rcll
jg
push
popa
adc
push
or
mov
insl
and
in
pop
xchg
clc
fs
scas
adc
in
mov
loope
bound
and
jne
mov
scas
stc
mov
mov
in
rcrl
push
mov
orb
adc
or
push
lcall
dec
sbb
aaa
divl
imul
pop
mov
lds
scas
mov
call
sar
sub
xor
xor
mov
sub
xchg
sub
ret
push
cmp
adc
adc
loopne
pop
ret
js
lahf
ljmp
mov
cmpsb
mov
sahf
cmp
xchg
int3
mov
mov
pop
roll
testl
cs
pushf
mov
call
xchg
daa
push
nop
int3
push
sub
int3
cmpsl
lcall
movsl
outsl
cmp
jp
xchg
call
into
mov
push
sub
and
movsb
dec
jg
dec
adc
and
loopne
and
inc
cmovnp
inc
xchg
out
lea
jb
jns
les
cli
xchg
jbe
shl
xchg
xchg
push
outsl
idivl
lods
sub
xchg
inc
xchg
mov
leave
and
adc
fisttpl
adc
frstor
mov
cmp
mov
mov
xchg
adc
shl
stos
int3
jle
push
dec
dec
sbb
int3
lret
enter
dec
cs
adc
mov
in
mov
arpl
mov
sbb
mov
inc
lods
data16
insl
mov
sarb
int3
sbb
push
add
sub
jnp
sbb
jle
lock
movsl
push
cli
sub
sub
std
mov
push
push
jp
rolb
add
xchg
cmp
sbb
sub
adc
or
adcl
add
push
in
movsl
insl
movsl
outsl
push
adc
mov
mov
jne
insb
mov
int3
lods
inc
or
sub
or
jb
mov
aam
xchg
jg
pop
sbb
inc
aas
or
ljmp
scas
mov
cmpb
push
int
adc
adcl
je
imulb
lods
jecxz
fnsave
inc
loop
inc
lods
jb
mov
inc
sub
fnsave
sub
icebp
pop
or
dec
mov
aam
jl
or
mov
scas
outsb
and
push
jge
mov
test
sbbb
pop
or
ficomps
pop
sbb
mov
movsb
lret
push
cmp
lods
and
popf
adc
inc
es
nop
jecxz
pusha
cli
dec
ret
dec
ljmp
pop
fcompl
xor
or
push
int
and
loopne
mov
ror
gs
popa
movsl
cmp
pop
fmuls
or
add
in
aam
ffreep
leave
jg
push
dec
mov
fistpl
dec
push
aad
in
mov
jl
xor
std
sub
adc
and
test
in
jmp
ljmp
mov
ja
int
insl
sti
mov
stc
pop
fbld
loopne
pop
adc
lods
dec
adc
repnz
add
imul
fs
pushf
orl
adc
jg
lahf
ljmp
sahf
mov
sbb
aas
loop
xchg
jmp
pop
call
mov
movsb
jge
xchg
imul
sbb
dec
sbb
lea
adc
jmp
sbb
fwait
sub
cmp
cld
push
cmpsl
xchg
cmp
dec
inc
lods
xchg
adc
xchg
fucomp
sub
nop
mov
push
out
xchg
ret
fists
dec
cwtl
lods
pushf
jge
push
lea
sub
cmp
lret
push
mov
mull
sub
pop
movsb
sahf
cmp
packsswb
movsb
popa
xchg
sbbb
in
jmp
loopne
jp
out
add
jmp
std
int3
xchg
test
sbb
xchg
je
lds
iret
jne
stos
out
push
iret
push
sbb
das
test
mov
pop
dec
rorb
ret
clc
popa
add
je
dec
outsl
xlat
clc
data16
mov
mov
outsl
jo
ret
jns
xor
xor
adc
or
ss
and
shrl
or
roll
test
pop
mov
cmp
dec
hlt
dec
jg
mov
testb
add
adcb
out
out
pop
ja
jne
dec
jge
sub
ret
push
push
loope
ret
in
inc
xchg
lahf
and
mov
push
pop
imul
dec
rcll
push
dec
or
sub
lods
and
mov
sarl
fmull
push
jle
addr16
mov
pusha
mov
test
ror
addr16
xchg
jg
ljmp
rclb
enter
jbe
xor
inc
repnz
sbb
aad
enter
pop
lahf
push
or
push
dec
sub
mov
inc
mov
jle
test
xchg
ret
test
pop
mov
ss
xchg
push
adc
inc
cld
and
mov
pop
mov
std
xchg
sub
shlb
je
push
addr16
inc
ret
ret
pop
pop
in
add
cli
add
dec
mov
mov
mov
jb
imul
cmp
xor
ret
push
push
int
push
sarb
push
shrl
pop
in
imul
and
xchg
mov
mov
sbb
push
dec
ss
sbb
push
aad
sub
xcrypt-ecb
cmpsl
mov
jb
mov
xor
adc
xchg
in
lds
int
jb
inc
sbbl
movsb
cld
pop
inc
and
stos
popf
mov
mov
out
xchg
in
lds
inc
inc
movsb
fnstsw
dec
jg
inc
push
adc
add
sarl
fimuls
test
cs
jge
repz
rcrb
jne
pop
sbb
shll
test
or
popf
mov
fxtract
dec
in
jecxz
cmpsb
addb
dec
test
out
adc
in
adc
push
mov
notb
stos
rcll
pop
and
inc
int3
inc
jge
fldenv
jbe
mov
mov
out
inc
lret
in
pop
adc
stos
pop
cmp
andl
cld
jmp
add
push
cmp
outsb
inc
inc
xchg
into
xchg
lahf
lods
xchg
sti
out
cwtl
out
fmull
repz
jmp
dec
push
outsl
aaa
enter
xchg
push
push
adc
mov
insb
rcrl
pusha
sub
dec
mov
adc
mov
adc
xor
clc
lock
ss
fiadds
int
inc
push
daa
xchg
pop
rcl
push
aad
adcl
les
aam
push
aas
and
ds
push
jb
xorb
pop
dec
cmp
andb
mov
inc
and
shl
mov
repnz
sub
in
mov
sub
mov
bound
dec
xchg
push
xlat
and
mov
push
jp
fwait
or
adc
loop
fsubs
movsl
xchg
aas
jmp
repz
xorl
in
cmp
loop
xchg
inc
or
sbb
loopne
and
call
dec
out
add
cli
imul
ljmp
xchg
stc
stos
fldt
cmp
xor
andb
sarb
sbb
aaa
lock
push
cmp
rolb
pop
mov
data16
cmp
xchg
pop
subl
jmp
rcl
add
addr16
mov
ficoms
push
dec
std
mov
jp
jle
outsl
sti
adc
mov
mov
dec
adc
adc
lret
testl
nop
in
and
pop
pop
movsb
inc
push
push
in
cmp
insl
or
mov
rclb
add
pop
and
cmp
mov
add
cmp
jbe
or
add
inc
in
mov
mov
add
in
rorb
push
sbb
sbb
lahf
jle
lcall
std
int
push
sub
jp
lea
or
inc
sub
push
jl
push
xor
in
cs
into
mov
xor
dec
nop
xchg
xchg
push
lods
in
mov
xchg
xchg
xor
inc
outsl
jmp
jle
and
scas
push
es
cwtl
js
and
push
sub
je
push
lods
mov
lods
cltd
dec
fsubp
insl
push
push
xor
scas
add
repnz
inc
shrl
cmp
xor
dec
aas
xchg
lcall
xchg
xchg
jl
pusha
add
inc
icebp
in
or
js
stos
mulb
xchg
repz
adc
pmaddwd
and
pop
sub
jnp
lret
ffree
jns
xor
inc
xchg
xchg
or
ret
movsl
dec
or
hlt
je
jo
in
cmp
jne
xchg
or
int3
jg
lds
push
js
sbb
push
sar
sbb
push
pop
ljmp
imul
mov
sub
push
push
aad
xchg
fistpll
arpl
add
aas
test
jmp
adc
lret
ja
inc
cmpsl
mov
mull
mov
sbb
cmp
mov
add
inc
inc
pop
push
ret
push
push
xchg
js
mov
xorl
inc
orl
ss
sub
cmc
fdivs
push
inc
cmp
cmpsl
mov
adc
int3
sahf
imul
sub
xchg
or
or
adcl
inc
adc
in
mov
sqrtps
jb
inc
test
push
cmpsl
and
js
dec
idiv
and
push
mov
adc
test
pop
add
mov
and
icebp
mov
mov
mov
arpl
shrb
fisttpl
mov
mov
bound
dec
xchg
int
lret
sub
mov
gs
mov
test
mov
sbb
add
inc
dec
les
or
insb
sub
add
test
and
xchg
mov
inc
pop
pop
out
xor
in
pop
pop
xchg
cmp
rcrb
or
xchg
add
leave
add
sti
mov
out
mov
xchg
jge
add
ljmp
cmp
add
push
xchg
ds
push
mov
pop
or
inc
and
jns
jle
pop
pop
add
fucomp
xchg
icebp
jmp
inc
aad
add
jg
pop
pop
add
mov
jle
cmpl
sub
daa
mov
imul
mov
lock
push
pop
xor
inc
cmpsb
xchg
adc
adcl
and
sub
imul
and
adc
out
int3
outsl
les
pop
arpl
push
repz
imul
in
cmpsl
push
push
push
dec
jb
push
fwait
data16
imul
cld
es
popa
and
ds
ret
cmpsl
mov
imul
cmc
xor
scas
jo
or
push
jne
arpl
je
cltd
add
dec
xlat
sub
adcl
addr16
repz
jl
ljmp
dec
cs
add
stos
aas
das
mov
lret
cmp
cli
pop
push
dec
lcall
jbe
and
or
arpl
pop
lods
inc
jl
jmp
jmp
sti
pusha
xor
mov
testl
pop
inc
les
and
cltd
aad
fdivrl
je
push
and
stc
daa
jge
test
lds
es
int3
jnp
sbb
mov
aas
sub
push
jb
jno
ja
lret
ret
inc
in
pop
jl
sahf
scas
popa
cmp
fld
push
xchg
popa
lods
xchg
lds
xchg
jo
and
and
push
cmp
int
xor
inc
mov
push
movhps
sub
lret
fcoml
outsl
sub
xor
mov
dec
sub
testl
pop
imul
xor
inc
lret
repnz
inc
fidivrs
mov
xchg
jmp
mov
cmp
push
popf
loop
add
xchg
andb
fbld
mov
xchg
rorl
enter
sahf
adc
push
cmp
jo
sub
or
xchg
in
ret
sarb
adc
and
pusha
mov
mov
xchg
adc
sbb
jmp
xchg
or
cmpsl
ja
stos
stos
add
ror
lcall
push
mov
into
ret
xchg
popf
jl
iret
fidivrl
lock
mov
stc
insb
cli
bound
iret
aas
ret
xchg
out
sbb
stos
rcll
das
and
inc
mov
pop
aas
cld
sbb
je
xlat
les
mov
mov
jle
push
dec
push
xlat
xchg
mov
rorl
jecxz
cmp
cmp
jno
dec
and
add
pop
out
stos
aas
cmpsb
data16
sub
dec
sbb
pop
pop
test
and
xchg
clc
jg
addr16
sahf
push
pop
addr16
aaa
pop
fcomip
lahf
adc
and
cli
popf
lock
sub
push
ret
loope
iret
das
arpl
es
leave
ja
test
mulb
dec
and
mov
test
mov
les
mov
pop
into
xchg
or
pop
pusha
sub
sub
push
xchg
dec
repnz
inc
push
cmc
insb
mov
inc
cmpsl
and
push
mov
ja
jg
jns
roll
adc
rolb
cld
aas
clc
inc
loop
icebp
repz
or
mov
icebp
fldcw
xor
mov
mov
xchg
sub
jbe
xchg
mov
mov
push
das
jno
mov
imulb
jbe
dec
sbb
xor
aam
jne
stc
sbb
aaa
addr16
enter
cmp
jl
daa
stos
ljmp
mov
test
fnstsw
into
mov
dec
arpl
out
pop
adc
xchg
inc
xchg
push
mov
mov
or
pop
jp
add
cli
data16
cmp
sbb
add
inc
adc
aaa
and
outsb
cmpsl
dec
movsl
imul
in
jnp
out
adc
jbe
lods
fbstp
adc
out
xchg
pop
fistps
add
push
xor
mov
test
cmp
scas
lds
xchg
jae
call
and
pushf
repnz
inc
xor
and
add
adc
int3
xchg
test
pushf
arpl
xor
mov
inc
dec
sub
pop
sbb
loope
or
push
push
and
stos
jecxz
xor
and
bound
mov
xchg
not
shll
rep
fld
or
dec
inc
bound
pop
enter
ss
and
lds
xor
lcall
movsl
stc
pop
or
ja
xor
and
pop
cmpsb
iret
adc
mov
sub
dec
in
inc
jmp
dec
xor
sti
sbb
xlat
dec
jb
in
and
add
movsl
outsl
dec
mov
stos
in
pop
div
push
jle
push
sbb
jnp
popf
mov
sti
push
clc
cmp
jo
dec
cmp
pop
mov
gs
dec
cmp
mov
adc
xor
lret
jno
jp
xchg
ljmp
mov
iret
mov
test
pushf
testl
lret
sub
sbb
mov
fdiv
or
add
mov
mov
mov
xchg
test
icebp
lret
cld
loope
not
sti
mov
xlat
sub
popa
cmp
jo
int
arpl
jae
dec
push
xlat
xchg
popa
xorl
cmp
in
add
shrb
and
jmp
loopne
leave
xchg
ja
imulb
xchg
ss
in
and
sbb
enter
or
or
mov
adc
cld
push
xor
xchg
jl
push
push
lret
lret
loopne
and
rorb
sub
mov
push
cmpsb
mov
xchg
dec
and
pop
repnz
push
mov
pop
or
mov
hlt
pop
xchg
dec
popf
xchg
dec
mov
sbb
jb
insb
data16
bswap
out
pop
out
sbb
cmc
inc
mov
xlat
mov
stos
leave
std
sahf
fs
std
xor
cmp
call
push
jmp
push
mov
or
pop
push
cmp
pop
scas
test
jg
insb
les
xor
push
ss
add
mov
jb
mov
xchg
scas
test
cmc
lock
xor
sbb
xor
bound
stc
leave
and
into
ret
mov
jae
push
cmp
pop
inc
arpl
jmp
in
data16
jg
rclb
lcall
test
stos
add
cmpsl
call
mov
bnd
arpl
sub
add
cltd
or
inc
lds
ss
into
mov
gs
inc
or
cwtl
jnp
mov
xlat
clc
inc
test
int
mov
insl
inc
rolb
iret
sub
mov
fmull
mov
leave
jb
leave
mov
pop
repz
je
mov
inc
cs
mov
in
xchg
psllq
subl
push
in
mov
xor
cmp
add
enter
xchg
mulb
fstp
xor
sub
xchg
in
bound
imul
jle
pusha
mov
and
cmp
and
adc
mov
inc
dec
dec
mov
mov
sbb
mov
push
fidivrs
int3
jp
cmp
add
jno
mov
shl
inc
daa
lods
sbb
test
mov
and
add
test
jmp
xchg
out
lods
jo
test
add
pop
adc
stos
iret
outsb
push
sbb
mov
fs
xor
shll
xor
add
cmpsb
loope
out
iret
das
std
sub
test
mov
mov
mull
out
jnp
sub
cmp
xlat
sbb
dec
ljmp
aad
add
lods
dec
pop
addr16
mov
cmc
scas
push
fwait
gs
pop
enter
inc
shll
inc
icebp
jmp
jp
sub
mov
test
jecxz
rorb
adc
push
clc
push
pop
stos
div
jle
outsl
repnz
fdivrl
xchg
pop
xchg
jecxz
sahf
mov
out
push
outsb
enter
mov
clc
sub
lds
xchg
fidivrl
lods
inc
js
jne
pop
ret
xchg
jo
addr16
xchg
inc
push
sbb
loop
sti
cmp
xchg
mov
adc
jns
sti
imul
ljmp
sub
inc
in
aaa
sub
fbstp
inc
adc
out
lds
and
dec
rorb
in
lock
push
data16
rorl
fcmove
cmp
nop
fdivrp
ret
cld
mov
test
mov
gs
stos
jbe
jno
imul
lock
adc
mov
adc
mov
mov
ja
and
xchg
mov
gs
fs
clc
jns
pop
cli
mov
inc
js
mov
outsb
test
pop
jmp
cwtl
repnz
mov
mov
adc
outsl
test
sahf
pop
mov
mov
inc
pop
jg
ficoms
ss
sti
cmp
std
inc
nop
hlt
pop
mov
push
mov
mov
fdivp
lcall
sbb
cs
fiadds
dec
incl
outsl
int
mov
xchg
std
rcll
addb
inc
lods
loope
or
push
lods
in
hlt
jb
or
xor
jne
js
repz
in
xchg
mov
dec
dec
shl
ljmp
lods
push
pop
sub
jnp
into
shrl
imul
push
push
push
cli
mov
jl
mov
movsl
hlt
loope,pn
sub
scas
mov
sub
xor
pop
int
in
and
cmova
xor
xchg
outsl
cmp
pop
push
push
test
test
jae
push
adc
lahf
push
pop
lods
add
push
call
push
imul
sbb
inc
ret
lock
adcl
mov
mov
mov
mov
fcmovu
scas
mov
in
mov
aad
movsb
or
cs
mov
jge
popa
loope
cltd
mov
add
xchg
cmpl
mov
incl
in
mov
or
arpl
pop
sub
add
xlat
fmull
xor
out
pop
fucom
outsl
les
imul
pop
add
mov
cmp
jl
sub
cmpsb
lds
pop
push
mov
ficoml
push
mov
cld
std
ss
fldl
bnd
add
clc
int3
or
add
push
mov
jbe
sub
or
or
call
jmp
mov
mov
or
or
out
mov
dec
dec
and
movsl
sub
sub
inc
mov
push
pushf
sub
adc
cmp
pop
rcll
inc
sbbb
xchg
pop
cmp
imull
scas
sbbl
xchg
scas
inc
and
jno
outsb
dec
inc
aad
fiadds
jno
mov
add
inc
xor
cmpsl
pop
add
xor
adc
fistpl
push
daa
pop
mov
ss
enter
std
std
push
cmp
xchg
cmpsb
icebp
xchg
shll
cmp
scas
lcall
daa
mov
pusha
mov
mov
shl
lds
sbb
add
fs
mov
movsl
ds
push
stos
add
pop
mov
pop
subb
arpl
test
add
fstpt
push
lods
pop
fdiv
lods
push
shlb
sbb
push
mov
imul
adc
cmp
faddl
push
or
xchg
jmp
ljmp
xchg
xchg
mov
mov
lods
inc
adc
or
movsb
cmp
leave
jne
sti
jne
push
adc
outsl
jno
out
mov
inc
or
mov
mov
inc
hlt
xchg
mov
rclb
repnz
in
sub
sbb
mov
pop
inc
cmp
xor
xchg
or
pop
pop
add
std
sbbl
xchg
mov
ret
xor
fcoms
jp
sub
pushf
xor
inc
ja
adc
ds
repnz
pop
or
jl
nop
int
xor
sub
mov
push
sub
adcl
in
or
fisttpl
cld
mov
adc
jge
mov
aam
rcll
dec
ss
push
out
std
pop
xor
push
test
scas
fisttpl
das
testb
pop
cmp
pop
sub
adc
xorb
out
data16
scas
leave
pcmpgtw
popa
ret
lods
aam
adc
fs
adc
or
pop
mov
mov
out
pop
push
push
das
out
and
dec
fcompl
cmc
outsb
out
inc
push
cld
sbb
push
jle
sbb
xchg
es
adc
push
adc
jecxz
insl
push
dec
adc
lcall
idivb
pop
popa
pop
rorb
push
add
xchg
or
ja
pop
jo
xchg
mov
out
iret
pop
test
jecxz
dec
add
or
mov
xchg
das
sbb
mov
mov
mov
pop
fcmovnb
inc
ret
push
mov
aas
test
mov
das
ljmp
jae
ds
sub
inc
test
inc
in
add
das
lds
pop
pop
mov
push
dec
repz
cmp
data16
push
jb
subb
xchg
xchg
loop
mov
jno
pop
out
jne
mov
push
adc
jp
out
idiv
sahf
insl
sub
int
inc
call
std
cmp
dec
sahf
sub
loop
xlat
sbb
popa
mov
dec
dec
ss
xor
call
adc
aad
ret
sbb
xchg
dec
jle
xchg
cwtl
or
call
xchg
pop
add
andb
clc
outsl
hlt
and
or
mov
and
int
jg
add
cmp
sti
inc
pop
shr
sub
sarl
leave
sub
stos
mov
stos
incb
cld
repz
or
and
adc
fcoms
sbb
imul
and
js
add
push
push
mov
repnz
das
aam
xchg
mov
jge
roll
ljmp
pmaddwd
outsl
pop
jne
mov
push
cld
jl
cltd
hlt
inc
loop
jl
mov
les
jge
pop
sub
lcall
inc
jo
int3
or
jle
repnz
mov
stos
xchg
adc
ficomps
xlat
or
les
incl
mov
push
int3
shll
jmp
dec
std
sbb
xchg
mov
dec
pushf
scas
movsb
ret
mov
sub
push
push
imul
les
or
repz
or
pop
add
jbe
push
lods
loopne
inc
mov
jae
dec
lahf
jbe
test
pop
decb
inc
xchg
jno
jnp
aas
loope,pt
mov
push
enter
mov
xchg
cmp
sbb
mov
in
mov
dec
popf
jns
cld
mov
hlt
jp
sbb
and
add
pop
mov
jl
pop
adc
and
lahf
xlat
pop
cmp
add
popa
lods
jp
add
lods
jp
es
sti
mov
test
push
in
mov
dec
cmpsl
push
mov
fmull
fdiv
cltd
sti
mov
lret
jo
adc
jg
cmp
repnz
pop
outsb
push
pushf
jb
pushf
fstpt
mov
mov
outsb
mov
xchg
movsb
xor
or
push
jns
add
jle
xchg
pop
pop
push
push
push
sti
out
out
out
lods
pop
jbe
inc
iret
push
ss
inc
pop
mov
ficompl
jp
mov
push
xor
mov
pusha
fildll
je
mov
popf
leave
das
xlat
adcb
fnstenv
enter
insb
enterw
fistpll
lret
shrl
insb
and
mov
into
movsb
mov
outsb
jnp
faddp
add
lret
addb
mov
lds
adc
jne
arpl
and
jmp
push
ss
cli
stc
div
xor
or
sbb
sub
xor
mov
inc
pop
scas
adc
lds
dec
imul
xlat
ret
jle
imul
repnz
sub
or
inc
cmp
mov
inc
xchg
pushl
jmp
fucomip
mov
cmpb
pop
sbb
sub
scas
cmpsb
lea
call
xchg
pop
sub
pushf
mov
xor
shld
shlb
ficoms
sbb
into
outsb
sub
lret
jge
les
jo
stos
push
lock
jp
repz
lahf
std
mov
lods
pushf
faddl
pop
xchg
xor
sbb
ret
push
data16
icebp
cmpsl
imul
repnz
stos
bound
and
ret
cmpsb
loope
mov
dec
mov
add
lock
js
sbb
xorl
roll
scas
mov
pop
pop
xchg
aam
out
sti
mov
call
mov
push
add
mov
mov
pop
icebp
imul
adc
dec
stos
data16
imul
push
movsb
xor
mov
pop
mov
or
lea
fcompl
jecxz
fcmovbe
mov
mov
add
or
dec
es
jbe
cmp
push
cmp
data16
inc
rorb
cli
nop
adc
scas
outsb
dec
loopne
repz
push
lcall
iret
test
fldpi
movsb
out
adc
xchg
push
cmp
lods
and
and
xchg
cs
mov
mov
xchg
jp
adc
lret
jo
or
xchg
addr16
mov
pop
scas
scas
inc
ss
xor
push
lret
or
xchg
adc
rcrb
dec
mov
cmp
nop
sub
test
adc
stos
nop
fadds
push
icebp
sbb
es
or
or
iret
or
dec
cmc
in
mov
cmp
mov
push
imull
popa
dec
sub
add
scas
es
rolb
jmp
adc
lds
jmpw
in
adc
les
leave
scas
mov
sbb
aad
sbb
mov
xor
push
jl
push
or
inc
rcrb
push
iret
jne
sub
mov
sbb
das
movsl
mov
lea
push
push
xchg
shl
inc
inc
jbe
dec
inc
lahf
adc
rclb
inc
lods
mov
push
nop
or
mov
loop
adc
adc
fstp
into
mov
jg
aad
lods
adc
mov
lods
xchg
mov
add
push
andl
fwait
fwait
add
inc
sarl
inc
mov
insb
inc
nop
add
leave
lock
fmulp
cmpsb
sbb
ficoms
mov
cmp
dec
mov
xor
movsb
in
fmull
cmp
cld
pushf
sbb
cmp
add
pop
mov
movsl
jle
rep
pop
mov
repz
add
push
and
sbb
mov
rcr
inc
ds
xor
jecxz
ret
cmc
mov
xchg
cmp
out
in
fisttps
or
fcomps
inc
in
fdivrs
or
jg
out
mov
test
stos
bound
fdivp
mov
sub
jo
add
xlat
fs
lds
inc
repz
inc
mov
sbb
fiaddl
cltd
and
sub
in
mull
cmpsb
push
cmpsb
mov
repz
repz
test
stos
shrl
nop
lods
lods
xchg
int
xchg
daa
rorb
out
push
pushf
sbb
inc
and
out
das
testl
xorl
push
mov
nop
idivl
arpl
mov
arpl
mov
stos
pop
cmp
testl
nop
sahf
cmp
jne
popa
sarl
jnp
sti
jne
sub
inc
xchg
icebp
mov
sbb
adc
cmp
push
in
icebp
dec
push
das
xchg
xchg
and
shlb
inc
sub
test
roll
pushf
add
enter
jp
rolb
loope
mov
mov
rolb
mov
dec
out
dec
or
sti
xchg
pop
js
adc
push
lds
lcall
jp
pop
rorl
inc
fwait
pop
leave
cltd
icebp
ret
inc
pop
add
jp
adc
pop
and
jb
sub
aad
push
push
fadds
jns
and
ret
pop
daa
jne
jecxz
fwait
es
enter
sbb
add
les
inc
sbb
dec
mov
push
loopne
dec
ljmp
adc
outsl
movsl
out
js
std
push
and
je
or
pusha
or
add
mov
imull
xlat
test
aas
mov
jo
jb
cld
push
mov
dec
add
das
inc
jl
xor
xor
test
pop
xchg
xchg
nop
push
sub
leave
push
scas
jp
cmp
pop
leave
sub
sub
or
les
int
sbb
fldenv
jo
push
jbe
push
push
sti
jecxz
imul
std
test
cmpsl
sar
pop
cmpsb
enter
and
jb
int
stos
ja
inc
xchg
push
mov
imul
adc
dec
fdivrl
movl
jbe
push
ljmp
lret
lock
push
inc
pop
test
les
xor
xor
cmp
pop
push
push
negb
mov
jo
push
fadds
mov
and
arpl
xor
fsubrl
jo
push
xchg
fsubrp
xchg
repz
xchg
xchg
cwtl
adc
int
or
aas
and
or
test
fidivrs
jle
inc
push
cmp
movsb
sbb
cld
cmp
pop
popf
adc
das
imul
jne
lods
int3
ret
dec
fnstcw
jns
dec
fnstsw
jns
and
iret
inc
jno
jp
inc
push
or
or
hlt
out
push
push
push
fdivl
xchg
jmp
flds
sahf
repnz
mov
add
jmp
mov
lahf
jae
sbb
rcll
mov
mov
adc
fdivs
mov
sbb
pop
mov
mov
jl
sahf
in
lea
sti
pop
fs
sbb
cmpsb
pop
sbb
xor
jge
add
insb
sti
ret
jno
and
rcll
dec
nop
out
in
jecxz
aas
mov
cmpsb
ja
kandw
out
fiaddl
fnstsw
and
cmc
insl
out
mov
mov
pop
mov
push
fwait
aad
cmp
xchg
add
in
pop
adc
mov
call
mov
aam
fst
rcrb
popf
jne
or
fadds
das
and
add
movsl
xchg
jb
pop
push
adc
cmc
cmp
push
push
fcom
lcall
push
negb
push
adc
xchg
lahf
jmp
cmp
dec
idivl
mov
test
loop
jp
adc
lock
shrb
pop
adc
js
pop
push
lds
fcomip
xorl
push
push
cs
adc
rep
addr16
sub
mov
lods
stc
sub
jecxz
stos
mov
mov
push
mov
stos
das
mov
stos
cli
rcl
jmp
sbb
and
mov
inc
sbb
outsb
and
mov
aad
mov
ret
sbbl
pop
movsb
inc
or
sub
xchg
inc
movsl
cmp
out
fimull
ds
xor
jne
test
inc
loope
adc
fdiv
jns
enter
or
imul
dec
xor
push
xchg
cld
out
lea
mov
xchg
ret
int3
jae
lea
pop
pusha
movsb
and
popa
push
and
cwtl
stc
xchg
xor
add
loopne
pop
test
std
jge
xchg
cmp
xchg
mov
cmpsb
gs
pop
or
xchg
jle
and
movsl
fcomps
imul
and
cmp
pop
arpl
aad
shl
cwtl
push
lret
aaa
mov
lods
cli
int
mov
aam
ja
out
shll
lock
push
sub
jnp
lret
fbstp
inc
mov
mov
in
sahf
mov
adc
es
jmp
in
movsl
imul
adc
mov
test
testl
in
mov
mov
rclb
dec
mov
pop
push
aam
outsb
jp
notl
add
pop
pop
mov
test
fnstcw
sbb
or
loopne
mov
or
dec
xchg
cltd
in
fstpt
inc
and
in
nop
add
or
xchg
add
xor
clc
js
dec
orl
and
cld
loopne
js
das
js
mov
fisubl
sbb
mov
inc
les
aaa
mov
pushf
mov
repnz
repnz
dec
mov
pop
pop
xchg
pop
inc
push
xor
std
and
popf
cmpl
sub
je
add
fs
pusha
shlb
sbb
push
pop
je
inc
adc
push
mov
jo
sti
shlb
adc
push
bound
ds
push
sbb
mov
xorl
btr
out
cmp
pop
loop
rcr
das
inc
iret
xchg
pop
fisubs
jge
jo
and
mov
cmc
pop
aad
push
sub
and
stc
adc
push
ficoml
gs
dec
push
test
push
das
lcall
repz
push
jno
cmpsb
je
pop
stos
cmp
fidivs
sbb
xchg
imul
pop
mov
scas
loop
imull
mov
and
cmp
pusha
dec
dec
inc
mov
mov
xor
jge
cmp
rorb
scas
mull
test
imul
mov
aam
push
inc
inc
out
xor
std
jp
fstl
divps
cmp
ds
orb
jbe
push
add
dec
adc
fcmovnb
sub
std
rclb
xchg
push
aaa
sahf
cs
sbb
sbb
xchg
movsb
cmpsl
mov
jno
stc
jns
mov
cmp
scas
jmp
movsl
inc
jecxz
bnd
outsb
adc
xchg
xchg
xchg
xchg
xchg
addr16
mov
lods
xor
sbb
jecxz
sub
mov
inc
fmulp
mov
adc
enter
jle
jle
jae
xchg
pop
mov
sbbb
xor
std
dec
jne
mov
cmp
addr16
jne
sub
mov
test
adc
inc
jmp
xor
mov
mov
aaa
sbb
and
mov
insb
cmp
popf
xor
sbb
sub
call
leave
jo
iret
fwait
sbb
add
push
mov
mov
pusha
imulb
in
pop
pop
cmp
add
test
rclb
clc
mov
test
xor
dec
lock
mov
stos
inc
aad
les
dec
mov
mov
nop
roll
jp
fwait
stos
adc
dec
jae
sbb
data16
lock
icebp
in
cwtl
fdivr
in
pop
out
imul
xchg
ja
jecxz
scas
inc
fmull
hlt
jecxz
mov
push
lods
fwait
int3
mov
in
orb
scas
out
jge
fmull
pop
insl
pop
pop
fs
jb
and
fidivrl
scas
dec
scas
stc
pop
cs
cli
mov
pop
and
popf
stos
push
cmp
and
or
loope
outsb
push
icebp
es
sub
movsl
xor
loopne
je
lahf
out
aad
push
outsb
xchg
ds
adc
scas
cli
rcr
mov
daa
pop
dec
cmp
daa
scas
inc
ficompl
aad
inc
adc
xor
imul
xlat
pushf
sbb
ret
test
ja
bswap
ja
mull
das
sub
dec
or
das
cmpxchg8b
int3
mov
mov
scas
push
push
sub
mov
xlat
les
shll
out
pop
and
out
dec
sbb
mov
mov
xor
loop
fs
fistpl
fnsave
pop
setb
clc
pop
xor
mov
out
int3
icebp
jmp
mov
push
dec
adc
xchg
inc
xchg
inc
and
push
dec
lea
sarl
mov
jb
cmp
in
addr16
rol
mov
sub
jge
jl
xor
jecxz
cmp
xor
rclb
jl
adc
aam
in
add
sbb
or
jp
loope
inc
jge
insb
mov
lret
jle
xor
xchg
cwtl
or
adc
ret
and
std
sbb
sub
push
add
rorl
repnz
mov
sbb
sub
jbe
cli
pop
jno
jle
add
mov
xor
aaa
pop
inc
sbb
jecxz
shrb
popa
cmp
xor
lock
push
cmp
cwtl
in
shlb
or
imull
sar
lret
xchg
leave
fstpt
inc
add
sbb
pop
idivl
and
push
and
cmpb
bound
push
inc
cmp
rcrb
imul
out
jmp
inc
es
ss
mov
add
js
jecxz
and
mov
mov
sbb
sbb
sub
aaa
dec
dec
orb
inc
fld
jb
xchg
fdivl
in
rolb
dec
jo
loopne
and
mov
pop
les
out
aas
ljmp
mov
mov
push
mov
sbb
cmp
lret
push
xor
cld
dec
mov
xlat
int
jp
bound
jne
movsb
mov
hlt
dec
fldl
sti
ret
rclb
mov
add
jmp
inc
sbb
sub
push
test
aam
xor
incb
pushf
test
inc
gs
leave
cmp
movsb
ja
imul
adc
xchg
mov
cmp
and
cmp
push
jbe
and
rolb
push
cmp
xchg
test
stc
inc
add
mov
cmpsl
and
out
in
dec
clc
adc
adc
lods
jecxz
mov
sub
adcl
test
dec
std
out
push
mov
fucomi
loop
mov
jle
push
xor
insb
mov
fisttpll
leave
std
cmp
cwtl
ss
sub
and
cmpsl
and
aas
lock
cltd
push
xor
loope
scas
rcrl
mov
pop
or
jp
mov
mov
push
imul
outsb
cmp
loop
out
pop
cld
push
adc
data16
xchg
xchg
icebp
or
adc
mov
jg
jge
adc
pop
cltd
xor
sbb
jnp
push
cmp
adc
cmp
mov
dec
mov
sbb
sbb
or
lds
adc
mov
mov
pop
adc
js
inc
adc
rcrl
imul
cltd
cmp
out
scas
mov
jle
sbb
sarb
stc
jo
clc
shl
mov
jnp
xor
cmp
sbb
out
push
xchg
cld
cmp
sub
in
das
mov
xchg
test
lahf
movsl
ret
cltd
filds
cltd
ret
mov
shr
in
jnp
jae
pop
fcmovnbe
in
adc
pop
mov
add
inc
push
sbb
pop
data16
mov
adc
dec
fsub
scas
enter
cli
in
loope
or
adc
xor
dec
icebp
outsl
ljmp
lahf
mov
lds
jle
push
pushf
out
cmp
fwait
push
push
or
gs
dec
mov
mov
insl
xchg
sbb
pop
ds
scas
sub
xchg
xor
aaa
jno
sbb
push
push
sub
inc
dec
sub
frstor
pop
aaa
sub
or
test
and
mov
inc
ds
loopne
pop
push
pop
mov
xchg
nop
gs
popf
sbb
imul
push
adc
jge
cmp
mov
jno
movsl
out
call
call
push
lea
repz
fwait
sbb
pop
dec
in
cld
xor
jo
sbb
jecxz
xor
sbb
push
push
cmpsl
stc
into
adc
stc
mov
sub
push
or
out
push
xor
inc
xchg
jl
xor
enter
cltd
jnp
idivb
jae
fisubs
loopne
lahf
pop
xor
rorl
lods
fwait
xchg
in
sub
ds
cmp
outsb
in
out
xor
push
rcll
mov
lret
mov
outsl
inc
neg
add
xor
lcall
pop
enter
dec
int3
std
movsl
daa
and
out
and
sbb
repz
sbb
adc
gs
loopne
rol
das
jg
sbb
and
nop
jmp
test
je
mov
jp
pusha
sbb
fiaddl
push
andb
hlt
push
std
mov
adc
hlt
mov
loope
jle
ucomiss
mov
movsl
out
mov
test
sahf
cwtl
lock
push
and
out
test
fisttpl
xchg
push
popf
dec
mov
pop
add
addr16
stos
andb
addr16
mov
add
out
dec
sbb
jecxz
shlb
fstpl
pop
sbb
push
mov
or
cli
add
outsb
xchg
cli
fwait
push
mov
mov
cltd
popf
mov
mov
and
mov
shlb
xor
out
push
push
bound
lret
mov
xchg
jne
adc
add
popf
mov
ja
dec
insb
pusha
push
jns
aad
jg
outsb
jp
popa
bound
or
loop
and
pop
rcrb
stos
mov
xor
cmc
sub
sarl
push
push
mov
mov
into
jb
lds
test
mov
dec
out
icebp
popa
and
sub
xchg
cltd
ljmp
and
cmpsl
leave
mov
outsl
sub
aaa
fistpl
xchg
ja
pop
movsb
pop
xor
fwait
jge
mov
adcb
and
xor
sbb
lcall
fsubrl
push
pop
clc
jle
xchg
ret
aad
test
sub
sub
mov
arpl
add
cmp
pop
sbb
push
je
test
xor
push
sahf
mov
iret
mov
adc
aam
das
out
mov
kmovb
mov
jbe
cwtl
mov
sub
xor
mov
sahf
out
mov
sti
aaa
sbb
call
xchg
enter
roll
and
into
and
add
sub
lea
jmp
sbb
and
pop
cmp
and
pop
lcall
sbb
enter
sar
pop
and
sar
dec
mov
aaa
jl
scas
adc
pusha
jmp
cmpsl
mov
movsb
mov
scas
add
fisttpll
bound
mov
test
add
stc
roll
mov
js
jne
push
xchg
lcall
testl
inc
mov
cld
and
adc
or
nop
fbstp
cmp
test
cmpsl
mov
mov
mov
and
mov
cmc
and
xchg
loop
push
les
pop
xchg
inc
int
and
push
ja
ret
insl
es
add
pushf
jg
pop
push
aad
cmp
cmc
mov
xor
or
aaa
rorl
mov
loope
test
mov
add
push
daa
sbb
icebp
shl
stos
adc
xchg
mov
adc
fdiv
popa
sub
xchg
sub
mov
add
js
leave
fnstenv
xlat
pop
jl
mov
mov
pop
jmp
jns
xchg
lret
mov
mov
mov
or
xlat
cwtl
cmp
pop
aam
negl
jb
rolb
adc
insb
mov
inc
jne
sub
pop
int3
adc
mov
jge
sub
or
jmp
sbb
cwtl
scas
ret
push
dec
sub
and
shll
movsb
mov
fs
fimull
xchg
aas
rcr
daa
ret
jg
out
fsubrl
mov
xchg
cmp
hlt
mov
push
aad
jp
pop
sbb
sbb
xor
sahf
push
dec
sbb
pop
sbb
cwtl
nop
jo
fsub
sub
push
js
outsb
in
lds
mull
lods
sti
mov
xor
xchg
mov
mov
or
out
ficoml
fsub
lcall
cmp
adc
xchg
adc
push
add
xor
stc
xor
xchg
and
jp
mov
outsb
push
pop
mov
pop
cmpb
xchg
outsb
test
pusha
popa
jno
xchg
movsl
cs
sti
or
shll
pop
mov
adc
stos
imul
cwtl
pop
sbb
push
jb
adc
outsb
xchg
pop
and
push
daa
sbb
pushf
roll
xor
push
pop
sub
mov
sub
add
dec
test
jecxz
mov
adc
in
mov
inc
push
outsl
jo
xchg
cwtl
push
mov
push
outsb
mov
arpl
ds
mov
or
jb
loopne
shl
jno
jno
pop
sahf
leave
arpl
sbb
imul
fcoml
aaa
xor
les
in
enter
add
lock
std
add
outsb
test
clc
inc
sbb
fsubp
addl
adc
mov
push
pop
sbb
and
mov
test
sbb
xor
imul
aas
sub
fists
aaa
insb
cmp
and
xor
cmp
mov
lcall
xchg
ffree
rcrl
dec
dec
cmp
push
ss
jmp
and
jnp
cmpb
in
icebp
mov
add
ret
repnz
push
sar
and
sahf
pop
xchg
clc
jo
insl
xchg
insl
push
adc
jmp
lock
movsb
push
dec
pop
mov
mov
mov
cs
lds
fcomps
jle
into
int3
sub
adc
jp
xchg
xor
inc
int3
lds
push
sahf
stos
mov
inc
mov
out
mov
push
and
int
gs
stos
aad
push
push
iret
es
scas
pop
mov
popa
inc
mov
sbb
jnp
sti
in
jno
aam
cmpl
or
pop
adc
push
out
test
adc
xchg
mov
imul
imul
mov
jne
sbb
jle
test
pop
or
lock
outsb
iret
add
leave
push
push
arpl
sub
int
aad
arpl
mov
ss
in
js
negb
ds
push
xor
lock
fisubs
and
dec
jno
rorb
jae
jno
mov
flds
cltd
lea
lret
sar
test
mov
add
sar
or
xchg
es
popa
subb
pop
int
mov
and
jmp
in
push
sbb
pop
xchg
jae
add
jecxz
mov
scas
cmp
push
sub
lcall
out
add
aam
loop
int
fiadds
in
jecxz
movsl
jno
das
aaa
pop
lret
mov
lds
push
mov
inc
push
sbb
clc
push
shrb
sub
inc
mov
fistpl
pop
jg
lret
pushf
sti
inc
jp
mov
or
push
or
push
cltd
push
inc
outsb
dec
enter
sbb
cmc
cmc
mulb
fstpt
dec
add
addl
mov
xchg
sti
jg
mov
in
test
loope
jl
sub
mov
clc
rcrb
pop
inc
sbb
in
aad
jecxz
dec
and
inc
xchg
dec
jae
sbb
in
cld
dec
imul
out
mov
mov
cmp
subb
in
mov
push
hlt
inc
dec
stc
sbb
sbb
cld
adc
pop
cmp
push
adc
pop
pop
arpl
ret
repz
push
fisubl
out
sub
lret
xor
lcall
jl
cmc
aas
fs
iret
pop
fistpl
mov
jo
jmp
cmp
test
insl
and
sbb
out
cmc
imulb
jmp
ds
jp
call
jae
sub
andl
scas
fbld
sbb
add
std
arpl
sbb
push
hlt
cmp
inc
out
pop
xchg
leave
sahf
icebp
ret
stos
push
enter
xchg
into
cmp
mov
sti
xchg
lods
outsl
jp
fstpt
pop
xlat
adc
mov
inc
testl
push
push
popf
mov
push
ud0
testb
mov
adc
iret
pop
stos
sub
imul
mov
push
lcall
mov
and
les
cmpsl
outsl
leave
bts
mov
sbb
push
lds
xor
pusha
inc
sbb
in
adc
hlt
cwtl
inc
cs
pusha
int3
cmp
mov
outsl
push
loop
and
inc
std
pop
out
out
cmp
add
out
notl
sti
xor
jae
mov
mov
dec
pop
hlt
inc
cwtl
cmp
addr16
roll
mov
stos
pop
fiaddl
and
lods
out
push
enter
daa
popa
out
fsubrp
xlat
mov
frstor
js
das
xchg
call
scas
sub
mov
adc
xchg
fdiv
nop
shr
sbb
mov
pop
dec
int
sbbl
pushf
pop
or
jecxz
int3
cmpsb
pop
add
sarl
cmp
adc
lcall
push
shlb
jmp
mov
pop
mov
pop
xchg
xorl
imul
inc
fsub
mov
fmuls
sub
or
aas
clc
mov
mov
inc
add
data16
lods
jns
pop
ret
or
push
icebp
adc
xor
pop
fisubs
xchg
popa
pop
shl
lret
dec
int3
lods
lret
add
cld
add
fidivl
test
hlt
enter
lahf
dec
ja
add
hlt
mov
lea
mov
mov
jp
lcall
es
mov
push
fs
inc
int
out
fcmovbe
mov
mov
fsubl
jno
aas
mov
mov
or
ret
mov
int
pop
cld
int
lds
rcrl
push
mov
pop
jmp
test
popf
ror
mov
adc
mov
mov
and
lock
pop
sub
xor
mov
push
mov
mov
test
or
inc
add
xchg
test
sub
cs
push
pop
shlb
shrl
push
insl
cmp
jmp
clc
outsb
jae
inc
sub
jmp
mov
push
adc
aam
cwtl
jno
fidivs
sti
lcall
adc
out
jmp
loop
mov
pop
push
outsl
cmp
xchg
out
js
add
xchg
mov
pop
jge
mov
enter
and
daa
push
lock
xchg
push
cmpsb
bound
dec
test
xchg
mov
ret
sbb
and
cmp
out
ret
inc
insl
mov
jnp
push
mov
outsb
test
push
sub
push
shll
push
push
push
call
add
outsl
scas
cli
ljmp
cmpl
pop
mov
fisttps
sbb
test
movsb
xchg
daa
nop
pop
jmp
cmp
test
push
and
fcmovbe
xchg
insl
js
xchg
lods
mov
fwait
or
adc
mov
rcl
movsl
adcb
cmp
lds
dec
nop
mov
ljmpw
sub
movsl
push
mov
fisubs
xor
addr16
or
xor
lds
push
pusha
inc
adc
ficomps
scas
vcvtpd2psx
and
xor
sahf
jle
mov
add
or
nop
fsubr
jmp
nop
clc
jo,pn
and
dec
mov
in
dec
mov
pop
adcl
pop
adc
cmp
push
adc
mov
add
loope
insl
test
xchg
or
scas
inc
and
push
mov
test
xor
adc
xor
xchg
push
out
sub
mov
int
cmc
and
fdivrl
iret
jne
adc
sub
jo
dec
mov
mov
lds
cld
test
mov
fmulp
inc
pop
dec
dec
lret
scas
jp
dec
jmp
popa
cmp
adc
pop
repz
and
xchg
pop
aaa
fwait
mov
dec
xor
cmc
cs
xlat
sub
js
or
out
mov
mov
dec
stos
or
mov
in
jbe
mov
popa
stc
push
rorl
mov
inc
inc
sub
dec
jb
dec
hlt
adc
and
sub
push
sti
add
dec
cmp
jns
daa
jg
and
inc
sub
fisubrs
add
pop
adc
andb
sbbb
inc
add
sub
js
jnp
jno
arpl
fistps
lods
xor
mov
pop
nop
mov
or
adc
addr16
faddp
push
repz
adcl
adc
and
mov
ja
ret
sbbb
dec
lods
lret
test
subb
xchg
jnp
mov
cmpl
sbb
ja
ret
lock
in
shll
mov
lds
mov
push
mov
outsb
addl
adc
fldl
repnz
jns
jnp
jbe
lods
pop
cwtl
outsb
xor
std
out
shll
or
mov
out
lods
mov
jmp
and
adc
adc
dec
sub
adc
xor
iret
ret
outsb
div
mov
sub
ja
push
mov
sub
push
pop
daa
mov
idivl
jo
push
adc
jmp
repnz
jl
aam
mov
lret
in
fbld
aad
daa
pop
pop
shl
pop
inc
xor
mov
pop
mov
mov
dec
jae
pop
mov
mov
fimull
push
dec
scas
pop
enter
pushf
push
xchg
sub
mov
nop
jp
jl
in
jg
jbe
and
jnp
fcomip
loope
pop
add
mov
divb
pop
je
mov
push
outsb
subb
lret
mov
insl
push
inc
mov
and
int3
sbb
repz
cmp
cmpsb
xor
inc
outsb
add
push
jae
test
insl
fidivl
cmp
mov
daa
fbld
loope
cmpsl
popf
aad
and
jg
dec
pop
sbb
in
lret
lahf
ja
sbb
nop
adc
ss
cmp
lods
insl
pusha
cs
jno
sub
lods
movsb
mov
jo
cwtl
inc
outsl
test
jbe
inc
aas
mov
mov
in
jbe
fwait
lret
repz
test
cld
lods
inc
lods
jg
xchg
cs
inc
mov
lds
mov
movsl
cmpsb
and
imul
pusha
icebp
lds
lcall
les
add
sbb
in
je
ret
ljmp
sub
test
call
lea
or
pop
pop
fisttpll
xlat
adc
ficoms
xor
mov
sbb
je
ss
and
icebp
insb
sti
sbb
xchg
cwtl
push
pop
mov
out
aad
pop
in
aaa
aad
push
inc
popa
jg
leave
mov
xchg
mov
cmc
add
mov
push
add
mov
data16
ss
cmp
dec
xor
clc
ret
cs
enter
cli
lea
out
das
cmc
pop
sbb
inc
pusha
leave
adc
mov
mov
iret
mov
movsb
lods
dec
fucomp
pusha
inc
xrelease
xlat
push
in
adc
aad
fcoms
dec
xchg
lahf
mov
popw
mov
xorb
lods
rorb
mov
xchg
scas
int
rcrl
jae
arpl
divl
dec
out
inc
adc
sahf
mov
mov
inc
enter
sbb
inc
push
mov
pop
mov
movsb
and
int
xor
fucom
inc
sbb
jo
jno
mov
cmp
jp
stos
mov
inc
dec
jmp
mov
inc
shrl
xchg
jnp
xchg
jp
cmp
out
xchg
dec
add
out
adc
mov
test
in
jne
push
xchg
aam
lds
mov
jmp
adc
lret
daa
call
les
adc
adc
xchg
outsl
jbe
lahf
bound
hlt
stos
out
fsubl
insb
xlat
hlt
mov
push
dec
aaa
sub
ss
sbb
dec
xchg
cmc
mov
xor
inc
mov
cmpsb
out
bound
dec
lods
cmp
sub
mov
test
or
pushf
addl
sti
cmp
jecxz
rolb
out
lret
cwtl
pop
arpl
cmp
and
or
fwait
mov
inc
lods
test
cmp
mov
leave
cs
fisttpll
repz
dec
inc
xlat
cmpb
mov
in
mov
jne
out
into
jg
jmp
sub
out
sbbl
lods
xchg
inc
jne
jecxz
popf
cmp
inc
sub
cmp
push
mov
jnp
sub
pop
pop
hlt
stos
xor
icebp
mov
xchg
mov
push
enter
fs
loope
ja
int3
inc
xor
imull
xchg
pop
insl
int3
dec
fldz
sub
icebp
and
dec
int
das
xchg
dec
xchg
negl
xchg
and
and
fcomps
sub
dec
sub
mov
mov
mov
sahf
outsl
xchg
cwtl
fists
jle
jg
sbb
loop
cmp
movsb
pop
cwtl
add
int
mov
add
push
sub
movntps
shll
subb
in
pop
ret
add
or
pop
cmp
jl
xchg
xchg
xor
or
int
xor
xor
loop
repz
push
test
popf
ljmp
mov
cs
popf
sbb
cmpsl
mull
icebp
xlat
fwait
pop
shlb
shll
push
push
data16
xlat
xlat
daa
clc
arpl
mov
jge
movsl
frstor
pop
or
jne
movsb
test
xor
and
imul
ja
imul
pop
iret
push
xchg
loopne
mov
aad
ds
push
mov
xor
das
ret
enter
jecxz
les
add
dec
xorl
xchg
push
and
es
jle
call
and
mov
into
push
push
std
aad
iret
dec
arpl
fwait
inc
adc
dec
imul
enter
sub
and
daa
pop
or
and
nop
mov
inc
mov
push
jb
push
mov
mov
add
clc
lea
aam
push
in
xor
xchg
int
int
add
test
lret
and
xor
xchg
js
out
dec
pop
and
jge
shl
add
nop
xor
adc
imul
ret
js
in
jg
addb
stc
and
pop
fldenv
and
outsb
lods
jp
jmp
lret
shrb
xchg
mov
bound
outsb
cmp
lods
push
xor
mov
lea
vmovups
lock
int3
call
outsb
pop
leave
ficompl
in
fistpl
sti
in
push
sub
mov
in
arpl
das
bound
dec
mov
loopne
gs
fdivs
jbe
xchg
push
push
cli
pop
pushf
and
cmp
xchg
incl
mov
xchg
sub
imul
cld
insb
lock
repz
stc
adc
shl
or
sbb
int3
sbb
add
lods
dec
mov
fcompl
imul
adc
lea
popa
loope
fstpt
sti
cmp
test
pop
int3
mov
cmp
mov
jecxz
lret
pop
divl
pop
pop
inc
movsl
lret
dec
cld
add
lea
push
clc
or
and
sti
stos
iret
lods
call
call
jb
inc
push
test
mov
xchg
frstpm(287
jmp
std
add
imul
sub
pushf
mov
jnp
out
and
add
scas
or
inc
out
lcall
jle
in
mov
int3
xchg
jns
jns
cmc
aam
or
mov
insl
mov
addr16
leave
mov
mov
repnz
sbb
mov
rorb
xchg
leave
dec
fistpll
cld
push
xchg
mov
out
xchg
mov
mov
mov
add
pushf
jle
cwtl
dec
dec
mov
out
push
push
jg
xchg
in
adc
bswap
cmp
push
or
inc
in
add
bound
movsl
shll
or
icebp
mov
jg
decb
cmpl
sbb
imul
pop
cmc
arpl
sbb
sub
cmc
shll
in
stos
inc
sub
dec
mov
pop
mov
xor
cld
ja
adc
int3
lea
adc
out
jbe
jae
test
push
push
sar
test
add
lret
cmp
stos
add
or
pop
xor
cmpsb
add
inc
xchg
into
ret
cltd
cmp
out
mov
test
mov
fdivs
pop
pop
push
jl
cli
stos
mov
pop
inc
mov
pop
icebp
add
add
inc
fcomip
dec
fistpll
mov
data16
xchg
xchg
lods
leave
scas
shrb
push
fiaddl
xor
jl
leave
pavgb
push
in
jnp
jmp
adc
push
mov
lods
dec
fmul
fistpl
or
inc
movsb
rclb
push
fldl
int
sub
jl
cmp
ljmp
bound
pop
mov
shlb
hlt
test
push
popf
daa
sbbb
imul
or
mov
pusha
mov
and
mov
xor
jmp
sub
mov
test
fnstcw
ror
cmp
adc
adc
sbb
pop
int
push
jg
outsb
aad
and
fidivs
xchg
inc
push
adc
mov
fsts
out
subl
pop
sub
push
outsl
jecxz
cmp
gs
and
rcrl
enter
cmpsl
aad
mov
cs
mov
fs
pop
shrb
or
loope
sbb
loope
cmpunordps
sarl
cld
nop
mov
shlb
stos
jno
ret
jno
jne
arpl
mov
aaa
pop
clc
mov
jo
xor
pusha
xor
les
fdivr
sbb
outsb
cld
xor
cmp
shl
repz
pop
xchg
call
mov
dec
sub
and
je
sub
add
mov
push
scas
movl
and
aaa
xchg
inc
daa
and
rcrl
lea
mov
in
dec
cwtl
je
fwait
pop
push
add
scas
mov
fnsave
in
jno
sbb
jg
xor
and
jg
int
lods
jno
xchg
and
mov
ds
shlb
fistpl
ds
dec
mov
mov
mov
outsb
repz
sub
loopne
test
ja
jg
mov
movsl
adc
mov
sahf
aam
push
rorl
mov
or
mov
jns
and
pop
loopne
es
jae
in
clc
shl
and
iret
daa
lods
int
pushf
and
xor
daa
jnp
fdivrl
push
js
cli
sahf
jmp
push
xchg
or
inc
roll
ret
popf
repz
jns
sbb
bound
pop
outsb
cli
rcrl
push
sbb
repz
insl
push
scas
pop
mov
pushf
stos
rcl
jl
clc
dec
or
dec
add
cmp
jne
push
cmpsl
mov
nop
dec
inc
cmp
mov
cmpsl
jle
sarl
mov
push
aaa
cs
insl
pop
ds
rorl
jno
dec
nop
pop
jle
mov
mov
mov
cs
xchg
ds
sahf
push
pop
roll
addb
lcall
mov
cmp
in
mov
popf
push
cmp
push
and
xchg
js
cwtl
movsb
in
out
add
pop
dec
jno
mov
pop
xor
push
int
out
adc
movsb
negb
pop
mov
dec
int3
iret
mov
repz
cmp
inc
mov
rorb
mov
jp
adcb
pusha
dec
fcmovne
in
mov
test
xor
push
and
sarb
ret
mov
fimuls
ja
push
fimuls
cwtl
xchg
ljmp
mov
xorl
scas
push
adc
fistl
fisubrl
cmpsb
jecxz
test
out
add
jno
fwait
push
xor
and
cltd
icebp
clc
add
pop
addr16
jmp
gs
and
or
xor
mov
test
cwtl
dec
mov
popf
xor
sti
push
dec
inc
and
cmp
orb
jg
xchg
mov
leave
mov
dec
or
lahf
jl
sti
scas
cmpsb
jp
cmp
iret
inc
add
pop
or
cmpsl
pextrw
push
pop
movsb
cli
fists
ss
fiaddl
pop
stc
mov
push
xchg
into
roll
out
fidivl
inc
xchg
test
imul
aaa
rcll
clc
fs
mov
xor
adc
push
push
jo
jl
mov
mov
int3
inc
je
adc
shll
sahf
and
dec
sub
movsl
fs
mov
xchg
loope
sub
outsl
mov
shlb
lret
add
rcrb
cmp
mov
lcall
in
lods
pause
pusha
mov
push
ret
in
jg
dec
cli
pusha
mov
jle
in
rcl
xchg
sbb
dec
inc
ret
jne
insl
xchg
arpl
xchg
mov
pop
inc
jbe
and
mov
mov
xor
dec
and
bound
sti
cmp
ret
in
rcrl
sub
ljmp
and
fldenv
sub
mov
sub
pop
xchg
lcall
jmp
lds
pushf
test
mov
iret
dec
insb
insl
hlt
in
sub
cwtl
rcrb
je
pop
xchg
fwait
lcall
shll
push
adc
lcall
inc
imul
jmp
pop
rorl
xchg
add
jne
push
push
inc
mov
addl
iret
jo
imul
gs
arpl
clc
jp
sbb
lahf
aad
cmpsl
mov
xlat
pop
cmpsl
cld
add
mov
cmp
sub
pop
sbb
inc
ja
fs
xchg
out
enter
hlt
fnstsw
mov
ja
dec
fildll
pop
push
xchg
stc
rcrl
push
mov
push
pop
xchg
xorb
scas
mov
js
or
mov
fxch
negb
lea
mov
stc
loopne
xor
mov
mov
push
out
nop
hlt
pop
or
cli
loope
cmpsl
out
jecxz
xor
and
iret
scas
add
out
pop
xor
jae
xor
cmp
jp
shrl
ja
repz
dec
xchg
sub
jo
int
fdivrl
mov
cmp
imul
loopne
push
fsubl
xchg
iret
mov
pop
cmp
sti
mov
jecxz
mov
xlat
xchg
or
dec
arpl
rolb
popf
mov
lret
push
dec
testb
jg
aaa
std
mov
stos
cmc
shrb
icebp
and
in
mov
add
popf
gs
insl
xchg
inc
inc
pop
leave
cmp
in
enter
incl
xchg
fstpl
pop
sub
lret
icebp
cmpsb
xchg
repnz
xchg
subb
pop
inc
lock
or
jns
add
cwtl
sbb
jb
std
mov
cmp
arpl
lea
xor
ss
jo
daa
shll
jae
clc
mov
lock
bound
sbb
xor
adc
pop
mov
lods
stc
gs
in
mov
loopne
add
inc
ljmp
sub
lret
push
mov
sarl
sub
jp
lcall
push
movsb
fstps
mov
pop
in
rcr
pop
xchg
mov
lods
cmp
jmp
outsb
inc
jg
iret
lods
out
add
dec
cwtl
fsubrs
and
inc
pop
dec
cli
push
and
or
add
and
mov
ljmp
cmc
xchg
sahf
lds
jle
adc
arpl
das
cmp
mov
push
and
out
xchg
and
mov
sub
cs
aad
daa
pop
xchg
enter
add
addps
bound
dec
and
mov
xor
sub
xor
cltd
jmp
fcom
cmpsl
or
or
jl
ss
lret
xchg
cmp
mov
cmp
cs
jo
test
push
mov
mov
in
mov
adc
imul
or
inc
inc
inc
pop
and
inc
gs
outsb
push
sub
mov
movsl
popa
adc
out
int3
add
inc
imul
and
js
xor
mov
mov
xchg
adc
or
adc
cmpsb
sbb
call
cmp
lahf
ja
push
sarb
mov
mov
mov
cld
test
in
sbbb
insl
in
mov
fstl
mov
inc
popa
push
jo
shrb
in
ljmp
xchg
inc
inc
scas
push
lret
std
jno
and
push
jnp
lahf
cld
push
jl
fisubrs
sahf
jle
mov
sti
repnz
mov
push
arpl
sub
jb
cmc
mov
jns
inc
pushf
inc
fadds
jmp
or
and
rorl
jb
daa
nop
add
repz
hlt
mov
pop
mov
shlb
and
xor
dec
lock
scas
dec
fs
dec
negl
or
and
out
fcmovu
push
repz
jmp
outsl
fdivl
add
mov
and
call
data16
dec
leave
dec
stos
cld
lcall
loopne
cs
in
push
dec
test
lea
imul
mov
xlat
sub
dec
das
push
lods
inc
sbb
jae
daa
mov
and
mov
out
imul
sahf
ucomiss
cs
in
ret
inc
leave
into
into
sti
pushl
fidivs
lahf
out
aas
clc
lcall
movb
jb
test
dec
push
popf
push
jo
mov
pusha
xchg
sub
adc
inc
filds
add
sub
sbb
mov
shr
mov
mov
sbb
aas
scas
imul
idiv
shll
rcrb
punpckldq
in
outsb
adc
fwait
clc
pop
xor
fsubl
repz
xchg
daa
inc
rclb
cmpsw
movsl
sub
scas
int
and
cmpsl
push
call
or
test
pop
xadd
adc
outsl
jo
xor
jp
or
cmpsl
call
shll
or
lcall
aam
loopne
mov
ds
filds
sahf
sahf
popf
imul
adc
test
or
mov
ret
rorb
xchg
mov
push
cltd
int3
in
mov
pop
cwtl
mov
mov
sti
or
xchg
add
cmpl
ja
data16
dec
fisttpl
es
subb
test
and
das
sbb
dec
jb
jl
jae
mov
movsl
test
mov
pop
cmp
ret
xor
es
std
mov
loope
stos
lahf
inc
loope
pop
xor
inc
sbb
in
mov
mov
sbb
sbb
pop
xchg
dec
inc
inc
aaa
call
inc
cmpb
fidivrs
rorl
clc
sub
mov
lods
repnz
lods
xorb
in
cmpl
pop
icebp
dec
push
jb
adc
into
pop
test
adc
sbb
push
cmpsb
cmp
mov
mov
cwtl
ja
filds
jne
scas
jnp
dec
adc
jl
movsb
lea
rolb
out
gs
popf
jp
loop
out
mov
jge
mov
jnp
mov
adc
mov
in
repnz
fwait
or
mov
xor
cmp
fidivrl
cmp
js
call
sti
test
push
jle
adc
aam
loop
jle
xchg
fidivrl
xchg
arpl
push
test
das
mov
cmp
in
mov
lods
push
fisttpll
jle
pop
repnz
push
fcompl
push
aaa
add
fucomip
imul
cmc
mov
sbb
xor
cmp
pusha
aad
mov
mov
les
shrb
jne
fs
popf
aas
sti
sbb
ja
xchg
cli
cmpsb
mov
pusha
mov
rep
dec
sbb
mov
iret
dec
cmp
fs
fxch
loope
test
push
mov
scas
or
adc
jae
inc
int3
rdmsr
mov
inc
sbb
loope
xchg
out
cmp
mov
cmpsb
insl
push
mov
jge
or
int
pop
mov
sarb
dec
push
add
pop
pusha
imul
jbe
cmpsl
adc
push
adc
cmc
adc
fsubrl
mov
push
cmp
mov
xchg
movb
movsb
inc
imul
nop
push
jae
sbb
in
gs
push
bound
xchg
mov
lcall
call
push
stos
cmp
inc
pavgb
aam
stc
mov
push
fcom
jae
fnstcw
out
insb
inc
push
in
lods
dec
rcll
movl
mov
hlt
sbb
or
test
es
scas
data16
cld
inc
inc
pusha
push
sbb
xchg
ljmp
mov
sbb
mov
cmp
pop
jle
mov
inc
mov
imull
cmpb
ljmp
subb
ss
mov
lock
mov
lahf
cld
xor
cmp
mov
cmp
pusha
mov
rolb
mov
mov
out
inc
clc
cmpsb
sub
leave
mov
cmc
lods
incl
lock
sbb
std
loopne
push
inc
repz
xchg
loopne
stos
jge
mov
add
jb
jbe
adc
and
push
push
mov
nopl
rcrb
pop
mov
xor
enter
out
cmp
les
insb
addr16
adc
mov
mov
hlt
mov
fsubs
pop
ror
lods
inc
mov
sbb
faddl
cld
fmuls
mov
mov
cmp
mov
stos
adc
cmp
inc
in
test
cmp
push
adc
sub
pop
dec
mov
movsb
pop
push
mov
or
test
push
mov
pushl
sbb
daa
pop
outsl
pop
mov
mov
sub
leave
cmp
jp
sbb
repnz
aam
adc
repz
arpl
int3
push
push
cmp
push
movsb
xor
cmp
mov
es
inc
mov
in
dec
sahf
sub
cmpsb
xor
stos
xchg
mov
mov
lea
ret
cmp
mov
mov
push
es
cmpsb
sbb
dec
jnp
mov
mov
in
fidivs
sbb
sbb
mov
adc
mov
dec
push
xor
push
and
pop
or
gs
inc
adcl
fisttps
pop
icebp
dec
mov
mov
loope
mov
sbb
xchg
fdivrl
pop
mov
insl
sbb
mov
jl
es
std
add
orl
and
rcl
mov
adcl
xor
stos
and
lret
pop
mov
stos
sub
mov
lahf
scas
test
cltd
pop
ret
sub
push
mov
mov
roll
add
sub
outsb
dec
mov
stc
xchg
stc
test
ja
push
clc
lret
subb
aam
pop
and
mov
daa
in
push
aad
rcrb
mov
pop
mov
adc
push
jo
add
dec
xchg
inc
andb
and
repz
cmc
fadd
sub
cmp
sar
jae
mov
scas
scas
pusha
adc
sub
imul
sbb
addl
scas
inc
lea
mov
pop
enter
sbb
mov
jp
dec
repnz
gs
test
jae
sbb
mov
xchg
and
pop
mov
or
xor
insb
mov
lcall
sub
int3
mov
sbb
lahf
lods
daa
outsb
push
gs
xchg
or
xchg
mov
and
mov
daa
mov
in
ret
mov
adc
testl
outsb
xchg
enter
cmp
les
aaa
cltd
and
xor
test
je
test
xlat
inc
pop
mov
dec
xchg
test
add
loope
out
cld
jg
movq
adc
das
inc
pusha
or
in
lret
jne
dec
sub
lods
test
out
adc
inc
jg
mov
adc
sbb
testl
jecxz
mov
cs
pop
movsl
repz
les
cmp
lret
and
inc
iret
lea
xchg
cld
adc
jl
ficompl
inc
imul
fdivr
push
cmp
xor
dec
scas
xlat
push
in
pop
dec
sahf
and
push
mul
ss
nop
sbb
and
cltd
or
inc
sbb
out
shrb
scas
jb
pop
inc
add
adc
jb
jo
cmp
push
or
mov
int3
dec
sub
mov
cmpsb
pushf
outsl
outsb
test
push
out
gs
insb
outsb
fstpl
lods
jno
jb
or
jb
cmp
xlat
inc
ja
ljmp
and
repnz
rorl
aaa
add
in
xor
xor
push
pop
outsl
sub
pop
jmp
push
jge
xchg
gs
fadd
mov
dec
nop
mov
leave
jb
inc
inc
xor
pusha
test
out
pusha
test
das
adc
or
scas
mov
cmp
fs
add
and
and
sub
shlb
add
or
pop
push
repz
lea
jb
and
das
push
and
push
mov
sub
in
rcll
out
int3
jbe
mov
jmp
sbb
pop
xor
lods
mov
mov
pop
push
shll
in
sbb
lahf
rcrl
fidivs
xchg
aaa
inc
popa
or
stos
jg
xor
add
int
jg
addr16
jecxz
add
mov
xor
jnp
pop
cltd
filds
dec
outsb
sbb
dec
test
xor
push
push
inc
add
out
ljmp
in
xor
add
in
xchg
xchg
aad
pop
xor
in
lods
mov
movl
mov
lret
sbb
xchg
and
cs
sti
jg
ljmp
push
and
xchg
pop
push
fwait
inc
push
shr
loopne
push
cld
xchg
adcb
ss
mov
dec
and
js
shll
cld
xor
daa
xchg
lcall
les
outsl
addr16
ja
sbbb
or
jge
fisubl
dec
inc
xchg
adc
cmc
aaa
gs
add
inc
ret
imul
mov
pop
lods
xchg
icebp
and
adc
push
dec
mov
push
test
push
bound
loope
imul
cmp
pop
add
push
ret
mov
jae
jg
shrl
mov
sub
adc
mov
mov
push
mov
xchg
sub
hlt
push
push
jbe
or
push
pushl
std
fucomip
bound
xchg
sbbb
xor
stc
iret
cli
and
xchg
bound
lock
in
adc
sbb
test
or
shld
jmp
repnz
test
dec
jb
xchg
loopne
lods
out
mov
jo
mov
fstpt
ret
inc
data16
aas
ljmp
adcb
loop
jo
repnz
pop
gs
mov
push
test
fsub
decb
lods
incb
popa
sti
scas
xor
outsl
sub
ret
jnp
adc
lock
insl
push
in
xor
mov
out
sbb
add
mov
ds
int
out
ds
sarb
dec
mov
sahf
jne
push
int
xchg
pop
lret
test
push
cmp
lret
xor
push
pusha
fisubrs
and
inc
jecxz
push
cmpsb
sub
mov
insl
dec
movsl
fwait
adc
mov
add
jle
ljmp
out
sbb
or
sbb
pop
sub
orb
push
in
add
in
and
testl
movsl
xchg
pop
in
les
cmpsl
bound
je
pop
ret
push
xor
cmp
daa
aam
enter
or
stos
shrb
lar
add
fistpl
inc
push
pop
xor
dec
inc
sbb
dec
decb
or
leave
cmpsb
ficoms
pop
jns
jae
add
enter
or
cmp
fnstcw
xor
sub
xchg
das
out
aam
test
push
aam
mov
mov
dec
fadds
enter
es
xor
mov
outsb
call
mov
xchg
dec
insl
cltd
push
mov
call
add
dec
jnp
dec
jae
scas
inc
and
ret
push
xor
mov
jnp
sti
add
mov
outsb
dec
jge
jno
mov
jb
add
shlb
stos
pop
subl
popa
dec
addl
push
out
mov
sarb
pop
loope
mov
mov
mov
aam
repnz
fmuls
jmp
cmpsb
dec
lds
jnp
push
xchg
repz
mov
push
xchg
push
movsbl
mov
adc
out
incb
xor
test
mov
lea
push
pop
cmp
fsubs
insl
lea
dec
test
and
lret
cmpsl
xchg
mov
lret
push
cmp
sbb
fcoms
xchg
jnp
scas
jle
sub
mov
push
mov
mov
mov
iret
adcl
mov
aaa
xor
jle
sub
or
fnstsw
filds
loope
aas
mov
cmp
ret
hlt
push
sub
aam
mov
and
loop
pusha
les
ficompl
das
sarb
inc
jns
jno
inc
int
shrb
int3
dec
mov
mov
push
push
leave
and
cs
push
push
sub
aad
das
jp
fsubrs
imul
or
icebp
repz
push
dec
out
enter
inc
adc
push
xor
mov
inc
cmovl
repz
pop
rclb
inc
addr16
mov
lret
je
imul
test
pop
in
cmp
jnp
fistpll
cmc
popa
lcall
push
pop
jae
dec
or
fwait
clc
inc
mov
mov
push
fidivrl
push
mov
push
js
sbbb
nop
lods
sub
mov
lock
lods
lods
test
cwtl
mov
cmpsl
mov
popf
mov
mov
adc
push
xor
push
pop
in
cli
insl
inc
imul
loopne
divl
jecxz
loope
adc
sub
loope
lahf
pushf
in
jne
pushf
bound
pop
lahf
out
push
pop
mov
add
dec
test
in
and
popa
in
call
repnz
fwait
adc
outsl
push
mov
shll
ja
out
movsb
or
out
xchg
hlt
pop
setns
xor
aam
cmpsb
fcoms
sbb
inc
xchg
nop
push
inc
test
lret
inc
adc
sbbb
addr16
push
pop
nop
or
and
or
loope
dec
insb
and
jbe
notb
aad
jp
mov
mov
lods
and
sub
movsb
sub
cltd
lret
pop
fimull
out
push
mov
mov
out
mov
ret
mov
jo
pop
mov
mov
js
sub
dec
les
sbb
out
std
or
add
cmpsl
and
push
fstpl
outsb
dec
jno
imul
scas
mov
pusha
jne
adc
mov
ss
sbb
imul
in
outsl
adcl
sbb
add
sub
add
leave
call
mov
pusha
addr16
fiadds
mov
dec
push
test
jmp
ror
sbb
fbstp
mov
dec
inc
test
notb
mov
orl
enter
test
adc
shll
sub
addl
push
pop
je
push
adc
test
jmp
in
mov
insb
flds
mov
push
jne
sbbl
loop
sbb
es
mov
jae,pt
xchg
icebp
mov
cli
leave
xchg
sahf
cmp
aas
xchg
sbb
mov
dec
lcall
cmpsb
sbbl
cmpsb
and
push
pop
sbb
mov
mov
mov
xchg
mov
or
enter
rolb
jle
cmp
inc
pause
out
cs
loop
arpl
cli
jbe
hlt
cwtl
popa
movsb
dec
jmp
shrl
call
movsl
mov
cmp
jae
push
cld
lods
bound
add
mov
mov
outsb
mov
iret
ficomps
rcl
mov
jle,pt
adc
dec
movsb
in
pop
adc
hlt
imul
sbbl
stc
pop
aam
push
movsl
outsl
jge
or
nop
and
xchg
insb
xchg
clc
or
and
jmp
lret
orl
xchg
and
jns
lret
pop
jb
and
xorb
mov
mov
ds
mov
add
sahf
das
jns
jae
in
aaa
xchg
xchg
fwait
sbb
mov
icebp
adc
push
push
ljmp
add
jno
daa
mov
outsl
outsl
cmp
and
jmp
inc
fildl
movsb
cmpsb
mov
jp
or
js
push
jp
push
fbld
add
xchg
in
aas
ja
mov
sti
int
rolb
mov
jge
lds
adc
cs
lods
int3
sub
test
in
jp
popf
dec
popa
adc
pop
jne
mov
jl
lods
lods
rcrb
or
hlt
dec
pop
or
and
aas
and
repnz
push
mov
fwait
mov
rorl
mov
inc
pop
adc
add
popa
jmp
movb
repz
push
xchg
dec
inc
scas
mov
jle
inc
roll
and
dec
arpl
jae
inc
sub
std
cmp
xor
mov
pmulhw
mov
loope
out
icebp
clc
xchg
pop
mov
xor
xor
icebp
sub
decb
mov
lcall
bound
test
inc
stc
push
test
xchg
cltd
movsl
cmp
stos
mov
sub
sub
sbb
push
test
test
xchg
in
xor
and
jle
je
aad
ja
cmp
pop
ljmp
fld
cmp
leave
sbb
xchg
js
adc
jbe
jo
pop
inc
sub
movsb
cmp
leave
inc
lcall
test
inc
jl
cld
or
test
xlat
jl
cmp
leave
test
popa
xchg
sbb
add
and
fwait
leave
loopne
icebp
stos
fwait
adc
shl
add
fists
sbb
dec
sarl
pop
dec
jg
iret
aas
imul
dec
dec
add
mov
push
jge
out
jne
dec
fdivrs
arpl
ret
pop
rorl
cmp
mov
push
daa
xor
mov
ret
ret
xchg
cli
ja
nop
jno
test
push
cmp
pop
pop
stc
cmpl
sub
inc
dec
mov
inc
out
imul
pop
fistpll
sub
andb
pop
mov
test
inc
js
xchg
test
pop
lret
xchg
stos
repnz
and
test
add
clc
push
stos
shr
dec
outsl
pushf
notb
in
notb
mov
setns
cmp
sbb
dec
adc
cmp
sub
jae
loopne
mov
imul
push
sbb
adc
dec
subl
sbb
xchg
cmp
pop
gs
sub
jp
int3
jl
add
pop
mov
xchg
adc
mov
mov
or
out
lock
sbb
movsl
icebp
adc
ljmp
out
lods
push
adc
ljmp
sbb
cmpsl
sti
test
test
imull
xchg
sbb
nop
and
es
stos
xchg
lar
mov
fmuls
ds
test
sbb
shrl
inc
xchg
push
cmp
push
loope
fs
mov
mov
push
jge
push
cmc
incl
adc
jp
add
addb
std
dec
pushf
pusha
imul
mov
mov
xchg
xlat
xchg
add
jns
push
jle
push
adc
dec
out
into
xchg
repz
or
out
add
js
punpckhdq
jecxz
pop
xchg
aad
pop
enter
ljmp
or
add
xor
pop
or
xor
dec
jnp
iret
xchg
les
flds
sub
paddw
xor
aam
insb
je
jecxz
or
inc
imul
cmpsl
jae
jle
sbb
mul
orl
lds
pusha
inc
xchg
mov
lock
ljmp
pop
test
jge
mov
and
mov
test
xlat
mov
sbb
addr16
adc
out
lods
fadds
mov
adc
aaa
jnp
xchg
push
inc
lret
mov
add
cmp
push
iret
movsl
sbb
insl
xor
pop
jg
pushf
imul
mov
mov
call
lea
pop
add
leave
test
mov
add
push
cmp
pusha
jo
xchg
mov
xor
jbe
mov
push
repz
sbb
jg
test
lcall
aam
jmp
lods
fldcw
push
mov
shrl
jne
and
scas
mov
insb
jmp
inc
jmp
aas
testb
jo
dec
sti
call
or
mov
mov
lock
xchg
test
daa
jecxz
push
adc
cmp
rclb
and
sti
mov
out
cld
xchg
iret
or
dec
mov
push
jecxz
ret
mov
mov
push
mov
mov
out
cmp
dec
ret
and
push
ja
in
pusha
and
jbe
mov
adc
push
push
dec
cmp
jp
adc
cmpb
and
mov
rorl
stos
and
or
and
mov
dec
inc
cmp
sub
rcrb
sti
mov
push
test
xor
mov
je
scas
sub
push
out
xor
cmc
add
jae
outsl
sti
sbb
mov
aas
mov
loop
bound
push
test
pop
out
inc
js
mov
lahf
mov
jg
xchg
scas
xchg
pusha
add
ljmp
not
xor
fnstsw
out
mov
jge
mov
shl
cmp
out
xchg
jbe
mov
pop
mov
cwtl
ljmp
sbb
add
sub
dec
mov
add
std
jp
adc
or
imulb
idivl
aas
dec
add
sbb
sbb
ds
mov
mov
rcrb
mov
xchg
jg
sub
daa
cmp
mov
xor
push
adc
push
sbb
stos
jns
lret
sub
jge
pop
push
xchg
rcll
jecxz
scas
loope
and
faddl
jmp
outsb
dec
loope
or
rcrb
test
ds
cmpsl
aam
mov
mov
rorl
cwtl
pop
jo
leave
pop
cmc
aad
mov
clc
xchg
stc
pushf
or
subb
add
das
mov
or
test
xchg
inc
scas
scas
sub
jg
iret
jle
sub
jb
mov
addb
mov
sbb
fsts
sbb
call
or
rol
pop
add
push
jns
jne
sub
imul
scas
adc
lret
adc
shl
pop
mov
sub
cmpsb
out
mov
fldcw
shrb
mov
popl
and
fwait
sbb
pop
jns
dec
sbb
cmpsl
loope
push
mov
xchg
dec
imul
dec
sbb
rcll
fs
roll
aad
mov
stos
and
addb
lods
insb
sub
aaa
mov
jns
inc
xorl
aad
into
push
int
and
loopne
jmp
and
and
roll
add
adc
mov
xchg
jne
bound
jg
inc
mov
add
sbb
das
push
mov
mov
xchg
aas
dec
cmp
push
pop
pmullw
movsl
mov
stc
sbb
imulb
movsb
push
push
pop
sub
mov
jns
sar
pop
lods
xor
push
pusha
es
push
sbb
and
rep
std
jg
mov
add
cmpsb
jge
pop
repz
loope
cmpsb
push
xor
ss
test
jno
je
push
jne
das
push
lahf
orl
outsl
iret
and
subl
or
pop
daa
outsb
lock
mov
or
in
pop
arpl
jbe,pn
enter
xchg
adc
mov
jl
into
cmpsl
jl
aaa
dec
inc
out
test
out
add
cld
or
arpl
mov
adc
cmpsl
call
loop
fwait
aaa
jmp
sbb
jns
pop
mov
cmpsb
mov
sub
mov
push
dec
movsl
sub
cmpl
xchg
mov
push
pop
lret
jae
sbb
mov
inc
push
jge
or
xchg
mov
inc
arpl
jge
push
add
cltd
fldenv
mov
subl
int3
sbb
addr16
je
mov
cltd
mov
addr16
push
adc
sub
inc
pop
lock
aas
mov
repz
push
mov
in
mov
icebp
iret
loop
dec
mov
dec
mov
mov
mov
imul
test
push
push
stos
aam
dec
adc
stc
xchg
jno
dec
sbb
enter
aad
inc
pop
jle
insb
out
pop
xchg
test
mov
xor
ljmp
mov
dec
shrl
xor
in
sbb
or
inc
aad
dec
es
ss
pop
paddb
jns
mov
sahf
and
xchg
mov
sub
pop
movd
ss
mov
cmpsb
lcall
mov
jle
cmp
xor
int3
out
fadds
js
sub
cmp
xchg
push
mov
inc
mov
push
jge
shll
testl
das
je
inc
dec
std
mov
sti
daa
push
xchg
ds
pop
pop
jmp
das
leave
xchg
inc
inc
cli
les
mov
ret
xchg
jge
cwtl
mov
push
push
jb
repnz
add
mov
mov
push
stos
mov
clc
lea
daa
bound
mov
cmp
test
mov
sbb
je
sub
add
addr16
pop
jne
cmp
fnstsw
fistps
adc
ret
outsl
add
mov
dec
lahf
push
mov
sbb
mov
or
sub
mov
insl
lea
pop
and
cli
fsubrl
gs
or
jae
stc
push
sub
inc
adc
pop
lahf
lcall
pop
cs
divb
cmp
divl
loopne
pushf
mov
in
outsl
shlb
and
stos
mov
stos
pop
jmp
cmp
and
xchg
adc
nop
mov
gs
movsl
stos
mov
mov
sbb
inc
pop
insl
stos
or
pusha
std
add
pop
cmp
jle
add
or
movsl
push
mov
sub
jp
dec
sbb
js
inc
xchg
cmp
and
test
out
sub
xchg
loop
inc
push
xchg
inc
popa
int3
mov
xlat
out
out
popa
push
cwtl
out
scas
mov
je
inc
sbb
inc
in
xor
mov
ljmp
popa
cmc
or
push
push
pusha
add
mov
loopne
in
cwtl
stos
ljmp
xchg
fistpl
sbb
jne
pop
inc
mov
andl
das
lret
negl
inc
ret
and
loopne
mov
subl
pop
out
push
push
pop
add
xor
mov
and
popa
add
popf
stc
push
nop
jecxz
imul
arpl
mov
rorl
pop
push
stos
out
jns
and
sahf
cltd
adc
mov
mov
popf
dec
ja
cmpsb
mov
shlb
bound
rcll
in
ljmp
sarb
and
pushf
jg
inc
xchg
push
icebp
scas
push
push
inc
cmpsb
pushf
push
imul
push
xchg
mov
jecxz
adc
in
fstl
sbb
unpcklps
xchg
repnz
cmp
test
or
or
dec
leave
insb
dec
pop
dec
jl
js
jg
pop
repz
aaa
mov
cmp
scas
test
mov
sar
cmpsb
aaa
ja
sbb
add
jg
inc
pop
cmp
mov
mov
dec
test
xchg
lods
scas
repz
mov
or
stc
sub
push
push
push
cli
stos
jp
mov
testb
or
sub
stos
data16
push
or
or
repz
leave
pop
out
out
idiv
ret
shlb
rorb
xlat
add
add
mov
or
jnp
iret
std
mov
inc
jle
call
mov
fsubl
cmpsl
ss
inc
cmp
lea
mov
mov
jmp
in
fs
and
dec
sti
fs
dec
push
lahf
pop
dec
jl
mov
dec
popf
adc
and
int
lock
mov
loope
lock
push
lea
adc
mov
dec
sbb
adc
out
pop
pop
movsb
xchg
test
fxtract
xlat
or
into
mov
fnstcw
iret
and
mov
xchg
mov
lock
add
and
jns
push
lods
jge
xchg
ret
sbb
das
sub
stc
cmp
mov
jmp
sbb
std
xchg
cmc
jl
mov
sahf
mov
adc
jecxz
std
outsl
mov
mov
rolb
sbb
movq
mov
aad
pushf
shlb
inc
add
push
fs
test
cli
bsr
arpl
xchg
and
das
mov
leave
movsl
out
bound
mov
push
fcmovne
add
mov
jl
nop
pushl
jb
shrl
out
pop
or
cmp
mov
add
pop
fucomi
shlb
adcl
gs
or
lahf
popa
jp
fstl
jo
push
lahf
popf
orb
dec
xor
jno
sbb
push
arpl
adc
cli
ret
push
ds
arpl
aas
xlat
pushf
test
jns
xchg
js
hlt
push
pop
in
out
push
ret
inc
jecxz
push
or
adc
mov
gs
cmpsb
out
add
mov
push
test
das
cwtl
repz
shl
and
jns
fisubrl
stos
aas
xor
loop
js
lret
popa
jb
rorb
mov
test
push
pop
cs
xor
jns
mov
push
daa
sub
xchg
sub
leave
lods
cmpsb
cli
outsl
fcompl
stos
xchg
mov
mov
sub
ljmp
jns
pop
cmp
pop
mov
popf
ljmp
fs
les
xor
out
adc
pop
call
cli
ss
pop
inc
mov
aam
aad
mov
addr16
inc
mov
dec
cli
jg
xchg
xchg
mov
mov
xor
test
xchg
push
cli
test
lcall
jo
fnstsw
xchg
scas
stos
je
loope
popa
les
scas
fs
adc
pop
addl
fdivrs
daa
mov
out
mov
and
or
cld
cs
andb
mov
aam
pop
xlat
fistpll
pop
mov
das
or
outsl
bound
cld
rorb
imull
daa
xlat
xchg
pusha
fwait
adc
push
inc
or
and
cmp
mov
fists
pusha
outsb
and
sub
icebp
sub
mov
push
ficoml
pop
lods
addr16
repz
lret
xchg
in
test
iret
and
cltd
jb
int
xor
mov
xor
les
les
sbbb
or
xorl
cld
adcb
or
insb
in
push
imul
xchg
mov
test
pop
ror
fldenv
fisubrl
mov
ja
iret
jg
int
call
xor
in
test
rcr
std
lock
cs
cltd
test
jne
jbe
leave
fisubrl
mov
xor
pop
rcl
dec
ja
push
xlat
or
test
cltd
inc
addb
adc
pop
pop
xor
sub
xchg
mov
sbbl
call
rcrl
push
dec
lods
jo
lret
xchg
xor
jmp
and
pop
sub
cmpsl
clc
and
pop
push
adc
lcall
sub
jg
adc
xor
jbe
adc
fcomip
inc
and
pop
js
sbb
mov
lret
cli
mov
in
sbb
rcll
push
mov
jae
mov
jmp
or
nop
jae
dec
das
ret
shll
sub
xor
adc
lret
and
mov
fisttpll
cmpsb
ret
mov
in
dec
adc
repnz
sub
jge
stos
fiadds
xchg
sbb
addr16
pop
test
add
lret
and
lods
pop
jo
jge
loopne
sbb
pop
mov
adc
jnp
mov
sub
mov
ja
pop
push
jge
filds
imul
out
cmc
movsl
push
fisubrs
pop
lcall
ret
popa
xchg
cmpsb
xchg
add
lds
sub
lds
aam
mov
addl
adc
lods
mov
in
or
lret
xor
pop
aas
cli
sub
sub
mov
shrb
loopne
push
mov
fsubr
xchg
mov
inc
arpl
xchg
mov
fs
fiadds
out
daa
lock
sub
jb
xor
sub
cltd
pop
or
add
clc
jge
pushf
cmpl
sbb
mov
pop
enter
mov
movsb
jns
ret
inc
xchg
cmp
xchg
js
pop
adc
xchg
jb
and
testl
adc
adc
inc
cmp
jecxz
in
addb
in
scas
pusha
imul
sti
mov
push
jno
mov
mov
popf
in
notl
lock
ljmp
sub
xchg
add
pop
subb
cmc
lea
mov
inc
xor
push
mov
sub
nop
cld
fwait
and
jmp
pop
mov
jl
enter
and
xor
push
push
stos
and
add
inc
popf
int
mov
je
outsb
shlb
cmp
movsb
into
push
inc
push
cmpsb
mov
mov
dec
push
or
add
pop
stos
fcomps
xchg
dec
pop
sub
jae
pop
xor
or
dec
inc
sub
sbb
push
sub
cs
push
push
sub
cld
pop
std
cmp
add
stos
pop
jecxz
add
sbb
jp
lea
lods
gs
rorb
jg
shrb
hlt
mov
sbb
push
jmp
mov
adc
add
scas
jae
out
das
mov
cld
jbe
jge
ficoms
stc
cmpsb
xor
fs
xor
shll
nop
jmp
arpl
int3
lds
xor
cmp
inc
dec
inc
pushf
lock
pop
pop
jno
cmp
mov
push
mov
andl
loope
pop
fptan
ret
scas
jae
shlb
mov
or
scas
add
enter
insl
into
jne
daa
sbb
int3
sub
or
jnp
in
int
add
insl
rcll
ds
in
nop
out
cli
shl
pop
out
xor
loope
sbb
jnp
je
fs
pop
push
icebp
push
not
scas
cmp
xor
mov
cmp
mov
sbb
dec
pop
push
adc
jne
iret
sub
or
lret
mov
sbb
mov
rol
idivb
mov
pusha
loop
add
jno
loope
xor
adc
inc
pop
push
mov
aaa
and
loop
sahf
jne
adc
jg
rcrl
testb
xor
xlat
sub
jmp
sar
daa
jo
clc
inc
jnp
adc
cmp
push
or
push
add
mov
rol
jp
and
xlat
pushf
xchg
jno
ljmp
adc
mov
dec
loop
fistl
pop
sbb
imul
mov
stos
out
xor
pop
loopne
loope
add
fwait
jecxz
lock
jle
aad
ss
xor
mov
lock
push
inc
lret
inc
xchg
xchg
mov
xchg
das
outsl
mov
in
lods
in
lods
push
adc
es
fsubrs
loope
mov
notb
pop
jecxz
xor
pop
cli
test
fiadds
sub
xor
data16
dec
jbe
lock
fbstp
inc
add
into
or
lea
cmp
lahf
push
rcll
clc
and
out
out
or
jp
std
push
shl
fisubrs
mov
cwtl
fs
push
imul
lret
hlt
push
mov
dec
xor
sub
sub
aad
ljmp
mov
or
lock
decb
inc
mov
jnp
mov
adc
bound
mov
je
dec
incl
bound
cmpsb
lods
dec
fcmovnb
ficompl
dec
and
test
mov
mov
mov
jb
insb
in
mov
push
rcrl
sahf
xchg
dec
popa
clc
mov
xchg
adc
push
pop
dec
fiadds
lods
dec
test
mov
mov
call
aas
sub
loop
andb
dec
xchg
addr16
repz
jne
xor
prefetch
push
les
mulb
push
inc
mov
loope
sbb
push
xorl
add
cli
stos
sbb
cld
ret
hlt
shll
jg
bound
sbb
push
jle
cmp
bound
xchg
popf
dec
xchg
imul
mov
inc
cmc
sbb
inc
mov
iret
xor
adc
pop
mov
inc
dec
inc
out
pop
cmp
imul
jb
fwait
mov
mov
mov
push
cwtl
push
mov
lret
cmp
das
pusha
flds
push
xor
pusha
xchg
cmp
das
mov
xchg
pop
xorl
pop
lret
movsb
xor
mov
add
mov
and
jle
loope
push
push
jns
dec
sub
stc
dec
popf
sbb
mov
dec
ljmp
pop
fdivrs
sbb
adc
aad
dec
hlt
imul
jns
insb
pop
dec
fldenv
imul
jl
nop
neg
push
decb
mov
push
jns
sub
jno
in
pop
movsb
aas
mov
test
rsqrtps
adc
xchg
push
jg
and
mov
aas
fcmovu
sub
sub
mov
fsubp
dec
mov
cmc
add
in
mov
adc
nop
xchg
add
cmc
jno
jae
lret
ret
jnp
lcall
jmp
mov
mov
sub
adc
mov
sbb
rorl
lahf
pop
and
push
jge
ja
jecxz
mov
xchg
testl
lcall
pop
iret
push
ret
mov
loope
xchg
pop
inc
add
sbb
arpl
xchg
or
enter
lock
lahf
ss
xchg
mov
in
pop
pop
ss
and
inc
or
xchg
inc
ss
push
jns
xchg
jp
aas
out
sub
nop
push
loop
pop
or
stos
pushf
push
stc
xchg
adcl
jp
cs
dec
pop
rcll
sbb
arpl
pop
scas
or
cld
sbb
nop
pop
cmp
xchg
imul
lods
mov
insb
or
and
mov
shrb
jmp
cmp
lea
fdiv
mov
xchg
mov
xchg
xchg
or
je,pn
test
in
mov
xor
shll
push
es
insl
sbb
or
mov
bound
add
lcall
dec
enter
addr16
and
mov
cmpsl
mov
pop
mov
pop
je
mov
xchg
adcl
out
sbb
rcrl
aas
imul
sub
daa
lret
out
push
in
dec
cltd
jns
push
jnp
xchg
sub
rcrb
daa
div
sub
dec
cmp
fs
adc
les
gs
lock
std
scas
aad
scas
mov
and
lcall
add
cs
push
cmp
mov
cwtl
adc
mov
adc
idiv
mov
movsb
jb
roll
out
dec
xchg
dec
inc
sbb
pop
cmp
nop
insl
repz
cwtl
mov
fsubrs
cmc
xlat
xchg
mov
sub
pop
ja
jmp
mov
std
push
sbb
pop
xor
stos
push
loope
nop
mov
xchg
das
inc
push
mov
aad
xchg
incb
hlt
loopne
pop
jno
push
aas
fnstcw
mov
dec
add
flds
cwtl
xchg
loope
jo
mov
addr16
xor
jmp
int3
test
nop
sub
pop
mov
popa
jns
and
cmpsl
scas
sub
push
std
jmp
dec
mov
push
jnp
out
and
stos
mov
jg
pop
test
rcll
dec
mov
jge
pop
hlt
inc
out
pushf
cwtl
mov
loop
pop
xor
push
xor
sbb
push
dec
add
repz
int3
test
pop
jp
mov
jg
xor
xchg
hlt
pusha
pop
aad
or
ret
shlb
cs
stos
fistpl
stos
pop
inc
xchg
clc
lds
mov
fadds
in
or
cmp
sbb
fisubs
mov
idivb
pusha
inc
push
imul
inc
mov
shlb
xchg
dec
push
sbb
in
cmp
jae
insb
jle
adc
das
mov
rorl
jg
les
push
mov
in
sbb
xchg
cmp
repz
mov
pop
andl
add
shl
ficoml
popa
mov
adc
mov
outsb
cltd
adc
stos
push
xor
lds
jle
sbb
sub
ds
es
in
mov
test
push
sub
pusha
xor
cmp
add
rcll
popa
adc
or
imul
loope
aaa
mov
mov
fs
adc
sub
movsb
lods
movsb
add
in
call
mulb
notb
mov
jmp
push
push
cmpsb
jnp
mov
sbb
mov
jle
imul
xlat
movsb
insb
nop
and
lock
jae
mov
test
jmp
and
icebp
jecxz
ret
xor
fs
sbb
dec
cmp
cs
jecxz
jp
rorb
pop
pop
xchg
xor
pushf
sub
push
pop
lahf
inc
fwait
aad
mov
jo
pop
ficomps
add
mov
push
sub
flds
pop
inc
dec
xchg
mov
out
imul
add
xor
pop
cmp
mov
imul
leave
sbb
xchg
int3
pop
jl
cs
fadds
adc
push
and
add
rorb
jge
iret
xchg
push
rcrb
xor
popf
and
shll
out
inc
push
pop
and
cltd
mov
in
shll
mov
xor
sahf
loope
sti
cwtl
pop
inc
jg
test
inc
push
add
sbb
addl
xor
mov
ror
leave
mov
jecxz
add
or
orb
xor
mov
xchg
popa
xor
add
mov
and
xchg
sub
outsl
mov
dec
lahf
mov
push
into
mov
lcall
mov
mov
xor
andb
je
nop
sbb
inc
xor
push
mov
push
sub
xchg
mov
js
mov
and
mov
sbb
lret
xor
mov
daa
loopne
pushf
testl
inc
ret
pop
xor
popa
mov
jne
scas
sbb
cmpsl
or
popf
xor
repnz
add
inc
call
xchg
lea
mov
pop
lds
and
pusha
jnp,pt
mov
sbb
cwtl
cmp
sti
lea
pop
xor
fmul
add
out
loop
pop
repz
rcll
mov
orb
dec
pop
inc
outsl
push
aam
bound
pavgw
loopne
out
out
lret
xchg
lock
cmp
or
or
movsl
in
out
push
xchg
jne
and
loope
mov
pop
out
sbb
push
je
jae
jnp
cmpsb
lock
and
roll
movsb
out
cli
fsts
mov
mov
push
ds
es
xchg
xchg
inc
sub
cltd
pushf
pushf
cmp
fwait
enter
cmp
pushf
loopne
jb
push
dec
lods
cmp
xor
sbb
add
xchg
jo
dec
ds
out
adcb
movsb
xchg
sub
mov
inc
mov
xchg
stos
fldl
inc
mov
pusha
dec
sub
mov
jnp
mov
adc
mov
mov
and
jp
loop
xchg
mov
stc
lret
test
inc
mov
mov
gs
in
loope
es
jmp
mov
or
cmpsb
popa
int
or
test
mov
js
les
xchg
call
ret
and
mov
scas
sbb
ss
movsl
sti
pop
iret
jo
inc
out
ss
adcb
jo
cs
cld
or
arpl
gs
aam
nop
test
inc
ss
popf
push
lds
scas
and
lret
sub
xchg
pop
repnz
sbb
bound
add
loopne
xchg
and
inc
mov
bound
dec
loop
out
sbb
cmp
pop
arpl
ds
adc
fisubs
mov
fcomp
mov
dec
scas
lret
adc
mov
mov
or
adc
sbb
fcmovnu
js
push
notl
out
adc
mov
test
push
cmp
filds
cs
fucomi
insl
cmpsb
or
aaa
stc
cmc
push
movsl
call
pop
add
loop
ret
cmc
mov
add
ljmp
add
push
pop
aaa
cli
push
aaa
nop
lods
fwait
mov
or
xchg
or
mov
in
inc
and
out
sahf
xchg
inc
mov
loope
cmp
mov
sbb
inc
jle
imul
sub
sbb
lcall
mov
aas
dec
mov
aam
call
cmpsl
dec
inc
sbb
jae
pop
das
dec
outsb
fsts
out
and
jp
dec
xor
daa
movsb
ret
in
lods
insl
cltd
outsl
test
cwtl
or
mov
mov
push
gs
and
imul
ret
fidivl
in
lods
out
scas
scas
sub
jle
fwait
sbb
cld
or
mov
push
into
jmp
inc
insb
add
test
aas
leave
scas
jge
test
hlt
rclb
cmp
or
mov
lret
mov
rcll
mov
adc
outsl
or
sbb
cltd
movl
aas
loope
pop
les
outsb
cltd
add
movsl
pop
test
fs
inc
leave
push
mov
jmp
mov
mov
sub
in
stc
pusha
or
popa
adc
sti
mov
out
mov
mov
incl
push
pop
test
mov
pop
daa
in
push
addr16
ret
pop
pushf
je
push
imul
mov
fwait
inc
lods
hlt
pop
mov
jns
xchg
scas
fimuls
xchg
mov
inc
sbb
in
in
mov
inc
xchg
scas
mov
out
test
outsl
loope
inc
add
jecxz
mov
push
mov
push
cmpsl
pop
aam
sbb
dec
adc
mov
stc
arpl
push
add
push
std
adc
sub
or
xlat
cmp
push
shl
push
fnstsw
flds
call
pushf
or
adc
ret
push
loope
idivl
jl
hlt
mov
or
xlat
cmovo
out
in
fnstsw
mov
arpl
ljmp
mov
cwtl
jle
xor
pop
push
in
mov
fisubl
xor
xchg
push
js
imul
or
outsb
imul
rcrl
pop
jo
cmp
loopne
mov
or
insb
or
mov
ret
add
jns
mov
movsl
into
cwtl
out
sbb
add
fs
in
into
jmp
je
cmp
push
fmull
iret
mov
and
lret
sahf
lods
test
cld
sbb
pop
push
xchg
js
test
mov
or
nop
xchg
add
js
notb
jp
mov
mov
lods
sbb
cmp
out
and
stos
cmpsl
and
pop
push
addl
pusha
mov
push
sbb
lods
xchg
cmc
fcmovu
and
jbe
out
mov
pop
add
add
and
out
outsb
or
dec
mov
es
lea
pusha
aam
lods
inc
push
and
rorl
mov
add
xor
push
shrl
cmp
aas
sahf
mov
pop
jb
fmuls
jl
lock
mov
cmp
seto
cld
adc
ret
push
and
cltd
fistl
sbb
cmp
sbb
cmp
and
dec
and
dec
rclb
je
mov
shll
adc
dec
and
sahf
add
in
or
xchg
sbb
mov
adc
add
lock
lret
or
ss
hlt
inc
int3
push
inc
inc
mov
adc
rcr
push
xchg
int
jbe
jg
iret
and
les
icebp
test
dec
mov
pop
jle
vpmacssdd
sahf
jp
cs
gs
lds
mov
push
pop
fsubrl
xchg
repnz
stos
xchg
decl
push
xchg
test
and
js
cmp
imul
in
cmp
adcb
andl
pop
das
inc
loop
add
sbb
sbb
lcall
pop
shll
xchg
adc
push
push
push
push
mov
scas
xor
adc
jp,pt
mov
push
insb
js
lea
mov
sahf
stc
adc
aaa
inc
dec
negl
inc
inc
ret
lods
bound
adc
inc
test
call
pushf
mov
loope
xchg
fmull
ds
pop
inc
or
adc
jp
dec
pusha
mov
xchg
mov
pop
add
lcall
pop
sahf
enter
jae
inc
sub
gs
inc
imul
repz
adc
inc
cmp
pop
pop
fxam
ret
push
jne
cmpsl
or
mov
ljmp
shll
xlat
jg
orl
xor
dec
dec
pop
adc
movsl
mov
mov
dec
adc
dec
or
adc
inc
pusha
dec
lahf
mov
aaa
mov
iret
cmp
ror
lea
jg
test
imul
pusha
mov
insb
movsl
jb
ret
push
sarb
fsin
or
fldcw
out
shll
pop
and
sub
insl
add
push
mov
inc
sbb
ret
jp
lcall
in
pop
lret
pop
loope
ret
dec
push
mov
mov
mov
xchg
rcrb
and
mov
jle
adc
mov
repnz
add
mov
rcrb
xlat
and
add
xchg
jb
clc
sbbl
mov
imul
push
shll
cmp
xchg
pop
mov
cmpsl
out
xlat
sbb
cmpsb
and
lret
add
test
popf
int
enter
fsub
xor
push
cmp
lret
inc
push
xor
cmp
add
mov
cld
fstp
inc
dec
xchg
ret
and
loopne
scas
pop
movsl
in
int3
or
cmpsb
jb
inc
imul
fidivrl
xchg
les
ret
mov
incl
or
push
inc
lahf
jp
sub
jl
clc
pop
jle
outsb
ss
pop
popa
sub
sub
cmp
sub
and
push
add
flds
push
fincstp
xor
lock
jne
in
xor
repnz
int3
mov
inc
pop
lods
adc
loop
dec
shl
cmp
testb
repnz
inc
icebp
and
imul
mov
imul
push
rorb
push
scas
lret
test
repz
inc
pusha
cmpsl
mov
pop
in
in
lds
adc
jbe
pop
lea
push
push
inc
sbb
sub
gs
jle
mov
cmp
xchg
xlat
out
arpl
inc
dec
cld
adc
das
or
and
test
jmp
add
mov
dec
mov
insb
push
sbb
cmp
lock
cld
xchg
add
aas
ss
int
stos
shlb
dec
jno
sahf
dec
fisttps
daa
xchg
mov
lods
xchg
push
mov
aam
mov
inc
fstpt
mov
std
bound
popa
cmp
pop
loopne
outsb
das
sbb
out
mov
xchg
into
fisubs
cli
fstpt
sbb
std
xchg
sub
adc
stos
xor
and
mov
cbtw
into
pusha
xchg
ljmp
mov
repz
clc
fdivp
test
rorl
cmp
mov
in
inc
jmp
jo
push
data16
push
push
and
add
mov
mov
enter
outsb
test
sbb
push
mov
dec
mov
xor
sub
cwtl
push
nop
cmp
idivl
lods
repnz
pop
and
pop
stos
cs
popf
cmp
push
adc
mov
fimull
jmp
setne
int3
mov
and
or
repz
adc
stc
push
stc
nop
sub
pop
shlb
and
fidivl
xchg
popf
adc
cmpsb
xchg
cltd
shll
das
pop
sbb
xchg
int
xchg
cld
test
push
add
repz
cltd
aad
movsl
nop
xchg
sbb
sbb
hlt
cmpsb
cmc
sub
xchg
cmp
pop
ret
fsts
mov
xor
int
pop
adc
and
pop
sbb
fucom
xor
mov
mov
in
inc
sbb
or
xchg
pop
or
add
xor
icebp
inc
add
pusha
mov
inc
jmp
lds
mov
fidivs
push
xchg
sbb
insb
add
cmp
jg
pop
cmp
pop
jl
pop
jge
test
add
jne
and
inc
in
movsl
outsb
loop
stos
cld
xchg
jae
inc
sub
in
inc
cmp
push
in
add
mov
into
pop
loopne
xchg
xchg
shlb
add
add
mov
stc
js
cmp
push
and
sub
xchg
sub
adc
jp
int3
lock
neg
sbb
stos
inc
fdivr
inc
jl
adc
mov
fadds
xlat
inc
push
paddusb
repnz
pusha
dec
stos
or
je
aaa
insl
push
xor
sbb
xor
stos
push
jae
push
xor
or
pop
ficoms
scas
pusha
and
push
inc
je
dec
xor
in
xlat
hlt
pop
mov
jne
dec
xor
mov
pop
pop
sbb
sub
leave
push
dec
mov
xchg
das
cmc
cwtl
sbb
push
add
sbb
icebp
jno
push
or
inc
mov
mov
dec
jns
adc
mov
nopl
pop
bnd
pop
dec
cmp
mov
inc
push
scas
and
pop
adc
lds
fwait
popf
fcmovne
xor
adc
arpl
daa
adc
jecxz
mov
dec
and
movsb
mov
jle
lret
loop
xor
idivb
lods
fcompl
rolb
and
std
inc
addb
es
sbb
mov
jecxz
adc
gs
inc
call
in
mov
scas
leave
pop
leave
adc
popa
pop
sbb
push
jge
mov
sub
adc
sarl
fcomi
jmp
repnz
arpl
jmp
sbb
adc
imul
popa
bound
mov
fstpt
into
mov
pop
fiaddl
loop
lock
popa
int3
mov
lret
sbb
add
arpl
mov
cmp
aam
sahf
inc
push
pop
sub
xlat
jl
mov
jnp
movsb
cld
pop
pusha
xor
mov
in
pop
mov
mov
mov
lahf
push
xchg
test
mov
dec
out
rcrl
mov
add
in
push
leave
push
mov
ds
xor
adc
jg
xchg
sbb
mov
xchg
int3
jmp
sbbl
xlat
cmp
mov
stos
pop
mov
adcl
iret
cwtl
and
cmp
lcall
xorl
inc
dec
jmp
test
stc
and
mov
jmp
xor
or
fldl
and
clc
add
stos
nop
sub
xor
adc
nop
aam
out
push
sbb
add
push
loope
mov
test
test
stos
mov
lods
sbb
mov
cmpsl
sbb
mov
pop
jns
push
add
aaa
sbb
inc
inc
cmp
loopne
pop
rclb
aad
rolb
cmp
or
subb
jmp
into
cmpl
adc
lods
sub
test
daa
fmul
andb
lock
push
cmp
das
add
cli
bound
das
daa
add
push
shlb
in
enter
add
out
xchg
inc
sti
out
cltd
jmp
adc
jne
inc
mov
pop
inc
in
dec
pop
gs
jp
push
andl
popa
mov
jecxz
jp
shrl
sub
lret
arpl
loop
cltd
mov
into
cmp
lret
push
jo
test
lock
rclb
sub
push
cmp
mov
cmp
and
clc
cmp
sbb
stc
sbb
hlt
and
push
xlat
push
movsb
enter
inc
mov
out
xchg
add
or
mov
cwtl
fnsave
pop
mov
jp
mov
imul
cwtl
ret
dec
insb
cmp
adc
mov
int3
sahf
lods
mov
xchg
fwait
pusha
pop
pusha
xor
ljmp
dec
jmp
loope
mov
cmpsb
pusha
mov
pop
outsl
sti
out
sbb
jl
fildl
aam
fdivr
sub
pop
int
out
cmp
pop
and
arpl
rcl
cmpsb
adc
xlat
testb
cmc
scas
andl
cli
push
mov
movsb
push
adcl
sbb
adc
repz
out
rcrb
push
sub
ja
negb
cmp
fldt
sahf
outsb
push
mov
addb
jge
xor
push
inc
jne
and
mov
loop
push
mov
dec
cwtl
xchg
cmp
pop
inc
into
add
xchg
sbb
in
repnz
fisttps
std
pushf
insb
pop
push
mov
pusha
pop
sbb
push
clc
jbe
aas
pop
and
sub
cmp
int
and
outsl
ret
xchg
dec
pop
in
sub
rcr
call
test
inc
push
aas
call
cmp
add
fsubs
cmp
xor
mov
imul
inc
test
mov
out
and
mov
dec
imull
fsts
cld
test
loopne
push
push
push
adc
in
test
and
pusha
les
jae
into
push
stc
mov
into
jae
aas
repz
mov
decb
push
stc
cmpsl
pop
in
call
clc
outsb
mov
mov
leave
mov
or
pop
push
pusha
call
cld
fisttpl
lods
daa
sbb
sub
inc
xor
jge
jl
in
out
dec
or
mov
adc
je
jg
mov
cltd
std
push
sbb
push
ja
fs
or
push
out
outsb
mov
nop
adc
dec
xorb
pop
ret
int3
jmp
jmp
movsl
out
or
cltd
pop
dec
or
dec
es
xor
shll
xor
movsb
out
jns
jnp
jp
loop
cli
inc
sub
sbb
mov
push
pop
mov
jae
or
popf
xchg
aaa
into
lea
sti
fidivs
popa
movsb
cwtl
loop
shlb
faddl
mov
inc
push
push
rclb
mov
push
mov
imul
divb
leave
jge
test
xor
imul
jo
push
sbb
in
pop
add
push
cld
inc
fs
xor
iret
push
inc
testw
cmp
sbbb
add
filds
scas
arpl
jle
imul
movsl
fs
push
fsubs
int3
and
imul
aas
mov
inc
pop
jge
adc
stos
ja
mov
les
shr
adc
sub
stc
xchg
sahf
fidivrl
mov
cmp
mov
jmp
ljmp
jae
lock
lea
mov
pop
aaa
testl
mov
jg
sbb
iret
imul
jg
into
jmp
adc
xchg
pop
mov
movsl
mov
mov
lods
fs
loopne
sub
data16
push
fadd
mov
test
mov
rcrb
mov
push
sub
sbb
sub
pushf
sarb
push
pushf
mov
adc
bound
orb
sbb
push
mov
pop
pop
sub
sbb
repz
aam
enter
ds
jnp
sub
xchg
sahf
je
mov
dec
add
add
push
mov
or
adc
cld
call
movsb
jb
mov
sub
rorb
lahf
push
mov
dec
arpl
mov
cmpl
loopne
adc
testb
sub
add
mov
bound
in
es
mov
fmull
sub
ficoms
xchg
mov
outsl
mov
xchg
pop
lds
mov
mov
sbb
mov
cmp
push
lret
xchg
or
out
je
out
addr16
je
xchg
into
cmp
fbstp
jl
ljmp
inc
call
popf
or
es
xchg
stos
addr16
stc
jb
pop
jbe
fistpll
aas
aas
fcomp
ret
outsb
push
clc
divl
test
imulb
and
imul
lods
and
sti
pop
lea
out
sti
lret
dec
nop
movsl
inc
fdivrl
mull
iret
lods
adc
mov
sbb
pushf
mov
pop
cmp
mov
cmc
mov
and
mov
adc
pop
loope
fsubrl
or
bound
sub
dec
jmp
test
add
inc
nop
or
in
mov
mov
sub
push
sbb
sub
cwtl
movsl
cmp
pop
push
jnp
hlt
mov
pop
xor
cmc
add
sbbl
jecxz
int3
dec
push
mov
aam
mov
lahf
fidivs
jae
pusha
or
xchg
add
push
imul
nop
jnp
loop
add
push
out
movsb
jb
outsb
stos
data16
add
pop
jmp
pop
or
les
imul
pop
lods
add
xchg
in
and
adc
and
inc
nop
sbb
jecxz
mov
inc
xchg
lcall
lahf
pusha
iret
popa
inc
pop
les
push
mov
adc
sbb
les
cmc
idivl
push
ljmp
mov
jbe
lock
shll
rclb
imul
xor
adc
fistpll
mov
or
test
push
mov
adc
lea
call
sub
adc
mov
loope
pop
cmpsl
lods
pop
aas
cmp
lods
mov
lds
lods
lret
fcom
mov
and
or
cltd
push
in
dec
mov
jne
mov
ficoms
jne
push
dec
je
pop
or
shlb
loop
and
arpl
cmp
call
pusha
in
cmpsb
shlb
mov
add
xor
dec
cltd
sarb
stos
push
sahf
mov
gs
mov
iret
loop
cmpsl
js
and
sbb
and
add
xchg
outsl
out
mov
repz
fsubs
or
inc
fwait
and
xor
insl
cmpsl
xor
pop
lock
arpl
stos
adc
xchg
sub
sahf
xor
int3
sub
mov
jnp
cwtl
xchg
sbb
adc
push
rolb
addb
mov
fisubrs
push
mov
or
push
in
cmp
and
out
cmp
jns
jbe
mov
mov
movsl
adc
sbb
xor
fwait
xchg
std
inc
sbb
aad
and
push
jp
mov
lahf
das
sub
push
mov
dec
xchg
push
mov
cmp
jno
mov
loop
mov
aad
lods
adc
jg
jae
lds
and
movl
mov
pop
lcall
lock
inc
loopne
inc
fsubs
add
lods
xor
lret
push
scas
dec
pop
inc
push
scas
bound
js
xchg
push
sub
ret
mov
cltd
fdivs
cmp
adc
aad
int3
in
fs
leave
movsb
mov
pop
jmp
pop
lods
jp
jge
or
inc
rcl
push
int3
into
shl
test
stos
jo
movsb
jge
jns
jmp
add
shl
add
sub
pop
repz
mov
sbb
dec
mov
enter
lret
xor
pusha
out
push
mov
jp
mov
stos
pop
sbb
xor
push
adc
ret
push
orl
rcll
mov
push
in
fs
lock
pop
dec
xchg
imul
pop
mov
mov
and
push
fmull
push
xchg
rcl
cmp
test
in
mov
out
push
mov
bound
and
push
inc
xchg
push
cs
loope
fdivl
or
in
or
inc
xor
and
push
xchg
xor
jnp
int
cmpsl
lret
xor
out
cwtl
push
cmpsl
fwait
mov
jle
movb
jle
icebp
call
aam
mov
add
loop
push
movsb
cmp
adcb
ror
mov
and
cmp
in
mov
jg
inc
das
lea
stos
mov
js
mov
mov
push
xlat
fildll
sub
xchg
push
jno
mov
mov
jecxz
clc
inc
or
pusha
sbb
inc
aad
stos
mov
jbe
jns
mov
test
inc
jg
popa
and
sbb
stc
and
jne
mov
adcb
add
lods
push
adc
lea
dec
dec
mov
pushf
es
test
adc
outsb
negb
fisubrs
jnp
out
pop
icebp
inc
fistps
dec
rclb
lods
in
daa
inc
or
adc
aam
xchg
mov
or
sti
mov
push
and
bound
sub
int
jmp
rorl
push
mov
mov
push
sub
mov
cmp
divl
sbb
fisttpl
pop
mov
add
lock
cli
push
fldenv
mov
cmp
cmp
xlat
cmp
aam
jo
mov
lock
addr16
ja
pop
jb
lcall
or
popf
xlat
in
int
push
mov
mov
sub
scas
pop
repnz
rolb
dec
cmpsb
xchg
std
dec
or
fwait
push
dec
xlat
pop
add
daa
xchg
mov
push
addb
lcall
pop
out
sub
push
mov
into
mov
js
hlt
sbb
test
sub
lcall
push
mov
out
or
push
arpl
add
les
jbe
fwait
mov
sbb
orl
and
nop
and
std
dec
inc
lds
out
imul
ret
and
cwtl
jne
pop
addb
pop
pop
repz
cmpsl
lret
mov
mov
call
in
jns
or
mov
cmp
adc
push
dec
pusha
je
add
mov
push
adc
rcll
xlat
lds
dec
pushf
xor
xlat
mov
sbb
push
and
push
mov
sbb
pop
sti
mov
or
movsb
bound
sub
je
mov
dec
stc
and
pushf
cmpsb
or
in
push
arpl
inc
mov
aas
call
mov
nop
adc
shrb
jb
ja
rcll
adc
ret
imul
addr16
or
mov
cmpsb
mov
sub
outsb
aam
pop
pop
out
cmc
push
popa
push
cltd
adc
insb
ljmp
cmc
js
mov
pop
inc
push
out
cmp
cmp
ja
mov
xchg
xchg
dec
push
and
mov
test
jae
fsub
in
inc
ds
xor
data16
repnz
sbb
push
push
cmp
daa
orb
cltd
fs
push
int3
mov
pop
aad
movsl
xor
push
es
push
push
movsb
adc
mov
not
inc
xor
cmp
outsl
and
roll
or
inc
cs
repnz
mov
movsl
xchg
test
mov
cmpsb
inc
loopne
mov
out
aam
and
lahf
cmp
xchg
jp
insl
popa
ja
hlt
sub
pop
addr16
pushaw
push
inc
xor
and
and
rolb
addb
daa
xchg
fstps
int3
mov
movswl
gs
lods
aas
pop
push
fs
repz
pop
fwait
nop
dec
or
popf
pop
sbb
sub
scas
cmp
pusha
mov
or
aas
adc
xor
fwait
roll
adc
fnstenv
pop
push
xchg
push
gs
call
or
sbb
dec
jb
pop
ja
pop
js
push
xchg
imul
repnz
jb
test
fisttpl
xlat
aam
push
inc
add
arpl
push
aaa
fdivrp
mov
mov
push
stos
sub
and
es
pop
loop
or
orb
push
mov
xchg
in
movsl
jnp
fdivs
or
cli
aam
pusha
int
dec
mov
gs
cld
mov
and
fdivr
es
mov
cmc
fs
push
push
daa
push
lods
bound
cltd
scas
jl
fildl
sub
jecxz
mov
add
inc
insb
push
fsubl
je
subb
and
inc
aad
xchg
in
icebp
adc
repz
test
call
or
addl
cmpsl
cltd
repnz
push
cmp
or
je
jno
and
es
jbe
test
mov
orl
dec
add
loop
std
loop
aam
pop
pop
push
lahf
dec
sti
jne
ret
sbb
xchg
xor
mov
hlt
pop
pop
rcr
lds
imul
fdivrl
sbb
repz
shrl
adc
cld
sbb
dec
sub
push
or
mov
pushw
in
xchg
addr16
or
dec
push
stos
xchg
jno
mov
push
stos
je
mov
sbb
jl
dec
bound
sarb
jne
sub
rcrl
sub
lret
movsb
je
jno
mov
or
js
mov
push
mov
es
xchg
push
lret
mov
shrb
add
cld
div
mov
fldt
mov
inc
scas
mov
inc
push
movsb
mov
cmpsl
enter
enter
fs
and
scas
pop
cmp
xor
mov
in
in
push
pushf
mov
std
pusha
adc
fcoms
mov
xchg
sti
xchg
cmpsb
lods
repnz
mov
outsl
aaa
lcall
imul
push
inc
pop
sbb
xor
notl
jo
mov
mov
or
jp
adc
dec
pop
dec
pop
mov
rclb
push
adc
lahf
adc
mov
das
lods
aad
pop
inc
push
mov
mov
cmp
rcrl
mov
xchg
push
stos
mov
into
sahf
rolb
push
mov
xchg
stos
dec
push
fiadds
loope
outsb
inc
repnz
in
jbe
sub
std
bnd
add
sbb
jo
shlb
test
sahf
sti
push
or
cld
pusha
rolb
jmp
jns
push
add
push
or
clc
out
rolb
pop
dec
mov
mov
push
mov
mov
stos
ret
xor
jecxz
inc
and
jne
ja
out
aam
sbb
insb
hlt
and
adc
rcl
fidivrl
je
ret
lock
xor
cli
shrb
nop
mov
popf
pusha
adc
stos
push
repnz
outsb
jae
push
add
jo
cmpsl
movsl
pop
ficompl
xor
xchg
loope
popa
jp
xor
insl
xorl
cmp
mov
add
adc
mov
jge
mov
inc
and
shrb
jne
loope
cmp
xchg
cmp
lcall
ficoml
cld
mov
jp
push
cld
xchg
sahf
sbb
xchg
or
pop
xchg
pop
add
xchg
loop
ja
pop
cmpsb
or
lods
ds
xchg
in
clc
test
out
jmp
gs
jmp
mov
mov
int
popa
or
or
or
mov
fsubp
les
test
inc
xchg
ds
pop
mov
sbb
mov
outsl
pusha
push
adc
and
ret
loopne
add
dec
ljmp
mov
popf
sbb
insl
add
jmp
xchg
add
xor
mov
jge
je
add
jle
gs
ja
lods
inc
push
aam
mov
pop
cmpsb
mov
outsl
jmp
das
ret
push
outsl
adc
mov
in
fldt
jae
aas
push
push
lods
pop
pop
jb
and
cwtl
mov
test
adcl
push
and
mov
iret
cmp
and
sbb
cmp
das
fs
or
shlb
out
mov
or
lods
xor
cli
out
sti
movsl
jo
or
mov
mov
rolb
pop
cmpsl
out
pusha
xchg
int3
adc
lds
sbb
ffree
mov
insl
xchg
into
sbb
fisttpll
ret
mov
mov
leave
mov
jne
dec
push
jb
jo
ss
fwait
xchg
into
sbb
and
out
das
or
aaa
push
inc
fistl
dec
fisubs
xchg
or
adc
decl
pop
jbe
daa
push
addr16
cmpsb
jne
ss
nopl
xchg
inc
add
jg
lock
into
sbb
adc
mov
in
gs
adc
sahf
pop
mov
movl
or
lret
jp
call
add
iret
mov
mov
jmp
xor
fs
jl
xor
or
lea
imul
adc
push
sbb
dec
fiadds
sub
sbb
sti
in
je
cmpsl
cmpsb
rcll
or
mov
jno
int
add
int
sub
iret
daa
and
mov
testb
inc
jge
dec
in
imul
jno
sub
jle
push
mov
arpl
mov
test
repz
xchg
call
bound
movsl
pop
pop
xor
je
inc
fcomp
js
xor
jne
test
std
insl
add
aaa
mov
in
sahf
cmp
das
mov
cmpl
int3
aad
out
adc
fcompl
push
lock
subb
pop
xchg
add
cmp
sub
movsb
sbbb
jg
in
dec
out
ss
mov
sbb
xor
and
mov
adc
add
mov
outsb
pop
daa
xor
pop
push
lret
xchg
xchg
jp
or
roll
movsl
lret
push
les
fdivl
dec
cmp
xchg
xchg
scas
and
repnz
lock
clc
pushf
mov
cli
pop
sbbb
insl
fldenv
push
stc
push
inc
pop
gs
mov
jle
ret
js
pushf
jb
pusha
mov
inc
je
jno
jmp
mov
add
ja
add
xchg
enter
push
push
shl
stos
shrb
pushf
sbb
xchg
mov
pop
pop
cmp
pop
jmp
xchg
xchg
packuswb
ret
adc
cmpsb
test
mulb
sbb
cmp
leave
into
cmpsl
mov
mov
out
loopne
jecxz
sbb
pusha
adc
std
pop
rcr
push
enter
arpl
cwtl
repnz
pop
hlt
js
adc
es
mov
add
repz
outsb
and
xchg
sti
popf
js
leave
push
xor
adc
mov
sbb
mov
dec
in
arpl
mov
rcr
sbb
bound
arpl
adc
rcl
leave
std
mov
lock
cwtl
inc
mov
sub
loop
dec
mov
pop
dec
xchg
outsl
dec
loope
mov
jae
and
enter
mov
mov
insb
scas
mov
sub
mov
out
inc
js
andl
add
mov
sub
fdivrs
dec
sahf
cmpb
jmp
test
cmpl
xchg
xor
std
mov
inc
repz
sub
test
inc
mov
inc
push
push
pop
idivb
dec
ss
int
pop
cli
movsb
cs
add
xchg
mov
cmp
lods
lock
mov
inc
jbe,pn
dec
movsl
xchg
add
sbb
bnd
jl
mov
fwait
cs
xlat
les
lea
and
addl
fisttps
sarb
dec
push
in
pop
hlt
jl
sub
movsl
iret
bnd
iret
jle
cmp
lods
adc
pop
imul
mov
mov
pop
push
jns
add
pop
mov
leave
loopne
adc
or
inc
in
and
imul
and
push
ret
addr16
jmp
in
dec
das
adc
xor
push
adc
jo
push
and
mov
sbb
outsb
inc
jae,pt
cltd
arpl
and
aam
rorl
mov
jmp
xchg
jle
iret
push
ds
push
adc
sbb
xchg
mov
clc
adc
mov
aas
pop
xchg
popa
inc
dec
sbb
test
cmp
push
leave
daa
cmp
repnz
loope
dec
sub
in
pushf
sbb
mov
and
ret
lds
mov
lods
xchg
sub
xchg
leave
mov
test
mov
sub
xchg
mov
out
xor
and
cmp
imul
add
ss
mov
sbb
mov
loop
dec
inc
cli
iret
jp
loop
jne
pushf
addr16
add
or
rorw
fdivs
fcmovnb
scas
pop
scas
mov
xor
push
lods
cwtl
lret
shlb
lock
fnsave
cmc
sbb
or
adc
leave
lret
ret
test
std
loope
push
imul
aam
xchg
xchg
mov
ja
mov
movsb
add
cs
icebp
xor
dec
mov
mov
imul
xor
mov
jns
popf
jno
out
pop
orb
popw
outsb
fadds
and
je
pop
xor
sbb
or
scas
mov
cmp
mov
inc
repz
mov
push
outsb
ret
js
cmpsl
fstpt
xchg
outsl
ss
cmpsl
adc
push
movsl
inc
imul
and
pop
imul
out
lahf
lods
mov
cltd
xchg
xchg
in
dec
inc
mov
clc
gs
xor
inc
loope
cwtl
sub
push
js
jne
xor
es
into
push
cmp
mov
and
inc
pushf
lret
mov
test
aad
cmp
sub
add
int3
sbb
mov
add
xor
repz
das
add
mov
mov
xor
test
inc
ljmp
or
push
addl
arpl
in
cmp
cmp
ret
cmp
fsts
ss
fwait
loop
push
fisttpl
jae
xor
mov
xchg
mov
pop
stos
xchg
xchg
mov
jl
jge
fstl
lock
or
loopne
cmpsl
loop
mov
aam
adc
lock
adc
push
or
xor
mov
jmp
test
shll
imul
movb
test
call
jns
ds
cltd
xor
or
dec
mov
ds
push
mov
je
fiadds
xor
cwtl
jp
mov
adc
stos
lock
xor
jmp
mov
repnz
pushl
sar
aas
je
pop
lods
rcrb
add
cmp
mov
insb
jb
jecxz
jg
adc
sti
jb
inc
mov
push
mov
mov
add
inc
cli
adc
movsb
and
mov
mov
inc
fcoml
inc
dec
push
es
fldcw
daa
arpl
imul
movsl
aaa
or
outsl
or
pop
dec
dec
add
sti
cmp
ret
add
xchg
sahf
pop
add
dec
sbbl
inc
fdivrl
fldl
xchg
adc
pop
repnz
xchg
sub
push
inc
js
dec
mov
xchg
and
pop
dec
insb
lcall
adc
js
mov
mov
sub
insb
addl
inc
int
popf
stos
fstpl
add
rorb
add
add
sarl
fs
sub
popf
hlt
mov
jns
inc
orb
sub
mov
or
mov
xchg
sbb
je
lock
sbb
repnz
lret
sub
cs
xchg
xor
jecxz
fimull
xor
inc
or
sub
stos
shlb
leave
aaa
xor
and
add
imul
add
sbb
dec
inc
jg
adc
mov
xor
inc
mov
jns
mov
jl
into
iret
xor
mov
rcrb
xchg
inc
cmpsb
pop
jp
lods
pop
icebp
inc
dec
xchg
mov
or
in
shl
ss
ffreep
lcall
pop
xor
and
or
in
outsl
sbb
mov
lahf
pop
inc
cmp
inc
mov
pushf
stc
les
scas
or
dec
pop
mov
push
ja
fidivs
pop
sub
ljmp
nop
dec
orl
push
lahf
and
sub
sub
es
push
lahf
out
pop
pop
pop
rclb
outsl
fcmovne
sub
loop
dec
jge
cld
pushf
in
push
jle
into
dec
jae
adc
jecxz
sbb
insb
inc
inc
dec
movsl
dec
sbb
add
jg
push
lea
and
fnstenv
les
fcmovnb
xor
jae
mov
sbbl
sbb
mov
inc
rcrb
test
dec
cmp
enter
in
fiaddl
loope
cwtl
cli
jg
sub
push
cli
fcmovb
iret
loop
pusha
shlb
fimull
fistl
and
lock
lcall
lods
stos
push
fstps
loop
or
push
push
sub
int
sbb
push
pop
sub
or
or
dec
xchg
xor
clc
dec
inc
mov
cli
jnp
push
mov
and
out
mov
mov
das
int3
into
sub
lds
jae
data16
cmc
jmp
xchg
pop
jmp
out
cmp
push
inc
fcoml
mov
xor
arpl
sub
shlb
sahf
nop
cmp
insb
fwait
scas
negb
push
mov
mov
sbb
pop
push
or
cli
inc
xor
ficomps
inc
xchg
xorl
or
in
push
fs
jns
je
inc
outsb
sbb
xor
orb
xor
sub
jnp
jae
out
xchg
inc
cmpsb
lea
adc
shrl
push
xchg
push
das
movsl
in
jmp
arpl
ret
ret
and
dec
jno
repnz
push
add
push
sti
fs
push
cltd
add
xchg
xlat
push
xor
outsl
inc
outsb
shl
insb
pushf
xchg
sbb
out
int
gs
push
inc
js
sub
pushf
dec
faddp
xor
jp
sti
aaa
imul
push
orb
clc
outsl
adc
aam
pop
dec
loopne
int3
idivb
push
ret
nop
fnstsw
inc
fisubs
in
adc
jne
fidivl
or
pushf
or
add
in
mov
push
fmulp
sbb
lret
ret
dec
jp
cs
fdiv
lret
scas
dec
push
out
cmc
loop
std
inc
insb
xor
xchg
ficomps
outsb
pop
ljmp
test
jp
xor
and
xchg
scas
adc
popa
mov
inc
mov
add
test
les
out
test
add
in
add
and
loope
jge
lahf
xchg
dec
and
jl
push
arpl
add
arpl
fists
je
and
rcrb
insl
nop
and
sbb
sbb
or
fiadds
ljmp
fnstsw
insb
jae
lret
jb
sbb
inc
sahf
adc
imul
dec
add
in
push
mov
mov
mov
dec
xchg
enter
orl
mov
int
xchg
jo
mov
loop
adc
dec
enter
rcll
and
shr
sbb
adc
popf
sbb
and
xor
cmpl
in
pop
leave
popa
push
jo
pusha
xchg
mov
dec
pop
bound
mov
sub
loopne
add
jmp
mov
popf
loope
cmp
aad
fidivs
push
rorb
or
bound
test
gs
fld
push
scas
shlb
dec
ficoml
or
inc
mov
into
or
mov
sti
sub
je
cmp
in
in
movsb
std
lods
adc
in
das
add
fnstsw
mov
inc
cwtl
ds
call
mov
sti
or
nop
and
push
xchg
sahf
inc
jl
out
orl
push
add
pop
adc
jne
and
sbb
neg
cmpsl
push
in
lret
stos
out
mov
mov
rclb
sub
pop
push
dec
test
inc
test
dec
outsl
popf
stos
and
mov
lea
add
gs
nop
in
shll
lea
pusha
bound
add
fists
push
cmp
stos
mov
lods
xor
mov
mov
daa
enter
notb
popa
shlb
fsts
notl
test
cmpsb
or
das
xor
or
roll
adc
sbb
push
out
adc
dec
insb
cs
jg
adc
out
je
lds
stc
popf
xlat
rcl
test
xchg
fucomip
mov
out
and
outsb
xlat
and
test
out
xchg
andb
jbe
in
cltd
jno
cmp
and
fstps
jg
cmpsl
xor
dec
and
mov
cmp
out
mov
fnstsw
rcl
bound
dec
inc
mov
mov
push
or
mov
rolb
mov
test
add
and
xor
shlb
fucomp
je
fidivrs
pop
addr16
xor
and
xchg
and
push
pop
adc
xlat
mov
scas
push
cmp
jnp
mov
cwtl
adc
sub
call
pop
dec
sbb
and
mov
lods
sbb
shr
or
or
or
test
adc
cmpl
fdivrl
jmp
xchg
cmpsb
mov
xor
jge
push
mov
fcomp
inc
push
in
test
cmpsb
or
xchg
dec
inc
orb
jecxz
call
les
mov
lret
in
ss
test
clc
pop
inc
jl
mov
cmc
insl
jb
inc
push
xlat
adc
ljmp
je
dec
mov
shll
xor
jne
arpl
mov
mov
mov
aaa
jne
mov
dec
cmpsl
sbb
inc
loope
stos
and
xor
mov
ljmp
sub
out
or
rclb
jae
mov
aas
cmp
loop
pop
or
shrb
push
fwait
lock
fs
mov
sub
fadd
pop
dec
cmp
jmp
adc
loope
push
mov
or
mov
es
in
test
jnp
loopne
das
and
fwait
aaa
mov
int3
data16
xchg
int3
cmp
add
sarl
pop
ret
fdivrs
int3
mov
and
int
sbb
jge
sbb
pop
sbb
out
scas
ja
lock
add
mov
inc
inc
jno
shlb
add
rorl
mov
and
test
fsts
cs
pop
or
push
push
add
scas
ljmp
jl
mov
pop
xchg
fbstp
mov
rol
push
xchg
idiv
jo
outsl
mov
dec
xor
shrb
mov
push
ss
addr16
xor
xchg
or
ljmp
imul
cmp
popa
fdivl
push
and
out
outsb
data16
or
movsl
repnz
or
sub
das
arpl
outsl
fldl
xor
push
xor
jbe
fsubl
sub
xchg
out
lods
ret
xchg
pusha
adc
xchg
fisttps
jmp
andl
or
stc
push
fidivrs
jle
xlat
lcall
jbe
add
pop
fsts
mov
add
pop
adc
mov
adc
test
push
mov
inc
enter
das
test
or
xor
addps
and
popa
xchg
dec
cltd
sbb
clc
xor
repz
jecxz
inc
or
incl
into
mov
sbb
adcb
adc
mov
es
push
jnp
xchg
jo
adc
rorb
addb
cmp
xchg
inc
adc
add
xchg
in
rorl
test
cmp
mov
pop
and
dec
push
xchg
repz
scas
push
stos
clc
pop
clc
adc
add
push
inc
ret
icebp
push
lds
pop
add
sub
in
cmpsl
rcrl
push
xor
push
aam
not
mov
fnstsw
xor
loopne
mov
popa
fdivr
sub
sub
mov
push
out
cltd
lods
hlt
xchg
dec
push
adc
xor
mov
cli
cmp
cwtl
cld
or
ret
ja
sbb
inc
mov
or
lret
fsubrl
inc
arpl
and
scas
and
jecxz
xor
loop
xor
adc
jmp
pop
push
xchg
dec
loope,pt
xor
cmp
adcb
jbe
sub
sub
fsts
addb
xchg
popf
rcl
jle
jg
xlat
andl
mov
addr16
dec
fdivr
call
mov
fs
data16
adc
sub
push
pusha
fisubrs
and
push
jbe
pop
js
mov
pop
or
aas
jbe
imul
lcall
in
pop
jno
shll
xchg
int3
jne
pop
mov
sub
out
push
and
xchg
inc
dec
jecxz
lods
iret
out
sub
add
xchg
loope
pop
ficoms
stos
ret
adc
mov
push
jae
pop
xchg
mov
cltd
add
cmp
jne
adc
inc
ldmxcsr
push
xor
sbb
sub
pusha
bound
leave
arpl
or
ljmp
dec
stos
mov
mov
or
shlb
shrl
andb
in
pusha
or
jbe
sub
into
xchg
or
or
cmpsb
loop
in
pop
mov
fs
pop
sahf
clc
je
inc
sub
fwait
jbe
test
sub
inc
push
adc
lods
mov
lret
stos
dec
jbe
in
jae
in
cmp
cltd
adc
jmp
addr16
pop
lods
inc
inc
xlat
jae
and
clc
sbbb
mov
mov
cmp
cmpsb
outsb
jmp
fcmovnb
clc
int
jl
outsl
movsb
insb
pop
out
mov
dec
xchg
or
pop
andl
xchg
fwait
loopne
inc
dec
addr16
xor
repz
adc
xor
repnz
mov
ja
push
lds
daa
in
mov
push
mov
in
js
fstl
push
pop
imul
popa
mov
mov
or
cmc
dec
sbb
xor
push
mov
adc
dec
pop
popa
out
in
rsqrtps
ret
dec
shr
and
das
adc
mov
jecxz
ret
mov
movsb
test
lods
aad
aaa
cmpsb
push
mov
pop
and
pop
jno
mov
jb
dec
pop
mov
adc
mov
stos
test
sahf
adc
cld
xchg
movsb
push
push
cmp
aas
jo
out
ret
mov
cmp
mov
sub
sub
mov
in
adc
xchg
mov
push
es
inc
loope
mov
loope
shlb
stos
scas
jecxz
pop
icebp
and
or
and
ret
sbb
sbbb
push
mulb
jno
fnsave
icebp
sub
add
icebp
arpl
pop
xor
push
inc
jl
mov
xor
push
fcoms
pop
and
add
push
xor
dec
imul
in
stos
cli
mov
aas
sti
mov
inc
xor
je
jmp
loop
dec
jno
mov
cmpl
in
push
cmp
jb
mov
jl
inc
inc
popf
or
mov
decb
test
xchg
aaa
mov
jb
mov
mov
cli
es
sbbl
decl
dec
cs
outsl
jae
cwtl
fisubs
dec
fistl
cmp
sbb
push
ficoms
loope
sub
dec
or
adc
lock
js
scas
sbb
les
inc
jecxz
icebp
sbb
pop
popf
xchg
jb
cmp
fsubs
jmp
add
mov
lret
push
xor
push
mov
testl
sub
movsb
nop
cmc
pushl
and
in
pop
xchg
add
iret
xchg
dec
int
push
pop
xchg
addr16
mov
int
xor
mov
adc
std
xor
stos
add
pop
sbb
mov
outsl
sbb
pop
or
jns
je
push
rcrl
imul
pushf
stos
out
movsb
cmpsb
jmp
data16
shlb
pusha
sti
rolb
push
mov
xchg
jmp
and
les
mov
lock
call
adc
jne
add
dec
je
push
sbb
sbb
ret
mov
mov
les
es
daa
subb
loop
gs
and
xlat
mov
cmp
push
jmp
and
inc
pushf
jns
inc
xor
inc
push
push
dec
jne
test
lods
lahf
push
insb
fmulp
mov
cwtl
mov
mov
mov
push
cmpsl
int
mov
loopne
movsb
shl
inc
lret
cli
add
cmp
sub
shl
call
insl
ss
sub
sti
stos
pop
mov
repz
test
js
pop
insb
add
daa
insb
xchg
mov
xlat
mov
and
icebp
push
lock
fisubl
mov
loope
inc
add
fwait
nop
xor
cmp
xchg
jl
popa
or
cmp
adc
popa
jbe
adc
sarb
jl
inc
jl
outsb
loopne
orb
mov
dec
adc
adc
xchg
fiadds
push
or
not
mov
rcrb
movsb
inc
push
ds
not
xor
mov
cmc
push
inc
mov
cs
ret
adc
and
cmpl
cmpsl
fs
mov
loopne
push
sbbb
inc
or
mov
push
add
aam
inc
mov
inc
ficoml
dec
jno
cli
pop
sbbb
dec
or
push
push
pop
add
sbbb
pop
sub
push
dec
nop
pushf
mov
das
push
mov
inc
adc
loope
insb
xchg
fmulp
jo
or
dec
out
push
sbb
loopne
jns
inc
out
cmpsb
add
push
imul
inc
fldt
jl
mov
repnz
rclb
shlb
ffree
jbe
iret
mov
cmpsl
rol
cmp
push
inc
pop
push
lods
sbb
adc
xchg
scas
pop
aaa
xchg
aad
sbb
add
push
jge
js
mov
mov
les
xchg
xor
dec
rol
cmp
or
push
cmp
and
and
jp
test
cltd
mov
mov
pushf
lahf
shl
lods
mov
cmp
and
les
pusha
cmpsb
dec
mov
je
push
cmc
shlb
jne
cmp
xor
and
shll
pusha
addr16
add
addl
mov
mov
call
les
xor
mov
add
add
sbb
aas
mov
mov
mov
push
movb
int
adc
pop
adc
push
cwtl
adc
pop
jle
outsb
xor
ljmp
lock
sarl
mov
aad
mov
adc
sahf
int3
push
mov
sar
lea
inc
loope
cmpsl
jbe
add
sub
daa
fwait
stos
jl
xor
es
rcrl
sub
aad
dec
shld
pop
movsb
fadd
sub
adc
jle
lods
pop
mov
inc
add
ds
lods
mov
cltd
mov
lret
push
sbb
shl
clc
adc
mov
repz
jmp
dec
les
pop
jecxz
cmp
sahf
cmp
jne
and
test
out
shl
push
jae
pop
daa
sbb
pop
clc
fnsave
pop
sub
and
xor
lret
sub
cs
sub
inc
jbe
push
pop
jns
dec
xchg
jbe
cld
jb
cmc
xorb
sbb
cmpsl
lds
ss
fldcw
dec
mov
pop
push
lods
sbb
mov
inc
imul
add
ljmp
jns
rcl
sub
sbb
test
dec
stos
leave
cs
test
mov
inc
fwait
cmp
push
in
push
cmc
fwait
test
mov
mov
repz
ret
mov
sbb
cmpsb
or
xchg
outsl
mov
enter
cmc
xchg
roll
mov
packssdw
mov
mov
or
xor
mov
iret
cwtl
test
mov
push
rclb
add
ss
cmc
push
mov
mov
sub
andnps
out
rorl
outsl
push
jmp
jge
cmc
xchg
mov
xor
dec
arpl
mov
cmp
mov
dec
das
je
sbb
dec
ret
ljmp
pop
test
adc
addb
inc
pusha
xchg
adc
cmpsb
jp
mov
mov
add
cwtl
loopne,pn
jg
aad
hlt
jb
mov
loope
or
cs
imulb
push
or
dec
ja
jno
mov
xchg
and
jbe
mov
imul
pop
mov
fdivrl
xchg
ficoms
or
loope
arpl
loope
push
jo
inc
inc
bound
rorb
or
and
inc
rorl
outsl
xchg
enter
stos
pop
xchg
out
ds
imul
sbb
jb
lahf
inc
xor
adc
daa
insl
jecxz
cs
add
xchg
sbb
cli
pop
jns
aam
shrb
mov
inc
out
int3
test
stc
test
nop
bnd
jbe
sub
inc
xchg
jge
shlb
arpl
dec
jmp
popa
mov
cmp
aaa
and
jno
notl
push
ret
dec
int3
add
adc
insb
sub
repz
sub
mov
in
jmp
mov
fmul
xchg
dec
dec
xlat
and
xor
in
out
leave
mov
and
or
adc
mov
or
cli
lea
ret
je
adc
push
and
sub
inc
je
mov
daa
or
add
roll
sahf
xor
jp
jp
pop
in
fnstenv
ss
mov
jne
pop
push
scas
jns
jge
nop
stos
cmp
mov
sahf
imul
mov
mov
jns
sbb
push
inc
or
sahf
fwait
add
mov
sbb
mov
hlt
push
jl
popf
decb
xchg
loopne
cld
jmp
mov
cmp
arpl
pop
cs
sub
adc
push
inc
cmp
push
stos
cwtl
pop
pop
mov
xchg
or
sarl
mull
add
popf
lock
jmp
add
data16
push
add
nop
push
insl
repz
mov
ret
data16
jbe
jbe
fcmovnbe
movb
xlat
test
mov
loope
sbb
mov
inc
push
cmp
dec
xchg
sbb
mov
push
inc
data16
lcall
cltd
jb
jno
int3
push
mov
jp
and
sub
leave
loope
push
jo
cmc
jne
mov
xor
loope
inc
mov
cli
push
push
lahf
xor
push
jl
fstl
sub
sub
mov
repnz
cmp
push
mov
das
mov
cmpsl
pusha
pop
mov
in
hlt
adc
js
sub
push
arpl
into
bound
lds
ja
rcrl
or
mov
and
push
sub
inc
arpl
mov
pusha
movsb
sub
cs
push
jnp
mov
mov
fidivl
fwait
inc
lds
hlt
jae
fisttps
inc
out
fsts
aaa
xor
pop
jp
push
decl
push
or
not
sarb
ljmp
in
sub
ja
jl
jmp
mov
cli
iret
cmpsl
icebp
fdivrp
xchg
repnz
ds
movsl
outsb
fstpl
and
insl
push
ret
sbb
mov
xchg
push
aas
push
add
jge
scas
dec
mov
or
sub
mov
jecxz
lods
xchg
cmp
sarl
xor
jle
mov
mov
push
sub
pop
sub
inc
jnp
mov
add
sub
insb
cs
cs
in
int
mov
aaa
ljmp
jmp
cmp
mov
dec
test
sub
dec
fcoml
xchg
ja
or
repnz
lahf
jns
adc
jno
push
out
xadd
lcall
mov
jne
mov
adc
je
mov
mov
inc
repz
inc
shr
sbb
pushf
and
push
sbb
sbb
repnz
pop
inc
mov
outsb
mov
mov
or
mov
mov
cs
mov
jns
or
mov
aaa
ret
in
imul
sbb
in
sub
fisttps
cmpsl
ret
jl
in
fs
stos
pop
imul
sahf
cmpsl
adc
rorb
adc
int
in
lahf
mov
sbb
dec
into
push
cmp
aas
out
sub
cmp
push
mov
pop
repz
ja
daa
jge
imul
out
sub
int3
cmpsb
lcall
mov
int
cmp
lret
mov
fbld
dec
add
add
inc
sub
loopne
ljmp
sbb
insl
hlt
sarl
push
xchg
outsl
dec
bound
pushf
sahf
or
data16
cmc
popa
fs
test
cli
sbb
mov
femms
add
mov
cwtl
or
mov
rcrl
xchg
popa
adc
sub
dec
in
ja
aaa
pushf
cs
push
mov
mov
test
push
cli
mov
mov
cwtl
inc
test
pushf
cwtl
xchg
mov
mov
mov
mov
sub
sub
leave
mov
fdiv
sub
push
sbb
lock
and
mov
mov
sahf
movsb
jl
pop
lods
outsl
mov
in
decb
sub
outsb
add
lcall
in
in
xchg
addl
lods
pop
mov
jmp
fdivrs
lds
shlb
clc
loop
js
add
cmp
pop
test
lods
sub
adc
mov
cmp
dec
jnp
loop
fmull
cmp
and
sbb
inc
mov
mov
aaa
movq
sub
mov
mov
andl
mov
push
fnstsw
push
pop
push
je
jmp
push
ljmp
cltd
jnp
add
push
jg
adc
jmp
cmp
inc
pop
out
imul
sahf
pusha
or
out
loopne
cmc
xlat
stos
sub
xor
and
jmp
pushl
or
rorl
adc
xor
push
cld
jbe
adc
aam
xchg
and
xchg
lcall
imul
sub
cmp
jb
ss
sbbb
xlat
mov
pop
clc
fdivp
and
mov
push
imul
int3
cmp
outsb
repnz
je
mov
xor
xchg
sub
cltd
pop
fisubrs
sub
push
sub
loope
iret
sahf
push
adc
mov
pusha
lods
out
in
sub
and
je
dec
pop
xor
nop
pop
aam
mov
mov
lods
cwtl
jbe
cmp
les
jmp
imul
xchg
test
cwtl
pop
lret
out
add
iret
fwait
mov
jns
dec
jle
pushf
push
aam
out
pop
pop
push
insb
mov
test
sbb
dec
jbe
jns
lods
jne
popa
inc
cwtl
xchg
test
jno
imul
jbe
andl
in
mov
mov
add
loope
pop
cmpsb
cwtl
arpl
mov
xor
push
inc
mov
hlt
sbb
pop
sahf
xor
into
add
popf
scas
sti
mov
das
insl
fadd
cmp
xchg
ja
inc
xor
pop
test
adc
mov
orl
inc
inc
test
scas
fdivrs
fildl
out
mov
cmp
dec
xor
test
jmp
out
lods
inc
into
jmp
aad
fs
leave
xor
xchg
inc
mov
lds
pop
push
mov
adc
pop
or
xchg
pop
test
push
cli
cmpsl
movsb
fdivrl
pop
sbb
xor
ret
pop
es
outsl
dec
std
test
rorl
adc
cmp
sbb
xor
daa
sti
xlat
and
in
or
stc
mov
cmc
inc
mov
push
insb
push
pop
mov
and
pop
mov
mov
cmp
out
and
mov
clc
lods
adc
out
xchg
pop
cmp
xchg
repnz
sahf
xor
mov
inc
scas
or
sub
aaa
scas
push
xchg
sbb
nop
cwtl
push
bound
push
popa
test
das
jp
sahf
xchg
jbe
scas
stc
xor
xchg
imul
lods
out
ss
popa
stos
call
inc
sbb
sbb
lret
cmp
mov
xor
dec
js
and
das
shlb
jne
adc
sbb
mov
inc
and
mov
loopne
in
mov
sahf
nop
and
stos
fstpt
pop
cmp
xchg
jg
push
out
or
es
out
scas
adc
xchg
imul
jle
mov
ja
fs
dec
pop
lods
or
jge,pn
mov
inc
adc
xor
lret
add
es
jecxz
into
fwait
lahf
jne
lret
xchg
jl
jno
ljmp
mov
test
push
stos
test
push
lahf
hlt
ds
add
into
int
cmp
pop
aam
adc
push
adc
int
xor
hlt
xlat
aaa
sbb
insb
and
nop
addr16
xor
cwtl
xor
outsl
enter
stc
stos
sub
jno
fsubrl
mov
or
scas
mov
sahf
andb
sbb
xor
lret
icebp
xor
shll
mov
add
roll
and
jns
pop
xor
xor
stos
cmp
out
inc
lock
cwtl
popf
outsb
daa
jmp
js
push
shll
adc
inc
fwait
sub
sbb
test
idiv
inc
test
movsb
popa
add
cmc
ljmp
adc
lahf
out
sbb
fwait
sbb
push
push
pop
pop
fnstenv
stos
sbb
arpl
cli
lcall
popa
iret
xlat
fbstp
lret
lods
xchg
mov
nop
mov
xor
dec
in
add
mov
adc
jp
xor
mov
mov
or
stc
and
mov
cmpsl
cmp
int
ds
xchg
insl
jbe
adc
xchg
inc
sbb
enter
xchg
pop
mov
shr
and
andl
fdivrp
imul
mov
xchg
fsubl
lret
xchg
push
jne
push
or
adcb
xor
cmp
int
popf
adc
jge
loopne
mov
sbbl
and
push
sbb
pop
push
sbb
lds
repnz
call
inc
or
inc
mov
inc
xor
mov
in
pop
ja
and
rorb
add
fwait
sbb
ss
jmp
pop
movsb
push
icebp
and
sbb
push
adc
cmp
fwait
sub
or
test
mov
xor
mov
inc
sub
xorl
fimuls
push
sub
xrelease
adc
xchg
jecxz
dec
roll
andl
jae
repz
add
cmp
test
pop
add
xchg
xchg
incb
out
push
jle
hlt
mov
and
jmp
sbb
cmp
inc
cmp
mov
aam
int
jno
aas
sub
frstor
sbb
fimull
paddsb
lret
cmp
loopne
enter
inc
ja
jb
repz
mov
int
js
xor
xchg
jl
or
mov
cld
jmp
into
jno
icebp
enter
cmp
jge
out
mov
ds
sub
in
inc
rcrl
dec
sub
dec
outsl
dec
push
xchg
loop
inc
push
and
lods
xchg
out
icebp
divl
jbe
xorb
popf
dec
sub
push
popf
sti
and
popa
les
xchg
pop
sbb
push
mov
jno
jnp
cld
loope
cs
lret
scas
pop
dec
and
ljmp
xor
cmp
inc
orb
ss
jle
xchg
test
xchg
inc
sbbl
arpl
sbb
dec
mov
pop
jb
test
call
adc
dec
jae
sbb
push
pop
scas
clc
mov
xchg
cld
add
roll
push
xor
sbb
pop
out
fwait
pop
or
cmpsl
out
lds
jp
pop
and
dec
stos
iret
and
shll
into
mov
fidivrl
mov
je
les
xlat
add
insb
adc
enter
popf
mov
ss
pop
pushf
bound
aam
out
leave
or
pop
scas
ds
aas
fstpt
adc
sbb
adc
xor
mov
mov
xchg
dec
sbb
inc
ret
lock
jg
lret
jns
call
jae
cmp
sti
inc
rol
rclb
mov
hlt
xchg
imul
pop
lret
ja
loop
xchg
int
jnp
imul
mov
sub
push
xchg
test
insl
test
call
stos
ret
jp
jns
mov
push
icebp
icebp
pop
xchg
adc
pop
clc
pushf
imul
fucomi
jns
aaa
insl
and
or
scas
push
or
in
out
pop
test
inc
mov
dec
push
hlt
xchg
movl
mov
jl
es
mov
movsl
test
inc
jmp
mov
les
jge
cltd
fisttpll
ljmp
mov
andb
sahf
jmp
push
mov
push
jb
jb
in
fcomip
into
fcmovu
pop
mov
movsl
enter
insb
xchg
inc
loopne,pt
js
je
sub
pop
xchg
cmp
push
fldcw
jnp
int3
arpl
negb
gs
adc
in
mov
mov
movsb
sbb
dec
out
rorb
fdivs
dec
jmp
test
fndisi(8087
lret
mov
imul
call
std
push
sbb
push
xor
popa
hlt
pop
jb
pop
outsb
xchg
test
in
lods
jno
scas
lret
icebp
fmul
jg
out
decl
pop
into
mov
test
mov
jp,pn
cld
sub
sub
scas
xor
fbstp
outsl
test
xchg
cmc
cli
xlat
addr16
test
xchg
cmp
lret
divb
jnp
data16
pop
mov
lcall
pop
ret
xor
je
cmc
ffreep
lahf
pop
sub
ljmp
cmp
test
outsl
int3
or
dec
jbe
cmp
stos
xchg
lcall
out
inc
inc
icebp
call
sub
aam
outsl
aam
add
repz
xchg
loope
and
leave
pop
push
loop
enter
aam
cmpsb
mov
int
scas
xchg
stos
imul
imul
cmp
das
in
repnz
pop
push
sbb
xchg
rcrl
pop
popa
imul
mov
xchg
ret
ret
add
sbb
mov
pslld
xor
add
ret
repnz
xchg
or
xor
popf
ds
sbb
sahf
and
push
jecxz
lods
xchg
inc
pop
pop
cs
out
xchg
mov
mov
dec
and
icebp
lret
mov
fidivrs
jp
shll
sbb
cwtl
dec
ret
mov
call
fisttpl
or
xor
jge
pop
jmp
cs
mov
ficoms
jns
or
pushl
fwait
das
xor
iret
add
dec
mov
pop
mov
cmp
test
or
mov
or
je
inc
push
lods
movsb
xor
pop
adc
xchg
xor
aad
aaa
fstpt
pop
push
inc
loop
xlat
ficoms
call
mov
mov
pop
call
sbb
shrl
xor
xchg
or
adc
stos
in
arpl
jp
inc
lret
mov
lea
cmp
mov
or
inc
push
ds
dec
xor
sbb
shrb
mov
push
cli
rolb
imul
sarl
mov
stos
dec
cmp
pop
hlt
add
jnp
repz
mov
cmp
jl
dec
pop
mov
pop
fs
xchg
iret
or
inc
dec
mov
or
sbb
pop
rcll
call
sub
clc
sbb
popf
push
dec
pop
jno
repnz
dec
data16
jb
cltd
ret
mov
jno
sbb
mov
icebp
sub
in
iret
push
pop
jbe
pop
jno
mov
mov
jb
fidivs
test
push
cli
dec
call
pop
cmpsb
fbld
mov
push
test
sarb
test
push
jge
in
xor
cmp
ljmp
push
inc
cmp
add
addl
push
jp
mov
inc
xlat
pop
and
stos
push
decl
nop
cmc
out
add
and
negl
adc
ljmp
es
out
pop
aas
in
push
fistps
sub
ljmp
nop
movsl
mov
shrl
ret
insl
rolb
outsl
out
jmp
add
stos
dec
jne
xor
clc
or
and
bnd
fwait
in
mov
daa
xor
je
aad
leave
or
mov
xchg
and
int3
movsb
hlt
mov
sub
inc
ret
jecxz
out
test
std
inc
enter
cmpb
ljmp
add
cmp
jmp
sbb
mov
and
cmpb
in
dec
or
jb
mov
mov
push
jecxz
push
push
pushl
jo
xchg
ror
add
sub
cmc
adc
xor
frndint
stc
mov
fistpll
xor
jno
cmc
addb
ret
sarl
mov
and
ret
cmpxchg
jg
mov
out
inc
sets
xchg
and
ret
addr16
push
inc
mov
shr
xor
fcoms
popf
adc
mov
mov
aaa
cmp
loope
insl
mov
push
std
mov
cmp
out
lods
sbb
jne
xlat
sub
rorl
xchg
idiv
sbb
je
shrb
les
inc
adc
int3
pop
jno
sarb
xchg
iret
lcall
inc
xchg
dec
movsl
adc
cmp
je
popa
inc
add
iret
lcall
and
xchg
fldenv
notb
inc
movsb
mov
adc
adc
sub
lret
ret
aaa
mov
jnp
in
in
xchg
shlb
mov
jo
pop
xor
add
pop
cmc
jbe
mov
push
decb
pop
mov
mov
jmp
xchg
cmp
sti
fwait
or
dec
push
cmp
sub
adc
repnz
sbb
sbb
pop
scas
test
outsb
into
jle
in
outsb
sbb
mov
xchg
mov
inc
mov
fcoml
pop
lret
or
fidivrs
dec
lods
mov
inc
sti
cwtl
dec
add
push
les
out
aaa
inc
out
into
enter
repnz
push
fldl
popf
daa
push
outsb
or
or
mov
cmp
sbb
mov
and
jbe
push
dec
test
rcrl
and
int3
in
lea
lret
push
out
add
icebp
push
dec
or
fwait
xor
aad
inc
mov
push
movl
pop
scas
in
test
jecxz
xlat
mov
or
icebp
je
push
push
or
mov
or
scas
cmp
cmpsl
jmp
gs
mov
out
or
insl
out
jecxz
adc
push
or
lds
xchg
jecxz
insl
cmp
and
dec
faddl
sub
jge
ja
es
cmpsb
mov
mov
xchg
xchg
xchg
xchg
mov
fidivl
gs
rcll
repz
aam
sbb
push
pop
dec
jb
inc
dec
insl
pop
dec
bound
aam
push
add
cs
test
scas
pop
mov
inc
pusha
stos
insl
test
push
pop
in
icebp
add
aad
cld
jp
leave
and
lahf
leave
bound
cmpsb
loop
sbb
sti
outsb
jnp
inc
cli
rclb
into
add
inc
or
cmp
fnsave
inc
sub
in
xchg
fdiv
data16
push
bound
daa
mov
inc
cli
xlat
inc
fisubl
inc
adc
fistl
lret
cmpsb
popf
push
fiadds
test
mov
std
add
pop
flds
je
fnstsw
ja
cmc
ret
push
jmp
xor
jae
xchg
jecxz
ret
dec
imul
push
mov
mov
sub
stc
sub
insl
mov
lret
cmpsb
xchg
bound
mov
mov
and
adc
xchg
sbb
rorb
pop
adc
inc
lods
sub
bound
out
es
inc
call
dec
bound
or
mov
push
push
mov
sbb
mov
cmp
bound
es
mov
cmp
jecxz
pop
lods
inc
rorb
jo
and
pop
ja
outsb
dec
mov
jb
ret
stc
mov
mov
and
inc
jne
dec
inc
incb
sub
fcoml
add
dec
add
cmpsl
in
mov
jnp
insb
scas
mov
lods
mov
push
out
cmp
ljmp
leave
sub
sbb
dec
test
push
call
fdivrs
loop
pop
cmovp
push
jle
cmc
movsl
insl
loop
inc
lock
mov
mov
ds
mov
repnz
or
mov
sub
dec
xchg
sarb
cmpsb
mov
ja
std
mov
outsl
scas
loope
pop
je
dec
aam
movsl
pop
insb
shll
push
cmpsl
andl
out
mov
jb
and
cmp
divl
pop
loop
and
mov
ja
insb
fidivs
add
inc
leave
out
cmpsb
fstpt
xor
inc
fmulp
push
mov
fsubp
lahf
in
enter
lds
out
out
pop
inc
mov
gs
mov
adc
xlat
rolb
add
dec
dec
loope
outsb
inc
jmp
ret
cs
ja
cltd
icebp
ret
push
adc
inc
lret
jb
lods
fisubs
clc
dec
mov
cmc
xchg
mov
pop
stos
aaa
and
jbe
popf
cwtl
adc
addb
jnp
leave
xor
in
pop
mov
and
push
call
sub
xor
in
rclb
xchg
push
mov
adc
gs
or
repnz
dec
outsl
cmc
sub
dec
xor
out
push
xor
stos
push
mov
call
mov
je
iret
loop
pusha
adc
push
mov
adc
pop
cmpb
sbb
mov
leave
leave
outsb
out
mov
fs
adc
in
mov
rol
dec
in
mov
je
mov
push
outsl
nop
clc
shl
mov
out
stos
xchg
lds
push
shr
inc
in
dec
pop
mov
dec
or
std
xor
jno
mov
es
or
dec
outsl
jne
outsb
adc
xor
ficoml
nop
mov
mov
sbb
bound
push
insl
into
push
jge
sbb
or
xor
sahf
sbb
inc
ret
fisubl
mov
mov
test
push
ret
fidivrl
ljmp
scas
shr
or
mov
xor
in
or
jmp
and
sub
sub
insb
loopne
ja
fists
and
xchg
cmp
test
push
int3
and
push
les
mov
das
xlat
mov
lods
pop
imul
push
addl
rclb
adc
xchg
adc
mov
dec
jae
jge
jae
mov
sbb
repnz
push
mov
clc
cmp
psrlq
adc
fcoml
jne
mov
dec
jecxz
rorl
jle
fucomip
pushf
mov
xchg
jmp
arpl
pop
add
leave
adc
cmp
cmpl
mov
outsl
mov
aaa
xor
shrb
cld
scas
push
mov
inc
roll
sub
and
ss
mov
jo
lret
cmp
xor
or
mov
pop
mov
rcrb
push
shlb
js
int
fldt
mov
inc
jp
cmp
mov
xor
loop
dec
scas
pop
or
inc
jno
dec
mov
fdivrs
pop
sbbb
repnz
loop
scas
testl
imul
arpl
daa
cmp
imul
cmp
lock
stc
stos
lret
or
and
test
xchg
push
cltd
push
out
mov
sbb
mov
push
cmp
sti
xor
or
mov
inc
pop
inc
mov
cmp
xchg
mov
test
cs
push
outsb
ret
mov
or
rcrl
sbb
ret
scas
addb
pop
test
or
movsl
mov
xchg
adc
or
xlat
pop
in
enter
lar
or
cmpsb
mov
ja
addr16
lcall
pop
js
sub
ficoms
stos
cltd
sbb
push
aam
and
mov
or
push
adc
xor
pop
in
mov
mov
fstpt
xchg
sbb
push
fidivrl
jno
pop
sahf
xlat
mov
dec
xor
lods
cld
fs
add
int
fmuls
adc
jge
sbb
fs
lahf
aam
dec
push
jge
sbb
movsl
jl
sub
insb
addr16
jmp
pop
cmp
repz
daa
les
mov
add
mov
inc
jae
cmp
std
push
pop
mov
cmpsl
flds
dec
fs
adc
lcall
mov
shrb
mov
outsl
rcrb
enter
mov
int3
xor
sbb
test
insl
and
nop
ss
add
jmp
sub
cmp
test
aas
dec
popf
into
jp
xchg
and
add
sbb
inc
popf
sbb
adc
data16
sbb
mov
insb
icebp
enter
mov
outsl
mov
xor
mov
sbb
jae
and
xor
xchg
mov
scas
fcomip
ret
sub
or
add
mov
ja
dec
or
testl
xor
scas
pop
cmpsb
dec
test
popa
jae
in
inc
and
cli
push
sub
loope
push
fstpl
pop
mov
inc
mov
mov
adc
mov
xlat
clc
xchg
sbb
adc
ficoms
imul
adc
adc
sub
cmp
cmp
dec
stc
leave
push
lret
lock
sub
dec
sti
mov
popf
stc
clc
in
cwtl
in
sub
insl
out
dec
sub
pop
add
dec
movsl
arpl
lret
cmp
xchg
jb
xor
int3
fs
xlat
call
cmp
cs
push
mov
gs
sbb
or
pop
mov
xchg
insb
dec
dec
push
xor
jo
sbb
cld
adc
pop
inc
dec
sub
mov
sahf
jmp
jg
sbb
mov
mov
mov
sbb
xchg
ljmp
sbb
and
sub
lcall
js
in
aad
lock
adc
stos
jbe
fisttps
dec
push
in
dec
test
xor
mov
cmp
daa
push
ret
xchg
pushf
mov
push
fnstcw
testl
cmp
test
idiv
cld
out
mov
jmp
mov
jg
mov
sbb
inc
cmpsb
jne
or
jecxz
dec
aad
sub
xor
mov
movsl
jns
xchg
jmp
je
mov
mov
pop
shl
adc
stos
and
add
jo
mov
outsl
or
sbb
mov
adc
pop
loopne
xchg
in
or
inc
mov
mov
push
popl
dec
inc
rorb
mov
addl
sbb
shll
fisubrs
enter
sub
mov
scas
xchg
repnz
pop
or
int
leave
adc
cmp
push
jae
sbb
or
push
cmp
filds
pop
out
lods
cmp
popa
cmp
jle
ret
js
data16
sbb
out
dec
adc
xor
cld
dec
and
push
aad
push
scas
sub
or
out
mov
stos
pop
outsb
add
inc
adc
idiv
and
push
ss
movsb
imul
inc
lahf
sub
stc
pandn
mov
cmp
xor
mov
dec
push
repz
lret
aas
sahf
int3
in
inc
pop
aad
jnp
or
rcll
cmp
in
les
push
ret
mov
pop
out
shll
jae
adc
inc
leave
mov
jae
mov
imul
aas
sahf
mov
sbb
rcll
in
jns
addr16
mov
lea
orl
cmpsb
arpl
enter
sbbl
pop
mov
dec
dec
imul
pop
sbbl
cmpsl
stos
add
inc
sahf
out
mov
adc
es
pop
lcall
mov
enter
dec
jbe
ss
mov
in
mov
mov
stos
idivb
fbld
ja
push
xchg
and
inc
hlt
popl
lods
mov
jbe
pop
pop
insl
cmp
jecxz
loop
rolb
push
dec
fisubrs
lea
add
sbb
jno
mov
xorl
jle
call
sbb
int
add
dec
in
ss
dec
adc
icebp
lahf
sbb
dec
mov
mov
pop
aam
sti
and
scas
ud0
dec
rsm
dec
xchg
lret
imul
sub
lds
lahf
pop
movsl
mov
adc
rcr
mov
fdivrl
sbb
xchg
push
or
shr
out
fdivrs
movsb
push
cmpsb
xchg
cltd
jo
pop
jg
inc
pop
clc
mov
inc
into
es
lods
cmp
dec
xchg
and
lds
adc
ret
xor
pop
mov
mov
ds
ds
gs
lret
into
fnstsw
pop
enter
push
pop
insl
je
pusha
out
push
pop
cmp
jp
xor
ja
lret
jecxz
popf
cs
das
orl
adc
pop
pop
jne
pop
cmp
xor
daa
or
call
ror
cld
xchg
mov
lahf
cmp
in
jno
insb
call
jo
mov
pop
push
fistps
stos
mov
add
lock
jge
dec
xchg
divl
pop
xor
test
stos
sbb
mov
stos
int3
adc
adc
cltd
fadds
add
lcall
pop
lds
or
and
loop
adc
sbb
xor
insb
inc
shl
cltd
jge
cmpb
xchg
mov
lret
pop
ljmp
insb
mov
inc
cmp
xorl
enter
out
roll
mov
dec
fs
js
inc
xchg
adc
iret
fistps
dec
stc
loopne
test
lds
lahf
add
adc
mov
mov
push
fisubl
out
jle
push
lock
pop
fadds
mov
test
adc
dec
jge
jg
sbbb
imul
pop
in
push
sbb
lods
xchg
jg,pn
sbb
sbb
mov
sub
andb
mov
xor
or
fld
out
jns
ds
insl
and
fsubl
push
mov
inc
jp
jo
outsl
out
mov
jl
xchg
mov
and
mov
mov
xchg
ds
push
dec
pop
stos
stos
and
aam
mov
cmc
jle
movsb
inc
mov
inc
fwait
lea
ret
in
out
and
nop
adc
clc
scas
add
enter
mov
xchg
and
push
in
xchg
cltd
loope
hlt
dec
fld1
lds
aad
enter
and
add
and
pop
fwait
and
adc
jnp
xor
jnp
dec
fnstcw
insl
scas
into
push
gs
pushf
popf
popl
inc
jge
das
mov
ficoml
cwtl
mov
pop
icebp
inc
dec
sbb
xor
sub
xchg
das
out
and
jp
sbb
mov
popf
jnp
dec
stc
and
sahf
mov
push
push
gs
xor
fsubl
enter
sarb
inc
inc
test
dec
sarb
pusha
pop
ret
loop
repnz
lcall
ret
shll
fdiv
lock
movsb
dec
inc
add
stc
mov
outsl
or
push
push
inc
test
jmp
fistpl
adc
jb
cli
imul
add
rep
push
inc
mov
xchg
lret
aam
dec
sub
mov
in
push
or
cmp
sub
and
cltd
push
and
mov
fs
jp
xor
fwait
push
adc
icebp
loope
inc
and
orb
pushf
fwait
xor
stos
xor
ljmp
into
mov
xchg
inc
sub
push
push
cmp
leave
push
mov
dec
add
negb
xchg
dec
sub
pop
call
sub
add
push
ret
arpl
negl
xlat
lds
daa
pop
mov
mov
add
or
lds
push
insl
or
lods
pushf
insl
add
aam
jne
sub
or
fsubl
es
push
mov
arpl
xacquire
inc
lods
imul
mull
lds
mov
xchg
dec
pop
adc
adc
outsl
or
inc
jg
or
add
mov
out
lods
push
inc
xlat
movsb
nop
call
mov
jmp
xchg
roll
or
popa
push
sahf
bound
cmc
popa
mov
cmpsb
cmpsl
dec
insb
repz
push
or
pop
ret
and
popa
cld
mov
pop
mov
int
push
xor
mov
sahf
fcomp
popf
out
lods
rolb
cmp
jae
fidivs
push
in
imul
fistpll
pop
push
mov
lea
addr16
mov
aam
hlt
stos
insl
mov
dec
add
lods
repz
fldt
scas
leave
jb
xchg
in
lcall
jp
mov
lret
movsb
xlat
pop
daa
mov
lock
mov
xchg
cmp
mov
dec
into
sbb
mov
hlt
mov
sar
pop
ds
sbb
shrb
sti
stos
stos
adc
call
jns
out
ret
movsl
jge
add
out
clc
outsl
dec
push
mov
cld
push
loop
dec
xlat
push
sub
mov
dec
pop
pop
fiaddl
outsb
mov
into
and
adc
in
repnz
adc
push
mov
jne
ret
aam
loopne
xlat
punpckhdq
jge
jg
aaa
xorb
xchg
out
fadds
jmp
dec
and
popf
rolb
dec
pop
xchg
mov
outsb
and
push
jge
add
loop
mov
cli
xor
into
and
pop
hlt
fidivl
dec
loopne
jg
jb
add
inc
std
or
push
je
mov
popf
nop
jb
and
jne
xchg
lods
sub
sbb
push
nop
ljmp
jae
add
sbb
or
das
and
push
mov
ss
aas
adc
add
shlb
dec
lret
out
inc
push
mov
cltd
jp
push
inc
xchg
and
sbb
inc
xor
or
fldpi
cmp
out
test
fsubrs
dec
sbb
sbb
enter
jmp
xlat
or
dec
mov
sahf
mov
xchg
sti
stos
sub
fs
adc
pop
push
jmp
test
xor
pushf
mov
sbb
sahf
inc
push
roll
hlt
fmull
and
int3
pop
dec
mov
cmpsl
dec
cmpsl
insl
andl
test
gs
jb
shlb
mov
insl
js
stc
rol
ror
das
movsb
int
lcall
movsl
out
push
sub
ret
inc
sbb
xor
mov
ffreep
insb
xor
loopne
addb
sahf
cmpsl
fildll
pushf
lret
je
xchg
rcl
out
add
in
jp
pop
or
inc
cmpl
sub
test
movsl
sub
jno
scas
or
xchg
pop
ja
pop
push
sbb
lods
xchg
lahf
xor
ss
hlt
test
aad
out
dec
push
push
jmp
mov
call
and
leave
push
jae
ficoml
imull
and
jl
xchg
sub
inc
test
pop
loope
mov
int3
xchg
xor
cli
sub
mov
jno
mulb
ss
sub
stos
mov
adc
insb
lret
mov
cmp
mov
jecxz
push
movsb
leave
in
sbb
lahf
test
sbb
xchg
sti
or
js
fimuls
sbbb
les
or
add
enter
hlt
adc
lret
dec
sbb
or
push
push
rcll
mov
clc
push
data16
sub
test
mov
jns
cli
mov
es
out
jge
cmpsl
jae
lds
ja
jle
fstpl
cs
in
out
or
stc
imul
repnz
dec
inc
mov
ja
mov
das
f2xm1
pop
arpl
add
arpl
or
jle
push
cmp
push
inc
and
and
aas
jne
jne
ja
mulb
sub
mov
fnsave
xchg
out
xchg
movsb
int3
push
push
pusha
inc
and
jg
or
es
stos
div
fwait
add
lcall
lods
push
mov
push
jne
mov
arpl
mov
push
xchg
dec
cltd
inc
or
sar
jno
pusha
movsl
icebp
scas
cmp
and
fdivp
and
bound
pop
add
bound
loope
je
mov
jl
int
sbb
inc
pop
ss
jp
xchg
lods
out
test
das
mov
movl
xor
pop
les
mull
rcll
nop
cs
xchg
scas
and
loopne
imul
pop
sbb
jl
xchg
loop
and
dec
pop
xchg
test
jns
cli
jp
xchg
mov
jg
sbb
andl
dec
inc
into
arpl
aad
out
bound
shlb
enter
pop
mov
nop
add
cli
xor
js
jne
cld
dec
lods
sub
add
or
sbb
jnp
lret
std
xor
sbb
fwait
cld
and
mov
ja
mov
repnz
jg
and
in
fldl
or
shrb
pop
ljmp
aam
pop
xor
scas
push
ljmp
and
push
out
sub
imul
jo
jno
mov
stos
and
xor
popf
or
xlat
mov
xor
pushf
and
lea
out
cli
sbb
stos
inc
pusha
lods
cld
jns
pop
pop
pop
cmp
cmp
adc
mov
icebp
push
xchg
iret
sub
xchg
out
xchg
cmp
hlt
jle
pusha
mov
fwait
mov
mov
popf
int3
mov
lods
mov
xchg
sub
mov
cmpsb
pop
jb
mov
mov
lret
jg
sub
iret
out
push
sti
pop
int
sub
cmp
aam
hlt
decb
into
pop
mov
xchg
sti
icebp
ror
and
aad
sub
mov
aad
data16
pop
icebp
mov
lea
icebp
insb
test
lea
xchg
and
dec
mov
mov
in
mov
mov
cld
test
cmpsb
out
aas
dec
cs
lock
sub
bswap
jg
sti
or
jb
xchg
dec
sub
or
xor
mov
push
loope
mov
insl
mov
mov
sub
lods
xchg
inc
mov
mov
je
fwait
arpl
push
cmp
xchg
jle
negl
fwait
movsl
mov
push
push
es
or
pop
loop
arpl
xor
lcall
fcomps
fildll
fistpl
pop
loopne
sti
or
add
dec
xor
cmp
lcall
ds
js
or
dec
mov
sahf
inc
outsb
lcall
fucom
xchg
test
xor
xchg
lahf
fwait
xcrypt-ofb
cmpsl
sub
cmp
cmp
cmc
orb
aad
sub
adc
mov
pop
add
pop
push
test
out
dec
adc
aaa
sbb
push
clc
mov
mov
fistpl
je
jmp
and
sbb
pop
cmp
daa
pop
mov
stos
cwtl
movsb
add
xor
fmull
adc
stos
cmpsl
pop
or
fmull
push
dec
in
xchg
sub
ficoml
xorb
jno
xchg
add
and
lock
test
arpl
sahf
jae
iret
cmp
movsb
jnp
movsl
arpl
loop
xor
xchg
cmpsl
rcll
imul
hlt
sub
bound
adc
inc
bound
add
lea
into
mov
jecxz
xchg
push
sub
out
mov
call
outsb
rclb
leave
adc
mov
add
or
or
mov
mov
sbb
ja
jo
xor
and
outsb
ficompl
ret
incl
dec
or
insb
adc
test
push
xchg
test
push
mov
movsb
add
loop
imul
repz
or
outsb
cli
mov
scas
mov
lret
or
shll
test
ljmp
into
mov
ss
xor
fiaddl
jae
cld
pmuludq
enter
std
mov
and
or
inc
sahf
test
or
sbb
cltd
test
ret
je
mov
dec
lock
push
xchg
dec
addr16
ja
sti
into
dec
pusha
add
jecxz
hlt
in
inc
xchg
fidivl
sbb
pop
jae
add
sti
or
pop
sub
std
sub
push
sub
cmp
cmp
jns
xchg
mov
push
or
hlt
loope
mov
add
push
cmp
xlat
push
jmp
sub
jne
insb
sbb
mov
movsb
stos
por
adc
repz
insb
movsb
shlb
jmp
jmp
cmp
loopne
dec
push
push
out
mov
notb
mov
cmp
in
sar
imul
aaa
out
ret
mov
rcr
jne
gs
adc
push
inc
and
dec
ss
rcr
cwtl
xchg
add
pop
jmp
int3
mov
leave
mov
mov
lret
push
loope
in
cmp
mov
stos
rclb
or
pop
push
dec
jmp
push
mov
loopne
inc
stos
jns
je
sub
jle
mov
incl
or
cs
fcmovu
fs
fcomp
lcall
incb
inc
pop
cmp
aad
pop
sub
xchg
push
dec
add
or
pop
lea
arpl
or
mov
ret
int3
xor
fnsave
data16
pushf
lahf
nopl
mov
lods
out
xlat
sbb
xchg
xchg
mov
mov
xchg
push
je
push
sub
jp
mov
lods
jne
xor
daa
sub
decl
or
test
pop
or
cs
or
xchg
rcrl
jo
aas
inc
adc
pop
loope
mov
mov
subl
xor
aam
test
dec
mov
or
add
repnz
pop
insl
es
lcall
mov
sbb
je
adc
es
fisubrl
and
rorl
mov
lods
outsl
scas
sub
arpl
mov
int3
mov
jae
or
inc
pop
loopne
lcall
ds
adc
xchg
push
mov
aas
das
fs
adc
insl
clc
mov
or
test
or
addr16
jge
adc
xor
inc
fs
add
xchg
add
clc
in
pop
fisubl
push
lods
cld
inc
dec
xor
lods
push
cmp
and
sub
dec
sti
aam
jge
test
mov
xor
rorl
pop
enter
mov
add
lods
mov
cltd
and
dec
out
test
sub
lock
cmc
mov
mov
cmp
or
or
in
std
mov
cld
lods
shrb
sbbb
js
popf
inc
adc
icebp
test
dec
ss
add
aas
lock
sub
icebp
pop
ja
and
push
xchg
cld
mov
and
adc
push
mov
ret
jl
mov
adc
sbb
push
out
pop
inc
pushf
aaa
xchg
xchg
add
aas
int3
xchg
movsb
and
mov
mov
out
jbe
mov
cmpsl
mov
xchg
fwait
pop
loope
addl
pop
mov
popf
adc
cld
cmova
pop
dec
pushf
jle
jo
in
imul
xchg
sub
and
iret
lret
clc
sub
cmpsl
out
lods
fmull
flds
ja
mov
icebp
das
ret
stos
les
movsb
cmp
jg
fidivrs
cs
dec
imul
dec
mov
pop
inc
inc
mov
xchg
outsl
dec
cmc
push
mov
inc
xor
mov
test
call
inc
add
inc
mov
cmp
lcall
bound
push
addr16
pop
mov
scas
mov
fdivrl
push
in
movsl
mov
dec
inc
sub
insb
cs
loope
mov
jae
pop
adc
push
lea
iret
dec
arpl
jp
addr16
and
xchg
divl
add
stc
mov
jbe
adc
in
mov
xor
movsb
add
shr
movsl
dec
mov
fs
faddl
fs
and
inc
adc
mov
fs
mov
repnz
sti
xor
roll
aad
test
adc
xorl
ljmp
cltd
jo
icebp
xchg
in
mov
xor
xchg
aam
jnp
xchg
pop
pop
es
mov
in
adc
js
sar
xchg
add
call
jle
in
stc
and
mov
push
add
insl
flds
leave
push
fistps
dec
sarb
fwait
mov
add
fneni(8087
sbb
jmp
mov
dec
sarl
cmpsl
pop
jne
sub
hlt
push
mov
push
jb
nop
jbe
cmp
scas
dec
leave
xchg
pop
or
push
add
dec
call
mov
aas
push
scas
inc
xchg
aam
add
stc
mov
lahf
pop
imul
nop
sbb
or
lret
in
mov
and
cmp
or
test
add
xlat
add
ja
leave
sbb
or
jl
xor
lea
cmc
in
cmp
jle
ss
pop
xchg
in
fdivp
outsl
sub
jb
or
fists
mov
dec
cmp
test
shrb
push
aam
fcomps
xor
loopne
push
movsl
bound
or
repnz
or
adc
lods
popf
cmp
out
mov
pop
dec
test
std
xorl
fiadds
pop
inc
enter
sarb
mov
shlb
dec
add
in
mov
cmp
iret
xchg
clc
ds
sub
mov
sbb
pop
add
cli
les
add
cmc
outsb
pop
cmp
repnz
adc
sub
xor
pop
xchg
xor
add
push
and
lahf
or
mov
sub
jecxz
mov
std
call
or
sbb
sub
add
rclb
test
push
xchg
testb
int
jo
push
lcall
inc
sub
xor
adc
mov
mov
pushf
in
pushf
or
dec
ret
je
mov
add
adc
cmp
adc
mul
inc
jp
fistpll
jnp
dec
ror
pop
fadds
inc
mov
popf
sub
jo
clc
push
rcrb
fisttps
fwait
pop
xchg
push
push
pop
inc
push
and
cmp
pop
scas
lds
mov
jae
in
push
push
mov
push
jno
add
xchg
fisubs
jo
pop
xchg
imul
cli
cs
shl
lahf
test
aaa
repz
and
xor
xor
jno
jne
jl
nop
xchg
push
cmp
jecxz,pt
jmp
inc
pop
adc
shr
rcrb
stos
call
aad
loope
jne
fdivrl
loop
cmp
outsl
notl
ret
or
sbb
leave
push
xchg
je
xchg
lds
push
out
sbb
pop
test
inc
jmp
mov
xchg
addr16
push
jl
scas
lea
sarb
sub
adc
in
shrl
jb
inc
add
xchg
xor
pop
clc
nop
ss
test
fistpl
jge,pn
fdivrl
repz
ja
outsl
and
sub
dec
cli
xorb
mov
cwtl
push
jg
sbb
pop
jnp
cmp
repnz
add
test
es
test
pop
push
ficomps
les
hlt
shr
cld
cld
xchg
lea
dec
fimuls
cmp
mov
and
add
sbb
lcall
mov
insl
xchg
in
shll
pop
cmp
testl
or
out
push
and
mov
add
or
int
push
adc
xor
xchg
das
ljmp
cmc
mov
adc
cmpsb
lea
xor
gs
cli
push
ficoml
xor
xchg
dec
scas
addb
iret
loop
and
jl
sbb
cmp
mov
dec
icebp
insl
fistps
mov
ss
pop
jge
mov
cmp
push
fcoms
push
sbb
cli
test
iret
mov
fdivp
sahf
ficompl
sub
adc
jmp
mov
add
mov
and
lods
sub
sub
inc
imul
xor
jbe
outsb
xchg
jp
push
aaa
push
aam
pop
subl
fnstsw
or
mov
and
mov
loope
and
or
fldenv
iret
das
roll
or
inc
sub
movsl
or
xchg
ret
push
or
fsts
jge
xchg
xchg
mov
cmp
mov
repnz
push
repnz
cmp
movsl
inc
incl
add
dec
imul
movsb
push
add
mov
movsb
dec
sbb
xor
sub
cmp
xor
dec
insl
xchg
sub
sub
sahf
fsub
cmp
out
cmp
cmp
lret
sbb
push
jnp
in
xchg
mov
sub
imul
in
roll
xchg
xchg
addl
inc
insb
inc
mov
cmc
clc
xor
fists
cltd
push
sub
ja
mov
aas
and
inc
xor
shlb
inc
cmpsb
rclb
push
jbe
and
cld
in
sti
fimuls
jmp
arpl
call
popa
xchg
xchg
adc
addb
pop
xchg
movsl
push
popa
xchg
xchg
jle
adc
out
outsl
in
pop
ret
dec
pushl
out
push
pop
or
adcb
stc
push
test
shll
dec
xor
jno
mov
clc
lods
or
inc
cmp
aam
sbb
dec
bswap
cmp
push
rcrb
push
inc
sbb
push
push
loop
imul
sbb
mov
xchg
jmp
out
shlb
push
pop
dec
jbe
add
pusha
movsb
std
cmpb
mov
cltd
sbb
xor
loopne
dec
push
ret
pop
cli
std
jle
in
pop
call
adc
decl
fstl
add
mov
dec
shlb
sbb
cmp
lahf
adc
xlat
inc
mov
jmp
es
push
sahf
sbb
adc
cmpsl
mov
jp
xor
fcoms
inc
and
lds
adc
test
dec
xchg
inc
xchg
data16
lds
out
dec
loop
push
push
sub
cmp
mov
fmuls
dec
cmp
sub
testl
orb
dec
xchg
call
test
and
pop
sbb
sbb
inc
shlb
dec
cmpsl
cmp
sbb
mov
fsubs
int3
dec
or
addb
sahf
cs
idivb
frstor
rcrl
inc
push
mov
insb
and
jmp
sub
mov
push
movsb
mov
sub
push
adc
cmp
leave
ja
cmp
fcompl
adc
sub
stc
insb
pop
rorl
ljmp
mov
test
jno
xchg
pop
enter
mov
xchg
add
sub
and
or
fstpt
cwtl
cmpsb
aam
aad
dec
sbb
or
int
scas
ss
jnp
aaa
and
push
sub
testl
aas
push
iret
jmp
mov
inc
cmc
jae
stc
iretw
sbb
or
movsl
repnz
shr
arpl
ret
cmp
and
inc
stos
and
dec
test
iret
stos
ret
sub
mov
jmp
jbe
mov
xchg
mov
jno
sbb
sahf
loopne
push
jg
jmp
or
hlt
adc
and
ljmp
cwtl
in
mov
or
fiadds
lret
dec
pop
aam
sbb
insl
sqrtps
lods
xor
xchg
jns
das
scas
popf
addr16
mov
mov
adc
jne
aam
data16
cmpsb
insb
popf
cmpsl
cltd
or
insb
dec
movsl
cli
and
in
dec
pushf
xor
aas
dec
mov
pop
pop
xor
lds
jle
scas
push
sbb
mov
and
mov
xlat
jbe
or
mov
sub
mov
jl
cmp
mov
xchg
and
into
push
loope
pop
cld
adc
and
clc
lcall
cltd
movsl
nop
imul
icebp
mov
stos
outsl
sbb
jecxz
mov
bound
js
jl
ds
sbb
ja
mov
or
in
mov
aad
dec
pop
jae
mov
push
fsub
add
pop
inc
dec
pop
adc
jmp
xchg
cmpsl
loope
mov
inc
pop
movsb
mov
adc
pop
jp
clc
xchg
cwtl
cmc
mov
imul
arpl
sahf
js
jne
arpl
icebp
test
cltd
sahf
rcr
cmp
dec
xchg
inc
repz
dec
inc
insl
jne
sbb
pusha
in
int3
xchg
out
push
lahf
dec
into
pop
or
cmp
mov
rclb
hlt
jp
or
pop
ret
es
daa
xchg
sbb
cmp
cmpsb
mov
movl
clc
rorl
mov
data16
push
dec
ret
mov
shl
das
fdivl
cmpsb
mov
test
lock
adc
xor
mov
cs
loope
xor
and
mov
nop
popa
push
mov
into
mov
and
mov
mov
and
xchg
mov
cmc
leave
out
lret
outsb
mov
sbbl
mov
roll
int3
ror
add
jo
cmc
adc
imul
jl
sub
es
inc
pop
mov
in
lds
cld
loopne
push
imul
xchg
cli
and
mov
shlb
nop
call
ret
pushl
insb
inc
jge
mov
inc
mov
xchg
xchg
mov
popf
mov
pushf
iret
pop
inc
pop
inc
inc
neg
or
mov
jp
jmp
lcall
xchg
or
int
fwait
stos
add
or
add
inc
pop
ljmp
test
jno
mov
sub
ret
clc
jne
mov
fdiv
and
add
test
in
or
xchg
jl
jbe
add
xchg
mov
shlb
outsl
xchg
sbb
je
sub
or
fldl
add
mov
adc
mov
add
mov
push
popa
sarl
ret
push
fisubl
test
mov
push
push
bound
and
add
xor
data16
cltd
mov
xchg
dec
add
call
or
sub
push
xor
aas
adc
pop
loop
inc
jmp
push
mov
repnz
gs
ljmp
outsb
std
pop
push
or
inc
add
fldl
outsl
xchg
dec
sbb
mov
fs
orb
cld
repnz
scas
test
dec
lret
andb
cmp
jb
mov
mov
mov
aam
and
mov
mov
js
fldt
adc
push
xor
out
scas
xorb
xor
movsl
push
cmp
cmp
nop
cmp
lea
fdivrs
call
sbb
in
stc
xor
out
adc
repz
push
imul
movsl
jl
fstpt
and
add
jp
push
sub
add
jge
fistps
clc
fidivrl
push
or
sub
xlat
pop
std
daa
mov
stos
jae
mov
cltd
push
push
sti
gs
push
cmp
mov
sti
jbe
div
jae
adc
pop
jo
dec
sub
xor
push
mov
sbb
jp
js
and
lea
scas
push
xchg
pop
out
xor
int3
fcoml
jg
and
shll
lods
cmp
push
pmullw
faddp
out
aaa
mov
mov
dec
push
clc
inc
dec
lret
subl
les
push
inc
ljmp
aam
pusha
shr
or
lods
lret
ror
sbb
mov
loop
mov
das
mov
frstor
xchg
mov
xchg
dec
cltd
jne
jg
clc
sahf
test
sbb
cld
pop
mov
fidivs
jg
outsb
xor
and
aas
sbb
and
addr16
jge
loop
mov
push
cmc
dec
sub
add
inc
pop
push
pusha
daa
pop
stc
jo
lods
or
cmp
xor
mov
xchg
repnz
push
add
add
add
lock
lods
jmp
xchg
pop
lcall
xchg
mov
fcomip
repnz
mull
cs
jl
outsb
add
imull
push
xor
add
outsl
subb
fld
mov
and
sbbl
js
insb
jge
js
sahf
xchg
mov
in
xchg
fdivl
mov
cli
push
das
push
pop
sbb
dec
lcall
or
sub
jbe
xor
mov
ret
pop
lcall
sti
icebp
or
jne
mov
add
shlb
pop
and
movsb
jecxz
sbb
push
pop
sbb
outsl
inc
fwait
push
xchg
repz
xchg
push
xchg
loop
idivb
outsb
and
mov
inc
fisubrs
jns
mov
mov
adc
scas
lea
lret
sbbl
xchg
mov
std
test
lret
dec
mov
mov
or
and
sbb
add
bound
and
add
nop
aad
jl
pop
gs
mov
imul
mov
push
cmp
es
push
pushf
mov
adc
loope
fnstcw
cmp
mov
sbb
inc
mov
or
adc
mov
sbb
adc
jb
dec
aaa
cmp
xacquire
orb
push
fisttps
cmc
lds
out
inc
push
in
in
sahf
xor
mov
mov
pop
daa
sbb
add
inc
jb
cmp
dec
cmp
data16
mov
lret
xor
in
stc
pop
je
dec
or
jo
stos
out
cmp
fdivs
out
sahf
or
sub
xor
adc
mov
dec
aam
movsb
sub
arpl
pop
xor
and
bound
add
cmpsb
fsubs
sbb
cmpsl
hlt
cmp
imul
mov
repz
dec
dec
fdivr
test
xor
pop
pop
aaa
cmc
mov
sahf
rolb
push
fsts
xchg
lahf
mov
inc
outsb
xor
inc
jle
xchg
repz
das
xorl
lods
sub
inc
and
pop
push
pop
cli
xchg
mov
push
xor
mov
in
leave
mov
mov
outsl
js
fwait
mov
loopne
sub
into
pop
adc
stos
adc
je
push
repz
hlt
repnz
inc
lret
mov
arpl
cld
add
cltd
mov
insb
or
js
lret
push
sbb
sub
dec
jo
jle
imul
or
mov
sub
popa
inc
ret
jbe
push
dec
or
fsubrs
pop
test
outsb
lods
sbb
fcoml
sub
or
arpl
add
loope
mov
mov
xchg
cltd
aaa
test
scas
xchg
inc
push
mov
or
call
pop
jmp
mov
push
sbb
and
inc
jecxz
mov
imul
ja
scas
mov
push
test
mov
or
sbb
mov
out
xchg
jno
fisubl
xlat
repz
adc
clc
addb
dec
jns
sub
pusha
fmull
mov
push
jmp
test
adc
in
je
jecxz
pop
jae
cmp
arpl
lahf
push
aaa
adcb
stc
popf
rorl
adc
pop
adc
dec
lret
push
mov
and
xchg
fwait
or
inc
into
inc
cs
mov
ret
xlat
mov
es
mov
jle
jae
xchg
test
pop
popf
xchg
add
jae
inc
aas
lret
test
stos
sti
lret
push
dec
sub
jns
lret
mov
xor
fidivs
fs
iret
xor
fisttpll
or
scas
xchg
aas
xchg
das
or
push
fwait
xor
adc
jno
jno
and
xor
imul
iret
icebp
pop
scas
lcall
mov
test
sub
ds
sahf
ss
add
push
por
push
movsl
ret
adc
cwtl
xor
fcmovne
cmp
add
xorb
inc
xor
mov
jg
or
imul
or
mov
jae
sub
xchg
enter
sbb
aad
xchg
adc
cltd
push
mov
je
imul
mov
mov
sub
stos
jo,pt
loop
loope
shl
jmp
cmc
mov
inc
sbb
fstl
pop
sbb
xchg
adc
jne
mov
movsl
dec
jnp
test
push
dec
fs
filds
xor
mov
adc
mov
mov
mov
leave
lahf
pop
pop
mov
xchg
inc
es
cmp
insl
jl
arpl
xorl
cmp
mov
pop
and
mov
addr16
imul
repnz
dec
mov
pop
inc
mov
leave
push
lahf
lods
lock
notl
xchg
add
inc
fmuls
rol
sarb
loopne
cwtl
lea
dec
cs
add
orl
imul
scas
pop
lahf
push
loopne
adc
mov
pop
sbb
cmp
shrb
xchg
aaa
lahf
push
andl
xchg
ret
xchg
xor
push
fcmovnb
daa
xchg
push
add
xchg
in
push
push
adc
mov
cmp
inc
fisttps
jns
jp
lcall
mov
lods
xchg
push
mov
cwtl
sub
sbb
and
std
push
test
mov
add
jnp
ss
call
and
dec
fists
xchg
cmp
xor
dec
popf
cmp
std
jecxz
call
push
xrelease
fs
push
adc
stos
xchg
push
fcmovu
mov
sbb
les
mov
sti
daa
xchg
mov
popf
push
mov
push
lods
jo
dec
adc
movsb
lds
sub
call
test
cld
in
loop
in
mov
shll
repz
fsubrs
jb
pushw
int
xor
sbb
clc
dec
in
mov
and
sub
sahf
add
rolb
mov
sbb
ss
lcall
fcomp
insb
out
jg
lods
out
pop
ret
jecxz
dec
arpl
inc
and
push
pop
out
scas
hlt
iret
stc
fadd
jge
and
out
dec
adc
and
push
add
pop
shr
into
adc
int3
or
push
fcomp
xchg
fimuls
stos
stos
dec
imul
js
iret
xchg
cmp
icebp
mov
sbb
cmp
sahf
pop
jnp
dec
jmp
int
xor
in
mov
dec
xchg
mov
aas
pop
inc
xchg
mov
movsl
cmp
push
das
inc
fnstcw
dec
fdivl
aam
xor
push
push
pop
inc
rol
xchg
or
pop
rcrb
inc
cmpsl
fistpll
call
mov
push
mov
cltd
insl
add
sbb
mov
adc
mov
dec
mov
in
jp
inc
ja
aas
and
push
sbb
push
push
mov
dec
cwtl
int3
adc
enter
in
movb
and
loop
mov
mov
xlat
xchg
cwtl
cmc
lahf
and
ficompl
xor
scas
xchg
outsl
sbb
incl
or
push
mov
into
xchg
xchg
mov
pop
pop
pop
sti
jge
xor
outsb
sarl
push
insb
inc
rorl
cmc
adc
adc
jl
insl
into
popf
aas
in
cld
mov
fdivr
jp
arpl
xor
jnp
inc
jge
stos
movsb
mov
lea
inc
into
sahf
fisttpl
pop
loop
push
fwait
sub
push
pushf
mov
sahf
icebp
out
or
xor
mov
mov
mov
arpl
sbb
lea
cmp
jbe
pop
icebp
sub
mov
mov
mov
pushf
adcb
cmpsl
das
shll
je
xchg
daa
jne
inc
add
popf
push
aas
movsl
dec
mov
aam
xorb
std
pop
cmp
adc
loop
out
aaa
call
fs
jo
in
sbb
sub
pop
loope
test
inc
icebp
push
jge
pop
fs
or
pop
push
jb
fnsetpm(287
sbb
cmp
sahf
adc
pusha
std
or
xor
mov
xchg
sbb
lret
inc
add
sub
mov
add
jp
inc
shr
add
sbb
aaa
add
dec
cmp
addr16
sub
sbb
and
jmp
sub
das
shl
stos
sbb
movsl
movsl
loop
or
sub
lods
and
int3
pop
ljmp
push
adc
mov
mov
movsl
aaa
mov
pop
dec
fistl
stos
mov
jl
sbb
jecxz
dec
add
cmp
push
inc
dec
push
loopne
mov
jge
addr16
or
shr
and
mov
xchg
lock
cmp
add
xor
test
xlat
sub
or
cmp
cli
mov
lea
rolb
popf
loopne
sbb
sub
hlt
mov
xlat
es
ficoml
lds
sub
push
idivl
xchg
pop
jmp
xlat
imul
imul
popf
mov
pop
cmpsb
scas
sbb
push
sub
or
sysret
popa
mov
pop
subl
js
outsl
xchg
ja
xlat
mov
mov
and
push
movsb
mov
mov
cld
add
test
mov
loopne
lahf
dec
movsl
adc
adc
inc
add
xorb
inc
sbb
addr16
rorl
cmp
sbb
cmpsl
adc
es
mov
mov
aam
dec
mov
inc
xor
sub
inc
cmp
enter
xchg
ds
pop
faddl
dec
cmpb
inc
test
nop
fists
mov
iret
cmp
jo
cmp
outsb
jns
push
scas
sbb
mov
jecxz
lret
adc
or
mov
test
add
sar
mov
jg
sub
inc
mov
in
lret
lret
inc
adc
fisubrs
ffree
clc
fsubrs
icebp
sarb
mov
mov
popf
or
add
cmp
or
xor
lods
and
add
lret
fdivrs
dec
ja
rcrb
stc
test
fdivs
roll
stc
push
jle
push
aad
dec
shrb
je
inc
or
mov
or
sub
inc
fnsave
and
in
stc
lock
jb
js
iret
test
xchg
lock
cmpsb
cmp
and
adc
sti
clc
lret
cmp
cmp
jae
lds
inc
and
and
or
mov
push
sti
push
fmull
push
into
scas
in
add
dec
mov
sbb
bsf
jmp
jno
rcll
outsl
stos
mov
hlt
mov
xorb
inc
or
test
xchg
mov
add
cs
mov
and
lods
mov
and
inc
cmp
xor
mov
jecxz
in
push
insl
sbb
xchg
fcomps
dec
data16
stos
mov
clc
mov
jno
inc
mov
shl
incl
push
sbbl
nop
inc
int3
adc
ds
and
ret
dec
movl
in
mov
mov
shlb
pushl
push
leave
fldenv
adcl
sti
std
repz
incl
andb
cltd
jnp
arpl
jae
ret
cmp
xchg
xchg
adc
or
cmp
jp
or
cmp
test
or
ja
in
jno
pop
adc
lahf
mov
fsubl
clc
mov
push
jecxz
dec
fcoml
sbbl
adc
fwait
vcvtpd2dq
ss
cli
in
add
xor
fidivs
mov
push
ds
pop
xchg
mov
xchg
add
ret
sarl
icebp
dec
pusha
mov
cmp
cmp
pop
std
movsl
aaa
ret
mov
stos
sbb
dec
sti
fucomi
andl
fwait
adc
jnp
push
dec
adc
xor
jnp
lahf
mov
or
push
mov
xchg
mov
adc
aas
int
mov
dec
jae
sahf
out
mov
les
decl
subl
cmp
pop
out
mov
jl
das
aaa
xchg
lods
aam
pusha
lahf
jp
add
cmpsb
or
fwait
in
pop
cltd
notb
iret
xor
pop
add
loopne
cmp
cmp
movsl
mov
mov
sub
popa
ss
sahf
dec
stos
fwait
bound
xchg
mov
push
cld
xchg
mov
aaa
pop
or
int
idivl
mov
pop
and
inc
in
adc
arpl
adc
mov
lds
jecxz
add
subb
xchg
xor
jno
push
jne
imul
sbb
fs
pop
imul
cs
ss
adcl
inc
loopne
repnz
jae
dec
cld
sbb
xor
fsubrl
test
adc
aad
cld
aad
scas
out
sbb
je
push
vandnps
jmp
pop
sub
dec
jge
push
stos
jo
roll
sbb
in
icebp
iret
loopne
cmp
sub
push
xor
mov
jns
push
repz
pushf
mov
movsb
movsb
stos
sub
push
adc
jecxz
les
aam
push
loope
stos
xchg
inc
pop
or
and
add
adc
dec
mov
repz
ljmp
jle
add
adc
inc
add
mov
push
push
sti
sti
mov
pop
roll
lock
nop
aaa
xchg
lea
push
repnz
shl
cmpb
movb
out
repnz
aas
outsb
or
aad
fs
aas
aad
sbb
mov
cmpsb
leave
adc
cmp
in
lods
xchg
out
dec
into
sahf
ljmp
jb
sub
aaa
pop
dec
sub
adc
and
call
cmp
push
add
cmpsl
loope
jp
out
and
jnp
jo
stc
test
sahf
inc
mov
aam
sub
pop
mov
insl
test
inc
test
lahf
lret
dec
dec
arpl
inc
stos
cmp
pop
xchg
into
repz
pop
cmp
fsubrs
pop
push
push
mov
add
jl
popa
sub
fldcw
mov
out
mov
mov
pop
push
cwtl
ss
sbb
std
add
or
mov
test
add
push
lods
jae
movsb
lret
aam
sub
popa
popf
aad
cltd
je
push
push
stos
in
push
mov
inc
sub
lahf
sbb
add
xor
outsb
mov
dec
sbb
cmp
aam
and
jle
push
sbb
lret
fnstenv
nop
movsl
fistpl
int
stos
mov
mov
and
clc
add
ret
jnp
xchg
jecxz
into
inc
mov
adc
fwait
shlb
neg
icebp
popa
xchg
je
sti
xchg
imul
in
or
pop
adc
push
divb
and
push
mov
loopne
fidivs
sarb
flds
shrl
dec
pop
int
enter
push
lods
out
dec
jb
xchg
jp
push
pop
aam
xchg
inc
jmp
sub
mov
xchg
shlb
ret
mov
popa
jae
aaa
emms
sbb
fcomi
dec
notb
and
outsl
out
lcall
out
ss
pop
gs
sahf
mov
faddl
mov
push
dec
mov
pop
int3
adc
dec
mov
decb
pop
inc
mov
push
or
enter
insb
xor
sbb
push
ficomps
and
decl
pop
or
ja
mov
xchg
inc
ljmp
sbb
ds
fsub
jmp
sti
pop
insb
outsb
adc
mov
fs
inc
mov
orl
fcmovnb
push
push
xlat
out
imul
fsubl
fists
repz
ljmp
aas
or
or
dec
push
hlt
fsubr
dec
inc
js
negb
xchg
add
pop
cmp
lahf
mov
test
push
and
pop
fisubl
xchg
jg
mov
or
pop
fs
jb
jo
cmpsb
outsb
orl
mov
gs
in
adc
jmp
jge
mov
fs
sub
xor
cltd
mov
inc
jb
dec
fildll
mov
and
and
inc
adcb
xchg
pusha
pop
fdivrs
jne
sub
cmc
push
jbe
sbb
lock
clc
aam
pop
cmp
movsl
orl
ds
roll
mov
std
stos
cs
rclb
mov
sbb
int
in
insb
fmull
or
insl
and
adc
pusha
mov
pop
push
test
mov
in
xchg
push
and
mov
lods
mov
into
inc
fstpt
xchg
pop
test
cmp
and
jnp
hlt
cmp
call
or
loop
dec
sbb
loopne
xchg
fistpll
fwait
dec
push
mov
adc
leave
fwait
mov
ds
xchg
pushf
pushf
loope
andl
rcll
dec
sub
add
sbb
popa
gs
pop
arpl
popa
cmp
loop
shrl
xor
mov
in
fmul
or
out
pop
mov
jo
clc
mov
cmp
insb
inc
xchg
pop
jns
aad
inc
mov
cltd
data16
shlb
xchg
cmpb
jo
fcmovnu
xor
fisubl
and
mov
fs
test
push
pop
or
jg
mov
and
popa
jge
mov
pop
lds
ret
and
xchg
fidivrl
dec
xlat
xchg
loopne
add
push
lret
sbb
and
andb
fsubs
ret
sub
xor
fcom
mov
arpl
mov
mov
roll
adc
ret
out
cmp
and
or
adcl
jbe
lods
push
iret
in
daa
add
arpl
dec
popa
jae
cmc
mov
ja
ret
sbb
popa
xchg
and
out
inc
lret
test
push
lods
pop
mov
mov
mov
fcmovne
andb
rorb
xchg
test
jne
cmp
in
es
vunpcklps
lcall
ds
lods
fidivl
jb
rorb
push
or
hlt
adc
push
inc
cmp
sub
mov
add
mov
inc
pop
fisubl
es
xchg
aaa
fcmovne
xor
faddl
fnstsw
das
cltd
sub
pop
sbb
mov
xor
mov
pop
sarl
loopne
in
add
sub
imulb
or
fcomps
xchg
test
mov
dec
or
cmp
cmp
js
jg
mov
cmpsl
dec
xchg
in
outsb
mov
les
inc
lock
inc
shl
push
outsb
push
hlt
loop,pt
adc
sbb
pop
mov
xor
xlat
ret
inc
sub
jecxz
mov
and
mov
lret
out
loope
cmp
adc
call
std
iret
clc
jge
jae
fcomps
call
sub
sbb
and
pusha
adc
in
xchg
repnz
push
jns
mov
fldcw
mov
in
xchg
out
into
sbb
pop
testl
or
push
repnz
scas
push
sub
inc
push
into
stc
cmp
les
bound
repz
jle
dec
fidivrl
xchg
into
cmpsb
mov
xor
rep
mov
sbb
pushf
stos
push
sbbb
repnz
mov
fists
leave
idivl
loope
out
mov
in
push
dec
jp
or
mov
or
int
int3
pop
add
je
adc
or
adc
insl
mov
repnz
cmp
lods
loope
out
test
cmpb
jp
dec
popf
mov
mov
xor
adc
xchg
xchg
ja
rcrb
lds
push
sti
sbb
ror
sbb
xor
or
push
xchg
sub
inc
jecxz
in
add
mov
cmpsb
fsub
test
out
ss
jne
add
mov
sti
and
std
addr16
fmull
mov
je
jmp
push
cmpsl
jo
fistl
cmp
jbe
cmp
adc
push
enter
popf
and
scas
aam
jecxz
ficomps
lea
lret
sbb
outsl
movsb
les
jbe
jae
int3
cmpsl
out
push
sti
pushf
test
fwait
cmp
pop
inc
adc
dec
mov
out
ss
fcompl
popf
repnz
sub
push
es
mov
push
adc
xchg
loopne
cmp
in
jg
xor
lock
call
push
dec
outsb
das
imull
std
faddp
cmp
loope
dec
or
lock
rol
mov
insb
jns
mull
outsl
or
xorl
cmpsb
mov
jo
push
int3
push
fwait
lods
mov
push
or
sarb
xchg
mov
leave
out
mov
xor
repz
cld
inc
xchg
and
mov
push
stos
pop
push
jne
add
daa
mov
scas
enter
jg
loope
outsb
push
and
dec
dec
jne
sbb
shll
inc
mov
lds
adc
repnz
sbb
mov
sub
mov
xlat
cmp
mov
nop
and
xchg
jo
popf
adc
inc
xor
adc
rolb
mov
adc
pop
add
out
xchg
mov
fadds
jmp
cmp
pop
and
cmp
mov
mov
call
jle
pop
and
xor
icebp
imul
mov
insl
gs
faddl
or
push
mov
mov
cmc
xor
outsl
push
scas
ret
mov
and
jne
xchg
mov
mov
hlt
in
scas
sar
mov
jge
aam
outsl
push
inc
lock
hlt
or
lahf
imul
sub
out
sbb
stos
xchg
push
xchg
lock
shrb
jecxz
fidivrl
mov
xchg
cld
or
in
add
xor
loop
std
test
pop
jecxz
xor
mov
mov
aam
dec
fldl
popf
pop
std
psubusb
lea
mov
sbbb
call
mov
dec
cmp
fisubs
je
sti
xlat
and
xchg
jne
lods
clc
sub
mov
pop
scas
mov
es
js
jp
or
notb
jg
inc
shrb
pop
or
repz
push
lcall
insb
push
lock
xor
xchg
dec
pop
jp
xchg
rorb
cmp
mov
int3
out
jne
inc
cwtl
and
in
das
movsb
int
rolb
out
xchg
ljmp
push
xor
ds
icebp
sub
sbb
xchg
outsb
enter
pop
gs
std
xor
in
lock
sub
sub
addl
fldt
out
mov
fsts
sub
dec
loop
insb
iret
mov
sbb
leave
add
hlt
add
fdivr
cli
mov
sub
jo
mull
add
stos
es
jb
push
cmc
push
cmpsl
mov
or
lea
shl
push
xchg
outsl
xlat
cmpsl
jns
or
xor
pop
or
cmp
test
imul
push
cli
mov
popa
pop
lods
cmp
scas
push
out
push
fdiv
jo
mov
cmpb
cltd
imulb
jp
insb
sbb
ret
lahf
adc
sub
out
pushl
lret
outsl
lcall
xchg
inc
mov
or
adc
stos
lret
xchg
pop
add
lahf
das
notb
xchg
out
jmp
cmp
ficoml
xchg
cmp
adc
in
cltd
pop
stos
sbb
int
dec
bound
mov
mov
inc
dec
jge
in
icebp
sub
xchg
iret
bound
je
test
mov
das
sub
and
in
sbb
jbe
push
jb
stc
into
stos
test
mov
arpl
lds
or
sbb
hlt
dec
push
sti
into
mov
aas
inc
cmp
mov
hlt
mov
pushf
movsl
inc
stos
and
loopne
add
lahf
ret
les
les
jb
xchg
mov
inc
push
ds
clc
xchg
out
jge
je
cmpsl
xor
jl
test
xchg
stos
fcoms
lock
sbb
lods
sbb
in
mov
imul
push
movsl
cmp
ficomps
insl
das
lods
loope
movsb
lahf
dec
punpckldq
leave
pop
pop
mov
dec
cmpsl
pop
dec
jnp
test
and
adc
cmp
inc
fildll
std
adc
push
incl
faddl
sub
cmp
add
mov
push
lds
sti
ljmp
in
dec
cmp
frstor
inc
pushl
inc
inc
xchg
sti
xchg
push
aad
clc
push
test
movsb
fs
movsb
sub
lret
data16
int3
add
dec
jecxz
popa
lds
add
mov
jl
rol
mov
inc
xor
lea
xor
addl
fisubrl
stos
xor
cmp
add
sahf
mov
lock
or
repz
outsl
test
decl
call
notl
cmp
jns
enter
movsl
xlat
pushf
xor
sbb
lahf
sub
jns
lods
xor
les
xor
xor
mov
inc
xor
cmp
push
loope
jae
push
mov
jle
push
hlt
test
syscall
mov
repz
repnz
aaa
andl
out
movsl
shlb
in
outsb
aam
in
js
cli
adc
add
scas
mov
push
aam
shlb
inc
mov
rol
lods
iret
push
or
sub
cmp
jb
mov
roll
sub
out
sub
cli
mov
pop
pop
mov
push
in
lods
mov
sbb
inc
sbb
pop
cmp
je
sub
sbb
pop
popf
cmp
rcll
dec
cmc
inc
push
test
icebp
or
push
outsb
sub
push
cmc
sti
mov
xchg
pop
loop
add
push
jg
into
xchg
in
ficoms
xchg
dec
cwtl
into
stc
push
cmpsb
mov
in
adc
dec
jae
push
je
jnp
pop
sbb
lret
int
dec
mov
or
arpl
push
sbb
and
lock
mov
cmc
mul
gs
push
sub
mov
pop
shl
bound
es
cmc
or
mov
mov
cmpsl
jnp
mov
cltd
shl
int3
fdivs
adc
sub
imul
mov
cmp
add
sub
and
jbe
cmp
cmpsb
push
popf
aas
xchg
lods
into
negb
in
imul
adc
mov
lds
jnp
rcrl
testl
dec
and
sbb
lret
jle
jmp
je
cmpsl
lods
dec
pop
gs
insb
cmp
push
mov
sarl
mov
mov
aad
test
cmpsl
imul
inc
pop
xchg
pop
sub
in
fmul
jg
and
fwait
shll
ss
lcall
fcomps
or
jp
mov
jle
inc
jge
mov
int3
out
aam
data16
sub
inc
xlat
rcrb
adc
pop
fyl2xp1
lock
cwtl
mov
add
aas
negl
mov
imul
fxch
sbb
loopne
push
out
iret
jo
inc
sbb
cmp
inc
push
outsl
scas
out
cmp
sub
ljmp
jle
mov
nop
push
stos
int
pop
mov
leavew
pop
mov
pop
dec
adc
mov
add
jl
into
fscale
jnp
scas
fs
sbb
loopne
pop
lret
push
leave
mov
push
sub
stos
daa
movsl
jns
or
pop
jae
lock
jnp
mov
cltd
movsb
mov
iret
inc
mov
shrb
push
mov
in
pop
sub
or
dec
xor
out
lea
lock
adc
popf
out
inc
ljmp
pusha
nop
jmp
sarb
push
xor
mov
mov
test
movlps
push
dec
mov
shlb
cmpsl
out
xchg
test
sub
imul
mov
out
add
mov
movsb
sbb
lods
xchg
pop
pop
bound
fisttpll
dec
sub
push
pop
jmp
adc
mov
mov
outsl
or
test
push
cmp
mov
mov
imul
add
bound
xor
cltd
cmp
mov
das
jl
xchg
inc
les
jne
int
and
sarb
out
xchg
pusha
dec
pop
cwtl
sub
fistpll
loop
notb
pop
and
adc
and
decl
cltd
add
pop
xchg
rorb
sbb
fisttpll
jmp
jmp
dec
in
and
jge
inc
mov
aam
bswap
jne
nop
sub
inc
scas
movsl
aaa
inc
ret
or
daa
jbe
cs
mov
xchg
into
stos
nop
jae
leave
xor
jecxz
sbb
push
scas
inc
mov
jp
inc
pop
cmp
adcb
call
jmp
sub
lahf
xchg
negb
adc
pop
pop
into
or
cmp
push
sahf
mov
mov
cltd
pop
subb
icebp
jb
inc
out
xor
aas
lods
pop
mov
cld
mov
adc
repnz
mov
call
rclb
pop
fisttps
sbb
xchg
push
int
ds
push
dec
lods
cmp
scas
xor
nop
and
jbe
test
xor
inc
inc
cmpsl
shll
pop
mov
ss
adc
mov
sbb
ret
mov
daa
jno
ficoms
lock
fcoms
lcall
into
cmpsb
sbb
and
push
fldl
xchg
lods
mov
cmp
dec
repz
xchg
aam
mov
out
and
lods
dec
lret
addr16
xchg
hlt
adc
sbb
xchg
cltd
push
adc
jo
dec
add
out
push
dec
in
mov
jns
mov
mov
out
fcmovb
inc
stc
mov
fidivs
inc
jg
sbb
dec
sbb
fsubl
mov
cld
dec
xor
sti
xchg
cli
mov
loopne
pop
inc
lods
cmp
pusha
mov
insb
je
and
sti
pop
rorl
in
loopne
pop
cmc
ffree
fstl
sbb
mov
movsb
fimuls
addr16
idivb
fistps
and
enter
pop
aas
push
cmp
sbb
arpl
mov
mov
cwtl
cmp
aaa
out
lcall
or
mov
dec
mov
pop
fwait
xor
movsb
ja
jbe
js
sub
push
lret
movsb
int3
inc
push
xor
mov
mov
loop
inc
popf
mov
vpmacsdqh
push
pusha
repz
sarl
cmc
and
js
inc
cld
mov
lds
dec
jno
pop
jne
adc
pop
push
mov
outsl
cmpsb
sarl
ret
add
cli
dec
rol
adc
scas
jge
aad
xchg
mov
into
test
mov
mov
push
or
dec
pop
inc
mov
es
in
push
xor
lds
inc
add
push
sub
mov
pushf
cld
sub
jae
in
jp
rolb
sbb
sub
pop
pop
int
pop
shrb
fstl
lcall
hlt
sbb
cmp
push
xchg
inc
or
xchg
rclb
loopne
ret
or
xrelease
jge
xor
ds
mov
mov
imul
mov
data16
ficoms
test
shll
pop
or
pop
arpl
add
pop
sub
pop
jo
fnstsw
repnz
mov
je
sbb
fidivl
sub
mov
fstl
jg
pop
xlat
sbb
movsl
sub
dec
in
jl
cld
push
jb
cmpsb
das
shlb
mov
fisubs
std
sub
cmp
and
xchg
cwtl
and
or
and
sarb
fistps
add
lret
sbb
push
pop
xor
out
push
dec
icebp
hlt
loopne
into
mov
add
scas
lret
cmp
sub
les
pop
aad
cmp
cli
add
pop
in
lret
fistl
inc
jmp
shl
les
rclb
mov
mov
add
mov
dec
pushf
xchg
cmc
lds
jl
test
fisttpll
ret
sahf
aaa
repnz
sub
xchg
xchg
dec
je
std
mov
sbb
mov
in
fs
ljmp
inc
mov
dec
iret
out
je
pop
lcall
or
push
out
push
mov
cmp
jge
mov
inc
shll
sbb
ss
push
mov
push
aas
push
fistps
stc
movsb
cmc
inc
adc
jle
ror
xor
enter
pop
and
lea
sbb
out
fisubl
sbb
std
sarl
inc
xchg
inc
fistl
fstl
aaa
je
push
add
pop
xor
jnp
fidivrl
xor
ret
dec
dec
adc
xor
popa
iret
sbbb
dec
push
push
inc
mov
jno
aas
gs
scas
cs
vsubsd
xor
test
test
or
mov
jne
mov
dec
lret
inc
sbbl
xor
push
add
and
push
pop
xor
inc
cwtl
or
push
pop
out
xlat
leave
xor
adc
lds
cmp
mov
cld
sub
pop
imul
pop
call
pop
ljmp
mov
adc
lds
adc
jbe
push
test
cmp
mov
pop
aas
push
daa
imul
jo
sbb
leave
pop
rcrb
sbb
mov
inc
mov
popf
addr16
sbb
xor
pop
jne
xchg
andb
adc
iret
jbe
int3
gs
stc
sbb
push
test
in
dec
push
sbb
xor
leave
sbb
imul
mov
fstps
cs
cli
movl
notb
gs
pop
sbb
popa
xchg
push
fdivr
loop
arpl
add
and
out
mov
testl
push
mov
pusha
popf
jp
adc
aas
and
push
lds
in
and
jge
dec
dec
pushf
push
into
push
mov
sub
movsb
dec
add
jmp
dec
add
and
push
mov
or
ja
je
xor
add
idivb
cmpb
fnsave
aam
insl
sub
mov
mov
and
pop
ret
mov
and
xchg
jne
imul
out
xor
shl
adc
push
ds
test
imul
or
xchg
add
jbe
pop
cld
lock
or
test
add
in
add
sub
mov
inc
je
add
outsl
xchg
mov
ljmp
push
mov
xchg
pop
les
jnp
mov
pop
inc
sub
leave
adc
cmp
sub
sub
push
rcrb
dec
cli
add
xchg
repz
in
repz
insl
adcb
sbb
xchg
inc
js,pt
ror
bound
popf
fld
in
out
into
xchg
pusha
adc
adc
repnz
sbb
push
sub
lcall
xchg
hlt
mov
jb
push
jle
js
ret
mov
mov
and
loop
add
adc
sbb
fs
add
repz
add
in
sbb
das
ss
pop
xlat
pop
int3
rcrl
sub
sbb
test
cmp
xchg
xchg
add
ret
mov
sub
sub
pop
sub
push
aas
pop
popf
mov
adc
fsubrp
cmp
cmp
fldl
outsb
or
orb
lcall
jg
iret
cmp
loope
mov
imul
repnz
mov
shll
aad
test
xor
pop
jbe
push
sub
push
jb
negb
sub
movsl
push
xchg
mov
inc
sub
pop
pop
pushf
xor
mov
push
sub
xchg
jo
jecxz
ja
mov
popa
clc
pop
cmp
mov
dec
mov
test
add
into
xor
add
jg
test
jecxz
icebp
in
mov
lret
fistpll
imul
push
bt
add
stc
cmp
inc
dec
sahf
and
enter
sbb
imul
popa
push
mov
cmpb
mov
jo
sbbb
or
xchg
test
xor
jnp
rorl
cmpsb
push
inc
or
push
jno
add
mov
or
and
hlt
daa
or
loope
mull
fldt
lods
cli
pop
mov
shlb
xchg
inc
in
mov
cmc
pusha
push
and
fisubrl
int3
loop
mov
lahf
and
mov
mov
mov
insl
or
mov
add
dec
mov
push
and
imul
inc
mov
xchg
adc
sbbl
jae
mov
leave
and
stos
in
push
movsl
jmp
cmp
lds
daa
mov
mov
aad
ffreep
push
push
lahf
inc
das
dec
jno
inc
stos
ret
cli
cmpsl
popf
loop
and
das
aad
hlt
int
xchg
jle
push
jb
pop
or
outsb
or
sbb
mov
sub
inc
das
shlb
cmp
addr16
xchg
adcb
rolb
movsb
xchg
xor
inc
in
mov
filds
out
xor
jbe
xchg
xchg
sti
sbb
jns
or
popf
ret
mov
stc
adc
adc
fcmovb
adc
orl
popa
data16
adc
lock
pusha
sub
push
pushf
inc
or
cmc
inc
aas
in
pop
ljmp
stc
pop
jnp
and
mov
mov
mov
mov
pop
adc
dec
jle
mov
dec
outsl
test
scas
add
sahf
stos
and
sub
pop
movsb
arpl
imul
loopne
adc
sti
enter
repz
sub
sub
pop
cld
and
jge
subl
mov
enter
cmpsb
pop
push
xchg
in
imul
xlat
sti
scas
mov
jecxz
rcrl
ss
inc
mov
imul
shrl
mov
or
lods
rcrb
dec
sbb
sbb
pop
jnp
and
fsubs
aad
hlt
ja
imul
lods
sub
and
scas
pop
cmpsl
mov
leave
cmp
dec
imul
dec
push
and
dec
repnz
mov
movsb
popa
mov
outsb
add
js
bnd
lds
pushf
jg
shlb
fisttpl
sbb
rcrl
ret
mov
cmp
mov
xor
scas
sbb
sub
sbb
cmpsl
imul
cmp
mov
pushf
and
mov
xor
xchg
pusha
sbb
lods
or
enter
testl
xor
rolb
fs
adc
pop
mov
mov
and
enter
mov
cmp
lods
dec
jo
mov
dec
sub
fistps
pop
pop
mov
sbbb
out
into
and
mov
mov
mov
cmp
out
cs
mov
sarb
ja
sbb
andl
ret
cmp
jge
repz
sub
daa
popf
and
in
or
xlat
test
push
mov
test
cmpl
cmpsb
pop
mov
mov
lret
pusha
pop
imulb
inc
int
fbld
daa
cmp
iret
sub
sub
stos
adc
jp
addr16
popa
ja
xor
add
iret
cmp
adc
cmp
pop
mov
std
shrl
sbb
mov
dec
xor
xchg
push
mov
out
aas
push
push
sub
bnd
fnstsw
mov
push
sarb
xchg
in
arpl
std
ds
out
and
adc
pop
stc
jae
leave
pop
out
xor
mov
dec
dec
es
mov
xchg
lcall
cmc
push
mov
adc
cmp
jmp
repz
push
icebp
arpl
xor
xchg
cmpsl
gs
or
enter
sbb
mov
push
mov
test
out
cmp
or
xor
jo
adcb
cmp
js
in
imul
icebp
pop
xchg
cs
dec
es
or
and
mov
xchg
xlat
adc
neg
pop
push
sti
xchg
inc
push
fwait
pop
xor
js
movsb
loop
ds
in
or
sub
xchg
ret
push
into
lahf
cmp
sbb
in
cmpsl
and
pop
in
cmp
or
or
mov
push
pop
sbb
mov
daa
popa
push
xor
jno
jns
xlat
cmp
test
daa
mov
popa
mov
ret
inc
xchg
ret
jge
mov
sbb
fstpt
mov
push
cwtl
cmp
outsb
imul
ljmp
cmp
xchg
push
movsl
mov
add
or
test
in
xchg
lock
jb
rcrb
loope
mov
addr16
in
fsubrs
icebp
dec
lods
sub
sbb
sbb
add
cmpsl
cmc
sti
xchg
mov
xor
mov
ljmp
mov
sub
push
ror
fisubl
repnz
shl
jbe
mov
jle
jno
loopne
std
mov
sbb
scas
sbb
xor
repnz
das
and
out
testl
adc
scas
iret
pop
fildll
into
or
inc
xor
dec
push
sub
mov
sarb
sbb
add
sbb
sbb
xchg
decl
xchg
ss
dec
pop
cmp
lcall
popa
jno
fimull
xlat
ljmp
mov
mov
pop
bound
push
into
mov
add
and
mov
pop
cmp
inc
das
mov
movsl
mov
sbb
pop
nop
hlt
mov
inc
adc
mov
jb
jl
xchg
push
add
jmp
ror
mov
iret
mov
test
mov
xor
fists
dec
inc
imul
mov
insb
lret
or
ljmp
lret
subb
sahf
mov
clc
xchg
xchg
sbb
popa
ret
mov
fwait
cmp
int
xchg
gs
xchg
jmp
mov
fdivrp
jnp
adc
sar
add
enter
enter
inc
mov
jle
pop
ds
cmp
fwait
enter
fistps
pop
inc
sub
mov
mov
ja
in
addr16
arpl
shlb
jnp
push
insl
adc
pusha
pop
adc
faddl
mov
sub
imul
aaa
loope
push
mov
lret
sub
adc
xchg
aad
pop
inc
dec
add
add
sub
test
outsb
push
dec
jp
aaa
out
enter
jl
mov
mov
fwait
gs
addr16
mov
cmp
cmpsb
sbb
enter
push
push
or
mov
icebp
jnp
sub
inc
push
xchg
mov
add
hlt
lods
bnd
push
and
or
pop
and
push
gs
jbe
dec
or
nop
std
es
sti
addr16
push
mov
jnp
jnp
es
test
scas
fdivl
leave
test
xor
ja
loopne
out
cmp
adc
push
pushf
insb
nop
cli
inc
adc
push
aad
leave
out
dec
add
orl
into
add
in
nop
mov
adcb
xlat
in
les
push
cmp
lea
adc
sbb
mov
std
adc
je
pop
push
xchg
xor
jb
add
jbe
mov
add
mov
insl
cmp
insb
xchg
int3
lret
aaa
ja
es
push
dec
inc
call
pushf
xchg
clc
mov
imul
dec
cwtl
jg
cwtl
cmp
fdivr
movsl
bound
popa
xchg
es
insl
cmp
mov
stos
fists
dec
shrl
adc
push
aad
or
cmp
xor
lahf
sbb
repnz
mov
repnz
and
flds
fidivl
push
test
xor
mov
divl
pop
mov
xchg
or
mov
pop
enter
push
loop
mov
pop
stos
mov
sbb
gs
neg
adc
loope
int3
les
ja
mov
dec
inc
add
sub
outsb
je
xchg
dec
rol
pop
jle
adc
setb
js
mov
and
out
cmp
xor
nop
mov
jle
jbe
jmp
test
add
mov
dec
in
mov
insb
cmpb
xchg
nop
cmp
pop
sub
stc
in
add
add
pop
sbb
pop
movsb
daa
mov
mov
jmp
inc
pop
pop
adc
cs
push
or
pop
adc
dec
imul
cmp
jnp
sbb
push
test
std
rorl
pop
scas
std
out
fdivl
sbb
jecxz
inc
jmp
mov
cmpsl
cmpsb
mov
push
fbld
arpl
das
push
fabs
xor
push
fs
int
jne
push
and
push
mov
pop
mov
dec
fsubrp
add
scas
pop
mov
imul
dec
js
xor
cmp
mov
test
hlt
in
negl
cltd
cmpsl
pop
push
fcmovne
movaps
fwait
mov
popf
jb
dec
push
jae
gs
incl
mov
sbb
lret
test
lcall
imul
mov
and
shlb
fsts
cltd
jns
cmpsl
pop
aad
ljmp
pusha
stos
pop
loope
dec
sbb
xchg
sub
popf
adc
mov
xchg
pop
aaa
sbb
mov
mov
jp
mov
in
inc
adc
fucomp
sahf
sbb
xchg
popa
addr16
fwait
adc
fstl
ds
lcall
fildll
lret
ja
jne
sbbb
sarb
fsubrs
mov
orb
out
jbe
mov
pop
pusha
or
add
jge
mov
pmaddwd
dec
scas
or
stc
adc
or
aas
sahf
and
sbbl
add
push
xchg
add
hlt
test
addr16
das
adc
lock
pop
xchg
aaa
xchg
mov
pop
adcl
jo
pop
outsb
jns
or
jmp
mov
xor
pop
incb
dec
mov
mov
xchg
in
mov
jp
xchg
xchg
pop
cmpsb
mov
cs
add
movntq
mov
dec
cmp
test
xor
sarb
inc
bound
adc
sbb
sbb
and
ret
call
xor
es
sub
cmp
mov
jae
pushf
pop
repnz
fmuls
pop
imul
fiaddl
xor
outsb
push
movsl
pop
int3
cmpsb
pop
daa
pop
lcall
xchg
xor
dec
mov
jl
fsubrs
mov
and
push
loop
sbb
xchg
push
cltd
mov
subl
fs
fdivl
nop
mov
stc
pop
in
jge
or
test
ret
data16
in
xchg
or
jecxz
adc
or
mov
dec
mov
test
add
les
dec
pop
insl
sti
and
shlb
fldenv
adc
jae
out
ljmp
push
loope
loopne
ret
and
lock
adcb
out
cmp
pop
xor
adc
jne
or
cs
lea
or
add
sub
dec
in
adc
push
pop
out
sbbb
outsb
xchg
jl
cltd
stos
xchg
ss
adc
call
mov
ss
incb
mov
mov
xchg
push
shrb
and
imul
popf
jg
das
pop
dec
mov
jl
sbb
pop
pop
jno
arpl
xorl
addr16
push
inc
cmp
push
fisttpll
test
add
loopne
sub
jge
push
mov
out
stos
scas
add
jecxz
and
call
jno
std
cli
adc
cltd
sub
stos
jno
xchg
dec
je
add
jns
lret
int3
addb
mov
mov
lds
sti
mov
inc
mov
cmp
pop
mov
movsb
clc
or
in
xchg
inc
int3
sub
aaa
shlb
shl
pop
imul
test
jle
sbb
mov
mov
ds
adcb
outsl
mov
push
xchg
adc
mov
outsb
adc
je
in
stc
xlat
popa
mov
or
xor
fldl
push
xor
pop
xchg
lods
sbb
cmp
cmp
or
adc
sbb
jmp
push
push
dec
movsb
iret
jne
gs
or
fdivs
lods
popf
aam
push
adc
and
pop
adc
and
push
test
repz
lret
mov
push
enter
pusha
add
dec
into
push
xchg
push
jmp
imul
outsl
nop
roll
jae
xchg
mov
int
das
dec
sub
addr16
test
cmp
nop
pop
cmp
cmp
lahf
sahf
pop
mov
sbb
movsl
mov
dec
push
or
xor
xor
or
mov
xlat
jns
xor
ja
enter
jne
jnp
sbb
int
out
pop
enter
mov
sbb
inc
inc
cmpsl
jle
adc
out
and
push
xchg
cmp
adc
fsubrl
xchg
enter
and
or
inc
xor
movsl
inc
stos
add
adc
pop
test
les
pop
es
xchg
mov
jae
cld
ficoml
pop
adc
or
add
cltd
lcall
pop
mov
inc
adc
ljmp
push
pusha
ror
cli
mov
dec
xchg
stos
dec
test
enter
sbb
mov
nop
icebp
sbb
push
or
jp
std
pop
fstp
mov
in
mov
xor
sbb
cmp
xchg
scas
dec
jne
imul
inc
jge,pt
shl
pop
pusha
dec
xchg
cmp
cs
xor
sbbb
jmp
xor
mov
and
jb
cmp
aad
cmp
pop
insb
stos
lret
ljmp
and
mov
mov
lret
loope
dec
rcrl
pmaxsw
and
add
clc
xchg
popa
push
movsb
inc
xchg
sub
push
lahf
popa
cmp
stos
out
aas
fs
dec
ret
popf
sti
xchg
mov
xor
arpl
out
pusha
notl
mov
or
sub
jp
ljmp
and
xorb
add
xchg
mov
dec
std
test
xchg
lods
es
fcomps
inc
imul
loopne
push
repz
fdivr
mov
ss
mov
lea
or
jbe
fistpll
shrl
lea
and
in
shrl
and
lds
xchg
push
mov
xor
xor
out
sahf
jl
cmp
imul
mov
cmpsl
leave
xor
fcoms
out
jno
xchg
data16
sarl
mov
cmp
inc
jne
add
and
jne
pop
frstor
mov
and
inc
push
sub
sti
fwait
xchg
mov
xor
xlat
mov
sti
mov
stos
sub
and
xlat
mov
push
lcall
enter
cmp
xchg
js
pop
aad
sub
out
jp
shl
js
sarl
mov
xchg
lods
cmp
mov
int3
pop
push
pusha
in
push
xor
push
enter
imul
pop
stos
imul
jg
sbb
mov
xchg
data16
std
repz
adc
jne
pop
adc
mov
mov
scas
cmovae
enter
push
in
jmp
dec
enter
lret
sub
in
xchg
dec
fcomi
daa
inc
addr16
xorb
mov
pop
inc
push
mov
mov
loop
add
or
outsl
pusha
cmpsl
sbb
mov
out
pop
mov
add
imul
pop
xor
xchg
fldenv
shrb
xchg
sub
xchg
aas
add
mov
loope
pushf
outsb
sbb
divl
or
test
jns
adc
pop
lret
add
mov
jmp
rolb
loope
mov
pusha
push
inc
fs
pop
fldenv
mov
insb
inc
mov
dec
ret
mov
mov
mov
out
fcoml
add
sbb
push
movsl
add
push
lahf
push
cmc
fisttpl
xchg
or
rolb
pushf
pop
imul
rsqrtps
jbe
daa
out
mov
sbb
cmpsl
data16
dec
mov
mov
sbb
cmp
lret
pushl
ffreep
sub
mov
pushf
dec
sbbb
lret
cmp
adc
push
push
and
add
hlt
mov
in
mov
lods
icebp
xchg
cmp
in
cmp
orb
pop
std
andl
fidivrs
mov
pop
das
fists
lret
popl
mov
cmp
add
shll
mov
loop
adc
dec
test
dec
mov
push
pop
add
xor
xchg
mov
cmp
inc
lds
lea
sub
enter
in
add
jmp
mov
fwait
sbb
push
push
jb
cmpsl
dec
sub
push
mull
sub
aas
cltd
mov
popf
push
enter
mov
loopne
insb
xchg
shlb
mov
call
inc
js
add
xchg
sub
push
xor
cltd
ret
in
addb
adc
xchg
push
movsl
lcall
cmpsl
and
sbbl
jg
xor
jne
jmp
icebp
inc
ret
mov
cmp
mov
mov
cmp
mov
xor
jmp
sub
and
push
jbe
push
outsl
sub
push
pusha
xchg
cwtl
stos
push
sub
aaa
pop
jns
je
sub
xchg
hlt
je
sbb
jmp
out
cmp
roll
hlt
sbb
and
hlt
mov
xor
out
xchg
ret
iret
mov
repnz
add
pmaddwd
inc
xlat
enter
mov
sbb
js
hlt
js
shl
inc
jno
leave
jbe
inc
mov
je
test
insl
jae
stc
adcb
mov
sub
xchg
lret
add
add
sbb
pusha
jno
or
out
lahf
pop
and
cwtl
out
jno
pop
add
ficoms
jae
outsl
push
fdivr
dec
xor
xchg
jnp
cltd
dec
cs
data16
popf
addr16
sti
in
lea
jp
lahf
int3
call
lret
inc
stc
mov
into
andl
inc
ja
jb
adc
adc
fwait
sub
aam
in
pop
xchg
sbb
idivb
das
mov
mov
mov
stc
add
push
pop
movsb
jb
ret
mov
or
movsb
sbb
orl
movsb
lock
jno
mov
mov
fs
pop
fdivl
imul
enter
mov
je
xlat
gs
das
push
movb
add
push
xchg
movsl
xchg
out
dec
out
push
mov
stc
lret
mov
jae
repnz
loope
mov
push
loopne
pop
inc
andb
adc
fsts
jbe
pop
xchg
imul
jl
or
sub
or
pusha
inc
cmp
sbb
sub
adc
mov
push
jne
sub
mov
adc
into
adc
inc
into
add
lcall
lock
mov
lock
sub
insb
jmp
or
adc
andl
enter
cmp
sbb
cmc
fcompl
push
movsl
and
cli
lret
dec
push
xlat
push
sub
fcoml
sbb
mov
loopne
popa
fdivp
add
mov
imul
inc
dec
xor
jb
into
stos
jnp
sub
lds
and
stc
add
fs
add
add
push
jns
call
push
inc
es
dec
xchg
mov
dec
sub
and
mov
ret
das
and
sub
adc
cmp
pushf
mov
inc
jns
int
mull
xor
lock
add
adc
inc
add
lock
mov
adc
insb
out
mov
inc
mov
mov
lahf
xchg
sbb
jg
inc
addr16
insb
mov
clc
adc
andb
ds
outsl
int
shl
sti
mov
mull
fcoms
das
cmpsl
test
mov
sbb
xlat
mov
loopne
insl
movsb
popf
dec
lock
pop
lret
add
pop
mov
inc
xchg
jecxz
lcall
rcll
gs
push
jb
je
inc
cmp
repnz
mov
lret
pushf
add
add
inc
cld
sar
sub
bound
cmp
mov
icebp
jae
mov
pop
cmpsb
leave
rorb
stos
mov
inc
stc
add
and
cmp
test
lret
pop
jp
mov
inc
ret
or
mov
lcall
cld
scas
cmp
mov
or
mov
jb
pop
jae
fidivs
dec
fisubl
addr16
mov
ja
push
sub
mov
adc
xchg
push
lret
pusha
hlt
xorb
sub
mov
sub
stos
rorl
mov
mov
js
dec
std
mov
out
pop
call
pop
movsb
mov
movsl
cmpsl
sub
sbb
punpckhwd
xchg
test
add
add
nop
aaa
dec
sbb
mov
and
xchg
add
sbb
in
lea
inc
or
xor
lret
mov
xchg
pop
mov
ss
inc
push
fstps
stos
ss
and
add
and
sub
inc
test
mov
shlb
add
or
jp
push
sub
push
sub
jns
cmpb
popf
ret
lahf
add
jmp
insl
push
in
xchg
mov
popf
hlt
jle
repz
addb
out
add
aad
add
mov
lods
jno
icebp
sti
jecxz
inc
test
dec
arpl
sub
sbb
ljmp
lods
and
or
imul
push
or
lea
jnp
inc
addr16
jae
mov
mov
xchg
scas
dec
or
insl
insb
push
or
mov
mov
lcall
push
imul
lods
js
ret
mov
in
iret
iret
add
push
jo
cmp
pop
ljmp
xor
and
sar
push
dec
mov
arpl
iret
mov
sbb
in
cmp
xchg
add
nop
scas
jecxz
mov
scas
rorb
dec
call
push
and
sti
mov
call
aaa
loop
push
gs
js
cli
shlb
loope
inc
test
add
sub
and
pop
out
aad
mov
pop
jecxz
adc
mov
xor
mov
aaa
int
insl
pop
outsb
js
sub
rolb
or
dec
push
inc
test
pushf
jae
sti
and
fcompl
adc
out
or
btc
dec
out
imul
xchg
and
mov
and
popf
lock
pop
in
rcll
and
repz
jg
aam
cmp
push
add
loope
and
mov
ljmp
mov
push
inc
sbb
add
call
push
inc
aad
pop
and
gs
push
in
arpl
xchg
mov
ss
cli
mov
adc
sbbl
jns
add
rcrb
and
xor
sub
arpl
or
xchg
jne
lods
outsl
lea
pushf
fs
and
jo
dec
jge
subl
cmp
cmpsb
int3
xor
inc
or
mov
cltd
xchg
loopne
fwait
popa
or
scas
adc
pop
mov
xchg
or
shlb
mov
data16
rcr
dec
mov
imul
aaa
cmc
cmpsl
jmp
popa
mov
xchg
lret
adc
shlb
push
pushf
mov
andb
pop
lret
jp
push
pop
mov
subb
test
ljmp
aam
xor
mov
jb
test
mov
hlt
scas
mov
popf
ret
dec
jbe
stc
test
loop
out
cli
out
js
mov
sahf
ljmp
dec
mov
mov
xchg
insb
mov
or
or
daa
pop
mov
sbb
arpl
push
adc
pop
mov
mov
sbb
push
mov
or
movsl
jle
xchg
mov
lods
fucomi
pop
insb
xchg
inc
loopne
jle
cmpsb
lcall
mov
add
dec
test
pop
mov
icebp
test
push
arpl
xor
sub
inc
cs
fldcw
lcall
lods
xor
mov
aas
sub
xorl
add
jno
mov
repz
mov
sub
adc
icebp
sbb
fsincos
xorl
pop
cs
cmp
mov
or
jae
dec
sub
pop
jg
fbstp
pop
and
sbb
enter
mov
pop
loop
lahf
cmp
insb
push
testb
sbb
cwtl
lods
aad
sbb
hlt
js
sub
xor
cli
jne
xchg
unpckhps
xlat
lret
repz
sbb
movsl
cs
clc
loop,pn
setno
adc
xchg
jne
loope
jno
movsb
sub
insl
stos
sub
jg
mov
shrb
out
insb
lds
lcall
sub
out
pop
or
shrl
ds
gs
xchg
sub
sub
es
or
mov
pop
stos
clc
or
and
pop
out
inc
adc
xlat
loopne
sub
fs
cmpsl
stos
hlt
sub
add
leave
sbb
fcoml
push
call
fdivp
cmp
fcos
push
stos
add
rcrl
lcall
rolb
mov
xor
es
rcr
lds
mov
fucomip
imul
mov
xchg
jl
stc
or
pop
sarb
mov
sbb
insb
dec
stos
in
jl
xor
jp
inc
or
imul
jbe
ss
jmp
sbb
les
enter
jmp
mov
subb
pop
add
push
scas
xlat
or
adc
push
aas
sar
loope
aas
movsl
popf
inc
popa
jae
mov
sbb
arpl
dec
nop
ss
pop
push
push
push
test
loop
insb
sti
andl
fildl
dec
aas
insl
repnz
movsb
cmp
and
stos
xor
fisubrl
and
lret
and
push
cltd
add
sbb
popf
sahf
adc
repz
sbb
mov
mov
mov
jbe
push
pop
add
add
mov
movsl
lret
stos
push
and
idiv
scas
mov
cld
sub
mov
shlb
loop,pt
push
popf
ret
fucomip
gs
fists
inc
sbb
push
loop
dec
mov
xchg
fs
add
addb
push
mov
jno
cmpsl
cs
dec
mov
jp
movsb
cs
push
cwtl
in
insb
dec
and
fsubs
das
jns
dec
insb
in
scas
cmpsl
and
dec
std
and
mov
rcl
addl
mov
sbb
mov
mulb
js
and
into
sbb
or
lea
mov
pop
cmpsb
pop
pop
mov
add
outsb
cmp
mov
jmp
mov
loope
dec
sub
lcall
cmp
es
dec
xchg
cmpb
mov
je
adc
cmp
mov
push
fisttps
jg
pop
xchg
frstor
ret
test
fcompl
and
mov
inc
fwait
ja
sbb
add
sbb
xchg
or
loop
jmp
mov
into
pop
mov
xor
fdiv
add
out
xchg
jne
lods
stos
inc
push
sbb
shl
enter
mov
mov
pop
pop
mov
jae
fisttpll
les
scas
aaa
test
popl
sub
xchg
cmp
aas
rep
inc
ss
and
sbb
sbb
inc
push
or
lcall
mov
push
add
sub
mov
adc
jecxz
pushf
dec
js
jg
xor
jne
inc
sbbl
js
sbb
or
jae
mov
shlb
mov
mov
rolb
repnz
rcrl
xchg
imul
imul
sub
inc
pop
pop
xchg
mov
xchg
dec
packuswb
jno
cmp
mov
testl
shll
lahf
mov
push
sti
mov
add
mov
ds
xor
cs
add
pop
mov
arpl
push
xchg
inc
dec
mov
push
scas
movsb
dec
pop
push
mov
not
lahf
mov
mov
addl
rorb
push
mov
outsl
sbb
dec
lret
xchg
test
mov
mov
mov
mov
mov
roll
add
lcall
or
xor
ja
aaa
add
inc
addb
sti
lcall
mov
or
lock
fdivs
sbb
ret
and
push
adc
push
jecxz
adc
fnstenv
xchg
xor
bound
mov
cmp
lcall
jecxz
aaa
jnp
scas
subb
add
loope
push
sahf
loopne
dec
xor
cltd
out
lock
lea
fnstcw
mull
xchg
sbb
cli
jg
xlat
mov
push
stos
les
movsb
call
cmp
xchg
je
fsubrs
push
cltd
or
jnp
popf
stos
popf
loop
mov
adc
gs
and
je
pusha
and
in
jne
sbb
jmp
loopne
xchg
xchg
imul
push
lcall
push
lods
sub
cmp
jns
sbb
in
or
push
imul
les
hlt
push
lcall
lret
pop
mov
or
insb
test
mov
mov
bound
sbb
cmp
dec
cmp
cmc
pop
mov
rclb
dec
sbb
and
cld
adc
cmpsb
gs
idiv
inc
push
cmp
mov
pop
mov
mov
pop
repz
xor
sbb
push
cli
sub
adc
and
or
roll
xchg
dec
int
sbb
cwtl
aas
mov
push
test
and
scas
mov
push
sti
cli
mov
cmpsb
movl
jns
inc
repnz
pop
mov
pop
cs
pop
dec
xchg
sub
adcb
fimull
inc
sub
imul
inc
out
pop
xor
mov
push
into
repz
mov
enter
rclb
jl
inc
inc
arpl
cmpsl
in
or
mov
sbbl
jo
dec
or
ds
test
dec
or
mov
cmpsl
ss
shl
decb
ficoms
inc
xchg
cmp
aaa
pop
ret
jae
gs
jl
jge
cmpsl
and
xor
mov
ret
pusha
ret
cmp
mov
outsb
mov
add
movb
insl
pop
fisttps
loopne
nop
jns
or
add
push
lea
and
ja
xchg
aas
les
sti
dec
xor
stc
adc
icebp
dec
cmp
mov
or
es
sub
jecxz
cmpsl
testb
inc
or
push
int3
fcomps
dec
pop
cltd
and
mov
mov
dec
mov
sub
mov
dec
mov
js
ds
sub
pop
fidivs
xchg
jae
imul
adc
jbe
jb
jne
aad
jbe
shl
mov
aas
loop
in
xor
cmp
popf
xadd
outsl
rep
ds
gs
hlt
mov
xor
mov
lods
jecxz
mov
mov
lcall
jae
jmp
movsl
dec
in
lret
dec
popa
mov
sbb
pop
sbb
add
add
or
sub
cmp
push
inc
fwait
pop
daa
pop
rcll
inc
xlat
lcall
mov
inc
test
hlt
stos
sbb
add
lcall
dec
and
mov
adc
leave
fimuls
mov
adc
fwait
jle
sub
mov
inc
jbe
pop
push
pusha
in
xchg
out
in
sbb
adc
scas
xor
mov
pop
sahf
add
imul
outsl
cld
mov
mov
mov
or
stc
bound
inc
sbb
cmp
push
xchg
xor
mov
mov
jge
mov
movsb
cltd
pop
push
dec
push
adc
xchg
push
out
mov
pop
repnz
fsubl
dec
js,pn
mov
push
adc
mov
and
cmp
lcall
loope
stc
fcmovne
xchg
movsb
mov
jg
pop
clc
jecxz
mov
jns
rcrl
mov
adc
adcb
ret
std
cs
jecxz
std
jns
xchg
dec
cmp
addl
push
int
lea
dec
rcrl
mov
add
movsl
push
cmp
sub
sub
jl
and
push
filds
push
xor
aam
ss
adc
dec
fisttps
mov
mov
ror
sbb
adc
cmpsb
xchg
or
cmp
push
lret
or
sub
and
sub
jb
adc
jp
out
sub
and
repz
ja
xchg
shr
push
into
jp
dec
and
shll
cmc
add
inc
cmp
inc
pop
pop
mov
push
aam
cld
and
addb
adc
cmc
mov
fistps
bound
xchg
jae
into
cmp
mov
mov
movsb
mov
outsb
lods
sbb
or
inc
xor
mov
add
adc
fisttpll
dec
push
rcl
jns
inc
outsl
sub
mov
mov
rcr
mov
cltd
add
clc
push
andb
add
lods
pop
xlat
scas
mov
pop
pop
add
outsb
mov
cli
popf
xor
out
xchg
jmp
mov
xor
mov
sub
inc
or
rolb
bound
cmpsb
ffreep
inc
stos
add
adc
jnp
test
push
stc
mov
loop
in
stc
pop
or
out
pop
fbstp
cmp
std
loop
cmpsb
mov
mov
stc
bound
pop
xor
shlb
lods
leave
mov
arpl
jge
lock
and
sub
js
pop
lret
mov
in
mov
lret
add
add
sbb
mov
icebp
leave
inc
push
mov
fimull
mov
test
inc
rol
mov
dec
adc
sub
popa
add
movsb
cmp
lds
int
pop
cmpsl
adc
clc
xchg
push
loope
dec
out
das
cli
ret
adc
lahf
push
mov
shll
cmpsb
mov
mov
out
mov
out
lds
mov
jo
cli
mov
scas
lds
push
cmp
imull
mov
out
in
arpl
mov
inc
inc
inc
dec
clc
xchg
ss
nop
sbb
sbb
dec
scas
negl
pop
push
xor
popf
adc
adc
jo
into
sbb
movsl
jp
inc
mov
push
lds
imul
in
xchg
sub
push
ret
movsb
cmp
add
pop
adc
inc
jmp
fbstp
mov
in
ds
aam
cmp
mov
mov
xchg
cmp
rcrb
xor
adc
rorb
test
or
sub
stc
aad
or
dec
cmp
les
std
xor
pushf
popf
or
sbb
insb
insl
pop
xchg
sub
test
mov
mov
les
shrl
stos
leave
icebp
pop
mov
adcl
adc
lods
add
enter
jb
inc
pushf
xchg
mov
es
mov
push
push
and
gs
xchg
xorb
sub
lcall
mov
nop
pop
lds
lret
push
ret
jl
ror
sbb
mov
gs
sbb
adc
dec
push
push
inc
loopne
add
loopne
cltd
aad
sbb
jge
idivb
adc
sub
mov
mov
stos
stos
xor
dec
ror
adc
inc
fcomi
xlat
sub
ret
sahf
xor
ss
and
rcrb
mov
mov
and
mov
push
sar
fdivl
mov
dec
push
sub
add
xchg
into
test
stos
push
mov
or
cmp
sub
dec
xor
pop
fcoms
inc
and
dec
ljmp
jbe
sbb
and
rcrl
mov
pop
cmpsl
add
stos
push
cmc
xor
cmp
shll
cmp
loop
pop
pop
mov
ret
mov
cmp
in
push
pop
xor
pop
mov
adc
dec
ror
mov
pop
xchg
jnp
ss
xchg
add
dec
mov
loope
mov
sbb
adc
addl
or
or
or
cmpsl
fst
shlb
in
add
aam
incl
mov
sarb
outsl
sbb
test
movsl
adc
cltd
jae
dec
xchg
xchg
les
or
pop
sbb
loopne
sbb
sub
gs
sbb
cmp
mov
stos
cmp
mov
pushf
sub
lods
shrb
inc
add
sbbl
jp
int
mov
adc
mov
pop
mov
aam
jp
repz
pop
lods
mov
add
fsubrp
mov
cmp
sub
add
push
sub
mov
pop
sub
xchg
insb
pop
repz
sub
sahf
pop
notl
stos
sub
fs
adc
mov
cmp
pop
insb
push
filds
loop
lods
mov
vpcmpestrm
sbb
cmp
xor
test
mov
push
icebp
out
adc
push
and
movsb
pop
cmp
mov
lcall
out
insl
inc
loopne
sub
mov
leave
pop
xchg
mov
imul
sbbb
cmpsl
es
jns
add
shlb
ficoml
pop
sbb
dec
ret
sub
inc
aam
stos
sahf
shl
ds
pusha
mov
or
jl
ret
inc
dec
jae
and
das
add
pop
loope
add
mov
adc
mov
arpl
out
jl
addr16
out
rcll
cld
mov
mov
and
lcall
cmp
rorb
mov
test
inc
dec
addb
repnz
dec
pop
pop
and
cmpsl
xor
mov
shll
jns
ds
mov
fsubrs
scas
enter
sub
in
out
xchg
jb
inc
dec
jb
xchg
dec
mov
sub
sbbl
jl
adc
cmp
popf
jo
imul
dec
lahf
icebp
pop
sbb
sub
addr16
jo
notl
mov
jnp
sub
adc
adcl
mov
mov
out
movsl
add
lea
insl
mov
dec
nop
aas
outsl
mov
xchg
add
dec
in
icebp
jmp
cltd
xchg
loope
sbb
or
cmp
stc
invd
sbb
icebp
add
movsb
jp
push
movsl
jnp
gs
jmp
sub
xchg
mov
sbb
dec
or
icebp
scas
jecxz
fcmovu
in
sub
mov
js
inc
pushf
cli
xchg
gs
and
jge
shl
js
nop
loopne
std
imul
call
push
adc
sahf
pop
lock
cmpsb
mov
lods
push
sbbb
pop
xor
jmp
push
add
sub
jns
mov
pop
lret
mov
shlb
pop
rcrl
mov
rcll
icebp
scas
test
mov
cmpsb
fisubrs
push
mov
rcll
or
add
xor
jle
enter
add
mov
fsts
mov
ret
pop
or
imul
push
sbb
pop
cwtl
jecxz
push
push
into
xor
test
leave
xor
mov
push
sub
and
xorb
hlt
jo
inc
xchg
inc
adc
nop
or
popa
mov
movsb
fs
loop
loop
test
es
hlt
pop
pop
add
js
mov
repnz
scas
lock
pop
test
shrl
xchg
mov
in
test
xchg
mov
pop
sti
adc
pop
clc
mov
push
pusha
gs
adc
repnz
lcall
loopne
pusha
aad
pushf
adc
je
push
lea
push
call
xor
or
pusha
aam
mov
mov
fldl
ljmp
inc
notl
push
adc
pop
in
lods
fcmove
outsb
aas
int3
xchg
adcb
dec
outsb
je
sbb
pop
add
leave
dec
stos
clc
stc
pop
mov
das
insl
divl
nop
inc
ds
iret
pop
add
xor
jb
iret
movsb
jge
mov
pop
or
lahf
leave
xlat
adc
cli
insl
lea
cwtl
xchg
mov
inc
outsl
xor
in
cs
sbb
mov
mov
fcoml
sbb
mov
mov
jne
mov
lret
push
stos
adc
sbb
ss
cld
cmpb
pop
test
dec
push
pushf
andb
mov
shll
arpl
add
clc
sub
mov
push
pop
stos
out
and
cmp
xor
push
mov
mov
test
adc
mov
sbb
fs
mov
shrb
add
cmc
dec
loopne
inc
xor
out
jle
push
jne
dec
mov
lcall
lea
les
jno
data16
or
lret
repnz
aaa
int3
scas
dec
outsl
dec
mov
out
and
pop
cmp
push
mov
outsb
inc
iret
mov
jb
stos
jb
ljmp
push
mov
stc
lret
or
jae
test
mov
bound
cmp
fnstcw
push
or
add
sub
adc
ss
sarb
maxps
iret
ret
dec
cli
xlat
jle
jl
xchg
stos
cli
inc
imul
mov
scas
cmp
out
pusha
stc
movsb
sub
dec
cmp
push
xchg
jl
push
add
pop
movsl
pop
xor
enter
xor
mov
xchg
mov
stc
enter
mov
mov
popf
ret
sbb
adc
fimuls
or
adcb
test
aam
or
adc
fstpt
shrb
pusha
inc
movntq
mov
out
sbb
jo
push
xchg
cwtl
sub
in
add
xchg
sbb
imul
mov
das
or
stos
pushf
je
mov
cli
sbb
call
dec
xor
xor
imul
dec
mov
sub
sub
mov
push
push
pushf
decl
frstor
outsb
clc
mov
lods
push
aad
add
cwtl
jns
pop
lods
dec
frstor
dec
fwait
and
add
pop
xor
test
inc
jb
ljmp
push
jns
scas
hlt
add
pop
movsb
xchg
sahf
jne
stc
cmp
scas
fldln2
cwtl
push
arpl
mov
sbb
inc
or
aaa
inc
popf
pop
sub
push
sub
mov
mov
jno
cmp
or
fs
sbb
pop
jecxz
loopne
pushf
xchg
jae
xchg
and
test
dec
mov
fwait
adc
shl
ds
xchg
hlt
pusha
scas
lods
in
push
stc
cmp
dec
and
sub
mov
jle
popf
or
cmc
pushf
or
fnstenv
inc
push
outsl
outsl
into
mov
pusha
sbb
dec
ret
push
or
std
dec
inc
sub
mov
adc
mov
stos
pusha
jno
push
push
popa
pop
inc
push
or
xor
inc
push
outsb
push
outsb
bound
mov
mov
nop
hlt
mov
adc
shl
movsl
faddp
test
jge
daa
stos
outsb
ljmp
push
xchg
cmp
pusha
xchg
push
scas
or
mov
pusha
sub
inc
push
pop
call
and
ljmp
pop
faddl
out
std
add
ds
xor
stc
inc
or
mov
jmp
cld
or
and
jp
mov
lods
in
pop
cmp
mov
test
jns
movsb
cmp
xchg
orb
leave
pop
sub
dec
adc
xor
insl
xchg
repz
rorb
sti
int3
cmp
sub
into
xchg
aad
pop
or
in
xchg
ffreep
imul
mov
gs
dec
popf
iret
dec
test
jae
ljmp
push
or
daa
loopne
mov
dec
les
scas
pop
dec
clc
jne
jmp
scas
das
sbb
fiadds
xchg
mov
fs
mov
dec
lret
stc
sbb
scas
lret
clc
mov
fcmove
mov
or
mov
and
dec
es
and
dec
cmp
lcall
in
and
in
xor
scas
mov
push
sbb
movsl
cld
js
push
sahf
xchg
sbb
push
leave
cmp
dec
lea
decl
imul
popa
icebp
jge
sbb
aaa
push
xor
mov
push
fsubr
rcrb
jmp
je
loope
testl
nop
jp
popa
xchg
dec
mov
fwait
out
mov
ss
and
sub
push
add
stc
cmp
js
sub
sbb
pop
les
push
stos
movsb
addl
test
push
stos
dec
test
loope
iret
pop
into
outsl
or
xor
jns
mov
inc
xchg
icebp
arpl
mov
das
popf
int
aad
pop
les
or
bound
cld
jns
pop
jb
lods
push
fidivs
mov
fdivrs
rcll
dec
and
push
hlt
leave
cmpb
bound
outsb
out
jae
leave
icebp
adc
xor
ret
enter
call
jp
idivb
cmc
arpl
fldcw
out
jp
adc
push
pop
dec
dec
clc
push
cmp
out
push
xchg
mov
rcrb
jne
out
jge
fstl
and
xchg
je
cmp
xchg
mov
push
sbbb
js
orb
subb
cmpsb
leave
jae
push
sti
push
cmp
sbb
sbbb
xchg
pop
lods
std
fsubrl
and
push
clc
fs
data16
ficoml
sbb
sbb
insl
add
sub
ficoms
repz
and
pop
or
sbb
mov
cmp
pop
inc
outsb
dec
fildll
dec
fs
mov
les
jle
rorb
scas
gs
stos
and
les
icebp
lahf
mov
out
addr16
cmc
dec
pop
xlat
es
mov
and
repnz
mov
mov
cld
adc
je
int
mov
pop
push
xchg
xchg
mov
pusha
lods
in
sbb
or
aas
dec
js
js
sub
iret
lock
movsb
dec
and
mov
cmp
movsl
shlb
out
cmp
xor
or
hlt
sahf
and
hlt
sub
sarl
push
push
and
push
sbb
mov
mov
inc
scas
decl
int3
cmpsb
int
int
test
cmc
inc
mov
pushf
test
xchg
mul
ss
in
imul
and
outsl
jge
call
movsl
sbb
cmp
bound
and
loope
cmp
xchg
sbb
add
add
cs
xchg
in
add
push
rcr
movsb
bnd
lods
dec
popa
mov
mov
pusha
mov
jbe
mov
mov
test
cmc
loope
dec
mov
adc
scas
out
aad
popf
cld
cmc
mov
add
adc
roll
inc
sub
in
xor
lods
push
lret
adc
dec
iret
mov
sbb
fdiv
sarl
sbbl
inc
fmuls
popa
fs
jbe
pop
jnp
subb
xor
cmp
loope
sbb
cltd
adc
pop
adc
xchg
incb
dec
jge
cmpsl
cmp
adc
shll
push
add
sub
pop
jo
arpl
and
mov
or
jbe
adc
sbbl
dec
and
xchg
jno
repz
dec
pop
int
movsb
adc
cli
inc
pop
cmpsl
fsubl
or
out
dec
pop
mov
xchg
pop
add
testb
sti
inc
mov
mov
or
inc
call
push
fs
mov
aas
je
ret
mov
out
fbstp
inc
dec
push
inc
syscall
adc
ss
pop
dec
push
mov
jnp
or
aaa
cli
xlat
mov
add
inc
es
mov
aad
fmul
cli
mov
jae
xchg
push
fcoms
mov
xchg
pushf
fisubl
push
xchg
cltd
aad
jmp
sbb
dec
pop
jg
lods
xchg
hlt
lret
addr16
adc
popf
pop
or
in
inc
sbb
repz
js
cmp
pop
pop
sub
aaa
lret
lret
push
sbb
ret
pop
imul
mov
adc
cwtl
and
inc
outsb
sahf
xchg
pop
fsubrp
or
popf
loope
xlat
jb
cmpsb
imul
sbb
cmp
sbb
add
addr16
xchg
stc
xor
adc
push
fisubrs
pop
lret
jno
xchg
pop
mov
fisttpll
dec
xchg
xorb
out
rorl
scas
dec
rorl
sbb
xchg
fs
lea
xchg
scas
in
inc
xlat
xchg
sub
sbb
cmpsb
jle
test
cmp
jle
fsub
outsb
scas
pusha
xor
sti
xchg
jecxz
mov
jno
pop
lods
push
and
dec
xchg
in
cld
or
sub
and
or
aam
pop
bnd
mov
and
fsubrs
jmp
es
xchg
rcr
and
pop
mov
popa
aas
and
cmc
sbb
imul
xor
andb
pop
rorl
sub
cmp
loopne
or
xchg
xor
jl
call
cmpsb
scas
mov
or
pop
ss
sbb
in
mov
out
pop
push
and
jno
mov
les
pop
fdivr
mov
insb
pop
cmp
cmpsb
loope
dec
js
repz
popf
cmc
mov
and
testb
stc
ficoml
jl
cld
xchg
cli
test
cmp
scas
imul
movsl
push
mov
sub
mov
fidivrs
xchg
jecxz
xchg
movsl
je
iret
pop
lahf
pop
nop
in
mov
mov
sbb
dec
push
das
rcrb
xor
sub
cmpsl
lret
jg
push
arpl
test
adc
and
pop
pop
sub
mov
jbe
dec
es
fisttpl
inc
add
mov
jae
xchg
adc
jb
push
mov
add
out
push
lods
sub
adc
cld
mov
adc
pop
lret
dec
pop
test
jmp
push
sbb
adc
rorb
jne
sbb
mov
clc
lods
popl
popf
pop
sbb
push
jmp
movl
loop
cmpsb
inc
test
fistl
add
jns
push
in
rol
inc
rorl
test
mov
je
jbe
ja
lea
mov
orl
pop
jae
out
sub
sahf
xchg
sub
mov
loop
daa
add
mov
and
mov
adc
lods
stos
sub
push
fs
fidivrs
adc
sbb
sub
mov
idivl
ss
cltd
dec
push
fcoml
inc
mov
sbb
or
pop
add
sub
ljmp
ret
mov
loopne
dec
sahf
dec
repz
shll
push
arpl
ret
std
outsl
cli
cmp
fwait
sub
orb
pop
jmp
sub
xor
ret
and
dec
cmp
inc
repnz
mov
add
mov
push
in
shl
fldpi
fildll
mov
inc
test
or
out
out
dec
leave
test
jg
mov
out
mov
inc
or
pushf
sub
pop
pop
dec
and
dec
xor
xor
sbb
sti
dec
cmc
or
movsb
cli
aaa
add
rcl
pop
idivb
inc
imulb
in
cmp
mov
scas
xchg
iret
pop
add
or
aas
or
or
adc
rcll
je
mov
pop
fsubp
fdivr
sub
mov
or
imul
mov
icebp
scas
fldt
cmc
imul
je
push
push
aaa
nop
scas
push
sub
dec
mov
cmp
cmc
movsl
pop
sbb
add
nop
push
mov
mov
andb
inc
mov
repnz
frstor
andb
adc
sbb
mov
sbb
notb
pop
jecxz
fiaddl
movsb
and
jmp
sbb
aas
jecxz
in
fdivrs
test
mov
ret
sbb
out
movsl
add
jb
mov
aam
or
mov
xchg
jle
arpl
mov
cmp
mov
add
jl
sbb
inc
sub
test
and
aas
mov
repz
loope
lcall
jnp
pop
xchg
cltd
push
in
movsb
pop
xor
ljmp
es
or
or
fmull
pop
push
mov
dec
das
ss
cmp
sbb
in
rorb
push
or
fwait
addl
nop
cs
imul
inc
jp
adc
mov
pop
mov
shll
jbe
jbe
mov
lret
sbb
xchg
sti
ret
sbb
pop
cmp
adcb
xchg
mov
pop
pop
push
mov
shl
roll
cld
test
scas
lock
mov
in
cld
rcrl
loopne
mov
dec
repnz
hlt
scas
xchg
les
sub
dec
insl
mov
mov
outsl
leave
xor
andb
icebp
pop
sub
out
jnp
inc
cs
das
gs
cmp
adc
aaa
mov
test
sbb
push
dec
lea
ljmp
add
add
sub
cmpsl
cs
lcall
aaa
fldt
push
jp
add
mov
std
pushf
sbb
mov
push
and
xchg
jbe
inc
xor
cmp
jae
addr16
data16
jb
imul
in
mov
in
jo
lret
or
fs
add
aas
adc
jno
dec
dec
shrb
sub
pushf
icebp
sub
pop
mov
hlt
jne
sub
push
sahf
mov
mov
sarl
pusha
or
xchg
cs
dec
gs
int
shr
jo
ljmp
rorb
call
lcall
inc
cmpsb
sahf
cmp
mov
je
rcll
push
int3
dec
pop
lahf
lods
lret
xor
movsl
outsb
addb
mov
mov
stc
mov
ret
mov
jbe
jns
out
mov
scas
sub
fidivrl
jns
jge
jecxz
add
shl
inc
test
xchg
mov
popf
aaa
jnp
add
push
ds
jl
inc
dec
and
pop
popa
add
les
add
sub
ss
xchg
int
push
sub
mov
aas
jl
and
test
sub
jbe
pop
adc
sbb
mov
mov
add
jl
nop
lret
cmp
cmpsl
pop
push
xchg
xor
push
sub
test
xor
cmp
pop
into
adc
add
pop
mov
inc
or
nop
popa
or
frstor
les
jne
add
cmc
and
push
cld
xchg
inc
adc
lock
call
test
fdivl
sti
jl
sub
aas
jecxz
cmp
pextrw
sbb
std
add
loop
cli
movsb
jo
sbb
dec
add
adc
movsl
inc
push
notb
lods
fistl
cmc
les
dec
adc
ud1
cwtl
mov
pop
jecxz
mov
in
xchg
neg
imul
arpl
xlat
mov
out
movsb
and
push
adc
add
out
sub
andb
jne
cld
imul
xor
sbbl
jmp
xor
mov
pop
mov
ja
xchg
mov
dec
sbb
jbe
subl
or
in
jg
mov
pop
imul
pop
xchg
add
adc
mov
in
fnstenv
loop
insl
dec
addb
jge,pt
rcrb
or
popf
sub
insb
addr16
push
jbe
xor
scas
dec
fistps
cwtl
fstps
clc
xchg
sub
mov
cmp
stc
repz
sub
cmp
jbe
mov
xchg
enter
cld
sub
add
rolb
mov
xor
out
jmp
jne
icebp
mov
lahf
and
es
inc
ret
out
inc
and
cmpsb
inc
mov
mov
or
je
scas
jbe
bound
ljmp
test
pop
add
arpl
stc
stos
mov
les
xor
movsb
jle
dec
orb
mov
cli
dec
popa
aaa
cmp
enter
or
shll
sub
fsubl
testl
and
sti
mov
or
fs
fisttps
and
jl
jl
das
and
aas
cmp
sub
dec
or
mov
cld
dec
repnz
xorl
fisubrs
sbbl
mov
lods
inc
and
push
into
mov
lock
mov
cs
call
out
enter
push
mulps
jo
mov
add
rcll
xor
mov
clc
mov
xchg
mov
xchg
inc
cmp
lret
pushf
mov
mov
es
cmpsl
jbe
mov
dec
loope
adc
pop
mov
xchg
xchg
mov
xchg
sub
sti
inc
fwait
add
std
rcl
into
mov
mov
mov
fiaddl
and
mov
cli
pop
stc
and
cmc
aas
cli
lock
jp
insb
lods
jno
xchg
xchg
sub
aas
or
out
or
popl
push
push
lcall
sbb
pop
xchg
idivl
mov
sub
mov
lret
dec
cmp
cmpsl
adc
and
add
or
cmpsl
mov
push
enter
jmp
cs
rcll
nop
xchg
dec
add
pop
or
xchg
mov
inc
add
or
sub
jg
add
shl
lock
mov
cmp
int3
pop
cmp
jmp
inc
jae
daa
loop
pop
test
nop
add
cmp
call
pop
inc
and
outsl
adc
inc
and
sahf
lods
cmpsb
add
dec
sbb
je
mov
repnz
mov
mov
int3
in
fstl
popf
cs
aam
pop
cmp
xchg
push
push
data16
add
and
shlb
mov
inc
loopne
rolb
dec
fs
push
outsb
lods
fbld
mov
lret
stc
sti
fiaddl
into
je
adc
gs
loopne
les
adc
jecxz
mov
insb
inc
ss
fistps
add
popa
mov
scas
gs
push
push
mov
xor
enter
lods
or
sbb
mov
inc
xchg
push
mov
test
imul
lahf
push
jecxz
pushf
cmpsb
movsb
adc
das
cmp
aad
push
adc
ret
mov
inc
push
jecxz
xchg
or
add
sub
or
cmpsb
pop
push
pop
repz
jns
test
add
mov
dec
xchg
aad
push
lds
sub
out
out
iret
jecxz
and
fildll
pushf
daa
pop
je
test
cmc
xchg
pop
mov
or
inc
push
jb
jp
les
ret
outsb
jecxz
mov
fisttpl
jb
add
call
leave
mov
xchg
orl
mov
mov
icebp
jecxz
mov
jp
dec
aam
call
cld
jecxz
stos
cmp
mov
dec
xchg
icebp
out
push
ja
les
mov
and
enter
fwait
imul
push
mov
jmp
pop
arpl
cmp
and
int3
or
mov
dec
and
pop
mov
pop
mov
pop
sbb
adc
lock
and
push
cmpsb
lcall
fdivrl
cmp
and
test
fcmovb
dec
rol
lds
push
sub
into
ficomps
roll
push
inc
xchg
mov
sub
inc
xchg
enter
sbb
es
or
lds
call
inc
adc
std
sbb
mov
inc
inc
lds
stos
jo
out
xor
fisttpl
jnp
ss
jno
sti
xchg
pop
lds
test
mov
jmp
pop
ds
daa
cwtl
ret
jmp
cmpb
jne
iret
adc
mov
into
sub
mov
adc
push
ror
gs
daa
aam
xchg
xorb
cmp
push
dec
fimull
mov
mov
push
in
ds
les
cltd
push
xor
add
cld
or
dec
popf
int
pop
cmp
mov
in
mov
mov
into
mov
push
push
es
mov
mov
outsb
iret
pop
mov
mov
pop
je
or
cltd
cmp
movsl
mov
aam
jne
and
sub
jbe
testl
push
and
scas
test
inc
sti
stc
mov
setge
add
shlb
call
adc
mov
push
pop
dec
mov
loopne
adc
push
fstl
inc
clc
mov
ds
mov
pop
mov
dec
dec
lock
mov
or
data16
sub
add
mov
cli
pop
lds
sub
test
pop
mov
inc
cmc
fwait
xchg
insl
lret
inc
out
and
or
mov
sbb
popa
and
jns
les
push
in
repnz
ds
hlt
jmp
sbb
mov
or
inc
xor
pop
mov
lods
push
fwait
cli
jmp
test
xlat
mov
mov
in
stc
mov
xlat
repz
sbb
or
mov
lret
popa
mov
mov
mov
addr16
std
sbb
push
lods
adc
mov
outsl
orl
fwait
pop
sub
push
cmc
inc
jp
mov
push
push
mov
xchg
bound
sahf
push
insb
push
lahf
test
stos
mov
lcall
or
pop
adc
cmp
cmp
incl
mov
hlt
imul
and
inc
loop
repnz
fsubrs
add
mov
xchg
sub
into
jne
xchg
dec
std
and
push
aas
add
ljmp
inc
ja
scas
cmp
inc
mov
and
out
sbb
dec
push
jo
jle
cmpsl
and
sbb
xchg
fsubl
xchg
xor
mov
lahf
in
jnp
cli
ss
xchg
shlb
dec
dec
fs
mov
gs
jne
dec
cmpl
lds
andb
lods
sbb
pushf
add
push
push
pop
enter
pop
cwtl
sarl
sbb
aam
dec
pop
add
mov
dec
add
dec
ret
inc
adc
clc
cltd
xor
sub
and
push
mov
bound
es
cmp
sbb
imul
pushf
into
mov
push
xchg
mov
popa
ficoml
cmc
stos
adc
jmp
lods
dec
lods
bndstx
dec
nop
cmpsl
inc
or
mov
push
int
popa
xchg
pminsw
in
add
or
adc
push
mov
andb
sbbb
lret
addr16
adc
incb
pop
adc
xchg
lock
mov
sbb
inc
gs
inc
insl
mov
mov
das
pushf
dec
or
emms
xor
lods
sbb
pop
and
xchg
add
data16
jbe
cmp
mov
into
mov
arpl
jmp
mov
cmp
jmp
stc
jp
mov
loop
mov
push
dec
lds
lahf
push
sbb
adc
imul
fwait
jl
les
sub
mov
sahf
imul
mov
mov
push
jb
and
push
pusha
pop
inc
movsl
enter
xor
int
imul
maxps
fnstcw
jne
arpl
dec
xlat
dec
gs
lds
ret
cmp
push
pop
pop
sarl
ja
loop
mov
fcoml
mov
mov
mov
clc
pop
push
mov
inc
cmpb
inc
into
mov
jmp
psraw
repz
shrl
cld
icebp
sahf
cmp
inc
inc
mov
out
ss
xor
inc
and
add
jle
xchg
mov
or
dec
in
add
loop
xlat
and
rcrl
lcall
dec
dec
ret
and
dec
sahf
mov
flds
jne
xchg
inc
pop
ds
mov
push
lahf
les
cld
jbe
sub
pop
xor
push
inc
lret
jbe
mov
mov
sub
mov
std
in
jp
ret
cmp
mov
mov
cmp
mov
into
aad
xchg
xchg
adc
xor
std
les
or
pop
cmpb
sbb
xchg
adc
lret
pop
nop
xchg
jnp
dec
sub
leave
jno
push
stos
push
pop
push
mov
loop
cli
adc
sbb
sbb
mov
sbb
rolb
outsl
dec
add
xchg
subb
jne
add
xchg
test
and
mov
pop
and
iret
lods
mov
in
and
inc
xchg
xlat
das
and
sbb
xchg
test
pop
xor
leave
inc
dec
in
das
pop
or
add
xchg
shr
xchg
rcl
cmpsl
shrl
push
lods
push
test
bound
adc
mov
push
js
cmpsb
pop
in
and
aam
mov
insb
xchg
into
adcl
stos
sub
cmp
mov
push
jno
out
push
and
jmp
test
mov
inc
push
bound
daa
jnp
js
nop
arpl
xchg
xor
pop
mov
ja
or
dec
cld
mull
test
ss
mov
outsl
clc
mov
shlb
test
rolb
arpl
insb
dec
lret
inc
xchg
out
jb
rorl
sub
lahf
lcall
and
pop
imul
cs
xchg
or
aam
sbb
sarb
sti
mov
add
imul
xor
xchg
outsl
cmp
fstpt
dec
test
imul
pop
inc
sub
stos
push
jecxz
xor
rorl
or
test
fcoml
pop
stc
scas
sub
xchg
add
repz
mov
adc
pop
cmp
cmp
xor
lock
repz
inc
mov
lret
flds
or
mov
aam
cmp
jo
add
mov
push
fwait
in
xlat
mov
dec
jmp
movsl
in
add
test
jns
movsl
aaa
loop
test
je
mov
inc
lcall
adc
sti
mov
xchg
add
jbe
adc
mov
pop
sub
sbb
push
jb
sub
pusha
push
scas
test
inc
mov
add
ret
out
daa
outsb
mov
je
adc
inc
ljmp
mov
add
dec
fs
jne
scas
notl
test
repz
iret
int3
mov
add
lret
cmp
popf
push
cmp
xchg
popa
cvtdq2ps
mov
mov
sbb
sahf
jp
or
sub
cmp
push
stos
rcl
das
dec
aaa
fs
lcall
fcoml
xor
pusha
sub
and
jbe
sub
daa
jmp
mov
inc
mov
add
dec
jnp
inc
inc
jp
scas
pop
cmc
adc
inc
mov
and
addr16
bound
dec
or
and
loop
mov
mov
cmp
add
and
popf
mov
push
in
dec
mov
cmp
mov
fwait
or
scas
idivb
fldenv
loop
rol
sub
jp
std
out
sub
rorl
jl
push
rcll
sti
push
insb
iret
fadds
sub
cmpsb
stos
data16
cmc
cmp
jp
sti
cmpb
cmp
pop
mov
das
add
jle
push
lods
enter
aaa
jg
sbb
scas
mov
mov
fnsave
xor
cltd
cmp
aam
loope
arpl
arpl
jbe
jecxz
cmc
adc
lcall
and
jo
int3
in
out
sub
loopne
in
push
test
lcall
dec
and
add
sbb
push
addr16
lret
mov
cli
repz
adc
dec
enter
sahf
mov
xor
jne
xor
push
xchg
repnz
pop
dec
pop
rcll
scas
rep
movsb
loopne
lret
roll
dec
hlt
mov
addl
into
cli
xor
cmp
shrb
movsb
push
bound
cmpsb
jle
rcrb
mov
add
loop
movsb
int
sbb
inc
or
push
in
jbe
xor
mov
jno
xor
inc
pop
dec
xchg
cmp
into
push
pusha
jp
test
hlt
sbb
insb
lret
incb
push
mov
loop
xchg
insl
or
mov
push
sbb
or
cmp
xor
or
xchg
add
stc
sbb
cmp
shll
lds
adc
add
push
ja
mov
mov
mov
or
inc
inc
mov
inc
and
test
mov
fstpl
lcall
fdivrl
add
std
stc
sub
sbb
push
jp
adc
mov
xor
sub
xchg
add
test
int3
xchg
push
bound
mov
dec
movsl
jnp
mov
int3
out
add
jmp
sbb
fistpll
cwtl
jg
push
leave
imul
sahf
iret
inc
imul
test
imul
outsl
mov
lods
or
mov
mov
and
sbb
popf
pusha
std
or
cmp
push
aam
mov
aaa
loop
movsl
xor
mov
aas
fcmovnu
and
lea
mov
enter
pop
inc
outsl
scas
sub
or
jl
mov
sldt
scas
push
in
dec
inc
mov
cmp
jae
gs
ret
popf
out
mov
pop
sbb
cmp
or
cmp
lret
adc
adc
and
xchg
and
loope
ret
inc
andb
xchg
sahf
out
mov
add
negl
cmp
cli
mov
pushf
jge
loope
in
out
fwait
or
in
frstor
mov
test
es
loope
jp
fidivs
xor
cmp
icebp
pusha
xor
punpckhdq
fadds
or
sbb
dec
jl
jno
push
daa
xchg
mov
mov
push
mov
or
push
or
push
insl
xor
xchg
imul
fnstsw
out
add
jle
cmpsb
imul
movsb
add
cmp
dec
in
mov
js
es
and
mov
shll
insl
mov
pop
or
sub
adc
stc
out
jno
adc
bound
mov
jmp
lcall
xor
pop
fisttpl
lock
lret
js
sub
ja
mov
mov
call
jns
jmp
xchg
mov
dec
enter
and
imul
ds
dec
sarl
in
sahf
pop
das
andl
and
mov
sub
repnz
arpl
cmp
push
adc
inc
fadds
ret
testl
dec
rcl
or
or
pop
add
cmp
js
mov
sbb
mov
pop
std
jae
lcall
ss
jle
lcall
mov
and
popa
icebp
fsubrp
outsl
subl
jbe
push
into
mov
and
push
and
loope
in
jle
cmp
sbb
sub
mov
sub
shl
shrl
mov
and
hlt
sbb
aad
test
out
stos
pop
subl
js
hlt
adc
or
lret
mov
mov
or
sub
cmovp
int3
ss
dec
jge
in
insb
lret
sti
dec
or
outsb
jge
mov
inc
mov
mov
pop
mov
cmpsb
add
scas
dec
imul
cwtl
mov
pop
sub
jbe
lea
cmp
insl
mov
pop
jb
push
jle
sti
and
add
orl
pop
jb
pop
jmp
outsl
xorps
jno
mov
push
push
and
test
mov
shl
cmp
dec
mov
shl
sub
mov
data16
cli
or
mov
add
cmp
aaa
xor
inc
popf
mov
addr16
cmp
dec
mov
push
adc
inc
mov
push
es
push
jp
adc
fisubl
ret
call
lods
cltd
out
movsb
popf
lret
sub
cmpsl
stos
mov
cmpsb
pop
shrl
cld
mov
fidivs
aas
test
jecxz
pop
mov
dec
mov
jae
ljmp
in
pop
sub
mov
and
adcl
mov
sbb
cmp
stos
mov
mov
mov
cmc
jecxz
xchg
or
dec
cmp
dec
scas
imul
mov
popf
jae
fldl
mov
sbb
inc
cmpsb
clc
nop
add
dec
ret
lcall
pop
repz
dec
inc
jp
hlt
cmp
xchg
push
leave
and
xchg
inc
add
push
sbb
ja
jp
push
mov
sbb
idivb
xchg
push
in
ficoml
sarl
pushl
push
mov
and
int3
push
stos
int
dec
lahf
xchg
mov
fmul
push
call
mov
lret
stos
js
aad
jnp
rep
xchg
shrb
sbb
inc
bound
imul
int3
pushf
cs
data16
jge
jg
xchg
ret
and
std
push
inc
nop
out
jbe
pop
jle
inc
jecxz
test
jge
das
cmp
in
sbb
mov
sub
adc
inc
frstor
cmp
mov
push
mov
imulb
fdivrs
sar
inc
adc
sub
push
faddl
lahf
in
pop
pop
push
or
jp
loopne
out
inc
rclb
cs
fsubs
pop
xchg
pushf
jge
and
punpckhbw
push
jp
mov
push
sahf
cmp
stos
xor
sub
jns
jno
in
dec
dec
mov
xchg
mov
ja
ret
loope
push
imul
mov
out
aad
cltd
inc
fdivs
xor
mov
push
pop
rcrb
push
push
jle
mov
mov
push
mov
push
sub
sub
xor
xlat
push
and
mov
push
mov
pop
sti
scas
push
fs
mov
xor
cmc
jno
movb
pop
shll
add
xor
cltd
pop
js
mov
mov
shrb
clc
jns
fwait
mov
inc
bound
xor
cmp
cmp
jle
hlt
call
in
dec
pop
sub
mov
push
push
sub
es
iret
je
daa
cmc
aam
arpl
jo
cmp
lods
mov
fs
lea
js
mov
lock
inc
cmp
or
mov
lret
mov
jmp
addb
adcb
ljmp
mov
xor
lock
xor
xlat
loopne
test
mov
jne
xchg
les
xor
mov
out
xor
loope
and
into
mov
js
sub
mov
dec
sbb
pop
pushf
xor
es
imul
jecxz
mov
repnz
pushl
or
fsts
arpl
sbb
into
mov
and
pop
sub
cmp
jno
daa
ds
icebp
cmp
fs
lock
es
popa
lcall
addr16
popf
inc
ljmp
fdivr
sbb
sub
xor
aaa
adc
inc
lcall
ror
inc
jns
dec
adc
sarb
xor
cmp
and
push
imul
data16
cmpsl
hlt
movsb
jns
jmp
mulb
rcrl
lods
cli
inc
jle
std
fistpl
mov
cmp
out
fstps
or
arpl
xor
cmpsl
jb
xchg
ljmp
sub
and
cmpsl
dec
sub
or
lret
or
into
lret
sub
les
mov
cmp
xchg
xlat
add
mov
jns
jmp
imul
jle
pusha
adc
cli
dec
push
adc
sub
repz
stc
pop
push
dec
xorb
repnz
loop
push
and
inc
xchg
fistps
sub
movsl
adc
pop
sub
loopne
dec
cs
xor
call
popa
cmp
adc
pop
push
inc
jae
xchg
rcl
pop
arpl
out
push
jne
inc
mov
rolb
gs
lock
jns
jns
and
cs
loop
and
ret
out
in
pop
cwtl
cmp
mov
test
movsl
jne
pop
insb
ret
gs
push
or
add
cld
aad
sti
ja
jl
sub
jo
mov
push
pop
cmp
push
sbb
inc
push
icebp
jg
mov
mov
movsb
fs
movsl
push
sbb
lahf
ret
loope
out
frstor
add
int3
xchg
loope
stos
js
xchg
jle
insb
pop
mov
mov
js
cmp
jecxz
popa
frstor
movsl
cmc
jae
xorb
test
sub
inc
pop
mov
mov
fiadds
fidivs
into
filds
pusha
pop
cmp
gs
std
popf
dec
mov
jg
push
inc
mov
inc
mov
xchg
repnz
add
pusha
mov
pop
fldt
xchg
fildl
mov
pop
lods
dec
pop
pop
and
inc
add
cmpsb
orl
in
out
arpl
jne
xchg
mov
inc
adcb
pop
mov
sub
mov
test
dec
pushl
out
push
test
sbb
mov
lret
push
mov
dec
dec
xchg
mov
iret
mov
fisttps
orb
loope
sbb
int
je
adc
gs
clc
mov
out
test
into
leave
negb
mov
mov
jno
mov
mov
pop
jne
jns
and
stc
in
jl
jb
pop
sbb
cmp
mov
nop
or
cmpsl
arpl
push
ljmp
mov
lret
sub
lds
dec
dec
add
into
xchg
adc
jns
aas
or
int
or
mov
insl
xchg
int
or
mov
lcall
aas
nop
popf
xor
aaa
add
fbstp
jae
xor
sub
xor
push
dec
sub
sarb
stc
repnz
dec
or
popa
int
bound
mov
or
jp
ret
pusha
xor
dec
mov
hlt
je
pop
inc
inc
dec
arpl
xchg
lods
mov
dec
cmc
lahf
lea
add
add
jecxz
mov
mov
jl
pop
inc
pop
and
aas
sub
add
jge
add
cmpsb
dec
test
ss
ss
pop
cmp
sub
sbb
insb
dec
fbld
xor
cmc
dec
imulb
pop
in
mov
sbb
fidivs
pop
dec
pop
or
pop
dec
out
cwtl
sub
das
dec
add
mov
push
dec
lahf
aam
into
push
xor
add
insb
xlat
inc
sub
orb
in
std
push
lods
cmp
jo
mov
rclb
jmp
xchg
lahf
das
test
jns
out
push
and
cltd
mov
out
mov
xchg
test
inc
clc
scas
orl
pop
dec
mov
push
jne
and
fistps
loope
push
mov
shl
adc
pusha
mov
cld
add
jecxz
push
loop
and
fidivs
es
mov
dec
lret
outsl
mov
pop
dec
imulb
sbb
dec
adc
cmp
and
dec
mov
cmp
cmp
scas
mov
mov
xchg
mov
sub
xchg
mov
mov
mov
loopne
dec
push
insb
mov
sti
icebp
mov
mov
out
or
enter
push
test
sbb
dec
sahf
sub
push
ret
leave
push
fldcw
mov
jns
lahf
xor
jl
cmp
push
cmpsl
cmp
sbb
loope
rorb
adc
push
cmpsb
add
mov
xlat
mov
add
inc
test
hlt
fldcw
dec
mov
mov
jg
and
cmpsb
repnz
test
adc
std
cmpsl
jno
xor
inc
cli
adc
ljmp
movsl
inc
sbb
jmp
cltd
notl
pusha
sub
pusha
sbb
cmp
fnstenv
enter
sti
mov
inc
test
dec
jae
inc
lcall
jge
add
into
jg
or
jp
mov
outsb
adc
iret
sti
lods
push
mov
mov
mov
jg
loop
data16
mov
xchg
andl
mov
notl
push
lock
scas
shrb
lret
sbb
push
push
fildll
cmpsb
stos
arpl
adc
das
inc
or
mov
scas
outsb
or
int3
loope
mov
out
xchg
outsb
fs
loop
cmp
mov
mov
push
adc
jp
jle
or
pop
iret
jmp
and
sarb
insb
xchg
xor
xor
mov
lds
test
xchg
nop
cmpsl
call
daa
leave
sub
jmp
cmpsw
add
fisttps
jp
cmpsl
iret
cli
inc
aaa
jge,pt
int3
xlat
repz
jge
nop
mov
sbb
jbe
leave
mov
mov
dec
scas
sbb
sub
xor
add
and
dec
out
sahf
mov
lahf
cmp
fmuls
add
inc
pop
ss
ret
mov
jns
adc
mov
sbb
adc
or
push
ja
jo
mov
inc
std
inc
sbb
leave
cmc
insl
rcrb
xor
cli
mov
outsl
add
mov
lahf
sub
movsl
xor
lods
adc
adc
rep
inc
js
jp
popa
shll
add
fucom
adc
in
and
testl
add
jns
xor
scas
mov
pop
mov
ss
and
mov
out
sub
push
ja
xchg
xor
lret
jnp
aaa
inc
xor
mov
dec
jno
sarb
stc
pop
movsl
cs
cmp
mov
ficompl
in
push
lods
xor
clc
fstl
jle
ja
test
dec
je
cmp
mov
out
enter
outsl
movsb
add
aaa
lods
cld
scas
adc
cmp
call
mov
stc
mov
push
jle
xchg
les
inc
cmp
pop
dec
mov
lea
push
mov
scas
push
cmp
popl
xor
jl
or
mov
sub
imul
dec
xchg
out
mov
shl
pop
mov
cmpb
mov
leave
cmp
or
shlb
stc
popa
xor
rcrl
imul
bnd
rcrb
sbb
imul
enter
xorb
int
push
loop
mov
xchg
add
std
aam
ret
sbb
fiaddl
femms
sub
cmpsl
cs
jmp
roll
dec
push
mov
lock
in
jl
mov
shlb
xchg
push
arpl
xor
or
cmp
loop
test
xlat
sbb
into
and
xchg
cli
dec
mov
mov
or
ljmp
jno
or
hlt
dec
insb
imul
and
outsb
ds
test
pop
call
or
out
cmp
xchg
mov
stos
fcomip
iret
cmc
insl
lret
pop
scas
out
in
lods
lcall
or
mov
jecxz
test
repz
stos
mov
cmpsb
popa
adc
push
adc
add
dec
mov
fs
pop
and
add
add
cs
mov
mov
incb
adc
cmp
mov
test
int3
sbb
shl
fs
inc
and
lods
xor
leave
pop
pop
inc
adc
bnd
xor
icebp
sti
fstps
fwait
stc
nop
out
cmp
add
xchg
mov
jae
aam
test
dec
jmp
or
pop
in
lds
and
or
inc
lcall
sarl
or
mov
xchg
scas
cmp
xor
jp
fst
pop
icebp
mov
std
jecxz
out
int
push
pop
jge
xor
in
xor
out
sbb
test
aad
call
ja
pop
andnps
test
pop
dec
pop
loopne
adc
lds
xor
jmp
aas
ljmp
stos
and
add
out
inc
cmp
lock
scas
pop
pusha
inc
jl
mov
icebp
pop
xchg
cmc
add
cld
lock
lahf
das
aad
xlat
or
cmp
jecxz
jne
orl
cmpsb
adc
pusha
pop
out
ljmp
icebp
inc
sbb
stc
lods
into
xor
int
loopne
es
or
cmp
or
fdivrs
outsl
cmc
adc
sub
arpl
test
or
cmp
aas
test
jno
jle
int
mov
or
adc
fnstsw
or
adc
enter
loope
push
cmc
jmp
adc
pop
adc
push
cmp
mov
bound
ret
or
mov
call
dec
inc
icebp
push
jne
shll
sbb
mov
lds
mov
xchg
daa
mov
loope
pushf
pop
inc
mov
data16
lods
xchg
insb
inc
mov
test
xor
push
call
sbb
mov
xchg
int
xor
arpl
push
jmp
sub
int
pop
fwait
inc
lret
ja
adc
aad
xchg
lahf
scas
or
lahf
add
imul
pop
and
outsb
xor
lret
cmp
int
jnp
xchg
hlt
popf
test
shlb
xchg
dec
es
adc
div
jo
jne
mov
stos
cmpsl
pop
inc
mov
jno
jg
rorl
jno
xor
ret
push
cmpsb
pop
pop
call
jno
test
xchg
mov
bndldx
dec
inc
arpl
arpl
mov
cmpsl
ds
lret
add
movsb
xchg
or
or
dec
pop
push
sbb
xchg
cmpsb
jne
dec
xchg
sub
mov
add
stos
sbb
mov
push
cs
adc
lcall
sub
xchg
cmp
xor
sub
jno
push
insb
scas
mov
and
mov
mov
idivl
add
loop
lret
divl
repnz
ret
jo
aas
rorl
sub
int
or
ret
xor
mov
jb
hlt
pop
xchg
inc
cmpsb
push
outsl
lock
mov
add
andl
sbbb
push
add
bnd
sbb
cmpsb
mov
mov
sti
sub
mov
and
jbe
xchg
sahf
cmp
xchg
rcr
cmpl
jg
das
inc
and
popf
popf
inc
int
fisubl
sub
push
jp
xchg
test
xchg
jmp
fstl
jne
inc
sbb
pop
fcom
push
rorb
jo
dec
xor
bound
xchg
pop
out
lahf
clc
cmp
xchg
fxch
bnd
pop
fwait
jle
sbb
push
and
les
xchg
xchg
mov
sbb
jae
mov
rol
cltd
xchg
call
inc
aaa
jecxz
dec
pop
or
scas
xchg
cwtl
in
xchg
add
mov
pop
stos
mov
jne
xchg
test
inc
jnp
xor
jg
pop
ljmp
popa
gs
sub
jge
insl
dec
int
loope
inc
cltd
mov
dec
inc
and
fsubrp
and
mov
std
dec
pop
xchg
insb
rcll
inc
dec
push
aas
sub
lcall
movsb
cmp
pusha
and
push
jle
out
dec
pop
push
mov
or
dec
or
push
inc
mov
inc
imul
pop
hlt
call
sbb
sub
mov
dec
dec
add
fnstenv
ja
mov
jnp
in
and
push
mov
cmc
std
in
xor
adc
pop
sub
pop
fnstsw
or
mov
lods
xor
pusha
mov
xlat
push
aad
data16
test
sbb
andl
inc
aas
xlat
mov
dec
add
shlb
mov
inc
sub
adc
idivl
adc
dec
or
aad
adc
popf
sbb
sub
add
mov
popa
andl
not
push
aam
into
pop
or
mov
add
and
or
sbb
lcall
ja
lcall
push
adc
ss
inc
insb
push
or
add
je
imull
outsl
xor
push
stos
push
loop
outsb
test
rcr
sbb
mov
les
mov
shll
fidivl
das
xor
icebp
jns
dec
bound
push
loop
push
mov
jge
inc
fbstp
cmp
icebp
sbb
outsb
loopne
xor
jge
lret
ljmp
xchg
jne
clc
jp
jmp
sbb
and
test
adc
arpl
mov
adc
iret
enter
dec
or
fsubl
add
pop
ret
mov
and
push
mov
dec
call
push
mov
inc
inc
stos
xchg
mov
adc
mov
outsl
mov
fcomip
test
lds
out
mov
outsl
cli
fwait
cmpsl
ljmp
add
push
pop
lods
sub
pop
push
jg
xlat
adc
jl
or
test
sarb
ljmp
mov
cmc
and
dec
inc
hlt
out
inc
pop
jbe
rclb
rcrb
push
push
cmp
or
fs
pop
xor
mov
mov
in
stos
mov
fldlg2
inc
imul
mov
and
ffreep
jo
adc
adc
sub
enter
icebp
jl
push
inc
or
sbb
out
or
sub
mov
cmp
jmp
hlt
xchg
pusha
out
pop
outsl
pusha
js
and
enter
cmp
lock
dec
fadds
sub
cmp
mov
loopne
xchg
sbb
std
adc
scas
int3
jmp
mov
mov
cmp
test
stos
or
out
mov
pop
lds
mov
pop
pop
jmp
push
ret
push
xor
clc
xchg
scas
es
sbb
xor
inc
fs
push
jbe
inc
test
sbb
aad
mov
inc
or
scas
or
sbb
fildll
mov
test
aad
inc
xor
fs
or
sub
mov
hlt
sbb
sub
mov
adc
xor
jo
cmp
push
lahf
out
ljmp
cmpsb
and
pop
pop
dec
cmp
fwait
in
sahf
pop
in
cmp
xor
cltd
cmp
or
mov
xchg
or
in
icebp
push
mov
and
mov
ficompl
mov
jp
hlt
rorb
xor
fcomps
fildll
cli
mov
lahf
ds
addr16
daa
and
push
pop
pop
enter
fldl
in
mov
jg
lods
cmp
cmp
sub
pop
dec
aam
bound
xchg
aas
nop
adc
add
mov
mov
aam
mov
jle
enter
jmp
les
jle
out
add
inc
lds
out
mov
or
push
mov
inc
lds
jo
ljmp
pop
dec
cmp
popa
sub
xor
mov
shrl
push
and
mov
mov
jmp
inc
aas
int
push
sti
inc
push
add
fwait
push
mov
nop
lock
push
sbb
lret
mov
outsl
popa
dec
dec
in
ret
jo
loopne
add
shl
cmpl
out
jg
xchg
pushf
stos
cmp
movsb
aaa
push
cmp
shl
xlat
call
adc
addr16
outsl
xorb
dec
ja
testl
add
das
mov
fisubs
sub
pop
cmpl
stc
gs
pop
aad
xchg
jo
divb
adc
enter
gs
sbb
std
aad
mov
lahf
in
inc
out
test
nop
std
scas
push
jecxz
pop
fldl
rcrb
and
sub
mov
out
jl
push
push
das
inc
addr16
mov
mov
aad
xchg
aad
lcall
dec
add
dec
sbb
push
or
jl
mov
push
mov
nop
xor
inc
aaa
xchg
lock
pop
icebp
lahf
out
or
add
xchg
cs
aaa
cmp
ret
sar
popf
mov
lahf
les
mov
dec
movsb
mov
add
aam
lret
stos
xchg
mov
mov
adc
mov
cmp
push
inc
jno
icebp
lds
loop
and
inc
rcrl
mov
mov
ss
call
sub
xlat
jo
aad
cmp
stos
jmp
lcall
xchg
jb
cltd
jmp
aam
fnsave
jmp
andb
ret
mov
clc
sahf
mov
out
inc
std
scas
cltd
or
and
cltd
mov
fs
shlb
mov
pop
cmp
xor
xchg
aas
shll
ja
cmp
jbe
pop
sbb
das
push
xor
shrl
sub
mov
lret
fsubs
xchg
or
popa
cmp
pusha
sti
mov
xchg
push
fcoms
mov
test
push
dec
pop
aam
xchg
repz
push
out
add
test
out
mov
sub
fisttps
lds
sahf
sub
mov
das
sahf
fnstcw
push
add
repz
fiaddl
fcomp
push
or
pop
shll
test
popa
fcmovu
nop
cwtl
dec
jnp
jbe
cmp
xchg
icebp
js
js
xor
xchg
or
sahf
ljmp
int
cwtl
xor
ficoms
ljmp
in
scas
cmp
jbe
jle
add
mov
pop
and
jae
call
inc
push
mov
push
inc
push
je
ljmp
ljmp
mov
sbb
icebp
enter
mov
ja
dec
cltd
inc
addl
jl
call
fcompl
pop
movsb
mov
push
fimull
push
jb
out
sub
xor
mov
xor
adc
lcall
ret
add
jl
dec
int3
or
push
xchg
movsl
mov
dec
loopne
sub
jno
adc
mov
shlb
jle
mov
mov
outsl
cltd
xor
jmp
push
in
hlt
add
fidivl
mov
iret
scas
in
daa
pop
sbb
ljmp
into
cwtl
add
cmp
mov
out
lock
xchg
mov
les
or
dec
int3
and
and
mov
mov
daa
imul
int
das
add
imul
icebp
push
sub
adc
lods
stc
ljmp
jmp
xchg
xor
sub
dec
lret
popf
test
shrb
pop
fsub
cmovb
cld
icebp
sbb
outsb
aas
dec
data16
adc
lock
lock
add
inc
sbb
jl
jle
jecxz
add
aad
shrb
mov
aas
outsl
nop
jb
xchg
inc
and
dec
pop
sub
push
aas
xor
lcall
xor
out
dec
popf
push
jnp
ret
lret
cmp
sub
mov
sub
sub
pop
and
out
mov
sub
notb
dec
cli
push
mov
adc
inc
in
pushf
sbb
xchg
and
loope
fs
pusha
xor
ret
push
cmp
cmpsb
jae
mov
xchg
jb
mov
push
mov
mov
outsb
push
and
and
inc
jg
xor
lret
dec
adc
jg
mov
mov
and
sub
out
incl
mov
mov
aaa
mov
les
mov
jge
popa
ficompl
push
push
lahf
xchg
jge
inc
rorl
fimuls
in
add
adc
je
fldcw
loopne
sbb
out
lea
sub
mov
stc
shll
lcall
cmc
fldt
addl
sbb
mov
jns
imul
int3
mov
xchg
out
lock
scas
mov
dec
out
movsb
add
jne
push
and
ljmp
test
out
xchg
ss
test
xor
cmpsl
pop
xchg
jecxz
shlb
scas
cli
fiadds
jae
push
rol
sar
inc
pop
push
mov
faddp
sbb
addr16
fs
adc
dec
sbb
ret
in
insl
adc
outsb
or
push
shl
push
mov
loop
fistpl
jae
aaa
jp
lock
xchg
cltd
pop
mov
ja
imul
gs
and
or
xchg
loope
movsl
rclb
xor
jp
icebp
or
cmc
fimuls
mov
popf
les
out
mov
std
jle
ficompl
nop
xchg
into
push
out
jmp
call
std
cs
lds
daa
and
ljmp
jmp
xlat
sub
ljmp
in
sbb
out
sbb
and
movsb
cmpsl
pop
std
mov
insb
std
fisttps
shrb
mov
mov
cmp
and
test
js
inc
ret
scas
inc
mov
or
mov
jl
or
dec
js
ret
and
add
iret
icebp
out
lods
imul
push
fmuls
popf
in
mov
adc
mov
enter
sub
jp
or
inc
lahf
push
adc
and
fwait
stc
jle
fldcw
fldenv
clc
jle
mov
movl
jnp
aam
movups
xchg
setne
mov
iret
leave
sahf
push
add
decb
cld
int
test
stos
fldl
dec
mov
fisubrl
scas
aad
and
decb
pop
std
out
and
push
mov
jnp
dec
mov
ja
push
xor
sbb
lea
xchg
imul
faddl
dec
jne
xchg
push
push
mov
inc
mov
or
push
scas
jno
xor
scas
lahf
jns
pop
mov
sub
hlt
push
ja
das
add
scas
fdivr
stos
jae
aaa
mov
sbb
stc
sub
jecxz
adc
sbb
dec
xor
jae
shrl
mov
push
dec
test
jge
sbb
adc
clc
fcoml
adc
sbb
fbstp
stos
push
mov
imul
repz
lret
lret
pop
cmpsb
or
lock
jbe
in
push
movsb
xlat
repz
aam
xor
mov
ja
fcmovne
mov
jns
fsubr
fisubs
inc
add
insb
push
enter
sbb
ja
jge
push
push
ret
in
or
inc
ret
fcoml
das
jns
mov
inc
iret
shrb
and
xor
ret
ljmp
mov
mov
push
mov
icebp
lahf
outsb
dec
dec
imul
sbb
add
push
loope
fwait
iret
and
ret
jnp
sub
hlt
fs
mov
lret
out
inc
mov
mov
std
pop
rcrb
movaps
sbb
stos
stos
sbb
subl
xor
dec
clc
mov
in
cwtl
mov
lea
cli
cld
xchg
jl
ss
sub
aaa
pusha
mov
mov
cmp
mov
das
sti
cmc
push
mov
and
push
jae
jp
or
or
sahf
int
jns
xchg
push
popl
sahf
mov
fst
in
es
pop
mov
pop
imul
les
daa
repnz
fmuls
notl
fcoml
sbb
push
scas
cmp
das
daa
jecxz
mov
imul
xchg
push
pop
pushf
rcr
push
into
das
xor
jbe
pop
jp
pop
add
iret
or
repz
pushf
jno
stos
sti
nop
mov
jg
pusha
xchg
nop
das
lods
pop
andb
xchg
aad
inc
divl
cmpsl
pop
adc
mov
sub
inc
mov
repnz
mov
push
dec
cmp
loopne
test
cwtl
rorl
cmpsb
lahf
in
fstps
fmull
stos
arpl
dec
pop
lea
cmpb
push
movsl
fcoms
sbb
iret
and
mov
push
repz
cmp
addr16
mov
fwait
jb
push
mov
lods
and
and
push
addb
adc
sbb
call
test
adc
ja
out
cli
insb
xchg
insb
cmp
lahf
lea
pop
sbb
scas
mov
sub
aas
outsb
arpl
ret
mov
jge
push
out
mov
push
sub
lahf
mov
cli
call
push
jbe
out
mov
inc
lea
js
mov
and
sbb
mov
xor
fldt
test
gs
or
iret
pusha
insb
jb
mov
test
cmp
xchg
xchg
outsl
fmuls
cltd
and
adc
ds
inc
adc
push
out
iret
out
fidivl
int
fwait
mov
inc
xchg
push
xor
das
outsl
cmp
data16
xchg
dec
pusha
xchg
cwtl
lcall
xchg
popa
push
mov
jns
out
jecxz
xchg
sbb
cmpsl
fldlg2
push
int3
add
inc
jle
imul
mov
test
xchg
adc
mov
popa
adc
fnstsw
mov
jmp
stc
inc
pop
pop
testb
sahf
pop
mov
in
jb
xchg
daa
mov
inc
inc
mov
or
int3
insb
int3
dec
xchg
fsubs
jge
imul
xchg
arpl
sbb
aas
xor
pop
dec
mov
xorl
repnz
andl
cld
popf
cmp
adc
dec
out
mov
dec
outsb
pop
bound
inc
or
aas
jne
push
out
adc
sbb
cld
shlb
in
shl
add
or
fdivrl
shll
jns
pop
xchg
js
test
jns
xor
cmpsl
add
js
ret
push
mov
mov
movsl
clc
imul
lea
mov
jl
cli
xor
daa
xchg
pop
iret
out
mov
push
repz
push
loopne
mov
hlt
xor
mov
mov
cmpsb
test
or
add
or
push
push
insb
jecxz
popf
jns
mov
cmp
sbb
nop
or
fucomp
and
lret
xor
fidivl
mov
mov
les
int3
push
fisttpll
fstpl
push
ds
incl
mov
and
xchg
inc
insb
pop
repz
pop
mov
mov
pushf
pop
repz
add
pop
icebp
ret
gs
stos
jle
xor
jle
loope
sbb
pop
fmull
jno
les
push
rorl
adc
int
ficoms
outsl
int
loope
test
stos
xor
gs
pop
push
or
inc
jo
rep
lret
movsb
inc
adc
shll
ljmp
mov
pop
push
in
xchg
fnstenv
mull
repz
pusha
cltd
imul
mov
or
push
cli
mov
fcomi
or
lcall
lret
notl
sbb
jae
push
and
arpl
ds
lret
dec
adc
stc
mov
mov
pop
push
fdivs
dec
addr16
insl
mov
mov
or
sbb
lods
cwtl
mov
pushf
daa
mov
fldpi
push
icebp
iret
aam
adc
in
dec
rcll
mov
cmp
xchg
jmp
lret
xchg
mov
pop
ficoms
lret
ret
pop
ds
shl
loopne
xor
sbb
hlt
inc
push
lods
gs
adc
sub
fildl
lea
mov
fists
fldt
leave
mov
pop
gs
stos
jb
push
mov
mov
jge
std
mov
dec
sbb
scas
pop
mov
or
test
adc
jnp
leave
sbb
jne
popa
lock
fstpl
mov
popf
dec
fisttps
lds
jnp
les
jmp
jl
dec
sub
aam
sbb
cmp
movsb
repnz
cmp
nop
xor
pusha
fistps
jmp
inc
cmp
and
mov
add
cltd
sahf
xchg
push
cwtl
mov
pop
in
sti
jmp
add
out
and
icebp
inc
in
ret
in
cli
jbe
icebp
jae
add
movsl
xor
fwait
add
fdivrl
in
test
movsb
cmp
pop
les
or
jl
xchg
out
insl
adc
lea
mov
rcl
sbb
push
lods
test
mov
fisttpll
push
punpckhbw
ljmp
sti
mov
inc
clc
mov
mov
out
jmp
pop
xor
and
out
mov
outsb
adc
test
or
or
ror
adc
sarl
jmp
sbb
movsl
repz
pop
out
inc
add
jb
mov
adcb
ret
ret
fbld
dec
xchg
and
sbb
jo
push
aas
lock
mov
in
mov
pop
dec
lret
imul
popf
sub
xor
loop
fsubr
mov
xor
inc
mov
xbegin
mov
sarl
adc
push
fwait
outsl
push
scas
dec
out
inc
pusha
mov
push
xor
mov
mov
adc
mov
out
cmp
sbb
sub
xor
jbe
sbb
les
outsb
lcall
gs
cs
jae
mov
xlat
fdivl
aas
pmaxub
push
xchg
mov
nop
pop
push
loop
aas
fwait
test
cmp
add
xchg
or
mov
push
mov
jns
aas
into
mov
sbb
cmpb
dec
int
mov
and
les
push
scas
and
in
es
mov
sahf
fisttps
xlat
xor
jmp
or
out
scas
orb
outsb
dec
cmp
gs
cli
loopne
loopne
and
outsb
cmpsl
jg
xchg
outsl
push
jmp
loopne
pop
pop
outsb
movsb
or
pop
into
shlb
fisubrl
pop
sahf
push
ljmp
movsl
cmpsb
fs
mov
xor
sti
lret
sub
pop
xchg
js
cld
aam
inc
pop
sub
push
cmp
aas
or
fdiv
scas
test
inc
jne
fadds
adcl
add
xchg
pop
bound
xor
insl
or
gs
je
rcrl
in
cmpsb
push
mov
dec
xchg
sub
lods
xorl
lret
push
ljmp
repnz
pop
into
andl
sub
push
add
aad
adc
adc
insb
movsl
ss
stos
ficoms
popf
std
movsb
ds
dec
in
cmpsl
jns
dec
adc
rcr
mov
pop
jnp
mov
jg
lds
scas
push
cltd
pop
adcb
sbb
cwtl
fyl2xp1
mov
in
stos
clc
imul
mov
jmp
xor
dec
jbe
cmp
xor
repz
in
ljmp
sub
mov
mov
and
popf
dec
xor
lock
mov
hlt
xor
dec
daa
addl
push
bound
inc
inc
push
pop
jmp
add
mov
shll
shl
adc
cmp
or
or
outsb
sti
and
sub
loope
dec
bound
test
adc
mov
rcl
jle
scas
inc
ja
dec
int3
imul
bnd
cmc
insl
ret
out
popl
popf
jmp
cmp
in
jecxz
pop
mov
mov
cmp
ret
pusha
lea
test
test
pop
jp
inc
mov
jmp
xchg
xchg
xor
loop
xchg
dec
cmp
mov
aam
out
jno
negb
push
lock
xlat
outsl
imul
cli
sarl
xor
sub
pop
femms
lcall
push
imul
and
cmpsl
adc
inc
sub
stc
xor
fstpt
and
popa
nop
popf
scas
out
addr16
out
loope
pop
sarb
sbbl
jnp
add
fldl
dec
mov
jnp
stos
fstp
bound
cld
mov
jge
es
lods
lahf
jne
adcb
ja
push
flds
fisubs
cli
push
sbbb
test
scas
out
jne
push
mov
arpl
std
dec
sbb
hlt
cwtl
jb
sub
push
sarl
mov
ror
mov
aam
and
pusha
imulb
fildl
jae
gs
mov
sub
out
mov
push
fs
mov
add
inc
jae
rcrb
xchg
inc
popa
aas
lret
xor
or
dec
add
push
rcrb
std
xchg
jb
int3
inc
adc
sub
cltd
gs
mov
bound
xor
in
ljmp
push
or
jo
inc
pop
push
push
cmpb
push
pop
jl
fwait
sub
jae
divb
xor
cltd
bound
mov
stc
add
data16
test
mov
or
jo
leave
add
or
jno,pt
orl
jbe
or
cs
push
dec
mov
ret
jg
outsl
in
jne
cmpsb
xchg
or
xchg
js
mov
xor
fildll
in
jmp
or
xor
outsb
mov
hlt
lret
jno
fisttps
aaa
popf
icebp
push
jg
ja
jae
in
sbb
inc
cmp
hlt
sbb
cmp
push
pop
test
fsubl
or
test
cli
fs
mov
stos
cmp
pop
dec
cmpsl
imul
cmpsl
lahf
add
adcl
cltd
pop
jnp
movl
cld
loopne
fisttpll
sti
imul
pop
cmp
adc
loope
push
mov
lea
stc
ss
push
loopne
lcall
movl
pop
movsb
pop
and
and
clc
pop
outsl
inc
pop
xchg
ds
lods
pop
rolb
sub
xchg
add
out
in
imul
inc
ljmp
push
jne
faddl
mov
sbb
and
rcll
cmc
push
faddp
xchg
cs
or
dec
mov
inc
push
or
adc
inc
loop
push
cli
in
mov
push
ret
and
cmp
insb
pop
cmp
in
fdivrl
addr16
shrl
jb
push
fsubr
je
mov
aad
loope
xor
imul
mov
imul
and
dec
xchg
test
fcmovb
xor
pand
nop
mov
shlb
gs
cmp
mov
xchg
in
xchg
ret
xchg
and
divl
xor
out
loope
icebp
xchg
adc
inc
inc
pop
addr16
dec
in
bound
repz
das
aam
mov
jns
push
fwait
pop
mov
mov
test
push
jnp
adc
xor
inc
cmpsl
push
xor
sbb
loopne
in
shl
sub
cwtl
ja
test
clc
and
std
xor
ror
inc
sbb
rorb
pop
andl
in
push
sub
aaa
and
jecxz
adc
fcoms
pop
rcll
fidivs
test
lods
jns
jle
test
xchg
inc
call
insb
push
out
add
xor
jne
enter
fwait
cs
popa
faddp
xchg
pop
mov
add
icebp
jnp
in
sti
dec
pop
cmpsb
cmp
jo
test
in
fldcw
scas
lea
push
das
cmpl
add
ss
std
mov
jge
jmp
ds
mov
repz
mov
push
cmp
js
inc
and
jle
mov
push
xor
sbb
and
or
and
mov
das
mov
fisttpll
add
cmc
fst
rcll
push
cmp
push
push
fmuls
ret
mov
in
lods
jno
popa
push
arpl
xchg
mov
popa
rol
aaa
out
outsb
imul
cmp
ret
dec
push
jbe
inc
les
nop
stc
out
adc
into
and
ljmp
jg
lahf
push
sahf
gs
rcl
mov
lret
mov
sub
ja
fwait
in
sti
mov
jmp
mov
pop
xchg
add
push
loopne
clc
test
sti
mov
ss
sbb
js
mov
rcll
add
outsb
mov
clc
xchg
or
or
popa
insl
jnp
sub
lret
cwtl
push
jne
rorl
and
push
push
inc
das
shl
mov
mov
imul
shl
push
js
sub
aas
popa
pop
lock
push
sub
enter
cmc
sbb
not
push
xor
fisubs
movsl
mov
cmp
or
aas
ja
test
jo
mov
cmp
shlb
pop
add
ljmp
pop
mov
notb
in
jb
or
push
adc
shl
xor
ficomps
mov
call
inc
out
add
cmp
int3
jno
or
pop
loop
xchg
dec
mov
jbe
push
xchg
add
or
or
aam
fdivr
cmp
cmp
push
stos
cwtl
rcll
or
add
push
xchg
xor
lret
adc
movsl
dec
push
popa
mov
jno
xchg
lret
les
retw
xor
cld
cmp
add
arpl
popf
out
lds
cs
inc
push
xlat
mov
xchg
inc
das
ret
cmp
mov
fisttpl
pop
push
push
inc
imul
jg
add
int
in
or
add
ljmp
push
xchg
int3
lock
mov
repnz
add
and
shrl
sub
inc
jbe
out
pusha
mov
dec
jge
mov
rorb
js
lret
jb
sbb
mov
jnp
insb
xchg
mov
mov
ret
subb
je
int3
movups
pop
jle
andb
jmp
push
pushf
inc
loop
mov
test
mov
jbe
imul
dec
call
mov
jnp
scas
hlt
fwait
test
mov
jbe
cmc
enter
inc
or
dec
lods
out
inc
pop
stos
fsubrs
imul
into
lret
jns
insl
jae
xlat
jne
jo
fldl
out
imul
test
cli
mov
dec
hlt
cwtl
xor
fwait
mov
call
lcall
or
iret
mov
lds
jno
or
fistps
mov
jmp
fistpll
cli
mov
gs
adc
jp
mov
cli
pusha
insb
addl
jae
cmp
push
addr16
pop
mov
fadds
jge
push
ret
stc
jge
dec
mov
repz
cmp
jnp
std
mov
sbb
ds
jge
jns
ficomps
pop
imul
ss
std
pop
test
push
push
and
mov
mov
shrl
loope
mov
ds
les
push
and
xor
xlat
pushf
add
and
xor
dec
xchg
fldcw
call
loope
fcoms
test
mov
lea
lods
lock
std
xchg
frstor
sbb
dec
out
xor
scas
test
dec
movsb
mov
outsl
nop
cltd
sti
std
mov
movsb
cmp
xor
cmp
movsl
sbb
ds
inc
outsb
in
lahf
imul
das
adc
inc
cwtl
pushf
rcrb
sub
mov
inc
test
or
mov
loopne
xchg
stc
mov
add
subb
std
insb
and
je
add
movsb
xor
xchg
mov
sbb
mov
addl
xchg
or
js
cmp
adc
testb
andb
lcall
mov
test
xchg
shrb
insl
sub
dec
mov
push
sub
xchg
sbb
mov
jo
push
mov
push
push
inc
lds
pop
subl
xor
ljmp
loope
aam
hlt
push
loope
dec
mov
mov
jae
xor
ds
and
mov
stos
sub
or
mov
repz
bound
push
lret
jg
sbb
pop
mov
test
bsr
xchg
test
or
aaa
les
dec
rcrb
mov
js
cwtl
leave
cmc
movb
js
in
lods
test
pop
ret
hlt
int3
test
inc
in
call
pop
ficompl
lods
mov
es
xor
leave
test
cmc
imul
push
ja,pn
dec
lea
xchg
pushf
inc
out
xchg
mov
ret
ret
mov
mov
loop
mov
cmp
or
movsl
sbb
mov
int3
cli
das
mov
ret
jb
and
fwait
add
cli
dec
movsl
cwtl
xbegin
adc
lock
and
inc
sbb
fcom
lods
jmp
fadds
mov
js
inc
or
pop
mov
pop
stos
inc
test
sarl
jmp
test
add
cmp
outsl
mov
addr16
mov
inc
mov
jb
cltd
cmp
cmp
into
dec
mov
aam
push
pop
icebp
sbb
pop
xchg
orl
pusha
psubq
clc
dec
sub
mov
pop
ret
dec
jne
bound
xor
dec
mov
xchg
xor
add
les
popf
rcrl
mov
lds
loope
add
out
sahf
pop
jne
fdivrs
mov
xchg
xor
sar
daa
xor
in
mov
jnp
fldt
push
fucomi
sbb
and
repnz
adc
imul
mov
addl
jecxz
fwait
outsl
bound
and
xor
push
pop
popf
push
jne
test
adc
pusha
rcl
out
lea
icebp
pop
or
xchg
aad
or
inc
jns
or
dec
sub
movsb
lds
cmp
xchg
iret
test
ds
outsl
test
mov
rorb
shll
dec
cmpsb
sbb
fcompl
dec
push
lret
lock
push
or
add
jo
bnd
je
mov
inc
inc
push
jmp
xchg
dec
das
adcb
mov
fldcw
inc
jp
sub
scas
add
dec
mov
rolb
cmp
fisubrs
stc
mov
lret
adc
inc
sahf
mov
rcll
pop
out
mov
fadd
lods
sahf
ficoms
mov
cmp
cs
cmpsb
test
jne
mov
add
jbe
cmp
pop
hlt
imul
xchg
je
mov
add
push
xor
or
adc
imul
mov
repz
xchg
dec
mov
mov
lahf
mov
adc
sbb
push
push
in
sub
loope
jp
inc
cmp
cmp
xor
dec
aas
outsl
inc
mov
mov
icebp
cld
test
push
aad
sub
mov
and
stos
imul
sti
enter
lret
mov
icebp
ljmp
jno
insb
ret
out
add
mov
jmp
pushf
jge
mov
cwtl
adc
call
mov
cmp
hlt
lret
pop
dec
shlb
push
and
or
jecxz
rorl
movsb
std
lock
pop
or
in
dec
vbroadcastsd
sbb
test
test
lret
jl
inc
sub
aam
ficompl
cmpsb
push
gs
mov
mov
push
mov
mov
push
ret
and
mov
sbb
mov
enter
lahf
mov
out
aas
and
mov
shrb
and
mov
sub
imul
aad
popf
clc
add
xchg
jmp
sbb
testl
sti
xchg
mov
mov
cld
fsubr
popl
adc
outsl
mov
mov
loop
cwtl
dec
inc
cld
adc
mov
xor
loope
ds
into
sub
in
aad
push
sub
mov
imul
shll
add
jle
das
add
mov
sarl
pop
hlt
ret
xchg
push
divb
cmp
mov
jae
dec
mov
push
mov
or
das
into
xchg
rclb
cli
fmulp
pop
lods
outsl
push
sub
divb
test
push
jecxz
lock
aas
pushf
sbb
dec
mov
fdivr
sbb
dec
inc
add
cli
das
mov
ret
adcl
add
mov
push
xchg
int3
mov
stos
std
shlb
pushf
push
add
jne
xchg
xor
or
leave
mul
xor
cs
popf
pop
rorb
or
mov
hlt
mov
inc
inc
ds
mov
rcl
pop
shll
daa
mov
inc
xor
fnstcw
mov
dec
jno
pop
lret
je
outsb
jae
pushf
adc
add
jae
push
movsb
xchg
popa
in
push
jae
add
sbb
dec
rcrb
mov
ds
loope
lcall
mov
in
jmp
pop
popf
push
loop
xlat
clc
notl
add
enter
inc
push
stos
pop
jae
fiaddl
cmp
insl
lea
lock
xchg
fcompl
addb
mull
cmpsl
je
lods
mov
or
fs
repnz
mov
fyl2x
jp
rcrb
mov
mov
jg
and
enter
push
repnz
lea
and
mov
loopne
shl
mov
in
stc
ss
xor
or
fwait
xchg
insb
fwait
pop
push
mov
in
sub
repnz
fstl
std
cld
mov
sub
push
out
mov
sarb
es
xor
insb
adc
pop
call
rorb
test
adc
ret
ret
pop
pop
cmp
outsl
js
pop
je
push
les
fiadds
cltd
push
mov
xchg
mov
jnp
addr16
les
xchg
movd
shr
xchg
mov
jg
lret
sti
dec
pop
xchg
icebp
gs
mov
mov
sub
int3
nop
adc
popf
insb
movsl
sbb
ljmp
mov
stc
ret
pusha
push
aaa
hlt
scas
adc
aam
cltd
jecxz
je
dec
cmpsl
rclb
mov
aad
or
cmp
pusha
scas
out
insb
sub
in
mov
outsl
mov
lcall
inc
dec
push
andb
lret
inc
stc
sub
popa
jno
xchg
jle
ljmp
or
xor
cwtl
add
xlat
cltd
push
push
cs
fsqrt
repz
jecxz
fcoms
xchg
pushf
pop
mov
insl
les
jecxz
sbb
pusha
in
scas
lock
cmp
adc
je
test
xchg
cld
aam
xchg
mov
fdivrp
int
mov
rcl
test
mov
cmp
stc
cmp
mov
js
fidivl
cwtl
cwtl
aad
ljmp
adc
mov
mov
push
in
and
icebp
mov
cli
les
or
incl
mov
ja
mov
adc
imul
sub
mov
dec
pop
push
idiv
and
inc
pop
dec
psrld
jmp
jl
iret
jbe
imull
sub
js
decb
cmp
adc
lret
aaa
mov
dec
stc
xor
sub
out
cmp
cwtl
jge
shrl
aas
popf
add
mov
ficomps
imul
gs
test
xor
in
negb
fst
ret
mov
xor
fnsave
jle
add
mov
inc
ds
jecxz
out
pop
inc
test
pop
and
mov
jnp
jg
imul
cmp
shrl
dec
pop
cmp
dec
pop
mov
scas
dec
xor
pminsw
adc
sbb
lea
jb
lcall
rcr
fucomip
mov
nop
push
ljmp
lcall
lock
pop
rcr
cmp
movsb
xchg
cli
mov
fistl
mov
fwait
mov
js
or
cmp
mov
fidivrs
mov
je
pop
int3
or
imul
aad
xrelease
test
push
cltd
ds
test
hlt
xor
dec
add
adc
sub
nop
or
dec
mov
and
lods
pop
mov
cmpsl
imul
xchg
inc
xor
push
les
imul
bound
mov
orb
fs
push
xor
int
adc
sbb
test
xlat
push
fs
jne
inc
adc
inc
xlat
test
js
rol
sbb
mov
notl
push
mov
dec
mov
test
cmp
adc
jle
pop
sub
add
test
xor
push
push
sub
rorl
xchg
pushf
or
xchg
push
mov
sbb
mov
sub
daa
lock
clc
and
xchg
sub
dec
dec
jo
cmp
stc
mov
mov
pop
push
enter
rcrb
daa
iret
and
xor
in
xor
fs
dec
minps
lods
cmp
ss
daa
pop
dec
into
shr
inc
fldl
rcrl
in
dec
sbb
aam
jmp
or
inc
mov
cmp
xchg
dec
rclb
scas
add
cmp
sub
dec
add
int
and
xchg
cmpsb
in
jno
sub
movsb
cmp
xchg
inc
mov
jge
andl
mov
push
sub
adc
aam
lahf
fisubrs
insl
cmp
mov
mov
pop
xchg
mov
add
into
pushf
xor
testl
insb
sub
stos
jge
jle
stos
les
sbb
jno
subb
ret
sub
movsb
adc
outsl
lock
nop
xor
adc
int3
pop
lret
adc
mov
or
jl
dec
leave
jmp
xlat
and
aad
sarb
xchg
jno
mov
inc
lea
cmpsb
xchg
xchg
mov
arpl
or
js
loopne
movsl
test
mov
fwait
sbb
popa
stos
ja
xor
add
nop
pusha
enter
jge
ja
pop
sub
test
aaa
fbld
jl
int3
pop
ss
xorb
cli
mov
dec
jp
sub
lods
dec
shlb
and
aad
shl
repz
and
or
xchg
jecxz
xor
mov
test
rcll
and
imul
jge
adc
inc
inc
add
pop
repz
addr16
je
mov
pop
sbb
xchg
sbb
cld
jmp
jae
or
mov
scas
je
ret
pop
insl
fimuls
and
call
and
dec
notl
int
push
mov
add
and
adc
notb
std
stos
jmp
lock
add
cmpb
call
rcrl
movb
jo
inc
pop
push
fdivl
xchg
loop
cmp
mov
mov
lret
or
sti
xchg
mov
ja
dec
icebp
mov
imul
cmp
popf
cmpsb
add
mov
mov
int
or
fnsave
push
shrb
sbb
lret
or
lcall
jnp
mov
hlt
jg
orb
xchg
cltd
popa
fbld
out
lock
lret
fistpll
cmpsl
inc
push
sub
sbb
cmp
pop
adc
sbb
cmp
mov
inc
rcll
or
call
cmpb
out
xchg
xlat
mov
movsl
fildll
lods
mov
clc
sbb
in
sub
lock
fistpll
faddp
out
fcmovnbe
int3
imul
pop
in
mov
mov
xchg
test
sti
ss
lock
stc
idivb
xchg
in
push
inc
insb
hlt
sbb
add
rorl
mov
xlat
repnz
test
rcrl
sbb
jmp
inc
mov
inc
pop
fsts
cmp
cld
out
ja
clc
jg
mov
mov
cli
lret
mov
add
cmp
sbb
inc
fdivs
out
sbb
xor
sahf
push
jbe
into
stos
adc
jb
sbb
push
fstl
das
call
outsl
mov
inc
movsb
jle
movsl
ja
sahf
sub
jmp
imul
mov
sbb
loop
fistpl
outsl
push
jns
mov
adc
dec
and
cmp
fsubs
stc
and
push
aaa
out
pusha
cmp
add
movsl
lret
dec
out
jne
push
int
cltd
jb
movsl
out
sti
adc
into
pop
mov
pop
cmp
xor
rcr
test
cmp
mov
sarl
jmp
fstl
or
mov
imul
movsl
les
mov
cs
out
ljmp
imulb
cli
pop
es
outsl
mov
pop
adc
cli
sti
rclb
jb
mov
shl
mov
pusha
sub
sar
lods
jb
popa
xchg
mov
aad
fst
push
xor
cltd
aad
andl
dec
push
loope
int
mov
ret
xchg
adc
les
lock
or
insb
xor
or
pop
test
bound
push
jg
xor
jmp
dec
sub
sbb
movsl
lods
test
fstpt
jp
pop
push
sub
fists
xor
lret
xchg
adc
pop
cli
pop
rclb
jns
je
mov
mov
mov
int3
fistl
je
enter
fs
fwait
pop
xchg
and
push
mov
jl
mov
mov
fnstcw
iret
lods
add
mov
arpl
sbb
xchg
jns
jge
and
mov
cmpsl
mov
ss
cmp
push
adc
int3
cld
inc
movsb
in
add
xchg
pop
addr16
rol
add
sbbb
pop
mov
fisubrl
rcr
dec
pop
jbe
dec
mov
jp
lret
rcl
lods
int
stos
inc
cmc
pusha
adc
or
sbb
cmc
repnz
aad
mov
or
mov
mov
ret
push
cli
dec
in
mov
movsl
xor
mov
sahf
mov
inc
xchg
scas
jbe
xor
add
push
lods
inc
mov
pop
add
dec
xor
xchg
mov
fadds
push
push
outsb
or
xor
sub
inc
mov
xchg
mov
arpl
inc
loop
pop
adc
out
cld
rolb
inc
mov
fneni(8087
loope
and
stos
std
dec
fs
mov
insb
aas
push
push
shll
pop
inc
out
test
dec
adc
aad
xor
mov
adcb
jb
movsb
pop
popf
or
xor
les
shr
es
leave
add
mov
sbb
into
cli
pop
or
mov
sub
xor
scas
jecxz
mov
jg
addr16
inc
sbb
ficompl
pop
sbb
pop
rclb
mov
pop
in
sbb
xchg
ds
xor
loop
shrl
mov
inc
push
data16
icebp
xchg
sbb
sub
mov
enter
loop
decb
rcl
and
add
sub
adc
pop
mov
or
push
xorb
push
cmpsl
sub
imul
repz
xchg
mov
test
and
and
out
mov
cmp
jge
dec
sub
cmp
ds
adc
mov
xor
cli
dec
insb
mov
or
out
outsl
repnz
dec
xchg
mov
fwait
inc
xchg
cmp
fs
pop
dec
test
lds
shl
nop
lock
inc
xchg
lcall
out
ret
or
or
sub
leave
cmp
jp
jecxz
or
test
mov
outsl
xchg
shl
sbb
icebp
stos
inc
mov
icebp
mov
stos
jg
add
sbb
shlb
cs
sub
push
xor
dec
inc
insb
or
inc
insl
mov
dec
cmp
fidivs
add
je
stos
pop
int3
cmp
mov
or
mov
nop
cmpsl
lret
jbe
vcvtss2sd
ljmp
adc
rcll
mov
pop
mov
and
sub
cmpsl
cmc
sub
mov
dec
xlat
in
lcall
jns
lds
decb
das
dec
rorl
outsl
je
aam
notl
pop
cli
sbb
ja
push
xchg
or
std
jo
bound
fcoml
into
jp
mov
jo
and
adc
xchg
jo
aam
movsl
and
or
arpl
cmp
jle
jge
push
pop
add
test
inc
call
mov
adc
ret
jmp
repnz
pop
scas
icebp
mov
jnp
mov
repnz
jge
rcrl
loope
cld
stos
sub
mov
or
jns
or
jmp
sub
dec
in
push
inc
mov
sar
arpl
xchg
es
jo
adc
pop
mov
fsubl
xchg
stc
inc
jle
pop
test
iret
cmc
popa
int
lret
cmp
data16
cwtl
mov
cli
adc
addl
je
test
lock
nop
popf
jo
mov
jp
scas
call
push
das
fbld
cmp
ljmp
nop
out
add
sbb
mov
scas
jnp
cmpsb
xchg
mov
fdivs
adc
pusha
test
xor
rcl
or
mov
outsb
pop
dec
cmp
xor
push
mov
mov
cmpl
sarl
arpl
shrl
icebp
test
sbb
mov
mov
cmp
negl
or
pop
push
pop
rcrb
cmpsl
cmp
loopw
xchg
lods
test
inc
push
fildl
pusha
dec
cs
addr16
sub
loop
and
mov
jmp
dec
je
mov
call
xlat
mov
ljmp
dec
fcomip
scas
cmpsb
inc
add
test
push
mov
jne
or
incb
aam
sub
or
xchg
int3
pop
loop
stc
jp
cmp
ficoms
out
stos
push
out
and
popf
mov
cmp
mov
fcoml
lcall
ds
std
sbb
aas
lret
cmpsl
stc
fs
lods
jno
or
filds
pusha
sub
in
or
mov
inc
dec
adc
jo
lods
jnp
inc
push
or
jns
fucomi
jle
mov
push
test
les
loope
jge
xchg
cmpsl
jb
mov
jmp
sub
inc
jmp
aaa
out
popf
cwtl
imul
fiaddl
xor
inc
gs
or
pop
dec
inc
xchg
xchg
aad
sahf
xor
loopne
or
push
fistpll
notl
cmpl
pop
push
mov
push
mov
push
in
jns
mov
mov
push
out
cltd
clc
mov
and
cmp
out
xchg
js
outsb
mov
pop
inc
cmp
adc
cmpsb
lcall
stc
push
jg
shrb
fyl2xp1
movsl
push
cmpsb
inc
int3
cmp
std
roll
js
es
mov
jle
lods
push
mov
push
bnd
insb
rcr
mov
push
mov
xchg
pop
int
rcrb
xchg
jle
mov
daa
and
nop
in
or
cmp
mov
cltd
orl
ds
out
pushf
repz
in
pop
cmpsl
jnp
add
xchg
or
mov
clc
add
sbbb
rcll
mov
ljmp
or
mov
xchg
lret
dec
out
shl
lret
push
sub
in
inc
sub
xchg
and
inc
jl
and
cmc
mov
scas
std
test
orb
mov
mov
and
dec
xchg
imul
leave
mov
aaa
icebp
xchg
test
xchg
pop
pop
fstpt
scas
dec
lret
jns
in
arpl
jmp
out
xchg
fisttpl
jnp
loope
dec
frstor
add
rolb
push
testl
enter
lea
inc
leave
pop
mov
sbb
dec
enter
outsl
aas
mov
inc
out
adc
pop
rcrb
mov
mov
std
or
mov
adc
adc
jp
xchg
scas
add
es
jmp
add
xor
jmp
cmpsl
gs
aad
paddsb
aas
cmpl
js
test
pop
fisttpll
and
data16
movsb
push
adc
cmp
outsl
mov
cld
or
and
ljmp
lcall
lea
pop
test
pop
mov
lahf
lock
cmp
lahf
push
mov
add
push
push
lods
jecxz
inc
rcll
int
pop
xchg
xchg
fxch
add
lret
movsb
push
push
call
stc
inc
fimull
into
and
adc
rorb
mov
and
pop
push
aam
inc
mov
dec
stos
int3
lret
sar
je
fwait
outsb
ret
lock
and
cld
and
push
test
dec
jne
in
fsubr
sub
out
mov
loope
and
adc
and
test
xor
in
nop
jns
sti
mov
sub
movsl
lods
pop
adc
mov
xor
and
inc
jmp
ja
dec
xor
pop
xor
daa
out
cli
push
jo
adc
and
and
out
add
sbb
les
inc
sbb
ljmp
or
cmp
jg
shll
push
jae
js
lea
mov
push
and
mov
repnz
ds
sti
mov
fisttpl
out
nop
loope
pop
and
lea
xor
ljmp
ljmp
jmp
loope
scas
dec
adc
sub
je
xchg
push
imul
scas
iret
xchg
insb
imul
pop
cmp
push
push
scas
push
dec
aad
mov
xor
fsubrs
scas
enter
or
mov
mov
xchg
jb
xor
int
xchg
push
jae
push
popf
sti
stc
loopne
test
mov
daa
leave
pop
xchg
pop
lods
push
pop
jecxz
in
clc
ljmp
mov
cmove
scas
jl
pop
scas
sbb
ja
add
mov
xchg
ret
in
add
rep
stc
cmp
arpl
in
in
cmp
inc
push
dec
arpl
stos
mov
push
sbb
pop
pop
into
sub
insb
sbbl
dec
cld
jbe
bound
sub
in
cmp
adc
das
outsb
dec
cli
ss
stc
mov
pusha
fbld
sbb
js
out
fisubl
mov
lods
and
and
adc
xor
stos
inc
sbb
mov
divl
aaa
pushf
cmpsl
int3
mov
aas
shl
push
mov
pop
cmp
repnz
jbe
cmp
jae
hlt
mull
outsl
and
xchg
data16
inc
adc
pop
fdiv
loopne
adc
ds
xchg
sub
mov
xor
inc
test
ljmp
fsts
dec
rorl
rcrl
pop
jae
mov
leave
add
xor
xchg
mov
mov
std
mov
pop
pop
or
ja
jbe
icebp
popf
lods
fldcw
bound
scas
fstps
mov
data16
add
je
inc
out
mov
test
cmp
sbbb
dec
and
fimull
out
dec
jmp
xchg
ret
or
iret
loopne
sub
jp
xchg
popf
mov
pop
xchg
dec
imull
fldt
mov
addb
adc
call
mov
sub
scas
bound
inc
xchg
sti
or
push
je
dec
jb
and
loop
pop
jae
je
mov
or
jp
push
pop
jp
js
clc
xor
out
fsubr
pop
in
pop
or
fwait
inc
idivb
cmpsb
mov
jns
dec
sbb
ds
adc
add
push
inc
mov
fcmovbe
mov
icebp
sub
push
xor
and
cmp
loopne
mov
fisubl
clc
jmp
loope,pt
in
pop
inc
adc
loopne
out
ss
test
fnsave
lock
jecxz
jbe
add
sub
lods
pcmpgtb
xchg
jo
sub
xorb
arpl
sbb
shll
les
scas
sbb
xchg
push
add
pushf
push
jge
jp
mov
popa
int
pop
mov
push
lock
scas
jns
inc
movsb
mov
jmp
xchg
fwait
lret
cwtl
xchg
sbb
popf
pop
push
test
add
inc
enter
cmp
and
cs
leave
ss
out
jmp
call
xchg
int
outsb
jmp
jo
shr
adc
lock
ret
adc
fisubrl
cltd
ljmp
jmp
xchg
or
sti
sub
lods
test
jb
cmp
adc
lock
cmp
mov
push
adc
mov
mov
sub
push
out
or
into
out
pop
sbb
mov
fs
aaa
mov
push
inc
or
push
inc
rcll
cli
das
lret
sbb
addl
repnz
sarl
inc
jle
sub
xchg
inc
sbb
ret
stos
cmp
in
es
sbb
jne
mov
mov
pop
inc
das
cmp
lcallw
int
sbb
adc
push
out
jnp
into
sbb
cld
mov
test
stc
push
dec
call
hlt
jge
lcall
repnz
jmp
xlat
adc
adc
fcmovnbe
subb
pushl
fsqrt
and
or
jno
mov
insb
push
subb
cmp
aaa
mov
add
mov
sub
or
in
fistpll
rorb
mov
clc
in
daa
loop
sbb
mov
mov
mov
cmp
int3
xchg
dec
mov
int3
je
jl
push
jno
xor
inc
cmp
sti
mov
bound
lds
int3
mov
int
adc
bound
sbb
daa
aam
dec
das
loopne
sti
cmovge
ljmp
movsl
roll
pop
push
push
test
in
and
dec
rsm
or
mov
mov
add
fdivrl
jecxz
mov
in
lret
insb
xchg
fists
pop
mov
adc
loope
out
pop
xchg
add
adc
xchg
xchg
pop
or
and
inc
xor
negb
and
xor
je
push
frstor
pop
sub
and
movsl
ss
stos
push
pop
mov
dec
push
loope
jae
shlb
inc
popf
pop
adc
lock
ss
sahf
pop
push
xchg
jbe
iret
fxch
loopne
arpl
add
mov
inc
outsb
push
xchg
and
xchg
cmp
add
daa
mov
call
jb
push
mov
dec
push
mov
sbb
ds
pop
insl
mov
sbb
and
or
in
xchg
jb
sahf
inc
outsb
repz
shlb
roll
inc
jne
fwait
push
cs
loope
std
lods
es
cmc
inc
jo
into
adc
pop
fwait
mov
cs
pop
ret
pop
movmskps
stos
pop
inc
inc
pusha
cmpsl
dec
dec
mov
test
test
or
stos
dec
fnsave
push
jl
rorb
or
sti
test
mov
mov
incl
cli
sahf
push
insl
lods
stos
ficoml
cld
cld
das
gs
mov
add
add
xlat
push
sbb
mov
xor
insl
aam
mov
xor
fsubs
packsswb
ds
dec
pop
mov
imul
mov
lods
adc
mov
pop
xor
lods
mov
loope
mov
dec
mov
inc
jns
inc
lods
jp
rorl
nop
add
dec
sbb
jae
test
xchg
and
sbb
and
sahf
sub
inc
pop
lret
cld
lret
mov
shlb
std
cs
sti
jp
fmulp
loop
fstl
lcallw
cld
ret
push
popa
sub
jecxz
add
je
das
adc
mov
sbb
push
jp
add
fimuls
jnp
mov
jg
mov
mov
push
testl
lcall
sub
sub
aas
or
mov
or
shll
xchg
jg
std
inc
mov
adc
or
add
adcb
repnz
jbe
mov
imul
rorb
jo
call
mov
xor
lret
push
bound
inc
xor
dec
enter
js
pop
fs
push
adc
in
sub
scas
lcall
std
and
inc
stos
test
sbb
adc
sub
sti
mov
inc
inc
bound
mov
xlat
popa
xchg
pop
fcomps
push
test
in
inc
jp
bts
movsl
neg
mulb
nop
mov
mov
and
sti
mov
dec
ror
cmpsl
lods
faddp
cltd
jge
roll
fdivrs
aas
or
movsb
xor
xor
leave
mov
and
dec
aad
mov
jne
lea
xchg
in
daa
sbb
into
mov
cwtl
inc
lds
mov
ds
push
cwtl
out
mov
pop
std
cmp
mov
push
rcrb
pop
cmpsb
sub
daa
rcrl
mov
ficompl
pop
cld
jnp
rep
jle
mov
mov
dec
add
or
mov
xchg
icebp
xor
or
jnp
mov
and
and
mov
mov
in
adc
in
fldenv
pusha
int
jge
push
mov
ds
cmp
sub
out
jmp
cmp
mov
insl
mov
pop
out
mov
jns
sahf
add
int3
lods
cwtl
fimuls
mov
shlb
gs
jno
cs
push
or
cs
je
in
loop
sarl
gs
push
or
add
and
dec
mov
popf
lock
sti
mov
cmpsb
push
adc
inc
dec
lcall
int3
sub
adc
or
and
pop
out
out
loop
jnp
adc
mov
sti
mov
sti
in
pop
pushl
dec
cmp
in
mov
jg
sbb
aas
mov
pop
pop
icebp
jecxz
push
mov
or
incb
cmp
and
jne
in
cmp
push
cmpsb
sbb
pop
sbb
aam
lds
ljmp
loopne
mov
ljmp
repnz
test
inc
loop
adc
aad
divb
lods
fwait
pop
mov
sbbl
loop
out
rcr
cli
ja
jl
fistl
fcomps
mov
xor
cmpb
js
out
rolb
push
xchg
popf
cmpl
mov
dec
arpl
rcll
loope
jae
adc
inc
dec
xchg
pop
xchg
sub
int
mov
push
mov
imul
mov
mov
jmp
insb
mov
or
or
mov
or
call
and
aad
adc
cmpsb
jl
xchg
sbb
rcrb
and
fisttpl
sub
dec
pop
sbb
test
fs
add
or
mov
mov
imul
imul
jb
xchg
imul
pusha
mov
xchg
out
and
inc
outsb
fwait
data16
aas
aam
mov
cmpsb
js
sub
jns
mov
js
popf
in
iret
mov
sbb
cltd
dec
xchg
mov
cmc
cli
stc
adc
jb
arpl
jno
mov
dec
cld
lods
adc
lcall
loope
inc
gs
jno
add
xchg
add
es
mov
lds
xchg
adc
sarl
cmp
jno
pop
push
and
or
sub
cmp
ret
or
sbb
mov
jne
push
push
mov
sbb
es
inc
jae
out
lea
lret
push
adc
leave
iret
cmp
shr
mov
pushl
ret
cmpsb
int3
mov
dec
pop
inc
xchg
jno
jmp
mov
dec
es
outsb
imul
and
jno
out
mov
push
negl
push
stos
test
roll
outsb
lar
ja
f2xm1
jmp
jle
sbb
fadd
add
pop
insb
jg
in
pop
xlat
daa
dec
inc
inc
mov
lock
fcomp
outsl
clc
ljmp
cmp
shl
cmpsb
call
jecxz
add
shr
adc
push
std
push
and
jb
push
lahf
loop
mov
in
daa
jns
lock
sub
sub
test
xor
sti
mov
mov
scas
sub
cmp
daa
jp
push
lods
mov
push
xor
and
adc
cmpsb
mov
shl
dec
adc
pop
or
addl
adc
mov
jecxz
lret
fidivrs
scas
stc
test
jne
cwtl
and
bound
mov
add
cmpsb
lcall
adc
repnz
sbb
rclb
sbb
push
jle
jg
xchg
repz
test
iret
in
dec
cli
add
pop
aad
mov
pop
inc
lret
imul
pushf
xor
sub
pusha
mov
mov
and
popa
pop
pushf
ljmp
cmpsb
fldcw
add
stos
push
dec
pop
leave
lea
decb
imul
add
hlt
movsb
insb
cld
iret
xchg
mov
lods
lock
rcl
mov
pop
addb
push
mov
cmc
ja
inc
cmp
lahf
jl
inc
push
sti
in
loope
push
in
test
dec
adc
lcall
jnp
or
mov
lods
pusha
call
sbb
dec
std
mov
push
cmpsl
dec
jmp
shlb
testb
jne
aas
adc
test
sbb
push
jle
sarb
xor
cltd
sub
push
dec
lcall
aam
xchg
shll
dec
inc
sbb
pop
imul
imul
mov
lods
sbb
cmp
sbb
fisubs
fdivrl
and
cmp
ja
jne
movsb
data16
out
pop
xchg
mov
mov
sub
dec
lret
movsb
aad
movb
inc
mov
int3
add
fbstp
cmpsb
mov
dec
or
in
dec
bound
out
xor
aam
mov
push
inc
repnz
out
imul
sub
and
fldcw
imul
mov
dec
fldl
icebp
scas
lods
cmp
xor
sub
mov
push
add
mov
outsb
cmp
roll
cmpsl
adc
in
mov
sub
call
jno
and
repnz
dec
les
xor
sub
test
icebp
inc
and
mov
and
mov
cmp
movsl
leave
call
xor
mov
and
cmp
int
sub
dec
sub
insb
jns
or
jno
sbbb
push
das
int3
jb
mov
aaa
lret
fistl
pop
push
mov
push
push
xchg
mov
sub
inc
das
xor
loopne
fwait
movsl
xorl
outsb
sbb
movsl
lock
fidivrs
and
mov
imul
lcall
aaa
dec
pop
push
lock
inc
dec
test
pop
push
popl
loopne
sbb
xor
and
jns
fldt
push
add
call
js
rcll
xor
jns
add
xchg
js,pn
loope
cmpb
leave
jle
sahf
mov
jmp
dec
sbb
je
mov
or
lea
jns
imul
adc
ffreep
jg
dec
addr16
stc
lods
clc
lods
aaa
xchg
stc
push
cmp
add
orl
fs
lret
xchg
fsubs
lcall
lods
push
ret
dec
adc
pusha
movsb
rclb
pop
or
dec
fimuls
insb
popa
int
fwait
push
popa
sbb
inc
push
xor
lret
gs
pop
dec
pusha
mov
mov
sbb
movsl
mov
sub
in
dec
jge
icebp
xchg
arpl
cwtl
andps
popa
gs
cmp
jne
add
and
jmp
mov
sub
js
xor
movsl
cmpsb
mov
mov
cmp
ret
and
jecxz
je
fldcw
mov
mov
cli
inc
jmp
add
mov
scas
sub
mov
fsts
in
enter
lret
push
mov
outsl
and
sti
xchg
mov
mov
xchg
sbb
loop
int
inc
mov
call
cmp
rep
sub
ficoms
jmp
cmp
jge
xor
jno
ja
xchg
aad
xchg
push
mov
outsb
fwait
out
ds
inc
insb
iret
mov
cmpsb
xchg
lcall
repz
cmp
sbb
or
push
rcr
inc
pusha
dec
dec
daa
fxch
xchg
inc
loopne
lret
sub
sti
scas
mov
xchg
pusha
scas
jl
aad
mov
popa
add
pop
mov
int
mov
aad
inc
mov
push
pop
sarl
push
ja
jp
popa
mov
pop
adc
sbb
xor
mov
les
and
test
or
pop
lock
pop
fcompl
iret
stos
pop
and
scas
push
cmp
jp
sbb
cwtl
mov
jmp
cs
pop
int
pushf
or
lret
adc
and
inc
adc
outsb
int
cmpl
testb
pop
push
jo
arpl
mov
lret
jne
push
xor
sub
sbb
mov
xchg
xor
dec
and
sbb
add
mov
mov
xor
and
lahf
mov
jne
mov
sbb
imul
jle
mov
pop
adc
stos
fstpl
ds
aaa
les
ljmp
mov
mov
push
mov
test
cmp
mov
inc
sbb
ljmp
adc
std
je
enter
aad
push
test
jae
jno
sahf
in
cmp
out
or
mov
sarl
adc
jmp
icebp
push
xchg
aas
xor
or
hlt
roll
aad
ret
jbe
adc
add
push
xchg
xchg
ds
mov
push
cmp
pop
lcall
pop
ss
out
ds
lret
sub
ficomps
gs
adc
out
sub
lock
push
jg
adc
push
xor
fscale
dec
sub
faddp
xchg
jmp
lea
cli
imul
insl
mov
aaa
mov
cmp
cmpsb
jecxz
cli
faddl
jle
pusha
pushf
xchg
xchg
popf
lret
imulb
shrb
shrd
insl
xchg
cmp
push
scas
cs
or
push
mov
push
xchg
dec
sub
mov
cmpsb
mov
cmp
cmp
lods
repz
in
push
test
cld
mov
mov
inc
mov
mov
xchg
dec
push
push
lahf
fldcw
mov
sbb
jnp
rcr
mov
cs
lds
lods
cmc
fdivl
lods
testb
cmc
cmp
cmpsb
xchg
addr16
pop
mov
in
mov
pop
or
sub
dec
or
ljmp
lods
outsl
shlb
pop
sbb
mov
sub
dec
mov
cs
repnz
jnp
stos
xlat
iret
xchg
push
aad
cmp
mov
repz
pop
aam
daa
mov
and
dec
stos
into
icebp
mov
jge
cwtl
sub
add
dec
inc
outsb
mov
out
jmp
add
outsb
xor
popa
pop
mov
lods
enter
aaa
shll
sbbb
sub
lahf
xchg
jge
and
icebp
lea
sub
push
xor
cmp
jge
test
fildll
mov
xor
cli
or
xchg
and
scas
adc
cmp
imul
pop
dec
stos
sbb
push
and
insl
popf
popf
pushw
push
xor
out
cli
cltd
clc
sub
dec
xchg
lock
fnsave
sbb
addr16
pop
cmc
inc
inc
hlt
stos
jle
enter
ja
jp
fimull
cltd
pop
mov
jle,pn
add
shl
mov
mov
lcall
in
js
into
flds
int
inc
jl
push
mov
mov
popw
std
or
xor
xchg
pop
mov
imul
mov
es
sbb
adc
jno
imul
xchg
je
mov
sbb
adc
call
jg
adc
out
xchg
call
dec
push
lods
fldenv
inc
cmp
test
int
xchg
rcrl
sahf
sbb
adc
test
and
sub
pop
jg
test
xor
iret
mov
in
in
fdivl
shlb
cmp
cltd
popf
or
out
xor
in
push
test
or
xor
pop
push
fistl
sbb
xchg
jb
and
loope
mov
or
jnp
mov
jmp
mov
cmc
xlat
adc
jg
add
cmc
aaa
nop
int3
dec
fwait
inc
jae
sbb
add
sub
sbb
push
out
call
fsubrl
cmp
jp
or
fsubrs
dec
fdivr
xor
sub
xchg
push
cli
arpl
outsb
sub
xor
hlt
pop
push
adc
sti
lea
mov
inc
add
mov
cmc
jmp
inc
fcomip
mov
imul
insb
sbb
sti
mov
hlt
addr16
jns
std
inc
js
cli
xor
cmpsb
cli
and
sti
and
and
mov
xor
es
jo
into
shlb
out
jg
mov
mov
sahf
mov
outsb
rclb
mov
xchg
pop
js
call
inc
idivb
roll
movsl
out
pusha
repz
mov
jl
jmp
mov
cmc
push
out
jno
mov
testb
push
inc
aaa
pop
stc
xor
push
out
ds
jbe
stos
sub
pop
out
orl
fidivl
inc
pop
mov
leave
xchg
add
xor
add
jg
mov
fsin
and
popf
inc
and
ja
pop
stos
out
fstps
stc
dec
mov
ret
push
jbe
dec
dec
jns
cmp
sub
movsb
imul
xchg
inc
scas
xchg
fwait
inc
js
mov
std
rcll
repz
and
xchg
mov
dec
lret
imul
sbb
je
inc
push
fsubrl
mov
jb
scas
in
pop
inc
pop
cmp
ret
pushf
rol
rcrl
out
ds
dec
int3
sbb
stos
mov
sub
push
int3
subl
cmp
add
ror
dec
sub
jp
xlat
scas
jne
and
mov
pop
sub
movb
aam
repz
jp
mov
inc
mov
std
pop
dec
test
push
out
mov
std
sbb
fistpll
adc
outsl
std
cmpsl
xchg
xor
std
icebp
stc
jnp
adc
or
outsb
gs
dec
lods
imul
jecxz
jle
xchg
aam
fidivs
add
sbb
mov
sub
imul
xor
inc
cli
and
mov
xchg
in
dec
mov
push
cmc
fwait
jmp
pusha
add
aad
add
xchg
pop
lcall
pop
push
nop
jbe
push
or
inc
jae
mov
hlt
mov
test
push
mov
imul
mov
jbe
les
xchg
fwait
rcrb
stos
pop
imull
pop
fidivs
pop
shll
cmc
jo
inc
data16
jno
jmp
mov
test
dec
xchg
test
in
lea
push
sub
inc
mov
loop
roll
mov
push
std
cli
imul
mov
inc
add
js
sub
popa
pop
pop
xchg
gs
sarb
mov
inc
mov
ficompl
mov
pushf
loopne
shll
and
push
jno
inc
jnp
rcrb
icebp
adcb
addr16
push
ja
dec
mov
ficompl
into
add
sbb
mov
dec
xchg
test
js
cmp
lock
pop
fucomip
addr16
dec
ja
sbb
lds
mov
outsw
and
int3
mov
into
mov
fwait
push
mov
xchg
mov
pop
dec
lods
xlat
ret
outsl
ret
andb
pop
adc
mov
das
insl
mov
add
popf
mov
mov
sbb
push
xchg
xchg
and
push
and
cwtl
je
fidivrs
mov
jecxz
imul
sahf
mov
aaa
shlb
leave
fstps
mov
push
mov
push
ds
rep
mov
rcrb
ja
fwait
inc
or
mov
add
cmpsb
xchg
sub
xor
fsts
sahf
fwait
insb
xchg
and
out
adc
icebp
push
cmp
cltd
ds
mov
mov
mov
pop
iret
iret
leave
push
jno
pusha
mov
xchg
or
sub
dec
sbb
test
das
xor
pop
ds
adc
popf
jl
popf
cmp
adc
add
jge
and
in
pop
and
cld
dec
lcall
in
adc
sub
dec
dec
push
xor
fucompp
xor
jl
and
andb
mov
fadds
xor
test
add
add
mov
jg
out
xchg
pop
aaa
lea
adc
shll
and
out
arpl
mov
sbb
cmp
sbb
outsl
adc
shrl
loop
jbe
push
fiadds
add
repz
adc
push
dec
jno
bound
das
cmp
lock
loope
sbb
and
xor
outsb
jno
jns
dec
es
mov
push
push
out
add
aam
mov
dec
lcall
shl
mov
mov
pop
push
jnp
stos
dec
mov
bound
push
pop
pop
out
cmp
add
lahf
popf
xchg
cmp
mov
imul
sbb
mov
and
or
and
mov
adc
push
lcall
push
or
fsub
mov
add
in
pusha
lods
rclb
js
cltd
and
xchg
mov
mov
pop
xor
sbb
mov
insb
sbb
and
add
cmp
mov
lret
xor
shr
push
mov
xchg
jae
cmpsb
popf
popl
nop
jg
sarl
mov
jecxz
nop
pop
fisttpl
xor
es
xchg
rorl
jecxz
fiadds
mov
outsl
lds
sbb
jp
es
mov
mov
fistpll
data16
mov
pop
lds
cs
adc
fsts
rolb
je
inc
and
shl
mov
cmpsb
fdivrl
pop
ret
addr16
popa
fistps
andb
fistl
fsubl
mov
mov
stc
ficompl
lods
dec
outsl
inc
sub
aaa
movsl
and
jo
shr
negw
push
xor
inc
insl
test
xor
stos
push
imul
cwtl
push
push
ljmp
fldl
fisubrs
fxch
call
and
pop
jo
fdivr
loopne
lret
ss
jmp
test
jb
ret
dec
test
cmc
push
cli
addb
shll
outsb
out
and
xchg
rcll
inc
dec
and
aaa
push
popa
xchg
testl
mov
dec
mov
ja
push
inc
pop
dec
insl
push
cld
jbe
sub
xor
xlat
in
dec
adc
jg
test
and
adc
mov
outsb
arpl
lret
mov
mov
mov
ja
sub
insb
dec
fists
pusha
pop
add
int
pop
test
sbb
xchg
repz
ret
mov
movsb
lret
dec
fs
je
mov
add
push
dec
lds
cmp
fstl
iret
lods
ljmp
xchg
enter
jmp
cmp
mov
imul
push
mov
js
mov
js
or
push
add
ss
sbb
inc
mov
push
shl
add
dec
add
push
dec
mov
add
outsb
mov
int
aas
leave
cli
jb
sub
mov
cmc
inc
repz
and
lcall
js
mov
pop
shll
jg
and
push
test
lcall
and
jle
dec
mov
loope
jns
jmp
loop
stc
push
mov
jle
pusha
loopne
ljmp
jne
push
push
pop
or
test
push
xchg
aas
xchg
cmc
xor
jb
clc
cmp
sub
or
or
arpl
mov
jo
arpl
lods
jns
jb
mov
test
xor
testl
jge
jmp
dec
sarb
ret
cmpsl
jmp
pop
push
xor
test
push
lock
dec
cmp
movsb
push
dec
mov
or
decl
aas
lock
xchg
sti
out
ret
aam
push
ficoml
or
mov
pop
or
mov
popf
in
push
add
jmp
mov
cld
pop
lock
mov
loope
data16
mov
repz
ljmp
mov
cmpl
inc
mov
xchg
notb
adc
xorb
into
fisubrs
mov
loop,pt
sarb
dec
push
add
enter
xor
sbb
lea
and
fldenv
push
test
hlt
sub
inc
xlat
cs
xor
ja
leave
mov
fwait
lods
lds
icebp
stos
sti
jb
cs
adcb
adc
sahf
popa
dec
pop
movsb
ds
in
mov
push
lahf
or
repnz
es
jp
jge
dec
mov
pop
repnz
cmp
sbb
cmp
adc
repz
add
or
and
sbb
fsubr
stc
mov
mov
mov
inc
mov
test
add
or
adc
aaa
das
fdivrl
mov
add
inc
push
insl
clc
es
inc
push
mov
inc
jne
cld
jno
cmpsl
aad
loope
push
adc
scas
cmp
mov
movsl
aaa
iret
adcb
jae
push
pop
or
mov
std
dec
loop
loope
je
xor
mov
sarl
into
das
dec
mov
xchg
dec
leave
leave
sbb
stos
stc
xchg
jp
lds
jmp
gs
mov
mov
aam
xchg
in
xchg
inc
or
dec
push
mov
out
loopne
or
dec
stc
cmc
jae
sbb
mov
lretw
fwait
jae
sbb
pop
out
sbb
fiadds
mov
lds
jne
xchg
jmp
push
xchg
gs
pop
incb
sbb
cmp
mov
outsb
xor
jo
jbe
test
enter
push
stos
mov
push
or
fwait
mov
cmpsl
js
fs
dec
inc
xor
repnz
cmpsb
scas
dec
mov
punpcklbw
pusha
shll
xchg
cmpsl
insb
das
sarb
roll
popa
cs
int
dec
loope
movsl
imul
cmpsb
popa
and
sti
in
push
je
ret
mov
cmpsl
icebp
adc
les
pop
push
dec
lret
cmp
cmp
jbe
neg
fwait
cmp
in
in
inc
movsl
xchg
andl
movsl
sub
rol
mov
clc
push
clc
fwait
ret
pop
fcomps
push
cmp
sub
test
cmp
outsl
js
xchg
xchg
mov
lahf
outsb
push
jp
mov
aaa
inc
aad
or
mov
sub
jnp
push
pop
arpl
cmp
pop
movsl
ds
or
push
mov
jecxz
rorl
fistps
mov
popf
mov
rorl
adc
mov
xchg
xchg
jae
mov
cld
sbb
push
mov
and
jg
xor
cmp
inc
inc
stc
sub
dec
cmp
push
rol
shll
jnp
and
fstps
aaa
sbb
inc
cld
xchg
shll
out
mov
push
arpl
stos
add
pop
xchg
out
or
std
in
sar
pop
jmp
in
movsl
push
out
hlt
ds
jge
addr16
inc
mov
pop
sub
lcall
sbb
mov
xlat
add
ja
adc
xlat
cmpsl
xor
fisttps
mov
adc
das
imul
mov
jnp
in
cmc
xor
sarb
enter
test
jge
pop
mov
pop
dec
cmpsl
popf
lds
sub
inc
jns
cld
cld
dec
lock
or
push
test
nop
cli
rorl
add
pop
or
pop
cmc
jb
or
add
repnz
jg
cmp
fistps
mov
lret
mov
gs
mov
xor
inc
pusha
cltd
cld
xchg
out
fildll
xchg
xor
lret
jmp
add
mov
cli
inc
pop
test
lret
mov
lds
stos
fwait
xor
jmp
push
cld
enter
sub
imul
aaa
inc
jae
stc
jg
fistpll
sub
stos
push
clc
lret
in
inc
js
add
loop
inc
sub
divb
push
sub
mov
mov
mov
sub
popf
inc
daa
adc
jnp,pt
and
sahf
repnz
cmp
shr
inc
outsb
sbb
pop
and
or
clc
stos
push
cli
cwtl
mov
mov
or
sbb
aas
loop
fwait
cmp
push
push
or
cmp
sub
ds
cmpsl
shll
mov
xchg
notl
shl
xor
push
and
inc
mov
and
sahf
aaa
xchg
cmp
mov
xacquire
sti
imulb
mov
push
aas
addl
push
or
add
or
push
test
std
add
mov
sub
insl
fs
and
inc
aaa
shrl
and
gs
scas
ljmp
jmp
or
sbb
call
outsb
lds
jge
jae
push
sbb
mov
mov
or
xchg
gs
xor
loop
pop
cld
mov
pop
leave
mov
insl
mov
test
dec
mov
int
loope
fcom
lock
dec
out
jle
mov
flds
insl
inc
cs
mov
stos
insl
sahf
mov
sbb
xor
add
mov
mov
jb
nop
insb
test
xchg
loopne
xor
pop
sbb
int
daa
pop
pop
aaa
xchg
shr
mov
pop
je
mov
sbb
push
fldt
mov
insb
aas
dec
addr16
sarb
cmpsl
inc
daa
mov
ret
popf
cmp
or
xchg
mov
fucomi
and
push
or
jnp
mov
rorl
sbb
test
clc
inc
cmp
adc
sub
ss
ret
jl
int
cmp
adc
insb
inc
cmp
pop
test
mov
pop
bound
or
addr16
push
je
jne
mov
or
cmpb
push
fcmovb
xchg
mov
xchg
xchg
lret
adc
pop
mov
mov
push
mov
fistpll
pop
xchg
lret
int
xchg
test
nop
pop
cmp
idiv
jns
inc
inc
faddl
xchg
testb
out
xchg
nop
je
jecxz
imul
outsl
in
cli
sarl
test
jo
adc
pusha
int3
rcrb
clc
and
add
or
sahf
inc
ja
xchg
or
pop
mov
movd
dec
test
jne
mov
pop
xchg
adc
mov
incl
ret
mull
jno
cli
cmp
aad
and
mov
sbb
cmc
sbbl
out
inc
add
jo
sbb
loopne
shll
repnz
cmpsb
cmp
loop
in
sub
shr
xor
push
adc
adc
sbb
jmp
decl
add
out
rcrl
sbb
rorb
out
fs
mov
imul
or
negb
fsts
xor
frstor
jg
imul
dec
pop
jecxz
adc
sbb
dec
pop
stos
pushf
bound
xlat
mov
je
xchg
incb
mov
les
lods
shrb
dec
dec
icebp
push
out
or
icebp
mov
mov
fs
mov
and
inc
or
sti
iret
aas
inc
add
loopne
push
pop
jbe
cmp
cmpsl
cmpsl
stos
sbb
inc
js
pop
pop
cwtl
inc
aas
jmp
bound
pop
push
mov
insl
mov
popa
nop
lds
rep
dec
iret
testl
push
out
aad
xchg
nop
inc
loope
pop
lret
test
ja
pop
pop
insl
shl
cmp
rcll
push
popa
insb
popf
push
sbb
mov
stos
mov
lods
xor
mov
jecxz
xchg
xchg
jp
xor
adc
lcall
inc
pop
test
jae
push
jmp
pop
mov
dec
scas
dec
sarl
test
sti
hlt
leave
push
popa
pushf
popa
sbb
in
cwtl
std
dec
lods
repz
insb
pop
and
sbbl
inc
movsb
mov
nop
test
jge
xchg
bound
jb
mov
imul
or
xor
cmp
loop
outsb
and
mov
lock
or
mov
jae
movsl
sarb
push
sbb
pop
aas
mov
push
jle
sti
jl
push
and
add
push
test
sub
cli
cmp
jae
orl
in
xor
inc
or
daa
mov
sub
icebp
mov
out
jbe
xchg
push
add
or
inc
sbb
dec
mov
sbb
xor
cmp
fwait
sbb
dec
stc
sbb
jp
mov
insb
or
dec
xchg
je
outsl
lahf
std
mov
rclb
cltd
xchg
lods
cld
cld
psubb
and
push
mov
pushf
cmc
popf
clc
sub
ja
mov
ret
pop
jl
xchg
sbb
mov
add
xlat
sbb
aas
sbb
shl
imul
pop
jo
add
lret
lcall
fdivrs
clc
orb
fistps
mov
cmc
push
xor
or
xor
mov
outsl
ret
out
dec
pop
jb
pop
enter
push
int
movsl
mov
xor
jecxz
add
jmp
sbb
cs
mov
pop
cmpsb
popa
cmp
push
testl
cmp
pop
sahf
in
lods
popa
mov
out
lcall
js
fs
sahf
add
jae
test
mov
nop
das
mov
xor
mov
scas
push
stc
lock
push
int3
imulb
mov
scas
dec
ss
out
pop
jmp
call
sbb
inc
in
js
ss
jp
xchg
ss
stos
faddp
shrb
loop
jae
lea
orps
add
dec
mov
jge
out
mov
das
hlt
push
int3
inc
pop
and
test
mov
mov
jbe
add
inc
mov
pop
test
lds
jo
mov
inc
shr
or
hlt
inc
cmp
xchg
movsb
inc
mov
and
sbb
xchg
fsub
iret
stc
jge
cwtl
add
push
test
imul
mov
jecxz
or
iret
xchg
add
fstps
aam
fidivrs
sbb
sahf
adc
sub
je
sub
adc
jmp
mov
jle
or
ds
sub
iret
cmp
imul
push
pop
out
sub
outsl
fistps
fadd
mov
sti
fs
scas
cmp
idivl
pop
rcrb
mov
mov
xor
cmp
inc
mov
or
sbb
mov
aam
sub
sahf
mov
cwtl
xchg
xor
imul
ret
aam
or
shrb
mov
xchg
outsb
mov
inc
clc
push
rcrl
jge
lret
pop
pusha
mov
add
sti
aam
mov
jp
xor
ds
lret
dec
push
or
fiadds
popf
adc
fildl
divb
dec
fadds
pop
cmp
jo
in
mov
sub
xor
push
data16
fwait
xchg
fwait
das
loop
sahf
orb
sahf
stos
loopne
and
jnp
adc
pop
add
rcr
xor
icebp
xchg
dec
out
jb
adc
lea
sub
in
mov
ljmp
sti
scas
test
out
jbe
movsl
fimuls
mov
adc
bound
dec
push
mov
lahf
loop
les
pop
and
stos
cmc
xchg
inc
adc
test
push
jo
adc
inc
lret
stos
push
or
dec
xchg
das
test
inc
inc
fadds
loope
cld
loopne
lock
mov
gs
mov
lahf
cmc
les
lea
adc
dec
sarb
or
loop
inc
fisttpl
xchg
pop
mov
push
push
lcall
sbb
push
hlt
insb
mov
jns
xchg
mov
pop
ljmp
lods
aad
call
fnstsw
jle
jp
xchg
ret
lods
addr16
aaa
data16
lds
jmp
fistpll
add
xlat
into
jecxz
cmp
inc
adc
pushf
or
lock
jb
xor
outsb
stos
push
lret
imul
sbb
popa
clc
lods
pushf
int
daa
das
ds
loope
sub
ds
popf
cld
cmp
lds
mov
adc
out
xor
lret
pop
hlt
ja
out
div
push
fadds
les
adc
add
pop
into
xor
sub
sbb
xchg
cld
in
mov
jle
mov
in
xchg
jnp
sbb
xchg
scas
or
imul
and
andl
pop
dec
repnz
adc
jmp
sub
daa
mov
xchg
dec
cmpsl
sub
arpl
cld
scas
rclb
loopne
stos
flds
cmp
lcall
shrb
or
or
les
cmpsl
xor
insb
adc
fsub
fdiv
out
mov
add
cmp
insl
inc
mov
push
out
cmp
cmp
and
or
lret
fxch
loop
shlb
clc
inc
jmp
cs
stc
mov
and
mov
sub
mov
pop
inc
pop
divl
fcomps
bound
push
in
fdivp
jp
fsubr
xor
push
outsl
mov
lahf
movsb
lahf
adc
ds
adc
repz
mov
outsl
xor
lods
push
and
pop
dec
and
shl
popa
mov
arpl
mov
cli
lcall
inc
xchg
movsb
or
cmpb
stos
hlt
lods
or
fcoml
js
test
xchg
lods
xchg
sbb
scas
adc
and
inc
movsl
add
pop
and
bound
pop
sub
pop
sbbb
js
ret
or
scas
fs
xor
dec
bound
adc
data16
xchg
lcall
inc
pop
sahf
pop
push
pop
out
mov
dec
imul
aaa
mov
ljmp
outsl
rorb
cmp
inc
jmp
fxam
popf
test
lahf
bound
xchg
lock
jle
aad
into
mov
cld
lcall
sahf
push
imul
sarb
pop
aad
pop
push
jae
sbb
js
mov
fcoms
data16
xor
sbb
sub
jg
int3
inc
pop
lahf
add
mov
jae
cmp
sub
test
xor
stos
fdivp
jecxz
jnp
sbb
into
jns
xchg
scas
pusha
sbbb
sbb
orb
pusha
popf
jb
mov
xchg
icebp
jmp
jbe
mov
adc
lods
dec
into
jl
mov
jmp
push
xchg
clc
mov
or
fsubr
stos
xor
dec
cmc
dec
xor
popf
lods
and
cmp
gs
jae
jg
sub
icebp
mov
scas
imul
dec
push
test
js
scas
out
pop
mov
mov
push
ljmp
lds
inc
pop
fldt
lds
pop
or
pop
sbb
fs
mov
xchg
push
test
pop
repnz
push
jae
lret
popf
mov
cld
cmp
push
test
icebp
das
loopne
cmpsb
sahf
sub
and
aaa
or
daa
jne
bound
push
jp
cmp
mov
push
push
icebp
add
mov
xor
jg
push
xchg
jp
outsl
pushf
repnz
cmp
out
sub
stc
shlb
out
adc
xchg
adc
adc
inc
cmp
sbb
in
jo
xorl
dec
inc
pop
jo
xchg
jae
inc
clc
and
ret
movsl
pushf
pop
fs
or
aad
sub
inc
icebp
loopne
mov
push
sub
test
inc
loop
dec
adc
dec
iret
sub
adc
movsb
gs
mov
adc
inc
xchg
ret
pop
mov
dec
pop
dec
xor
sbb
test
cwtl
pushf
jle
dec
sbb
fwait
stos
loop
pop
cmp
scas
lds
xchg
call
mov
inc
jl
pusha
in
mov
add
out
add
xchg
pop
adc
lcall
lods
or
mov
jb
pop
mov
dec
pop
into
cltd
out
push
inc
mov
mov
loop
dec
sub
das
ja
sub
mov
mov
nop
mov
dec
mov
push
sub
imul
jmp
sbb
nop
mov
inc
jecxz
test
mov
inc
jae
jo
std
cmp
popa
cmp
xor
call
fstpl
xor
sti
add
imull
mov
xchg
xchg
cmp
xchg
sahf
or
adc
xchg
scas
rcll
xchg
push
daa
push
stos
scas
xchg
ja
sbb
pop
test
pop
cli
jo
nop
pop
pop
push
dec
sub
outsb
xchg
fimuls
test
mov
push
iret
pop
inc
lahf
push
xor
inc
add
adc
aaa
or
or
dec
dec
sbb
cmp
pop
in
mov
fisubrs
pop
insb
xor
mov
in
or
fsubrs
pop
imul
aas
jmp
out
inc
mov
test
clc
sbb
mov
outsb
inc
rcll
xchg
insb
sbb
jp
sub
mov
adc
dec
lahf
fbld
test
jge
jge
jae
repnz
or
adc
pop
pop
cmp
sub
dec
mov
push
les
pop
sbb
sahf
into
dec
icebp
mov
push
adc
xor
and
jge
movsl
xchg
scas
pusha
imul
xor
or
sbb
aas
dec
les
aaa
fdivrs
negb
sbb
scas
ljmp
adc
inc
popa
inc
mov
out
enter
sbb
pop
adc
and
adc
imulb
push
inc
adc
add
mov
shrb
enter
xor
scas
lret
cmpsl
xor
or
lret
xor
lahf
jl
cmp
and
sbbl
rcll
or
dec
bound
stc
add
sub
push
or
cmpsb
jl
fidivs
lds
dec
insl
in
imul
push
inc
dec
inc
add
mov
faddl
lret
xlat
sub
out
dec
push
shlb
pop
sbb
adc
xor
sub
int
push
nop
mov
mov
lea
mov
and
xchg
pushf
xchg
leave
or
nop
or
xchg
push
popf
mov
push
fiaddl
or
xor
int3
movsl
daa
gs
enter
loop
setb
dec
call
xchg
dec
mov
scas
icebp
sbbb
pop
dec
cmp
aad
popf
jb
lret
cli
mov
mov
mov
in
push
dec
or
mov
adc
fcoml
cmp
push
pop
shll
jmp
mov
cmpsb
mov
in
out
ja
dec
mov
ret
dec
into
aaa
loopne
xchg
cmp
mov
fildll
jle
jae
imul
fists
sbb
gs
or
inc
mov
jge
add
incb
mov
cmc
iret
cwtl
cmp
sbb
jbe
shl
mov
jecxz
ja
leave
mov
das
repnz
xor
jl
add
jbe
dec
scas
sub
cmc
pop
pop
mov
incb
call
call
pop
sbb
hlt
ljmp
je
xor
adc
sbb
cmp
push
aam
jmp
sbb
or
scas
bound
sbb
test
push
jecxz
xor
xlat
out
sbbb
inc
fwait
call
out
test
sub
daa
adc
inc
mov
add
sbbb
inc
pop
sbb
pop
fsubs
and
arpl
cld
sub
sbb
lcall
outsb
xchg
mov
scas
test
inc
cltd
cwtl
loop
xchg
inc
scas
aas
inc
popf
lods
ja
data16
insb
test
fsts
xor
stc
ds
adc
push
jle
xor
popf
or
mov
adc
rcrb
aam
lea
cltd
imul
test
aad
xchg
insl
scas
and
push
or
jp
in
and
outsb
jecxz
pop
mov
mov
ljmp
psrad
and
inc
cmp
cmpsl
in
popf
ja
fs
aaa
push
sbb
inc
and
dec
pop
sbb
dec
pushf
or
jns
pop
je
xchg
sbb
leave
mov
jmp
sub
test
dec
add
add
or
loop
jne
mov
mov
arpl
pop
mov
aaa
es
push
int3
popa
in
ret
jnp
js
jmp
or
fucompp
jp
pop
xchg
dec
rcr
xchg
jmp
fdiv
fadds
scas
test
stc
or
fnstsw
fadds
xchg
mov
xor
lcall
ljmp
aam
add
jne
inc
sub
and
jecxz
jo
ret
leave
inc
add
aas
stos
adc
xchg
xchg
aam
enter
pop
incb
popf
add
ror
and
popf
ror
mov
fmull
mov
fs
and
mov
mov
xor
insb
and
xor
and
loopne
aaa
insl
sub
cmp
ss
movsb
xor
jno
and
and
in
dec
nop
icebp
jnp
das
jo
jae
push
stos
jne
mov
outsl
push
out
repnz
shll
sub
mov
dec
out
cmp
outsb
les
jp
lods
xlat
sbb
cli
out
sub
les
cmpsl
xchg
das
nop
data16
fdiv
xchg
sbb
mov
sbb
shrb
xor
cli
int
xor
add
xor
and
jae
repz
adc
mov
pop
fsubl
dec
mov
out
dec
jae
mov
mov
nop
hlt
jp
shrl
std
mov
cmc
inc
cmpsb
enter
nop
and
call
outsl
lea
push
mov
cmp
sbb
push
sub
int3
pop
mov
push
lcall
xor
neg
or
push
mov
lahf
addb
add
inc
cs
ljmp
jmp
jp
popl
push
xor
cmp
lods
mov
repnz
lcall
fadd
fists
dec
cld
aad
pusha
xor
dec
sti
mov
push
sahf
es
rclb
iret
cltd
arpl
std
dec
pop
cmp
subb
cs
sub
test
fmuls
xorl
cmp
mov
mov
mov
shlb
mov
mov
add
test
das
hlt
inc
cmp
out
push
fcmovne
stos
test
inc
mov
dec
addr16
dec
mov
mov
mov
inc
dec
add
push
aam
mov
mov
decb
sahf
loope
jmp
push
dec
fldenv
mov
aam
push
out
xchg
mov
ja
test
icebp
and
mov
leave
xchg
outsl
mov
adc
in
fldt
xor
mov
pop
inc
mov
cmpsb
add
push
pop
cwtl
jne,pt
xor
xor
lcall
in
enter
loopne
enter
cltd
fldcw
outsl
pop
cwtl
push
ja
or
divl
ret
xor
inc
inc
les
arpl
mov
cli
push
popf
lods
push
mov
xor
arpl
mov
mov
and
call
ljmp
cwtl
push
dec
jmp
sahf
fs
ss
sub
mov
lahf
jno
cltd
cwtl
jle
mov
popa
pop
fadds
dec
call
lods
add
dec
sti
push
mov
cmp
mov
loope,pt
hlt
movsb
cmp
and
in
ja
ror
jge
mov
movsl
mov
out
es
std
mov
mov
je
gs
shlb
push
stos
aad
xchg
sbb
ret
mov
mov
push
jp
mov
ds
imul
mov
repz
mov
ja
sbb
test
sbb
xchg
insl
xor
dec
mov
cmp
ss
scas
sub
mov
stos
push
bound
xor
rclb
mov
arpl
push
or
loope
fistps
sub
jmp
push
add
xor
dec
sti
or
xchg
cmpsw
and
js
leave
push
adcl
pop
shr
stos
add
iret
scas
mov
stc
scas
iret
cmp
ret
cmp
ja
incl
sarb
inc
dec
add
mov
ljmp
test
addr16
nop
adc
jge
mov
cli
adc
popa
pop
mov
stc
jecxz
inc
pushf
sbb
adc
adc
add
outsb
imul
cmpsb
fwait
jle
nop
pop
mov
test
int3
mov
fmull
test
lds
xchg
ror
mov
jbe
loope
fdivrs
out
inc
fs
repnz
es
cmp
mov
push
sbb
mov
pushf
push
shll
dec
ss
iret
ljmp
mov
in
pushf
std
mov
dec
pop
cmc
xchg
outsb
pop
and
xor
xchg
xchg
test
jecxz
jmp
jne
repz
mov
inc
jp
inc
sub
icebp
jnp
mov
mov
in
ljmp
push
mov
jo
roll
loope
add
es
rorl
cmpsl
lock
aas
mov
add
push
xor
fs
popa
pushf
fs
pop
arpl
xor
fstp
jno
adc
xchg
sahf
jae
arpl
shlb
jge
mov
es
testl
sbb
stos
xchg
loopne
inc
je
or
es
rol
jae
cli
ss
cmp
inc
inc
xor
and
pop
add
sub
cld
inc
lret
or
sbb
into
and
mov
shrb
int3
xchg
and
aam
push
in
xchg
dec
fadd
xor
jnp
mov
dec
repnz
sub
sarb
xor
test
mull
cmp
cmc
scas
aad
push
sti
cmp
sbb
dec
hlt
popa
xchg
stc
pop
add
push
hlt
jp
filds
add
jo
cmpsl
mov
push
stc
call
jl
into
mov
push
leave
fcoms
repz
in
les
loop
push
into
sbb
push
lds
pop
clc
in
pop
pop
mov
mov
insl
jne
stos
mov
pushf
xchg
xchg
pop
adcl
inc
push
adc
pop
loopne
mov
pushf
ljmp
mov
gs
pop
gs
loopne
push
or
lock
push
or
sbb
movsl
and
adc
push
scas
jmp
vandpd
xchg
mov
fmuls
std
adc
pushf
cmc
movl
sti
mov
aad
xor
dec
pop
dec
les
nop
cld
stc
xchg
repnz
or
nop
pop
push
icebp
ja
or
adc
lods
cs
dec
pop
jp
mov
add
rcrb
sub
lds
mov
push
mov
les
call
sbb
jno
mov
lret
les
outsl
mov
xchg
push
and
mov
push
mov
sub
jb
mov
fucomp
sub
popf
repz
push
xorl
pop
lods
jle
push
adc
cwtl
adc
push
fimuls
rolb
inc
ret
xor
test
lds
leave
jmp
push
in
out
cld
popf
inc
dec
cmpsl
pop
out
add
sahf
mov
xchg
lret
pop
daa
sub
xchg
jecxz
lock
cld
mov
push
jae
push
jmp
shrb
or
js
xor
in
mov
adc
cli
jecxz
push
int
lahf
jo
xchg
inc
addl
dec
into
sbb
out
cmpsb
andl
lea
mov
xor
adc
dec
pop
sub
mov
popa
gs
push
mov
sbb
inc
jge
fwait
loopne
add
leave
jb
sahf
pop
xchg
adc
stos
call
mov
fstpt
pop
in
xchg
push
out
xchg
and
push
scas
jns,pn
addr16
xchg
pop
cmp
xlat
mov
rclb
loop
jo
xor
dec
lea
fwait
inc
fadds
or
sub
shll
add
bswap
pop
pop
pop
jge
xchg
mov
cmpsb
dec
hlt
lcall
mov
imul
inc
dec
jns
icebp
sub
roll
xlat
aas
dec
lock
loope
sbb
xchg
add
cmpsb
cmp
mov
cld
push
outsl
ret
bound
hlt
pop
fwait
mov
or
inc
nop
stos
les
dec
or
je
push
jg
notl
mov
sbbb
mov
ja
scas
or
aas
dec
inc
cmp
aad
test
loope
jg
pop
stc
icebp
xchg
addr16
cltd
mov
fdivrl
xor
add
mov
scas
and
in
mov
or
inc
std
push
sti
fists
inc
rcrl
and
inc
and
dec
loop
pop
xor
add
xchg
sub
in
icebp
daa
xchg
inc
add
lret
hlt
jl
fwait
pop
test
add
call
fdivrl
xorb
out
mov
ljmp
jno
sbb
pop
sub
pusha
cltd
or
jle
xchg
nop
aad
repz
testl
addr16
mov
push
mov
mov
push
sbb
adc
fdivrs
xchg
arpl
mov
ret
pop
sti
jno
pop
or
inc
gs
cmp
orl
jno
xchg
mov
add
sti
pop
jmp
lods
shrl
sub
xchg
jns
ds
ret
testb
js
das
ljmp
testl
mov
xlat
mov
or
cli
fs
cmpsl
imull
push
jo
in
hlt
adc
frstor
aam
jle
enter
mov
js
jecxz
cltd
jo
insb
mov
fldcw
cmp
gs
push
mov
sub
mov
icebp
xor
mov
lea
pop
inc
out
jno
push
fistpll
xor
sbb
in
sub
mov
push
lock
mov
out
mov
shrl
insb
sub
mov
fidivrl
lods
mov
sub
add
mov
movsb
out
insl
loopne
stos
aam
stos
xor
add
and
insb
int3
shll
in
imul
cmp
sarb
lret
pusha
movl
fsts
mov
andb
cli
sub
dec
in
mov
mov
push
push
push
xlat
or
es
push
pop
rcl
negb
scas
mov
dec
sub
push
inc
shll
mov
xor
push
scas
adc
mov
enter
mov
out
hlt
sbb
xor
std
scas
mov
addl
and
jo
fcomip
mov
loopne
adc
mov
add
pop
xlat
or
repz
jle
repz
ljmp
sbb
rolb
inc
and
add
movsb
push
sub
pop
pop
and
or
sub
and
das
cmp
adc
inc
stc
int3
and
cmp
and
or
sbb
adc
lds
pop
xchg
adc
mov
and
jle
sbb
adc
int3
cmp
lea
and
mov
jo
mov
push
xchg
sub
inc
inc
lock
fmul
fildl
imul
cmp
out
push
hlt
mov
mulb
jmp
into
cmpsl
test
popf
shlb
add
adc
cmp
test
popf
sahf
movsb
mov
cmpsl
mov
hlt
es
fwait
inc
in
cmpsb
stos
or
xchg
pop
enter
imul
aaa
or
mov
sub
pop
inc
jne
bound
testl
mov
fcmovb
pop
popa
js
imul
push
push
and
pop
clc
outsb
lods
dec
mov
jb
jb
imulb
aas
xor
arpl
xor
cmp
vmwrite
adcb
push
popa
push
mov
adc
repz
pop
in
mov
gs
cmc
in
in
inc
cmp
aam
and
les
insl
mov
mov
xchg
cmc
das
popa
movsb
movsb
lods
jne
aad
push
pop
jnp
cmp
xchg
or
pop
lret
and
adc
adc
sbb
mov
or
jl
sarb
sbb
push
out
shrb
mov
jl
ss
lret
fcoms
sbb
data16
push
mov
cli
pop
outsl
sbb
mov
dec
in
loopne
push
or
loopne
jae
leave
mov
mov
push
jae
push
lret
xlat
jle
outsb
dec
jnp
or
cmc
sbb
jge
rol
jp
enter
inc
popf
fwait
mov
idivl
xor
movsl
out
sbb
push
and
testl
pop
sub
andw
add
lret
insb
lock
iret
push
xor
std
jge
movsl
mov
xchg
pop
or
cld
rclb
jg
xlat
sub
int3
mov
rclb
mov
jns
cli
addr16
sbb
xchg
and
xchg
xlat
push
mov
rolb
cmp
ds
add
out
mov
orl
xor
dec
sahf
cli
nop
push
mov
or
lock
adc
mov
fstl
jb
pop
adc
lods
cmp
dec
xor
pop
cmpb
stos
xor
add
pop
outsb
push
jae
mov
vcomiss
adc
xor
push
movsb
imulb
xchg
cwtl
and
cmc
insb
sub
shrl
andb
xor
push
pop
test
stos
cmpsl
scas
jge
and
inc
jecxz
mov
mov
repnz
fisttpll
lahf
in
fs
std
sbb
jnp
cwtl
adc
es
dec
stos
add
js
inc
cmp
mov
dec
lret
mov
mov
mov
daa
mov
sbb
lret
dec
cld
sahf
lcall
hlt
aas
mov
gs
out
scas
mov
stos
push
push
into
mov
push
fs
daa
andb
insl
jp
jae
sbb
mov
fwait
cmp
xchg
and
leave
pop
adc
ss
push
adc
lret
addr16
inc
xchg
loope
fwait
mov
test
lock
je
cmc
or
inc
xor
sahf
in
jecxz
sbb
icebp
cmpsl
nop
mov
dec
mov
push
enter
xor
lcall
jne
pop
cs
fdivs
push
push
push
jmp
lahf
pop
xor
ljmpw
and
stos
rclb
mov
jecxz
xlat
jno
mov
add
cltd
movl
adc
jae
push
mov
sbb
push
xor
pop
ljmp
cmpsl
mov
adc
ss
cmpsl
incl
out
daa
push
fcompl
ret
cltd
jno
pusha
sarl
scas
jo
push
mov
jnp
lds
cwtl
rolb
xor
mov
in
nop
and
jmp
mov
lahf
xor
add
and
fstps
lcall
adc
cli
jo
xchg
lcall
jl
int
mov
aaa
jl
add
pop
dec
pushf
ja
imul
aam
shl
dec
sub
and
stos
jne
push
pop
ror
xchg
jp
pop
insb
data16
cld
stos
mov
mov
add
das
hlt
pushf
jg
mov
or
in
stos
faddl
icebp
ljmp
and
xchg
add
iret
les
imul
adc
mov
xlat
out
sub
ljmp
test
arpl
xchg
mov
and
rcll
loope
bound
lret
mov
lcall
int
rcrl
or
lea
insl
jnp
frstor
dec
mov
mov
lods
sub
or
iret
mov
cmp
fists
cmpsb
aas
jecxz
push
hlt
popa
mov
ljmp
cwtl
dec
push
int3
fwait
or
mov
sti
xchg
jge
pop
popa
jns
subb
or
push
and
shll
insl
fistpll
je
rorl
popf
mov
lds
in
pop
shll
sbb
ds
aam
out
out
sub
cmp
jne
sahf
sub
xor
fmuls
call
xchg
jmp
inc
mov
adc
push
fs
out
or
sub
jo
sbb
xchg
std
jmp
add
mov
and
lods
inc
sbb
pop
mov
imul
lahf
fisubs
or
xchg
lret
xlat
cmp
xchg
mov
dec
into
cmpb
cmc
dec
sbb
pop
aaa
cmpl
mov
push
stos
mov
push
mov
into
jbe
mov
popf
inc
sbb
push
adc
inc
adc
add
insb
out
xor
sbb
std
lock
popa
or
xchg
lcall
cmp
pop
pop
pop
dec
sub
xchg
xchg
xchg
push
ffreep
scas
or
into
mov
sbb
sarb
daa
push
xor
das
ljmp
ficoml
in
fnstenv
mov
xor
insb
pop
mov
cld
mul
lds
inc
mov
test
mov
cmp
sbb
mov
jp
jae
fs
nop
jmp
out
stos
add
mov
or
mov
pop
mov
mov
movsl
aas
fcmovne
mov
addb
call
sarl
rcr
repnz
or
mov
xor
push
xchg
pop
or
xor
dec
mov
dec
ret
incb
sub
jne
push
push
pop
inc
or
push
repnz
mov
cli
cld
cld
xlat
mov
and
stos
mov
xor
inc
dec
mov
sbb
lods
cmp
pop
dec
jl
and
push
mov
push
sub
dec
cmpsb
xchg
lret
idivb
pop
mov
push
jle
cmpsl
sahf
sbb
mov
test
icebp
fsubrp
and
sarl
cmpl
js
insl
es
ss
or
aas
popa
pop
jnp
add
mov
sbb
push
aaa
xor
adc
sbb
movsl
mov
mov
jb
adc
icebp
adcl
filds
pop
mov
dec
adc
pop
mov
cmp
or
jae
push
scas
xchg
imul
sarb
mov
mov
inc
cmp
cmp
push
xchg
xor
or
mov
mov
test
jp,pt
test
fnstsw
pop
and
sbb
cmp
jge
cmc
aad
cmp
pushf
dec
shll
cmp
orl
xor
fwait
inc
outsb
rcrl
and
push
ret
pop
mov
pop
dec
lret
loop
ret
or
pop
data16
ficomps
daa
mov
adc
ljmp
ret
sarb
sbb
jb
cmc
out
scas
dec
xchg
xchg
mov
jp
outsl
std
fcoml
insl
loop
mov
push
or
cs
ficoml
iret
es
fdivs
rcll
cmpl
dec
xchg
sbbl
movsb
sbb
or
sti
pop
mov
out
std
outsb
sbb
stos
arpl
xchg
or
in
jp
push
sub
dec
and
ss
imul
jb
and
call
push
hlt
adc
mov
inc
or
dec
rolb
adc
mov
test
popa
jmp
or
pop
pop
or
loope
mov
es
ret
ficomps
push
xchg
in
inc
data16
fidivl
sub
cs
dec
xchg
cmp
mov
mov
popa
xchg
mov
dec
subb
push
into
rep
ret
mov
cmp
and
hlt
outsb
jl
and
dec
dec
lret
mov
push
pusha
or
int3
sahf
push
xor
or
dec
push
shrb
pop
cmp
xor
fmuls
fisttpl
jae
adc
iret
pop
imul
push
fsubl
aaa
cmc
test
fcoml
jb
sbb
sub
test
mov
or
mov
add
cld
pop
mov
ljmp
into
fisttps
jbe
repnz
cwtl
in
sbb
mov
add
xchg
sbb
sub
lcall
add
sub
jmp
or
and
dec
stos
sti
ret
add
push
mov
insl
push
mov
jb
test
mov
sub
lret
mov
jg
lods
xor
dec
scas
push
int
jecxz
fists
call
or
in
jno
fsubrp
lret
imul
xor
jnp
insb
jno
xchg
and
fwait
arpl
loope
or
cwtl
andb
lea
mov
adc
iret
dec
mov
in
cmpsb
and
mov
sub
xor
cmp
mov
sti
add
push
pop
xor
dec
push
push
mov
imul
pop
push
sbb
pop
fldenv
mov
pop
ret
lcall
ret
imul
dec
loop
cmp
lcall
dec
push
in
cmpsb
push
inc
cmp
fidivl
sarl
adc
imul
call
addb
je
jnp
cmp
sub
imul
shr
adc
dec
and
stc
lahf
or
xchg
stos
dec
pop
fwait
pop
lahf
xor
inc
je
test
call
iret
ret
lds
test
ds
repnz
jb
push
adc
push
clc
jg
stos
sbb
mov
mov
or
mov
loope
dec
loopne
lret
adc
rorb
xchg
xchg
lods
fistpll
jns
das
jge
rcll
decl
call
push
jmp
fs
ret
fsubr
sub
pop
es
xacquire
lret
lea
xchg
icebp
cmp
adc
mov
push
sub
hlt
jns
mov
pop
shrb
mov
and
push
lret
icebp
call
or
fnsave
mov
decl
les
push
jae
jo
mov
cmp
jle
mov
add
push
outsb
sub
push
into
scas
dec
int
das
sahf
addr16
pop
lcall
loopne
mov
mov
fldt
addr16
or
fwait
adcl
cld
test
movsb
push
lret
int
xchg
jl
mov
pop
pop
mov
xchg
mov
jbe
fsub
mov
jns
hlt
sbb
in
or
or
fdivrl
xchg
dec
orb
push
aas
aam
lret
pushaw
dec
jg
push
and
jns
repnz
mov
adc
dec
int3
mov
push
lret
repnz
mov
mov
shrb
sbb
imul
std
dec
pop
cmp
push
sbb
jne
push
xchg
push
pop
in
pop
cmp
sbb
loopne
mov
xchg
mov
mov
and
dec
xchg
clc
mov
sub
pop
lods
mov
jl
dec
cs
sahf
ja
inc
clc
adc
sub
push
aas
sub
push
in
mov
in
sub
cmc
stos
int3
mov
sahf
out
push
mov
and
add
or
in
jne
out
lods
outsb
pop
push
lahf
push
orl
arpl
adc
lock
jg
stos
fadd
fs
jae
sarb
xorl
pop
adc
popl
mov
scas
adc
pusha
cmp
ficoml
cmp
loop
push
push
mov
pop
inc
cltd
mov
pop
push
xor
test
out
test
lods
pop
aaa
push
sub
pop
xchg
dec
pop
ja
or
xchg
push
inc
and
daa
adc
fimuls
mov
nop
mov
ljmp
xchg
and
sub
jmp
push
add
jge
and
test
sti
addr16
out
repz
push
roll
repnz
xor
gs
lret
mov
inc
adc
sbb
xor
fwait
mov
pop
in
movsl
xor
add
lods
or
lahf
push
xchg
call
bound
mov
gs
sahf
pop
jb
xor
fucomp
in
mov
xor
andl
cmp
loope
adc
and
shlb
hlt
and
ret
sub
pop
cmp
mov
aam
stc
add
jnp
push
std
pop
adc
lret
jecxz
dec
or
je
mov
sahf
sahf
or
jg
sub
sahf
add
jge
cmc
ja
xchg
bound
push
cli
arpl
xchg
aas
leave
xchg
lea
cltd
and
or
adc
push
iret
lret
adc
sub
jmp
inc
dec
sbb
mov
inc
xor
rcrl
aaa
imul
push
lcall
mov
xchg
loope
mov
and
nop
test
js
add
mov
pop
loope
push
pop
fsubl
nop
or
push
test
repnz
cmp
std
in
inc
xor
mov
adc
rcrl
in
out
jae
cltd
jge
adc
pusha
adc
in
push
adc
fcomip
sbb
insb
push
inc
mov
mov
mov
stos
sub
out
dec
fdivp
int3
hlt
pop
testb
data16
cmc
xor
xchg
ficompl
pushf
dec
pop
outsb
mov
scas
push
out
sbb
xchg
xor
adc
mov
pop
punpcklwd
pop
sbb
adc
dec
cmp
aaa
stos
js
and
jbe
into
pop
ljmp
xor
jae
cwtl
stos
add
mov
inc
aam
andl
mov
adc
imul
mov
sbbl
sub
loopne
sbb
mov
mov
cmc
push
test
mov
dec
lods
sub
leave
and
icebp
in
jne
movsb
cmc
sbb
dec
xor
popa
adc
push
or
cmpsb
mov
lods
fwait
lcall
jbe
mov
inc
xor
in
or
cld
std
mov
or
jecxz
mov
adc
repz
xor
inc
in
movsb
fadds
pop
sahf
xor
repz
call
nop
int
testl
gs
add
add
cmp
push
pop
xchg
and
and
dec
adc
cli
int3
mov
pop
lret
xchg
or
sub
test
aad
push
outsb
jmp
movsb
or
jle
aad
js
call
adc
mov
leave
repz
divl
jns
inc
outsl
sar
movsl
fimuls
je
or
nop
pushf
mov
mov
sub
movsl
int3
add
scas
jnp
dec
jne
pop
push
adc
mov
popf
mov
out
xchg
xor
pop
repnz
mov
and
lock
rclb
lret
iret
xor
inc
push
imul
in
leave
stos
push
in
inc
es
js
cmpsl
adc
inc
fs
cltd
in
push
ret
call
push
mov
push
insb
pop
repnz
in
jo
pop
out
sbb
movsl
xor
dec
push
add
mov
add
cltd
jo
dec
mov
xor
mov
repnz
mov
mov
arpl
in
test
les
jae
cmc
loope
push
es
or
cmp
int3
cltd
add
adc
sub
mov
cld
cli
mov
xchg
jg
or
mov
jne
add
cmp
mov
cmp
xchg
in
push
fidivl
mov
mov
cmp
test
pop
repnz
mov
jp
movsl
loopne
xor
push
cwtl
mov
and
lret
pop
mov
mov
in
pusha
into
push
outsb
xchg
inc
xor
jecxz
fidivrl
inc
lock
ljmp
xlat
shr
clc
movl
xchg
fsubr
movsb
test
cmc
std
inc
pop
mov
clc
ss
add
cld
cld
adc
jne
out
or
xor
cmp
icebp
movsl
clc
sub
movsb
sbb
rclb
ret
call
inc
xor
mov
pop
fldcw
divb
add
popl
mov
test
pop
pusha
pop
std
popa
pop
or
jne
sub
xchg
movb
gs
incl
dec
jbe
xor
xor
push
cmp
and
aaa
arpl
ss
mov
aaa
dec
jne
sbb
or
ret
and
sub
xor
sbb
in
icebp
xor
stos
testb
stos
nop
xchg
xchg
and
add
adc
jg
add
decl
add
xchg
xchg
or
fcomps
ss
adc
sub
mov
inc
sub
arpl
dec
cltd
lods
lahf
mov
lret
inc
inc
dec
xor
mov
fildll
adc
pop
add
testl
int3
mov
sub
repz
mov
adc
insb
xchg
xor
sbb
jmp
cmp
icebp
pop
dec
das
pusha
jbe
bound
cmpsl
aad
xor
rclb
adc
popa
lods
test
int
nop
push
ror
push
sarl
jle
aam
std
mov
lcall
imul
out
fistpl
jmp
fs
mov
push
pop
jl
cmp
xchg
les
push
mov
repz
and
push
sbb
add
adc
shll
jp
cmp
jmp
push
or
outsb
sub
xchg
xor
daa
pop
jno
cli
rol
xor
je
ds
daa
mov
xchg
je
shrb
sbb
adc
roll
mov
dec
mov
and
lahf
jne
ficomps
mov
mov
outsb
sbb
stc
dec
les
les
ret
jg
lea
flds
jno
xor
filds
and
push
sbb
ret
pushf
fbstp
fwait
outsl
mov
ret
add
adc
xchg
add
jp
push
sarl
jl
xchg
std
pop
lods
jo
lahf
xor
xchg
mov
inc
inc
sub
cld
nop
mov
cwtl
adc
cs
addr16
jl
cmpsl
adc
iret
out
fs
xlat
rclb
je
inc
aam
rol
int
ljmp
cld
and
mov
ljmpw
push
jmp
ss
mov
add
inc
pop
and
inc
xchg
and
xlat
daa
jo
aaa
cli
pop
push
imul
incb
icebp
psubb
push
jo
adc
xor
dec
data16
inc
mov
pop
mov
add
ljmp
adcb
xchg
pusha
es
sti
or
lahf
stc
jbe
adc
and
push
scas
jmp
stc
jnp
test
sub
mov
lods
mov
stos
and
mov
add
mov
fs
in
sbb
arpl
pop
sub
mov
push
dec
aas
mov
inc
push
push
pop
push
les
add
int3
je
in
in
stos
popa
jmp
jae
pop
mov
clc
pop
add
cmp
and
sbb
jle
lret
pushf
push
ja
push
jbe
jecxz
inc
add
mov
test
add
shl
test
xor
inc
and
xchg
add
aaa
aad
sub
jo
in
outsb
xchg
mov
mov
shl
int
ret
js
sub
xchg
mov
mov
cmp
mov
mov
and
sar
xlat
imul
xchg
movb
pop
in
pop
adc
dec
mov
insb
negb
vmread
movsl
or
mov
sub
inc
adc
into
sarl
pop
popf
xor
jmp
and
add
dec
pushf
pop
jg
lods
fs
icebp
pop
adc
sbb
je
and
sbb
adc
in
pop
test
pop
cli
sub
pusha
rcll
ja
test
bound
add
adcl
adc
cltd
out
cmc
or
mov
sub
or
sub
fisubrs
std
dec
mov
ss
mov
mov
xorb
mov
mov
addr16
jae
addb
mov
xchg
xchg
adc
mov
sbb
add
mov
loope
cmp
sub
push
aam
sub
xor
or
scas
mov
push
xor
imul
dec
jle
inc
lcall
fsubr
sbb
inc
sarl
movsl
data16
ja
adc
add
adc
push
ret
cli
push
cmp
sbb
out
test
sti
std
jns
push
dec
sub
mov
es
rcr
fsubl
push
jle
push
xor
outsl
sbb
sahf
pushf
or
nop
sub
repnz
sbb
fcomps
pop
adc
xchg
pop
jns
push
xchg
rorb
decl
xchg
push
mov
dec
mov
pop
lahf
test
adc
scas
pop
push
cs
pop
xor
pop
mov
int
sbb
push
mov
xchg
into
cmpsb
pop
inc
imul
lods
pop
and
lods
or
aam
shlb
xchg
iret
cmpsl
inc
shll
fsubrp
xchg
test
mov
repz
pop
mov
mov
movb
adc
ja
add
xlat
cli
arpl
movhlps
rclb
aad
lret
popa
add
mov
mov
push
movsb
jb
pop
mov
push
loope
adc
pushf
jecxz
mov
clc
lea
pop
inc
in
sbb
adc
sarb
sub
mov
or
mov
jl
sbb
rcr
scas
push
dec
inc
jnp
sub
xlat
jmp
test
fisttps
enter
bound
push
push
and
lret
cli
iret
insl
mov
or
dec
hlt
mov
xor
sub
xor
lods
sbb
adc
jl
stc
or
leave
mov
cmp
pop
xchg
and
jg
mov
popf
imul
push
lds
popf
rclb
divl
nop
dec
mov
cmp
das
pop
ret
xchg
push
cmp
ficoms
mov
cmc
jb
jne
push
inc
cli
adc
insl
repnz
add
xor
ret
aaa
cld
sub
insb
jle
mov
push
xlat
cltd
add
lahf
lcall
out
xor
jp
sahf
aas
call
test
or
les
xchg
jnp
xchg
and
adc
test
and
lahf
imul
enter
loopne
adc
and
and
and
push
push
cli
cmp
inc
loope
inc
xor
gs
push
or
popl
add
aaa
loopne
jno
out
andl
sysexit
dec
in
insl
pop
mov
ljmp
out
mov
push
add
repnz
imull
sub
aam
les
call
xor
decb
cmc
push
pop
lahf
div
xchg
pop
aam
or
sbb
in
fdivl
adc
addl
lahf
sub
cmp
jne
adc
sbb
push
in
movl
inc
push
inc
mov
cmp
repz
lock
shrb
into
bound
sbb
adc
stos
fwait
test
add
sub
mov
aad
je
sti
in
mov
scas
xor
stos
cmc
or
sub
test
push
lret
jge
xchg
mov
add
rcr
lods
hlt
addl
leave
jnp
mov
cmp
test
inc
repnz
mov
xor
js
or
icebp
data16
dec
sub
fadds
add
mov
mov
mov
mov
test
and
dec
inc
jnp
and
adc
push
ret
inc
icebp
add
sub
test
cmpsl
push
iret
sbb
and
pop
inc
and
stos
in
lds
ljmp
sub
pop
out
lret
shrb
in
adc
adc
xor
inc
test
xchg
sub
mov
xchg
fisubs
mov
ja
push
mov
dec
xchg
enter
cmp
xchg
mov
mov
loop
mov
gs
mov
xchg
jl
shlb
je
and
sbb
popf
jbe
xchg
inc
xlat
cltd
dec
rcrb
mov
cmpsb
jae
mov
repz
in
sbb
push
mov
imul
mov
cmpsl
xchg
dec
inc
adc
mov
jno
mov
pop
rcrl
jg
jle
mov
jae
ljmp
mov
and
push
xor
out
fsubrs
loop
push
mov
xchg
xchg
imul
add
mov
sbb
dec
push
xor
pop
cwtl
das
call
jp
or
and
lahf
push
lods
and
xlat
push
push
gs
outsb
rcll
adc
push
adcb
sar
fidivrl
loopne
fnstsw
pop
or
cmp
mov
add
xchg
hlt
aad
cmpsb
push
pushf
pushf
les
stos
imul
mov
jge
mov
inc
push
ret
cmp
xchg
loop
push
cltd
sub
or
push
mov
dec
es
mov
push
adc
out
mull
xor
mov
in
cmpsl
xchg
imulb
pop
mov
adcl
mov
cmpsb
cmp
rcrl
cwtl
push
leave
lds
clc
dec
jmp
mov
add
shl
clc
in
mov
cwtl
xorl
cmp
xor
mov
lcall
mov
ret
pop
pop
cmp
mov
mov
mov
mov
fdivrs
clc
lock
push
xchg
les
pop
jb
roll
pop
jbe
repnz
ja
add
jno
gs
repnz
in
cld
sbbb
fcomps
and
movb
clc
or
std
lods
out
mov
outsl
jne
popf
insl
dec
push
and
repnz
lods
imul
sub
mov
xchg
mov
xchg
inc
sbb
inc
add
leave
jl
push
in
cmp
push
nop
pop
mov
test
push
dec
inc
push
cmp
xchg
jmp
stos
fcoms
jae
stos
mov
cli
jecxz
xor
inc
js
inc
rorb
ret
jb
iret
js
decl
pop
dec
pop
push
dec
or
ljmp
adc
shrl
aas
in
aam
pop
hlt
add
ret
or
and
loope
add
ds
pop
lods
out
or
icebp
mov
jmp
adc
dec
push
or
xorb
outsb
scas
int3
add
adc
pop
imul
lret
adc
sub
sub
jmp
xor
mov
repnz
out
xchg
mov
insb
ja
push
scas
ret
push
int
out
push
xchg
int3
xor
jle
lret
add
popa
loope
xor
push
imul
and
je
mov
sbb
dec
cli
push
cltd
movsb
addr16
shl
push
enter
int3
fisubrl
lds
icebp
add
or
je
test
insb
dec
test
push
and
dec
cld
call
cmp
andb
addr16
shld
cmp
ljmp
push
cmp
sar
add
inc
jns
add
inc
lret
pushf
aam
or
mov
fldenvs
imul
add
mov
ret
sahf
and
xor
fwait
cmp
mov
outsl
push
fisubs
xchg
add
in
repz
inc
aam
psraw
mov
idivl
add
loopne
enter
dec
outsl
dec
cmpsl
aaa
pop
negl
xor
mov
cltd
pushf
sbb
mov
out
repnz
iret
add
push
jae
das
xorb
mov
iret
shll
push
cmp
fsub
cmp
ljmp
test
lret
sub
and
fsub
enter
popf
addb
sbb
in
aam
adc
dec
int
pop
into
dec
cmp
push
je
es
fcomps
push
rol
adc
pop
fs
jmp
mov
in
outsl
fldl
sub
sbb
and
stos
or
pop
ret
out
push
pop
fmuls
fdivl
adc
jb
cmpsl
sub
movb
cmc
in
lahf
js
mulb
nop
insb
daa
push
out
jae
mov
cmc
stos
xchg
rcrb
sahf
xchg
push
mov
mov
daa
cmp
add
in
dec
or
sbb
jp
bndldx
mov
pop
popf
into
lret
mov
repz
add
or
xchg
push
outsb
cltd
jne
xchg
loop
and
add
push
and
push
pop
icebp
imul
cmpsl
jb
fs
dec
insb
mov
test
call
cs
test
xchg
sbb
mov
xchg
push
jne
loop
xchg
jg
loope
xchg
jno
std
inc
shrl
mov
icebp
add
js
xor
gs
icebp
jno
dec
lock
sbb
pop
xchg
inc
jl
and
cmp
xchg
out
cmp
mov
out
repnz
mov
mov
or
outsl
movsl
mov
test
mov
or
outsb
imul
add
test
or
cmp
xchg
pop
add
ret
xor
std
and
mov
insb
jle
xor
outsb
shl
xchg
inc
imul
xchg
xlat
insl
cltd
jge
mov
mov
xchg
inc
jns
testb
or
jno
mov
and
xor
xchg
inc
or
cmp
or
mov
orl
outsl
push
ds
or
leave
xchg
in
pop
test
lcall
jl
push
mov
ret
fnstenv
test
lea
xor
pop
fwait
or
in
xchg
jmp
mov
test
push
cld
fldcw
mov
lcall
jge
lods
sub
in
sbb
mov
lcall
inc
jmp
ds
or
in
out
mov
mov
mov
adc
or
pop
push
inc
mov
sti
dec
insb
inc
push
or
cmpb
dec
gs
insl
add
mov
mov
cmpsl
inc
int
xchg
mov
xlat
sbb
cs
push
jbe
mov
ret
rcrb
in
in
enter
xchg
repz
push
ret
repnz
push
adc
shrb
sbb
cmpsb
adc
xchg
sbb
mov
jbe
adc
jp
pop
out
adc
js
pop
pop
out
loopne
dec
lock
mov
xchg
pop
flds
ja
iret
and
mov
gs
and
mov
or
or
adc
scas
mov
imul
test
jbe
jo
jo
xchg
push
dec
or
lahf
femms
pop
cmpsb
mov
insb
fistpl
stc
xor
jg,pt
xor
mov
xchg
movsb
sbb
mov
dec
aad
cmpl
stos
mov
dec
pop
mov
or
fistps
pop
aam
pop
lods
mov
dec
cmp
out
cwtl
or
clc
in
jmp
rep
push
movsb
stos
les
scas
icebp
adc
pop
xor
adc
subl
jmp
xorb
lret
aad
popa
movsl
dec
daa
lret
or
pop
xchg
test
lret
push
sbb
lock
inc
lock
fistl
dec
push
adc
or
shll
js
sub
and
push
pushf
mov
hlt
cmc
push
stos
lock
add
loopne
inc
loopne
lahf
popf
add
leave
sbb
lahf
sbb
jmp
stos
or
adc
jns
pop
aas
ja
cs
out
bound
es
mov
inc
insb
lock
fwait
inc
scas
push
pushf
dec
adc
outsl
jmp
mov
pop
push
in
jp
js
call
xor
dec
jp
in
in
add
lret
pop
mov
clc
xor
aad
or
int3
add
sbb
ljmp
jge
out
and
outsb
cli
cwtl
aam
addl
lret
int3
mov
mov
dec
nop
sbb
jbe
pop
rcll
cwtl
mov
pop
xlat
mov
aad
mov
jo
inc
pop
xchg
arpl
push
lret
add
mov
adc
mov
mulb
inc
decl
insb
inc
cmp
xchg
lret
popa
movsb
push
jle
call
jmp
cmpsb
addl
push
lahf
push
jmp
inc
aad
mov
movsb
popa
jae
jno
cmp
xchg
mov
je
jmp
add
sbb
outsl
mov
push
clc
jl
mov
push
jmp
decl
cmp
adc
add
jg
cld
add
mov
and
in
xor
xor
xor
push
mov
ret
rclb
dec
imul
in
rorl
sbb
jl
push
ret
fildl
or
js
xchg
into
push
sbb
pusha
xchg
test
mov
leave
xchg
jg
inc
outsb
sub
cld
sub
inc
mov
sub
pop
mov
subl
lods
ljmp
loop
pop
fucomip
js
cmp
dec
lea
jmp
je
push
dec
das
mov
imul
subb
popf
lock
imul
aas
or
cld
movsl
sub
sahf
fbstp
cmc
pop
xchg
sbb
cmp
fldenv
xchg
movsb
jmp
mov
inc
inc
iret
or
jnp
mov
std
lock
jge
outsl
pop
outsb
xchg
iret
xchg
loope
cmc
push
add
loopne
out
or
popf
movsl
mov
ljmp
in
xlat
mov
xchg
outsb
jp
in
fistpl
pop
dec
rcl
dec
push
sub
xchg
enter
sbb
outsl
mov
mov
popf
and
or
push
jl
mov
mov
sbb
jne
scas
test
add
imul
adc
sbb
sahf
cs
dec
push
inc
jae
adc
loop
push
jne
clc
add
jnp
or
ror
pop
insl
push
fdivrl
mov
in
add
sub
or
popa
in
test
in
add
pushf
or
repz
pop
dec
mov
mov
iret
insb
rorl
jmp
pusha
pop
aaa
or
icebp
xchg
cmp
fsub
xlat
mov
jl
sahf
or
or
push
pusha
cmp
xchg
or
mov
and
mov
andb
rcll
mov
loopne
stos
pushw
adc
xor
inc
lret
inc
imul
stos
clc
jnp
mov
inc
decl
in
or
sahf
scas
inc
mov
int
testb
lahf
xlat
jmp
mov
push
fwait
sbb
int
xor
sti
sub
push
ret
aam
mov
pop
test
testl
sub
mov
xor
ss
in
sbb
mov
js
or
mov
and
lds
mov
js
cltd
aas
in
std
and
dec
mov
insl
mov
xor
das
fsts
lret
mov
mov
dec
mov
pop
int3
mov
hlt
mov
aas
notl
cmp
mov
ja
jl
sbb
cwtl
dec
fsub
fadds
out
leave
das
call
push
repz
sbb
cmp
je
stos
adc
lds
rorl
pop
pop
out
inc
enter
pusha
int3
jnp
pusha
cltd
fnstenv
data16
sbb
pop
pop
fdivs
repnz
sub
icebp
outsl
sbb
push
pop
sarb
movsl
fwait
dec
adcl
repnz
fidivs
jge
mov
mov
fs
shrb
adc
ret
lret
mov
lods
je
add
jg
and
adc
dec
cmpsb
cmp
push
sbb
repnz
aas
xchg
sbb
mov
pop
add
push
lea
pop
out
inc
sbb
pop
and
xchg
push
in
mov
data16
cmpsb
push
sarl
jae
and
xor
cmp
jp
and
xchg
push
inc
push
imul
jg
xor
push
mov
mov
jb
stc
dec
mov
test
rep
stc
dec
cmc
lea
jecxz
lret
cmp
repz
cld
out
mov
negl
movb
xor
mov
sbb
mov
lret
loop
cltd
push
pop
push
pop
fisubrl
jecxz
adc
fidivl
jecxz
out
mov
in
outsl
jne
add
ja
test
sahf
add
gs
pop
das
mov
dec
push
fucom
movsb
pop
cmp
ficompl
cmpsb
mov
jle
push
fbld
fsubrs
in
cmp
out
into
mov
cwtl
loop
inc
dec
lock
pop
mov
ss
xor
pusha
lahf
cs
aam
and
pop
and
sbb
movsb
andb
adc
and
mov
neg
push
lahf
push
jg
imul
mov
sbb
stos
jb
jno
sub
xor
rorb
sub
adc
loopne
das
ret
sbb
and
shl
ret
pop
loope
fwait
popa
aam
jns
mov
add
arpl
sub
inc
cltd
jb
and
pop
adc
int
idivb
or
mov
dec
inc
jb
xlat
insb
std
into
mov
loopne
add
xchg
mov
pop
mov
mov
jmp
out
and
push
out
popf
aaa
mov
ret
cmp
es
or
sub
push
cmp
outsl
jnp
sbb
lea
in
sbb
push
rorb
xchg
adc
je
inc
xor
mov
mov
mov
bound
iret
or
push
pop
cmc
lods
jns
jb
jmp
popf
add
imul
cs
and
negl
mov
test
add
nop
leave
mov
dec
sarl
repnz
mov
sti
mov
adc
jge
fistl
mov
sti
lcall
aad
std
lds
or
xchg
orb
push
test
cs
adc
insl
xchg
add
lods
ss
out
inc
divl
subl
sbb
rol
sub
sahf
test
das
inc
ds
gs
cmp
outsb
lret
xchg
movl
xchg
cld
movsbl
and
fwait
and
xchg
inc
push
add
enter
mov
imul
insl
mov
add
dec
das
daa
shl
jno
push
data16
lcall
adc
ss
inc
aad
xchg
mov
add
enter
jecxz
mov
push
mov
inc
hlt
mov
adc
mov
bound
imul
cltd
pop
push
ss
add
mov
sbb
sbb
sarl
and
shlb
shll
or
clc
ss
jl
cld
sbb
xchg
fcmovbe
jnp
nop
cld
in
mov
repnz
push
mov
adc
mov
push
ja
inc
mov
mov
mov
aam
lret
dec
pop
repz
mov
aaa
fimull
dec
js
stos
data16
inc
mov
inc
sub
jecxz
adc
push
test
cmp
insb
sub
mov
sti
jmp
int
shrb
push
cwtl
fisubrs
mov
aas
lahf
into
push
push
out
pop
lret
sbb
imul
fildl
inc
cmpsb
cmp
mov
mov
push
shrb
mov
lahf
cmp
enter
dec
lock
aas
adc
push
add
dec
int3
inc
je
sbb
test
repz
push
inc
lret
mov
mov
inc
das
xchg
mov
or
mov
add
jo
or
cmpsl
mov
pop
mov
xchg
push
inc
sub
sbb
mov
lret
mov
mov
fs
sub
scas
mov
xor
stos
pop
iret
xchg
icebp
call
test
orl
add
stc
popf
ljmp
icebp
and
mov
mov
and
lods
mov
cwtl
xchg
push
lds
call
xchg
notb
dec
push
push
xor
push
inc
outsb
std
outsl
push
scas
and
rorl
jecxz
call
ret
inc
xchg
out
sbb
lret
scas
test
mov
jnp
rorb
xchg
xlat
sbb
adc
mov
inc
xor
push
ret
int3
push
cwtl
inc
rorb
cmc
or
xor
or
dec
out
sbb
int3
push
dec
inc
ret
pushf
stos
mov
je
test
push
fadds
clc
ljmp
push
orl
mov
lock
xchg
sti
sti
dec
stos
fidivs
js
test
and
out
js
mov
fwait
arpl
push
xor
sub
mov
mov
aam
clc
mov
add
cmp
aaa
mov
outsl
ljmp
xor
and
popa
add
sub
imul
cmpsb
push
mov
imul
clc
cs
mov
jne
dec
add
repz
jo
mov
sbb
ret
scas
cld
enter
adc
subb
inc
shlb
cmp
xor
push
or
mov
jl
dec
loop
loop
push
push
mov
pop
loop
sub
or
and
pushf
orl
js
jge
mov
cld
lret
inc
les
mov
xlat
pop
xchg
into
mov
xchg
pop
cs
push
shr
jno
or
mov
dec
and
aad
mov
jae
stc
xchg
adc
test
lret
adcb
pop
and
adc
pop
dec
xchg
xchg
jge
fldt
test
fs
loop
ja
push
adc
pushf
lds
out
les
adc
xor
mov
xor
jne
or
push
aaa
mov
xor
fwait
out
jb
int
sub
or
pop
fistpl
cmp
xor
fs
xchg
lret
rcrb
xchg
daa
lods
fmuls
jae
push
cmpsb
lret
adc
fsubrl
pop
adc
stos
mov
mov
insl
fbld
les
jg
loop
push
push
add
pop
lcall
pusha
test
sbb
push
mov
dec
es
jb
add
addr16
insl
push
and
sub
adc
maskmovq
divl
lcall
and
pop
ret
pop
add
lret
sahf
cltd
xchg
pushf
mov
les
dec
xor
push
stos
imul
ret
lcall
push
fsubs
sub
add
cs
mov
lahf
out
stc
mov
repnz
mov
out
sbb
out
scas
pusha
mov
mov
xor
das
outsb
inc
pop
pushf
enter
data16
sbb
ja
jg
jae
lods
test
mov
icebp
push
sub
movsl
arpl
cli
fnstcw
mov
adc
jbe
sub
bound
push
cmp
jmp
sub
in
push
jns
mov
rclb
insl
xlat
pop
out
ret
popf
aaa
xchg
lds
sub
stc
test
ret
xor
es
xor
xor
sti
xor
dec
pop
cmp
ret
jns
pushf
les
jae
inc
std
idivl
insb
lret
push
movsb
dec
pop
jae
stos
adc
outsb
mov
hlt
or
and
xor
cmpsb
jp
rcrb
push
push
push
mov
sbb
sbb
sub
and
cmp
mov
sub
dec
fstpt
bound
sub
ror
and
stos
lock
push
cmpsb
in
cmp
stos
mov
xchg
lods
fsubr
repnz
inc
jns
outsl
xchg
mov
sbb
cwtl
rcrl
pop
sti
jp
and
call
imul
xor
jo
xor
and
cmp
push
xor
pop
in
xchg
push
dec
in
or
into
lcall
int
mov
jp
lods
into
jg
push
test
jns
in
xor
out
hlt
push
dec
pop
mov
sbb
ret
lcall
insb
inc
jp
popf
aas
xlat
out
call
pop
lret
mov
sub
fiaddl
loope
add
dec
aad
ficomps
int
shlb
xor
mov
push
rclb
dec
aad
mov
push
sub
test
cltd
movsl
xlat
jo
fmull
lods
addr16
mov
xor
jg
sub
or
jge
add
inc
push
xabort
pop
sub
imul
sahf
xor
test
mov
pushf
scas
cmpsl
add
fnstsw
in
ds
ljmpw
sub
push
or
jmp
enter
stos
adc
scas
shl
lock
ret
sbb
mov
cs
pop
sub
push
and
cmp
adc
push
push
add
es
stos
cltd
das
mov
je
xchg
fucomp
push
xlat
dec
mov
push
jle
mov
shlb
rolb
int
jecxz
sub
and
jbe
fsubs
sbb
stos
pop
sub
xchg
push
sub
and
mov
fisubl
mov
dec
fisttps
xchg
xor
popa
xor
sub
pop
lret
ds
mov
dec
lock
ljmp
scas
adc
jle
push
in
xor
lock
pop
adc
dec
jne
adc
adc
xor
sti
sbbb
fiadds
gs
in
mov
dec
dec
jge
lret
movsb
jle
xchg
xor
sub
lea
mov
inc
fdivl
add
lcall
lret
push
cmpsb
ljmp
xchg
jbe
mov
dec
cmc
jl
mov
pop
ror
fcmovbe
pop
sub
iret
fcomps
loop
out
aas
cmp
add
insb
ja
jp
js
daa
jo
mov
rorl
repnz
scas
imul
mov
mov
mov
movsl
ds
dec
mov
out
jne
jecxz
incl
and
add
xor
or
ja
je
xchg
jb
fstl
hlt
nop
mov
xchg
pop
dec
shrl
shl
stc
cmc
cmp
imul
sahf
cld
das
gs
int
aaa
nop
enter
xchg
lock
loope
pop
inc
arpl
clc
out
dec
inc
sarl
mov
test
inc
hlt
movsl
int
pop
add
push
inc
clc
scas
inc
fcomp
das
cli
mov
push
or
in
bound
mov
inc
sub
add
rcrl
mov
pop
ret
es
add
dec
arpl
jo
sbb
mov
mov
test
dec
cwtl
mov
mov
jge
cmp
add
js
adc
dec
push
mov
out
inc
xor
jbe
xor
dec
cld
add
inc
call
loopne
pop
jae
lods
dec
xor
sti
ret
jg
xor
pushf
aaa
mov
jmp
and
or
in
popf
mov
dec
daa
inc
and
lahf
push
mov
xor
adc
sub
mov
xchg
mov
adc
jae
imul
mov
dec
sub
scas
aaa
push
ss
or
rcl
loope
lods
mov
lods
sbb
imul
mov
lret
cmp
xor
pop
add
cmp
sbb
cli
arpl
ss
lahf
xorb
xchg
call
or
push
or
xor
cmpsl
je
pop
and
pop
inc
cmp
sbb
subl
arpl
mov
stc
jl
movsb
or
out
icebp
mov
lock
popl
clc
push
jge
in
sbb
push
cmp
xor
ja
mov
jb
inc
mov
dec
cmp
mov
in
mov
push
movsb
xor
arpl
mov
imul
jp
lods
mov
mov
cmp
cmp
adc
dec
ret
aam
daa
mov
cmp
and
jns
cmp
stos
jne
and
repz
and
mov
mov
and
repz
ror
lods
sahf
jmp
push
fistps
in
cmp
add
xor
mov
sub
arpl
push
pop
pop
sbb
mov
popa
sub
ja
stc
pop
lret
lea
xlat
sbb
xchg
or
pop
cld
in
pop
mov
jbe
dec
add
ror
std
mov
out
sub
cmpsb
mov
inc
into
xchg
insb
jb
pop
mov
popf
lcall
adc
cmc
jb
stos
sub
xor
inc
adc
xor
cmp
ss
mov
pushf
lds
hlt
fnsave
pop
or
daa
insl
or
sub
repnz
sahf
loop
in
push
dec
or
jb
xchg
adc
xor
cmp
sub
dec
mov
repz
jle
faddl
ds
or
call
sbb
jge
adc
dec
cli
shlb
adc
aad
push
jle
push
faddl
cmpsb
mov
jg
jle
into
int3
adc
scas
cs
push
jecxz
mov
sarl
mov
bnd
jecxz
mov
rep
mov
rcl
add
cmpsb
lods
mov
cmpsb
xorb
lret
sub
inc
add
sti
test
dec
mov
aaa
hlt
jns
repnz
es
dec
stc
rcrl
pop
jb
add
adc
jne
outsb
stos
ret
jne
aam
mov
mov
rorl
xor
lcall
inc
inc
xor
xor
adc
jmp
testl
xorl
sub
mov
sub
adc
fadds
adc
push
in
xchg
or
loop
shl
dec
and
hlt
mov
movsb
sbb
in
add
insl
adc
xor
or
cmc
xor
xlat
js
push
xchg
lret
lret
les
imul
mov
mov
aad
and
jecxz
in
cmc
sub
pop
dec
and
lret
insb
aad
hlt
mov
loop
and
into
mov
popa
fists
adc
out
ds
std
lahf
insl
leave
push
sub
or
lret
mov
sbb
add
adc
movsl
divl
mov
xor
jae
cld
mov
pop
dec
jle
cmc
cmpl
out
mov
push
mov
mov
xlat
rorb
inc
jecxz
iret
sub
inc
sbb
cmpsl
xor
push
fsubrl
push
inc
rcrb
sbb
and
mov
stos
push
insl
ret
cmp
ds
leave
test
or
dec
stc
shr
out
push
inc
jno
mov
cld
popa
loop
fs
jle
jmp
xor
mov
jne
stos
lret
add
mov
mov
cld
adc
or
xchg
iret
jae
scas
pusha
and
and
test
cmpb
adc
ds
mov
sbb
into
mov
sahf
scas
in
orb
xchg
lds
lods
mov
xchg
adc
mov
stos
jmp
dec
imul
add
out
lea
cmp
push
adc
add
ljmp
jle
rcrb
sbb
sbb
push
into
adc
sbb
call
sti
dec
dec
outsl
and
dec
cltd
jne
cmc
cmp
jae
popf
into
push
sbb
clc
mov
push
adc
cwtl
aas
xor
xchg
or
gs
pop
jo
cwtl
mov
push
aad
loope
jl
lahf
ror
pop
add
mov
mov
fmulp
sbb
and
jo
adc
cmpsb
push
cli
in
lods
push
push
jne
push
iret
cmp
lret
fs
scas
inc
adc
xchg
daa
push
aad
jmp
icebp
movsb
in
iret
cmp
xlat
dec
inc
push
jle
jns
fidivs
dec
adc
popa
and
push
gs
int
cmp
pop
lret
or
sahf
icebp
ficompl
clc
mov
fcmove
xchg
inc
fmull
out
scas
fs
in
mov
enter
sbb
jle
fwait
mov
loop
mov
iret
xchg
jne
sbb
in
iret
mov
cld
push
into
shl
jne
mov
popf
dec
orb
scas
sbb
mov
jl
xchg
insb
push
xor
hlt
push
xchg
inc
push
loope
je
aaa
subb
cli
jae
xchg
fxch
push
adc
push
add
xchg
xchg
icebp
mov
mov
mov
push
cli
cmp
push
cs
or
add
jge
mov
adc
xchg
and
ja
lock
aas
popa
movsl
and
popf
mov
jg
lret
ja
mov
out
ljmp
mov
test
inc
cmp
outsb
and
and
mov
xchg
sub
xor
jo
sbb
cwtl
insl
mov
pop
test
jge
push
es
cli
inc
inc
or
pop
fisttps
push
and
cmp
ljmp
cmp
cmpsb
push
cmc
inc
and
mov
xchg
jmp
shlb
xorb
mov
fwait
cli
sub
inc
mov
and
mov
adc
scas
neg
dec
mov
xchg
inc
adc
rcll
jnp
mov
xorb
lods
inc
and
pop
scas
mov
test
jl
dec
cmc
mov
adc
pushl
dec
xorb
popa
int3
stc
icebp
mov
sub
xor
lret
jecxz
ja
lea
ljmp
pop
jl
aaa
adc
fnstenv
jge
adc
mov
or
cmp
sub
stos
loopne
cmp
mov
xchg
dec
push
pushf
rorw
cmp
pop
lods
or
dec
push
rclb
sub
jge
stos
test
mov
sbb
mov
fisttpl
jl
dec
inc
mov
es
xor
add
pop
add
loopne
test
and
mov
lods
mov
sbb
popf
mov
xor
fdivl
jns
mov
fnstsw
inc
mov
addr16
aad
repnz
and
jge
leave
or
sub
outsb
xchg
test
movsb
jp
inc
adc
lret
int3
icebp
or
sub
movsl
addr16
pop
aaa
imul
xchg
sub
lahf
adc
pop
fstl
xlat
push
cmp
sbb
jmp
xor
into
pop
outsl
faddl
stos
push
shrl
iret
pop
enter
movsb
and
hlt
das
cmp
push
es
aaa
inc
ret
cmpsb
pop
subl
push
mov
repz
inc
std
mov
xchg
dec
add
arpl
ret
jg
inc
stc
inc
jno
and
sub
mov
aaa
xlat
push
out
fs
cmp
sub
mov
xor
lcall
push
aaa
push
std
dec
sub
inc
and
push
adc
imul
lahf
jp
cmp
out
mov
pushf
cmp
movsl
fisttpl
add
into
jno
jnp
lods
shlb
std
lcall
mov
clc
xlat
fldcw
callw
add
pop
pop
popa
inc
add
mov
adc
sahf
test
ret
lcall
add
roll
jg
xorl
cmpsb
cmp
test
adc
pusha
std
pop
cmp
add
pop
fistps
cmpsl
imul
imul
mov
adc
inc
scas
shlb
out
lods
cmc
clc
cmp
out
mov
jle
adc
repnz
jp
xor
pop
les
into
int
push
push
ss
mov
dec
rcrl
sub
scas
out
mov
dec
cltd
hlt
cmc
int
cmp
add
mov
mov
jae
insb
pop
and
or
sti
das
jb
xchg
pop
jl
pop
mov
insl
mov
add
shlb
jg
add
cmp
push
imulb
or
clc
jnp
mov
fidivrl
adc
jns
sub
mov
and
mov
xchg
xchg
add
push
xorb
daa
and
leave
cld
js
outsl
sahf
fwait
sahf
das
shrl
pop
cli
add
mov
sti
adc
push
mov
or
jge
sub
mov
leave
lret
clc
sbb
or
jle
into
push
fisttpll
out
jns
jmp
pushf
int3
out
adc
lods
pushf
mov
xorl
cmp
mov
enter
out
orb
scas
out
icebp
negl
mov
or
fsubrs
mov
insl
in
movsl
jg
fscale
mov
xchg
movsb
or
adc
sbb
xor
and
xchg
fistpl
xor
in
dec
insb
mov
cltd
adc
xchg
mov
mov
jg
dec
lea
mov
jle
enter
push
in
iret
add
ds
aas
roll
mov
popf
mov
cmp
jo
pop
int3
mov
in
pop
bound
add
inc
int3
push
call
loope
cmp
push
cs
out
imul
push
cmp
adc
pop
sub
arpl
jp
push
inc
jp
cmc
jg
sbb
and
sbb
xchg
or
imull
dec
ljmp
jge
adc
rol
gs
inc
push
lret
les
sub
je
data16
pop
adc
rcr
fisttps
lods
sub
rcl
dec
fwait
mov
sbb
in
not
clc
add
cpuid
xlat
sahf
cmp
cs
fistps
loop
lods
out
dec
scas
lock
popa
pop
fimull
mull
mov
xchg
xchg
mov
jae
or
je
jmp
nop
push
mov
loope
add
sbb
add
xor
cmp
jg
xchg
adc
cwtl
mov
outsl
shlb
je
aam
insb
movsl
ret
leave
and
fcmovne
ret
pop
lret
push
sbb
testl
lds
leave
mov
xchg
cmp
icebp
and
out
in
push
stos
int
sub
lds
rorl
pop
fmuls
lret
orl
and
sub
sub
movsb
lock
pop
lret
incl
mov
mov
inc
pusha
call
sub
aaa
or
aaa
fs
mov
mov
xchg
in
ret
mov
dec
test
xor
adc
and
shrb
and
inc
push
fs
gs
iret
in
or
mov
int
mov
iret
xchg
inc
pusha
xchg
imul
cwtl
push
jns
sbb
push
mov
cmpsl
pop
mov
jl
inc
jp
cmpl
dec
inc
pop
cld
lret
dec
push
sbb
mov
jge
mov
std
mov
adc
or
add
cmp
outsb
clc
push
adc
mov
fwait
xor
fisubl
pop
push
xor
cmpsb
repnz
popf
xorl
in
push
dec
push
cwtl
mov
rcrl
frstor
dec
cmp
and
sbb
adc
cmp
xchg
movsb
jno
sub
dec
mov
rorl
sahf
mov
leave
jno
cli
add
or
jle
or
mov
mov
xor
cmpsb
andl
and
test
dec
frstor
cmpsl
lods
and
pop
subl
pop
xchg
and
mov
xchg
aaa
popf
and
pop
arpl
das
jnp
xchg
out
lock
push
add
sub
inc
dec
je
jbe
push
sbb
leave
push
pop
and
inc
test
das
loop
mov
mov
iret
jmp
mov
jnp
xor
pop
mov
or
push
arpl
sbb
rol
or
pop
sbb
hlt
pop
pushf
aad
cmp
imul
ss
push
cmpsl
enter
mov
add
movl
pusha
push
int
scas
aam
imul
mov
das
test
clc
push
loope
hlt
push
mov
insl
mov
adc
scas
inc
fdivrs
rclw
cmpb
fprem1
stos
sahf
push
add
fldl
pop
std
outsl
aam
bound
jl
dec
pop
jns
inc
jns
daa
sub
lods
mov
jmp
xchg
sbb
in
lahf
push
pop
jbe
sti
push
and
push
sarb
insb
cmp
sbb
xchg
and
push
cmp
sub
jno
test
mov
mov
add
lea
gs
scas
or
inc
mov
jge
mov
xchg
testl
mov
add
push
shll
pop
lods
es
incb
jg
iret
scas
shll
jne
pop
dec
loop
xchg
xor
int
or
imul
xor
cmpsl
inc
repz
jge
icebp
jns
pop
sub
arpl
jne
fwait
dec
and
repz
sbb
jg
sbb
dec
lret
xor
mov
adc
nop
cli
fs
pop
adc
in
and
out
cmpsb
call
stc
pop
mov
inc
and
pop
test
pop
push
mov
fwait
call
mov
pop
pop
hlt
cmpb
shll
adc
rolb
or
inc
mov
js
sbb
gs
cs
lret
jg
xchg
out
movsl
movsl
mov
push
xchg
fstl
cmp
dec
cld
aas
dec
faddp
dec
xchg
inc
lret
mov
sbb
test
xor
sub
jg
lods
addl
adc
dec
cmp
in
cmp
dec
out
mov
clc
push
or
imulb
jno
jo
scas
adc
mov
or
sbb
push
sub
idivb
cmp
iret
cmc
fcoml
movzbl
mov
lcall
push
and
lret
arpl
sbb
jb
cmp
sub
gs
movsb
pushf
or
jb
push
cld
xor
jmp
stos
jecxz
cmp
mov
inc
lcall
mov
pop
notl
in
pop
inc
mov
pop
inc
dec
in
sub
mulb
insl
ret
lods
filds
inc
mov
out
mov
push
je
fdivrl
sbb
scas
mov
cmp
into
mov
scas
sub
and
sti
lret
adc
ret
outsl
add
pop
dec
stc
lods
insl
or
lret
cmp
test
add
mov
cld
test
sbb
add
pop
outsb
outsb
sarb
popf
ret
jns
in
add
xchg
mov
jp
sbb
pop
mov
or
pusha
jb
cld
sub
out
daa
mov
mov
xor
movsl
and
add
dec
sbb
adc
aad
adc
push
aas
and
cltd
mov
cmp
ss
cmp
lds
push
pop
sbb
add
loope
or
rdmsr
cmpsb
sub
jl
es
test
bnd
add
mov
mov
and
xchg
hlt
inc
and
push
into
and
jmp
mov
dec
fwait
mov
dec
adc
nop
inc
xor
jae
dec
mov
cmp
push
jne
mov
and
les
push
sub
sub
test
sub
or
je
xchg
and
aas
iret
push
pop
xchg
or
inc
inc
cmp
xlat
mov
mov
daa
jo
aaa
add
or
cli
lods
rcr
cmpsl
data16
iret
fdivl
mov
lahf
lret
pop
push
mov
sub
and
cld
add
mov
adc
pop
mov
movsl
lcall
test
in
xor
arpl
out
lret
jle
out
xor
xor
divb
pusha
pop
mov
rol
add
rcrl
sub
ss
and
into
stos
fistps
and
sahf
lods
mov
mov
push
push
das
adc
addr16
mov
or
xor
pusha
inc
dec
int
mov
pop
scas
mov
xchg
push
mov
jge
icebp
dec
mov
aam
leave
pushl
enter
cmpsb
les
negb
and
popa
imul
pusha
popf
out
daa
aaa
mov
ja
iret
daa
lret
adc
xor
cmp
inc
jge
andl
out
jl
mov
dec
fnstsw
out
jb
addb
pusha
mov
lret
push
push
mov
push
fsubrp
sub
xchg
movl
movb
jb
aad
xor
leave
mov
cs
pop
sub
jns
push
jnp
aam
test
inc
inc
mov
jae
hlt
loope
movsl
mov
aad
push
mov
sbb
push
or
mov
push
jne
xchg
es
je
daa
sbb
inc
push
push
xchg
mov
sbb
and
lods
lods
xor
pop
pop
jne
shrb
leave
loop
call
mov
cli
xchg
popa
cmp
push
cmp
lods
push
sub
mov
cli
inc
fldl
neg
mov
cmp
push
push
mov
cld
sub
or
pushf
mov
dec
sbb
lods
lock
push
push
inc
sbb
das
jge
jge
xchg
adc
push
xor
and
cmpsb
mov
sub
les
and
sub
rcrl
or
hlt
loop
fidivrs
movsb
dec
and
fisubl
push
push
fst
cmp
aad
inc
sub
jp
inc
imul
test
loope
shl
movsb
mov
repnz
fucomip
mov
xor
lods
mov
add
mov
std
and
movb
mov
mov
shlb
pop
aad
sub
jno
jle
push
xor
movsl
cmp
ret
imul
aad
adc
push
int
or
idiv
inc
push
shl
xlat
lcall
jae
fsubrl
imul
push
call
shll
mov
lret
and
enter
icebp
xchg
cmp
cmp
aam
fnstsw
mov
pushf
cmpsl
leave
int3
ljmp
sub
mov
lret
push
xchg
inc
cmp
cmpl
sbb
xor
cs
lods
jp
mov
pusha
mov
ja
shll
mov
xor
cmp
push
clc
cmp
lea
pop
cld
inc
dec
xchg
lret
jmp
mov
sbb
dec
pop
pop
sti
pusha
lods
icebp
in
popa
cmp
and
mov
add
fistl
cmpsb
icebp
les
leave
xor
pop
mov
pop
fbstp
mov
push
pop
aad
sub
push
stos
push
rorb
daa
les
mov
dec
add
sti
push
insl
mov
pop
mov
xchg
jns
add
fs
push
dec
cli
or
mov
mov
stc
stos
cmc
mulb
and
pop
add
add
pop
lods
inc
add
and
sub
out
push
pop
sbb
mov
xchg
dec
jp
mov
ja
mov
andl
into
mov
in
xor
push
pop
mov
fwait
lea
fcmovnbe
pop
mov
sub
into
in
sub
rorb
adc
out
or
out
fnstcw
in
mov
leave
je
or
push
mov
fildll
aas
jg
fnstcw
cmp
clc
cmp
insl
and
mov
filds
arpl
loope
das
and
push
mov
or
lahf
push
mov
enter
sub
dec
fidivrl
add
and
sbb
mov
pop
arpl
fmull
iret
sar
fnstenv
cli
inc
arpl
or
xchg
add
push
xchg
push
ja
rcrb
dec
cmpsl
sbbb
and
rcrl
in
lret
push
test
into
mov
jmp
push
mov
jne
stos
out
cmp
jg
push
inc
xor
icebp
das
in
movsb
pushf
sbb
pop
leave
add
sbb
push
jmp
add
or
xchg
ds
neg
sub
shll
dec
arpl
and
mov
cltd
outsb
inc
mov
push
push
mov
enter
xchg
mov
sti
add
mov
lret
out
je
loope
stc
xchg
lret
fnstcw
lret
mov
sub
aam
imul
sbb
movl
mov
push
repnz
frndint
cmp
jg
mov
test
jne
sub
adc
add
and
xchg
call
js
pushf
stos
inc
adc
adc
sar
sbb
cld
jmp
adc
ljmp
clc
mov
fidivl
ret
and
xor
cli
aaa
or
sbb
sahf
add
insl
pop
mov
das
jo
jecxz
adc
subb
andb
mov
ret
mov
dec
mov
pop
test
mov
fistpl
stos
je
cltd
js
add
fiaddl
xchg
popa
pop
fs
inc
lock
push
inc
fcmove
add
ret
xchg
insl
mov
xor
pop
std
loopne
inc
movsl
or
mov
fcoms
add
mov
pop
jnp
movsb
test
push
scas
or
xchg
das
fdiv
dec
addps
fwait
xchg
clc
pop
mov
orl
mov
jno
loopne
adc
xor
std
or
mov
mov
inc
dec
inc
subl
int
rol
ja
or
sbb
push
lret
sbb
pop
xchg
pop
aad
hlt
pop
xor
out
out
fdivrl
scas
jg
mov
rorl
dec
cmpsl
sti
daa
dec
clc
mov
dec
push
addl
jbe
lods
sub
imull
mov
pop
jl
jge
ret
pop
daa
ljmp
xchg
js
pop
and
mov
xchg
or
pop
adc
inc
mov
arpl
sub
mov
cld
stos
xchg
testb
sbb
repz
mov
call
shrb
les
jge
mov
pusha
sub
je
xchg
ja
and
cmpl
add
or
add
xchg
xchg
dec
scas
dec
lock
data16
jmp
test
add
push
xor
loopne
cmp
cmp
adc
imul
add
insl
or
add
push
adc
push
int
movsb
mov
out
and
fwait
dec
stc
pop
outsb
movsb
jge
hlt
int
arpl
xchg
in
outsl
xchg
sub
js
rclb
push
and
xchg
and
mov
arpl
scas
mov
std
lahf
cmp
jecxz
outsb
xor
outsb
insl
ret
push
pop
dec
rol
jnp
adc
fistl
rol
inc
sti
imul
mov
std
cmc
mov
dec
ret
imul
arpl
ljmp
or
xchg
dec
mov
je
jne
cmp
xchg
loopne
mov
adc
adc
jbe
push
hlt
mov
imul
mov
pop
cmp
lock
fwait
sbb
add
or
loopne
insl
sarb
enter
adc
ss
sahf
icebp
push
or
or
jae
out
test
mov
loopne
push
outsb
mov
popf
hlt
inc
pop
or
ss
fcomip
xchg
incb
pop
popa
inc
mov
int
inc
xchg
mov
popf
repz
cmc
jns
sub
clc
rorb
fistpl
mov
sub
mov
xchg
stc
and
xchg
stc
or
cmp
test
lcall
jecxz
xlat
test
fucomi
je
fiadds
popa
mov
push
mov
lods
stos
fwait
aas
dec
cwtl
out
add
fnsave
stc
adc
pop
scas
cli
sahf
adc
imul
sahf
mov
add
sub
icebp
xor
inc
out
jns
fs
insb
cmpsb
fnsave
int3
and
addr16
sub
xchg
jno
sub
push
sbb
pop
lret
maskmovq
divl
mov
daa
xor
sahf
les
clc
hlt
mov
adc
mov
sbb
loop
add
lret
stos
movsl
out
push
imulb
aam
fiaddl
lret
in
add
dec
mov
repnz
pop
mov
pop
mov
adc
sbbl
fucomi
push
pop
ss
popa
xlat
mov
xchg
ja
jecxz
popf
mov
jae
add
jecxz
pushf
nop
lods
xor
out
push
xor
or
mov
divb
xchg
mov
push
rolb
iret
jl
ljmp
push
ljmp
pop
push
add
sbb
xchg
ljmp
mov
xor
out
aaa
mov
lds
lret
mov
dec
ljmp
push
pop
mov
cmp
mov
pop
mov
jmp
popf
lods
mov
dec
mov
mov
mov
imul
imul
imull
and
push
fwait
mov
es
loopne
or
ljmp
aas
lret
scas
push
mov
jmp
mov
loop
scas
mov
and
mov
cs
dec
push
sbb
out
sbb
aas
and
adc
push
xchg
in
das
shlb
inc
in
or
inc
xchg
test
aas
test
push
and
pop
pop
lret
mov
inc
mov
push
int
loopne
jl
cmc
xchg
push
ja
xor
push
xchg
add
adc
jae
call
pop
popa
sbb
push
repz
jne
mov
rcrl
popa
mov
mov
fldcw
xor
iret
lods
out
xchg
cmpsb
mov
mov
pusha
addr16
shrb
sbb
fwait
or
xlat
xorl
or
xor
stos
out
sahf
scas
ret
out
aaa
sbb
andb
lds
sub
sbb
xchg
sbb
sub
sub
sbb
int
jge
lea
inc
scas
rorb
adc
call
fldcw
jnp
jle
xor
fwait
jae
cli
int
lds
adc
lods
js
inc
mov
cmp
lds
mov
in
sbb
sti
push
inc
inc
inc
inc
prefetcht0
push
add
inc
ret
popf
movsl
jge
ret
cmp
aad
and
sbb
pop
dec
mov
in
shl
fldenv
pop
adc
xor
mov
xlat
push
fsub
mov
push
addr16
adc
xor
adc
mov
add
and
xor
and
mov
test
out
dec
adc
mov
jl
inc
pop
cli
movl
xchg
call
jle
jns
mov
or
or
mov
xor
and
sahf
loop
push
sub
pop
inc
pop
pushf
cwtl
and
or
dec
sbb
pop
aas
sbb
and
iret
push
and
jmp
in
ficompl
out
fcmovu
mov
scas
outsb
out
insb
les
adc
mov
cmc
dec
jns
pusha
sbb
mov
pop
aas
out
insb
loope
jbe
hlt
rcll
push
bound
out
dec
rolb
pop
testl
ds
xor
pop
mov
push
adc
lock
push
or
add
mov
sub
cmpsl
push
gs
jp
imul
jl
fsubrs
lea
push
push
add
in
sbbl
inc
or
addl
xor
cmp
in
mov
push
add
lret
xor
filds
xor
sub
in
jns
movsl
dec
es
sub
pop
shr
mov
aad
int3
mov
jmp
test
mov
or
dec
cmp
xchg
xor
pop
push
push
inc
bnd
popa
movsl
xchg
sbb
pop
filds
inc
xchg
pop
pushf
mov
stc
test
cs
leave
out
cmp
pop
cmp
and
add
inc
bound
dec
lds
cmp
into
fsubl
sbb
dec
sub
aad
ss
push
je
jns
xor
int3
sub
sub
testl
imul
shl
scas
and
xchg
adc
aad
aaa
addl
mov
addr16
repz
jb
xchg
icebp
push
mov
jno
mov
mov
idiv
mov
aad
mov
jo
dec
aad
jae
or
xchg
fs
not
fdivs
or
or
adc
or
xchg
outsl
xor
outsb
jo
push
scas
xchg
cltd
mov
lcall
mov
ret
or
xor
stos
pop
add
dec
fucomp
mov
inc
jne
sub
mov
pop
aaa
inc
jp
daa
das
arpl
mov
jne
jnp
jecxz
cmp
dec
cs
mov
dec
lahf
dec
sub
test
out
fstps
nop
mov
cltd
cli
rolb
cmp
in
dec
imull
sar
cmp
inc
divl
lahf
push
inc
jnp
jno
pusha
push
lods
jp
xchg
push
push
and
popf
out
xchg
adc
push
cltd
outsl
and
insw
inc
rcl
movsb
xlat
pop
out
ret
clc
sub
dec
js
int
dec
ljmp
jae
lea
pop
mov
xchg
and
pop
jle
fucomi
out
lcall
push
imul
xor
out
cmp
xchg
inc
add
mov
mov
inc
dec
and
jne
jg
and
push
std
flds
cltd
and
mov
jo
shr
mov
leave
je
cmpsb
xchg
scas
loope
data16
dec
or
mov
adc
sarl
cmc
jecxz
adc
mov
jl
test
xchg
idivb
jp
stos
inc
sbb
sbb
or
push
je
jb
push
sub
nop
pop
call
mov
movsl
mov
lret
test
mov
das
popa
add
mov
call
add
add
sub
xchg
imul
outsb
pop
sahf
inc
ret
int3
es
aam
into
jnp
fucomip
jb
ss
push
cmpsb
ja
jecxz
test
out
and
loope
stos
pop
call
in
xor
and
xor
adc
or
add
inc
pop
dec
out
mov
imul
sbb
mov
rcll
mov
pop
push
jge
fisttpl
or
jo
jae
xor
flds
push
add
cmp
insl
ror
test
ret
push
shll
xchg
fmul
movsb
and
sub
xchg
push
mov
mov
or
mov
mov
push
sti
js
or
or
cmpsl
cwtl
icebp
mov
xor
cmp
les
mov
popf
cmp
push
loopne
scas
push
push
movsl
cmp
push
mov
shl
cmp
sbb
mov
jne
sbb
lahf
cld
ret
cmpl
imul
mov
push
xor
shr
pop
dec
movb
xchg
dec
jne
jg
inc
and
sub
js
into
add
push
pop
adc
fmull
movsb
mov
scas
out
cld
mov
dec
pop
sahf
cltd
mov
or
cwtl
stc
mov
clc
jp
or
lcall
push
push
shl
decb
sar
xorl
mov
cmp
out
cli
fcompl
cmpsl
xor
testl
pop
inc
out
jmp
cmp
push
inc
ss
sbb
or
addr16
cmp
jne
jg
add
fsubrl
imul
faddl
pusha
fs
cmpsb
push
xchg
push
pushf
sbb
adc
mov
add
pop
adc
cmpsb
daa
jmp
leave
jge
push
fwait
insb
shr
cmp
inc
mov
sub
mov
adc
mov
loope
lcall
xchg
adc
lea
pop
sub
inc
mov
jo
repnz
jmp
xorb
add
dec
mul
adc
lea
add
movsb
dec
adc
outsl
jbe
lods
pminsw
push
aam
mov
cld
nop
fnstenv
lcall
mov
jb
push
add
and
pop
lahf
mov
es
dec
mov
or
outsl
xchg
fstl
mov
std
inc
jecxz
std
sahf
jecxz
subb
pop
push
inc
mov
pop
sti
scas
outsl
lret
popf
dec
jp
ret
icebp
je
inc
outsb
mov
xchg
sub
pop
mov
adc
sbb
xor
daa
lahf
mov
cmpsl
call
lret
jle
movsb
fbld
imul
push
and
fistps
or
jns
mov
inc
sbbl
push
cmp
test
bound
and
sahf
clc
pop
jl
pop
lds
sbb
jle
dec
jl
inc
insb
in
add
add
and
jo
icebp
cli
outsb
jo
fnstcw
cld
jg
clc
xchg
shr
dec
enter
filds
icebp
mov
jle
jecxz
test
mov
or
push
sbb
inc
nop
into
pop
je
mov
out
mov
or
and
dec
bound
xor
insl
dec
aad
mov
jecxz
jl
sub
or
lcall
jecxz
scas
insl
xor
pop
mov
push
or
adc
adc
adc
push
and
les
fimull
xchg
xlat
loope
jns
mov
sub
xor
add
jmp
lods
repnz
jne
jo
inc
bt
push
aaa
jo
mov
lcall
jge
sbb
pop
lea
cmp
push
aam
add
std
cmpsl
test
sahf
lock
inc
sbb
mov
sbb
inc
gs
subb
cmp
clc
adc
andl
outsb
mov
xchg
sahf
pop
jg
js
mov
aam
enter
jno
add
mov
dec
lret
in
in
icebp
push
aam
ficoml
movl
sub
jge
cmp
inc
test
pop
mull
icebp
int
pop
stc
lea
out
andl
leave
les
sbb
ljmp
mov
xchg
cmp
sub
test
sub
outsb
and
pop
sub
enter
sarl
mov
les
aam
ds
mov
mov
out
pop
fidivl
fiaddl
add
push
sub
push
bound
sbb
inc
sub
ja
stc
lods
push
mov
or
lcall
lcall
ret
push
push
bound
sbb
jno
mov
sbb
fimull
scas
mov
cmpsl
mov
dec
adc
call
xchg
mov
hlt
mov
data16
lcall
scas
mov
sahf
sti
inc
inc
or
jl
add
lock
in
adc
inc
aad
aas
xchg
imul
das
insl
mov
lret
jge
popf
dec
mov
outsl
pusha
sbb
out
mov
xchg
popa
push
mov
loope
xchg
jno
push
aaa
inc
jnp
cmp
out
jne
fimuls
test
pop
pop
je
data16
sub
pop
sub
imul
and
cli
in
mov
cmp
aas
decb
xor
inc
mov
lret
cli
sub
sahf
sub
inc
int3
nop
pop
mov
pop
aad
sbb
leave
mov
pop
add
mov
arpl
stos
mov
into
or
xchg
testb
adc
xor
je
lea
test
xchg
xchg
stos
das
mov
popf
pop
mov
mov
mov
shr
enter
xchg
push
inc
movsl
cmc
dec
sbb
adc
xorb
repnz
fs
in
int3
sub
mov
cli
or
add
mov
xchg
inc
mov
popf
cltd
lds
sbb
outsb
inc
mov
cld
add
cvtdq2ps
adc
mov
mov
sub
xor
xchg
jle
pop
arpl
cld
shrl
sub
or
sub
clc
pop
mov
pop
popa
mov
jl
insl
pop
pop
jb
xor
rcrb
inc
mov
sub
pusha
and
xor
aam
xchg
test
test
mov
pop
xchg
ja
pop
dec
aam
stc
push
test
jae
js
lea
stos
loop
hlt
dec
pusha
or
ss
pusha
cld
movsl
mov
pop
inc
fs
adc
scas
push
sub
jmp
adc
movsl
loopne
cld
mov
cmpl
lcall
cmc
push
jecxz
jg
divb
jns
mov
and
shl
xchg
sbb
out
test
dec
into
mov
or
xchg
add
xchg
add
jne
fsubr
xor
in
lods
repz
or
hlt
es
in
pop
rcll
and
mov
insb
sbb
sbb
mov
cmp
roll
pop
dec
sub
ss
outsb
fiaddl
lds
and
icebp
mov
dec
pop
int3
xorl
nop
add
cli
insb
shr
mov
add
dec
into
pop
stos
lea
in
loopne
add
leave
xor
cmp
in
mov
mov
xchg
fcomps
shlb
sar
jnp
xchg
jbe
repz
dec
jmp
xchg
bound
imul
or
mov
rcrl
inc
jp
inc
mov
lret
out
lcall
fisubrl
dec
cwtl
push
shrb
jne
mov
fs
stc
imul
sbb
mov
mov
or
in
xor
mov
pop
lea
in
fisttpl
cli
xchg
mov
sub
sbb
adc
out
sub
cmp
cmpsl
aas
loope
je
pop
shlb
xchg
in
js
test
fs
icebp
or
rcrb
pop
insl
inc
mov
sbb
dec
imul
or
sub
cmp
and
or
sbb
pop
mov
or
mov
movsb
mov
add
sub
xchg
popa
cltd
mov
loope
js
lea
inc
cmc
stos
mov
pop
push
cmp
cmp
test
xbegin
push
repnz
std
sahf
daa
ja
push
andl
cmp
xchg
cmpsb
sti
test
dec
mov
dec
and
test
dec
push
es
or
sbb
and
ret
ficoml
sbb
pop
xor
add
mov
js
cmpsb
test
push
mov
pushf
repnz
xchg
call
cmc
enter
mov
inc
sbb
xchg
cltd
jmp
jne
mov
mov
dec
cmc
mov
lods
inc
mov
es
jnp
mull
aas
or
pop
mov
mov
pop
cmp
add
push
fidivrl
es
mov
mov
dec
mov
xchg
fcoml
jo
loopne
jmp
pop
cmp
fldl
cmp
pushf
inc
stos
add
in
sub
fwait
mov
push
xor
add
jo
pop
jp
leave
jnp
sub
fldt
mov
mov
sub
pop
lcall
jmp
push
ss
pop
and
fcomip
jp
push
popa
lock
xrelease
hlt
xchg
mov
hlt
cmp
rclb
adc
cmp
hlt
cmp
xlat
in
pop
mov
mov
icebp
mov
xor
inc
sbb
fwait
mov
aas
push
sbb
xchg
jno
in
cltd
xlat
les
in
scas
cmp
push
les
mov
outsb
je
pop
mov
xor
in
shlb
mov
cld
sub
or
or
xchg
and
inc
jmp
fisttpll
inc
lods
push
or
pop
push
insl
stos
stos
loop
outsb
fimuls
jno
sbb
insl
cli
xchg
cmp
dec
sbb
xlat
test
mov
out
mov
jp
sbb
enter
xlat
add
int
pop
inc
mov
or
mov
gs
or
adc
std
mov
mov
adcb
dec
dec
repnz
xor
orl
and
popa
inc
mov
xchg
shr
mov
arpl
dec
xor
dec
mov
push
rorb
ljmp
cs
xor
iret
fldt
int3
out
addr16
cmp
xor
xor
lcall
sbb
mov
inc
mov
mov
insb
push
jmp
mov
jbe
nop
loop
mov
lods
call
out
push
scas
push
adc
stos
test
xlat
push
enter
fsubl
inc
inc
push
in
jb
sub
pop
lods
lock
mov
cmp
and
jbe
insl
insb
bound
adc
jmp
dec
imul
jecxz
leave
rorb
or
pop
stos
popf
jbe
xor
add
iret
aas
add
test
stos
jl
out
jge
dec
and
lcall
xchg
add
jp
enter
aam
outsb
sub
adc
xlat
xchg
sbb
cmp
shll
dec
or
rcll
mov
jo
xor
push
imul
sti
mov
mov
test
dec
mov
inc
cmp
arpl
lahf
cmp
iret
sbb
add
xor
scas
aad
scas
sub
rorb
fs
jecxz
mov
push
aaa
mov
cmp
lcall
shl
and
xlat
cmp
pop
mov
shrl
inc
push
out
cmp
mov
in
shlb
xor
pop
hlt
je
pop
mov
xchg
cmpsb
inc
xchg
cmpsl
icebp
and
fildll
cmpsl
cltd
dec
jbe
xchg
ret
popw
mov
fsts
loop
stos
sub
adc
add
mov
inc
mov
mov
lods
test
cmp
sarb
inc
inc
js
popa
xor
inc
icebp
push
or
test
jp
out
mov
out
and
fisubrl
mov
idivb
push
mov
or
cmovno
mov
movsb
cltd
sub
mov
mov
push
imul
in
ror
addr16
add
das
lret
mov
addl
cli
mov
addr16
adc
sti
sub
xchg
dec
sbb
inc
mov
pushf
dec
lret
mov
push
cmp
iret
inc
xchg
push
mov
push
test
xlat
lods
fdivrl
or
add
divl
and
iret
mov
xchg
dec
inc
mov
jo
insb
mov
ss
sub
lds
add
gs
stos
js
mov
stos
inc
jae
fmull
mov
stos
mov
add
sti
mov
sbb
fiaddl
mov
sub
inc
cli
daa
cmp
cmp
mull
mov
cmp
push
and
shll
sub
xor
pop
push
cmpsb
leave
cmpsb
fisubl
and
lcall
inc
repnz
dec
jnp
xchg
inc
pop
hlt
aas
mov
stos
fs
jae
sarb
fcmovbe
shlb
mov
cltd
xchg
fdivl
ja
push
and
daa
cmp
popa
lahf
les
mov
cmc
inc
cmp
ret
adc
push
mov
das
sti
or
cld
and
stos
scas
repz
push
fstpt
dec
mov
aaa
mov
push
dec
adc
push
sub
in
int3
roll
push
pop
in
jnp
push
inc
rcrb
test
cmp
and
and
mov
cmc
jle
pop
dec
jae
xor
sbb
cmp
push
xchg
sub
xor
lret
jmp
mov
mov
lret
cli
inc
cmp
lahf
sbb
shrb
lcall
out
ret
ss
pop
sub
ret
cmc
sbb
call
popa
push
loop
xchg
rcl
push
jae
xchg
in
loopne
pop
lret
cs
rclb
movlps
pop
sbb
cmp
xor
repnz
lock
out
fs
aad
inc
test
dec
lret
mov
or
mov
syscall
iret
sub
sar
fldt
add
xchg
in
daa
or
inc
inc
roll
inc
insb
jle
les
ficoms
or
mov
pusha
mov
in
shll
or
mov
pushf
pop
xor
aaa
scas
in
adc
mov
pushf
sbb
and
or
pop
xor
sti
mov
int3
test
sbbl
fsubl
xlat
pushf
sub
clc
jo
or
out
in
int3
movsl
mov
push
xor
lds
or
mov
xchg
rcr
pop
sub
sbb
addl
cmpl
data16
movsb
cmp
std
sbb
in
push
hlt
loope
mov
cli
lock
mov
sub
shll
out
or
je
ja
cmp
dec
add
add
push
dec
decl
loopne
mov
add
jb
mov
mov
pusha
loope
repz
fwait
adc
lcall
adc
xchg
or
mov
je
add
data16
adc
inc
mov
adc
add
mov
lea
xor
ss
sub
lahf
push
add
out
enter
mov
fs
shlb
icebp
popf
xor
fdivl
ret
xchg
mov
cmp
jecxz
ljmp
or
xor
loope
cmp
aaa
loopne
add
iret
adc
imul
lea
dec
int3
es
inc
jg
ret
mov
sbb
sub
or
lret
push
aam
fnstsw
rorl
jl
inc
inc
decb
icebp
out
lds
adc
mov
insl
insb
jmp
je
xor
mov
jle
pushf
add
inc
lea
or
lods
jle
leave
mov
push
add
in
xor
inc
insl
lcall
icebp
or
pusha
jno
jae
stc
mov
daa
sub
or
fbstp
dec
sub
into
popf
jp
mov
or
les
out
pop
mov
jge
or
adc
clc
inc
and
jb
loop
scas
or
jg
mov
sti
add
mov
xchg
inc
pop
in
rcl
dec
lds
pop
add
adc
and
pop
out
pop
and
mov
out
add
push
sub
repnz
push
js
xor
daa
mov
mov
cmp
lcall
lods
add
jmp
push
xor
inc
adc
sub
repz
cmpb
push
push
loopne
daa
lea
xchg
aas
inc
icebp
daa
in
xor
sub
test
inc
test
cli
lods
and
loope
lahf
sub
imul
daa
push
test
cltd
psubq
mov
popf
pop
imulb
adc
in
icebp
es
ror
shll
test
mov
xor
std
pop
pop
adc
jge
out
mov
xchg
mov
mov
sahf
jno
and
fiaddl
outsb
cmp
cmpsb
add
leave
cmp
mov
jae
add
enter
fnstcw
sbb
je
addr16
push
pop
mov
push
shrb
jp
es
int
push
pop
or
jnp
out
fildl
decb
pop
lods
mov
and
jno
fsubrs
inc
test
movsb
popf
push
mov
out
pop
fcomip
inc
enter
int
je
lea
loope
or
loope
mov
cmp
cwtl
inc
into
insl
mov
leave
icebp
mov
xchg
fsts
out
in
data16
dec
mov
and
cmc
fwait
add
mov
adc
ror
out
mov
and
xor
inc
repz
sub
xchg
push
nop
push
call
mov
popa
push
inc
sub
pushf
mov
push
icebp
clc
add
arpl
test
ffree
dec
inc
shrl
rcr
cltd
sti
push
jecxz
xor
addr16
cs
out
and
pusha
in
into
into
mov
xchg
cmpsl
xchg
pop
rorl
pop
jg
dec
popf
adc
xchg
mov
xchg
aam
xchg
adc
ret
add
xchg
test
in
pop
rcll
out
test
loope
jb
repnz
fidivrs
and
xor
lock
cwtl
inc
jne
push
inc
add
mov
jae
lret
icebp
andb
sahf
addr16
sbb
or
and
insb
stos
iret
push
jne
rcl
cmc
cli
or
lock
test
sbb
lcall
sub
sbb
add
into
lahf
aas
pop
mov
lar
pop
push
xor
cli
ret
push
bound
pop
and
and
xchg
jb
pop
lock
fldenv
movsl
packssdw
cmp
mov
push
cmp
jg
mov
ja
divb
int3
cmp
sbb
gs
jne
out
and
push
fidivrs
rcrl
js
out
mov
inc
stc
xchg
adc
adc
faddp
mov
in
addr16
cmp
cmpsb
jo
sbb
arpl
mov
mov
icebp
xorb
jle
push
aam
mov
dec
mov
shll
in
xor
in
scas
xchg
push
hlt
pop
test
jns
dec
dec
ds
sbb
ret
mov
xor
cmp
in
inc
xlat
or
fldcw
adc
ja
sbbb
adc
test
mov
das
loop
xchg
es
gs
mov
outsb
push
or
jnp
lahf
inc
insl
xor
cmc
sbb
nop
ds
dec
cwtl
sbb
es
das
mov
test
test
dec
sbb
test
add
add
repnz
push
ret
cmp
fs
mov
fwait
stc
jmp
in
dec
pop
mov
mov
mov
add
dec
std
or
adc
jecxz
lods
negl
adc
dec
movlhps
or
pop
mulb
fs
add
xor
inc
cwtl
mov
hlt
out
test
xchg
fwait
jns
xor
rcll
bound
mov
cwtl
lea
mov
xor
loopne
mov
xlat
push
cmc
mov
and
and
xor
das
rorb
dec
sbb
in
jne
mov
sub
hlt
jae
fndisi(8087
xor
xchg
inc
push
iret
mov
pop
push
shlb
inc
push
mov
and
shll
jo,pt
mov
aas
icebp
pop
pusha
std
cld
test
mov
jns
jns
shrl
add
loope
sarl
xchg
jecxz
inc
dec
mov
icebp
inc
pop
jno
xchg
call
inc
sbb
lods
out
scas
push
hlt
fstps
add
inc
jl
lret
jecxz
sub
xchg
adc
repnz
cmpsl
or
popa
icebp
rcrl
cltd
out
fdivs
js
dec
push
outsl
sbb
jno
jge
sub
test
sub
and
jno
fistpll
inc
repnz
test
jmp
mov
mov
movsl
mov
cltd
jl
clc
jne
fcomps
fneni(8087
and
inc
pop
outsl
es
or
jp
push
and
or
xor
mov
sbb
inc
push
int
or
adc
aam
je
push
filds
jne
adc
in
cmpsb
jmp
cmpsb
mov
scas
ds
xchg
xchg
jo
ror
lea
scas
sahf
in
das
add
push
imul
mov
jb
cmc
aad
cli
je
mov
into
mov
add
sti
fildll
jbe
out
pop
mov
pushf
lret
lods
jle
mul
jno
inc
mov
dec
push
push
pop
test
jle
mov
jbe
aaa
int3
sub
push
inc
sahf
mov
sahf
sub
or
push
movsl
cmp
sub
stos
inc
hlt
enter
rol
mov
cmpsb
mov
sub
stos
mov
outsb
addl
add
outsb
pushf
pop
lea
dec
arpl
push
or
mov
loope
push
mov
pop
rorl
cmp
clc
fucomip
arpl
mov
pushf
jl
and
and
jnp
mov
inc
repnz
imul
stc
add
fwait
aaa
push
sbb
add
ret
adc
sub
orb
iret
sti
cmpb
lods
les
nop
cmp
pop
fadd
fdivs
push
fwait
add
lods
cmpb
mov
or
fwait
jg
adc
jmp
jg
mov
cmp
hlt
out
jne
decl
cs
movzwl
pop
and
inc
adc
adcl
das
aas
mov
mov
loop
stos
pop
mov
or
pop
push
out
aas
fists
push
je
jmp
xchg
add
insb
jg
in
xor
mov
jp
push
dec
repz
and
jg
jmp
clc
inc
push
jecxz
cmc
xchg
sti
ret
orl
push
pop
pop
fnstenv
outsl
sti
lock
xlat
and
adc
jae
in
lcall
xlat
lret
or
sbb
add
and
cmpsl
test
addr16
sbb
mov
cmp
sbb
loope
sub
pop
and
fnstenv
push
cmc
xchg
les
nop
andl
xor
mov
jbe
cltd
test
pusha
xchg
rol
add
lcall
mov
shufps
dec
in
test
cmp
jbe
shll
mov
in
lea
out
popa
dec
xlat
sub
popa
mov
pop
cltd
mov
add
das
cmc
dec
or
aam
lds
arpl
movsl
fwait
pop
adc
pushf
adc
andl
xchg
jmp
cli
inc
xchg
and
aaa
das
lock
mov
dec
jae
mov
dec
aas
xchg
test
and
jmp
call
mov
jp
into
jle
mov
popf
ficoml
ror
push
call
pop
inc
mov
sub
sbb
test
jge
aad
pop
mov
fucomi
cmp
mov
push
ret
push
lock
push
mov
movsl
add
adc
or
sub
push
jmp
ret
pop
xor
pop
cs
test
out
lahf
adc
push
rcr
out
lret
add
out
scas
ret
dec
rorb
out
push
jl
fnstenv
inc
orl
pop
xchg
addr16
mov
pop
push
ja
repnz
add
clc
shl
jns
pop
fistps
test
std
std
push
in
clc
jle
mov
jge
and
imul
out
mov
mov
cmp
mov
adc
sbb
sahf
les
jo
clc
cmpsb
pop
xchg
mov
push
push
paddsw
neg
shlb
incb
fisubs
jno
dec
dec
add
fmul
in
negl
aad
int3
into
test
cmp
xor
push
into
mov
jo
daa
mov
imulb
loope
aam
aam
mov
add
pop
fisubs
jbe
xchg
je
lods
cmp
cmpsb
lds
and
mov
arpl
rclb
lahf
add
sub
lret
and
out
xlat
test
add
push
jbe
stc
fiadds
jle
ret
pop
and
test
or
jns
enter
cltd
mov
xchg
xlat
mov
pushf
add
popl
pop
repnz
out
sbb
insb
push
mov
and
pop
cmc
mov
nop
les
das
sbb
adc
mov
mov
push
fnstenv
in
xchg
add
inc
inc
es
push
push
scas
cmpsl
ljmp
fstpl
sub
daa
adc
jno
movsb
pop
pop
push
pop
imul
ret
pop
ja
test
sbb
cli
imul
sbb
pop
scas
in
daa
les
jbe
jno
jb
bound
dec
xchg
cmpsb
bound
les
inc
outsl
ja
jmp
cmpsb
das
in
fstpt
loopne
ss
arpl
jns
inc
out
sbbb
dec
vpmaxsw
sbb
popf
jbe
aam
xor
push
jmp
int3
fsubs
pusha
lcall
cmp
gs
outsl
in
or
add
push
stc
inc
fs
ret
xchg
cmc
pop
mov
cli
or
sub
add
push
scas
mov
scas
cld
shll
cmp
add
je
fdiv
pop
nop
fs
pop
in
dec
shrl
leave
mov
mov
inc
jl
je
imul
lods
or
loop
es
jae
dec
sub
popl
or
iret
pop
mov
loope
sbb
in
xchg
ja
pop
out
mov
ds
rclb
pop
in
mov
xor
stos
jbe
jae
inc
arpl
adc
mov
sub
jmp
xor
push
xor
jl
addr16
orl
or
cltd
test
jo
ret
jns
cltd
ja
ljmp
ret
and
jb
add
dec
sbb
cmp
jecxz
sub
adc
test
iret
mov
push
addb
dec
cmpsl
data16
mov
addr16
dec
out
or
adc
and
push
sub
outsb
arpl
ret
jle
mov
cmp
cmpsb
test
sub
add
dec
call
insb
jmp
push
in
iretw
sub
inc
fldenv
pop
aaa
insl
cmp
test
fistpl
in
jmp
pop
mov
mov
jns
imul
enter
fbstp
mov
hlt
in
outsb
xor
lcall
movsb
testl
push
out
insl
test
adc
or
hlt
pop
hlt
hlt
xor
adc
loopne
mov
jmp
mov
or
aas
mov
pop
push
lock
adc
cmp
mov
sub
xlat
sbb
mov
push
xchg
rcrb
xchg
sub
jp
movsl
pusha
lods
es
or
stos
mov
xor
scas
dec
or
jno
mov
mov
fsubr
stos
mov
pop
jl
mov
fucompp
adc
scas
and
push
ss
jle
shlb
sub
out
aad
push
mov
dec
nop
push
adc
in
in
mov
fiadds
std
dec
outsl
pop
or
inc
pop
jb
cmc
cmpsb
fnstsw
mov
sbb
xchg
sahf
xchg
inc
xchg
jle
sbb
sarl
rcrb
orl
aad
jns
sarl
hlt
and
aam
xchg
adc
and
fldcw
pushf
cmc
loope
das
pop
daa
imulb
nop
push
fs
mov
sub
into
jae
inc
imul
in
xchg
fsincos
repz
jmp
mov
popa
xchg
ret
pop
stc
cmpsb
or
out
and
or
insb
push
lret
push
cmpsl
into
jmp
xor
pop
mov
cli
arpl
lahf
sub
sbb
das
pop
stc
enter
xor
jecxz
add
imul
or
inc
add
cmp
dec
mov
jnp
lock
inc
fwait
arpl
js
jbe
inc
jae
fdivrl
jle
js
repnz
insl
fidivrs
daa
popf
es
adc
nop
outsl
add
cmc
bound
je
pop
dec
leave
imul
repnz
inc
push
cmc
cmpsl
popf
test
pop
cld
lret
loop
jecxz
sub
pop
not
jmp
repz
add
sbb
cmp
sub
or
pop
clc
and
das
xor
lea
sub
xchg
xchg
out
mov
sahf
iret
add
call
mov
cld
push
in
mov
or
aaa
dec
sub
lret
iret
hlt
xchg
test
cltd
shll
xor
mov
enter
pop
push
mov
dec
into
xchg
jecxz
enter
cld
es
cmp
ss
cmp
xchg
cmp
sahf
dec
pusha
ret
enter
and
rcrl
dec
out
out
adcb
jno
fwait
pop
enter
pusha
mov
mov
jle
fistpl
scas
or
or
cltd
jbe
jnp
sahf
stc
pop
pop
inc
and
addb
int
push
xchg
arpl
jecxz
push
xchg
mov
add
in
leave
imul
jle
dec
fwait
je
and
sub
les
or
sbbb
std
bnd
fxtract
mov
les
fistpl
inc
gs
jns
mov
add
push
cmc
push
jmp
dec
rorb
repnz
ret
out
stc
insb
sub
and
enter
and
enter
in
push
leave
out
and
sub
aaa
loope
notl
add
cmp
dec
push
mov
bound
ljmp
shlb
or
lods
and
mov
xchg
cwtl
arpl
or
inc
add
push
popa
enter
xchg
xchg
or
mov
mov
and
xchg
push
push
and
enter
aam
and
mov
fldenv
add
mov
int3
xor
test
ja
jg
cltd
test
lds
mov
xor
xchg
jecxz
dec
pushf
sbb
cld
or
mov
jno
rcr
pop
movsl
adc
xorb
add
sahf
mov
js
mov
sbb
lret
scas
in
sbbb
pushf
mov
int3
daa
inc
pop
pop
rorl
scas
ret
pop
push
pusha
rol
xchg
push
fs
add
fs
mov
icebp
mov
push
push
aas
push
shlb
xchg
test
sti
push
xor
daa
mov
sub
inc
mov
dec
cwtl
and
jmp
cmpsb
dec
mov
add
and
add
call
mov
adc
mov
xchg
fistpll
mov
pop
mov
rcrl
cld
sbb
xor
in
jae
rcrl
or
addr16
cld
adc
faddl
pop
jmp
cmp
mov
mov
pop
sub
lahf
pop
jecxz
dec
xor
xchg
push
stos
jb
push
rclb
push
ljmp
dec
pop
push
inc
ds
pusha
loop
push
orb
daa
push
mov
inc
cmpl
movsl
pop
and
inc
push
xchg
pop
or
out
outsl
pop
and
xor
mov
lret
into
mov
movsl
icebp
std
imul
imul
call
jg
mov
mov
inc
jle
in
xor
xor
cli
push
test
dec
cltd
ss
push
inc
jbe
push
push
xor
cmp
dec
in
test
mov
xchg
sbb
fcmovnbe
jb
out
fsts
pop
stos
out
call
fs
xabort
fwait
mov
imul
pushf
push
push
push
addr16
ficoms
mov
pop
inc
fs
daa
add
mov
xor
test
inc
mov
xchg
pop
outsl
xor
xor
jae
mov
andl
rclb
mov
push
jmp
fisttpl
pop
or
popa
pop
sub
ljmp
xchg
roll
dec
sbb
pop
sti
popa
push
test
and
negb
adc
and
sbb
pusha
mov
out
lahf
out
into
fsts
je
andb
jb
xor
into
pop
dec
dec
lds
xchg
adc
cmpsl
cmc
repz
sub
jnp
in
push
andb
add
xor
leave
test
add
mov
sahf
and
je
add
dec
inc
sbb
jbe
mov
pop
jae
test
cwtl
mov
add
jae
sbb
rsm
mov
out
cli
xchg
imul
testb
xchg
sbb
lea
int
mov
jp
das
push
mov
test
inc
mov
nopl
sbb
inc
aaa
fsubrl
loop
flds
fs
nop
imul
sbb
imul
or
js
dec
in
add
mov
xor
fdivr
aad
dec
jmp
arpl
lcall
ret
sahf
je
test
jo
mov
lea
movsb
jnp
xchg
gs
pop
imul
pop
mov
pop
ficoms
sarb
aaa
std
mov
pusha
mov
jb
inc
hlt
aam
push
inc
in
xor
loopne
sub
test
js
adc
daa
and
fisttpll
add
add
in
xchg
push
jo
mov
mov
inc
cwtl
imulb
jmp
cmpsl
jg
dec
and
je
lds
repz
xor
repnz
mov
add
or
lret
dec
jmp
cld
jp
jno
pop
jb
dec
sti
jmp
pop
fdivrl
std
test
xchg
cmpl
add
and
bound
dec
lods
xchg
jecxz
hlt
fcom
call
push
pop
notb
sub
cmp
out
or
into
cltd
xor
cmp
jecxz
out
cmpsl
mov
lock
clc
push
shll
push
repz
mov
sub
or
dec
mov
icebp
jae
repz
sbb
in
cmpsl
insl
cmp
xor
add
test
fisttpll
loope
cmp
adc
mov
fdivl
pop
fldenv
es
jne
pop
mov
ret
aad
push
sahf
cmc
sbb
mov
push
inc
cmpsb
addr16
pop
inc
adc
test
add
mov
inc
mull
jecxz
fcoms
sti
test
and
sbb
mov
jp
rcl
inc
int3
mov
mov
fwait
pminub
or
rol
add
adc
mulb
mov
neg
dec
mov
lods
fcmovu
scas
or
inc
push
mov
xchg
loopne
cmp
ret
je
cwtl
add
jg
push
pop
mov
xchg
sub
jo
lcall
sbb
negl
jmp
inc
cmpsb
stc
xor
xor
jl
cmp
lods
xchg
inc
lods
cs
inc
push
or
jb
mov
push
mov
test
dec
cmc
out
dec
inc
pop
in
sahf
jno
pop
fs
imul
int
loopne
shr
iret
xor
pop
jnp
jge
mov
fistps
or
aam
xlat
sbb
cld
inc
adc
pop
in
mov
sahf
les
and
sub
push
cli
adc
lret
addr16
lods
sbb
orl
mov
dec
js
xor
outsl
mov
adc
mov
cwtl
jo
jle
mov
fistl
bound
dec
sarb
add
xchg
lds
cmp
jnp
imull
daa
dec
sub
icebp
js
shlb
in
mov
pop
dec
test
pop
mov
movl
jne
dec
lret
lret
jg
lcall
js
xor
pop
in
ljmp
and
cmpsb
in
dec
cs
rcll
adc
scas
daa
mov
lods
jo
mov
fwait
mov
cwtl
lods
sub
xor
dec
iret
std
sub
inc
jp
lock
cmp
pop
and
hlt
mov
seta
sti
scas
push
mov
dec
adc
dec
cmp
jno
pushf
aad
mov
jns
and
ljmp
popa
jmp
insl
fildll
lods
les
cltd
inc
inc
cmpsb
add
arpl
jo
scas
lret
testl
imul
mov
ss
call
xchg
sub
loop
sub
xchg
icebp
cmc
stos
in
mov
insb
aaa
xchg
mov
fsubrs
fisubrs
das
lcall
cmc
mov
jns
jecxz
inc
psrlq
inc
or
mov
roll
faddl
testl
pop
into
mov
sub
cmp
mov
test
iret
in
imull
fwait
inc
mov
sub
fcompl
and
or
nop
fiadds
inc
mov
add
push
jg
sub
jo
clc
aad
push
mov
sbb
or
int3
dec
sbb
fistpl
xchg
and
dec
push
dec
and
add
inc
or
js
ss
push
iret
mov
push
or
and
sarl
loope
cmp
xchg
push
sbb
loop
cltd
arpl
shlb
and
xorb
jnp
ss
mov
aad
xchg
jns
xchg
lods
push
pop
xor
movsb
sub
jno
lret
jl
fsubs
mov
loopne
dec
xor
or
jle
pusha
data16
lds
jno
ficomps
test
add
cmp
jl
xor
movsl
enter
sti
mov
pushf
dec
push
subl
rolb
pop
pop
sub
push
outsb
and
pushf
jnp
jnp
jnp
inc
dec
push
cli
ljmp
sbb
push
sub
bound
gs
dec
jg
imul
sbb
outsl
sub
xor
call
incl
bound
pop
lea
mov
pop
mov
les
jl
push
cmpsb
adcl
xchg
mov
sub
movsl
loope
out
roll
mov
shlb
imul
in
fldt
inc
test
jbe
and
out
adcl
ds
mov
cmp
sub
scas
imul
xchg
cmp
dec
pop
fwait
mov
xchg
pop
mov
mov
sbb
push
outsb
cmp
stos
cmp
push
imul
mov
enter
inc
js
dec
mov
scas
icebp
add
add
mov
nop
jg
loope
dec
int
xlat
jb
inc
push
call
cli
mov
pop
xchg
push
inc
push
lods
sub
inc
sbb
out
mov
mov
subb
mov
pusha
insb
ljmp
rorb
adc
push
adc
fucomi
es
loope
test
fwait
pop
xor
or
xchg
lcall
outsb
jecxz
lahf
cmp
fldt
shl
pop
lret
fildl
xor
xor
adc
pop
popa
cmc
inc
adc
sbb
fdivr
xchg
into
imul
and
xlat
xchg
leave
push
inc
insb
xchg
xchg
imul
cmpsl
or
add
imul
jbe
xchg
imul
std
push
fsubr
push
mov
or
sarb
pop
movsl
inc
mov
mov
mov
lret
clc
mov
ffreep
jne
pop
cmc
and
jae
orb
jb
cmp
arpl
in
xor
sub
mov
mov
out
xchg
in
int
or
mov
adc
jl
rclb
xchg
push
iret
push
scas
pop
mov
mov
sbb
adc
push
ret
stos
lahf
inc
dec
gs
ss
sub
lock
jne
mov
jp
xchg
cmp
test
es
add
xlat
test
insb
or
clc
or
jp
lock
orl
or
or
xchg
pushf
lret
fldcw
push
pusha
shlb
and
adc
in
pop
shld
pop
add
inc
xchg
push
jno
mov
adc
filds
push
notl
lcall
pop
xchg
xor
lea
jb
dec
xor
sub
pop
mov
cltd
pop
lahf
es
mov
addl
aas
xor
fcoml
push
pop
sbb
mov
ficompl
xorb
ret
or
pop
add
aam
xchg
pop
fldcw
ds
ja
pop
mov
xchg
mov
xor
jp
or
add
or
addl
dec
xchg
cli
movsl
jb
jno
fs
push
add
sub
jno
cld
add
inc
mov
xchg
addr16
fdivl
insl
push
out
rclb
add
rolb
clc
nop
insl
daa
int
dec
dec
add
or
mov
mov
and
lods
sbb
add
or
pop
sbbl
call
push
mov
xor
lds
mov
mov
filds
mov
imul
and
addr16
ja
decl
cmp
test
ror
orl
aaa
ret
stc
daa
sbb
dec
stc
inc
push
push
scas
cmp
fdivr
pop
aas
imul
cld
or
xor
addr16
je
and
push
rorl
loope
mul
into
adc
inc
add
xchg
pop
loopne
jbe
in
fstpl
sti
int3
add
imul
dec
outsl
pop
mov
insb
out
adc
jnp
mov
sbb
mov
sub
aam
insb
xor
scas
push
aad
sbbb
js
in
xor
int3
cli
mov
not
and
aam
sbb
test
jmp
push
dec
sbb
mov
cmp
sub
jae
loopne
sarl
jb
aam
popf
aaa
xchg
daa
insb
sbb
mov
std
fwait
xorb
ljmp
add
imul
xchg
sub
jg
aas
mov
cltd
sub
or
and
jmp
adc
cmpsl
mov
dec
sub
out
mov
jo
dec
and
movsl
push
dec
aaa
add
adc
vpsubusw
sbb
stos
push
push
stos
sbb
pop
mov
add
adc
pusha
cmpsb
test
rcrb
ss
jnp
mov
fisubrl
xchg
lahf
adc
sub
popa
mov
mov
mov
inc
pushf
outsb
add
js
fwait
sbb
add
les
ljmp
das
icebp
hlt
pop
push
test
inc
mov
xchg
sub
daa
pop
push
ret
pop
cmpsb
dec
addr16
mov
mov
pop
inc
enter
adc
popf
jmp
mov
cmpsb
out
andb
and
cmpsl
test
adc
dec
jb
xchg
xor
xchg
and
into
cmp
adc
aad
push
and
or
cld
xchg
mov
adcb
inc
adc
loopne
mov
and
dec
stos
mov
movzbl
imul
sbb
adc
jp
inc
lock
sbb
mov
and
mov
pop
fidivrs
lret
lret
out
ljmp
adc
decb
mov
je
jb
mov
mov
fnstenv
pop
shll
lcall
jne
jmp
lods
popf
arpl
pop
xchg
loop
add
lds
mov
inc
enter
and
lea
adc
ja
adc
sti
enter
imul
xor
ljmp
sub
and
xchg
jo
add
sbb
mov
pusha
test
dec
xchg
sub
outsb
xor
mov
mov
dec
pop
mov
subb
pop
subl
dec
pop
jnp
and
xor
lcall
gs
out
sbb
hlt
pop
int
cmp
dec
int
lods
and
or
rolb
mov
inc
repnz
cld
jbe
adc
push
inc
je
leave
iret
add
lds
and
lods
push
pushw
int
cltd
shl
and
xchg
add
and
jle
outsb
mov
cltd
sbb
mov
inc
call
jge
mov
js
fsubrs
into
mov
sbb
insb
adc
ljmp
mov
pop
jle
add
sti
add
in
xlat
pop
jl
push
xchg
sbb
mov
pop
adc
daa
push
out
insl
lods
push
xchg
add
jl
pop
mov
inc
xchg
mov
cmp
mov
mov
jmp
test
push
stos
pop
mov
fs
repz
mov
mov
enter
fisubl
je
push
adc
testb
les
sub
pop
mov
int3
add
push
out
loop
mov
inc
data16
sub
jge
aam
pop
pop
pop
jnp
aaa
xor
add
int3
cmp
push
loopne
push
mov
test
and
or
and
sub
sub
inc
std
hlt
cmp
sub
xacquire
mov
lods
in
mov
popf
push
xchg
imul
mov
or
fsubr
call
dec
mov
sbb
movsb
sub
sub
and
add
push
loop
or
dec
mov
je
jmp
push
mov
sbb
pop
rcll
not
mov
sbbl
and
push
push
test
lea
push
xchg
sub
cltd
xchg
jo
shll
aad
in
mov
xor
sbb
mov
outsb
mov
add
mov
inc
pop
push
jge
hlt
cld
mov
mov
push
pusha
call
cltd
xlat
mov
xlat
or
sti
bound
dec
aad
cmpsb
bound
cmp
add
fwait
mov
inc
mov
sub
dec
jecxz
add
test
daa
jno
push
mov
inc
xchg
jnp
add
fs
enter
cmp
std
dec
add
sbb
pop
leave
std
xchg
aad
mov
push
lret
sbb
xchg
jns
arpl
mov
ja
and
mov
dec
push
ja
adc
adc
nop
int
dec
push
ss
or
lock
iret
daa
dec
cmc
lock
aaa
clts
test
mull
mov
pop
mov
dec
ja
imul
scas
cmc
sub
add
rol
out
mov
lret
pop
rcr
sub
adc
lcall
mov
cli
jb
insb
sub
clc
in
jno
mov
loop
mov
outsl
int
mov
sbb
or
adc
mov
inc
xor
jecxz
addr16
lods
call
aam
in
dec
xor
push
sub
jcxz
incb
jb
cmpsl
lea
stos
mov
fldcw
push
dec
cmp
jg,pt
fdivrs
mov
stos
cs
adc
xchg
mov
jnp
hlt
mov
cmpsb
mov
pop
push
cmpsl
jecxz
cmpsb
inc
xlat
loopne
clc
scas
mov
rorl
mov
int
xchg
jge
dec
insl
inc
inc
in
xchg
mov
int3
inc
addb
and
xchg
pop
jo
adcb
mov
lret
bound
addr16
shrl
dec
ljmp
inc
cwtl
aas
mov
jle
sub
sbb
js
fldenv
popf
ss
leave
mov
inc
add
sub
mov
ljmp
pop
pushf
mov
gs
sub
adcb
clc
pop
int3
xchg
cmp
ja
scas
out
push
lret
loop
pop
push
in
in
pop
xchg
out
adc
sahf
lcall
stos
ret
jg
pop
bnd
fcoms
push
imul
add
negl
stc
cwtl
stos
inc
mov
stos
ljmp
push
cmp
inc
dec
or
xor
add
call
iret
test
mov
arpl
cmp
imul
push
mov
bound
sub
pop
fcmovb
int3
cmp
push
shlb
mov
sti
push
dec
mov
xor
out
out
test
xchg
out
fisubrl
sub
scas
jnp
dec
jno
nop
jecxz
clc
jns
out
fcmovu
dec
cmp
idiv
arpl
and
jne
pop
add
mov
or
mov
pop
cld
in
mov
mov
add
xor
cmp
movsl
adc
xor
fsub
je
insb
in
in
js
push
bound
in
lahf
and
push
test
pop
cmp
out
pop
shrl
mov
mov
leave
push
ljmp
out
popa
and
out
push
mov
into
idiv
out
jl
cltd
inc
ret
cld
push
jo
bound
adc
sbb
mov
jp
js
or
sub
jae
out
andl
shlb
imul
xchg
pop
sbb
mov
dec
inc
sbb
sub
ja
pop
push
pop
sar
sub
push
mov
dec
pop
movsl
scas
cmp
mov
and
mov
lret
push
adc
xor
inc
insb
pop
cmpsb
out
leave
ljmp
push
enter
jecxz
subb
sbb
dec
jp
xchg
sub
shrl
mov
cltd
mov
pop
shl
mov
xor
inc
mov
push
push
lods
xchg
adc
rcl
hlt
jo
mov
pop
jmp
addr16
test
sub
lahf
sub
mov
rdtsc
enter
sub
insb
pop
cltd
pop
out
mov
cs
rcll
xor
jnp
mov
push
insb
into
adc
leave
pushf
filds
pop
jbe,pn
mov
cmp
inc
pushf
mov
xchg
push
add
loope
pop
in
and
dec
jg
push
add
das
mov
sub
sub
dec
add
outsb
ds
adc
adc
inc
pop
pop
dec
orb
push
daa
sbb
push
and
and
ja
stos
inc
adc
addr16
mov
push
pop
adc
iret
mov
leave
dec
rolb
cwtl
imul
daa
adc
dec
je
cmp
shlb
in
adc
jecxz
pop
fisubl
outsb
or
js
jmp
stos
out
out
in
dec
adc
push
test
sbb
fidivrl
cmc
sbb
inc
or
arpl
rorb
ss
outsl
psubd
cmp
sti
push
fisubrl
mov
loopne
cmp
fnsave
test
sbb
hlt
jecxz
add
cwtl
adc
inc
cmp
sub
add
sbb
mov
mov
es
hlt
in
cltd
inc
in
xchg
sub
xchg
iret
daa
mov
sub
int
outsb
inc
adc
je
mov
sbb
cltd
inc
test
in
aad
js
mov
add
adc
lds
into
imul
push
push
popa
adc
out
dec
pop
jecxz
push
pop
sub
int
shll
inc
adc
fwait
sbb
mov
scas
sti
mov
fisubrs
cltd
arpl
mov
hlt
pop
sti
xchg
add
xor
mov
adc
sbb
adc
mov
pop
mov
adc
jb
mov
dec
rcrb
mov
repnz
sarb
ficoml
dec
mov
stos
loop
pop
or
fxch
ret
xor
into
leave
cmpsl
mov
mov
mov
pop
mov
cmpsl
inc
movsl
fs
cmp
cmp
jae
daa
cmpsb
pop
loopne
iret
xchg
aad
and
stos
inc
sbb
mov
cmp
cmp
inc
jnp
loop
scas
sub
cli
mull
xchg
test
into
xor
in
outsb
mov
mov
xchg
sub
scas
jge
mov
dec
pop
inc
shrb
push
sbb
idivl
inc
mov
cmp
loopne
jg
push
fsubr
xchg
mov
adc
insl
and
cwtl
or
push
fldl
loope
std
movsb
cli
lea
insl
mov
mov
pop
addr16
and
mov
ja
or
in
or
inc
mov
jb
popa
inc
jp
sbb
push
aaa
lods
adc
push
cmpsl
lea
or
sbb
stc
sbb
scas
lcall
nop
pop
fwait
sbb
push
dec
scas
lahf
scas
mov
mov
enter
inc
aad
dec
lods
lret
or
ljmp
flds
lahf
mov
mul
arpl
cli
sbb
fs
and
sub
clc
mov
sbb
xlat
int3
mov
xlat
les
push
clc
cmp
jnp
stos
inc
ljmp
daa
inc
rolb
int3
dec
faddl
out
mov
dec
sub
cld
imul
sbb
add
pop
mov
in
pop
ja
jb
in
repz
dec
bound
xchg
xchg
mov
inc
sbb
es
inc
adc
and
iret
cmp
jmp
xor
push
mov
cmp
sub
dec
inc
jne
lea
popw
enter
mov
mul
mov
inc
popf
push
frstor
push
das
push
stc
jl
mov
mov
nop
rcll
pop
dec
aam
dec
jno
lock
aad
les
fnsave
ret
ret
insl
jecxz
test
ljmp
mov
stos
ss
out
dec
fmull
xchg
call
mov
lret
jbe
dec
pop
or
stc
mov
mov
lods
lret
or
mov
inc
sahf
fwait
adc
or
dec
xor
ds
aam
rcrb
ds
ja
fidivs
adc
cmpsb
pop
sarl
lods
mov
or
push
and
lret
je
sub
pop
in
xchg
pop
inc
sub
cltd
lea
filds
jno
or
push
cmp
lods
shrb
jbe
pop
mov
mov
sbb
xor
imul
inc
sarb
sbb
loope
lahf
sub
hlt
jle
push
mov
fbstp
ljmp
outsb
or
hlt
stos
rclb
dec
mov
adc
loopne
test
test
inc
out
in
shll
add
stos
inc
std
les
sbb
enter
inc
add
inc
lcall
jae
fld
push
cmp
fidivrs
ljmp
fbstp
or
sarb
arpl
fldcw
sub
adc
fildl
jnp
xchg
das
mov
fcmovnb
cmp
fs
mov
mov
pop
bound
or
lods
hlt
jl
inc
inc
inc
mov
repz
imul
and
push
cmp
mov
mov
dec
in
fisttpl
push
aad
dec
jge
dec
adc
xor
push
les
or
clc
xor
cmpsb
lock
push
mov
mov
mov
aaa
dec
test
jae
push
push
je
mov
outsl
sub
cmp
fisubrl
mov
sahf
insb
sarl
push
inc
shld
ja
xchg
add
jl
fdivr
sbb
xlat
sub
nop
xchg
insb
ret
cmpsl
inc
int3
add
xor
inc
inc
fmul
jns
add
in
daa
outsb
mov
stos
xchg
adc
les
xlat
inc
pushf
xor
jecxz
sub
jl
jae
test
mov
cmp
ljmp
xchg
shl
dec
mov
lret
sahf
mov
out
addr16
mov
cli
add
pop
in
jb
cli
out
jg
iret
push
fsubl
scas
mov
out
repnz
cmp
in
push
inc
mov
xchg
or
or
and
push
mov
and
loopne
push
cmp
push
adc
pusha
sar
les
cltd
sub
xor
push
xchg
xchg
sbb
fdivl
ljmp
push
out
inc
lcall
sbb
sti
xchg
adc
add
sub
bound
inc
dec
mov
or
fidivrl
mov
dec
push
lock
fldenv
pop
and
cli
cltd
push
incb
xchg
pop
mov
sbb
pop
or
icebp
aaa
stos
mov
inc
test
cmp
roll
inc
sbb
insl
mulps
jl
push
in
fcmovnu
aad
xchg
xor
mov
cmp
je
hlt
xchg
push
iret
das
mov
pusha
inc
mov
lea
jl
aaa
mov
dec
adc
pop
dec
push
aam
fnsetpm(287
add
or
sub
popf
jl
dec
inc
cs
lcall
loopne
or
or
shl
mov
push
sti
sbb
cmpsb
push
fstpl
or
xor
dec
push
push
aas
in
inc
outsb
sub
cltd
cmpl
popf
ds
jmp
adc
pop
jnp
xchg
jns
mov
cld
ds
mov
in
sub
pop
xor
add
ja
idivl
into
or
jne
pop
mov
cmpsb
add
xchg
lds
iret
pop
xchg
pop
in
and
xlat
roll
and
mov
ret
orl
jae
cmpsl
ja
add
rolb
cmp
lret
in
sbb
hlt
jg
adc
fisubl
and
jo
loope
mov
stos
out
out
fmull
xor
cmpsl
cld
incb
add
lcall
jecxz
cmp
sub
mov
loop
add
scas
repnz
cmp
lcall
lcall
out
mov
jne
and
dec
repz
mov
dec
xchg
rorl
and
xchg
jns
aam
mov
jns
jp
andl
testb
scas
inc
push
sbb
or
mov
push
repnz
fadds
js
ja
fadd
ss
or
lods
fwait
mov
movsl
push
in
jmp
lods
stos
add
sbb
fstpl
in
pop
jl
negl
std
loopne
aaa
data16
faddl
or
cmpsl
nop
shrl
lahf
cwtl
mov
fs
loope
jbe
rcr
mov
scas
mov
or
add
mov
pusha
into
fidivrl
je
sbb
inc
je
scas
dec
adcb
iret
lods
or
inc
cmp
inc
jnp
push
shlb
pop
lret
lcall
stos
shlb
pop
mov
addb
add
mov
ficompl
mov
lahf
adc
mov
mov
jnp
mov
bound
adc
sti
jb
mov
jnp
pushf
and
idivb
lret
adc
std
ja
outsl
hlt
and
xchg
adc
enter
lcall
sbb
sti
int3
or
cltd
push
sub
iret
in
inc
fiadds
add
fmul
test
dec
xchg
ret
xchg
sbb
cs
sub
pusha
lret
lret
bound
fdiv
push
mov
imul
je
push
mov
pop
in
pop
cmp
imul
dec
inc
rcll
push
lea
out
mov
jo
dec
bswap
sub
mov
in
fcmovne
je
pop
das
loopne
fs
loop
cmpsl
clc
not
sbbb
pop
test
inc
adc
mov
hlt
loope
fdiv
mov
adc
test
push
xchg
add
cmp
xor
ror
outsl
pop
sub
ret
in
imul
sbb
push
xchg
mov
and
push
cmp
xchg
mov
lahf
rcll
nop
add
gs
sbb
int
mov
xchg
icebp
cmc
jle
mov
mov
push
jmp
mov
mov
repnz
or
ret
fmul
repz
adc
mov
sub
adc
test
stos
dec
xchg
in
xchg
cmp
xchg
in
pop
test
fdivrs
ror
movsb
jp
arpl
aaa
faddl
push
dec
mov
cmc
pop
ljmp
sbb
push
into
call
addr16
mov
sub
add
sbb
out
adc
in
and
in
ficoml
adc
scas
and
filds
pop
xchg
imul
dec
cmp
subl
call
bound
sbb
shl
shll
insl
adc
dec
push
inc
imul
nop
sub
lret
jae
mov
dec
add
scas
cmpsl
pop
addr16
push
popf
add
sub
into
xor
or
into
xchg
dec
jnp
cmp
mov
loop
and
xlat
mov
cltd
popf
in
shlb
pop
stc
stc
out
mov
and
jns
imul
lock
subl
jb
and
test
or
push
inc
push
pop
push
add
cmp
andb
cs
mov
je
and
cmc
pushf
ss
fs
cmp
enter
out
imull
mov
and
push
push
bound
arpl
iret
jmp
bound
pop
jmp
inc
mov
push
push
mov
mov
dec
pop
in
xchg
jae
jb
xchg
dec
sbb
push
sbb
cmpsl
xor
test
push
ret
fildll
repnz
pop
stc
mov
bound
loop
push
cmc
inc
mov
mov
in
mov
adc
je
sub
fs
cwtl
inc
loopne
jp
in
lods
andb
mov
nop
mov
enter
mov
pop
icebp
or
sub
popf
sbb
inc
testb
jp
loope
insb
lea
xor
mov
inc
out
fadds
scas
inc
fcmovnb
cmp
inc
movsl
add
imul
dec
pop
je
xor
addr16
jmp
push
push
outsl
jnp
aaa
iret
fcoml
xchg
mov
ja
gs
rolb
dec
xor
loop
sahf
cmp
insb
mov
sub
sub
pop
out
in
add
pop
orb
insb
jg
or
hlt
inc
cmpsl
and
outsb
popa
sub
call
or
or
push
pop
push
hlt
loopne
mov
repz
and
jle
dec
push
dec
pop
pop
clc
push
push
xchg
xchg
pop
scas
inc
jmp
dec
push
enter
test
mov
mov
clc
out
cltd
stos
mov
mov
add
adc
cwtl
inc
sub
cltd
dec
jnp
ss
sbb
pop
dec
stos
dec
push
and
xchg
loop
les
jmp
int
lahf
push
ja
dec
movl
scas
negb
xor
adc
add
aam
mov
mov
hlt
add
mov
test
jae
out
cmp
rolb
cmp
in
mov
pusha
sbb
clc
out
lods
in
push
sahf
jle
jp
addr16
das
incl
cli
stc
jl
test
mov
rolb
testl
mov
lret
jno
or
das
xor
jl
jns
nop
imul
sbb
mov
jb
nop
ja
rcll
mov
loope
sbb
imul
add
dec
addr16
ja
pop
out
mov
dec
ret
jo
mov
ret
mov
mov
or
call
add
int
cli
iret
sub
jnp
pop
repz
xor
add
es
sub
add
je
ret
testl
cld
dec
jb
and
ror
fwait
mov
ret
sbb
rcrl
idiv
cmp
sahf
and
popa
push
mov
lods
out
je
sub
mov
les
lods
mov
ret
sub
lahf
jmp
lret
outsl
inc
add
cli
incb
dec
out
xor
jno
mov
xlat
fdivrl
jns
push
cmp
dec
fiaddl
enter
or
inc
mov
and
xchg
bound
xor
mull
leave
xchg
inc
dec
push
sbb
js
adc
xor
pop
dec
mov
das
adc
cli
sub
sbb
sahf
xor
mov
enter
lcall
roll
mov
popa
dec
mov
sbbb
push
lods
adc
loope
repz
nop
in
stc
cmp
pop
sub
in
gs
sti
out
mov
or
mov
or
test
xchg
loop
fs
inc
pop
fsubp
int3
cmc
cli
dec
add
mov
cmpsb
adc
inc
push
fsubl
and
fldenv
sbb
aad
mov
cmpsl
dec
mov
cmpsl
ret
sahf
fistl
jns
push
call
dec
stos
and
jns
in
aas
inc
push
jge
mov
outsl
mov
adc
or
xor
cmp
scas
or
xchg
daa
aad
jne
roll
push
ficoml
lahf
inc
clc
jl
jl
movsl
inc
cmp
mov
aaa
cltd
sub
sbb
test
in
sahf
sbb
rorl
inc
mov
leave
xchg
sti
mov
push
sub
and
ror
sar
and
add
dec
movsb
lcall
jl
inc
adc
ja
fwait
data16
out
in
scas
pop
stc
test
stos
imulb
inc
movb
loope
xchg
bound
insl
shll
imul
and
cmp
sahf
xorl
pop
inc
outsb
lock
push
push
push
mov
sub
sub
sub
std
sub
inc
pop
dec
mov
pop
jno
lahf
push
lahf
sbb
xchg
gs
sub
sbb
mov
cwtl
call
xchg
push
std
sub
jg
xor
xchg
mov
test
push
out
lock
mov
mov
sub
inc
js
mov
xchg
fmull
stos
add
and
xor
mov
cmp
xchg
jp
jnp
adc
mov
adc
mov
dec
lcall
out
sub
ja
cs
jmp
aaa
sbb
ret
sub
cld
hlt
addr16
and
xchg
fstps
mov
ja
les
mov
ljmp
call
cs
mov
mov
inc
xor
outsl
mov
push
xchg
pushf
pop
dec
jne
jl
inc
cmpl
aaa
cmpsb
loope
dec
cltd
xchg
dec
xor
adcl
int3
addb
sub
mov
inc
or
hlt
mov
sub
mov
loop
dec
ret
pop
pop
pushf
jle
mov
fcmovbe
mov
hlt
pop
insb
in
aas
sbb
es
add
xchg
loope
leave
xchg
test
outsb
mov
in
mov
inc
fs
sub
mov
and
pop
pop
movsl
jnp
popa
inc
inc
shll
inc
aad
sbb
fcmovnbe
inc
je
mov
enter
ficoms
push
por
movups
and
clc
jl
ficompl
mov
sbb
mov
mov
mov
mov
fwait
test
lcall
cmp
mov
lods
mov
xchg
cmove
fnstenv
scas
iretw
xchg
out
dec
push
sti
ja
xor
aas
test
fs
repnz
test
sarl
push
adc
int3
outsb
out
scas
xor
adc
push
or
dec
push
addr16
mov
int3
lret
cld
adc
aad
jge
call
addl
cmp
test
inc
xor
mull
cmp
push
movsb
popf
in
or
and
int3
and
pop
xor
sti
aaa
mov
mov
xor
lods
aas
mov
popa
into
adc
mov
fs
ret
sbb
mov
movl
out
shlb
push
mov
or
ljmp
in
dec
fstpl
or
xchg
sbb
test
xchg
inc
or
sbb
into
pop
pushf
jb
push
push
or
orb
xor
movsl
xchg
imul
lods
fldt
sbb
mov
pushf
push
jecxz
scas
mov
jmp
pop
or
lods
cltd
add
push
and
arpl
pop
rcrl
lcall
ljmp
jecxz
stc
dec
jmp
outsl
icebp
cmpsl
jbe
mov
mov
or
add
data16
mov
or
mov
push
xor
insb
mov
unpcklps
insb
mov
lock
push
in
mov
stc
pop
or
ss
adc
sti
mov
popa
cmp
out
in
into
call
addr16
mov
out
xchg
push
scas
adc
aas
movsl
iret
in
mov
mov
test
adc
enter
leave
in
lock
fsubs
or
ret
fcmovu
pop
gs
pop
mov
ds
cli
fsub
data16
test
pop
jmp
into
dec
adcb
hlt
imulb
pop
ss
ljmp
push
cwtl
aaa
lret
roll
imul
imul
push
scas
lods
repnz
icebp
pop
sub
jo
stos
lret
inc
mov
shlb
stos
mov
bound
jp
bound
insb
push
mov
push
xor
loopne
test
repnz
jle
inc
mov
aas
or
pop
outsl
je
inc
add
or
fildl
pop
mov
lods
mov
mov
imul
or
jl
ret
xchg
xchg
test
lcall
cmp
insb
mov
inc
ljmp
xchg
sbb
cmp
inc
lret
xorl
std
xchg
popa
imul
mov
loop
mov
popa
insb
inc
jp
or
push
xor
cmp
xor
pop
mov
rcrl
test
jl
xchg
call
pop
xor
mov
add
ret
imul
inc
scas
repnz
mov
sub
xor
loopne
sbb
adc
dec
xor
int
andb
jne
stos
mov
push
xchg
mov
es
inc
pop
ljmp
jno
adcl
xchg
cmp
fisubrl
dec
scas
enter
stos
ja
outsl
add
leave
insb
mov
out
test
mov
pusha
cltd
lods
xor
and
and
fimuls
xor
mov
test
mov
mov
cwtl
xchg
xor
dec
mov
adc
leave
data16
out
inc
rcrb
cwtl
pop
or
dec
jne
cmp
je
inc
or
jnp
sbb
adc
sub
sub
cvtdq2ps
popf
jle
sub
pop
test
xchg
int3
lret
push
mov
xor
pop
and
inc
push
cmp
sub
adc
jge
sti
cltd
addr16
and
in
pop
mov
cmp
push
pop
push
sbb
mov
adc
sbb
cmp
filds
jle
in
fnstcw
pop
sahf
js
rcll
adc
inc
pop
pop
mov
pusha
bnd
add
sbb
movsl
dec
rcll
jns
test
cmp
jg
push
ret
insb
add
and
les
fisubrs
inc
cmpsl
daa
and
sbb
jle
shrb
adc
mov
lea
adc
shl
sub
les
pop
mov
iret
cmpsb
or
sbb
fwait
cmp
ljmp
ja
fs
inc
xor
sbb
pop
cli
mov
mov
adcl
lea
inc
mov
scas
repz
cmpsb
mov
pusha
cmp
cmp
xlat
inc
mov
mov
mov
mov
ss
loop
lock
orl
cmpsb
lods
mov
xchg
hlt
leave
add
jecxz
cmp
dec
test
shrb
cwtl
sbb
insl
xchg
outsb
xchg
std
loope
lret
nopl
imul
jmp
loopne
cmpsl
xor
mov
lea
mov
pop
data16
add
cs
scas
ret
push
movb
adcb
sar
or
stos
dec
dec
xchg
lahf
jg
push
adc
rorl
inc
pusha
push
leave
add
fcmovu
mov
mov
cmp
add
in
push
and
jp
pop
inc
js
xchg
mov
cmovle
jl
sub
jp
push
movsl
out
das
dec
fs
cwtl
scas
insl
std
mov
inc
mov
decb
jbe
sub
fiadds
dec
call
and
and
pop
sbb
jnp
outsl
add
fadds
ret
jp
mov
sbb
mov
jge
sarl
inc
mov
lods
js
lea
stos
xchg
cmp
out
jo
cmp
mov
sbb
sti
lds
xor
lds
loope
sbb
andl
jo
sub
test
mov
pop
mov
xchg
pop
adc
ss
xor
xor
pop
lock
sarb
out
addr16
jo
fadds
data16
cmp
ss
add
rcrb
push
pop
sbb
std
dec
adc
sbb
lods
add
pop
lods
pop
pushf
sahf
ret
jl
leave
out
mov
and
ljmp
sbb
jne
sub
xor
pop
cmp
testl
push
add
jmp
sbb
adc
nop
jmp
adc
xchg
test
xchg
mov
xchg
pop
lret
jnp
adc
push
mov
and
inc
rorl
lret
in
mov
jnp
shll
loope
fisubrl
pop
sahf
movsb
les
shl
jnp
jnp
cwtl
push
push
ret
xchg
test
lock
xchg
pop
stc
dec
mov
or
sub
stos
cwtl
aam
lret
cmc
jae
or
pop
dec
cmp
mov
adc
mov
sub
pop
push
inc
cmp
push
xor
mov
mov
pop
inc
andl
inc
sbb
in
popf
jp
push
mov
je
nop
cmp
lods
mov
scas
cmp
jmp
into
testb
ret
lcall
gs
outsb
xchg
sarl
loope
dec
dec
jge
out
dec
pop
stos
sbb
add
add
push
adcl
dec
cmp
xor
xorb
jmp
repnz
or
jp
push
daa
fistpll
add
call
pop
jno
jecxz
stc
pop
lret
fsubrs
pop
mov
cwtl
lret
outsl
out
mov
ret
in
jo
cmpsb
inc
dec
fcompl
mov
mov
ljmp
mov
movsl
or
xchg
cmpsl
loop
or
mov
jne
and
xchg
scas
call
sti
mov
imulb
ret
scas
je
push
adc
push
or
push
and
xchg
mov
cmp
jp
loopne
cwtl
mov
sbb
mov
popf
jmp
cwtl
into
rolb
out
push
or
and
adc
cmc
push
and
add
mov
nop
sub
fidivl
loope
jle
cmp
into
mov
xor
movsl
addl
xchg
jnp
pop
dec
adc
push
sub
xor
mov
push
sub
lds
hlt
dec
sub
jmp
jle
fwait
ss
insb
mov
cld
sarl
mov
int
lods
adc
sahf
xor
xchg
sbb
orl
out
in
addr16
mov
add
mov
mov
inc
out
pop
outsb
jb
add
mov
sub
ret
rorl
insl
pop
cmp
sub
lods
push
addr16
mov
adc
fistps
mov
add
jno
fsubs
or
inc
shr
pusha
lods
jge
dec
push
push
into
cmpl
hlt
jmp
pop
jmp
push
scas
in
push
cli
inc
loope
lock
mov
mov
and
push
lods
out
cmp
mov
inc
cmp
or
scas
or
aas
repz
push
test
pusha
lret
sub
add
out
or
dec
mov
add
and
data16
push
pop
pop
lret
mov
mov
xlat
shl
and
sub
sub
cmp
cs
and
xchg
xchg
popf
mov
fdivrl
inc
push
arpl
popf
pop
or
push
and
ljmp
and
addr16
xor
shlb
lcall
xor
jecxz
jb
pop
xchg
dec
mov
cmpsl
stos
pusha
test
jno
subl
cmpl
call
mov
and
add
jmp
pop
jae
and
movsb
stos
les
fs
and
idiv
mov
xor
push
enter
shll
pushf
pop
mov
mov
xlat
cmp
pushf
sbb
addb
dec
insb
daa
addr16
lock
in
dec
mov
jecxz
loop
arpl
pop
xor
jmp
mov
push
inc
std
loop
shll
jne
or
lods
aaa
popf
lock
stos
loope
bound
aas
add
repz
icebp
and
xor
or
repz
mov
imul
aas
je
shl
lret
mov
jo
clc
and
sub
inc
sbb
sbb
inc
ret
lods
add
mov
scas
fadd
mov
push
fst
lods
test
ret
or
dec
add
push
mov
adc
add
ljmp
scas
dec
imul
sub
xor
or
movsl
enter
cltd
mov
jb
loopne
jg
pop
mov
stos
aam
sarl
lret
add
dec
lods
iret
test
shll
jo
fisttps
jle
push
js
cli
jmp
add
inc
push
mov
daa
and
je
pop
mov
enter
push
cmpsl
jmp
mov
or
out
faddp
sar
cmp
cmp
xor
or
in
mov
or
jae
push
cmp
mov
fcmovne
mov
ja
mov
sbb
roll
push
in
in
fwait
inc
push
test
adc
sub
mov
pop
lock
mov
jno
adc
cmpsb
aas
mov
inc
adc
dec
xchg
push
sahf
outsb
push
subb
push
jo
sbb
or
rcrb
fcoml
mov
leave
ljmp
inc
shrb
xor
jns
outsb
leave
xlat
rclb
adc
ret
and
sbb
inc
rolb
ret
cld
sbb
xor
xor
xor
addr16
sub
xchg
inc
cld
orl
mov
fisubrl
mov
push
mov
fadds
jg
push
fidivl
movsb
stos
cmp
enter
inc
out
fidivrl
fstps
mov
int
andb
jl
pop
imul
sub
out
rorb
cmp
push
pop
mov
mov
cmpsl
fisttpl
imul
lds
pop
or
cmc
inc
inc
cmpsb
pop
enter
xchg
cmp
xchg
loopne
movsb
pop
or
and
push
std
jge
adc
fstps
in
rol
mov
and
push
js
in
pop
lret
or
repnz
into
bnd
inc
push
js
push
inc
andb
stos
filds
mov
xor
jmp
faddl
mov
jns
push
jns
dec
push
sbb
jg
clc
cld
leave
out
flds
pop
pop
incb
xchg
clc
adc
jp
pushl
mov
ljmp
dec
xlat
cwtl
pop
pop
testl
sub
and
cltd
cld
out
test
sbb
mov
jae
out
mov
jmp
int
xchg
push
stos
or
and
sub
dec
mov
push
jp
out
push
sbb
clc
ss
dec
push
vmaxsd
cld
js
arpl
dec
outsb
jne
scas
jb
rcrb
and
imul
xor
xor
inc
inc
or
push
icebp
pop
dec
xchg
lods
addr16
stos
loop
cwtl
sti
mov
mov
sbb
push
jecxz
push
mov
xchg
rol
dec
call
test
mov
mov
pop
bound
sti
mov
fists
scas
adc
push
sub
jg
push
gs
inc
hlt
cmp
push
clc
ret
or
sbbb
xchg
xor
test
cmpsl
shrb
dec
std
ss
cmp
jp
test
clc
jl
insb
mov
add
sub
sub
sbb
test
ret
cmpsb
scas
and
fiaddl
in
pop
jns
rcrl
stos
mov
cmc
repnz
mov
mov
outsl
and
repz
pop
sbb
xchg
push
popf
cmp
dec
sub
push
stos
stos
sub
negl
jb
jmp
inc
inc
cmp
insb
out
rcl
inc
add
inc
imul
test
sbb
es
pop
movsl
mov
jg
mov
push
pop
test
pop
loope
fldcw
mov
in
mov
test
fnclex
loopne
lret
icebp
mulb
insb
pushf
pop
xchg
push
mov
dec
dec
adc
in
imul
xchg
mov
mov
cmpsb
inc
shrl
pop
out
push
popf
movsb
xchg
dec
jl
dec
fwait
enter
les
notl
inc
xchg
scas
xchg
and
add
mov
es
out
outsl
leave
mov
jl
xchg
sbb
push
fildll
test
sub
daa
das
movsl
test
roll
sbb
mov
or
sub
arpl
add
or
cwtl
jecxz
xchg
jmp
loop
out
pop
ss
mov
mov
in
push
scas
and
sbbl
push
cmp
rclb
in
imul
add
inc
rcl
xchg
insl
sub
loope
outsl
sub
stos
hlt
sbb
scas
loop
mov
cmp
inc
lods
xor
hlt
cmp
add
out
icebp
jb
rorb
js
lret
inc
dec
cmp
xor
sub
test
push
cli
out
aam
jg
loopne
test
in
repnz
jo
mov
mov
addl
dec
arpl
popf
adc
test
jbe
push
cmpl
fnsetpm(287
or
push
mov
dec
sub
idivl
pop
mov
outsl
pop
jmp
pop
sbb
dec
es
mov
sub
jbe
scas
cli
das
mov
adc
insb
sbb
cmc
dec
rcrl
shll
aas
imul
pop
jnp
popa
mov
out
outsb
xchg
adc
dec
shr
xor
sarb
loope
sub
add
clc
scas
add
inc
cmp
rcr
pop
popf
popf
das
test
test
cmp
xor
lds
daa
andl
pop
and
out
push
jne
sti
dec
mov
sub
sub
fmull
lods
push
in
leave
mov
mov
stos
cmc
mov
mov
sbb
xor
jle
mov
add
pop
push
xchg
mov
sbb
into
daa
lahf
mov
sbb
push
push
enter
cld
pop
in
cli
test
cmp
faddl
push
sbb
xor
xor
sti
dec
jge
sub
lahf
sbb
and
clc
mov
clc
push
pop
push
movsb
popa
cmp
xor
lret
test
or
inc
push
mov
mov
cmp
sub
and
subl
xchg
in
icebp
imul
aam
mov
add
jae
push
push
mov
mov
rcr
mov
cltd
cmpsl
incl
fsubrs
or
jle
jo
push
loope
jp
arpl
andb
repz
cs
fidivrl
dec
and
repz
lds
mov
shlb
cltd
lea
popa
lret
xchg
mov
xlat
sub
fidivs
pusha
ret
lahf
cmc
mov
movb
cwtl
pop
jl
and
bound
sub
test
jl
sbb
add
frstor
pop
ficompl
cltd
push
mov
mov
movsl
inc
mov
icebp
jecxz
push
gs
sarb
xchg
pop
jge
jmp
push
mov
addr16
ret
mov
insl
into
scas
lahf
xchg
inc
fadd
data16
xchg
das
dec
sub
in
jno
jbe
mov
pop
dec
adc
popf
lods
fwait
lods
push
outsl
insb
or
push
push
mov
mov
nop
loop
dec
data16
shr
cmpsb
loopne
stc
pop
in
loope
lea
addr16
push
clc
fisttpll
push
jle
sahf
mov
ds
xchg
mov
int3
jle
cmpsb
scas
testl
mov
fucomi
and
aas
cmp
ljmp
push
and
mov
lcall
jp
pop
inc
mov
cmp
fdiv
sbb
pusha
xchg
fildll
shl
test
pop
push
incb
imul
mov
push
mov
cld
mov
jns
sub
xorb
fbld
in
or
cli
mov
mov
mov
lds
mov
dec
add
je
aad
int3
or
mov
xor
jl
add
or
outsl
push
mov
test
lds
pop
jae
cmp
ss
or
push
stos
lea
addr16
ffree
shlb
mov
dec
or
arpl
test
js
loop
aas
in
iret
lds
lcall
push
fsubl
push
sub
or
sbb
roll
cmp
mov
std
and
cmc
mov
jge
sub
in
or
or
cmpsl
fcomps
loope
add
sub
cs
jno
in
lcall
inc
mov
add
cmp
push
inc
out
js
sti
outsb
or
mulb
add
cmp
mov
fdivp
push
push
jbe
push
js
dec
add
jl
aam
mov
dec
push
xlat
fistl
push
dec
sahf
lcall
sbb
aad
sbb
push
lahf
imul
ret
cmp
dec
pop
sub
push
iret
pop
fdivp
scas
mul
lods
xchg
je
je
js
push
lret
push
insl
jle
clc
pop
jb
test
cli
jns
notl
dec
imul
xor
xchg
or
adc
or
fdivrl
rcrb
fimuls
aad
jecxz
push
in
dec
lcallw
dec
ja
lcall
jge
int3
add
adc
std
outsb
add
jo
stos
fs
pop
xchg
int3
call
scas
jne
imul
sbb
jne
pop
inc
jnp
mov
cmp
mov
jle
mov
pop
rorb
and
das
push
lock
imul
or
add
mov
add
mov
xor
inc
xlat
dec
pop
aas
hlt
pop
xlat
xor
mov
push
hlt
ss
mov
cltd
testl
or
mov
dec
popf
dec
cld
int3
lret
js
adc
push
xor
fildl
adc
lahf
sarl
scas
mov
dec
in
imul
inc
mov
roll
test
or
mov
dec
pop
ds
cli
enter
adc
sbb
fildl
mov
fs
pop
js
icebp
ja
cmp
jno
fisubs
inc
or
push
jbe
pop
loop
xchg
mov
pop
outsb
cmpl
int3
mov
pop
mov
add
dec
adcb
or
mov
fistps
xor
mov
movsl
and
pop
das
inc
jmp
or
std
cli
adc
adc
or
sub
sub
or
sbb
jp
sbb
jbe
and
mov
adc
inc
xorb
adc
jne
int3
xorl
push
fildl
cmp
mov
clc
mov
adc
xchg
push
lcall
push
push
cmp
pop
cmp
aam
dec
and
ja
movsb
mov
fdiv
cmp
gs
lds
cmpsb
flds
jmp
push
adc
mov
lea
mov
inc
scas
ret
and
jno
inc
cmpb
push
jo
xchg
cmp
mov
push
sahf
pop
imul
test
pop
xchg
or
jg
ds
in
test
lods
push
movl
push
mov
call
bound
das
cmc
outsb
mov
lock
sbb
add
repnz
sbb
mov
stc
xchg
push
repz
in
cmp
pop
mov
xor
push
mov
pop
and
mov
cmpb
mov
xor
add
popf
lret
or
and
mov
pop
pop
int
inc
push
pushf
dec
and
mov
push
test
add
aam
enter
sub
dec
test
xlat
arpl
int
dec
ret
cmp
pop
aam
ret
insb
mov
fidivrs
aam
imul
sub
or
pop
dec
pop
jmp
push
decl
mov
test
jmp
cmpsl
mov
sub
lret
add
adc
cmp
cld
push
inc
repnz
push
rorb
repz
daa
in
lret
fld
outsl
inc
movsl
fdivrl
or
loope
mov
dec
or
pop
mov
and
or
out
push
pop
and
stos
add
sbb
lahf
push
cmpsl
repz
mov
sbb
imul
and
mov
test
or
and
outsb
dec
and
shll
push
or
ljmp
out
add
test
add
test
in
jmp
fcomp
sbb
iret
dec
push
dec
andl
xlat
cmp
mov
clc
adc
mov
fcompl
sbb
or
pushf
push
cmp
out
lods
mov
pop
mov
jge
sbb
aas
inc
cmpsb
cwtl
ja
pop
aam
js
mov
adc
pop
jp
fbstp
arpl
shl
call
lods
negl
inc
cld
aad
cmp
movsl
leave
aas
ds
pop
popf
std
mov
cmp
insl
cltd
jnp
mov
aaa
insl
sub
data16
sar
dec
inc
mov
repnz
push
fsubrs
and
repz
jns
jle
add
lock
sbb
sub
add
filds
sbb
pop
mov
idivl
cmpsb
outsl
fs
imul
pop
into
in
sub
roll
daa
jecxz
jg
inc
push
dec
test
movsb
sbb
cwtl
or
add
lods
mov
gs
out
and
add
sbb
pop
scas
lods
pop
sub
stos
adc
and
cld
mov
dec
inc
loop
iret
jp
test
xlat
mov
push
imul
adc
ds
mov
jmp
icebp
pop
add
adc
bound
pop
jge
int3
bound
cwtl
loop
in
xlat
mov
pop
scas
mov
mov
ljmp
daa
mov
lea
push
shll
xor
pop
test
arpl
int3
dec
inc
inc
mov
sub
leave
jne
push
pop
dec
popf
fstpl
clc
call
lods
mov
inc
scas
mov
mov
leave
xor
imul
out
outsl
or
cmp
sbb
jl
xchg
inc
mov
cld
xor
mov
mov
pop
pop
ds
pusha
mov
out
scas
mov
dec
out
ds
dec
mov
push
outsb
jg
lret
aaa
sub
enter
sahf
fsub
leave
int3
jecxz
clc
jl
in
fsub
or
es
into
jno
push
push
test
test
jno
test
stos
sub
mov
stos
xrelease
xchg
mov
or
data16
sbb
test
pop
push
aaa
shrl
mov
les
cmp
push
test
scas
cmp
or
lock
sbb
jge
leave
push
aam
movsl
icebp
out
rclb
push
int
or
movsb
sub
dec
enter
popf
inc
mov
adc
sub
push
vunpckhps
mov
mov
cwtl
jns
dec
repz
lahf
pop
mov
in
fildll
xor
inc
ljmp
test
scas
mov
pop
int3
push
mov
and
testb
fxch
pusha
push
stc
sub
pop
xchg
sub
sub
ds
cmp
push
and
pop
sbb
and
daa
mov
js
sbb
dec
pop
lock
cmp
std
shr
adc
or
xor
xchg
dec
sti
int3
and
ret
mov
push
and
cltd
fcom
scas
jo
adc
push
gs
jmp
push
jo
aad
test
ss
ja
stc
js
test
out
add
pop
jle
mov
sub
jmp
jg
push
jbe
bound
jmp
fnsave
xor
mov
stos
and
roll
push
rolb
dec
mov
in
lods
mov
xor
leave
dec
mov
jle
push
negb
dec
mov
push
lods
aad
or
imul
les
inc
mov
pop
push
sbb
test
cmp
arpl
push
sub
push
dec
xchg
je
add
repnz
popa
div
iret
imul
aad
mov
and
or
lahf
inc
sub
inc
ja
stos
xchg
mov
test
lret
std
sbb
mov
jno,pt
cwtl
scas
xor
sub
xor
jno
sbb
jecxz
leave
add
les
push
cltd
or
and
leave
pop
sbb
insb
push
aad
mov
fwait
sbb
icebp
arpl
cmp
adc
add
add
or
jnp
sub
pop
gs
faddp
cmp
testl
mov
mov
jae
dec
xchg
xchg
clc
dec
js
mov
stos
push
sub
jp
cltd
movsb
aam
sbbb
repz
repnz
cmp
test
sbb
lods
ds
aas
movsb
xor
xchg
inc
sbb
imul
out
flds
inc
outsb
sbb
out
andl
lock
jp
jg
aam
iret
andl
loop
ds
push
hlt
shl
test
xchg
cmpsl
out
and
mov
aas
push
cs
out
gs
dec
and
popf
xor
fmuls
xchg
fsub
aad
jae
popf
and
jne
in
cmp
pop
mov
je
lret
outsb
push
iret
cli
push
out
repnz
mov
loope
jnp
dec
mov
xchg
out
add
loopne
xchg
clc
out
and
dec
movsl
cld
rcrl
mov
jb
es
and
mov
out
pushf
push
ss
mov
in
insb
fst
jns
mov
lcall
pop
pop
or
cmc
les
mov
icebp
sub
ljmp
rcll
jecxz
xor
mov
mov
in
fidivrs
clc
test
or
add
mov
cs
jno
mov
and
mov
push
sbb
test
dec
divl
xorb
jne
push
aaa
adc
lret
sub
pop
fdivs
je,pt
xchg
push
adc
shll
ss
mov
int3
cmp
sahf
pop
mov
ljmp
sub
dec
mov
sbbb
lock
sub
pop
cmpsl
add
ret
arpl
inc
or
cs
lock
fsubs
mov
xchg
inc
stos
idivb
mov
add
sbb
add
push
ljmp
je
mov
insl
cli
cld
outsb
lea
mov
dec
mov
sbb
popa
xor
shlb
ja
and
or
push
dec
mov
cmp
cltd
lret
mov
mov
xchg
cli
inc
cmp
popa
int
in
das
sbbl
sahf
sub
and
out
aas
repnz
cmc
sahf
les
call
fwait
cmpsl
inc
cmp
push
dec
aas
pop
pop
and
in
jle
ljmp
cmc
xor
cmpsl
dec
repnz
sarl
push
arpl
sbb
sbbl
into
and
dec
push
cmp
mov
dec
or
pop
ret
rorb
fnstcw
pop
push
and
jl
cmp
add
in
mov
xchg
add
outsl
push
fldl
outsb
sub
adc
clc
mov
sbb
sahf
loope
xchg
pop
adc
sahf
out
and
sbb
xor
sub
clc
push
imul
pop
cs
jg
sub
mov
jecxz
imul
inc
loopne
xor
sti
xor
test
xor
adc
mov
pop
mov
dec
sti
jg
cmp
adc
xorl
dec
cld
insb
adc
fldcw
cmp
xchg
es
xor
sarl
fwait
add
sub
dec
inc
xchg
in
mov
ficomps
fsts
ret
movsl
hlt
inc
fcomi
cmp
pop
cltd
push
dec
xchg
xchg
and
in
enter
mov
imull
inc
mov
stc
in
fidivrl
out
xchg
sbb
dec
push
jp
fdivs
stos
pop
sbb
mov
or
cmp
ja
insl
bound
inc
les
shll
in
inc
lods
and
hlt
ret
jmp
mov
int
jno
or
rclb
mov
dec
dec
mov
rorb
stos
sub
push
mov
fldl
pop
test
pop
movsb
mov
sti
rclb
cmp
bound
std
inc
sbb
sbb
aaa
call
clc
mov
mov
pop
push
xor
add
pushf
inc
popf
rcrl
loopne
inc
jg
dec
mov
xor
stos
inc
ds
dec
mov
loope
enter
inc
fldcw
mov
mov
fisubl
insl
adc
pop
gs
cltd
xor
mov
rclb
gs
dec
out
mov
xchg
pop
imul
xorb
nop
dec
sub
icebp
aaa
inc
add
loop
xchg
out
outsl
pop
mov
push
xchg
addr16
pop
cwtl
pop
xchg
xor
pop
push
mul
add
sbb
jle
inc
fcompl
sub
dec
mov
fdivs
cmc
pop
nop
or
and
pop
lahf
stc
jp
ds
adc
dec
sahf
test
cmp
into
or
mov
repnz
adcb
mov
mov
in
lahf
push
fdivl
pop
mov
stos
push
mov
test
neg
cltd
cmpsl
loope
sub
xchg
aam
dec
lahf
ljmp
popa
mov
fsubs
adc
mov
dec
jg
dec
mov
fisttps
lods
jns
mov
aad
mov
maskmovq
dec
dec
jl
xchg
fidivl
add
scas
bound
pop
sbb
xor
and
xchg
and
cmpsl
pop
ja
mov
ror
mov
outsl
and
insb
fildll
enter
pop
jnp
aas
fcomps
test
int3
xchg
divl
xchg
jge
jecxz
cmp
jnp
pushf
fwait
cmp
test
hlt
cld
pop
rol
push
mov
xchg
dec
xchg
mov
jmp
inc
bound
xor
pop
inc
cmpsb
lret
cwtl
mov
or
dec
lods
repnz
jg
or
repz
hlt
and
or
shl
js
push
cs
cmpb
xor
xchg
adc
xor
mov
das
sbb
cld
aam
pop
imul
lock
fadd
cmp
pop
or
xor
popa
mov
sbb
xchg
mov
rcrb
push
test
jns
adc
stos
loopne
shll
pushaw
ds
fcmovnbe
insl
scas
sbb
mov
or
sbb
add
in
inc
mov
fadds
lods
stos
sbb
cmc
aam
jg
xchg
pop
sub
xchg
cmpsl
mov
mov
add
inc
push
xchg
jl
sbb
gs
int
mov
push
mov
mov
mov
ficompl
roll
ljmp
xor
lock
inc
mov
je
mov
ljmp
xorl
pop
popf
pop
movsb
in
rorl
repnz
push
adc
mov
arpl
xchg
dec
lret
sar
icebp
lods
pop
mov
nop
in
push
mov
and
cwtl
push
lret
jnp
nop
xor
aas
movsb
mov
mov
movsb
mov
dec
sahf
or
js
dec
xchg
and
lock
inc
out
jae
fmuls
mov
pop
int3
popf
sub
adcl
insb
mov
testb
xor
mov
pop
addr16
repnz
lods
test
xchg
scas
cmp
adc
in
cmpsl
inc
fsubrs
aam
movsl
inc
add
out
aas
lcall
mov
adc
sub
mov
adc
scas
xor
pop
pusha
sbb
sub
add
jbe
xbegin
jne
movsl
mov
out
ljmp
mov
data16
cmp
push
dec
jbe
fwait
pushf
mov
add
rcll
gs
sbb
icebp
xor
mov
cmc
mov
dec
gs
xchg
mov
jne
inc
ja
repz
jno
push
or
clc
dec
xchg
arpl
sub
daa
mov
insl
leave
int3
mov
lods
jb
adc
mov
xchg
movsb
add
into
out
roll
mov
mov
add
pop
cmp
aad
mov
hlt
push
clc
rcrb
adc
sub
mov
adc
mov
and
cmp
in
dec
ja,pn
loop
dec
cmp
mov
adc
cmpsb
xor
xchg
sbb
inc
jg
push
out
pop
js
xor
jmp
sbb
jp
and
mov
fs
daa
push
jl
rorb
lcall
mov
lods
orl
nop
popf
stos
push
and
mov
movl
das
popf
movsb
test
aam
stc
std
cs
outsb
or
ljmp
in
xor
mov
fmull
nop
xor
js,pn
adc
xor
outsl
enter
adcl
in
movsb
shrb
xor
movsl
cmp
sub
mov
sahf
test
arpl
test
mov
ljmp
movsb
dec
cmpsb
jp
adc
imul
icebp
sub
shlb
push
push
jb
jno
sahf
js
mov
sbb
and
dec
jbe
data16
inc
fsts
icebp
xor
mov
dec
sarl
add
shll
ds
lahf
xor
xor
dec
fsubrl
xchg
fbld
xor
push
leave
or
ret
imul
or
sub
push
cmc
push
mov
push
mov
add
call
adc
stc
adc
push
xor
out
sub
inc
cli
out
clc
sub
push
sbb
jg
add
and
shlb
mov
leave
jae
mov
adc
dec
je
adc
sbb
mov
loopne
dec
loope
and
mov
dec
ljmp
pop
mov
call
in
sub
test
clc
or
out
pop
sbb
sub
sub
imul
mov
fcmovnu
cmpb
or
scas
loop
xchg
cmp
inc
cmp
hlt
add
popa
jge
adc
stc
out
loop
rol
mov
mov
hlt
push
pusha
mov
mov
jecxz
add
cs
sti
in
ljmp
cmc
push
xchg
fidivl
inc
jp
into
inc
jge
add
lahf
jmp
dec
andl
fs
imul
xchg
xorb
les
pop
out
xchg
adc
dec
sub
add
and
jecxz
out
jns
push
call
xchg
push
mov
scas
ret
out
sti
jbe
ret
in
sub
outsl
dec
dec
jg
xchg
or
lea
sbb
int
sti
ror
inc
std
scas
push
pop
cld
std
pop
add
cwtl
insb
adc
pushf
popa
xchg
sub
aaa
xor
dec
stc
pop
scas
adc
jmp
andl
insl
mov
pop
mov
sbb
add
iret
inc
inc
pop
dec
dec
push
pop
mov
cltd
stos
leave
and
dec
cli
and
sub
jae
add
mov
and
sub
fcoms
insb
daa
addr16
add
push
fsubrp
inc
push
cwtl
mov
inc
fistpl
es
mov
int3
mov
pop
or
fidivrs
jbe
ja
out
lret
int3
mov
movl
add
adc
lcall
cmpsb
dec
sbb
xor
mov
push
inc
mov
ror
sub
adc
inc
cwtl
lock
gs
out
sahf
mov
nop
mov
movsl
mov
or
icebp
rorb
mov
lahf
lods
call
inc
mov
mov
or
je
or
lods
mov
jle
push
lret
roll
jbe
xchg
imul
cmp
neg
loope
test
dec
jbe
sub
cmc
test
fwait
repz
adcb
inc
orl
test
leave
fcompl
pop
jae
inc
xchg
test
pop
sub
punpcklbw
adc
inc
enter
cld
fs
fbstp
inc
addb
imul
sub
sub
or
scas
push
jmp
adc
mov
pop
shl
pusha
outsb
fmull
inc
add
fstl
outsb
hlt
add
mov
jp
jle
sub
adc
je
or
mov
jl
cmp
add
pop
mov
in
jb
fistl
xor
mov
inc
nop
add
stc
insb
std
xchg
push
sbb
aaa
iret
mov
push
sbb
sub
call
inc
outsl
mov
leave
aad
dec
xchg
icebp
ja
cmp
int3
xchg
adc
and
lret
add
cmp
cmp
aad
in
inc
gs
fstps
in
aad
xchg
scas
repnz
loopne
and
pop
stos
fcmovnu
sub
les
jae
jns
icebp
mov
mov
lea
mov
xchg
mov
dec
daa
dec
xchg
and
add
js
sbb
cwtl
push
xchg
addb
int3
mov
inc
scas
lcall
cmpsl
jns
push
jmp
push
sahf
jno
je
loopne
gs
jmp
push
mov
stos
xor
imull
shlb
repz
sub
jo
mov
lea
cmp
jno
adc
jg
dec
adc
inc
lods
aaa
and
ficompl
mov
pop
or
push
test
xchg
push
push
xor
mov
stos
pop
inc
dec
push
push
mov
je
jmp
jne
cli
jnp
jo
or
mov
sub
xor
fisttps
jmp
cmpsb
rcr
gs
dec
insb
mov
cmp
lret
cli
jbe
adc
mov
inc
ja
xchg
push
dec
test
cmp
mov
xor
dec
dec
stc
lods
mov
cmpsl
lock
or
add
cmp
test
les
pop
pop
sbb
sub
arpl
cmp
inc
arpl
mov
dec
mov
adc
mov
adc
add
ds
add
stc
outsb
mov
sar
push
dec
xor
insl
daa
mov
inc
adc
lds
mov
adc
jmp
loop
data16
or
cmpsb
jmp
fdivs
lds
fnstsw
push
into
add
cmp
pop
push
or
mov
ret
xlat
push
cmpsl
repz
mov
adc
shll
pop
imul
hlt
frstor
add
lret
sub
scas
ds
lods
aam
sbb
and
loop
and
rorb
xor
mov
in
in
ret
std
daa
data16
push
pop
loope
lock
icebp
pop
ljmp
sbb
pop
jb
push
jge
dec
pushl
int3
aas
enter
add
inc
in
mov
jl
inc
subb
mov
popa
push
mov
call
aam
xor
jl
push
dec
sbb
pop
mov
adc
xor
int3
dec
sbb
addr16
test
jne
sub
xor
scas
pop
stos
pushf
mov
mov
hlt
sbb
jnp
sbb
in
pop
aam
mov
sub
pushf
mov
fisttpl
mov
push
mov
push
mov
pusha
pop
sbb
cmpsb
cwtl
dec
mov
pop
data16
movsl
push
adc
shlb
lcall
cmpsl
xorb
lret
inc
fwait
add
sub
test
xor
push
cli
inc
mov
outsb
pop
mov
insb
push
or
aas
jo
dec
pushf
shlb
imul
aas
push
mov
inc
sbb
mov
mov
pop
jnp
out
enter
scas
cmp
sbb
mull
adcl
xor
xor
or
jecxz
mov
and
add
mov
iret
das
add
pusha
and
aam
mov
or
nop
push
pushf
pop
enter
dec
jg
cmpsl
jmp
pop
ds
push
adc
pop
jns
test
mul
mov
xor
mov
and
test
call
shlb
and
notb
add
ror
xorl
scas
pop
mov
jb
sarb
mov
hlt
stos
mov
subl
bound
push
or
out
mov
lahf
mov
jns
shlb
mov
sbb
arpl
sub
mov
xchg
pop
and
outsl
ljmp
stos
inc
adc
ds
lahf
insb
je
inc
xor
call
inc
or
or
clc
or
leave
fs
iret
or
test
xchg
ja
movsl
testb
mov
mov
mov
cmp
mov
aad
cltd
xor
xor
popa
dec
in
ds
fidivs
mov
push
cmpsl
std
and
mov
dec
pop
aaa
jb
lret
xorb
loop
ds
push
faddl
rclb
push
js,pt
dec
inc
out
or
or
cmc
cs
xor
lock
jge
mov
out
mov
mov
mov
cmp
lret
sbb
mov
mov
inc
shl
enter
dec
jne
popf
xchg
inc
push
sub
dec
or
clc
je
int3
nop
xchg
cmc
data16
sub
daa
sub
add
dec
push
cmp
mov
cmp
xor
test
mov
jl
ds
mov
dec
ficoml
nop
push
nop
xor
lods
data16
and
fs
dec
pop
inc
jne
add
cmc
inc
mov
pop
and
sub
jmp
scas
adcb
pop
xchg
xor
int
adc
lret
out
adc
ret
push
fbstp
enter
loop
add
push
int
mov
mov
movsb
mov
push
push
sbb
inc
sbb
xchg
orb
sbbb
sub
sbb
aas
ficompl
in
mov
pop
jbe
dec
stos
sbb
or
rcll
mov
pushw
dec
dec
cmp
xchg
std
jb
ret
or
dec
mov
loopne
clc
push
push
lret
test
daa
sbb
push
add
or
and
xor
scas
into
xchg
jg
inc
sbb
xchg
outsb
adc
mov
ss
cwtl
adc
mov
jg
pop
add
xor
xchg
mov
and
shlb
xchg
pop
repz
pusha
in
sti
sarl
cmp
add
inc
sub
add
sbb
int3
jl
add
inc
adc
out
dec
js
mov
mov
push
and
jo
xor
imul
cmpsb
sub
sbbb
jmp
or
jb
jns
adc
fwait
pop
jp
push
fnstsw
add
daa
rcrl
sub
mov
call
sbb
lea
cmc
jo
jns
bnd
xchg
call
adc
jle
pop
mov
jmp
test
aam
into
int
fcmove
or
xrelease
lcall
cmpsl
sub
jnp
je
mov
lret
scas
daa
test
sbb
push
inc
les
loopne
adc
or
or
lcall
xchg
loope,pt
cmpsl
aam
pop
push
add
pop
jb
cmp
mov
icebp
jmp
shll
sti
aas
mov
fxch
mov
xor
mov
sbb
lcall
jl
xchg
xchg
xlat
dec
mov
pushf
dec
rcrb
lock
hlt
adc
cmp
mov
pop
je
das
mov
hlt
xchg
mov
inc
mov
stos
cmp
push
xchg
mov
xchg
inc
jb
fdivrp
repz
sbb
jbe
cs
xchg
push
movsl
loope
mov
inc
cmp
popf
mov
jbe
xor
jo
dec
and
dec
mov
mov
testl
adc
jb
sbb
aas
stc
add
outsb
scas
lret
sub
xor
scas
in
nop
shlb
shlb
jnp
lahf
push
inc
ret
jg
add
imul
es
jge
in
push
cmp
pop
cmp
xchg
lret
popa
mov
push
or
xchg
and
xor
and
xor
cwtl
xchg
test
cmc
popf
jp
jecxz
sub
or
jno
loope
fcomps
idivl
sub
lock
int3
or
add
cmc
fsub
aam
sbb
dec
aaa
push
pop
jbe
dec
out
jmp
out
mov
popf
dec
aas
test
in
and
scas
scas
jmp
pop
mov
fcoms
add
add
sub
mov
inc
sub
loopne
xchg
fiaddl
pop
lcall
cmpsb
rcll
ret
adc
sub
xlat
xchg
inc
jecxz
jne
cmp
sub
xor
pop
inc
clc
scas
call
aam
inc
cmpsl
and
cmp
inc
inc
ja
stos
push
cmp
outsb
pop
pop
push
jle
pop
and
lcall
mov
jb
sahf
ror
lahf
nop
and
adc
xor
loope
mov
sub
fldt
movl
mov
fldt
jmp
cmp
mov
out
mov
stos
fdiv
inc
bound
jmp
test
lret
movsl
ret
mov
aaa
hlt
and
mov
dec
mov
nop
push
and
or
daa
xor
mov
lods
mov
push
xor
in
call
xchg
pop
out
push
dec
mov
mov
sti
jne
cmp
xor
fldenv
jg
daa
xor
lods
adc
and
add
ret
lret
iret
cwtl
scas
cmp
mov
fisubl
repz
add
cmp
cmc
xor
ja
adc
rcl
jle
dec
sbb
jae
jnp
cld
xchg
pop
mov
push
lock
lock
fsubrs
xor
stos
inc
pop
out
movsl
int3
jmp
mov
sub
in
sbb
pop
jmp
push
std
fcoms
lea
cmp
gs
jb
adc
and
mov
mov
adc
cwtl
mov
out
stos
stc
les
ljmp
mov
enter
rcll
jmp
sub
dec
xchg
xlat
cmp
es
pop
push
scas
inc
mov
iret
jo
lock
lods
loopne
fnstcw
and
inc
sub
xchg
ss
push
push
loopne
jb
out
scas
push
je
cli
in
lods
insb
loopne
adc
push
loopne
xor
inc
clc
jbe
fs
repnz
cmp
aas
addb
in
push
mov
lods
js
fstpl
shrb
and
pop
es
ljmp
loop
cmp
mov
outsl
mov
mov
hlt
lahf
jmp
mov
cmp
adc
insl
mov
xor
decl
pop
stc
cmpsb
ja
lcall
sbb
ficomps
adc
or
mov
add
movsb
test
loopne
cmp
lds
push
pop
dec
sub
mov
addr16
cltd
and
pop
fisubs
sbbl
addb
push
fcom
iret
mov
mov
mov
inc
xor
mov
nop
ljmp
test
push
mov
xchg
int
fnstsw
hlt
jl
out
mov
xchg
xchg
hlt
mov
and
dec
popf
into
addb
lea
divb
xchg
xor
jb
mov
stc
lea
out
enter
cmpsb
mov
push
push
mov
aam
sbb
loope
mov
cmpsb
loope
push
aad
rorl
cld
lods
int3
or
and
xor
inc
dec
pusha
mov
call
negl
scas
out
iret
lret
mov
xchg
pop
in
jae
sub
cmp
lea
xlat
and
or
mov
inc
ficompl
mov
xlat
mov
lock
xor
imul
clc
add
push
out
mov
bound
repz
cmpsb
dec
imul
mov
mov
mov
jecxz
mov
je
push
je
dec
cmp
jb
adcb
dec
test
push
int3
inc
jp
repnz
or
insl
and
pop
out
and
sahf
insb
add
inc
fadds
mov
ror
jmp
mov
pusha
cld
dec
stos
out
pop
push
mov
mov
pop
mov
arpl
xchg
fs
stos
and
sub
mov
push
sbb
mov
aas
sbb
push
jae
jae
xchg
push
ljmp
fucomi
inc
outsl
sub
inc
jnp
xchg
cltd
adc
pop
in
mov
xor
cmpsl
dec
je
shll
stos
xchg
scas
fdivrl
push
insb
dec
sub
pop
icebp
push
daa
and
ljmp
sbb
loope
sub
or
stc
and
subl
sbb
movsl
and
sbb
or
lea
inc
push
xor
adc
loop
push
rolb
ds
xchg
aam
jmp
mov
xor
popf
clc
xchg
lea
adc
cmp
mov
or
insl
lods
repnz
sti
rorl
popf
pop
jg
jno
rclb
cmp
add
cli
rclb
ret
or
mov
jnp
cmpsb
aas
icebp
pop
jnp
sbb
xor
jecxz
ret
inc
xchg
xor
in
push
push
pop
pop
inc
sub
xor
in
lahf
call
mov
xor
jae
mul
sbb
dec
mov
adc
lock
inc
stos
das
repz
test
add
fsubrl
divl
lods
test
dec
sbb
mov
xchg
mov
out
lock
cmp
dec
imul
and
sbbl
xchg
mov
mov
out
and
sahf
jle
std
sub
push
test
add
dec
push
inc
and
or
jno
cmpsb
outsl
es
rorl
mov
xchg
imul
xchg
sti
call
outsb
sub
lods
lds
fwait
movsl
pop
add
pslld
cmpsb
xor
inc
cmp
fiadds
jp
inc
arpl
push
adc
push
mov
cltd
lods
in
mov
outsl
sarl
push
mov
sti
or
out
cmp
jl
jmp
xchg
cmp
push
and
fisubs
pop
xchg
xchg
sbb
cmp
mov
mov
mov
sbb
and
mov
mov
idivb
xchg
mov
mov
jp
or
push
jne
cwtl
push
and
leave
jnp
stc
and
ljmp
xchg
adc
sub
clc
dec
mov
add
adc
lods
inc
lock
dec
push
in
xchg
mov
xor
push
mov
or
pusha
dec
pop
lods
cmp
decl
inc
dec
xor
arpl
xlat
cmp
addb
rclb
lcall
hlt
jne
adc
or
mov
icebp
xchg
and
out
xchg
addl
xchg
hlt
in
shlb
adc
push
mov
int3
inc
mov
xor
movsl
mov
dec
jp
fwait
stc
xchg
adc
loop
mov
adc
test
nop
jl,pn
xor
clc
xchg
popa
stos
mov
into
aas
pop
sbb
and
add
mov
in
mov
mov
pop
cmp
loopne
push
xchg
test
aaa
and
push
mov
push
popa
ret
push
sahf
dec
mov
mov
es
iret
aaa
or
push
mov
pop
push
in
popa
popf
or
bound
rcl
mov
in
adc
sbb
mov
std
das
loopne
outsl
into
xchg
or
gs
pop
or
fisttpll
loopne
repnz
xor
imul
jecxz
or
dec
imul
dec
add
sub
int
xchg
test
xlat
or
es
jns
ret
lahf
mov
jae
test
sahf
das
mov
inc
add
mov
sbb
fcomps
mov
les
insb
or
cli
aaa
xchg
mov
loope
ljmp
push
loopne
mov
mov
and
js
scas
aas
lock
mov
mov
aas
lds
jno
in
scas
faddl
jne
mov
adc
es
repnz
ftst
aam
lods
insb
ss
leave
mov
and
movsl
movsl
dec
mov
fwait
pop
roll
in
out
jae
out
mov
mov
push
xchg
notb
dec
std
fisttpll
imul
iret
dec
movsb
mov
xor
jbe
add
mov
xlat
sub
mov
scas
and
jge
cmp
ret
or
shrb
clc
je
add
scas
inc
xor
orb
push
mov
pop
cmp
or
jg
out
cmp
jmp
xchg
or
call
jae
pop
mov
insb
sub
cpuid
sar
fisttpll
leave
add
or
cs
sbb
ljmp
mov
adc
mov
test
cmp
aam
jo
cmp
xor
dec
sbb
mov
mov
fwait
in
mov
sub
sahf
adc
sub
push
mov
pusha
icebp
adcb
sbb
pop
repz
mov
dec
cmp
fldenv
arpl
loope
ljmp
les
dec
xor
repz
rcrl
out
adc
jbe
loop
xchg
fwait
sarb
mov
arpl
xlat
xchg
adc
into
inc
dec
clc
adc
adc
mov
pop
push
cmp
mov
mov
push
jns
sbb
dec
mov
cmp
js
pop
xchg
cld
lods
mov
sub
out
jb
test
sbb
inc
fidivrs
inc
sub
sahf
fcmovnbe
jnp
push
hlt
jge
jae
popl
mov
insb
sub
add
inc
inc
jmp
gs
xchg
jmp
mull
int3
or
stos
push
jmp
repnz
lcall
out
push
mov
pusha
adcl
sub
rcrl
jle
xchg
adc
pusha
push
jb
mov
insl
cld
add
out
rolb
mov
mov
inc
leave
xor
jecxz
push
push
jecxz
repz
cmp
jnp
ljmp
enter
cmp
mov
bound
scas
aaa
jno
add
pushf
cmp
or
cmp
in
jge
jge
jg
mov
ds
xchg
mov
repnz
adc
inc
dec
int
nop
jmp
jb
inc
cs
pop
in
cs
cltd
loop
sbb
sub
xlat
lea
push
sub
dec
cmp
test
jo
add
neg
adc
negb
xor
mov
xchg
cmp
or
stc
adc
jmp
xlat
add
leave
mov
and
adc
popa
inc
mov
dec
push
cmpb
push
xchg
mov
mov
pop
mov
jl
mov
neg
adc
rolb
inc
jge
mov
stos
pop
lock
mov
jno
xchg
lock
mov
shl
aaa
pop
cmp
jle
pop
xor
int
add
cli
jecxz
xor
mov
xchg
pop
sub
subl
insb
dec
subl
mov
sub
xchg
dec
sub
ljmp
orb
mov
mov
sbbl
xor
rorb
xor
sub
aad
jns
je
mov
and
mov
pop
sahf
scas
cli
fwait
add
dec
ds
jns
lret
adc
lret
rcrb
aad
and
add
jbe
mov
rclb
push
dec
js
rep
sub
adc
pop
push
mov
mov
xor
mulb
cmp
aas
fistps
repnz
mov
push
mov
shr
jae
xchg
or
push
hlt
in
cmpsb
mov
cmp
or
pop
jbe
push
xchg
sbb
ret
jp
icebp
daa
ficomps
or
shll
loope
mov
inc
mov
xlat
xlat
xor
inc
jle
subl
mov
aaa
pop
add
pop
cmc
outsb
push
inc
cwtl
fcmovnu
push
sbb
adc
inc
jmp
add
fimull
clc
loope
inc
jp
xchg
scas
mov
mov
pop
add
mov
dec
push
scas
iret
mov
lcall
jle
lods
push
movsb
out
push
sub
xlat
outsl
push
push
xchg
jp
into
out
fcmovu
pop
push
xor
in
mov
adc
cwtl
xchg
int3
repz
loopne
jb
adc
xchg
push
mov
scas
leave
mov
sarl
stos
and
andl
sbb
mov
lahf
or
pop
push
loop
jmp
jae
push
mov
int
adcl
adc
bound
mov
jecxz
stc
sub
dec
push
test
adc
lock
andl
rcrb
out
imul
inc
adc
sahf
xchg
negl
cmpsl
jno
sarb
and
mov
clc
scas
mov
jo
sbb
dec
mov
cmovl
mov
xchg
testb
lret
into
add
dec
loop
jmp
adc
push
xchg
popa
cli
ljmp
orl
incl
inc
lea
jo
jge
insl
cld
add
orl
xor
push
faddl
add
pop
push
je
xlat
lods
push
cmp
pop
sbb
and
push
and
ret
hlt
insb
xor
xchg
jnp
jns
cltd
mov
xor
push
xor
sub
xorl
stos
xchg
inc
cmp
sbb
inc
mov
lock
cmp
pop
scas
cmpsb
into
inc
xchg
add
add
cmpsl
push
pop
mov
add
add
fwait
sbb
cs
popa
dec
imul
notl
repz
mov
cld
test
push
and
xor
cs
fcmove
inc
test
imul
cli
pusha
cwtl
daa
pusha
xchg
dec
shrb
push
jp
ss
mov
orb
ja
mov
jmp
and
dec
jecxz
aam
xchg
push
insl
jnp
push
add
test
xor
loop
scas
aaa
shl
stos
cltd
push
mov
sbb
mov
xchg
lcall
fs
imul
lret
test
int
mov
roll
mov
jo,pt
xchg
mov
or
out
pop
and
out
xlat
mov
rcr
mov
cld
mul
mov
adc
cld
rorl
or
xor
jle
pop
and
ror
xchg
and
mov
mov
stos
adc
push
mov
std
mov
jb
cmc
rolb
mov
dec
cmp
mov
divl
jb
pop
dec
add
mov
and
loope
xor
sub
push
sub
leave
cwtl
push
outsl
or
dec
mov
jns
mov
in
cmc
test
sarl
insl
push
lahf
aam
rcrl
outsl
movsl
out
fsubrl
xor
dec
jmp
divb
pop
lods
sbb
mov
aaa
aam
mov
xchg
pop
lods
xor
inc
adc
xor
mov
jo
icebp
fmuls
sbb
sbb
sbb
insl
or
mov
iret
sbbb
mov
into
je
jmp
fcompl
icebp
daa
int
adc
sub
cmp
mov
xlat
pop
out
jo
pop
arpl
inc
push
test
or
add
ljmp
sahf
cmp
xor
popf
xor
xor
or
mov
sub
jno
and
pop
add
or
inc
repz
and
cwtl
mov
push
adc
or
aam
sub
mov
dec
out
mov
imull
stos
pop
dec
sti
out
test
movsl
ret
lds
cmp
and
sbb
in
cmp
pop
jl
inc
mov
sub
lret
adc
cmc
lods
pop
mov
sbb
mov
add
data16
mov
add
mov
mov
pop
and
repnz
jg
mov
sbb
and
xor
jp
scas
test
leave
or
popa
or
out
xor
fsubp
or
ds
nop
ljmp
xchg
stos
adc
inc
sahf
add
push
jae
sub
insl
add
in
mov
jge
mov
leave
fadd
cmp
lds
pop
aaa
push
push
dec
ja
or
add
pop
xchg
imul
loope
idivl
sbb
push
add
jae
sub
dec
lock
fistl
pop
mov
jo
ss
push
out
inc
or
inc
and
xor
out
mov
and
fimuls
pop
cmpsb
push
mov
rcrb
aam
inc
xlat
rcrb
inc
pop
mov
aam
out
cmpsb
je
push
call
pop
lods
lea
mov
cmp
or
addr16
sub
pushf
mov
xchg
pop
mov
dec
add
aam
fidivl
std
dec
push
cmpsl
sbb
ss
dec
or
mov
dec
lea
aas
shr
mov
add
fbstp
rcrl
pop
or
sarb
push
fbstp
mov
push
xchg
or
pop
fdivr
sub
and
cli
mov
and
scas
mov
dec
aas
das
jge
cmp
cmpsl
test
fs
roll
mov
pop
sub
rorl
mov
insl
lods
mov
test
and
push
mov
pop
inc
lahf
subps
push
hlt
xor
mov
stos
lock
shrl
roll
mov
sahf
test
mov
aaa
cmc
pop
cmp
cmc
scas
and
std
xor
mov
inc
jecxz
pusha
adc
push
jge
outsl
jle
sbb
sub
inc
sti
addr16
scas
imul
aam
mov
push
or
sub
insb
xchg
aaa
inc
mov
fnstenv
outsl
je
jecxz
lcall
frstor
rclb
insb
push
in
shrl
sbb
imul
sbb
adc
mov
mov
xlat
sarb
dec
or
sub
sar
daa
ret
movsb
jmp
ret
jns
adc
movsl
popf
mov
mov
adc
cmp
add
popf
push
push
add
cmp
lods
xor
aaa
and
enter
les
jmp
mov
mov
movsb
lds
dec
shlb
dec
movsb
add
fadds
or
mov
lods
adc
sbb
in
dec
sub
mov
nop
test
jle
mov
fisubrl
cwtl
out
mov
sub
add
dec
xor
lret
in
sti
cmc
ja
sub
fs
inc
out
mov
popf
pop
inc
aam
rol
mulb
dec
movsb
je
mov
das
xchg
xchg
sub
leave
inc
hlt
mov
repz
xchg
test
jbe
adc
jmp
xchg
lods
pop
pop
sub
push
sbb
clc
push
inc
mov
mov
inc
push
add
fs
xchg
clc
jl
outsl
jb
cli
sbb
mov
rcll
sub
jae
xor
add
out
sub
out
movsb
fcompl
mov
je
or
and
popa
mov
loop
add
pop
mov
cli
out
mov
add
hlt
movsb
xlat
pop
jns
movsb
mov
sahf
mov
sbb
mov
pop
test
push
daa
call
dec
cmp
addl
dec
lods
bound
and
lcall
mov
mov
push
lret
mov
frstor
xor
in
xor
stos
daa
xor
outsl
cld
iret
push
aas
pusha
mov
sub
push
lock
add
mov
std
mov
outsb
sti
cmp
fldcw
xchg
sbb
ret
jecxz
addr16
mov
or
mov
stc
cmp
scas
mov
in
std
dec
sbbl
outsb
imul
inc
xchg
jns
clc
xchg
loope
sub
adcl
icebp
shll
popf
or
add
shll
jns
lahf
inc
pop
fwait
xor
jg
or
cmp
out
or
fmul
js
dec
icebp
cmp
mov
test
imul
fwait
jl
cmpsb
xchg
orb
into
stos
and
inc
xchg
xchg
mov
movsb
mov
and
popf
xor
insb
mov
dec
and
mov
fcoml
dec
jl
hlt
adc
push
mov
nopl
cmp
sarl
faddl
sub
rclb
cmp
cmp
mov
mov
xlat
cli
leave
ret
ljmp
es
pushf
sarb
push
insl
fsubs
scas
xchg
andb
cmpsl
ret
lock
pinsrw
pop
cld
fmul
inc
xor
shlw
out
addr16
dec
inc
popf
sub
add
jg
jbe
inc
in
add
out
call
cmp
xlat
and
data16
nop
sbb
jb
lock
mov
mov
add
test
scas
aaa
push
mul
sub
inc
mov
pop
outsl
dec
lahf
addb
shlb
mov
push
int3
cvtps2pd
enter
jle
jl
add
pop
and
aad
ljmp
movsb
stos
stos
cmpsl
cmpsb
add
bound
rclb
xor
cltd
xor
pop
push
mov
mov
icebp
mov
adc
push
cmp
and
mov
test
cmp
pop
fdivr
fs
jp
shr
js
adc
loopne
or
shlb
push
cmp
mov
ss
in
les
fildl
scas
ret
cmpsb
and
bound
dec
jbe
mov
add
pop
aad
fidivl
add
jo
mov
cmpb
inc
xor
push
xchg
push
or
repnz
xchg
push
sub
inc
fstps
ficomps
lods
mov
shl
pop
rcl
add
sub
mov
test
in
xchg
test
inc
mov
loopne
sbb
push
imul
jae
adc
mov
not
sbb
push
lea
in
inc
inc
por
push
imul
xchg
les
mov
faddl
jo
jno
mov
mov
jae
sbb
xchg
das
adc
xchg
xor
xchg
jmp
sarl
or
inc
inc
loopne
xchg
call
sbb
cmpsl
mov
enter
popa
imul
or
in
push
rorb
aaa
es
jecxz
jmp
cli
dec
dec
iret
shrb
arpl
aas
imul
cli
ss
lea
imul
cmp
subl
cwtl
dec
sub
fstps
cmp
in
pusha
fiaddl
add
jno
scas
enter
sbb
push
in
shll
xchg
lea
or
fdivrs
or
or
push
jge
cmc
cmp
fs
lcall
rolb
shl
lods
mov
ficompl
fcmovnbe
jmp
out
scas
call
sbb
mov
cli
lret
mov
xlat
mov
mov
loope
xor
mov
int
or
push
cmp
xor
es
jno
jns
cli
sub
lahf
mov
push
out
sbb
push
add
dec
sbb
daa
mov
lret
xchg
mov
xor
sbb
xor
pusha
gs
xchg
mov
mov
dec
rorb
xchg
out
aaa
jp
in
add
dec
mov
xchg
aad
adc
and
sbb
adc
repz
inc
jnp
pop
test
dec
gs
andb
lock
push
cmp
pop
mov
fnsave
mov
shll
frstor
dec
or
cmpl
jbe
xlat
sub
imul
out
sbb
mov
sub
leave
cmpsb
jp
orl
or
dec
jg
jge
inc
pop
mov
inc
inc
sbbb
jnp
stos
xor
or
dec
push
jb
push
adc
clc
cmpsb
stos
movsl
hlt
add
leave
sbb
insb
in
jne
jmp
loopne
xchg
cmc
sbb
adc
lods
mov
fbld
jge
lods
dec
mov
lret
cmpsl
xor
aad
rcrb
nop
scas
add
loopne
scas
add
scas
mov
lds
xchg
or
jns
mov
pop
or
push
jbe
push
and
int3
cmp
aas
jae
mov
and
cwtl
and
xchg
sub
jo
ret
or
mov
lock
or
jne
bswap
loopne
inc
sbb
clc
pusha
leave
jne
jg
cli
cltd
sub
scas
add
insl
and
fisttpll
cmpsb
mov
jl
arpl
jecxz
fidivs
pushf
stos
cmc
mov
dec
lods
pop
insl
jp
daa
mov
pop
jge
daa
add
sub
iret
shlb
jb
pop
clc
fidivrs
lret
adc
mov
sub
stc
push
repz
adcl
lea
pop
lea
add
outsb
out
out
adc
or
push
testl
sbb
lods
idivb
adc
and
fdivl
popa
push
mov
inc
mov
xchg
pop
enter
out
out
push
dec
dec
aaa
test
dec
lods
popf
dec
les
adc
loop
adc
gs
testb
in
inc
pop
sarb
xchg
into
dec
dec
nop
mov
or
jnp
jnp
dec
and
neg
es
xchg
inc
lahf
mov
ss
dec
cmp
inc
rorl
out
ljmp
xor
jo
cmp
xchg
imul
sub
mov
and
daa
mov
repnz
mov
and
lea
dec
xchg
loope
es
inc
inc
call
xorb
cmp
bound
cltd
cmp
subl
xor
insb
sbb
push
clc
testl
insl
adc
sarl
and
dec
sbb
jmp
fisubs
push
inc
dec
xchg
pop
and
mov
and
mov
push
mov
mov
rolb
popa
add
mov
xor
call
xchg
xchg
aaa
inc
test
push
popf
aaa
dec
in
add
ret
cmp
sbb
cmp
jne
movsl
aaa
movsl
inc
popa
fdivrl
lcall
decl
pop
fcoms
mov
inc
ja
cmpsb
xor
lahf
xor
je
and
fwait
out
cmp
imul
sti
inc
test
stc
jbe
rclb
clc
fstl
idivl
fildll
cmp
push
dec
and
sti
inc
daa
lahf
aam
rorb
dec
sub
in
sti
loope
fwait
cmp
cwtl
int
jp
jb
xchg
xor
xchg
lods
pop
lahf
out
push
into
pop
inc
pop
mov
pop
xor
ror
cmp
jns
out
adc
es
sub
jo
lret
dec
dec
test
fbstp
mov
adc
subl
sbb
xchg
sbb
pop
loopne
cmp
push
jae
jo
push
shrl
scas
jb
push
push
mov
mov
shll
out
test
inc
pop
xor
xor
lcall
lahf
mov
repnz
dec
sahf
popa
mov
fildl
add
pop
jmp
iret
push
inc
add
fidivl
cmp
or
lds
pop
xchg
fcoml
xchg
out
test
inc
incl
shlb
call
push
add
mov
pop
sub
xchg
ret
push
in
mov
inc
or
stos
mov
push
imul
fisubrs
loope
jmp
mov
adcb
adc
test
inc
mov
cmp
lds
out
jnp
lea
sub
sub
push
lds
inc
into
xchg
pop
cmp
pminsw
and
pop
pop
dec
mov
adc
push
int
sbbl
adc
stc
mov
ficompl
xor
leave
or
sbb
xchg
in
sub
lock
xchg
jge
sub
push
sub
mov
sub
pop
mov
push
jmp
and
xor
pop
repnz
mov
or
sub
jne
inc
shll
bound
pusha
leave
inc
test
adc
call
sbbb
cmp
and
cmp
and
inc
int
sbb
pop
stos
jb
sti
dec
ss
mov
sbb
xor
and
mov
dec
insb
testl
out
notl
adc
xor
and
sub
decl
outsb
jle
dec
push
adc
push
les
sti
sti
sub
or
pop
ds
and
repnz
int3
xor
orl
pop
mov
addb
mov
cmpsl
or
xchg
and
ret
sbb
icebp
fcmove
dec
movsb
push
jmp
pop
inc
xchg
bound
dec
cli
cwtl
xchg
dec
imul
push
in
adc
fcomps
mov
lret
sahf
stc
jp
add
jno
mov
inc
add
rcr
or
cmc
xchg
adcl
test
notb
pop
movsl
in
pop
pop
inc
jl
outsb
imul
or
rol
and
leave
xor
cmp
sahf
push
jp
sbb
lock
movsb
or
std
adc
push
test
xchg
mov
sub
shrl
ja
enter
and
lea
add
xcrypt-ofb
cmpsl
push
imul
add
sbb
xchg
push
into
cmp
stos
subl
orl
push
sbb
add
hlt
pop
outsl
jae
pop
jmp
xchg
stos
inc
mov
bound
inc
fwait
das
sbb
sbb
add
xorps
pop
xorb
push
mov
push
js
pusha
int3
jl
fisttpll
cmp
mov
es
mov
sbb
pusha
or
push
aaa
fmull
test
lcall
jp
lahf
mov
test
clc
data16
push
comiss
fisubs
and
mov
test
test
or
or
sahf
fstl
xchg
adc
sbb
aas
add
sbb
test
push
sti
sbb
mov
in
movb
mov
sub
jp
sbb
sbb
aad
pushw
pop
popl
dec
push
ljmp
sub
pop
jns
jo
clc
lret
or
and
rolb
mov
insb
mov
jp
jmp
sbb
sahf
xchg
loope
lock
sbb
mov
rorb
popf
fstpl
ret
call
outsb
test
push
xchg
lcall
repnz
lods
sub
iret
jge
idivb
andps
lds
add
sub
xchg
dec
cli
cwtl
dec
out
inc
mov
movsb
and
cwtl
sub
cmovge
jge
aas
pop
adcb
push
sti
ds
add
mov
es
push
bound
andl
inc
dec
xlat
add
ficomps
add
adc
frstor
jae
inc
lods
bound
mov
sub
inc
fiadds
push
lods
into
scas
mov
fstl
pop
cmp
pop
adc
pop
xchg
add
dec
xor
or
lahf
inc
adc
mov
xor
leave
out
jne
fucom
cmpsl
xchg
jbe
inc
gs
hlt
fwait
inc
sbb
das
mov
clc
cli
call
xchg
lock
popf
ret
sti
jmp
insl
outsl
jmp
inc
jns
cmp
xor
dec
or
stos
ficomps
aam
sub
pop
mulb
aad
cmp
ffree
lcall
push
enter
jmp
ds
lret
cmc
ds
imul
hlt
psubsw
pop
shrb
mov
aad
test
ret
imul
sbb
jge
shlb
xor
subb
div
insl
scas
repnz
pop
cs
jo
inc
loop
xor
sbb
aaa
repnz
jns
cli
lods
cmc
movsb
push
int3
sub
push
adc
adc
jbe
lret
mov
out
movsl
mov
cmp
pop
pushf
insb
mov
inc
imul
xchg
push
outsb
fldt
mov
and
lock
inc
nop
ret
mov
rcll
jg
push
outsl
push
pop
iret
mov
mov
bound
jg
aas
cltd
add
dec
int3
pop
int3
pop
add
sbb
je
daa
fdiv
out
xor
dec
rcrl
inc
repz
aas
gs
push
mov
sti
adcb
cltd
and
sbbb
jns
dec
sub
lahf
sahf
out
xchg
cld
sbb
lret
hlt
cmp
jmp
xorl
adc
push
mov
jb
cltd
ss
pop
in
popa
lock
sbb
hlt
lahf
add
movsl
in
mov
xchg
push
gs
lret
xorl
inc
cmc
mov
sub
lret
iret
fsubrl
lea
xor
pop
bound
out
push
inc
cmp
mov
lods
out
cltd
or
pop
ret
jb
daa
jp
cs
lods
div
out
adc
cmp
mov
popa
jnp
mov
int
int
sbb
jbe
leave
dec
mov
sub
pop
pop
inc
and
adc
pop
push
lcall
into
insb
mov
mov
arpl
jp
cmp
out
xor
jnp
repnz
or
lock
test
data16
inc
out
sahf
add
dec
icebp
pop
mov
jne
in
dec
pop
push
fstp
pusha
out
imull
mov
pop
and
imul
sub
outsl
adc
sub
or
aas
rolb
add
pop
pop
inc
dec
pop
and
push
mov
sti
subb
mov
loopne
test
pop
pop
push
pop
int
or
xor
orl
sub
jmp
adc
add
popa
push
daa
cmp
sub
in
xor
push
sub
loope
fldt
lds
pusha
pop
inc
scas
dec
cmp
std
jo
add
mov
fsubr
cmp
mov
xchg
mov
push
xchg
subb
push
push
sub
lock
mov
jne
pop
push
sbb
iret
test
xchg
sbb
roll
icebp
jecxz
jb
mov
dec
rolb
jae
into
pop
sub
imul
sub
mov
adc
repz
pop
push
jbe
and
iret
or
adc
popa
in
xor
imul
aad
mov
pusha
xchg
cs
sub
push
clc
and
jl
dec
xor
in
out
cwtl
jge
sbb
jns
pop
ret
fdivl
in
movsl
sub
push
sti
lahf
ret
loope
clc
and
and
inc
aas
loopne
cmpsb
push
push
push
mov
mov
icebp
mov
xor
dec
inc
inc
mulb
xor
roll
lcall
cli
mov
call
push
xchg
dec
mov
scas
das
jae
push
adc
sbb
xor
mov
fldt
inc
jne
rorb
out
inc
sub
dec
cmp
adc
push
inc
pop
xor
outsl
shlb
aad
ret
andl
cmpb
in
outsl
sub
gs
cmp
je
enter
cmc
in
mov
and
push
add
pop
add
jne
or
pop
add
dec
nop
cmp
lea
imul
aas
lock
das
jns
or
aam
hlt
xlat
cmp
and
test
int
xorb
je
in
mov
mov
mov
incl
xor
in
aas
inc
repz
and
stos
pusha
cli
test
pop
es
daa
adc
xchg
out
xchg
mov
push
push
shll
das
sub
mov
mov
cmp
xor
pop
adc
testb
mov
insb
stc
adc
les
sbb
push
ljmp
ljmp
jno
lods
add
scas
adc
push
sbb
stos
out
lock
ljmp
movsb
lret
fstl
lods
push
loopne
pusha
andl
sahf
jge
es
test
inc
cmp
inc
cmp
jg
sahf
push
mov
loop
not
xor
sbb
jmp
adc
jl
add
push
iret
xor
sub
dec
mov
clc
and
mov
sbb
jmp
dec
cmp
jae
ret
adc
sbb
cmp
xor
movsb
imul
mov
push
inc
fmull
sub
cmpsl
fwait
mov
lock
inc
pop
mov
push
js
out
fs
sbb
popa
loop
repz
mov
jo
hlt
rcrl
lds
jnp
lea
cmc
loop
and
or
ret
jecxz
lret
add
push
cld
mov
popa
jge
jns
movsb
jo
int3
aas
fdivs
and
cmp
or
xchg
fdivs
lret
iret
stos
push
outsb
test
mov
in
mov
and
out
out
aas
and
and
fiaddl
cmp
xchg
add
in
jle
sbb
adc
inc
xchg
das
sub
fs
push
push
push
jmp
mov
inc
jmp
fldcw
jp
mov
jb
aaa
pushf
inc
into
fwait
pop
int3
es
ret
xchg
cmpsl
push
inc
cmc
mov
imul
mov
gs
push
lods
mov
and
mov
jo
cmp
dec
lahf
arpl
mov
rol
adc
test
out
jg
inc
clc
jo
outsb
pop
jmp
insb
mov
lods
add
ljmp
cltd
sub
cli
pop
out
mov
sti
fdivr
sbb
ds
inc
xchg
fidivs
icebp
cmp
jmp
loope
ds
icebp
jne
andl
xchg
mov
icebp
outsb
test
mov
push
hlt
cmc
fidivrl
mov
daa
leave
movb
mov
or
aas
add
arpl
sbb
pushl
je
aas
jge
xchg
lret
shr
loopne
mov
or
les
and
adc
nop
jae
sahf
scas
jmp
xchg
push
sahf
fimuls
movsl
push
jae
in
sbb
inc
sbb
loopne
jb
ss
adc
ret
inc
jnp
outsl
adc
outsb
sbbb
insl
or
cltd
fsts
and
dec
mov
sbb
mov
std
inc
fisubrl
roll
addb
orl
sarb
mov
adc
sahf
cmpsl
andl
jle
or
inc
rorb
dec
nop
adc
push
sub
loop
enter
xchg
and
jl
mov
fdivrp
adc
scas
jns
ja
outsb
testb
out
cld
aaa
or
adcb
push
or
cwtl
dec
dec
les
call
cmp
shrb
push
sub
cmc
mov
popl
aad
jmp
adc
js
add
xor
iret
hlt
fs
outsl
dec
jne
lods
xor
mov
sbb
inc
mov
cmp
sub
iret
je
lret
add
xchg
and
loope
movsl
pop
mov
mov
dec
out
dec
imull
push
push
out
adc
add
mov
xchg
jb
clc
jnp
jnp
sahf
adc
movsl
pop
fcomi
shrl
test
and
add
xor
imul
xchg
xchg
out
ljmp
nop
jbe
inc
pop
out
cmp
repnz
add
xchg
lcall
fcompl
int3
scas
mov
repz
je
insw
movsl
dec
sbb
mov
gs
fcoml
push
data16
fnstsw
dec
sub
adc
mov
or
mov
dec
and
push
cmpsl
fcomps
out
sub
jg
popa
and
jmp
scas
jae
insl
and
outsl
imul
outsb
jg
push
in
jge
inc
mov
xor
adc
mov
ret
aaa
jae
add
test
cltd
cmc
les
cli
jb
iret
mov
mov
mov
in
in
inc
mov
push
pop
ret
adc
iret
rorl
jecxz
vpsraw
loope
std
dec
rcl
adc
add
pop
xchg
imul
jge
sahf
mov
mov
inc
hlt
xor
and
dec
clc
js
das
add
sub
aad
cmp
mov
adc
adc
fistl
or
jge
and
inc
fmul
sahf
sti
cmp
ljmp
int3
sub
int3
mov
inc
sbb
jo
lea
sti
lcall
ljmp
imul
jns
mov
popf
xchg
mov
lds
aad
addb
daa
outsb
push
cmc
popa
pop
mov
adc
test
insl
div
loopnew
cmpsl
sub
fists
push
hlt
and
mov
pop
xchg
xlat
pushf
jecxz
mov
clc
call
shl
dec
out
sub
or
dec
popa
aas
inc
adc
hlt
mov
sub
in
nop
test
and
adc
insb
and
cmpsb
leave
in
pop
stc
lret
add
cmp
popf
cmpb
lcall
mov
pop
xchg
add
dec
xor
loopne
hlt
jp,pt
and
push
loopne
sub
movntps
mov
or
sub
adcl
std
add
pop
xor
cmpsb
ljmp
lods
enter
push
es
push
sub
mov
push
gs
adc
icebp
mov
call
ljmp
xor
jo
cmc
je
jp
xor
es
cltd
daa
frstor
dec
push
jo
dec
loopne
add
inc
loope
pop
mov
ficoml
hlt
lcall
lret
leave
fldcw
sahf
jp
leave
mov
inc
jg
or
pop
fcomp
mov
into
ret
scas
stc
mov
and
ds
shl
mov
add
inc
inc
popf
adc
sub
mov
insl
inc
mov
jae
jmp
inc
sbb
ds
mov
in
movsb
lea
pop
cmpl
xor
in
xor
outsl
mov
cs
cmp
pop
inc
adc
aas
xor
sub
push
push
je
sub
push
cmp
cs
inc
pop
jle
out
jo
inc
inc
dec
fldcw
repz
jge,pt
aaa
sti
and
sbb
sbb
sub
pop
mov
push
pop
outsl
ret
cmpb
or
insl
cld
bound
cltd
sub
imul
fistps
out
inc
inc
ss
popa
and
popa
sti
sub
jmp
insb
loope
xchg
dec
loopne
sbb
xlat
mov
sbb
jb
dec
cld
and
or
cmp
test
popa
and
push
stos
stos
lahf
cli
dec
arpl
loope
jl
push
out
pop
push
lret
fimuls
jecxz
jg
push
jno
add
ret
loopne
fistps
and
mov
xor
adc
cmp
inc
imull
cld
adc
fidivl
shrl
mov
sub
jecxz
push
sub
pop
mov
shr
or
mov
dec
int3
lahf
cwtl
and
es
jecxz
stos
je
into
xchg
in
xor
add
mov
ss
push
ja
addb
or
ret
or
insl
addl
adc
push
jle
mov
fnstsw
sbb
outsb
pushf
push
nop
in
sbb
push
out
fmuls
push
xchg
popf
inc
enter
aas
negb
jnp
rorb
imul
mov
push
and
sti
fnsave
in
dec
jle
loop
pushf
adc
add
push
shr
xor
mov
add
call
pop
out
xor
sbb
add
fs
cld
ficompl
adcb
fistps
sahf
cs
scas
dec
pop
xchg
sbb
add
sbb
add
pop
sarb
jl
add
mov
pop
inc
ljmp
into
fnstenv
fldcw
adc
std
popf
xor
sarb
icebp
add
popf
rep
push
sbb
outsl
pop
jnp
pop
and
outsb
outsl
sub
or
cwtl
sub
and
jg
shl
mov
fsubrl
lcall
mov
cwtl
das
cmp
je
ljmp
push
jmp
sbb
xchg
pop
xchg
add
add
movsl
and
popa
mov
inc
data16
shll
sub
and
mov
or
sub
xchg
add
add
mov
and
in
pop
xlat
dec
xchg
enter
rcll
dec
mov
or
in
jge
push
jmp
jl
cld
xchg
pop
sub
loop
testl
movsl
adc
xor
or
insl
adcb
sbbl
xor
jb
sub
sarl
adc
xchg
mov
test
jle
mov
loopne
test
mov
es
jno
inc
std
mov
jmp
icebp
lock
sbb
ret
sub
das
mov
or
xchg
lret
daa
lret
cmpsl
sbb
fmuls
or
adc
xchg
or
or
jge
ljmp
push
std
add
pop
mov
push
inc
fs
test
lods
out
clc
stos
mov
out
idivb
mov
sahf
stos
lods
pushf
mov
xchg
nop
mov
shll
mov
cmc
xor
push
sbb
daa
cmp
push
in
loopne
dec
pop
repnz
sbb
jae
inc
push
jb
int3
inc
dec
call
mov
std
mov
cli
mov
setns
pop
jle
pop
loopnew
xor
fldl2e
pop
in
add
xorb
mov
cmp
cmp
cltd
adc
repnz
pusha
aam
pop
mov
adc
int
repnz
dec
pop
pop
and
sbb
push
xchg
lahf
cld
je
out
or
movsb
popl
je
and
aaa
cld
shrb
decb
lock
clc
fwait
pop
cmc
jp
ds
mov
addl
fldcw
cmp
addl
imul
insb
test
mov
push
fildl
add
decb
jge
idivb
scas
test
cmp
cmpsb
mov
cwtl
mov
lret
adc
lock
and
push
fs
xchg
jecxz
mov
add
mov
notb
and
or
test
dec
mov
mov
aas
in
insb
dec
xor
mov
or
cmpxchg
xchg
mov
nop
cmp
orw
mulb
fucompp
fucomip
test
les
adc
je
lods
cmp
mov
adcl
jg
out
aas
sub
adc
repnz
enter
cmp
fwait
jae
sbb
sbb
jb
dec
cmp
ret
mov
call
and
sub
jo
repnz
sub
mulb
jb
jb
adc
ss
mov
push
sahf
jg
cmp
dec
xor
outsl
mov
cmp
lcall
nop
xchg
and
popa
ret
inc
mov
xor
stos
mov
rcrb
xchg
jp
add
adc
sbb
inc
cmp
test
jge
add
mov
jne
add
jno
mov
dec
bound
dec
stos
cmp
push
cmc
loop
or
fmull
dec
push
xchg
inc
out
sub
cli
push
popa
int
push
insb
inc
hlt
jecxz
sub
add
in
mov
mov
xor
ret
cmp
lret
shll
mov
addr16
daa
shr
hlt
cmp
fbstp
test
push
xchg
stc
das
push
push
aaa
les
mov
jmp
sbbb
push
mov
push
mov
mov
cli
dec
dec
in
js
push
popa
es
imul
xor
and
inc
ret
jmp
mov
fisubl
pop
mov
bound
mov
adc
scas
outsb
xchg
nop
popf
mulb
fimull
pop
jl
lahf
dec
addl
sbbl
je
jl
ss
repz
sub
lds
mov
mov
hlt
test
mov
lcall
dec
cmpsl
dec
push
xor
push
dec
mov
mov
and
pushf
arpl
add
stos
sbb
dec
add
sbb
aaa
sub
jae
push
pusha
mov
std
dec
aas
leave
iret
mov
pop
xchg
popl
push
and
jno
mov
aas
mov
sarl
repnz
push
jae
std
cwtl
incl
cmpb
pop
pop
lcall
dec
inc
int
out
js
imul
mov
mov
mov
inc
call
data16
jp
add
mov
xchg
les
inc
sub
adc
pop
int3
adc
adc
mov
pop
mov
lds
xchg
aaa
jne
aad
negl
and
jnp
jb
enter
mov
add
loop
test
pop
xor
jno
sbb
int
xor
fildll
int3
adc
mov
cmp
enter
push
insl
test
push
mov
ds
call
mov
jb
addb
scas
lahf
divl
xor
sub
cmp
pop
dec
inc
gs
mov
adc
jmp
imul
out
jmp
clc
dec
daa
and
fwait
cltd
js
pop
pop
pop
inc
pop
mov
jne
add
pop
sbb
pop
sub
fwait
sub
adc
sub
sbb
and
cmpsb
stos
pop
out
xchg
adc
inc
push
push
cli
in
jmp
mov
push
push
mov
cmp
push
sub
mov
fisubrl
ds
add
mov
jae
inc
mov
pop
mov
stos
lods
ljmp
in
pop
xchg
repz
movsb
sub
ljmp
loop
shlb
test
pop
push
sbb
mov
cmpb
jnp
push
pushf
movsb
fdivrp
ss
in
aad
fistl
movsl
das
mov
dec
aad
xchg
jno
jns
nop
aam
push
pop
cmp
xchg
cmpsl
loop
repnz
inc
pusha
xor
inc
inc
ret
aam
xchg
dec
sti
adc
lea
xor
call
es
outsb
aad
jp
stos
mov
mov
or
rolb
pop
stc
mov
add
fs
push
pop
mov
fwait
aam
mov
cmp
and
daa
mov
shll
lret
inc
inc
push
dec
icebp
lret
pop
and
mov
insb
or
add
aam
jbe
movsl
jl
pop
cmc
xor
ja
sub
fidivs
movsb
jl
les
addr16
push
xlat
insl
out
loop
mov
inc
ds
ror
mov
fucomi
repnz
jns
das
jnp
mov
jle
adc
push
cmpsl
cmc
jbe
jne
shr
int3
lds
popf
add
mov
out
lock
ss
mov
mov
into
mov
mov
adc
rcl
xor
or
push
in
sbb
ja
mov
mov
mov
out
pop
xor
scas
aam
and
rolb
push
fnstcw
jnp
es
dec
js
inc
leave
pop
pop
xchg
push
pop
mov
sub
rcrb
pop
add
and
fiaddl
cmp
add
dec
pop
pop
gs
rolb
mov
push
sbb
sub
add
cmp
cli
add
push
pushf
xchg
cli
stc
movsl
dec
inc
sar
jno
mov
and
fmuls
movsb
fists
out
mov
xor
add
pop
popf
pop
or
cld
push
stos
repnz
inc
aam
push
xor
loopne
mov
pop
xor
cmc
pop
inc
icebp
pusha
and
dec
enter
xchg
xchg
jp
cli
cmp
or
jge
repnz
divl
xor
cld
or
jne
mov
mov
es
pop
insl
in
xchg
ret
push
sub
jne
dec
sti
jne
push
jge
and
cmp
or
dec
jo
inc
popf
shlb
lret
add
jo
mov
test
xor
inc
scas
mov
jnp
jg
pop
dec
pop
mov
pop
sub
test
mov
fwait
or
lahf
test
sub
mov
or
lods
es
inc
movsl
pop
pop
mov
or
xor
mov
insb
mov
arpl
jns
and
mov
cmp
mov
mov
std
daa
aam
and
insl
test
pop
xchg
cmpsb
test
leave
sub
or
push
scas
aad
mov
dec
cmp
cld
jecxz
cmp
cmp
and
repz
pop
insb
push
icebp
mov
jnp
pop
scas
loope
cmp
cmc
clc
pop
dec
push
and
fdivrl
subb
sbb
push
or
arpl
inc
inc
aad
cs
notb
mov
dec
out
aam
push
not
and
in
pop
or
mov
dec
mov
jns
movsl
adc
shll
jbe
enter
jecxz
stc
push
pop
dec
mov
negl
xchg
aam
movsl
pop
xor
addr16
mov
pop
popf
stos
test
jns
daa
jl
xorb
dec
arpl
cld
pop
cmpsl
cmp
cmp
arpl
mov
pop
pop
test
sub
or
push
lret
repnz
mov
outsl
jnp
mov
rcl
mov
mov
inc
add
pop
jmp
sub
push
int
movb
test
add
mov
xor
push
add
sub
mov
inc
sbb
mov
sbb
cmp
mov
loopne
mov
mov
mov
daa
cmpsb
pop
arpl
popf
jo
and
mov
jl
pop
xchg
adc
outsb
sub
jg
lcall
add
pop
mov
rcrl
lret
cmp
jbe
jno
or
inc
mov
fwait
inc
shl
fimuls
outsb
clc
flds
mov
push
push
adc
add
outsb
adc
enter
mov
popf
push
movsl
sub
in
clc
rorl
jmp
and
and
inc
inc
pusha
dec
mov
xchg
lret
out
cmpsb
or
leave
stos
sub
jbe
leave
je
lahf
sub
adc
add
cltd
lea
or
dec
jbe
push
into
daa
clc
mov
xor
xor
push
jg
out
ret
inc
inc
lahf
mov
negl
mov
sub
and
xchg
aad
mov
mov
add
lods
mov
sbb
mov
dec
mov
add
xchg
cmp
aad
dec
stos
push
aam
cmp
and
test
adc
sbb
jp
icebp
mov
pop
adc
mov
pop
push
cmp
cmp
and
xor
jae
pop
lahf
ret
je
mov
add
fsubs
jne
test
jne
dec
push
pop
adc
popa
mov
mov
sub
rcll
add
push
jbe
std
pop
mov
lahf
out
mov
or
fstl
push
frstor
mov
push
and
scas
xchg
jmp
xor
cmp
jl
mov
subl
rcr
xchg
inc
pop
cli
dec
mov
out
jns
mov
cmc
pusha
ljmp
pusha
ljmp
hlt
push
bound
stos
sbb
push
inc
sbb
in
call
cmp
push
and
fstl
inc
iret
mov
sar
sbb
les
xchg
data16
jne
sarb
pop
jl
shl
xor
into
sbb
adcl
mov
xlat
push
je
and
xor
jmp
fnstenv
shll
out
jae
les
push
push
int3
sti
movsb
and
pop
popl
xor
andl
mov
insl
push
daa
mov
aam
xchg
xchg
pop
sti
imul
jecxz
into
adc
es
dec
pop
push
and
std
push
dec
mov
stos
inc
sub
mov
hlt
xchg
ret
fcoms
sahf
ljmp
mov
fistpl
mull
lahf
cltd
addr16
out
mov
mov
gs
pushf
fcoml
xchg
cmp
pop
decb
iret
leave
xchg
sub
sub
sbb
mov
xlat
clc
test
rol
in
dec
stos
mov
cli
push
xchg
out
sahf
in
sbb
hlt
call
scas
nop
xor
das
add
out
ljmp
and
jb
xor
mov
inc
fs
cmp
movsl
xor
cmpsl
outsb
or
jae
fwait
rolb
sti
mov
mov
stos
sbb
xor
test
xchg
fcoms
mov
out
cmp
add
xchg
jnp
xor
lahf
cs
push
adcl
adc
xchg
mov
push
and
adc
dec
push
jle
pop
nop
pushf
dec
fistpll
dec
xchg
inc
adc
roll
fldcw
pusha
iret
push
cmp
test
sub
fidivs
inc
stos
mov
jnp
add
dec
test
testb
mov
out
pop
jno
scas
and
cmc
cmc
xor
rorb
pop
sbb
or
mov
mull
movsb
push
mov
xchg
cmp
cmp
gs
nop
icebp
cmp
push
push
or
jp
or
outsb
loope
nop
pop
mov
fsts
fnstsw
jnp
stc
jne
in
fdivs
lods
xor
in
stos
inc
ss
push
cmc
xchg
out
dec
imul
iret
pop
fsubrl
cmp
scas
jae
add
cmp
dec
sub
adc
out
pushf
mov
addr16
cmp
movb
ds
sub
fsubl
and
cmp
fs
xchg
add
in
shll
push
jns
xor
and
lock
rolb
enter
sub
xchg
hlt
insl
test
inc
lret
pushf
insl
pusha
pusha
clc
mov
rcr
xor
adc
mov
xchg
jmp
adc
sbb
sbb
jp
lea
jbe
test
pop
hlt
rcl
cmp
push
adc
enter
lods
icebp
mov
popa
or
xchg
in
imul
call
inc
inc
je
mov
xchg
mov
or
pushf
mov
das
cmc
mov
add
jp
mov
repnz
xchg
ret
lods
xor
movsl
add
jmp
mov
cmp
inc
fisttpll
cmpsl
lret
lods
scas
sub
xor
xchg
mov
imulb
out
add
sbb
dec
pop
dec
lret
mov
aas
js
mov
sbb
repz
jne
push
shll
les
cmovbe
decl
aaa
mov
and
sbb
int
in
add
dec
jmp
and
jmp
pop
jns
mov
nop
rorb
jge
push
mov
or
pop
jae
shlb
pop
pop
ljmp
dec
xchg
pop
gs
sti
hlt
push
pop
outsb
repz
push
addl
lods
les
xchg
adc
and
idivl
jb
icebp
insl
xor
xor
call
pushf
cmp
rcrl
and
cmpb
movsl
pop
sbb
daa
call
scas
sbb
inc
sbb
push
fmulp
pop
pop
pop
aas
jae
sub
sbb
mov
cltd
in
imul
scas
enter
andl
test
jo
daa
lods
out
jmp
pop
xchg
imul
push
mov
test
adc
push
ljmp
lods
imul
xor
dec
rcr
or
sub
into
add
adc
lods
rorl
push
cmp
and
ljmp
ret
sbb
sbb
xchg
in
pop
mov
add
sub
ficoml
fcomp
enter
inc
leave
out
inc
fstps
gs
inc
imul
fdivr
xorb
push
mov
mov
xchg
rcll
call
test
inc
or
cmp
frstor
jno
or
xor
push
jnp
or
sahf
fsubrs
lcall
lahf
adc
pop
cwtl
add
fsts
ret
sbb
outsb
xchg
cs
imul
or
icebp
inc
dec
jge
mov
aad
sbb
sbb
sub
ret
or
lret
mov
add
pop
leave
push
addr16
and
mov
mov
and
cltd
push
mov
ret
int
cmp
and
pop
mov
push
aad
jb
fwait
adc
push
imul
les
sbb
outsl
adc
sbb
inc
xchg
in
pop
fcomps
jle
in
xor
mov
push
icebp
pop
push
pop
jbe
push
add
addb
stc
lds
in
dec
jae
jne
sahf
shlb
mov
int
dec
roll
xchg
or
sbb
adc
scas
ret
xlat
inc
outsl
loop
movsb
cmp
pop
orb
test
push
lret
inc
daa
xchg
push
enter
sbb
test
pop
mov
inc
out
fiadds
add
jae
outsl
mov
xchg
push
jl
pop
in
out
lret
pop
pop
insl
adc
and
pop
pop
add
sbb
scas
pop
jbe
push
sti
mov
negb
cmp
jl
in
sub
ja
sub
sbb
sti
sahf
es
fstl
jl
pushf
mov
jb
jbe
dec
inc
jg
lret
jae
mov
push
arpl
movsl
das
shrl
aaa
push
dec
lods
sbb
scas
jle
xor
pop
cmp
adc
xchg
adc
xor
pop
add
ret
sub
scas
out
pop
repz
push
xor
push
mov
fnstcw
loopew
icebp
push
in
shll
insl
das
ret
stos
sahf
outsl
pop
jno
cmp
pop
mov
in
cli
loopne
cmpsb
pop
gs
out
sub
push
std
test
sahf
bound
xchg
pushf
lret
mov
sub
jne
adc
inc
jmp
add
jp
push
push
sub
fcomps
jae
test
aad
int3
sub
fildll
lds
call
sub
fucomip
xchg
mov
dec
popf
jmp
pop
test
add
int
repz
repnz
sbb
xchg
rcll
mov
hlt
fadds
outsb
cmp
mov
and
mov
rol
lea
dec
and
lea
ret
repz
inc
scas
cmp
inc
mov
mov
pushf
mov
push
adc
aas
fists
mov
mov
fidivs
nop
pop
pop
je
out
gs
jae
out
adc
js
sub
sbb
insb
cwtl
pop
stc
cmp
fbstp
lret
sbb
sub
int
jle
out
dec
sub
ljmp
ja
fisubrs
je
add
fldt
dec
sbb
pop
repz
mov
jmp
pop
aad
jmp
data16
js
jle
push
xchg
movsb
int
fwait
scas
js
cld
inc
test
xchg
fistps
scas
sub
lcall
ja
test
mov
cwtl
push
flds
dec
scas
js
mov
popa
xlat
testb
gs
mov
xor
ret
stos
push
imul
cmp
stos
fs
arpl
push
daa
les
stc
jle
pop
or
insl
je
lcall
cmpsl
inc
lea
cmp
inc
mov
repnz
hlt
jae
and
pop
cwtl
cli
cmp
inc
jne
icebp
test
xchg
fwait
int
pop
pop
inc
rcrl
mov
sub
and
xor
mov
push
xchg
nop
mov
mov
cmp
movsl
mov
cmp
lret
lret
imul
fs
call
ja
mov
shlb
shlb
decb
pusha
and
fwait
test
lock
mov
cmc
iret
lret
xchg
rol
aam
gs
cwtl
int
sti
mov
fnsave
xchg
mov
inc
mov
sahf
into
xchg
iret
mov
push
clc
stc
aam
inc
repnz
xor
fstp
jbe
dec
mov
push
jecxz
push
push
dec
add
push
stc
add
aad
ja
int3
sti
mov
fnsave
xor
or
pop
hlt
test
outsl
xchg
adc
out
mov
aaa
cmpsb
dec
shlb
gs
cmp
and
jne
push
adc
cmp
sub
add
out
roll
lahf
push
jg
call
popf
or
jp
enter
lea
movsl
adc
test
jno
std
outsb
scas
ljmp
cmpsl
shl
repnz
pop
stc
shrl
cltd
xchg
dec
stos
add
jle
js
xor
vcvttsd2si
pop
adc
xor
push
dec
mov
mov
popa
push
or
lcall
push
adc
push
inc
and
lret
jbe
jb
les
fisttpll
vminpd
dec
xchg
inc
cmp
andl
push
xorb
or
out
fwait
xor
in
fbld
xchg
jb
inc
or
insb
popl
add
cmpsl
repz
lret
push
mov
arpl
mov
stos
push
fnstenv
push
or
scas
mov
pop
dec
jle
rcll
mov
rcll
mov
pop
jb
out
stc
inc
sub
dec
sbb
inc
stc
dec
inc
outsl
inc
dec
dec
sub
or
ja
out
dec
push
pushf
jecxz
std
xchg
lahf
jmp
and
or
pushf
push
mov
hlt
fs
push
inc
mov
mov
mov
sub
push
and
aad
fwait
sub
pop
pusha
mov
add
sbbb
mov
dec
mov
insb
lahf
cmc
subb
es
popf
test
jecxz
mov
notb
xchg
fcompl
clc
ds
xor
and
rcrb
push
adc
stc
pop
dec
and
push
cwtl
sbb
popa
dec
fnstcw
sbb
arpl
mov
cmpl
jo
cmp
xchg
push
xchg
jne
cmp
push
push
push
and
sbbb
fstps
into
adc
xor
and
push
jge
ret
repz
js
or
sbb
cmp
xchg
clc
cmpsb
mov
mov
adc
aas
in
push
nop
loop
fucomi
sbb
aam
scas
push
and
push
xor
inc
mov
cmp
or
inc
xlat
shrb
adc
out
test
mov
jnp
xor
cwtl
xchg
les
call
out
jb
test
jg
rcl
fcmovnb
xor
iret
pusha
mov
mov
sbb
loope
mov
pop
push
icebp
push
mov
stc
sub
adc
push
xor
mov
xor
inc
clc
lret
inc
daa
sbb
push
das
mov
push
add
mov
jbe
adcb
cwtl
daa
push
lock
or
fadd
sbb
inc
hlt
jns
std
dec
pusha
xor
frstpm(287
and
cmp
push
pop
rcll
mov
cltd
adc
xchg
cwtl
xchg
sbb
pusha
jmp
sar
pop
insb
jno
jl,pt
aas
xor
mov
xchg
fadds
ja
out
sbb
movsl
test
loop
xchg
fs
in
fisubl
ss
ljmp
xchg
jecxz
fisubl
lods
mov
jcxz
fmull
faddl
pop
es
in
cmc
jle
jnp,pt
xor
int
fidivs
adc
and
repnz
ljmp
in
movsb
popa
test
fdivl
jle
pusha
insb
insl
mov
add
pop
mov
out
aas
push
add
push
fidivrl
mov
insl
fistpll
jmp
push
les
xchg
xor
push
and
jg
lret
dec
pop
mov
shrl
adc
scas
imul
dec
lods
std
mov
je
sbb
lret
lahf
sbb
adc
mov
cmp
cmp
dec
or
fldl2e
shlb
data16
cmp
dec
int3
ja
stos
adc
or
and
pushf
pop
jp
jnp
fstpl
test
std
stos
ljmp
popa
imul
mov
mov
movsl
popa
ror
test
sarl
fisubrl
ja
sarb
in
in
stc
pop
sti
pop
ljmp
xor
push
mov
mov
and
push
dec
in
xorb
cmp
jae
add
dec
jne
or
nop
sbb
jl
sbb
in
jmp
scas
or
rolb
jo
cmp
xchg
mov
repnz
mov
filds
arpl
int
push
dec
rcrl
adc
movsb
add
ss
xchg
repz
sub
or
push
or
popf
int3
gs
cltd
sub
sbb
repnz
in
add
push
clc
push
mov
mov
in
lahf
dec
sub
call
xchg
and
icebp
outsl
imul
movsl
aad
mov
jo
xor
sbb
mov
popf
add
decl
push
ret
lret
enter
sti
out
sti
leave
mov
inc
repz
leave
test
scas
mov
popa
and
repz
or
fcmovnb
sbb
lds
push
loope
jecxz
add
daa
mov
scas
into
mov
in
dec
inc
ja
pop
mov
in
stc
xor
xor
js
xrelease
add
jl
lret
lods
or
adc
pop
pop
sub
stc
inc
sbb
sbb
insb
jmp
adc
lahf
fwait
cltd
aam
fstps
fs
xchg
lcall
mov
cmp
shll
inc
cmpb
lods
aad
test
das
aaa
insb
ds
mov
popa
imul
cmc
mov
sahf
mov
mov
int3
fstpt
adc
ret
mov
xchg
add
xchg
mov
jo
jge
lcall
jge
les
js
scas
jbe
std
mov
mov
cmp
inc
je
outsl
mov
pop
pop
cmp
test
pop
mov
loopne
lods
shll
insl
sti
jns
mov
push
dec
aaa
add
cmpsb
mov
andb
or
orl
in
subb
out
jae
sbb
or
and
inc
cmpsb
jecxz
sti
jmp
rcrl
hlt
fcmovnbe
dec
sahf
mov
or
shll
stos
sub
les
sbb
and
mov
je
and
push
lcall
jae
inc
adc
sub
add
dec
decb
push
cli
add
and
sub
and
dec
push
rcrl
clc
push
fimuls
mov
movsb
mov
test
inc
jb
adc
mov
stos
enter
sub
lods
jle
aaa
cmp
test
int
lret
sub
ds
mov
sub
xor
std
sahf
and
jns
test
xor
xlat
cmp
pop
mov
inc
cs
stos
xchg
push
stos
add
push
js
jnp
enter
ljmp
mov
mov
add
inc
das
jecxz
shll
int3
test
in
addr16
mov
sub
add
ljmp
sbb
or
in
add
imul
call
lock
fwait
inc
jbe
adc
xor
cmpsl
es
stos
mov
sbb
rolb
add
sub
lods
roll
mov
pop
sbb
shrl
inc
loopne
testb
dec
dec
int3
xor
loopne
movsl
mov
mov
shr
pop
lret
pop
mov
mov
push
lea
jns
mov
scas
aaa
or
call
cs
cmp
clc
jns
xchg
jp
add
lock
je
dec
and
push
nop
iret
int3
add
in
cmp
mov
inc
int
push
pop
pop
sbb
addr16
sahf
into
jne
cwtl
dec
les
enter
xorl
xor
and
xchg
cmc
mov
iret
cmpl
mov
inc
cmc
repz
dec
addl
and
rcll
xlat
or
cwtl
sbb
rcrb
inc
adc
dec
andb
add
pop
rorb
adc
cmp
gs
out
xchg
jbe
mov
xchg
or
pop
inc
lcall
std
popf
sbb
pop
in
jmp
or
jmp
int3
filds
in
cld
push
mov
adc
jmp
in
fs
bound
insl
mov
rorb
mov
test
mov
adc
lds
mov
jg
ljmp
in
mov
pop
xchg
add
jecxz
lea
test
in
and
aaa
sub
aad
pusha
jmp
fcoml
mov
sbb
jbe
and
lea
or
aas
test
pop
jnp
pop
sub
mov
sbb
invd
cmpsb
aas
popa
inc
xchg
iret
call
and
push
pushf
adc
jae,pn
jns
add
sbb
dec
adcb
test
fsubr
fmuls
int
and
pand
mov
stos
jne
ret
scas
ds
rcrl
adc
pop
into
or
movsl
xchg
mov
xor
inc
sahf
out
jne
pop
xchg
clc
loop
jb
and
mov
insb
mov
add
outsl
xor
adc
enter
ja
int
call
or
scas
or
push
mov
shll
outsb
cmpsb
xchg
lret
mov
rol
adc
add
mov
mov
add
push
gs
jmp
mov
jle
pop
enter
xchg
es
call
call
adc
pop
scas
xchg
jne
rorl
leave
flds
sbbb
aas
daa
jnp
fwait
mov
jl
mov
in
movsb
mov
mov
iret
mov
mov
inc
incb
mov
push
dec
or
fs
inc
test
cmp
push
xor
fistpl
in
pushf
xchg
test
in
gs
sub
adc
xchg
xchg
imul
sub
inc
dec
lods
xor
pop
add
mov
xor
ret
sub
xchg
push
stos
jl
test
xchg
lds
rclb
sbb
incb
loop
jecxz
in
stc
cli
adc
dec
sub
xchg
scas
add
rcll
push
push
dec
adc
lret
sbb
inc
jg
scas
nop
lea
pop
cmpxchg
push
jae
sbb
movsl
out
fucomi
or
push
cmpsl
hlt
jns
into
add
and
xor
in
xor
mov
mov
test
fs
je
adc
repnz
push
or
test
lea
adc
jmp
rcrb
arpl
sub
sbb
insb
cld
xor
jbe
mov
aad
das
dec
lret
or
xchg
jecxz
push
adc
mov
outsl
push
xor
inc
sbbb
sbbb
aas
into
loope
sub
dec
out
pxor
mov
popa
clc
mov
mov
inc
sarl
mov
inc
into
pop
jno
jbe
xchg
add
jb
out
lock
int
sub
fdivrl
rcll
orl
cmc
mov
mov
iret
rcl
repnz
pop
inc
es
pop
pop
test
cwtl
xchg
aas
mov
and
adc
sahf
sbb
pop
jns
fwait
mov
lock
js
pop
mov
mov
cli
push
sbb
testb
sbb
shrl
inc
push
pop
out
ds
jle
dec
mov
call
cwtl
lret
inc
cli
stos
jnp
push
lahf
scas
clc
sahf
arpl
loop
in
pop
rcll
iret
xchg
lcall
dec
ja
addr16
pop
add
ret
into
ud2
and
and
fisttps
es
and
xchg
into
xor
jl
jp
out
ficompl
cli
outsl
push
popa
loop
push
fbstp
mov
cmp
push
insb
pop
adc
ja
pop
inc
pop
stos
es
jnp
repz
cmp
mov
pop
lcall
arpl
sub
das
cwtl
test
adc
insb
and
and
addl
inc
mov
stc
jle
mov
daa
push
repz
xchg
mov
sete
arpl
pop
sub
int3
repz
das
pusha
sbb
mov
mov
neg
push
pop
roll
mov
ja
jne
rcrb
add
push
repz
xor
dec
aam
mov
shr
out
sahf
fwait
clc
loopne
outsl
lahf
sub
mov
dec
test
inc
subb
ljmp
jb
lret
enter
adc
add
pop
mov
leave
and
movsl
xorb
jns
out
jl
dec
hlt
pop
testb
mov
sbb
pop
shll
push
xor
mov
push
je
xchg
pop
icebp
mov
adc
aam
inc
add
into
mov
jl
dec
shrl
push
int
test
gs
daa
and
rcl
pop
dec
sbb
push
mov
push
roll
jo
rcll
hlt
and
xor
push
jns
push
xor
push
pop
loop
data16
andb
dec
mov
pop
pop
sub
pop
push
shl
mov
iret
xlat
mov
dec
mov
bound
pushf
mov
sbb
or
mov
js
adc
clc
fidivs
std
subb
test
nop
es
lods
push
and
cmpsb
into
mov
or
mov
mov
jle
in
push
sbb
mov
jecxz
ret
fs
mov
nop
jmp
mov
popf
push
scas
stc
sti
and
jp
mov
idivl
or
mov
lahf
push
lods
sbb
insl
push
cmp
push
and
adc
push
imul
xor
xor
cmp
lods
jb
mov
jns
cmp
mov
jnp
aas
sbb
jns
jecxz
in
les
mov
add
mov
lret
jbe
aaa
sbb
fnstenv
rolb
adc
xor
in
cmp
push
fildll
dec
push
inc
mov
mov
adc
push
in
clc
loope
jae
pop
cmp
pop
loop
ljmp
dec
jae
fcoml
mov
inc
inc
push
test
pop
je
mov
cwtl
fs
sbb
inc
je
sub
pushf
jns
fisttps
outsl
inc
out
ret
outsl
lret
dec
or
cmp
mov
fs
ss
jo
stos
push
adc
lds
xchg
loope
push
cli
ss
lret
sbb
rcr
inc
adc
stos
cmp
pop
pop
sbb
out
sbb
cmpsb
and
pop
repz
mov
push
and
gs
cmpsl
and
or
cli
fldl
mov
mov
imul
pop
xor
mov
ja
hlt
push
call
cwtl
push
mov
adc
fmulp
pop
push
add
pop
in
push
test
das
rorb
push
repnz
imulb
stos
imul
or
sub
ret
cmp
adc
cltd
ja
icebp
mov
jmp
pop
xor
sub
enter
out
fs
bound
and
adc
inc
rcll
xchg
sbb
ja
xor
xor
jle
add
aad
jg
addl
cmp
out
push
mov
sbb
imul
lcall
cltd
fyl2xp1
stos
mov
jp
push
sub
enter
dec
outsb
pop
scas
and
shl
push
mov
jnp
loopne
cmp
clc
dec
add
add
das
test
sbb
test
push
adc
mov
ficompl
mov
cwtl
push
or
inc
insb
cli
int3
fdivr
ljmp
or
add
cmpsb
das
popf
xor
dec
inc
insb
or
fnstenv
jge
cmp
mov
scas
pop
je
xor
and
fadds
in
mov
cwtl
xchg
test
push
sbb
jge
jp
mov
movsl
popa
add
dec
je
xor
mov
iret
pop
mov
xchg
inc
xchg
jno
inc
enter
add
cmp
jmp
ret
fisttpll
pop
cmp
mov
cmp
sub
imul
inc
lds
in
stos
and
hlt
xchg
xor
add
jg
mov
adc
mov
sbb
int3
jge
xchg
mov
iret
sub
sbb
push
outsl
mov
push
mov
loope
nop
out
push
pop
outsb
ljmp
jecxz
jmp
into
xchg
cs
sbb
sub
cld
loop
mov
std
test
cmpl
mov
push
fs
xor
lcall
xchg
lods
bnd
mov
pop
gs
and
sbb
xchg
jge
sbb
sub
test
dec
pop
movsb
mov
jge
cmp
sti
jno
lock
pop
es
cmpsl
test
sbb
loope
mov
pop
andl
cmp
mov
adc
je
cmpsb
rcr
dec
pop
xor
mov
mov
jae
insl
addl
lods
jbe
xchg
push
and
cltd
aaa
fs
rclb
stos
xchg
pop
xor
pop
pop
imulb
mov
cmp
inc
sub
lcall
adc
outsb
mov
in
lods
inc
push
stc
or
divb
inc
mov
fidivl
pop
daa
jp
cs
stos
push
mov
aad
jle
popa
inc
dec
xlat
jmp
dec
push
fdivrl
xchg
sub
mov
mov
sbb
fbld
rolb
mov
push
ja
popf
pop
outsb
jle
mov
mov
mov
mov
or
and
push
subl
pusha
adc
inc
popa
push
outsb
push
dec
ret
mov
sahf
icebp
and
pop
insl
cmp
push
adc
add
in
mov
push
xlat
popl
cmpsb
inc
repz
roll
iret
mov
jo
dec
xchg
outsb
xchg
test
in
add
cmp
xor
mov
and
les
adc
pop
arpl
adc
das
mov
cmp
cmpsl
jp
adcl
ds
daa
jecxz
mov
mov
jae
mov
ds
pusha
int3
push
faddp
fimuls
mov
mov
sbb
popa
sub
rorl
sbb
xorl
ret
inc
lret
not
xchg
icebp
push
mov
adc
sbb
scas
pusha
ret
insl
adc
sub
out
repnz
or
xchg
xor
jne
andb
mov
xlat
call
pop
or
or
mov
sti
cmp
inc
xor
inc
fst
shrl
jg
insb
sub
sub
mov
push
imul
loopne
dec
xchg
jb
xchg
test
and
ljmp
insb
push
or
iret
in
ret
xlat
jns
pop
pop
dec
xchg
repnz
out
test
icebp
mov
stc
movsl
in
fsubs
rorb
in
icebp
or
jmp
jmp
inc
mov
mov
dec
mov
pop
inc
mov
mov
sbb
sub
pushf
fmul
sbb
push
loopne
data16
nop
add
in
pop
lods
push
fildll
mov
xchg
add
jecxz
fdivr
mov
xlat
adc
or
mov
jne
jne
test
fistpll
xchg
xor
xchg
pushf
scas
aaa
adc
aaa
xlat
stos
xor
test
lea
lods
jns
jbe
jno
nop
ss
idiv
or
push
and
cltd
mov
ret
mov
cs
pushw
mov
mov
je
mov
push
or
mov
lret
jb
and
mov
jp
je
lcall
xchg
out
mov
jge
fs
adc
fadds
push
inc
pop
fnstcw
xchg
sub
push
sbb
push
addb
mov
pop
aas
sti
push
pop
mov
call
imul
bound
dec
adc
push
mov
pop
fisubl
push
mov
dec
leave
sti
sahf
call
xchg
subl
mov
sub
mov
dec
aas
and
das
dec
sbb
pusha
or
xchg
movsb
mov
pop
jns
fstpl
insl
sbb
pop
mov
pop
fiaddl
mov
lock
test
mov
mov
sbb
cli
add
push
ficompl
adc
inc
xchg
lds
inc
cmpsb
jg
cmpsl
sti
inc
mov
push
mov
dec
in
jl
mov
mov
cmp
cltd
jmp
mov
adc
dec
ret
inc
dec
mov
xor
mov
push
xor
mov
jle
nop
pop
movsl
inc
adc
mov
imul
mov
loope
cli
rolb
cld
xchg
test
test
push
mov
add
dec
add
lock
addr16
jecxz
nop
sub
popa
sub
sbb
imul
addr16
and
addr16
test
mov
in
adc
pop
mov
js
push
sub
push
shrl
pop
push
add
dec
clc
jp
test
cltd
xor
cs
or
sbb
data16
jo
mov
sub
mov
mov
test
out
cmpsb
and
ds
inc
es
repz
fnstenv
pop
dec
ret
ds
test
dec
pop
pushw
loop
jecxz
cmpsb
inc
mov
shll
jecxz
pop
pop
and
rorb
mov
ljmp
lret
jl
push
pop
outsb
jb
push
xchg
inc
xor
loop
sbb
andl
ja
adc
sub
test
cmp
add
cmp
add
jl
iret
xchg
jl
lods
popf
sbb
lcall
aam
jle
adc
sub
nop
fimuls
mov
and
sbb
mov
push
dec
push
mov
cmp
or
jg
shrl
ret
and
jg
outsb
pop
or
insl
and
push
insl
dec
loop
ds
in
andl
outsl
jle
jg
jle
subb
cwtl
xchg
adc
pop
mov
fs
cmp
aaa
jb
mov
testl
inc
int3
icebp
aad
jb
xor
sub
push
je
out
in
in
sub
aas
shr
mov
shrl
lret
add
addr16
jne
loopne
popa
loope
add
fstl
or
pop
xchg
out
imul
adc
aas
cmpsl
xchg
fistpl
lds
cmp
pop
dec
je
sub
xchg
pop
jle
add
fstps
and
jecxz
xchg
cmp
or
add
xchg
dec
ret
mov
mov
cmp
jp
aaa
push
hlt
push
mov
mov
mov
pop
push
add
lea
dec
pop
cmpsb
lret
dec
sahf
and
negl
inc
adc
mov
xor
xor
dec
xchg
bnd
push
and
inc
loope
fcmovnu
adc
adc
jae
pop
cs
pop
ja
test
mov
fs
mov
int
cmp
jo
dec
cmp
jo
cmp
dec
cs
mov
lods
push
cmpsl
xchg
jns
inc
and
add
cmp
mov
mov
add
pusha
push
pop
ljmp
and
lahf
inc
ror
shrb
push
cmp
push
push
jmp
dec
into
out
sub
sbb
nop
jmp
lods
push
mov
jns
jne
setae
cmp
xchg
mov
jae
dec
outsl
lcall
sbb
lods
ds
fwait
out
popa
lahf
or
das
aam
insb
fs
ds
repz
pop
ja
adc
fcoml
mov
cmpsl
push
insb
sti
test
test
push
stos
mov
dec
cli
push
mov
loopne
sbb
fbstp
sbb
jae
popf
pop
aad
inc
mov
lock
mov
dec
cmp
lds
lock
filds
or
outsl
shll
sub
ja
stc
mov
add
rclb
push
movsl
aaa
pop
loop
stc
jp
scas
movb
insb
les
dec
test
dec
ds
addr16
dec
mov
outsb
mov
out
out
cmp
test
lods
cmp
sbb
repz
dec
jno
and
or
dec
add
stc
push
jmp
loope
xchg
into
pop
adc
test
popa
inc
inc
fisubrl
fdivp
ja
push
xor
in
and
mov
pop
lods
or
sbb
and
cmpsb
and
and
jmp
mov
movsb
pop
dec
mov
cmpsl
ds
test
push
leave
xchg
aas
test
lock
ret
bound
dec
xchg
xor
ss
arpl
and
sbb
inc
cmp
pushf
and
dec
call
sti
clc
lahf
sbb
push
cmp
pop
mov
inc
inc
outsl
sbb
imul
push
lret
gs
adc
xchg
push
push
notl
test
mov
fisubrl
sbb
pushf
adc
mov
call
aas
mov
ljmp
mov
enter
xor
mov
cli
jnp
jb
mov
xchg
mov
mov
addl
xchg
testb
cmp
mov
enter
adc
cmp
mov
aaa
imul
mov
rcrl
dec
leave
ja
xor
cmp
gs
dec
inc
popa
pushf
call
xchg
sbb
sub
fidivl
icebp
jl
cli
mov
ficoml
aaa
mov
fisubl
fs
fldt
lods
push
and
sub
lods
and
cmp
ret
mov
scas
sti
outsb
sbb
add
mov
xor
ret
and
push
xor
jg
rorb
or
mov
out
mov
fdivr
addr16
sub
adc
scas
fdivl
pop
cltd
bswap
mov
add
push
nop
aas
stos
mov
dec
pusha
mov
fsts
repz
lods
cwtl
xlat
mov
adcl
icebp
jae
xor
call
call
repnz
lahf
shrb
cli
out
inc
cmp
push
pop
xchg
mov
adcl
les
cmp
cmc
pop
sbb
clc
push
mov
cs
imul
and
mov
sub
dec
push
jae
dec
lret
nop
xchg
pop
cltd
cltd
fmull
dec
pushf
test
mov
sbb
mov
pop
mov
out
mov
mov
push
cltd
fdiv
jne
pop
xor
stos
int
fsubr
inc
mov
addb
jmp
pop
mov
call
mov
call
xchg
cwtl
push
jle
repz
scas
mov
ja
outsb
xchg
adc
mov
subl
loope
insl
lock
lcall
jno
mov
sbb
cmc
inc
cmp
out
mov
dec
mov
orl
push
pop
jmp
mov
adc
aad
lods
push
cmp
adc
push
inc
movsb
xor
jge
aaa
hlt
xor
cmp
sub
cmp
sub
adc
in
out
jmp
ficompl
and
mov
pop
mov
mov
out
faddp
mov
cld
sub
add
mov
mov
or
testb
mov
dec
hlt
mov
bound
xor
addr16
inc
jecxz
mov
pop
pushf
mov
inc
jmp
sahf
sub
add
cld
pushf
mov
mov
notl
cmp
int
fsubl
cwtl
cmpsl
sub
inc
mov
cld
fisubrl
jbe
pop
adc
or
pop
in
jge
sti
cmp
je
sub
pop
in
addr16
shll
stos
jo
cmpsl
loope
addb
js
in
xor
pop
int
imul
in
xchg
sub
mov
adc
and
in
arpl
in
add
popa
sub
mov
cwtl
xlat
int3
jbe
mov
push
pusha
stos
es
incl
adc
push
stos
mov
std
dec
dec
into
sbb
push
loop
mov
xor
mov
sbbl
pushf
jle
sbb
out
or
xchg
cmpsb
out
inc
test
ja
inc
cli
mov
push
inc
mov
add
insb
cli
pop
jno
pop
insb
popa
insb
jo
pop
loop
popf
mov
mov
leave
sbbb
cmp
pop
inc
movsl
xor
flds
pop
sbb
rorb
jle
movsb
rcll
aaa
pop
jp
fdivr
jmp
push
lds
icebp
jns
stos
ja
std
sbb
inc
aad
fcoml
jbe
ret
xchg
call
mov
pop
jae
adc
in
popa
out
stos
pop
mov
es
fcmovne
push
mov
sbb
or
mov
data16
push
jbe
or
sub
xchg
stos
adc
loopne
and
push
mov
xchg
nop
mov
inc
cmpsl
repnz
push
jl
punpckhdq
xchg
test
push
mov
or
jg
outsb
popf
lds
mov
arpl
push
loop
lea
add
sub
hlt
insb
andl
loope
push
cmp
sbb
clc
pop
cli
js
in
lock
jnp
push
das
or
test
pop
mov
push
push
into
fwait
inc
popa
xchg
adc
sub
lea
xor
mov
dec
repz
test
dec
add
push
pop
loope
cmp
cltd
or
lcall
flds
xor
imul
sbb
adc
jg
jle
pop
mov
mov
scas
cmpsl
fwait
mov
or
xor
cltd
pop
inc
push
push
dec
push
cltd
xor
fdivrl
rcrl
xor
and
xor
sti
insb
sub
mov
push
sbb
fisubl
inc
mov
subl
shr
or
popf
adc
push
cltd
hlt
lods
sbb
or
rcrl
jb
es
push
fwait
cmp
in
pop
sub
xchg
pushf
jle
inc
test
sub
xor
aad
popf
cmp
sti
sub
sbbl
pop
call
push
lahf
inc
roll
adc
xor
dec
jp
cmp
push
jb
in
xlat
xchg
daa
ret
lods
xor
mov
xchg
and
shlb
dec
add
cmp
shlb
jecxz
lds
jnp
push
and
cmp
jle
adc
cwtl
jl
add
mov
loop
jnp
cmp
jmp
test
scas
push
bound
enter
push
and
sahf
pop
cmpsb
hlt
loop
loop
mov
xchg
gs
sarl
pop
xchg
and
loop
or
xchg
and
mov
bswap
hlt
pop
jge
gs
push
xlat
ficoml
inc
cmp
xor
mov
pushf
and
loope
xchg
sub
cwtl
dec
jne
sub
into
cmp
jmp
pop
pop
aaa
inc
mov
inc
fisubrs
scas
add
mov
jle
lret
mov
enter
test
jg
jnp
push
dec
and
xchg
cmpsl
and
lock
cli
out
imul
scas
mov
pop
fstpt
stos
jp
mov
cmpsb
mov
lea
push
leave
push
cmp
cmp
outsb
adc
jp
xor
xchg
push
dec
andl
inc
testl
not
cld
scas
inc
test
mov
xchg
mov
mov
les
out
pop
dec
sub
sbb
add
cmp
cmp
and
push
pop
sbb
jge
je
inc
inc
or
sbb
leave
or
fnstsw
xchg
bound
jecxz
sub
or
add
push
mov
xchg
cmpsl
ret
in
pop
frstor
jl
pop
ret
jecxz
jns
nop
ss
int
aad
in
jge
rclb
adc
fs
cltd
rorl
xchg
ret
mov
inc
ds
xchg
dec
inc
loop
or
sahf
fs
adc
mov
dec
aas
ljmp
clc
addr16
push
rolb
xor
adc
xchg
sub
or
mov
sarl
mov
lods
andb
mov
and
jo
adc
adc
in
xchg
out
pop
inc
mov
lahf
mov
cmp
icebp
loopne
and
pushf
loope
jno
addr16
mov
or
xlat
fidivrs
cltd
andl
adc
pop
scas
inc
xchg
pop
pop
adc
js
xchg
icebp
push
fstpl
rol
jnp
imul
pop
dec
jno
orb
sbb
movsb
mov
push
gs
mov
das
cld
and
icebp
test
xchg
mov
jnp
scas
sti
jns
mov
adc
add
mov
pop
xchg
push
test
dec
shll
stos
push
jns
cld
pop
cmp
test
push
cltd
inc
out
fldt
fstpt
fiaddl
lret
mov
sbb
insb
adc
popf
cmp
pop
in
inc
dec
and
and
cli
out
loopne
iret
inc
xchg
fidivrs
mov
hlt
jmp
sub
dec
push
mov
int3
push
jl
sarl
mov
test
dec
int
out
jmp
test
xchg
xchg
xchg
sbb
push
ja
lock
lock
addl
pop
ss
call
dec
xor
jmp
push
mov
fdivrp
dec
xchg
jns
sub
jg
cmpsl
out
jp
jbe
push
and
enter
int
aaa
lock
dec
lcall
push
in
add
fsubrl
cmpsl
mov
xchg
lock
scas
xchg
and
addr16
std
dec
jo
xor
mov
mov
inc
sbb
pop
sti
cmp
xchg
out
insl
jecxz
roll
roll
cmp
xor
leave
and
mov
push
in
pop
pop
push
scas
inc
or
or
js
and
adc
ljmp
outsb
lcall
dec
and
dec
in
add
sub
xor
add
data16
js
iret
add
mov
pop
scas
push
xor
mov
push
cli
and
aam
lahf
in
and
xchg
gs
add
int
sbb
push
fnstenv
xchg
cltd
scas
push
negb
lea
adc
add
into
in
loopne
adc
xchg
inc
push
xchg
pop
sbb
mov
xlat
xchg
pop
mov
jnp
es
es
mov
loope
dec
mov
or
out
getsec
xchg
and
js
inc
jbe
mov
pop
loop
es
xchg
and
popa
xor
pop
xchg
mov
and
decb
cmpsb
jle
insb
popf
movsb
incb
xchg
test
fs
xchg
sbb
jbe
out
and
lea
push
add
ds
add
mov
in
arpl
ret
mov
xor
fwait
inc
lret
movsb
mov
in
and
stos
mov
lods
popf
pusha
loope
fdivp
rcrl
stos
add
fs
sbb
xor
or
jge
xchg
xchg
shll
mov
nop
inc
bound
mov
cmp
xchg
in
imul
inc
aaa
int
imul
lock
dec
inc
dec
or
mov
lds
or
std
push
pop
jnp
jb
sbb
push
test
sarl
test
sbb
shlb
xchg
inc
sbb
jmp
or
cmp
sbb
popf
push
repnz
fsts
test
mov
xor
xchg
mov
xor
adc
push
sbb
xchg
imull
dec
pop
xor
dec
out
aad
inc
shll
sbb
mov
negl
stos
adc
pop
andb
ja
scas
mov
out
add
rolb
into
insl
jge
cmp
mov
mov
or
sub
mov
lahf
out
sbb
cmp
fildll
adc
or
cmp
xchg
nopl
push
insl
xor
jmp
mov
xor
pop
mov
sub
or
and
push
mov
jnp
sbbl
pop
and
aam
out
setb
fs
mov
hlt
fistps
cs
lea
nop
ljmp
gs
fldenv
call
and
mov
mov
xchg
or
sarl
clc
aam
icebp
shll
mov
sbbl
mov
and
xchg
xchg
out
fdivp
cs
mov
fcmovb
add
push
stc
lahf
mov
lock
or
pushf
cli
outsl
out
dec
outsb
fsubr
out
out
rorl
xchg
outsb
mov
fdivp
or
loopnew
imul
sbb
inc
movsl
push
not
pop
fwait
xorl
push
test
mov
cmc
xchg
and
or
shl
and
push
in
adc
loopne
jbe
mov
stos
inc
xchg
ja
cmpsb
xchg
arpl
js
stc
out
mov
adc
dec
jmp
loop
adc
inc
and
adc
shrl
mov
adc
gs
pop
cltd
or
loopne
push
inc
push
fsubs
mov
pop
fdivrs
pusha
outsb
daa
mov
ds
mov
decl
mov
push
out
int3
cmpsb
xor
mov
cmp
mov
call
or
stos
push
cmpsb
add
xor
sub
cmp
cmp
ss
movsl
dec
mov
js
or
fincstp
inc
push
pop
ja
dec
cli
jg
cmpsb
mov
and
jo
jno
andl
notl
test
int
into
int
cmc
and
shlb
lods
xchg
aad
xchg
xor
xor
sarb
inc
imul
push
adc
pop
xchg
fwait
stos
cmpsb
sub
jbe
lcall
ja
jns
jmp
xchg
out
ret
mov
jns
popf
mov
mov
mov
gs
cmpsl
mov
inc
pushf
pop
push
push
push
outsb
pop
arpl
fsubp
test
pusha
arpl
imul
pop
sub
adc
int3
jne
xchg
outsb
push
push
mov
mov
push
fwait
pop
mov
jo
repz
push
lock
fcomps
push
cmpsb
sbb
and
ja
call
jns
jg
dec
add
xorl
mov
dec
adc
insb
ljmp
out
aad
sub
dec
and
pop
mov
sub
or
mov
sub
enter
cmp
lret
dec
xor
out
outsl
shlb
pop
and
insb
test
lea
mov
xchg
adc
mov
add
scas
jns
inc
sub
inc
push
xchg
ror
sbb
cmp
test
gs
pop
lock
xor
push
mov
scas
ljmp
xchg
add
push
cltd
imul
push
dec
pop
call
iret
sti
mov
mov
push
addr16
jmp
loopne
cmp
or
sub
enter
inc
add
mov
in
loope
orl
push
das
cli
dec
imulb
mov
stos
outsb
jno
xchg
rorb
and
out
dec
test
cs
sub
fdivrl
stos
and
clc
adc
enter
or
adc
loope
ljmp
inc
lds
push
or
mov
lcall
fwait
cmp
sbb
jle
jae
and
icebp
rorl
testb
lcall
aad
pushf
adc
test
push
xchg
xchg
test
sbb
adc
inc
gs
sub
cwtl
xor
cs
mov
fdiv
shrl
clc
hlt
aaa
cmc
or
test
mov
sub
fbld
repz
daa
outsb
pushf
adc
shlb
and
adc
pop
sti
test
outsl
insb
cwtl
stc
shlb
inc
bnd
shl
clc
mov
jns
add
and
cwtl
sbb
push
mov
nop
xchg
pop
xchg
ror
mov
mov
hlt
rcll
sbb
push
lods
in
rorb
and
loop
mov
out
mov
adc
push
pop
jno
addr16
sub
inc
subb
hlt
mov
cwtl
mov
sahf
aas
mov
dec
add
sbb
and
ljmp
inc
xor
mov
inc
add
and
mov
rclb
inc
pop
roll
cmpl
mov
insb
mov
je
and
sbb
out
scas
ss
clc
xchg
mov
pop
mov
mov
and
std
cmp
ret
xor
jl
mov
xor
xchg
push
stc
and
fldcw
pop
cmp
or
test
inc
mov
sub
inc
mov
mov
mov
cmp
xor
mov
jecxz
push
jge
inc
and
leave
hlt
sub
movsb
mov
xor
xchg
loope
fisttps
and
xor
mov
sub
iret
outsl
or
shr
xchg
push
xlat
ljmp
adc
loopne
icebp
loopne
inc
cmp
inc
mov
div
mov
lea
push
imull
into
aas
mov
mov
insl
insb
cmpb
fidivs
push
orl
fcomps
test
mov
dec
leave
mov
xchg
fs
imul
push
sub
es
jno
lcall
mov
lds
inc
out
pushf
or
push
inc
pop
in
in
into
dec
xchg
test
xchg
jae
kmovw
and
mov
jl
dec
xchg
arpl
cmp
fldl
incl
push
inc
lds
cmpl
cwtl
push
dec
sbb
xchg
pushl
mov
lock
mov
jmp
fwait
dec
push
push
cmovl
jns
iret
or
nop
lret
leave
and
xor
sti
sbb
mov
pop
pop
aad
sub
nop
les
test
stos
out
icebp
mov
jns
jbe
xchg
ljmp
pop
xchg
push
std
inc
filds
mov
adc
ss
mov
push
fdivrl
orb
jns
imul
xchg
push
mov
idivl
lods
add
jecxz
ss
js
fs
xor
mov
outsb
ficoms
and
icebp
call
lock
iret
dec
loope
sbb
lods
negl
add
shrl
mov
sub
scas
pop
dec
xchg
enter
mov
fucom
pushf
movsl
cmpsl
icebp
lret
ficomps
and
fimull
lds
add
call
and
inc
rcr
faddp
cmp
fcmovnu
mov
stos
cmp
pop
mov
cmc
out
int
inc
mov
fmull
and
pop
inc
cmp
or
inc
ret
in
inc
or
inc
pop
and
xlat
neg
test
jnp
jmp
div
add
push
popa
sbbb
mov
ss
dec
xor
cmp
data16
push
sar
in
dec
js
xchg
mov
aad
ss
or
imul
and
dec
push
ljmp
insb
pop
imul
insl
and
cld
adc
repz
and
sbb
lds
fiadds
dec
cmc
dec
lds
sbb
aad
fildl
int3
fsubrl
push
and
aad
jg
pop
push
jne
stc
incb
cmp
dec
push
sbb
and
xchg
shlb
lcall
lds
sahf
sbb
push
push
or
push
mov
stc
cmp
jmp
xchg
sti
testl
cmp
rcrl
pusha
mov
loope
sub
data16
inc
out
fiaddl
js
mov
lea
adc
movsl
sbb
aas
sub
mov
cwtl
pop
sub
sub
callw
push
or
xchg
arpl
and
pop
movsb
popf
fldl
into
and
repnz
or
fxch
das
stc
jno
inc
shll
in
mov
mov
xor
mov
jecxz
aam
and
add
ja
movsb
imul
mov
pop
aad
mov
addl
outsl
mov
mov
loopne
mov
popa
clc
xor
mov
lock
and
or
pop
call
xor
inc
scas
adc
and
lods
cs
jno
adc
sbb
imul
jnp
mov
loopne
aad
fnstcw
movsl
or
adc
and
adc
cmpsl
jnp
inc
xor
sbb
inc
adc
aad
lock
out
dec
xor
sbb
jmp
repnz
mov
or
ljmp
frstor
jae
xor
mov
inc
or
jge
cmp
and
out
mov
and
xor
imul
sub
dec
inc
incb
pop
pusha
gs
sbb
dec
adc
sbb
cmp
xlat
mov
dec
xlat
inc
xchg
js
jp
dec
cmp
pop
pushf
inc
lret
pop
push
pop
or
cmp
and
repz
jae
xor
and
fstpl
xchg
shrb
push
popf
xor
xlat
fidivrl
jl
ljmp
adc
scas
push
sbb
sbbb
cmpsb
xor
push
jge
adc
pop
call
xchg
cld
lea
ljmp
jne
loope,pn
ss
push
jo
xchg
shll
pop
lahf
mov
adc
iret
cwtl
push
adc
into
pop
push
or
loope
push
mov
add
call
jb
test
outsb
scas
repnz
inc
jmp
cmp
pop
insb
jno
sarb
cmp
dec
repnz
cmp
or
out
xor
daa
lea
cmp
push
jno
dec
ret
adc
jnp
add
insb
xchg
fwait
push
jmp
or
ds
push
sbb
pop
ljmp
bound
jmp
test
jg
xchg
mov
jo
pop
daa
jnp
and
xchg
stos
loop
pop
ljmp
and
fsts
fidivrl
cmpsb
enter
ret
sarb
notl
add
lcall
mov
lods
divl
sub
cmp
cltd
gs
sub
cltd
lcall
jp
stos
aam
dec
cli
push
ficoms
movsl
test
dec
sub
sbb
inc
mov
dec
jg
lock
xor
mov
les
aas
mov
xor
stos
push
ljmp
jb
or
pop
lcall
or
in
mov
add
add
adc
sbb
xchg
and
icebp
xorb
je
fldenv
push
push
insb
inc
or
mov
and
sbb
push
mov
mov
jnp
movb
cmp
mov
push
jmp
dec
std
xchg
xchg
fcmovbe
pop
stos
fcoms
cmp
loop
sbb
je
iret
lret
push
daa
adc
mov
mov
roll
xchg
mov
push
mov
popf
pop
lods
push
imul
cmp
push
pop
aad
and
icebp
mov
sub
add
sub
rcll
or
xchg
inc
pop
xlat
lock
nop
mov
pop
adc
xchg
xchg
sub
dec
pushf
scas
pop
or
sti
jl
xor
xor
cmpsl
daa
pop
mov
int3
arpl
gs
cs
lods
jl
faddl
jge
inc
push
sub
test
fs
jle
cmp
shlb
jge
dec
lock
arpl
in
mov
or
add
iret
hlt
data16
or
sbb
push
mov
popa
or
jl
add
push
and
rcll
xor
out
dec
lahf
mov
add
sub
jbe
dec
dec
jne
inc
dec
shlb
int
mov
scas
lahf
adc
xchg
out
shr
pop
clc
mov
or
inc
xchg
mov
movsl
call
cmp
mov
push
shll
inc
pop
adc
loop
movsb
sbb
clc
xorl
sar
and
adc
pop
adc
dec
jg
or
fucomip
nop
pop
inc
sub
mov
and
jle
mov
jmp
test
cmp
js
and
movsb
subl
pop
lds
push
orl
in
cli
fsts
movsl
xor
rcrb
pusha
lock
mov
shr
xchg
xor
cmp
xchg
loop
mov
adc
adc
cmpsl
adc
pop
pop
and
enter
mov
push
call
lcall
into
int
mov
in
mov
cmc
out
pop
scas
leave
stos
and
xlat
xor
pop
pop
out
jp
push
popa
das
sbb
jae
pop
addr16
dec
jne
cs
xor
add
addr16
in
push
ffreep
or
insl
stos
ret
mov
mov
xorb
iret
popf
dec
pop
fcoms
jmp
rcl
xchg
cmp
in
push
out
inc
scas
nopl
push
add
jo
icebp
iret
dec
xorl
cmp
pop
addr16
stc
xchg
push
lret
cmp
sti
inc
lods
push
push
lds
in
pop
push
rolb
cmp
insl
jns
mov
adc
inc
in
cmc
pop
mov
cmp
inc
pop
loope
jb
or
xchg
xchg
xor
inc
out
pop
pop
pusha
xchg
cmp
insl
push
xor
clc
adc
test
lret
stc
iret
mov
mov
pushf
xchg
adc
inc
xchg
inc
adc
xchg
add
xchg
aad
mov
scas
mov
push
imul
push
jp
push
and
fnstenv
xor
mov
jp
push
xor
cmc
clc
mov
push
or
cltd
mov
std
jp
test
std
sbbl
or
outsl
mov
mov
jecxz
popf
inc
push
clc
xchg
lods
ss
les
dec
xchg
test
test
psrlw
xchg
push
pop
andl
xchg
sbb
inc
lea
fs
add
movsb
and
imul
test
shrl
sub
pop
movb
pop
movsl
dec
pop
aad
push
cmpsb
pop
fdivrl
stos
xchg
jb
jmp
cmpsl
sbb
jb
push
cmp
lcall
stc
push
test
pop
xchg
cli
lret
inc
adc
leave
push
loopne
call
imul
movsb
or
pop
mov
sub
test
lahf
out
dec
mov
push
xorb
push
cmp
data16
hlt
lret
mov
dec
mov
out
cmp
mov
fwait
and
xor
jnp
cli
jl
dec
add
loopne
dec
mov
cmp
mov
int
push
lock
inc
push
add
loop
test
push
addr16
mov
jl
cmp
add
sahf
push
nop
pop
nop
scas
dec
cmpb
dec
lea
push
loopne
xchg
loop
dec
testb
clc
pop
addb
mov
leave
filds
mov
adc
sbb
lea
push
test
push
inc
adc
cmp
or
daa
dec
aas
or
rcrl
stos
xchg
mov
cmpsb
data16
jecxz
mov
push
cltd
inc
mov
sbb
and
das
xchg
shlb
sub
leave
or
mov
cltd
cs
xchg
jg
pop
inc
sbb
insb
lret
es
xchg
int
pop
add
cmp
cmc
repnz
int3
loope
int3
aad
add
jmp
ss
sbb
add
inc
pop
mulb
icebp
mov
mov
mov
mov
cmp
pop
jno
add
pop
cmp
imul
and
sbb
jmp
or
outsb
inc
inc
cltd
sbb
mov
adc
icebp
sahf
mov
lret
and
pminsw
fisubrs
add
xchg
cmp
loop
adc
dec
mov
add
jnp
add
cmp
push
pushaw
dec
sub
inc
mov
pop
jns
pop
mov
cmp
bnd
inc
aas
leave
stos
pop
add
out
pop
dec
adc
cmpsl
aam
call
push
push
mov
dec
sub
push
loope
sub
pop
lods
jmp
add
lea
push
mov
cmp
add
inc
sahf
push
pop
test
sbb
lock
ds
cli
pop
pop
shrb
in
les
adc
push
or
add
and
imulb
add
outsb
cmp
movsl
cwtl
xchg
mov
daa
jle
cmp
xor
cmp
cli
fistpll
arpl
sub
push
adc
mov
pop
cltd
ds
and
add
xchg
xchg
cmp
outsb
in
fisubl
mov
xor
sub
push
aas
mov
mov
add
cmp
std
pop
nop
stos
orb
cmpsl
add
popa
mov
lret
pop
adc
sub
pop
nop
popa
das
fidivs
shr
in
popf
fwait
or
ja
push
mov
push
push
es
in
in
out
or
mov
mov
or
inc
loopne
mov
or
adc
push
pop
inc
push
inc
push
add
pop
stos
movd
xor
fnsave
aas
loope
xor
cmc
sbb
int
jp
fsubrs
xchg
pusha
and
sub
test
cmp
mov
enter
pop
dec
pop
cmpsb
sbb
jne
adc
cmp
in
leave
jmp
gs
mov
mov
mov
adc
imulb
cmpsb
cmp
or
inc
loop
adc
out
aas
pusha
cmp
sbb
data16
push
inc
and
outsl
mov
lahf
and
pop
popf
icebp
and
cmp
pop
or
or
inc
pop
mov
xchg
jb
mov
inc
aas
mov
in
xor
sbb
cmp
and
clc
jae
outsl
cmp
adc
push
dec
mov
mull
std
push
vminps
bnd
aas
subb
mov
int3
or
pop
push
fidivrl
push
inc
ret
add
pop
das
jne
cmp
out
and
fidivrs
jns
mov
sbb
xor
rorl
mov
add
test
add
loopne
xchg
xchg
pop
inc
or
out
add
mov
jbe
iret
inc
lds
cmp
and
sbb
xchg
jno
shrl
cmpsb
adc
mov
leave
testb
cmp
popa
mov
in
es
movsb
jmp
movsb
inc
mov
in
mov
xchg
cwtd
push
pusha
sahf
mov
mov
mov
jnp
mov
cmpsl
xor
mov
mov
outsb
inc
lock
popf
mov
mov
rol
push
mov
sbbb
pop
cwtl
call
cld
xchg
repz
xor
stos
inc
inc
bound
test
out
push
cwtl
sbb
je
dec
sub
sti
es
cli
adc
jg
mov
addb
mov
lods
fs
sub
lea
dec
push
mov
xchg
pop
mov
mov
dec
or
dec
out
shl
addr16
push
bound
jmp
ret
fstps
jp
push
orl
mov
adc
lds
imulb
iret
xor
adc
cltd
xchg
xlat
scas
cmp
and
mov
xchg
cmp
push
insb
xchg
dec
jecxz
negb
stos
lcall
or
cmp
xcrypt-cfb
cmpsl
and
fsub
test
fstps
daa
xchg
sbb
fstp
add
jb
and
push
add
adc
stos
cwtl
in
jmp
adcb
mov
shlb
cs
loop
mov
and
aad
xchg
or
push
pop
nop
movsb
aam
fisttpll
loopne
or
jnp
ret
jbe
xchg
jle
inc
sub
add
sbb
jae
sbb
push
out
orb
ja
sbb
std
adc
jle
xor
fmuls
adc
sub
test
jns
js
mov
pop
pusha
pop
sti
out
sbb
imul
adc
js
das
push
fists
sbb
push
in
inc
stos
xchg
pop
xor
stc
into
xchg
rorb
sub
push
lcall
mov
ficomps
adc
fiadds
data16
out
ret
cli
dec
sbb
cmpsl
push
into
fcom
push
jns
xchg
jns
cmp
outsl
mov
daa
ficoml
aam
mov
mov
and
and
mov
mov
insl
andb
pop
rorl
cwtl
scas
or
cltd
mov
daa
insb
outsb
mov
scas
call
imul
dec
xlat
test
dec
stos
cli
mov
out
pop
push
xchg
xchg
testl
push
fisubs
je
xchg
movsb
mov
test
cmpl
mov
pop
pop
nop
jnp
stos
stc
xchg
clc
push
shll
and
push
mov
xlat
fbstp
push
adc
jmp
push
test
in
adc
push
push
aas
in
jecxz
lds
pushf
rcll
mov
jg
std
jae
ficomps
and
sbb
ja
mov
dec
sub
or
leave
mov
outsb
mov
rcrb
movsl
push
pop
cwtl
or
jo
and
jg
xor
jnp
and
push
pop
clc
cmpsb
push
mov
leave
cli
sub
or
sbb
stc
push
std
mov
jl
daa
lcall
add
adc
and
mov
jae
mov
push
inc
std
arpl
xchg
and
out
mov
or
dec
fwait
lods
jl
mull
mov
fadd
jns
xor
aad
adc
ljmp
push
pusha
inc
push
rorl
je
loope
out
lods
pusha
and
clc
insb
push
push
sub
mov
mov
push
pop
push
sbb
inc
loope
sahf
sub
xchg
cwtl
cmp
adc
out
sti
cmp
jle
imul
je
movsl
fwait
add
xor
stos
dec
movsl
aaa
cmpsb
repz
pop
inc
add
leave
pop
xor
mov
jae
jne
loopne
pop
ret
add
enter
je
les
add
mov
add
sub
mov
mov
inc
lahf
cmp
or
scas
out
aaa
daa
sbb
in
mov
dec
or
pushf
or
pop
sbb
std
pop
push
mov
fldenv
mov
add
faddl
xchg
fmuls
in
js
inc
adc
scas
lea
mov
cmpsl
add
mov
push
rdtsc
pop
fiadds
mov
data16
cmpsl
inc
fmuls
mov
pop
dec
inc
outsl
add
movl
add
testb
xor
pop
cmpb
cmpsl
inc
test
sub
and
xchg
xchg
sbb
rcl
cmp
push
pop
popf
jecxz
xchg
jae
or
std
mov
add
sbbl
mov
aas
pop
cmp
mov
hlt
push
jne
xchg
cmpsb
jb
scas
pop
mov
fnstcw
pop
fistps
xor
xchg
inc
in
adc
gs
jb
mov
out
dec
sbb
dec
cmpsl
enter
pusha
cs
jno
sti
jb
dec
cmpb
insb
or
and
cli
rorb
and
sahf
mov
cmp
pop
movl
in
cmc
sbb
popf
hlt
and
jae
fstpl
sbb
lods
data16
imul
repz
or
cmp
cld
inc
push
sbb
test
cmc
aas
dec
jo
clc
push
xchg
in
or
push
pop
loop
jae
and
sbb
xlat
mov
sbb
sbbl
sbb
das
sbb
int3
adc
jbe
add
ret
in
mov
pop
pop
leave
and
movsl
loope
push
out
movsb
lcall
jb
iret
xor
mov
xor
fwait
push
inc
mov
daa
popf
lock
adc
pop
in
xor
addr16
test
mov
cltd
mov
inc
xchg
movsl
mov
aam
sbb
incl
dec
inc
hlt
xorl
add
dec
lahf
mov
sbb
xchg
mov
xchg
lret
adc
out
lods
jmp
in
jl
ret
scas
rclb
sti
shll
in
out
fldcw
imul
bound
and
fucomp
mov
ljmp
addr16
cmp
push
and
xor
sbb
cmp
adc
xchg
aas
sbb
je
or
add
ss
add
mov
add
cmpxchg
nop
aad
out
jb
cltd
inc
inc
push
and
cli
lret
call
fwait
stos
mov
xor
loopne
and
dec
sub
fs
add
jecxz
cmp
xlat
shlb
and
inc
jmp
jns
aam
push
pop
jo
imul
pop
xchg
fcompl
adc
enter
sub
scas
xchg
mov
nop
sbb
adc
shll
aad
aad
jmp
insb
lods
mov
les
je
sbb
jne
lds
adc
rcrl
pop
pop
out
push
jle
mov
daa
push
inc
adc
jae
loope
bound
outsl
cmc
icebp
xor
mov
fdivrs
sbb
fimull
mov
sbb
push
lret
repnz
pop
pop
pop
pop
jp
imul
mov
pop
sub
xchg
jl
cs
push
mov
xchg
mov
and
loop
sbb
hlt
push
push
xchg
mov
push
and
or
ljmp
insb
cwtl
cmp
push
jge
mov
std
fstps
in
pop
push
loopne
inc
sbb
pop
bound
push
cld
popa
or
add
cli
sub
ret
lcall
cs
movsl
cli
or
sub
sub
push
mov
mov
adc
call
les
mov
jns
je
icebp
xchg
push
rol
sub
outsb
or
data16
pop
jmp
jecxz
add
bound
loop
or
xor
inc
mov
add
ja
sbb
pop
cwtl
outsl
inc
cmp
outsb
sbb
jb
push
xchg
pop
mov
xchg
adc
dec
pushf
lret
call
aas
js
arpl
dec
aas
nop
jl
sbb
fnstsw
cmpsl
mov
das
add
mov
adc
ret
cli
out
int3
xchg
mov
pop
jmp
rcrl
stc
and
ss
xlat
mov
xor
stos
adc
xlat
mov
je
push
daa
loopne
mov
fisubrl
or
out
pop
push
leave
dec
sub
push
outsb
jecxz
cmp
dec
aad
fcmovnu
mov
scas
push
sub
push
lds
pop
mov
and
psubd
ss
pushf
xor
sbb
mov
adc
int3
dec
ljmp
and
mov
mov
lahf
fistpll
lods
cs
aam
fldt
int
xchg
xchg
std
push
or
inc
add
pop
icebp
xchg
mov
mov
pmulhuw
enter
sbb
inc
mov
shlb
fstl
jbe
clc
sti
pop
xchg
xlat
inc
mov
dec
mov
mov
pop
ljmp
cli
cs
pushf
cwtl
cmp
pop
or
jne
lea
add
xchg
cmp
lret
pop
and
cmp
mov
sahf
pop
outsb
mov
sbb
test
or
push
inc
push
push
add
aas
cld
xchg
dec
inc
insb
test
shll
jno
ja
xor
std
aam
addr16
shlb
cmp
mov
add
test
adc
push
pop
adc
lcall
jp
and
mov
lock
out
pop
sahf
pushf
sub
fisttpll
insb
test
lods
xchg
xchg
adc
fists
lahf
inc
data16
add
or
out
push
dec
sub
and
xor
sbb
fnstsw
mov
ss
fdivl
icebp
mov
popa
fnstenv
shlb
inc
arpl
xchg
test
mov
mov
fsub
push
stos
sarl
fldenv
pop
insl
mov
mov
push
lret
jl
mov
jl
push
sub
or
sbb
popf
aam
or
int
jnp
dec
adc
xor
add
aad
mov
inc
pushf
cmc
lea
pop
cmpl
pop
xlat
orps
jne
push
loopne
daa
mov
xchg
ss
adc
sti
shrb
push
andl
sbb
lods
jno
into
dec
lahf
sets
and
mov
lret
or
cmp
fidivrs
mov
and
pop
faddp
jge
fdivrl
xor
int3
or
les
sbb
inc
mov
and
xor
divl
jmp
ficoml
mov
sbb
mov
mov
mov
pop
push
ljmp
xor
or
lea
add
mov
inc
add
out
cmpsl
testb
js
enter
movsl
jmp
lret
sar
shll
mov
arpl
mov
js
icebp
cltd
or
push
rolb
cmp
push
out
inc
imulb
and
mov
dec
sub
aam
repz
div
sbb
je
lcall
jno
mov
mov
orl
es
dec
or
sbb
sbb
and
sub
ret
xchg
sahf
ja
adc
stos
dec
jbe
sbb
test
lret
ja
int3
lock
call
add
mov
add
jge
cmp
add
jmp
sub
aad
int3
fnstcw
push
jo
repz
nop
pushf
incl
and
xor
add
fwait
into
and
push
mov
pop
inc
rcrb
jle
fstps
cmp
sub
inc
mov
clc
pushf
shrb
mov
jns
lret
add
sbb
jecxz
stos
fnstcw
push
mov
and
xlat
bound
adc
inc
test
mov
jae
and
pop
fadds
push
xchg
mov
das
sbb
ret
and
sub
xor
fistps
push
and
lret
cmp
je
inc
stos
mov
repnz
stos
lahf
arpl
add
mov
rcll
jecxz
lcall
cmp
mov
pop
in
fnsave
scas
inc
lods
push
sub
wrmsr
rcr
add
es
loopne
insb
pusha
fsubl
xor
xchg
jmp
xchg
test
jmp
sub
sbb
pop
adc
movsl
out
sub
dec
push
mov
sbb
inc
sub
repz
sbb
mov
sbb
out
out
sub
pop
or
jmp
sub
lods
loop
jno
loope
add
pop
sbb
scas
push
jo
arpl
fmuls
aaa
lea
xor
mov
xor
push
stos
and
jmp
std
push
inc
stc
sub
mov
xor
rcr
repnz
xor
pop
ja
data16
inc
or
push
jae
mov
out
or
mov
xchg
or
mov
or
mov
jmp
icebp
adc
lock
jb
fdivp
stc
roll
ja
jo
fsubl
sbb
push
pop
dec
insl
pop
sub
lds
aam
mov
mov
xlat
imul
adc
jns
sarb
and
sbbb
cmp
ffreep
test
ljmp
xchg
scas
ja
in
jl
mov
add
cmp
xorb
push
insb
stc
call
pop
fs
adc
iret
dec
add
stc
sub
das
in
repnz
fs
test
fiaddl
fisttpll
sub
mov
sbb
call
xor
pop
mov
adc
pop
fstpt
aaa
sbb
xchg
cmpsl
stos
in
in
sub
pop
mov
lods
add
imul
enter
dec
shll
jae
mov
xor
xchg
push
pop
cmp
or
shll
or
mov
mov
mov
in
sub
mov
loop
jg
cbtw
jns
push
daa
shl
push
jno
loope
pop
fwait
scas
mov
popf
xchg
xorb
mov
xor
mov
jb
nop
mov
addl
jae
rorl
cld
dec
lea
or
or
mov
shl
dec
clc
fwait
jnp
fmuls
mov
rcr
es
lret
xchg
adc
fdivl
test
loopne
lds
add
jne
pop
xor
loope
lea
fsts
outsb
enter
test
adc
sbb
cs
cli
sar
xor
jae
movsl
aaa
cmp
inc
adcl
add
push
inc
or
test
push
xchg
mov
mov
stc
dec
dec
xchg
stos
sub
and
testl
pop
das
sbbl
fdivl
add
push
stos
fldenv
push
subl
out
jae
dec
sahf
mov
in
or
adc
sub
sti
mov
roll
into
fwait
pop
out
pusha
add
lret
xor
adc
out
into
add
push
cmpsl
pop
int
popa
bound
mov
lcall
ds
dec
call
add
xor
jb
mov
loopne
push
dec
cld
std
xor
xchg
cs
ret
and
jp
int3
and
pop
pop
cmp
lds
popa
lcall
cs
or
lcall
lcall
roll
stc
sar
dec
imul
shlb
add
mov
mov
stos
pop
icebp
push
or
dec
enter
dec
cmp
mov
faddl
or
in
sbb
inc
pop
xlat
outsb
test
push
fcom
fmuls
sub
mov
mov
ret
gs
and
cmp
sbb
repz
lock
stc
jo
arpl
aad
xchg
outsl
cmp
ljmp
dec
dec
jmp
in
addb
jp
cmp
xor
shlb
std
sbb
pop
scas
inc
fstpt
sbb
test
popf
scas
test
push
pop
into
push
mov
test
cli
into
push
jge
lock
inc
sub
inc
and
jge
insb
andl
lcall
loopne
mov
mov
push
fistpl
pop
sbb
mov
out
mov
xchg
cwtl
xchg
push
fldl
inc
add
cmp
loopne
sti
and
lcall
xchg
mov
or
jp
shl
loope
mov
repnz
test
loop
arpl
adc
daa
rol
lret
inc
or
jae
popf
sub
imul
pop
mov
cmp
sbb
mov
jmp
stos
fstpl
lds
in
fs
mov
sub
shll
push
mov
testl
xor
jmp
or
arpl
sar
dec
out
mov
in
cltd
mov
negb
mov
scas
inc
decl
lret
sbb
out
jl
and
inc
cs
iret
iret
dec
pop
cmp
test
nop
push
jl
cltd
aaa
push
sbb
shlb
jg
cwtl
xor
sbb
add
inc
cmp
pop
fidivrl
shll
mov
test
stc
cmpsl
cmpsb
sub
sub
mov
dec
and
out
cmp
repnz
or
stc
push
in
divb
cmc
xor
xchg
cmp
out
add
mov
lret
std
mov
xchg
stc
fisttps
add
pop
xchg
sub
iret
mov
cld
mov
push
idiv
icebp
cmpsl
negb
jae
mov
inc
add
pop
or
loopne
xchg
mov
xchg
lret
aas
insb
into
shrl
insb
cld
mov
dec
das
cmp
push
test
push
push
cmp
xor
stos
pop
aam
dec
std
sbb
adc
call
inc
dec
aas
mov
cmp
and
daa
out
lahf
fildll
mov
call
push
jecxz
lcall
faddl
imul
into
sbb
sti
ret
aad
cmp
sub
shlb
stc
add
mov
xor
mov
mov
fnstcw
mov
xchg
test
jb
aad
lahf
dec
dec
mov
fisubrs
adc
pop
stos
loope
test
sbb
or
dec
push
and
movsl
std
out
aas
push
out
xor
js
pop
aam
push
aam
jae
mov
cmp
into
mov
inc
dec
pop
mov
lds
sub
xorl
dec
int
pop
jecxz
ja
cli
mov
stos
inc
mov
subl
out
sarb
sarl
jg
lret
lods
ja
fmull
or
jmp
xchg
sub
mov
aas
je
insb
or
xlat
fwait
jecxz
cmp
adc
mov
pop
inc
or
or
jae
jg
les
and
jb
cmpsl
sbb
sar
scas
xlat
nop
push
xchg
imul
fidivrs
xlat
jmp
sbb
push
inc
xchg
gs
add
loopne
fwait
loopne
fnstsw
in
mov
sub
jge
mov
inc
popf
in
xchg
dec
fiadds
sub
mov
insb
mov
icebp
push
leave
mov
leave
cwtl
lahf
xor
clc
in
adc
out
ja
aam
cmp
popf
sbb
and
lods
push
or
or
cmp
lea
or
adc
repz
or
mov
pusha
bound
call
std
ret
adc
adc
sbb
jecxz
mov
add
or
aad
mov
pop
xor
cs
into
ss
push
repnz
mov
or
icebp
and
dec
dec
or
outsb
jno
sti
inc
xchg
enter
stos
repz
imul
movsl
cmp
push
testb
sub
js
out
outsb
ret
movsb
out
shrb
jmp
aad
and
imul
jno
loope
mov
lret
mov
mov
mov
pop
push
sbb
lret
cmp
repz
pop
push
xchg
aam
cmp
divl
sbb
movsb
inc
add
pop
inc
iret
xchg
mov
and
sbb
inc
loopne
in
jns
rcrl
or
jbe,pt
xor
lods
mov
data16
in
movsb
mov
xor
lret
test
xchg
jp
cmp
add
daa
adc
mov
push
das
cmp
subl
movsl
in
pop
add
in
dec
in
test
sub
fdivl
jecxz
jle
mov
sbb
pusha
ja
in
pop
jno
rcrl
mov
push
push
dec
pusha
or
fwait
add
mov
test
sbb
push
sbb
lahf
sbb
sarb
mov
cs
aad
rorb
enter
das
adc
mov
adc
or
push
or
pop
jge
out
xchg
mov
mov
sub
pop
sahf
mov
hlt
mov
mov
std
or
popa
addb
mov
jge
test
dec
xor
bound
sarl
lods
push
dec
bound
movsb
leave
sub
cmpsb
sbb
popa
int3
push
rorb
and
pop
stos
jo
mov
outsl
xchg
xchg
movups
jg
dec
test
stos
das
adc
pop
jb
les
or
js
xchg
push
jbe
shrl
enter
fsubrl
sub
call
dec
cld
cltd
push
xchg
xor
out
aaa
mov
out
pop
dec
jb
cmpb
imul
xorb
mov
xlat
jb
shl
test
shlb
and
cmp
inc
mov
movsb
lret
or
or
loop
addr16
xorb
cli
sarl
xor
vcmppd
insl
movl
mov
mov
stos
add
add
pop
sbb
loope
test
xchg
mov
sbb
pusha
sbb
mov
imul
test
daa
lods
fwait
lcall
adc
scas
adc
add
fdivrl
mov
rcll
outsl
jns
jno
or
out
cmp
roll
pop
pop
add
xor
stos
jns
jns
lock
cmp
int3
in
mov
in
xchg
cltd
or
mov
ret
sub
xchg
in
xchg
gs
push
js
dec
ss
xor
es
jae
push
aad
mov
ds
mov
xor
rcrl
in
clc
das
clc
call
mov
inc
imul
adc
arpl
mov
pop
add
lahf
outsb
in
jno
pop
xchg
cmp
js
and
mov
sbb
sub
insl
mov
lret
iret
xchg
push
mov
imul
stos
sbb
mov
push
adc
icebp
in
jge
push
add
addr16
xor
stos
push
test
jmp
push
cli
mov
test
popa
pop
or
mov
sub
sub
pop
push
and
dec
cwtl
push
add
in
outsb
pusha
aad
stos
in
out
fnstcw
adc
leave
cli
inc
imul
xor
sti
mov
addb
nop
and
fwait
push
in
dec
fisttpl
insl
add
pop
lods
fcoml
lahf
je
inc
sbb
mov
or
movsb
fmulp
push
test
cwtl
stos
ror
out
into
add
fwait
adc
or
inc
js
scas
jbe
xchg
inc
sbb
fsts
stos
push
jnp
sti
mov
xchg
mov
mov
movsb
cltd
mov
and
stos
cmc
int
push
sub
sbb
fildl
jl
fwait
cli
arpl
cli
push
cmc
sub
mov
dec
fisubs
cmp
mov
mov
mov
mov
xor
cmp
push
js
jle
jge
xchg
fistl
xor
daa
fwait
pop
add
fs
push
bound
jmp
leave
jg
push
mov
pop
push
sub
push
pop
jae
loopne
jmp
adc
cmpb
dec
push
dec
lcall
jns
dec
in
and
cmp
ss
pop
mov
andb
add
jno
aas
mov
jno
push
dec
icebp
push
mov
aaa
inc
int3
sarl
jne
push
mov
lea
sub
loopne
test
out
add
cmp
addr16
cmp
pop
inc
mov
enter
inc
in
aam
into
jo
fstpl
cmp
pop
test
fisubs
xor
out
les
pop
adc
js
adc
addr16
enter
arpl
adc
aam
cld
xchg
aaa
ljmp
ja
daa
mov
or
xchg
ljmp
mov
orb
push
pop
or
insl
xor
cmp
sti
std
xchg
or
jns
cli
sti
call
fidivs
fsubs
stos
sahf
cltd
mov
pop
pop
pop
or
clc
jp
jle
or
in
dec
xorb
adc
shlb
jmp
xchg
dec
scas
fimuls
pop
roll
push
loopne
shll
lock
cs
mulb
xor
lahf
jmp
xor
cmp
adc
stos
fsubrl
pop
mov
neg
mov
cmp
lods
or
nop
xor
pop
aam
lcall
add
cmpb
scas
xor
subb
jl
dec
sbb
push
jo
fistpl
xor
dec
sahf
mov
in
xchg
mov
mov
mov
les
xchg
mov
jno
scas
inc
stos
cli
push
add
pop
inc
pop
mov
mov
pop
cmc
push
lods
insl
inc
repnz
push
or
pusha
cmp
dec
ret
test
xor
lods
sbb
rcl
outsb
das
inc
sbb
cmpsb
dec
pop
mov
xchg
loop
stos
stos
sub
pop
sub
cmpb
dec
jo
cmpsb
daa
jle
fsqrt
or
rcll
lds
jb
adc
or
inc
sub
xor
out
push
and
jmp
dec
xlat
pop
mov
mov
jge
loop
cvtps2pi
mov
clc
xor
imul
mov
pushf
ljmp
call
popl
ss
clc
int
mov
arpl
call
sub
test
and
xchg
psubb
out
mov
sub
mov
in
ss
inc
je
jge
fildll
pop
cs
pop
int
inc
push
push
das
std
jnp
jmp
jbe
insl
stc
rcr
push
xor
movb
pop
out
ds
pop
add
or
int3
fstl
ss
insl
lret
mov
adc
or
xchg
mov
lock
xchg
movsb
mov
outsl
sbb
cmc
add
pop
add
push
fnstenv
lods
and
pop
xlat
mov
adc
outsl
adc
jbe
sub
sahf
lods
dec
lds
idivw
leave
pushf
es
adc
js
stos
jne
cmp
jecxz
mov
sbb
popf
cltd
xor
push
add
pop
imul
ret
dec
xchg
push
insb
fiadds
dec
xchg
inc
pop
add
into
in
lea
add
nop
outsb
pop
dec
adc
insb
pop
stos
or
push
insb
or
sbb
jmp
dec
or
mov
fcmovnb
add
loopne
mov
int3
lods
inc
inc
sbb
lods
popa
inc
pop
or
lea
int
mov
aas
or
xchg
out
cmovae
dec
lcall
sti
mov
xor
xor
xchg
cmp
or
dec
test
add
int3
aas
push
dec
inc
scas
inc
sbb
cwtl
jmp
dec
pop
pop
mov
fisttps
arpl
pop
mov
les
xor
das
loopne
mov
inc
dec
fisubl
cmp
pop
add
mul
inc
rcl
nop
push
sarl
int3
in
rcl
inc
shlb
or
sbb
jae
scas
nop
mov
arpl
sub
cmp
dec
adc
jno
push
jge
pop
loopne
repnz
dec
data16
xor
or
leave
fidivrl
lahf
jae
andl
test
adc
inc
fucomip
cmp
xchg
cmp
imul
mov
lods
adc
xor
test
inc
or
jbe
stos
cwtl
push
mov
xchg
or
aas
jb
pop
repnz
ss
aas
sahf
faddp
inc
inc
lret
ficomps
outsb
dec
test
lret
pop
push
in
rorb
outsb
mov
pop
rorb
push
adc
push
xchg
in
js
pop
mov
aaa
mov
add
pop
xor
sub
and
mov
fnstenv
mov
fimull
mulps
dec
scas
sub
add
movzwl
sahf
pop
ret
mov
jp
and
push
push
aaa
js
dec
push
inc
pop
js
push
jle
addr16
test
and
ss
or
jae
int3
sub
jg
dec
out
push
lods
movsb
xchg
cld
fnstsw
push
xor
mov
add
loop
incb
fcomip
mov
mov
xlat
bound
subl
mov
xor
arpl
push
mov
pop
std
xchg
push
adc
repz
lahf
ds
dec
push
add
aam
sub
addr16
insb
push
aas
push
jmp
das
mov
adc
rorb
xlat
jmp
loope
add
sub
pop
lar
xor
fisttpll
in
adc
push
pop
aas
data16
subl
jbe
pusha
icebp
pop
sbb
push
xchg
clc
lods
lock
xor
and
fwait
in
pop
or
shl
jno
and
rol
and
or
lcall
daa
inc
sbb
mov
xchg
add
xor
jg
mov
jge
sub
push
pushf
sub
call
push
movsl
dec
fwait
dec
sub
mov
fstpt
gs
adc
jl
mov
or
mov
movb
inc
inc
lods
jp
pop
data16
lock
jae
push
test
or
popf
sub
inc
sarl
addl
or
negl
cltd
pop
jmp
loopne
andb
jne
subl
rclb
fmul
inc
rorl
cwtl
je
movsl
es
jns
lods
jbe
inc
jno
enter
dec
out
dec
fnstenv
xchg
mov
dec
cmp
je
xchg
sbb
stos
sub
das
adc
ds
cmp
sarb
jg
dec
mov
pushf
lea
test
jge
adc
aas
addb
testl
fs
vunpckhpd
test
pop
jge
or
repz
sub
repz
push
jns
jb
test
push
cmpxchg
mov
xor
aaa
mov
dec
gs
and
add
lret
and
xor
dec
pop
sub
popa
xor
iret
imul
mulb
mov
pop
inc
jo
test
idivl
cmp
iret
lds
in
inc
ljmp
bound
stos
xor
enter
inc
xor
mov
dec
in
imul
ss
decb
cld
pop
sbb
mov
push
shrl
in
cmp
and
rol
in
xchg
stos
pushf
test
jp
repz
pop
outsb
fstpl
rcll
call
mov
mov
xor
ljmp
sbb
push
mov
fisubrs
push
sbb
cmp
inc
fistl
push
movsb
aaa
in
sar
mov
dec
pop
jle
repz
das
add
out
inc
lahf
xchg
mov
ffreep
mov
jecxz
lea
idiv
pop
or
mov
stos
inc
jmp
adc
scas
or
imul
xchg
sub
pushw
push
imul
dec
adc
sub
hlt
adc
and
push
ret
gs
jge
mov
stos
ljmp
pop
sub
dec
hlt
ds
adc
dec
jecxz
inc
jno
pop
stos
adc
imul
xchg
popa
lcall
les
mov
xchg
idiv
adc
lock
jle
push
in
inc
out
insl
mov
fcmovnu
push
xlat
pop
xorl
or
and
repz
inc
xlat
dec
or
outsl
jecxz
inc
fs
sub
xchg
adc
pop
mov
call
xorl
ss
cmp
mov
jno
mov
subl
or
insl
xorb
xchg
mov
dec
jecxz
icebp
out
repnz
sbb
xchg
iret
sbb
pop
inc
jl
mov
jbe
sbb
xchg
insb
jp
and
enter
stos
sbb
xchg
xchg
adc
inc
jge
or
add
xor
pop
stos
jne
hlt
mov
jecxz
ds
imul
sahf
push
sbb
cmp
andl
lds
cltd
cmp
out
push
fwait
cwtl
or
mov
int
add
fists
mov
jge
xor
inc
and
inc
rcrl
sbb
mov
scas
adc
jle
unpckhps
add
push
mov
sbb
in
mov
mov
fisttpll
cmp
push
aas
and
nop
push
icebp
mov
adc
cmpsl
pop
js
clc
jmp
pcmpeqw
xchg
sub
call
popf
push
sub
mov
push
lahf
rcl
jbe
sbb
test
into
xchg
stc
clc
sti
jmp
jne
fistpll
aad
mov
fmul
jns
adc
movsb
outsb
or
push
or
mov
mov
shl
dec
daa
rcrb
sbb
push
xor
pushf
adc
or
aas
jbe
and
rcr
shlb
das
lock
sub
mov
aam
fdivs
push
xlat
popa
mov
mov
dec
mov
xor
cli
insb
pop
aad
xor
dec
xchg
jmp
push
inc
add
ljmp
insl
adc
scas
mov
fincstp
sbb
test
negl
ljmp
push
cmp
xor
jno
test
cmp
adc
mov
jae
jns
insl
sbb
pop
fnstcw
dec
mov
into
test
test
movsb
sub
inc
mov
pop
fsubs
mov
mov
dec
xor
test
adc
lock
xor
out
push
adc
ret
or
xor
fisubs
xchg
jge
ret
movsb
imul
fmull
mov
and
pop
and
inc
cltd
adc
test
repnz
mov
inc
and
pop
je
test
cmp
out
sbb
sbb
pop
icebp
cmpsb
cmc
movb
push
ss
push
and
xchg
cmp
movsl
add
jb
jns
movsl
je
jb
mov
xchg
daa
jle
mov
sub
insb
jnp
mov
cs
dec
pushl
pop
push
cmpsl
sub
fadd
xchg
jno
mov
cmp
stc
cmp
cmc
pusha
jns
pop
fstl
ljmp
inc
decl
xchg
cmp
or
pop
jg
cs
add
mov
int
lret
cmp
test
push
stos
cmp
cmp
pop
mov
add
daa
xchg
dec
aaa
mov
mov
jae
dec
insl
cmc
aad
lods
add
imul
popf
clc
jg
jge
in
sub
mov
cli
aaa
mov
popf
aaa
push
push
xor
push
addr16
add
dec
in
pop
mov
xchg
dec
add
sbb
adcl
mov
jp
inc
jmp
inc
jge
mov
inc
shlb
repnz
test
mov
mov
js
dec
mov
ljmp
sti
or
mov
dec
xor
in
xor
pusha
je
and
inc
push
push
pusha
mov
fnstenv
call
ss
inc
pop
out
in
push
xor
xchg
in
jno
aad
xchg
jg
in
push
xchg
aad
or
pop
psubw
shrb
mov
pusha
push
pop
pop
fidivl
mov
test
ficomps
enter
mov
ja
jne
pop
out
clc
std
jmp
test
clc
std
sub
xchg
or
xorb
or
inc
repz
xchg
std
in
gs
addr16
loope
mov
jns
into
lret
repz
cltd
mov
sbb
dec
jne
mov
aaa
mov
rcrb
aad
popl
jae
cmp
cmpl
xor
int
in
idivl
nop
addr16
push
outsl
mov
and
cmpsl
fdivrs
and
jl
jecxz
cmp
divps
mov
pop
xor
cmpsb
ljmpw
sti
cmp
pop
adc
xor
test
ds
nop
cmp
aad
mov
mov
enter
add
shrl
jecxz
mov
push
popa
ret
loope
and
test
push
xor
mov
pop
scas
add
mov
mov
outsl
or
cmp
jno
push
mov
mov
xor
test
mov
dec
mov
insb
std
xor
js
cwtl
leave
push
adcl
fcmovb
bound
add
dec
stc
aad
sbb
fistps
mov
adc
inc
inc
xchg
dec
sub
es
or
loop
outsl
clc
out
adc
stc
xchg
out
aaa
ljmp
or
jns
int
sub
cmp
fistpll
jge
enter
mov
sbb
mov
sub
ds
jecxz
stos
xchg
add
scas
xchg
sbb
sub
cmp
or
loop
jl
adc
jns
add
in
pop
cmc
mov
jbe
mov
jp
test
mov
loop
les
fs
lret
jecxz
into
cmp
cmp
cmp
pop
push
iret
jns
fsubr
fistpll
and
inc
xor
fndisi(8087
inc
leave
jg
xor
mov
sahf
cmp
cli
jle
lods
mov
ret
dec
loop
stc
mov
jns
pop
repnz
fwait
add
add
packsswb
sub
mov
mov
ljmp
ljmp
lcall
nop
add
sbbl
in
repnz
aaa
mov
loop
ss
into
jmp
sub
arpl
pop
mov
lods
mov
lods
lea
adc
inc
sbb
scas
arpl
daa
ds
mov
fnsave
xorl
das
stos
push
inc
cmp
or
loope
dec
xchg
push
adc
pusha
mov
cli
sub
add
sub
in
popa
dec
out
out
sub
leave
mov
jg
dec
mov
mov
or
adc
and
shrl
add
test
aad
jge
push
dec
mov
adc
xchg
xchg
or
andl
outsl
mov
sbb
dec
rorb
fistl
pop
jno
mov
jge
sub
push
adc
or
inc
lods
sub
inc
imul
enter
out
rolb
sub
scas
sub
pushf
xchg
sbb
loopne
in
jbe
outsl
adc
xchg
jae
sbb
cmpsb
jmp
dec
jns
mov
insb
xor
pop
pop
mov
arpl
xor
lcall
pop
mov
xchg
lea
leave
aas
pop
pop
scas
jl
lock
dec
mov
mov
pop
pop
inc
mov
test
cld
shlb
xorb
loop,pn
push
mov
jl
xchg
movsb
fstpt
pop
scas
arpl
fcoml
xchg
dec
push
movsb
nop
dec
jo
shlb
imul
out
jbe
xlat
pop
ss
es
mov
call
int
inc
and
dec
sub
cmp
sub
out
popf
pop
insb
leave
cmp
and
dec
push
mov
mov
loopne
lret
mov
lods
lret
inc
rcll
call
loopne
mov
add
xchg
pop
add
and
pop
push
or
leave
sub
push
punpckhdq
nop
mov
cmp
or
push
push
pushf
lret
movsb
out
mov
sbb
and
lods
int
in
lock
inc
sub
std
xchg
pop
pop
lret
mov
mov
xor
mov
inc
ljmp
andb
cmp
int
sub
rcll
fdivp
sbb
lret
in
push
fidivrl
mov
sbb
fs
add
shrb
pop
sbb
or
ret
pop
xor
xchg
jmp
xchg
loopne
ret
loopne
outsb
xchg
mov
add
jnp
orb
mov
fsubrs
mov
test
sub
sbb
adc
data16
cs
cmpsl
aas
pushf
push
inc
fnstcw
ja
and
ss
aas
xchg
mov
mov
and
loope
xchg
cld
push
add
mov
jp
stc
dec
adc
je
in
in
inc
push
sub
sbb
std
imul
pop
lahf
jecxz
mov
cmp
inc
cmp
scas
movsl
bound
mov
xchg
xlat
enter
mov
and
and
std
leave
lds
xchg
xor
mov
jnp
push
xchg
addr16
pop
push
pusha
cltd
cltd
loopne
or
push
icebp
loop
cmp
aas
or
cmpsb
insl
and
pop
sbb
pop
sahf
xchg
gs
xor
mov
dec
xchg
jb
or
xlat
das
syscall
movsl
sub
mov
leave
pusha
cmpsl
fcmovnb
jo
mov
js
add
jle
xchg
cmpsb
xchg
pop
jge
mov
mov
scas
inc
rclb
movsl
xchg
jns
arpl
sub
or
pop
pop
add
push
push
cmp
ret
je
je
and
sub
out
push
xor
xchg
jbe
cmp
pop
rcrl
xchg
xor
js
or
cmp
xchg
or
cmpsb
sarl
xchg
out
cmpsl
ror
xchg
lret
inc
orl
lock
in
push
iret
or
xorl
add
adc
js
dec
jbe
cmpsb
xchg
iret
pop
int
jmp
lea
sub
xor
inc
cmp
outsl
push
cmp
pop
inc
mov
xorl
push
and
and
fcomps
lea
fstl
aaa
aam
imul
fadds
adc
push
ds
adc
sti
inc
sbbb
negb
dec
pop
push
cmp
sbb
fldt
adc
rcrl
lds
orl
xchg
shrb
ja
adc
add
and
mov
pop
mov
shrl
push
imul
add
jp
push
mov
push
insb
xchg
stos
rclb
add
mov
jge
es
ficomps
adc
xchg
add
pop
sbb
jb
outsl
adc
dec
or
lret
lods
mov
adc
jge
imul
lds
mov
sti
add
or
cld
dec
cmp
lret
lds
rolb
cmp
dec
adc
ret
sbb
mov
scas
inc
fisttpl
pop
fwait
outsb
push
mov
jp
xor
xchg
inc
into
cltd
fdivrl
add
xlat
pop
imul
cli
addr16
arpl
dec
negl
xchg
ret
bound
lds
push
dec
mov
vprotw
imul
lods
scas
push
mov
cmp
scas
test
out
inc
lods
mov
mov
lods
xchg
inc
cmp
push
mov
pop
fwait
lahf
outsl
fsubrs
dec
xor
lret
movsb
xchg
popf
mov
mov
lock
clc
xchg
es
lods
ffreep
clc
mov
xchg
je
insl
bound
popf
mov
andb
outsl
das
add
stos
mov
cld
xchg
aas
jg
jo
mov
cli
movl
mov
sti
pop
push
int3
ja
add
sbb
add
or
cld
xchg
mov
fadds
mov
dec
mov
xchg
add
jmp
jno
pop
stos
inc
sub
mov
mov
adc
popf
test
movsl
insb
cli
xlat
xchg
add
aaa
dec
lock
cmp
xor
ds
cmp
clc
inc
cmp
sub
call
fstp
call
sbb
movsl
lahf
lock
xor
lods
and
cmp
incb
dec
lock
push
insb
pop
ret
insl
add
int3
into
jbe
jmp
imul
add
jnp
add
sbb
ret
mov
mov
jl
push
cli
in
sbb
addr16
jbe
leave
xor
mov
mov
cltd
decl
jnp
push
cmp
mov
leave
insl
lods
push
dec
mov
sbb
js
pop
push
xor
or
sbb
and
jb
call
fisttpll
sti
sti
push
add
sbb
repnz
addr16
pop
rcrl
into
sub
les
dec
out
sbb
ss
mov
arpl
mov
nop
pop
daa
lret
imul
aaa
xchg
scas
push
mov
push
addl
pop
out
in
jmp
test
jg
inc
jle
popf
sub
lds
idiv
xor
mov
xlat
mov
xor
mov
pop
mov
in
fnstsw
ja
data16
inc
cmp
addb
cmc
push
in
jecxz
popf
movsl
rclb
sbb
movsb
roll
jbe
incb
daa
adc
test
mov
mov
lock
jg
in
and
ss
push
inc
jae
fwait
cs
rolb
inc
dec
fs
dec
cltd
mov
mov
xor
pushf
jle
scas
pop
push
in
hlt
lods
fiaddl
in
imul
je
sbb
add
leave
pop
push
dec
cmpsl
xor
hlt
insb
mov
sarb
stos
mov
mov
and
xor
push
lahf
fimuls
add
inc
popl
mov
ret
mov
add
or
dec
sbb
mov
outsl
jo
in
mov
bound
mov
xchg
imul
inc
mov
nop
cs
xor
sbb
cs
dec
fists
scas
mov
mov
out
sub
test
push
cmpsl
scas
decb
push
fsubrs
mov
jo
push
movsb
adc
mov
xchg
cmp
lcall
ret
xchg
push
add
lea
cs
fcoms
pop
mov
vprotd
mov
cld
or
sarb
and
insb
xor
dec
push
push
in
out
push
fsubs
push
lahf
mov
cwtl
pop
mov
arpl
mov
cmp
mov
les
mov
xchg
movsl
hlt
push
inc
das
enter
scas
inc
dec
mov
xor
fidivs
sahf
xor
xor
lock
sti
clc
lret
add
cld
pop
xor
outsb
xchg
pop
sub
retw
dec
nop
cwtl
sub
mov
mov
movsl
xchg
popa
xchg
int
stc
jae
decb
fsubrl
std
popf
out
dec
or
or
jmp
sub
inc
and
subl
jge
sti
std
add
or
xchg
imul
sahf
xchg
pop
out
xor
jo
cwtl
fcmovbe
movsl
outsl
frstor
inc
in
shlb
lods
sbb
sub
clc
loope
fimull
sub
and
dec
or
mov
ds
movsb
cmp
mov
and
mov
in
addr16
ret
imul
incl
mov
sbb
jo
imul
shrd
inc
xor
pop
lds
insl
dec
popf
inc
fdivrs
sub
cmp
imul
push
std
sub
push
push
push
sub
cmpsb
psllq
ja
add
and
cmp
push
xorb
xor
lar
pop
nop
rcrb
popa
rcr
mov
das
int3
movsl
cmc
testl
mov
test
pushf
in
push
loop
mov
lods
sbb
loop
out
sub
dec
xchg
stos
pop
aas
lock
ret
jg
gs
push
and
mov
rcrb
mov
loope
mov
sti
and
jae
fmull
outsl
jns
inc
inc
mulb
xchg
cmp
fs
and
pushf
popl
push
adc
mov
lock
push
mov
shll
cltd
adc
fs
cwtl
fldl2e
add
lods
lods
popa
repnz
bound
inc
pop
jl
into
rol
js
aad
push
or
inc
jns
sub
pop
arpl
mov
loopne
xchg
xchg
idivb
and
mov
test
jge
inc
ja
mov
mov
jnp
push
and
mov
cld
jbe
divl
outsb
sbb
test
push
or
gs
pop
iret
mov
mov
das
xchg
pop
jecxz
incb
xor
sbb
adc
xor
fsts
cmp
inc
mov
push
sbb
pop
test
or
push
jge
xor
push
jne
scas
sub
fwait
lods
lcall
mov
xor
add
jecxz
es
les
pop
lret
das
inc
nop
sbb
aam
outsl
sahf
lds
pop
mov
mov
mov
fiadds
or
scas
insl
popf
push
mov
sbb
push
mov
mov
jmp
loopne
movl
loopne
or
in
lods
xchg
push
inc
adc
push
int3
xchg
jge
pop
js
nop
sti
sub
jb
ja
rcr
mov
movzbl
movsl
rorl
mov
mov
inc
aas
jae
xlat
in
shlb
call
movsb
filds
xor
dec
mov
das
pop
and
or
cwtl
icebp
fs
sub
outsb
ret
out
or
xchg
push
subb
jmp
shll
jbe
lds
adc
insl
cmpl
cmp
repz
add
add
leave
rol
xor
add
push
into
movsl
iret
dec
stc
and
fdivs
sub
in
push
push
sbb
lock
xchg
push
sub
shl
or
cmp
cmp
xchg
test
jns
xchg
inc
mov
and
sti
mov
xchg
mov
sub
das
push
cmp
mov
stc
movsb
out
lea
mov
rcrb
mov
mov
mov
push
int
adc
mov
push
std
jg
inc
psubb
push
pop
ja
outsb
xchg
leave
mov
mov
imul
xor
mov
scas
in
and
xor
fcom
adc
stos
popa
mov
fstps
jno
popf
jae
mov
std
mov
bound
push
add
mov
mov
add
sahf
mov
xor
rorl
sub
and
iret
sbb
lahf
popf
xchg
mov
div
mov
arpl
adc
enter
mov
dec
xchg
push
push
xorl
add
mov
icebp
shlb
or
cmpsb
es
cmp
sbb
imul
cmp
ja
pop
sub
jg
cltd
adc
sbb
movsb
and
aas
ficoml
cmp
nop
nop
int
xor
pop
inc
enter
fwait
pextrw
mov
or
xor
mov
out
loopne
sub
dec
scas
bound
mov
inc
loop
std
pop
or
cmc
dec
test
mov
daa
sub
add
mov
std
mov
or
jge
das
mov
bound
aas
jp
and
sti
test
fcmovb
pop
ja
fstpt
cmp
mov
lock
in
lods
inc
iret
int3
mov
dec
movsl
lock
pop
jbe
addr16
cld
mov
movsl
push
adc
addr16
xor
dec
add
dec
or
push
jo
mov
lret
fisubs
or
sub
add
mov
sti
in
cmp
mov
jmp
cmc
ss
mov
fcomps
lret
cs
mov
lret
fisttpll
jp
mov
lock
mov
out
cli
out
xchg
pop
mov
movsl
jecxz
mov
iret
jns
add
les
lret
inc
lret
xchg
sub
aas
dec
inc
js
inc
f2xm1
jns
out
loop
das
or
dec
lret
lret
inc
pop
in
or
es
cmp
iret
sbb
xor
mov
dec
xor
fidivs
pop
push
mov
mov
lea
std
and
cmp
and
pop
or
sar
push
ficompl
jl
in
sub
jne
aas
jnp
push
jo
jp
sbb
cmc
mov
and
jnp
jp
ja
add
in
sarb
lock
mov
sbb
mov
lcall
inc
out
out
push
sub
cmp
lret
mov
inc
test
jge
sbb
xchg
mov
adcl
cmpsl
pusha
ret
adc
in
pop
and
scas
jmp
imul
or
mov
aaa
aam
daa
insb
pop
xchg
push
ja
inc
mov
push
cs
int3
mov
lock
ficoms
in
push
sbb
cmp
sbb
xlat
gs
xchg
sub
aaa
or
add
mov
movsl
jle
pop
xorl
xor
jg
push
or
inc
movb
roll
dec
mov
aad
pusha
lea
adc
js
jle
ds
lahf
sub
cmp
insb
ret
popf
fwait
mov
fcomip
mov
cmp
cld
loop
out
cmp
jne
mov
inc
push
lods
out
leave
pop
xchg
inc
push
shlb
xchg
sbb
adc
sbb
sub
or
cmp
mov
xor
imul
js
insb
xchg
jns
push
mov
jbe
mov
cmp
push
adc
cmp
sahf
sbb
jbe
ja
and
sub
cli
push
pushl
out
xchg
xchg
jp
dec
xorl
inc
out
inc
dec
mov
push
fistl
shrl
scas
fldcw
mov
push
inc
mov
and
hlt
pop
ret
sbb
jbe
sbb
mov
stc
stos
out
gs
clc
inc
or
sti
mov
incb
or
mov
mov
sub
inc
pop
aad
sub
sub
in
and
cs
je,pn
test
addr16
sub
int3
sbb
inc
sub
xor
movsl
repz
sbb
sbb
repz
add
pop
jo
push
popa
inc
mov
add
cmc
repnz
fnstsw
lretw
in
and
arpl
push
cmp
enter
push
mov
mov
push
mov
ss
out
cwtl
in
pop
ss
push
ficomps
push
sub
cmpb
dec
pop
xchg
sbb
xorl
lret
inc
arpl
mov
mov
stc
scas
shr
xor
test
or
movsb
dec
mov
or
xchg
divl
or
in
aaa
es
ss
mov
cmp
adc
dec
add
jns
sbb
add
mov
aad
jmp
and
xchg
cmp
push
xchg
push
jae
xchg
stos
es
mov
jne
mov
jmp
adc
jbe
imul
pop
sahf
rolb
dec
in
inc
adc
movsb
pushf
push
pop
test
and
cmp
pop
xchg
xlat
fdivrl
push
inc
fildl
shlb
js
push
jmp
cmp
lods
std
cli
and
cmc
out
cmpsb
mov
cltd
mov
cmp
jp
add
xchg
mov
rclb
js
sarl
inc
cmp
repnz
je
sbb
pop
and
jmp
out
pop
cmp
aaa
xchg
mov
sahf
addb
push
mov
pop
mov
pop
daa
push
xchg
adc
test
push
mov
addl
decb
cmp
fs
movl
xor
mov
push
scas
jg
out
cmpsb
js
enter
dec
and
dec
mov
ljmp
and
in
repnz
ss
dec
xchg
mov
mov
repnz
movlps
rcr
cmpsl
test
sub
movsb
movsl
shll
iret
rorl
les
enter
and
xor
sub
pushf
insl
loope
cld
insb
adc
inc
and
jmp
in
push
ret
xchg
sbb
add
dec
ss
cmp
in
sub
mov
jge
mov
das
out
add
xchg
jo
jne
inc
test
rcrl
xchg
test
sub
frstor
out
and
iret
mov
lea
sar
cmp
lods
pop
or
orl
or
int
and
push
sbb
sti
add
sub
sub
ss
sub
xor
jbe
cmp
out
out
mov
jp
or
ret
xor
or
mov
mov
jl
jns
dec
imul
push
adc
cwtl
jmp
sub
xor
pop
lcall
or
lcall
mov
test
call
sbb
pop
xchg
enter
cli
imul
stos
push
fwait
push
clc
jp
mov
aam
cltd
mov
inc
not
cmp
pop
dec
icebp
xchg
sbb
push
lods
nop
jl
pushf
outsb
je
rolb
pop
sbb
add
and
out
sbb
mov
in
lret
aad
mov
stc
cmpsb
mov
shll
jae
icebp
push
popf
in
mov
push
sub
inc
stc
shl
sub
pop
cmp
pop
adc
inc
leave
jecxz
jae
xor
push
ret
test
popl
mov
xor
add
pushl
enter
xor
insb
aaa
mov
mov
repnz
loopne
jo
iret
in
mov
inc
xchg
push
popa
lock
sbb
jle
pop
shl
in
and
aas
rcll
fsubl
jecxz
or
dec
lcall
orl
xor
sbb
push
jle
jmp
pop
lahf
and
in
and
jl
add
int3
adc
xor
sub
push
jne
or
mov
dec
inc
sub
icebp
push
xlat
jb
mov
inc
stos
scas
shll
jmp
mov
and
in
mov
xor
adc
test
pop
popa
mov
mov
mov
dec
add
add
pusha
xchg
adc
jle
mov
mov
icebp
aad
inc
popa
jbe
dec
mov
orb
jns
sbb
cld
xchg
push
push
mov
nop
mov
dec
sbb
xchg
jns
div
stos
mov
fs
scas
in
bnd
stos
sarl
stos
push
ja
aad
outsl
mov
repnz
cli
add
dec
fisubrs
imul
out
mov
mov
iret
lgs
adc
in
sbb
daa
sub
add
sbb
jmp
sub
test
xor
xchg
push
adc
xorl
mov
shr
stc
scas
jg
sub
push
int3
mov
pop
or
movsb
rol
pusha
std
mov
sub
mov
push
fsubl
pop
push
ds
mov
cmpsb
pop
mov
jecxz
lea
add
or
repz
dec
mov
cmc
dec
xor
dec
mov
xchg
lock
mov
fwait
shl
jle
push
xor
cwtl
push
sub
mov
ljmp
inc
and
outsl
adc
xlat
test
out
pop
hlt
sbbl
ret
shld
lret
inc
out
mov
push
cmpsb
mov
xchg
pop
mov
sub
pop
fucomip
fnsave
rorl
rcrl
jecxz
push
int3
push
mov
rcrl
stos
sub
outsl
cs
mov
push
mov
sbb
loope
outsb
js
mov
insw
or
cwtl
mov
xchg
mov
out
shlb
dec
push
insb
in
sbb
inc
scas
insb
cs
inc
insl
jnp
repz
sbb
push
lods
xor
sbbl
cmp
mov
sbbb
add
or
mov
outsb
dec
dec
inc
leave
and
mov
gs
out
test
cmc
xor
and
ret
mov
aaa
dec
imul
lcall
mov
repz
popa
lds
mov
push
iret
imul
mov
fcoms
xchg
scas
mov
cli
iret
shrb
pop
push
pop
sub
add
cmpsb
jb
adc
pop
push
fcompl
jae
hlt
mov
int
cmp
push
push
rcrb
push
clc
lock
mov
sbb
cwtl
cltd
repnz
xlat
jg
aaa
mov
push
icebp
and
xorb
xchg
inc
testl
jno
xchg
imul
stos
idivb
fisttps
sbb
in
ds
insb
mov
cmpsb
out
jo
mov
xor
out
pop
mov
mov
test
push
xor
adc
push
mov
mov
sbb
aam
rcl
loope
fstps
mov
cmp
test
push
lea
sub
or
fiadds
rorl
add
out
js
jg
insb
fcomp
jb
orl
pop
repnz
inc
fistpl
xchg
pop
dec
gs
cltd
dec
cmp
or
or
add
jne
push
lret
jle
icebp
sahf
jno
mov
push
ret
jecxz
mov
mov
mov
fistps
mov
pop
mov
cmpsl
fimull
or
pusha
sub
icebp
ficoml
or
pop
stc
fidivrs
imul
stos
dec
lods
cmp
mov
pop
mov
js
repnz
xchg
movsl
pop
or
iret
lahf
ret
jb
or
inc
pushf
repnz
idivl
je
fisubl
in
jmp
movsl
aad
fistps
subb
inc
inc
inc
shll
fdivrs
sub
scas
jns
negb
inc
imull
push
sbb
xchg
sub
data16
sbbb
js
fdivrl
xchg
and
add
cmp
out
je
xor
adc
jo
int
pop
mov
mov
fstps
pop
cltd
pop
fs
mov
xor
cs
jo
xor
gs
xchg
dec
popf
adc
push
inc
in
add
sbb
gs
xchg
imul
dec
sbb
jb
mov
test
or
sbb
xchg
ljmp
loope
out
push
out
lock
dec
jbe
shl
sbb
push
xchg
arpl
mov
pop
imul
cwtl
mov
ss
push
xor
jb
add
push
cmpsl
pop
cld
bound
movsb
add
xchg
stc
mov
xor
inc
aaa
fmuls
jmp
test
xor
xor
or
pop
mov
ds
out
negl
jmp
mov
push
jp
adc
cmp
stos
mov
bound
inc
cmpsl
orb
jb
xchg
cmp
inc
jg
repnz
sub
pop
mov
xorb
cmp
or
imul
mov
pusha
nop
xchg
mov
mov
xchg
test
out
sub
leave
jae
jb
mov
outsl
add
add
mov
push
out
outsl
lcall
ja
sbb
xchg
xor
movsl
xor
sbb
into
pop
lock
push
and
jg
imul
icebp
mov
xchg
test
jmp
ljmp
mov
sbb
push
xchg
lea
pop
popf
push
jbe
subl
and
test
pop
cs
add
xor
xor
cmp
loopne
xor
adc
sbb
ret
in
pop
fimull
inc
fnstcw
in
pop
pop
fstps
test
push
aas
shrb
dec
lcall
mov
sub
hlt
ss
pusha
bound
and
lods
mov
loop
pop
push
fidivrl
xchg
imul
lock
jp
mov
dec
dec
jl
popf
xor
cmpsl
std
mov
aas
scas
xor
cmp
xchg
into
add
popa
roll
mov
adc
xchg
test
push
clc
add
nop
dec
sub
rcll
mov
imul
mov
cld
push
push
fs
pop
stos
adc
test
cmpsb
mov
sbb
push
fisubrl
and
idivl
je
maskmovq
negl
xchg
pop
or
divb
push
insb
xor
and
dec
pop
pop
fldt
idivb
fs
gs
das
out
push
inc
sbb
push
xchg
loope
call
jbe
mov
mov
xchg
mov
pop
push
pop
addl
sub
loop
int3
jno
sub
aaa
popa
rorb
mov
fcompl
adc
xchg
out
xor
push
loopne
sbb
mov
jge
div
mov
sbb
fcompl
inc
movups
in
rcll
sbb
dec
xchg
sub
xchg
mov
sbb
sub
int3
mov
cli
mov
jmp
push
fwait
mov
inc
daa
punpckhwd
or
ds
pop
scas
xchg
test
jecxz
popf
xor
jmp
dec
push
push
dec
xchg
loop
inc
add
popf
cs
insb
jge
jnp
les
int
mov
aam
iret
inc
push
mov
xor
ret
push
cmp
std
and
bound
and
xchg
ret
gs
in
movsl
cmp
pop
xchg
stos
das
mov
cwtl
jmp
or
outsb
mov
cmp
sbb
jbe
cmc
fstpl
in
pop
mov
lods
cmc
lds
sbb
mov
imul
loop
cwtl
stos
out
fadds
call
popa
dec
xchg
mov
mov
adc
pop
push
ss
notl
add
mov
xchg
cmp
scas
pop
pop
inc
stc
inc
stos
rorl
xor
xor
sub
daa
mov
mov
mov
sbb
std
inc
or
mov
movmskps
popa
push
mov
pushf
lods
xorl
push
incl
pop
sti
pop
xchg
cmp
icebp
insl
clc
push
mov
xchg
fimuls
push
mov
rolb
mov
fistpll
pop
rcr
jle
mov
aas
mov
leave
movsl
lods
fldenv
adc
jl
pop
lods
xchg
mov
and
test
vandps
out
jo
out
xchg
in
xchg
out
lret
xchg
mov
sbb
sahf
jmp
cmp
xchg
ljmp
mov
add
mov
lret
pop
add
nop
sub
ret
out
dec
push
bound
imul
cmc
adc
jo
loopne
test
jo
sbb
nop
mov
mov
inc
xor
popa
lret
mov
aaa
imul
je
mov
pop
sub
pop
mov
movsb
popf
mov
dec
dec
push
scas
cmp
inc
mov
rcrb
push
dec
push
pop
decb
fnstcw
in
xchg
jmp
xchg
pop
jae
inc
dec
jns
pop
pop
mov
push
or
push
mov
dec
scas
fists
mov
jl
jb
out
or
fwait
lock
or
sbb
sub
jl
mov
outsl
adc
ja
and
pusha
iret
pop
sub
push
mov
lret
add
pusha
imul
enter
andl
test
aas
xchg
mov
jmp
outsb
xchg
and
scas
stos
mov
sbbb
inc
or
popf
dec
dec
or
repnz
xor
jp
jns
lcall
jge
adc
push
push
pop
xor
add
push
scas
xor
xchg
inc
inc
jp
dec
inc
and
cwtl
std
cmpsl
dec
cli
pop
sbb
jp
loop
xor
pop
mov
iret
sbb
xor
les
mov
aaa
jg
lds
and
lock
jns
call
stos
pop
test
daa
stos
in
js
inc
test
in
push
cld
mov
mov
lds
adc
ss
clc
inc
sbb
out
sub
mov
lds
daa
xor
scas
in
mov
pusha
fwait
jp
jmp
ljmp
pop
push
push
dec
xlat
in
lds
push
xor
test
dec
data16
cltd
rcrb
pop
cwtl
cmpsb
fwait
inc
je
and
pop
jne
xchg
mov
daa
sbb
xor
cmp
pop
shrb
sbb
clc
shl
int
into
stos
xor
je
sbb
or
mov
or
fcmovnb
shll
outsl
imul
cmp
pop
insb
lods
pop
leave
inc
xchg
push
fistl
data16
mov
lock
mov
std
xlat
js
push
sbbb
pop
out
dec
imul
mov
adc
add
jnp
sub
dec
and
test
in
push
inc
and
or
popf
cwtl
xchg
addl
fldt
pop
ja
leave
sahf
leave
sets
fnstcw
arpl
bound
ffreep
xchg
movl
enter
xor
cli
out
push
divb
int3
jnp
mov
outsl
ljmp
js
in
inc
into
or
cmp
les
sahf
or
fnstsw
stos
xorl
cmpb
lods
mov
mov
pop
ret
push
leave
mov
mov
xchg
sbb
xchg
mov
fdivrl
rcl
ja
inc
test
dec
repnz
fisubl
arpl
aad
test
lahf
hlt
outsb
mov
push
fidivrl
fstps
movsb
cmpsb
dec
jle
fucom
dec
pop
dec
inc
rorb
and
ja
out
dec
xor
sbb
and
mov
daa
xor
std
repnz
xchg
loope
clc
faddl
stos
push
jne
push
xchg
pushf
or
jne
les
jmp
aam
test
sub
lods
mov
inc
aad
sarl
mov
jno
adc
pop
cltd
xchg
xchg
push
aad
lcall
mov
call
out
jmp
adc
fs
dec
mov
jmp
push
fmuls
pushf
jle
xor
pushf
sti
in
sti
add
fdivrl
loopne
cmp
add
xorb
leave
test
inc
ss
push
jl
cmpsb
lret
xor
leave
sahf
rsqrtps
scas
outsb
loope
enter
repz
jnp
pop
jb
in
mov
mov
xchg
pushf
xlat
lret
and
adc
add
mov
in
mov
lds
mov
ss
aad
dec
out
add
and
aad
loopne
jmp
adc
enter
arpl
adc
popa
subl
xchg
push
loope
cld
cmpsl
loop
and
or
sub
pop
scas
cmp
xchg
je
adc
mov
leave
cmp
imul
jo
xor
lcall
popa
xchg
out
or
fbld
rorb
pop
or
aam
dec
aas
pop
mov
mov
push
pop
popf
sti
addb
pop
inc
pop
sbb
lcall
in
jg
add
mov
sub
arpl
lds
push
cmp
mov
xchg
mov
jnp
inc
xchg
dec
leave
fwait
out
fcmovnb
jl
sahf
pop
sub
cmpsl
xchg
out
xchg
lods
xchg
dec
mov
xor
fidivl
ds
xchg
scas
xor
test
inc
push
push
push
mov
add
addr16
repz
pusha
jge
or
sub
pop
pop
xchg
xor
ss
in
pop
sbb
cmp
addr16
lods
les
dec
mov
cwtl
std
scas
pop
cmp
mov
sahf
mov
push
or
loope
fmuls
push
daa
movsl
fnstenv
loopne
adc
arpl
popf
out
xchg
mov
cmp
mov
or
inc
mov
in
dec
mov
jmp
lea
mov
jg
arpl
sti
dec
dec
push
pop
je
xchg
daa
adc
imul
daa
inc
mov
add
jge
cmp
cwtl
adc
inc
lahf
nop
fmulp
adc
and
xor
adc
xchg
and
and
adc
cwtl
addr16
xor
mov
pushf
out
mov
lea
out
mov
and
xchg
cmc
sub
sub
and
rcr
lahf
icebp
mov
cli
mov
fldcw
mov
adc
mov
rcr
inc
shll
cltd
leave
mov
pushf
mov
cli
xchg
push
sahf
inc
and
push
fbld
or
addl
mov
into
mov
mov
sub
fstps
or
adc
out
and
aam
leave
pushf
mov
stos
add
pop
inc
pop
mov
push
lea
lret
adc
iret
fbld
jb
or
addr16
les
test
adc
push
jb,pn
sub
or
cltd
rclb
loope
out
push
sub
adc
test
or
fsts
cmp
shrb
std
pushf
pop
lock
mov
cmpsb
outsl
cmp
sub
rclb
pop
ret
shrb
popa
sub
lock
inc
movsl
inc
adc
mov
xor
inc
test
adc
cmpl
movsl
xor
sbb
in
and
mov
test
mov
test
lahf
popl
xchg
arpl
movq
icebp
mov
je
cmp
outsl
mov
mov
iret
adc
jmp
sarl
xchg
mov
aad
ret
clc
xchg
loopne
int3
mov
das
inc
test
test
adc
xor
sub
hlt
sub
cmp
mov
cmpsl
imul
adc
sub
das
sbb
dec
out
idiv
rorb
mov
test
jecxz
sub
cmovle
test
cmp
mov
dec
repz
mov
outsl
sar
mov
loop
mov
les
mov
je
add
les
adc
outsl
lods
in
stos
jle
and
out
pop
sti
loop
hlt
mov
repnz
js
inc
fdivl
insb
inc
mov
inc
movsl
push
std
and
push
lcall
inc
inc
out
ds
fnstcw
insl
mov
std
fxch
or
das
add
pop
mov
xchg
lds
arpl
mov
test
pop
push
fnstenv
loope
hlt
es
dec
insl
pop
mov
xchg
xchg
lahf
pop
sarl
pop
cli
fstpt
mov
cmp
inc
sbb
xchg
cld
je
das
push
cmp
fimuls
clc
repz
pop
pop
mov
sti
enter
mov
stos
aam
sbb
mov
je
mov
dec
clc
lds
aad
outsl
nop
int3
sbbl
adc
mov
mov
or
or
pop
or
add
sub
sbb
inc
jp
fwait
push
xor
iret
scas
js
sbb
ret
adc
in
rcr
sub
mov
pop
and
movnti
pop
fwait
rcrb
lods
xor
lahf
jmp
xor
popa
add
sahf
js
mov
jmp
ret
test
and
jecxz
dec
cmp
pop
dec
mov
ret
push
mov
push
loop
adc
int
sbb
out
shll
push
aad
inc
or
clc
lods
cmp
das
jge
inc
mov
and
push
loopne
std
mov
sub
iret
and
rorl
inc
filds
cmp
shll
mov
dec
push
jnp
stos
insl
pop
xor
xlat
jg
cmp
rcll
mov
push
mov
push
push
mov
fisubrl
adc
sub
xchg
pop
into
dec
pop
adc
repnz
and
cmp
stos
mov
add
pop
in
mov
mov
dec
ljmp
mov
xor
pop
enter
imul
sub
imul
in
in
mov
xor
pushf
and
pop
sub
adc
push
pushf
push
adc
icebp
pop
xor
sbb
pusha
test
jne
or
lcall
repz
sbbb
js
jge
mov
jae
ljmp
ja
pop
dec
mov
arpl
add
mov
addb
in
cltd
jno
mov
mov
in
xchg
jb
jmp
xor
iret
mov
int
pop
out
sub
xlat
mov
or
loop
sub
sbb
scas
and
xchg
push
cltd
pop
data16
sbb
jbe
push
es
add
lea
xor
or
inc
mov
mov
in
leave
and
dec
or
mov
push
or
pop
xchg
mov
sub
inc
ljmp
jecxz
adc
sbb
cld
les
movd
scas
xor
mov
lret
xor
dec
repz
and
rclb
dec
xorl
shr
jle
je
dec
loop
add
adcb
es
fbstp
jae
decl
and
hlt
push
insb
push
dec
push
xor
out
in
add
out
mov
mov
jnp
fistps
enter
fsubrl
add
xchg
mov
cmpsl
dec
ljmp
pop
adc
test
inc
sub
std
scas
repnz
out
jl
lea
lahf
repz
push
iret
out
sbb
test
das
mov
lsl
mov
rcr
xor
xchg
leave
aad
into
negb
xor
mov
jmp
ds
adc
mov
sbb
or
lods
inc
or
sub
test
movsl
sar
enter
jno
fcmovnb
pop
lret
adc
fwait
icebp
adc
xor
inc
xchg
and
dec
loopne
in
test
or
adc
hlt
xor
jg
shrb
or
fcomip
or
aad
and
mov
fimull
pop
pop
and
aad
scas
mov
enter
out
adc
cmp
xlat
rclb
mov
push
inc
aad
idivl
and
jl
jns
mov
jecxz
insl
aad
nop
xor
das
jle
sub
frstor
arpl
adc
mov
mov
adc
bound
lret
or
push
mov
cli
or
adc
adc
jnp
adc
inc
cmpsl
sbb
jge
mov
jno
test
push
es
xchg
sbb
enter
mov
jg
in
push
pushl
ljmp
fisttpll
pusha
mov
push
data16
insb
xor
mov
scas
jg
lret
mov
pop
add
ljmp
mov
jmp
sub
inc
imul
xchg
in
jp
in
push
inc
andb
mov
xlat
out
mov
fistpl
mov
jne
dec
dec
in
sub
xor
test
and
cmpsl
int3
pop
stos
fwait
add
sahf
push
add
lahf
mov
pop
leave
pop
dec
es
loopne
in
fistpl
mov
and
add
mov
cmpsb
jmp
out
pusha
or
push
rcrb
add
int3
stos
gs
cmc
xchg
cmp
insb
sub
test
mov
aas
add
ficoms
les
mov
stos
mov
or
inc
and
lret
sbb
jne
xlat
mov
jnp
dec
xlat
adc
pop
mov
rclb
inc
dec
gs
arpl
fcmovnu
push
test
movsl
xor
and
insl
jo
ret
xor
fmuls
pusha
push
pop
adc
push
outsl
push
jne
ret
popa
je
mov
fnstcw
and
mov
adc
or
mov
mov
bound
fimull
jmp
xlat
sbb
mov
add
fucom
jae
insl
cmp
hlt
loopne
outsl
faddl
sahf
scas
loopne
pop
decl
mov
rclb
lcall
ds
push
xor
adc
cmp
mov
mov
je
or
lea
ja
enter
imul
mov
mov
les
out
leave
testl
xchg
test
adc
repnz
dec
mov
ret
lea
dec
xlat
pop
aas
mov
sbb
push
pop
mov
dec
out
mov
or
push
pop
xchg
pop
inc
pop
ljmp
lock
insl
imul
in
push
orb
mov
jg
mov
adc
in
xchg
mov
ret
dec
xlat
dec
mov
fisubrl
aaa
mov
cmc
mov
mov
push
loopne
pop
sub
iret
sti
xchg
push
int3
inc
test
mov
out
mov
xchg
cmp
rorl
or
push
sub
pop
cmp
shrl
sub
lds
cmc
pop
fnstcw
enter
aam
add
jae
jle
scas
mov
hlt
jo
popa
cmpsl
lock
mov
xchg
int3
or
inc
sbb
inc
or
jecxz
shll
fwait
xchg
stmxcsr
mov
fwait
testl
lret
shl
mov
movsb
lcall
js
pop
mov
out
xor
cmpsb
stos
sub
enter
mov
xchg
jp
aas
dec
mov
popf
hlt
xchg
xchg
dec
sub
cmp
lret
sbb
xchg
rcrb
xchg
out
cmpl
inc
cmp
push
xor
cmp
arpl
stc
imul
cmp
pop
cltd
add
xchg
pop
mov
jl
les
pushf
sbb
lahf
addr16
xchg
and
add
adc
cmp
add
cwtl
add
idivb
push
sbb
mov
pop
sahf
nop
jl
rcl
and
loope
adc
in
fisubrl
push
push
cmp
pop
push
into
and
or
mov
push
cmp
sarb
imul
repz
pop
jle
jbe
test
div
movsl
add
jp
insb
xchg
pop
fs
fs
arpl
sarl
into
dec
js
rcl
xorb
or
inc
mov
adc
mov
mov
pop
sub
test
mov
aaa
fwait
mov
loopne
cmp
cmp
ret
ret
or
dec
repz
adc
fadd
jle
das
xlat
subb
adc
mov
jbe
js
sub
xor
jb
aaa
outsb
jmp
stos
fs
or
pop
cmpsb
sbb
sub
imul
xchg
shrl
pop
scas
hlt
jno
aad
adc
jb
sub
inc
cltd
sbb
sub
mov
xchg
daa
dec
outsl
push
mov
fists
mov
sub
mov
loope
movsl
scas
mov
sub
jge
sbb
sub
fnstenv
jge
or
fbld
outsl
scas
test
sbb
and
xchg
push
and
dec
test
lcall
and
push
xchg
pop
adc
and
sub
aam
push
jb
movups
pop
fisubl
cmp
int
aad
imul
sub
push
clc
xlat
add
mov
xchg
inc
cli
jecxz
stos
pop
test
pusha
inc
in
cmpsl
xor
cli
cmp
addb
popa
stos
in
in
xchg
add
xchg
repz
and
je
xchg
and
faddp
stos
pushf
out
push
xchg
mov
sahf
mov
nop
clc
inc
daa
pop
sbb
inc
sarl
fwait
test
push
aam
unpckhps
cmp
pop
cltd
or
sarl
sub
mov
fs
dec
or
lds
mov
and
mov
mov
jne
out
out
es
dec
jecxz
add
bound
cmp
sbb
push
stc
loop
neg
push
int
idivl
dec
xchg
ret
xchg
push
and
mov
push
rcl
dec
scas
sub
push
shl
sbb
xchg
cmp
push
outsb
jne
cltd
fists
jae
push
pop
pop
jns
dec
in
pop
jg
cmpsb
lret
adc
daa
fildl
mov
inc
insl
fisubl
pop
stos
pop
es
and
roll
pushf
loop
push
mov
cmp
sbb
add
adc
and
jns
insb
dec
cmpsb
pusha
ret
and
or
pand
es
adc
test
xor
jecxz
pop
xor
mov
xor
push
jmp
data16
dec
cs
xchg
aaa
xor
pushf
cmp
call
jae
or
ljmp
jne
jl
sub
jnp
add
loop
add
pop
das
mov
shr
fsts
dec
add
popf
mov
or
dec
push
mov
loop
fistps
add
mov
icebp
in
aam
push
push
scas
out
xorl
push
push
cmp
enter
lock
in
xchg
inc
or
lret
push
pop
sbb
and
jge
jecxz
jg
iret
inc
xchg
imul
and
in
inc
out
inc
sbb
cmp
add
sbb
and
xchg
rcll
test
pop
push
adc
or
sarl
ficomps
pop
sahf
xor
sbb
jg
dec
into
mulb
fcmovnb
lock
xor
out
into
sub
loopne
inc
xchg
mov
in
loop
repz
iret
xor
add
mov
xlat
cmpsb
mov
sbb
cwtl
push
xchg
jne
int
ret
add
jl
addl
sub
das
cmp
inc
jmp
out
std
or
cmp
xor
inc
push
stos
or
fidivs
test
mov
or
xor
xchg
cmp
pushf
int3
aad
cltd
fwait
repz
jmp
jge
sbb
test
push
sti
add
push
idivl
mov
pushf
sarb
mov
inc
sbb
pop
add
adc
std
cmpb
mov
pop
movsb
data16
std
loop
xchg
pop
aaa
fs
test
push
sti
sub
shrb
call
sbb
adc
outsl
loopne
mov
insb
push
pop
sbb
xchg
cltd
imulb
xor
fwait
inc
cmp
cli
push
test
outsl
dec
sbb
dec
mov
lret
pop
aas
pop
jl
lea
xor
jnp
jbe
pusha
ret
add
fcompl
sub
repnz
fstpl
xchg
jmp
rorb
push
sub
mov
cmp
pop
mov
xchg
fwait
add
cli
xchg
outsl
outsl
push
pop
lret
aad
xor
pop
insl
lcall
pop
push
sbb
das
mov
in
xchg
sub
subl
mov
pop
mov
cmc
inc
pop
dec
adc
push
psubusb
jo
hlt
stos
push
repz
mov
lahf
mov
bound
pop
mov
adc
sbb
jp
pop
xlat
aad
in
jg
cltd
pop
pop
cmp
jne
sbb
scas
stos
adc
sub
in
xchg
jbe
or
int3
xchg
or
sub
mov
rol
and
adc
jbe
popa
sbb
cwtl
adc
sub
fildl
insl
fdivrl
sbb
sub
jno
sbbl
jg
pop
pop
aad
fiaddl
mov
cmp
inc
repz
push
lock
stc
test
push
bound
inc
inc
add
sbb
in
pop
dec
dec
push
mov
push
icebp
or
inc
jbe
cmpsb
stos
dec
inc
das
push
mov
insb
gs
push
sbb
adc
pop
repz
loope
nop
xchg
icebp
es
je
pusha
mov
ds
mov
pop
mov
or
or
push
mov
or
push
das
inc
inc
sahf
int3
pop
xor
push
mov
iret
mov
decl
cltd
loopne
dec
xchg
insb
shlb
add
mov
popa
inc
sub
into
frstor
insl
and
and
or
ja
dec
fcmovu
loop
add
sub
cmp
fbld
push
inc
push
xor
mov
mov
pop
cwtl
repnz
or
call
xchg
pushf
pop
and
leave
cltd
xchg
in
rcl
test
outsl
add
jge
pop
mov
je
movsl
mov
not
sub
mov
lea
repnz
dec
fwait
bt
pusha
inc
jmp
dec
imul
rolb
jo
stos
jns
mov
in
mov
mov
sub
pop
in
mov
jns
xor
inc
mov
adcl
int
or
out
or
adc
je
xlat
mov
adc
and
pop
cmp
sti
test
mov
or
pop
cmp
addr16
fsubrs
adc
jmp
cmp
sbb
les
xchg
mov
pusha
mov
mov
ja
or
cmp
lods
mov
sub
rorb
sbb
and
aam
leave
mov
mov
mov
bound
addl
jmp
cmc
dec
mov
sub
out
faddp
jg
rcll
ja
cwtl
jecxz
popf
test
popf
fistps
pop
movsb
sub
sahf
dec
shlb
mov
ja
xor
and
mov
mov
inc
jo
jb
lret
sub
lret
inc
push
xor
sbb
sar
lds
pop
inc
push
or
insl
inc
sbb
jne
or
fmuls
iret
jns
xchg
fcoml
fsubr
ja
jl
sbb
sbb
push
push
cmp
cmp
orl
int
daa
mov
lea
or
cmc
lahf
mov
jns
sahf
fxtract
xchg
pop
int
push
loop
xor
push
pop
enter
scas
insl
xor
cwtl
faddp
sbb
clc
or
arpl
and
aam
dec
and
ss
pop
sbb
inc
ds
fsubl
mov
and
sbb
out
clc
dec
mov
movsb
and
sub
jecxz
fnstenv
daa
and
mov
lcall
movsb
imul
push
cmp
mov
sub
bound
rol
mov
adc
lahf
add
fimull
and
pop
rclb
inc
movsl
subb
mov
call
not
bound
mov
mov
ret
xor
xchg
pop
jecxz
sub
sub
adc
mov
pop
dec
mov
fildll
xor
ficomps
lock
data16
cmp
push
cld
out
movsl
push
stc
dec
or
jl
es
add
rorb
push
push
push
inc
jge
lcall
mov
and
cmp
cmpsl
jae
fwait
int3
pop
js
bound
lret
inc
stc
mov
rorb
shll
frstors
dec
stos
je
lods
push
pop
or
mov
test
and
or
bound
push
shll
cli
movsl
pop
inc
adc
aam
je
lods
fidivl
add
or
fcoms
jae
sub
xchg
lret
jge
adc
sbb
cmp
lahf
ss
mov
int3
mov
mov
dec
aam
mov
adc
inc
cwtl
ljmp
in
cwtl
sahf
push
lcall
lea
sbb
pop
mov
shll
sub
dec
ds
sbb
insl
mov
aaa
inc
push
dec
js
pop
scas
lods
jne
sbb
push
icebp
stc
std
aas
inc
scas
ror
in
pop
pop
sub
fbstp
int3
adc
repz
pop
mov
xlat
mov
sbb
dec
ss
in
mov
scas
lods
imul
sub
ljmp
or
pop
inc
inc
pop
push
stos
aas
pop
add
stos
inc
xor
mov
out
shll
scas
xchg
dec
divb
out
fidivrs
rclb
pushf
add
lcall
std
test
cs
pop
add
scas
lock
sub
push
nop
lret
inc
and
and
sbb
out
jge
jl
lock
loope
push
pop
pop
arpl
or
int3
xchg
leave
push
leave
pop
sub
cli
ds
push
insl
js
cmpsl
dec
shlb
mov
fwait
jecxz
push
pop
jno
pop
add
sbb
inc
cmp
mov
pop
jno
fcomps
lds
or
pop
mov
inc
xor
iret
dec
pop
shl
push
adc
adc
cmp
ds
or
daa
dec
pop
mov
int3
test
dec
fucomp
sub
sub
jno
shlb
pop
loope
lret
andl
mov
or
imulb
or
fmull
pop
ret
cmp
and
or
adc
hlt
inc
dec
hlt
inc
cmp
cld
fucomip
cwtl
mov
fwait
sub
imul
dec
repz
movsl
and
cmpsb
dec
xor
jb
cmp
sbb
loop
sbbb
adcb
mov
dec
outsl
sub
outsl
fs
sbb
in
lea
lock
daa
aam
xor
mov
mov
mov
lods
out
push
pop
dec
push
ds
movsb
into
fldz
or
aad
dec
loop
jo
mov
hlt
xchg
and
sbb
sbb
pop
test
fnstsw
cmp
cwtl
jbe
lahf
and
mov
outsl
stos
popa
enter
adc
pop
jnp
jp
mov
cmp
push
adc
push
int3
cli
ficomps
and
arpl
dec
sbb
add
pop
stc
push
adc
jns
mov
xchg
mov
into
xchg
xorl
adc
push
xchg
add
in
mov
jb
xchg
fldcw
lea
in
mov
sub
sub
loope
xor
movsl
dec
imul
mov
je
outsl
fdivrp
lds
and
les
stos
pusha
repnz
jo
inc
testl
add
pop
mov
mov
inc
sub
jno
insb
or
xor
loopne
lea
test
push
imul
push
adc
add
leave
dec
sbb
scas
sub
ret
aaa
xor
cli
xlat
cmpl
sbb
push
add
mov
mov
sub
imul
xchg
dec
shll
lahf
mov
mov
shlb
mov
pop
repz
lds
cmp
out
pop
sbb
loopne
xor
lcall
inc
mov
mov
jmp
pop
sbb
or
inc
pop
xchg
dec
lods
test
popf
cmpb
pop
or
and
pop
jmp
sbb
or
sub
iret
sbb
rcl
sub
jne
jbe
aas
in
jb
or
roll
aas
xlat
fstpl
pusha
mov
ret
int
loopne
mov
sahf
xchg
mov
aam
mov
and
in
je
push
leave
mov
jns
lock
lea
fnstcw
cmp
mov
test
sbb
add
data16
insl
aad
js
scas
dec
cltd
mov
psrlq
mov
dec
mov
mov
push
rcrl
outsl
inc
mov
and
repnz
popa
dec
xchg
add
arpl
push
fidivrl
cmp
cmp
pop
cmpsl
stos
hlt
dec
cld
rolb
push
cmpl
jae
sub
add
addr16
cwtl
test
aam
mov
dec
push
lahf
add
int3
loop
xor
push
repz
imul
xor
lcall
punpckhbw
fnsave
pushf
jno
or
enter
dec
in
cmpsl
in
xorb
sti
sbb
lahf
xchg
mov
pusha
aam
dec
popa
pop
bound
cmpb
imulb
mov
inc
loope
lcall
inc
fcomps
jl
cmp
dec
jb
add
add
ja
aaa
cmp
mov
cmc
inc
xor
repnz
leave
xor
cmp
in
insb
sub
daa
sub
lds
outsb
mov
lea
movsl
xor
stos
jne
sub
dec
enter
mov
add
inc
adc
lods
push
xor
insb
lahf
mov
in
sub
push
fwait
repnz
in
mov
aaa
rcpps
cmp
xor
fisttpll
addr16
daa
jle
lods
push
mov
rcrb
je
inc
int
or
lock
add
addb
sub
dec
add
lock
adc
popf
loop
cmpsb
inc
jg
test
movsb
jbe
loop
ja
cmp
mov
mov
mov
mov
fildll
xlat
repz
sbb
inc
mov
arpl
sti
xchg
add
cli
sub
inc
stos
lret
call
and
jne
adc
aas
pop
stc
cltd
lock
dec
aas
addl
push
lret
out
xor
cmp
loopne
repnz
test
fidivrl
out
sahf
push
scas
outsl
leave
inc
iret
jl
push
and
xchg
pop
push
enter
sbb
dec
adc
test
dec
leave
add
in
add
fsubrl
fnstcw
fisttps
aas
mov
jne
sub
mov
bound
jne
fisttpll
mov
insl
inc
mov
imul
sub
pop
arpl
pop
jns
clc
mov
lods
push
dec
ja
xor
xchg
jns
add
int3
icebp
lcall
push
lret
ret
stc
in
and
aaa
xor
stos
cmp
dec
ret
js
mov
aam
xchg
popf
mov
lds
ss
hlt
push
xor
sti
sub
dec
inc
sti
jmp
push
fsubl
xor
add
int3
push
shll
pop
ret
or
cmpsl
out
pop
in
mov
out
jne
or
jge
push
icebp
stos
fwait
inc
sub
fst
jo
mov
sub
or
stc
pop
mov
cld
inc
inc
cltd
out
dec
mov
push
adc
adc
mov
pushf
ja
ja
xor
jae
and
scas
jo
jecxz,pn
hlt
test
clc
jns
sbb
mov
int3
call
ljmp
push
out
mov
xor
mov
inc
sbb
sub
ret
test
and
in
fdivrl
js
and
sahf
adc
test
pop
add
sbb
dec
push
push
dec
std
hlt
lcall
xlat
cltd
js
mov
sbb
cmp
xchg
mov
push
addl
dec
sub
sub
dec
xor
jl
mov
lahf
pop
mov
popf
stos
push
nop
data16
cwtl
out
bound
adc
and
mov
cmpsl
adc
dec
outsb
add
pop
lock
movsb
pop
fnsave
stos
mov
dec
fwait
stc
add
rorb
and
xor
and
or
ljmp
push
fsubr
mov
faddl
cmp
xor
dec
mov
mov
ret
add
pop
xor
dec
repz
addr16
jl
mov
js
inc
gs
addr16
cwtl
mov
in
add
mov
cld
mov
cmp
mov
andl
dec
inc
sbb
jae
and
mov
and
xchg
jo
push
sahf
dec
iret
scas
sub
adc
mov
sbb
aam
jg
andb
push
outsl
ja
mov
pop
mov
imul
cmp
les
shl
xchg
rolb
sbb
pop
jae
or
jbe
jecxz
sub
je
xor
sahf
sti
lea
repz
jge
sti
mov
lds
mov
lods
sub
dec
imul
lcall
and
push
flds
stc
mov
les
push
jo
pushf
call
lds
ds
push
rclb
sub
mov
call
add
xchg
mov
cmpsl
cmp
add
jo
outsb
xchg
mov
movsl
push
dec
out
bound
adc
stos
jecxz
push
flds
push
mov
popf
test
or
outsl
pushf
jnp
or
mov
jne
xor
adc
popf
enter
mov
add
daa
aaa
mov
lds
add
cmp
jbe
cli
push
ds
xor
mov
cli
icebp
jae
and
sbb
and
test
stos
adc
sub
mov
sbb
fidivs
adc
out
and
push
addr16
daa
cli
sub
test
mov
inc
cmp
xchg
push
xchg
mov
rcrb
mov
rorl
push
je
adc
dec
xchg
shrb
push
movlps
pop
std
fwait
movsb
mov
pop
jmp
faddl
in
xchg
imul
pextrw
pop
fs
lret
pop
scas
mov
gs
or
push
xchg
cmp
inc
and
cli
movsl
jns
stc
cmp
stos
xchg
cmp
cmp
mov
shlb
stos
call
sbb
mov
dec
jo
nop
inc
popa
pushf
pop
pop
adc
out
daa
pop
cmp
jnp
xor
repz
arpl
out
sbb
mov
in
pop
jae
adc
repnz
sub
pop
sub
mov
in
and
add
push
ficomps
repnz
push
add
cs
imul
test
jle,pn
mov
or
mov
sub
imul
xchg
fwait
arpl
dec
loopne
orl
lcall
cmpsb
scas
mov
or
outsb
rcll
add
pop
das
sub
push
push
mov
cmp
js
cmp
push
jecxz
push
mov
adc
sbb
xor
and
wrmsr
mov
adc
inc
daa
dec
push
sti
jle
sahf
popw
cs
stos
shrl
roll
push
addr16
cmpsb
jns
xchg
arpl
scas
mov
in
test
sub
jecxz
mov
pop
bound
arpl
mov
pop
test
loopne
xlat
adc
cmp
je
gs
test
dec
mov
push
lret
add
loopne
clc
push
or
xchg
ds
add
push
scas
jmp
fcompl
icebp
and
nop
inc
addr16
hlt
in
pop
jo
sti
out
fldl
fdiv
ja
mov
xchg
pop
insl
mov
dec
mov
test
push
and
ret
xor
jge
insb
inc
scas
les
xor
rclb
xor
sub
push
jg
xor
clc
call
mov
imul
jl
jp
xor
adc
in
stos
and
sbb
sbb
into
int3
pop
outsb
adc
fisubrs
imul
cmp
cmc
cmpsb
sbb
xchg
push
mov
push
aas
push
sub
jecxz
ljmp
add
jp
mov
xor
arpl
enter
daa
repnz
jae
ficomps
pop
mov
xchg
sahf
loop
adc
je
add
out
mov
add
data16
push
mov
sbb
mov
orl
push
inc
lock
shlb
push
arpl
mov
dec
cli
std
sbb
mov
xchg
je
and
jnp
mov
pop
into
leave
insb
loop
adc
xchg
inc
mov
push
mov
xchg
mov
push
xor
arpl
cmp
rolb
jne
test
inc
jmp
add
xor
int
adc
adc
cmp
movsl
xchg
pop
cs
rolb
lahf
and
mov
mov
mov
imul
mov
push
outsb
xchg
movsl
sub
pop
mov
loope
fildl
addr16
je
xchg
jne
add
lods
fsts
loop
adc
in
push
notb
push
inc
mov
iret
pop
cmp
test
test
data16
jns
mov
mov
jne
lcall
add
andl
mov
int3
pusha
add
fldl
jb
lret
push
scas
test
popf
ret
rorl
pop
xchg
add
pusha
aas
sub
jp
cmp
enter
mov
push
cmp
test
sbb
hlt
xchg
aaa
push
popa
movsl
jp
sub
gs
cmc
mov
jp
movsb
mov
sub
mov
adc
jmp
or
addb
cmp
stos
push
lcall
add
dec
lock
push
push
cmc
sbb
stos
adc
clc
sbb
les
in
es
add
nop
xlat
jge
push
and
ficoms
mov
push
push
shl
fs
scas
fimuls
adc
stos
push
cs
movb
adc
mov
pop
shrl
imul
dec
insb
fistpll
xlat
jg
pop
fcoms
mov
ret
push
jns
sub
int3
jle
mov
rclb
fistpl
out
sbb
push
cmp
addr16
stc
repnz
lods
xchg
push
dec
movb
dec
mov
neg
lahf
test
fsts
push
dec
xchg
xchg
iret
pop
nop
xlat
push
pop
movsl
imul
lea
out
mov
xchg
push
adc
cli
repnz
stos
test
or
cmp
stc
lock
and
and
sub
test
cmp
or
js
pusha
sar
add
and
mov
std
mov
jl
mov
cmc
fwait
dec
paddusw
mov
clc
sub
call
je
push
int
jbe
outsl
arpl
add
lock
loop
mov
mov
sbb
outsb
mov
mov
pop
rclb
fstpt
jl
push
cmc
out
jns
out
push
push
adc
lcall
jecxz
sbb
mov
leave
mov
movsb
push
and
mov
loop
mov
mov
xchg
int
mov
jmp
mov
or
imul
loop
mov
mov
scas
nop
jg
and
jae
mov
push
xor
sti
aam
dec
dec
inc
push
in
and
or
sarl
es
pop
scas
pop
xor
iret
mov
into
bswap
andb
rcrl
mov
cli
jo
dec
inc
xor
lock
mov
repnz
outsb
stc
lret
xor
xchg
add
filds
arpl
filds
in
jle
rclb
inc
mov
insb
hlt
ljmp
cmpsb
popa
cmp
mov
and
rorb
xlat
lret
mov
ror
cli
adc
sarl
shlb
aam
dec
mov
aad
cld
lock
neg
popfw
push
xor
jo
add
sub
clc
aad
jno
cmp
xchg
cltd
inc
je
lea
and
adc
inc
imul
xor
inc
lock
decb
addr16
xchg
and
cmp
pushl
cwtl
xchg
jno
push
cmp
fiaddl
testb
mov
aam
shr
ss
push
jb
cs
add
sar
xchg
pop
std
jbe
sub
sbb
popf
in
xor
jae
fcmove
jmp
hlt
hlt
lea
jns
cmp
lcall
push
cltd
fsubrs
jo
add
sbb
cmp
jmp
js
and
movsb
dec
fimull
shrw
jmp
xchg
sub
add
pop
sahf
icebp
xor
ss
and
in
int3
add
mov
and
aaa
add
inc
pop
pop
xchg
mov
ljmp
mov
push
push
lods
push
scas
adc
addb
sub
paddusb
jb
cmp
xchg
xchg
and
mov
mov
inc
dec
xor
fdivl
mov
sub
shl
leave
or
mov
out
lea
xor
repnz
push
mov
mov
xor
cmp
xor
sub
ret
lcall
pusha
ljmp
insl
sub
into
sbb
loop
add
pop
fucomi
jl
and
and
xchg
jg
addb
sahf
fldz
dec
cmpsl
cmp
or
inc
lea
lret
pop
das
fsubl
out
mov
outsl
jl
mov
sub
mov
mov
push
fidivs
cwtl
imulb
inc
inc
decb
adc
add
stos
xchg
das
adc
xchg
clc
jp
ja
mov
fisubrl
xchg
bnd
and
push
daa
xchg
out
add
pop
mov
cmp
xchg
pop
cmc
dec
inc
push
mov
pop
pop
je
rcrl
sti
push
les
repnz
lret
xor
push
inc
mov
notl
dec
mov
push
shr
movsb
fisttpl
and
mov
clc
sbb
ja
sbbl
fs
inc
js
cmp
in
stos
push
mov
jg
push
fisttpl
cwtl
leave
pop
dec
add
aas
add
dec
mov
push
incl
les
mov
sbb
sub
cmp
in
aas
ret
mov
adc
jge
add
xor
arpl
xchg
clc
mov
jge
bound
out
cmp
cmc
jmp
out
addl
pop
mov
lahf
inc
test
pop
imul
cltd
enter
fbld
rep
mov
xchg
adc
jbe
sti
mov
mov
gs
icebp
orb
call
dec
cmpsl
pop
mov
test
pop
or
mov
jno
mov
cmpl
movsb
jae
dec
jle
stos
jnp
insl
mov
cs
and
sbb
push
cltd
adc
xor
jae
cmp
adc
pop
xor
test
insb
mov
mov
push
das
sub
divb
in
push
inc
out
insl
lods
sahf
inc
popf
lret
test
insl
int3
mov
enter
add
and
jo
daa
mov
and
cld
jb
jo
aam
adc
loopne
repnz
dec
pop
push
lods
mov
shl
shll
stc
jbe
ds
adc
sbb
mov
cmp
int
negl
sbb
clc
adc
xor
adc
push
stc
fadds
fwait
jbe
xchg
mov
iret
adc
sti
rep
xchg
ret
sarb
repnz
outsb
lahf
out
leave
mov
pop
cmp
fisttpl
popf
bound
js
pushf
dec
repz
push
or
imul
gs
jno
push
add
aaa
in
cltd
sbb
add
mov
vcvttps2dq
pop
mov
push
pop
fwait
pop
jle
mov
xchg
iret
popf
mov
daa
aad
add
xor
mov
iret
or
xlat
popa
aam
stc
mov
outsb
loop
int
fs
lods
test
test
add
cmpsb
xchg
imul
in
ds
mov
sbb
shl
add
jle
pushf
punpckhdq
or
mov
xchg
pop
idivb
mov
cmp
mov
mov
fcomps
shll
enter
shl
mov
or
xchg
insb
jnp
xchg
xor
bound
inc
inc
imul
dec
mov
mov
sbbl
les
lock
scas
in
mov
sub
jecxz
mov
imul
jbe
movsl
aas
addr16
xchg
aad
pop
sub
cs
cli
mov
add
and
jp
pop
mov
scas
and
sbb
sub
sbb
lret
movsl
ss
stos
std
sbb
pop
xchg
mov
push
je
xor
in
and
mov
loopne
fistps
aad
enter
lea
sub
sti
test
insl
mov
iret
cmp
cmp
mov
int
pop
push
or
jecxz
fisubl
movsb
sarb
les
xchg
out
xor
test
mov
xchg
test
adc
mov
insl
cmp
jo
jne,pt
adc
mov
int
ror
out
xor
nop
sub
shll
xchg
ss
cs
or
jb
jns
cmc
pusha
sahf
movsl
scas
push
ljmp
pop
push
gs
fs
cmp
bound
addr16
jae
push
pop
scas
in
out
cmp
repz
mov
mov
mov
add
push
aad
mov
push
add
idivl
and
in
mov
mov
or
jp
ret
pop
loop
pop
loopne
pop
jb
mov
aas
add
js
pop
dec
xor
ficompl
adc
ficoml
ljmp
out
cld
mov
popf
jo
cmc
ljmp
addl
xchg
xchg
inc
scas
pop
lret
test
leave
scas
aam
aaa
jns
andb
jne
ja
mov
mov
mov
jae
cmp
inc
mov
cmp
call
mov
cmp
int
pop
pushf
mov
nop
loopne
adc
mov
jne
fidivl
xor
sub
idiv
pop
cmp
lret
push
stos
add
cmp
mov
call
pushf
pusha
mov
push
cld
mov
dec
mov
xor
mov
lret
push
cmpsl
lea
mov
sub
jbe
xor
push
scas
dec
outsb
dec
shlb
xor
gs
mov
in
outsb
lods
add
pop
loopne
popa
pop
push
mov
test
xor
adc
inc
xchg
cmp
inc
xchg
imul
inc
inc
cld
es
test
cmp
outsl
fucomp
push
cmp
inc
sub
jecxz
fidivl
js
and
cmp
jae
or
mov
pop
mov
sub
aaa
mov
pop
pop
gs
dec
fbld
sub
fnsave
ret
gs
dec
inc
mov
sti
aam
stos
mov
clc
in
mull
jecxz
addr16
pop
ljmp
and
jle
add
or
in
je
incb
out
xchg
xor
mov
sbb
leave
inc
or
out
gs
xchg
mov
and
lock
mov
pop
sbb
mov
xchg
shrb
cmp
and
jmp
leave
inc
dec
jne
lahf
cli
imulb
bound
mov
pop
insb
push
arpl
xchg
lcall
and
mov
mov
das
sbb
and
js
mov
jb
sub
mov
jno
dec
mov
and
sbb
mov
mov
iret
sbb
mov
xor
sar
insl
jno
pop
outsb
adc
in
data16
mov
cmc
addb
fldcw
xchg
out
mov
jae
cmp
xchg
mov
arpl
lahf
call
mov
sbb
leave
iret
fwait
movsb
jmp
repz
imul
mov
in
jb
mov
xchg
mov
mov
arpl
push
aaa
call
fisttpl
mov
sub
or
push
sbb
cli
push
jecxz
xchg
push
xchg
mov
dec
adc
jnp
or
cli
sbb
test
sbb
cmp
add
mov
cmpsl
jecxz
mov
push
lds
or
cld
jbe
out
and
ljmp
mov
sub
dec
popf
rorl
jle
dec
inc
in
movsb
add
cmp
data16
push
push
pop
mov
or
and
or
inc
notb
lods
fldenv
cwtl
repz
pusha
sbb
adc
cli
ljmp
stos
pinsrw
sub
push
sub
cltd
sbb
push
pusha
cli
aas
inc
mov
in
rorb
add
cltd
inc
jb
add
out
insb
xlat
sbb
xor
mov
mov
xchg
sti
loope
push
xchg
pop
sub
dec
jmp
mov
loop
testl
xlat
adc
mov
loope
mov
cmp
jnp
clc
dec
and
mov
inc
loop
adc
inc
or
jl
rcrl
mov
aam
popa
sub
add
sarl
daa
cli
arpl
jp
cmpl
add
dec
xor
mov
cmp
pop
mov
mov
cmc
imul
pop
cmc
rolb
inc
adc
pop
es
or
aad
jae
fadds
fcmovbe
imul
outsb
clc
out
jnp
stc
dec
pop
mov
addr16
cmpsb
mov
mov
das
pop
cmp
cli
mov
xchg
or
cmc
inc
mov
and
imul
movsb
shlb
or
call
cmp
sbb
sbb
adc
fs
jl
jl
sub
inc
pop
dec
lock
je
mov
or
jno
mov
out
add
mov
xor
cmp
fcomps
lds
stos
movsl
movl
inc
cmpb
movsl
lods
repnz
sbb
mov
cmc
xor
push
iret
sub
xor
hlt
loop
stos
push
out
insb
xlat
insl
or
pop
jge
dec
arpl
inc
lods
ljmp
add
arpl
inc
dec
gs
push
lods
stos
mov
pushf
fs
cli
and
sub
jbe
jbe
dec
dec
inc
cmp
in
jge
out
cltd
mov
mov
ret
pop
dec
mov
pop
out
cmp
add
mov
and
in
jbe
or
pop
iret
mov
out
fbld
sub
scas
fwait
test
test
jg
mov
mov
fistl
add
sbb
add
ja
xchg
cmpsl
mov
ror
pushf
jbe
mov
testl
jge
bound
fwait
mov
jp
or
and
in
inc
jns
ja
aam
push
sbb
scas
movsb
pop
adc
mov
jp
push
mov
leave
mov
fs
sbb
cwtl
mov
lods
mov
xor
add
pop
sub
adcl
push
shlb
inc
sub
xchg
xor
int3
adc
mov
mov
sti
pusha
pusha
daa
push
and
fldenv
testb
cmp
stos
aad
sub
bound
xor
pop
lahf
int3
mov
lods
add
inc
xor
xor
jnp
mov
aad
fsubp
cwtl
lret
jl
lock
jbe
jnp
dec
jno
rorb
daa
jmp
xor
adc
mov
imul
daa
test
movsb
idivl
rcrb
pop
push
adc
jecxz
into
sbb
cmp
mov
dec
jns
push
pop
std
stc
or
add
clc
xor
ud1
xchg
aam
mov
mov
jmp
cmp
dec
shrb
xchg
pop
aad
adc
and
cmp
orb
mov
test
inc
cltd
sub
mov
repz
sti
pop
lcall
sub
test
xchg
mov
dec
outsb
dec
lret
pop
cltd
fwait
push
fdivl
lret
lahf
inc
xchg
jle
imul
or
mov
mov
inc
stos
cli
xor
popa
ss
popf
shll
mov
cltd
inc
cmp
outsl
push
jp
xchg
mov
xor
sub
adc
mov
sub
rolb
nop
cli
and
adc
movb
or
ja
ljmp
aaa
lret
cmp
jle
dec
cmp
pop
pop
sbb
cmp
jbe
xchg
mov
inc
aas
mov
repz
ds
pop
mov
xor
xchg
sbb
inc
jmp
add
dec
jecxz
mov
out
call
lods
filds
add
gs
loopne
push
dec
or
out
pop
jmp
mov
push
mov
sahf
mov
xchg
add
cmp
sbb
mov
jb
arpl
mov
sbb
loopne
mov
mov
ss
jecxz
enter
repz
jl
push
pop
mov
pop
ljmp
sbb
cltd
add
sahf
push
sbb
xchg
imul
cmp
jbe
fxch
dec
jnp
jbe
or
sub
pop
xor
and
mov
imul
mov
test
ds
cltd
xor
nop
dec
xor
cli
fmull
daa
push
xor
mov
stos
add
leave
mov
or
cmp
cmpsb
insb
ret
outsb
popl
jl
pop
mov
add
aaa
sti
shlb
mov
icebp
pop
out
pop
int3
push
cmc
sbb
jge
in
push
push
hlt
jno
enter
jnp
sbb
push
ljmp
sub
mov
pop
mov
hlt
dec
inc
aad
call
xorb
mov
into
jp
push
and
scas
adcl
sub
xor
or
mov
push
loop
adc
lock
inc
and
pop
hlt
cmp
or
or
in
mov
ds
lcall
loopne
aaa
orb
or
sbb
ret
sar
fwait
inc
cwtl
jns
sti
jno
mov
add
aas
inc
and
int
or
lret
inc
jge
jns,pt
test
mov
out
movsl
mov
lret
xlat
push
lods
dec
cmp
sbbb
insl
orl
mov
aam
jge
push
cltd
test
mov
in
sbb
push
scas
add
cmp
js
xchg
inc
jo
jle
xchg
aas
xor
pop
xchg
mov
out
mov
ret
fistpl
imul
add
leave
dec
pushf
sub
lea
test
cmp
xor
sub
pop
stc
jb
or
or
mov
pop
aad
pop
outsl
mov
mov
xlat
inc
jb
mov
cltd
push
mov
sbb
mov
sti
cltd
or
or
mov
sbbl
push
dec
cmp
adc
and
xchg
and
loope
mov
pop
jno
pop
ljmp
add
jae
inc
cmp
ffreep
dec
xor
pusha
cmpsb
jg
pop
xchg
add
lcall
shrb
jns
mov
jbe
cmpsl
les
aam
xor
mov
xchg
xchg
outsl
xchg
and
stos
leave
outsb
cli
push
mov
inc
stc
inc
sbb
out
sbb
lods
dec
aam
dec
push
fimuls
sar
and
mov
push
jnp
movsb
mov
loope
sbb
cwtl
mov
xchg
sub
add
dec
add
push
inc
loope
repz
xlat
mov
inc
call
repnz
jbe
ret
not
push
and
mov
dec
mov
imul
mov
xchg
lret
out
sub
xor
lods
push
lret
sub
and
xor
push
adc
dec
in
js
arpl
xchg
push
daa
test
push
adc
jmp
xchg
cltd
pop
mov
push
or
sbb
adc
mov
adc
or
js
iret
in
xchg
aaa
adc
mov
cld
je
inc
xlat
fidivrs
repz
push
pop
jae
stc
add
pop
and
loope
dec
xor
sbb
mov
les
mov
fdivrs
add
jg
adc
iret
out
sub
and
shl
adc
push
dec
aaa
loop
aad
pusha
jg
mov
mov
jno
ljmp
mov
fwait
nop
lods
pop
mov
leave
cmp
stc
cmp
andb
push
dec
jp
mov
imul
repz
or
repz
lods
lea
arpl
icebp
push
icebp
dec
shlb
lods
out
mov
andl
scas
ss
cmp
cmp
fwait
cltd
xchg
mov
xor
dec
loope
out
jno
xorl
fsubrl
hlt
xchg
add
or
sub
outsl
xor
and
adc
ret
cmpl
jl
xor
es
movsl
dec
dec
fxch
outsb
sub
js
sti
loop
push
adc
addr16
adc
aaa
push
scas
mov
stos
cmp
filds
je
mov
lea
inc
or
dec
inc
cs
mov
lret
adc
or
jno
lahf
mov
pushl
mov
fnstsw
fisttpl
sub
dec
sbb
push
xor
add
mov
xor
add
fbld
inc
out
pop
bound
mov
repnz
fistpl
xor
lods
mov
movsb
add
mov
fistpll
outsl
leave
cmp
jo
clc
subb
sub
xchg
pop
dec
popf
lahf
inc
cltd
lea
out
pushf
pop
jo
cmp
push
jmp
stos
inc
add
sub
dec
or
arpl
jge
mov
jmp
cmc
repnz
decb
lock
loope
ret
mov
fucomi
outsl
lahf
adc
in
dec
or
rcl
insb
fs
inc
dec
adc
xchg
fcoms
int
mov
bound
in
xlat
dec
aam
or
out
int3
mulb
aad
ret
sbb
mov
xchg
je
int3
hlt
xchg
movl
ret
je
jne
lods
cmp
or
mov
and
mov
inc
subl
mov
mov
hlt
mov
cmp
mov
pop
jbe
add
sub
insl
mov
stos
sarb
in
cvtps2pd
sbb
outsl
push
scas
xchg
fnstenv
inc
daa
leave
lea
aaa
stc
adc
cmp
rcrl
ret
repz
sbb
sbb
adc
and
out
pusha
ret
and
popf
adc
adc
push
lret
test
clc
imulb
retw
jmp
out
loop
lods
gs
cld
popf
cmpsl
rcrl
mov
sbb
adc
push
xlat
and
push
cmp
sbb
or
mov
arpl
ja
data16
pop
pop
clc
push
push
push
fldl
dec
ss
lret
pushf
int3
addl
or
mov
ds
cmp
cmp
push
mov
jmp
sub
int
lds
pusha
movsb
dec
or
sub
test
mov
jnp
rorl
sub
roll
test
dec
lods
jp
mov
mov
test
ret
push
and
add
push
sti
cmp
ss
sub
adc
pop
sbb
and
rcr
add
outsl
xor
aaa
popa
aam
enter
lret
cmp
cs
sub
shlb
xchg
inc
adc
jbe
jp
mov
mov
jnp
sub
ja
insb
outsb
loop
push
jne
jo
rcr
mov
cmpps
leave
mov
and
negl
pop
xor
mov
scas
inc
push
int
inc
int3
dec
bound
adc
add
in
xor
lret
pushf
sub
movsl
fiaddl
lods
movsl
pusha
mov
sti
inc
int3
je
sub
mov
mov
dec
enter
cmp
imul
jns
leave
stc
jns
jnp
popa
mov
ja
stos
push
mov
inc
dec
mov
cmpsl
jo
and
out
cmpl
adc
mov
out
pop
aaa
lock
out
xor
mov
mov
popf
cmp
mov
bound
pop
jae
pop
xchg
xchg
jae
add
push
sbb
ss
mov
add
mov
or
insb
inc
mov
cli
mov
sbb
insl
icebp
mov
cmp
mov
movsb
popf
ret
push
dec
or
pop
loop
jle
bndldx
sub
xor
xor
cmp
cwtl
mov
push
jo
mov
xor
adc
pop
jnp
and
out
mov
xchg
cld
test
loope
inc
fcmovne
aad
pop
xchg
jnp
ljmp
dec
lret
dec
mov
mov
test
std
and
add
fistps
xchg
or
addr16
test
adc
cmp
lcall
push
mov
mov
inc
sarb
fisubs
pop
cmp
int
adc
push
ret
jecxz
or
jb
dec
jmp
xchg
lcall
sahf
imul
lahf
pop
mov
lret
lock
push
ret
pop
int3
cmp
adc
add
mov
or
mov
xchg
cmp
push
cmpsl
sar
movsb
stos
aad
call
jp
lea
iret
sub
cmpsb
insl
push
dec
xchg
mov
pusha
aaa
sub
cli
xor
loope
stc
fs
xor
sbbl
cs
jp
jno
sub
mov
popa
negb
cmpsl
jmp
sbb
insl
jns
or
test
jns
mov
mov
jge
and
popf
or
hlt
jae
cs
sbb
pop
mov
adc
aad
insb
pop
mov
lahf
in
lods
mov
jae
dec
dec
mov
mov
jl
mov
ret
mov
pop
popf
lock
pushf
fisubrl
push
pop
inc
lea
outsl
add
test
xor
jecxz
adc
mov
push
or
ja
or
popf
mov
call
sbb
push
sbb
and
xchg
mov
sbbb
cmp
inc
mov
cmp
lock
loop
pop
mov
icebp
pop
push
adc
rolb
in
aas
push
mov
dec
lea
mov
and
lea
push
push
add
mov
sbb
mov
dec
jle
aam
jle
ja
gs
jg
pop
es
lods
mov
int3
data16
sbb
jecxz
test
rcrb
jl
sub
stos
pop
rcrl
pop
js
mov
repz
idiv
rcr
cld
inc
les
fcomps
and
inc
sbb
xchg
xlat
or
cltd
mov
jl
jge
jae
insb
sbb
jo
loopne
pop
add
pop
cmp
mov
je
sbb
mov
pusha
mov
push
les
in
mov
xchg
int3
test
mov
adcl
dec
add
cld
inc
inc
mov
sub
sbb
inc
sub
std
outsb
das
xor
pop
and
div
xchg
insb
daa
stos
mov
cmc
mov
pop
jo
mov
push
test
enter
adc
lds
mov
adc
push
jbe
jb
inc
aad
ret
outsb
cld
fwait
call
fs
xlat
test
mov
jg
mov
in
jb
xchg
insl
push
repz
inc
mov
jb
stos
jne
mov
mov
mov
push
mov
sti
or
cld
ret
mov
int
jb
fwait
lock
jp
mov
sub
adc
mov
sub
mov
fiadds
aam
or
or
imul
out
push
pop
fwait
push
mov
pop
loop
repnz
adc
out
dec
and
ret
lods
or
sub
xor
xor
sub
mov
push
jno
repnz
ret
icebp
lcall
mov
add
adc
pop
dec
aam
cmp
pop
mov
in
jg
cwtl
mov
mov
xchg
and
add
shll
or
xor
fsubr
orl
inc
cltd
fdivrl
gs
sbb
xchg
mov
or
ret
or
add
pop
mov
or
jmp
pop
fildll
pop
push
sbb
inc
in
jno
push
jbe
je
xchg
iret
fstl
sbb
test
push
or
add
xchg
or
pop
dec
add
push
push
sbb
ficoml
inc
mov
sub
sti
aaa
jecxz
test
mov
mov
in
cmpb
mov
test
fcomi
popl
mov
and
pop
pop
lret
cmp
std
bound
roll
insl
adc
psubb
aaa
push
sarl
lret
sub
mov
ficoms
xchg
xor
cs
fisubrl
dec
imul
dec
jns
dec
outsl
xor
and
and
cmpsb
xchg
hlt
fldenv
pause
lret
fwait
ret
movsl
enter
adc
or
inc
adc
es
mov
xchg
into
nop
jnp
in
ret
cs
aas
jmp
sub
push
idiv
jno
je
test
test
xchg
xchg
xchg
sbb
aad
xchg
ss
aas
out
mov
cs
lds
mov
stos
divb
mov
es
stc
mov
cmp
fsubrp
cmp
dec
and
lcall
xor
and
mov
pop
inc
cwtl
stos
mov
lods
jo
scas
xorb
mov
imul
out
mov
xchg
cli
mov
outsl
jle
sub
xchg
mov
xchg
lahf
adc
popf
rcll
dec
jo
sbb
rcrl
xor
and
mov
xor
or
and
aam
leave
shr
xchg
in
jg
or
mov
sbb
fxch
cli
scas
and
mov
jmp
xchg
ds
or
sbb
pushf
inc
pop
jae
aad
lds
dec
fs
mov
cmp
pop
jl
or
stos
test
push
push
cmp
loope
mov
xchg
add
aaa
push
add
hlt
sub
xor
jbe
cmp
mov
insl
ficompl
insb
xor
xor
mov
jnp
loope
sar
mov
ljmp
fwait
mov
xor
adc
cwtl
sti
and
sbb
pop
push
cwtl
pop
mov
or
adc
sub
jl
int
add
mov
mov
stc
sbb
adcb
repz
push
cld
push
in
ljmp
cld
dec
in
sbb
push
rorb
xchg
nop
push
add
int3
pop
jb
lods
lds
mov
sbb
daa
add
xchg
pop
xlat
pop
lock
outsb
lods
lret
adc
ret
shlb
adc
rolb
inc
mov
pop
add
jge
lret
mov
pop
xchg
loopne
scas
bound
fstpl
jecxz
outsl
out
xchg
adc
push
daa
jae
or
mov
add
data16
nop
and
adc
cmp
cmpsl
mov
xor
les
jbe
inc
loopne
xor
fcompl
fisttpl
push
xlat
ja
or
and
mov
test
stos
repz
inc
fwait
in
xor
mov
sub
cmp
or
xor
sub
clc
mov
inc
jne
out
add
push
xchg
stc
icebp
aad
mov
or
add
in
xchg
test
and
insl
mov
scas
and
cmp
mov
mov
in
or
push
jnp
cltd
jp
pushf
adc
je
lret
dec
fs
push
push
loopne
cmpsb
shll
push
lret
cmp
sbb
es
mov
push
movups
adc
out
fbstp
mov
push
pop
aam
inc
nop
aad
mov
sub
mov
inc
jmp
ror
mov
pop
mov
in
mov
and
cmp
test
and
lods
jp
push
inc
push
sbb
cmc
inc
xor
scas
push
ss
movb
pop
xlat
mov
icebp
jne
and
xor
arpl
xchg
xchg
stc
xchg
jp
sub
xor
add
jp
push
insb
je
mov
sbb
dec
loope
test
outsl
mov
adc
pop
pusha
mov
mov
push
cwtl
adc
dec
mov
shlb
xor
cld
cwtl
xor
filds
les
mov
or
mov
xchg
cmpsb
out
dec
mov
test
push
adc
sub
mov
pop
mov
pop
pop
aas
repnz
ret
pusha
mov
lds
outsb
xor
jo
adc
dec
je
inc
rcll
sub
sbb
mov
sbb
inc
xchg
inc
lods
sbb
lret
xor
lods
sbb
sbb
repz
in
scas
loope
jnp
dec
aaa
and
jge
scas
or
loopne
ja
push
imul
or
sbb
inc
push
mov
scas
sbb
or
cmp
adc
test
test
ds
sarl
mov
inc
addr16
or
les
enter
mov
lods
or
sub
mov
mov
pop
inc
pushf
js
insl
je
mov
lds
jno
and
inc
int3
jno
cmpb
outsl
dec
cld
frstor
aaa
sub
pop
jb
jle
inc
loop
inc
imulb
je
in
inc
pop
adc
clc
jp
ret
rol
adc
xchg
test
cmp
xchg
add
dec
int3
cmpsl
or
xor
dec
cmp
popf
loop
adc
or
into
subl
ja
push
loop
inc
jno
ret
add
data16
pop
outsl
mov
sarb
xchg
icebp
cmp
loopne
mov
xor
daa
jl
push
ja
cld
mov
movsl
sub
inc
insb
gs
out
mov
inc
push
std
xchg
push
mov
jbe
jo
add
nop
leave
cmp
scas
add
cltd
and
inc
jle
cmc
mov
call
jg
jae
xchg
das
incb
cmpsl
lea
xor
or
cmp
sub
add
int
sbb
xchg
lods
push
dec
xor
in
pop
scas
adc
mov
dec
bnd
jne,pt
lea
lods
sub
cld
roll
xor
push
repz
fwait
mov
xchg
insl
mov
and
jns
pushf
mov
push
mov
popf
jecxz
shlb
subb
cwtl
pop
into
daa
and
jle
xor
shrl
adc
dec
mov
mov
mov
dec
mov
pop
push
js
adc
cltd
mov
cli
push
cmp
cli
mov
push
cs
push
push
fldenv
sbb
push
push
push
sti
movsb
mov
jo
cmpsb
pusha
pop
ret
adc
inc
push
cmp
push
xchg
xor
addr16
adc
cwtl
bound
cwtl
into
mov
fcompl
out
adc
xchg
imul
fisubs
aaa
mul
cmp
pop
jne
mov
shll
out
inc
xlat
pushf
sbb
icebp
jo
jg
xor
jle
xor
ret
lret
mov
in
lret
and
in
or
imul
in
rcr
sbb
fistpl
jmp
cwtl
dec
jns
loopne
jge
push
push
frstor
mov
outsl
pop
ret
add
fsubs
sbb
pop
xchg
test
iret
lahf
and
cmc
lods
mov
sahf
aad
mov
aad
inc
xor
imul
lds
shrb
je
aad
insl
jmp
inc
fwait
inc
dec
inc
sahf
lock
mov
mov
ja
loopne
fcom
fs
out
inc
repz
repz
adc
roll
lret
stos
in
jp
xchg
mov
imul
jge
pop
cmp
mov
ret
lds
cmp
ret
push
lods
in
and
lea
mov
std
jne
in
jnp
xchg
je
negb
clc
add
das
test
sbb
or
addr16
lret
clc
xor
xchg
js
cmp
or
mov
xor
ja
sub
push
sub
mov
mov
fisttpll
aaa
sub
into
loop
jecxz
pop
popf
add
dec
push
enter
sbb
jb
shlb
mov
lret
push
aaa
cli
pop
dec
out
icebp
sbb
addr16
in
push
cmp
es
movsl
psllw
iret
les
cmp
sbb
or
mov
cmp
adc
fidivrl
pop
les
scas
and
shrb
mov
and
out
add
mov
ficoms
pop
mov
das
and
in
mov
outsb
out
sub
ret
arpl
dec
or
or
rol
sbb
fwait
rcll
mov
shl
and
insl
and
pop
popa
xchg
inc
or
mov
repz
lds
jecxz
xchg
test
push
mov
fisubl
lret
icebp
outsw
sbb
cltd
fistpll
es
ret
loope
add
sub
cmp
out
mov
inc
sbb
cmp
imul
mov
xchg
incl
enter
popf
enter
sub
inc
adc
lods
xchg
cmp
nop
xor
out
cmp
addr16
cmc
adc
push
push
pop
inc
sbb
cwtl
push
cmp
scas
imul
in
aaa
mov
adc
jbe
in
jp
and
jb
lds
lods
add
jns
adc
mov
xor
mov
mov
sbb
and
sbb
xchg
inc
pop
jnp
aad
or
clc
dec
xor
pop
dec
cwtl
leave
das
lods
cli
frstor
dec
pop
pop
push
jp,pt
xchg
xor
lds
cmp
sub
jg
xchg
in
ja
call
mov
aam
add
dec
outsb
clc
xchg
mov
xchg
ja
mov
adc
xor
push
xchg
dec
stc
imul
das
rorl
pop
test
test
mov
mov
inc
mov
test
sbbl
jns
xchg
fidivrs
paddw
stos
push
std
lods
mov
xchg
pop
fdivrl
adcb
aam
daa
push
jmp
inc
pop
push
dec
clc
fidivrl
aas
daa
inc
jo
push
and
pop
or
int3
in
repz
stc
pop
push
cmp
loop
dec
test
dec
inc
scas
adc
xchg
mov
cltd
inc
dec
and
dec
notb
xchg
lods
mov
in
lahf
push
loop
das
ljmp
lock
cltd
mov
sub
fcoms
mov
shll
cmc
inc
int3
add
xor
xor
lods
lret
adc
mov
das
in
cmp
aas
test
jno
div
inc
in
xlat
subb
test
jne
jp
jge
sbb
mov
push
jle
mov
xchg
into
push
paddd
je
ret
pop
sti
sbbb
push
pop
cmpsl
stc
fidivl
test
lahf
fmuls
ret
mov
xchg
sbb
and
jo
mov
jnp
repz
or
or
adc
mov
and
test
pop
imul
inc
enter
filds
fwait
xchg
es
mov
xor
incl
push
fstl
je
frstpm(287
inc
out
pop
jg
and
pushf
cmp
ror
lds
add
add
add
sahf
inc
rcr
repnz
cmp
adc
cmp
jno
jae
aam
push
sbb
das
arpl
push
mov
mov
bound
lods
arpl
test
lods
sbb
lcall
stos
test
mov
push
jp
data16
or
fstpl
sbb
cltd
jge
aad
cmp
aas
xor
aam
sub
scas
add
add
inc
push
out
push
xor
cltd
das
out
or
stos
cld
aaa
jb
ds
sbb
xor
sub
jb
movsb
push
lods
pop
stos
xchg
loopne
adcb
ret
incb
jb
bound
pop
xchg
movsl
push
jae
outsl
mov
add
dec
out
out
cld
xchg
popf
mov
dec
and
aad
mov
loopne
out
mov
mov
cmp
jne
mov
repz
jbe,pt
fstl
pmulhw
mov
dec
imul
push
ljmp
cwtl
js
fistpl
add
pop
sub
lods
sbb
cltd
jp
sbb
cmpsl
jb
add
push
mov
add
pop
test
mov
mov
lea
and
adc
jecxz
loopne
sti
mov
fcoms
adc
ds
dec
xchg
dec
mov
sbb
cmp
popa
fwait
repz
bound
inc
jle
sub
lret
std
loope
mov
lods
jecxz
shr
push
sub
and
mov
mov
fmull
insb
or
iret
repz
xor
sti
xor
sbbb
pop
movsb
js
stc
push
fwait
mov
data16
or
xlat
call
in
test
cmpsl
rcrl
push
out
mov
inc
dec
add
xor
add
adc
cs
cmp
lds
sti
mov
mov
mov
pop
popl
es
cltd
mov
fsubr
push
jne
in
in
imul
inc
cmpsb
leave
sub
mov
stos
sbb
jo
popa
xor
test
idiv
enter
xchg
push
lds
pop
rclb
je
cli
jae
adc
dec
cmpsl
lea
sbb
mov
add
adc
in
lret
cmp
jl
jbe
push
xchg
or
repz
push
fldcw
jns
mov
and
adc
nop
xchg
jns
push
sub
testb
pop
ret
jg
xchg
addr16
bound
addr16
sbb
inc
jecxz
repz
fwait
lods
xor
aad
mov
add
push
movsb
fs
sub
lahf
out
fstpt
and
mov
mov
mov
insb
daa
push
clc
sub
sub
pop
stos
and
add
mov
lock
xor
mov
jg
push
rolb
pop
inc
mov
sbb
std
xchg
adc
add
fnsave
mov
push
fists
jg
es
dec
xor
fidivrl
fsubl
repnz
adc
rorl
adc
imul
mov
jecxz
fildl
xlat
xchg
inc
arpl
std
sbb
inc
push
inc
xchg
mov
jl
mov
add
sbb
aaa
popa
cli
andl
jae
sub
inc
pop
ljmp
mov
cltd
in
outsl
pop
repnz
xor
mov
loop
jne
ljmp
push
jge
aas
lret
pop
addr16
jecxz
inc
stos
push
push
mov
pop
inc
xchg
popf
inc
call
movsl
jns
inc
cmp
jmp
popf
faddl
mov
xor
clc
popa
xchg
out
pop
scas
enter
add
xor
pop
inc
dec
icebp
xor
lcall
xchg
fdivrs
loope
sbb
xchg
or
in
pop
push
mov
ret
inc
clc
lret
in
inc
adc
nop
push
sbb
hlt
mov
leave
dec
xchg
or
fwait
adc
xor
in
mov
test
mov
jmp
data16
mov
mov
loop
ret
in
or
hlt
push
mul
pusha
jge
scas
xor
fisubl
push
pop
sub
xorb
outsl
arpl
cmp
mov
xor
neg
push
enter
shlb
cli
lahf
or
mov
cmc
je
mov
lods
xchg
mov
xor
cmp
push
sub
dec
test
ret
imull
lcall
repnz
mov
pop
shll
push
and
lock
or
imul
cmp
inc
aas
mov
xor
add
sub
jl
mov
dec
lds
adc
xor
lahf
pusha
and
push
pushf
ds
je
push
cmp
mov
ret
cmp
or
ss
popf
pop
imul
lods
iret
ret
jb
cmp
insb
hlt
push
and
pop
xorl
jmp
and
jle
dec
stos
popa
push
inc
add
jg
inc
push
mov
pop
push
jbe
mov
xor
loopne
fmulp
inc
jl
pop
or
or
int3
test
sub
xchg
push
divl
fcmovnu
mov
xor
xor
and
dec
aaa
out
rcrl
addb
imul
or
fimuls
rolb
ret
ss
aas
iret
mov
dec
ja
add
imul
flds
or
int3
stos
jl
and
rcrb
addl
lods
mov
repz
pop
or
sub
rorb
pusha
xchg
ja
pop
mov
mov
sbb
int3
std
dec
iret
loope
push
fldt
cmpsl
imul
cld
add
test
lahf
xor
xchg
cmp
cwtl
int
sahf
xchg
rol
pop
push
ficoml
fldcw
data16
cli
jmp
pop
dec
jmp
pusha
das
xor
pop
sbb
mov
testb
dec
int3
mov
out
sub
aaa
inc
leave
push
movsl
lret
lsl
movsl
test
mov
dec
jecxz
nop
xchg
lock
loop
out
addl
inc
mov
aam
int
add
inc
hlt
sarb
mov
loope
xchg
test
and
lret
test
add
fs
movsb
lods
addr16
in
xchg
stos
push
js
adc
push
fwait
sbb
add
xchg
les
cmpsl
pop
xchg
cmp
and
out
popf
loope
fwait
data16
jo
dec
or
mov
pop
inc
xchg
stos
daa
pop
das
ret
mov
cltd
mov
pop
xor
clc
aas
dec
push
or
hlt
cmpsl
leave
push
ror
in
pushf
dec
loopne
and
sub
jnp
shll
and
xlat
mov
sbbb
lods
clc
rcrb
je
fimuls
sub
gs
test
sbb
add
ret
cmp
ret
adc
adc
or
test
iret
xor
out
sub
jb
insl
jmp
data16
adc
or
sub
xchg
scas
leave
sub
xchg
call
push
mov
ffree
jle
mov
push
push
jg
dec
mov
and
shlb
imul
movsb
imul
shl
subl
sbb
addr16
les
rcl
sbb
dec
mov
fildll
add
cmp
jno
sbb
cmp
ret
xor
pop
sbb
sbb
aas
or
jl
rcl
fs
ret
mov
shrb
push
push
insl
add
xchg
shr
stos
or
xor
js
and
and
mov
aas
movsl
mov
mov
push
ljmp
mov
jmp
stc
out
aas
movsl
jle
arpl
mov
inc
xlat
sti
sub
shll
and
and
or
jo
or
es
test
cmp
inc
loopne
nop
pop
sbb
xchg
iret
xchg
iret
jae
test
xor
into
fistpll
adc
je
inc
lods
aaa
ja
mov
mov
call
jnp
and
cs
push
shl
ret
pop
sarb
out
cmp
mov
aaa
test
scas
add
and
dec
jbe
sbb
mov
daa
lods
cmp
cmpsb
jnp
push
and
lds
dec
stc
ja
xlat
xchg
ljmp
in
inc
in
ds
mov
cmc
daa
fildl
xchg
or
or
ds
fcoml
scas
xor
dec
sub
loopne
dec
mov
jmp
push
mov
adc
int3
mov
pop
faddl
sbb
sbb
icebp
js
das
aad
pop
rolb
test
pop
ds
cs
shlb
lds
pusha
fmuls
popf
jb
scas
in
add
pop
dec
cmp
fistl
xor
jnp
loop
aaa
inc
mov
loopne
sub
stos
lret
push
loope
mov
cmp
xchg
push
cwtl
jmp
mov
push
dec
sub
mov
insl
mov
ror
jle
xor
ret
fistpll
arpl
dec
sub
sub
fisubl
mov
rorl
into
int3
push
xchg
iret
addb
xchg
addr16
or
pop
es
push
out
je
stos
mov
fsubrl
cmpsl
pop
dec
pop
mov
mov
fcmovb
xchg
lret
inc
pop
jno
cltd
shlb
push
jne
in
mov
xlat
popa
popa
leave
push
nop
call
sbb
or
jp
adc
icebp
pop
sbb
shrl
mov
rorb
sbb
cmp
test
jp
in
imul
fnsave
int3
sti
sbb
dec
xchg
pop
mov
aam
setle
cmpsl
mov
push
mov
sbb
sahf
push
jno
xchg
jle
fiaddl
push
popf
in
es
xchg
test
mov
loope
xor
adc
lods
stc
aam
ja
sbb
cmp
jmp
out
out
jmp
mov
lea
mov
mov
xor
dec
sub
push
out
mov
inc
ss
xchg
sbb
int3
fimuls
pop
jb
adc
jmp
sbb
mov
jg
push
sarb
pop
cmp
hlt
lret
mov
add
das
adc
imul
std
pusha
addr16
into
xchg
mov
cmp
sbb
out
les
pop
ds
je,pn
ljmp
aaa
dec
sub
pushf
dec
inc
out
lds
jnp
xchg
outsb
adc
inc
insl
outsb
icebp
nop
iret
sub
subl
sub
test
pop
mov
popa
cmp
push
out
jge
jns
aad
xchg
xchg
xor
and
testl
test
adcb
jb
or
xorb
lahf
fstl
sbbl
scas
and
add
jb
xchg
pop
and
jbe
sti
push
add
jle
jne
xchg
inc
push
lret
pop
adc
adc
ja
xor
lods
xor
gs
push
push
mov
dec
insl
sub
adc
and
leave
ret
ss
jbe
out
cmp
cs
sub
enter
push
pop
test
inc
ja
out
frstor
movsb
icebp
sub
xor
lret
test
notb
mov
push
inc
shlb
pop
push
jb
cmp
rol
sub
test
test
das
in
pop
xchg
rclb
xchg
outsb
mov
pop
mov
inc
in
arpl
jnp
insl
xchg
or
and
popl
dec
icebp
sub
mov
pop
add
je
popf
mov
jl
or
mov
incb
cmp
stc
pop
push
mov
mov
push
out
mov
pop
lea
push
push
ja
mov
jp
nop
xor
js
js
icebp
sbb
push
mov
dec
stos
push
cmc
dec
pop
fists
and
shlb
sti
pop
movsl
adc
or
cmp
xchg
mov
outsb
dec
and
adc
sub
aad
jo
mov
in
and
mov
lret
rcl
mov
lods
cltd
adc
lret
clc
cmp
mov
test
rcrl
bound
sub
sbb
inc
test
jne
add
icebp
pop
dec
ljmp
dec
inc
sbb
cltd
lret
sub
and
mov
mov
xor
push
add
aas
pop
jmp
xchg
jecxz
xchg
repnz
loope
lret
mov
dec
dec
sbb
mov
sub
inc
daa
pop
xchg
out
mulb
test
ja
sub
mov
ja
jbe
sbb
stc
stos
adc
jbe
add
fists
sbb
mov
add
fldenv
popa
insb
mov
dec
xor
mov
mov
test
iret
lcall
cltd
aad
and
dec
jge
cwtl
lret
pop
hlt
mov
sub
sub
xchg
inc
shrb
add
dec
popf
aas
sub
pop
jnp
mov
out
in
movl
je
or
cmp
jge
cs
xchg
xchg
inc
pop
cmp
mov
psrld
fisubrs
call
push
pop
outsb
addr16
stc
and
sub
roll
cmp
inc
repnz
insl
loop
add
movb
xor
or
lock
lea
test
out
sub
pop
pop
mulb
or
dec
test
lret
sbb
fnstcw
ret
fxch
sti
das
xchg
lret
dec
lret
ja
mov
call
ss
test
cs
loop
dec
fistpl
dec
lret
adc
pop
cmp
mov
push
stos
in
push
gs
xchg
out
pop
cmp
mov
push
aad
mov
iret
xlat
ds
push
dec
aas
inc
int3
push
jle
or
xchg
sub
jb
dec
jecxz
icebp
pop
jge
jge
icebp
sub
mov
not
fmuls
pop
scas
xchg
and
pushf
add
add
mov
int
fisubl
and
setge
bswap
push
inc
xor
adc
add
mov
leave
inc
adc
add
ficomps
push
add
mov
and
or
roll
in
lock
imulb
test
loope
icebp
shrb
push
mov
aad
mov
outsb
jp
pop
add
rcl
dec
add
imul
inc
addl
popa
insl
ljmp
imul
mov
orl
add
xchg
jo
jo
cmpsl
loopne
mov
dec
not
push
shl
jbe
inc
inc
mov
mov
mov
mov
or
push
neg
dec
pop
mov
gs
clc
jg
sbb
dec
lds
jmp
or
lret
xor
xor
mov
mov
inc
xor
xchg
sbb
test
mov
into
pop
or
push
mov
cmpsb
jo
arpl
imul
cld
xchg
nop
call
fnstcw
sbb
xchg
and
xchg
inc
je
lret
ja
enter
hlt
scas
add
jno
dec
fpatan
cmpsl
rolb
push
mov
jl
roll
js
jle
lock
mov
and
sahf
lock
inc
sbb
sub
xor
gs
fbstp
js
test
lea
jmp
or
jl
mov
movsl
mov
mulb
test
rcll
les
lea
cmp
sbb
or
mov
add
in
jp
iret
decl
dec
cmp
mov
mov
rclb
cli
xchg
pop
mov
dec
movsb
sbb
cmc
cmp
pop
pop
lahf
mov
jle
xchg
sbb
arpl
dec
cmp
das
mov
int
rolb
lret
cmp
lods
ret
ret
mov
test
scas
adc
arpl
pop
or
pop
lods
xchg
outsb
jno
mov
ret
push
lret
add
repnz
xor
scas
fstl
addb
loope
sub
aas
mov
mov
xchg
shrl
cmp
mov
mov
xor
mov
out
into
fldl
push
and
aaa
mov
lahf
add
lods
aam
loop
aaa
addb
pop
jbe
fs
js
dec
xlat
jecxz
mov
and
or
fucomip
mov
jne
aas
inc
dec
mov
xchg
xchg
or
mov
popf
enter
cmpsb
xchg
out
pop
mov
xor
mov
mov
mov
push
sub
ds
pop
dec
js
loopne
clc
aad
inc
sbb
loop
adc
out
insb
iret
and
cmpsb
mov
dec
sbb
hlt
loop
int
gs
fnsave
sub
scas
pusha
lods
mov
pop
cmpb
in
cmp
jne
xlat
xchg
and
hlt
adc
filds
sub
popa
xor
negl
shll
fwait
mov
ljmp
mov
pushf
dec
cltd
xchg
add
fistps
test
mov
xchg
sbb
imul
cmp
mov
nop
shrb
ret
into
das
jns
xchg
loopne
je
mov
inc
jmp
mov
gs
test
jmp
mov
jp
test
mov
dec
inc
in
popa
dec
pop
pop
mov
xchg
fadds
jmp
xor
lock
push
push
imul
sbb
or
repz
test
lahf
test
mov
cmp
into
mov
jo
adc
dec
adc
inc
mov
in
jp
pop
int3
rcll
pop
and
push
dec
jns
loop
emms
movsl
leave
cmpsb
jmp
in
inc
jge
out
mov
pop
ficoml
or
aam
out
mov
inc
sub
cmpsb
in
lcall
in
mov
cltd
arpl
sbbl
sub
mov
add
cli
in
mov
mov
jns
jmp
mov
add
insl
sbb
push
lock
sahf
cmpsl
mov
movsl
shlb
sub
push
or
das
xor
cmp
sbb
pop
fcomps
adc
lock
jo
repnz
mov
stos
mov
pop
aam
cs
mov
daa
pop
test
jmp
pop
sub
rcll
sbb
and
test
mov
daa
push
shl
add
imul
inc
mov
pop
movsl
rcrb
jae
aam
xchg
jns
data16
xor
mov
add
ss
xor
xchg
inc
inc
ret
inc
pop
jnp
and
sub
xchg
testb
jae
mov
mov
repnz
and
sti
loop
jo
sub
cmc
frstor
data16
mov
int3
pop
enter
mov
ljmp
imull
movsb
cmp
subl
or
push
shlb
cmp
push
in
xor
push
adc
insb
dec
sbb
rcr
daa
imul
jl
clc
xor
xchg
outsl
sbb
xchg
je
mov
ret
sub
add
test
shlb
mov
mov
andl
mov
movsb
aas
cmp
push
xor
lret
idivl
repz
repnz
rcll
in
inc
frstor
mov
xor
jns
daa
popa
leave
xor
xlat
lret
push
pop
adc
leave
lcall
mov
imul
pop
adc
xor
or
jecxz
nop
aam
cmpsl
enter
dec
inc
fbld
adc
and
test
pop
ret
jns
aam
mov
testb
mov
fstps
xchg
lahf
pusha
fildl
pop
mov
inc
inc
aad
xor
xor
sbb
leave
jns
mov
and
rcll
cwtl
dec
je
inc
adc
jne
cs
scas
dec
xchg
xchg
mov
es
fistps
pusha
call
add
mov
movsl
adc
aas
addb
fisttpl
shll
imul
and
sbb
add
mov
jno
int
push
inc
mov
int3
jnp
jb
add
in
dec
or
in
dec
sbb
sbb
roll
shl
subb
cmp
movsl
sbb
push
add
and
sub
lods
loopne
hlt
push
adc
das
sti
xor
subb
addb
pop
nop
mov
mov
iret
xchg
sub
fisttpll
jns
imul
sub
test
push
push
cmc
xor
mov
scas
push
jp
cmpsl
in
mov
inc
imul
adc
pop
jmp
mov
pushf
ret
popf
pop
movsl
mov
shrl
or
rcll
mov
jns
or
xchg
dec
sub
arpl
bound
mov
in
bound
inc
repz
add
mov
cmpsl
aaa
div
push
jne
adc
pop
int3
and
lahf
inc
movsl
xchg
jb
add
jbe
push
sub
decl
cmc
shll
mov
or
fwait
sub
arpl
nop
jg
stos
in
adc
add
ss
fdivrp
add
dec
adcb
ljmp
cmp
cmc
test
mov
rcrb
xor
repz
pop
xchg
loope
lods
cmp
mov
jo
out
mov
adc
sbbl
mov
fmulp
push
pushf
ret
mov
push
test
lea
movsl
negl
jbe
sub
jnp
cmp
cmp
xchg
aas
mov
jecxz
inc
or
add
mov
inc
in
jbe
mov
ficoms
imul
idiv
subl
inc
pop
cmc
pop
repnz
mov
shr
cmc
lcall
cmp
movsb
jno
dec
mov
and
sub
mov
std
fcoml
pushf
lock
mulb
jge
pop
pop
jmp
lods
insb
stos
xor
insl
mov
cmp
xchg
test
popa
in
add
jecxz
push
aaa
outsl
iret
xchg
xor
adc
psubsw
out
ret
inc
jnp
or
jbe
dec
fisttpl
ret
inc
mov
into
adc
in
jae
data16
add
mov
in
movsl
cltd
jbe
sub
out
repz
cmp
mov
sub
push
popl
insb
lret
sbb
popf
gs
inc
adc
push
adc
cmp
jns
xor
repz
in
js
fidivrl
push
out
jmp
dec
ja
sbbb
push
repz
mov
mov
scas
loop
dec
aas
jo
clc
popa
xchg
cmp
mov
pop
popa
jecxz
mov
int3
mov
push
jno
adcl
fistps
lret
bound
and
sbb
cltd
pop
leave
cltd
scas
out
xlat
pop
push
dec
in
imul
or
repnz
jb
xor
xchg
addr16
mov
mov
push
push
mov
inc
push
xchg
push
movsl
lods
je
inc
mov
inc
les
or
out
sbb
shll
mov
xchg
iret
stos
shrl
xchg
mov
decb
sbbb
push
std
sub
aad
mov
sbb
aam
add
sub
push
xor
fldcw
pop
xor
loope
sub
clc
das
push
mov
jmp
lock
inc
and
jb
jl
movsl
dec
std
imul
fs
ret
lds
leave
fdivp
add
lret
outsl
sbb
jnp
mov
lea
mov
in
sub
mov
push
cmp
push
cmp
sub
mov
push
cwtl
jne
insl
adc
mov
aaa
repz
test
push
adc
ss
dec
xchg
dec
dec
lret
sub
sub
and
adc
sbb
adc
enter
aad
stos
mov
popf
test
jmp
mov
sub
daa
pop
shll
ja
clc
xor
dec
test
lcall
jmp
cs
cmp
push
mov
jg
movsb
ficomps
pusha
out
dec
lcall
shlb
push
bound
fdivrl
repnz
cwtl
sub
out
jbe
xor
and
mov
sbb
lret
jmp
gs
pop
dec
jnp
adc
ds
test
aad
mov
repz
and
inc
jecxz
jle
push
jo
sbb
dec
sbb
or
ljmp
mov
mov
add
pop
mov
mov
test
or
popf
in
xchg
add
and
push
jno
jae
pusha
dec
push
out
dec
mov
cmpsl
xchg
outsl
inc
rorl
push
sahf
dec
adc
pusha
lahf
sub
pop
or
clc
dec
fisttpl
push
in
jge
or
push
xchg
xor
repz
add
pop
outsb
adc
in
push
lret
dec
xor
sti
dec
push
xor
push
outsb
sbb
adc
inc
ljmp
sbb
jmp
subb
and
lock
cmp
push
or
cld
ror
dec
xchg
mov
mulb
imul
cmc
inc
sub
and
inc
lret
cmp
das
adc
aaa
push
imul
inc
inc
hlt
dec
rorl
lods
add
ret
repz
xchg
mov
adc
mov
fsubrs
ja
nop
push
sbb
ds
add
sbb
les
repz
push
mov
and
loopne
aam
std
sbb
mov
sub
sarl
test
or
push
push
or
add
jo
lods
push
mov
mov
arpl
push
and
aas
push
ret
mov
lahf
cmc
xchg
aam
int3
test
sbb
movsl
fs
leave
push
dec
jbe
sbb
mov
add
push
outsl
sbb
jge
lret
imul
lcall
fdivs
sub
jmp
jl
jne
ret
xchg
xchg
subb
icebp
add
jp
adc
sbb
inc
mov
lods
mov
xor
mov
xchg
jmp
inc
sbb
out
shll
loopne
push
adc
sub
addr16
dec
mov
mov
jb
or
js
pop
cwtl
fisubs
mov
dec
dec
jns
dec
adc
and
dec
mov
out
repnz
stc
mov
in
lret
icebp
xlat
fucomip
into
aaa
pop
clc
push
outsl
mov
inc
or
push
test
inc
int3
shrl
cmpxchg
sahf
rorb
xor
das
mov
fbld
fidivrs
xor
outsb
mov
sbb
lods
call
divb
push
add
lcall
lods
data16
imul
xchg
mov
rcll
mov
aad
inc
mov
movsb
cli
shrb
shrb
test
pop
mov
mov
jno
sub
cwtl
in
push
repnz
sbb
hlt
insl
or
cwtl
jp
add
fdivrs
out
sub
xor
cmpsb
sub
pushf
mov
mov
stos
ja,pn
xchg
xchg
pop
aam
mov
sbb
push
xchg
and
and
and
add
fstps
or
popf
sbb
lret
dec
arpl
add
push
mov
mov
loop
div
outsb
subb
xchg
loopne
or
inc
sbb
cmp
adc
dec
xor
sbb
fnsave
and
js
popa
or
push
xor
popa
add
pop
rcrl
dec
mov
sbb
dec
lods
dec
popa
ds
dec
popf
call
jo
shrb
repz
sti
imul
fmull
dec
lea
stos
and
fxrstor
fnstsw
dec
je
insl
and
push
push
xor
loopne
cmc
das
out
aam
aam
sbb
out
mov
loope
ds
sbb
sahf
fisttpll
pop
fnop
insb
xchg
cltd
cmp
iret
ds
fdiv
jne
icebp
lret
mov
sti
jb
push
into
dec
mov
nop
std
fldl
leave
push
adc
dec
jo
push
xchg
stos
cmp
push
pusha
xchg
iret
popf
jle
icebp
cmp
cld
insb
loopne
cmp
pop
test
cmp
aaa
xchg
lahf
mov
pop
sarl
add
movsl
cli
pop
pop
movsl
addr16
lcall
aam
fiaddl
addb
push
int3
shlb
outsb
pusha
and
pop
mov
sub
adcl
je
sub
and
xor
push
cmp
loop
lret
fidivl
adc
insb
dec
je
rcrb
js
inc
mov
jnp
lcall
ljmp
ja
cmp
sub
popa
mov
mull
sbb
aas
sub
repnz
iret
incl
mov
in
int
pop
inc
imul
push
out
lods
and
scas
push
inc
mov
in
fnsave
shr
jp
xchg
cmp
xorl
or
jno
push
cmp
dec
rorl
and
jecxz
in
lods
in
push
loope
push
mov
repnz
push
out
cmp
mov
add
insl
rcl
jecxz
push
lret
xor
sbb
ja
pop
sub
mov
sub
jbe
sub
dec
inc
cltd
loope
adc
push
fwait
and
jb
mov
ret
xchg
in
or
out
je
orl
pushf
sbb
arpl
jno
out
shlb
out
cltd
imul
dec
ret
mov
adc
add
adc
ficoms
and
mov
and
lret
iret
jne
push
rcr
add
mov
sbb
clc
xchg
inc
into
mov
pusha
out
outsb
dec
int
mov
or
das
or
sbb
outsl
or
and
dec
inc
cwtl
pop
and
fsubrl
push
sub
shl
cltd
inc
cmp
pop
repz
pop
enter
adc
xor
add
les
in
vmovntps
shlb
imul
inc
pop
test
mov
adc
pop
adc
jecxz
lods
cs
jl
adc
xor
ret
imul
dec
lcall
xchg
xor
sbb
mov
xor
movsb
lds
push
sarl
sub
cmpsb
insb
in
sahf
sub
jne
in
and
jns
and
fiadds
lret
in
push
pop
ss
mov
scas
mov
rorl
lock
inc
or
push
lods
dec
rolb
insb
pop
mov
pop
fistps
aad
mov
subb
cmp
es
or
mov
pop
sbb
test
inc
mov
mov
push
and
cmpl
jge
cli
add
int
pop
scas
push
pop
es
adc
outsl
imul
call
or
jp
cli
pmaddwd
out
sbb
jb
int
mov
or
xchg
push
dec
test
dec
sub
cmpsb
mov
jno
imul
enter
inc
gs
int
or
pop
sbb
ja
sbb
inc
in
dec
aam
mov
pushf
mov
ret
jge
insb
inc
inc
lret
mov
daa
enter
loopne
or
ud2
aaa
mov
das
ja
das
xor
out
dec
mov
decb
cmpsb
enter
xchg
xorb
pop
loop
sahf
jb
bound
sbb
inc
or
add
mov
dec
mov
outsb
pop
adc
leave
jle
insb
mov
mov
mov
and
cmp
pop
call
insl
pop
jp
or
adc
adc
xchg
pop
lea
sub
mov
rorl
arpl
daa
mov
cmp
mov
sti
js
jl
dec
cmp
pop
lahf
sub
test
adc
sbb
hlt
dec
sub
lods
adc
lock
cmp
adc
adc
shrb
ficomps
or
mov
je
sub
ret
outsb
call
push
sti
ljmp
jg
push
popa
push
inc
jae
repnz
mov
repnz
fwait
cmpsl
xchg
ljmp
scas
mov
and
fildl
push
cmp
insb
sbb
fnsave
test
aam
enter
push
dec
test
nop
sbb
adc
adc
lahf
test
adc
in
stc
sbb
test
enter
arpl
call
add
outsb
test
mov
xchg
or
add
iret
fldt
mov
pop
es
outsl
pop
sbb
push
or
in
sbb
pop
lods
mov
arpl
push
xchg
sub
push
call
inc
test
sbb
shlb
push
mov
pop
cmp
sbb
sbb
xchg
and
lea
push
jle
and
pop
shll
pop
cmp
adc
inc
aad
xor
movsb
outsl
out
fsubp
mov
mov
jne
mov
repnz
add
stos
mov
ja
std
enter
dec
lahf
push
jg
test
push
hlt
in
adc
and
inc
ljmp
dec
and
imul
jnp
sub
jecxz
jecxz
cltd
nop
lcall
push
jp
push
out
sbb
xchg
dec
dec
call
mov
sahf
adc
pop
xor
cmp
xor
adc
pop
pop
sbb
mov
lock
sbb
pop
push
jle
movsb
adc
in
inc
xchg
aaa
adc
icebp
xchg
push
jmp
mov
out
adc
das
hlt
aas
ftst
and
jge
addl
sbb
iret
adc
add
xchg
pushw
xor
cmp
push
addr16
push
ds
test
imul
lahf
sbb
or
cmp
jae
loopne
dec
dec
xor
loopne
mov
pop
mov
cmp
cmp
cli
pop
fs
dec
pop
push
ja
aas
xor
inc
test
sub
xchg
mov
or
fcmovb
idivb
mov
xor
jmp
mov
fcmovne
jle
add
mov
mov
xor
and
mov
cmp
push
adc
sub
fwait
jge
xchg
push
mov
pop
sbb
and
mov
iret
inc
lea
pop
rorb
ror
xor
out
neg
and
pop
cmp
sbb
adc
daa
ljmp
lods
gs
cmc
std
inc
lret
fs
mov
int3
arpl
adc
cmpsl
ss
rol
data16
xchg
jnp
xor
xor
xor
xchg
sbb
or
in
adc
cmc
leave
arpl
or
mov
mov
xchg
into
sti
dec
hlt
imul
sub
shll
daa
add
aam
nop
or
inc
into
xchg
lahf
pop
xchg
leave
cmc
dec
dec
aam
sti
pushf
lret
jecxz
jp
bound
jo
cmp
cld
ljmp
cld
jge
in
loopne
pop
stos
inc
mov
push
fbstp
jo
scas
out
cs
aaa
iret
jl
sbb
inc
pop
rcr
mov
xchg
aam
shrb
out
jnp
inc
cmpsl
iret
mov
cmp
dec
dec
imul
dec
int
jbe
inc
nop
insb
jnp
add
fscale
faddp
or
int3
jno
scas
pusha
xchg
cmpsb
dec
mov
xchg
aas
test
stc
outsl
xchg
inc
inc
in
lret
xor
mov
or
mov
and
int3
push
mov
pop
xchg
dec
push
in
push
adc
test
cwtl
and
inc
lcall
test
std
les
sbb
lods
pop
sub
arpl
cmp
loop
jae
push
imul
sbbl
jle
sbb
sarb
mov
sub
jns
and
mov
stos
fdivl
sub
fisttpl
repnz
jmp
jns
clc
mov
fwait
or
mov
out
dec
or
cmpsb
addr16
sub
ja
xorb
lods
and
jl
fiaddl
push
xor
jge
and
data16
loope
int
xor
xor
and
and
dec
fcmovnb
int
test
pop
sbb
loop
or
mov
adc
fwait
lods
jb
push
cs
cmc
pop
push
call
ret
inc
enter
repz
cmp
jnp
pop
into
or
sub
pop
decb
jle
pushf
sbb
ror
pop
mov
ljmp
ljmp
push
jns
jnp
inc
bound
mov
or
push
push
das
mov
xchg
push
js
jb
test
std
sarl
push
jle
sarl
test
push
jg
iret
cmpsb
data16
dec
mov
push
movsl
pusha
add
nop
dec
xchg
ds
ds
cmc
aad
cmp
mov
mov
sbb
inc
aaa
ja
loopne,pn
lret
cmp
or
jb
ret
pop
test
xor
jno
or
outsl
push
out
lahf
je
loopne
mov
ds
sbb
enterw
xor
mov
dec
gs
outsb
adc
aas
cs
daa
sub
insb
ljmp
pop
jp
pushf
push
jb
mov
add
jmp
addl
ss
push
jp,pt
or
xlat
jge
mov
mov
cwtl
and
mull
lret
sbb
sub
mov
cmovns
leave
out
iret
jae
lods
adc
sbb
movsl
mov
sub
test
mov
push
fsubrs
push
clc
mov
andb
push
pushf
mov
mov
sahf
lods
add
xor
orb
ljmp
push
loop
cwtl
arpl
cmp
in
lods
inc
ret
std
test
add
imul
je
cwtl
push
pop
pop
daa
or
movsl
cmp
mov
in
xchg
mov
stc
cmp
adc
fcmovu
lods
ret
mov
shlb
sub
mov
push
dec
adc
rcrl
jg
inc
adc
lods
jno
sub
adc
mov
pop
pushf
nop
xchg
aam
jmp
pushf
pop
cmp
outsl
mov
mov
lret
jl
or
int
out
testl
inc
mov
pop
inc
push
imul
jne
add
mov
sub
inc
ds
pusha
jecxz
jns
fcomi
stos
cwtl
gs
xchg
jl
aad
stc
jne
xchg
das
mov
adc
add
cmp
test
aas
jne
cltd
popa
outsl
mov
and
ja
shlb
je
mov
fdivl
int3
mov
or
lds
add
add
popf
cmc
add
push
mov
or
xchg
push
mov
out
mov
cmp
pop
mov
jns
mov
push
fisubrl
sub
stos
daa
aad
shlb
mov
sbb
arpl
notl
imul
jbe
adc
popa
xchg
sbb
testl
das
outsb
ja
mov
pop
jle
and
mov
cmp
lds
sub
cltd
cmc
jne
stos
in
mov
mov
cmp
dec
out
jmp
mov
xlat
jne
inc
xchg
icebp
mov
loope
jns
scas
js
cmp
clc
inc
xchg
sti
or
jmp
push
adc
sub
out
cmp
mov
jge
sub
loope
mov
xchg
pop
xor
mov
dec
push
jmp
jns
xor
stos
loop
xor
std
fwait
dec
sub
jne
cmc
inc
xor
sbb
inc
or
push
cmp
sub
shll
inc
cmpb
inc
shlb
minps
pop
sbb
jp
push
sti
cld
cmpsb
and
mov
and
pop
push
fldenv
xchg
jo
pop
mov
jg
dec
add
mov
stc
xor
lock
iret
adc
stc
mov
pop
adc
repz
or
push
loop
or
lret
psrld
sbb
fneni(8087
inc
cmp
daa
dec
aad
xor
jecxz
nop
orl
cmp
xor
in
push
lods
cmp
adcb
mov
mov
push
out
mov
imul
aaa
xchg
ss
inc
xchg
in
ret
leave
insl
jecxz
in
jle
je
jb
popa
test
sub
inc
dec
pop
mov
in
iret
mov
cmp
out
jb
jnp
push
out
lods
cmp
into
jle
push
inc
lcall
push
fwait
dec
push
inc
pop
rorb
and
dec
or
push
movsb
out
lea
icebp
scas
aaa
pushf
lods
ret
aaa
int3
lods
pop
sbbb
and
cltd
dec
xor
and
jp
cmpsb
cmp
push
push
fs
cmp
dec
inc
sbb
cmc
and
inc
enter
inc
repz
ljmp
pop
cmc
sub
fwait
inc
cltd
dec
sub
sub
lret
stc
subb
ret
adc
pop
hlt
pop
subb
dec
das
adc
mov
outsb
jle
lcall
fwait
xor
mov
jns
mov
mov
int
xor
pop
cltd
and
scas
jne
jbe
xchg
sbb
add
xor
cmp
fwait
into
and
jnp
sub
out
fidivrl
adc
cmp
imull
cmpsb
mov
dec
decb
ds
neg
in
push
lods
out
adc
test
xor
inc
cmp
mov
push
xor
cltd
test
adc
push
jne
bnd
daa
insl
fsubrs
lret
xor
xchg
aaa
jle
sarb
in
in
dec
stc
lcall
adc
mov
dec
mov
lds
stos
jne
shlb
cli
cwtl
int3
sbb
pop
mov
mov
add
and
movsl
sbbl
out
pushf
mov
add
push
xchg
mov
inc
adc
incb
lcall
add
and
ficompl
lods
imul
adc
push
std
fsubrl
inc
jp
fidivl
mov
ljmp
xchg
int
add
in
push
lods
cmpsb
pop
cmp
jg
in
dec
add
xchg
sbb
lret
pop
movsb
push
add
cmp
mov
pop
push
dec
movsl
lods
ror
dec
imulb
mov
ljmp
popf
xor
jp
xchg
loop
fsubrl
nop
fsubr
pushf
inc
dec
push
jb
dec
andb
push
das
mov
fdivrl
inc
inc
jecxz
stc
outsl
pop
push
sub
fidivl
dec
in
shll
lret
call
js
xor
or
jae
pop
dec
mov
jbe
mov
mov
push
test
fcoms
jno
inc
mov
jle
sbb
ljmp
cmp
rcr
adc
and
sbb
cli
data16
out
sub
test
jnp
push
mov
in
adc
push
ja
jno
jns
mov
push
pop
pop
test
inc
mov
jg
or
fwait
mov
dec
sar
inc
idivb
sbb
loopne
movsb
imul
pop
rcr
mov
mov
mov
bound
stos
push
aas
mov
inc
mov
cli
imul
out
sbbl
xor
stos
pop
pop
repz
ja
xchg
dec
js
jmp
fisubrs
jmp
inc
shll
jle
out
in
mov
mov
test
mov
imul
es
test
and
mov
push
push
das
mov
inc
jl
pop
or
sub
sub
lret
mov
cmp
jmp
lods
cpuid
paddd
mov
fstps
xchg
ljmp
idivb
rcr
std
lock
repz
out
pop
in
mov
pop
hlt
fstps
push
mov
push
clc
stc
mov
cmpsb
sarl
test
pop
push
push
jmp
mov
xchg
test
sbb
cmp
call
jge
or
mov
xor
les
xlat
adc
sbb
cmpsl
leave
inc
ret
inc
test
mov
push
jbe
jno
xchg
std
sbb
test
or
rclb
sbb
mov
cmp
cltd
xchg
das
ljmp
xchg
fwait
andl
xor
xor
lods
mov
dec
xor
sbb
xchg
cmp
in
movsb
je
roll
xchg
xor
adc
inc
out
jae
inc
icebp
imul
xor
push
test
inc
mov
add
inc
xor
sbb
add
adc
shlb
mov
js
int3
fisubrs
or
out
ja
shlb
cmpsl
sbb
sti
inc
mov
xlat
loopne
fs
rorb
pop
iret
out
xchg
in
insl
jno
das
jne
loop
mov
dec
sti
pop
jmp
out
loopne
int3
cmpsb
cs
dec
dec
in
movsb
mov
jmp
jbe
daa
imul
rcl
std
lods
mov
popa
xor
sti
sbb
add
xlat
mov
stc
and
aaa
cmp
enter
mov
test
lret
adc
ds
xlat
push
sahf
inc
js
sbb
sub
xchg
lods
sub
cs
adc
ja
pop
xchg
sub
int3
sub
jmp
dec
and
shlb
movl
pop
imul
out
mov
inc
push
push
push
imul
push
push
aas
push
cltd
jae
xorl
xchg
pop
or
out
cld
jle
into
jle
sti
pusha
xchg
sbb
jne
adc
push
push
push
pop
mov
pushl
fcmovbe
push
mov
out
or
sub
pop
out
lahf
mov
jbe
sbb
xchg
jo
test
jns
push
lods
push
sub
adc
xchg
mov
mov
lea
inc
add
ljmp
mov
and
cltd
in
add
pop
jg
int
dec
mov
stos
daa
idiv
add
imul
fsubr
test
cs
outsb
mov
adc
notl
or
pop
jl
mov
mov
out
out
cltd
cmpl
ret
fistps
fimuls
frstor
push
ret
pop
scas
testb
sarb
in
aad
loope
fiadds
and
addr16
jbe
shrl
mov
push
inc
cs
cmpb
inc
fcmovnb
push
xchg
iret
mov
mov
mov
movsl
addr16
push
outsl
add
movl
outsl
jbe
sahf
cmp
jae
inc
adc
push
je
lods
mov
mov
pushf
xchg
in
in
ljmp
mov
dec
pop
out
and
movsb
in
add
xor
repz
das
sarl
rolb
ds
jae
mov
jno
data16
es
leave
pop
push
mov
movsb
xlat
fimull
push
push
push
roll
mov
mov
pop
pop
cli
popf
inc
add
loop
sub
or
xorl
imul
int3
and
fisubrl
mov
adc
ss
jg
jp
nop
pop
cmp
dec
lret
aam
fmull
cmp
jns
ljmp
jge
cli
fbld
push
in
sbb
pop
arpl
mov
sahf
add
cwtl
loopne
mov
dec
fcmovnu
mov
loope
andb
add
push
sahf
push
cmovs
orb
insl
das
mov
push
or
mov
outsl
mov
mov
push
rol
pop
push
cmpsl
push
mov
pop
add
sub
push
loop
mov
fwait
popf
jne
cli
or
fistps
popf
mulb
andb
scas
mov
pop
stc
icebp
orb
pushf
cld
pop
js
inc
or
dec
les
imul
pop
cmpsl
jno
std
pop
or
mov
or
icebp
mov
xchg
inc
sbb
xor
imul
lret
sbb
adc
cmpl
xor
scas
adc
inc
mov
into
roll
stc
mov
cmp
add
sbb
xor
icebp
ss
mov
inc
jns
jno
in
and
add
test
outsb
das
out
push
pop
xchg
dec
cwtl
lds
scas
stos
int
iret
adc
mov
or
xor
pop
sub
push
or
cmp
mov
and
int3
shlb
cmc
ja
dec
add
mov
mov
loopne
jb
or
fstpl
rcr
push
cmp
lds
jmp
sbb
jmp
xlat
jmp
xchg
push
lds
jge
inc
incb
jo
in
mov
loop
xchg
ret
je
stc
and
add
push
scas
sbb
push
and
loope
sbb
add
shrl
push
das
dec
repz
loope
fs
pop
inc
aaa
and
mov
pop
mov
cmpsl
inc
cmp
push
shll
jne
mov
in
in
test
iret
cmp
pop
mov
adc
out
and
setl
aad
rolb
push
pop
or
fisttps
rol
xor
mov
dec
clc
or
pop
fdivs
into
jl
fcomp
cmp
mov
mov
dec
movsb
test
jbe
or
pop
dec
cs
xchg
in
inc
fdivrs
outsb
insb
cli
dec
sarl
int
mov
lret
sub
loop
xchg
sbb
leave
jbe
cmp
jmp
cmp
or
jp
adc
imul
xchg
ret
daa
test
aas
and
jns
daa
xor
or
cmpsl
std
dec
mov
cmp
jbe
in
xor
clc
in
xchg
cli
push
clc
es
add
mov
mov
jb
pushf
sub
jmp
ljmp
fbstp
and
mov
in
dec
iret
mov
fs
data16
pop
adc
fiadds
add
iret
sub
adc
jno
push
sub
push
xchg
mov
or
add
ds
mov
call
je
jb
and
push
adc
sbb
cwtl
or
sbb
iret
ss
outsb
imul
jecxz
addr16
out
add
mov
rcrb
push
mov
mull
mov
sbb
add
adc
daa
je
out
insl
std
ss
arpl
mov
scas
mov
jbe
imulb
xchg
pop
jmp
arpl
cs
mov
cmp
inc
aad
sbb
and
insl
mov
xor
or
adc
enter
mov
pop
push
and
dec
shrb
fcmovnb
or
enter
jle
jecxz
and
mov
pop
iret
add
adc
insb
std
and
pop
mov
mov
pop
cmp
inc
xor
jb
jl
std
popf
popf
mov
add
adc
sbb
inc
add
jo
mov
pop
dec
icebp
mov
test
and
push
nop
cmpsb
sub
xchg
cmpsb
ret
sarb
nop
mov
sbb
inc
cmpsb
popf
rcl
and
inc
movsb
sbb
adc
push
push
xchg
push
dec
ds
mov
mov
out
pop
pop
jg
mov
or
inc
pop
jmp
or
mov
outsb
in
pop
push
cmc
cmc
sbb
arpl
cmp
std
adc
add
jecxz
in
not
call
mov
and
xor
jo
mov
movnti
fidivrl
push
pop
or
ret
jns
sub
es
clc
les
faddl
cmp
pop
jb
outsb
sbb
out
lret
stc
sub
sahf
and
push
xchg
jns
ret
add
xchg
or
mov
jmp
push
std
sub
xor
or
data16
push
adc
stos
inc
and
sub
iret
inc
rorl
mov
pop
or
and
mov
dec
or
mov
dec
cmc
shlb
ds
push
repz
or
push
enter
jp
orl
xor
mov
lods
sbb
inc
addr16
push
aad
scas
push
jae
jb
in
fnstsw
out
ss
enter
dec
and
add
xchg
sahf
cmp
cld
in
inc
loop
stos
mov
mov
pop
repz
jge
enter
and
xor
enter
faddl
push
push
dec
xchg
leave
push
inc
xchg
jns
daa
inc
into
xchg
jae
sub
sub
and
mov
in
and
dec
lret
lahf
dec
jbe
jecxz
test
gs
lcall
mov
cld
out
cmpsl
or
cmp
loop
inc
lock
out
push
dec
sub
dec
and
sub
rcrb
stos
cli
sub
mov
pop
inc
lds
dec
addb
es
mov
xchg
jne
mov
lcall
mov
xchg
es
mov
int
fwait
loopne
pop
pop
mov
imul
aaa
sbbb
hlt
lcall
dec
push
pop
gs
push
adc
lods
sbb
inc
and
xlat
cmp
pop
std
xor
jb
mov
pop
jp
fisttpl
and
pop
dec
mov
mov
add
jl
loope
mov
cld
adc
rcrl
mov
lret
dec
jno
fbld
test
sub
add
add
out
aad
pop
jbe
js
pop
out
adc
rolb
sub
add
or
jl
xchg
xor
push
pop
adc
cwtl
xchg
sub
movsb
sbb
insl
mov
cmp
fldenv
ja
xor
cmp
push
imul
jmp
or
pop
adc
mov
and
loopne
sub
lret
into
inc
add
xchg
mov
dec
xor
loop
rcrl
cmpl
jmp
mov
inc
cmp
inc
out
inc
jle
add
jle
add
or
push
jecxz
jmp
xor
imul
shl
push
dec
jg
mov
add
imul
adc
imul
xchg
mov
insb
rorb
out
outsl
repz
push
add
cmp
inc
test
mov
push
sbb
mov
movsl
push
lcall
rcrb
push
push
mov
call
inc
popf
push
dec
cmp
sub
mov
pop
fstps
cld
mov
loop
add
icebp
jns
jb
cmp
pusha
lock
and
popf
or
adc
lahf
and
mov
cmp
stc
out
dec
lahf
movsb
pop
pop
sub
ret
push
mov
push
js
xor
lock
cmpsl
shlb
testb
test
popw
fildll
pop
nop
fildll
push
and
sbb
aas
imul
or
jnp
inc
push
shll
add
push
mov
xor
and
push
xchg
into
arpl
xor
cli
subl
mov
or
mov
dec
call
andl
adc
mov
insl
jne
dec
pop
xchg
test
ss
rorb
loope
pusha
mov
stc
lods
mov
cmpsb
xor
testb
push
mov
dec
pop
lret
push
mov
mov
lret
jle
inc
dec
stos
pop
lretw
std
icebp
mov
inc
jo
mov
dec
sub
push
xchg
neg
cli
mov
pop
sbb
sub
fiaddl
popf
lds
sbb
movsl
sbb
or
movb
dec
xor
sub
ror
fdivl
xor
and
push
xchg
xor
xor
imul
ret
jecxz
out
sub
cmp
stc
jae
jge
cmp
sbb
lret
xor
and
push
pop
sub
jo
dec
test
xchg
push
jo
mov
adc
icebp
lock
cmp
dec
ja
outsb
ljmp
xor
daa
push
push
sbb
lcall
xchg
mov
mov
loop
sub
add
daa
mov
loop
pop
mov
stc
sbb
test
je
in
or
jge
nop
mov
orb
sbb
cli
fisttpl
mov
lock
outsb
jg
shrb
push
imul
xchg
or
xchg
push
je
gs
out
adc
imul
fsub
mov
jge
imul
test
mov
push
push
addl
cmpsl
xchg
mov
mov
aas
das
add
js
push
pop
lods
jg
fnstsw
test
out
les
xor
test
ret
nop
xor
inc
jge
out
repz
stc
rolb
mov
sub
push
xchg
jne
and
aas
cmpsl
cld
scas
idivl
mov
inc
test
stc
loop
push
scas
jmp
out
or
or
mov
aas
mov
stc
outsl
mov
test
pop
xor
pop
adc
je
jns
sar
subl
popf
sub
shl
and
sbb
or
inc
test
jp
outsl
ja
sub
cmp
imul
jl
xchg
aam
inc
jbe
pushf
cmpsl
int
lret
cmp
pop
mov
out
mov
push
aad
outsl
cmp
or
add
push
icebp
push
sti
mov
mov
mov
xor
dec
push
adc
cmp
jl
push
insl
pop
xchg
xchg
fwait
xor
and
inc
daa
push
xchg
push
imulb
sbb
rolb
xor
aad
push
bound
das
and
sbb
jecxz
dec
stos
pop
outsl
repnz
mov
imul
daa
pop
imul
jo
adc
js
fsubl
pop
sub
repnz
sbb
push
hlt
test
xor
mov
xor
dec
sti
arpl
rorl
add
mov
hlt
sbb
mov
cmp
shrb
cmp
lahf
jecxz
mov
lcall
pop
push
sarl
jne
scas
xchg
popf
into
hlt
adc
nop
repz
push
mov
mov
pop
int
pop
pop
mov
rolb
push
out
insl
jb
pusha
setp
xchg
jae
or
xchg
scas
into
add
arpl
mov
inc
and
xchg
add
movsl
adc
inc
shll
roll
int
xchg
pop
sbb
in
scas
and
xchg
and
or
mov
inc
mov
cmp
test
sbb
loope
adc
popf
mov
inc
shll
cmp
xorl
pop
jae
aaa
gs
sbb
push
jb
cmp
mov
mov
in
cmpsb
gs
sbb
inc
pop
stc
push
cmpsl
bound
movsb
je
or
or
inc
rorb
cmp
or
dec
test
xchg
push
test
cmp
int3
mov
lret
push
cmc
test
and
mov
mov
push
cwtl
and
add
xor
in
lcall
dec
inc
mov
outsb
push
aaa
xor
imul
inc
scas
mov
push
xrelease
push
adc
pushf
sub
enter
xchg
pop
add
into
add
xchg
es
cmc
testl
pop
and
enter
push
ds
mov
mov
rcrl
jp
into
ret
mov
mov
outsl
call
cmp
loopne
sub
sahf
scas
es
sti
add
sub
shlb
xchg
xchg
add
insb
aaa
mov
ljmp
pop
popf
aas
mov
push
cmc
lahf
lods
add
aaa
aam
and
call
push
pop
xlat
scas
int3
jp
enter
inc
div
or
int
push
sti
ljmp
xchg
ret
shrl
call
add
daa
jmp
shl
xchg
mov
outsl
add
fwait
xor
in
adcb
adc
cmp
dec
and
pop
pop
push
push
addb
xor
xor
pop
fiaddl
jg
outsl
jae
mov
das
incb
loope
add
ljmp
xlat
outsl
lahf
lods
lds
add
mov
std
scas
cs
int3
mov
dec
push
ja
mov
push
adcb
xor
dec
push
jne
xchg
xor
push
push
push
orb
xor
imul
jecxz
and
add
add
stc
xor
push
addr16
sub
xchg
mov
sahf
add
sub
test
loop
leave
scas
add
cli
outsl
pushf
movsl
pop
ljmp
mov
pop
sbbb
mov
aad
sbb
lcall
mov
jne
add
dec
mov
mov
jnp
jno
in
sub
pop
int
psllq
in
bound
hlt
scas
pop
jecxz
rorb
adc
pop
and
shl
shll
sbb
cs
cmpsl
dec
negl
or
lret
test
lahf
aad
pop
fbstp
xor
pop
shlb
xorl
pop
inc
or
pop
std
sahf
dec
cltd
imul
and
mov
xor
aam
lahf
incb
std
add
sahf
loopne
mov
movsl
out
mov
mov
mov
arpl
or
cs
add
dec
dec
mov
adc
jb
into
lds
mov
dec
xor
repnz
push
mov
imul
inc
lods
pop
xchg
sbb
sti
pop
jno
idiv
mov
adc
jne
call
jmp
test
mov
xlat
xchg
lock
outsb
nop
mov
fdivr
xor
xor
sbb
xor
aaa
cmp
lea
test
shlb
inc
jne
les
ss
jl
and
sarl
ficoms
pop
enter
xor
repz
cmpsl
sarb
mov
push
jg
cltd
jnp
mov
adc
test
call
out
in
call
stos
lock
fisttpl
jl
adc
add
imul
mov
mov
dec
js
call
outsl
icebp
pop
mov
pop
aaa
pop
fisubrs
inc
push
pop
out
shll
pusha
mov
mov
xchg
scas
jecxz
mov
pop
jl
jge
mov
pop
icebp
shl
sbb
xlat
fistpl
inc
bound
adc
jecxz
inc
jmp
or
repz
xchg
scas
ret
mov
enter
movsl
cmpsb
mov
inc
popf
js
aad
pop
ljmp
xor
cwtl
les
sbb
or
lcall
pop
popf
fs
mov
loop
cmp
mov
stos
pop
xchg
repz
mov
test
movsl
andb
mov
xlat
mov
dec
sbbb
mov
popa
dec
push
sbbl
lods
push
in
lret
lret
mov
out
sbb
stos
mov
mov
push
xchg
bound
imull
leave
mov
push
stos
jb
rclb
int3
dec
ret
xchg
push
adc
sbb
jns
adc
mov
cmp
and
loop
xor
imul
push
outsb
sbb
sub
fisttpll
sub
dec
gs
mov
loop
cwtl
outsb
jbe
mov
add
add
insb
negb
or
cmp
jg
cmp
je
lods
pop
inc
jecxz
mov
movntps
or
mov
int
sub
adc
mov
iret
cmpsl
aam
mov
addr16
in
inc
mov
jle
adcb
cmp
cli
or
mov
inc
jno
shll
jp
aas
enter
outsb
pop
cmp
lret
inc
pop
and
stos
pop
and
subl
lret
push
cs
and
fsubrs
xorl
jo
out
pop
jnp
xchg
or
movsl
nop
push
jge
mov
xorl
inc
loopne
dec
sub
aad
ljmp
lea
and
cmpsl
int
loop
clc
or
mov
sub
push
mov
subb
jbe
xchg
cs
mov
iret
push
cld
jae
jle
clc
imul
fnsave
ret
fwait
cwtl
lret
xor
lds
adc
jo
shrl
inc
push
rclb
dec
xlat
pop
dec
push
dec
push
loope
testb
dec
mov
jns
insl
push
mov
inc
orb
xadd
lods
jae
fcoml
add
ljmp
fisttpl
cmp
leave
movsb
xlat
data16
cltd
mov
das
dec
hlt
add
xor
les
add
jg
xlat
cmc
sbbl
faddl
cmpsb
data16
mov
clc
jg
mov
loopne
mov
je
push
ret
fs
xchg
mov
and
jno
nop
cmp
aad
add
xor
popa
lods
dec
in
push
scas
push
std
scas
cmp
sub
fiaddl
fistpl
dec
pop
inc
and
mov
cli
outsl
insb
icebp
push
jns
scas
ret
xor
mov
inc
push
push
out
jns
fchs
pop
icebp
clc
fcom
mov
mov
cwtl
mov
test
xchg
inc
leave
xchg
pop
dec
mov
js
sub
xorb
aam
inc
cltd
push
jp
dec
push
or
shll
sbb
push
out
inc
pop
call
cmp
mov
cmpb
stc
ss
lret
jp
cmp
xor
cmp
add
loope
push
or
dec
out
pushf
jne
stos
push
jmp
and
int3
dec
push
out
sbb
pushf
scas
and
cmp
lret
mov
adc
add
call
inc
mov
aam
sbb
cmp
js
stos
inc
xchg
mov
or
lds
movsl
hlt
icebp
or
test
ljmp
scas
or
es
movsl
mov
xor
dec
pushf
fistl
pushf
sub
jbe
fsubl
add
jle
add
scas
or
cmp
xchg
pop
movsb
mov
mov
pusha
dec
push
or
stc
js
xlat
cmpsb
dec
shll
xor
cmpsl
pushf
xor
push
push
call
lret
adc
push
negb
lds
les
dec
xchg
in
cmp
mov
pop
in
mov
mov
iret
shrb
jle
jne
xorb
and
je
mov
test
mov
and
adc
js
pop
movsl
fiadds
out
xchg
icebp
mov
cmp
inc
ljmp
out
pusha
in
pop
dec
cs
rcll
cmpsl
cmp
bound
popa
nop
jb
xor
push
aam
pop
sbb
call
push
inc
xchg
xor
dec
lret
cmp
mov
aas
push
sbbb
mov
xchg
gs
mov
mov
dec
jnp
fdiv
inc
mov
out
test
cmc
fwait
pop
jge
sub
push
and
push
mov
pop
mov
jb
pushf
fsubl
sbb
mov
je
pop
lcall
jae
leave
dec
idivl
stc
std
imul
jmp
push
sti
and
push
stos
aaa
pop
scas
cmp
or
or
cmp
and
mov
movsl
loopne
je
inc
dec
adc
push
into
sbbl
xor
cmpsb
mov
jmp
popf
pop
push
add
cmp
adc
push
and
daa
aad
dec
mov
mov
mov
icebp
fsubrs
ljmp
andl
movsl
lds
pop
inc
xlat
mov
sahf
cmpsl
pop
pop
pop
push
sbb
ret
xchg
pop
enter
repz
adc
adc
int3
mov
mov
movsl
mov
das
adc
or
sbb
hlt
hlt
adc
xor
mov
ret
cmp
ja
jo
mov
inc
addb
or
clc
fsub
ds
data16
xor
insb
clc
aam
or
nop
in
xchg
pop
xchg
fwait
and
inc
mov
outsl
mov
mov
jbe
pop
loopne
sub
xchg
ret
scas
push
adc
mov
or
insl
int3
jne,pt
pop
aas
cs
mov
xchg
mov
sbb
cmp
jne
rolb
negb
and
sub
push
dec
mov
push
scas
aad
adc
out
push
push
lahf
gs
adc
push
sub
add
fistl
inc
adc
ret
pop
mov
dec
notb
std
xor
dec
xchg
clc
scas
mov
inc
jecxz
mov
mov
jo
loope
stos
adc
cmp
push
mov
jp
adc
xchg
mov
insb
pop
mov
push
mov
add
jne
and
sbb
or
push
ja
enter
add
insl
or
xchg
cmp
stos
popf
cli
sub
out
arpl
mov
insl
not
lahf
and
enter
cwtl
aas
incb
iret
shr
add
cld
or
nop
push
js
cmp
or
in
andb
and
clc
push
loope
insb
inc
push
xor
or
ljmp
ja
daa
ret
nop
repnz
aas
xchg
call
xchg
or
sub
mov
mov
pop
inc
jbe
xor
aaa
jae
js
inc
mov
pushf
out
adc
shll
scas
cmp
repz
push
sub
aam
fstl
fadd
mov
rolb
jae
movsl
stos
in
pop
adc
stos
cmpb
cmpsb
add
jl
outsb
and
test
xchg
push
mov
sbb
call
sti
sbb
pusha
in
out
mov
xchg
pop
int
ror
add
repnz
inc
rcr
xchg
mov
loope
sub
push
or
movsl
or
movsl
push
movsl
sahf
int3
or
cmp
push
popf
sbb
mov
xchg
cmp
mov
test
bound
dec
jp
pop
pushf
cmp
dec
push
dec
push
popf
push
xchg
clc
leave
add
ja
add
sbb
xor
out
les
aas
add
lea
hlt
daa
lds
ret
add
cmp
xchg
mov
sbb
orb
jg
sbb
pop
xor
divb
int
cmc
xchg
and
dec
mov
hlt
lods
data16
or
add
xor
out
movsb
inc
push
mov
xchg
and
testb
mov
xchg
es
dec
pusha
mov
out
insb
and
add
mov
jl
es
vcvtpd2dqx
punpckhbw
or
or
jge
or
jle
adc
ret
sbb
mov
or
sahf
dec
sub
jmp
lock
sub
mov
test
out
inc
mov
cli
lods
and
fdivl
dec
loope
ss
push
cmpsb
movsl
stc
in
push
jp
inc
jb
je
movsl
push
push
es
aaa
sub
movsb
adc
and
jbe
ljmp
xorl
sub
mov
leave
dec
iret
dec
xor
arpl
add
imul
ret
scas
hlt
int3
std
pusha
and
adc
jnp
inc
enter
mull
outsb
sub
stos
pop
dec
pusha
aas
sbb
mov
repz
fstps
cmp
pop
pusha
movsb
mov
fcoml
jns
imul
mov
out
call
push
push
jb
ret
inc
lods
pusha
clts
sahf
mov
movb
sub
cmpsl
jle
outsl
test
popl
fs
sbb
sub
jns
stos
popf
ja
imulb
adc
jno
out
stos
cmp
lret
ljmp
bound
mov
jne
in
sub
sbb
push
stos
or
or
outsb
inc
fisubrl
fs
mov
mov
sbb
cltd
jmp
mov
pop
dec
repz
shlb
lahf
jno
test
es
push
fucom
pusha
jb
loopne
test
out
fcomp
jecxz
sub
fistpll
jmp
cmp
aaa
das
cmp
jge
jl
mov
test
imul
stc
stos
cld
push
mov
mov
stc
loopne
sbb
cmp
sub
dec
add
cmpsl
fwait
jge
dec
rcrb
push
mov
sbb
xor
pop
sub
mov
add
xor
dec
mov
repnz
cmp
outsb
outsb
cmpsb
xor
xchg
lock
lock
pop
push
enter
adc
sub
sbb
xor
inc
jns
inc
mov
mov
sub
inc
xchg
incb
jae
and
inc
mov
xor
or
xor
add
scas
stos
popa
cmp
inc
mov
xchg
mov
ret
es
or
dec
adcl
lods
xor
iret
adc
cmp
dec
sbb
adc
daa
lahf
mov
pop
cld
xchg
sahf
dec
adc
mov
pop
or
not
popa
dec
jb
ljmp
push
pop
sahf
in
sub
push
shll
lret
pop
jnp
mov
xchg
sbb
jecxz
lods
cmp
fistpll
jnp
insb
insl
inc
insb
test
rorl
outsb
dec
and
adc
sub
movsb
aam
jle
xor
insl
fnstcw
add
outsl
fs
mov
inc
js
inc
cwtl
dec
popa
lea
xor
jns
fisubs
cmp
ja
jmp
popf
jp
cmp
lea
xorl
repz
jmp
inc
mov
xor
mov
ds
stos
push
push
adc
js
iret
lahf
jbe
push
adc
pop
cmp
aaa
gs
in
ret
cmpsl
pop
negl
lds
loope
mov
ds
sub
scas
xor
imul
movaps
in
sub
lcall
icebp
push
push
test
mov
sarb
fistpl
push
mov
mov
cmpsl
pop
fiadds
mov
fsubrp
xchg
sub
push
xchg
lret
pop
and
daa
inc
loopne
mov
xchg
mov
fwait
push
insl
js
nop
mov
push
add
dec
call
pop
ss
pop
cmp
std
jmp
sub
loop
mov
sub
in
xchg
inc
outsl
sbb
fstpt
pop
pushf
sub
and
outsl
cld
mov
fisttpll
jp
jg
and
popa
pop
lock
add
pop
lods
cmpsb
das
mov
dec
stos
cs
test
neg
add
cld
jl
sbb
adc
pop
and
inc
pop
leave
mov
scas
lods
out
pop
mov
dec
add
sbb
lea
xor
inc
fs
daa
fistl
push
dec
cmc
aad
and
push
fwait
popf
sbb
leave
cmp
ljmp
adc
test
aaa
std
mov
push
sti
jl
xchg
sbb
leave
mov
pop
inc
mov
or
in
mov
loop
mov
sub
pop
movsl
fs
arpl
icebp
push
fistl
scas
xchg
xchg
lahf
mov
push
jae
in
inc
test
or
push
cmpsb
repnz
cmp
jns
cmp
mov
sbb
nop
mov
in
add
loopne
mov
push
in
jecxz
push
lds
gs
mov
and
jle
das
loop
inc
imul
xor
sbb
std
jp
push
mov
pop
add
pop
lahf
or
test
enter
daa
push
dec
data16
pusha
sbb
jo
fidivrl
sub
arpl
mov
insb
lea
inc
mov
out
mov
adc
pop
or
jp
imulb
mov
mov
jae
mov
js
outsl
or
add
jne
lcall
outsl
ss
mov
add
cmp
daa
adc
inc
arpl
out
pop
mov
out
inc
popf
call
mov
push
mov
xchg
mov
ss
inc
pop
xchg
jb
mov
repnz
xchg
subl
pop
and
lock
out
sub
pop
fisubrs
mov
imul
aad
loopne
push
cmpsl
imul
cmc
add
aad
jae
ret
scas
addr16
fisttps
call
add
jnp
xor
out
dec
fs
xor
sub
je
cmp
cmp
in
mov
xor
adc
test
jge
aam
das
jae
jne
test
ficoml
xchg
inc
repnz
outsl
addr16
jo
pusha
and
push
inc
xor
jo
xor
sbb
mov
inc
es
repz
sbbl
dec
push
sbb
cld
cmpl
cli
lret
cld
mov
leave
mov
push
daa
lret
jnp
fprem1
push
ja
es
dec
mov
or
fwait
push
cld
fwait
stc
hlt
adc
xchg
push
std
mov
jae
jb
sbb
testb
addr16
loope
ret
jnp
push
adc
xchg
imul
adc
sarb
popf
movsb
leave
fstpt
je
fsubrl
movsb
scas
push
xchg
sbb
sub
std
notl
dec
roll
rorl
enter
fiaddl
cs
jp
in
out
pop
and
or
lret
pushf
lret
dec
sarl
mov
sub
pop
and
sub
fsub
mov
fdivl
das
imul
in
jge
lret
rclb
pop
roll
dec
mov
pop
test
test
xor
pmulhuw
xchg
xchg
or
sti
xor
jno
mov
jl
pop
arpl
pop
ljmp
push
push
fisubrl
ss
mov
jae
in
jno
sbb
push
pop
cwtl
pop
push
mov
mov
inc
add
sub
xchg
shrl
addr16
xchg
and
jb
jge
inc
dec
daa
std
rol
mov
in
add
or
scas
enter
dec
mov
loope
ret
pop
shlb
mov
sub
mov
cli
mov
movsb
mov
lret
out
call
mov
push
inc
or
fs
nop
xor
lcall
bndstx
sbb
inc
add
xor
inc
xchg
mov
outsl
leave
movsl
jae
sbb
fcomp
sbb
push
jne
std
pop
daa
cltd
push
test
lcall
and
sahf
mov
xor
rcrb
sub
pop
mov
stos
mov
adcb
ja
push
add
jo
add
inc
mov
jg
jg
icebp
sbb
xor
pushf
sub
cmp
jnp
loopne
sahf
add
add
pop
dec
push
dec
xchg
push
adc
es
mov
pop
xor
xor
ss
mov
cmp
ja
adc
or
shlb
push
push
insb
jge
nop
loopne
popf
sbb
daa
lods
aaa
jne
arpl
cmpsl
xchg
cmp
sub
ret
pop
sub
div
xchg
and
pop
mov
adc
xchg
stos
rol
addr16
jmp
push
mov
fstl
out
hlt
mov
mov
adc
push
std
lds
lods
adc
repnz
jge
andb
and
or
test
xchg
je
test
add
hlt
pusha
int
pop
jl
jle
pop
clc
push
sbb
into
stos
lcall
dec
add
aas
sub
push
sti
cmp
imul
std
movsl
push
mov
sub
cltd
lock
inc
insl
push
incl
jne
jecxz
adcb
js
repz
sbb
fistl
dec
sbb
add
push
fdivrs
movsl
pop
and
rolb
cli
sbb
dec
sahf
jne
outsl
and
sbb
int3
es
dec
rol
mov
pusha
pop
bound
cmp
adc
ret
pop
and
fdivrl
repz
les
or
xchg
std
adc
insl
xchg
or
push
fs
jae
fwait
lret
loopne
pop
int
jne
and
dec
mov
cmp
mov
cwtl
rcrl
gs
shrl
mov
incl
gs
cwtl
mov
mov
loope
mov
jbe
jne
aad
push
xchg
jmp
cmpsl
imul
insl
push
shr
in
sar
in
bound
ds
mov
ss
push
pushf
and
add
mov
cmpsb
repnz
movsb
cmp
not
xchg
inc
cltd
js
jp
mov
in
pushf
enter
arpl
and
lcall
mov
ljmp
jge
inc
shlb
rclb
sub
sub
jb
sub
sahf
and
xchg
cmpsb
das
divl
out
cld
sub
movsb
sarb
xor
inc
add
push
sti
sub
mov
inc
cmpsb
pop
mov
out
push
add
pop
dec
inc
xor
pop
mov
cs
push
mov
shrb
sub
icebp
lret
icebp
mov
push
cmp
dec
in
push
outsl
or
sub
test
xchg
imul
xorb
xor
mov
movsl
mov
mov
sub
rcrl
aad
outsl
loopne
ljmp
push
mov
dec
pop
inc
mov
lahf
jmp
inc
push
sub
push
idivl
jl
xchg
inc
sub
int
daa
lahf
jo
sub
negl
lea
adcb
dec
adc
dec
push
mov
daa
sub
add
jo
add
cmp
pop
cvttps2pi
xlat
or
jg
lds
mov
mov
push
fiaddl
cld
cmp
push
int3
or
sbb
mul
movsb
lods
cli
xadd
adc
mov
push
or
adc
xchg
push
sbb
repnz
je
mov
cmp
jo
ret
jmp
sbb
insl
push
or
xchg
imul
and
mov
mov
mov
punpckhdq
mov
outsl
xor
mov
out
dec
or
and
mov
aad
pop
push
shrl
mov
incl
pop
lret
inc
shl
inc
add
mov
cli
daa
mov
es
cmp
test
or
stos
pop
in
sbb
jle
xor
pop
mov
push
cmp
movsl
sbb
inc
or
jmp
and
jp
sarb
mov
lret
xor
jnp
cmpsl
jb
pop
loope
xchg
sub
push
outsl
mov
jge
xchg
divl
dec
addr16
cmpsb
outsl
xchg
mov
mov
inc
loop
jl
loope
les
mov
lods
lea
sbbb
lret
shl
loope
fistpll
adc
sti
pushf
mov
adc
lahf
or
or
icebp
lods
addr16
stos
push
mov
jg
xchg
push
push
or
out
adc
adcb
fistps
xorb
rorb
cs
lcall
ljmp
lock
jmp
lret
icebp
inc
sar
mov
and
pop
pop
and
mov
jns
sub
nop
das
loop
sub
pushf
imul
pop
cmp
dec
and
mov
mov
xor
and
arpl
pop
cmp
mov
in
hlt
mov
inc
fimull
into
mov
fnstsw
push
xor
fistpll
sbb
test
cmpsb
std
lods
adc
jp
dec
inc
mov
mov
adc
sub
cmp
pop
cmp
adc
push
cmp
scas
rcl
add
inc
fdivs
mov
mov
adc
sti
hlt
fistpll
xor
adc
and
shrb
or
rcll
push
jmp
fisttpll
fstpt
jg
lret
hlt
imul
repnz
lods
jle
sub
out
xchg
ljmp
scas
cmp
dec
sub
cld
hlt
decb
repz
in
sbb
mov
and
dec
in
push
cmp
pop
fs
mov
pop
loope
test
test
in
jns
mov
fstpl
or
pop
lock
enter
jns
jbe
mov
mov
dec
mov
jbe
sub
and
xorb
cmp
xchg
incb
popa
push
int
mov
or
jmp
add
xchg
xor
sub
loop
mov
mov
pop
sbb
lcall
adc
cmc
jb
ret
mov
leave
aaa
fisubrs
push
scas
sbb
popf
or
mov
addr16
jmp
pop
sbb
stc
adc
mov
sbb
cld
mov
leave
lcall
push
push
push
jmp
ret
out
bound
inc
xchg
jo
aam
and
dec
addr16
push
mov
add
pushf
xchg
push
jecxz
push
insl
inc
adc
mov
sub
loopne
push
cld
mov
cmc
test
mov
sub
adc
and
push
cmp
xchg
push
push
aad
int3
aad
adc
pop
pop
fs
shll
jle
push
xor
imul
cmpsb
xchg
xchg
dec
add
push
rcll
pop
cltd
or
xchg
xchg
cmp
mov
aad
push
add
pusha
popa
loope
lods
das
mov
test
push
mov
jg,pn
into
xchg
es
inc
rcll
dec
mov
xchg
jecxz
addb
xor
call
and
rorl
mov
adc
outsb
push
push
loopne
fs
mov
jns
out
mov
push
cmp
jl
or
repz
or
aad
or
sbb
adc
cmp
pop
mov
je
or
aam
or
push
sbb
sub
dec
nop
cmp
pop
in
or
js
dec
int
dec
rcr
and
lahf
inc
insl
sub
mov
out
mov
push
inc
das
jle
lds
popf
jae
adc
shlb
jns
fwait
pop
fcoml
xchg
push
sub
adc
mov
cli
push
out
ror
sub
cmpsb
or
repz
push
addr16
shrl
jbe
sbb
sub
push
push
sub
call
xor
add
pop
lods
jne
sahf
sbb
aaa
xchg
fldt
lds
cs
jge
xchg
mov
mov
xchg
lea
dec
dec
fdiv
inc
xchg
mov
hlt
add
cmp
movsb
test
jg
cmp
mov
pop
mov
lret
sbb
pop
imul
mov
and
mov
int
mov
cld
mov
sbb
sub
cmpl
jl
add
imul
clc
xlat
mov
in
and
sbb
insl
leave
out
cld
test
lea
xchg
ss
sub
dec
fs
sti
loopne
mov
dec
jno
ret
bound
xchg
les
mov
pop
xchg
aam
add
loop
xchg
or
cmpsb
pop
test
mov
inc
push
cltd
ds
mov
mov
test
out
test
les
fistpll
fbld
insl
bound
sbb
jo
rcl
sti
shrb
mov
xchg
test
mul
adc
mov
sub
adc
sar
xchg
cmpsb
jne
inc
scas
jns
scas
std
stos
cmp
xchg
or
lods
stos
push
in
das
or
adc
jg
sbb
push
in
mov
pop
push
std
jg
xchg
mov
in
xor
sbb
push
mov
dec
xchg
test
xchg
shlb
inc
imul
and
or
cld
and
pop
imul
mov
int3
xchg
ja
adc
dec
fst
inc
es
fdivrp
push
leave
or
jle
cmc
pop
cmp
lea
into
sub
imul
inc
mov
or
mov
jbe
pop
and
inc
les
pushf
sbb
xor
shr
and
mov
pop
fstl
nop
iret
push
xchg
add
in
fmul
out
in
jbe
out
mov
mov
leave
push
sbb
sub
loopne
jge
lret
imul
dec
mov
xor
jge
sbb
ds
pop
ja
loopne
fdivr
ficoml
pop
mov
pushf
mov
inc
stos
movsb
xor
mov
cmp
addr16
mov
mov
cmp
ret
test
xchg
inc
sti
dec
pop
xchg
xorb
call
cmpsb
outsl
xchg
mov
sti
imul
fisubrl
das
pusha
dec
out
add
mov
jae
lahf
imul
in
xchg
clc
jne
out
fcmovbe
iret
xchg
dec
iret
sbb
aam
jmp
loop
inc
aas
in
lods
roll
sub
adc
clc
fcmovbe
add
inc
in
jae
cmp
pop
pop
dec
and
notb
imul
cmp
jle
jno
xor
sarb
and
movsb
sub
dec
jmp
mov
or
and
or
jmp
sarl
cwtl
fwait
mov
push
mov
xor
pushl
push
jge
fstl
lock
cli
push
cld
push
sub
mov
xor
pop
fwait
dec
out
pop
jmp
sub
pop
fstps
out
hlt
stos
dec
inc
nop
push
inc
js
std
test
pop
inc
and
xchg
iret
outsl
fisubl
jns
or
clc
or
stc
cmpsl
xlat
pop
repz
cmp
sarb
mov
cmp
xchg
mov
push
adc
outsl
pop
fcomi
inc
inc
sub
in
jno
jb
dec
inc
stc
xor
sbb
xor
mov
xchg
cmp
lods
lea
scas
adc
sub
sbb
add
in
jae
repnz
add
cmp
mov
call
jo
cmpsb
jp
clc
or
sbb
mov
mov
insb
testl
mov
cmc
movsb
push
mov
mov
pop
addr16
push
leave
pop
out
mov
das
inc
arpl
pop
imul
fimuls
mov
mov
mov
cmp
lds
xchg
sub
or
mov
stos
dec
sbb
popa
cmp
sbb
lods
cmp
or
push
jns
sbbb
xchg
jle
test
jmp
add
cmpsb
sub
dec
int3
push
dec
iret
stc
adc
cld
aad
add
mov
jl
cmp
addr16
fbld
mov
inc
mov
sub
mov
or
and
xorb
fstl
std
xchg
fbstp
sbb
cmp
xchg
shlb
scas
fidivl
fmul
mov
sbb
aad
clc
push
mov
xlat
pop
jle
pop
adc
outsb
call
mov
ret
jne
push
mov
frstor
push
add
pop
js
adc
ret
jnp
add
iret
movntq
sub
xor
sbb
push
sbb
lds
lahf
pop
std
cmp
int3
mov
pop
movsb
fcompl
mov
arpl
mov
inc
dec
dec
lea
and
adc
push
repnz
xchg
jno
orb
lret
cmc
adc
sbb
hlt
je
negl
outsl
adc
lods
outsl
loope
xchg
jne
shlb
fistl
mov
mov
jnp
int
sbb
bound
ja
inc
adc
sub
scas
aad
aas
stc
xor
imul
stc
ror
insl
jae
cmp
in
in
popf
cmp
push
mov
lock
dec
xor
adc
sbb
pop
push
fcmovu
leave
jmp
out
iret
nop
cli
mov
nop
shll
jns
movsb
fldcw
mov
call
nop
lds
mov
dec
push
sti
out
fdivl
xor
bound
dec
adc
iret
and
sub
movsl
fs
lret
jecxz
add
outsb
in
jl
cli
lock
mov
enter
jecxz
and
lods
push
loope
push
dec
inc
and
fsub
or
roll
mov
xchg
cmp
jno
stc
push
pop
idivl
mov
push
mov
insl
arpl
in
pop
orb
jp
push
dec
push
xor
push
lods
ljmp
or
cmp
gs
in
push
gs
gs
dec
leave
subl
dec
and
call
push
xchg
lret
cmp
xchg
js
xor
xor
imul
mov
push
popa
stc
jp
out
mov
add
loopne
pop
cltd
jle
ret
int3
es
mov
xlat
xchg
jno
inc
pusha
scas
jle
imulb
cltd
int3
push
lods
icebp
jae
jno
mov
mov
imul
out
out
mov
repz
mov
int3
test
pop
cmp
fisttpl
and
call
rclb
jg
movaps
cli
push
mov
shrb
xor
arpl
mov
into
aas
out
pop
fsubrs
push
fildll
mov
push
shlb
cmp
pop
xchg
xorl
pop
stos
jecxz
jg
ds
lret
cltd
xor
cmp
sub
bound
in
repnz
insl
pusha
insb
shrl
push
mov
andb
jmp
aad
and
and
mov
jne
inc
jecxz
addr16
ret
icebp
mov
rcrb
cmp
pop
test
sub
sbb
dec
xchg
ficomps
adc
insb
clc
xchg
popf
or
inc
push
or
fs
xorl
mov
cmc
cmp
push
jnp
fidivrl
stc
mov
lods
xor
add
aaa
jp
mov
outsb
dec
es
in
jge
popf
sti
cmp
adc
in
test
mov
lock
shrb
arpl
jns
data16
sbb
pop
rol
mov
shlb
sbb
fldt
sbb
pop
push
inc
push
jecxz
ds
jae
xchg
xchg
fs
inc
adc
sub
fdivrl
xchg
push
sub
hlt
cwtl
jns
bound
insb
rcrl
imull
stos
and
bound
icebp
adc
push
inc
mov
jle
imul
in
add
dec
cwtl
gs
dec
mov
fs
xchg
mov
dec
hlt
add
cmc
cmp
and
and
stos
pop
rcl
cld
xchg
iret
xor
jmp
imulb
add
ja
cmp
mov
test
lods
sti
jmp
add
sub
in
jo
and
mov
push
nop
out
rcl
xor
gs
pop
sbb
sbb
int3
rcll
push
inc
out
cmp
fnstenv
mov
pop
and
cmp
cmc
sub
icebp
lret
fisttps
inc
out
lret
pop
cmp
stc
cld
mov
fwait
data16
stos
popf
jmp
xchg
loop
and
mov
shlb
dec
fcomps
xor
fisttpll
push
jo
ljmp
xchg
cli
nop
ficoms
aam
inc
or
cmp
add
lret
enter
push
adc
xor
cmpsb
movsb
xor
and
jno
mov
ret
fsub
mov
and
cmp
add
jbe
inc
sbb
fdivrl
inc
scas
mov
dec
or
mov
mov
fisubl
lcall
cmp
movsb
adc
mov
shr
stos
mov
les
cmp
lcall
mov
jae
in
pop
xchg
hlt
imul
fsubs
pushf
adc
loop
push
cmp
lret
fiadds
das
data16
adc
int3
addr16
cltd
sub
xchg
cmp
mov
xor
ret
imul
dec
mov
fsubrl
pop
xor
roll
sarb
inc
and
stos
mov
jne
mov
pop
sbb
inc
sub
cmpsl
mov
movsl
cs
in
dec
je
mov
andb
push
xlat
mov
mov
jne
int
dec
loope
mov
jle
xchg
sub
in
das
and
xor
mov
mov
stos
mul
test
cld
pop
iret
das
sbb
pop
bound
ljmp
rorb
enter
mov
fcmovnb
and
test
push
hlt
test
or
fidivl
xchg
fnsave
lret
jo
rolb
adc
loope
neg
dec
inc
es
cmp
divb
lret
in
xchg
movsb
push
dec
inc
in
dec
fdecstp
out
add
aam
jl
and
sbb
mov
scas
lds
pushf
push
mov
inc
cld
fistl
fidivrs
sub
repz
push
sub
movsbl
fnsave
mov
mov
sbb
add
dec
pop
mov
cmp
xorl
sub
hlt
test
mov
or
shrb
pop
aaa
sbb
or
loop
aaa
and
adc
aaa
mov
out
or
dec
or
test
or
sti
popa
in
push
stc
shll
out
mov
loope
pop
push
pop
pop
dec
aad
xchg
or
mov
ljmp
ret
and
pop
or
stc
call
shlb
jle
cmp
sub
add
cs
stos
sbb
fs
sbb
push
cmp
jnp
inc
js
cmpsl
fcmovnu
out
js
xchg
lea
fs
imul
outsl
in
scas
mov
xchg
loop
aaa
aas
ret
scas
and
repnz
rcll
icebp
adc
push
jg
movsl
arpl
lcall
add
in
int3
mov
jno
loop
fildll
mov
andl
mov
mov
mov
xlat
test
xor
imul
aas
bnd
inc
in
int
mov
fwait
jge
jecxz
mov
fcmovnu
push
and
aas
hlt
mov
push
loopne
sub
ret
loop
cmp
push
mov
pop
sbb
xchg
lcall
inc
mov
aaa
cvtpi2ps
or
jp
pop
int
dec
xlat
popa
sbb
pop
sbb
pop
xchg
sub
push
add
adc
add
lret
jb
stc
push
mov
inc
and
ja
scas
subb
adc
mov
xchg
pop
jo
out
or
dec
rcl
cmpsl
sbb
add
arpl
mov
push
xchg
or
or
hlt
lahf
ss
cmpsb
xlat
in
xor
mov
mov
xor
xlat
mov
rorl
leave
dec
icebp
mov
adc
jp
sub
add
fidivs
xchg
mov
and
mov
aam
lods
pop
fmul
rolb
jge
shrl
cmc
out
cmpsl
out
add
cld
mov
lahf
in
fldenv
into
iret
and
cmp
fs
cmp
push
dec
pusha
gs
cmp
or
lods
mov
mov
mov
das
std
arpl
lret
sbb
icebp
jmp
cmp
jl
add
test
not
stos
int3
in
mov
stos
insl
ljmp
popf
push
inc
notl
outsl
xchg
or
mov
movsb
jne
addb
and
inc
mov
or
xlat
insb
add
mov
mov
inc
mov
push
dec
lcall
add
loope
lods
pop
jmp
rclb
es
es
xchg
stc
fwait
jns
lock
and
int
int
shl
shll
jge
xor
fbld
sbb
push
lea
pop
inc
test
pushf
pop
cmpsl
mov
gs
inc
rcrb
mov
mov
jl
jmp
inc
pusha
enter
mov
ret
in
repnz
out
jmp
mov
push
inc
or
dec
fmulp
ret
out
add
cmp
jmp
imul
and
sbb
push
inc
and
cmp
push
popa
jno
dec
fs
adc
decl
jecxz
aam
or
xchg
xchg
inc
pop
sbb
mov
adc
xchg
cmp
jl
fsubrs
add
cmp
bound
subl
pop
les
sahf
mov
popf
cmp
mov
dec
dec
sarb
shrb
cs
dec
jg
sub
in
inc
in
notl
imul
fsubl
andb
in
mov
sti
add
outsb
and
jns
lods
in
dec
add
lret
divb
cmpsl
sbb
cmp
sbb
or
lods
jae
inc
out
push
cmp
test
addr16
test
sarl
cmc
fwait
insl
jb
mov
shl
aad
mov
jo
inc
mov
js
and
push
incb
jbe
test
cmp
mov
xor
sub
xchg
ror
imul
movsb
xorb
aaa
andb
leave
daa
pop
mull
xchg
cwtl
mov
ja
ret
mov
push
sub
sbb
ss
pop
andb
adc
add
jp
sub
push
loope
popf
mov
xchg
outsl
push
adc
mov
jp
jl
movsl
test
fimull
cmp
cmp
cmp
imul
imul
sub
inc
push
negl
mov
loopne
dec
pop
cli
sub
bound
cmp
repnz
dec
jb
mov
shrb
inc
rep
lds
xlat
inc
mov
adc
mov
or
ss
pop
out
testl
inc
jmp
cld
leave
aas
xchg
mov
jno
xchg
mov
mov
dec
or
imul
and
out
mov
fdivrl
cmp
pop
fnstsw
xchg
popl
push
mov
jo
mov
loop
jle
loop
test
and
adc
in
data16
push
ret
mov
cmpsb
xchg
sbb
lods
inc
loopne
push
adc
ret
cmp
jae
dec
adc
dec
negl
movsl
shll
sub
dec
negb
mov
sarb
mov
adc
addr16
pop
and
xchg
out
mov
dec
scas
jge
inc
dec
enter
arpl
arpl
xchg
add
sub
insb
repnz
mov
aam
jns
pushl
sub
dec
and
sbb
lods
addb
dec
rcrl
out
pushf
or
cltd
mov
scas
xlat
xchg
mov
cs
xor
xchg
xor
aad
mov
mov
and
push
or
mov
add
mov
and
xor
in
cmp
pop
pop
insb
clc
mov
push
or
xchg
xchg
iret
push
lcall
iret
jno
imul
xchg
xchg
and
ja
push
mov
mov
inc
lahf
addr16
push
fmul
cmp
ret
and
jno
and
xchg
xor
nop
xchg
mov
pop
ljmp
paddq
xlat
mov
push
dec
push
pop
cmp
dec
pushl
dec
mov
in
mov
nop
pop
in
ljmp
cmp
or
mov
fildl
pop
dec
mov
mov
push
add
in
icebp
bound
push
jno
mov
mov
mov
cmp
pop
int
ljmp
outsb
pop
rcr
inc
std
sub
push
mulb
cmp
outsl
outsl
xor
ficomps
xchg
insb
in
stc
add
xchg
popf
adc
jl
adc
lods
xor
lock
add
or
and
push
and
adc
mov
cmp
dec
xchg
cltd
mov
inc
and
inc
cmp
or
lods
insl
in
mov
jle
or
and
xchg
sub
adc
ljmp
andl
sbb
sbb
push
mov
shrb
xchg
jbe
adc
jbe
or
js
lds
sti
in
out
or
aam
fcomps
mov
xchg
and
xchg
pop
out
pop
enter
call
bound
pop
cli
and
cmp
imul
inc
iret
mov
dec
fistl
popa
push
xor
fstp
daa
cltd
packssdw
insb
out
cltd
inc
xchg
addb
add
sbbl
mov
notl
stc
mov
and
int
inc
es
andl
xor
fs
inc
pop
dec
fmul
push
jge
mov
je
mov
add
out
mov
loopne
dec
cmpsb
fistpl
xor
stos
lret
sbb
jo
rorb
jge
sti
pop
xor
or
ja
repnz
scas
cmpsb
insb
cmp
lcall
jo
hlt
xchg
gs
mov
das
sbb
pusha
aam
mov
nop
dec
stos
int
movsl
mov
scas
and
std
xlat
cltd
cmp
insl
scas
out
ret
add
mov
push
inc
fidivs
lcall
fists
cld
or
adc
add
jae
std
fld
xor
adc
mov
xchg
dec
les
mov
mov
jne
xchg
lret
sahf
adc
out
jg
and
add
pop
jnp
daa
pop
mov
sbb
mov
xor
push
pop
rorl
add
sbb
fs
mov
adc
adc
pop
fs
clc
rcl
jp
pop
movsl
sti
adc
and
cmp
add
add
and
xor
mov
jo
sub
xorb
pop
fnstsw
leave
mov
aam
hlt
mov
or
orb
loop
inc
nop
test
test
in
pop
cmp
adc
jno
loopne
imul
jge
movsb
dec
je
inc
xchg
push
bound
xor
inc
adc
push
shr
xchg
inc
xor
push
iret
add
jbe
mov
pop
addr16
cmpsb
jno
xor
scas
aas
scas
push
pop
mov
cmp
mov
jae
lds
outsl
or
adcl
and
sahf
inc
aaa
hlt
loopne
in
sub
scas
jns
add
xchg
inc
fstp
imul
pusha
scas
fdivl
or
sub
push
push
adc
lods
mov
fstps
lea
out
repnz
sbb
mov
call
into
jbe
mov
rep
xchg
jmp
mov
faddp
sbb
mov
ja
or
lock
pop
jecxz
out
add
xlat
adc
pusha
iret
or
mov
and
mov
xchg
popf
bnd
mov
cli
lock
orl
and
dec
icebp
fwait
nop
shrl
add
sub
or
lods
stos
test
jl
addr16
jo
lsl
sub
arpl
test
push
scas
pusha
stc
dec
sub
orb
aad
lret
ret
stos
fisubl
aad
out
std
push
clc
aaa
sub
sahf
imul
roll
xchg
adc
jne
repz
mov
testl
xchg
into
adc
insb
inc
mov
ret
push
push
outsb
stos
outsl
push
add
jg
int
cmp
sbb
aas
iret
nop
mov
fcmovbe
sbb
fwait
add
jb
jns
pop
jp
stc
pop
pushf
add
xchg
pop
outsl
pop
pop
add
mov
push
sub
insb
mov
jbe
popa
dec
insl
lret
mov
cmp
dec
out
mov
jnp
xor
xor
sbb
and
xchg
aas
fdivl
shlb
mov
jmp
sbb
push
loop
shlb
aas
insb
lea
cmc
push
out
lret
jae
inc
pop
and
shll
mov
cld
sbb
mov
xlat
push
add
test
mov
nop
sbb
icebp
inc
push
or
ljmp
jmp
ja
jno
cmp
mov
push
jnp
into
js
dec
or
testb
sbb
push
in
ss
sub
imul
cltd
nop
cmc
push
jno,pn
lods
mov
test
fisubrs
cmpb
sbb
adc
fidivrs
fisttps
xor
sahf
fdivrl
sub
or
call
aaa
push
fisttpl
leave
pop
push
cmp
and
adc
xchg
sub
add
fwait
or
add
rorl
fstps
xchg
sbb
push
sahf
test
test
fwait
xlat
out
xor
in
outsb
imul
xchg
pop
adcb
fcmovnb
test
andb
dec
rorl
pop
pushf
push
pop
mov
adcb
test
out
and
xor
jecxz
sahf
jne
pushf
fabs
repz
push
adc
cmp
jnp
shrb
aam
pop
imull
cmp
mov
ret
pop
push
hlt
push
or
lods
dec
fldt
sub
stos
mov
add
adc
mov
test
or
pusha
fildl
out
push
mov
int3
push
and
int
sbb
or
jge
stos
inc
js
ret
loope
fs
scas
or
enter
inc
imul
push
mov
sar
jo
lock
mov
movsl
out
or
push
cli
shr
test
lods
xchg
int
dec
scas
xchg
xchg
mov
cmc
loopne
xchg
xor
gs
pop
lret
dec
pop
stc
nop
jl
int
test
sub
jmp
out
pop
sbb
cmpb
test
sarb
outsl
hlt
loop
add
inc
mov
out
xchg
sub
aad
mov
stos
jne
repz
xor
xchg
inc
pop
shl
mov
push
xor
adc
pop
dec
fcos
ror
scas
dec
cmp
xchg
into
cmpsl
adc
lcall
jge
and
std
fs
leave
sbb
mov
xchg
call
aaa
imul
js
in
lock
sub
jno
cmp
cmp
sub
mov
aaa
cmp
jbe
xchg
flds
jns
cmp
aam
push
sahf
shll
push
fcmovbe
cmp
mov
enter
add
inc
imul
fsubr
adc
xchg
xchg
cs
cmpsb
and
xor
xor
addr16
sarb
add
pop
cs
mov
lcall
mov
or
fwait
or
add
testl
jno
dec
cltd
js
ds
adc
ret
push
les
xchg
dec
adc
fadd
xchg
iret
out
adc
mov
imul
imul
inc
and
bound
cmp
cmpsl
aaa
out
add
jbe
pop
hlt
cmp
pop
mov
mov
mov
dec
jne
cmp
cmpsb
faddl
xchg
ss
jne
add
repnz
loop
sbb
leave
and
xor
jnp
rolb
gs
mov
in
ljmp
inc
hlt
sub
push
add
inc
jne
xchg
sbb
ss
fnstcw
and
xor
inc
test
fdivs
lret
imul
iretw
mov
pop
xor
nop
lock
arpl
addr16
int
push
sub
xor
out
mov
out
das
cmovae
sub
in
push
xor
lods
xor
mov
xor
cmp
stos
dec
int3
leave
lcall
ret
das
fbld
je
add
bound
xor
loope
dec
inc
mov
in
call
pop
push
pop
xchg
out
imul
push
sbb
push
sbb
fucomi
call
stos
or
ds
mov
xor
daa
ret
add
dec
scas
test
incb
roll
pushf
ficoml
jae
inc
and
negb
movsb
cmp
pop
rclb
loope
lods
testb
ss
loop
lahf
xor
cmpb
or
addr16
jp
test
cmpsb
jecxz
adcb
mov
das
sbb
sbb
aas
add
mov
push
notl
pop
sub
out
jno
sbb
in
and
fwait
scas
and
pop
adc
mov
sbb
sbb
and
mov
and
imulb
movsb
movsb
jle
cmp
loop
cmp
daa
mov
pop
pushf
cmpsb
or
or
cmp
stos
imul
or
ss
adc
leave
pop
push
push
add
jg
mov
inc
sub
fs
dec
dec
dec
ret
jno
cs
adc
xor
push
cmp
pop
jp
imul
loope
ja
pop
adc
mov
fidivrl
lods
cmc
aas
ds
jp
lods
cmp
sbb
ljmp
test
xchg
outsl
jne
movsb
orb
int3
cmpsb
add
mov
stc
arpl
adc
repnz
aad
pop
pop
fcoms
mov
sti
test
inc
xor
xchg
push
mov
stos
and
subl
jmp
shl
mov
inc
ljmp
push
cwtl
push
dec
cmp
push
xchg
mov
jo
dec
cmc
sahf
add
and
cmp
mov
add
or
pop
xor
sbb
mov
es
mov
pusha
pop
js
movsl
push
or
out
enter
shll
clc
insb
cmpsl
popf
mov
cmp
adc
leave
xchg
mov
dec
fnstcw
sbb
hlt
fwait
inc
xor
enter
lea
push
add
inc
jnp
dec
mov
jne
adc
sub
or
daa
addr16
lcall
xor
inc
and
idiv
xor
out
sub
sub
inc
and
jg
pop
stc
mov
les
push
fcoms
xchg
mov
or
jmp
and
and
or
orb
mov
int
inc
jp
xchg
ja
fcmove
out
fiaddl
add
ss
pop
ficomps
rcrb
xchg
pushf
sbb
cli
fisubs
and
lret
test
in
or
mov
out
dec
mov
or
mov
loopne
ror
jne
cltd
add
notb
cmp
pop
xchg
mov
call
hlt
test
push
xchg
nop
mov
adc
int
ja
add
push
lods
shlb
sub
pop
inc
fsubrs
lods
cmc
out
xor
jge
push
in
and
pushf
addr16
ret
pop
imul
fwait
dec
inc
inc
les
mov
dec
xchg
filds
sub
rorb
lret
mov
push
pop
pop
hlt
bound
lock
in
cmp
int3
int
push
sub
or
add
mov
pop
and
decb
call
outsl
aam
adc
and
movsb
rcll
add
dec
cltd
mov
mov
and
sub
vpaddb
faddp
movsl
xchg
movsb
int3
sti
dec
les
inc
cmp
sub
in
push
pop
dec
mov
js
cmc
pop
imulb
fcomp
lds
cs
push
scas
pop
outsl
sub
sbb
sbb
pop
mov
lahf
es
enter
jno
xchg
inc
jmp
test
cmpl
icebp
cmpsb
xchg
ljmp
sbb
sub
sbb
gs
inc
mov
nop
sbb
inc
call
sbb
adc
add
inc
imul
leave
cld
addr16
add
test
xrelease
xor
stc
dec
dec
or
outsl
mov
push
push
jno
mov
mov
in
dec
mov
cmp
imul
aas
add
in
mov
sbb
pop
mov
scas
popf
call
insl
jmp
push
pusha
cmp
jns
mov
pop
cli
test
daa
pop
sub
mov
out
pop
mov
mov
into
pop
andb
adc
jge
ret
xor
fstpt
inc
push
cmp
lods
inc
mov
cwtl
ret
pop
pop
rclb
adc
xchg
outsb
mov
nop
dec
insb
push
jmp
popa
cltd
jne
repz
push
mov
repz
loop
jmp
stc
mov
mov
cmp
and
mov
push
push
movsl
test
imul
pushf
cmpb
sbb
iret
add
andl
dec
faddl
pop
insb
jle
mov
in
in
clc
popa
sbb
push
out
add
cltd
and
pop
sbb
push
movsl
fs
lret
xchg
cmc
push
ljmp
arpl
pop
ja
and
sub
xor
in
ret
jb
test
or
test
scas
push
xchg
rolb
mov
lret
stos
ret
cmp
mov
nop
out
dec
dec
sbb
sbb
inc
mov
push
lds
es
dec
cmpb
xchg
dec
adc
or
xchg
out
mov
push
in
lods
je
push
jp
xor
std
sub
xor
sbbb
ljmp
or
imul
aaa
xchg
fcom
sbb
dec
int3
sbb
adc
fld
lea
ds
leave
pop
add
int3
lahf
cmp
movsl
cmp
enter
aad
sbb
dec
loopne
fdivl
shll
push
inc
in
aam
jmp
jae
sbbl
test
in
in
std
mov
dec
adc
xchg
orb
out
cwtl
subb
fwait
push
ljmp
push
stos
sub
mov
jg
clc
lcall
test
mov
cli
sub
cmp
cs
popf
add
mov
lret
push
xlat
popa
in
inc
imul
inc
imul
pusha
xor
xchg
adc
dec
outsb
in
ret
xorl
fldt
cmp
cmc
adc
xchg
in
dec
call
jae
mov
dec
sbb
jmp
or
add
sub
mov
lcall
xor
dec
movsl
sbbb
xor
mov
scas
mov
cli
jns
imul
out
mul
jl
fcmovb
aaa
adc
and
dec
std
mov
scas
cwtl
les
add
sahf
movsb
sbb
fistps
or
enter
dec
inc
jnp
out
aam
popa
mov
leave
sbb
fsts
test
jne
inc
jp
shl
mov
imul
ljmp
stos
mov
xor
inc
addr16
and
packsswb
sbb
sbb
les
mov
into
lock
pop
inc
insb
test
daa
bound
daa
xchg
rclb
xor
ret
pop
scas
add
jnp
popf
adc
adc
sub
xchg
adcb
dec
mov
outsl
pop
cs
or
jnp
mov
in
sbb
jne
ljmp
stc
jns
mov
subl
in
repz
jecxz
inc
mov
xlat
hlt
js
repz
xchg
sti
push
add
sahf
mov
xchg
or
sahf
jge
pushf
or
jnp
data16
addr16
fwait
or
cmp
fcmovbe
sub
push
jo
repnz
mov
mov
scas
fdivl
sbb
idiv
imul
negb
jb
add
mov
in
out
ss
xor
ss
cmc
add
sahf
into
mov
pop
sbb
mov
add
xchg
pusha
test
sti
out
fwait
pop
jmp
imul
xor
pop
outsl
add
lds
sub
dec
xchg
or
icebp
pop
test
add
mov
dec
stos
fs
stos
mov
insl
scas
mov
sub
fistpl
clc
or
lahf
daa
subl
shlb
jge
pop
push
cmp
fsubs
push
sbb
add
mov
fdivl
roll
addr16
orb
jle
inc
inc
push
fmull
mov
push
loop
pop
fsubrl
ljmp
out
lock
popf
cmp
mov
and
rcrl
aas
scas
jb
mov
ss
push
mov
andb
pop
out
lods
repnz
xchg
sti
cs
and
into
jbe
mov
sub
mov
xor
mov
repz
je
lea
mov
fwait
pop
mov
inc
dec
and
jge
push
jo
loope
gs
mov
jns
shl
dec
xor
mov
mov
mov
mov
cmp
fmull
ljmp
cmp
mov
jae
push
ret
and
sub
bnd
jecxz
andb
out
mov
cmpsl
inc
cmp
decb
cwtl
loope
pop
xor
adc
and
lahf
pop
lret
mov
aam
scas
or
loop
gs
lods
adc
push
pop
jle
and
sbb
aas
scas
xchg
xor
fnstcw
or
dec
fisubrl
or
dec
mov
in
loopne
shlb
xchg
out
mov
and
stc
mov
push
test
xchg
or
xchg
outsb
mov
nop
loope
das
fwait
imul
sti
lahf
dec
mov
out
lds
mov
arpl
repnz
and
fidivl
aas
nop
push
mov
imul
out
scas
cmc
cli
in
mov
pop
insl
clc
jle
or
adc
jae
mov
add
rcll
push
push
ja
inc
dec
pop
push
adc
and
rcrl
jae
mov
adc
cs
cmpsl
jnp
jnp
negb
fimuls
loopne
xor
jg
pop
mov
push
jg
or
jecxz
or
sub
add
jmp
adc
inc
lret
shll
rcll
leave
das
leave
jl
rolb
stos
dec
push
das
fisttps
mov
cmp
xchg
imul
and
fildll
loopne
ja
lret
jmp
aaa
pusha
aam
call
in
ret
and
into
mov
daa
jne
sub
mov
sbb
sbb
xchg
sti
mov
push
jae
jg
dec
int3
fbld
test
orb
mov
and
stc
in
sub
fldl
push
mov
jl
repz
push
scas
dec
movsb
dec
lahf
cmpsl
add
mov
test
hlt
inc
jno
mov
mov
jb
fbld
push
push
dec
cs
nop
call
cld
or
scas
pusha
outsl
mov
inc
stos
ret
or
inc
adc
jbe
jge
push
inc
push
scas
xchg
out
xor
stos
and
adc
cmp
and
dec
dec
xor
or
pop
repz
and
aam
cmp
cmp
sbb
aad
adc
cmp
xor
lahf
sub
enter
es
out
xor
xor
mov
xor
hlt
scas
aaa
scas
xor
mov
rorb
mov
loope
or
fcompl
fsubrp
sar
out
adc
mov
bound
sub
add
xor
sbb
pop
aas
mov
mov
mov
iret
leave
mov
xchg
lock
push
xor
xor
iret
mov
mov
mov
cmp
cmpsb
inc
adc
or
mov
inc
cmp
sbb
aaa
mov
cmp
leave
int
aad
inc
push
push
or
pop
xchg
lods
mov
sub
push
stos
jl
xchg
setg
push
cli
and
mov
sbb
push
arpl
lea
mov
lock
cmp
mov
sub
test
mov
cwtl
loop
in
mov
adc
adc
dec
ret
push
sub
xchg
setno
in
and
push
cmc
xchg
adc
mov
sbbb
lds
jmp
inc
movsl
xchg
rorb
push
mov
stos
adc
sub
dec
pushf
outsl
aam
fbstp
in
pop
sub
jns
test
cmp
rcrl
in
enter
mov
daa
or
cld
mov
inc
ljmp
pop
xchg
mov
mov
aam
andb
mov
lods
sbbl
sub
cmp
lock
call
adc
xchg
dec
pop
xchg
js
ret
push
int3
imul
mov
int3
lods
dec
jg
mov
push
hlt
mov
aad
add
bound
mov
loop
jo
lock
cmp
mov
pop
push
and
mov
cmc
pop
mov
xlat
xchg
adc
xor
out
scas
jb
aam
std
lds
xchg
or
push
mov
gs
pushf
test
jb
aas
loopne
leave
das
in
pop
loope
iret
outsb
pop
test
mov
icebp
popf
cli
das
mov
pop
js
gs
insb
shr
jb
movb
inc
dec
loopne
insb
mov
mov
jge
es
ret
push
lea
mov
mov
mov
popa
iret
push
and
mov
or
xor
cli
movsb
push
push
dec
push
push
mov
rcrl
movsl
cmp
aad
mov
fsubs
into
add
nop
sub
push
mov
xchg
jns
add
cmp
neg
or
sbbb
test
jg
lods
or
mov
jmp
es
fsubrl
push
inc
mov
sbb
mov
jnp
fwait
ret
push
lcall
fwait
inc
mov
push
pop
adc
mov
aas
ret
jno
or
mov
sahf
data16
sbb
jge
lldt
std
xor
sbb
jo
outsb
lret
jns
or
jbe
jg
aad
mov
push
sub
pop
lcall
into
xchg
or
push
inc
test
repz
into
xchg
mov
movb
mov
lea
out
xchg
lret
sti
mov
test
inc
xchg
int
cwtl
and
or
or
inc
xor
mov
inc
ds
inc
testb
sbb
sub
sbb
shll
inc
mov
or
or
mov
bnd
inc
loope
lods
cmovbe
dec
dec
sub
mov
push
adc
gs
cmp
popf
or
je
lock
pop
xchg
sar
xchg
test
bound
stos
inc
cmp
sbb
fwait
mov
jae
mov
jge
lods
dec
jne
frstor
rcll
or
pop
xchg
jge
sbb
mov
test
adc
clc
dec
mov
daa
push
pushf
pushf
adc
jo
es
fwait
hlt
xorl
adcl
fisubrl
xor
out
push
pop
add
enter
jl
lret
std
pop
jmp
sub
aad
dec
in
es
xchg
dec
lods
fwait
loope
pop
and
lods
mov
stc
mov
push
fcmovnu
jg
jae
push
mov
mov
data16
inc
fstpl
out
ss
jae
out
add
loop
mov
negl
jns
add
sarb
mov
cmc
dec
or
dec
lahf
xlat
xchg
pop
mov
lret
push
push
leave
out
shll
xorl
push
mov
mov
popl
jmp
pop
out
push
jmp
insb
fs
mov
dec
xchg
mov
adc
loop
cwtl
fwait
out
inc
out
inc
add
les
shrl
add
pop
or
push
push
mov
int
test
shlb
dec
jb
clc
inc
jns
into
pop
lock
push
pop
inc
push
pop
push
inc
add
shrl
add
bnd
imul
repnz
pop
sahf
xor
data16
loop
xorl
and
stc
xchg
repnz
xor
inc
mov
fnsave
inc
push
vpcmov
mov
addb
jmp
mov
dec
ror
push
data16
gs
push
pusha
xchg
jg
arpl
and
sbb
fdiv
mov
lods
loop
out
shll
fs
lods
mov
or
test
inc
jge
jge
jl
sbb
mov
xor
adc
inc
jle
jne
jmp
lcall
mov
push
sbb
in
jl
in
stc
pop
xchg
adc
es
lods
mov
fldenv
cmp
jns
aad
out
push
gs
ljmp
outsl
cmp
push
cltd
repz
or
icebp
dec
mov
outsb
out
push
cmpsb
test
adc
push
or
es
pop
pop
dec
loop
ja
push
jecxz
mov
sti
leave
aam
fxch
movsl
icebp
frstor
adc
push
loop
mov
inc
int
fimuls
aam
imul
mov
pop
lea
xchg
mov
sub
add
and
fcmovb
sub
andb
ja
test
rclb
jg
es
loope
dec
or
xchg
shlb
out
pop
sbbl
aaa
fdivl
add
add
add
lea
adcl
ljmp
mov
xchg
orb
sub
pop
fldlg2
sti
pop
out
push
cli
and
xor
mov
sbb
lcall
xchg
shr
push
fldenv
leave
fcoml
cmp
ljmp
loop
jb
shl
sbb
fstpl
adc
adc
sub
add
frstor
xchg
pop
and
pop
shr
cltd
cmp
mov
shrb
sub
scas
packuswb
mov
jne
and
pushl
pop
xor
xchg
rcl
dec
stc
mul
daa
fnstcw
mov
mov
jnp
mov
fcompl
xchg
jbe
fists
mov
sub
and
adc
popf
and
xor
fdivs
cmp
addr16
cmp
xor
inc
outsb
leave
inc
hlt
idivl
sub
std
sbb
pop
mov
jp,pt
outsl
sbb
sub
and
shrb
mov
fcomi
mov
insb
mov
push
sarb
mov
adc
push
in
cmp
mov
dec
add
das
test
mov
cmpsl
lds
es
out
inc
adc
fisubrs
push
das
cmp
push
jle
jle
addb
adc
mov
in
ret
mov
xchg
inc
shl
cmpsl
cli
movsl
sarl
dec
sbb
stc
jecxz
adc
addb
cmpsb
cltd
cmp
pop
rcr
mov
sub
test
mov
loope
out
nop
sub
cli
xor
rcr
or
push
and
jecxz
lcall
test
pop
hlt
fdivl
xchg
dec
inc
addr16
fdiv
sbb
xor
and
push
mov
out
xor
stos
mov
dec
pop
nop
add
add
out
imul
insb
fldl
adc
cltd
mov
pop
subl
movsb
or
jmp
pop
xlat
fcmovu
ret
and
or
fldl
push
push
idivb
xchg
mov
jo
aad
push
pop
lret
xchg
pusha
inc
or
pop
xchg
pop
jnp
add
adcl
jne
pop
fdivrl
add
in
push
push
jns
or
in
in
repz
mov
pop
ret
jp
lea
jmp
fsub
out
jg
add
cltd
adc
cltd
mov
fdiv
nop
or
in
cmp
je
repnz
lock
test
jb
mov
stc
ds
aam
out
pop
jno
dec
insl
or
or
imul
ret
scas
dec
xlat
jl
mov
outsl
inc
cmp
icebp
adc
xchg
popl
arpl
inc
jbe
fisubrs
test
and
out
fnstsw
add
jae
inc
xor
inc
pushf
dec
xchg
or
jecxz
adc
xchg
jecxz
out
ds
mov
ret
inc
cld
ds
ret
aas
mov
push
mov
je
mov
jno
out
pushl
sub
icebp
in
or
adc
cvtdq2ps
jmp
inc
loope
mov
cli
lods
loop
or
popa
call
jg
mov
lods
mov
leave
outsl
test
sbb
inc
dec
or
mov
jp
jns
push
inc
mov
imulb
pop
out
and
lods
imul
repz
fsubl
outsb
arpl
insb
xor
mov
ror
mov
or
cmp
aad
cmp
je
jne
jecxz
ss
fcomps
xchg
rcrl
and
movsb
jns
jo
pop
mov
mov
pop
xchg
sbb
sub
xchg
add
and
ret
pusha
jo
js
sarl
cmp
and
cmp
and
cli
sub
push
push
cltd
or
inc
or
mov
hlt
mov
jb
popf
or
ret
bswap
xchg
mov
jne
sahf
dec
mov
push
loope
arpl
mov
outsb
out
imul
data16
xchg
push
aaa
insl
stc
mov
sub
xchg
mov
out
xchg
imul
push
sub
sbb
xor
jp
cmp
jo
mov
repnz
jnp
fbld
outsl
popf
inc
clc
mov
jbe
xlat
mov
rolb
sub
mov
nop
fs
popf
cld
push
fildll
adc
mov
dec
or
dec
mov
or
lods
push
xor
push
addb
xor
movsl
mov
sbb
aas
sbb
ds
cld
add
jnp
es
mov
jl
dec
add
mov
mov
mov
dec
dec
in
scas
cli
mov
push
cmp
mov
andb
xchg
and
mov
insb
addr16
sub
mov
mov
mov
mov
mov
cld
and
cmp
add
add
inc
out
mov
arpl
sbb
xor
arpl
push
roll
mov
xor
fs
dec
mov
stos
xchg
mull
pusha
pop
mov
mov
push
and
into
imul
ficoms
es
dec
cmp
ja
fiadds
add
mov
loop
sbb
pop
push
ret
cmp
popa
scas
dec
adcl
pop
push
pop
pop
sbb
xor
xlat
push
mov
out
jnp
ljmp
std
imul
je
loopne
pop
sbb
cmp
pop
sti
pop
es
push
movsb
pop
ss
call
sub
fcomps
cmc
shl
gs
sbb
fsubrl
neg
ss
dec
popf
sbb
add
mov
jbe
push
or
sbb
cvtpi2ps
inc
mov
mov
or
in
fwait
xchg
xchg
dec
jae
cld
sti
cmpsl
mov
pop
adc
aaa
sbb
inc
in
dec
xchg
lret
jae
mov
pushf
cli
adc
xchg
mov
stc
stc
icebp
or
mov
shlb
add
sbb
mov
pop
dec
mov
insl
sbb
jb
mov
cmc
jae
loopne
dec
in
ja
test
insb
ja
fidivrl
test
sub
push
add
pop
cmp
in
push
aam
xchg
popf
sbb
add
outsl
insb
movq
mull
or
sub
mov
push
cmp
ljmp
xor
pinsrw
pop
add
xor
int
ljmp
fistpl
mov
outsl
stos
mov
stc
ljmp
pop
mov
lods
repz
int
cmp
add
mov
lods
out
mov
push
aas
addr16
test
arpl
xor
pusha
in
xchg
fwait
pop
mov
dec
mov
hlt
int
add
bswap
xchg
inc
mov
adc
add
sub
orl
dec
pop
dec
dec
sbb
rclb
add
stos
sub
js
in
fwait
adc
fs
cmp
loopne
pushf
dec
push
and
lret
ror
leave
test
data16
fpatan
ret
mov
rclb
mov
and
scas
xchg
push
xorb
dec
add
insb
xlat
ds
rorb
popl
roll
inc
xor
mov
jnp
push
pop
mov
orb
dec
sbb
jge
movsb
pop
adcb
ret
cmp
out
mov
inc
movsb
jb
cmpsl
pop
call
push
or
inc
add
pop
pop
add
add
inc
fstpl
fisubs
sahf
xlat
xchg
test
das
stos
lcall
cmp
lods
and
and
mov
test
adc
addb
mov
aad
adc
and
out
mov
lds
or
pop
dec
int
pusha
lods
movsl
test
test
mov
mov
cs
pop
xchg
mov
jge
gs
shr
repnz
lret
data16
sbb
adc
mov
mov
push
call
aam
jae
sbb
inc
sub
pusha
int3
mov
out
sub
mov
cltd
das
mov
ss
xchg
mov
std
cmpsl
xor
hlt
lods
lds
jb
popf
jmp
mov
xchg
addl
sub
and
cld
jo
in
fisttps
push
pop
dec
xchg
js
and
xchg
pop
and
and
dec
xchg
out
jne
mov
xor
mov
sub
push
ror
lods
mov
adc
or
adc
inc
lret
insb
add
lods
adc
adc
pop
xchg
sbb
cmp
pop
jp
dec
mov
push
xlat
test
fs
test
test
adc
inc
inc
shll
xchg
xor
inc
cs
mov
jge
aam
lods
sahf
jg
ret
popfw
jns
jp
ds
mov
daa
fs
clc
sti
add
push
dec
push
rcr
xor
inc
ret
lret
inc
test
popa
and
mov
mov
fcoml
cmp
cli
mov
mov
jo
mov
add
scas
xchg
dec
add
xchg
or
and
xorl
mov
cmp
pop
add
mov
sub
jmp
imulb
jns
mov
mov
iret
enter
adc
xchg
repz
mov
lret
xchg
fldenv
aad
xchg
jb
mov
flds
xor
in
test
or
mov
mov
aaa
xor
inc
pop
shll
add
cmp
sbb
sbbb
stos
pop
dec
xor
arpl
cmp
dec
and
adc
out
scas
in
cmpl
movsl
test
inc
lcall
pusha
aam
stc
mov
shlb
dec
sahf
out
xor
push
mov
lcall
fsubs
mov
dec
int
push
lret
xchg
lret
adc
push
mov
decl
cmp
ret
mov
shr
ja
push
fidivl
cmpl
xor
xchg
shrl
mov
cmp
jp
fsubp
mov
idivb
or
mov
jecxz
or
subb
mov
hlt
mov
pop
mov
rorl
and
icebp
dec
dec
adc
pop
bound
xor
mov
and
popl
aaa
std
subps
pmaddwd
scas
popa
outsl
ja
lods
orb
inc
cmp
jno
pop
lret
sbb
jecxz
inc
pop
notl
mov
or
xor
ror
addl
ret
dec
test
push
cmp
xor
mov
add
fdivrp
aad
popa
or
fwait
push
push
and
jge
cmpsb
and
mov
bound
imul
mov
hlt
xor
sar
cmpb
sub
dec
ja
test
jbe
loope
xchg
xchg
pop
add
cmp
and
lea
cmc
ret
clc
mov
loop
xor
in
mov
js
fisubs
lret
cmp
dec
enter
mov
stc
add
fists
sub
out
and
xor
mov
movsb
inc
shlb
shl
pop
mov
xor
sub
ja
push
outsb
adc
mov
mov
and
mov
and
mov
out
jmp
aam
in
mov
adc
ss
jns
int3
cmpsb
and
aaa
cmp
popf
mov
filds
sbb
out
mov
push
and
jmp
cld
xlat
and
push
inc
sub
push
loopne
push
dec
sub
adc
ret
test
add
inc
mov
xor
xor
mov
rorl
les
mov
scas
lods
scas
or
in
fsubr
pop
mov
pop
adc
pop
cmp
int
pcmpgtd
pop
sbb
jg
dec
pusha
std
and
lock
fnstcw
js
sub
and
fmul
call
and
mov
lahf
jnp
push
fmuls
aas
ljmp
xchg
mov
fs
dec
shrl
jbe
add
sti
cmpsl
ret
scas
stc
shl
inc
out
mov
add
sbb
rolb
inc
stos
cmp
fistl
and
add
pop
sub
sahf
mov
stos
jle
mov
cld
and
mov
lds
push
jnp
in
ds
out
xor
cmpsl
cmp
xchg
push
stc
mov
push
push
push
leave
pop
and
xchg
jne
xor
or
mov
or
mov
inc
insb
sahf
push
pop
sub
roll
in
fidivs
or
sbb
rclb
inc
movsl
mov
repnz
out
stos
fisubrs
dec
jbe
fwait
xchg
adc
stos
add
cmp
pop
mov
int3
fcompl
andb
push
lods
add
ds
dec
jbe
mov
insl
stos
mov
ret
or
lods
xchg
pop
sti
mov
aas
lahf
mov
rorb
jl
sbb
ljmp
push
fnsave
sti
or
mov
je
ret
lea
mov
notb
movsl
shlb
cmp
lahf
or
dec
cli
js
inc
aas
jmp
adc
xchg
rcrb
repnz
notb
test
pop
or
adc
adc
ficompl
push
or
jae
dec
xchg
lds
jl
jmp
inc
jmp
movsb
jnp
cli
aam
clc
mov
lock
sub
aad
sbb
cmp
pop
pop
sbb
orb
add
cmp
hlt
mov
mov
xchg
mull
lds
notb
mov
jb
out
inc
gs
dec
scas
jne
lret
mov
dec
invd
bound
sub
ja
sub
insl
jnp
xchg
aas
adc
es
stos
mov
loope
sbb
and
push
fisubrs
dec
pop
jp
xchg
xor
lea
pushf
mov
enter
idivb
add
sbb
add
mov
mov
jne
popa
jns
push
cmp
mov
cmpsl
scas
jno
inc
adc
scas
test
sub
cli
xor
add
sub
xorb
xor
xchg
mov
in
mov
inc
sub
nop
scas
cmp
xchg
ljmp
std
xchg
or
call
orl
adc
stos
push
mov
leave
insb
test
mov
stos
mov
lock
jae
outsb
fs
adc
cmc
adc
fucomp
cmp
xchg
mov
xchg
emms
sub
sub
stc
stc
mov
sarb
push
jnp
fidivrl
add
lods
cwtl
mov
mov
dec
jno
or
setno
pop
xchg
ljmp
push
push
mov
lods
nop
es
lock
mov
cwtl
sarl
ja
push
je
stos
loopne
and
xchg
pushf
out
push
mov
outsb
pop
and
jb
mov
rolb
stos
and
lcall
inc
cmpsl
jne
std
adc
clc
loope
jl
les
jmp
sbb
push
aaa
in
icebp
push
sub
fbld
xor
aas
cmc
sbb
es
test
nop
or
arpl
cmp
push
subl
pop
cmc
jbe
data16
push
jmp
outsb
push
xlat
mov
jo
fldt
ret
mov
mov
mov
out
js
in
fstp
mov
ljmp
adc
inc
push
sahf
push
mov
cmpsb
xor
inc
adc
mov
or
insb
insl
pop
mov
mov
outsb
pop
dec
mov
loop
rcrb
mov
ljmp
rcrb
cltd
inc
rorl
hlt
loope
stos
stos
cmp
sbb
int3
sbb
sti
movsb
std
loopne
fadd
mov
push
mov
scas
into
loop
and
jg
or
xchg
xchg
je
mov
aas
lret
xchg
cmc
inc
lods
test
mov
in
or
sub
fnstsw
gs
adc
jns
nop
loop
or
inc
lcall
or
fcomp
call
xchg
lods
popa
jmp
sbbb
icebp
push
mov
or
das
pop
and
xchg
jno
test
out
test
add
push
call
lods
fstp
aam
popa
jg
inc
fnstcw
jle
pop
sbb
out
pop
xlat
and
test
aaa
push
push
sub
inc
dec
xor
push
mov
mov
adc
cwtl
int3
lahf
dec
test
sbb
mov
sbbb
inc
dec
in
inc
push
sbb
push
mov
cmc
cmp
mov
jmp
outsb
push
es
mov
pop
dec
xchg
mov
aaa
fnstenv
mov
pusha
dec
daa
mov
jbe
xor
sub
mov
jmp
or
push
xor
push
ds
arpl
insl
cwtl
cmp
in
pushf
pop
rcll
inc
jo
push
outsl
pusha
push
sub
add
imul
pop
mov
mov
xchg
mov
or
aam
icebp
cmp
vmaxsd
cmp
sub
lea
jnp
mov
pop
es
ret
lcall
pop
cmp
nop
fcomps
jecxz
lcall
dec
push
fldl
das
cmpsl
faddl
inc
inc
adc
lods
ljmp
testb
push
movsb
push
jmp
inc
arpl
aam
sbb
or
aaa
arpl
rorb
mov
fildll
test
dec
lods
sar
aad
movsb
push
imul
cwtl
push
nop
xchg
add
imul
imul
cmpsl
out
gs
xchg
pop
mov
sub
cmp
xor
cmc
cli
cld
lret
mov
test
lock
xor
jmp
mov
jo
and
mov
xor
out
pop
cwtl
dec
adc
mov
stc
mov
or
jle
leave
or
dec
es
js
test
xchg
mov
js
loop
aam
scas
pop
jecxz
cmpsb
xor
mov
pop
jo
pop
adc
sbb
sub
push
es
push
adc
sahf
jb
ds
ret
push
scas
out
sbb
jns
add
stos
inc
mov
mov
or
push
inc
into
fstl
jno
lea
dec
pop
sbb
cmp
fidivrl
nop
iret
cwtl
pop
mov
xor
ficomps
test
lods
push
inc
mov
dec
mov
dec
mov
mov
mov
push
aas
ror
sbbl
int3
int3
pop
data16
pop
inc
sub
xlat
sbb
pop
jbe
into
and
pop
push
int
jge
lea
popf
push
mov
dec
subl
mov
cld
cmc
inc
ljmp
xchg
sbb
inc
mov
mov
clc
pusha
int3
clc
rol
or
adc
adc
sub
sub
lods
inc
dec
xchg
and
cmp
fiaddl
in
adc
mov
and
cld
das
pop
movsb
ret
addr16
pusha
xchg
sub
and
pop
xchg
and
pusha
jae
int
mov
xor
sahf
pop
add
mov
loop
cmp
pop
cmpsl
or
push
mov
and
inc
or
sub
push
dec
data16
out
out
push
stc
jecxz
test
addb
loopne
push
aaa
mov
inc
pusha
and
es
movsl
fists
push
aaa
push
cli
clc
push
push
js
jp
hlt
icebp
xor
mov
sbb
mov
pop
cmpsb
add
sbb
xchg
fcomps
call
test
cmpsl
int3
pop
in
lcall
rol
add
mov
popl
mov
pop
gs
idiv
add
fnstsw
sbb
inc
lahf
pop
and
lahf
mov
xor
insb
in
or
mov
fildll
xlat
insb
push
out
popa
sbb
divps
not
and
push
sbb
push
dec
adc
sbb
fs
imulb
jne
inc
and
lods
mov
fld
dec
pushf
out
mov
xlat
add
push
jae
xchg
sarb
mov
les
jl
daa
cs
inc
dec
gs
pop
vpmovmskb
mov
stos
jno
into
fsubrl
push
or
sahf
push
scas
adc
mov
int3
xchg
dec
jg
pop
jns
push
adc
sbb
movsb
int3
sbb
push
idivl
add
outsl
xor
mov
adc
and
dec
pop
mov
mov
inc
pop
lret
jno
lahf
test
mov
iret
mov
jo
xchg
movsb
pop
daa
dec
stos
cmpsb
mov
mov
ror
inc
scas
jmp
mov
xchg
cli
int3
pop
and
dec
push
inc
push
hlt
ret
jae
push
cmp
mov
stc
cmp
fadds
fmuls
repnz
sub
lds
and
add
push
clc
xor
jl
aaa
arpl
pushf
sti
mov
sbb
push
lret
in
hlt
out
adc
xchg
add
sbb
int3
popf
cmpsl
mov
testl
aam
cmp
enter
jbe
in
adc
cmp
mov
addr16
xchg
ja
jle
stc
add
pusha
rcl
stos
xlat
or
mov
mov
and
fstpt
int3
rolb
cmpsb
pusha
popa
repnz
inc
mov
mov
test
jg
stos
mov
loope
mov
daa
fmulp
insl
xchg
inc
pop
and
lods
and
fcoml
cvtpi2ps
stos
and
sub
testb
aam
jge
adc
lret
jns
xchg
aaa
mov
xchg
cmpsl
sub
idiv
das
dec
pop
dec
jecxz
subb
cmp
mov
lods
ret
or
es
cld
popa
jl
adc
push
ja
cli
adc
pavgb
mov
pop
fsubrl
inc
fisubrs
xchg
adc
mov
jecxz
sbb
xchg
adc
ror
push
xor
mov
loopne
jno
sub
test
call
mov
add
cltd
xor
popf
mov
lahf
jae
dec
mov
push
in
loop
jmp
ja
enter
jbe
pop
test
cmp
iret
int
pop
cmp
es
push
int3
dec
inc
xchg
int3
lds
loopne
loope
je
repz
mov
sbb
xchg
jae
xor
shlb
pop
push
pushf
loop
sub
mov
dec
push
shll
add
incl
daa
loope
pop
inc
and
sbb
outsl
cmp
enter
repnz
xchg
std
dec
shlb
jno
pop
fsubr
add
addr16
adc
mov
mov
lea
adc
iret
cmpsl
shll
aaa
ds
cmpsl
xor
hlt
js
mov
stos
cmp
and
mov
dec
lret
sbb
xchg
mov
xor
mov
lock
adc
mov
cld
jmp
mov
xchg
jmp
outsl
cs
pop
inc
jne
pop
xorb
arpl
pusha
mov
punpckhbw
sub
mov
and
cmp
dec
dec
mov
inc
imul
mov
adc
xchg
xchg
push
add
and
das
mov
inc
xchg
pop
stos
jp
lret
fstpl
add
aas
dec
jbe
pop
lock
and
sbb
inc
shlb
cmp
xchg
fisubrs
repnz
sarb
and
mov
sub
and
sbb
pushf
add
mov
mov
sbb
iret
loopne
daa
jns
data16
pusha
ss
imul
cmp
ret
mov
add
jnp
cltd
push
test
jecxz
inc
les
xlat
adc
and
imul
cmp
xchg
ljmp
mov
filds
outsb
das
mov
sbb
aas
or
fwait
roll
or
add
mov
inc
lret
inc
cmp
dec
pop
movsl
fdiv
xchg
jns
and
sub
out
movsl
adc
mov
imul
mov
int
push
dec
mov
push
mov
jp
arpl
scas
mov
sbb
xchg
push
lahf
mov
mulb
inc
fsubp
and
and
mov
fstps
cli
and
jle
in
pop
lcall
mov
out
mov
push
pop
jle
mov
stc
xchg
nop
imul
mov
icebp
adc
and
pushf
movsb
fs
imul
pusha
sbb
mov
sub
leave
cmp
imul
xor
sbb
xor
int3
popa
in
clc
mov
jge
fcomps
pop
push
sbb
icebp
enter
cmp
xchg
nop
ljmp
push
mov
out
stc
stos
dec
sbb
jno
insb
rcrb
pop
add
fnstenv
or
enter
lea
cmpsl
mov
imul
adc
popa
inc
jns
setne
push
mov
mov
adcl
cmp
cmpsb
xor
xorl
add
mov
jae
jge
test
mov
cmc
mov
and
adc
add
cmp
aas
mov
sub
cmp
stos
iret
int
repnz
sti
repz
dec
pop
pop
out
repnz
push
loop
das
push
bound
push
pusha
ret
rol
push
sti
insl
insl
xchg
push
sbb
hlt
or
mov
dec
xchg
sbb
cmp
dec
les
push
iret
mov
sub
xchg
mov
cmp
out
out
or
ret
mov
ja
shlb
pusha
adc
pop
mov
xlat
sub
fimuls
insb
push
inc
dec
stos
pop
cwtl
cmp
out
cmp
lods
mov
add
xlat
out
lods
adc
lods
lods
hlt
xchg
arpl
sti
pop
dec
inc
inc
sbb
jl
pop
lcall
test
dec
test
rcll
mov
rep
sahf
sub
outsl
and
cwtl
stos
pop
hlt
add
data16
sbb
add
mov
jae
cmp
pop
or
dec
jge
fwait
sahf
sub
not
repnz
lahf
jne
lea
int
push
ss
sbb
mov
cmp
std
popf
mov
inc
les
add
add
jo
in
sub
push
adc
pusha
mov
sbb
mov
sub
gs
into
and
adc
lock
adc
adc
push
push
inc
jp
outsl
adc
cltd
dec
std
jnp
ds
or
mov
dec
fnsave
pushf
stos
ss
leave
scas
scas
mov
push
pop
pop
dec
inc
mov
mov
aad
into
data16
xchg
jbe
lea
into
sti
cmc
push
or
xor
dec
cmpxchg
pusha
int
mov
pop
xchg
jns
popa
clc
insl
lret
adc
xchg
insb
fdivs
push
jne
ret
cltd
fcmovnu
jbe
and
cmp
xor
test
pop
incl
inc
loope
leave
adc
cmpb
add
and
arpl
mov
mov
mov
aad
pop
cmp
ret
cli
pop
jmp
das
shlb
inc
and
test
sahf
clc
and
divb
adc
dec
push
cltd
jbe
inc
shlb
jmp
adc
fildll
fadds
xchg
je
lods
movb
sub
mov
in
movsb
cwtl
add
pop
inc
dec
test
fadd
mov
inc
lock
addl
testb
and
fsub
outsb
and
mov
lods
and
adc
clc
jge
sbb
out
test
mov
fdivr
loopne
in
mov
mov
mov
xorb
jp
leave
scas
addl
lds
sub
mov
rorb
in
roll
push
push
or
mov
icebp
pusha
jbe
in
andl
sti
in
push
hlt
mov
ljmp
jp
pop
xchg
fcomps
cli
les
add
pusha
rolb
xor
push
pop
add
popa
adc
mov
sarb
test
addr16
popf
push
jecxz
ljmp
pop
rcll
pop
ljmp
cmp
inc
inc
mov
out
mov
adc
push
mov
add
shlb
in
push
jbe
sub
pop
mov
mov
xchg
pop
aaa
pop
xchg
shrl
dec
mov
dec
push
scas
or
fistpl
pop
mov
add
jae
mov
dec
xchg
mov
ja
fildll
call
inc
nop
xchg
cld
int
cmp
gs
pop
mov
clc
std
lcall
lret
shrl
loope
mov
out
loopne
push
sub
lret
enter
xchg
loop
xor
adc
into
nop
xchg
xchg
push
in
xor
lahf
mov
movsl
jnp
pop
cmc
cmp
dec
or
shlb
jne
jbe
scas
insl
fistl
int3
ss
xchg
mov
clc
das
push
sbb
jmp
push
jae
pop
jmp
xchg
sahf
aas
lcall
sbb
imul
lds
mov
scas
xor
jns
rcll
sbb
cmp
mov
sbb
into
add
frstor
mov
dec
pop
push
icebp
fisubl
aad
add
pushf
sbb
cmp
jp
mov
push
xchg
mov
xorl
arpl
jae
arpl
into
sahf
push
enter
push
es
sub
rcr
cld
loope
pop
or
mov
mov
faddl
pushf
je
fwait
mov
cmp
in
sbb
or
jmp
cli
push
cltd
add
xor
mov
sarb
test
mov
out
jns
cmpsl
jne
pop
fs
dec
and
jg
adc
ss
cmp
in
aam
sbb
lret
xor
jmp
push
fwait
xchg
lods
cltd
mov
pop
cmp
add
cmp
ljmp
push
mov
xlat
enter
cmp
and
inc
sarb
std
aad
or
push
mov
out
dec
push
push
loopne
lret
andb
add
pushf
in
in
mov
std
mov
push
cli
ret
gs
xchg
es
add
push
stos
xchg
push
dec
jge
jmp
or
ljmp
add
idivl
cli
shrl
pop
shrb
call
les
mov
aas
clc
add
shl
std
repnz
mov
push
fistl
nop
add
cltd
sbb
push
movsl
mov
mov
sti
popa
lock
xchg
bswap
mov
lock
pop
negl
mov
incb
ds
repnz
adc
adc
test
dec
in
pop
push
xchg
pop
notl
push
dec
jns
or
fists
addb
sbb
jmp
jmp
xlat
int3
sub
iret
outsb
in
daa
test
clc
aas
lods
je
xchg
sahf
inc
push
mov
js
int
movsb
cs
fwait
or
adc
add
cmpsl
insb
dec
and
icebp
mov
sub
push
les
xchg
repz
call
sub
in
and
out
cmp
cmova
mov
jl
insb
adc
xchg
lcall
fs
jle
shrl
jns
subl
push
jecxz
lcall
ss
xchg
lods
inc
dec
push
iret
jmp
pop
mov
stc
xchg
dec
insb
rorl
cmc
inc
popf
dec
add
inc
sub
inc
mov
mov
inc
pop
test
sahf
ss
sub
dec
ljmp
insb
pop
fwait
out
mov
dec
dec
dec
in
jns
insl
test
lret
jae
imul
cmpsl
out
jg
lods
pop
movsl
cmpsl
test
cwtl
aad
in
pop
pop
int
adc
or
aam
xchg
aad
cmp
push
fstps
in
or
leave
incb
and
push
sar
lret
pusha
lahf
sbb
push
aam
arpl
repnz
inc
stc
adc
je
ljmp
jp
jns
iret
pusha
jbe
sti
cmp
mov
rorb
and
jg
out
lret
inc
xchg
cld
xchg
sub
xchg
ljmp
add
ja
aas
and
push
out
pop
push
push
pop
mov
pusha
mov
xor
push
or
ja
sub
imul
rcll
ret
popl
and
fdiv
pop
frstor
imull
jmp
out
cs
arpl
pop
mov
adc
lret
rolb
mov
stc
jle
das
stos
jnp
adc
sahf
xchg
lcall
jno
inc
xlat
out
mov
pop
je
popf
or
jb
cmc
pop
xor
and
sbb
mov
jle
sub
pop
lret
inc
and
lock
daa
jbe
lahf
push
cmp
leave
adc
aad
out
icebp
xor
mov
inc
inc
xor
enter
add
jg
push
or
sub
push
lods
mov
fidivs
jb
mov
jnp
mov
insb
cltd
pop
mov
dec
jg
push
lods
popf
pop
sub
in
fbstp
test
in
test
cs
or
shrb
gs
lods
inc
adc
xor
sub
dec
dec
and
sahf
out
mov
dec
scas
mov
in
inc
xchg
pop
mov
mov
das
dec
ds
lcall
cli
xor
dec
lret
cmp
shlb
mov
in
orb
loope
int3
mov
pop
stc
mov
fiadds
sbb
add
hlt
lods
test
fcomps
xchg
mov
add
clc
jle
or
and
inc
inc
insb
lea
pushf
push
xchg
enter
lods
lods
push
repz
add
push
jge
cmp
xchg
mov
fcmovne
dec
sbb
cltd
and
dec
icebp
in
ficoml
mov
ds
lea
inc
jecxz
push
mov
push
lea
clc
adc
stos
leave
or
cmpsl
cmp
pop
push
inc
jno
negl
movsb
adc
movsl
fidivs
std
gs
aas
cs
mov
test
push
sahf
popf
insb
inc
xchg
addr16
sbb
mov
adc
push
leave
mov
jns
lret
and
into
adc
inc
jge
cltd
push
movsb
hlt
fisttps
stos
scas
stc
push
cmp
cmp
stos
or
shlb
fcoms
test
push
xchg
mov
dec
dec
xchg
inc
stos
stc
lret
repz
push
scas
adc
sahf
and
pop
sbb
add
inc
mov
out
out
aad
mov
dec
mov
pop
xchg
scas
push
aas
arpl
daa
mov
lods
clc
icebp
jo
xchg
xchg
js
sub
jge
cmp
loopne
pop
sbb
mov
or
adc
fcmovne
cmp
cmp
mov
fisubl
add
jbe
stos
jns
and
in
mov
mov
aam
jmp
into
rcr
or
adc
sbb
cmp
testl
lret
add
xchg
pop
inc
ja
jo
pusha
jb
out
in
fcomps
and
push
ret
lods
jns
pop
imulb
in
adc
pop
cld
fidivs
and
imul
mov
stc
scas
jae
mov
fs
scas
jmp
lret
push
push
bound
fs
lock
imul
inc
fistpl
bound
mov
inc
or
sub
lret
fidivrs
int3
cli
inc
cmp
aaa
add
sar
and
int3
mov
jb
mov
std
mov
dec
nop
out
loope
adc
mov
push
hlt
stos
xchg
mov
adc
pop
popa
or
sbb
pop
jg
clc
jl
repnz
jp
movsl
pop
es
adc
lahf
mov
dec
dec
inc
push
fs
movsl
sbb
je
jle
xchg
push
movsl
faddp
and
mov
orb
and
and
dec
push
pop
lcall
data16
xor
adc
jmp
mov
popa
xchg
loopne
cli
dec
repnz
xchg
fcomip
in
out
jnp
cmc
cmc
stos
addr16
mov
movsl
popa
test
push
subl
out
xchg
or
add
lret
jp
cltd
out
fwait
pop
js
scas
cmp
lods
mov
sbbb
push
out
jge
xor
test
push
loop
out
mov
in
push
sbb
lock
or
jmp
xchg
in
std
ljmp
enter
jnp
movl
lea
add
test
fisubs
loopne
cmpsb
loop
xchg
lcall
hlt
test
jmp
push
incb
jnp
std
sbb
in
jl
arpl
or
mov
notl
jo
repz
sbb
pop
sbb
xlat
pop
test
fwait
lret
lret
mov
sub
fcomps
pushf
mov
mov
cld
mov
push
inc
pop
loope
shl
or
xor
mov
inc
xchg
adc
lret
pop
add
shlb
inc
loope
xor
ret
xlat
push
in
pop
add
cmp
or
lret
fbld
pop
lock
shrb
and
and
add
push
push
ja
xor
sbbb
arpl
lea
xor
fs
inc
pusha
push
adc
das
jbe
sti
dec
data16
pop
cmpl
and
mov
mov
push
addr16
cmp
or
inc
mov
mov
into
push
xor
imul
mul
push
mov
mov
and
hlt
loopne
cmp
xchg
xchg
pop
lock
sarl
mov
les
dec
stc
add
pop
ret
cld
outsb
cltd
pop
out
in
bound
andb
test
and
repnz
sub
shlb
mov
das
xor
xchg
movsb
lret
mov
sarb
jle
stc
ror
cmp
inc
pop
popf
push
xchg
inc
test
pop
or
in
cmc
sub
push
jg
pop
sbb
mov
adc
mov
stos
enter
add
or
call
outsl
sub
push
mov
les
movsl
outsl
adc
inc
decl
out
popf
out
lea
xor
inc
jmp
xlat
dec
inc
testl
add
test
loopne
mov
lods
or
mov
pop
cli
dec
mov
inc
adc
shrl
syscall
xor
jle
call
movsb
int
sub
mov
movl
xor
adc
mov
pushf
lcall
or
or
add
xchg
outsl
mov
sub
mov
daa
sbb
inc
sarb
fs
sub
cmpsl
mov
jmp
or
es
pop
ss
popf
insl
mov
test
xchg
movsb
in
test
into
sti
imul
xchg
mov
sbb
imul
jo
testb
mov
sub
out
sub
xor
mov
add
iret
lea
push
jbe
int
pop
in
and
sbb
rcrb
and
lret
ret
in
das
sbb
or
jl
imul
mov
nop
xor
pop
jno
push
dec
nop
bound
cmp
testl
sub
inc
jns
fists
shll
cmpsb
loope
mov
movsb
pusha
out
ljmp
scas
sub
cltd
test
push
sub
jecxz
xor
pop
push
cmp
popw
aaa
jns
pop
dec
popa
and
rcll
fsubrs
xlat
test
inc
pop
pushl
xchg
sbb
mov
sahf
hlt
sub
not
movsb
popf
insl
cmp
jmp
jne
jae
jno
scas
adc
je
fcomi
daa
rcrb
mov
mov
test
in
mov
lea
inc
pop
inc
cmpsb
add
cs
ja
or
sarl
push
mov
hlt
lret
iret
sub
mov
pop
sub
stos
data16
insb
fadds
pop
lock
int3
dec
push
xor
push
push
xchg
lods
pop
test
mov
xlat
cmpsb
and
lret
add
lret
fwait
mov
adc
sbb
ss
jnp
push
inc
xchg
mov
pop
je
fidivs
pop
mov
adc
push
cmp
cmp
jne
cld
sbb
lods
outsb
jecxz
push
mov
es
pushl
push
jne
ret
push
xchg
mov
dec
cmp
idivl
out
dec
pop
cmc
cmp
subl
mov
push
adc
lcall
movsl
xor
outsb
cmc
jb
fsubl
dec
ret
cmp
sbbl
dec
sub
inc
idivl
pusha
mov
sbb
xchg
cld
and
xor
xchg
mov
or
repz
add
and
jmp
dec
stc
xchg
test
test
push
push
pop
push
jmp
cmp
jp
ret
add
shll
mov
xor
loope
fs
cmp
cmp
mov
sub
cmp
or
aam
mov
inc
cli
mov
fnstcw
aaa
sbbl
je
add
pop
out
xor
in
decb
incl
sub
jnp
mov
pop
mov
ds
adc
mov
lds
lcall
nop
mov
jae
and
jp
add
xor
mov
cltd
out
jnp
scas
aaa
in
std
ret
testl
xor
loopne
mov
jg
das
jl
jnp
inc
mov
xor
xor
in
cs
push
int
dec
mov
mov
push
sar
jle
popa
mov
xchg
subb
mov
lds
sarb
mov
stc
pusha
rcl
mov
icebp
loope,pn
xchg
pop
or
add
adc
xor
pop
clc
dec
clc
pop
mov
xchg
lods
outsl
mov
pop
push
pop
push
xchg
addr16
push
shrl
nop
and
push
test
xchg
mov
inc
sub
aaa
or
aas
dec
shrl
test
shlb
mov
stos
mov
cmp
into
or
xchg
pop
cs
xor
xchg
fmulp
repz
xor
and
add
xchg
push
mov
xchg
mov
cmp
sahf
push
icebp
dec
popa
fdivrs
push
add
adc
rcll
pop
cwtl
cmpsl
adc
inc
rcrb
fimull
xor
lret
cld
push
sub
rcrb
inc
fmuls
shl
xchg
das
sbb
push
dec
mov
sbb
add
std
fisubs
sbb
stos
test
fidivrl
test
cmp
push
mov
cmp
fmuls
pop
cmp
test
int3
fsubs
adc
dec
outsl
mov
movsb
rclb
cli
js
data16
mov
test
shl
mov
mov
inc
fwait
test
sbb
pop
adc
cmp
pcmpeqb
dec
fcompl
push
sbb
push
jbe
sti
js
add
xchg
mov
pop
lds
pusha
push
scas
into
rcr
push
jge
ja
jo
cmc
push
popf
dec
out
sbb
dec
jbe
mov
mov
lock
adc
clc
out
push
inc
jno
ds
outsb
stos
ss
sbb
push
cmp
xchg
sub
jo
sbb
mov
out
psrlw
pop
mov
repnz
inc
xchg
js
icebp
inc
cmc
mov
xor
and
cmp
lahf
gs
sbb
dec
int3
sub
lds
sub
lods
fwait
outsb
pop
out
mov
insb
pop
insl
lods
lcall
sub
sahf
add
out
sub
sahf
lcall
inc
pop
dec
insb
inc
or
xchg
add
lea
lret
sub
jns
loope
xchg
cmp
imul
cmp
xchg
adc
dec
sbb
repnz
adc
pop
add
sbb
js
fisttpll
testl
sti
inc
jno
sbb
cpuid
pop
inc
jmp
and
fs
test
std
popa
pop
lea
lcall
jnp
into
jge
call
mov
xor
mov
sbb
mov
out
rcrb
or
pop
mov
lahf
sti
add
movsl
addl
xchg
scas
push
ficoml
sbbb
xchg
jo
fiadds
fidivs
push
mov
cmp
cmp
andb
inc
sub
xchg
imul
push
out
sub
lcall
out
subl
fidivl
inc
mov
jo
in
fnstenv
fistpll
mov
dec
imul
cmp
mov
loopne
mov
fcoms
movsl
mov
out
lret
sub
insl
push
mov
inc
mov
lock
mov
lods
popf
pop
sub
das
int3
or
out
cli
in
sbb
add
negl
outsb
sbb
mov
mov
ret
fcmovnb
bound
push
push
mov
mov
mov
sti
mov
in
push
lods
mov
jle
pushf
int3
mov
test
sahf
fsubl
xchg
pop
or
sub
xor
adc
ljmp
jl
push
push
fsubs
mov
inc
inc
jae
mov
ljmp
rcrb
jb
aam
popa
xor
sbb
stos
push
out
cmovs
pop
iret
add
lods
inc
out
inc
inc
sti
lret
clc
xor
push
inc
dec
shll
gs
jae
xchg
mov
push
pop
jno
xlat
cmpsb
mov
or
add
int3
sti
orl
js
jbe
fimuls
xor
imulb
in
and
outsl
rorb
add
fdivr
subl
xchg
inc
add
sbb
inc
cmp
sbb
xchg
cli
jbe
inc
push
xor
popa
rolb
and
out
in
mov
pop
xor
hlt
mov
daa
lds
adc
xor
mov
mov
dec
test
mov
popf
lahf
test
jmp
mov
add
cld
push
mov
or
jl
add
mov
sbb
mov
test
out
lcall
jns
das
mov
jle
add
xor
mov
mov
pop
cmp
sti
ficomps
int3
loope
add
push
rclb
and
repnz
fiadds
cmp
int
adc
or
loope
das
mov
sahf
mov
out
shl
pmulhuw
sbb
add
iret
push
pop
xchg
sbb
dec
jae
inc
iret
lahf
add
or
push
cli
shlb
jecxz
dec
popf
cmc
sbb
outsb
cmp
clc
gs
sub
nop
mov
inc
cmpsb
insl
repnz
mov
pop
xchg
jns
add
popa
jmp
xchg
mov
pop
or
sub
and
icebp
cli
inc
mov
xor
mov
or
pop
mov
inc
push
daa
xor
adcb
je
jno
jnp
test
loop
ret
nop
pop
int3
push
mov
clc
push
cmc
add
sbb
add
and
inc
inc
lcall
xor
enter
mov
fdivrl
push
mov
in
out
cwtl
scas
bound
inc
sti
and
inc
clc
inc
push
sbb
dec
adc
xchg
mov
or
pop
fstl
jo
push
ret
fs
xchg
icebp
adc
mov
mov
or
negl
push
cmp
cmc
mov
scas
movsl
in
mov
jmp
adc
mov
pop
fnstsw
scas
fcmovnu
mov
movsb
mov
cmp
outsl
fdivp
push
xor
pushf
ds
push
pop
sub
rorl
mov
sbb
and
mov
mov
mov
iret
sahf
loope
mov
and
sub
ljmp
pop
mov
and
jns
sub
loop
movsl
push
inc
mov
push
cmp
movsl
dec
pop
push
mov
sbb
mov
cmp
xchg
mov
xchg
cs
js
fcmovnb
adc
mov
mov
jae
or
xchg
out
inc
ja
in
pop
jp
pop
add
cli
dec
inc
add
cld
orl
pushf
cmpsb
int3
inc
nop
out
lret
mov
inc
jne
dec
std
mov
insl
ret
mov
adc
fsincos
hlt
jp
or
movsl
pop
nop
rcl
push
push
bound
sub
daa
jbe
push
adc
icebp
stc
fsub
out
push
test
ret
pop
adc
mov
cmp
dec
xorb
rcr
clc
fistpll
imul
dec
sbb
pop
mov
mov
inc
jle
mov
stos
xor
add
xchg
xchg
out
inc
xchg
dec
push
pop
aad
or
inc
push
insl
push
push
adc
ljmp
insl
cmc
jl
pop
adc
stc
mov
shll
ja
insl
adc
hlt
mov
out
jnp
adc
push
enter
mov
cmp
test
mov
lret
std
je
cmp
imul
out
push
rcll
gs
cmp
inc
pushf
arpl
pop
repz
rcrb
mov
outsl
add
pop
xchg
xor
xor
xchg
data16
cmp
scas
push
out
bound
add
pushf
mov
mov
jbe
clc
inc
cmpsl
dec
out
shrb
inc
xchg
xor
sarl
icebp
fisubl
push
je
sbb
notl
xchg
pop
pop
pop
xor
inc
ret
fsubs
aad
jecxz
pop
sbb
xchg
pop
out
xchg
or
lahf
imull
xor
cltd
out
and
push
sbb
sub
dec
scas
out
jg
ret
lret
and
jge
and
jns
into
sub
dec
lea
pop
imul
push
or
mov
int3
insb
pop
mov
dec
popa
incl
les
mov
stos
mov
jl
das
push
xchg
mov
push
adc
lret
sahf
addl
cs
lds
lock
mov
jle
jp
loop
mov
test
mov
leave
push
fxch
jp
scas
ja
mov
loopne
pop
fisubrl
movsl
push
data16
test
jle
xorb
sbb
jecxz
mov
mov
mov
loope
fldt
mov
xchg
add
inc
ret
subb
loop
inc
bound
repnz
lock
add
arpl
xchg
pop
loope
dec
xchg
pop
fwait
mov
dec
in
dec
dec
sub
mov
mov
xchg
roll
cmovae
ljmp
fsubl
andl
ss
push
scas
mov
adc
sbb
mov
cmc
aam
mov
out
pusha
or
xchg
mov
mov
sub
inc
arpl
and
dec
les
mov
jle
xchg
push
int
push
sub
out
mov
inc
test
rolb
push
popa
and
ja
add
mov
mov
fisubrs
mov
dec
adc
lods
xchg
jmp
repz
sbb
fyl2x
aam
pop
pop
dec
jmp
stc
cmp
xor
push
mov
lock
push
test
mov
add
movsb
adc
mov
lock
and
stc
dec
and
js
dec
insb
int
pop
pop
pop
fistpll
pop
mov
fwait
arpl
xchg
jp
dec
sub
and
mov
jmp
xor
xlat
inc
inc
and
mov
addr16
mov
cmp
ficoms
sbb
sub
ljmp
fwait
dec
push
jbe
popf
pop
push
mov
xor
aas
test
xor
dec
xor
xor
push
les
and
push
push
push
ja
push
into
push
sti
shrl
aas
pop
jecxz
push
mov
sub
mov
or
adc
popa
adc
mov
aam
shl
mov
cmpsb
or
push
add
cmp
shll
fs
mov
xor
pop
sub
xor
jg
cmp
and
xor
sub
cwtl
or
mov
sbb
lcall
ldmxcsr
mov
roll
sbb
jbe
push
cli
push
sbb
jg
rcl
push
mov
or
xchg
bound
and
adc
lock
test
mov
push
jne
loopne
stos
imul
arpl
div
andl
lods
mov
jmp
dec
cmpsb
jbe
clc
sbb
adc
push
mov
sbb
rol
ds
decl
imul
fdivrp
cwtl
shrb
push
out
std
sbb
jns
sahf
mov
iret
inc
push
xor
xchg
outsl
bound
inc
jecxz
mov
mov
fwait
jno
add
add
mov
sub
lods
fstpl
fbstp
jl
sub
jle
jl
mov
cs
sbb
dec
push
xor
imull
loope
cmp
sbb
fs
and
xchg
sbb
pushf
mov
arpl
dec
rol
call
jle
push
lods
xor
push
mov
xchg
push
paddsb
sbb
cmp
testl
or
fistps
shll
cltd
mov
push
lea
push
mov
add
mov
jne
or
mov
or
dec
mov
fs
pop
pop
fs
jns
mov
icebp
bound
testb
jmp
sbb
mov
inc
shlb
xchg
xchg
imul
or
or
push
shrl
ret
mov
and
xchg
inc
hlt
mov
add
popf
jnp
adc
imulb
xchg
push
test
sub
push
js
lcall
imul
dec
xchg
mov
inc
mov
push
icebp
ds
jbe
arpl
out
test
and
mov
inc
fst
adc
enter
stos
mov
sub
sbb
jp
push
mov
dec
xorl
adc
cmpb
push
aas
cmp
in
xor
js
pop
in
pop
dec
adc
mov
fwait
lods
aas
jge
das
fwait
jns
std
add
fidivl
and
sti
ljmp
cwtl
ljmp
inc
out
fcmovu
jecxz
push
inc
shll
cmp
sub
aas
ja
sbb
aas
and
inc
pop
xchg
lret
dec
movsb
lods
cmp
xor
ret
fistpll
or
aas
push
daa
pop
popf
xlat
imul
pop
mov
and
cltd
dec
fstpt
fyl2xp1
push
insb
pop
or
xor
mov
loop
sub
aas
pop
jo
inc
insl
repnz
cmc
pop
stos
xchg
loopne
jge
jbe
jmp
cmpsl
daa
out
cmc
bound
imul
stos
fsubl
jnp
ret
gs
dec
in
push
jge
mov
push
loop
dec
repz
movsb
jnp
stos
or
or
ret
shl
inc
mov
cmp
dec
adc
cmpsl
dec
mov
mov
and
sub
pop
pop
lea
loopne
dec
out
sbb
clc
jb
add
lea
push
jecxz
push
aas
xchg
in
cmp
data16
or
cmc
jae
cmp
or
hlt
dec
in
addr16
cli
sahf
pusha
xchg
adc
push
jmp
adc
mov
or
jecxz
repnz
fwait
lcall
mov
mov
imul
lcall
out
cmp
aas
into
push
jb
pop
sbbl
inc
shrl
int3
inc
inc
dec
jl
jbe
inc
inc
and
cwtl
mov
testl
jne
adc
insb
xchg
stos
nop
gs
shlb
add
cs
adc
adc
add
out
insl
mov
inc
mov
sbb
and
adc
sub
fmul
jl
xlat
ss
mov
testb
cld
stc
mov
xor
mov
fcom
lret
enter
xchg
dec
and
push
and
or
xchg
mov
jno
fisttpl
jb
jp
push
pop
test
adc
rclb
dec
jae
or
xor
ret
xor
jo
stos
imul
inc
xchg
and
repz
push
stos
int3
out
outsl
lcall
mov
pop
and
imul
jl
adc
add
adc
rorb
shll
inc
cli
and
je
in
mov
pop
mov
std
popa
dec
xchg
xchg
add
xchg
add
cmp
mov
sbb
neg
push
and
addb
repnz
sbb
mov
loope
xchg
push
sti
add
iret
lcall
sub
ljmp
mov
sar
lret
out
add
mov
lods
add
adc
sbb
mov
sub
negb
mov
cmpsb
lcall
popf
clc
movsl
insb
lret
jno
cmp
sub
ficomps
push
mov
sbb
adc
add
test
ffree
xor
jecxz
fadds
mov
lds
cmp
xor
sbb
xlat
int
jmp
and
sbb
bound
lock
je
xchg
pop
je
imul
mul
rcrl
cmpsb
or
pmaxsw
in
loope
shl
and
pop
jbe
lret
aad
mov
or
cmc
andl
mov
xlat
sub
insl
ss
negb
fdivrl
mov
push
cld
idivl
inc
dec
add
sbb
cs
into
rorl
out
add
jno
dec
cmpsl
ret
loopne
push
enter
mov
out
jb
bound
test
jnp
adc
adcb
cmp
test
or
fs
adc
sub
aad
xchg
sbb
pop
mov
fdivr
je
test
daa
pop
repnz
ss
add
mov
xor
and
add
shll
es
pop
mov
das
jne
jns
cmp
pextrw
scas
loop
iret
pop
cmp
xor
gs
or
jg
mov
loopne
add
mov
cmp
out
push
inc
test
pop
ds
dec
xor
stc
fs
es
shr
fwait
sub
or
das
mov
out
xlat
push
std
lea
int3
addr16
or
push
stc
push
pop
in
jecxz
jmp
pop
adc
ficomps
movsb
jmp
cmp
cmp
push
pop
aaa
lods
jle
xor
arpl
popf
cmc
or
movsb
push
lcall
mov
lret
mov
pusha
jp
cmp
pusha
mov
ret
dec
adc
push
and
icebp
adc
bound
cmp
sub
int
dec
shlb
xchg
sahf
mov
ja
sub
jnp
out
push
mov
add
push
sub
mov
stc
push
outsl
push
sub
mov
mov
call
pop
je
out
ds
mov
mov
dec
dec
jle
push
cmp
nop
pop
fisubrl
pop
cmpl
fstpt
add
bound
rclb
xor
mov
cld
xor
mov
xchg
inc
cmp
sub
jecxz
add
lcall
jb
pop
jp
arpl
test
xchg
pop
movsl
cmpsb
jle
shlb
sub
popf
popl
add
mov
xor
pop
push
pop
decl
inc
mov
lcall
aam
xchg
orl
enter
xchg
cmpl
pop
popa
mov
aaa
into
and
rorb
or
sbb
movsl
jmp
inc
jno
dec
aaa
xorb
xchg
mov
cld
movsl
mov
icebp
lds
adc
lea
shlb
mov
out
xchg
pushf
mov
xchg
cmpsb
jne
xor
aaa
popf
jnp
mov
incl
mov
cmp
xchg
mov
sub
jl
xlat
cwtl
jnp
jno
pop
inc
movsl
es
xchg
mov
push
fstl
jbe
lea
pushf
xor
in
sbb
xor
adc
rolb
or
add
movsb
cwtl
imul
aas
pop
sub
iret
test
or
dec
dec
aad
scas
mov
ret
or
dec
push
add
push
dec
lods
sub
insb
loope
fnsave
rcl
lods
jnp
xorb
inc
sbbl
lret
or
jle
push
sub
call
add
and
mov
xchg
lahf
lahf
inc
push
test
xlat
sbb
mov
xor
mov
adc
inc
or
fisttpll
popf
popf
dec
dec
sub
inc
dec
fdivrs
mov
fsubrs
xchg
lret
or
xchg
dec
mov
cltd
out
call
and
cmpsb
mov
xlat
sbb
daa
dec
loop
cli
dec
cmpsl
jg
sub
loop
cmp
out
fmuls
ret
arpl
dec
pop
sub
adc
in
nop
mov
sbb
outsb
sub
in
aas
xlat
add
lret
repnz
pusha
or
push
sbb
decl
aas
sub
or
out
jae
xor
dec
add
in
pusha
mov
scas
gs
push
adc
imul
pop
cmpsb
adc
cmc
add
pop
dec
xchg
and
aam
fmull
jmp
and
sahf
jae
mov
sbb
adc
adc
in
fisubs
or
int3
sub
icebp
movsb
mov
lods
out
mov
jl
fucomip
clc
jmp
jb
add
fbld
xchg
iret
mov
jl
fxch
inc
dec
ljmp
subl
push
dec
enter
das
jne
dec
mov
adc
xor
icebp
lret
pop
jno
in
and
or
fidivrs
cltd
data16
daa
sahf
call
imul
clc
mov
shrl
enter
lcall
mov
push
sbbl
into
inc
cltd
mov
mov
roll
ffreep
mov
test
and
and
mov
aam
cmp
aaa
push
sbb
xor
roll
xchg
push
fwait
push
decb
mov
enter
movsl
sub
and
cli
push
and
jg
and
sub
stos
push
xchg
das
mov
mov
das
cld
ret
pusha
insl
cmp
ret
cmp
mov
xchg
insb
sub
mov
mov
int3
push
daa
mov
and
mov
sub
inc
xlat
xchg
jmp
mov
mov
test
inc
enter
lods
cltd
dec
fwait
push
mov
and
xchg
hlt
sub
cmp
adc
popa
std
cmp
jmp
push
sub
outsl
test
mov
and
addr16
call
lock
sbb
cli
cwtl
aad
daa
dec
jge
fdiv
mov
stos
aam
cmc
sub
mov
mov
and
shll
add
adc
ret
push
clc
faddl
hlt
int
pop
rorb
sbb
xchg
xchg
rcll
or
lds
inc
out
fnsave
stos
fldl
adc
inc
cmpsl
dec
pusha
mov
sub
xchg
cmp
mov
push
or
and
loopne
cmp
dec
jge
jmp
xor
inc
jle
cmp
inc
in
dec
outsl
pusha
mov
pushf
lcall
mov
jl
pop
insb
sti
push
mov
outsl
out
dec
xchg
jbe
fiadds
jp
push
push
mov
int3
jle
vandnpd
pop
mov
mov
ret
sub
daa
rorb
shrl
add
loop
sbb
imul
mov
scas
repz
fcoms
das
xchg
ret
push
aas
sbb
sub
jno
adc
bt
cmpsl
pop
push
mov
out
ja
imul
test
lods
or
mov
jo
jno
push
test
pop
and
xchg
fbstp
sbb
push
or
xlat
adc
clc
cmp
cmc
jne
pop
pop
or
sti
sbb
cmp
icebp
cmp
xchg
jecxz
repz
pusha
or
enter
mov
inc
icebp
out
loope
pop
icebp
es
orl
mov
mov
shrl
mov
xchg
pushf
dec
imul
inc
dec
les
or
jno
loop
imull
or
mov
mov
shl
cmp
xchg
pop
adc
mov
adc
xchg
mov
xlat
cmpsb
or
xor
pop
js
sahf
add
ret
das
sarb
push
int
jb
imul
push
sub
push
dec
mov
scas
lock
inc
subb
call
or
inc
aaa
inc
jnp
push
imulw
adc
inc
cmp
jg
inc
nop
or
cwtl
mov
cmpsb
fcmovu
cmp
push
in
and
test
test
and
pop
sarl
add
adc
or
aam
add
loopne
xor
xor
in
incb
push
insl
dec
xor
inc
mov
outsb
lcall
mov
shlb
cltd
inc
or
insl
mov
test
xorl
add
fs
sub
aam
sub
pusha
inc
sub
mov
call
loop
fwait
adc
xchg
cmp
rcl
pop
sarl
xor
sbbb
mull
push
dec
out
push
mov
addr16
push
lods
filds
data16
adc
test
push
into
aaa
aas
cwtl
mov
jbe
mov
or
lods
pusha
mov
jno
xor
dec
sub
daa
xor
dec
pop
fwait
loope
pop
push
les
cs
mov
cmp
cltd
ljmp
stc
add
out
xchg
repz
mov
mov
cvtdq2ps
xchg
pop
gs
aas
jp
mov
daa
enter
jmp
int
sub
stc
lods
mov
sahf
aam
jmp
les
sahf
xchg
push
sbb
lcall
jp
sub
xchg
stos
stos
jne
cld
sub
movl
xchg
add
mov
test
xchg
jle
ret
dec
jmp
test
in
lret
push
jbe,pt
pop
fstpl
je
fdivrl
sbb
bound
jg
lret
cwtl
mov
repnz
mov
popf
outsb
out
jg
iret
push
pusha
stc
fmuls
call
push
cld
leave
dec
iret
aad
test
xchg
push
push
xor
cmovne
xchg
ret
sahf
jno
sbb
or
cwtl
inc
sub
maskmovq
negl
push
or
pop
push
inc
lahf
mov
mov
inc
or
dec
ds
pop
scas
sbb
jo
sbb
or
subl
and
pusha
fildll
ror
ffreep
lret
cmp
and
gs
adc
or
shl
insb
ljmp
popa
cmc
ja
adc
test
xor
ds
test
xlat
adc
sbb
sbb
pusha
insb
in
pop
ljmp
xor
add
int3
iret
xor
into
repnz
rolb
lcall
fbstp
sbb
int3
test
bound
dec
lods
ret
jge
movsb
fcmovne
lahf
mov
jl
push
mov
push
pop
in
testb
test
std
xor
cmp
lret
ficoms
ret
shlb
mov
aaa
loop
mov
inc
cmpsb
mov
je
lret
push
lret
enter
in
pop
imul
jo
fs
jecxz
inc
bound
mov
stos
mov
lods
xor
push
loopne
jl
push
inc
shlb
sbb
sbb
pop
xchg
in
testl
and
pop
nop
mov
inc
adc
call
mul
es
or
popl
and
push
aad
arpl
idivl
dec
cmp
lods
test
cmpsl
mov
or
aad
stc
pop
popf
ret
daa
loopne
hlt
adc
pushf
and
push
sbb
stos
jnp
or
fs
xchg
ds
pop
mov
mov
and
mov
and
bound
jg
xor
xor
loopne
push
out
jmp
jo
arpl
rcrb
xor
mov
enter
sub
lret
lods
sbb
adc
pop
and
push
pop
ljmp
and
or
sub
inc
insb
adc
mov
mov
es
mov
cmpb
leave
mov
inc
out
and
push
ret
ret
mov
cs
mov
stos
cmp
adc
popa
fsubrs
std
ret
push
push
imul
lret
stc
pop
xchg
popa
popf
sub
or
out
mov
es
movsl
loop
dec
scas
js
jg
test
int3
xlat
lds
enter
es
popa
or
loopne
push
or
lret
push
sti
adc
lea
xchg
push
in
xor
jb
imul
mov
mov
mov
roll
in
call
xor
pop
lahf
adc
or
or
xchg
aaa
push
pop
in
in
and
mov
push
mov
iret
inc
outsl
das
arpl
or
sbb
aaa
jg
cld
or
popf
jmp
push
lods
data16
sahf
jno
jl
xchg
int
orb
scas
mov
in
inc
loop
aam
loopne
adc
mov
lret
sub
lods
fmul
test
pop
mov
loop
lahf
sbb
ss
adc
je
cmp
jl
subl
gs
add
int
cli
and
dec
test
adcl
int
cmp
xchg
xchg
shll
aad
lock
sar
mov
push
shll
sbb
xor
lods
rcl
push
jmp
mov
cli
scas
xor
xchg
mov
test
stos
sbb
sahf
popf
and
js
inc
or
xlat
xor
sub
lret
inc
mov
xor
sahf
aam
jl
mov
frstor
in
fwait
mov
scas
fisubs
call
inc
jb
pop
iret
pop
notl
or
jbe
sbb
add
push
jmp
sub
rol
test
sub
push
mov
cli
and
hlt
fimull
arpl
sbb
cmp
jge
dec
cmp
fcmovne
pusha
repz
clc
pop
movsl
xor
test
cmp
adc
and
nop
xchg
mov
insl
cwtl
fcmovb
jmp
cmp
fs
cltd
mov
fstpt
int3
or
rcrb
imul
cli
sbb
mov
cmpsl
sub
pusha
push
pop
cmpsb
jno
lods
jge
fsubrs
mov
scas
inc
mov
addr16
and
push
and
xor
adc
aad
mov
and
mov
push
fs
call
daa
inc
add
xchg
xchg
daa
inc
pop
sbb
lock
gs
lds
mov
cmp
jmp
lods
sbb
aas
mov
add
in
test
sub
mov
mov
pop
pop
add
inc
lahf
or
arpl
and
inc
xor
stos
xchg
xor
mov
sahf
lret
repz
or
xor
lods
add
aaa
sbb
sbb
xor
lea
call
mov
jge
push
out
data16
pop
add
mov
flds
cmpsl
mov
pop
loop
sbb
stos
cmpb
mov
adc
xor
insb
xchg
jae
add
mov
icebp
adc
xchg
jecxz
push
inc
xchg
cmp
jp
loope
push
rol
xor
jmp
mov
and
movsl
dec
cwtl
hlt
or
call
inc
jnp
adc
cwtl
push
testl
xchg
xchg
ror
and
sbb
push
pop
xchg
popf
mov
cwtl
inc
lret
jecxz
dec
push
jo
fistl
sbb
jl
xchg
jg
xor
push
inc
movsl
lret
sbb
shl
aas
jle
loop
xchg
or
xchg
sbb
push
or
cmc
fnsave
shrl
pop
and
lcall
das
push
negl
inc
ror
mov
add
pop
jle
add
rcll
sub
push
ja
mov
ret
fsubrs
add
and
sbb
jb
mov
xchg
imul
pop
add
jne
jge
xor
add
lea
jp
mov
mov
and
sahf
imul
pop
std
rorl
out
pop
xchg
add
call
insb
pop
mov
add
and
inc
cmp
jmp
test
loope
inc
repnz
mov
mov
out
jecxz
jp
ja
mov
mov
adc
rcrb
imul
xchg
nop
repz
inc
xchg
cmpsb
jmp
aad
jp
std
dec
notl
xor
inc
mull
sub
sub
out
icebp
xor
imul
xchg
mov
cmp
pop
inc
js
xchg
mov
call
lods
mov
test
jae
out
repz
or
sbb
xor
mov
daa
mov
pop
mov
fidivrs
dec
push
jnp
enter
rdpmc
sti
out
xchg
mov
mov
stos
push
lahf
pusha
iret
adc
mov
add
subl
mul
inc
sub
fildll
ficoms
fadds
add
mov
push
shrd
mov
cld
add
ds
add
xor
dec
fmull
in
cli
cmp
push
dec
lret
enter
int
daa
xchg
sahf
lock
stos
daa
and
incb
jno
mov
jp
pop
cmp
stc
or
dec
jge
push
or
sub
mov
inc
pusha
mov
and
add
pop
pop
sbb
push
inc
push
aas
fwait
pop
enter
push
or
js
push
out
inc
inc
pop
jo
test
hlt
add
sbb
push
shl
push
icebp
mov
icebp
idivb
mov
in
movsl
sbb
mov
ret
sub
std
jns
and
scas
and
add
pop
ret
push
or
push
cld
roll
imul
sti
sarb
gs
and
leave
sti
rep
faddl
add
repnz
ret
cmpsl
int
xchg
or
push
stc
xchg
jbe
jnp
pusha
pushf
dec
xor
in
mov
pop
fcompl
enter
ret
xchg
adc
cmpsb
pop
loopne
aaa
jnp
daa
call
cltd
inc
mov
insb
dec
mov
push
dec
cwtl
add
xorl
loope
ja
rcrl
loope
shlb
cmpsb
xor
fs
arpl
xchg
push
push
xor
inc
outsl
gs
sar
lds
jb
push
insl
mov
xor
pop
cmp
push
cmp
lods
cld
cltd
int3
cmp
xor
data16
mull
fnsave
fadds
cltd
mov
lcall
mov
sbb
data16
std
or
repz
push
mov
es
sbb
frstpm(287
test
push
into
and
les
cld
sub
inc
or
clc
add
insl
movsb
sti
testl
subb
dec
add
xor
jmp
sub
int
cltd
sarb
push
out
and
and
jp
mov
incb
lods
lahf
cli
popf
xchg
or
cltd
scas
imul
fnstcw
and
inc
sbb
cmpsb
jge
test
cmc
js
xor
dec
into
pop
mov
cmc
jno
loope
mov
mov
mov
test
stos
mov
inc
pop
pusha
mov
stos
mov
dec
push
out
xchg
mov
jae
cmp
xor
or
repz
xor
popa
adc
mov
in
xor
fldcw
nop
fwait
cltd
jp
adc
shr
fs
mov
xchg
pop
fmull
dec
add
scas
mov
roll
mov
pop
ds
sahf
jmp
icebp
inc
insl
cmc
mov
mov
push
inc
jmp
xchg
mov
sbb
inc
fmuls
cmp
mov
mov
xchg
or
dec
in
pop
pop
jecxz
sub
xor
pusha
sbb
mov
pop
addb
sub
js
pushf
jb
out
pop
mov
fxch
or
cmp
and
sbb
sbb
cli
xor
ja
pop
inc
mov
push
js
adc
push
ret
repnz
call
fdivrs
mov
addr16
std
orb
and
sub
gs
jne
push
movsb
lods
xor
out
mov
loop
dec
cli
mov
aad
xor
imul
push
and
add
lods
rcll
pop
shrb
jecxz
cwtl
mov
sub
push
pusha
rcll
sub
jae
lahf
jle
dec
addl
pop
pop
out
je
fldcw
test
jae
jb
outsb
mov
xchg
ret
daa
negb
push
adc
dec
jns
and
lret
in
popl
sub
ds
push
imul
inc
xchg
std
arpl
jbe
mov
cwtl
pop
xor
rorl
add
sub
xor
icebp
ljmp
int3
arpl
jmp
and
add
lret
push
and
clc
push
mov
mov
fbstp
xchg
rcr
mov
lods
ljmp
or
call
sub
je
ds
sub
cs
add
xor
inc
xlat
rcrl
loop
adc
outsb
jns
sahf
jmp
sti
cld
jp
into
mov
lahf
pushf
mov
movsb
push
add
add
pusha
mov
inc
jnp
xchg
or
in
js
lods
dec
in
sub
out
mov
popf
enter
scas
add
imul
scas
or
lds
mov
and
xchg
popf
add
xchg
xor
cwtl
mov
and
mov
xchg
pop
add
inc
jb
fiadds
addr16
fidivrl
sbb
sti
cs
cmp
lods
adc
and
arpl
sub
mov
test
mov
jle
stc
cmp
rolb
enter
jp
lret
mov
jg
or
mov
dec
xor
mov
sub
shl
inc
int
mov
dec
xchg
lock
dec
mov
adc
or
std
xlat
insl
scas
jl
lods
jb
sbb
and
jmp
cld
cmpb
ret
clc
push
cs
jae
cld
out
cmp
scas
inc
mov
pop
pop
int3
aad
imul
cmpsb
jne
jg
data16
jne
adc
loop
xor
mov
movsb
sbb
test
sbb
xchg
or
cld
je
adc
inc
fldcw
mov
jp
inc
insb
mov
add
shlb
push
nop
imul
ds
cmpl
test
jns
sti
cld
dec
cmp
sbb
fucom
lods
sti
lds
test
gs
push
dec
imul
das
out
fstl
fdivr
les
stos
cmp
push
das
sub
xchg
mov
test
incl
pop
addr16
repz
xchg
fnstsw
in
ljmp
sub
or
push
addr16
mov
sub
pop
dec
inc
bound
add
sarl
in
or
mov
mov
mov
xchg
and
cmpsb
enter
cmpsl
jno
das
xchg
jge
imul
jl
ficompl
mov
pop
add
aas
adc
outsb
pop
or
mov
xchg
or
imul
mov
xor
cmp
fnstenv
testl
aas
mov
mov
insb
inc
movsb
movsl
and
rolb
inc
ret
pop
and
inc
flds
inc
sub
mov
adc
push
push
das
in
outsb
idivb
sahf
fstl
movsb
repnz
rorb
cwtl
loope
mov
nop
push
scas
insl
sbb
aad
xchg
mov
clc
ljmp
and
sub
push
sar
in
and
jge
call
es
cwtl
stos
push
imul
push
hlt
push
cmp
cmpsl
mov
insl
dec
lahf
sahf
push
in
pop
movsb
pop
pushf
pop
shlb
inc
adc
pop
cmp
fwait
cli
inc
fwait
sub
pop
jl
repz
or
pusha
das
loop
pop
and
dec
or
ja
lods
iret
scas
mov
andb
cwtl
lea
dec
leave
mov
inc
cmp
sbb
mov
out
fnstcw
stos
ret
pop
aad
sbb
lret
sub
mov
lea
in
lods
or
inc
pusha
adc
aad
fcom
in
bound
push
cmc
push
test
pop
mov
push
bound
jb
pop
lock
outsb
or
sub
and
out
scas
sbb
and
pop
or
call
int
rcl
pop
pusha
fucomp
mov
push
push
addr16
and
in
push
ss
inc
call
popa
mov
idivb
adc
jge
and
loopne
or
out
je
add
or
lock
and
xchg
mov
scas
popf
mov
test
in
pop
adc
sbb
pop
adc
add
in
adc
jmp
iret
fisttps
lret
pop
mov
jmp
and
xchg
int3
add
pop
dec
cltd
push
cltd
bound
cs
push
adc
call
int3
pop
fdiv
or
mov
aaa
popa
and
repz
mov
sub
ss
cmp
jae
mov
insl
mov
jp
adcl
cltd
pop
sbb
sbb
test
in
mov
dec
adc
pop
jbe
xchg
pop
xor
enter
lcall
mov
sub
roll
and
or
xor
or
popa
outsl
neg
scas
xlat
xchg
push
adc
mov
sbb
clc
push
mov
sti
sub
jno
xor
xor
mov
adc
sbb
and
dec
push
push
push
add
xlat
cmpsb
push
dec
test
es
sbb
sub
xchg
pop
out
fsts
xor
loop
mov
sbb
les
shl
fwait
mov
mov
mov
pop
dec
lds
sub
dec
jecxz
lahf
adc
ret
movsb
lea
xor
adc
mov
ds
jecxz
adc
pop
mov
lcallw
and
subl
mov
push
clc
sub
repz
jp
addb
xchg
mov
or
push
push
push
jnp
jo
xchg
aam
push
outsb
sbbb
pop
sub
xlat
jge
pushf
cli
lret
cmp
or
imul
in
push
pop
or
in
mov
jnp
mov
xchg
push
enter
cmp
lods
mov
out
jp
pop
mov
ljmp
pop
and
int
repnz
sarb
inc
lds
outsl
call
adc
cmp
mov
popa
cmpb
xchg
fwait
xor
pop
mov
hlt
push
scas
jae
push
jnp
mov
popa
icebp
or
push
adc
pop
mov
mov
int3
inc
adc
xchg
stos
sahf
push
rcrl
jo
xchg
or
cmc
ja
repz
out
jmp
jl
jnp
pop
std
stos
jnp
jne
dec
sub
ja
out
pop
and
dec
add
stc
jae
stos
int
mov
ficoml
fisubl
dec
es
das
cmpsl
sub
scas
pop
cmp
rorl
int
mov
cmp
sbb
lret
dec
shlb
movsb
pop
test
jae
flds
insl
movsl
cmc
rorl
sub
mov
jb
in
lock
inc
mov
mov
jno
mov
jnp
inc
cmp
and
rcl
mov
aaa
repz
dec
addr16
notb
movsl
xchg
rolb
fs
stos
jbe
xor
pop
arpl
xchg
fcompl
fwait
sub
sbb
pop
cs
mov
mov
cmp
movsb
or
jnp
cmp
cmpsb
ret
xor
imul
mov
sbb
mov
orl
mov
pop
mov
jp
jb
pop
sub
add
pusha
push
xchg
add
sbb
sbb
lret
out
popa
cmp
test
les
cmp
jp
sbb
push
lods
xchg
adcl
cmp
out
cmpsb
iret
dec
inc
cmp
jno
adc
cmp
out
hlt
jns
loope
mov
fildl
ret
adc
xchg
push
xchg
mov
push
in
scas
or
mov
aaa
mov
shlb
mov
mov
pop
jle
add
xor
pop
mov
sti
push
push
out
or
xlat
push
xchg
pop
ds
in
cmp
mov
insb
in
mov
fs
ficoml
out
das
rcrl
divb
sub
insl
xor
imul
cltd
push
xchg
ja
push
xor
push
pushf
fstp
andb
dec
les
stos
xchg
or
pop
jnp
sbb
and
fdivrl
mov
xor
insl
shll
movsb
rcr
adc
fcompl
jae
cwtl
mov
sbb
gs
scas
data16
push
hlt
pushf
leave
out
adc
push
outsl
lea
push
adc
inc
add
fidivrs
push
fldl
jp
pushf
ja
sub
dec
mov
into
aas
andb
dec
xchg
loope
inc
rclb
xor
and
mov
incb
cld
outsb
mov
sbb
pushf
and
xor
adc
and
mov
mov
cltd
or
mov
xor
je
mov
cmpsb
cmp
and
inc
mov
add
xchg
or
push
sarl
adc
lds
jnp
add
mov
push
cmp
stos
outsl
cs
mov
rolb
cwtl
dec
pop
mov
xor
sarb
xor
inc
std
pop
enter
adc
mov
cmp
mov
iret
incl
pop
mov
aad
inc
mov
loop
jno
arpl
sub
mov
andb
lcall
xor
bound
jp
leave
mov
or
into
adc
sbb
sbb
push
fbstp
insl
sub
fsts
push
push
sbb
xor
inc
ljmp
jo
out
inc
je
enter
inc
stc
jl
jno
jl
into
insl
fiadds
sbb
adc
lock
call
ja
push
mov
testl
mov
dec
pop
cs
orb
lea
lahf
mov
pop
sbb
and
loope
movswl
arpl
fwait
sbb
lods
lahf
jmp
pop
and
addr16
aaa
mov
cmp
push
lods
cmc
jg
stos
xchg
insl
push
or
xchg
adc
pop
inc
ljmp
cltd
addb
shl
clc
and
xor
in
inc
add
pop
add
jecxz
dec
jmp
hlt
int
mov
add
jae
xor
fldt
cmpsl
jnp
sub
clc
fsubrs
popf
scas
popa
hlt
ret
xchg
hlt
mov
loop
push
adc
jbe
insb
dec
sub
pusha
or
mul
cmpsl
jo
pusha
leave
and
xor
sbb
shlb
scas
mov
mov
hlt
mov
lds
add
iret
stos
stc
inc
push
dec
loope
popw
or
jne
add
test
out
fisubl
mov
test
cmp
es
addr16
cmp
rcrb
mov
sub
xchg
loopne
lods
cmp
jle
jnp
stc
sub
jnp
ret
xchg
mov
mov
test
xchg
dec
in
sbb
stc
icebp
lods
pop
bndldx
adc
mov
mov
fdivl
lahf
add
pushf
je
pusha
addr16
pop
add
mov
jg
fbld
jge
addb
rol
stc
sbb
mov
sbb
cltd
inc
mov
jp
cli
bnd
push
clc
imul
jmp
xor
negb
xchg
lcall
cmp
cmpsb
xlat
hlt
adc
loop
fwait
das
push
push
or
in
cmpsb
mov
ds
dec
sbb
lock
mov
adcb
fildll
mov
push
sbb
xchg
mov
inc
inc
stc
cmp
aam
nop
daa
cltd
neg
rep
jb
xchg
in
and
fcompl
repz
in
jb
arpl
sub
xor
push
das
sbbl
out
adc
testl
xchg
shr
mov
ds
push
xorl
test
dec
fidivrl
xchg
inc
cmp
xor
jmp
cmpsb
in
in
cli
in
mov
arpl
addr16
pusha
loope
mov
or
lds
lcall
int3
adc
dec
xor
fcompl
pop
mov
adc
dec
dec
push
dec
and
cmpsl
sub
push
loopne
xchg
std
mov
arpl
cmp
jle
call
js
or
adc
leave
or
and
adc
push
in
mov
mov
cld
lds
and
lahf
jns
push
adc
pop
xor
cmp
int3
sbb
stos
mov
xchg
adc
ja
cmc
lret
in
cmc
jl
stos
and
bound
sbb
pop
es
dec
out
push
xchg
int3
flds
inc
xor
addl
ljmp
into
jne
movsb
adc
mov
fmuls
jne
or
push
aaa
popa
pop
scas
out
fiadds
loop
nop
xor
fdivrp
pop
js
jnp
out
sub
loopne
mov
xchg
cltd
cld
outsb
cmp
and
loope
adc
adc
shll
add
mov
add
adc
cmp
subb
adc
cmpsb
sub
mov
push
jmp
pop
cmp
stos
mov
sbb
nop
xchg
and
pop
in
stos
lcall
lret
push
outsb
dec
inc
pop
mov
adc
movsb
cmp
add
subb
dec
mov
xor
cmp
mov
std
mov
xchg
out
aam
fucomip
mov
out
push
js
or
and
movsl
outsl
gs
push
or
mov
mov
mov
das
lret
pop
fwait
adc
pop
clc
mov
and
roll
jecxz
add
mov
inc
dec
xor
jo
loope
mov
mov
repnz
cmp
mov
xor
dec
aas
fdivl
rcl
pop
cltd
adc
and
rcll
dec
cmp
pop
stc
iret
push
add
dec
add
pop
dec
xor
into
add
mov
aam
jbe
outsb
lret
adc
adc
lock
mov
in
sub
push
adc
sahf
cmc
movl
ret
test
pop
gs
cs
dec
repz
je
loope
pop
cmpsb
sub
shll
or
ret
loop
pop
cmpsb
repz
sub
scas
push
jo
jp
xchg
pop
inc
aas
push
adc
push
gs
scas
movsb
es
add
repnz
push
mov
fildll
mov
lock
ds
sub
jae
mov
mov
out
fcoml
lret
sbb
mov
push
sbb
mov
in
out
dec
insb
xchg
cmp
pop
ret
mov
push
cli
in
popf
shl
push
int
shlb
rol
xor
aam
lods
adc
mov
cmp
mov
pop
cmpsl
xchg
iret
pop
cmc
fdivrs
sub
fbstp
fstps
imul
and
arpl
iret
jno
test
mov
mov
jnp
jg
cmp
and
mov
xor
dec
movsb
addr16
adc
xor
shrl
fbld
nopl
inc
jg
adc
inc
sub
aad
scas
xchg
movsl
push
lock
shrb
pop
add
shrl
mov
lcall
inc
das
push
mov
call
mov
adc
pop
xchg
and
popf
jo
cli
minps
mov
dec
popa
out
shrl
je
lea
popf
sbb
adc
sbb
mov
lret
mov
adc
xchg
dec
mov
lret
xor
movsb
xchg
pop
mov
and
loopne
loop,pn
mov
dec
fwait
pop
push
cmpl
pushf
cltd
stos
push
add
sub
adc
outsb
in
mov
pop
xor
insl
cli
pop
dec
jle
std
push
fdivrl
scas
sbb
popa
inc
arpl
xor
lds
loope
sub
sub
mov
and
pusha
mov
hlt
jp
mov
or
js
xor
inc
adc
ds
sub
pop
enter
ret
daa
sub
jb
adcb
aas
jbe
xchg
xchg
adc
in
ljmp
std
and
imul
ret
add
clc
pop
clc
or
and
call
and
push
hlt
insb
xchg
inc
dec
outsb
pop
push
pop
sub
inc
out
popa
mov
adc
adc
fdivrl
sub
cmpsb
push
mov
shlb
mov
adc
jecxz
cmp
cmp
xor
fdivrl
cmp
ljmp
out
adc
es
ret
not
decb
sbb
sub
mov
rorl
and
push
rorb
xchg
rorl
test
mov
lds
mov
or
dec
and
loop
lret
xchg
xor
out
je
adc
xor
aad
mov
cli
dec
mov
test
out
jmp
rcrl
pop
decl
insb
mov
cli
pop
xchg
add
and
mov
cmpsl
pop
mov
xchg
mov
mov
dec
and
rorl
les
movsb
outsb
mov
jb
jno
sbb
roll
xor
movsb
push
xchg
adc
pop
in
les
xchg
lods
in
cltd
or
sbb
push
inc
and
out
mov
jge
cld
addb
push
adc
and
adc
andb
xchg
cld
ja
stos
or
adc
push
dec
inc
mov
stos
cli
push
push
mov
outsb
rolw
mov
dec
lret
mov
inc
add
xor
ja
push
push
xchg
imul
lods
in
popf
push
sub
pop
sti
cmp
shr
rorb
daa
pop
nop
cmpsl
or
push
cmpsb
imul
push
xor
cld
rcrl
fistpl
ja
jmp
sbb
pop
je
push
add
out
mov
daa
in
cmp
dec
pop
mov
ljmp
jb
sub
cli
mov
sbb
add
lcall
dec
loopne
js
mov
fwait
or
inc
or
sub
push
bound
mov
mov
jo
adc
in
push
flds
push
inc
fsts
pop
icebp
dec
push
cmp
sar
pop
jo
mov
fidivs
push
jbe
fs
or
mov
inc
pop
cmp
dec
xchg
aas
push
cmp
jo
xor
add
jne
cmp
sub
sbb
mov
orb
cwtl
pop
gs
adc
sub
popf
outsb
xor
or
mov
and
mov
mov
xchg
mov
dec
sub
sub
add
bound
les
aas
mov
mov
mov
or
lds
jbe
push
mov
pusha
xchg
dec
in
push
push
ds
cmpsb
push
dec
inc
mov
call
mov
filds
and
loopne
ja
ja
jnp
mov
es
daa
movsl
enter
test
cwtl
in
aam
mov
ds
push
push
xchg
leave
int3
pop
add
fs
arpl
insl
ret
aaa
fsubs
test
and
fidivrs
out
mov
lcall
jbe
or
cmpsl
and
je
sbb
cmpsb
fisttpl
out
lret
push
js
xchg
jle
test
pushf
sub
dec
push
addr16
cwtl
xlat
loopne
shll
ret
enter
cmp
notb
idivl
sub
inc
jecxz
or
test
push
push
sbb
les
push
and
sub
out
push
add
sbb
lods
js
adc
prefetcht2
xchg
fs
push
and
sbb
negb
xchg
out
shll
sub
pop
lock
pop
xchg
and
lods
xor
jbe
adc
xchg
loope
dec
daa
mov
fisubl
push
lods
mov
jo
pop
xchg
aaa
subl
xor
loopne
xchg
mov
sbb
inc
rcrl
repz
and
aad
or
xor
sar
pushf
sbb
mov
sub
mov
add
jle
outsb
jl
xchg
gs
cli
or
or
lds
inc
fsubl
addr16
jbe
addr16
stc
xor
loop
inc
shrb
push
sub
mov
cwtl
mov
pop
into
cmp
test
push
repnz
out
mull
test
loopne
fistpll
dec
je
push
movsl
mov
xchg
pop
pusha
jns
xchg
sbb
mov
ret
add
adcl
mov
stc
enter
lock
pop
adc
mov
jo
les
scas
mov
out
inc
xchg
mov
pop
mov
nop
mov
mov
in
fiaddl
adc
push
ljmp
inc
sub
dec
or
sar
dec
xchg
test
pop
inc
or
xchg
lcall
adc
push
lret
inc
loope
add
push
cmp
jp,pn
dec
leave
jmp
mov
xchg
inc
scas
mov
cmp
ss
pop
out
icebp
or
insb
jmp
jnp
dec
dec
jae
dec
inc
cmp
pop
push
lds
decl
fstpl
rep
cwtl
test
into
push
inc
rolb
cli
mov
push
pushf
lods
pushf
and
jnp
int3
fisttpll
mov
inc
mov
cmc
call
cltd
decb
mov
jo
fisubs
dec
mov
rcll
sub
sbb
jle
add
pop
lods
sbb
push
sub
out
test
xchg
mov
imul
mov
xor
push
lds
jbe
jae
popf
or
push
jb
adc
out
jp
add
iret
dec
xchg
or
jb
es
sbb
pop
mov
out
lret
sub
add
fdivrs
fcmovu
lcall
int3
test
mov
adc
shl
dec
dec
inc
sbb
hlt
js
adc
mov
gs
adc
rorl
xchg
push
repz
addb
test
or
cli
rcll
push
aam
mov
sbbb
push
push
fldl
pushf
mov
in
out
push
mov
lods
fbld
push
cld
mov
test
jle
cwtl
les
cmc
add
fbstp
push
loopne
or
loop
popa
and
mov
pop
inc
daa
lods
jno
sbb
push
aas
insb
js
popl
push
ret
andb
pusha
xchg
mov
mov
xchg
out
xchg
lods
push
test
enter
lods
lock
es
jmp
or
int3
adc
mov
mov
jg
lea
aas
jo
mov
into
mov
inc
cmp
add
mov
jb
in
push
cmp
lret
sub
lret
cmp
inc
dec
in
xor
cli
mov
enter
addr16
imul
bound
lret
lahf
and
push
into
ss
or
in
ljmp
jp
iret
enter
mov
pushl
aaa
inc
cmpsl
inc
gs
xor
cmp
xchg
sub
dec
inc
test
mov
aas
jb
push
xchg
mov
iret
aad
repz
clc
inc
xchg
test
jno
stos
and
rcrb
sarl
pusha
lods
xlat
loop
je
add
and
xor
mov
and
push
add
push
or
adc
cltd
mov
sbbl
mov
lret
div
push
in
sub
cmpsl
sub
enter
sbbl
fldcw
fs
adc
mov
pop
push
jmp
jp
les
ss
in
cli
push
push
aas
mov
jecxz
scas
cmc
loopne
enter
ret
lea
push
aam
enter
dec
pop
push
insb
cmpb
test
roll
cld
mov
sbb
mov
imul
stos
add
das
popf
mov
sbb
insb
sbb
dec
pop
ret
mov
xor
test
pop
movsl
mov
jnp
das
mov
rcrl
test
or
fisubrl
cmp
inc
mov
in
sbb
sbb
out
iret
data16
lds
xor
push
movsb
xchg
jmp
popf
xchg
xchg
sub
jl
inc
jmp
push
xor
mov
mov
xchg
je
push
mov
mov
sub
faddl
into
mov
scas
addr16
xchg
in
imul
xor
enter
mov
jg
test
mov
ljmp
into
cmp
aad
push
mov
int
adc
movsl
jge
outsl
push
ret
pop
leave
insb
aaa
inc
repnz
lock
mov
adc
and
je
aas
jle
data16
cmp
ja
movb
test
xorl
lcall
das
daa
in
inc
sbb
divb
stos
call
jo
cmp
int3
lahf
and
incb
jo
psrlw
add
jne
les
or
cmp
int3
ret
mov
pop
jo
shll
mov
ret
push
jmp
stos
push
sub
add
sti
popf
test
pop
or
outsb
or
out
jg
sarb
sbb
mov
lds
lahf
clc
cmp
gs
es
xchg
scas
xchg
mov
push
je
ficoms
sbb
xchg
lock
mov
or
imulb
imul
scas
cmp
roll
push
lret
xchg
add
cmp
nop
adc
les
shr
loope
das
sub
or
fildll
push
call
arpl
sbb
mov
inc
sub
mov
cli
imul
xor
push
push
pop
ds
fsubs
lods
test
mov
stos
xchg
mov
xchg
mov
mov
jno
cmp
jbe
cmp
push
add
in
or
dec
sub
push
rorl
and
pop
popa
mov
bound
cmp
and
push
inc
lods
fstps
pop
add
fdivrl
rcll
daa
loope
int
sub
jmp
hlt
pusha
lods
inc
sub
push
add
aas
insb
faddp
mov
bound
sahf
repnz
adc
mov
pop
in
sbb
inc
js
fwait
pushf
sarb
push
stos
jmp
push
mov
push
fldl
xor
repnz
adc
sub
loop
out
pop
dec
fiadds
movsl
ret
outsb
xchg
pop
pop
push
mov
lds
jp
lods
imul
inc
cmp
in
in
stos
sub
lret
addr16
or
aad
lods
dec
dec
inc
xor
aaa
cwtl
pop
adc
xor
pop
call
imul
mov
orb
cs
mov
mov
popf
mov
addr16
jmp
inc
and
cmp
mov
sbbl
fdivrs
data16
es
imul
jo
iret
push
adc
js
test
aam
xchg
lods
xlat
or
adc
jo
mov
and
push
xchg
test
mov
ret
jbe
mov
ljmp
xchg
outsb
xor
or
bound
imul
mov
pop
lock
mov
imul
sbb
cmc
mov
fimull
xor
jns
mov
jne
outsb
pop
das
cmp
ret
dec
outsl
clc
cmpsl
jl
adc
or
addb
dec
add
mov
fisubrs
std
mov
imul
ja
inc
aad
aam
sbb
jbe
xchg
xchg
jge
mov
inc
cmp
frstor
cmp
outsl
jp
lods
or
jns
lret
test
cmpb
inc
pop
cmp
dec
sbb
sub
cmp
mov
push
in
adcb
sbb
bound
sahf
fcmove
cmp
and
cmpsl
mov
mov
int3
das
pop
or
loop
fistl
in
push
push
xor
icebp
cmp
add
jne
sbb
dec
mov
dec
mov
aam
mov
call
shl
pusha
fwait
jle
ret
xchg
enter
mov
adc
mov
mov
fstp
popa
mov
outsl
test
mov
imul
jle
pushf
dec
ja
sub
jge
push
xor
inc
mov
mov
add
addr16
pop
jg
sti
jl
jge
mov
repz
dec
xchg
and
in
xor
mov
pop
dec
jb
loop
mov
adc
push
int3
sbb
repz
jne
call
les
outsl
outsb
adc
sbb
icebp
aas
ja
push
mov
sub
push
jl
cld
in
and
popa
jge
push
ret
mov
sbb
cwtl
gs
pop
sbb
bound
test
cltd
adc
pop
sbb
pusha
cs
out
jbe
mov
mov
subl
add
jle
icebp
repnz
and
mov
mov
aas
xchg
shll
gs
push
mov
mov
fnstenv
push
std
int
lret
aam
cmp
xor
enter
lods
in
imul
adc
loop
addr16
sub
pop
and
mov
es
in
or
icebp
and
pushf
push
cmp
sbb
mov
adc
outsl
mov
vmovaps
stos
jl
mov
hlt
rclb
xchg
decb
xor
rcll
lahf
jns
ljmp
push
add
jno
add
mov
call
out
sarl
mov
aaa
xlat
into
aas
divl
out
lods
int
loope
xor
inc
leave
xchg
sub
lea
mov
scas
icebp
insb
lret
sti
pop
push
enter
shll
mov
call
ret
mov
loope
mov
nop
je
jo
into
stos
cmp
inc
mov
push
sbb
mov
ret
cmp
imul
inc
out
mov
sbb
daa
and
and
dec
clc
hlt
repnz
cmp
xor
hlt
jbe
adc
loope
div
lds
shlb
add
into
pop
shll
imul
jge
cld
jmp
mov
sub
xchg
das
popa
mov
sbbb
dec
popf
out
imul
cmpsb
outsb
lret
enter
and
pop
inc
pop
sub
xlat
sub
js
dec
cmp
xchg
dec
dec
sbb
scas
out
mov
or
call
push
dec
in
das
icebp
pop
inc
push
mov
mov
sub
mov
or
mov
pop
push
and
sbb
and
mov
or
mov
push
dec
mov
fistps
das
sub
jge
mov
pop
pop
jno
ret
adc
pop
jmp
mov
adc
scas
ja
add
pop
mov
mov
mov
loopne
dec
cmp
neg
rclb
xchg
jno
mov
mov
out
mov
jmp
aam
inc
xchg
jmp
sub
outsl
arpl
out
or
lods
dec
movsl
push
test
jge
out
xchg
jl
push
imul
cs
sbb
pop
push
adc
mov
fstps
dec
mov
dec
adc
xchg
jge
imul
mov
xchg
notb
lret
xchg
cltd
aad
aaa
pop
inc
or
ror
sub
xor
and
push
sbb
dec
mov
and
in
add
jp
inc
dec
fs
sbb
and
shlb
push
in
adc
and
fcoml
fwait
xchg
or
dec
ret
mov
subb
fidivrl
in
enter
clc
es
cs
jg
cmp
lock
std
lds
adc
dec
cmp
inc
ret
jge
and
xor
cmpsb
scas
je
stos
xor
movsb
or
lahf
or
les
or
fwait
pop
repz
cmp
xchg
push
insb
inc
jns
lods
pusha
scas
ljmp
notl
and
mov
mov
pop
jecxz
cli
jp
mov
jecxz
xlat
push
testb
mov
daa
fnstenv
cmpsl
gs
inc
addr16
mov
sbb
sub
jne
inc
sub
mov
call
jb
cmp
aam
cmp
addb
push
test
cld
scas
jae
stc
fs
push
or
jge
mov
add
ds
fstps
add
and
pop
jp
repnz
scas
xchg
ret
test
mov
inc
outsl
rcr
data16
jg
inc
stos
mov
push
test
loopne
call
je
sarl
in
mov
push
loopne
mov
mov
pushf
mov
and
dec
data16
add
pusha
sbb
fisttpll
push
xlat
xchg
test
clc
and
into
enter
inc
iret
push
fidivrl
dec
add
cwtl
mov
dec
or
fsubs
dec
insl
jb
les
push
icebp
loope
mov
ficompl
mov
sahf
int
fldenv
xchg
aas
ret
inc
mov
jb
jmp
jge
cmpsl
addb
repz
lock
fists
dec
ss
ljmp
sub
fcoms
dec
xlat
shlb
dec
sub
js
xchg
test
popf
mov
test
push
push
push
cmp
xchg
fmull
dec
test
icebp
fists
pop
das
mov
xchg
pop
loope
fcomp
rorl
imul
idivb
aas
pusha
xor
jg
ret
cmpsb
push
ljmp
lods
adc
test
fbstp
push
adc
pop
fcomp
shrb
and
or
xor
daa
clc
mov
addb
iret
scas
out
rol
xor
jnp
and
push
das
scas
pushf
shr
adc
ds
jmp
in
sbb
lret
insb
cmp
and
pop
mov
push
sub
dec
pop
mov
jg
and
and
pop
pusha
add
xchg
ss
or
hlt
in
nop
push
test
xor
int
clc
pop
xchg
dec
mov
subl
jae
lds
imul
adc
loop
or
ret
fadds
jge
cmp
sub
jae
outsl
inc
cmp
ret
mov
fsubrs
fildl
ja
sahf
push
pop
shr
gs
in
or
subl
das
in
push
xchg
sar
cmpsb
fs
lock
js
dec
mov
outsb
int3
rcr
fildl
jb
xchg
adc
xor
mov
fcmovnbe
xor
sbb
in
jno
and
mov
or
data16
inc
mov
insb
push
rclb
into
cld
sub
jnp
xor
inc
enter
cmp
jge
jmp
roll
xchg
push
fnstenv
jmp
jmp
jno
sub
lret
xchg
out
daa
push
jmp
loop
jmp
mov
scas
cmp
add
push
outsb
sbb
jb
inc
mov
or
pop
xor
xor
rolb
ja
mov
xchg
filds
sub
repnz
mov
inc
mov
push
inc
sub
mov
addr16
repz
push
mov
ror
add
dec
sub
push
loope
daa
cmp
lock
xchg
loop
push
mov
ds
fsubrp
mov
dec
scas
sti
aad
pop
inc
mulb
inc
push
mov
pushf
ja
or
push
jae
fisubrl
add
inc
mov
leave
lret
mov
xchg
inc
jl
pop
push
aaa
push
push
jp
inc
add
xchg
jle
sub
pop
fstl
int
fstps
jnp
in
loope
jle
pop
shll
sbb
jecxz
adcl
pop
adc
inc
jbe
and
popf
add
sbb
fucomi
cs
jb
scas
bound
out
int
movsb
adc
and
scas
addr16
xchg
xchg
mov
sub
into
pop
push
es
mov
sti
popa
inc
imul
stc
sbb
daa
mov
std
pop
xchg
out
andb
scas
mov
jne
mov
jge
popf
push
push
mov
mov
loopne
jge
int
mov
test
cld
adc
sbb
jl
lahf
outsl
inc
dec
cltd
push
or
inc
stos
dec
pop
xor
scas
arpl
or
add
xchg
xchg
cs
inc
or
repz
data16
push
jmp
add
bnd
movsl
sbb
enter
cltd
push
out
push
lret
mov
mov
xor
and
jg
ficompl
or
inc
cwtl
xor
pop
insl
mov
dec
gs
mov
idivb
popa
mov
mov
mov
mov
add
dec
cmp
shr
mov
mov
or
and
repz
jmp
ret
jmp
xorl
inc
xor
and
mov
inc
dec
xchg
sbb
or
pop
sti
dec
ficompl
adc
jno
inc
cmpsb
iret
shlb
subb
add
sbb
hlt
dec
pop
nop
or
inc
lds
sbb
ja
call
ss
test
insl
rorb
call
sahf
mov
loope
sub
cmpsb
cmp
cwtl
int
lret
andb
jne
cmp
fcoms
sarl
cmp
cmp
lods
ficomps
adc
dec
mov
stc
and
loop
sti
xchg
out
jns
mov
lods
iret
int3
sub
dec
adc
cltd
pop
bnd
fisttps
fisubrl
cltd
mov
jno
repz
cmp
loope
lahf
lock
mov
add
adc
mov
ja
cli
mov
pusha
daa
jge
mov
mov
or
nop
pop
and
adc
fimull
mov
repz
imull
out
lods
bound
dec
iret
sbb
lret
loop
dec
mov
repnz
pushf
test
mov
sub
ret
aam
aam
shrl
xor
aas
fisttps
pop
jge
jns
lods
mov
icebp
add
popl
roll
out
mov
add
rcll
mov
mov
fiaddl
in
in
fcmovne
dec
je
scas
mov
subb
shll
sub
adc
add
lea
xchg
testb
sahf
xlat
icebp
jge
cmc
sahf
daa
imul
mov
jmp
into
movsb
int3
lods
mov
mov
fistps
mov
clc
stos
xlat
add
jl
mov
dec
iret
fldl
ret
das
push
dec
stc
and
push
divl
rorb
dec
fcomip
inc
push
push
jbe
cmp
xor
aad
insl
mov
loopne
cmp
xchg
stos
push
sub
popa
push
sbb
inc
inc
add
sbb
das
jle
inc
imul
je
dec
lret
call
loop
mov
inc
and
pop
xchg
mov
add
stc
and
ja
hlt
out
jle
stos
sbb
in
ja
in
cmp
pop
pop
mov
aad
in
dec
mov
sub
cli
xchg
cmpl
lods
cmp
cmp
mov
call
frstor
insl
ret
pop
inc
mov
pop
dec
adc
shl
mov
push
fstl
mov
or
xor
pop
in
sbb
test
jge
mov
clc
jbe
lock
push
out
pop
sbb
push
adcl
ss
scas
mov
xor
xchg
cmp
mov
pushf
sbb
inc
push
lret
in
hlt
jnp
adc
in
out
cld
add
mov
in
movsl
mov
fs
stos
push
cmp
xor
pop
outsb
inc
ret
mov
fcoml
sarb
aam
test
sar
rolb
inc
pop
mov
lcallw
gs
add
pusha
roll
adc
sbb
lock
enter
out
add
lret
push
into
and
lret
insl
dec
fwait
stc
ret
sti
nop
xor
mov
pop
push
cltd
mov
lds
sub
mov
jg
subl
ret
pop
pop
add
cmp
or
and
sbb
pmulhw
movsb
fidivrl
and
and
shl
out
xchg
cmp
push
jae
jp
xchg
sbb
push
loopne
mov
lcall
lods
gs
xchg
adc
jns
shl
sti
iret
aaa
cwtl
in
sbb
jp
push
pop
inc
adc
xor
test
push
popf
mov
mov
cmp
push
xchg
into
ljmp
mov
cmp
pop
test
mov
inc
jl
iret
sub
xchg
cld
ss
xchg
outsb
scas
cld
lret
daa
rcrl
je
inc
cs
dec
mov
inc
icebp
mov
jo
out
jo
bound
idivb
and
les
ja
inc
lret
jl
push
inc
ja
iret
pop
adc
dec
sub
add
push
out
lahf
rolb
movsb
icebp
dec
adcl
xchg
mov
insb
js
jno
mov
sahf
outsb
mov
clc
pop
aam
aaa
jle
xor
ja,pn
sbb
pop
je
es
cmp
jo
xor
inc
mov
and
xchg
cmp
pusha
cmpsl
adc
mov
popl
fs
call
out
xor
clc
fisubs
xchg
hlt
es
add
cli
push
pop
mov
das
jp
xor
mov
ret
jp
xchg
arpl
jae
xchg
xor
in
mov
jne
mov
pop
pop
inc
fsubl
dec
and
aaa
addr16
add
sti
cmc
jnp
loop
xchg
testl
lret
in
jecxz
or
pop
pop
sarl
leave
xchg
push
jo
in
repz
push
xchg
addr16
roll
mov
adc
aaa
dec
jl
mov
into
xor
push
into
outsl
lahf
mov
jp
dec
stos
xchg
fs
lea
lods
imul
int
lds
jp
xlat
lock
rcrb
fbstp
adc
xchg
call
int3
mov
fisubs
mov
pop
nop
dec
cmpl
xor
mov
sub
enter
gs
mov
out
dec
ja
sbb
gs
rclb
fistl
push
mov
fistps
mov
xchg
add
cmp
mov
sub
dec
cli
sbb
push
pop
mov
scas
mov
jmp
out
push
dec
add
and
push
pusha
cmp
in
jmp
or
mov
loop
int3
lret
jp
cld
cmp
adc
iret
xchg
push
dec
dec
loope
xchg
pop
mov
push
jne
sub
stos
test
and
mov
add
ss
xchg
pop
xor
cli
jbe
xor
xlat
lods
xchg
js
dec
pop
mov
jecxz
xorb
rcll
idivb
xchg
cmp
jne
mov
and
lock
fsubl
adc
cmp
ds
imul
lds
subl
mov
and
cmp
aam
jl
cmp
xchg
xchg
testb
leave
push
xchg
push
aad
dec
es
lahf
and
stos
out
dec
add
pop
mov
es
insl
inc
push
pop
adc
enter
mov
mov
jbe
mov
or
mov
push
std
sbbl
add
push
push
and
loopne
mov
cld
aad
xchg
mov
lods
add
lds
push
mov
out
mov
mov
fsubr
mov
pop
and
lret
divb
sbb
in
sbb
mov
aaa
pop
test
mov
ljmp
jl
jno
hlt
xchg
ss
lea
int
xchg
call
cmc
jb
adc
cli
xor
xchg
add
ficompl
mov
and
mov
xchg
bound
fs
icebp
adc
stos
cmp
fsubs
sub
addr16
pop
or
dec
inc
cmpsl
pop
push
push
lds
out
cmpsl
sbb
and
pop
jp
movsl
stc
out
mov
and
movsb
stos
ret
je
xlat
sahf
inc
movsl
lret
pop
push
les
shrl
fwait
push
in
mov
dec
jl
mov
xchg
and
into
notb
outsb
mov
jae
cmpsb
mov
dec
push
dec
and
cltd
and
sub
mov
adc
popa
ds
sbb
out
pop
loop
jg
pop
cld
sbb
imul
mov
lret
sbb
pop
sbb
mov
cltd
or
dec
dec
cltd
es
lret
sub
add
push
cmpsb
dec
sbb
cld
bnd
sbb
dec
fidivrl
mov
mov
into
sbb
cmp
xchg
pop
mov
push
shlb
adc
jae
jns
aam
push
arpl
pop
and
pushf
inc
shll
cmc
mov
and
ljmp
inc
mov
mov
inc
cmp
add
cmpl
jle
add
cmp
jbe
sub
sub
movsb
xchg
stc
push
jecxz
inc
jo
fwait
inc
scas
lret
jne
leave
jne
jb
jne
push
jp
shll
mov
jnp
xor
mov
jno
xor
mov
imul
outsl
cwtl
inc
jmp
inc
lods
aas
add
fiadds
mov
push
and
sarl
lds
jo
xchg
loope
setae
pop
push
sbb
cltd
push
popl
add
hlt
adc
mov
pop
fmuls
sbb
or
cmp
push
outsl
test
iret
pusha
sub
dec
in
loopne
sub
pop
mov
mov
lret
jl
lahf
nop
fpatan
mov
mov
xor
pop
xchg
pop
adc
outsl
mov
and
jns
xorl
out
adc
or
dec
sub
jl
mov
loopne
push
test
sub
fidivrs
idivb
sahf
test
xlat
into
int
movsl
in
dec
push
scas
xchg
jmp
add
xlat
xor
nop
cmp
cmp
in
leave
dec
sub
inc
fwait
repz
jno
popa
cmp
and
sub
vcvttsd2si
inc
mov
xchg
and
sbb
addb
test
push
push
mov
add
in
scas
or
mov
xchg
addr16
int3
push
mov
cmp
pop
inc
mov
xchg
push
mov
stos
jbe
outsl
push
dec
nop
jae
dec
adc
xchg
inc
hlt
jge
movsb
cmp
push
enter
leave
fcomps
int3
daa
mov
aas
into
xchg
xchg
sub
adc
dec
das
push
bound
dec
je
jmp
daa
jnp
mov
mov
in
cmc
jle
and
adc
ret
fs
adc
mov
xchg
mov
add
add
add
nop
nop
bound
outsl
push
or
loop
mov
and
xor
loop
sbb
in
add
fstpt
inc
add
clc
icebp
jl
cmp
push
dec
push
add
cmp
mov
ficoms
js
cld
loope
cli
test
and
mov
pop
jl
je
lcall
cmp
mov
into
lock
jmp
inc
test
mov
lret
cmp
out
mov
sub
into
adc
sti
pop
arpl
mov
push
es
jg
lcall
push
clc
roll
mov
inc
cs
adc
and
aaa
push
or
or
inc
out
mov
push
repnz
sbb
and
push
push
jb
jmp
inc
daa
xlat
mov
sub
and
mov
push
stos
dec
cmp
dec
outsb
jns
fsubrl
arpl
pop
test
nop
sub
enter
imul
test
sti
pop
xchg
lret
adc
pop
repnz
testl
xchg
enter
mov
aad
lea
mov
jo
fmulp
pushf
fwait
mov
push
scas
or
in
repz
and
and
or
mov
mov
gs
fs
jb
jp
xchg
push
mov
ss
rcrl
in
mov
icebp
jp
shlb
pop
ja
add
sbb
daa
sbb
mov
mov
hlt
xchg
fnsetpm(287
pop
outsb
out
frstor
mov
adc
cmp
int
popa
add
bnd
fcmovbe
jno
and
and
mov
test
jle
adc
stos
jmp
mov
mov
data16
and
sub
push
xchg
in
insl
ja
in
pop
insl
mov
jno
adc
jo
fcomi
popa
push
fsubrs
das
fildll
mov
mov
imul
data16
stos
push
in
or
and
inc
xchg
cld
in
mov
popf
jecxz
gs
shrl
xchg
fiadds
jnp
lods
sbbb
sub
lods
dec
xchg
out
movsl
outsl
daa
lahf
mov
sub
fidivrl
jp
cmp
lret
lds
das
ret
ljmp
push
add
inc
inc
jne
mov
loope
sub
daa
jp
sbb
mov
icebp
xor
sub
dec
fisubrs
inc
mov
pop
cltd
pusha
or
jns
xor
testl
stos
or
sub
pushf
xchg
or
xchg
fistpl
dec
jle
iret
sbb
mov
cmp
push
aam
jns
cmp
rorl
cmp
mov
xchg
imul
scas
adc
adc
imul
xor
in
lds
lcall
push
popa
inc
stos
outsb
xchg
push
mov
xchg
mov
xchg
mov
inc
idivl
sbb
sub
or
xor
add
in
pushf
insl
lcall
aad
mov
lcall
jns
cmp
inc
dec
jl
out
fidivrl
lret
xor
push
push
add
and
dec
jge
jb
xor
iret
mov
out
xchg
xor
je
gs
lret
push
or
mov
loopne
jle
test
testb
jp
ret
xchg
mov
js
or
push
mov
imul
loop
adc
dec
sub
inc
jnp
dec
call
jle
imul
inc
dec
mov
ja
mov
loope
mov
dec
ds
je
sbb
inc
xchg
popa
sbb
popa
rcrb
leave
mov
mov
mov
in
or
add
pop
and
daa
stc
cmp
dec
mov
jo
pop
je
mov
fs
adc
adcb
lret
mov
adc
icebp
sahf
pop
mov
lods
call
arpl
sbb
stc
or
add
mov
push
ljmp
cs
ljmp
xlat
cmp
outsb
mov
sub
mov
mov
sub
xchg
cmpsb
push
shlb
ljmp
sbb
push
inc
dec
leave
push
pop
aad
shr
stc
pusha
jle
add
mov
insl
mov
loop
filds
mov
gs
arpl
xchg
lods
mov
pop
push
sbbl
sub
out
notl
sub
shl
xchg
dec
push
add
dec
mov
cmp
int3
add
test
mov
insb
jp
add
outsl
jns
cwtl
int3
fmull
cmpl
inc
jne
sub
inc
mov
pop
mov
pop
popf
mov
mov
das
scas
xor
dec
pop
push
sbb
adc
shlb
pop
scas
adc
jb
enter
push
mov
xor
mov
mov
mov
mov
testb
jge
out
lods
sub
dec
into
movsb
rcrb
arpl
je
testl
shrl
push
xor
jo
loope
ja
dec
or
xchg
nop
mov
dec
mov
sbbl
pop
inc
sub
cmp
lret
xorb
jne
std
dec
mov
ret
rclb
mov
xor
and
rcrb
xor
dec
cmp
or
aam
or
cld
mov
xor
xchg
cmp
mov
inc
inc
sub
adc
shlb
cld
clc
fstl
pop
loopne
cld
cmpsb
lret
mov
sub
xchg
xor
arpl
mov
std
dec
sub
in
fidivs
imulb
out
mov
pop
js
test
cmpsl
aad
xchg
scas
cmp
cmp
and
mov
repnz
jnp
mov
sub
movsb
daa
sub
mov
jne
sbb
add
jle
lahf
pop
lds
xchg
or
cld
jp
add
insl
mov
mov
imul
sub
mov
aam
xor
cmp
scas
aam
mov
andl
and
mov
aam
mov
out
dec
in
repz
sub
stc
cmp
arpl
addr16
mov
jmp
ret
inc
icebp
shlb
loop
jns
in
gs
addl
push
cmp
adc
enter
stos
adc
adc
and
mov
roll
das
mov
aas
arpl
jmp
insl
test
cmpsl
fbld
mov
xchg
xchg
outsb
xor
pop
fdivs
add
testl
jbe
movsl
std
div
adc
adc
sbb
xchg
mov
rolb
and
or
jl
xlat
fst
sub
leave
jns
add
jo
lods
push
je
std
xchg
xorl
xchg
bound
dec
adc
fstpt
filds
xchg
push
icebp
mov
jle
cltd
inc
enter
aas
scas
mov
xchg
jmp
sbb
mov
aas
push
mov
lcall
popf
lea
iret
daa
sbb
mov
les
cmp
out
outsb
jae
jecxz
sti
push
adcb
shl
push
and
call
and
push
xchg
adc
pushl
adc
idivb
mov
ret
bnd
es
push
in
dec
mov
das
jg
pop
and
xor
jmp
push
ret
test
and
push
jne
int3
enter
mov
mov
movsl
lahf
lods
sahf
fs
jno
bound
cmpsl
mov
enter
andl
lret
cwtl
and
add
stc
dec
xlat
data16
push
add
aaa
dec
mov
jbe
pop
dec
imul
or
mov
pop
mov
pop
mov
sub
dec
push
mov
add
fwait
mov
dec
pop
xor
inc
lods
imul
and
add
sbb
jle
test
aad
das
outsb
dec
or
inc
sub
hlt
dec
into
outsl
aam
pusha
shrb
add
pusha
jg
mov
pushf
lcall
add
sbb
ljmp
aaa
test
mov
sbb
lods
jb
jl
cmp
and
add
fbld
fcoml
mov
in
fwait
adc
mov
xchg
push
gs
add
decb
inc
sahf
and
ret
xchg
jbe
cmpsl
xchg
xor
sahf
sbbl
jae
push
push
and
inc
sbb
dec
adc
cld
adc
and
jb
cmp
xor
jno
pop
setne
addr16
test
out
loope
mov
shlb
pop
mov
cs
leave
cmp
sbb
subl
jb
testl
lock
xor
data16
dec
imul
test
cld
aas
mov
lods
rolb
test
mov
sub
lret
push
shlb
pop
hlt
shlb
xchg
cmpl
or
arpl
aaa
stos
mov
std
shlb
jl
enter
or
dec
repnz
in
shrl
or
cmp
dec
mov
rcrb
into
pop
pop
in
lods
mov
cmp
outsl
mov
dec
cmp
add
adc
sub
and
xchg
pop
pop
inc
loop
mov
sarb
or
hlt
cmp
pop
call
mov
mov
ja
xchg
loop
pop
pop
mov
xchg
jmp
int
lret
dec
jp
dec
rcrl
mov
dec
xor
lock
or
xlat
int
int
imul
xor
pushf
cmp
add
inc
pushf
rcrl
push
pop
loope
cmp
pop
sub
jb
pushf
clc
mov
add
lret
outsb
nop
and
fists
std
shr
mov
cmp
dec
rcr
fiadds
pop
sub
adc
xor
dec
cmpsl
out
push
shlb
push
mov
mov
fisttpl
hlt
pop
cs
decb
jae
inc
js
in
push
enter
fisttpl
xor
or
cltd
xchg
push
scas
xchg
dec
push
subb
xchg
and
int
data16
pusha
sbb
xchg
lds
mov
pop
shrb
fldl
js
imul
sti
es
iret
jl
stos
das
jb
std
sub
add
movl
das
mov
imul
int
mov
sub
das
inc
into
jne
or
pop
mov
stc
mov
cmpsb
add
test
arpl
cwtl
adc
push
ret
pop
fcmovnbe
lods
je
mov
lods
pop
pusha
pop
outsl
inc
sbb
lret
push
jp
int
xchg
iret
cmc
cwtl
js
xchg
or
div
rcl
stos
fidivs
push
lea
shll
imul
mov
add
dec
leave
cli
aaa
pop
mov
lds
outsl
or
lret
outsb
mov
mov
jae
or
xchg
xor
dec
mov
xchg
cmpsl
or
mov
push
int
jg
mov
divl
insb
mov
mov
dec
sub
movsl
out
sub
movsl
adc
dec
faddp
aam
sbb
dec
int3
ljmp
mov
jge
mov
mov
sbb
arpl
push
nop
sbb
mov
cld
or
leave
adc
sbb
adc
mov
jmp
inc
sbb
arpl
into
mov
cmp
or
mov
mov
outsb
scas
sbb
adc
push
ds
sar
adc
sbb
ss
mov
xor
dec
and
cmpb
in
lds
and
mov
adc
jb
popa
pop
or
and
lahf
push
scas
test
inc
into
cmc
mov
inc
xor
dec
mov
fisubs
stc
mov
jo
int
push
popa
cwtl
mov
inc
in
enter
js
jmp
mov
xchg
dec
arpl
xchg
mov
lahf
push
subl
hlt
pop
mov
fidivrl
xorb
sub
mov
and
pop
cmp
mov
shll
adc
dec
repz
cmc
push
add
int
sti
mov
jecxz
jno
dec
cmp
sbb
shrl
loop
cwtl
int3
sub
lds
xor
fsubrp
outsb
add
idivb
cmpsb
enter
mov
push
out
out
leave
xchg
sbb
das
dec
scas
pop
pop
dec
mov
cli
sub
call
cmp
enter
out
cmc
lret
xchg
push
daa
xchg
and
lods
xchg
fld
int3
les
out
xchg
push
cltd
cvtdq2ps
mov
ljmp
cli
or
adc
loope
lods
mov
lret
sub
pop
pushf
push
mov
inc
or
aas
add
push
call
bound
pop
aam
bound
in
out
or
jl
repz
nop
sub
and
inc
mov
mov
jmp
fucompp
or
cli
push
cmp
popa
xor
icebp
dec
mov
jg
insb
dec
mov
sarb
std
sbb
std
dec
aas
ret
popa
xor
mov
in
insb
push
test
es
xchg
xchg
nop
mov
cmp
roll
es
ret
inc
popf
aad
jnp
adc
mov
addr16
mov
xchg
cld
lea
fmull
jne
and
mov
in
sub
mov
aad
and
movsl
into
loop
in
xor
inc
aam
in
cltd
pop
sub
mov
fldln2
cli
clc
pop
les
and
lods
sbb
ret
int3
push
mov
test
repz
jns
dec
xchg
jp
stc
pusha
ljmp
adc
jo
mov
push
inc
ss
mov
addr16
or
sub
push
mov
inc
mov
adc
inc
mov
arpl
iret
sarl
fistpll
mov
ss
sub
rolb
push
pushf
arpl
dec
popf
cmpsl
arpl
sub
push
or
pop
rcrl
mov
imul
orps
jle
add
out
bound
and
leave
mov
push
or
sbb
popa
nop
push
mov
xor
push
dec
fbld
pop
jl
jmp
cltd
nop
outsb
call
jnp
in
jns
mov
movsb
inc
lahf
fstl
mov
dec
mov
or
test
or
xlat
mov
hlt
sbb
fistps
rolb
test
adc
mov
push
out
push
fsubl
lods
mov
push
cli
addr16
sub
mov
mov
mov
clc
jg
mov
in
sub
scas
insb
sbb
xchg
out
xor
aam
std
cmp
xor
xchg
rcll
cli
inc
xor
sbb
sbb
or
dec
int3
ret
inc
mov
and
xchg
jb
cmc
sti
xchg
pushf
or
fsubs
xor
adc
ficoms
jo
lds
xor
int3
jns
out
andb
mov
mov
adc
fstl
mov
xor
pop
das
shlb
jl
pop
dec
lock
inc
push
jge
push
iret
mov
add
sbb
pop
sub
sub
fcoml
imul
mov
hlt
mov
je
lods
pushf
or
jecxz
push
movsl
mov
or
loope
adc
shrb
fisubrs
dec
cld
es
pop
flds
nop
das
cmp
pop
cmovns
pop
sbb
in
mov
nop
ror
add
push
popa
mov
fdivr
push
mov
push
aaa
mov
adc
gs
xor
sub
xchg
sub
jnp
ret
push
je
scas
add
and
add
or
ss
out
or
mov
idiv
std
mov
idivl
or
sti
in
ficoml
xchg
and
or
fwait
push
filds
fbstp
pop
and
pushl
cmp
xchg
add
add
addr16
push
cmpsl
rclb
adc
lds
pop
pop
dec
pusha
jmp
mov
sbb
mov
fwait
inc
scas
in
pushf
adc
in
mov
pushf
inc
outsl
loope
push
pop
rolb
and
cmp
mov
movsl
jne
or
cwtl
aam
pop
lods
push
cmp
push
pop
sbb
aam
push
mov
cltd
mov
std
jp
xor
xchg
and
push
pop
jae
pop
popa
adc
aaa
mov
fldcw
jp
adc
fsubrl
jb
aaa
pop
orl
int
xor
icebp
ds
adc
ss
jp
test
mov
dec
aaa
jb
dec
xchg
dec
imul
add
dec
fnstenv
mov
cmp
lret
int3
fnstsw
sub
out
sub
cli
inc
fwait
insl
push
out
lea
sbbl
pop
sub
adc
mov
hlt
fs
xlat
roll
imul
dec
push
pop
mov
fsts
jne
mov
mov
and
cltd
push
inc
cmp
adc
mov
pop
popa
ficomps
insb
test
jnp
jns
pop
cmpsl
sti
into
int3
xchg
shll
imul
xchg
push
cmc
mov
or
movups
fstps
inc
push
pop
in
dec
rorl
int3
scas
xchg
mov
jg
push
add
xchg
enter
nop
mov
call
pop
xchg
lock
lahf
mov
push
ret
in
ja
into
and
cmpsb
testl
pop
dec
push
pop
in
xchg
fildll
loopne
jbe
mov
in
sbb
pop
hlt
mov
ds
repz
cs
add
aas
pop
mov
inc
btr
jb
xchg
pop
fildl
sbb
fisubrs
push
shrl
jmp
push
dec
dec
xchg
loop
out
jne
xchg
pop
push
xchg
or
ret
idiv
mov
pushf
jge
es
cltd
cwtl
or
xchg
mov
ffree
sub
test
dec
divb
adc
xchg
repz
fwait
aaa
hlt
je
push
push
loope,pn
pusha
ljmp
ret
add
lret
pop
dec
lret
andb
fwait
daa
std
xchg
inc
movsb
push
repz
jo
jg
push
mov
or
out
cmc
in
inc
in
shrl
cs
mov
out
lcall
jno
repnz
lahf
adc
pop
clc
mov
dec
cmpsb
arpl
inc
pop
sar
mov
adc
ss
jg
adc
lock
popa
shrb
or
inc
push
pop
dec
cmpb
xor
mov
mulps
add
mov
mov
add
or
sbbb
dec
repnz
scas
aad
push
adc
outsb
fs
in
arpl
es
lahf
adc
cmpsb
popf
mov
mov
popf
fsubp
std
addr16
lcall
cmpsb
repz
hlt
dec
repnz
scas
int
dec
insl
jmp
cmp
dec
loope
xchg
jns
inc
push
jae
push
mov
iret
in
pushf
inc
fs
add
xor
inc
notb
dec
add
incb
adc
xchg
mov
fisttps
push
mov
sbb
jl
mov
daa
mov
pop
or
or
cmp
jg
ja
sub
pop
ljmp
push
mov
push
jae
xor
aad
outsl
ret
mov
add
lock
imul
loopne
lret
out
das
or
push
popa
jl
and
sti
xor
and
push
out
adc
push
jo
lods
js
mov
dec
pop
pop
adc
pop
add
aas
cmpsl
rcrb
in
push
mov
pop
fisubl
daa
rorl
lock
shlb
das
add
dec
xor
push
fwait
lds
mov
ficomps
mov
pusha
pusha
ret
pop
out
and
mov
push
jo
or
adc
and
mov
push
jge
fistl
fisubl
xorl
and
jp
xor
xlat
mov
add
lret
xchg
jg
add
hlt
inc
adc
into
addr16
les
push
push
dec
ss
mov
xchg
push
fisubrl
imul
loop
cmp
add
mov
aas
push
inc
lods
bound
movsb
inc
call
lret
rol
push
jg
cmp
and
sub
jp
mov
and
cli
cmc
inc
imul
jb
jae
in
add
lock
arpl
arpl
and
or
inc
adc
fmuls
pop
jnp
inc
push
out
and
fsub
push
sub
push
sub
test
cld
scas
mov
ljmp
lret
pop
xor
push
jae
aad
stc
ja,pn
fdivr
andl
adc
test
dec
inc
imull
das
lcall
pop
or
pop
and
cwtl
push
es
mov
cmpsb
pop
lahf
xchg
shll
orl
push
lret
mov
arpl
fistl
or
popa
leave
mov
inc
ja
out
inc
sub
outsl
repz
ss
pop
mov
inc
xchg
xchg
shlb
xchg
jl
cmp
and
sbb
dec
pop
rcrl
push
orb
mov
pusha
xchg
cltd
fidivs
out
dec
mov
sbb
dec
inc
pop
sub
dec
mov
addr16
mov
sbb
mov
test
and
cmp
ljmp
mov
sbb
xchg
mov
popa
pop
xor
out
fildll
gs
loopne
dec
in
enter
jmp
sbb
push
fwait
loope
jmp
in
or
dec
lahf
scas
or
sahf
das
dec
adc
fistps
jns
call
mov
pop
stos
inc
mov
cmpsb
gs
push
push
adc
sbb
lock
cmp
jbe
mov
jl
imul
and
mov
add
pop
xor
pushf
add
mov
jb
repz
inc
inc
das
push
sub
clc
stos
lret
jle
aad
sbb
mull
call
leave
sbb
sbb
push
mov
lock
outsl
sbb
add
out
add
scas
hlt
imul
pop
jo
loopne
data16
inc
out
sub
pop
ret
jns
fstps
divl
stc
mov
nop
mov
xorb
cwtl
pop
jbe
jne
mov
jge
push
sbb
pop
jg
popf
push
mov
mov
push
cmc
push
mov
leave
test
and
data16
fldenv
aad
jns
mov
jle
mov
fucom
push
sbb
xchg
xlat
lret
mov
sbb
out
or
or
bound
push
dec
loop
ficoms
sbb
div
test
or
shlb
pop
bswap
outsb
pushf
das
inc
push
push
xor
mov
loope
in
hlt
mov
sub
icebp
aaa
cmp
adc
data16
mov
inc
aaa
arpl
test
in
mov
jecxz
je
gs
call
lret
fisttps
enter
popf
test
into
jl
jns
es
and
adc
insb
pop
in
imul
fldpi
add
sub
sti
popf
or
jbe
sub
jno
mov
nop
insb
ljmp
pop
sub
sahf
ret
frstor
out
mov
movsl
in
fildl
je
das
push
es
imull
mov
dec
cmpsl
jl
addr16
sti
ja
mov
jp
sbb
not
mov
insb
bound
cmp
aaa
mov
adc
pop
add
add
sbb
int
mov
stc
pop
cmp
cmp
cmpsb
std
js
repz
pusha
adc
cltd
jle
inc
mov
fsin
xchg
test
or
in
and
lret
ficomps
cmpsl
pop
cmp
scas
dec
add
scas
arpl
or
mov
call
inc
dec
call
scas
mov
pop
inc
rorl
xor
aam
mov
aam
stc
sbb
jecxz
pop
push
outsl
lret
loopne
xchg
jb
ds
mov
sbb
cmp
fiadds
test
pusha
fistpll
mov
cmpsb
xor
in
test
xor
fcomp
push
cltd
ja
lahf
mov
mov
and
bound
dec
adcl
jg
imul
push
sti
sti
fldpi
mov
cld
idiv
rcrl
and
sahf
in
xor
loope
rorb
jmp
jae
push
lahf
cmc
mov
xchg
cmp
das
mov
test
insb
or
jne
push
das
sbb
loope
adc
and
insl
lea
in
movsb
popa
lods
fmull
adc
rcr
jge
sbb
mov
fcos
enter
jns
outsl
out
lods
dec
cli
xor
scas
out
push
outsb
push
mov
pop
mov
and
lds
loope
jbe
pop
lds
jb
mov
enter
fidivs
mov
scas
ret
push
ret
xor
pop
cli
inc
test
out
sbb
add
inc
ficompl
xchg
mov
pop
xchg
fbstp
push
pop
pop
fs
loope
or
and
out
in
pop
inc
pushf
jo
in
adc
push
sahf
out
insb
imul
pop
leave
mov
daa
int3
cld
add
movsb
arpl
test
lods
mov
mov
xor
int3
shrb
sub
cmp
add
add
pop
or
lret
or
cmp
xor
xor
movsb
mov
leave
mov
orl
and
addr16
xor
dec
ja
pushf
sub
out
mov
or
aad
lahf
and
stos
push
aas
xor
pushf
sysexit
add
xlat
sahf
scas
lods
lret
cmp
adc
test
mov
cs
ficoms
in
out
leave
fwait
and
cmpsb
cmp
cmp
fbld
dec
push
divb
shl
mov
push
pop
sbb
mov
cmpsb
ss
or
scas
cmp
ret
adc
ljmp
aaa
es
cmp
shll
int
arpl
mov
or
sbb
mov
adcb
adc
les
mov
gs
push
jb
adc
cmp
push
pop
int3
stos
mov
sub
mov
sahf
dec
jl
sub
add
xchg
cwtl
hlt
test
sub
dec
pop
mov
push
mov
rorb
in
in
mov
push
mov
mov
pop
xor
sub
jl
jb
push
sbb
repz
mov
sub
pop
popa
popf
pop
jnp
ret
cli
call
fs
inc
push
inc
add
jae
pusha
in
cltd
xchg
cmp
call
aad
lret
cmc
jbe
inc
jb
bound
mov
push
xchg
mov
dec
mov
mov
push
je
dec
cld
sbb
mov
pop
dec
jge
into
jbe,pt
icebp
aam
adc
push
aas
mov
mov
adc
mov
sahf
pop
adc
pop
mov
and
call
bound
cmp
fwait
in
stos
daa
xor
and
fwait
loopne
adc
mov
cld
nop
jae
addr16
push
mov
jb
push
pop
dec
test
mov
jl
jno
clc
dec
add
xor
mov
outsb
jne
dec
out
mul
fstl
icebp
stc
sub
add
push
pop
push
and
pop
xor
aas
fscale
stc
lcall
out
dec
mov
loope
outsl
inc
sbbl
cmp
popf
stos
xor
fldl
imul
aad
mov
pushf
mov
in
cmp
lahf
call
hlt
in
andb
sahf
mov
sub
xchg
arpl
sbb
mov
mov
cld
mov
movsb
aas
mov
pop
mov
movsl
pop
pop
repz
mov
imul
lahf
in
imul
not
add
jle
scas
mov
mov
sub
pop
mov
insl
ds
jp
push
les
pop
lods
xor
jne
int
int3
fidivrs
jnp
and
sbb
jecxz
add
inc
dec
pop
nop
popf
push
jecxz
sub
and
addr16
pop
out
dec
loopne
xor
callw
test
fsubrs
jl
scas
fisubl
mov
icebp
cmp
adc
jne
test
jo
or
push
out
mov
stc
test
fistpll
and
push
and
mov
sub
add
roll
imulb
cmp
fwait
xchg
or
dec
repz
lods
jns
insb
xor
pop
fisubl
ljmp
cs
xor
fwait
or
push
mov
test
adc
mov
ficompl
aas
and
mov
sbb
mov
imul
inc
dec
dec
push
outsb
mov
lahf
lea
cmp
sbb
xchg
push
xchg
sbb
add
xor
iret
lea
fidivl
jns
cmp
or
into
insb
add
repnz
movsl
mov
add
xchg
mov
fimuls
sbb
inc
mov
adc
mov
jnp
push
cld
pop
mov
sub
pop
xchg
outsb
pop
adc
or
jle
adc
push
inc
dec
mov
mov
js
jae
sub
out
push
cmp
lret
sbb
cmp
mov
mov
loope
es
jns
insb
xchg
imul
popa
push
mov
push
ret
add
cmpsb
fcmovb
ficompl
loopne
fbstp
lock
xor
jg
sub
scas
push
jns,pt
xchg
mov
or
mov
mov
lds
jae
shrl
mov
jmp
out
dec
gs
jo
data16
mov
mov
test
add
fdivrl
pop
scas
fcoml
movsb
jmp
mov
mov
imul
ret
sbbl
sbb
add
add
repnz
rcrb
or
int
add
repnz
adc
cmp
xlat
lods
data16
xor
sbb
inc
inc
xchg
xchg
sti
iret
cli
out
decl
adc
sub
mov
adc
std
jle
gs
shlb
sbb
dec
mov
mov
push
pop
rcr
jge
pop
or
xor
sbb
sub
scas
push
mov
adc
negl
cmp
mov
mov
lret
adc
mov
pop
repz
jno
ljmp
mov
sti
pop
xor
enter
pop
mov
insl
jl
imul
scas
mov
fnstcw
dec
and
adc
jl
imul
cltd
or
into
ja
fstps
mov
dec
xchg
mov
fwait
jp
pop
xor
test
add
adc
imul
fidivrl
cmpsb
pushf
lods
dec
in
dec
mov
lods
cmpsl
jns
cmp
icebp
scas
mov
mov
push
cmpsl
push
jle
fwait
jnp
sub
int
adc
xchg
aas
lret
mov
xchg
jne
lods
loop
int3
rcll
adc
jne
data16
mov
pop
jle
mov
xor
leave
mov
pop
jecxz
dec
cmp
in
cltd
sub
adc
ljmp
in
xchg
cmp
js
imul
pop
loopne
fcom
sub
inc
mov
cmp
xor
mov
fmuls
les
xchg
aas
nop
or
int3
jbe
push
jge
and
ljmp
adc
sub
push
push
and
scas
imul
inc
imul
mov
jle
inc
push
mov
bound
insb
scas
add
jge
push
sbb
test
es
mov
das
pop
loopne
test
and
lcall
movsl
add
hlt
push
lods
imul
adc
mov
sub
adcb
in
mov
xchg
imulb
jne
add
and
imul
shlb
jmp
jmp
cmp
inc
test
fadds
loope
aaa
popa
shrb
sbb
cmp
lcall
push
mov
mov
repnz
mov
jno
jne
sbb
imul
add
popf
int3
shrl
or
or
mov
inc
pop
cmp
mov
stos
mov
xorb
out
in
cmp
or
lcall
jl
push
or
data16
lret
mov
sbb
push
clc
xchg
cld
rclb
das
fstpt
test
pushf
add
xchg
push
mov
lcall
mov
mov
out
mov
std
movl
pop
lea
out
jge
sub
and
cmp
cltd
or
pop
cld
xchg
jne
add
je
ja
adcb
xchg
xor
test
and
outsb
ljmp
jmp
addr16
aas
shll
out
scas
packssdw
notb
sub
mov
sub
pop
or
arpl
jl
fnstcw
and
test
cmp
divl
inc
sbb
add
pop
outsb
sub
sqrtps
push
add
mov
mov
push
fldl
nop
xor
xchg
lds
push
aas
imul
shl
push
cld
push
adc
stos
pop
and
pop
inc
cld
fisubrl
mov
mov
repnz
sbb
jmp
dec
cli
lahf
lahf
mov
or
mov
sub
jae
push
pop
popa
fidivrl
in
jb
mov
adc
dec
adc
aam
inc
push
fiaddl
stc
in
outsl
fcmove
pop
enter
stc
arpl
or
repz
ja
rcr
rcrl
mov
xchg
ud2
xchg
mov
ret
and
jl
adc
lods
stos
adc
push
sbb
and
nop
and
or
mov
jp
aam
outsl
add
mov
cld
inc
mov
jae
out
push
sbbl
int3
and
add
add
loop
inc
rcrb
std
sbb
popf
hlt
sub
jbe
roll
es
fldt
fs
sahf
xor
inc
jmp
sub
imul
int3
icebp
dec
inc
call
xor
in
fsts
sub
faddp
stc
mov
mov
and
mov
movsb
and
dec
insl
leave
adc
mov
mov
stos
and
loope
pushf
mov
stc
fmuls
add
in
or
lea
test
dec
lahf
lock
push
pop
mov
daa
xchg
repz
jl
jne
and
arpl
or
jno
sbb
das
lcall
lahf
sti
mov
jle
lods
sbbl
add
fsubl
mov
pop
dec
sbb
pop
xchg
sbb
sbb
stos
aad
scas
stc
mov
adc
ds
sbb
lods
sbb
sub
mov
roll
mov
fs
push
sbb
cmpsl
mov
adc
mov
mov
inc
push
cmpsb
jne
add
or
int3
test
sub
imul
pop
test
xchg
cli
push
ss
xchg
pop
out
data16
aad
fld
dec
insb
mov
ffreep
clc
pop
add
pop
push
xor
sub
jns
xchg
mov
das
dec
mov
ficomps
pop
cmpsl
cmp
jb
mov
jl
add
pop
ja
cmp
mov
shll
xchg
aam
push
push
or
sarl
xchg
iret
jle
fs
mov
xor
test
push
mov
and
push
jnp
pop
sub
xchg
aad
sub
inc
dec
fidivrs
stc
or
mov
shlb
loopne
mov
aaa
and
sbb
pusha
ds
inc
dec
std
mov
ljmp
movsb
out
into
fs
sub
sahf
pop
loopne
pop
jle
mov
sbb
xchg
loope
add
mov
or
sub
mov
cmc
xchg
js
mov
push
jl
jno
fcmovnu
popa
xor
lea
push
out
xchg
shrl
ljmp
lcall
inc
sub
mov
mov
call
adc
mov
mov
pop
xor
mov
dec
lods
insl
shr
adc
in
adc
adc
push
stos
dec
xchg
lods
addr16
xlat
mov
popa
sub
cs
sub
lcall
add
sub
jle
cmp
out
add
in
in
cmp
fldcw
adc
pusha
mov
int
popa
or
ljmp
push
in
jmp
fsubs
scas
mov
jle
je
inc
sets
sbbb
dec
jns
div
jbe,pn
mov
fcmovbe
xor
sbb
dec
pop
es
xchg
loopne
push
decb
fldcw
rclb
sub
rcrb
call
clc
inc
aad
lea
push
and
mov
dec
push
loope
outsl
add
cli
loope
negb
test
lods
pop
cmc
dec
sub
jle
or
outsl
xchg
mov
rclb
ja
popf
fsubs
and
jmp
cmp
pusha
out
insb
mov
mov
push
movsl
xchg
push
lock
pop
aaa
test
sbb
pop
hlt
xor
clc
imul
mov
cld
lea
cs
movsb
jle
notb
push
and
ds
inc
inc
cmc
add
jp
mov
cmp
ljmp
jg
loop
inc
jnp
inc
cli
sbb
lea
pop
mov
scas
sti
push
dec
xor
cltd
es
arpl
scas
ss
decb
cmpsl
mov
outsl
push
dec
cmp
mov
test
ror
out
into
sbb
sub
mov
jmp
mov
push
adc
dec
push
stos
adc
and
jae
imul
mov
mov
in
in
test
imul
insb
out
mov
int3
roll
push
sbb
cmp
mov
rcrb
gs
sub
int
or
pand
add
xchg
fs
mov
imul
dec
ss
push
xor
push
mov
sbb
jg
xor
cltd
add
or
andl
sbb
pop
or
mov
push
lds
inc
sti
mov
out
dec
cld
mov
aaa
imul
pop
movsl
cltd
mov
adc
mov
in
fbld
sahf
cmp
mov
out
inc
pop
xchg
cmpsb
inc
sbb
push
insl
pop
shll
lds
mov
cwtl
cmp
push
int
lret
je
lock
int
aaa
cmp
mov
xor
popa
mov
ds
cwtl
dec
adc
mov
scas
sub
xchg
pushf
mov
mov
stos
sbb
xor
movsl
push
dec
adcb
inc
fs
cmp
in
repnz
or
mov
sar
push
mov
push
cmpsl
das
jns
clc
dec
mov
xor
mov
sub
jno
push
adc
xchg
and
mov
leave
ret
xor
jne
ljmp
push
mov
mov
inc
fildl
dec
push
enter
jmp
and
jle
movsb
jo
aaa
jl
mov
inc
int3
or
scas
or
jnp
and
addr16
movsb
lret
jne
cmpsb
aaa
xchg
xor
or
xor
sti
push
xchg
mov
sbb
inc
jg
cmpsb
hlt
sti
dec
push
sbb
push
lods
xchg
call
notb
bound
sti
cs
cmc
mov
add
push
test
and
lea
fbstp
xor
xchg
aaa
ret
dec
mov
cltd
stos
sub
hlt
dec
sbb
mov
sbb
mov
cmpsb
mov
aam
mov
sbb
mov
xchg
fists
test
cmp
and
mov
stos
scas
outsl
push
push
xchg
ljmp
call
mov
in
pop
mov
movsl
lcall
mov
jmp
call
mov
js
ja
sti
cld
shlb
scas
daa
jmp
ljmp
or
jne
rorl
dec
sub
dec
xchg
mov
jg
or
jmp
and
push
sbb
jo
sub
and
mov
and
gs
pop
lahf
lock
insl
outsb
jle
loope
mov
pusha
add
scas
sbb
adc
dec
jne
aad
jb
push
lcall
cmp
add
cld
mov
test
xchg
fsubs
das
pushf
mov
xchg
negl
inc
es
mov
xor
fsubrl
mov
cmpsb
jae
jne
lret
loope
sub
jae
cmpsb
mov
mov
sub
in
inc
push
inc
scas
or
into
push
mov
in
push
sbb
jae
or
mov
test
lret
out
mov
sub
lds
jg
jl
mov
loopne
push
push
jns
mov
fisubl
addb
xlat
bnd
sub
sub
add
dec
lods
ret
xor
int
cmp
dec
xor
push
xchg
test
inc
sub
mov
pop
shrl
je
sbb
jno
push
js
sarl
or
push
scas
in
loope
dec
fcoms
fsubs
inc
xor
sub
stos
push
lods
xchg
dec
xor
pop
cmp
pop
arpl
out
cs
sub
push
dec
mov
inc
dec
jb
movsl
cmp
push
mov
mov
sbb
mov
push
imul
push
stc
sahf
scas
pop
hlt
daa
push
cmpsl
dec
aas
dec
lret
push
sahf
stos
jb,pn
xchg
and
dec
inc
jo
stc
dec
xor
pushf
int3
jecxz
and
sub
ss
lcall
pop
loopne
mov
jle
mov
rolb
arpl
sbb
lods
mov
add
xor
gs
sub
mov
inc
add
or
arpl
jle
aad
pushf
push
dec
push
inc
lcall
popa
push
mov
inc
push
push
icebp
movl
xchg
pop
adc
dec
inc
push
inc
insl
push
lahf
pop
mov
into
adc
add
or
pop
ja
cmp
dec
xor
stc
adc
inc
fs
enter
pop
popa
popa
sbb
add
push
push
mov
data16
xchg
cmpsl
repz
add
fwait
xor
leave
fisubl
pusha
mov
lret
xor
mov
test
cld
and
mov
add
or
popf
xchg
add
push
js
mov
cmp
pushf
in
xchg
ljmp
sbb
jns
adc
icebp
rol
mov
test
adc
adc
dec
imulb
add
jp
mov
adc
jmp
inc
pop
xor
insb
in
aad
pop
out
mov
and
push
nop
dec
cmp
es
nop
insl
jle
add
hlt
call
jb
enter
pop
cs
jne
pop
movb
sub
rcrl
pop
in
xchg
jns
jnp
out
xchg
bound
and
push
popf
repz
inc
dec
sub
mov
fstpl
arpl
mov
inc
sbb
xor
repnz
push
push
push
dec
inc
sub
ret
sahf
pop
fadds
mov
and
fcmovnbe
mov
pop
aad
sbbl
sti
pusha
sbbl
push
mov
cmpsb
aam
scas
xor
roll
fsubs
in
mov
stos
repz
inc
push
jg
mov
and
pop
or
stos
push
jns
pop
sbb
or
cmp
sub
aaa
in
or
add
xor
enter
add
xor
arpl
fwait
add
cs
xchg
fcoml
arpl
fstl
stos
inc
mov
lret
aad
mov
movsl
sub
or
lea
add
nop
xchg
push
test
mov
mov
jae
and
mov
jg
mov
mov
hlt
fldl
aam
lea
mov
mov
dec
das
bound
xchg
jae
cmp
ss
dec
pop
mov
and
lock
jns
ss
mov
push
mov
push
mov
call
arpl
jmp
inc
repz
rcll
sub
scas
fcoml
ficoms
cld
or
shrb
jnp
mov
push
or
sub
sbb
xlat
insl
or
mov
jl
lods
outsb
xor
int
je
mov
xlat
aad
ret
sbb
mov
pop
mov
arpl
in
dec
inc
imul
fiadds
sarl
pop
jmpw
repnz
fbld
pop
test
adc
xlat
xchg
push
dec
std
inc
inc
add
mov
hlt
roll
bsr
cwtl
iret
sub
sub
push
pop
das
dec
sti
sbb
push
call
mov
iret
faddl
int
xchg
cwtl
gs
add
sub
adc
or
fldl
cmp
sub
pop
mov
out
pop
mov
xchg
pop
mov
aad
insl
mov
sbb
push
aaa
sbb
cmpl
movsl
gs
js
inc
hlt
xlat
imul
xor
adc
mov
xchg
mov
shrb
dec
nop
xchg
mov
pop
cmc
and
sbb
lock
mov
and
mov
repz
rcl
shl
dec
jp
cmp
xchg
iret
mov
jae
fwait
cmp
jecxz
sub
decb
adc
adc
add
xor
or
mov
mov
mov
in
test
aaa
inc
out
fst
aaa
pushf
mov
ja
push
stos
sub
xor
inc
xor
into
mov
adc
push
out
mov
ljmp
pop
scas
jno
iret
out
pushf
cmp
push
aas
loopne
mov
push
jnp
and
std
nopl
sbb
jge
out
std
mov
adc
push
gs
xor
jle
push
lcall
fwait
xor
adc
fimull
xchg
sbb
push
adc
iret
outsb
push
inc
pushl
fdivl
and
sbb
mov
and
pop
mov
icebp
mov
mov
xlat
loopne
mov
or
mov
mov
mov
adc
loope
pop
lock
cld
mov
adc
stos
pop
xchg
jmp
bound
pop
mov
popa
sar
insl
sarb
and
cmp
sub
aas
dec
imul
lahf
aam
arpl
les
mov
push
push
rep
pop
sub
jns
sbb
aaa
or
mov
dec
xchg
jge
sarl
ljmp
jmp
sub
into
andb
mov
mov
xchg
out
push
sub
mov
das
cltd
cmp
add
outsb
in
adc
out
cld
fwait
insl
movsb
cld
add
ficomps
fstps
in
cmp
adc
pop
mov
sbb
daa
adc
xchg
push
xchg
xchg
outsb
inc
lods
pop
lahf
dec
sbb
fistl
mov
add
mov
jmp
pop
stc
mov
jl
nop
inc
jns
test
jae
and
les
sti
dec
fiadds
pop
xor
movl
ja
lods
mov
mov
push
stc
flds
ljmp
jge
movsb
cltd
pop
clc
cmc
jmp
push
imul
pop
repnz
mov
xor
pop
adcb
rolb
lahf
movsl
gs
stos
cli
fxam
adc
fwait
pop
inc
andl
pop
or
arpl
mov
arpl
inc
or
icebp
out
enter
or
add
stos
call
xchg
jmp
push
jp
mov
repz
movsl
call
inc
mov
repnz
fs
cltd
lds
loopne
or
push
pop
add
leave
mov
loopne
push
adc
xchg
mov
and
pop
pop
pushf
mov
push
test
mov
xchg
cmc
ret
add
rolb
dec
inc
inc
push
pop
cmpsl
in
cmp
or
mov
cmpsl
stc
decb
and
and
fmuls
xchg
sar
call
test
mov
lret
repz
lret
movsl
fidivl
stc
mov
imul
imul
adc
stc
dec
jne
or
push
xor
mov
push
filds
mov
and
enter
jns
sbb
lret
inc
add
test
jb
jl
mov
imul
sbb
sbb
cmp
lock
add
cli
shlb
pop
or
jle
xchg
aas
mov
sbb
mov
mov
in
ja
or
insl
sub
or
push
outsb
or
rcl
into
loop
inc
iret
sbb
or
or
bnd
mov
sbb
mov
outsb
and
xor
clc
add
sbb
in
insl
out
pushf
outsb
in
and
stc
jne
mov
addr16
mov
mov
cmp
jecxz
dec
ffreep
lcall
ret
cmp
pop
nop
sub
inc
in
sti
outsl
adc
dec
out
cmp
jp
or
ret
out
std
jge
lahf
sub
enter
scas
in
mov
mov
cmp
push
hlt
cmp
pushf
aas
aaa
pop
mov
loop
add
ja
test
fwait
cli
jae
lds
stos
cmp
mov
mov
int3
mov
rcr
jg
mov
lcall
push
aad
movlps
andb
pop
ja
push
cmp
outsb
inc
sbb
adc
sahf
imul
xor
mov
sahf
xchg
xor
sub
sbbb
inc
fmuls
mov
int
mov
popf
fsubr
mov
rcrl
mov
sbb
into
push
cltd
sub
lret
push
outsb
fwait
pop
sti
andb
into
or
pop
ds
outsl
lret
in
mov
xor
insb
lds
into
out
pop
loop
stc
cmp
insb
test
mov
push
jecxz
sub
test
loope
fimull
cwtl
or
mov
push
adc
or
jl
sbb
ffree
pop
add
orb
outsl
and
adc
and
addr16
imul
in
pop
cwtl
sub
or
movsb
mov
lods
mov
mov
jnp
mov
sub
iret
lret
xor
adc
fdivrp
loope
xchg
fisttpll
push
das
xchg
dec
jnp
sti
cs
cmc
inc
loopne
lock
adc
in
push
xlat
mov
sub
cltd
dec
lret
mov
data16
pop
push
repnz
cmp
add
xchg
jmp
clc
iret
mov
sbb
movsb
mov
fsubrl
add
add
or
sub
dec
bound
lret
xor
or
cmpl
stos
sbb
jmp
in
push
or
mov
sbb
push
fucom
and
lock
xchg
mov
jo
test
loope
mov
loop
cs
or
pop
addb
pop
outsl
inc
jb
leave
mov
dec
ret
std
mov
lret
inc
loopne
xor
adc
ja
jb
mov
jnp
orb
jb
xor
sub
pop
xchg
mov
mov
dec
mov
cmp
sarl
xchg
arpl
jo
aad
gs
scas
jae
pop
test
jo
xchg
enter
push
pop
push
or
popa
push
push
ljmp
loope
pop
mov
sbb
or
cmp
push
sti
mov
xchg
and
and
ret
shl
push
adc
xor
inc
push
cmp
dec
addb
sbb
insl
ja
call
xor
sbb
mov
sub
std
scas
gs
mov
inc
test
aaa
sbb
mov
sbb
das
cmp
fistpl
push
sbb
inc
loope
push
ja
jl
loopne
jo
sbb
es
mov
pop
adc
jmp
sub
cmc
push
dec
jge
sub
jo
jae
adc
push
sub
add
sahf
adc
and
movb
inc
jmp
jle
fisubrs
andb
xor
stc
lods
add
pop
jmp
add
inc
loopne
inc
outsl
sub
test
cmp
fsubrl
ja
cmp
pushf
xor
sbb
inc
jge,pt
xchg
sbb
into
mov
cltd
lret
mov
xchg
mov
push
xchg
mov
lret
xchg
mov
ja
push
addr16
mov
push
mov
push
lret
and
sub
inc
jecxz
cmc
add
push
or
add
xchg
adcl
aas
ljmp
inc
push
pop
mov
mov
sti
out
cs
pop
in
and
pop
dec
dec
scas
push
pop
repz
jb
mov
push
xor
rcrb
pop
arpl
lret
and
jno
sbb
mov
xor
call
out
hlt
inc
addr16
xor
adc
cltd
enter
pop
ja
xlat
jp
stos
pop
aaa
pop
adc
xlat
adc
adc
dec
mov
test
arpl
mov
jle
cmpsb
or
daa
popa
inc
bound
jns
push
inc
inc
push
mov
dec
jmp
lret
pop
mov
stos
push
lock
add
aaa
pop
mov
dec
out
and
mov
jns
or
push
fucomp
xor
test
stos
nop
pushf
mov
aas
mov
jp
xchg
andl
inc
xor
jb
pop
dec
push
xor
mov
and
add
dec
cmp
imul
ret
pusha
arpl
test
js
inc
fidivrl
dec
dec
sbb
iret
push
mov
ja
imulb
xchg
cmc
adc
dec
rclb
inc
mov
and
push
out
push
xlat
pop
pop
pop
gs
push
outsb
in
enter
les
loope
push
inc
loopne
xchg
push
cwtl
pop
mov
ja
and
add
mov
arpl
cmp
mov
jae
inc
shrb
and
popf
xor
stc
pop
jae
add
cld
xor
sbbb
jecxz
jno
not
and
xchg
jl
sbb
jno
lods
push
sbb
jge
popa
xchg
out
cmp
mov
scas
outsb
fnstcw
inc
lods
dec
push
add
mov
mov
xchg
xchg
xchg
jns
cmp
out
jb
insl
cli
movsl
test
xor
sub
pushf
adc
cmp
and
sbb
lcall
popa
and
sub
int3
aas
cld
aam
fisttps
clc
lret
xchg
aad
inc
dec
jbe
cmp
dec
xchg
shrb
jecxz
scas
int
add
shrl
daa
xchg
inc
jne
dec
dec
nop
pop
inc
ficomps
sti
push
je
push
popw
stos
aaa
jl
lret
jnp
je
adc
mov
cs
dec
psubsw
mov
mov
cmpsb
leave
mov
nop
cwtl
vmread
ror
movsl
fcmovbe
pop
cmpsl
lret
lea
fwait
mov
inc
xor
sbb
push
es
sbb
jno
lcall
mov
jo
push
push
jmp
mov
cli
or
rcl
adc
xchg
inc
add
ja
cwtl
xchg
orl
push
pop
addr16
jne
mov
cmp
imul
stos
fcmovu
inc
mov
out
into
in
sub
pop
imul
push
mov
xchg
stos
mov
gs
addr16
test
push
loop
aam
adc
ret
adc
cmp
mov
int
notb
popf
test
push
xchg
push
mov
je
or
xchg
test
or
aaa
popa
mov
sbb
add
push
insb
dec
fbstp
daa
push
ljmp
xchg
test
rol
je
faddl
xor
sub
dec
test
pop
push
or
sbb
jmp
cmp
mull
imul
adc
mov
jecxz
insl
das
imul
mov
in
sub
xchg
push
jo
jae
sub
clc
lock
popf
clc
gs
cli
dec
add
cmp
add
mov
scas
inc
add
lahf
lcall
lds
cwtl
das
fwait
push
hlt
ret
sti
or
xor
push
jp,pn
sbb
mov
jecxz
fcomi
add
sub
and
cmpb
adc
sti
jbe
adc
pop
leave
jns
add
loope
lods
pop
mov
cmc
pop
sbb
repz
adc
push
stos
pop
insl
das
add
jl
fcompl
mov
mov
pushl
aas
add
outsl
inc
outsb
sbb
or
sbb
lods
xor
mov
cmc
pusha
sti
or
scas
sbb
cmp
ss
push
pop
or
mov
sub
sbb
dec
dec
pop
inc
stos
rclb
adc
pop
pop
test
jne
jmp
sbbl
xchg
aam
inc
or
mov
fs
fistpll
sbbb
dec
xor
arpl
inc
push
jno
scas
sti
jb
and
pop
push
adc
or
sbb
nop
mov
stos
not
ss
jb
sbb
std
enter
sub
pop
sub
push
push
out
push
gs
in
fadds
cmp
or
sub
call
stos
cmp
pop
sub
pop
inc
jmp
fadds
popl
jl
mov
sbb
fists
mov
push
pop
jmp
push
cmp
jb
and
sub
subl
mov
mov
pop
lods
lods
das
adc
dec
popa
push
jle
mov
fimuls
mov
dec
xor
pop
ss
arpl
lea
ret
push
lock
das
dec
lock
or
inc
push
pop
mov
push
fsubrs
jae
add
icebp
insl
fmul
mov
add
insl
mov
les
mov
adc
fisubs
jmp
jo
xlat
and
adc
add
jle
sub
mov
ljmp
rol
pop
mov
hlt
ss
jmp
xor
bound
pusha
rclb
repnz
add
cmc
xchg
rcrl
jbe
jle
sub
jbe
pop
std
je
ljmp
sarb
stos
or
sub
test
jle
sub
movsl
movsb
sahf
pop
scas
push
jle
inc
ds
cmpl
jmp
imul
iret
dec
shr
test
lret
int3
das
movsl
lret
daa
mov
cli
xchg
sbb
push
loop
or
loop
movsl
mov
adc
pop
lret
addr16
in
push
in
xchg
jmp
pop
adc
fcoml
push
adc
mov
ds
lcall
jne
test
fisubl
int
adc
pop
pop
mov
aam
xor
mov
ret
push
mov
ficompl
mov
jne
es
pop
or
pop
pop
add
mov
jae
push
test
push
lds
mov
pop
cmp
push
das
or
sahf
push
xchg
mov
cmpsb
cmp
ret
movsb
sbb
inc
mov
mov
pop
nop
xor
sub
in
fisubrs
mov
cmp
pop
data16
sbb
rol
add
je
aam
mov
push
out
xlat
mov
out
out
xchg
outsb
mov
movsb
ljmp
and
add
xor
repnz
ds
jns
mov
test
shr
pop
cs
adc
cld
or
movsl
stos
xor
mov
jns
pop
push
add
fwait
iret
jne
cmp
inc
stos
cwtl
mov
dec
sbb
add
pop
stos
icebp
in
mov
in
inc
frstor
call
outsb
jae
subl
push
pop
push
leave
in
push
cmp
dec
scas
aad
lahf
cmpsb
add
push
sar
add
test
in
icebp
inc
sahf
aas
xlat
fstpt
sub
movsb
and
xchg
pop
repnz
push
xor
inc
sbb
popf
adc
aam
imul
mov
loopne
pop
lretw
outsl
pop
hlt
outsb
ss
add
fimull
dec
xlat
loopne
jge
sbb
mov
bound
push
shll
test
lea
xor
adc
xor
bnd
addr16
xor
mov
cmc
cmpsl
cwtl
and
push
lods
xchg
sub
cmp
cmp
movsb
mov
js
gs
push
add
mov
and
and
add
jb
sbb
mov
loop
fwait
out
dec
push
or
push
jge
shll
cwtl
mov
adc
mov
jmp
sub
mov
in
test
out
xchg
cwtl
ljmp
lret
xchg
push
push
fisttpl
sbb
xor
or
mov
cltd
inc
push
pushl
call
in
xor
in
mov
les
mov
not
subl
popl
lcall
sub
xor
mov
mov
addb
add
adcl
popf
test
inc
mov
mov
leave
push
sub
jmp
loopne
loopne
fwait
push
in
xchg
movb
push
mov
aam
movsl
enter
cmpb
iret
mov
sbb
mov
adc
or
sahf
pop
lret
jmp
lods
push
xchg
mov
mov
xchg
stc
out
cmpsb
and
mov
push
pop
es
bound
popa
pop
cmp
add
mov
lds
cmp
sbb
stc
rcl
or
and
and
aaa
pop
mov
lret
fisubrs
movsb
fsubrs
cmpb
daa
cmpsl
xchg
jb
xor
xchg
push
xor
xor
test
pop
or
bound
pushf
les
xchg
sbb
xor
adc
imul
rorl
mov
jo
clc
imul
lods
pop
aas
cmp
and
cmp
into
sbb
mov
inc
dec
rcrl
pop
leave
out
sub
iret
cmpsb
ljmp
in
mov
scas
xlat
movsl
or
enter
dec
loopne
negl
popa
xchg
adcl
jmp
sub
jle
hlt
xorb
cmp
bound
mov
sub
add
xor
test
nop
ret
xor
imul
loopne
stos
shr
cld
dec
testb
inc
mov
lret
add
jmp
lahf
ds
imul
cmpsl
xor
mov
jge
ret
dec
mov
std
shlb
mov
push
scas
aam
mov
fidivrs
jns
cmp
je
mov
inc
or
pop
insb
ret
and
testb
mov
sub
out
or
jle
jmp
push
mov
nop
jle
jns
jmp
mov
loope
popf
add
mov
mov
mov
push
push
sbb
xorb
sub
push
inc
mov
enter
in
mov
inc
test
mov
adc
sub
gs
cmp
lea
add
lods
xor
mov
int
sub
add
jl
pusha
mov
cmpsb
addr16
dec
pop
repnz
je
mov
loopne
fisubrs
int
and
pop
adc
sti
ret
out
xchg
movsb
popf
fsubr
add
shld
pop
mov
mov
stc
xchg
mov
or
adc
sub
jmp
imul
jns
mov
aaa
cmp
lds
jecxz
popf
mov
out
push
jnp
aam
imul
xor
xchg
fstl
xchg
rclb
jecxz
outsb
movsl
cltd
dec
jbe
push
leave
ret
push
cmp
pop
pop
aad
gs
les
cmpsl
out
out
or
insb
arpl
add
mov
xlat
jb
test
fistpll
or
or
lea
xor
jle
aam
mov
shrl
fstps
xor
js,pn
movsl
stos
push
mov
jle
sbbl
mov
ds
int3
pusha
cmp
shrb
ficompl
jmp
jg
sub
cmp
gs
mov
icebp
dec
cs
pop
das
xchg
jns
mov
add
mov
mov
rorb
in
xlat
sbb
inc
inc
pop
pop
lds
movsl
cmp
sub
loop
pop
xchg
mov
adc
imul
mov
popa
sbb
mov
shlb
sar
stc
pop
icebp
ret
jecxz
mov
push
scas
test
int3
pop
sbb
test
xchg
dec
test
lahf
lcall
or
pop
movsb
and
fiaddl
pop
subb
popa
dec
jno
clc
and
fcoml
lods
lret
test
cli
adc
fs
push
fwait
mov
adc
dec
inc
ret
dec
cwtl
or
xchg
and
inc
pop
aad
int3
cmpsb
xchg
cld
cmp
push
push
xchg
jo
setne
loope
xlat
pop
pop
outsb
scas
mov
pop
dec
ret
rol
subb
mov
dec
mov
inc
movsb
or
mov
mov
and
shll
dec
jp
fs
lcall
xchg
lret
lods
inc
lds
int3
nop
inc
cs
jns
jno
or
fwait
ret
imul
lcall
push
in
gs
pop
inc
jne
xchg
sbb
aas
jp
mov
in
test
push
lods
pop
fwait
sti
fstpt
xchg
dec
dec
or
loope
sub
xor
popl
push
aad
lods
std
hlt
add
push
mov
sbbb
cmp
mov
xchg
inc
xchg
mov
lahf
insl
sub
js
add
xor
sbb
jns
and
outsl
imul
pop
push
xchg
mov
fdivp
fldcw
data16
jno
mov
mov
jne
sub
push
shl
ret
inc
out
cwtl
jecxz
mov
addr16
arpl
aad
in
icebp
dec
sub
xor
xchg
enter
jnp
and
mov
sbb
aam
imul
xchg
dec
repnz
sub
fbld
lods
inc
sub
sub
xor
adcl
xchg
xchg
sarb
jge
sti
or
push
pusha
add
rolb
jle
gs
cmp
repz
xchg
cmp
or
jle
out
pushf
std
push
dec
das
xchg
pusha
cmp
stos
pop
in
mov
lock
scas
mov
jae
pop
loopne
push
rorl
xchg
iret
jo
jo
sti
sbbb
outsb
hlt
mov
sahf
pop
pop
loope
hlt
stc
sbb
fldl
adc
cltd
add
ja
lahf
xor
insl
ljmp
push
cltd
in
insl
push
jb
insb
inc
int3
hlt
imul
xor
sbb
fstl
inc
out
inc
outsl
lods
loop
xchg
dec
lret
lods
mov
call
adc
cmc
bound
and
and
loopne
fisttps
loope
fcomps
xchg
cmpsl
sub
fsin
into
fistpl
mov
lock
add
push
subl
repz
sub
leave
pop
lahf
test
mov
xchg
ja
ja
div
and
pop
shr
jnp
inc
test
mov
ja
repz
test
jns
xor
jno
js
adc
jmp
add
pop
dec
mov
dec
sbb
loopne
dec
ds
adc
pop
pop
daa
push
dec
inc
mov
dec
xor
int3
push
lret
scas
add
push
test
jle
aaa
jg
pop
lds
xor
mov
add
or
out
outsl
or
aad
jl
fnstenv
cmp
push
mov
lea
lods
pushf
fimull
dec
xor
mov
adcl
lret
or
sbb
aaa
movsb
adc
or
adc
add
add
nop
stos
jae
xchg
pop
mov
fidivl
pop
outsl
push
test
sbb
nop
sbb
out
fstps
pop
push
std
jbe
mov
lock
mov
sbb
dec
les
jo
mov
add
jb
jle
sub
jge
clc
cs
adc
mov
cmp
out
es
fcmovbe
xor
stc
rorl
inc
sub
pop
mov
into
inc
push
bound
inc
or
adc
xor
pop
mov
push
jl
aaa
sbb
mov
stos
imul
inc
decl
sbb
mov
popl
int3
popf
xchg
cld
rcl
push
mov
outsb
scas
addr16
xor
fdivr
mov
lret
std
pop
cmpsb
inc
lods
movsl
xchg
jg
jmp
bound
push
mov
push
shll
inc
push
stos
das
adc
mov
cmp
in
lods
aam
jl
jmp
sbb
or
pushf
cmp
stc
pop
imul
mov
mov
xchg
ret
dec
push
inc
mov
popf
inc
cmp
dec
xor
arpl
dec
daa
addr16
lea
xor
leave
xor
dec
add
cs
xchg
test
call
mov
pop
push
repnz
sbb
insl
adc
add
jecxz
jecxz
xlat
inc
or
daa
arpl
fucomip
mov
andb
dec
test
mov
sarl
call
dec
mov
xor
cmpsl
lock
mov
ror
aas
cwtl
icebp
cli
scas
xlat
pop
test
into
jbe
adc
xbegin
lods
sbb
into
sbbb
pop
les
mov
sub
aad
push
cli
adc
cld
mov
adc
lods
inc
mov
sbb
and
sub
hlt
xchg
mov
cwtl
stc
daa
mov
pusha
jg
xchg
repz
push
dec
fldl
mov
and
inc
scas
xor
push
xchg
mov
daa
in
cmp
cmp
adcb
mov
xor
sub
repz
lods
mov
stos
jo
xor
jecxz
je
jmp
xchg
pop
lcall
jne
fcmovne
scas
dec
push
adc
jge
ret
aaa
adc
push
sar
lahf
int3
push
movsb
add
xchg
and
leave
xchg
mov
xlat
xchg
jnp
ss
xchg
cld
lret
jecxz
inc
mov
cwtl
xchg
xchg
rcr
rcr
adcl
dec
mov
adc
out
aaa
sbb
pop
pop
inc
fidivrs
ret
jae
sub
inc
ret
inc
dec
mov
cmp
adc
adc
test
dec
aam
ss
ljmp
pop
cmp
stc
movsl
imul
jge
cld
clc
adc
add
xlat
lret
pop
add
fisubl
cmp
aad
rcrl
mov
and
sub
cmpsl
dec
les
jg
jne
mov
and
int3
jmp
loopne
sbb
xchg
loop
sub
adc
xchg
scas
sub
jne,pt
in
pop
or
and
jo
or
cmp
mov
mov
adc
mov
stos
xor
push
jge
pop
pop
pusha
pop
cwtl
aad
adc
ret
cmp
sahf
out
lcall
sub
pop
stos
xchg
mul
aam
clc
mov
cmpsl
ds
mov
test
aas
jecxz
dec
cmp
jo
sbb
jno
sbb
addr16
jge
cmp
cmp
add
fstps
cmpsb
add
mov
and
int3
and
cmp
aad
sti
icebp
mov
inc
sub
mov
ljmp
aas
loope
pop
inc
and
xchg
les
push
faddl
jbe
mov
cmp
cmp
fsubrp
jo
out
into
push
lock
in
pop
pop
inc
or
js
bound
into
into
popa
mov
xlat
shlb
or
in
sub
pop
call
sbb
sbb
and
fistl
push
mov
sub
cwtl
inc
lock
cwtl
mov
xor
xchg
add
and
in
les
sbb
shrb
lods
xchg
xchg
lea
xor
xor
popa
dec
or
and
lahf
and
in
std
movsl
inc
dec
or
lods
fcmovbe
loopne
lods
or
cmp
push
adc
pop
jmp
adc
mov
es
enter
sahf
js
leave
inc
stos
movsb
jno
cld
sarl
lret
inc
andl
sar
not
push
jb
jecxz
mov
stc
pushf
rcrl
mov
or
fwait
mov
lret
jbe
loope
aas
stos
nop
cmp
or
push
xor
clc
mov
call
notb
clc
stos
mov
xchg
xchg
imul
lods
aam
lret
js
or
jno
xchg
dec
mov
and
xor
es
sbb
pop
das
push
test
nop
mov
in
imul
mov
mov
ds
xchg
lahf
cltd
ret
stos
bound
add
push
sub
xor
jnp
in
fdivs
out
adcb
pop
xor
pop
and
incb
mov
icebp
add
push
mov
mov
loopne
or
mov
push
add
mov
cmp
cs
dec
scas
cmp
cld
add
imul
push
std
inc
sbb
lret
and
mov
cmp
push
cltd
test
iret
inc
ficompl
shlb
mov
fisttpl
adc
mov
fnstsw
leave
scas
in
int3
idivl
int
lods
xchg
rclb
popf
pop
xor
inc
adc
arpl
inc
inc
adc
add
or
xor
frstor
and
mov
jb
jl
imul
adc
data16
ss
push
cmpsb
and
aam
xor
adc
mov
pop
xorb
push
add
pop
cmpl
lahf
test
mov
push
rorl
cmp
aam
sbb
out
add
fidivs
loope
fisubs
mov
jne
sub
dec
lea
adc
mov
push
xchg
cli
push
jge
outsb
pop
popa
ljmp
inc
inc
dec
cs
movsl
dec
xor
out
pop
test
sbb
push
inc
push
pop
add
adc
lret
movsl
mov
pop
je
cwtl
div
fimull
fisttpll
fstps
mov
xchg
sub
ret
cmpsb
and
adc
mov
mov
mov
lods
imul
jne
stos
sub
or
lret
fs
inc
fimull
imul
ja
es
push
je
mov
jg
cmp
popf
mov
icebp
pop
ja
mov
adc
add
and
icebp
aam
daa
jmp
movsb
out
and
lods
sub
cwtl
mov
repz
ds
sbb
fdivp
or
mov
movsl
bound
mov
pushf
ja
dec
lret
popf
fwait
mov
dec
adc
movsl
jle
xor
imul
stos
cmp
add
jb
sub
push
or
xor
sbb
sbb
sub
jg
add
aam
push
mov
mov
pop
add
xchg
lret
addr16
and
popf
sub
jmp
pop
bound
and
mov
jne
xchg
ret
out
mov
movsb
test
pop
sbb
mov
mov
mov
jl
xchg
jge
cmpsl
push
jno
mov
mov
mov
sub
ficoms
fimull
dec
jecxz
dec
andl
repz
inc
les
mov
mov
or
adc
jbe
pop
into
inc
mov
xchg
cmpb
fcomps
pop
sarb
shr
aaa
pop
or
clc
cwtl
repz
cmp
addr16
and
stc
and
adc
das
push
scas
jg
push
sbb
mov
lods
xor
sub
aam
mov
mov
xchg
insl
mov
jne
aas
adc
pop
call
adcb
lock
fcmovbe
lret
jle
and
jbe
adc
sbb
loopne
gs
push
scas
adc
push
push
mov
cwtl
pop
dec
cwtl
mov
out
fcmovnbe
and
ljmp
dec
cmc
fldt
scas
es
fdivrs
or
jae
mov
mov
test
jle
aad
out
inc
mov
decb
jb
and
sbb
mov
fsubr
movsl
cld
mov
sub
pop
mov
xor
sbb
add
stos
jecxz
mov
push
push
imul
in
xor
mov
dec
push
clc
push
xchg
inc
inc
dec
add
ret
imul
xlat
mov
js
insl
adc
shll
pop
lcall
mov
in
es
jg
dec
loop
or
pop
xchg
enter
xchg
test
arpl
inc
push
sub
loop
lret
clc
sbb
test
and
jno
push
fadds
dec
pop
hlt
out
pop
shrb
insl
outsb
insl
mov
jle
test
fmulp
jno
clc
scas
dec
inc
loop
pop
xchg
pop
cmp
mov
inc
push
xor
add
xor
xchg
lods
mov
enter
jno
movsb
xlat
push
adc
movsb
push
xchg
sarl
enter
or
cmp
xor
lods
ror
sub
pop
jg
push
add
icebp
jl
je
pusha
xchg
in
js
in
mov
xor
test
test
or
ficoms
ficomps
xor
or
lcall
pop
imul
std
in
mov
mov
ret
popa
adc
push
dec
cmp
xchg
xor
fstp
pusha
jb,pn
cld
frstor
dec
mov
arpl
and
jne
ror
and
sarb
cmpsl
rcrb
pusha
fisttps
psllw
jmp
scas
in
sub
fmull
cmp
push
std
pop
cmpsl
call
jae
pop
mov
scas
lret
or
repnz
or
adc
push
mov
push
adcb
lds
pop
inc
mov
pop
arpl
push
int3
or
sub
int
pop
pop
or
pop
lret
outsb
outsl
xor
cwtl
mov
cmpsl
adc
mov
cwtl
fcoms
clc
sub
xchg
adc
or
sub
sub
in
inc
scas
push
clc
popf
mov
xchg
test
dec
iret
cli
xor
push
pop
cmp
mov
add
fistpl
xchg
and
inc
fisttpll
in
cld
mov
cld
in
in
sarb
xchg
insl
pop
push
movsl
aam
jmp
adc
jmp
pop
test
push
loop
inc
jne
or
ds
aam
sub
loop
pusha
sbb
add
adc
cmp
sub
hlt
lock
cwtl
fs
jmp
gs
mov
imul
xchg
repz
cmp
repnz
pushf
xor
nop
lea
adc
aam
push
sahf
adc
leave
nop
sbb
mov
lahf
test
push
mov
jae,pn
call
adc
push
add
pop
mov
addr16
cmpsb
repz
inc
aas
push
inc
pop
stc
es
in
jmp
and
sub
cmpsb
sub
sbb
and
insb
cli
push
pop
xlat
shll
cmc
outsb
sub
pop
pop
loop
jmp
cmp
aas
mov
jecxz
sbb
mov
xorl
xor
lret
and
mov
stos
add
mov
inc
xorl
ret
cltd
cmpsb
cmp
test
push
dec
jl
push
adcb
mov
jl
lods
cld
imul
sti
xor
fldcw
rcr
stc
sarb
outsl
jmp
mov
lret
scas
mov
xlat
outsb
sti
xor
aad
xchg
push
cmc
addb
cs
mov
or
jnp
sbb
pop
aam
call
dec
jge
nop
insb
push
jbe
aaa
jns
pop
and
pop
out
nop
cmp
aad
mov
sbb
das
pop
fwait
sub
add
xorb
outsb
jl
mov
sbbl
push
sub
fidivrs
divb
scas
mov
movsl
arpl
out
sub
xor
sbb
lret
inc
jl
adc
stc
dec
mov
inc
clc
jb
adc
mov
mov
pop
sbb
into
sub
out
cmpsb
xchg
rcl
and
cmp
adc
mov
cs
ret
mov
out
xor
in
cmp
movl
inc
lea
pushf
test
cltd
dec
pusha
scas
mov
iret
gs
shr
stc
lret
imulb
or
ljmp
in
mov
sbb
aaa
inc
clc
add
lods
or
popl
push
cli
jns
scas
movsl
jae
xchg
sbb
jns
js
cmp
cmp
mov
jp
push
xchg
jle
cwtl
push
xlat
lods
mov
ss
imul
push
cwtl
movsb
fwait
cmpsb
cmp
popa
push
adc
push
mov
push
dec
sti
stos
ret
fidivs
and
loope
sbb
or
inc
mov
jl
js
ljmp
pop
int
xchg
sub
jp
and
repz
xchg
out
lahf
lea
repz
das
jecxz
sahf
les
jmp
loop
pop
pop
ja
pop
inc
in
add
and
scas
dec
cmpsb
rcl
mov
loop
jmp
cltd
repz
cs
inc
mov
inc
sti
adc
or
xor
cmp
sarb
push
out
hlt
btr
jl
je
cmp
sbb
push
and
add
fwait
mov
xor
pop
cli
out
insl
das
dec
dec
jb
cmp
xchg
sub
jnp
xor
inc
mov
fdiv
aad
fdivl
ret
lds
jmp
mov
sub
cmp
test
add
mov
inc
jno
loope
pop
xchg
fildl
xor
shll
cmp
insb
pop
test
out
ss
mov
in
cli
imul
add
and
int3
sbb
inc
ss
dec
out
sub
sub
xor
add
inc
push
pop
xchg
pop
sub
mov
add
cli
pop
daa
mov
pop
and
in
fs
xchg
cmpsl
add
push
dec
aas
push
push
mov
lods
std
adcb
cmp
or
out
fisubrl
nop
cmp
mov
push
mov
dec
gs
pop
push
movsb
out
jo
fidivs
ret
jo
xchg
xchg
cwtl
cmp
cmpsb
adc
pop
mov
sbb
add
in
int
sbb
xchg
cli
popf
mov
pop
mov
pop
popa
sbb
cli
inc
orb
sub
push
mov
cmpsb
adc
jg
pop
in
push
in
adc
mov
xchg
and
xchg
sbb
int
js
xchg
pop
addr16
xchg
mov
mov
repnz
push
pop
xchg
and
mov
scas
add
mov
add
shlb
and
jne
icebp
fcmovnu
in
out
cmp
sub
fsubrp
adc
leave
loop
xor
mov
mov
fldt
sub
or
imul
xchg
repnz
inc
out
cmp
mov
mov
dec
xchg
jg
mov
inc
pop
fnsave
pushf
lods
dec
lods
fimull
dec
mov
dec
inc
das
and
push
pop
cmpsb
jecxz
xlat
jo
ficoms
test
bound
dec
clc
cli
mov
push
adc
mov
pop
inc
jbe
sub
int
dec
or
xor
or
fnstcw
movl
out
fisttps
lods
ds
sub
mov
cmp
add
dec
dec
sbb
faddl
mov
adc
mov
mov
adc
in
mov
and
sub
in
out
jl
ss
pop
mov
pushf
fiadds
mov
or
fsts
mov
int3
sbb
sbb
sub
jae
xor
outsb
dec
out
rolb
insl
push
call
or
adc
call
je
sub
push
push
mov
push
repnz
dec
fisubs
cmp
hlt
mov
es
jl
test
daa
cld
bound
gs
clc
dec
xchg
cld
pushf
stos
dec
add
insl
dec
push
rol
iret
mov
pop
insl
fisubrl
sub
sbb
popa
push
into
clc
xor
scas
mul
shrl
push
mov
out
popf
mov
aas
xor
movsb
into
inc
mov
sub
jl
or
sub
dec
add
pop
inc
jbe
mov
jb
sub
sbb
lock
xchg
push
cld
int
push
inc
push
cmp
xor
xor
cmp
and
add
ljmp
aad
and
sub
sbb
lods
jge
inc
call
pop
insb
mov
in
pop
fdivl
test
loop
and
leave
out
pop
shl
jecxz
and
mov
push
sub
jmp
fs
sub
pushf
push
pop
and
push
inc
shrb
lea
sbb
sar
or
sbb
inc
add
test
push
inc
xchg
sbb
lods
xor
test
scas
bound
pop
adc
xor
sub
jmp
mov
sbb
ja
test
shll
cld
mov
jp
gs
mov
fucomi
fnstcw
lods
mov
mov
mov
cltd
imul
or
mov
hlt
imul
xchg
cmc
jno
mov
xchg
addr16
mov
lods
sub
and
stos
sub
push
div
jmp
xchg
bound
lock
nop
and
dec
xchg
xchg
in
and
imul
rcl
pop
inc
mov
mov
in
jbe
xchg
mov
lahf
ss
test
and
mov
pusha
dec
add
adc
push
mov
repnz
cmc
xchg
addr16
fdivrs
jg
stos
nop
adc
mov
int3
xchg
lds
push
sub
mov
notb
arpl
scas
pop
shlb
es
xchg
xchg
test
or
pushf
fistpll
test
aam
jb
xchg
add
fwait
sbb
hlt
out
dec
pop
das
inc
je
lret
jmp
and
aas
jge
xchg
push
into
mov
xchg
mov
in
add
mov
xor
xchg
cltd
sub
out
lods
dec
jnp
and
sub
mov
and
sub
fldenv
jp
add
lods
lret
or
in
or
rorb
xchg
divl
cmpl
lods
repnz
lock
adc
dec
push
mov
int3
xchg
jge
mov
xlat
sbb
mov
mov
mov
sub
bound
mulb
rcrl
test
in
xor
or
inc
hlt
pushf
sbb
sub
mov
mov
ds
mov
in
sub
mov
mov
test
ret
cmp
pop
scas
out
testl
stos
or
adc
adc
and
fs
dec
into
bound
push
lock
xchg
in
dec
push
pop
mov
mov
fstl
mov
mov
das
push
lcall
mov
sub
xchg
sbb
add
sub
les
xchg
add
ja
jge
in
pop
nop
push
push
fdivrp
inc
mov
mov
adc
mov
out
mov
cltd
add
and
sub
hlt
movsb
arpl
hlt
sbb
rcll
dec
jne
jae
mov
repz
std
hlt
jne
xor
mov
stc
mov
pusha
out
mov
jbe
ljmp
out
fists
rorb
xchg
stos
dec
insb
clc
jge
mov
cmc
fmuls
mov
inc
mov
jo
dec
jle
pop
iret
mov
or
shlb
arpl
dec
scas
mov
add
push
loop
pusha
insb
sub
add
js
sbb
cmc
sbb
cmp
jb
leave
aam
push
call
pop
sbb
mov
cmpsl
inc
pushw
push
cs
and
sbb
cmc
lock
dec
dec
pop
faddl
scas
pusha
aas
pop
push
sbbb
cmpsl
mov
xchg
mov
clc
sub
and
or
jl
adc
lahf
xchg
mov
inc
rol
filds
mov
in
loop
into
jp
lods
je
gs
js
adc
push
sub
insl
cltd
iret
cmp
xchg
push
test
insl
inc
push
cmpsb
dec
lcall
or
sahf
fldt
mov
push
xchg
cli
jl
mov
mov
adc
push
shrl
or
cmp
cmp
jecxz
lea
cmpsb
pop
les
sti
mov
cmp
out
dec
push
sbb
dec
std
xorb
mov
mov
mov
mov
or
mov
jle
testb
mov
test
xchg
cmp
mov
popa
or
push
ret
dec
and
outsl
test
fldl
repnz
aas
sub
iret
mov
in
nop
or
jle
dec
xor
popa
shrl
push
mov
cmpb
add
mov
or
fwait
jo
push
ss
pop
fwait
xchg
add
mov
ja
mov
mov
add
mov
inc
andl
sahf
les
xchg
mov
dec
sub
aad
movsb
les
filds
js
pop
roll
adc
add
cmp
xor
and
inc
sub
jecxz
mov
into
mov
data16
add
sub
outsl
mov
sarl
mov
lock
add
jb
mov
shll
mov
xchg
push
int3
mov
out
aas
dec
sbb
fucomi
int3
sbb
fnsave
fs
push
scas
dec
mov
stos
cli
hlt
mov
out
add
inc
leave
mov
inc
cli
mov
sub
xor
inc
stos
sbb
stos
and
xchg
iret
pop
int
and
push
or
shlb
imul
lods
dec
xchg
jno
call
xchg
loop
xchg
mov
cmp
mov
push
cmpb
rorb
rclb
inc
pop
or
cmp
test
mov
push
xchg
loop
push
jl
mov
xchg
xor
dec
leave
pop
xor
enter
sub
aam
flds
and
xchg
arpl
xor
cs
add
subb
gs
lret
clc
sbb
into
add
adc
dec
andl
jmp
out
insl
xchg
rclb
jae
repnz
flds
imul
imul
mov
jmp
gs
sbb
push
push
mov
cmpb
cld
inc
je
jg
xchg
movsb
pop
cmpsb
sbb
loop
test
pop
xchg
sarl
pop
roll
test
pop
dec
mov
mov
push
pop
sub
les
ss
loopne
into
es
jmp
cwtl
xlat
iret
lret
xlat
lahf
or
dec
jmp
mov
cmp
push
enter
frstor
sbbb
push
mov
inc
incl
dec
or
adc
xchg
dec
mov
pusha
jp
repnz
cmp
stc
sub
sbb
jno
icebp
cld
int
jg
data16
jae
jne
ljmp
enter
stos
into
cmp
in
pop
inc
push
pop
pop
out
movsb
xor
mov
mov
jecxz
in
add
lock
lret
jmp
or
mov
in
in
testl
ret
and
xchg
mov
repz
addr16
cmpsl
sbbl
repnz
sbb
lret
lcall
sub
imul
push
popa
repz
pop
or
xchg
dec
pop
xor
sbb
fwait
mov
test
mov
xchg
arpl
adc
mov
int
pop
cmp
dec
mov
and
mov
test
jae,pt
mov
xchg
flds
std
mov
mov
mov
jae
sub
cli
lcall
cmpsb
mov
filds
daa
out
jns
ret
fnsave
mov
loop
lret
es
shll
inc
mov
aas
in
mov
dec
imul
roll
test
popf
cltd
ja
xchg
cmpsb
mov
or
mov
sub
movb
mov
mov
push
cmp
add
call
push
pop
imul
inc
rorl
leave
or
pause
dec
mov
adc
mov
pop
ret
test
xor
add
xchg
mov
mov
pusha
xchg
lcall
xchg
jae
inc
out
mov
push
scas
popf
push
dec
and
scas
imulb
jae
jge
inc
cwtl
fs
sarb
in
mov
test
or
mov
pop
fs
lahf
cmp
aad
into
inc
cld
adc
lock
mov
sub
jmp
mov
filds
aaa
add
lahf
sub
xchg
sbb
inc
xchg
jl
mov
orb
and
jb
add
ds
pop
pop
mov
sub
inc
loope
or
pop
addr16
pop
dec
out
ja
out
decb
icebp
cwtl
pushf
movsb
das
jmp
fcoms
leave
daa
add
fisubrl
and
jle
xbegin
fiaddl
faddl
ror
jnp
cmp
mov
add
sti
aad
mov
or
push
enter
sbb
push
dec
sbb
mov
cli
fsubs
stos
fstl
in
and
add
mov
and
lods
iret
sbbl
sbb
std
enter
jl
std
lret
inc
add
push
jnp
xchg
lret
arpl
and
lcall
push
mov
cmp
pop
negb
popa
sahf
rcll
stos
push
lock
out
jbe
fcompl
fwait
mov
inc
mov
test
cltd
sbb
sti
lods
inc
fmuls
xchg
sbb
fldt
xchg
mov
adc
icebp
fidivrl
ljmp
xchg
xchg
imul
mov
inc
cmp
pop
iret
sbb
push
aam
push
cmp
mov
pop
cmpsb
xchg
mov
gs
push
xchg
ret
add
fcomps
shrb
cmpsl
push
add
dec
adc
outsb
pop
das
ja
out
add
mov
jge
mov
dec
mov
add
cmp
xchg
test
push
call
sti
out
mov
xchg
push
orb
loope
pop
rcl
cmp
mov
ret
pop
adc
and
push
and
cmp
call
pop
repnz
xchg
push
nop
mov
ljmp
mov
pop
dec
push
out
pop
push
xchg
pop
cltd
scas
lret
cli
inc
push
shll
lock
div
inc
and
dec
jg
or
sbb
ljmp
jnp
test
or
adc
pushf
fimuls
inc
int
scas
and
xor
pop
xor
pop
insb
add
jmp
jae
mov
test
stc
add
into
stos
sbb
ret
inc
js
sub
cmp
add
stos
inc
adc
jg
pushf
xor
dec
cmp
inc
inc
nop
fbld
xor
ljmp
cmpsl
imul
cltd
movb
or
cmp
push
pop
mov
outsl
mov
mov
pushf
lret
jge
mov
cmpsl
sbb
ss
fxch
outsl
sbb
adc
cmp
shl
lcall
xchg
mov
into
push
or
push
hlt
jo
inc
jge
lcall
add
sub
sbb
sub
dec
push
into
cmpl
test
jg
adc
add
mov
rcll
mov
mov
sub
push
cli
push
pop
adc
mov
xchg
in
mov
dec
mov
aad
jle
rcl
sti
push
push
ret
push
inc
repnz
fwait
xor
lods
dec
jae
sub
inc
jnp
jp
sub
test
ror
push
je
lea
sub
int
push
pop
fistpl
fwait
adc
pop
adc
jns
xor
test
cmp
sbb
scas
pop
fucom
inc
inc
mov
rcrb
push
jle
cmpsl
andl
push
sarl
adcb
mov
shlb
je
dec
push
imul
lock
icebp
mov
inc
inc
mov
mov
push
lea
push
rcrb
dec
mov
sub
mov
js
sahf
ja
out
xchg
or
mov
pop
jns
xchg
pop
arpl
fnstsw
cld
mov
out
fimuls
insl
flds
lock
sub
les
imul
and
shll
mov
loopne
jge
add
push
sbb
push
mov
pop
jns
push
dec
mov
test
adc
popf
mov
mov
or
sbb
jnp
push
mov
sbb
std
jecxz
add
out
add
je
push
push
in
out
xor
pusha
and
imul
mov
sub
fisttps
xor
jmp
pop
fstpt
nop
rorl
adc
pop
mov
dec
add
sahf
fcmove
sub
mov
outsb
jno
mov
sub
insl
push
insb
and
in
sub
jbe
cvttps2pi
adc
or
xor
push
cmp
pop
dec
cmp
pop
and
sub
outsl
pop
aam
sub
and
push
cltd
testl
retw
mov
add
lods
xchg
push
pop
inc
jns
jb
or
mov
mov
cltd
sbb
push
push
or
sub
ffree
xchg
adc
push
xor
dec
jbe
mov
cmp
mov
jne
mov
fisttpl
pop
add
xor
jg
scas
stos
nop
fwait
arpl
cmpsl
cmp
in
mov
inc
sub
es
pop
out
jge
adc
jp
lock
test
pop
loope
cli
xchg
addr16
and
adc
stos
aad
out
pusha
adc
xorb
xor
mov
push
add
cwtl
popa
dec
and
sub
orl
punpckhdq
push
mov
es
jae
inc
xor
lds
adc
in
cmp
lret
andb
sbb
mov
mov
xor
imul
xchg
mov
pop
dec
pop
cmc
in
shlb
jmp
sub
in
cli
cmp
push
sahf
out
lds
inc
sar
adc
nop
pop
cmp
sarl
leave
xchg
aas
sahf
adc
mov
loopne
cld
adc
pop
negl
inc
mov
dec
hlt
push
pop
arpl
or
fcmovbe
sbb
or
jno
push
pop
mov
lret
xchg
jg
fildll
jno
push
clc
mov
sbb
sub
xor
mov
add
call
xchg
lahf
es
fdivrp
jnp
in
mov
fnsave
das
and
xchg
and
inc
and
lcall
push
xor
test
push
xchg
stos
jle
mov
lcall
popf
jnp
cmp
mov
add
fcmovne
stc
adc
push
pop
arpl
repz
out
aaa
loop
lcall
pop
mov
enter
pop
xor
mov
cmp
adc
pusha
mov
jecxz
sbb
dec
add
jne
jecxz
pushf
outsb
push
outsb
cmc
xor
jecxz
adc
arpl
dec
mov
mov
mov
rclb
push
adc
cs
add
xor
lcall
cmp
xor
mov
mov
mov
nop
xor
push
insb
rclb
xchg
mov
test
push
xchg
ret
mov
repnz
xchg
inc
or
in
xchg
xchg
mov
sbb
pop
adc
in
adc
mov
dec
xchg
mov
cmp
out
aas
js
movsb
out
jnp
push
into
movsl
sbb
mov
test
out
sarb
lods
test
imul
sub
aaa
pop
jno
movsb
movsl
add
jg
orb
ja
add
xchg
imul
mov
popa
idivl
and
sarl
sarb
cmpsl
loop
inc
jae
push
hlt
ljmp
dec
cmp
xchg
sbb
les
mov
jge
or
push
mov
inc
sbb
addl
xchg
xor
imul
pminub
in
sti
cmp
dec
lahf
mov
mov
jecxz
xchg
push
cmpl
pusha
out
jne
xchg
xor
fcomps
cmp
nop
mov
data16
add
push
pop
rolb
dec
cwtl
lret
mov
adc
and
shrl
and
cltd
and
push
mov
mov
ja
enter
xchg
fistpl
mov
and
aad
push
mov
dec
mov
dec
push
fcompl
int3
iret
adc
test
shlb
arpl
rcll
mov
sub
push
daa
cmpsl
inc
roll
shl
cltd
inc
jb
iretw
and
and
stos
call
rcl
adc
movsb
hlt
nop
rorb
lea
daa
pop
and
and
pop
mov
mull
adcl
lcall
decb
enter
scas
push
int
pop
arpl
call
sub
les
ffreep
out
scas
les
cmp
mov
fmul
clc
jns
jp
fwait
inc
aad
sti
or
push
xchg
add
mov
pop
jp
into
push
xchg
cmp
pop
cmp
xchg
jecxz
pushf
bound
xchg
addr16
lea
mov
shll
push
mov
jle
xchg
dec
sub
mov
cmc
or
mov
adcb
jo
nop
out
push
insl
dec
lea
and
scas
push
pop
sahf
push
aam
jnp
mov
dec
decb
imul
lods
or
or
push
mov
push
mov
sbb
xor
in
lahf
sbb
loop
aaa
add
mov
jecxz
fnstenv
fsubr
int3
jae
addr16
incl
les
mov
stos
arpl
add
daa
jecxz
fs
or
sub
sub
movsb
add
outsl
or
inc
mov
popf
mov
add
add
xchg
or
or
call
sub
andl
lods
sub
mov
pop
sbb
xor
mov
arpl
std
mov
xchg
test
xorl
cli
in
rclb
sub
lret
jns
add
inc
or
int
sbb
pop
inc
enter
pop
jb
hlt
sub
jge
lods
pop
and
push
aam
cld
pushf
fnstenv
hlt
popa
cwtl
mov
and
pushf
inc
inc
add
mov
push
aam
cwtl
inc
jbe
jbe
ds
mov
out
adc
mov
add
je
mov
xor
push
rorl
call
xchg
js
mov
clc
push
pop
negl
push
lcall
lods
jle
loopne
pop
pop
and
lahf
les
and
movsl
push
cmp
mov
call
shr
in
in
cmc
mov
shll
enter
ss
add
mov
cli
in
dec
std
inc
mov
sub
int
sahf
xor
jp
test
push
dec
push
aad
lds
fs
adc
sti
shlb
out
mov
lds
push
adc
inc
xlat
movsb
or
cmp
mov
push
int3
incb
mov
cmpsl
ret
add
sub
loopne
test
in
jbe
xor
and
cmpsb
scas
jnp
popa
sarb
jno
mov
ret
pop
inc
cmp
xlat
cs
dec
push
repnz
dec
in
push
or
and
pushf
lock
xchg
xchg
js
jge
sbb
adc
loopne
iret
adc
arpl
test
dec
push
lcall
lock
sub
dec
push
inc
mov
mov
dec
xchg
dec
lahf
xor
xlat
dec
sbb
movsl
lock
andb
icebp
mov
mov
mov
cmp
cmp
test
cmp
clc
sub
or
push
cmp
or
cmc
adc
loop
dec
cmp
add
out
shll
cmc
add
inc
loopne
or
hlt
or
mov
fiadds
sbb
insb
lods
xchg
or
push
cmp
fwait
push
es
fwait
jmp
loopne
push
repnz
mov
fsubl
shll
mov
mov
inc
not
mov
jne
xchg
xorl
pusha
jne
xchg
clc
push
fwait
movsb
repnz
leave
cmp
fistpl
cltd
and
add
xor
jne
cli
jb
inc
aaa
pop
and
inc
mov
dec
xor
aam
flds
movsb
fs
add
gs
nop
es
loopne
xor
sti
test
jp
nop
cli
sub
adc
adc
stos
test
pshufw
inc
jg
cmpsb
icebp
out
outsl
cltd
sbb
xchg
sti
adcb
mov
pop
xchg
repnz
sbb
add
test
mov
xchg
imul
repnz
push
xchg
call
in
ss
scas
cs
xor
pop
aas
sahf
lea
out
icebp
insl
out
xchg
xor
and
pusha
leave
sti
xor
test
add
jmp
loopne
fidivrl
or
mulb
sbb
lcall
shrd
cmpsb
nop
or
sub
lahf
or
mov
data16
mov
sbb
lret
sub
sahf
xor
xchg
cmp
xor
cmp
cmp
adc
mov
xchg
loopne
inc
xor
sub
sbb
stos
sbb
rcll
cmp
test
sub
in
mov
add
push
loopne
mov
dec
sub
xor
stos
test
jl
hlt
dec
xor
mov
mov
push
adc
dec
test
pop
daa
hlt
jge
gs
into
fcomps
das
sub
repnz
cmpsb
jb
mov
addr16
adc
xor
cmp
jp
sbb
lret
daa
lcall
into
push
test
imul
dec
cmpsl
cld
mov
push
lods
cmp
xorl
mov
sub
inc
out
cmp
popa
mov
xrelease
sbb
pop
pop
jl
mul
js
cwtl
push
jns
jmp
or
sbb
add
stc
sub
cmp
fwait
pop
ja
pop
xor
idivl
rclb
adc
std
mov
mov
sub
jnp
adc
adc
sub
in
ss
out
add
movsl
sbb
aas
imul
push
add
jge
jmp
jne
loopne
data16
ja
iret
and
leave
xchg
add
lcall
sbb
sbb
in
sub
repz
test
push
sub
dec
xor
hlt
lret
dec
shlb
pop
push
cmp
lods
cmp
test
jl
xor
sbb
orb
inc
outsl
mov
xchg
inc
add
std
xor
mov
shlb
pop
inc
stos
inc
or
push
sti
les
jo
push
dec
pushf
test
ret
in
xor
dec
inc
or
ss
fidivl
or
and
and
mov
push
ja
aas
adc
jbe
mov
jae
das
fsts
push
lds
dec
imul
lods
mov
add
aam
out
dec
xchg
sbb
mov
pop
in
movb
fbld
or
mov
adc
shlb
sub
repz
cmp
adc
mov
mov
out
fwait
lds
loope
fdivl
sbb
loopne
push
nop
xor
std
outsb
cmpsb
jg
push
in
jns
out
pop
push
loopne
mov
and
test
stos
sub
xchg
pop
pusha
ja
jg
add
sub
int3
data16
push
push
push
fisubrl
nop
enter
dec
mov
push
or
or
mov
js
jns
lret
popa
std
orl
cld
lcall
and
rcrb
int
pop
xchg
insl
into
xor
fisubs
xchg
sub
mov
sbb
push
pop
mov
adc
sub
pop
lods
push
jg
mov
mov
mov
adc
mov
int
dec
cltd
and
cwtl
cmc
in
xchg
mov
lods
in
clc
push
mull
mov
and
lahf
popa
iret
or
pop
sub
out
push
adc
arpl
adc
test
pop
or
cmp
add
xchg
xchg
mov
pop
inc
notl
fists
sti
pop
xchg
dec
inc
insb
and
push
lahf
enter
jnp
sbb
fdivr
rorl
adc
add
clc
mov
adc
int3
jns
xlat
sbb
mov
in
dec
ja
mov
enter
shlb
daa
add
adc
rorb
mov
out
push
repz
cmp
out
roll
ret
xchg
fcomps
push
push
and
cs
or
and
out
and
mov
xchg
ret
daa
adc
and
sti
push
loopne
stos
mov
inc
push
push
xchg
sub
mov
test
rorl
add
in
dec
adc
ret
inc
jge
mov
sti
mov
insl
int3
or
ficomps
mov
and
push
xor
xchg
push
xor
mov
pop
fidivrs
addr16
push
adc
jb
or
and
pop
rorb
sti
popf
leave
test
sub
out
xchg
sbb
lcall
andb
fists
dec
xor
outsl
mov
sub
cmp
rcl
push
mov
adc
cmp
jmp
imul
lret
add
push
pcmpeqd
psadbw
mov
lea
or
int
inc
xor
mov
fdivs
lahf
dec
push
jle
pushl
xor
mov
outsl
stc
sbb
xchg
cmpb
mov
sub
mov
daa
push
outsl
dec
inc
sub
push
movsl
or
sbb
jp
dec
mov
inc
or
aas
mov
stos
jno
daa
jp
in
mov
mov
push
ds
xchg
notl
jl
outsb
ret
ret
mov
rclb
insb
mov
stc
shrb
ds
lret
aam
adc
imul
stos
dec
xlat
pop
mov
and
sbb
incb
push
or
mov
jmp
mov
dec
imul
dec
mov
sbb
scas
jnp
lods
xor
pop
lods
mov
jb
sbb
cmc
ret
mov
xchg
mov
adc
adc
pop
pop
notb
add
inc
icebp
test
ret
stc
pusha
ret
xor
mov
sub
sub
mov
bound
aad
stc
sub
or
stos
shlb
xor
bound
jbe
cmp
ljmp
into
push
pop
jne
mov
outsl
inc
push
lock
movl
dec
js
sbb
mov
or
rcrb
fs
pop
lds
or
xor
mov
xchg
rorb
popf
or
sahf
in
pushf
xchg
or
out
pop
jle
adc
xchg
outsb
and
mov
sub
arpl
out
fucomp
lods
dec
push
or
pop
or
sub
jb
mov
sbb
mov
mov
fdivp
jnp
cli
ljmp
aas
imul
pop
jne
leave
das
mov
push
sbb
pop
dec
daa
in
xchg
mov
test
and
push
cltd
cmp
and
call
dec
add
inc
movsl
lock
dec
push
jle
fists
out
cs
in
dec
pop
lods
fs
and
xchg
cli
sbb
inc
jbe
adc
shll
and
sub
adcb
icebp
gs
sbb
pusha
leave
js
adc
faddp
rorl
test
add
xchg
mov
lock
test
mov
dec
cltd
mov
cmp
adc
mov
shl
sbb
xlat
inc
xchg
into
into
outsl
aas
rorb
in
fs
push
hlt
notb
das
cmpsl
repnz
rolb
stos
xlat
pop
and
out
push
push
mov
scas
mov
in
sbb
ficompl
imul
mov
lods
in
andl
or
test
jge
jecxz
inc
ljmp
jns
scas
lock
faddl
xchg
and
outsl
mov
stc
inc
sub
loop
add
cmpl
push
enter
repnz
and
aas
lods
andl
lret
push
cmp
cmp
imul
or
xchg
in
loope
jbe
movsl
push
adc
roll
dec
mov
je
jae
imul
cmp
fwait
sarl
mov
push
jmp
popa
stos
sbb
movsb
es
jp
or
xchg
push
out
jp
mov
push
push
or
sub
add
mov
adc
push
cmc
testl
ret
fsubl
cmpb
nop
mov
mov
adc
sub
das
pop
mov
aad
inc
dec
ret
dec
rolb
xchg
push
popf
ljmp
int
jnp
mov
out
mov
imull
xchg
shrb
push
add
inc
pop
sbb
sbb
in
jge
push
cmp
aad
das
jno,pt
mov
lahf
dec
pop
pop
mov
push
imul
mov
push
mov
das
andb
push
out
lods
jne
insl
xchg
jne
fs
inc
inc
cmp
jmp
shll
leave
shlb
xor
aam
cs
xor
adc
movsb
insb
push
xor
jg
adc
and
mov
iret
sub
mov
lret
aad
mov
xchg
loopne
in
mov
pop
sahf
and
mov
or
mov
addr16
addr16
xor
pop
adc
sbb
ss
push
data16
inc
push
setns
js
mov
and
cmpsb
sti
loop
subl
cmp
sbb
scas
out
clc
mov
dec
xchg
fidivrs
fcom
data16
loop
sub
popf
pop
jle
ret
cmp
cs
das
inc
mov
in
cmp
test
sbb
mov
and
add
push
das
cmp
les
and
and
pusha
xchg
mov
sub
jno
mov
mov
inc
pop
mov
cwtl
cmp
xchg
test
add
xchg
in
cmp
xchg
lcall
rcl
rcrl
and
fcoml
cs
fsubrs
mov
sub
push
mov
or
push
mov
std
outsb
lcall
popf
loopne
insl
pop
jns
decl
imul
jbe
roll
xchg
push
push
pop
push
lock
xchg
das
dec
aad
and
push
out
test
rolb
mov
bound
lret
ljmp
push
ljmp
mov
jecxz
mov
std
sub
in
outsb
xchg
inc
sbb
stos
sub
shlb
inc
push
daa
je
or
loop
xlat
out
stc
push
xor
das
sbb
lret
test
shll
or
ret
call
cmp
inc
je
mov
imul
add
push
sub
pop
cltd
pop
stc
sub
mov
jne
push
dec
sub
adc
out
fildll
ret
jle
and
data16
pop
inc
mov
ja
jge
daa
xchg
popf
stos
fcomip
xchg
sahf
jne
pop
cltd
push
pop
fnstsw
xor
test
hlt
lret
out
and
sbbl
lods
scas
xchg
imul
lcall
inc
push
mov
fistps
nop
cmp
scas
pop
mov
cmp
push
mov
push
roll
mov
sbb
mov
js
test
xchg
iret
outsl
push
stos
or
xor
inc
ss
fwait
mov
sbb
inc
mov
push
rorl
test
cld
xor
inc
test
add
test
lahf
ss
jg
insl
enter
and
aaa
aas
test
stc
popa
pop
push
pop
and
lret
push
aam
dec
outsl
mov
inc
mov
ja
mov
jne
incl
sub
xchg
outsb
and
dec
dec
dec
ds
or
shlb
jmp
mov
push
mov
cmpsb
fucomi
sbb
je
fsubrs
mov
mov
repnz
ds
loopne
fiaddl
sbb
es
int3
in
mov
mov
outsb
fistps
push
cmp
dec
ss
xchg
pushf
mov
pop
out
push
inc
push
jbe
xor
mov
out
cwtl
test
adc
lds
and
add
xorl
dec
lret
ds
push
and
and
and
inc
stos
lret
cmp
mov
nop
pop
push
sbbb
jle
int3
or
jno
pop
push
arpl
addb
int
gs
mov
jae
mov
pop
outsl
outsb
sub
pop
mov
push
or
jecxz
jnp
pop
ss
push
push
dec
ret
jle
and
dec
les
mov
mov
cmp
mov
jle
pop
mov
jmp
sbb
or
lods
jnp
in
mov
sbb
fldenv
mov
movsb
testb
jmp
sub
frstor
rorb
sub
xchg
fldcw
scas
pop
adc
or
adc
into
mov
imul
sub
mov
mov
faddl
pushf
fwait
cmove
test
and
cld
fs
xor
nop
mov
repz
in
cli
xor
adc
sarb
lret
pop
aaa
pop
fs
xchg
mov
in
sub
add
push
dec
mov
std
cmpb
jae
push
and
xchg
notb
in
dec
jp
push
mov
iret
arpl
inc
scas
shrl
and
adc
xor
push
jnp
idivl
push
sbb
pop
movsl
pop
inc
pop
leave
fistpl
loopne
cmp
rorl
movsb
cmpsb
mov
aad
xor
lret
mov
cmp
popf
cmpsb
mov
cli
push
mov
les
inc
aam
lods
cs
test
xchg
shrl
dec
pop
scas
dec
or
xchg
stos
cmp
adc
testl
cmp
mov
lret
ljmp
xor
push
rol
add
mov
mov
cmp
loope
mov
cmp
out
mov
ja
testl
jg
cs
pop
adc
popa
out
xchg
sub
cmc
dec
push
enter
rclb
inc
xor
out
mov
mov
call
jge
call
addb
or
or
lcall
add
adc
lret
xchg
lcall
adc
int
ljmp
repz
bound
rcl
and
mov
sbb
lock
pop
xchg
ret
cmp
call
movsl
cmp
push
outsl
test
pop
in
addr16
mov
jae
orl
fildll
and
adc
cmp
ss
sbbl
jno
xor
jmp
mov
ds
adc
xchg
nop
aas
movsb
dec
and
push
fwait
sub
dec
dec
aaa
shrb
adc
mov
stos
outsb
and
stos
cmp
mov
pop
cmp
cmp
and
mov
roll
sub
stos
inc
les
repnz
inc
inc
mov
push
out
ror
fsincos
fdivs
mov
fildll
adc
mov
jae
loope
lods
out
int3
push
jo
sahf
jl
adc
xor
pusha
cmp
dec
in
dec
fcoms
jmp
jmp
mov
rclb
dec
stos
in
out
arpl
mov
pop
sub
jno
shll
mov
das
jne
push
repnz
jo
loop
push
ret
cmp
sub
rcll
adc
pop
stc
push
fisttpl
addr16
mov
imul
mov
inc
pop
fistps
jnp
jbe
xchg
sub
inc
nop
ds
ljmp
lds
dec
dec
lret
cmc
fs
adc
mov
mov
pop
dec
std
xor
jmp
out
mov
out
xlat
stc
cltd
sub
push
sbb
icebp
dec
andb
push
addr16
stos
or
sub
fiaddl
jbe
dec
ja
ljmp
dec
jmp
xchg
push
icebp
test
jle
arpl
popf
push
icebp
mov
stc
in
mov
aas
mov
cmp
dec
lret
push
inc
xchg
or
iret
push
mov
pop
repz
mov
sub
ret
out
in
adc
add
jp
loope
sbb
je
fimuls
mov
repnz
movsb
in
aam
rolb
out
arpl
mov
js
nop
mov
fstpl
or
cmp
data16
push
add
je
jb
lea
fucomip
ret
adc
stos
sbb
xchg
int3
rclb
jnp
imul
cltd
lret
int3
push
mov
pop
pop
cmp
sub
loopne
icebp
ficompl
or
push
and
lret
or
stc
add
into
mov
dec
jle
or
and
shl
jge
add
sub
mov
insl
jp
lock
cmp
jne
into
js
scas
inc
cmpsb
dec
mov
fcoms
cmp
out
or
pop
xlat
dec
xor
push
loopne
mov
loope
pusha
push
jg
pop
bound
out
test
out
or
fs
test
inc
lods
jmp
add
push
jecxz
lods
fcmovnbe
fsts
xchg
push
shl
int
pop
inc
sub
jno
aam
adcl
or
mov
std
push
mov
fisubs
push
scas
cwtl
imul
push
mov
js
enter
mov
sti
push
and
pop
shlb
mov
and
rclb
inc
jbe
shrb
aam
jmp
fstl
into
or
add
or
cli
jge
push
sbb
pop
inc
add
outsl
fstl
stos
push
insl
dec
lcall
xchg
fmuls
push
aam
insb
mov
jg
add
jg
mov
aad
inc
mov
cs
in
lcall
call
dec
mov
ds
xchg
mov
mov
xchg
xor
std
cmp
jne
icebp
sub
dec
push
cmp
outsb
inc
popf
movsl
lock
and
and
cmp
test
test
lret
adc
ds
stos
insl
sbb
xor
mov
mov
imul
faddl
popf
pop
insl
pop
cli
adc
in
outsb
aas
mov
mov
ss
cwtl
aas
jno
cld
fisubrs
cmp
pop
sub
sub
mov
sbb
push
jg
jle
cmp
cs
ret
xchg
imulb
inc
popl
adc
out
add
mov
fmulp
inc
out
out
arpl
and
xchg
cld
mov
and
mov
push
in
or
or
fcoml
cmpsl
pop
clc
sub
sbb
push
cmpsb
jno
fisubs
testb
rorl
sub
xor
test
aas
jo
orb
mov
movsl
adc
mov
push
mov
insb
mov
fisubs
add
scas
mov
cmpsb
dec
fstpl
dec
lahf
push
scas
mov
imul
insl
pusha
mov
cmp
jl
test
push
xor
jns
gs
stc
inc
pop
fwait
mov
les
xchg
aad
adc
lea
movsl
jge
lea
push
lret
rcll
pop
or
xor
test
cmc
mov
in
sub
fildl
jns
pushf
test
ret
jno
mov
xchg
jge
sahf
call
or
jnp
mov
imul
test
inc
mov
add
sub
pop
jb
out
adc
loope
mov
dec
aam
cltd
mov
jns
cmpl
mov
jmp
outsb
xchg
inc
lea
popa
mov
mov
push
aaa
test
push
repz
std
inc
sub
pop
dec
popa
xlat
pusha
pop
sbb
adc
sbb
and
in
xchg
cld
nop
clc
dec
ljmp
adc
jb
cmp
jae
jne
and
popf
inc
popf
test
int3
ja
cld
in
sti
add
or
mov
adc
inc
lds
adc
pop
inc
in
and
pop
scas
lret
data16
push
dec
mov
dec
in
mov
aad
xchg
lcall
jo
fimuls
rcll
jecxz
mov
je
pop
fcmovnb
dec
mov
or
mov
out
adc
insl
mov
adc
sbb
or
push
shrb
xchg
adc
sub
jno
imul
icebp
jo
dec
mov
daa
icebp
push
lods
hlt
iret
loope
stc
xor
mov
cmp
ret
int
mov
addr16
add
fisubl
cmp
dec
inc
movb
popa
add
cmp
mov
ret
sbb
sbb
hlt
into
sub
pop
mov
jb
call
xchg
ljmp
lcall
stos
jge
pop
cmp
dec
into
int
cmp
fnstsw
adc
mov
int
jge
out
fwait
pop
or
shlb
add
data16
push
outsl
dec
mov
in
faddl
add
lods
out
add
out
pop
mov
sub
cmpsb
hlt
and
jl
aad
cmp
lret
test
jo
popf
test
or
aam
xchg
sub
test
pushf
les
dec
mov
and
stos
mov
fisttpll
cs
inc
pop
push
ret
or
cmpsb
frstor
and
pop
mov
inc
pop
inc
jp
push
pop
test
or
ret
sub
dec
inc
xchg
stc
jp
ljmp
pop
xor
jnp
adc
sbb
punpcklwd
jecxz
mov
pop
mov
push
lods
and
jne
int
or
inc
mov
out
out
pop
shl
push
add
lret
adc
pop
test
cltd
jb
das
push
ret
sbb
cmc
push
or
shlb
jno
dec
out
push
loope
stos
xor
mov
push
stos
jp
xchg
in
xchg
loop
mov
cmpsb
shl
pop
loopne
rclb
test
int3
xor
in
inc
mov
inc
add
rolb
out
sahf
andl
ja
lock
mov
ljmp
imul
or
mov
shll
addr16
imul
pop
pop
nop
popf
pushf
jae
dec
mov
int
nop
pop
pop
cli
jl
mov
mov
mov
pop
pop
lahf
cmp
xchg
loope
add
inc
je
ss
push
call
fwait
pop
mov
sahf
push
xor
addr16
or
addl
inc
inc
dec
hlt
adc
pop
mov
fcmovu
bound
test
push
jl
inc
push
int
fldt
aad
pop
xor
insl
stc
push
pop
into
sbb
push
xlat
into
mov
adc
movsl
aaa
jnp
cmp
pop
fstpt
dec
add
xchg
cmc
aam
std
cmp
pop
fdivrl
pop
flds
cmp
pop
and
mov
cs
jl
add
push
lret
cmpsb
fdivrs
inc
sbb
bound
loop
mov
sbb
cs
cmp
movsl
and
outsl
sub
inc
imul
pop
cli
sahf
add
es
mov
mov
or
xchg
addr16
xor
and
dec
mov
loop
push
xchg
shll
jns
push
mov
push
inc
or
ljmp
xor
cmp
pop
pusha
mov
scas
adc
push
mov
sub
sub
mov
mov
lods
in
inc
sti
lods
das
add
jnp
fcoml
dec
pop
int
add
mov
dec
pop
adc
movsb
mov
insl
icebp
sub
ret
lret
fs
sub
mov
paddb
mov
push
push
andb
inc
in
out
inc
dec
or
push
mov
scas
push
jno
std
data16
adc
fcmovnu
mov
mov
loopne
adc
mov
inc
test
fdivrp
jecxz
or
bound
leavew
cs
stos
mov
lret
das
lret
in
mov
loope
fwait
loope
fcom
inc
and
xchg
xchg
in
decl
or
mov
jmp
mov
add
int3
jbe
ss
lods
iret
loopne
test
push
adc
das
mov
xchg
pop
or
xchg
xchg
sub
rcl
pusha
jmp
fcmovne
mov
push
addr16
sub
test
pop
jb
push
loope
mov
jnp
std
pop
add
clc
icebp
aad
adc
icebp
xor
lds
popf
pop
out
push
scas
and
sbb
data16
sbb
stc
clc
lret
and
gs
adc
sub
shr
xchg
inc
cmpsl
or
push
dec
in
mov
inc
out
xor
lret
xchg
sbb
movsb
jg
scas
push
or
mov
test
imul
fwait
hlt
ret
cmp
or
repnz
test
in
and
das
mov
push
adc
xchg
jp
sub
xor
cmpsb
scas
mov
lock
xor
test
xor
dec
cmp
sub
das
mov
imul
out
popa
pop
mov
in
adc
aam
dec
testl
cmp
dec
loopne
fldcw
adc
cmp
mov
add
pop
and
outsb
pop
outsl
jg
popa
jl
js
mov
push
xchg
test
mov
mov
cmp
dec
or
sub
jecxz
or
inc
pop
ret
fimull
fildll
jmp
jg
mov
add
or
or
jnp
lcall
pop
repnz
jb
test
mov
out
mov
inc
jle
stos
sbb
xchg
inc
ds
fstp
xor
cmpsl
fs
adc
fdivrl
dec
es
outsb
leave
cmp
out
cmp
dec
mov
add
or
mov
sbb
push
hlt
rolb
dec
mov
or
adcl
mul
into
sub
outsb
dec
cmpb
ljmp
ljmp
mov
push
aad
es
and
pextrw
push
push
orb
mov
push
cmc
xchg
jno
cld
jns
stos
pop
hlt
iret
mov
push
pop
sti
lcall
jl
pop
jg
es
loopne
cmp
fimull
mov
jae
xchg
fcmovnu
xor
sub
pop
adc
inc
cs
arpl
sub
pop
cwtl
cmp
rcl
fistl
fisttps
ficompl
add
jae
idivl
xor
pushf
and
stos
inc
idivl
lods
iret
fistpl
push
lock
jp
xchg
mov
cwtl
and
fidivrs
or
xchg
std
ds
pusha
mov
jns
adc
imul
cmp
sub
or
loopne
adc
pusha
and
push
push
lahf
mov
inc
and
push
mov
push
push
je
pop
repnz
cmc
je
sub
adc
or
inc
mov
jge
jne
sbb
sub
mov
xchg
or
xchg
or
lcall
pusha
arpl
and
add
cmp
cmc
mov
mov
les
dec
test
xchg
sub
or
insb
scas
push
xchg
jl
lds
mov
popf
sti
popf
jl
pop
cwtl
fwait
jp
or
add
mov
jle
jl
andb
int
mov
add
out
mov
test
inc
movsl
and
ficompl
daa
and
arpl
pop
fldenv
jb
jle
lock
xchg
push
cmp
jle
dec
push
loopne
xchg
and
adcl
sub
test
shlb
jo
mov
aas
inc
sub
inc
std
es
dec
jns
test
inc
pop
mov
aas
pop
and
dec
in
ds
and
add
jnp
or
repnz
aas
mov
test
or
loope
mov
or
mov
fwait
test
sbb
pusha
insb
adc
sub
bound
movsb
pushf
clc
xor
inc
insl
hlt
es
push
fwait
xchg
loope
icebp
scas
push
inc
shrl
fwait
outsb
sarl
cmp
push
dec
ficompl
or
mov
sbb
and
rcrl
dec
stos
clc
jo
aas
daa
insl
xchg
inc
jo
lret
stos
cmpsb
sbb
cmp
push
and
dec
or
lahf
out
sub
imul
xorl
insb
or
xchg
sbb
popf
mov
sub
or
xor
mov
mov
call
clc
cmp
je
fnstsw
inc
add
icebp
stos
dec
mov
jbe
mov
xchg
test
aam
mov
inc
sbb
sbb
mov
ret
push
xor
stc
movsl
sub
inc
push
dec
jnp
lock
loopne
xchg
inc
iret
inc
les
aam
xchg
mov
and
ss
mov
out
cmp
cmp
fs
shlb
enter
or
insb
mov
jne
js
xor
fdivrs
cmc
unpckhps
rolb
dec
arpl
add
dec
push
jge
inc
mov
jl
lcall
xor
stos
enter
inc
fsts
push
enter
cmp
into
setne
aaa
push
iret
add
xchg
andl
pop
add
adc
xor
ret
ljmp
mov
jmp
pop
lods
das
xor
scas
mov
decl
add
push
decb
sbb
sub
add
jg
cmp
add
pop
fs
mov
pop
dec
xchg
jo
out
add
jnp
shlb
pop
orl
or
scas
notb
jmp
lret
sbb
jnp
jbe
int3
loop
shll
jno
test
int
mov
cmpsl
dec
repnz
outsb
inc
insb
xchg
mov
cli
jge
call
in
mov
pop
push
addl
sbb
cmpsb
movsb
push
sub
inc
push
int3
mov
mov
mov
arpl
outsl
mov
add
data16
xchg
inc
insl
flds
fwait
stos
ficomps
mov
add
jmp
dec
inc
ja
nop
insb
xor
lret
push
mov
inc
lods
out
lds
aam
adc
filds
rcll
les
xor
out
fyl2xp1
fisubl
push
loope
imul
mov
lock
dec
inc
push
ret
fs
movsb
in
sbb
repz
sbb
mov
fsubs
rcll
dec
test
add
inc
sbb
cmc
jp
dec
push
test
out
mov
xor
imul
adc
cmp
lods
mov
outsb
cmc
int3
int
jb
cwtl
lods
js
cmp
out
lock
jecxz
jmp
jns
dec
pop
mov
in
cmp
loope
pop
mov
dec
adc
ret
lcall
push
mov
mov
js
sbb
movsl
mov
xchg
pop
daa
call
mov
mov
negb
mov
jle
cltd
and
aas
pusha
mov
mov
jbe
sub
dec
mov
hlt
or
pop
xor
push
out
xor
cmp
lods
xor
js
lods
aad
outsl
pop
add
xchg
jle
aad
setne
in
out
adc
leave
in
xchg
pop
mov
mov
repnz
xlat
lcall
cs
pop
cmpsb
dec
mov
sub
add
jns
vphaddubq
lods
test
popa
push
and
push
adc
and
mov
push
sub
pop
sar
mov
ficoml
lcall
push
inc
adc
movl
push
dec
stc
pop
jg
sbb
movsb
xor
inc
lret
insl
sub
popf
sub
xor
test
xor
or
xor
iret
xchg
cmovs
loop
mov
repz
into
addr16
lcall
out
lret
rol
adc
data16
fldenv
xchg
outsb
loope
pop
fs
in
sub
mov
insl
out
dec
push
mov
add
push
inc
jae
inc
rol
push
ljmp
jl
int3
scas
bound
daa
jmp
dec
xchg
cs
js
adc
sbb
pop
mov
xchg
shrl
mov
int
loope
pop
in
out
cmp
fisubs
pop
mov
int
mov
fidivl
pusha
pop
xchg
sbb
into
pop
or
mov
dec
or
sti
pop
clc
pop
sbb
scas
jno
sbb
lcall
repz
out
sub
cmpsb
xlat
jmp
arpl
jns
in
mov
orl
and
das
sub
es
in
and
xlat
jbe
pop
jl
pop
or
repz
mov
in
cmp
mov
sahf
xor
loopne
stc
fisubrl
inc
popf
lretw
fs
std
inc
int3
jge
inc
jno
shr
pop
decl
xchg
add
mov
ljmp
ret
mov
cmpsl
jp
mov
cwtl
arpl
push
mov
pusha
test
cmp
push
add
test
sub
push
inc
call
mov
ret
dec
mov
mov
and
cmp
mov
lcall
mov
jae
loopne
int3
push
shll
add
lock
jge
mov
pop
cmp
pop
mov
cltd
cld
push
add
cmp
push
out
scas
mov
les
pop
imul
sbb
xchg
push
ljmp
inc
mov
push
sub
lret
adc
cmpsb
mov
stos
mov
out
push
mov
in
rcl
mov
out
dec
mov
and
pop
mov
repz
xchg
inc
push
push
pop
mov
in
xor
cmp
mov
fists
add
inc
loopne
jmp
adc
inc
mov
sub
mov
inc
addr16
repnz
stos
inc
mov
loope
cmpsl
mov
movsl
jge
sub
or
adc
pop
icebp
inc
jnp
inc
jae
ljmp
xchg
or
jb
pop
mov
pushf
and
movsb
int3
cmp
pop
or
in
fwait
dec
iret
mov
test
push
cmp
push
jno
stc
jb
bound
mov
mov
pop
xchg
bnd
fistpll
mov
jno
inc
sub
test
dec
insb
fisubrs
sbb
sub
jne
mov
jo
jnp
cmp
dec
bound
or
rcrl
mov
movsb
jmp
mov
int3
out
test
fwait
jle
bound
pop
cwtl
test
shlb
dec
test
push
lds
roll
push
cmp
xor
mov
pop
xor
cmp
andb
sub
subl
addr16
gs
es
movsb
push
popa
xchg
mov
es
loop
sbb
xor
mov
daa
lock
mov
add
fdivs
pusha
idivl
lcall
sahf
cmp
addr16
inc
lahf
mov
lock
stc
push
jp
push
orl
sti
dec
sbb
jae
xchg
aad
les
cmp
imul
imul
lret
lea
pop
lods
sarl
adc
mov
sbb
push
or
jp
jo
add
mov
rcrl
test
jp
popa
scas
jecxz
sub
test
push
mov
jne
sbb
lock
add
pop
out
push
jle
lock
loop
pop
jle
sub
fistpll
gs
movsb
or
out
jb
ret
fwait
div
test
sbb
fstpl
pop
stc
lods
cmpsb
cltd
and
mov
fimull
push
sbb
ret
pop
fcmove
out
rorl
mov
dec
inc
jo
mov
add
popa
sbb
bound
xchg
jo
aas
mov
ret
cli
mov
dec
jb
ret
aam
xchg
scas
adc
xchg
mov
jg
jg
mov
cmp
jbe
push
cwtl
inc
dec
fdivrl
adc
imul
cmp
in
movsb
cmpsb
test
inc
sarl
cs
mov
addr16
sub
mov
cs
jo
lahf
icebp
ja
mov
inc
cmp
sbb
mov
sbb
pop
jbe
inc
sub
dec
jbe
xor
loope
xchg
out
push
xor
xchg
repnz
push
arpl
or
push
lock
sbb
ret
mov
cmp
repz
das
or
jp
fnstenv
xor
dec
insb
mov
test
in
fcomps
test
inc
jno
xor
insl
pushf
jecxz
mov
int3
pop
xor
shr
jp
sub
xchg
push
inc
pop
test
jae
mov
pop
shl
test
jecxz
iret
pop
mov
push
jbe
fsts
movl
insl
inc
pop
push
rclb
push
addr16
loopne
push
shr
xchg
lds
inc
or
shrd
out
jnp
mulb
inc
cmp
sahf
insl
sub
frstor
pop
mov
xchg
out
sbb
stos
leave
or
out
pop
inc
cmpsl
lock
imul
jl
out
fmuls
sub
xor
movsl
push
lea
in
scas
xchg
sub
dec
pop
dec
popa
and
cmp
stos
outsl
fidivrl
and
std
cld
dec
adc
or
movsl
out
inc
arpl
mov
fildl
mov
adc
cmp
xlat
test
ljmp
daa
sub
test
mov
xchg
ss
cld
lods
in
jbe
iret
aaa
jns
sbb
sub
lock
imul
jge
std
sbb
dec
pushf
and
sti
fisubl
mov
add
aam
push
lret
cmp
cli
gs
movsl
stos
cltd
xor
pop
jmp
inc
insl
sarb
daa
xor
mov
sbb
pop
out
insb
xchg
cs
xor
push
pop
js
mov
push
mov
xlat
ljmp
and
xlat
dec
dec
and
aaa
into
int
push
xlat
cmovp
xor
dec
or
mov
lcall
xchg
or
add
and
mov
cmp
repnz
iret
sub
ss
pushf
add
gs
outsl
pusha
mov
addr16
sub
cmpsl
or
pop
aam
dec
mov
dec
in
mov
mov
mov
cmpsl
scas
lret
or
push
cmp
add
pop
mov
rcrb
cs
test
int
inc
or
inc
aam
shrb
or
adc
cli
sbb
nop
jmp
mov
test
sub
sub
xor
ja
inc
pop
lods
mov
mov
loop
xchg
lret
mov
mov
sub
subl
js
and
ja
xor
add
call
xor
pop
lahf
add
outsb
ret
add
insl
xchg
ret
pop
mov
lods
shl
in
rep
fmuls
ret
xchg
dec
popf
cld
cmc
push
jae
pop
jecxz
pop
dec
adc
fsubp
bound
mov
out
cmp
jmp
mov
dec
jle
sbb
xchg
lret
jb
adc
scas
adcl
aaa
xlat
lds
lahf
cmp
push
and
mov
lret
outsb
cltd
sahf
in
dec
dec
mov
inc
or
sbb
push
fnstenv
and
push
and
psrad
push
xchg
jno
mov
jbe
rcl
mov
inc
jg
xor
jmp
or
jle
inc
jmp
movsl
add
lock
fsubrs
jns
je
sbb
cmp
sub
test
mov
xchg
sub
push
test
aas
xlat
dec
xchg
insb
push
mov
mov
jb
movsb
add
inc
sahf
add
in
push
xlat
or
das
inc
xchg
jg
fildll
inc
arpl
je
int
inc
arpl
fstps
inc
mov
mov
lea
xchg
xchg
dec
sbb
fucomp
pop
js
lret
dec
hlt
xor
into
inc
pop
enter
mov
and
lock
xchg
jg
test
outsl
loopne
or
das
es
jno
decb
fldl
mov
xchg
in
cs
xor
cs
cmp
fmul
sbb
xchg
pusha
mov
outsb
mov
lods
mov
xor
push
mov
int3
mov
sar
sub
pop
xor
mov
sub
pusha
imul
adc
or
dec
mov
and
dec
mov
jle
dec
std
mov
nop
rcl
pop
loop
cmp
mov
iret
rcl
fsqrt
mov
cmp
cli
shrb
sub
jmp
sbb
lret
jge
add
or
gs
xchg
xchg
scas
subb
mov
negb
rcrl
out
or
cmp
pop
pop
jo
fpatan
std
add
cli
ret
stc
mov
je
add
lock
cld
mov
mov
or
fbld
mov
loope
mov
sbb
and
das
scas
aam
lea
jno
enter
push
lods
insl
dec
jg
cmp
in
sbb
fstpl
and
add
outsb
cltd
sahf
jbe
push
cmp
cltd
ror
dec
xor
imul
adc
push
pop
shlb
dec
and
pop
fcmovnu
lahf
cmp
sub
pushf
push
outsb
adc
mov
dec
mov
add
xchg
adc
inc
and
dec
push
sahf
fcoml
jbe
xchg
shl
sub
bnd
adc
lods
adc
dec
mov
out
pop
xchg
mov
pop
add
xor
rcrb
clc
mov
mov
push
xor
dec
cmp
das
xchg
xchg
push
add
jo
js
xor
lret
cli
fsub
push
popa
in
dec
cmp
stos
stos
int3
or
sbb
sbb
lds
lcall
push
rolb
xchg
in
repz
jns
rcrb
push
fwait
xchg
adc
cmp
lods
lret
stc
inc
push
pop
pop
push
pop
inc
fincstp
addb
cld
xor
pop
and
mov
jl
imul
fmull
push
xorl
ret
cs
shll
push
mov
pop
lahf
mov
loop
jns
shlb
sub
icebp
jbe
out
sub
mov
out
jb
xchg
mov
jns
xchg
mov
push
clc
or
and
mov
sub
ds
push
ficomps
mov
pushf
call
loop
rdpmc
test
rorb
ljmp
mov
into
or
dec
cltd
xchg
mov
cmc
dec
or
pusha
stos
mov
lods
sahf
popa
fsub
or
cmpsb
mov
mov
or
insl
cmp
icebp
ficompl
test
outsl
in
mov
outsb
andps
sbbb
pop
xchg
out
mov
inc
into
lock
je
gs
in
and
cmp
faddp
fld
lret
dec
in
sub
cmpsb
cld
and
cmp
xchg
or
mov
lret
cli
lcall
mov
xchg
into
icebp
ficoms
or
xchg
push
sbb
rcrb
dec
call
pop
pushf
cs
lock
lock
mov
inc
fxam
push
js,pt
hlt
cmc
enter
xchg
pop
cmp
cli
or
out
xchg
xchg
rorb
cmp
xlat
xchg
and
inc
in
push
ss
lock
fcompl
xlat
aad
cmp
in
dec
es
leave
cli
loope
and
dec
mov
fldcw
scas
cmpl
jnp
fidivrs
sub
repz
dec
xor
out
sub
cmp
jmp
movsl
inc
push
xchg
fmul
icebp
xchg
adc
sti
mov
add
es
adc
xor
lock
loope
xchg
adc
sbb
in
aad
data16
mov
clc
ds
push
nop
mov
push
flds
push
cmp
arpl
mov
icebp
iret
jp
sub
enter
pop
orl
mov
add
pop
inc
pop
movsl
fwait
aaa
popa
dec
pop
adc
nop
push
lods
or
lret
mov
stc
jl
cmp
das
push
mov
mov
xchg
insl
pop
loopne
dec
fucomi
decl
cmp
fldcw
cmp
inc
xor
adc
xlat
test
rorl
in
stos
xchg
jp
push
pop
xor
cmpl
mov
jmp
shrb
adc
arpl
jle
xor
mov
sub
addr16
or
scas
push
mov
sar
je
sbb
mov
jb
cmpsl
pop
adc
lret
jmp
aad
cmp
add
inc
dec
and
cmp
cwtl
jl
push
gs
inc
mov
ret
xlat
fmul
pop
inc
push
adc
leave
add
push
jl
add
push
xor
jb
mov
lea
push
sar
adc
fdivs
mov
mov
and
roll
cs
add
sbb
ret
mov
mov
fnsave
loopne
js
inc
mov
daa
bnd
shlb
addb
push
xchg
push
dec
add
fistpl
enter
pop
rolb
cmp
mov
scas
out
lret
ss
add
add
mov
lock
aam
adc
add
outsb
sub
das
jecxz
mull
test
pop
addb
inc
and
fnsave
adc
pop
out
and
pop
xchg
test
test
out
jnp
jl
or
sub
cmp
je
roll
add
adc
subl
insb
pop
sub
or
stos
fs
hlt
sub
mov
jmp
add
push
stos
adc
test
jge
push
enter
loop
add
adc
dec
cmp
mov
scas
add
test
adc
pop
sbb
add
jae
lods
jecxz
movsb
mov
pushw
push
xor
push
je
lret
movsb
adc
add
repz
fdivrs
popl
adc
mov
and
and
dec
cmpsl
xchg
cwtl
in
jl
mov
repnz
inc
movsb
inc
ret
lds
adc
push
incb
cmpsb
sub
xchg
pusha
xchg
rorl
cmp
dec
push
ret
out
pop
repnz
daa
aas
xchg
inc
in
push
cltd
or
lods
mov
push
mov
pop
adc
dec
int3
inc
in
fistps
cmp
test
bound
adc
sti
xchg
add
xor
mov
bound
jp
mov
std
push
lea
mov
insb
ljmp
int3
cli
or
fcomip
lret
gs
in
mov
and
stc
add
add
xchg
dec
inc
mov
jle
pop
fbstp
pop
mov
aam
ret
fisubs
or
jo
inc
xchg
icebp
sbb
lods
jno
cmpsb
or
xchg
gs
pop
dec
loop
in
test
xor
pop
add
sahf
lcall
ret
leave
pop
add
and
nop
iret
lret
loopne
pop
jo
in
out
mov
popa
push
dec
adc
loop
dec
in
fcmovnbe
xchg
imul
xchg
jecxz
insl
xor
mov
sbb
sub
filds
js
mov
mov
sbb
imul
jbe
mov
mov
mov
pop
inc
jle
cmpsb
pop
inc
mov
ljmp
mov
int
inc
mov
xchg
ret
push
stos
fwait
xor
fs
loop
push
jae
push
bound
cmpsb
orl
dec
and
dec
cltd
jecxz
lea
xchg
outsb
in
mov
out
test
rcr
cmp
mov
jo
sub
push
js
insl
nop
adc
or
imul
cmpsb
pop
rcl
int3
fs
pop
mov
loopne
movsb
in
sub
scas
inc
insl
sbb
sub
cmp
out
dec
das
enter
add
shlb
ret
in
dec
bound
fwait
push
shlb
push
xchg
mov
push
arpl
sbb
sbb
loope
inc
jp
pop
aam
lret
fs
jbe
add
adcb
jnp
pop
dec
mov
lods
gs
cwtl
js
and
imul
std
aas
inc
pop
pop
stos
inc
ljmp
fidivrl
sbb
dec
mov
cmpl
or
mov
dec
je
inc
enter
cmpsb
ljmp
ljmp
repz
insl
mov
cli
iret
jcxz
cmp
bound
shlb
insl
cld
jne
divl
mov
lret
jle
out
add
mov
adc
hlt
xor
push
add
mov
popa
test
in
pop
pop
jns
inc
push
fistl
add
ds
loopne
xchg
and
loop,pn
aad
mov
shll
mov
sti
loope
xchg
adc
sub
ds
mov
pop
lret
push
popf
fwait
mov
sbb
mov
decb
in
icebp
movsb
fsts
xor
jecxz
mov
and
pop
scas
movsb
and
jp
mov
push
aaa
xor
stos
iret
xor
fnstcw
rclb
cmc
enter
sub
mov
testb
sub
jnp
xchg
adc
dec
mov
out
adcl
pop
lret
jmp
in
rorl
ljmp
push
push
cmp
cwtl
mov
or
iret
jge
cmp
adc
jbe
insl
pop
jle
mov
pop
shl
and
mov
bound
xlat
or
imul
mov
xchg
repz
andb
iret
repz
and
sti
xchg
mov
mov
mov
testl
les
loop
jne
cmc
jns
lret
add
cmp
loope
xor
cmpsb
mov
dec
fwait
pop
lret
jbe
inc
push
out
sbb
dec
ljmp
cmp
xor
xor
iret
xchg
sub
dec
mov
testl
or
jecxz
lods
xchg
int3
es
gs
jns
add
insl
lcall
stos
shll
jbe
popa
fcompl
test
rorl
mov
mov
insl
js
sub
dec
call
jnp
pop
into
inc
dec
ds
push
leave
je
inc
sbb
fsubr
push
popf
lret
repnz
inc
push
adc
cmpsl
dec
or
pop
jbe
lock
pop
clc
scas
mov
or
push
js
sub
daa
test
xchg
enter
push
rorl
push
xchg
das
loopne
xlat
notl
mov
pop
sarl
neg
fstpt
sti
cmpsl
mov
addr16
cwtl
rep
adc
mov
or
lea
mulb
xchg
push
das
mov
test
ja
or
mov
mov
mov
mov
push
push
faddl
shrb
movsl
fwait
ja
xlat
hlt
inc
push
sbb
lods
sbb
je
xchg
stos
mov
shl
pop
inc
lea
subb
dec
out
pop
dec
arpl
inc
cmpl
hlt
push
lds
or
lods
ja
mov
push
xchg
popf
test
xor
xor
push
dec
rcrl
inc
inc
push
add
push
iret
out
scas
or
jp
inc
push
popf
loopne
pop
rcl
scas
push
xchg
into
ja
adc
gs
cmp
mov
pop
aad
mov
scas
mov
das
faddl
inc
pop
xor
xchg
mov
scas
xor
ror
pop
inc
outsl
stos
dec
imull
xchg
or
icebp
xor
fmul
and
shll
iretw
xchg
mov
icebp
aas
insl
cwtl
jecxz
or
jg
daa
sti
mov
xor
dec
fcmovne
and
push
stc
sbb
test
cmpsb
jecxz
nop
xchg
mov
mov
or
idivl
nop
aas
adc
mov
mov
sbb
xor
push
inc
mov
popa
sar
loopne
push
sub
test
loope
jb
sub
cld
sub
jo
aas
or
insl
sbb
cltd
inc
icebp
xchg
mov
stos
push
stos
fisttps
mov
sub
rcll
nop
pushf
mov
mov
test
enter
leave
psllq
and
aas
nop
sbb
add
mov
jp
mov
sub
popa
sti
jg
add
pop
hlt
mov
pop
mov
ljmp
jmp
imul
jno
pop
and
enter
mov
pop
sbb
mov
cs
stos
pusha
adc
dec
mov
int3
jle
int
xchg
inc
jns
inc
cmpsl
fmuls
jnp
cmp
ja
jg
sbbb
sbb
mov
into
cwtl
das
mov
repz
adc
stc
jge
sbb
dec
loopne
int3
nop
mov
or
loop
rorb
push
jnp
push
lods
dec
fidivl
bnd
xlat
push
xchg
cmp
or
jp
xchg
dec
xor
mov
push
dec
faddl
pushf
idivl
ret
xchg
push
push
dec
cmpsl
dec
fiadds
test
xchg
adc
dec
push
sbb
add
movsb
mov
cmpsb
jle
fadd
push
scas
out
xchg
mov
cmc
ds
xorl
jp
add
adc
test
push
mov
insb
mov
lret
sahf
in
bound
imul
or
out
das
stos
push
stc
aaa
andl
aas
mov
cs
pop
in
jmp
inc
and
stc
jns
in
out
adc
stc
and
repnz
out
and
mov
pusha
loope
fistl
xor
and
test
mov
clc
sbbl
shll
jge
dec
repnz
sarb
bt
jns
inc
sub
push
sbb
out
jge
gs
cmp
mov
stos
shrl
lahf
lds
aad
add
mov
pop
in
aaa
sbb
into
sub
dec
pop
mov
pusha
xchg
mov
es
xchg
mov
jge
enter
dec
test
push
xchg
stos
push
lods
xchg
shll
ret
outsb
pop
cmp
mov
lcall
mov
insb
sbb
mov
push
dec
iret
mov
inc
aas
adc
add
mov
cmp
adc
cmp
cmp
push
and
jp
cs
mov
and
shlb
dec
jo
mov
adc
hlt
dec
cld
xlat
pop
xchg
xchg
mov
movsl
xchg
or
xchg
inc
repz
or
adc
xchg
fs
mov
jae
jge
test
xchg
dec
mov
and
icebp
inc
jg
mov
xor
jb
sti
cmpsl
push
dec
jge
push
out
aad
pop
orl
popa
xchg
setl
je
push
jmp
dec
dec
jns
cld
test
mov
inc
inc
add
rorb
mov
testb
dec
leave
test
test
mov
xchg
call
dec
enter
sbb
dec
jns
nop
loopne
xor
rolb
jns
ljmp
inc
push
enter
and
inc
adc
lcall
jno
push
ljmp
push
rcrb
mov
rcll
dec
int
add
sbb
fbld
add
test
scas
and
cltd
test
aaa
mov
sub
push
cmp
hlt
clc
fdivp
and
mov
jg
pop
lds
pop
in
push
ss
jnp
sub
mov
push
aad
mov
dec
shll
aam
jge
mov
int3
outsl
fcompl
daa
push
mov
dec
or
jbe
lret
lcall
out
insl
pop
xchg
nop
movd
xchg
pop
cmc
ss
lret
pop
outsb
or
jp
add
adc
cltd
rorl
mov
mov
enter
ss
fimuls
dec
xchg
cmpsl
cmp
xchg
lret
sbb
nop
dec
jmp
cs
testl
test
xor
xor
inc
jge
aad
and
pop
or
ret
mov
loop
ja
mov
sub
pusha
nop
ljmp
stc
sub
inc
jnp
adc
subl
and
xchg
mov
mov
into
dec
cwtl
and
lret
jns
mov
pminub
sbb
inc
push
leave
adc
jp
sub
pop
xchg
popa
mov
push
pop
dec
scas
or
cli
lods
sbb
push
stos
jl
jbe
xchg
jne
pop
xor
div
sub
mov
dec
adc
aaa
shl
ret
sbb
out
insl
imul
es
sahf
aaa
push
add
sub
das
sahf
in
shll
sub
and
inc
leave
cmpsl
jecxz
aaa
in
push
and
insb
shrl
out
clc
out
cmp
sti
sub
xchg
lret
cmp
leave
add
cwtl
mov
leave
adc
lcall
pop
xor
xchg
arpl
js
jg
mov
mov
sbb
pop
out
repz
ret
movsl
lods
sub
sbb
repz
jmp
pop
jae
inc
fildll
pop
test
adc
addr16
dec
scas
sarl
push
testb
sbb
cmp
xchg
mov
push
dec
cmp
in
imull
lods
dec
subb
test
les
mov
popf
push
gs
enter
xor
add
inc
fs
jl
xor
cmp
cmpl
pop
and
popa
cltd
iret
popa
dec
subl
sub
shl
ja
mov
fs
cwtl
xchg
movsl
sarb
call
cmp
insl
std
xchg
jnp
or
shlb
add
jno
scas
je
push
jb
mov
cmpsb
ja
mov
push
jns
push
scas
ficompl
pop
test
mov
fidivrl
xor
in
shll
adc
xor
stos
xor
push
fcmovnbe
scas
mov
notl
sbb
sbb
xlat
and
adc
cmpsl
fstp
fdivr
jp
sti
icebp
scas
movsb
push
test
lods
mov
mov
test
inc
movsb
jle
pop
add
adc
push
xchg
inc
aas
lds
xor
stc
xor
mov
sbb
fidivl
push
shlb
sub
fucomip
cmp
push
xchg
sbb
push
pop
insl
xchg
add
add
push
cmp
pop
imul
cmp
cmc
cmpsb
jne
das
xor
mov
das
negb
fmuls
in
mov
sub
or
inc
out
sub
dec
sub
popf
adcb
loopne
mov
push
loope
loopne
imul
and
jmp
inc
loope
ss
outsb
int3
out
mov
imul
out
inc
add
sbb
dec
mov
push
inc
mov
cmp
mov
mov
push
out
push
inc
pop
mov
cmp
addr16
enter
scas
aas
popw
mov
inc
aaa
cmp
in
xchg
and
jmp
cmp
pop
jle
loope
mov
aad
jle
cmp
int3
inc
mov
lds
leave
push
cmpsl
inc
iret
jne
dec
adc
xchg
insb
sub
mull
cmp
jle
or
imul
adc
xor
mov
jmp
mov
add
cmpsb
jg
add
pop
xchg
out
and
nop
lea
sbb
ss
js
in
movzwl
lret
pop
das
into
mov
sahf
mov
dec
or
jl
dec
in
repz
pop
cmpsl
pop
sub
jge
aas
aad
clc
xchg
pop
dec
arpl
fadds
pop
and
mov
je
faddl
and
mov
jge
hlt
imul
mov
rorb
mov
mov
pop
hlt
insl
sub
push
mov
sub
dec
mov
clc
xchg
cmp
mov
fwait
or
xorl
sbb
mov
mov
inc
movsl
adc
mov
testl
mov
push
mov
fildll
sbb
push
lds
cmp
mov
and
mov
dec
or
dec
xor
orb
aam
mov
test
inc
mov
lds
movsb
mov
jmp
inc
icebp
fs
fimull
dec
cmpl
mov
rcrl
imulb
sub
and
mov
movsl
jb
xor
push
out
and
cmp
out
repnz
mov
aaa
dec
jno
or
xchg
out
xchg
adc
xor
test
dec
lret
add
pop
dec
xor
dec
fcoml
clc
cwtl
adc
mov
lods
dec
mov
cld
xor
mov
mov
loope
mov
les
outsb
adc
xor
mov
rorb
fs
lret
jge
scas
sbb
dec
jbe
test
jae
pop
pushf
stc
adc
jmp
movsb
mov
shll
fidivl
cli
dec
push
roll
test
inc
scas
xchg
mov
inc
out
xchg
fbstp
pop
jo
call
sub
pusha
pop
adc
ljmp
pop
mov
call
mov
fidivrs
adc
lea
push
repnz
mov
xchg
add
cmpsl
xor
outsl
mov
movsb
pop
jg
leave
push
xorb
mov
xchg
mov
pop
inc
enter
sub
idivl
dec
mov
mov
mov
adc
inc
stos
mov
mov
scas
imul
add
jae
sub
pop
dec
jno
or
std
add
sub
push
mov
in
prefetchw
les
pop
movsb
pop
daa
in
test
lahf
cmp
inc
divl
mov
cld
fwait
call
push
sub
cwtl
popf
stos
sub
loopne
in
cld
fcoml
leave
je
inc
out
mov
in
and
lahf
adc
addb
inc
lret
or
mov
cmpsl
jecxz
mov
aam
mov
or
push
sbb
ja
push
cmp
test
xorb
in
adc
out
insb
mov
mov
and
jp
jge
and
sarl
pusha
mov
imull
call
das
and
test
inc
ret
mov
xor
data16
pop
mov
jmp
mov
add
imul
ja
into
out
subl
inc
addl
decb
into
push
push
inc
xchg
sub
lahf
fildll
cmpb
arpl
lret
sbb
xchg
dec
int3
sbb
scas
lahf
inc
ljmp
dec
sbbl
aas
addr16
xor
test
pusha
movsb
push
in
cmp
jge
push
xchg
xchg
mull
icebp
and
or
xor
mov
cltd
mov
insb
mov
sbb
aas
jae
or
leave
fs
scas
mov
pushf
ret
adc
lods
sub
data16
push
mov
inc
cmp
js
jo
cwtl
lahf
pop
fcom
push
mov
or
xchg
sub
mov
addr16
loope
cmp
scas
push
inc
dec
pop
in
mov
push
repnz
in
call
pusha
cmp
lds
jmp
mov
push
mov
insl
lods
fstps
lds
in
rol
add
sub
push
and
xlat
sub
leave
xchg
stos
and
repnz
jne
test
jb
pop
pop
pushf
add
pop
movsl
xchg
mov
fnstenv
add
add
pop
or
inc
push
test
mov
out
cmp
push
das
dec
or
aas
cltd
xor
add
rcll
mov
sub
mull
mov
sti
test
addl
out
jnp
das
enter
push
xor
inc
jnp
lcall
das
popa
mov
bnd
sbb
sub
into
pop
out
cmp
sub
add
arpl
mov
cmc
aam
outsl
and
imul
loop
adc
cmpb
cmp
in
cli
xchg
cmp
dec
scas
or
sbb
sbb
aam
xchg
inc
xor
adc
push
or
mov
xor
xchg
mov
or
cli
out
xor
push
dec
mov
test
mov
dec
cmp
enter
pop
mov
pop
inc
ja
pop
scas
rcll
enter
addl
pop
xor
fisttpll
push
mov
inc
aad
xor
mov
das
mov
and
roll
stc
in
mov
stc
lahf
aaa
sbb
stos
sbb
fs
sub
rcl
arpl
add
lods
ret
imul
mov
push
or
cmpsb
sti
cmp
pusha
dec
xor
and
xchg
notb
or
push
arpl
movsl
filds
je
mov
decb
xor
or
push
sarb
jae
int
pop
mov
rolb
or
mov
mov
jle
fidivrl
popf
out
pop
test
dec
frstor
jae
xchg
insb
sbb
in
pop
imul
xcrypt-ofb
cmpsl
imul
jne
jp
movl
push
xchg
jo
push
fsave
call
mov
mov
outsl
or
iret
std
scas
dec
add
shll
add
mov
dec
fwait
inc
xchg
mov
idivb
rcll
fs
andb
dec
ss
push
cli
fcoml
in
mov
jbe
cmpsl
in
cmp
cmp
mov
push
mov
mov
xchg
add
adc
cmp
scas
js
outsb
lahf
cmp
xchg
dec
iret
popf
sub
add
jl
pushf
gs
jne
add
lcall
sar
stos
ret
scas
dec
rorl
fdivl
sbb
subl
mov
icebp
out
or
xchg
xchg
stos
add
or
adc
je
jecxz
sarb
inc
dec
adcl
std
mov
add
loop
fistps
xchg
jmp
pop
add
out
adc
push
pusha
mov
shll
or
movsb
cmp
xchg
lret
gs
arpl
jg
lea
add
rorb
sbb
test
repz
lcall
xchg
xlat
repz
mov
push
clc
push
rolb
mov
lahf
cld
jno
jns
jbe
popf
xchg
popf
xor
cmp
popa
andnps
clc
loop
repz
cmp
pop
dec
addr16
int3
add
jns
repnz
test
iret
test
lcall
xor
lea
lahf
shr
and
es
sub
add
rorl
mov
and
mov
push
lret
in
jb
es
xor
xchg
pop
int
icebp
out
jbe
mov
shr
push
in
shl
inc
cmp
sbb
mov
in
cld
jmp
data16
mov
jno
jg
jno
rolb
jg
cltd
jne
popa
sti
imul
jle
jae
cs
or
mov
pop
pop
roll
sub
fcompl
mov
push
mov
xor
adc
in
or
outsl
dec
cli
cmp
ss
fldt
lcall
cltd
or
mov
push
xor
cmpsl
fst
xchg
mov
je
pop
shll
adc
scas
xor
sti
push
leave
pop
out
inc
adc
scas
in
ja
jnp
arpl
addr16
fsubl
pop
sahf
xchg
xchg
and
int3
jp
pop
push
mov
and
dec
jne
jb
pop
jns
mov
cmp
mov
scas
dec
mov
pop
mov
mov
sub
add
aad
movsb
cmpsb
out
lea
inc
add
stos
mov
jmp
pop
pusha
fimuls
cwtl
testb
sbb
enter
stos
cmp
sub
push
adc
pusha
inc
pushf
outsb
ret
sbb
xlat
mov
mov
hlt
mov
loopne
mulb
movsl
ds
scas
rcll
out
dec
daa
sbbl
sub
std
push
pop
pop
xlat
les
xor
mov
sahf
fadds
cmp
jnp
cs
leave
mov
es
ss
aas
or
stos
in
sbb
sbb
test
mov
lds
cwtl
sub
sbb
int
mov
xor
mov
jp
mov
xor
pushf
inc
xchg
sub
sbb
jae
pop
xchg
cmc
fildll
inc
cld
jb
xchg
es
pusha
or
push
lods
test
add
inc
inc
cld
imul
rcr
and
jne
jp
jp
xchg
mov
pop
call
push
cmc
mov
and
sarb
pop
movsl
addb
popf
adc
mov
cmp
int3
les
in
push
in
or
mov
clc
outsl
fwait
mov
push
pop
xchg
push
dec
pop
pop
mov
subb
adc
fsubs
pop
xchg
dec
adc
inc
scas
nop
mov
fcompl
xlat
inc
dec
push
stos
mov
xlat
push
and
pop
aad
xchg
sub
and
pop
testl
and
in
ds
decl
cmpsl
mov
push
subl
enter
loope
mov
les
shlb
xor
outsl
cwtl
and
test
nop
adc
cmp
fdivs
es
or
icebp
dec
xchg
cmp
test
ret
mov
sarl
adc
push
pop
inc
sbb
and
mov
sahf
rorl
mov
cmc
mov
mov
addl
bound
fnsave
lret
clc
fcoml
cmp
sub
xorl
push
lea
adc
repnz
xor
cmp
mov
and
enter
jb
mov
roll
pop
sti
ja
lret
bound
or
and
and
enter
push
mov
idiv
jg
loopne
mov
sub
or
imul
dec
jmp
mov
lods
pop
cld
jno
pop
or
sahf
ljmp
repz
cmp
inc
pop
jmp
mov
enter
cltd
jl
aad
sbb
bound
sahf
dec
ds
shrl
inc
sbb
sub
pop
jbe
add
xor
out
inc
cwtl
fisubl
lcall
ficoml
jnp
pop
cwtl
aas
xor
fidivrs
in
loope
or
das
sub
leave
xchg
xchg
pop
mov
mov
push
outsb
jl
sbb
andl
mov
lods
ficoms
movsl
xchg
test
pop
push
and
adc
jo
negb
push
inc
inc
jp
lock
test
jecxz
hlt
lea
cli
cmp
mov
push
sub
cmp
mov
sub
cmc
push
icebp
test
pop
mov
dec
push
pop
dec
lret
or
lea
test
dec
or
je
out
test
fcompl
sbb
leave
mov
xlat
insl
mov
or
addb
or
negl
pop
push
enter
arpl
xchg
iret
mov
and
or
fs
decb
bnd
or
sub
js
out
inc
sub
repz
sbb
dec
mov
das
jnp
iret
xor
add
xor
cld
cld
and
jge
ss
neg
pop
xchg
mov
pop
or
hlt
mov
mov
ret
fwait
or
xor
sub
lret
xor
ffreep
dec
mov
sti
ffreep
xor
xor
mov
mov
or
daa
fistpll
cs
sahf
es
jmp
in
cltd
fidivl
in
ja
stos
ret
sub
push
clc
lds
adc
mov
je
out
mov
add
and
fistpl
lock
push
cmp
or
je
sub
sub
fidivrs
fisubrs
jmp
xchg
adc
dec
jne
es
mov
xor
ret
xchg
pop
loop
in
pop
sahf
clc
rep
popa
addb
out
popa
jnp
cmpsb
pop
mov
xlat
sbb
adc
xchg
scas
adc
inc
add
popa
das
popa
mov
xor
mov
mov
cmp
xchg
mov
enter
jp
rcrb
push
loope
std
inc
sahf
ss
enter
dec
or
mov
arpl
mov
sti
repz
test
mov
data16
mov
jbe
dec
cmp
adc
pop
pusha
les
push
loop
xor
xlat
xchg
mov
sbb
repz
cli
dec
cmpb
iret
negl
add
and
xor
leave
push
inc
push
imul
iret
aas
cmp
dec
add
sarb
push
insl
xchg
cwtl
xchg
dec
negl
xchg
stc
jp
jae
cmc
outsl
dec
lock
inc
cwtl
dec
sub
sbb
orb
push
das
mov
xorl
in
mov
add
lods
xlat
lods
in
das
aas
das
add
call
mov
sub
repnz
push
mov
push
cmp
lock
stos
push
add
les
xchg
push
and
aam
xchg
push
fwait
gs
fisubrs
lcall
adc
or
sbb
out
enter
daa
ja
push
dec
cmp
out
jne
jmp
lods
imul
add
movl
dec
pop
vpslld
mov
jb
and
sbb
test
jnp
adcl
mov
xlat
mov
sbb
push
ja
xor
loope
or
dec
and
in
pop
or
sub
in
push
rolb
subl
cmp
fbld
ja
adc
and
in
mov
xchg
sti
outsl
hlt
pop
outsb
sub
aas
stos
outsb
cmpb
push
and
and
out
and
sti
movsl
inc
sub
cmp
lods
lock
stc
jmp
and
push
rorb
mov
jno
scas
add
lods
jle
gs
stc
and
pop
lret
or
pop
mov
imul
adc
mov
sbbb
cmpsb
mov
arpl
clc
cmpsl
xchg
movsl
loope
es
std
push
xor
orl
clc
lret
jecxz
mov
mov
lods
popa
xchg
add
movsb
imul
mov
std
mov
cs
mov
add
psrlw
rol
xchg
negb
insl
or
cwtl
dec
adc
or
fwait
ljmp
rcl
aas
xor
jl
add
mov
cmc
xor
and
or
fldenv
lock
imul
cs
pop
cltd
jg
sarb
inc
jmp
cmp
call
inc
leave
das
push
push
sbb
dec
mov
jmp
xchg
jns
outsb
dec
sbb
int3
data16
jno
jmp
push
jle
push
dec
cmp
inc
movsb
popa
jb
test
leave
xchg
push
gs
add
or
in
cmp
inc
add
dec
shll
aaa
pop
movsl
jge
dec
cmp
fcomps
xchg
cs
enter
mov
loopne
add
sub
jl
in
divl
cmc
dec
pop
insb
repz
adc
mov
mov
repz
fs
pop
bound
xchg
pop
dec
cs
lcall
mov
jle
std
aas
adc
loopne
or
push
cmp
in
in
sti
jnp
int
mov
int3
or
int3
sub
adc
jnp,pn
push
insl
out
lahf
cmpsb
test
adc
fcmovbe
jno
mov
pop
xchg
jle
xor
xor
inc
test
mov
faddl
cwtl
jmp
mov
cmp
aaa
faddl
loope
out
adc
out
mov
pop
loope
or
pop
mov
out
xlat
popa
xor
xor
jle
das
sbbb
arpl
nop
test
sbb
xchg
lods
push
in
lock
adc
sub
jae
mov
aad
test
ficomps
sub
sub
pusha
push
lods
std
out
pop
test
mov
lods
jae
push
inc
jp
push
mov
mov
lea
lock
movsl
jnp
ljmp
xor
cmc
inc
jne
sti
add
cmp
cli
inc
scas
lods
cli
sub
ss
xor
sbb
pop
sti
jno
inc
js
fidivrl
mov
imul
movsl
aaa
dec
bound
lds
out
dec
pop
cmp
adc
mov
shrl
in
cmp
std
pop
sub
pop
imul
dec
lahf
je
inc
and
push
mov
fidivl
rol
mov
aas
pusha
or
bound
cs
inc
mov
imul
adc
inc
xchg
mov
xor
fs
rcll
dec
cmp
push
xor
stos
addr16
dec
xchg
ror
add
cli
gs
imul
xchg
addl
jmp
aaa
mov
lret
mov
pop
lods
lea
aad
pop
push
popf
dec
mov
fcmovu
adc
mov
mov
aaa
sbb
mov
and
push
mov
sahf
shlb
lahf
pop
lds
add
outsl
or
xor
adc
adc
push
insl
pop
dec
push
lods
insb
pop
xchg
rcrl
inc
pop
jle
pop
jge
popf
out
in
cmp
mov
lods
es
xor
cltd
jle
lock
imul
mov
ret
test
rcrl
sbb
sub
scas
sbb
jns
mov
sub
mov
in
fwait
movb
xchg
mov
and
cmp
cltd
xchg
pop
fwait
cmp
jo
testb
mov
sbb
test
cltd
dec
and
or
test
lods
or
fldcw
mov
push
mov
adc
scas
popa
iret
xchg
rorl
mov
xchg
mov
inc
push
cmpsl
or
enter
mov
sub
ljmp
addl
and
lret
mov
mov
icebp
xor
incl
mov
cmp
sbb
aad
loop
loopne
sbb
adc
arpl
iret
adc
fdivrs
scas
mov
fidivs
mov
daa
add
mov
add
or
inc
push
push
xor
das
out
pop
dec
mov
push
pop
sub
jp
test
jg
pop
xchg
outsb
xchg
jno
or
dec
mov
xor
push
cmp
rorb
test
vprotb
je
out
ss
fsubr
lods
lds
push
les
pop
add
movsl
xchg
jnp
insl
adc
dec
jp
mov
mov
fwait
add
inc
cwtl
sub
aad
movsb
in
ja
jmp
imul
and
sbb
call
add
xor
cmp
es
movsl
cmpsl
test
dec
test
lahf
leave
mov
or
scas
addr16
fs
daa
inc
lods
xor
dec
popa
sub
movsl
subb
lods
xchg
xor
sub
out
push
das
xchg
mov
mov
insl
stc
in
cltd
xchg
xor
and
dec
lahf
fnstenv
jmp
into
mov
rcr
add
sahf
cmpl
xor
sub
popa
scas
dec
int3
stc
jne
out
sub
cmc
jb
push
dec
or
sti
je
in
sbb
and
aam
cmpsl
jne
movsb
jge
filds
test
lods
std
jmp
xchg
cmp
jnp
xor
xor
test
int
hlt
dec
or
jecxz
bound
mov
fistpl
sbb
inc
pop
mov
add
inc
call
mov
icebp
stc
call
xchg
popf
in
aad
cmp
sub
adc
aad
scas
test
rcrb
dec
lds
fidivrs
loopne,pt
leave
repz
sub
dec
xchg
adc
jle
test
rorb
sbb
mov
imul
mov
mov
mulb
fsub
repz
enter
and
orl
or
mov
inc
xor
add
insl
lret
and
iret
pop
stos
jl
popa
bound
sbb
popf
sbb
cmpsb
jnp
jno
mov
stos
imul
and
icebp
mov
sub
pop
cs
data16
mov
mov
fcomps
adc
cltd
popf
push
es
test
sbb
sub
in
add
push
jecxz
add
mov
or
and
aam
inc
pop
movl
cld
add
sbb
dec
xchg
dec
and
and
adc
paddb
and
mov
inc
fisubs
dec
dec
mov
push
sahf
pop
jbe
jp
cmpb
loop
jb
push
inc
mov
sbbb
xor
inc
insb
pushf
mov
ja
iret
xlat
push
rcrl
xchg
mov
lods
inc
test
decb
fidivs
mov
adc
dec
add
dec
cwtl
mov
push
xor
mov
sbb
addr16
mov
sbb
inc
jp
or
or
cmp
cmp
lods
lods
and
mov
popf
add
sahf
sbb
cmp
les
movsl
es
clc
add
xor
mov
dec
icebp
das
push
mov
test
mov
out
js
jmp
xor
mov
repnz
add
cmp
iret
iret
inc
rcrl
bound
divl
mov
cmp
or
xor
fnstsw
jo
xchg
push
int
push
mov
cltd
dec
push
mov
inc
ror
jnp
adc
gs
lret
pop
fisubl
sub
dec
fsubs
pop
test
lods
jmp
dec
ret
ret
out
mov
sahf
mov
pop
popa
sahf
sub
sti
jg
jns
mov
dec
xorl
xchg
stos
sbbl
lcall
fsubrs
fcoml
sub
iret
in
jmp
mov
push
popf
push
cmp
mov
mov
in
pop
clc
shrl
mov
mov
add
loop
add
adc
daa
mov
mov
stos
pop
fildl
popf
loopne
sahf
imul
out
out
jge
push
pop
dec
pop
jnp
mov
xor
adc
jp
stos
jno
push
arpl
nop
cmp
repnz
call
mov
rolb
cmp
ds
mov
into
aad
fsubrs
lock
loop
push
in
out
adcb
pop
int3
shlb
jmp
fldenv
outsb
pop
or
xchg
ret
xor
push
mov
nop
or
dec
ror
bound
xor
inc
rorb
sbb
inc
mov
jle
insl
pop
loopne
sahf
push
xor
insl
call
movsb
push
daa
adc
ficomps
dec
cmp
clc
in
stos
loope
fcmovb
add
in
or
lcall
cmpsb
ja
lcall
mov
imul
jbe
xchg
fildll
push
pop
add
lds
pop
mov
iret
xor
cmp
sbb
jge
pop
je
sbb
sar
xor
xchg
rorl
push
inc
jl
jbe
mov
lock
mov
xchg
cli
fcmovnu
mov
jno
movsl
adc
cmpsb
insl
stos
daa
lods
loope
std
cmpsl
mov
xchg
orl
imul
xchg
loopne
mov
or
sbb
sahf
cmp
loop
inc
xor
movsl
lea
or
add
xchg
sub
aam
xchg
les
pop
cmc
test
cld
xchg
or
loope
out
push
shr
mov
cld
aaa
fs
rorl
negl
add
xor
movsb
jl
xor
mov
sbb
cmp
orl
shll
and
testl
aam
fistpll
mov
mov
and
popa
shrl
xor
sub
xchg
fcmovnb
or
lods
test
test
shl
inc
lret
lret
outsl
pusha
test
pop
and
cmpsb
pusha
xor
repz
add
fcmovb
clc
mov
fwait
mov
fisubl
jle
cmp
cld
xlat
xchg
push
shlb
or
push
bound
fldt
add
vpunpcklqdq
push
daa
fisubrl
mov
xorb
aaa
loope
jmp
or
inc
pop
mov
sbb
fld
sub
jns
fsubs
push
int
cmpsb
fldcw
xchg
pop
aad
ja
and
inc
cmp
mov
lods
jp
scas
je
das
xchg
cwtl
movsb
pop
cmpsl
mov
cld
lcall
mov
mov
cld
sub
dec
cmpsl
dec
cwtl
rolb
fcompl
or
testl
aad
pop
pop
adc
jle
dec
ret
fildl
jecxz
jl
call
adc
popf
inc
pushf
fimuls
jae
adc
arpl
rcll
call
out
dec
sbb
add
push
push
test
fstps
aas
xor
push
into
mov
loope
xlat
mov
and
cmp
leave
jne
test
push
or
cmp
or
addr16
enter
repnz
out
in
scas
outsb
pop
cmpsl
push
aas
fnstsw
iret
push
sub
jne
dec
data16
inc
jb
mov
movsl
insb
cmp
dec
add
mov
inc
xchg
sbb
out
push
xchg
mov
mov
inc
mov
inc
jmp
repnz
xchg
adc
inc
cltd
sub
aad
push
mov
cmc
mov
push
mov
push
cwtl
xor
jmp
sub
andb
pop
xchg
add
sub
lods
sbb
mov
fisttpll
in
inc
dec
lahf
into
aam
test
mov
xchg
loope
inc
fsubr
mov
adc
dec
fisttpl
cmp
or
jns
sbb
cmp
cmpl
xchg
jae
dec
inc
mov
push
mov
xchg
insb
decl
js
xchg
and
mov
mov
sub
pop
and
insb
xchg
mov
dec
pop
pop
insl
jnp
mov
cltd
ljmp
cltd
adc
ja
stc
daa
or
xor
out
rclb
push
cmp
adc
xchg
out
cwtl
add
or
loopne
cmp
or
add
test
adc
pop
and
ficompl
sub
lret
popa
adc
mov
insl
pop
movsb
and
dec
adc
push
sub
subb
out
dec
push
popf
inc
sub
jge
and
add
push
mov
cld
fstpt
and
adc
xor
hlt
mov
push
aam
inc
fs
shll
iret
fsubrp
loop
cmp
xchg
test
mov
scas
icebp
nop
mov
and
mov
pop
inc
inc
sar
pushf
out
insl
fwait
ja
jg
pop
cli
iret
mov
out
addr16
out
sub
fcomip
insl
dec
xchg
ret
fsts
lret
push
stos
xchg
inc
mov
push
in
cmp
mov
movsb
sub
dec
data16
and
repz
cmp
add
aad
and
cli
loope
ja
fimuls
mov
repnz
loopne
dec
fcom
imul
mull
sub
push
out
rcl
shl
insl
xor
mov
jmp
mov
and
xchg
insl
js
enter
cmp
iret
cltd
subl
jb
lds
dec
cmp
jge
jmp
enter
xor
test
mov
roll
leave
aas
mov
xchg
push
insb
mov
mov
scas
dec
lahf
sti
jb
inc
call
jg
das
sub
je
xchg
lahf
testl
mov
mov
loopne
nop
testl
adc
cltd
sar
loope
data16
mov
iret
mov
test
repnz
in
jge
stos
arpl
jle
adc
jmp
mov
mov
mov
xchg
xor
xor
aam
into
pop
mov
outsb
sub
jp
jle
xor
and
pop
lret
sbb
adc
add
fsubl
dec
push
push
insb
mov
or
fsubl
rclb
and
iret
wbinvd
ret
sbbl
adc
jae
daa
dec
dec
int
mov
daa
imul
repnz
aaa
mov
rol
addb
arpl
outsb
sbb
inc
cwtl
ret
stos
lods
imul
dec
je
fimull
loope
in
addr16
add
push
or
arpl
test
cmp
rolb
cmp
dec
inc
lret
in
or
mov
xchg
test
into
sbb
int3
mov
push
cmc
ja
or
lcall
xor
outsb
push
fs
outsl
les
jp
pop
push
pop
jo
mov
sub
mov
or
jp
push
in
push
js
bound
pop
pushf
cmpsl
push
popa
push
push
ss
pop
lock
xchg
in
in
and
rcrl
loopne
out
repnz
mov
xchg
popf
iret
push
es
call
jecxz
and
addr16
add
adc
js
lock
sub
cmp
icebp
sbb
fidivrs
mov
mov
xor
lods
mov
pop
mov
push
mov
jnp
pop
adcb
incl
mov
xchg
stc
xchg
jno
popf
sbb
push
inc
sbb
call
hlt
inc
lcall
scas
xor
stos
jg
push
cmpsl
out
push
dec
sbb
sub
je
leave
fscale
out
outsb
insb
aaa
shl
arpl
xor
cmc
gs
lret
xchg
or
enter
sahf
dec
adc
ljmp
pushf
jno
ffree
call
mov
loop
lcall
cli
mov
cmpsb
sbb
inc
or
push
mov
push
in
add
movsb
je
clc
xchg
test
add
mov
sbb
loop
cmp
aas
dec
inc
into
dec
cld
stos
ror
push
mov
loopne
fildl
sub
inc
data16
jmp
xchg
jns
xchg
aad
cmp
sbb
dec
mov
xchg
les
and
mov
es
adc
ds
push
or
mov
es
push
bt
or
jae
mov
jo
add
cmpsl
mov
addb
inc
lods
xchg
roll
mov
push
xchg
arpl
jge
inc
mov
or
lret
idivb
mov
aaa
jno
jp
xor
jmp
lret
mov
cmp
sti
jl
ret
in
test
pop
push
sub
xchg
idivl
sbb
lock
cmp
adc
fisubl
sarb
ficoml
mov
dec
or
inc
jg
jmp
in
fbld
scas
xor
les
mov
pop
mov
adc
xchg
pusha
in
mov
incb
inc
movb
push
mov
add
cltd
jae
add
inc
pop
lock
push
dec
arpl
pop
mov
iret
daa
scas
or
into
mov
add
pop
xchg
ja
jl
les
pop
into
inc
pop
cmpsl
inc
push
jb
inc
or
push
fstpt
mov
inc
jnp
loopne
push
hlt
aam
cmp
in
or
lret
pop
andl
jne
xchg
pop
psrlq
xor
stos
cmp
scas
inc
adc
lock
cmp
xor
pop
icebp
mov
lods
cwtl
add
fwait
cmpsb
push
inc
nop
inc
int
push
dec
or
cmpb
mov
or
sub
mov
rcrb
cmp
dec
and
in
lret
icebp
mov
aad
jo
jb
xor
je
gs
sub
push
jno
pop
cltd
cmpsl
mov
jmp
in
das
bnd
sets
push
out
xchg
bound
shrb
mov
adc
mov
push
cmp
aaa
adc
cmp
pop
cwtl
sub
cmpsl
jbe
mov
mov
into
stc
push
ret
cmp
pop
jns
ds
ret
shl
push
repnz
mov
dec
adc
xor
mov
enter
mov
stos
push
adc
dec
rcll
lcall
scas
and
sbb
out
jl
xor
pop
addr16
cltd
ljmp
fistps
sti
mov
es
pop
testb
sub
sbb
xchg
cmp
add
mov
call
fbstp
sub
into
dec
mov
cmp
add
sarl
out
lds
push
shlb
adc
pusha
sti
je
scas
push
dec
push
mov
adc
jno
jo
sub
out
outsb
adc
and
aam
pop
cmovne
scas
cli
shlb
lea
xchg
xchg
test
jo
enter
mov
repnz
in
in
pop
pop
pop
fucomi
lods
movsb
xchg
xor
jae
dec
pop
dec
dec
ljmp
mov
sub
test
mov
aaa
fcoms
dec
inc
aam
xchg
leave
rcr
gs
cmp
sahf
into
xchg
cmp
loope
add
push
mov
sub
ret
loop
fsub
data16
and
inc
mov
sti
sub
loop
and
mov
add
or
je
notl
sbb
adc
push
jbe
stos
int3
dec
cli
push
std
sbb
sti
and
mov
int
ret
in
pushf
mov
dec
jno
xchg
and
xchg
fstpt
mov
pop
adc
rclb
mull
push
xchg
rcll
inc
push
pop
push
mov
aaa
mov
mov
jnp
mul
rcrb
aas
lret
jbe
inc
arpl
pusha
fs
dec
lods
fsubrl
pop
fiaddl
and
aad
orb
test
sbb
sub
or
cmp
test
inc
mov
shr
repnz
scas
std
rcl
test
fwait
lods
in
shl
jmp
rcrl
sti
and
xchg
xchg
dec
jb
bound
sub
out
sarb
imul
pop
lret
mov
mov
aaa
push
lds
lcall
xor
lahf
jl
mov
inc
jecxz
mov
ljmp
inc
dec
jecxz
add
dec
mov
pop
loopne
hlt
mov
sub
es
mov
stos
sub
out
loop
pop
cld
jecxz
inc
inc
pop
inc
push
mov
insl
dec
inc
inc
insl
es
rorl
mov
xlat
insl
cmp
xor
fildl
in
fcmovbe
mov
fs
adc
jno
mov
xor
push
filds
scas
xchg
pop
movsl
cmp
cltd
daa
sbb
in
scas
mov
icebp
or
push
mov
add
sub
sarl
or
jmp
sbb
loopne
pop
test
lods
jl
dec
test
shll
pop
repnz
fdivrs
ss
lock
mov
jbe
mov
pop
stos
into
clc
xchg
cld
ret
pushl
sbb
sub
inc
mov
jmp
outsl
pop
or
xchg
gs
or
pop
cmp
daa
fstpl
mov
js
je
test
dec
jl
xchg
jp
mov
mov
insl
inc
in
ret
jg
inc
lods
dec
add
imul
inc
push
sub
fldenv
lea
cmpsb
push
cmp
add
icebp
xlat
mov
sar
jnp
xchg
mov
outsl
repnz
jp
js
or
push
lcall
movsl
pop
xchg
daa
pusha
and
out
mov
hlt
sbb
movsb
test
add
js
hlt
lods
fisttpll
or
sub
cmp
inc
imul
mov
or
cmp
cmpsb
inc
xor
inc
lock
cmp
lods
sbb
mov
add
jg
add
inc
daa
xor
in
jae
fwait
mov
imul
hlt
or
lret
inc
enter
adc
mov
push
sub
rcll
mov
mov
lods
rcl
cltd
dec
leave
loop
cmp
pop
sbb
pop
mov
jmp
inc
or
stos
movsl
out
imul
imul
sbb
mov
push
pop
je
xor
xchg
dec
mov
jbe
pop
outsl
add
ja
or
push
popf
jecxz
addr16
aaa
hlt
push
outsb
push
int
int3
cmp
jb
or
push
push
arpl
repz
dec
sbb
fidivrs
sub
mov
add
push
lcall
cmp
outsl
andl
sbb
in
xor
push
aaa
sbb
pop
push
and
movsl
inc
outsl
push
inc
jne
cmc
movsb
and
dec
test
pushf
pusha
fs
loop
sub
fs
shr
cmp
inc
jno
js
mov
out
scas
jo
cli
add
cwtl
subb
xor
mov
jo
jmp
xchg
cmpsl
ds
sahf
dec
adc
pop
stos
loopne
cld
jl
mov
mov
imul
mov
inc
xchg
movsl
fwait
mov
add
mov
mov
xor
sub
leave
add
pop
ds
and
dec
push
jae
push
loopne
sub
xor
stc
sbb
cmp
bound
loopne
pop
lods
mov
sub
sbbb
jl
sbb
lea
arpl
stc
push
xchg
negl
rcll
or
pop
or
gs
lea
notl
push
sub
adc
insb
add
dec
push
add
pop
in
lea
pop
xlat
dec
and
jno
cmpsb
cmp
mov
jo
add
inc
testl
sub
jge
jp
xchg
lods
adc
adc
lock
sub
jbe
int
cli
lret
xchg
push
loop
mov
aam
or
jmp
clc
sbb
xchg
fdivl
inc
cmp
xor
data16
xchg
mov
andl
cmp
arpl
xchg
hlt
mov
or
adc
pop
add
call
jecxz
mov
shrl
out
aam
cmp
mov
stc
jno
pop
xor
dec
aas
imul
add
je
fwait
paddusb
mov
mov
cli
adc
cmp
dec
jl
ss
jge
push
xchg
pop
in
lods
es
mov
or
pop
fstpt
lock
push
dec
inc
pop
jecxz
and
popf
insl
push
int3
fldt
mov
xchg
popf
jo
xor
in
imul
pusha
xchg
sarb
decb
jno
dec
fstl
cmp
push
cmc
xchg
pop
leave
mov
ljmp
pusha
push
in
cmp
inc
jge
xchg
aaa
test
add
mov
mov
mov
push
sahf
dec
aad
sub
addb
push
push
pusha
mov
mov
stos
in
popf
and
mov
int3
jecxz
fists
test
cltd
push
into
dec
int3
mov
or
xor
pop
or
sti
inc
xor
mov
hlt
xor
pop
pop
shlb
push
ret
in
xor
orl
jmp
push
fdiv
stos
push
dec
jo
icebp
inc
test
pop
jnp
push
ss
sbb
enter
mov
cwtl
nop
xorl
repnz
or
out
aas
sub
pop
movsl
jge
mov
or
jbe
addr16
cmc
sbbl
testl
add
lock
subb
mov
hlt
inc
xor
or
push
daa
xor
cmpsb
sahf
push
mov
push
int
ja
xchg
mov
mov
pushf
and
call
mov
or
outsl
movsb
shll
cwtl
sbb
mov
inc
push
jmp
in
fsubrl
out
push
cmpsb
test
jp
insl
jb
adcb
addr16
dec
add
loop
jno
lock
data16
cwtl
insb
sub
popa
nop
les
clc
push
jbe
push
mov
inc
dec
popa
push
nop
insl
jg
dec
imul
dec
pop
or
rorl
push
xchg
xlat
or
push
fiaddl
pop
loop
nop
dec
xor
pop
sbb
or
cmp
lds
sbb
imul
insl
sti
xchg
ja
and
inc
insb
mov
daa
faddl
iret
mov
jmp
mov
leave
jo
adc
sbbl
add
xchg
push
fldt
push
push
stos
frstor
and
push
testb
or
sbb
ret
cwtl
lock
arpl
and
sub
in
cltd
xor
data16
sub
ds
lods
cmc
mov
ret
fcomip
leave
pop
mov
adc
scas
dec
pop
inc
cmp
xchg
int3
lods
dec
and
cmpsb
mov
pop
gs
adc
cmp
push
sub
xchg
mov
pxor
js
and
int3
add
push
sbb
push
std
pushf
mov
xchg
jg
fstpl
frstor
gs
data16
cltd
test
xor
pop
and
gs
mov
das
mov
lock
aam
rclb
sbb
mov
sti
xor
in
test
leave
sar
insb
mov
add
push
das
dec
lea
lcall
adc
xchg
adcl
outsl
jl
aaa
adc
inc
lret
xchg
call
ret
push
or
mov
in
add
dec
jo
add
add
sub
clc
inc
jb
and
jae
inc
jle
repz
cwtl
fstl
jno
and
pop
sbb
lret
aad
divb
jae
push
movsb
sahf
sti
pop
or
adc
lcall
jbe
in
mov
xchg
inc
xor
int3
cli
cmp
mov
and
fwait
repz
adc
cmpsl
in
pop
stos
aas
out
negb
test
sub
ret
jnp
addr16
test
sbbl
loope
dec
inc
adc
cmp
mov
cltd
scas
mov
push
rorl
xor
sbb
fidivrs
adc
xor
dec
pop
iret
jno
mov
xchg
int
sarb
mov
or
and
sbb
test
and
cmp
mov
stc
dec
int3
inc
mov
iret
loope
xchg
or
jg
pop
int
stc
push
push
mov
dec
into
mov
testb
xchg
cmp
insl
sub
add
into
fpatan
pop
imul
sahf
push
ljmp
add
fdivrs
sti
pop
shll
sub
inc
cmp
jmp
mov
push
adc
mov
outsb
mov
insl
fildl
ret
nop
shrb
and
jp
xchg
pop
jb
out
dec
pop
pop
fsub
in
enter
mov
mov
xchg
roll
andl
cld
mov
std
fisubrl
pusha
and
lods
push
sbb
scas
scas
bound
xchg
adc
jo
data16
sub
in
adc
inc
or
xor
in
pop
aas
mov
mov
cmpsl
lcall
in
movsl
adc
addr16
es
mov
mov
jg
xor
push
popa
iret
hlt
out
loopne
adc
pusha
fcomps
push
aam
jle
pop
xor
push
jne
mov
mov
repnz
in
shl
incb
push
fs
imul
inc
add
jg
and
loop
sti
pushf
adc
pop
pusha
ret
or
xchg
jns
stos
outsb
pushf
ja
lods
scas
stos
out
cmpb
ds
add
call
imul
mov
shrl
jbe
shrb
lret
mov
dec
adcl
jb
lods
imul
insb
inc
lock
sub
and
pop
push
lea
daa
mov
out
dec
call
dec
cmp
xchg
stos
roll
fisttpl
jg
xor
ficompl
pusha
and
repnz
insb
stos
push
fwait
lods
lods
cmpsl
jle
popa
xor
lahf
jl
loop
dec
push
cli
jmp
xlat
adc
add
push
adcb
jp
out
adc
shlb
xchg
sub
mov
jmp
push
leave
jnp
cmp
inc
data16
and
dec
int3
insl
adc
mov
test
ret
jbe
shll
fldenv
cmpb
adc
pop
xor
jl,pt
mov
add
scas
repnz
push
mov
add
inc
mov
inc
adc
jl
and
lret
jne
mov
mov
add
fisttpll
dec
imul
stos
into
test
lret
and
xor
cmc
pop
adc
cld
in
or
pop
or
push
ret
push
sub
aaa
into
xor
arpl
jnp
mov
sub
out
lock
aad
xchg
jge
and
test
ja
loopne
bound
or
arpl
mov
negl
pop
roll
xor
jae
mov
pop
outsb
pushf
add
jo
dec
mov
add
insb
sub
mov
mov
sub
outsb
pop
sbb
imul
mov
imul
insl
loop
pusha
push
imulb
inc
inc
movsl
adc
mov
xchg
movswl
int3
xor
leave
out
sub
lret
repz
cmpsb
mov
push
test
xor
in
push
mov
leave
inc
xlat
xor
mov
in
push
mov
cmp
ss
mov
out
fcoml
loop
pop
lret
in
das
loopne
dec
mov
fwait
daa
pop
hlt
out
add
ficoms
cmpsb
in
inc
jns
inc
rcrb
sub
rcll
ja
xorb
or
lahf
in
rcll
push
ljmp
dec
sahf
out
mov
test
mov
fsubrp
shrb
addb
lcall
fisubs
adc
rcll
adc
enter
push
mov
sbb
jnp
xchg
stos
adc
test
push
call
xchg
adc
mov
jnp
inc
mov
push
das
push
enter
mov
loop
adc
mov
repz
insb
push
inc
add
cmp
or
mov
add
das
daa
shrb
jne
lods
scas
push
jae
dec
iret
popf
mov
fs
cmp
xor
movsl
test
xchg
mov
je
fs
sub
test
loop
dec
lods
into
dec
pop
sbb
and
aam
je
mov
add
jp
xor
xor
out
push
push
xchg
dec
popf
test
inc
out
xor
cltd
sbb
out
movsl
mov
dec
push
pop
sub
ret
bound
jmp
insl
adc
mov
xchg
pop
fcom
or
mov
mov
push
jl
mov
mov
pop
mov
cmpsb
mov
mov
outsb
or
add
popa
jle
sub
fs
push
into
ja
mov
clc
cmc
mov
push
test
sbb
lods
xchg
vpcmpgtw
sub
mov
add
negl
xor
mov
adc
xchg
xor
sbb
cmpl
dec
jb
stos
xor
ret
mov
mov
xchg
stos
iret
fsub
pusha
and
sub
sar
dec
rcr
xorl
lock
mov
mov
add
ret
stc
cmp
sahf
sbb
pop
pop
adc
cmc
push
popa
stos
cwtl
xchg
out
mov
cmp
pop
sbb
cmc
cwtl
add
mov
mov
cmp
arpl
hlt
dec
pop
enter
in
add
mov
cmpsl
mov
push
in
les
pop
test
dec
jp
lcall
and
lret
shrl
icebp
push
movb
mov
bound
sub
test
ficoms
mov
sti
mov
mov
test
dec
pop
call
push
mov
mov
or
xchg
push
lret
cmp
cmp
or
add
pushf
adc
mov
xchg
cs
jecxz
divb
jle
jnp
jecxz
movsb
push
fisttpl
and
repnz
insl
jl
sub
dec
rcll
pop
mov
dec
fadds
sbb
nop
inc
inc
adc
je
and
jge
in
leave
pop
fnstsw
xchg
in
iret
std
daa
push
push
arpl
fimuls
jne
pop
mov
sub
mov
cwtl
sbb
xor
mov
cwtl
jae
sahf
cmpb
inc
and
inc
add
cmp
call
cli
mulb
test
mov
loop
mov
sahf
sbb
outsl
vandnps
xor
or
lock
inc
psubd
ljmp
push
jl
or
sbb
dec
mov
xor
inc
repnz
mov
mov
jp
test
stos
stos
jne
out
decb
loopne
mov
ret
sti
sub
out
data16
mov
jo
mov
push
adc
dec
push
stos
or
and
int3
faddl
neg
testb
in
xchg
movsl
inc
enter
ret
cmp
jl
push
pusha
sar
ds
jae
movsb
xor
and
mov
js
fwait
fwait
jl
xchg
push
icebp
sbb
cli
dec
popa
dec
pushf
xor
sbb
jae
mov
inc
adc
out
xchg
lret
mov
notl
pcmpgtd
mov
out
jecxz
sub
or
inc
xchg
dec
adc
or
mov
out
test
dec
lret
mov
mov
sbb
popf
and
cld
xchg
fcomp
arpl
cmp
rcr
out
mov
add
arpl
stos
lcall
inc
pop
push
testb
adc
adc
or
mov
mov
mov
scas
lock
outsl
pop
loopne
add
and
sbb
das
loop
cmp
mov
push
pop
aad
jo
inc
fsts
cltd
jle
mov
movsb
adc
loop
icebp
outsl
add
mov
movsb
cld
push
pop
and
cs
sbb
add
fdivs
testl
shll
mov
pop
mov
test
outsl
or
test
imul
adc
inc
aad
nop
jecxz
out
sub
into
dec
aas
clc
fistl
jecxz
stc
cmp
push
push
adc
roll
test
pop
pop
pop
les
dec
pop
push
dec
push
scas
jecxz
movb
xor
mov
pop
jb
mov
arpl
ja
cmpl
push
inc
faddl
test
pop
jg
sbb
sbb
cs
scas
sub
icebp
cmp
je
sub
xchg
jecxz
add
and
lea
push
imul
add
or
sbb
pop
mov
push
inc
test
mov
rorb
test
data16
out
arpl
sbb
fs
or
add
movsl
push
push
out
xchg
test
stos
sub
xchg
ljmp
stos
pop
lods
fnstsw
xchg
and
pop
sbb
push
ljmp
inc
loop
xchg
int
pop
clc
xlat
stos
gs
push
mov
lcall
jmp
jo
in
mov
or
data16
js
jne
jno
ss
xor
mov
xor
lcall
mov
sbb
and
sub
out
les
dec
xor
roll
fs
push
dec
push
in
push
mov
rcrl
and
mov
enter
sub
cmc
es
or
dec
lcall
jo
and
stos
sub
orb
inc
fnstcw
pop
xchg
mov
jo
mov
push
add
pop
movsb
jmp
add
push
pop
mov
mov
shll
dec
xlat
scas
mov
repz
xor
sbb
lock
ds
repnz
inc
out
orl
setl
xlat
jecxz
or
jg
xchg
jbe
fsubp
xor
mov
lret
inc
xchg
sub
xor
xchg
imul
fmuls
cmp
pop
cmp
dec
sahf
shrb
mov
in
sub
xor
inc
sbb
sbb
mov
dec
lds
loope
adc
mov
inc
je
scas
pop
push
fmuls
in
cwtl
jge
dec
inc
in
mov
negb
mov
dec
popa
or
data16
cltd
ret
push
xchg
loop
mov
js
mov
stc
jnp
in
popf
jecxz
fs
es
data16
mov
dec
ss
pop
dec
arpl
bnd
ss
pop
add
adcb
adc
pop
cltd
jae
dec
decb
pop
xor
mov
mov
adc
out
daa
xchg
pusha
mov
daa
scas
stos
fcmovu
mov
movsl
add
cmp
mov
and
lods
mov
jno
lods
cmp
addr16
cwtl
ja
xor
adc
fiaddl
jae
jae
dec
or
cmp
push
hlt
pop
fwait
push
dec
notl
jp
add
out
popa
lods
pop
fsubrs
pop
hlt
mov
jmp
mov
sub
inc
ret
push
es
pop
enter
jne
adc
cmp
sub
int3
das
mov
scas
popa
rcl
ja
xor
push
mov
xchg
xchg
pop
xchg
pop
cmp
mov
or
rorb
lahf
test
int3
scas
push
mov
lea
mov
pop
lcall
insl
xor
mov
adc
mov
push
inc
lds
inc
sahf
cmp
or
movsb
not
mov
inc
cwtl
scas
dec
iret
fimull
xor
shl
stos
les
out
scas
sahf
cltd
adc
icebp
xor
mov
mov
aam
pop
adc
pop
loopne
int3
je
cmp
xchg
sbb
mov
imul
push
pop
stc
dec
pop
popf
into
mov
enter
jge
or
inc
push
cli
stc
out
or
sbb
imul
add
jb
sub
iret
fs
insb
jns
movsl
adc
xchg
in
mov
sbb
and
xor
mov
inc
daa
lahf
mov
cmp
and
add
clc
dec
push
xchg
mov
add
pop
pop
push
ss
das
sbb
cmp
stc
stos
mov
ret
into
pushf
aad
enter
push
pushf
lahf
ljmp
xor
das
sarl
adc
pop
je
cmc
sarb
cli
push
jo
movsl
add
jmp
pusha
int3
sahf
mov
out
sahf
xchg
in
jge
cmp
rolb
in
lock
add
inc
jmp
mov
xchg
sbb
mov
jo
cmp
stc
int
cltd
inc
aaa
mov
adc
loope
mov
aad
pop
mov
cmp
rcrl
mov
daa
cmpb
inc
adc
push
hlt
sub
push
sbb
out
cltd
xchg
mov
push
mov
push
addb
sbb
daa
int3
clc
daa
pop
cs
push
loope
test
jns
aaa
call
lahf
xor
inc
lea
pop
mov
jecxz
mov
inc
inc
sbb
cmovp
ds
mov
push
xchg
fimull
sar
addl
and
or
test
jno
sbb
loope
dec
out
push
mov
or
add
lods
js
inc
inc
fsubrs
repnz
sub
inc
mov
movsb
jno
and
jbe
test
out
inc
lea
pop
and
movsb
out
outsb
and
adc
push
imul
push
insl
nop
aad
mov
inc
out
mov
bound
push
push
shrb
clc
cmc
xor
mov
xor
icebp
daa
out
sub
popa
aad
in
das
pop
inc
xchg
daa
jo
das
or
cmc
pop
nop
sub
je
fsubrl
repz
je
outsl
mov
cmc
inc
cmp
out
mov
adc
into
mov
stos
xchg
sbb
pop
xor
into
mov
xor
mov
push
push
and
cmp
mov
loope
xor
cmc
mov
xor
call
lods
pop
add
sub
jge
lret
and
stc
xor
add
fwait
pop
add
call
lods
cltd
xchg
es
stos
dec
or
inc
xor
sahf
cmp
rcrb
push
sub
mov
pusha
loope
jo
loopne
mov
sbb
leave
out
iret
push
popa
adc
mov
xor
mov
mov
cmp
add
push
scas
rcrl
fnstsw
jnp
jae
movl
push
and
in
fidivl
or
std
and
cwtl
sbb
es
xchg
lret
mov
jo
jl
icebp
xor
lret
dec
cmpsb
mov
adc
pushf
cmpsb
cmp
mov
pop
dec
cmp
jg
fs
xor
movsb
out
aam
sbb
cld
dec
push
jmp
inc
adc
arpl
sub
xchg
sarl
add
clc
and
outsb
xchg
add
movsb
inc
addl
les
dec
ds
adc
cmp
pop
sbb
enter
xor
or
jge
int
jbe
mov
dec
fisubs
in
decl
sar
or
inc
sbb
xor
jb
aam
rcrb
or
sbb
stc
std
and
stc
push
cld
lock
jg
adc
int3
imul
lock
or
mov
loopne
mov
fidivrs
fildl
push
imul
stos
stos
xor
jmp
add
addr16
cld
adc
push
rcl
xor
movsb
dec
push
xchg
fs
mov
push
decl
ljmp
xchg
mov
xor
addr16
leave
subl
xchg
push
das
int3
in
fcmovne
js
push
in
add
or
std
add
inc
push
or
inc
test
in
int
lret
sub
subl
ss
leave
mov
sbb
sarl
xchg
jmp
add
sbb
lods
lret
lahf
mov
pop
aam
xor
scas
or
hlt
and
testb
rcrb
les
adc
js
mov
clc
inc
testl
sub
std
stc
in
les
dec
xlat
push
hlt
mov
gs
sub
xchg
and
loope
bound
outsl
andb
loope
or
or
inc
mov
xor
leave
lahf
dec
dec
push
cli
jge
jl
into
lds
fnstcw
push
fnstsw
jle
push
out
jbe
adc
cmc
xchg
mov
mov
fs
cmp
adc
out
adc
jg
stos
sarb
cmp
jnp
push
sbb
xchg
mov
mov
movsl
push
lods
cmpb
mov
bound
orl
int
arpl
and
mov
lret
pop
das
into
sub
mov
idivl
push
arpl
sti
lahf
cmpsb
popl
cmp
mov
jns
mov
jns
in
xlat
mov
repz
mov
rclb
dec
cmp
push
notb
outsl
sahf
jb
jns
call
cld
clc
xchg
fildll
roll
iret
in
dec
es
xor
cmp
adc
sub
mov
mov
call
movl
jne
xor
repnz
xor
imul
scas
and
arpl
cmp
aam
mov
jae
fildl
mov
std
popf
push
popa
shl
imull
ja
out
gs
ss
popf
dec
sbb
test
mov
les
repnz
jo
lods
jno
sub
mov
outsb
jg
lds
mov
xchg
sbb
push
int
pop
lahf
movl
movsl
xor
pushf
and
mov
pop
add
cld
add
add
icebp
cltd
or
cltd
xor
sti
xchg
sub
cmp
add
inc
pop
pop
enter
xchg
mov
jl
mov
mov
push
push
cmp
clc
lea
ljmp
fcomp
mov
adc
cmc
jne
adc
add
or
in
popa
jns
outsb
daa
and
aaa
push
shrl
sbb
aaa
xchg
movsl
jbe
push
adc
sbb
or
push
push
cmpsl
or
addr16
pop
pushf
xchg
stos
or
inc
pop
adc
shll
xor
shl
jp
pop
stos
cmp
stos
in
repz
sub
xlat
or
iret
test
sub
adc
iret
sbb
js
pop
lret
test
and
dec
cld
popf
scas
mov
inc
dec
mov
mov
je
ljmp
xor
push
repz
or
add
jnp
jne
mov
insl
or
or
test
inc
sahf
sub
test
aas
xor
fists
mov
aam
cmp
adc
xorb
mov
cmpsb
aaa
adc
cs
xchg
insl
bound
mov
inc
adc
outsl
pop
mov
popf
stos
ja
dec
fwait
xchg
clc
cmp
jmp
je
mov
inc
or
call
mov
jae
mov
call
pusha
or
mov
pop
cld
hlt
adc
pop
test
iret
pop
aam
xchg
jge
hlt
inc
stos
pop
adc
rorl
lods
cld
lret
cmpsl
jmp
je
pop
shrb
mov
mov
adc
das
pop
sub
out
dec
fdivr
push
xchg
inc
push
mov
push
imulb
test
inc
es
rolb
inc
mov
or
addr16
xlat
push
aam
stos
mov
add
xchg
push
imul
inc
iret
nop
mov
inc
xchg
dec
push
adc
dec
int3
mov
dec
cltd
fnsave
sbb
loope
ja
jle
shll
scas
jmp
adc
lcall
mov
sub
or
cmp
inc
mov
sbb
in
jne
out
pop
inc
loopne
movsl
jno
outsb
push
xchg
ret
dec
push
cli
mov
xor
std
ror
hlt
pop
adc
add
testb
lcall
shr
cmp
test
sub
bndstx
mov
mov
pop
testb
push
mov
bound
jle
int
divb
inc
xor
push
test
jb
stos
sahf
lea
test
inc
movsl
test
cltd
mov
jmp
pushf
mov
xor
pop
pushl
mov
and
or
jmp
xchg
nop
jo
sbb
push
lahf
and
mov
add
mov
es
andl
mov
neg
shrl
je
mov
jecxz
inc
rcrb
add
cwtl
int
jne
dec
neg
add
aad
pop
pop
sbb
insl
mov
push
and
mov
lahf
add
adc
fcomi
pop
mov
cwtl
dec
mov
pop
xor
pop
aam
bound
and
aad
push
jg
test
push
mov
shll
sbb
xor
in
push
loope
and
xchg
adcb
call
aam
push
or
mov
pushf
cmp
xor
inc
cli
fwait
pop
and
fcompl
dec
adc
fcmove
jb
andb
addb
scas
mov
sub
xchg
loop
push
inc
arpl
mov
out
popf
mov
mov
div
lods
dec
hlt
roll
pop
sub
jmp
lea
adc
push
addr16
cwtl
out
mov
nop
lods
inc
testb
xchg
loope
xchg
xor
sti
mov
ret
mov
mov
add
add
dec
ja
repz
pop
push
mov
sbb
pop
dec
and
jmp
jnp
cwtl
repnz
repz
stos
adc
andb
xor
or
or
pop
and
jnp
and
ljmp
jge
mov
imul
lret
sub
fs
test
enter
pop
jp
sub
lcall
xor
mov
add
je
lods
push
lds
out
stos
stc
xchg
dec
mov
sub
pop
mov
int
test
inc
ds
xor
test
xorl
int
add
mov
sbb
jp
inc
repz
inc
iret
and
or
fbld
cmp
les
mov
sub
inc
out
jne,pt
sbb
imul
je
stos
pop
adc
sar
lds
mov
push
scas
loopne
insb
sub
mov
add
int
inc
ljmp
mov
sbb
insl
and
lods
cmc
jle
push
ds
sbb
dec
outsl
into
adc
mov
push
push
enter
add
sub
mov
mov
ja
pushl
sub
and
in
xchg
in
movsb
repnz
xor
adc
add
fnsave
addr16
sbbb
pop
sbb
jle
in
mov
pop
cmpsb
in
mov
jle
adc
xchg
cwtl
nop
cmp
jge
pop
loop
mov
sub
push
sbb
adc
mov
pop
jbe
adc
mov
mov
test
pop
xor
pop
notl
pop
aam
mov
sub
push
push
test
pop
pop
out
sbb
sbb
out
mov
mov
mov
aad
std
daa
cmp
outsb
data16
xor
hlt
mov
sbb
mov
sub
mov
push
loop
sub
clc
sbb
and
cmpsb
in
stc
out
dec
pop
orl
sahf
mov
inc
push
lahf
lods
sbb
push
in
adc
and
popf
pop
hlt
jp
adc
mov
mov
sub
in
outsb
sub
out
inc
jle
push
sti
pop
sub
and
mov
in
jmp
cmp
pushf
xchg
mov
addr16
mov
mov
mov
mov
int3
cli
and
pusha
pop
and
jne
ret
adc
and
shll
call
in
lods
lods
cs
lahf
rclb
push
stos
jo
ja
test
mov
xor
arpl
mov
arpl
decl
lret
mov
lcall
sub
inc
cmovp
pop
jbe
and
inc
incb
mov
sub
or
cli
je
or
pop
adc
sti
push
loope
fisttpll
add
data16
xchg
and
cmp
jg
mov
sahf
sbb
sar
mov
leave
fstl
out
xor
cmp
in
adc
lret
mov
mov
push
pop
add
push
js
fisubrs
sti
rorb
arpl
jns
xchg
dec
rolb
jl
repnz
jmp
repz
shll
insl
fld
and
test
scas
jl
or
roll
ss
fdivrl
shlb
cmp
push
and
orb
cld
lea
inc
cmc
mov
add
adc
fnsave
cmp
mov
js
and
mov
mov
aam
push
sbb
mov
or
fwait
sub
popa
cli
or
aaa
out
outsl
adc
outsb
dec
inc
jmp
pushf
dec
xchg
sarl
dec
jb
fsubr
test
sub
push
inc
in
popa
add
cmp
fdiv
add
loop
insl
or
mov
jae
cld
jbe
aaa
scas
loope
insl
and
ljmp
ljmp
shrl
mov
scas
cmp
xor
popa
jae
insb
aas
push
pop
inc
xor
fs
push
mov
push
std
mov
ds
mov
jg
inc
iret
test
int3
dec
or
fnstcw
xchg
add
fadds
lods
in
push
add
mov
push
inc
leave
and
xor
mov
sbb
gs
pop
imul
add
popf
mov
jge
leave
ja
fs
fimull
mov
lcall
mov
mov
add
cmp
js
in
sbb
mov
mov
mov
pop
iret
xchg
add
add
inc
pop
sub
cmp
jno
test
shrb
jge
ds
cs
lds
addr16
mov
or
xor
mov
out
lods
push
xchg
xchg
sahf
bound
cmpsb
mov
xchg
je
sub
inc
dec
outsb
xchg
fs
pop
ret
mov
inc
cltd
sbb
mov
daa
dec
shll
and
movsl
mov
fisttps
lock
lahf
mov
pop
popa
fcompl
sub
pop
cmp
and
cmp
in
dec
jne
add
inc
sub
jge
xor
fdivs
dec
ja
mov
test
insl
movsl
fldl
cs
popf
pushl
mull
ret
jmp
orl
mov
fstl
sub
pusha
push
sub
and
mov
inc
add
jnp
lahf
sbb
mov
lahf
xor
pusha
jle
cs
ss
sub
sub
add
cmp
test
ss
sbb
mov
popa
sbb
les
xchg
fwait
dec
mov
xchg
popa
in
out
daa
shll
setge
test
enter
in
or
sub
sbb
lds
popa
mov
jae
mov
fistps
sbb
and
mov
lods
mov
push
lock
sub
lock
cs
jae
ljmp
sti
dec
cmpsl
mov
test
cld
sti
adc
test
push
mov
popf
mov
scas
xchg
js
push
ret
inc
jp
mov
ds
mov
mov
sub
xlat
mov
pop
xchg
test
popf
imul
pop
and
int3
jmp
ret
cmp
test
xor
jns
cmp
fs
xorb
mov
push
inc
loopne
scas
push
push
add
hlt
out
and
gs
hlt
jne
sbb
cmpsl
insl
rcrb
lods
fcom
pop
test
add
aad
inc
pop
xchg
mov
mov
jo
movsb
pushf
ss
cmc
lret
jmp
sub
sub
mov
cltd
fwait
lahf
std
jnp
xor
lcall
jecxz
int3
add
jnp
push
in
ss
cmpsb
jo
shll
push
push
mov
mov
cmpsb
out
add
mov
mov
cltd
fstpl
inc
inc
sub
les
xchg
mov
mov
mov
jb
dec
or
imul
sahf
imul
lahf
jmp
out
aam
pop
mov
aaa
mov
mov
jb
mov
icebp
adc
push
xchg
movsl
or
jecxz
mov
insb
adc
gs
mov
dec
pop
dec
mov
sub
cld
out
xchg
jnp
icebp
mov
fidivrl
mov
stos
sub
xor
mov
cld
rorb
lfs
movaps
sarb
lods
or
xchg
lea
sbb
push
xchg
jmp
ret
out
mov
bound
into
mov
mov
in
jmp
mov
inc
pop
in
stos
pop
push
cmp
or
in
test
jne
pop
pop
xor
mov
shl
mov
inc
mov
adc
jne
hlt
adc
mov
sub
inc
mov
mov
movsl
lret
iret
cli
mov
iret
out
pop
mov
jge
xchg
ret
loop
int3
push
xorb
add
scas
imul
lret
ror
rorl
mov
jne
push
jg
icebp
cli
sub
jmp
cli
clc
sub
shrl
sub
xchg
pusha
scas
inc
in
pushf
aaa
mov
mov
xchg
sbb
lods
mov
mov
pop
test
push
enter
lods
cmc
lock
aas
xchg
fstps
mov
imul
push
pop
hlt
cltd
xchg
or
pop
jecxz
xchg
pop
fwait
jp
insb
cmpb
shll
hlt
mov
scas
adc
fs
mov
std
mov
std
fnstenv
btr
and
mov
ficoml
lods
leave
and
gs
shl
ljmp
sub
addr16
and
inc
je
push
and
mov
jno
dec
rorb
nop
mov
xorb
je
push
and
inc
psrld
xchg
scas
sbb
out
cmp
loopne
out
jecxz
pop
out
jne
xor
or
daa
scas
loope
push
pop
mov
add
push
ljmp
push
inc
shlb
cmp
mov
mov
mov
cltd
popa
jne
pop
cltd
xlat
pop
xchg
xor
pop
mov
shrb
sbb
cmp
mov
xchg
jge
bound
push
pmulhw
cmpsl
imul
cs
push
sbb
push
hlt
js
mov
push
ret
cmpsb
scas
cmp
mov
mov
jns
sub
cmp
bound
and
cmp
leave
fs
inc
sbb
mov
fisubrl
adc
dec
inc
aad
mov
adc
cmp
xchg
add
test
mov
gs
mov
shl
test
cltd
outsl
dec
lock
pop
mov
or
fimull
stc
in
xchg
movsb
mov
mov
daa
faddl
cmp
pop
inc
mov
cmp
insb
test
sbb
repnz
pop
cltd
aas
fisttps
xor
pop
mov
pop
rcl
mov
mov
lds
lcall
push
adc
les
pushf
daa
xchg
jbe
pop
cmp
in
sub
push
mov
jb
lahf
inc
fs
scas
adc
int3
xlat
stos
add
cmpl
inc
insb
scas
out
lods
repz
push
mov
cs
inc
xlat
outsb
sti
inc
add
getsec
arpl
xor
ficoml
cmp
or
lret
add
rorb
fcmovnb
adc
stos
in
imul
push
call
and
sub
fs
dec
divl
xchg
popf
lea
adc
and
cmpsb
dec
push
fisubs
scas
mov
int3
mov
dec
into
stos
and
sbb
out
xchg
call
push
xchg
jge
and
or
push
jmp
fimuls
and
mov
ret
mov
dec
cwtl
out
jp
lret
xor
test
push
add
mov
or
nop
or
or
or
inc
dec
std
imull
nop
push
inc
and
and
adc
rcll
ss
cwtl
jp
or
jg
popa
lea
stos
sub
rcrl
jns
adc
into
or
fbstp
fisubrs
jae
add
pop
nop
inc
xor
loopne
mov
mov
enter
arpl
pushl
push
pop
out
or
or
mov
cli
sub
cwtl
mov
xchg
sbb
xor
sarl
dec
lods
mov
mov
jb
sahf
inc
sbb
lahf
mov
fwait
pop
xor
xlat
std
jecxz
stos
data16
push
lret
sub
rcll
mov
dec
enter
mov
testl
push
sbb
fsubr
les
mov
or
mov
ds
pop
mov
insb
pusha
sbb
cmp
dec
inc
cmp
mov
pop
iret
sub
xchg
rorl
movsl
xchg
fwait
mov
jo
shrb
bnd
hlt
mov
pop
cmp
jl
or
stc
push
into
xor
xor
push
cmpsl
mov
jg
pusha
sub
mov
push
and
adc
or
cs
data16
in
dec
jmp
stc
or
mov
mov
jmp
cmp
or
aaa
sbb
jno
dec
jle
xchg
xchg
shr
mov
cmp
lahf
mov
push
loopne
lcall
ret
jb
shlb
pop
cmp
add
cmp
cltd
stc
data16
sub
scas
ucomiss
dec
add
push
mov
in
mov
lock
pop
lahf
in
jno
and
push
movzbl
add
adc
ret
add
ret
pop
sbb
jecxz
test
lods
xchg
test
xchg
add
jo
subl
imul
add
ljmp
mov
xchg
mov
add
lret
adc
fs
popf
mov
sub
fldl
jae
cmp
movsl
subl
sub
add
mov
add
sub
jge
lods
push
popa
repnz
cmp
mov
inc
lods
pop
sub
push
test
popw
pop
dec
lds
and
xchg
gs
pusha
push
daa
push
pop
inc
stos
xor
inc
lea
shll
mov
sub
lret
add
inc
dec
nop
push
jbe
scas
loopne
hlt
mov
xor
mov
jg
jp
ljmp
mov
mov
sbb
cmc
daa
dec
nop
dec
movsb
push
inc
fs
repnz
cli
push
jecxz
shlb
lods
filds
jge
push
pop
out
dec
jle
xchg
and
sbb
arpl
pusha
cltd
jmp
js
inc
mov
das
add
int
in
xor
pop
cmp
jmp
dec
mov
mov
or
fcmovnb
push
adcb
lods
push
mov
cmpsb
cld
hlt
push
mov
and
icebp
xchg
jae
fistpl
xor
rcll
sarb
stc
test
sbb
pop
jae
xlat
scas
test
inc
inc
lcall
test
pop
push
orl
data16
xchg
push
shll
idiv
cli
inc
insb
test
psrld
mov
lea
mov
std
mov
jl
sbb
aad
sub
add
mov
xchg
fbstp
sbb
in
add
push
mov
mov
mov
aaa
push
mov
popf
int3
ja
or
xor
cmpsb
add
jb
adc
stc
arpl
mov
pop
sbb
or
jmp
jb
cmpsl
sub
sbb
xchg
stos
sub
mov
pop
push
test
cmc
dec
repnz
lods
jg
ljmp
cmc
addb
ret
cmpsb
jge
jg
xor
pop
jo
mov
mov
repz
iret
adc
dec
ja
jae
push
std
in
jb
pop
test
jno
mov
jae
ret
fidivl
mov
add
or
mov
stos
jbe
dec
shrl
push
mov
nop
stos
cmpsb
xor
adc
inc
pop
and
nop
scas
mov
jb
sub
sub
sub
sub
dec
mov
xchg
mov
and
push
test
inc
out
lds
mov
pop
sub
cmpsb
sub
cmpsl
dec
out
push
iret
lea
leave
popf
lcall
push
mov
sbb
add
loope
dec
pop
fists
roll
call
fcoms
mov
mov
in
push
into
dec
out
cld
add
movsb
add
mov
or
das
cmpsb
mov
scas
lcall
adc
push
or
inc
push
rol
lcall
dec
cmp
cwtl
mov
mov
aas
push
cmp
sbb
adcl
ja
mov
loope
xchg
xchg
push
mov
xor
movsb
add
add
inc
std
push
xor
xor
call
pop
mov
aas
inc
cmp
cwtl
ret
repnz
sbb
xchg
idivb
clc
addb
mov
add
mov
icebp
fildll
or
dec
popf
bound
fstps
gs
enter
rclb
mov
pop
arpl
jne
fcompl
roll
std
cwtl
out
mov
inc
nop
popa
lock
cmp
imul
mov
dec
jne
popf
test
roll
push
iret
pushf
dec
jge
aas
ljmp
in
mov
mov
sbb
sti
jl
dec
out
repnz
xor
cmpb
leave
pop
subl
adc
cmpb
mov
movsb
dec
insl
adc
insb
pop
mov
insb
aad
lea
and
jno
xor
sti
stos
insb
xchg
xchg
fimuls
dec
lods
xchg
or
jns
ffree
cmpsb
in
out
jl
xor
scas
mov
ss
jae
sub
pop
or
fcoms
lcall
sub
xor
nop
fs
jg
nop
aam
pop
xchg
negb
push
out
and
push
jo
sahf
ror
push
mov
adc
aas
xor
or
ret
xchg
leave
mov
mov
adc
fldcw
dec
sub
push
xor
insl
dec
mov
dec
push
cwtl
push
aas
stos
or
mull
cs
inc
in
test
pop
mov
shl
clc
mov
fcompl
imul
mov
jno
dec
movsl
jns
jns
imul
clc
popa
push
sbb
xchg
jnp
data16
movsl
inc
add
in
mov
incl
push
xor
inc
cmc
inc
setp
mov
jle
cld
das
sbb
jnp
fiaddl
jp
pop
pop
push
je
cmp
add
xchg
cwtl
push
movsb
mov
mov
movsb
sbb
rorb
fpatan
int3
jge
addb
mov
sahf
popa
mov
jl
pop
xor
lcall
mov
sbb
sahf
xor
pop
repnz
jecxz
adc
xchg
add
fwait
sbb
test
add
ds
stos
ds
mov
mov
fwait
cmp
ds
repnz
scas
lret
fisubrl
fisubrs
arpl
mov
test
and
push
inc
dec
jecxz
fists
dec
in
mov
xchg
cltd
leave
mov
inc
add
hlt
mov
lock
add
push
rclb
out
es
shrl
dec
sbb
push
or
inc
sti
push
outsb
movsb
lret
push
insl
adc
test
repnz
andl
adc
inc
je
dec
inc
in
pop
mov
fbstp
adcb
rcrb
mov
jge
pop
push
int
adc
dec
sbb
adc
or
or
pop
ss
ss
push
rolb
int
xor
push
lcall
ds
test
jle
mov
pop
roll
cs
push
in
add
ja
and
add
jae
fiadds
xor
mov
addl
mov
test
push
push
fcomps
mov
popf
repnz
call
insb
lret
flds
sbb
add
dec
add
shll
push
testb
rcrb
aam
popa
mov
xlat
loopne
outsb
xchg
pop
or
mov
test
jg
xchg
js
xchg
ret
and
aad
add
lret
rclb
and
shlb
jno
mov
cmp
decl
and
dec
or
lds
xor
out
jge
out
jecxz
pop
sub
add
fs
in
stos
popf
xchg
aas
repz
shll
mov
fnstcw
dec
outsl
sti
subl
jmp
xlat
mov
or
fwait
cmp
outsb
mov
xchg
in
xchg
ret
js
jns
nop
lds
out
and
arpl
in
pop
mov
es
dec
imul
or
aaa
jmp
gs
fldt
out
mov
pop
addr16
scas
jmp
mov
aad
hlt
push
and
or
in
sahf
test
inc
sbb
movsb
and
jns
inc
pop
xor
sbb
fldl
jp
mov
jmp
dec
in
imul
fwait
lea
aad
and
jne
mov
insb
les
gs
arpl
push
lcall
fsub
or
filds
test
fwait
jo
mov
enter
stos
and
icebp
iret
inc
ret
insb
rcll
icebp
hlt
pop
mov
cltd
fmul
mov
jo
fsubs
adc
cli
or
and
call
mov
jno
sbb
mov
pop
add
lea
push
and
sbb
filds
into
stos
inc
lea
inc
cld
pop
ficoms
shlb
aas
mov
insl
mov
xchg
inc
adc
sub
aas
lea
test
mov
test
mov
push
rcr
adc
sub
jmp
loope
lea
movsl
imul
dec
int3
aad
lea
es
xor
addr16
orl
xor
fwait
sub
mov
push
ss
ja
ja
shl
sbb
ret
mov
push
orb
lods
inc
orb
out
push
sub
inc
pop
sarl
cmp
or
push
inc
cmp
xor
sahf
xchg
cmc
sub
js
mov
inc
dec
scas
roll
inc
pushf
mov
sbb
mov
lahf
lock
lret
mov
fsubrl
and
sbbb
sbb
mov
dec
add
jno
adc
push
cmp
shll
or
cmp
daa
nop
shl
sbb
movb
scas
sti
fidivrs
sahf
or
mov
aad
shll
aas
out
mull
pop
bound
aad
mov
adc
xchg
test
fnsave
jne
out
jl
inc
rolb
adc
and
inc
bound
sub
xchg
and
xor
mov
mov
inc
add
lahf
adc
ret
lret
or
movsb
mov
dec
xchg
sub
add
lret
es
nop
and
push
sub
mov
daa
and
popa
xor
fs
inc
pop
ss
data16
scas
mov
cmpsl
mov
nop
mov
into
push
push
out
dec
push
ffreep
push
pushf
pop
adc
and
inc
and
push
fs
xchg
inc
ret
loope
outsl
xor
sub
jb
push
inc
dec
fidivrs
mov
xlat
mov
stos
jbe
popa
cmpsb
cmp
test
sub
test
mov
mov
addr16
popa
mov
cmc
or
test
rorl
adc
dec
push
pusha
dec
daa
xlat
xor
mov
repz
call
jge
addb
sbb
or
push
out
loope
out
mov
inc
mov
enter
push
imul
xor
ja
outsl
ja
in
xchg
daa
stos
mov
dec
sbb
cmpsb
mov
adc
inc
sub
in
movsl
mov
fildl
xchg
in
test
fs
mov
or
jecxz
movl
ret
push
jge
pop
pop
das
mov
test
cmp
push
stos
xchg
dec
pop
cld
cs
cmp
je
movsb
lret
jo
stc
out
push
popf
jmp
cmp
dec
adcl
mov
mov
punpcklwd
adc
fistpl
aad
pop
icebp
stc
das
mov
or
sub
dec
and
mov
or
int3
push
mov
lock
mov
movsl
mov
sahf
in
das
cwtl
shll
std
lods
int
dec
adc
inc
cmp
mov
xchg
iret
push
add
test
jae
xchg
rorl
add
repz
adc
push
outsb
out
jns
mov
xchg
lret
iret
add
cmpsb
mov
imul
cmpl
hlt
dec
test
cmpsb
enter
outsb
lock
leave
xor
adc
mov
sbb
fsubp
loopne
loope
daa
or
or
adc
sub
xor
in
in
mov
cmpsb
jl,pn
hlt
sahf
cmpsb
sub
orb
outsb
pop
popa
cmp
inc
xchg
andb
test
inc
in
loope
pop
and
js
arpl
loope
fisubs
out
repz
cmpsb
imul
and
push
je
add
outsb
jmp
inc
mov
or
pop
in
or
xchg
lock
icebp
jge
lea
cltd
shrl
pusha
stc
sbb
cs
or
test
rorl
sbb
int
ljmp
dec
xor
leave
or
lea
or
and
sti
and
inc
dec
cs
xor
pop
lea
js
add
jbe
inc
sub
sub
inc
dec
negb
jno
outsl
pop
lods
mov
roll
cmp
loop
cmpsb
mov
push
loope
cmpsb
out
rcrl
xor
mov
iret
mov
add
fdivs
rcl
and
adc
pop
out
test
xor
xchg
ret
mov
leave
and
mov
rclb
dec
loop
test
fcmovne
out
mov
jns
leave
loope
shlb
int
insb
xor
jl
cmpsb
mov
mov
sub
mov
mov
test
sub
adc
jno
push
clc
sub
cmp
dec
popa
stos
push
les
xchg
aas
mov
jae
add
cmp
pop
xlat
inc
mov
or
push
cmp
xchg
xlat
jmp
lods
fnsave
mov
scas
mov
fistps
mov
loop
pushf
xor
xor
hlt
adc
add
sbbl
mov
movsb
pop
inc
outsb
test
sarl
cmp
push
mov
testl
push
jo
adc
xorb
sbb
pop
push
pop
or
sbb
nop
loopne
xor
dec
loope
sub
fsubl
mov
cs
mov
inc
inc
add
and
fwait
mov
pop
mov
loope
dec
repz
clc
or
or
sub
test
cmp
ror
inc
iret
dec
jbe
or
aas
jmp
cmp
setg
sbb
jle
loope
sahf
movsb
jecxz
cwtl
and
cmp
lahf
inc
outsb
jno
inc
psllw
out
sbb
aad
sub
push
fisubl
mov
fsubrs
fiadds
loope
stos
imulb
mov
push
dec
fs
inc
std
test
testb
imul
enter
lds
xorb
add
sub
sbb
outsl
imul
pop
popa
jg
or
mov
pop
jns
les
fidivrs
xchg
mov
cmpsl
xchg
adc
ja
sarl
lcall
rorb
dec
stos
shll
cmp
jle
sub
jo
bound
xchg
ds
or
loope
mov
daa
lods
push
cmp
inc
popf
jno
and
push
jbe
ret
notl
mov
fisttpl
add
or
outsl
inc
insl
sar
dec
test
pop
int3
hlt
inc
mov
sub
inc
fcoms
imul
push
jns
jne
nop
mov
rcrb
popf
imul
bound
cmpsb
sbb
insl
mov
sarb
das
lock
mov
sub
cmove
and
ret
fs
in
jb
lret
ret
cwtl
inc
movsl
fidivl
rol
adc
xor
mov
xor
gs
out
cmp
jmp
out
jno
out
shrb
push
les
das
pop
into
adc
jbe
std
movsb
jl
push
mov
mov
jae
fsubrs
push
in
call
into
das
mov
dec
jp
cmpps
push
xor
and
insb
sub
add
cmp
cmp
nop
ret
in
daa
daa
jae
rcl
filds
jo
jle
fnstsw
push
test
fsubrs
jb
out
pop
push
ljmpw
sub
mov
dec
and
fisubs
sub
fidivl
lcall
cmpsl
test
push
jmp
or
pop
out
loop
mov
or
outsb
imul
mov
xor
cmp
ret
dec
jl
clc
mov
fsubl
dec
push
jecxz
shll
lcall
mov
fimull
aaa
repz
cli
pop
lods
fcomps
fwait
add
and
mov
adc
loop
mov
add
adc
mov
pop
orb
leave
push
mov
dec
popa
dec
fwait
add
je
dec
jl
pop
mov
sub
xchg
daa
xor
adc
push
insb
cmpsl
testb
and
xor
inc
lock
sbb
aad
mov
clc
pop
xor
fsubr
in
shlb
cmp
pop
inc
add
cmp
sbb
lahf
or
push
sbb
mov
lret
push
adc
insl
cmp
cltd
enter
push
jo
dec
cmp
divl
inc
mov
push
pop
in
push
lock
lea
gs
pusha
inc
push
out
int3
out
lds
and
xchg
sub
mov
lock
pop
cmp
dec
jb
push
mov
add
xor
push
test
arpl
scas
xor
aaa
xchg
add
sbb
pop
xor
sbb
icebp
adc
cmpsl
js
xchg
cmp
dec
jl
jae
push
es
pop
loopne
in
dec
push
fsubr
gs
mov
and
flds
popa
mov
push
in
out
xchg
jnp
push
ret
or
daa
xor
pop
mov
push
jmp
enter
push
cmp
cltd
sbb
lds
xchg
enter
gs
mov
shll
add
lret
ss
call
adc
push
dec
push
jae
dec
cmp
mov
arpl
or
cmp
push
cltd
mov
outsl
push
xchg
dec
xor
dec
inc
xchg
stos
in
pop
imul
mov
les
pop
in
loope
and
dec
jno
pop
mov
mov
or
filds
inc
test
clc
shlb
pusha
mov
icebp
repnz
fstps
cmpsb
fstp
pushf
jns
jecxz
xor
mov
jo
adc
aaa
fisttpl
insl
push
mov
jo
mov
push
int
stos
adc
loop
test
or
pushf
lods
push
aaa
call
push
sbbl
xchg
fnsave
aam
std
jmp
sbb
jg
pop
cmp
adc
cmpsb
adc
lock
lods
jnp
ret
pop
pop
cmpsb
xchg
xchg
ret
jno
cli
lret
cmp
mov
adc
push
out
jno
jo
add
in
ss
sub
inc
sub
out
dec
hlt
iret
faddl
mov
pop
dec
adc
cmp
cmc
pop
sub
fsubrs
xor
lcall
pushf
cmpb
std
and
shll
lock
pop
out
and
repnz
lcall
xor
and
stos
xor
mov
rorl
sub
scas
jne
push
out
into
adc
or
in
loop
mov
adc
repnz
push
lods
xchg
aas
sbb
dec
adc
push
dec
xchg
push
shrb
and
lds
mov
inc
xchg
sub
mov
mov
sbb
push
out
jns
adc
insl
pop
nop
lret
shr
xor
push
roll
jbe
ret
shrl
sub
cltd
lds
jb
cli
xchg
sbb
jne
repnz
fadd
les
repnz
mov
dec
scas
push
cmc
xchg
dec
push
cmc
mov
das
push
inc
and
lods
xor
sub
lock
clc
imul
push
push
fisttps
testl
lods
or
sti
into
loop
mov
push
dec
jne
lcall
call
mov
arpl
dec
sbb
mov
or
inc
or
data16
or
insb
je
test
mov
mov
lods
push
adc
pop
or
xchg
inc
jne
sub
push
lods
imul
lds
aad
lcall
sub
int3
ficoml
inc
shl
int3
data16
cmpsb
mov
pop
mov
inc
sbb
in
ds
rorl
jne
fdivrp
mov
call
sub
adc
sub
xchg
pop
add
xchg
mov
in
mov
cmpsb
pop
in
jns
jl
xchg
cmpsl
xchg
lcall
ds
inc
cld
aam
cld
es
jno
add
xchg
movsl
mov
adc
lock
sub
aaa
dec
scas
outsb
gs
testb
cmp
cmp
es
mov
xor
divl
ds
cmpsb
push
sbb
jns
test
or
movups
dec
mov
fcoms
into
rcll
adc
ljmp
mov
mov
mov
sbb
jecxz
ja
pop
xchg
cwtl
test
jo
in
xlat
fdivl
sbb
adc
mov
shl
xlat
movsb
mov
mov
ds
repz
add
xchg
adc
leave
pop
ret
dec
lret
out
ljmp
push
movsb
cmpl
das
aas
jl
imul
sub
test
fcomps
adc
or
mov
lods
pop
mov
pop
scas
out
adc
insb
fwait
push
addb
cmpsl
ljmp
ret
icebp
xchg
mov
pop
outsl
mov
dec
les
in
dec
out
mov
fimuls
inc
push
cmpsb
jle
fdivrs
repz
loope
mov
sub
dec
push
into
es
sti
divb
mov
mov
or
fwait
xor
adc
pop
out
pop
xor
xchg
push
cmp
mov
jp
notl
jo
ret
cmp
jp
mov
or
repz
mov
mov
hlt
mov
out
jnp
add
iret
or
fcmovb
mov
ljmp
pop
jno
cmp
xor
sbb
insl
lahf
mov
xor
dec
pop
into
sub
mov
lcall
jmp
cwtl
push
insb
jp
push
mov
mov
push
push
scas
clc
fldt
enter
pop
mov
and
gs
ds
pop
mov
push
aaa
shll
lret
es
adc
pop
dec
add
xor
and
cmp
repz
push
and
scas
jns
ret
sahf
mov
mov
xor
sub
into
push
mov
rol
out
test
test
stc
inc
sub
lods
and
je
dec
add
js
jmp
xor
add
inc
clc
push
ljmp
jg
lods
fidivl
daa
enter
subb
lds
push
bound
lods
add
cmc
or
fistpll
xchg
and
push
pop
fistps
lret
jmp
adc
pop
into
stos
xchg
clc
test
xor
mov
pushw
loope
jnp
enter
jg
pusha
repz
aam
test
jp
inc
mov
mov
lret
arpl
divb
jecxz
js
pop
movsl
sbb
xchg
aaa
cmp
cmp
mov
sub
and
inc
mov
fisubrs
aaa
lret
mov
movsl
in
pop
loopne
cs
stos
push
movsb
push
lret
mov
in
cmp
xchg
sti
lcall
sbb
loop
cwtl
arpl
out
ret
pop
jp
lods
push
push
and
jge
cs
fidivl
adc
stos
out
lods
pop
dec
cmc
movsl
sub
icebp
inc
mov
xchg
jg
loopne
jmp
inc
jmp
add
pop
loopne
or
dec
mov
leave
fs
dec
cmpsl
cmp
adc
or
sbb
mov
addr16
push
mov
xchg
das
xchg
es
adc
in
mov
int
addr16
lods
fsubl
fwait
icebp
inc
cmpb
xchg
stc
rclb
sbb
and
rcr
jo
dec
pusha
movsl
add
mov
ljmp
xchg
mov
mov
repnz
xor
jns
fidivl
sbb
jae
sti
sti
xchg
mov
dec
aad
outsb
into
inc
out
pusha
hlt
popf
sub
xchg
les
dec
mov
mov
sub
mov
js
ret
mov
rep
pop
clc
enter
dec
sub
dec
and
xchg
rol
xlat
inc
pusha
cmp
cmc
push
xor
mov
icebp
rcrl
lock
inc
pop
jns
xchg
movsb
insb
sbb
cmp
ret
jg
int3
cmp
aas
dec
pusha
shrl
push
inc
insb
add
inc
mov
jne
cmp
xchg
hlt
fdivl
sub
mov
imul
inc
dec
push
xchg
arpl
jb
shl
adc
and
into
cmp
push
xor
mov
scas
lahf
outsb
mov
movsl
dec
in
push
fldcw
out
mov
or
aas
lods
out
cwtl
add
icebp
mov
xor
sub
and
xchg
mov
adcb
leave
aaa
fists
stos
pop
sbb
mov
out
or
out
sahf
icebp
jg
xchg
pop
adcb
adc
mov
xor
jo
sbb
roll
dec
jbe
adc
dec
fwait
pop
xor
loope
push
popf
rol
out
add
sbb
aam
add
ror
lds
cwtl
xor
mov
adc
call
jnp
xlat
add
jbe
push
xlat
call
cmpb
sub
scas
mov
and
movsl
push
lcall
cli
test
adc
cwtl
into
mov
push
cmc
sti
and
sbb
addr16
add
jne
or
ljmp
mov
push
mov
push
xchg
push
cmp
cmp
cwtl
or
dec
adc
cltd
add
nop
adc
mov
divl
aad
out
push
cmpsb
jg
pop
fisttpll
and
pop
jnp
push
xchg
mov
scas
lahf
cli
jg
jnp
dec
jne
repnz
xor
sub
adc
xor
cmpsb
xchg
mov
mov
or
jg
stc
xlat
dec
movsb
dec
or
dec
sub
inc
mov
inc
les
add
fsubs
int3
mov
jne
mov
mov
push
addr16
into
incl
mov
std
adc
jns
jnp
testb
pushf
nop
ror
dec
or
and
in
xchg
lds
lret
mov
in
pop
fstpl
movsl
jmp
clc
je
pop
sub
jno
shrb
add
cld
push
out
mov
mov
inc
xor
push
mov
pminsw
popf
aas
inc
sbb
lods
lret
ljmp
pop
cmp
pusha
jne
movsl
fcompl
mov
pushf
pop
data16
loope
icebp
adc
into
out
dec
adc
add
or
dec
and
repnz
ss
pop
outsb
and
stos
sub
or
and
imul
mov
jle
imul
jb
test
ret
mov
sbb
jl
lahf
xchg
xor
mov
enter
lods
jnp
sub
aad
movsb
sub
fidivrs
gs
subl
xchg
out
push
cmp
ret
in
mov
lds
ss
shl
in
outsl
int
ret
stos
nop
pop
lcall
icebp
je
mov
pop
shlb
jg
leave
xchg
std
mov
sbb
in
nop
jbe
test
loope
aam
jle
sbb
roll
decb
cs
test
mov
xchg
jg
rcl
fiadds
and
xchg
mov
fiaddl
fucomp
leave
cmp
stos
ret
ds
scas
add
mov
sahf
in
and
add
icebp
jmp
xchg
push
adc
cmpsb
mov
out
mov
js
adc
adc
cmpsl
jnp
and
cltd
jo
in
imul
repnz
dec
push
mov
leave
imul
inc
push
ljmp
scas
loopne
xchg
pop
inc
xchg
ret
mov
jl
rorb
in
pop
jp
pop
xchg
or
or
inc
je
lds
pop
xor
xchg
test
inc
test
and
pushf
sub
repz
cwtl
sahf
adc
ds
clc
dec
mov
movsb
xchg
nop
cmp
add
mov
add
inc
jno
sub
xchg
cld
xchg
pop
adc
inc
in
mov
xlat
adc
sbb
int3
outsb
aaa
aam
lods
push
cmp
clc
pusha
dec
jg
xorl
test
stos
ja
or
outsb
jge
arpl
dec
mov
jge
mov
mov
push
je
fdivrs
xor
jmp
inc
rclb
add
mov
mov
sub
pushf
rcrb
xor
dec
lea
cwtl
loope
mov
or
inc
push
mov
and
pop
push
jb
test
xchg
xorb
mov
jmpw
xor
dec
cld
mov
adc
sub
stos
out
cmpsb
cmp
push
mov
or
outsl
insl
xor
ss
mov
cmpsl
mov
in
cmp
sbb
clc
push
repnz
outsl
push
inc
fiadds
and
add
sbb
movsb
je
movsb
inc
das
sub
sbb
xor
mov
lds
out
filds
mov
mov
xchg
adc
add
jo
adc
adc
fadds
mov
int
xchg
out
xor
cmp
enter
push
xchg
xor
inc
outsl
int3
xor
test
mov
pop
push
out
pop
push
xor
and
gs
cmp
das
or
into
in
inc
push
fwait
cld
push
call
fnstenv
jnp
jno
inc
hlt
add
mov
test
sahf
out
notb
clc
stos
mov
leave
jbe
leave
test
or
shll
outsl
push
mov
ljmp
push
sbbl
scas
push
mov
pop
repnz
stc
pop
test
pop
test
adc
xor
mov
push
daa
adc
addr16
or
imul
enter
sbb
mov
jnp
dec
inc
pop
pop
ss
dec
and
and
pop
cmpsb
test
imull
lea
add
dec
mov
mov
xor
push
dec
pop
xchg
bnd
jb
dec
pop
sarb
cmc
repnz
and
dec
mov
xchg
adc
out
and
int
repnz
add
int
scas
outsl
cmpb
std
dec
je
in
jp
cmp
fs
mov
sub
or
jbe
lods
bnd
mov
popa
insl
into
gs
addl
jne
fs
sub
push
mov
imul
push
popa
rep
pop
xlat
inc
loopne
cwtl
inc
imul
sub
imul
fstps
and
lret
push
shl
mov
mov
dec
je
test
fmul
cmp
sahf
mov
aas
pop
xchg
mov
pop
out
and
fs
add
arpl
fcmovnu
rep
mov
jns
mov
loopne
jne
push
movsl
pop
sbb
push
das
jp
jg
js
lods
gs
jg
xchg
testb
mov
fwait
dec
or
aam
and
sahf
stc
out
cwtl
push
popf
adc
addr16
sbbl
test
jno
cmp
inc
jno
mov
sub
out
xor
add
daa
or
mov
jl
pop
sbb
xchg
mull
push
jmp
xor
adc
cmpb
in
jl
xor
xchg
pop
iret
cmpsb
push
adc
imul
mov
push
incl
push
imul
lea
lea
mov
sub
loope
into
add
jnp
int
push
cmc
jge
add
dec
sti
ja
push
pop
jne
pop
sub
jle
pusha
mov
mov
pushf
lea
js
inc
fcomps
lret
cld
popa
xchg
arpl
imul
mov
movsb
leave
add
shrl
mov
sbb
pop
loope
cmp
mov
pop
pop
jge
mov
lcall
insl
jg
dec
push
push
dec
mov
jl
pop
mov
xchg
sbbb
mov
fadds
jl
mov
popl
ja
and
daa
lret
mov
test
cmp
insb
jmp
aas
js
mov
cld
cmp
jno
inc
jmp
dec
mov
push
lock
loop
cmp
jae
jns
scas
pop
test
xor
lret
fidivrl
push
dec
jecxz
xor
pop
push
lock
int
popa
scas
out
mov
andb
jnp
icebp
dec
test
sahf
leave
mov
xchg
jb
int
mulb
add
fildll
je
inc
sub
ja
mov
xchg
dec
popa
dec
push
jmp
mov
test
mov
sbbl
dec
jg
mov
sbb
mov
hlt
mov
xchg
xchg
mov
fstpt
lods
push
rorb
or
and
mov
push
scas
in
sub
cmp
mov
insb
and
imul
addr16
cltd
xor
test
cmp
ljmp
daa
sub
add
cmpsl
push
xlat
jo
repz
push
mov
mov
cwtl
ja
xor
scas
rol
xchg
jnp
test
sbb
add
sub
push
pushf
jge
mov
pusha
inc
add
insb
mov
enter
sahf
aad
mov
icebp
jne
popa
loope
and
add
cmpsl
and
xorl
push
bound
leave
fidivrs
dec
push
adc
xor
rorl
stos
loopne
push
lds
or
xlat
and
inc
jmp
push
cmp
xor
fiadds
decb
mov
pop
sarl
imul
sub
repz
pop
insl
mov
dec
pusha
push
or
scas
mov
pop
loop
aaa
hlt
movsl
push
add
in
lcall
scas
fistps
hlt
mov
sbb
cmp
or
shlb
cwtl
aad
movb
inc
mov
arpl
jb
out
repz
mov
and
out
jmp
sbb
out
mov
xor
fwait
std
rcrb
dec
inc
cltd
test
out
shrl
andnps
and
ljmp
push
mov
mov
pop
mov
adc
mov
adc
lahf
into
jno
nop
mov
sarl
add
push
out
xchg
loopne
cmpsl
repnz
xchg
push
fldt
dec
mov
int
cmpsl
pop
call
loopne
jecxz
mov
pop
ja
push
test
fsubp
sahf
out
mov
pop
lods
mov
push
add
sub
in
sub
stc
or
cmpb
dec
aaa
mov
xrelease
sti
inc
mov
lea
dec
push
scas
or
aas
faddl
and
mov
mov
pusha
add
cmovns
fstpt
mov
pop
jg
sub
sbb
pop
sbb
push
pop
xchg
xchg
jl
aad
fimull
and
ds
lret
stc
cld
lret
add
push
les
lcall
dec
cli
loopne
adc
dec
push
dec
jle
pop
out
sarb
mov
loop
or
jne
sti
into
out
btc
lock
clc
fwait
movsb
ss
dec
pop
mov
mov
leave
cltd
int
lock
shlb
mov
insb
es
ss
sub
cmp
xchg
jmp
rcrl
cmpsb
cmp
dec
lcall
out
int
outsl
xchg
hlt
mov
push
stos
pop
shlb
fistpl
nop
fisttpll
notl
dec
sub
xlat
ja
pop
lret
testb
or
add
cmp
mov
lcall
and
ds
pop
dec
or
pop
jmp
mov
and
lock
push
xchg
mov
dec
sarl
and
xchg
jmp
ds
mov
cmpsl
mov
adc
leave
movsb
aam
jle
call
jne
lcall
ret
bound
call
pop
jb
lret
hlt
loopne
lea
arpl
and
bnd
xchg
push
mov
mov
bound
push
adcb
sbb
inc
nop
xor
mov
insb
lds
psraw
imul
jo
aaa
movsb
add
aam
push
or
lret
ljmp
inc
jp
jb
and
mov
dec
jns
xor
mov
jl
push
mov
in
sub
imul
and
jne
xor
out
int3
ljmp
sahf
inc
fisubrl
mov
test
mov
xor
jp
and
push
mov
popa
lcall
xor
add
inc
sbb
mov
pusha
push
aaa
repz
sub
jne
out
jo
jb
jmp
pop
cmp
les
out
mov
xchg
inc
mov
jb
or
jg
jmp
jmp
pop
repz
cmp
scas
push
adc
fldl
jg
jo
cmp
jo
and
mov
or
and
ret
xchg
insl
xor
mov
inc
imul
mov
in
nop
mov
jns
or
pusha
cmc
pop
subl
mov
inc
scas
cmp
mov
xchg
das
icebp
aaa
or
push
lock
mov
push
repnz
add
xchg
sub
cs
and
mov
dec
mov
and
mov
int3
push
push
xorl
jno
adc
mov
pop
aas
fsubs
jl
xchg
rclb
test
lods
test
cmp
add
lock
adc
push
sti
jle
push
jo
and
into
sub
loop
sub
sbb
jg
mov
mov
and
ret
dec
es
test
out
pop
rorl
jl
cwtl
sar
jns
in
mov
mov
adc
mov
cltd
cmp
jp
xor
push
daa
mov
lret
xor
pop
mov
int
bound
ret
mov
repnz
fwait
addr16
sbb
scas
movsb
repnz
out
adc
sbb
push
xchg
and
inc
or
enter
mov
and
or
sub
cwtl
add
out
mov
sbb
xchg
movsl
mov
loop
mov
ret
dec
cmpsb
iret
and
imul
push
push
lret
leave
xor
jnp
call
aad
mov
xchg
inc
xchg
test
test
push
sub
aaa
nop
dec
sub
and
nop
mov
pushf
arpl
adc
sub
xor
push
icebp
push
imul
ficomps
imul
pop
testl
push
mov
push
in
dec
sub
jp
xor
lea
push
xchg
adc
sahf
mov
or
cmp
mov
adc
xchg
fcoms
adc
xchg
test
test
imul
mov
cmpb
mov
rorl
rorl
push
pusha
out
stc
sbb
push
clc
xchg
xchg
ret
add
mov
in
and
lcall
jbe
pushf
mov
ret
fldenv
cmp
xchg
lahf
mov
cs
pop
clc
jl
inc
fcoms
xor
sub
pop
shl
jp
lods
in
iret
test
jns
sub
mov
es
xchg
sbb
loop
add
test
cmpsb
adc
adc
in
xchg
mov
popf
mov
and
or
jbe
sub
in
mov
test
inc
dec
es
lea
lret
mov
adc
inc
popa
dec
pop
loop
iret
movb
mov
ds
sub
dec
push
cmp
les
sub
ja
movsb
filds
push
mov
icebp
lods
imulb
push
push
adc
fs
and
xchg
dec
pop
nop
mov
mov
sub
push
push
jne
pop
push
dec
fimull
stos
sti
fldt
mov
dec
testl
dec
jbe
mov
inc
lret
mov
dec
insb
xor
fistpl
inc
inc
out
shr
push
cmp
outsb
or
test
mov
inc
xchg
mov
fmuls
addb
les
sti
push
nop
notb
or
addr16
sub
stos
add
cli
push
test
shr
out
nop
cmp
jno
mov
jmp
cwtl
nop
les
push
leave
push
clc
sub
lock
icebp
pop
dec
inc
xor
adc
popa
jecxz
mov
push
dec
fwait
cmp
imulb
push
scas
lcall
pop
jo
ret
jbe
dec
fidivs
push
fmul
rcr
inc
mov
xor
je
mov
cld
xor
fsubl
xor
aas
mov
pop
pop
xor
ss
decl
das
jo
daa
push
push
push
into
int3
es
clc
adc
mov
lret
and
xor
inc
mov
movsl
sbb
push
loop
xchg
test
lock
loop
test
test
add
pop
xchg
jle
lcall
sub
pushf
test
int3
gs
dec
and
or
push
int3
lret
pusha
loop
mov
shl
mov
icebp
pop
mov
push
cmpsb
pop
pop
jp
fnclex
push
push
iret
in
cli
aaa
cs
cmp
inc
or
or
movsl
lds
mov
mov
ss
mov
mov
jno
xor
stc
and
or
xchg
and
pop
mov
imul
ja
inc
roll
push
push
lcall
or
pushf
lahf
push
mov
xchg
dec
xchg
mov
or
fnstsw
xchg
cmp
lcall
mov
mov
pusha
add
faddl
adc
push
mov
cli
cmp
lods
mov
push
jbe,pt
out
lods
aam
popf
mov
negb
sahf
adc
xor
pushf
scas
adc
dec
movsl
ljmp
ljmp
pop
push
insl
xor
sahf
clc
rorb
xor
bound
adc
js
push
push
and
pop
test
movsl
jo
push
rcrl
push
dec
mov
jns
xchg
movsb
divb
adc
les
push
push
adc
or
shrb
in
sbb
xchg
arpl
pop
daa
cltd
mov
les
fcmovnbe
inc
lret
decl
mov
lds
jecxz
pushf
ret
idivl
pusha
mov
in
xchg
inc
sub
dec
fsts
sbb
push
cmpsb
movsb
adc
rcrb
cli
jge
insb
imul
xor
test
stc
mov
repz
xchg
jp
pusha
jmp
inc
sbb
icebp
push
aad
mulb
jb
adc
rorb
data16
lret
xor
inc
xchg
and
imul
push
or
lock
testl
cld
mov
mov
rcll
cmp
test
or
or
js
mov
push
dec
jmp
test
jne
xchg
sbb
insl
mov
loope
sbb
inc
add
and
lds
adc
stos
rcrb
insb
flds
rolb
push
dec
sbb
mov
test
insl
out
ror
mov
repnz
pop
mov
mov
inc
mov
jle
out
adc
mov
and
pop
cwtl
sbb
inc
jbe
mov
and
int3
subb
hlt
rorl
inc
jg
sti
mov
jo
aam
push
testl
xchg
push
test
pop
pop
cmc
adc
dec
push
mov
data16
push
push
xchg
iret
mov
xor
inc
addr16
repnz
push
xchg
pop
xchg
mov
mov
test
ret
push
xchg
xlat
xchg
hlt
pop
or
lahf
mov
push
es
cld
mov
push
nop
adc
iret
addr16
fnstsw
xor
sub
or
jns
das
test
add
popa
inc
shl
cwtl
repnz
sbb
push
es
pop
int
xor
xchg
add
push
xchg
mov
cmp
cmc
gs
and
lret
add
sbb
push
pop
cltd
movsl
ror
lock
xor
push
mov
cmp
mov
adc
or
sbbb
pop
sub
jle
jo
test
xor
xor
aaa
lea
nop
sub
cmpsl
cltd
xor
leave
mov
aaa
fstl
jae
cmp
lret
ja
inc
mov
js
pop
cltd
pusha
and
mov
sub
jns
adc
xor
sbb
fiadds
pop
dec
mov
std
out
addl
int3
pop
jo
into
loop
ret
add
out
out
rcrl
inc
adc
fsubr
gs
dec
pop
pop
or
ret
jl
mov
clc
xchg
sarl
adc
cmpsl
pop
add
xor
mov
push
xchg
out
and
push
les
je
mov
stos
loope
and
int
popf
mov
xchg
repz
push
lret
add
lds
cmpsb
sarl
lds
loope
pop
cs
jb
out
lea
xor
dec
jb
inc
insb
scas
mov
test
cmc
negl
fmuls
sub
mov
pop
loop
adc
test
or
sbb
insb
inc
and
pushf
aam
mov
sar
scas
sub
mov
out
or
cmp
mov
mov
push
add
xor
add
fistpll
mov
sbb
or
sarb
test
adc
mov
adc
xchg
scas
scas
cs
xchg
mov
xchg
sub
pop
mov
adcl
icebp
pop
fisubs
and
jmp
in
fnstcw
sub
in
dec
pop
pop
sbb
sbb
pusha
dec
gs
addb
ret
fwait
pop
sub
mov
stos
cmp
mov
jle
nop
mov
call
orb
roll
aam
and
insl
das
insl
rcr
and
sti
aas
lea
hlt
push
pop
adc
mov
or
jae
cmpps
inc
and
hlt
mov
in
out
data16
popf
or
icebp
jne
push
jnp
pop
es
push
dec
test
pop
ret
push
in
jp
loop
cltd
fdivrs
js
add
xor
jne
xchg
loopne
int
push
xor
out
test
dec
cmp
ljmp
jle
inc
sub
mov
jmp
or
out
cmp
push
and
cs
xchg
popa
pop
pushf
pop
sahf
mov
pop
mov
pop
pop
cwtl
stos
hlt
add
push
addr16
cli
xchg
xchg
inc
mov
push
fsts
add
rorl
push
jmp
pop
push
js
mov
or
stos
insb
sub
inc
pushf
add
enter
dec
and
cs
pop
xchg
lea
sub
mov
sub
addb
enter
aam
mov
sub
cmp
je
movsl
mov
fwait
pop
ret
pop
and
dec
ss
faddl
inc
lahf
aad
ja
lcall
xor
push
test
pop
popa
push
lret
int
push
jne
cmpl
lea
arpl
push
stos
out
and
inc
mov
popf
popa
cld
rcll
dec
clc
mov
sbb
mov
mov
xchg
inc
pop
outsb
adcb
cmp
mov
mov
fisubrl
out
es
pop
fldt
sbb
xor
mov
aad
inc
pushf
shll
xor
scas
cli
stos
push
out
testb
push
cmp
and
ret
sbb
dec
sbb
adc
icebp
xchg
adc
xchg
sarb
jnp
and
test
xchg
xchg
cmpsl
add
xchg
mov
jns
in
hlt
xor
ficoms
fisubl
inc
jbe
dec
daa
cmp
push
js
sub
inc
lods
push
sahf
je
jo
xor
stc
jg
push
int
insl
or
loope
jle
jle
adc
and
cmp
test
jmp
mov
add
jno
fsubrs
jle
xlat
cli
mov
cmp
cmp
rcll
pushf
repnz
insb
stos
lcall
xor
xor
test
mov
aad
mov
pop
jl
lret
out
mov
xchg
jecxz
psllq
fdivr
mov
jo
fwait
mov
push
into
or
cmp
adc
adc
div
mov
mov
leave
cmpsl
jae
cmc
movsb
and
popa
mov
or
cmp
aam
sti
jb
inc
clc
sbb
aaa
push
dec
jg
xchg
mov
pop
push
add
pop
mov
jmp
xlat
cmpsw
cltd
sti
fimuls
ja
push
push
adc
mov
xor
icebp
fiadds
int3
or
mov
lods
add
cmp
fisubrs
push
mov
sbb
mov
in
mov
xor
jmp
mov
cli
pop
xchg
js
lods
js
mov
popf
outsl
push
mov
faddl
or
mov
movsl
mov
add
or
jg
jno
xchg
add
sub
clc
ret
xchg
fwait
ja
push
sub
xchg
inc
movsb
mov
mov
push
in
push
bound
dec
push
mov
add
mov
setge
jp
in
cmc
addl
imul
out
aad
and
push
push
hlt
sbb
or
sub
and
jecxz
scas
movsl
scas
test
and
mov
aas
ret
int3
mov
shrb
test
mov
imul
dec
out
add
clc
inc
add
dec
sub
rep
repz
pop
and
xlat
mov
std
pop
or
sub
mov
loopne
dec
xor
fistl
insb
mov
int
daa
and
std
and
push
mov
xor
inc
shlb
rorb
imul
inc
mov
and
stos
jne
sub
shlb
dec
cltd
icebp
js
jecxz
shlb
mov
pop
nop
scas
cmp
cmp
xchg
adc
and
xor
mov
ja
jmp
jnp
rolb
iret
adc
imull
loopne
mov
loopne
xor
cmp
jecxz
inc
xlat
cli
je
enter
jne
movb
fs
cli
lods
push
leave
ret
ret
test
popf
push
adc
notl
cmp
pop
xor
sbb
addr16
xor
lahf
cmp
sahf
clc
ret
outsl
negb
loop
pop
call
mov
outsb
xchg
mov
pop
mov
push
or
cmp
cmp
and
jo
aad
sarb
inc
mov
fcmove
jecxz
imul
and
addr16
imul
adc
pop
test
xor
nop
cwtl
ret
inc
je
xor
dec
xorl
xor
addl
hlt
pop
fstl
pop
inc
inc
mov
scas
sbb
xchg
pop
popa
cld
inc
cmp
xchg
or
inc
outsl
xchg
lret
lods
xor
cwtl
jnp
jne
test
pusha
sub
xor
xlat
pop
adc
clc
sbb
or
inc
loope
fs
or
mov
xchg
je
pushl
jge
adc
stos
test
je
inc
stos
or
sbb
dec
out
mov
mov
cmpsb
fldcw
test
cmp
repz
mov
inc
lahf
jle
std
testl
inc
mov
bound
test
stos
cli
push
mov
dec
sub
push
lret
cmp
ja
dec
pusha
fidivrl
inc
pslld
ds
mov
push
adc
stos
mov
mov
mov
sub
push
dec
stc
pop
rol
pop
cs
test
scas
movsb
xchg
loopne
in
cmp
mov
or
adc
imul
jns
jno
sub
adc
mov
scas
lock
pop
lcall
mov
jb
bnd
or
or
scas
xlat
movsl
jge
mov
push
lret
and
outsb
pand
out
inc
inc
in
pop
dec
inc
adc
inc
pop
add
jno
std
inc
xchg
add
pop
out
dec
lea
outsl
mov
popa
rclb
enter
pop
in
nop
jbe
negb
in
je
cmpsw
jge
inc
add
or
movsb
lcall
data16
mov
push
push
xor
xchg
imul
js
fstl
jmp
mov
fwait
pop
lcall
and
inc
sbb
inc
pop
adc
and
fcoml
mov
ds
mov
sub
ret
xor
dec
es
mov
cmp
xor
out
test
jg
push
repz
add
test
push
sahf
loop
push
imul
dec
imul
loopne
lods
lods
pop
in
mov
mov
pop
adc
pop
mov
cmp
inc
inc
pop
pushf
inc
pusha
pop
ret
mov
aam
repz
subb
fimuls
mov
push
daa
pop
hlt
insl
mov
cmpl
test
loopne
or
xor
ja
mov
test
shr
fidivs
push
jp
subl
adc
mov
inc
int
add
leave
out
das
rol
pushl
rcll
out
sti
jae
xchg
ljmp
dec
cmc
pop
loop
pop
test
notl
mov
push
js
lcall
sarb
sarb
in
insl
pop
xor
xchg
js
or
test
lods
repz
sub
mov
push
xchg
xor
pop
ficoml
inc
cld
xchg
shlb
cmp
sbb
iret
mov
mov
or
pop
fstpt
negl
dec
stos
cmp
sbb
mov
outsl
mov
fstps
fisubrl
lods
fidivs
xor
shll
lea
arpl
cmpsb
outsl
mov
pmullw
ds
sti
add
lahf
ja
into
dec
add
sub
sub
bound
into
pop
jno
out
push
leave
mov
shlb
sbb
jmp
pop
pushf
imul
enter
jne
loope
mov
xor
mov
mov
mov
in
out
aam
jmp
jge
pop
sbbb
outsb
cmp
js
subb
mov
pop
lahf
xor
iret
rcl
mov
shrb
dec
dec
leave
cwtl
mov
inc
fucomi
call
cmp
xchg
nop
jl
jb
push
xor
jge
fsts
hlt
outsl
adc
cld
lods
cltd
mov
shlb
cs
jno
dec
and
mov
xchg
cmp
push
lods
add
rol
xchg
lods
xchg
xchg
sbb
popf
mov
ss
lret
dec
popa
jns
or
push
and
mov
outsl
clc
roll
arpl
or
add
test
xchg
stos
mov
pop
dec
xchg
test
sahf
loope
cmp
mov
popa
mov
test
pop
mov
jle
xor
push
xchg
dec
mov
push
add
jb
jle
imul
call
add
aaa
pusha
nop
ret
xchg
lret
add
in
stos
push
push
jp
movsb
cwtl
sub
and
js
pop
out
pop
ja
xchg
mov
cmp
into
mov
cli
call
fildl
and
pop
pop
jb
push
cmp
and
xchg
add
sbb
mov
fwait
loopne
mov
lods
into
in
lods
fiaddl
outsl
sti
push
pusha
lds
mov
jg
shr
lods
pop
mov
mov
hlt
popf
out
leave
fs
mov
mov
into
orl
adc
or
sub
addr16
cli
std
pop
dec
pop
mov
shll
test
adc
hlt
or
adc
pop
push
mov
add
leave
adc
jge
shrl
mov
test
test
or
hlt
cmc
out
pop
outsl
cmp
cli
sbb
mov
out
mov
mov
das
xchg
ss
stos
and
dec
jge
lret
sbb
nop
jmp
les
addr16
in
stos
ja
add
lds
fcmovne
repnz
and
ljmp
aad
sbbb
push
sub
cld
xchg
mov
das
sbb
pushf
pop
out
orl
mov
imul
leave
js
pop
mov
pusha
sbb
push
outsl
pop
out
or
cmc
fisubrl
inc
mov
movsb
dec
push
test
sbb
int3
pop
dec
js
or
fildl
adc
pop
ss
adc
pop
arpl
mov
daa
xor
cli
mov
std
insl
add
scas
jnp
cli
push
rcrl
loope
ljmp
jecxz
dec
dec
jns
cmp
mov
mov
negl
xor
lods
xor
push
sub
push
aaa
iret
cli
es
mov
in
mov
ss
adc
mov
fyl2x
jecxz
popa
mov
sub
push
cmp
xlat
add
mov
or
add
sub
jne
pop
jae
das
xor
adc
aam
sbb
mov
push
jg
movsb
xlat
jp
mov
xchg
cmc
push
lock
fldcw
and
mov
or
ret
insb
jge
lret
fucomip
mov
in
aas
call
jle
add
jno
addb
dec
out
push
mov
je
stc
cmc
jne
fstps
cld
add
xor
inc
iret
or
addr16
js
dec
test
or
jbe
mov
pop
shlb
dec
cs
rcrl
das
lea
lock
lods
inc
push
mov
ficoms
aas
inc
mov
popa
inc
add
rcrl
adc
mov
jno
lahf
lahf
inc
insb
cwtl
repz
xchg
in
sub
mov
xlat
dec
stc
mov
inc
push
push
and
ss
push
mov
icebp
int3
and
inc
fstpt
andb
push
or
movsl
xor
jbe
sbb
andl
stos
adc
xchg
out
pop
jae
pusha
add
inc
push
stos
das
mov
jmp
jecxz
data16
cwtl
xor
psubd
dec
addr16
les
sbb
mov
mov
jae
rcll
pop
js
add
xor
cmp
mov
dec
and
cltd
rorl
jae
push
inc
xchg
mov
add
iret
dec
and
jge
out
push
rol
rorb
cltd
rcl
pop
cmp
and
sbb
in
adc
cld
decb
repnz
or
mov
xlat
call
dec
hlt
enter
loope
and
cld
insl
mov
stos
test
shrl
and
sub
jle
dec
lock
add
enter
or
mov
push
push
ret
pop
cmp
ret
push
xchg
or
inc
dec
fnstenv
xor
cmp
cli
cli
mov
stos
pop
int
xchg
loopne
in
mov
cli
mov
xchg
mov
packsswb
scas
sarl
mov
addl
in
xlat
xor
repz
xchg
cmp
popa
adc
mov
and
jno
out
mov
or
push
dec
lret
or
out
clc
add
cmpsb
aad
and
ret
test
cmp
test
lret
fstp
pop
daa
in
jg
mov
fwait
mov
inc
ret
hlt
dec
scas
dec
popa
jmp
cmp
pop
dec
add
and
push
and
sub
loop
inc
xchg
inc
imul
lahf
enter
or
lret
push
sbb
mov
sbb
sub
adc
scas
arpl
xchg
xchg
push
in
or
movsb
shll
cld
dec
push
ficomps
cld
xchg
pop
call
xchg
mov
and
adc
dec
scas
imul
mov
xor
lods
sbb
dec
leave
test
jge
adc
iret
not
cltd
inc
jmp
xor
ret
mov
out
arpl
sub
arpl
add
cmpsl
mov
ja
popf
js
jne
xchg
lds
nop
xlat
adc
fcomip
mov
jp
fwait
addl
inc
xchg
xchg
mov
test
xchg
stos
inc
mov
hlt
rcl
mov
cmpsb
fbld
mov
cmp
aad
and
dec
int3
cmp
idivl
div
jecxz
adc
out
fsub
pop
sub
into
inc
outsb
inc
ljmp
push
sti
flds
cmp
cmp
popa
arpl
sbb
xor
add
sahf
cmp
hlt
aas
pushf
repz
addr16
inc
cmp
std
rcll
jp
cmp
hlt
in
jecxz
aam
gs
imul
sub
xchg
cwtl
aaa
push
call
mov
in
fcompl
insl
dec
mov
pop
push
mov
adc
sbb
imul
out
and
ficompl
lret
xor
dec
xadd
push
fcmovnu
mov
inc
outsb
push
das
ret
test
inc
sbb
fdivrp
divl
clc
xchg
or
imul
notb
scas
lods
dec
shrb
insl
xchg
jnp
cli
lea
jno
aas
in
mov
xchg
jno
dec
inc
sbb
lods
fwait
pop
aaa
push
aaa
cmc
loop
gs
sub
cmp
fwait
add
push
inc
addr16
or
jno
imul
xlat
ret
sub
push
cmpb
hlt
mov
clc
mov
dec
imul
dec
sbb
lea
mov
jbe
out
mov
mov
push
cmp
jae
aam
test
int
loope
jg
add
repz
fsubr
jns
ss
lcall
adc
push
jmp
jecxz
mov
sti
pusha
add
imul
data16
jle
lods
mov
mov
enter
mov
xor
std
es
pop
mov
push
in
inc
dec
fadds
in
jne
sub
mov
sbb
ret
cmp
adc
gs
cmp
inc
pop
xor
adc
cli
or
xchg
lcall
xor
jmp
in
adc
xor
daa
imul
movsl
add
sbb
scas
push
dec
dec
sub
int
mov
std
push
loopne
mov
cmp
mov
sbb
xchg
shrl
mov
out
loopne
push
cmc
neg
fistpll
imul
add
pop
fcoml
and
jecxz
daa
and
cmp
mov
lds
inc
call
mov
jnp
pushf
mov
ds
mov
fwait
mov
or
mov
push
dec
mov
and
cli
testl
cmp
mov
subb
or
sub
or
sbb
mov
sub
lea
aam
xchg
clc
fsubrp
leave
add
mov
cmc
mov
xor
jb
notb
stos
addr16
flds
or
sti
mov
pusha
imul
xchg
sub
xor
xor
push
sbb
dec
out
jmp
xor
cmp
clc
fdivrl
mov
xchg
xor
out
dec
add
mov
jmp
xchg
push
jns
rcrl
mov
int
push
call
jp
push
movsb
sahf
push
mov
and
sahf
inc
xorl
push
jge
ret
push
dec
xchg
mov
inc
or
inc
xchg
aaa
pop
jns
xlat
hlt
out
xchg
push
loopne
fidivrs
sub
sbb
or
mov
push
shlb
xor
push
call
push
adc
nop
and
insb
pop
or
xor
push
jb
cmp
xchg
or
dec
sbb
cmp
mov
imul
push
fnstsw
shl
aas
add
xor
dec
ja
or
xchg
lret
push
lock
mov
xchg
sti
or
xchg
fcompp
lods
and
jno
xor
xchg
pop
ds
push
cmc
push
addr16
dec
jo
int
les
int
sbb
push
mov
lods
cmc
and
push
loopne
adc
push
sbb
fst
xlat
and
dec
ljmp
xchg
insb
fs
shrb
inc
cmp
into
lret
xchg
add
in
mov
inc
pop
mov
fists
mov
clc
outsb
xlat
adc
pop
sti
dec
cmp
dec
sbb
stos
cmp
mov
and
and
xor
inc
fimull
xor
rcrl
dec
stos
cmp
or
push
xlat
inc
sahf
outsb
mov
out
data16
enter
ficoms
adc
popf
mov
andb
fcoms
mov
mov
out
out
lods
mov
sub
pop
cmpsl
push
or
in
imul
dec
leave
cmp
lret
push
jb
dec
rcll
scas
inc
xor
mov
cltd
xchg
gs
inc
xlat
mov
insb
roll
or
xor
sub
dec
mov
sbb
dec
xchg
push
andl
push
mov
jb
stos
test
mov
iret
inc
xchg
cld
xor
test
imulb
sub
xchg
and
rcrl
inc
andb
leave
push
push
lret
push
xchg
mov
lret
aas
aad
aam
movsb
push
fiadds
mov
mov
stos
xor
or
jno
aas
xor
test
xchg
jg
sbb
scas
adc
lahf
adc
inc
stos
gs
push
rorb
mov
dec
xor
sbb
jmp
add
jnp
dec
imul
cmp
imul
push
dec
add
add
mov
mov
es
push
or
adc
dec
or
mov
mov
mov
jecxz
in
push
pop
lock
je
aam
mov
sbb
inc
add
push
lret
adc
das
pop
imul
ss
sti
ds
xlat
loope
ret
jecxz
jnp
das
lods
les
push
inc
mov
daa
loop
adc
test
out
out
mov
push
leave
repz
dec
push
sbb
in
xchg
adc
insl
lcall
in
mov
in
adc
mov
pop
dec
loopne
je
or
cmc
loope
repnz
inc
add
push
rorb
xchg
sbb
fld
cmpl
pop
test
aaa
frstor
mov
ret
adc
lods
jno
adc
mov
test
pop
in
mov
scas
mov
imul
sub
aaa
testl
roll
int3
jns
jb
mov
and
mov
inc
jl
test
cwtl
dec
and
les
test
cmpl
flds
jmp
int
lock
ss
and
cli
add
lcall
or
xchg
out
lahf
mov
bound
cmp
or
stos
movl
in
and
rol
sti
fldl
mov
lret
xor
outsl
notl
mov
mov
iret
bound
xchg
xor
into
out
dec
xchg
jmp
sub
pop
jbe
outsb
push
jl
mov
in
cmpsl
daa
mov
inc
fwait
inc
filds
mov
aaa
int3
ljmp
movsl
enter
lods
pop
mov
dec
dec
fsin
push
xor
aaa
out
jns
pop
or
sbb
add
mov
jmp
js
lods
out
loopne
sbb
xor
or
vzeroall
mov
cmp
stos
inc
push
movsb
mov
faddl
and
mov
js
pusha
xchg
sbb
dec
mov
cmp
movsl
push
dec
insb
cmp
or
dec
jecxz
fnstsw
push
lods
push
clc
pop
lock
jno
out
jo
xchg
mov
push
sub
test
fisubrs
jle
int3
testb
or
adc
subb
push
mov
cmp
cmp
adc
out
cmp
pop
test
jo
xlat
dec
adc
xchg
adc
in
or
pop
or
xor
pop
xchg
xlat
mov
testb
push
cltd
cmpsl
mov
fnstenv
dec
pop
jl
or
sbb
jo
mov
call
outsb
adc
aaa
mov
add
xor
dec
data16
lcall
mov
dec
mov
jge
mov
add
push
jmp
mov
cmpsl
mov
movsl
sbb
and
cmc
push
int3
sbb
sbb
dec
scas
cmp
popa
pop
stos
add
in
jbe
addr16
mov
js
loop
lcall
jl
jo
pushf
pop
xchg
out
add
inc
push
jnp
xor
pop
loope
xorl
test
insb
pop
mov
dec
pop
fisubrs
mov
xor
sub
xchg
inc
or
into
out
jno
daa
stos
dec
adc
mov
push
sub
lds
jle
xchg
repnz
push
jmp
or
jle
popa
repnz
mov
mov
pop
fsts
xor
insl
out
lods
call
jnp
lods
mov
popf
push
or
aaa
add
jns
cwtl
clc
xor
aad
push
gs
and
ss
mov
adcb
xor
xor
fs
sub
sbb
imul
idivl
mov
push
mov
je
mov
movsb
push
sbb
jns
and
loope
add
mov
jnp
jae
push
push
xchg
shl
xor
ljmp
ret
out
xor
mov
mov
lods
pop
enter
mov
xchg
pop
mov
or
aad
imul
adc
pop
and
cmp
cmp
mov
insb
filds
sbb
sbb
xor
aam
mov
mov
xor
inc
test
pop
inc
jno
or
or
stos
ret
cmpsl
xchg
aam
fadds
sbb
xor
mov
inc
and
jns
pop
pushf
cmp
pop
ja
in
fld1
inc
xchg
sbb
push
mov
hlt
push
pop
in
and
sub
dec
mov
rcrb
jle
pop
or
ret
sbb
inc
jnp
cmc
mov
jo
inc
es
mov
ret
push
pop
cmp
adc
sub
cmpsb
xchg
mov
xor
ss
jl
push
dec
pop
cwtl
clc
clc
adc
jmp
gs
mov
nop
js
shlb
mov
out
pop
rcl
pusha
xchg
cmp
mov
movsl
loopne
pushf
dec
insl
lock
sub
test
and
fs
xor
xor
mov
and
jnp
addr16
pop
jp
push
dec
js
pop
jne
jmp
jno
scas
cmpsb
push
adc
fisttps
jl
jns
xor
and
mov
push
inc
mov
or
jecxz
movsb
arpl
cmpsb
or
imull
outsb
fldenv
xor
xchg
fwait
xchg
fdivp
and
push
add
mov
lds
in
incl
ss
add
out
pop
shrl
lea
jmp
push
out
dec
push
mov
inc
inc
cmpb
pop
xchg
sbb
sub
mov
and
add
fisubrs
ret
push
mov
cmc
mov
shlb
icebp
filds
lcall
rcrl
push
imul
dec
sahf
scas
loopne
jge,pt
negb
pusha
mov
dec
xchg
inc
and
jne
xchg
pop
cmp
mov
xor
adc
jno
outsl
mov
gs
call
in
or
inc
lods
jle
lret
sub
pop
adc
fnclex
jecxz
mov
push
loopne
out
andl
out
cmp
popf
data16
sub
in
daa
std
cmc
lahf
pop
aas
xchg
cmpsb
pop
inc
and
jl
jle
and
testb
xchg
daa
movsl
jg
mov
subl
inc
aam
cmp
jb
nop
adc
inc
mov
lock
test
pusha
pop
lea
inc
jge
cmp
sahf
stos
test
test
push
jo
ss
loopne
and
pop
icebp
push
mov
cmp
lret
lods
and
sub
mov
mov
test
push
sbb
sbb
mov
lret
push
cmpl
mov
xchg
xchg
mov
dec
pop
xor
pop
rorl
fcomp
pushf
stos
xlat
mov
faddl
mov
adc
lcall
fbld
pop
outsl
mov
jmp
call
pop
negb
add
mov
loop
loope
scas
enter
add
addr16
pop
pop
and
push
pop
dec
mov
mov
aas
and
cltd
add
loope
push
adc
imul
jp
push
sub
in
stc
xchg
fiaddl
sub
add
mov
dec
mov
clc
lock
aad
or
les
cmpl
mov
add
add
push
inc
ljmp
mov
jp
arpl
dec
ss
in
lods
sub
xor
pushf
adc
mov
imul
lods
and
outsb
cmp
xor
push
add
shll
mov
rcll
pop
mov
jae
pop
and
adc
fmull
scas
scas
dec
xorb
lods
ret
xor
movsb
push
inc
in
push
repnz
call
adc
cld
jbe
push
cltd
jl
pushf
rcrb
cmpsb
imul
incb
int3
adc
inc
ja
aas
outsl
pop
aad
jle
jne
and
sbb
or
dec
cmp
dec
lahf
add
push
and
add
pop
outsl
insb
jo
outsb
lret
mov
jae
add
or
inc
scas
xor
jecxz
xor
jl
mov
stos
xor
mov
push
test
fldcw
pusha
jno
sub
sub
clc
or
pop
and
mov
fbld
fdiv
mov
or
dec
mov
mov
xchg
scas
xchg
or
push
dec
negl
push
dec
inc
in
mov
sbb
into
adc
pop
mov
or
jns
push
or
pop
jle
bound
pop
push
jo
pop
fwait
pop
adc
sbb
scas
sbb
and
jbe
gs
inc
int3
adc
daa
and
fwait
fwait
xchg
daa
mov
or
and
out
aam
push
inc
mov
jle
push
movsl
xor
xor
sbb
subl
std
and
lods
mov
sarl
shlb
sti
mov
decl
jb
or
pushf
cmc
xchg
aam
das
sub
imul
jb
jo
test
mov
fildl
sub
inc
mov
xchg
mov
es
lock
bound
jecxz
stc
pop
out
insb
js
jnp
or
inc
mov
cmp
cld
arpl
add
das
sub
sti
sbb
cmc
pop
jb
and
pop
mov
divb
or
lods
push
out
or
fwait
test
pop
fstps
mov
clc
mov
icebp
pop
mov
dec
imul
push
xchg
sub
shlb
fdivl
push
cli
js
or
andl
inc
pop
inc
sub
jne
jns
jne
fwait
outsl
jmp
cmp
mov
clc
lcall
addr16
loope
xor
pop
push
cmp
fwait
loop
dec
stos
clc
mov
mov
mov
dec
push
xchg
mov
test
jb
xchg
jns
mov
stos
push
call
jp
cmc
cmp
inc
mov
push
into
das
adc
mov
lods
sar
ret
sbb
rolb
ss
fcomp
sbb
mov
andb
dec
std
stos
das
test
mov
arpl
cli
int3
or
xchg
les
pushw
dec
dec
test
inc
mov
push
inc
mov
or
jo
push
orb
push
jl
cld
pop
mov
scas
and
mov
mov
cwtl
jg
add
aaa
xorb
call
xchg
and
in
sub
push
out
loop
or
sub
jb
jmp
js
jbe
adc
adc
fsubrs
adc
or
cmp
stos
cmpl
mov
dec
add
inc
adc
lods
or
sub
sub
lock
sbb
dec
fidivrl
in
in
in
lods
mov
dec
sahf
sbb
leave
mov
pop
fdivl
in
push
js
cmp
jge
pop
fld
fs
out
jb
bound
jecxz
jmp
aaa
pop
enter
jp
sbb
pop
push
xor
pop
bnd
pop
call
xor
cld
jnp
or
repnz
inc
inc
adc
js
or
sub
stos
and
adc
pop
or
out
cld
fcoms
xlat
jne
scas
mov
jge
mov
sub
shrb
in
repz
arpl
adc
dec
inc
pop
into
add
cmc
mov
std
jge
js
addl
das
push
jb
push
add
sbb
sbb
icebp
test
lds
icebp
andl
sbb
fdivrl
jns
mov
xchg
inc
sbb
shrl
push
adc
mov
insl
mov
sahf
xchg
fwait
mov
imul
mov
or
jmp
scas
mov
cmpsb
mov
and
push
mov
cmpsl
xchg
sub
mov
mov
xchg
pushf
out
push
rcr
push
cmp
daa
push
or
insb
lods
aam
jno
andl
xchg
sti
sbb
add
mov
jae
pop
adc
cmp
sahf
or
fcmovne
sti
dec
popf
xchg
jnp
xor
bound
mov
jne
jl
lds
xor
mov
jl
insl
outsl
sub
push
xchg
imul
int3
or
ficomps
xchg
repnz
out
jl
xchg
inc
sbb
xor
push
and
ret
or
pop
popf
jne
adc
lcall
shrb
dec
or
dec
sti
mov
and
addr16
mov
sarl
jnp
mov
pop
pop
frstor
push
push
setnp
popf
loope
mov
aas
add
shr
mov
stc
iret
fndisi(8087
xchg
test
push
cwtl
aaa
outsl
inc
and
sti
fisttpl
add
inc
mov
shl
jecxz
ja
or
sti
test
inc
xor
add
mov
sar
xor
or
add
xlat
or
push
or
xlat
addl
pop
sbb
jecxz
fstpt
or
cld
scas
jg
cs
popa
sbb
mov
daa
mov
stos
add
mov
out
ror
fldenv
jecxz
mov
push
pop
sub
adc
add
and
add
in
push
sbb
ljmp
pop
ds
or
push
leave
inc
daa
or
mov
inc
sbbb
mov
data16
dec
int3
sub
inc
in
in
mov
pop
fmul
in
mov
xor
mov
bswap
rol
aam
push
mov
movsb
adc
ljmp
push
push
jmp
loopne
int
pop
icebp
fwait
jb
aaa
fmuls
sub
fisttpll
or
movsl
mov
fistl
stc
in
pop
ja
push
cmpsl
pop
mov
aas
lret
iret
iret
jae
in
add
xchg
lahf
adc
push
stos
iret
mov
mov
pop
push
and
push
push
ja
lds
pop
inc
mov
repnz
gs
sbb
aam
cli
imul
adc
dec
sahf
and
push
xchg
loop
mov
in
stc
and
rorl
inc
loopne
sbb
loope
sbb
frndint
pop
les
jo
sbb
mov
mov
jmp
repz
inc
shlb
clc
lods
lock
imul
cmp
xor
pop
test
adc
mov
fdivrp
inc
test
mov
in
push
xlat
in
popf
mov
push
pop
jge
mov
test
add
aas
inc
mov
test
sub
jle
mov
adc
mov
int3
xchg
and
fcoms
outsw
mov
push
cld
push
shlb
icebp
rcl
and
scas
xchg
call
or
sbb
lock
push
push
insl
icebp
pop
push
xor
jle
lahf
lods
sub
jge
and
outsl
pushf
je
js
out
mov
pop
jo
into
pop
fsubl
or
shlb
xor
ret
xor
call
fnstcw
lahf
xor
mov
icebp
and
loop
pop
or
cmp
loopne
dec
orl
loop
pop
fdivrs
or
test
outsb
popl
ds
add
add
xor
dec
cmp
ja,pt
stc
pop
bound
lret
mov
push
cld
or
rorb
ja
or
insb
setb
xchg
sub
pop
add
cli
dec
mov
xor
dec
pop
adcl
fisubs
fstl
pop
adc
push
and
rolb
mov
pop
cli
rclb
cmc
imul
loop
fcoms
nop
arpl
sub
cld
arpl
add
and
fimull
rol
testb
pop
or
loope
int3
and
rclb
test
mov
adc
sbb
push
dec
lahf
lret
mov
dec
int3
sti
inc
mov
xchg
pop
xchg
push
or
xor
push
lret
ds
addr16
inc
ljmp
mov
addr16
test
mov
mov
popf
pop
aaa
lock
sub
mov
cmp
pop
xor
dec
mov
push
bound
sub
push
out
adc
jnp
sub
jg
jo
xor
or
arpl
jl
int3
inc
lods
dec
out
xchg
imul
fdivs
xchg
sbb
add
xchg
loope
shll
push
xor
xchg
sti
jne
imul
xchg
sub
adc
jbe
push
out
popf
leave
sbb
sub
loopne
add
ljmp
xchg
out
icebp
int3
out
or
jne
enter
sub
stc
adc
pushf
inc
sub
dec
jecxz
adc
or
ret
lcall
fcmovb
dec
stos
mov
mov
and
add
fs
push
mov
sub
cmp
movsl
addr16
jae
mov
ds
push
into
addl
jo
rolb
es
ret
mov
shr
je
hlt
mov
add
ficoml
mov
cmpsb
pause
jno
in
lods
push
dec
mov
push
lock
xchg
sbb
cwtl
xor
sbb
in
pop
out
cs
sub
sub
xchg
repz
imul
fwait
setp
ret
push
jbe,pt
push
movsl
inc
inc
jbe
shr
cld
add
sarb
js
leave
and
mov
lock
fistl
mov
adcl
stc
testl
cli
push
cwtl
loop
fmul
cwtl
and
inc
add
in
mov
add
iret
mov
into
dec
or
rcl
push
jne
mov
adc
sbbl
es
add
lock
test
xor
inc
xor
je
incb
jmp
arpl
loopne
aad
scas
xor
int
jo
cmp
fs
addr16
jb
push
mov
shrb
sbb
ret
aas
and
dec
add
push
test
inc
xor
es
or
iret
repz
test
enter
jne
mov
inc
mov
jnp
subb
insl
fcomps
scas
sbb
sahf
adc
out
rcl
pop
js
repnz
and
das
movsb
xor
repz
rcrl
or
dec
inc
mov
dec
mov
cmp
das
xlat
int
sub
jge
adc
add
cmpsb
push
repnz
xchg
xchg
out
dec
xchg
sub
push
rcr
xor
loopne
ret
mov
insl
mov
pop
js
jmp
or
call
data16
mov
insl
inc
jmp
sub
imul
xchg
jecxz
subb
push
icebp
mov
cld
imul
sub
in
and
outsl
sbb
pop
cmpsb
stc
adc
bound
lret
repnz
loopne
mov
cmp
add
dec
test
into
sbb
enter
mov
cmp
jne
outsl
repz
psubb
adc
repz
ljmp
aad
loope
pop
push
shlb
push
add
or
push
pop
cmp
xor
mov
mov
inc
orb
shll
xor
les
xchg
sti
lret
call
sti
outsl
bound
push
decl
cmpb
js
xchg
mov
add
out
aaa
test
jnp
sbb
pop
jp
bound
mov
cmp
and
mov
sub
dec
mov
mov
mov
or
testl
dec
inc
push
jl
mov
pop
and
mov
or
push
adc
nop
stos
cwtl
shrl
in
insl
add
pushf
sbbb
dec
adc
ret
lahf
push
adc
adc
hlt
fs
popa
mov
dec
push
bnd
mov
mov
lock
inc
sbb
mov
sbb
arpl
in
mov
sub
ja
xchg
and
inc
xchg
inc
shr
or
jle
hlt
fisubs
insl
fmuls
pop
adcl
fnstcw
cmpl
jg
or
cmc
xchg
cmp
mov
fildl
cmc
cmp
sbb
pavgw
mov
inc
inc
popa
icebp
xor
rorl
fbld
stos
outsb
jmp
or
sti
xor
xchg
fimull
cmpsl
push
sbb
mov
popa
jno
xchg
out
adc
pop
and
int3
and
movsl
rorb
xchg
mov
push
inc
cs
orb
imul
ds
jae
xorl
sbb
push
int
pmaxub
cmc
ret
mov
adc
sti
push
int3
outsb
rcl
xchg
pop
mov
adc
nop
mov
aad
and
xor
xor
fcmovne
pop
mov
xor
inc
or
pop
cmp
xor
cmpsl
fwait
inc
insl
sub
jle
mov
out
iret
adc
pop
fwait
dec
insb
in
push
jbe
push
ss
mov
mov
mov
rclb
cmp
or
and
mov
sahf
push
inc
cmp
out
push
aaa
jmp
jle
lock
lods
push
mov
mov
movsb
aad
mov
push
pop
add
into
jnp
sbb
pop
outsl
sbb
jecxz
and
ret
add
lahf
mov
adc
out
test
and
pop
jl
lods
insb
test
pop
ss
lcall
mov
xor
lods
sbb
push
loop
ret
mov
jns
push
push
out
jo
shll
and
setbe
cmp
dec
fsincos
sbb
mov
sub
movsb
mov
lea
adc
mov
clc
cmp
sbb
and
add
inc
pop
subb
pop
xor
cmpl
shr
insb
int
icebp
mov
mov
mov
ficoml
lcall
ja
pop
bound
mov
mov
arpl
mov
jno
sar
mov
cmp
and
in
sub
or
and
andb
pop
arpl
loop
inc
daa
hlt
idivl
cmp
gs
imul
sub
aaa
stos
mov
mov
fs
lret
and
pop
pop
in
imul
in
stos
xchg
mov
xchg
jg
xor
and
cmp
push
call
imul
cmp
inc
or
jp
add
add
xor
in
mov
arpl
add
fidivrs
in
xchg
xor
arpl
mov
sub
or
push
pushf
lcall
clc
and
add
popf
jge
sbb
cmp
enter
cmp
xchg
das
jae
xchg
dec
xchg
aas
adc
popf
mov
add
jp
outsb
dec
xchg
push
popf
test
pusha
xor
in
cmp
fxch
pop
popf
cld
popa
xchg
sub
jne
xchg
or
cmp
outsb
sahf
test
inc
and
xchg
fcompl
insb
adc
xchg
add
mov
mov
daa
xlat
mov
mov
cmpl
add
fst
mov
cltd
scas
mov
mov
popa
test
cs
sub
mov
leave
orb
or
scas
int3
xor
mov
out
scas
mov
pop
push
lea
mov
call
xchg
out
lds
sar
mov
xor
cmp
push
xor
and
inc
jg
or
in
inc
xor
std
pop
repnz
add
mov
and
push
arpl
fstpl
pop
jno
jne
loopne
cwtl
jb
mov
shlb
mov
sub
xor
mov
shlb
and
in
in
mov
out
add
ret
lods
push
pop
hlt
notb
cmpsb
push
xchg
xchg
mov
es
lock
arpl
sub
or
fmull
cmp
sbb
je
test
xchg
jle
lret
shl
lahf
jno,pn
inc
out
loopne
sub
push
and
fwait
dec
push
mov
fcoml
cmp
hlt
cltd
or
stc
add
dec
adc
cwtl
and
cmpsb
leave
adc
out
popa
pop
nop
aad
testb
pop
fidivrl
ret
movsl
cwtl
mov
or
push
xor
aad
fstpt
js
fucomp
sbb
out
movsl
stos
sub
data16
adc
push
cwtl
push
jnp
sbb
jns
and
pop
inc
stc
push
adc
pop
sub
push
jnp
call
lret
fdivrl
mov
xlat
cmp
mov
and
xor
pop
roll
xor
shlb
pextrw
inc
jl
imul
mov
out
cmpl
dec
mov
popa
icebp
pop
and
xchg
rep
sbb
fs
in
jge
jg
mov
sti
sbb
pushf
gs
jecxz
test
clc
mov
inc
cmp
out
jb
ja
iret
aam
inc
rorl
mov
inc
jecxz
imul
movsl
cmp
sub
sub
outsb
inc
jno
repz
adc
adc
mov
mov
shlb
idivl
or
jo
and
rolb
jle
sub
mov
adc
mov
leave
push
push
pop
mov
lcall
popf
mov
mov
dec
jp
movsl
dec
pop
dec
jmp
push
or
adc
rorl
rcl
push
add
lret
sub
in
add
adc
hlt
jl,pn
adc
incl
and
mov
out
mov
outsb
testl
stc
mov
lcall
mov
arpl
mov
rcrb
adc
and
idiv
xchg
loope
into
mov
xchg
push
aaa
jae
xor
test
xchg
mov
add
loopne
ret
arpl
jae
and
ret
jmp
shl
in
push
mov
test
int
xchg
and
popf
xlat
sbb
scas
mov
sub
ret
or
out
in
xchg
pop
scas
xor
sub
fnstcw
fxch
nop
fstpt
push
jmp
mov
int3
or
mov
xor
mov
pop
aaa
add
mul
das
scas
out
xchg
jb
call
or
lea
stos
std
stc
mov
push
mov
xchg
fsts
lret
push
or
lods
sub
icebp
orb
in
push
test
arpl
mov
push
sub
loope
aas
or
sar
xchg
xor
pop
pop
jns
sahf
adc
bound
int
pop
add
add
ja
pop
xor
adc
test
cmp
lods
arpl
adc
and
stos
pop
xchg
inc
sbb
or
pop
fwait
js
ds
mov
fisttpll
push
orl
jmp
dec
sbb
cltd
int
adc
jb
in
or
fdivrs
je
sbb
shrl
jnp
daa
leave
sub
xor
lock
mov
xchg
mov
pop
fistl
ret
cmp
inc
mov
mov
dec
les
or
cwtl
bound
cmpb
mov
jecxz
sti
cld
mov
decb
and
pop
and
or
mov
or
mov
mov
sub
je
mov
das
adc
std
in
or
adc
cli
in
es
arpl
push
bound
shrl
pop
arpl
jne
aas
sbb
dec
sbb
inc
add
sub
repnz
stos
lcall
xor
inc
mov
pop
adc
pop
or
fimull
add
mov
outsb
push
aad
push
ret
pop
loopne
lret
cli
sub
push
jb
mov
pop
shr
jl
jnp
ret
and
or
insl
push
in
inc
inc
mov
popl
sbb
xor
xor
lock
ret
aam
test
iret
jne
sbb
shlb
lea
inc
leave
insb
adc
je
push
xor
out
ret
lret
in
sub
out
out
dec
lea
adc
fdivs
xor
and
lods
or
inc
push
push
sbb
div
shll
and
out
lods
push
insl
outsl
sbb
and
xlat
scas
jecxz
or
inc
dec
adc
xchg
ja
cmp
imul
movsl
test
mov
push
sub
movsb
inc
ret
or
sti
push
mov
sbb
dec
mov
pop
icebp
sub
or
jecxz
add
cmpsb
pop
inc
fmuls
sarl
rol
inc
sub
lea
scas
insl
daa
inc
push
fisttpll
mov
adc
cmc
or
insb
lcall
dec
std
cmp
sub
mov
daa
les
xor
jmp
out
data16
fstpl
es
rcrb
loopne
push
sbb
jbe
js
pop
or
stc
loopne
mov
imul
repz
inc
fs
js
ret
or
fisubrs
ja
or
jne
inc
out
fsubp
mov
leave
ficoms
aaa
cmp
shrl
jg
jl
pop
push
and
pop
xchg
push
bound
push
cwtl
adc
insb
or
iret
mov
insl
or
adc
lret
fisttpll
adc
out
inc
cmpsb
jl
rcl
ljmp
and
clc
cmpb
outsl
lods
jns
int
cs
insb
xchg
pusha
fldl
fcoml
cld
mov
pop
xchg
shr
jge
add
scas
in
mov
and
lods
lcall
pop
dec
es
xchg
popa
js
add
lret
in
outsl
enter
in
cmp
add
pop
cmp
subl
mov
in
and
mov
shl
enter
and
jmp
mov
xchg
cmp
jnp
jmp
clc
mov
lcall
mov
dec
xor
jae
std
sbb
scas
adc
or
cld
add
addb
inc
popf
jmp
movsb
mov
inc
cmp
push
icebp
jmp
imul
or
std
jno
mov
adc
xor
or
and
mov
movsl
xchg
xchg
sub
lahf
xchg
jno
jp
mov
jmp
pop
nop
cvtps2pi
jno
sbb
arpl
insl
inc
jp
sahf
ja
dec
xchg
mov
inc
fcom
ficoml
shrb
xchg
call
jmp
ret
xchg
jns
mov
sti
pop
mov
out
xchg
adc
and
int
push
adc
and
loope
scas
test
cmp
iret
test
fadd
arpl
sahf
dec
in
std
jnp
sarb
arpl
mov
repz
mov
ret
jl
jecxz
xchg
lds
xor
rol
clc
loop
repz
rclb
shlb
into
xchg
data16
push
ds
pop
icebp
loopne
dec
mov
pop
mov
and
fdivl
int3
cmp
push
pop
sbb
cmp
mov
xchg
js
loope
sbb
ret
push
push
push
or
lret
lret
jg
leave
nop
scas
mov
inc
add
pop
stos
call
jge
mov
pop
lret
roll
jbe
dec
add
push
or
or
hlt
shlb
and
or
pop
test
inc
fs
idivb
mov
mov
push
mov
inc
call
rcr
imul
or
hlt
and
inc
xlat
jae
xchg
je
fbstp
popf
cmp
cmp
inc
sub
sub
push
ss
mov
inc
and
pop
mov
gs
clc
cli
pop
add
jg
fbstp
inc
mov
into
aam
or
or
cmp
add
add
push
repnz
enter
rolb
pop
sbb
out
pop
jno
dec
or
inc
shll
sbb
cmp
mov
fists
or
lea
mov
cmc
repz
loop
ss
ja
mov
inc
data16
outsl
sbbb
jo
mov
sti
es
test
mov
shll
std
dec
shl
cmp
jne
je
cltd
pushf
movsl
or
cmp
fnsetpm(287
std
es
xchg
add
dec
fcoms
pop
test
push
movsl
add
cmp
shl
sub
pop
mov
dec
test
in
lock
pop
cmp
jae
push
dec
loope
shll
outsb
test
lods
lds
repnz
test
ljmp
mov
das
jns
test
dec
dec
jmp
out
cli
int
mov
or
jmp
scas
mov
lret
mov
pop
js
loopne
fists
sub
inc
xlat
shlb
rol
push
mov
in
xchg
mov
adcb
jl
lock
add
mov
popf
push
mov
adcl
xor
lds
movsb
push
add
xchg
pop
fsubp
nop
lock
sub
mov
pushf
test
jb
nop
cmp
inc
mov
outsb
in
xor
icebp
cmp
popf
ret
scas
ret
stos
movsb
insl
or
testb
xor
push
mov
xor
cmp
inc
int3
pop
cld
mov
push
mov
lock
cmp
outsb
mov
mov
inc
in
test
xchg
mov
inc
test
mov
adc
push
sub
pop
clc
fbstp
cmp
mov
mov
mov
ljmp
mov
dec
mov
out
jno
sub
add
daa
test
insb
cmp
daa
push
dec
fwait
icebp
push
pop
test
push
fldl
mov
adc
or
push
movsl
push
lods
cmp
arpl
idiv
mov
std
cmp
das
jbe
jecxz
sub
add
xlat
dec
daa
mov
rcrb
xchg
rolb
lret
subb
and
je
cmpsl
testl
mov
pop
in
sti
int
add
cli
outsl
and
fadds
movsl
add
sbb
xor
xchg
mov
inc
xchg
fisttpll
call
xchg
dec
mov
jo
ret
push
ljmp
push
std
js
int3
add
and
mov
adc
or
adc
jg
mov
out
hlt
xchg
sub
lea
iret
jmp
cmpsb
movsl
sbb
leave
test
adcl
mov
aaa
fdivs
add
or
cld
mov
addr16
push
movsb
mov
mov
loopne
aad
test
mov
js
mov
ficoms
dec
js
data16
sub
mov
pop
cwtl
pop
jmp
jle
adc
imul
das
adc
repnz
xchg
rolb
imul
scas
add
jne,pn
xor
popf
push
pop
mov
call
push
stos
pop
cld
sbb
xchg
ds
pop
es
xlat
test
mov
inc
shlb
or
ficoms
imul
testl
lock
xchg
ljmp
testl
push
shr
rcll
push
lds
mov
movsl
pop
and
mov
test
loopne
and
pop
push
fsubrp
xchg
loopne
notl
test
outsl
sub
and
adc
push
pop
mov
enter
cwtl
mov
mov
jnp
and
inc
jo
sbb
jecxz
sub
mov
add
mov
sub
sarb
sahf
jo
cwtl
inc
cld
dec
mov
and
les
popf
stos
and
xchg
rcr
insb
sub
adc
iret
adc
hlt
jle
daa
stos
push
mov
lret
xchg
cs
enter
jge
insl
mov
mov
inc
mov
andl
aaa
inc
push
adc
adc
stos
mov
gs
ret
test
push
jns
and
aam
mov
jns
cmc
sahf
or
and
pop
sbb
mov
enter
add
sbb
lret
in
outsl
ds
data16
xor
call
jnp
xchg
mov
pusha
xchg
call
mov
xchg
imul
push
cltd
cs
inc
inc
cli
dec
icebp
jl
ljmp
adc
sahf
enter
jno
xchg
mov
iret
call
ja
icebp
jns
shrb
cmp
mov
clc
xor
mov
aas
lods
les
mov
add
daa
stc
cmp
mov
inc
flds
mov
insb
repnz
aad
jl
pop
xchg
stos
cmc
xor
dec
xchg
pop
pop
ret
push
adc
cmp
add
jmp
xor
mov
es
lahf
add
push
push
push
inc
and
pop
and
stos
ja
jb
aas
pop
and
jnp
into
aas
push
int
xchg
sahf
gs
mov
dec
notb
jo
inc
aad
add
push
test
scas
pop
test
daa
mov
je
jb
test
jo
flds
movsb
xchg
pop
mov
les
adc
dec
shrb
push
aaa
out
shrb
sub
cmc
inc
andl
pusha
cmp
imul
arpl
xor
pop
loopne
loop
out
mov
push
inc
jp
imul
mulb
inc
and
mov
cmp
decl
and
push
aaa
mov
ja
aas
ds
cmp
pop
out
push
fisttpl
sbb
into
bound
push
out
popa
in
push
popa
mov
in
jne
lods
sti
fsin
xchg
xchg
pop
push
ljmp
ja
adc
scas
jno
cpuid
pop
mov
xchg
mov
pop
push
and
push
fcoms
ja
add
dec
and
addb
pop
push
push
das
lahf
adc
cs
cld
mov
jo
push
mov
inc
mov
or
and
clc
aam
mov
push
inc
jo
pop
mov
sub
ss
jne
popf
pop
fs
mov
stos
cmp
inc
sbb
push
loop
test
jle
xchg
cld
hlt
and
push
mov
popa
or
iret
xchg
adc
mov
mov
jns
stc
pop
stos
xor
mov
inc
movsl
dec
int3
outsb
and
outsb
aad
aad
lret
or
push
punpcklbw
negl
movl
xor
mov
adc
clc
insl
cmp
je
and
push
fistpll
daa
ret
dec
and
mov
imul
int3
std
push
xor
push
cltd
mov
jle
in
mov
popa
jp
push
mov
cli
in
xchg
jecxz
negb
icebp
and
lret
fcom
lea
mov
mov
out
jge
dec
adc
push
pop
or
mov
add
push
push
push
adc
xor
or
adc
dec
add
xchg
xor
frstor
mov
mov
je
pop
xchg
enter
out
test
aas
std
ja
or
lods
sub
jle
mov
push
cmp
ds
xorb
loopne
inc
add
lods
test
adc
mov
xchg
jne
mov
arpl
pop
xchg
outsl
icebp
mov
shrl
adc
inc
js
lahf
loop
cmp
scas
cs
add
out
sub
cltd
cs
and
and
push
repnz
je
mov
cmc
addr16
ja
xchg
pop
mov
enter
mov
xor
ljmp
pusha
movsl
push
xorb
mov
fidivl
shlb
std
enter
das
jbe
orl
cmp
cmp
enter
pop
fnstenv
jp
cltd
sub
sbb
mov
cmp
add
push
movsl
aaa
inc
push
leave
add
jp
jns
rcrl
in
out
mov
fists
push
ret
fs
xchg
pop
jg
xor
std
in
sbb
sarl
or
lock
mov
or
enter
xor
aaa
test
es
pop
cmpsb
insl
insl
fs
mov
pop
cmpsb
ret
sub
inc
and
outsb
filds
cmpsb
sbb
dec
mov
push
mov
mov
add
adc
cmp
mov
mov
jmp
icebp
outsb
scas
sbb
addr16
cltd
push
jle
sub
or
dec
pop
daa
sub
lret
loope
out
repnz
inc
xchg
enter
xchg
pop
es
mov
fimuls
or
dec
mov
adc
out
rclb
cmpsb
jae
cmpsl
icebp
or
pusha
dec
rcrl
aad
xor
mov
cwtl
mov
xor
sti
push
cli
pusha
jle
cmpsb
add
dec
sub
inc
and
mov
ljmpw
divb
test
movl
inc
jo
or
fidivl
mov
push
jno
fidivrl
dec
pop
pop
mov
adc
mov
cmp
addr16
mov
das
sti
dec
mov
pop
repnz
mov
movsb
push
jg
cmp
cli
mov
fisubrl
or
test
mov
rol
stos
push
lock
mov
mov
dec
dec
sbb
lret
fnstcw
ljmp
mov
shlb
insb
push
sbb
dec
jp
sub
aad
mov
adc
jbe
popf
cmp
jb
into
pop
or
hlt
inc
fdiv
mov
jecxz
add
cld
mov
hlt
inc
rsqrtps
mov
mov
mov
in
cmp
add
aas
test
push
sub
or
and
aas
jae
mov
fmul
inc
adc
out
test
sub
test
add
ret
stc
pop
add
xchg
fwait
add
cmp
mul
adc
mov
mov
push
pop
pop
inc
adc
adc
test
sub
dec
xlat
sub
mov
out
push
cmp
es
sbb
ficoml
lahf
xchg
ljmp
or
inc
cld
daa
pop
scas
test
mov
lret
mov
lcall
mov
test
adc
mov
dec
push
and
push
cs
xchg
xchg
pop
stos
aam
pop
mov
or
call
cmp
sub
xchg
add
mov
cmp
inc
mov
or
sar
cmp
add
adc
push
rorb
xor
cmp
fsubrp
pop
sub
and
adc
xorl
add
adc
aas
push
add
hlt
test
icebp
mov
jg
insb
or
mov
push
jp
xchg
test
xchg
mov
in
inc
push
mov
cli
int3
cli
sub
out
lock
add
cli
mov
notl
imull
jae
adc
jmp
das
xchg
call
es
and
push
das
inc
dec
test
add
sub
in
jge
mov
lret
xchg
repnz
inc
mov
repnz
lret
lock
push
sahf
arpl
pop
mov
or
cmp
les
insb
gs
or
pop
xchg
rolb
sub
xchg
add
inc
int3
aaa
adc
jnp
add
and
dec
stc
outsl
mov
mov
mov
mov
ret
js
cwtl
xchg
movsb
adc
mov
arpl
cmc
fisubl
lods
das
imul
push
insl
pushf
push
add
daa
int
xor
aad
in
lock
mov
sahf
lret
repnz
dec
rorb
stos
stos
mov
ret
lret
dec
lods
or
ret
xchg
add
mov
out
or
notb
or
or
imul
mov
pop
repnz
lcall
inc
mov
clc
or
mov
rolb
loope
jb
pop
sbb
add
les
hlt
xlat
addr16
or
sbb
jp
mov
cmp
mov
adc
pop
push
iret
fnstenv
insl
imul
js
or
out
fstl
mov
sbb
add
pop
xor
jne
bound
dec
dec
leave
lods
es
mov
leave
dec
mov
stos
data16
ficoms
pop
or
cli
pop
in
popa
push
lret
mov
mov
jae
es
outsl
rcrl
push
mov
adcl
lret
mov
and
inc
mov
dec
fsts
mov
into
push
dec
or
fwait
movsb
mov
xor
xchg
pop
and
fbstp
shl
incl
push
dec
jnp
sub
enter
xor
and
ror
lds
aas
mov
in
aad
pop
test
dec
push
bound
mov
inc
xchg
dec
cltd
xchg
sarb
mov
mov
stos
push
mov
push
out
pushf
sbb
dec
push
lock
jp
sub
mov
fldenv
stc
sahf
add
cmp
fsubrs
xchg
xchg
es
pop
mov
inc
xor
popa
pop
pushf
in
cmp
in
loop
test
inc
mov
pusha
xlat
outsl
xchg
jg
mov
jo
cmp
inc
scas
vdivps
push
jmp
sub
sahf
add
lret
pop
xor
add
arpl
sbb
ljmp
pop
inc
or
add
mov
jp
add
fdivp
sub
jmp
loop
subb
mov
mov
jns
mov
and
shrb
cmp
cmpsb
xor
dec
push
dec
xor
cmp
loopne
loop
and
and
pop
cmp
jns
lds
ss
and
iret
dec
fcoml
jp
ror
pop
pop
ja
push
jg
dec
lock
das
xor
out
nop
shlb
adc
inc
cmpsb
pop
jmp
push
dec
testl
aas
mov
sub
dec
rcl
xorb
jg
cmp
fistpll
lods
inc
push
or
adc
shll
cmp
ja
pusha
add
data16
popa
jbe
sub
les
gs
pop
sub
lret
jle
add
xchg
shlb
pop
cmp
mov
mov
and
jmp
insl
push
testl
jbe
xlat
and
mov
shll
pop
inc
or
lods
cmp
shll
sahf
add
fdiv
leave
sahf
mov
cmp
mov
out
movsl
xchg
sarb
inc
inc
popf
xlat
xlat
push
and
add
jge
pop
sub
xchg
inc
lods
in
add
inc
dec
insb
pop
cld
push
push
xchg
xor
pop
pop
fnstsw
mov
inc
push
subl
sub
xor
mov
xor
dec
ja
imul
sub
xchg
jne
cmpsb
stos
xchg
sbb
sahf
xchg
out
mov
inc
mov
fwait
enter
aas
mov
test
xchg
sbb
xchg
test
adc
cmp
push
shlb
adc
mov
imul
mov
inc
cmp
stos
in
ds
jmp
push
mov
ja
outsb
fidivrl
enter
push
les
jp
xchg
ljmp
aad
or
into
sub
popa
xor
pop
cld
lahf
sub
and
xchg
mov
pop
movsb
movl
das
mull
push
jns
xor
xor
fdivl
insl
jge
push
jl
cld
inc
cmpsl
push
cltd
pop
jmp
sbb
out
push
scas
stc
inc
sub
stos
mov
stc
xor
adc
push
stos
jmp
inc
nop
fcmovbe
dec
mov
push
adc
pop
loopne
loop
jecxz
xchg
rolb
mov
jg
sbbl
adc
inc
mov
push
sbb
fdivrl
in
popa
lds
mov
cwtl
insb
push
sbbl
outsb
or
test
mov
add
sarb
sbb
and
movsl
and
lahf
xor
xlat
mov
loop
negb
loop
cmp
or
aam
jp
call
jne
xor
mov
lock
jno
outsl
adc
jmp
cmp
ret
scas
rcrb
dec
add
test
call
adc
stc
push
mov
mov
into
xlat
loop
xchg
repnz
pop
or
mov
push
loope
sti
es
mov
aaa
mov
addr16
push
fcomip
out
and
inc
adc
out
scas
subb
loopne
cmp
or
shll
adc
ljmp
push
cmc
cmp
cmp
out
cmp
adc
shll
sbb
stos
mov
rcrl
sti
inc
jle
xlat
pop
rorb
dec
mov
mov
sub
push
repz
add
adc
shl
sarl
mov
nop
fimuls
or
call
repz
mov
mov
int3
cmp
inc
or
icebp
iret
xchg
aaa
sahf
hlt
pop
and
sbb
or
jecxz
std
mov
testl
std
jae
fistps
cmpsb
cmpsb
aam
or
sbb
mov
ljmp
in
pop
mov
or
es
push
push
loop
and
in
in
fldt
rcrl
adc
push
test
xchg
icebp
dec
xchg
adc
bound
xlat
in
outsb
movsb
jmp
mov
das
pop
mov
push
sbb
dec
pusha
pop
movsb
cmpsl
xlat
cmpsb
test
lahf
inc
test
les
fnsave
inc
pop
dec
push
add
mov
and
fldcw
pushl
int3
adc
lret
cltd
pushf
cmpb
in
lods
push
insl
xchg
lret
xchg
jo
push
sbb
mov
sarb
jmp
sub
stc
mov
push
jbe
cmc
sbbl
xchg
dec
les
sahf
clc
sahf
adc
adc
lea
adc
inc
mov
jg
pop
and
sbb
inc
xabort
pop
and
pop
sub
mov
fisttps
or
mov
dec
mov
ja
xchg
pop
inc
sub
nop
test
mov
addr16
aad
stos
mov
mov
popf
ja
filds
repz
sub
push
xor
fistpll
cmp
sahf
mov
and
fcom
add
loop
cmp
or
les
in
and
inc
mov
mov
push
test
push
decb
loope
shl
jb
push
add
or
lock
sbb
in
add
jecxz
mov
test
dec
repz
xchg
mov
mov
add
loopne
and
aam
loop
cmp
test
inc
jns
pop
adc
and
adc
ffreep
repnz
mov
ret
ss
mov
shlb
dec
lretw
xchg
inc
test
mov
inc
aad
pop
and
add
mov
adc
xchg
lret
jmp
and
push
jbe
mov
arpl
lock
pop
sub
loopne
js
jbe
xor
shll
ror
sbb
or
dec
filds
and
bnd
cmp
or
mov
xchg
test
in
cmp
sbb
lods
pop
into
cmc
mov
ror
nop
jp
call
push
or
call
stos
stos
lret
aas
mov
jecxz
xor
or
push
cmc
mov
std
icebp
in
std
and
or
out
or
add
leave
jb
pop
mov
pushf
pusha
fisttps
rcrb
add
sbb
adc
fcomp
cmp
sti
stos
dec
in
add
jecxz
mov
in
adc
dec
out
or
and
jbe
and
roll
and
mov
ljmp
in
lods
subl
stos
inc
jbe
fimull
cli
jp
jne
adc
pop
fdivp
cmpsl
sub
inc
popa
mov
pushf
test
xchg
cmc
adc
popa
jmp
adc
test
dec
pop
push
repz
cmp
in
add
aad
fwait
repz
jb
push
xchg
jge
mov
xor
fwait
cltd
push
mull
lret
cmc
stos
int
adc
adc
ficomps
data16
adc
iret
jmp
mov
loop
test
push
cmp
insl
cmpsb
cs
cmpsl
movsl
inc
pusha
add
repnz
sti
mov
js
push
imul
pop
pushf
sub
in
xor
loope
sbb
loope
shll
pop
pop
and
clc
jnp
cmpl
adc
arpl
aas
mov
inc
pop
cmp
pushf
pop
mov
mov
test
or
pop
xchg
mov
push
fnsave
ja
or
mov
in
out
xor
cmc
push
cmc
adc
xchg
mov
push
cmp
inc
leave
fisttps
jmp
es
dec
sbb
mov
data16
mov
and
cmp
fwait
xchg
vcmpps
nop
sub
adcl
sub
adc
call
cmp
and
loope
inc
or
fwait
aas
cld
adc
int
mov
inc
testl
popa
lods
dec
fistpll
in
out
out
inc
scas
sbbl
test
int
hlt
mov
dec
xchg
in
nopl
popf
jo
sbb
push
mov
cmp
push
call
std
pop
dec
add
sub
add
repnz
sbbl
pop
jnp
pusha
adc
pop
negl
shrl
mov
in
jo
jge
nop
insl
les
dec
or
das
in
lock
popf
xchg
push
adc
mov
clc
xlat
fwait
repnz
addr16
sub
fstl
shl
mov
daa
fnstcw
mov
and
test
adc
pop
and
aas
mov
lahf
icebp
adc
ss
push
mov
add
jge
cmp
sbb
mov
pop
mov
aaa
dec
adc
add
js
outsl
paddusb
jle
dec
dec
dec
loope
mov
xchg
adc
push
dec
inc
out
dec
pop
into
aam
mov
mov
fdiv
gs
dec
xor
xor
jae
repnz
mov
popa
leave
mov
cmp
sub
mov
xor
pop
je
in
push
outsb
xchg
fwait
xchg
cmpsb
pop
cmp
mov
out
dec
xchg
mov
jmp
add
imul
mov
shll
fldenv
pop
rolb
adc
inc
push
popa
cmp
outsb
int3
xor
jle
cli
jp
dec
mov
sub
scas
cwtl
in
mov
sbb
repz
mov
ljmp
adc
inc
push
push
cltd
rcrl
rcll
dec
add
int
pop
xor
out
jns
and
cmpsb
push
fmuls
xor
scas
fcomip
xchg
inc
mov
mov
imul
fdivrp
fs
jge
adc
inc
les
scas
subl
adc
pop
cmp
mov
mov
xor
cmp
popf
clc
js
data16
cltd
iret
and
out
sbb
aaa
mov
rcrl
jp
mov
mov
jp
and
pop
add
push
shlb
daa
xchg
out
mov
daa
mov
mov
subl
cmp
mov
dec
xor
inc
xchg
mov
ret
je
jne
jmp
out
jne
jge
ret
ficomps
mov
xchg
cmpsl
pushf
es
pop
pop
pop
dec
cmc
ja
cwtl
sub
movsl
int
and
jno
sbb
cli
jge
scas
xchg
arpl
dec
loope
xor
sub
fcmovnbe
fnstcw
sub
fsubrl
pushf
stos
nop
movsl
mov
and
xchg
dec
pop
pop
or
pop
inc
lds
cmp
fdiv
cwtl
jne
fldl
and
xchg
adc
inc
push
aaa
imul
inc
ja
adc
cltd
add
pop
sti
outsb
rorl
das
or
push
xchg
ljmp
scas
mov
sbb
mov
stc
ja
jecxz
push
sub
cld
mov
sti
inc
sub
jmp
jecxz
cmpsl
sub
mov
adc
xor
hlt
and
stos
repz
leave
mov
mov
rolb
pop
push
aam
pushf
add
and
or
out
imul
ret
xchg
push
dec
push
fbld
out
das
scas
pop
popf
stos
adc
xorl
fists
or
cs
out
ror
fisttpl
les
jle
mov
jmp
movsb
adc
add
mov
push
mov
cltd
pop
fnstenv
mov
and
push
adc
ds
outsl
mov
add
pop
shlb
pop
movsl
xor
inc
or
fmulp
inc
out
ffreep
movsl
cltd
cmp
dec
test
jge
or
loope
mov
and
cmp
scas
sbb
dec
unpcklps
hlt
daa
stos
addb
and
adc
lahf
lods
xor
roll
cmc
out
mov
fidivrs
pop
jb
int
outsl
cmp
dec
adc
movsl
jl
pop
ljmp
dec
into
inc
jbe
xlat
pusha
insl
into
pop
popf
fadd
pop
das
pushf
push
mov
ja
inc
lock
push
out
mov
shll
shrb
je
test
add
lods
jnp
shl
fdivs
or
in
andl
leave
or
mov
pusha
jnp
fstl
nop
fs
cwtl
in
mov
not
fs
aam
jne
fildll
test
mov
lret
inc
pop
push
xchg
mov
fidivrl
and
adc
push
mov
mov
cmc
ficoml
sbb
nop
movnti
lret
adc
xor
out
stc
notb
sti
adc
jae
mov
jle
xchg
inc
mov
fdivrs
jp
cmp
orb
out
ret
scas
push
push
adc
je
xor
and
popf
movsb
add
outsb
shll
fmuls
imul
pop
mov
xchg
gs
jmp
jg
xor
arpl
ja
xchg
dec
lods
stc
cld
mov
lods
mov
inc
test
rcll
push
hlt
lcall
jbe
fwait
sbb
xchg
inc
loope
sub
enter
dec
sbb
mov
sub
scas
out
dec
es
decl
jbe
popa
mov
jbe
out
jnp
outsl
cmp
mov
mov
icebp
push
daa
fs
jmp
ljmp
pop
scas
frstor
cwtl
mov
lcall
outsl
push
ljmp
push
gs
mov
nop
in
adc
enter
scas
fcompl
imul
xacquire
into
mov
xchg
cli
outsl
mov
bound
adc
push
pop
pop
and
sbb
bound
sub
pop
dec
mov
mov
add
mov
sub
loopne
dec
movsb
dec
mov
roll
lret
inc
ret
movsl
lods
out
stos
and
pushf
test
cwtl
aad
fcompl
cmc
repnz
repz
jbe
xorb
mov
push
and
and
loope
daa
ss
pushf
mov
ud0
jb
cwtl
jb
aas
insb
inc
push
icebp
mov
pop
addr16
loop
mov
in
lods
and
or
push
jg
es
fmul
push
inc
xor
and
test
js
decb
scas
jne
daa
popa
fcmovu
add
or
clc
aas
pop
adc
xchg
sarl
mov
imul
xchg
xor
lahf
sbb
imul
nop
cwtl
fimuls
and
movsb
dec
inc
cmp
adc
lea
int
sar
in
xlat
push
adc
pop
dec
movsl
das
xchg
iret
adc
push
adc
out
mov
outsl
mov
mov
fldcw
aad
and
jecxz
mov
shlb
add
ffreep
add
cmp
mov
mov
push
adc
jno
rcl
repnz
mov
inc
xchg
fiaddl
jle
pop
pop
sbb
and
daa
enter
std
pop
rcr
xlat
cld
push
test
mov
and
cmpsb
test
cmp
jg
cmc
or
loopne
xchg
push
or
or
icebp
xor
xchg
mov
xchg
out
je
sti
cli
mov
pop
xchg
pop
stos
add
pop
inc
sarb
dec
mov
inc
in
hlt
mov
fists
or
addr16
jge
jns
ss
sub
mov
dec
push
xor
outsl
scas
iret
mov
test
or
xchg
pop
fldt
popa
cmp
loop
mov
mov
pop
fisubrs
bound
push
out
xchg
jl
rolb
scas
mov
shl
sarb
popa
pop
lods
fwait
das
or
lods
in
sub
repnz
add
jmp
ret
imul
mov
loopne
into
xchg
jle
mov
cmc
push
cmc
lock
pop
pop
sbb
out
xchg
or
shll
mov
icebp
cmp
add
push
rep
and
in
test
cmc
inc
orl
inc
cmp
fsub
push
stos
lcall
jg
xchg
mov
clc
mov
inc
push
push
adc
xchg
outsl
arpl
add
cld
idivl
sub
ss
xlat
rol
mov
cmc
pop
or
jb
jae
jns
cmpsl
jmp
xlat
jp
cmp
pop
mov
push
xor
lock
test
xor
les
shlb
dec
inc
sub
lods
iret
pop
divl
repnz
stos
mov
loopnew
pushl
js
incl
push
adc
xor
xchg
dec
mov
imulb
imul
rcl
inc
jb
push
nop
jne
lcall
enter
push
mov
mov
aam
mov
cmpl
mov
mov
sbb
test
test
lcall
sub
xor
and
push
sub
add
inc
xor
sbb
add
dec
fisttps
mov
add
aad
mov
pop
movsb
dec
mov
xchg
add
cwtl
mov
xchg
loop
in
push
xchg
ljmp
and
push
push
xor
dec
stos
mov
leave
cmp
add
mov
std
xchg
cmc
push
je
dec
push
pop
xchg
aam
rolb
cld
leave
adc
ss
in
lock
inc
mov
jae
dec
jns
call
mov
ret
je
cs
xchg
ljmp
aaa
rcrb
lea
cwtl
lret
shlb
daa
dec
ds
push
xchg
lods
das
mov
mov
xor
xchg
mov
xor
mov
pop
ljmp
icebp
loop
or
dec
fisubs
add
xor
adc
inc
lret
inc
ss
adc
xchg
xchg
imul
fisttpll
dec
int3
in
out
sub
repnz
notb
in
rcll
xchg
sub
pusha
sub
clc
dec
aad
xchg
mov
mov
mov
rol
cmp
mov
pop
dec
sub
xchg
stos
mov
out
loopne
lahf
test
sti
daa
movb
inc
sahf
daa
push
xchg
test
pop
mov
sub
lret
movsl
mov
cs
stos
push
outsb
mov
pop
shll
ja
sbb
push
outsb
repnz
jle
push
stos
incb
addr16
xchg
adc
into
adc
test
iret
add
push
mov
mov
mov
popf
and
and
xchg
cltd
inc
add
cmp
sub
pop
xchg
cmpsb
subl
mov
vpmacssdqh
aam
inc
stos
or
dec
lds
xchg
flds
inc
jne
sarb
popf
mov
fstpl
mov
outsl
lret
daa
pop
dec
loop
xor
fmuls
adc
add
pop
push
fwait
adc
popf
pminsw
fadds
or
mov
int3
sub
pop
les
adc
rcrb
xor
test
dec
jne
stos
pop
mov
and
rcl
push
loope
lds
mov
xor
test
adc
mov
cld
fs
adc
inc
mov
mov
inc
xchg
test
popa
enter
stos
popa
mov
pusha
sbb
xchg
es
adc
std
int
movb
sub
test
fmull
std
fildl
sub
out
out
jbe
shr
ljmp
loop
sub
js
dec
out
scas
mov
inc
inc
adc
filds
sbb
and
push
pop
shrl
out
scas
leave
push
push
adc
mov
mov
shll
inc
jmp
mov
addb
ss
jae
push
fwait
cmp
loop
cmp
ljmp
cmp
mov
dec
sub
pushf
pop
movsb
sbb
js
mov
add
cmp
sbbl
jecxz
xor
in
push
sahf
test
mov
fdiv
gs
arpl
xchg
jmp
scas
int3
sub
cmc
ljmp
fwait
andb
sub
xchg
loopne
inc
in
sub
fcmovne
jge
jb
cltd
pop
xchg
imul
mov
jl
dec
ret
fisubrl
mov
sbb
test
test
add
scas
pop
nop
mov
mov
xchg
movsl
jecxz
cmp
sub
test
stos
bound
xor
cmp
or
add
jl
mov
arpl
negl
or
and
mov
movsb
shlb
or
sti
je
roll
add
mov
adc
mov
sub
jno
fistl
mov
adc
add
push
and
lretw
mov
mov
lahf
fimull
inc
cmc
add
je
push
test
sahf
or
lcall
jb
jg
cmp
xchg
ret
mov
int
mov
rcrb
and
mov
inc
add
ja
mov
lods
cld
out
or
cmc
jg
cmp
shll
pop
testl
xchg
jae
xlat
xor
decb
test
fcomps
mov
jb
lcall
sub
jbe
out
loop
push
scas
test
jnp
fcmovnu
or
popa
mov
pop
sub
stos
dec
add
mov
test
push
enter
enter
js
std
aam
inc
cmp
sbb
fnstenv
sub
ja
dec
jbe
adc
pop
and
dec
mov
sbb
or
sub
adc
sub
adc
xlat
lcall
adc
cs
push
mov
cmp
ljmp
in
rcl
jp
pop
jne
mov
rolb
dec
adc
xchg
jecxz
in
xlat
dec
cmp
je
rcrl
outsl
popa
jge
js
cmc
rcrl
shll
adc
push
mov
out
shrl
mov
inc
sbb
mov
jle
sbb
inc
mov
mov
pop
subl
dec
mov
arpl
lret
cmp
dec
push
es
and
xchg
cmc
and
int
fidivl
cmpsb
lcall
pop
int
in
jle
add
sahf
in
in
insl
xchg
pop
es
sarb
mov
pop
les
mov
mov
fisttps
jecxz
pushf
jg
dec
lods
mov
cltd
fdivrp
pop
inc
xor
xor
sub
xor
add
add
mov
cmpsb
xor
mov
clc
icebp
mov
cwtl
xor
es
jno
imul
add
push
sbb
cmp
sbb
leave
cmp
xor
je
pop
fdivs
ss
cmpsl
jbe
push
add
push
mulps
pop
mov
and
mov
sahf
push
loopne
push
xorb
ret
imul
je
cmpsl
in
in
incl
sub
sub
cmp
push
lahf
pop
xor
sub
fmuls
out
push
cmp
jecxz
mov
dec
push
out
lds
fwait
pop
lahf
ror
faddl
mov
jb
gs
mov
fldcw
xchg
stos
xor
hlt
xlat
adc
stos
add
aaa
add
jb
xor
mov
es
lret
mov
or
cmp
xor
addr16
int3
mov
jle
cmc
mov
or
cmp
add
adc
xor
iret
fwait
outsl
or
roll
in
ds
subl
xchg
inc
mov
xlat
add
out
add
shl
add
mov
xchg
push
mov
or
jecxz
sbb
mov
add
mov
mov
pop
cmp
and
dec
push
inc
dec
jo
mov
mov
repnz
lea
inc
push
enter
clc
lds
inc
mov
xchg
pop
fistpl
pop
sti
jb
add
jl
jecxz
cltd
out
jle
sbb
nop
fisubrl
lds
add
jecxz
rep
std
lods
jo
inc
dec
add
xlat
test
shr
mov
js
dec
dec
fdivs
icebp
xchg
mov
add
cli
dec
pop
sbb
mov
lret
leave
or
cltd
mov
pusha
pop
int3
xor
lods
adc
xor
jmp
clc
sbb
mov
rolb
sarb
and
push
sub
lock
mov
cld
xor
cmp
jbe
sti
jbe
mov
call
mov
pushf
addl
push
jecxz
xor
pop
mov
xchg
mov
aaa
sbb
gs
mov
mov
dec
mov
sbb
jle
and
sub
xor
aam
int3
xchg
arpl
xchg
mov
arpl
add
jae
or
shll
push
mul
or
cmpsl
add
and
xor
lahf
mov
push
data16
sbb
imull
cmp
outsl
or
jae
sbb
imul
push
jp
add
out
add
push
or
stos
sub
aaa
push
and
imul
and
push
dec
cltd
jb
in
and
ljmp
or
lret
enter
mov
push
std
dec
mov
adc
mov
insb
daa
pop
ljmp
lds
in
cmpsl
mov
inc
fsubrs
jmp
add
push
sahf
pop
orb
nop
push
loope
fwait
adc
inc
jne
cmp
repnz
fimull
jecxz
add
icebp
mov
push
insl
push
xchg
ret
leave
aam
pop
and
pop
sbb
push
ljmp
sub
inc
lret
xor
fcoml
sub
loopne
mov
inc
enter
out
pusha
xor
mov
xchg
pop
pop
mov
stc
fstpt
jae
shr
js
pop
loope
xor
cmpsb
lea
cwtl
mov
shlb
xchg
int3
daa
ss
sbb
sti
aad
sub
sbb
outsb
mov
stos
dec
mov
rclb
xor
jle
scas
aam
mov
repz
mov
das
insl
add
xor
ss
stos
dec
sbb
outsb
pop
push
sbb
jge
pop
fimull
jmp
cwtl
test
pop
or
in
cmp
pop
mov
stos
xchg
leave
out
jecxz
add
bound
enter
in
dec
movsl
outsl
jbe
cltd
and
test
jl
mov
or
fxch
inc
mov
imul
or
xchg
adc
lds
adc
dec
dec
sub
sub
push
inc
mov
mov
sub
pop
add
lahf
or
xchg
dec
pop
iret
fcmovne
push
sub
les
loopne
lret
sub
or
pop
pop
lock
mov
cmp
xlat
lock
mov
and
pop
loope
pop
in
sub
ret
in
fidivrl
jb
nop
pop
dec
sub
lods
fdivs
aad
rcrb
mov
dec
mov
sti
loop
jl
pop
repnz
fucompp
push
and
jns
sahf
cmp
jno
push
mov
dec
fcomps
and
out
sub
pop
lret
mov
mov
mov
inc
into
mov
cmp
je
imul
hlt
add
or
lahf
dec
sbb
shl
in
nop
sbb
jo
push
pop
imul
xor
xchg
fidivrl
sbb
ret
push
sbb
xchg
sub
dec
scas
adcl
jecxz
add
lahf
fisttps
add
aad
jl
out
cmpsl
cmp
cmc
xor
or
ds
loop
xchg
jge
das
aam
mov
fldenv
gs
mov
stc
sub
fcomp
dec
jl
aad
inc
dec
decb
fsubr
rorl
ljmp
es
adc
gs
sbb
mov
popf
aaa
jg
dec
test
dec
in
movsl
aaa
psubsb
sbb
test
outsb
pop
push
jle
cmp
adc
cli
xlat
or
or
add
nop
shll
inc
call
inc
inc
add
add
mov
and
outsb
scas
mov
inc
or
lock
ss
stos
outsl
jp
push
shl
stos
and
add
movsl
ds
mov
jo,pn
and
xor
adc
ja
fwait
mov
and
or
sbb
out
cli
xor
daa
sbb
test
leave
mov
ret
pop
lea
sbbb
mov
test
sub
out
rorl
xlat
inc
outsl
decb
test
push
jle
scas
mov
movsl
and
sbb
jl
mov
leave
or
jne
xchg
in
lods
aas
leave
cmpsb
fwait
mov
out
cmpsb
cmp
xchg
sub
ret
test
xchg
pushf
cli
pop
je
mov
mov
pop
scas
inc
repz
lds
ljmp
pop
inc
or
mov
sub
pop
and
dec
fucompp
mov
ja
add
in
cwtl
cld
cmp
sbb
dec
xor
cmp
out
inc
xor
ret
mov
jl
in
stos
movsl
jbe
cltd
push
lret
push
jae
rclb
movsl
pop
aam
jae
pop
and
add
in
pop
out
mov
jb
pushf
stos
xchg
mov
imul
lret
fdivs
subl
pop
inc
or
pop
gs
in
mov
rcrb
xlat
add
jge
insb
movsb
mov
daa
lods
int3
push
mov
pop
pop
jnp
pop
in
dec
mov
sbb
xor
sub
aaa
mov
loop
test
ret
add
sbb
mov
cmp
mov
push
test
jl
ret
sbb
sbb
mov
ds
icebp
push
mov
mov
das
xchg
or
lcall
outsl
and
sbb
xchg
xchg
cmpsb
rolb
mov
out
ret
cmp
aas
cmp
ucomiss
xor
fcmovnb
adc
cmp
push
scas
xchg
fcoml
ficompl
cmp
adc
movsl
out
push
jbe
iret
mov
jge
clc
leave
leave
pop
icebp
mov
mul
push
pop
add
cltd
or
test
mov
movsl
and
adc
fiadds
xchg
cmp
sub
pop
sub
dec
inc
sub
into
movsl
sub
cmp
aam
and
add
cmp
xchg
insl
sbb
insb
es
or
bound
pop
jbe
repz
mov
stos
test
jle
lret
xchg
popf
aad
ljmp
orps
sbb
nop
xlat
test
xchg
jae
mov
nop
aaa
add
mov
push
mov
xchg
mov
shll
dec
jo
or
xchg
int
cli
and
aas
dec
jl
rcrb
mov
nop
repz
adc
and
hlt
mov
mov
das
jmp
insb
gs
mov
popf
or
cmpsl
mov
mov
or
jne
adc
int3
mov
into
test
sub
jmp
hlt
fsub
aam
mov
and
in
push
iret
test
in
in
in
and
or
out
imul
sub
mov
fs
xchg
sub
lods
mov
dec
fldenv
jb
xor
loope
aad
test
pop
mov
jb
rorb
lods
jns
cmp
mov
sub
xchg
ds
sbb
mov
sub
mov
inc
and
mov
subl
dec
add
inc
mov
movsl
call
insb
icebp
lds
and
lods
inc
and
jnp
shrb
js
adc
xchg
enter
mov
pop
add
les
out
sbb
add
lret
out
dec
inc
stos
mov
pusha
orl
inc
xchg
and
push
in
or
arpl
sub
dec
inc
mov
push
sti
mov
xor
add
mov
orl
pusha
loope
aad
loop
push
mov
rcll
cwtl
cmpsl
lahf
cmp
mov
xor
mov
lahf
mov
in
cltd
aad
rorl
std
cmp
std
or
or
jge
and
dec
loop
hlt
mov
mov
fidivl
iret
cmp
mov
pop
jne
dec
nop
cmp
push
pop
popa
aaa
and
stos
cmp
add
cmp
cmpsb
mov
std
rcl
lahf
jg
popf
jae
pop
jg
lea
stc
mov
out
sub
or
sbb
pop
mov
mov
sub
popf
lret
xchg
mov
pusha
mov
pushf
sbb
insb
mov
das
pop
or
das
icebp
or
mov
jo
adc
dec
pop
iret
pop
fwait
out
in
mov
in
arpl
iret
sub
xorl
xchg
roll
push
lea
jmp
sbb
test
jb
rclb
mov
push
mov
scas
fsubr
push
popa
sub
in
lret
jle
xor
xlat
cmp
popf
inc
mov
cmc
pop
ja
push
mov
cmp
stc
mov
subl
sbb
mov
add
les
into
cmp
push
add
fstl
inc
xor
pop
push
inc
xor
shll
or
cwtl
sbb
push
mov
mov
xchg
mov
daa
jnp
add
fs
ror
dec
test
pop
test
push
mov
in
aad
and
insb
mov
mov
push
inc
jp
mov
mov
push
aaa
or
and
xor
out
sub
lret
jl
push
jnp
pop
in
out
enter
add
mov
pop
movsb
sbb
cmpsl
push
sub
iret
stc
cmp
or
cmp
imul
adc
push
scas
shl
dec
pushf
jnp
les
mov
rcr
aaa
lods
inc
fsts
or
jecxz
inc
decl
lahf
dec
fldl
mov
pop
ret
aad
inc
jle
in
jb
xchg
mov
lret
test
imul
adc
loopne
cmc
inc
pushf
mov
repnz
fwait
cmpsb
pop
jl
gs
inc
imul
pop
xchg
and
xor
mov
push
jae
jo
push
add
sub
outsb
cmp
pop
add
into
sbb
push
cwtl
xchg
fdivrl
pop
shlb
repnz
inc
jmp
arpl
push
xchg
dec
push
je
mov
or
mov
ljmp
in
mov
lahf
push
push
and
ljmp
and
daa
fdivs
dec
push
lahf
pop
idiv
addr16
outsl
sahf
or
sbb
insw
ret
fstps
pop
in
cmpb
mov
mov
in
clc
pop
jo
inc
push
fwait
mov
push
sub
jae
cli
push
pop
mov
popf
or
ficomps
jo
and
popf
cmpsl
scas
inc
je
sbb
pop
pop
lret
stc
sbb
adc
test
rep
mov
or
hlt
push
push
mov
xchg
xchg
sbb
fcomps
xchg
adc
sbb
jecxz
out
out
mov
popl
add
pop
int
mov
mov
int3
xchg
pop
add
xchg
push
pusha
sub
andl
sub
xchg
loope
cld
mov
sub
adc
xchg
stos
sbb
stos
dec
cmp
fstpt
mov
adc
out
cmp
test
dec
jl
jecxz
aaa
pop
jne
fistl
dec
pop
push
rcrl
scas
adc
mov
push
pop
sub
jb
mov
xchg
ss
mov
fstl
movb
test
jne
jb
stos
sbb
inc
shl
andl
repnz
in
dec
data16
pushf
push
cmp
popa
mov
aaa
xor
and
mov
addr16
xorl
arpl
mov
xor
mov
faddp
int
scas
leave
es
into
mov
sub
arpl
ja
ret
sub
mov
adc
add
jle
aas
rcrl
and
sarl
arpl
jp
pushf
mov
and
add
add
xchg
or
xor
inc
cmpsb
xchg
xlat
les
or
push
mov
pushf
or
cmp
notl
add
sbb
scas
fdivp
cwtl
fildll
lret
dec
dec
and
adc
outsb
sarb
and
push
addr16
les
or
scas
and
in
lret
mov
xor
inc
adc
pop
testb
repz
popa
arpl
dec
mov
mov
mov
mov
ds
pop
pop
ret
jns
push
lret
dec
push
mov
sarb
mov
cltd
pop
push
loope
push
pop
sbb
adc
jno
addr16
xor
in
stos
jns
popa
mov
jmp
in
roll
imul
addr16
or
js
sub
add
loop
push
mov
fnstsw
and
test
fildl
inc
in
std
sub
and
cld
xchg
push
shll
add
mov
cmp
test
sbbb
loop
pop
push
inc
ss
pop
pop
inc
orb
xchg
movsb
and
adc
leave
dec
push
cmc
mov
mov
dec
loop
jb
insb
sub
mov
ret
jnp
notb
sbb
outsb
in
push
xchg
mov
cli
mov
pushf
sub
insl
cmp
sub
ds
iret
or
fxch
and
iret
in
mov
popa
sub
rorl
push
faddl
outsl
sub
imull
and
xor
jecxz
jmp
cmc
mov
inc
jge
cmpsb
jp
xchg
jg
insl
int3
pop
in
adc
or
xchg
pop
out
and
out
mov
fcoms
or
sub
cmp
stc
in
das
sbb
lds
inc
out
dec
in
xor
add
jp
fwait
add
sub
jae
cli
dec
mov
popa
pop
and
mov
pushf
test
pop
aaa
loop
cmp
pop
xchg
mov
insb
push
lret
push
xchg
jl
push
mov
cmp
mov
cld
sbb
loop
lock
adc
sub
and
push
dec
cmp
stc
mov
sub
xor
xchg
push
xchg
aad
push
mov
cmpsb
js
push
pop
xor
mov
clc
jge
xor
lods
adc
mov
dec
out
mov
cmpsb
cli
aas
push
cmp
out
pop
pusha
hlt
shl
fsubrl
jg,pt
shl
outsb
xor
and
jg
outsb
in
adc
jae
mov
mov
cmp
inc
xor
and
or
cmpsb
add
jg
xchg
mov
out
xchg
xor
inc
cltd
cmpsb
in
ss
pop
jge
push
xchg
pop
sub
cmc
gs
fists
xchg
cltd
sbb
pop
push
pop
les
xchg
push
sbb
push
push
xchg
ficoml
nop
push
cmc
movsl
lods
xor
lret
insl
pop
push
inc
jae
out
xchg
fadd
xlat
fldcw
sub
and
dec
lds
jne
xchg
fisubrl
or
sbb
mov
js
mov
movsl
and
testl
subb
mov
mov
ret
xchg
adc
mov
xchg
sub
mov
push
lock
lds
or
dec
jb
aaa
dec
add
aas
shl
mov
xor
out
cmp
pop
mov
push
jae
pusha
mov
scas
add
in
mov
pop
mov
shl
sbb
cmp
adc
adc
lahf
into
sti
sub
jl
push
jns
inc
jmp
jle
call
jle
outsl
xor
dec
adc
and
int3
push
mov
sub
mov
les
aam
ds
inc
ret
aas
sbb
lret
in
test
lcall
aad
lea
imul
sub
jae
ret
and
inc
test
xchg
mov
out
pop
jecxz
dec
jecxz
mov
sbb
sbb
sbbb
inc
or
pop
jle
icebp
jle
shll
mov
mov
popfw
pop
mov
mov
xchg
jno
mov
xchg
inc
mov
cmp
outsb
sub
and
mov
rorb
push
push
xchg
inc
pop
shlb
or
cltd
and
pusha
push
andl
pop
scas
insb
dec
mov
inc
xchg
jge
dec
enter
leave
pusha
jg
je
adc
xor
pop
pop
leave
mov
cli
loop
inc
push
add
jp
nop
sub
fdivrl
ficompl
jl
ljmp
xor
sbb
loopne
aas
cmc
in
out
lret
and
shll
and
cmp
xchg
and
mov
pop
jae
mov
bound
pop
bound
or
out
dec
cmovge
pop
jnp
push
push
gs
jbe
dec
in
mov
je
pop
pop
lahf
mov
jnp
loopne
add
movsl
imul
jmp
loope
mov
lcall
jg
insb
gs
push
mov
mov
imul
add
dec
in
in
lahf
fs
pusha
xor
mov
out
xor
lods
cmp
pop
jg
cmc
insl
popl
jno
xchg
xchg
cmpsb
push
lods
mov
or
or
pop
add
test
mov
leave
adc
mov
inc
hlt
fsubrs
sbb
aad
lods
ljmp
sbb
cmpsb
add
lret
inc
clc
jmp
cmc
cli
into
jle
sub
inc
popf
insb
cltd
into
gs
mov
dec
mov
mov
loop
cwtl
fdivrp
test
mov
sub
xor
pop
pavgw
pop
mov
sbb
test
daa
test
int
xchg
pop
mov
rcll
aam
and
sub
mov
xchg
push
not
dec
pop
iret
inc
cmp
dec
sbb
popf
and
ss
pop
pop
pop
bound
in
jge
rcrb
lcall
mov
stc
test
js
jns
mov
adc
jbe
mov
cmp
inc
hlt
xchg
jmp
jb
mov
dec
lret
icebp
jle
pop
jo
pop
sarb
sbb
push
ljmp
insl
mov
imul
jne
lahf
jbe
mov
out
mov
add
repz
pop
sahf
fistps
push
imul
pop
cmp
sub
loope
imulb
cmp
rolb
pop
sub
scas
push
std
mov
pop
je
pusha
adc
fsubr
and
add
in
mov
not
xchg
outsl
or
jb
push
sahf
dec
jae
cmp
pop
aam
add
cmp
pop
loopne
stos
mov
scas
xchg
mov
jmp
addr16
movsb
mov
into
mov
fcoml
mov
add
pop
sub
daa
clc
aam
or
mov
lock
out
cmpsl
es
sub
data16
xor
add
dec
repz
jns
mov
add
sbb
outsb
cwtl
cmove
outsl
mov
or
pusha
flds
or
les
nop
fisttps
fsubs
xchg
or
push
adc
mov
jmp
jg
ljmp
mov
push
testl
fstpt
mov
fistl
das
fcmovne
mov
cmp
bound
push
loope
sub
leave
loope
fstpl
inc
outsl
lds
fwait
dec
sbb
pop
mov
push
mov
lock
cmp
in
jg
cmp
divl
cmp
sbb
xchg
ss
nop
repz
ss
lods
xchg
fbld
leave
dec
dec
stos
shrb
sub
sbb
fs
orl
xor
pop
push
jns
mov
pop
testl
sub
pop
cwtl
mov
imul
fstpt
popa
dec
sbb
jne
test
mov
pop
pop
shrb
sbbb
in
xor
fidivrs
movsl
jmp
lock
jae
pop
test
add
cmp
fsubr
add
lea
jl
es
cmp
inc
int
lret
cmpsl
dec
or
test
adc
jno
dec
sarb
pop
pop
jo
cmp
lret
bound
jecxz
lock
ss
push
fists
cmp
pop
outsb
xchg
icebp
or
scas
popa
mov
cltd
sub
ljmp
cmp
pusha
pop
cli
fistps
push
jb
rep
stos
add
or
inc
outsl
movsb
cmp
call
mov
push
jne
push
fdivs
lock
mov
lret
cli
xchg
pop
ss
aas
or
loope
stos
and
adc
sbb
test
mov
mov
xchg
push
xor
sbb
inc
jmp
jl
mov
push
mov
lret
mov
repnz
jecxz
xchg
jns
inc
aaa
pop
push
jns
push
mov
jmp
pop
loop
xchg
popf
xlat
sub
scas
mov
ja
les
jecxz
aaa
cltd
add
leave
stos
ljmp
sbb
push
mov
xchg
addr16
sahf
cmp
ljmp
ret
add
jno
xor
mov
mov
pop
xchg
cs
out
and
xor
imul
jge
pop
jl
cwtl
push
pop
dec
popa
emms
mov
dec
jne
in
mov
sbb
in
insl
data16
enter
push
xor
pop
mov
and
push
mov
mov
dec
pop
int3
out
mov
in
daa
sub
sbb
and
test
adc
sub
push
rcr
fildl
lock
ret
gs
mov
adc
js
sub
cltd
adc
das
inc
mov
pop
pop
mov
jp
mov
rorb
mov
test
fistl
mov
and
and
dec
lods
mov
mov
xchg
mov
and
xchg
sbb
push
add
mov
mov
xchg
ljmp
daa
test
sub
pop
jae
fs
jno
adc
std
cli
inc
call
lcall
call
sbb
aaa
xchg
fwait
adc
stc
hlt
fld
and
ret
or
lods
sub
aad
outsl
xlat
stos
jmp
sbb
cltd
rcr
negb
xlat
rcrl
outsl
mov
aas
ljmp
ret
pop
push
in
je
jl
loop
mov
daa
stc
mov
aaa
adc
dec
lea
rcrl
bound
out
push
testl
dec
dec
test
inc
test
xchg
outsb
push
jle
sub
inc
dec
cs
lods
push
xor
jmp
cmpb
or
hlt
cltd
les
and
das
shll
jl
sbb
mov
pop
pop
xchg
jno
enter
sbb
fcom
pop
arpl
aaa
add
stc
stc
dec
idiv
outsb
outsb
fisubl
jecxz
fcoms
imul
xor
jg
jecxz
mov
leave
push
pusha
lret
outsl
ja
fidivs
inc
sbb
sbbb
es
pop
int
arpl
pop
xor
and
inc
std
hlt
push
push
and
int3
xorl
jae
hlt
sbb
jecxz
adc
push
pop
call
dec
in
mov
ret
pusha
int3
mov
mov
test
cmpsl
push
pop
push
xchg
insl
adc
xchg
scas
jnp
xchg
dec
cmpsl
ret
add
inc
enterw
pop
mull
stos
mov
sbb
jmp
pop
popa
mov
jmp
stc
fwait
jns
addl
xchg
and
fiadds
std
mov
pop
lahf
lahf
jae
sub
and
imull
mov
sbb
je
cwtl
cld
inc
aad
add
fwait
out
js
fistps
mov
aam
in
xor
repz
mov
adc
cld
lock
cmp
mov
lret
arpl
jo
mov
adc
adc
roll
dec
and
gs
cmpb
mov
adc
dec
xchg
xchg
or
push
adc
popf
icebp
ja
stc
cmpsb
sbb
or
js
adc
fstpl
sub
xor
or
mov
addr16
sbb
xchg
inc
push
ret
push
shrl
ja
fs
icebp
in
mov
addb
sti
aaa
lret
insl
ds
push
test
vpandn
sarl
add
out
xchg
arpl
dec
xor
das
pop
nop
idivl
mov
sub
add
pop
aam
jle
fbld
dec
mov
and
popa
cmp
jnp
mov
or
es
jle
and
mov
data16
test
sbb
pop
outsl
jne
sbb
mov
out
xchg
inc
outsb
xor
xchg
jmp
or
mov
add
inc
and
push
sub
and
mov
jne
sub
jo
mov
negb
daa
lcall
xchg
hlt
sar
push
pop
adc
loop
mov
aas
add
fsts
repnz
cmp
inc
js
aam
fsubrs
sub
sub
pushl
outsl
mov
mov
and
fiaddl
add
cvtpi2ps
xor
sub
xor
dec
scas
mov
adc
pop
jae
mov
mov
adcl
adc
nop
lea
ret
pop
mov
test
pop
xor
mov
es
sub
mov
mov
add
cmp
ljmp
mov
imulb
mov
std
or
mov
pop
mov
aaa
adc
sub
mov
pushl
fcoml
cld
call
adc
loopne
xor
sahf
into
scas
push
add
or
ret
ljmp
int3
xchg
sahf
rcll
mov
cmpsl
lahf
pushf
mov
add
test
andb
inc
mov
and
pop
repnz
inc
push
sbbb
and
js
mov
jmp
push
call
movsb
out
pop
jle
mov
hlt
fcoms
test
and
test
mov
jae
shr
mov
and
adc
cmp
pop
fisttpl
pusha
fwait
mov
mov
test
xor
sub
clc
push
dec
pop
in
adc
pop
mov
out
mov
fbld
xchg
rorb
je
sub
mov
and
test
std
jno
mov
lret
pushf
inc
jb
int3
mov
sub
mov
jae
clc
popa
mov
inc
rcl
jle
dec
mov
or
pop
ss
push
fisttpll
cmp
imul
jnp
shlb
mov
inc
push
xchg
xor
aas
adc
outsl
xor
daa
and
fistps
leave
push
adc
loop
push
mov
lahf
lods
mov
jns
andl
cmpsb
ja
imul
stc
mov
jl
xor
jp
cs
sub
ficoml
lea
push
clc
aad
fs
dec
enter
into
pavgw
shlb
lret
out
jo
iret
subb
cmp
cltd
xchg
inc
jb
lea
lcall
jbe
push
insl
lock
mov
xchg
sbbb
mov
pop
lea
and
in
push
movaps
aam
stos
or
push
mov
adc
es
push
fwait
adc
loopne
mov
add
cmp
rcrl
push
or
cltd
xchg
inc
sbb
adc
shlb
cmp
ffree
daa
jne
xlat
jo
jmp
lock
mov
stos
enter
jae
mov
jmp
xlat
gs
xchg
cwtl
fiaddl
lahf
mov
movsb
sarl
sbb
les
add
xchg
inc
inc
sbb
lods
sub
jp
stc
lret
mov
stc
or
adc
fwait
imul
sbb
imul
mov
or
insb
adc
mov
stc
negb
xor
adc
xor
add
mov
stc
mov
mov
xchg
test
adc
in
jl
xchg
rcrl
cli
cld
addr16
inc
nopl
ss
mov
cld
mov
aas
cmc
mov
js
jg
adc
pop
orl
or
orl
mov
rclb
mov
mov
test
or
mov
fldt
jle
test
jg
lods
stos
gs
shll
hlt
test
popf
adc
jnp
in
inc
lea
mov
sub
xchg
sub
inc
xchg
js
rol
cmp
xlat
imul
lahf
sbb
or
popa
jge
mov
jp
cmp
insb
call
cmpsb
dec
xor
or
jo
outsl
mov
ja
sbb
rorw
scas
lock
lretw
test
imul
add
xchg
sub
pop
int
jge
test
mov
sbb
incb
fisttpl
mov
xchg
mov
xchg
jg
stos
xor
mov
stc
sbb
inc
mov
imul
or
pop
and
adc
iret
jae
add
lahf
sbb
into
dec
cltd
stc
cmp
sub
push
js
std
inc
roll
cmp
jge
pop
push
cltd
mov
sub
push
xor
arpl
pop
dec
int3
into
es
cmp
xchg
cmp
sti
xor
jge
or
push
pop
out
dec
cmc
lahf
hlt
mov
es
cmpsb
or
mov
stos
and
push
xchg
daa
pop
mov
pop
cmpsl
mov
push
ljmp
mov
lret
mov
mov
sti
ficoml
or
mov
pop
push
push
test
mov
cmp
add
pop
mov
loope
push
lahf
divb
xlat
xrelease
int
insl
call
xor
popf
jbe
lret
xor
fimull
out
insl
add
aad
pop
outsb
sub
pop
call
in
test
les
xchg
and
lret
pop
xchg
push
imul
js
jg
ret
pushf
and
or
inc
pop
inc
test
arpl
call
mov
bound
mov
ret
jge
pop
inc
fisubs
cmp
pusha
mov
jl
cmp
bound
inc
sub
hlt
pop
pop
pusha
int3
sub
stos
and
arpl
jae
cmp
jne
adc
inc
jmp
inc
add
inc
or
mov
ss
sub
push
pop
and
imul
clc
inc
xchg
aaa
test
xor
inc
inc
or
sub
pop
cmp
jl
dec
adc
decb
cmp
insb
adcb
add
push
mov
pop
push
ret
inc
dec
sbb
fidivs
jp
push
mov
and
add
mov
and
inc
scas
push
xchg
andb
jbe
push
push
jle
loop
hlt
cmp
in
cmp
inc
push
loop
emms
mov
add
shl
repz
outsb
xor
add
das
push
dec
xchg
jecxz
jb
push
cmc
repnz
imul
dec
inc
push
mov
sbb
mov
xlat
lret
lods
fisubrl
fisubs
jge
gs
mov
pop
add
push
loope
inc
adc
cltd
and
xor
je
fdivp
push
jp
cltd
sub
movsb
push
xchg
lods
cs
ds
cmp
lods
cmpsl
inc
cmp
or
jae
dec
inc
or
inc
inc
xor
push
aam
xlat
subl
mov
dec
out
fidivrs
aas
femms
xor
clc
mov
pop
pop
sbb
mov
inc
push
xor
stc
fldl
add
inc
out
fistl
and
mov
jge
push
dec
fwait
jle
mov
mov
mov
xor
scas
leave
jecxz
hlt
out
jno
lds
cltd
adc
sbb
pop
sbb
psraw
mov
sbb
pop
sub
loop
and
daa
fwait
cmp
outsl
cmp
lahf
daa
mov
xchg
cmpsb
lret
ja
scas
mov
cld
push
mov
leave
inc
ficomps
in
arpl
push
mov
in
dec
add
inc
dec
xchg
mov
xchg
fidivrs
enter
pop
std
lret
in
jecxz
and
fmulp
and
cmp
jmp
in
or
test
incl
mov
aaa
inc
mov
addl
pusha
fldl
aas
xchg
sahf
or
movsl
xchg
xor
nop
mov
mov
jg
test
popf
mov
pop
or
jg
mov
add
imull
test
sti
ret
test
ret
arpl
scas
rcll
mov
mov
push
sbbl
enter
mov
pop
lret
xchg
js
pop
pop
sbb
push
sti
dec
or
subb
mov
pop
jo
inc
popf
ret
lret
sub
cltd
lock
cmp
dec
bound
mov
sbb
push
pop
add
arpl
sub
ljmp
dec
jae
inc
cmp
sbb
or
ret
xchg
dec
mov
sub
lcall
lea
add
push
cs
mov
or
inc
imul
cwtl
sbb
lcall
daa
cmp
bound
adc
xchg
in
cmp
lock
xor
fidivs
testl
mov
iret
adc
repz
test
sbb
mov
dec
idiv
mov
jle
fld
jp
pop
shl
xchg
xor
dec
adc
mov
mov
shrl
ja
sub
xchg
out
scas
or
sarb
jnp
scas
ret
ds
and
sbb
insb
add
sbb
out
bound
push
xor
popa
movaps
test
mov
lods
mov
add
pop
pop
adc
jecxz
movl
pusha
mov
shlb
imul
fisubs
xchg
push
cmp
sub
sahf
cmp
mov
push
xor
icebp
and
push
mov
mov
jbe
gs
fwait
mov
popf
fmull
mov
add
andb
push
and
sahf
call
cmp
jp
dec
mov
lahf
pop
push
mov
ljmp
rol
bt
dec
testb
and
cmp
push
fdivr
mov
int3
pop
lock
xchg
rolb
xchg
inc
jge
add
out
insb
shld
imul
scas
je
xlat
dec
loopne
sbb
into
cmp
mov
cmp
mov
cmp
add
bound
sub
popf
push
popa
adc
mov
push
es
add
sbbl
cltd
inc
mov
adc
lea
decb
cmpsl
outsb
leave
push
push
imul
ss
in
add
adc
stos
leave
test
add
or
dec
leave
lret
xchg
cmpsl
popa
je
cmp
rorb
in
stc
aam
push
lret
outsb
pop
lret
mov
lcall
or
xor
loop
xchg
rcrb
aad
enter
jge
repnz
aad
pop
stc
stc
mov
mov
xchg
or
incb
in
ds
jge
mov
add
add
mov
movsb
enter
jno
mov
pop
inc
shrl
test
inc
jecxz
ja
arpl
test
fldenv
mov
pop
loope
arpl
sub
push
repz
into
lds
iret
xchg
movsl
out
stos
es
jecxz
push
xor
dec
jg
jbe
adc
jge
or
sub
dec
xor
hlt
xor
leave
addr16
adc
fwait
mov
loope
fneni(8087
popl
or
push
jmp
xor
jae
loop
rol
jbe
lds
adc
sti
pop
icebp
int3
pusha
dec
imul
pop
inc
cmpsl
inc
cmpsb
mov
mov
fwait
sbb
mov
sti
iret
data16
insl
out
ss
mov
std
mov
lds
cmp
jo
cld
cmp
cmp
pop
out
pushf
xor
lret
sbb
xor
push
incl
dec
stos
test
repz
mov
xchg
loope
inc
hlt
ret
or
fbld
loopne
int
adc
jmp
jmp
add
pop
test
adc
jns
xchg
pop
fs
or
je
pop
cli
xor
mov
xor
cmp
aam
daa
call
loopne
pop
nop
push
xchg
jne
shlb
sbb
mov
pop
push
push
fnstsw
xchg
add
pop
jbe
sbb
inc
leave
cli
push
dec
arpl
xor
pop
jg
mov
push
inc
mov
lock
pop
out
add
pop
dec
mov
inc
and
or
jbe
test
adc
xor
push
jl
mov
out
pop
cmp
pop
stos
hlt
dec
inc
jne
sti
xchg
lock
test
xchg
andb
inc
inc
outsb
loopne
add
fisubrl
or
and
add
mov
xchg
popa
in
cmp
fistl
cmpsb
aad
shl
or
lock
cmp
or
rep
jo
xchg
cwtl
dec
outsl
int3
add
adc
xchg
nop
mov
test
jne
mov
adc
push
add
test
in
shl
jmp
orb
pop
push
out
adc
stc
aad
mov
push
out
lods
dec
fsubr
add
mov
mov
and
ja
test
inc
out
out
arpl
sub
hlt
adc
clc
lret
inc
pop
mov
sarl
cli
lret
je
mov
pusha
call
sbb
leave
mov
add
xchg
inc
xchg
loopne
xchg
movsb
mov
sbb
mov
xlat
push
gs
cmp
int
jmp
int
aas
jmp
mov
aad
std
xor
inc
pop
sbb
orl
mov
push
mov
push
add
jmp
xchg
add
push
adc
jecxz
mov
add
rcl
lret
sub
les
mov
mov
dec
sub
mov
popf
sbb
mov
push
out
jge
imul
dec
inc
jb
movsb
ret
sti
iret
pop
xor
adc
sub
lds
aas
add
faddl
ja
gs
sbb
ds
add
sbb
cmpsl
loope
mov
inc
sbbb
popf
fstpl
lcall
imul
pop
dec
jnp
ret
in
ss
int
lods
rcll
shlb
and
pop
xor
xchg
and
popa
lret
push
fidivrl
sub
negl
in
int3
aam
sbb
dec
fcmovnb
test
cmp
shrl
pop
leave
test
je
push
mov
ret
gs
xor
pop
jp
dec
mulb
cmp
jae
push
bound
add
inc
daa
mov
inc
stos
out
adc
jmp
insl
mov
loop
mov
xor
fbstp
call
mov
dec
js
push
mov
jne
into
lea
and
push
shlb
inc
pop
fcoml
mov
sbb
stos
push
push
push
sub
mulb
jmp
sub
in
test
sti
xor
outsl
insl
and
mov
jb
dec
std
popa
daa
ja
fldcw
in
mov
mov
or
add
aas
mov
fwait
outsb
gs
stc
adc
xchg
add
pop
cmp
xchg
pusha
xor
xchg
ret
movsb
inc
adc
cltd
xchg
adc
inc
lds
xchg
jnp
pop
or
movsl
daa
or
mov
sahf
and
mov
or
push
int
idivb
notb
inc
mov
add
fisubl
dec
adc
mov
pop
jbe
pop
popa
scas
mov
xchg
mov
dec
sub
mov
mov
mov
sbb
cmp
inc
xchg
xchg
push
inc
mov
or
int3
sub
fsubrs
test
ljmp
jbe
cwtl
stos
mov
in
mov
shrl
push
jmp
cmpsb
cmpsb
pop
lds
pop
faddl
sub
add
popf
inc
xchg
mov
mov
sbb
shrb
cli
xchg
dec
jae
std
mov
mov
popa
and
jno
jo
repnz
in
insl
jno,pn
jmp
cld
call
imul
adc
inc
stc
test
test
cmp
lods
sbb
ss
pop
out
sbbb
adc
mov
jns
test
stc
sbb
and
pop
loope
ret
lods
iret
cmp
mov
xor
negb
xor
mov
pushf
push
jecxz
int3
mov
dec
loopne
sub
cli
fwait
dec
fs
xor
mov
fiadds
cmp
push
dec
stc
mov
inc
lret
into
jae
mov
and
ss
in
lret
push
aam
pusha
outsl
push
inc
jl
xchg
pusha
sti
sbb
ljmp
subb
loopne
cmc
lds
mov
mov
pop
and
mov
sti
lods
mov
popa
or
push
mov
pop
add
xchg
jb
rolb
push
mov
test
dec
xchg
mov
push
aaa
in
testl
fmuls
adc
imul
xor
pop
adc
cmpsl
adc
lret
es
push
mov
cltd
mov
mov
pop
pop
push
sub
ss
out
mov
xor
jl
outsl
lret
pop
push
repnz
cs
adc
es
leave
lcall
push
fimull
and
dec
pop
das
fstpl
dec
in
fsubs
dec
adc
loope
add
sbbb
inc
sub
mov
cs
jo
dec
xor
pop
sub
ret
xor
stc
sbb
aaa
das
add
mov
daa
push
mov
dec
inc
dec
push
repz
push
test
add
inc
push
jbe
arpl
imul
insl
xchg
ret
mov
stos
out
call
xchg
leave
jecxz
das
gs
cltd
test
pop
xchg
dec
add
dec
fsubs
inc
repnz
sbb
cli
xchg
lea
lods
repz
pusha
adc
addr16
cmc
xchg
ljmp
mov
mov
fisttpll
js
push
adc
std
push
push
insb
lods
mov
jno
fidivrl
lret
xchg
sub
aaa
arpl
pop
xor
adc
jbe
aad
imul
pop
fisttps
mov
mov
bnd
ds
subb
les
pop
mov
and
lret
sub
xor
pop
dec
or
aam
xchg
shll
sar
js
stos
cmp
ljmp
cmc
and
insl
les
pop
cmc
mov
mov
cmc
imul
and
loopne
pop
cmpsl
aas
ror
lods
cmp
jmp
fisubl
sbb
imul
fwait
js
push
sbbl
test
jae
and
addr16
rcrb
jne
and
fisttpll
les
and
add
pop
mov
add
dec
jg
test
and
scas
stos
jo
lcall
outsl
xchg
lahf
jae
mov
push
xchg
gs
stc
loopne
scas
pop
stos
imul
push
aad
stc
scas
fidivrs
mov
dec
xor
ss
ret
and
cmp
cs
jp
ja
inc
movsl
mov
mov
sbb
or
int3
add
stos
mov
cmp
xlat
cmp
jb
aam
jl
fisubs
sbb
xor
hlt
dec
ja
jmp
mov
mov
movsl
ds
loopne
xchg
sbb
les
and
jne
adc
push
mov
dec
push
rcrl
xor
popa
testb
setno
icebp
inc
or
jae
push
rcl
outsb
test
push
sbb
arpl
mov
and
mov
dec
stos
inc
pop
xor
mov
cwtl
test
jns
add
call
in
sub
push
pop
negl
cmpsb
sbb
sub
pop
pop
fmulp
dec
mov
call
ror
rcll
mov
cmpsb
inc
es
jne
add
loop
cmc
cmp
nop
xchg
or
xchg
movsb
fs
mov
js
push
in
dec
or
pop
clc
push
push
push
push
cmpsb
cmp
repnz
jecxz
sti
push
mov
xchg
mov
ret
jmp
mov
sahf
push
test
push
in
iret
ljmp
in
aaa
std
mov
or
movsb
enter
or
sub
incb
aam
jbe
add
mov
sub
ss
pop
xor
sbbb
imul
addb
rol
cmp
and
jno
pop
adcb
in
sub
lret
mov
cmp
jl
bound
frstor
push
andl
xchg
add
mov
stos
and
inc
pop
and
stos
out
sbb
shl
push
sbb
in
and
xlat
jo
mov
and
pop
push
cmp
sub
pop
jl
imul
es
repz
cmp
jnp
js
or
icebp
inc
xor
push
mov
je
mov
push
int3
pop
lods
in
and
cltd
push
xchg
std
sbb
push
xor
fsts
push
fwait
xor
stos
pop
cmp
adc
popa
mov
test
inc
cmpsb
sbb
push
and
fwait
xor
fmull
std
cmp
push
dec
shl
scas
lods
fdivr
push
sbb
cmp
mov
pop
or
lods
lret
pop
xchg
inc
mov
mov
stc
lret
jns
outsl
jmp
idivl
push
cvtpi2ps
xchg
inc
mov
and
jno
ds
movl
insb
inc
xchg
enter
cmp
or
rcrl
or
iret
aas
pop
xor
inc
mov
cs
cmp
or
add
leave
push
add
inc
aam
in
adc
popf
fisttpll
pop
idivb
popf
push
and
or
rcr
push
clc
je
out
dec
mov
xor
mov
cmp
jb
in
xchg
sets
or
sbb
pop
mov
nop
out
pop
stos
or
pop
push
pop
hlt
dec
push
inc
addl
add
movsl
jo
push
mov
inc
inc
xchg
daa
fldt
inc
dec
mov
sub
sub
jmp
inc
jbe
pop
rorl
adc
sbb
js
pop
xor
addr16
push
test
or
pushf
cld
ret
sub
cmp
mov
popf
aam
ja
pop
and
xorb
or
ljmp
test
push
dec
roll
jge
sub
mov
icebp
dec
xor
mov
pop
movsl
aam
aad
mov
and
notb
call
cmp
pop
aaa
mov
push
xchg
add
xor
pop
jg
cmp
and
outsb
xchg
ret
add
gs
scas
mov
jae
cli
jg
int
lahf
mov
in
je
movl
into
adc
pop
outsb
mov
dec
cmpb
roll
les
push
pop
lods
xchg
xlat
sahf
mov
lods
mov
pop
jmp
xor
outsb
mov
push
xchg
testb
out
push
repnz
rcll
popa
mov
das
or
dec
sbb
lock
and
inc
jl
inc
ja
stos
stos
adc
fisubl
add
push
mov
aaa
push
adc
pushl
inc
add
add
jle
cmc
push
mov
adc
add
add
cmp
in
push
mov
mov
std
adc
fxch
jb
xchg
xchg
sub
mov
sub
cmp
jp
fwait
jp
inc
add
or
ljmp
xorps
iret
xchg
fistpll
or
repnz
mov
xor
mov
or
jb
xchg
inc
pusha
sub
repz
push
dec
cmp
stc
out
arpl
push
mov
inc
add
repz
leave
adc
or
inc
and
xor
mov
and
movl
rolb
dec
lods
lods
mov
mov
pop
sub
sub
shll
lods
inc
lret
js
sbb
out
jae,pn
push
lods
and
mov
xchg
pop
xor
aaa
add
jb
clc
push
nop
lods
push
orl
inc
gs
lret
ret
push
jg
dec
stc
mov
outsb
xchg
lea
and
lcall
adc
fwait
sbb
xor
dec
inc
cmp
jnp
rclb
or
adc
test
sti
out
je
imull
and
adc
and
sbb
bound
cmp
push
sbb
pop
xchg
mov
bound
mov
ljmp
inc
ret
notl
stc
push
cs
shl
dec
push
aaa
sbb
fildl
cwtl
loopne
or
scas
sub
xor
jmp
popf
xor
xchg
push
fdivrs
mov
subb
je
testb
lock
jae
pop
pop
or
or
aaa
in
int3
loope
dec
subl
aas
lea
dec
and
or
dec
cmc
das
cmpsb
lcall
sbb
cmp
dec
cld
inc
jle
xor
repnz
jnp
xchg
pop
in
lcall
mov
mov
push
ss
sub
dec
jle
jg
adc
mov
shlb
jmp
xchg
clc
jns
call
jle
aas
outsl
imul
in
sub
add
push
test
mov
mov
das
sub
mov
lods
and
jp
fwait
lods
sbb
adc
sbb
scas
cmp
xlat
sub
shll
or
popf
lcall
lea
xchg
lret
push
and
jmp
fwait
ja
cs
popa
test
shrb
fnstsw
data16
push
imul
lds
dec
or
adc
pop
mov
and
notl
push
addr16
mov
pop
repz
movsl
cld
insb
scas
adc
mov
fs
cli
mov
jecxz
and
mov
iret
cmpsb
cwtl
inc
inc
inc
inc
nop
hlt
mov
incl
test
fsub
xlat
mov
into
sbb
iret
mov
mov
jp
in
in
out
fwait
ds
call
stos
jge
bnd
sub
std
cmp
insl
aaa
mov
insl
gs
lods
add
pushf
aad
scas
dec
ror
fisubs
dec
jae
dec
sub
insb
sub
sbb
mov
add
lea
pop
pop
mov
xchg
int3
cmc
push
outsl
mov
dec
pop
ds
jle
push
jne
aam
adc
push
add
or
cmc
jbe
mov
fsubrp
test
mov
mov
repz
fs
push
test
sarl
lret
sub
std
cmp
add
out
loopne
mov
sub
or
xor
push
aas
cmp
aas
jg
mov
hlt
and
mov
je
mov
aas
call
and
dec
adc
pop
or
ja
adc
inc
movsb
sti
repz
jmp
fdivrs
popa
sub
mov
int
fmull
hlt
xor
insl
clc
mov
les
rcrl
addr16
enter
mov
sub
mov
inc
mov
mov
add
cmp
mov
sub
ljmp
inc
loope
and
xor
jno
sbb
xor
jl
cli
pop
jae
push
xchg
mov
push
mov
lahf
mov
ret
xor
dec
sub
adc
ret
mov
mov
in
xchg
daa
shrl
andb
mov
shl
subb
jmp
cmp
outsb
xchg
cmovp
mov
das
pop
inc
push
jmp
sahf
fiadds
js
push
call
dec
pop
shrb
add
and
and
jb
ficompl
dec
jg
jb
sub
scas
arpl
sub
xchg
mov
fdivr
pusha
cltd
loopne
and
dec
jno
fiaddl
xchg
adc
jno
lods
mov
xor
adc
mov
scas
orl
adc
ret
add
mov
mov
dec
add
or
xchg
xchg
cmpb
test
jl
ss
add
jecxz
and
lea
adc
incb
call
xchg
mov
sub
scas
inc
shrl
inc
xchg
cld
lret
idivb
xor
push
aas
stc
rcll
popa
popa
add
testb
lea
stos
aam
or
cs
pusha
cs
shr
test
mov
mov
fdivr
dec
and
rcrl
shl
outsb
or
and
ret
dec
push
sub
pop
fstpl
jecxz
sub
mov
push
mov
xor
movsl
sub
add
push
push
mov
cmpsb
mov
loop
clc
int
outsb
push
push
lods
fisubrs
in
mov
ja
iret
repz
mov
sbb
sbb
mov
cwtl
nop
pop
icebp
rcr
and
dec
jle
loop
popa
pusha
cmp
pusha
push
mov
lahf
mov
cwtl
push
mov
enter
stos
test
insl
cltd
in
xchg
clc
popf
lret
ret
pop
inc
imul
pop
aam
mov
pop
inc
lea
sbb
shll
or
fcmovnbe
inc
loopne
mov
add
std
icebp
sahf
in
push
mov
xor
outsb
out
dec
mov
fs
inc
ljmp
cltd
aam
clc
call
mov
inc
jo
lods
out
scas
or
dec
dec
es
insl
cmp
insb
addr16
adc
and
mov
repnz
movb
enter
pop
loopne
sub
dec
dec
imul
mov
xor
jo
fistps
jmp
outsl
cmp
in
fstps
lods
scas
or
lcall
mov
push
lods
repnz
sti
cmp
ja
pushf
pushl
xor
lds
xor
repz
lret
insl
bound
pushf
imul
ss
imul
outsb
jecxz
push
fisubl
movsb
cwtl
pusha
test
mov
gs
das
jmp
psubusb
xorl
cmpsl
cmp
push
shll
jg
jns
insb
stc
jmp
push
je
dec
in
int3
ljmp
xchg
cld
pusha
sbb
dec
cs
fidivrl
or
addl
xlat
shlb
and
das
cmpsl
fiaddl
push
or
mov
pop
pop
mov
jne
loop
mov
push
rcrl
adc
mov
sub
xchg
testl
inc
incb
adc
cmp
push
xchg
lahf
xor
pusha
lret
enter
fistpll
adc
sbb
sbb
jns
mov
sbb
data16
in
xor
adc
out
jg
cmp
push
in
enter
mov
sti
dec
sbb
xchg
mov
mov
cmp
jecxz
or
adc
popf
fnstenv
xchg
ret
add
sbb
arpl
insl
cmp
xchg
and
sahf
adcl
jae
or
pop
push
test
jns
lea
cmp
fimull
cmp
mov
jmp
jno
push
aas
mov
sbb
sbb
sbb
test
mov
dec
add
xchg
repnz
adc
les
or
mov
or
inc
add
pop
mov
push
add
imul
pushf
cmp
inc
add
lds
xor
nop
daa
sti
and
sub
dec
mov
sbb
lahf
ljmp
xchg
jb
daa
push
fadd
rorl
lret
cs
and
and
daa
scas
out
clc
xor
add
xchg
add
outsl
jo
jle
dec
or
pop
mov
rcll
scas
ret
or
dec
je
xchg
roll
pop
dec
push
cmp
pop
out
mov
mov
cmp
cmp
cmp
inc
movsl
cltd
fwait
gs
sbb
or
ret
mov
dec
mov
aas
jecxz
cmp
cmp
mov
dec
in
jg
and
jmp
insl
insb
mov
xchg
adc
pop
mov
adc
lds
lret
cltd
cmp
or
pushf
js
pop
cmp
dec
inc
xor
insl
dec
push
rclb
scas
jmp
movsl
movd
sub
fxtract
fwait
stos
pushf
aad
mov
sub
jo
jbe
mov
test
xor
xor
xchg
imul
cld
jb
jp
fst
movsb
xchg
mov
mov
or
mov
repz
pushl
add
imul
xlat
sahf
js
sub
das
sbb
stos
arpl
sub
pop
xchg
jge
hlt
sub
push
fwait
or
xchg
in
loopne,pn
sahf
in
and
cmp
inc
adc
clc
cmp
mov
stos
mov
fcmove
hlt
lods
pop
ret
mov
test
cld
imul
pextrw
sbb
and
negb
cmp
mov
pop
push
add
and
stc
movsb
aam
pop
idiv
push
popf
jecxz
ret
fists
je
shrb
dec
sbb
mov
jle
loop
cwtl
or
cli
ret
fisttps
push
fldenv
out
cmp
popf
adc
pop
cmp
xor
shlb
xor
jno
jl
test
sbb
lods
adc
mov
push
push
mov
dec
sbb
cld
imul
aad
cli
aad
out
aas
inc
pop
sahf
cs
in
inc
inc
fdivrl
loope
xchg
lock
ficompl
push
mov
pusha
cld
sbb
scas
pusha
mov
sahf
mull
rcrb
sbb
insl
sub
dec
jne
imull
std
cli
es
aas
out
and
cltd
lock
push
out
xchg
ljmp
in
addr16
subl
mov
and
xchg
outsl
test
jge
aad
xor
std
int3
iret
into
jbe
sub
gs
outsb
xchg
or
adc
pop
lods
sub
nop
lahf
push
hlt
push
adc
add
lahf
icebp
xlat
sahf
adc
int
adc
je
xchg
pop
fwait
repnz
push
notl
lcall
rcrb
repnz
inc
cmp
jle
fcoms
fstps
or
inc
mov
xor
pop
xor
clc
or
or
mov
xorb
insl
push
mov
adc
jg
mov
cwtl
test
xor
add
pop
jb
xchg
fistpl
stc
call
std
dec
and
push
out
jecxz
cmpsb
sub
mov
mov
dec
sbb
cmovb
mov
js
call
stos
dec
dec
mov
xlat
add
pop
cld
hlt
jle
jbe
popa
mov
sub
xchg
push
jg
cmp
repnz
test
scas
stos
out
jmp
mov
cmp
mov
push
mov
push
popf
jp
out
leave
ror
mov
mov
add
in
and
sar
ret
push
icebp
rcrl
jb
bound
or
mov
mov
jl
add
fmuls
mov
adc
pop
into
inc
inc
arpl
repnz
insb
inc
inc
mov
je
test
cmc
mov
inc
pushf
dec
dec
and
push
inc
ja
xchg
ret
sti
fdivl
jge
and
fwait
jmp
dec
repz
xor
push
push
or
in
adc
and
icebp
inc
es
xor
cwtl
inc
shrl
cmpsl
lea
fs
es
mov
jecxz
cmpsl
mov
fcompl
call
sbb
or
pop
xor
xor
push
sbb
sub
push
lods
cmc
jecxz
xor
cmpsw
pop
push
rcrb
outsl
ja
fbld
cmpsb
sub
into
aad
fprem1
inc
andl
pop
movsb
sub
sahf
sub
sub
mov
inc
sti
xor
cmp
fidivl
inc
repz
push
mov
xor
jo
lea
ficoml
aaa
dec
fisubs
lahf
out
pop
lret
fmuls
sbb
mov
mov
mov
push
sbb
les
sbb
add
lret
in
cmp
xor
repnz
sar
add
inc
or
outsb
scas
fistps
fbstp
push
mov
or
call
iret
jecxz
add
mov
das
jno
xor
or
push
xor
sub
cmp
loope
sub
mov
mov
popa
icebp
fsubs
lahf
inc
mov
jecxz
jns
jecxz
xchg
or
sti
mov
xor
xor
ret
lret
pop
shlb
dec
and
add
aad
adc
cmp
jg
inc
add
ljmp
mov
and
mov
sbbb
cmp
cmp
popf
cmp
dec
push
lea
mov
pop
add
bound
and
xchg
xchg
mov
je
aad
mov
mov
in
sub
adc
ror
shll
xor
iret
mov
aad
jecxz
fistl
sub
into
and
sub
xor
fstl
lret
adc
push
push
cmp
or
fs
adc
gs
adc
lods
arpl
in
addr16
aas
push
imul
pop
imul
xor
push
mov
xchg
sub
cmpsb
adc
ja
and
push
sahf
nop
add
bound
imul
imul
jmp
xor
or
fdiv
aam
mov
fstp
mov
mov
cmp
or
add
test
bound
imulb
clc
push
add
add
mov
aas
out
ffree
outsb
sub
addr16
js
push
cmpsl
fs
add
pop
stos
aas
test
pop
mov
jecxz
call
es
pop
mov
rorb
push
sbb
mov
sbb
mov
fcomps
jo
pop
rorl
lods
sbb
shll
xchg
leave
inc
add
jl
or
sub
push
push
mov
inc
or
pop
imul
pop
jns
mov
or
test
cmovne
push
jge
jl
ss
pop
aam
test
in
inc
sarl
fcmove
cltd
imul
lds
data16
test
testl
stos
push
ret
stos
stos
mov
xchg
fcmovne
sub
push
xchg
and
pop
sub
pushl
mov
mov
adc
and
data16
inc
andb
cmpsb
mov
lock
jns
loop
es
dec
lret
pop
sahf
sbb
pop
cld
shrb
push
push
je
xor
loope
xor
cmp
faddl
shlb
icebp
jb
sbb
arpl
push
sub
pop
xor
pop
test
jbe
pop
sub
jo
xor
mov
jno
cmp
ljmp
fwait
imul
sub
das
adc
or
or
dec
enter
xor
or
fwait
pop
or
js
aas
push
js
adc
notl
mov
jge
mov
fnstcw
ljmp
fisttpl
xorl
xor
or
mov
dec
mov
dec
repnz
cmp
icebp
scas
inc
dec
orb
dec
cmp
sahf
lcall
and
iret
fistps
push
repnz
pop
push
fwait
add
add
adc
xor
loop
sub
jo
fbld
sahf
add
mov
push
pop
pop
cmp
fwait
stos
jmp
popf
repz
stos
mov
ds
jp
sub
loope
cmp
test
iret
lods
push
testl
cmc
mov
add
aad
out
test
cli
mov
push
push
cmp
repz
and
neg
inc
inc
adc
notl
insl
xor
adc
sbbb
addr16
sbb
call
cmpsb
sub
dec
fsubs
xor
lahf
inc
cli
lods
lret
jge
stc
lock
mov
shlb
aam
push
xchg
fnstsw
xlat
cmpsl
xor
dec
stc
sub
mov
aas
lcall
jg
into
jmp
pop
mov
aad
sbb
xchg
mov
pop
mov
sar
jge
lcall
mov
lret
add
xchg
dec
cbtw
pop
hlt
js
rorb
fs
scas
push
loope
sbb
xor
mov
lods
mov
inc
sti
lock
add
les
mov
adc
mov
jnp
push
or
movl
mov
adc
fsubl
roll
cli
mov
sub
or
jo
cmp
bnd
mov
inc
inc
es
movsb
jecxz
mov
out
sbb
mov
and
xchg
popf
scas
popa
xchg
xor
mov
outsl
pop
xchg
notb
xchg
inc
xchg
jbe
rclb
mov
mov
and
jne
fnclex
test
fisttpll
xor
mov
sub
rcrl
inc
rcrb
jle
out
or
popf
icebp
xor
pop
cld
aaa
lret
insl
xor
into
mov
je
scas
mov
lds
cmp
mov
add
lret
sub
lds
jno
adc
sub
stos
jle
hlt
inc
leave
cli
push
cmpsb
sarl
or
add
enter
and
sub
cmpsl
outsl
daa
pop
mov
rclb
pop
and
mov
adc
push
sbb
cmpsl
inc
jecxz
test
lret
mov
movsb
aad
jle
test
fstps
mov
push
or
jbe
ljmp
loopne
add
lahf
out
test
and
scas
cmp
adc
std
notb
movsb
imul
mov
inc
movsl
movsb
push
call
test
outsb
popa
lods
dec
jns
push
mov
mov
sub
xchg
aas
jmp
lods
or
pop
sahf
mov
outsb
popa
jo
and
cmpsb
pusha
pop
lret
bound
push
xchg
lock
adc
and
mov
mov
inc
jmp
setge
mov
sarl
daa
mov
adc
mov
clc
ljmp
jmp
pop
ror
das
std
int
push
add
ret
call
loop
int
xor
xlat
arpl
std
sti
test
cmp
mov
push
fstl
sbb
bound
mov
or
pop
inc
and
adc
fidivrl
inc
popa
jnp
jb
dec
popa
jg
cmpsl
cmc
les
dec
ficomps
add
add
pop
or
cld
inc
adc
sub
cmp
orb
cs
push
cmpsl
leave
in
jmp
mov
inc
sub
ds
insb
loop
scas
enter
dec
daa
mov
clc
cmc
insl
adc
inc
icebp
ss
popf
lds
sahf
cli
shll
cmp
push
and
add
rorb
mov
mov
or
movsl
fistps
int
dec
pcmpgtw
dec
fimuls
les
lcall
pop
xor
cwtl
out
sbb
jecxz
call
inc
push
sub
popf
mov
popf
imul
lea
add
in
cmp
and
divb
leave
lock
sbbb
clc
fidivrl
xchg
sti
icebp
sbb
scas
inc
aam
mov
or
jmp
xchg
mov
loopne
cmp
arpl
xchg
sti
sarb
or
push
sbb
lret
mov
outsl
sbb
add
xchg
pop
cmp
out
jecxz
in
push
call
fsubs
lahf
orb
js
xchg
fwait
sar
adc
mov
sahf
sti
sbb
jns
and
xor
sub
test
push
dec
cli
mov
iret
stos
and
pop
cs
adc
adc
inc
and
mov
push
dec
cmp
sbb
fisubrl
fwait
js
dec
out
xchg
sub
cmpsl
push
test
jb
add
ret
push
cmp
and
mov
mov
pop
xchg
xchg
adc
or
in
rcl
sahf
adc
test
mov
mov
mov
and
add
cs
fcompl
movsb
jno
pop
loope
pop
xchg
je
fs
popa
xchg
sbb
pop
xchg
adc
pop
cs
iret
aas
mov
xorl
add
or
in
mov
sbb
sbb
cltd
mov
out
xor
mov
mov
js
push
push
adc
inc
dec
inc
add
ds
lahf
nop
vsubpd
mov
arpl
jecxz
inc
in
dec
in
stos
mov
push
call
mov
stos
or
or
stos
mov
lea
daa
xor
jle
repz
lahf
xchg
rorl
jmp
faddl
push
xor
push
mov
sbb
loop
xchg
int
mov
nop
jo
cmc
popf
rorl
fildll
sub
mov
mov
push
outsb
mov
mov
pop
imul
cld
mov
pop
aaa
insb
mov
or
movsb
sbb
mov
pop
int
sbb
xorb
adc
scas
loopne
mov
mov
fdivl
jecxz
or
fbstp
push
xor
int
push
jmp
fimuls
js
scas
push
sarl
mov
inc
xor
dec
nop
aaa
dec
jmp
test
lods
sub
outsb
inc
je
mov
in
xor
pop
lret
inc
adcl
lods
jecxz
out
outsl
pusha
ja
daa
cmp
hlt
sub
mov
jg
test
repz
imul
xchg
je
or
ret
push
cltd
xor
aam
in
cmpsl
mov
cmp
iret
clc
sarl
popf
xor
adc
sub
dec
sbb
xchg
loop
fnstenv
stc
mov
xlat
rcrl
mov
push
xor
je
and
cmp
lret
dec
add
push
xchg
jno
push
adc
push
cmp
leave
sbb
mov
adc
out
xor
cwtl
int
push
or
icebp
popf
shl
daa
xchg
fsubrl
sti
or
sbb
fs
jae
mov
ret
jmp
and
inc
xor
mov
add
inc
cmp
imul
lret
push
jecxz
idivb
pop
add
les
dec
lahf
lods
movb
dec
test
push
mov
aaa
arpl
sub
mov
movsl
dec
bound
outsl
dec
add
test
fisttps
jbe
mov
sti
jne
mov
push
std
xor
mov
xor
aaa
bound
mov
push
add
movl
push
pop
mov
push
mov
hlt
stos
rcll
pop
insb
sbb
mov
cwtl
pusha
mov
cmpsb
dec
imul
and
scas
sub
popa
jnp
pop
dec
sub
nop
movsl
lea
pop
out
inc
bound
sbb
push
xchg
push
jo
cld
xor
fdiv
mov
popf
mov
aad
cmpsl
mov
daa
cmpl
js
leave
or
push
sbb
pop
jge
and
ja
sbb
pop
outsb
call
pop
movsl
in
in
fisttps
ja
xor
pop
mov
and
sbb
outsl
cmpb
jno
jo
pop
xchg
mov
daa
fwait
sbb
inc
mov
imul
arpl
je
and
arpl
xor
test
ret
adc
adc
bound
jmp
adc
dec
insb
pop
ror
mov
or
xchg
mov
cmp
pop
push
xchg
addr16
test
mov
jae
repz
lock
mov
mov
pop
and
push
negb
xchg
movsl
cmp
mov
lret
in
xchg
jb
dec
or
mov
and
ret
dec
lret
ss
rcrb
mov
add
sar
xchg
subb
mov
jb
jns
mov
enter
mov
adc
mov
cld
pop
inc
nop
movsl
jne
cmp
xor
fisubrs
cs
and
push
add
es
pop
mov
pop
xchg
pop
pop
cmpl
mov
add
loop
aaa
adc
int
pop
cmpsb
fistl
cwtl
cmpsl
nop
ds
pop
pop
dec
sub
add
adc
andb
mov
add
loope
pop
sbb
dec
pop
push
out
bound
mov
push
shlb
xchg
sahf
jecxz
push
push
lahf
mov
fwait
hlt
jg
jbe
ss
out
sbb
dec
ficomps
notl
xchg
std
add
mov
push
in
mov
pop
add
cmpsb
xchg
scas
xchg
or
fnsetpm(287
nop
sub
push
mov
mov
mov
mov
aam
mov
fcoms
pop
arpl
pop
loop
pop
xchg
dec
out
jle
mov
inc
lods
inc
push
cltd
inc
orb
jmp
roll
iret
and
push
dec
popa
es
lock
mov
mov
pop
lret
ficomps
inc
movsl
xadd
ds
or
jnp
dec
data16
sub
lret
mov
push
xor
push
xor
mov
mov
dec
jmp
jle
push
cltd
add
test
adc
jae
lea
es
dec
cmpsl
xchg
adc
xor
or
push
mov
jecxz
cmp
cmp
outsb
leave
popf
arpl
popf
fisttpl
inc
mov
in
shrl
adc
pop
int
popa
jp
addb
inc
adc
lods
mov
shll
scas
cld
sbb
outsl
jl
mov
mov
pop
sarl
mov
shlb
mov
fists
cmp
insl
mov
and
push
push
inc
mov
notl
ret
mov
mov
stos
push
arpl
xchg
and
push
cs
add
jecxz
les
sbb
nop
inc
push
aas
mov
xor
mov
iret
lods
aam
sbb
outsb
adc
xchg
or
adc
dec
cld
xchg
sub
sbbb
pop
xor
inc
adc
pop
lods
pop
insb
popa
inc
mov
fcoms
mov
mov
pop
or
xlat
pusha
or
push
in
dec
sub
sbb
push
dec
loop
ljmp
int
cmp
scas
inc
stc
mov
int3
pop
and
dec
imul
inc
cmp
add
sbbl
jmp
sarb
sbb
inc
xor
jae
mov
test
xor
aaa
std
sbb
movsl
shrl
outsb
push
es
or
cld
jae
scas
lahf
std
out
adc
dec
test
jmp
pop
xor
dec
mov
fdivrp
xor
sarl
in
mov
scas
mov
in
xchg
pop
or
lds
inc
dec
dec
or
adc
sbb
out
icebp
fbstp
jge
xor
sbb
sahf
orl
jg
add
sub
test
inc
test
and
lods
pusha
adc
mov
js
cmp
mov
dec
pop
imul
cmpsl
repnz
dec
ds
cs
outsl
cmp
mov
jno
aam
dec
or
jb
adc
popa
push
sbb
fisttpl
jecxz
rcrl
cli
popf
int
cmpl
push
and
ja
sbb
fmulp
negb
mov
mov
sbb
mov
jmp
pop
push
dec
mov
fisubl
xchg
push
inc
les
sbb
imul
pop
insl
dec
or
lock
pushf
aas
xor
pop
adc
xchg
mov
push
xor
mov
add
cs
sahf
aad
icebp
lods
and
mov
aam
decb
daa
repnz
wbinvd
mov
inc
pop
pop
rorl
inc
mov
mov
fidivs
out
mov
push
mov
rcll
xlat
push
push
push
jecxz
fstl
mov
adc
std
xor
out
ja
mov
ss
xchg
xor
push
insb
das
add
fs
mov
mov
dec
dec
mov
inc
call
lea
dec
movsl
adc
mov
dec
repnz
fs
gs
adc
push
inc
pop
xor
mov
inc
dec
inc
sarl
inc
adc
add
les
or
or
push
jg
std
sub
pop
xchg
stc
movl
fmulp
movsl
rorl
inc
inc
outsl
pop
stos
lods
out
sbb
fwait
jo
stos
sbb
mov
fcoms
or
nop
push
and
out
ret
pop
jno
movsl
rcrb
mov
mov
xor
mov
fs
fcmovnbe
mov
lods
jae
call
cmp
sub
inc
ret
and
sub
nop
mov
push
out
adc
es
sbb
jle
dec
jp
fwait
or
out
or
dec
adc
fisttpll
xor
adc
movsb
jle
cmp
imul
dec
mov
cli
clc
lods
mov
imulb
fists
adc
addr16
sub
movsl
adc
xor
roll
inc
cs
mov
test
adc
mov
call
push
push
jb
test
js
xchg
add
mov
inc
mov
or
dec
xor
and
clc
add
cmp
jae
sarl
pop
popa
jge
xor
sub
testl
and
push
sbb
mov
dec
or
add
mov
lahf
enter
pop
sub
mov
jmp
jle
lret
inc
sbb
mov
and
add
mov
or
sbb
aad
xor
into
sti
xchg
arpl
or
or
jb
jle
icebp
dec
pop
cmp
ljmp
daa
lret
gs
jne
xorb
test
jnp
call
jnp
adc
cltd
add
cmpsl
push
mov
dec
stos
je
pslld
mov
xchg
mov
mov
movsb
ljmp
add
lahf
repnz
mov
xor
rcr
dec
aad
frstor
xor
mov
das
scas
in
mov
mov
xor
rcrb
cltd
or
sub
fdivl
test
in
mul
rep
xchg
imul
mov
push
mov
mov
les
and
xchg
sbb
xchg
inc
movsl
in
aaa
lret
and
mov
repnz
lret
and
std
sub
jg
popf
dec
xchg
pop
inc
pop
xor
dec
sub
mov
jbe
roll
cltd
mov
or
xchg
std
lods
je
and
jns
push
sbb
mov
push
push
pushf
pop
and
cld
out
cmp
mov
jae
inc
push
test
imul
fcmovnb
or
or
fwait
cmp
fwait
jo
dec
mov
rorl
xchg
and
lret
leave
lahf
mov
push
repnz
xchg
mov
dec
cmp
mov
and
addr16
pop
sti
xchg
and
sarb
lea
or
mov
sti
jl
cmp
sbb
mov
out
leave
cmc
add
out
inc
gs
sub
mov
shl
inc
mov
jb
push
jne
in
cmp
lea
mov
fs
push
ljmp
aaa
pop
out
fcoml
dec
addb
pop
inc
push
in
xlat
add
mov
inc
mov
fninit
push
out
nop
lret
popf
lods
bound
jno
mov
sbb
arpl
les
xor
mov
lahf
inc
ret
scas
add
mov
shlb
insb
sub
in
fisttpl
fdivl
pop
cmp
or
mov
ds
testb
lcall
pop
mov
inc
inc
add
cmc
xchg
je
sbb
lret
out
sbb
fistpll
sarl
test
fs
mov
call
fsts
sub
in
call
imul
xchg
out
imul
mov
mov
bnd
push
ljmp
shrd
inc
cmc
jle
and
mov
lods
insb
loope
out
sti
xor
jl
cmp
jno
daa
pop
test
mov
loop
sbb
push
and
jns
div
inc
jmp
pop
push
arpl
sahf
ljmp
dec
and
mov
daa
xor
les
fcmovbe
and
out
sarb
pushl
inc
or
dec
lock
rorb
cmp
sub
jbe
fwait
push
pop
inc
jmp
stos
mov
mov
call
cmp
outsb
das
ss
repnz
adc
xor
loop
sarb
mov
dec
aam
or
add
fcomi
mov
orl
xor
cmp
lea
sub
push
jo
push
je
cli
sub
push
jae
push
push
cmp
jmp
jp
xlat
mov
sbb
mov
fs
adc
mov
sahf
push
adc
mov
sbb
ss
push
or
dec
inc
inc
fisubrl
inc
cmpl
cmp
shr
mov
or
push
fwait
lret
aaa
and
sub
rcll
sbb
inc
repz
jne
fwait
mov
loope
mov
test
insb
sub
and
movsl
ret
es
das
pop
pop
imul
insb
shl
aam
inc
cmp
mov
addr16
leave
add
in
or
push
xchg
mov
mov
test
daa
js
fistps
flds
scas
cmp
pusha
push
subl
mov
loop
and
sbb
hlt
adc
rcll
xchg
inc
in
mov
pop
mov
xor
mov
adc
jb
jmp
popf
mov
out
dec
sti
pop
gs
cmp
sbb
pop
mov
or
sbbb
cmp
xlat
lret
pop
std
rolb
adc
leave
and
enter
cmp
mov
jle
stc
add
add
adc
xlat
lahf
popf
xor
or
out
sti
test
repz
orb
cmpb
stos
pop
jae
or
popf
outsl
cmp
push
mov
cmp
push
pop
xlat
test
and
ja
dec
mov
ljmp
cmc
pop
xor
dec
popf
mov
pusha
fcoms
ja
xchg
add
adc
jae
cmpsb
movsb
push
aam
xchg
or
scas
or
clc
fistps
xchg
jge
mov
mov
inc
mov
sub
lds
lret
xor
cmpsl
pushf
arpl
cmpl
popa
movsb
les
mov
roll
loopne
mov
jnp
xchg
sub
dec
mov
sbb
push
cli
andb
pop
bound
jl
xor
inc
imul
pop
js,pt
add
fwait
xchg
inc
pop
and
xor
mov
xchg
pop
adc
sti
out
ffreep
imul
int3
loopne
push
dec
fldl
sbb
pop
lds
popa
adc
test
sub
lea
mov
test
out
cmc
test
cmpsb
and
cltd
adc
xchg
addr16
insb
mov
in
mov
pop
push
icebp
lahf
cmp
bound
xor
inc
cmp
cmp
and
cmp
divb
adcb
addr16
std
outsb
inc
out
xchg
js
dec
jnp
lcall
xchg
es
jb
out
add
loop
pop
and
ret
push
ss
sub
testl
repz
sub
loope
mov
jge
push
movsb
and
ret
movsl
xor
pop
mov
pop
loopne
ljmp
xchg
leave
inc
cmpsb
mov
cmp
fnstsw
insb
lds
inc
pushf
inc
loope
hlt
adc
jno
ja
and
cld
adcl
fcmovnb
lret
arpl
mov
or
add
fmul
pop
cli
arpl
lods
push
filds
test
inc
mov
je
mov
sbb
jge
xor
pop
jle
xchg
ds
mov
jmp
xchg
loope
sub
inc
mov
xor
rcrb
add
aas
push
inc
iret
gs
lcall
outsb
int
pop
xor
in
repz
xchg
insl
xchg
adc
or
jns
pop
sub
fwait
sbb
in
mov
loope
pusha
or
or
shll
clc
pushf
repnz
adc
xchg
jp
jbe
test
cwtl
out
and
filds
xor
int3
sahf
cmp
rol
ss
fists
or
jnp
sbb
lahf
push
jae
out
mov
ds
or
imul
addr16
mov
icebp
clc
jmp
lahf
enter
nop
icebp
test
in
mov
hlt
aaa
mov
inc
sub
test
mov
push
xlat
sti
popa
mov
fs
out
lock
loope
imul
loopne
stos
sar
mov
imul
cmp
mov
lods
in
lcall
push
hlt
push
xchg
push
icebp
imul
xlat
adc
jl
cwtl
nop
push
mov
pop
imul
lea
xchg
popf
jnp
andb
mov
cld
add
loopne
jae
sahf
mov
mov
fmuls
lret
test
jmp
mov
add
adc
inc
cmp
sbb
fwait
std
or
jl
dec
into
dec
xor
jb
xchg
mov
icebp
call
pop
sub
ss
mov
or
jae
xor
add
mov
xor
leave
arpl
lock
or
push
in
pop
mov
cmp
mov
jb
pusha
fwait
mov
jno
sbb
loop
xchg
lcall
cmp
inc
and
pop
popf
repz
push
scas
adc
js
je
ljmp
ret
xchg
pop
push
dec
dec
into
push
inc
mov
sbb
adc
cmp
dec
or
fidivrl
inc
dec
arpl
lds
cmp
cmp
sub
arpl
and
scas
mov
inc
pop
mov
inc
sbb
adc
push
int
ret
xor
push
mov
stos
int3
dec
cwtl
dec
addb
inc
mov
sub
add
pop
scas
and
loopne
push
ds
ficomps
mov
lret
mov
cmp
cmp
movsb
cwtl
cmp
xchg
jmp
xchg
cmp
clc
ja
or
popa
adc
jo
xchg
mov
sarb
cli
fnstcw
jno
imul
cli
fstl
test
movsb
jb,pt
or
out
repnz
mov
mov
mov
ret
lea
lock
adc
imul
popf
test
and
int
daa
inc
int3
cmp
dec
fistps
inc
inc
cmc
pop
push
jno
mov
xchg
sbb
test
push
lret
loope
xchg
dec
pop
sub
fimuls
pop
sub
cmp
dec
hlt
in
scas
nop
add
push
dec
fstpt
imul
jnp
bound
outsl
pop
cmp
fistpll
push
shl
stc
loop
fstpl
jecxz
gs
sbb
jle
mov
icebp
ds
jl
mov
sub
lcall
and
sub
cmp
push
adc
inc
and
adc
cmp
xchg
arpl
mov
mov
lret
pop
dec
inc
sub
std
lcall
mov
cmp
lods
outsl
stos
popa
add
sti
inc
leave
sbb
cs
inc
mov
dec
lret
mov
mov
and
ljmp
push
push
out
mov
stc
sahf
sarl
sbb
push
dec
mov
jecxz
and
jmp
cmp
lods
adc
sti
mov
bound
fwait
out
ficoml
sbb
jg
data16
mov
xlat
test
lods
mov
pop
ja
jecxz
jbe
rolb
sub
or
data16
leave
shll
loopne
orl
jno
push
inc
sub
imul
and
sub
movsl
insl
mov
xchg
adc
pop
xor
es
adc
adc
rorb
shlb
scas
aaa
mov
dec
cli
xchg
scas
cmpsl
xchg
insb
jp
shll
fistpl
test
pusha
adc
lods
into
cmpsl
stos
lcall
mov
cmp
or
jnp
inc
lods
push
cmp
lret
hlt
mov
aam
mov
stc
mov
popa
pop
dec
xlat
pop
ficoml
imul
aam
pop
loopne
push
push
xor
aam
mov
jp
xchg
scas
jl
in
mov
xchg
ja
icebp
jl
push
filds
loope
fnsave
bts
loopne
and
push
ds
mov
ds
xchg
enter
sbb
jne
leave
fidivrs
cmpsb
out
push
xchg
xor
add
lcall
cmpsb
inc
clc
ja
push
int
es
shlb
add
fildll
dec
mov
cld
jle
lret
in
sub
inc
shl
ret
cmpsl
and
lds
sub
mov
xchg
loop
pushf
sti
aam
scas
mov
dec
cwtl
shlb
and
jl
xor
shl
fbstp
lds
test
js
and
mov
push
movlps
mov
sbb
enter
bound
pop
inc
push
mov
xchg
das
repz
movsl
dec
xchg
sahf
lret
and
pushf
xor
sub
out
and
adc
test
aad
sub
int
sbb
sbb
nop
dec
and
fs
sub
imul
les
cmpl
insl
xchg
adc
pop
es
test
or
jo
mov
sub
xor
sbb
jnp
test
dec
adc
cmc
mov
sti
lahf
and
sub
loop
xchg
cmp
out
pop
mov
mov
mov
xchg
sub
jle
roll
jbe
xor
scas
loopne
mov
imulb
shl
and
ficoml
inc
sub
loopne
repnz
fildl
in
or
int3
lea
movsl
cs
and
jmp
jno
jle
sub
mov
sub
pop
stos
js
add
mov
jle
push
test
neg
mov
hlt
lods
sbb
push
pop
call
lret
mov
sarl
pushf
inc
loop
aaa
xlat
repz
dec
test
mov
xor
in
mov
aaa
mov
xor
fisubs
adc
icebp
mov
popf
das
add
int
inc
sub
icebp
enter
pop
push
fs
bound
outsb
add
dec
cmp
mov
adc
out
and
enter
mov
stos
scas
ja
aad
mov
push
stc
adc
out
sbb
adc
test
fnsave
scas
add
cmp
faddp
pop
icebp
fwait
cmp
mov
ret
sbb
xchg
jl,pt
fidivrs
daa
fwait
adc
fdivrs
mov
test
iret
jle
fldcw
mov
mov
xchg
daa
inc
dec
sbb
sbb
mov
icebp
jbe
jg
shlb
xor
pop
add
xchg
pop
aam
dec
cmpsb
mov
ficomps
aam
sahf
pop
xlat
mov
int3
pusha
or
and
add
mov
or
fisttpl
push
add
outsb
andnps
scas
pop
xchg
ss
out
cltd
xchg
aaa
scas
dec
mov
cmp
jge
pop
insb
sbb
jp
sbbl
popa
jmp
push
add
jo
popf
xor
xchg
push
xor
ret
inc
lock
insl
loopne
mov
xchg
idivl
ret
jns
cmp
fistpll
cmp
jecxz
xor
and
jnp
inc
popf
into
ret
ds
xor
dec
imul
shlb
dec
and
stc
mov
push
cli
stos
xor
xchg
lea
mov
cmc
sub
mov
and
incl
mov
ss
stos
dec
sbb
ret
test
shlb
es
dec
xchg
movsb
add
adc
or
push
leave
lret
inc
lcall
jp
adc
movsl
add
add
cmp
pop
xor
arpl
push
dec
jne
pop
arpl
mov
cld
push
les
inc
add
cwtl
out
dec
jo
cmp
push
and
movsb
sahf
ja
lahf
pop
jo
pop
sub
ja
adc
repnz
aam
js
into
xor
jnp
jle
push
imul
mov
and
sub
nop
lret
insb
lcall
xor
cmp
mov
sub
shr
sub
sbb
and
push
add
ret
scas
mov
icebp
aas
sbb
faddp
xchg
aaa
xchg
jne
xchg
imul
into
adc
bnd
in
imul
adc
cmpsl
mov
mov
add
jp
add
mov
iret
cmp
xchg
xchg
push
cmpsb
push
js
add
mull
dec
jl
lds
sbb
mov
in
xchg
mov
je
pop
jp
out
lock
or
add
neg
mov
adc
adc
popa
inc
test
mov
mov
outsb
mov
xchg
subb
or
push
sub
out
stc
sbb
ljmp
cwtl
jo
clc
fbstp
sbb
dec
xchg
inc
xchg
mov
sub
cli
inc
fcmovne
add
or
les
js
mov
xor
pop
sbb
pop
push
push
sub
lret
push
cmpsl
and
xchg
cli
mov
add
cmp
mov
push
inc
mov
inc
dec
xor
push
jecxz
push
add
push
push
gs
test
fs
add
inc
adc
mov
enter
pop
xchg
pusha
xor
or
out
das
mov
mov
jge
jbe
mov
or
pop
inc
ror
xchg
fistpl
cltd
sub
push
sub
movsl
inc
les
jp
push
imul
mov
sti
test
sub
scas
dec
arpl
dec
or
sahf
dec
lcall
push
popf
aad
cmc
lods
leave
pop
gs
pop
xchg
add
xchg
mov
push
aad
push
cltd
mov
jmp
push
std
adc
dec
in
mov
xchg
hlt
and
outsb
ficoml
xor
lea
mov
mov
dec
popl
sub
int3
add
movsl
ss
jno
movsl
cmpsl
push
and
addr16
subb
xor
xor
cld
test
pushf
rcr
add
fwait
sub
inc
lret
add
call
and
inc
popa
cmpsl
stos
inc
aam
in
mov
add
js
mov
and
inc
xor
pop
popf
sub
jle
mov
dec
cmpsl
mov
or
sub
push
leave
adc
jl
out
push
int
and
ljmp
cs
sbb
jb
test
mov
aad
mov
fisttps
push
push
xchg
fwait
xor
pop
fst
in
dec
dec
add
aas
mov
ret
or
jl
fcompl
mov
pop
mov
pop
pop
das
nop
lea
sti
test
je
mov
fwait
daa
int3
dec
pushf
popa
mov
popf
cli
adc
ljmp
cmp
pop
jl
rorb
cmp
divb
pop
jmp
xchg
jb
pop
inc
leave
int3
and
repz
pop
outsb
mov
mov
cli
out
cs
cmp
test
add
sbb
inc
adc
scas
sub
loopne
jecxz
push
push
cld
mov
ret
subl
xor
pop
pushf
or
mov
cld
xchg
cmp
jle
inc
imul
cmp
pop
imul
fwait
les
add
jne
jns
adc
add
shlb
loope
mov
in
xchg
in
xchg
roll
sub
test
jno
sub
add
push
in
nop
aam
out
into
dec
sub
jmp
xchg
xorl
pop
sub
ret
or
fsubp
pop
and
and
mov
out
cmp
fsubl
xchg
cld
sbbb
inc
fistps
xlat
sbb
dec
dec
pop
mov
pushf
stos
xchg
pop
fmul
pop
dec
sub
aas
fucomip
add
mov
inc
pop
dec
dec
and
insb
pop
in
lcall
adc
pop
fsubl
push
stc
ret
pop
loop
fmulp
hlt
xor
jge
test
fimuls
cwtl
negb
adc
cmp
test
and
xor
push
adc
add
mov
jg
loope
stos
xchg
pop
in
shll
jne
mov
xorb
iret
push
pop
dec
mov
fiadds
idiv
xor
orl
fisubrl
pop
pushf
inc
cltd
add
xor
xchg
dec
jp
inc
inc
negb
push
cmp
mov
pop
daa
iret
push
xchg
dec
xchg
aaa
push
in
jg
sahf
mov
inc
mov
je
xor
push
sbb
push
bound
je
xor
sbb
aas
subl
imul
lcall
mov
int
fisttpl
jmp
push
pop
jge
pop
js
jbe
lret
push
outsl
fiaddl
sti
sub
pop
cld
shlb
int3
negl
push
mov
dec
negl
lcall
addr16
push
rcrl
in
xchg
jmp
xchg
jmp
and
leave
mov
and
clc
int3
in
aam
jae
lock
xchg
leave
lds
mov
fadd
scas
xchg
shl
fcmovne
fs
nop
add
fwait
dec
fnstcw
sbb
xor
adc
insl
pusha
sub
movsb
lds
add
push
addl
jno
cli
adc
adc
scas
or
cld
out
lods
cmp
mov
clc
jge
sub
jmp
cmc
or
ss
push
popf
mov
xor
lret
sub
scas
xchg
mov
in
xchg
cwtl
leave
mov
push
push
addr16
pop
jl
inc
mov
xor
scas
daa
int3
and
mov
jnp
sub
aaa
rolb
sub
loopne
ret
and
fcmovne
add
push
loope
repnz
lock
lcall
jp
icebp
or
add
pushf
gs
dec
mov
aaa
xchg
sbb
minps
shl
push
fnstenv
jmp
cwtl
xchg
imul
jbe
adc
and
add
mov
cmp
pop
iret
xchg
lock
pop
in
mov
stos
in
sti
clc
xchg
xchg
cmpsb
or
loop
cmc
out
cld
clc
cmp
jns
add
ret
in
outsl
adc
adc
add
rcr
insb
sub
pop
sbb
testb
dec
jecxz
les
xchg
incl
mov
mov
xor
pushf
movsl
push
test
neg
xchg
outsb
push
mov
lcall
sbb
movsl
ds
scas
or
jmp
adc
inc
xor
and
push
pop
cltd
xchg
iret
jne
jl
add
outsb
pop
gs
cmp
mov
out
inc
loopne
out
cltd
popa
fisttpl
jbe
idivb
mov
int3
and
xorl
movsb
arpl
mov
stos
sub
pop
das
xchg
mov
and
imul
or
sarb
loope
stos
jp
outsb
inc
fdivrs
aad
test
cmp
popa
mov
mov
xor
push
outsb
pop
sahf
rclb
add
push
dec
mov
sarl
out
push
sub
divb
into
lods
fxch
cli
mov
mov
jmp
int
outsb
int3
lcall
jmp
pop
sahf
popf
in
lret
addr16
insl
fmuls
or
lea
rclb
push
mov
mov
fmuls
pop
pop
cmp
mov
xchg
jb
mov
ja
lea
test
cs
xchg
xchg
push
jecxz
adcl
ja
dec
inc
rolb
iret
inc
shrb
test
mov
adc
stc
insl
xorb
and
xchg
pushf
or
test
xchg
or
and
lods
inc
mov
mov
inc
in
mov
lcall
xchg
push
aad
out
jle
hlt
jle
loop
aad
mov
lds
stc
leave
push
mov
fwait
ja
dec
sbb
jb
stos
pop
inc
mov
mov
fldt
sub
xchg
loope
push
loop
nop
dec
pop
notb
in
sub
push
daa
data16
or
xchg
in
insl
adc
mov
fs
cli
fs
test
mov
xorl
mov
add
mov
into
scas
lods
and
or
les
mov
mov
inc
mov
mov
ljmp
outsb
out
push
imull
outsb
jg
push
arpl
mov
rcrl
shlb
and
add
adc
gs
mov
and
andl
adc
mov
jae
ja
aas
mov
or
mov
add
xor
andl
leave
subb
aas
arpl
xchg
pusha
out
xchg
data16
sbb
jmp
pop
roll
cmc
leave
stos
jle
add
cmp
aaa
fisubs
adc
and
mov
popa
cmp
popw
or
inc
cmpl
add
mov
jb
and
push
cmp
xor
push
pop
mov
mov
in
bound
xor
inc
inc
psrad
fldt
fdivrs
lret
lret
cmp
inc
bound
jns
icebp
xchg
arpl
ss
fbstp
shll
das
repz
xor
or
sarl
sub
or
cwtl
loopne
cld
lret
loop
sbbb
in
jl
pop
in
mov
mov
xor
dec
jae
leave
mov
rclb
push
and
mov
mov
xor
std
cmp
shl
push
enter
sbb
shrl
sub
mov
jl
or
outsb
lock
add
mov
mov
repnz
push
and
cld
mov
sbb
mov
ret
xchg
call
ljmp
nop
push
mov
and
xor
push
mov
sub
jbe
ror
fxch
ss
es
add
cmpl
cmp
insl
in
out
jecxz
loop
pop
fsubrs
or
mov
xor
sbb
je
das
jle
aam
in
xchg
cmpsb
fbstp
shlb
add
loop
mov
dec
push
and
repnz
fs
stos
clc
cmp
aaa
aam
pop
mov
test
cmp
push
movsb
pop
addl
test
xchg
dec
adc
cmp
jl
jbe
push
mov
scas
loop
shr
pop
push
xchg
xchg
gs
push
xchg
sub
std
clc
dec
cli
pop
xor
mov
mov
popf
dec
sub
lods
cmp
push
imull
hlt
rol
cmc
dec
dec
add
xor
mov
inc
cmc
jbe
xchg
adc
add
sbb
cmc
add
sbb
fdivs
pop
add
bndldx
cmpsb
incb
and
sub
cmp
mov
jbe
inc
mov
xor
add
cmp
shlb
icebp
adc
insl
jb
cmovg
xorb
xchg
add
fldl
pushf
and
or
sahf
pushf
lret
jnp
push
xor
pop
mov
sub
lods
mov
fcmovbe
pop
dec
xor
jae
sti
call
jge
xchg
mov
mov
mov
negl
mov
pushf
push
sbb
inc
call
lods
and
call
push
sub
cli
jae
lods
subl
pop
lea
shlb
les
lds
ret
dec
jg
aam
jp
push
out
fcmovnbe
jnp
mov
ljmp
into
insb
xor
sbb
js
rcll
pop
mov
adc
and
jbe
mov
inc
or
dec
test
and
sub
arpl
addb
mov
or
stc
add
repnz
add
jns
sbb
or
sbb
rorl
cld
dec
fwait
push
jns
or
aam
sbb
es
jecxz
out
adc
ror
fimuls
push
aas
andl
scas
in
dec
outsl
ja
jnp
sub
jnp
mov
stc
scas
adc
subb
inc
mov
jl
int3
test
shlb
or
mov
mov
fstpt
repnz
push
pop
repnz
mov
stos
mov
inc
mov
test
and
in
scas
in
dec
pop
mov
xchg
xor
jp
in
les
insb
adc
sbb
scas
enter
push
mov
cmp
shll
dec
sub
adc
cmp
mov
mov
mov
push
mov
cld
test
mov
sub
push
enter
xor
mov
sbb
icebp
pop
xchg
fnsave
stos
push
add
sbb
pop
in
xchg
sbbl
ljmp
push
push
loopne
in
lea
ret
sti
bound
mov
hlt
dec
push
outsl
ret
loope
or
aad
aaa
mov
xchg
pusha
stc
aam
movsl
ror
sub
rcrb
sub
pop
xor
dec
mov
mov
adc
inc
xor
and
sbb
push
aas
mov
pop
cmp
inc
jno
loopne
lahf
movsl
cmp
negl
outsl
scas
dec
xor
jo
inc
lods
dec
mov
lcall
pop
arpl
xor
fnstsw
mov
sti
xor
inc
adc
mov
rorl
mov
jl
jp
ja
inc
mov
daa
andb
mov
mov
mov
cmp
lea
int3
xlat
fs
jb
into
sbb
xor
mov
idivb
in
les
in
or
jbe
lret
movsl
fxam
scas
fwait
sbb
sarb
mov
cs
or
mov
movl
pop
filds
lret
mov
push
ljmp
dec
fs
clc
pop
in
lret
adc
sub
jo
test
adcb
pushf
dec
jl
mov
loop
hlt
dec
or
mov
ds
filds
arpl
call
loope
pushf
add
ja
lods
xchg
sub
imul
movsb
mov
sub
xor
pop
dec
dec
rcll
pop
pop
cmp
mov
adc
lods
or
fldt
fs
pop
test
cmp
xor
mov
cwtl
or
fwait
cmp
mov
movsl
imul
cmc
rorl
ret
imul
icebp
loopne
dec
mov
or
pop
inc
cmpsb
dec
cmp
aaa
enter
pop
pop
stos
xchg
pop
xorps
cmpsl
iret
xchg
xchg
add
sahf
das
xchg
push
jns
push
insl
arpl
add
shll
rcr
fs
cmp
lret
lods
shrl
clc
sbb
fldln2
push
es
lods
pop
nop
mov
fwait
cs
and
mov
mov
mov
jge
and
int3
ja
inc
rcll
pop
cmp
dec
aad
lds
push
mov
jmp
mov
lret
adc
gs
xchg
test
add
in
and
push
cmc
loope
dec
popa
out
push
cmpsb
insb
mov
mov
ja
jne
xchg
js
mov
cmp
pop
add
mov
push
add
adc
and
mov
js
leave
stos
inc
into
movsl
divl
mov
mov
jl
int
int
push
xchg
cmp
xor
xchg
rolb
mov
inc
test
or
pop
inc
rolb
popf
in
jge
cltd
movsl
test
xorl
into
add
nop
pop
sbbb
jbe
dec
ljmp
add
icebp
dec
dec
insb
inc
cmpsb
sbb
or
dec
rcll
daa
aas
xchg
mov
cmpb
notl
jecxz
push
xchg
mov
out
push
sbb
je
push
jle
outsl
dec
cs
stos
ficompl
aad
sub
xor
repz
xor
push
push
sub
mov
std
jae
jmp
popf
in
push
mov
dec
or
and
mov
or
fildll
xor
and
add
jne
push
jae
ror
test
or
xor
cmp
outsb
pop
mov
adc
in
xchg
in
test
sub
mov
cmovg
add
sarl
repnz
push
and
xchg
fisubrs
jmp
or
jo
lds
arpl
and
movsb
add
push
ret
andl
push
scas
xor
outsb
push
or
inc
cwtl
fidivs
inc
fnstenv
push
or
add
pop
repz
popa
jno
inc
or
mov
fmull
mov
inc
push
rcll
mov
jb
and
mov
adc
test
out
xorb
aaa
cmpsb
das
xor
in
fistps
inc
sahf
inc
test
push
or
cmp
dec
pop
in
scas
lock
xchg
in
daa
sahf
mov
mov
dec
pop
les
sbb
test
stos
sub
lret
add
cmp
mov
mov
mov
inc
jae
sbb
sbb
fmul
and
movsb
sub
sbb
popl
fsubrs
jl
inc
cmc
jne
int3
adc
or
mov
inc
ljmp
repnz
cwtl
lahf
cwtl
enter
dec
leave
sbb
lea
aad
out
dec
push
push
movsb
loopne
stos
xor
cwtl
test
imul
push
pop
push
lea
mov
xor
in
push
movsl
div
pop
leave
hlt
in
mov
push
xor
out
ror
jae
xor
push
cmp
out
xlat
mov
xchg
insb
imul
or
test
mov
fsubl
cmpsb
sbb
xchg
xchg
mov
jle
sub
shrl
sbb
out
into
add
inc
inc
pop
push
dec
pop
jae
sti
mov
cmp
in
dec
lret
sub
or
sahf
std
xchg
out
pop
les
mov
jnp
lock
mov
in
ds
or
daa
popf
push
and
lds
sub
sbb
dec
push
mov
xor
idivl
imul
mov
jb
cs
add
jle
aam
inc
rolb
add
xchg
outsb
xor
lock
jp
jge
sbb
lahf
and
scas
fcmovnb
movsl
addl
xchg
cmp
sahf
push
cmp
sahf
arpl
iret
mov
mov
or
xchg
stc
jp
into
fnsetpm(287
pop
mov
pop
in
cmp
adc
jb
jnp
sahf
aad
xchg
cmpsb
xchg
je
push
add
mov
das
loopne
sti
lds
lods
jl
jns
test
sbb
jmp
xchg
enter
fsubrs
repnz
sbb
out
addr16
dec
xchg
adc
pop
dec
mov
jns
push
movsb
mov
pop
inc
mov
sbb
pop
push
dec
sub
mov
dec
loope
out
testb
and
clc
fimuls
adc
mov
push
jne
pusha
test
scas
adc
lock
nop
es
ljmp
cld
jmp
inc
push
adc
sub
xchg
ret
lock
lea
push
test
dec
push
ss
xor
dec
cmpsl
push
cmp
or
mov
sub
loop
aad
insb
out
fs
jle
in
xchg
mov
insl
outsb
xor
adc
js
cmc
les
mov
or
mov
clc
not
cwtl
jns
ja
imul
add
push
jo
orl
jo
sub
cs
jnp
xchg
sbb
in
lds
jns
movsl
mov
dec
xor
inc
rcrb
jb
addb
clc
mov
mov
jp
cmp
push
dec
dec
or
cmc
push
inc
je
mov
sub
push
movsl
aad
pop
test
or
testl
cld
dec
xor
inc
jae
nop
jo
xchg
sbbl
inc
xor
dec
lds
mov
rcrb
jle
rcrb
adc
cmp
jge
imul
jnp
sahf
push
sbb
loope
push
fisttpll
outsl
jge
out
and
lock
dec
ret
leave
mov
pop
rorb
dec
hlt
mov
in
test
iret
jle
ja
cld
in
sar
inc
lods
ret
addr16
jmp
push
cmp
repz
xchg
dec
sub
dec
mov
scas
fdivrs
out
xchg
mov
dec
ret
sub
testb
inc
xor
test
dec
outsl
sbb
adc
or
into
xchg
inc
stos
jp
jge
mov
adc
popa
add
imul
xor
nop
inc
cmp
stc
pusha
lds
je
xchg
inc
add
cli
sbb
outsb
add
mov
and
fnstenv
pushf
adc
in
push
fwait
or
fwait
xchg
cmc
clc
daa
jbe
inc
out
pop
popa
loop
pop
push
jne
outsl
mov
push
shlb
jbe
js
mov
test
repz
sbb
jg
cmc
les
mov
cmp
cmpsb
and
ret
das
shll
sub
inc
lea
jne
hlt
mov
inc
movsb
lods
inc
xor
sbb
mov
daa
sub
mov
jne
cmp
es
mov
call
push
cmpb
stc
inc
int3
fadds
xor
push
cmp
xor
int3
inc
inc
jecxz
push
notl
iret
stos
loop
rol
sbb
fsubrs
dec
xor
sbb
adc
push
xorb
jo
push
adc
cmp
int
cmp
in
into
and
adc
aad
xchg
aam
ret
or
and
xor
sbb
jmp
sbb
pop
decb
xchg
push
in
out
jnp
aam
inc
inc
and
xchg
sub
push
lea
dec
push
and
jecxz
xlat
ss
add
outsl
jo
pop
mov
xor
pop
out
inc
repz
movb
push
enter
test
cltd
in
sbb
push
test
sub
setnp
push
movsb
in
pop
movsb
xlat
icebp
cmp
xor
or
scas
mov
jp
cmp
inc
jl
jl
dec
mov
int
mov
mov
cmp
cmpsl
xchg
adc
inc
jns
lret
inc
out
outsl
sbb
sub
call
and
push
mov
pop
mov
or
call
mov
add
cmc
negb
mov
cmp
mov
adc
int3
sbb
cmp
xchg
inc
push
fs
into
insl
mov
pushf
inc
std
sub
in
call
and
out
cmp
lods
popf
les
fadd
dec
xor
cld
jg
sub
cltd
push
sbb
mov
dec
cmp
pop
call
cmc
sub
adc
add
cmpsl
cmp
ret
xlat
pop
adc
mov
xchg
jo
sahf
roll
mov
mov
dec
mov
ljmp
lods
adc
hlt
pop
xchg
mov
movsl
sbb
jp
jae
mov
dec
cs
testb
xor
popf
cmp
mov
mov
push
cmp
dec
cmc
and
dec
les
pusha
jp
push
pop
imul
push
jl
xor
push
pushf
jge
inc
test
cmpsl
mov
mov
je
mov
cmp
xchg
sahf
push
sub
lret
pop
and
xchg
in
aas
outsl
rorl
cmp
mov
push
adc
add
push
movsl
and
movsl
data16
cmp
outsl
jnp
sarl
les
scas
add
jbe
xchg
ljmp
loope
fstl
jl
jle
mov
xchg
jl
jo
mov
mov
lock
push
cwtl
out
push
and
gs
lret
push
inc
ljmp
or
cmpsb
xor
push
pop
xor
mov
jecxz
jl
pop
dec
mov
xchg
push
xchg
xor
dec
mov
and
mov
lret
cmovge
repz
pop
cmp
add
jne
fcmovne
or
imul
adc
pop
mov
aaa
jge
aam
clc
mov
push
push
fdivr
popf
ficoms
mov
inc
mov
arpl
sar
inc
mov
cmp
cmp
or
adc
jge
sar
xchg
pop
popf
ja
fstps
lock
push
cmp
xchg
jbe
sub
test
lcall
jne
mov
enter
notrack
lahf
push
rcrl
sbb
adc
je
jns
sub
cmp
sub
adc
or
mov
flds
pop
sar
sbb
xchg
out
outsb
bswap
or
sub
fwait
jg
xchg
popf
sub
and
push
jmp
or
xchg
into
xchg
pop
hlt
mov
lock
adc
add
dec
mov
adc
mulb
jae
mov
iret
jbe
sub
xor
push
push
scas
or
add
insl
inc
mov
imul
xchg
sub
les
jae,pt
xor
in
int
gs
insb
in
ja
out
add
add
xchg
xchg
xor
add
add
js
cld
enter
dec
add
jns
fwait
addb
in
dec
jno
insl
add
xchg
out
into
je
hlt
mov
fimuls
sbb
add
das
mov
test
dec
jne
pop
push
push
or
rorl
fstpt
je
ret
jno
push
test
xlat
inc
jge
lock
inc
jbe
mov
std
imul
push
push
xlat
push
filds
xchg
bound
subl
scas
sbb
negl
inc
andb
ss
clc
mov
fsubrp
je
popa
dec
push
mov
jmp
xchg
es
cs
adc
loopne
sbb
in
das
dec
lahf
dec
cmc
pop
test
add
push
adc
std
loope
xchg
mov
sarl
sti
inc
jge
sti
inc
xor
sub
push
test
ret
mov
mov
dec
sarb
inc
lahf
loopne
inc
inc
ljmp
inc
pop
test
and
fincstp
push
int3
push
arpl
dec
int3
clc
daa
gs
nop
sub
xlat
xor
fnsave
out
dec
ljmpw
pop
inc
push
dec
jo
jmp
dec
dec
es
lods
out
sahf
hlt
push
clc
xchg
cmc
pop
pop
into
xchg
xor
mov
mov
jne
shr
mov
aad
mov
stc
out
fwait
inc
mov
mov
popa
inc
push
jno
mov
rcrb
ror
out
cmpb
push
mov
cwtl
inc
test
lret
cmp
cmpsb
mov
dec
inc
cmpsl
ljmp
aaa
adc
jp
in
stc
call
cmp
out
leave
xchg
jo
test
test
jle
sbb
cwtl
xor
sahf
pop
jnp
xor
push
je
mov
mov
sub
jo
mov
out
fidivs
push
jae
push
test
and
dec
sbb
xchg
pusha
jo
xchg
push
mov
leave
cltd
fcomps
test
shl
je
sub
dec
cmp
movsb
lret
mov
jns
addr16
inc
outsb
fcmovnu
hlt
cmc
and
in
dec
es
ja
push
mov
cmp
lret
or
les
push
push
jo
fistl
pop
xor
push
adc
aad
cmp
je
insl
and
dec
addr16
add
fdivl
push
pop
mov
jg
jl,pn
int
lahf
fwait
ja
jg
rclb
push
stos
aas
push
jno
mov
mov
mov
inc
add
adc
xor
aad
xor
push
ds
sub
inc
outsb
movsl
loop
adc
daa
shl
pop
jno
dec
scas
pop
ja
addr16
ja
cmpl
in
jmp
ret
dec
adc
sub
fcoml
test
stos
or
jnp
pop
pop
mov
outsb
and
fmulp
cmpsb
adc
imulb
out
adc
pop
dec
ja
cmp
aas
ret
xorb
test
stos
rorb
xchg
sub
and
in
std
push
push
inc
js
in
test
fmuls
inc
inc
adc
xorl
incl
pop
aad
popa
cltd
in
icebp
mov
xlat
mov
ljmp
sub
mov
cmp
out
pop
dec
fsubrl
push
jge
adc
stos
xchg
out
jecxz
pop
cwtl
cmp
push
js
sub
add
or
ljmp
sar
fcmovb
rclb
les
pop
jl
aad
mov
mov
std
push
cmp
xchg
xlat
push
das
lret
es
cmp
jecxz
iret
xchg
enter
arpl
stc
or
leave
push
and
push
bound
or
mov
int
ljmp
shlb
pushf
xor
sub
imul
sarl
adc
cld
cwtl
das
xchg
push
js
adc
insl
aas
mov
sbb
je
roll
xor
push
lret
lahf
ja
cld
sbb
fsubs
icebp
mov
cmp
pop
mov
out
repz
sub
dec
pop
scas
cmp
adc
dec
sub
fistl
lods
adc
shr
cwtl
jno
adc
je
jbe
stc
push
or
jae
xchg
and
sarb
xor
outsl
movsl
jbe
push
push
ja
outsl
jp
and
adc
add
sahf
mov
jnp
test
andb
das
mov
mov
push
lahf
mov
mov
data16
jmp
mov
pop
push
cmp
ds
mov
inc
aad
nop
xchg
pop
rep
sub
inc
push
cltd
mov
push
push
lods
sbb
stos
jae
mov
cmp
fildl
mov
mov
push
xchg
cmp
movups
mov
xor
rorw
iret
pop
aam
imul
pop
xlat
lret
fdivrs
jmp
sub
prefetchw
or
dec
xchg
shll
push
sbb
cmp
loopne
pop
test
aam
iret
setp
sub
aad
xor
mov
mov
stos
in
xor
inc
dec
in
adc
pop
imul
or
loope
and
testl
sbb
and
dec
gs
push
inc
leave
lret
push
push
inc
pusha
xor
popa
xor
mov
jmp
mov
out
icebp
jbe
mov
jns
jno
and
fcom
js
sbb
add
push
push
pop
inc
fstps
pusha
icebp
cli
mov
out
mov
int
rol
aad
cmp
push
and
pusha
ret
xchg
scas
gs
aam
mov
ret
pop
xchg
mov
mov
mov
arpl
sbb
les
mov
orb
adc
test
rorl
popf
sbb
movsl
movb
mov
cmp
dec
and
pop
xor
jnp
or
cmp
mov
int
jp
insb
dec
loop
sti
lods
adc
sbb
lods
cmpsl
push
sbb
movsl
dec
add
and
into
push
in
test
pop
call
add
push
add
pop
pop
add
ficoms
shrb
clc
jo
inc
mov
int
das
pusha
notb
add
into
cli
imul
xchg
je
sti
mov
sbb
fdivl
push
in
xchg
jns
cli
mov
mov
out
mov
mov
inc
scas
je
aaa
sub
test
push
pop
xchg
xchg
call
out
int3
je
outsl
testb
xor
jl
xchg
cmpsl
flds
test
pop
xchg
fisubs
dec
push
hlt
jbe
sbb
jo
and
add
cmp
sub
xor
pop
insl
sub
addr16
push
xor
pop
pop
sbb
xor
push
adc
leave
jecxz
pop
test
push
je
mov
repnz
addl
test
arpl
cwtl
adc
int
iret
xlat
test
adc
mov
outsb
mov
cltd
xor
push
push
jae
iretw
ret
scas
cmp
push
push
scas
pusha
fldt
iret
mov
xchg
scas
and
roll
std
jl
stos
inc
xchg
icebp
test
xchg
push
sar
and
fsub
or
xorb
jp
push
in
popa
iret
jmp
cwtl
mov
loope
repz
shr
imul
xchg
aaa
push
int
rdpmc
xchg
out
stc
sti
and
pop
das
fstl
add
jnp
xchg
pushf
xor
inc
out
xor
fwait
pushl
stos
cmp
cld
jmp
test
jl
jle
sub
mov
inc
cmp
pop
xor
pop
jmp
mov
jb
aas
or
mov
ss
pop
sbbb
ret
adc
in
mov
popa
ja
xchg
push
out
xlat
inc
jnp
bound
cli
jo
jg
fld
iret
xor
sarb
cmc
or
das
xor
cmc
inc
jl
mov
push
xlat
add
stos
nop
mov
lds
lahf
sub
jmp
movsl
jg
js
insl
stc
jb
rclb
mov
lods
mov
and
mov
cwtl
pop
inc
pushf
mov
jge
subl
mov
sbb
scas
pop
add
jbe
push
cli
mov
mov
ja
fwait
leave
jl
popl
outsb
stos
jo
cld
push
push
repnz
jne
push
inc
popf
sub
fisubrl
int
jl
sub
orps
movsl
xor
push
inc
pop
mov
insl
lods
jno
add
arpl
push
cmp
and
loopne
lret
jnp
fnstsw
sbb
jb
push
outsb
lret
repnz
fbstp
movb
out
xchg
push
push
xchg
dec
adc
jmp
sbb
xchg
dec
cwtl
fwait
mov
dec
adc
add
mov
pushf
out
incl
mov
mov
mov
cmp
xor
dec
and
inc
or
lods
push
popa
mov
push
aas
jb
push
enterw
xor
adc
sbb
stos
dec
stc
or
test
imul
adcb
lret
jne
loopne
bound
fstpl
daa
lret
xchg
xchg
xchg
lahf
inc
fiaddl
pop
aaa
sbb
out
add
outsl
test
add
in
idivb
lods
fstpl
xchg
jbe
insl
pop
or
incb
outsb
adc
neg
lock
mov
leave
cmp
xor
push
cmc
jmp
lret
aam
add
dec
movsl
daa
cmp
mov
test
dec
jg
in
jmp
jns
add
pop
inc
or
in
inc
test
cwtl
pusha
inc
iret
inc
pop
lret
and
and
jp
js
repnz
dec
jl
loop
pusha
aas
out
lds
jno
pop
jecxz
xor
xorl
in
and
mov
pop
out
mov
lods
sbb
popf
arpl
dec
push
push
cmp
and
pop
push
jae
int
add
cmp
je
outsb
clc
inc
movsl
and
repz
adc
test
pop
jb
out
iret
dec
inc
sbb
mov
dec
pop
je
in
outsb
xchg
rcr
sub
xorb
mov
scas
iret
movsl
imul
jb
push
lcall
divb
imul
dec
jbe
pop
lds
jge
and
outsl
inc
xor
fwait
xchg
push
or
outsl
rorb
imul
cld
xchg
mov
sti
lcall
inc
cmpsb
adc
lds
pop
fdivrl
ficoms
push
lret
sahf
pop
push
jl
aas
mov
mov
mov
loope
gs
and
int3
push
mov
out
mov
test
clc
sub
mov
stos
sbb
pop
dec
mov
inc
dec
cmp
bound
dec
push
pop
xor
inc
scas
push
std
jne
stos
jbe
dec
incb
jne
gs
rorl
shrb
push
repz
jmp
and
adc
popa
movsl
jp
cmp
adc
mov
adc
jg
jo
scas
pop
cmp
cmp
pop
jne
lds
push
iret
lea
xchg
test
adc
clc
testb
sti
cmpsb
or
xor
sbb
fwait
xlat
loopne
insb
lods
leave
sbb
fadd
loope
pop
pop
mov
pop
enter
sub
xor
cwtl
add
inc
cld
mov
xor
xor
cmp
push
cmp
mov
out
mov
aas
xor
adc
enter
dec
xor
data16
testl
or
andl
sub
lods
add
xor
push
mov
out
push
pop
push
movsb
ret
jecxz
insb
fistps
sbb
movsb
sti
dec
inc
lods
imul
out
jne
adc
ret
mov
add
out
push
dec
das
xchg
inc
fwait
in
pop
inc
cmp
loop
fists
int3
mov
in
popa
inc
rclb
xor
push
std
push
fnstcw
lcall
jmp
push
mov
push
jp
push
jle
jb
or
ss
and
mov
push
test
sub
ret
sbb
adc
add
dec
xlat
ljmp
pop
inc
scas
fs
arpl
cmpb
xchg
xchg
mov
fwait
mov
dec
iret
sbb
or
inc
fmull
cmp
aaa
ljmp
jle
inc
cmp
jl
cmpsb
xor
ret
ret
fiaddl
add
adc
sbb
mov
cmp
mov
fnstenv
pop
mov
dec
or
jns
xchg
push
jl
subb
cmpsb
dec
in
popf
sub
mov
jno
add
adc
cwtl
in
cmp
sub
cmpsl
test
clc
mov
rcll
icebp
fsubrl
sbb
imul
cwtl
mov
orb
shlb
mov
jecxz
mov
push
and
movsl
pop
insl
lods
sub
add
stc
mov
and
jb
decb
jno
js
inc
cmc
popf
cmpsb
clc
outsl
shll
shrl
sub
xchg
adc
and
push
pop
xlat
test
adc
inc
mov
fidivs
ret
or
imul
mov
or
sbb
dec
cmpsl
xor
inc
add
jne
movsl
inc
inc
dec
xchg
and
jmp
jns
cli
loope
sub
les
rclb
xor
pop
push
stos
gs
leave
xor
es
pop
test
into
lock
mov
mov
lock
add
pop
adc
dec
dec
cmpsb
cmp
xor
int3
nop
mov
loope
cmpsl
cmp
bound
adc
jne
ret
mov
pop
aam
and
mov
nop
in
or
orl
pop
das
jno
movl
mov
mov
cmpsb
shlb
jno
movsb
mov
subb
inc
repz
test
xchg
mov
xchg
xor
fcmovbe
repnz
cmp
fbld
xchg
or
dec
cli
pop
xor
mov
pop
dec
push
cmp
mov
add
scas
adc
repz
shll
out
xchg
or
add
adc
pop
enter
sahf
pop
test
mov
mov
aas
dec
inc
bound
inc
add
ss
je
dec
dec
mov
fmuls
or
insl
repnz
test
and
out
mov
std
sbb
shrb
xlat
inc
je
data16
popa
push
jnp
xor
mov
clc
clc
lock
mov
mov
mov
lods
xorl
out
arpl
fs
mov
jge
cmpsb
cmpsl
push
ffree
call
xor
movsl
je
dec
repnz
loop
dec
jae
xorb
iret
lods
sbb
in
lods
push
frstor
fcompl
push
xor
das
lcall
leave
lahf
cmpsb
int
mov
mov
jno
test
xchg
in
sahf
mov
mov
jge
jns
push
sbb
mov
adc
stc
mov
adc
ds
push
ret
mov
jmp
sbb
pop
cltd
in
jp
jmp
dec
out
sub
movsl
in
jge
push
and
xor
lret
in
and
dec
sbb
mov
adcb
cmc
fwait
and
and
enter
mov
adc
push
mov
test
shl
cmp
add
sub
mov
push
push
mov
fs
add
and
outsb
fdivrs
data16
mov
or
fsts
aaa
mov
shlb
dec
hlt
mov
call
mul
scas
arpl
pop
iret
xchg
iret
nop
fbld
lods
rorl
cmpsb
pop
cmp
inc
sub
xor
test
pushf
mov
lods
data16
mov
sub
adc
mov
pushf
ret
mov
jge
repnz
test
in
add
jg
lcall
cwtl
jnp
jle
js
pop
call
sub
mov
pop
gs
adc
adc
lret
xor
mov
sbb
push
int3
or
sub
cld
outsb
dec
mov
inc
sbb
fdivrp
xchg
fwait
inc
lds
mov
add
adc
out
fyl2xp1
scas
jecxz
scas
cmpsb
in
jle
mov
hlt
mov
mov
shll
cltd
imul
xor
inc
sbb
rolb
cli
cmpsl
mov
stc
sbb
dec
dec
icebp
xlat
jae
push
popa
adc
out
push
or
les
test
mov
in
cmp
repz
pushf
jg
js
or
cmp
in
fisttpll
ss
push
jecxz
pop
sub
cmpb
jge
or
or
mov
pop
rcr
gs
js
lret
lds
and
std
out
adc
inc
push
ret
call
clc
or
hlt
int3
movsl
je
xchg
adc
jnp
and
movsb
pop
aad
xchg
fcmovu
xor
imul
mov
jnp
cmc
jmp
rorl
push
xchg
xlat
fsubs
or
jnp
or
sbb
mov
aaa
mov
dec
test
lahf
aam
jge
call
bound
push
xchg
pop
fcompl
into
sarb
adc
mov
xlat
fsubrs
es
shrl
pandn
test
scas
mov
loope
clc
fld
into
fs
leave
sub
jecxz
scas
in
cmp
imul
cmp
add
test
mov
pop
mov
and
xor
jmp
push
jle
push
cli
xor
cli
lret
fcomps
adc
inc
cmpsl
mov
movlhps
ds
test
iret
mov
imul
xchg
jmp
adc
mov
test
adc
sub
pop
out
push
pop
aaa
arpl
repz
subps
sahf
int3
sarl
and
les
outsl
mull
stos
mov
cmp
sbb
sub
pop
sbb
xchg
cmpsl
sub
pop
xchg
add
add
jae
mov
loope
xchg
nop
out
shrb
shl
dec
outsb
loope
movsl
dec
cmc
jnp
and
sub
xchg
data16
shlb
bound
ret
fidivrl
in
xchg
lds
vcmpsd
shrl
hlt
jno
ja
daa
and
mov
xchg
and
push
sub
dec
in
sti
out
addr16
or
sub
repnz
pop
les
xor
push
mov
adc
adc
movsl
notb
xchg
imul
test
call
dec
sti
out
outsb
mov
out
popa
bnd
dec
stos
in
leave
push
decl
xchg
mov
popf
outsb
add
and
popa
loop
in
xor
gs
and
in
cmpb
push
test
pop
in
jae
mov
jg
fcomps
fdivrl
mov
movsb
dec
pop
cmp
jnp
loop
push
cmc
hlt
je
or
ss
out
into
sub
orl
adc
add
outsb
es
sbb
and
mov
test
mov
and
xchg
outsb
mov
sbbb
mov
dec
into
xchg
frstor
jb
lcall
cmc
and
mov
aas
cld
ficoms
mov
enter
mov
and
sub
out
mov
repnz
sbb
push
ja
into
mov
pop
sarb
xchg
or
jnp
inc
or
daa
imul
jb
movl
addr16
pop
mov
sbb
out
stc
adc
sbb
popa
mov
test
add
and
xchg
cmpsl
dec
jbe
enter
mov
adc
or
sub
fwait
dec
clc
pop
sub
gs
jl
lds
lds
out
jle
cmc
jle
jecxz
mulb
add
mov
jge
xor
call
mov
inc
xchg
mov
jae
and
fdivp
xor
into
add
lea
jbe
sub
fcmovnu
cmp
sbb
es
rcll
bound
les
add
aas
mov
shrb
mov
lods
imul
jns
loopne
add
es
mov
dec
cltd
mov
sub
add
js
loop
sub
mov
pushf
mov
mov
adc
mov
mov
je
push
mov
ret
jnp
outsl
stos
addr16
mov
mov
lds
sub
sbb
sarb
adc
popa
gs
cs
rcl
or
les
cmp
lret
in
mov
cwtl
out
out
mov
xchg
out
lods
ret
pop
test
add
jg
xor
movsb
mov
lahf
sbb
and
dec
inc
dec
or
dec
adc
bound
mov
lods
xchg
sub
ret
xor
pop
cmp
jae
pop
cmp
push
fdivs
mov
rcr
daa
push
sub
sbb
xlat
push
frstor
sahf
mov
lods
mov
or
mov
mov
testb
adc
rolb
mov
inc
sahf
fs
andb
push
and
sub
jl
mov
xor
push
lds
pop
mov
lods
push
lret
cmp
xchg
sub
lcall
pop
mov
xchg
mov
dec
in
imul
std
aas
loopne
mov
fcoml
cwtl
leave
lahf
subl
cli
aaa
fwait
xchg
cwtl
ret
stc
mov
sti
in
dec
repnz
in
jbe
sbb
outsb
repz
je
mov
jno
jbe
mov
es
pop
cmpsl
stos
mov
popf
xor
or
std
mov
aaa
xchg
scas
adc
scas
cld
ret
mov
int
fwait
das
sub
movsb
loopne
mov
test
sbbl
push
mov
rclb
jg
jbe
fimuls
mov
xor
push
sbb
jle
sub
lock
push
aaa
ss
out
xchg
jo
xor
jno
push
push
ret
xlat
jle
xor
jle
rcrb
lods
push
insb
test
daa
push
pushf
jo
jbe
sub
cli
or
fstl
xchg
sbb
add
int3
out
jmp
mov
loope
iret
pop
mov
popa
stc
or
decl
push
or
pop
cmp
loope
mov
xchg
lock
dec
inc
decb
sbb
stos
xchg
push
push
dec
outsl
mov
inc
std
inc
fildl
adc
imul
rorl
ja
dec
push
xchg
xor
icebp
sub
sub
dec
push
push
and
std
cltd
aam
pop
push
xchg
adcl
cltd
pop
mov
or
les
and
jb
cmp
xor
data16
inc
jge
mov
or
mov
cmp
iret
jmp
mov
outsb
mov
mov
jle
sti
aam
mov
lock
push
and
jge
xchg
mov
mov
fstpl
sub
sub
dec
addr16
mov
fcomps
shlb
cmp
mov
xchg
out
inc
xor
mov
and
jg
clc
and
push
insb
adc
mov
repz
adc
cli
dec
sub
movsl
test
rolb
addr16
inc
mov
mov
out
dec
icebp
dec
shll
cmp
in
add
scas
push
mulb
cmp
outsl
gs
mov
dec
outsb
dec
push
dec
mov
mov
xor
shrb
lcall
out
in
test
xor
dec
lcall
inc
adc
mov
aas
shr
hlt
sti
sbb
out
popa
andb
xor
lods
fldenv
pop
or
or
test
mov
push
dec
mov
and
mov
mov
and
andb
cwtl
add
mov
mov
mov
roll
jbe
inc
sar
sub
xchg
dec
out
push
push
ss
mov
subb
je
push
lcall
cmp
mov
mov
arpl
adc
scas
cmp
sarb
mov
rclb
popa
fstpl
imul
outsb
sbb
and
xchg
push
jp
sub
dec
in
or
cmpsb
push
aad
mov
js
xchg
sub
clc
lret
dec
in
scas
jne
in
adc
scas
xlat
xchg
js
push
and
xor
pop
mov
int3
pop
pop
dec
test
mov
movsl
je
insl
gs
add
and
dec
cwtl
repnz
lret
ljmp
jge
dec
js
xchg
dec
int
sbb
cltd
ds
or
or
dec
int
inc
mov
mov
mov
daa
and
imul
add
fistl
gs
inc
sbb
mov
cmp
daa
fmuls
adc
scas
lret
or
scas
ss
pop
dec
fcmovnb
vxorps
out
xor
insb
movsb
push
mov
cmc
xor
inc
dec
mov
xchg
popa
inc
insl
cmc
pusha
js
stc
sbb
out
lods
movsb
jmp
dec
push
clc
imull
push
add
dec
insl
popa
cmpl
stos
and
xor
popa
push
aas
xchg
xor
loope
jg
das
xor
in
push
icebp
dec
push
pop
aas
out
mov
outsl
test
fmuls
xchg
pop
adc
push
adc
adc
push
sahf
sub
fneni(8087
fdivl
in
repz
xor
sub
sub
frstors
into
aaa
lret
int
roll
bound
push
xchg
jp
movd
jle
test
jns
add
das
push
or
icebp
shll
fidivrl
fildll
in
das
lock
stos
loope
sub
sti
push
lock
and
jl
and
lods
imul
push
mov
xchg
push
leave
or
sbb
int
sbb
jo
mov
cwtl
sbbl
nop
jbe
cwtl
mov
and
and
mov
add
shl
rcll
and
shlb
data16
inc
jae
jp
cmp
jne
xchg
adc
test
sub
in
jns
or
push
dec
lret
or
and
in
lahf
call
adc
xchg
dec
mov
push
add
fcmovu
lds
push
mov
mov
ljmp
ja
mov
mov
xor
notb
cld
mov
int3
bound
ja
cmp
imul
pushf
mov
jge
gs
xchg
mov
and
lcall
sahf
aad
movsl
mov
mov
enter
scas
push
push
lods
in
scas
je
icebp
je
or
repz
add
xadd
lcall
mov
and
int3
inc
gs
repz
add
ljmp
cmp
push
out
xlat
xchg
pop
sti
gs
cld
mov
inc
mov
push
and
ficomps
adc
rclb
push
insl
xchg
or
inc
xchg
mov
gs
les
mov
rorl
sbb
mov
push
jns
inc
fcmovnu
out
cmp
ja
add
pop
cld
sahf
cmp
ss
int
mov
shrl
sub
std
pop
repnz
out
mov
dec
jb
add
lret
cmp
sbb
pop
inc
add
ja
lods
ficompl
push
jp
aas
mov
ficomps
out
mov
fsubrl
lret
test
jecxz
popf
push
fstpt
arpl
les
pop
stc
mov
lods
sbb
push
jnp
add
pop
shll
sub
jo
out
daa
movsb
xchg
sbb
xor
sub
js
adc
jmp
inc
js
mov
in
jo
xchg
sub
or
aaa
lret
sub
cmp
lea
and
lds
mov
xor
into
cmp
scas
pushf
jge
jb
mov
mov
xchg
dec
sub
add
jne
sub
jb
pop
push
repnz
pop
mov
add
mov
add
add
adc
rclb
xor
fwait
adc
push
adc
and
xchg
test
jle
das
pop
rclb
jle
outsb
cmp
dec
mov
sub
pop
mov
testl
mov
pop
mov
sbb
mov
std
inc
je
mov
pop
push
jnp
inc
lea
lret
pop
cmp
jmp
mov
orb
daa
mov
cwtl
shlb
das
icebp
outsb
movsl
jecxz
sub
sub
int
jp
mov
call
lods
mov
mov
mov
xor
xor
ss
out
mov
pop
add
push
dec
pop
lret
cli
sahf
xor
jne
sub
dec
pop
iret
jns
jecxz
jbe
test
lret
jle
cmc
fsts
xor
int
mov
scas
sbb
adc
stos
pop
aas
push
and
jge
jo
sbb
das
aas
cmpsl
dec
leave
pop
sub
xor
add
xchg
pop
push
out
sbb
add
loop
mov
dec
loope
fcmovbe
jno
cmp
sbb
cmp
notb
repz
in
xchg
mov
xchg
cltd
leave
shlb
fs
mov
pmulhw
push
jb
jp
cmp
sub
shl
loope
aaa
adc
movsb
push
mov
addr16
das
push
dec
aad
pop
icebp
mov
mov
mov
mov
dec
cmp
dec
mov
stos
int3
and
push
imul
dec
mov
js
push
test
cmpsb
dec
mov
fbld
add
mov
cli
adcb
shll
loopne
roll
scas
push
push
xor
jg
mov
pushf
fs
adc
dec
shlb
sbb
dec
dec
xchg
cmpsl
lret
xor
andl
and
sub
jnp
and
push
push
movsb
jo
inc
shrb
paddb
fisubrl
sbb
mov
cli
rorl
in
movsb
insl
test
lcall
mov
add
aad
mov
sbb
rcll
sbb
aad
pop
les
les
test
scas
xchg
sbb
ds
data16
inc
jl
stos
in
jnp
loop
add
and
dec
aam
rorb
lods
mov
aaa
add
add
lods
pop
pop
in
mov
pop
push
lret
cmc
push
cmp
test
and
aaa
mov
lods
add
outsb
lock
loope
cmpsb
loope
cmp
push
cmp
push
mov
arpl
mov
xor
scas
pop
lock
fnclex
stos
arpl
push
mov
push
jmp
push
std
jnp
jle
movsb
jo
add
xor
cld
loop
push
and
inc
jmp
push
data16
lea
or
mov
pop
popw
mov
es
xchg
arpl
imul
shrl
lret
imulb
das
inc
xchg
and
aam
mov
jmp
xorb
aam
daa
push
adc
je
sbb
clc
stc
aam
ja
and
lods
lret
scas
loopne
inc
xchg
cmpsb
int3
pushf
mov
lcall
xor
jmp
cltd
mov
mov
mov
inc
js
rcl
test
repz
pop
cwtl
fwait
jne
loopne
inc
jl
dec
mov
adc
int3
pushl
or
adcb
xchg
jo
lret
lea
ds
push
out
push
mov
test
aam
or
xchg
xchg
sbb
cmp
adc
dec
add
mov
xor
pop
dec
sbb
out
fcoms
stos
mov
fsubs
xchg
mov
xchg
pushf
xchg
xor
mov
test
fmul
inc
xor
jl
clc
into
push
cli
fwait
pop
jmp
jmp
out
jnp
cmpsl
xor
push
mov
lahf
insb
push
cmp
cmpb
ret
sub
jo
mov
mov
into
fcoms
jbe
shrb
ljmp
add
xchg
mov
push
push
sub
fwait
imul
inc
ret
leave
adc
mov
or
adc
pop
push
fcmovbe
push
ja
mov
push
jne
add
icebp
shrl
sti
cmp
mov
test
notb
test
dec
sbb
or
imul
jl
mov
xor
popa
orb
xor
fldln2
stos
xor
mov
lcall
std
insl
xor
cmpb
stos
je
pushl
std
data16
push
cmpsl
dec
outsl
rcll
js
dec
add
dec
pop
sbb
adc
sub
xlat
cmp
mov
shr
push
int
mov
cmpsl
roll
andl
movsb
or
pop
mov
mov
test
mov
inc
inc
popf
add
in
in
xchg
add
jp
fsts
mov
mov
lds
mov
fistpl
and
mov
push
inc
test
sbb
add
mov
clc
and
add
jnp
mov
into
xchg
jno
push
in
insl
xchg
and
cmp
mov
clc
push
call
out
cmpsb
xchg
fdivrs
and
je
xor
aad
and
mov
daa
and
dec
fidivl
adc
add
je
and
clc
xchg
inc
ds
cmpsl
sahf
int
push
pusha
lods
mov
xor
jl
out
rcrl
ds
cmpsb
mov
xchg
fcoml
and
mov
xchg
addr16
sarl
orb
in
mov
daa
pop
lret
arpl
dec
enter
add
rorb
adc
push
jno
dec
mov
cmp
lock
mov
mov
mov
pushf
lret
mov
mov
ss
jmp
or
shll
sub
add
and
jle
out
in
cwtl
sahf
arpl
jns
lret
and
inc
rorl
push
in
outsb
loopne
outsl
cmp
and
lock
push
mov
xor
jne
gs
cmp
xchg
nop
stos
sub
les
or
jmp
pop
xchg
outsb
addl
sbb
stos
scas
and
clc
jl
dec
mov
sahf
add
in
sub
pop
sbb
xchg
stc
mov
mov
and
mov
popa
cwtl
in
fnsave
xor
mov
stos
mov
ss
ret
cmp
mov
aad
arpl
hlt
das
sahf
ja
cld
cmpxchg
sti
jo
mov
xchg
int3
cmc
mov
add
cmpsl
push
lcall
push
mov
orb
jge
enter
and
stos
out
test
hlt
clc
add
push
dec
ja
mov
mov
int3
sarl
hlt
cmpsl
add
rcr
popa
mov
pop
pop
mov
dec
gs
xor
jo
xchg
sub
test
nop
jns
add
es
inc
mov
repz
fisubrl
scas
aaa
or
and
daa
shr
adc
addr16
idivb
out
popa
inc
adc
pop
int
movsl
jl
xchg
bound
adcb
ss
sub
insb
push
mov
push
int
add
test
push
mov
test
shrl
dec
ss
iret
cmp
test
stc
les
div
pusha
cmp
cltd
orb
mov
mov
and
stc
sub
lods
pop
dec
mov
test
xor
jae
fcoms
jo
decl
add
aaa
cmpsb
outsl
adc
mov
xchg
loopne
insb
fimuls
or
or
dec
ficoms
mov
popf
fbstp
movsb
mov
imul
and
sub
rorl
andl
movsb
xchg
into
xchg
push
pop
ljmp
mov
mov
fdivrl
inc
dec
sti
sbb
mov
xor
jecxz
jge
push
dec
inc
mov
ja
inc
ficomps
xchg
leave
das
cwtl
and
cmp
je
negl
cwtl
and
imul
in
enter
arpl
push
popf
adc
addl
subl
lds
jno
fcomps
cmp
ljmp
inc
cli
in
scas
xlat
inc
mov
xchg
jbe
popa
mov
mov
cwtl
test
iret
sbb
fcomps
fildl
dec
lds
xlat
cwtl
mov
xchg
subps
inc
lods
adc
ja
mov
hlt
inc
fistps
adc
push
repz
xchg
sub
push
test
std
push
shrl
test
test
sarl
lods
adc
adc
leave
repnz
movsl
dec
adc
popa
scas
flds
outsb
or
fildl
ljmp
or
addr16
loopne
pushf
pop
test
call
mov
dec
xor
pop
inc
inc
mov
mov
lret
xchg
cmp
mov
fadd
dec
loopne
mov
xchg
pop
shll
sub
sub
jecxz
out
sub
les
push
test
shlb
mov
fcomi
adc
pushf
aad
inc
out
cmc
xor
aam
sbb
inc
repnz
fsubp
mov
xlat
cmp
mov
jmp
push
int
adc
movsb
dec
daa
and
mov
mov
loopne
jecxz
pop
cmp
jl
push
jbe
jecxz
mov
cwtl
sub
jp
sbb
pop
cmc
cmpsl
push
ds
mov
lea
mov
jle
sbb
out
es
loop
jmp
inc
lret
orb
xchg
popa
repnz
mov
stos
dec
ds
lods
movsl
and
pop
lods
jno
loop
dec
mov
fisubrs
std
cmp
bound
xor
add
or
loope
fsts
push
cmc
shll
int
xchg
mov
dec
daa
mov
xchg
shll
pop
inc
aas
add
xchg
sbb
xor
loopne
xchg
mov
mov
lea
push
mov
xchg
add
and
sub
sub
jnp
dec
jmp
aaa
jecxz
inc
lods
add
idivl
hlt
gs
mov
cmp
cwtl
das
sbb
pop
push
lods
ss
cmp
ss
jnp
inc
push
mov
in
pop
lret
pusha
pop
pop
mov
andl
pop
xchg
mov
arpl
mov
push
xor
cmp
and
cld
test
imul
jge
push
movsb
sub
xchg
adc
mov
adc
ljmp
pop
sub
jnp
push
mov
test
adcb
xor
ficoms
sub
mov
jns
inc
test
fstps
in
fwait
aad
mov
fdiv
sub
mov
je
orl
in
push
add
in
inc
push
pop
push
jae
lods
rolb
jb
inc
addl
or
shrb
pop
xor
xchg
mov
sub
ja
mov
sub
cmpsb
cltd
push
es
push
pushf
sub
gs
xor
aam
je
fimuls
sub
outsb
jge
test
imul
mov
bound
inc
cmp
xor
jmp
ret
stos
shrl
ret
rcrb
negl
int3
mov
xor
adc
scas
jae
mov
mov
sarb
xlat
outsb
push
lea
dec
mov
pop
in
fwait
in
out
inc
xchg
push
rcrl
sbb
fsubl
pop
movsb
sub
in
lds
xchg
test
in
inc
call
adcb
mov
test
mov
pop
out
ficompl
or
inc
daa
jp
add
push
xlat
cmp
xor
rolb
dec
clc
push
pop
pop
iret
push
jnp
pop
jecxz
push
dec
aam
pop
and
ljmp
sbb
leave
out
fstp
loopne
pop
arpl
sysenter
or
pop
in
push
cwtl
lea
push
lret
dec
cmp
add
popf
adc
ljmp
inc
out
mov
fcmovbe
add
cwtl
xor
icebp
jb
xchg
fimuls
call
es
icebp
push
push
push
loopne
add
xor
cltd
aam
hlt
fcmovnbe
test
and
pop
loopne
pop
xchg
mov
mov
movsb
daa
dec
inc
mov
pop
sub
mov
add
mov
push
and
and
dec
cli
mov
cli
inc
repnz
lcall
inc
ss
dec
into
jle
pop
push
into
push
adc
mov
rcl
fdivrs
push
sub
insl
fcoms
lret
stos
mov
xchg
pop
push
popf
mov
jne
push
movsl
cltd
test
les
or
arpl
cmp
stos
test
ret
lock
add
ret
aas
insl
jnp
jmp
pop
std
stos
icebp
push
mov
aad
xchg
in
or
aad
fsubrl
sti
mov
in
inc
idivl
jno
push
or
push
dec
adc
jp
cmp
std
dec
pop
cmp
mov
cmp
es
inc
sub
xchg
jp
lcall
lods
out
jnp
sbb
stos
mov
rol
cmp
sbb
jne
mov
sarl
push
scas
mov
mov
cwtl
mov
jecxz
jb
pop
in
sub
add
movups
jmp
xchg
sbb
pop
adc
jp
lcall
xor
jmp
bound
cs
and
shl
dec
mov
sbb
adc
mov
and
or
xrelease
mov
lahf
dec
enter
ja
lret
lea
sub
xchg
mov
cld
std
stos
and
dec
and
or
or
imul
push
adc
outsl
jmp
nop
and
push
push
hlt
xor
inc
dec
sahf
mov
je
aas
dec
aas
mov
adc
push
cld
push
xchg
sbb
adcl
in
sub
xchg
std
mov
jae
push
dec
add
sbb
test
adc
jp
sub
aas
mov
xchg
popa
mov
imul
out
inc
or
jae
pop
push
xor
add
jae
test
out
call
movsb
sub
ja
scas
fisubrl
out
cwtl
rcll
and
insb
rorb
jb
pop
dec
pop
icebp
js
lahf
ret
push
out
inc
pop
daa
xor
mov
mov
xchg
push
cmp
cmc
out
lea
xchg
es
push
sub
aam
add
ds
dec
inc
push
push
scas
ret
pop
fimuls
mov
adc
lock
movsl
mov
xor
mov
ret
punpckldq
out
in
shlb
add
push
jge
rorb
dec
fisubrs
popa
jmp
xchg
pop
xor
negl
insl
mov
mov
loop
and
pop
in
jmp
clc
loope
lret
xchg
xor
call
cmp
push
xor
imul
mov
sar
and
mov
pop
mov
scas
pop
ret
fisubrl
mov
out
scas
inc
ret
jg
push
loop
add
adc
in
cld
ret
mov
push
popa
fnstenv
mov
mov
mov
into
out
stos
jnp
mov
jecxz
sub
aas
xchg
mov
push
cmp
stos
out
fsubs
pop
jg
xchg
mov
loop
test
push
std
sub
loope
inc
inc
inc
adc
and
out
jle
out
mov
inc
inc
test
addr16
test
cmpsb
sti
js
cmp
sub
jecxz
js
stc
fldcw
arpl
jmp
test
jp
cmp
sarl
aam
adc
jne
mov
mov
cld
lods
xchg
int
out
pusha
or
int3
fnstenv
push
cli
test
sti
ret
insb
fwait
out
and
cmpsl
add
in
psubsw
sbb
std
dec
clc
add
stc
inc
cmpsl
inc
arpl
popf
addr16
add
jecxz
pop
xchg
scas
or
out
sub
cmpsl
pop
ds
aaa
lcall
adcb
dec
imul
jns
jns
in
push
xchg
mov
xchg
jns
shr
call
or
lock
popf
jnp,pt
xor
addr16
ljmp
fnstenv
out
sbb
or
data16
xchg
adc
notb
adc
shrl
pushf
sbbl
mov
adc
xor
sti
lock
jg
cmp
mov
and
test
mov
ja
mov
push
push
sub
mov
fldenv
pop
jae
shlb
je
test
icebp
insl
leave
fistpll
sub
jbe
repnz
dec
fcomip
outsb
mov
cmpl
cmp
hlt
dec
and
push
push
cwtl
push
rcr
mov
jge
iret
nop
mov
inc
bound
aas
or
mov
les
xor
pop
mov
jmp
mov
mov
mov
xchg
mov
fiadds
daa
bnd
out
lods
sbb
clc
cwtl
popf
std
xchg
orl
sub
rcrb
sbb
nop
lea
leave
mov
mov
jp
sbb
or
cmp
sub
pop
hlt
cmp
sahf
mov
in
xor
je
mov
mov
mov
call
ss
push
xlat
out
mov
test
dec
loope
mov
jg
loopne
or
fsubl
shrl
rcrb
nop
pop
mov
les
adc
push
and
mov
cmp
in
stos
cmp
loopne
jle
divb
jbe
stos
xchg
lret
sbb
int3
pop
xor
mov
inc
cmp
push
and
fidivs
loopne
xchg
cmpsl
push
mov
cmp
aas
and
dec
movsb
repnz
ljmp
lcall
pop
gs
jno
test
mov
inc
jns
xor
fadds
lods
push
or
pop
in
test
xor
push
inc
cltd
fsubp
or
xchg
add
icebp
jmp
jno
ficoms
or
lcall
lock
xchg
aad
aaa
mov
ss
adc
mov
outsb
popa
insb
ret
jno
push
xor
lret
stos
dec
xchg
fcom
lods
xor
lret
cwtl
jns
test
aam
mov
sbb
loopne
imul
cmpsl
mov
sbb
jo
mov
push
dec
iret
popf
pop
pop
pop
xchg
inc
xor
enter
leave
pushf
cmp
sub
sub
push
lcall
xchg
push
cmp
lcall
mov
stos
repnz
int3
jae
cmpsb
lods
and
fnstcw
jg
pop
movsb
lods
inc
dec
aas
pop
negl
shlb
dec
cwtl
je,pt
scas
std
dec
mov
fs
test
sti
xchg
test
inc
push
inc
or
jb
jbe
and
or
outsl
in
xlat
sub
pop
test
sub
jmp
aad
mov
rcll
loope
or
ficompl
das
hlt
push
add
lret
scas
pop
int3
pop
mov
jae
popf
test
test
mov
clc
lock
dec
imul
repnz
les
movsl
dec
inc
mov
lea
dec
pop
adc
sub
cli
sbb
add
push
mov
stc
push
inc
jge
mov
pop
loop
shl
add
pop
pop
sbb
fstpl
lods
repz
pop
and
outsb
mov
add
and
fisttps
pop
shll
adc
test
icebp
hlt
jp
mov
pop
cmp
sahf
sbb
andl
test
xchg
lret
testl
aad
sti
add
daa
jo
popf
enter
inc
and
add
xchg
rclb
push
jle
push
loop
repz
scas
lods
adc
repnz
das
out
jg
stos
mov
ficoml
repz
cmp
sarl
aad
loopne
cltd
in
fs
mov
sub
inc
das
cmp
in
fsubs
mov
test
adc
adc
dec
xchg
arpl
les
pushf
xchg
stc
inc
xchg
enter
jmp
cmp
lds
in
xor
adc
adc
repz
dec
mov
pop
push
pop
fs
mov
mov
mov
fdivrl
stos
scas
lret
sub
mov
adc
les
stos
jmp
les
mov
mov
lods
mov
inc
fbstp
in
rcr
std
insl
xor
pop
pop
add
jge
cmc
ja,pt
and
or
shrb
cwtl
mov
mov
pop
mov
stos
add
into
jl
rorb
pop
xor
xchg
xor
in
xchg
std
gs
sub
mov
jo
arpl
rcr
fwait
das
adc
bound
cmpsl
xchg
ss
adc
in
loope
jns
lret
out
cmpsl
dec
inc
jle
out
mov
divl
adc
jmp
pop
lret
fsubl
stos
mov
xchg
roll
cmovp
fucom
pop
rcr
sub
jge
pop
cs
int3
les
fwait
cmp
jmp
mov
sti
pop
daa
pop
ljmp
adc
fistpl
call
xchg
imul
sub
xchg
sbb
or
jle
ja
push
aas
add
xor
jle
movsb
bound
dec
out
pop
pop
mov
pop
dec
or
xor
stc
mov
or
ja
and
testb
sub
clc
pop
pop
fmul
inc
xchg
pop
lahf
mov
loope
mov
dec
mov
cmp
addr16
pushf
and
jmp
mov
ljmp
fidivl
or
daa
shlb
jmp
mov
mov
test
insb
and
addr16
lods
cmc
mov
mov
js
dec
daa
mov
mov
ret
popf
adc
cmp
sbbl
cltd
sub
fistps
mov
int3
mov
stc
push
inc
cmpb
test
jmp
call
aad
xchg
lds
flds
xor
xchg
xchg
dec
push
into
and
add
ror
sub
fidivrs
dec
mov
inc
es
push
add
or
gs
test
cmp
fdivrp
stos
push
add
xor
jle
xchg
inc
ja
inc
nop
pushl
push
pop
dec
imul
dec
and
jp
das
loopne
out
mov
push
aas
cmp
push
sbbb
mov
cmp
repz
aaa
push
dec
jne
mov
jae
stc
cmp
xchg
das
testl
cmpsb
or
in
xor
in
sub
test
fcomps
add
jp
lods
nop
pop
pop
xor
cmp
cltd
xor
ret
fimuls
jmp
push
mov
lods
push
adc
les
rorl
jns
cmp
mov
leave
ficoms
pop
aam
jno
push
in
std
dec
js
jge
sbb
push
xchg
push
xor
or
idivl
sub
rcr
xchg
int3
dec
dec
in
mov
mov
in
and
lods
mov
fs
or
scas
loop
dec
test
sahf
test
stos
mov
sbb
adc
mov
mov
ficomps
fs
mov
movsb
pop
cmp
mov
xor
les
inc
loope
push
popf
pop
inc
lcall
loopne
mov
ret
mulb
ss
and
in
xor
dec
loopne
jge
cmc
sub
and
adc
or
mov
in
adcl
push
pop
jns
cvttps2pi
jns
fcmovnb
lods
cmp
rclb
inc
jecxz
idivb
cwtl
ret
cwtl
sbb
and
dec
mov
repz
jp
test
lcall
aad
push
pop
sbb
movsl
xchg
jns
pop
nop
ret
and
mov
or
addr16
bound
int
jmp
sbb
popa
xchg
test
mov
aas
push
ja
mov
movsl
out
sti
ret
pcmpgtd
cmpl
icebp
and
cli
call
sbb
xabort
std
fistps
push
rcrb
fdivr
jg
jo
imul
mov
cli
insl
out
in
push
pop
xor
bound
pop
bound
mov
fdivp
lods
cmc
in
or
mov
ret
ffree
mov
jmp
test
into
les
int
stc
sbb
sbb
mov
out
push
jbe
or
les
or
aas
daa
loopne
and
cli
xor
cmpsl
cmp
jnp
enter
cmovp
pushf
inc
aas
out
jg
mov
cmp
std
push
jg
stc
sbb
in
dec
in
cmp
mov
cmpsb
fimuls
push
pop
mov
push
hlt
faddl
arpl
insb
push
add
popa
push
pop
jbe
sub
notl
ficoml
add
jne
cmp
test
and
pop
mov
insb
or
cmpl
stc
cmp
ja
inc
dec
add
stos
sub
push
sbb
call
mov
inc
test
mov
imul
mov
mov
jp
rolb
hlt
adc
icebp
mov
adc
arpl
jmp
adc
xor
andnps
popf
jl
mov
cmpsl
repz
addb
test
lret
inc
and
sub
test
popl
adc
push
test
push
mov
fs
gs
stc
xor
gs
push
adc
ljmp
jle
sub
push
xchg
lahf
jmp
clc
mov
clc
cmc
adc
xor
inc
adc
add
dec
scas
pushf
jecxz
xchg
and
in
sbb
in
shll
sub
ret
jbe
out
sahf
es
sti
fcoms
mov
adc
push
fwait
mov
aas
jno
pop
mov
dec
repnz
dec
daa
mov
add
and
cmp
test
imul
adc
adc
sub
pop
sbb
pop
insb
mov
popf
add
gs
inc
lock
push
dec
notl
mov
and
jne
fstl
pop
push
mov
out
cmpsb
lahf
fdivr
jb
popa
mov
pusha
cs
aam
pop
add
mov
xor
or
fmuls
and
dec
je
push
fisttps
hlt
inc
or
sub
decb
sbb
roll
push
jecxz
push
and
pushf
cmpsb
dec
aam
jge
daa
and
pop
pop
fldl
call
jg
mov
pop
sbbb
lret
jl
mov
mov
inc
mov
aad
lds
push
mov
or
aad
aad
jp
mov
dec
lahf
jno
adc
mov
pushf
loope
and
add
arpl
push
mov
mov
es
dec
fs
xor
mov
popf
jno
repz
test
call
cmc
cltd
fwait
mov
mov
inc
movsb
clc
mull
mov
inc
jns
in
add
nop
outsl
xor
sbb
jnp
rolb
mov
pop
idivl
insb
mov
add
push
push
cmp
cli
push
dec
or
out
insb
out
mov
cmc
cltd
icebp
pop
lods
and
repnz
mov
cli
add
test
xor
std
xchg
xchg
and
jp
shll
popa
lret
test
clc
divl
je
cmp
aaa
mov
movsl
add
push
roll
fiaddl
div
roll
popf
cmpsb
shlb
fwait
imulb
sbb
outsl
cmp
movsb
jae
scas
iret
fildl
loop
adc
push
inc
mov
jbe
xchg
bound
push
aaa
jo
and
jo
xchg
xor
pop
adc
inc
cmp
pushf
aam
jb
jg
mov
dec
push
mov
mov
xor
in
fprem1
pop
addl
dec
dec
bound
inc
inc
and
jne
imul
fistpll
push
into
lds
jb
mov
lods
jge
add
and
sbb
jl
push
mov
jp
stos
ja
aas
jne
int3
xchg
stos
pop
stos
cmp
lret
sub
inc
test
xchg
cli
mov
fdivrs
out
out
cmp
outsb
jle
std
push
adc
nop
mov
out
outsl
orl
jno
movsl
sub
xchg
imul
jp
stc
ljmp
mov
mov
inc
pop
jecxz
jg
inc
dec
sbb
add
fs
inc
enter
mov
loopne
das
jbe
adc
or
imul
sub
mov
jmp
push
push
cmp
lods
pop
jge
inc
adc
mov
bound
clc
push
cmp
es
and
mov
fstps
sub
lods
movsl
negb
xor
xor
repnz
cmpsl
out
xor
stos
sbb
gs
sbb
or
push
in
jns
stos
rep
jp
mov
lret
dec
popf
xchg
int
out
xchg
or
xchg
negl
in
loope
std
fwait
loope
adc
pop
insb
in
fdivs
mov
jl
pop
rol
push
mov
clc
dec
in
xchg
xchg
jne
daa
lock
xchg
mov
sub
shlb
int
andb
cmc
dec
arpl
cmp
sub
js
push
subl
push
or
mov
imul
das
in
sbb
es
fisttpll
loop
daa
and
mov
cmp
mov
stc
in
cmc
adc
in
test
movsl
push
data16
lret
inc
jae
stos
scas
push
pop
pop
xor
sub
sub
insl
mov
aam
sahf
lods
insb
imul
mov
out
outsl
mov
cli
sarl
mov
test
push
add
mov
popf
pusha
adc
imul
sbb
lods
shl
roll
mov
ret
mov
cld
in
aam
sbb
stos
mov
sub
push
add
xor
xchg
mov
ja
ret
dec
mov
movsl
cmpsb
inc
dec
xchg
lret
je
mov
sub
imulb
daa
sub
and
nop
sub
addr16
movsb
outsb
shl
inc
adc
clc
mov
and
call
flds
pusha
sub
cltd
sti
push
rcll
push
mov
enter
int
bnd
out
mov
add
es
dec
pop
fcoml
add
arpl
mov
rolb
es
lds
mov
or
out
rorl
in
adc
in
xchg
aam
mov
mov
jb
push
pop
mov
pop
scas
push
repz
inc
cmp
xor
dec
sbb
fwait
int
add
pop
lods
stos
imul
aam
lcall
gs
ror
stos
pop
pop
sarl
cmp
add
mov
mov
out
mov
dec
mov
add
imul
pop
in
stos
neg
jge
push
jmp
pop
dec
xchg
jmp
push
in
xlat
mov
mov
lds
ret
xor
xchg
cmp
mov
adc
or
fldenv
mov
cmc
xchg
inc
jg
fstpt
mov
in
shl
push
outsl
sbb
and
jg
mov
les
ror
fidivrs
dec
jp
or
mov
icebp
push
xor
movsl
sub
jnp
outsb
ret
shl
lret
incl
sbb
sbb
cmp
xlat
jmp
aam
xor
xchg
xchg
xor
and
cli
pop
cmp
sahf
mov
js
mov
test
enter
push
and
clc
sbb
repnz
insl
fisubs
notrack
jge
sub
mov
out
sbb
pop
jne
or
sub
mov
data16
mov
push
xchg
aad
sahf
pop
and
popl
fwait
mov
movsb
cmc
xchg
jmp
insl
or
dec
sahf
add
mov
push
bound
cs
cmp
jp
jg
jmp
jge
outsb
ret
or
add
lret
jno
jo
pop
or
mov
inc
in
cmc
pop
test
clc
ret
imul
shr
cmp
push
inc
loop
outsl
es
jb
mov
shlb
push
test
into
pop
pop
sbb
mov
inc
imul
enter
mov
pop
push
popa
test
push
and
pusha
push
or
xor
push
je
sub
popf
or
xor
rorl
icebp
or
nop
adc
sahf
xor
mov
or
lea
imul
xchg
cmp
fwait
cltd
jmp
scas
lea
push
imul
sbb
dec
push
icebp
fidivl
mov
nop
jp
ret
xor
mov
repz
test
lret
call
pop
add
add
adc
fldcw
ret
insl
xor
icebp
add
sbb
lcall
pop
xchg
jno
pop
into
int3
scas
out
jecxz
xchg
mov
mov
dec
push
cmp
sbb
andl
test
sub
pop
pushf
push
push
fisttpll
test
mov
mov
pop
inc
mov
nop
jo
test
insl
fisttpl
imul
cwtl
sar
and
dec
mov
and
xor
mov
cltd
test
xorps
fs
cmpsl
mov
enter
out
leave
cmp
les
stos
mov
and
mov
pop
fdivr
push
sub
dec
inc
mov
andl
sbb
movsb
jo
lock
push
push
adc
sti
andl
jmp
add
jae
mov
xchg
int
xchg
jno
test
jb
adc
sbbb
dec
fisttpll
cmp
sub
shrb
xchg
sub
sub
adc
and
scas
xchg
and
js
fisttpl
cmp
inc
cld
push
inc
pop
mov
jl
add
and
inc
add
bound
fists
inc
mov
pop
fcmovb
mov
sahf
iret
mov
stos
mov
mov
mov
stos
test
repnz
inc
movsb
cltd
or
arpl
xor
pop
cltd
or
xchg
mov
xchg
je
cmpb
mov
inc
xchg
mov
lret
addr16
dec
xchg
add
pusha
mov
fs
inc
jle
pop
cmpsb
mov
out
mov
mov
lock
pop
pop
adc
add
jmp
xlat
jmp
ret
pop
sbb
stc
popf
outsl
push
ret
sub
sbb
daa
out
push
or
push
xchg
push
mov
cmc
xchg
push
es
jns
push
cmp
jecxz
rcrl
pop
in
fisttpll
fwait
pop
dec
pusha
pop
jmp
push
ja
repz
fstp
and
lods
adcb
in
or
outsb
fnsave
pop
jo
dec
mov
dec
mov
inc
in
mov
cmp
xor
cmpl
pop
lea
jbe
mov
fwait
mov
add
outsl
sahf
dec
icebp
lahf
push
hlt
dec
dec
lods
inc
xchg
mov
pop
push
adc
movl
pop
mov
cmp
adc
cld
hlt
sarb
xor
pop
ret
mov
cmpsl
arpl
aam
test
sub
lahf
cmpsl
arpl
and
pusha
sbb
or
loopne
cld
lods
xchg
repz
arpl
loope
sub
dec
hlt
ss
mov
and
mov
lea
xor
out
add
mov
jmp
inc
fneni(8087
inc
lea
jg
into
add
inc
sbb
sbb
jmp
add
out
sbb
mov
sahf
int
loop
adc
mov
add
add
push
xor
and
sbb
rol
mov
std
pop
stos
pop
stc
sbb
adc
loope
pop
mov
movsl
jo
or
fs
dec
inc
les
xchg
lahf
cmp
xor
mov
push
adc
and
fmull
push
adc
and
xchg
sbb
rcrb
ljmp
lea
fsts
cmpsl
arpl
mov
cmp
in
mov
sub
or
outsb
inc
inc
fbstp
out
jno
dec
lahf
out
jno
mov
push
sbb
dec
sbb
push
xchg
sahf
mov
in
sarb
call
add
jnp
push
cld
xor
scas
add
push
cmc
in
outsl
push
sahf
jl
mov
test
imul
daa
mov
sub
xchg
xor
and
cwtl
loopne
insb
daa
xchg
pusha
fwait
jae
cmpsb
sarb
jnp
pop
pop
icebp
fimuls
call
rcl
mov
mov
cmp
jle
add
sarb
popa
lret
or
icebp
mov
adc
andb
sahf
fcmovnb
lods
ljmp
or
jle
adc
sahf
repnz
or
xchg
mov
jae
mov
pop
dec
daa
inc
sbb
pushf
jge
mov
mov
pop
pop
jle
push
repz
mov
dec
xor
iret
jne
jnp
xor
int3
jnp
ljmp
cmpsl
cmc
fdivrs
add
jbe
out
cmp
test
xchg
add
xchg
mov
push
stos
inc
dec
or
les
lods
mov
out
lret
push
dec
ret
sti
xlat
mov
insb
and
pop
imul
test
je
bound
and
in
jg
les
or
es
cs
push
pop
inc
push
imul
rep
mov
push
clc
cmc
out
and
jno
test
inc
dec
popf
adc
mov
sbb
dec
dec
rorb
jecxz
cmp
fidivl
into
jb
sbb
je
xchg
ja
mov
lret
jg
lret
mov
aad
adc
adc
hlt
dec
xor
xchg
mov
jo
or
ror
sahf
stos
add
out
adc
mov
in
faddl
jmp
cmp
mov
mov
jg
xlat
lods
fisubrl
daa
ffreep
stc
xchg
sbb
sahf
test
pushf
or
push
pop
sub
sub
and
mov
sbb
lcall
in
cwtl
or
inc
add
push
sub
sub
in
xlat
stos
xor
jb
leave
inc
scas
or
push
aad
in
cld
fdivl
jne
stc
push
pop
jo
std
push
add
daa
filds
mov
daa
inc
ficomps
aas
inc
cltd
pop
sbb
jmp
stc
popf
cmp
inc
cmpsb
test
dec
jns
fsubl
sub
sbb
mov
or
leave
icebp
mov
add
and
cltd
mov
dec
xor
sbb
aas
je
scas
loope
push
jae
in
cs
xchg
cmp
inc
std
and
aam
inc
loope
add
rorb
xchg
jg
fcomps
dec
loopne
pop
outsl
mov
rcrl
and
ss
test
cli
adc
dec
imul
xlat
push
pop
xor
xor
stc
mov
mov
js
bound
nop
xchg
xchg
lret
jne
loope
pusha
ret
stc
jmp
js
sti
mov
clc
mov
jp
push
into
das
lret
and
sbbl
cltd
jns
cmpsb
loopne
sub
xchg
sbb
adc
movl
cmp
outsb
sbb
sub
insl
dec
inc
inc
dec
out
jae
pop
sub
pop
pop
add
inc
xchg
insb
push
xor
sub
xor
nop
pop
fnstenv
cwtl
sub
mov
sub
in
sub
pop
je
leave
faddl
sbb
in
sti
add
out
repz
xor
arpl
stos
rcrb
or
inc
pop
pop
mov
outsb
aad
jg
cmpsl
lds
xlat
push
stc
inc
mov
popf
fimull
dec
add
mov
enter
jnp
add
outsb
push
stos
push
or
dec
jge
add
lcall
jbe
mov
push
lods
lock
mov
js
xchg
push
int
sub
xchg
adcl
cmp
test
jl
mov
ret
test
fnstsw
xor
adc
xor
scas
dec
mov
add
sarl
jl
scas
cmp
and
mov
push
or
jmp
xlat
pop
and
xchg
xchg
iret
ja
scas
add
dec
adc
push
pusha
sbb
sub
leave
xorb
mov
xor
cli
lret
test
sub
fdiv
repnz
adc
sbb
andb
iret
dec
push
sbb
or
inc
mov
pop
pop
mov
and
cmp
or
sbb
push
xor
mov
inc
mov
add
sub
lret
xor
cmp
pop
shl
test
xor
add
movsb
fimuls
test
jmp
bound
in
out
jnp
pop
push
int3
out
test
mov
jae
cltd
xor
movsl
and
jg
add
sbb
fxam
or
lea
fwait
mov
lds
aas
push
or
xor
ds
iret
loopne
ljmp
cmc
adc
ljmp
scas
mov
sub
aad
fistl
test
test
cmp
jl
xlat
push
mov
jmp
cmp
xchg
jnp
sub
gs
out
inc
rcl
cmp
pop
sub
cwtl
and
xchg
add
add
ja
cmp
pop
cmpl
inc
cmp
std
mov
pop
decl
jb
inc
bound
lods
mov
add
jecxz
add
rolb
pop
iret
push
mov
pop
roll
mov
dec
mov
push
pop
mov
int
pop
mov
dec
dec
sbb
mov
mov
xor
pop
je
pop
das
push
adc
jo
cmp
movsl
mov
imul
imul
repnz
lea
aad
addr16
lds
ja
and
ficoms
ljmp
mov
out
mov
xchg
out
loop
inc
mov
int
imul
push
cs
fsubl
lods
pop
add
mov
dec
rcrb
lcall
pop
or
mov
loopne
icebp
jnp
pop
pop
cmp
cmpsb
adc
cmp
lds
out
xchg
data16
pop
cmp
out
sbb
fldcw
shrb
fisubs
jnp
loopne
lea
pop
rclb
imul
sbbl
jo
xorl
mov
outsb
outsb
add
imul
pop
pop
adc
cs
das
or
outsb
in
jg
ret
fiaddl
mov
pop
hlt
cs
adc
add
jb
adc
or
scas
daa
cmc
cmp
jnp
push
insb
cltd
icebp
es
mov
pop
lret
repnz
push
cmc
ja
fadds
pop
aas
lods
sbb
sti
xor
pusha
pop
test
aad
icebp
out
dec
call
fcomps
cltd
sub
xchg
jnp
pop
inc
iret
cmc
and
movsb
lods
int
aad
jb
pop
adc
inc
popf
sub
jge
xchg
cmc
out
jnp
dec
cli
dec
cmp
add
mov
pop
mov
sbb
cltd
sub
or
pop
xor
test
not
sbb
inc
fs
add
push
pop
and
pop
cmp
xor
icebp
jl
sbb
sarl
loop
pop
add
repnz
jbe
and
mov
jmp
and
pop
in
cmp
push
mul
cwtl
and
lock
aas
cmpsl
fwait
inc
and
push
pop
fisubrl
and
loopne
inc
sub
xchg
js
pop
mov
jmp
out
sub
mov
testl
insl
add
test
push
hlt
jle
jns
push
scas
sbb
sub
movsl
or
outsb
je
fs
xor
popf
in
or
mov
addr16
dec
xchg
in
pushf
cs
xor
jmp
mov
nop
in
iret
push
outsb
mov
pslld
push
xchg
pop
lret
sbb
pop
stos
or
dec
scas
push
dec
mov
das
not
sbb
or
stos
jbe
cli
mov
or
jge
roll
fimuls
divl
fidivs
bswap
sub
test
outsl
mov
mov
int
icebp
adc
adc
mov
ret
adc
ret
sbb
sbb
sub
movl
lahf
inc
add
dec
pop
mov
pop
or
cmpsb
stc
push
imul
mov
or
cmp
and
mov
xchg
xor
int
dec
stos
mov
jb
sub
mov
mov
sub
int
daa
push
ljmp
xchg
mov
jbe
daa
jle
or
fistl
arpl
adc
jb,pn
mov
test
stc
imul
fdivrl
rclb
mov
cmpb
les
mov
ret
popa
xor
mov
xchg
inc
push
cli
sbb
mov
cmp
mov
or
xchg
insb
jae
out
jge
sbb
xchg
or
xchg
fs
cmp
test
addr16
pop
jae
test
xor
repz
lods
xchg
adc
cmp
aaa
xchg
or
mov
sbb
lods
jmp
cld
adc
testb
jp
cli
inc
fstl
push
insb
flds
mov
in
aad
xchg
pop
xchg
in
jno
sub
sbb
aas
pop
sbb
leave
jl
movsb
dec
and
loope
push
into
pop
and
lock
sbb
sbbl
push
mov
addr16
sub
out
jg
add
or
js
mov
inc
pop
fmul
test
cmpl
into
mov
pop
xor
mov
xor
fsubrs
lods
mov
stos
out
ds
or
push
imul
xor
roll
pop
mov
pop
mov
pusha
mov
cli
es
lods
jno
popf
lret
in
adc
out
fimull
xlat
fmul
push
int3
mov
ret
lock
inc
lret
xchg
sbb
ljmp
xchg
cltd
out
jae
lods
xorb
mov
inc
jae
inc
iret
inc
lcall
sarb
pop
sub
xor
imul
adc
fstl
fidivrl
insb
cmpsb
in
pop
push
dec
mov
lods
or
in
seta
aad
fldt
xchg
rolb
xorb
movsb
clc
js
in
jg
push
std
jno
movsb
ds
ljmp
arpl
jne
in
outsl
scas
mov
mov
xchg
cmp
dec
scas
es
ja
sbb
pop
in
lret
cmpsl
push
push
testb
cld
icebp
mov
cmpsb
sub
xor
push
test
pop
roll
lea
xor
icebp
movsl
outsl
inc
jmp
inc
cli
cmpsb
test
stos
call
mov
pop
imul
scas
sub
std
stc
cmp
clc
test
cmp
sbb
mov
mov
sbb
adc
ret
xchg
fnstsw
ret
fldcw
dec
rep
out
inc
cmp
lea
or
fstpt
in
jbe
fcmovnbe
jecxz
loopne,pt
push
cmpsl
dec
push
or
dec
je
enter
push
lods
dec
push
daa
mov
jle
sub
mov
mov
iret
dec
into
leave
xchg
inc
xor
mov
int3
lds
xchg
mov
jne
test
lods
aam
mov
lret
jge
cmpsb
or
add
inc
insb
xchg
sbb
push
xor
pushf
mov
inc
and
or
adc
or
jno
pop
sbb
mov
mov
cmp
pop
jmp
mov
and
arpl
xchg
aam
adc
and
in
inc
add
sub
ja
mov
pop
sti
movsb
ljmp
add
xchg
test
pop
cmp
add
test
and
push
cltd
or
jno
sbb
push
popl
push
les
or
sti
push
sbb
insl
and
mov
es
lahf
inc
adc
sbb
pushf
cmc
fldln2
add
inc
test
xchg
xor
push
jo
jmp
jge
cmpsl
jnp
dec
lds
push
cmpsb
dec
mov
adc
xor
mov
xchg
scas
xchg
lock
pop
int3
pusha
stc
sbb
inc
dec
inc
dec
add
jo
sbb
mov
push
xchg
clc
out
lods
pushf
in
lods
jp
push
jb
loopne
sub
test
dec
cmpsl
adc
hlt
adc
int
out
movsb
mov
movsb
ja
popf
or
cmp
mov
jp
scas
stos
mov
mov
or
cmp
test
push
clc
dec
sub
jb
call
dec
cmp
or
test
jmp
push
or
xor
or
mov
insb
notb
test
jg
rcr
add
aam
ds
daa
xchg
lods
testb
ja
addr16
add
out
in
jno
rolb
ret
cwtl
xor
jmp
cs
mov
inc
test
stos
repz
mov
sbb
mov
adc
mov
clc
push
cmc
adc
or
sbb
mov
dec
jb
mov
cmp
jmp
sub
and
lcall
sub
dec
lods
mov
ljmp
lods
iret
pop
fists
sahf
jl
js
xor
mov
mov
pop
dec
ljmp
divb
sub
mov
jecxz
add
push
into
adcl
push
rcrl
int3
jle
lret
out
inc
add
mov
scas
sbb
mov
adc
jne
test
mov
pushl
mov
xchg
sub
dec
fcomip
mov
insl
addr16
inc
addb
insl
sub
fnstsw
lock
insb
std
pop
add
xchg
test
adcb
es
inc
xor
jns
mov
lahf
mov
das
jno
int
stos
sub
mov
inc
loop
xchg
lock
fdivrs
mov
pop
mov
push
gs
push
lods
mov
js
lods
sub
cli
pop
dec
enter
cld
inc
stc
hlt
cmpsb
fildll
xchg
scas
push
cmp
ljmp
push
inc
jnp
in
loopne
xchg
gs
sbb
clc
dec
aas
mov
lock
xchg
mov
xor
das
lods
mov
inc
imul
mov
push
fldt
cmp
pop
cmp
test
jno
mov
jb
fcoms
popf
inc
scas
pusha
rcrl
add
push
ljmp
and
mov
push
cmpsl
push
call
test
repz
inc
in
lret
sub
int
push
imul
mov
jne
out
push
push
insl
call
add
jp
nop
aad
adc
arpl
cmpsb
pop
ja
pop
cmpsb
hlt
dec
hlt
lcall
repnz
xchg
xor
lcall
out
cmp
aam
add
or
jl
movsb
movb
push
rclb
inc
pop
mov
mov
add
mov
xchg
mov
test
push
push
jge
ljmp
cmp
sub
and
enter
push
test
loope
xlat
jmp
xchg
add
leave
lods
test
ja
dec
out
leave
in
mov
xchg
fcomi
test
repnz
add
decl
cmpsl
sbb
cltd
lret
adcl
ss
testb
dec
jae
outsb
mov
xchg
and
shrl
movsl
inc
int3
sbb
call
sbb
out
stos
mov
rcrb
mov
insb
sbb
jb
inc
mov
sub
and
call
aaa
fwait
cmp
inc
scas
in
pop
fbstp
mov
and
lods
mov
sbb
lret
jne
and
mov
cmp
jb
lods
call
fstpl
jne
push
leave
repz
mov
js
xchg
insl
imul
push
enter
in
mov
jle
repz
inc
in
pop
aad
outsb
das
test
jae
adcl
mov
mov
push
insb
add
jne
out
jb
xchg
mov
das
jae
shrd
push
mov
sbb
outsl
xchg
sbb
jnp
fsubp
sahf
nop
shrb
xchg
pop
adc
sbb
call
fs
cwtl
out
push
int
cmpsb
adc
xor
gs
pop
push
or
dec
jae
test
nop
clc
iret
mov
jbe
fistl
xchg
sti
outsl
in
mov
test
add
pop
dec
repz
xadd
xor
jbe,pt
and
sarb
pop
push
inc
xchg
or
mov
xchg
push
jo
or
mov
mov
leave
jle
push
mov
push
cmc
js
popa
jns
repz
sub
push
pushf
ret
int
cld
and
pop
cmp
jp
adcl
addr16
rcll
or
dec
jae
push
pop
mov
dec
pop
jne
jb
xchg
cltd
dec
dec
inc
sbb
mov
into
sbb
stc
out
and
fildll
pop
lcall
popw
jb
lods
loop
pop
and
imul
jne
in
flds
mov
fs
pop
fldl
shlb
jno
lcall
mov
and
cmp
fisubs
sbb
das
enter
enter
int3
adc
pop
insl
es
adc
mov
push
push
pop
and
insb
jl
pop
sahf
pop
xchg
push
jg
les
xor
test
push
mov
imul
outsl
xchg
adc
les
xor
aam
pop
push
sub
mov
popa
jne
inc
lcall
mov
xor
rcll
loop
jmp
fldl
mov
push
lods
pop
lcall
or
mov
dec
jp
jno
xlat
mov
push
push
cmp
cmpsb
lret
arpl
out
ds
mov
pop
sub
sub
adc
pushf
shrb
sub
inc
xor
inc
jne
mov
loopne
xor
mov
and
dec
or
arpl
in
into
mov
sub
sahf
mov
adc
test
adc
mov
or
and
inc
inc
aam
push
test
jmp
popa
sub
out
inc
or
mov
ja
insb
pop
sti
into
add
cmpsb
addr16
arpl
jnp
lock
mov
out
push
jne
push
cs
adc
ja
jp
mov
test
ret
daa
and
mov
stos
dec
cmp
xor
mov
call
add
dec
stos
data16
jo
ljmp
aas
enter
pop
dec
bound
and
mov
inc
xor
in
testb
adc
lods
adc
out
mov
inc
test
into
sahf
sti
sahf
dec
jecxz
adc
adc
incl
mov
sbb
xlat
cmp
adc
mov
xchg
inc
sbb
dec
enter
add
leave
inc
ret
fcomps
xor
and
adc
or
rcrb
xor
punpckhbw
or
cmp
mov
cli
arpl
fsubrs
testb
sti
or
cmpb
push
push
sub
lret
out
shl
pop
hlt
jo
lods
xchg
mov
shll
sbb
int3
mov
out
dec
mov
into
mov
mov
add
subb
mov
stc
inc
and
or
std
mov
push
push
cmp
lods
pop
lahf
rcl
outsb
cmp
flds
xchg
mov
cwtl
sarb
and
pop
into
pop
stos
pop
xor
insb
ror
push
arpl
aas
and
or
repz
mov
cli
ljmp
loope
fsubs
scas
push
and
xchg
or
pop
or
mov
cmp
fcompl
cmpsb
pop
fists
cmp
pop
out
and
xchg
dec
cmp
push
lret
pop
popf
clc
cmp
jne
or
xor
mov
jnp
jle
xor
fldenv
xchg
js
and
or
push
push
mov
fmul
push
jmp
mov
xor
push
dec
subb
fstps
cld
pop
pop
aam
xor
dec
pop
push
pop
xchg
xchg
popa
ljmp
decl
int3
and
pushf
sbb
sbb
out
rcrl
in
pushf
sub
aam
ret
imul
xor
jle
test
lods
mov
mov
ds
aad
pop
aas
test
iret
add
in
inc
xchg
dec
pop
add
mov
mov
sbb
jne
jmp
push
sub
inc
jge
mov
lods
dec
imul
and
jl
outsl
xor
and
jb
stos
adc
push
negb
mov
int3
lea
aad
xor
fsubl
mov
xor
xor
mov
sbb
or
xchg
aas
mov
lahf
fwait
add
ljmp
into
sahf
fwait
xchg
in
fcom
cltd
jmp
inc
pop
sbbb
in
mov
push
nop
sbb
add
lock
mov
mov
fnstcw
je
xor
fnstenv
sbb
into
bsf
je
xor
jl
sbb
repz
dec
loope
xor
stos
pop
lock
add
into
cmpb
and
shl
sbb
pop
mov
jns
call
cld
adc
sbb
lock
cmp
mov
shlb
pop
dec
gs
mov
sbb
jo
add
pop
add
jae
cmc
cmp
addb
sti
lock
jp
inc
ret
jmp
cli
jp
push
sti
scas
cltd
incl
and
sti
sbb
shlb
shl
cmp
lcall
movsl
or
cli
push
xor
idivl
and
cmpsb
out
mov
mov
push
aas
and
loopne
call
imulb
xchg
adc
dec
ret
sub
add
aam
imul
push
mov
adc
rol
xchg
cmp
scas
faddl
loopne
ret
mov
idiv
add
jmp
fcmovne
push
cmc
inc
mov
lea
add
xchg
dec
pop
sahf
xchg
cmpsb
sahf
pop
xor
adc
lods
movsb
movsb
shrb
in
cltd
imul
push
addr16
sub
call
adc
shl
cmpsl
dec
clc
pop
out
adc
pop
xor
das
repz
insl
mov
jle
mov
or
sti
pushf
and
sbbb
dec
or
sbb
inc
outsl
jns
in
mov
add
pop
in
push
push
les
xor
ret
subb
jl
fs
push
mov
xlat
mov
movsb
sahf
mov
jp
push
add
dec
jmp
push
dec
lds
inc
insl
cmc
mov
cmp
and
xchg
adc
enter
adcb
rolb
jg
sub
and
lcall
add
insb
and
popa
call
jmp
jl
orl
jne
hlt
pop
popf
mov
stc
and
loop
popa
lcall
inc
leave
sub
lret
es
iret
jmp
jl
add
sub
out
test
xchg
dec
inc
outsb
sub
lds
test
loope
je
push
in
or
repz
idivb
pop
repz
mov
pop
sbb
fiadds
add
or
add
fiadds
insl
mov
inc
in
outsb
fnstcw
xchg
jmp
sub
mov
sbb
testl
data16
cmp
inc
loope
call
sub
std
push
lods
imul
inc
sub
sbb
push
ss
cmp
lcall
loopne
mov
jg
push
lret
adc
xchg
clc
mov
xor
jo
pop
pop
incb
ror
mov
push
subl
and
push
ds
sub
push
inc
xor
sbb
sbb
jae
mov
arpl
pop
or
loop
adc
aaa
inc
pop
pusha
or
cmp
pop
xchg
addl
pop
out
jle
rolb
imul
addr16
arpl
xchg
aaa
xlat
lahf
loope
or
rcll
imul
mov
test
and
jmp
or
jne
xchg
jecxz
sub
jecxz
add
mov
scas
push
mov
adc
gs
jne
dec
sbb
mov
jae
pop
imul
pusha
stos
stos
xor
or
repnz
into
enter
lcall
ds
fmul
dec
repnz
rcrb
add
or
stos
sub
add
hlt
cld
fistl
push
pop
ss
sbb
jp
dec
push
movsl
xlat
add
repz
insl
or
cltd
add
cs
cmp
add
adc
loop
in
mov
imul
flds
sub
xchg
jb
mov
enter
hlt
cld
push
flds
jle
ja
roll
std
pop
call
dec
cmp
mov
mov
push
leave
clc
loop
fldcw
xor
ss
pop
pop
push
cs
add
cmp
cmp
pop
sbb
scas
add
sub
clc
push
xor
or
adcb
lea
loope
dec
xchg
incb
loopne
push
fs
push
add
imul
push
add
pusha
ret
push
inc
loope
fdivrs
sbb
cli
push
inc
cmpsb
add
std
add
enter
mov
dec
aaa
push
in
sti
mov
jmp
pop
sahf
test
mov
push
pushf
incl
test
fdecstp
pusha
repnz
push
out
jae
xchg
adc
cmc
mov
in
pop
sbb
push
push
mov
imul
clc
jl
inc
push
pop
cli
paddusw
push
movsb
push
sub
xchg
mov
mov
mov
lds
rcl
adc
pop
lret
nop
lock
imul
pop
xchg
mov
sbb
push
push
dec
jge
fdivrl
ss
cli
pop
cmp
xchg
pop
jne
data16
mov
rorl
outsb
pop
scas
adc
and
scas
pop
in
scas
sarl
and
in
repz
and
popl
loop
into
ror
mov
mov
xchg
outsl
and
dec
in
stos
aaa
dec
cmp
jecxz
inc
xchg
jp
or
push
mov
outsb
stc
inc
lds
dec
or
in
mov
push
jnp
pop
add
iret
lock
and
cmp
mov
sub
mov
leave
jmp
push
movsb
lret
or
inc
xor
mov
fwait
pop
pop
sub
out
sbb
and
jnp
mov
cmc
ja
mov
movsb
outsb
in
add
sub
insl
lods
mov
movsb
or
or
mov
xlat
loopne
fists
lds
push
pop
mov
sbb
fldt
dec
sahf
adc
xor
arpl
lock
xor
loopne
and
fwait
xor
loope
and
adc
test
inc
add
cmpsl
inc
jno
fcompl
xchg
stos
lock
jg
aas
xchg
push
roll
sbb
mov
iret
sbb
imul
out
cmp
adc
fisubs
ret
or
push
mov
out
imull
sbb
dec
rolb
fcmove
fisttpll
into
bound
jno
inc
cs
aad
lds
xchg
jb
or
mov
subl
mov
cld
inc
movsb
imul
enter
dec
mov
js
xor
xchg
out
push
or
pushf
mov
sub
imul
sub
sub
scas
lahf
adc
cmp
jl
inc
xchg
dec
shlb
cmpsl
add
lds
jge
mov
adc
sbb
stos
ja
mov
cmp
xchg
out
dec
outsl
movsl
pop
pop
xchg
testb
push
jae
and
scas
arpl
sbb
mov
jp
mov
sti
push
jo
xor
outsl
xchg
repz
loop
shl
cmp
jmp
dec
sbb
pop
and
jmp
mov
sbb
mov
cmp
adc
js
mov
jnp
test
or
mov
call
and
clc
hlt
hlt
dec
outsl
push
pop
jae
ret
cs
push
mov
je
je
fdivrl
dec
xor
inc
cmp
mov
test
outsb
lds
rorb
inc
inc
in
lret
mov
mov
loop
pushf
repz
nop
je
dec
push
outsl
cmp
lds
sub
addr16
xlat
aaa
or
mov
sbb
xor
lea
mov
add
scas
adc
sti
int
add
ret
icebp
stc
popa
cmp
inc
imull
sti
sub
icebp
stos
add
aaa
insb
scas
sub
rolb
add
pop
mov
sub
scas
and
pop
add
sbbb
dec
dec
les
inc
fisubrl
subb
in
outsl
cli
or
fs
jle,pt
insl
xor
jle
and
xor
xchg
out
out
mov
iret
leave
mov
jmp
icebp
rorl
add
bsr
decb
aam
pop
lods
dec
cmp
mov
jle
fidivrl
cmpsl
mov
adc
pop
mov
repnz
popa
add
cmpsl
ret
int3
sti
sbb
cmpsl
adc
cld
xor
jle
xchg
mov
shlb
rcll
xor
hlt
xor
inc
mov
pop
mov
out
cli
push
add
sbb
cmp
andb
pop
mov
sbb
pusha
cmc
incl
sub
test
bound
faddp
int
dec
icebp
push
pusha
test
xchg
xchg
mov
pop
jp
pusha
bound
push
addr16
pop
adc
push
xor
lock
loopne
orl
dec
in
xor
ljmp
ret
mov
shlb
mov
hlt
insb
out
adc
cmc
call
ljmp
mov
dec
movsl
dec
sub
outsl
cmp
push
clc
dec
mov
adc
inc
clc
xchg
pop
repnz
shrb
adc
ret
mov
mov
pop
mov
mov
in
inc
mov
lea
loop
mov
std
lcall
sbb
out
mov
mov
loopne
xchg
sub
push
mov
adc
mov
inc
mov
adc
jne
inc
js,pn
jecxz
imul
lret
and
mov
pop
mov
lods
outsl
negl
xor
fiaddl
loope
sahf
xchg
mov
add
loop
ret
xchg
inc
xchg
xlat
dec
push
xor
push
arpl
fnstenv
rolb
popa
subb
mov
jo
mov
daa
cmp
xchg
jmp
push
mov
cmp
repnz
adc
mov
roll
or
mov
jle
push
into
sbb
movsl
in
testb
psubb
push
mov
pop
jmp
int3
xchg
enter
test
ja
cs
cli
sahf
icebp
pop
and
or
jo
cltd
sbb
mov
push
jae
adc
adc
push
sub
mov
std
mov
cmp
and
int3
ja
mov
push
sub
scas
ljmp
xor
mov
sbb
sbb
insl
pop
adc
jne
pop
push
push
xchg
xchg
mov
jb
fisttpl
outsb
repz
addr16
pop
scas
add
xchg
outsl
add
into
mov
or
sbb
cmp
adc
mov
pop
or
outsl
out
icebp
mov
ret
cltd
push
incl
in
push
mov
js
sbb
or
mov
out
repz
and
test
push
ljmp
adc
je
test
jg
sbb
lods
pop
dec
push
push
mov
stc
add
cwtl
cmp
and
into
or
in
movsb
ret
mov
jns
adc
insb
xchg
jbe
popa
mov
out
xchg
ret
xor
push
pop
shlb
lea
fs
push
mov
pop
adc
negl
cltd
mov
cli
ja
repnz
cmp
push
es
or
popa
jge
inc
sbb
cmp
mov
mov
repnz
notb
cmpsl
mov
adc
fnstsw
loopne
or
mov
xorl
jno
adc
mov
jecxz
xchg
inc
cmp
and
push
in
push
fisttpll
cwtl
hlt
mov
sahf
mov
sti
and
stos
cmp
fisubs
jnp
cld
mov
jb
iret
or
pop
outsb
pusha
insl
mov
dec
dec
push
cmp
ds
mov
mov
push
pop
pushf
xchg
jmp
pop
cmc
xchg
push
jns
mov
mov
pop
nop
popf
cwtl
pop
jmp
inc
mov
int
pmuludq
xchg
xor
test
pop
std
pop
push
mov
pop
mov
dec
loop
push
mov
pop
ret
jns
dec
mov
and
loop
lahf
repz
cli
ficomps
and
add
mov
xchg
or
mov
mov
ja
cmc
jecxz
sub
xchg
add
lcall
call
hlt
and
mov
popf
popf
lds
pop
mov
jno
pop
loop
into
arpl
lods
stos
mov
test
pop
stc
or
std
mov
mov
push
jae
jp
mov
cmpsb
aas
test
lock
fs
stc
add
rorl
add
rolb
cs
xchg
or
mov
cli
cli
cli
mov
jp
add
fwait
inc
adc
int3
lock
xchg
mov
cltd
sarl
imul
sub
jne
lahf
mov
jnp
movb
shrb
jecxz
mov
repnz
xchg
pop
outsl
mov
push
call
es
lds
and
shrb
jge
fdivs
mov
dec
dec
pop
fwait
pop
js
jle
or
adc
push
test
fldcw
dec
lret
xor
sub
push
sahf
outsl
rorb
dec
imul
sahf
mov
addl
push
rcrb
dec
push
cwtl
fisubrl
mov
shrl
and
dec
test
and
ret
popl
xchg
in
adc
jmp
add
lea
call
xchg
sbbl
mov
aam
rorl
xchg
cmp
fldl
cmc
xchg
aas
outsl
insl
scas
test
jle
aaa
je
cltd
adc
adc
shll
jno
sub
std
ljmp
sub
nop
cmpsl
mov
inc
jmp
iret
cmc
sbb
shrl
lods
jg
inc
bnd
insb
loop
or
daa
jnp
test
arpl
pop
imull
pop
xor
xor
addr16
push
cmp
pop
lahf
fildl
jp
sub
jg
cld
mov
push
cmpb
or
cmpb
js
and
popf
lret
repz
lret
and
pop
aam
xchg
mov
cmp
add
pushl
mov
sub
js
fisubrl
push
subl
cmpsb
fwait
jle
xor
jns
orb
push
add
sahf
jg
inc
mov
mov
outsl
lock
add
dec
dec
mov
fidivrl
lcall
or
sbb
xor
adc
sbb
dec
push
daa
stc
addr16
ficompl
mov
popa
inc
shlb
stos
hlt
jb
pop
or
mov
ret
pushl
lcall
popf
fwait
jnp
fdivs
jl
shlb
popf
outsl
data16
cli
iret
fisubs
jecxz
ljmp
push
or
test
repnz
ret
sub
mov
es
loop
and
loope
jmp
sub
xor
iret
fs
pop
je
stos
das
dec
sbb
leave
push
adc
jp
push
outsb
xchg
mov
cwtl
rol
shll
sub
nop
jle
arpl
clc
int3
mov
pop
or
mov
sahf
inc
and
sub
jg
repz
pop
cmp
sbb
and
adc
in
mov
sbb
into
mov
das
ljmp
movsb
fpatan
out
sub
jg
test
or
cmp
push
push
jg
mov
adc
ret
sarl
jne
jmp
xchg
loope
pop
add
sbb
xchg
cmp
int
test
jne
mov
fmuls
pop
sbb
icebp
movsl
pop
inc
push
ds
push
cwtl
xchg
inc
add
jae
lret
sbb
mov
cld
inc
mov
or
notl
adc
dec
sub
arpl
mov
xor
mov
jmp
pop
cmpsb
mov
push
mov
mov
add
sbb
arpl
orl
mov
dec
stos
rcrb
adc
sbb
arpl
push
idivl
mov
or
into
xchg
cmp
in
sbb
hlt
adc
pushf
ja
repnz
dec
cmpsl
test
arpl
inc
into
repnz
fs
rcll
loop
addr16
icebp
movsb
movsb
dec
xlat
shr
mov
and
jno
addr16
mov
test
inc
in
push
adc
inc
popf
sti
and
pop
and
sbb
sbb
mov
jo
pop
lret
cmpsl
push
in
or
int3
sbb
mov
pusha
in
rclb
push
mov
rcrl
cs
loopne
jle
hlt
or
out
or
lcall
ficomps
daa
stos
insb
call
aaa
mov
mov
xlat
and
mov
xor
mov
add
or
inc
inc
jno
shlb
push
sub
jge
cmc
ljmp
pop
aam
inc
cmp
jp
jl
push
jo
inc
xor
xor
xchg
jg
daa
das
add
nop
jo
lahf
addl
adc
popa
insl
pop
ror
sbb
loopne
jo
mov
movb
inc
push
rcr
pop
cs
mov
test
bound
icebp
clc
fnsave
outsb
ss
pop
add
sarb
push
in
mov
jl
jp
mov
mov
mov
adc
aaa
dec
jle
rorb
sub
dec
fwait
out
sbb
call
pop
push
adc
add
fdivrl
add
je
pop
xlat
rcrb
mov
mov
jnp
loope
in
js
cmp
ss
ljmp
clc
cwtl
sbb
add
inc
mov
imul
mov
loopne
int
or
jecxz
xchg
inc
test
ja
out
adc
dec
or
push
and
sahf
aaa
movsl
pop
cmc
xor
test
cwtl
pop
mov
push
fwait
rcrl
and
push
cmpsl
stc
cmpsb
sbb
pop
and
sahf
dec
mov
orb
sub
rorl
mov
mov
adc
mov
or
mov
std
jne
inc
mov
into
mov
push
mov
jp
enter
push
mov
adc
fsts
lcall
test
sub
jns
add
lahf
mov
aam
pop
in
add
push
push
cmp
sub
in
xchg
subl
xor
mov
roll
push
lock
pop
imul
xor
les
dec
into
cmpb
inc
cli
out
cltd
and
loope
mov
pop
out
pop
mov
stc
dec
mov
mov
into
out
testl
std
imul
sbb
les
mov
mov
xor
les
lods
or
jb
les
and
fdivl
adc
testl
pusha
xchg
add
xchg
pusha
dec
mov
sbb
sbb
inc
mov
sbb
das
fcmovnb
jb
mov
inc
cmpsl
xlat
btc
mov
ja
pop
inc
inc
jb
test
je
inc
frstor
lods
dec
subl
push
jmp
jmp
clc
mov
addr16
movsl
cmpsl
mov
adc
dec
push
stos
xchg
push
fldz
outsw
insb
mov
inc
dec
clc
xor
jmp
sbb
adc
dec
aaa
push
arpl
pop
jo
and
lods
dec
mov
rclb
or
adc
dec
in
lcall
mov
add
fiadds
or
sbb
sub
add
lret
lods
fisttpl
pop
inc
inc
enter
jno
adc
add
cs
and
mov
lods
xchg
ljmp
loop
pusha
lea
lods
lds
cmp
mov
jecxz
clc
dec
adc
jmp
xor
push
loop
test
jmp
fsts
jg
in
cmpl
mov
movsb
pop
rorl
adc
add
mov
lods
hlt
scas
adc
ljmp
outsb
jle
mov
xor
inc
ljmp
test
ror
push
cs
xchg
scas
cwtl
or
pop
sub
insl
inc
in
in
sbb
mov
fs
lret
lods
imul
sub
jno
stc
in
shrl
mov
mov
cmp
int3
jns
ds
ficoml
inc
or
inc
add
and
loope
or
test
cwtl
outsl
aad
jecxz
popa
sub
fs
loopne
cmp
addr16
mov
clc
adc
lret
and
lahf
arpl
mov
lcall
out
stos
imul
ds
mov
add
sbb
aam
test
or
xor
ja
mov
push
push
cltd
inc
pop
in
add
lds
outsl
pop
shrl
imul
out
inc
and
out
aam
pop
cmpl
outsb
faddp
mov
push
push
mov
imul
dec
push
sbb
xchg
repnz
xor
adc
or
fs
adc
adc
test
add
test
mov
fldcw
xorl
movsb
add
in
sub
sbb
cs
loop
scas
inc
sbb
ret
das
push
xchg
pop
subb
mov
in
andl
add
jae
xor
jbe
mov
lods
pop
lock
enter
stos
stos
sarb
aas
cmp
sbb
inc
cs
mov
jne
cld
shll
pop
andb
xlat
outsb
out
fcoms
into
rcrl
mov
sub
jne
pop
imull
push
jae
mov
lret
mov
mov
mov
dec
and
cmp
adc
ja
clc
mov
and
sbb
sub
push
lea
dec
jne
inc
sbbl
cmp
clc
insb
test
scas
xchg
test
call
lods
push
shrl
lds
xchg
or
add
fcoms
lds
cmp
std
hlt
outsb
mov
inc
sbb
das
loop
cmc
jmp
sub
out
and
scas
stc
stos
sub
inc
mov
or
jl
dec
dec
pop
test
repz
sub
addb
jmp
mov
mov
jmp
jge
cmpsl
lea
sahf
mov
xchg
scas
es
xor
aaa
es
call
xchg
cmp
adcb
sub
lods
dec
mov
xor
pop
out
and
or
dec
nop
and
jmp
repz
dec
lea
pop
imul
cmp
xchg
out
stos
xchg
add
je
push
movsl
inc
sbb
lahf
sub
lds
sahf
pop
lcall
sbb
aam
mov
pop
les
jp
repz
jecxz
ret
inc
dec
std
and
gs
inc
pop
xor
imul
loope
sbb
adc
cmc
adc
push
frstor
repz
or
out
movsl
cwtl
xorl
int
inc
test
mov
bound
stc
in
arpl
push
sub
xchg
add
fwait
mov
pop
xchg
sub
push
aaa
jno
jle
stc
sbb
lods
add
dec
je
mov
xchg
jns
push
lret
adcb
pop
std
rol
sbb
push
std
mov
mov
pop
fnstenv
dec
jbe
sbb
ret
mov
mov
push
mul
inc
mov
xchg
mov
mov
lahf
in
fisttpll
test
mov
fidivrl
xchg
inc
sub
fsubrl
xchg
mov
jbe
in
pop
mov
sahf
ljmp
jns
sbb
mov
ja
mov
fadds
mov
orl
fsub
pop
push
or
push
lea
into
mov
jno
jmp
dec
sub
and
sbb
fwait
pushf
inc
inc
push
ret
test
push
jb
jg
cmpl
sbb
insb
xchg
cmp
push
aaa
mov
aas
rcll
jne
ljmp
aas
in
inc
xor
out
sub
xchg
int3
inc
or
add
mov
or
test
cwtl
mov
shl
cmp
clc
lock
inc
sarb
outsb
repnz
cld
std
pushl
inc
mov
sarb
repnz
or
or
xor
imul
ret
insb
fmul
aad
mov
loope
sbb
lock
inc
decl
test
scas
xchg
movsl
je
stc
sub
lods
inc
inc
roll
sbb
mov
testl
push
test
shll
lret
addr16
mov
push
loope
test
lock
mov
or
hlt
adc
icebp
mov
cwtl
decl
jnp
insl
and
movsb
push
mov
in
into
mov
sbb
rorl
jne
mov
nop
inc
bound
lods
mov
inc
hlt
inc
fbld
movsl
mov
mov
mov
fisubl
into
cwtl
in
xchg
test
adcb
stos
xorl
adc
stos
nop
jmp
fwait
sbb
leave
std
push
jnp
mov
iret
test
dec
dec
hlt
xor
and
or
ss
cmp
out
lea
add
mov
push
or
push
and
jno
add
xchg
cmp
xor
sbb
neg
icebp
pop
stos
mov
imul
xchg
sbb
shll
loope
adc
fidivrs
fsts
test
push
cmp
in
inc
loope
fnsave
addb
add
sub
loope
mov
inc
push
push
aam
lret
pusha
test
dec
stc
or
cmp
jo
adc
notl
stos
xor
vmaxps
into
int
pushf
mov
scas
cmp
fstpt
sbb
aas
jle
inc
pushf
iret
jge
mov
or
aam
inc
adc
jae
test
pop
sub
lea
int
std
xor
and
mov
fadds
add
scas
mov
jle
std
jbe
and
add
cmp
cmpsl
mov
int3
and
push
jmp
add
and
cli
fdivl
cmc
push
add
mov
aas
mov
icebp
loopne
loop
sbb
repz
adc
dec
xchg
xchg
fidivl
xchg
scas
cmp
leave
sbb
in
icebp
cld
xchg
mov
ss
pop
in
jb
pop
add
cmc
hlt
adc
ret
push
jmp
mov
push
mov
xchg
clc
mov
adc
mov
scas
pop
add
push
cltd
int3
and
popa
sub
pop
push
jnp
or
inc
sbb
lcall
pop
or
pop
pop
lahf
mulw
push
mov
or
fcomi
mov
in
or
sub
xchg
outsl
jnp
out
jl
xchg
sub
xor
fsubl
dec
push
pop
test
mov
dec
cmp
int3
ret
fs
inc
enter
pop
ds
fadd
push
adc
mov
jge
mov
dec
add
jns
adc
cmc
fmuls
push
sbb
mov
adc
call
das
ss
xchg
jle
jb
adc
mov
out
xor
sub
cwtl
shl
mov
sub
or
jp
jl
dec
int3
ljmp
mov
pop
cmpsb
pop
or
std
push
repz
sbb
mov
adc
push
xchg
mov
movb
sub
outsl
aad
dec
dec
cld
jge
iret
les
mov
jbe
sbb
gs
sub
stc
popf
mov
jecxz
shrb
xchg
imul
add
arpl
jno
rcrb
jb
cmpsb
push
mov
cmp
ret
fisubrl
insl
rorl
add
pop
sub
and
jae
and
aaa
scas
clc
outsl
xor
cltd
or
cmp
xor
jge
movsl
xor
or
jl
cs
ficoml
jb
cltd
pop
adc
lds
jb
mov
jl
out
inc
out
fwait
pop
adc
xchg
lods
xlat
xor
cmpsl
call
lock
test
push
cwtl
xchg
mov
sbb
cmp
pop
enter
pushf
adc
xchg
ja
sbb
xor
and
inc
mov
add
xchg
xor
dec
or
jmp
in
mov
ljmp
pop
push
sub
mov
cli
and
repz
xchg
add
aam
adc
sbb
pop
fwait
push
sub
mov
dec
fwait
cli
outsb
xchg
rol
jecxz
repz
in
pushf
jno
mov
insb
pop
xchg
ja
inc
sbb
xchg
dec
rorb
aaa
test
xchg
cld
out
jmp
ret
scas
imul
jecxz
push
adc
mov
mov
dec
lcall
cmp
fiaddl
cs
cmp
stos
ds
cs
and
xchg
xor
jns
push
sub
sub
iret
cmp
jno
scas
jne
aaa
cmc
in
test
sub
sbb
in
and
jge
cltd
or
sti
lcall
lret
adc
mov
mov
or
pop
fmul
cmpsl
test
xchg
lret
pop
jmp
lock
xchg
inc
je
inc
dec
lock
sub
test
out
sub
mov
les
orb
mov
cmp
sbb
push
push
sbb
pushf
cmp
daa
mov
in
testb
mov
and
addr16
jmp
cmpsb
xchg
cmpl
mov
iret
test
jne
jmp
outsb
mov
fildl
fs
cmp
ret
vcvtpd2dqy
mov
jne
jge
dec
jp
movsb
in
out
gs
in
push
mov
jnp
bound
ljmp
rorl
in
xor
bound
ror
dec
cli
jb
jecxz
fdivr
out
sub
cmp
pop
out
push
subb
call
mov
aas
jbe
orb
add
push
cmp
sub
cmp
mov
dec
sbb
sahf
dec
mov
or
mov
lods
sar
jns
movsl
repnz
adc
dec
fcos
pop
add
dec
push
out
adc
test
jle
iret
or
lock
sbb
sbb
insb
rorb
clc
sbb
xor
movsl
sbb
jge
push
and
mov
push
mov
out
pop
jp
sub
push
push
cmpsl
push
push
ljmp
mov
jno
xchg
mov
imul
and
or
or
imul
mov
mov
scas
aam
outsl
mov
data16
xor
mov
fcoms
push
and
mov
cmpsb
scas
add
mov
xchg
shrl
mov
pop
lret
xchg
shlb
sbb
and
fxch
aam
mov
pop
pop
lds
fsubs
sarb
lcall
mov
pop
push
pop
imul
xor
test
test
nopl
mov
add
push
sub
aam
sbb
fcoms
iret
ret
in
and
cmpsb
pop
insl
lret
mov
sub
test
daa
and
inc
dec
mul
in
aam
cmp
dec
out
dec
jecxz
push
in
jmp
fcomi
pop
int3
lahf
and
or
notb
dec
and
popf
loope
or
pop
inc
testb
push
adc
rcll
and
jmp
test
jecxz
push
inc
xchg
addr16
inc
add
rcl
scas
out
cmp
mov
lcall
sahf
add
xor
jecxz
cmp
mov
roll
call
jge
jl
sbb
add
stos
out
rorb
insb
dec
daa
push
scas
test
cltd
fs
leave
inc
cmpb
xchg
pop
fimull
and
cmp
inc
inc
cli
repnz
push
pop
clc
loopne
lock
sub
lret
and
pop
jg
adc
dec
bound
fldl
cli
shlb
cmp
vshufps
jmp
lret
shll
out
stos
fstpl
and
pop
fucomip
dec
xchg
in
mov
shll
mov
mov
and
lahf
pop
mov
and
fcoml
sbb
incl
xor
sub
xchg
inc
pop
mov
push
cli
test
pop
mov
mov
std
push
cld
imul
adc
push
je
int
push
pop
scas
jno
lret
sbb
aaa
sbb
push
inc
das
jne
mov
mov
inc
call
push
test
push
push
mov
jae
or
xor
cli
mov
mov
jo
ss
nopl
stos
mov
jne
pop
lahf
and
or
daa
int3
inc
imul
xchg
dec
shll
push
cltd
out
loop
daa
ret
adc
jl
imul
popf
out
mov
or
shll
cmp
mov
xchg
ficoms
push
sbb
add
vsqrtsd
mov
test
ret
jle
push
ss
lcall
pop
xchg
cmpsb
xorb
or
pop
or
out
cmp
push
ret
outsl
mov
push
add
add
mov
fucomi
enter
dec
daa
je
dec
fwait
mov
cmp
cld
mov
cmp
fisubrs
mov
testb
and
jb
mov
call
xor
aam
arpl
std
or
sbb
leave
cmpsb
cmpsb
lock
sub
leave
xchg
mov
adc
sub
add
sbb
test
ret
loopne
push
push
movsl
sbbb
outsl
dec
loopne
notl
dec
fcoml
jmp
mov
and
loopne
xchg
push
cmpb
mov
aam
test
push
jge
pop
flds
sbb
xchg
out
imul
dec
jle
dec
xor
inc
pop
cmp
sub
pop
push
aad
test
cld
inc
cmp
out
push
mov
mov
fisttpl
xlat
icebp
cli
sbb
fldpi
lret
ret
out
in
sbb
stc
test
lahf
xchg
mov
jp
jp
fdiv
jo
insl
lea
ret
test
and
es
dec
push
bound
add
icebp
loopne
inc
mov
push
mov
add
lret
push
leave
into
xchg
addr16
push
cld
int
mov
pushf
mov
sbb
mov
lods
arpl
gs
sbb
jecxz
dec
mov
mov
out
mov
mov
lahf
fiadds
scas
nop
int3
sub
mov
jmp
shll
xor
mov
mov
stos
push
je
leave
mov
pusha
mov
out
dec
scas
fadd
xlat
pop
sub
xchg
ret
cmpsl
mov
aad
xchg
shlb
mov
into
out
jg
adc
jg
push
fwait
push
aaa
ja
in
push
pop
inc
dec
out
pop
imul
lods
inc
mov
mov
push
push
lock
movsb
mov
fwait
cmc
cmp
mov
fcompl
fisubl
movsb
int3
outsl
gs
xor
cmp
pushf
lds
insb
mov
push
adc
xchg
inc
mov
jnp
daa
adc
mov
add
lret
aaa
in
xlat
sub
push
out
mov
pop
jnp
rcrl
cli
loope
mov
add
aad
mov
push
aas
jb
lret
std
sbb
add
aam
jmp
rol
pop
mov
subl
mov
repz
mov
rorb
movsl
ret
lods
jae,pn
xchg
sub
jge
in
inc
dec
jae
rcrb
pop
jecxz
je
push
and
dec
das
push
or
test
outsb
mov
jge
or
pop
mov
ret
sbb
cli
push
out
add
dec
mov
mov
das
outsb
xor
imul
gs
cmc
into
sbb
cmp
mov
daa
sbb
mov
jns
insb
mov
mov
add
loop
push
scas
jbe
sbb
je
mov
mov
adc
push
iret
loopne
cmp
add
test
inc
psadbw
popa
xchg
jb
push
mov
lret
mov
or
mov
loopne
dec
pop
es
mov
ja
test
add
push
data16
push
daa
popa
xchg
xor
lock
out
call
push
and
in
cli
in
pop
lods
lea
arpl
in
xlat
sub
add
mov
push
dec
out
xchg
repz
jno
jb
dec
adc
pop
jae
outsb
and
mov
and
lds
loopne
xchg
sub
add
push
and
out
outsb
out
and
sbb
insl
jno
cmp
mov
xor
xchg
push
filds
dec
testl
mov
mov
es
and
pop
dec
std
fsubl
inc
pop
pop
mov
iret
pop
dec
jle
adc
cmp
rcl
or
mov
popf
dec
stos
sbb
cmpsb
add
jbe
push
sub
test
mov
mov
pop
dec
cmp
insl
add
cmpsl
stos
and
popf
pxor
out
rclb
add
add
lock
xor
mov
mov
adc
cwtl
xor
mov
mov
pop
int
xchg
adc
ficoms
push
fidivl
mov
push
cmc
in
dec
sub
data16
fcmovbe
push
ds
inc
lock
fistl
pop
out
movsb
add
pop
nop
fisttps
arpl
cmpsb
mov
xor
aas
jp
pop
dec
mov
sub
lods
mov
add
mov
dec
dec
mov
imul
dec
mov
cmp
push
in
int3
ljmp
mov
es
idiv
data16
lret
scas
adc
adc
ja
and
fcoms
leave
out
sub
mov
aaa
sbb
lock
jae
jne
xor
not
mov
lahf
popa
sub
push
push
jno
repz
jmp
lods
mov
mov
push
aaa
sub
les
dec
or
pop
push
cmp
cmp
dec
cmp
rcrb
aas
cwtd
je
adc
loop
fstpt
cmp
or
test
cmp
mov
mov
std
pop
inc
incl
dec
cmpl
je
sub
jbe
jno
shlb
dec
inc
sub
sub
loope
pop
jmp
mov
cli
fwait
pusha
and
dec
or
rcrb
loope
mov
xlat
pop
or
add
das
mov
dec
clc
cltd
addr16
loope
cmp
xchg
mov
mov
in
jo
cmp
stos
cmp
jb
cwtl
push
cmp
xchg
xchg
inc
test
sub
fldcw
outsl
and
adc
xor
dec
inc
sbb
xchg
mov
scas
movsb
mov
pop
adc
xchg
mov
xor
loopne
lods
sbb
dec
xchg
push
je,pt
loopne
push
mov
dec
mov
add
pop
dec
sti
pop
ds
pop
daa
lods
jb
es
scas
lret
cltd
aad
push
sbb
mov
mul
in
and
cmp
dec
lahf
popf
xchg
push
pop
lods
popf
shlb
xchg
xchg
or
add
inc
jecxz
xchg
xor
xorl
mov
add
dec
mov
or
mov
cs
mov
adc
mov
mov
mov
test
push
inc
out
sbb
jns
in
mov
mov
inc
dec
pop
dec
sbb
and
mov
jle
or
sub
dec
pop
cmp
popa
pop
xchg
mov
jae
insb
fisttps
inc
mov
icebp
or
and
jb
pop
call
repz
cmpl
cmp
xchg
mov
or
push
jb
and
in
aam
dec
adc
insb
add
inc
lcall
add
in
scas
stos
ret
xchg
loopne
mov
into
mov
data16
rcl
mov
sbb
std
ss
adc
dec
outsl
sbb
sbb
in
cwtl
into
test
icebp
js
stos
inc
dec
push
mov
sbb
cmp
pop
into
cmp
js
and
outsl
jnp
mov
orl
mov
push
jb
stc
ljmp
fwait
xlat
pop
iret
xor
add
pushf
movsb
subl
sub
xor
movsb
mull
outsl
lret
inc
arpl
pop
popa
iret
add
cmp
push
xlat
in
lock
test
stos
jnp
popa
subl
ljmp
out
xchg
add
jl
int3
fsubrs
inc
sbb
insl
push
adc
lret
dec
ljmp
imull
adc
xchg
xchg
popl
imul
aad
mov
out
iret
inc
inc
dec
outsb
shll
test
or
or
insl
or
pop
fmul
out
sub
fnstenv
cmp
pop
ss
cmp
dec
or
sub
stos
fcmovnu
xor
in
scas
jge
orl
push
jp
aam
push
enter
nop
int3
es
repz
arpl
punpcklwd
mov
push
ljmp
xorb
lahf
scas
mov
fidivrs
xor
mov
xchg
mov
pop
out
xchg
mov
arpl
xchg
in
incl
xchg
jl
leave
scas
negb
mov
pusha
push
or
in
arpl
call
adc
in
aaa
sub
insb
cmp
stos
jp
in
divl
ret
xor
fucomip
ds
in
mov
ja
loopne
and
xchg
cmpsb
aas
jbe
add
push
movsb
jno
push
push
mov
movl
loop
mov
jmp
or
xchg
xchg
or
push
add
add
and
xchg
fstps
and
jl
mov
leave
dec
neg
dec
rol
pop
jns
ljmp
push
loop
push
add
clc
sub
int
fldenv
sub
arpl
push
out
mov
ljmp
add
mov
sub
and
xchg
adc
add
cmp
stos
rcl
pop
roll
gs
sbb
mov
mov
test
sbb
nop
or
cwtl
adc
pop
mov
mov
adc
and
sbb
xor
fwait
add
enter
icebp
adc
nop
dec
mov
inc
fidivrl
scas
mov
loop,pn
sbb
fdivrs
roll
scas
in
push
popa
or
in
xor
cmpsb
mov
lods
jbe
shl
incb
icebp
rorl
iret
daa
pop
sub
repnz
negb
or
mov
adc
in
pop
mov
sbb
mov
das
sti
xlat
pop
aaa
jae
adc
or
test
add
mov
push
pushf
jle
movsl
or
repnz
out
icebp
lwpval
mov
push
scas
jmp
lea
lea
jmp
sub
mov
cwtl
in
sti
nop
int
mov
mov
mov
and
lods
shlb
lods
xchg
push
adc
add
adc
fimuls
mov
mov
pop
xor
dec
dec
xchg
sarb
movsb
lret
sbb
push
imul
xchg
pop
sub
daa
testl
push
daa
mov
ja
pop
xchg
push
ds
and
push
push
das
sbb
mov
rol
js
jno
jp
das
loopne
xlat
nop
cwtl
dec
dec
cmpsl
lea
cmp
mov
inc
cmp
inc
push
frstor
es
cmp
fidivrs
lock
mov
or
xor
xchg
rcll
inc
xor
int3
mov
lods
leave
je
and
dec
dec
xor
cmpb
pushf
rcl
cmpsl
adc
stos
lock
add
dec
rcll
fwait
leave
jno
xor
mov
push
cmpl
loopne
pop
and
inc
mov
decl
inc
fdivrl
inc
out
jae
int3
pop
call
jns
frstor
inc
movsl
je
lea
sub
cwtl
pop
repnz
stos
mov
and
jle
icebp
fdivr
jl
fs
xor
out
outsl
movsl
jnp
aaa
pushf
dec
mov
icebp
dec
jp
addl
nop
lds
notl
addr16
std
mov
lods
cmp
fs
add
cmpsb
rcrl
xor
add
outsb
jnp
push
hlt
sub
mov
push
adcl
lock
fnstcw
pop
push
rcrl
es
push
push
mov
pop
and
adc
jl
and
ljmp
jg
ret
insl
pusha
dec
mov
cmpsb
cs
insl
xchg
xchg
sub
mov
sub
mov
mov
cltd
inc
in
flds
stos
pop
or
popf
nop
sahf
mov
mov
out
mov
adc
pop
lock
mov
inc
and
mov
or
mov
mov
jne
stos
das
hlt
ret
rorb
cli
cwtl
nop
andl
scas
sbb
lret
shlb
cmp
cmc
inc
jge
jo
in
xchg
pop
out
loope
sub
push
int
movsb
test
push
sbb
inc
pop
popf
push
add
inc
lods
cmp
adc
imul
adc
lea
push
mov
dec
lods
add
std
push
pop
inc
cmpsb
inc
cmp
shlb
pop
call
adcl
jne
add
jp
inc
add
cltd
mov
fldcw
leave
xchg
stc
cmc
incl
push
ljmp
dec
nop
lret
jl
dec
repz
loop
inc
adc
or
mov
cmpsl
sub
cmpsb
leave
sub
das
sti
out
pop
adc
in
enter
pushf
aam
loop
ret
push
sub
orl
dec
pop
mov
push
or
jo
adc
dec
adc
xchg
jne
cmpsl
gs
cmp
loope
cmp
ds
sbb
fadds
mov
insl
jecxz
pop
sbbl
les
adc
fnstenv
push
in
rclb
adc
ja
add
stc
pop
mov
and
lods
xchg
dec
xchg
cmc
aad
adc
add
cmp
jmp
mov
aaa
sbb
jle
scas
dec
or
arpl
and
push
ret
orb
cmpsl
and
or
sbb
push
adc
pusha
test
sub
jo
std
mov
xor
inc
mov
fimull
fisubs
nop
idivb
mov
xor
lret
add
adc
mov
push
mov
popf
shll
or
shlb
jno
nop
rolb
jne
movsl
loope
jbe
lea
mov
fldenv
push
jp
sarl
imul
sub
ja
or
push
adc
mov
xchg
shlb
mov
add
repnz
clc
shrl
hlt
out
xor
lret
push
or
rorl
add
mov
sarb
movsb
lcall
jl
lcall
xor
ss
push
les
inc
cmc
fsubs
outsl
jl
test
outsl
add
sbb
or
test
cmpsl
pop
mov
pop
xor
or
cmp
roll
arpl
in
ret
mov
cli
xor
jbe
dec
adc
xchg
bound
adc
mov
mov
fisttpl
mov
popa
cwtl
fcmovu
in
popa
mov
dec
xor
fidivrs
es
mov
das
andl
in
xchg
add
push
push
popa
add
or
mov
xor
fdiv
loopne
jnp
xchg
xchg
xchg
mov
xchg
ljmp
dec
and
sub
jb
shlb
ret
jne
mov
testb
push
push
push
fs
pop
push
int3
or
mov
std
out
dec
xchg
movsb
mov
jmp
adc
mov
dec
arpl
out
fisttps
xchg
push
fbld
cmp
fnstcw
pop
std
pop
scas
popa
push
mov
dec
pop
dec
sub
outsb
xor
pop
mov
pop
repnz
arpl
jns
lods
lock
call
je
cltd
daa
xor
adcb
loop
mov
add
stos
add
loope,pn
mov
and
dec
movsb
xor
sbb
cmp
ss
jge
daa
jne
dec
shrb
and
enter
js
subb
out
sub
xchg
leave
lahf
cmp
jmp
jmp
add
fdivs
leave
adcb
adc
fisttpll
xchg
out
cmp
bsr
inc
xor
sub
pop
sub
dec
loop
adc
insb
out
clc
and
cltd
mov
insl
or
pop
imul
scas
xor
jle
xchg
mov
idivb
cmpsl
testl
lock
mov
push
jo
test
cmp
repz
and
xchg
mov
mov
out
jg
jg
repnz
bswap
loop
sub
adc
pop
out
rolb
cwtl
jb
iret
daa
pop
aas
filds
cs
mov
and
sbb
iret
aas
repnz
mov
cmp
cli
dec
mov
or
cs
inc
and
arpl
jae
mov
mov
stc
mov
hlt
pop
mov
outsb
xchg
sahf
les
or
je
std
fisubrl
mov
xchg
push
sub
pop
shlb
add
sub
stos
cmpsl
es
and
sub
push
aas
fsts
lcall
enter
cwtl
imul
fsubr
int
cmp
cmp
into
pop
mov
movsl
sub
faddl
popa
cs
sbb
cli
push
pushf
jb
js
es
pop
push
fisubs
arpl
test
das
aas
mov
test
adc
sub
dec
or
adc
test
repz
outsl
jbe
inc
and
sbb
add
and
aaa
je
cmp
cmpl
fs
mov
sbb
std
mov
mov
orl
xchg
lods
add
js
mov
out
fbstp
push
mov
icebp
outsb
fdivp
test
insl
push
cmpb
inc
out
pop
cwtl
clc
jbe
lret
cmp
xor
sbb
mov
fnstcw
push
sub
cmp
aam
imul
inc
mov
icebp
addl
ljmp
aaa
inc
into
orl
dec
jb
jbe
mov
imul
or
mov
jbe
jo
dec
jl
mov
add
stos
subl
fstps
push
mov
mov
mov
jno
mov
sbb
in
movsb
mov
pop
xchg
mov
icebp
adc
jo
xchg
add
stos
mov
aas
popf
inc
adc
fsubr
int
ret
data16
in
sub
jmp
xchg
std
or
loopne
dec
jne
std
mov
add
fs
add
arpl
and
iret
cmc
xchg
lods
jo
rcrl
lods
jl
inc
test
mov
cmpsl
pop
fsubrl
mov
mov
sbb
jns
out
or
dec
rol
mov
push
sti
test
xchg
jl
test
das
cmp
iret
xchg
add
xor
adc
mov
std
push
add
insl
aam
scas
adc
lock
push
shlb
adc
les
and
in
mov
inc
stos
fwait
rcrb
dec
rcll
jp
xchg
jge
mov
cwtl
insl
xchg
pop
fidivrl
sbb
icebp
push
mov
or
add
outsb
mov
dec
push
mov
es
or
jl
or
inc
ret
ja
sbb
cs
jle
push
fcoml
and
push
cli
push
clc
xchg
icebp
sbb
lea
into
lcall
test
repz
mov
loope
and
push
out
movsb
cltd
loop
and
sti
pushf
out
add
adc
mov
mov
sub
leave
adcb
call
push
aam
add
push
dec
movsb
shlb
lds
stos
orl
sbb
rol
jb
hlt
add
rcrl
xor
cli
aas
pop
or
arpl
loope
mov
ja
test
imul
push
cmc
cmp
int
fcmovnu
inc
pop
mov
andl
ja
mov
testb
movsb
xchg
lds
stos
jecxz
xchg
out
push
xchg
xchg
push
mov
lahf
or
inc
sub
pop
mov
inc
test
js
push
cwtl
push
pop
imul
add
cmp
mov
and
push
movsb
sub
mov
sbb
mov
adc
xor
mov
pop
push
xor
jb
pop
fistps
and
cld
jne
mov
mov
push
inc
pop
in
mov
xor
bound
sbb
inc
adc
ss
mov
pop
xchg
dec
cmp
mov
stos
xor
lret
in
in
pop
sub
mov
negl
pop
push
add
push
push
push
mov
imul
bswap
mov
iret
jne
sub
ret
or
scas
push
cmp
insl
dec
pop
sub
repz
and
push
cmc
jb
fs
cwtl
aam
sbb
and
lahf
ds
jmp
loop
in
xor
jbe
sbb
scas
xor
dec
jecxz
mov
leave
or
mov
add
fidivs
movsl
lods
mov
mov
inc
and
jle
outsb
ja
pop
mov
and
xchg
idiv
scas
es
add
dec
loopw
push
pop
mov
clc
jl
adc
mov
mov
lods
sahf
fdivs
adc
test
add
call
sub
testl
jl
cmpsb
or
imul
mov
dec
jno
daa
xor
fs
xchg
and
jmp
fwait
dec
in
xchg
xor
fcompl
jo
int3
test
sbb
je
xchg
xchg
pop
mov
sbb
pop
cmp
in
clc
inc
add
add
clc
loopne
aam
mov
into
sub
xchg
sbb
call
mov
ds
cmp
aaa
cmp
in
or
mov
mov
push
ret
adc
jmp
enter
push
jg
movsl
loop
xchg
sbb
xor
xchg
cmp
push
bound
add
les
stos
out
in
mov
pop
mov
in
inc
dec
fildl
mov
or
dec
or
into
jb
aaa
sbb
push
gs
pop
adc
and
nop
mov
xchg
xchg
add
xor
rclb
icebp
inc
bnd
or
or
hlt
loop
push
and
inc
fcomps
out
and
pop
pop
xchg
out
fildll
fcom
out
pop
sub
repnz
mov
imul
push
test
addr16
jno
shrl
test
je
pop
lret
jne
xchg
cmp
popa
test
or
adc
push
mov
cmp
je
jl
jns
nop
or
or
out
test
bound
xor
lea
stc
mov
cmp
js
enter
adc
test
ljmp
mov
iret
mov
hlt
inc
jmp
stos
cmp
jb
outsb
mov
mov
test
pop
jo
jmp
dec
dec
pop
out
or
or
mov
dec
sti
sub
shrl
mov
xchg
fdivrs
aam
addl
mov
out
adc
dec
std
scas
mov
xor
rcll
mov
in
xchg
mov
push
movups
loope
scas
pusha
cwtl
adc
push
xor
fcomp
inc
inc
jp
push
or
divb
dec
pop
xor
push
pop
sbb
cmp
arpl
rorl
insl
mov
xchg
inc
dec
push
mov
inc
inc
cmp
xlat
sub
std
sti
and
inc
and
loop
enter
push
cmpsl
cld
out
idivb
sub
mov
mov
stos
sbb
mov
aad
divl
xchg
mov
mov
aad
leave
xchg
dec
xor
or
sar
pop
jmp
notb
dec
sbbl
push
call
outsb
mov
sbb
dec
or
mov
mov
enter
mov
lahf
repz
dec
stos
add
enter
ret
ja
rolb
fbld
push
in
xor
and
scas
test
jge
stos
into
inc
dec
push
jb,pn
fs
jo
and
in
mov
pop
add
out
hlt
nop
into
mov
pushf
out
push
mov
pop
test
dec
in
push
pop
xchg
lods
jb
int
sub
sub
xor
xor
dec
pop
imul
div
cmp
sahf
jle
adc
mov
adc
inc
mov
adc
scas
push
cmp
popa
or
lret
sbbl
shll
bound
cmp
sub
int
je
addb
xchg
mov
or
loope
aaa
jp
or
sbb
xorb
adc
xchg
add
and
popf
add
aas
adcl
fstl
dec
pop
jmp
out
xor
sub
dec
enter
fstpt
pop
mov
and
cmpsl
add
adc
imul
push
inc
sub
cmp
out
adc
cmp
fsubs
lods
inc
test
movsb
sub
pop
xchg
into
cmc
push
mov
out
or
inc
dec
push
in
xchg
lcall
xchg
jo,pt
adc
aas
cmpsb
test
inc
lcall
repz
mov
inc
imul
clc
add
dec
dec
test
fldt
aas
cmp
nop
lods
movlps
mov
jl
shll
add
mov
imul
js,pt
and
xchg
dec
add
test
les
jno
jbe
push
mov
push
out
adc
shrl
test
lahf
je
mov
pushf
loopne
add
xchg
pop
sub
xchg
aam
outsb
out
outsl
hlt
xchg
cmp
mov
enter
push
loope
shl
ret
dec
cld
btr
sti
icebp
or
pop
lock
push
sar
sti
mov
inc
add
clc
adc
mov
ficoml
cmp
test
and
aad
insb
mov
cmp
add
mov
sub
push
xorb
clc
mov
xor
adc
or
xlat
adc
fs
popl
stos
pop
lea
adc
roll
mov
in
popf
std
jp
push
inc
dec
enter
shlb
sarl
sahf
cltd
sub
xchg
xchg
lcall
xlat
mov
inc
daa
stos
insl
faddl
imul
jl
pop
and
adc
loope
insb
xchg
push
adc
mov
jle
xor
add
rorb
pop
adc
sub
shrb
cmp
fisubrs
pushf
push
fildl
jnp
push
in
jmp
lahf
ret
mov
lcall
xor
xor
xor
push
cmpsl
imul
clc
xchg
mov
inc
lahf
dec
rclb
sbb
or
adc
cmp
inc
stc
xor
inc
pop
cli
aad
sub
sub
negb
xchg
outsl
mov
aas
mov
inc
and
inc
jecxz
xchg
ja
and
cmc
adc
inc
je
xor
clc
into
movsb
adc
mov
sbb
xor
xchg
xchg
pop
ret
adc
adc
cmp
fdivr
mov
adc
repz
inc
incb
ljmp
mulb
in
mov
pusha
orb
or
pop
adc
lret
emms
or
xchg
inc
imul
mov
jb
mov
inc
rcrl
mov
dec
ret
xor
cmc
lcall
inc
in
fwait
and
sbb
out
inc
rcr
sub
xchg
leave
or
inc
bound
mov
cmpsl
imull
cmpb
mov
adc
inc
xchg
mov
pop
shl
cs
imul
int
xor
push
adcl
andb
das
in
out
ret
cmp
adc
gs
pop
insb
pop
and
cmp
int
fwait
addr16
push
push
sub
icebp
addb
cmp
jecxz
ss
mov
stc
xor
pop
popf
js
push
cmp
mov
repz
dec
shrb
or
cmpsl
nop
clc
pop
mov
mov
into
test
test
in
and
mov
jge
adc
cmp
clc
inc
in
mov
and
jno
push
outsb
fimuls
xor
mov
push
jg
adc
jge,pn
mov
inc
movsb
mov
sbb
jb
lods
push
cltd
clc
mov
out
lahf
in
mov
fwait
xor
sbb
xor
cmc
pop
push
xor
cmc
adc
int
cmp
out
jecxz
jae
fdivr
imull
pop
insb
mov
insb
shrb
hlt
repz
dec
and
loopne
lahf
faddl
aaa
jmp
xorl
pop
or
jbe
mov
sbb
iret
pop
rcr
mov
xor
sbb
in
sub
push
rcrl
jb
jg
push
mov
dec
fisubrl
orl
fninit
pop
push
cli
push
mov
int3
nop
mov
dec
inc
mov
stos
call
xlat
xchg
mov
mov
mov
mov
nop
xor
popa
jecxz
stos
push
mov
push
xchg
aas
ret
jecxz
aad
mov
or
mov
inc
push
jno
mov
mov
aas
xor
in
iret
jp
jae
repnz
sub
ja
rolb
mov
test
cmc
dec
sub
mov
push
pushf
sbb
mov
sub
test
sub
ja
cmp
add
dec
leave
cmp
jne
int
bound
mov
and
dec
sbb
jge
in
ljmp
shll
jne
push
lahf
gs
lods
xchg
cli
jnp
mov
xchg
mov
jmp
mov
inc
pop
and
imul
cmp
sahf
xor
and
add
outsb
in
into
adc
jl
dec
adc
in
sub
or
aam
cmp
mov
cltd
loopne
fimull
xor
mov
push
cmp
push
xor
mov
jae
hlt
fcmovbe
pop
pop
rclb
or
mov
mov
and
nop
mov
mov
popf
push
repnz
add
pop
mov
inc
mov
and
sbb
mov
cmpsb
hlt
inc
loope
mov
les
sti
iret
cmovl
fnstenv
lock
and
jp
aad
fbld
adcl
mov
insb
and
fstps
mov
test
call
dec
inc
sti
xor
jo
fwait
and
push
loope
test
daa
inc
jmp
xor
xchg
adc
popf
mov
jmp
ror
cli
outsb
sbb
pop
nop
adc
test
stos
shll
pop
popf
xchg
fwait
xor
mov
js
jno
mov
dec
or
imul
stos
imul
imul
jle
out
das
xor
jne
mov
sub
enter
jae
ljmp
movsl
mov
enter
jne
or
int3
pop
es
sbb
scas
and
leave
iret
call
or
outsl
scas
iret
sbb
pop
loop
vxorps
repz
dec
sbb
xorl
fisttpll
test
inc
cmp
out
mov
mov
mov
sbb
xchg
and
jb
call
in
pop
mov
mov
aaa
or
or
mov
push
fiadds
ret
scas
mov
add
cmp
pop
jne
aad
xor
push
or
insb
push
or
mov
mov
divb
inc
fcoms
jb
rcrb
popf
or
inc
mov
pusha
clc
movsb
sub
push
mov
xor
in
adc
pop
sar
aaa
loopne
pop
sbb
stos
push
pop
insb
cmpsl
and
jno
jecxz
xchg
mov
adc
outsb
mov
out
jo
das
aam
add
test
lahf
add
dec
fcmovnb
cmpsl
imulb
jbe
rol
ss
sub
cld
xorb
popa
mov
xor
dec
test
jmp
dec
std
mov
jnp
andl
mov
jmp
or
mov
cmp
mov
mov
iret
mov
fcoms
sahf
pop
test
push
les
loop
loope
js
cmpsw
inc
mov
repz
gs
adc
and
mov
dec
sbb
dec
or
sarl
pop
aam
cmpb
xchg
xchg
orl
loopne
inc
push
movsb
cmp
rcr
loopne
int3
aam
call
lahf
adc
and
bt
inc
out
mov
gs
jp
and
adc
into
or
shr
push
jno
pop
pop
mov
aaa
or
int3
int
pop
aam
or
gs
in
xchg
popl
iret
or
les
loope
mov
dec
jae
cli
sub
in
sub
push
xchg
sarl
xchg
ja
pop
adc
lea
mov
test
pushf
mov
popf
jno
adc
popa
jne
or
ror
fwait
sub
movsb
outsl
lret
cltd
xor
push
pop
or
lea
or
dec
bswap
or
push
popa
mov
negb
stos
xchg
lods
cld
sbb
or
scas
scas
xchg
inc
xchg
stos
mov
pushf
sti
adc
push
sbb
jge
icebp
packuswb
fisubl
mov
int
dec
push
std
lods
mov
ss
stos
push
dec
jno
jle
xor
lods
dec
or
mov
mov
xchg
fcompl
or
arpl
add
or
dec
aam
fildll
mov
ret
lds
sub
mov
adcb
icebp
lcall
pop
and
mov
iret
js
stos
mov
or
mov
cli
xchg
aam
and
loopne
repz
sbb
repnz
ljmp
dec
add
call
and
xchg
cmp
fwait
aam
lds
addl
push
out
pop
push
clc
popf
idivl
pop
xchg
inc
subb
mov
pushf
mov
lahf
cmc
sbb
ficomps
mov
sub
push
push
or
push
loop
arpl
cmp
pop
push
fcomps
imul
incl
fstps
test
xor
dec
add
pusha
mov
or
xor
mov
adc
mov
and
mov
sbb
dec
sub
add
in
jmp
xor
popf
and
xor
stc
pop
add
dec
sahf
adc
push
add
ret
call
iret
ret
repz
out
xchg
stos
mov
mov
xlat
mov
out
or
das
cs
enter
jge
pop
push
push
mov
clc
popf
adc
idivl
add
std
std
lahf
fsts
mov
jmp
and
cmp
mov
pop
dec
clc
dec
aas
jmp
test
push
scas
dec
dec
push
add
mov
push
test
sbb
test
fsubs
clc
mov
testb
pop
cmp
jg
mov
test
pop
pop
frstor
jle
add
je
pushf
pop
stos
or
negl
dec
or
jne
aam
in
dec
and
mul
and
mov
out
push
lahf
sahf
in
xor
nop
in
push
xor
mov
mov
ds
mov
sbb
pop
int3
arpl
in
enter
cmp
jge
or
xchg
jne
adc
cli
sbb
lock
sub
adc
clc
pop
cmp
sbb
fcmovne
xchg
cmp
testl
add
pop
dec
mov
push
add
xchg
push
inc
aas
fs
loopne
xchg
loope
or
stos
jecxz
cltd
dec
xchg
clc
xor
subl
test
call
negl
or
cmp
mov
mov
inc
fldl
ficomps
adc
xchg
xor
adc
jg
hlt
mov
pop
idivb
scas
testl
xchg
cmp
addps
xor
xor
pop
mov
cmpl
cmc
pop
sub
adc
jle
fs
lret
lods
les
cmpsb
fsub
and
cmpsb
sub
push
rclb
push
mov
cmp
xor
iret
xchg
pop
cmc
fldcw
stos
jl
lcall
push
mov
cld
jo
in
in
mov
js
loopne
add
inc
add
fbstp
sarb
icebp
xor
mov
ja
stos
scas
lock
jl
push
xchg
iret
cld
jno
leave
or
cld
data16
pushf
cmp
lret
in
xchg
adc
sbb
inc
idiv
push
fwait
add
dec
aam
jno
daa
sub
xor
xchg
push
aas
cmp
add
add
cmp
cmpsl
orl
shll
into
sbb
jbe
jp
lea
cmc
arpl
aaa
jecxz
cs
aam
sbb
mov
aam
sub
enter
or
sbb
popf
and
cmp
and
aad
dec
fwait
icebp
aas
or
dec
mov
stos
shrl
mov
movd
movsb
cltd
scas
and
pop
pop
or
lods
and
jbe
sub
and
jnp
loope
xor
lock
jle
sbb
sub
push
or
cltd
pop
jg
xchg
scas
xor
jmp
sub
mov
dec
xchg
add
lcall
pop
insl
dec
cmp
iret
aas
or
pushf
orl
stos
push
or
dec
lret
pop
lcall
test
ja
pop
sahf
ror
shlb
cld
repnz
aas
movl
cmp
pop
lahf
dec
mov
mov
std
popf
outsl
jb
rcl
mov
mov
jg
mov
cli
cmp
movsb
jg
popa
fnsave
out
in
and
shlb
jo
pop
jb
add
test
jo
cmp
mov
push
scas
adc
dec
or
xor
jbe
sub
les
and
pop
pop
push
mov
mov
dec
mov
js
sub
fidivrs
mov
ficomps
notb
shll
int
mov
stos
jmp
or
std
adc
xor
fnstenv
mov
dec
inc
adc
into
pop
pushf
mov
in
xchg
fs
mov
or
test
mov
and
cli
ret
rcrl
leave
ficomps
loopne
out
rcr
sub
push
adc
or
push
cmovbe
push
std
into
adc
aas
xchg
test
jge
into
sub
jbe
mov
adc
mov
sar
inc
into
into
mov
into
repnz
shl
jbe
adc
negb
sub
test
sub
mov
cmc
or
sbb
adc
push
fsubl
xchg
imul
add
rclb
daa
jns
add
divl
fstpt
int
out
fistps
insl
jbe
mov
jle
or
push
sbb
xchg
sbb
iret
scas
ret
push
push
and
mov
lock
cmp
pop
fildl
in
sbb
jb
in
ret
xor
nop
movsl
xchg
pushl
mov
nop
add
xchg
pminsw
pusha
jne
jg
or
pop
mov
leave
divl
mov
mov
cltd
scas
xor
bnd
inc
js
addl
push
sbb
ja
xor
popa
pop
xor
rcrb
hlt
fstps
frstor
xor
jmp
inc
fisubl
and
mov
ds
loop
repnz
adc
icebp
mov
or
gs
jns
lds
jge
sub
ret
mov
jmp
aas
outsb
std
sti
push
hlt
adcb
popf
sub
jnp
xor
notb
xchg
push
jge
dec
in
cs
xchg
push
and
shr
jns
sbb
pop
or
adcl
in
es
scas
outsl
and
xor
mov
cltd
mov
sub
lea
stc
xor
cmp
cmp
das
jbe,pn
add
aas
dec
mov
xchg
mov
inc
adc
pop
mov
int
pop
mov
jnp
mov
pop
shrl
inc
mov
aad
push
xchg
lret
lcall
pop
test
sbb
cmp
dec
inc
fadd
sarb
adc
dec
loop
mov
insb
adc
push
adc
and
push
sub
sbb
xchg
popf
addr16
mov
mull
add
jecxz
icebp
jl
jmp
xchg
jne
andl
mov
push
faddl
test
test
cmp
jo
hlt
push
jnp
inc
test
in
popf
mov
mov
add
nop
int
mov
mov
repz
mov
push
pop
fiadds
rcrl
xchg
mov
mov
mov
out
push
mov
mov
sbb
xlat
xor
lret
mov
pusha
jae
jbe
clc
push
cmp
or
pop
pause
movsb
lahf
fimuls
add
mov
movsb
pop
jmp
scas
and
xchg
inc
pop
rclb
in
jb
push
scas
popa
loopne
cs
leave
ret
pop
test
jg
das
lret
inc
pop
hlt
loope
lcall
inc
jns
xchg
test
addb
pop
sbb
in
mov
mov
es
jg
or
inc
jo
jp
ret
jb
adc
adc
mov
insb
out
addb
lock
lods
leave
add
icebp
test
jecxz
or
lods
gs
mov
lea
cld
xor
dec
mov
adc
iret
sbb
add
outsl
inc
lea
out
mov
xor
push
icebp
sbb
or
pop
rorb
test
sub
fnstcw
scas
fidivrs
std
and
incl
xorl
sbb
jne
lret
test
cmp
popa
lahf
sbb
xor
int3
and
outsb
out
jo
or
sbb
pushf
push
arpl
mov
jo
in
les
inc
and
mov
xorl
mov
insl
imul
sbb
fdivrs
loopne
sub
jle
sbb
add
or
sub
pop
jb
lcall
mov
movsb
scas
outsl
aas
mov
jb
sahf
out
cmc
mov
adc
xor
mov
test
mov
cmpsb
movsl
rcrl
shrl
in
cmpl
shr
mov
leave
inc
pop
and
lock
dec
scas
ret
nop
and
cli
nop
mov
xchg
or
loope
daa
nop
in
jo
loop
test
dec
sub
shl
jmp
push
inc
loop
or
ss
mov
add
mov
jmp
cmpsb
imul
mov
fstl
into
enter
sub
push
insb
pusha
cmpsb
imul
adc
movsl
or
add
push
test
push
lods
cmpb
jg
push
sbb
xchg
and
inc
ss
dec
mov
dec
inc
jb
lds
data16
loop
fyl2xp1
fwait
shr
js
out
jo
xor
lds
mov
pusha
aas
mov
xchg
divb
sbb
inc
popf
in
in
ret
mov
out
add
jo
lea
movsb
xchg
loope
loope
lea
pop
mov
adc
int3
adc
sbb
mov
loopne
pop
testl
push
adc
jne
scas
and
inc
shrb
adc
jne
das
jae
fdiv
and
jl
jnp
bound
xchg
and
mov
clc
lcall
xor
or
aad
sarb
lods
jle
addr16
cmp
push
repnz
or
insl
xchg
sub
jae
inc
nop
pop
xor
int3
sbb
sbb
subl
xor
xchg
rcrb
ss
out
xchg
push
fst
pop
adc
rcrl
hlt
or
sbb
out
xchg
push
push
jb
mov
xlat
lret
pop
movsl
add
xor
xchg
mov
sub
inc
push
in
bound
clc
int
sbb
xchg
insl
cmp
into
sub
loope
out
stc
fisubs
xchg
jno
fdiv
xlat
dec
divb
xchg
mov
imul
popa
or
fcmovu
pop
popa
jle
stos
cmp
dec
add
out
mov
xchg
bound
add
push
jle
daa
mov
sbb
mov
xchg
jno
test
xor
insl
mov
push
xchg
ja
adc
imul
lock
fcoml
leave
gs
lret
sbb
loope
adc
mov
cmpsl
sbb
popa
inc
in
sti
out
lcall
push
pop
scas
lock
stc
xchg
je
xchg
shr
insb
loope
inc
enter
jg
or
icebp
mov
dec
ss
ja
and
imul
mov
fs
add
adc
ja
sub
fs
jecxz
lds
stos
pop
sbb
push
cmc
lods
pop
aad
insb
and
push
adc
clc
out
add
jne
xor
notb
cmp
dec
into
and
jge
subl
mov
adcl
cmc
cltd
inc
xor
cmp
jmp
shlb
jo
cmp
jecxz
clc
add
cmp
rcrb
sbb
inc
mov
rorl
sti
loopne
mov
test
inc
aam
cltd
mov
inc
pop
push
test
fadd
imul
cs
jne
stc
add
sbb
scas
cmp
mov
loopne
mov
mov
sbb
xor
lods
stos
or
cmc
divb
inc
lret
lahf
jge
add
xchg
jb
mov
insl
pop
xchg
mov
stc
pop
xchg
inc
xor
jo
inc
push
aaa
inc
pop
js
outsl
jnp
or
jo
daa
arpl
cs
cmc
push
mov
imul
loop
loop
xlat
or
push
push
fsubrs
jge
jns
add
icebp
xchg
mov
push
sbb
dec
loop
out
sub
and
out
out
andl
lcall
push
mov
ret
mov
aas
push
fwait
push
and
movsb
icebp
loop
pop
cmpsl
mov
sbbb
sub
scas
rcr
push
ror
dec
xor
lret
popf
push
lods
mov
stos
pop
add
sbb
sub
mov
ljmp
shrb
loop
aas
xor
mov
loop
stos
pop
xor
scas
cltd
jmp
les
push
lods
or
dec
mov
rcll
dec
adc
iret
out
and
lcall
jecxz
pop
sahf
and
jb
push
int3
dec
sub
lea
mov
ss
fsubs
rolb
ds
jl
cmpsb
aas
stos
dec
adc
mov
bswap
adc
movsl
cmpsb
adcb
fcompl
mov
cltd
inc
mov
imul
cmpsb
int
jae
nop
shll
adc
sub
add
inc
push
nop
stos
clc
or
mov
mov
jns
dec
cmpsl
cltd
inc
dec
cs
std
fsub
pop
cld
cmp
test
aad
stc
shrl
cmp
les
outsl
popf
lcall
pop
jno
pop
scas
jl
fdivrs
xchg
test
and
jae
inc
out
repz
fidivrs
stos
or
adc
or
and
xor
dec
xor
sub
xchg
ja
icebp
jne
mov
and
mov
adc
and
sarb
icebp
push
jl
out
in
sbb
mov
pop
les
pusha
arpl
jecxz
ss
or
sbb
adc
mov
cmp
mov
lahf
adc
or
mov
lret
loopne
cmp
xchg
xchg
loope
adc
mov
push
cld
inc
pop
mov
sbb
stos
or
sahf
or
imul
fistps
or
jnp
xchg
adc
mov
sbbb
popl
mov
cmp
sbb
mov
dec
loopne
in
jo
mov
test
xor
stos
xchg
xchg
mov
scas
dec
push
insb
lods
mov
int3
push
rcrl
arpl
add
repz
movsl
push
sub
and
mov
cmp
xchg
shll
orl
hlt
adc
xor
adc
lret
out
call
push
pop
sub
repz
dec
and
xchg
sub
push
adc
inc
xchg
adc
inc
cld
push
ds
ljmp
jne
add
fiadds
scas
stos
lret
mov
push
ret
bound
test
and
les
dec
sbbb
push
divl
mov
pop
adc
loope
stos
jle
pushf
push
sbb
flds
pop
std
mov
into
and
repnz
xchg
lahf
push
jnp
movsl
int
mov
int3
push
pusha
mov
cmpsb
push
pusha
push
add
jbe
les
lds
bound
negb
loopne
out
push
adc
inc
pushf
jle
out
rcr
add
jae
test
into
mov
mov
jns
dec
xchg
jp
clts
insl
add
xchg
sub
push
jbe
lea
mov
inc
fwait
scas
adc
in
cmp
add
je
adc
ljmp
rcrb
sbb
jbe
and
lods
stc
or
and
scas
bound
outsl
xor
adc
dec
out
adc
mov
jae
sub
xor
jmp
or
pxor
popf
inc
icebp
dec
pop
fnstsw
into
sub
push
mov
mov
lods
int3
lods
mov
lods
push
insb
in
cmp
inc
ret
repnz
popa
mov
mov
fldt
out
movsb
enter
aaa
lahf
js
inc
pop
mov
jno
mov
outsl
mov
sub
scas
push
pop
shlb
xchg
push
clc
jecxz
mov
jno
out
mov
imull
xor
mov
out
nop
ds
pop
sti
mov
xlat
jge
adc
sbb
dec
shll
call
inc
test
xor
lods
and
fimull
dec
std
and
push
aaa
mov
filds
sub
cmpsl
and
int
jno
push
bound
or
nop
in
cmp
cmp
mov
and
pop
push
cld
pop
adc
pop
mov
mov
mov
arpl
xchg
flds
jo
cmpsb
repnz
lods
mov
inc
mov
sbb
test
jne
cltd
mov
cmc
inc
test
cmp
out
jns
in
bound
out
adc
dec
insb
pop
mov
faddl
mov
jno
sub
adc
ds
fdivr
adc
and
add
call
mov
dec
mov
leave
inc
pop
lea
cwtl
xlat
xchg
jle
test
mov
push
or
cmp
aam
mov
fidivrs
push
sbb
je
insb
pop
mov
xchg
popa
inc
xchg
sbb
mov
sbb
in
clc
loope
sbb
outsl
std
push
pop
mov
sahf
adcb
cwtl
es
sti
xchg
loop
sub
sbb
and
xor
lods
dec
cli
xor
mov
call
or
pusha
push
push
xchg
pop
mov
push
pusha
adc
bound
jbe
in
cmp
out
dec
mov
adc
dec
sbb
dec
out
fldt
lock
jmp
dec
xchg
jmp
or
sub
and
sbb
mov
movsl
adc
pop
jbe
cmp
cmpsb
inc
sub
sub
mov
sub
inc
push
pop
call
sarl
mov
mov
and
es
mov
cli
out
jbe
xchg
imul
push
iret
out
fiadds
out
jl
mov
jne
xchg
push
mov
test
dec
dec
dec
fisttps
insl
jno
andl
xor
aaa
xor
movsb
ror
js
xor
hlt
xlat
sub
iret
jecxz
push
rcl
inc
push
leave
cmp
sub
add
add
pop
daa
test
pop
push
popf
dec
aam
dec
out
leave
xlat
lock
sbb
pop
loopne
and
jl
test
jge
movsl
add
les
ss
jmp
sub
xlat
std
dec
add
pushf
xchg
add
cmp
inc
mov
cld
mov
lea
nop
je
stos
xor
movsb
scas
and
scas
fisttpl
mov
jbe
mov
jnp
daa
movsl
lods
push
xchg
pop
inc
in
xor
push
mov
xor
clc
sbb
addr16
jecxz
cli
sub
adc
ds
fisubrs
mov
dec
ret
sar
xchg
ljmp
mov
mov
pop
aad
dec
xor
pop
or
clc
jmp
fsub
mov
test
iret
sub
stos
jnp
int3
sti
jg
mov
shll
orps
adcb
or
adc
int3
inc
dec
aad
repz
fbld
jbe
xchg
sub
mov
cmp
clc
sub
lock
outsl
loope
mov
or
adc
lcall
aam
ss
movsb
std
adc
loopne
mov
movsb
jne
cwtl
sbb
gs
rcl
ret
sbb
fst
scas
mov
dec
inc
ja
leave
mov
repz
insl
pop
mov
cmc
lea
or
outsl
cmp
rolb
jecxz
shll
push
pop
jl
jecxz
repnz
into
out
sub
jbe
push
pop
sub
sub
loopne
pop
outsl
pushf
sbb
cmpsb
lret
ja
add
iret
xchg
fldt
push
gs
cmpsl
xor
mov
repz
movsl
out
sub
in
mov
andl
pop
adc
inc
gs
mov
ret
ljmp
mov
call
cmp
adc
gs
lret
jmp
loopne
cmc
data16
xchg
ljmp
aad
push
pop
fnstcw
out
cmpsb
out
cmpl
clc
cmpl
push
fcom
adc
jg
aas
pop
cwtl
xor
out
pop
leave
pop
shrb
xor
stc
sbbb
leave
inc
pop
sbb
arpl
push
jl
xor
pop
mov
addr16
cmp
dec
jge
inc
push
and
out
lahf
push
aaa
mov
scas
orb
jns
mov
jnp
lahf
xor
sbb
cmp
dec
test
dec
push
cmpsl
mov
inc
es
bound
aaa
mov
inc
js
jmp
xchg
jbe
jb
pop
imul
insb
or
xlat
mov
scas
or
inc
jmp
and
mov
pop
add
cmp
lods
sub
xchg
pushf
aam
test
movsb
sbb
and
stos
enter
lret
dec
arpl
sbb
ret
jl
mov
stos
and
jp
aad
cmp
fistpll
adc
sub
stos
add
icebp
cmp
aas
jl
sbb
aad
repnz
sbb
jno
das
in
jge
psllq
fwait
sub
mov
mov
or
outsb
les
lods
push
dec
mov
and
lcall
add
push
xor
mov
inc
jns
sub
lods
mov
cmp
mov
sub
movsb
or
idiv
rclb
es
dec
mov
mov
in
lds
fwait
lret
stc
fmul
jge
or
in
arpl
cmpsb
push
scas
xchg
push
std
fcmovu
xacquire
ds
lock
cltd
ljmp
add
shll
sbb
notl
mov
out
jle
mov
sub
xchg
mov
inc
jl
fwait
test
ret
cld
adc
jb
xor
mov
ljmp
ret
adc
xchg
xlat
push
xchg
into
mov
out
mov
int3
call
push
shrb
icebp
cli
mov
lock
idivb
dec
andl
testl
fcmovbe
mov
jle
out
rolb
inc
push
movsb
push
xchg
jmp
and
rclb
xor
jb
out
dec
mov
xorb
cmpsb
mov
cltd
xchg
testl
push
mov
je
shrl
sub
mov
scas
xchg
push
sub
push
xchg
xchg
js
inc
aas
mov
adc
sbb
shrb
fistl
xchg
adc
fdiv
daa
mov
push
add
pusha
pop
sub
mov
pop
cli
in
in
or
pop
push
movsl
loop
mov
pop
movsb
mov
push
inc
scas
xchg
jns
test
cmp
adc
test
push
inc
and
mov
xor
adc
jbe
ret
push
bnd
jle
cmp
mov
stos
and
fs
mov
aam
sub
jno
cwtl
repnz
outsb
dec
mov
cmp
cli
xchg
mov
sub
or
jmp
loop
sub
inc
or
or
sub
inc
push
xchg
les
lahf
daa
mov
adc
jb
or
push
sub
movsb
outsb
cmpsb
mov
movsl
lock
mov
movsl
fwait
push
mov
pop
add
fdivrs
mov
xchg
inc
inc
aas
loopne
jmp
lods
call
out
lods
or
jl
sahf
mov
jno
call
cs
leave
push
cwtl
add
clc
sub
pop
and
cmc
fiadds
xor
enter
jnp
leave
insl
insl
icebp
adc
lahf
leave
xlat
outsb
jle
scas
addr16
mov
outsb
aaa
xlat
or
cmpsb
out
cld
mov
imul
outsb
mov
dec
push
rcll
mov
lcall
adc
and
mov
sub
xor
mov
outsl
rcr
loop
sub
test
popf
js
jno
xchg
add
cmp
ljmp
mov
out
sub
das
jp
inc
popaw
fsubp
cmp
xchg
pop
scas
sub
mov
jl
mov
lock
mov
sub
inc
pop
mov
mov
jmp
fs
xor
nop
lds
out
or
cld
xor
dec
and
or
push
adc
inc
cmpsb
jb
outsl
enter
enter
xor
aas
scas
movsb
adc
lea
arpl
and
cmp
jg
mov
lock
jp
mov
push
xchg
inc
daa
mov
or
ja
and
cmpsl
xor
add
lods
jle
shr
fmuls
mov
out
jbe
arpl
inc
cwtl
xlat
movsl
pop
pop
pop
and
lcall
cmc
sti
add
xor
daa
mov
sub
mov
or
adc
inc
enter
push
ret
push
mov
repnz
lods
adc
inc
icebp
dec
orl
and
sbb
mov
ja
mov
sarl
xchg
sbb
iret
mov
mov
popa
sbb
loop
or
dec
cmpsl
clc
imul
and
lret
adc
out
dec
jecxz
adc
or
pop
sbb
jno
xor
mull
cli
xor
mov
cmpsb
out
outsb
cwtd
jmp
gs
dec
adc
mov
adc
stos
les
or
das
in
xor
ficoms
call
ds
fistpll
clc
in
xchg
push
sub
test
and
ret
jle
jb
or
loop
pop
cli
idivb
int3
ret
cli
push
push
push
sbb
jecxz
mov
mov
rolb
ret
sarl
popf
xchg
inc
sub
sub
adc
add
fadds
jle
mov
sahf
nopl
fcomi
jecxz
jmp
jp
daa
jbe
iret
push
xchg
dec
insl
jne
mov
mov
repnz
cmpsb
pop
mov
cmc
stos
mov
sbb
add
xchg
and
std
loope
jge
dec
in
adc
mov
aaa
cmpsw
ds
jle
addr16
cwtl
bound
jp
adc
loop
pop
cltd
cmpsl
jle
sahf
leave
jne
in
repz
add
add
aas
push
sahf
or
test
pop
sub
aas
fistl
out
mov
idivl
cmp
pop
cwtl
jmp
pop
testb
movsl
dec
push
lcall
js
sbbl
ljmp
fdivl
jbe
dec
out
movzbl
fisubrl
cmp
jae
mov
push
or
imul
xor
lds
cmpb
inc
cld
ret
xchg
flds
int
lahf
jns
add
sbb
adc
cs
cmpl
sub
or
push
cmp
scas
in
xchg
inc
test
add
add
sub
pop
xchg
add
dec
sub
repnz
call
fstpt
ficoms
pop
int
fisubs
cli
adc
enter
divb
ret
jb
shrb
fnsave
shlb
std
addb
shlb
pop
out
cli
sub
dec
dec
jge
add
xchg
xchg
mov
mov
cmp
xor
xlat
outsb
xor
mov
int
jae
int
pop
mov
js
out
cmp
dec
inc
cmpsl
sub
outsb
sub
aaa
mov
mov
outsl
in
xlat
scas
scas
andl
push
pop
bound
sub
gs
mov
arpl
movl
and
mov
lret
mov
pop
arpl
push
mov
fimull
cmc
cmp
inc
inc
insb
lock
cli
int3
mov
lock
insl
pusha
sub
rolb
mov
fninit
rorb
jbe
pop
sub
jns
mov
cltd
xor
adc
shlb
sahf
mov
ljmp
mov
test
aad
jmp
lods
push
cmp
test
lahf
lret
push
popf
jae
add
pop
int3
sub
scas
pop
in
sub
mov
popa
push
mov
or
sub
xchg
jns
jp
push
mov
cltd
xchg
pusha
nop
xchg
pop
rcll
pop
sbb
aas
push
sub
outsb
xchg
sbb
hlt
inc
sub
jns
sbb
int3
mov
or
out
inc
sti
nop
inc
mov
and
outsl
imul
or
and
xor
test
lahf
jo
icebp
xchg
pop
xchg
les
data16
scas
sbb
xchg
mov
sub
fidivrl
inc
rep
sbb
fisubl
roll
movsb
inc
rolb
sub
lahf
lea
add
pop
mov
dec
cmp
add
in
sbb
das
pop
or
or
cld
mov
rcrl
jecxz
lods
add
cwtl
push
cmp
sub
push
ljmp
das
cmpsb
scas
aas
push
jb
cmp
into
loope
aad
cli
xchg
aad
inc
lds
inc
fs
or
repz
mov
fwait
sub
subb
push
into
popf
adc
sti
mov
test
mov
jmp
sub
test
xchg
lret
movsl
insb
mov
cmp
push
mov
mov
roll
cmp
scas
inc
shr
mov
and
cmc
pop
push
ret
xchg
cmpsb
cmc
mov
pop
das
inc
fsubrs
and
adc
mov
pop
scas
push
xchg
push
inc
push
add
shll
xlat
cs
jne
adc
sbb
or
xchg
add
mov
xor
sub
mov
in
push
push
popf
in
test
pop
xor
pop
push
pop
fbld
cmp
not
inc
pop
pop
or
mov
xor
or
cld
shlb
mov
sub
enter
je
adcb
popl
mov
sub
xchg
lret
mov
jmp
jo
stc
in
push
sub
cwtl
mov
mov
jnp
jb
fiadds
mov
arpl
imul
pushf
xor
loope
ljmp
fs
rol
cmp
push
stos
pop
xchg
pop
and
int3
repnz
mov
loope
lock
pop
cmp
mov
jmp
jge
fistl
movsl
pop
xor
push
imul
pop
imul
dec
cmc
clc
shll
test
mov
jbe,pt
sbb
add
movsb
lods
adc
movsb
out
mov
adc
and
push
out
jnp
out
pusha
dec
adc
xchg
daa
dec
mov
mov
repnz
insl
in
dec
shll
outsb
in
xor
mov
add
aam
jmp
loopne
add
jge
cmp
mov
pop
add
dec
jno
jp
ret
sbb
cmp
std
test
cmp
xorb
pop
inc
insl
hlt
pop
leave
or
push
jl
ffree
int
jg
inc
mov
popl
sahf
ror
gs
xchg
sbb
push
mov
jmp
lcall
mov
je
mov
shlb
xor
jmp
jmp
gs
mov
mov
out
sub
mov
div
sub
inc
cmp
lret
sub
xor
add
insb
pop
or
inc
out
cld
clc
inc
inc
jp
les
sub
or
dec
xor
add
aas
add
push
mov
cmc
inc
les
mov
mov
mov
std
mov
fsts
fsubrs
std
ret
mov
cmp
xor
movsl
shlb
stc
je
xlat
push
aad
push
push
xchg
lea
lock
sbb
lock
sub
mov
iret
push
into
loope
repnz
mov
inc
lahf
sbb
mov
xor
cmp
out
sbb
add
jmp
or
dec
lea
int
dec
iret
mov
jnp
adc
popa
icebp
loopne
pusha
fstpt
dec
xor
scas
sarl
or
lret
mov
add
mov
repnz
mov
add
inc
mov
orb
sub
push
or
shll
sub
outsl
or
xlat
pop
inc
sbb
jo
inc
shrl
ds
addr16
xchg
fisttpll
mov
rcrb
jb
xchg
push
adc
and
mov
sub
push
pop
sbb
mov
daa
ja
in
dec
cmc
in
mov
xchg
dec
cmp
sbb
notl
rcrb
pop
xorl
or
jl
imul
cmp
iret
fmul
cli
repz
jb
repnz
orl
clc
sbbl
arpl
pusha
mov
mov
xchg
mov
cltd
jmp
ficoml
iret
and
lds
shll
inc
ret
pop
push
push
hlt
sahf
jnp
cli
cmpl
mov
cltd
push
cmc
or
aaa
jecxz
adc
dec
ss
inc
jno
sbb
sbb
lmsw
out
and
int3
sarl
push
xchg
mov
movsl
lret
clc
lea
filds
jle
mov
in
shrb
mov
sbb
sbbb
shrl
lcall
dec
sub
push
or
jle
ja
jbe
in
and
enter
jne
adc
sbb
xchg
pop
mov
and
add
andl
mov
adc
xor
adc
dec
icebp
popf
mov
jne
mov
jl
fsubrs
les
aas
xchg
cmp
push
lahf
or
ret
outsl
ret
push
sub
test
test
cli
mov
push
cmp
lcall
cmpsl
xchg
das
ja
inc
aas
inc
mov
mov
std
mov
pop
jnp
xorl
or
loop
or
cmc
mov
or
mov
aas
or
add
adc
movsb
add
adc
call
mov
mov
cwtl
jmp
dec
popl
out
mov
push
sub
lods
aas
lcall
jmp
lea
mov
ret
pop
add
adc
push
int3
lcall
ficoml
dec
sub
xchg
cltd
mov
loop
push
inc
insb
jp
ds
xor
xor
andb
out
mov
mov
loopne
leave
xor
ds
insl
das
icebp
mov
jns
mov
fstpl
ds
orb
dec
push
inc
push
das
cli
fdivl
xchg
addr16
mov
cmp
jecxz
mov
lods
das
rcr
or
jns
scas
sub
in
in
or
pop
sub
out
ret
jne
mov
adc
lret
imul
jmp
sbb
pop
int
roll
scas
adc
mov
xor
and
test
and
mov
add
xchg
pop
push
xor
mov
fwait
pop
push
cmpsb
aaa
jno
xchg
je
in
push
icebp
in
idiv
pop
and
sbbl
sti
mov
in
sbb
and
lcall
push
sbbl
sub
jmp
pusha
inc
js
add
push
inc
push
insl
mull
mov
addr16
push
mov
aas
sbb
dec
xor
sti
pop
inc
out
xor
popf
mov
sub
cs
mov
push
fcomps
lock
xchg
in
xchg
pop
xchg
sbb
movsb
mov
inc
cmpsl
pusha
aam
jg
and
inc
jmp
cmp
xor
mov
dec
add
mov
loop
fidivrs
mov
push
mov
sbb
jo
leave
xor
pop
out
movsb
aam
inc
inc
or
fdivrl
mov
cmp
aas
fmul
push
loop
cmpsb
xlat
lsl
es
adc
fs
jmp
fiaddl
sahf
sub
push
xor
inc
lock
aaa
sbb
jg
out
mov
push
inc
pop
scas
out
inc
pop
movsb
inc
test
in
cmp
lahf
mov
mov
movsl
mov
mov
scas
cld
or
xchg
add
outsb
sbb
xor
shrb
in
inc
inc
dec
ret
les
jo
dec
gs
push
sub
or
into
add
ja
jno
xchg
mov
cmp
pop
jl
mov
rcll
lret
sub
call
jg
roll
xor
aam
and
in
cwtl
lock
fiadds
orb
or
arpl
cs
fsubrs
shl
int3
pop
cmp
add
test
dec
movhps
or
aaa
push
dec
and
fbld
inc
mov
xchg
push
test
sub
stos
rcr
mov
mov
sbb
es
adc
xchg
add
sbb
pop
inc
fsubrs
inc
mov
in
mov
jmp
ret
shll
xor
test
popf
outsl
jg
call
fwait
inc
pop
cwtl
push
lds
mov
dec
jb
mov
outsb
iret
xor
add
out
in
jns
inc
or
sub
mov
sti
leave
iret
push
scas
adc
and
out
mov
or
xor
sahf
data16
int
pop
test
nop
xchg
out
mov
pop
in
sbb
add
dec
sbb
sti
stos
inc
sub
add
mov
cld
push
fstpl
and
mov
or
jmp
and
or
loopne
aam
pop
mov
inc
ret
scas
lods
dec
cwtl
lods
sarl
ret
rcl
mov
jmp
loopne
mov
xor
mov
lret
ret
jae
fsubp
pusha
ljmp
xor
push
pop
add
sbb
and
mov
xor
pop
mov
in
dec
pop
jbe
inc
xor
push
filds
inc
mov
dec
fdivrl
iret
pop
in
shrb
imul
mov
adc
fildll
das
jecxz
test
and
jp
outsb
adc
ljmp
jns
in
arpl
sbb
sbb
mov
movsl
dec
fisttps
pop
jno
mov
jae
mov
stc
sbb
inc
dec
adc
push
lea
movsb
ds
pop
shrb
and
sub
jge
in
xor
mov
cmp
dec
or
push
push
xchg
sbb
ja
loopne
sub
inc
pop
call
add
xchg
nop
int3
shlb
push
adc
lcall
mov
jle
cmp
scas
movsb
xor
into
scas
cmp
inc
push
sbb
pop
mov
add
rol
push
cmpsb
dec
pusha
jns
dec
sbb
loopne
sub
arpl
add
pop
insb
fcmove
in
push
pop
out
sub
mov
jo
jecxz
jmp
das
xchg
xchg
inc
nop
dec
ror
mull
mov
mov
pop
test
lcall
into
repnz
jns
fidivrl
mov
cmp
movsb
push
xor
shrb
dec
ja
pushf
orl
out
or
cmc
mov
scas
mov
fnstsw
dec
mov
daa
mov
push
pop
icebp
sbb
sbb
inc
ret
push
repz
inc
or
inc
mov
test
fmuls
or
repz
loope
stos
lcall
sub
push
flds
out
lret
xor
mov
pop
loop
popf
shr
dec
dec
adc
dec
inc
stos
mov
jb
jmp
dec
cmp
inc
ror
cmpb
enter
lret
pop
dec
mov
or
add
fs
fnstcw
fisttpl
cmpl
lods
and
xchg
stos
inc
repnz
cmp
fstpt
cmp
aad
stc
adc
cmp
js
mov
lret
fnstsw
bound
cmpsb
sarl
dec
jge
jbe
mov
daa
sub
push
fisttpl
lahf
repnz
or
mov
push
pop
fcmovu
nop
cs
imul
mov
fcmovnbe
mov
xchg
stc
inc
push
ljmp
pop
mov
inc
fwait
sbb
outsl
pop
ret
push
fidivrl
fsub
add
in
cmp
pop
divl
push
cwtl
sbb
in
movups
ds
jmp
pop
push
push
push
mov
push
cmp
fs
ret
lods
mov
mov
mov
jo
nop
sbb
pusha
sub
add
xchg
or
and
xchg
push
push
imul
xor
sbb
nop
das
cmpsl
add
mov
nop
mov
mov
out
stos
sbb
lret
pop
mov
imulb
shrl
mov
sub
jecxz
movsl
sub
lock
sti
subl
xchg
dec
and
aas
mov
dec
lods
jmp
cmpsl
fisubrs
divl
dec
xchg
mov
mov
sbb
inc
jo
and
int3
xor
inc
dec
inc
dec
in
sub
insb
inc
daa
sub
sub
popf
popa
pop
inc
ds
mov
lcall
xor
leave
shr
jle
xchg
pusha
or
sahf
fstl
icebp
mov
sahf
aam
sub
icebp
fldt
mov
scas
jp
mov
xchg
and
and
adc
loop
push
imul
add
jl
sbb
or
jmp
sahf
adc
in
ret
push
jmp
adc
push
les
js
jns
arpl
out
or
int3
ss
test
call
jns
mov
sbb
mov
xchg
cltd
imul
sbb
xor
dec
data16
mov
clc
push
dec
xchg
lock
cli
rcll
sbb
adc
xchg
inc
cmpsl
pop
jb
std
pop
mov
inc
mov
sbb
sub
cmp
xchg
push
mov
test
xor
jl
sbb
and
adc
aam
rcl
insb
xor
sub
scas
fldl
mov
imul
jp
cmpsb
sub
push
sahf
push
adc
clc
adc
test
or
mov
pop
jg
sti
push
push
push
dec
imul
fimuls
push
sbb
sub
pop
into
mov
mov
ret
andl
mov
dec
sub
push
or
out
add
push
mov
ret
push
pop
jge
loope
mov
and
stos
adc
pop
aad
andl
iret
jns
cmp
push
gs
jle
outsb
sub
rcl
mov
adc
inc
mov
jmp
pop
adc
je
mov
xchg
adc
ljmp
stc
popf
popa
cmp
add
filds
push
mov
test
lods
mov
pop
cltd
xchg
loope
repnz
lods
test
jmp
add
fcomp
mov
and
out
jnp
clc
xchg
sub
add
dec
dec
test
into
mov
sbb
fstpt
insl
jg
mov
stos
push
call
sub
and
nop
fs
dec
fldl
fs
jne
mov
sbb
repz
fidivrs
xlat
mov
decl
sbb
cmpb
fisubrs
sbb
mov
dec
leave
jo
cltd
hlt
int
cltd
ret
imul
cmp
sub
stc
dec
jl
and
mov
out
subl
jl,pn
sub
add
daa
mov
xchg
cld
xchg
pop
aas
jns
movsb
addb
imul
sbb
aaa
call
outsl
adc
sbb
xchg
mov
inc
push
in
sbb
cmp
cltd
sarl
inc
fld
test
icebp
or
jl
ja
xor
inc
push
sub
push
cmp
das
loop
jbe
imul
out
data16
std
rcl
add
sbb
cmp
mov
push
int
gs
test
or
sbbb
dec
loopne
sub
sub
sbb
cmp
or
sti
xor
and
std
jnp
dec
or
ljmp
fs
jne
movsb
jnp
and
inc
insl
sub
push
dec
jmp
adc
clc
leave
clc
bound
push
jb
mov
arpl
cmpsl
ljmp
push
pop
aaa
push
fs
or
sbb
sub
inc
ret
sti
inc
aad
sbb
in
mov
popf
sti
pop
dec
add
sub
rclb
jle
mov
ret
inc
cmp
pop
dec
in
in
adc
and
mov
cld
pop
popa
xchg
aam
inc
lds
or
mov
movsl
fdivrl
xlat
pushf
adc
and
sub
xchg
mov
rorl
orl
lcall
cs
pop
shll
and
fisttpl
pop
sub
cmp
js
mov
pop
cmp
inc
xor
jmp
js
jp,pn
into
inc
xchg
shrb
movsb
test
hlt
xor
mov
pop
lcall
mov
mov
or
cltd
pop
jl
mov
mov
fmul
adc
push
push
push
mov
cld
frstor
pushf
fstps
rol
pushf
mov
mov
insl
xchg
push
jne
insb
jmp
inc
sbb
dec
mov
mov
cltd
leave
cs
mov
and
imul
rorl
fdivs
fucomi
jae
shlb
test
cmp
xchg
dec
loope
incb
push
scas
xchg
aad
jecxz
xchg
enter
inc
xchg
cmc
out
dec
and
mov
lcall
push
mov
aad
mov
inc
push
jbe
dec
repnz
mov
pop
insl
pop
sahf
inc
sub
cmc
lock
and
fwait
push
pop
add
push
rorl
repnz
cmp
jo
mov
or
or
cmpsl
sahf
nop
aaa
call
aaa
test
push
jno
add
scas
es
loope
imul
mov
mov
test
jp
mov
sbb
push
xchg
sub
dec
adc
jno
das
jae
jbe
cli
mov
sbbl
outsb
xor
popf
cwtl
dec
or
cmp
loop
cltd
pop
pop
out
ljmp
jp
add
or
es
mov
pop
sahf
xchg
stos
call
xor
cwtl
lret
lods
addl
or
std
std
test
pop
arpl
push
sbb
shrb
andl
push
pusha
fildl
pop
push
inc
data16
push
push
sbb
and
cltd
scas
roll
hlt
push
sub
aad
mov
or
xor
jecxz
xchg
adc
pop
push
repnz
loopne
push
lock
and
push
arpl
dec
mov
and
cmp
outsl
mov
mov
loope
imul
dec
inc
adc
bound
rclb
sbb
dec
out
xlat
sbb
or
gs
int
dec
mov
aad
add
aam
mov
sbb
mov
lcall
pop
jo
enter
test
or
and
shll
out
cmp
rorl
ljmp
lds
sub
pop
pop
iret
movsb
jae
shl
xchg
pop
mov
and
lret
push
push
dec
and
dec
aas
repz
dec
jo
adc
movl
aas
sub
shl
imul
inc
dec
shll
and
clc
loop
xor
mov
call
mov
into
push
dec
sub
push
icebp
es
push
and
insb
lahf
push
into
xchg
fdivrs
push
daa
in
scas
lret
xor
mov
pop
test
or
jb
aam
cmpsl
lcall
dec
dec
and
mov
loopne
mov
and
imul
jo
push
or
mov
imul
das
not
jge
add
sub
movsl
subl
ja
into
stc
jbe
mov
fs
loope
inc
scas
inc
cmp
rcll
cmp
and
subb
jae
lods
adc
imul
sub
imul
repnz
add
cltd
pop
out
sarl
scas
inc
sub
xchg
and
mov
and
jg
icebp
mov
dec
arpl
push
push
push
in
add
rorl
jmp
cmp
outsl
adc
jecxz
mov
pop
or
jge
lret
imul
shr
iret
adc
gs
arpl
out
xlat
jnp
push
rolb
fisubl
mov
dec
push
fimuls
xor
vmovshdup
minps
out
out
add
fimull
cmpb
push
mov
outsb
ret
rorb
mov
clc
out
mov
dec
inc
and
mov
pop
mov
or
ss
pusha
mov
rcrl
adc
daa
cmpsb
ret
xor
lods
xchg
int
add
cltd
pop
push
add
and
pop
inc
addb
fidivrs
fisubrl
push
popf
iret
es
pop
aad
out
addr16
nop
cmc
fldenv
loop
int
faddl
nop
pop
pop
int3
mov
or
push
pop
sub
cmp
repz
fnstsw
popf
cli
cmp
movsl
sub
ds
sbb
push
cmp
inc
rorl
mov
mov
mov
fnsave
pop
inc
add
add
pop
dec
lret
mov
jecxz
inc
add
enter
add
es
ds
mov
cmp
cmpl
inc
popa
into
sub
xchg
cmc
pushf
nop
fsubrp
xorl
mov
lods
icebp
mov
mov
into
outsl
jbe
stos
and
adc
inc
aaa
int3
pop
iret
sti
jo
xchg
out
hlt
loopne
bound
in
je
push
sbb
add
stos
xchg
fildll
pusha
sbb
fidivl
jecxz
in
out
lds
pop
jns
or
push
lret
fsubl
popf
fisubl
gs
dec
data16
lret
mov
xor
or
mov
sti
mov
xchg
jne
inc
rclb
push
inc
inc
xchg
fmull
rorl
loopne
or
add
in
inc
push
mov
scas
loop
jmp
mov
sbb
inc
sarb
icebp
stc
pop
push
jle
aaa
neg
mov
addb
mov
jbe
sbb
mov
or
ds
inc
cld
test
cwtl
pop
andb
mov
mov
rcll
cmp
fiaddl
sub
in
push
ficoms
mull
mov
stc
sub
icebp
dec
ret
outsl
mov
cmc
arpl
fcmovnu
xchg
into
cs
int3
fs
shl
lods
cmovo
bound
pop
lods
gs
loop
sub
jns
add
lcall
popa
scas
lret
xor
lahf
xor
adc
jecxz
andb
lcall
shl
dec
mov
xchg
rorb
pop
popa
push
sbb
ljmp
sub
mov
pushf
jb
sub
fmulp
lret
notb
test
in
push
adc
mov
pushf
cmp
bound
jae
shl
cld
or
iret
mov
jae,pt
cmpl
popf
pop
cltd
push
xor
adc
stos
push
movsl
xor
jne
cmc
xor
dec
mov
adc
cmpl
push
sbb
test
dec
in
and
push
jb
cmp
mov
cs
shrl
add
int3
xor
ficoms
imul
mov
ljmp
or
sbb
mov
sbb
jne
xchg
rol
call
das
dec
cmc
sub
mov
fisttpll
mov
out
push
pushf
inc
scas
js
xor
shrl
mov
mov
mov
clc
fstpt
in
adc
lds
add
imul
xor
xchg
xor
cmp
stc
mov
icebp
stos
inc
adc
sbb
test
mov
int
shlb
push
repz
pop
sub
mov
stos
add
sub
jno
cmp
inc
push
inc
lret
add
hlt
cltd
outsl
jle
sbb
mov
jbe
lds
adc
and
hlt
sti
sbb
test
cmc
scas
bound
push
xchg
and
movsl
gs
roll
movl
cmpsl
fs
jbe
rclb
jle
pop
das
pushf
in
lcall
push
loopne
cmp
aam
dec
pushf
out
mov
xorb
icebp
adc
fdivrl
jo
je
out
mov
cmp
rorb
cmp
cs
shl
iret
or
add
cli
pop
mov
inc
testl
add
lds
jb
jl
dec
into
jle
add
sub
ss
dec
lret
dec
xor
mov
xor
adc
arpl
xchg
ds
rcrl
jnp
imul
dec
lcall
xchg
arpl
daa
and
mov
mov
mul
lret
jb
lds
lret
push
inc
jle
clc
jmp
in
cmp
sub
inc
andb
cmc
pop
shr
ret
pop
rcll
mov
mov
push
dec
sbb
ret
fisubs
xchg
push
cmp
ret
dec
shrl
inc
xor
insb
lods
jo
stc
mov
mov
rolb
push
pop
jl
ds
sbb
fs
sub
sub
test
or
and
ds
lds
adc
mov
adc
push
repnz
mov
cwtl
pop
nop
pop
pop
movsl
idivb
lret
and
movsl
xchg
mov
bound
sti
sbb
lods
and
fmuls
pop
xchg
test
cwtl
mov
mov
push
lock
mov
mov
test
out
or
jg
insl
sbb
sar
cmp
mov
sub
data16
xor
jle
in
push
adc
push
imul
into
mov
pop
push
fsts
mov
lods
lods
enter
add
out
je
inc
insl
jl
sarb
test
sub
mov
in
shll
push
mov
mov
mov
adc
cmp
sets
loop
fldt
stos
rcll
sub
insl
pop
and
mov
pushf
ds
out
out
movsl
stos
cmc
shll
aas
arpl
cmp
add
push
nop
btc
dec
dec
dec
sub
shll
lds
addr16
stc
movsb
repz
pusha
xchg
cmp
sub
movsb
sub
stos
js
rclb
jnp
sahf
add
mov
and
arpl
xlat
pop
lock
push
mov
pop
xchg
mov
and
mov
sbb
adc
lahf
insl
test
xchg
ds
ss
inc
or
sub
aad
mov
jb
jns
cmp
push
cmpsb
xchg
or
in
sarb
xor
inc
out
mov
fdivl
aaa
cmpsl
cltd
aam
or
stos
sbb
jge
push
jne
jne
loop
lods
pusha
adcb
pop
lods
bound
add
ss
test
inc
cmp
mov
jp
dec
dec
mov
ja
icebp
mov
cmpsb
mov
scas
rolb
add
ja
enter
sbb
mov
adcb
imull
adc
and
insl
cmp
adc
adc
test
adc
dec
dec
cmp
jo
mov
std
xchg
iret
arpl
orb
mov
mov
mov
iret
or
sub
cmp
add
mov
mov
sbb
lea
xchg
adc
mov
dec
ficompl
ret
mov
adc
xchg
inc
mov
ljmp
add
insb
pop
into
movl
movsl
cs
outsb
inc
push
lahf
aas
pop
loope
sub
mov
js
aaa
or
rolb
sub
call
stc
push
mov
or
into
xchg
popa
lods
xchg
and
pop
dec
xor
adc
pop
aas
je
imul
inc
mov
pop
xor
cs
push
cmp
fs
std
push
in
jne
jmp
lock
shl
jo
shl
stos
jge
adcb
insl
in
mov
and
into
lahf
push
and
dec
mov
jg
test
mov
addr16
mov
cmp
xor
and
nop
shlb
jns
daa
jl
ss
jle
ds
lea
scas
pop
jg
or
scas
out
mov
pop
pop
fwait
popf
lds
insb
cmp
mov
sbbl
sahf
loopne
call
mov
and
mov
cld
jo
jnp
aas
dec
cs
jbe
imul
loopne
push
sbb
inc
fisttpll
outsb
shlb
mov
adc
jne
xchg
out
fwait
pop
jl
push
shll
push
mov
andb
push
aad
push
sub
and
test
rclb
int3
addr16
jnp
mov
mov
fisttpl
mov
pop
testb
in
adc
js
adc
int3
call
aad
ret
outsl
mov
sub
sbb
xchg
pushf
xor
jo
pop
sti
fstpt
cmpsb
std
push
lods
sub
imul
cmp
xchg
bound
cmpsb
xorl
lcall
xchg
jae
pop
les
jmpw
mov
jecxz
jbe
jnp
cmpl
paddw
mov
enter
subb
imul
in
and
pop
sub
inc
add
push
pushf
out
push
and
imul
push
jg
jge
roll
in
mov
pop
mov
mov
jb
pusha
in
xor
and
push
sbb
enter
mov
stc
mov
orb
xorl
push
dec
pop
sub
lret
jecxz
je
push
in
int
arpl
popa
imul
mov
inc
js
les
push
aad
dec
pushf
roll
je
mov
out
aaa
insb
xchg
push
mov
jmp
in
mov
pop
mov
shld
mov
inc
cmp
fstl
adc
loop
pop
test
fildll
add
js
or
data16
loope
inc
pop
sti
fsts
mov
jnp
push
js
jbe
adc
in
fistl
stos
sbb
xor
dec
leave
adc
lods
cmpsb
and
push
data16
xchg
mov
out
mov
jno
fs
mov
scas
gs
sarl
mov
pop
sbb
xchg
leave
outsl
dec
loop
add
add
fdiv
ja
and
out
or
inc
jnp
pusha
clc
cs
mov
push
jb
les
in
jl,pn
mov
sbb
and
ljmp
fisttps
out
pop
inc
jp
pop
mov
fistpll
inc
and
mov
xchg
push
popa
xor
jmp
inc
push
dec
fisttps
rcl
xor
fstl
mov
pusha
cmovnp
in
xorl
dec
mov
lock
xchg
jmp
lds
push
in
inc
mov
mov
stos
stc
cmp
mov
rcrl
push
cmp
push
adc
pop
data16
int3
loopne
lea
scas
sbb
sub
pop
inc
mov
hlt
mov
pop
sbb
sbb
enter
dec
leave
cmpsl
dec
aaa
or
fdivrl
and
jp
jg
outsl
jae
subb
adc
cmp
sbb
lods
or
es
mov
fsubp
push
mov
xchg
scas
shlb
dec
adc
push
inc
mov
das
pop
add
mov
sar
mov
gs
adc
mov
jno
push
sub
rcrb
mov
cld
popa
sbb
add
mov
popa
xchg
mov
or
test
inc
sub
movsb
fstl
mov
push
in
sahf
or
sub
mov
adc
fcomps
mov
shrl
fwait
bound
and
out
fiaddl
cld
fsts
mov
xchg
adc
lock
roll
pop
sar
and
jp
test
das
sbb
dec
dec
push
mov
nop
push
jnp
xor
mov
ftst
hlt
ret
and
mov
sarb
in
cmpb
push
pusha
inc
push
dec
call
pop
imul
leave
je
push
push
and
inc
fxch
pop
addr16
dec
push
insl
sbb
shlb
xorb
testb
stc
mov
sub
mov
add
xchg
ficomps
test
mov
cmp
and
xor
or
xor
icebp
cltd
or
data16
out
add
xor
mov
xlat
shrl
sti
mov
push
lcall
out
cmc
push
add
icebp
and
std
adc
push
add
imul
or
pop
addr16
mov
xor
in
xor
mov
out
push
xor
mov
lea
in
and
xchg
mov
jns
fsubp
lods
xchg
dec
pop
adc
inc
jne
sbb
jl
xor
sbb
test
jae
xor
fisubs
mull
mov
test
push
dec
xor
mov
jo
cmp
pop
sti
xchg
mov
repz
adc
test
mov
push
ja
pop
loop
xchg
or
and
push
dec
ret
enter
icebp
mov
inc
push
addr16
adc
adc
sub
sbb
pop
sbb
sahf
dec
push
sbb
xor
fwait
shrb
push
js
daa
inc
inc
call
adc
mov
stos
lds
bnd
pop
and
outsb
imul
adc
jb
hlt
pop
mov
cmp
test
movq
pusha
fiadds
jne
fs
dec
sahf
out
mov
orl
xchg
push
loope
lcall
mov
cltd
enter
into
mov
sub
in
icebp
inc
ret
or
jae
fldl
push
imul
fs
push
mov
pop
pushf
pop
mov
mov
dec
gs
stc
in
int3
fadd
or
cmovne
lea
std
arpl
pushf
inc
repnz
inc
test
jbe
push
sbb
xor
jecxz
xchg
mov
cli
sbb
and
push
and
jp
filds
mov
cmp
scas
jae
lea
test
lods
gs
sti
mov
lea
scas
sub
mov
movsl
mov
subps
out
jnp
sub
adc
and
push
ret
cmc
jge
adc
sarb
push
divb
adc
sub
fisubrl
sub
add
out
mov
mov
and
cmp
dec
sbb
mov
or
dec
and
xor
xor
and
mov
mov
les
sub
hlt
mov
fs
popa
add
ret
enter
jg
aaa
dec
xlat
pop
or
adc
cmpsb
mov
pop
xchg
ss
push
lea
cmp
loopne
xchg
xchg
int3
push
js
shrl
add
test
jecxz
lods
and
jns
dec
xchg
es
xchg
push
enter
push
int3
sarb
repz
jnp
loop
cmp
inc
adc
add
les
sbb
sbb
jg
and
cmp
jg
std
es
push
and
ja
lahf
cli
subb
and
sahf
lods
jns
loopne
or
test
jp
daa
es
and
dec
mov
pop
test
js
sbb
fwait
bound
fwait
mov
pop
cli
clc
xorl
cmp
cmp
ds
lret
nop
and
dec
pushf
add
fs
mov
jle
sbb
lds
loopne
jne
jo
xor
das
rcr
and
xlat
arpl
test
jae
jns
stc
ret
jo
nop
push
iret
testl
call
pop
int
in
sub
sbb
sbb
cmp
out
inc
subb
fnstsw
dec
pusha
mov
dec
in
shl
insl
push
mov
push
push
mov
imul
or
dec
call
hlt
imul
aam
and
iret
inc
push
aaa
dec
int3
popa
notl
xor
ja
or
xor
pop
mov
fimuls
or
sbb
pop
scas
inc
xchg
pop
sbb
andb
push
fwait
dec
cmpsb
sbb
call
repz
fidivrl
or
fistl
xor
pop
pop
push
jmp
lret
cmp
neg
or
mov
dec
repz
pop
xchg
mov
jno
inc
mov
and
inc
movsl
sbb
and
push
pop
mov
xchg
jmp
loopne
mov
inc
jl
mov
insb
ret
xor
dec
add
xchg
jbe
or
leave
mov
and
das
aad
ljmp
sub
inc
inc
inc
in
jp
mov
mov
das
cwtl
sbb
jl
inc
popa
fadd
dec
sub
xchg
or
mov
mov
stos
mov
adc
test
pop
mov
ja
cmpsb
lret
pop
dec
div
lock
adc
or
jnp
hlt
sbb
lods
imul
stos
bound
shlb
xor
sub
cli
add
push
add
jmp
fnsave
and
mov
les
sti
xchg
dec
push
mov
mov
inc
xor
sbb
jne
add
cmp
dec
scas
jmp
ret
inc
pop
xor
push
pop
push
fisubs
lods
mov
mov
and
lds
pop
xchg
or
sbb
loop
pushf
jl
xchg
arpl
inc
sub
mov
inc
add
int
pop
mov
jae
push
outsl
jg
ret
in
ss
daa
mov
adcb
push
int
push
jmp
jb
add
xchg
inc
fadds
movsb
inc
sti
mov
dec
cmc
and
outsl
adc
and
mov
inc
imul
out
lock
jae
push
loope
add
clc
sub
mov
sbb
shrl
icebp
movsl
pop
cmp
jecxz
cmpsb
jp
imul
pop
lods
sbb
pop
mov
lods
xchg
lahf
cmc
mov
inc
sub
add
outsl
icebp
jae
mov
int
clc
aad
nop
adc
adc
cmp
shrb
scas
mov
icebp
and
adc
scas
lods
stos
adc
mov
lcall
pop
sahf
push
or
je
and
hlt
data16
lahf
xor
and
inc
push
xchg
dec
popf
cmp
pop
je
ja
inc
std
pop
cmpsl
dec
cwtl
pop
pop
insl
fbld
pop
fnsetpm(287
movsb
sub
ds
aas
mov
dec
mov
add
xorl
mov
add
dec
cwtl
push
data16
fwait
inc
mov
ja
sbb
ret
test
lds
cmp
sbb
dec
sahf
subl
xor
inc
inc
lock
ror
mov
pop
pop
adc
mov
mov
lds
mov
lahf
addb
xchg
into
pop
mov
enter
mov
rcpps
push
and
cmp
add
mov
and
xlat
ljmp
adc
inc
xchg
dec
adc
cmp
addr16
mov
in
jge
and
into
mov
pop
xor
or
int3
ret
xchg
jecxz
andl
shlb
dec
mov
pop
xor
push
add
dec
cld
cli
inc
inc
xor
movsb
or
and
lahf
mov
in
shrl
lods
fcomps
pop
insl
rcrl
cmp
or
pop
push
test
insl
xor
xchg
clc
bswap
mov
adc
or
lret
mov
cmp
push
cltd
lock
mov
mov
pop
lcall
or
leave
push
dec
insb
dec
insl
stc
push
xlat
mov
xor
mov
imul
jle
push
in
stos
xor
cmp
ret
insb
or
jnp
pop
insl
sub
xor
inc
test
ficoml
lods
xor
inc
inc
lds
push
cmp
addl
cld
xchg
mov
sub
sbb
loop
xor
leave
dec
rcrb
xchg
inc
push
sub
enter
adc
mov
lret
pushf
push
push
movsl
xchg
adc
and
fcmovbe
sbb
add
imul
sub
cmp
call
adc
jae
ljmp
mov
sti
aaa
cmp
cwtl
icebp
pusha
ret
lds
and
jnp
push
test
pop
or
mov
movsl
pop
sub
add
sbbl
sbb
or
aad
xlat
in
dec
cmp
iret
mov
pop
cld
stc
adc
cld
xchg
add
je
jo
outsl
mov
pop
adc
mov
xchg
or
pop
add
std
lret
or
sti
inc
jle
ss
push
add
dec
or
xchg
lcall
fwait
push
inc
ficomps
cmpsb
sub
inc
or
xchg
push
cmp
outsb
aad
jb
add
add
xor
movsl
outsl
scas
pop
xchg
push
ret
in
in
jo
jg
and
pop
aaa
loope
aad
lea
lock
push
sub
sbb
add
add
xchg
jl
inc
enter
popf
and
add
add
pop
lods
mov
ret
popa
or
mov
cltd
xchg
jbe
das
push
xchg
in
cmp
mov
adc
out
push
out
dec
punpcklbw
pop
test
clc
mov
pop
stos
les
rorl
outsl
out
mov
das
sbb
and
imulb
push
cld
mov
aaa
incl
push
filds
aad
xorb
lods
les
xor
push
adc
enter
lods
pop
aaa
sbb
mov
mov
mov
inc
jp
mov
js
iret
xor
dec
xlat
into
je
pop
stos
fisttps
cmpsb
test
leave
jecxz
data16
xchg
jne
leave
aam
mov
out
imul
stc
inc
push
sbb
cmp
je
addr16
push
and
pop
jns
fucom
or
addr16
ljmp
dec
les
rcrl
stos
mov
cmp
jmp
dec
or
clc
inc
lcall
pop
ja
and
mov
test
sub
cmpb
lahf
enter
sar
leave
xchg
pop
mov
or
push
jle
mov
les
pop
rol
mov
test
leave
push
cmpsb
insl
xchg
leave
sub
xlat
mov
mov
sbbl
xchg
out
fsub
mov
jae
dec
dec
sbb
arpl
pop
lret
sub
push
sbb
xchg
or
sahf
pop
je
xchg
or
cmc
insb
arpl
cmp
imul
aam
inc
js
js
nop
cmp
movmskps
xchg
and
sar
pop
insb
jp
sarb
adcl
lods
test
fisttpll
or
clc
test
insb
aam
cmp
xor
and
pop
cmp
pop
adcl
sbb
inc
adc
adc
xchg
loop
fsubrs
xor
lock
scas
and
cmp
xchg
sahf
enter
mov
test
hlt
test
or
mov
addr16
std
out
xor
add
mov
jmp
movsb
push
lock
xor
add
push
popf
sub
dec
xchg
mov
dec
xchg
int3
mov
sbb
xchg
sbb
les
pushf
pop
xchg
cmp
pushl
ds
pop
xor
cmpsl
outsb
hlt
jbe
hlt
jl
clc
ret
loop
mov
jne
mov
sbb
and
pop
adcb
xchg
mov
sub
cmc
lret
mov
dec
add
xor
frndint
repz
cmpsl
jecxz,pn
jb
in
pop
scas
imul
xor
jmp
dec
std
stc
pop
xor
push
sub
inc
adc
cmpsl
mov
pop
pop
sbb
jl
inc
call
fadds
fdiv
jg
js
pushf
mov
and
das
aam
lods
add
fld
loope,pt
lea
js
sbb
jo
push
xchg
inc
xchg
test
cmp
mov
and
lods
xchg
adc
mov
adc
adc
insl
mov
sub
lds
in
or
test
imul
cmp
or
jno
jle
mov
loop
pop
xlat
dec
das
mov
lock
outsl
sub
or
arpl
push
in
adcb
int
sbb
popa
add
adc
xor
out
jne
leave
dec
dec
pusha
xor
addr16
mov
aad
std
mov
ds
out
add
mov
cld
lret
cmp
pop
mov
inc
mov
insl
mov
inc
push
mov
sub
mov
cmc
fidivrs
xchg
xchg
inc
mov
adc
sub
lock
es
cs
add
je
cmp
mov
jnp
leave
ficomps
add
pop
ret
jmp
pop
mov
stc
xor
mov
mov
nop
stos
push
jnp
dec
push
mov
dec
cmp
push
jnp
ret
cltd
xchg
mov
int3
cmp
push
dec
lret
insb
out
outsb
xor
push
push
xor
jmp
push
sub
dec
push
out
pop
addr16
jg
dec
sub
push
test
sub
jl
sbb
mov
mov
fisttps
fimuls
test
and
pop
mov
mov
in
or
mov
push
ret
xchg
mov
cwtl
push
rcll
xor
pop
ret
and
shrl
inc
out
shll
push
sbb
xchg
sti
test
xor
enter
ljmp
sarb
dec
and
jnp
or
out
dec
ja
mov
mov
fbld
mov
xor
pop
scas
call
hlt
dec
mov
jge
cmpsl
mov
xlat
pop
dec
jae
mov
xor
lret
pusha
decb
hlt
shll
jb
call
imul
cmp
pop
hlt
dec
inc
jb
fnstcw
xor
inc
adc
mov
bound
shlb
dec
in
call
mov
pop
push
lret
xchg
inc
cltd
pop
mov
jmp
into
rclb
cli
push
jmp
lret
movsl
lret
push
lds
jmp
jp
test
push
add
adc
cmp
repnz
push
fiaddl
movsl
mov
cmp
aad
add
mov
mov
mov
xchg
shll
or
aaa
andb
fs
movl
push
adc
inc
rorb
dec
inc
push
add
pop
sbb
in
cld
insb
push
mov
sub
arpl
ret
js
push
out
mov
fucomp
out
shlb
outsl
jle
inc
jle
sub
les
cmc
or
fistps
adc
xor
icebp
pop
xchg
shrb
mov
bound
fiaddl
dec
mov
dec
into
push
pop
push
js
mov
add
sahf
cmp
push
push
flds
cmpsl
sti
sbb
mov
and
sub
test
adc
or
or
jmp
jmp
push
pushf
inc
jns
mov
hlt
or
sbb
or
xorl
iret
aas
popl
or
cmp
xchg
or
ljmp
jp
loope
sti
pop
in
lods
in
daa
imul
outsb
aas
mov
out
sbb
jecxz
pusha
rcr
cmp
fdivr
bound
mov
pop
adc
sub
call
mov
cmp
inc
in
outsb
jb
cmp
inc
xor
dec
mov
jecxz
sub
mov
popfw
mov
in
push
add
mov
pop
into
mov
sarb
popl
xchg
ret
movaps
sbb
icebp
and
lods
or
push
jns
out
nop
mov
add
and
push
stos
int3
jp
mov
loope
xor
mov
push
mov
int
cmpsb
rcrb
adc
fildl
mov
rcll
lret
aas
mov
lret
jbe
mov
sbb
mov
insb
dec
adc
dec
std
test
sbb
and
mov
dec
cmpsb
mov
cld
xchg
ljmp
dec
lcall
mov
das
or
cmp
sub
cmp
mov
mov
cli
sbb
aaa
sub
adc
mov
add
xor
fxtract
aaa
movsb
inc
jae
scas
dec
mov
or
xor
push
fucomp
xchg
xor
push
cmp
test
lock
scas
stos
pushf
gs
and
cmpsl
iret
mov
cmp
fsts
std
and
ficompl
xchg
lods
shrl
stos
aas
fs
and
xchg
jmp
mov
push
or
int3
jmp
xor
cmpsl
aas
gs
and
and
jle
mov
adc
xchg
out
and
out
cmpsb
and
jne
jge
out
or
xlat
and
aam
out
or
sbb
pop
mov
rorb
stos
sub
fcomps
insb
je
push
in
cmp
imul
test
test
or
push
mov
or
js
popa
or
inc
jecxz
mov
mov
dec
mov
in
vpmullw
lcall
or
ljmp
jg
mov
das
cli
or
sub
in
arpl
jmp
lea
push
jl
nop
dec
mov
inc
pop
cmp
aaa
add
mov
push
sahf
sarl
jb
imul
mov
mov
dec
push
fdivrs
roll
stos
test
insl
jae
sbbb
jg
cmp
call
insb
rcrb
mov
xor
data16
std
jle
rcll
push
js
cltd
add
sahf
jp
enter
cmpl
ja
mov
and
adc
xor
xchg
rcrl
fidivrs
pop
das
sub
push
addr16
mov
add
dec
scas
pop
adc
scas
lods
test
scas
imul
cmp
mov
lock
mov
and
add
cld
inc
jp
or
test
shll
clc
lret
cltd
mov
fcompl
push
jmp
addl
and
outsb
fists
jecxz
xor
out
mov
push
and
scas
cmp
daa
test
push
out
lods
jne
mov
sub
jno
out
jbe
adc
dec
pop
sub
xor
push
fsubrs
push
pop
leave
xchg
lea
enter
dec
jmpw
test
jnp
filds
popa
mov
sub
out
pushf
mov
mov
cmp
ret
sbbb
les
mov
sarb
orb
in
xchg
lock
xchg
mov
sbb
pop
inc
int
nop
xor
mov
inc
sbb
daa
bound
test
jmp
mov
fs
popf
cli
scas
xlat
dec
in
jae
test
pop
sti
mov
sub
mov
dec
sub
les
inc
push
push
test
jecxz
xorl
iret
mov
xor
xor
scas
or
idivb
pusha
out
push
and
add
inc
adcb
dec
mov
xchg
lea
jp
lock
mov
shlb
pop
mov
mov
pop
jge
das
push
xor
inc
mov
scas
jle
dec
aas
in
push
adcl
push
arpl
and
pop
shlb
outsl
arpl
push
mov
adc
inc
iret
adc
loop
orb
or
mov
ds
into
xchg
cmp
loope
pop
into
pop
inc
in
les
je
add
cli
xchg
mov
adc
in
lock
stos
pop
xchg
js
es
inc
inc
pusha
adc
jno
mov
xchg
push
mov
push
mov
mov
ljmp
push
and
scas
cltd
pop
lods
xor
cmpb
cmp
jbe
dec
in
int
jecxz
push
and
ss
xchg
or
pusha
xchg
jae
scas
shlb
orl
mov
fnclex
mov
push
imul
lods
movsl
mov
les
fnsave
icebp
cmp
shll
dec
and
nop
jne
sbb
test
in
ss
lcall
adc
mov
shrl
rcrl
stos
dec
fcompl
or
sbb
into
mov
test
aas
jg
inc
mov
dec
push
inc
inc
and
pushf
and
push
add
xlat
xchg
mov
jge
inc
les
pop
push
movsl
xchg
push
ret
scas
test
pop
mov
xchg
xor
loope
daa
adc
fiadds
jmp
and
stos
mov
pop
fs
sbb
sbb
inc
cli
mov
cmp
bound
lahf
xor
cmp
bound
scas
dec
push
mov
mov
jl
cmpsl
mov
mov
in
aas
pushf
in
mov
jp
cmp
pop
je
fisubs
and
cmpsb
pop
icebp
jmp
aam
bound
inc
loope
xlat
or
cmc
and
adc
icebp
test
pushf
push
imul
pop
and
test
lret
loope
pop
jmp
mov
adc
and
add
adc
mov
dec
mov
shl
mov
push
push
cmpsb
pop
mov
aas
aas
divl
shll
mov
push
sub
lahf
cld
enter
js
and
cmpl
dec
int
dec
cmp
add
push
jbe
aas
loopne
xorl
leave
pop
mov
jb
push
faddp
jecxz
fwait
stos
sbb
xchg
das
mov
xchg
fnstenv
add
xor
push
cs
and
sti
mov
jle
aam
imul
inc
sub
sbb
mov
imul
dec
xchg
data16
dec
and
jl
popf
cmp
mov
out
add
push
popa
cwtl
xor
sbb
xchg
jo
xchg
dec
stc
dec
out
imul
out
subl
daa
cmp
cmp
divb
push
popa
faddp
and
test
cmpsl
outsb
push
jnp
or
mov
movsl
lret
test
sbb
jle
pop
enter
mov
push
mov
call
sub
pop
lods
pusha
shl
pop
jecxz
test
mov
xchg
aaa
push
out
xchg
jl
adc
add
repz
fisttpll
xchg
pop
mov
cli
push
adc
or
repnz
lds
in
mov
dec
cmpsl
clc
in
js
dec
pop
imul
xor
xor
pop
mov
shll
mov
mov
push
inc
sub
adc
adc
xor
pop
mov
fdivrs
sbb
adc
or
mov
pop
mov
xchg
loope
push
xchg
test
push
dec
dec
sub
jg
and
pop
jbe
in
imul
mov
cmp
les
or
fst
out
nop
inc
sub
arpl
leave
bound
call
addr16
ret
mov
xchg
out
mov
stos
dec
push
sbbl
lcall
dec
loop
cmp
sbb
xor
pop
pop
xchg
test
outsb
lret
adc
mov
sub
xor
inc
shlb
xor
xor
dec
shlb
pop
shlb
add
add
dec
shlb
pop
shlb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
