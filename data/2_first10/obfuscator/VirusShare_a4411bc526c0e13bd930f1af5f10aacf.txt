push
mov
push
push
mov
mov
shr
mov
rep
mov
and
rep
mov
pop
pop
leave
ret
scas
into
jo
push
cmpsb
sub
subl
mov
mov
xor
orl
fs
idivb
jecxz
mov
mov
outsb
adc
adc
div
push
dec
movsb
sub
std
mov
insl
movsb
loop
push
fwait
inc
std
or
xchg
mov
insl
hlt
add
xor
in
cmp
mov
mov
repz
das
mul
fwait
push
cmp
adc
sbb
cmp
divb
xor
mov
stos
jmp
jmp
mov
pop
jne
dec
loopne
movsb
xor
mov
push
sbb
xchg
xchg
movsl
shl
ss
push
es
testb
xchg
mov
clc
xlat
mov
sub
mov
sbb
mov
sub
push
or
cltd
xchg
and
int3
imul
ljmp
jg
mov
mov
outsb
mov
jno
push
adcl
aam
adc
nop
repz
inc
lahf
in
xor
fimuls
push
inc
test
insl
dec
jnp
int
pop
jne
push
and
inc
xor
lods
inc
outsl
mov
loopne
jo
js
xor
xor
rcr
xchg
sub
mov
pop
cmpsb
leave
dec
aaa
mov
nop
dec
shlb
adc
cmp
call
stc
test
addr16
into
iret
and
andl
mov
fmul
sbb
sub
push
sub
cltd
dec
nop
adcb
xor
push
addr16
lods
inc
pop
push
xor
ljmp
dec
lea
xchg
mov
push
xchg
push
bound
jo
mov
jno
divb
push
jl
orl
insl
inc
or
push
sbb
or
jo
jecxz
push
or
loope,pn
push
sub
pop
cmp
and
adc
inc
imul
pop
mov
jo
inc
inc
movsl
push
imul
mov
int3
xlat
adc
mov
push
mov
jbe
jp
jg
popa
push
xor
inc
sarb
scas
fs
cmp
js
addr16
xor
pop
pop
leave
insb
jg
xchg
and
mov
cmp
arpl
xor
dec
pop
adc
mov
dec
lods
xor
push
scas
negl
jo
jns
cmp
sahf
loopne
inc
fcmovu
jbe
mov
js
add
scas
ret
popa
das
aam
enter
imul
fisttpll
sub
add
push
mov
ljmp
add
dec
mov
pop
cli
bound
dec
mov
adc
push
mov
incb
stos
xlat
roll
inc
imul
adc
push
gs
test
je
jb
aam
rcr
data16
jecxz
pop
sbb
jb
mov
pop
mov
mov
nop
xor
mov
and
or
sarb
aad
xchg
push
imul
adc
push
imul
push
add
imul
adc
cmp
pop
and
push
pop
aas
test
test
cs
mov
mov
sbb
xor
outsb
dec
add
test
out
mov
mov
mov
in
fsubs
sarl
fcomip
jg
push
or
sahf
scas
cmp
out
push
das
dec
xchg
adc
mov
mov
iret
push
aaa
test
mov
sahf
xchg
sbb
jg
inc
jo
clc
mov
xchg
push
adc
dec
pop
stos
xchg
test
lret
push
call
cmpsb
xlat
mov
sub
in
cmp
jle
push
lock
push
mov
popf
mov
mov
or
in
loopne
daa
fsubrp
repz
xor
mov
fnstsw
sarb
xchg
out
or
dec
test
insl
sahf
jnp
pop
dec
cli
jecxz
addb
mov
test
jge,pt
imul
inc
aas
xor
mov
mov
mov
hlt
mov
mov
jge
lret
fs
mov
push
js
shrb
cmp
push
jne
jecxz
and
mov
sbb
ret
aam
sahf
ss
aad
dec
sahf
cli
mov
add
bound
cmc
cmp
or
hlt
fimuls
aam
xchg
inc
lcall
int3
adc
mov
jl
outsb
jo
xchg
setno
pop
mov
test
out
sbb
rcl
fiadds
mov
leave
es
jb
cmp
cld
cmp
test
pusha
xor
outsl
dec
pop
xchg
mov
gs
stc
xchg
push
in
push
and
pop
test
imul
add
jl
bound
rcl
sub
push
and
xchg
push
push
cmpsb
aad
sub
jne
dec
xor
in
ret
sub
push
jle
in
nop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
out
pop
cmpsl
pop
add
push
sbb
inc
mov
mov
sub
or
idiv
xor
or
data16
vunpckhps
xor
push
pop
adc
insl
test
dec
jns
stos
in
push
test
push
xchg
stc
sbb
mov
dec
fsubrl
fisttps
sbb
lret
adc
roll
or
pushf
jle
cmc
mov
mov
sbb
bound
adc
mov
and
xor
cmpsl
xchg
clc
xchg
pop
jg
pop
xor
lds
xchg
leave
ljmp
mov
ds
shll
mov
mov
ret
jp
inc
in
xchg
and
sub
shll
sub
addr16
jmp
cmp
inc
out
bound
jne
mov
pop
repnz
dec
pop
jp
in
in
int3
ret
mov
fsts
dec
mov
rep
cmp
dec
inc
test
inc
mov
dec
insl
push
imul
lock
jnp
pop
jmp
inc
out
test
hlt
dec
gs
xchg
and
pop
inc
gs
xchg
in
aam
popf
or
ljmp
rorb
jno
les
push
cmp
les
add
adc
or
ss
bound
cmp
xchg
cmpsb
xchg
push
inc
popf
mov
out
xchg
or
dec
sar
xor
neg
and
movsl
or
mov
xor
push
gs
mov
mov
pop
pop
mov
sbb
push
lret
push
mov
mov
inc
aaa
enter
dec
ja
dec
testl
sub
cmp
jbe
mov
sti
push
pop
adc
jo
push
xlat
out
cmp
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
