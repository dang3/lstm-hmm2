inc
shrb
sarl
outsl
gs
mov
in
pop
push
je
pushf
pop
add
mov
sub
sbb
pop
cmpsb
movsb
pop
inc
push
jmp
inc
rol
mov
add
lea
sbb
inc
aam
mov
testl
jo
fcompl
lahf
stos
lock
mov
mov
pop
mov
es
arpl
hlt
mov
add
lahf
jge
sar
outsl
imul
aam
adc
add
movl
lods
add
jo
adc
ljmp
je
fcmovbe
cmp
repz
mov
add
test
in
adc
loop
push
cld
xor
and
mov
add
lds
add
sbb
dec
ret
xor
outsb
rcrb
sbbl
sub
mov
pop
leave
movsb
mov
scas
call
pop
movl
sub
stc
stos
ljmp
push
jae
cmp
add
pop
das
movsl
ljmp
cmp
add
jo
movsl
out
or
and
lret
and
ret
push
add
inc
mov
push
mov
sub
add
dec
ret
adc
rcrl
pushf
xor
pop
jl
les
push
xchg
pop
insl
and
pop
aas
subb
hlt
jb
push
iret
call
and
push
mov
scas
push
jns
pop
push
cmc
jnp
int3
xchg
subb
add
fstpt
jmp
add
clc
mov
inc
int3
repnz
jbe
nop
pop
add
into
mov
add
add
mov
out
push
test
aam
add
adc
lds
loope
clc
xor
mov
push
jae
shlb
push
mov
or
cmp
rolb
or
cli
lahf
dec
sbb
xchg
pop
pop
addr16
stos
adcb
push
std
cmp
add
test
insb
stos
add
ds
negl
pop
pop
fs
movsb
add
insb
mov
inc
cs
adc
cmp
andl
leave
add
xchg
xchg
pop
dec
pop
lea
pop
sbb
xor
and
adc
sub
outsb
inc
or
adc
pop
sbb
push
aad
or
adc
insb
adc
ds
xor
and
cmp
mov
or
inc
sbb
mov
adc
popa
sub
and
bound
enter
and
inc
in
sti
mov
cmpl
push
outsb
lcall
adc
or
adc
nop
inc
push
adc
sub
push
add
jno
stos
jne
loop
mov
add
jno
adc
and
jae
sbb
inc
inc
movsl
mov
je
push
adc
imul
pop
mov
jo
and
jbe
hlt
adc
daa
jo
arpl
sub
movsb
xor
outsb
ja
mov
cltd
dec
rorl
push
jns
jb
aam
push
xor
and
aas
or
adc
dec
inc
adc
or
adc
rorb
cltd
cmc
jno
mov
or
js
out
adc
nop
add
daa
andl
loop
pusha
nop
adcl
or
mov
adcb
adc
orl
test
pop
and
sbb
xorb
adcl
adc
add
mov
std
mov
mov
sub
nop
adc
mov
out
adc
xchg
adc
xchg
adc
cwtl
and
and
inc
js
inc
fwait
add
jo
mov
popf
daa
out
pop
or
sahf
adc
adc
mov
aad
out
cmp
and
and
and
inc
xchg
add
movsl
pop
mov
adc
sub
pushf
test
inc
loopne
inc
test
int
add
mov
mov
lods
or
lods
adc
inc
inc
scas
pop
addb
sbb
fcoms
aad
sbb
dec
mov
mov
pop
enter
mov
adc
and
mov
or
push
add
sub
arpl
xor
or
and
inc
mov
or
cmc
imul
jnp
pop
and
ret
insb
push
data16
push
fimuls
inc
in
dec
inc
mov
mov
adc
and
fidivrs
mov
add
sub
cmp
mov
xlat
lret
cmp
and
mov
call
push
jl
inc
mov
mov
mov
mov
sbb
iret
mov
push
cmp
jge
xor
jns
sbb
pop
mov
add
or
xchg
cmp
xchg
inc
mov
adcl
or
ljmp
mov
or
and
cmp
mov
ret
ret
sbb
mov
lds
or
and
enter
fldenv
inc
aaa
lret
add
int
movsl
into
or
jb
add
inc
or
aam
loopne
or
rol
fnstenv
les
imul
testb
nop
xor
fnsave
add
pop
xor
and
loop
movsl
adc
and
xlat
inc
in
enter
cld
adc
adc
and
in
jb
dec
sub
fisubrl
inc
outsb
or
loope
and
inc
push
push
jge
testl
int3
and
adc
inc
and
mov
out
add
out
add
add
xor
xorb
jns
cmpb
and
pushl
rclb
or
mov
sbb
stc
jbe
add
add
inc
jecxz
push
sbb
dec
pop
or
mov
xor
dec
or
fldl
or
loop
or
xor
add
dec
ret
mov
or
orl
or
sbb
inc
adc
and
scas
pop
push
rcrb
push
and
inc
aad
mov
adc
push
mov
cmp
xchg
or
adc
and
push
inc
inc
push
mov
add
dec
inc
adc
sub
orl
inc
and
push
out
call
addr16
jp
insl
and
mov
add
mov
adc
fsubrs
or
loop
cs
jno
xor
sarl
xor
add
gs
inc
cmp
mov
add
inc
neg
cmp
dec
cmp
jecxz
inc
testb
adc
loop
adc
les
dec
sbb
mov
dec
or
loop
push
add
jno
push
add
xor
inc
push
les
xor
pop
add
sbb
inc
pusha
mov
xor
arpl
add
cmp
adc
xchg
out
outsl
adc
and
jae
rorb
or
or
jge
inc
jg
dec
inc
cld
addl
push
pop
xchg
inc
mov
mov
rorl
xchg
add
xchg
xchg
add
adc
add
and
dec
stc
mov
adc
jl
or
bound
sbb
push
mov
or
add
dec
xor
and
inc
nop
scas
mov
adc
fwait
add
and
dec
push
mov
pop
scas
mov
movsb
or
pop
or
pusha
sbb
gs
xchg
or
and
dec
inc
dec
mov
lods
mov
or
and
cmp
int3
movsb
in
enter
pop
inc
xor
dec
or
imul
mov
or
stos
lds
xor
or
cmp
movb
jmp
gs
cmpsb
pop
inc
cmpsl
pushf
inc
test
or
mov
test
stos
js
push
push
push
mov
and
fstpt
js
stos
lods
lds
pop
mov
enter
shlb
loopne
cmovns
shlb
shlb
scas
xor
and
in
mov
cmc
or
lock
and
jnp
out
cmp
inc
mov
and
cwtl
sbb
or
mov
mov
imul
mov
push
xor
or
sbb
dec
cmp
inc
or
mov
test
add
mov
dec
mov
and
adc
or
fdivrs
mov
mov
das
xchg
pop
adc
mov
mov
mov
and
mov
mov
cltd
mov
call
outsb
dec
inc
mov
mov
and
les
adc
mov
gs
aaa
js
push
int3
enter
inc
imul
dec
or
cmpsb
xor
dec
in
or
dec
push
loope
leave
push
sub
test
add
sbb
addr16
inc
and
or
lods
fmuls
or
lock
and
inc
fwait
stos
mov
lret
inc
mov
and
jmp
call
push
or
lret
cmp
or
nop
and
int3
inc
inc
adc
mov
lock
xor
or
int
imul
aad
jmp
bound
and
adc
sub
mov
or
dec
rorb
sbb
lds
and
add
xlat
js
fsubs
cwtl
or
mov
mov
int3
cmp
or
fcompl
fsts
add
data16
fs
mov
das
xor
and
fisubrs
and
dec
jle
test
or
and
mov
fsts
push
faddl
popa
and
dec
rorl
and
mov
and
pop
xchg
push
xchg
mov
or
and
je
mov
cmp
inc
loop
shlb
mov
enter
xchg
and
ss
loope
or
dec
loop
loope
in
aaa
cmpsb
or
or
sbb
lret
adc
in
pusha
mov
or
aad
fmull
jmp
sbb
icebp
adc
ljmp
jmp
inc
adc
js
cltd
xor
adc
sub
inc
lock
or
or
or
mov
xchg
and
inc
out
popa
shl
lock
repz
or
or
or
js
sbb
iret
sub
jb
hlt
cs
js
cmc
mov
mov
mov
mov
pop
and
out
mov
cwtl
and
ds
dec
lock
cmp
sbb
inc
and
mov
cli
push
sub
mov
xchg
or
lock
and
sti
adc
or
cmp
xor
cs
fs
dec
adc
enter
loopnew
mov
fs
sbb
or
or
adc
loop
std
add
add
dec
int3
xchg
loope
or
xor
mov
mov
addb
cmpsl
dec
fs
dec
sbb
or
repnz
xorl
decb
and
add
sahf
sbb
int3
mov
or
inc
jg
mov
add
or
dec
ret
cmp
repnz
xchg
and
jmp
repnz
pop
and
pop
enter
mov
add
cltd
mov
or
jg
mov
lret
in
mov
or
adc
and
cmp
out
or
mov
rclb
or
roll
adc
inc
push
pop
mov
mov
cs
add
dec
fmull
and
mov
mov
subl
dec
mov
jmp
leave
cmp
dec
rolb
or
sbb
adc
scas
push
xchg
adc
rclb
xor
and
nop
mov
mov
mov
je
adc
and
mov
push
nop
sbb
sbb
movsl
and
dec
push
aam
fdivl
adcb
push
mov
dec
sbb
sbb
adc
fadds
xchg
test
xchg
cmp
les
lock
adcb
pop
jle
sbb
sub
or
add
push
xchg
jo
push
adc
or
movsb
rolb
push
sbb
insb
push
sbb
push
sub
mov
xchg
in
jle
push
xchg
adc
lods
push
loope
mov
nop
sub
xchg
pusha
inc
or
xchg
and
jbe
lods
jp
push
push
es
push
inc
xchg
sub
push
push
or
sbb
js
test
xor
push
in
push
pushf
fs
xor
movsb
adc
sbb
es
push
xor
dec
movsb
adc
xor
dec
cwtl
test
mov
js
mov
inc
rolb
fwait
pop
and
dec
hlt
movsb
xchg
push
and
nop
dec
xchg
push
es
test
and
nop
pusha
enter
xor
inc
cmp
add
cmp
add
or
lret
or
cmp
add
adc
leave
les
add
push
add
mov
xor
call
ficompl
inc
xchg
sbb
mov
lahf
loopne
add
push
imull
push
mov
lods
fiadds
shlb
xor
or
stos
add
xchg
ret
imul
shl
jb
insl
int3
or
inc
mov
ljmp
jle
sahf
xor
lea
or
fdivl
and
or
daa
and
sbb
shl
fs
or
or
in
and
out
mov
push
in
mov
aaa
sbb
cld
hlt
push
stc
lret
xor
fnsave
xchg
dec
mov
cli
repnz
xchg
add
cmc
sbb
clc
cmp
addl
inc
sub
ret
xchg
mov
or
xchg
inc
pusha
fwait
insb
dec
cltd
mov
test
add
mov
frndint
popa
adc
jecxz
add
out
xchg
fdivrl
shl
ret
push
xor
sti
ret
jmp
xchg
push
out
pop
add
movsb
andl
fstpt
cmc
popf
dec
adc
push
cld
pushf
jmp
jbe
loopne
and
xor
or
sub
mov
lea
mov
xchg
mov
shlb
or
aam
fnsave
sbb
cmc
in
cwtl
push
mov
mov
jle
or
push
sbb
stc
mov
mov
cld
fmul
int3
imul
mov
loopne
cmp
or
pop
sbb
mov
imul
shlb
rcr
push
dec
lock
push
add
adc
inc
into
mov
andb
arpl
iret
jo
xchg
std
arpl
mov
imulb
add
add
fwait
adc
add
or
push
add
pop
inc
add
adc
or
cmp
sub
cmp
push
cmp
pop
nop
sub
add
js
inc
test
xchg
pop
add
sbb
stos
jo
mov
rclb
push
insb
xor
sbb
add
movsb
mov
ret
es
mov
dec
lock
and
pop
dec
cmpsb
leave
into
or
rcll
push
and
inc
xor
inc
adc
insl
dec
test
int
mov
adc
dec
jle
xchg
and
into
adc
and
dec
ds
pop
and
mov
and
pop
and
pop
enter
sub
mov
jle
xchg
dec
stos
xchg
mov
ret
fimull
push
dec
sub
inc
push
mov
test
jp
outsb
popa
push
jb
xchg
pop
mov
or
pusha
test
push
pop
testl
into
dec
ficoml
or
and
dec
adc
fiaddl
bound
pop
or
pop
xchg
or
pop
inc
pop
sbb
add
push
inc
pop
inc
inc
sarb
dec
add
dec
add
aaa
cmp
cmp
cmp
insl
mov
das
xor
xor
adc
add
xor
cmp
es
daa
int3
add
and
inc
sub
jle
inc
and
and
or
sbb
sbb
sbb
sbb
adc
sub
push
movups
dec
nop
pusha
add
pop
or
push
or
cmp
incb
cld
inc
sbb
sbb
wbinvd
inc
pop
add
stc
dec
adc
cmp
pop
and
or
dec
cltd
xor
nop
jmp
or
sub
add
je
in
sbb
mov
inc
orl
sbb
or
js
inc
add
xchg
mov
jmp
push
add
push
cmp
inc
fiadds
adc
enter
sbb
jb
mov
adc
mov
adc
subl
jge
outsl
insl
mov
lea
sub
or
int3
push
add
adc
xchg
push
sub
popa
lea
cmpsb
add
cmp
rol
iret
mov
jo
add
adc
add
sarb
outsb
push
jne
dec
outsw
jmp
lock
adc
push
or
xchg
adc
dec
roll
and
faddl
sbb
addb
popa
outsl
add
cmp
add
adc
and
inc
or
inc
push
outsl
and
je
jno
or
inc
push
enter
repz
enter
cmp
clc
mov
or
fmul
std
mov
addb
push
push
fists
mov
adc
and
sahf
inc
push
stos
jne
loop
or
aam
pop
fimull
xor
clc
mov
add
mov
push
push
or
dec
xchg
sbb
adc
popa
arpl
movups
pop
cwtl
in
pop
out
mov
mov
loop
inc
nop
adc
and
sub
jo
push
movsb
sub
mov
add
mov
int3
shl
shl
out
or
inc
adc
or
xchg
adc
adc
push
or
outsl
dec
jno
or
mov
sbb
xchg
das
xchg
in
mov
setno
and
adc
inc
outsb
inc
movsl
xchg
or
add
mov
mov
and
push
inc
xchg
je
push
es
pop
lcall
fwait
xor
enter
add
shll
dec
push
bound
outsl
ss
dec
call
push
dec
inc
cmpsl
arpl
inc
je
movsl
sbb
xchg
filds
jns
push
inc
rolb
xor
adc
mov
lock
jo
add
iret
adc
cmp
bound
ret
add
rorb
jo
movsl
add
add
cmp
xor
sbbb
sbb
xchg
ljmp
popa
inc
cmpb
xor
test
push
cltd
adcb
je
sbb
mov
adc
cmp
dec
outsl
cmp
and
add
sbb
and
gs
and
dec
pop
dec
inc
and
pusha
ljmp
sbb
lret
dec
addr16
jne
dec
sub
or
push
cmovl
sbb
je
jb
les
xor
cmpsl
add
pusha
inc
sbb
push
adc
popf
loop
hlt
lods
inc
es
pop
adc
pop
push
sbb
or
cmpsb
adc
adc
and
sub
or
pop
lods
and
push
rolb
inc
pop
gs
push
enter
push
inc
and
lods
data16
add
mov
decl
shrb
mov
data16
sub
xor
inc
xor
cwtl
cmp
dec
cmc
mov
xchg
cmp
inc
adc
rclb
and
call
inc
sbb
or
mov
repnz
add
push
pop
leave
cmp
inc
add
jo
or
addr16
mov
dec
jl
xchg
or
fs
push
addb
scas
mov
push
inc
xor
jbe
arpl
jae
fs
xor
sub
push
out
add
mulb
aas
add
stc
xor
xchg
sub
inc
out
or
cmp
cmp
cmpl
or
mov
xor
pop
inc
xchg
cmp
stc
fisttpl
cmpsl
clc
in
add
and
inc
pop
cmp
adc
in
int3
xchg
mov
int3
js
push
test
and
mov
test
adc
sbbb
mov
jl
inc
xor
in
jnp
movsb
in
jb
cmp
jp
inc
jl
xor
jb
cmp
sbb
inc
js
adcb
xchg
cmp
add
and
jbe
push
jne
lock
inc
movsb
and
and
ret
xor
shlb
js
xor
call
sbb
push
adc
fcomi
cmp
mov
sbb
nop
push
add
loope
fcmovbe
xor
fimuls
mov
les
or
or
add
jo
pop
mov
icebp
add
sbb
shl
inc
mov
add
dec
cmp
les
sub
or
rcrb
jo
mov
dec
popf
dec
mov
inc
loopne
add
sbbb
nop
cs
xchg
push
add
ds
cmp
repz
int
pop
or
ret
xor
mov
or
movsl
and
pusha
iret
inc
sbb
movsl
sbb
popa
stc
push
mov
add
rclb
test
xlat
add
cmpsl
movb
sti
add
push
or
lock
and
loop
sub
les
dec
movsb
mov
dec
xor
aad
mov
xlat
add
cmp
cmp
dec
cwtl
push
inc
adc
add
imul
add
imul
sbb
popa
fisttpll
dec
mov
iret
shlb
and
adc
fwait
repz
cmpxchg
sbb
push
push
xchg
cli
and
inc
cld
sub
pop
push
push
add
xchg
push
and
inc
or
mov
adc
and
dec
or
data16
loop
inc
jecxz
int3
and
or
std
lahf
cmp
pop
add
or
push
ds
push
gs
fs
js
jae
push
ja
mov
or
push
subb
mov
int3
pop
scas
mov
or
adc
hlt
addl
add
mov
jo
int
outsb
sbb
dec
push
xor
add
mov
cli
dec
pop
les
testb
and
sbb
sbb
pop
and
pop
fisttpl
add
or
loop
jbe
bound
jmp
enter
sub
loopne
cltd
cmp
nop
mov
and
or
sbb
repnz
add
test
les
and
jae
xorb
cld
sbb
cmp
fs
and
and
nop
int
cltd
iret
pop
or
xchg
sbb
mov
and
lcall
jns
sbb
cmpsb
sbb
xchg
mov
pop
jns
es
adc
lea
and
push
je
inc
push
jl
inc
add
xchg
inc
bound
cmc
or
inc
orl
dec
ss
inc
jo
and
sub
mov
adc
add
enter
cli
daa
mov
lods
pop
push
inc
xor
adc
push
dec
pop
cs
mov
fstl
push
loopne
lcall
cmp
rolb
adc
inc
insl
add
imul
outsl
xchg
and
adc
jne
mov
js
jae
and
dec
adcb
je
movsb
enter
pop
dec
in
jge
cmpsb
and
dec
adc
icebp
sbb
mov
sbb
lock
and
aas
or
pop
and
roll
jmp
mov
test
xchg
or
xchg
xchg
icebp
movsb
xchg
push
test
xor
fwait
movsb
js
dec
test
cwtl
dec
mov
cmp
sbb
in
dec
int3
loop
fwait
sub
jb
push
xor
jb
sbb
and
stos
inc
mov
or
insb
dec
rol
or
aas
add
dec
test
sub
inc
add
sub
std
mov
xchg
icebp
lret
aaa
mov
jle
enter
mov
mov
fnstcw
inc
inc
pop
and
bound
push
shlb
arpl
or
and
addr16
cmp
nop
push
ret
inc
mov
mov
push
dec
ret
xor
mov
adc
inc
and
or
mov
ret
pop
sbb
sub
in
nop
ret
adc
xchg
pop
dec
push
cmp
inc
push
lds
into
mov
js
inc
pop
les
add
pop
adc
push
pop
cmp
pop
dec
push
cmp
or
dec
adc
int3
nop
and
mov
les
mov
adc
adc
fmuls
pushf
test
mov
nop
xchg
dec
mov
pusha
mov
jecxz,pt
inc
in
or
loop
aaa
in
das
inc
add
mov
dec
xor
mov
shlb
xchg
testl
js
jg
mov
or
out
jl
or
ljmp
mov
les
xchg
add
mov
loope
push
clc
loop
dec
cmp
js
or
nop
les
and
jb
push
sub
clc
push
or
hlt
lds
sbb
pop
push
sub
jno
sub
loop
push
and
push
jge
push
and
dec
add
add
mov
push
inc
add
or
insb
push
push
add
adcb
mov
mov
add
xlat
das
sub
cwtl
sub
mov
pop
and
sbbb
push
int3
adc
push
mov
insb
and
dec
xchg
lods
mov
adc
jmp
mov
je
pusha
arpl
or
dec
and
inc
xor
js
mov
mov
bound
inc
inc
jno
pop
mov
cmp
das
xchg
sub
dec
mov
aaa
in
das
and
scas
shrb
mov
dec
mov
je
push
xchg
or
mov
aas
cwtl
xchg
or
enter
and
icebp
add
outsb
mov
xchg
iret
jo
movsl
and
jbe
pop
addr16
and
cmpsb
push
push
loopne
and
adc
insb
popf
jmp
adc
and
pop
cwtl
int3
adc
pop
roll
loopne
jo
dec
lret
add
je
pop
add
leave
loopne
sub
les
or
sbb
mov
pop
or
int3
sub
xchg
bswap
sbb
sub
test
adc
sbb
pop
xor
mov
add
mov
sbb
xchg
insb
or
loopne
enter
pop
icebp
inc
pop
add
and
insl
pop
lods
test
fs
enter
mov
cmp
imulb
and
inc
dec
hlt
dec
insl
je
or
sub
jo
outsb
jbe
lock
dec
and
loop
pop
xor
push
sbb
dec
in
cmp
mov
mov
and
in
jb
and
pushf
push
adc
pop
mov
push
or
or
enter
dec
or
pop
jb
push
inc
mov
adc
mov
mov
dec
dec
pop
in
jb
xor
push
inc
push
adc
and
enter
dec
adc
sub
call
and
mov
lcall
push
and
adc
sub
js
je
loope
xchg
popa
xor
adc
outsb
addb
or
or
xor
outsb
sahf
mov
mov
adc
test
cmpsl
add
cld
xorb
push
and
bound
or
or
fstps
sbb
push
push
adc
arpl
inc
mov
push
loop
arpl
mov
push
sub
adc
and
adc
sbb
xchg
jb
push
and
and
mov
les
xor
cmp
movups
mov
and
loope
or
icebp
jl
sbb
and
jb
cmp
adc
or
lods
in
cmp
inc
and
nop
enter
cmp
inc
and
loopne
and
ret
dec
lods
xor
mov
dec
in
xchg
cli
xor
cmp
or
inc
cmp
push
adc
outsl
dec
jl
mov
xchg
inc
mov
lret
and
sar
pop
xchg
pushf
dec
mov
add
in
js
lds
jnp
loop
mov
pop
fs
insb
leave
ret
mov
vpackuswb
mov
mov
pop
jle
fdiv
mov
movsl
sbb
enter
das
and
mov
xchg
dec
pop
movsb
or
add
test
es
sbb
lds
mov
add
insb
xchg
rclb
fdivr
mov
scas
in
and
jno
sbb
xor
jg
loop
xchg
adcb
in
jnp
mov
aaa
jns
pop
insb
lods
and
pop
push
out
mov
mov
sbb
pop
repnz
mov
lss
xchg
lret
cwtl
add
inc
pop
mov
nop
in
mov
push
or
filds
add
scas
sbb
repnz
mov
adc
pop
mov
and
or
aas
or
push
sbb
xor
bound
xchg
adc
push
and
pop
inc
xor
sub
push
dec
lds
daa
adc
xchg
pop
repnz
xchg
xor
cmp
adc
das
push
sub
loop
subb
or
call
mov
add
out
adc
xor
roll
mov
add
and
jge
cmovp
gs
add
imul
or
mov
pusha
and
xchg
and
mov
inc
pop
and
adc
and
subl
add
and
push
xchg
mov
or
mov
movsb
inc
xor
and
mov
fmuls
cmp
push
and
or
cmp
mov
add
inc
or
xchg
adc
sub
cmp
cwtl
or
dec
xor
cmp
jle
lahf
hlt
pop
dec
pusha
andb
xor
xchg
and
mov
jo
dec
and
and
nop
adc
daa
sbb
and
jne
inc
and
cwtl
inc
pop
icebp
sub
pop
shrb
nop
xchg
mov
push
add
insb
outsl
shll
aas
mov
dec
adc
add
fs
sub
xorb
popa
sbbb
mov
push
xor
gs
xchg
or
push
lcall
and
and
sbb
dec
test
mov
dec
nop
dec
lret
imul
push
xor
xor
dec
shlb
xor
nop
xor
outsb
lret
mov
aas
add
add
dec
cwtl
inc
push
pushf
inc
push
stos
fimuls
repz
jecxz
mov
dec
xchg
xor
jmp
adc
jg
cltd
cmp
cs
mov
mov
jno
inc
cmp
outsl
popa
addr16
xorl
and
cmc
clc
jne
ja
jp
in
fs
outsl
jle
sbb
cmp
ss
call
or
insl
bound
push
and
dec
sbb
push
les
cmp
scas
lret
rorb
cli
sbb
out
or
xchg
cli
negl
mov
and
adc
rcl
pusha
cltd
add
pop
sbb
mov
add
pop
pusha
pop
mov
lcall
lret
imul
sbb
cmc
push
add
pop
nop
xor
and
mov
imulb
jnp
lods
jno
push
negl
cmpsl
add
sub
sbb
outsl
add
sbb
push
dec
sbb
push
or
adcl
sysexit
xor
mov
imul
pop
sub
mov
sarb
jg
outsl
imul
push
push
std
mov
call
add
dec
xor
pop
xchg
outsb
pop
mov
fimuls
fwait
jmp
dec
push
pop
add
js
add
or
xchg
mov
dec
in
push
mov
insl
jnp
pop
test
add
xchg
stos
imul
addb
sub
test
leave
add
jbe
inc
or
repnz
cld
sbb
adc
insb
insl
test
push
dec
pop
pop
ja
insb
adc
add
repnz
inc
sub
mov
jo
sbb
inc
and
dec
sbb
or
je
jmp
push
push
sub
rcrb
jo
add
enter
pop
sbb
and
and
mov
push
jg
imul
sub
mov
enter
push
es
sbb
dec
inc
mov
mov
jo
cmp
sti
dec
cmp
push
je
mov
fs
push
movntsd
sbb
ljmp
push
xor
inc
push
mov
push
jp
mov
je
jl
adc
or
mov
fwait
mov
pop
dec
loope
imul
gs
mov
inc
mov
jne
mov
push
adc
inc
stos
xchg
mov
jne
adc
adc
popf
pop
adc
pop
adc
adc
dec
jl
push
nop
adc
mov
popa
inc
stc
adc
sbb
inc
lea
dec
dec
fs
pusha
push
xchg
nop
repnz
xor
imul
inc
cmp
dec
dec
movsb
lea
lods
loop
ds
adc
imul
jns
push
jo
and
jae
mov
mov
lock
mov
jae
inc
push
push
push
push
sbb
ja
ljmp
dec
add
cmpsb
xor
sbb
sahf
mov
pop
movsb
enter
sbb
mov
shrl
push
sbb
ret
or
movsb
adc
lock
push
or
int3
cmp
mov
call
lret
addr16
iret
mov
add
push
add
jmp
fsubs
daa
xchg
gs
insb
jo
data16
cs
inc
and
adc
pop
mov
sub
push
push
je
inc
mov
inc
les
outsb
outsb
push
mov
enter
loop
ds
adc
dec
insl
mov
inc
nop
and
xchg
aam
fcompl
lock
mov
or
adc
or
xor
inc
push
mov
push
mov
or
into
adc
add
movsb
push
cs
js
xchg
add
sbb
outsb
push
inc
insl
mov
dec
sub
aaa
stc
and
push
pop
sub
sub
inc
out
dec
pop
mov
test
loopne
call
icebp
or
dec
xchg
sub
popa
imull
mov
in
push
jbe
js
fadds
insl
jo
xchg
mulb
js
push
dec
xchg
clc
movsb
adc
dec
fsubl
or
lock
and
hlt
push
inc
js
arpl
mov
mov
cmp
ds
or
clc
in
cmp
or
pushf
pop
and
inc
push
inc
cmp
bound
inc
and
dec
stc
adc
les
dec
dec
sub
ds
push
nop
aam
sub
xchg
int3
dec
enter
push
and
in
jecxz
xchg
stos
je
mov
imul
and
insb
mov
data16
pop
cmp
cmp
movsb
enter
pusha
mov
mov
pop
and
rcl
push
lret
inc
inc
clc
sub
pusha
sbb
aam
adc
dec
cmp
pop
insl
jecxz
jns
mov
fs
mov
jns
adc
or
imul
sarl
and
or
adc
leave
and
fcomps
nop
vmovntps
push
js
jp
inc
xchg
mov
mov
jno
shrl
dec
mov
jl
inc
or
in
push
mov
and
inc
adc
jp
jns
sbb
lea
shl
jnp
xor
pop
and
dec
nop
call
mov
ret
in
mov
mov
jo
jnp
les
sub
sbb
movsb
rcr
adc
es
popa
subb
call
and
in
xchg
or
inc
outsb
jne
bound
jl
call
xor
adc
in
movsl
push
push
hlt
lea
cld
loop
jo,pt
pop
mov
in
inc
data16
dec
dec
cmpb
or
push
pop
cs
sub
push
leave
add
addr16
mov
aas
or
jo
lret
mov
aam
ret
insl
push
dec
adc
jae
sbb
jae
push
outsl
push
clc
daa
push
adc
mov
and
adc
lock
dec
inc
andb
or
sbb
rorb
push
cmp
cmp
push
mov
stc
ja
movsb
or
in
push
mov
in
push
inc
xor
lret
inc
outsl
adc
jbe
push
xchg
fnstenv
lret
fs
inc
jl
inc
lods
sub
movsb
js
inc
jnp
sbb
push
dec
jle
and
dec
loope
pop
or
xor
sbb
sub
mov
push
and
push
ficoms
add
push
jbe
jo
pop
icebp
jae
fs
insl
in
pop
aam
add
lret
cmc
gs
mov
inc
sbb
notb
push
push
and
repz
and
call
xor
sub
mov
push
sbb
mov
sbb
or
and
push
aaa
xchg
add
pushf
mov
pop
push
pop
daa
pop
shll
push
enter
xor
mov
adc
movsb
orb
bound
jbe
adc
or
loop
sbb
in
sub
pushf
xchg
mov
push
loopne
xchg
sbb
xor
add
lret
imul
enter
in
jns
jo
pusha
inc
pop
jo
clc
inc
stc
adc
sbb
nop
jge
xor
pop
pop
das
mov
mov
mov
sbb
mov
mov
aam
mov
popf
or
data16
inc
push
cmp
and
xor
ficompl
jl
and
ret
outsb
mov
pop
loopne
cmpsb
xchg
test
adcb
jb
and
mov
dec
outsb
int
xchg
push
mov
xchg
jb
push
dec
push
dec
lret
or
dec
cmp
mov
inc
and
mov
jne
data16
mov
cmp
ds
dec
daa
cs
aaa
daa
mov
insb
add
fidivrl
insl
and
jae
leave
inc
inc
data16
push
stos
xchg
or
dec
jns
fnstenv
insl
and
sub
mov
inc
mov
pop
inc
xor
arpl
push
and
out
push
push
lcall
sub
jnp
push
pop
test
scas
in
add
cmpsb
sbb
cmpsl
popa
xchg
insl
pop
cwtl
push
jae
dec
push
insb
popa
jns
mov
xchg
inc
and
dec
cwtl
add
sbbl
adc
mov
test
inc
cmpsl
aam
aam
inc
sti
sub
data16
xchg
adc
incl
fmulp
jb
sbb
enter
add
sarl
arpl
mov
test
pop
iret
lret
add
aaa
xchg
cmpsl
pop
mov
into
xchg
mov
or
popa
addr16
jp
or
sbb
mov
js
dec
mov
mov
enter
enter
inc
fcom
lcall
bound
xor
cmp
dec
dec
arpl
jb
mov
push
bound
inc
pop
and
inc
cmp
ds
sbb
sub
sub
ljmp
jno
or
test
jge
pop
cmp
dec
out
lahf
sub
inc
test
repnz
outsb
and
filds
jl
roll
add
mov
movl
in
add
add
bound
inc
test
push
fnstcw
shlb
js
pop
insb
adc
jbe
push
jne
push
bound
lock
scas
add
pop
in
dec
pushf
fidivrl
cltd
lahf
mov
repz
pop
cmpsl
mov
mov
mov
lret
hlt
inc
clc
pop
jne
jmp
lret
inc
mov
ret
mov
or
dec
movsb
cwtl
xchg
mov
scas
xchg
dec
cmp
push
je
pusha
adc
addb
mov
orl
mov
push
dec
pop
xchg
mov
mov
shll
test
or
addr16
push
cmp
cs
or
dec
dec
sub
out
pop
and
inc
outsl
mov
jp
adc
sub
and
mov
popf
mov
es
jle
inc
push
xor
mov
xor
push
sub
inc
inc
add
xor
sub
or
xor
xchg
push
shlb
sbb
adc
repz
jecxz
pop
test
dec
dec
sahf
lcall
adc
lcall
lods
cmp
mov
add
sub
ret
push
jne
mov
jo
mov
xchg
imul
fs
sub
or
popa
or
insb
jns
or
movsl
in
inc
jne
push
sahf
mov
adc
sub
dec
insl
lds
push
cld
push
je
pop
je
mov
stc
push
rorb
shlb
mov
inc
in
sbb
dec
xor
dec
jae
nop
sti
add
mov
pusha
or
mov
in
xor
xchg
push
fstps
mov
xchg
dec
mov
inc
dec
lds
and
mov
adc
lock
rorl
push
sahf
adc
cmp
pushf
mov
mov
movsb
outsl
push
and
add
pop
bound
je
cltd
mov
jne
dec
xor
xorb
sti
rolb
cs
jno
mov
push
dec
int
cs
mov
lret
pop
cmc
fidivl
push
je
push
cmp
push
mov
inc
movsb
push
jo
insl
xor
dec
int3
cmp
inc
inc
jno
inc
fdivs
xchg
add
sub
sbb
mov
sbb
jae
or
push
pcmpgtw
outsb
loope
push
outsl
push
fldt
sbb
lock
xorb
imul
movsb
test
std
push
inc
js
pop
adc
les
inc
sub
or
or
inc
fdivl
sbb
test
enter
push
adc
arpl
xchg
push
dec
inc
push
jne
pop
dec
ja
mov
or
pop
xchg
adc
dec
js
push
gs
cmp
jno
loop
mov
xor
dec
xor
arpl
dec
cld
je
pop
or
push
lret
sbb
jb
outsl
jmp
xor
push
test
push
ja
pushf
rolb
call
pop
jle
movsb
pusha
movsl
push
sub
xchg
jae
insb
jl
sbb
mov
xchg
cmp
or
mov
dec
sub
lods
mov
jae
cs
int
cmpsb
xor
test
addb
dec
outsl
data16
adcb
sub
adc
mulb
test
dec
xor
jo
adc
imul
aaa
dec
and
insb
ret
cwtl
mov
mov
push
je
scas
cli
xor
push
insb
inc
dec
mull
or
sub
dec
nop
dec
jae
dec
mov
inc
or
les
push
hlt
repnz
adc
jl
cmp
inc
imulb
push
pushf
pushf
les
dec
outsb
lods
int3
add
in
sub
jmp
pop
push
xor
push
mov
loop
inc
iret
push
lahf
mov
inc
inc
adc
xor
lods
fadds
lret
movsl
es
push
dec
dec
addr16
int3
and
flds
xchg
cmp
xor
mov
cltd
jb
leave
dec
pop
imul
imul
cs
mov
cmc
sbb
loopne
incl
and
adc
and
pop
inc
push
aas
jecxz
jne
push
jno
sbb
lret
call
adc
and
xchg
xor
or
add
inc
xor
or
pop
fisubs
xor
inc
fwait
test
add
xor
push
pop
addb
adc
aas
mov
pop
or
cmpsb
inc
inc
xor
imul
adc
inc
cmp
popa
outsb
sbb
idivl
and
repz
sti
mov
repnz
stos
jnp
std
sbb
jle
jl
cli
aad
fisttpll
push
jecxz
ret
sub
push
into
sub
cmpsb
adc
sti
jno
shufps
mov
adc
jl
sbb
sbb
rcl
add
dec
dec
ljmp
cwtl
push
sbb
imull
pushf
shll
xorb
add
pop
fcomp
in
mov
leave
sbb
dec
add
movsl
movsb
cmpsb
jmp
mov
push
add
add
pop
fdivrs
aam
or
fnstcw
mov
dec
inc
stc
pop
cltd
add
adc
lock
es
cmp
mov
mov
or
xor
xor
add
das
jmp
dec
push
or
adc
xor
stc
add
xchg
in
mul
mov
mov
sti
cld
sub
sbb
push
cmp
loopne
ljmp
mov
stos
aad
ror
fcompp
int
fsubr
add
sbbb
adc
mov
or
imulb
lret
cld
xlat
fiaddl
xor
je
in
aam
into
shll
idivl
ret
adc
movsl
inc
ljmp
mov
xchg
cmp
dec
lock
sub
enter
mov
jle
mov
divb
mov
lock
ds
mov
xor
xchg
mull
decl
dec
add
push
inc
inc
push
mov
xor
add
adc
stc
add
push
loope
or
es
dec
add
inc
sbb
mov
cmp
sub
mov
sub
js
mov
in
jl
loope
inc
pop
adc
sbb
adc
inc
cli
lods
mov
enter
or
and
out
movsl
addl
pop
push
adc
popa
add
lds
add
sub
pop
movsb
cld
cmp
lret
test
add
sti
jo
fs
mov
adc
pusha
dec
and
add
mov
push
pop
cmp
adcb
sbb
push
add
add
push
add
lahf
pusha
mov
sbb
xchg
sbb
into
bound
sbb
lahf
mov
inc
mov
pop
push
jb
rclb
cmp
lock
test
add
and
nop
add
or
ret
cmp
xor
inc
enter
shlb
mov
stos
pop
add
or
repz
bound
adc
aaa
fs
adc
incl
clc
cmp
adcb
loopne
or
and
inc
sbb
push
xor
inc
icebp
test
hlt
adcb
sbb
imul
add
push
push
or
test
xchg
test
pusha
js
loopne
jb
add
inc
jae
add
sarl
cs
pop
and
adc
pop
xchg
pop
and
adc
rolb
bound
push
dec
add
inc
mov
or
or
add
or
dec
mov
or
xchg
and
pusha
shl
add
xchg
push
fdivr
add
add
sbb
js
add
pop
add
jle
hlt
pop
push
mov
add
lods
inc
mov
cmovl
add
adc
sbb
cli
pop
ret
enter
dec
fcoml
adc
push
sbb
and
ret
xor
pop
sub
and
jno
and
adc
adc
pop
or
mov
and
mov
sbb
insb
stc
adc
repz
or
popl
inc
lods
xor
wbinvd
adc
loopne
pop
sahf
test
fisubl
add
flds
in
mov
popa
pop
inc
adc
add
loope
rolb
jecxz
pop
inc
push
and
add
and
inc
rol
sbb
add
test
jge
dec
cmp
sub
xor
add
movsb
dec
or
add
gs
pop
cmp
mov
roll
and
dec
add
arpl
les
nop
xchg
jg
rorb
ret
add
xor
add
pop
xor
arpl
add
mov
inc
push
add
adc
pop
mov
and
push
mov
pop
add
es
mov
pop
test
and
and
addb
inc
aam
jbe
xor
mov
out
inc
pop
les
addb
sub
and
xchg
iret
lahf
daa
add
mov
cmp
add
cmp
push
cs
pop
int3
sub
inc
es
inc
mov
push
push
idiv
add
add
shr
jle
mov
add
inc
pop
cwtl
mov
add
stos
frndint
dec
mov
mov
xchg
iret
or
jl
dec
mov
hlt
into
jp
cwtl
ficoml
ret
pop
mov
jmp
add
mov
repz
shl
leave
lock
cld
jg
cmpxchg
fwait
inc
mov
push
repnz
rcll
mov
adcb
movsb
push
in
aas
xchg
out
sahf
fdivr
add
shlb
pop
stc
xchg
notl
jmp
leavew
xor
out
xchg
push
jo
inc
lcall
in
popf
loope
add
sti
pop
cwtl
sar
jmp
add
xchg
int3
push
js
mov
loopne
inc
pop
mov
in
push
sub
stos
push
jg
push
add
and
nop
adc
aas
or
xor
jecxz
sub
idiv
scas
inc
mov
aad
es
fdiv
stos
add
cli
xor
in
or
dec
movsb
fisubs
hlt
in
add
xlat
out
int
add
enter
lock
loopne
and
ss
mov
mov
lock
out
ds
xchg
test
mov
in
clc
push
adc
rorl
push
stos
jmp
stc
add
shl
hlt
inc
inc
mov
test
mov
ljmp
mov
sbb
loopne
xor
mov
outsl
mov
pop
ror
into
push
push
and
scas
scas
iret
ss
in
cltd
repz
in
adc
dec
mov
xor
adc
dec
dec
xchg
lret
fmull
or
mov
popa
or
fldenv
outsl
test
add
cli
xchg
aad
sti
push
mov
insb
int3
xorb
in
test
mov
xlat
add
push
mov
xchg
rcrb
rep
dec
cmp
sbbb
mov
shl
add
lret
xchg
xor
out
and
mov
pop
or
lea
pop
fdivl
pop
jae
and
insl
sahf
pop
mov
mov
out
ljmp
and
sbb
add
mov
divl
hlt
stos
aas
add
pushf
mov
push
push
push
lcall
xchg
in
mov
test
out
inc
cli
dec
jno
pop
add
cmp
jb
cli
in
call
iret
icebp
cmpsl
fwait
xchg
mov
xchg
jbe
andb
mov
aam
jae
mov
mov
lock
ficomps
sti
mov
roll
jnp
pop
clc
fcmovne
leave
jbe
imulb
jmp
mov
mov
imull
pusha
stos
shl
lods
sbb
pop
inc
dec
jne
cli
cmpsl
add
decb
in
pop
scas
out
imul
ret
mov
out
scas
test
in
mov
pop
lock
imul
sub
xor
mov
mov
jg
and
in
or
jmp
jg
aaa
out
or
cmpsb
or
pop
mov
es
mov
or
pop
mov
dec
mov
lds
fmul
adc
subl
fstps
jo
movsb
mov
stos
pop
fiadds
lret
xchg
sbb
pushf
dec
add
jae
test
add
test
popf
inc
orl
sbb
push
dec
mov
test
add
xchg
movsl
bound
loope
daa
jmp
stos
add
push
lret
xlat
scas
pusha
add
mov
mov
push
int3
dec
mov
jo
lret
stc
add
aaa
cmp
ljmp
add
enter
rclb
shld
adc
int3
mov
nop
and
dec
mov
cwtl
xor
int3
in
jecxz
pusha
jbe
leave
sbb
or
cmpsl
movsl
fsts
rcl
add
add
or
sarb
pop
cwtl
add
push
out
or
mov
cld
notl
add
lea
pop
into
jl
repnz
shlb
clc
hlt
jmp
fdivs
cmp
add
xchg
fcos
sbb
add
pop
xchg
push
mov
xchg
fiadds
cmp
sbbb
aad
lret
dec
push
add
pop
add
add
orb
dec
cmp
xlat
xlat
push
adc
loope
test
push
mov
mov
add
push
test
pusha
loop
sub
cmpsb
test
mov
std
inc
or
call
lea
loop
sub
add
inc
push
xor
add
je
bound
nop
xchg
dec
ss
jp
add
in
push
push
imul
test
cltd
dec
or
pusha
and
cwtl
fs
imul
fadds
lea
jo
push
jg
cmp
and
test
orl
sbb
enter
xor
push
add
mov
lcall
add
cwtl
sbb
jae
ljmp
add
xor
shr
popf
mov
add
add
pop
clc
call
adc
xchg
jns
shr
add
stos
mov
pop
orl
subl
or
andb
rolb
in
mov
push
sti
jge
sbb
shlb
add
test
loop
add
outsb
mov
add
inc
stos
jns
nop
cld
scas
cmpl
sbbb
inc
sub
add
dec
das
mov
mov
and
shl
add
cmp
mov
or
add
mov
adc
lods
icebp
sbb
in
test
and
and
cmp
cmpsb
mov
pushf
add
xchg
mov
test
jo
repz
sub
je
clc
mov
repnz
or
js
aas
mov
cmp
mov
adc
sub
cld
xor
add
lods
cmc
pop
ja
test
testb
out
xchg
insl
mov
push
fisubl
cli
es
insb
jecxz
out
add
cmp
lea
fdivr
add
adc
pop
xchg
jno
dec
push
dec
cmp
je
xchg
mov
add
push
das
out
cmc
in
push
add
in
stos
lods
ret
out
pushf
outsl
xorl
push
repz
jmp
push
out
push
adc
add
add
jo
xor
mov
dec
call
sbb
push
mov
mov
cmp
pop
out
cld
repz
push
add
cmc
lahf
sub
inc
mov
fdivrl
cmp
xor
jmp
repz
ret
jne
add
mov
push
sar
push
pop
lret
shr
in
movl
js
xor
adc
sarb
cld
add
add
pop
mov
pop
in
and
mov
rorl
push
cmpl
dec
subb
inc
ret
nop
add
fwait
or
cmp
test
add
add
ret
pop
repnz
push
loopne
cmp
add
sbb
pusha
nop
push
add
and
jge
les
sti
popa
xor
add
cmp
loop
fwait
push
icebp
mov
mov
inc
xor
addl
ss
jl
sbb
dec
add
insb
and
push
jbe
add
sbbb
mov
pop
push
or
pop
and
mov
adc
jne
sub
xor
add
dec
adc
xor
dec
jp
xchg
mov
sgdtl
test
sub
das
xchg
orb
xchg
mov
mov
push
rolb
add
lods
outsl
jg
xor
dec
mov
add
insb
ret
dec
aam
inc
aas
pop
cld
sti
pop
jp
orb
cltd
add
gs
xchg
xchg
add
inc
jge
push
xlat
faddl
movsb
ss
dec
add
pusha
cmp
or
int
jb
repz
add
xlat
leave
into
jbe
mov
daa
cmp
sbb
insb
loop
xor
add
dec
jle
mov
mov
add
fcmovb
sbb
and
mov
mov
push
add
int3
add
je
imul
mov
int
and
lret
mov
rorl
daa
add
add
fmuls
push
push
insl
sbb
xchg
int
dec
ja
push
add
or
push
insl
push
je
or
aad
and
cvtdq2ps
adc
adc
adc
pop
lds
dec
dec
add
stos
es
inc
push
addr16
lods
push
xlat
stos
shlb
and
ds
cmpb
add
mov
sbb
cmp
sub
adc
mov
add
bound
lret
fadd
lock
cld
mov
mov
int
data16
mov
loope
add
jmp
or
arpl
cwtl
les
test
add
nop
lea
fcmovnu
call
fucom
aaa
add
into
sarl
mov
mov
dec
fsub
add
scas
jb
xchg
add
cmp
mov
mov
sbb
fadd
scas
jbe
in
fucomp
jnp
jne
add
dec
lock
jp
lret
fisubs
in
mov
out
sti
fnstsw
pusha
or
fadds
add
dec
in
mov
addb
xor
adc
shl
testb
cmp
add
dec
loope
pop
fadd
sbb
adc
add
mov
and
mov
mov
loop
fwait
clc
les
push
int3
gs
mov
in
mov
dec
jecxz
cmp
jno
loopne
negb
add
mov
xchg
ret
stc
enter
xchg
xchg
jnp
cmp
push
mov
cmpsl
dec
in
jnp
mov
ja
arpl
inc
faddl
call
fwait
stc
add
push
mov
ss
mov
sbb
out
cmp
or
push
mov
daa
mov
iret
jnp
add
sbb
add
mov
mov
add
idiv
iret
mov
dec
jmp
jo
data16
add
xor
rcrl
ljmp
or
popf
jnp
add
mov
add
pop
add
xchg
ds
cmp
adc
push
jbe
arpl
add
enter
jle
mov
fnop
mov
mov
int
sbb
jnp
fmul
jg
or
addr16
in
fneni(8087
add
mov
in
push
jne
add
dec
mull
dec
mov
ja
loope
out
add
pop
fmulp
mov
mov
jl
filds
psubb
sbb
mov
ret
add
test
cld
loope
cmpsl
mov
ret
and
mov
add
jae
cld
jnp
sub
cmp
rclb
cmp
push
scas
outsl
xchg
mov
in
out
jbe
int3
addr16
cltd
shr
out
jnp
add
ja
insl
popf
repz
enter
add
loope
dec
add
adc
pop
std
jmp
cwtl
inc
cmc
inc
in
fisttpll
adc
adc
add
xor
inc
sbb
and
push
add
push
jnp
dec
das
roll
or
cmp
aad
cwtl
cmp
rcrl
js
mov
test
and
adcb
push
add
add
push
inc
mov
add
lret
inc
push
inc
pop
inc
xchg
and
stc
out
add
cwtl
movzbl
xor
in
push
outsl
div
add
dec
cli
dec
jnp
add
adc
ljmp
cmc
mov
jge
inc
sub
imulb
shll
jle
push
cmp
add
addr16
or
pop
adc
repnz
cmp
cli
daa
add
add
sti
inc
mov
call
mov
xchg
cld
arpl
dec
movsb
lret
cmpb
into
call
fldl
testl
adc
or
mov
incl
filds
pop
add
ja
add
test
pop
addl
xchg
inc
lock
push
sti
dec
sbb
cltd
add
clc
add
push
sbbb
data16
adcb
xor
push
jae
popl
xor
sub
pop
fadds
js
and
leavew
aaa
cmpb
inc
prefetchnta
js
adc
andb
aas
inc
or
inc
cmp
test
loopne
and
sbb
push
add
mov
fs
test
xchg
and
dec
in
fninit
addr16
dec
push
loopne
xor
inc
push
add
mov
test
xchg
vmptrst
sbb
sbb
mov
dec
call
mov
xchg
cwtl
addb
pop
mov
adc
std
andb
pusha
push
xor
xchg
test
cwtl
test
movsl
jmp
loop
add
xlat
jge
adc
icebp
inc
into
cmovs
inc
lock
push
test
mov
mov
out
push
js
stos
mov
shrb
dec
mov
sahf
fadd
rcll
test
and
xchg
mov
pop
loop
shlb
fstl
or
mov
push
pop
shlb
rorb
add
fcompl
mov
cltd
scas
fcomp
hlt
cwtl
sub
sub
int3
xor
int3
lock
push
orl
cli
mov
test
xchg
cmp
mov
pop
jb
jno
outsb
mov
test
or
in
and
loopne
add
test
cmp
faddl
lea
cmp
es
js
ret
cwtl
data16
nop
cmp
dec
pushf
or
andl
aam
popl
xchg
test
jle
pop
xchg
push
cmp
xchg
mov
push
pop
push
cmp
adc
addl
xor
mov
push
add
xchg
sub
testl
fcoms
sbb
pop
push
cmp
mov
add
stos
mov
adc
cmp
sub
psubsb
or
push
add
mov
pushf
pusha
cmp
push
or
int
sub
inc
jmp
pop
stc
jg
add
mov
ss
cld
inc
test
push
pop
lock
push
mov
pushf
add
fcomps
cmp
sbb
int
lahf
xchg
out
xchg
mov
dec
push
arpl
mov
mov
xchg
test
outsl
call
loop
xchg
bound
js
scas
cltd
data16
mov
in
jmp
icebp
imul
nop
lahf
in
mov
cwtl
adc
scas
test
lcall
sbb
aad
nop
scas
sbb
cld
and
add
xchg
rolb
imul
shll
rcrb
push
mov
outsb
jnp
clc
and
outsl
push
push
add
popf
or
adcb
or
jge
add
push
dec
fidivl
movsb
gs
or
fsubl
sarb
pop
nop
stc
mov
mov
xchg
aam
cltd
gs
sub
pop
dec
loopne
push
xchg
movsb
inc
stos
pop
push
sub
mov
movsl
cld
testb
jo
arpl
sarb
add
repnz
imul
inc
xchg
jo
out
ljmp
hlt
lret
enter
xchg
mulb
ja
jp
mov
mov
pushf
cli
dec
stos
lock
pop
pop
jp
cmp
outsl
inc
test
imul
add
outsl
mov
pop
ds
imul
adc
pop
pop
jp
enter
mov
into
cli
rorb
sbb
pop
arpl
jp
fmuls
addr16
pop
lods
ror
fdivrp
loopne
sbb
jbe
cmp
jp
call
out
out
cli
clc
lock
rep
lods
cmpsb
jbe
add
lock
mov
ja
repz
aas
add
xor
data16
leave
or
or
in
stos
sbb
clc
cli
loopne
pop
mov
jnp
sbb
cmp
sbb
sti
andl
mov
cmp
jecxz
and
fwait
aas
sub
es
sub
lock
sbb
xor
loopne
cli
mov
xorps
push
ds
ss
bound
cmp
rdtsc
shlb
lods
hlt
pop
cld
rorb
dec
lret
pusha
dec
sbb
dec
or
jmp
out
mov
fistpll
pop
clc
scas
push
imul
jg
pop
inc
dec
mov
mov
jg
cmp
stos
add
mov
imul
lret
mov
je
lahf
dec
mov
push
out
fcomi
jbe
jmp
add
adc
mov
outsb
sbb
fldt
pop
jg
cmp
lahf
ja
add
jo
jmp
mov
cmp
loopne
xchg
xorl
icebp
pop
jb
sub
pop
mov
jl
mov
mov
jg
ds
ficompl
or
dec
mov
in
mov
mov
js
rsqrtps
incb
and
pop
xchg
cmp
stos
mov
sarb
or
mov
imul
ja
add
lret
es
mov
mov
aas
mov
sub
addr16
jnp
or
in
insl
out
mov
mov
mov
ret
daa
mov
idivb
mov
ret
scas
mov
ss
adc
out
insb
mov
loop
mov
mov
fcmovne
mov
sub
fwait
mov
mov
push
xor
pop
push
stos
mov
pushf
mov
cld
mov
roll
stos
rclb
ret
call
pop
push
inc
mov
lods
insb
add
dec
mov
cmp
shlb
inc
shlb
cli
pop
pop
cld
lds
movl
jl
add
pop
mov
comiss
clc
scas
sub
or
jbe
lahf
out
iret
std
mov
pop
faddl
and
ret
cmp
test
in
roll
lcall
xchg
mov
ret
xorb
les
lret
mov
mov
scas
loope
dec
lods
paddsb
je
scas
pop
or
sti
xorb
mov
cmp
stos
sbb
leave
pop
sbb
scas
in
add
or
mov
push
xchg
sub
xor
mov
xchg
jl
or
xchg
aas
ljmp
sbb
popf
add
xchg
cmp
push
pushf
enter
pop
lods
pop
int
mov
mov
repz
cmp
aam
rol
mov
mov
mov
fadd
jne
mov
pop
int3
enter
pushf
ss
out
add
dec
cld
int
pusha
push
or
rcl
add
fisubrs
or
cmp
in
lret
sbbb
pop
shlb
pushf
mov
xor
enter
mov
add
cmp
or
lods
int
jl
pop
ljmp
in
jmp
lods
mov
lret
cmp
sarb
pop
sarl
push
cmp
and
add
pop
lret
adc
or
jmp
or
rorl
popf
andb
shll
int3
add
sub
shl
icebp
clc
shll
loopne
pop
stc
cmp
push
rcll
dec
pop
lds
les
loopne
popf
shlb
xor
into
push
or
cwtl
dec
ret
les
jbe
out
setl
add
ss
aad
in
into
add
rolb
pushf
add
add
lret
sbb
lds
ja
add
fs
fcoms
iret
xor
rcll
fldcw
add
stos
in
into
sbb
aam
jae
add
shrl
pop
rolb
fsts
fdivrs
sbb
mov
cmp
mov
fst
mov
test
shrb
cmpsl
sbb
scas
dec
inc
mov
mov
adc
ljmp
int3
mov
dec
into
adc
ret
shll
jl
popl
pop
mov
into
sbb
xchg
jl
add
fmull
push
scas
or
shrl
mov
sub
leave
cmovs
in
mov
fwait
jge
arpl
and
cmp
sub
scas
xor
fnstenv
enter
and
and
pop
loop
jle
daa
push
loopne
mov
add
sarb
int
lcall
sbb
push
fldcw
frstor
lret
fistpll
mov
fsin
adcl
cmp
inc
add
outsb
mov
popf
insl
or
jle
rorl
fdivl
es
push
add
pop
jle
push
mov
iret
or
mov
mov
jecxz
popf
fisubrl
out
lret
iret
sub
rcrb
inc
jle
pop
pusha
js
incl
scas
jecxz
mov
dec
sahf
ret
mov
ds
lret
std
sub
shll
les
fidivrs
aad
scas
sbb
mov
shrd
ror
lds
call
jge
aad
mov
fistps
mov
call
lods
loopne
std
push
enter
cmp
add
mov
stos
call
xchg
outsb
mov
cmpsl
sahf
out
jle
cmp
or
jnp
out
jecxz
test
aaa
xor
mov
ljmp
add
std
call
mov
out
cmp
push
jl
mov
clc
bound
fsubrp
add
jecxz
rorl
lods
in
sbb
xlat
sbb
fsubs
fstp
cli
pop
fisubrs
in
pushf
sahf
les
mov
jmp
outsb
iret
jl
out
jle
in
jbe
add
out
jl
or
lock
mov
sub
fstps
push
clc
loope
repz
repnz
in
roll
push
outsb
fcomip
mov
sbb
rcrl
rolb
into
mov
fcom
enter
out
sub
icebp
inc
add
and
ds
mov
add
ss
icebp
cmp
and
mov
dec
jmp
cld
mov
ljmp
jno
testb
dec
jmp
mov
ds
jle
call
out
sbb
rcrb
movq
repz
imul
fwait
clc
add
in
in
les
ds
into
fsincos
in
inc
add
subl
jg
and
add
cli
inc
or
movsb
jg
stc
imul
jl
xor
cmp
fnsave
add
test
inc
hlt
add
lret
or
mov
mov
jle
mov
xor
call
push
add
mov
out
repz
js
fisttpll
push
cmpxchg
sti
add
xchg
jle
repz
fsub
in
loopne
jno
add
cld
jae
add
fnstsw
lcall
adc
adc
add
add
sub
pop
inc
jle
adc
jo
ret
test
add
xor
push
and
add
or
jecxz
mov
jg
addb
or
inc
addb
std
andb
movb
pop
jo
int
adc
inc
adc
iret
orb
call
xchg
negb
sub
fwait
add
bound
test
add
ficoml
cmp
ds
nop
sub
lea
hlt
orb
dec
xor
jg
sbb
push
inc
stos
hlt
je
jbe
add
push
mov
jge
sbb
dec
fwait
aas
add
push
or
roll
cwtl
scas
gs
mov
lcall
imul
jnp
pusha
pop
subb
or
aaa
out
pop
mov
pop
cmp
movzwl
add
mov
lods
inc
cmp
xor
sahf
jns
cwtl
jecxz
cmp
xor
lahf
inc
daa
testl
mov
mov
decl
dec
adc
add
ffreep
xchg
jnp
jbe
loop
push
and
xchg
js
add
rol
xchg
cwtl
stos
pop
andb
mov
std
shlb
add
mov
inc
ret
mov
out
add
movsl
lock
xor
or
cmp
adc
scas
mov
loopne
lea
jecxz
pop
jmp
cmp
xor
fidivs
jecxz
inc
push
mov
xor
xor
add
mov
cmpsb
pop
add
popa
sti
popl
movsl
loop
adc
pushf
movswl
push
testl
and
add
cwtl
cmp
in
add
daa
mov
add
enter
repnz
jge
jge
add
adc
sbb
subb
adc
add
pusha
in
add
in
sti
add
adc
add
sti
xchg
jno
out
sbb
mov
icebp
es
inc
inc
imul
inc
sbb
adc
sbb
add
inc
adc
xor
cmp
push
outsl
add
cmp
xchg
jb
lods
xchg
pop
out
add
mov
std
data16
add
mov
int3
aas
jne
cmp
mov
stos
mov
add
shrl
cmc
testb
jo
adc
lret
mov
subl
jecxz
jne
test
lahf
and
je
add
repz
pop
jle
jl
cmp
push
pop
inc
pop
push
rol
add
adc
dec
jns
lock
jmp
add
addr16
insb
jecxz
sbb
xchg
mov
add
xchg
and
out
jecxz
mov
imul
sti
les
sub
xor
aaa
push
xchg
pusha
push
mov
jno
sub
into
or
add
clc
inc
popa
xchg
add
iret
fwait
stc
imul
xorb
adc
std
xchg
jp
lret
sbb
sahf
repnz
push
fcoml
add
or
ds
mov
test
sbb
pusha
lds
add
aas
jecxz
imul
add
aad
fwait
add
in
jge
out
out
jl
add
mov
or
xchg
ja
jbe
add
mov
das
xor
pop
fstpl
cmpsl
push
js
cmp
movl
cld
pop
lret
push
xchg
mov
jmp
notl
mov
inc
add
inc
leave
arpl
cwtl
aas
jl
test
xor
add
xchg
xor
iret
inc
sarb
mov
pop
loop
pop
je
movsl
lods
ja
aaa
mov
cmp
or
fdivs
std
pop
int3
mov
incl
add
jnp
cmp
jmp
sub
andb
dec
add
roll
imul
add
pushf
out
or
mov
sbb
xchg
sbbb
add
xlat
test
dec
add
nop
jge
sbb
sahf
add
inc
add
rolb
fldl
les
in
pop
sub
aas
and
adc
lea
sbb
icebp
mov
fs
xchg
call
push
mov
jl
aad
js
add
cs
mov
push
mov
push
xor
pusha
insb
xchg
and
or
xor
mov
ss
add
ret
popf
sbb
jae
dec
out
loope
add
xlat
sbb
fdiv
add
adc
nop
sbb
jecxz
mov
and
add
pop
sbb
xor
outsb
jb
add
inc
xchg
int3
sub
jl
jp
shrb
add
mov
adc
add
lods
add
adc
mov
cmpb
sub
sub
ss
cmp
xor
enter
test
xor
clc
xchg
test
xor
mov
adc
inc
add
add
push
mov
enter
mov
in
pusha
xchg
adc
ss
rclb
shlb
std
imul
int
mov
push
mov
add
xchg
popa
outsb
xor
jg
sub
mov
movsl
cmp
push
iret
cmp
inc
adcb
stos
adc
daa
add
lret
dec
orb
cmp
mov
imul
mov
mov
aad
sbb
daa
fstps
and
push
test
mov
push
insl
pusha
sahf
add
mov
xchg
mov
add
dec
cmpsl
xchg
mov
add
mov
or
xlat
dec
lea
xor
rorl
fldl
adc
mov
mov
shl
jae
insl
sbb
sbb
rolb
add
lods
loopne
test
popa
xor
dec
xlat
push
ljmp
push
adc
add
imul
pop
popa
jno
mov
stos
and
filds
sbb
lods
push
mov
add
adc
sbb
lock
add
aam
add
xlat
data16
sti
pop
loopne
lret
mov
and
add
push
mov
jb
jmp
out
fdivrs
add
xchg
xchg
mov
lods
in
mov
push
mov
fwait
push
xchg
jns
sbb
mov
inc
jge
rorl
add
mov
pop
dec
outsl
orb
repnz
sbb
fmuls
inc
sub
pop
add
stc
ja
insb
mov
pop
add
sbb
add
jns
mov
sarb
add
lods
jbe
jl
add
lea
add
push
sarl
sti
add
dec
mov
sub
aam
out
shlb
pop
push
popa
out
add
test
lcall
hlt
push
cs
add
sub
arpl
cmp
pop
mov
push
sbb
cmp
je
imul
sbb
xchg
pop
and
das
inc
and
push
ss
add
cltd
sub
call
lret
mov
imul
add
or
mov
mov
popa
xchg
mov
cltd
sub
mov
mov
inc
push
cmp
ja
add
push
sbb
int
inc
add
aas
in
fwait
mov
add
and
pop
add
push
pop
mov
adcl
mov
ss
cmc
ret
xchg
jbe
pop
call
mov
push
int
add
xchg
mov
add
sbb
shr
mov
in
cmp
xor
mov
mov
pop
faddl
sbb
scas
adc
fucomp
data16
push
std
outsb
js
cvtdq2ps
repz
imul
in
jnp
cmp
pop
mov
jo
or
daa
pop
loope
addr16
ret
cmp
inc
shl
cmpsl
mov
jno
addr16
sbb
push
jl
inc
nop
xor
and
add
dec
jle
xchg
cmpsl
pop
add
add
in
cwtl
mul
cmp
insl
jle
pushf
out
xchg
or
sub
pop
jp
lea
movsb
cmp
fcompl
testl
lahf
adc
adc
jne,pn
addr16
add
pop
scas
cmp
mov
add
push
and
int
add
cmpsl
pop
in
imul
in
incb
inc
incl
ja
jecxz
adcb
pop
rcll
or
orl
or
daa
pop
icebp
mov
jecxz
dec
or
sub
adcb
lock
jg
int3
addr16
repz
out
jecxz
incl
stc
lret
mov
repnz
in
jmp
xchg
inc
add
pop
jp
add
pop
divb
and
pop
sar
or
jl
sahf
jnp
sahf
pop
add
jle
lea
cld
filds
sti
inc
dec
or
js
pushf
jo
jp
add
lods
jg
in
addr16
sti
add
out
idivl
test
adc
mov
lock
cmpsl
pop
std
jmp
loopne
add
fistpll
pop
in
push
lock
pop
sti
jmp
mov
sub
mov
pause
inc
add
out
add
jo
rclb
lahf
adc
or
jl
push
in
cld
iret
movsb
ror
outsl
or
adc
or
add
lock
je
adc
xor
mov
add
movsb
inc
pop
pusha
xor
sub
arpl
or
and
sbb
sub
or
and
pop
push
es
outsb
and
and
inc
sub
sbb
sub
lock
add
aam
cmp
xor
pop
out
mov
jae
push
jno
aaa
sub
cmp
mov
clc
movsb
repnz
aas
cmp
int
int3
cmp
push
inc
add
add
xor
xor
call
dec
cmp
mov
dec
movsb
mov
aam
dec
int3
mov
add
xor
adc
inc
push
cmp
hlt
les
aaa
dec
scas
aas
add
imul
int3
inc
pop
push
cmp
les
inc
in
adc
pusha
movsb
loopne
or
inc
pop
xchg
xchg
ret
shlb
add
push
clc
fs
pusha
imul
pop
sbb
lds
mov
or
fiaddl
jno
pop
fcompl
jae
mov
pop
inc
push
clc
fs
xchg
mov
jnp
lret
push
push
insb
pop
in
cmp
movb
or
cmpsb
jecxz
test
sbb
and
test
inc
xchg
jl
cmp
xchg
bnd
cmp
mov
pop
dec
sar
test
lods
sbb
mov
cmp
sbb
xchg
sbb
dec
xchg
leave
pop
cmp
xchg
inc
mov
pop
repz
je
xchg
insb
fsubrs
fs
and
fwait
mov
hlt
or
mov
lcall
test
lahf
sub
popl
ds
or
stos
aam
push
push
dec
test
insb
lret
addl
subl
lods
test
stos
in
aas
js
mov
dec
cmpl
pop
repnz
insb
push
adc
dec
scas
push
data16
js
test
mov
push
and
in
sbb
mov
add
jb
sub
out
jl
add
add
push
je
jecxz
stc
mov
incb
fmuls
into
in
int3
mov
shl
leave
pop
lock
cmp
dec
sbb
in
repz
ret
fadds
flds
lods
mov
pusha
push
nop
out
movsl
cmpb
or
cmp
sbb
loop
iret
jecxz
inc
in
shl
adc
cmp
aas
jl
call
add
fdivl
movsb
mov
adc
dec
cmp
cld
xor
dec
icebp
sbb
repnz
adc
mov
xor
imulb
jl
push
test
cmp
mov
int3
cld
std
fsub
jbe
jp
repz
out
inc
pop
rolb
popl
sarb
sbb
fadd
fiadds
movsb
dec
test
cmp
jo
or
sbb
or
xor
fldl
out
jbe
repnz
repnz
and
nop
or
test
test
and
push
stc
int
mov
mov
sbb
and
pop
movsb
lock
add
mov
insl
mov
mov
add
enter
sub
or
pop
push
cmpb
rolb
mov
adcl
pop
adc
push
cs
aaa
xor
mov
std
cmpl
push
subb
xorl
sbb
xor
xor
add
pop
inc
mov
ds
push
xor
into
arpl
jge
xor
dec
popf
decb
lods
es
mov
dec
fucom
dec
in
aam
sub
add
xchg
xchg
loopne
aas
std
push
cmp
push
insl
dec
push
jge
pop
lea
lods
cld
pop
mov
cs
pop
in
negl
inc
fsubs
push
lods
add
push
push
pop
pop
push
insw
cmp
dec
imul
int
mov
iret
outsb
in
out
std
icebp
jo
xlat
in
push
pusha
inc
pop
arpl
or
push
jbe
int3
ja
in
js
lea
jns
pop
jp
iret
jnp
out
int
jg
aas
jle
lahf
jg
ret
and
inc
jbe
loope
cmp
aas
shl
incl
pop
add
nop
or
lods
jmp
nop
xlat
mov
adc
xor
or
sbbb
lret
cmpsb
js
inc
inc
stos
js
xor
inc
scas
add
and
xor
pop
in
add
push
aad
movsl
inc
xor
or
inc
xor
popa
or
add
sbb
mov
mov
and
int3
mov
and
add
add
dec
jno
decb
int
add
cmp
inc
sub
inc
sbbb
adc
les
in
xlat
ljmp
enter
repnz
sub
ljmp
icebp
stc
mov
out
inc
inc
dec
add
hlt
cmp
add
mov
repz
cmpsb
out
mov
add
mov
xor
out
jmp
pop
add
fwait
jne
sub
cld
stos
test
add
testb
lock
sbb
clc
pop
enter
sub
daa
xorb
and
mov
jp
cld
mov
int3
icebp
scas
shr
divl
hlt
xlat
lahf
popf
jmp
aam
mov
out
loopne
das
ffree
repnz
loop
clc
mov
cmp
add
cli
adc
mov
ds
fldl
repnz
cld
roll
jecxz
and
jmp
icebp
std
add
cli
xor
jae
lret
mov
ljmp
cld
lods
push
int3
pusha
xor
testb
jle
add
xchg
dec
lods
into
mov
out
ret
mov
shr
pop
cwtl
push
mov
cli
lods
out
imul
sahf
stc
mov
aam
inc
shl
cmp
cld
add
enter
mov
mov
lock
sbb
sbb
in
fsubrp
cli
adc
pushl
mov
dec
ss
int3
inc
sbb
xchg
repz
jmp
pushf
add
mov
in
sub
jns
pop
cmc
dec
mov
push
aad
cmp
int3
loop
sub
add
out
jbe
dec
jmp
in
and
add
in
movsb
int
fistpl
divl
ret
ljmp
xor
cmp
sub
hlt
pop
xchg
cmp
cmp
fisubs
repnz
mov
push
aam
notl
hlt
out
cli
add
cmc
repz
std
das
mov
out
cmp
mov
push
aad
lds
lock
mov
shr
cmp
xlat
out
add
icebp
addr16
xlat
mov
cmp
shr
xlat
test
repz
mov
lock
movb
push
call
dec
mov
add
divl
icebp
dec
mov
and
push
add
xchg
push
sub
popa
push
xlat
cltd
js
mov
aas
addr16
or
idiv
cmp
add
nop
ret
imul
shlb
mov
imul
cwtl
shlb
shr
shr
clts
push
xchg
jle
out
mov
cmc
push
movsl
push
call
sub
out
adc
fists
jno
fcmovu
ficoms
incb
aas
inc
ss
xor
mov
aaa
inc
add
or
lcall
sub
add
jmp
aam
popf
jno
push
lea
jl
inc
rcrl
xchg
xor
stos
push
mov
mov
mov
nop
push
sbb
mov
mov
jae
add
push
dec
leave
add
xchg
jns
add
fwait
pop
jb
fsubrl
or
mov
shll
repnz
ret
dec
popf
fidivl
sbb
cwtl
xchg
stc
mov
sub
push
shll
shll
add
scas
sarb
ficompl
add
cli
sbb
inc
pop
mov
int3
les
ljmp
cmp
or
inc
int
add
lahf
jecxz
and
or
inc
scas
out
add
js
add
jle
pop
add
pop
into
mov
lods
mov
sbb
push
mov
xor
shll
icebp
shrb
test
std
and
roll
ret
inc
fs
loop
rolb
add
rorl
add
add
xchg
loopne
mov
adc
cmpsl
dec
mov
sub
add
roll
push
mov
leave
outsb
adc
mov
inc
loop
in
loopne
stos
xor
rorb
jle
cmc
fwait
add
rcrb
push
cmpsl
pusha
jbe,pn
pop
js
mov
inc
pop
sub
not
ret
test
es
and
sbb
push
call
xorb
cmp
xchg
loopne
loopnew
idivb
in
adcl
stos
cpuid
mov
ljmp
movsb
xchg
ljmp
stos
mov
pop
add
lcall
xchg
addb
ret
ljmp
clc
rolb
push
in
cmp
or
fwait
and
in
mov
es
ljmp
mov
mov
pop
test
inc
push
xchg
pop
adc
and
mov
test
sahf
mov
scas
andps
leave
stc
add
shrb
sub
sbb
sub
sub
mov
adc
or
lock
aaa
in
lock
rolb
les
push
insb
xchg
lds
lods
mov
orb
shrb
arpl
enter
add
fdivl
mov
es
stos
mov
xchg
sarb
cmp
and
or
lock
insb
dec
aaa
in
pmuludq
push
inc
inc
cmc
aam
jl
add
mov
mov
jne
bound
test
test
test
xorl
fildl
mov
and
sbb
int
add
fwait
or
add
mov
add
sub
pop
clc
or
std
and
addb
sub
js
mov
aaa
push
stc
jecxz
xor
call
scas
pushf
ja
add
xchg
cli
and
cmp
rorb
sub
addr16
ljmp
mov
sahf
cmp
lods
inc
jecxz
mov
sti
lock
xlat
insl
jae
mov
imul
aas
pop
mov
loop
sub
out
push
push
ret
rcll
sbb
clc
fimuls
in
ds
cli
out
out
jo
das
cld
hlt
xlat
outsl
aam
clc
cmp
xor
dec
cmp
add
xor
sbb
repz
add
cmp
push
fisttpl
adcl
add
add
shrb
mov
stos
xlat
aad
push
insb
arpl
dec
lock
cmpb
cmp
jnp
call
cmpsl
cmp
mov
popa
add
bound
xchg
pop
adc
jg
and
icebp
mov
add
es
mov
icebp
push
adc
mov
in
enter
loopne
sub
rorb
addl
or
dec
jo
out
adc
mov
inc
push
fiaddl
or
imul
out
pop
or
mov
push
es
add
test
int3
popa
add
adc
neg
mov
cmp
sub
and
dec
mov
mov
and
dec
leave
dec
pop
repnz
cmp
aaa
mov
pushf
and
sub
mov
pusha
add
dec
sbb
adc
enter
mov
ret
add
inc
mov
jne
sbb
subb
mov
iret
pop
fmull
jle
loopne
jns
and
sub
mov
sub
mov
push
adc
or
aaa
and
adc
fsetpm(287
out
and
test
xchg
xor
mov
adc
cwtl
inc
xchg
adc
popa
push
loop
sbb
cli
or
pop
divb
xchg
js
and
lret
xchg
repz
aad
inc
or
fcmovbe
mov
push
loopne
data16
cmp
or
adc
mov
add
cmp
leave
int
mov
adc
clc
cltd
add
sub
outsl
add
cmpsl
inc
push
mov
mov
dec
pusha
push
xchg
fcmovbe
add
jl
sub
aad
pop
mov
or
andb
sarb
cmp
pop
xor
add
xor
mov
dec
jecxz
rcrl
in
test
mov
or
dec
fadds
mov
xchg
push
subl
daa
dec
aad
mov
sbb
sti
aad
in
add
out
xor
je
pop
sbb
lret
add
addr16
out
jmp
jb
sbb
xlat
sub
lock
add
push
out
push
push
mov
jecxz
mov
push
add
sub
loopne
push
loopne
fs
fcmovnbe
in
data16
lods
rcrb
or
cmp
sbb
and
cmp
jle
aam
pop
mov
add
mov
sub
loope
std
mov
xchg
insl
andb
add
and
in
mov
mov
mov
pop
sarb
cld
or
clc
add
lods
data16
or
cmp
and
pushf
mov
add
add
je
add
inc
mov
push
into
adc
push
add
mov
addb
lock
jo
xlat
in
loope
cld
push
pop
mov
fisttpl
add
inc
sub
pop
out
jle
stc
lret
data16
add
pop
stos
sub
js
in
sahf
idivl
cmp
add
mov
sub
xchg
xchg
mov
in
call
rorl
scas
sbb
incb
mov
xchg
fstps
mov
add
adc
js
loop
and
sbbb
roll
sub
rorb
cs
jge
and
xor
push
mov
fs
fidivrl
rcrb
xchg
sub
add
xchg
int
inc
cmp
stos
add
call
or
jbe
mov
and
sarb
add
je
jp
jmp
stos
inc
mov
xchg
jnp
test
mov
push
pop
pop
in
call
add
mov
mov
cmp
rolb
dec
stos
add
jbe
mov
mov
clc
lods
add
fcmovnbe
xchg
add
in
add
ffree
dec
repnz
rol
add
fadds
aas
add
andb
mov
sub
sub
rcl
aaa
cmpsl
mov
pop
into
repz
add
cld
out
btc
dec
hlt
add
dec
fcom
xchg
sahf
out
xchg
das
fcmovb
out
in
adc
and
cmp
xor
add
jl
pushf
add
addr16
add
add
stc
mov
add
out
push
orb
add
jae
das
std
out
js
pop
mov
testl
ret
mov
add
dec
xchg
into
fadd
xor
mov
jmp
out
mov
push
cwtl
jecxz
repnz
mov
adc
pop
add
fstpt
xor
add
dec
stos
cmp
jnp
aad
xor
pop
jno
and
icebp
cwtl
xchg
popl
repnz
scas
add
xor
push
or
add
loop
mov
iret
mov
jnp
sti
loopne
into
mov
faddl
jmp
notl
out
mov
stos
sahf
js
lods
sti
cmp
jg
xlat
sarl
jbe
push
fsubrp
xchg
outsl
cli
in
aaa
sbb
push
mov
addb
push
js
stos
cwtl
repnz
aas
fcom
xchg
cld
adc
pusha
sbbl
cmp
jl
test
cmpsl
add
out
pop
mov
ret
push
push
add
arpl
ss
jbe
add
pop
cmp
jnp
cmp
xor
into
ss
push
cwtl
dec
or
mov
sbbl
sbbb
fxch
add
add
idivb
push
fs
jge
out
dec
test
pushf
into
pop
mov
jl
add
jle
testl
and
push
mov
outsb
clc
fs
adc
xchg
jbe
js
cwtl
bnd
mov
clc
clc
sbbb
cmp
fs
movsb
and
lock
dec
mov
jp
sbb
xchg
cmp
xchg
pop
xchg
js
cwtl
pop
xchg
stc
sahf
clc
cld
mov
inc
or
mov
mov
scas
clc
add
int3
mov
in
mov
js
aas
iret
movsl
mov
mov
clc
rcrb
jg
out
jg
jns
pop
push
lds
int3
fdiv
into
clc
leave
mov
lock
sbb
aam
jnp
fcoms
fdivrp
std
loopne
fistpl
mov
in
popf
out
mov
cmp
test
ret
in
fdivr
out
sub
movsb
inc
cltd
out
clc
hlt
pop
out
test
negb
aas
aad
lahf
cld
clc
clc
pop
sbb
pop
mov
jns
stos
dec
clc
or
ds
pop
or
rcll
xchg
cli
clc
cld
adc
push
ud1
fstpl
and
cmp
lahf
shr
fbld
cmp
sub
sub
pop
xorb
xchg
xor
mov
decl
hlt
aaa
jge
arpl
cmp
jmp
out
aas
sbb
addr16
into
movl
dec
fnstcw
push
jbe
dec
sbb
jmp
pop
mov
cmp
stc
andl
bound
cltd
fs
fldenv
xor
cmp
xor
insb
push
mov
or
pop
mov
cltd
sub
cld
and
push
add
add
mov
test
divl
cwtl
clc
add
mov
iret
test
or
push
cltd
addl
fidivs
test
cld
mov
lcall
add
mov
lods
cltd
add
jns
fstl
lock
leave
or
push
es
pusha
shrb
imul
pushf
mov
mov
into
jmp
aas
shl
pop
sarl
popf
or
aad
fidivrl
mov
sahf
loop
cmp
pop
mov
dec
mov
in
fldcw
leave
add
push
or
sub
add
push
loopne
cmp
cmp
leave
xchg
xor
lahf
pop
inc
pusha
pop
add
and
pop
mov
push
mov
pop
pusha
or
xor
or
jp
leave
jo
idiv
mov
rsm
sahf
sbb
mov
add
sbb
cmp
mov
sub
sub
jns
mov
pop
cmp
pusha
cmp
mov
rcrb
and
xor
lock
movsb
scas
or
or
pop
les
add
xchg
dec
iret
in
cmp
mov
out
push
lret
fcmove
scas
push
fsubl
lock
rolb
cmpsb
fdivs
enter
mov
and
cmpsb
mov
lahf
pop
dec
cmpsl
jae,pt
cmp
cmp
movsb
jno
movsl
inc
lret
xor
js
test
popf
test
int3
adc
into
roll
nop
cmp
push
push
cmp
xor
ds
push
push
cwtl
test
mov
and
pop
and
movsb
jle
xchg
stos
inc
sbb
cmp
mov
mov
clc
pop
sbb
test
sub
stos
add
movsb
mov
cmp
lahf
xchg
inc
mov
int3
out
mov
test
xchg
lret
adc
cltd
ljmp
ret
push
cli
stos
enter
rol
sub
push
lock
jmp
mov
xor
test
lds
lock
mov
jg
lret
mov
or
pop
aam
test
xchg
lods
sarb
scas
cmp
stos
ret
pop
lret
es
repnz
add
mov
insb
cli
add
mov
shlb
scas
es
ret
jae
arpl
mov
call
enter
sub
jo
cmp
inc
imul
loopne
lods
push
dec
lods
fwait
pop
pusha
lahf
cli
lods
jle
sbb
xor
ret
mov
inc
insl
dec
and
loopne
jae
add
xor
psubd
sti
mov
dec
add
dec
cltd
add
jo
test
inc
pop
imul
add
in
add
mov
cmp
mov
test
mov
fadd
dec
lock
rorb
inc
mov
lret
mov
addb
stos
lods
cmpsl
dec
add
mov
cli
rcll
mov
mov
sti
fsubs
add
push
pop
std
jbe
pusha
inc
mov
rorb
push
mov
imul
pusha
cmpsl
daa
add
inc
dec
mov
jmp
add
test
xor
push
xor
mov
jbe
or
cmpsl
inc
add
pop
lcall
roll
pop
ds
sti
rcr
sub
or
or
mov
mov
fdivs
loopne
std
cmpb
lret
cmpsl
inc
cld
adc
pop
mov
cwtl
mov
sti
add
xor
cld
inc
cltd
dec
loopne
pop
xor
and
cmpsb
add
scas
adc
add
adc
test
pusha
sub
sbb
xchg
and
lods
pop
inc
movsl
add
ret
mov
pusha
mov
add
mov
sub
cli
imul
mov
jno
test
inc
into
mov
and
add
xchg
lcall
add
js
in
stos
cmp
mov
rol
xchg
pusha
push
or
shll
add
scas
or
add
repz
jae
cmp
lds
rcr
mov
fwait
pop
add
sbb
lahf
push
pop
les
pusha
or
jns
cmp
pop
std
xor
fdivrl
mov
mov
mov
add
incl
adc
add
stos
fsubrp
js
add
test
add
mov
rol
cwtl
jl
fistpl
mov
push
or
mov
pop
add
enter
lret
inc
jp
dec
fstps
rcrb
test
int3
jl
cmpxchg
outsl
or
mov
cld
in
shlb
cmp
cmp
or
mov
mov
aad
cmp
pop
sarb
pop
loop
add
or
jl
jg
out
jbe
cmp
fcompl
sbb
repnz
hlt
pop
in
negb
ds
pop
cli
mov
stos
add
bnd
push
sub
push
jge
or
loopne
ret
push
std
clc
adc
popf
adc
push
jge
sbb
ljmp
in
andl
shlb
cmp
es
sub
adc
stc
cs
std
xor
shll
dec
xor
shrb
ds
mov
jns
aas
aaa
lea
aam
inc
jge
dec
in
rolb
xchg
fnstenv
aas
dec
std
adcb
push
or
cmp
popf
cvtps2pd
mov
pop
sbb
lahf
inc
in
iret
mov
sub
enter
push
imul
xlat
jb
dec
cmp
jl
fst
outsb
jge
ja
arpl
pop
loope
sbb
push
jl
push
jg
jp
popf
cmp
insl
int3
imul
pushl
xchg
out
cmp
lahf
xchg
xlat
xchg
or
popf
jns
cmp
push
daa
lods
inc
mov
and
orl
std
out
sbbb
sbb
mov
repnz
push
int
push
insb
mov
sbbb
lret
mov
fidivrl
sub
mov
jecxz
aad
or
xor
in
xchg
jge
and
int
ds
jecxz
mov
mov
add
sarb
add
fimull
ret
std
cmp
stos
sti
cmp
lcall
rolb
fists
jae
cmp
rorl
in
nop
add
fmul
jg
clts
jle
nop
sbb
lods
enter
pop
jns
cmp
jae
cmpsb
call
stos
in
sbb
fsubrl
je
pop
jecxz
jge
sbb
loop
mov
into
dec
movl
fcompl
cmp
mov
inc
lret
sbb
add
fsubrp
in
iret
ss
hlt
or
ljmp
adc
fistpl
jle
mov
pop
mov
or
in
or
adc
cmpl
dec
xchg
sbb
ficomps
rcrb
push
rclb
mov
es
andb
adc
test
jp
add
cmp
add
jmp
fcoms
dec
jl
pushf
mov
xor
fnstcw
cpuid
ds
movsb
sahf
popf
pusha
repnz
mov
sbb
sbb
mov
out
or
fmull
rcrb
ffreep
sbb
into
in
mov
xchg
jbe
add
les
or
loopne
popa
scas
mov
xor
faddl
sahf
out
out
jmp
mov
xor
add
mov
push
pusha
push
rcl
ffreep
in
in
sub
pop
loop
mov
fistps
pop
or
out
out
dec
into
lock
loopne
fimuls
pop
shr
in
cmp
out
pop
dec
sahf
in
lods
outsl
pusha
ds
jmp
out
je
mov
cli
mov
shl
inc
aad
mov
jg
add
push
iret
loop
scas
mov
shll
and
add
jl
loopne
into
fsubr
sbb
out
sub
jecxz
jle
out
mov
ret
xor
repnz
cwtl
ljmp
int3
sahf
lock
jg
loope
jecxz,pn
iret
in
ljmp
js
out
or
fldt
dec
pop
lock
roll
cmc
push
jg
adc
clc
dec
add
out
fstl
fildl
aas
out
fadds
out
xor
stos
add
scas
repz
aas
out
sub
and
xlat
jno
imulb
dec
loope
outsb
and
sub
cmc
rorl
out
inc
ss
fcomip
mov
xor
neg
hlt
add
ds
insb
fdivp
mov
negb
jbe
jns
sub
adc
scas
out
jae
divl
clc
pop
pop
das
lock
stc
lahf
loopne
push
je
faddl
clc
pop
outsb
stc
mov
cli
add
negl
scas
shrl
push
lahf
in
outsb
cmp
xor
out
insl
repnz
in
aam
icebp
push
jle
add
aas
cmc
nop
sub
sar
sbb
cmp
pop
clc
pop
outsl
cli
js
out
lahf
std
pop
dec
fcomip
xlat
pushl
psubw
cwtl
jae
cli
mov
xchg
fmul
lcall
nop
scas
cld
fimull
in
aas
lret
iret
sbbb
shlb
pop
in
loop
adc
clc
add
repz
nop
pusha
roll
fcoms
inc
xchg
pop
dec
mov
call
sbb
ror
js
mov
rorb
xchg
mov
push
pop
sbb
adc
movl
cltd
push
loope
add
cmp
inc
test
or
cwtl
mov
fcoms
sahf
popf
add
sub
leave
repnz
add
test
je
dec
nop
pop
and
insb
pop
xchg
cmp
inc
jg
add
stos
inc
mov
sar
mov
jno
cmpsl
fcompl
test
lods
imul
push
xor
arpl
xchg
and
fptan
gs
cltd
xor
pop
xor
mov
imul
lds
fnstenv
pop
pop
iret
cmpsb
or
idiv
xchg
mov
lcall
ret
aad
jl
add
push
gs
adc
shll
int
pushf
cmp
lock
movsl
cmpsl
sbb
fisttpll
sub
rcrb
sti
add
jle
cmp
aam
pop
leave
dec
jne
jno
stc
imull
mov
es
mov
sub
cmp
out
call
add
and
or
outsl
add
inc
mov
pop
or
rcrl
xchg
cli
mov
cmp
or
rolb
sub
lahf
ret
dec
stos
std
push
add
push
movsb
add
mov
inc
or
jle
mov
push
adc
jp
jl
sub
mov
adc
addl
enter
jno
sub
dec
and
in
sarl
mov
xor
jo
fwait
fs
add
xor
add
dec
aaa
out
add
iret
aas
mov
repnz
sbb
sub
nop
dec
sbb
add
xchg
scas
hlt
sti
add
insb
ret
or
test
je
dec
adc
data16
imul
pop
fistpll
or
xor
mov
cltd
test
lret
fs
inc
mov
lock
adc
mov
test
add
push
add
bound
mov
push
cmp
dec
push
cmp
ss
lea
pusha
jno
aam
cli
test
in
in
clc
sub
adc
xor
mov
xlat
push
int
push
fcomps
lcall
adc
dec
test
cmovns
push
and
stos
xlat
int3
insl
add
mov
mov
jg
pop
in
fiadds
aaa
push
cs
shrb
mov
or
aad
dec
push
leave
or
mov
les
mov
pop
pop
outsl
add
test
pop
cmp
cmpsb
mov
push
and
pop
rolb
rorb
add
ficompl
add
pop
pop
cmp
inc
add
lret
add
add
lahf
adc
adc
dec
mov
xor
fcoml
push
jl
jno
sbb
jo
sbb
cmp
enter
jae
cmp
add
mov
jg
pop
mov
scas
out
xchg
outsl
es
xchg
cltd
fisubl
dec
popa
stc
test
cmp
pop
in
sbb
ljmp
add
xor
add
repz
adc
add
ss
test
in
push
mov
xor
mov
jns
bound
aas
outsl
push
jno
fiaddl
or
scas
das
mov
xor
dec
lahf
add
out
orl
shrb
pop
push
subl
scas
mov
lods
jae
xor
popa
jno
nop
cli
test
or
mov
pop
mov
inc
es
add
mov
xchg
sarb
rcll
and
call
adc
push
in
stos
mov
mov
add
push
jo
add
loopne
inc
cwtl
xor
jl
add
inc
faddp
xchg
sub
xchg
in
hlt
sbb
imul
push
aam
bnd
lock
push
add
pop
xchg
mov
rcrl
leave
inc
add
fstps
inc
pop
es
cmp
inc
xorb
pop
aam
cmpsb
das
pop
fsts
nop
cwtl
cld
xchg
mov
inc
pop
or
fidivrs
movsb
inc
addl
add
push
int
ja
leave
push
icebp
xor
ss
aam
pop
std
jp
popa
sbb
push
pop
cwtl
add
in
adc
clc
in
mov
inc
scas
push
dec
or
push
inc
aam
lea
inc
add
das
push
cmp
and
sub
leave
xor
add
lds
ret
push
xchg
push
add
add
dec
test
lcall
rol
push
add
aaa
shrb
lods
dec
out
lret
add
pop
adc
add
andb
hlt
add
push
push
add
aaa
mov
ret
inc
in
pop
aas
daa
cmp
xchg
jmp
pushf
pop
cltd
or
call
in
sub
jge
mov
add
push
movsb
and
and
int
cmpsb
mulb
dec
add
dec
adcb
and
rorb
pop
cmp
sub
pop
cmp
cmp
dec
add
dec
push
and
push
cmp
push
lret
jae
out
mov
idiv
lds
adc
adc
pop
enter
lea
test
mov
mov
pop
leave
pop
dec
lcall
es
js
cmp
or
push
mov
into
shlb
aad
les
not
push
adc
xchg
or
add
in
decl
add
data16
add
pop
adc
mov
lods
mov
push
inc
cmp
dec
hlt
jg
mov
mov
cmpb
lret
imul
push
or
cmc
push
popl
jge
jo
cmp
push
dec
xchg
mov
notb
or
lcall
leave
jge
add
aas
mov
mov
rcl
mov
dec
rol
mov
add
xor
add
gs
xor
fnsave
ja
daa
add
sub
or
pop
in
sub
and
push
jne
mov
add
pop
fdivs
faddl
roll
xchg
es
sub
lea
pop
add
pop
xor
add
jl
cmc
rclb
lds
sub
jecxz
fsubl
add
pop
mov
mov
arpl
shlb
popl
dec
repz
pop
pop
enter
incb
das
mov
inc
decl
popf
push
or
and
inc
popa
cmc
dec
jbe
inc
lock
jo
pop
sub
daa
fisttpll
jl
sarb
fwait
into
add
xchg
xor
sbb
xchg
cmp
data16
xor
outsl
hlt
ss
dec
mov
dec
mov
loopne
cmp
push
add
cmp
js
js
sbb
jge
out
int3
je
xchg
sbb
in
scas
sub
xchg
jno
add
jmp
pop
jno
add
hlt
push
mov
icebp
dec
cmp
mov
add
lods
pop
sahf
add
cmpsl
cmp
add
mov
aas
jecxz
xor
fscale
ljmp
cwtl
lret
shrb
icebp
inc
adc
cs
rolb
sbb
pop
addl
and
cmpsb
std
in
cmpsl
xorl
jns
or
xor
mov
cltd
push
cmp
jns
add
jmp
inc
jnp
mov
ss
pop
cltd
push
lock
outsb
incl
pop
pop
sbb
rorl
hlt
lcall
mov
inc
es
in
add
out
scas
add
sti
in
fildl
lret
mov
push
mov
ds
add
mov
inc
or
shrl
xchg
jbe
test
push
cmp
int3
in
push
add
and
add
jecxz
xor
mov
rcl
in
test
popa
add
xor
das
stos
call
add
mov
testb
pop
and
pop
out
add
inc
insb
inc
mov
or
jle
xchg
aas
pop
out
xor
mov
fsubr
pusha
loop
fistps
cmp
std
into
mov
sbb
cld
loopne
das
rol
andb
es
pop
repnz
add
ret
lahf
jp
lds
pop
jo
add
das
lcall
sbb
out
lods
mov
jns
psrlw
jle
test
and
rolb
fsubs
adc
cmp
js
fdiv
cmp
insl
add
or
movsl
xchg
test
push
shll
ret
int3
xchg
gs
clc
pop
cwtl
mov
dec
pushl
mov
xor
add
pop
std
adc
testb
mov
test
ds
cli
sbb
sub
push
cltd
mov
movsl
add
cmpsl
jns
add
or
dec
xor
xchg
cmp
in
cmpb
lret
mov
mov
cmp
rolb
out
mov
add
xor
or
mov
loope
add
sub
pop
or
dec
add
mov
addb
sbb
sub
adc
pushf
loope
jmp
cwtl
sbb
mov
aas
ret
add
and
hlt
add
in
in
mov
loopne
xchg
mov
mov
adc
sub
add
adc
xlat
xorb
adcb
xor
inc
jp
add
xor
loopne
and
inc
in
test
mov
aas
add
inc
test
dec
pop
int
or
insb
or
mov
mov
lret
xor
lods
inc
dec
inc
add
in
inc
mov
call
pop
push
or
push
sbb
push
sub
push
cmp
mov
push
inc
fcoms
pop
jg
aas
pop
pushf
mov
mov
fcompl
cld
andb
popa
sbb
bound
cmp
cmp
cmp
fs
out
insb
hlt
addr16
mov
imul
int3
out
fdivr
bswap
and
rolb
or
inc
jno
jb
addr16
jae
loope
pop
cld
jbe
pop
jns
js,pt
add
pop
cwtl
jp
repz
sti
jge
inc
jnp
clc
jg
out
arpl
subb
cmpl
dec
mov
pop
sub
fcomip
ret
stc
stc
mov
jg
aas
mov
fmul
inc
sub
push
or
xchg
sbb
pop
mov
dec
pop
xchg
pop
in
pop
mov
cwtl
mov
cltd
pushf
out
lods
repz
mov
xor
test
loopne
or
mov
sub
mov
jl
stos
inc
mov
pushf
clc
stos
lods
lret
pop
leave
insb
add
into
scas
cld
shlb
adc
clc
mov
mov
mov
cld
mov
lret
jecxz
fmul
mov
stos
scas
movsb
cwtl
and
dec
cmp
sub
ret
cmp
jg
scas
lds
jl
enter
pushf
repz
lret
mov
int
std
into
inc
scas
mov
or
rcrl
cmp
aam
ret
aad
stc
insb
cld
xlat
jl
fadds
mov
shrl
push
call
lahf
fmul
fstp
cmp
fsubrp
inc
int
loopne
ds
xor
lods
mov
sar
rcr
mov
add
jo
push
lock
hlt
addb
arpl
cmp
out
rorb
dec
push
sub
xchg
mov
push
orb
sub
push
iret
mov
test
inc
jae
loopne
add
push
adc
and
repnz
aas
or
addb
mov
movsl
in
pop
shlb
addb
cmp
cmp
pop
call
jle
cmp
adc
add
sbb
sbb
ret
pop
std
clc
and
and
sub
cmp
es
jge
sub
sub
loopne
out
rolb
xor
dec
xor
or
into
xor
dec
rolb
insb
popf
push
jmp
insl
call
mov
jns
jns
mov
stos
and
fsubrs
ds
aas
jg
mov
sbb
sbb
addb
stos
aaa
mov
inc
xchg
push
aad
mov
fnstcw
push
sub
out
arpl
sub
xlat
pop
nop
push
fldl
push
jg
jge,pt
sbb
push
jne
sub
sbb
cmovo
pop
enter
sbbl
add
xchg
lods
jecxz
xor
adc
dec
test
push
stos
add
add
int
jg
add
xlat
sbb
std
ret
or
mov
jg
fnstenv
add
push
popa
in
test
js
out
jbe
repnz
add
movsl
push
mov
pop
fsubrs
xchg
mov
cmp
inc
decl
out
cld
or
add
add
aad
sub
fsts
mov
inc
in
jo
sub
jge
pop
addb
dec
xor
cmp
cwtl
xor
xchg
push
std
pop
pusha
mov
mov
cmp
movsl
in
cmp
xchg
js
test
fidivrl
subl
stos
mov
lods
push
je
fisttpll
in
pusha
jne
insl
add
add
pop
mov
ret
jge
loopne
fldl
pop
sahf
pop
pop
mov
je
jg
mov
mov
rol
pop
sarl
cmp
cmp
xchg
add
gs
fwait
jge
les
ret
adc
sub
pushf
orb
std
sub
shrb
iret
pop
lret
or
sbb
add
fnstsw
mov
mov
jne
xorb
xchg
add
cltd
ljmp
shl
jo
add
in
adc
mov
gs
sub
rcrb
fldl
jo
cmp
call
les
in
jbe
int
dec
ljmp
cmpsb
cmp
add
jge
int
in
test
sti
pop
popf
fstpt
in
pop
std
clc
add
pusha
add
loopne
cmc
add
nop
addl
add
call
mov
jo
pop
scas
clc
or
push
nop
add
cmp
std
add
push
popa
or
int3
mov
in
repnz
adc
rcr
dec
std
jg
arpl
push
sbb
cmp
mov
cli
int
cld
pop
clc
and
push
bound
push
pusha
and
loop
inc
xor
aas
adc
es
jge
push
jns
clc
xchg
clc
and
popf
sbb
loopne
aas
loopne
sbb
jbe
xor
arpl
loop
sub
jmp
or
inc
push
sar
enter
sahf
sahf
stc
cmp
cmp
fsub
lock
push
fs
jae
cmp
xor
fisttps
pop
pop
xor
jp
int
cmova
inc
jle
dec
jl
cmp
add
hlt
loop
in
pop
add
inc
jle
dec
mov
push
xchg
ucomiss
inc
repnz
pop
out
cmp
fldenv
mov
pop
or
clc
lock
push
pcmpgtd
out
fadds
mov
arpl
pusha
inc
push
bound
push
insb
clc
loop
insl
fs
stc
imul
mov
out
in
popa
mov
fsubs
jle
add
arpl
addr16
sbb
pop
outsb
in
ds
push
add
out
scas
addr16
out
jbe
jge,pt
jae
dec
fs
add
jg
sub
push
push
je
xchg
or
data16
or
inc
pop
call
jbe
jo
mov
xchg
aad
push
jmp
test
gs
pusha
xchg
mov
add
ja
in
xchg
cwtl
clc
fwait
jg
cmp
sahf
jbe
jg
add
or
mov
push
mov
adc
jmp
iret
repz
adcl
xchg
fdivp
scas
cwtl
mov
jmp
dec
add
push
addb
cmp
repz
loope
in
mov
outsb
xor
imul
mov
stc
mov
enter
andps
mov
insb
ret
jae
cmp
dec
add
sarl
jbe
cmp
or
or
int3
adc
mov
cmp
orb
push
adc
add
nop
clc
add
or
outsb
xchg
jle
fmuls
and
push
adc
shrb
sbbl
cmp
out
mov
loopne
push
outsb
loope
cli
xchg
jbe
cmp
ds
in
pmulhw
out
adc
call
jmp
out
mov
add
add
jp
adc
icebp
push
push
outsl
repnz
dec
enter
shlb
lock
mov
sahf
out
scas
xor
mov
jl
paddd
out
lcall
add
lock
xchg
sbb
loope
adc
cld
ss
jecxz
in
pop
lock
fimuls
pop
arpl
add
jg
cmp
push
jno
pop
adc
arpl
aas
leave
adc
lock
xchg
sbb
aaa
repz
jo
adc
xor
add
push
pop
sub
and
pop
jb
das
and
arpl
enter
pusha
adc
inc
jo
cmp
push
sub
popf
sub
sub
ret
das
clc
xor
jae
xor
mov
aas
popl
or
outsl
xchg
clc
push
sarb
je
scas
into
cmp
cmp
addb
jo
js
jg
xorb
repnz
je
dec
cltd
inc
pop
jle
outsb
in
jg
dec
jg
aas
dec
lahf
lahf
dec
scas
iret
dec
mov
dec
dec
cmpsl
hlt
shl
inc
pmaddwd
in
jo
sub
jne
aas
into
push
dec
push
pop
xchg
push
outsl
loope
jg
pop
pop
jg
aas
pop
scas
jg
pop
iret
mov
fistps
xchg
push
push
invd
std
pop
addb
lock
push
test
mov
inc
pop
aaa
in
lock
mov
jle
pop
orb
mov
cmp
lock
push
add
sub
fnstcw
xor
loopne
nop
test
mov
std
sub
mov
inc
sarl
outsb
xor
in
mov
push
pop
das
loope
outsl
mov
adc
cmpsl
add
mov
testl
and
lods
add
idiv
call
pusha
cmp
in
add
xor
cld
mov
add
jp
mov
rcrl
jno
mov
jmp
jge
iret
std
sub
jo
test
lods
call
out
rcrb
int3
sub
jbe
add
push
subb
cld
loop
cmp
fistpll
mov
pushl
add
cwtl
stos
xlat
pop
sub
sti
pop
add
jmp
pop
incb
fisubrl
add
shr
call
sub
pop
ljmp
pop
add
jecxz
push
shld
mov
jmp
lahf
fisubrs
jnp
lock
pop
cmc
loopne
add
xchg
into
pop
bound
sbb
testb
ror
fwait
aad
pop
mov
in
hlt
cli
f2xm1
jbe
jae
push
aas
shr
push
aam
add
in
data16
imul
into
loopne
sub
icebp
mov
rep
fbstp
and
cli
filds
pushf
mov
push
mov
repz
clc
jns
cld
jbe
add
jmp
lcall
insl
and
push
sbb
lock
and
in
jno
jp
hlt
mov
inc
sbb
inc
pop
ljmp
mov
and
mov
in
clc
in
leave
sbb
push
sub
dec
mov
inc
insl
repnz
std
jmp
pushf
sti
xor
or
icebp
cld
loope
fbld
int
es
push
or
orl
ret
jp
ss
or
hlt
push
jg
arpl
cmp
cmc
in
inc
test
clc
xchg
test
pop
test
mov
test
imul
jmp
repz
ja
lret
stc
add
pop
nop
test
add
out
fdiv
je
or
dec
mov
pop
add
add
loope
popf
roll
sbb
cli
sti
dec
mov
rorl
enter
repz
and
hlt
movsb
jecxz
cmp
inc
fidivrs
add
out
xchg
iret
push
push
mov
aam
adc
mov
fbstp
mov
inc
dec
push
andb
test
inc
jmp
mov
jno
jmp
xchg
cld
sub
jecxz
lods
ljmp
es
rorb
push
sub
add
push
sbb
imul
out
mov
loop
sar
insl
in
repnz
cs
mov
sbb
nop
push
mov
popa
fcmovnbe
pop
mov
scas
jp
in
and
arpl
repnz
ds
fsubr
daa
mov
jg
js
in
mov
dec
in
push
xor
shl
add
sub
mov
jmp
and
dec
inc
sub
push
push
adc
pop
cs
and
xor
aam
std
sub
pop
pop
push
adc
add
loopne
pusha
sbb
push
push
inc
sbb
pop
mov
nop
cmp
leave
mov
iret
lahf
xor
into
add
cmp
adc
lahf
add
stos
mov
mov
push
push
add
sub
scas
enter
adc
fdivs
mov
add
dec
int3
cltd
js
mov
js
ljmp
addb
or
dec
pop
out
xor
and
and
fdivs
mov
sbb
loopne
inc
xchg
insl
aad
movsb
add
mov
ret
stos
push
inc
inc
bswap
jl
push
xor
arpl
add
fstpt
int
mov
shlb
inc
mov
xchg
xchg
mov
sbbb
jecxz
xor
ss
and
jae
jmp
fldl
lcall
sub
inc
test
add
nop
aad
stos
pop
mov
std
add
clc
repz
iret
iret
test
loopne
dec
adc
push
shll
inc
mov
dec
rorb
test
addb
enter
loopne
mov
lock
clc
and
xor
add
jl
subb
dec
cwtl
xchg
or
push
or
lcall
lea
shlb
outsb
test
or
jg
seto
pop
inc
inc
cli
dec
xchg
fs
aaa
cmp
movsb
add
pop
loop
cwtl
add
sbb
and
add
dec
test
repnz
les
addl
out
adc
lds
cmp
nopl
test
push
ds
movsb
add
xor
enter
or
mov
fwait
cmp
push
dec
pop
mov
inc
sbb
imul
mov
add
mov
cmpsb
cwtl
mov
stos
movsl
add
jmp
lods
mov
add
push
cmp
add
and
das
clc
add
shlb
in
fs
add
pop
xor
mov
inc
rol
sub
mov
inc
mov
scas
mov
and
mov
outsb
pop
nop
loop
mov
sub
imul
pop
jo
add
int3
outsb
adc
jl
lock
pop
inc
add
scas
bound
addl
mov
dec
inc
cmp
idivb
sub
cs
pop
clc
xchg
rorl
mov
subb
xor
pop
enter
add
icebp
int3
jge
pop
bound
mov
cmp
mov
shll
push
cmp
insl
je
roll
sub
push
aas
or
pop
inc
fs
sub
sarb
pop
in
add
dec
mov
or
pusha
and
pop
scas
nop
cwtl
mov
and
inc
stos
add
mov
rcl
repnz
das
je
push
or
add
xor
pop
cld
addl
mov
aam
pop
loopne
cmp
adc
add
dec
cmp
imul
paddq
cli
add
imul
adc
mov
dec
rcr
mov
enter
in
or
sbb
jno
je
ds
add
mull
loop
jb
pop
ds
mov
cmp
pop
in
xlat
push
scas
std
or
fimuls
sbbb
pushf
leave
add
call
push
and
movsb
dec
xor
adc
aas
add
mov
nop
dec
push
fdivp
add
lds
pop
add
or
add
cmp
xchg
pop
outsl
pop
jns
mov
inc
dec
ds
ss
sbb
xchg
cmpsl
shr
out
add
mov
ret
and
mov
cmc
shrd
into
pusha
inc
cld
xor
loop
push
pop
xorb
and
adc
incl
mov
push
fildl
ljmp
aam
lock
popa
into
mov
shlb
adc
cmpsb
pop
sub
add
fcoml
mov
sbb
gs
xor
mov
cmp
and
repz
add
je
fdivrs
movsb
push
mov
rolb
cld
rclb
fistl
hlt
sbb
add
call
rolb
icebp
mov
mov
pop
loope
inc
clc
lret
cld
cld
add
sub
test
push
mov
add
gs
inc
add
xor
lret
stos
pop
cli
repnz
sub
or
mov
das
xor
adc
add
mov
cld
daa
or
and
out
mov
mov
add
repz
aam
nop
je
cmc
int
lea
addr16
mov
in
idivb
fildll
into
jns
test
cmc
mov
cmp
jge
xor
pop
dec
rolb
gs
addb
lret
cmp
out
bnd
add
or
pop
addb
rorb
daa
mov
mov
loopne
add
add
mov
js
cmp
inc
adcb
pusha
add
rcrl
dec
sbb
hlt
fnstsw
inc
pop
dec
stc
pop
rcrb
inc
push
ljmp
in
movsl
add
dec
test
push
test
call
sub
imull
sbb
aad
add
or
push
mov
mov
inc
rcll
sub
mov
xor
mov
int3
cs
add
mov
je
out
dec
jbe
jo
nop
test
cmpsb
mov
cmpsl
adc
stos
or
inc
xor
and
add
sub
or
add
lock
add
mov
int
outsb
add
prefetch
sub
mov
adc
sbb
andb
inc
fstl
ljmp
or
dec
fdivp
lcall
add
lret
js
xlat
or
out
push
sbbb
adc
mov
push
pandn
popf
pop
mov
or
push
add
pop
shl
mov
shll
xchg
pop
arpl
cmp
or
push
xor
loope
xor
add
ja
xor
pop
and
jecxz
xlat
push
mov
iret
push
sti
movl
lds
push
dec
mov
push
stos
mov
nop
jno
pop
imul
leave
dec
jbe
and
mov
gs
shrl
push
jb
scas
rcl
sbb
dec
jbe
push
add
add
push
push
mov
lea
lret
jecxz
ja
jb
ret
add
cmp
xchg
fwait
add
in
out
out
mov
je
std
int3
call
rcll
jmp
lret
repnz
push
shl
or
call
movsl
lret
hlt
enter
add
stc
into
idiv
je
add
sbb
push
aas
fcmovbe
mov
ja
jmp
scas
rcl
mov
add
out
int3
add
les
mov
inc
lods
in
xor
add
jmp
aam
fsubrs
ljmp
fidivs
inc
or
in
jno
pop
mov
int
out
jne
cmp
jg
inc
cmp
aas
fcomp
adc
into
push
aaa
mov
ret
outsl
jle
sbb
in
xchg
or
out
shr
sub
or
jnp
fisttps
mov
sub
pop
push
sbb
insb
jl
adcb
add
hlt
inc
repnz
jmp
loop
push
decl
lret
test
sub
jecxz
inc
ja
add
xchg
iret
pop
in
ficoms
mov
xchg
out
mov
pop
fsubs
add
adc
sub
cmp
cmpsl
add
lahf
fistpl
sbb
iret
dec
into
cmc
xchg
shrb
stos
sahf
out
cmpsb
dec
pop
popf
in
xor
into
arpl
in
ret
xchg
cld
jo
fcoms
iret
lret
push
jmp
cmc
mov
loopne
push
fldt
rol
fisttpll
push
testl
jb
xchg
fmull
fcoms
cld
xlat
mov
decb
pusha
mov
add
cmp
push
add
sbb
loope
outsl
jne
and
std
add
cli
cmpsb
mov
mov
iret
and
test
cmc
add
jnp
add
stc
add
jg
ret
xchg
xor
repz
jge
out
pmaxub
es
inc
sbb
fdivr
scas
pop
pop
ss
add
jl
xchg
sahf
pop
xor
mov
xchg
in
sbb
pop
rcl
scas
push
ja
xor
jae
bswap
pop
jle
decb
push
xchg
js
stc
mov
pop
cmp
cmp
push
wbinvd
jl
mov
xchg
jle
or
es
mov
mov
xlat
out
fdivs
and
lret
sub
sub
pop
std
lods
or
sbb
cmp
popf
ds
popl
daa
ret
cmc
and
cmp
sbb
daa
rorb
nop
shr
mov
popa
loopne
inc
clc
jg
inc
test
cwtl
test
cmp
cwtl
add
sub
or
js
push
pop
ret
ja
imul
pop
jl
or
jns
mov
xchg
test
popf
loope
mov
test
dec
out
in
xchg
pop
dec
jge
out
sbbl
jb
repz
or
iret
jp
sub
adc
push
xchg
int3
mov
add
dec
incb
data16
mov
fnstcw
addl
add
mov
enter
addr16
mov
lcall
enter
mov
imul
loop
jle
cwtl
jbe
aad
sbb
insl
hlt
iret
addb
out
or
iret
lock
xor
enter
pusha
into
nop
clc
in
jl
pop
icebp
or
dec
fidivrs
pop
adc
pop
jns
sbb
sbb
pop
ret
outsl
cmp
mov
and
es
push
jo
xchg
inc
stc
mov
fnstenv
sbb
adc
clc
adc
mov
cmp
dec
fdivrs
pop
aaa
or
int3
sub
sub
clc
dec
add
xchg
push
sbb
pop
in
push
add
xchg
inc
pop
or
xchg
and
mov
sbb
push
pop
sub
out
fsts
pop
popl
dec
cmp
adc
rcrl
out
repnz
jns
dec
or
or
xchg
jge
imul
loope
cltd
xchg
pop
iret
sarl
cwtl
nop
xchg
sub
xchg
cmp
stc
jl
xor
in
inc
lret
repz
mov
push
rorb
jp
loopne
jns
mov
in
and
cltd
sub
in
repz
mov
mov
fstps
into
stc
fdivrs
popf
aam
fwait
hlt
add
mov
repnz
fbld
pop
ja
push
pushf
out
sub
or
sub
mov
popf
xchg
add
push
or
rolb
and
lahf
cli
je
loopne
jg
ds
std
addb
pushf
cmp
mov
loopne
nop
add
adc
mov
jp
sbb
clc
and
mov
jg
pavgw
mov
push
mov
fiaddl
sub
sub
cmp
cli
fnstenv
adc
shlb
dec
loopne
jns
lock
int
rolb
inc
push
pop
movsb
insl
jo
dec
jp
pop
mov
dec
mov
mov
pop
add
loopne
jbe
cmp
out
sbb
push
pop
push
fs
int
in
lret
pusha
or
subl
lahf
mov
pop
lahf
and
sbbb
add
pop
pop
jbe
jae
lcall
add
sub
test
cmpb
in
es
pop
lcall
jno
adcl
jp
cwtl
ljmp
or
add
mov
pop
or
iret
inc
and
in
pop
jb
sbb
aas
mov
xchg
sti
pusha
test
xchg
cli
stos
lcall
push
cmpsb
adc
stos
add
or
mov
lcall
xchg
cmp
and
ret
push
lock
xchg
fimull
cmp
fmuls
stos
sub
fsqrt
sbb
xchg
fdivrl
xchg
jb
add
dec
lods
xchg
mov
shrb
lret
jmp
jmp
sbb
and
inc
push
mov
xchg
cltd
data16
jne
dec
pop
mov
fcmove
lods
sbb
push
jnp
jecxz
ljmp
pop
test
lock
int3
ud2
pusha
mov
push
imul
pop
add
push
incb
pusha
scas
out
mov
imul
xchg
adc
in
inc
add
push
imul
out
jns
ljmp
stos
sub
mov
and
dec
fwait
mov
cmp
mov
imul
sub
cmpsl
pop
jmp
aas
pop
or
add
mov
adc
and
mov
clc
xchg
mov
sti
lock
dec
jbe
sub
push
idivb
ds
pop
jb
lods
fiadds
lods
call
xchg
int3
mov
pop
inc
test
jmp
sub
mov
sbb
cmp
xchg
push
mov
jecxz
jns
fbld
add
nop
jno
loopne
mov
dec
and
sub
add
mov
pop
mov
pop
add
fwait
pusha
push
nop
jmp
cmpsb
lock
xorb
jb
mov
add
xchg
fstsw
xchg
testb
pusha
inc
sarb
add
lret
stos
mov
fisttpl
es
xchg
push
xchg
jns
fiadds
mov
jmp
xchg
cmp
lds
mov
sub
xchg
stc
dec
jmp
cmpsb
int3
mov
and
pop
test
rcrl
lods
dec
fwait
mov
iret
lret
pop
jp
mov
jmp
lahf
imul
nop
loopne
sti
int
mov
fisttps
mov
insb
cmpsl
ljmp
pop
sub
cmp
add
mov
jle
shlb
mov
or
sarl
mov
sti
mov
pop
les
cmp
and
sub
jnp
les
mov
repnz
pop
mov
dec
test
pop
cld
jae
ret
jae
sub
sub
cmp
add
and
xor
repnz
jg
sub
cmp
cmp
xchg
push
sbb
jb
jae
inc
mov
jmp
mov
push
sarl
and
pop
add
dec
mov
jl
ret
inc
subb
or
adcl
add
lock
sahf
cmp
add
xor
xor
in
mov
pushf
mov
mov
add
and
int3
lret
stos
subb
adc
test
js
mov
outsb
mov
loopne
aam
push
mov
sub
nop
pushl
jl
xchg
insb
lods
add
enter
movsl
jnp
int3
sbb
xchg
sub
xor
bnd
xchg
fcoms
mov
cmp
jl
das
add
sti
mov
jns
mov
push
pop
add
sahf
in
mov
ja
clc
mov
cmpsb
dec
iret
fiaddl
pop
add
sbb
jne
adc
shl
sbb
out
pop
mov
pusha
mov
jns
in
in
iret
stos
cld
int3
add
adc
lret
cmp
jmp
call
mov
fcmovne
cmp
mov
test
pop
add
sbb
mov
mov
or
mov
sbb
out
inc
enter
cwtl
stc
sub
sahf
mov
lcall
mov
mov
dec
dec
into
add
cs
mov
ljmp
mov
mov
xchg
add
in
movb
cmp
inc
xchg
stos
pop
dec
or
aam
xorl
outsl
adc
dec
ds
push
xchg
pop
mov
add
dec
xlat
push
cmp
enter
in
insb
pop
cmp
mov
pop
lcall
and
push
jne
leave
jbe
add
cmp
pop
cli
sbb
aaa
sub
push
dec
ret
adc
stos
mov
lret
mov
sub
movsb
jg
add
sub
rolb
push
mov
jnp
icebp
mov
cmp
mov
mov
lods
cmpsl
sar
insl
cli
sub
pop
add
and
mov
in
xor
cmp
stos
leave
xchg
mov
add
lret
add
jge
subb
rolb
int3
mov
imul
fldenv
dec
sbb
jnp
push
adc
out
lds
sahf
mov
mov
test
adc
sar
sbb
pop
lea
sbb
cmp
hlt
pop
sbb
in
js
jecxz
cmpsb
fldl
cwtl
out
mov
fbld
cmp
call
add
stos
pop
add
sub
add
mov
jo
add
loop
jbe
rcl
xor
xchg
add
sub
lock
mov
imul
test
cld
add
cmp
sub
cmp
sub
fdivl
sbb
sub
mov
add
mov
or
lods
stos
cmp
pushf
pop
loopne
sahf
add
imul
sets
or
rcrb
mov
xchg
sbb
jb
lea
mov
imul
in
rolb
xchg
dec
std
mov
add
jecxz
scas
scas
popf
add
sti
out
add
mov
mov
or
sahf
lea
jmp
xor
xchg
xchg
or
loop
add
xor
jecxz
test
pushf
dec
mov
adc
xlat
add
cmp
rolb
or
jno
lods
out
cmp
test
fidivrs
in
add
stos
inc
or
leave
decb
popf
dec
cltd
outsl
clc
fdivs
add
or
js
mov
cmp
xchg
shrl
xchg
and
cwtl
and
int
fcmovnu
cmp
into
add
lods
iret
dec
imul
add
mov
xor
popf
add
int
push
add
and
mov
pop
popf
add
dec
mov
aas
pop
mov
lock
xchg
jb
add
pop
or
stc
into
lsl
pop
hlt
loopne
mov
das
jbe
imul
out
add
ret
cld
mov
mov
outsl
mov
repnz
lahf
ret
out
push
jg
jno,pt
add
mov
inc
add
xor
negb
nop
in
std
jle
inc
push
dec
mov
test
lcall
lret
out
out
outsl
mov
pop
pop
clc
add
add
testb
push
ljmp
fldt
imul
sbb
adc
pop
iret
mulb
jl
sub
inc
push
icebp
in
ss
insb
ror
mov
testl
cmpb
popf
jo
pop
push
cmpb
jg
cld
pop
jns
clc
mov
dec
sbb
add
stc
xchg
fisttps
mov
faddl
gs
mov
decl
nop
sbb
or
sbb
shlb
push
push
pop
ret
sti
add
dec
cwtl
in
cmp
cli
subb
movsl
or
mov
add
mov
hlt
fwait
or
cmp
push
push
addl
dec
mov
sarl
std
pop
mov
shll
pop
lret
shl
ret
jp
inc
dec
add
addr16
pushf
test
sub
sbbl
sub
daa
sbb
xchg
hlt
jge
mov
repz
cltd
jns,pt
or
dec
push
gs
mov
add
xchg
jmp
test
xchg
and
stc
add
lret
shrb
cld
cmp
pop
pushf
scas
mov
push
mov
loopne
pop
mov
sahf
add
cmpsb
subl
add
rorl
xchg
push
push
add
fstps
popl
lea
aas
cmp
mov
fcomps
adc
int3
xor
push
std
add
loopne
rcrl
fiaddl
cli
sub
fsubrs
call
jge
lahf
add
aad
jne
mov
lcall
and
adc
mov
loope
ret
sbb
out
mov
jp
adc
push
pop
dec
stc
lahf
inc
sbb
adc
frstor
nop
push
sbbb
in
xchg
jns
mov
std
lcall
xor
imul
jp
add
sub
repz
enter
add
aad
push
sub
jns
ja
cli
jecxz
mov
std
inc
outsb
mov
cmp
add
cmpsl
mov
das
cmpsb
adc
add
mov
testl
jp
xrelease
enter
addb
cmpb
mov
mov
lods
aas
lahf
push
inc
push
sub
es
fs
ret
je
lret
sub
sbb
cli
out
aaa
mov
add
jecxz
lods
mov
adc
lock
cmp
inc
cmpsl
scas
sbb
mov
mov
or
sbb
push
xor
or
icebp
ret
dec
jle
imul
or
repnz
add
inc
lcall
movsl
pop
xor
leave
mov
rcrl
pop
xorb
jmp
insl
xchg
lock
add
inc
das
mov
add
fldt
lods
inc
cmp
pushf
pop
leave
xor
dec
and
cmp
insb
pop
jb
in
add
not
cld
and
and
xor
push
add
xchg
outsb
jecxz
mov
and
add
in
mov
hlt
ret
pop
and
sbb
fcoms
imul
mov
movsl
adc
es
ds
cmp
cli
xchg
push
sbb
inc
daa
push
xorb
bound
imul
shll
mov
je
das
fmuls
lds
jo
iret
cld
cmp
orb
add
push
jmp
dec
mov
jo
dec
pop
xor
lods
mov
inc
fsubs
outsb
pop
into
sub
out
sub
insl
mov
sbb
push
scas
or
andb
push
add
xchg
enter
pusha
jne
testb
shlb
shll
daa
aad
jno
and
incb
and
test
cmp
leave
sbb
lret
negl
mov
add
daa
pop
repz
ds
adc
popa
or
pop
pop
imul
xchg
fldcw
mov
fwait
cmp
jbe
das
mov
int
jns
sti
sahf
or
ret
sub
cmp
shll
inc
and
fidivrl
mov
inc
xchg
sub
imul
aas
int3
aad
int
xchg
pusha
les
add
xchg
mov
aas
ljmp
lds
xchg
js
add
or
inc
jmp
call
xchg
mov
mov
cmc
in
inc
and
outsl
push
mov
jl
add
scas
and
sbb
jo
xchg
add
mov
push
ja
add
mov
daa
repnz
lret
add
pop
aad
pop
les
xchg
add
push
int
jno
les
pop
or
hlt
cmp
rorb
outsb
and
push
repnz
sti
pop
cmp
pushf
add
ror
sub
add
or
inc
lcall
and
cmp
jb
xor
xchg
mov
inc
popf
jno
jns
sub
fdiv
loopne
mov
hlt
sub
add
xor
icebp
adcl
flds
mov
xchg
out
push
pop
je
add
inc
xor
loope
cmp
sbb
add
cmc
cmovp
bound
mov
add
mov
inc
aas
xor
scas
push
jge
movsl
mov
push
lret
loopne
add
filds
movb
push
jl
out
mov
or
dec
pushf
jle
inc
pop
sub
in
pop
push
aaa
je
jns
fwait
pop
jmp
mov
mov
pop
rcr
out
fsub
dec
pop
dec
cmp
data16
add
or
mov
shrb
dec
xchg
pop
pop
push
adc
and
roll
lods
add
and
or
pop
movsb
mov
xchg
testl
arpl
sahf
loope
shlb
int
cs
adc
andl
cmp
xor
and
orl
scas
pop
mov
add
movsb
mov
sarb
icebp
pop
or
push
adc
int3
add
push
cli
aas
pop
inc
xor
pop
dec
xor
add
dec
fcoms
cmp
out
jns
int3
cmpsl
out
xor
mov
xlat
push
adc
shrb
pop
xor
call
rcrl
repnz
add
shr
xor
push
fisubrl
mov
or
mov
int3
adc
add
in
add
sbb
fsubrs
fiaddl
add
jns
and
rcl
repnz
mov
adc
add
lds
jb
fbstp
pop
cmpsl
icebp
ficoml
fimuls
push
mov
test
ja
mov
icebp
pusha
sbbb
stos
fiadds
add
lret
and
arpl
push
addb
repnz
cmp
xchg
add
in
ret
rorl
stos
fst
dec
adc
aaa
pop
fwait
jmp
enter
inc
cmovbe
mov
pusha
sub
cli
and
and
pop
mov
jae
mov
call
in
dec
insl
hlt
mov
fst
xor
sbb
add
mov
add
xchg
xlat
mov
movsl
rclb
xchg
lods
sub
pusha
and
aaa
faddl
xchg
inc
sub
mov
jnp
jbe
add
xchg
dec
add
push
addr16
lret
subb
sub
mov
jl
lods
xchg
sub
and
xor
cmp
jae
mov
outsb
pusha
lods
sub
add
xchg
inc
sbb
movsb
add
mov
add
ret
and
out
pop
aas
mov
and
pop
lds
xchg
add
mov
in
or
or
sub
sbb
das
pop
pop
mov
stos
scas
jno
aas
cmp
cmp
repnz
bound
sbb
and
pop
adc
lds
hlt
scas
ror
mov
mov
cmp
cwtl
rclb
ja
sub
dec
inc
cvtps2pd
repnz
jl
cltd
add
dec
cmp
cmp
cmp
ret
xor
ljmp
movsb
repnz
movsl
pusha
pop
cmp
jecxz
mov
hlt
mov
lret
dec
outsl
stos
cmc
es
and
ret
loope
add
addr16
add
fcoml
mov
and
stc
pop
inc
push
or
lea
pop
jmp
ja
add
out
imul
sub
add
arpl
ret
add
inc
jnp
mov
xchg
in
dec
mov
inc
sbb
addr16
sahf
dec
rcrb
dec
pop
adc
repz
add
or
jns
into
lea
xchg
js
test
movb
cmp
dec
movl
xor
add
test
inc
mov
adc
jns
add
je
xchg
and
sbb
test
jno
cmpsl
cmp
stc
fcoml
mov
scas
jns
dec
aam
cmc
mov
jbe
add
pop
or
enter
loope
or
scas
rcl
cld
cld
out
jne,pn
int
in
das
jg
push
fistpl
dec
mov
bound
mov
add
mov
inc
out
jl
loopne
cmc
js
cmp
orl
add
inc
jg
mov
je
dec
rcr
mulps
mull
xchg
jo
lea
roll
mov
inc
repz
cli
jg
fcomip
sub
imul
jecxz
jb
pop
ret
out
and
repz
push
roll
jnp
jo
add
sti
add
dec
jle
lock
sbb
and
mov
sti
fadds
add
cmpsb
ds
icebp
lahf
add
fwait
mov
cmp
add
stos
mov
mov
mov
or
repnz
mov
mov
lock
sbb
mov
fcomps
sbb
call
stos
jno,pt
add
cld
jmp
leave
sub
std
pop
sarl
arpl
fdivrl
adc
rolb
cmpl
out
jbe
or
ret
inc
cmp
adc
adc
pop
jg
push
clc
xchg
sti
pusha
and
add
ljmp
sbb
push
fwait
jg,pt
pop
shll
pushl
xor
das
inc
mov
cmp
incl
int3
cmp
cmpl
add
inc
inc
clc
arpl
enter
dec
arpl
stos
aam
clc
xchg
stos
mov
add
call
aas
pop
push
or
pop
inc
dec
sub
cmp
adc
movsb
loopne
je
jns
xor
and
cmp
nop
or
popf
rsm
inc
das
int3
and
mov
cld
sarl
inc
dec
fs
mov
dec
repnz
sbb
lds
cld
popf
sbb
mov
pushf
mov
jl
add
and
push
cmpl
out
mov
cmp
in
lds
hlt
push
pusha
jl
sbb
rcrl
ret
xor
pop
adc
sbb
sub
sti
psllq
aam
pop
xor
cwtl
push
jl
adc
push
sahf
outsl
test
mov
jnp
inc
lds
pusha
xor
inc
je
mov
sbb
mov
outsb
add
int3
movb
inc
pushl
in
and
cmp
js
cmpb
inc
push
nop
push
inc
push
dec
jge
sbb
pushf
ret
rcrb
cld
xchg
adc
and
andl
cmp
movsb
sbbb
inc
add
sub
fdivs
add
xorb
xchg
mov
pushf
inc
cmp
test
inc
add
jge
sub
cmpsl
mov
push
dec
cmpsb
inc
add
inc
scas
jo
testl
adc
sub
mov
int3
les
dec
or
cmpxchg
and
test
ds
xchg
add
pushf
xchg
lods
add
insb
inc
mov
cld
pop
dec
loop
rep
into
pop
jg
int3
xchg
and
jl
lret
cmp
dec
iret
add
pop
cmpsl
cld
dec
test
arpl
cmp
repz
cmp
jecxz
sub
cld
shr
fnsave
out
ljmp
ljmp
pushf
in
jbe
iret
sub
fs
fisttpll
add
mov
ljmp
iret
clc
sbb
sbb
addr16
repz
pop
imul
stc
pushf
iret
frstor
pop
mov
pop
lcall
add
lock
sbbb
js
or
aas
add
aas
or
cmp
sarb
mov
mov
adc
adc
cld
sbb
pop
adc
pop
test
out
cld
sbb
xchg
or
add
popf
lret
clc
mov
mov
sbb
push
and
xchg
pop
add
xchg
mov
sub
int
sub
ds
add
iret
mov
mov
popf
decl
sub
xor
ret
popf
mov
lcall
cmp
fnsave
push
aas
cmpb
xor
rcrb
aad
inc
in
aas
fists
ss
push
xor
push
movsb
push
adc
inc
jg
clc
in
cwtl
mov
popa
push
pop
inc
sub
push
inc
cmp
dec
pop
ss
adcb
push
lds
movsl
mov
icebp
dec
jne
out
xor
push
aas
popa
int
pop
push
inc
arpl
rcll
in
mov
push
imul
popf
add
fstsw
inc
cmc
sahf
jb
inc
mov
push
insl
movsl
cld
jae
bnd
sbb
js
xlat
ja
iret
push
in
daa
insb
insl
bnd
xlat
push
andb
dec
push
jle
sbb
jbe
xor
out
insb
insb
int
test
cmp
mov
jo
insl
add
addl
jns
pop
lea
addr16
xchg
sbb
fcoms
imul
add
xlat
xchg
enter
fwait
aas
lods
fnstcw
pop
mov
fsubs
mov
mov
mov
sbb
mov
repnz
or
mov
adcb
fisubrl
push
cmpsl
adc
pop
xchg
pusha
pop
xchg
aad
or
add
mov
add
ret
mov
mov
out
add
nop
mov
ljmp
fstp
cmp
insl
pop
scas
sbb
xchg
inc
call
cs
cmp
add
fs
aad
jg
stc
cltd
sub
xlat
jp
adc
sbb
fldenv
jg
enter
lahf
mov
inc
fxam
loopne
dec
pop
loopne
inc
lock
jno
bsr
out
xchg
popf
lock
sbb
in
int
in
jg
je
out
jl
push
lock
and
repnz
cmp
dec
push
cmc
pop
dec
imulb
idivl
pop
iret
stc
popf
in
lods
mov
sbb
cmp
jle
aas
sbb
add
clc
add
mov
xchg
cltd
jecxz
mov
or
or
mov
clc
or
out
lahf
paddd
adc
loopne
or
cs
jg
pop
adc
loope
test
out
loopne
jns
pop
adc
popa
push
sahf
movsl
cmp
sbb
sbb
fistpl
in
cs
adc
lahf
inc
out
or
bound
loop,pt
and
push
into
and
and
dec
pop
inc
or
in
fdivrp
sub
clc
bound
push
arpl
lcall
incb
xor
pop
mov
jecxz
dec
addr16
jbe
xor
cmp
cmp
jg
out
repz
sub
ss
xchg
jecxz
ss
scas
mov
mov
xchg
mov
cmp
ss
in
dec
pop
outsb
fs
loop
fisubs
jbe
xor
in
jae
ss
enter
push
inc
dec
dec
jle
dec
push
in
es
mov
jecxz
outsl
lahf
into
xchg
cld
sbb
jg
cmpsl
call
cs
push
pop
orl
xor
cmp
add
imul
popa
scas
add
out
push
int3
dec
push
push
addr16
ja
arpl
leave
dec
cmpl
mov
gs
add
out
mov
loope
xchg
inc
jle
in
mulb
pop
out
in
lock
scas
in
stc
into
icebp
xor
js
sbb
xchg
std
mov
jb
incl
pop
scas
out
push
data16
mov
jno
fs
loopne
ss
sahf
push
mov
or
fs
pop
in
push
pop
xchg
lods
clc
pop
out
jbe
pop
cltd
jmpw
xor
mov
mov
out
clc
xchg
jg
aas
cltd
xchg
orb
lcall
lahf
idivb
push
or
ljmp
sahf
jns
aas
cmpsl
out
lock
push
pop
lods
aaa
push
arpl
xchg
pop
lea
jnp
arpl
out
mov
in
cs
jae
cmp
jns
out
jecxz
mov
jno
add
imul
in
shl
mov
inc
mov
addr16
xchg
pop
insl
mov
subb
add
out
outsb
in
cmpsb
cmp
add
insb
ds
pusha
nop
cmp
in
inc
sub
adc
inc
in
mov
scas
jmp
jle
imull
rclb
xchg
negb
push
fidivrs
push
imul
adc
push
outsb
loop
mov
faddl
arpl
sahf
cld
xchg
pop
ljmp
data16
jg
lock
push
outsl
repnz
icebp
cmpsl
xchg
roll
pop
loope
outsb
cld
idivl
clc
jns
mov
pop
dec
mov
add
or
mov
add
arpl
aas
int3
inc
add
stc
pop
jg
repz
adcb
sbb
fadds
push
jno
adc
adc
adc
out
outsl
repz
jg
pop
add
lahf
stc
sbb
lock
flds
sbb
cld
pop
out
and
mov
jb
pop
into
and
and
xchg
and
cld
daa
outsl
sub
aas
sub
sub
sbb
call
pop
pop
dec
outsl
cmpsl
aaa
jg
cmp
xchg
pop
add
clc
inc
pcmpeqb
out
das
flds
jns
hlt
pop
push
dec
dec
mov
pop
enter
out
sahf
dec
incl
pcmpeqw
int3
push
das
xchg
fcoms
add
dec
out
sbb
xlat
aas
outsb
rcr
push
jbe
inc
adcb
xchg
pop
add
pop
movsb
or
cmp
scas
jbe
jae
cmp
insl
fisttps
out
xchg
mov
mulb
or
lret
add
sbb
inc
pop
mov
adcl
inc
cmovo
push
addl
iret
in
enter
xchg
add
pushl
pop
js
jae
cmp
mov
xchg
clc
mov
idivl
jmp
add
arpl
je
mov
or
add
jmp
push
divl
mov
dec
pop
jns
jg
cwtl
jbe
cmp
lahf
lahf
lcall
iret
cld
popf
sahf
jg
pop
lahf
stc
pop
xchg
adc
mov
lods
add
xorb
andl
push
xor
adc
add
scas
add
lock
out
scas
jl
pop
mov
jnp
pop
xor
in
testl
mov
stc
inc
adc
mov
xorl
add
jle
nop
add
test
cmpl
das
cltd
ret
aas
fadd
dec
repnz
outsl
lahf
jg
enter
add
sbb
xor
or
call
mov
xchg
subl
inc
mov
xorb
outsl
push
xlat
jg
fmuls
fisubrl
fmul
fldl
mov
dec
addr16
int3
fucomip
repz
pop
and
lret
sub
rolb
xor
das
fstpl
xchg
jae
cmp
jg
call
fdivrl
lock
add
add
add
adc
out
and
out
jbe
repnz
cmp
sbb
rorb
lret
pop
imulb
punpckhbw
lahf
stc
cli
scas
incb
jle
repnz
add
add
sbb
dec
xchg
inc
dec
test
and
jecxz
pop
mov
lock
inc
jno
add
mov
aaa
jb
call
nop
and
sub
repnz
lret
out
pop
xor
inc
mov
loopne
arpl
sbb
jnp
icebp
jo
push
xchg
adcb
and
data16
mov
ljmp
cmpsl
and
lods
pop
dec
fs
stc
shr
jg
add
lock
sub
sbb
xor
add
imul
add
xor
adc
movb
adc
add
dec
cmp
add
rol
inc
adc
jae
xor
mov
cmpsb
pushf
add
inc
push
sbb
cmp
das
adcl
movb
and
xor
aam
sub
mov
add
xor
pop
sarl
fdivl
add
adc
inc
fiadds
lahf
shl
xchg
xor
add
cmp
call
push
cmp
in
ficompl
cmp
pop
das
or
cmp
hlt
ljmp
cld
psubb
out
and
mov
div
out
loop
cmp
and
sbbb
or
clc
clc
test
sub
adc
push
adc
mov
add
mov
sub
mov
enter
xor
mov
ljmp
cld
nop
inc
jl
pop
and
inc
sbb
xchg
dec
sub
cmp
rclb
push
pop
jns
xchg
pop
push
ljmp
cwtl
popa
mov
or
push
cltd
gs
out
addr16
add
mov
pushf
jns
outsl
mov
jne
loope
insl
pushf
js
cmp
xor
sbb
mov
cltd
icebp
or
icebp
and
shr
mov
repnz
mov
call
xor
push
out
sti
fnstenv
xorl
stos
fsubr
pop
adc
popa
xor
or
aam
inc
lock
fdivp
xlat
shl
cld
clc
xor
lret
ret
sar
dec
int
rcrb
aaa
out
ret
mov
repz
mov
iret
dec
shlb
sub
add
ljmp
icebp
int3
sbb
adc
insb
cmc
cmp
enter
sub
mov
inc
sbb
out
cmp
es
scas
test
add
adc
dec
inc
adc
sub
imul
cmp
mov
mov
rclb
mov
and
sub
lds
in
sub
idiv
decl
dec
into
repnz
sbb
cli
cld
sbb
hlt
mov
clc
sub
jmp
add
adc
idivl
nop
jl
xor
clc
xor
stc
inc
hlt
mov
mov
lret
out
push
cmp
xor
pusha
sub
mov
inc
nop
mov
jmp
add
pusha
sahf
aas
mov
fstp
str
jmp
cmp
xlat
sbb
out
aaa
mov
or
fucomip
jno
sbb
xchg
cmp
icebp
cmp
das
pop
pop
jb
jb
mov
out
mov
in
lret
and
add
in
shrb
dec
cs
mov
push
loopne
jmp
dec
pop
mov
add
dec
mov
in
cmc
or
add
repnz
sbb
add
xchg
ret
mov
imul
push
mov
ret
ljmp
icebp
div
stc
add
add
in
cmp
cld
xchg
fnstsw
les
and
mov
es
sbb
std
insl
xchg
xchg
mov
imul
jecxz
push
inc
cltd
pop
clc
pushl
xchg
in
inc
cmp
mov
add
stos
int3
mov
js
lods
rcr
cwtl
das
repnz
add
loop
jg
dec
je
repz
sub
out
fldl
add
jle
repz
add
pop
daa
pop
sub
jnp
scas
fsubr
aad
icebp
lea
out
mov
addb
inc
xor
jge
hlt
decb
push
clc
sti
movsb
xor
adc
rcrb
add
clc
sub
add
xor
add
in
test
arpl
and
xor
add
cmc
stc
xor
out
test
insl
test
nop
lcall
cmp
out
imul
jge
mov
sbb
jge
lret
add
out
pushaw
mov
into
xorl
test
daa
jb
mov
ret
jp
or
push
mov
xchg
out
mov
lock
sbb
cmp
test
and
push
sbb
adc
fxch
xor
dec
sahf
adc
ja
test
loopne
sub
popf
cltd
pop
ficoml
mov
push
ss
cli
xor
add
push
add
cmp
test
and
mov
add
lods
jmp
pop
mov
int
lds
xchg
sar
xlat
fcoml
cmp
cli
out
add
lea
sbb
leave
adc
add
mov
dec
in
hlt
cvtdq2ps
fdivl
imul
je
ja
lret
lcall
fwait
popf
adc
mov
stos
inc
sbb
shlb
pop
cli
mov
add
pop
sti
inc
scas
mov
cmp
jns
add
mov
str
jne
jns
jg
outsl
mov
in
rcrl
xor
inc
iret
and
shll
and
incb
xor
adc
loopne
test
add
lods
clc
mov
leave
mov
or
inc
loope
aad
jo
add
sbb
enter
pop
jmp
loop
xchg
jo
adc
mov
call
les
jecxz
xor
add
lea
mov
ljmp
pop
jecxz
xor
jmp
pop
test
xchg
dec
sarl
sbb
dec
and
mov
xchg
pop
push
sub
push
add
packsswb
mov
int3
cltd
jo
and
or
shlb
test
jne
add
push
in
push
push
pop
mov
sbb
sub
inc
pop
sub
in
pushf
inc
mov
cmp
out
add
push
movsl
or
adcl
mov
cltd
bound
adc
add
pusha
jmp
fsts
sti
pop
mov
mov
lods
call
add
aas
xor
add
loopne
mov
push
inc
add
and
add
sbbl
mov
aam
outsb
push
inc
push
cmp
or
mov
add
cmpsb
push
in
mov
sub
outsb
mov
cli
scas
lret
mov
mov
cs
std
lret
mov
lock
push
cmp
mov
dec
cmp
sbb
fsubs
inc
mov
enter
in
inc
sbb
fs
add
adcl
je
jae
mov
dec
add
add
clc
out
add
jmp
shlb
push
aas
add
rcrb
xchg
cmp
addb
aad
addr16
jmp
inc
inc
add
popa
ret
rorb
in
push
je
pop
push
popf
add
shrl
push
xchg
fnstenv
push
fstpl
testl
jno
xor
aaa
add
push
push
cmp
sub
fdivrl
fsub
xor
in
repz
sub
inc
mov
and
cld
add
aam
cld
inc
sbb
dec
jp
sbb
dec
adc
dec
repz
jg
add
mov
sbb
movb
lret
iret
or
es
jno
push
jae
pop
cmp
int
cmp
das
iret
cld
repz
mov
mov
jge
cmpb
hlt
fldt
dec
pop
int3
add
imul
sbb
adc
pop
ret
clc
fadds
cmp
push
in
dec
sbb
mov
lods
adcl
push
adc
add
mov
jnp
sbb
rorl
jae
sarl
inc
sbb
lock
aaa
notb
pusha
push
and
inc
mov
shl
test
fiaddl
out
divl
add
pop
aad
push
inc
sbb
or
daa
mov
ud0
jno
mov
jge
pop
aas
add
xlat
xchg
or
and
add
push
dec
inc
and
pop
icebp
pop
lret
add
or
inc
xor
idiv
add
push
and
add
jecxz
femms
fmuls
or
icebp
sub
add
add
pop
imul
xor
test
mov
mov
cs
cmp
cltd
movb
addb
push
cmp
add
loope
cld
mov
imul
and
mov
lcall
or
inc
sbb
add
pop
rclb
mov
sbb
xor
cli
lock
push
call
or
xor
test
out
adc
dec
nop
dec
add
and
sbb
dec
loope
andb
mov
push
mov
cld
pusha
or
ret
in
sub
and
or
inc
adc
dec
cmpsl
or
decl
ljmp
cmp
add
mov
add
ja,pn
mov
inc
loope
push
gs
add
or
pop
add
inc
into
mov
push
and
lds
gs
add
and
movlhps
or
pushf
add
aad
in
out
cmovno
jp
mov
stc
pop
push
add
int3
cmpsb
aaa
in
stos
not
add
jne
push
frstor
cmp
mov
test
add
lcall
cmpsb
and
fnstenv
push
add
loop
push
jne
push
add
push
mov
pop
aad
sbb
xorl
ja
ret
rolb
mov
add
loopne
sbb
push
and
mov
inc
xor
lret
test
inc
pop
push
lock
arpl
insl
mov
add
jbe
lods
cmp
xlat
or
lret
or
inc
movsl
cmp
add
mov
in
add
jns
push
or
loope
lods
add
dec
imul
push
stos
cld
add
sub
xchg
adc
in
pop
fisttpll
push
add
jne
jb
ror
dec
dec
mov
add
cmp
pop
or
ja
inc
fsubr
sbb
mov
call
cmp
sub
jns
add
lock
xor
pop
cmp
inc
add
lock
shll
adc
test
rolb
int
xchg
cmpsl
test
add
pop
jmp
repz
cmpb
nop
push
add
jo
cmpsl
cmp
int3
nop
test
cmp
inc
bound
xchg
cmp
add
int
dec
cmp
xor
add
cwtl
mov
cmp
xorl
loopne
xor
inc
push
scas
xchg
jbe
add
adc
cmp
add
addb
dec
in
jecxz
orb
test
inc
ret
adc
stos
test
sahf
push
xor
add
dec
int3
and
mov
and
pushf
add
andl
add
xor
inc
das
pusha
rorb
pop
sub
pusha
mov
add
dec
xor
hlt
out
or
jp
mov
sub
fcmovbe
lahf
clc
test
sbb
pop
xorl
lock
cmc
lods
add
mov
fnstsw
aaa
mov
shrb
cmp
sub
mov
add
mov
pusha
int3
ret
loop
sbb
test
or
push
shll
lock
pop
or
jp
rolb
imul
hlt
mov
jns
jp
or
cwtl
inc
stos
pop
mov
mov
and
loope
sbb
cld
and
mov
dec
enter
add
adc
push
insl
push
test
sbb
jl
xor
repz
cli
cmp
insl
inc
push
sti
aam
gs
fstl
lahf
lcall
pop
add
add
pusha
push
pop
adc
jo
mov
dec
jg
rclb
pusha
jge
add
rorl
inc
jge
dec
scas
in
mov
lods
pop
pop
jmp
cmpsl
cmp
add
mov
ja
in
push
bswap
divb
jg
movb
dec
imull
jae
jecxz
loopne
add
imul
sbb
subb
dec
scas
mov
xchg
mov
cmp
fadds
cmc
fcomps
hlt
mov
fisttpll
call
das
cmp
arpl
repz
iret
sbb
cmp
aaa
cmp
imul
mov
mov
ret
pop
add
popl
add
mov
mov
jae
mov
lds
mov
jmp
sarb
scas
iret
cld
aad
add
ljmp
jg
fimuls
mov
push
mulb
pop
jge
imul
stos
and
jns
jnp
push
push
add
cmp
add
rclb
jo
mov
sbb
inc
xlat
add
movl
and
addl
jns
out
inc
xchg
jbe
push
push
cwtl
inc
ret
mov
and
jecxz
add
es
andb
push
push
jb
inc
sbb
jg
xchg
repz
pop
in
enter
pusha
or
push
push
push
push
add
sbb
pop
inc
add
adc
jbe
out
clc
shlb
lar
xor
jmp
test
mov
adc
and
sbb
add
loopne
add
stc
pop
add
mov
mov
add
pop
jo
aaa
je
ss
in
int
jp
push
xchg
add
movsl
jnp
xor
xchg
xor
into
popa
js
addr16
enter
loopne
iret
push
mov
loope
lock
stos
imul
xor
mov
fcomps
enter
sbb
into
js
loope
shlb
cmp
cmp
fnstenv
test
rcrb
psubsb
fdivr
in
pop
clc
lock
adc
js
push
push
add
adc
pushf
and
pushf
dec
fcom
js
cmp
fcompl
fcmovne
pusha
push
or
adc
idivb
jmp
xchg
sti
icebp
adc
in
dec
in
clc
jg
add
and
push
xchg
es
cmp
sub
cmp
pop
mov
dec
in
test
xchg
add
leave
nop
cmp
and
add
sub
sub
call
aas
icebp
push
daa
imul
xchg
test
xchg
add
xchg
jecxz
dec
stc
jmp
cmp
xor
push
fstl
cltd
cwtl
adc
xchg
cmp
test
push
xor
add
pop
xchg
pop
jg
or
cmp
fnstenv
sbb
jbe
sub
and
sahf
insb
jp
popa
or
xor
cltd
push
xchg
mov
jle
sbb
cwtl
imul
out
fnstenv
sub
pushw
or
inc
sarb
stc
pusha
fucomip
cmp
scas
push
sarl
mov
mov
fidivrl
in
mov
stos
fldenv
leave
inc
test
pushf
test
pop
test
fdivrs
jns
fmuls
xchg
mov
and
inc
repnz
inc
int3
pop
mov
mov
add
jb
call
rcrb
ljmp
sar
mov
idiv
cltd
in
fcos
rcrb
arpl
dec
dec
lock
inc
jp
dec
cltd
xchg
mov
into
mov
psubd
out
mov
push
mov
jae
pop
pushf
adc
iret
sbb
mov
pop
sbb
mov
cmp
cltd
daa
push
and
cmp
loopne
mov
das
dec
mov
sub
fwait
aas
sub
mov
sub
mov
or
mov
cltd
dec
mov
mov
seto
xchg
xor
xchg
pop
lcall
xchg
dec
fadd
push
jp
push
push
and
or
fwait
dec
push
jb
cmpsb
dec
cld
into
outsb
or
xor
imul
mov
fisubl
cmp
movsb
jno
push
xchg
mov
add
lret
push
cli
cmpsb
jne
cmp
xchg
mov
test
cmpsl
jl
xchg
jg
lahf
mov
jbe
sub
or
addr16
mov
pop
dec
lcall
mov
adc
inc
push
movsb
scas
inc
movsl
arpl
mov
jp
test
lcall
mov
jl
scas
jl
subl
pop
ss
sbb
cmp
jp
xchg
test
mov
sahf
dec
lcall
fcomi
movsb
in
pop
clc
test
jae
clc
out
sbb
mov
sarb
sub
lret
enter
cmp
js
stos
mov
int
lahf
mov
or
orb
jp
adc
mov
sub
loopne
aas
stos
call
lods
push
mov
or
movsbl
mov
mov
leave
shr
mov
add
or
stc
out
add
negl
jmp
imul
clc
xor
pop
scas
out
mov
jp
cmp
daa
shlb
lret
lods
aad
add
stos
enter
add
sbb
mov
pop
add
stos
mov
xchg
add
imul
stos
dec
ret
daa
cmp
mov
mov
sti
lock
mov
sti
push
xchg
mov
mov
add
fcmovnb
clc
sub
push
sarb
sbb
jmp
push
jge
push
inc
mov
inc
or
sub
in
add
jp
or
scas
and
lret
cmpsb
icebp
add
cmp
lea
adc
or
adcl
add
cmpsb
mov
call
fldl
mov
mov
shr
cmpsb
lock
push
jbe
aas
cwtl
lret
subl
mov
sbb
imulb
xor
in
sbb
mov
rcrb
aas
scas
push
lretw
sarl
repnz
sarl
shl
fstpt
pop
jl
sub
in
xchg
int3
ret
dec
cwtl
in
xchg
fwait
mov
sub
incb
mov
rol
or
pop
lret
scas
pop
int3
cwtl
outsl
stos
mov
test
decb
xor
fwait
xchg
jl,pn
jb
hlt
ja
loop
push
sbb
out
fcmovnu
mov
mov
mov
mov
or
cmpsl
xor
sbb
lods
jmp
mov
jae
cmovp
pusha
ret
mov
repz
cld
sti
cmp
insb
lods
push
lret
mov
popa
jl
outsl
pop
cmpsl
and
cmp
imul
mov
rcll
cmp
clc
stos
add
sub
enter
sub
mov
aas
mov
add
call
rolb
pop
mov
sub
or
lret
add
lods
mov
ljmp
repz
jno
lret
jg
pop
mov
mov
fwait
jge
in
sti
add
mov
lret
jl
mov
clc
enter
subb
std
cld
into
cmp
int
in
mov
lods
sub
mov
in
int
cwtl
jle
xor
mov
or
push
cmp
inc
sub
mov
test
cmp
cmp
and
into
push
sub
adc
imul
ret
iret
sub
scas
das
call
in
mov
dec
mov
into
pop
pusha
test
out
push
jp
std
jo
add
sbb
fst
sahf
int3
mov
insb
rorb
stos
add
dec
jnp
adc
sbb
negb
es
clc
std
mov
adc
mov
inc
mov
rolb
loopne
in
ret
sub
pop
lret
inc
mov
mov
jl
add
mov
add
add
pop
sbb
cmp
mov
mov
aad
or
push
cmp
add
in
mov
dec
add
int3
jne
pop
enter
test
lret
pop
cmp
mov
or
xor
push
add
stc
jl
adc
ret
fwait
xor
xlat
imul
test
pusha
sarb
into
xchg
faddl
sbb
push
sbb
xchg
ret
rolb
fst
fwait
dec
rclb
mov
pop
int3
xchg
xor
aad
cmpl
stos
stos
dec
push
popf
mov
lods
loopne
mov
iret
mov
fistpl
mov
insl
aad
xchg
in
lret
das
pop
cld
add
iret
dec
lods
pop
scas
pop
int3
shll
push
cmp
lret
lds
stos
or
movsb
fwait
roll
pop
adc
lods
fdivl
ljmp
dec
cmp
nop
int3
scas
mov
in
or
cs
fdivrp
dec
cmp
sub
and
hlt
jge
icebp
clc
fistpll
clc
popf
fiaddl
adc
fstl
std
cld
add
add
mov
fisubl
out
or
push
fsubrl
cmp
pop
add
jge
jecxz
rorl
add
in
sahf
sub
sarb
add
in
fcmovne
pop
aam
pop
lods
loope
lods
mov
or
jl
scas
add
fisttpll
mov
add
aad
sbbl
xor
pop
push
pop
mov
int
fcomps
out
aam
or
test
ret
cmp
add
fstpt
add
iret
pop
push
shrl
pusha
out
movb
push
sahf
push
dec
enter
add
dec
mov
loopne
outsb
into
mov
std
mov
sahf
int
out
insl
add
in
dec
fnstsw
cwtl
xchg
add
mov
sub
mov
insl
push
loop
add
lds
mov
push
pop
fsubl
cs
cltd
ja
roll
lock
out
pushf
pusha
stc
insb
lret
fnsave
clc
xchg
cmp
fiadds
aad
and
jge
shrl
jmp
cmpsb
sahf
loop
lcall
shr
cmp
ljmp
dec
push
jge
mov
cmp
sarl
sbb
sbb
xor
in
aam
or
out
mov
fidivrs
pop
iret
add
call
insb
add
lods
loope,pn
outsb
int3
or
push
out
push
loopne
pop
in
xor
in
sahf
clc
jg
ds
ficomps
lret
or
push
lock
pop
in
cmpb
repnz
jg
repz
lret
or
mov
adc
out
int3
add
out
in
dec
sbb
repnz
ds
xlat
sub
jge
add
in
fcoms
add
sub
and
sub
xchg
mov
faddp
enter
rorb
add
rol
mov
ret
subb
xor
in
mov
imul
dec
fdivs
cmpsb
rorb
inc
jmp
jle
daa
cmp
cmpl
aas
dec
mov
mov
imulb
or
into
push
jle
ja
add
cmp
ljmp
out
lahf
in
dec
xlat
pop
sub
test
mov
stos
jnp
int
insb
jns
ljmp
pop
adc
mov
add
movsl
stos
jmp
pushf
mov
xor
bnd
in
insb
mov
add
call
cmpsl
sbb
mov
xchg
cmp
leave
add
dec
pop
cmp
adc
mov
sbb
sahf
lods
rclb
movsl
jg
cmpsl
mov
iret
and
jne
sbb
lods
mov
add
mov
outsl
stc
add
fcmovu
fdivrp
fcomps
mov
nop
fldl
repnz
xchg
lahf
mov
pusha
icebp
fdivr
fistpll
sahf
fisttpl
loopne
in
fwait
jecxz
pop
sub
nopl
dec
xor
in
aas
lock
mov
ds
fdivrl
push
push
inc
push
adc
cli
add
and
loopne
addl
sti
sub
inc
mov
adc
enter
add
push
int3
mov
add
inc
mov
shlb
adc
cmp
xorb
in
mov
ret
or
repz
imul
or
les
pushf
dec
sbbb
xchg
sub
inc
add
push
add
xor
dec
fwait
and
jo
jns
xchg
sub
xchg
insb
sub
jle
sub
add
cld
sub
sbb
gs
sbb
test
aas
add
into
pushf
lret
js
jecxz
or
fnstcw
icebp
add
mov
pop
push
repnz
add
add
add
bound
insb
clc
push
xor
inc
cs
mov
in
jmp
insl
sbb
sub
scas
mov
mov
stc
xchg
mov
into
cwtl
jne
add
lret
pop
out
ja
jmp
mov
cmp
cmpsb
mov
push
dec
push
popf
pop
hlt
clflush
imul
sub
jo
cmpsl
outsl
dec
and
pop
adc
sahf
repnz
iret
mov
mov
pop
int
test
xor
push
jmp
ds
insb
scas
sar
das
mov
add
ret
sarb
into
les
push
jecxz
xor
mov
pop
sub
or
inc
rolb
inc
lods
mov
aas
jmp
inc
add
in
stos
mov
mov
aam
dec
cmp
xchg
mov
scas
inc
and
add
stos
mov
and
add
mov
add
lret
sbb
aaa
xor
sub
inc
es
arpl
mov
sbb
hlt
ret
hlt
sub
clc
add
or
push
incl
je
inc
sbb
mov
push
dec
popf
xor
loop
iret
ds
add
xorb
push
push
pop
gs
xchg
adc
cmc
clc
pop
jae
aad
push
pop
jnp
pop
inc
pusha
adcl
or
test
push
insw
inc
add
push
loopne
cmpsl
mov
negb
aas
int3
xor
push
mov
ret
adc
xor
inc
ja
fnsave
leave
fadds
pop
xor
flds
pop
add
repz
push
mov
daa
enter
xchg
pop
sahf
mov
dec
jl
cmc
push
js
inc
hlt
and
push
movsb
dec
outsb
add
and
outsl
add
arpl
add
pop
sbb
push
bound
cmp
fiadds
add
xchg
jnp
dec
nop
add
and
add
jno
fldenv
push
fs
stos
outsb
call
mov
mov
loopne
or
stos
daa
cmp
inc
add
imul
push
fildl
ss
or
movb
cli
cmpsb
add
popa
xlat
lock
cmp
push
mov
fisttpll
fsubl
sbb
or
jno
mov
jns
mov
xor
test
into
add
push
idivl
xor
hlt
lock
xchg
scas
icebp
out
ljmp
mov
or
decl
jl
xchg
loopne
jno
loopne
or
xchg
xor
jae
cmp
push
jbe
ficoml
pop
ja
pop
xor
aam
arpl
pop
jo
add
dec
jns
or
insb
lret
andl
cmp
fwait
out
push
mov
out
lock
cs
and
xor
pop
add
sbb
jnp
loopne
cmp
jns
push
pop
sbb
cmpsl
jl
add
orl
faddl
pusha
xor
inc
sbb
or
loope
add
inc
or
imul
rolb
hlt
pop
loope
add
lock
jl
xchg
add
jge
and
mov
dec
adc
inc
mov
bound
popf
add
push
jmp
xchg
cmp
pop
in
pop
lahf
test
xor
sbb
arpl
sbb
js
xor
testb
addr16
mov
imul
inc
leave
xor
lds
or
push
or
je
xor
loopne
jmp
out
out
enter
or
pop
and
out
enter
or
sbb
add
jmp
mov
loopne
xchg
stos
aas
sub
lods
hlt
add
in
inc
mov
in
or
jmp
dec
sbb
mov
outsb
decb
sbb
sbb
rorb
scas
mov
shll
cmc
sbbb
jae
add
call
in
add
mov
loope
add
roll
shrl
stos
push
add
lahf
cs
hlt
cmp
test
mov
cmp
mov
outsl
sbb
ficompl
dec
in
movsb
pop
add
stc
push
jmp
jmp
sbb
pop
incb
fstp
sbb
add
scas
in
pop
shlb
or
and
mov
out
xchg
cs
fisttpll
sub
jl
jp
pop
lahf
std
fcompl
sub
push
xlat
test
icebp
fildl
lahf
jecxz
add
add
fnsave
int
bnd
jmp
mov
ljmp
pop
shl
add
cmp
cs
nopl
xchg
or
icebp
pusha
inc
mov
fcom
jecxz
nop
and
call
add
adc
inc
sbb
and
add
sub
test
das
push
cmpsb
insb
fcoms
iret
add
pop
je
sbb
cmpb
add
inc
xchg
mov
jno
inc
cwtl
add
sbb
inc
imul
mov
adc
push
mov
fwait
clc
jne
imul
pop
add
shrl
sub
lods
pusha
jmp
mov
push
mov
imul
test
mov
xor
aad
mov
cmp
cmp
lret
sub
xchg
fldl
pop
push
xor
mov
in
mov
or
pop
fsubrl
jge
pop
mov
add
addr16
mov
cmp
sbb
jne
push
out
aad
aas
iret
dec
lods
flds
mov
jecxz
std
add
outsl
lock
mov
fnstsw
dec
jecxz
push
cmp
pop
stos
dec
das
cwtl
add
mov
or
sbb
inc
stc
jae
mov
sub
sbb
cmp
inc
adc
ror
sbb
rdtsc
add
and
ret
sti
jp
cmp
jb
lret
xor
push
cmp
jmp
sub
mov
dec
inc
cmpsb
loopne,pn
mov
bound
das
lods
shll
add
stos
push
mov
test
popa
xchg
pop
or
mov
cli
mov
cs
push
es
je
mov
inc
push
sub
xchg
movsb
xor
and
mov
inc
adc
divb
or
jecxz
arpl
aas
cld
rol
add
je
dec
and
lock
adc
fcom
or
or
faddl
daa
repnz
cmp
add
pusha
xchg
dec
jnp
pop
addl
sbb
cmc
push
push
jae
push
jne
push
inc
fucom
pop
push
sub
inc
xlat
pop
pop
add
push
xor
add
testw
nop
mov
daa
pop
mov
aad
cmp
push
inc
in
xor
xchg
add
add
sub
inc
js
bswap
js
mov
cmp
mov
popf
mov
push
cmp
add
push
inc
test
js
testb
ret
mov
into
nop
faddl
cmpb
rcrb
dec
mov
das
idivb
sbb
xchg
cmpsl
loopne
sub
fdivs
test
bound
lock
pop
mov
inc
push
add
leave
arpl
aaa
lock
add
lcall
jne
add
aad
inc
adc
popf
sub
incl
jecxz
push
xor
jg
data16
in
xor
scas
mov
loope
add
adc
xor
mov
jmp
insl
sarb
or
add
addl
ret
out
add
leave
lret
cmpsb
add
jo
stos
or
pop
jl
sbb
test
into
sbb
sub
hlt
lahf
add
int3
pop
pop
dec
or
or
inc
add
popa
sbb
jp
aam
daa
subb
jbe
clc
adcb
or
add
xor
ds
jge
add
mov
sahf
mov
cmpsb
or
flds
popf
inc
scas
pop
inc
jmp
add
ljmp
repnz
jecxz
xor
adc
outsl
out
cwtl
idivb
pop
aas
jp
adc
sti
xor
inc
ljmp
sbb
push
aaa
add
xor
shr
push
xchg
addl
pop
test
fadd
daa
add
ficompl
jo
or
jecxz
sti
pop
dec
fdivs
cmp
or
popa
add
dec
clc
inc
sbb
leave
test
cmp
mov
and
sahf
test
add
inc
and
dec
push
mov
xchg
std
or
and
inc
pop
jecxz
mov
pop
adc
pusha
or
add
adc
or
mov
or
inc
in
or
add
push
scas
jb
or
pusha
push
js
popf
aad
xchg
cmp
das
in
stc
sub
mov
nop
sub
push
push
sbb
push
fadds
fimull
push
rcl
jbe
add
int3
push
push
push
inc
push
and
in
add
dec
in
sarb
clc
mov
xchg
sub
cmpsb
adc
sbb
xor
in
inc
dec
xchg
repz
test
rorl
push
in
aas
and
cmp
data16
xchg
mov
mov
add
mov
mov
sub
mov
sbb
dec
lock
or
inc
or
test
push
xor
das
adc
enter
in
pop
adc
cwtl
sbb
outsl
shlb
or
and
das
dec
outsb
std
mov
xchg
test
xchg
jo
int3
add
pop
and
push
mov
and
sbb
sub
and
mov
call
push
mov
movl
sub
lock
enter
cld
add
add
push
add
jns
mov
or
cmp
xor
push
push
lea
sahf
adc
and
mov
dec
fcoml
mov
testb
jae
fs
jo
cmpl
push
je
or
push
out
push
and
or
adc
mov
hlt
lock
xor
or
sbb
pop
inc
js
and
xor
inc
sbb
nop
test
nop
lods
sbb
xchg
shrl
dec
out
push
pushw
insb
mov
mov
or
rolb
or
xchg
mov
or
push
adc
mov
add
xchg
add
mov
push
cmp
stc
and
add
sub
jne
xchg
sbb
mov
fcoml
mov
inc
xchg
mov
gs
dec
jo
inc
push
dec
sbb
mov
push
rorl
loopne
mov
rclb
or
lds
or
mov
test
mov
xor
or
push
enter
and
fsubrs
pushf
pusha
pop
add
or
jl
or
test
mov
js
and
mov
les
mov
push
pop
mov
int
mov
add
adc
adc
push
xchg
sbb
inc
lret
add
add
push
scas
mov
dec
test
popa
push
add
rclb
adc
mov
or
and
push
cwtl
ret
xchg
cltd
mov
lret
xchg
jl
sub
push
shrl
xor
rcll
hlt
mov
mov
push
mov
pop
outsb
pop
adc
inc
stos
into
ret
es
ficomps
in
and
shl
pop
ret
sub
inc
mov
jbe
adc
in
mov
test
lock
int3
daa
loope
popf
or
sub
loope
add
aaa
mov
jo
fidivrl
push
dec
or
call
mov
push
inc
lahf
xor
mov
ficoml
es
jmp
loopne
inc
dec
and
push
push
les
bound
push
inc
mov
or
nop
enter
mov
mov
or
xor
xor
mov
test
aam
cmp
sbb
loop
in
xchg
fs
push
inc
lds
int3
ljmp
jne
in
xorl
int3
sbb
push
push
fs
mov
pop
inc
inc
pushf
jmp
mov
les
cld
inc
cwtl
jne
movsb
or
fs
adc
push
and
shrl
adc
push
dec
clc
xor
or
rorb
mov
dec
push
out
enter
je
xchg
xor
add
mov
or
inc
cli
mov
and
in
mov
xor
sahf
and
sahf
pop
test
xor
adc
or
out
ret
and
mov
das
mov
imulb
int3
add
add
shrb
xchg
gs
push
pop
jmp
je
or
push
andb
cmp
repz
pushf
dec
cmp
push
pop
or
inc
test
inc
shlb
inc
ljmp
and
jp
xchg
adc
fisubs
movsb
xchg
fsubr
mov
add
xchg
or
andb
lock
iret
add
movb
clc
xor
ficoms
je
jbe
aas
mov
lods
or
xor
mov
shrl
mov
or
adc
cmc
mov
add
lret
jnp
adc
daa
or
dec
hlt
sbb
inc
cmc
mov
sub
mov
fisubrl
dec
cs
js
or
movsb
add
lock
or
sbb
out
shlb
loope
lret
dec
or
ror
and
jo
xchg
divb
in
std
cmp
mov
adc
pusha
push
xor
sbb
ret
test
je
jno
sub
push
push
ret
imulb
xchg
jl
adc
int3
mov
add
shr
dec
nop
sbb
sub
mov
fs
int
notb
mov
js
mov
clc
inc
nop
add
loope
add
cld
and
jbe
rcrb
cmp
mov
mov
repnz
enter
fmull
inc
adc
or
mov
sbb
in
movsl
or
jnp
push
sahf
push
xchg
or
cmp
mov
xchg
push
cmp
imulb
es
sbb
fisttpl
xor
fmull
int
and
adc
cld
push
in
out
sbb
cmpb
in
sub
movsl
xchg
sub
xchg
lea
subb
push
lods
fsts
jmp
mov
loop
cmpsb
or
add
mov
fmul
sbb
mov
clc
push
cwtl
fnstsw
test
rdtsc
test
popf
adc
les
add
loopne
stos
push
jno
inc
sub
shll
mov
inc
sahf
in
push
call
into
fcoms
adc
jge
or
mov
xchg
lods
push
pop
mov
mov
inc
inc
movsw
dec
and
daa
sbb
dec
mov
sbb
xchg
es
push
xchg
testb
sbb
out
scas
xor
and
pop
dec
lea
or
ja
sub
push
add
sbb
fadds
mov
gs
sbb
rcrb
fsub
or
cmp
pop
popa
push
jnp
ds
and
dec
cmp
xor
outsb
push
xchg
sub
mov
mov
add
mov
push
adcb
or
mov
pop
mov
cmp
popa
aad
xor
inc
push
pop
sub
inc
mov
sbb
jo
add
xchg
xor
ja
add
adc
pop
cmpsb
push
xchg
divb
arpl
lods
insb
nop
fcompl
hlt
inc
sub
xor
movsb
daa
adc
std
lods
movups
adc
xchg
mov
aam
in
push
pop
push
jmp
xor
roll
test
sbbl
enter
and
xchg
xchg
push
mov
inc
mov
aam
dec
lods
leave
scas
add
pop
ds
xchg
and
pusha
xchg
stos
fs
test
pushf
mov
inc
and
mov
rorb
fidivs
inc
push
or
adc
call
or
pop
je
loop
testb
sbb
dec
fcom
and
push
jo
movsb
pop
push
dec
dec
pushf
test
adc
stos
xor
sbb
icebp
add
pop
push
pop
insb
sbb
popf
and
push
int3
add
repz
or
mov
xchg
je
ror
movsb
sub
popf
lds
ds
lcall
fsubp
mov
sub
aam
mov
cmp
fsubrs
fsubrl
pop
movsl
cs
xlat
mov
cmc
fwait
add
inc
dec
std
and
add
mov
mov
jne
push
mov
dec
or
and
push
mov
add
mov
cmpb
sbb
adc
xchg
test
push
pop
nop
popf
mov
adc
jl
mov
dec
les
pop
sub
or
sbb
les
test
push
lds
pop
mov
jl
push
sbb
inc
push
jae
adc
and
test
icebp
ds
pop
scas
pop
rorl
mov
push
dec
cmp
add
sbb
icebp
cld
std
push
jl
sbb
cmc
ljmp
pop
adc
les
push
sub
sub
lock
ja
xchg
and
mov
lea
push
add
ret
push
sub
mov
clc
popf
jmp
mov
sti
ja
dec
lret
arpl
cmc
xchg
inc
adc
xor
mov
test
std
cmp
in
jmp
das
loop
mov
ja
push
ficomps
test
out
and
call
aas
leave
test
outsl
out
and
out
nop
mov
in
and
out
adc
dec
sbb
mov
out
adc
xchg
nop
jp
icebp
sbb
inc
inc
jbe
inc
pop
and
mov
out
adc
push
bound
ds
enter
xchg
mov
push
mov
test
xchg
int3
mov
lret
ss
fdivrs
cmp
xor
lods
lds
mov
out
or
call
int
add
or
mov
push
fcomps
xor
xor
lds
mov
add
dec
popf
das
dec
push
sbb
jle
mov
stos
lods
add
dec
xchg
sub
adc
push
fs
mov
leave
push
or
adc
lea
jecxz
imul
sbb
outsb
xchg
jo
sub
cltd
fs
sbb
adc
loop
pop
fdivr
pop
sbb
push
aas
ss
inc
pop
cwtl
stos
test
sbb
sub
push
xchg
pop
push
lret
arpl
cmp
mov
or
out
sbb
mov
adc
pop
test
movsb
xor
dec
fldcw
clc
sbb
jb
xchg
adcb
sub
mov
inc
push
lock
mov
pop
pop
mov
sub
pushf
mov
add
xchg
shr
fs
xlat
movsl
loope
lods
cmp
nop
lds
iret
adc
nop
insb
push
mov
gs
xchg
aaa
adc
pop
push
mov
in
shrl
dec
loop
ror
and
adc
pop
insb
mov
lcall
pop
cltd
or
push
out
ds
mov
rcll
nop
sub
inc
sbb
pop
popf
or
dec
mov
adc
gs
push
and
mov
and
push
out
icebp
adc
mull
aam
inc
aam
test
push
sub
mov
xor
js
insb
inc
push
lods
lods
test
xchg
add
jo
xor
mov
xor
pop
push
adc
xlat
xor
sub
adc
inc
loope
sbb
ret
inc
gs
popl
lds
and
xchg
cmp
in
mov
dec
cmp
cmp
enter
lds
dec
insb
adc
sub
scas
push
lds
sub
cmp
test
push
aam
push
mov
pop
mov
insb
dec
es
loop
push
test
add
push
cltd
pop
sbb
int3
inc
lcall
call
lea
dec
mov
lods
rcr
mov
test
mov
mov
pushf
and
fs
test
mov
cmp
dec
nop
pop
inc
push
fwait
popa
les
std
xchg
repnz
inc
sub
pop
jecxz
mov
mov
ds
push
sbb
pop
adc
inc
cmp
mov
inc
fisubrs
sbb
sbb
cmp
mov
cld
lods
mov
sbb
into
cmp
call
inc
cmp
les
cmp
test
test
xchg
nop
jae
xchg
in
xchg
dec
mov
push
mov
jns
or
adc
and
push
jp
xor
jle
andl
add
push
jo
rorb
add
mov
sbb
or
jle
fimuls
mov
bound
in
or
aad
pop
mov
inc
gs
lcall
out
dec
fs
dec
int3
jecxz
xchg
mov
fiaddl
das
sbb
inc
add
mov
ljmp
mov
sub
lcall
or
lret
xor
adc
jg
fs
rorl
stc
pop
lods
ror
adc
add
mov
mov
and
mov
mov
loop
cmp
cmpsb
insb
loop
insb
or
xchg
dec
lcall
jle
icebp
leave
pop
insl
dec
nop
adc
push
icebp
pop
xchg
mov
adc
loop
pop
aad
xchg
cmp
xchg
mov
mov
loop
mov
sub
orl
gs
mov
loopne
sub
and
add
xchg
fwait
pop
das
adc
js
pop
pop
xor
mov
popf
loop
call
cwtl
mov
or
adc
inc
sub
xchg
or
push
test
dec
imul
insb
xchg
gs
fdivs
mov
adc
int3
and
test
inc
dec
adc
push
lahf
fwait
mov
sub
ficoms
mov
sbb
in
mov
cmpl
or
dec
in
leave
xor
pop
and
cmpsl
xor
mov
cmp
mov
adc
xchg
mov
push
inc
test
in
ljmp
xchg
fisttpl
inc
and
movsb
aas
jmp
enter
xchg
dec
mov
pop
xor
ror
or
rcll
ljmp
mov
cmp
repnz
adc
in
xor
sbb
es
push
inc
mov
les
insl
pop
push
or
loop
xchg
cmc
test
sub
pop
dec
xchg
in
call
or
test
in
push
mov
jmp
aaa
xchg
fs
inc
je
jnp
and
leave
clc
fstpt
je
call
rcr
jmp
lods
sub
rcl
loop
mov
jmp
mov
inc
adc
je
test
in
mov
enter
stc
sbb
xor
push
movsb
mov
in
mov
push
repnz
adc
aam
jp
mov
pop
pop
cmp
test
push
push
push
stc
add
sub
es
xor
call
jno
xor
dec
push
cmpb
pop
ss
test
inc
jmp
fidivrs
pop
and
lret
inc
std
or
pushf
mov
and
mov
mov
ja
jmp
push
adc
fistpll
and
je
xchg
adc
lds
out
cmp
mov
adc
test
insb
cmp
mov
cmpsl
inc
jle
mov
jmp
popf
into
jmp
data16
push
inc
xchg
inc
outsb
mov
mov
dec
int3
dec
enter
in
sbb
xchg
jb
cmpsb
adc
and
inc
lea
xor
lret
test
mov
int3
push
xchg
xchg
adc
inc
and
inc
push
test
das
xchg
movsb
enter
or
mov
lds
cmp
mov
jno
inc
mov
dec
es
nop
and
jbe
sub
and
sbb
mov
icebp
jecxz
aaa
and
jbe
das
pop
out
dec
and
and
pop
xor
mov
in
xchg
cmc
or
and
push
and
notb
orl
iret
pushf
xor
mov
push
in
jb
adc
lods
mov
push
outsb
and
insb
mov
and
jg
jg
into
and
push
movsb
and
inc
pop
rcrb
loop
shrb
push
mull
and
dec
enter
dec
xor
and
repz
cmp
mov
push
jge
sub
ja
notl
bound
xor
cmp
cmp
pusha
push
stc
or
fldcw
aaa
mov
aas
or
mov
mov
or
pushf
push
xchg
ds
clc
pop
xchg
inc
push
adc
sbb
push
mov
push
repnz
aaa
in
sub
lea
inc
loop
adc
push
stc
or
fldcw
test
cmpb
mov
cmp
jnp
inc
fists
jns
sbb
loop
push
stc
or
fldcw
enter
cltd
jle
repnz
cmp
jnp
dec
fists
sbb
sub
dec
repz
repnz
cmc
or
jl
mov
in
ja
notl
bound
xor
push
push
pop
push
fcmovnbe
jg
dec
in
xor
dec
leave
cltd
mov
xor
adcb
add
stos
ret
mov
outsl
movl
fsubl
xor
inc
lods
jp
adcb
push
mov
aam
dec
lods
inc
pop
dec
loope
jnp
dec
adc
pop
push
imul
xchg
scas
cmp
imul
sbb
outsl
lret
push
mov
sub
inc
jns
mov
call
ret
test
xor
cmpl
setne
neg
leavew
fcmovbe
pop
adc
inc
add
mov
xor
pop
loop
push
xchg
pop
mov
ds
fstpl
or
lods
pop
mov
adcl
xchg
loop
sbb
call
xor
mov
mov
cmp
sub
mov
xchg
pop
pop
scas
sub
mov
xchg
mov
sti
pop
sub
daa
js
xchg
dec
fcoml
flds
lds
shlb
ret
adcl
mov
or
inc
mov
into
xchg
mov
mov
ss
jmp
xchg
pop
dec
ret
jecxz
pop
mov
lods
mov
movlps
push
scas
sub
dec
mov
test
mov
cld
inc
std
jg
or
orb
jle
push
push
das
shll
jne
int3
jmp
insb
out
daa
test
repnz
jp
jae
mov
and
enter
test
dec
add
pop
bound
or
or
sub
pusha
mov
fs
jae
cld
jb
std
mov
stos
mov
mov
inc
nop
or
mov
test
xlat
mov
or
pusha
mov
fs
jae
cld
jae
int3
xor
or
test
lds
outsl
jmp
pop
mov
cmpsb
dec
cmpsb
mov
adc
mov
clc
push
out
jno
cmpl
clc
fidivrs
dec
cmp
jbe
leave
mov
mov
out
sti
add
push
int3
pop
and
pop
daa
mov
fidivl
fnstcw
std
mov
cmc
sub
enter
adc
and
nop
enter
push
popf
dec
and
faddl
push
lods
pusha
std
stc
or
and
push
sub
sbb
push
fs
enter
insb
mov
adc
loope
das
mov
mov
xor
xor
and
or
lcall
cld
outsl
mov
fdivrl
lret
add
jb
cltd
insb
mov
jo
jae
cld
jae
int3
xor
leave
jle
mov
call
rcrb
mov
lock
mov
mov
stos
addr16
jp
gs
sub
bound
sbb
sbb
jnp
or
pop
shl
andb
mov
orl
mov
mov
loopw
adc
lock
insb
xchg
rorb
sbb
and
add
rorb
dec
data16
jge
popa
imul
adc
stc
jbe
lods
cmpsb
mov
mov
test
insb
mov
and
mov
adc
and
ret
or
enter
jb
pop
shrb
xchg
outsl
adc
dec
mov
or
outsl
js
push
test
push
xor
mov
adc
jge
testb
cld
lods
dec
in
dec
mov
push
dec
enter
add
int3
stc
dec
mov
push
xchg
rcll
and
loop
push
push
lds
nop
fdivl
jae
cmc
push
mulb
aam
rcrb
push
jae
adc
and
dec
dec
and
xlat
jmp
scas
ret
pop
out
xchg
lds
adc
scas
fimuls
dec
fimull
mov
xchg
and
es
fcomps
ds
push
inc
dec
push
xor
or
mov
imul
test
add
and
cltd
pusha
push
call
aad
push
push
sub
es
jp
dec
stc
or
pusha
in
enter
inc
imul
cmpsl
je
ja
loopne
psubsb
mov
cmp
sar
mov
ds
inc
ds
mov
xchg
pop
ret
mov
clc
mov
sbb
xchg
mov
call
pop
push
das
mov
jb
aam
imul
fdivl
adc
stc
and
adc
xor
mov
sti
adcb
mov
stos
sub
mov
mov
jp
or
mov
cli
xor
mov
xchg
int3
jb
pop
push
mov
icebp
sbb
repz
repz
add
loope
sub
mov
mov
movsl
push
jecxz
and
adc
xor
push
loope
sti
sbb
les
inc
movsb
adc
test
push
adc
fs
jl
addr16
repnz
or
andl
rdmsr
adcb
add
movsl
adc
lock
call
out
push
mov
add
push
lcall
jmp
xchg
mov
xchg
dec
mov
out
add
push
pop
nop
icebp
jl
mull
and
or
mov
mov
fbld
adc
lock
aam
sbb
les
jae
bnd
test
adcb
fstpl
sbbl
rolb
das
and
inc
out
mov
test
mov
sbb
adc
jnp
inc
adc
into
sub
mov
pop
pop
jne
adc
mov
adc
lahf
pop
daa
call
adc
sub
jns
cs
sub
dec
mov
push
pop
stos
jno
sub
sbb
les
scas
jo
sub
and
dec
sub
lcall
lock
out
sub
sahf
dec
leave
ja
mov
rorb
loop
fcmovnbe
xor
xchg
lcall
mov
gs
and
xchg
test
jae
sar
shlb
inc
int3
imul
push
pop
enter
out
sub
rol
sbb
or
sbb
push
xchg
hlt
inc
lock
and
adc
and
fistps
and
push
call
imulb
icebp
pop
jae
add
neg
sbb
pusha
or
repz
in
dec
mov
sub
and
lock
dec
or
daa
pop
subb
jnp
mov
adc
and
push
test
out
mov
and
xchg
xor
jno
dec
fstl
xor
test
lret
lret
leave
popf
xchg
xchg
rcr
mov
push
call
fimull
xchg
cmp
xor
dec
push
push
mov
cltd
stos
es
ror
xchg
pop
aaa
xchg
push
sub
sub
mov
in
jg
aam
fwait
mov
inc
les
push
and
jo
jmp
icebp
or
adc
adc
mov
add
call
jl
sub
mov
call
and
outsb
fs
add
jge
call
xchg
mov
sub
push
and
dec
aam
decb
in
and
lret
mov
mov
add
mov
fiadds
adc
je
fadds
les
daa
adc
or
jle
push
mov
clc
dec
or
push
insb
push
inc
faddl
pop
call
enter
adc
leave
or
ss
mov
xchg
adc
clc
and
xor
jno
dec
clc
dec
inc
and
movsb
inc
xchg
mov
xchg
and
dec
mov
sub
enter
xorb
inc
lods
ja
call
fbld
dec
or
xchg
push
mov
jl,pt
jp
mov
movsb
pop
popf
cmpsb
sbb
adc
push
sbb
shll
sbb
dec
xchg
jg
xchg
xchg
cltd
mov
mov
or
not
mov
inc
and
mov
inc
inc
test
sbb
sbb
add
movsl
xor
cmp
cmp
sbb
sub
adc
mov
adc
mov
push
mov
cwtl
out
adc
call
inc
xchg
fbld
inc
lea
cmp
mov
nop
sbb
cmp
loop
push
stc
or
incb
js
clc
push
push
cltd
dec
push
rclb
inc
cmpb
fcoml
dec
aaa
inc
push
bnd
adc
mov
or
pop
cld
inc
js
and
divb
dec
inc
repnz
adc
dec
je
leave
vcvtpd2ps
in
enter
sub
inc
inc
das
and
push
push
or
pop
das
xchg
mov
mov
je
sub
int
mov
je
icebp
sbb
call
popf
mov
orl
cmc
shr
jae
or
jle
clc
or
in
push
pop
test
ret
loopne
lods
push
push
push
and
test
roll
addr16
fadds
xchg
fidivrs
mov
inc
rcrl
dec
inc
add
pop
inc
test
jo
call
pop
aas
daa
cwtl
sbb
cmp
shl
cld
lods
sbb
mov
call
mov
adc
scas
enter
mov
or
sahf
mov
fsubrl
ss
call
pop
cld
jno
or
ds
test
int
fcoms
fcompl
hlt
mull
cmc
cmp
and
nop
mov
push
jns
dec
in
jmp
mov
out
enter
push
jns
mov
cltd
jns
push
in
cmpsl
fsubs
fsubrs
lods
or
fdiv
pop
push
test
mov
or
inc
mov
rorl
test
dec
cmpsb
xchg
inc
in
or
out
adc
sub
and
inc
cwtl
push
ffree
ss
icebp
mov
inc
pusha
js
xchg
iret
pop
push
push
in
je
pusha
mov
push
pop
fisubs
movsl
sarl
jns
insb
int
xchg
imul
test
jnp
fsts
test
lea
gs
bound
in
leave
int3
pop
cltd
cwtl
fsts
loop
mov
cmc
add
mov
ljmp
jbe
dec
js
popa
fldenv
fcoml
in
je
rcrl
push
lea
lods
adc
sub
pop
dec
and
lcall
ljmp
sub
js
push
xchg
mov
sbb
ja
setno
cmpsl
fsubr
adc
fimuls
pop
jb
and
and
and
mov
sbb
pop
or
adc
movsb
ja
jp
mov
jl
xchg
and
xor
adc
mov
and
xor
jl
push
lea
push
pop
xchg
loopne
xor
les
ficoml
je
ss
incl
divb
sbb
push
pop
xchg
mov
lea
cmp
xchg
push
xchg
dec
push
rcll
rclb
outsb
mov
inc
sahf
outsb
cmpsl
and
fisubs
dec
pop
push
sub
push
cld
and
icebp
or
sub
iret
jns
dec
mov
sub
iret
pop
jl
xchg
sub
enter
sub
and
nop
mov
fcompl
or
cmpsl
mov
loop
pop
push
nop
adc
enter
out
xchg
xchg
aas
pop
adc
test
xchg
sub
xchg
ljmp
adc
and
popf
xchg
icebp
in
das
sub
cmpsl
xchg
mov
mov
shll
aam
or
int
cmp
and
jp
and
fs
lahf
mov
and
adc
hlt
jmp
mov
std
sbb
les
clc
std
cmp
in
jmp
cs
hlt
std
cmp
in
jmp
das
loop
mov
dec
mov
xchg
dec
fidivrl
test
or
jmp
dec
imul
inc
xor
in
out
nop
cmpsl
scas
push
in
cwtl
in
push
dec
dec
mov
inc
mov
inc
das
adc
inc
mov
sub
pop
xchg
mov
movsb
jmp
jmp
mov
push
dec
add
or
push
fdivr
pop
mov
xlat
notb
fbstp
out
lds
mov
cmp
mov
sbb
daa
xor
mov
mov
pushf
dec
or
inc
mov
xchg
test
jecxz
xlat
or
out
mov
pushf
ljmp
insb
dec
push
leave
jb
in
jg
xchg
inc
divb
nop
sub
enter
call
cmp
mov
icebp
insb
xchg
test
mov
xchg
orb
inc
mov
mov
adc
cmp
jns
pop
and
lock
std
xchg
jl
cmp
fldt
fbld
dec
adc
out
cmp
jns
push
cld
adc
idivl
das
jb
in
jbe
mov
js
call
popa
mov
jnp
sub
leave
idivl
test
repnz
adc
dec
mov
cli
jge
scas
scas
lds
lahf
push
sub
add
adc
cmc
ds
clc
xchg
xchg
out
fdivs
inc
cmpl
adc
dec
fnstsw
add
pop
adc
sub
xlat
daa
sti
repnz
inc
dec
pop
mov
in
popf
mov
jecxz
xlat
mov
ja
xchg
insb
sti
test
jg
jnp
nop
pop
mov
in
adc
daa
pop
clc
imul
adc
sub
adc
sar
sbb
repnz
ljmp
mov
mov
movsb
cli
jge
xor
lahf
arpl
pop
or
adc
pop
sarb
or
add
or
mov
imul
mov
test
fcompl
lret
jo
lods
xchg
and
mov
add
cmp
inc
enter
jae
lods
aaa
insl
adc
and
push
inc
pop
in
insl
push
cmp
and
or
pop
pop
add
mov
and
adc
fstl
push
out
out
mov
xchg
sub
inc
fs
mov
mov
into
lret
pusha
outsl
icebp
nop
mov
loopne
pusha
mov
addl
das
jo
outsb
js
loopne
xchg
mov
xchg
or
xchg
jp
rorl
inc
imul
adc
fs
push
idivb
xor
jge
addr16
mov
sbb
les
ret
cmc
jmp
adc
pushf
imul
inc
pop
pop
xor
xchg
aam
mov
in
and
lods
jnp
aam
lcall
test
movsl
clc
test
and
movsl
push
push
out
and
roll
mov
mov
test
and
fmuls
lods
adc
or
push
push
ret
stc
orb
addb
xor
movsb
push
fiadds
fbld
dec
xchg
push
push
imul
ds
cmp
pusha
xchg
inc
sub
mov
pusha
mov
mov
pop
or
mov
sbb
jbe
les
push
ja
fs
fldcw
xchg
dec
xchg
rcrb
sbbb
loop
and
call
mov
inc
push
mov
cmovp
mov
mov
in
mov
fcmove
or
adc
sub
mov
mov
mov
les
mov
pop
les
std
cmp
mov
stos
cmp
popa
test
mov
pop
mov
push
repz
mov
jl
jl
enter
mov
je
jl
xor
fs
push
push
fnstenv
shlb
bound
push
push
and
test
mov
xor
push
jae
jecxz
mov
into
lds
jecxz
hlt
ljmp
inc
mov
loop
aas
mov
and
or
mov
pop
stc
idivb
les
push
xchg
out
test
inc
xchg
sub
dec
imul
sti
in
das
lahf
lock
mov
pop
jmp
movsl
scas
gs
outsl
imul
out
nop
mov
mov
stc
pushf
push
xor
mov
cmc
cmp
and
inc
inc
lcall
adc
out
nop
les
repnz
xchg
xchg
int
pusha
test
movsb
notl
cmp
enter
ds
js
ss
hlt
jle
xor
dec
out
xlat
sub
hlt
jns
sbb
xchg
in
hlt
enter
and
lahf
sub
inc
xchg
lret
mov
sub
hlt
sarb
fs
testl
xchg
fs
xor
jl
mov
mov
hlt
xchg
pop
ficompl
xor
sub
hlt
es
jle
hlt
je
fs
mov
xchg
adc
and
nop
mov
dec
cs
test
sub
test
sbbb
inc
test
mov
and
dec
mov
nop
sbb
push
pop
hlt
jb
mov
mov
adc
fdivrl
sbb
and
add
pop
fdivl
leave
pop
xor
push
pop
mov
jnp
sub
loop
inc
adc
leave
fdiv
fwait
push
nop
and
test
mov
sbb
shll
xchg
fsts
dec
movsl
lds
push
lods
pop
fdivrl
push
aam
dec
fucomi
daa
push
mov
cmpsl
addr16
adc
jns
push
jle
pop
mov
lahf
js
or
in
ljmp
jmp
test
mov
fsubl
jg
fndisi(8087
jmp
pop
repnz
js
and
add
inc
mov
scas
jns
jae
enter
lock
iret
lahf
and
cmp
xchg
stc
dec
hlt
fwait
fs
call
sub
aam
shrb
add
mov
dec
das
inc
in
jge
and
mov
insb
inc
mov
call
insl
fimuls
lret
xchg
cmp
adc
and
dec
bound
mov
hlt
xchg
cli
jns
leave
imul
pop
hlt
call
cli
push
movsl
pusha
rcll
test
and
mov
aaa
mov
les
mov
sub
out
mov
inc
pop
lcall
movsb
mov
inc
add
sub
rclb
mov
push
jmp
cmp
test
lods
and
mov
pop
in
cld
inc
push
and
js
icebp
sbb
je
or
std
fdivrs
xchg
std
cmp
jnp
rolb
mov
das
jns
cmpsl
je
push
das
pop
or
hlt
stos
mov
and
xchg
test
sbb
rorl
stos
lcallw
mov
mov
enter
sub
push
mov
loop
int
stos
push
dec
jle
sarb
xchg
lods
mov
adc
mov
adc
xchg
and
and
pop
jg
sub
or
and
adc
mov
stc
notb
mov
insb
stc
lods
jo
ret
dec
mov
pop
repnz
sarl
stc
sub
scas
insl
xchg
xchg
call
dec
and
lcall
test
cs
and
xchg
out
test
outsl
dec
popf
nop
lods
push
out
mov
push
enter
fwait
jno
pop
mov
in
or
sub
imul
lret
les
enter
test
mov
mov
sub
sub
sub
sub
dec
cmp
dec
dec
lods
dec
sahf
movsb
mov
lret
mov
or
push
push
adc
or
or
mov
shrl
or
pushf
or
pop
jl
xchg
lahf
and
pop
or
les
and
mov
xchg
mov
mov
fsubl
pushf
inc
mov
inc
movsb
sarb
xchg
lods
shr
je
aam
mov
sarl
pop
mov
gs
mov
jne
inc
sub
fs
push
inc
sbb
into
pop
enter
test
lods
mov
rorl
notb
rol
push
es
mov
into
cmpsb
hlt
pop
xchg
xor
ja
nop
cmpsb
mov
mov
mov
cs
fcom
xchg
push
jne
xchg
out
dec
idivl
sbb
sbb
sbb
popa
lret
cmp
xor
push
scas
push
popf
repz
push
call
jl,pt
orl
adc
jmp
pop
popf
aam
lret
bound
sub
inc
mov
in
mov
cmp
adcl
jl
insl
add
cmp
cs
cmp
mov
in
shr
cmpsl
mov
loopne
dec
pop
cld
repz
push
repnz
sub
data16
mov
jne
dec
xor
sub
xchg
or
pusha
xchg
lods
jp
icebp
push
dec
mov
shrb
dec
mov
mov
jmp
or
jns
adc
pop
fabs
push
enter
sub
xchg
cmc
xchg
sbb
push
jbe
les
push
pop
pop
jo
add
test
sub
lahf
popa
nop
and
sbb
movsb
or
pushf
jno
sbb
cld
fldenv
dec
outsb
sarb
xchg
ljmp
and
arpl
ret
cmp
inc
ds
inc
pop
aas
xchg
mov
pop
dec
mov
pop
xchg
sbb
adc
sub
aas
lahf
sbb
xchg
or
pushf
decb
out
sbb
in
sbb
mov
dec
scas
lods
push
sti
gs
stc
sub
leave
rol
inc
pop
mov
pop
loopne
nop
das
xchg
lahf
inc
cwtl
sub
mov
fmull
scas
sub
lods
mov
adc
adcb
adc
loopne
lods
mov
dec
add
or
dec
cmp
pop
jmp
jns
sub
and
jo
mov
xchg
inc
and
jmp
fisubs
inc
fwait
loop
add
int3
lahf
data16
fwait
loope
adc
popf
divb
mov
cmp
int3
dec
enter
fldt
push
add
test
mov
std
movsb
sahf
lods
pop
mov
xchg
adc
fs
cmp
scas
into
jmp
sub
aas
lret
aad
out
enter
rcrl
push
pop
popa
dec
ja
and
and
mov
inc
repz
in
js
mov
sub
cld
adc
fs
and
xchg
ljmp
add
in
sbb
insb
or
dec
sarb
pop
mov
dec
stos
xor
push
or
cmc
or
dec
mov
add
jecxz
roll
dec
fldcw
jne
push
daa
orb
pop
dec
movl
das
test
adc
mov
jmp
sbb
xlat
and
adc
cs
push
mov
cmpsb
mov
add
mov
sub
add
push
jne
fs
jge
add
xchg
pop
iret
lods
stos
xlat
lds
dec
iret
mov
ja
mov
or
enter
arpl
lret
cmp
scas
mov
and
and
cmc
sbb
jle
xchg
pop
xchg
mov
mov
fildll
inc
mov
sbbl
mov
in
std
aad
pop
push
dec
lret
enter
insb
sbb
inc
or
mov
cld
js
in
dec
aas
fsubr
jge
hlt
dec
sbb
jl
add
cld
jmp
sti
aas
rol
cmp
cmp
ret
dec
jl
repnz
enter
je
jl
jl
add
adc
int3
sbb
test
fcompl
push
loop
dec
inc
push
cmp
and
je
or
xor
cmp
pop
jo
and
movsb
add
push
scas
fnstcw
sub
or
xchg
jl
cwtl
mov
mov
mov
int3
mov
fcompl
in
xchg
xchg
mov
loop
shrl
pop
jmp
lret
jge
adc
int3
pop
jl
push
popf
insl
aam
push
mov
mov
loopne
xchg
insb
into
les
rolb
jecxz
dec
stos
sub
add
mov
stc
aam
pop
adc
inc
or
push
enter
shlb
mov
loopne
push
test
cltd
xchg
mov
sub
in
xchg
pop
arpl
fcmovnb
aas
and
adc
fiaddl
sti
adc
cs
imulb
loope
cli
push
jl
sbb
mov
pop
mov
aam
test
ds
mov
sti
clc
inc
cmp
lock
cli
fsubrs
cmp
and
xlat
test
adc
lret
pop
sub
xor
sub
xor
lret
outsl
adc
jge
or
inc
pusha
jle
rcl
adc
out
movsb
mov
mov
std
int3
mov
and
stos
xor
mov
push
jo
dec
leave
clc
cwtl
lahf
out
and
dec
jb
mov
xor
test
mov
adc
push
adcb
cmp
sti
and
fadds
adcb
or
cmp
stc
or
sub
inc
xor
xlat
sub
push
icebp
pop
test
outsb
fisttps
xchg
mov
jae
xor
cmp
test
filds
pop
adc
fisubs
sub
jb
add
mov
out
adc
xchg
mov
aad
rorl
lods
mov
sub
or
xor
js
lods
test
pop
lahf
imulb
icebp
or
mov
xor
xor
mov
sub
adc
mov
leave
sub
orb
xchg
mov
and
cmp
push
lcall
cld
cli
test
cmc
jb
clc
cli
test
pop
xchg
leave
xchg
lahf
jae
pop
mov
xor
lahf
sub
add
call
sub
and
in
mov
test
adc
cwtl
das
and
xor
imul
popf
lahf
hlt
jmp
mov
mov
imul
mov
js
in
jns
sbb
fcoml
dec
sub
enter
mov
adc
inc
sbb
adc
pop
sahf
push
daa
push
adc
fdivs
and
xchg
scas
lahf
icebp
xchg
and
and
les
add
mov
dec
pop
jno
and
scas
xchg
and
leave
jecxz
push
mov
leave
mov
adc
andb
xchg
pop
mov
jecxz
movsb
sbb
xor
jecxz
loope
notb
mov
aas
pop
mov
xor
inc
cmc
das
enter
and
adc
and
les
lea
icebp
push
es
outsb
insl
ret
es
je
mov
cmp
movsl
adc
movsl
popw
push
fisubrl
iret
and
into
adc
cmpsl
or
inc
lock
outsl
pop
or
jne
loopne
pop
lock
sbb
and
xor
mov
inc
and
imul
adc
mov
lods
sub
fdivl
inc
and
jle
sbb
loop
xor
mov
xor
rcrl
ja
movsb
adc
jae
test
lahf
outsl
clc
testl
dec
bound
sub
sub
clc
jno
add
xchg
jb
inc
sub
in
pop
mov
adc
inc
decb
jnp
inc
shlb
mov
pop
shll
xchg
orb
ss
sbb
xchg
fcompl
sti
dec
test
cmpsl
je
out
or
movsl
imul
nop
adc
sub
and
adc
mov
into
adc
xor
dec
sub
push
lds
and
inc
shlb
cli
and
mov
in
outsl
adc
fcmove
jg
jne
std
insl
and
gs
and
inc
test
cltd
adc
jb
test
sbb
out
dec
in
sarl
dec
sub
imul
inc
adc
mov
fs
mov
mov
jge
inc
je
popa
adc
imul
mov
jb
dec
jnp
movsb
mov
and
shlb
in
cmp
rclb
adc
lcall
sbb
xchg
loop
aas
fsts
sbb
lahf
arpl
ja
and
ja
popa
adc
shrb
in
mov
jb
push
push
inc
push
mov
and
mov
jmp
mov
test
jge
loope
ret
jl
fadds
mov
and
jno
pop
in
or
dec
mov
push
push
and
mov
dec
pop
ficoml
popa
leave
aaa
jmp
aaa
nop
es
imul
push
xchg
and
sbb
inc
popf
cmpsl
ljmp
ljmp
sub
pop
mov
pop
adc
hlt
outsb
shr
lods
test
hlt
cli
call
imul
test
cli
incl
sub
mov
loope
ret
mov
jno
push
and
popa
js
jbe
sub
xchg
and
and
decb
xchg
into
adc
rcr
rclb
hlt
ficoml
jno
aaa
push
sti
adc
stc
sahf
cmp
enter
outsb
stos
and
jno
pop
in
clc
mov
sbb
cwtl
dec
mov
lods
xor
js
icebp
mov
stos
enter
ss
and
mov
in
outsb
stos
and
jno
pop
in
in
mov
sbb
mov
mov
cmp
mov
cmp
push
ljmp
enter
mov
stos
enter
inc
sti
and
mov
in
outsb
stos
and
xchg
jg
fdivrl
les
lea
ljmp
enter
mov
stos
enter
dec
sti
and
mov
in
outsl
pop
lea
es
xchg
jecxz
dec
pop
pop
fucomip
repnz
mov
mov
jle
push
cmp
mov
mov
mov
in
scas
outsl
clc
dec
test
push
js
cld
and
stc
cmp
xchg
je
push
loop
dec
enter
js
adc
fistpl
cld
inc
push
loop
jae
std
adc
fisubs
inc
fs
les
daa
pop
mov
loop
inc
pusha
lahf
arpl
data16
les
inc
jae
push
js
scas
dec
xor
mov
mov
sub
cmpb
xorb
add
ljmp
mov
mov
dec
pop
jg
mov
pop
lea
lock
sti
mov
adc
xlat
hlt
stos
int
cmp
lock
lcall
aas
lret
cmp
pusha
addr16
mov
xor
imul
outsb
mov
push
and
dec
in
sar
pop
and
xchg
mov
or
enter
push
or
into
pop
and
inc
push
xchg
test
adc
movups
pushf
and
or
enter
addr16
mov
xor
inc
and
adc
test
std
out
mov
ja
std
out
enter
adc
pop
loop
inc
sbb
je
popa
or
rorb
fs
cmp
jae
enter
pop
ret
xor
mov
lods
aaa
pop
mov
orb
push
lods
aaa
mov
clc
aad
arpl
arpl
enter
cmp
pop
mov
push
stc
or
jle
out
aad
jp
xor
pop
inc
sub
and
test
mov
and
sarb
and
dec
pop
in
sub
mov
rclb
xchg
stc
jbe
test
or
adc
ljmp
in
sub
lods
xor
in
xchg
nop
aad
mov
lcall
movsb
cmc
sbb
jbe
xchg
and
loop
inc
movsb
sbb
les
xchg
pop
and
adc
xchg
cmp
sub
orl
mov
pop
mov
cld
popf
movsb
out
xchg
push
enter
enter
or
jo
inc
nop
fbld
inc
lea
adc
mov
loop
sbb
mov
add
int3
std
mov
jge
xchg
inc
add
xchg
or
pop
loop
aam
cmp
inc
aam
xchg
mov
mov
test
mov
push
push
test
je
ficompl
call
add
arpl
and
movsb
lahf
adc
sbb
nop
and
pop
lret
inc
inc
pop
repz
mov
repnz
xchg
xchg
mov
test
inc
andb
inc
jo
jecxz
pusha
mov
jp
sti
cmpl
imul
dec
hlt
push
add
in
mov
cs
gs
push
addr16
xchg
push
mov
outsl
push
cmp
in
and
inc
push
movsl
jmp
popf
adc
ljmp
out
enter
push
and
mov
sbb
mull
lock
ja
cmp
cmc
dec
jle
iret
and
push
sub
lods
dec
sub
lea
pop
icebp
jae
jg
jns
pop
insb
les
xchg
je
mov
insl
mov
scas
insl
xor
aam
mulb
std
imul
aad
xchg
adc
and
lock
shl
cli
sbb
ficomps
jp
sbb
xor
fs
adc
xchg
mov
adc
bound
and
stos
iret
cmpsl
in
cmp
js
ljmp
push
cmp
shrl
test
je
push
mov
pop
adc
cmpsl
cli
cs
enter
jge
fsubrl
shrl
mov
loop
repz
leave
je
xchg
outsb
sbb
dec
call
pop
iret
scas
and
push
pop
jns
adc
cmp
das
lahf
jecxz
addr16
adc
push
outsb
icebp
jp
and
adc
cs
mov
rdpmc
lret
sub
inc
xor
push
incl
and
inc
cs
outsl
loopne
cld
stc
inc
mov
pop
sub
mov
adcb
nop
xor
nop
xor
and
xor
and
xor
das
add
shrb
in
inc
and
cli
movsl
repnz
xchg
orb
rorb
dec
sub
insl
cli
push
sbb
add
inc
ja
mov
inc
ja
mov
inc
ja
mov
inc
and
outsl
rcrl
sbb
jbe
shl
addr16
hlt
addr16
hlt
addr16
hlt
addr16
hlt
addr16
hlt
sti
dec
clc
mov
inc
inc
sbb
in
cltd
std
add
fs
dec
cli
mov
leave
pushf
sti
sbb
enter
icebp
lahf
mov
fistpl
xorb
sbb
movsb
adc
xor
sbb
addr16
cmpsb
or
adc
adc
shlb
inc
mov
sti
stos
lret
nop
rolb
add
jno
mov
add
in
adcb
push
xchg
jae
inc
in
xor
push
js
sbb
push
sub
pop
js
loopne
int3
sub
mov
and
xchg
xchg
sub
dec
iret
dec
int3
cmp
loope
and
mov
dec
mov
cld
out
push
mov
pop
sti
adc
ljmp
jge
outsb
mov
mov
add
add
mov
xor
add
call
in
mov
mov
mov
int
and
xor
push
xor
sbb
out
xlat
int
sbb
and
aad
sbb
test
dec
xor
mov
nop
outsb
pop
push
in
fwait
push
mov
test
jb
sub
pop
jecxz
je
xchg
xchg
mov
xchg
lods
lds
jns
loope
js
adc
add
mov
divb
jbe
jmp
pop
ja
clc
insl
adc
jp
inc
imul
out
testb
jb
addr16
and
les
jns
cmp
das
shl
jo
in
lahf
mov
into
xor
insl
cli
xor
cmp
mov
sbb
mov
shl
push
fbld
jmp
dec
sarb
std
and
xchg
mov
loope
and
mov
lcall
adc
sub
push
add
rorb
js
loopne
or
in
inc
dec
addl
or
mov
dec
unpckhps
jns
dec
leave
jns
jb
and
and
out
xorb
push
push
mov
adc
or
push
push
jp
adc
leave
and
imulb
pusha
aaa
daa
popf
loope
hlt
sti
xchg
and
inc
jo
movsl
push
cmpsb
cmpsl
xor
pop
lods
out
mov
lods
jb
sub
jp
sub
and
inc
jne
jnp
push
push
add
scas
pop
cmp
push
jne
and
lcall
pop
sub
lods
imul
js
adc
mov
mov
cmp
fwait
and
sub
hlt
pusha
dec
sub
punpckhwd
ficoml
sub
sub
xchg
in
sub
and
pop
insl
das
aas
insl
fcmovnb
push
dec
xor
push
imul
cmp
cmp
ja
shrl
mov
pop
mov
hlt
gs
rclb
lret
dec
pop
into
sub
aam
xchg
mov
movsb
adc
and
and
mov
or
and
icebp
sbb
pop
add
sbb
lea
mov
inc
mov
mov
cmc
movsl
cmp
mov
fisttps
pop
das
pop
and
sbbb
loop
jecxz
jp
push
jbe
cltd
push
xchg
cmpsl
cmp
test
push
and
jnp
leave
add
jnp
mov
and
mov
cmp
mov
jne
test
sbb
out
rcll
loop
pop
jg
enter
push
notl
and
xchg
test
and
pop
xchg
xchg
inc
pop
push
push
xchg
call
mov
push
ja
pop
pop
mov
mov
jl
stc
fnsave
mov
xchg
call
push
ftst
icebp
mov
test
pop
push
jg
inc
scas
jae
xchg
push
sub
inc
mov
inc
jl
lahf
inc
add
mov
sbb
xor
fs
cmp
hlt
addr16
andl
nop
xor
movsb
mul
mov
ret
cmc
pop
cs
push
pop
dec
movsl
fucom
movsl
push
std
insl
loopne
inc
add
add
loopne
fcomps
pop
in
mov
mov
mov
jmp
dec
call
ja
popa
jae
mov
in
imul
adc
pop
adc
jmp
in
call
pop
push
aad
jg
scas
push
lcall
push
pop
mov
push
std
imul
add
mov
es
and
lret
fsubrs
and
cwtl
cmp
loop
nop
xor
xor
sahf
mov
nop
roll
push
push
add
shr
repz
les
mov
divb
shll
sbb
or
gs
adc
and
push
xor
insl
mov
or
popf
or
rclb
mov
jmp
push
repz
pop
dec
or
lods
ss
pop
mov
or
nopl
push
inc
or
scas
cld
out
in
or
mov
xchg
icebp
or
mov
insb
add
cs
push
sbbl
pusha
test
into
adc
push
test
test
rolb
movsl
adc
insb
and
mov
or
ljmp
sub
cmp
mov
mov
test
shrb
sub
mov
stos
mov
leave
adc
int
and
into
in
popa
add
dec
stos
mov
into
adc
push
xchg
fdivs
addb
scas
aam
xchg
lcall
fwait
popf
inc
loopne
push
cmp
shlb
push
fsubs
mov
add
jp
or
jbe
mov
test
cmp
dec
sbb
loopne
pusha
xchg
jle
fldenv
shlb
stos
fisttps
std
inc
andb
and
pop
aaa
imul
iret
lahf
popa
dec
pop
loope
js
pop
jbe
xchg
stos
adc
jl
test
cli
cmp
js
ja
xchg
repz
xorl
xor
aad
mov
gs
outsb
ror
pop
vmptrld
insb
js
sub
pop
loop
push
mov
mov
movsb
scas
mov
in
movsl
outsl
push
and
out
nop
movsb
push
or
cmp
ds
mov
sub
mov
into
jo
push
and
pop
and
loop
aaa
out
nop
sbb
enter
pop
sbb
test
out
push
pop
jno
pop
xchg
loop
out
inc
mov
cmp
fdivl
jmp
adc
pop
mov
inc
pop
fisttpl
int3
sub
and
movsb
sbbl
mov
and
mov
mov
adc
ss
sub
sbb
in
mov
int3
test
xchg
sahf
aam
mov
ja
jmp
push
dec
ja
lret
adc
pop
jmp
cld
pop
cmp
sub
shr
out
xchg
sti
mov
cld
pop
ret
int
push
and
subb
mov
fisttpl
test
in
inc
mov
aam
dec
cmp
inc
jns
vpshab
xorb
xor
mov
xlat
jmp
cwtl
in
out
mov
test
xchg
mov
and
cmpl
jne
sub
sub
inc
push
jmp
adc
mov
jns
and
add
jl
inc
add
das
mov
inc
cli
and
jle
push
xchg
adc
and
inc
test
add
or
jp
pop
jne
mov
fdivrl
xor
ret
mov
xor
push
lcall
jo
pop
cli
sbb
ljmp
add
push
out
movsb
push
push
mov
lods
dec
movsb
test
call
je
movsb
inc
out
sarb
cmp
scas
loop
cmp
dec
cli
lret
es
xchg
pop
mov
dec
mov
pop
push
call
fbld
dec
push
pushw
push
mov
jge
adc
sub
inc
idivl
cmc
les
push
sub
test
test
sub
or
sbb
in
dec
cmc
fs
fldcw
cmpsb
inc
cmc
lcall
je
test
inc
push
icebp
and
jl
xor
mov
lret
push
inc
xchg
jmp
dec
mov
test
orb
pop
mov
das
mov
movsb
orb
and
xchg
inc
cwtl
xor
mov
lods
enter
and
and
popf
je
dec
xchg
add
nop
dec
cltd
andb
movsb
fnsave
movsb
mov
bound
xor
or
aam
pop
pushf
pop
jg
xchg
leave
add
sbb
push
jns
sub
sub
je
outsl
mov
lods
bnd
and
mov
push
inc
test
dec
aam
pop
adc
add
push
jae
sahf
push
sub
das
xchg
je
js
jl
dec
push
subb
and
loop
and
jle
xchg
adc
mov
xlat
mov
cmp
stos
das
cmc
pop
mov
inc
mov
jno
js
push
loop
repnz
cli
sbb
or
adc
lds
loop
pop
or
sbb
jo
push
push
push
push
fwait
cwtl
shr
mov
enter
pop
mov
push
sub
jnp
enter
mov
or
jns
adc
push
shr
and
ret
pop
sbbb
inc
xor
es
mov
cs
mov
jge
push
inc
push
jne
inc
mov
shrb
push
aad
mov
shrb
cmp
push
jl
cltd
xchg
mov
cmp
xchg
out
or
or
and
mov
lds
sbb
ficomps
or
aas
xchg
dec
in
mov
mov
xchg
fs
out
xor
mov
sub
push
lret
inc
mov
test
push
or
js
test
jnp
and
nop
cmpsb
adc
and
jo
fisubrl
xor
xor
adc
lea
jns
mov
mov
popf
hlt
add
dec
sub
bound
push
and
xchg
or
mov
adc
mov
cwtl
out
mov
imul
js
arpl
outsl
dec
add
bound
popa
or
movsl
inc
or
inc
inc
js
mov
push
lahf
dec
jg
nop
or
lods
stos
mov
cmpsl
pop
jb
mov
cmpsl
xchg
pop
lods
mov
push
xchg
and
shlb
adc
pop
inc
pop
and
pop
push
and
mov
nop
cmp
pop
mov
jmp
ss
cli
sar
rorb
jno
push
test
mov
and
das
push
mov
push
enter
xchg
sub
dec
add
jecxz
xchg
mov
enter
gs
repnz
xchg
pop
xor
mov
mov
mov
in
mov
call
shrl
sbb
cmpl
lret
xlat
nop
lods
popf
insb
int
push
jmp
xor
cmp
or
jne
cmpsl
scas
mov
xor
cmpsl
nop
insb
idiv
push
cmpsb
in
adc
mov
and
in
and
ret
pop
shl
adc
in
inc
jb
nop
pop
mov
sti
enter
push
mov
bnd
jnp
pop
aam
dec
sbb
popf
jge
mov
add
mov
adc
fs
popf
jl
enter
cmp
or
dec
mov
xchg
enter
and
jae
push
movsl
xchg
jmp
test
jnp
sub
repnz
xchg
sbb
mov
xchg
xchg
sbb
cs
xor
mov
daa
mov
lcall
out
pop
mov
insl
imul
js
cmpsl
popf
mov
lret
cmp
dec
sbb
imul
lcall
xor
outsl
adc
imul
push
push
rcrb
scas
in
js
stos
adc
insl
icebp
or
or
add
xlat
pop
sbb
js
insb
xchg
insb
test
insb
test
insb
aaa
ret
adc
xlat
in
and
and
aas
fcomps
jmp
or
jnp
fsubl
push
test
cmc
inc
sub
and
add
and
call
fbld
dec
jns
push
nop
scas
and
inc
addr16
jge
dec
enter
clc
xchg
or
gs
in
sub
pop
fbld
pusha
jge
outsb
lds
or
and
or
mov
popa
js
and
push
mov
xchg
mov
jge
cld
xchg
fnstsw
loop
mov
aas
loop
mov
xchg
insl
pop
xchg
cmp
mov
and
loope
enter
push
xchg
rclb
sbb
aam
popa
and
or
jb
add
jle
inc
jne
test
out
dec
ficoms
stc
aas
call
fsubrl
add
lods
daa
leave
test
cmp
mov
lcall
test
sub
mov
or
hlt
aas
ja
out
shl
std
pop
push
and
and
ret
sbb
adc
pop
out
adc
pop
stos
adc
pop
mov
test
inc
iret
cli
adc
pop
icebp
or
bsr
jmp
xor
incl
shlb
xchg
sub
jl
and
xchg
and
jl
and
sbb
and
push
push
and
push
cmc
or
xchg
aas
ret
inc
jg
adc
push
out
adc
push
mov
lods
pop
inc
ljmp
bts
xlat
cli
enter
push
push
das
andb
sbb
cmc
fdivs
pop
and
mov
loopne
jo
fiaddl
inc
dec
enter
out
jp
inc
nop
stc
dec
and
scas
pushf
std
pop
and
jmp
jns
pushf
fst
rep
jns
test
cmp
call
xchg
add
mov
jecxz
lret
push
daa
popaw
inc
les
and
pop
arpl
jb
or
call
xchg
or
pop
fsubrs
stos
out
inc
sbb
add
cmp
pop
out
fs
xchg
mov
inc
cmpsb
xchg
inc
dec
xchg
or
lds
mov
jnp
in
inc
ficompl
imul
cltd
dec
int
out
xor
lock
rclb
out
jne
fisttpll
mov
adc
lret
add
ret
shll
jmp
cmpsb
dec
movsl
ds
loope
adc
and
or
xchg
xorl
mov
ror
bound
add
dec
lahf
fs
push
movswl
stos
inc
inc
sub
add
xchg
dec
popf
push
pop
push
bound
cmp
mov
fs
ss
int3
push
in
and
fwait
dec
stc
cmp
jmp
shrd
push
insb
sub
dec
in
inc
mov
je
scas
test
mov
push
add
in
pop
sub
inc
mov
enter
cld
in
xchg
int3
out
or
ss
in
fimuls
aad
fwait
lods
pop
nop
shll
bound
orb
cmp
repz
inc
sbb
ljmp
and
in
testb
mov
jmp
pop
mov
sub
aam
dec
movsl
or
jb
int3
aam
outsb
or
test
lret
add
mov
pop
xchg
jno
sbb
pop
movsb
push
imul
mov
mov
rcrb
loopne
sbb
jge
movups
jle
adc
push
das
stos
cmp
dec
movsb
push
mov
lea
cmp
mov
and
pushf
or
scas
sahf
scas
dec
xor
mov
and
mov
test
adc
jne
andl
mov
adc
and
cmc
pop
lock
test
inc
cmp
inc
stos
adc
inc
mov
test
pop
in
sarb
ds
ljmp
push
mov
mov
jmp
jnp
sub
jp
enter
xor
enter
push
inc
pop
inc
adc
bound
pop
push
mov
repnz
aam
lock
mov
or
sbb
or
ficoms
lds
jmp
push
test
inc
cmp
cwtl
and
loope
xchg
movsl
ljmp
dec
pop
jmp
dec
notl
lret
adc
push
push
jle
pop
mov
jo
push
dec
pop
fistps
push
mov
dec
in
xor
stos
pop
xor
jmp
je
stos
adc
mov
inc
movsb
and
inc
and
mov
negb
mov
fnstsw
shlb
and
loop
sbb
or
push
mov
ss
mov
xor
hlt
jl
fucom
pop
xor
and
and
push
lahf
add
xor
adc
scas
mov
xor
add
xchg
leave
mov
push
or
xor
sar
insb
fs
and
aas
mov
lret
sarb
jmp
push
gs
inc
ljmp
loopne
ret
jge
push
mulb
pop
das
loop
and
adc
icebp
and
jae
mov
call
inc
sub
pusha
es
xchg
inc
lret
call
jne
test
imul
cmpsl
add
test
mov
add
jae
lea
popf
pop
xchg
repz
push
pop
popa
push
rolb
xorl
das
insb
sbb
aam
rolb
fldt
imul
push
aas
sbb
add
push
data16
stos
cltd
outsb
lds
nop
add
sbbb
nop
dec
pop
adc
fcoml
leave
clc
add
xchg
push
jo
orb
andl
or
dec
enter
mov
and
xchg
insb
jmp
test
cli
inc
xchg
and
popa
mov
mov
add
or
cmp
and
jmp
test
rcll
lret
add
stos
adc
test
mov
xor
andb
nop
adc
lds
into
jmp
stos
inc
push
dec
loope
ljmp
mov
bound
mov
xchg
into
jp
dec
mov
adc
out
jns
dec
sti
or
sti
sub
enter
push
pop
fdivrs
and
sahf
adc
inc
and
cmp
jne
xchg
enter
add
mov
jne
inc
push
adc
sbb
nop
pop
jmp
xchg
dec
jnp
adc
and
stos
jo
out
mov
adc
mov
bound
or
je
mov
aam
push
cmp
sub
cli
ja
loop
aam
outsb
add
loopne
cmpsb
loopne
mov
dec
lock
mov
inc
pop
pop
mov
popl
fiadds
inc
loop
pop
dec
jle
shlb
lea
jae
dec
inc
xchg
adc
test
mov
and
and
ficompl
loopne
push
js
inc
pcmpeqb
jno
sbb
inc
inc
mov
out
adc
inc
xchg
cwtl
mov
mov
jmp
fadds
jl
xchg
out
adc
test
inc
mov
jbe
mov
mov
inc
mov
sub
je
adc
frstor
cwtl
test
inc
cwtl
cli
ss
dec
and
les
mov
push
hlt
dec
jno
repnz
dec
les
sub
cmpsl
sub
out
std
pop
pop
dec
cmpsl
push
pop
stos
cmpsb
cmp
mov
pop
dec
sub
mov
lods
push
adc
add
xchg
or
icebp
cs
test
stc
fdivrl
lret
push
pop
add
and
fs
mov
adc
jno
pop
jb
enter
jno
enter
outsb
push
mov
adc
or
or
push
in
aas
xchg
les
and
add
sahf
das
push
fdivrp
jle
xchg
out
mov
daa
jns
mov
jp
mov
fnstsw
inc
and
and
fcoml
lds
mov
xlat
sbb
push
addr16
insb
xchg
mov
cli
xor
fstpl
dec
out
push
outsl
cmc
cmp
fcompl
mull
or
mov
sti
pushf
cltd
insb
xchg
pop
imul
pop
inc
nop
mov
pop
xchg
xor
inc
push
aas
test
popf
cmp
je
jo
xchg
pop
push
push
aaa
sub
push
fisubs
les
scas
test
add
xor
sbb
xor
mov
ljmp
jl
pop
popf
jg
out
popf
inc
and
cmp
mov
jne
jg
test
or
fisubrs
lods
lret
mov
adc
adc
out
inc
lret
mov
mov
sbb
cmp
pop
push
fiadds
fbld
dec
shrl
pop
sbb
inc
je
mov
je
pop
push
cmpl
shll
mov
push
or
adc
imul
pushf
mov
inc
pushf
xchg
sub
xor
jb
xor
insb
cmp
push
jnp
jns
pop
cmp
pop
in
test
hlt
push
iret
mov
or
jbe
inc
les
rcl
mov
cmpsl
inc
cmp
shll
nop
daa
cmp
adc
mov
dec
push
lahf
rcrl
test
adc
arpl
call
jmp
xor
in
xchg
add
jl
mov
xchg
adc
loop
mov
adc
mov
adc
or
ret
dec
jmp
rcrb
inc
mov
adc
dec
mov
xor
in
iret
mov
push
fs
jmp
adc
jae
icebp
cmp
mov
cmp
loop
adc
mov
adc
jl
shrb
imul
jns
mov
adc
cmp
test
add
inc
lret
test
xor
cmp
sbb
cmp
out
xchg
pop
sbb
das
in
das
and
fs
lea
fs
sub
stos
fs
les
dec
fisubrs
and
test
and
imul
ljmp
jp
sub
rcrl
fildll
pop
push
adc
and
out
jl
test
cs
jg
cmp
mov
nop
or
adc
test
mov
inc
sub
lea
xchg
dec
mov
pop
nop
and
sarl
inc
sbb
inc
or
dec
stc
push
pop
and
fs
cmp
test
lds
xchg
inc
repnz
inc
dec
enter
sbb
dec
push
sbb
xchg
pop
es
and
jl
nop
adc
ds
test
sbb
call
inc
mov
popf
sbb
ss
push
cmp
xor
sbb
xchg
or
flds
sbb
lods
out
adc
fadds
subb
std
mov
add
add
cld
cmpsb
jl
and
add
add
add
xor
add
add
add
incb
add
test
add
cld
pop
add
push
add
push
add
dec
add
add
add
cmpsb
jl
and
add
add
or
add
add
add
add
add
add
add
subb
add
add
subb
add
add
subb
add
add
xchg
add
scas
add
subb
add
add
addb
add
cld
cmpsb
jl
and
add
add
add
add
add
scas
add
add
add
and
add
mov
add
cld
cmpsb
jl
and
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
cmpsb
jl
and
add
add
add
add
add
incb
add
je
add
inc
add
add
add
add
add
add
cmpsb
jl
and
add
add
add
add
add
add
add
add
mov
add
cld
cmpsb
jl
and
add
add
add
add
add
dec
add
add
add
add
cld
cmpsb
jl
and
add
add
add
add
add
jbe
add
sbb
add
push
add
mov
add
cld
cmpsb
jl
and
add
add
add
add
add
sahf
add
add
test
add
add
mov
add
cld
cmpsb
jl
and
add
add
add
add
add
movb
add
add
mov
add
add
cmpsb
jl
and
add
add
add
add
add
out
add
add
nop
add
in
add
add
add
add
add
add
cmpsb
jl
and
add
add
add
xor
add
add
addb
add
cld
cmpsb
jl
and
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
in
inc
add
mov
add
mov
add
mov
aaa
add
cld
hlt
add
lret
out
fldl
out
dec
add
cli
repnz
xchg
add
std
cmc
add
clc
add
movb
in
inc
add
std
testb
mov
testb
xchg
inc
add
fwait
dec
add
mov
add
xchg
add
xchg
add
hlt
loop
divl
cld
add
xchg
inc
add
popl
fiadds
loop
fdivrl
add
xchg
dec
add
clc
repz
mov
add
ret
jmp
inc
add
fwait
pop
add
incl
cmpl
mov
fstpt
add
popf
dec
add
fidivl
add
cld
repnz
xchg
add
icebp
jmp
add
mov
lea
icebp
mov
add
lret
xchg
add
shlb
add
ljmp
push
in
out
push
add
xlat
mov
add
jle
add
push
sbb
clc
mov
addl
lds
add
imul
add
mov
add
pop
sbb
stc
mov
add
mov
add
shlb
add
fstpt
add
cmpsb
push
add
mov
adc
cld
into
mov
add
scas
arpl
iret
jo
add
xchg
add
sbb
test
jo
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
decl
ljmp
call
pusha
popa
popa
bound
add
pop
pop
pop
pop
pop
add
add
add
add
add
push
push
push
pop
pop
pop
add
or
add
add
add
push
push
push
push
push
add
or
add
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
add
add
ss
cmp
cmp
cmp
ds
inc
inc
inc
add
add
xor
xor
sub
add
daa
add
add
sub
sub
sub
or
pop
and
and
add
add
add
and
add
add
pop
sbb
sbb
add
sbb
add
add
add
add
adc
add
add
add
or
push
movups
add
or
add
add
add
add
pop
or
or
add
or
add
add
add
add
add
add
incl
add
pop
add
cld
sbb
add
lock
add
sldt
add
add
add
add
add
add
pop
add
add
add
lock
add
sbb
add
sbb
add
incl
add
add
add
cmpsb
jl
and
add
add
add
add
add
rolb
addb
add
cld
cmpsb
jl
and
add
add
add
add
add
fadds
add
call
add
add
add
add
add
add
add
adc
add
add
add
add
xor
add
add
cmpsb
jl
and
add
add
add
add
add
adc
add
cld
cmpsb
jl
and
add
add
add
add
add
sub
add
cmp
add
rolb
add
mov
add
add
add
rolb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
in
or
add
add
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
add
add
add
inc
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
xor
xor
xor
pop
add
add
js
add
add
dec
inc
mov
add
inc
insw
je
adc
push
sbb
add
add
jo
sbb
popa
je
negl
sbb
and
lea
jnp
jne
data16
jge
sbb
mov
xorl
jle
jecxz
lea
add
js
pop
jbe
ljmp
mov
nop
test
inc
mov
je
dec
push
pusha
pop
pop
int3
jb
sbb
pushf
sub
lahf
cmp
cwtl
nop
orl
pop
add
push
push
pop
pop
imul
jns
test
test
xchg
xchg
orb
ret
mov
test
jb
pop
adc
dec
dec
sbb
push
xchg
nop
lahf
xchg
cltd
mov
addl
insb
jp
add
out
cmp
mov
jle
gs
add
outsb
push
push
arpl
jno
jge
dec
inc
jnp
pushf
pop
ja
imul
adcl
fcmovu
repz
rcrl
push
mov
jg
orb
inc
inc
and
push
push
cmp
sbb
dec
push
inc
sub
add
jns
push
mov
dec
inc
incb
jae
inc
xorl
mov
jl
cmpsl
pushf
imul
loopne
xchg
aas
scas
cltd
cmp
jle
mov
cwtl
sbb
xchg
mov
mov
pushf
push
mov
add
js
jbe
push
push
insl
popa
stos
push
jne
pop
add
sbbl
jp
je
addb
mov
scas
movsl
pushf
cwtl
les
orb
mov
test
test
stc
jge
lahf
outsb
loope
jae
jg
nop
jo
js
lea
mov
adc
ret
inc
mov
jge
leave
je
cmp
addr16
push
outsl
jo
pop
push
pop
sbb
pop
pop
mov
popa
sahf
jg
pop
push
xchg
bound
outsb
insb
mov
lds
aaa
je
jbe
js
mov
mov
xchg
loop
sbb
xchg
fwait
mov
xchg
jl
cltd
popf
xchg
incl
mov
mov
jle
pop
lods
mov
jp
dec
jo
xchg
arpl
cmpb
jbe
shrb
mov
clc
ljmp
xchg
mov
jle
xchg
lea
xchg
xchg
mov
out
loop
xor
mov
cmp
dec
mov
sbb
data16
mov
ja
jl
outsb
push
jp
icebp
js
mov
imul
xor
jne
outsb
pop
jp
arpl
addb
ja
xorb
shlb
push
jb
repz
aas
data16
cwtl
iret
jns
jp
sub
xchg
js
iret
sub
test
jl
dec
insl
ficoms
mov
dec
hlt
push
jg
xchg
fistpl
or
adc
int3
push
jg
mov
out
jp
add
rorl
xor
sbb
mov
jns
mov
fiadds
jb
addl
and
scas
dec
and
in
mov
orb
dec
lea
aaa
jle
inc
mov
add
xchg
lcall
mov
lods
lods
push
idivl
stc
test
sbb
jle
adc
inc
stc
mov
dec
les
push
ds
nop
daa
pop
xchg
jns
jnp
lea
xchg
xor
or
mov
mov
adc
add
sbb
cmp
fs
out
ja
cmpl
inc
lock
sbb
iret
cmp
mov
jle
repnz
mov
out
lock
jbe
pop
aas
imull
loop
sbb
sub
mov
cltd
jge
cmp
add
jge
mov
rclb
test
mov
inc
lret
gs
in
mov
test
adcl
jge
lahf
out
bound
mov
mov
sbb
jne
pop
xchg
jno
dec
add
js
loopne
push
cmc
decb
insl
sub
fistpl
ds
adc
cmp
xor
mov
and
rorb
push
mov
into
mov
test
shll
fsubrl
test
in
sub
out
in
fdivr
mov
les
jp
call
loope
dec
sbb
sub
mov
js
mov
push
xchg
sub
insb
ss
fidivl
or
adc
shrl
aaa
sub
andl
test
push
mov
scas
mov
movl
rcr
stos
test
sub
xlat
test
je
frstor
jbe
lea
repz
jb
daa
push
jae
outsb
sub
push
lcall
test
xor
mov
loopne
adc
mov
jg
int
jg
mov
loopne
mov
xchg
lea
push
inc
insl
xor
test
mov
push
popf
int
inc
imul
xor
dec
jns
aam
lods
sti
out
push
subb
popf
fbld
adc
jmp
js
inc
outsl
ja
jae
sbb
jb
out
inc
add
je
push
stc
dec
sbb
das
sub
push
cmpsl
fstpl
and
into
sti
outsb
push
ds
xor
test
cld
sbb
xchg
mov
sbb
mov
mov
cwtl
ss
mov
xchg
mov
or
or
shll
mov
add
xlat
insl
call
xchg
sbb
mov
cwtl
mull
sti
sbb
push
xchg
cmc
push
jmp
or
call
lods
pop
pop
xchg
fidivrs
ja
shr
xchg
cld
jge
cs
fmuls
inc
sbb
stos
push
cmp
xchg
xchg
ja
cmp
add
scas
xchg
mov
in
dec
fistpll
sub
test
aaa
aam
fisubs
add
add
stos
out
fistpl
xor
inc
mov
push
mov
rolb
dec
addr16
bound
ret
es
mov
xchg
imul
rorl
pop
aas
std
inc
mov
stc
ljmp
data16
stos
sub
aaa
or
sti
xor
int
push
stc
mov
push
int
js
sub
push
adc
or
test
inc
fucomi
clc
ja
rcrb
insl
adc
mov
sbb
sub
add
movsb
push
inc
aaa
push
mov
lds
sbb
jb
lahf
inc
mov
inc
mov
dec
pop
sbb
cs
ss
mov
shl
jg
mov
aaa
push
inc
dec
add
popf
add
test
jne
fcom
jp
push
inc
inc
pop
xchg
dec
sbb
lahf
jp
mov
je
shlb
and
mov
or
mov
movsb
jne
fisubrl
inc
iret
jb
out
xchg
arpl
pushf
push
es
adc
arpl
cwtl
mov
mov
xchg
cmp
xchg
xchg
dec
scas
xchg
jno
outsl
bound
pop
or
cli
inc
ds
ret
mov
pushf
add
in
cwtl
push
lahf
mov
fwait
jbe
icebp
inc
loope
add
pop
pop
dec
dec
dec
push
sbb
addr16
and
lea
pop
rcll
lods
push
jb
repnz
xchg
lea
pop
push
dec
cmp
dec
pop
pop
arpl
xchg
push
cwtl
test
xchg
mov
repz
jo
lcall
lahf
cltd
xchg
sbb
jns
inc
fs
dec
ds
pop
sub
sar
inc
test
pop
xchg
int3
xchg
je
in
jl
repnz
mov
and
add
je
gs
push
pop
push
pop
and
jbe
inc
mov
inc
xchg
mov
jb
mov
jbe
test
xchg
sbb
and
outsl
xor
dec
sbb
mov
orb
jae
ljmp
sub
jg
pushf
ja
movsb
aad
mov
cwtl
and
mov
mov
mov
sub
stos
pop
mov
sub
orb
imul
or
jae
icebp
andb
add
jge
dec
cmpsl
outsl
sub
push
xlat
and
jl
mov
lcall
xor
mov
or
mov
xorb
pop
aam
pop
adc
adc
mov
sahf
sub
add
mov
push
or
add
add
das
inc
lcall
das
hlt
xchg
fildll
and
aaa
aaa
cli
adc
inc
scas
inc
jge
mov
adc
inc
and
xor
add
ss
xor
adc
or
lods
enter
push
jne
imull
je
sbb
push
mov
push
loopne
lahf
and
cmp
push
mov
sbb
add
push
mov
sbb
rcrb
rcl
cmpsb
inc
mov
scas
push
std
push
push
mov
pop
xchg
data16
mov
lock
sbb
fbstp
sub
into
cmc
pusha
lcall
xlat
mov
xchg
lcall
and
test
out
pop
aam
lret
sub
xor
sbbl
mov
lahf
xchg
and
cltd
scas
shl
dec
aad
xchg
or
inc
cmp
xor
fidivl
sahf
sub
pop
mov
sbb
or
inc
sub
lcall
adc
sti
xor
dec
sbb
cltd
fsubl
push
cltd
adc
mov
cld
dec
inc
aam
lret
jge
cs
or
addb
outsb
test
cwtl
add
cltd
jle
movsb
lcall
imul
in
dec
add
movsb
sahf
xchg
nop
mov
test
scas
lahf
xorl
insl
push
push
lcall
add
mov
jl
pusha
sbb
mov
cmpsl
xchg
jno
jge
add
dec
xor
add
je
test
xchg
sbbl
push
inc
push
insb
addl
mov
mov
pushf
lcall
jo
push
push
pop
dec
add
inc
inc
inc
cmp
mov
or
xchg
sarl
fisttpll
fucompp
in
shlb
jg
outsb
push
jp
add
push
arpl
cmp
testl
inc
bound
add
ds
nop
test
mov
rcr
fistpll
xchg
cltd
xchg
aam
addb
push
jge
jg
push
push
xchg
outsb
dec
pop
pop
xor
xor
push
pop
addr16
add
mov
add
pop
push
arpl
gs
fs
push
dec
push
cmp
pop
lahf
pop
dec
pop
outsl
sahf
imul
arpl
jl
mov
xchg
mov
mov
cmpsb
xor
sarl
ret
mov
out
in
mov
in
movsb
add
xchg
js
out
cmp
jge
mov
cmp
pop
push
insb
imul
fucomip
ret
cmp
aas
insb
icebp
out
scas
aam
icebp
test
jno
or
sub
mov
xchg
jp
out
div
pop
and
xchg
out
pop
cmp
jl
jnp
iret
jbe
loop
jp
stc
fisttpll
loop
mov
out
in
mov
pop
shrb
or
aad
xchg
mov
ljmp
jl
push
imul
sarl
mov
je
mov
xchg
jnp
add
mov
loopne
xchg
push
mov
sub
jmp
inc
xchg
pop
mov
jle
jmp
sub
jo
enter
cmpsl
push
inc
jbe
ja
lds
jns
adc
jl
out
sub
or
sahf
test
loope
ljmp
mov
mov
idivl
das
jl
and
ja
outsl
mov
inc
mov
scas
test
adc
subl
outsl
lods
and
mov
testb
aaa
push
xchg
xchg
or
lcall
ja
aas
out
js
rclb
insl
xor
xchg
jbe
test
call
popl
jl
ja
icebp
and
jbe
push
and
scas
mov
fidivrs
nop
aaa
push
xchg
clc
xchg
ret
inc
inc
push
add
divl
jae
jbe
mov
test
push
xor
dec
pushf
push
cmpb
jb
popa
jno
mov
mov
push
into
insb
fistps
outsb
int3
pop
test
mov
ss
cmp
das
xchg
insl
push
sub
jns
lock
fildl
mov
xchg
or
push
cmp
adc
aas
dec
adcb
mov
nop
test
mov
orl
pusha
fildll
xchg
je
xlat
sub
icebp
jl
ja
jne
push
testl
adc
pop
sbb
sbb
xchg
fwait
jmp
lcall
repnz
outsl
xchg
sbb
or
jmp
xchg
pushf
mov
test
rorb
icebp
sbb
imul
in
mov
orb
push
sahf
sub
push
leave
inc
nop
adc
jl
mov
mov
cmp
lods
sub
test
mov
mov
daa
fwait
adc
xchg
vmread
dec
sbb
jbe
rclb
call
je
and
jmp
test
lds
mov
dec
push
mov
xor
sub
test
test
loop
pop
dec
push
jns
add
push
cwtl
repnz
push
inc
adc
insl
inc
pop
push
dec
push
test
fwait
pop
ljmp
mov
cmpb
dec
xorl
fidivrl
inc
ss
ret
sbb
fs
push
sbb
scas
mov
push
mov
mov
fldt
jns
insb
adcb
push
xor
push
xorl
push
mov
sbb
xor
imul
cmpsb
adcl
pop
ds
popa
sub
lods
and
mov
test
inc
xchg
pop
lods
jne
icebp
push
cli
pop
lea
push
cli
mov
daa
imulb
das
cmp
lahf
lea
outsb
push
push
pop
dec
pusha
push
mov
mov
or
mov
movsl
sub
mov
movsl
jecxz
jl
fcmovu
add
inc
push
fsubrs
jo
fildll
mov
push
sub
movsl
mov
bound
pushl
scas
test
dec
push
call
mov
mov
out
flds
sahf
fwait
sarb
movsl
divb
fcmovu
mov
pop
fidivs
lret
cmpsl
xchg
xchg
xchg
dec
scas
add
lahf
jl
in
cmpsl
push
je
mov
sarl
jl
inc
add
sub
gs
leave
lret
rep
das
mov
jmp
xor
jle
mov
push
sbb
adc
in
in
push
adc
lahf
sub
jle
adc
fwait
cmpsb
clc
adc
jle
pop
daa
sub
ss
rolb
movsl
lret
sbb
cs
push
mov
or
test
inc
jnp
mov
inc
je
push
fisttps
daa
int
aas
das
loop,pn
test
int
test
out
xor
or
lcall
cltd
dec
lods
dec
sub
mov
xchg
into
inc
add
aam
pop
pop
roll
data16
test
xchg
mov
orl
cmpsl
cltd
imul
and
add
or
dec
lret
outsl
xchg
add
outsl
add
push
cmova
pop
shr
mov
mov
adc
xor
test
xchg
pop
pop
sub
mov
mov
lahf
outsl
adc
notl
add
or
xor
mov
pop
call
add
shlb
inc
sbbb
xchg
lods
pop
xchg
sub
sub
mov
inc
and
add
add
or
repz
or
xchg
rorb
jne
repz
stos
push
je
xchg
imulb
add
mov
ljmp
add
repz
insl
xor
sbb
int3
dec
jle
stos
xor
push
scas
mov
fwait
sbb
insl
add
orb
sub
mov
insl
fsubl
dec
in
ror
pusha
movsb
sub
push
mov
inc
test
dec
inc
cmp
popa
cmp
adc
cmp
or
push
add
incb
push
push
mov
out
pop
pushf
mov
seto
add
mov
jnp
aas
clc
mov
cmp
add
xchg
iret
sbb
insb
stc
jne
pushl
pop
push
mov
xchg
cmpb
mov
in
cmp
clc
pusha
add
lcall
sar
leavew
notl
icebp
add
cmp
mov
add
rcrl
sbb
sub
cmp
leave
xor
fnstcw
loope
dec
cmp
lahf
fwait
pop
xchg
gs
aad
adc
ds
cs
jae
jmp
imul
mov
daa
mov
loop
xor
mov
push
stos
jmp
imul
or
xchg
faddp
add
ds
xorb
insl
sbb
lcall
fsubs
stc
jo
jo
jo
jo
mov
addb
sti
pop
js
mov
inc
sidtl
xchg
es
pop
pop
cwtl
cltd
lcall
shlb
mov
cmpsl
mov
lods
scas
scas
mov
mov
and
sub
mov
xor
push
ret
lds
mov
and
push
int3
int
iret
and
and
jo
jae
jae
loopne
jnp
add
cmp
jmp
push
sbb
icebp
jns
cmc
rorb
push
daa
sbb
add
or
sbb
mov
rcrl
ss
pop
enter
mov
insb
call
sbbl
push
sub
jo
and
sbb
in
enter
orl
leave
push
adc
push
js
add
and
xchg
sub
fcomps
mov
push
les
mov
mov
or
push
iret
lahf
inc
dec
pushf
add
inc
mov
aad
movb
pusha
sub
add
inc
hlt
jo
pop
test
xchg
adc
pop
stos
push
enter
or
addb
inc
add
outsl
fiadds
es
jnp
sbb
xchg
mov
sub
cwtl
mov
nop
cmp
ja
test
xchg
and
inc
sarl
xor
fs
jmp
push
loopne
add
fisubs
addb
mov
pop
notl
pop
xor
cmpsl
dec
mov
inc
push
add
out
popf
xor
mov
sbb
mov
fistpll
add
insl
adc
mov
dec
add
sbb
enter
mov
lret
pop
aaa
jo
mov
rclb
and
inc
jns
add
and
sbb
aam
aam
xchg
in
cmp
pop
aam
xchg
iret
fstps
xor
pop
and
adc
pop
xor
cld
dec
xor
xchg
push
ljmp
push
movsb
push
in
push
or
push
in
fistl
cmp
jo
dec
sub
fadds
mov
je
call
in
mov
xor
mov
cmp
mov
mov
cli
imul
xchg
mov
sbb
iret
lahf
and
cld
adc
enter
out
mov
cwtl
dec
xchg
mov
cmp
cltd
lock
cmpsb
xor
movsl
cmpsl
lahf
sbb
mov
mov
mov
and
xchg
mov
stos
add
popf
scas
pop
vunpcklps
lahf
and
psrlq
mov
and
add
mov
cmpsb
mov
loope
add
icebp
bnd
call
int
in
loopne
loopne
hlt
movsl
add
add
sub
cli
inc
sub
cmpb
std
jns
nop
cmpb
push
add
icebp
bound
add
add
data16
int3
mov
mov
and
out
fldl2e
arpl
push
lcall
add
dec
pop
add
mov
add
sub
je
inc
push
dec
popf
add
aad
add
push
mov
pop
jge
xchg
rolb
add
sub
mov
pop
fneni(8087
shlb
dec
mov
fnstsw
fmulp
inc
out
pop
adc
inc
xchg
jae
or
push
sub
lods
ja
cltd
aas
and
out
add
and
xchg
mov
adc
loop
dec
dec
mov
sub
push
mov
add
mov
push
and
push
mov
mov
out
cmp
sub
test
push
adc
xchg
and
inc
sub
xor
adc
inc
aam
inc
or
inc
andl
cmp
ss
sub
add
xchg
adc
add
sarl
pusha
and
and
cwtl
iret
out
enter
add
push
fsubr
add
popa
movaps
stc
js
and
pop
and
shrb
push
push
jg
add
or
sbb
div
pop
add
or
out
stos
jmp
mov
add
mov
mov
mov
mov
es
enter
cltd
ret
lret
xchg
push
iret
stc
in
sbb
adc
push
fcom
rcrb
sbb
in
jl
add
or
or
repz
or
adc
rorb
add
pop
jne
call
sarb
xchg
mov
stos
lock
lock
push
push
push
out
lock
mov
ljmp
leave
xor
divb
or
cmpsb
out
stc
lods
sbb
cmpsb
fsubs
out
push
out
dec
faddp
lret
sub
mov
in
pushf
lock
in
pop
shrl
in
xor
iret
cmpsl
and
ljmp
subl
add
outsl
mov
lods
mov
push
call
arpl
or
push
mov
orl
call
jle
fwait
mov
cmpsb
and
test
cmp
scas
cmc
lock
scas
adc
mov
movsl
mov
push
mov
test
mov
jecxz
push
pop
cmp
roll
stos
popf
lret
inc
xchg
sbb
in
insl
sbb
loopne
loop
fiadds
mov
in
out
adc
or
div
clc
stc
lahf
mov
hlt
mov
ds
jnp
xor
repnz
sbb
ds
fs
adcl
testl
aad
adc
xor
adc
xchg
lret
and
ret
add
addr16
sub
or
xor
dec
and
out
rcrl
loopne
cmp
shrl
les
sbb
clc
mov
ret
ret
dec
sbb
jae
add
cld
mov
adc
cmp
dec
sub
test
fistpll
fbstp
mov
popf
and
or
call
pop
jnp
add
aam
sub
and
stos
daa
or
cmp
mov
lret
inc
sbb
mov
or
jmp
lret
xlat
arpl
lea
dec
iret
repz
cli
ja
cld
push
rolb
cmc
popa
xlat
clc
lods
and
pop
push
mov
add
hlt
leave
call
push
cmp
jmp
cmc
xlat
xor
push
and
inc
sbb
mov
fiadds
icebp
stc
mov
pop
stos
add
bound
mov
pop
btc
int3
and
lods
and
jg
add
xor
pop
and
insl
cmp
jbe
or
pop
sub
cmp
gs
add
shrl
or
pop
and
mov
adc
push
and
cmp
pop
sub
aam
sbb
ret
in
cmp
cmc
add
out
clc
std
lahf
sbb
int
and
fidivrl
test
or
leave
sub
loopne
xor
dec
shl
push
cld
sub
add
sbb
cmp
movzbl
stos
add
or
xor
sbb
adc
inc
adc
pop
daa
mov
push
and
outsl
cmp
mov
in
push
shl
push
add
imul
or
xor
sbb
sub
rorb
pop
fldl
fmuls
lret
add
and
sub
adc
pop
daa
aad
sub
aaa
std
into
inc
in
aas
sbb
cmp
bswap
outsl
cs
and
and
and
pop
fimull
rorl
gs
sub
ds
cmp
sbb
insl
lsl
rol
lret
add
mov
inc
adc
and
mov
iret
data16
mov
dec
push
sbb
push
and
movsl
inc
cmp
add
cmp
mov
push
enter
nop
adc
lret
into
xor
adc
ror
daa
mov
push
enter
and
jle
repnz
adcb
movsb
add
lods
in
xor
ds
rclb
add
popf
stc
decl
ss
in
lcall
adc
out
ret
out
add
and
fldcw
add
cmp
lock
cmp
addb
int
cmp
fisttps
push
xor
cmp
jb
ror
xor
mov
inc
loopne
pop
movsl
rcll
or
and
add
outsl
inc
fsubrl
add
xchg
xrelease
sbb
loop
inc
pop
cmp
out
push
test
hlt
add
mov
or
sub
or
mov
in
cltd
cmp
orb
clc
inc
jno
mov
sbb
enter
jle
js
mov
movsb
sbb
xchg
daa
sarb
outsl
xorb
pop
xor
pushf
dec
rol
add
sbb
fldenv
pop
mov
adc
add
lret
andl
in
add
and
ret
jecxz
add
push
mov
mov
imul
cmp
les
sti
dec
add
xor
jns
test
lcall
mov
lahf
mov
stos
and
adc
int3
lret
roll
out
orl
add
mov
push
add
lods
dec
adc
jl
inc
add
mov
add
repnz
rolb
jmp
adc
fiadds
pop
mov
mov
add
xchg
mov
jge
add
lcall
add
cli
enter
push
adc
cmp
jmp
aaa
add
stos
add
ret
or
add
mov
shll
jb
lods
push
jne
add
sbb
leave
xor
call
jl
push
fisttps
outsb
daa
clc
and
add
fldcw
fadd
ret
jl
shl
add
add
adc
dec
sbb
aas
inc
lret
adcb
push
ja
jno
cmp
gs
test
xchg
jo
sbb
repnz
push
xorb
ljmp
adc
pop
push
outsb
pop
push
add
fmuls
adc
fdivl
add
and
sar
dec
sbb
mov
inc
sahf
xor
or
cs
cmp
dec
xchg
dec
test
mov
in
push
cwtl
push
add
or
dec
adc
or
mov
jo
pop
mov
and
fcoml
sub
xor
rcrb
pop
incl
dec
or
xor
push
push
add
inc
pop
popa
sub
add
lods
push
sub
sub
sbbl
orb
pop
les
mov
jbe
js
add
pop
fldt
mov
nop
add
les
shrl
adc
into
pop
das
sbb
and
cmpl
dec
push
xchg
clc
bound
add
insl
test
aaa
in
push
lock
andb
ret
add
leave
push
mov
pop
and
cltd
and
add
into
enter
vunpckhps
xor
xchg
mov
fprem
xchg
xlat
addb
sbb
roll
scas
loopne
ret
pop
add
or
xor
cwtl
sbb
xor
add
dec
xor
pop
test
ret
aad
stc
xchg
ret
call
dec
addb
clc
mov
add
fadds
or
and
push
adc
je
popf
lret
outsl
mov
fsubs
xor
inc
push
adc
in
add
loopne
jecxz
fadds
cs
shl
arpl
pusha
dec
es
fisttpll
xchg
cmp
add
cli
jmp
mov
rolb
mov
pop
rorb
add
add
fdivrp
aam
in
into
rclb
js
add
jmp
dec
addl
push
outsl
std
cmc
xlat
dec
add
aas
fdivl
shl
loopne
cmp
jle
push
je
ret
cmp
rolb
add
cli
in
mov
mov
roll
xlat
outsl
incl
pop
mov
pop
dec
adc
lcall
cld
bound
push
add
add
xchg
sub
pop
stc
gs
ror
dec
into
repz
repnz
shr
cmc
mov
icebp
gs
pusha
fwait
push
or
in
lds
out
loopne
stc
jmp
call
or
cmp
push
add
dec
push
enter
clc
cmp
and
cmpsl
ds
in
popa
fwait
dec
xorb
aam
jl
cld
insb
ss
in
out
ljmp
mov
shr
inc
mov
and
push
stc
push
dec
int3
icebp
jae
sub
jecxz
mov
cmp
in
mov
andl
out
ss
mov
xchg
lret
jmp
lods
pop
mov
xchg
jae
jecxz
pop
fsubr
add
repnz
aad
inc
add
loope
loop
jne
add
test
aad
pop
aam
lock
push
mov
sti
mov
sub
add
repnz
sarb
pop
adc
lock
inc
dec
fistpl
cmp
insb
push
or
inc
dec
sbb
jge
leave
je
inc
jne
lret
push
testl
addr16
sub
sti
gs
and
cmpb
or
mov
or
repz
loope
std
mov
and
test
lcall
lea
lret
add
xor
shlb
clc
mov
std
pusha
dec
fdivrs
rolb
xchg
pop
enter
add
mov
incl
orb
clc
or
imul
and
fimuls
cmpb
mov
repz
push
shr
adc
negb
add
mov
pop
call
mov
in
subb
das
stos
flds
jl
cli
inc
fadd
dec
int
dec
rcrb
hlt
and
cmp
fcoms
jb
mov
cmpb
aam
cmp
into
add
inc
cmc
push
cmp
dec
push
nop
out
xor
sub
pushf
cmp
or
repz
pushf
mov
or
dec
add
dec
xor
mov
roll
stos
loope
daa
inc
mov
mov
jl
cmp
pop
fmul
lret
arpl
push
xor
add
leave
xchg
sub
stos
push
or
imul
add
arpl
pop
mov
add
add
add
mov
repz
mov
add
sub
sbb
mov
nop
inc
and
enter
jp
addr16
sbb
lods
stos
mov
or
or
or
xor
push
push
out
add
sub
pop
xchg
mov
leave
inc
ret
inc
mov
or
dec
pop
mov
mov
cs
in
cmpl
loopne
sahf
or
push
stc
subl
inc
jecxz
push
xchg
call
pop
js
pusha
cmc
cld
or
inc
insb
pushf
decb
mov
add
mov
add
enter
push
xchg
daa
cmpsl
jno
dec
test
loope
sbbb
push
or
cmp
scas
loope
mov
call
mov
lds
rcrb
sahf
test
adc
and
add
fcmovbe
adcb
jo
push
roll
pusha
and
or
inc
nop
cwtl
inc
loopne
je
add
js
and
and
test
data16
add
add
lret
adc
xchg
rolb
mov
ret
push
mov
or
es
les
or
mov
sub
ret
aas
add
add
mov
jo
jp
add
movsb
pop
push
je
lds
sub
into
push
inc
add
jmp
xchg
nop
mov
ret
cwtl
push
rcrb
pop
fwait
add
rolb
inc
lcall
add
add
sahf
sbb
mov
lahf
andb
add
adc
mov
xchg
jp
or
sub
and
mov
repz
xchg
cmp
mov
cmpsl
imul
push
cli
loopne
or
addb
pop
mov
mov
pusha
add
and
xchg
ret
add
in
mov
es
aam
int3
add
mov
push
test
fsubs
stos
in
xchg
jmp
mov
sbb
jae
add
call
mov
mov
stc
inc
fs
sbb
mov
fsubrs
popf
aas
pop
int3
test
adcl
mov
repz
ja
sbb
or
xlat
pop
test
enter
loope
sub
inc
js
pop
push
lds
push
cmc
das
xchg
pop
add
jle
in
pop
add
mov
insl
inc
lock
or
jmp
cltd
dec
sbb
push
shrb
add
jne
out
sub
shrb
mov
bsf
aad
sub
addb
cmp
mov
xorb
and
push
mov
dec
pop
loopne
hlt
add
shrl
mov
clc
sub
and
cmp
pop
dec
and
jno
pusha
sub
mov
inc
add
enter
mov
add
adc
cmp
pop
pop
push
test
lock
xor
aam
inc
push
mov
repz
pop
add
xor
call
cmp
sarl
in
outsb
mov
add
sub
pusha
sub
lds
cs
out
fcomps
shrl
stos
orb
nop
pop
inc
push
or
mov
sub
lock
scas
xor
xlat
or
ds
xor
sub
pop
sbb
fistl
add
xlat
inc
adc
cvtps2pi
faddl
or
jmp
sbb
lds
pop
loope
insb
sti
jae
pusha
ret
inc
sbb
das
inc
mov
adc
or
add
cmp
cwtl
cmp
mov
add
lcall
sub
pop
add
rcrl
int3
daa
xor
cld
ret
add
inc
lock
adc
or
mov
cmp
pop
loopne
jecxz
or
fstpt
sbb
lock
addr16
lret
mov
adc
lcall
hlt
mov
ss
adc
cmp
lahf
pop
add
movb
inc
mov
push
sbb
andl
pop
add
daa
push
push
das
add
inc
adc
or
lea
dec
push
lret
mov
inc
sbb
data16
push
das
repnz
clc
add
test
orb
xlat
and
mov
dec
fldcw
xchg
les
xor
mov
xor
cmp
lret
inc
and
push
sub
xor
int3
das
inc
sbb
dec
fnstenv
add
shr
sub
lret
das
push
xor
ret
xor
mov
insb
cmp
stc
xchg
int3
sub
xor
ljmp
and
inc
and
test
out
add
cwtl
stos
xchg
je
mov
push
addl
sub
imul
xor
enter
mov
push
out
data16
mov
adc
sbb
xlat
xchg
inc
adc
inc
cwtl
clc
add
sbb
push
mov
pop
cmpsl
xchg
ret
adc
or
xchg
pusha
push
mov
in
sub
jp
ror
push
lea
js
mov
jae
sub
rclb
dec
xor
jbe
call
pop
add
inc
sbb
sbb
data16
lret
pop
dec
sub
hlt
adc
repnz
or
inc
subb
push
sarb
mov
mov
sub
imul
sbb
add
cmp
or
pusha
and
repz
leave
shlb
mov
scas
adcl
les
aad
sbb
test
cld
add
mov
enter
add
xchg
or
lock
xchg
cmp
mov
mov
add
insb
jno
xor
inc
rolb
add
and
and
sbb
rolb
or
addb
dec
addl
add
xor
test
jo
sub
jns
pop
rorl
push
nop
mov
lods
ret
xorb
add
jno
xor
push
movb
and
add
pusha
xlat
movsb
jne
jp
aas
movl
enter
jo
add
es
inc
sub
push
and
cmp
and
arpl
fsubs
add
adcb
xchg
adc
jg
add
sbb
xadd
mov
and
xor
adc
in
addb
pop
pop
and
push
clc
shlb
or
or
dec
inc
push
addb
cmp
or
call
test
pop
sub
pop
repnz
add
push
pop
test
add
incb
mov
repz
and
cld
bound
inc
cmpl
inc
add
adc
push
inc
fs
sbb
popl
aaa
out
adc
sub
mov
mov
push
pop
pop
repz
xchg
movsb
mov
nop
test
and
loopne
add
pop
add
cld
outsl
or
jl
into
add
std
sbb
stos
loopne
add
sbb
in
icebp
pop
push
jmp
int
inc
add
adc
adc
idiv
call
in
daa
mov
lock
out
xchg
push
clc
jmp
and
jecxz
mov
sbb
mov
js
pop
add
push
stos
in
aas
xchg
xor
into
repnz
sti
ds
add
in
in
cltd
jae
cmp
add
hlt
cli
and
lock
pop
jecxz
neg
dec
ds
int
cs
push
sub
jl
push
xchg
mov
mov
stc
cld
mov
pop
es
dec
xchg
call
lahf
cmp
cmc
mov
nop
lret
dec
iret
repz
adc
mov
insb
in
cmp
in
inc
jmp
mov
movsl
lahf
cmp
loopne
cmp
ss
aaa
mov
int
fstps
popf
sahf
cmp
add
cmp
lods
int3
lods
cmp
cmp
sbb
and
cltd
and
leave
cmp
add
arpl
into
rol
mov
rcr
add
inc
iret
xor
jge
mov
push
inc
jmp
test
and
cmp
hlt
in
loopne
in
loop
jno
cmp
cli
add
adc
mov
add
add
mov
or
and
add
inc
push
or
and
fstps
inc
add
rsqrtps
xchg
and
mov
lock
mov
sub
adcb
daa
add
push
sub
sbb
repz
cld
or
jne
loope
dec
mov
lock
or
adcb
cmp
push
dec
pusha
daa
inc
out
push
jecxz
xor
add
sub
push
popa
add
dec
jecxz
in
rolb
inc
cmp
ja
adc
mov
fisubs
fwait
sbb
or
add
and
or
mov
add
cwtl
xor
mov
cmp
push
test
mov
push
add
popa
inc
mov
mov
cwtl
add
.byte
inc
mov
loopne
enter
shlb
fadds
mov
adc
and
dec
cld
mov
sub
or
push
inc
adc
mov
adc
and
dec
xor
inc
dec
mov
push
and
dec
bound
je
mov
dec
xchg
xchg
cwtl
and
mov
mov
mov
and
inc
aam
mov
adc
and
dec
repnz
clc
and
and
inc
or
mov
adc
and
xchg
and
cmp
inc
adc
dec
pop
xchg
pop
and
jo
jbe
jl
orb
mov
xchg
inc
lcall
mov
mov
inc
lret
adc
and
dec
call
inc
cli
shrl
push
and
dec
adc
and
mov
adc
and
dec
inc
xchg
dec
and
push
pop
mov
data16
dec
jb
js
jle
test
and
dec
mov
inc
mov
mov
adc
and
dec
rclb
in
mov
adc
and
inc
fisubrs
cmp
dec
imul
jbe
mov
inc
insb
add
dec
mov
and
das
adc
and
dec
dec
xchg
pop
and
test
sub
adc
and
dec
cmp
jg
mov
dec
and
inc
and
xor
lcall
inc
enter
push
and
adcb
jae
cmp
xchg
gs
inc
fcomp
mov
adc
je
pop
and
dec
pop
xchg
imul
mov
adc
and
dec
in
out
and
and
jne
sbb
mov
pop
and
dec
jo
movsl
and
in
out
and
inc
cmp
leave
xchg
loope
push
ja
and
xchg
inc
mov
mov
adc
js
push
and
dec
xor
pop
and
outsb
jns
adcb
int3
or
xchg
and
bound
xchg
adc
ljmp
jp
mov
adc
pop
dec
xchg
outsl
sbb
push
inc
jb
mov
jl
insl
dec
mov
inc
fiadds
inc
jge
mov
jne
jle
stos
xchg
in
push
shlb
inc
adc
imul
adc
xor
lcall
mov
add
dec
mov
and
cltd
add
bound
fwait
dec
cmpsb
xchg
mov
mov
notb
and
test
sahf
pop
pusha
inc
sub
pop
and
dec
js
xchg
and
out
cmc
and
xchg
dec
xchg
xchg
mov
mov
and
mov
bound
dec
jge
lea
mov
ret
or
sub
pop
dec
cmpsl
xchg
ret
and
inc
insl
lea
clc
inc
or
and
pop
orb
dec
mov
fistl
and
and
inc
pop
jno
adcb
and
dec
jmp
notl
sbb
mov
lea
adc
xchg
xor
aas
inc
dec
fisubl
cmp
adc
je
jg
mov
sbb
and
xor
and
dec
movsb
xchg
repz
xchg
and
inc
add
or
and
dec
lcall
stc
xchg
add
push
dec
adcb
dec
inc
xchg
mov
mov
dec
mov
mov
decl
adc
adc
adc
fisttpll
movsb
or
dec
cs
jae
cltd
inc
mov
mov
testb
ja
les
and
dec
rorl
and
jb
mov
mov
xchg
cld
adc
pushf
and
inc
inc
push
mov
push
test
xchg
mov
cmpsb
popf
and
inc
fucomp
mov
sahf
andl
dec
addr16
jp
addl
mov
lahf
add
inc
add
and
jp
mov
mov
iret
and
cld
mov
mov
dec
pop
xchg
imul
inc
cmpsb
mov
les
int
mov
mov
movsb
and
inc
dec
pop
mov
dec
lret
xchg
and
inc
repnz
adc
cmp
xchg
jge
movsl
inc
mov
mov
adc
and
cmpsl
add
dec
and
jo
inc
test
mov
dec
fimull
and
inc
xor
dec
adc
jne
xchg
mov
adc
and
inc
xor
and
popa
insl
mov
inc
test
loopne
in
and
pop
adc
jge
xchg
adc
and
scas
add
dec
test
pushf
or
and
inc
inc
dec
mov
in
sti
inc
or
and
push
mov
dec
ret
xchg
shlb
icebp
and
mov
and
mov
push
and
dec
jnp
mov
test
jmp
mov
sub
xchg
jmp
or
inc
mov
mov
push
xchg
out
out
and
mov
sbb
mov
adc
out
decb
and
inc
sub
mov
dec
and
dec
fwait
xchg
mov
cli
or
jne
pushf
adc
xchg
aad
add
and
inc
dec
jno
adcb
and
dec
mov
pop
and
jno
mov
dec
mov
inc
call
or
adc
and
add
push
sbb
push
adc
ja
decb
and
or
or
and
dec
loope
in
and
and
mov
jg
mov
inc
adc
jg
lcall
mov
mov
or
adc
outsl
inc
mov
mov
ret
subl
dec
mov
les
sub
cmp
pop
adc
test
mov
lds
dec
and
stos
mov
adc
and
inc
and
or
test
fwait
inc
mov
mov
adc
movl
fwait
xchg
cmpsl
and
enter
mov
dec
cmpsl
xchg
rcll
add
and
popf
fimull
adc
lret
add
and
dec
rclb
mov
inc
int
mov
ret
inc
add
loope
or
mov
pushf
inc
mov
or
mov
or
dec
popf
xchg
shll
fiaddl
mov
ja
andl
mov
push
rclb
and
push
inc
pop
mov
jg
stos
dec
fisttpl
and
out
adc
aam
and
dec
adcl
mov
aaa
sbbl
scas
mov
fldenv
mov
adc
jns
mov
jns
andl
lock
fistl
sub
xor
mov
stos
and
faddl
dec
adcl
clc
mov
adcl
or
or
xchg
inc
adc
and
jne
mov
and
dec
inc
xchg
pop
and
in
sub
fnstcw
adc
dec
repnz
adc
inc
xchg
lahf
mov
inc
push
in
test
push
out
mov
mov
and
inc
cmp
or
ja
mov
out
and
jmp
xor
xchg
aad
cmc
and
inc
rorl
in
push
mov
inc
es
or
bound
mov
shr
mov
adc
out
add
jp
enter
adc
and
inc
jb
mov
inc
inc
icebp
or
scas
sbb
jno
or
sbb
aad
adc
or
fcoms
fs
and
lahf
outsl
inc
mulb
divl
pusha
dec
lcall
sub
mov
inc
cmp
or
mov
outsb
inc
hlt
cmovo
das
mov
cld
add
dec
int3
lea
xchg
xchg
or
xchg
inc
in
inc
lcall
and
dec
scas
xchg
cld
and
data16
enter
cmpsb
and
inc
shr
mov
add
loop
dec
lock
dec
outsl
mov
adc
add
inc
and
inc
or
or
and
mov
pop
add
dec
cmp
dec
and
insl
mov
jbe
mov
or
adc
mov
dec
and
dec
int
call
and
das
cmp
sbb
dec
inc
popf
mov
and
insl
dec
js
mov
and
xor
pusha
dec
insb
xchg
pushf
and
or
dec
or
mov
inc
or
or
jp
test
mov
adc
push
and
dec
push
mov
xchg
inc
mov
out
sub
add
dec
ds
dec
and
jns
mov
mov
xchg
fisubs
out
repz
adc
mov
adc
mov
adc
inc
mov
adc
and
adc
icebp
and
inc
sub
and
mov
push
adc
mov
mov
adc
and
dec
cld
mov
pop
adc
and
cmpsb
mov
insl
adc
dec
xchg
shll
fiaddl
inc
sbb
pop
adc
xchg
shlb
and
sbb
adc
and
dec
test
in
insb
sbb
or
mov
subl
inc
dec
push
xchg
imul
inc
xchg
pushf
mov
adc
cmc
or
adc
mov
pop
adc
push
inc
jg
mov
mov
mov
and
mov
inc
xor
aam
xor
add
xchg
xchg
leave
and
inc
out
insb
and
and
xor
dec
xchg
xchg
out
xor
out
movb
dec
xchg
jg
popl
mov
adc
daa
add
jns
mov
inc
out
and
sub
mov
push
and
dec
mov
and
inc
adcl
mov
sub
push
and
inc
inc
push
mov
outsb
and
inc
push
sub
pop
xchg
and
adc
and
dec
decb
jg
cmp
dec
and
dec
xchg
xchg
test
mov
cld
adc
sub
dec
dec
xchg
pop
and
adc
inc
push
outsb
mov
das
popa
xchg
or
jnp
adc
pop
dec
xchg
xchg
cmpsb
and
cli
adc
xor
sbb
dec
lcall
xor
mov
dec
lds
sbb
inc
sub
insb
and
dec
xchg
xchg
lahf
and
arpl
adc
xor
adc
dec
cs
cmp
nop
mov
dec
in
hlt
jle
xor
mov
or
push
rorl
inc
add
or
xchg
andb
inc
ficomps
inc
cmp
mov
ja
xchg
xchg
movsl
and
and
cmp
mov
cmp
mov
mov
inc
in
sti
mov
cmp
imul
inc
mov
mov
andb
xchg
and
xor
mov
xchg
and
dec
mov
inc
clc
push
inc
ds
mov
mov
aas
or
imul
mov
dec
decb
and
imul
and
inc
add
dec
outsl
xchg
scas
and
jmp
cli
and
inc
add
dec
push
xchg
push
mov
and
add
dec
jg
les
add
icebp
and
and
mov
pop
and
dec
test
mov
testl
dec
aam
sbb
pop
and
ja
mov
dec
call
inc
and
inc
cmp
mov
push
into
inc
adc
sub
mov
ljmp
cmp
inc
jl
mov
inc
and
gs
jle
ret
add
or
mov
adc
pop
dec
xchg
xchg
cmpsl
and
adc
add
js
mov
dec
and
addr16
test
xchg
and
dec
mov
out
cld
and
dec
inc
cmp
imul
sub
insl
inc
lods
mov
and
dec
clc
mov
push
adc
push
inc
data16
nop
adc
mov
push
adc
inc
ret
mov
or
and
dec
ds
dec
and
cmpsb
mov
dec
cmc
mov
push
adc
and
mov
adcl
mov
shlb
inc
fimuls
inc
push
dec
mov
stos
and
dec
cld
mov
push
adc
push
inc
popa
jno
popf
adc
and
inc
cmp
and
std
adc
sub
xchg
cmpsl
and
and
mov
jb
orl
inc
out
add
pop
adc
and
xor
dec
lret
adc
pop
and
ja
mov
dec
ret
and
inc
out
decb
adc
insb
dec
adcl
adc
and
pop
add
dec
sub
pop
and
inc
ja
mov
adc
and
dec
repz
and
jns
mov
int
mov
pop
add
or
xchg
nop
and
inc
jmp
inc
popa
jo
adcb
and
dec
mov
and
bound
mov
gs
dec
adcl
arpl
mov
adc
and
inc
add
or
xchg
and
xor
mov
jae
test
xchg
test
or
sbb
and
dec
jno
xchg
fwait
inc
mov
mov
adc
and
inc
mov
or
adc
push
aaa
mov
bound
inc
and
mov
sbb
jne
sar
subl
add
dec
je
mov
xchg
inc
mov
mov
adc
and
insl
add
dec
and
inc
and
push
outsb
fnstcw
or
cmp
dec
pop
mov
adc
xchg
in
and
and
inc
jno
mov
mov
inc
out
mov
adcl
dec
inc
xchg
push
and
jg
mov
dec
call
jno
daa
inc
cmp
mov
insl
and
inc
inc
jb
fs
imul
inc
sbbb
rorb
xchg
loop
jmp
sbb
mov
adc
pop
dec
xchg
xchg
mov
mov
and
dec
testl
inc
mov
pusha
and
dec
jle
lea
pushf
inc
stos
mov
and
dec
testb
and
mov
pop
and
dec
jge
mov
fwait
inc
mov
mov
adc
and
add
dec
cs
inc
and
insl
orb
dec
xchg
jmp
test
xchg
or
and
inc
push
imul
shlb
out
cld
adc
mov
jns
insb
jp
jnp
mov
out
add
jnp
mov
adc
pop
dec
arpl
mov
and
dec
ret
and
and
inc
mov
and
dec
fcoml
and
inc
xor
dec
adc
arpl
xchg
lret
jle
cs
cmp
jae
mov
xchg
mov
movl
pop
adc
jne
test
mov
mov
adc
and
dec
cld
mov
adcb
and
inc
cmp
push
adc
je
adcl
lds
add
add
dec
cs
inc
and
insl
orb
dec
xchg
jmp
xor
jl
in
and
or
xorl
add
or
repnz
dec
sub
inc
and
imul
adc
xchg
mov
mov
jecxz
add
dec
mov
inc
repz
das
adc
dec
outsb
xchg
jne
addb
repz
add
jns
loop
mov
fsubl
inc
push
mov
sbb
cltd
movsl
mov
loope
lock
and
mov
mov
adc
pop
dec
push
inc
xchg
movsb
mov
dec
loopne
out
and
and
mov
pop
and
dec
test
add
and
dec
inc
xchg
push
and
xchg
mov
dec
ljmp
sub
mov
lds
dec
decl
and
mov
and
dec
jmp
nop
and
inc
sbb
mov
adc
and
dec
lods
mov
xchg
adc
and
inc
cs
mov
insl
and
dec
xchg
xchg
lods
and
inc
enter
adc
and
add
dec
mov
inc
out
and
test
das
adc
pop
or
lds
inc
xor
or
jo
mov
rcll
xchg
pop
mov
cmpsb
and
dec
mov
inc
xlat
lock
xchg
add
dec
dec
mov
cwtl
adc
and
inc
sub
adc
and
scas
xchg
shlb
inc
ljmp
adc
and
dec
cmp
mov
mov
fwait
add
dec
jmp
xchg
or
lret
adc
and
dec
testl
mov
nop
and
aaa
xchg
dec
and
jno
mov
fldenv
pusha
adc
dec
cmc
mov
adc
jecxz
inc
mov
ja
andb
cmc
mov
mov
inc
jae
mov
dec
and
dec
jg
xchg
popf
inc
ret
push
inc
movsb
lcall
enter
cmp
inc
pop
jg
call
cmp
xchg
je
cmp
and
stos
andl
cli
mov
stos
adc
and
aad
inc
lods
mov
lods
add
mov
xchg
mov
mov
jbe
mov
addl
mov
aad
loope
jne
inc
lea
and
inc
add
xchg
aad
sbb
xchg
mov
adc
mov
ds
dec
arpl
and
jg
mov
lds
pop
mov
dec
dec
js
mov
clc
and
mov
outsl
mov
mov
dec
jno
xchg
and
or
inc
mov
fsts
xchg
xchg
and
dec
rorl
repz
mov
pop
adc
call
cmp
inc
je
inc
roll
ret
add
dec
cltd
xchg
fsubs
cli
and
les
mov
adc
and
lds
dec
es
cmp
or
aas
adc
pop
dec
orl
push
inc
cwtl
mov
enter
xchg
dec
xchg
jecxz
mull
xchg
leave
inc
mov
lret
lret
add
dec
lods
xchg
loop
adc
and
push
insl
mov
inc
and
add
dec
testb
arpl
mov
ret
and
roll
dec
es
das
and
mov
adcl
or
or
and
aad
imul
xchg
stc
cmp
shlb
out
dec
testb
lds
inc
fsubs
nop
adc
and
dec
in
mov
mov
in
adc
fiaddl
mov
dec
mov
inc
cli
or
cmp
dec
and
dec
jle
nop
and
paddusb
rorb
cmc
adc
frstor
das
inc
inc
push
mov
jl
xchg
xchg
movsb
and
sbb
xorl
dec
cwtl
xchg
scas
and
inc
shl
mov
adc
and
filds
dec
xchg
stos
mov
pop
adc
mov
loope
inc
and
push
loop
adc
daa
and
dec
out
add
adc
pop
inc
in
mov
push
das
icebp
sbb
out
and
leave
inc
fdivr
and
inc
movntq
js
mov
in
add
or
inc
and
inc
xchg
ljmp
push
mov
in
add
mov
xchg
sti
adc
and
pushf
mov
orl
mov
and
mov
repnz
jbe
mov
xlat
dec
jecxz
add
movsl
inc
mov
mulb
or
lds
and
nop
rorl
testl
and
test
sbbl
sbb
stc
jmp
psubd
or
inc
sti
inc
mov
mov
mov
adc
mov
lret
in
or
subl
dec
jo
mov
lcall
adcl
dec
cmp
inc
test
pop
decl
pusha
xchg
jbe
popl
mov
adc
es
xchg
sub
or
ret
and
inc
add
or
and
pop
jo
mov
stos
and
dec
out
mov
add
aaa
and
fs
cmovs
xchg
xor
cmp
mov
test
dec
cwtl
xchg
aam
stc
and
add
inc
insl
mov
dec
aad
jmp
pop
inc
add
cwtl
and
dec
ret
and
and
inc
sbb
mov
pop
and
dec
mov
out
sub
aaa
mov
pop
adc
and
inc
and
mov
adc
dec
jo
test
popl
mov
adc
or
inc
and
dec
mov
aad
mov
adc
and
or
dec
xchg
xchg
mov
fmuls
incl
or
enter
jne
xchg
mov
inc
es
movsl
xchg
shlb
inc
out
mov
or
and
pop
rorb
and
inc
inc
dec
mov
jbe
mov
xchg
mov
movl
adc
xchg
dec
and
xorb
add
and
dec
insb
xchg
jnp
popl
mov
adc
and
dec
lock
sti
adc
and
pop
enter
lret
and
xor
pop
adc
jns
add
mov
add
dec
mov
add
jo
add
add
add
mov
add
add
add
add
add
and
add
popa
or
add
pop
add
cmpsb
mov
add
mov
add
mov
add
mov
add
add
add
pushl
pushl
call
pop
pop
ret
mov
call
pushl
ret
call
pop
sub
add
ret
call
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
push
mov
push
push
lea
push
push
call
mov
add
pop
ret
mov
push
lea
push
pushl
push
call
push
push
push
call
pop
ret
push
mov
push
push
push
push
push
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
jne
mov
push
pop
mov
mov
mov
cmpl
je
cmpl
je
pushl
pushl
pushl
call
pushl
mov
pushl
add
pushl
call
pushl
mov
pushl
add
pushl
call
cmpl
mov
jne
pushl
call
andl
pop
jmp
mov
add
call
mov
pop
pop
pop
leave
ret
pusha
mov
call
popa
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
mov
movl
call
pop
sub
add
cmpl
jne
mov
jmp
mov
mov
movl
call
pop
sub
add
mov
add
pop
leave
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
push
push
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
mov
jne
push
call
xor
cmp
setne
mov
pushl
call
pop
push
mov
mov
add
push
call
cmpl
je
mov
add
add
cmpl
je
mov
mov
mov
sub
add
push
call
test
mov
jne
push
call
mov
mov
mov
sub
add
mov
test
je
test
je
movzwl
jmp
mov
sub
add
add
push
pushl
call
mov
add
jmp
addl
mov
cmpl
jne
mov
add
movl
mov
call
pop
sub
add
movzbl
shl
cmp
jne
andl
jmp
xor
cmp
jne
cmp
jne
pushl
push
pushl
call
andl
pushl
call
andl
pop
pop
pop
pop
leave
ret
int3
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
int3
int3
int3
or
add
add
add
add
push
add
and
add
add
add
mov
add
mov
add
dec
mov
add
jo
add
add
add
mov
add
add
fs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
je
popa
insb
inc
jb
add
push
dec
inc
dec
xor
cs
insb
add
mov
jae
addr16
outsl
js
add
inc
push
xor
cs
insb
add
int3
jo
loopne
enter
cld
adc
dec
and
inc
ss
mov
data16
pop
cmpb
shlb
movsb
adc
add
cld
mov
inc
xchg
in
mov
add
shll
xor
bound
out
and
xchg
add
mov
cli
xchg
repnz
mov
add
jb
xor
jp
push
pop
cmc
cs
ljmp
push
fldcw
inc
cmpsl
loopne
mov
mov
add
inc
xchg
cli
or
incl
pop
sub
js
inc
push
add
fldcw
mov
sbb
or
add
sbb
inc
aam
call
sbb
dec
pop
sub
push
cmp
inc
cmp
cwtl
pop
out
stos
orb
int3
dec
das
push
pop
in
fidivrs
out
test
add
sub
or
mov
or
add
add
test
andb
sti
mov
rclb
mov
movsl
lock
iret
call
cmpsb
scas
xor
xlat
aad
jno
pop
lods
movsl
xchg
xchg
fwait
xchg
ljmp
xchg
jo
sbb
jne
inc
jns
inc
xor
ss
arpl
sub
xor
out
xor
rclb
cmc
cltd
adc
outsb
jmp
inc
xchg
xor
ja
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subl
mov
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
push
scas
ja
popf
adc
push
faddl
jae
or
test
add
pop
aad
cld
iret
push
add
popf
decl
xchg
daa
scas
rorb
setle
jge
inc
shlb
repnz
inc
push
add
push
test
jno
insb
sbb
clc
imul
sbb
loopne
rorl
adc
sbb
outsl
fistpll
mov
pop
aad
mov
call
jle
shll
cmp
fisttps
addr16
add
dec
ss
dec
fisubrl
or
imul
dec
add
pusha
jp
inc
ret
jbe
cmp
push
sbb
outsb
xor
imul
lret
sbb
shrb
ss
add
ja
int3
add
add
das
es
mov
mov
add
sub
mov
cmpsl
add
xlat
ret
shlb
sub
scas
ficomps
cld
add
pushf
mov
xchg
insl
add
add
push
jmp
addr16
jb
jo
add
adc
mov
mov
cmp
mov
or
mov
xchg
or
mov
fdivrl
fstpt
or
xchg
xchg
pusha
icebp
clc
mov
add
sbb
int
mov
mov
jae
add
mov
out
sarb
dec
cmp
pop
or
jns
add
clc
shl
imul
insb
push
js
or
xlat
push
addl
add
cmpsl
testl
inc
imul
dec
push
scas
faddl
pop
fldenv
filds
fdivs
push
sarb
jg
mov
jmp
sbb
mov
lret
mov
push
cmpsb
mov
sar
in
push
xlat
add
sub
push
mov
jp,pn
mov
dec
popa
add
add
push
add
aaa
mov
or
ret
add
add
sub
xor
hlt
bound
gs
js
add
insb
dec
out
outsb
jnp
addr16
dec
jno
outsl
je
gs
sub
or
inc
into
imul
sub
or
xor
notb
sub
xor
int
add
adc
adc
sbb
push
xor
xor
add
sbb
cmp
jo
xor
sub
insb
add
and
popa
jns
inc
push
testl
mov
inc
cmp
imul
jo
jb
and
mov
jae
and
je
outsl
popa
and
sbb
inc
mov
addr16
inc
push
insl
sahf
scas
push
pop
mov
out
cs
ret
push
bound
mov
and
push
or
adc
cmp
cmp
jae
out
jbe
or
sarb
push
mov
in
fwait
dec
cmpsl
into
push
or
mov
in
inc
mov
nop
popaw
imul
jmp
xchg
out
jl
sbb
out
outsb
aaa
jne
imul
outsb
xlat
jle
jne
dec
add
push
mov
push
or
inc
cld
push
shll
sbb
pop
sub
and
mov
push
incl
movsl
call
int3
mov
insb
xchg
push
int3
inc
xlat
and
ror
sbb
cmp
sub
mov
or
xor
mov
lret
imul
pop
adc
dec
fwait
adc
add
sbb
or
or
xor
inc
dec
js
or
ret
and
push
push
push
in
call
jne
es
and
mov
cmp
add
fbld
or
inc
mov
nopl
and
add
mov
lea
sub
clc
int3
cli
and
pusha
sub
mov
push
or
das
add
iret
or
dec
mov
adc
fimuls
test
aaa
sti
sbb
pop
ret
xor
int3
cld
daa
lret
iret
ljmp
sbb
jbe
jae
adcb
add
lea
adcb
add
popa
inc
mov
stc
xchg
jp
sbb
lock
lods
cmc
or
pusha
or
mov
sub
pop
orl
rcl
insb
mov
xor
inc
mov
es
jp
dec
test
mov
or
enter
rcr
data16
out
push
jno
mov
xchg
mov
and
fimuls
mov
jae
inc
aam
mov
test
shlb
sbb
rcll
pop
les
add
cmp
push
cltd
add
fadds
mov
mov
jl
xchg
mov
add
add
jl
fcomps
inc
xchg
cld
gs
loopne
imul
or
sbb
test
sbb
gs
sub
lock
lea
sbb
cmc
xor
call
dec
sbb
ret
ds
inc
xchg
arpl
repz
sbb
sahf
enter
adc
clc
test
sub
incl
int3
dec
cmp
adc
adcl
or
inc
add
push
push
ds
dec
add
sub
andl
adc
pop
xor
jg
rcl
sbb
dec
or
sub
test
adc
inc
ret
pop
shll
cs
xchg
mov
inc
mov
rolb
arpl
lret
inc
push
dec
sbb
daa
into
sub
fistps
xchg
dec
add
ljmp
mov
subl
sub
cli
push
inc
lods
sub
in
cltd
lahf
jno
addr16
aas
lods
es
xor
pop
xchg
xor
mov
and
ret
jecxz
lock
inc
adc
into
orl
jmp
xor
cltd
add
jno
pop
add
or
inc
push
inc
push
sbb
sub
add
jge
rcrb
arpl
mov
xor
xor
decl
and
shl
std
adc
idiv
xor
adc
xor
push
push
xor
js
loope
xchg
iret
push
pop
scas
pop
mov
lret
pop
push
jl
dec
jbe
ds
int3
cwtl
loope
push
push
insl
lcall
or
dec
or
mov
stc
mov
sbb
cmp
addb
jmp
sbb
rclb
popa
dec
adc
pop
add
xchg
mov
mov
push
sub
dec
mov
inc
jge
pop
lds
inc
loop
dec
xchg
sbb
add
push
inc
aaa
imulb
aaa
add
and
sbb
sbb
xchg
pusha
jg
mov
adc
or
push
outsl
mov
inc
mov
or
lahf
sahf
and
addb
push
cmp
xor
or
sub
xchg
xchg
sti
int
and
lock
or
dec
xor
xorb
sub
sbb
call
sbb
and
dec
adc
and
or
add
and
add
add
fisttpl
or
add
clc
mov
mov
mov
enter
jmp
add
dec
leave
push
jbe
xor
xor
or
clc
test
aas
mov
xlat
inc
sub
mov
out
aaa
cmp
and
inc
jne
mov
mov
xor
and
pop
loope
les
jnp
dec
pusha
xor
out
inc
xlat
pop
adc
inc
mov
cltd
ss
push
and
adc
add
cmpsl
pop
loopne
pop
out
adcb
call
fisttpl
or
cmpw
xchg
out
inc
or
icebp
adc
cmp
popa
mov
xor
stos
test
out
add
jno
lds
fildll
mov
inc
bound
inc
test
rorb
cmovs
lods
sub
add
xchg
sbb
add
dec
or
add
mov
mov
jnp
sub
hlt
out
addr16
rorl
sbb
nop
adc
mov
push
shrb
cs
dec
add
cmp
and
jno
xor
add
and
rorb
or
adc
stos
inc
sub
push
xchg
jo
je
sarl
ljmp
cmp
mov
adc
xor
sbb
cmp
lock
mov
lods
adc
pop
movhlps
jae
or
add
fsubrp
in
mov
lahf
mov
fs
add
add
mov
mov
gs
lods
in
and
add
stos
xlat
mov
jmp
push
jns
push
cmp
and
clc
call
in
xchg
notl
add
mov
in
adc
push
and
insl
scas
add
les
cltd
dec
das
sub
sub
jecxz
cmc
mov
test
in
add
mov
push
fisubs
daa
scas
loop
or
sbb
add
pusha
or
add
es
or
arpl
mov
aad
lods
leave
xor
push
mov
push
insl
addb
adc
jecxz
pop
jg
mov
xchg
jecxz
js
data16
test
sub
fiadds
push
loop
mov
mov
shll
and
add
inc
ret
bound
fildl
mov
rolb
cmp
push
pop
cld
int3
push
cwtl
dec
add
add
sub
mov
mov
pushf
je
sub
enter
repnz
sbb
rol
je
adc
xor
xchg
inc
ljmp
arpl
adc
arpl
out
xor
je
sub
add
jl
xor
pop
mov
push
add
mov
int
xor
add
pushf
sarl
or
push
call
aad
pop
sub
xchg
mov
dec
mov
and
dec
cmp
dec
shll
mov
iret
test
or
push
adc
jl
repz
xor
fistpl
pop
inc
push
add
jo
sbb
cmpsb
add
ja
add
pop
addb
imul
dec
std
adc
cwtl
cmpsb
jbe
dec
out
mov
xchg
xor
sub
inc
test
mov
bound
jecxz
sbbb
dec
les
pop
add
adc
mov
orb
in
cmp
lds
xor
sub
fbstp
sbb
add
jne
inc
imul
or
add
lret
adc
jns
mov
jl
push
sbb
dec
add
add
cmp
inc
and
sti
lahf
pop
adc
rorl
sbb
test
adc
je
sbb
nop
or
insb
out
sarl
pop
lcall
and
push
adc
push
call
cmp
or
dec
rcr
pop
xchg
jbe
popa
insl
hlt
add
push
jae
xchg
lock
pop
scas
int3
jne
leave
cmpsb
sub
or
into
rcrb
jl
mov
repnz
sbb
call
xchg
pop
add
stos
mov
lea
jb
add
add
cmp
cmpsb
xorl
sarb
je
jno
dec
fmul
add
into
mov
mov
add
sub
andb
cmp
test
and
push
call
test
adc
and
les
and
inc
inc
cmpb
cmp
or
loop
xchg
pop
push
pop
or
and
or
aaa
adc
addr16
mulb
test
jmp
xchg
mov
lret
sbb
or
xchg
outsb
call
sub
test
inc
pop
movzbl
repnz
inc
mov
pop
call
xor
pop
fistpl
jmp
sbb
clc
adc
notb
mov
mov
add
mov
or
sti
add
add
or
int3
mov
fs
das
ret
testl
xchg
push
cmp
cld
or
std
add
fs
sbb
call
jb
push
je
fwait
pop
shrl
xchg
test
nop
push
add
ret
xor
sub
adc
add
aas
sbb
push
cmp
rcr
and
push
sbb
call
or
cwtl
shrl
xor
jp
xor
sbb
jo
inc
add
or
and
add
add
mov
push
lret
cmpsl
push
dec
iret
outsl
test
adc
pop
push
adc
jge
and
je
dec
cmp
add
push
fldenv
je
lcall
bound
int3
lahf
loope
adc
xchg
xchg
push
mov
mov
adc
mov
jo
mov
jno
std
push
pusha
sub
ss
rcrl
sbb
xchg
inc
leave
push
adc
and
sbb
cld
push
jge
call
xor
je
or
pop
sbb
push
fnstsw
movsb
pop
orb
insl
clc
mov
lret
cmp
sbb
mov
pop
push
imul
fsubrs
sbb
les
pop
xor
xchg
sbb
sub
pop
adc
mov
rcr
test
fiadds
imul
enter
cmp
dec
ss
add
sbb
movb
jbe
sbb
push
movsb
push
and
and
push
and
pushf
js
push
pop
mov
dec
sbb
popa
inc
sbb
call
and
fsts
add
mov
push
bound
data16
pop
pop
pusha
sbb
sub
ret
mov
pop
popa
fs
hlt
xchg
test
mov
add
sub
insl
stc
mov
sbb
sbb
mov
add
sub
and
call
pusha
bound
mov
ficomps
pop
and
sub
push
clc
clc
fists
and
sbb
push
mov
push
ret
cmp
inc
jbe
sbb
adc
sbb
xlat
cmc
hlt
nop
sarl
or
inc
cmp
mov
loope
fcmovnb
pop
mov
mov
imul
ds
enter
adc
pop
mov
xor
add
push
sub
adc
xchg
add
movsl
lock
out
movsb
cmp
pop
test
inc
dec
xor
push
repz
stos
adc
xor
xor
scas
push
rorb
adc
pop
sbb
sarb
je
mov
push
lea
add
mov
rolb
sbb
pop
dec
add
cltd
jne
call
xlat
inc
xor
or
mov
js
push
dec
jmp
cmpsb
dec
pop
or
orb
pop
pop
js
popf
mov
dec
cltd
idivl
mov
sub
mov
call
mov
dec
call
inc
or
and
pusha
pushf
fisubs
popf
loope
xor
loopne
mov
pop
sub
je
ret
or
jne
hlt
shr
inc
popa
insb
fldcw
inc
fstps
fwait
dec
push
sbb
push
and
shl
cmp
shl
inc
decl
inc
outsl
cmp
sub
mov
je
test
inc
inc
cs
repnz
cmpl
clc
dec
mov
mov
or
decl
popf
xchg
mov
jge
cmp
pop
scas
mov
je
call
ror
call
data16
mov
pop
jmp
shl
movsb
jg
xchg
dec
pusha
or
jge
xchg
orb
push
adc
xchg
adc
cmp
aaa
or
ljmp
pop
call
inc
fwait
and
and
mov
sbb
cld
nop
pop
mov
mov
push
jns
xor
shl
add
je
inc
cmp
subb
ljmp
test
pop
pop
pop
mov
add
shl
jmp
cmp
testb
push
push
jp
push
pop
and
or
clc
pop
jmp
add
sbbb
ret
adc
add
add
outsl
pop
adc
mov
push
cwtl
sbb
sbb
jl
insb
shll
add
xor
neg
sbb
lea
jmp
cmp
pop
xchg
sbb
cmp
or
xchg
push
sub
adcl
jne
xorl
adc
mov
mov
or
or
test
in
repnz
adc
inc
clc
add
and
nop
xchg
sub
push
push
sub
push
adc
loope
sub
xor
dec
mov
cmp
cmp
jbe
pop
or
je
sub
mov
lret
fstps
add
ds
in
add
fcmovne
add
adc
enter
shl
jb
shl
sar
sbb
add
not
test
les
call
fbld
cmp
repnz
xlat
xor
push
mov
push
hlt
sbb
inc
push
mov
jmp
and
jmp
jbe
push
push
and
lods
cmc
cmp
jo
push
loop
insb
push
jae
add
les
std
rorb
pusha
xchg
ret
sbb
add
inc
add
mov
inc
inc
mov
add
jbe
xchg
lcall
iret
dec
jns
add
mov
lcall
clc
add
mov
sub
mov
adc
or
andl
test
sub
leave
rcl
mov
scas
pop
inc
add
pop
inc
pop
rorl
pop
std
sbb
sbb
insb
enter
sub
je
and
and
pop
cmp
sub
ret
out
mov
mov
mov
lret
sub
sbb
inc
add
into
and
movsl
adc
popf
sbb
out
notl
sbb
sbb
sahf
cltd
adc
loopne
add
out
or
aas
cld
out
jno
rclb
xlat
cld
cmc
adc
adc
pop
add
mov
sbb
or
xor
or
sbb
and
mov
pop
clc
and
pushl
push
int3
adc
cmp
repnz
pusha
adc
mov
add
andl
int3
lret
test
cs
cmp
xor
and
or
jl
jns
add
dec
inc
loop
sub
ljmp
rcl
inc
test
mov
jbe
or
jle
mov
xor
in
pop
fidivrs
out
mov
test
add
pop
sbbl
mov
add
add
cltd
adc
add
call
mov
xor
stc
add
pop
lahf
add
push
ds
stos
pop
iret
sti
sub
aas
std
call
stos
dec
lock
adc
loopne
js
jmp
add
dec
or
xor
pushl
adc
mov
or
cmp
pop
push
and
mov
xor
dec
repz
cmp
nop
jge
xchg
mov
xorb
add
aaa
push
mov
dec
xor
push
xchg
cmp
insl
das
adc
inc
in
call
xor
movsb
sub
pop
cmp
and
add
mov
leave
call
mov
jmp
out
aas
outsl
ds
jmp
or
mov
in
push
fwait
dec
pop
or
fs
clc
mov
push
inc
jmp
jmp
dec
push
sahf
xchg
loope
ret
imul
fisttpl
int3
ds
and
xor
fs
in
addb
xchg
inc
or
mov
adc
aas
push
mov
mov
mov
jno
loopne
mov
clc
cmp
push
arpl
mov
test
pushf
int
mov
in
jb
sbbl
xor
adc
jg
aaa
in
test
xchg
add
dec
in
sbb
jecxz
xor
inc
push
and
mov
xor
gs
xor
nop
dec
push
and
fmull
jmp
push
and
push
inc
push
in
add
fcomps
fistpll
sti
or
orl
jge
lock
sbbl
xchg
dec
enter
push
jno
sub
sti
dec
xlat
and
out
push
cmp
dec
out
sub
xchg
xor
mov
and
in
add
call
mov
loop
test
dec
add
mov
mov
add
xor
adc
nop
adc
mov
incl
es
sub
mov
ds
inc
les
lds
loopne
stc
hlt
pop
push
jle
sub
pop
mov
js
add
and
in
xchg
mov
das
mov
inc
mov
movsb
push
add
push
test
jno
bound
and
sahf
add
add
or
push
and
stos
enter
jmp
in
je
sbb
mov
jmp
stos
sub
ja
and
pop
push
cli
jno
mov
cmpl
and
inc
pop
mov
pop
xor
jns
push
push
in
jns
push
and
or
test
or
call
adc
mov
call
popa
icebp
stos
fstps
cmp
mov
sub
inc
bound
cmpsb
add
and
and
sarl
push
mov
loop
push
cs
cwtl
sub
nop
mov
or
lcall
adc
bound
imul
das
cltd
dec
shll
dec
mov
mov
rorb
jb
outsl
sub
gs
sbbb
sub
ret
or
jbe
xor
and
or
lahf
rcl
inc
lcall
jmp
inc
mov
and
aad
mov
in
in
mov
dec
pop
and
lock
jo
hlt
out
pop
rcll
dec
mov
xor
sbb
dec
imul
out
xchg
pop
adc
or
adc
jne
xor
jmp
mov
call
jne
inc
and
or
sub
and
jecxz
pop
and
add
adc
adc
xchg
push
mov
cmpl
insl
repz
or
test
add
inc
mov
inc
sub
dec
mov
sbb
test
adc
push
mov
jnp
sti
sbb
add
outsl
bound
push
and
mov
adc
sbb
ja
mov
adc
repz
inc
or
add
jmp
mov
ret
push
sub
icebp
loopne
dec
clc
cmp
shr
mov
mov
cmp
dec
sbb
add
xchg
sbb
hlt
inc
js
ja
sub
add
ret
cmovns
push
xchg
icebp
push
call
out
mov
jo
cs
or
sub
xor
or
pop
sub
lds
incb
fucomip
mov
xorb
pop
add
js
push
imull
xchg
lret
mov
sbbb
xchg
bound
jbe
push
out
adcb
jg
insl
adc
push
and
push
fs
in
in
or
cmp
mov
inc
fmul
push
inc
fmuls
mov
rorb
call
movhlps
sub
pop
cltd
inc
mov
pop
clc
nop
aam
pushf
sub
sub
and
das
mov
mov
adc
cltd
in
and
adc
inc
aas
fadd
mov
xor
popa
out
stos
and
inc
lock
or
add
and
pop
andb
pop
pop
dec
inc
add
and
cmp
inc
xchg
xor
or
movsb
enter
cs
adc
sbb
clc
outsb
push
and
aam
repnz
loopne
jae
jo
add
jecxz
ss
je
mov
add
lea
in
scas
jns
imul
xor
insb
loope
dec
loopne
xor
loop
ret
inc
pop
inc
out
outsb
or
subb
leave
inc
int3
jbe
test
mov
adc
fisttpll
aaa
outsl
leave
adc
mov
add
rorb
cmp
stos
and
mov
enter
call
addr16
push
jno
mov
push
call
je
scas
push
and
sbb
mov
or
cmp
in
xor
js
adc
insb
nop
push
insl
daa
xor
mov
mov
or
fs
mov
enter
mov
dec
mov
rcrb
ljmp
lds
icebp
or
inc
stc
xchg
test
out
out
inc
or
sub
cld
adc
daa
or
scas
push
cltd
xor
push
andb
cltd
push
add
and
and
in
and
sub
lds
enter
inc
lds
dec
repnz
pop
push
inc
es
or
cwtl
add
test
call
xchg
add
in
jmp
in
clc
ljmp
test
in
stc
push
xor
fcomps
lea
mov
xchg
adc
aam
inc
mov
shll
or
xor
popf
enter
pop
add
xchg
dec
inc
and
daa
imul
jbe
xlat
cmp
adc
adc
addr16
shll
filds
bound
scas
pushf
jp
push
orl
je
lret
mov
mov
sub
adc
xchg
data16
xor
addr16
pop
sbb
xchg
sbbl
pcmpeqb
mov
shr
cmp
adcb
rcrb
dec
sbb
push
xrelease
hlt
add
fcomp
and
sbb
mov
dec
lahf
push
sahf
dec
inc
sub
push
call
out
jb
into
nop
push
or
add
or
les
adc
add
shlb
stos
mov
push
bound
mov
xchg
mov
jno
stos
cmp
cmp
lcall
sbb
out
pop
repz
pop
sbb
aaa
jo
inc
repz
andb
mov
and
mov
cs
push
sar
lods
stc
mov
in
dec
mov
add
push
loopne
jl
sarl
imulb
cmp
sub
push
cmp
push
loop
xorl
jg
pushf
adc
mov
or
loope
dec
or
aas
int3
xchg
nop
jl
add
call
cli
add
stos
bound
inc
out
push
inc
add
fsubrs
iret
call
jmpw
push
aam
int3
mov
mov
bound
inc
and
or
ret
push
push
pop
sbb
loope
inc
dec
xchg
cmp
jge
cld
lods
push
scas
cltd
adc
ret
fldt
jno
ja
sbb
rorb
add
xor
cmp
scas
add
xchg
sbbb
loop
arpl
mov
pop
inc
xor
popa
shlb
jo
xadd
xor
xor
jecxz,pn
push
stos
mov
push
inc
xchg
inc
lret
add
pop
add
sbb
pop
cltd
add
fwait
jnp
cmp
inc
cmp
push
mov
push
jnp
add
xor
xor
inc
adcl
rcr
dec
icebp
fdivl
xlat
repz
sbb
mov
das
cld
addl
mov
pop
lret
adc
cmpsb
inc
lock
add
adc
std
adc
sbb
xor
xchg
jmp
push
pushf
dec
jne
xchg
in
mov
or
adc
push
in
add
mov
ret
mov
pop
push
inc
pop
sbbl
jecxz
dec
stos
lock
adc
adc
not
adc
add
cvtpi2ps
sub
scas
ret
xchg
cmp
add
aam
bound
inc
test
int3
pop
loop
add
add
ficomps
and
inc
or
aam
add
add
or
movsb
cwtl
sbb
lret
add
aam
mov
inc
pop
xor
fstpl
mov
mov
dec
cmpl
and
push
cld
lret
push
push
lods
mov
sarb
xor
sbb
lret
ds
lods
or
xor
inc
mov
and
or
pop
xchg
icebp
sub
in
gs
add
push
out
sub
popf
xor
into
cltd
orb
insb
pop
lcall
cmpsb
mov
lea
push
add
rol
lea
mov
test
push
or
pop
test
mov
bound
adc
cltd
sbb
test
in
aas
push
lods
push
popl
subl
mov
loopne
or
js
cmpsb
in
lahf
rcll
or
sti
cmp
pop
int3
fsubrs
jno
jae
pusha
scas
push
mov
jecxz
jle
mov
jg
pop
or
mov
test
out
push
pop
inc
cmp
cltd
xor
adc
sub
sbb
push
lcall
jl
sub
inc
adc
push
xchg
pop
mov
or
sub
inc
sub
cltd
and
push
addl
pusha
push
call
icebp
loop
and
sbb
shll
adc
add
push
and
in
fadds
sbb
mov
pop
mov
je
mov
ss
pop
sbb
xor
add
mov
add
add
jno
push
dec
jne
jmp
push
or
lea
xor
mov
pop
leave
test
sub
fisubrl
nop
xor
push
cld
push
add
mov
add
getsec
sbb
lret
or
cmc
cmp
enter
popf
rcrb
fnop
inc
clc
add
mov
insb
enter
or
loope
cmp
and
or
add
jecxz
or
sbb
fadds
sbb
adc
pop
mov
cltd
addr16
lock
ss
push
xor
outsl
add
push
push
daa
add
sbb
fisubs
es
loop
fcmovne
adc
jo
push
loope
mov
jecxz
loopne
push
int
add
test
orl
hlt
aam
dec
mov
leave
jp
xor
lea
mov
shlb
xor
and
mov
and
aaa
add
or
xor
sub
mov
in
aad
test
mov
push
sub
call
mov
inc
xchg
sbb
mov
dec
rcll
adc
filds
lds
popa
and
sbb
popf
sbb
sub
mov
adc
and
mov
clc
cmp
les
add
mov
mov
adc
roll
dec
inc
sub
jp
and
add
andl
les
movsb
fs
out
xor
and
xor
mov
sub
inc
sbb
jle
add
sub
out
sub
push
test
add
add
push
cmpsl
cltd
and
add
jmp
adc
sbb
push
mov
push
jns
sbb
in
decb
dec
push
stos
leave
push
and
jbe
loopne
icebp
call
shl
add
adc
push
mov
roll
mov
and
loope
callw
or
daa
mov
loopne
loopne
sbb
add
jns
andl
sbb
jo
push
ja
lcall
pop
cmpl
mov
jae
jl
add
pop
repnz
xor
xchg
jecxz
loope
jo
icebp
mov
mov
or
push
cmc
addl
xchg
adc
cmp
sbb
gs
push
mov
test
mov
repnz
adc
rclb
subl
add
sub
repz
mov
ja
jecxz
es
pop
add
sub
sbb
test
daa
aam
leave
ret
or
pop
dec
mov
les
adc
dec
push
dec
adc
arpl
jbe
aam
lds
les
pop
test
clc
or
pop
lret
mov
ret
push
inc
leave
rolb
cwtl
mov
test
dec
push
adc
dec
push
cmc
sahf
or
add
mov
out
sbb
orl
icebp
test
das
cli
call
mov
mov
mov
loop
data16
mov
jecxz
enter
lds
aad
xor
andl
mov
xor
and
pop
popa
ljmp
mov
add
add
mov
notb
add
inc
pushf
aad
ss
cmc
mov
fidivs
xchg
adc
ror
pop
out
jmp
pop
ret
movsl
in
loope
cltd
add
add
push
int3
dec
imul
neg
add
push
pusha
inc
adc
cld
xor
sub
pop
fs
push
fisttpll
pusha
add
cmp
filds
cmp
mov
add
mov
in
inc
or
adc
pop
jne
movb
and
cmp
mov
clc
in
push
pop
call
mov
popf
mov
inc
iret
inc
push
inc
rol
daa
test
and
inc
xor
dec
rcll
sub
mov
lcall
and
cmp
scas
stos
push
inc
push
push
sbb
mov
pop
mov
push
int3
jg
inc
shlb
adcb
pop
dec
mov
ret
hlt
mov
mov
sub
icebp
stos
sub
or
ret
adc
cmp
xchg
aam
stc
cmp
xor
mov
ret
aas
cwtl
push
out
popf
in
bound
insl
mov
xchg
or
bound
cmp
outsb
iret
mov
outsl
imul
je
mov
jl
pop
int3
and
xchg
add
dec
pop
stos
fdiv
shrl
xlat
mov
push
loope
rorl
pop
pop
aad
rcll
xor
dec
jg
mov
les
sbb
cmp
dec
fistl
stos
test
shr
add
sub
repnz
mov
mov
push
ret
xor
cwtl
mov
pop
int3
clc
test
push
jmp
sub
mov
pop
hlt
sub
jo
sahf
xchg
hlt
xchg
arpl
add
cmp
cmp
adc
pusha
pusha
xchg
sbb
cld
bndstx
adc
lock
add
mov
leave
add
addr16
and
push
xor
je
mov
aad
jno
pop
push
cmp
lods
data16
lret
fwait
or
sub
add
sbb
mov
mov
call
loop
jl
inc
inc
cmp
inc
cmp
jo
bound
movsb
add
and
ds
push
inc
add
pop
and
les
cmp
inc
xor
push
cli
add
ficoms
adc
test
add
loop
mov
test
loop
pop
adc
cli
nop
xchg
adc
add
or
daa
cltd
push
test
imul
pop
xchg
mov
adc
sbb
and
dec
xor
inc
xchg
mov
xor
cwtl
or
sbb
test
mov
ds
repz
aad
lods
pop
movsl
loope
mov
xor
cmpsb
hlt
jo
lock
nop
icebp
xor
sarb
je
add
sbb
jle
repz
xchg
push
add
fsubs
jae
mov
lcall
add
cmp
sub
pop
and
or
mov
xchg
lahf
cwtl
add
negb
rolb
mov
lods
add
jle
sbb
loopne
add
push
jo
subb
dec
jl
lds
mov
dec
sbb
xchg
xor
jbe
xor
sbb
aas
out
fs
pop
in
imul
imul
or
and
fadds
adc
outsl
add
or
mov
cli
dec
data16
cmp
gs
jae
test
inc
mov
inc
mov
aas
popf
adc
dec
les
add
sbb
add
mov
subl
leave
or
push
push
test
out
scas
add
push
ret
aas
pop
mov
push
xor
loop
cwtl
xchg
add
xor
stos
inc
cwtl
fsubrs
pop
mov
or
xchg
adc
pop
cld
push
or
cmpb
adc
test
xor
mov
sub
mov
push
mov
pop
pavgb
out
fldlg2
fcmovu
es
pop
test
fisttpl
nop
test
inc
inc
jns
pop
xchg
movsl
push
sahf
bound
or
sbb
adcb
xor
cmpsb
in
jno
leave
out
les
mov
int3
call
repnz
jae
add
loop
leave
add
loopne
cmpb
jns
out
pop
mov
cltd
push
mov
mov
mulb
jns
pop
cwtl
sbb
inc
aad
jns
bound
and
aam
aaa
push
push
fcomps
lret
in
mov
push
ret
and
adc
inc
test
xchg
or
xchg
mov
test
mov
sbb
loope
ds
addr16
rcrb
je
daa
xlat
add
cmp
sbb
call
daa
sarl
mov
xchg
xchg
or
cltd
inc
pop
mov
push
ficomps
inc
daa
test
sub
and
mov
pop
and
and
pop
jg
xorl
push
sbb
test
xchg
stc
adc
add
pop
pop
cltd
pop
call
data16
inc
mov
int3
cmp
push
xor
xchg
lcall
call
mov
xor
rolb
flds
cs
sub
jae
movsl
mov
sub
addl
inc
sbb
pop
add
mov
mov
push
push
add
or
sub
push
fnstcw
xor
mov
out
mov
adc
jbe
pop
xor
sub
popa
mov
inc
ljmp
addr16
jg
lock
xor
sub
add
pop
mov
int3
add
lcall
and
call
xchg
fisubl
icebp
nop
cld
xor
in
add
mov
not
ja
out
stos
mov
in
xchg
xchg
ret
add
mov
xchg
jne
adc
mov
or
fadds
andw
xchg
bnd
sahf
sbb
push
mov
outsb
lret
adc
add
stos
dec
pop
lock
cmp
adc
adc
jge
push
iret
add
inc
nop
outsl
mov
cmc
cli
arpl
or
mov
adc
xchg
inc
mov
pop
add
repz
and
pop
sub
xchg
add
mov
data16
lock
adc
xor
in
sub
ljmp
nop
sub
mov
or
pop
in
xchg
push
cwtl
sbb
sub
pushf
push
jb
add
mov
and
mov
pop
dec
or
sub
inc
dec
mov
pop
lahf
addl
rcll
push
adc
add
lods
or
leavew
ret
or
out
or
or
jae
push
inc
cld
dec
xor
and
dec
test
mov
xor
and
or
inc
pop
pop
imul
adc
in
dec
add
and
xchg
enter
and
push
nop
ds
je
or
jb
push
dec
push
rorl
or
mov
addb
mov
xchg
dec
out
xchg
push
inc
aas
das
push
push
cld
test
or
or
orb
call
xchg
outsl
inc
and
stos
stos
data16
mov
push
or
in
mov
mov
push
xor
or
adc
xchg
inc
push
fistpl
iret
stos
sub
mov
daa
rcrl
shrl
dec
adc
lea
xchg
fcoml
imul
lds
or
inc
call
cmpsb
push
inc
lcall
cmpl
cld
fs
cmp
jb
sbb
pop
jmp
or
adc
clts
adc
hlt
inc
hlt
jae
xor
push
adc
xchg
dec
and
push
aas
insl
push
push
mov
pop
sbb
inc
xor
add
cmp
jo
jbe
jecxz
inc
xorl
pop
cmp
dec
add
mov
repz
addr16
sub
mov
xor
movsb
mov
add
inc
jmp
jl
jns
push
or
in
pop
or
and
inc
mov
stc
jge
pop
adc
xor
aas
stos
jmp
cld
dec
sbb
inc
mov
sub
roll
nop
sbb
dec
sarl
or
daa
sbb
or
cmp
ja
mov
mov
mov
push
ljmp
or
mov
rolb
adc
ret
ret
call
xchg
pslld
sub
sbb
dec
int3
add
aaa
jecxz
dec
test
push
or
xchg
les
nop
and
push
add
adc
inc
add
outsl
fs
fmull
ja
rorb
cmpsb
jle
inc
js
pcmpeqb
test
push
push
stos
pop
aad
jae
cmp
inc
imul
outsb
popa
addr16
stos
adc
add
sbb
gs
inc
sbb
sbb
dec
xchg
mov
add
insl
and
mov
je
popa
mov
fcoml
lret
adc
inc
loop
cmp
inc
push
dec
int3
dec
xor
xor
data16
addr16
push
mov
