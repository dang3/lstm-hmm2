push
mov
push
call
push
sub
lea
sub
pushl
xor
ror
rol
mov
add
popl
dec
pop
add
ret
push
call
push
push
call
pop
push
push
call
pop
push
push
push
call
push
push
push
push
push
push
call
push
push
push
push
push
call
push
push
push
call
push
push
dec
add
xor
add
lea
lea
not
pop
push
push
inc
sub
inc
xor
add
rol
xor
pop
call
push
xor
sub
ror
sub
dec
ror
pop
mov
mov
push
sub
shr
shl
ror
pop
add
push
lea
ror
ror
pop
add
push
add
pop
mov
push
push
push
call
xor
push
push
push
call
add
push
dec
dec
mov
xor
xchg
push
ror
xor
pop
push
push
push
call
call
push
push
push
push
call
mov
push
push
call
mov
push
sub
shl
inc
xor
pop
add
mov
push
sub
sub
rol
ror
sub
shr
shl
pop
sub
jne
push
add
add
ror
pop
pop
push
not
shr
add
add
pop
pop
pop
push
sub
shr
shl
shl
rol
dec
sub
pop
pop
pop
push
dec
xor
lea
xor
add
pop
xor
ret
push
sub
pop
mov
push
pop
cmp
jne
pop
push
sub
shl
shl
rol
sub
rol
pop
pop
mov
push
push
push
call
pop
push
xor
not
not
pop
mov
push
push
push
push
call
pop
push
add
rol
not
not
pop
add
push
push
push
call
push
mov
push
push
call
push
push
push
push
push
call
push
push
push
push
call
mov
add
push
push
call
mov
push
ror
not
pop
add
add
push
shl
inc
lea
dec
sub
add
dec
pop
add
add
push
not
pop
mov
push
rol
ror
pop
add
add
push
lea
not
dec
rol
pop
call
mov
push
push
shr
inc
xor
dec
dec
mov
add
pop
push
push
push
call
push
push
push
push
call
call
push
add
sub
xor
not
xor
sub
pop
push
call
push
shr
mov
add
xchg
push
push
push
call
push
push
lea
xor
pop
call
push
push
push
push
call
push
push
shr
mov
add
xchg
push
not
shr
ror
not
mov
sub
xchg
push
push
push
call
push
push
push
push
call
call
push
push
push
call
mov
movl
push
ror
shl
sub
xor
pop
movl
push
dec
sub
lea
not
inc
not
ror
pop
movl
push
shr
sub
sub
pop
push
push
push
inc
lea
rol
inc
not
sub
xor
mov
add
pop
push
push
push
push
call
push
push
rol
ror
add
lea
rol
pop
call
push
push
push
push
call
mov
push
push
push
call
call
push
push
push
push
call
mov
push
ror
lea
ror
sub
sub
shl
mov
add
xchg
push
lea
lea
shr
xor
xor
pop
push
push
push
push
push
call
call
push
pop
push
push
xor
add
not
pop
call
push
push
add
not
xor
xor
mov
sub
pop
push
sub
add
ror
pop
push
push
push
push
call
call
push
inc
add
dec
shl
pop
push
call
push
shr
shr
xor
mov
xor
xchg
push
push
push
push
call
push
call
push
push
push
call
push
call
push
add
not
sub
sub
mov
sub
xchg
push
ror
pop
push
call
push
push
push
push
call
pop
push
not
sub
pop
pop
push
pop
pop
push
ror
sub
xor
pop
leave
push
push
push
push
call
xor
push
sub
inc
ror
add
inc
pop
inc
ret
push
ror
xor
shr
rol
sub
dec
mov
sub
xchg
push
push
push
push
call
push
push
push
push
push
call
call
push
push
push
push
call
push
push
add
sub
dec
xor
pop
call
push
sub
pop
cmp
jbe
push
push
push
push
call
add
push
push
push
push
call
pop
push
push
call
pop
pop
push
rol
shl
not
shl
sub
add
pop
pop
push
push
push
call
pop
xor
push
xor
sub
sub
add
pop
ret
push
ror
pop
pop
push
add
dec
pop
push
push
push
xor
sub
mov
add
pop
push
pop
push
call
push
push
call
mov
push
sub
inc
shr
ror
mov
xor
xchg
push
inc
sub
sub
pop
push
push
add
pop
call
push
sub
ror
add
pop
push
push
add
add
pop
call
cmp
jae
push
shr
rol
add
sub
shl
sub
dec
pop
push
push
shr
dec
not
add
shl
pop
call
add
push
push
call
jmp
mov
push
add
mov
xor
xchg
push
push
call
push
push
not
sub
ror
sub
sub
pop
call
push
push
call
xor
push
rol
xor
pop
sub
push
rol
ror
pop
push
push
push
push
call
push
push
push
sub
ror
pop
jmp
or
je
push
shl
xor
add
inc
pop
xor
push
push
call
pop
push
push
call
pushl
pop
push
push
push
call
mov
mov
push
push
call
mov
push
inc
ror
shl
not
lea
mov
xor
xchg
push
lea
pop
push
push
xor
xor
pop
call
cmpw
jne
push
push
push
call
cmpb
jne
push
push
call
add
push
push
dec
sub
shr
shl
shr
sub
mov
sub
pop
push
push
push
push
call
push
push
not
rol
dec
pop
call
cmpl
jne
push
add
pop
add
push
add
sub
add
sub
pop
add
push
push
push
call
cmpl
jne
add
push
push
add
mov
sub
pop
push
push
call
push
push
push
push
push
call
call
push
push
push
call
push
push
shr
lea
sub
mov
sub
xchg
push
dec
shr
pop
push
push
push
call
push
push
lea
add
lea
shl
xor
pop
call
push
push
push
push
call
mov
push
push
push
push
push
call
push
mov
push
pop
add
push
inc
add
sub
pop
add
push
push
call
mov
xor
push
push
call
add
push
push
push
call
mov
xor
push
shr
xor
ror
inc
shl
inc
pop
rep
push
not
pop
pop
push
inc
ror
sub
add
lea
lea
pop
mov
push
dec
add
not
inc
shr
pop
add
push
xor
lea
pop
add
push
add
sub
add
lea
ror
pop
mov
push
push
push
push
push
call
xor
push
push
call
add
push
add
add
sub
sub
pop
mov
xor
push
xor
xor
sub
inc
add
pop
mov
push
push
push
call
xor
push
push
push
call
add
push
add
ror
ror
sub
pop
add
push
shl
pop
add
push
push
call
mov
push
sub
sub
mov
add
xchg
push
dec
rol
lea
lea
lea
dec
pop
push
push
xor
dec
ror
xor
sub
pop
call
push
add
sub
xor
inc
sub
sub
xor
sub
pop
push
push
sub
mov
add
xchg
push
pop
push
push
push
push
call
push
push
push
push
call
call
mov
push
push
push
call
push
push
push
push
push
push
call
mov
push
push
push
push
call
add
add
push
inc
dec
ror
sub
rol
pop
mov
xor
push
push
call
add
push
lea
shl
not
shl
shl
pop
mov
push
push
push
push
call
xor
push
push
call
add
push
rol
shr
pop
rep
mov
push
push
push
push
push
call
xor
push
push
call
add
push
push
call
or
je
push
shl
not
inc
inc
shl
pop
mov
push
push
push
push
call
xor
push
push
call
add
push
sub
pop
mov
push
push
push
push
push
call
xor
push
push
push
call
add
push
sub
rol
rol
xor
pop
add
push
lea
xor
add
shl
sub
xor
pop
add
push
ror
pop
rep
push
sub
add
not
not
xor
add
rol
pop
mov
xor
push
push
push
push
call
or
je
mov
push
push
push
push
call
add
push
inc
sub
add
add
ror
shr
not
pop
rep
pop
push
inc
dec
xor
mov
add
xchg
push
sub
rol
pop
pop
mov
push
lea
pop
jmp
push
xor
sub
pop
push
push
push
push
call
mov
push
dec
ror
rol
pop
add
push
push
push
call
push
push
push
call
push
push
inc
sub
xor
ror
not
inc
pop
push
push
push
push
push
call
push
push
pop
mov
mov
push
sub
dec
dec
ror
lea
pop
add
push
rol
inc
xor
shr
pop
mov
push
push
push
call
add
push
sub
lea
add
pop
mov
add
push
push
call
xor
mov
push
add
dec
shr
ror
add
ror
inc
pop
xor
rol
push
push
call
xor
push
push
call
inc
push
ror
pop
cmpb
jne
push
shr
rol
add
pop
cmp
je
push
push
push
push
call
add
push
push
call
cmpl
jne
push
push
push
push
call
xor
push
xor
rol
pop
pop
push
xor
inc
shr
xor
ror
dec
pop
pop
push
push
push
push
call
pop
push
not
rol
rol
add
pop
pop
push
xor
not
sub
pop
pop
push
shl
add
shl
pop
leave
push
sub
shr
inc
sub
ror
rol
shl
pop
ret
push
push
call
mov
push
add
sub
lea
pop
add
push
sub
rol
add
pop
mov
push
add
shr
not
lea
pop
push
call
push
push
push
call
xor
push
sub
sub
shl
pop
pop
pop
push
push
push
push
call
pop
push
push
call
pop
pop
push
push
push
call
leave
push
dec
add
sub
not
lea
pop
ret
push
push
lea
ror
sub
shr
pop
mov
cmpl
jne
push
push
push
call
mov
push
push
push
push
call
jmp
push
rol
rol
xor
dec
shr
shl
pop
mov
push
dec
pop
and
pushl
push
push
call
pop
push
push
push
push
call
sub
push
pop
jmp
push
sub
add
shl
shl
rol
pop
sub
push
inc
shr
pop
pushl
push
push
push
push
call
pop
push
not
not
sub
pop
sub
push
add
dec
shr
lea
shr
sub
pop
cmp
jne
push
push
push
push
call
mov
push
push
push
call
add
push
lea
pop
movzwl
sub
push
inc
add
inc
xor
shl
inc
pop
cmp
jne
push
push
push
push
call
leave
push
push
call
ret
push
push
push
call
push
push
push
push
call
mov
add
push
not
sub
shl
shr
lea
pop
push
push
push
push
push
call
push
push
push
push
push
push
call
push
mov
push
sub
dec
shl
pop
push
push
push
push
push
call
pop
push
rol
inc
not
dec
add
not
dec
pop
mov
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
push
call
pushl
push
add
dec
add
add
not
ror
pop
popl
mov
push
ror
sub
sub
sub
add
pop
add
push
push
push
call
xor
lea
push
push
push
call
mov
push
shr
shr
pop
add
push
push
push
call
xor
rol
push
xor
dec
lea
sub
rol
pop
nop
push
push
push
push
call
nop
push
inc
inc
sub
sub
pop
xor
push
push
push
call
nop
push
dec
pop
nop
push
inc
sub
inc
not
pop
inc
push
push
push
call
nop
nop
push
push
push
call
cmpb
jne
push
ror
inc
not
dec
pop
nop
push
add
pop
nop
push
push
push
push
call
cmp
je
push
push
push
call
nop
push
push
push
call
nop
push
push
push
push
call
inc
push
not
sub
shl
lea
rol
pop
nop
push
ror
pop
nop
cmp
jb
push
pop
mov
push
shl
inc
add
ror
pop
add
push
shl
pop
movzwl
push
push
push
call
mov
add
push
push
push
call
mov
push
push
push
push
call
add
push
shl
ror
dec
rol
inc
ror
pop
pop
pop
push
shr
pop
pop
pop
push
push
push
call
leave
push
shl
lea
sub
sub
pop
ret
or
add
mov
add
cwtl
push
add
sahf
push
add
push
add
popf
push
add
fwait
push
add
add
je
xor
push
push
or
and
loopne
notb
mov
xlat
add
cmpsl
pop
mov
popf
mov
in
xchg
shl
adc
mov
aaa
out
jno
inc
mov
scas
inc
and
inc
push
xchg
jge
scas
testl
xor
add
mov
shlb
pushf
jne
pop
cmc
cmp
xchg
stc
mov
add
nop
sbb
and
xchg
adc
xchg
lods
insl
dec
push
or
movsl
xchg
dec
pushf
loopne
adc
pop
movsl
mov
orl
lcall
or
movsb
pop
or
pop
mov
addl
xchg
inc
clc
fistpl
jge
mov
dec
mov
dec
cmc
mov
enter
mov
aam
lret
insl
dec
subl
adc
fwait
xor
add
inc
cli
jb
int3
fucom
inc
mov
pop
or
andl
add
mov
push
mov
lds
insb
mov
cmp
mov
jecxz
pop
stos
xchg
es
cs
roll
or
repnz
xchg
sbb
lods
pop
push
loop
addl
dec
and
push
mov
dec
pop
xchg
inc
stos
cmc
inc
test
icebp
dec
add
cs
sahf
mov
mov
iret
adc
or
jle
mov
mov
xor
cmp
mov
or
dec
inc
mov
cmc
imul
sbb
cli
lea
mov
xor
dec
mov
insb
or
or
inc
fidivrs
add
dec
and
jl
pop
fidivrl
imulb
stc
push
nop
daa
dec
mov
ja
jge
shl
inc
or
jl
movsb
and
mov
popf
test
or
mov
mov
mov
addr16
xorb
jo
ret
push
sub
push
mov
jg
fcmovnb
ret
push
xchg
sbb
sti
inc
inc
maskmovq
testl
iret
fisttpl
cwtl
stc
xchg
push
bound
jae
movsl
int3
mov
int
mov
mov
fmul
push
xchg
inc
aam
cmp
mov
ja
stos
xor
sbb
stc
or
stos
sahf
shl
adc
cmp
inc
adc
xchg
pop
jo
out
push
xchg
push
fsubp
fldl
push
mov
adc
jne
aam
dec
push
jmp
hlt
push
out
ss
int
in
shlb
int
jl
pop
and
cltd
ds
mov
daa
xchg
sub
loop
push
inc
cmpsb
ret
mov
xor
mov
push
movsl
sbb
pop
push
call
pop
sahf
lret
dec
jo
ret
cmp
mov
mov
mov
xor
call
in
aad
add
inc
adc
data16
ret
int3
cmpsl
dec
jmp
add
movsl
data16
les
add
mov
popa
and
cmp
mov
or
and
outsl
cmp
push
insl
ret
push
dec
mov
divb
loope
mov
aaa
jo
negb
mov
add
in
xor
xchg
lret
ja,pn
xchg
sub
mov
fistpll
je
and
push
in
gs
ret
push
cltd
loope
bound
inc
dec
mov
mov
test
fbld
dec
in
jne
mov
cmp
mov
aad
cs
jbe
xor
jmp
out
movl
xchg
aad
imul
adc
ds
lock
cmpl
mov
je
cmpsb
jmp
repz
push
cmp
je
xor
push
pop
in
cmp
pop
or
sbb
pop
add
cwtl
xor
in
bound
push
mov
push
mov
daa
cltd
push
icebp
aas
lcall
dec
jmp
mov
shufps
ret
mov
dec
or
xchg
aam
jne
mov
arpl
add
xchg
std
add
add
jge
imulb
iret
dec
icebp
int
fisubl
sbb
cmpsb
xor
mov
lret
add
cmp
fimuls
jbe
mov
sub
dec
adc
out
repnz
fistpll
pop
jae
cmp
mov
test
cmp
lock
pop
test
test
testl
stc
push
jle
loope
movsl
xlat
inc
dec
test
fstl
cmp
push
js
ret
push
stos
push
sub
xlat
es
mov
dec
iret
jle
cli
pop
push
test
inc
mov
cmp
sub
call
xchg
inc
pop
sarl
insl
mov
xlat
in
and
push
notb
imul
sub
imul
dec
mov
scas
mov
lods
pop
mov
lods
or
insb
jnp
aaa
ja
in
inc
outsl
xchg
push
jge,pt
mov
pop
sub
add
iret
loopne
xor
icebp
jmp
xor
adc
repnz
and
insl
fsubr
jg
xor
mov
sbb
or
stos
fwait
aas
jge
test
pop
xor
cmp
xorb
mov
add
pop
loop
dec
add
push
pop
jle
pushf
mov
xchg
cmp
push
push
ds
adc
sbb
cmpsl
std
xchg
cmp
aad
loopne
cmp
into
xchg
repnz
or
and
push
lcall
sbb
xor
notb
sbb
pop
add
dec
sbb
adc
out
mov
movsl
pop
or
sti
loopne
test
clc
mov
jnp
xchg
dec
sbb
shrl
mov
outsb
push
jae
inc
or
mov
add
aad
ret
and
fidivs
lahf
fidivrl
loop
aaa
fildll
lret
lret
jle
adc
repz
mov
dec
popa
idivb
mov
jne
dec
ret
nop
test
int
lods
add
mov
cmp
xchg
cmpb
mov
out
aaa
adc
in
aam
leave
call
dec
adc
push
push
mov
into
dec
inc
jb
test
stc
and
pop
ja
lods
dec
cltd
adc
and
jae
ds
mov
andb
add
lock
fwait
adc
xor
int
ss
add
dec
repnz
mov
mov
cmpl
lcall
mov
cs
mov
or
mov
sbb
ss
pop
daa
pop
testb
pop
adc
and
jne
sub
popa
fcoms
sub
sbb
cmc
or
dec
mov
jns
in
rorl
aaa
push
sbb
lahf
inc
lea
mov
jne
mov
loop
outsb
and
mov
je
shrb
dec
mov
jecxz
rcrb
lret
int
jmp
gs
test
out
rclb
lods
mov
jp
mov
sbb
mov
mov
cwtl
mov
lods
in
push
std
fisttps
jo
xchg
out
mov
add
xchg
xchg
xor
out
jle
xor
pop
dec
pop
jnp
or
fildll
inc
adc
inc
sub
fwait
loopne
sbb
outsl
lods
xchg
mov
jns
imul
lods
cmp
loop
imul
sub
nop
xor
adcl
stc
neg
xor
stos
jmp
mov
ret
xchg
push
cmp
add
inc
jecxz
sub
or
mov
pop
cmp
pop
hlt
repnz
jp
cltd
imul
fstps
movb
xchg
hlt
outsb
stos
int
or
popl
stos
call
adc
fnsave
shrl
sbb
int3
rcll
push
dec
or
jge
jmp
or
loope
test
out
mov
inc
mov
cmp
in
int3
outsl
cmp
std
xlat
xchg
mov
xchg
pop
je,pn
ja
cltd
xchg
xchg
sub
dec
jp
xor
notb
adc
loop
inc
shl
push
sbb
jno
cmp
test
outsl
nop
cmp
repz
outsl
arpl
loopne
jne
cmp
push
lods
jno
daa
adc
enter
test
ja
lods
cmpsl
js
jns
push
inc
mov
jmp
int
rcrl
cmp
frstor
setnp
sti
adc
aad
ljmp
cmc
sahf
push
lods
pushf
cli
enter
adc
test
sbbl
mov
cwtl
add
cld
add
cli
test
add
pop
mov
fildll
movsl
fimull
cmpsl
mov
stos
adc
xor
loop
cmpsl
ljmp
pop
adc
inc
sub
dec
pushf
sub
xchg
mov
sbb
orl
or
mov
nop
adc
sbb
pop
adc
and
pop
mov
cmp
adc
mov
adcl
stc
pop
movl
jp
push
mov
mov
ret
cli
lret
ja
mov
add
int
jecxz
cmp
adc
ljmp
scas
cmp
ret
pushw
or
jge
cmp
push
lods
mov
rol
cmpsb
xchg
das
push
bound
cmp
in
call
bound
cmp
mov
jbe
les
add
sahf
pop
stc
inc
ja
movsb
dec
inc
pop
jns
stc
sub
rcrb
xor
outsl
loope
int
movsl
pop
add
sbb
outsb
cmp
rolb
cmpsb
mov
int
adc
sub
pop
and
mov
mov
std
jge
sbb
mov
pop
adc
dec
jnp
push
mov
arpl
add
push
test
cld
stc
sbb
fsubr
imul
lods
aas
je
js
test
inc
mov
cmp
mov
xor
test
mov
dec
cmp
xchg
insl
push
lods
mov
xor
lahf
or
icebp
xor
int
push
dec
lea
cld
sbbl
pop
stos
mov
in
sbb
pusha
jle
pop
mov
add
dec
push
in
mov
cmp
mov
adc
inc
mov
xor
add
das
add
std
iret
mov
or
mov
pop
out
fidivrl
pop
arpl
mov
cmc
cmp
jns
and
popa
lods
stc
sarb
popa
or
lea
add
roll
jg
push
pop
ljmp
sbb
push
js
mov
xor
dec
movsb
mov
xchg
aad
popl
sbb
fildl
in
pop
sub
cmp
mov
lock
mov
cmp
sub
inc
xchg
sbbb
iret
clc
dec
jge
out
mov
xor
mov
mov
ja
xchg
ds
sub
fs
pop
rolb
cmc
or
sbb
nop
std
mov
imul
mov
pushf
add
lods
arpl
fists
xchg
xor
push
shrl
ds
push
in
inc
aam
out
push
and
dec
pop
imul
sub
pop
daa
scas
inc
and
xor
xor
insb
leave
sbb
movsb
ret
cs
mov
shr
hlt
jge
movl
sbb
pop
xor
mov
fstps
in
call
xor
pop
sub
scas
sub
int
xchg
cmp
push
push
jae
cld
movsb
mov
aas
and
aas
fsubrs
decb
xor
int3
outsl
push
adc
decl
add
mov
add
xchg
mov
in
and
inc
bound
xchg
push
imul
cltd
das
stos
cmp
xchg
stos
jle
sti
cmc
imul
clc
dec
jnp
jle
cmpsl
mov
insl
pop
lods
cmp
xchg
subb
int3
lret
dec
add
pop
mov
mov
dec
ret
dec
jle
or
inc
loopne
mov
push
inc
and
add
pop
aas
in
das
jne
seta
ss
sub
rolb
cmp
es
dec
mov
in
out
add
dec
fldcw
mov
aam
push
lahf
or
add
inc
fildll
or
and
int3
mov
les
sub
pushf
loop
xchg
lods
mov
stc
icebp
push
faddl
fldcw
or
dec
mov
js
jmp
sub
cmp
adc
cmp
or
je
fdivrl
popa
inc
out
pop
cmp
jno
inc
fidivrs
int
out
jne
mov
xor
jmp
fldt
lock
fnstenv
int3
pop
push
adc
adc
ret
jns
lds
stc
and
rcrl
adc
arpl
aas
fbld
inc
push
daa
mov
sbb
jne
pushf
mov
loope
inc
add
les
ss
fstpl
iret
mov
fidivs
mov
jno
mov
jle
cmpsl
xchg
mov
jmp
and
pop
clc
mov
adc
mov
xor
shrl
test
gs
loopne,pn
mov
mov
dec
ds
push
scas
xchg
mov
inc
cmc
mov
jl
addr16
push
mov
dec
add
push
add
xor
mov
fnsave
clc
jae
inc
cld
popf
arpl
mov
sub
movsl
push
out
sub
jae
cmc
jb
or
fwait
ret
jne
sub
aad
dec
pusha
leave
push
iret
insl
inc
outsb
movsl
dec
aaa
subl
inc
scas
stc
pushf
mov
push
insl
ja
xchg
mov
cmpl
pop
mov
push
push
push
jmp
cmp
adc
cmp
mov
jae
lods
cmc
or
ds
mov
mov
in
pop
mov
lea
cltd
xor
sti
pop
int
xchg
movsl
mov
pop
jns
or
xor
mov
les
fisubs
movsb
lcall
icebp
pop
add
xchg
lcall
or
aas
loope
inc
out
insb
pop
cmpsb
leave
mov
jno
frstor
insl
rorl
and
nop
cld
jle
addr16
pop
loopne
or
xlat
xor
xchg
mov
push
lods
pop
dec
repnz
icebp
and
movsb
xchg
push
sbbb
in
roll
sbb
repz
stc
jnp
pop
into
mov
movsb
jns
aad
xchg
and
popf
or
insb
xor
and
xchg
nop
pop
and
adc
jae
testb
mov
dec
xchg
mov
mov
pop
push
jno
pop
in
fistpll
mov
js
cltd
cmp
stos
aaa
sbb
dec
ljmp
add
xor
pusha
cmp
or
outsb
add
mov
sub
insl
pusha
outsb
clc
mov
mov
mov
pop
ljmp
mov
jp
aas
mov
loope
jl
inc
lret
fsubrs
into
mov
pop
cmc
push
xchg
and
lods
mov
arpl
pop
lret
call
jnp
bound
gs
mov
loope
sbb
ret
clc
jae
mov
cmpsb
fs
add
cmpsl
push
and
mov
cmpb
dec
clc
push
add
jecxz
loop
or
je
test
or
and
outsb
idivb
fs
iret
dec
daa
push
addl
dec
cltd
sub
and
ret
out
in
std
push
insl
lds
jecxz
and
shl
jnp
push
icebp
add
mov
push
sub
cmp
mov
sti
out
lock
in
mov
xor
xchg
clc
popa
sub
sub
inc
ret
repnz
mov
jne
dec
push
sub
in
mov
jae
outsb
push
fcoms
jmp
rorl
push
dec
push
push
outsb
call
inc
xchg
lds
jnp
shl
cltd
sub
lret
scas
mov
movsb
in
cli
and
jl
dec
mov
cmpsl
jecxz
cmpsl
nop
sbb
mov
ss
daa
mull
adc
arpl
jno
fistps
xor
jae
inc
fs
mov
xchg
inc
mov
mov
stos
fdivl
push
mov
xor
jle
add
push
int3
ljmp
jmp
sub
push
sbb
out
mov
add
shll
jne
sub
pusha
test
lcall
test
jb
or
popf
cli
cmp
jecxz
jle
aad
and
mov
mov
fldcw
xor
mov
loope
jne
mov
adc
jge
mov
insb
lret
ljmp
push
fisubrs
mov
mov
jnp
scas
push
aas
ret
jmp
lea
inc
inc
ljmp
pop
mov
push
sbb
pop
push
into
fdivs
rclb
push
cmp
cs
sbb
jle
sub
push
xchg
jb
mov
hlt
push
movsl
and
daa
pushf
test
push
xchg
out
scas
mov
aam
popf
pop
addr16
and
cmp
mov
and
adc
leave
jecxz
cmc
inc
sbb
outsl
call
sub
add
lock
xlat
sbb
inc
add
cwtl
or
or
leave
movsl
int3
incl
sub
aaa
add
lds
pop
jge
pop
enter
movsl
stos
jb
sahf
imul
or
rcrl
in
rorb
xchg
frstor
orl
cmp
mov
js
lea
adc
mov
and
test
nop
push
sub
fidivrl
mov
loope
lret
jae
cld
push
std
subl
pop
cmp
pop
cmpsl
cli
pop
xchg
fdivp
fisubrl
sbb
ret
mov
roll
xchg
jns
xchg
rcr
adc
sbb
imul
or
cmp
out
test
es
ljmp
dec
jo
shrl
mov
stos
gs
sbb
test
lods
lahf
jno
in
dec
adc
ljmp
cs
mov
loopne
fwait
jmp
shll
mov
pop
loopne
sub
testl
push
test
ja
fwait
sti
ja
sub
inc
sbb
and
pop
push
jecxz
cmp
jo
or
dec
movsl
call
pop
or
scas
xlat
adc
add
adc
ficoms
push
mov
adc
out
movsl
fildll
xchg
nop
mov
mov
xor
aas
or
repz
sbb
ficoml
dec
data16
cs
dec
loopne
inc
fsubrl
cmp
jb
daa
lods
outsl
das
cmp
in
dec
hlt
jp
enter
fcoms
add
cmp
or
stos
xchg
movsl
xor
daa
scas
ljmp
cmp
ret
cld
inc
out
rol
jl
in
pop
mov
cld
xor
icebp
xor
pop
fnsave
or
and
fldt
dec
adc
mov
pop
mov
and
scas
lds
mov
dec
imul
fcmovne
addr16
push
fwait
sahf
pushf
cmovne
std
add
and
xor
into
push
enter
mov
or
mov
or
clc
dec
into
shll
je
jns
mov
push
mov
jle
mov
sbb
push
push
or
sbb
mov
mov
lret
push
or
xlat
fistpl
les
adc
fcoms
or
rcrb
test
push
dec
adc
push
pusha
add
std
lcall
fs
dec
jno
dec
or
mov
jg
cmp
ret
pop
cmp
fs
mov
mov
cmc
ret
lock
add
sub
dec
jmp
js
scas
addr16
repz
scas
mov
sub
addr16
adc
cmp
addb
cmp
push
roll
mov
xor
mov
aam
lods
jae
xchg
pop
lods
les
sub
andl
mov
sti
ret
sahf
xlat
cmc
jne
outsb
xor
aam
shlb
cltd
add
mov
inc
ljmp
pop
xchg
adc
cltd
pop
out
ja
inc
popf
or
rcll
add
arpl
jecxz
ss
aam
or
ret
add
push
mov
mov
and
test
and
xor
cmc
push
inc
stos
mov
push
int
mov
faddl
inc
mov
test
das
xor
adc
mov
and
cltd
pushf
or
and
sbb
hlt
dec
xor
out
int
cltd
push
jns
loope
mov
ret
and
std
insb
ror
jg
ljmp
negl
fcomps
or
popf
jmp
add
es
pop
faddp
in
aad
cmp
cld
int3
inc
js
jo
jno
lahf
daa
aad
inc
mov
jg
push
fimuls
pusha
enter
mov
out
mov
mov
imul
adcb
cld
mov
jg
mov
js
clc
sbb
sub
enter
xor
jg
stc
cmp
lret
add
shl
stos
pop
int
add
add
and
add
cmpsl
dec
jmp
mov
mov
sub
pop
aad
testb
add
pop
fnstenv
notl
sub
inc
mov
aad
test
lea
shrl
pushf
jno
cmp
pop
dec
test
push
push
shrb
pop
push
js
mov
outsl
pop
jle
push
pop
mov
jb
ss
and
test
outsl
adc
lcall
inc
call
mov
xchg
mov
dec
or
andl
js
in
push
daa
mov
adc
mov
js
cmp
xor
pop
push
sbb
inc
imulb
lods
inc
xor
mov
or
data16
jle
call
mov
sub
push
jp
inc
lret
nop
jne
add
add
out
hlt
pushf
stc
add
or
shr
pop
xor
inc
mov
sub
jp
mov
push
popa
outsl
js
repnz
add
out
xchg
pop
push
xorb
or
mov
push
and
aam
mov
imul
sbb
jge
sti
jns
adc
std
das
push
jbe
arpl
enter
fldenv
loopne
mov
leave
push
xchg
je
adc
insl
in
lahf
sub
jnp
in
push
insb
imul
cs
aas
and
lret
pop
inc
jns
adc
xchg
sub
adcb
mov
fisubrs
pop
mov
cmpsb
jl
mov
test
out
fiadds
int3
int
sbb
mov
fisubrs
dec
outsb
pop
lret
aas
mov
adc
bound
push
or
xlat
sbb
aad
xchg
popf
add
iret
loopne
dec
scas
mov
xchg
mov
call
cmp
mov
adc
loopne
lods
add
jmp
loop
and
jmp
enter
cmp
jno
xchg
add
das
sub
cmc
push
jmp
arpl
loop
jno
xchg
mov
cmp
pop
test
cld
das
mov
or
push
call
xchg
rcll
dec
sub
insl
dec
scas
mov
ficompl
and
jmp
aaa
dec
vaddsubps
inc
or
xlat
lcall
lods
cmp
cli
fnstcw
mov
outsb
pop
fstl
dec
push
sbb
scas
pop
mov
sub
ret
aaa
jmp
ret
outsb
es
std
or
in
into
cmp
cmp
and
mov
adc
mov
dec
pop
cmp
in
sbb
push
call
xchg
push
fmuls
mov
ja
mov
jle
mov
push
incb
xchg
adc
lahf
dec
pop
arpl
pop
rclb
les
push
or
cmp
pop
jle
insl
les
test
in
mov
les
jbe
jb
fisubl
cmpsl
bound
loopne
and
xchg
and
adcl
imul
mov
sub
sbb
mov
repnz
push
lock
jmp
and
mov
adc
aas
mov
inc
outsl
ror
adc
test
mov
jmp
std
aam
rcl
in
lods
push
sub
fldenv
pop
push
sub
addr16
ret
int
pop
pshufw
mov
fiaddl
sub
dec
ror
dec
aad
jl
xorl
pop
add
mov
add
pop
iret
push
xor
int
pop
cmpsl
adc
ds
inc
dec
ds
mov
in
mov
pop
stos
lcall
incb
or
mov
jae
shll
push
or
xor
cmp
and
mov
in
mov
popa
popf
mov
ret
mov
mov
add
mov
lods
pop
inc
mov
rcrb
int
iret
cmp
adc
dec
jecxz
rorl
add
aas
pop
xchg
xor
dec
add
repz
mov
sub
ja
mov
inc
mov
xor
xor
adc
daa
mov
sbb
mov
out
mov
cwtl
xchg
mov
jl
cltd
js
repnz
xchg
jno
insb
xor
sbb
mov
mov
stos
jnp
xor
enter
adc
subl
mov
or
sbb
adc
xchg
push
scas
and
js
shlb
mov
repnz
ret
loopne
dec
dec
das
aam
and
jno
jle
fmuls
mov
add
xchg
sub
movsl
jno
jbe
cmp
inc
sbb
mov
lret
sub
ficomps
mov
dec
or
lcall
mov
push
call
jmp
arpl
leave
jno
xchg
push
popl
jae
xor
shrb
push
cmp
push
ret
out
test
int
jbe
sub
lret
fs
clc
mull
xor
cmc
insl
int3
cmp
into
movsb
inc
xor
hlt
jbe
and
mov
dec
inc
push
hlt
push
add
dec
and
cmpsl
movsb
ds
add
test
imul
xor
push
mov
push
scas
mov
into
inc
or
dec
jp
mov
bound
dec
jb
dec
lcall
aaa
out
shl
jnp
and
dec
mov
stc
pop
mov
daa
sub
jae
mov
into
movzbl
inc
or
nop
fimuls
push
push
imul
cmpsb
lea
scas
ret
mov
inc
cmpsl
loop
pop
test
mov
out
xchg
xchg
push
cwtl
mov
in
lret
dec
nop
iret
mov
mov
mov
insb
insb
cmpsb
pop
sub
dec
push
xchg
les
icebp
leave
jo
add
cmp
inc
out
lods
cld
xchg
ja
pop
push
test
inc
stc
push
test
in
dec
movb
ret
pop
test
les
push
andl
subl
cmp
hlt
sub
add
mov
xchg
fdiv
lock
outsb
xchg
sahf
add
std
or
xchg
lret
mov
stos
repz
in
jmp
insb
mov
or
sbbb
dec
cmp
sbb
sub
push
stc
mov
mov
pop
bound
lcall
fcoml
inc
pop
jecxz,pt
test
data16
or
sbb
push
pushf
scas
mov
cltd
faddp
aad
cltd
iret
rcrl
fldt
lret
adc
dec
xchg
rcrb
fnstenv
lahf
inc
sub
adc
aas
clc
insl
and
dec
ja
xlat
cmp
outsl
pusha
xor
mov
mov
jns
loop
mov
push
fiaddl
mov
mov
andb
xor
movsl
lods
inc
inc
out
push
repnz
cmp
aam
scas
in
adc
xorl
das
or
jnp
repz
xchg
mov
xor
jb
loop
outsb
movsl
mov
or
pusha
sub
sbb
notl
shlb
inc
mov
inc
xchg
daa
push
push
stos
out
sbb
jnp
jb
or
cmp
and
sahf
add
inc
dec
inc
inc
cmp
mov
insb
orl
dec
xchg
jp
cmpsb
or
je
dec
sub
mov
stos
push
push
xor
sahf
mov
stos
imul
xor
lret
jge
sub
pop
mov
inc
sub
xchg
scas
inc
pushf
sbb
xchg
out
cwtl
sbb
into
xchg
pop
out
and
cwtl
loop
xchg
push
call
jg
adc
push
lods
cmpsl
xor
jl
inc
andl
mov
cmp
jg
mov
andb
ja
pop
add
loope,pt
scas
sbb
jle
fdivs
dec
out
adc
push
mov
bound
xchg
fisubs
push
jns
pop
add
add
jp
jmp
mov
pop
leave
cwtl
iret
mov
dec
fldenv
add
mov
push
call
shrb
jne
cmpsb
jecxz
fiadds
imull
pushf
rcrb
mov
push
mov
fimull
jae
add
push
jo
sbb
sahf
cld
fcmovne
jl
icebp
mov
and
inc
inc
xchg
sbb
cmpsl
xchg
sbb
xor
pop
and
fiadds
test
lods
fwait
cmp
add
aaa
data16
fimull
je
rorb
sbb
xchg
push
mov
and
xchg
adc
iret
in
int
or
cwtl
cmp
clc
add
push
in
loop
movsl
sub
mov
push
lods
roll
pop
jp
imull
mov
frstor
sbb
inc
inc
push
mov
test
cmp
jl
mov
mov
imul
mov
push
add
mov
push
sub
mov
mov
mov
pushf
push
xchg
subl
movsl
inc
lcall
fldl
fdivr
and
pop
addr16
pop
mov
xchg
aas
cwtl
add
mov
cmpsb
sbb
cmp
call
sbb
cli
and
in
jns
test
jg
cmpsb
lret
mov
sub
pop
sarb
mov
sub
loopne
test
push
pop
xorb
in
jae
cmp
rcrl
xorb
dec
adc
xor
mov
je
xchg
stc
cmp
lahf
cmc
stos
jge
mov
sahf
fidivrs
leave
movsl
mov
dec
nop
int
add
subb
std
cmp
xorb
push
cmp
add
pop
hlt
push
push
sub
mov
or
cli
or
ds
testb
loope
lds
xchg
js
lret
test
mov
jge
sub
xor
ds
or
or
sub
dec
xchg
sbb
xor
outsl
inc
repz
dec
jecxz
add
push
fmulp
int3
ret
cmp
shrb
imul
mov
pop
loopne
push
scas
mov
inc
push
mov
and
cmc
adc
enter
push
xchg
es
idivb
sbb
sub
lcall
cmp
dec
mov
imul
shl
testl
movsb
out
mov
sbb
or
movsl
mov
fs
cli
loopne
lahf
ja
outsl
inc
js
pop
data16
cmp
jmp
ret
mov
lds
lea
mov
scas
xchg
js
fsubl
sub
shlb
adc
sub
dec
ljmp
popa
mov
insl
inc
aam
leave
xchg
adc
jmp
std
lods
adc
scas
daa
aaa
jb
lcall
push
out
jl
cli
aaa
dec
push
subb
test
out
mov
adc
adc
dec
mov
sub
add
xor
dec
xchg
inc
mov
popf
dec
sub
adc
add
jp
cmp
mov
sbb
test
lret
mov
pop
ja
adc
dec
stos
pop
mov
sbb
ja
test
enter
and
xor
sub
dec
sahf
fldcw
movsb
mov
lcall
mov
mov
and
fildl
mov
inc
ret
scas
xchg
scas
int3
ds
das
adc
mov
xchg
add
cmp
fsub
les
das
out
xchg
test
addr16
insb
or
sbb
ljmp
leave
fcmovbe
fnstenv
dec
insl
jecxz
sub
insb
rclb
or
jo
push
jmp
scas
push
shrb
push
push
pusha
lds
test
cs
dec
ljmp
and
push
xchg
jge
call
psubsb
mov
data16
dec
lahf
shl
adc
nop
xor
inc
stos
popa
test
pop
or
hlt
cs
push
jne
out
mov
push
jbe
xor
mov
jb
dec
fs
xchg
icebp
outsb
je
cmp
scas
hlt
sbb
mov
test
xchg
sub
xchg
dec
mov
clc
xchg
out
jns
cmp
mov
dec
insb
jl
jo
fiadds
dec
out
mov
push
cmp
sbb
xchg
or
mov
scas
dec
popf
pop
adc
cmpsl
mov
sbb
pop
mov
test
xor
jns
ret
leave
adc
xchg
das
shll
xchg
mov
ja
mov
sbb
mov
dec
repnz
inc
mov
aam
jle
out
inc
lret
mov
shll
roll
inc
pop
xchg
xor
sbb
jecxz
dec
mov
je
mov
adc
bound
jmp
mov
popf
orl
sub
arpl
dec
cmpsl
fnstsw
jbe
ret
repnz
out
inc
stos
mov
dec
cmp
jnp
add
cli
sub
lea
cwtl
pop
jnp
repz
lods
mov
pop
adc
xor
or
lcall
fwait
ror
clc
inc
dec
outsl
xchg
fsubl
out
jp
stos
adc
push
clc
xor
jecxz
in
je
mov
push
xchg
mov
out
inc
mov
and
push
addr16
inc
fldcw
add
lods
cs
inc
inc
fcompl
movsl
sbb
sbb
arpl
inc
xchg
aaa
insl
mov
jge
mov
lret
jmp
int
xchg
push
mov
mov
cli
inc
out
je
add
lods
sbb
ja
pop
ds
mov
jnp
xchg
inc
addb
mov
mul
jmp
stos
xchg
fs
push
insl
cmpsl
cmp
xchg
dec
test
enter
lods
fwait
mov
mov
jne
ret
imul
enter
in
pop
xchg
xchg
jl
mov
xchg
daa
lods
test
push
dec
nop
or
sub
jp
inc
xor
push
adcl
inc
rorl
pop
mov
mov
or
or
jecxz
add
nop
push
dec
shll
sub
movsb
sbb
lods
imul
xchg
adc
ret
sbb
fwait
lea
xor
mov
subl
add
cmp
sub
fidivl
sub
shll
mov
test
rclb
cltd
push
sbb
in
add
xor
mov
sarl
aaa
dec
sbb
cmp
sbb
lret
into
test
pop
hlt
lahf
filds
dec
ds
imul
lock
xorl
mov
bound
fldt
clc
cltd
test
mov
sahf
rorb
aam
call
dec
sub
dec
mov
in
jecxz
sbb
sub
scas
dec
jb
adc
out
sbb
aam
ret
addr16
add
pop
rcl
jns
in
rorl
mov
out
fdivrs
adc
cld
push
add
xchg
andb
inc
jo
push
sub
clc
je
es
ds
mov
enter
vphsubbw
std
push
out
jl
imull
and
test
movsl
mov
inc
adc
int
mov
outsl
aad
cmpsl
ss
xchg
dec
sub
inc
stc
icebp
jbe
dec
scas
fidivrl
js
sub
cmp
mov
rcrb
pop
pop
ja
pop
and
pop
jne
gs
push
hlt
mov
xor
push
cmpl
jno
xchg
push
mov
push
imul
sbb
jo
push
or
jmp
or
jp
inc
fstl
pushf
mov
xorb
fcmovu
fistps
icebp
js
dec
xor
mov
adc
pushf
xchg
mov
push
mov
out
pusha
rcll
dec
pushf
adc
sbb
icebp
into
add
xlat
cwtl
inc
mov
jg
mov
sub
cwtl
popf
or
sbb
call
mov
das
fcomip
push
adc
js
cwtl
jmp
adc
cltd
add
cwtl
mov
xchg
jge
flds
cmp
repnz
outsb
jmp
and
mov
out
jb
and
sahf
xor
lret
jns
aam
lock
aam
fdivl
scas
push
leave
jo
and
sbb
cmp
stc
cmpsl
cmc
add
fwait
lock
fiadds
cli
lds
iret
xor
mov
insb
rcr
dec
sbb
xchg
mov
mov
or
add
shll
sub
mov
inc
xchg
in
jecxz
fsubl
leave
adc
lret
cmp
dec
hlt
in
cmpsb
pop
data16
push
or
and
mov
xchg
mov
cmpl
jmp
and
std
adc
cmpsl
add
sub
mov
pop
cld
cmp
nop
loop
xlat
jb
aas
clc
in
scas
movsl
xor
arpl
pop
arpl
sarl
xchg
sbb
cwtl
fnstsw
cmp
jl
or
cmp
sub
jmp
add
sbb
fildll
add
jo
fsin
inc
xor
add
std
cmp
into
stos
jl
fisubl
pop
repz
scas
pop
push
insb
jae
lret
pop
jg
pop
movsb
data16
mov
push
daa
inc
sub
cmpsb
popa
jge
or
xchg
stos
cli
jns
jb
mov
mov
fs
ss
dec
es
jno
stos
into
stc
push
arpl
adc
jb
sbb
je
mov
lds
dec
mov
fadd
rorb
outsl
insb
iret
movsl
mov
pop
mov
cmc
out
xchg
inc
loopne
cli
lods
xlat
lods
cmc
cmpsb
push
push
xchg
push
je
push
stc
std
loopne
inc
jns
xchg
dec
pop
jge
xor
je
or
ljmp
mov
in
or
in
in
shll
stos
inc
sbb
cmp
pushf
aaa
js
pop
push
loopne
mov
stos
dec
lods
in
daa
aaa
jb
push
stos
ljmp
test
mov
outsb
dec
mov
cmc
xor
sbb
pop
pop
mov
idivb
hlt
stos
or
mov
mov
inc
adc
xor
or
outsb
dec
into
fstps
cmc
pop
inc
lods
das
sbb
icebp
orl
push
hlt
mov
outsb
shlb
xor
or
pop
lods
adc
lahf
cwtl
bound
xor
or
mov
xchg
jmp
inc
mov
sub
repnz
imul
xor
test
stos
leave
push
cmpb
jno
mov
sarb
or
jbe
sbb
filds
nop
scas
adc
mov
cwtl
sar
stc
adc
aas
pop
mov
addr16
sub
xchg
ret
sbb
cmc
pop
push
leave
hlt
or
add
cmp
std
les
repz
cmp
test
jbe
leave
jne
adc
xor
cmp
add
or
inc
sub
push
gs
mov
lahf
cltd
fidivrl
cmp
sub
cld
flds
stos
cltd
stc
aaa
and
bnd
inc
and
and
and
fwait
xchg
sub
ljmp
int3
stos
pop
inc
out
cld
xor
test
push
ss
addb
gs
adc
or
sbb
dec
hlt
lcall
jmp
xchg
dec
ss
xor
add
jne
mov
mov
or
test
imul
sti
xchg
int
aas
push
loopne
in
in
insb
ficompl
mov
inc
shll
les
mov
inc
xchg
je
push
adc
xor
cmpsl
xchg
mov
nop
stc
xorl
insl
inc
add
mov
loopne
or
or
jp
mov
add
aam
add
mov
add
movsl
shl
mov
mov
pop
dec
jo
pop
inc
loopne
or
sub
adc
and
inc
push
repz
sub
lret
pop
test
shlb
mov
std
inc
fwait
in
aam
sbb
jno
push
mov
xchg
xchg
xchg
fnstcw
daa
adc
jge
insl
cmp
adc
jp
push
mov
dec
dec
and
or
and
mov
pop
mov
pop
jecxz
mov
mov
test
xor
jnp
pop
pop
lods
lods
adc
js
and
pop
es
fistl
xlat
mov
dec
test
mov
iret
adc
ret
cmp
dec
fiadds
and
out
cmp
xor
dec
sti
into
std
xchg
stos
push
push
addb
imull
jae
cli
cld
insl
push
jmp
xchg
insl
cmpsb
movsl
popf
mov
call
mov
std
sti
xor
xor
add
insl
xchg
mov
adc
out
ror
sub
addb
sub
loope
roll
inc
push
pop
add
sub
mov
cwtl
shrb
adc
popf
pop
ja
adc
xor
xor
jns
sti
cmp
mov
cmp
gs
adcb
sbb
outsl
cmp
mov
jmp
jge
pop
adc
aam
jbe
nop
pusha
xor
in
lods
shrl
push
mov
and
cmc
mov
push
cld
outsb
and
movsb
jbe
mov
ret
push
loope
aad
push
sbbb
hlt
inc
push
adc
movsl
add
cld
das
loope
lahf
jb
cmpsl
rorb
cmp
dec
jge
mov
icebp
xchg
xchg
repz
mov
jmp
bound
fisttps
or
fmul
into
aam
out
insl
fidivl
push
inc
pop
in
shll
cld
data16
mov
dec
lret
pop
cmp
icebp
jne
movnti
mov
ja
mov
out
push
shlb
adcb
popa
adc
add
aam
mov
push
and
jl
pop
cmpsb
mov
fwait
mov
add
int
cmp
js
pop
inc
xchg
and
lock
add
int3
dec
pop
sub
adc
lds
push
and
lret
sarl
rcl
das
dec
lret
cmpsb
imul
insl
add
mov
add
data16
push
outsb
cwtl
inc
arpl
mov
xchg
jbe
cmp
stos
cli
xchg
and
sbb
lods
xchg
sbb
or
movsb
jle
sbbb
sub
add
stc
add
imul
mov
sti
imul
add
add
xchg
xchg
ljmp
cltd
mov
cmp
loopne
int3
faddl
dec
xchg
testl
ds
mov
ret
mov
mov
fimull
clc
mov
xor
or
imul
dec
jg
dec
ss
aam
sub
int
lcall
jns
jg
ret
mov
jne
imul
mov
addl
call
mov
mov
pushf
in
sub
das
std
and
arpl
in
mov
or
imul
jnp
add
frstor
mov
mov
rorb
jecxz
icebp
jbe
mov
dec
and
int3
fisubrs
push
push
outsb
bound
mov
or
mov
aad
and
out
add
aas
push
xchg
ljmp
imul
push
xor
jmp
push
xchg
mov
or
sub
adc
pop
out
or
les
pop
dec
xchg
mov
je
repnz
cmpsl
jnp
fwait
cmpsl
cmpsb
nop
out
jae
dec
addr16
repz
jo
or
sbb
pop
pusha
and
fadd
icebp
jns
xchg
mov
adc
insl
lahf
sub
into
cmp
mov
frstor
xchg
cs
cmp
lds
out
mov
in
xchg
pop
dec
lahf
sub
popa
sbb
test
js
hlt
pop
adc
js
ss
pop
inc
int
aad
test
xor
mov
cmp
jns
cmc
or
pop
dec
adc
imul
jne
mov
adc
mov
jnp
cmp
dec
cmp
fwait
push
jo
aam
sub
cmp
int3
cmp
idiv
movsl
es
jne
sub
fists
int3
iret
push
jecxz
inc
andl
ss
rcrb
sub
add
and
fldenv
sub
insb
xor
andb
repz
mov
enter
repz
jnp
fs
in
jnp
into
push
icebp
mov
sub
in
xor
sub
xchg
dec
mov
ja
sbb
ds
popf
mov
popf
repz
pop
imul
sub
shlb
sbb
leave
jns
pop
jno
pop
in
or
mov
and
rclb
insl
repnz
sar
sbb
add
movsl
mov
or
adc
inc
cld
jne
fistpl
or
push
sub
mov
lret
out
jns
std
test
xchg
mov
push
ljmp
jmp
jge
inc
scas
not
aam
mov
test
iret
in
aas
dec
fwait
xchg
stos
cmc
lods
sbb
enter
fcmovbe
jae
ror
cmp
loopne
popf
scas
out
scas
les
cmpb
sub
adc
sub
mov
out
push
mov
jle
rcrl
inc
jo
daa
jge
xchg
loopne
sar
jo
push
in
insl
lods
das
mov
repz
push
push
fcmove
je
sahf
sub
out
ja
jo
test
loopne
xchg
push
loopne
pop
add
cmc
movsl
push
xchg
push
lds
push
adc
sub
insl
mov
mov
pop
cld
jge
dec
hlt
adc
in
adc
stc
popf
ror
insb
adc
or
jnp
shlb
xchg
jno
add
dec
pop
iret
mov
outsl
sbbb
pop
push
cli
mov
jbe
nop
aad
push
sbb
push
cmp
test
cltd
lahf
push
insb
cli
xor
pusha
das
aaa
loope
jb
or
xor
imul
mov
cmp
lods
inc
dec
inc
sbb
push
dec
and
std
xchg
mov
outsb
jo
lea
ret
or
lods
repnz
xchg
aaa
in
mov
stos
add
sahf
pop
jle
jno
or
int
gs
mulb
adc
xchg
adc
data16
inc
add
xor
pop
daa
outsl
sub
je
jmp
repz
pusha
mov
or
in
stos
ljmp
fildll
lret
mov
add
imul
pop
cmp
insl
jne
add
fwait
mov
es
sti
cmc
pop
adc
lret
jne
popf
daa
xchg
mov
xlat
push
add
inc
jo
or
sub
aad
and
fidivrs
mov
sub
sbb
inc
fwait
enter
cmpsl
test
add
shll
push
sbb
cmpl
bnd
popa
jmp
repz
pop
mov
xchg
repz
and
sub
jge
outsb
lods
aad
ret
movsl
call
dec
pusha
adc
ret
xor
cmp
ja
jmp
mov
insl
dec
int
test
out
pushf
mov
jp
cmp
xor
cs
xchg
inc
test
pop
in
mov
push
ret
cltd
shll
daa
cmpsb
jae
jmp
dec
lods
repnz
dec
mov
sbb
jmp
cmp
push
js
dec
adc
dec
xchg
lea
mov
xchg
ret
jno
push
cmc
or
dec
add
stos
xchg
add
sub
push
call
ds
lock
lock
cmp
in
shll
test
shll
mov
add
dec
insb
inc
push
mov
gs
xchg
cwtl
ljmp
aas
je
fildl
push
jae
imul
enter
hlt
mov
cli
mov
fdivrs
push
fwait
fwait
rcr
insb
daa
mov
xchg
jne
mov
test
pop
jnp
push
ret
mov
mov
imul
frstor
jle
leave
test
xchg
jecxz
ret
jle
pop
fcmovbe
into
out
mov
aaa
or
mov
sub
insl
jbe
scas
mov
in
add
jmp
adc
inc
xor
cmpsl
jmp
ret
xor
ss
mov
in
cmpsl
jbe
orl
mov
push
pop
and
lock
mov
mov
inc
movsb
push
das
jne
jmp
jnp
jns
push
jl
pop
or
or
mov
aaa
lret
pop
or
add
mov
push
pop
xor
test
sahf
xor
lods
and
and
mov
or
cmc
insl
cli
jae
xor
sbb
xor
add
add
push
lock
cmp
xchg
xchg
lcall
adc
push
mov
inc
jp
xchg
sbbb
add
dec
mov
lea
lods
shll
fwait
inc
in
cmp
rolb
test
fmuls
mov
je
divps
xor
or
pop
daa
movsb
mov
dec
dec
xchg
jl
repnz
push
rcrl
mov
cmp
into
and
je
inc
jp
sub
cmp
addr16
push
test
sub
icebp
enter
mov
add
xor
cli
shlb
or
adcl
fsubrl
rorb
sbb
dec
xchg
mov
lods
outsb
or
add
les
mov
arpl
cli
inc
or
int
lret
lock
stos
mov
out
dec
dec
push
loop
pop
dec
popa
lahf
adc
mov
ja
xchg
and
mov
fwait
push
int
iret
imul
inc
fcoms
mov
push
imul
jmp
mov
push
inc
cli
fldcw
loop
push
mov
inc
and
jecxz
jns
repnz
sar
push
sbbl
add
sbb
push
mov
mov
sbb
push
pop
scas
sbb
repz
jbe
gs
mov
push
sub
jnp
mov
shll
push
mov
mov
daa
xlat
jbe
sbbl
loopne
cmp
dec
roll
in
xchg
xlat
loop
sahf
mov
fnsave
test
push
out
addr16
data16
and
xchg
push
push
movsl
push
push
lahf
lret
in
push
or
lret
mov
xchg
sub
cmp
andl
and
jo
push
jbe
jmp
rol
in
lea
wbinvd
insb
cltd
push
scas
cmp
enter
sbb
xchg
ja
jl
call
jns
jne
aad
mov
repz
cmpsb
push
pcmpgtd
ret
in
sub
movsb
inc
std
leave
cli
fisttpl
or
maxps
push
pop
mov
in
lock
mov
js
xchg
add
ss
je
into
adc
cli
out
fstl
add
cld
xor
jae
xorb
mov
sbb
int
shr
inc
rcr
pop
roll
mov
fs
mov
pop
jbe
or
bound
test
lret
bound
test
imull
or
ret
or
jmp
test
push
data16
in
add
cmp
pop
inc
push
pushf
xor
sahf
cmp
inc
rclb
jns
pop
mov
xchg
jle
ficoms
stc
sub
mov
push
incl
orl
pop
lea
roll
pop
mov
notl
leave
push
or
cmpsl
inc
dec
mov
cwtl
repz
ret
fcoms
imul
push
ljmp
lcall
lret
aaa
xchg
outsl
insl
shrb
xor
hlt
fcomp
and
xchg
or
icebp
and
cmpsl
in
xor
mov
cmp
or
sub
mov
in
jno
dec
sbb
popf
add
ret
movsl
push
fistpll
imul
add
fs
mov
repz
mov
push
dec
dec
das
adc
stc
sub
adc
js
adc
sbb
mov
or
test
inc
xor
mov
and
arpl
sub
repz
mov
push
ds
sti
dec
dec
dec
cwtl
dec
sbb
and
pushf
in
fldcw
pop
adc
fdivr
inc
aaa
push
sub
ds
ret
nop
lcall
xchg
daa
lret
ror
call
push
jno
and
jbe
xor
push
jnp
push
outsl
mov
fs
data16
pop
or
data16
fisubrs
cmp
xor
dec
outsl
sub
mov
mov
int
pop
jae
cmp
lret
dec
xor
xchg
cs
mov
add
adc
rclb
pop
stos
sbb
sar
pushf
test
inc
xor
out
lahf
mov
out
das
push
loopne
stc
in
ljmp
mov
cli
pop
dec
ljmp
iret
gs
cltd
pop
push
inc
test
mov
jecxz
shll
mov
gs
or
push
cmp
inc
inc
rclb
cmc
xor
ret
arpl
push
loop
fiadds
mov
push
push
loope
dec
jge
and
xor
incl
inc
enter
cmp
and
cmp
roll
mov
lods
push
xchg
stos
shll
test
adc
lret
and
jecxz
in
inc
push
cwtl
push
adc
fwait
out
stc
add
sbb
adc
in
mov
or
fisttpl
sahf
out
mov
imul
pop
ror
pop
lcall
cmp
inc
mov
sbb
mov
mov
popf
ror
xchg
aam
arpl
adc
sbb
test
push
or
inc
xor
jmp
fidivrl
int
push
rolb
push
cwtl
fs
jmp
jbe
cmp
xor
dec
jle
inc
sahf
adc
sbb
mov
mulb
xor
and
lahf
repnz
fstp
jbe
frstor
fld
mull
xchg
cmpsb
stos
push
sbb
mov
out
pop
pop
out
cmc
xor
je
jne
lret
lret
add
mov
js
out
ja
insl
mov
mov
stos
shr
ljmp
cli
add
loope
push
movsb
mov
and
ss
cs
push
adc
xchg
andl
or
lret
repnz
mov
mov
jnp
fstps
in
mov
jae
push
sub
xchg
mov
ss
push
add
cltd
repz
push
sub
outsl
lcall
ljmp
mov
xor
aas
mov
in
fsubr
fwait
push
mov
inc
jl
gs
sub
cmp
fadds
xchg
orb
out
xor
inc
fildll
dec
sub
cs
aad
cltd
fdivrs
das
shl
push
mov
lahf
adc
movsb
mov
sub
lret
nop
fistps
out
test
loope
faddl
js
adc
xchg
or
inc
pop
jecxz
rcl
mov
add
jne
cmp
loope
out
sub
mov
mov
repz
dec
lcall
cld
inc
lods
cmpsb
adc
daa
mov
sti
not
push
hlt
pop
jmp
adc
jno
adc
add
dec
jl
dec
lock
in
insb
roll
inc
sahf
dec
push
and
mov
out
loope
pop
mov
ds
jle
mov
inc
das
or
ja
ret
setne
add
mov
and
add
cmp
ss
push
mov
ja
scas
cld
in
dec
jnp
out
add
cs
stos
movl
jl
lock
mov
je
pop
inc
in
jl
push
in
fisubs
xchg
mov
push
add
mov
xor
aam
xor
mov
addb
insb
lcall
cmp
stos
pop
mov
lock
mov
hlt
dec
int
xchg
jp
cli
enter
xchg
sbb
inc
ljmp
jno
xchg
mov
pop
mov
aam
xor
out
mov
xor
sbb
mov
into
movsb
in
fwait
lret
cmc
mov
arpl
pop
repnz
iret
xchg
dec
jnp
sbbb
mov
add
sbb
jb
popa
aad
and
flds
push
ljmp
repnz
jl
adc
aad
sub
mov
in
sbb
sub
gs
clc
mov
repz
test
shlb
pop
dec
cli
jae
or
mov
mov
add
adc
adc
aas
int
inc
ja
scas
imul
lock
adc
std
xorb
cld
mov
push
rol
add
in
pop
rcl
xor
pop
lret
or
and
scas
mov
cmpsl
fimuls
int3
frstor
jne
xor
xor
mov
test
adcb
push
inc
mov
pop
repnz
push
int
sbb
lahf
xchg
int3
int3
lcall
mov
or
jg
aam
outsl
cmp
shlb
and
xchg
add
xlat
aam
jecxz
cmp
shl
das
jo
jle
pop
andl
cli
inc
out
pop
fprem
arpl
je
in
jp
jmp
fwait
and
ret
iret
test
sub
inc
inc
or
loop
repz
push
cmp
mov
jo
mov
hlt
mov
addr16
clc
cmpsb
out
fisubs
cwtl
ficoms
test
out
sbb
adc
pusha
jge
fwait
lret
add
xchg
jo
ret
test
inc
jno
pop
mov
xchg
lods
lea
pop
scas
cmp
sub
loopne
dec
and
or
pop
add
push
arpl
movsb
jmp
cmp
shll
dec
out
push
ss
fcmove
xor
add
loopne
bound
jg
in
jnp
fbstp
dec
pop
mov
mov
mov
cmpsb
pop
arpl
jbe
rolb
xlat
repnz
push
xorl
fisubl
jnp
repz
cmc
insb
loope
addr16
mov
mov
in
adc
sbb
pop
pushf
pop
std
js
mov
ficoms
push
push
adc
clc
ja
test
inc
int
popa
lods
out
daa
cld
pop
push
pop
and
fmul
inc
mov
or
and
in
and
push
and
out
cmp
lahf
test
gs
int3
lods
leave
jae
fidivrl
mov
loop
fiaddl
hlt
jmp
and
sarl
sbb
push
rclb
add
add
stos
sbb
shrl
stos
hlt
mov
add
cwtl
xor
arpl
inc
cmp
push
mov
sub
push
lock
jl
push
jl
lahf
or
pop
cmc
test
fld
nop
xor
movsl
ret
pop
push
imul
mov
and
mov
push
imul
cmp
mov
loop
mov
je
repz
mov
adc
orl
lret
sti
fwait
jae
fnsave
cmp
fimull
aad
sarl
or
mov
cmc
ror
xlat
rcrb
ja
jmp
dec
sub
jnp
adc
fdivs
xor
sahf
dec
adc
shl
push
icebp
int
movntps
lods
fnstsw
xchg
dec
out
jae
adc
movsb
inc
mov
ss
call
outsl
cmp
sbb
jo
int3
push
arpl
scas
pop
adc
pop
incb
in
push
lret
dec
mov
hlt
iret
push
mov
xor
out
dec
dec
xor
mov
fcmovbe
adc
int3
movsb
mov
sahf
mov
inc
mov
add
fidivl
ret
adc
and
ds
lcall
insb
dec
je
lods
cli
enter
jp
rcrb
push
mov
je
dec
cld
mov
adc
pusha
loop
aas
xchg
test
pop
sahf
sti
mov
jmp
sahf
inc
inc
dec
movl
inc
xchg
jecxz
mov
pop
xchg
pusha
data16
std
push
das
mov
push
inc
loop
inc
std
adc
movsb
and
out
mov
jge
jl
ss
push
sub
sbb
add
push
pop
fildll
jo
xchg
add
add
cmpl
ficoml
stc
sub
xchg
or
adc
insl
and
test
daa
mov
in
inc
pop
push
loopne
ss
rcr
jo
push
lods
xchg
imul
add
cmp
aaa
sbb
push
scas
iret
sub
cli
xor
int
addr16
movsb
daa
xchg
sbb
mov
sti
adc
neg
cmp
sbb
stc
lock
lods
je
out
mov
mov
mov
pop
jne
sbb
cmpsb
sub
out
stos
out
in
test
fsubrs
popa
jo
idivb
fsubrs
imul
inc
roll
mov
xor
stos
push
sbb
xor
and
push
pop
adc
or
xor
andps
xchg
jge
inc
mov
lcall
popf
scas
push
call
flds
repnz
cmp
push
inc
in
lahf
jne
pushf
xchg
cwtl
cmpb
sbb
fistpl
xchg
add
test
push
and
xchg
ljmp
icebp
rclb
mov
adc
pop
int
jbe
cltd
idivl
xor
xlat
cld
orl
movsl
jo
sub
xor
xchg
pop
scas
clc
and
test
repnz
sub
in
mov
out
mov
or
cmpsb
add
jo
out
psubsb
int
fwait
add
xor
imul
ret
jae
outsl
loopne
outsl
mov
mov
mov
cwtl
and
scas
inc
mov
xchg
add
and
mov
jecxz
loop
sbb
fimuls
insl
push
pushf
pop
jo
je
incl
jle
mov
sub
mov
dec
xor
andb
andl
adc
mov
popa
outsb
out
leave
mov
mov
lret
inc
js
pop
sub
in
xchg
bound
xor
pusha
test
pop
xor
jb
adc
mov
aam
xchg
test
sbb
into
out
orb
inc
fsubs
adc
icebp
push
lods
imul
movhps
and
sub
ljmp
insl
ljmp
ret
iret
mov
push
or
sahf
dec
mov
pop
fimuls
lcall
push
mov
add
sarb
push
sar
or
test
pop
dec
test
xor
add
cmpsl
cmpsb
jbe
fs
pop
fdivs
test
jb
and
iret
mov
adc
xor
pop
and
adc
std
lods
idivb
repz
pop
cmp
movsb
nop
push
aad
lret
pop
push
xchg
int
adc
hlt
outsb
call
jge
add
or
lds
imul
inc
cmp
pop
jl
add
movsb
in
sbb
mov
clc
or
xlat
les
push
aam
adc
cmp
sbb
and
nop
aaa
stos
dec
push
test
cmpb
push
xchg
push
out
outsb
movsl
les
lcall
mov
sub
addr16
incl
js
adc
xchg
fidivrl
cli
dec
cmp
jecxz
push
sbb
dec
cmp
mov
aaa
xor
out
stc
push
ss
cmp
mov
outsl
or
xor
dec
add
aas
adc
xlat
cmpsl
fcompl
push
jmp
inc
cmp
add
cwtl
and
inc
xchg
inc
in
cs
dec
fcmovnbe
and
adc
mov
add
xor
jg
xor
addr16
and
icebp
gs
loope
xor
inc
xor
mov
scas
xor
test
mov
out
ja
jge
lods
std
int3
push
cmpsl
lods
sbb
and
lahf
movsb
cmc
pushf
aam
repnz
inc
js
scas
rolb
cli
pop
or
test
popf
ss
xchg
mov
cmp
nop
sbb
roll
pop
or
gs
pop
sbb
lds
jecxz
dec
and
lret
ret
xchg
dec
repnz
sbb
sbb
cltd
mov
or
jns
pop
leave
ret
aam
fcoms
in
mov
int
cmp
sarl
and
push
pop
pop
in
xchg
push
pop
divl
mov
divl
jbe
add
mov
xchg
sbb
jbe
adc
dec
fcoms
insb
por
jmp
cld
xchg
pop
mov
mov
fsubs
mov
js
add
das
jo
adc
cmp
gs
push
push
fistl
push
movsl
enter
push
mov
jne
sub
test
jg
arpl
or
leave
pop
jl
jns
dec
jl
loope
xlat
out
int
inc
mov
and
add
mov
lcall
jnp
xlat
jmp
das
pop
loop
ja
xor
pushl
jp
cltd
or
sahf
adc
lcall
popf
lcall
pop
das
and
pop
mov
or
xlat
ss
test
dec
cmp
aad
mov
cwtl
cmp
nop
mov
rcrb
xchg
mov
cmp
and
adc
aam
loopne
loopne
in
or
adc
push
mov
adc
mov
xchg
aad
fstl
sahf
xlat
mov
adc
insl
fdivl
mov
iret
out
sbb
sbb
test
enter
insl
dec
mov
or
xchg
jne
push
mov
addb
push
inc
in
mov
push
rcl
ds
loope
jl
lret
pop
fisubs
scas
xor
repnz
cmp
jmp
addr16
dec
iret
mov
cwtl
es
mov
xor
jge
in
les
and
out
add
js
jg
nop
xchg
mov
aaa
xor
push
insl
bound
out
adc
clc
je
lods
jecxz
lods
xchg
sbb
adc
inc
mov
test
or
popf
rcll
inc
in
loope
mov
orl
ret
sahf
jb
push
stos
rcll
xor
sti
jnp
mov
out
fldenv
ror
icebp
push
mov
in
push
cmp
bound
fwait
dec
mov
out
test
pop
or
xor
addr16
mov
pop
das
fsubrl
xchg
or
mov
push
mov
test
pop
pusha
mov
nop
mov
stos
mov
sarl
dec
and
lods
jb
fistl
in
inc
mov
push
lods
mov
fists
or
sarl
push
push
cmp
fsubl
out
inc
sub
in
pop
ret
daa
cmp
jp
stos
push
cmpb
mov
mov
outsb
into
inc
aam
in
dec
dec
inc
shlb
into
test
inc
das
out
leave
loop
or
add
dec
jl
sub
jb
add
mov
xchg
push
ljmp
xchg
test
cmp
aaa
js
cmp
cmp
xor
pop
add
and
mov
mov
subb
mov
sbb
je
jg
repz
push
cmc
xorl
add
mov
mov
xchg
movsb
push
xchg
xor
in
idivl
mov
ret
mov
repnz
pop
mov
cld
mov
test
cmpl
or
inc
aas
aas
adc
lea
sbb
jmp
pop
jge
adc
mov
add
sarb
cli
repz
popa
inc
ljmp
mov
push
mov
sub
xor
push
hlt
and
mov
mov
mov
mov
test
mov
inc
sbb
fisttpll
pop
jge
adc
xchg
daa
xchg
cmp
inc
sub
mov
xchg
mov
dec
cwtl
fsubrs
out
iret
sub
add
int3
sahf
in
xchg
pop
and
dec
mov
lods
repnz
gs
or
mov
cs
or
push
jle
fildl
mov
std
and
and
cmp
in
or
lods
lcall
lret
and
les
jo
pop
movb
out
rol
mov
add
mov
imul
orb
loop
sub
adc
mov
jl
cli
xor
shlb
stos
dec
ja
push
or
mov
dec
mov
mov
push
mov
popf
outsl
aam
mov
push
outsl
adc
stos
and
sbb
xor
jmp
inc
dec
mov
sbb
roll
mov
push
notl
adc
rclb
std
sub
mov
xchg
loopne
aam
jb
mov
inc
mov
test
jmp
fcom
insb
imul
mov
push
addr16
sub
mov
or
cltd
sub
popf
xor
fstps
sub
adc
mov
jae
inc
mov
ror
imull
andl
add
xchg
dec
sbb
xlat
sub
ret
add
jnp
insl
cmp
testl
add
mov
stos
push
mov
mov
jge
stos
adc
lcall
dec
xchg
cmpsb
mov
js
mov
in
push
jge
orb
push
push
push
mov
sub
in
gs
fwait
mov
mov
or
mov
jmp
dec
adc
and
hlt
pop
iret
aam
enter
xor
mov
mov
sbb
pop
dec
cmp
rcrl
and
movsb
cmpsb
scas
in
shll
shrl
mov
push
push
popf
or
mov
shrb
xchg
hlt
fisubrs
enter
push
call
adc
mov
pop
mov
jg
mov
mov
or
xchg
adc
or
out
inc
adc
lea
neg
add
pop
ja
adc
out
fwait
mov
gs
flds
xor
movsb
lahf
xchg
xor
mov
fdivrl
out
sahf
fs
mov
movsl
out
cmpsl
xlat
mov
leave
xchg
daa
div
test
mov
loope
arpl
repz
adc
pop
cltd
stos
mov
inc
cltd
sbb
jnp
ja
push
sub
lods
mov
jns
inc
dec
gs
icebp
pop
lods
push
ud0
inc
push
scas
mov
fnstsw
push
mov
test
pop
dec
jnp
outsl
xchg
push
repnz
pop
push
mov
sub
in
pop
xchg
rclb
js
push
cmp
repz
mov
mov
int3
dec
adc
lcall
add
sahf
jae
outsl
cmc
daa
ficoms
ret
push
mov
repz
push
aas
mov
call
mov
dec
add
aam
add
loopne
in
jl
push
mov
adc
xchg
sbb
and
cwtl
jge
mov
loop
hlt
cli
mov
mov
push
sub
imul
shll
movsl
jmp
mov
jge
pusha
dec
je
clc
lds
les
cmp
fucomip
jbe
mov
cltd
xor
imul
mov
push
arpl
loopne
sti
jecxz
jp
adc
pop
inc
aad
xor
scas
jg
ja
pop
xor
mov
push
mov
or
cwtl
sbb
call
in
test
pop
inc
jecxz
jno
inc
loopne
mov
xlat
ds
xchg
shr
out
loope
mov
or
js
cltd
cmp
mov
add
sahf
shll
jb
push
test
repnz
pop
and
jmp
rcr
scas
mov
push
mov
sarb
rolb
mov
mov
jge
popf
inc
push
mov
mov
mov
sbb
or
sub
arpl
bnd
out
aad
cli
mov
jle
aas
and
clc
popa
inc
out
inc
and
dec
lahf
jmp
pop
and
or
pop
mov
aaa
and
jne
cmpsl
int
cmp
pushf
jl
lret
aam
fnsave
addl
jo
movsl
imul
pop
aad
aam
jmp
mov
push
xchg
add
cmp
mov
sbb
pusha
sub
shll
enter
es
cmp
sub
jmp
sti
call
fwait
jge
and
lds
ja
ffree
loopne
sahf
pop
loop
fidivrl
mov
cmp
sahf
lds
mov
cmp
ja
or
push
xchg
or
cltd
mov
cld
shl
stc
repz
stc
test
mov
fwait
inc
pop
repz
into
mov
add
dec
ret
dec
xorl
shll
or
mov
pushf
cmp
lret
jg
sbb
insb
sbb
mov
movsb
aas
jle
ljmp
lret
jno
jmp
sbb
sub
nop
adc
xchg
fcmove
fwait
inc
lods
fldl
aaa
jmp
push
insl
dec
subl
or
cmp
stos
or
cmp
stc
jb
xchg
fdivrs
pusha
sbb
and
in
dec
push
mov
in
shlb
xchg
mov
cmpl
and
aam
imul
pop
jae
adc
adc
sbb
jnp
dec
ret
push
arpl
lret
xchg
loope
mov
outsl
pop
je
loop
sub
mov
incb
adcb
leave
in
imul
adc
gs
pop
pop
pop
cwtl
sbb
mov
push
es
push
popf
and
dec
adc
fisubrs
in
lcall
xchg
xor
jno
lds
xlat
sahf
adc
aaa
xor
call
out
rcrb
jmp
mov
xor
ljmp
pop
inc
dec
add
sbb
fnsave
shl
and
mov
adc
jecxz
mov
ja
loope
mov
push
pop
loope
xchg
pop
inc
sub
mov
sub
jns
lcall
andl
inc
and
pop
cltd
pop
test
dec
popa
pop
jbe
pop
jl
sti
bound
jp
enter
push
adc
xchg
lcall
js
push
sarb
lea
xor
mov
adc
shlb
mov
out
call
je
xchg
push
mov
mov
incl
adc
pop
dec
into
xchg
clc
adc
andl
and
movsl
sbb
jb
mov
jno
cld
mov
and
scas
pop
sbb
sbb
push
rcr
cmc
mov
out
sub
js
addr16
mov
add
orl
imull
ss
sti
ljmp
lods
pop
divl
sbb
shrl
movsl
frstor
mov
aad
fs
std
adc
mov
xchg
arpl
xlat
insl
xchg
sub
test
aam
loop
and
jne
mov
mov
sbb
xor
mov
ss
pusha
sbb
arpl
xor
outsl
hlt
ds
or
xlat
jge
repnz
cmp
ror
les
cmp
fbstp
xor
je
push
push
mov
adc
push
mov
sub
jne
inc
mov
sub
aas
jne
lret
cmc
popa
frstor
fidivrs
xchg
mov
xchg
jge
fs
int
xor
clc
cmp
xchg
outsl
js
inc
cmpsb
mov
iret
scas
std
pop
fwait
insl
fcoml
and
mov
std
xchg
xchg
adc
xor
jo
pop
push
inc
ret
mov
add
mov
dec
xlat
in
add
mov
inc
test
loopne
dec
and
jns
lcall
pop
push
aaa
punpcklbw
jbe
and
xchg
cmc
xabort
jae
lret
sldt
leave
call
mov
ret
sub
dec
dec
mov
or
js
dec
fs
ss
repz
pusha
xchg
jne
int3
lds
mov
sti
pop
dec
add
jne
pop
jo
mov
and
jbe
push
sub
mov
ret
cmpsb
xor
outsl
xor
adc
xchg
mov
mov
or
push
push
arpl
mov
test
push
iret
loope
jne
xor
out
mov
scas
ret
stos
data16
cld
imul
aas
pop
ja
sub
dec
dec
in
sahf
cmpsl
cmp
adc
push
push
pop
adc
mov
cmp
aaa
inc
and
and
int
cli
lret
test
stc
daa
mov
fisubs
sub
dec
fcoms
daa
mov
or
sub
lahf
cmp
vmovsd
inc
jge
filds
sub
out
dec
popf
xor
sub
lret
ljmp
loop
sbb
out
in
pop
mov
in
ja
addr16
pop
xorl
dec
in
sub
inc
subps
add
stos
js
push
sbb
xchg
shll
xchg
mov
add
adcl
sbb
int3
ljmp
adc
mov
out
imul
push
fsts
jmp
icebp
mov
add
or
ret
stc
mov
mov
sub
ficoml
fisttpl
dec
pop
cmpsb
mov
dec
testl
lret
mov
mov
pop
popa
and
insl
in
jp
xor
xor
call
push
xchg
jl
push
es
cmp
and
inc
sbb
cmp
cli
stos
dec
and
cmp
pop
inc
cwtl
inc
sub
stc
pop
int
shlb
and
dec
jnp
or
je
aas
mov
aaa
or
ret
mov
out
fistl
gs
in
mov
xchg
ja
cmpsl
xor
adc
popf
out
adc
mov
test
int
fnstcw
std
cmc
aam
fcmovne
leave
outsb
pop
ret
out
lcall
enter
mov
mov
add
ds
scas
pop
imul
into
pop
lret
aam
jo
add
out
pop
xor
pop
mov
imul
push
pop
fstp
sub
std
jg
xchg
outsb
stc
pop
adc
push
mov
push
mov
leave
roll
inc
xchg
inc
xor
adc
inc
xchg
mov
jbe
lret
jmp
jno
xor
rcrl
arpl
aas
loope
jne
push
je
fisttps
mov
fidivrs
enter
cmpsl
cwtl
fucomi
dec
dec
shl
mov
xor
jno
or
xchg
dec
and
cwtl
xor
adc
mov
ret
dec
or
add
cltd
movsb
push
ljmp
pslld
loope
pop
jge
mov
imul
dec
aam
movsl
std
adc
and
cmpsb
sahf
mov
inc
fnclex
add
mov
lret
ret
out
pushf
inc
divb
jg
xor
adc
jns
call
xorb
xor
push
test
jmp
addr16
out
pusha
or
or
jg
or
arpl
mov
xor
icebp
rcrl
aad
les
addb
cmp
mov
sti
lret
dec
ljmp
mov
cmp
jmp
and
aaa
shl
jmp
into
out
enter
arpl
sub
leave
push
flds
outsb
sahf
adc
sub
aam
and
xorb
push
inc
and
or
mov
ljmp
pushf
out
dec
das
movsb
mov
jb
aad
test
dec
jmp
aaa
mov
and
sbb
push
inc
xchg
mov
sub
mov
fisubl
cmpsb
and
mov
data16
push
sub
rcll
je
xor
ja
mov
je
dec
addr16
scas
inc
cmpsl
ds
push
pop
mov
cli
sbb
or
mov
movsb
hlt
movsl
mov
pop
mov
inc
or
mov
lret
aad
insb
es
and
inc
push
aas
imul
xchg
imul
dec
imul
das
adc
sbb
and
fcmovu
shlb
insb
cmp
insb
sub
movsl
pop
fstps
testb
lret
fcompl
dec
inc
dec
jno
jmp
gs
lods
inc
cmp
jae
push
lret
inc
adc
and
cltd
push
lcall
test
leave
incl
inc
mov
hlt
stos
xchg
cmp
xchg
outsl
push
cmp
and
scas
aad
add
in
test
dec
aas
in
mov
and
xor
cmp
test
bound
and
xchg
stc
fistpl
dec
and
mov
pushf
cmp
movsb
pop
enter
mov
mov
dec
push
iret
mov
ret
scas
cmp
push
xor
insb
cmp
mov
stos
ds
and
daa
aam
or
sbb
xor
pop
mov
mov
xchg
xchg
repz
loope
aas
jo
jle
add
sbb
pop
xchg
sub
sub
xor
cmpsl
scas
push
fistl
and
into
cmpsl
clc
jbe
cmp
sbb
lock
test
mov
loope
sub
and
pop
sub
mov
adc
leave
push
fisttpl
dec
call
add
loop
cltd
mov
fsubr
cmp
push
sub
insl
outsb
adc
ss
or
fisubl
mov
or
loop
movsb
mov
jno
test
stos
hlt
int
add
cmc
filds
xchg
inc
in
push
insl
xchg
out
mov
lock
inc
mov
rcll
or
shl
adc
rcrb
jl
sarb
push
jno
incb
xlat
sub
push
cs
ret
stos
arpl
push
in
jp
into
sbb
ja
dec
out
xchg
mov
lret
add
ret
cmpsl
sbb
adc
bnd
test
xchg
sub
cmp
cmp
mov
jmp
ror
andb
dec
sub
add
sbb
in
jp
cs
mov
into
push
xchg
out
mov
inc
mov
dec
mov
push
inc
xor
dec
adc
push
fs
ljmp
mov
xor
cvtps2pd
push
xor
cmp
fsts
imul
in
sub
xchg
jmp
xchg
push
out
aas
in
js
movsl
inc
es
xchg
fbstp
cmpsb
push
sub
fwait
std
adc
mov
cmp
xchg
stc
les
sahf
or
adc
add
sub
push
aam
pushf
push
nop
iret
ljmp
mov
dec
push
insb
popl
sub
xor
xchg
cmp
aam
out
lock
inc
sbb
pop
neg
jae
jno
in
cmc
xchg
addr16
mov
fdiv
inc
call
adc
clc
ficoms
pusha
test
sub
xchg
aam
cmp
out
xchg
dec
pop
sbb
shrb
mov
mov
xchg
xor
xchg
dec
in
and
js
out
xorl
jle
enter
adc
arpl
dec
pop
decl
push
push
push
in
dec
fidivrl
adc
cmp
sbb
pushl
stos
imul
push
push
rorl
sbb
jg
arpl
cmp
mov
dec
cli
xchg
dec
ret
scas
jle
clc
lret
pop
adc
mov
mov
in
xor
rcl
xchg
pusha
aad
mov
push
das
jnp
mov
cwtl
lods
filds
mov
adc
and
es
fbld
and
mov
sub
test
imul
inc
enter
cltd
or
mov
popa
mov
jge
pop
pop
mov
xchg
int
movsl
sti
dec
out
xor
loop
pop
add
pop
mov
ret
in
mov
cltd
fistl
or
popf
icebp
insl
ds
imul
mov
fucomp
or
push
movsl
out
sbb
ljmp
mov
push
and
mov
test
js
dec
ret
pop
stos
fdiv
scas
sub
jmp
fisubs
in
lcall
test
out
push
test
dec
xor
pop
xor
fsubrs
adc
cmp
add
lret
cld
leave
cs
out
and
cld
test
loopne
out
hlt
js
push
sbb
lods
pop
inc
inc
mov
insl
sbb
stos
push
outsl
pop
repz
scas
lahf
push
repnz
imul
mov
pusha
ret
mov
or
jecxz
bound
stos
inc
mov
dec
mov
fmull
cmp
jmp
out
or
cmp
lret
pop
test
jnp
adc
aam
in
popf
nop
fstp
xor
pop
pusha
fisubrs
mov
sbb
mov
and
add
and
aad
es
out
mov
shlb
data16
lods
je
les
jp
xchg
arpl
inc
xor
loop
push
fidivs
jbe
cmpl
jae
cmc
mov
dec
xchg
sbb
lcall
mov
fsubl
insb
loope
loopne
ja
out
push
sbb
test
and
mov
pop
xor
lods
sti
in
iret
add
dec
jmp
xor
inc
dec
xchg
ss
xor
popa
push
fsubrp
sbb
repnz
jo
outsb
mov
pushf
test
movsb
inc
je
xor
mov
pop
or
cmp
stos
xchg
push
rcrb
pop
lods
lahf
xchg
xor
lods
mov
lods
jmp
add
aas
iret
cld
aaa
dec
dec
lahf
mov
std
out
xlat
ret
enter
push
loopne
xor
roll
inc
jnp
sub
movsb
fstl
cs
jecxz
mov
sub
xchg
cmp
shl
fwait
inc
test
imul
dec
mov
dec
add
xor
add
rcll
cltd
fists
lret
iret
outsb
adc
js
daa
out
outsl
test
test
mov
xor
int
mov
jg
mov
push
daa
jle
mov
dec
and
jge
fldlg2
cld
sti
cmp
fadd
out
int3
lahf
std
testb
cmp
pop
ret
cmp
pop
lods
lcall
fwait
nop
fisttpll
push
jle
adc
inc
icebp
out
ret
enter
pop
xchg
lret
mov
pushf
out
sahf
cmc
pushf
mov
test
loopne
popl
imul
sbb
test
cwtl
dec
jmp
sub
ss
xchg
mov
mov
ret
push
cld
xchg
mov
pop
shll
mov
sub
and
pop
mov
loopne
jae
shll
push
fwait
and
pop
add
inc
fldcw
dec
outsl
cmp
push
push
sbb
sub
or
mov
and
sarl
in
mov
rcrb
fwait
xor
lods
dec
cmp
xchg
fcmovbe
inc
mov
cmp
add
popa
pop
sahf
dec
adc
aad
repnz
testb
mov
sub
or
pop
lea
cmp
ja
or
mov
shll
push
idivb
lock
push
add
inc
fildll
jp
shrb
fldl
cld
lods
sarl
mov
push
jge
icebp
in
pushf
cmp
or
and
clc
mov
cmp
and
dec
cmp
ss
fsts
cmovl
imulb
mov
mov
addb
call
es
mov
fimuls
inc
subl
jae
jnp
repnz
dec
in
insb
scas
fldenv
push
sbb
addr16
xor
add
popa
sbb
aaa
inc
sbb
and
rorb
fstl
push
insb
gs
pop
sub
lret
and
or
xorl
jl
jecxz
test
in
scas
loopne
push
loope
and
insl
aad
iret
mov
mov
lods
cmp
lcall
fs
inc
xor
movsb
and
fsubrl
mov
ret
test
lods
std
outsl
mov
pop
or
mov
mov
add
inc
test
adc
sarb
xor
inc
cmp
out
std
push
jmp
add
jne
jnp
jmp
dec
and
lods
jecxz
imul
sub
adc
aas
fistps
xor
push
xor
cmpsl
and
cmpsb
or
sub
fadd
lcall
cwtl
scas
add
dec
jbe
sbb
adc
pop
push
sar
adc
jne
xchg
push
js
add
movsl
jl
out
mov
dec
xor
jg
cmpsl
aaa
rorl
loope
inc
xor
inc
rolb
lock
call
mov
imul
lret
inc
mov
pop
push
cs
push
repz
js
cmc
pop
jo
and
mov
filds
mov
lods
and
and
in
dec
out
jp
sarl
inc
xchg
push
jl
ss
cmp
mov
jo
and
rolb
dec
mov
xor
push
dec
inc
ficompl
outsb
sub
dec
xchg
sub
int3
and
sub
jo
dec
in
sub
xlat
addr16
out
testl
inc
inc
cmc
pop
in
hlt
popa
xlat
xor
rolb
inc
scas
pop
sub
jae
fistpll
sar
xlat
pop
add
lods
push
pop
icebp
fldz
decb
sub
push
sbb
and
movsb
push
cmp
push
push
fcomps
movsb
xchg
lock
ret
das
sbb
pop
inc
arpl
ja
pop
cli
pop
pusha
cmp
sub
adc
lret
mov
sbb
test
mov
or
xlat
inc
daa
sub
int
push
je
test
dec
jnp
or
popf
in
pop
decl
inc
test
aaa
mov
outsl
jmp
jg
lods
dec
das
push
inc
iret
dec
mov
mov
sub
xor
sarl
aas
orl
stos
ror
in
cli
adc
or
dec
addl
mov
fsubl
mov
cli
stc
rcll
loop
repz
in
cmp
rorb
xlat
loopne
mov
jb
clc
adc
arpl
mov
adc
rcr
sbbb
fstl
adc
cmp
sub
addb
mov
adc
push
ret
push
push
lods
ror
outsl
fs
test
fxch
rcr
and
jmp
filds
dec
xchg
sbb
out
sti
xchg
fs
sub
in
inc
add
mov
fcompl
mov
push
das
sub
int3
and
cmp
jnp
cli
cli
dec
adc
test
mov
sbb
sbb
add
lock
cmc
addl
or
out
sahf
int3
mov
or
inc
repz
shll
shll
stc
push
ljmp
and
mov
and
repz
fdivrl
add
out
aaa
sbb
movl
sbb
or
sbb
repz
fnstcw
daa
add
aas
xlat
mov
shll
movsl
sbb
daa
push
or
fsub
adc
xchg
cwtl
sbb
dec
mov
or
dec
ficomps
jge
xor
sbb
repnz
call
sbb
das
in
jge
add
mov
and
test
mov
xchg
fmuls
xor
insl
push
xor
stc
aas
aad
insb
dec
sub
sahf
movsb
or
rorl
push
shrl
test
or
jo
cmp
push
and
hlt
xchg
push
test
dec
push
mov
xor
sahf
and
les
enter
aaa
jbe
mul
mov
imul
jle
pop
or
mov
dec
in
add
test
or
nop
xor
push
xchg
pusha
push
cli
sbb
clc
rorl
sti
pusha
mov
xchg
data16
fucomip
es
push
sub
icebp
mov
adc
movsl
add
cmc
in
mov
imul
mov
adc
in
sub
in
jne
mov
fwait
lcall
lcall
rcrl
adc
cs
add
dec
mov
aam
cmc
xlat
jnp
jns
xor
mov
inc
adc
jl
xor
sub
and
rcrb
mov
lahf
xorb
adc
bound
cld
into
sub
sbb
add
mov
mov
pop
movl
push
iret
cmc
add
cmp
adc
mov
mov
pop
testb
sahf
mov
roll
lret
mov
cwtl
dec
inc
jbe
mov
cmp
dec
push
cltd
shll
push
fcoms
push
adc
cmp
mov
xchg
pusha
aas
mov
or
cmp
rolb
pop
aas
mov
mov
dec
mov
pop
sbb
or
subl
movsb
jg
loopne
cvttps2pi
fistpl
adc
lods
leave
lahf
and
sub
add
repz
icebp
mov
hlt
push
stos
mov
mov
push
in
or
scas
call
shll
pop
mov
sub
sbb
cmpsb
and
push
add
dec
es
addr16
cmpsb
xor
xchg
fadds
and
test
jg
push
inc
mov
frstor
xchg
jns
or
and
xchg
mov
pop
dec
enter
jnp
sbb
rorb
insb
pop
flds
arpl
and
jle
insl
fs
loop
xchg
xor
jecxz
xorl
adc
push
sub
jnp
sbb
cwtl
rcrb
pop
fcmove
outsl
jmp
pop
cwtl
cmp
adc
and
lods
mov
dec
fwait
mov
mov
cld
lret
idivl
add
lock
ret
cmp
ret
sbb
mov
dec
sbb
push
ret
cmpsb
icebp
test
adcl
xchg
icebp
add
inc
into
add
pop
fstpl
or
xchg
sahf
xchg
adc
popf
and
or
jecxz
push
push
push
push
imul
push
inc
push
shll
insb
mov
test
add
std
dec
loopne
pop
out
mov
cwtl
clc
das
push
mov
jp
pusha
xchg
popf
add
mov
push
mov
mov
test
jecxz
fmuls
fmull
dec
outsb
push
test
adc
adc
sbb
pop
mov
add
cmpsl
scas
cs
sub
in
pop
loope
addr16
leave
int
js
jp
nop
mov
push
xchg
outsb
sub
fisttpl
das
in
icebp
and
jle
or
scas
dec
loopne
cs
out
shll
and
xchg
fimuls
jp
dec
movsb
std
sub
mov
pusha
es
lret
stos
mov
repnz
sub
ja
cmp
imul
in
sbb
ficompl
lock
fcmovne
jmp
or
dec
push
mov
jl
dec
adc
push
sub
das
fistpl
aaa
lock
and
nop
cmc
inc
shlb
aas
sbb
xchg
adc
pusha
test
pop
fwait
repz
sbb
mov
push
call
push
xchg
sub
sbb
mov
xchg
dec
jmp
dec
lret
test
dec
pop
pop
and
pop
dec
pushf
lods
xor
ret
xchg
xchg
clc
jne
fstl
or
addr16
sub
or
or
pop
call
mov
repz
fwait
lea
push
pop
jle
cld
cltd
roll
cmp
in
pop
mov
sti
arpl
fwait
add
loopne
cmpl
and
pop
sbbb
jp
sarb
test
in
dec
add
pop
sub
push
in
pop
pop
mov
loopne
push
ret
sub
sarl
in
cs
cmp
outsl
imul
jns
xchg
fcoml
mov
and
ret
test
fwait
sub
xor
dec
lods
shll
inc
hlt
and
fistpll
fildl
ret
je
test
add
and
into
adc
in
es
or
dec
ljmp
in
loope
cmp
mov
clc
in
push
insb
insl
dec
pushf
xchg
jb
dec
jle
icebp
ljmp
or
pop
add
js
js
or
stos
lods
mov
mov
xchg
les
jns
add
jecxz
sub
or
mov
nopl
inc
repnz
jb
mov
popa
xchg
jecxz
jecxz
arpl
fcomip
xor
sub
insl
push
inc
mov
fnstcw
in
xor
jae
sub
fdivrp
or
push
jp
lock
adc
jl
mov
out
dec
in
arpl
inc
xor
fninit
mov
cmpsb
mov
or
addb
aas
add
pushf
push
mov
or
jo
adc
cld
xchg
loop
push
std
je
add
or
nop
mov
sbb
sub
xor
icebp
or
stos
xchg
bound
fisubl
sbb
inc
cmpsb
lock
sub
cwtl
lods
jl
in
inc
imul
mov
mov
xlat
aam
pushf
ja
or
shlb
push
add
pop
cmp
pop
dec
jmp
notl
pop
mov
jae
scas
add
sub
push
dec
movsl
pop
jmp
sbb
pop
jbe
inc
xlat
js
jge
cltd
mov
xor
rcrl
mov
pop
gs
lods
cltd
jo
dec
ds
cld
imul
mov
and
jmp
in
je
mov
and
add
aad
xchg
xor
scas
xor
loope
pop
dec
insl
into
xchg
or
cmp
pop
xor
xor
or
jne
jp
push
dec
gs
into
jb
out
mov
mov
movsb
inc
push
int3
add
push
lcall
lods
jge
and
push
movsl
enter
aaa
stos
loope
sub
sub
ds
sub
loopne
add
cmpsl
jb
mov
dec
xor
repz
ret
dec
mov
add
cltd
push
les
repnz
sahf
cmc
xor
in
jge
inc
mov
or
mov
mov
or
lahf
mov
cwtl
jl
bound
nop
repz
in
add
cmp
or
inc
ja
xchg
lods
out
sub
out
enter
sub
sbbb
scas
test
sbb
add
push
je
add
mov
loopne
push
addr16
mov
mov
mov
pop
out
add
lds
daa
mov
or
mov
inc
lock
shrb
icebp
sub
fisubs
ror
xchg
mov
cmp
scas
pop
pusha
sub
nop
repnz
out
in
shlb
xchg
inc
cmpsl
out
mov
loopne
scas
popf
push
lret
lahf
out
popf
std
push
ds
rorb
rcrl
or
and
dec
out
shrl
jno
lods
jmp
xchg
mov
fst
xchg
and
cmc
or
jge
pop
mov
icebp
daa
or
add
lock
xchg
dec
jl
mov
push
shrl
or
pop
int
stc
sub
adc
pushf
mov
push
xor
rcrl
enter
stos
mov
mov
mov
test
xor
into
dec
cmpsb
push
bound
adc
fwait
jge
fdivp
daa
jmp
jne
push
in
push
cmpsl
ficompl
test
fwait
sub
stos
aaa
lret
jbe
lahf
aas
fcompl
fs
out
and
mov
jmp
jle
loope
leave
shr
dec
jecxz
xorb
mov
sbb
lea
arpl
sub
orb
xor
push
int3
clc
or
jns
shlw
jp
or
push
xor
insb
out
sub
out
dec
pop
lods
mov
sahf
push
movsl
sub
ret
cwtl
bnd
adc
push
sub
mov
xor
push
mov
jb
icebp
popa
movsb
pop
lds
sub
cmp
add
inc
rcrb
jmp
dec
aad
stos
jbe
pushf
add
xchg
out
or
lret
icebp
dec
stc
cmc
clc
fstps
xchg
ja
mov
or
icebp
rorb
and
xchg
ret
int3
xlat
fucomip
out
test
inc
xchg
or
lods
cli
aad
jge
or
xlat
cli
ds
mov
push
pop
lahf
inc
pop
adc
insb
enter
xor
jno
push
mov
push
add
icebp
insb
jle
adc
fcmove
pusha
test
mov
movsb
mov
jmp
aaa
xor
lock
or
mov
pop
lods
mov
xchg
sub
jmp
ss
dec
movsb
jbe
les
mov
mov
cmp
push
movsb
jp
add
pop
sahf
mov
lods
pop
push
xor
out
sub
andb
lods
xchg
sbb
xor
fldenv
push
stos
lret
sub
fmuls
push
pop
pop
addl
cmp
jns
mov
or
shl
test
sub
popf
push
loope
dec
cmpsb
rcrl
scas
adc
aaa
leave
ljmp
repnz
shll
jp
add
and
push
mov
fldcw
push
jecxz
stc
test
popa
xchg
xchg
add
popa
mov
lret
sub
scas
dec
sub
ss
out
fidivl
mov
push
fdivrl
pushf
stc
call
adc
cwtl
xor
cmpsl
cmp
push
or
push
mov
clc
aas
mov
lock
fnstsw
repz
jmp
dec
aaa
not
icebp
in
pop
jle
test
repnz
repz
cmp
xor
jno
les
mov
test
inc
fs
repz
sub
icebp
pop
pop
mov
ss
mov
sbb
xchg
lods
or
cmpsl
adc
adc
add
xchg
ljmp
jmp
leave
imulb
adc
jb
add
stc
sub
push
int
pop
test
out
fdivrp
xchg
fwait
fwait
mov
cmpsl
push
mov
fisttpl
pushf
ss
add
pop
in
out
mov
addb
mov
lret
jge
and
push
inc
jns
add
adc
imul
sub
pop
leave
popf
aas
hlt
sub
push
pop
lret
push
ret
xchg
int3
jg
ljmp
aad
dec
stos
inc
xchg
loop
mov
into
sbb
adc
sub
add
repnz
repz
in
add
push
cmp
inc
jl
mov
push
cmpsl
mov
sbb
je
aas
dec
or
enter
or
sub
ja
stos
mov
push
jl,pn
icebp
lods
lret
mov
dec
push
shll
and
scas
dec
jmp
hlt
cmp
mov
inc
loop
mov
inc
insl
mov
push
cwtl
psubusw
dec
and
imul
popf
mov
dec
psubq
and
adc
or
dec
scas
push
push
sarl
xchg
outsb
int3
pusha
and
add
mov
mov
sbb
call
loop
outsl
push
push
push
jne
adcb
mov
jp
jecxz
push
pop
add
cmpsb
hlt
ret
inc
pmovmskb
arpl
ljmp
rcll
aaa
lcall
jmp
xchg
out
dec
inc
ret
dec
sbb
adc
or
arpl
inc
in
cmp
cltd
push
bound
lock
jp
inc
cmc
scas
xchg
push
call
or
inc
mov
pop
test
pop
mov
xor
iret
cs
sub
pop
cs
push
js
lods
sti
xor
jb
aas
jle
push
mov
lret
fs
add
fs
jns
lods
in
addr16
aad
inc
jg
daa
ljmp
jecxz
push
or
dec
mov
fdivl
imul
sarl
xchg
dec
jl
sub
pop
add
in
cli
xchg
sbb
or
in
sub
clc
push
mov
sbb
xchg
repz
pop
outsl
cmp
xchg
sub
cmp
mov
test
mov
lds
sbb
mov
xor
insl
ds
xchg
es
out
add
outsl
call
mov
sbb
mov
xor
imul
fistps
sbb
pop
andl
addr16
iret
fisubs
mov
mov
mov
out
adc
xchg
inc
pop
lret
out
orl
int
pop
push
mov
mov
inc
imul
sub
std
adc
push
mov
mov
cmp
and
sbb
and
insb
jns
ret
into
sub
pop
ret
cmp
pop
aam
mov
and
andb
dec
repz
outsb
ret
mov
xchg
cmpsl
push
xor
rclb
pop
lahf
sub
adc
mov
dec
je
imul
mov
sub
mov
dec
xchg
inc
ja
add
int
xchg
sbb
ss
pop
divb
jno
mov
mov
les
hlt
scas
mov
popf
add
xchg
mov
cmp
fs
hlt
add
loopne
sbb
arpl
or
jns
push
jle
in
pop
mov
pop
cld
test
xchg
aad
mov
xchg
out
xchg
jnp
mov
imul
jmp
push
mov
mov
sbb
fdivrp
xchg
mov
aaa
xchg
xchg
xor
xchg
inc
repz
ss
lea
pop
test
stos
loope
adc
mov
in
jmp
dec
or
dec
xor
push
sbb
lcall
fmuls
inc
nop
iret
push
and
jnp
imul
cli
mov
and
xchg
or
mov
jecxz
or
je
fnstenv
mov
xchg
jg
lcall
cmp
clc
hlt
fldenv
stos
jae
or
mov
mov
ret
fistps
xchg
ret
cmpb
andb
stos
add
clc
pop
dec
aas
cmp
ret
in
mov
push
sub
into
clc
fildll
repnz
aaa
lahf
arpl
cs
pusha
jo
push
mov
mov
mov
sti
cmc
add
mov
xchg
sbb
insb
push
mov
mov
repz
pop
jmp
testb
repz
shrl
xor
sti
cmp
sti
add
dec
and
xor
sti
call
lds
cmpsb
lock
pushf
fs
ss
adcl
push
pop
pop
add
subb
add
lods
xor
dec
fisttpl
in
adc
icebp
mov
sbb
icebp
push
arpl
aas
pop
pop
andb
fistpl
push
sbb
fistpl
and
popf
daa
rcll
outsb
or
sub
xchg
enter
out
cmp
jae
dec
lret
lds
mov
dec
push
push
add
jmp
sbb
loop
subb
ret
xchg
xchg
sbb
dec
mov
sbb
xor
lahf
pusha
div
idivl
sti
jp
and
mov
lods
addr16
cmp
jg
filds
sbbb
dec
mov
cli
shr
mov
pop
pusha
jmp
dec
lret
int3
adc
jmp
les
mov
add
or
cld
mov
sbb
add
mov
rcpps
mov
sti
std
add
xor
mov
aas
push
rcr
iret
nop
jnp
jno
stc
mov
pusha
daa
sub
mov
out
pushf
pusha
into
adc
and
enter
test
jmp
sub
push
mov
in
int
xor
cmpsb
stos
aaa
nop
adc
jne,pn
xchg
movsl
daa
pop
mov
popa
cmp
push
stc
mov
cmp
xchg
mov
add
hlt
push
arpl
jb
fildll
xchg
jae
cli
mov
and
cs
cltd
mov
scas
int
shl
or
jne
mov
xor
sub
out
dec
cmp
neg
add
and
or
out
sarl
jl
add
std
dec
xlat
incl
pop
cmp
sub
xor
scas
sti
adc
push
test
push
stos
arpl
sbb
ret
push
mov
sub
rorb
les
mov
adc
adc
je
xchg
push
pop
push
adc
insl
xor
mov
adc
xchg
fldcw
stos
lret
push
mov
cmc
lcall
in
insl
cli
sub
mov
in
push
cmp
sbb
es
ret
push
push
out
das
push
aad
test
fwait
repz
js
ret
xchg
add
cmp
pop
fs
cwtl
push
test
stos
cs
cmc
jbe
aad
lds
arpl
push
into
fs
ret
sub
les
dec
inc
enter
popf
push
xchg
subb
aas
into
sbb
xchg
movsl
jno
pop
mov
add
dec
idivb
cmp
dec
in
fsubrs
and
stos
aam
and
sti
or
push
or
out
xor
daa
push
xchg
inc
xor
inc
adc
lds
mov
sti
stos
lcall
and
and
xchg
xchg
outsb
inc
pop
jo
xor
ss
cwtl
adc
sub
mov
out
lds
xchg
inc
sub
sbb
mov
sbb
dec
xchg
jecxz
js
cmp
inc
jmp
call
jnp
xchg
outsl
rcl
mov
bound
push
xchg
test
ds
mov
arpl
inc
dec
addb
inc
pop
cmpsb
xchg
cmp
push
clc
inc
stc
sbb
cmpb
out
sbb
and
push
sbbb
mov
out
mov
out
sti
pusha
pushf
inc
andl
test
dec
int
xor
dec
rclb
mov
jge
cmp
mov
add
cmp
jno
js
pop
in
sahf
mov
adc
pop
adc
jbe
ret
movsl
test
mov
mov
add
cmp
out
push
repnz
orb
xor
sub
fiadds
xchg
imul
leave
mov
xor
xchg
inc
mov
es
leave
xchg
int3
push
sub
add
and
adc
sbb
loopne
gs
push
lods
pop
push
leave
aad
loopne
je
xchg
addr16
mov
mov
test
sbb
sti
dec
call
cmc
pusha
pop
sub
jnp
adc
cmp
inc
psubw
sbbl
adc
sub
sub
and
out
cli
cltd
das
jmp
jge
fnstenv
popf
insl
adc
test
dec
xchg
gs
inc
ljmp
mov
in
dec
or
pop
inc
xor
sbb
ja
mov
insb
add
xorl
rcl
and
movsl
pop
out
mov
sbb
sbb
data16
jb
push
je
jle
xchg
rorl
lcall
jnp
mov
cmp
mov
sbb
mov
sahf
push
aaa
movsb
lock
arpl
ds
sbb
and
push
pop
out
fistps
pusha
push
cmc
sarb
cmpps
mov
add
hlt
sbb
fsubl
or
add
cld
or
mov
scas
jge
jnp
in
lock
lods
jp
mov
outsl
es
adc
xor
push
mov
cs
movsb
or
jl
cmovle
bound
dec
fsts
sub
mov
mov
je
xchg
adc
push
bound
mov
xchg
push
movsl
mov
jnp
ficoml
stos
and
mov
mov
out
out
xor
outsb
pop
out
inc
popf
mov
add
lahf
dec
jp
lock
mov
jecxz
sbb
jae
das
push
pusha
cs
cmp
loop
jns
loopne
xor
sbb
add
mov
aad
in
shll
cmpl
in
dec
jno
stos
cmpsb
test
pushf
push
xchg
stos
sbb
mov
xor
lds
push
out
pop
cld
in
test
mov
mov
xor
fidivs
push
test
sub
aam
lods
enter
aad
jmp
mov
lahf
test
xchg
outsl
xor
jno
mov
push
mov
icebp
and
into
mov
xchg
jae
xchg
mov
test
dec
shlb
pop
or
cs
or
cmp
loop
in
inc
and
cwtl
les
fldt
jb
jl
add
mov
pusha
inc
js
cmp
pop
lods
sbb
mov
xor
xchg
movsl
fwait
add
jmp
ss
ret
daa
rorl
stos
les
andl
pop
in
pop
push
test
in
mov
nop
push
loope
mov
sahf
sbb
jo
mov
outsl
inc
in
sti
orl
inc
into
sub
popa
xchg
dec
aaa
int3
mov
loopew
mov
lret
xor
add
xor
arpl
movswl
aas
adc
cmp
fidivrs
lea
call
push
addr16
jns
dec
pop
outsl
jnp
mov
sub
xchg
stc
nop
push
and
outsl
mov
mov
cltd
xorb
es
inc
sub
adc
pusha
aas
fidivrs
ja
dec
pop
cmp
aas
pushf
adc
sub
cmc
or
out
push
push
les
or
mov
test
enter
orb
push
jns
mov
shrb
int
in
xchg
dec
add
add
add
fwait
mov
fmuls
roll
mov
aam
dec
add
lods
cmpsb
sub
inc
jns
nop
cmp
xor
add
mov
push
sub
cmc
roll
dec
pop
pop
negb
sbb
fisubrs
mov
xchg
out
xor
test
pop
and
sub
add
lea
cli
or
out
call
int
sbb
int3
and
mov
cmpsl
fisubl
pop
pop
dec
shrb
sbb
out
add
iret
movsl
xchg
mov
push
sbb
ljmp
cmp
je
xlat
cmpsb
sub
add
push
rorb
je
fadd
stc
push
out
mov
rcll
ret
sbb
int
out
imul
mov
xor
xor
out
dec
xor
jge
in
dec
inc
gs
add
or
sbb
out
in
jge
insl
xchg
cld
loop
xchg
out
arpl
mov
cmpsl
fs
fidivrs
xchg
icebp
mov
xorl
and
shl
dec
sbbb
cmp
into
dec
add
pop
mov
xor
pop
cmp
std
and
xchg
jns
pop
sub
icebp
lcall
imul
in
xchg
pop
jecxz
test
mov
pop
push
mov
cmpl
inc
inc
fstps
cmc
jecxz
push
sub
call
sub
icebp
and
out
xchg
mov
ret
sbb
icebp
in
cmp
data16
push
add
xchg
pop
add
test
xchg
sub
cmc
or
jae
sbb
mov
xor
inc
mov
adcl
xlat
cmpsb
jns
push
xchg
iret
stos
push
stos
xchg
mov
xchg
sub
add
in
das
and
sahf
push
push
push
inc
inc
inc
dec
dec
or
ja
loop
jge
lret
sub
bswap
or
jnp
mov
sub
inc
mov
jle
gs
out
pop
jb
je
lock
outsw
addb
adcl
sbb
pop
sbb
mov
cwtl
mov
sub
std
mov
mov
add
sbb
add
ds
jmp
add
dec
pop
dec
sub
fidivl
push
hlt
cmp
int
fdivrs
xor
xor
and
push
aam
out
ret
sbbl
xchg
mov
sbb
in
jnp
jecxz
dec
cmpb
or
imul
jge
sub
or
sbbb
xchg
pop
sarb
stos
jle
imul
pop
lods
jns
movsl
aas
loop
test
ror
lea
nop
fisubl
pop
xchg
into
out
bound
push
inc
std
fisubrs
or
dec
add
mov
shrl
arpl
sbb
clts
popa
outsl
pop
js
gs
cmp
jecxz
sbb
je
ss
sahf
cld
and
aaa
sti
jmp
lods
xchg
incl
arpl
inc
pop
out
mov
out
loopne
cld
xchg
sbb
mov
fwait
dec
xlat
bound
or
jns
mov
sub
out
mov
mov
mov
stos
pop
and
fimull
push
leave
jl
cmp
test
call
movsb
aad
mov
enter
inc
in
fs
sub
pushl
int
fldenv
jns
sbb
jo
adc
call
mov
inc
pop
fucom
enter
repnz
idivl
jg
or
pop
push
movsl
cmc
stc
cmc
stc
dec
cltd
push
dec
jbe
push
and
lock
add
std
pop
ror
pop
hlt
icebp
rcrb
jo
in
lret
jb
push
fadds
xchg
jne
cmp
sbb
jns
push
lods
sarl
sub
ja
pop
cmp
mov
sub
dec
loop
rcrb
jns
adcl
roll
into
cwtl
cld
cmp
push
sahf
push
pop
aaa
and
mov
cld
arpl
fucomi
hlt
xchg
push
mov
iret
xchg
int
leave
ficompl
xor
lock
pop
out
sbb
pop
and
mov
and
and
and
inc
xor
jns
popf
and
xlat
push
fs
shll
dec
std
jae
int3
shl
push
jbe
jo
mov
test
pop
fwait
jno
test
cmpsl
xchg
into
xchg
decl
jecxz
arpl
xchg
inc
scas
or
mov
test
adc
iret
movsb
or
int3
xor
fldl2e
addr16
jne
xor
pop
mov
cmp
or
sbb
dec
arpl
loopew
das
inc
xor
jns
das
or
scas
xchg
sbb
xchg
frstor
mov
pusha
xor
lock
pop
sub
pop
xchg
xor
mov
lahf
pop
outsb
and
ja
cmp
daa
out
stos
sub
pop
stos
xor
or
gs
xchg
sub
dec
sub
int
xor
xchg
js
roll
fmul
jbe
pushf
xchg
inc
add
add
add
xchg
jns
stos
jge
fidivrs
sbb
mov
sub
pop
push
sub
test
or
ljmp
cmpsl
push
sub
loop
add
cmp
fcom
sbb
fbld
cmp
jmp
mov
adc
add
outsl
enter
into
cli
out
loop
ret
lds
add
ret
pop
rcrl
lahf
lsl
aam
or
int
push
xor
ss
mov
xor
subb
pushf
add
shlb
mov
aaa
mov
mov
xchg
cld
jbe
push
add
xchg
inc
sub
jg
add
sti
push
outsb
sti
dec
xchg
subb
lods
push
xor
shrb
fsubs
insl
add
add
cmc
xchg
stc
in
sahf
push
xchg
int3
xchg
lret
sahf
fisubrl
lahf
inc
int3
ds
pusha
xchg
mov
std
push
xchg
xor
push
xor
cltd
cmpsl
lods
mov
mov
mov
pop
sub
jp
popa
xchg
dec
sbb
dec
aas
cltd
inc
mov
in
cli
pop
sbb
lcall
dec
fnsave
sub
movsl
insl
mov
in
add
inc
dec
aas
js
jb
fstl
arpl
insl
lds
dec
mov
loopne
call
mov
std
dec
in
cmp
out
test
stc
movsb
sub
push
and
xor
sbb
dec
lahf
mov
adc
push
sahf
scas
push
mov
negb
jbe
jnp
xor
add
mov
inc
int
int3
movsl
repz
out
insb
stc
aam
pop
nop
pop
mov
push
dec
jno
sub
inc
add
aad
mov
inc
or
and
scas
loopne
daa
inc
jle
sbb
and
xor
add
lret
out
ja
jne
pop
push
lods
outsb
inc
scas
jge
xor
enter
xchg
lcall
xor
dec
dec
push
inc
enter
xchg
sbb
out
adc
dec
or
mov
notb
dec
leave
mov
rcrb
pop
cmpl
mov
pusha
mov
xor
mov
lldt
frstor
fwait
mov
mov
pop
sbb
add
into
jecxz
arpl
test
push
jno
cli
mov
out
ucomiss
push
dec
mov
nop
or
xor
sbb
mov
adc
fwait
push
fsubs
popa
testl
data16
test
xor
addr16
inc
ret
xor
test
out
les
out
or
enter
jmp
push
scas
xlat
push
and
sbb
in
pusha
stos
shl
cmp
cs
cmp
enter
andl
mull
popf
out
loopne
cmc
push
add
cmp
lods
sub
sti
sbb
out
aaa
lahf
arpl
dec
sarb
outsb
out
js
xchg
stos
outsb
pop
inc
and
add
pop
mov
leave
jne
sbb
loopne
add
pop
ffreep
aaa
faddl
cmp
data16
stos
sub
aam
lods
and
or
out
cmpsb
dec
cmp
or
cs
cmp
push
repnz
ljmp
xor
push
pop
std
lret
jbe
jb
cmpsl
sbb
cmp
aam
arpl
push
xchg
push
in
mov
aaa
stos
andl
mov
cmp
xchg
inc
jmp
lock
cmp
xor
cmpsb
sti
mov
loope
inc
adc
movsl
sbb
xor
pop
call
mov
lods
lods
pushf
add
scas
jns
lock
mov
cli
cmc
adc
mov
cmp
in
xchg
repnz
xchg
add
dec
jnp
inc
push
jmp
das
lahf
movsl
mov
es
arpl
lahf
xor
callw
or
jnp
mov
into
sbbl
repz
in
sbb
and
in
shlb
push
inc
aaa
ret
repz
loope
aas
lea
inc
out
stos
xchg
mov
sbb
stos
add
cmp
jecxz
sub
xor
mov
mov
pop
sub
movsl
pop
push
sbb
fbld
testl
in
out
jl
xchg
pusha
mov
stc
pop
sub
leave
nop
repz
sbb
sbb
push
mov
push
mov
jle,pt
ffree
sub
dec
add
xlat
outsl
aas
movsb
or
push
fwait
sbb
ja
pop
fisubrs
out
jns
mov
daa
pop
sub
jo
std
insl
push
cmc
lods
rolb
xchg
imul
pop
jbe
mov
adc
adc
out
mov
pop
push
fwait
insl
and
daa
mov
lea
sbb
pop
jmp
dec
jmp
xor
mov
out
adc
stos
or
pop
rorl
and
fnstenv
aaa
sti
mov
sub
stc
scas
pushf
inc
sbb
fs
mov
mov
mov
sahf
xor
fbstp
xor
mov
rcrl
mov
out
or
inc
dec
and
cld
mov
dec
shl
sbb
add
cmpsl
int3
xor
cmc
cmpsl
and
ljmp
jge
les
push
scas
xchg
adc
mov
jle
mov
jmp
fidivrl
in
inc
jae
xor
pushf
add
xor
andb
or
aad
mov
jbe
dec
cmpsl
mov
pop
mov
adc
sub
adc
sbb
test
jge
pushf
xchg
fldt
cld
or
add
cmp
out
daa
mov
shrl
cmp
xchg
cld
popa
jmp
add
xor
lds
sub
xor
ss
insl
pop
ret
nop
call
pop
and
jl
sahf
adc
test
jecxz
cmp
xor
add
je
xchg
hlt
sbb
dec
shll
ds
xchg
mov
clc
fs
leave
imul
and
lret
in
imul
jl
pop
adc
jb
push
adc
dec
pop
dec
lret
or
into
in
jecxz
push
rorl
mov
adc
add
es
sar
or
dec
pxor
sbb
pop
scas
pushf
pop
insl
rcrl
cmp
jnp
fidivs
lock
imul
jmp
test
enter
jecxz
push
mov
push
adc
fidivrs
xor
add
inc
outsl
inc
jecxz
pushf
les
push
rcll
pop
enter
shr
or
sahf
incb
pop
mov
xchg
inc
test
insl
or
outsb
xor
test
mov
movsb
stc
and
xchg
xor
push
popf
fcompl
imul
lret
adcl
out
push
test
js
push
add
adc
imul
ja
xor
add
test
pushf
dec
or
lahf
mov
xlat
mov
jne
push
iret
xchg
loope
and
jmp
idivl
dec
mov
mov
shrb
scas
out
test
fcmovnb
dec
cmp
pop
adc
add
shl
lret
and
lods
sbb
rorb
cmp
push
mov
pop
sbb
jl
mov
xchg
es
cs
pusha
pusha
loope
jp
adc
int
xchg
push
xchg
sbb
repz
mov
pop
out
push
mov
push
pop
mov
jmp
dec
xchg
iret
enter
outsb
in
pop
xchg
push
sub
aam
and
cwtl
push
mov
or
mov
popa
aaa
xchg
in
lea
pop
xchg
adc
xchg
mov
sbb
loop
mov
pop
clc
je
in
mov
rcll
mov
jge
addr16
sti
mov
shlb
bound
cmp
cmpsb
stos
cs
mulb
cld
enter
loop
mov
lret
inc
or
pop
adc
sbb
push
int
adc
roll
inc
in
or
popa
cmp
xor
xor
push
sbb
arpl
jecxz
sarl
xchg
dec
loope
push
in
push
jb
test
adc
lcall
outsb
sub
movsb
xchg
fmul
xor
hlt
jns
sahf
xchg
inc
mov
aas
arpl
lahf
add
pop
adc
ret
fsubrl
inc
cmp
leave
in
dec
dec
pusha
cmovae
cmp
mov
out
sbb
xlat
inc
std
sub
mov
sub
in
sbb
movhps
xor
cld
aam
js
daa
sbb
fnsave
cmp
dec
nop
shrl
popa
or
mov
dec
loope
pop
xor
lahf
das
xor
and
add
lods
imull
ret
or
dec
out
lds
ja
in
fcoms
lea
lea
pop
mov
sub
inc
fisubl
add
pop
fnstcw
cs
mov
in
cwtl
add
xchg
mov
adc
rclb
inc
xchg
repz
mov
es
sbb
and
mov
insl
ret
push
pop
sub
adc
adc
cli
sub
pop
xchg
js
jns
and
pop
fsubl
sahf
mov
or
or
movsl
call
or
addb
adc
sub
ret
xor
gs
jle
jge
and
xchg
lods
sbb
or
movsl
jae
mov
jg
leave
cld
int
xchg
repnz
les
push
jmp
sti
push
fisubrl
xchg
cmp
iret
das
dec
mov
xchg
cmp
in
iret
jo
int
xchg
cmp
mov
pushf
aam
je
ja
push
std
clc
and
test
cmp
hlt
pop
adc
shll
jmp
inc
jmp
push
imulw
push
in
inc
shll
push
bound
js
dec
test
iret
cmc
das
mov
hlt
pop
push
fs
dec
insb
pop
jne
mov
cmp
fisubrl
call
and
mov
push
call
cmpsb
into
lods
decb
mov
jns
lods
repnz
jl
ss
es
roll
out
cmpsl
hlt
jbe
lock
mov
test
mov
jl
addl
mov
push
imul
sub
inc
or
xchg
scas
xchg
stos
dec
xor
pop
xchg
mov
or
jae
cmpsl
xchg
popf
lahf
dec
popa
push
sub
mov
stos
cwtl
inc
fwait
push
loope
jno
test
pop
cmpsb
aas
cmpsl
add
mov
mov
insl
insl
xchg
andps
jns
dec
test
repz
push
leave
jne
and
sahf
test
pushf
and
pop
mov
cmp
mov
mov
nop
or
in
cmp
jge
mov
lahf
enter
mov
pop
mov
xchg
bound
inc
mov
adc
adc
in
stos
sub
sahf
into
or
scas
jo
sub
icebp
jae
in
lods
push
mov
jbe
jae
inc
jns
sub
test
popa
lods
lret
out
push
sub
out
push
mov
add
in
bound
mov
add
inc
stos
das
sbb
xchg
sbb
mov
sbb
adc
lods
inc
xchg
mov
loope
inc
or
gs
jecxz
in
outsl
dec
xchg
or
sbb
jg
mov
sub
clc
out
scas
in
roll
jb
test
mov
adc
dec
jne
in
pop
nop
or
jb
and
orb
aam
cld
jns
mov
lret
dec
je
sub
jns
insb
shl
ret
push
fcomps
leave
sub
sub
cmpsl
xor
pop
test
nop
jecxz
push
xor
shrl
push
out
mov
mov
test
push
cmpsl
push
imul
test
or
adc
jle
fidivl
out
or
push
mov
iret
or
ret
mov
fcomps
mov
faddl
xchg
cmp
lcall
insl
xchg
mov
mov
jle
out
jl
push
test
ret
insb
das
fs
lods
iret
cltd
fmull
das
jnp
imul
jge
ds
or
fmuls
lret
pusha
jo
stos
popf
loopne
or
outsl
out
clc
add
cs
and
add
out
mov
daa
cli
xorb
or
out
cmp
xchg
inc
scas
xor
xchg
xchg
into
inc
sub
cld
push
gs
ljmp
fs
in
fistps
sub
lret
out
add
dec
xchg
mov
lret
cmc
fidivrs
adc
fmuls
daa
pop
inc
jbe
pop
popf
push
sbb
or
adc
stos
pop
dec
adc
es
icebp
imul
out
jne
test
push
add
out
adc
jmp
pop
cltd
mov
out
pop
xor
and
test
xlat
dec
jns
push
loope
dec
and
inc
cmp
adc
test
insl
fcmovbe
xchg
call
add
and
mov
mov
ret
icebp
inc
sub
rorb
mov
pop
int3
dec
int3
pop
jnp
lods
stos
outsl
ss
dec
enter
pop
mov
lds
pop
insb
lret
lea
scas
adcl
frstor
cs
jne
sbb
lcall
in
jns
jae
daa
jb
xor
rcr
cmp
push
push
push
fadds
mov
and
lock
mov
and
out
fcmovnb
xor
inc
cmp
clc
fwait
repnz
cmc
adc
stos
lret
mov
into
jno
leave
jb
ljmp
inc
adc
shll
xor
in
flds
fdiv
cmpb
jecxz
add
mov
xlat
sahf
imul
cmp
xor
jo
xchg
add
in
hlt
adc
shl
inc
mov
jb
into
mov
dec
pop
dec
inc
lods
mov
out
or
pop
cmpsb
aam
enter
push
ds
lds
jo
iret
lahf
pop
mov
mov
sub
idivb
sbb
addr16
mov
fbld
jae
js
in
xorb
jmp
sub
mov
adc
push
lret
adc
fwait
inc
push
addr16
rcl
xchg
inc
xchg
mov
xor
aad
sti
stos
mov
jp
rclb
cwtl
les
fwait
push
mov
outsb
hlt
adc
mov
jg
test
jo
xchg
jl
cltd
lods
mov
mov
mov
int
mov
in
pop
mov
clc
mov
dec
mov
mov
icebp
addr16
jp
sbb
mov
in
into
add
mov
in
mov
sub
repz
pop
push
orb
cld
jle
add
push
mov
dec
cs
ja
inc
bound
and
popa
lock
pop
mov
xchg
stos
inc
cmpsb
mov
cmpb
add
cmpsb
stos
jecxz
ljmp
daa
xchg
out
push
aad
push
jp
scas
xor
jae
lds
and
xorb
adc
jns
xchg
and
xor
xchg
inc
icebp
jo
or
cmpsb
lods
ret
cmp
es
xchg
jle
lret
sbbb
lcall
mov
inc
inc
xchg
mov
rcll
mov
out
sbb
jge
jecxz
inc
mov
mov
stos
fwait
inc
add
dec
jg
inc
pop
push
mov
and
mov
clc
into
loop
in
adc
enter
cmp
cmp
popf
inc
add
lcall
sbb
pop
xor
pop
scas
dec
add
push
mov
fidivl
and
push
ret
orl
pop
insl
bsf
cmpsb
movsl
mov
pop
mov
xchg
gs
cmpsb
or
fwait
iret
stos
cmpsl
out
cmpsb
xchg
xor
sub
cltd
xlat
add
test
jle
inc
xchg
push
mov
xchg
out
out
pop
jns
repnz
scas
mov
sub
outsb
arpl
shr
xor
imul
lret
and
in
lods
adc
jecxz
push
push
push
pop
xchg
pop
and
mov
jle
loope
sbb
cmp
ja
in
cmp
sbb
out
pop
sbb
xchg
sub
fisubl
xor
les
jb
adc
mov
shrl
push
xchg
out
inc
outsl
andb
jg
xor
les
scas
pop
add
out
fistpl
insl
lods
or
loopne
add
int
or
sbbb
adc
xor
sarb
insl
jge
push
lds
repnz
fsubrs
push
fcoms
push
loop
test
mov
xor
jp
mov
lods
in
cwtl
inc
add
add
mov
push
cmp
push
sub
sub
push
push
adc
fistpl
jle
dec
mov
lds
pop
pop
nop
cmpsl
sbb
sub
add
add
xor
ret
iret
dec
jmp
movsb
aaa
or
jge
fsubrl
mov
mov
inc
outsb
lea
push
ljmp
jl
pop
cmp
mov
or
or
xorl
daa
int
jae
fwait
jl
mov
popa
inc
cmp
insl
test
add
jne
mov
fucomi
cmp
and
pop
jns
pop
jbe
xchg
pop
xchg
jns
inc
or
mov
mov
xlat
pop
scas
jne
adc
rolb
xor
notl
inc
std
call
lods
jne
or
mov
jo
aas
loope
lods
outsl
subl
pop
mov
ljmp
movsl
inc
inc
mov
insb
and
ret
mov
or
inc
cmpsl
and
cmp
inc
mov
cwtl
mov
sub
push
mov
rcrl
test
sub
pop
mov
lods
push
xor
ja
pop
int
sub
movsl
cs
in
cmp
fs
adc
orl
pop
jg
arpl
add
scas
sub
dec
lret
dec
pop
pop
mov
repnz
dec
adc
shll
pop
dec
add
mov
ja
pop
sub
push
add
xchg
inc
adc
xchg
xchg
outsb
mov
fst
jmp
mov
pop
lret
mov
ficomps
xor
sbb
xor
scas
test
jp
outsl
pop
or
ljmp
sub
fisubl
mov
int
mov
dec
movzwl
cmp
sub
enter
out
xlat
mov
pop
jne
push
sbb
sub
jno
bound
jb,pn
xor
cwtl
rol
icebp
and
and
jo
jg
repnz
in
jmp
das
push
dec
cmp
xor
push
inc
lds
mov
sub
jo
sub
pop
