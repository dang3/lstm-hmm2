dec
insb
push
sbb
imull
clc
fldl
mov
dec
xor
push
sub
das
cmc
gs
cmp
insb
lcall
xchg
das
popf
lods
cs
push
ret
inc
aas
push
pop
jecxz
inc
push
mov
jp
jg
mov
aas
mov
lock
std
cmp
push
mov
add
push
xchg
nop
div
add
insl
mov
lret
and
cltd
xchg
ljmp
inc
repz
inc
and
jb
enter
mov
imul
rclb
mov
cmp
movsb
and
inc
out
jne
int
movsb
push
dec
daa
dec
faddp
add
and
push
ja
and
sub
flds
jae
ljmp
pop
add
out
add
sub
push
mov
inc
xchg
repnz
enter
jle
daa
sbb
jecxz
xchg
loopne
andl
cmp
outsb
mov
xor
or
imul
adc
in
outsl
dec
jmp
lods
jb
and
sbb
leave
hlt
sahf
leave
sbb
and
jp
adc
loopne
icebp
out
into
test
scas
repz
mov
pop
je
sbb
test
pop
lds
jb
inc
pushf
add
jne
xchg
adc
cmpsb
mov
jb
cmp
xor
xor
mov
test
jo
leave
pop
dec
out
jp
pop
dec
sbb
lret
add
ss
sbb
mov
insb
sub
and
xchg
pop
xchg
ret
rcll
bound
leave
rorl
mov
add
add
imul
ja
push
push
jb
mov
add
sub
hlt
int3
mov
push
cwtl
pop
es
sub
dec
jo
int3
inc
sbb
pusha
loop
ss
sbb
cmp
xlat
cmp
xor
sbb
pushf
add
pop
rorb
mov
inc
and
push
jge
aas
dec
subb
ds
inc
sbb
pop
dec
xchg
in
loope
shlb
cmp
nop
and
sahf
lret
sbbl
jp
push
out
mov
ret
aad
inc
pop
push
out
aam
jb
clc
jae
mov
insb
test
testb
and
or
add
xor
lret
pusha
fmuls
lahf
pop
lea
dec
sbb
and
inc
scas
sub
jecxz
mov
fnsave
movsl
insb
andl
fwait
test
sbb
pop
aam
insl
loop
inc
icebp
out
mov
imul
mov
pop
leave
push
leave
mov
std
stc
mov
sbb
in
insl
insl
js
mov
mov
mov
out
pushf
jg
cmp
sbb
jge
push
sbb
je
push
leave
adc
cli
mov
divl
jns
lods
daa
sbb
mov
push
fisttps
rclb
lock
push
movsb
sbbb
pusha
fbstp
push
aam
idiv
xor
jle
stos
and
mov
sbb
fwait
lds
icebp
inc
mov
lods
cs
shll
mov
adc
push
sbbl
test
les
xchg
cwtl
inc
sbb
dec
xchg
dec
dec
movsb
popf
mov
xchg
add
rolb
stc
stc
lods
imul
adc
fcmovnbe
loopne
lahf
mov
mov
cld
std
repnz
sti
dec
js
jmp
shrl
inc
jp
jl
jle
cld
mov
xchg
cltd
push
jmp
aas
mov
add
sbb
cs
push
pop
add
xor
fistps
mov
aaa
and
aam
test
lods
lock
pop
ljmp
mov
lcall
clc
std
inc
push
jns
xchg
mov
jo
push
testl
mov
and
jb
cmpl
sub
std
add
xchg
insb
in
mov
nop
ds
js
mov
add
fsubrs
xchg
xchg
icebp
sti
cmpsl
push
mov
xchg
in
inc
in
or
leave
dec
int3
hlt
jns
popa
sti
inc
ljmp
xchg
mov
jnp
fcom
out
cmp
inc
loopne
sbbb
xchg
cmp
xchg
mov
scas
adc
pop
xchg
mov
push
repnz
xchg
pusha
inc
enter
mov
sub
cmp
xor
mov
mov
xor
nop
xchg
mov
mov
stos
fwait
sub
mov
fwait
jge
mov
push
xchg
lods
push
sub
test
adc
data16
mov
mov
push
cmp
sub
sahf
add
scas
add
add
iret
ret
rcrl
cltd
nop
popf
cmp
push
adc
push
fiadds
clc
xor
sbbb
mov
lahf
int
add
adc
inc
sbb
mov
call
push
lock
mov
mov
jle
sarl
push
jp
jge
mov
and
mov
add
bound
xor
je
mov
or
mov
pop
cmp
ficompl
push
fildl
outsb
stos
sti
shlb
popf
nop
es
and
xor
ficoms
clc
rorl
pop
roll
aam
arpl
out
mov
sub
xchg
mov
mov
cmp
test
pop
cmp
or
sbb
jle
notl
sub
dec
pusha
daa
adc
and
imul
or
mov
xor
push
hlt
mov
xchg
push
push
and
pop
pop
and
shl
or
nop
pusha
jmp
cmp
mov
leave
pop
pop
inc
ret
test
je
xlat
ss
mull
mov
mov
xchg
jle
and
or
test
test
push
pop
cld
lea
push
call
cli
movsl
daa
cmpsb
out
scas
jo
inc
and
xchg
pop
add
and
hlt
fs
xor
js
loopne
notb
outsb
push
sti
lret
and
xlat
mov
mov
mov
sbb
pop
adc
push
push
out
lods
inc
mov
mov
sbb
add
add
push
inc
pop
test
cld
mov
add
jge
and
add
push
push
add
pop
nop
jp
and
jb
push
add
or
push
add
pop
push
call
fisttpll
cmc
mov
lods
in
dec
lods
xor
ss
das
repz
dec
insb
int
pop
mov
xchg
push
jg
sub
pop
and
inc
dec
cmc
push
add
push
pop
pop
push
call
int3
dec
int
or
pop
pop
das
aas
adc
mov
ja
shrb
pop
pop
dec
or
inc
out
rcrb
movsl
fstps
call
pop
pop
lea
mov
push
inc
pop
rol
test
jne
jmp
ror
push
movzbl
cmp
push
cmp
pop
push
or
pop
sub
rol
clc
loop
pop
push
jns
sub
pop
cmp
push
call
loop
outsb
sarb
jg
hlt
fxam
and
rcl
mov
fmull
jecxz
arpl
gs
fcmovu
jmp
loope
mov
cld
xchg
clc
cmp
add
pop
jmp
lea
xlat
subb
rclb
aam
in
mov
rcrb
xchg
adc
mull
xchg
push
mov
xor
leave
movsb
loope
aaa
mov
or
pop
lret
xor
mov
adc
lahf
cs
bound
pop
push
adc
divl
mov
push
xor
pop
pop
loop
jecxz
inc
xorl
cltd
or
mov
add
xchg
or
xor
imul
cmc
or
sub
rorl
out
cwtl
jnp
in
push
stos
lock
pop
inc
hlt
mov
imul
dec
repz
es
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
stc
clc
add
loop
jecxz
mov
inc
add
lods
loopne
sbb
sbb
push
pop
outsl
outsb
inc
jne
jmp
dec
sbb
cmp
pop
pop
add
push
call
lcall
fldl
test
xor
pop
jb
jb
push
cmp
jecxz
insb
lahf
cmpsb
lds
fwait
mov
sahf
lock
pop
dec
jne
sub
push
jp
test
pop
jp
add
loop
jecxz
xlat
push
loope
jo
jle
cltd
mov
push
cmpsl
in
rorl
mov
cmpsl
sti
xor
movsl
arpl
sub
test
orb
push
jge
jge
enter
subb
loop
jecxz
insl
and
sbb
aaa
out
and
cli
loopne
ja
inc
dec
sbb
jnp
mov
pop
ficompl
data16
mov
mov
mov
callw
inc
mov
sub
and
int
jbe
test
or
mov
inc
jmp
cwtl
or
mov
pop
xchg
push
mov
ret
arpl
xlat
jmp
dec
std
imull
out
xor
cs
jb
jo
inc
push
adc
ss
pop
lea
fsubrp
outsb
mov
arpl
xlat
stc
js
sub
ss
testl
popa
dec
idivl
push
in
push
cltd
ja
pop
jno
cmp
bound
pop
inc
movsl
xchg
jne
in
dec
sti
sahf
out
mov
fadds
fnstenv
lret
fidivl
push
pop
pushf
inc
jle
out
and
into
leave
mov
mov
jne
js
sub
cmp
pop
int3
cmp
and
aad
pusha
ficomps
jmp
or
jbe
push
and
pop
cmp
cmp
pushf
cmp
jecxz
jno
pop
cli
sbb
and
enter
test
sub
cs
pop
les
cmpb
jecxz
cmp
pop
push
insl
adc
and
cmpsl
adcl
ljmp
cmpsb
pop
dec
int3
inc
jnp
dec
or
mov
mov
push
outsb
push
dec
jmp
rcll
mov
sbb
cmp
adc
repz
lock
ds
leave
movsl
add
mov
push
mov
and
out
adc
imul
shl
fisttpll
aam
jp
jb
hlt
jg
cmp
icebp
daa
sbb
mov
cmp
ja
cmpsb
andb
and
mov
scas
sub
push
or
pop
xchg
mov
or
mov
sti
push
aad
lret
dec
xchg
mov
stos
lahf
dec
mov
popl
daa
xchg
xor
clc
pop
aaa
fcmovu
setb
jns
ret
lea
or
lods
sahf
jmp
xchg
cli
ret
jo
outsb
jle
or
cmp
es
test
lret
mov
jb
adc
mov
push
cs
test
xor
mov
inc
or
mov
testl
andl
rolb
sbb
push
aam
mov
shrl
dec
mov
fbstp
pushf
jno
lret
ss
and
loopne
push
add
xlat
mov
out
mov
inc
mov
mov
and
hlt
fisubs
xor
movsb
jae
sbb
dec
xchg
push
or
or
mov
mov
add
add
mov
cmp
xchg
jg
repnz
ds
and
and
or
repz
xchg
das
dec
int
jb
push
js
out
adc
sbb
sbb
pop
sub
or
lahf
fcmovnbe
adc
les
lods
mov
insl
scas
lods
int
mov
mov
add
sbbl
xlat
lret
jl
mov
inc
ds
sahf
fildl
enter
cmp
pop
sbb
mov
stos
lods
fimuls
dec
cmpsb
add
mov
sbb
ss
inc
adcb
push
xor
xchg
mov
sub
fs
mov
jae
add
leave
aam
cld
xchg
push
mov
fcoms
aas
lock
lods
add
or
push
xchg
js
hlt
icebp
sub
inc
push
and
test
leave
sarb
iret
or
cmp
popa
xor
gs
or
mov
mov
stos
and
xor
push
xchg
into
mov
popa
cwtl
or
sub
mov
dec
lret
rcrb
lea
fmul
mov
pop
jmp
std
ss
push
pop
daa
xchg
mov
icebp
push
ljmp
jge
push
cmp
cmp
sub
push
std
push
dec
xchg
scas
jl
loop
xor
mov
in
pusha
or
mov
frstor
mov
mov
mov
inc
xchg
jns
pusha
xor
je
jb
pop
jns
loope
insl
adc
lods
mov
stos
jo
jb
dec
gs
pop
sbb
jge
sub
sbb
or
jmp
push
push
jbe
xchg
mov
icebp
sahf
push
cltd
jecxz
mov
sbb
ret
aam
sbb
xchg
fnstsw
leave
iret
sub
push
jo
out
nop
or
ss
cmp
pop
pop
mov
mov
negb
add
push
mov
loopne
imul
and
add
sbb
lret
cmp
iret
and
nop
xchg
fwait
stos
int3
std
sub
rcr
adc
push
xchg
mov
mull
adc
dec
test
inc
out
dec
pop
movsb
mov
jmp
sbb
push
mov
mov
std
cmp
out
sbb
cltd
fidivrl
lret
push
outsl
mov
test
pop
pop
or
push
xchg
stos
jnp
pushf
dec
dec
test
mov
popf
outsl
ds
sbb
pusha
or
pop
fldt
shlb
fmul
mov
pushw
jbe
ljmp
fmull
ret
leave
mov
es
ss
inc
andl
es
dec
jno
hlt
js
lods
and
xor
mov
mov
movsl
jb
mov
bound
cmp
cmpsb
ss
sub
sub
outsb
pop
mov
sub
inc
push
roll
pop
movsb
xchg
cltd
or
mov
pop
or
sbb
mov
cs
or
add
aad
pop
cmp
je
add
subb
push
movsb
fdivrl
je
pop
mov
pushf
sbb
pop
shrb
adc
fisttpll
sub
ss
out
js
or
ret
inc
scas
mov
mov
test
jae
or
cmpsb
inc
or
cld
aas
fistpl
pushf
xor
lods
inc
push
popf
sub
daa
pop
xchg
call
cmp
fldt
cmpsb
hlt
aam
add
scas
rol
sub
imul
fxch
jecxz
sub
or
mov
xor
ds
add
dec
int3
mov
jnp
test
testl
push
mov
adc
stc
adc
sahf
scas
testb
adc
add
cmpsl
add
iret
xor
movsb
scas
xor
int
sbb
pop
adc
les
and
and
push
inc
xchg
sbb
cld
lahf
cltd
rcll
dec
fadds
sti
ja
push
and
adc
dec
xchg
aad
loope
sbb
xchg
test
fstps
xchg
insb
push
popa
push
xor
adc
or
xchg
cmp
mov
std
pop
cmpsl
imul
pop
data16
and
dec
fwait
xor
dec
popa
pop
addr16
xor
jp
xor
shr
addr16
call
dec
jb
xor
or
pop
or
cmc
inc
int
in
push
add
stos
mov
mov
dec
mov
aas
stos
push
int3
sbb
test
xrelease
jmp
add
test
lods
fs
aas
decl
mov
jg
rcrl
aad
dec
outsl
push
orb
popa
add
rorb
jp
sbb
xor
outsl
lahf
sbb
push
sub
jg
and
popa
pop
fidivs
sub
xchg
xor
fmull
fistpll
shlb
aas
lcall
xchg
pop
xchg
outsl
add
sub
mov
sti
add
sti
negb
ret
je
push
xchg
lcall
orl
loope
pop
rorb
sbb
lea
lcall
pop
mov
gs
add
or
sub
mov
arpl
sti
fdivs
stc
aas
orb
pop
add
iret
daa
mov
pop
sarb
ret
dec
sar
inc
ret
fnstcw
dec
cmp
xor
cld
mov
orb
push
scas
mov
aaa
push
jno
popa
scas
lret
lock
mov
movsl
mov
insl
sbb
jmp
dec
cmc
adc
sub
fs
mov
push
adc
pop
push
xor
cs
stos
adc
inc
loope
cli
es
in
sub
push
mov
mov
in
mov
addr16
lret
adc
lea
and
test
mov
push
ss
pop
cmpsb
and
mov
test
adc
xlat
mov
adc
pusha
cwtl
xchg
ds
sub
mov
mov
mov
shrl
add
outsb
dec
stos
push
mov
movsl
mov
loope
and
push
or
test
xlat
nop
adc
insl
xor
movb
mov
das
jae
xor
adc
testl
sbb
fst
and
aam
dec
sub
add
pop
sub
sub
sbbb
fmul
mov
xor
fiaddl
and
ss
aam
mov
lock
pop
fmull
mov
mov
ljmp
outsl
or
rcr
out
repz
mov
push
insb
and
rcrl
push
pop
outsb
or
mov
adc
jmp
ds
mov
pop
jne
jge
pop
sbb
in
adc
jnp
fnstsw
out
fildll
roll
xchg
mov
test
pop
mov
dec
dec
xor
cmp
pop
repz
mov
int
pushf
mov
fwait
inc
or
push
mov
xor
xchg
inc
jmp
scas
and
jl
rolb
pop
mov
out
push
and
xor
mov
insl
push
ror
or
mov
lods
popf
xchg
jg
inc
test
or
mov
ss
bound
dec
mov
lock
sub
mov
inc
shll
test
mov
cli
fstl
sbb
pop
inc
xchg
rorl
sbb
xlat
push
and
jno
mov
sbb
xor
rol
in
dec
loopne
xor
movsl
pop
dec
fld
adc
sbb
dec
into
fimull
pop
or
and
or
jge
mov
es
xor
shl
fcompl
cltd
mov
xchg
pusha
mov
insb
push
dec
sti
lret
xor
sbbl
add
dec
vmovlps
mov
add
out
bound
pop
aaa
je
xorb
lcall
mov
sub
mov
mov
outsb
xorb
pushl
out
sub
or
shll
sub
mov
dec
shrl
and
cmp
das
rclb
pop
pushf
mul
xchg
sub
dec
push
sbb
sarb
js
repz
mov
test
fsubl
es
aaa
mov
cltd
add
ss
cmp
loopne
pop
out
cmpsb
fs
repz
adc
sbbl
jnp
js
call
mov
idivl
sub
add
push
sub
es
cmp
jns
hlt
mov
in
jp
repz
cmp
or
xor
cmpsb
lods
push
pop
mov
gs
popa
jg
jae
or
lret
dec
loop
inc
pop
movsb
and
inc
cmpsl
or
xchg
cmp
xchg
xlat
mov
sbb
xchg
mov
or
adc
adc
lods
lea
je
fsts
dec
leave
scas
cmpsb
adc
hlt
stc
xor
int
cs
jle
cmp
jbe
xlat
iret
rol
adc
scas
ret
sbb
xchg
lock
mov
test
or
js
and
fdivs
push
add
xchg
adc
and
insb
jbe
icebp
mov
pop
das
mov
inc
out
leave
mov
fsubrl
push
sbb
aaa
cld
push
out
daa
sub
repnz
sub
sub
int3
insl
dec
sub
push
clc
push
shl
mov
leave
pusha
sti
pop
std
sub
or
gs
cmp
dec
mov
mov
adc
es
push
push
pop
xor
negl
mov
mov
repnz
insl
icebp
xor
test
ja
lock
int3
ja
imul
lcall
and
mov
faddl
pop
out
fbstp
and
jmp
lods
rcrb
mov
jmp
adc
mov
aam
pushf
dec
cmp
push
iret
jno
sahf
xchg
mov
pop
andb
aas
out
dec
mov
mov
ljmp
loopne
and
les
sub
dec
fdivl
push
sub
cmp
mov
into
dec
pop
mov
mov
push
cmpsl
push
lds
stos
iret
mov
xlat
dec
and
scas
push
cmp
divb
ds
push
push
lret
sahf
pop
sbb
jle
cmp
std
aam
xor
in
loop
inc
jle
adc
ret
mov
fldt
xchg
shrb
test
add
loopne
mov
loope
and
imul
leave
mov
add
jo
xchg
mov
mov
inc
and
mov
pop
cmpsb
cmpsb
and
iret
inc
je
dec
idivb
mov
mov
sub
cmc
sbbl
pusha
sbb
imul
jle
inc
mov
cs
xchg
call
scas
lcall
xor
jbe
jge
xchg
jp
test
and
nop
and
lcall
inc
arpl
xchg
movsl
sahf
dec
popf
inc
insb
ret
fwait
xlat
insl
insl
int3
ss
push
shrl
cwtl
mov
jae
mov
stc
daa
push
out
xchg
dec
ret
pop
es
out
push
bound
nop
bound
mov
jmp
in
scas
cmpsb
lret
or
cltd
inc
jnp
push
pop
push
sbb
shl
sub
push
sti
insb
lahf
jno
inc
sbb
mov
dec
dec
fisubl
imul
outsl
das
fcmovnu
int3
push
dec
lcall
pop
and
xor
sub
add
lret
xor
shll
cld
cltd
out
hlt
nop
xor
clc
xchg
lods
mov
test
cmp
cmc
add
lret
xchg
js
inc
mov
lcall
lds
fdivr
cmp
push
inc
mov
xlat
jl
jl
jge
xor
addl
mov
mov
cmp
mov
movsb
inc
enter
pop
adc
sub
aam
int3
iret
push
int3
test
jmp
test
fmull
fwait
xchg
ljmp
stos
ljmp
sbb
cmp
adc
les
mov
iret
add
pop
xor
fsts
stos
out
mov
and
fmuls
push
push
fisubl
jne
in
jne
loop
lret
push
loope
ret
sbb
push
lret
mov
adc
lret
insl
pop
std
cwtl
fisttpl
icebp
xorb
mov
add
fisttps
pop
aas
sbb
in
mov
testl
xchg
inc
fisubl
std
bound
ss
insl
aam
bnd
sbb
popa
imul
push
xor
mov
fdivl
addps
sbb
push
fdivr
fs
pop
fadds
or
cwtl
gs
cmpsb
call
xor
imul
imul
inc
sbb
jl
out
add
popf
addb
lahf
popf
scas
xchg
and
sub
daa
pop
add
les
dec
test
cld
ret
lea
cmp
rol
xor
mov
cmc
cwtl
xor
and
cli
jecxz
mov
popa
test
mov
xor
ret
and
xor
adc
das
xchg
inc
push
jle
xchg
cmp
imul
sbb
shlb
negb
cmpb
sub
mov
arpl
arpl
fisubl
xor
insl
mov
imul
xchg
fisubrl
push
movsb
loopne
mov
dec
add
sub
dec
mov
add
mov
push
js
ss
ljmp
add
dec
lret
xchg
sbb
adc
push
add
repnz
cmc
adc
in
fdivrs
mov
inc
movsb
fdivrs
rclb
pop
push
mov
out
or
xorl
xchg
sub
push
or
or
mov
imul
mov
and
les
push
sti
loopne
lahf
dec
popf
inc
or
arpl
rcr
in
sbb
stos
mov
sbb
js
int3
je
outsb
jbe
lock
and
repnz
jns
imul
mov
xchg
popa
mov
sub
dec
add
xchg
cmp
push
jae
or
pop
fnstenv
sub
fwait
mov
mov
mov
inc
dec
push
xchg
mov
hlt
dec
cmpl
push
sahf
cwtl
fcmovne
adc
xchg
outsb
add
sti
add
repz
jo
inc
pop
cmpsl
cltd
sar
ds
pop
jmp
out
imul
sub
mov
jmp
lret
test
aas
jp
push
cmp
lret
pushf
in
xor
test
lret
inc
mov
stos
sub
lea
xchg
dec
out
sub
fdiv
aas
aas
sbb
push
sarb
icebp
in
or
mov
adc
xor
lcall
mov
fstps
fistl
outsl
daa
aam
pop
ss
lock
test
leave
sbb
dec
js
clc
or
dec
loope
imul
add
pop
std
es
mov
jo
mov
mov
jl
int3
psubsb
cld
int3
stos
add
xchg
outsb
add
in
push
test
icebp
push
dec
pushf
push
sbb
ds
fwait
repz
mov
js
cmp
add
adc
repz
lcall
mov
add
push
repz
movsl
shll
test
or
and
xor
mov
or
jg
das
dec
loopne
add
mov
bound
push
jp
call
inc
push
sti
fs
daa
sub
fisttpll
xchg
jmp
fwait
loope
or
in
ret
pop
loopne
insb
movb
jge
out
mov
popa
sub
mov
sub
add
scas
push
repz
test
pushf
cmp
outsl
push
into
lock
out
sahf
clc
push
enter
or
mov
fsubrl
dec
fnstsw
mov
pop
add
inc
add
pusha
cs
and
data16
daa
out
add
outsl
pop
xor
xchg
jns
mov
popa
push
cmpsb
push
xor
out
mov
inc
pop
add
sarl
dec
push
push
test
js
mov
in
call
xor
pop
or
and
xor
jo
aad
dec
mov
imul
inc
mov
nop
sub
mov
aam
flds
dec
pushf
rorb
pop
add
cli
dec
pop
iret
ja
adcb
je
pop
imul
add
in
dec
fisubl
lods
sbbl
xor
inc
addb
fdivr
andb
sub
xchg
xor
jns
or
mov
inc
sub
sub
in
lcall
xor
jns
inc
jo
sbb
sti
test
xchg
mov
adc
icebp
jnp
iret
xchg
test
jg
js
cli
insb
aad
mov
xor
cld
test
push
xchg
push
xchg
cld
ss
shll
jno
rolb
stos
xor
nop
sbb
jp
and
push
sar
mov
dec
ljmp
dec
les
cld
mov
jge
in
xor
test
jo
clc
pop
hlt
mov
sbb
fmull
scas
lea
adcl
add
ficomps
sub
insb
and
add
push
adc
mov
stos
rcll
xlat
stos
scas
rcrl
pop
clc
rcrl
adc
jmp
pop
popf
jge
add
pop
inc
sub
and
mov
movsb
inc
addps
sub
or
cmp
out
cwtl
add
cmp
dec
fsts
stc
outsb
pushf
out
xlat
imul
push
mov
aaa
sbb
push
sbb
xchg
pop
fs
inc
push
and
cmpsb
sbb
js
push
jmp
push
in
test
shll
sbb
mov
into
adc
lock
test
push
ret
out
outsl
add
stos
xchg
mov
sbbl
and
stc
stos
xor
push
jp
mov
ret
gs
or
push
shll
rcr
xchg
clc
shrb
ds
outsb
insb
sbb
adc
inc
cmpsl
sbb
or
outsb
mov
popf
mov
inc
push
mov
cmp
mov
fs
jo
sub
sbb
or
jl
push
mov
xor
int3
lds
add
pop
push
adc
xor
aaa
stc
dec
fwait
ds
push
data16
inc
xor
outsb
int
pop
lret
clc
sysret
ss
jnp
adc
inc
leave
imul
adc
ret
xor
jp
divl
dec
sbb
scas
xor
pop
loopne
fnstcw
jg
lods
mov
mov
xor
fistpll
je
repnz
das
fcom
push
cwtl
mov
xor
pop
lds
mov
aaa
shlb
adc
in
mov
and
test
mov
popa
push
mov
idiv
mov
dec
aas
mov
je
cli
jb
imulb
fsubrl
movsb
je
lret
lods
pop
jae
clc
xor
cmp
loopne
loopne
fadd
cwtl
imul
mov
push
jns
mov
adc
les
out
dec
ret
out
icebp
push
cmpsb
mov
sub
dec
and
xchg
mov
adc
sub
test
call
or
add
xchg
pop
ret
jae
inc
movsb
sub
out
and
push
fmul
imul
cmp
pop
shrb
sub
mov
pop
push
andb
lea
mov
and
scas
push
mov
daa
fwait
insl
add
pop
mov
jge
add
add
jo
mov
or
mov
xchg
out
mov
xor
ljmp
xor
faddp
test
xor
inc
cmpsl
mov
sub
enter
add
mov
rorl
in
out
movsb
es
xchg
nop
hlt
push
or
or
inc
or
fcmovb
push
mov
or
int
and
jmp
dec
cmpsb
rcll
sbb
xor
cmp
add
cmp
pop
mov
neg
push
lea
mov
dec
sbb
mov
sub
pop
push
and
sub
imul
push
gs
inc
pusha
lret
and
fdiv
or
xor
sub
mov
sahf
dec
push
sub
iret
cmp
and
push
xchg
fwait
inc
fistpl
and
ljmp
xor
jae
imul
std
jmp
outsb
sub
fisttpll
jb
adc
mov
fbstp
mov
adc
filds
xchg
and
jp
or
cli
jl
xchg
pop
inc
inc
pop
pop
jae
lods
lea
xchg
cmp
dec
rcrl
or
cmpsb
aas
push
dec
dec
std
cwtl
test
aas
sub
rcpps
xchg
pop
dec
pop
add
imul
lret
dec
sbbl
push
into
cwtl
in
ljmp
add
adc
lret
jmp
std
sbb
gs
and
sbb
xchg
repz
add
adc
mov
iret
fcomps
scas
shl
cmc
dec
pushl
push
and
ficomps
outsl
lods
clc
sbb
add
in
jmp
mov
push
ss
jmp
push
outsb
js
mov
mov
call
je
adcl
insl
mov
sub
enter
sbb
loopne
mov
or
inc
aam
roll
xlat
inc
sbb
loopne
ja
push
out
xchg
push
cmp
cmpsl
inc
lods
sbb
jge
dec
xchg
add
mov
xorl
jae
push
pop
mov
xor
lret
lock
xchg
mov
xchg
sbb
pop
fdivl
bound
adc
fsts
sahf
lret
and
in
in
loope
mov
inc
mov
adc
and
in
jle
mov
sub
mov
or
sbb
jb
dec
cli
jg
mov
aam
loope
xchg
sahf
mov
sub
sbb
adc
or
mov
test
ja
hlt
scas
daa
pop
cmpsl
mov
cmp
mov
xor
dec
and
daa
fbstp
ja
cmpsl
pop
stos
xor
sub
mov
call
adc
into
xor
dec
loope
mov
dec
sub
adc
jo
mov
in
dec
mov
es
test
roll
jg
adc
push
fucom
les
push
xchg
xchg
in
mov
aam
data16
lret
dec
subb
gs
in
lcall
sub
jmp
inc
add
outsl
mov
pop
mov
int3
adc
xchg
leave
push
sub
jp
mov
and
add
xor
imul
mov
rol
inc
and
sub
add
jnp
mov
fsts
push
mov
stc
cmp
mov
sub
dec
faddl
loope
in
lods
cmpsb
mov
popa
add
cmpsl
add
repz
adc
je
lahf
jle
test
and
rcrl
pop
stos
mov
mov
or
scas
sahf
icebp
mov
adc
xlat
out
or
cmp
adc
lret
mov
xchg
adc
adc
xchg
fdiv
addr16
rcll
push
xchg
xor
cmp
push
int3
pop
fldenv
mov
js
inc
leave
mov
leave
dec
dec
icebp
push
mov
pop
dec
lds
xor
pop
xor
sbbb
test
inc
add
jb
aas
cmp
push
and
imul
int
mov
je
cmp
loop
enter
subl
cmp
mov
fwait
and
add
jbe
mull
dec
loopne
push
stc
cwtl
scas
in
add
xor
lock
add
mov
imul
cmp
xchg
fdivrp
orl
cmpsb
repz
cmp
int
lcall
sbb
lock
rcl
test
jg
lret
adc
or
jnp
stos
imulb
mov
data16
and
push
cwtl
mov
fisttpll
ds
mov
loope
push
adc
inc
jne
lock
into
aad
push
mov
in
cmp
test
aas
xchg
mov
test
fwait
rcll
xchg
sahf
add
dec
mov
sbb
mov
scas
add
lea
movsb
jmp
xor
in
lock
pop
mov
mov
fdiv
or
or
sbb
sbb
push
jne
xor
jmp
mov
jbe
stos
sub
xchg
shlb
pusha
mov
xchg
dec
arpl
jmp
fwait
loop
xchg
xchg
push
xor
test
sti
mov
in
out
popf
dec
in
mov
jbe
je
daa
hlt
pop
xchg
jb
in
fdivrl
push
ds
jne
jae
lea
pop
add
movsl
jno
xchg
cmpsl
mov
cwtl
push
xchg
sbb
sti
int
fwait
xor
jo
cmp
inc
add
aaa
add
jnp
popf
in
sahf
cltd
pop
filds
cmp
ret
pop
mov
push
dec
stos
pop
xlat
push
stos
sub
fstpl
call
in
fsubr
dec
lods
sti
rclb
add
ret
pop
jb
xor
mov
jae
jns
stc
lret
movsb
jg
dec
aaa
or
xchg
test
mul
imul
in
sub
dec
mov
jae
jp
sub
imul
cmpsl
xor
inc
mov
xchg
cmp
loopne
mov
rcrb
stos
notl
hlt
loopne
lods
and
js
pop
mov
push
fildl
mov
ja
aas
in
mov
xlat
push
lock
dec
inc
xchg
std
sbb
test
repz
into
xorb
mov
push
bound
jl
mov
test
add
jp
std
mov
negl
repz
mov
sub
push
or
orl
daa
or
push
jle
rorl
sti
pop
dec
mov
cltd
sti
mov
loop
pop
cmp
inc
pop
fisttpl
sub
pusha
orb
subb
mov
adc
adc
lock
pop
lods
dec
mov
nopl
ret
push
xchg
mov
dec
xchg
jg,pt
addl
call
ss
cs
xchg
xor
mov
jnp
hlt
sbb
add
pop
pop
lret
add
mov
mov
cld
andl
mov
push
call
rolb
les
enter
loop
push
cmp
mov
fiadds
test
popa
jae
push
loope
jae
push
ss
xor
xlat
pop
pop
jne
sbb
dec
xlat
sbb
or
dec
sahf
scas
stos
int3
xor
cmpsb
sbb
daa
sbb
mov
repnz
and
sbb
fcompl
jecxz
movsl
and
rcll
or
in
push
sub
adc
fbld
std
les
mov
ds
sbb
lret
into
aam
cld
cmc
inc
sbb
mov
adc
or
loope
mov
je
shl
or
and
or
push
add
push
filds
or
mov
movsl
xor
cltd
or
lock
out
subl
jmp
ja
mov
addr16
out
and
addr16
sahf
aaa
leave
fbstp
adc
sbb
cli
xchg
lret
dec
in
out
stc
lahf
in
cmc
and
mov
aad
xchg
aas
adc
and
mov
call
rcr
das
inc
dec
pop
pop
sbb
add
scas
adc
adc
in
stos
insl
xor
pop
adc
xor
mul
jg
mov
arpl
add
sub
or
sbb
mov
sbbl
out
movsl
xor
push
add
out
xorl
dec
push
test
stos
pop
js
das
xor
sbb
mov
fisubl
pop
and
icebp
xchg
xchg
test
jl
mov
push
xchg
sbb
or
push
xor
cwtl
push
jge
cmp
idivl
loop
mov
jno
mov
jb
dec
icebp
adc
pop
test
setnp
or
mov
adc
icebp
mov
sbb
mov
ljmp
lcall
inc
mov
and
dec
inc
xchg
sahf
iret
fnstenv
dec
es
imul
mov
lret
mov
repz
jle
popa
in
xchg
stos
mov
push
ja
fisubs
fstl
or
jg
imull
fcompl
sbb
jno
lock
outsb
js
cmp
std
out
inc
repz
negl
mov
cmp
xchg
xchg
pushf
nop
dec
xchg
mov
fwait
add
scas
cmp
inc
aad
jmp
mov
mov
and
inc
sbb
popl
pop
pop
ds
push
sarl
xorb
cwtl
push
jns
xchg
fisttpll
pop
and
adc
xchg
lret
jns
adc
test
mov
lea
mov
pop
neg
mov
mov
jge
xor
mov
push
or
out
push
push
sti
dec
pavgw
cmpsl
xor
mov
sti
mov
test
stos
inc
std
xchg
fldcw
mov
rolb
popa
loopne
or
insl
in
cli
inc
hlt
negl
repz
adc
lahf
iret
mov
mov
adc
stos
icebp
xchg
xchg
mov
cs
sbb
inc
dec
in
and
call
sar
inc
adc
aas
xchg
adc
into
mov
cmp
pop
sbb
xchg
je
xor
mov
cmpb
xchg
sbb
xorl
mov
addr16
int
sub
shr
movsb
arpl
jns
movl
mov
and
xor
jecxz
dec
pop
add
mov
or
loope
lods
decl
jmp
cmp
sbb
movsb
mov
stc
scas
pusha
insb
fwait
leave
andb
out
rcrb
xor
pop
fistps
out
and
das
in
pusha
jecxz
mov
pop
lcall
push
iret
leave
jle
lds
lret
jns
pop
or
or
or
movsb
negb
add
sub
punpckhwd
mov
jnp
stos
outsb
and
jno
out
loope
orb
jg,pn
js
push
leave
repz
inc
jae
jbe
mov
andl
inc
mov
xchg
mov
jb
xor
nop
cld
pop
xor
mov
lods
inc
mov
cltd
mov
roll
pop
pop
mov
and
push
dec
mov
jecxz
repnz
jbe
call
or
mov
sbb
jmp
insl
pusha
dec
add
sub
add
lahf
adc
mov
loopne
push
sbb
adc
jo
pop
xchg
cltd
aas
test
add
xchg
enter
mov
ja
or
lods
xor
mov
push
loopne
add
mov
daa
lahf
dec
push
jbe
inc
or
out
lea
sti
mov
xchg
lds
in
sbb
sbb
movsl
inc
out
jp
push
push
xorl
or
dec
push
loopne
in
lods
aad
cmpsb
out
arpl
movaps
mov
or
arpl
xchg
push
and
fdivrl
push
dec
dec
rcrl
dec
pop
call
mov
dec
andb
icebp
or
xchg
out
mov
push
pushf
sbb
enter
sti
ror
and
dec
sbb
lahf
faddl
out
pop
arpl
push
dec
loope
add
cmp
sub
and
rorl
xchg
xchg
mov
test
jnp
pop
cmp
orl
sub
mov
pop
out
xchg
pop
sub
ret
dec
cwtl
dec
ljmp
inc
movb
jne
cltd
xor
insl
sbb
adc
pop
push
mov
mov
push
cwtl
sbb
or
mov
das
movsb
sbb
and
dec
jecxz
add
insb
sbb
pop
or
push
cmpsl
xor
sub
or
mov
cld
ja
aad
cltd
hlt
sub
xor
inc
cmc
scas
xchg
mov
xor
adc
pop
nop
cmp
dec
test
test
nop
call
push
mov
lods
cmp
addr16
inc
or
es
andl
sbb
adc
std
movsb
pop
or
lock
cmp
mov
jnp
push
inc
hlt
sub
insl
jmp
xchg
pop
jb
jnp
push
mov
ss
dec
pop
mov
sbb
pop
stos
jmp
scas
xchg
sub
loop
divb
fdivr
xor
movsl
leave
mov
push
mov
mov
lock
cmp
orl
pop
test
cmp
adc
xorb
ja
data16
test
mov
xchg
add
dec
pop
pop
insl
into
out
mov
and
repz
cmpsb
add
cmp
cwtl
xlat
xorl
sbb
xorb
sbb
add
lods
jle
push
ljmp
fidivrs
leave
in
insl
mov
dec
push
out
fidivl
sar
mov
push
imul
xchg
das
xchg
ret
xchg
xor
je
pop
fdivrl
jo
dec
cmp
popa
add
sbb
add
sbb
adc
push
addr16
das
cli
shrb
mov
mov
jbe
sbb
aam
sub
push
push
fsubrp
dec
add
and
mov
lock
xchg
mov
arpl
inc
mov
pop
ljmp
mov
es
aad
inc
mov
jmp
or
cmpsl
mov
fwait
fcmovb
fbld
roll
movsb
sub
dec
loope
iret
inc
nop
xor
mov
pop
subl
mov
sub
incl
inc
nop
faddl
mov
mov
add
cmp
inc
cmp
mov
mov
pop
ja
jecxz
mov
push
ja
xor
pop
xchg
adc
test
lahf
push
in
aaa
dec
jle
test
imul
std
cmpsl
and
ds
shll
add
imul
add
pop
out
insb
xchg
cwtl
mov
dec
push
adc
aaa
sub
shll
stos
fbstp
cmp
fisubs
jg
in
pop
mov
and
jne
inc
jb
mov
xor
xlat
dec
ljmp
mov
sahf
adc
cmpsb
xchg
lahf
int
jecxz
jo
pop
mov
aas
ret
test
mov
enter
xchg
fcmovu
and
jp
fldl
xchg
aam
setbe
ret
aas
mov
mov
test
ljmp
cmp
js
insb
loop
lret
insb
mov
add
orl
pop
out
cltd
call
pop
ja
inc
jb
movsb
xchg
pop
cwtl
dec
xchg
lcall
xchg
mov
das
ds
les
sbb
addb
stc
inc
loope
rol
fcomip
in
or
iret
pushf
cld
jnp
cltd
jns
cli
xor
and
in
push
mov
jg
cwtl
addr16
sbb
jno
add
and
data16
cmpsb
bnd
and
push
xchg
sub
inc
dec
add
jmp
push
pop
push
je
push
inc
ja
sbb
sbb
flds
mov
fldt
fisubrl
mov
cld
cmp
outsb
sub
pop
andl
cmp
daa
adc
fstpt
push
mov
insb
lret
arpl
cltd
dec
imul
int
ja
mov
mov
ja
xchg
sahf
push
xor
ds
pop
fdivrs
pop
std
sub
ss
lock
es
fcompl
iret
lds
jne
mov
mov
xor
sbb
movsl
int3
mov
ljmp
imul
push
loop
repz
pop
pop
fldcw
and
jecxz
loop
and
cmpsb
cmp
adc
leave
mov
ret
push
pop
cmp
and
sub
idivl
lods
and
fst
sub
sbb
inc
pop
add
mov
mov
xor
jge
mov
stc
inc
xor
pop
loop
lcall
mov
mov
hlt
insb
lcall
je
pop
in
sub
jns
jp
int
data16
pcmpgtb
dec
arpl
sub
adc
mov
dec
rcr
and
iret
jmp
sti
jecxz
jmpw
hlt
scas
jmp
xorl
cli
jns
hlt
insl
push
jo
out
repnz
sbb
fisubrl
sub
leave
mov
push
add
or
testl
jle
jnp
sub
test
repz
shrl
pop
mov
jmp
mov
jb
push
inc
lret
sbb
les
sahf
stc
cmp
jno
mov
fidivl
push
cmp
xor
rolb
and
ljmp
mov
popa
jmp
cltd
xchg
adc
sarl
xchg
rcrl
mov
adc
push
inc
lcall
mov
xchg
pop
xchg
aad
push
scas
addb
jae
lret
cmp
mov
pop
pop
cmp
shrl
sar
das
lret
inc
mov
test
outsb
dec
jl
mov
jno
pop
inc
pop
leave
aaa
inc
pop
js
mov
insl
insb
xchg
sti
xchg
pop
je
ret
scas
pop
add
adc
leave
lret
xchg
pushl
adc
cmp
cld
mov
cwtl
inc
popf
mov
and
or
sahf
aas
jle
ret
and
je
lahf
imul
jnp
jle
into
cwtl
mov
inc
fistl
adc
mov
aam
inc
out
daa
mov
xchg
xchg
inc
fmuls
dec
mov
xchg
xchg
lea
xor
ds
mov
inc
roll
repz
stc
outsb
arpl
stos
and
cmp
lods
push
push
enter
sub
push
mov
lret
mov
outsl
inc
arpl
dec
arpl
inc
outsb
jbe
shrl
pop
aam
outsl
mov
js
jno
mov
lds
jle
out
cltd
rol
jno
in
cmpsl
daa
mov
sbb
in
call
xchg
test
and
fimull
push
inc
xor
mov
shl
ret
sub
xchg
or
outsl
enter
adc
pop
cs
and
lahf
mov
fmuls
xchg
push
adc
jno
call
or
sti
xor
shlb
fs
sub
dec
fs
clc
mov
popf
pop
jb
jae
call
icebp
jns
xor
sbb
push
sarb
imul
pop
movsb
and
and
push
fcomi
cmp
mov
jle
test
xchg
sub
dec
shlb
sbb
lret
dec
imul
sbb
std
mov
jecxz
orb
mov
rolb
inc
insb
aas
sbb
lods
push
adc
pop
adc
scas
mov
popf
dec
int3
scas
inc
ss
dec
stos
jl
push
imul
mov
pop
mov
cmp
inc
pop
int
add
loopne
inc
inc
in
stc
sar
mov
ljmp
mov
jno
arpl
push
pop
add
sahf
or
add
scas
add
jmp
dec
fnclex
pop
cltd
call
ja
ret
and
mov
pop
adc
mov
xlat
mov
mov
adc
imul
add
cli
scas
mov
or
mov
xor
xor
fdiv
out
xchg
cli
outsl
testb
xchg
or
mov
push
add
movsb
rol
jae
or
and
pop
add
cmpsl
sarb
jo
adc
out
out
fsubr
inc
outsb
lret
cmpsl
push
icebp
in
adc
jmp
xchg
cmp
cmpb
dec
sub
addr16
push
jne
pop
cs
sub
mov
hlt
sbb
rclb
in
dec
sub
cmp
inc
sahf
add
add
dec
mov
js
xchg
pop
dec
mov
in
addr16
cmp
dec
inc
sub
test
xchg
adc
sub
pusha
mov
cmp
mov
in
pop
pop
stos
mov
or
xchg
orl
fwait
mov
popf
sbb
dec
sub
xchg
nop
xchg
mov
fisubl
arpl
aam
jle
gs
scas
jno
ljmp
js
movsb
and
inc
cmp
add
jae
inc
shlb
xor
dec
jne
ret
dec
or
mov
sub
adc
jbe
push
int
test
ret
jl
lret
pop
aas
scas
or
out
shlb
ret
push
sub
dec
and
xor
jae
call
dec
cld
push
sti
push
push
mov
outsl
lock
fdivr
lret
lods
repz
jle
repnz
jne
lods
pop
dec
jns
mov
stos
ljmp
mov
push
push
jno
add
xchg
xchg
movl
inc
adc
in
mov
push
xchg
outsl
inc
jnp
cmp
loop
mov
in
mov
adc
cmp
mov
fdivr
xchg
out
popf
xor
jp
push
in
mov
push
movsl
and
cs
xlat
sub
call
sub
mov
mov
cld
add
jle
ja
fildll
mov
jns
push
jnp
sti
xor
loop
cmpsl
imul
mov
and
aam
push
jl
inc
sbb
jnp
pop
lcall
pop
cmc
jno
mov
adc
idiv
xchg
push
and
lods
mov
enter
dec
mov
rep
add
bound
jne
loopne
jmp
push
push
and
and
xor
or
adc
push
add
adc
jmp
or
das
lods
sbb
in
fisubl
push
int3
sbb
pusha
inc
testb
jmp
stos
out
test
sbb
sub
insb
lahf
test
lods
adc
dec
mov
rcll
mov
xor
test
push
mov
fsub
in
and
push
lds
iret
pop
sub
fisttpll
cmpsb
orb
xor
and
jg
xor
ss
inc
mov
jl
inc
shl
cs
repz
push
inc
push
mov
lcall
push
mov
gs
fisttps
int
insl
push
mov
xchg
lock
into
mov
mov
or
dec
jp
cmp
test
xor
mov
lock
mov
aam
mov
stos
sbbl
js
mov
mov
leave
or
adc
dec
or
gs
push
and
push
and
jg
lods
mov
mov
inc
jmp
xchg
orl
mov
bound
sbb
roll
das
out
mov
mov
sarl
mov
mov
fcmovb
roll
pop
out
stos
cs
adc
lds
stc
adc
push
loope
repnz
lret
mov
or
pushf
mov
adc
mov
pop
rorb
or
jns
iret
push
sbb
loopne
mov
pmulhuw
mov
jg
mov
test
test
cmp
stos
inc
inc
xor
jecxz
out
jae
or
pop
shlb
mov
aaa
dec
popa
cmp
fmuls
inc
insb
or
daa
sbb
pop
push
cmp
cmc
cmp
repnz
jle
pop
es
movsl
sbb
cmpsb
js
fucom
inc
mov
add
sub
rolb
mov
push
inc
cmp
ret
add
dec
pop
cmp
aad
enter
nop
test
shlb
insb
adc
push
sbb
cmp
add
xchg
xchg
arpl
movsl
lea
or
cmp
dec
mov
sub
fisttpll
mov
clc
cmpsb
xchg
mov
push
scas
in
xor
push
sarb
ljmp
push
mov
jbe
xchg
mov
push
mov
push
add
lahf
push
in
in
sub
xchg
and
jb
test
add
adc
jge
jnp
inc
sub
ja
inc
mov
or
inc
jle
cmpsl
scas
fs
xor
xor
sar
push
test
push
loopne
push
sbb
dec
mov
or
or
test
xor
mov
xor
cmpsl
in
cmp
and
push
outsb
mov
xchg
xor
mov
pop
jb
sahf
into
jp
push
cmp
jno
pop
faddl
jns
int
sti
mov
pop
dec
fs
or
dec
sub
loope
fisubl
in
xchg
cmp
subl
adc
mov
scas
jmp
pop
sub
mov
mov
mov
mov
cmp
mov
outsl
and
ja
js
dec
fbstp
enter
adc
inc
repz
dec
test
repnz
aad
rorl
lcall
mov
mov
sti
divb
xchg
icebp
adc
mov
out
sarb
test
shll
pusha
mov
inc
push
pop
cmc
add
aaa
adc
loopne
jbe
rcrb
and
cmpsl
inc
orb
repz
mov
inc
pushf
push
addb
xor
inc
lcall
add
mov
in
pushf
push
outsl
mov
in
mov
jns
mov
cmp
xor
mov
sub
or
bound
xor
fildll
mov
push
orb
mov
imul
jb
cmp
testl
lea
ret
sahf
and
subl
or
xor
or
push
cmp
push
fidivl
cmp
cmp
jge
sbb
inc
out
sub
stos
jmp
jle
mov
add
int3
jns
loop
ficompl
std
mov
cltd
or
in
push
popf
arpl
dec
adc
jbe
jo
jl
or
outsl
fwait
xchg
cmc
mov
and
dec
pop
and
iret
dec
notb
sub
xchg
xor
add
sub
insb
fdivrs
adc
cmpsl
xchg
fsub
mov
add
ffree
mov
xchg
test
mov
bnd
gs
ret
insl
stos
out
rcr
dec
or
mov
and
and
stos
sti
je
xor
pop
orl
adc
adc
mov
fcmovb
mov
dec
test
sub
ss
pop
test
pop
ret
popa
mov
pop
clc
jo
ficomps
ss
icebp
fwait
xchg
cmp
mov
nop
xor
mov
movaps
adc
push
cmp
ret
push
push
add
mov
lret
lods
push
xchg
mov
sub
adc
fldl
movsl
or
cmp
das
and
inc
sbb
mov
pushf
out
lea
sub
mov
inc
xor
pop
shr
faddl
or
fsts
xchg
out
js
xchg
imull
into
sbb
add
fldl
cmp
mov
scas
cmp
cmp
or
fisubl
push
add
cli
sahf
mov
idivl
movsb
js
mov
xchg
mov
push
and
mov
shlb
xchg
out
pop
add
lea
pop
out
add
sarb
push
inc
int3
loope
lds
loope
push
ja
jne
xchg
xchg
cmpb
pop
insb
pusha
cwtl
dec
aad
leave
stc
lods
dec
mov
sbb
add
stos
dec
rorb
xor
pop
icebp
outsl
push
and
imulb
sub
xlat
inc
jo
aaa
imul
subb
test
mov
jg
xchg
popf
inc
xchg
pusha
loop
inc
cmpsl
xchg
add
push
fcmovnu
mov
pop
add
add
mov
push
adc
stos
dec
cmp
xchg
fdivs
jle
inc
mov
sub
fsubrl
inc
je
jno
je
pop
insl
roll
int3
call
adc
lret
das
push
repz
inc
adc
insl
dec
clc
cli
mov
adc
mov
jnp
fidivs
loope
jbe
jle
mov
mov
cltd
js
jne
pop
or
hlt
vpcmpgtw
cmp
aas
mov
cmpb
cmp
adc
mov
lods
jne
or
inc
add
cwtl
leave
in
pop
xor
rorb
push
and
add
call
lea
push
cmp
out
adc
jmp
pop
mov
adc
add
adc
cmp
out
fcmove
mov
cmp
loop
inc
leave
xchg
loopne
xchg
clc
and
rclb
push
add
loope
xor
inc
aam
mov
inc
sbb
push
std
lret
dec
jecxz
popf
inc
cmc
imull
jmp
push
popa
lret
sub
repnz
jbe
andl
hlt
enter
out
imul
mov
push
pop
and
mov
cli
lock
lret
outsl
jns
fcoms
adc
repz
and
mov
pop
xor
xlat
dec
lret
insl
dec
cs
stos
sub
dec
push
pop
inc
and
js
test
jp
outsb
xchg
inc
sub
add
cld
and
mov
add
mov
movsb
in
push
repnz
pop
incb
je
add
js
int
popf
in
push
inc
adc
push
test
mov
into
pop
mov
dec
cmpl
pop
ss
sub
cmp
pop
push
test
jns
scas
dec
popa
inc
dec
clc
xchg
and
jge
xor
inc
jge
fwait
push
out
xchg
stos
in
xchg
sbb
aas
mov
xor
andb
int
imul
lods
push
cmp
movb
adc
mov
or
sbb
xchg
sarl
js
push
ja
mov
inc
jecxz
and
inc
lahf
mov
mov
test
popa
cli
call
dec
imul
dec
sbb
xor
aas
mov
mov
jae
in
sbb
xchg
in
or
add
ds
ja
dec
aaa
push
lea
jbe
xor
dec
push
mov
fadds
into
cmovl
test
dec
lock
lcall
pop
loope
and
jns
rcll
cmp
or
dec
in
xchg
or
shll
xchg
imul
mov
sub
jg
into
in
or
cld
push
jne
loopne
jns
ret
addl
pop
sbb
sub
js
movsl
loop
add
jmp
mov
xor
lahf
lds
cmp
jno
xchg
ja
xchg
sbb
dec
in
int3
jne
or
inc
cmc
test
movsl
and
mov
inc
mov
mov
sub
mov
fs
jmp
mov
insl
mov
pusha
loope
in
clc
in
int
mov
mov
imul
loop
jnp
adc
or
adc
jnp
mov
jle
cmp
xlat
mull
loope
das
mov
jnp
insb
rclb
and
push
test
xor
fcomps
enter
lret
inc
pusha
push
std
adc
push
mov
jle
stos
lds
mov
lahf
inc
xor
popf
xor
inc
add
jno
jge
sbb
std
ficompl
push
rcl
adc
add
mov
arpl
xor
rorl
xor
inc
in
test
sti
or
xchg
out
lcall
sbb
adcb
jns
shll
ja
sbb
jae
iret
add
adc
sbb
push
push
xchg
ss
xor
adc
inc
adc
mov
or
loopne
clc
mov
jge
pop
jbe
or
xchg
add
js
or
pusha
int
aam
sbb
dec
and
jae
mov
ds
icebp
or
into
cltd
mov
aam
and
and
push
faddl
in
cmp
aas
mov
xor
jle
dec
movsb
cli
fstl
xchg
loop
and
std
lcall
jb
adc
ret
mov
into
sub
dec
inc
cmpsb
dec
lods
inc
in
out
or
fisttpll
popl
dec
or
jnp
jb
pusha
movsb
pop
add
das
aad
test
jb
test
push
pop
aaa
cmp
lds
cmpsl
xor
adc
xor
loope
es
or
cmpl
adc
cs
xchg
fiadds
jns
pop
xor
adc
fistps
fadd
icebp
sub
shll
push
icebp
cmp
cmp
out
push
pop
inc
pop
inc
hlt
sarl
fwait
mov
inc
cld
mov
inc
data16
ret
out
aaa
mov
pusha
cwtl
les
adc
and
sbb
xlat
dec
push
push
sbb
jne
sbb
or
decb
loope
push
sbb
cs
cmp
notl
inc
pop
inc
pop
aaa
jno
test
sub
or
enter
loop
repz
adc
mov
sub
add
pop
push
mov
or
addr16
je
mov
test
mov
xchg
jnp
in
imul
inc
sti
sbb
std
and
sbb
addl
cwtl
andl
adc
pop
push
iret
out
sbb
mov
in
pop
outsb
sub
mov
inc
lcall
sub
or
xorl
or
mov
push
add
add
inc
adc
push
jne
mov
dec
je
push
push
mov
cmp
jmp
jb
xor
test
shrl
es
data16
push
shl
fadds
add
or
shr
or
fiaddl
add
cmpsl
out
mov
ljmp
cltd
sbb
sbb
rep
fsubl
dec
es
js
outsb
add
insb
popa
movd
sub
jecxz
enter
subl
arpl
and
lahf
test
xchg
push
pop
sub
ficomps
orl
ja
and
mov
xchg
inc
push
sub
inc
mov
adcb
sbb
lds
adc
int
push
add
rcrb
insl
daa
jo
xor
fcmovbe
cwtl
push
xchg
pop
jne
xlat
pop
fists
push
jl
std
mov
fs
outsl
cld
and
scas
jge
fisubrs
xchg
setns
xchg
jmp
jns
repnz
or
add
mov
insb
in
inc
adc
roll
arpl
leave
xor
fsts
test
mov
in
xor
mov
jnp
inc
xor
fnstenv
pop
mov
lods
fwait
les
sub
insl
pop
nop
mulb
cs
test
and
and
mov
mov
push
fidivs
cli
cmp
sbb
dec
push
jno
cmp
dec
xchg
repnz
pop
or
and
das
imul
out
inc
jmp
cmp
scas
outsl
lahf
and
mov
sbb
xor
scas
and
lret
sbb
mov
sub
lahf
lods
mov
lahf
test
inc
out
jp
into
inc
mov
inc
xor
lock
cld
int3
shrl
je
lret
jno
fcmovbe
pop
hlt
les
daa
mov
xchg
jp
mov
sti
out
adc
mov
andl
sti
push
fisttps
loop
fbstp
add
in
mov
xchg
push
xchg
sbb
adc
test
push
push
add
adc
cmc
test
cmc
cmp
mov
mov
out
sbb
adc
ret
or
incl
mov
dec
mov
fisubrs
sub
bound
pushl
inc
mov
adc
xchg
aad
and
or
mov
pop
adc
mov
mov
inc
fwait
orb
mov
test
aaa
test
movsb
xchg
and
outsb
jl
ficompl
testl
mov
sub
sti
push
mov
sub
rcr
jbe
jl
mov
jecxz
push
js
cmp
mov
ret
mov
shll
ljmp
mov
lock
and
sbb
movsb
pushf
and
ljmp
or
xor
mov
mov
repz
out
adc
sarl
push
outsl
jmp
pop
faddp
inc
cmc
or
int
mov
in
leave
mov
pop
mov
cld
daa
sub
cmp
dec
jo
gs
dec
jne
mov
pop
push
and
stc
cwtl
icebp
mov
loopne
mov
inc
inc
push
add
mov
xchg
mov
out
mov
xor
xchg
or
inc
mov
push
lods
push
add
in
rcl
fnstsw
push
addr16
packssdw
pop
jnp
test
fdiv
xlat
jae
cmp
xor
xlat
jns
add
mov
jmp
dec
mov
adc
roll
jge
int3
cmpsl
jbe
testl
fs
push
sub
imul
sub
loop
and
pop
aad
inc
in
call
xor
outsl
test
lret
pop
loop
inc
sub
pop
and
xor
xor
or
stc
repnz
jae
sub
jns
sbb
mov
mov
sub
jns
xchg
sarl
or
xor
and
jmp
cli
out
dec
psadbw
scas
mov
shlb
pop
cmp
icebp
lahf
pop
cmp
xor
push
enter
aas
adc
pushf
jo
fs
sti
fistps
dec
lods
clc
popl
cmpsb
shlb
push
adc
mov
popa
sti
mov
stc
mov
test
loop
or
sub
nop
adc
mov
lods
pop
lods
stc
mov
mov
sbbl
jbe
cmp
sub
out
nop
xchg
mov
adc
dec
jmp
pop
cmpsb
add
inc
sar
mov
daa
add
insb
pop
or
dec
pop
fsts
add
popf
cwtl
inc
aas
daa
sbb
inc
popf
int3
out
lcall
inc
into
loopne
out
xchg
inc
ss
fs
roll
cmp
aam
movsl
pop
jbe
test
leave
scas
mov
test
aam
or
lods
push
call
js
mov
mov
sub
cmp
lds
lahf
fisttps
enter
das
push
shlb
jns
es
inc
sbb
shr
inc
cs
and
test
adc
cmpsl
stos
pop
jmp
outsb
xchg
adc
inc
mov
jp
jbe
push
fildl
mov
jnp
push
les
xchg
test
adc
cmp
sbb
es
jnp
lcall
mov
rcrb
ss
divl
ss
cmp
inc
mov
aad
ljmp
pop
mov
js
int
add
cwtl
sahf
fcmovb
pop
test
xchg
add
addb
pop
jae
outsl
mov
push
jl
popf
cltd
and
mov
ja
mov
decb
ret
cmp
push
mov
mov
lods
inc
and
xchg
push
test
push
mov
aaa
mov
test
scas
fidivrs
popa
daa
ret
jne
or
push
aaa
mov
out
fmull
notl
adc
jo
and
rorb
std
out
out
xor
pop
icebp
loop
enter
mov
xlat
outsl
push
cmpsb
sbb
adc
push
popa
std
dec
sub
sarl
jns
jne
sub
lock
xor
pop
test
ljmp
in
scas
mov
lds
sbb
jg
jge
add
push
hlt
into
sub
pop
pop
das
push
icebp
jg
sbb
push
pop
subl
rcr
insb
cmc
mov
cmp
mov
pop
insl
movhps
bound
push
movsb
or
xchg
sub
loope
dec
push
add
ja
stc
sub
sub
dec
mov
mov
inc
and
in
icebp
in
lcall
test
xchg
adc
or
mov
out
cli
fsubs
sbb
add
ss
xlat
xchg
aaa
mov
cs
dec
data16
add
out
xor
jle
sbb
or
dec
push
sarl
jo
push
jb
iret
or
push
xchg
stc
jnp
or
xchg
pop
mov
sar
arpl
jno
dec
call
mov
pusha
xchg
mov
lods
jmp
pop
inc
lret
pop
shll
mov
push
rcll
enter
xchg
mov
daa
jo
push
xor
add
test
sahf
add
loopne
cmpsl
andl
in
int3
outsb
xchg
push
into
sub
fisttpl
lock
mov
test
cmp
lahf
sub
push
cmp
and
insl
cmp
stos
add
fbld
inc
lret
insl
mov
cltd
mov
sub
inc
sub
adc
div
cmp
cli
sub
jmp
xchg
arpl
push
xchg
aaa
inc
fmuls
add
jns
bound
jecxz
rol
or
loopne
sti
cmp
cmp
mov
push
daa
test
cmpsl
repz
insl
arpl
testb
dec
insl
xchg
into
adc
push
ret
aas
mov
sbb
xlat
dec
inc
rcll
sub
or
lea
lcall
and
std
shll
dec
xor
lods
dec
and
add
stos
lea
cmp
ret
ljmp
jp
js
cmpsl
jmp
leave
cmp
jo
push
addr16
andb
and
rol
stos
cwtl
adc
xchg
mov
fucomi
and
test
lahf
aad
test
aaa
std
aas
mov
mov
daa
jo
pop
std
mov
mov
pusha
add
push
dec
outsb
cmpsl
dec
mov
pusha
push
idiv
daa
adc
or
jns
lahf
fucom
adc
arpl
mov
roll
stos
pop
div
shrb
and
mov
xchg
outsb
data16
mov
test
shrl
sub
push
outsb
fbld
push
in
and
pop
sbb
and
sub
mov
cmp
mov
and
repz
mov
adc
jecxz
loopne
loope
daa
lcall
js
jns
popf
dec
mov
push
scas
lahf
xor
testb
out
xchg
lcall
sbb
xor
divl
aas
testb
add
mov
push
mov
fnstcw
sub
mov
int
data16
pop
jecxz
ret
sbb
test
ss
adc
repnz
data16
cmp
sub
ds
jl
aaa
push
dec
xor
sbb
lcall
dec
mov
push
jle
fmuls
aaa
popa
mov
mov
inc
jno
push
addr16
mov
test
push
cltd
xlat
test
lret
jns
dec
sbb
jp
jne
mov
cmp
sbb
sar
dec
dec
pop
inc
inc
pop
xor
mov
add
loopne
xor
call
xor
loopne
inc
scas
xchg
fisubrs
sbb
test
mov
mov
out
jle
or
pushf
dec
dec
sahf
and
fxch
push
insb
xor
popf
das
cmp
push
mov
mov
add
shr
dec
or
mov
dec
sbb
imull
test
xchg
sbb
pop
push
and
scas
cmp
loope
inc
jo
xchg
mov
adc
sti
inc
inc
mov
arpl
add
xchg
fsubrl
loopne
cmp
mov
pop
mov
lea
movsl
scas
xchg
sbb
push
sub
daa
mov
xor
sbb
jnp
dec
pop
cmp
cmpsl
ljmp
cmpsl
subb
sub
std
adc
out
in
and
mov
and
ja
int
dec
pop
pop
cwtl
popa
fiaddl
insb
jg
xor
mov
xlat
iret
cmpsb
jb
add
xchg
cwtl
test
inc
jne
pop
fs
mov
lds
popa
rclb
inc
shlb
or
pusha
add
push
push
adc
dec
jns
and
inc
jmp
sub
cmp
mov
jns
das
adc
lret
out
xchg
clc
cvtdq2ps
sbb
jne
je
pop
call
loopne
dec
dec
mov
ds
das
sbb
sub
cmp
repnz
ds
mov
insb
mov
sti
lods
xchg
inc
sub
push
aam
orl
jge
or
pop
inc
iret
in
ljmp
jp
push
adc
xchg
fdivs
icebp
ljmp
mov
call
pop
add
add
int3
xchg
leave
in
inc
cmpsb
aad
xchg
push
sub
int3
ret
ret
adc
arpl
xchg
shrb
roll
and
test
mov
push
scas
pop
movsb
jnp
fwait
jae
loopne
and
icebp
popa
xlat
mov
ss
stc
cltd
aam
xor
sti
push
jge
jnp
scas
add
mov
pop
cmp
test
out
add
aaa
mov
or
fbstp
enter
out
icebp
dec
or
sub
outsb
adc
add
faddp
add
dec
pop
mov
cmc
push
inc
push
shll
add
add
and
mov
push
or
cwtl
aas
adc
add
sub
or
mov
push
pop
loopne
cmp
mov
push
adc
fmulp
fldcw
shlb
std
andb
out
push
dec
mov
cld
dec
andl
sub
leave
pop
outsb
cmp
xchg
sub
or
lods
mov
cmp
fisttps
jp
xlat
lcall
test
xchg
add
xchg
push
sub
adc
fcomps
std
xchg
out
adc
lret
sub
cmovbe
ficoml
popa
inc
iret
add
aas
add
mov
xchg
xor
push
dec
aas
push
xchg
cltd
nop
or
push
fcompl
lret
jae
rolb
adc
or
lea
mov
mov
scas
sub
sub
rolb
stos
aam
jmp
jno
add
xchg
loope
adc
test
jbe
xchg
inc
sti
push
std
mov
in
add
inc
aam
out
push
xor
and
stos
push
sub
or
ljmp
mov
lods
cmc
fs
into
jo
cld
mov
add
jmp
mov
iret
std
pushf
mov
ficoms
shlb
or
pop
pop
pop
ljmp
data16
loop
fldcw
loopne
ja
pop
sahf
outsl
subl
inc
js
ljmp
popf
push
stos
outsl
adc
jb
sbb
sahf
push
mov
pop
mov
lods
outsl
dec
sahf
sbb
mov
in
xchg
pop
cld
push
clc
lcall
fistpll
xorb
jge
push
mov
jge
push
mov
aas
cwtl
or
cld
out
gs
ss
push
mov
rorb
and
cmp
es
bound
fmull
scas
inc
ss
mov
xchg
mov
ret
xchg
push
ret
test
cli
in
mov
adc
adc
std
xor
cmp
fnstsw
testl
js
cs
lods
mov
popa
ss
jns
lcall
add
mov
push
cwtl
cmp
ret
or
test
add
mov
shr
dec
ss
repz
out
fs
jno
sahf
dec
sbb
cli
popf
aas
int
dec
fwait
imul
ret
inc
movsl
lods
lret
pop
call
loope
cmpsb
popa
cmpb
mov
nop
pop
jg
rorb
test
dec
inc
je
xor
xchg
insl
pop
jno
pop
imul
xchg
mov
lret
test
in
mov
sti
jne
outsb
stc
xor
ret
cmp
clc
bound
xor
sbb
insl
call
inc
sbb
repnz
test
inc
popf
repnz
rorl
addr16
mov
scas
pop
and
xchg
and
sub
pop
mov
lods
std
and
inc
lds
mov
pop
scas
jns
adc
out
daa
pop
lock
cld
adc
repz
jg
jmp
add
dec
nop
pop
add
cmp
push
stos
mov
or
in
orb
cmpsb
test
out
outsb
hlt
aaa
out
lds
or
jae
xchg
dec
push
push
lods
imul
mov
xchg
sub
pavgw
add
jo
mov
push
ss
pop
xor
addb
sbbb
inc
test
fstl
in
repnz
fpatan
push
scas
aas
push
mov
xchg
xor
and
mov
pop
pop
push
push
movsl
pusha
imul
xchg
call
sub
mov
jecxz
push
pop
dec
or
mov
pop
mov
push
pop
fstps
out
inc
cli
and
inc
pop
bound
js
mov
push
mov
pop
ss
xchg
mov
negl
xor
mov
sub
imul
sub
cld
xchg
mov
jp
push
cmp
push
frstor
fildl
cmp
pop
jae
xor
adc
mov
adc
cmc
in
pop
adc
mov
adc
add
mov
push
mov
mov
pushf
scas
sbb
cmp
out
addb
sarb
xchg
mov
dec
add
aad
sbb
xchg
retw
imul
outsl
inc
pop
ret
and
scas
out
sahf
inc
cmp
dec
shrl
int
pop
add
mov
or
iret
xlat
es
jnp
in
sbb
push
cmpsl
cmp
pop
rcll
ror
jo
inc
pop
dec
xchg
mov
fcmovu
in
push
jne
out
outsb
insb
jmp
push
testb
mov
repz
xchg
call
stc
xchg
lcall
loope
das
push
lret
and
call
out
sbb
nopl
insl
loop
mov
cmp
xabort
inc
enter
addr16
sbb
clc
inc
into
aad
jnp
pushf
xor
test
jne
cld
movsl
fwait
test
or
mov
dec
xchg
and
fisttpl
xor
dec
nop
iret
es
test
pop
ljmp
ja
pop
test
xor
es
dec
push
and
outsl
xorl
scas
adcb
jp
add
jb
rcr
and
imul
fcomip
adc
sub
cmpl
je
pop
pusha
mov
mov
repnz
mov
idivb
dec
jge
ret
cli
jecxz
aas
loop
or
mov
inc
lds
pop
inc
and
push
add
push
cmp
jnp
pop
inc
dec
addr16
dec
into
and
mov
pop
jmp
sbbl
sti
outsb
and
adc
push
or
int3
ret
imul
jnp
in
je
xchg
cmc
lahf
repnz
pop
loop
xchg
xor
mov
inc
push
pop
stos
pop
mov
clc
cmp
vmread
mov
add
stos
test
inc
jge
cld
rcll
push
insb
int3
push
scas
enter
repnz
ficoml
jecxz
mov
ja
movsb
leave
mov
xchg
shll
inc
dec
gs
push
lea
cmp
push
lea
nop
inc
push
dec
fsubs
movsb
or
dec
xchg
pusha
pop
push
sub
and
cs
dec
fcoml
and
mov
cs
pop
repz
sbb
lods
outsl
filds
xor
loopne
lret
ds
in
jecxz
je
ds
cmp
pop
repnz
jl
xchg
xchg
pop
mov
data16
adc
test
and
repnz
cmp
cmp
xor
mov
and
mov
dec
arpl
jge
jge
and
decb
pushf
mov
fdivrs
lret
jl
jecxz
jbe
shl
inc
sbb
or
sahf
mov
mov
in
movsl
stos
mov
mov
or
or
or
mov
lret
aam
fs
mov
jae
xor
hlt
shlb
test
sar
xor
fs
sarl
add
cmp
cmp
in
push
push
mov
sbb
mov
inc
mov
and
mov
sub
mov
lret
nop
xor
jmp
dec
lds
sub
js
pop
jnp
cwtl
sbb
sbb
test
lds
inc
xchg
stc
mov
outsl
int3
push
in
repz
std
stos
or
aad
xchg
imul
xlat
push
jne
ret
popa
mov
movsb
jle
mov
sub
pop
lret
jnp
sbb
xor
pop
cmc
outsw
and
int3
xchg
lock
jecxz
mov
sub
sbb
aad
dec
or
adc
pop
ror
jmp
jmp
mov
jg,pn
pop
or
add
pop
popa
pop
or
ror
or
pusha
push
push
cmp
mov
and
pop
xchg
push
add
jle
call
sahf
into
gs
and
addl
sub
add
jns
mov
rolb
or
push
mov
addr16
inc
sbb
ret
addb
fcmovne
sbb
mov
bound
shlb
push
cmc
sbb
popa
cmp
jnp
popf
das
bound
mov
in
cltd
dec
mov
hlt
testb
push
lea
loop
in
push
out
clc
cmp
lds
mov
push
jbe
sbb
in
adc
push
and
out
fdivrl
fprem
inc
daa
mov
and
dec
decl
jno
lea
cmp
pop
mov
dec
cmp
inc
push
out
or
pop
stos
out
cmp
xchg
xchg
add
xor
xchg
inc
inc
popa
and
xchg
or
xchg
repnz
xchg
icebp
in
and
jbe
aaa
fwait
mov
adc
jmp
test
pop
mov
sbb
bound
add
es
jnp
xchg
cmp
xchg
mov
out
popf
add
push
mov
popa
xor
cs
push
push
xchg
mov
mov
xchg
es
lcall
dec
xlat
adc
mulb
jge
add
jo
xchg
pop
cltd
aaa
sbbb
dec
jle
sub
xlat
cmp
push
mov
mov
std
ficompl
lahf
pop
and
lds
and
fidivrs
adc
ror
xchg
test
dec
hlt
addb
adc
dec
ficomps
xchg
cmp
jne
pushf
xchg
xchg
mov
iret
inc
mov
inc
xchg
out
mov
imull
inc
cmp
xor
add
je
lahf
fs
inc
inc
pop
es
dec
sbb
aam
add
data16
in
push
outsb
push
mov
dec
add
sub
or
clc
xor
jb
popf
divl
lcall
cmc
insl
dec
adc
jge
scas
mov
lcall
sub
into
mov
push
pop
repnz
mov
popf
inc
pop
sub
sub
aaa
js
pushf
aas
sbb
jg
jmp
sbb
notb
and
cltd
push
fistps
lea
in
leave
test
push
test
lds
mov
xchg
jle
lds
and
mov
mov
jp
jo
imul
mov
lods
or
ss
scas
mov
repnz
repnz
xchg
cltd
add
out
jmp
push
jo
cmp
icebp
inc
xor
insb
jle
mov
jns
rorl
mov
xorb
mov
ds
imul
movsl
ficompl
aaa
sub
xor
dec
addl
pop
es
das
inc
mov
and
ss
jb
pop
mov
or
fdivrs
mov
mov
or
test
scas
xchg
add
xor
sbb
mov
insb
aam
outsb
shll
jbe
cmpsb
sub
inc
pop
mov
sub
adc
das
cmp
jp
shl
and
arpl
push
lcall
xchg
pop
sub
aaa
pop
push
xchg
pop
aas
dec
push
popa
pop
jp
cli
sbb
fistpll
stos
sub
push
sub
cltd
out
push
push
loope
icebp
sarb
push
adc
rcl
fsubr
mul
and
mov
outsb
fildll
enter
fs
mov
lcall
cld
mov
hlt
aas
sbb
mov
ja
mov
or
iret
jne
popl
mov
shlb
aaa
shr
sar
push
dec
mov
das
movsb
int3
lds
dec
fcomps
lret
mov
mov
inc
lods
or
rcr
int
pop
xor
adc
shlb
xchg
or
scas
push
push
pop
cmpl
push
mov
push
dec
jp
mov
dec
into
mov
out
sub
mov
pop
pop
mov
push
push
lcall
mov
sbb
je
out
mov
test
popf
push
sbb
lods
cs
stc
mov
pop
adc
or
int
cld
int
add
arpl
sbb
adc
sti
cmc
lds
cld
push
mov
call
jmp
mov
aad
orl
iret
inc
lock
sub
pop
or
push
lcall
imul
js
adc
jne
mov
daa
lds
push
cmpsd
aam
gs
dec
fmuls
inc
out
add
sub
sahf
or
mov
das
frstor
inc
xchg
scas
or
repz
scas
dec
imul
pop
and
and
add
adc
xchg
add
add
addb
lahf
js
insl
gs
movsl
orl
inc
mov
and
jae
mov
rorl
jo
and
addr16
push
dec
lea
add
les
aaa
pop
rcrl
cmpsb
into
mov
cmc
in
movsl
shll
cmpsb
test
inc
pop
sub
add
pop
ret
outsb
out
cmp
xorb
and
mov
mov
push
jno
mov
js
mov
leave
insb
lret
fcomi
arpl
pop
cwtl
sbb
lock
cmpsl
mov
pop
push
adc
ljmp
xchg
ss
into
mov
mov
ret
es
push
rcrl
inc
hlt
pusha
or
adc
mov
jae
gs
jl
mov
add
in
pushf
cltd
push
push
cmp
mov
daa
push
sub
aaa
cmpsb
icebp
mov
hlt
cmpsl
out
dec
mov
or
in
mov
inc
sbb
mov
pop
inc
pushf
shll
adc
push
adc
movsl
pop
cmpsb
leave
xchg
xor
daa
or
pop
inc
mov
and
lock
cmpsb
lock
push
cmp
std
jbe
jne
inc
jmp
in
xorl
jmp
sub
aam
and
movb
dec
xorl
insl
hlt
lret
lds
xchg
add
rcrl
adc
jmp
clc
and
pop
add
stos
pushf
ret
mov
xchg
femms
loopne
cmp
adc
icebp
dec
stos
idivb
shll
imul
push
dec
mov
sub
divb
stc
cmp
imul
inc
out
enter
stc
xlat
mov
jg
jp
jp
xor
in
push
mov
movsl
xor
cmpsl
aam
dec
mov
rcrb
mov
lock
stc
mov
xor
lock
lds
xor
fdivrs
pop
arpl
add
int3
in
add
dec
inc
cltd
pop
lock
les
and
les
repnz
loope
xor
dec
or
icebp
pop
adc
push
push
std
jmp
xchg
add
gs
cmp
fistl
mov
pop
repz
shrb
push
mov
xor
jae
push
ret
lret
mov
imul
pop
push
cltd
clc
shrl
stos
jno
mov
in
push
jo
sub
or
aad
movsb
jae
mov
jg
les
rcll
xlat
dec
js
ljmp
in
imul
add
loope
aam
inc
mov
fstps
lcall
loopne
adc
push
shlb
test
adc
lea
lds
scas
and
data16
inc
fimuls
arpl
sbb
mull
pop
ljmp
push
sbb
mov
and
jg
aaa
sbb
test
cmp
push
mov
and
dec
adc
lds
fwait
sbb
call
xchg
cltd
lds
int3
les
add
jae
das
aad
outsb
fwait
mov
repnz
ret
lea
xor
or
jle
pop
sarb
stc
push
adc
adc
jbe
dec
ja
fcoml
xor
sub
test
jb
xchg
in
push
aas
aad
add
sarb
xor
scas
arpl
cltd
dec
pmaddwd
lret
sbb
inc
mov
push
addr16
js
std
adc
aad
adc
jecxz
aad
cmp
mov
or
cmp
pusha
mov
lret
jae
mov
jnp
xor
inc
loope
ja
lret
cmp
dec
insl
push
lock
pop
sub
movsl
sub
pusha
push
popa
scas
xchg
inc
addr16
mov
or
xchg
aad
jnp
imul
sbb
sar
mov
or
inc
imul
sub
int3
mov
das
cmp
out
or
out
faddl
out
push
push
add
xor
xlat
imul
pushf
mov
lods
mov
add
and
scas
subb
lret
ret
out
add
ja
sbb
xchg
addr16
jae
rorw
mov
cmp
xchg
mov
fildll
sti
xchg
mov
jmp
inc
insl
pop
and
cmpsl
cmp
dec
gs
mov
mov
clc
xor
data16
ss
mov
mov
mov
in
mov
push
mov
mov
fnstsw
mov
push
inc
adc
mov
popf
dec
pusha
in
shlb
adc
icebp
call
das
cmpsb
aam
xor
js
push
div
mov
decb
sub
inc
mov
leave
cmp
out
bndstx
xchg
fmul
xor
ret
jo
repz
xchg
xchg
loope
lret
lcall
sbb
sbb
repz
addl
cmpsb
std
mov
arpl
lods
jb
mov
dec
pusha
out
add
push
push
lcall
cli
pusha
mov
jl,pn
mov
data16
andps
mov
mov
imul
lahf
insl
daa
cld
sub
cmpsb
mov
cmpsl
hlt
mov
inc
imul
sbb
lods
jnp
push
push
mov
or
mov
or
mov
in
test
or
call
mov
fs
push
jp
je
sti
cltd
test
mov
jae
movsl
fnstenv
add
cli
shl
jnp
sbbb
sbbb
pop
aam
mov
xor
sub
out
loope
mov
loop
push
push
or
out
and
cmc
push
and
fwait
pop
repnz
loop
pop
lret
aas
rorl
rol
mov
mov
fcomi
pushl
inc
cs
cmp
dec
mov
das
jg
cmp
or
push
cs
mov
xor
add
xor
sub
shrl
pop
ljmp
adc
mov
pop
pop
dec
out
int
mov
lcall
push
les
xor
dec
mov
insl
inc
movsb
pop
call
or
pop
shrl
fidivrl
cmpl
fcoms
or
addr16
movb
cmc
dec
scas
cmpsl
nop
mov
mov
and
stos
xor
dec
mov
loopne
out
out
add
cmpsl
jns
add
xor
out
movsb
sti
cld
mov
push
pop
ds
cmc
lods
int3
pushf
rorb
filds
imul
inc
mov
cmp
call
lret
mov
outsl
lahf
sbb
xchg
ljmp
insb
mov
orb
or
repz
stc
imul
int3
jle
sbb
xor
sub
lret
fistpll
xchg
adc
lcall
sub
imul
mov
push
movsl
xor
pop
imul
outsl
jl
push
pop
icebp
mov
sub
lods
push
jge
movsb
adcb
shl
jmp
jl
fstpl
push
pop
das
call
insl
dec
or
cmp
pop
jnp
push
mov
jge
cmc
xor
cltd
or
call
cmp
xchg
scas
ds
jne
jecxz
aas
adc
sbb
mov
xchg
lea
adc
dec
and
cmp
cld
stos
or
nop
icebp
pop
jg
sarb
push
xor
jns
inc
pop
sbb
dec
and
movsb
dec
leave
jg
scas
dec
dec
leave
out
in
push
push
xchg
mov
lahf
test
jg
ljmp
addr16
int
aaa
std
adc
rcl
mov
sti
repz
pop
filds
add
or
data16
inc
pop
repz
cmpsb
cli
dec
pop
or
mov
gs
xchg
sbb
repz
sbb
inc
inc
dec
adc
push
testl
pop
mov
mov
mov
inc
movsb
js
faddl
push
xchg
pop
repnz
mov
scas
adc
outsl
gs
xor
pushf
sub
xchg
mov
lret
push
cmpsb
and
cmp
or
lcall
adc
pop
call
mov
int
xchg
xorl
in
call
dec
in
idivb
ficomps
sbb
xorb
adc
mov
xor
pop
test
xchg
cwtl
cwtl
cs
fstpt
sub
scas
test
dec
stos
out
enter
push
mov
cmpsl
lea
and
push
fmull
xor
jns
mov
lods
mov
cwtl
aaa
cmp
sbb
mov
add
xchg
inc
push
shlb
and
push
sub
imul
shrb
aas
dec
push
adc
inc
lods
push
push
mov
scas
nop
mov
cmp
inc
scas
notl
call
cmp
pop
mov
pop
jno
inc
mov
jae
js
or
xor
adc
lret
lods
clc
insb
enter
aas
dec
subl
lret
adc
push
push
sub
mov
movsl
arpl
pop
xchg
mov
pop
pop
add
xor
jne
cli
gs
push
mov
dec
nop
jb
lret
dec
dec
push
push
aaa
in
sub
xor
ficoml
jp
int3
mov
adc
push
into
mov
or
lods
sub
push
push
xor
jecxz
lahf
pop
ret
dec
movsb
icebp
xchg
dec
push
pushf
fisubrl
flds
xor
push
mov
jp
sti
das
pop
ffreep
outsb
mov
rclb
sbb
sub
enter
int
js
imul
mov
popa
dec
pop
xlat
and
cmpsb
mov
xchg
cli
cld
mov
decb
fs
dec
pop
pop
call
dec
push
xor
scas
adc
and
xchg
push
pop
adc
clc
mov
pushl
push
sarl
dec
push
int3
je
mov
subl
in
incl
cmp
cli
mov
mov
cwtl
adc
lahf
mov
bound
ds
pop
or
and
cmp
test
mov
leave
dec
push
pop
lods
aas
sub
imul
mov
mov
js
add
sbb
sub
pop
inc
sub
mov
xchg
xchg
cmpsb
es
add
dec
adc
push
insb
push
jp
sbb
pop
pop
jge
mov
ljmp
dec
cmp
jne
shrl
jmp
sarb
mov
aas
mov
fdivrl
outsl
xor
dec
adc
and
icebp
js
adc
ffree
jecxz
mov
inc
pop
sbbl
mov
push
ja
mov
int3
mov
jp
inc
inc
mov
insl
pop
hlt
cmp
aad
fldenv
and
scas
sahf
sti
fcomps
ja
dec
loop
test
add
lods
stc
repnz
push
imul
pop
mov
testl
test
sbb
loop
popa
or
out
cmpsl
movsl
xchg
leave
xor
mov
orb
and
cmp
je
add
rcrl
aad
in
cmpsl
cmp
mov
mov
sub
sub
in
lret
cmpsl
ljmp
inc
lods
lret
mov
pop
loope
test
popa
pop
pop
fisttpll
pop
loope
sbb
lret
cld
push
ds
shlb
push
je
mov
pop
test
sbb
add
dec
adc
or
push
cmpsb
xchg
dec
sbb
sub
cmp
jle
loope
dec
cwtl
inc
push
mov
stos
leave
inc
and
daa
ja
out
shrb
jb
sub
mov
sbb
xor
sub
sub
lods
jmp
and
jae
jmp
jo
mov
inc
inc
ds
xor
cmc
xor
xchg
xchg
xchg
dec
call
popa
fadds
mov
inc
iret
lds
mov
add
adc
rcrb
add
and
mov
int
out
push
mov
pop
jl
mov
fdivl
dec
add
jo
ljmp
lock
lea
sbb
sub
fdiv
adc
std
cs
sbb
ljmpw
mov
mov
jno
stc
faddl
outsb
and
mov
or
ret
ret
mov
jg
xor
mov
clc
sbb
sbb
xor
jg
out
fldenv
add
xor
roll
test
mov
pop
push
push
insb
pop
loope
nop
pushf
jns
lret
loop
cmp
xor
jb
pop
jecxz
mov
fdivrl
xor
les
sahf
xor
movb
mov
mov
cs
testb
sbbb
cmp
ficomps
jl
outsb
xchg
xor
add
cmp
push
test
jbe
sarl
mov
mov
stc
sub
shl
add
xchg
xchg
jns
add
cli
xchg
insb
imul
fistps
outsb
jmp
sbb
add
repz
cltd
mov
add
jbe
scas
push
sbb
cmpsl
mov
psllq
int
sub
sti
adc
dec
jnp
mov
daa
ljmp
scas
xchg
jecxz
xchg
xchg
push
mov
test
cmc
mov
flds
cld
scas
jecxz
mov
subb
xchg
fnstenv
movsl
push
rcrl
pop
jo
jmp
gs
cmp
fisubrs
testb
jno
test
mov
lret
jg
sbb
push
cmpsb
cmpsl
les
loopne
push
aaa
pop
jne
mov
push
dec
int
stos
loopne
sub
sbbl
das
xor
fldt
flds
and
jnp
das
and
mov
cmp
pop
xor
dec
and
lret
inc
test
push
adc
cmpsl
test
dec
lods
pop
xlat
inc
adc
jmp
pop
les
stc
mov
pop
out
sbb
scas
addl
mov
adc
push
imul
test
inc
fsub
mov
xor
decb
adc
add
rcrl
sbb
sub
arpl
fldl
lret
repnz
or
test
mov
addl
mov
dec
cmp
out
mov
pushf
fistps
mov
jecxz
mov
shlb
lahf
inc
icebp
and
push
int3
xchg
je
mov
cld
sbbl
mov
push
in
pop
cmp
das
aam
js
xchg
add
and
xchg
xor
add
std
dec
push
int3
mov
adc
sub
xchg
jb
xor
xor
cmp
push
pop
xorl
push
lock
shrb
adc
pushf
int3
push
lret
loope
xor
shlb
in
mov
push
dec
xchg
mov
in
mov
test
push
cmp
pop
mov
lcall
or
fildl
sbb
dec
sbb
pop
mov
mov
stos
ret
jl
add
sbb
loope
xor
stos
test
xchg
mov
imul
adc
dec
aad
lea
stos
cmp
jae
rolb
daa
mov
outsb
pop
xor
aad
repz
sub
outsb
lahf
push
jg
and
aam
insb
inc
fstl
leave
repz
addr16
add
in
and
mov
and
cltd
dec
add
ret
jge
lret
or
cmp
mov
lcall
jecxz
cs
aas
mov
mov
jb
add
shll
and
and
add
and
add
movl
fsubp
notb
cs
outsl
clc
xor
icebp
jl
mov
xchg
push
or
or
aas
pop
pop
jae
ret
insl
in
mov
cmp
mov
or
shrl
les
gs
add
icebp
mov
pop
and
sbb
jae
sbb
int3
scas
bnd
mov
stos
dec
sbb
scas
aaa
loope
mov
data16
add
repnz
xchg
dec
icebp
int
cltd
push
mov
pusha
roll
and
mov
jg
xorb
fnstsw
shlb
xchg
jmp
dec
psrlw
fsubrp
sub
push
nop
dec
test
loopne
pop
add
lea
test
mov
sbb
xchg
sub
push
rorl
insb
cmpsb
sbb
mov
lock
inc
jg
negl
bnd
loope
adc
jne
mov
scas
sahf
xor
xchg
sub
mov
inc
fbld
das
sub
and
call
adc
bound
idiv
in
jbe
call
xchg
lds
fwait
outsb
loope
data16
in
mov
adc
enter
repz
inc
mov
inc
inc
sub
aaa
les
and
loop
mov
mov
js
in
adc
jb
loope
mov
mov
aad
lock
test
jecxz
dec
out
int3
inc
cmp
cs
in
ja
pop
mov
cld
lahf
cmp
cmp
ret
lahf
das
inc
ret
xchg
and
dec
fistpll
js
mov
sbb
in
pop
xor
mov
push
push
fisubs
lret
aaa
push
cmp
cmc
jb
rclb
loop
sub
mov
jae
adc
xor
mov
jecxz
and
or
pop
ljmp
rclb
cmpsb
sub
xchg
or
inc
mov
int
or
sbb
jp
fxch
lods
inc
xor
inc
mov
sub
repnz
xor
scas
or
xchg
jne
jno
scas
jmp
insb
cmc
jge
cmpsb
jae
popf
mov
push
jg
mul
pop
pushf
mov
dec
shr
aaa
mov
gs
mov
push
or
les
aas
mov
or
ret
push
pop
test
repz
or
sub
jbe
or
std
fadds
subb
inc
out
jnp
lahf
outsb
pusha
cmp
cmc
ss
mov
pop
adc
mov
nop
push
sbb
sbb
pop
mov
jo
inc
inc
inc
popa
xchg
cltd
ficoms
push
xchg
jbe
push
mov
push
inc
sub
mov
cmp
mov
cmc
add
xor
jge
inc
mov
mov
mov
inc
mov
jl
test
add
add
lcall
movsl
mov
js
divl
int3
aaa
daa
fidivrl
fimuls
mov
mov
std
pop
add
pop
daa
outsl
sbb
inc
cwtl
loopne
mov
dec
xchg
icebp
dec
std
test
movb
sub
mov
or
mov
scas
out
or
push
cli
sbb
cmp
or
push
and
lods
stc
push
iret
push
mov
mov
jo
scas
outsb
or
test
daa
jnp
repnz
mov
ss
shll
sub
sbbb
jg
jl
loopne
push
adc
or
into
mov
jbe
or
ds
jmp
dec
mov
scas
je
and
inc
add
mov
clc
pop
movb
add
and
mov
jo
subl
push
jmp
in
repnz
pop
sti
test
cmp
sbb
dec
sub
mov
mov
mov
cs
in
aas
ret
aam
sbb
adc
rorb
cmc
std
fsubrs
adc
notb
insb
add
inc
xlat
ds
mov
leave
pop
push
adc
sbb
lret
and
sub
not
inc
mov
cmp
outsb
xchg
cmp
adc
push
test
mov
ljmp
cld
push
rcrl
pop
je
sarb
jo
jmp
jns
lds
std
mov
inc
jp
lods
rorl
inc
enter
dec
sub
lcall
fs
loopne
je
or
stc
clc
lret
into
sbb
mov
jb
jmp
push
mov
xor
xchg
mov
xchg
fldt
push
mov
add
movsb
mov
daa
cmpb
xchg
in
cmc
int3
in
divb
ret
shlb
add
mov
inc
stc
jns
lret
js
and
rorl
pop
mov
pop
inc
insl
jae,pt
inc
mov
mov
xchg
jnp
clc
in
outsb
cmp
mov
cmp
fsts
inc
xchg
mov
mov
push
fldt
sbb
dec
rclb
jl
xchg
sbb
sti
mov
dec
std
popl
mov
or
cltd
push
inc
mov
xchg
lcall
fs
daa
pop
fidivrs
mull
pop
rclb
test
repz
push
jnp
js
add
push
sbb
sti
sbb
outsb
adc
push
or
lret
and
movsl
scas
imul
pop
les
inc
mov
in
ret
iret
nop
movups
xchg
loope
inc
ficomps
loop
and
lea
arpl
sti
xchg
pop
xchg
out
dec
inc
xor
dec
int
xor
outsb
xlat
jle
or
popf
mov
lods
cmpsb
adc
cs
jne
imul
imul
mov
push
cld
rorb
int3
xor
push
cmp
repz
push
dec
sbb
mov
idivb
repz
cwtl
les
movsl
call
dec
es
insb
xchg
fimull
sbb
and
ljmp
xchg
mov
cmp
dec
pop
mov
adcb
jecxz
js
push
jle
xchg
sub
ret
adc
cli
mov
flds
ja
or
sbb
test
mov
lret
xor
cli
js
inc
mov
lods
js
or
inc
xlat
enter
mov
mov
jb,pt
dec
rclb
adc
mov
jbe
mov
vsqrtss
lods
push
fidivs
ret
lret
mov
insl
mov
in
push
rorb
xor
ja
sub
lcall
lahf
lahf
test
jp
repz
mov
das
out
push
pop
mov
xchg
dec
mov
jbe
xor
mov
orl
cmp
push
mov
add
outsl
js
ja
xchg
ljmp
dec
mov
jg
sbb
imul
xorb
add
push
sbbb
xor
test
adc
inc
mov
or
inc
sarl
lea
mov
push
imul
lret
movd
lahf
cmpsb
mov
and
in
repz
and
lret
push
loop
stc
pushf
xor
dec
xchg
push
xor
and
insb
pop
cs
jg
loope
ds
insb
je
movsl
lock
and
adc
sub
test
lret
push
shrl
xorl
mov
ret
push
mov
sbb
nop
adc
sub
inc
pop
fs
xor
pop
test
mov
sbb
mov
xchg
sub
shll
adc
push
stos
xor
inc
sub
lret
adc
xor
out
jecxz
push
mov
clc
push
pop
push
and
hlt
dec
dec
lcall
xor
stc
cmpb
cmp
sub
shr
or
addr16
leave
fwait
sbb
adc
rorb
and
shr
ss
push
mov
cmp
cmp
pusha
nop
sbb
in
movhps
inc
shl
subb
cmp
call
outsl
pop
je
or
add
test
ret
test
testb
fnstsw
cmpsb
sbb
jp
cmp
xchg
dec
repz
push
pop
in
jnp
movsl
sbb
jl
sbb
push
pop
bound
mov
aaa
jp
dec
and
stc
pop
in
pop
push
mov
mov
lock
or
jge
adc
cld
xchg
pop
and
test
and
mov
imul
loope
imul
in
cmp
mov
adc
sbb
cmpb
xchg
imulb
repnz
sub
or
xchg
mov
dec
std
stos
das
sub
push
sbb
push
out
aad
hlt
inc
outsl
imul
push
test
shr
or
sub
mov
jge
icebp
push
lds
mov
dec
lods
push
lret
scas
mov
fcomps
adc
dec
or
sbb
ljmp
test
sub
inc
xchg
mov
fnstsw
cmp
andl
stos
aam
or
push
fldl
jae
sbb
test
imul
and
cmp
xchg
sti
sar
inc
ret
fcmovnbe
icebp
or
adc
in
xor
add
js
gs
push
inc
stos
sbbb
iret
jmp
ss
mov
xlat
or
or
out
xor
or
fs
inc
out
adc
lret
fdivl
pop
adc
push
pop
int
jmp
les
cmp
in
jae
or
daa
incl
shr
in
xor
loop
mov
dec
stos
out
sub
jmp
and
lea
inc
rcrb
or
js
ljmp
int3
dec
xchg
mov
lods
mov
jns
xor
sbb
adc
pop
push
mov
mov
push
repz
cmpl
mov
cltd
fiadds
mov
gs
clc
daa
mov
loop
addr16
testb
in
incl
mov
mov
push
sarb
cmpb
xchg
jo
addr16
pushf
push
push
outsl
adc
lock
xchg
mov
pop
hlt
pusha
sub
cwtl
orb
ljmp
lret
sahf
sub
nop
and
cmp
sbb
mov
push
hlt
mov
out
push
out
push
arpl
jmp
movsl
push
scas
loopne
push
std
sub
ret
jno
sbb
lock
xor
shrl
sahf
idivl
mov
mov
lock
shlb
lcall
fisttpl
lock
pusha
ret
movsl
sub
cld
fnstenv
repz
jp
out
in
sti
xor
outsl
jns
movsl
push
mov
lahf
insl
addr16
out
inc
int3
das
jnp
lret
add
ret
sahf
sub
inc
test
lods
repz
fidivrl
repz
and
inc
shrl
bound
sbb
xchg
mov
fisttpll
data16
fst
xor
fcoms
adc
fbstp
jp
mov
dec
les
shlb
inc
repnz
sbb
sub
sub
aaa
push
sub
scas
rclb
shlb
and
push
cmc
mov
mov
mov
les
pop
sub
bound
testl
lock
or
add
or
nop
fwait
add
cld
movsl
sub
rcrb
mov
cmp
je
and
or
outsl
lods
jg
push
faddl
push
adc
mov
in
push
lahf
dec
testl
pop
loope
dec
testb
outsb
aaa
sarl
jg
dec
fdivr
sbb
stos
sub
jecxz
sbb
ljmp
lret
pop
adc
pop
xchg
insl
jns
sub
mov
and
shr
js
xor
imul
add
fdivrp
sahf
scas
orl
push
roll
outsl
adc
cld
pop
in
mov
leave
push
xor
cmp
dec
fsubrl
sbb
jae
xlat
popf
lds
call
and
add
jnp
jl,pt
push
or
shl
mov
loop
lods
and
leave
cli
inc
stc
jl
cmpsl
cmc
xor
imulb
push
xor
fldl
int
and
mov
fisttps
je
fsubs
jns
xor
insl
and
mov
je
das
dec
and
addr16
sarb
mov
add
jb
movsl
roll
sub
mov
jge
adc
inc
and
mov
fistpl
lahf
or
sub
daa
addr16
cmc
fstl
pop
rclb
outsl
mov
fisttps
ret
ficompl
inc
ret
cli
sbb
in
jl
lret
mov
jp
es
lods
in
mov
imul
inc
sbb
out
in
jl
push
xor
mov
scas
push
xchg
scas
shrd
jno
mov
out
mov
scas
push
scas
jbe
stc
stc
push
cs
imul
test
cld
fwait
sbbl
ret
repz
mov
fildl
and
push
icebp
and
popa
cmpsl
test
cli
mov
popa
push
mov
aas
lods
mov
daa
mov
lods
divl
ficompl
outsb
jecxz
mov
pusha
and
out
dec
mov
stc
push
imull
stos
xlat
inc
add
pop
btc
sti
mov
lock
push
sbb
or
js
push
mov
out
scas
jecxz
push
filds
insl
pop
nop
adc
mov
fbld
jae
insb
sti
rclb
xchg
jo
adc
clc
insl
sub
and
mov
addr16
push
int3
inc
pop
loope
add
mov
testl
xor
xchg
mov
ss
or
xchg
jecxz
xorl
stos
shlb
aas
xor
in
ret
shll
jns
mov
mov
push
sbb
es
lds
fildll
mov
fld
arpl
inc
adc
out
mov
and
ja
push
dec
cmpsb
in
test
shlb
push
movsl
adc
call
les
sti
rorb
cs
jae
sub
cmp
pop
stos
mov
lods
push
sbb
cmc
inc
testb
jl
adc
jge
int3
cwtl
sub
pop
mov
mov
out
or
enter
fdiv
test
adc
inc
lret
shrl
mov
sbb
fiaddl
test
popf
adc
inc
add
push
sub
cmp
mov
sbb
repnz
push
inc
std
push
inc
sbb
jno
das
movsb
xor
xlat
lcall
sbb
out
inc
sub
jno
adc
push
outsl
adc
jg
pop
jo
xor
leave
mov
add
test
or
int3
push
mov
add
dec
mov
fistpll
push
pop
arpl
and
mov
jmp
fisttps
and
or
dec
xlat
mov
mov
or
or
inc
addr16
inc
or
pop
daa
cmpsb
loopne
mov
cmpsb
imul
aad
ss
lret
xor
mov
or
inc
loop
mov
jge
and
mov
pushl
stos
addl
lods
dec
inc
gs
mov
sbb
loope
pop
add
add
xchg
mov
dec
dec
cmp
int
ret
pusha
xor
jge
dec
cmp
inc
scas
test
or
insl
cld
lahf
dec
fisubs
and
stos
imul
push
adc
inc
insb
jg
cmp
xchg
inc
std
dec
insl
xor
repz
imulb
adc
jge
jae
sahf
lds
stos
pop
in
xor
push
mov
dec
adc
sub
jle
fmuls
mov
nop
mov
mov
mov
dec
xor
sbb
cmp
insl
ret
dec
mov
sahf
test
cmp
add
mov
in
mov
or
shrb
inc
mov
and
popa
or
imul
and
or
fidivrl
test
std
fnstenv
lods
dec
arpl
arpl
fadds
cmp
lret
xchg
lea
adc
test
into
inc
scas
ljmp
push
fwait
lock
lahf
loopne
nop
pop
dec
sbb
scas
movl
push
mov
les
xchg
sbb
sub
xor
inc
xchg
imul
and
icebp
pop
pop
and
je
push
push
xlat
push
pushf
jl
cmp
cmp
jb
les
sbb
call
call
adcl
sbb
xchg
mov
js
ss
inc
sub
jmp
add
push
cmpl
inc
pop
insl
or
mov
insb
push
stos
fcmovbe
clc
lcall
sub
call
inc
or
call
or
and
xor
fs
imul
xchg
mov
loop
and
adc
xchg
jno
mov
lock
mov
scas
test
jmp
cmpsb
popa
rcrl
mov
push
pop
in
or
dec
cld
mov
std
mov
aam
or
sub
sahf
fisubrl
std
mov
ja
or
or
cmp
mov
dec
in
mov
repz
mov
inc
lea
lock
mov
test
cmc
test
add
shll
dec
subl
test
adc
sub
mov
jle
inc
jge
mov
xorl
cwtl
sub
int
xchg
adc
inc
int
mov
xor
sbb
stc
test
test
cmpsl
dec
lods
repnz
xor
mov
mov
mov
std
iret
dec
aam
and
jno
cwtl
or
pop
pop
jecxz
addr16
mov
xchg
mov
cmp
inc
leave
mov
xchg
pop
push
push
bound
xor
pop
or
mov
sbb
rorl
data16
lret
mov
movsb
insb
ds
into
sbb
shlb
bound
push
in
dec
mov
xchg
lock
cmp
bnd
aad
pop
test
or
fsubrl
shll
xor
sub
movsb
out
adc
sub
pop
lret
lds
popf
ds
test
mov
push
sub
sub
sub
aaa
xor
and
cltd
lret
or
clc
std
push
dec
jp
loopne
push
push
ss
lds
enter
andl
mov
jns
mov
mov
cmp
lods
push
notl
jmp
fstl
mov
ret
xchg
shll
addr16
mov
addr16
lcall
dec
lock
dec
jecxz
adc
fsubrp
inc
or
pop
out
xor
imull
int
mov
shrb
cmpsl
sub
mov
xchg
mov
cmp
popa
xchg
pop
cld
inc
add
dec
aas
jp
stc
sub
and
mov
sbb
cmp
pop
cltd
sub
out
sbb
push
and
xor
lods
inc
scas
outsl
sub
pop
push
pop
sub
bound
push
sub
mov
insb
jl
scas
mov
sbb
repnz
loop
loop
scas
dec
mov
fs
loopne
dec
mov
sub
in
dec
in
sbb
mov
enter
cmpsl
mov
test
and
ret
jbe
sub
add
add
cmp
add
add
add
add
add
add
push
jo
add
add
add
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
